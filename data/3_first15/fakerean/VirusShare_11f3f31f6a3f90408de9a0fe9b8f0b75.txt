sbb
add
adc
push
push
jnp
movsl
js
and
jnp
jge
out
std
cwtl
inc
loopne
cs
movsb
daa
imull
out
dec
push
andl
mov
repz
fisttpll
test
add
pop
xor
dec
arpl
or
mov
sub
cs
outsl
mov
or
or
or
shr
mov
or
pop
cmpsb
push
fidivs
sub
outsl
mov
lods
iret
cmp
mov
jmp
and
dec
push
sbb
mov
inc
add
push
xchg
lahf
sbb
dec
inc
addr16
sbb
mov
mov
data16
xlat
out
lret
jno
aad
ds
mov
mov
fidivrs
xlat
jg
cmp
jo
mov
adc
pop
fs
lds
cmp
sbb
pop
test
sbb
add
fs
stc
repz
aas
scas
adc
sub
in
add
gs
cli
jnp
push
jge
je
inc
sbb
pusha
dec
stos
xor
test
push
xor
fwait
xchg
out
repz
pop
clc
test
rclb
push
sbb
xor
sub
mov
mov
fisubl
sar
mov
xor
mov
xor
int3
popf
stc
mov
xchg
sub
inc
das
fnstcw
mov
loope
pop
movsb
mov
nop
xchg
fstl
in
xchg
into
ds
or
add
sub
ja
xor
int3
notl
das
pop
addr16
sub
idivl
push
xor
dec
cmc
sbbb
xlat
cmp
mov
je
cltd
ret
test
inc
mov
jnp
stos
sub
mov
mov
xor
push
adc
pop
xchg
or
fidivrs
push
test
fisttps
orl
mov
cmc
lods
sar
insl
out
inc
cmc
cmpsb
or
jle
sub
cltd
rcrb
or
cmpsl
mov
add
popf
fbstp
mov
js
mov
xor
mov
or
inc
int3
scas
lods
ret
mov
sarb
push
pop
mov
add
fdivp
scas
mov
pop
lds
cli
inc
adc
mov
mov
in
rol
into
fsub
stos
sbb
mov
inc
leave
xor
inc
dec
cmpsb
inc
dec
cmpsb
insb
push
pop
dec
testl
fdivrl
add
push
or
hlt
fdivl
adc
insb
mov
mov
iret
jns
fiadds
xchg
aam
adc
mov
lea
outsb
mov
pop
int
test
test
mul
jns
pop
lods
out
add
lret
pusha
stos
scas
mov
xor
sub
xor
adc
pop
xchg
jbe
cltd
hlt
lret
insb
jae
pop
pop
je
jbe
mov
push
sub
scas
add
mov
sbb
loopne
mov
into
xchg
pop
mov
jne
jno
arpl
jmp
pop
mov
imul
inc
imul
aam
mov
and
jg
xchg
rcl
cli
xchg
adc
push
subl
repnz
aad
inc
ss
insl
cmpsb
mov
gs
arpl
sahf
cmp
imul
push
pushf
ds
dec
ss
faddl
adc
out
mov
mov
cmp
aas
std
mov
add
jle
icebp
mov
push
in
jg
es
pop
cli
xlat
cmpb
jp
inc
push
cltd
outsb
xchg
add
inc
mov
test
xlat
aas
lcall
daa
test
insl
mov
mov
cwtl
pop
lret
add
test
stos
and
push
andl
shll
ds
mov
xlat
xchg
nop
xor
movsl
pop
call
repnz
outsb
xchg
ficompl
and
push
cmp
imul
fimull
mov
lret
jecxz
adc
jp
iret
hlt
sbb
pop
jle
inc
in
sarb
mov
femms
in
adc
dec
dec
xor
pop
shlb
add
imul
in
cmp
movsb
sbb
das
push
inc
xchg
jp
cltd
fwait
cmpsl
daa
push
test
add
js
in
call
sub
xchg
iret
push
das
fs
stc
mov
and
fnsave
dec
sub
mov
sbb
sub
sub
xlat
cltd
xor
test
pop
inc
cmp
fsubrl
repnz
sahf
push
or
dec
push
loopne
fisubrl
mov
sbb
mov
pop
xor
movsb
addr16
in
add
out
movsb
or
push
imul
bound
jge
rclb
icebp
xor
pop
jp
mov
jo
out
push
mov
cwtl
mov
mov
shrl
and
mov
xorb
outsb
dec
xlat
inc
xchg
loop
dec
nop
fistps
inc
push
cmp
jge
loop
cmc
mov
xchg
cwtl
pop
aas
loope
add
lcall
inc
fwait
lahf
pop
loop
mov
pushf
jo
scas
jbe
pop
stc
jle
push
push
adc
repnz
ds
add
jmp
pop
jp
andb
ror
inc
push
orb
shrb
repz
add
pop
dec
xor
out
lcall
xchg
iret
sub
test
xor
andb
int
sub
push
inc
sub
pushf
mov
inc
cmp
add
int
into
cmp
mov
aam
test
xorb
pop
jmp
mov
lods
xchg
pop
fisubs
lahf
stos
int3
or
mov
pop
lahf
or
in
fdivl
sbb
xor
bound
call
clc
mov
test
pop
xor
mov
xchg
and
or
hlt
or
and
js
dec
cmpsb
xlat
lcall
gs
cld
adc
pop
jno
in
and
adc
int3
cmc
add
das
stos
icebp
inc
orb
sub
sub
pop
test
icebp
fnsave
jmp
in
inc
rclb
jno
in
push
cmp
divb
iretw
and
add
push
mov
inc
mov
adc
sub
call
sarl
jmp
adc
mov
loop
sub
cmp
out
xor
push
std
sbb
and
push
cld
sbb
fidivrl
pop
xlat
daa
insb
imul
scas
ret
mov
out
bound
jae
mov
rcr
lret
stos
push
push
cs
cmpl
inc
int3
test
aad
xor
xor
and
pop
jnp
je
mov
and
test
shlb
bound
mov
fcoms
fdivl
int3
divl
xchg
xor
jb
test
nop
rolb
cmpb
fstl
mov
and
sarb
inc
in
sbb
fisubs
fists
dec
fnstcw
shll
push
fcomip
sub
pushf
xchg
push
inc
cmpsb
dec
test
sub
in
or
stc
push
mov
test
int
mov
mov
stc
repz
cmp
neg
sbbb
aas
mov
sarb
andl
movl
and
mov
seto
loope
adc
sbb
loopne
jns
mov
adc
cmpsl
scas
out
adc
out
add
inc
mov
mov
mov
inc
leave
pop
scas
adc
aad
outsb
push
mov
out
in
mov
rcrl
std
add
shll
mov
jns
dec
out
sbbl
je
jo
dec
xchg
pop
ret
outsb
test
cwtl
fisubs
jmp
movsl
pop
div
and
inc
or
test
ja
inc
sbb
cmpsl
xchg
insb
sarl
pusha
fsubr
cltd
ljmp
adc
arpl
jg
add
sarb
popf
in
mov
mov
xor
por
mov
mov
and
rolb
xlat
ljmp
fisubs
mov
cs
mov
pop
es
inc
xchg
out
imul
xor
sbb
js
cltd
sub
pop
je
sub
mov
hlt
in
cltd
push
push
inc
dec
push
clc
insb
imul
decl
cli
xchg
lcall
stc
push
push
cmovno
leave
lods
pshufw
stc
icebp
aaa
pushw
adc
mov
stos
cmp
xor
mov
mov
lret
jnp
mov
sub
inc
mov
lahf
shrl
arpl
add
adc
movsb
mov
sarl
push
fisubrl
ds
loopne
lods
mov
dec
mov
push
lahf
test
in
flds
push
inc
mov
clc
insl
je
jp
push
es
cmc
stc
loop
scas
push
jp
or
inc
jbe
pop
inc
lcall
jno
enter
jae
aaa
test
pop
movsl
pop
xor
out
xchg
mov
cmpsb
inc
push
mov
xor
sarb
lock
push
fnsave
ljmp
call
lss
sti
movsb
xor
std
fwait
add
outsl
imul
int
cmpsl
sub
aad
rcll
enter
ret
imul
mov
xorl
sti
sub
loopne
cmp
jge
cwtl
dec
cmp
jne
jp
mov
rclb
sbb
sbb
sbb
cli
out
and
xor
mov
sub
mov
fdivrl
cmp
lahf
and
cltd
xor
aad
out
sub
push
lcall
or
cmpsl
jge
or
add
or
push
cwtl
jno
shlb
sub
lods
out
pop
clc
sbb
dec
repnz
out
push
xchg
adc
xor
pop
scas
loope
out
dec
hlt
lods
xchg
sub
into
push
mov
mov
xchg
shr
mov
push
cmpsl
dec
mov
enter
rol
fwait
inc
lds
loope
or
mov
out
sub
inc
into
movsb
mov
sahf
out
lcall
and
xchg
inc
mull
jecxz
push
les
dec
clc
shll
mov
sahf
clc
jg
aas
adc
inc
dec
pop
xchg
mov
sbb
insl
inc
fcmove
jbe
jp
sbb
ss
jb
jp
inc
fcomps
xchg
sub
mov
movsb
pop
mov
dec
imul
push
jno
dec
scas
aad
and
iret
ss
mov
dec
scas
xor
call
push
in
and
inc
scas
and
jnp
fstps
and
pop
out
das
in
ds
jno
pop
test
mov
sahf
inc
sbbl
pushl
push
in
fwait
adc
es
pop
jne
adc
insb
xchg
inc
fs
mov
das
lret
inc
sub
loop
inc
movl
test
jns
stos
lods
mov
sbb
out
mov
ja
push
or
icebp
sti
aaa
mov
cmp
dec
cmpsb
dec
adc
mulb
daa
inc
cld
arpl
fldz
mov
or
lock
adc
adc
daa
subb
les
xor
mov
mov
sbb
dec
sbb
or
fidivrs
fdivs
push
mov
add
inc
lock
jb
and
lods
mov
xchg
and
dec
xor
fidivs
leave
mov
sbb
shlb
cmpsb
xorb
mov
pop
sub
sbb
xchg
pop
jnp
gs
in
and
jno
xlat
aaa
dec
rcrl
sbb
in
mov
stos
mov
out
mov
cmp
outsb
jae
mov
ds
add
pslld
test
jb
in
fwait
jb
xor
jle
mov
sar
andl
dec
inc
xchg
divl
mov
aaa
notb
movsl
inc
in
pushf
out
push
imul
add
adc
repnz
out
push
aad
jp
mov
xchg
jge
movsl
les
xchg
jl
gs
shl
add
or
or
pop
popf
add
cmpsl
adc
push
js
les
xor
cwtl
fldl
inc
stc
sbb
jno
icebp
mov
ja
test
icebp
xchg
loop
iret
lods
roll
icebp
ja
stos
outsb
test
leave
add
adc
lock
mov
add
jo
mul
cmp
inc
pop
mov
test
pusha
leave
fldenv
fadd
xorl
js
das
cmp
xorb
sbb
xchg
push
adc
xchg
leave
pushw
orb
out
leave
push
jge
pushf
lret
mov
xchg
push
daa
fidivl
scas
cmp
adc
cmpsb
movsl
stos
lods
aas
lods
loope
or
mov
pop
push
lds
pop
mov
jb
shrl
lea
cmpsb
enter
movsb
mov
sub
or
inc
decb
shrb
shll
icebp
fldl
test
push
cmp
and
cmp
in
xchg
cmp
jmp
sub
aaa
xor
enter
fcoml
mov
aaa
into
jno
mov
enterw
push
fs
xchg
jge
popa
sbb
push
lock
fdivrs
jns
test
sub
sub
mov
push
cmp
mov
lret
insl
loopne
ficomps
jmp
cwtl
xor
jne
data16
iret
cmp
mov
add
adc
leave
pushf
mov
orps
push
insb
mov
cmp
ret
push
mov
mov
lea
stc
inc
stos
out
xor
push
arpl
or
sbb
out
or
and
loop
sti
and
sub
add
jge
outsl
fldt
mov
movsb
imul
shrb
repnz
call
add
mov
sti
mov
ja
push
push
das
fcmovne
les
rolb
ret
int
test
pop
mov
xor
icebp
add
aaa
leave
push
ja
push
cmp
mov
popa
scas
push
sahf
test
mov
roll
test
mov
js
outsb
cmp
stos
inc
pop
imul
lret
mov
test
xor
jl
mov
push
adc
pop
mov
inc
cli
mov
cltd
push
das
adc
test
rcrb
lcall
xchg
adc
push
inc
xor
stc
stc
inc
push
adc
lahf
push
dec
sub
mov
out
fsts
xchg
test
mov
add
setp
cmp
sbbb
ret
fidivrs
orl
cmp
je
ds
lods
inc
sbb
gs
or
cltd
idiv
test
mov
iret
jmp
lret
rep
rclb
enter
dec
shlb
hlt
xchg
mov
push
in
in
popa
int
push
xor
mov
addr16
cmp
leave
and
hlt
mov
fdivrp
inc
cmp
loop
pop
xor
and
js
ret
daa
mov
and
inc
lcall
mov
enter
jmp
mov
imull
xchg
dec
lahf
stos
outsb
inc
pushf
sbb
icebp
jg
jb
outsb
add
dec
sbb
push
out
fstps
push
adc
stos
lock
mov
out
sbb
ret
mov
js
xlat
xchg
jecxz
imul
mov
pushf
clc
fistl
mov
mov
pop
aam
sbbl
xor
jle
aas
test
add
into
pop
cmp
test
cmp
mov
mov
outsl
dec
adc
pusha
fistpl
pusha
lahf
das
add
sub
imulb
xchg
sbb
scas
scas
xor
push
popf
lcall
aas
or
inc
sarl
sarb
pop
sbb
ret
lret
lock
pusha
je
das
lock
int
pushf
and
ret
xor
mov
sub
les
mov
stos
dec
and
and
lock
cmpsb
pop
filds
mov
mov
sbb
sub
push
mov
or
inc
pop
cmp
lretw
iret
jnp
sbb
jae
push
inc
sub
xchg
mov
inc
sub
into
mov
inc
and
sbb
lea
dec
in
sti
nop
lods
jl
shll
mov
mov
cmp
daa
pop
iret
jns
and
sti
push
popa
mov
sub
in
fwait
inc
sub
xchg
add
mov
call
les
mov
mov
jle
add
push
mov
xchg
fsubr
int3
shrl
and
and
lret
pop
cs
inc
je
jbe
aad
inc
pop
iret
or
divb
fistpll
hlt
push
pop
pop
dec
cmpsl
sub
arpl
sub
sub
std
loop
stos
imul
imul
sub
js
lcall
xchg
out
test
js
sbb
outsl
sbb
stc
outsb
push
add
cltd
daa
out
jno
mov
push
flds
stc
or
or
lds
sbb
sub
xor
push
xchg
cmpsb
rclb
lds
sbb
lret
ljmp
or
addr16
push
ds
aam
dec
movsb
fnstenv
inc
pop
xchg
out
pusha
jg
mov
insl
jno
mov
jns
mov
cmp
jae
insb
sbb
sbb
push
xchg
fwait
insb
mov
mov
popf
testb
jmp
pop
or
dec
arpl
das
adc
mov
mov
cld
lds
push
xorl
mov
movsb
push
sbb
out
xchg
int3
cmp
add
xchg
bound
dec
test
fisubrl
lret
ss
imul
pop
xlat
xchg
hlt
jb
aad
pushf
jge
lcall
lock
xrstor
aaa
inc
stos
cmpsb
ljmp
testl
fstl
pop
shll
lock
cltd
pop
cltd
aas
incb
or
sbb
xchg
dec
mov
bound
fwait
and
pop
dec
push
paddusw
jecxz
pop
dec
bound
jbe
adc
fisttpll
sub
lods
mov
lahf
add
jle
call
frstor
mov
pusha
push
popa
fimull
daa
insl
test
or
fwait
and
pusha
jl
out
cmc
ljmp
test
jmp
or
iret
xor
or
ss
call
dec
add
pop
pop
movsl
push
add
xor
xor
loopne
pop
mov
add
and
movsl
mov
xchg
xchg
mov
in
xor
pop
mov
add
stos
or
inc
inc
js
push
inc
mov
adc
fnstenv
lds
sti
mov
lods
mov
cli
sbb
xor
ds
in
lods
int
stc
mov
adc
add
xchg
icebp
jnp
sbb
test
mov
mov
or
fdiv
flds
popf
or
pop
push
mov
pop
js
mov
jbe
out
jge
iret
pop
test
ret
inc
mov
or
and
jb
incb
hlt
xor
aaa
loopne
pop
shl
sbb
mov
pusha
orl
fidivrs
mov
mov
jle
inc
fcmovnu
xchg
in
xor
mov
cmpsl
fwait
shrb
xchg
cmc
negl
push
sbb
push
cmp
je
mov
test
mov
mov
cmc
xchg
mov
call
jle
lock
fistl
pmaxsw
fidivrs
scas
sarl
xchg
xor
xor
jl
out
sbb
test
mov
xchg
andb
and
popf
cmp
add
nop
push
jecxz
cmpsb
pop
jge
les
push
push
addr16
sahf
mov
jnp
lahf
cmp
in
xchg
jl
pop
sarb
ds
stos
stc
test
pop
repnz
dec
and
clc
pop
dec
xchg
cmp
xor
adc
aas
cwtl
aam
mov
or
push
mov
cs
or
mov
mov
inc
and
enter
or
jle
test
cwtl
jge
cmp
hlt
stos
imul
jl
mov
and
mov
faddl
stc
jo
outsl
xchg
jle
mov
or
sub
lcall
cmp
lret
out
adc
pop
adc
xchg
enter
pop
mov
jae
pop
xchg
jmp
adc
imul
and
xorl
mov
dec
lods
pushf
outsl
enter
xor
cmp
jno
leave
and
lods
push
mov
popf
sbb
cmp
insb
mov
mov
in
or
sbb
bswap
cmp
xchg
pop
rcll
cli
cmp
insl
lea
mov
push
out
ret
pop
lahf
test
pop
lock
adc
mov
xor
rcr
sbb
ds
adc
or
push
out
out
lret
add
push
shrb
bound
cli
std
adc
outsb
imul
cmp
mov
icebp
sub
outsl
repnz
inc
movsl
inc
mov
jl
dec
popa
or
stc
aaa
sbb
dec
idivl
adc
mov
daa
mov
loop
popf
stos
shll
out
jae
cmp
out
jo
in
dec
push
call
jo
push
subl
out
jnp
mov
mov
xor
mov
stos
das
clc
xchg
mov
mov
jns
ret
jge
push
cmp
pop
sub
xchg
add
in
outsl
add
pop
out
jmp
jb
cwtl
test
sbb
lret
rcll
ret
fimuls
mov
jae
mov
push
mov
stc
xchg
addr16
dec
adc
mov
jecxz
adc
dec
add
cmc
lret
xor
mov
gs
dec
arpl
inc
cmp
add
pop
pop
arpl
xchg
sahf
int
mov
mov
fwait
pop
test
clc
and
xchg
push
xor
aam
dec
call
jl
jl
sub
into
lret
popf
cmp
lea
sbb
sub
or
into
xor
mov
push
mov
xchg
mov
test
ljmp
push
lods
popf
mov
jp
daa
pop
das
cmc
stos
push
xor
int
sub
pop
movsb
sub
cmpl
lea
mov
lcall
arpl
out
inc
or
adc
jl
mov
lock
scas
xor
mov
repz
lods
push
insl
xchg
mov
test
in
stc
loopne
xor
mov
fs
outsl
xchg
cmpsl
in
lahf
push
dec
jmp
jnp
imul
pushf
loopne
test
pop
test
pop
push
xor
inc
jecxz
das
adc
test
out
repnz
mov
rcrb
inc
cs
sbb
push
cld
mov
pop
nop
adc
mov
mov
call
les
and
inc
jge
jno
jae
in
hlt
jns
mov
hlt
aam
dec
stos
lds
js
sbb
mov
or
sbb
rorl
dec
repz
xor
dec
mov
adc
xor
dec
test
xor
nop
mov
sub
mov
mov
mov
mov
or
cmp
cmp
and
push
fidivs
xchg
jl
inc
xor
sub
push
icebp
mov
lret
imulb
or
jle
sub
rorb
dec
inc
loope
cmc
punpckldq
mov
mov
push
or
inc
jns
je
jg
push
push
lock
call
push
les
or
ds
lods
cmp
ret
cmp
add
lock
lea
cmp
js
jp
movsb
xorl
cmp
adc
dec
lock
mov
xchg
mov
pop
jle
fwait
stos
and
incl
inc
in
push
mov
push
cwtl
stos
and
rcl
lcall
hlt
pop
inc
cli
xchg
sti
scas
shr
add
sti
adc
int3
push
lods
rolb
test
iret
call
out
mov
testb
jbe
out
rol
inc
test
pop
aam
jge
gs
sahf
jae
jmp
neg
movsb
bound
jmp
push
aaa
sti
repnz
cmc
push
mov
sub
repnz
pop
cmp
arpl
popa
cs
adc
pop
adc
dec
add
xor
pop
out
jnp
dec
int
insl
movb
or
pop
jns
push
lods
dec
pop
mul
dec
push
pushf
lret
mov
fnstenv
out
jae
dec
sub
dec
mov
aad
out
add
lret
pop
aad
mov
push
fsts
dec
arpl
nop
das
dec
ja
jae
pusha
mov
cmp
negb
addr16
xchg
dec
lods
mov
lock
push
push
pop
pop
cmp
xor
fistpl
add
xor
sti
sbb
adcb
xchg
pop
sub
and
fcmovnbe
pop
jle
pop
adc
cmp
data16
cmp
aas
stos
clc
insb
push
testb
or
rcll
cmp
push
das
jne
mov
mov
shrl
sbb
adc
pop
or
scas
fistps
scas
mov
sub
and
addr16
cwtl
stc
mov
andb
sub
inc
mov
es
repnz
push
lret
sub
pop
push
adc
xchg
loop
cli
or
arpl
xor
inc
cmp
enter
sbb
leave
mulb
loop
scas
nop
orl
jae
inc
leave
sti
mov
sbb
adc
cld
xchg
aaa
pushf
addr16
stos
fisttpll
icebp
and
repnz
shrb
inc
ret
cmp
ret
push
stc
add
ds
mov
adc
inc
fs
pop
and
inc
add
mov
ljmp
add
xor
loop
inc
jnp
inc
xchg
testb
lahf
pop
in
rcpps
inc
into
ss
and
int3
sub
xchg
push
ds
pop
cmpsl
inc
fistps
inc
mov
or
stos
add
rcr
cmp
mov
ret
jbe
arpl
insb
and
loope
adc
outsl
sbb
clc
test
xchg
or
cmp
sar
lds
sub
jge
push
fnstenv
sub
outsb
test
icebp
popa
incl
scas
lret
mov
jae
mov
mov
or
imul
dec
pop
jns
and
cmp
sub
sbb
addr16
pop
cmpsl
pop
push
or
sbb
lahf
cmc
popf
cli
popf
pop
sub
imul
mov
icebp
jno
mov
pop
and
outsb
das
nop
inc
cmc
cltd
loope
inc
daa
mov
xchg
push
push
popa
adc
int
aam
mov
adc
or
pop
jns
sbb
aam
or
stc
push
add
sahf
shll
arpl
mov
dec
mov
loopne
inc
fs
add
push
ret
mov
mov
test
jb
sub
mov
in
sahf
jbe
js
xor
lahf
push
add
nop
imul
fistpll
mov
out
xchg
sti
and
mov
push
bound
mov
push
xchg
mov
xchg
and
jo
cld
xchg
xchg
rcl
push
aad
lahf
js
inc
pop
pop
shlb
in
test
xor
addr16
sarb
adc
mov
or
mov
mov
dec
je
mov
mov
jb
jp
and
dec
stc
xchg
mov
repnz
fs
pop
pop
mov
adc
xchg
jae
jg
std
stc
mov
mov
movsb
jp
push
pop
cli
insl
xchg
push
rcll
or
xor
mov
fadds
rorl
inc
cmpsl
aam
fistps
repz
dec
xchg
shl
fisttpll
mov
rorl
sahf
xchg
mov
sub
pop
push
in
daa
inc
orb
lea
mov
aas
mov
cli
ds
jl
pop
cli
arpl
rorb
gs
mov
push
cmp
or
lret
rolb
adc
cli
fsubs
mov
aaa
or
mov
mov
imul
xor
dec
out
mov
and
cmp
icebp
xchg
vsubsd
mov
out
sub
lock
sti
mov
test
popa
push
fcoms
sarb
int
stos
mov
movsl
sub
and
les
jge
sub
sahf
popl
push
andl
mov
repnz
in
jl
loopne
inc
aad
push
ljmp
fsubl
jne
bound
popf
push
lcallw
adc
daa
in
imul
dec
add
cwtl
mov
mov
cmp
mov
and
in
bnd
push
push
es
decb
insb
xchg
dec
or
loope
fldt
sahf
dec
add
cmc
xor
push
push
fsubs
dec
mov
maxps
dec
in
push
or
cmpsb
in
cs
pop
xlat
call
sub
jl
dec
push
out
pop
pop
pop
aam
call
pop
iret
xchg
mov
xchg
or
add
pop
sahf
sub
nop
bound
jb
test
ficoms
lods
pop
cmp
inc
adc
out
mov
dec
lea
mov
xor
mov
mov
fwait
and
fcom
xor
inc
push
iret
pushf
mov
or
pop
sub
and
sub
ficoms
push
xor
jo
cmp
iret
iret
int3
jp
bound
and
loopne
sbb
push
ret
popa
mov
mov
push
mov
xor
out
rolb
mov
mov
sbb
xchg
pop
insl
xor
jle
inc
jmp
pusha
insb
mov
push
xchg
sub
into
outsl
subl
pop
mov
repz
and
mov
xchg
aaa
mov
push
into
pop
and
xor
fmuls
inc
xchg
jle
mov
cli
out
inc
dec
cmpsl
movsl
cmpsl
scas
xor
xchg
pop
and
or
cs
xor
push
imul
and
mov
ja
test
rolb
adc
pop
jo
add
cmp
dec
xchg
sub
mov
call
cmc
push
sbb
jb
adc
fistpll
xorb
insl
lds
gs
in
div
lcall
fdiv
push
mov
push
fs
shr
ret
lods
pop
mov
sbb
lock
mov
out
adc
mov
adc
imul
and
push
adc
inc
mov
xor
in
jbe
mov
mov
fstp
lods
repz
pop
jnp
daa
fimull
jnp
bound
daa
fmuls
mov
cmpsl
sahf
js
pusha
inc
push
mov
or
jne
pop
inc
push
jae
pop
add
mov
cmpsl
mov
mov
adc
icebp
jge
ret
xlat
pop
pop
scas
enter
inc
mov
xchg
addr16
inc
jmp
lock
in
movsl
je
xchg
and
jno
or
dec
stos
sbb
fisubs
mov
push
sti
bound
or
lret
test
outsl
push
adc
lock
dec
enter
testl
and
mov
xor
sub
stos
sbb
mov
adc
pop
and
pusha
jno
sub
rorb
inc
cmp
loopne
pop
nop
fwait
push
das
iret
cmpsb
cwtl
mov
push
xor
cmp
out
push
xchg
out
inc
dec
pop
xchg
push
adc
and
imul
scas
lret
and
push
repz
test
les
pop
adc
xchg
mov
cli
ffreep
daa
push
shl
cmp
push
outsl
cmc
fbstp
orl
mov
dec
fucomip
jmp
cli
sbb
les
jb
outsl
push
cmpsb
xchg
cltd
xchg
aam
jecxz
jg
sbb
iret
cmc
and
inc
push
pusha
das
scas
popa
push
test
xor
movsb
and
fistpl
das
sbb
ficoml
push
adcb
push
stos
mov
pop
in
stc
mov
xor
xchg
xchg
lret
and
cmpsb
mov
cld
test
stc
jge
fs
push
mov
jg
mov
jg
adc
jno
cmp
insb
adc
add
mov
and
ret
add
xchg
push
or
mov
xorb
xchg
jle
mov
lret
loopne
or
jp
lods
push
and
pop
outsl
add
cld
aas
inc
mov
jns
sbbb
xchg
jle
xchg
out
int3
cmp
ds
jmp
mov
dec
or
int3
int
jb
lds
sbb
ds
pop
or
out
je
ror
xor
repz
aam
mov
xor
addr16
jp
data16
addr16
insb
push
call
notl
mov
in
jp
jp
jle
dec
mov
push
gs
xchg
pushf
mov
sub
cld
pop
pop
mov
inc
add
jae
and
test
imul
popa
pop
jnp
test
sub
sar
inc
push
lea
aas
cmc
or
test
test
push
cltd
pop
aam
nop
jmp
fists
loope
cmp
or
cmp
fwait
push
bound
stc
add
lret
push
cmpsb
sbb
shrb
fucom
out
aas
je
frstor
push
cmpsb
inc
shrl
mov
cld
scas
xchg
and
in
es
clc
dec
adc
testb
push
xor
in
dec
inc
cmp
iret
fs
test
inc
lahf
mov
lods
and
aad
rorl
ret
pop
out
and
js
outsb
dec
aas
add
int3
dec
mov
clc
hlt
iret
sar
dec
or
mov
cs
ret
xchg
inc
adc
push
mov
js
mov
inc
pop
sub
or
scas
adc
pop
ficoms
call
ja
mov
lret
push
repnz
enter
sbb
dec
je
pushf
fwait
outsl
mov
movsb
xchg
int
fmull
xchg
or
pusha
push
test
mov
inc
rcl
loope
xchg
cli
inc
lret
dec
shll
mov
insb
pop
sub
dec
ds
inc
popf
out
out
push
xchg
inc
adc
push
fiaddl
and
pop
mov
aas
xor
jno
jbe
adc
loopne
es
push
es
nop
push
mov
dec
ficompl
andb
xor
or
inc
dec
enter
push
nop
mov
push
dec
cwtl
dec
push
dec
mov
xchg
insb
mov
mov
imul
imul
adc
dec
cwtl
lret
mov
shrl
pop
mov
jb
and
dec
inc
add
push
fidivs
icebp
sbb
in
sahf
or
ja
fstl
ljmp
push
rclb
dec
push
mov
loop
jne
dec
cmp
les
xor
in
mov
lods
jne
or
sub
push
cmp
cmc
pop
adc
inc
fs
jmp
stos
loop
jae
or
test
loope
rorb
call
pop
sbb
sub
jb
inc
scas
mov
xchg
in
leave
sub
in
mov
jle
add
xchg
jg
cmp
mov
inc
inc
xchg
sub
or
sub
sub
daa
shrl
enter
mov
sub
cs
mov
sbb
xchg
ja
pushf
outsb
lret
incl
lcall
adc
cmp
fists
pop
imul
push
roll
mov
pop
fwait
adc
jmp
pusha
inc
scas
cmp
fsubp
mov
jbe
xchg
sub
mov
fwait
int
insl
xor
xchg
test
enter
pop
rorb
ds
xchg
pop
cmp
push
in
cmpb
jnp
xchg
push
mov
js
hlt
shl
fcoms
and
mov
lock
aad
xchg
push
and
js
les
push
mov
movsb
jg
jl
pushf
or
xor
stos
mov
cmp
cs
pop
in
test
ja
arpl
sbb
gs
cmpsb
mov
js
shrb
and
ljmp
mov
jmp
fstpt
or
lock
repz
pop
inc
in
test
andl
mov
jno
add
dec
jne
xchg
xorb
or
fldenv
and
xor
std
mulb
inc
js
mov
add
lahf
fs
aad
dec
hlt
pop
push
out
fsubrs
bound
sarl
lahf
bound
clc
test
dec
mov
orb
imul
out
mov
jge
mov
rcrb
fwait
movsl
sbb
fwait
es
adc
sbb
bound
popf
sub
test
ds
int
fadds
loopne
fistpll
fstl
sub
ljmp
fistpl
adc
les
mov
jae
in
hlt
loop
enter
aad
negb
cmc
xchg
mov
int
test
mov
mov
sbb
pop
and
inc
ret
ljmp
hlt
add
lret
jo
jg
repnz
push
jb
mov
mov
mov
jb
movsl
pop
fdivrs
cmp
or
shrl
sbb
jne
aas
cmc
or
fwait
test
cmp
cltd
loopne
pop
mov
xchg
inc
iret
pop
jecxz
into
xchg
jl
out
js
cmp
cltd
pop
push
sahf
push
shrl
cmp
add
sbbb
mov
or
sub
lods
add
shll
sti
inc
ja
sbb
pop
shl
lods
jnp
or
fxch
mov
lods
cmp
ficompl
jb
fdivrs
push
mov
xor
mov
sbbb
in
dec
xor
std
mov
data16
pop
ja
mov
mov
jne
jno
jg
fs
dec
cmp
mov
jl
xchg
lret
jo
stc
sahf
popf
fwait
mov
ret
pop
or
imul
fdivs
adc
adc
nop
cmp
hlt
cld
pop
mov
aas
lahf
mov
mov
sbb
jns
movsb
mov
imul
xor
jle
int
test
leave
test
stos
daa
cmp
call
cld
and
je
out
test
in
inc
shlb
pop
push
out
xchg
add
imul
mov
aas
sbb
movq
sbb
jmp
out
mov
dec
jmp
mov
mov
sahf
out
jnp
xlat
push
cmpsb
shlb
push
pop
iret
pusha
inc
mov
orb
stos
mov
stos
pop
scas
sbb
fwait
rcll
ret
or
xchg
jb
fmull
xlat
lret
call
rcl
sub
std
mov
dec
outsl
mov
jmp
insb
jns
mov
popa
sbb
xchg
and
dec
ja
lea
dec
ret
mov
mov
push
inc
sbb
xor
jp
sub
adc
jne,pt
rorl
push
cltd
jecxz
or
mov
pushf
dec
cmp
std
add
cmp
cwtl
mov
int
mov
addr16
jne
xchg
jle
jecxz
inc
xor
push
jno
lcall
inc
cltd
dec
or
mov
mov
or
dec
int3
movsb
loop
cltd
adc
icebp
mulb
add
adc
adc
pop
mov
push
testb
pop
shll
xchg
sub
jnp
sub
push
ret
int
lds
mov
mov
jmp
dec
mov
jle
inc
mov
popf
dec
sbb
loop
inc
and
outsb
jns
out
fists
mov
pop
push
push
imulb
sti
cmp
lahf
inc
mov
shlb
sbb
in
es
cli
adc
mov
jnp
add
cwtl
or
data16
jbe
popa
push
sub
fstpl
orb
sbb
lea
pop
aad
sub
mov
ds
cs
mov
nop
xor
or
cltd
shl
adcb
ret
lret
or
int3
fcomps
pop
add
mov
xchg
xor
pop
js
ljmp
insb
push
mov
and
mov
or
out
sub
pop
fmull
adc
in
hlt
push
jne
cld
push
push
adc
push
pop
xor
icebp
jno
inc
out
inc
cmpb
call
orb
loop
push
icebp
xor
cli
inc
push
add
push
xchg
and
cmp
jl
cmp
std
xor
ja
lea
dec
and
popa
mov
fwait
cmp
pop
aaa
cli
lods
mov
cltd
inc
jns
dec
cmpsb
xlat
ja
imul
xlat
fucomp
inc
jns
stos
dec
sarl
scas
in
paddq
in
inc
les
loope
pusha
shr
pop
xchg
sub
out
roll
mov
dec
test
add
pop
movsb
mov
mov
pop
and
repnz
out
sarl
lret
sub
add
pop
out
lock
clc
stos
dec
je
test
inc
mov
cmp
test
stc
outsl
idivb
int3
insb
add
int3
add
push
or
xlat
or
call
je
push
mov
add
sbb
out
cmp
mov
mov
xorb
mov
shrl
nop
daa
mov
inc
or
mov
dec
inc
add
jnp
lret
fdivl
dec
sar
adc
das
push
lock
test
loope
incb
jnp
and
inc
cmp
jmp
mov
and
sub
and
and
call
mov
sub
add
je
jb
push
pusha
les
mov
fcom
pop
jp
clc
pop
pusha
jno
jo
pop
sahf
addr16
xor
pop
push
insb
xor
pop
mov
cmp
or
outsl
out
imul
aas
mov
cmp
add
loope
jle
or
cwtl
mov
mov
push
pushf
mov
cltd
ljmp
adc
dec
btr
bound
faddl
push
and
dec
ss
ret
dec
sbb
icebp
fcompl
pop
cli
xor
xchg
fs
xlat
gs
negl
mov
out
inc
push
jp
arpl
das
fucom
movsl
cmp
pmaddwd
clc
repz
lret
mov
in
jnp
arpl
fdivp
mov
iret
mov
push
lcall
mov
dec
dec
jne
and
fincstp
push
imul
fcmovbe
testb
cld
mov
imul
out
into
lods
stos
dec
shlb
inc
and
jmp
inc
lds
cmp
xor
into
jb
mov
mov
pop
je
sbb
inc
jp
pop
pop
adc
scas
ret
push
push
jmp
mov
or
mov
in
cmp
into
jl
mov
cwtl
sub
inc
and
imul
sub
in
pop
push
lods
insl
test
mov
pop
cld
movsl
mov
movsl
dec
dec
jb
or
sti
push
shrl
push
xlat
movsl
pop
pop
mov
mov
lods
or
add
test
fisubrs
aas
inc
sub
inc
mov
jg
push
xor
pushl
inc
rcrl
sub
and
add
cltd
xchg
cmpsl
dec
jno
inc
sbb
pmaddwd
adc
xor
imul
pop
lret
jmp
push
ss
mov
mov
testb
roll
xor
in
lea
xchg
mov
mov
xchg
rcrl
stos
dec
fidivs
cs
popa
sti
sub
jg
and
adc
ds
mov
inc
cmp
mov
adc
push
jl
push
mov
subl
pop
jmp
add
sub
addr16
xchg
outsl
cli
inc
mov
mov
mov
dec
shll
pop
xchg
shll
cmpsb
push
aas
push
mov
sti
fimull
jae
dec
cmp
pop
push
outsl
je
inc
and
ljmp
sti
lret
sbb
cld
pop
and
insb
punpckhwd
inc
int
adc
pop
push
pushf
cs
push
sbb
sbb
je
xchg
cmp
jo
mov
in
rcl
xor
in
mov
dec
jns
cltd
add
xchg
iret
std
add
push
into
insb
stc
fildll
adc
arpl
not
adc
call
sarl
daa
cltd
pop
mov
mov
sbb
out
pushf
rcrb
mov
movsl
xchg
cli
fsubs
inc
fsubs
and
xor
ja
ret
push
stos
push
jnp
loopne
movsb
les
dec
mov
leave
and
orb
sti
and
insb
cs
sbb
dec
das
roll
mov
sarb
arpl
sbb
cmp
out
mov
aam
lods
std
cli
xchg
jnp
sbb
sti
cs
mov
cltd
mov
dec
jle
mov
pushf
sti
xchg
or
popa
in
jns
jmp
jmp
outsl
aam
jl
inc
pushf
inc
and
jo
out
xor
loope
icebp
lahf
or
aaa
stos
arpl
popa
xchg
ljmp
nop
in
iret
sub
or
stos
sbb
insb
lock
cltd
sub
xor
std
ljmp
add
xchg
lret
sahf
cltd
cmp
or
aam
aam
ss
es
mov
add
pop
or
dec
jns
scas
dec
aam
dec
push
xor
movsb
rorl
lret
bound
inc
lret
cld
push
pop
insl
sub
pop
test
loopne
dec
icebp
xor
adc
xchg
mov
scas
cmp
adc
popa
push
dec
and
rorb
outsl
test
leave
mov
loop
or
or
dec
int3
inc
and
imul
lcall
dec
adc
int
mulb
cmc
out
xor
pop
addr16
je
loop
dec
insl
repnz
push
jmp
push
xchg
push
pop
mov
add
std
ljmp
and
clc
cld
lods
loopne
dec
imul
sbb
int
push
xchg
cmp
loopne
ror
ja
pop
mov
sar
adc
popa
fsubrs
sub
sub
push
xor
dec
dec
or
rcr
mov
aad
ja
adc
sbb
stos
test
jae
mov
es
dec
dec
fmul
xchg
fimull
out
jg
add
shl
notb
push
cmpsl
add
rcrl
xchg
lock
arpl
add
xor
insb
shlb
adc
dec
mov
out
mov
in
int
xlat
cli
scas
sti
add
sbb
subb
and
testb
inc
fldl
gs
push
cmc
pop
inc
inc
mov
fildl
setl
push
test
jb
inc
jns
fisttpll
in
mov
ficoms
movl
fstpl
nop
mov
test
inc
mov
in
cmp
sbb
lret
shl
mov
ss
ret
les
sbb
xor
sub
sub
sbb
lret
idivl
enter
movsb
ret
sub
jno
mov
sub
fldt
insl
mov
les
sarl
jns
dec
sub
xchg
std
adc
lea
add
inc
in
movsl
add
add
cs
stos
idivb
add
mov
inc
xchg
jnp
push
lea
add
add
push
shl
popf
jg
loopne
lret
xchg
fs
mov
or
add
jmp
call
lea
cld
add
jmp
xor
stc
std
daa
ret
fmul
mov
xchg
clc
out
jmp
and
dec
mov
cmp
cs
fnstenv
aaa
das
or
lods
lcall
filds
and
add
push
loope
and
negl
xchg
xor
in
ficomps
popf
sub
mov
lods
jl
in
cmp
aam
in
call
ds
int3
jp
dec
sbb
lea
test
daa
popa
and
push
sti
push
jae
add
xchg
xor
or
andl
test
into
adc
loopne
pop
insb
pop
test
push
hlt
and
adc
add
in
or
inc
and
push
xchg
fidivrl
xor
test
call
xor
push
and
insl
mov
mov
push
mov
outsl
lods
bound
ret
and
test
xchg
mov
in
xchg
jg
in
ret
dec
sbb
cmpsb
in
repz
hlt
and
inc
add
imul
jecxz
lods
mov
fsubp
mov
icebp
test
sbb
movb
mov
xor
in
pop
add
or
fs
xchg
mov
inc
mov
xor
cs
mov
inc
out
ja
mov
xor
scas
push
test
cli
rclb
orb
push
or
cs
add
out
pop
stc
mov
inc
into
hlt
mov
fnsave
in
fadds
xchg
mov
pop
xchg
repnz
xor
out
cmpl
sbb
pop
fs
xchg
mov
xor
out
cmp
adc
imull
mov
fbld
lods
test
jp
push
mov
aad
xchg
add
mov
repnz
jbe
or
fnstenv
sub
test
loopne
push
movsl
lcall
push
ret
int
cmpb
inc
icebp
xor
xchg
dec
imul
mov
aas
or
or
mov
jmp
push
dec
incl
add
outsb
lahf
mov
cltd
cs
into
mov
pop
outsb
popa
adc
adc
sbb
in
dec
out
sti
sbb
cwtl
push
and
lods
jb
stos
inc
or
jne
add
in
adc
add
fcom
inc
ror
pop
jge
subps
pop
aam
push
inc
lods
dec
shll
cmp
inc
and
nop
sbb
xchg
fadds
pop
cmp
in
add
mov
daa
dec
jb
leave
push
sub
push
mov
mov
and
arpl
popf
pop
insl
mov
in
bound
seto
xchg
lcall
stc
insb
mov
fisttpl
nop
fs
or
inc
nop
xor
fdivr
pop
mov
loopne
cmp
jge
xchg
hlt
adc
inc
push
jecxz
mov
xor
jge
lcall
push
xchg
lds
adc
addl
fwait
or
and
mov
mov
outsb
mov
div
push
sbb
xor
or
push
sahf
sti
aam
and
xor
cmp
in
inc
ret
sub
dec
cltd
repz
lds
mov
loopne
cmpb
leave
movsb
xchg
sub
cli
dec
and
sub
push
mov
aad
push
adcb
pop
jbe
lods
pop
int3
out
andl
mov
adcl
mov
inc
cmp
scas
dec
fidivs
decb
test
sahf
pop
repnz
xchg
mov
test
inc
sub
icebp
push
insl
pop
aas
aas
int3
xor
and
push
push
or
sub
and
into
xchg
pop
jo
cli
rorb
xor
add
loope
cmp
xchg
xchg
adc
mov
outsb
inc
lret
in
clc
mov
mov
repnz
xchg
lahf
clc
xchg
aaa
into
fdiv
cli
cs
dec
jno
cmp
cmp
mov
pop
ss
dec
loop
adc
mov
push
mov
lret
mov
adcl
popa
xchg
pusha
test
aas
test
aas
push
or
xor
jmp
leave
jne
in
out
in
sub
mov
test
aas
mov
aaa
fimull
addb
mov
out
pop
in
enter
movsb
or
ja
aam
mov
jb
in
jno
add
cmp
enter
cmpb
cmp
ret
jns
mov
lcall
loop
stc
inc
dec
sti
mov
cmp
jne
fdivs
test
pop
out
pop
xor
cmpsl
inc
into
mov
cmpb
mov
sbb
jl
jl
mov
into
xlat
je
mov
sbb
adc
mov
push
cld
jle
mov
outsl
mov
pop
ficompl
push
push
jge
ja
push
xchg
cmp
pop
or
add
sbb
and
sbbl
das
les
popa
cmc
in
mov
and
sbb
mov
inc
inc
shll
push
andb
jle
imul
gs
mov
push
jbe
cld
inc
mov
mov
repnz
enter
xchg
fcompl
adc
ja
fstl
scas
hlt
or
in
mov
jae
adc
mov
lcall
mov
jmp
repnz
add
into
cmp
pop
lock
test
and
cmp
mov
dec
pusha
dec
sub
inc
sbb
adc
pop
ret
mov
inc
lcall
inc
icebp
fs
lcall
fldenv
pop
and
mov
mov
cmp
dec
fildll
imul
loope
or
and
imulb
popa
aaa
dec
scas
add
add
test
leave
lods
push
fsubrl
scas
lock
mov
jb
xchg
mov
adc
adc
out
jmp
mov
add
adc
and
addr16
sbb
in
pop
imul
lods
push
cld
cmpsl
dec
sbb
mov
ror
hlt
mov
and
lock
inc
out
rorb
bound
sub
js
bt
push
out
mov
jno
push
inc
les
test
nop
mov
repnz
xchg
jge
es
sbbb
and
adc
mov
inc
insb
jp
sub
pop
push
les
mov
fsubr
sbb
aaa
ds
faddl
mov
mov
loopne
dec
arpl
pop
bound
mov
nop
cltd
lea
lods
jno
icebp
ljmp
mov
inc
daa
and
xor
cmp
inc
jne
shlb
into
jns
ds
adc
hlt
imul
inc
imul
cmp
push
int3
xor
cld
adc
push
and
aam
jmp
jmp
push
mov
cmp
lods
push
les
mov
vminpd
or
mov
adc
fmul
pop
clc
in
pop
les
pop
xchg
outsb
mov
dec
xor
push
cmp
dec
mov
mov
ds
lock
adc
clc
push
jb
fstpl
in
sbb
ret
jo
das
jno
push
test
inc
sub
test
jo
push
adc
es
xor
mov
sar
and
cs
jg
cld
mov
sar
pop
push
mov
cs
lcall
scas
cmp
nop
pop
mov
loop
fmull
xlat
test
mov
imul
icebp
jns
out
cmp
mov
or
outsb
lds
pop
dec
mov
popf
inc
lea
dec
sub
push
mov
std
cmpsl
cmpsl
pop
pop
xor
hlt
out
fdivs
jge
pushf
xor
dec
inc
in
xchg
repz
imul
cmpsb
mov
pop
stos
outsl
dec
mov
inc
jge
push
pop
mov
lahf
mov
shrd
add
xor
mov
iret
jg
sub
int3
add
std
mov
inc
or
jbe
adc
loopne
lcall
sbb
scas
popa
adc
adc
fcomi
imul
pushf
cmpsl
lds
fs
ljmp
and
xchg
xor
mov
push
divl
negb
inc
jno
xor
mov
test
mov
clc
mov
loope
xchg
jne
mov
cmpl
dec
mov
dec
test
mov
cwtl
or
mov
stc
mov
sbb
cmc
mov
pop
call
in
mov
movsl
xor
lods
shll
sub
lea
sbb
push
adc
std
xor
add
in
mov
mov
pop
xchg
stos
addb
enter
mov
xor
add
test
loope
mov
pop
aaa
sub
popf
cmp
gs
push
pop
out
rcr
ret
inc
mov
leave
iret
push
in
fistl
pop
cmp
xlat
flds
jle
pop
mov
inc
or
jp
inc
and
or
rdmsr
dec
add
mov
xor
loop
add
push
dec
aam
stos
cmc
inc
xor
js
push
ret
mov
sbb
and
and
sub
dec
int
insl
sub
add
fldt
lahf
das
fnsave
iret
mov
xchg
sub
sbb
sarb
xor
iret
adc
or
ljmp
lret
mov
mov
scas
out
jo
pop
mov
insl
mov
fisubl
jmp
xlat
rol
add
or
cltd
and
push
cmp
dec
ljmp
sub
mov
mov
and
push
mov
lds
xchg
lea
js
fs
lea
in
pop
cmp
and
adc
jmp
push
fsubrp
negl
mov
out
ret
push
in
and
mov
fldenv
xor
int3
aam
test
mov
movsb
pusha
fdivl
mov
adc
jl
sbb
jnp
sub
add
js
sahf
cmp
cld
outsb
pop
je
mov
lods
push
lahf
aam
pop
bnd
cwtl
into
xlat
mov
sbb
and
bound
aaa
bound
pop
aam
subl
mov
xor
inc
mov
clc
push
fdivl
inc
or
add
add
int
mov
or
loop
lea
push
loop
cmpsl
repnz
sbb
insb
ja
or
add
pusha
ret
add
cmpsb
add
in
cmp
add
scas
rorl
adc
fldt
adc
mov
mov
inc
pushf
mov
sbb
or
pop
push
add
loope
inc
std
iret
pmuludq
adc
decb
lock
das
mov
push
nop
out
clc
data16
sbb
fnstenv
pop
ret
pop
in
mov
dec
mov
test
pusha
xor
sti
cmp
jo
daa
cs
loop
xchg
and
or
fwait
cmc
loop
cmp
pop
ljmp
mov
fdivrs
cmp
dec
ljmp
adc
jmp
enter
fistpl
mov
xor
mov
mov
jle
cli
sarb
rol
out
or
mov
mov
sbb
pop
xchg
jle
sbb
lods
sub
pushf
jne
cmp
push
and
xchg
mov
mov
push
aam
je
dec
std
jp
pop
mov
or
add
scas
dec
lea
pop
pop
mov
mov
in
hlt
adc
mov
and
sahf
dec
dec
xchg
cmc
xor
imul
cmpl
ret
sbb
and
in
aas
push
jle
cmc
fstpl
sub
addr16
rcr
pusha
inc
fstpt
mov
xchg
fwait
notb
xchg
pop
push
pop
inc
mov
and
mov
mov
pop
push
xor
pop
in
mov
xor
mov
mov
iret
and
cltd
adc
stc
or
xor
ds
and
lods
addr16
pop
sub
add
xchg
ja
insb
inc
in
pop
dec
cld
mov
push
call
popa
mov
mov
mov
popa
sub
sbb
jno
dec
jmp
lds
mov
jge
inc
push
out
sahf
or
push
pusha
fcoms
repnz
cwtl
insb
fdivl
mov
lahf
test
mov
add
test
or
mov
mov
sbb
pop
sbb
adc
add
roll
mov
mov
xchg
pop
aam
outsl
jbe
xchg
adc
xor
in
nop
mov
jle
sbb
push
jmp
and
sub
mov
or
aas
and
inc
add
cmc
adc
sub
outsl
cmp
dec
into
xchg
es
inc
jbe
cmpsl
test
rcr
je
mov
or
jg
and
mov
nop
jecxz
mov
cli
mov
add
cmpl
stos
aaa
and
and
ds
jb
sbb
dec
pop
insb
mov
mov
pop
lds
and
sarb
sahf
mov
outsb
and
and
pop
rclb
subb
xchg
jmp
sub
dec
mov
dec
pop
nop
add
sbb
adc
xchg
xchg
adcb
mov
inc
add
sbb
jge
jbe
icebp
mov
mov
push
repz
mov
mov
mov
inc
insb
xchg
inc
cmp
out
push
notb
mov
mov
mov
jne
add
lret
push
sub
fiaddl
and
adc
ret
push
clc
fneni(8087
into
in
lock
repz
dec
andl
dec
xor
mov
mov
xlat
movsl
sub
scas
and
in
jmp
data16
leave
mov
jg
pop
xchg
out
rcll
out
push
and
movsl
mov
cmp
pop
inc
in
outsl
lods
dec
fnstenv
cmp
mov
xor
pop
ja
cmp
cmpsl
dec
nop
xor
jb
sbb
mov
pop
mov
sub
jl
sbb
lcall
sti
or
inc
cmpsl
adc
or
and
in
out
jmp
dec
std
fsts
dec
push
outsb
ss
pop
mov
test
fisttpll
lea
insl
push
jne
xchg
inc
sub
or
scas
lds
addl
aad
ret
leave
faddl
bound
test
xchg
xchg
out
fptan
inc
inc
repnz
icebp
adc
outsb
cwtl
bound
mov
cmp
adc
cmc
cli
push
sub
std
sub
fstpt
pop
loope
xchg
push
fnsave
cs
add
push
dec
jecxz
fimull
push
inc
cwtl
sub
scas
push
inc
loop
and
fiaddl
lods
dec
mov
cmpsb
outsb
push
jecxz
movsb
icebp
fwait
aas
icebp
sahf
jg
pop
nop
daa
fwait
aam
mov
stc
shll
or
pop
sbb
push
adc
data16
loopne
add
mov
jae
mov
jl
add
inc
jno
dec
lds
cmpsb
sbb
dec
mov
cmp
inc
sbb
pop
clc
lea
cmc
inc
cmpsb
dec
pushf
negb
or
lcall
testl
pushl
jle
pop
adc
xor
cli
gs
push
icebp
adc
push
or
stc
std
mov
mov
cld
icebp
dec
mov
lret
mov
fwait
aad
push
dec
xor
jb
es
dec
dec
inc
mov
inc
xor
test
dec
lea
and
daa
mov
out
insb
sbb
aam
dec
jecxz
jne
and
fiaddl
mov
aad
add
jae
je
push
shll
cmpsb
daa
dec
and
sbb
sar
mov
jne
mov
sbb
add
sub
mov
nop
and
dec
pop
fsubrl
pop
sbb
into
fistpll
clc
lock
adc
lods
jecxz
inc
add
and
cmp
cmp
fstpl
shrb
pushf
mov
test
jl
orb
movsb
sbb
jg
imul
daa
cmp
mov
or
cmpsb
xchg
cmp
lcall
jp
and
or
imul
shlb
dec
in
pop
xchg
ds
cld
jnp
cmpsb
es
mov
adc
cmc
subl
xor
aam
mov
or
mov
add
sbb
jne
movsb
test
inc
into
inc
dec
jmp
lea
inc
fidivl
mov
push
ss
cmpsl
adc
mov
mov
lods
ds
push
push
ret
push
mov
into
clc
gs
push
test
ret
ficomps
imul
lahf
leave
mov
sub
stos
xchg
cmp
js
mov
lret
fimuls
mov
scas
xchg
addr16
adc
sbb
adc
sbb
cmp
popa
imull
fstps
in
xor
jle
jmp
or
mov
push
xchg
dec
push
ffree
lock
ss
mov
lcall
lods
cmp
cmp
jb
sbb
add
call
push
test
and
sub
test
xor
shrl
iret
jb
aaa
pusha
cs
dec
mov
jae
icebp
clc
sub
xor
test
test
xor
hlt
in
mov
mov
sub
push
mov
sarb
adc
out
fisttpll
insl
insl
mov
ja
mov
stos
setg
ret
adc
and
xchg
xor
and
cmp
ret
mov
addl
dec
xchg
test
call
fsubrl
xchg
in
iret
stos
ljmp
js
cli
sbb
inc
mov
xchg
stc
adc
das
push
pop
out
mov
jmp
push
roll
ret
dec
pop
pop
mov
sbb
mov
es
pop
mov
sahf
dec
fsubr
test
jge
bound
sub
push
addr16
in
mov
int3
sbb
cs
ss
popf
fcomps
inc
lret
cmc
dec
mov
push
push
mov
mov
ficoml
rcrl
xchg
sub
xchg
pop
rorl
fdivl
push
js
jnp
jbe
into
sti
into
mov
mov
fxch
data16
mov
subw
sarl
bound
arpl
sahf
jp
jne
pop
pop
sbb
inc
lock
dec
lret
pushf
xchg
inc
clc
push
mov
enter
out
mov
mov
mov
lea
xor
jl
leave
pop
addb
and
leave
mov
dec
out
ljmp
dec
mov
dec
daa
mov
pusha
mov
or
xor
jmp
stc
aam
test
mov
stos
dec
stc
push
jo
fisubl
inc
jno
pop
cmp
inc
jno
daa
mov
inc
mov
adc
mov
insl
mov
cmp
test
ja
mov
dec
add
inc
scas
xor
les
jge
inc
add
test
pop
stos
jg
mov
cltd
sbbl
pop
jns
out
xor
xchg
push
cli
jo
xchg
mov
sti
in
ja
addb
ljmp
lds
add
sbb
lock
scas
jmp
insb
in
and
bound
arpl
inc
imul
pop
fstps
lods
add
mov
outsl
jecxz
jmp
ja
push
stos
jnp
pop
addb
popf
cltd
mov
imul
cmp
shrb
lods
mov
add
jp
adc
xor
pop
scas
add
lock
ljmp
fistl
insl
stc
mov
fisubrl
add
sub
scas
out
adc
add
repz
repz
fisubrs
in
mov
mov
enter
fstl
push
adc
pusha
cmp
scas
lret
pop
sti
out
cmc
rcr
add
repz
lods
ret
int3
push
leave
sbb
gs
and
lret
pushl
loopne
negl
xchg
ret
fcomps
pop
and
negb
ljmp
insl
test
cmp
and
enter
outsl
adc
cmp
sbb
out
sbb
push
jmp
int3
adc
cmp
or
xchg
cmc
loopne
adc
stos
ja
adc
inc
data16
repz
aam
fildll
lods
fmul
ror
js
and
adc
jb
aam
jo
dec
jae
mov
lahf
out
cmp
fidivl
add
lods
xchg
orl
imulb
repnz
jnp
adc
add
mov
cs
lret
xchg
cmp
push
dec
stos
mov
sbb
clc
or
imul
mov
push
nop
push
popa
mov
movsl
dec
inc
mov
xchg
xor
lcall
push
ja
insb
test
jno
rcrl
fnstsw
iret
orl
repz
clc
iret
pop
loop
pop
add
push
fsubl
jg
imul
inc
jmp
jg
loope
aaa
push
roll
imul
inc
fnstsw
sub
ret
icebp
adcl
jne
mov
popf
xchg
fbld
sub
push
cs
push
xchg
xor
scas
mov
xor
aad
adc
clc
mov
sub
jg
int
mov
fcompl
sbb
repz
in
out
push
jecxz
xchg
sub
xchg
push
mov
push
fwait
or
scas
inc
imul
jecxz
xor
mov
cmc
xchg
cli
pop
or
and
mov
cmp
dec
pop
mov
adc
cld
and
xor
stc
pop
loop
idivb
cmpsb
repnz
sub
mov
shrb
cmp
mov
xlat
lret
pop
add
mov
mov
fstpl
adc
push
cmp
jl
shll
cs
jae
mov
arpl
insl
fs
push
ljmp
scas
jmp
ljmp
sbb
push
pop
mov
pusha
stos
sar
hlt
cmp
decl
mov
nop
dec
mov
test
jecxz
call
sbb
jecxz
int
dec
jnp
lret
into
xchg
pop
lock
sub
out
pop
push
loope
repz
pop
repz
jbe
sub
mov
sbb
sbb
adc
lock
adc
inc
lds
loop
cmp
mov
push
push
xor
adc
pop
popf
das
inc
icebp
icebp
sub
imul
lods
mov
aam
jmp
mov
push
out
mov
mov
mov
mov
adc
and
sbb
pop
sbbl
repz
push
pop
cmp
add
inc
cmp
cltd
into
add
pop
test
xor
jbe
adc
sbb
and
push
push
fs
push
fbld
insb
xchg
insb
pop
cmp
mov
adc
dec
lock
js
leave
fsubrl
mov
aad
mov
jmp
xchg
fs
mov
dec
out
sub
xor
mov
mov
pop
jp
add
test
mov
sarl
out
jle
xchg
and
loope
enter
out
sbb
icebp
pop
out
shl
inc
addr16
and
mov
inc
daa
mov
test
xchg
jle
inc
adc
mov
lods
xchg
mov
inc
push
mov
xchg
jne
xorl
xchg
jne
cmp
pop
fildl
stc
cs
add
inc
negb
and
adc
rcll
stos
movhps
add
inc
or
mov
cmp
fidivrs
gs
fistpll
int3
iret
call
sti
jno
inc
js
adc
xchg
cmpsb
enter
fstpt
cmpl
mov
iret
adc
mov
sbb
xchg
sti
xor
insb
inc
pop
mov
stc
xor
jecxz
pop
adc
mov
pop
push
jnp
loop
pop
lret
mov
or
adc
insl
xor
jl
pop
sub
jo
cmp
mov
jge
cmp
sti
inc
jge
ljmp
aaa
stc
mov
pop
clc
jne
scas
rclb
iret
and
mov
push
data16
mov
pop
sub
and
call
sbb
cmpsl
test
push
lcall
dec
dec
add
mov
sar
xor
adc
leave
punpckldq
mov
jns
cmpsl
std
cmpsb
mov
loop
js
sahf
adc
mov
sub
cmp
cmp
mov
out
push
mov
pop
xchg
ja
ja
fcoms
jns
nop
outsb
mov
sbb
inc
inc
nop
mov
leave
mov
adc
shl
dec
lods
or
repz
test
dec
popf
shlb
rcll
fsubs
ljmp
or
push
bound
stos
inc
sbbb
add
clc
popf
sub
add
pop
mov
call
add
repz
dec
dec
je
in
mov
or
js
xchg
dec
data16
fistps
enter
dec
push
inc
ljmp
jae
insb
pop
idivl
aad
mov
stc
movsl
pop
daa
or
xchg
or
jge
xor
dec
xor
xor
adc
lds
shrb
sahf
pop
out
cmp
stos
push
mov
sbb
xor
pop
mov
lods
or
lret
pushf
jne
dec
loopne
mov
cmp
stc
sahf
and
add
dec
out
inc
cmp
pop
cmpsb
pusha
and
push
xor
movsl
add
cmp
mov
or
jae
and
pop
bound
lods
mov
pop
and
int3
mov
shl
int
inc
jl
mov
pop
addr16
inc
mov
out
lahf
sbb
fmul
out
inc
sbb
mov
xchg
fwait
push
out
orb
jmp
fdivs
jl
shrb
jo
push
mov
rol
dec
mov
sbb
cmc
lcall
inc
orl
test
js
sbb
pop
push
test
and
mov
and
jns
mov
mov
addr16
push
ja
rcr
and
mov
mov
stos
nop
sub
pop
loopne
mov
in
ret
push
xchg
sbb
mov
dec
je
jp
xchg
jmp
dec
filds
mov
mov
xchg
cmp
scas
mov
jle
movsb
push
sar
movsb
mov
daa
sbb
push
jbe
pop
neg
mov
jb
pop
jg
mov
les
repnz
ja
sbb
sbb
sub
lahf
xchg
push
cmc
clc
xchg
cld
vmovdqu
add
scas
movsb
adc
faddl
ret
sbb
and
and
push
lds
insl
std
add
xchg
ret
std
sub
call
dec
int3
in
aas
inc
mov
inc
js
mov
fs
and
pop
cwtl
and
push
movsl
xchg
mov
sbb
out
mov
inc
testl
rorl
rcl
das
inc
sbb
fistpl
push
fisubrl
push
mov
add
jnp
adc
scas
cld
cmp
fpatan
int
mov
cmp
cmp
cltd
loopne
test
retw
rcrb
dec
fmull
push
inc
out
and
rorl
add
mov
pop
sbb
adc
add
xorl
or
add
fisubl
add
fwait
das
imul
cmp
mov
repnz
gs
iret
pop
fwait
adc
lahf
xchg
loope
iret
das
xchg
insb
test
ljmp
xchg
sbb
test
dec
bound
repnz
pop
adc
dec
mov
hlt
mov
outsl
fs
mov
add
test
mov
mov
sbb
and
mov
movsbl
nop
adc
rorb
out
mov
popa
lret
in
adc
mov
pop
mov
jno
jl
xor
mov
jl
mov
nop
outsb
mov
add
fldt
jo
stc
iret
je
jp
pusha
adc
jbe
dec
icebp
xchg
jle
cltd
sub
mov
cs
icebp
push
cmp
add
test
xchg
sbb
loope
xor
jae
mov
mov
adc
jp
std
dec
add
or
pop
int3
xor
push
jecxz
jb
inc
cmpsb
mov
jo
shl
pop
arpl
pop
ret
sbb
cs
ss
test
xlat
sbb
dec
xchg
xchg
or
scas
push
stos
jbe
cmp
fwait
cmp
out
repnz
cltd
add
sbb
imul
ss
lahf
test
push
les
add
fldt
fdivs
mov
or
cmp
jmp
fwait
jl
cmp
les
jno
mov
jle
cmp
xchg
das
adc
sbb
aaa
popf
stc
cmc
mov
ret
and
pop
int3
cwtl
rorb
sbb
xor
xchg
outsl
sahf
cmp
add
and
xchg
add
ds
jo
add
cmp
sbb
sub
mov
out
dec
inc
mov
fstps
xchg
and
inc
test
je
sub
fnstenv
xor
aaa
and
pop
cmp
fstl
popf
pop
and
imul
mov
in
arpl
or
pop
fidivl
ret
lret
push
in
loopne
jnp
jnp
lods
fnstsw
test
mov
mov
xor
call
or
enter
loop
xor
adc
ds
sbb
std
or
cmp
jmp
mov
addr16
das
leavew
pop
insl
dec
mov
xor
lods
xor
or
sub
inc
popf
or
mov
pop
fcoml
push
data16
popf
loope
push
xchg
xor
pop
ja
xor
out
out
sbb
mov
sbb
frstor
sub
xlat
mov
inc
fprem1
movsl
movsl
jb
test
adc
inc
mov
mov
mov
stc
and
shrb
add
fwait
xchg
in
inc
jecxz
lcall
and
adc
aas
std
std
popf
adc
mov
rorl
xchg
xchg
gs
xchg
cmp
rorl
addb
in
inc
repz
push
fisttps
cmp
popf
dec
xchg
pop
push
ficomps
xchg
pop
lret
cmp
push
jl
scas
jno
or
mov
fdivs
or
out
mov
push
inc
mov
push
js
lods
mov
pop
push
or
aam
das
push
mov
ret
add
int
pop
xchg
xor
scas
ret
xchg
ret
sbb
popa
data16
stos
mov
addr16
loope
jecxz
jp
les
push
and
rcll
loopne
xchg
int3
xlat
pop
lcall
notb
subb
cmc
mov
push
mov
inc
inc
outsb
fdivrl
and
dec
mov
xchg
ror
stos
inc
xor
aam
adc
adc
xchg
jg
js
sub
push
shl
inc
in
mov
nop
ss
cmp
adc
mov
add
xor
ror
call
jbe
loope
cmpb
adc
xchg
inc
adc
std
insb
sbb
sub
cmp
inc
mov
push
mov
cmp
lahf
mov
xor
add
inc
xor
fwait
in
movsb
xchg
add
es
dec
aaa
out
jge
or
push
xchg
call
push
pop
xchg
adc
adc
mov
popa
or
dec
jb
je
and
subl
cmp
pop
cmp
gs
fucomp
and
and
mov
mov
jmp
int
rcll
inc
jae
out
mov
lea
xchg
fsubrs
xor
mov
stos
cmpsl
sbb
dec
xchg
mov
cmpb
dec
call
cmp
test
int3
pop
loope
cmp
fdiv
iret
adc
mov
sbb
sub
mov
cmp
xchg
dec
xchg
add
fmuls
aad
adc
shr
inc
jecxz
fcmovnbe
jge
dec
cmp
dec
or
stos
pop
and
adc
add
fwait
cld
jne
out
icebp
xchg
rcrb
pop
enter
out
sbb
push
clc
jle
popa
repnz
xlat
fisubs
sbb
dec
test
mov
dec
stc
or
push
cld
mov
movsl
pop
out
dec
and
sub
int3
filds
lds
and
adc
dec
sbb
add
mov
dec
out
pop
imul
jge
inc
jbe
into
insb
adc
dec
cltd
psubd
les
nop
pop
push
hlt
mulb
test
inc
div
jecxz
adc
mov
pop
iret
add
test
sbb
mov
mov
adc
faddl
mov
pop
addr16
pop
mov
jo
and
inc
xchg
xchg
mov
push
outsb
sub
punpcklwd
add
mov
in
add
in
add
and
ret
sbb
jle
sub
or
inc
lahf
xchg
adc
cmp
sbb
jbe
push
push
pop
inc
cmp
dec
xchg
lret
mov
dec
inc
lea
mov
cmp
iret
ret
ret
int3
adc
mov
pop
xchg
pop
aaa
loope
stc
sub
sub
mov
jmp
pop
stos
ds
jmp
cwtl
jno
mov
addr16
mov
test
and
aaa
in
ret
in
add
int
scas
sahf
das
sub
mov
cmpsb
adc
je
add
add
or
int3
jl
fadds
xor
mov
icebp
fwait
push
jns
xorb
pop
push
lahf
add
cmp
xor
inc
insl
sbb
shll
dec
je
xor
aaa
sub
ficomps
scas
repz
jno
insl
fmuls
xchg
jne
cmc
push
out
and
fcmovu
outsb
xor
arpl
pop
xchg
inc
add
decl
cli
inc
mov
int3
stos
pop
mov
bnd
mov
mov
jno
mov
ds
je
mov
outsl
fistps
mov
xorb
dec
test
jge
or
test
out
inc
mov
or
push
add
in
test
out
sbb
setbe
mov
movsl
pop
or
push
xchg
in
push
bound
or
pop
xchg
add
filds
add
mov
sarb
jae
int
fwait
stc
call
pop
js
movsl
mov
test
or
adc
jno
jle
outsb
mov
sub
xor
pop
jns
int
adc
inc
jo
orl
jbe
test
xchg
loope
das
mov
cmpsb
inc
inc
mov
mov
cmp
inc
aad
jnp
push
push
mov
mov
mov
push
mov
xchg
hlt
aam
lea
int
sbb
xchg
dec
movsb
shlb
fistpll
mov
and
push
popa
inc
and
dec
lea
dec
lret
jmp
call
hlt
lods
mov
cmp
in
in
pop
daa
out
jne
movsl
sbb
icebp
xor
gs
mov
aam
or
out
cmc
xchg
jmp
pop
lock
popa
insl
rcl
inc
jp
lea
add
loope
sahf
jb
testl
or
test
int3
pop
mov
push
sbb
mov
or
cmpl
lcall
insb
test
cmp
test
repnz
or
test
test
pop
scas
test
xor
mov
lret
or
out
stos
js
out
push
add
mov
mov
iret
stc
lahf
pop
je
movsl
and
insb
jno
push
in
mov
loopne
mov
mov
add
xchg
push
inc
and
fmul
lret
in
cmp
and
mov
and
leave
aad
int3
jp
mov
fsubrs
xor
push
sub
jmp
jecxz
pop
popa
repnz
out
popf
cmpsb
inc
adc
enter
fnsave
ss
loope
clc
mov
jmp
mov
sbb
xor
or
dec
sub
cmpsb
or
stos
jb
outsl
cld
ss
add
into
or
push
sbb
sub
mov
xlat
movsl
or
popa
ret
lret
insb
lret
mov
push
std
or
sub
lea
leave
mov
out
mov
mov
mov
fdivs
aas
iret
mov
or
mov
push
pop
hlt
mov
es
cs
js
and
cmpsb
xor
mov
adc
pop
add
jne
out
pusha
pop
lock
rcll
xor
adc
adc
pop
sub
xor
xchg
add
pushf
jle
aas
movsl
mov
bound
sbb
sub
iret
or
xor
cld
jno
or
mov
mov
int
dec
push
mov
out
inc
dec
in
jo
iret
pop
sub
jge
gs
int
sarb
cs
or
out
loope
xchg
xor
frstor
mov
fildl
js
ret
or
mov
or
in
out
inc
adc
pop
cmp
rsqrtps
xor
add
out
out
mov
or
xchg
xor
mov
in
xor
cmpsl
jae
pusha
mov
dec
push
imul
sbb
mov
ja
loopne
mov
mov
fucomip
roll
pushf
pop
or
inc
nop
jno
lea
sahf
incb
xchg
lea
inc
out
mov
je
rcrb
test
lret
cwtl
push
pop
jmp
stc
cmp
call
ret
pop
loopne
outsl
loop
xchg
insl
jno
repz
aad
fstps
hlt
fwait
icebp
xchg
insb
fadds
in
mov
aam
pop
sarb
sub
push
inc
adc
out
mov
add
adc
push
iret
repz
sbb
mov
movsb
xor
ja
das
addr16
jmp
push
pop
sub
add
xlat
push
loopne
add
and
pop
pushl
push
cli
icebp
ret
mov
lahf
cwtl
or
mov
mov
loopne
xchg
mull
test
xor
shll
stos
in
sbb
push
ja
jp
push
scas
xlat
push
inc
or
pop
or
sub
fisubrs
enter
lcall
push
fcmovnbe
xchg
jno
rcr
inc
cmp
pop
movsl
adc
xchg
mov
insl
cmp
inc
cs
pop
dec
push
mov
mov
lcall
xlat
add
xor
cmp
sbb
test
add
push
cmp
pop
out
sub
and
daa
aad
lret
fwait
xchg
rcrb
movq
dec
inc
cmp
iret
ret
cwtl
shr
jp
xor
cmp
pop
insb
ds
push
adc
in
xchg
and
ja
les
xchg
xor
sub
cmp
sub
in
ficoms
mov
fadds
scas
inc
pop
sub
addb
or
push
imul
scas
arpl
mov
cmp
jle
mov
imul
and
jne
inc
and
or
pushf
or
pop
fnsave
test
loope
movsb
mov
daa
pop
repz
inc
decl
les
cli
das
xor
sbb
cmpsl
add
cmp
and
aam
lods
popa
test
enter
xor
xchg
jge
inc
inc
push
jp
bound
mov
scas
add
cmp
inc
sbb
fdivrl
ljmp
add
repz
fwait
rcrl
or
jecxz
js
cli
jbe
sbb
sub
das
or
xor
cmp
push
mov
divl
xchg
sub
insb
or
ret
mov
cmp
lret
mov
cmp
xchg
pop
mov
loopne
test
jle
and
jno
push
cld
cmp
sub
dec
out
push
jl
cmpsb
call
push
mov
dec
imul
ret
or
mov
cs
pushl
in
icebp
inc
jp
mov
push
sub
dec
xchg
pop
dec
sub
jbe
push
shl
into
jno
aam
sahf
imul
test
pop
mov
imul
fwait
mov
adc
in
mov
fldenv
inc
xchg
pop
fisubl
mov
jle
out
add
in
xchg
xor
and
outsb
push
fbld
mov
leave
in
push
mov
loop
cmp
and
mov
mov
inc
mov
cltd
sbb
into
jbe
addr16
inc
mov
sbb
int3
fs
sbb
scas
push
push
pop
mov
add
inc
mov
pop
cli
das
outsb
or
call
push
and
idiv
jp
mov
push
jle
imul
ja
pop
sub
outsb
adc
pop
and
out
test
cld
jmp
mov
ds
pusha
rorl
mov
adc
or
stos
mov
and
jns
test
pop
in
cmpsb
loop
iret
and
iret
das
adc
popa
lock
sti
or
ficomps
mov
movsb
inc
or
insb
adc
push
scas
jecxz
pop
sbb
or
rol
sbb
mov
push
sbb
nop
jno
lret
dec
in
cli
sub
and
aad
sbb
in
xlat
orb
jle
ret
or
mov
mov
pop
lcall
cld
xorb
cmp
and
adcb
mov
scas
mov
lret
enter
clc
imul
mov
adc
fisttpll
push
fs
mov
les
dec
adc
ds
inc
and
mov
stos
js
fcmovb
jge
mov
sub
add
addb
cmp
testb
jno
shr
cmc
loope
add
leave
adc
sub
and
cmovle
addr16
sbb
cmp
add
sub
cmp
sti
cltd
movsl
and
cltd
sbb
pop
repnz
adc
sub
dec
pop
imul
lock
fisttps
fmul
fnstsw
out
xchg
pop
scas
inc
aas
xchg
scas
push
jb
fldcw
push
inc
arpl
cwtl
sahf
es
mov
xchg
cwtl
mov
cmc
push
loope
dec
mov
push
sub
mov
inc
pop
push
inc
push
add
inc
mov
add
xlat
mov
and
cmp
mov
xchg
push
or
stos
jge
push
sub
dec
sub
shrb
jge
scas
jae
cmp
mov
fwait
xor
xchg
out
es
cmp
cld
push
mov
adc
cli
dec
or
aad
and
int
jl
dec
in
ljmp
cmp
out
mov
imul
xor
loope
mov
daa
mov
inc
push
mov
call
roll
mov
gs
xchg
mov
sbb
mov
mov
mov
and
test
lahf
gs
lcall
pop
cmp
test
leave
fbld
and
and
cs
and
pop
loop
push
enter
xor
mov
sbb
inc
lret
fmuls
int3
pop
imul
dec
sub
and
xlat
mov
xlat
aas
movsb
arpl
sbb
movsl
cmp
xor
inc
xchg
ss
aam
pusha
in
sub
dec
mov
sub
mov
dec
paddusb
stc
mov
fdivrl
jae
lret
push
cmp
sbb
mov
js
cmc
fimull
add
mov
jp
jo
bound
outsb
push
push
lcall
xchg
inc
in
add
incl
aam
push
mov
inc
and
push
clc
mov
test
dec
adc
iret
inc
mov
loopne
mov
pop
lret
fildll
pop
lods
sbb
das
mov
xchg
pushf
fstpl
pushl
dec
jle
mov
lods
inc
gs
rcrb
push
dec
aaa
loop
xorb
data16
cmp
loopne
jle
fildll
mov
in
pop
push
call
xor
test
dec
cmp
cs
mov
mov
aaa
aaa
pop
xchg
orl
jl
mov
inc
mov
jnp
mull
shlb
scas
movsb
mov
jo
jbe
sbb
cmp
xchg
in
mov
push
jge
cmpl
ss
in
loopne
pop
pop
push
shl
push
jle
jno
ljmp
xchg
inc
adc
cmpsb
dec
mov
dec
mov
int3
es
adc
push
jle
cmpsb
pop
mov
lea
ret
inc
xchg
clc
outsl
lret
cli
daa
mov
das
jbe
in
gs
cmp
pop
and
fisttpl
in
pop
test
mov
es
xlat
fdivl
sbb
out
pop
jmp
std
dec
hlt
shrb
jne
and
jns
pusha
mov
mov
jp
jnp
arpl
enter
test
iret
mov
popf
xchg
test
popf
push
jnp
mov
bound
lock
mov
and
jnp
dec
sbb
movsb
shr
clc
mov
out
mov
fcmovb
xchg
mov
outsl
fnstenv
fstpl
and
add
imul
popf
lahf
push
mov
dec
cmc
inc
daa
jg
adc
add
lcall
or
lds
les
ss
inc
enter
inc
inc
hlt
and
inc
ds
jmp
jge
jle
test
test
adc
jnp
lods
aas
xchg
in
add
xchg
cmp
cmp
adc
imul
inc
ret
scas
add
lea
inc
mov
shll
inc
mov
popf
gs
pop
mov
repnz
dec
jg
xchg
pop
push
into
push
leave
inc
xor
adc
out
ss
add
mov
pusha
xor
cmp
jo
stos
sbb
stos
stos
es
mov
enter
subb
scas
sbb
push
push
pop
or
and
xchg
dec
add
xor
lret
iret
ds
pop
sub
loopne
and
lods
popa
adc
sahf
mov
sub
cmp
movsl
sub
fwait
jge
inc
xor
leave
mov
mov
cwtl
hlt
and
rolb
mov
push
pop
mov
mov
es
clc
xor
jge
pop
ja
inc
es
push
xor
add
sbb
dec
outsb
pop
pop
and
cmp
decb
test
fmuls
push
jno
adc
or
xor
cltd
pop
jmp
enter
ror
sub
mov
fwait
pushf
cwtl
fwait
ss
mov
push
add
xor
jl
cli
mov
xchg
daa
lahf
mov
jnp
pop
cmp
lds
pop
inc
cs
sbbl
and
sbb
popl
outsb
push
mov
lock
pushf
jg
sub
pop
fdivs
cmp
push
or
lahf
ret
lock
cmpsb
test
sub
fnstsw
pop
push
sbb
mov
mov
mov
xchg
pop
arpl
data16
push
stos
push
shll
add
xorb
jno
mov
mov
jle
jmp
arpl
lea
add
int3
add
andb
inc
ja
dec
jns
sbbl
mov
xchg
jns
sub
cmpsl
xchg
ja
or
pop
jnp
scas
hlt
les
add
adcl
cmp
fldcw
xchg
lods
outsb
gs
fnstsw
mov
xorb
xlat
es
ss
outsl
pusha
xchg
pop
cld
jb
sti
clc
mov
or
popf
xor
xor
xlat
fsubp
jne
enter
push
loope
sub
insl
jp
out
pop
mov
jns
and
fstpl
mov
loope
push
xchg
lea
sbb
ljmp
int
aas
iret
test
std
adc
in
cmp
push
stos
jne
adc
sub
inc
in
aad
pop
mov
call
insb
lods
js
pop
jmp
add
lret
enter
repz
cmp
std
nop
push
add
sub
jecxz
mov
add
inc
addr16
ror
cld
xor
sti
cmpsl
or
popf
inc
mov
into
out
or
lods
stc
pop
cmp
xchg
fwait
lods
jecxz
lcall
cmp
jbe
es
push
or
and
jmp
int3
scas
and
dec
xor
mov
push
adc
add
or
add
jne
leave
insl
xchg
outsl
aas
push
mov
pushf
jmp
out
xor
mov
dec
fucomi
adc
cli
inc
aad
js
cli
mov
testl
in
xchg
cmpsb
and
ljmp
add
inc
out
xchg
push
cmpsl
sbb
adc
push
fdiv
pop
dec
push
sbb
leave
fldl
add
nopl
xchg
push
fs
adc
jnp
and
jp
mov
sbb
int
adc
lds
xchg
and
dec
xchg
add
sbb
addl
sbb
pop
add
xlat
jo
aas
mov
aad
sbb
mov
pop
scas
es
in
push
shll
push
ret
insb
icebp
in
sar
jge
ret
mov
jmp
pop
and
rolb
fdivrp
out
pop
cld
and
jmp
fwait
insb
push
inc
mov
rorl
das
push
mov
dec
mov
dec
pop
fstpt
ret
ficoml
mov
out
mov
push
mov
outsl
xchg
push
pushf
push
inc
ficoml
bound
stos
and
mov
mov
insb
fnstsw
push
xchg
in
mov
cmpsl
out
mov
rcrl
andb
stos
pop
lea
pop
out
das
testb
xor
adc
add
stos
aad
nop
out
lret
movsb
cwtl
fwait
add
out
int3
je
xchg
pop
aad
push
sub
addb
jb
inc
adc
xor
loop
cmp
std
cmp
cmpsb
cld
rcll
pop
xor
pop
out
jle
imul
ret
sbb
shl
and
xchg
pop
notb
sbb
inc
sbb
push
pop
xor
sbb
lret
mov
test
rclb
mov
ficoms
pop
mov
jbe
int
and
pop
pop
aas
xchg
ljmp
fwait
jno
add
pop
dec
mov
sub
mov
push
popf
push
xchg
xchg
dec
insb
cmp
mov
leave
pop
rorl
sbb
push
stos
fwait
jno
or
push
sbb
inc
mov
pop
das
push
pop
setl
jp
fadds
lret
pop
lahf
mov
dec
mov
es
xlat
daa
cld
imul
jo
hlt
cmc
pop
testl
push
incl
pop
cmpsb
repnz
jmp
imul
mov
xor
xchg
sbb
aaa
hlt
inc
cs
es
xor
xor
in
lods
scas
fistl
mov
pop
sbb
int3
pop
insb
data16
hlt
pushl
mov
scas
mov
cmp
aaa
adc
pop
and
pushf
cli
not
lock
test
xchg
jmp
dec
call
test
or
dec
fisttpll
lea
push
hlt
fnsave
push
repz
in
mov
in
mov
and
push
xchg
sbb
fadds
out
sbb
push
ret
jmp
push
jb
push
mov
fdivs
repz
or
mov
loope
and
xchg
aaa
dec
push
js
xor
rorl
fcmovbe
ja
insb
push
dec
dec
out
fs
and
in
and
jne
ret
sub
push
mov
push
stos
or
push
xchg
outsl
mov
dec
test
stos
mov
dec
add
stos
icebp
pop
cltd
in
xor
fwait
xor
xchg
and
lea
lea
mov
mov
xorl
jae
cmp
mov
js
outsb
mov
mov
sbb
enter
aas
adc
repnz
adc
adc
inc
cmp
sub
push
scas
push
lods
push
cmpb
ja
cld
jl
mov
jge
mov
sahf
inc
jl
mov
call
mov
lcall
sti
push
sub
xlat
cmp
cmpsl
xor
pop
cmc
int
xchg
and
dec
scas
push
and
dec
mov
addr16
mov
mov
mov
inc
insb
sbbb
pop
or
cmp
sub
repz
iret
mov
mov
mov
loop
aas
xchg
aas
daa
and
aaa
mov
inc
xchg
jbe
es
arpl
push
sbb
sub
cmp
pushf
pop
pop
push
mov
cmpsb
fwait
test
add
pop
dec
iret
mov
int3
and
ret
fidivrs
push
xchg
pop
movsl
sahf
add
rclb
push
out
in
mov
jae
cmp
fidivl
hlt
addl
xlat
movsl
cmp
in
xchg
or
xchg
xchg
or
mov
adc
test
mov
imul
jge
push
aaa
lcall
mov
sbb
push
sti
into
mov
popf
lods
mov
insl
cmp
xor
jo
ret
pop
mov
ja
adc
arpl
movsl
daa
sbb
popw
mov
ss
cld
adc
jle
scas
push
adc
testl
add
mov
add
xchg
inc
push
sub
testl
inc
mov
je
sub
lock
call
xlat
and
dec
lahf
xor
push
imul
xor
icebp
icebp
testl
inc
inc
and
cld
jns,pt
push
nop
pop
jmp
pusha
sarl
xchg
jg
dec
mov
sub
fs
decl
sbb
lods
or
fisubrl
movsl
jns
fbstp
lock
mov
pop
outsl
jecxz
xchg
lods
fs
clc
rolb
jl
out
mov
dec
push
mov
imul
cmc
cmp
aas
aaa
push
into
push
and
mov
rorl
mov
sqrtps
fdivs
lods
lds
xor
mov
lret
rol
dec
cmpsb
scas
loopne
mov
cmpsl
mov
js
ss
fmull
mov
mov
lcall
push
call
and
and
xchg
xor
shlb
aaa
int3
fbld
sahf
pop
stos
push
loope
inc
mov
dec
movsb
jae
scas
fsubrs
imul
push
cmp
xor
sbb
hlt
xor
pop
pop
popa
xchg
add
mov
push
in
mov
mov
and
ja
iret
dec
jg
mov
popa
push
cld
pop
imul
push
scas
push
pop
or
push
dec
or
rcrl
xor
inc
and
in
or
cli
js
imul
push
push
outsb
mov
push
popf
fldl
popf
dec
jmp
inc
fcmovnb
jnp
mov
mov
mov
inc
push
ljmp
cmp
cmp
fdivs
loop
gs
adcl
cmpsl
outsb
pop
and
loopw
loopne
inc
xor
fwait
xor
enter
jg
inc
lea
mov
imul
test
hlt
pop
push
xchg
xlat
jo
movsb
das
pmaddwd
adc
ja
loope
aas
das
dec
and
sti
add
inc
dec
arpl
xchg
leave
lcall
and
arpl
mov
inc
daa
add
pop
in
mov
adcl
cmp
sbb
add
dec
or
sti
xor
cmp
and
test
and
fstl
lret
inc
lret
and
fcomps
pop
pop
insl
cmpsl
adc
pop
filds
jno
xchg
and
lret
cmp
ret
mov
insb
jp
sbb
mov
bound
pop
lods
cltd
cmpsl
jno
aam
in
pusha
mov
or
mov
rcrl
shrb
ret
loop
lret
daa
push
xchg
gs
pop
mov
out
cmp
roll
push
and
mov
bound
xor
in
fimull
popa
out
int
jl
pop
mov
outsb
cmp
nop
pop
xchg
sub
in
inc
xor
jmp
cmc
sub
out
pop
into
or
aad
shll
jo
int3
das
jmp
out
inc
dec
or
pop
insb
rolb
ja
pop
push
std
push
test
movsb
xor
roll
in
xor
aad
mov
cltd
dec
pop
jecxz
sub
in
xchg
cmc
out
push
add
jg
call
dec
stc
cld
jl
cli
mov
bound
mov
cwtl
ror
cmp
shrb
sti
lea
mov
cmpsl
inc
out
jno,pn
gs
test
lods
adc
call
stc
mov
add
cmp
pop
cs
call
in
sarb
loope
cmpsl
xor
sbb
add
push
pop
lret
jo
and
das
mov
cmp
les
movlps
pop
ficoml
dec
mov
inc
fmuls
xchg
pop
xchg
sahf
cli
xor
sbb
dec
mov
mov
sti
lret
imul
aad
aaa
ja
jge
aas
adc
stos
scas
ss
add
test
cmp
ds
xchg
pmaddwd
xchg
xchg
inc
mov
add
mov
mov
pop
jmp
mov
push
cmp
je
add
mov
mov
or
mov
add
or
out
ficomps
sbb
push
lds
mov
repz
pop
fucompp
pusha
mov
int
cmpsb
dec
sub
in
std
iret
dec
out
add
jmp
inc
pop
mov
and
movsb
add
mov
inc
std
pop
and
or
test
add
popa
inc
js
adc
mov
pusha
and
rcr
ss
lods
dec
xchg
adc
inc
mov
jbe
shl
fisubrl
push
or
sarb
scas
fmuls
cmp
rcr
mov
push
movsb
les
add
xor
add
imul
hlt
pusha
mov
cld
jmp
dec
mov
xor
jb
pop
test
pushf
xchg
loop
mov
and
cmp
sbb
enter
cli
dec
shr
and
mov
sub
mov
mov
jnp
cltd
insl
pop
sbb
xor
jb
out
push
jns
negl
aas
lahf
outsb
in
cmp
xor
push
scas
mov
fadd
fistpl
dec
mov
sbb
outsl
jmp
enter
pop
jecxz
out
in
imul
inc
mov
fisubl
push
pop
lcall
and
jmp
dec
sbb
insl
sbb
outsl
stc
xor
stc
adc
inc
push
add
and
mov
dec
popa
sub
fdivrl
inc
andl
add
and
cmp
mov
push
sti
clc
leave
sbb
loope
adc
mov
pusha
add
flds
sbb
jae
pop
fnstcw
xlat
push
out
xchg
xchg
das
pop
xchg
jp
jne
adc
in
mov
ja
idiv
or
fcomip
push
pop
mov
inc
fwait
and
push
ret
xchg
jnp
test
push
pop
pop
inc
pop
cs
jno
fisubl
jp,pt
out
sbb
loope
dec
jp
fistps
xchg
pop
add
sbb
cmp
arpl
testb
dec
lret
mov
xlat
sbb
xchg
xchg
push
test
xchg
push
or
jbe
je
lret
sbb
rol
push
pop
xor
lcall
ljmp
stos
xchg
dec
out
push
jo
fnstsw
adc
sub
fisubrs
dec
mov
call
jbe
imul
int3
and
mov
cltd
inc
sahf
mov
ret
push
test
add
mov
push
clc
pop
push
mov
or
adc
pop
lds
movsb
push
and
out
pop
push
push
cmpsl
dec
repz
jge
jb
mov
pushf
out
das
cmp
jl
fiadds
sarb
aas
push
arpl
mov
daa
sahf
inc
loope
outsb
repnz
mov
sub
test
ja
int
bound
test
xor
inc
sbb
pop
jb
out
adc
lock
js
inc
iret
jmp
stos
lcall
into
fstpt
jle
mov
fbstp
xor
sbb
mov
sub
mov
pusha
arpl
or
mov
or
fs
mov
inc
push
xchg
fildl
mov
cmp
push
pop
sub
dec
inc
mov
sub
inc
popa
int3
jbe
sub
xlat
out
push
add
jno
imul
xor
xor
loopne
mov
fs
xor
addb
outsb
fidivrs
inc
sub
cmp
or
scas
fisttps
push
cmpsl
gs
cmp
out
pop
dec
xor
into
push
sub
jmp
xchg
adc
jp
mov
jns
daa
ret
fcoml
popa
popf
xchg
out
cmp
lcall
jmp
in
mov
mov
cmpsl
xor
lods
scas
inc
insb
jb
sub
cltd
push
je
cwtl
inc
sub
fisubl
movsl
call
sbb
cmc
repz
jno
jg
jl
daa
pop
or
dec
js
inc
pop
out
jge
pop
sub
mov
loop
lcall
jns
stos
pop
cmp
ss
mov
in
inc
into
cmp
jae
test
ret
jecxz
sbb
sub
xchg
mov
mov
lea
repz
scas
mov
inc
adc
xchg
test
mov
inc
sbb
insl
push
pop
sbb
lods
mov
pop
xchg
mov
daa
add
sub
sbb
testl
or
cmp
xchg
cld
mov
es
xor
nop
mov
inc
sbb
mov
xor
nop
adc
push
sbb
fdiv
fisttps
pusha
inc
sub
or
jg
leave
aam
das
fidivl
stos
gs
into
cmp
inc
loope
sub
out
jle
fstpt
outsb
jns
add
sub
and
adc
sub
xlat
mov
es
xchg
out
inc
insl
pop
mov
pop
add
idivl
jbe
aam
mov
add
sbb
xorb
nop
idivb
loopne
push
jns
insb
popa
cmpsb
jns
rcl
mov
clc
mov
cmpsl
lods
push
xchg
pushf
dec
ljmp
fs
or
js
adc
inc
mov
inc
mov
push
jmp
xor
sub
pop
icebp
inc
xor
jbe
push
add
xor
and
rcrl
idivb
mov
scas
cmp
ljmp
dec
ds
movsl
mov
jns
stc
and
adc
idivb
adc
orb
daa
mov
cwtl
cvtps2pd
lock
push
push
push
out
or
faddp
lods
cmc
sahf
sbb
push
into
addr16
sub
pop
inc
das
pushf
jle
push
xchg
jecxz
int
leave
fndisi(8087
shl
negb
test
mov
jne
hlt
cmp
pushf
sub
arpl
mov
mov
inc
ja
push
mov
arpl
stos
lods
rcr
test
xor
popa
adc
xchg
in
and
xor
pop
push
and
pop
push
fdivrl
xor
adc
add
enter
pusha
pop
push
inc
xor
jbe
dec
fs
movsl
movsb
rcll
loopne
outsb
shrl
sahf
leave
mov
roll
add
mov
sub
xchg
cmp
sbb
add
sbb
cmovne
or
mov
jae
mov
fsubl
sub
pop
icebp
mov
jl
add
sub
cmp
cmp
cmpsl
inc
fldt
add
outsb
pop
mov
ds
decl
push
mov
dec
mov
lds
fistpll
fists
das
sbb
aas
imul
lea
and
sahf
xchg
mov
lahf
aas
outsl
pop
dec
jbe
fimull
push
clc
roll
add
xor
rorb
mov
pop
sub
add
fcomi
test
mov
popl
push
fsubrs
inc
xchg
dec
sbb
inc
adc
push
pop
lret
cld
in
loopne
fildl
clc
repnz
cmp
and
repz
aas
push
inc
lds
push
dec
fildll
or
xchg
nop
int
or
ja
mov
popf
pop
sub
and
aas
adc
xchg
xchg
sub
pop
cs
sub
std
int
dec
push
xlat
fsubl
push
cli
adc
sub
int3
jo
sub
das
out
in
fsubrl
in
lcall
out
jb
movsb
and
mov
mov
leave
in
fs
ret
decl
xor
mov
aaa
fistps
xor
std
or
jo
push
cltd
add
clc
pop
cmp
sbb
push
nop
and
push
aas
sub
pop
dec
xchg
mov
mov
xchg
push
xor
xchg
lret
stc
ficoml
push
iret
add
mov
mov
cmp
cwtl
mov
mov
dec
xor
sti
and
mov
fistl
bound
mov
dec
pushl
dec
leave
imul
pop
or
xchg
fisubl
jmp
inc
inc
add
pop
rorb
daa
sub
xchg
mov
stc
xlat
loope
and
push
movsl
xchg
dec
dec
mov
mov
in
dec
les
cld
into
jecxz
jge
je
std
std
sub
adc
les
mov
notl
push
stos
bound
jns
mov
dec
js
lods
dec
out
sbb
inc
das
or
loop
sbb
sub
iret
shrl
sti
sub
jb
scas
xlat
je
pop
outsb
lds
push
inc
sub
pop
in
fnclex
negb
dec
sbb
inc
cmp
pcmpgtd
lea
and
pop
out
icebp
insl
jmp
push
repnz
out
imul
les
sbb
xchg
add
sbb
push
ror
fisttps
sbb
inc
xchg
cs
mov
inc
cmpsb
cld
ljmp
sub
push
dec
mov
sbb
push
sbb
mov
jo
lret
ljmp
pop
adc
rcll
cmp
frstor
mov
lret
imul
int
imul
cld
ret
add
dec
pop
mov
clc
loope
ds
les
jg
xchg
scas
and
mov
add
cmp
adc
inc
sub
arpl
inc
mov
or
pushf
cmp
cmp
scas
fwait
push
sub
lahf
mov
inc
jbe
sti
or
mov
dec
hlt
inc
sub
xchg
jae
stc
inc
mov
sub
cmp
rorl
test
mov
adc
mov
ds
sbb
sbb
and
adc
mov
add
outsb
sub
sbb
jb
jecxz
cmp
shlb
inc
popf
mov
mov
insl
sub
loop
jae
push
mov
outsl
push
mov
mov
sbb
adc
ret
lock
insb
jl
jl
aam
xlat
outsb
test
sarb
fdivrl
cmp
pop
outsb
jo
pop
push
outsl
in
xchg
jns
fsubs
mov
test
inc
sarl
dec
xor
es
out
xor
xchg
scas
pop
cmp
jne
and
fucom
test
cli
repz
lahf
push
mov
fsubl
cwtl
mov
xor
imul
icebp
adcl
leave
ss
jg
xor
cli
lea
popa
sbb
jb
mov
fisubs
outsl
xchg
inc
dec
pop
sbb
xchg
mov
iret
push
cmp
dec
aas
ja
mov
nop
adc
ds
pop
sbb
pop
hlt
push
sub
adc
or
fildl
call
jmp
jmp
imul
add
or
push
cmpsb
das
hlt
fcmovnb
loope
dec
and
jle
fwait
push
sub
popf
and
fwait
popa
mov
sub
out
dec
and
cmp
popf
bound
cld
push
inc
std
cmp
popa
pop
or
xor
shr
and
pop
cmp
repz
mov
das
adc
or
pop
inc
mov
push
and
cmp
cmp
jp
mov
cmc
mov
jge
clc
leave
es
mov
mov
xchg
dec
sub
lods
and
add
int3
xchg
bound
sub
ret
iret
daa
ljmp
scas
in
insl
pop
int
call
adc
dec
inc
xor
std
jl
sbbb
xchg
xor
xlat
mov
add
or
mov
push
sub
push
sub
xor
fs
adc
or
cmp
int3
scas
inc
cli
pop
jp
out
jo
imull
adc
pop
sti
rol
ffree
mov
push
shrb
js
mov
dec
movsb
or
add
shlb
mov
neg
mov
sub
in
sbb
cmp
mov
lcall
out
and
or
cmp
mov
sahf
mov
push
psubusb
jg
les
int3
inc
xchg
aas
inc
xor
sarl
scas
push
ficomps
lret
sti
das
xchg
imul
mov
int
std
leave
cmpsb
fisttpl
xchg
xor
movsl
ds
xor
add
xchg
or
jmp
pop
sbb
sbb
mov
pop
push
inc
dec
fsubs
repz
xchg
ret
push
pop
mov
rclb
pmuludq
push
jg
sbb
in
pop
sbb
dec
xor
stos
push
hlt
sti
jnp
cs
mov
xlat
lret
sub
mov
cmp
and
xorb
out
dec
loop
repnz
inc
scas
leave
imul
cmp
enter
stos
daa
jnp
insl
pop
pop
cmp
and
jae
aam
mov
shr
movsl
into
add
jge
popf
sub
or
pop
mov
pop
sub
sti
and
xchg
or
inc
test
dec
cli
cmc
dec
mov
cltd
dec
mov
inc
pop
mov
lock
outsl
es
iret
mov
and
jmp
stos
and
stc
sub
jo
outsl
push
leave
roll
mov
ror
and
push
nop
popa
aas
inc
shll
fdivl
xchg
cltd
push
addr16
inc
lock
aam
ja
movl
jecxz
jns
jg
notb
jle
or
dec
sbb
push
clc
movsl
sub
pop
lds
inc
jg
mov
popf
cmpsl
adc
je
out
sub
cli
fcompl
jne
adc
loopne
movsb
sub
pusha
cmp
in
inc
sbb
xor
jns
in
mov
fdivrl
xchg
pop
shlb
icebp
jae
lahf
push
daa
popf
hlt
lret
pop
pop
enter
stos
pop
jmp
insb
nop
imul
outsl
fcompl
pop
inc
notb
mov
pop
lock
cmpsb
hlt
and
in
popa
mov
mov
adc
stos
pop
into
push
invd
mov
inc
insb
mov
imul
out
jmp
in
pop
adc
inc
and
fidivl
xchg
pop
cmp
insl
popf
dec
sbb
adc
sub
rcrl
aas
adc
and
push
xchg
push
pop
lcall
pop
mov
mov
addr16
sbb
or
jecxz
test
inc
test
dec
push
rcrb
mov
mov
pushf
jecxz
sahf
inc
adc
or
cmp
xor
ret
jge
ss
lock
clc
inc
adc
out
add
sub
sbb
out
fnop
push
xor
sbb
cs
jg
mov
push
out
rcrl
or
fildl
pop
add
add
cld
xchg
inc
sub
call
push
mov
xor
mov
jle
lea
jmp
and
loope
adc
into
cld
outsl
popl
and
or
fmull
xor
adc
in
loopne
push
sub
fisttpl
sub
aad
popf
xchg
aas
or
cmp
and
std
scas
loopne
mov
xor
mov
cmp
push
aam
movsb
xor
cmpsl
icebp
inc
iret
imul
adc
shrb
jns
and
in
movsb
jmp
sti
out
mov
and
pop
xor
xchg
xlat
jbe
sti
pop
inc
enter
je
dec
add
scas
loop
lock
mov
cmpl
mov
out
nop
lret
jbe
mov
stos
sbbl
or
pop
shr
mov
push
push
popa
jg
imul
cmpsb
jae
lods
xor
movsl
int
pop
xor
popa
jge
sub
or
sbb
lds
inc
and
es
lods
xchg
inc
jmp
inc
sub
insl
cwtl
int
pop
xchg
push
sub
stos
subl
and
aam
scas
pop
sub
inc
inc
aaa
mov
sti
jmp
pop
lds
dec
or
pop
add
cmpsl
div
xchg
mov
cli
jl
push
mov
push
inc
movsb
inc
lock
out
dec
dec
and
or
pop
pop
stos
movsb
push
inc
je
outsl
bound
test
lock
push
xchg
ja
jb
mov
mov
jge
sub
stos
mov
cmpl
and
mov
aaa
popl
fdivs
pop
imul
int
int
shlb
mov
inc
jle
sarb
cli
mov
adc
gs
mov
in
hlt
leave
inc
movsl
and
nop
jmp
fs
cmp
inc
fnstcw
insl
or
lahf
pusha
int3
push
push
in
jne
jp
cmc
inc
jge
into
jnp
lcall
mov
test
shlb
cmpsl
push
dec
xchg
push
push
mov
dec
mov
pop
pushf
cli
adc
or
and
and
cmp
push
and
adc
data16
roll
or
ret
cmpsl
int3
cli
popf
ds
test
cmp
or
mov
add
xchg
adc
lea
ret
mov
in
inc
jl
jp
mov
insb
ret
add
js
jne
cmpsl
repnz
mov
mov
sub
mov
inc
xchg
repnz
mov
and
das
jne
lea
cmc
mov
mov
jnp
js
cmp
in
or
push
push
mov
mov
repnz
mov
out
jbe
push
xchg
sub
stos
insl
mov
add
pop
nop
xchg
xlat
je
into
sub
inc
stos
std
adc
mov
inc
sarb
icebp
lcall
daa
sbb
fadds
xor
js
fsubs
dec
aam
push
or
insl
xchg
bound
lock
pusha
dec
icebp
ljmp
xchg
xchg
movsb
mov
push
scas
sti
xchg
imul
xchg
sub
pop
inc
clc
jno
sub
jo
mov
push
lret
or
pop
ljmp
orl
imul
stos
rorl
push
ds
enter
in
xchg
push
inc
sub
mov
insl
scas
pop
xlat
or
outsl
sub
pop
icebp
test
sub
add
popa
adc
push
or
sub
push
aad
jnp
sbb
in
or
jg
sarl
bound
cmp
cs
pop
mov
sbb
inc
xor
sti
lret
xor
test
xchg
or
and
push
or
int3
mov
das
outsl
fwait
sub
fwait
push
gs
les
pusha
cli
pop
stos
bound
adc
pop
sbb
xchg
andb
sbb
mov
xchg
negb
movsb
add
mov
cmp
outsl
pop
push
or
xor
icebp
pop
dec
mov
cmp
pop
in
shrl
out
imul
add
aad
movsb
imul
jbe
push
pop
push
xor
jno
int
cmp
xor
pop
sbb
cmp
mov
pop
stos
nop
outsl
push
add
rclb
mov
xchg
rcrb
fs
xchg
add
pop
std
lret
mov
adc
clc
lods
loope
adc
stos
pop
shr
fisttpll
pop
mov
dec
sahf
mov
lea
mov
mov
rolb
loope
cmpsb
sarl
or
mov
add
jno
sub
je
fdivl
push
ljmp
mov
and
inc
es
sub
fstp
in
pusha
cmpsl
or
mov
stos
stos
cwtl
outsb
daa
sub
push
orl
mov
mov
movsl
add
xor
xchg
out
rcr
sbb
aas
stos
andl
arpl
and
imul
int
jmp
pop
aad
cmpl
inc
in
add
rclb
fcoms
sbb
out
movsl
push
mov
push
xor
out
xor
inc
fimuls
jno
int
pop
pop
sbb
dec
sbb
std
sti
or
pop
adc
push
dec
adc
test
mov
mov
mov
pop
cltd
es
mov
fidivrs
lock
pop
xchg
test
or
popa
gs
inc
imul
pop
test
out
xchg
outsl
ja
cwtl
adcb
pop
push
inc
cld
loop
mov
add
xchg
repnz
insb
xchg
gs
and
int
add
add
mov
dec
cmc
out
push
lds
ficompl
out
fwait
mov
repz
ss
inc
clc
icebp
cs
sub
add
enter
and
and
mov
inc
ret
add
push
xchg
daa
shl
cmc
pop
inc
jae
clc
out
aas
jno
adcb
sbb
cmp
out
and
in
shrl
dec
enter
sub
or
outsb
jnp
fnstenv
push
loopne
add
cmc
frstor
mov
dec
ljmp
movsl
fwait
gs
xchg
sbb
sbb
inc
and
aaa
movsl
cmpsl
test
lcall
dec
outsl
sbb
outsb
xchg
jl
cltd
lret
test
push
push
or
ljmp
mov
mulb
push
xchg
pop
mov
repnz
in
cmp
xor
jmp
pop
cmpsb
jbe
or
jp
mov
xor
in
mov
cmc
mov
popa
cmpsl
pop
in
jo
lds
int
shrl
lock
push
js
js
stos
sbb
cld
pop
scas
mov
pop
repz
pop
call
fcmovnbe
scas
sub
or
cli
or
xlat
sbb
sub
jmp
insl
push
sets
cwtl
lret
in
arpl
jg
xchg
mov
dec
icebp
or
ds
sbb
add
fcomip
aad
push
push
adc
paddsb
inc
lcall
adc
imul
and
pop
fldt
mov
stc
push
jb
ljmp
push
sbb
leave
xchg
cld
inc
sbb
xchg
pop
fwait
sub
mov
dec
fidivrl
mov
sbb
call
jno
les
test
icebp
repnz
insl
insb
out
js
das
out
inc
lret
lock
mov
mov
scas
ret
imul
sbb
jecxz
pushf
pop
fninit
add
outsb
push
les
pop
hlt
lock
popf
or
push
in
pop
lret
adc
rcrb
xor
inc
ret
mov
or
div
in
out
jmp
pushf
insl
jno
or
jne
outsl
add
dec
int
shlb
popf
cli
lods
cmp
std
and
pop
push
cmp
lock
xchg
sbb
push
fwait
jne
ds
jge
xchg
cmpb
cmpb
scas
mov
pop
nop
mov
pop
dec
shrl
or
and
in
mov
leave
xchg
mov
xchg
int3
xchg
xchg
sub
popa
xlat
pop
mov
xorl
aam
mov
mov
or
adc
cmpsb
test
jmp
cmpl
xor
int3
out
jge
fldenv
je
jle
iret
mov
cmp
and
arpl
lret
cmpsl
ficoml
enter
outsl
lock
cli
add
inc
dec
jge
out
jo
push
fdivrs
orb
out
ljmp
push
sbb
pop
dec
incb
mov
rcr
out
inc
cs
lea
add
ss
dec
loopne
jne
xchg
cld
je
pop
test
or
or
jne
xchg
popa
movsl
pop
je
and
imul
idivb
sete
int
fidivrl
dec
sub
cs
and
imul
les
pop
icebp
fwait
ds
push
ja
adc
adc
inc
cld
push
jo
into
dec
ljmp
movsl
mov
out
adc
jae
enter
inc
into
aam
imul
xchg
add
out
divl
mov
movsb
inc
cmp
stos
bound
pop
or
hlt
pop
or
test
xchg
push
dec
js
rcrl
xchg
decl
lret
pop
lcall
imul
jge
jbe
dec
sub
lods
pop
out
fisubs
jae
inc
xor
out
lret
adc
mov
fs
std
aam
outsb
and
popf
shl
shrb
mov
dec
in
xor
aas
ror
add
jmp
call
sub
cs
sbb
div
das
test
test
dec
pusha
inc
mov
sbb
mov
xchg
ljmp
jae
loopne
add
test
mov
stos
sbb
push
sub
adc
jns
mov
xor
cld
inc
inc
mov
stos
cld
adc
fidivrs
mov
sbb
icebp
dec
dec
dec
xorb
into
insl
push
jnp
adc
pop
sub
mov
and
test
in
sub
xor
xchg
dec
insl
fsubl
cmp
ja
lahf
iret
call
cmp
and
jae
lea
aad
xchg
pop
and
inc
cmp
jp
mov
lcall
cwtl
out
int
and
mov
jb
mov
dec
cs
mov
shll
jg
shll
lds
in
push
pop
jne
inc
push
push
cmpsb
fmull
push
movsb
insb
or
cld
insl
scas
nop
xlat
out
fldz
aas
jae
sub
subl
into
mov
mov
imul
xchg
jb
mov
aad
inc
fwait
jp
and
sub
out
pop
cmp
fs
iret
and
xor
push
xor
add
sbb
dec
push
inc
push
mov
jl
pop
insl
lret
fcompl
call
jecxz
jno
cmp
mov
jb
sarl
sub
sbb
in
aad
out
ret
dec
int
cmp
sub
repnz
mov
outsl
jae
in
jns
push
subb
cwtl
leave
and
mov
outsb
ret
in
int3
mov
in
dec
xchg
iret
jb
xadd
push
push
lea
inc
mov
jns
sbbb
cmc
cmpl
and
xor
lret
imul
addr16
xor
hlt
mov
outsl
jne
arpl
and
cmp
std
sbbb
jae
das
ret
cld
enter
es
sub
cli
jnp
push
cmpsl
inc
lahf
mov
push
lret
insb
sbb
lea
add
push
pop
add
xchg
pop
sub
mull
in
add
ja
cmpsb
sub
dec
out
add
fdivrs
jg
rolb
cmpsb
out
dec
repnz
add
adc
or
xchg
ret
xchg
pop
xor
or
aad
pop
xchg
inc
outsl
adc
sbb
iret
push
push
dec
adc
inc
ret
imul
sbbb
add
inc
adc
loope
cs
and
movsb
push
pusha
adc
lock
test
push
mov
repnz
sbb
push
ja
bound
mov
dec
adc
pop
test
mov
cli
fs
aaa
mov
inc
mov
add
mov
fwait
dec
les
fcompl
testb
push
cmp
insb
subb
mov
movsl
jecxz
nop
aaa
and
mov
push
sub
pushf
loopne
fistpl
inc
mov
outsb
xchg
lea
imul
mov
pop
mov
jmp
fcmovnbe
cmp
pusha
sub
dec
repnz
mov
pushl
sbb
lock
in
and
sub
jae
xor
outsb
adc
out
pop
stos
sbb
jae
jge
gs
rcll
or
push
xor
or
and
cmp
fwait
dec
cmpb
mov
sbb
push
bound
xor
push
push
add
lahf
test
insb
xlat
pop
mov
add
cmp
push
inc
inc
xchg
clc
mov
and
movd
cwtl
xor
nop
scas
pusha
push
mov
mov
ja
sub
cpuid
ss
decl
jno
aas
inc
mov
jns
jae
fbld
into
sub
pop
fbld
sbb
orps
xor
popf
ds
es
adc
mov
in
dec
pop
pop
sbb
inc
sar
lock
mov
popf
popa
shlb
shrb
mov
sub
inc
add
cmp
shll
inc
pusha
jg
out
xchg
cmc
inc
daa
divb
nop
jb
and
test
dec
aas
shrb
mov
fst
arpl
inc
fwait
repz
cmp
filds
iret
in
push
jno
data16
loopne
xor
js
loop
test
cld
mov
push
out
icebp
sub
cmpsb
mov
leave
sbb
and
aaa
inc
stos
ds
adc
inc
out
adc
push
andb
mov
je
mov
inc
add
mov
cmp
dec
jns
pop
in
and
outsb
adc
ror
pusha
sahf
mov
push
iret
push
out
xchg
push
jg
or
pop
loopne
scas
dec
xchg
jns
in
sub
xor
repnz
lods
mov
xor
lods
ljmp
push
les
lods
aaa
les
lea
shll
sbb
xchg
push
lret
jp
fs
mov
mov
sub
xor
and
rclb
rolb
test
xchg
call
clc
push
pop
mov
clc
cmpl
sub
insb
popa
pop
std
inc
lcall
je
movsb
sbb
cmc
sub
sub
sub
push
push
cmpsb
push
std
mov
push
cmp
inc
pop
jg
mov
in
stos
aam
nop
xor
and
ret
ss
lret
ror
outsb
test
cmp
push
mov
sub
shl
aad
push
cltd
mov
mov
jb
in
inc
mov
pop
cmc
mov
test
pop
inc
jnp
gs
xchg
popa
pop
and
pop
shlb
mov
dec
gs
sbb
stos
xchg
lods
test
pop
hlt
mov
sarl
fnstcw
xlat
stos
jno
xor
add
sarb
sub
adc
scas
ds
sub
dec
xorb
xchg
fsubrs
lock
enter
or
add
mov
dec
ltr
xor
push
mov
mov
test
insb
jnp
add
bound
pop
loopne
fcoml
lds
insl
cmp
int3
xor
sub
xlat
lea
jnp
jecxz
gs
dec
test
push
hlt
lods
lods
sbb
pop
adc
out
inc
cli
xchg
adc
daa
bound
xchg
shl
inc
mov
inc
test
hlt
outsl
aaa
in
or
pop
lahf
fdiv
cmp
jge
aad
and
and
pusha
ds
outsl
or
dec
insl
xor
stc
cltd
ret
pushf
xor
xchg
jbe
add
adcb
mov
mov
std
iret
xor
ljmp
bound
dec
bound
push
dec
das
ljmp
aad
inc
push
enter
pop
mov
mov
pushf
fmul
fsubrl
pop
and
andl
cld
gs
push
fcomps
add
push
idivb
dec
inc
pop
stos
xchg
out
scas
inc
mov
es
push
jp
jne
pusha
jle
int
out
inc
pop
stos
in
outsl
push
sti
push
and
cld
loop
mov
and
aas
adc
inc
xlat
into
leave
jne
divl
push
lret
scas
or
test
cmc
outsb
call
sub
repnz
xchg
mov
jle
fdivr
adc
pushfw
gs
mov
scas
xchg
mov
out
dec
insl
aad
clc
sub
rcr
adcl
fldl
shll
enter
mov
mov
cld
cmp
je
cmp
dec
and
push
call
mov
lea
daa
mov
fstl
or
jo
stos
call
leave
mov
jnp
shrb
and
xchg
int
jle
repnz
dec
cltd
or
cli
push
repz
out
imul
push
pop
push
das
dec
push
jg
lea
in
push
sbb
imul
roll
addl
insb
cli
nop
adc
or
das
loop
mov
mov
flds
add
imul
push
cmpsb
test
rcl
push
jmp
inc
test
push
jbe
mov
push
push
jle
lcall
test
fists
dec
jecxz
push
add
outsb
jecxz
sbb
ret
fbstp
mov
shlb
fidivl
sahf
cmpsl
xchg
adcb
in
xchg
jecxz
inc
mov
mov
inc
ja
dec
mov
daa
rolb
jmp
cmp
xchg
in
out
outsb
adc
hlt
mov
push
in
rolb
jno
adc
mov
lock
and
das
rorl
repnz
or
in
mov
fnsave
push
mov
jl
out
js
vpunpckhbw
dec
mov
add
adc
dec
cmp
jns
jl
jbe
mov
jno
inc
bound
xchg
pop
pop
sarl
clc
sub
mov
std
popa
testl
lcall
pop
fwait
ja
jno
call
pushf
mov
lcall
cmc
shrb
mov
xchg
mov
push
repz
aaa
sub
xchg
jae
aam
mov
push
adc
inc
sbb
push
outsb
movsb
pop
push
mov
mov
sbb
jg
call
inc
xchg
movb
aaa
jno
imul
cmp
test
dec
xchg
or
jne
mov
add
xchg
sub
ljmp
lahf
adc
scas
les
pop
fnstsw
popa
mov
fwait
add
and
ja
inc
lea
or
gs
cmp
jg
repnz
outsb
bound
mov
mov
inc
movsb
test
mov
test
into
mov
and
scas
out
ret
aad
mov
nop
sar
imul
sbb
mov
sahf
pop
add
jl
hlt
cmp
jmp
in
and
cmpsb
int3
fimuls
adc
and
fucompp
cmpsl
cmpsl
xlat
data16
js
push
xor
sub
mov
xor
lahf
ljmp
mov
bound
sti
push
mov
test
add
fs
pop
nop
mov
insb
fdivs
loop
testl
shl
sub
orb
ret
jecxz
in
mulb
inc
and
mov
sub
icebp
out
xchg
xor
or
mov
and
loope
inc
rclb
in
cmp
push
or
std
daa
push
or
out
out
push
sub
mov
test
movsl
push
pop
mov
mov
outsb
inc
loope
int
in
out
and
mov
or
pop
jle,pt
mov
xchg
xorl
lret
negl
leave
jecxz
mov
hlt
fstpt
push
mov
xchg
aaa
mov
jg
inc
lods
and
push
fsubl
js
mov
and
inc
adc
mov
data16
sbb
pop
shll
and
pop
roll
or
aad
sub
loop
int3
rcr
dec
push
enter
test
jo
sbbb
jecxz
into
dec
cmpsl
fadds
movsb
ret
aas
mov
fmul
sbb
in
iret
nop
xchg
xchg
popa
ja
sub
cltd
arpl
rclb
adc
pusha
cmc
pushl
ljmp
cmp
notb
mov
popf
xchg
test
std
ss
movsl
jb
bound
adc
pop
push
fisubl
mov
push
mov
adc
and
pop
jmp
pop
fwait
out
insb
jp
int3
test
xchg
xchg
mov
into
enter
jmp
adc
enter
subb
and
fs
scas
xchg
jg
cmc
mov
sbb
cmp
mov
jp
jl
xchg
sub
in
xchg
sub
aam
outsl
inc
push
push
clc
cmp
jle
inc
sarl
xor
pop
out
aas
push
cmpsb
in
and
cli
lret
and
dec
xorl
jbe
mov
pop
xorl
mov
mov
add
sahf
test
mov
lcall
push
mov
addl
loope
jmp
and
xchg
ret
xchg
out
push
inc
jb
add
or
inc
pop
dec
jecxz
dec
stos
out
mov
and
sbb
cltd
fisttpl
add
inc
mov
clc
rcrl
xchg
cmp
dec
add
pop
push
scas
xchg
jmp
xchg
or
in
sahf
int3
and
fdivrl
insl
dec
push
sub
inc
lret
dec
sahf
push
shlb
in
lcall
inc
inc
push
shrb
cmp
xchg
idivb
lds
ds
ror
leave
cmp
sub
jno
mov
dec
mov
bound
xchg
cld
xchg
cmp
sbbb
nop
loopne
mov
mov
and
ds
popa
pop
scas
iret
xor
mov
call
outsb
push
pop
pushl
jmp
inc
push
rcrl
ret
mov
mov
mov
push
pop
in
pop
sub
dec
or
fwait
push
sub
cmp
inc
dec
lods
or
mov
in
and
jne
xchg
xchg
mov
xlat
je
jmp
sub
cmp
dec
shr
cmpsb
mov
sbb
mov
movsb
xor
cmpsb
mov
cmp
aas
loope
sbb
adc
adc
inc
mov
shlb
mov
mov
jo
adc
test
dec
xchg
sarl
mov
push
test
xchg
imul
jo
jns
fistpll
push
shlb
rcll
push
mov
jnp
aaa
mov
int
cmp
testb
mov
stos
jp
insb
cmp
mov
sbb
daa
repnz
inc
shrb
insb
push
sbb
int
xor
repz
xchg
xadd
into
les
sub
cmpsb
sbb
imul
dec
lea
inc
fcmovbe
shlb
jnp
loopne
pop
in
imul
add
mov
cli
xchg
dec
sbb
pop
lock
xchg
jns
mov
in
pop
or
cmp
push
outsb
icebp
lock
xlat
xchg
add
mov
inc
pop
addr16
adc
fisubs
movsb
lock
test
jecxz
push
dec
xchg
cwtl
js
jmp
cmp
sti
rep
js
mov
aam
mov
push
in
inc
test
imul
mov
loop
jp
icebp
data16
adc
add
or
sbb
lret
sub
push
xchg
sbb
cwtl
aad
mov
dec
inc
push
sub
lea
das
into
cmp
pop
fstps
les
sti
fidivrl
adc
xchg
fsubrs
mov
addb
int
sub
jbe
cwtl
inc
enter
push
mov
popf
fucomi
inc
in
mov
aas
lea
sti
sub
dec
cmp
or
cli
out
int3
lcall
adc
std
lret
lods
xor
push
xor
inc
inc
test
jne
loopne
add
stc
xchg
pop
arpl
fcmovnbe
jne
mov
sbb
jg
xor
mov
push
and
cs
jmp
or
push
lahf
in
repz
fisubrs
push
mov
fstps
aam
jg
int3
jp
fs
lods
mov
aad
inc
or
xchg
in
out
popf
ljmp
xchg
mov
sbb
into
cmp
pop
sub
test
rcr
pop
inc
sbb
les
cs
sub
scas
and
inc
shlb
movsb
movsl
lret
inc
mov
test
pushf
pop
jnp
mov
cmp
mov
mov
push
dec
mov
in
sbb
mov
push
addr16
aas
mov
or
xor
in
push
cld
add
enter
push
sub
mov
lods
je
jns
push
xchg
push
lret
insb
pop
outsb
jbe
in
mov
popf
je
popf
sub
testb
inc
inc
jp
xor
stos
and
or
in
bound
ret
mov
cmp
les
inc
sbb
cs
push
insl
mov
leave
sar
push
inc
nop
adc
push
mov
repnz
xor
pusha
jmp
jae
xchg
ficoms
aas
xchg
cmpsb
test
loope
cmp
xor
mov
subb
arpl
int
pop
adc
add
xor
jne
xor
pushf
call
adc
push
aam
lock
cwtl
rclb
aam
mov
pop
in
movsl
call
xchg
and
mov
cmpsb
pop
sbb
mov
outsb
jg
mov
push
dec
pop
adcl
cmpsl
jle
push
jmp
and
xor
jnp
or
addr16
imul
fwait
sti
and
mov
or
ljmp
jb
jae
setge
or
inc
jmp
std
sub
mov
jns
fwait
jge
sub
inc
mov
dec
lret
lods
daa
out
ret
add
repnz
xchg
popa
add
jge
or
mov
mov
stos
cmp
jl
and
cmp
inc
js
mov
fwait
jge
clc
sbb
insl
and
loop
lahf
mov
xchg
jp
dec
stos
mov
push
jno
pop
fwait
rcrl
out
std
icebp
test
xchg
out
cli
push
cmc
inc
add
inc
xchg
int3
add
cli
inc
adc
xlat
jecxz
bound
inc
xchg
repnz
scas
insb
test
lds
jno
add
out
movsb
lods
pop
mov
pop
pop
test
filds
xor
rol
and
cmc
sbb
mov
lahf
ljmp
add
jg
and
jno
mov
fidivrl
enter
ss
push
adc
jge
and
cmp
ss
push
adc
sar
sbb
cmp
xchg
mov
cwtl
jne
adc
and
in
fsubl
push
push
aaa
stos
cmp
ljmp
mov
adc
mov
inc
fisubs
or
sub
mov
js
push
xor
ljmp
push
mull
popa
insb
fs
dec
mov
dec
xchg
cmovle
xor
int3
xchg
and
add
and
repz
clc
mov
sub
jg
test
pop
mov
jmp
sti
adc
pop
push
jg
pop
sub
mov
pop
mov
jge
mov
and
aad
push
push
pop
fisubrs
xchg
and
inc
sub
pop
mov
pop
sub
xchg
push
test
popa
pop
jbe
pop
pushf
dec
pop
sbb
push
lock
inc
mov
pusha
iret
mov
xor
pop
loope
pop
xor
in
cli
shrl
fildl
jb
pop
pushf
pusha
sub
xor
ret
and
add
or
out
or
adc
aam
mov
sbb
cmpsl
or
sahf
jbe
mov
pop
sub
mov
xlat
or
mov
int
loopne
int3
inc
lret
or
in
mov
or
push
out
or
sub
jb
or
mov
iret
shll
mov
sbb
xchg
push
rcrl
cmpsl
scas
insb
daa
or
fcmovnbe
add
jmp
sub
push
pop
enter
push
adc
cmp
testl
adc
xchg
pop
pushf
scas
imulb
inc
pop
sbb
fs
pop
pop
ljmp
or
mov
iret
mov
ficoms
mov
adc
in
lock
jns
ret
movsb
add
sti
in
leave
mov
dec
push
lret
mov
mov
push
cld
jle
andb
adc
idivl
adc
scas
or
int
mov
jae
and
pop
pop
or
test
xchg
and
clc
shlb
fwait
xchg
test
dec
int3
gs
xchg
cmc
push
loopne
fsts
icebp
mov
mov
xor
vpmaddwd
sbb
sub
fists
es
xor
adc
and
xchg
push
lret
mov
loop
sub
fstpt
test
xchg
cs
mov
cli
test
cmp
mov
xchg
data16
mov
divb
or
sbbl
les
push
and
cli
push
cld
mov
cmc
mov
mov
jne
pop
cwtl
cli
push
sub
mov
cmp
clc
stos
mov
popf
sbb
pop
or
aaa
cmp
cmp
mov
adcb
mov
test
or
xchg
cmpsl
xor
aad
out
sbb
cmc
mov
xchg
pusha
arpl
and
stos
stos
dec
sub
fildll
arpl
push
push
rorl
jl
cld
xor
mov
cmp
mov
mov
test
enter
out
or
dec
daa
loop
push
lds
cmp
test
and
mulb
xchg
scas
mov
xchg
inc
in
ror
mov
add
push
and
cmp
push
cwtl
dec
xchg
jg
xor
les
leave
mov
std
cmp
pop
lcall
andb
push
addr16
aaa
int3
fisttps
xchg
jns
movsl
popf
rcll
std
pop
add
in
lcall
int
mov
fsubrl
cwtl
dec
in
lock
out
mov
lods
mov
aaa
jmp
std
jl
push
xor
jae
aam
mov
sub
hlt
xchg
in
jg
rsm
outsl
jp
inc
test
jbe
rolb
jge
sub
adc
mov
lahf
inc
pop
mov
clc
sub
add
test
mov
ds
cmp
imulb
es
clc
rcrb
dec
mov
stc
push
hlt
and
pop
bound
add
inc
adc
clc
out
jae
les
lcall
xchg
xor
xor
into
mov
or
add
jecxz
data16
in
adc
xchg
dec
sarb
sub
movsb
lret
out
mov
push
pop
jg
mov
call
pusha
sti
mov
mov
jns
fldcw
dec
jl
mov
jnp
cltd
mov
int3
lcall
xor
lods
pop
adc
imul
mov
js
or
or
fldz
mov
cmc
push
pop
xchg
icebp
sub
mov
loopne
push
and
test
xchg
cmp
ljmp
fwait
in
sbbb
cmp
nop
and
xchg
add
fwait
out
mull
add
dec
movsl
xchg
or
lea
and
call
pop
or
adc
jns
mov
stos
repnz
pop
xor
mov
out
sbb
pop
popa
mov
adc
scas
or
sub
cmp
cwtl
xchg
mov
mov
jg
lret
cmp
and
mov
fisttps
in
adc
or
ret
js
mov
mov
dec
js
inc
clc
ret
outsb
add
jecxz
shlb
push
nop
sbbl
andl
lods
insl
inc
pop
fwait
cmp
mov
inc
cld
icebp
mulb
pop
outsb
lahf
sub
dec
jl
jo
aad
sbb
pop
addr16
xor
lea
or
xor
cmp
adcb
fmul
inc
int
call
aas
je
mov
jmp
sbb
js
mov
inc
enter
fsubr
loope
pop
js
xor
lds
int
mov
sahf
push
push
testb
adc
ja
loop
fdivrl
pop
cmc
loope
lea
mov
mov
sub
imul
mov
or
ss
inc
cmpsb
and
es
fs
mov
lock
out
mov
mov
mov
fadds
out
ss
sbb
jae,pt
sub
leave
pop
sbb
testb
pop
xor
ret
push
or
scas
fwait
test
ftst
pop
jecxz
jb
test
dec
fistpll
pop
sarl
push
js
add
lea
pushf
mov
ja
sub
lods
mov
bound
add
das
in
out
push
sub
or
into
jmp
mov
pop
inc
and
lret
cwtl
push
cmp
mov
mov
pusha
js
sarl
mov
loop
lock
jne
and
inc
push
mov
sahf
mov
lods
adc
jo
add
daa
dec
lahf
je
xchg
dec
lods
push
pop
cmpsl
add
int
push
sbb
sub
subb
xor
mov
xor
inc
jno
mov
push
cmp
xchg
xchg
cmpsl
popf
into
xor
ds
test
dec
clc
add
jnp
sbb
aas
mov
insb
xchg
push
cmp
push
fnstsw
dec
cmp
dec
aam
cmp
pushl
test
sbbl
sti
inc
and
push
movsl
push
jb
in
shll
dec
into
mov
roll
xchg
notl
lds
mov
jmp
inc
xor
movsb
sbb
shl
mov
and
cmpsl
cmp
cmp
xor
mov
mov
pop
lret
ret
clc
jno
push
sbb
popa
daa
fisubrs
mov
lock
xchg
sbb
fs
cmp
aad
adc
cltd
pop
sub
jns
add
dec
inc
pop
jae
out
clc
ret
adc
push
and
enter
inc
shrb
jo
mov
ds
arpl
cmp
mov
arpl
mov
mov
jmp
jne
push
xor
pusha
mov
cmpsl
add
mov
fbld
imul
loop
popf
lret
je
mov
inc
xlat
je
push
in
rol
nop
mov
pushf
shl
dec
sbb
cmp
aam
jo
inc
insb
mov
and
shll
loope
inc
push
xchg
xchg
cmp
or
jge
xlat
call
inc
repnz
sbb
lret
je
aaa
pop
test
mov
mov
je
inc
fs
dec
int
mov
adc
pop
push
mov
mov
push
int
add
and
lret
mov
mov
fdivrl
adc
cmc
lcall
pop
push
cmp
loopne
je
xchg
push
lods
mulb
adc
mov
or
fs
rsm
lahf
in
cmpsb
lcall
pop
fists
jl
fnstsw
pop
mov
roll
cltd
loop
rolb
stos
loop
inc
adc
inc
into
sub
leave
lods
push
xor
jp
addr16
pop
mov
andb
sti
push
inc
clc
inc
jecxz
cwtl
shlb
dec
lahf
sbbl
ret
inc
loope
repnz
fdivrs
lods
test
jecxz
adc
cli
out
lock
test
fsub
sbb
in
add
xor
mov
xchg
adc
aas
mov
mov
pop
pushw
and
sbb
fldl
icebp
testb
out
cmpsl
loop
adc
sbb
lea
jae
shrb
dec
test
mov
jbe
int
outsl
rorb
das
and
jg
aad
dec
sahf
mov
jg
push
cs
nop
cmp
movb
cmp
pop
or
inc
pop
and
les
jecxz
and
mov
sub
mov
out
mov
jecxz
fidivs
inc
sti
inc
in
idiv
dec
lea
push
das
fwait
cmpsl
jns
xchg
and
dec
lret
cmp
adc
outsb
mov
stos
aad
fsub
gs
inc
cmp
aaa
pop
scas
push
jle
loope
inc
icebp
jge
push
cmp
outsb
dec
mov
loope
fwait
pop
rolb
pop
fldl
add
fldcw
add
test
mov
jmp
roll
pop
cmp
adc
stc
pop
or
je
fnstcw
adc
insl
push
fdivl
pop
int3
pusha
scas
adc
xor
xchg
jns
mov
divb
sub
movsb
xor
pop
sub
or
jbe
add
adc
pop
sub
enter
mov
pop
aam
pop
cmpsb
out
sarl
sbb
dec
adc
loope
ret
lds
or
cli
mov
pushf
pop
xor
lods
cmp
enter
fisttps
xchg
fstl
mov
es
sub
std
bound
xchg
lahf
mov
imul
pop
adc
or
insb
adc
jo
mov
xchg
xor
or
pop
mov
insb
int3
test
sub
push
movsl
or
imul
sub
imul
push
mov
lcall
pop
push
xor
cmpsl
push
or
fs
enter
fidivl
lea
fmul
mov
lret
inc
sub
and
dec
sub
cld
repnz
mov
dec
enter
mov
mov
and
mov
sbb
insl
scas
mov
mov
jae
or
lea
jo
jns
mov
push
sub
and
pop
dec
pop
pop
cli
cs
enter
popl
sti
adc
cmp
adcl
push
addr16
and
xor
jmp
pop
sti
popa
push
shlb
into
and
push
jl
dec
or
push
dec
movsl
xchg
enter
add
iret
imul
xchg
fiadds
fwait
sub
inc
mov
cmpsb
aad
call
inc
pop
cld
test
adc
pop
mov
inc
bnd
xor
test
pop
rorb
adc
cmp
enter
call
test
inc
into
sti
repz
cmpsl
out
loop
lret
out
fcomps
lock
fisubrs
push
andl
add
or
jb
push
das
stos
in
ja
mov
or
scas
fbld
mov
add
push
outsl
lea
lahf
lret
pop
jl
scas
and
fwait
push
mov
mov
mov
jno
sub
add
insb
add
repz
int3
fisubs
cmp
lds
add
cmp
rorb
icebp
test
or
scas
mov
add
cltd
xchg
xchg
add
clc
lret
lret
xor
gs
addr16
test
adc
cwtl
mov
test
inc
cmp
sar
push
or
sti
push
jo
into
pushl
xchg
and
dec
shl
stos
decl
gs
int
fld
aam
adc
inc
and
stos
xor
mov
jl
stos
fnsetpm(287
or
and
in
or
inc
jb
popa
dec
lea
add
sbb
stos
arpl
dec
xchg
jo
push
xchg
mov
sub
xchg
and
push
sbb
adcl
loopne
xor
cmpl
fsubrs
mov
cmpsb
ds
mov
or
jmp
mov
push
cld
and
icebp
lock
sub
xchg
fdivs
cli
sbb
scas
dec
loop
push
test
inc
stc
jbe
pusha
pusha
mov
jb
mov
je
push
xor
movsl
int
pop
inc
fwait
add
adcl
int3
and
dec
cs
into
sub
push
mov
pusha
les
sarl
mov
lds
cli
clc
mov
test
xchg
fisubs
mov
pop
mov
aaa
lods
mul
fdivs
adc
add
mov
js
sti
mov
push
inc
mov
neg
mov
movsl
icebp
xchg
popf
jmp
sub
sbb
es
sub
lret
mov
jbe
pusha
cmp
push
push
out
xor
sbb
mov
and
enter
push
sbb
adc
test
cmp
push
xor
insb
or
sub
sub
add
and
push
cmp
push
mov
loopne
divb
mov
divb
sbb
fwait
movsb
lea
in
jnp
pop
outsl
addb
pop
inc
ss
clc
rcrb
xchg
mov
divb
in
cmp
insb
xchg
nop
lock
fildl
add
loop
adc
leave
sub
push
or
jae
in
lcall
inc
scas
repnz
xchg
addr16
lret
and
add
mov
xchg
mov
cwtl
ljmp
inc
pop
jp
out
xchg
sub
incb
sahf
in
mov
mov
cli
sub
icebp
dec
inc
inc
fistpl
pop
jecxz
sarl
adc
movsb
and
jb,pn
hlt
mov
repz
in
shr
shlb
popf
fcomps
shrl
sbb
and
loop
push
cli
inc
scas
or
dec
int3
mov
inc
or
or
stos
fidivrl
enter
push
inc
push
add
sub
enter
aas
pop
ss
adc
ficomps
push
adc
jae
icebp
sub
daa
js
sahf
mov
mov
roll
out
xchg
call
lahf
hlt
call
mov
xchg
cs
addr16
das
out
cmp
dec
cmp
push
imul
movsl
repz
lods
mov
jo
pop
fwait
cmp
pop
scas
mov
or
enter
mov
xchg
cld
nop
call
xor
push
sbb
and
movsb
pop
mov
mov
mov
dec
sub
sbb
jo
inc
mov
fsubl
mov
mov
pop
fistpl
fisubrs
sbb
in
sub
daa
lods
sbb
aaa
xchg
xor
repz
jbe
push
pop
and
jle
data16
xor
mov
sbb
add
rclb
mov
push
lahf
push
mov
shrb
mov
fwait
sbb
mov
mov
lret
mov
cmp
and
popf
lea
lahf
test
xor
enter
push
xchg
sub
stc
cmp
lea
fpatan
ds
stc
push
pusha
jecxz
cmp
xchg
pop
add
stc
sbb
mov
sahf
add
sub
data16
sti
insb
js
xchg
into
fwait
mov
std
add
cmp
sbb
popf
add
stos
cwtl
outsb
mov
cs
out
js
outsl
aaa
lret
shl
pushaw
inc
push
mov
mov
add
adc
xor
sub
mov
lods
pop
mov
mov
pop
popf
loopne
pop
daa
add
repz
shl
pushf
imul
js
mov
adc
ret
xchg
cltd
sub
mov
fcompl
mov
shll
sbb
subb
xor
push
mov
imul
sahf
sbb
fisttpll
pop
lret
cmp
out
aam
in
outsb
pushf
jge
pop
jo
int3
cmc
jp
mov
repz
movsl
test
cmp
mov
cmp
push
lods
and
cwtl
pop
xchg
mov
data16
fwait
sti
filds
out
xchg
in
lahf
fdiv
fnstcw
or
mov
outsb
loopne
push
ljmp
rorl
and
repnz
sbb
push
in
jno
mov
sbb
scas
jno
pop
sar
fsubl
xchg
sub
xchg
int3
sbb
jp
popa
sahf
cltd
xchg
orl
cmc
cmc
xchg
sbb
or
fcmovu
jg
ret
jns
mulb
enter
add
cmp
loop
and
mov
arpl
stos
inc
bts
sbb
sbb
sbb
xor
test
xchg
push
mov
jecxz
sahf
xor
pop
adc
add
bswap
mov
out
or
or
sbb
dec
repnz
dec
mov
jo
lods
je
mov
rcrb
popa
test
cmpsb
test
js
mov
cmp
insb
or
adc
cmp
sarb
movsl
leave
movsb
push
std
stc
sub
dec
adc
sbb
out
fucomp
fistpll
xchg
jmp
lods
stos
imul
sub
dec
aad
mov
and
jmp
inc
leave
cmpl
push
testb
jmp
mov
dec
ficomps
out
pop
mov
cmpsb
and
xor
cmp
inc
call
sbb
pop
int
mov
xchg
outsl
gs
movsb
jnp
xchg
test
imul
pushf
ja
dec
les
fwait
mov
pop
mov
lods
adc
ret
jae
lods
sti
mov
jbe
jne
push
stos
mov
push
loopne
mov
add
mov
mov
pop
iret
stos
sti
push
or
ret
loopne
insl
loop
inc
jno
orb
pop
inc
xchg
xchg
mov
dec
xchg
sbbb
in
mov
sahf
cmp
sti
lea
ds
iret
push
mov
fnstcw
mulb
daa
inc
sub
in
test
cmp
popa
mov
pop
push
or
push
fistps
sarl
add
insl
insl
inc
mov
sub
mov
push
cwtl
aad
push
sub
sbb
clc
mov
xchg
loope
mov
dec
data16
not
dec
sbb
pop
push
bound
repnz
mov
mov
int
aaa
xchg
xchg
mov
dec
mov
mov
lcall
adc
xor
les
jae
enter
loopne
sub
in
jp
sbb
sbb
mov
repz
inc
ja
pop
cld
jb
sub
push
loopne
test
adc
xchg
xchg
adc
mov
pop
push
dec
jle
mov
out
mov
jp
clc
cmp
xor
stc
out
xchg
in
cmp
xor
cltd
add
mov
xchg
leave
testl
xchg
pushf
push
jne
lods
scas
cmp
pop
jecxz
push
dec
les
sbbl
shrl
jmp
iret
subb
pop
cmp
cltd
xor
mov
test
vmaskmovdqu
jmp
pop
mov
inc
mov
xchg
adc
nop
mov
mov
int3
mov
jmp
mov
sub
mov
ds
call
mov
mov
mov
push
mov
loopne
popa
test
pop
add
pop
mov
and
jge
nop
test
sahf
sub
jecxz
xor
xor
lahf
cltd
rcrb
push
shll
sti
in
and
das
jle
sbb
imul
bound
xor
lahf
jp
adc
xor
ret
mov
add
test
into
mov
push
outsb
pop
lcall
mov
inc
push
and
sub
pop
jno
jae
das
mul
movsl
pop
xor
pop
cmpsb
add
leave
ret
test
lods
cmp
fcomps
jns
and
lock
jmp
daa
js
outsl
mov
shll
dec
sbb
push
xchg
mov
imul
lahf
jbe
xor
push
imul
cmpsl
aaa
aad
fdivl
inc
repz
aad
mov
cmpb
fcmove
shlb
jno
je
pop
out
inc
push
shll
repnz
push
adc
loop
lcall
pop
mov
dec
fidivs
xchg
mov
or
repz
adcb
cmpsb
mov
xorl
mov
es
popa
jl,pt
and
mov
xchg
rorl
mov
imul
mov
cmp
xor
or
sub
call
xor
ficomps
and
xlat
xchg
jg
mov
mov
fcompl
xor
aam
mov
dec
push
push
stc
sbb
and
or
dec
jge
js
cmp
jns
test
mov
or
popa
push
and
dec
push
neg
mov
iret
cltd
stos
dec
ret
dec
fdivr
and
int
lock
test
jno
stc
cmp
movsb
js
daa
jecxz
ds
jle
fisubrl
test
push
or
mov
dec
sbb
loopne
ja
sbb
add
jmp
fwait
and
push
and
test
fucomi
xchg
mov
bound
pop
jnp
add
in
push
lock
push
or
xor
mov
inc
add
cmpsb
pusha
sbb
stc
repz
jl
inc
mov
lahf
xchg
xchg
or
xchg
sbb
push
sub
imul
arpl
mov
pop
push
das
lods
pop
ds
lock
push
cltd
sbbl
mov
call
mov
cmp
xchg
mov
test
xchg
daa
cltd
sbb
popf
jge
das
popa
popa
and
and
adc
in
add
cwtl
shlb
mov
cltd
or
jno
or
rep
lahf
sub
je
data16
ja
lds
cwtl
cwtl
adc
aam
cmp
mov
or
mov
mov
adc
pop
insb
test
xorb
clc
xchg
les
scas
movsb
mov
cwtl
fiaddl
push
popf
inc
adc
repz
adc
outsl
sarl
jle
hlt
mov
shlb
frstor
lds
ret
xchg
js
xorb
dec
int3
sbb
and
push
sahf
push
push
xchg
roll
dec
and
popf
int3
push
jge
out
sub
scas
call
clc
sub
lods
or
lret
int
loop
lds
data16
lahf
add
push
pusha
or
mov
inc
movb
lods
add
bound
insl
cwtl
ficomps
fistl
xor
dec
dec
or
insl
push
push
pop
xor
jb
sbb
aaa
and
dec
andl
insb
faddp
mov
push
pop
sub
lea
cmp
mov
stc
test
or
or
mov
push
iret
push
xorl
jmp
out
mov
fisubrl
fistpl
out
mov
push
sub
dec
inc
inc
push
mov
mov
lahf
out
pop
repz
inc
fs
std
inc
pop
out
mov
xchg
enter
mov
js
testb
loop
xchg
adc
xchg
test
mov
mov
data16
pop
and
stos
adc
jno
ret
mov
daa
mov
pop
lahf
dec
into
adc
push
jmp
shrl
psubd
cmp
dec
gs
movsl
cwtl
mov
divb
movsb
jns
jl
movsb
inc
push
rorl
sbb
jo
enter
mov
mov
movsl
dec
ret
loop
xor
or
sar
adc
jp
xor
mov
add
push
cmp
xor
push
in
popf
xor
mov
sub
lods
sub
add
sbb
sarb
sub
xchg
in
push
fistpl
cld
push
frstor
jns
fimull
push
daa
pop
cmc
mov
cmc
pop
sub
leave
sub
stos
jg
mov
aaa
cmpsb
adc
jbe
and
sub
inc
in
int3
mov
adc
mov
inc
das
jnp
mov
mov
lret
int
imul
xor
pop
jae
or
or
pushf
add
repnz
in
cmp
push
lds
add
aaa
fcoms
adc
sbb
cltd
lods
add
add
or
ret
push
ljmp
out
xor
sbb
test
mov
pop
movsb
adcl
lea
fs
or
loope
icebp
in
sub
insl
fistpll
and
pop
cmp
aam
xor
imul
scas
fs
jecxz
xor
cmp
das
xor
inc
xchg
movsb
aam
adc
sti
adc
cs
lret
aam
inc
dec
imul
inc
sbbb
push
or
add
dec
mov
xor
mov
movsl
faddl
and
arpl
cmp
testb
inc
add
push
stos
loop
les
pop
inc
inc
insl
fcoml
repz
adc
mov
dec
hlt
ja
sub
sbb
push
push
mov
jecxz
jmp
adcb
loop
sbb
lods
ss
or
fidivrs
das
pop
test
int
push
inc
subb
fbld
adc
mov
pop
mov
inc
xchg
cmp
inc
scas
in
arpl
movsb
and
dec
or
and
scas
and
add
pop
inc
and
outsb
cmp
push
rcr
bound
mov
sbb
mov
mov
repz
and
fnstcw
push
fwait
scas
mov
loope
jmp
leave
ss
jne
mov
sbb
dec
iret
mulb
mov
out
cmp
movsl
mov
sbb
or
xchg
mov
les
xchg
jne
in
out
repz
adc
add
loopne
xchg
insl
fistl
jecxz
mov
ret
mov
fbld
dec
xchg
cmp
sbb
clc
xor
xchg
mov
adc
pop
and
pop
jbe
pop
mov
inc
dec
into
push
or
push
mov
pop
and
pop
or
adcb
pop
adc
imul
ss
icebp
cld
andb
in
mov
push
sarb
adc
mov
into
push
test
mov
pop
add
add
shl
jge
outsb
lea
arpl
int3
jle
fyl2x
xchg
ret
cmp
andb
popa
fldl
cmp
enter
aas
mov
subb
push
or
int3
arpl
xchg
mov
outsl
mov
or
int
iret
push
push
pop
cmpsl
pop
mov
and
lods
adc
inc
mov
push
lods
push
cmpsl
adc
call
sbb
insl
cmpl
insl
addr16
hlt
xchg
nop
pmullw
lcall
sbb
mov
lock
lock
into
ds
int
or
repnz
into
lcall
enter
or
call
data16
jmp
int3
pop
jne
jg
aaa
adc
dec
lcall
adc
and
test
jo
lock
jb
jns
push
outsb
fildl
add
or
sbb
lret
je
jns
dec
mov
or
movsl
push
add
lahf
mov
movsb
sbb
inc
sub
addb
rorb
and
das
lret
cmp
mov
mov
or
test
jge
sub
xchg
ret
dec
cmp
sub
movsl
jecxz
or
xorl
test
aaa
jne
fwait
int3
arpl
add
cltd
pop
pop
icebp
addr16
sbbl
cltd
xorl
lahf
incb
imul
jp
sti
mov
push
and
xchg
lret
pop
pop
pop
arpl
jnp
xlat
pop
popa
inc
add
cmp
xor
mov
cmp
push
js
lcall
repz
pop
sbb
pusha
lcall
mov
inc
sbb
dec
daa
movsb
std
sbb
push
in
imul
inc
push
jnp
add
cltd
insl
into
fidivl
mov
fldcw
jecxz
mov
hlt
fldz
push
std
test
cmpsb
add
inc
xor
mov
add
add
shl
push
mov
clc
mov
sub
jp
lds
scas
gs
fists
fnsave
sahf
jmp
repz
or
and
data16
push
arpl
enter
mov
add
sub
bound
push
int
insb
xchg
sub
mov
out
in
mov
ret
add
mov
pushf
sub
mov
pusha
icebp
addr16
cmp
std
dec
add
jno
xchg
xor
mov
pop
mov
pop
xchg
sub
inc
pop
jge
mov
push
mov
gs
inc
lods
insl
roll
sbb
xchg
push
lods
imul
push
dec
xor
popa
and
stc
leave
arpl
xor
mov
cmp
and
fstpt
das
dec
out
loope
cmp
mov
pop
daa
cmp
sbb
and
jns
and
mov
lcall
pop
cmp
lea
sbb
push
cmp
lcall
ja
clc
lret
sub
test
sbb
inc
inc
push
int
xlat
test
cmp
pop
mov
pop
mov
cmp
aad
fstps
inc
jg
insb
sbbl
mov
xor
out
xor
les
out
insb
cs
loop
and
imul
mov
cmp
ficoms
out
clc
insb
and
bound
mov
std
jle
inc
repnz
in
sbb
and
imul
pop
shll
int3
xor
daa
imul
in
cmpsl
lahf
fdivrs
lods
dec
xchg
dec
scas
cmp
mov
or
adc
mov
push
jg
fdivrs
lea
nop
xchg
movsl
out
xchg
or
sbb
pop
cs
jl,pn
loope
leave
cwtl
jo
scas
popl
or
mov
fisubl
sub
mov
inc
stc
jno
inc
push
jmp
arpl
in
or
mov
fidivs
repnz
pop
aaa
ret
hlt
icebp
test
loope
jnp
fcomip
imul
rolb
pop
dec
int3
sub
fsubr
dec
cmp
arpl
stos
out
into
cmpsb
scas
pop
jp
in
out
out
pop
inc
sbb
jle
setne
sub
filds
push
lahf
fmull
jmp
in
sbb
fcompl
aam
call
jl
sarb
or
cmp
fcmovnu
sahf
mov
push
xor
mov
stos
pop
xchg
ret
and
mov
fwait
mov
lds
test
cmp
ret
pop
insb
cltd
pop
cmp
pop
popa
stc
loope
xor
lods
test
sub
cwtl
sbbb
push
test
push
hlt
lea
cwtl
push
jmp
iret
lods
test
mov
cli
je
in
subb
pop
test
and
add
in
mov
test
in
mov
js
jo
or
cmpsb
sti
imul
jnp
mov
sub
sbb
shll
enter
popa
stos
cmpsb
xor
das
mov
scas
push
ret
lret
dec
aam
push
cmp
push
push
and
sbb
stc
add
inc
mov
sahf
pusha
sub
lea
cmp
push
imul
and
adc
jl
mov
cmp
es
mov
adc
jp
rcll
adc
loop
lea
push
lahf
pusha
jge
pop
jg
scas
push
cmp
add
in
inc
cmp
add
and
lods
fidivl
jmp
int
imull
add
pushf
push
cmp
idivb
mov
push
pop
mov
out
inc
sub
add
push
sub
cmp
cmpsb
pop
in
mov
fs
test
outsl
and
loopne
adc
in
sbb
or
mov
jne
jo
pushf
insw
inc
repnz
std
pop
cmp
dec
xlat
notb
bound
or
pop
aaa
adc
xor
into
pop
mov
clc
popf
xor
sarb
je
pop
fs
mov
jecxz
cmpsl
sbb
push
jmp
subb
pop
or
jl
sbb
xor
popf
adc
push
pop
xchg
in
aam
or
out
outsl
inc
and
lods
popl
les
add
sbb
imul
add
xlat
mov
adc
xchg
stc
jne
mov
or
mov
jmp
inc
enter
test
sbb
lea
add
or
lds
adc
mov
out
loope
lahf
push
aaa
pop
pop
scas
xchg
or
icebp
sbb
insb
movsl
ja
cmpsl
jge
lods
int
inc
push
lret
inc
in
test
push
inc
pop
nop
inc
rol
sbb
and
mov
pop
shrl
or
mov
mov
dec
cmpsb
fldt
and
and
xor
push
roll
sub
mov
lock
jg
in
ret
pop
lahf
jae
add
fs
cmp
xchg
loop
rorl
dec
repnz
insb
sti
imull
push
sub
data16
push
leave
orb
add
cld
inc
icebp
pusha
sbbl
jbe
mov
fsubl
loope
out
pop
lds
into
aam
shr
sbb
pop
fadds
xor
or
mov
pusha
sub
fcomps
push
pop
in
in
int3
jno
cmpsl
adc
lea
fucomp
jl
icebp
sub
sub
sub
mov
imul
inc
shrl
imul
jmp
inc
inc
inc
shlb
xor
sbb
inc
addr16
jge
aaa
testl
enter
mov
icebp
ss
stc
movsl
and
cmp
rolb
jns
cmp
xchg
cmp
dec
rclb
outsb
sub
mov
lock
push
sbb
popa
sub
bound
scas
mov
or
test
adc
sub
or
or
jle
ds
push
push
mov
ret
add
cmp
xor
fistl
lcall
sub
pop
outsb
fs
stc
in
cmp
inc
fwait
cmp
fimuls
mov
es
das
int
fstpt
xchg
inc
xchg
imul
inc
mov
jecxz
addr16
nop
push
add
push
inc
das
lock
div
or
inc
lods
mov
out
lcall
mov
loope
insl
push
sbb
loopne
popa
stos
dec
rcll
mov
outsl
mov
sub
add
xor
inc
jp
push
sbb
mov
push
inc
out
push
jmp
dec
fcomip
and
sub
lock
test
pushf
test
aas
fidivl
fiaddl
test
inc
lods
sub
loope
add
jl
pop
test
add
inc
out
shll
mov
int
pop
icebp
inc
and
mov
add
sub
test
insl
mov
push
mov
test
mov
fildl
dec
stos
or
sbb
ljmp
sbb
xchg
xchg
arpl
pop
aaa
jl
inc
xor
out
dec
test
push
inc
dec
test
loop
adcb
push
sarl
xlat
in
popa
aas
mov
loop
iret
cmpsl
nop
cmp
in
les
mov
mov
or
fidivs
dec
sbb
or
push
jmp
fmul
fsubl
lock
movl
jnp
sbb
push
addl
mov
bound
sub
adc
mov
jp
stos
data16
call
add
pop
dec
xchg
clc
stos
fsubrs
add
pop
aas
ret
lea
and
or
divps
loopne
mull
xchg
or
mov
xor
jecxz
inc
in
push
lret
mov
and
pushf
mov
mov
sbb
pop
mov
adc
xchg
dec
arpl
cli
add
rol
dec
dec
or
sub
cmpsl
mov
orb
test
sbb
push
outsl
push
adc
sub
xor
push
rol
xorl
movsl
paddb
cmp
mov
push
sub
mov
xor
cmp
xchg
nop
add
mov
test
mov
jae
pop
lods
xchg
fucomip
sub
push
jb
push
jle
mov
xor
divl
lods
adc
repz
mov
mov
and
mov
dec
pushf
aaa
aad
jle
inc
scas
mov
subl
push
and
movb
push
stos
daa
test
sbb
in
or
sub
mov
mov
ja
jno
push
bound
mov
jecxz
mov
int
icebp
jne
insb
inc
cmp
dec
rcl
les
mov
xchg
ja
call
dec
lea
jecxz
mov
and
hlt
xor
or
into
inc
inc
inc
pop
test
pushf
adc
insb
fsubs
popa
je
aam
loopne
xchg
lret
stos
sbb
movsb
xchg
pop
dec
in
xchg
mov
dec
cmp
mov
test
fimull
sub
cwtl
jne
ret
add
dec
and
or
cmp
std
cli
push
mov
aad
mov
jp
fstps
mov
jecxz
lea
or
mov
mov
fwait
in
shr
mov
mov
js
pop
in
pusha
in
sub
sub
ds
push
inc
popa
test
inc
sub
lahf
shlb
lods
dec
ljmp
pop
lcall
cmp
push
xchg
cli
cs
inc
mov
addl
mov
push
sbb
jbe
mov
inc
imul
cwtl
push
pop
mov
cwtl
mov
lea
xchg
mov
or
imul
js
or
mov
add
je
in
cmp
idivb
movsb
pop
push
xlat
jge
insl
data16
or
or
daa
leave
sbb
add
sahf
testl
adc
and
stos
je
mov
xchg
sub
mov
rorl
pop
xor
movsl
aas
ljmp
mov
in
xchg
fldcw
cwtl
das
mov
cwtl
lret
ljmp
or
ds
imul
rorl
add
xchg
and
mov
add
test
push
in
test
pop
adc
xchg
lods
orl
outsb
lock
sbb
mov
cmpsb
outsb
popa
push
mov
xchg
incl
sbbl
out
pusha
jecxz
fisubl
jo
test
stc
iret
sbb
sti
or
and
test
pop
loop
enter
ja
mov
pop
mov
fisubs
dec
and
arpl
mov
inc
ja
in
insb
in
mov
insl
mov
adc
inc
mov
jge
ret
mov
pushf
push
dec
mov
cwtl
loopne
in
push
mov
push
inc
ljmp
sbb
push
outsl
or
inc
testl
mov
xchg
inc
or
sub
aas
jns
rcrl
inc
sbb
and
xchg
xchg
lret
out
and
sbb
sahf
xlat
mov
cmpsb
jns
stos
data16
and
insl
cli
fsubr
xor
push
pop
aad
and
stos
nop
int
xchg
movsl
push
or
xor
cmp
cmpb
push
dec
addr16
imul
xorl
xchg
lmsw
pop
xor
xor
jno
loop
std
push
xor
popf
cmp
aas
aaa
pop
sbb
mov
jne
les
mov
aas
adcl
push
push
iret
in
ljmp
jge
in
lods
outsb
gs
jo
js
loope
fwait
adc
lahf
arpl
mov
cmpsl
mov
imull
mov
inc
and
jnp
fisubs
scas
mov
ret
dec
adc
pop
insl
push
shll
sbb
or
sbb
loopne
movsl
hlt
aas
adc
mov
push
xchg
cmp
mov
push
mov
fsubrs
cmp
call
cmp
xchg
pop
sbb
push
ret
inc
inc
dec
lahf
or
leave
mov
cmp
and
push
add
sahf
pop
mov
and
movsb
cmpsb
stos
loopne
mov
xor
pop
aaa
mov
stos
cmpsl
in
test
into
dec
ret
sbb
in
es
adc
pop
xchg
std
lods
push
jl
and
mov
lcall
cmp
dec
jmp
xor
bound
ds
pushf
ds
xchg
rcll
mov
and
and
inc
es
sbb
or
adc
dec
lret
mov
jp
in
sbb
rcrl
inc
ret
scas
js
test
pop
andb
ljmp
jae
mov
jmp
iret
cmp
addb
push
ja
movsb
aas
out
data16
into
stc
ja
sub
mov
jae
jecxz
lahf
xchg
imul
push
fsubrl
adc
jl
shlb
dec
lock
mov
sbb
jge
jg
cmp
fsubs
push
cmp
jno
in
xchg
xchg
fildll
dec
xchg
andl
inc
sub
rcll
fstpl
dec
mov
nop
xchg
push
jp
push
sbb
and
sub
scas
shrb
jno,pn
sahf
or
iret
stos
or
cwtl
adc
mov
add
mov
sub
imul
outsl
fwait
in
and
mov
push
fcompl
and
loop
rol
inc
push
out
das
mov
outsl
sbb
adc
add
xor
lret
mov
lods
ss
test
pop
stos
mov
bound
push
sbb
lret
jb
xor
decl
dec
lcall
ret
bound
xlat
call
aad
jge
popf
cmp
imul
jne
and
lcall
addb
sbb
cwtl
sub
call
icebp
loop
push
int3
rorl
mul
sub
sbb
sub
inc
nop
iret
xor
sbb
add
popf
jl
icebp
ret
je
lods
xor
add
cs
rclb
lret
nop
and
adc
push
inc
mov
ficomps
or
sbb
loopne
fistl
dec
pop
mov
mov
scas
lret
stos
adc
lds
out
mov
dec
clc
jecxz
sub
xchg
or
xorl
int
jnp
dec
push
cwtl
push
mov
cmp
add
xchg
ljmp
jmp
insb
sub
sub
mov
adc
idivl
sahf
mov
xchg
movsb
arpl
mov
pusha
jne
test
shll
test
out
push
jnp
scas
daa
jne
sub
daa
xchg
data16
int3
pop
pop
movsl
test
in
pop
sbb
mov
out
lahf
xor
sub
adc
mov
sub
enter
loopne
shlb
mov
stc
or
repz
add
inc
std
int
je
mov
loopne
cmp
xchg
in
mov
movsb
inc
ret
push
jecxz
adcl
and
mov
setge
cld
xchg
fdivp
mov
mov
stos
push
loope
ja
cmp
xchg
mov
scas
aaa
or
lret
sbb
inc
or
movsb
mov
push
out
ja
mov
mov
punpckhwd
sub
pushl
adc
cmpsb
adc
xor
xor
pop
xchg
test
sub
or
jmp
pop
and
sub
xchg
mov
xchg
sti
xor
outsb
repz
xor
mov
fisubs
and
ret
rcrl
mov
push
or
test
inc
jb
adc
push
aaa
jne
xchg
fistl
push
shrl
data16
lahf
jne
call
cmpsl
cmp
inc
sub
icebp
xor
cwtl
test
mov
cmpsl
mov
int
outsb
lods
mov
stc
xor
sub
or
lret
fldl
xor
lcall
sub
jmp
mov
mov
mov
movsb
pop
es
xor
add
divb
adc
int
and
fsubs
ljmp
repnz
sub
push
cmpsb
mov
xor
and
rolb
out
and
dec
and
lret
mov
mov
xchg
pop
fisubs
outsl
or
rcrl
or
aad
aas
mov
xchg
cmovs
js
loop
pushf
mov
popf
jge
add
adc
pop
cmp
cs
call
bound
adc
xor
orb
sub
jne
dec
out
add
sbb
jno
push
cmpl
rol
shl
lock
jne
shl
fimull
push
mov
cmpsb
push
xchg
cmpsb
popa
add
mov
inc
mov
push
out
rorb
mov
sub
push
repnz
setae
aas
loope
addl
push
js
adcl
imul
sub
jb
inc
sahf
lcall
mov
xchg
fdiv
pop
adc
or
js
lret
enter
ret
into
mov
shlb
loop
xchg
or
roll
int3
int
dec
arpl
xor
sarl
pop
outsl
mov
or
mov
sbbl
ret
cmpl
ss
lret
lds
mull
bound
pop
fs
cmp
jmp
movsl
daa
pop
xchg
mov
test
in
lea
lea
aad
jb
test
ss
mov
js
pop
daa
mov
icebp
jae
xorb
lods
jae
loop
pop
iret
ret
lret
mov
sbb
mov
aaa
and
cld
cmp
out
push
loop
inc
xor
mov
push
sub
xchg
push
and
sub
jge
push
xlat
push
daa
leave
lret
loop
and
push
pop
lahf
sub
imul
lds
mov
push
lahf
mov
add
out
mov
inc
cmp
addr16
dec
jns
mov
jmp
add
adc
and
pop
out
addl
mov
jnp
stc
add
xor
dec
pop
push
jmp
imul
ja
adc
out
sbb
sub
add
add
dec
mov
sbb
mov
jne
aas
jno
xor
jns
push
into
mov
test
or
sbb
dec
daa
ret
inc
fs
cmp
sub
sub
xchg
aad
imul
roll
cmp
nop
imul
int
out
imull
out
test
out
xor
xor
decb
ret
add
xchg
orl
inc
stos
mov
cltd
pop
mov
mov
inc
neg
add
inc
jp
cwtl
and
mov
or
jl
cmp
and
adc
and
jmp
sbb
imul
dec
xchg
push
or
add
les
pushl
sahf
mov
mov
mov
push
rcr
in
sbb
cmp
cmp
or
fstpt
rcl
cmp
das
push
jecxz
andl
jl
xor
sub
jo
dec
pop
js
test
aad
enter
pop
fxtract
mov
pop
or
mov
sti
stos
rorb
add
movsl
outsb
jle
movsl
jl
sub
rcl
mov
loop
adc
aaa
jo
push
adc
iret
and
jbe
xchg
jmp
adc
pop
lea
jmp
ss
mov
aaa
fists
xor
mov
rcll
enter
mov
xchg
clc
ja
daa
jbe
sbb
xacquire
adc
or
loopne
mov
dec
das
cmc
add
sbb
or
and
es
adc
sbb
jmp
cmp
sbb
andw
push
into
aam
lcall
sarl
es
in
dec
adc
inc
xchg
std
repz
pop
lods
xchg
bound
pop
lds
xchg
aas
jge
mov
push
pop
pop
or
xor
dec
scas
loop
cmp
inc
data16
loop
and
mov
dec
add
iret
test
add
inc
pop
out
mov
insl
xor
cwtl
pop
mov
sbb
fmuls
xchg
in
jge
xchg
push
repz
das
add
fs
std
sub
add
sti
ficomps
int
dec
cmp
fmuls
scas
test
enter
imul
movsl
sbb
aam
ret
xor
mov
pop
xor
inc
imul
les
pop
jne
xchg
out
inc
jmp
loopne
dec
jno
sbb
lcall
int
or
ljmp
fisttpl
sub
scas
push
xor
inc
notb
adc
ret
push
out
mov
stc
dec
xchg
xor
xor
mov
mov
pop
push
adc
xor
rcrb
inc
lea
add
xor
and
jne
imul
repnz
pop
inc
sbb
xlat
and
fstpt
cs
neg
cli
int3
sub
cmp
shll
aam
mov
incb
pop
mov
pusha
xor
sahf
dec
inc
out
lock
add
decb
sbbl
fdivl
fnstsw
mov
ror
test
cmpsb
js
mov
mov
cmp
push
lret
lds
ret
fstl
test
dec
jne
shl
fwait
enter
xchg
sbb
sbb
jbe
mov
sahf
sub
adc
fsubs
fdivrl
mov
cmp
stos
movsb
cmp
jmp
lds
ret
jns
adc
into
push
mov
sahf
ret
lods
loopne
xlat
cmc
sbb
inc
test
push
cmp
xor
push
jge
add
xlat
add
or
movsl
inc
loop
repnz
fwait
mov
imulb
fldenv
push
je
aas
jg
into
inc
xor
xchg
nop
fs
add
xchg
mov
push
fs
push
inc
jle
loop
mov
cmpsl
sub
int
mov
ror
lea
dec
sub
lock
inc
lock
ret
test
int
mov
shll
lea
and
mov
dec
sbbl
pop
jno
pop
ret
data16
xchg
pop
xchg
pop
js,pt
int
mulb
addr16
test
or
cli
dec
repz
aad
fisubl
sti
jnp
fidivl
popa
movb
and
sub
inc
ret
in
add
sarl
xor
call
decb
rclb
mov
sahf
cmpsb
inc
outsl
mov
sbb
cmp
fwait
fs
dec
jmp
push
hlt
arpl
xor
mov
add
xchg
fisubs
inc
repz
lret
sbb
inc
mov
dec
sbb
in
fldl
outsb
popa
dec
pop
sbb
cmpsl
xchg
xor
mov
test
out
gs
mov
mov
dec
call
pop
aad
sbb
adc
leave
pop
leave
fcoml
ja
movsl
add
mov
add
loope
adc
fsubrs
gs
push
jecxz
icebp
dec
dec
xor
lods
dec
scas
aaa
jo
movsl
inc
sbb
test
mov
or
inc
sbb
inc
mov
cwtl
lods
cld
std
jnp
push
pop
std
test
enter
and
ficompl
mov
cmpsb
and
aas
andb
js
scas
cwtl
addr16
dec
jecxz
and
cltd
sbb
sbb
sbb
xor
rcl
es
je
lcall
push
and
or
test
jl
fdivrs
subl
mov
dec
mov
jmp
test
xor
jl
lcall
shr
xor
mov
add
jl
mov
cmp
imul
pop
cltd
and
sub
ficomps
out
xchg
xchg
jne
cld
jbe
sbb
cmp
stos
scas
idivl
lea
push
pushf
pop
fwait
imul
fstl
push
mov
mov
xor
scas
out
cli
push
sbb
dec
adc
ja
xor
push
shl
imul
pop
dec
in
mov
sbbl
pop
jg
out
mov
mov
add
js
cmpsl
jl
jge
cmp
inc
fidivrs
fmuls
and
cmp
xor
mov
movsb
push
push
in
clc
stos
sub
adc
mov
push
and
in
push
jl
addb
jnp
fidivrl
add
lea
jge
xlat
imul
test
outsl
cmp
aad
xlat
pop
das
xchg
je
mov
movsb
mov
mov
repz
clc
pop
popa
cli
int3
ret
std
int3
dec
jle
dec
or
sbb
repz
add
inc
pop
mov
mov
mov
or
jle
and
repz
jle
jbe
outsb
notl
in
jns
stc
mov
int
cs
xchg
inc
push
sub
out
sbb
xchg
sbb
jno
int3
jmp
push
out
out
repnz
push
loopne
jne
xchg
ret
repnz
cmp
add
sarl
inc
call
lret
mov
outsl
roll
inc
popa
pop
jno
fcomi
les
inc
lea
xchg
xlat
mov
inc
aaa
jbe
sbb
scas
movsl
orl
dec
pop
xchg
mov
cmpsb
jmp
jnp
test
jl
ja
mov
mov
ret
ret
cmpsl
testl
lods
es
cmpsb
rcrb
pop
and
loop
mov
mov
out
je
pop
lods
and
test
rcll
push
jno
ss
mov
xor
adc
pop
dec
push
ret
dec
mov
push
cmp
cmp
repz
mov
add
mov
es
int
pop
push
jmp
ss
inc
and
and
inc
xchg
jecxz
ss
inc
mov
in
dec
lahf
cmpsb
add
rcrb
pop
xchg
enter
icebp
int
mov
xor
jne
rcl
pop
pop
out
stc
gs
sbb
mov
push
ss
jo
xchg
push
lret
daa
push
cld
ficoml
outsl
mov
pop
push
push
cmp
fsubrs
jbe
inc
mov
dec
adc
movsb
loopne
imul
or
mov
inc
insl
frstor
rolb
ljmp
das
mov
adc
sahf
add
mov
in
addr16
icebp
inc
mov
arpl
movb
mov
andb
jge
adc
aam
ljmp
sub
je
in
lds
arpl
add
icebp
test
into
dec
fs
inc
pop
ret
and
xor
out
jmp
arpl
fsts
lds
push
fdivp
or
xor
or
sub
cmc
and
sub
jmp
and
mov
push
inc
in
and
mov
scas
rcrl
enter
loope
idivl
es
lock
jae
rorl
out
sbb
cmp
fwait
jns
sub
ret
inc
test
dec
popa
mov
outsb
pop
and
sub
sub
adc
jmp
std
lods
lods
sti
sbb
jmp
add
int3
movsb
jge
pop
cli
jg
xor
xor
shlb
adc
out
aam
add
jecxz
adc
xchg
and
out
mov
ret
add
ljmp
add
mov
and
sarl
sar
testb
xor
loopne
out
mov
pusha
push
xorb
cltd
mov
inc
inc
xor
pop
push
pop
dec
popa
mov
mov
pop
aaa
push
and
push
xor
adc
mov
bound
inc
je
inc
shrb
mov
jns
mov
xor
roll
xchg
rolb
pop
adc
aaa
dec
movsb
lds
sub
in
jbe
xor
loop
test
mov
arpl
adc
movsl
sub
clc
push
jb
push
cmp
imulb
shlb
shl
pop
pop
pushf
cs
lods
or
sub
mov
movsb
cli
add
or
sub
xlat
stos
mov
or
add
add
pushf
lret
push
mov
lea
test
arpl
sahf
lcall
cmc
jg
pusha
inc
js
cmp
ds
dec
daa
mov
mulb
loop
adc
call
xor
add
clc
test
inc
xchg
sti
sub
jno
xlat
xor
rcr
sub
int3
lret
dec
push
cmc
xor
jae
sbb
mov
mov
adc
fincstp
sub
stc
clc
iret
dec
jmp
or
jecxz
addb
lret
xor
notb
fidivrs
sub
pop
mov
mov
cltd
jo
sti
out
stos
mov
push
jl
popf
push
and
or
and
pop
fcoml
inc
inc
es
mov
mov
hlt
add
ret
les
add
out
rcrl
inc
popf
xchg
into
frstor
jno
push
mov
dec
lock
mov
jmp
sarb
aas
lods
inc
cmpsl
fstpt
iret
cmp
shlb
sbb
insl
jns
aaa
fistpl
scas
jle
into
mov
lods
xchg
lea
hlt
stos
iret
mov
test
cmp
ljmp
sbb
cwtl
xchg
xchg
mov
xor
jbe
ret
arpl
rol
mov
mov
pop
dec
lods
pop
cmp
inc
hlt
scas
es
jb
lea
push
and
mov
push
push
and
iret
fisttpll
and
mov
sub
xor
jnp
mov
fstl
dec
jecxz
mov
add
add
or
divb
popf
xorl
xchg
cli
pop
cmp
cs
enter
sti
mov
pop
push
out
add
jo
pop
ret
movsb
or
adc
int
les
dec
fisubl
cltd
sub
pusha
push
adc
adc
cli
fimull
and
ljmp
mov
adc
or
jb
test
loopne
outsl
mov
adc
addb
xor
ss
imul
lods
int3
dec
and
sub
pop
sub
jp
adc
shlb
jp
pop
bswap
xor
ret
ds
mov
xor
and
cmp
outsb
out
int3
and
inc
cwtl
rol
data16
sbb
lock
adc
ret
or
imul
cmpsl
and
fldcw
cmp
stc
mov
rorb
repnz
sub
sti
bound
int3
adc
ret
cmp
stos
shlb
popa
es
in
inc
in
in
add
adc
test
jecxz
je
fiadds
mov
pop
test
movd
cmp
mov
and
xchg
add
outsl
rol
inc
push
inc
cmpsb
add
cmp
fwait
xchg
pop
mov
popw
xchg
repz
inc
insb
xchg
shlb
movsl
ds
ljmp
lock
push
sub
mov
dec
inc
xor
sbb
js
sub
ljmp
imul
mov
and
adc
je
sub
idivl
outsb
mov
stc
inc
in
arpl
sti
xor
lcall
jno
fwait
dec
test
cmpsb
cmp
sbb
subb
rcrl
xor
sbb
push
or
adc
jb
fisubl
xor
inc
pop
jo
js
sbb
and
ds
mov
jne
loopne
cltd
adc
mov
push
fidivrs
jecxz
dec
ds
push
xorl
inc
add
loope
cmp
xor
mov
mov
mov
jnp
inc
xchg
dec
pop
es
pop
mov
fnsave
dec
shr
sahf
mov
push
cmp
jecxz
jno
sbbb
call
dec
jb
mov
xchg
scas
push
xchg
ja
inc
sub
call
popf
sbb
fstl
cld
mov
sbb
inc
or
out
xchg
mov
cld
mov
test
mov
dec
std
sub
shrb
and
scas
int
js
pusha
inc
aas
pop
ja
push
inc
mov
sar
repz
cmpsb
xchg
sub
mov
imul
jmp
cmp
or
lea
pop
cmpsb
xor
dec
sbb
cmp
push
into
and
ret
sahf
jecxz
das
xchg
push
cwtl
je
xor
pop
sub
xor
gs
mov
in
xor
sub
mov
push
xor
jmp
mov
lods
pusha
fs
push
stc
mov
in
jg
nop
xchg
imul
and
inc
es
daa
das
jnp
das
enter
andl
shll
imul
mov
push
inc
push
cmpsl
cmovbe
lahf
jecxz
stc
jl
out
sub
pop
and
dec
outsb
lret
jecxz
insl
stc
repz
mov
in
add
push
scas
int
xchg
cmp
mov
mov
aaa
aaa
xchg
mov
xor
jge
add
mov
or
lock
idivl
xchg
mov
lea
push
push
mov
xor
popa
jg
adc
sbb
ljmp
fwait
testb
push
data16
lds
xchg
cmp
ss
inc
hlt
test
gs
mov
outsb
adc
arpl
cs
inc
dec
rcrb
dec
cmp
adc
leave
jle
xor
lods
mov
adc
push
xchg
les
rol
push
int3
arpl
jmp
iret
mov
adc
sbb
xor
pop
inc
push
mov
lods
mov
push
push
cmp
inc
mov
inc
adc
dec
jge
inc
push
or
sbb
ss
shrl
les
inc
mov
ja
jbe
inc
add
sub
cwtl
stos
cmp
shl
push
negb
or
mov
xchg
aas
ret
mov
mov
popl
loopne
jle
lea
inc
sbb
cmp
fs
sbb
bound
or
lds
pushf
inc
pop
mov
cmc
test
lret
ficoml
dec
jnp
cmpsb
iret
aas
mov
push
cmpsl
cmpsl
dec
in
mov
cmpsb
das
and
aam
std
jne
fwait
int3
xchg
cmp
outsl
mov
hlt
lret
push
mov
xchg
or
unpckhps
mov
adc
jnp
pop
outsl
inc
fcomps
fdivrl
fwait
inc
in
jo
jl
jne
push
push
jge
imul
pop
fisubs
inc
ficompl
push
repz
out
insb
xorb
mov
and
jns
mov
int3
mov
mov
int
mov
in
stos
or
xchg
mov
movsl
or
stos
sti
cmpb
xchg
mov
cmp
mov
inc
cmpsl
push
fistps
xchg
sub
sbb
mov
sarl
cmpsl
dec
scas
adc
insl
int
sbb
jl
scas
lret
sub
xchg
mov
aaa
call
ja
pop
cmp
insl
js
push
daa
in
jg
cmpsl
jge
fnstsw
sub
and
icebp
cmc
mov
mov
inc
movsl
mov
adc
stc
pop
pop
dec
jge
out
xor
xchg
xchg
xlat
sub
mov
fdivrs
aaa
jge
dec
fwait
jne
jb
and
xchg
xchg
push
add
inc
cwtl
aad
in
pushf
adcb
and
and
sbb
sub
xchg
fcmovb
xor
test
ds
xor
out
icebp
sti
xor
jns
add
imul
jae
cmp
clc
mov
cmp
pop
push
dec
arpl
mov
ficomps
push
ja
cli
mov
jg
jmp
stc
pusha
stc
push
mov
dec
cmp
adc
push
iret
gs
repnz
cld
mov
mov
sbb
jbe
mov
push
test
add
pop
push
push
ret
dec
imul
fisubrl
push
and
imul
imul
sahf
les
cmp
mov
std
jmp
jns
xor
psadbw
ret
jae
push
xlat
dec
sti
jo
mov
scas
popf
out
jno
je
cmp
add
rclb
scas
lahf
stos
test
pop
out
and
add
testl
sub
das
mov
scas
cmp
mov
jo
out
data16
sub
cmp
movsb
mov
and
sahf
push
mov
sub
pushf
inc
cmc
pushf
jle
push
cs
pop
aaa
rolb
fdivp
dec
mov
pop
push
je
out
ss
sahf
lea
in
jp
out
stc
ljmp
leave
hlt
sti
pop
adc
and
add
or
pop
adc
clc
mov
pop
jae
cmp
push
adc
rorl
out
imul
xchg
test
mov
add
pop
mov
lods
jb
jb
movsb
mov
pusha
fnsetpm(287
bswap
adc
push
cmp
cmp
je
add
popa
sahf
outsl
rcl
mov
cmp
out
in
add
fadd
cli
cmp
int
lret
stos
dec
add
xchg
hlt
sub
dec
or
fimuls
and
jno
xor
adc
das
movl
inc
in
js
imul
cmp
add
mov
xor
dec
push
add
ljmp
adc
leave
test
ficompl
mov
rclb
and
loopne
mov
loope
adc
sti
popa
push
pushw
push
jns
pop
adc
jl
data16
mov
xchg
sbb
mov
sbb
mov
sbb
jo
sahf
scas
nop
jnp
repnz
dec
mov
mov
xchg
push
mov
add
xchg
jg
cwtl
adc
mov
fsubr
daa
imulb
xor
push
ror
adc
xor
stos
add
sbb
cmp
or
xchg
insl
mov
push
jp
loop
test
stos
movq
dec
dec
sbb
or
push
int
pop
mov
mov
ret
jns
loope
sarb
into
je
ret
movsl
ffreep
sub
dec
add
xor
cmp
jnp
mov
mov
stc
or
lret
gs
push
ljmp
mov
int3
dec
or
lods
sub
mov
dec
xchg
outsl
pop
loop
cwtl
mov
mov
test
pusha
insl
insl
cmp
int3
popa
jb
inc
jae
popf
in
jg
push
imul
movsl
pop
pop
jo
dec
add
pop
cmp
mov
sub
dec
add
mov
mov
pushf
mov
sub
jnp
aad
pusha
inc
insl
inc
mov
mov
push
mov
jnp
jmp
daa
mov
cmpl
stos
popf
push
dec
adc
ror
xchg
jo
sarb
popa
icebp
shrl
arpl
js
adc
xchg
inc
enter
push
jo
cli
leave
test
pop
pop
stos
mov
cmp
jno
sub
xchg
int3
cltd
sub
mov
aad
lock
je
cld
xlat
pop
fscale
add
mov
jo
or
dec
ja
and
or
cmp
int
test
sbb
dec
std
out
or
iret
jne
xchg
inc
cwtl
push
in
adc
iret
mov
or
xor
pusha
sti
mov
jecxz
int3
jp
jae
jae
xor
pop
aaa
mov
dec
subb
mov
in
xlat
mov
adc
mov
pop
mov
mov
es
pop
js
in
inc
mov
push
loope
dec
ljmp
lods
push
hlt
in
outsb
xchg
inc
out
out
or
and
fildll
add
bound
push
pop
inc
or
sbb
mov
or
lock
addr16
inc
minps
sub
lds
jmp
jb
pusha
pushf
jle
mov
leave
push
dec
hlt
push
sahf
hlt
xchg
pop
jno
icebp
dec
lret
rcr
inc
mov
cmpsb
aam
mov
sbb
and
or
hlt
cmp
test
mov
rclb
loope
pop
mov
mov
and
adc
mov
jb
add
xor
ret
add
jmp
or
push
fs
aaa
outsl
dec
sub
dec
aaa
sti
leave
arpl
fs
aam
mov
leave
fsubrl
sti
and
add
ds
add
jb
jnp
popf
xor
mov
sahf
inc
movsb
jno
insl
imul
call
sti
icebp
adc
xchg
sbb
loop
cmc
int
orb
repnz
movsl
dec
sub
test
loopne
jmp
out
les
stos
rorb
mov
mov
sarb
ds
mov
adc
addl
jp
int3
addr16
clc
fwait
jge
mov
test
jnp
sub
call
cltd
mov
xchg
adc
pop
cmp
add
xor
mov
jmp
test
lret
xchg
dec
sahf
mov
and
and
rcrb
cmpsb
mov
mov
and
jb
out
inc
fstpt
lods
inc
shr
in
fs
rep
cmp
mov
imul
sub
fadds
or
mov
inc
mov
out
lret
adc
fildll
insb
xchg
or
mov
jmp
and
jae
outsb
push
mov
shr
sahf
popf
pop
das
leave
push
movsl
call
mov
jne
hlt
add
imul
mov
push
xor
xchg
and
and
es
stc
mov
scas
out
clc
sbb
sbb
push
outsl
mov
adc
or
in
push
push
push
aaa
mov
mov
mov
xchg
pop
loop
sti
mov
dec
roll
lods
movsl
jmp
inc
movsb
iret
sub
mov
gs
fnstenv
xor
add
cld
in
flds
out
jnp
test
xor
in
jmp
mov
mov
add
pop
pop
mov
push
add
sbb
lret
mov
xchg
sbb
lret
mov
je
adc
lock
pushf
push
insl
push
mov
dec
and
jb
and
repz
xor
movsl
mov
call
pusha
adc
push
lret
inc
dec
sub
mov
pop
rcrb
hlt
xchg
cmp
repnz
jg
test
cs
mov
and
adc
jno
les
xor
push
data16
fwait
jl
testb
pushf
jbe
je
jl
or
pop
popa
pop
addl
inc
push
je
cmp
roll
jle
or
inc
cmp
lret
and
addr16
aaa
outsb
test
lret
or
pop
pushf
mov
mov
cmpsb
dec
xchg
andl
xchg
fdivrs
mov
fcmovb
add
mov
add
fmull
adc
adcb
lcall
out
lock
dec
xor
mov
pushw
sub
icebp
arpl
xor
lock
addb
jno
mov
adc
insl
or
pop
into
dec
mov
mov
jno
or
mov
mov
jno
loope
adc
mov
fwait
cli
imul
sbb
das
inc
daa
inc
shl
shlb
imul
outsl
test
shl
stc
cmp
in
add
push
cwtl
mov
and
fcoms
jle
adc
sahf
sarb
and
sub
mov
js
decb
mov
xchg
inc
adc
hlt
repnz
das
xchg
scas
adc
stos
push
adc
sti
jo
adc
pop
stc
std
popa
jecxz
jae
push
xlat
sti
mov
mov
add
jge
lods
adc
shr
cmp
push
leave
mov
ds
mov
in
loopne
lret
push
xlat
mov
out
test
inc
mov
call
xor
push
sti
mov
orl
add
push
les
xor
push
sub
lret
clc
jns
push
dec
fwait
test
cmp
xchg
cmp
xchg
imull
inc
lods
int
cli
mov
and
sbb
mov
mov
mov
mov
dec
das
rorb
cmp
sub
shll
pop
sub
mov
sub
or
ljmp
out
out
xlat
jge
flds
sub
cmc
mov
out
cmp
sub
cmp
sar
jo
jl
pop
adc
ret
jl
adc
in
or
mov
jmp
inc
scas
out
sub
addr16
push
cmp
movsl
out
fbld
movsl
shr
push
popa
gs
fsubrs
cs
xchg
je
fs
outsl
xchg
lcall
xchg
scas
and
push
sbb
jbe
rcll
jnp
and
out
or
insb
dec
jnp
cmp
cwtl
xchg
in
sbb
add
inc
flds
test
adc
mov
jle
inc
jmp
cld
cmp
cmp
mov
inc
mov
testl
stos
add
icebp
sub
cmp
pop
test
push
lcall
out
mov
xor
cmp
addr16
fists
sar
sbb
jge
mov
leave
mov
stos
fistpl
mov
js
arpl
bound
test
incl
loopne
dec
and
sub
cmp
adc
pop
xchg
test
scas
push
jb
hlt
cmpsb
in
jp
das
dec
adc
cwtl
stc
and
or
idivl
stos
arpl
cmp
lret
mov
out
cmp
jbe
jg
fbstp
fptan
push
cmp
int3
rcll
and
push
dec
out
sbb
sub
lods
sbb
repz
add
rcl
jbe
movsl
mov
push
in
pop
mulb
lcall
aad
movsl
and
xchg
push
xchg
outsb
or
pop
addr16
repnz
or
imull
movsl
or
xchg
in
pop
inc
scas
outsl
pop
add
xor
or
inc
sarl
push
jmp
lcall
popf
mov
out
cmp
dec
sub
dec
lretw
pop
pushf
xchg
mov
aas
sbbb
into
and
push
int3
xchg
or
and
adc
das
add
push
imul
push
jns
lock
outsb
fistpl
inc
out
and
nop
push
push
or
push
cmp
in
adc
pop
ljmp
pop
mov
js
xchg
popf
xlat
out
call
adc
mov
mov
xchg
stc
xchg
fisubs
je
dec
pop
cmp
adcb
and
mov
lods
ficomps
out
mov
rorl
mov
sub
jecxz
sbb
xchg
shl
mov
aas
outsb
repnz
cmp
inc
adc
inc
and
sbb
xor
cmpsl
ljmp
add
and
xor
inc
iret
decb
or
mov
lods
cli
je
inc
jp
ret
dec
roll
pop
pop
pop
mov
inc
leave
shlb
dec
div
lcall
xor
jmp
lcall
and
fcom
jl
scas
scas
movsl
int
call
mov
hlt
sbbb
jmp
fwait
adc
inc
inc
cmpb
jmp
stos
xchg
shr
adc
dec
xor
mov
add
push
xchg
mov
out
fidivs
movsl
cmp
sub
mov
test
mov
pushf
jnp
mov
jp
lret
and
ffree
in
pop
adc
sti
jl
pushl
cmp
pop
std
inc
mov
mov
fidivs
adc
jnp
rorl
repnz
xchg
jns
xor
mov
jo
lcall
sub
lods
outsb
imul
mov
add
xchg
dec
sub
pop
jo
mov
and
aad
jo
lret
mov
hlt
andb
xchg
mov
ljmp
mov
cmp
fimuls
xchg
xchg
jnp
jb
lahf
scas
pop
aam
dec
popa
mov
lods
jg
scas
push
and
inc
or
mov
cmp
xor
pop
out
pop
cmp
out
mov
sbb
cmc
mov
xchg
in
in
gs
pop
pop
lock
push
pop
insl
int3
repz
out
cmp
xchg
cmp
fbstp
out
insb
cmpsl
ret
add
jo
mov
in
subl
xchg
pop
ja
xchg
mov
push
sbb
push
mov
out
enter
lods
xchg
lods
xorl
xchg
cmp
inc
ret
or
cmp
faddl
jno
mov
daa
subl
sahf
pop
push
cmpsl
sahf
cmp
rorl
daa
jmp
test
inc
out
mov
ljmp
and
cmpsl
pop
aad
xchg
pop
sub
mov
pop
inc
fcoml
out
mov
inc
lods
imul
and
and
pop
fcmovbe
mov
pop
stos
sub
out
or
gs
mov
cli
testl
int
jnp
inc
cmp
js
clc
lret
xchg
std
rcll
sbb
seta
xchg
fldcw
popf
xchg
gs
shrb
mov
outsb
lahf
and
adcb
pop
mov
push
mov
js
mov
push
xchg
gs
int3
xchg
std
ss
xor
in
ret
lret
ret
xchg
or
sahf
add
adcb
mov
imul
push
cmp
xor
sbb
and
mov
jg
cmp
insl
mov
mov
adc
pop
jecxz
cwtl
mov
pop
in
shl
mov
sahf
inc
xlat
sbb
ret
notb
sub
pop
mov
rclb
and
cs
cli
shr
cltd
das
cwtl
out
cli
stos
bound
aaa
mov
add
or
xor
mov
and
int
mov
mov
sbb
jle
cmp
in
in
lret
inc
les
jmp
push
cwtl
lods
pop
jnp
sbb
lods
scas
xchg
cmp
cld
jecxz
pop
mov
pop
loope
jb
lret
call
sarl
xorb
addr16
movsl
xor
mov
mov
out
fstps
pop
stc
decb
ds
sahf
pop
xor
imul
je
clc
addb
adc
inc
imul
push
mov
out
push
pop
sub
mov
fstpt
dec
sub
in
pusha
aas
or
les
das
cmc
icebp
sbb
cld
xchg
stc
sarl
cmc
or
mov
xchg
push
jg
and
and
jae
jno
push
mov
dec
iret
jnp
mov
stc
gs
xlat
aad
jbe
or
xor
shrb
mov
jno
aad
gs
mov
or
ficoms
jns
xor
xchg
sub
sub
outsl
aad
xchg
xchg
fnsave
inc
in
jmp
dec
outsb
imul
jbe
icebp
bound
mov
daa
in
jbe
decl
and
leave
push
gs
cmp
insl
fs
cmp
dec
out
dec
cwtl
sbb
enter
adc
lea
and
and
test
and
aaa
mov
aas
fs
fcoms
test
cmp
pop
add
or
and
push
int
xor
dec
test
add
ja
nop
shlb
dec
lret
out
out
pop
add
insb
mov
adc
int3
sub
cmp
bound
adc
lods
mov
adc
fwait
push
fldcw
cmp
jns
xor
cmp
test
mov
pop
and
cmp
mov
dec
add
lcall
mov
dec
mov
pop
mov
cmp
xchg
cltd
pop
add
das
js
sbb
xor
inc
mov
xor
test
aas
mov
mov
cli
jnp
sub
push
sub
and
ret
xchg
xor
aaa
mov
ljmp
and
imul
adcb
cmp
sub
jne
and
mov
push
pop
sbb
lahf
fdivl
add
enter
les
jbe
adc
adc
pop
scas
div
lods
mov
inc
ret
jmp
mov
movsl
cmp
int3
int
xor
loop
mov
mov
push
test
add
ds
pop
dec
mov
xor
pop
xchg
out
dec
cmp
ss
dec
push
out
lcall
pop
push
mov
stos
leave
arpl
in
fnsave
or
test
outsl
ljmp
inc
loopne
jbe
jle
jne
test
push
dec
rorb
push
dec
shl
imul
xor
call
pop
adc
inc
mov
shl
out
stc
loopne
insb
lcall
pop
jp
js
fistpl
jne
es
mov
xor
pop
lcall
ja
fnstsw
and
and
add
adcl
aad
aaa
jbe
imull
mov
dec
iret
mov
cltd
stos
push
cmpsb
out
push
mov
shll
pop
call
lahf
adc
push
repnz
adc
je
and
mov
push
inc
pop
and
dec
aad
repz
lret
inc
rol
push
inc
ljmp
sub
xor
pushf
in
adc
jg
cmpb
fldl
jno
in
dec
imul
xchg
pusha
xor
js
mov
call
sahf
fs
sti
xchg
shll
or
ds
decl
xor
push
repz
mov
sub
sub
mov
lds
fwait
xchg
jle
frstor
mov
jge
imul
imul
push
mov
push
imul
adc
and
insb
sub
shlb
ret
sahf
shrb
mov
fadd
inc
mov
lods
xchg
or
add
fldl
add
test
loopne
adc
mov
jnp
fcoms
in
add
push
imul
cmp
psraw
sbb
insb
xchg
jp
int3
dec
sbb
cmova
push
test
sub
loop
icebp
mov
movsb
aam
jge
int
hlt
xchg
aad
je
pop
jns
test
dec
fisttpll
cmp
fmull
outsl
adc
das
jg
inc
mov
add
test
movsb
das
loope
adc
xchg
inc
leave
xor
and
aad
push
pusha
xor
cmpsb
shll
je
sub
jmp
xor
fs
fnstsw
std
push
out
in
inc
movsl
and
sub
or
insb
lock
aas
add
aad
and
inc
sub
jno
sar
mov
stos
mov
pop
xorb
jmp
sti
xor
out
push
sub
pop
push
fiaddl
adc
int3
bound
sbb
frstor
mov
or
push
ret
add
add
dec
fidivrl
inc
out
fwait
cmpsb
stos
add
stos
pop
lcall
adc
mov
in
pop
jg
push
mov
cld
sub
lds
mov
sub
ret
je
lret
jno
loope
cs
loope
cmp
cmp
lcall
sbb
inc
out
xchg
ret
fnsave
popf
aad
push
mov
rorb
cmp
jge
sub
inc
leave
jmp
mov
cmpsb
adcb
mov
loopne
loop
and
cs
xchg
hlt
out
es
pop
rolb
popa
lock
pop
pop
push
shr
out
jne
mov
ds
fwait
outsb
out
ja
sarb
or
add
dec
andb
daa
in
mov
andb
push
inc
loop
jp
push
jmp
negl
mov
sbb
sbb
or
or
sarl
test
add
sbb
lahf
dec
sarl
int
mov
dec
inc
fcomi
jl
or
cmp
in
dec
sbbl
push
or
lahf
mov
lret
sahf
push
stos
push
xchg
out
js
xchg
hlt
add
xlat
fdivrl
xlat
fistpll
nop
insb
lds
mov
jl
inc
dec
cmp
arpl
push
imul
mov
mov
cltd
mov
inc
and
add
sub
lock
xchg
sub
lret
hlt
and
dec
test
lods
dec
pop
aas
xchg
jl
lret
dec
adcl
jge
jb
gs
in
ss
xlat
in
out
push
inc
icebp
fistps
fs
sbb
lods
shl
xchg
mov
mov
mov
insl
jno
mov
jmp
hlt
rolb
fnstsw
jge
cmpsl
push
mov
jge
cmp
cld
shrb
ds
jbe
in
shlb
jb
sub
adc
scas
cmp
cli
sbb
push
imul
sub
imul
stos
add
dec
scas
scas
ret
stos
cltd
adc
jl
popf
loop
fimuls
mov
pop
mov
cmp
bound
xchg
and
xchg
ljmp
in
scas
cmp
mov
data16
rcrl
add
popa
dec
int3
loopne
les
adc
arpl
xchg
int3
jnp
adc
imul
jne
punpcklwd
inc
inc
ret
xor
in
in
and
rcll
add
push
es
mov
fcmovnb
stos
push
sarl
call
pop
push
popa
adc
sbb
mov
test
fisubrl
mov
lret
dec
out
out
and
pushf
and
jp
cmpsb
lahf
iret
jl
imul
in
shrb
daa
sub
and
fisubrs
mov
mov
daa
inc
daa
and
mov
ret
or
stos
mov
shr
pop
adc
mov
add
or
inc
xor
cmp
popa
cld
pop
jg
add
cmp
loopne
ficoms
dec
rorb
std
bound
je
xor
ret
dec
xchg
pop
fcompl
mov
mov
out
mov
sbb
aaa
dec
cltd
imul
jp
pop
sub
sub
repnz
movsl
jmp
jl
hlt
subb
stos
test
mov
pop
stos
cmovns
test
xchg
push
add
mov
lret
xchg
loopne
mov
jg
iret
mov
in
add
inc
mov
fiaddl
lcall
aam
rol
ss
call
jle
sbb
jo
mov
repnz
jge
ja
xor
cmc
ja
jbe
add
inc
lret
sarb
lock
jp
jmp
cmp
jp
imul
inc
mov
shll
or
sub
dec
addr16
cmp
xchg
jp
gs
xor
jecxz
cmp
popa
bound
sbb
mov
fnstenv
in
xor
movsl
out
pop
mov
mov
xchg
mov
in
sbb
mov
push
sub
out
test
in
sti
sub
sarb
loope
mov
dec
mov
loopne
loopne
shlb
data16
aad
in
ret
mov
sub
sbb
popf
jb
xlat
ljmp
mov
lret
loop
dec
dec
pop
les
scas
xor
aad
pop
sbb
cmp
mov
cltd
inc
push
stos
cmp
xchg
mov
sub
ret
imul
xlat
cmc
fistps
sbb
dec
outsb
pop
les
push
idivb
aam
mov
fistpll
jno
cmc
nop
xor
aam
jl
inc
sbb
mov
cwtl
sbb
std
xchg
mov
jmp
dec
mov
cmc
push
mov
cmp
xor
jo
dec
mov
mov
mov
inc
iret
orl
fwait
lret
loop
out
mov
mov
sub
je
jle
adc
jmp
jmp
test
xchg
rol
addr16
lret
dec
inc
aas
imul
adc
inc
stos
jb
jecxz
sbb
testb
out
sub
ror
loopne
cmp
ss
mov
mov
in
loope
daa
and
clc
mov
stos
out
leave
sub
stc
cmc
jae
pop
sbb
pop
push
fwait
sbb
push
cmp
jnp
xor
aam
fcoms
loope
mov
movsl
push
pop
adc
mov
cld
jmp
or
or
sbb
add
sbb
adc
inc
ljmp
dec
sub
xchg
lret
leave
pop
xor
pushf
push
icebp
test
or
cmpsb
jl
cmpsb
push
pop
mov
xchg
mov
inc
mov
sti
rcr
jno
insb
mov
ss
in
adc
mov
cltd
pop
xchg
fdivs
fcompl
jne
pop
push
repz
mov
cmp
test
mov
clc
push
xchg
rcll
pop
clc
mov
movsl
add
repnz
mov
push
push
mov
pop
jge
call
btr
addr16
aaa
popf
lahf
dec
shlb
test
rcrb
cmp
pop
addb
scas
jecxz
jle
jb
jne
mov
popl
mov
js
adc
sub
and
adc
xor
ja
pop
and
mov
sbb
or
jbe
inc
jg
mov
mov
pusha
cmp
mov
das
xchg
push
popf
outsl
pop
aaa
push
mov
enter
ret
popa
test
mov
test
add
cmp
add
mov
lcall
insl
data16
cmp
push
les
fdivl
xor
adc
sbb
pop
ljmp
out
clc
jne
frstor
jnp
jns
ss
aam
fsubrs
nop
fisttpll
push
xlat
scas
sbb
add
inc
add
mov
sbb
adc
imul
or
adc
adc
inc
adc
jns
and
aad
jecxz
and
call
push
cmpl
jl
and
inc
and
inc
xor
mov
or
push
push
daa
pop
cmc
pop
loope
xchg
lods
adc
imul
out
ret
insb
xchg
icebp
ret
aam
mov
adc
pop
mov
xchg
jecxz
sti
push
lret
jo
inc
imul
mov
mov
rorl
adc
mov
inc
push
fmul
rclb
adc
mov
pop
xor
mov
and
les
int
les
int3
xor
jbe
popa
pop
mov
fidivl
adc
push
jl
mov
inc
fs
jmp
mov
xchg
pop
jb
out
xor
push
shrb
jle
cmp
ret
adc
xor
add
insl
lret
stos
sbb
rclb
and
sti
das
sbb
lcall
cld
mov
fwait
dec
pop
dec
inc
scas
cmpsb
push
stos
mov
and
lea
pop
sbb
aad
jne
pop
jl
rcll
dec
push
mov
mov
in
into
xchg
sub
and
mov
shll
daa
push
subb
push
outsb
in
jbe
adc
push
shrl
xor
sbb
xor
int3
sub
add
pusha
fists
fnstsw
movsl
movsb
lods
xor
rcrl
push
mov
mov
lret
mov
adc
push
mov
nop
cmc
cli
into
scas
fdivl
cltd
inc
daa
mov
dec
adc
pop
mov
jbe
in
jb
bound
and
adc
jo
push
scas
stc
pop
mov
xchg
pop
adc
mov
adc
jbe
inc
xchg
in
in
in
sbb
aad
add
lods
push
and
add
adc
adc
cmpsl
aad
sub
cmp
aam
or
sbb
push
add
or
movsl
sbb
iret
mov
push
lock
pushf
ja
push
mov
xor
jae
mov
fnstcw
dec
sar
in
test
cmp
xor
sti
bound
mov
aas
mov
add
mov
and
add
dec
jo
ror
roll
mov
push
loope
sahf
les
push
push
dec
rclb
mov
xchg
jae
lret
ss
shrl
pop
es
mov
fadd
mov
or
add
out
mov
adc
and
mov
fistpl
test
cmc
dec
cmp
mov
adc
pop
and
aas
pushf
test
int3
lock
xor
gs
push
in
popa
gs
and
pop
aas
stc
sbb
pop
je
or
imul
mov
sub
pop
jle
inc
loop
dec
xchg
xchg
imul
cmp
jl
pop
pop
hlt
xor
mov
push
and
mov
xchg
lods
inc
lds
imulb
jmp
or
mov
inc
notb
inc
and
jl
test
fcoms
in
data16
jp
mov
mov
into
mov
xor
mov
dec
adcl
push
dec
xor
fistpl
in
je
inc
enter
out
bound
inc
or
jb
lea
arpl
lcall
pop
xor
jns
jo
jmp
data16
outsb
int3
in
or
inc
in
xchg
pop
andb
pop
and
test
loope,pn
mov
mov
out
in
pop
inc
lds
pop
or
clc
mov
mov
xchg
cmp
cmp
sbbb
lock
push
mov
cwtl
fcoms
aas
mov
mov
and
lret
mov
ficoml
sbb
and
jg
sbb
xchg
bound
lcall
pop
push
ja
dec
nop
fimull
aaa
fcmovne
jl
int
fdivrs
lret
out
int
mov
mov
push
pop
int
fsubs
pop
negl
and
jp
je
into
mov
inc
pop
cwtl
pop
push
sub
xor
dec
shrl
cmp
int
add
imul
ret
pop
notb
jo
inc
cmp
add
bound
mov
xor
push
mov
rdpmc
xchg
mov
cmp
cli
mov
fldl
and
push
leave
ja
out
cmp
xor
fcomps
stc
xor
mov
inc
cmp
rorl
push
nop
fcompl
sub
sti
sar
sbb
cmp
sbb
loopew
aam
imul
xor
lods
int
and
aam
fidivl
push
jo
fidivrl
js
mov
jnp
loop
mov
ja
insb
outsl
lcall
mov
iret
push
mov
cmc
cltd
cmp
je
les
push
dec
fldl
stos
sub
dec
or
fsubr
sub
sbb
jo
cmpsb
add
ret
sbb
ds
mov
dec
nop
push
fisttpl
fwait
and
mov
lret
fcoms
sbb
xorb
mov
test
mov
jecxz
cmp
or
mov
mov
in
jl
cmp
ret
mov
push
cld
in
popa
xor
cmp
fld
xor
jge
enter
daa
mov
out
dec
sub
daa
push
inc
pushf
lock
psubsb
test
sbb
in
push
push
mov
push
daa
ljmp
sti
xchg
push
push
cmpsl
into
pop
cmp
push
scas
das
movsb
loope
mov
stos
inc
xor
sbb
mov
mov
repnz
mov
roll
adc
pop
gs
inc
cld
clc
push
xor
repnz
cmpsl
adc
mov
xor
mov
lcall
out
ss
in
in
adc
push
loop
jecxz
sbb
adc
gs
adc
mov
fs
xor
lods
out
aas
push
sti
mov
orb
xchg
cmp
fcmove
pop
adc
sahf
ds
call
loope
push
nop
xlat
add
mov
mov
dec
ljmp
loope
fsub
xor
inc
sub
fst
lods
and
and
fidivl
repz
mov
sbb
stos
dec
mov
mov
cld
dec
dec
lcall
and
push
test
sbb
fnsave
xor
push
lea
mov
mov
cmp
fildl
es
shlb
sbb
dec
sub
loope
movsb
lods
cld
pop
pop
in
lea
push
mov
inc
shll
test
jg
push
pop
std
imul
iret
imul
sub
int
ja
jp
sub
cli
inc
push
fiadds
and
cltd
lahf
cmpsl
aaa
pop
cld
push
mov
add
jne
cld
or
mov
dec
insl
jp
test
add
fisttpl
lahf
inc
adc
dec
xor
and
mov
and
test
enter
loope
xchg
adc
push
cmpsl
lods
js
lods
jns
popf
pop
xchg
push
or
push
std
inc
pop
push
daa
jmp
mov
pop
sbb
nop
bnd
mov
pop
mov
fisubs
sub
test
pop
sbb
add
push
pop
adc
mov
sbb
sbb
testb
ret
sub
cwtl
scas
dec
pusha
cltd
inc
fisttpll
lret
xchg
cmp
xchg
loope
push
or
int
sbb
movsb
daa
jg
ds
mov
nop
sbb
imul
push
divl
cwtl
cli
ffreep
inc
and
rcrl
push
aam
jbe
cmpsl
sbb
add
and
idivb
inc
cmp
inc
addl
mov
repnz
push
pop
adc
mov
pop
aam
mov
xchg
mov
rolb
sti
lea
mov
cmp
dec
sarb
int
push
adc
std
mov
pop
pop
push
xchg
and
xlat
push
dec
xor
enter
xchg
imul
sbb
test
cmp
adcl
je
mov
adc
mov
xchg
jae
dec
sub
dec
sbb
mov
loopne
sbb
and
push
jo
fld
call
push
imul
pop
fdivrp
int
movsl
pusha
sbb
and
movsb
xchg
fstpt
push
pop
fisttpll
scas
movsl
dec
mov
insl
rorb
ss
sub
xor
jns
flds
stos
out
or
add
push
test
xor
add
dec
xor
lods
adc
call
sub
inc
or
popa
cmc
push
mov
andb
mov
mov
repnz
jno
xchg
dec
push
or
pop
scas
adc
lds
daa
mov
sbb
pop
dec
dec
or
inc
mov
and
lds
mov
push
xchg
adcl
add
fildl
xchg
fdivr
jecxz
cli
jg
imul
xchg
pop
rorb
pusha
mov
je
sti
pop
pop
pop
test
xlat
and
mov
repz
leave
push
inc
and
add
dec
mov
mov
cmpsb
lock
or
into
mov
push
cmp
jmp
xor
std
xor
sbbb
dec
jg
adc
sbb
in
clc
or
out
cmp
push
dec
push
sub
mov
jb
cmp
or
cmp
lods
std
cmpsl
mov
jb
lahf
jbe
stc
xor
cmp
imul
mov
push
int3
sub
aaa
lods
jl
pop
stos
pop
outsl
ss
fists
mov
icebp
xchg
or
scas
jae
adc
jmp
in
xchg
pushl
out
dec
lcall
enter
pusha
loope
cli
sub
loope
sti
pop
sbb
dec
in
int
push
daa
inc
and
sub
or
push
adc
dec
jl
mov
push
scas
fistps
xor
aaa
sarl
icebp
aad
or
psubusb
popa
nop
jg
inc
out
iret
iret
aaa
xchg
imul
sub
ljmp
adc
mov
rcll
mov
pusha
sub
cmp
dec
stc
pop
and
dec
mov
mov
adc
outsb
mov
iret
and
mov
sbb
movl
sbb
add
xchg
das
xchg
sbb
js
lret
aas
ret
lret
cmp
icebp
mov
outsb
dec
sar
fsubrp
test
out
push
pusha
and
cld
xlat
jmp
mov
pop
push
lds
lret
pop
jb
ret
insb
inc
mov
push
xor
jb
fdivrl
xlat
les
in
mov
shlb
ja
adc
pushf
xor
lret
xchg
mov
mov
je
mov
pop
clc
outsb
testl
push
cmp
es
data16
cmp
mov
xor
aas
outsb
sahf
imul
cmp
fsubl
adc
sahf
jle
add
push
cmpb
inc
jno
mov
mov
rcll
and
aas
cli
fwait
and
lods
std
xor
sbb
aam
repnz
xor
mov
sub
pusha
frstor
mov
lret
fucomp
sbb
xor
mov
leave
push
rol
cli
mov
xorl
ja
pop
inc
and
in
ret
sub
nop
jne
adc
addr16
sbb
jo
das
add
xchg
cmc
cmp
aam
cli
test
push
test
scas
orb
cld
jne
sbb
pop
les
mov
cltd
push
mov
add
int3
xchg
test
dec
push
loop
insl
push
movsl
stos
std
ds
xor
inc
aas
push
outsl
in
jmp
test
mov
lret
je
sar
pop
gs
pop
and
cs
mov
sbb
or
xchg
leave
lahf
imul
movsl
push
loopne
mov
sarb
or
mov
sarb
rol
xchg
push
movsb
mov
int
stos
out
xor
or
fdivl
push
cmpsl
rcrb
xor
mov
dec
pusha
mov
aad
cli
mov
sar
mov
popa
mov
add
mov
gs
sub
xchg
add
mov
lea
xchg
int
pop
inc
popa
mov
in
mov
cld
and
jnp
std
dec
mov
sub
push
sub
dec
xchg
stos
lcall
pop
jno
mov
popa
mov
loop
pop
pop
pop
subb
imul
and
jbe
pusha
repnz
push
cltd
mov
nop
jp
pusha
mov
mov
pop
mov
push
in
xor
xchg
enter
inc
cmpsb
xchg
addl
icebp
dec
mov
mov
loop
rep
loopne
dec
xlat
fldl
ljmp
loope
jbe
inc
and
pop
in
cmpl
jg
add
xor
jp
fadds
adc
pop
nop
mov
into
jmp
adc
inc
jmp
cmc
adc
cs
jb
mull
pop
mov
mov
bound
pop
add
dec
pop
jg
jno
cmp
dec
repnz
pop
movsb
enter
scas
xor
movsb
cmp
inc
pushf
nop
push
cmp
test
or
cmp
test
cld
flds
stos
mov
in
push
sub
lahf
popa
lcall
ja
mov
mov
xor
inc
mov
sti
insb
and
testl
inc
adc
mull
cwtl
sub
outsl
call
push
add
fsubrs
sbbb
and
cld
gs
jp
xchg
pop
fcomi
nop
push
lret
aam
mov
mov
outsb
addr16
adc
dec
add
dec
stc
xchg
gs
mov
inc
lock
mov
shlb
fucomi
cmp
mov
je
shrb
addb
stc
jne
movsb
ret
je
fstpt
stos
and
je
fsubl
insl
pusha
ret
add
sub
push
cltd
ficompl
mov
push
pop
sbb
mov
mov
outsb
push
js
nop
lcall
popa
loopne
aad
pop
pop
push
sbb
jbe
ds
dec
sub
xchg
xchg
rcrb
je
mov
ror
outsb
inc
call
dec
and
or
pop
pushf
cmp
fucomi
adc
pop
mov
sbb
insl
das
inc
push
pop
mov
jbe
popa
jne
pop
jae
jae
xchg
mov
jo
dec
insb
aas
adc
cmp
inc
mov
daa
pop
fwait
add
xchg
jno
in
jbe
mov
xorb
inc
test
jnp
push
hlt
and
int3
lcall
push
mov
ret
dec
inc
push
ret
lcall
cmpsl
inc
cmpsl
adc
sub
push
jge
fisubs
push
mov
cmp
xor
mov
jecxz
mov
es
data16
loop
pop
negb
push
add
sub
insb
cld
test
mov
mov
jnp
xor
movsl
bsr
inc
int3
and
movsl
xor
or
rol
and
cli
mov
sbb
mov
or
cmpsl
sub
cltd
call
daa
push
call
push
xchg
push
pusha
cmpsl
or
xlat
scas
incb
int3
popf
mov
inc
inc
or
insb
into
mov
dec
dec
mov
cmp
inc
add
fsts
stos
into
adc
inc
cmpsb
sbb
xor
xor
daa
pop
xchg
push
es
and
cmp
inc
repz
push
jb
adc
or
decl
outsl
scas
imul
stos
scas
xchg
jle
dec
jno
stc
dec
pop
cmpsl
xor
repnz
cmpl
mov
popf
add
inc
movlps
push
lahf
incb
push
jecxz
sbb
push
adc
lret
adcb
or
mov
lret
mov
lret
popf
stos
push
xor
cwtl
je
out
test
mov
or
mov
inc
subb
push
and
je
add
jmp
or
and
sub
mov
pop
xor
in
arpl
arpl
or
int3
mov
inc
mov
add
dec
outsl
and
push
cmc
adc
push
lods
or
mov
inc
cli
outsb
jne
mov
xor
hlt
ljmp
add
jns
or
sub
cld
sbb
mov
ss
in
fadds
mov
repz
push
iret
nop
aad
cli
mov
cmp
xor
add
test
pushf
xchg
out
scas
stos
pop
mov
pop
dec
test
push
fisubl
cmp
xor
pop
shll
test
jp
mov
int
pusha
or
push
negb
xor
or
mov
ljmp
into
lds
inc
dec
pop
dec
repz
scas
enter
out
outsl
xchg
in
fstpl
mov
jle
stos
jb
pop
jg
and
adc
dec
loop
lret
mov
sub
xchg
add
sahf
lock
enter
cltd
inc
and
ds
addr16
shl
pusha
movsl
xchg
xlat
inc
arpl
mov
inc
inc
jl
test
mov
jmp
jbe
cmp
cwtl
mov
sahf
push
lret
pushl
mov
xlat
dec
sub
adc
sbb
mov
stc
jne
testb
sub
rcr
add
inc
fldl
mov
pushf
mov
loop
iretw
inc
mov
and
cmp
mov
push
lods
xchg
ds
fldenv
push
sub
dec
into
mov
aam
int3
mov
fimull
cmp
shll
sub
out
es
xchg
jecxz
into
xchg
sahf
add
pop
cmpsb
fwait
dec
cld
push
adc
clc
dec
movsb
jne
cmpsl
pop
sub
lds
int3
ficoms
movb
popf
jg
shlb
sub
dec
movsl
sti
cli
mov
stc
inc
or
aad
rolb
in
ficoms
mov
shl
sti
fldl2e
filds
xchg
and
dec
testb
jnp
push
lret
bound
ljmp
test
mov
pop
imul
scas
xchg
imull
arpl
xor
push
in
xchg
or
pop
sbb
out
call
jle
movsb
out
jnp
jl
les
movsl
outsb
inc
xchg
mov
loope
push
push
xor
and
pop
aas
push
out
iret
fs
xchg
hlt
mov
shrl
fisttpl
mov
fcmovbe
in
and
pop
mov
sbb
std
mov
sbb
ljmp
push
xchg
pop
jmp
push
int3
add
mov
leave
test
sbb
into
jbe
stos
push
adc
mov
inc
mov
test
pushf
mov
popf
mov
out
and
inc
lcall
into
fstp
sbb
jmp
mov
add
push
mov
xchg
and
mov
dec
pop
sbb
jmp
xchg
xchg
dec
jo
adc
cmc
jecxz
inc
dec
fs
std
add
cmp
adcb
sub
leave
mov
popf
imull
inc
add
iret
and
aam
scas
in
icebp
sub
out
shl
xlat
mov
sub
add
jbe
jg
pop
popa
int3
arpl
mov
and
push
sub
imulb
out
scas
in
repz
in
mov
mov
xchg
push
sub
std
xor
les
and
adc
lods
int3
mov
xchg
add
call
jmp
mov
xchg
pop
mov
push
out
movsb
push
jecxz
sti
mov
filds
pusha
jbe
jge
loopne
pop
lcall
mov
paddsb
inc
iret
mov
mov
call
sbb
nop
jecxz
das
cmp
mov
divb
push
aad
test
nop
dec
xchg
in
test
out
lea
add
icebp
inc
mov
enter
xchg
mov
arpl
cmp
mov
or
mov
add
push
push
adcl
mov
cmp
mov
rorb
or
mov
dec
adc
lds
stos
and
sbb
push
dec
mov
insb
out
icebp
shrb
iret
and
out
in
pop
mov
hlt
test
fwait
scas
dec
push
push
aad
xlat
sbb
outsl
mov
mov
mov
push
jae
cmp
jmp
mov
xor
lods
js
out
loope
ret
mov
out
out
pop
or
add
hlt
or
jge
xchg
cwtl
ds
pushf
jmp
mov
gs
push
pop
movl
and
mov
cld
sbb
pusha
scas
repnz
xor
pop
out
ds
roll
lock
enter
and
pop
loope
jb
das
je
lahf
outsl
push
fisubrs
lcall
call
enter
testb
mov
imul
inc
loope
mov
jge
sub
int3
jo
outsl
rorl
cmpsl
or
out
push
sti
pop
aam
inc
cs
dec
std
mov
arpl
sbb
adc
xor
push
push
mov
push
faddp
mov
std
lock
stos
sti
push
pop
xor
cmc
outsb
cltd
pop
pop
inc
rclb
lret
daa
adc
jg
das
clc
mov
and
loop
sbb
das
jne
add
incl
aam
insb
add
lret
add
xor
cmc
jae
hlt
push
sbb
mov
add
sahf
ljmp
inc
pop
es
add
xchg
mov
cwtl
sbb
sub
xor
or
xchg
push
lods
sub
cmp
ljmp
mov
bound
inc
push
or
fsts
push
xor
add
in
movsl
push
loopne
arpl
add
das
pop
into
lcall
push
cmp
sub
in
xchg
sbb
dec
mov
jecxz
jae
sbb
mov
cli
jno
dec
shrl
jne
icebp
xchg
add
push
sbb
jne
and
shr
mov
add
xchg
in
and
and
jno
push
loope
fisubrl
cmc
sub
mov
pushf
mov
enter
sub
test
push
cmp
xor
cmp
xchg
lods
mov
nop
popf
sbbl
insb
mov
gs
mov
pop
add
xchg
fistpll
mov
stos
xlat
mov
xor
or
and
movsl
add
add
jbe
int3
loop
std
xchg
inc
xor
mov
and
out
dec
scas
jns
push
adc
and
in
jg
inc
pop
jp
lea
add
popa
sub
imul
cwtl
sbb
outsb
inc
jnp
inc
and
jle
sbb
inc
aam
ds
adc
data16
xchg
daa
lret
cmp
pop
xchg
adc
arpl
repz
lock
or
repz
sbb
mov
dec
cwtl
rolb
int
mov
or
ljmp
push
and
inc
sub
mov
sbb
mov
push
and
idivl
xchg
shlb
cmp
inc
jmp
or
xchg
imul
inc
dec
or
ret
or
and
pop
clc
clc
sar
lret
and
push
xchg
orb
xchg
imul
pop
pop
add
faddp
jae
test
pop
xlat
mov
loopne
sahf
or
mov
mov
xchg
cmpl
mov
sahf
xor
mov
mov
fcmovbe
mov
mov
lods
addr16
ds
and
jle
pop
lcall
icebp
rclb
aaa
dec
mov
ja
out
mov
and
sbb
cltd
and
in
xor
fsub
into
jg
ja
push
sub
in
test
fcoms
leave
out
insb
add
lds
lea
les
push
sbb
jl
mov
lcall
pop
filds
inc
add
dec
push
push
je
fidivrl
int3
cltd
xchg
cmp
jg
or
xchg
pop
leave
xlat
addr16
push
xor
xchg
into
sub
sub
and
mov
jl
lods
push
cmpsl
or
xchg
imul
sbb
cs
mov
xchg
shl
pop
lock
xor
and
stc
inc
int
ficompl
xchg
push
hlt
dec
mov
push
xchg
pop
popa
ret
mov
in
stos
lahf
cmp
pop
ret
les
push
inc
push
adc
test
in
mov
xchg
in
sub
pop
adc
inc
cmp
jae
scas
out
adc
aas
pop
aad
push
outsb
pop
arpl
adc
ja
fmul
pop
mov
das
or
scas
scas
dec
dec
adc
int3
ljmp
cmp
mov
lods
pop
push
out
divl
cmpsl
jecxz
or
mov
adc
ja
xor
ret
test
jge
xchg
not
sbbb
sbb
adc
in
or
mov
add
lock
add
mov
repnz
fsubr
lods
cmpsl
test
icebp
jno
push
lret
jno
or
jg
lret
dec
mov
lods
fwait
je
xchg
jnp
stc
sub
cmp
cld
insb
xchg
xchg
pop
jo
sbb
arpl
add
sbb
push
test
call
cli
in
fdivl
cmp
lods
xorb
cs
jp
xchg
popf
orb
fdivrl
and
jl
mov
frstor
or
jne
jl
or
and
pop
push
pop
sub
fimull
fldlg2
ret
inc
pop
mov
je
fadds
iret
or
sarl
adc
push
cmp
repz
adc
push
stc
popa
cs
out
shr
mov
and
pop
jne
das
or
orb
adc
iret
pop
pop
lret
mov
pop
int
ljmp
mov
cmp
in
mov
enter
popf
out
ret
mov
out
je
or
inc
mov
pop
jns
dec
xchg
cld
gs
mov
cmpsb
out
enter
aas
hlt
xlat
cltd
push
and
and
or
cmp
hlt
xor
enter
mov
int
xchg
mov
ja
jp
outsl
mov
push
popa
leave
fbld
pusha
loope
push
cmp
mov
lret
push
sbb
pop
not
mov
sub
sbb
xor
rcl
outsl
into
inc
roll
popf
shl
adc
cmpsl
add
or
jg
mov
inc
cmc
ret
pop
std
or
push
testb
and
adc
lods
jle
xchg
imul
into
dec
jnp
insb
sbb
les
fisubs
mov
incl
sub
je
inc
push
es
xlat
punpckhdq
out
sbb
sbb
sub
lock
cs
and
test
jl
stos
cmp
lret
mov
mov
fisttpl
push
data16
xchg
pop
hlt
or
or
xor
test
fstl
jnp
adc
sub
js
xlat
cmp
mov
push
cmp
into
xchg
imulb
dec
mov
gs
sbb
dec
repnz
mov
sbb
dec
addr16
loopne
and
and
aaa
and
add
add
mov
loope
cmp
cmp
mov
gs
lock
mov
idivb
popfw
sub
inc
packuswb
xchg
lret
test
xchg
repz
int
mov
adc
stos
mov
mov
punpckhbw
sub
dec
aas
js
cmp
mov
aas
repnz
sbb
insl
ret
mov
xchg
add
inc
mov
pop
mov
jbe
inc
mov
push
repnz
fwait
inc
aaa
fwait
pop
test
sub
pushf
stc
lea
sbb
or
ret
mov
xor
inc
sub
loop
idivb
inc
movsl
adc
xchg
pop
adc
xor
add
sbb
lret
stos
aaa
pop
jmp
lea
shll
add
jp
xor
icebp
xchg
fldenv
add
add
mov
into
mov
ret
cmp
or
popf
pusha
clc
jae
mov
into
test
sbb
stc
fisubs
adc
lds
outsb
push
lret
push
dec
fs
stos
lcall
or
pop
icebp
cld
dec
xchg
xchg
cmp
add
lds
rorl
and
xchg
int3
adc
fldt
jns
pop
xorb
popl
fsts
pop
imul
xor
addr16
shll
pop
in
out
adc
dec
cs
out
gs
and
ret
push
mov
pop
mov
cs
loopne
sbb
sbb
push
sahf
fstp
sub
insl
aad
sti
flds
sbb
in
pushf
ror
gs
mov
lahf
mov
inc
lock
pop
fs
cli
insb
dec
jae
repz
test
or
xchg
fsubr
xor
clc
inc
mov
les
cmp
sahf
jle
fnstenv
or
sub
pop
ret
mov
push
ffree
addr16
fxch
test
pop
cmp
nop
xor
add
xor
cltd
mov
mov
pop
jb
xor
shrl
mov
aam
mov
pop
mov
rcrl
jns
ret
lgs
push
mov
es
ja
fwait
add
and
or
jmp
std
mov
stos
dec
popw
enter
and
sub
cmp
pop
xchg
xchg
xchg
xchg
push
sub
mov
addr16
ljmp
aam
jne
and
movsb
hlt
sub
out
cld
xor
insb
shrl
push
mov
xchg
test
sbb
cmp
jp
insl
add
fimuls
movsl
inc
push
into
xor
fincstp
sub
lcall
mov
pusha
pop
mov
xchg
sub
fldl
fisttpll
hlt
jae
inc
mov
loope
pop
dec
fisttpl
fdivr
inc
ds
xor
mov
mov
inc
ror
out
mov
and
idivb
mov
dec
sbb
mov
cmp
mov
jb
jbe
dec
jecxz
push
push
imul
inc
pop
into
add
call
mov
add
push
or
jno
mov
aaa
mov
cs
out
mov
mov
dec
ja
les
cmc
sarb
iret
sbb
adc
sbb
dec
push
push
movsb
jp
push
icebp
ret
aaa
jns
jns
inc
loop
inc
pop
xchg
loope
sub
stc
in
enter
xchg
xor
add
adc
inc
mov
imul
ds
mov
clc
mov
lods
loop
pushf
mov
loopne
mov
rolb
push
fildl
aad
dec
cmp
cltd
in
xlat
adc
xorl
insb
rcl
cli
bswap
dec
adc
cmc
mov
xchg
and
negb
adc
es
jge
xor
aas
lods
rolb
cwtl
pop
arpl
or
clc
push
ljmp
cmpsl
and
shrl
pusha
cli
mov
insl
push
mov
jns
sysret
mov
int3
mov
scas
pushf
pop
push
xchg
scas
ret
xlat
add
jl
xor
pop
push
xlat
mov
sbb
xchg
sub
into
stc
sbb
int
popf
call
adc
xchg
cmp
inc
push
adc
clc
fmull
aaa
ret
hlt
mov
push
cltd
nop
sbb
add
push
jmp
movq
int
hlt
push
andb
ret
adc
push
imul
add
dec
popa
outsb
inc
mov
inc
std
fs
jo
sbb
push
pop
sbb
or
out
lret
enter
pop
pusha
ret
rcr
loopne
js
test
push
fstl
sarb
mov
xchg
aad
movsl
jg
das
push
cmpsb
insl
lea
cmp
repz
xchg
icebp
roll
and
inc
mov
loopew
xchg
mov
into
jae
in
das
sbb
mov
add
popa
ret
add
and
popf
popa
pop
inc
fimuls
gs
cmp
ret
inc
enter
mov
iret
add
bound
lret
xor
or
aaa
add
nop
dec
mov
add
imul
sahf
test
fdivl
xchg
aam
xor
jo
dec
pop
ror
push
and
rcr
scas
in
push
mov
cmp
int
lcall
hlt
pushf
cmp
pushf
mov
adcl
iret
cmpxchg
or
push
or
add
leave
mov
popa
sahf
jo
sub
fbstp
jae
push
or
test
add
and
dec
xchg
cmp
adc
inc
sub
mov
push
aaa
int
xor
adc
pop
leave
fbstp
push
inc
mov
cmp
cmpsl
pause
jae
pop
inc
sub
sub
mov
repz
in
push
pop
and
xor
clc
es
lods
lahf
lahf
std
mov
pushf
dec
push
pop
mov
jbe
iret
pop
rorl
stc
cmp
mull
mov
sub
fadds
scas
mov
rclb
add
loop
stos
not
pusha
stos
xor
pop
cld
hlt
and
dec
pop
sbb
pusha
std
mov
repnz
inc
mov
call
jle
sub
insl
mov
xchg
mov
pop
jo
mov
add
clc
sbb
mov
jle
add
pop
jp
and
fwait
or
mov
add
ret
cmpsl
pop
mov
fildll
stc
mov
or
sahf
aaa
idivb
sti
aad
xor
pop
cmp
dec
sarl
jnp
ja
ja
dec
push
xor
inc
xchg
scas
push
ret
inc
icebp
shl
clc
aam
inc
addr16
lods
movb
pop
mov
inc
mov
sbb
push
lods
push
mov
and
std
mov
xchg
jne
add
gs
test
int3
sbb
mov
fnstcw
push
cmp
and
add
push
mov
mov
loope
shrl
lea
sub
fidivs
aad
mov
int
xor
shlb
or
and
sahf
sahf
jns
jne
mov
adc
mov
in
xor
ret
mov
cmc
and
cmp
fsubl
dec
addr16
jo
pop
movsb
pusha
jmp
adc
mov
fs
adc
cli
fdivrl
adc
dec
sub
xlat
mov
lcall
ja
sbb
push
dec
push
xchg
mov
sbb
sub
cmp
call
pop
mov
mov
jb
push
push
pop
cmp
pusha
cwtl
cwtl
outsb
adc
repz
jne
cmp
add
je
cmc
xchg
rcll
mov
xchg
or
adcb
fstpt
inc
adc
fisubs
push
shl
icebp
cmp
loope
aaa
mov
dec
sbb
out
test
or
jecxz
push
std
jge
push
out
or
dec
jns
insb
daa
push
pop
push
cli
add
and
fistpll
pop
arpl
jno
inc
inc
cmpsl
pop
mov
ja
push
dec
imul
fsts
pushf
pop
mov
adc
repnz
adc
fadds
pop
loope
rorl
xor
and
lock
std
in
test
inc
leave
in
xchg
mov
mov
cmpsl
xchg
xorl
addb
add
sub
dec
loopne
jmp
mov
jmp
icebp
es
in
pop
fsubl
out
push
loopne
dec
lahf
movsb
jno
dec
mov
outsb
imul
clc
adcl
push
fisttpll
sbb
mov
popa
frstor
int3
lahf
loop
test
or
dec
sbb
hlt
enter
adc
push
mov
inc
jo
xor
cmpsl
adc
fisttps
testl
push
and
fcmovnu
cmc
mov
xchg
xorb
cwtl
mov
test
push
js
xchg
cmc
cmp
mov
dec
push
loope
js
dec
mov
lods
out
add
pusha
in
lods
add
ret
adc
jg
test
mov
jge
hlt
addr16
hlt
out
pop
adc
enter
inc
jo
mov
js
movsb
sbb
inc
mov
aas
popa
scas
imul
mov
cmp
hlt
adc
adc
add
sub
fidivrl
inc
aaa
jg
pop
dec
ficompl
cmp
fnstenv
fndisi(8087
sbb
jb
sub
add
inc
sbb
or
lea
inc
push
repnz
mov
test
test
or
repz
nop
fcomps
sbb
mov
lea
or
sti
mov
sbbb
push
pusha
out
inc
movsl
psubusb
jmp
lahf
xor
iret
mov
movsl
inc
movsb
subl
push
out
imul
ljmp
mov
inc
pop
jae
outsl
enter
out
push
clc
jge
add
jl
cltd
push
sar
testl
ds
and
and
cmp
fldcw
les
cmp
ja
xchg
ret
add
cmp
repz
xchg
mov
daa
leave
mull
sub
jo
stos
fwait
cmc
out
lods
push
pop
xchg
test
xchg
xchg
mov
and
cltd
inc
iret
push
mov
popf
pextrw
xor
inc
xor
les
jae
pop
or
in
pop
loopne
sar
inc
sub
jbe
inc
aad
jl
jge
mov
cld
add
in
shlb
bound
mov
dec
nop
pop
out
inc
dec
daa
cli
inc
sbb
sub
lock
mov
std
pop
add
sbb
sbb
into
call
dec
xchg
pop
cmp
add
scas
aaa
xor
inc
dec
sbb
shrl
sahf
scas
inc
mov
popa
jecxz
cmpsb
push
in
pop
lcall
jl
pusha
cmp
or
js
push
xchg
xchg
or
and
pop
lods
mov
cltd
lcall
leave
mov
cmpsl
push
mov
scas
cmp
mov
int
stos
mov
enter
testb
pop
and
mov
jbe
push
and
sbb
pop
jle
or
mov
test
in
test
movsl
jg
pusha
xchg
pop
jp
popa
ja
dec
xchg
cs
push
mov
pop
mov
or
shll
inc
in
cmpsl
hlt
fnsave
xor
data16
mov
stos
fmuls
adc
daa
and
jne
xchg
mov
movsl
xor
popa
and
mov
cli
jmp
xchg
pop
and
imul
arpl
mov
leave
icebp
cltd
je
pusha
adc
add
dec
fs
mov
pop
xchg
jl
fldenv
es
fwait
js
lods
lods
sahf
xor
stc
in
fwait
push
dec
xor
jmp
mov
push
xlat
sub
add
mov
jnp
hlt
push
mov
inc
cmp
mov
jne
xchg
hlt
cli
in
nop
cmp
in
in
lock
aam
movsl
ljmp
bswap
xchg
cmp
sub
and
dec
fnstsw
dec
repz
push
inc
push
xor
out
das
das
push
jmp
adc
cld
lods
xor
nop
or
mov
push
fistl
jge
fldt
test
inc
mov
sub
pop
jp
hlt
xchg
rclb
xlat
xchg
fwait
jnp
pushf
sbb
sub
and
sahf
aad
mov
outsb
daa
and
cs
call
fiadds
loop
add
ret
outsb
ret
nop
sbb
mov
sub
mov
add
adc
aaa
xchg
mov
cld
lock
icebp
lret
mov
add
fs
lret
jge
fs
inc
push
pop
pop
dec
test
push
aam
sbb
test
mov
sti
hlt
lods
inc
rorb
mov
cmpsb
pop
and
and
inc
outsl
mov
in
sub
lahf
pusha
test
cli
pop
ss
xor
js
sub
or
dec
sub
dec
mov
movsb
sarl
popf
xor
push
jp
mov
push
mov
jp
lds
stos
cmp
cmpsb
popa
lds
sub
sub
fstl
bound
ljmp
jge
hlt
hlt
push
pop
divl
shll
inc
sub
outsb
popa
mov
xchg
jb
xor
loope
cmp
sbb
inc
icebp
add
in
loopne
pusha
mov
sbb
cltd
cmp
sub
or
ret
in
ja
cwtl
mov
fdivrl
aam
lock
shll
ja
push
ret
mov
fisubrs
xrelease
inc
or
test
pusha
repz
cmp
js
push
cmp
cmp
pop
js
repz
jmp
mov
daa
popa
mov
cmp
dec
aam
push
int
push
insl
js
leave
ja
push
in
sbb
adc
movsl
in
fsts
sbb
shrl
mov
push
mov
xchg
add
data16
int3
xor
stc
mov
sti
imul
in
pop
jge
iret
mov
mov
sub
push
pop
lea
ds
push
push
mov
add
mov
push
ljmp
cmpsl
mov
add
cli
dec
inc
les
shr
nop
sbb
sbb
ss
fmuls
dec
test
aam
mov
or
call
mov
fwait
jae
in
or
mov
inc
les
inc
arpl
mov
pop
lods
cmp
add
dec
scas
insl
or
call
sub
imul
and
cmp
mov
gs
leave
outsl
add
lret
add
lret
cmp
jnp
test
xchg
ds
icebp
loop
push
jb
mov
nop
push
jmp
loopne
mov
cmp
cmpl
cmpsl
sbb
mov
xchg
push
stc
in
jns
aam
mov
jb
inc
or
out
inc
cmpsl
cwtl
mov
mov
adc
and
adc
les
movsb
mov
push
inc
mov
repnz
repz
pop
or
push
mov
or
jp
or
inc
jns
adc
push
or
dec
fwait
iret
add
jae
mov
jne
jmp
adc
mov
mov
jo
jae
bound
in
inc
or
xchg
aaa
inc
adc
in
inc
push
or
aam
sub
xchg
mov
sub
je
adc
xchg
repz
sbb
pusha
sbb
mov
sub
es
sbb
ret
inc
xchg
rolb
test
xchg
cmc
pop
cld
mov
or
push
dec
pusha
add
pop
mov
jns
dec
mov
sub
insl
mov
cmpsb
fwait
outsb
sahf
imul
jb
dec
lock
sub
mov
cmpsl
stos
push
pop
pushf
jmp
xchg
lret
jbe
loope
jbe
sahf
mov
mov
xchg
test
mov
cmp
mov
std
aaa
jne
jnp
fnstcw
dec
ficoml
mov
xlat
stc
cmc
lahf
jo
data16
jbe
sub
mov
pop
inc
icebp
xchg
fisttps
rorl
xchg
mov
jae
les
lods
pop
cmp
pop
xchg
xchg
mov
cld
mov
pop
inc
in
add
mov
jg
fisttpll
mov
mov
pop
and
in
imul
mov
and
popf
mov
jp
sub
sub
sbb
aas
rcrl
popf
xchg
mov
ror
pushf
inc
lret
insb
fs
movb
std
add
jge
jge
ljmp
jl
xchg
mov
mov
jns
add
stos
sbb
push
xchg
xor
movsb
fs
loop
xchg
clc
adc
loop
mov
loopne
dec
pop
and
push
jp
sbb
and
lcall
hlt
and
mov
pushf
stc
pop
dec
mov
std
dec
xchg
sti
and
mov
test
stos
adc
sub
in
xor
adcl
fidivl
adc
jns
or
mov
test
addl
lret
sub
mov
xchg
ret
inc
stc
sbb
jmp
sbb
add
imul
imul
push
aad
sub
jecxz
out
jg
popa
divb
jo
lock
sbb
mov
gs
fwait
jp
fwait
sbb
fadd
scas
or
int3
imul
fistpl
ds
ret
lock
aad
jle
lahf
jge
xchg
cwtl
nop
inc
fwait
in
xlat
mov
xor
sbb
pop
loope
lahf
call
lret
cmp
mov
rclb
icebp
inc
adc
xor
mov
ret
mov
loop
or
mov
pop
aas
ljmp
js
sbb
test
cmp
imul
rol
and
incl
scas
and
ja
mov
movb
and
push
fdivr
dec
jno
xor
orl
push
mov
arpl
ss
mov
mov
push
movsb
enter
mov
pop
inc
xchg
ss
sbb
dec
push
push
jne
and
out
scas
movsl
mov
and
clc
lods
push
daa
sbb
xchg
into
fucom
xor
insb
xor
xlat
push
pusha
pop
test
ds
mov
xchg
pop
xor
je
mov
ds
sti
xchg
aas
leave
test
jle
mov
mov
and
xor
into
xorl
fcompl
sub
or
adcb
cmp
sub
sub
dec
adc
cmp
ds
mov
jae
mov
dec
mov
or
xor
or
inc
fisubl
mov
pop
cmpsl
or
add
aaa
cmc
popf
mov
sub
pop
movsl
ss
mov
inc
and
cmp
in
aas
jbe
mov
mov
jno
mov
jge
fisubrs
push
cli
pop
xchg
out
test
sbb
das
pushf
std
stos
xor
popa
mov
dec
mov
imul
xor
or
repz
add
pusha
and
cltd
sbbl
inc
aaa
mov
jne
or
js
outsb
jbe
sbb
mov
push
cltd
pop
movsb
push
fwait
cmp
inc
pop
dec
pop
dec
mov
push
fisubl
lods
add
xchg
aaa
lods
push
xor
ret
sbb
leave
push
sub
mov
arpl
jo
enter
lock
es
inc
iret
jbe
shrl
leave
push
push
add
call
mov
or
jno
lret
push
mov
adc
in
sarl
cmp
and
andl
stos
or
pushf
jl
aas
pop
fists
sbb
mov
incb
imul
inc
scas
popf
pop
enter
incb
rclb
cmp
ficoml
jbe
loopne
push
rolb
ljmp
adc
stos
in
adc
jle
cmc
pop
ficoms
nop
add
sub
adc
insb
push
push
push
xchg
mov
sbbb
sub
mov
add
daa
pusha
jns
sub
movsl
sub
jae
xchg
inc
in
clc
dec
movsb
dec
mov
out
jmp
call
mov
xchg
and
in
jle
repz
dec
into
xchg
fcmovbe
leave
add
cmpb
add
in
imul
or
mov
mov
jmp
imul
pop
pop
test
add
addr16
jg
mov
jne
and
inc
cmp
sbb
test
jle
mov
mov
rcrl
jge
push
add
nop
or
repnz
aaa
das
jne
mov
call
in
cmc
and
mov
out
jge
insl
mov
das
stc
pop
in
icebp
dec
cmp
and
sub
les
fs
push
push
dec
and
out
push
push
xor
adc
inc
out
lea
push
cltd
cmp
or
sub
push
dec
daa
cs
and
xor
leave
rcr
fisttpl
add
xor
xor
mov
pop
inc
sbb
xchg
cmpsb
ret
or
popa
xchg
pop
shlb
sub
cmp
enter
xor
pushf
je
xor
pop
jecxz
shr
mov
call
loopne
lods
mov
sub
notb
xor
sbb
pop
or
mov
out
hlt
daa
xchg
mov
and
into
push
ret
sbb
aas
and
xor
mov
outsb
outsl
lahf
lcall
or
lods
mov
mov
or
jge
mov
out
xchg
addr16
lods
scas
ss
cli
xor
mov
pop
lods
scas
loope
enter
iret
mov
lods
xor
mov
sbb
and
in
cmp
fwait
outsl
mov
stc
je
adc
adc
jns
dec
xor
iret
cmc
push
inc
mov
into
mov
cs
cmp
out
push
icebp
lahf
xor
sbb
test
adc
es
or
iret
push
sub
or
fildl
loopne
je
pop
fmuls
lret
int
ret
mov
xor
jnp
lea
je
fwait
xorb
stos
outsb
sub
popa
push
lds
test
pop
lea
jnp
ljmp
mov
and
cld
add
loope
fs
mov
shl
sub
hlt
mov
cmp
or
and
or
push
xchg
dec
rcll
xchg
icebp
adc
push
fs
jle
in
sarb
out
cmp
xlat
pushl
adc
jmp
dec
mov
xor
adc
aas
xor
repnz
pop
jne
mov
cmpsb
sarb
mov
cmpsl
mov
shrl
enter
insw
imul
insl
jecxz
add
mov
cmp
leave
fmull
xchg
ficomps
aas
and
insl
push
dec
idivb
push
cld
cmpsl
mov
mov
movsl
dec
dec
pusha
daa
flds
or
or
test
push
inc
clc
push
cltd
inc
add
ret
jmp
out
outsb
xchg
mov
jecxz
out
out
sbb
xchg
jne
out
mov
in
rcl
sbb
clc
loope
sbb
mov
mov
sbbb
out
pop
xor
dec
or
daa
call
stos
sub
inc
testl
hlt
cld
push
adc
pop
jge
loopne
movsb
insb
loope
cwtl
add
int
ret
pop
or
in
adc
inc
mov
loop
sub
pop
mov
out
jb
jb
mov
jge
cmpsb
xchg
sub
gs
push
adc
sbb
sbb
insl
cmc
xor
xor
mov
sbb
or
xchg
mov
mov
dec
outsb
sbb
jae
iret
loopne
icebp
sbb
cmpsb
test
sub
aad
scas
mov
xchg
cltd
mov
in
fsubl
push
cmp
sbb
sti
repnz
push
dec
cmp
inc
lret
cmp
mov
mov
loopne
adc
jae
and
ret
cmp
sub
jbe
xchg
sbb
cmp
lock
mov
daa
jno
xlat
push
sub
ret
mov
cs
jle
outsl
bound
sbb
mov
xchg
mov
pop
push
pop
and
push
pop
push
aad
loop
ss
jp
mov
test
mov
xor
loop
push
daa
and
fbld
out
ljmp
ljmp
inc
sub
mov
mov
mov
adc
xor
daa
stc
or
popf
aas
inc
push
pop
aad
sbb
inc
adc
loop
push
nop
sub
movsl
cmp
les
inc
mov
adc
xchg
cli
sub
stc
jge
mov
addr16
fists
test
mov
mov
mov
cmc
dec
add
xchg
and
fdivrp
stos
dec
stos
push
lahf
jb
push
sub
xor
mov
lods
lock
in
fisttpl
push
adc
add
or
icebp
into
xlat
out
rorb
out
cmp
imul
mov
inc
popf
mov
pop
mov
cmp
imul
scas
cmpsb
sahf
repz
lret
sub
movsl
inc
fnstenv
and
inc
jg
mov
test
mov
stos
mov
cwtl
mov
fxch
push
push
lret
xchg
ret
cmp
pop
aad
push
int3
test
icebp
clc
push
dec
movsl
test
and
or
inc
xor
and
les
xor
sbb
lock
cmp
pop
add
xor
lds
mov
jmp
cmp
sbb
and
movsl
outsl
into
loopne
pop
cmp
into
stc
bound
int3
loope
adc
jmp
aam
out
sbb
or
mov
pop
es
hlt
xchg
pop
fnstsw
mov
push
popf
cmp
aad
sub
popl
sub
cmpsl
fs
shr
lea
mov
xchg
adc
add
sub
jno
mov
jne
popf
xchg
fildl
add
jecxz
test
cmp
and
mov
bound
jnp
cmpsb
jmp
icebp
popa
dec
out
dec
rcl
mov
movl
lret
pop
push
sub
pusha
xlat
pop
mov
pop
lret
mov
inc
pop
inc
aam
add
nop
cmp
scas
push
ret
jae
sub
bound
and
out
adc
into
rol
or
xchg
fucom
pop
and
cmp
or
outsb
out
movsb
mov
enter
fwait
js
stc
out
pop
pop
and
enter
bound
ss
shl
pop
mov
stc
js
incb
jecxz
fldenv
addr16
clc
adc
push
lock
aas
rcrl
rcrb
lret
imul
loop
xor
fistpl
stos
xchg
sti
add
ds
xchg
inc
cmpsl
cmpsb
sarl
fabs
ds
jl
inc
mov
sbb
das
mov
mov
pop
cmp
ror
sub
jbe
insl
jcxz
mov
lcall
ficoml
or
pop
ljmp
pop
xchg
dec
out
hlt
xor
mov
add
ret
imul
fstpt
push
les
jge
xor
lds
ljmp
fldcw
lods
jnp
fs
data16
cmp
xchg
shl
jl
sti
inc
dec
push
aaa
pop
jnp
pslld
jl
sbb
addr16
in
mov
in
or
lea
in
fbstp
mov
push
sub
jecxz
ja
sub
or
xchg
or
or
out
dec
aam
jbe
fmul
xchg
repnz
aas
jae
ficompl
dec
test
sbb
xor
lds
sbb
cmp
push
loope
sbb
push
xchg
movsl
or
mov
and
dec
mov
fs
or
scas
sub
popf
stc
int
push
mov
gs
lret
iret
push
shlb
pop
sub
in
xor
stos
addl
xlat
xchg
dec
cmp
mov
jb
or
lods
sub
popa
repnz
movb
mov
adc
out
mov
lea
adc
jp
aaa
add
inc
push
sub
cwtl
push
out
xchg
xchg
pop
test
fldt
clc
push
ljmp
pop
xchg
add
fnstsw
in
xor
inc
push
cmpsl
xchg
aas
dec
fsubp
movsl
lds
and
repz
mov
sub
movl
addr16
loop
mov
vmwrite
xor
pop
push
push
sub
mov
js
xor
les
and
pushf
faddl
and
int
dec
repz
pushf
pop
cmpsl
push
hlt
stc
pop
mov
jle
daa
test
inc
pop
icebp
sub
repz
adc
fnstcw
xor
mov
mov
lcall
outsl
loopne
test
rol
out
xor
arpl
or
add
rcrb
in
mov
daa
add
sbb
push
inc
inc
sbb
push
fcompp
inc
clc
jp
cmp
in
lock
inc
int
pop
cltd
cld
test
or
or
and
jns
push
sbb
outsb
sub
popf
and
leave
push
test
enter
jecxz
lods
fs
push
push
lcallw
enter
movsl
ficompl
mov
shl
repz
or
mov
add
cmp
push
jl
aam
adcb
shlb
std
fidivrs
push
bound
xor
ss
int3
xchg
inc
jl
hlt
cmp
xor
push
cmpsl
inc
cld
jl
xor
adcl
mov
push
popf
jle
nop
insb
push
ds
sub
mov
inc
mov
out
dec
inc
fnstsw
mov
mov
jns
mov
hlt
js
bnd
out
mov
call
xor
sbb
repz
cmpsl
sti
jns
push
cmp
adc
sub
sti
xor
cmc
inc
lcall
jmp
jae
add
scas
repz
sti
mov
xchg
jb
and
ror
or
repz
popf
insb
push
fisttps
xchg
ror
mov
jg
mov
imul
add
out
jns
jecxz
pop
std
shl
fildll
adc
fwait
sbb
popa
jl
out
jp
movsb
fsubr
xor
arpl
out
rclb
sub
pop
pusha
call
jns
xlat
sti
push
arpl
enter
faddl
enter
into
pop
sub
cmpsb
out
out
inc
cmc
xchg
add
arpl
mov
in
jmp
push
addb
dec
int
or
jb
jae
mov
sub
or
ret
and
icebp
or
stos
je
push
mov
test
dec
rcl
clc
add
repz
jnp
inc
into
pusha
add
and
ljmp
pushf
xchg
push
adc
cmp
ja
inc
sti
and
je
clc
daa
sahf
inc
pop
js
and
dec
icebp
pop
subl
fs
xchg
scas
xchg
jle
xor
pop
mov
jne
lret
movsl
push
shlb
es
pop
int
jno
mov
popa
ret
pushf
rorb
cmp
add
lret
stos
adc
ds
adc
pop
push
ror
inc
pop
xchg
sbb
jp
inc
adc
leave
pop
lcall
rcl
ss
cmp
fwait
push
mov
dec
mov
insl
mov
cmp
add
mov
mov
mov
leave
mov
cltd
push
sub
idivb
addl
rorb
lea
loope
mov
ja
fwait
cli
daa
push
std
out
notl
jne
sub
cmpsb
inc
cs
das
nop
pop
push
mov
movsl
sti
repnz
ret
or
clc
fnstcw
jp
scas
orb
or
sbb
dec
push
xchg
lcall
outsl
scas
pushf
mov
loope
in
add
add
inc
aam
sub
push
fbstp
arpl
xchg
xchg
adc
add
sbb
gs
andl
mov
in
inc
bound
imul
aam
out
filds
cmc
rcrl
mov
int3
push
lock
pop
xchg
int3
inc
movsl
sbb
xor
testb
adc
xchg
mov
sub
ja
scas
sbb
push
pop
std
xor
iret
xchg
pop
into
pop
mov
addr16
aas
push
inc
jecxz
mov
xor
add
mov
xor
sub
jle
and
test
in
cmpb
jae
daa
mov
iret
adc
xchg
leave
cmp
and
and
mov
mov
call
in
mov
or
inc
push
das
or
mov
aaa
dec
xchg
insl
ret
lock
add
mov
cmp
inc
adc
mov
insb
add
or
or
xchg
mov
mov
imul
popa
ret
mov
add
pop
fisubrs
inc
mov
mov
outsl
jmp
jg
xor
scas
lods
push
dec
push
xchg
in
sbb
lahf
fwait
int
and
testl
sbbl
std
mov
fistpll
adc
rclb
dec
jge
xchg
jl
shlb
mov
cmp
popf
pop
aaa
iret
ror
adc
test
xchg
ds
movsl
clc
mov
ret
arpl
inc
xlat
inc
cmp
xchg
int
loop
cmp
push
test
out
ja
lret
notl
or
or
stos
mov
aad
mov
pop
lds
cmp
aas
cltd
cld
mov
decb
xchg
dec
dec
and
xchg
inc
in
sahf
pop
pop
jl
cmpl
cmp
mov
in
dec
pushf
pop
mov
push
movsl
mov
cmc
out
dec
sub
push
jbe
les
repnz
sub
xchg
push
jp
push
daa
xorb
mov
jmp
mov
pusha
aam
and
push
pushf
jbe
dec
xor
fisttpll
adc
dec
xor
xor
mov
pop
pop
sbb
sub
mov
cmp
xor
outsl
push
imul
icebp
out
enter
push
into
stos
movsl
in
xchg
iret
mov
add
cmp
inc
cmpsb
push
dec
addb
fildl
or
xchg
gs
jne
fisubrs
adc
stc
data16
cmp
imul
sahf
mov
cmc
sub
test
out
jmp
mov
js,pt
jecxz
addl
in
rcll
mov
jne
pop
mov
stc
jecxz
sub
sub
jge
outsb
idivb
leave
into
push
jno
xchg
or
mov
test
imul
outsl
jne
xlat
test
mov
lcallw
pop
sbb
sub
repz
inc
jmp
inc
sub
in
inc
inc
repnz
es
addl
sub
dec
gs
hlt
out
ja
or
jbe
add
mov
mov
ret
push
push
roll
mov
call
pop
xchg
leave
inc
mov
dec
jo
fwait
sti
pop
dec
xor
rorl
jne
and
lcall
addr16
adc
lret
push
mov
jl
pop
daa
push
out
or
push
cmc
pop
shll
and
dec
sub
mov
out
mov
mov
and
sti
cmc
insb
lock
sbb
es
adc
adc
sti
xchg
rcr
pop
mov
psubusb
in
sub
out
repnz
fisttps
push
mov
repz
out
mov
lods
jl
dec
repnz
or
iret
pop
js
movsb
xor
leave
inc
loop
pop
addr16
push
xchg
decl
sub
push
push
xorl
subps
out
int
ljmp
cli
ljmp
add
cld
or
jle
push
idivb
push
movsb
mov
scas
rclb
stos
sub
xchg
jmp
mov
jle
jne
in
iret
mov
lods
js
cmp
out
repnz
jno
and
jecxz
pop
or
out
test
push
fimull
xlat
es
pmullw
lds
mov
test
inc
dec
cmp
pop
dec
mov
add
je
pop
fcomps
mov
aaa
jne
fcom
adc
repz
dec
fidivl
mov
xchg
mov
mov
pop
mov
xlat
int3
aad
mov
jecxz
push
cmp
sbb
or
fs
dec
cwtl
lods
mov
rorl
or
lea
push
in
fcmove
test
and
mov
ljmp
cmc
xor
jne
in
rcrb
xor
into
cli
pop
mov
cmp
dec
cmpsb
loop
add
mov
push
nop
enter
push
jecxz
inc
fadds
pop
xchg
fistl
cmc
out
sub
mov
cltd
test
iret
cld
cli
adc
test
inc
adc
out
xor
negl
out
cmc
ficomps
out
cmp
in
or
adc
jge
pushf
and
pop
daa
xor
test
xor
or
adc
push
mov
or
inc
jg
fs
cli
stos
jmp
xchg
dec
jmp
cltd
xor
mov
pop
hlt
push
pop
lret
mov
clc
sbb
pop
loope
jb
scas
mov
xchg
dec
mov
xchg
fistl
repz
leave
adc
xor
cmc
mov
fdivrl
adc
and
add
push
jno
jbe
or
popa
push
mov
adc
mov
xor
jne
sarb
xor
jno
jnp
dec
and
mov
rcll
lea
sub
js
mov
mov
and
std
jle
gs
js
pop
pop
pop
lahf
lods
mov
jecxz
push
sbb
push
stos
xchg
add
pop
jbe
stc
gs
sbb
aad
insb
cmp
mov
or
or
rclb
xchg
loop
pop
sub
xchg
push
xchg
fildl
push
cmp
inc
pop
js
aam
fdivr
rolb
lcall
fwait
or
adc
jb
cmp
ja,pt
dec
sbb
lods
push
pop
aas
inc
pop
out
js
les
push
inc
scas
enter
push
add
je
dec
sbb
jne
lahf
cmp
clc
dec
xchg
xchg
icebp
int3
std
lahf
sub
adc
push
jle
aam
push
add
xor
push
in
mov
mov
jae
inc
mull
out
lea
sbb
jae
pop
pop
xchg
sub
cwtl
or
push
jmp
hlt
jl
jne
push
ljmp
into
icebp
cmp
lret
mov
shrl
shlb
cmp
jbe
and
xchg
fisubl
mov
test
sbb
xchg
and
push
ds
call
iret
out
das
add
add
xor
xchg
mov
js
mov
arpl
sbb
incl
xchg
call
pop
fisttps
fwait
add
setb
in
push
movb
in
bound
arpl
aam
xchg
jae
jbe
mov
mov
div
sbb
inc
and
insb
shl
cs
xor
push
jecxz
pop
adc
fcmovnbe
ret
in
cltd
mov
jg
jp
jecxz
mov
shlb
sarb
sub
push
and
push
pusha
sbb
pushf
mov
imul
sahf
iret
shlb
add
out
fisttpl
push
and
sub
rcrb
push
test
int
mov
fdiv
fnstsw
call
dec
sbb
push
sub
mov
jmp
stos
xor
lods
cmp
pop
pop
repz
inc
movsl
mov
pop
lods
and
mov
bnd
jge
jno
lods
jg
pop
shll
shll
add
or
mov
lods
rcrl
mov
push
mov
out
fiadds
lret
pop
fisttpll
jp
adc
adc
mov
aam
sbb
fidivl
sbb
mov
das
inc
xlat
lock
call
icebp
push
add
scas
fsts
sub
push
pop
loope
fistps
mov
fisubs
add
pop
add
cmp
movsb
add
adc
or
cmp
scas
insb
push
test
lods
test
mov
push
je
cwtl
iret
popa
cmp
mov
mov
sbb
fistps
xor
rorb
jge
fists
daa
or
mov
cmp
cmp
lahf
mov
dec
push
or
and
push
int
loope
mov
xchg
xchg
ja
out
fimuls
insl
pushf
nop
mov
repnz
cmc
ret
adc
sbb
cmp
fs
popa
xchg
jge
mov
pop
loopne
cmp
push
loop
test
jp
jl
movsb
and
rcl
jbe
nop
cmpsl
popa
add
test
push
mov
pop
jae
pushl
test
adc
sbb
jl
pop
cmpsl
jg
xchg
dec
jnp
pop
aaa
inc
add
dec
and
pushf
jg
cli
mov
dec
and
sbb
sub
inc
add
rcl
aaa
dec
test
push
adc
sub
bswap
andb
cmp
aaa
push
adc
repz
sbb
scas
in
cmp
orb
jne
sbb
adc
scas
cmp
mov
jne
lock
dec
int3
and
pop
mov
push
cld
out
inc
lcall
mul
scas
into
jne
repz
pusha
xor
scas
inc
adc
lea
inc
pop
enter
nop
push
out
jae
scas
xor
rorb
aas
and
dec
mov
mov
bound
pushf
xlat
out
es
and
leave
aaa
loop
pop
scas
out
ja
xor
imul
mov
cltd
scas
dec
inc
int3
fdiv
pop
or
adc
gs
sahf
mov
jbe
dec
xchg
gs
jbe
cmp
fistps
mov
scas
mov
mov
jp
mov
insl
dec
repz
or
imul
cmp
xchg
adc
jp
movsb
daa
sub
je
xlat
ds
push
cld
insb
xchg
lret
lods
and
data16
loopne
shrl
loop
push
xchg
sbb
mov
cmp
cli
mov
xchg
push
repnz
addr16
loope
pextrw
lods
cmpsb
dec
js
cmp
lods
testl
lods
push
adc
jecxz
test
out
imul
jne
das
jecxz
pop
lret
and
stos
std
fistl
outsb
je
xchg
adc
test
les
jo
testb
inc
mov
ja
mov
fs
fsubr
inc
int
mov
inc
push
je
pop
imul
aaa
in
add
xchg
jp
dec
stos
mov
sti
xchg
pop
std
inc
add
push
sti
jl
addb
lods
mov
fiaddl
and
lret
lea
je
mov
or
push
ljmp
ja
sahf
inc
push
or
sub
mov
aas
sub
jb
sub
out
and
xor
pop
mov
cmp
sar
sbb
repz
push
pop
dec
cmp
cltd
lahf
push
xorl
pop
cmpsb
test
dec
loopne
sub
mov
and
inc
dec
push
rorl
push
insb
and
movsl
orl
das
jae
es
out
in
adc
mov
and
test
cmpsb
xchg
pusha
mov
mov
stc
out
lahf
sbb
mov
mov
and
pmulhuw
dec
xchg
bound
int3
mov
add
push
pop
or
loop
lock
negl
add
inc
imul
divl
lods
cmp
jns
enter
sahf
bt
out
fldl
jecxz
shll
ret
push
sbb
add
inc
aad
bound
rcrl
lcall
mov
cmp
xchg
cmp
dec
inc
xor
pop
leave
sub
jecxz
stos
pop
push
dec
mov
or
mov
int
out
jl
inc
sbb
fcompl
adc
cltd
pop
mov
loope
loope
loop
xlat
dec
cmp
xchg
repz
loope
xlat
jno
aaa
es
outsl
int3
inc
inc
daa
pop
lods
dec
imul
dec
clc
dec
add
outsl
cmc
dec
cmpsb
pop
fldl
jg
loope
ljmp
adc
out
or
adc
enter
movsb
loope
filds
test
add
test
gs
js
jg
mov
sbb
jg
inc
loop
fs
cmp
das
inc
jne
rcr
cmp
loopne
stos
dec
aad
xor
push
nop
out
sti
push
daa
imul
jg
jbe
or
movl
inc
mov
ds
cmpsl
sbb
clc
out
ror
sub
decb
xchg
push
testl
or
cmp
cwtl
lcall
adc
cmp
pop
lods
int3
cmp
mov
xor
pushf
adc
sbb
and
add
lahf
jl
lds
shll
mov
jo
loop
inc
lods
ret
xchg
in
outsl
outsl
or
sub
negl
popa
push
js
repz
movsl
or
fisubrs
xchg
pop
mov
cmc
sbb
add
inc
add
jbe
icebp
test
jns,pt
fsubrl
dec
push
mov
inc
xor
mov
cltd
leave
stc
dec
pop
andl
jo
ret
lcall
cmp
or
pop
inc
mov
cltd
addl
adc
rclb
push
xor
int3
out
fmul
xlat
sti
jnp
into
inc
imul
inc
pushf
addr16
lods
jnp
mov
or
stc
cs
nop
outsb
sarb
out
test
mov
sub
push
inc
sbb
jecxz
mov
test
pcmpgtd
push
aam
outsl
mov
xchg
gs
ret
sub
gs
xchg
sub
ficompl
aam
iret
xchg
jae
mov
shll
cltd
xchg
pop
gs
in
ljmp
cmp
popa
dec
pushf
cmpsb
add
clc
jp
push
or
lcall
out
push
mov
or
mov
xchg
and
sti
jae
sarl
es
in
mov
mov
adc
mov
stos
xchg
fadds
mov
sub
cmp
cltd
daa
push
mov
sbb
dec
in
sbb
loopne
mov
and
bound
and
pop
sub
mov
pop
ret
inc
pop
pop
fwait
pop
push
jne
out
lea
xor
adc
or
push
shr
fsubl
insl
push
data16
lock
addr16
mov
ds
je
jnp
or
insl
jl
sbb
bound
lret
pop
aad
sbb
sub
lods
jae
mov
scas
jg
dec
divb
mov
xchg
pop
sbb
aas
xchg
push
jno
pusha
xchg
cmpsb
ret
add
out
mov
jae
adc
mov
jle
sub
ficoml
rolb
lods
xchg
adc
jmp
mov
lret
jmp
mov
lret
das
jmp
xlat
adc
in
in
stc
scas
pusha
adc
fsubs
jle
mov
gs
sarl
sub
or
aad
cld
push
inc
add
mov
out
sub
ret
mov
icebp
sub
adc
add
and
clc
or
shll
mov
dec
ds
clc
jmp
lea
adc
rol
push
push
xor
sub
cmp
sahf
lea
jbe
into
das
add
mov
and
jmp
iret
jl
sub
adc
adc
dec
mov
adc
jbe
sbb
int3
js
dec
mov
fistps
negb
out
bound
mov
insb
jb
shlb
or
mov
push
inc
pop
cltd
cwtl
jno
xor
cmpsl
push
jle
mov
dec
pushf
or
imul
dec
insl
cltd
push
inc
lock
sahf
lods
insl
mov
in
aaa
jae
nop
flds
sbb
jg
arpl
xchg
mov
mov
xchg
icebp
xlat
imul
mov
ds
rcrl
out
rcrl
add
inc
and
cli
enter
mov
dec
and
jae
fnsave
jge
mov
daa
in
mov
test
mov
jns
scas
loop
lock
mov
gs
enter
mov
mov
inc
inc
mov
test
ja
mov
mov
dec
sbb
in
mov
cltd
in
dec
jns
inc
daa
push
jne
push
scas
mov
adc
fs
inc
in
outsl
gs
dec
mov
mov
movsl
loop
imul
fiaddl
ret
xchg
adc
jns
out
ret
enter
fs
push
ret
and
dec
add
cmpsb
mov
mov
lods
fs
daa
mov
mov
movsl
das
xchg
mov
pop
push
sub
mov
faddp
testb
sub
in
xorb
inc
sbb
std
sub
iret
jge
xchg
lret
inc
inc
sbb
sub
mov
pop
into
addr16
sub
lods
aaa
sarb
jns
aam
aaa
push
out
cmp
aad
repz
xchg
push
push
int
mov
push
mov
or
cmp
sbb
ret
cmp
fdivl
adc
sahf
xchg
stc
test
push
inc
pop
sub
mov
push
test
push
dec
adc
pop
cmp
in
sub
add
enter
push
scas
in
in
jle
mov
or
sbb
ret
mov
cmp
cmpsl
sbb
or
outsl
pop
add
outsb
lea
idivb
adc
leave
mov
pop
adc
cmp
subb
xchg
push
shlb
cmpb
insl
mov
mov
enter
call
inc
std
lahf
dec
inc
loopne
push
inc
jg
lret
scas
push
cmpsl
pop
xor
out
cld
add
lahf
inc
pop
push
into
add
das
jne
pop
shl
adc
and
popa
je
cs
call
scas
sub
pop
fidivrs
imul
jle
fcmovnbe
sub
pop
add
xlat
mov
mov
sub
negl
cli
jnp
mov
mov
pop
mov
sarl
cld
jmp
aad
pop
add
lahf
pop
ret
jb
ja
xchg
inc
imul
lret
sbb
aam
leave
jb
xlat
xchg
mov
pop
mov
iret
and
mov
mov
in
dec
test
or
test
bound
sbb
jae
cmp
lsl
jg
incl
ret
lds
fwait
jge
push
ja
jno
dec
sbb
int
adc
mov
pop
mov
adc
out
scas
lods
int3
and
jns
cmp
cmp
std
cmp
int3
in
hlt
xchg
lahf
fisubs
push
stos
imul
mov
xchg
bound
push
pop
sbb
adc
popa
scas
stos
add
bts
ss
xchg
fsubl
cmc
cli
rolb
adc
adc
cmp
leave
add
not
movsl
cs
hlt
data16
push
cld
aam
sarl
fcoml
jge
jnp
dec
jns
popa
loope
xorl
or
mov
mov
shlb
roll
ucomiss
push
cmovne
add
test
jns
in
dec
pop
mov
out
dec
pop
mov
jg
xchg
cs
lock
loope
or
cli
fadd
xlat
shr
aaa
and
outsb
mov
xor
mov
push
jbe
or
lods
test
inc
sbb
xor
jb
push
jae
loop
inc
pop
pop
fwait
imul
loope
add
lds
inc
mov
cmp
sub
movsb
adc
jns
les
add
cs
mov
loopne
mov
jae
adc
stos
xchg
cmpb
fcoml
stc
ret
aaa
dec
in
push
pop
inc
jmp
push
cmc
xchg
adc
jo
pop
cmc
test
sbb
leave
jecxz
pop
fwait
call
fcomps
push
test
movsb
test
inc
sub
in
cmpsl
js
int
scas
adc
in
lret
and
mov
cs
clc
mov
adc
add
mov
xor
mov
mov
cmpsb
std
push
sub
push
mov
dec
inc
cmc
jge
xor
pop
into
add
scas
xor
adc
shlb
iret
dec
pop
fmuls
cmc
and
mov
lcall
fildl
xor
sbb
iret
jno
mov
jnp
sahf
cmp
lods
inc
nop
daa
add
stos
arpl
test
outsl
pop
or
stos
jb
jle
in
sub
sbb
insl
das
and
cmp
daa
les
cmc
sbbb
and
sub
loopne
push
mov
in
ja
add
imul
hlt
fs
xchg
std
sbb
xor
aas
sub
dec
and
cli
mov
imul
cmpsb
dec
movsl
call
jp
mov
sub
rorl
cmp
jg
subl
add
adc
imul
out
mov
push
inc
dec
jp
mov
xor
jbe
add
aaa
jp
mov
fsubrs
nop
xchg
cmp
lea
adc
push
mov
cmpsb
loope
add
dec
xchg
push
adc
out
push
sbb
bound
insl
movsl
xor
dec
push
scas
int
pushf
add
inc
pop
pop
sarb
xchg
xchg
cmc
jg
jle
and
sbb
shlb
int3
das
sbb
cmp
mov
out
scas
push
xchg
aas
pop
popf
xor
mov
inc
jge
mov
sahf
int
pop
or
cmp
jno
inc
rorb
jb
outsl
xor
rorl
dec
pop
icebp
hlt
add
fcmovnu
loope
lcall
ss
movsl
lret
or
sbb
andb
insl
sub
add
cli
sti
iret
cmp
cmp
jmp
sahf
test
sub
dec
inc
cmp
shl
loope
out
lds
dec
lods
push
cmp
std
add
push
mov
dec
movl
cmpsb
inc
jmp
repnz
inc
in
inc
sbb
cmpsb
cli
pop
stos
bound
mov
add
jo
fldcw
daa
fwait
in
fsubrl
scas
inc
pop
loop
xchg
fsubrp
mov
or
inc
jg
xor
push
lea
fisttpll
gs
mov
enter
sbb
bound
push
add
ret
mov
inc
daa
cmp
in
lret
jmp
js
lods
cmovp
leave
lret
xor
inc
wrmsr
push
les
jo
push
mov
dec
popa
lea
mov
xor
cmp
inc
aad
lods
cmp
mov
xchg
pusha
sub
xor
int
subb
daa
mov
mov
mov
movsb
xor
loopne
cld
stos
aas
add
sbb
or
xchg
loopne
cmp
stos
mov
jmp
jl
sbb
iret
mov
cmp
std
int3
dec
cmp
and
adc
mov
cld
shlb
sbb
movsl
sub
pop
mov
adcl
mov
loop
rorb
or
jb
fiadds
lea
je
notb
iret
push
sub
mov
repz
inc
sub
jnp
adc
xchg
test
add
pushf
call
or
outsb
mov
pop
and
xchg
clc
leave
ret
std
js
jp
mov
pushf
ss
das
imul
test
out
xchg
mov
lea
add
setbe
cmp
push
inc
cwtl
xchg
xor
mov
out
sbb
outsb
or
fucomip
xchg
dec
xor
pop
outsl
cltd
sti
sub
and
inc
cld
sti
and
out
cmp
jg
dec
mov
test
push
shl
mov
cmp
dec
fcmovnbe
arpl
daa
out
fildl
xchg
incl
xchg
xor
fisttpl
add
sub
push
mov
pusha
out
xchg
neg
negl
mov
cld
sbb
mov
sub
pop
lahf
xchg
enter
xchg
mov
data16
cmp
mov
ss
mov
lock
pop
inc
lret
lret
int3
cwtl
jb
test
xor
jmp
lods
xor
mov
fbld
pusha
das
push
mov
pop
pop
cwtl
int
and
out
rcrl
sub
rolb
sarb
cwtl
cmp
jl
cmp
leave
mov
ds
cli
fucomip
ja
test
sub
mov
add
jo
into
jo
pop
xor
mov
fistpl
mov
jp
adc
imul
pop
cld
adcl
sbb
test
sub
lds
xlat
or
pop
shrb
inc
cmp
out
push
sbb
inc
sub
cmp
in
sub
adc
leave
xchg
popf
pop
das
mov
cld
movsl
shl
inc
push
and
imul
cmc
xor
jb
mov
add
arpl
mov
pop
sub
xchg
stos
popa
enter
fs
pop
pop
adc
push
je
repz
stc
test
or
push
push
shlb
test
xor
xchg
mov
inc
data16
lds
xchg
cs
int
push
cwtl
sbb
ret
lret
mov
or
nop
sarl
pop
das
inc
mov
dec
mov
mov
xchg
pop
out
jne
sub
repnz
sbb
aad
mov
and
cli
mov
cmpsb
cmp
dec
shlb
cmp
lea
add
shlb
mov
cwtl
cltd
mov
jns
lods
xchg
mov
cmp
mov
dec
nop
fiaddl
xchg
sbb
jae
aad
xor
mov
std
int3
xor
shl
or
adc
add
loopne
or
mov
lret
sub
push
arpl
shrb
in
arpl
and
push
bnd
xchg
mov
ret
jecxz
lods
repz
loop
enter
xchg
adc
mov
fdivrs
xchg
sahf
adc
dec
adc
mov
addr16
add
lods
lods
lock
push
push
adc
mov
ljmp
push
nop
daa
sub
call
xchg
cmp
aad
jns
ljmp
jg
mov
mov
cmc
fistl
jp
jge
mov
xchg
imul
lcall
mov
cltd
add
lods
inc
gs
pop
cwtl
insb
test
dec
push
xchg
sbb
sbb
xor
mov
xor
ret
cmp
scas
push
rol
add
cltd
sbb
xchg
sub
jmp
lahf
movsb
stos
mov
jmp
xchg
std
lret
jne
outsl
push
shlb
inc
fidivs
imul
jmp
mov
or
mov
adc
scas
jl
inc
aas
cs
js
enter
or
sbb
mov
mov
mov
iret
les
fldt
lds
pop
pop
lea
fidivs
xchg
out
fs
pop
jno
xor
in
jmp
mov
mov
test
inc
mov
iret
xchg
imul
lret
jbe
adc
cmp
fildll
popa
je
mov
pop
cmp
cmp
insl
shlb
push
inc
int3
js
push
mov
xchg
push
repz
xlat
call
cld
shll
push
outsl
jne
hlt
xor
or
sub
cli
rcl
stc
mov
jge
jo
xchg
fsubrl
in
add
jbe
xor
xlat
mov
or
mulb
out
pusha
pop
stc
repnz
mov
sub
leave
sbb
lcall
pop
inc
in
and
adc
mov
pop
std
pop
lods
or
daa
mov
fucom
sub
addl
popa
jns
frstor
inc
and
sti
test
xlat
mov
add
mov
add
xor
sub
and
and
mov
and
rol
inc
mov
and
test
xchg
scas
or
push
jbe
push
addl
jp
cmp
push
out
mov
cwtl
sub
dec
fsub
stos
outsl
lds
stc
sahf
dec
scas
shrl
xchg
pop
mov
aaa
jecxz
mov
mov
mov
sahf
adc
rorb
mov
mov
mov
icebp
sbb
aam
sbb
and
test
loope
cwtl
jb
xchg
xchg
fs
aas
daa
incb
pop
dec
mov
incb
push
xorps
mov
fsubrl
test
movsb
mov
sub
andl
cld
shrb
ja
imul
xor
adc
mov
js
dec
push
ret
cli
pop
cmp
sbb
out
jmp
repz
mov
lods
fldl
mov
jbe
scas
jns
push
adcb
iret
insb
aam
add
mov
adc
push
mov
sarl
or
pop
mov
xchg
push
xor
mov
out
mov
inc
and
enter
js
aad
mov
adc
insb
xchg
add
add
gs
inc
imulb
jmp
or
xchg
loop
add
pop
movsl
iret
mov
repnz
pusha
inc
mov
in
push
std
or
xor
xor
push
pop
pop
dec
sub
add
jmp
in
int3
xchg
js
loope
push
pop
negl
pop
xchg
pop
cmp
mov
mov
clc
sub
sbb
add
sbb
scas
cli
ficompl
cmp
push
cmp
add
les
fiadds
push
ja
sub
dec
enter
andb
push
push
dec
adc
xchg
jno
xor
mov
cmp
pop
jno
adc
mov
scas
mov
push
ret
cli
adc
stos
xor
shlb
mov
push
mov
ja
jb
fmull
add
mov
pop
loop
inc
aad
adc
int3
scas
jbe
sbb
and
push
xchg
subl
inc
jnp
add
dec
test
add
and
jg
pop
mov
inc
sbbl
cmp
arpl
sub
mov
lock
cmp
sbb
sub
fwait
push
lret
dec
pop
shrl
stc
hlt
fs
leave
aaa
pushf
and
xchg
jbe
mov
test
pop
add
loopne
sbb
loopne
ds
dec
rol
test
int3
sub
lds
in
arpl
jbe
hlt
xchg
imul
inc
jecxz
mov
leave
dec
sbb
jp
lock
and
data16
pop
movsl
jns
mov
jg
xor
push
in
stos
lret
cmp
mov
add
or
cld
inc
and
inc
mov
sti
add
push
in
es
xchg
or
mov
gs
stos
pushf
stos
out
push
sub
jp
jle
imul
push
sub
jb
cmc
push
hlt
mov
sbb
test
sbbl
es
or
sub
cmpb
xchg
icebp
mov
dec
mov
xchg
and
insl
jmp
sahf
cs
pop
push
lahf
into
shll
mov
popa
cmp
icebp
mov
jl
dec
mov
cltd
cmpsl
adc
push
or
stc
sub
inc
xchg
push
push
popf
xor
pushf
mov
pop
push
gs
sbb
insb
add
jecxz
jge
cld
in
mov
pusha
pop
xchg
xchg
sub
loope
sbb
cmp
flds
cmc
mov
arpl
and
dec
mov
pop
and
aad
fdivs
pop
xor
jmp
pop
xchg
mov
out
bound
sbb
add
repz
push
std
mov
fwait
jae
mov
jbe
repnz
fldl
es
push
lock
inc
add
jbe
inc
sti
dec
jmp
cmpsb
test
bound
es
or
jmp
test
push
cmp
pop
xor
cmp
mov
jp
in
shrb
and
and
pop
outsl
popa
xchg
inc
sub
ljmp
hlt
or
cmp
pop
cmp
push
push
scas
dec
movsl
inc
cmp
pop
icebp
mov
sub
fadds
pop
inc
out
push
leave
add
rorb
rol
lret
cmp
lds
popf
push
jns
lahf
and
pushf
sbb
addr16
push
sahf
xchg
outsl
fnstsw
xchg
mov
sbb
das
insl
push
add
fldenv
gs
ljmp
inc
imul
imul
pop
mov
shlb
shrb
popf
pop
in
insb
cmp
pop
outsb
movsl
lock
dec
mov
mov
add
push
dec
cmp
mov
stos
add
xchg
sub
cld
ror
mov
in
les
repnz
and
mov
push
sub
and
divl
inc
divl
stc
pop
or
pop
in
js
pop
mov
pop
mov
stc
or
xchg
sbb
push
xchg
sub
testb
js
repz
stc
test
or
or
cld
cmpsl
out
insb
inc
lcall
pop
dec
fisubl
jmp
js
sahf
xchg
int
icebp
pop
and
dec
mov
popa
mov
repnz
jmp
jg
add
pop
sbb
imul
fisubl
sub
push
lock
jne
adc
xor
sbb
in
aas
sub
push
add
es
scas
shl
loop
xor
in
bnd
mov
pushl
jb
and
in
jp
jbe
pusha
xor
and
pop
test
push
mov
jne
cmpsb
lret
pop
mov
mov
mov
mov
rcrl
cli
mov
rorl
push
pop
adc
xchg
ficompl
pop
xchg
mov
xor
add
shlb
fsubrl
jmp
mov
ja
adc
adc
mov
jg
sub
sbb
dec
nop
or
nop
mov
xchg
test
shl
pminsw
cwtl
pushf
leave
push
dec
pop
aad
cltd
lods
sbb
cmpsl
pushf
and
imul
cmpsl
mov
xchg
xchg
mov
mov
lock
cmc
xchg
addr16
into
sub
lods
aam
lret
hlt
push
fldcw
and
adc
clc
push
dec
inc
and
loop
adc
jne
or
int3
pop
ljmp
sbb
mov
sub
daa
mov
jno
addl
push
adcl
add
add
imul
in
pop
and
dec
add
mov
cwtl
xchg
mov
pusha
and
sbb
mov
jbe
adc
cwtl
push
sbb
mov
sti
add
divl
pop
mov
lods
test
call
scas
xchg
icebp
insl
or
insl
test
lcall
subl
sub
mov
in
sub
sbb
lret
cwtl
movsb
adc
xor
loopne
pop
adc
mov
sub
add
ja
sub
xchg
mov
movsb
mov
mov
test
jbe
fnsave
aas
popa
push
jnp
stc
rcll
loope
mov
xchg
cltd
stos
mov
int
sub
mov
mov
add
je
adc
outsl
adc
push
lock
xor
clc
std
or
xor
dec
inc
in
or
push
add
adc
addr16
xchg
and
cmc
mov
jns
push
insl
in
das
je
add
test
push
iret
jo
andb
fildl
scas
pusha
cmpl
in
lahf
in
mov
jp
in
andw
mov
repnz
stos
push
jb
mov
xchg
inc
icebp
xor
loop
cmc
and
aam
jo
inc
jecxz
mov
fcoml
aam
scas
mov
popf
int3
cmp
jnp
std
mov
xchg
subb
push
sti
clc
lcall
cs
adc
std
xor
mov
nop
or
xchg
hlt
mov
mov
push
push
push
lods
pushf
push
adc
xlat
out
sbb
jge
aaa
pop
push
dec
test
dec
fmull
das
mov
push
sbb
xchg
mov
rclb
popf
sbb
into
int
arpl
sub
inc
xchg
push
cmp
addr16
mov
cmpsl
add
pop
insb
divl
xchg
pop
dec
xchg
dec
push
cmpsb
cli
jg
sub
into
movsb
and
mov
pop
cmp
xchg
mov
lock
xchg
push
push
je
xchg
les
cmp
inc
stos
les
mov
dec
rorb
cmp
pop
jmp
push
push
cmpsb
inc
pushf
sub
cmp
rclb
lret
outsl
movsb
fs
xchg
cs
cmp
inc
mov
pop
fucomip
push
pop
arpl
loopne
sti
dec
dec
mov
jae
jo
mov
idivb
sub
push
pop
jnp
inc
filds
aad
cmp
adc
sbb
imul
test
movsb
sti
mov
mov
mov
addr16
or
repnz
xchg
icebp
cmp
test
in
ficomps
jecxz
in
aad
jnp
adc
xchg
add
js
push
orb
sbb
adcl
dec
lods
jnp
aam
xchg
sti
bound
imul
sub
xchg
mov
adc
xor
mov
fidivrs
jo
xor
mul
inc
adc
mov
int3
fdivrl
inc
jge
adc
push
add
pushf
test
jge
mov
cmp
mov
aaa
jle
subl
stos
outsb
jp
ds
jne
cmp
pop
pop
pop
in
jmp
ret
mov
xor
mov
repz
dec
in
jo
mov
call
int
inc
inc
aam
add
cmpb
inc
and
lret
jns
lahf
mov
les
js
clc
pop
fcompl
and
jae
pminsw
add
mov
mov
dec
arpl
fldt
jecxz
loopne
sbb
movsl
pushf
add
sub
ficoms
scas
ja
cli
sbb
xchg
sub
xchg
stc
mov
pop
cmpsb
mov
mov
mov
daa
mov
pop
mov
sub
stc
inc
jp
xchg
clc
int3
push
arpl
jge
xchg
stc
out
lahf
mov
sahf
adc
gs
imull
sbbb
mov
lcall
jmp
pop
stc
adc
rolb
mov
cmp
mov
push
jp
or
sahf
inc
adc
mov
sbb
imul
cmp
pop
test
pop
sbb
movsl
fdivl
add
fadd
dec
pop
adc
xlat
lahf
data16
insl
jnp
es
addr16
xchg
mov
sbb
pop
rol
daa
xor
mov
mov
cmovne
ret
scas
inc
lret
out
in
xchg
fcmovu
inc
out
jns
pop
inc
mov
enter
xchg
jns
in
mov
xor
sub
es
cs
xor
xor
into
pop
mov
mov
mov
xchg
mov
roll
lret
mov
cmp
sbb
mov
add
adc
pop
cwtl
adc
add
and
insb
or
sub
enter
jecxz
fidivl
jmp
int
xlat
outsb
cmp
xchg
push
bound
pop
or
jg
ds
dec
subl
or
sahf
cmp
icebp
int
rcrl
mov
push
fiaddl
dec
push
sbb
scas
adc
repnz
iret
notl
xchg
inc
mov
sti
dec
stos
out
mov
sub
sti
mov
out
cmp
push
lret
mov
and
and
mov
lahf
mov
add
sub
insb
jbe
pop
adc
popf
push
xlat
fbstp
mov
pop
sub
in
and
xchg
xchg
sti
lret
es
mov
adc
icebp
adc
gs
inc
lret
sub
xchg
mov
aam
pop
mov
jge
inc
mov
sbb
imul
pop
std
fildll
loop
adc
test
xchg
push
gs
fwait
cmp
lret
mov
xchg
xor
sahf
repnz
hlt
loope
rcr
stc
xchg
les
pop
xchg
loopne
xchg
sbb
push
stos
sub
and
int3
lds
cli
sbb
test
pop
dec
test
push
pop
xchg
dec
fbld
fdiv
shrb
pop
ss
push
loope
pop
mov
sbb
mov
sub
cmc
inc
adc
aam
stos
mov
adc
mov
pop
and
icebp
jp
pop
and
sbb
cmp
adc
push
lret
sub
cltd
int3
shlb
dec
dec
xor
or
mov
sub
mov
mov
and
lods
fimull
or
jbe
xor
jl
cmp
push
fcompl
mov
pop
xor
pop
push
data16
pop
sbb
jnp
mov
lds
rcll
pop
fwait
add
fdiv
inc
ret
adc
jae
xor
movsl
jg
int3
mov
mov
outsl
stos
pop
incl
pop
cld
jns
into
lahf
mov
xchg
flds
out
clc
jp
addr16
les
and
inc
or
in
loopne
stc
jmp
sbb
scas
lods
xlat
lods
sbb
mov
adc
add
push
popa
inc
xchg
imul
adc
mov
jecxz
pop
js
add
mov
or
jle
lahf
adc
movsl
popf
inc
lea
shrl
out
adc
mov
test
shl
jl
mov
ret
in
fistpll
aam
pop
mov
fcomps
adc
sub
adc
clc
mov
or
cmp
and
cli
push
jmp
jne
mov
adc
sub
pushf
or
or
pop
push
push
stos
inc
pushf
dec
sub
mov
or
sbb
pop
and
mov
popf
mov
sbb
sbb
mov
cmp
mov
or
insb
jnp
pop
push
insl
sbb
add
stc
cmpsb
loopne
mov
inc
dec
inc
lods
not
lods
outsl
sar
je
xchg
arpl
in
mov
subb
add
divb
mov
xlat
mov
fs
decl
push
pop
adc
pop
xor
inc
fcmovu
mov
int3
subl
cmpsb
mov
stc
inc
loopne
xchg
out
xor
lcall
cmpl
pop
jbe
divb
call
je
mov
fnstsw
xor
cmp
js
pop
mov
or
fs
out
mull
test
xchg
cmpl
inc
sub
jecxz
scas
cmpsl
movsb
push
jae
push
dec
das
loop
add
and
pop
ficompl
cmp
push
mov
xchg
mov
xchg
mov
imull
push
cltd
outsb
inc
dec
pop
out
cs
xchg
lret
lahf
mov
sti
push
jb
insl
mov
and
pop
stc
mov
ja
stos
inc
js
cmp
sbb
mov
mov
xchg
addb
dec
jecxz
orb
xchg
xor
mov
xor
cmp
scas
mov
push
pop
push
mov
sub
lcall
int
mov
int
cwtl
lcall
add
cmp
mov
test
sbb
ljmp
fisubrl
testb
sbb
and
cmp
mov
adc
ss
mov
scas
mov
inc
mov
push
out
fdivrl
add
dec
jne,pt
inc
lret
mov
popl
fwait
scas
pusha
push
iret
and
cwtl
adc
sbb
jbe
mov
das
xchg
iret
pushf
adc
and
cmp
sbb
test
sub
push
xchg
lret
xchg
in
dec
loopne
push
addr16
inc
sbbl
pop
gs
mov
hlt
mov
popa
fs
fdivrl
jne
pop
pop
inc
adc
jnp
jb
push
lahf
pop
inc
adc
cmp
inc
pop
popa
jbe
sbb
fisubrs
in
imul
ret
cld
cmpsb
mov
adc
and
pop
adc
lea
mull
or
xor
xchg
dec
clc
leave
insb
inc
das
dec
fldcw
cld
gs
sub
mulb
lock
push
insl
jne
mov
movsl
out
out
movsb
sti
push
repz
sub
and
mov
sbb
mov
and
test
mov
mov
test
mov
cmc
push
sbb
mov
nop
adc
vshufps
jp
xchg
dec
add
inc
loope
push
mov
das
xchg
jecxz
push
inc
pop
into
stos
jb
leave
pop
pop
mov
aam
sbb
std
xor
or
test
movsl
test
in
inc
mov
mov
inc
cmpsb
adc
mov
mov
sbb
bound
push
mov
sbb
popf
pop
sub
rcl
jo
inc
cmp
mov
cmp
daa
xlat
xor
leave
scas
jecxz
cmp
out
adc
ss
push
dec
sub
push
daa
mov
aad
jmp
xlat
in
mov
adc
out
lret
push
xchg
jno
mulb
sbb
pop
ljmp
ljmp
outsb
mov
std
out
testb
lahf
fisubs
lret
rclb
dec
cwtl
xor
mov
push
inc
je
into
das
or
xchg
scas
and
loop
scas
push
fdivrl
int3
jecxz
mov
das
xchg
adc
xlat
rorb
push
adc
sbb
cmp
cmp
sub
daa
ja
dec
xchg
or
test
jge
ret
lods
pop
sti
cmp
and
sbb
and
inc
pop
and
sbb
jge
or
int
xor
sub
in
xor
movsb
loopne
xor
fnstenv
cmpsl
sti
mov
xchg
jmp
add
push
cli
enter
xchg
ja
mov
mov
test
stos
pop
mov
lods
popa
aas
popa
and
push
xchg
adc
mov
mov
pushf
mov
pop
ja
and
fnstenv
aas
repz
xchg
pop
cs
xor
sbb
push
sahf
in
mov
lahf
icebp
aaa
jo
imul
cs
mov
push
add
mov
imul
imul
aam
cmp
sbb
popa
push
jmp
dec
leave
fs
sbbl
push
adc
sbb
out
mov
jg
or
movsl
aad
dec
xchg
push
push
popa
iret
call
sub
mov
sbb
sbb
clc
out
insb
mov
push
sahf
inc
mov
sbb
fsubrs
xchg
cli
jg
xor
or
testb
inc
insb
or
and
sub
cmpsl
xor
xor
stos
jnp
cmp
std
xchg
shr
in
xor
sub
lods
mov
xchg
add
ficoms
out
popl
in
push
shrl
clc
arpl
inc
jmp
pusha
mov
push
push
mov
pop
adc
movsl
dec
cs
data16
push
xchg
or
adc
scas
dec
dec
insb
insl
aaa
cltd
push
cmp
hlt
add
push
adc
aam
and
cmp
in
dec
es
mov
mov
sub
das
push
ret
imul
or
cmp
mov
sti
jno
pop
inc
inc
sahf
movsl
xlat
push
mov
sub
adc
mov
icebp
push
test
pop
jmp
inc
test
xor
sub
mov
imull
insb
or
std
jmp
pop
test
add
mov
icebp
ljmp
xchg
scas
fbld
ds
pop
mov
out
gs
cmpb
mov
les
imul
mov
movsb
fcomps
mov
or
mov
mov
pop
call
repz
push
mov
cmp
adc
add
cmp
cmpps
std
ja
enter
pop
popa
push
dec
mov
push
cmp
dec
shrb
stc
js
push
rcrb
shrb
ficompl
jb
push
mov
mul
mov
sti
inc
mov
add
fidivrs
daa
scas
add
clc
movsb
mov
push
aad
jnp
or
clc
pavgw
fidivl
cmpsb
adc
subb
cmp
cmp
mov
jg
adc
inc
mov
aad
add
lods
jnp
in
inc
or
pop
or
jle
or
fnstsw
loope
test
pop
loopne
test
mov
jle
dec
mov
idiv
outsl
jne
mov
mov
add
popa
rorb
add
sbb
pop
sub
pushf
insb
and
fistpl
jp
shlb
push
sub
lcall
cmp
je
fldt
jl
pop
xchg
adc
or
sbb
jle
je
loop
sbb
inc
lcall
outsb
xor
loopne
cmp
mov
test
idiv
push
adc
pop
push
jl
xor
dec
jg
adc
cmp
mov
icebp
xchg
dec
imul
cltd
xchg
insb
nop
jg
xchg
repnz
stos
adc
lods
pusha
mov
std
test
std
mov
xchg
sbb
out
dec
xchg
or
js
mov
mov
xchg
dec
cmp
test
cmp
inc
test
mov
sahf
lea
sbbl
std
cld
aaa
cltd
pop
mov
lods
std
mov
fdivl
adc
or
add
cmp
iret
or
inc
add
cli
imul
cld
ret
in
jns
xchg
loop
add
inc
into
cmpsl
les
lds
outsb
outsb
mov
cs
xlat
loope
jo
aas
mov
fucomip
divb
jae
jg
leave
out
aaa
ret
cltd
mov
pop
pop
ljmp
cwtl
pop
lret
adc
incl
pop
and
lret
xor
out
push
shlb
cmp
or
jmp
in
add
and
pop
outsb
rorb
cld
repnz
das
aam
add
mov
cwtl
pop
mov
sti
and
pop
lret
add
aad
jnp
xchg
cld
push
in
inc
loope
in
lods
fadds
mov
and
dec
ja
jne
imul
repz
das
inc
cs
pop
call
mov
add
hlt
xchg
ljmp
dec
sub
sbb
pusha
mov
fucomip
stos
jo
inc
or
outsl
std
nop
shlb
jo
cltd
add
insb
mov
or
scas
loop
xor
mov
xchg
das
icebp
jg,pt
test
mov
adc
mov
jp
daa
int3
sbb
test
ret
lret
adc
sarl
cmp
cmp
pop
jbe
adc
push
inc
sub
in
cmp
ret
cwtl
xchg
pop
mov
mov
xor
mov
arpl
pop
jne
xchg
ret
sub
and
and
lea
mov
lock
repnz
inc
push
cmc
pop
clc
push
fs
and
jg
in
xor
and
xchg
ss
fstpl
out
int
dec
in
cmpsb
das
pop
lcall
inc
std
jae
iret
and
adc
ja
ljmp
mov
movsb
and
xchg
cmpsl
adc
outsl
or
cltd
jmp
loop
inc
loop
jg
cmp
sahf
ds
fimuls
mov
push
stc
xchg
arpl
mov
fsubr
or
lods
cmp
mov
pusha
inc
xchg
in
imul
divb
xor
lret
lods
leave
sub
in
pop
lods
push
xchg
shll
ret
mov
sbb
and
mov
and
cmpl
movsb
stos
xor
pop
sti
or
add
jl
ss
es
xlat
cmp
jb
sub
and
mov
jmp
negl
int
lods
dec
fists
adc
cmp
xchg
xor
cmp
scas
pop
pop
lea
rcr
xchg
sbb
dec
aad
js
pushf
mov
std
pop
hlt
in
arpl
icebp
pop
jnp
cmpsl
ljmp
aaa
add
rorl
mull
addb
inc
mov
mov
mov
or
cmpsl
repnz
lds
lods
bound
lret
stc
fdiv
lock
test
cwtl
addb
pop
ret
lods
int
scas
dec
aaa
sbb
movsb
add
dec
xor
imul
xchg
movsb
jno
jmp
cltd
jne
dec
cmp
popf
sbb
icebp
jns
inc
mov
push
mov
rcrl
adc
cmp
in
aas
lret
jl
hlt
pop
inc
cmpsl
pop
inc
inc
mov
orb
sar
mov
push
or
jnp
shlb
repnz
std
in
les
imulb
jmp
sub
mov
push
mov
xor
lret
jne
es
cwtl
or
pop
negl
shl
mov
pop
gs
inc
mov
out
in
inc
in
xchg
call
in
das
rolb
pop
test
mov
sbb
shlb
jbe
loopne
mov
and
pushf
lods
out
pop
cli
fwait
shlb
stos
jge
xchg
xlat
stc
mov
jns
aas
cld
ljmp
mov
adc
dec
int
push
add
adc
jge
arpl
push
lods
jbe
insl
lret
jmp
adc
stos
xor
dec
clc
jae
adc
lods
push
call
ret
cmpsb
xor
decl
lret
mov
sbb
je
jne
in
insb
dec
pushf
mov
jecxz
xchg
sbb
push
add
jp
addb
daa
or
pop
cltd
xlat
xor
les
jb
jns
test
xchg
inc
rorb
out
hlt
cmp
loope
cmc
scas
pop
sub
xor
icebp
insl
bound
loope
out
inc
test
or
dec
idivb
jae
fwait
sub
cmp
movsb
push
insb
vandnps
je
rcrb
rclb
int3
sarb
mov
repz
test
leave
cs
push
icebp
jmp
pop
fwait
sarb
loopne
mov
scas
mov
adc
or
stos
sarb
daa
jbe
pusha
inc
push
stos
push
dec
fdivrl
xlat
jo
pop
cmp
daa
fimuls
xchg
mov
mov
or
cmp
lret
ljmp
fdivrl
mov
jnp
add
push
cltd
lcall
cmp
or
push
adc
push
xchg
les
push
sbb
push
subb
adc
stos
mov
push
xor
jo
mov
or
jecxz
jbe
or
pop
sarb
lea
stos
stos
xchg
push
fsubp
jge
cmp
jns
or
in
nop
imul
xchg
mov
jge
pop
add
jae
xchg
push
outsl
shll
inc
cmpsb
xor
jb
dec
push
inc
mov
dec
mov
add
xor
ret
pop
xchg
mov
out
fsubr
rcll
mov
xor
enter
scas
call
mov
mov
jno
mov
addr16
and
jne
sub
sub
push
mov
jo
mov
jbe
xlat
adc
mov
cmp
lret
mov
cmp
mov
out
mov
jnp
sbb
sub
sbb
xchg
movsb
cld
jle
addr16
nop
cmp
aam
mov
loope
xchg
add
cld
or
dec
jb
dec
jnp
das
in
dec
test
mov
sahf
in
mov
fisubl
icebp
daa
call
dec
sbb
mov
xchg
push
add
fwait
leave
inc
frstor
lcall
subb
insb
sbb
or
pop
lods
mov
not
addr16
dec
mov
fsub
xchg
rolb
dec
negl
loop
enter
ljmp
repz
sti
aad
push
pop
ljmp
pop
sub
jne
cmpsl
adc
fiadds
lcall
gs
jecxz
mov
aas
sbb
insl
mov
push
inc
repnz
sbb
ret
sarl
mov
pop
cmc
ja
lret
loopne
add
popa
lahf
add
aaa
jmp
push
loope
cmp
fdivs
pop
leave
testl
mov
scas
sbb
push
mov
pop
je
push
loop
out
push
cmp
jge
push
push
adc
out
sub
divb
rcrl
loopne
and
jecxz
adcb
or
out
sbb
mov
xor
or
sbb
xorl
lods
frstor
das
cmpsb
repz
js
cld
and
rcrl
jmp
cwtl
inc
jle
scas
sti
pop
lcall
mov
aad
cs
into
cmp
popa
aaa
out
gs
les
and
jmp
or
roll
push
arpl
xchg
roll
mov
stos
faddl
inc
add
inc
inc
jno
cld
add
xchg
xchg
jge
sbb
leave
fdivs
clc
xor
jb
fs
in
stos
inc
xor
sti
mov
or
fsubrp
jnp
test
mov
jg
iret
mov
outsb
mov
inc
mov
add
andb
cmp
jns
ds
fs
sub
push
adc
pop
adc
scas
mov
div
cmpsb
fwait
insb
push
sub
push
imul
or
push
loop
inc
add
bnd
sbb
int3
stos
mov
aas
scas
mov
mov
push
adc
mov
push
pushl
cmpsb
xchg
arpl
cld
cmp
repz
mov
pop
inc
fcoml
out
mov
call
std
adc
inc
push
mov
mov
jge
inc
jmp
mov
pop
testl
ljmp
xor
xchg
push
fimull
add
mov
popf
dec
or
in
jmp
pop
and
push
pop
jne
push
imul
out
inc
fidivs
pusha
mov
cwtl
mov
sbb
mov
xchg
dec
pop
inc
mull
lcall
mov
shrl
xchg
jp
fs
adc
sbb
cmc
xchg
sbb
outsl
mov
mov
sub
mov
outsl
fnstenv
sbb
insb
or
mov
call
jae
mov
xchg
xchg
ds
cmp
out
mov
push
mov
mov
ret
mov
mov
mov
adc
mov
xlat
clc
test
mov
jmp
out
cmc
adcl
cmp
xor
inc
or
aam
add
mov
out
fcmovnu
sbb
fdivl
addl
sbb
aad
cwtl
cli
inc
outsb
loop
mov
mov
roll
mov
add
push
or
jl
ja
iret
or
and
sbb
add
std
mov
pop
xchg
push
or
movsl
sahf
cltd
pop
iret
add
jae
repz
out
dec
sbb
lods
mov
jecxz
cmp
and
cwtl
fsub
adc
cld
jbe
out
mov
jo
notl
pop
push
stos
fnstenv
sub
xchg
idiv
adc
jmp
jo
jge
outsb
push
lds
shll
fwait
sub
shlb
sbb
adcl
popw
sti
dec
push
mov
cmpsb
inc
or
lcall
ficomps
sub
scas
mov
jmp
addr16
rcrl
adc
ftst
xor
movsb
sbb
lds
jb
das
push
inc
int3
sbb
lods
and
inc
sbb
pop
xchg
in
decb
in
movsl
fsubl
or
faddl
dec
mov
ljmp
cwtl
xlat
pop
aad
pop
jbe
clc
shrb
pop
mov
jo
out
lock
pop
and
js
arpl
mov
fistpl
xchg
in
cltd
je
lea
sbb
jnp
dec
sarl
lcall
jbe
inc
icebp
mov
jae
mov
mov
mov
mov
pop
xor
ds
mov
stos
in
xor
cmpsl
enter
div
sub
sti
sbb
sbb
lcall
mov
shrl
mov
xchg
push
mov
sbb
loope
push
xor
outsl
lcall
sbb
fiadds
decb
push
jmp
rorl
dec
sahf
xchg
outsb
fwait
out
mov
push
mov
or
pop
imul
test
js
add
and
mov
loope
adc
test
push
cmp
dec
jge
xchg
test
lods
xor
inc
cmp
call
imul
push
jnp
mov
shlb
fildl
mov
fucomip
mov
cmc
mov
cmp
scas
ds
fidivrs
sbb
lret
dec
fucomi
or
pop
sub
xchg
repz
jp
mov
rclb
pushf
scas
sbb
mov
inc
mov
add
pop
and
push
cmp
fbstp
icebp
jno
pop
sbb
xor
stos
xor
inc
mov
or
sbb
ds
out
sub
pop
mov
dec
repnz
add
lds
inc
lcall
mov
jmp
pop
sbb
cmp
add
rcrb
dec
lock
push
xchg
jg
mov
jno
sub
cmp
aas
shll
jae
adc
pusha
arpl
and
pop
test
out
mov
push
ret
je
cmpb
imul
mov
add
mov
and
push
adc
js
outsl
pop
clc
shrl
lock
in
scas
inc
inc
inc
arpl
int
xor
and
test
test
hlt
and
and
push
stc
imul
xlat
aam
xorl
or
xchg
rcrb
gs
mov
insl
cld
mov
xchg
je
enter
negb
ja
xchg
jecxz
out
cmpsl
adc
and
fstpl
or
loopne
in
mov
scas
sbb
movsb
aad
cmp
mov
fistps
jge
pushf
push
clc
in
mov
out
sbb
jbe
xchg
out
add
add
gs
pushf
xchg
cmpsb
adc
mov
push
cli
push
add
test
jne
pop
mov
scas
les
ljmp
stos
xchg
scas
lods
xor
mov
cmpsb
jl
subb
xor
test
inc
cs
lock
mov
mov
stc
int3
cmp
test
and
js
push
mov
cmpsl
mov
jg
fcmovne
and
aas
pop
stos
idivl
icebp
jns
dec
test
xor
xor
add
xor
pop
shrb
shlb
xorl
push
pop
addr16
inc
movlps
pop
add
fwait
push
jne
fisttpll
mov
mov
inc
sbb
push
call
cs
lea
or
in
std
dec
add
xchg
cmp
lret
mov
fwait
mov
jae
cmp
push
push
cmp
into
loopne
rorl
sbb
push
insl
jbe
out
mov
repnz
stos
push
aaa
insl
daa
jp
fs
pusha
sbb
out
mov
jb
arpl
adc
lock
fs
and
sub
loop
imul
add
xchg
push
ja
xor
out
shl
push
pop
pop
sbb
cmp
repnz
xor
cmp
xlat
iret
dec
and
cmp
sbb
cmp
adc
por
fs
add
test
mov
sti
enter
jge
loope
ljmp
cmp
dec
jae
jb
filds
or
pushf
xchg
mov
sub
popf
stos
int
aaa
jmp
rcll
inc
or
outsb
and
dec
sub
dec
arpl
ror
dec
sbb
paddusb
and
sub
stc
xchg
mov
or
mov
sub
pop
pop
das
fdivrs
add
pop
inc
xchg
mov
addr16
push
lea
and
xlat
nop
jo
outsl
xchg
pop
dec
xor
testl
mov
out
ja
fsubrp
mov
add
loope
cmpsl
lea
pop
or
jg
aaa
stc
mov
jmp
jle
test
inc
jb
or
test
mov
adcb
fs
mov
jmp
cmp
movsb
xor
add
lret
ror
fwait
pop
or
inc
mov
jb
xor
push
mov
mov
sbb
aaa
repnz
mov
add
and
mov
adc
js
test
call
xlat
add
ljmp
push
cwtl
adc
int3
fidivs
in
mov
inc
or
rclb
push
xchg
mov
aam
sbb
mov
xchg
into
mov
or
in
xchg
rcll
rcrb
scas
in
rcl
es
mov
xorl
inc
push
out
jg
xor
popa
adc
shl
popa
mov
pop
or
lea
jbe
mov
dec
push
andb
leave
mov
mov
test
push
jle
jge
and
mov
lcall
sbb
sahf
mov
adc
xchg
push
push
mov
cli
and
cmc
ja
fsubrp
cmp
dec
xorb
pop
ss
jnp
sbb
loope
sub
adc
dec
movsb
stos
or
lock
ljmp
xchg
call
fcmovnb
cmp
mov
pop
mov
jmp
out
mov
or
repnz
xchg
imul
jno
jns
cmpb
es
lret
dec
mov
pop
popf
or
xor
fiadds
lods
lods
pop
push
and
outsb
and
cmpsl
adc
cmc
fidivrl
jbe
insb
xchg
pop
hlt
xchg
cmp
inc
sub
pop
adc
xor
cmp
mov
jb
scas
cmp
shll
and
jae
fistpll
jl
and
loop
mov
sub
xchg
lret
cmp
add
cli
cs
in
or
rolb
js
jbe
fstl
dec
sbb
xchg
mov
test
addr16
fistps
push
adc
xchg
out
test
imul
lret
cli
adcl
jge
lods
dec
lds
rclb
shr
psubusw
iret
inc
mov
push
dec
in
or
jbe
pop
cmc
cmc
xor
fildl
int
mov
shrl
jbe
mov
arpl
mov
ss
jo
loopne
cmp
loop
shll
jno
cmp
sub
xchg
mov
ljmp
loop
inc
mov
pop
clc
mov
fs
je
pop
sbb
or
addr16
dec
adc
rcrl
scas
out
xchg
cltd
fdivl
cmpsb
pop
mov
or
rolb
out
out
out
sti
xor
sahf
jb
lods
sub
and
mov
call
adc
mov
lea
sbb
addb
lods
pop
lods
call
mov
cmp
jl
xor
cmp
leave
pop
ret
cwtl
shlb
pop
push
scas
push
lahf
loop
clc
sti
nop
mov
clc
sahf
hlt
and
pusha
mov
pop
xor
pop
lock
inc
bound
push
loope
mov
mov
dec
pop
decb
dec
fs
pop
xor
add
es
rorl
movsb
nop
cmp
rcrb
sub
sub
fwait
sbb
dec
jmp
int
andl
push
jmp
movlps
in
sub
je
cmp
mov
sbb
clc
js
or
push
out
in
rcrb
outsl
jno
jecxz
push
adc
ja
xor
jns
mov
test
cltd
inc
xor
int3
ds
hlt
pop
mov
sub
cmc
add
or
jbe
in
xor
repz
pop
inc
repz
test
out
fdivrs
xchg
fsub
in
or
mov
mov
inc
sti
jnp
cmp
inc
xchg
pop
in
or
daa
mull
in
lret
lock
pop
cmp
test
cmp
push
pop
rcl
mov
popl
dec
negb
mov
pop
inc
add
mov
das
mov
lock
mov
repnz
xlat
in
xor
pop
dec
jnp,pt
mov
pop
and
jae
fwait
in
cs
mov
test
aad
scas
stos
cld
xor
push
cmp
addr16
scas
lods
mov
jno
repnz
loop
xchg
nop
push
mov
xchg
jne
leave
stc
mov
fs
push
dec
xchg
loope
and
push
jne
les
sbb
push
mov
or
or
jne
jmp
pushf
xor
scas
hlt
test
push
sbb
or
pop
xchg
divb
mov
sbb
sub
lahf
cmp
mov
daa
cld
and
enter
add
test
mov
or
or
movsb
lods
cmp
imul
cmp
pop
rcll
xor
push
fsubrl
push
ss
xchg
jg
hlt
fstpt
push
out
and
fs
or
mov
push
dec
mov
add
cwtl
add
lods
mov
shll
jae
lret
outsb
xchg
mov
add
daa
push
hlt
xor
mov
addr16
bound
push
mov
dec
jmp
xchg
lock
adc
push
jno
push
xchg
sbb
add
jae
sti
push
mov
or
mov
fcmovnbe
sahf
fs
pusha
xchg
adc
mov
outsl
sub
fstpl
mov
aad
xchg
xchg
mov
hlt
dec
in
stos
push
movsb
loopne
int3
pop
out
cmp
sub
cmp
mov
push
mov
les
xor
dec
inc
clc
or
mov
mov
cli
mov
cmp
add
stos
rcrb
in
push
adc
movsb
in
clc
lea
cltd
xchg
inc
shrl
jg
mov
repz
out
les
je
sbb
jae
loop
jmp
push
repnz
outsl
pop
fdivs
pusha
aas
test
inc
das
sub
mov
cs
scas
mov
mov
in
mov
sarl
push
stos
inc
jnp
out
lods
pop
cltd
aam
outsl
out
mov
sbb
jbe
gs
xchg
les
mov
jmp
sbb
test
cltd
divl
sbb
mov
pop
pop
mov
jno
mov
adc
test
fcoml
movsl
or
xchg
push
push
mov
dec
lret
bound
cmc
jae
sub
dec
lahf
jns
push
popf
xchg
jg
jge
js
xchg
jbe
sbb
call
repnz
mov
rorl
and
cmc
rcrb
xchg
jmp
jb
and
imul
fs
cmp
push
ret
mov
xchg
imul
negb
sahf
loope
repz
shll
repz
pop
mov
sbb
jle
push
dec
ret
in
mov
mov
lahf
fisubrs
xchg
xchg
inc
jecxz
adc
lcall
inc
aaa
ret
mov
sbbl
adc
stos
mov
xor
iret
mov
shrl
pop
aas
bound
int
xchg
xchg
insb
push
cmp
jmp
inc
aam
pop
mov
bnd
int3
es
fs
sbb
dec
mov
xchg
test
sbb
iret
mov
sub
pop
mov
xor
fwait
test
add
clc
cvtps2pi
test
mov
js
push
call
and
rorb
mov
fdivrs
mov
mov
popf
loope
orl
enter
loope
test
lahf
add
or
negb
and
jae
hlt
sarb
dec
pop
lods
lea
xor
rorl
fmul
sbb
ret
sahf
dec
out
cmp
xchg
cmp
repz
add
sub
test
cmpsb
das
pop
outsb
cmpsl
push
xorb
pop
push
and
insb
lahf
and
and
mov
dec
sti
les
daa
int
sbb
je
hlt
andb
cs
enter
sbb
and
xlat
insl
mov
add
sarl
iret
icebp
ret
stos
rcrl
popa
pop
jb
mov
cmpsl
inc
addb
jp
and
sub
sbb
xor
std
fs
push
insl
mov
decl
pop
lea
mov
pop
shll
outsl
push
xor
daa
inc
jo
cmpsb
clc
cmpb
pop
mov
mov
xchg
xor
push
scas
pushf
mov
push
adc
sti
add
xlat
and
xchg
mov
imul
stos
clc
xor
dec
andl
sub
adc
mov
ficoms
int3
fucomp
dec
mov
scas
cmpsl
mov
mov
rcll
sub
lret
pushf
inc
xchg
xor
out
in
inc
int3
movsl
inc
jne
cmp
mov
jp
repnz
pusha
sub
hlt
outsl
or
orl
shll
dec
cli
cmp
sbb
mov
hlt
pop
sahf
cmp
std
push
mov
mov
repnz
add
ret
fstl
pushf
mov
xor
push
out
out
fs
mov
ret
push
cmp
push
xor
inc
mov
cmp
dec
xor
fisttpl
mov
cs
out
test
or
lods
cs
add
mov
adc
test
data16
xchg
clc
jmp
xchg
fcoml
or
xor
or
ds
js
xchg
loope
movsb
int3
mov
insl
pusha
mov
or
pusha
out
jmp
jge
movsb
rcrl
pop
and
pop
xchg
pop
jl
cmp
push
test
leave
adc
jle
and
ljmp
hlt
dec
loopne
dec
xchg
pop
adc
fisttpll
xchg
aas
adc
bound
push
cltd
pop
test
pusha
mov
mov
sub
mov
inc
push
iret
out
pop
xchg
mov
aas
testl
adc
addr16
or
pop
inc
das
out
and
mov
mov
add
pop
cmp
mov
cmp
jmp
je
loopne
aas
jp
mov
jne
jns
subb
in
dec
cmp
pop
mov
xchg
dec
cmp
ja
ret
bound
cmp
daa
aam
pop
popf
push
loop
repnz
pusha
jge
out
pop
sbb
pusha
into
add
mov
ret
test
dec
xor
subl
add
jb
sbb
ljmp
pop
clc
adc
cmp
lods
pop
mov
pop
pop
and
rol
push
ljmp
pop
hlt
fsubp
and
adc
mov
sub
mov
mov
je
sub
out
dec
dec
dec
cmpsl
in
fmuls
fadds
mov
test
bsr
pop
outsb
inc
jbe
bound
fnstenv
shll
lret
lods
add
mov
or
sbb
xchg
dec
xor
leave
cli
int3
sub
and
and
and
inc
mov
mov
lods
dec
scas
pop
cmpsb
incl
fucomip
inc
dec
jp
cmp
cmp
popa
outsb
push
rcrb
jg
popa
insl
lcall
xor
ret
dec
inc
add
xor
xchg
mov
jnp
xor
sbb
xchg
xor
adc
pop
dec
aad
push
dec
into
dec
mov
dec
fidivs
dec
clc
cmp
jo,pn
xchg
jl,pt
xor
push
pop
mov
lock
into
jecxz
lock
cmp
mov
std
push
jecxz
mov
jns
sbb
push
insl
lods
cs
pop
lret
imul
add
stos
mov
mov
arpl
repnz
int
mov
ja
loope
inc
int
mov
cs
imul
sub
pop
jns
ja
das
sbb
dec
shlb
jle
addr16
ret
mov
xlat
cli
jmp
lret
das
dec
mov
or
lea
push
or
or
shrl
hlt
jmp
cli
divl
or
rorl
outsl
out
xchg
or
lcallw
subb
lds
roll
test
sub
lret
fmull
lret
jb
imul
in
sarl
nop
addr16
pop
out
push
loopne
clc
andb
sbb
stc
hlt
cmp
mov
clc
aam
sbb
int
imul
push
push
cmp
pop
and
ret
mov
daa
pop
mov
out
movsl
rcl
or
lods
ljmp
mov
shll
cmp
stos
pop
pushf
shlb
jb
arpl
push
nop
sbb
push
aas
dec
push
mov
mov
nop
and
aam
std
inc
pushf
sarb
bound
mov
rorb
push
popa
cld
outsl
dec
outsb
xor
jne
mov
enter
mov
dec
mov
insl
mov
cmpsl
stos
addr16
aaa
and
mov
insl
inc
pop
sahf
pop
xor
sub
xchg
add
xchg
inc
inc
push
and
cli
adc
mov
bound
push
sahf
push
jbe
mov
dec
dec
push
cwtl
sbb
ljmpw
xchg
jnp
inc
mov
mov
jno
rclb
insb
popl
stc
not
inc
cmpsb
adcb
xchg
in
adc
jnp
fnstsw
popf
decl
bound
xlat
jns
ljmp
popf
pusha
push
gs
xor
pop
std
in
push
inc
repz
leave
and
mov
xchg
shrl
scas
dec
mov
dec
dec
jbe
add
mov
add
sarb
insl
xchg
push
xor
push
mov
rclb
mov
xor
xor
lret
popl
and
jns
leave
or
xchg
mov
or
jl
scas
je
out
adc
popa
mov
mov
in
movsl
jo
inc
pop
inc
add
sub
imul
jp
fsub
fcoml
dec
push
mov
ret
mov
mov
pop
enter
push
repz
jb
pop
xlat
shll
and
jecxz
aaa
dec
sbb
inc
lret
hlt
mov
call
push
mov
cmp
add
out
and
fimuls
xor
mov
cmp
sar
mov
outsl
out
test
sub
dec
adc
test
int3
mov
je
mov
jle
push
push
in
mov
sbb
sbb
rcll
iret
jnp
into
jae
push
sbb
in
push
js
xlat
lret
sbb
xchg
cmc
mov
jo
dec
imul
and
sub
mov
or
push
mov
shl
negl
sub
aaa
push
je
clc
jg
shll
mov
call
dec
jno,pn
ret
jl
mov
jmp
mov
inc
iret
push
in
jo
mov
movsb
testb
bound
and
mov
out
xchg
sti
cmp
mov
out
add
jmp
cmpsl
cmc
mov
mov
enter
cmp
rcrb
sub
hlt
mov
or
lods
es
xchg
aad
mov
addb
rorl
test
das
out
xor
push
sbb
pop
pusha
pusha
sbb
dec
repnz
xchg
std
mov
out
pop
cmp
inc
cpuid
push
mov
fisubl
dec
push
cmpsb
jle
les
mov
mov
push
test
aad
mov
mov
or
mov
cltd
leave
inc
aad
fs
lock
ja
pop
mov
pop
pop
dec
lret
cmpsl
mov
popa
jg
mov
cmp
and
cmpsb
mov
pop
cmp
push
cwtl
in
scas
scas
imul
in
fsts
xor
ja
gs
or
loop
fcoml
cmpsb
ja
test
jno
ficomps
lods
mov
cmpsl
dec
lret
cmpsl
adc
dec
fnstcw
ljmp
adc
sbb
sbb
out
arpl
xchg
cmp
les
cs
xchg
std
mov
testl
pop
or
adc
ret
fisubl
jl
dec
int3
xchg
push
lcall
insb
out
pop
shl
mov
jl
in
sbb
xchg
loopne
sub
nop
scas
arpl
push
push
inc
icebp
cmp
jns
sub
jmp
das
mov
sbb
add
mov
lret
or
sub
push
push
add
push
es
stos
dec
out
lods
inc
pop
push
xchg
aaa
adc
sub
add
pop
jle
shl
mov
stos
xor
fcmovb
xchg
das
jle
fwait
pop
fcomps
rclb
test
jecxz
arpl
cld
dec
popf
dec
setbe
pop
daa
insb
test
xor
push
xchg
and
xor
les
or
mov
das
pop
outsl
jb
aas
sbb
mov
xchg
push
ret
scas
cmp
mov
aas
adc
push
xor
popa
pop
add
setae
adc
out
test
push
mov
and
hlt
mov
loopne
sub
push
test
dec
sub
add
subb
jbe
dec
out
es
cmp
inc
dec
mov
push
mov
adc
push
mov
or
inc
shrl
aad
xor
insl
inc
inc
and
outsb
pop
jns
insb
movsl
movsb
sbbl
scas
pop
ret
aaa
aas
lret
push
imull
sarb
jge
inc
push
clc
lea
fs
push
test
mov
sbb
mov
xor
rcll
aaa
and
ja
popa
sub
shll
scas
push
push
add
stos
scas
and
mov
ljmp
sub
xchg
mov
addr16
add
dec
xchg
push
xchg
clc
push
push
xor
xor
push
jecxz
insb
mov
out
mov
into
sbb
aam
xchg
rolb
fld
insb
int
inc
inc
dec
push
xchg
cltd
inc
bound
sub
lret
insl
push
inc
ss
loope
in
fldz
jmp
fwait
mov
rcr
ja
mov
or
addr16
or
sti
mov
xor
xor
xchg
xchg
dec
shll
cli
call
sbb
push
fiaddl
jno
xor
int
dec
adc
jl
xor
cmp
mov
mov
mov
xchg
sub
dec
imul
inc
lods
sub
stos
xor
adc
or
popa
add
fwait
stos
in
shlb
and
and
rorl
popl
xchg
inc
aam
mov
sub
andb
cmc
inc
in
xchg
jmp
lret
lock
in
mov
push
dec
sbb
std
lea
out
in
sbb
cmp
icebp
jo
add
jno
pop
inc
sbb
rcll
repnz
xchg
push
bnd
xchg
sub
pop
or
mov
xchg
test
fcompl
cmp
lcall
rol
cmp
sbb
inc
pop
cmc
add
push
jmp
sub
and
jecxz
pusha
sub
test
cmp
and
addl
mov
push
ret
sbb
pushf
cmp
mov
addr16
cmp
repz
call
cltd
xchg
mov
xchg
test
mov
sbb
xor
dec
sahf
arpl
sbb
pop
ljmp
xor
aad
cld
cltd
sub
fmul
mov
push
or
push
xchg
int3
and
sbb
adc
dec
lret
cmc
dec
mov
mov
fld
pusha
cmp
pop
imull
mov
push
mov
lahf
xor
sub
clc
mov
in
cmp
shlb
rolb
mov
cmc
cltd
xchg
adc
cmpsb
mov
push
mov
ret
mov
lods
jecxz
cmp
sbb
aaa
adc
clc
shr
imul
repz
mov
popa
lds
cmp
mov
mov
jge
test
scas
sti
ljmp
icebp
lahf
or
push
icebp
jl
shlb
cmp
dec
out
adc
jl
dec
stos
lahf
push
test
inc
loope
lods
cld
scas
es
dec
add
fstps
and
rsm
dec
inc
mov
mov
push
mov
and
mov
jge
adc
shlb
mov
push
jno
in
sbb
mov
push
ja
pushf
insl
pop
daa
into
xchg
cmpsl
inc
negl
jmp
mov
xchg
push
xor
int
ss
dec
rorl
in
mov
ret
imul
cmp
or
mov
pop
aam
sub
repnz
adc
add
stos
pop
xor
pop
sbb
aas
mov
addr16
dec
outsb
inc
cltd
add
push
sbb
adcl
das
push
push
xchg
lods
add
sbb
xchg
mov
push
fidivl
jne,pt
sahf
mov
out
jno
sbb
add
inc
pop
mov
jnp
add
int3
adc
mov
je
cwtl
out
cwtl
cmp
or
push
int
adc
sbbb
inc
fcmovnu
lret
sbb
test
push
push
mov
repz
das
cmc
fcmovne
rcrb
mov
push
test
loopne
mov
adc
xor
sub
test
lock
insb
pop
es
sub
mov
jl
mov
pop
lds
sbb
jecxz
imul
dec
outsl
testb
jne
mov
filds
pop
or
movsb
jge
jo
das
test
clc
mov
mov
in
sbbb
sbb
mov
fdivr
cld
dec
fldl
ret
sahf
xchg
push
cld
fdivs
arpl
ret
xor
jns
push
jno
loop
cld
adc
movsl
xchg
shll
adc
enter
clc
xor
lret
add
push
sarb
xor
lods
push
mov
stc
sbb
rorb
jno
movlps
js
lret
lret
mov
je
out
push
sub
adc
popf
or
bound
jmp
mov
arpl
cmp
scas
lret
aaa
sub
jne
out
aam
daa
or
and
lahf
or
mov
xchg
sub
xchg
in
ja
test
rcrb
insl
dec
cs
mov
sti
mov
lcall
sbb
push
clc
xchg
push
movl
sbb
mov
pop
sbb
xlat
lahf
and
test
std
into
out
leave
popa
std
rorl
dec
in
sub
enter
in
int3
sarb
push
roll
jmp
jae
mov
push
ja
ficompl
xlat
idivl
lea
jl
out
ja
mov
mov
hlt
in
dec
mov
nop
jl
mov
aad
sti
pop
fimuls
mov
pusha
inc
aam
sub
add
xchg
push
pop
push
jbe,pn
push
orb
std
sub
lods
xchg
in
and
mov
mov
push
push
ss
xchg
inc
cmp
popf
dec
jmp
and
sbb
inc
cmp
xlat
jb
jnp
or
fcoms
loop
jg
mov
mov
arpl
mov
sbb
pop
sub
dec
and
int
adc
iret
outsw
orb
mov
xor
and
sub
push
sub
lock
es
jp
mov
cmp
mov
inc
in
jno
cli
test
fdivp
loopne
cmp
fcmovnb
adc
dec
or
push
subl
ds
mov
jne
jl
std
scas
loopne
dec
loop
and
out
clc
lahf
mov
shll
mov
inc
cmc
sub
jb
out
inc
lods
lcall
and
push
out
fcmovnbe
add
adc
add
push
in
icebp
push
push
cltd
lret
in
push
inc
shlb
movsb
lahf
sub
ljmp
aad
push
cmpsb
mov
aaa
sub
push
cmp
lret
dec
mov
mov
xor
sbb
pop
add
xor
sub
mov
jo,pt
add
arpl
inc
push
in
addl
lret
xchg
fcompl
and
fcoms
outsb
leave
adc
mov
mov
push
adc
or
cld
dec
jo
push
xor
jne
pop
or
xchg
inc
out
daa
les
rorl
sub
sub
sahf
dec
add
aad
pop
mov
pop
outsb
sbb
mov
jge
or
lock
dec
sub
shlb
xor
ret
das
subb
lds
out
mov
scas
aad
mov
xchg
mov
cmp
frstor
loopne
int
aas
adc
mov
pop
sub
adc
mov
mov
push
lds
sbb
sarb
sahf
push
lret
sti
sarb
adc
push
pop
dec
cld
mov
aam
mov
xor
cwtl
inc
in
enter
xor
and
mov
andb
xchg
outsl
mov
mov
inc
test
or
dec
aad
xlat
mov
pop
mov
xor
push
test
push
in
out
push
push
jbe
jl
movsb
jo
sub
mov
divb
and
sbb
jnp
inc
repz
or
push
jg
ds
sar
push
jbe
xchg
adcl
ss
push
repnz
sbb
push
push
sbb
add
popf
popf
ljmp
out
mov
sbb
mov
jl
mov
sub
and
lds
pop
repz
jp
stc
imul
sub
jg
andb
mov
and
cmpsb
jp
es
in
push
lret
xor
rol
mov
push
xchg
out
cmp
ja
jmp
outsl
mov
push
adc
lock
dec
pushf
cmp
add
dec
xchg
mov
das
or
pop
and
out
aaa
mov
mov
mov
repnz
int3
xor
jg
dec
clc
fistl
int3
fists
aas
push
int
mov
lock
popa
arpl
fsubs
repnz
bound
sbb
jne
out
iret
leave
in
out
inc
and
lcall
jmp
inc
mov
push
jo
push
aaa
inc
or
adc
jp
xchg
adc
out
and
fisubrl
mov
ss
stos
dec
call
scas
mov
in
mov
adcl
sub
adcb
and
xlat
out
inc
data16
xlat
xchg
lea
aam
rol
xchg
xchg
mov
aaa
mov
push
mov
enter
lock
or
test
cwtl
pop
jbe
fmul
outsl
rorl
mov
add
fwait
push
push
push
nop
mov
fists
sub
push
les
xor
pop
ss
dec
inc
cmpsl
adc
push
pushf
imul
ficomps
dec
dec
sbb
xchg
pop
movsb
mov
mov
fs
xchg
pop
lahf
in
scas
ret
pop
out
popf
test
jge
inc
dec
dec
insb
cmp
mov
pop
inc
adc
daa
pop
adc
cld
inc
and
das
call
xchg
inc
fildl
into
mov
fldenv
roll
push
js
cmc
mov
sbb
and
pusha
addr16
xor
in
in
stos
sbb
cmp
ret
or
mov
inc
mov
cld
out
fldcw
dec
sub
xchg
mov
loope
mov
mov
clc
enter
inc
aas
or
push
stc
je
scas
sub
iret
filds
adc
addr16
add
cmp
and
cmp
adc
cmp
and
inc
and
add
in
cli
add
mov
mov
inc
mov
fs
aaa
ljmp
lahf
inc
mov
jns
sub
bound
mov
je
mov
mov
inc
std
inc
sarl
mov
out
js
xor
lock
out
cmc
adc
sti
popf
stos
lds
xor
ror
scas
mov
push
ja
mulb
fsubs
mov
lods
inc
lea
mov
ret
std
js
mov
mov
mov
loope
fmulp
add
dec
push
inc
mov
scas
push
xlat
cli
or
pop
sbb
mov
enter
dec
and
pop
dec
fwait
dec
out
cld
out
jge
outsb
adc
aaa
add
test
and
and
push
and
shll
cmp
adc
cmp
add
shl
notl
mov
xchg
add
outsb
push
gs
xor
xor
cli
pop
sbb
push
js
cmp
dec
arpl
xlat
jle
or
mov
jae
rorl
into
cmp
mov
cmc
leave
pop
or
fdivrs
ja
sti
xchg
xchg
ljmp
rcl
jp
lcall
jno
scas
and
jnp
lea
mov
imul
xor
mov
sbb
loope
imul
mov
push
stos
in
js
pushl
int
push
mov
popa
sbb
add
mov
jecxz
pop
imul
and
in
xchg
push
daa
push
outsl
test
xchg
sbbb
xchg
scas
outsl
scas
repnz
sbb
pop
ja
or
mov
sub
int
test
pop
test
loope
aad
xor
aam
dec
sbb
and
mov
std
jle
fwait
pop
mov
fsubrp
dec
push
xor
jns
mov
dec
fnstcw
add
iret
or
mov
nop
out
xor
lret
pop
or
lret
push
xchg
xchg
or
out
sbb
loope
iret
cs
lods
outsb
out
inc
popl
cmp
xchg
aaa
nop
cli
jl
fcomip
out
mov
loopnew
clc
popf
pop
add
inc
pop
jbe
mov
cs
mov
scas
inc
jno
pop
ljmp
rol
xor
sbbb
shl
cli
cmp
mov
push
popa
inc
sahf
mov
push
out
rcll
xor
push
cmp
rorb
adc
scas
add
push
ja
bound
addb
repz
dec
std
stos
ficomps
test
out
mov
pop
stos
fcoml
das
adc
cmc
out
mov
xlat
enter
or
cmc
into
sbb
outsb
lds
mov
add
repz
iret
push
test
sbb
pop
lret
dec
xor
leave
cmp
pop
gs
xchg
inc
pop
clc
mov
pop
aad
cwtl
js
pushf
xchg
pushl
and
push
sub
lea
fstl
lea
xor
enter
inc
mov
inc
xchg
ret
pushf
mov
insb
mov
add
pop
loope
xor
xchg
cmpsl
dec
cli
rcrb
push
xor
cmp
andb
fisubl
mov
loop
lret
inc
lcall
int
mov
ja
inc
mov
adc
ret
pop
push
idivl
in
mov
cmpsl
and
cltd
leave
inc
xlat
cwtl
popf
sub
mov
cmp
xchg
cmp
iret
out
xchg
hlt
xchg
xor
pushf
cli
or
ljmp
or
loop
rcrl
adc
lock
add
sub
cmp
imul
insb
push
push
cmpsl
cmc
add
shlb
loopne
fabs
jne
les
mov
xlat
int3
push
fisttpl
movsl
push
xchg
pop
dec
and
adc
js
jns
dec
sahf
lds
pop
mov
cmc
pop
fs
addl
fcmovnbe
sub
fwait
add
notb
jmp
cmpsb
outsb
scas
outsl
aaa
mov
jg
cli
mov
or
push
sub
push
lahf
out
fwait
les
ja
cwtl
adc
xor
mov
movsb
mov
fcom
fs
xor
shlb
leave
lret
xchg
add
jno
sbb
insl
sub
xchg
dec
lock
add
mov
outsb
add
in
and
lock
repz
xchg
inc
or
aad
js
ja
mov
mov
insl
mov
arpl
xchg
dec
call
adc
movl
out
inc
jl
scas
cmp
mov
popa
sub
jno
sbb
adc
outsb
out
cltd
hlt
cmp
repz
sub
xor
and
data16
aam
pop
punpckhbw
cmp
push
cmpsb
mov
lock
push
mov
rolb
mov
xchg
dec
movsw
pop
push
lea
fcmovb
cwtl
or
dec
push
cwtl
setbe
dec
fsubs
aaa
ds
or
push
out
mulb
push
xchg
out
cs
push
push
xor
xor
mov
add
jo
and
cli
jmp
leave
daa
fxch
push
push
insl
push
subl
inc
or
mov
cmp
jnp
mov
test
ret
mov
sbb
cmp
push
pop
seto
sbb
pop
int
xor
stos
xchg
jle
cmp
icebp
jg
jne
call
loop
xchg
outsb
adc
adcl
xchg
loopne
stos
inc
fnstenv
pusha
addr16
test
inc
add
sarl
repz
into
pop
addr16
mov
xor
test
sbb
stc
mov
mov
cltd
mov
jp
sub
add
jg
rorl
sahf
inc
loope
ss
inc
xchg
cmpsl
cmp
mov
lds
sbb
in
leave
in
push
loopne
mov
xchg
and
mov
cltd
xchg
aam
mov
lret
sub
mov
sbb
ss
mov
xchg
sub
dec
cmpsb
pushf
push
inc
mov
negl
mov
add
xlat
jno
push
mov
xor
loop
add
aam
ss
jmp
dec
mov
jle
jo
vminsd
popa
cs
arpl
popa
aaa
add
inc
popa
sub
mov
mov
sbb
mov
outsl
inc
loope
mov
add
in
shll
push
bound
test
sbb
cmp
fwait
movsl
mov
mov
ljmp
xchg
and
cmp
mov
sahf
sbb
shlb
inc
xchg
fldt
orl
js,pt
jb
dec
fcmovne
sbb
mov
pop
lock
fildll
lcall
sahf
add
stc
dec
cmpsl
loopne
push
mov
repnz
fisubrs
adc
pushf
cmp
leave
mov
mov
lods
int3
push
mov
mov
mov
call
js
sbb
xor
jo
out
xchg
dec
mov
shll
loopne
mov
shl
inc
add
loop
or
xchg
loope
scas
aas
dec
xchg
pushf
pusha
mov
and
ljmp
xchg
jno
roll
mov
pop
test
xchg
mov
scas
and
dec
xchg
imul
stos
shll
loop
and
ljmp
pop
ret
xchg
arpl
mov
mov
jbe
add
loope
xchg
popa
push
imul
xor
or
dec
push
mov
xchg
stos
mov
dec
sub
dec
mov
jle
push
sbb
mov
inc
ja
mov
mov
push
gs
mov
fwait
xchg
dec
xlat
inc
clc
and
mov
pushf
fcompp
sub
mov
pop
push
popf
insb
in
mov
push
mov
and
mov
imul
outsb
negb
mov
outsb
sub
sbb
inc
ljmp
icebp
jns
sbb
push
push
out
out
subl
outsb
movsb
xchg
push
push
lret
fucom
mov
jg
orb
push
cmc
rolb
sti
lea
test
mov
ljmp
mov
gs
mov
je
clc
cmp
sbb
add
xchg
fs
lds
stos
mov
fdivrl
sub
push
or
movsl
aam
jnp
mov
or
mov
fsts
sub
dec
aam
sbb
shlb
mov
ljmp
cltd
jle
mov
aad
jno
add
jmp
rorl
adcl
shrl
test
push
mov
cmp
or
xor
sub
push
addr16
xchg
adc
cmp
mov
mov
mov
movsl
ja
lock
fisttpl
out
cmp
stos
pop
lret
insl
insb
or
les
push
and
loope
sbb
cwtl
int
sub
sbb
pop
mov
stos
inc
mov
in
mulb
sbb
sub
dec
pop
cmpsl
ss
dec
aam
filds
jl
pop
dec
sahf
sbb
lahf
cli
mov
mov
add
adc
jl
xor
test
adc
data16
push
das
jo
rcrl
addr16
pop
push
dec
add
rcr
aad
push
adc
loope
arpl
mov
jge
lods
push
or
or
sbb
pop
inc
cmp
pop
xor
sub
cmpsl
mov
pop
movb
jb
data16
and
or
loop
loop
jne
enter
push
inc
les
xor
mov
pop
sub
idivl
aad
arpl
pcmpgtb
fidivl
movsl
test
or
fdivrs
add
movl
fcompl
lods
mov
mov
cmp
mov
xchg
sbb
mov
movsl
and
ret
pop
enter
mov
add
scas
pop
jecxz,pt
insb
push
aas
sbb
jmp
in
loopne
mov
test
xchg
mov
jp
aad
push
push
loop
in
fmul
gs
xor
mov
mov
popf
pop
add
loope
sbb
pop
das
shrl
ret
movsl
stos
xlat
xchg
cmp
aad
xor
addr16
push
adc
call
and
inc
aam
mov
aaa
ss
imul
sbb
mov
xor
push
add
adc
out
cmp
fwait
aas
int
push
lcall
mov
rolb
mov
push
or
inc
scas
lock
enter
cmc
bound
jae
mov
fs
jl
or
sub
xchg
mov
push
cld
and
dec
call
stos
mov
xchg
push
loopne
and
test
mov
jge
adc
lea
dec
push
inc
mov
lahf
std
add
xchg
mov
out
int
push
not
jl
xor
add
bound
sahf
sbb
xchg
jne
sbb
adc
imul
push
in
mov
test
pop
jb
inc
fcoml
lcall
pushf
cmpsl
sahf
jmp
cmp
aaa
jae
test
gs
lret
mov
mov
mov
subl
lds
cmp
lret
mov
mov
push
js
mov
std
iret
sub
push
push
dec
pop
push
add
ds
outsl
mov
test
lcall
movsl
lret
and
xchg
fiaddl
xlat
xchg
dec
lea
cmpsl
sbb
int3
aaa
subl
test
and
jp,pn
repz
cwtl
les
mov
push
jnp
or
js
xor
inc
icebp
push
pop
sarb
pushf
sbb
cmp
sbb
ja
and
dec
addr16
add
xchg
push
mov
mov
xchg
in
push
dec
nop
aam
jge
ficompl
sti
cltd
out
test
cmpl
int3
or
cld
jno
sub
popf
fdivrl
ljmp
shrb
and
loopne
xchg
add
lea
lods
movsb
repnz
xchg
insb
inc
cmpsl
aad
sbb
lock
cwtl
pusha
fdivl
out
imul
int3
xchg
cltd
lods
sahf
pop
decb
jne
inc
mov
and
sbb
pusha
imul
loope
pop
mov
ror
sub
add
outsl
test
jns
add
sti
add
cmp
out
adc
test
lea
ret
pop
fwait
lds
rcrl
filds
jl
xchg
addl
lahf
ret
and
and
pop
xor
mov
cmc
fs
stos
add
lods
or
inc
sbb
mov
imull
out
jp
push
out
ljmp
adc
mov
push
sub
mov
lds
push
aad
shr
movsb
mov
ret
lds
addr16
stc
sbb
push
popa
ret
xchg
ret
jne
lods
xor
stc
and
inc
dec
or
add
adc
jb,pt
jle
pop
sbb
push
mov
cmp
cltd
inc
imul
subb
xchg
into
out
in
movsb
mov
pop
lds
adc
mov
jne
test
or
and
cmp
loopne
jbe
daa
jb
aaa
jecxz
inc
adc
add
scas
push
cmc
xor
adc
mov
cmp
sahf
loopne
insl
jmp
dec
bound
inc
jnp
rorb
add
fcompl
xchg
mov
mov
mov
outsb
test
cs
dec
stos
jae
popf
stos
icebp
decb
clc
pop
sbb
imul
jmp
sbb
dec
stos
popa
push
call
inc
sub
fdivs
fistpll
mov
insb
hlt
jnp
repz
mov
sbb
rorb
lods
imul
xchg
adc
xchg
andb
repnz
test
aas
shll
loope
fwait
mov
sbb
xchg
and
repz
mov
inc
xor
adc
adc
lds
and
stc
fidivs
divb
out
xchg
fsincos
lods
popa
testl
dec
pop
mov
popf
sub
dec
and
xchg
mov
in
adcl
repnz
lret
loope
cmp
hlt
out
and
sub
or
or
cld
fstl
pushf
clc
add
insl
xchg
inc
pop
in
dec
push
jne
inc
mov
cmpsb
jns
data16
jl
or
in
cltd
out
add
sub
cmp
mov
add
lods
add
jno
test
sti
pop
lods
push
cltd
add
mov
add
scas
mov
xor
aam
mov
sbb
push
jno
pop
ret
jo
pop
and
dec
loopne
mov
pop
jns
sub
sbb
nopl
jno
and
push
cmp
add
jnp
das
inc
mov
jge
mov
adc
push
je
adc
mov
pop
popf
inc
int3
data16
mov
lock
push
and
cltd
mov
inc
neg
nop
out
notl
lcall
notb
xor
pop
mov
int3
out
bound
xchg
arpl
lret
jp
dec
mov
sbb
inc
sbb
icebp
movsl
and
xor
xor
and
fisttpll
hlt
cmp
insl
cmpsl
sbbb
push
xor
les
mov
add
sub
mov
lret
cmpsb
pop
movsb
and
pop
mov
inc
sub
jo
scas
pusha
outsb
dec
and
pop
rorb
pop
adc
cmc
or
pop
int3
pushw
mov
mov
mov
int3
fstpt
inc
incb
push
je
in
lret
adc
scas
fbstp
imul
shl
jecxz
jnp
push
xor
out
or
xchg
enter
adc
sub
jo
std
in
adc
cmpsb
cltd
pop
mov
jl
push
das
cmp
lods
xchg
subb
sti
mov
mov
lret
movsl
pop
out
sbb
sub
and
sbb
loop
lods
xor
loop,pt
xor
pop
dec
xchg
or
out
dec
xor
fiaddl
and
sbb
jb
pushl
add
clc
sub
sub
popa
movsb
inc
loopne
dec
and
shlb
jp
pop
in
cmp
mov
int
mov
test
neg
xchg
cwtl
scas
cld
mov
pop
das
je
dec
or
cmpsb
in
inc
pop
dec
mov
xchg
idiv
inc
pop
pop
bound
std
shl
leave
cmpsb
int
dec
aas
lock
les
aaa
rorb
mov
test
mov
and
lahf
jb
mov
into
mov
sbb
movsl
int
pushf
mov
fcmovu
outsb
rolb
jne
adc
bound
push
push
dec
testb
cmp
mov
mov
rcll
mov
loope
in
in
xor
xor
shlb
sti
adc
ja
in
repnz
nopl
sub
inc
push
push
add
adc
hlt
push
dec
cmp
loop
repnz
mov
call
and
xchg
or
xchg
inc
dec
fnstsw
push
ja
jns
inc
movsl
and
xor
jle
inc
fstl
dec
out
lcall
imul
rcrl
mov
pop
cmp
cmp
out
popa
and
es
int
push
and
jb
cmp
push
cmpb
jno
es
aam
divb
or
jno
push
dec
clc
test
jbe
mov
or
inc
cmp
mov
lahf
aam
add
testb
das
idivl
js
adc
adc
cltd
cmc
fisttpll
adc
lea
mov
pop
mov
jnp
add
ret
ds
sbb
add
or
dec
lret
lods
cmc
rcll
lods
das
xchg
movsl
push
xchg
icebp
pushf
adc
push
pusha
fbld
and
dec
mov
pop
or
sub
cmc
or
imul
dec
outsb
adc
ja
adc
push
and
dec
bound
mov
pop
in
push
push
stc
nop
push
push
mov
rcrb
out
test
ja
jbe
ss
inc
pop
sub
aaa
push
movsl
adc
xchg
or
sub
pushf
cmp
je
icebp
pop
pop
sub
xchg
cmp
std
mov
push
push
cltd
lret
push
sbb
jno
push
dec
loopne
dec
dec
cli
movsb
dec
lods
xor
dec
xor
imul
mov
aam
addr16
push
jg
mov
inc
jns
pop
push
mov
je
xor
aas
inc
mov
call
push
sar
repnz
pushf
insl
fmulp
popa
cmp
pminsw
inc
js
jl
xlat
cmp
mov
sub
arpl
mov
repz
rolb
xchg
jp
add
je
ss
sahf
mov
xlat
xchg
js
pop
aad
mov
xchg
push
pop
nop
dec
rcll
movsl
push
mov
loopne
push
test
icebp
mov
jle
push
out
fldlg2
mov
cmp
dec
cmove
popa
clc
pusha
push
or
jo
iret
pusha
xchg
scas
mov
shlb
xchg
push
mov
inc
lahf
outsb
fwait
or
loopne
add
push
push
je
add
adcb
pop
incb
cmp
jb
cmp
inc
lods
outsb
mov
cld
lods
push
aam
test
jl
jmp
int
fldenv
sub
jecxz
aam
pusha
sub
repnz
ljmp
dec
xchg
es
or
cmpsb
sbb
sub
orb
sbb
fs
mov
mov
xchg
lret
pop
daa
mov
or
mov
mov
inc
lret
pop
push
test
cmp
dec
mov
loopne
xor
cmpsl
ljmp
aam
dec
xchg
and
ja
sub
xchg
jecxz
pop
insl
aas
or
in
rorl
rcll
pusha
lret
lods
lret
stos
jmp
dec
sbb
aas
xchg
in
xchg
test
out
jl
bound
mov
xor
adc
insl
cmpsb
cmpsl
jmp
cmpsl
xor
nop
popf
lock
dec
inc
das
add
imul
mov
fimull
cmp
inc
mov
sub
hlt
sbb
xor
pop
int
lods
and
pop
or
int3
inc
jne
insb
push
and
sar
nop
add
sahf
add
das
out
add
inc
mov
cli
mov
clc
xor
pop
out
mov
fcoms
nop
out
test
and
adc
inc
shlb
comiss
inc
jmp
mov
mov
sub
mov
xchg
pop
mov
scas
sub
loopne
lret
add
pop
mull
jb
push
add
add
or
mov
pop
mov
mov
push
sbb
pop
dec
iret
sbb
hlt
inc
add
dec
xchg
adc
adc
adc
mov
mov
cmpsl
adc
lods
mov
mov
and
lcall
push
mov
pushf
dec
jge
ss
popa
arpl
stos
fdivl
mov
shlb
sub
dec
adc
cld
add
jecxz
xchg
dec
or
aas
mov
push
insb
in
pop
jmp
dec
push
decl
stc
mov
test
out
shrl
enter
stos
jno
pop
mov
aam
inc
gs
mov
jne
lea
and
pop
stc
add
jo
lcall
pop
and
push
test
jae
jno
mov
or
dec
movl
cmc
jl
jne
pop
xchg
jp
stos
cmp
adc
lds
mov
jnp
mov
fcomi
in
scas
sbb
aas
cmc
sub
fs
lret
push
adc
mov
iret
subb
lret
rcrb
adc
adc
fildll
std
add
aas
sbbb
xor
shl
out
pop
xor
cmpxchg
int
push
sahf
fdivp
xchg
sub
arpl
add
shll
repz
sbb
aad
xor
mov
jb
push
or
pop
push
pop
adc
iret
dec
popf
xor
addr16
mov
vpshufd
movsb
enter
xor
das
adc
jae
push
shll
push
fcoml
mov
xchg
inc
cmp
arpl
cmp
inc
ror
dec
sbb
xchg
mov
lods
mov
scas
mov
push
sub
pop
sub
mov
loop
jae
ja
scas
pop
fidivrs
fisubs
scas
xor
mov
ror
xchg
or
add
inc
cmp
je
jo
push
lods
in
sar
dec
enter
or
xor
gs
sti
xchg
mov
xchg
aaa
mov
mov
inc
inc
cs
fldt
in
xlat
outsl
pop
adc
dec
call
mov
push
stc
pop
in
std
jb
or
ret
aam
sub
mov
repnz
cld
mov
sub
xchg
jno
pop
mov
lret
fwait
out
iret
hlt
add
xor
fwait
sti
adc
fcomps
leave
jo
pop
xchg
rcrb
dec
in
inc
mov
add
and
rclb
push
and
pusha
and
mov
xor
sub
cmp
pop
mov
sbb
mov
mov
inc
push
shrl
or
cmp
xchg
mov
push
inc
stc
movsb
mov
jne
xor
add
outsb
xor
inc
gs
ror
xor
fwait
loope
fnstenv
or
cld
bound
pop
mov
call
scas
cmp
sahf
mov
push
dec
aas
in
cmpsb
xchg
shlb
add
mov
ss
mov
jno
es
jns
in
ret
dec
adc
out
mov
call
in
push
lea
mov
cmp
insl
lea
dec
add
adc
rcll
mov
dec
push
xchg
sub
sahf
mov
mov
gs
leave
inc
xchg
mov
adc
lods
mov
push
pop
jge
lea
sub
mov
dec
jns
movsl
es
out
adcl
sub
mov
nop
and
icebp
dec
fnstcw
lcall
lret
adc
dec
lret
or
jge
mov
xor
setne
loopne
cltd
cmpb
adc
movsl
inc
add
repnz
fwait
adc
out
int
dec
and
inc
push
ds
xlat
or
sub
xchg
out
shll
mov
rcll
sbb
jae
bound
test
mov
cmp
add
in
xchg
and
das
push
les
pop
test
add
and
sub
sub
xchg
jg
or
pop
add
pop
mov
es
loopne
stos
out
dec
movsb
inc
gs
js
mov
adc
adc
repz
enter
mov
fisubrl
imul
and
out
test
movsb
sbb
pop
insb
stc
popa
ss
mov
pop
mov
push
fwait
mov
jne
lahf
mov
stos
movsb
sub
mov
cmpsl
insl
scas
adc
insl
mov
adc
ss
sbb
lods
mov
int
das
shl
adc
jne
mov
sub
inc
fucomp
dec
cmpsb
add
scas
clc
imul
lods
adc
lret
stos
pop
cmp
outsb
xchg
jp
sub
xor
mov
es
imul
jg
adc
add
mov
push
push
pusha
lcall
cmp
inc
jmp
aam
mov
cld
inc
jo
push
addr16
les
iret
or
fs
cmp
jmp
ffree
mov
xlat
cs
dec
sbb
or
jbe
mov
lret
ljmp
repz
mov
push
push
sub
cltd
mov
sbb
mov
popl
sbb
adc
xchg
insb
mov
inc
pop
test
mov
leave
sbb
add
aaa
in
cmp
jecxz
test
add
add
jg
repnz
fwait
ljmp
push
jmp
add
in
adc
fbld
or
fwait
ret
dec
push
fldenv
mov
outsb
jl
and
inc
push
data16
push
jg
leave
adc
lea
loopne
pop
nop
jp
lods
fdivrl
sub
and
adc
mov
ficoms
std
mov
jl
and
pop
int
fidivs
fsubr
inc
in
scas
adc
mov
lods
sub
mov
into
pop
dec
add
xchg
stos
movsb
js
movsb
ss
adc
ret
add
scas
sbb
dec
lea
fwait
or
or
xor
xchg
jge
lods
sub
lret
in
mov
lret
in
rcrb
aad
jge
arpl
sbb
cmpsl
mov
lods
inc
es
in
fsubrs
xchg
dec
fpatan
pop
out
mov
adcl
xorl
pop
out
mov
popa
pushf
je
pop
shlb
cmpsb
lock
fcoms
jae
pusha
adc
sub
js
mov
mov
das
add
and
xor
xor
nop
rcr
mov
mov
repnz
jecxz
inc
jne
out
lret
out
mov
push
nop
mov
and
push
daa
popa
push
pushf
pop
ret
pop
or
cmp
fidivrs
and
mov
mov
jmp
adc
jae
xor
mov
movsb
scas
sbb
inc
push
jl
pop
cmp
mov
aad
jl
xchg
inc
ret
fnstenv
mov
jl
mov
and
stos
and
das
jmp
jnp
adc
cmp
cmp
mov
xchg
enter
mov
out
scas
movsb
mov
cli
pop
out
pusha
mov
sbb
xchg
sbb
sub
mov
or
add
cld
mov
jmp
xchg
pop
pusha
pushf
in
rcll
jg
add
dec
icebp
ds
jl
fs
aaa
loope
cmp
aaa
je
and
or
mov
fwait
add
pop
cmp
idivb
jmp
push
push
push
xor
mov
inc
push
ret
jmp
nop
and
push
icebp
cmp
lcall
cld
sahf
lds
add
pushf
pushf
enter
test
jb
push
jecxz
fnstenv
jns
add
sub
dec
rclb
add
add
out
xor
out
ja
cmpsl
mov
mov
sub
jae
nop
test
xchg
in
call
shll
in
mov
mov
pushf
je
mov
jb
mov
jge
xor
mov
in
and
iret
pusha
pop
dec
sbb
aaa
sbb
loopne
imul
stos
lods
cmp
push
mov
movsl
xor
lcall
fidivs
rolb
aad
sbbl
dec
repz
ds
filds
xchg
js
movsb
ret
push
loope
lods
add
mov
cmp
push
add
loope
push
or
iret
lods
test
cwtl
sbb
iret
push
shrb
fucom
add
dec
call
inc
add
lods
popa
push
sbb
xor
les
jmp
cmpb
xorl
das
and
mov
orl
jg
adc
add
sahf
xlat
sub
fwait
sub
add
fs
enter
rcrb
sub
pop
add
push
into
loop
fildll
shlb
mov
jg
push
xchg
rcr
push
cmp
lfs
mov
and
scas
out
out
lock
stc
cmp
imul
adc
jae
dec
rcrb
push
pop
and
cmp
push
dec
ja
xor
cli
testb
outsb
cmp
sahf
jg
lcall
add
mov
push
mov
lret
dec
mov
out
rcl
push
pop
test
pushf
mov
mov
mov
lret
pop
enter
pop
add
push
sbb
fldl
loopne
dec
into
pusha
mov
push
sub
and
ljmp
leave
and
push
push
rcl
loope
jbe
stc
js
pop
stc
shl
aam
xchg
sub
daa
xchg
mov
lods
mov
xchg
pop
lret
pusha
testl
mov
sub
pop
adc
lret
sbb
push
jno
xor
test
mov
jo
arpl
xor
fadds
dec
push
push
or
add
dec
lea
jns
es
jp
and
mov
lods
daa
jb,pt
int
rcrl
push
jp
lods
fmuls
dec
inc
push
outsl
xor
jne
in
addb
dec
xchg
loopne
jo
into
jb
xor
ljmp
add
repz
mov
pop
daa
sbb
decl
sub
sub
daa
lock
sbb
ret
fstpt
js
stc
dec
imul
ds
outsb
mov
fdivs
out
scas
into
cmp
cli
enter
loop
sbb
push
dec
movsl
scas
sub
lds
rcrb
sub
xor
mov
int3
arpl
add
fstp
mov
sahf
sub
cmp
fnstenv
insl
jecxz
sub
sbb
lcall
jp
cli
push
inc
ljmp
add
pop
and
pop
gs
and
mov
test
jmp
dec
sub
lea
cmp
mov
inc
test
fstl
mov
mov
inc
jbe
outsb
sbb
mov
out
mov
inc
leave
cmp
adc
clc
jne
scas
jmp
in
gs
and
test
inc
xorb
inc
pop
mov
cli
mov
loope
test
sahf
aam
lret
inc
insl
inc
fldcw
or
rorl
push
and
js
aaa
add
pop
cld
add
sbb
adc
sub
adc
mov
dec
xor
js
mov
pop
fnstsw
dec
push
sbb
add
scas
mov
mov
lock
cmp
and
or
idivl
mov
mov
sub
push
aaa
shll
sub
lret
addb
mov
inc
fnstcw
pop
jg
cmp
add
or
popf
or
mov
sti
jg
insl
mov
sbb
cmp
mov
arpl
dec
mov
outsl
test
shll
ja
popf
roll
fdivrl
lahf
push
icebp
and
aam
sbb
iret
inc
cmp
insb
xchg
push
xor
xor
leave
js
loope
add
aas
add
cmp
in
daa
push
push
mov
aas
popf
xchg
pusha
ficoml
jecxz
cli
cmpb
mov
xor
arpl
ljmp
xchg
loopne
xchg
arpl
xchg
lock
xchg
cmp
xchg
inc
push
hlt
popa
pushf
out
fcmovu
cmp
mov
into
mov
sub
add
cli
in
mov
in
sbb
lret
cltd
imul
push
add
in
call
push
lret
sub
xor
lods
sub
imul
pop
lcall
movsb
ficompl
fidivs
pop
mov
lds
inc
daa
and
mov
ja
sahf
xlat
pushf
arpl
rolb
outsl
or
and
or
filds
ja
or
in
mov
movsl
cmp
addr16
cs
dec
andb
out
sbb
fs
mov
enter
inc
out
mov
sarl
cmp
pop
mov
call
lods
test
push
bound
mov
pop
dec
nop
mov
ja
ss
push
add
enter
fdivl
add
test
dec
in
cmp
or
cmpsl
push
inc
daa
jg
sti
in
adc
xor
fdivrs
lods
rorl
add
jns
pop
adc
aam
adc
sti
xor
shll
pop
into
cld
lods
loop
fstpt
dec
xchg
aaa
ret
and
ss
lcall
cli
cmp
loope
cmp
xchg
push
jnp
in
push
mov
fwait
cmp
daa
mov
mov
rcr
adc
movsb
jg
mov
push
jne
insl
mov
mov
mov
movsb
pop
icebp
xor
mov
shl
imul
nop
adc
add
dec
add
popa
sbb
lods
jg
xchg
imul
ja
mov
pop
push
jl
adc
dec
cltd
ja
sbb
stc
jne
cmp
js
rclb
test
outsl
xchg
push
clc
cmp
leave
daa
mov
dec
aam
pop
in
fwait
mov
push
imull
xchg
mov
shlb
lret
pop
mov
loope
mov
in
test
push
aas
arpl
fstl
scas
or
lahf
pop
popf
xor
dec
loopne
cmp
sbb
or
cltd
cmp
adc
test
inc
addr16
add
idiv
jnp
jne
dec
push
jle
sub
inc
add
push
cs
leave
mov
pop
je
xor
scas
adc
dec
mov
addr16
aaa
mov
mov
or
lret
push
pop
xchg
les
stos
lds
es
xchg
test
jno
xlat
sbb
mov
cmp
push
les
and
mov
or
jg
pop
inc
mov
or
cmp
lahf
test
dec
sbb
fidivrl
inc
sub
scas
das
xor
or
mov
dec
mov
pop
mov
mov
mov
sbb
lods
loope
and
shrl
xchg
arpl
stos
jb
js
enter
mov
cld
into
cmpsl
ret
scas
in
sbb
jle
or
push
nop
inc
mov
adc
ljmp
mov
mov
cmpsb
sub
xor
dec
jmp
jae
adc
pop
push
push
mov
mov
add
mov
sub
aaa
ret
or
in
cmp
jmp
aaa
arpl
arpl
xchg
stos
push
test
mov
sbb
sahf
xor
mov
mov
das
add
flds
and
push
xor
mov
pushf
std
aam
jns
je
inc
iret
leave
clc
lods
arpl
lcall
pop
in
scas
sbb
mov
enter
cmp
jno
cmpsb
lea
mov
cltd
in
fs
dec
adc
dec
adc
mov
inc
and
sti
outsb
cmp
pop
pop
int3
fsubrs
adc
js
inc
je
push
add
lods
test
sub
pop
mov
arpl
pop
jmp
bound
js
add
pop
pop
jmp
sbb
or
or
gs
jle
std
lahf
rorb
aas
add
inc
and
stc
xor
ljmp
and
xor
pop
add
stos
mov
dec
inc
jle
gs
dec
data16
in
xorl
and
cmp
jbe
push
xchg
ss
lahf
cltd
scas
xchg
jb
ds
fistpl
orb
pop
hlt
jge
and
lods
sbbb
dec
ljmp
mov
test
insb
int3
cmp
cmc
ljmp
mov
and
dec
push
sbb
sbb
scas
dec
sbb
xlat
cmp
movsb
jmp
or
mov
xchg
sarl
mov
adc
stos
scas
add
in
xchg
pop
add
or
mov
or
xlat
push
jno
push
dec
cwtl
test
stos
xchg
ljmp
imul
std
fwait
and
adc
test
push
adc
mov
push
movsb
jge
push
pop
dec
pop
arpl
test
mov
jbe
jl
movsb
stos
out
mul
fs
scas
lds
cmpsb
ds
dec
inc
jne
scas
or
test
outsl
mov
nop
mov
jecxz
cmpsb
pusha
fwait
out
and
xor
mov
sbb
movsb
mov
pop
adc
or
je
xor
les
loope,pt
insb
mov
push
cld
push
cld
xchg
mov
scas
sub
lods
mov
fcompl
inc
mov
std
movsb
insl
inc
lret
jg
xrelease
repz
int3
pusha
push
adc
cmpsb
jns
cmp
adc
leave
es
xlat
dec
push
imul
call
scas
call
cld
out
dec
cmp
jle
movsb
frstor
inc
aaa
mov
lea
add
mov
loopne
scas
add
cmp
mov
mov
lret
stos
data16
pop
add
adc
imul
xchg
mov
rol
sbb
out
pusha
dec
cwtl
jg
shlb
outsl
push
jno
popa
push
into
mov
add
daa
scas
leave
dec
cmp
and
es
mov
mov
sbb
cld
lds
test
add
mov
or
cltd
cs
iret
in
shrb
sbb
inc
add
pop
fmuls
das
fadds
insb
and
mov
int3
push
jns
xchg
fmulp
cmp
push
pop
mov
flds
xchg
pop
lret
addr16
add
and
clc
adc
call
out
pop
mov
xor
pop
clc
sub
and
clc
sbb
xor
mov
shlb
xchg
movsl
inc
jmp
into
mov
cltd
inc
lret
mov
xchg
shlb
jbe
mov
cmp
lret
lds
scas
jmp
pop
push
repnz
orl
dec
ja
lods
insb
mov
bound
aas
jo
xchg
stos
pushf
adc
xchg
add
jle
jne
sub
push
push
lahf
loopne
fildll
cmp
jb
add
or
pop
fs
jne
rclb
and
xor
cld
ja
aad
xor
fwait
iret
cmc
pushf
jnp
xchg
cmpsb
xor
pop
mov
pop
es
shll
jmp
shll
mov
xchg
jmp
divb
imul
xchg
adc
mov
and
jle
pop
inc
cli
mov
sbb
lcall
notb
sbb
je
test
scas
in
jmp
mov
ret
jns
dec
aaa
rorl
add
xchg
mov
jo
mov
shlb
ljmp
add
les
cmp
mov
sbb
in
cltd
jecxz
aam
sahf
bound
ret
add
dec
cltd
pop
ret
daa
jnp
pusha
pop
mov
xchg
lea
cltd
mov
ss
jb
sarb
push
mov
cmpsl
mov
out
cmp
sub
aam
enter
fwait
sub
xor
dec
jge
subl
loope
out
add
loopne
mov
notb
inc
cmp
mov
sahf
mov
sbb
jp
mov
int
pop
ficompl
loopne
fisubs
cmp
dec
pop
cld
mov
and
jp
out
inc
lods
mov
push
mov
xor
lahf
push
xor
inc
pop
scas
imul
loop
clc
outsb
fisubs
movsb
das
sbb
imul
out
dec
lret
jno
jbe
cmp
gs
pop
fldenv
jl
jns
sbb
dec
xchg
mov
xchg
mov
lds
mov
pop
mov
lea
enter
movl
push
xchg
mov
sbb
ljmp
adc
pop
pop
es
test
add
jmp
test
add
nop
xor
shll
lret
inc
push
cld
aam
iret
gs
rolb
and
mov
mul
mov
pop
out
rcr
sub
add
sub
add
mov
ljmp
addl
test
sbb
cwtl
loop
loop
enter
loop
clc
movl
jecxz
movsb
cwtl
iret
cltd
or
push
mov
adc
sub
insb
pop
rcrb
mov
fisubl
mov
xor
cmp
in
roll
jmp
pop
sbb
mov
xor
mov
fcoml
adc
sub
dec
fldl
and
or
movaps
jmp
cld
push
add
cmp
xor
mov
xor
clc
xchg
lds
popf
push
mov
or
add
shll
pop
or
int3
mov
cltd
dec
jmp
outsl
mov
stc
inc
dec
out
sahf
xchg
rcll
das
mov
push
leave
je
loope
loope
jmp
scas
lcall
and
lret
mov
fisttpl
enter
dec
adc
dec
jle
std
aas
push
push
pushf
jbe
sarb
lret
sub
inc
inc
sarl
pop
mov
pop
pop
jge
data16
rorb
fsubrs
xlat
mov
push
mov
out
cltd
mov
shl
pop
mov
aad
inc
out
xchg
jns
ljmp
sbb
rcr
xor
lea
scas
hlt
cmc
les
scas
sarl
rorl
add
dec
adc
outsb
sbb
lods
and
cmp
xor
mov
into
push
push
lock
pushf
leave
repz
pusha
in
scas
adc
inc
add
mov
pop
rclb
pop
je
or
inc
sahf
mov
data16
ret
jns
lock
jecxz
push
xor
sar
sbb
out
leave
idivb
test
xchg
nop
jle
test
inc
xchg
and
in
fnsave
jg
xorl
insb
and
or
add
jo
push
movsb
sbb
add
xchg
mov
pop
xchg
push
filds
in
add
aas
orb
pop
cld
fidivs
mov
push
adc
loopne
mov
iret
adc
mov
inc
stos
xorl
mov
cmpsb
adc
sbb
mov
sub
call
mov
mov
xchg
in
out
nop
sahf
mov
lahf
pop
cltd
mov
dec
and
mov
lret
jg
mov
in
sub
ret
mov
xor
and
pop
mov
rcrl
repz
test
jns
xor
or
cmp
lds
arpl
insl
jle
shrb
jecxz
mov
adc
faddl
cmp
mov
negl
cmp
hlt
cld
sub
push
lock
stc
xor
int3
xchg
sub
inc
adc
cmc
cltd
xor
std
push
into
and
mov
js
push
fwait
adc
add
lret
xor
or
xor
adc
lcall
adc
dec
lods
add
mov
fdivl
shll
add
mov
inc
dec
inc
call
out
pushf
sub
sbb
jge
add
testl
movsb
lds
outsl
dec
pop
xor
push
cmp
pop
out
push
pop
mov
or
jns
enter
hlt
inc
pusha
and
test
mov
cld
cs
rcrb
pop
push
data16
lahf
add
mov
jo
aaa
loope
mov
sbb
mov
lret
pop
adc
shll
test
xchg
repz
cmp
xor
cmp
mov
sarb
push
cwtl
jb
push
mov
dec
mov
insb
mov
popf
cmp
pushf
sbb
xor
and
leave
ja
or
insb
loope
orl
sti
or
fcoml
adc
in
and
cltd
mov
testl
cmpl
adc
lcall
pop
mov
sub
add
idivl
mov
sbb
push
pop
aaa
loop
mov
sub
mov
and
xor
xchg
pop
mov
lret
repz
inc
lods
mov
xchg
sub
stos
dec
xchg
xchg
inc
sti
mov
rorb
fisubrl
cmp
xor
cmpsb
inc
clc
and
sti
mov
mov
in
push
outsl
cmp
mov
popf
sub
inc
jns
dec
nop
sbb
push
sti
mov
or
pop
stos
in
mov
lods
mov
inc
xchg
mov
lret
std
iret
dec
fistl
out
addl
jo
mov
add
inc
mov
int3
mov
std
lods
jl
jns
imul
cmc
sti
push
xchg
adc
pop
rorb
in
sbb
sub
mov
cmpsl
incb
icebp
call
in
dec
jmp
pop
daa
push
push
sbb
push
cmpsl
lcall
push
adc
push
enter
fidivrl
mov
jmp
mov
and
mov
mov
lds
repnz
movsb
ja
hlt
pop
cwtl
xchg
add
pop
repnz
rcll
cvtps2pi
sub
andb
inc
jo
ret
add
jno
lods
in
movsl
or
cmc
pop
mov
loope
aas
xor
inc
sbb
push
jl
fildll
push
bound
xor
push
ss
pop
out
xchg
rorl
jns
imul
mov
js
jp
adc
inc
movsb
andl
stc
rcrl
push
add
sbb
mov
jecxz
cmp
xor
pushf
test
in
push
lahf
xchg
inc
lds
leave
inc
mov
mov
pushf
mov
inc
mov
fsts
inc
sub
stos
jo
pop
inc
mov
outsl
sti
fwait
loopne
lods
int3
cmp
ret
pop
orb
and
inc
push
out
and
rcll
pop
pop
add
sbb
inc
dec
das
out
add
pop
adc
ret
inc
cli
jmp
push
rep
orb
lods
icebp
into
repz
push
cli
hlt
mov
rol
mov
scas
and
inc
xor
loope
add
arpl
xor
mov
movsb
mov
inc
test
add
insb
mov
add
add
dec
clc
lcall
dec
cmp
xlat
xlat
push
xor
lock
cmp
inc
daa
mov
xchg
insb
mov
int3
cs
test
pop
mov
mov
jae
pop
adc
test
push
dec
fdivrs
test
ret
jle
popa
push
scas
inc
mov
sbb
inc
in
shlb
nop
dec
mov
and
sbb
stos
nop
adc
movsb
add
fisubrl
repnz
xchg
imul
or
enter
in
dec
mov
imul
popf
mov
sbb
pusha
xchg
xchg
pop
pop
loopne
mov
jns
jecxz
fcmovu
sbb
les
sub
xor
pop
popf
add
cmp
cmp
mov
adc
mov
popl
jmp
int3
movsb
fidivrl
sub
push
xchg
push
mov
xor
mov
out
lret
xchg
dec
test
mov
and
pushl
jo
mov
loop
popf
int3
dec
mov
pop
add
adc
sub
pop
jp
add
jae
dec
inc
jge
add
aad
jp
es
jmp
cli
add
std
mov
ret
ss
cmp
int3
lock
sbbb
mov
dec
out
aam
test
repz
fcoms
xchg
into
enter
dec
addr16
push
xor
jmp
sub
and
pop
xchg
cmp
sbb
rcrb
jno
push
cmc
cmp
lcall
xlat
and
rcrl
add
pop
sti
push
fwait
jl
xchg
scas
loope
lock
sub
sbb
out
gs
idivl
outsb
test
cmc
int
fisubrl
push
stos
cwtl
xlat
mov
cmpb
fstpl
cmp
cld
push
dec
ja
push
jle
jle
sub
pop
test
sub
push
popf
int
hlt
add
push
push
jl,pn
clc
xchg
push
mov
and
mov
jno
bound
cs
cld
xorb
adc
rolb
push
dec
outsl
add
insl
lods
and
xor
mov
or
push
jmp
xor
js
cmp
dec
pop
jp
or
movsw
mov
addl
lahf
cmp
cmpl
jecxz
test
xchg
mov
sti
test
jb
loop
adc
dec
loop
xchg
add
cmp
mov
dec
lret
dec
pop
lret
push
mov
mov
repz
adc
mov
xor
imul
push
or
int
stc
rolb
insl
xor
mov
jbe
aaa
out
loop
xlat
sbb
pop
in
or
inc
pushf
push
sbb
das
adc
jp
cmc
cmp
push
jo
adc
scas
adc
push
cmpl
push
jmp
pop
lret
stc
and
xchg
ret
outsl
cmp
sub
cltd
mov
xchg
testl
cmpl
popf
popa
dec
mov
push
dec
xor
imul
les
xchg
mov
and
pusha
adc
testl
shlb
imul
aad
jp
test
adc
xor
mov
mov
add
adc
mov
mov
ss
bound
add
lret
jbe
pop
dec
add
jecxz
or
into
add
mov
pop
lds
into
jno
adc
out
xlat
gs
adc
xchg
iret
rcll
add
shlb
sub
push
mov
sub
pop
in
mov
pop
pop
xchg
inc
ja
jne
dec
daa
insb
jno
add
je
test
fldcw
mov
loop
sub
and
push
fwait
jp
push
test
mov
inc
adc
or
shlb
out
test
sbb
lcall
adc
pop
mov
movl
mov
cmp
outsl
pop
mov
jle
in
add
xchg
cmp
jbe
jae
iret
out
lods
gs
in
cmpsb
lods
xor
jbe
orl
outsl
lock
cmp
cli
pusha
out
movsl
add
mov
out
insl
stos
sbb
std
aad
stos
fcomip
popa
scas
sub
add
fcoml
mov
mov
jl
inc
adc
cmpl
add
cld
adc
cmp
cmp
pop
jmp
loopne
daa
adcl
leave
push
pop
push
subb
dec
pop
dec
stc
jl
cltd
add
adc
aaa
in
fnstsw
sahf
pop
jp
adc
cmp
icebp
mov
bound
xchg
xor
sub
mov
or
pop
arpl
scas
mov
icebp
cmp
hlt
mov
add
insb
gs
sub
or
es
jmp
lock
mov
icebp
ljmp
inc
add
inc
call
sub
push
scas
adc
imul
loope
lret
xorl
js
push
pop
rcrl
mov
xchg
pop
popa
pop
mov
arpl
add
pushf
lock
inc
cmp
out
mov
outsb
sub
inc
xchg
adc
shl
imul
inc
insb
aam
mov
dec
dec
daa
xor
shrl
jmp
outsb
mov
sbb
in
pop
mov
pop
mov
jge
ljmp
push
mov
push
add
std
test
shl
or
dec
mov
pop
mov
scas
mov
cmp
or
mov
lea
cwtl
mov
sub
pop
ret
movsl
inc
jp
push
dec
cld
push
pop
in
ficoms
popl
mov
lahf
and
not
adc
fcoms
outsb
in
cld
arpl
dec
cli
mov
dec
xchg
xor
popf
into
subl
jo
pusha
pop
mov
imul
lea
cltd
std
xorl
jns
clc
or
cltd
stos
ds
out
add
cmpb
cs
push
dec
enter
add
insl
mov
inc
ret
outsb
fimull
mov
scas
xchg
or
out
loope
adc
add
cmc
fs
or
sahf
hlt
push
dec
ss
pop
jnp
data16
push
arpl
ja
and
ljmp
cmp
rcr
jl
lcall
bnd
sahf
xor
jle
push
std
aaa
inc
aad
mov
fldt
jb
dec
xchg
es
pop
loope
mov
push
shlb
add
mov
das
or
xchg
in
test
mov
mov
inc
in
sti
mov
push
jecxz
pop
stos
xchg
mov
call
inc
sub
mov
fmul
cmp
cwtl
cmp
sbb
mov
sub
ss
aas
jg
aaa
pushf
push
sahf
cmp
pop
insb
mov
and
jmp
sub
in
ficoml
sbb
arpl
xor
mov
xchg
adc
imul
mov
insl
pushf
sbb
call
cmpsl
or
out
and
js
int
lods
pop
jge
mov
dec
int3
test
mov
incl
loopne
cwtl
or
add
hlt
xor
pop
dec
mov
outsb
or
in
pop
jae
xor
lods
dec
ret
mov
xchg
data16
and
push
imul
push
xor
adc
jle
or
es
cli
das
push
cmpsl
dec
roll
mov
mov
in
test
inc
sbb
std
jnp
xor
xor
iret
test
sar
sti
enter
pop
xlat
pop
sbb
and
adc
and
lods
xor
insl
pop
fucompp
jae
cmpsl
frstor
cmp
aaa
stc
sub
je
in
daa
stos
xchg
imul
dec
fsubl
out
aas
jp
fstpt
push
sbb
xor
ror
sub
mov
pop
xor
jbe
mov
mov
adc
lods
pop
push
and
inc
mov
mov
or
pop
lds
roll
outsl
mov
lock
mov
aam
repz
adc
les
addb
push
sbb
call
iret
jge
xchg
dec
cmpsb
dec
and
adc
gs
push
cmp
inc
cmp
push
stc
pop
int
fadds
arpl
popa
pop
xor
sbb
fcoms
jmp
mov
aad
movswl
sub
inc
push
fneni(8087
add
pop
pop
or
sti
loop
les
cmp
sbb
movsb
xchg
test
push
mov
cmp
sbb
mov
scas
mov
jmp
unpcklps
xor
inc
lahf
mov
pop
lds
and
je
xchg
repnz
scas
lds
jmp
imul
std
orl
push
frstor
adc
dec
pop
pop
mov
lcall
mov
cld
js
or
aaa
ss
mov
scas
sbb
pop
lret
push
test
mov
xchg
xchg
xlat
mov
addr16
inc
add
push
in
scas
lret
dec
leave
lcall
xchg
cld
pop
xor
outsl
jb
clc
dec
aad
push
sti
test
jne
or
adc
aad
jno
in
cmc
pop
in
ljmp
ret
xor
fsubl
xor
adc
push
cmpsl
lret
and
adc
dec
jns
cmp
sbb
xor
or
leave
xor
sbbb
xlat
dec
push
dec
cmp
mov
subb
popf
sub
insl
inc
les
pop
xchg
jge
mov
cmp
cmpl
xchg
divb
stos
pop
cmp
add
dec
jb
add
popl
push
outsl
jmp
int
sti
or
pop
jecxz
push
insb
imul
movsb
daa
in
cmp
jmp
or
lods
jnp
cmp
sbb
std
mov
addl
mov
aaa
dec
adc
scas
pop
idivb
push
add
inc
sbbl
xor
ja
inc
imul
fisttpl
cmp
or
mov
and
xchg
ret
sub
inc
cmp
jae
push
adc
pop
mov
repnz
in
inc
lods
in
fsubl
cmp
cmp
sbb
lods
mov
ds
out
cmpsl
dec
xor
push
lods
bound
add
mov
pop
xchg
jbe
sahf
out
pop
jb
xor
jmp
adc
xor
inc
jne
push
in
sti
mov
mov
scas
ud1
jle
pop
shl
add
push
mov
cmp
mov
xchg
cmp
test
inc
push
mov
mov
lahf
movsl
cmp
pop
iret
sub
mov
out
pop
aad
xchg
mov
adc
pop
mov
adc
jmp
mov
ds
pop
repz
fwait
cli
ret
jne
jl
fmuls
mov
rcll
pop
test
push
in
inc
fistps
and
mov
push
jle
xchg
dec
fstpt
xorb
mov
pop
jle
ja
into
add
inc
add
add
arpl
jl
aad
sbb
add
leave
hlt
xchg
ljmp
pop
leave
mov
mov
mov
hlt
mov
jbe
lock
fstpl
js
push
in
aaa
inc
pop
icebp
lahf
xor
mov
data16
mov
jp
in
pushf
dec
imul
push
aaa
xor
aaa
clc
cmp
das
jnp
fldenv
jl
ret
xchg
mov
or
fistl
js
jp
icebp
or
xorb
cltd
ja
andb
test
cmp
fs
adc
jl
push
int3
sub
push
dec
fs
mov
pop
dec
cmp
rclb
mov
outsb
inc
aaa
stc
push
xor
insl
stc
or
ds
mov
popa
mov
pop
xchg
adc
repnz
push
out
into
dec
repz
repz
lret
and
pop
mov
push
mov
pop
fs
mulb
mov
dec
imul
popl
insl
xchg
add
sahf
fmuls
add
mov
jmp
out
push
sbb
xchg
jbe
cmp
or
jle
lahf
or
sbb
push
cmp
in
mov
jns
jno
cmc
adc
cmp
add
in
xchg
addr16
outsb
cwtl
mov
cmp
jbe
repz
and
fcoml
adc
cltd
pushf
mov
daa
pop
mov
iret
mov
adc
jmp
mov
sbb
mov
push
lods
call
dec
mov
andb
inc
clc
ficomps
mov
lods
add
addr16
jne
lcall
cltd
cli
pop
rcll
aas
inc
and
jb
dec
orb
sbb
xchg
fwait
rclb
sbb
xchg
dec
mov
xchg
popf
and
bound
push
and
cwtl
call
xor
add
movsb
mov
cmpb
iret
mov
pop
outsl
test
xchg
xchg
sub
jnp
movsb
outsl
aad
inc
jp
test
pop
cli
sub
aam
loope
jg
jge
xchg
clc
testb
mov
rorl
adc
in
jmp
jns
inc
jp,pn
in
f2xm1
mov
or
mov
mov
cmp
pop
incl
outsb
inc
lods
dec
pop
push
rcll
xchg
pop
adc
cs
mov
sbbb
icebp
movsb
outsb
aam
icebp
les
stos
ret
and
pop
ret
imul
into
dec
out
push
adc
xchg
sbb
mov
aaa
xor
out
loopne
push
sub
or
mov
sub
pop
xor
inc
in
mov
stos
mov
mov
mov
sbb
scas
arpl
add
push
jg
dec
dec
adc
lods
dec
les
and
cmp
aad
cltd
sbb
mov
xchg
pop
sbb
in
mov
jns
fistps
sub
fmul
fiaddl
jle
addr16
and
scas
test
test
pop
sbb
int3
into
bound
sbb
sbb
cmp
mov
pop
or
lods
xor
or
mov
add
mov
lods
xor
cltd
das
gs
xor
mov
mov
xchg
inc
js
ss
filds
nop
mov
ret
andl
fisubl
and
orb
inc
lahf
sarl
ret
dec
dec
mov
adc
or
jmp
repz
movsl
jb
popl
jo
lahf
pusha
push
into
mov
fsubrp
sub
ja
dec
shrl
leave
loopne
pop
imull
into
dec
stc
mov
test
lock
xor
sub
loop
adc
push
pushf
xchg
loopne
loopne,pt
test
cltd
ss
add
pop
call
inc
pop
lods
fistps
stos
xor
jmp
sar
dec
xchg
mov
add
sub
jae
dec
idiv
in
adc
push
mov
call
sbb
lods
test
mov
js
push
das
xor
or
into
dec
jle
push
les
cmp
adc
lahf
repnz
test
pop
rcrl
adc
push
and
pop
jg
pushf
mov
cmpsl
or
sub
add
dec
xor
aas
pop
pcmpeqw
jecxz
int
shlb
call
pop
into
gs
inc
ret
aam
std
sbbb
pop
xchg
jne
scas
or
fisttpll
lret
add
sub
pusha
sahf
and
push
and
call
dec
xor
push
xlat
in
add
sti
scas
xchg
adc
mov
jge
dec
fidivl
cmp
fcoml
clc
lret
and
sbb
xchg
push
movsl
xlat
pushf
in
jo
xlat
and
sbb
fs
pop
add
sbb
dec
push
xchg
mov
cli
inc
sub
movb
std
int
aaa
cli
icebp
aad
mov
aam
cmpsb
add
push
test
fisttpll
shl
dec
out
lahf
shlb
jl
add
xlat
insl
inc
test
pop
in
sub
jecxz
mov
in
loop
cmp
insb
push
hlt
cmp
hlt
scas
scas
jecxz
cmp
mov
jmp
gs
sub
lahf
pushf
adc
fsubl
inc
xchg
sar
and
inc
iret
mov
mov
sbb
sbb
sbbl
int
dec
push
adc
inc
adc
mov
or
mov
inc
xor
dec
xchg
stc
mov
cmp
out
cltd
addr16
daa
push
inc
imul
xchg
out
movsb
ja
xchg
or
daa
je
or
subl
dec
in
lahf
push
adcl
lods
popf
fdivrl
jmp
push
sub
popf
add
clc
push
int
insl
push
ja
adc
mov
loopne
das
sarb
cwtl
push
ficomps
mov
sub
push
divb
bound
mulb
in
add
js
jns
lret
mov
repnz
dec
ret
mov
mov
int
sub
call
sarb
mov
test
es
adc
add
popa
andl
in
jg
sub
dec
push
mov
out
pop
cltd
leave
aaa
aas
shlb
insb
jge
stos
xchg
jle
daa
dec
and
pop
or
fstp
popf
scas
ljmp
fsubrl
das
xchg
pusha
push
cmc
push
and
sbb
mov
insl
push
repz
dec
and
data16
jae
ret
jnp
sub
push
sub
ficompl
inc
pop
fwait
or
loop
dec
lock
adc
cmpsb
lret
clc
mov
adc
leave
xchg
add
test
xchg
sub
fdivrl
test
xchg
int3
rcrb
inc
jmp
ja
mov
mov
sbb
lcall
or
jecxz
rorl
test
jnp
js
add
ret
je
add
push
test
pop
inc
mov
mov
pop
fsubl
pushf
scas
in
pop
pop
icebp
push
subl
inc
addl
push
fld
mov
sbb
push
ljmp
loope
pop
clc
inc
lock
pusha
pop
fldenv
sub
mov
pushf
shrl
push
aam
xor
icebp
xchg
inc
lds
sbb
xor
inc
loope
xchg
inc
cmp
push
add
enter
mov
fisttpll
shrl
aaa
sti
cmp
imul
and
mov
mov
jae
cmp
movsb
xor
addr16
jle
sbb
popf
jne
sbb
inc
xor
xor
leave
push
inc
test
xor
lods
cs
lahf
bound
movsl
aam
adc
jmp
fadds
or
dec
pop
les
push
inc
and
cmpsl
adc
mov
rclb
mov
aad
imul
cld
cmp
mov
and
sbb
xchg
sbb
out
xchg
adc
hlt
cli
mov
scas
outsl
xor
jmp
push
inc
imul
loope
mov
dec
xor
xor
sub
es
fadd
call
shll
ss
jbe
addr16
jg
push
outsb
fs
xchg
addb
push
out
push
clc
push
inc
pop
repnz
lret
popf
or
jle
pop
xor
ljmp
jns
dec
or
inc
ljmp
rclb
sbb
pop
mov
out
mov
nop
fisubrs
inc
push
int
mov
sub
mov
in
pushf
icebp
inc
pop
icebp
fstps
xor
push
pop
pop
jae
jae
push
mov
or
adc
xchg
out
jle
aam
test
out
xchg
xchg
lock
push
inc
sub
rclb
enter
jg
test
jp
leave
mov
sub
sahf
decb
mov
cmp
push
inc
pop
mov
icebp
lahf
push
movsl
out
sti
iret
adc
mov
xchg
lahf
dec
adc
pop
push
pop
ret
int3
cmpb
sbb
inc
add
fsts
xor
negb
in
leave
jl
sarb
dec
cwtl
sbbb
mov
cmp
dec
jl
arpl
and
movsl
xor
mov
adc
aad
out
push
or
cmp
lcall
sbb
add
pop
fwait
jge
mov
test
stos
xchg
xor
mov
xor
cwtl
ret
dec
andb
mov
or
xor
cmpsl
mov
adc
xchg
xor
adc
lret
hlt
stc
inc
es
ds
in
cmp
sub
cmp
loop
shl
stos
or
lods
sub
push
add
push
adc
ret
and
test
lcall
push
dec
int3
cmp
and
or
pop
rorl
or
and
and
cmp
test
xchg
sub
in
lret
xchg
add
je
inc
jne
dec
mov
pop
adc
jmp
in
pop
and
sub
add
mov
test
push
push
jbe
sbb
mov
cmp
dec
pop
inc
hlt
mov
in
repz
dec
ficompl
cmc
fsubl
xor
sbb
enter
aaa
js
test
test
pop
xchg
bound
pop
adc
mov
sbb
add
scas
sbb
adc
int
dec
push
jge
pop
cmp
cmp
insb
cwtl
arpl
jg
mov
adc
jns
cltd
mov
or
in
int
test
xchg
std
imul
sub
ss
mov
mov
lahf
mov
test
mov
mov
roll
push
lods
sub
mov
dec
xchg
cli
pop
ret
mov
daa
jnp
jg
mov
int3
outsl
mov
mov
je
push
insl
or
popl
fwait
mov
pop
inc
aam
jnp
inc
adc
sub
pop
sub
jbe
es
dec
scas
jne
dec
int3
xchg
scas
jge
inc
push
out
xchg
sub
sbb
fstpt
and
adc
dec
xor
movsl
jg
in
and
shll
scas
int3
daa
adc
out
gs
movsl
push
mov
sbb
fbstp
pop
cli
sub
mov
arpl
jae
pop
outsl
push
andb
xor
loopne
mov
push
jle
pusha
pushf
pusha
imul
lahf
test
insb
test
xchg
adc
andl
or
aam
test
and
loope
pop
jnp
loope
sbb
mov
mov
test
dec
sub
dec
push
loop
cmp
or
dec
cmp
xchg
sub
insl
jae
adcb
les
aas
adc
rorl
jg
pop
sub
dec
push
jp
popf
cmp
lcall
pop
inc
into
ret
test
xlat
fdivrl
push
ss
orl
push
dec
dec
pop
std
nop
lcall
xchg
ret
inc
subb
xchg
lcall
fs
loop
mov
js
lahf
pushf
add
outsb
test
shl
xor
fmuls
data16
pop
into
shld
outsb
leave
enter
pop
pop
add
cli
cmc
push
push
push
push
mov
loopne
mov
add
lea
pop
scas
mov
gs
dec
sahf
cmp
push
mull
push
stc
push
adc
sbb
movsb
rcl
push
stc
sbb
loopne
xchg
push
pusha
adc
inc
shlb
sar
pop
daa
ficoml
shl
mov
xchg
cmp
xchg
pop
mov
sub
push
mov
jp
sub
xchg
xor
lret
gs
roll
test
int
mov
ja
outsl
popa
sbb
jle
jo
jge
inc
xchg
add
nop
push
mov
lcall
jmp
mov
xor
push
xchg
dec
xchg
mov
add
jp
sub
push
lods
and
in
mov
das
push
mov
or
sbb
sti
jmp
mov
jp
pop
fsubrp
dec
xchg
icebp
xor
mov
cmp
rol
xchg
lea
fdivl
lods
xor
testl
sbb
mov
loopne
rorl
mov
ficomps
sbbl
sub
push
rol
push
push
out
cmp
fcomp
xchg
nop
loope
sub
dec
test
stc
jbe
test
sub
aad
mov
out
enter
repz
push
sub
ficoms
out
stc
push
test
mov
test
xor
fsubrs
out
ljmp
xor
jg
faddl
sbb
adc
in
movsb
orl
inc
inc
shr
dec
icebp
out
sarl
addr16
movsb
ret
mov
aas
xchg
pop
insl
lods
cld
ds
sub
push
push
mov
aas
cmp
pop
mov
mov
aam
loope
cmc
add
fwait
jns
pop
mov
jae
adcl
jg
ljmp
pop
add
outsl
inc
add
fcmovnb
adc
jecxz
push
dec
mov
das
pop
iret
pop
jge
sbb
incl
in
pop
imul
ficoms
movsl
aad
or
insl
xchg
fists
add
in
inc
int3
lods
jge
cwtl
aam
hlt
sbb
outsl
fidivrs
push
mov
and
ret
cmp
cs
lods
sub
pop
ja
add
mov
dec
push
test
xorb
or
shlb
call
movsl
stos
sbb
dec
inc
sbbb
pop
iret
movsl
mov
mov
fsubp
xchg
sub
addb
mov
insb
shrl
imul
repz
testl
pop
addr16
movsl
pop
imul
xchg
cmp
mov
cmc
sub
jl
add
daa
hlt
loop
pop
or
cli
xchg
ficomps
lods
pop
aam
into
popa
fistpl
aaa
sti
stos
inc
mov
clc
jp
sub
xorb
jg
hlt
push
aad
das
gs
dec
or
outsl
mov
bound
jb
sub
inc
les
addb
sub
fs
cmp
or
cmpl
jae
xchg
pop
loopne
cld
fcoms
dec
outsl
or
outsb
repnz
and
xlat
aas
das
inc
or
xlat
inc
movsb
add
and
mov
pop
xchg
loope
bound
fbld
inc
negl
mov
outsb
push
push
mov
ljmp
stc
xchg
out
xor
xchg
adc
mov
inc
cmpsb
and
jg
push
into
mov
out
or
push
imul
cmpsl
and
push
aaa
xor
xor
xchg
push
outsl
dec
dec
sarl
je
call
pop
adc
or
add
lods
mov
test
out
jno
inc
mov
xor
or
pop
jo
addl
xchg
fs
or
mov
xchg
lret
add
es
inc
loop
xor
adc
rcrl
shrl
jno
lea
sub
jns
rorl
mov
sub
jmp
mov
ret
push
aam
sbb
mov
enter
addl
lods
push
xchg
cmc
or
repz
dec
add
xchg
ficompl
inc
cmp
mov
imul
pop
lods
xchg
sbb
cmpb
xor
mov
cmp
push
mov
dec
xlat
movsb
or
lock
aas
mov
aam
mov
xor
sbb
sbb
sub
adc
adc
jl
push
jmp
and
xor
xor
sbb
sub
stos
mov
outsl
and
push
out
push
daa
jp
pop
adc
jne
mov
lock
mov
xor
and
scas
jno
stos
mov
sub
mov
mov
dec
jecxz
pop
stos
adc
scas
std
clc
xchg
aas
mov
pop
decb
dec
adc
pop
mov
xor
gs
sub
jne
dec
mov
stc
repnz
sub
adc
xlat
push
mov
mov
movsl
mov
push
xor
or
lods
or
or
inc
cmc
jne
adc
cmpsb
sbb
cld
mov
push
mov
mull
sub
aas
out
icebp
imul
push
sahf
jle
add
int
jl
cmp
jl
jg
sbb
inc
std
inc
inc
jb
addb
or
push
packssdw
fisubrl
mov
push
in
cmpsb
scas
inc
mov
jle
sub
adc
add
cmp
jno
add
jno
pop
pop
and
jl
push
pop
popf
cmp
rcr
adc
sbb
mov
push
cwtl
cs
push
stos
inc
roll
lods
cwtl
addb
jecxz
cld
bound
push
fdivrl
dec
mov
lahf
cvtdq2ps
in
mov
mov
jae
add
push
jbe
sbb
outsl
icebp
mov
adc
jns
dec
in
cmpsl
testl
cmc
cmp
mov
aas
sub
jl
mov
aad
push
ja
filds
sbb
dec
aad
clc
out
push
pop
popa
out
mov
push
jecxz,pn
dec
pusha
xor
push
fbstp
xor
cmp
push
mov
imul
mov
mov
mov
and
dec
sbb
add
xor
cs
cwtl
jne
mov
mov
inc
int
pop
or
sub
in
add
add
lret
mov
fwait
dec
dec
mov
mov
call
xchg
mov
pusha
les
mov
enter
jmp
add
and
leave
xchg
subl
xorl
mov
xchg
adc
clc
sub
dec
sbb
jnp
cltd
bound
fucomp
movnti
mov
ficomps
fdivrl
leave
leave
xchg
and
xor
pop
adc
add
cltd
faddp
in
inc
inc
imull
adc
mov
xchg
xor
xor
add
push
xchg
xchg
sbb
jmp
orb
jo
fwait
or
pusha
in
lret
or
loopne
pop
mov
test
jg
lahf
mov
xchg
movsb
mov
jne
icebp
inc
push
icebp
dec
mov
mov
pop
xchg
push
cmp
cmpb
in
and
mov
sbb
or
dec
pushf
fidivrs
subl
xor
jo
test
pop
sahf
or
loop
dec
push
xlat
add
adc
sarl
dec
js
dec
in
mov
sbb
push
cmp
test
cmp
mov
sub
xor
cmp
lret
jl
push
data16
inc
ds
testb
dec
fcompl
push
push
int3
outsb
adc
push
sbb
or
sub
dec
push
cmp
ret
faddl
push
out
adc
mov
outsl
xchg
inc
mov
sti
pusha
add
fsub
mov
stos
leave
ds
and
sub
insb
xor
loop
xor
out
jmp
icebp
insl
lahf
mov
outsb
sahf
dec
sub
mov
sub
pusha
xadd
out
fmul
push
lds
pop
adc
sub
imulb
ret
pop
push
cwtl
loopne
pop
add
stc
xchg
xor
mov
out
aad
cmp
in
or
adc
outsl
inc
add
or
jo
or
jmp
xchg
jns
adc
pop
jle
push
adc
fsubr
scas
mov
mov
mov
or
test
xchg
add
xchg
adc
mov
sub
movsb
jns
sbb
jp
push
push
jb
and
xchg
scas
rcrb
push
and
pop
push
outsb
movsb
das
shll
sbb
pop
sbb
add
orl
fsubr
push
cli
test
push
mov
push
fidivrl
pop
sbbl
out
mov
fs
inc
push
icebp
mov
xor
cli
and
pop
or
cli
xor
mov
lds
test
addr16
xchg
mov
sub
push
or
xor
out
mov
xchg
or
and
pop
mov
sbb
cmp
loope
mov
aam
int
pop
scas
lods
mov
xor
aas
pop
jb
out
stc
fdivrl
mov
mov
fs
mov
lods
lods
test
in
mov
in
out
jbe
cli
cmovg
sbb
mov
mov
sbb
xchg
aaa
aam
jmp
inc
pop
cmp
inc
gs
xchg
xor
cmp
insl
outsb
in
aaa
ret
andb
and
jle
addr16
and
iret
rolb
mov
mov
xor
lock
adc
clc
push
sti
push
fadd
addr16
lcall
call
adc
xor
nop
rcll
dec
mov
xor
fmuls
mov
lods
lods
xlat
decl
sbb
es
adc
into
jne
js
and
inc
pop
imul
pop
sbb
adc
sub
jecxz
lods
loopne
lods
in
addr16
xchg
cmp
push
dec
sub
and
inc
and
in
pushf
dec
add
dec
mov
cs
clc
movsb
jg
test
or
and
repz
and
fldcw
xor
sbb
out
push
rcrb
shlb
adc
xlat
push
out
xor
leave
popf
xchg
or
mov
push
cltd
repnz
repz
sbb
sahf
xchg
xor
sub
test
scas
adc
jae
push
in
sbb
nop
insb
xchg
shll
icebp
out
mov
inc
push
repz
movsl
out
xor
xlat
dec
sbb
enter
mov
stc
sub
nop
sbb
cmp
xchg
jno
add
fildll
mov
orb
pop
fs
rcrl
push
push
jle
lock
int3
and
and
inc
pop
cmc
pop
stos
idivl
and
sbbl
inc
push
xchg
pop
fisubrs
out
pushf
mov
or
mov
mov
and
sbb
mov
in
push
scas
dec
ret
stos
sub
sub
leave
ljmp
iret
cmp
and
cmp
repz
lea
cmpsb
jecxz
xchg
lea
cli
and
inc
add
loopne
fnstenv
das
and
in
push
xchg
negl
outsl
dec
aaa
and
in
das
jecxz
add
out
and
int3
dec
inc
xor
fistpll
push
sahf
pop
insl
jge
repnz
imul
ret
ret
sbb
adc
rolb
mov
push
add
out
push
hlt
pop
jg
andb
stos
sarb
inc
ficoml
pop
inc
pop
fs
xchg
or
or
jne
movsl
dec
xchg
call
aad
into
arpl
outsb
outsb
shl
aaa
and
icebp
insb
pop
xlat
ds
cmpsb
mov
cmp
mov
and
imul
cmp
dec
loope
movsb
mov
or
sub
xor
push
push
mov
das
sub
cmpsb
int3
nop
sub
dec
fadd
sbb
lock
inc
test
std
xchg
sbb
popa
loopne
aas
adc
xchg
or
gs
mov
push
int3
pop
sti
adc
js
sub
or
inc
cmova
arpl
dec
ret
mov
xorl
sub
lock
mov
push
pop
pushf
sbb
sbb
and
mov
cmp
cld
or
cmp
fwait
adc
rcl
adc
inc
testb
iret
or
lods
push
mov
inc
in
push
inc
aam
fnstcw
iret
pusha
xor
pop
cmp
sbb
imulb
dec
sub
adc
adc
gs
fwait
sbb
mov
jne
subb
adc
das
add
or
adc
adc
mov
jmp
enter
xor
sbb
push
test
jp
aad
cltd
sub
pop
jne
in
sub
orl
cmp
mov
scas
fsubl
push
mov
dec
ret
dec
push
mov
xchg
mov
enter
adc
out
stos
adc
fistps
lods
cmpsb
cmp
sbb
negl
out
jmp
icebp
jecxz
jge
or
inc
aam
icebp
hlt
les
push
jb
loop
mov
mov
test
jnp
jns
and
xchg
cli
sti
xor
imul
repnz
push
mov
pushf
cmp
fisttpl
in
test
lret
aam
rcll
jg
push
pop
rclb
fs
sub
subb
jl
xor
int
cmp
pop
cwtl
out
mov
outsl
push
xorl
sti
gs
dec
push
pop
test
adc
in
ret
mov
or
mov
xor
fdivl
leave
lea
cmp
push
mov
ds
in
mov
sbb
add
pop
pop
jno
cli
inc
mov
mov
and
lods
out
lds
enter
inc
dec
inc
pushf
aas
clc
fsts
mov
xchg
lods
sub
sbb
dec
or
testb
adcb
sbb
loope
dec
outsb
inc
lods
mov
jge
jae
stos
jbe
xchg
cmp
movsl
rcr
pop
into
xor
mov
repz
and
popf
push
adc
popa
sub
out
adc
fistl
push
dec
sbb
mov
pop
in
std
jp
outsb
and
push
pusha
or
add
lcall
call
data16
push
push
sahf
insb
fmul
in
fnstenv
cmpsb
out
aam
fsts
insb
dec
pop
into
push
int3
ljmp
xor
lea
push
mov
jmp
call
xor
scas
jl
cmc
mov
lods
ret
scas
xchg
xchg
adc
movl
out
out
popf
out
pop
dec
fsubrs
jae
jbe
mov
or
fsubl
mov
or
xor
rorb
mov
mov
dec
sbb
ss
dec
roll
fcompl
mov
jne
fbld
or
jae
daa
lock
addl
stc
fwait
lcall
cmc
loop
mov
jae
push
and
xchg
sbb
out
adc
cmpsl
imul
cmp
aas
dec
xchg
mov
xchg
jae
call
cmp
ja
pusha
push
out
addb
cld
test
ds
inc
lea
lcall
lret
add
cmpsb
daa
xor
loop
pop
pop
inc
jg
sub
or
xchg
push
insl
jnp
enter
sbb
xorb
repnz
lds
js
dec
mov
rcll
cmp
int3
call
sub
es
and
lods
enter
sbb
or
scas
sbb
cmpps
pushf
cmc
cmp
add
cld
lea
xor
cmpb
push
popa
lahf
pop
inc
mov
and
cmp
cmpsb
sahf
jmp
aad
sub
mov
in
mov
repz
inc
xor
xlat
aas
adc
xchg
mov
or
lret
shll
mov
cmp
inc
mov
mov
sub
xor
les
mov
cmpsb
mov
mov
notb
mov
mov
sti
mov
xchg
and
sub
adc
push
xchg
mov
out
mov
mov
shlb
cmp
int3
bound
rcr
movsb
sub
loopne
aaa
dec
fwait
adc
loope
pop
testb
adc
push
push
add
sub
dec
pop
ja
xor
and
fstl
das
enter
inc
test
jle
hlt
dec
push
mov
shrl
sub
fsubrl
and
mov
test
jl
sub
cmpsl
fwait
mov
pushf
and
sub
inc
cmc
arpl
pop
movsb
gs
in
out
push
xchg
mov
jle
mov
pop
rcll
push
outsb
test
fmull
mov
imul
inc
out
lret
jle
ja
pop
xchg
sar
dec
adc
sub
test
or
lret
jnp
or
add
adc
stc
les
mov
dec
in
pop
push
sti
sar
mov
es
and
rcll
sbb
adc
or
lahf
das
pushl
in
loope
add
xchg
dec
jo
add
out
jg
jno
ja
and
inc
push
addr16
out
filds
cmp
aad
fildll
scas
or
aaa
lods
xchg
jno
daa
push
fdivs
add
addl
cli
repz
xchg
xchg
inc
imul
xor
mov
out
inc
mov
add
mov
imul
adc
sub
leave
stos
lret
xchg
bnd
arpl
jo
dec
insb
sub
fisubs
lcall
fsubs
sbb
repnz
xchg
out
pushf
iret
shlb
adc
hlt
sar
lret
cltd
push
mov
cmp
jnp
shlb
add
aas
ja
mov
sub
cmpsb
cmp
imul
int3
adc
or
mov
int
adc
mov
add
xchg
fcmovb
inc
or
aaa
mov
test
negb
popf
lea
bound
pop
daa
pushl
add
ret
outsl
pop
or
jmp
add
jg
sub
loopne
dec
mov
inc
mov
pop
test
pop
xor
and
shll
inc
fnstcw
fwait
jns
and
addr16
push
pxor
cli
repz
out
jecxz
daa
sub
pusha
into
cltd
mov
pminsw
or
call
aaa
push
lds
mov
loopne
xlat
sti
pop
jo
cmp
dec
jns
mov
hlt
ret
je
cmp
fdivrl
mov
loopne
aaa
or
add
mov
sbb
pusha
lcall
lahf
je,pn
lea
xchg
dec
xor
repnz
sub
nop
pop
xor
push
sub
movsl
inc
leave
inc
push
sbb
push
xorl
xchg
das
add
sbb
push
fstpl
push
dec
jle
icebp
add
je
or
stc
aas
ss
pusha
out
adc
add
and
push
xchg
and
push
cmp
adc
pusha
pop
cld
pop
sub
mov
std
adc
xchg
mov
and
xchg
mov
dec
xlat
add
and
xor
add
popf
xchg
mov
lods
cltd
and
jne
popa
jno
popf
cmp
push
jno
movl
jle
aam
mov
arpl
sahf
aas
nop
sbb
pusha
cmc
cmp
mov
inc
add
sub
scas
inc
mov
or
xchg
icebp
in
mov
std
xor
jecxz
mov
arpl
or
sbb
insl
sbb
adc
inc
push
xor
test
and
mov
or
push
repz
inc
pushf
mov
and
cmp
adcl
pop
mov
fists
pop
fcmovb
jo
mov
mov
movsl
cli
sarl
in
cmp
push
push
mov
aad
mov
daa
pop
mov
call
and
lock
xor
xchg
or
xor
stos
xor
or
mulb
es
shlb
fildl
push
into
or
mov
add
adc
xor
dec
mov
sub
enter
into
fwait
incl
pop
xchg
js
xchg
jno
adc
or
jne
add
adc
mov
cmp
jl
out
shrl
adc
inc
repnz
and
aas
out
mov
mov
pop
xor
jecxz
pop
dec
xorl
sbb
rcl
jae
std
xor
dec
or
mov
icebp
push
movsl
xchg
popa
xchg
aas
outsl
mov
call
adc
mov
pusha
icebp
push
cmp
jb
jno
sbb
mov
mov
pop
and
mov
test
pop
je
pop
mov
inc
outsb
sub
mov
mov
orl
jns
pop
mov
stos
add
fisttps
pushf
mov
fwait
sti
es
insb
shr
and
pop
push
mov
loop
push
les
mov
cmp
cwtl
or
mov
inc
lds
cmp
stos
xor
loope
xchg
mov
gs
jg
or
cld
mov
ficoms
push
scas
mov
ljmp
mov
mov
xor
mov
mov
sahf
aas
xchg
loop
lahf
cli
out
das
ja
lret
or
scas
out
cmp
nop
push
cmpsl
les
push
xchg
mov
mov
jmp
rclb
inc
pop
xor
and
icebp
push
jmp
ds
lret
push
stos
lods
jns
clc
and
in
sub
pop
pop
pusha
in
xor
mov
and
dec
lahf
and
mov
xchg
cld
xor
je
pop
mov
push
clc
aad
repz
inc
sub
fs
aas
inc
sbb
out
jns
lock
movsb
lods
push
jecxz
lahf
or
loope
xor
lds
pushf
and
nop
sub
inc
inc
inc
lret
mov
call
mov
adc
adc
adc
lcall
and
jo
outsb
add
repz
dec
pop
mov
jnp
and
cmp
jns
sbb
xchg
dec
mov
push
cli
and
ret
jmp
aas
xlat
cltd
sbb
and
inc
icebp
xor
jns
imul
pusha
mov
daa
loope
lret
xor
fs
mov
pop
lea
push
lea
imul
mov
cltd
sbb
jno
or
ret
fs
add
imul
jecxz
rolb
cmp
loope
jge
push
mov
repnz
ja
cmpsl
data16
sbb
imul
add
jo
pop
pusha
pop
stos
es
aad
cmpsb
mov
cmp
mov
mov
mov
unpcklps
mov
insl
and
into
movsb
dec
aaa
fisttpll
stos
mov
fwait
jmp
mov
fisubrs
loope
push
in
jmp
inc
movsb
sbb
inc
jne
cltd
stc
mov
and
and
adc
lret
mov
push
mov
fmul
loopne
jb
data16
sub
pop
sub
sub
dec
test
push
cmp
nop
xchg
loopne
aam
push
pop
sarb
cmpsl
jae
sbb
lds
or
iret
inc
ja
out
mov
stos
inc
sbbb
sub
push
pop
outsl
movsb
fisubl
adc
and
nop
push
cmp
push
adc
xchg
sarl
xchg
sbb
push
mov
test
jg
mov
shl
push
lahf
inc
sti
outsb
cli
xor
fwait
jg
lds
testb
jg
aad
mov
xor
jecxz
cmc
lahf
enter
pop
jo
arpl
bound
ja
inc
andl
sbb
pop
shrb
enter
enter
pop
stos
daa
cld
aaa
in
insb
testl
in
jb
xlat
dec
inc
pop
add
or
sbb
ficoml
and
outsb
fwait
or
push
js
out
jno
xchg
shrl
add
fistps
stc
shr
ret
lea
mov
pop
sub
mov
push
mov
cmc
jmp
xor
aad
cmc
pop
enter
and
int3
push
andb
jecxz
mov
insb
stos
cld
push
aaa
test
sub
and
push
repz
or
lods
out
inc
loop
xchg
addb
repz
mov
mov
adc
sub
or
pop
xor
fbld
add
mov
and
popa
adc
inc
stos
div
mov
and
sub
dec
push
jl
cs
cs
cli
dec
pop
lock
mov
jecxz
sbb
std
add
jnp
add
lea
xor
frstpm(287
rcll
add
les
xchg
add
mov
mov
mov
mov
xchg
testl
aaa
inc
sub
add
push
cmp
fidivrl
jbe
popl
jnp
fstpt
lret
xchg
or
inc
dec
into
mov
stos
fwait
adc
lcall
jne
pop
sub
and
fisubl
mov
paddq
inc
push
pop
lcall
or
lret
push
fsubs
pop
lds
add
or
jno
iret
out
outsb
mov
lret
xor
mov
mov
xor
pavgb
and
add
pop
sub
xor
pop
mov
mov
push
int3
faddp
sarl
xor
pop
mov
push
cmp
jmp
sub
and
and
lock
fwait
je
jl
xor
mov
push
mov
out
aas
notl
sbb
jmp
mov
insl
sbb
call
aas
cltd
imul
mov
into
pop
fcoms
in
fs
adc
and
adc
mov
shlb
mov
stos
out
in
into
xor
mov
cmp
jae
mov
xor
mov
mov
ss
mov
imul
push
mov
imul
or
repnz
lea
pop
push
pop
call
inc
add
mov
addr16
sti
arpl
shlb
loope
sbb
xchg
mov
mov
or
dec
cmc
enter
push
lods
xchg
push
mov
sarl
mov
fidivrs
push
add
aas
mov
mov
add
cmc
pop
test
jecxz
push
lock
dec
mov
pushf
pop
mov
ds
mov
loope
cmpsb
push
or
insl
inc
jl
sub
mov
movsl
movl
fsts
divb
shlb
rcrb
add
add
lcall
pop
jne
call
rolb
and
mov
dec
inc
cltd
in
add
xchg
mov
fsubrp
mov
jb
test
push
test
loop
sbb
std
push
sbb
mov
int
sub
js
mov
fst
sbb
addr16
clc
jne
xchg
stos
lret
mov
daa
ret
jmp
mov
std
outsl
or
inc
and
mov
mov
sbb
shlb
push
or
cli
imul
inc
or
lahf
iret
roll
bound
pop
cmp
and
sarb
popa
xchg
push
inc
and
sbb
stos
test
add
fcoms
addb
cmp
lret
xchg
pop
stos
aad
adc
add
sub
dec
sahf
repnz
xor
mov
cs
sbb
shlb
push
and
and
push
or
and
push
sub
cmpsl
ljmp
and
lods
jns
dec
and
mov
add
imulb
rcrl
ret
add
xchg
out
adc
xchg
leave
movsb
ret
and
add
sub
jno
movsb
mov
push
xchg
xchg
inc
or
lret
jecxz
nop
cmp
lock
stc
xchg
in
gs
outsb
push
jle
add
inc
push
gs
repz
fld
push
sub
fwait
mov
in
in
and
sub
movsl
mov
cltd
dec
sub
xchg
push
pop
push
inc
sub
jne
xlat
fistpl
ret
sub
movsb
lock
inc
xchg
pop
cmp
pop
mov
jle
push
xchg
add
dec
stos
imul
aad
jle
jmp
scas
push
fwait
sbb
je
sbb
les
fbstp
adc
push
popa
mov
test
sub
fadd
add
mov
cld
push
in
nop
enter
sbb
rcll
dec
test
dec
and
push
mov
mov
frstor
pop
pushf
clc
jbe
jbe
xor
push
jl
les
insb
push
aaa
jns
fsubl
lds
sub
push
out
int
lds
lret
push
or
mov
push
add
mov
dec
paddw
add
inc
xor
xchg
add
rol
lea
push
xchg
outsl
fildl
cmc
lahf
shll
or
adcb
mov
fs
test
mov
xchg
outsb
sub
clc
out
hlt
rcrb
mov
xchg
jecxz
mov
jl
xchg
dec
mov
xchg
in
sbb
flds
out
hlt
xor
mov
scas
adc
cmp
jo
js
adc
call
cli
mov
pushf
out
popf
aas
sbb
clc
popl
pcmpeqw
mov
adc
andb
out
ja
imul
push
and
xchg
adc
mov
mov
push
adc
or
lods
mov
dec
xorb
scas
popa
inc
add
pop
dec
cmc
int3
cmc
mov
into
mov
iret
sbb
lcall
pop
dec
cli
imulb
xchg
je
stos
pop
pop
fistl
mov
pop
pop
sbb
or
mov
mov
in
cmp
lcall
fcmovbe
test
xor
jl
sbb
jmp
cmp
gs
inc
adc
mov
lcall
mov
mov
out
std
jl
sub
mov
mov
fdivrs
dec
add
in
scas
aas
fsubr
xchg
aas
inc
xor
fwait
inc
pop
leave
out
sub
push
pop
adc
xor
sbb
cwtl
sbb
or
repnz
notb
push
mov
mov
flds
mov
inc
aas
mov
es
mov
in
mov
into
dec
test
mov
aad
adc
int3
popa
xlat
inc
clts
ljmp
popf
aaa
hlt
lahf
outsb
jl
sub
sbb
sbb
xor
xchg
jge
dec
pop
mov
lods
imul
adc
jnp
data16
jne
int3
xlat
stc
adc
loopne
test
xchg
mov
inc
repz
shlb
mov
cmp
adc
sbb
jp
add
sub
loope
dec
mov
mov
xchg
sub
dec
sbb
cmp
mov
mov
ss
lahf
xchg
and
icebp
cmp
jb
and
lret
movsl
mov
fwait
das
sub
fldenv
inc
idiv
gs
jge
insb
or
cmpsl
je
xlat
movsb
dec
sbbl
lcall
nop
int
pusha
jle
outsl
push
lods
and
and
data16
arpl
stos
mov
scas
inc
xchg
push
jl
mov
xorb
jns
sub
xchg
adc
out
dec
push
pop
into
das
imul
lret
enter
dec
iret
adc
or
mov
movb
pop
xor
loope
or
cmc
cmp
sub
pushf
cmc
cltd
mull
test
push
out
push
xor
and
stos
out
push
mov
lods
push
sub
shr
ficoms
xchg
sub
ljmp
or
jno
mov
scas
sub
cmpsl
fldenv
inc
scas
icebp
push
inc
stc
loop
ljmp
popf
lea
fdivs
rcrb
movsl
xlat
call
arpl
ja
push
xchg
push
scas
fwait
inc
les
ljmp
loop
push
inc
xchg
dec
add
xor
xchg
bound
movsb
fdiv
mov
jmp
or
loopne
or
cmp
dec
lcall
xchg
or
jns
xchg
sbb
mov
pop
and
sub
add
adc
negb
into
movsb
dec
sar
mov
das
movsbl
test
add
cmp
test
lods
addr16
dec
stos
and
int
inc
push
lea
pop
in
aaa
sahf
jle
icebp
fadd
xchg
xchg
aam
push
lds
add
sbb
jnp
movsl
mov
in
shl
push
xor
adc
or
or
jns
inc
jns
fucomp
cli
outsb
xchg
mov
xor
pop
loope
sub
and
movsl
fists
loop
sahf
shll
mov
pop
push
stos
adc
mov
lock
add
mov
adc
sub
push
popf
adc
fmull
aaa
call
fbld
fnstsw
xchg
sbb
cmp
jno
dec
dec
clc
fxch
mov
loop
and
dec
negl
jne
fdiv
dec
sub
lock
lods
stos
cmpsb
in
push
cs
jle
enter
fidivrs
test
jmp
jns
lret
loope
mov
inc
push
xchg
jno
adc
les
roll
sub
add
mov
jl
iret
adc
xor
scas
dec
popa
sahf
or
out
jl
stos
sub
pop
cmp
lods
clc
push
imul
out
scas
xor
pop
mov
ret
jns
aad
fs
sub
cmpsl
jnp
repz
mov
dec
rorl
xor
jae
repz
jo
cmp
fwait
and
fnstcw
out
test
pop
mov
jge
mov
adc
mov
call
and
cmp
call
out
aad
sub
xchg
mov
lock
or
push
jns
xor
push
enter
mov
cmp
testl
dec
xlat
les
mov
cmovb
push
dec
jns
fstp
push
scas
imul
nop
add
call
and
sarb
shll
test
jmp
icebp
loopne
dec
jns
ds
in
mov
jae
jge
jle
mov
dec
movsl
ficomps
loopne
add
leave
or
sub
imul
or
dec
xlat
add
ja
adc
jb
rcrl
xlat
adc
decb
frstor
adc
push
jg
cmc
pop
insb
or
inc
fsubp
cmp
inc
sbb
sbb
jle
xor
cmp
inc
lds
ffreep
mov
popf
aas
iret
and
cmp
out
test
insl
mov
jge
xchg
ds
sbb
xor
mov
out
cld
pop
int3
fdivl
xor
clc
mov
xor
leave
dec
mov
dec
jnp
sub
andl
movsl
pop
inc
inc
pop
dec
add
dec
psrad
call
movsb
push
sub
fisubrl
cs
arpl
fcomip
nop
decb
inc
mov
cmpsl
orb
inc
sbb
cmp
add
roll
mov
mov
xor
bound
sbb
and
fmul
ret
sub
xchg
repz
cmp
outsl
movsl
xlat
xor
incl
icebp
mov
cmp
cmp
test
ret
sahf
cld
gs
push
loop
jle
push
sub
lock
ror
test
push
stos
rcrb
aad
ss
mov
jae
hlt
repnz
mov
and
jmp
adc
stc
fisttpl
mov
fdivs
push
mov
scas
jne
push
rolb
in
jmp
aas
pop
add
fwait
pop
pop
sub
jge
mov
insl
mov
push
add
mov
cmp
scas
push
xchg
outsb
jmp
mov
nop
or
loope
and
icebp
mov
or
mov
xchg
inc
jmp
mov
xlat
xchg
frstor
cmpsb
pop
lahf
pop
pop
dec
mov
jp
pop
adc
cmp
cltd
das
shlb
lock
enter
mov
cltd
in
cmp
add
add
test
or
iret
out
jp
test
lods
bound
nop
xchg
jbe
jne
inc
stos
fiaddl
in
es
ljmp
fistpl
pop
pop
push
lods
movsb
push
repz
ja
in
xor
lock
ret
loopne
addr16
xchg
or
xchg
enter
jns
ss
outsl
xor
lret
pop
pop
inc
aad
push
idivl
in
push
out
cmpl
lret
xchg
lods
test
inc
lcall
imul
hlt
add
data16
mov
mov
inc
dec
add
sarl
cli
cmp
add
pop
xor
mov
negb
sub
adc
push
jnp
sbb
and
mov
cmc
or
adc
or
hlt
jae
and
insb
notb
mov
fimuls
outsl
push
push
pop
movsl
lds
out
out
loopne
lea
and
ljmp
aas
or
dec
es
pushf
dec
jae
mov
add
xchg
inc
popf
pop
pushf
insb
dec
loopne
add
insl
inc
or
push
adc
add
cmp
std
jno
dec
sbb
in
ds
add
insb
stos
pushf
pop
push
outsb
jmp
pop
and
fdivl
iret
addr16
pop
push
lret
addr16
xchg
cmp
dec
rcr
ret
or
test
dec
fiadds
scas
jo
push
add
stos
xchg
inc
sbb
fistpll
in
addr16
popf
cltd
xlat
cs
jo
arpl
xchg
ja
xchg
pop
sub
lgs
mov
rcl
or
clc
and
inc
cli
cltd
jnp
stos
mov
xchg
push
fsubp
test
std
push
mov
or
fidivrs
enter
mov
std
pop
sub
pop
stc
shr
mov
aad
call
mov
test
ret
loopne
cmp
dec
rorb
neg
lcall
loopne
mov
push
jp
push
sahf
xorb
and
mov
pushf
dec
sub
lahf
pmaxub
xor
add
mov
push
inc
sub
ljmp
es
fnsave
inc
push
cmc
cs
cmc
push
inc
test
cli
mov
inc
ffreep
xchg
jns,pt
mov
sub
inc
movsb
data16
fbld
hlt
add
push
nop
sub
int3
cmc
popa
inc
loop
mov
popa
addb
roll
mov
pop
rcll
test
jns
mov
and
sbb
mov
inc
or
insl
jmp
scas
inc
subb
sub
xchg
arpl
or
mov
inc
xor
test
dec
bound
mov
pop
mov
cltd
jb
hlt
jbe
daa
test
mov
notl
test
orb
call
xchg
dec
in
stos
cmp
scas
mov
cmp
sub
bound
push
or
aas
sub
cmpsb
add
outsb
rcrb
pop
pop
call
dec
pop
lret
mov
call
aaa
je
es
cmp
xor
mov
movsl
jbe
or
lret
xor
dec
ja
loop
test
lahf
xchg
cmp
jnp
out
enter
sti
data16
add
imul
mov
or
int
xchg
mov
or
ljmp
sbb
jo
push
mov
and
jne
fsts
xchg
ja
mul
mov
push
mov
pop
stc
inc
out
mov
fwait
inc
adc
aam
out
fistl
call
sbb
test
mov
sub
xlat
push
cmp
xchg
cmp
pop
inc
xchg
testb
mov
pop
push
popf
jno
add
pop
mov
cmp
and
loopne
mov
jle
stos
cs
adc
inc
repz
arpl
movsb
test
inc
stc
lahf
aam
dec
push
sbb
test
push
add
adc
xor
icebp
jnp,pt
pusha
daa
fs
jne
pop
xor
add
adc
ljmp
dec
mov
cmp
sub
cmp
roll
push
sbb
into
xor
hlt
lea
popa
mov
or
xchg
sti
pop
mov
jp
push
ja
fcmovne
sbb
push
clc
sbb
inc
inc
and
scas
mov
push
xchg
sbb
adc
and
pop
outsl
test
ja
lds
sbb
mov
jg
nop
ja
mov
mov
je
add
sbb
jmp
cmp
andl
and
fistps
and
aad
int
in
scas
add
inc
and
jne
clc
clc
adc
sahf
or
jp
xor
or
push
call
xor
addr16
outsb
fldenv
mov
xor
in
out
addb
lds
sub
push
cli
rorb
call
fs
imul
dec
rcrb
add
xor
into
jge
add
ds
xchg
pop
loopne
push
pop
es
jg
or
add
push
cmp
adc
mov
xor
mov
popa
jmp
push
push
add
jne
push
fs
popl
loop
aaa
push
bound
and
dec
dec
test
and
adc
sbb
enter
jns
adc
ja
lret
out
imul
adc
movsl
loope
or
adc
xor
insl
sbb
addr16
cmpsl
int
mov
jmp
mov
and
jecxz
arpl
test
shr
inc
jne
or
lret
mov
movsb
js
popf
in
jmp
or
hlt
xor
inc
add
pop
xchg
dec
adc
sbb
repz
sub
or
pop
mov
aas
jno
andb
movsl
lods
lock
stc
push
jmp
leave
hlt
mov
sub
stc
lret
sti
pusha
xor
pop
adc
enter
sarb
inc
push
pop
mov
jmp
movsl
pop
ljmp
lock
sbb
ffreep
sub
jge
mov
fs
pop
loopne
out
add
push
xlat
or
nop
dec
mov
sbb
cmpsl
mov
xor
dec
das
push
jge
movsb
outsl
shl
sahf
sub
push
xchg
es
icebp
repz
add
xor
add
pop
leave
sahf
adc
lea
jl
add
cmpsl
movsl
fsubrs
mov
add
sbb
cs
adc
add
add
popl
xor
xor
sti
inc
pop
lds
shll
in
mov
sbbb
push
xor
mov
fildl
ret
test
jl
dec
sar
or
jg
lods
xchg
int3
sub
jle
jmp
sbb
sahf
inc
jo
or
loope
int3
cmp
add
js
imul
inc
ds
pop
and
in
push
testb
aam
xor
mov
es
es
clc
jb
mov
nop
or
int3
jb
sbb
add
outsl
ficoml
popa
sbb
mov
shll
cmp
rclb
outsl
je
add
dec
adc
jbe
lahf
pop
jne
insl
jns
xchg
out
cmp
lock
mov
in
jmp
in
xor
sbb
cmp
cmp
mov
dec
mov
xchg
clc
sbbb
cltd
dec
clc
xchg
scas
xchg
and
shll
outsb
mov
cmp
add
adc
mov
push
lods
stc
mov
adcl
mov
lret
sub
pop
or
jne
sub
add
in
push
dec
or
cmp
insb
mov
xchg
punpcklwd
mov
imul
aad
add
arpl
lret
lahf
aam
mov
fmull
xor
pusha
icebp
push
jnp
mov
pop
in
fsubrs
xchg
fs
cmp
repnz
mov
push
pop
adc
sub
sbb
push
loope
dec
int3
mov
xchg
gs
cwtl
jl
jg
or
sbb
sub
jp
cmp
insb
jbe
ret
and
mov
adc
pop
mov
fistps
adc
and
test
cltd
repz
daa
ljmp
ret
pop
xor
sbb
dec
mov
fdiv
mov
imulb
cmp
lock
xor
jne
insb
rol
sbbb
push
dec
lret
repnz
or
lock
pop
icebp
adc
mov
or
dec
cmp
pop
stc
mov
ret
and
push
jbe
fisttps
les
mov
mov
or
fisubl
pop
mov
push
mov
or
iret
movl
mov
adcl
xor
add
lret
mov
or
add
in
jb
adc
add
test
movsl
out
mov
rcrl
push
jb
shl
test
fldl
push
mov
shrl
jge
imul
mov
and
pop
mov
loop
lret
cmp
cmpsb
add
movsb
movups
and
insl
dec
es
mov
stos
outsb
call
enter
mov
loop
sub
stos
fdivs
pushl
mov
mov
push
add
pop
xchg
xor
cmp
dec
call
jp
addr16
jno
dec
xchg
sub
pop
enter
mov
xchg
and
jl
test
xlat
adc
push
mov
cmp
insl
imulb
dec
mov
enter
cmc
jne
ret
xchg
popf
or
sbb
or
pusha
xor
ret
sbb
dec
xchg
xor
add
add
mov
pop
arpl
jo
jne
stos
in
pop
pop
int
and
or
mov
cmp
nop
loopne
xor
pop
push
cmp
cmpsl
and
and
xlat
ficompl
jl
stc
and
dec
inc
or
jae
mov
je
insb
sbb
inc
push
aas
inc
out
das
stc
arpl
mov
pushf
inc
mov
jno
xor
xchg
syscall
add
jle
movhps
cs
je
cmpsb
bound
xchg
int3
sub
jns
jl
sbb
push
stos
add
std
stos
mov
cmp
test
mov
mov
and
test
adc
inc
mov
dec
mov
ss
dec
and
or
xor
ret
and
aam
push
outsb
push
call
pushf
lods
pop
mov
out
xor
or
js
mov
cmp
pop
pop
mov
shrb
test
cmp
and
stc
fstpt
mov
in
test
testl
or
xor
in
adc
sar
movsl
fidivrs
inc
sub
fistpll
clc
pusha
inc
mov
int3
fldt
adc
add
mov
dec
into
sahf
insl
cwtl
sub
jmp
aas
mov
mov
test
jns
scas
fcoml
xchg
sub
push
mov
in
clc
andb
mov
mov
out
adc
fwait
sbb
imul
rol
jg
in
push
test
mov
push
inc
jnp
popf
push
popa
cld
lret
mulb
pusha
cld
mov
or
jp
pop
mov
cld
sub
arpl
cmp
xchg
sub
aas
ficompl
jmp
out
cmc
and
aad
lahf
ficompl
pop
inc
mov
add
pop
xchg
mov
xchg
mov
mov
fcompl
mov
ja
sahf
lcall
sbb
pop
cmpsb
or
subb
sarb
push
cmp
cmp
aaa
and
aad
enter
pop
sahf
in
in
dec
xlat
or
pop
aad
cmp
inc
xchg
pop
pop
sarl
test
pusha
mov
pop
sub
testb
xchg
sub
test
cmc
leave
pop
out
lods
icebp
add
repnz
xchg
sbb
sti
repz
mov
jge
pop
dec
mov
shrb
pop
jecxz
mov
shlb
movsl
push
dec
mov
stc
jno
xor
mull
imul
test
push
xchg
pop
push
and
or
imul
or
xor
sub
lods
jg
pushf
aaa
dec
push
sbb
repnz
or
push
pop
dec
xchg
mov
mov
icebp
aas
add
mov
mov
icebp
adc
mov
xchg
dec
iret
loope
adcl
mov
dec
ljmp
push
shl
mov
rorl
loop
lods
and
out
add
add
inc
inc
ljmp
push
sti
jp
bound
scas
arpl
fnstsw
in
cmpsb
lcall
std
jo
dec
scas
std
jge
and
sub
lret
divl
mov
fists
pop
test
js
frstor
testl
pop
cmpl
fcmove
xchg
xchg
jle
xorl
jne
push
and
scas
cmp
add
insl
lret
decl
pop
in
ret
lahf
mov
mov
mov
push
sub
or
lahf
call
push
dec
push
repz
icebp
hlt
pop
cmc
inc
mov
pushf
mov
dec
xchg
stos
jmp
dec
push
testb
loop
mov
mov
adc
hlt
nop
xchg
add
in
test
jge
pop
repnz
outsb
fistpll
xchg
mov
lret
dec
aaa
adcl
pop
loope
mov
dec
pop
adc
mov
loopne
pop
jge
push
cmpsb
daa
es
adc
mov
in
call
sub
mov
pop
imul
cli
pop
cmc
popf
stos
call
pop
mov
and
cwtl
out
je
xor
pusha
xor
in
or
jle
ret
add
xor
andl
sbbb
insb
ja
jns
test
mov
cmpl
sti
ja
xchg
fwait
xor
popa
in
outsl
cli
es
push
fs
loopne
daa
pop
loope
sub
xchg
xor
les
movsl
fdivrs
push
orl
adc
xchg
add
mov
jne
icebp
cld
pop
int3
cmc
xor
bswap
movsl
adc
shrb
scas
lret
mov
cmovae
dec
mov
pop
jmp
mov
adc
push
ret
fdivrl
and
iret
cmp
insb
jge
jl
mov
icebp
mov
push
jns
pop
xchg
adc
shufps
xchg
mov
add
xor
adc
mov
dec
sbb
stos
cld
popa
jb
int3
int
jno
fs
xor
jbe
sub
movl
or
aad
fs
mov
loop
sub
lods
fists
cmpsb
pop
iret
sub
mov
mov
lea
and
jge
hlt
dec
push
pop
inc
dec
adc
in
push
jb
int3
mov
in
arpl
daa
decb
dec
xchg
cmp
mov
insl
fnsave
ljmp
jl
in
pop
lods
lock
sbbl
imul
outsb
mov
repnz
xchg
cmp
cmp
cmp
sub
jp
xchg
test
push
rcrl
out
mull
int3
and
ret
and
in
inc
mov
jg
cmpl
push
std
into
pop
cmp
pop
mov
pushl
dec
add
sbb
xchg
and
sahf
jmp
ffreep
arpl
inc
shrb
sbb
loope
push
sbb
les
std
mov
adc
jge
pop
jno
pop
shl
rorl
stos
and
hlt
mov
inc
call
ljmp
fcmovb
mov
mov
das
add
insl
cld
and
icebp
jmp
fildll
fmull
jge
or
xchg
xor
adc
fiadds
fnstsw
js
pop
add
lods
lahf
subl
xchg
clc
sub
inc
frstor
jg
sub
mov
test
and
imul
and
iret
ss
cmp
push
out
push
repz
push
sbbb
loop
push
arpl
int3
in
push
pop
jl
inc
xor
fwait
mov
push
sbb
lret
adc
fcmovnu
test
mov
adc
rorl
push
hlt
data16
adc
and
out
pop
test
popa
ja
inc
or
mov
and
lret
push
mov
mov
enter
das
lret
cli
dec
mov
lods
scas
jecxz
sub
mov
xor
out
dec
out
mov
cltd
inc
jno
adc
jnp
and
xlat
shl
add
push
mov
lret
mov
cwtl
and
cwtl
in
jns
mov
int
rcr
pop
jne
jb
dec
add
jb
pop
mov
pop
loopw
ds
push
daa
ret
shrb
div
lock
sub
imul
xor
cmpl
inc
popa
loope
push
cmp
clc
cmp
mov
add
inc
mov
mov
jns
scas
in
adc
std
ja
in
lret
in
in
or
add
lods
add
test
ret
repz
inc
out
stos
or
scas
lahf
fidivl
int
dec
repnz
mov
xchg
sarb
jnp
sub
lahf
add
gs
cmp
and
ljmp
outsb
sbb
dec
push
cwtl
xor
sbb
sahf
dec
rcrl
fucomi
adc
or
imulb
push
xor
out
shlb
mov
clc
jno
or
mov
movsb
cmp
or
pop
cmp
inc
mov
sub
leave
mov
pusha
insl
cmp
insb
mov
pop
pop
jno
mov
in
pop
jns
sti
push
decb
rcrl
btcl
xchg
out
jns
pop
cmp
int
xchg
adc
xchg
cli
sarb
pop
fs
scas
fisubrl
jns
fyl2xp1
pop
and
out
mov
outsb
pop
divl
sbb
out
mov
ja
aad
or
jmp
sub
push
js
popa
push
dec
daa
or
pop
mov
stc
or
or
mov
cmp
jl
sub
sub
fs
sar
bound
cmp
sarb
fistpll
cwtl
sti
adc
xor
scas
std
pop
decb
and
popf
cmp
mov
mov
ret
mov
cmpsl
fwait
das
pop
ja
pop
in
mov
xor
sbb
mov
into
xchg
daa
loop
xchg
mov
pop
xchg
sbb
rorb
and
stos
pop
or
lcall
imul
scas
std
and
adc
sbb
push
xchg
jo
iret
push
aam
fcoml
loope
lret
xchg
loope
and
dec
icebp
cmp
das
jl
cmovbe
sub
jg
ret
lcall
dec
jg
push
xor
xor
insb
mov
arpl
je
mov
movsb
lahf
cmp
movsb
stos
movd
cmp
inc
ret
xor
aam
push
mov
cltd
aaa
mov
test
pop
fistps
outsl
adc
shl
pop
xchg
mov
adc
sub
ror
cmpsb
mov
lcall
mov
xor
ds
in
and
xchg
popf
adc
in
fs
in
pusha
pop
inc
adc
dec
mov
in
lea
push
xchg
and
push
push
fwait
push
mov
ret
jl
xchg
lods
ss
repnz
adc
out
or
jne
es
cmpsb
lods
mov
shlb
ficomps
insl
mov
repnz
mov
adc
push
xor
aam
sub
xchg
dec
mov
dec
sti
frstor
rcrb
mov
and
call
mov
jnp
xchg
int
xor
push
inc
leave
rolb
cmp
push
push
inc
ret
mov
dec
lods
mov
jle
jo
jg
or
dec
mov
push
lcall
push
xor
jnp
ficoms
xlat
dec
dec
jge
cs
add
jnp
and
cld
jne
arpl
icebp
pushf
aaa
icebp
mov
adc
cmp
fs
jbe
mov
aaa
fidivrl
add
sbb
xchg
test
sbb
sbb
popf
dec
sbb
pop
inc
fldenv
dec
cmpsb
add
je
movsl
js
setge
or
pop
add
jns
call
in
fsubs
enter
movsl
leave
xchg
test
incl
jle
cmp
out
mov
sahf
movsb
cmp
rcr
mov
xlat
sarb
mov
jl
pop
mov
pop
adc
addr16
jae
ret
cld
int
lcall
sub
ss
loope
std
jp
mov
loop
jo
and
repnz
xchg
xor
mov
sub
sub
or
push
mov
nop
sahf
push
popa
jae
jmp
daa
icebp
fisubrs
int3
fs
push
adc
lock
gs
add
das
daa
jno
push
popa
popa
test
mov
addl
jb
mov
push
mov
daa
jae
and
push
mov
jge
dec
scas
jecxz
jg
imul
icebp
sbb
xlat
jle
fnstsw
call
decb
ret
ret
insl
adc
lret
data16
pop
sbb
mov
mov
out
adc
outsb
ja
outsl
push
mov
inc
cmp
mov
pop
in
cli
xlat
xor
jle
lret
xchg
lcall
in
iret
stos
and
faddl
lahf
sub
xchg
imul
and
pop
das
js
xchg
jae
dec
or
stos
mov
add
gs
icebp
jbe
repnz
and
xchg
pop
push
andl
xchg
mov
imul
mov
lret
add
push
mov
not
push
push
xchg
bound
push
fldenv
lahf
jg
lods
and
adc
test
out
cs
lods
inc
mov
inc
push
dec
sub
iret
jae
test
xchg
andl
or
frstor
push
ss
sub
rcll
xor
mov
xchg
xchg
mov
lods
sub
insl
mov
push
cmpsl
lahf
mov
mov
in
jo
ficoml
adc
sarl
scas
in
pop
pop
jge
jo
imul
mov
sbb
lcall
fiadds
pop
scas
dec
loop
xor
or
xchg
das
jl
push
out
and
sub
pop
jnp
sub
push
xor
ja
adc
jbe
push
cmp
and
imul
push
bound
imul
mov
inc
clc
dec
int
mov
stc
mov
mov
stos
mov
mov
push
mov
xor
sub
pop
in
leave
movsb
cmp
xchg
sub
xor
push
push
xchg
push
mov
lds
inc
pop
nop
cmc
mov
add
xchg
mov
add
loop
outsl
lods
pushf
cmp
mov
addl
lods
out
addl
lret
dec
adc
pop
add
loopne
out
jnp
inc
jne
push
std
mov
ret
movsl
mov
fdivrs
push
xchg
pop
adc
repnz
test
notb
sbb
sbb
addr16
fsubs
push
and
ffreep
jmp
mov
lcall
jnp
out
adc
xor
dec
adc
pusha
mov
popf
loope
pop
adc
and
inc
dec
adc
mov
add
insb
pushf
xchg
jle
dec
arpl
or
popf
and
test
rorb
cwtl
mov
std
xor
loop
fistpll
inc
mov
add
adc
sub
js
dec
cwtl
outsb
push
addr16
neg
sbb
xchg
sbb
and
scas
ss
adc
mov
stos
push
mov
mov
add
ds
xchg
jo
aaa
test
xchg
imul
outsl
lret
jb
lcall
sub
sub
cmp
cmc
and
push
fstpl
jne
daa
fs
pusha
enter
dec
cmc
xchg
sbb
xor
sub
jmp
push
jg
and
inc
dec
jae
sahf
mov
js
mov
lods
jmp
mov
sti
inc
fs
jbe
and
adc
xchg
in
xchg
rol
icebp
xchg
inc
adc
mov
cmp
jnp
push
or
or
dec
sahf
cmp
daa
sub
xchg
cmpsl
in
xor
push
inc
idivb
mov
ja
movsl
imul
xor
das
mov
pop
ds
mov
aaa
stos
jnp
mov
and
inc
sub
mov
xor
xchg
mov
lea
mov
pop
inc
icebp
jp
jb
insl
aam
adc
mov
call
cld
dec
push
jle
sub
aas
xor
push
addr16
or
inc
push
and
aam
push
out
loop
jno
in
mov
lods
jecxz
repz
movsb
pop
orb
loop
fcomps
mov
xchg
fsubrl
stos
mov
je
mov
rcll
leave
iret
jmp
mov
call
out
cwtl
imul
cmpsb
push
sbb
push
cmp
and
data16
popf
pushf
mov
sbb
inc
out
outsb
mov
movb
inc
add
lock
insl
out
sbb
popf
push
ret
in
addb
pusha
add
movsb
or
int3
jl
xchg
into
ljmp
inc
das
pushf
mov
cmp
jbe
pop
dec
jb
cltd
push
in
xchg
dec
xor
scas
mov
add
adc
inc
cmpsl
divl
jns
movsl
ljmp
loope
sbb
jg
idivl
cld
and
cli
mov
and
insl
mov
negb
out
orl
fcmove
mov
adc
mov
ss
mov
ljmp
xchg
add
ljmp
cmp
in
imul
repnz
pushf
adcl
xchg
mov
mov
push
mov
hlt
mov
aad
dec
pop
je
mov
push
pop
pushf
leave
stos
test
dec
fst
je
jns
jns
push
dec
cmpsb
jne
cmp
int
mov
mov
push
xor
push
fisubl
sbb
mov
mov
or
test
shlb
shlb
in
in
clc
rol
mov
cmp
add
stc
lret
xor
cltd
sub
sarl
in
addr16
mov
int
cmpsb
dec
cwtl
push
and
inc
mov
movsl
adc
push
jns
aad
sub
ficoms
xor
dec
jnp
inc
cltd
xor
mov
inc
movsb
out
arpl
xchg
inc
fimuls
push
data16
lock
in
inc
data16
jne
cmp
loope
xchg
push
sahf
es
push
cmpsb
cmc
sti
or
jns
ficoml
nop
push
add
pop
jmp
xchg
cmpsb
dec
fwait
xor
dec
cld
sbb
inc
call
int3
loopne,pn
mov
push
jle
add
shll
fs
mov
insl
push
arpl
fs
loop
push
dec
jbe
jmp
fisubl
cmp
xchg
cmpb
fsts
ljmp
clc
bound
ja
xchg
popf
add
add
inc
or
jne
jmp
and
push
je
cmp
lods
daa
or
cwtl
sbb
fimull
xchg
in
pop
out
dec
xor
es
lahf
popf
pop
adc
dec
in
aas
push
mov
or
sub
sbb
cmc
jmp
lds
je
xchg
mov
or
push
lea
out
push
mulb
imul
xchg
inc
lock
dec
cwtl
in
push
popf
dec
mov
dec
sub
push
gs
fyl2x
icebp
lret
jo
stc
cwtl
jo
in
je
outsb
outsb
jge
dec
mov
cmpsb
sahf
mov
fcmove
popf
rorl
jb
adc
push
nop
int
xchg
xchg
lahf
dec
fists
pusha
adc
xchg
subl
cmc
rol
sbb
dec
in
sub
xchg
add
push
dec
test
scas
pop
mov
push
out
cmp
cmpl
hlt
test
in
movsb
push
sbb
fwait
sub
jno
cltd
in
rol
jp
xor
in
mov
cmp
mov
ds
mov
sbbl
das
pop
inc
or
inc
jnp
out
lret
and
xchg
icebp
and
icebp
outsl
and
loope
jbe
adc
les
or
jbe
jl
leave
cmp
loope
rcrb
mov
push
pusha
pop
faddl
adc
lock
test
mov
mov
cmc
clc
xchg
out
push
fdivrl
leave
fcom
sub
pop
aam
testb
dec
jle
mov
fcompl
andb
mov
mov
and
pusha
insl
pop
or
or
sub
sbb
push
mov
mov
rcl
sar
cmp
sbb
xchg
sti
push
std
inc
leave
and
mov
sbb
inc
cmpsb
and
xor
aad
lret
cwtl
adc
push
cld
cmpsl
and
out
nop
dec
push
mov
arpl
mov
xchg
bound
enter
mov
mov
ret
or
xor
in
jle
jle
cltd
cli
mulb
loop
insl
mov
or
in
decb
dec
pushf
dec
jg
ja
pop
aaa
movsb
fldcw
add
push
xchg
cltd
and
adc
outsl
shrb
inc
push
addl
pop
aam
adc
insb
and
inc
mov
das
inc
mov
ret
jae
sahf
dec
dec
jg
test
dec
shl
inc
in
ret
or
sub
and
leave
ficoms
xlat
mov
dec
insl
pop
and
and
mov
add
pusha
jnp
xor
add
push
jge
push
jge
insl
push
arpl
lret
dec
aam
cmpl
movsb
cmpl
sub
adc
call
pop
mov
ror
fsubrl
cld
inc
test
out
add
pop
dec
dec
out
mov
mov
fadds
mov
popa
popa
test
sub
xchg
outsb
std
ficomps
hlt
jae
das
rorl
cmpsb
jbe
andl
mov
data16
shl
mov
jo
call
lds
out
test
jae
inc
out
lods
aas
pushf
sti
xor
and
or
push
inc
daa
sbb
cwtl
divb
roll
push
fs
ljmp
add
jge
fidivrl
icebp
aaa
mov
gs
pop
xchg
test
push
out
jb
popf
sbb
hlt
mov
movsl
rolb
inc
ficompl
adc
dec
loop
ds
mov
call
rolb
fisttpl
mov
add
addr16
pop
xor
inc
orl
mov
ss
inc
sub
ja
cmc
or
dec
lock
ret
xchg
out
inc
jle
pop
or
es
data16
sub
push
pusha
and
and
mov
rorl
mov
sub
daa
dec
das
ret
or
mov
cmp
repz
out
fs
and
inc
cmp
push
push
into
movsb
sub
lods
mov
scas
test
cmpsl
xchg
aaa
sbbl
fcoms
lcall
push
mov
mov
arpl
sub
dec
and
add
sahf
stos
or
gs
pop
rol
sbbl
cli
adc
mov
push
jge
icebp
out
add
xor
loope
addr16
or
and
loop
sub
fs
jne
mov
mov
jp
inc
mov
xchg
pop
nop
jo
xor
adc
stos
mov
repnz
adc
out
cmp
pop
xor
orl
adc
pop
mov
iret
daa
inc
xchg
inc
idiv
lods
shrl
sub
je
and
push
icebp
ljmp
xor
dec
jge
push
jle
lock
xchg
adc
mov
add
mov
imul
add
cmpsl
jns
inc
mov
out
es
jae
push
mov
aaa
std
push
stos
or
fwait
out
icebp
or
ljmp
push
mov
mov
jmp
mov
aam
andl
test
pusha
clc
pop
icebp
divb
daa
lcall
loop
out
xor
out
stc
test
dec
or
std
pop
xor
and
cmc
ret
sub
push
adc
cmp
nop
sub
cltd
aaa
or
and
cld
mov
andb
inc
mov
push
sub
adc
adc
arpl
dec
lods
xor
and
pop
pushl
jne
inc
mov
push
cmp
jecxz
imul
xor
pop
xor
mov
sub
rol
out
jg
xor
ja
movsl
sub
std
jne
mov
sbb
aam
fwait
jb
cmp
jnp
jecxz
dec
ficoms
cmpsl
mov
pop
mov
jns
stos
leave
test
pop
cmp
jg
sub
fcoms
ds
mov
xor
push
out
mov
movsb
and
data16
or
ret
ficompl
mov
push
inc
xor
icebp
mov
xchg
fcmovbe
push
push
jl
jmp
shll
outsl
dec
ljmp
enter
add
data16
cmc
fildl
mov
mov
ljmp
les
mov
leave
mov
xlat
pop
aad
pop
or
and
nop
mov
nop
xchg
mov
jns
push
sub
int3
fistpll
fstpt
scas
adc
loope
jbe
and
jae
xor
fistps
xchg
cli
mov
add
adc
sbb
lahf
outsb
add
lea
pop
mov
mov
cmpb
xchg
daa
inc
cmp
dec
fdiv
outsb
inc
aas
sbb
sub
int3
sarb
sbb
inc
cmp
test
pop
jbe
cltd
xchg
stos
movsl
jl
pop
cwtl
shrl
sbb
dec
dec
sti
enter
scas
cmp
int
push
inc
xchg
sbb
or
mov
scas
movsb
dec
in
into
and
dec
out
test
push
cltd
push
incl
popa
pop
xchg
cmp
push
jae
gs
xchg
daa
ds
inc
xor
cmpsb
cwtl
inc
mov
stos
scas
ror
add
shl
push
xlat
testb
outsb
add
pop
lcall
xlat
mov
and
leave
jle
jmp
std
ds
test
adc
int
mov
notb
jp
inc
loop
and
cmp
mov
cmp
repz
jno
es
sub
pop
dec
je
pop
push
xor
in
xor
cmp
adc
sbb
mov
and
dec
sub
lret
fisttpl
pop
stos
scas
inc
stos
sbb
lods
lds
push
into
pop
pop
pushf
cmp
jecxz
push
mov
xchg
es
jns
cltd
fdivs
ljmp
sbb
test
mov
cmp
jb
not
inc
mov
out
push
insb
icebp
daa
and
xchg
sub
pop
fldt
orb
scas
icebp
dec
mov
fcmovne
pop
cltd
or
out
xchg
or
sub
mov
dec
imull
push
shll
lds
fs
test
test
gs
jl
mov
rorl
xor
xchg
or
jae
cs
insl
and
push
xchg
enter
pop
cwtl
cmp
mov
xor
add
dec
mov
sbb
dec
jmp
jns
sbb
or
mov
mov
add
popa
pop
mov
icebp
or
inc
das
aaa
push
sub
mov
inc
or
fnstcw
lcall
mov
fdivrl
in
mov
out
pop
dec
popf
adc
pop
orb
fprem1
mov
xchg
pop
aad
mov
mov
lret
mov
pop
mov
shll
hlt
rolb
fistpll
fistpll
xor
lock
test
push
bound
pushf
inc
mov
inc
cmpsl
fwait
xor
lret
mov
rcl
dec
mov
aas
cmp
fbld
lock
push
xor
int3
movsl
push
icebp
lret
pop
enter
out
xchg
sub
add
mov
sub
es
mov
sbb
icebp
hlt
rcl
push
sub
loope
mov
xchg
aaa
and
and
dec
dec
or
mov
mov
mov
sbb
add
daa
sbbl
or
push
adc
inc
pop
insb
repnz
movsl
dec
xor
in
stc
sub
pop
or
test
jp
subb
iret
cmp
inc
mov
out
and
pushf
shlb
push
stos
clc
jmp
xor
xchg
inc
lock
mov
sbb
xlat
stc
mov
repnz
dec
add
cmc
movsb
or
mov
cli
xchg
je
insl
shl
outsb
dec
inc
hlt
xchg
ss
sub
adc
pop
pushf
adc
in
sbb
inc
cmp
add
xchg
popf
jg
das
insb
push
jp
hlt
jmp
cmpsb
lcall
movsl
mov
ljmp
ss
imulb
je
and
ret
rorb
gs
mov
sbbl
and
das
movl
outsl
mov
fcmove
imul
fldl
xchg
mov
mov
mov
push
push
jo
scas
in
push
inc
loope
fistl
jl
stc
pop
ss
inc
cmp
jo
movsb
dec
jns
vmovsd
daa
and
popf
or
lahf
mov
shll
lret
cmp
and
insb
pop
mov
mov
inc
je
pop
mov
hlt
dec
outsb
pop
call
sub
andl
mov
aas
std
mov
icebp
std
into
jb
sbb
popa
lds
cmp
in
add
js
adc
neg
inc
dec
sub
aam
and
jnp
icebp
lds
stos
lea
out
push
aam
mov
sar
loop
mov
ret
push
jbe
sbb
jp
adc
ficomps
or
or
jnp
ja
or
xor
shl
lea
sub
xor
fildll
push
push
pop
fimull
jnp
shr
and
loope
lods
adc
aad
ljmp
repnz
push
aam
lcall
lock
xchg
cmpsb
fidivrs
and
ja
mov
cmpsl
test
out
std
mov
les
aaa
lods
inc
or
jmp
in
pop
repnz
push
push
pop
fadds
gs
insb
sub
imul
jmp
pop
xlat
lcall
icebp
dec
loop
add
out
jno
mov
or
rcrl
xor
fisttpll
push
jle
cmp
pop
out
stos
xor
pushf
popf
cmp
mov
dec
pop
out
mull
jmp
cwtl
pushaw
adc
and
pop
fisttps
ror
cli
cmp
sbb
adc
inc
xchg
pop
jae
stc
inc
sti
sub
subb
pop
sbb
mov
jae
xor
jl
sbb
mov
add
hlt
dec
fisubrs
into
add
mov
jp
gs
xor
in
xor
lret
adc
dec
mov
sbb
aad
xchg
outsl
inc
lds
dec
jb
ret
sbb
cmpsb
cmpsb
lock
dec
fwait
xor
push
js
xchg
mov
bnd
inc
testl
sub
push
pop
cmp
push
mov
movsb
ds
push
cmp
lret
mov
mov
dec
les
fwait
adc
sub
test
aaa
cmpsb
data16
insb
idivb
and
dec
mov
push
xchg
repz
sub
nop
shrb
addb
push
data16
je
cmp
adc
test
mov
ret
add
hlt
dec
sub
int
icebp
and
in
mov
jns
cld
shrb
aam
push
sub
push
mov
inc
and
js
inc
sbb
cwtl
std
scas
dec
lahf
dec
inc
push
jns
pop
dec
movsb
xor
cmp
xchg
aas
cmpsb
aam
jmp
scas
roll
xchg
and
mov
gs
mov
js
js
cmp
insb
xor
push
lds
pop
push
subb
jg
push
cmp
pop
fdecstp
push
push
imul
test
orl
fstps
clc
or
mov
add
pop
xchg
xor
jmp
sub
ret
sbb
scas
repz
sbb
push
cmp
jmp
or
mov
negb
imul
push
pop
ffree
mov
popf
adc
test
xor
int3
mov
movsb
es
xor
into
mov
flds
loop
sub
sbb
mov
mov
adc
mov
dec
faddp
mov
andb
add
jb
push
dec
aam
and
pop
cmpl
mov
push
xor
jle
xor
push
test
mov
popf
pushf
sahf
inc
icebp
imul
dec
xor
mov
xor
dec
cmp
mov
mov
dec
push
std
xor
or
mov
sub
sbb
pop
mov
and
jbe
jnp
filds
dec
aam
and
push
mov
mov
dec
mov
fdivrl
add
sbb
mov
jb
xchg
add
xor
push
out
dec
mov
mov
cs
ror
cmp
sbb
or
gs
gs
ds
and
pop
mov
inc
dec
mov
test
or
aam
test
mov
or
shrl
in
pop
insl
sahf
ja
mull
enter
lock
jmp
rorb
jo
leave
cmp
mov
shll
mov
or
fcomp
and
mov
lahf
fisubrl
xchg
jo
dec
test
movsb
sub
ror
int
pushf
push
pushf
insb
mov
sub
test
in
cmc
out
pop
push
push
add
int3
movsb
jb
lea
lret
addr16
add
hlt
cmpsl
inc
or
insl
movsb
ss
fstpl
jle
cltd
xor
test
push
sub
dec
mov
adc
jbe
mov
jg
ss
xchg
sub
push
das
dec
repnz
xlat
cli
pusha
rorb
jb
pop
jge
lods
adc
mov
jle
or
mov
push
jecxz
sbb
hlt
adc
sub
jl
into
test
ja
inc
stc
sbb
out
jne
xor
sbb
gs
lcall
sbb
inc
cld
dec
inc
in
in
je
data16
outsb
mov
rclb
in
mov
inc
push
nop
dec
dec
scas
dec
test
fcoms
xor
addr16
dec
lods
pop
or
push
mov
fidivrs
iret
fidivrl
and
dec
push
popl
gs
sti
add
out
xor
jo
and
mov
cmpsl
jmp
cmp
inc
mov
bound
mov
movsl
sub
and
pop
add
mov
out
push
xchg
dec
jnp
ljmp
pop
daa
xchg
enter
mull
aad
sahf
mov
push
add
dec
repz
cmc
out
push
dec
dec
xor
sbb
rorl
in
outsb
stos
mov
dec
dec
addr16
or
mov
sbb
stos
fwait
dec
push
push
add
mov
mov
dec
pop
lea
out
sbb
scas
mov
mov
out
inc
push
mov
and
pop
jo
daa
stos
or
mov
push
cmpsl
ficoms
scas
rcrl
push
faddp
push
pop
addr16
push
or
jle
push
iret
outsl
mov
jg
out
imul
adc
mov
mov
inc
push
push
test
mov
xchg
cld
mov
lods
mov
sbb
dec
enter
addr16
and
out
cmp
jg
fisubrs
push
pushf
adc
popf
jae
leave
or
xor
lock
repnz
mov
mov
push
rcll
push
add
das
sbb
fld
pop
xchg
jbe
je
dec
test
xchg
xor
or
negl
aas
mul
shl
or
push
jo
lock
jae
mov
cltd
test
and
in
out
outsl
sahf
pop
inc
in
pop
inc
pop
jmp
xor
popf
lahf
mov
add
adc
fs
jns
mov
jbe
mov
cmp
loopne
inc
pop
jge
push
das
mov
or
lods
ds
sahf
mov
sub
imul
mov
cld
les
jne
mov
sub
fisubrl
scas
pop
cmpsl
xor
das
or
into
pop
loope
cmp
ljmp
shlb
cmpsl
int
fwait
mov
or
pop
stc
jmp
lea
sti
cmc
and
out
push
cs
mov
ret
mov
out
jmp
jp
or
cld
add
xchg
and
lods
mov
and
shll
jo
std
jb
pop
sahf
xlat
repz
jno
mov
test
test
dec
pop
mov
pop
adc
mov
cmp
test
sti
and
dec
and
andb
push
out
push
cld
push
jge
inc
xchg
fwait
daa
rclb
mov
aas
and
adc
jns
cmp
sbb
dec
das
mov
out
movb
xchg
adc
or
aad
clc
mov
fisubrl
sub
cmpsl
adc
jle
mov
cmp
inc
test
stc
mull
pop
mov
pop
cmpsb
ret
and
jb
call
or
cmp
fistl
cmp
mov
aad
fidivrl
xor
int3
shlb
imull
repz
mov
nopl
adc
xchg
pop
lret
mov
jns
stos
jo
mov
fisttps
hlt
in
add
imulb
and
inc
mov
add
repz
mov
fiaddl
test
outsb
stos
loop
test
int
testb
mov
push
gs
push
ja
shrl
fs
in
jge
shll
repz
fsubs
pop
or
ret
out
roll
add
xchg
fsubs
and
movsb
inc
jbe
cmc
xor
lods
bound
lret
icebp
push
rcrl
fucomip
shlb
sub
push
sahf
pop
cmp
lret
fdivl
int
negl
adc
out
nop
adc
lret
xlat
push
push
pop
xchg
inc
or
dec
les
inc
inc
jb
das
xor
pushf
fdivs
aaa
mov
add
shl
push
imul
add
lcall
jnp
inc
mov
or
insl
lcall
fisubrs
int3
cs
lahf
insl
mov
in
lock
insl
push
jae
leave
push
jl
adc
xchg
xor
cmpsb
xchg
fs
cld
lods
sub
xor
adc
stc
in
loopne
push
xchg
and
pusha
int
mov
jns
xor
icebp
fisttpl
cltd
pop
fcmovne
xchg
cltd
cmp
lahf
rorl
lcall
es
popf
cmp
xor
notb
lret
aad
int3
pushl
inc
scas
seto
or
sub
idivb
inc
mov
arpl
clc
pop
adc
enter
cltd
sahf
xor
add
xchg
mov
orl
insb
ja
scas
popa
cwtl
and
fldcw
jge
or
cli
cmp
hlt
mov
cli
out
lret
in
sti
out
std
mov
lahf
mov
stc
in
hlt
or
jne
dec
dec
stos
repz
inc
popa
mov
mov
adc
insb
add
sbb
sar
fxam
roll
sbb
jne
xor
and
dec
mov
sbb
imul
es
sub
lret
pop
repz
cmp
in
jae
add
stc
int
insl
or
test
sub
es
popa
mov
idivb
jnp
subl
movsl
inc
jmp
imul
cld
jns
pop
inc
test
insb
add
stos
add
sub
ret
loopne
out
jo
sub
clc
jmp
add
xchg
pop
jecxz
cmp
dec
add
mov
cmpl
push
pop
adc
mov
lea
aas
divl
gs
int
imulb
arpl
adc
push
and
jbe
pop
sti
nop
ret
jg
scas
pop
pop
es
pop
jo
gs
add
loope
fdivrl
ja
fstpl
xchg
imul
jp
xchg
out
lea
ja
push
js
mov
inc
adc
test
inc
js
pop
adc
outsb
outsl
pushf
pop
out
cmp
mov
sbb
out
mov
popa
data16
xor
xchg
and
sbb
sub
mov
movsb
mov
aad
test
push
cld
dec
leave
inc
push
clc
sti
mov
xor
and
faddl
mov
pop
adc
movsl
decl
cli
xorl
sub
addl
outsl
hlt
xchg
repnz
sbb
sub
xor
adc
pop
test
xor
inc
pop
mov
std
adc
push
outsl
hlt
and
mov
lret
shrb
jl
inc
lock
and
aas
loope
ret
fs
rolb
pop
in
and
sub
xor
sub
dec
sbb
mov
cmp
pop
sub
push
scas
jmp
jnp
js
pop
sub
nop
fwait
iret
mov
ljmp
pusha
mov
mov
inc
stos
negb
and
cs
lret
cs
inc
xchg
imul
cmpsb
xchg
icebp
push
aas
cmp
or
inc
mov
sbb
push
and
aas
stos
hlt
adc
fsubs
addr16
xor
add
push
add
and
dec
sub
test
stos
icebp
aaa
mov
mov
pop
std
cmc
or
popa
inc
daa
inc
adc
xor
arpl
sub
stc
inc
lahf
push
pop
add
imul
fistpl
call
xchg
pop
cmpsb
sub
iret
ror
inc
out
xchg
movsb
fsub
xchg
mov
js
mov
rcrb
mov
jecxz
xchg
or
mov
push
fisubs
pop
repnz
mov
dec
shlb
negl
aaa
fsts
cltd
adc
fimuls
xor
inc
sub
adc
test
jae
test
push
jo
adc
cmpsb
inc
outsl
mov
pusha
jecxz
mov
test
cltd
stos
dec
or
lret
int3
insb
cli
mov
mov
outsb
dec
push
xchg
stc
mov
cmpsb
or
sti
imul
push
ret
push
lahf
push
stc
test
mov
dec
mov
xorb
sahf
loopne
sub
lret
aas
scas
iret
icebp
out
adc
inc
sahf
inc
popf
movsb
gs
add
rcrl
mov
mov
xor
sti
dec
pop
jno
gs
sbbb
jo
insl
pusha
div
dec
push
ljmp
jae
cli
xchg
test
movsl
push
jle
pop
xchg
inc
imul
repz
sub
lds
idiv
loopne
jmp
ljmp
data16
call
xor
mov
jecxz
mov
pop
mov
xchg
pusha
divl
in
push
add
lds
call
jl
xlat
js
inc
mov
sub
fcoml
inc
push
call
call
push
adc
lods
inc
sbb
stc
add
in
mov
adc
sub
pop
mov
repz
aaa
xchg
pusha
int
enter
xchg
jmp
clc
cmp
hlt
mov
xorl
test
std
loop
mov
cmc
and
dec
sti
mov
inc
out
imul
sbb
add
mov
lea
mov
les
test
cmp
push
jmp
add
mov
jecxz
mov
mov
sahf
filds
xor
mov
nop
inc
loope
adcl
sbb
cs
or
push
imul
stos
outsb
or
mov
jp
cmp
ret
movsb
imul
fldcw
sbb
mov
cmp
cmp
cmp
test
add
mov
cmp
pop
push
clc
pop
mov
push
cwtl
loopne
jmp
xchg
aam
hlt
and
xchg
lea
or
mov
mov
mov
imul
sub
loope
pop
nop
cs
inc
and
add
aas
pop
xchg
dec
jnp
mov
ja
dec
setnp
inc
sti
dec
ficoms
xor
sub
loop
mov
or
pop
movsb
ljmp
xchg
daa
in
pop
outsb
sub
mov
call
iret
pushf
shll
addr16
scas
pop
decl
sub
cmp
push
cmpsb
rcr
add
loop
sub
sub
test
loope
idiv
je
iret
sbb
popa
mov
fwait
and
mov
and
push
mov
pop
mov
fstpt
ret
pop
xor
fsubl
js
into
pop
lods
jns
sub
into
dec
mov
enter
out
pop
inc
push
jmp
out
and
mov
aad
hlt
cmp
sbb
adc
add
pop
push
add
mov
sub
pusha
mov
mov
xchg
pop
jp
movsb
ds
sti
dec
mov
bnd
mov
sbb
ljmp
mov
push
cmp
ds
push
dec
insb
cmc
pop
fadds
lahf
shl
movsb
movsb
popa
movsl
stos
loope
adc
rorb
or
sahf
mov
rolb
xor
sub
add
add
jle
pop
dec
shrl
gs
cmp
out
mov
jecxz
pop
hlt
push
mov
cld
das
clc
adc
fmull
or
cmp
clc
popf
jmp
jb
jg
jbe
popa
xchg
notl
xor
fwait
sbb
stos
cld
into
fisttpll
push
out
mov
call
dec
and
rorl
pop
out
or
pusha
je
pop
xchg
xor
les
inc
out
dec
or
xchg
pop
dec
lea
jmp
outsl
lock
lret
and
ds
into
xchg
in
jno
in
xchg
lahf
insl
ljmp
lds
mov
clc
test
xor
mov
test
mov
ret
daa
leave
mov
je
mov
inc
in
mov
cs
loope
hlt
mov
loop
cli
shlb
and
int
jb
mov
lcall
dec
sbb
ds
test
dec
mov
fs
mov
cmp
mul
xchg
or
mov
iret
jl
loop
and
or
insb
jno
jae
sub
xchg
bound
hlt
testl
or
lods
adc
push
inc
test
rcrl
mov
cmc
and
sarl
jno
inc
xchg
jns
mov
dec
loope
outsl
pop
xor
stc
cmp
arpl
xchg
jne
inc
jecxz
sbb
fstl
pushf
jnp
xabort
mov
or
in
xor
push
das
loopne
push
sbbb
add
scas
decl
xor
dec
push
xlat
cltd
jo
sbb
dec
and
inc
push
pop
ss
in
add
xchg
gs
enter
xchg
test
fidivrl
out
pusha
shl
sahf
push
cmpsl
mov
mov
data16
sbb
inc
push
enter
ss
ficompl
jbe
jge
mov
dec
in
loope
push
shl
jmp
pop
inc
dec
sub
bound
sbb
pop
cmp
ljmp
loopne
cmp
test
mov
adc
push
and
cltd
jmp
push
sbb
inc
popf
in
shrl
stos
shll
and
leave
addb
and
add
and
jle
iret
mov
mov
aad
repz
in
out
add
stc
add
outsb
pop
push
mov
test
rep
xchg
fisubl
sub
jle
inc
jg
shl
mov
jmp
inc
jae
xlat
mov
test
incl
and
mov
mov
adc
sbb
in
cltd
inc
cmp
jne
cltd
push
pop
aaa
shrb
scas
imul
hlt
and
adc
mov
cmc
sub
popf
mov
leave
cmpsl
push
pusha
add
pop
lock
jmp
and
scas
or
iret
push
insb
enter
mov
or
shlb
pop
in
mov
testl
fs
add
push
xchg
out
jge
sub
andl
jecxz
mov
les
sbb
xchg
fdivs
push
xchg
push
inc
in
data16
loope
sbb
cmc
xlat
mov
inc
mov
movsl
test
push
dec
xchg
stc
add
cmp
xor
mov
dec
dec
lods
cmpsl
sbb
data16
push
jnp
incb
xor
push
xchg
mov
or
push
fsts
icebp
push
std
pop
push
lret
pop
mov
xchg
jns
push
cvtpi2ps
xchg
repz
sub
orb
call
add
leave
cmp
rcrb
std
or
pop
int3
es
xlat
dec
push
dec
jne
push
fildll
mov
jge
shll
push
jecxz
push
roll
fsts
jno
mov
push
lret
fstpt
pop
ja
in
in
dec
and
cmp
cmc
in
dec
jp
xorl
lret
adc
pop
xchg
push
push
in
pop
int3
push
xchg
repz
sub
aas
js
lret
sub
fcmovb
mov
lods
stos
les
xor
mov
mov
stos
popa
push
mov
out
dec
dec
arpl
sub
mov
push
mov
push
pushf
mov
pop
sahf
shlb
rorl
popf
mov
loop
insb
mov
dec
loope
adcb
cmp
aam
insb
inc
push
cltd
jns
mov
pop
cmp
xor
xchg
and
inc
enter
sbb
bound
fnstenv
test
loop
push
popf
ret
inc
dec
in
jne
mov
cmc
or
stos
xchg
and
mov
hlt
or
out
js
sbb
popf
add
das
clc
cmp
loop
mov
aas
aaa
nop
gs
mov
shl
cmp
andl
mov
push
sbb
test
mov
add
loopne
add
sub
xlat
call
mov
mov
fninit
imul
jg
ret
fistps
test
sub
adc
add
jl
mov
scas
out
add
lahf
pop
int
xchg
cmpb
mov
es
inc
sub
mov
xchg
and
ret
dec
ljmp
out
jle
les
sahf
and
push
call
sbb
dec
jns
rcl
lods
imul
push
push
insl
xchg
dec
cmp
cmpsl
pushf
fildll
push
xor
into
ss
adc
cwtl
or
repnz
loopne
adc
xchg
in
gs
out
add
add
mov
mov
dec
and
adc
loopne
sbb
nop
push
test
inc
jae
rorb
mov
mov
int
mov
xlat
xchg
xchg
jmp
loope
pop
icebp
leave
xchg
jbe
ds
outsb
push
mov
scas
add
aam
pop
push
push
xchg
sub
sbb
shrl
insl
and
pop
xor
imul
arpl
adc
loopne
scas
mulb
mov
or
or
mov
shr
adc
xchg
aaa
fs
xchg
xchg
jno
cmc
push
mov
cmp
aad
sub
and
rorb
iret
inc
jb
stc
stos
into
call
ljmp
ss
stc
lock
add
mov
dec
pop
or
sahf
jl
push
adc
mov
in
mov
notb
imul
jle
or
inc
fcoms
xor
push
popa
mov
mov
xchg
inc
inc
push
stos
add
ja
fst
mov
cmc
rorb
push
enter
mov
xlat
stc
adcl
pop
popa
imul
jecxz
cmc
dec
cmp
xor
lods
repnz
out
jne
add
outsb
or
mov
fnstenv
popf
fisubs
pop
or
or
mov
and
push
sbb
cwtl
dec
inc
loopne
mov
cmp
fdivrp
add
push
cli
loope,pt
repnz
rorb
cmp
test
dec
gs
popf
xchg
or
orb
push
sbb
je
jl
inc
or
push
jb
dec
push
ret
pop
sub
stc
jecxz
jecxz
sub
inc
lahf
mov
jecxz
mov
aaa
fs
or
or
adc
jp
mov
jbe
push
test
push
mov
add
jne
lock
and
stos
and
xchg
fs
std
idivl
cli
cmp
hlt
sbb
adc
mov
or
xchg
push
mov
xor
fldl
movsl
sbb
push
push
mov
push
pop
push
cmp
inc
fimuls
adcl
in
pop
xchg
cmpsl
aad
or
insb
leave
inc
stc
out
pop
pop
rcl
sbb
or
jp
and
bound
lcall
mov
es
clc
mov
xchg
in
and
add
stos
xchg
jle
rclb
xchg
insb
and
stos
cmp
jmp
push
mov
out
xor
add
push
push
mov
shlb
mov
arpl
xlat
dec
mov
or
dec
enter
stc
stos
adc
mov
xchg
movsl
pop
sbb
in
mov
adc
lahf
jg
or
push
cmp
fwait
xchg
xchg
xchg
bound
data16
and
mov
jae
mov
lds
or
fstps
pop
push
sub
in
dec
sbb
scas
out
xor
es
xlat
js
ljmp
int
outsl
xchg
rorb
xchg
mov
sbb
mov
sbb
xor
jge
lret
xor
cmc
lahf
fldenv
sarb
fisttpl
sbbb
add
loop
pop
sbb
adc
cld
fnstcw
out
jns
xchg
jbe
mov
into
lock
or
fdivrp
in
lret
outsl
ror
and
mov
dec
pop
or
cwtl
aaa
fisttps
mov
pop
or
das
insb
repnz
push
popl
es
inc
out
mov
xchg
mov
jo
xchg
divb
inc
adc
dec
xchg
test
pushf
cmpsb
insb
insb
imul
es
lea
mov
lods
stos
and
nop
jmp
loop
fs
cvtps2pi
mov
repz
aaa
push
xchg
jnp
out
cli
mov
jbe
shrb
mov
xor
nop
popf
dec
push
or
addr16
xchg
inc
add
int3
xor
xor
push
pop
cmpsb
sub
sti
pop
jb
mov
ds
mov
pusha
loope
sti
movsl
pusha
imul
cmp
add
movsb
fsts
stc
rorb
jns
xchg
xor
loope
cmc
outsb
shlb
mov
ret
inc
in
add
aad
fnstenv
int3
xchg
mov
movsb
inc
and
pop
icebp
mov
daa
outsl
sbbl
daa
or
adc
and
scas
in
lret
ja
test
cs
push
dec
dec
test
lods
adc
sbb
call
mov
addr16
and
adc
xchg
mov
add
xchg
inc
mov
ret
fisubs
ss
loopne
sub
pop
dec
or
lret
lods
sbb
inc
sub
shll
xchg
jne
xlat
xchg
inc
in
inc
sub
mov
popa
sbb
inc
rcrb
cmpsl
dec
pop
out
xlat
outsb
xor
loopne
and
push
mov
lock
loope,pt
ret
rorb
mov
cmp
add
or
mov
adc
clc
inc
adc
and
mov
adc
ja,pn
mov
xor
aad
sahf
xor
sub
xor
bound
stos
push
mov
inc
adc
jecxz
add
in
jge
pop
scas
jne
and
hlt
push
fdivs
shl
mov
imul
ret
push
fdivrl
call
mov
cmpsl
scas
jne
ds
fistps
pop
pushf
and
shrl
jg
clc
mov
jb
lods
scas
out
stc
aaa
mov
pop
mov
dec
test
fdivrl
gs
test
sbb
push
mov
arpl
in
aas
sub
pop
jge
shlb
insl
enter
push
jb
jmp
daa
mov
in
pop
jbe
sub
arpl
in
add
nop
addl
mov
dec
in
popf
adc
xor
arpl
mov
sub
ficoms
xor
orb
imul
sub
gs
in
ror
xor
pop
pop
push
add
sahf
mov
addr16
loopne
inc
sub
mov
pop
xchg
mov
or
or
mov
es
int
fsubp
imul
daa
rcll
adc
inc
pop
or
or
mov
push
lcall
inc
jnp
fimull
clc
lcall
push
cld
repnz
lods
flds
js
inc
popf
jbe,pt
clc
push
xor
shll
popf
inc
and
ljmp
leave
mov
xor
int
loopne
add
loopne
pop
dec
mov
push
js
dec
xchg
inc
sub
lock
out
pop
mov
xchg
push
incl
xchg
clc
mov
xchg
decb
clc
loop
movsb
sub
inc
sbb
movsl
ret
imul
dec
jb
js
and
and
std
xchg
and
mov
aad
mov
sbb
fcmovu
les
in
xor
sub
fsts
mov
jle
cmp
mov
cmp
inc
iret
lahf
mov
sbb
rolb
jmp
cmc
nop
punpckldq
arpl
sub
xlat
shlb
in
lea
aad
test
jecxz
inc
cli
xor
cmc
inc
inc
mov
scas
or
adc
out
xor
dec
push
pop
or
outsl
aad
iret
sbb
divl
aas
push
ud0
sub
aaa
jnp
ja
mov
jno
sbb
mov
inc
mov
in
scas
js
imul
je
pop
ret
inc
and
add
ret
mov
push
loope
jns
jmp
xor
mov
iret
enter
adc
scas
cmp
jbe
into
inc
adc
sbb
in
cltd
or
jnp
dec
mov
and
lret
lcall
jbe
out
xor
cld
test
mov
cmc
fcoms
in
lea
movsb
mov
mov
cmc
jp
mov
push
push
test
aad
cmp
mov
sbb
xchg
mov
dec
cltd
jmp
test
mov
outsb
pop
xor
mov
mov
outsl
xchg
pop
xchg
pusha
pop
pusha
dec
gs
inc
pop
jl
pop
or
and
add
mov
adc
inc
out
fwait
cmp
cmp
js
lods
add
bound
mov
cmpsl
lea
add
cmpsb
mov
jb
arpl
ds
addl
cmpsl
lods
lret
mov
in
sbb
lods
rcr
inc
cmp
cwtl
adc
add
leave
cmc
in
arpl
xor
xor
pop
xchg
or
js
cmpb
jno
push
out
ret
xchg
xchg
xchg
icebp
outsb
adc
pop
scas
jg
push
adc
xchg
notb
mov
lahf
arpl
out
dec
xor
test
add
mov
lcall
nop
cmp
es
xor
inc
mov
lds
mov
sub
addr16
cmpsl
loope
dec
jecxz
addr16
dec
loope
into
inc
test
pop
and
clc
imul
jbe
dec
aad
es
or
test
in
out
scas
ljmp
xchg
dec
loope
push
cmp
or
loopne
lea
cmp
xor
adc
push
mov
sub
inc
clc
sub
pop
push
xchg
push
shlb
inc
sub
scas
out
aaa
xchg
add
push
push
jnp
push
je
sub
pop
ss
testl
popf
dec
aad
pop
push
jmp
xchg
ds
gs
mov
xor
inc
decb
leave
call
push
repnz
pop
dec
push
stos
adc
and
std
test
adc
insb
push
jg
enter
je
loopne
add
insb
test
mov
push
ret
mov
push
jne
sub
fucomp
jbe
jle
sub
out
xchg
call
mov
inc
lods
adc
clc
arpl
imul
lahf
mov
lock
dec
lahf
cwtl
outsl
pushf
andl
dec
sbb
js
pop
jae
dec
mov
cli
ja
data16
mov
pop
lock
in
cmovo
fcmovb
in
cmp
push
roll
add
push
xor
inc
rolb
jns
push
mov
push
xchg
inc
cmp
dec
aad
push
dec
scas
adcl
int
fldt
sub
cmp
cmp
pop
pushf
xchg
dec
ljmp
test
adc
enter
rol
xlat
jno
fldenv
push
add
push
ss
xor
aaa
fcmovnu
ret
ja
jp
add
cmp
dec
in
enter
sub
iret
insb
shll
enter
xchg
lahf
push
cmp
xchg
gs
test
sahf
notl
push
cli
stos
imul
sub
xchg
lea
jmp
call
jle
repnz
je
pop
out
lcall
dec
mov
jmp
sub
mov
xchg
out
into
or
inc
mov
jmp
inc
dec
mov
jmp
ljmp
mov
div
pusha
xor
gs
cmp
pushf
sub
mov
xor
ds
pop
sbbl
xorb
jno
jo
xor
lea
ljmp
jmp
dec
sarl
cld
dec
push
push
pop
sub
gs
repz
mov
sbb
push
push
pop
jecxz
cmpsb
sahf
mov
fs
stos
mov
sbb
out
ljmp
cli
clc
lret
push
test
test
les
imul
mov
push
leave
and
stc
rcrb
cmc
sub
int
leave
std
or
inc
inc
dec
mov
enter
test
sbb
fldcw
and
repnz
push
pop
lret
adc
clc
sarb
mov
inc
fidivrl
and
insb
int3
fcoms
and
inc
jne
pusha
adc
and
push
xor
faddl
neg
xchg
insb
ss
cs
imul
ja
sub
xchg
dec
jbe
addr16
cli
imul
jg
in
lcall
and
int3
mov
inc
cmp
out
push
repnz
adc
mov
add
test
jp
mov
ret
dec
je
jmp
cltd
insb
inc
das
enter
sub
rcl
in
sti
call
test
mov
cmp
cmpb
test
test
fwait
inc
jl
push
mov
inc
in
sbb
in
pop
or
inc
push
mov
adc
rol
ljmp
push
inc
jmp
xchg
pop
je
mov
imul
jg
ret
popf
inc
les
dec
lret
dec
pop
in
and
lea
mov
fs
loopne
and
shrb
push
test
xchg
mov
pop
fwait
pop
mov
inc
bound
icebp
xchg
scas
cs
ss
pusha
cmpsb
xor
fucomi
or
mov
mov
xchg
jns
mov
cmp
iret
ret
ret
mov
lret
fs
mov
popf
movsl
cmp
decl
ffreep
stos
cwtl
dec
sbb
push
mov
sbb
xchg
xchg
andl
sbb
call
gs
fildll
cmc
js
xor
pusha
shl
dec
aam
jecxz
lods
out
movsb
repz
xlat
dec
pop
aas
add
mov
out
or
cmpsl
inc
fcoms
xor
xchg
mov
cmp
repz
arpl
and
cltd
mov
outsb
dec
or
push
stc
and
rcrb
fsubrl
out
jl
jmp
loop
scas
push
imul
push
mov
add
and
sbb
int3
sub
dec
lgs
add
enter
int
or
push
push
mov
in
stc
shrl
pop
xor
lock
andl
inc
sub
inc
push
sbbb
adc
add
out
stc
lahf
cmp
shl
ja
cmp
pusha
cltd
testb
jb
xor
mov
arpl
sbbb
xor
movsb
push
add
lcall
in
mov
in
dec
jnp
mov
in
push
jmp
jo
jns
repnz
or
jg
or
lahf
fidivrl
and
sub
xchg
xchg
pop
xchg
xchg
cli
out
jae
data16
cmpsl
pop
and
popf
ljmp
sbb
leave
mov
in
inc
jg
imul
sbb
stos
pop
aas
xchg
inc
xchg
shrb
js,pt
xlat
push
sti
mov
scas
insl
mov
mov
bound
andb
repz
popf
lcall
movsl
or
push
fs
add
mov
pop
arpl
not
jmp
xchg
pushf
dec
push
out
int
mov
cmp
mov
or
xlat
sbb
bound
lods
sbb
test
pop
lds
std
subl
pop
imul
inc
push
jge
fsubl
mov
sub
mov
loope
leave
jbe
lds
repnz
ret
and
add
xchg
int3
mov
insl
mov
xor
cmp
ror
pop
ja
or
mov
stc
loope
jbe
sub
shll
movsl
es
rcll
or
jg
pop
cmp
push
test
cmpsl
sahf
pusha
and
fadd
lock
scas
in
ja
sar
in
ljmp
sub
xor
jmp
xorb
inc
dec
xchg
test
jno
sub
sub
mov
bound
pop
sub
mov
repz
adc
inc
mov
xlat
cmp
sbb
mov
xlat
leave
mov
icebp
nop
sub
push
insl
push
andb
cmc
aaa
dec
sbb
or
test
mov
inc
sete
pop
mov
mov
adc
jp
mov
in
inc
test
or
mov
jmp
mov
out
jbe
add
mov
fisubs
lea
imul
adc
add
jg
and
add
xchg
std
cmpsl
mov
in
mov
or
cmpsl
cltd
stos
sub
xor
sbb
loopne
lret
jo
dec
test
add
xchg
out
in
js
ds
in
pop
aas
and
mov
gs
or
xor
push
nop
inc
roll
shll
mov
or
push
loopne
mov
push
lds
push
rcrl
je
enter
lea
test
int3
stos
adc
les
xchg
push
or
add
cmp
dec
push
mov
pop
sti
test
addb
mov
pop
dec
dec
jne
dec
sbb
sarl
jle
cmp
cmp
push
jb
into
jno
push
fcmovnbe
xchg
movsb
pop
add
nop
imul
loop
add
ljmp
push
cld
push
std
dec
cwtl
cltd
mov
jno
enter
cltd
push
jg
imul
lret
out
jnp
sbb
push
lahf
cmpl
shlb
bound
gs
pop
jmp
sbbb
cmpsl
jecxz
push
stos
ret
push
mov
dec
inc
cmp
adc
push
lods
mov
fsubr
sub
jae
fs
out
mov
or
daa
add
stos
cwtl
mov
and
pop
jne
push
jp
pop
jg
and
gs
inc
pop
xorb
inc
jmp
adc
insb
movsl
lds
loopne
loopne
push
lahf
popa
jno
dec
pop
pop
lret
mov
in
movsb
out
inc
sbb
je
mov
xlat
push
test
adc
jmp
mov
mov
pop
cmc
mov
pop
cmp
push
or
mov
mov
test
out
nop
xchg
jg
mov
mov
out
inc
arpl
in
mov
and
test
jmp
push
shll
ret
fwait
pop
inc
stc
lahf
jae
movsb
lods
lea
cld
mov
xor
imul
or
mov
adc
iret
and
cmpsl
inc
lds
jmp
hlt
dec
decl
pusha
insb
fmull
sub
nop
cmp
shll
test
jecxz
clc
in
fists
cli
mov
test
jne
cwtl
mov
dec
std
das
outsb
add
cmpsb
push
jge
std
add
test
jge
pop
popl
call
dec
jp
xchg
mov
pushf
and
pop
popa
or
adc
insb
mov
jge
imul
sbb
ret
xor
pop
cltd
add
jne
ja
fdiv
dec
inc
add
loope
inc
inc
xlat
push
jmp
test
xor
sbbb
jg
lcall
mov
call
mov
fisubl
xchg
jge
clc
or
push
shlb
lods
rcll
lret
pop
sub
or
xchg
mov
decl
aaa
sbb
push
mov
xchg
push
loopne
adc
xchg
adcb
push
inc
cmp
and
sbb
popf
sub
jae
pusha
jge
sub
mov
and
jg
xchg
push
addr16
add
lahf
add
mov
mov
test
jp
push
xchg
cmp
sub
mov
popa
les
sbb
ret
xor
mov
out
and
iret
xchg
leave
mov
push
xchg
sub
xor
mov
roll
and
inc
push
jbe
test
push
aaa
pop
lret
inc
pop
outsl
incl
cld
fistps
gs
and
inc
fildll
sbb
xor
and
mov
sub
sub
push
jl
cmpsb
sbb
cmp
and
push
and
xor
lcall
cmpsl
xor
arpl
adc
adc
insl
sbb
in
add
lods
ja
mov
stos
mov
inc
sub
sub
adc
add
or
cmpsb
or
adc
and
sbb
jbe
int
xchg
mov
adc
aaa
jecxz
inc
or
iret
or
xchg
jo
mov
xor
loope
in
andb
in
and
outsl
mov
dec
mov
cli
xor
loope
test
cli
pop
call
push
clc
mov
dec
test
iret
rorb
idivl
fcmovnb
mov
insl
sbb
rorl
mov
mov
mov
and
jge
rcrl
imul
xor
sbbb
clc
idiv
cmpsb
sti
xor
mov
jae
fbld
and
imul
shlb
xor
dec
adc
jo
xchg
sahf
nop
inc
stc
movsl
push
pop
push
xchg
jle
loope
push
ds
faddl
ret
inc
movsb
scas
sahf
lea
in
cmp
fdivrp
xchg
or
mov
push
stos
test
test
inc
adc
mov
pop
out
adc
mov
lds
mull
adcb
in
pop
lea
add
mov
lcall
scas
dec
mov
out
inc
loope
aas
mov
xor
cli
out
cmp
and
dec
ss
rcr
andl
cltd
fistl
mov
icebp
fcoml
adc
push
cltd
out
fistpll
xor
out
jo
cmp
lcall
mov
lcall
and
dec
std
fcmovnu
fmuls
pop
pop
push
gs
shlb
test
or
add
es
outsb
ja
push
sub
cmpsl
sahf
movl
out
adc
mov
xchg
jo
outsb
add
xchg
sub
xchg
push
add
adc
adc
cmp
sub
cmpsl
push
cli
mov
outsl
dec
pop
mov
sbb
jno
loope
mov
outsl
and
adc
into
aad
ljmp
sub
adc
mov
loopne
and
cmp
pop
push
jge
loope
push
dec
sbb
pop
jne
xchg
xchg
pop
mov
repz
lret
fimuls
xlat
sub
sbbl
push
pop
stos
xchg
xchg
ljmp
ja
and
dec
pop
fimull
jbe
inc
iret
aaa
pop
fnstenv
nop
int
adc
jge
pop
xlat
or
es
dec
cwtl
ror
xchg
nop
pop
xor
lret
lods
hlt
rorb
das
fnstcw
hlt
jo
scas
inc
test
arpl
movsl
dec
and
add
jne
mov
cld
pop
jnp
mov
cwtl
rcll
aam
or
repz
mov
loop
in
out
enter
sbb
stos
dec
xchg
repnz
adc
jb
leave
add
outsb
jne
and
divb
mov
dec
jp
pop
cmpsb
xlat
das
shll
scas
lods
push
js
loopne
ss
subl
stos
cli
pop
fildl
mov
jmp
cld
mov
push
jne
sarl
adc
movsb
leave
mov
jp
imul
js
and
and
movsl
or
xchg
adcb
std
add
insl
mov
mov
inc
mov
mov
sub
test
cli
popa
arpl
mov
into
push
rol
repnz
clc
and
mov
cmp
js
ret
sarl
jno
imul
outsb
loopne
push
ljmp
mov
adc
pushf
int3
pop
jne
insb
aaa
fcmovu
movsl
stc
imul
push
pop
mov
or
shlb
jno
pop
inc
push
js
insb
add
sub
and
js,pn
fldenv
mov
sbb
push
rorb
cvttps2pi
adc
jo
mov
imul
add
adc
mov
sbb
cmp
cmc
mov
sbb
mov
mov
pop
sbb
jmp
inc
or
cwtl
lret
pop
or
mov
in
cltd
das
scas
shlb
mov
out
inc
fmulp
jno
mov
aad
jns
push
xchg
aaa
push
push
insb
filds
hlt
mov
icebp
cmp
push
leave
xlat
and
inc
mov
outsb
push
rcrb
jnp
imul
mov
jl
mov
xchg
lcall
fildll
pop
scas
stos
xchg
adc
pop
lods
test
jne
mov
pop
dec
mov
jmp
lods
inc
mov
mov
mov
mov
aas
xchg
inc
sub
inc
popa
lods
scas
subb
mov
les
call
mov
data16
inc
sub
push
in
dec
icebp
cmc
sahf
ljmp
fistpl
stos
lret
mov
flds
mov
xchg
lds
xor
pop
stc
mov
cmp
pop
lret
mov
jecxz
aaa
enter
or
sub
fldcw
out
ret
add
mov
dec
adc
lds
test
cmpsl
dec
sahf
cmp
ljmp
adc
mov
out
sbb
rolb
pop
lcall
inc
fbstp
mov
call
pop
add
jge
sub
cmpsb
add
mov
cmp
or
rclb
sbb
aam
ret
cwtl
push
lods
decl
jmp
ja
push
data16
jl
hlt
or
xor
cmp
cmp
mov
sarb
sbb
faddl
pop
adc
das
xor
fadd
std
jo
mov
cmpsb
stos
jl
stos
sbb
sbb
data16
std
mov
repnz
ljmp
mov
js
jmp
testb
cs
and
jmp
fnstenv
cld
ds
sub
sub
adc
inc
pop
inc
pop
adc
and
push
sbb
mov
stc
jg
lcall
jp
sbb
testb
mov
xchg
jle
push
loope
outsl
outsb
lret
ds
and
push
imul
or
push
ss
fwait
pusha
push
inc
mov
je
ds
cmp
mov
gs
stos
mov
sub
jg
adc
mov
pop
inc
cli
and
leave
sub
mov
xchg
push
mov
cwtl
aaa
imull
or
pop
push
xor
subl
fisttpl
loopne
push
call
mov
daa
in
movsb
jb
orb
push
sbb
nop
addr16
std
enter
fisubrs
cmpsb
repnz
cli
mov
adc
ljmp
daa
adc
sub
adc
add
jo
dec
push
andb
sub
push
lret
out
stos
xorl
mov
sub
sti
push
das
or
sbb
int
fs
push
cmp
xchg
pop
in
enter
push
cmp
aad
loop
call
fcmovbe
push
inc
jmp
pop
cmp
fxch
clc
test
jge
fdivrs
mov
xor
das
repnz
in
jle
jl
fwait
adc
icebp
push
mov
inc
ret
adc
fildll
inc
or
subl
insl
and
dec
aaa
sbb
sub
cmp
aad
call
dec
std
xor
push
orl
rcrl
adc
subb
cmp
or
jmp
inc
push
lcall
dec
xor
sti
jp
jnp
xor
push
and
test
pop
inc
mov
ficomps
mov
xchg
dec
push
sub
inc
sbb
xchg
pop
cmp
imul
stc
aas
push
jno
dec
pop
cmp
arpl
or
cmpsl
pop
lahf
xor
in
sahf
jp
pop
xor
push
andl
int3
push
mov
dec
insb
call
mov
push
loopne
es
adc
es
movsb
mov
xchg
clc
mov
insl
imulb
xor
fadds
arpl
repnz
cltd
shl
ds
andb
and
jge
insb
push
inc
sbb
xchg
fwait
daa
inc
add
sub
pop
movsl
enter
mov
pop
cli
pop
cli
lahf
scas
out
and
cmp
lock
add
fdivs
popa
jns
jo
dec
inc
mov
jne
inc
push
mov
test
and
cmp
inc
out
sub
pop
and
push
stc
jl
ret
mov
cmp
or
sbb
lcall
ljmp
in
jnp
ffree
stos
in
pop
fisttpl
jno
cmpl
add
out
out
stc
cwtl
aaa
sbb
adc
mov
add
pop
push
jno
dec
xchg
stos
sub
ret
lods
mov
pop
imul
or
cmpl
popf
jb
jp
xor
inc
ss
dec
dec
call
xchg
shlb
sub
mov
imul
addl
mov
xor
mov
xlat
cmp
jle
adc
lea
pop
mov
gs
insl
and
mov
jne
mov
lret
push
stos
dec
nop
pop
in
sub
dec
mov
and
dec
push
out
xchg
and
jno
out
ret
add
daa
push
adcl
sub
mov
and
ja
lds
adc
lods
loope
inc
mov
pop
subb
inc
pop
jns
in
fistl
or
pop
out
inc
mov
or
pop
int
mov
adc
lahf
daa
fcomps
jb
std
lea
es
testl
je
cli
xchg
rcl
lcall
pop
arpl
js
ret
sarl
daa
jl
pop
cmp
add
mov
lret
mov
not
dec
pop
xchg
lea
sbb
out
mov
or
sbb
sbb
pop
or
inc
popa
pop
inc
dec
sbb
sub
loop
in
push
sub
shl
ret
inc
movsb
mov
je
jnp
mov
xchg
pop
dec
arpl
ss
test
jns
jbe
xchg
aaa
sbb
mov
dec
scas
cmpsl
lahf
stos
andb
int
xchg
xor
xchg
inc
pop
dec
leave
xor
jl
aam
mov
jmp
mov
xor
adc
ret
or
outsl
ret
scas
flds
mov
addr16
push
fldenv
fisubs
into
sbb
add
sbb
xor
jle
aad
push
lcall
xchg
lds
or
addr16
add
hlt
cld
sub
sahf
inc
jmp
mov
mov
adcb
outsl
push
je
mov
shl
test
mov
orl
pop
fsub
fcmovu
call
xchg
cmp
iret
adc
xchg
imul
sbbb
into
adc
xor
movsl
cmp
std
ss
mov
sarl
out
sub
sbb
adc
test
das
hlt
pop
ret
jg
int
or
pop
out
and
push
pop
stos
pop
cmpsb
mov
push
data16
jg
push
lret
sbb
lcall
and
roll
sbb
pusha
fisubrl
sub
sbb
dec
sbb
outsl
dec
adc
cmp
daa
aaa
dec
xchg
int3
sarb
mov
inc
pop
push
aam
fwait
inc
call
inc
mov
sbb
out
or
fstpt
out
fwait
mov
je
clc
xor
outsl
jp
mov
inc
and
out
into
outsl
aam
mov
enter
jecxz
add
push
pushf
in
lret
cmpsl
fiaddl
jecxz
stos
outsb
int3
lret
jmp
aaa
mov
in
faddl
cli
outsb
in
arpl
iret
outsb
lahf
inc
gs
adc
int
rol
jg
and
ds
pusha
icebp
xchg
mov
fnstenv
stos
in
repz
xor
test
sub
push
jno
xor
cmpsb
gs
push
lcall
pop
jns
pop
add
jae
xchg
mull
dec
sub
loop
loope
lcall
daa
mov
and
jle
pop
sarb
loop
and
pop
add
scas
adc
loopne
mov
push
mov
in
and
push
in
adc
jns
lods
idivl
cwtl
jae
jnp
test
jno
cwtl
inc
std
in
sbb
addr16
inc
and
mov
aad
cmp
mov
out
jno
hlt
mov
cmp
stos
in
push
jg
jl
xor
mov
addr16
ret
sub
negb
adc
das
stos
bnd
cwtl
lret
rol
sbb
adc
mov
cmc
hlt
and
pop
clc
mov
dec
loop
imul
pop
or
or
shlb
jp
insl
mov
push
stos
into
repz
sbb
and
add
add
xor
jb
and
clc
outsb
call
jmp
jge
adc
popa
xchg
lds
enter
out
mov
xor
sahf
in
mov
es
and
inc
mov
lret
in
rclb
add
imul
cmp
clc
lock
outsb
pop
pushf
cmp
shlb
jno
push
push
add
daa
imul
or
adc
push
inc
push
hlt
pushf
cwtl
xchg
sbb
mov
xor
xlat
movsb
mov
lret
aas
cmp
push
jmp
sub
pop
test
pushf
outsb
add
repnz
inc
xlat
jnp
or
testb
popa
mov
imul
adc
mov
int3
lret
push
loopne
rcl
in
clc
xor
dec
aam
inc
cwtl
es
pop
ret
test
push
je
fimuls
sub
cwtl
sarl
das
int3
loope
xlat
daa
mov
xor
xchg
orb
xchg
jb
movlps
add
or
test
sarb
pop
lods
pop
jmp
dec
dec
ds
push
xchg
mov
mov
cmp
xor
ja
data16
jl
mov
stos
fisubs
das
jmp
mov
push
out
adc
iret
inc
cli
add
jo
es
int
pop
sub
xor
and
xchg
mov
dec
pop
mov
loopne
adc
ljmp
loop
out
adc
testl
fs
insl
xchg
mov
push
test
xor
sub
lea
sahf
movsb
call
sbb
and
push
cmpsb
repnz
jl
xchg
sub
jae
sbb
frstpm(287
cli
pop
int
adc
pop
pop
sub
adc
or
ja
in
sbb
std
sub
inc
lds
movsb
ljmp
lods
int3
loopne
mov
movsb
push
xchg
mov
add
fsts
out
mov
out
leave
in
nop
lods
mov
fldcw
ret
pushf
xor
mov
and
cmp
or
shll
movsl
jno
psubw
push
jo
scas
adcb
pop
push
out
dec
call
shl
push
bound
jb
adc
ljmp
call
sub
pop
aad
in
aaa
dec
jl
inc
mov
dec
xchg
das
movsb
shl
imul
lods
jmp
pop
adc
xchg
xor
mov
sbb
push
mov
cmp
frstor
in
xorb
mov
mov
xor
ret
fdivs
lahf
aas
cmp
add
movsl
loop
mov
int
xchg
in
addl
pop
rcrl
xchg
call
dec
and
xchg
and
push
pop
xchg
cmovb
dec
fbstp
cwtl
and
dec
lret
pushf
jns
les
fsubs
icebp
loope
cmpsl
mov
or
push
xlat
sbb
push
pop
add
in
add
or
adc
jmp
pop
test
xchg
shrl
insb
pop
cmc
add
mov
sarl
sub
mov
jae
xchg
les
je
gs
clc
mov
adc
imull
sub
clc
sbb
pop
loope
mov
imul
scas
add
or
loop
xor
or
fidivrl
jns
sub
adc
jno
ficoms
sbb
inc
pop
jmp
add
xchg
add
lds
lret
stc
mov
andl
xchg
push
or
jecxz
out
fwait
adc
rcl
out
imul
pop
push
fists
inc
push
clc
loope
lret
daa
jmp
adcb
sti
popf
cmp
xchg
lods
int3
divl
inc
mov
inc
ret
cld
shr
lds
inc
insl
mov
push
xchg
mov
add
cmpl
jno
sar
clc
cli
add
das
test
cmpsb
sub
ficomps
popa
xchg
lods
shlb
iret
xor
jbe
test
rcrl
jp
not
push
xchg
jne
jecxz
cmpsb
mov
aas
xchg
xor
mov
cmp
xor
das
arpl
sti
cli
mov
adcb
jge
lods
jno
mov
mov
mulb
arpl
jge
xor
xor
jb
cwtl
pop
clc
sub
iret
divl
mov
or
cmp
sub
dec
aaa
shlb
xor
and
adc
cmp
sub
dec
les
xlat
mov
inc
popa
sbb
movsb
dec
pop
push
xchg
daa
xor
shlb
rolb
out
and
mov
in
jb
sub
jbe
cmp
paddw
adc
and
xor
aaa
mov
push
outsb
push
sar
jp
dec
pop
inc
ret
mov
mov
insl
pop
test
cmp
repz
jne
lcall
das
repnz
fcoml
xlat
sbb
imul
dec
mov
ja
push
jo
lods
cmp
push
mov
test
and
push
aad
std
xchg
ja
lret
dec
sbb
aas
push
imul
loopne,pt
add
cld
daa
shl
sub
cwtl
test
movsl
xchg
repz
ljmp
subl
xchg
mov
fsubrs
push
cltd
mov
or
inc
aaa
int
nop
ret
and
adc
adc
mov
dec
jnp
dec
sahf
and
scas
cld
and
packsswb
mov
mov
and
mov
xor
mov
cmpsb
loopne
movsl
cmpsl
mov
pusha
mov
aam
pop
rolb
and
rclb
scas
inc
scas
pusha
fwait
jo
or
cmc
cmpsb
push
sbb
dec
xchg
jp
and
adc
sub
dec
add
dec
imul
pop
movsl
and
arpl
add
insl
andps
sub
pop
stos
les
into
scas
jge
mov
mov
mov
dec
mov
or
mov
bnd
cwtl
pop
mov
in
dec
ljmp
add
into
js
clc
lahf
mov
sti
dec
and
fildl
loope
dec
sub
mov
loopne
or
adc
lds
adc
movsl
in
adc
sub
outsb
jge
sbb
les
adc
fs
mov
inc
xor
cmpsl
jecxz
pop
loopne
xlat
mov
push
es
pop
cmp
lods
mov
xchg
scas
ret
ljmp
rcrb
mov
test
dec
ja
lret
arpl
or
and
and
jae
sub
cld
hlt
mov
pop
arpl
cltd
loop
je
mov
test
mov
cli
shlb
sbb
adc
popa
iret
add
lahf
lods
xor
mov
mov
cmpb
push
and
jno
xchg
jne
and
xor
or
lock
clc
and
and
xchg
idivb
push
das
nop
dec
fnstsw
dec
adc
out
fwait
icebp
mov
dec
xchg
or
mov
and
pop
shlb
mov
mov
cmp
dec
shlb
pusha
test
shll
cmp
cmp
mov
int3
adc
add
jmp
loop
lds
rorb
pop
adc
dec
pushl
inc
push
mov
sub
cmp
repnz
push
mov
adc
mov
iret
cmpsb
rcrb
mov
push
inc
adc
ss
cltd
sbb
jecxz
out
sub
sti
mov
adc
lea
movsl
pshufw
adc
loopne
dec
mov
jle
pusha
and
stos
mov
mov
pop
mov
add
jg
cmpsb
nop
ret
xor
inc
sbb
sbb
add
jecxz
cld
cli
push
bound
cli
lcall
xchg
je
rorl
data16
or
roll
mov
ret
insb
test
inc
inc
dec
push
outsb
rorb
sub
pop
cmpl
sti
mov
inc
xor
adc
call
aam
xor
sbb
xor
jecxz
notb
inc
pop
mov
xchg
fnsave
lret
das
popa
push
lret
and
cmpsl
jecxz
pop
jge
sahf
mov
xchg
or
gs
fldt
inc
icebp
push
push
pop
stos
push
ds
mov
jl
sub
dec
pusha
lret
cmp
xor
and
addr16
ret
iret
hlt
mov
lock
inc
in
add
cwtl
sub
pop
mov
inc
in
xlat
jmp
push
pop
dec
mov
stos
ja
or
lods
stos
xchg
jns
ror
cmp
or
mov
mov
mov
clc
cmp
xchg
out
cwtl
enter
sub
dec
mov
jns
ret
daa
gs
sbb
leave
adc
cmpsb
adc
xor
repz
mov
bound
and
push
in
inc
pop
leave
jecxz
inc
pop
scas
dec
pop
insb
cs
jge
out
pusha
call
pop
xor
sbb
into
adc
pop
or
push
add
inc
iret
jno
outsb
adc
scas
fstpl
and
dec
push
sbb
adc
push
out
add
repnz
cwtl
sbb
sub
push
rcll
jg
mov
xor
fwait
popf
push
les
lods
xlat
decl
dec
xchg
out
js
cld
push
inc
push
out
fistl
sbb
pop
in
orl
fnstcw
push
push
stos
dec
adc
or
outsl
enter
and
fwait
push
pop
lea
inc
cmp
sbb
ret
sub
and
fldz
aaa
push
test
pop
lods
fisubl
inc
hlt
pop
lds
and
xlat
mov
shrb
xchg
xchg
lds
pop
loop
jmp
les
dec
add
ja
mov
mov
push
cmp
push
mov
cwtl
inc
int3
inc
pop
pop
mov
mov
inc
add
in
sti
push
jbe
push
and
or
ss
cmp
mov
mov
int3
daa
aaa
das
jle
mov
int
cwtl
sti
pusha
and
in
sbb
es
les
fcoms
jno
push
fisubl
aam
or
xor
repz
mov
xor
cs
cltd
push
add
addr16
mov
int
sbb
mov
mov
int
jle
fcom
mov
into
mov
xchg
hlt
and
js
jno
pushf
xor
out
lret
pushf
lcall
popf
mov
loop
jge
outsl
bound
jnp
in
hlt
movsl
sub
in
mov
aas
repnz
stc
inc
popf
sbb
test
hlt
mov
sub
pop
lds
push
mov
add
nop
enter
pop
mov
stos
push
jle
xchg
inc
cmpsb
iret
lods
mov
frstor
jae
fdivrs
into
cs
and
nop
xor
or
jecxz
clc
gs
jmp
add
xor
mov
scas
orb
inc
fdivl
mov
pop
mov
mov
jle
cmpsl
jns
mov
daa
or
push
outsb
mov
lods
sub
jae
xor
icebp
icebp
push
pop
or
stc
das
loop
jae
icebp
movsl
mov
cmp
and
xor
ja
push
or
mov
mov
fmul
loope
xorl
jmp
and
sub
xchg
js
cmp
dec
mov
cwtl
sub
sbb
fcmove
lds
push
mov
cltd
inc
cmc
dec
cs
mov
mov
dec
push
sub
push
xchg
jl
adc
push
insl
xchg
mov
jbe
pop
mov
and
cs
in
lret
scas
add
insb
jno
es
mov
add
stos
and
in
cmp
je
stos
pushf
and
and
push
inc
dec
lds
in
push
ret
and
push
mov
lret
dec
les
push
xchg
cmp
jge
stos
shlb
test
insl
dec
rorb
or
bound
lods
popa
and
sti
cld
mov
jo
lret
rol
jmp
stos
mov
push
data16
xchg
adc
int
and
movsb
ds
aam
mov
inc
pop
arpl
punpckhbw
xchg
out
adc
xchg
xor
pop
or
leave
cwtl
scas
std
sub
sbb
aas
adc
repnz
mov
push
mov
rol
adc
add
lock
cmc
inc
clc
lods
adc
adc
mov
aaa
lret
xor
lcall
stos
pop
jecxz
and
pop
lahf
jns
rorb
xchg
jmp
push
push
jae
dec
mov
xor
pushf
push
shlb
pop
scas
mov
cs
arpl
clc
mov
cmpsb
lock
adc
mov
xor
repz
testb
ljmp
cmpsl
push
repnz
test
add
pushf
inc
aaa
or
out
inc
test
movsb
in
ja
dec
cli
xor
roll
repnz
push
push
shlb
fwait
jle
jne
pop
add
movsl
sahf
lret
adcb
dec
cli
out
lcall
add
cmp
jl
add
in
mov
fs
dec
mov
lcall
push
idivb
inc
pop
mov
test
and
or
pusha
sti
stos
pop
cmc
push
lcall
pop
cvtps2pi
jae
fnstsw
jmp
mov
mov
ja
jg
cmpsb
arpl
xor
mov
lret
adc
jns
sbb
stc
gs
cmpsl
adc
aam
ret
lock
imul
adc
jg
lahf
mov
push
xor
push
popf
mov
and
jmp
push
add
test
or
pop
jge
mov
lods
adc
aaa
jp
adc
mov
push
lods
ja
dec
jno
push
mov
ss
pop
in
rorb
adcl
mov
sub
push
dec
insb
ss
out
push
cs
jo
push
adc
vmread
mov
lea
stc
push
cltd
imul
or
pushf
in
and
sbb
or
loop
xor
repnz
out
xchg
sub
dec
bound
loopne
inc
adc
xor
jb
jl
mov
inc
aad
dec
jbe
cltd
ds
gs
jbe
pop
scas
into
push
add
mov
lock
ljmp
jp
out
or
cltd
inc
dec
out
xchg
xor
add
dec
and
into
cld
dec
ret
aad
sub
add
xchg
jb
insb
sub
in
lock
shl
sub
jg
pop
imul
mov
dec
sbb
call
in
jmp
push
and
mov
mov
pop
insl
popa
jo
ljmp
out
aas
dec
fcmovnu
mov
cmp
fwait
lret
loope
mov
or
es
jmp
sar
getsec
pop
xor
clc
stc
outsb
shlb
xor
pop
fisubs
inc
hlt
js
fiadds
outsl
cld
dec
inc
sti
mov
sahf
pop
out
mov
xor
out
movb
inc
adc
enter
sbb
fwait
ret
sub
push
mov
mov
enter
addl
pop
out
mov
stc
aad
xchg
xchg
outsl
xchg
jae
add
dec
mov
xchg
in
jb
xchg
inc
cmp
dec
mov
mov
mov
pop
loopne
negl
sbb
es
fidivrs
fcom
dec
sbb
out
jecxz
xchg
fdivl
adc
push
int3
inc
test
dec
pusha
adc
push
mov
sti
lock
or
push
lds
fcmovnbe
cmpsl
or
push
fmuls
sahf
ds
push
imul
mov
pushf
adc
in
lcall
cwtl
outsl
xchg
pop
ficomps
sbb
outsb
aas
in
xchg
ret
dec
je
jmp
or
mov
push
js
rcrb
pop
hlt
pop
add
dec
aam
in
xchg
sub
shlb
jle
out
jmp
mulb
lcall
lods
in
pop
sbb
inc
dec
xchg
scas
flds
jp
jne
popf
pop
xlat
jle
dec
clc
jge
into
lds
orl
push
fsubs
inc
imul
xor
stos
xchg
aam
adc
fidivrl
mov
inc
dec
movsb
sub
imul
test
or
or
adc
test
dec
andb
xchg
dec
sub
inc
incb
ds
add
dec
data16
dec
and
loop
lods
push
dec
inc
es
mov
sbb
pop
les
leave
mov
sub
push
rep
add
lock
shll
ja
cmp
and
adc
ret
inc
pushf
xchg
ss
push
mov
mov
cmpl
jge
stos
stos
dec
cmp
jg
adc
cltd
icebp
add
js
dec
inc
push
jp
fistpll
js
push
mov
dec
imulb
lret
push
add
jns
mov
idiv
roll
adc
mov
stos
dec
xchg
and
mov
gs
xor
push
pop
rcr
gs
mov
pop
fdivp
mov
push
nop
adc
and
das
push
sbb
sti
xchg
mov
cmp
nop
pop
ja
imul
xchg
dec
test
int3
mov
fdivr
sbb
in
xchg
das
pop
call
push
pop
push
aam
jle
shrl
rolb
test
nop
mov
mov
jae
xor
icebp
cmp
sub
daa
inc
pop
shl
mov
enter
mov
cli
inc
loopne
pop
iret
fwait
lea
or
repnz
pop
jne
shl
fucomi
xchg
mov
dec
pop
xchg
lods
in
daa
lret
ljmp
enter
pop
mov
jg
inc
pop
subl
sbb
icebp
adc
cli
sub
inc
in
xchg
out
jg
pop
mov
sbb
inc
out
addr16
divl
dec
push
lcall
jb
mov
mov
stos
push
mov
or
adc
push
adc
aas
adc
std
push
mov
lods
scas
mov
or
sub
xor
add
sub
fiadds
mov
push
and
mov
cli
lret
das
and
pop
bound
mov
repnz
pop
lods
cmp
jns
and
cmpsl
mov
dec
sub
outsl
psubsw
lahf
push
mov
cld
pop
stos
sbb
adc
popa
sbb
and
out
xchg
pop
orb
cmpsb
mov
into
daa
or
enter
push
xchg
pop
xchg
xor
mov
out
lahf
shll
dec
xor
push
ss
fcompl
out
inc
jp
hlt
fwait
inc
out
out
ss
aaa
push
push
lods
jg
mov
mov
mov
shlb
daa
or
call
rorb
fs
fildl
lcall
add
leave
dec
lea
or
aad
add
pop
mov
pop
jbe
pop
or
insb
lock
movsb
and
ljmp
mov
cmp
dec
test
mov
scas
lds
rcll
push
sbb
mov
mov
aas
pop
jae
pop
aad
popa
aam
icebp
jns
push
adc
in
cmc
push
int3
ds
sbb
loop
mov
scas
mov
nop
mov
mov
add
and
std
jb
add
into
stos
inc
lods
dec
dec
fcmovnu
mov
icebp
popa
mov
adcl
and
pop
xor
xchg
mov
lret
mov
loopne
ds
into
pop
pop
scas
idiv
jne
fidivl
loopne
inc
push
push
and
pusha
jmp
dec
pop
add
inc
jmp
movsl
lahf
outsl
and
xlat
xor
je
das
and
bound
jg
adc
push
sbb
mov
movsl
out
jb
sbb
pop
pop
jb
lods
add
pop
pusha
pop
push
or
movsb
push
sub
and
test
mov
xchg
nop
loopne
mov
dec
and
xor
cmp
leave
addr16
mov
je
in
fcomp
inc
add
pop
push
xchg
xor
xchg
ds
mov
lock
andl
mov
mov
movsl
dec
dec
fwait
fs
cmpsl
cmp
test
add
inc
les
mov
jp
xchg
shr
subl
rcrl
mov
cld
jmp
out
cmp
adc
jg
loopne
sahf
test
mov
or
lea
jns
ja
cmp
aas
das
out
aad
xor
ret
mov
loope
xor
push
iret
pop
loope
or
jbe
jg
dec
daa
in
mov
adc
mov
sbb
jo
in
in
dec
ret
sbb
dec
fiaddl
hlt
int
mov
jle
ret
int
aad
and
cmpl
dec
push
adc
mov
nop
add
jb
movsb
cwtl
mov
inc
xorb
xchg
xchg
xor
jg
pop
fidivrl
xchg
push
sahf
mov
and
cmp
fldl
xor
movsl
jmp
mov
hlt
out
js
aad
sub
jg
add
jb
pushf
subb
mov
and
push
sbb
insl
mov
into
loope
repnz
xchg
ljmp
int3
dec
xchg
xor
insb
add
mov
fs
lods
xchg
pop
inc
jo
das
sbb
andl
movsl
pusha
xchg
pop
mov
pop
je
xor
iret
cmp
shr
lret
out
push
jo
bound
jne
lods
out
les
adc
pop
mov
mull
push
lods
fwait
imul
out
movsb
outsb
shrl
xor
aam
sbb
sub
sti
aam
xchg
out
inc
movq
xchg
pop
lods
out
mov
mov
adc
pop
out
gs
pop
xor
xlat
int3
push
out
add
movb
bound
jo
sti
jmp
popf
ret
dec
in
cmc
jmp
mov
fdivp
mov
loop
out
adc
sbb
rcr
dec
lret
push
inc
xchg
in
mov
dec
mov
mov
sti
xchg
popa
jg,pn
jb
lea
xchg
adc
in
cmp
inc
arpl
cmp
fisttpl
mov
sbb
les
fcmove
outsl
jno
mov
mov
jo
mov
out
sub
mov
scas
les
mov
sub
test
popf
fdivs
sbb
dec
add
adc
or
call
jl
stos
lret
lcall
jno
imulb
cmp
cmp
mov
arpl
add
dec
pop
add
rclb
outsl
add
iret
in
cmp
sti
fwait
ror
cltd
inc
sbb
mov
scas
adc
or
xchg
lcall
movsb
arpl
adc
adc
popf
sub
xchg
add
or
out
and
or
out
push
clc
sbb
mov
into
sbbb
lock
gs
or
cltd
sti
cmp
pop
jecxz
dec
jno
dec
adc
movsbl
mov
and
lea
inc
arpl
jbe
lods
jge
es
negl
mov
aas
stos
inc
dec
ss
push
fisubrl
iret
fs
pop
leavew
cmp
inc
repz
insl
mov
and
add
push
iret
sbb
push
cmc
inc
aam
xor
pushl
xor
mov
add
sub
inc
repz
test
fstpt
cmp
outsb
or
add
popf
add
or
xchg
add
push
xor
mov
push
inc
imul
nop
jg
jge
sti
fistps
mov
push
test
shll
ja
loope
in
adc
push
adc
inc
enter
ljmp
or
or
jno
and
scas
jecxz
cmp
cmp
xchg
inc
xchg
gs
pop
sub
dec
aam
pusha
sbb
addb
fdivrs
out
ror
movsl
dec
repz
push
pushf
imul
int
dec
xor
outsb
or
mov
or
movsb
pop
xor
sahf
aas
and
jns
das
in
lds
fcoml
adc
pop
outsl
into
cmp
push
mov
xchg
sti
mov
cltd
enter
gs
out
orb
cmpsl
movswl
fisubrs
sahf
cmpsb
les
pop
sbb
out
jns
push
mull
jle
mov
sbb
mov
sarl
dec
cmovl
sti
push
adc
sub
ret
sub
mov
pop
and
shr
ja
ds
mov
mov
sti
fstpl
scas
insl
jmp
jge
jg
clc
xorb
xor
jp
sub
test
sbb
inc
push
lods
mov
mov
mov
test
adc
test
jl
insb
add
pop
dec
mov
pop
fisubrs
out
hlt
mov
pop
cmpsb
pop
push
mov
stos
inc
in
push
inc
iret
aad
dec
or
cld
push
xor
push
xor
mov
out
ret
xchg
sbb
mull
shll
hlt
pop
dec
outsl
sbb
stos
pop
push
int3
xor
lea
pop
mov
or
fcompl
lcall
int3
mov
in
in
int3
adc
pop
lock
and
mov
xor
fistl
fmul
and
xchg
leave
js
repnz
incb
mov
outsl
shrl
mov
or
dec
jns
cmp
mov
sarb
push
jnp
mov
dec
out
add
add
mov
adc
xchg
cmpsb
pop
xchg
addb
jge
sbb
shlb
cmp
sbb
ja
and
out
mov
int3
out
sub
push
test
rorb
or
movsl
mov
int3
or
fwait
xchg
push
mov
movsb
mov
enter
shlb
pop
mov
popf
xor
sbb
mov
push
ret
dec
dec
pop
mov
add
push
es
sbb
cwtl
lds
das
lods
mov
inc
in
and
les
rorb
pop
ljmp
jbe
mov
mov
jle
sbb
scas
push
xchg
mov
add
sbbl
sbb
push
js
bnd
lahf
bswap
jmp
sub
in
sbb
subl
pop
dec
fstl
mov
mov
insb
pop
xchg
int3
mov
into
xor
mov
mov
add
jb
outsb
int
orl
adc
loopne
lds
inc
int
push
dec
dec
mov
test
push
gs
int
dec
push
mov
and
insb
xchg
shlb
test
aas
mov
or
shrl
arpl
jno
cmpb
push
in
nop
pop
mov
jle
sub
xor
rorb
jp
xor
jmp
xor
and
mov
jns
dec
decl
jp
mov
mov
lods
ja
xchg
vmread
jns
mov
out
lcall
mov
jns
dec
iret
out
mov
xchg
lret
or
sbb
ja
cmp
cmp
sub
or
mov
cltd
jl
cmc
scas
pop
xor
push
cmc
push
mov
popa
pop
mov
xorl
out
or
mov
repz
pop
negl
into
xchg
ja
pop
loope
xchg
fistpll
xchg
iret
cwtl
lret
faddl
mov
imul
jmp
mov
daa
popf
stc
cmp
push
lret
dec
xor
jp
pop
testl
mov
mov
daa
push
pop
mov
jnp
adc
mov
push
adc
sbb
aas
cltd
frstor
out
jp
adc
jge
lods
in
je
inc
flds
fnsave
scas
sar
mov
jl
adc
and
jle
dec
cmp
cltd
pop
pop
clc
adc
inc
call
jl
lods
in
dec
sbb
xchg
ds
lods
js
pushf
pop
add
jg
cmpsb
lret
enter
sbb
mov
pop
mov
loope
push
pop
aam
in
pop
imul
lret
fcmovb
ss
mov
xchg
jnp
mov
xchg
mov
roll
sub
mov
test
push
pushf
loope
gs
or
inc
ret
out
mov
mov
mov
daa
add
out
mulb
fldl
jmp
lods
adc
push
movl
xor
fs
test
and
cwtl
arpl
sahf
out
mov
push
cli
jecxz
mov
inc
or
mov
lock
sub
sbb
fistpl
test
push
xor
add
sbb
adc
arpl
cmpsb
test
sub
in
mov
xor
fnsave
xchg
arpl
jnp
lcall
ds
and
mov
stc
jle
cmp
sti
inc
inc
nop
fidivrs
mov
sti
arpl
in
sbb
ss
push
loopne
jl
jbe
mov
xor
inc
call
inc
cmp
fisttpl
nop
xchg
out
ret
lock
mov
test
faddl
test
mov
frndint
cmp
test
pop
scas
push
xor
loopne
test
cmp
icebp
fsubr
mov
bound
jecxz
je
mov
in
ror
ret
mov
fwait
aam
stos
add
or
mov
sbb
scas
xor
cli
out
jno
sahf
loopne
pop
xor
xchg
mov
mov
movsl
dec
shll
xchg
push
inc
je
popa
inc
and
inc
sbb
hlt
cltd
mov
push
dec
test
rorl
and
mov
push
pop
cmp
sub
addb
cmp
or
insl
test
pop
mov
sti
sub
dec
add
pop
xchg
aam
fiadds
addr16
out
pushf
xor
sbb
adc
or
paddd
xchg
xchg
pop
mov
loopne
and
mov
xchg
imul
cmp
insb
or
dec
ljmp
shlb
mov
enter
mov
in
std
xor
gs
pop
or
ret
popa
nop
jo
jb
add
cmp
sti
push
mov
push
and
add
xor
sbb
xor
xchg
add
mov
je
imul
das
push
push
jl
xorl
fisubs
inc
push
nop
rcrl
stos
xchg
mov
loopne
jmp
sub
fdivs
pushl
ficomps
ss
cmp
xchg
jge
testl
lock
mov
movsb
mov
mov
sti
shrb
out
xor
push
inc
jbe
xchg
enter
mov
mov
sub
mov
cltd
mov
sbb
jge
pop
and
hlt
mov
jl,pt
daa
and
pop
test
mov
jg
push
sbb
sahf
lret
mov
cwtl
mov
loop
mov
movsl
mov
add
aad
in
pop
roll
repnz
mov
dec
arpl
xchg
pop
and
dec
int3
xor
pushf
push
jns
dec
pop
loope
xchg
and
scas
lock
push
mov
rcll
or
jb
push
int3
out
jecxz
leave
jecxz
xchg
jne
je
dec
test
xor
sysexit
xlat
xor
movsl
mov
push
sub
in
add
mov
jl
stc
sub
mov
sbb
jg
out
push
shll
fxtract
ficoml
loopne
popa
mov
jne
incl
loopne
add
shll
imul
stc
scas
push
test
clc
mov
xchg
xor
inc
pop
out
outsb
fisttpl
sbbl
xchg
ss
das
sbb
push
insb
cmp
lcall
clc
sub
sub
and
lcall
insl
std
fs
add
jns
shrb
fimuls
ret
sub
dec
movsl
scas
mov
pop
je
div
add
ljmp
mov
add
jo
xchg
and
mov
scas
xor
mov
into
adc
arpl
inc
js
cmpsl
jle
fstpl
dec
dec
mov
sahf
mov
xor
das
cmpsb
sub
inc
fisubrs
jle
sbb
nop
dec
and
shll
ja
add
mov
sub
sahf
pop
jg
add
call
xchg
lret
std
movsl
xorl
stos
pop
lods
jge
mov
sti
cli
adc
mov
dec
push
xor
mov
dec
jnp
cwtl
popf
push
imul
insl
jns
pop
pop
addl
jno
add
cmc
sub
adc
das
mov
adc
xor
daa
dec
or
leave
movsl
sub
insb
cli
vmread
mov
icebp
stos
cmp
mov
mov
sarl
pop
push
add
psubusw
sub
sub
xchg
rcrb
dec
xor
mov
fstpt
call
mov
fsubrl
pop
push
scas
mov
fmulp
mov
mov
lahf
jne
data16
adc
sbb
cmc
mov
and
inc
jnp
repz
stc
push
int3
and
insb
xchg
inc
insb
std
rorb
push
add
sbb
jle
mov
sbb
cwtl
jmp
add
push
xchg
jge
addr16
in
or
dec
out
inc
jmp
aas
inc
jge
in
add
sub
nop
push
clc
push
or
ret
in
dec
aad
and
sbbl
pop
out
lods
xchg
jnp
in
cmp
cmp
call
fs
loop
aas
imul
shll
push
arpl
adc
or
hlt
xlat
js
stos
mov
add
nop
pop
xor
jns
inc
xor
inc
frstor
repnz
cmpsl
mov
push
ss
fnstenv
or
pop
stos
jp
std
aad
les
adc
int
ret
push
dec
imul
hlt
jmp
jae
jbe
sbb
sti
movsl
icebp
stos
int3
adc
ret
lgs
fs
xchg
subb
dec
movsl
sahf
faddl
lods
pop
cmp
insb
jmp
and
pushf
pop
fmull
xchg
cmc
fwait
xchg
ss
push
xor
push
adc
jo
adc
jecxz
cmpsl
pop
test
xchg
pusha
arpl
movsl
popl
into
mov
dec
jge
add
push
in
and
add
jb
in
insl
cmpl
stos
mov
mov
jg
daa
xchg
xor
cltd
mov
hlt
mov
inc
jae
or
int3
stos
insl
fs
mov
fsubl
jno
cmpsb
sti
clc
mov
mov
pop
sbb
movl
add
aad
pop
iret
sbb
inc
sbb
data16
js
pop
arpl
xor
cmc
and
pop
ret
ljmp
pop
sbb
xchg
add
sub
imul
test
and
jge
jo
xlat
pop
pop
test
pop
mov
push
std
leave
jno
xchg
mov
lcall
fs
xor
jb
xor
fimull
jb
out
mov
fnstcw
mov
adc
dec
ja
xchg
test
mov
pusha
mov
inc
or
test
bound
push
pop
leave
or
jge
daa
sahf
inc
imul
fs
inc
adc
adc
fwait
test
cmp
fcomp
cmpsl
or
shl
push
stos
into
and
es
mov
inc
scas
sub
shr
rclb
dec
sarl
iret
jo
shl
jo
lods
adc
dec
or
pop
shlb
jns
mov
bound
xchg
and
aaa
push
scas
dec
das
lret
dec
mov
mov
push
push
mov
or
into
push
shl
bound
out
idiv
dec
mov
xor
je
inc
outsl
out
loopne
push
or
xlat
mov
fadds
pop
mov
adc
jle
add
or
pop
push
out
sub
sbb
mov
aaa
mov
adc
call
jb
xchg
mov
cmpsb
stos
daa
adc
cmp
jp
orl
clc
sbb
lret
les
neg
lea
add
pop
add
push
mov
add
cmp
into
pop
gs
inc
pop
and
mov
dec
test
or
sbb
push
dec
mov
stos
mov
fwait
mov
lea
sarl
stos
jb
in
dec
ret
int3
les
sub
sti
xor
xor
andl
push
mov
inc
loop
insb
adc
fcmovnbe
adc
scas
outsb
int3
in
pop
daa
fsubs
popf
outsb
pop
pushw
jo
cmp
push
xor
dec
pop
mov
lcall
ljmp
jle
xor
loop
call
add
push
xor
into
or
or
push
sbbl
nop
jne
or
in
and
mov
loope
mov
inc
pop
into
mov
ja
cmpsb
jl
popa
push
sub
jnp
addl
repz
repz
dec
jns
cmp
je
ret
pop
leave
fldenv
enter
sbb
push
fisttpll
fdivl
add
fidivl
sti
mov
pop
cwtl
stc
test
adc
mov
or
jle
jo
xchg
mov
mov
test
push
xchg
push
fs
shrb
jno
xorl
jb
ficoms
inc
xor
dec
add
jb
int3
xor
in
inc
push
fsubl
popa
pop
push
sarl
sub
ret
ret
out
repnz
mov
sbb
xor
pop
cmpsb
cltd
cltd
or
popa
cltd
cltd
movsb
lds
mov
mov
xlat
in
adc
xchg
out
les
icebp
cmp
stos
mov
andb
fs
loope
add
out
stc
into
into
pop
ficompl
popf
cmp
stc
orb
out
sti
lock
adc
mov
jne
pop
dec
mov
out
mov
int3
divb
jecxz
fisubl
pop
xchg
js
add
jecxz
cld
xchg
loopne
jne
jge
cmpsb
jl
imull
loopne
int3
jb
mov
push
jbe
jb
jb
lret
adc
mov
movsb
mov
imul
frstor
lret
push
std
cwtl
mov
outsl
es
dec
fisubrl
icebp
push
pop
in
jle
in
fs
cld
jmp
les
dec
inc
fmuls
enter
cmpsb
inc
cmpl
or
xchg
jmp
pop
rorb
hlt
xchg
mov
addr16
cmpsl
sbb
shlb
loope
pop
adc
mov
stos
into
cmp
dec
lret
inc
in
aad
lcall
jb
scas
nop
or
movsb
out
pop
fsubp
mov
pop
xor
cmp
cwtl
mov
fsubl
fstps
test
ret
sbb
jnp
adc
pop
nop
xchg
test
loopne
loope
jge
pop
xchg
aam
push
stos
popf
cmpsb
mov
insb
xchg
out
bound
sbb
cmp
xchg
pop
testl
push
pop
lds
sbb
xstore-rng
cmpsl
adcl
mov
nop
xor
es
and
sbb
xchg
lcall
inc
or
inc
mov
mov
clc
jo
and
shr
pop
hlt
stc
dec
fdivp
adc
out
lret
cltd
das
xor
dec
push
inc
cli
nop
test
add
xchg
ficomps
adc
adc
cmp
mov
mov
xchg
stos
ljmp
adc
loopne
push
lcall
fcom
jb
subb
jbe
lds
xor
imul
xor
call
sub
and
lahf
mov
or
mov
cli
inc
push
sbb
sub
push
sbb
fidivrl
fmulp
xor
pusha
enter
shll
dec
insb
xor
or
pop
mov
int3
push
xor
ss
pop
pop
pusha
push
cld
js
push
mov
jb
cwtl
aad
lret
xor
dec
sub
mov
cmp
fcmovbe
xor
lods
or
out
jno
clc
xor
mov
pop
sbbl
mov
pop
mov
aas
xor
mov
outsl
mov
mov
xlat
shrl
inc
stos
or
loopne
dec
scas
dec
mov
int
bound
lds
inc
or
xchg
sub
aam
mov
xor
jg
jl
push
mov
and
inc
dec
and
test
inc
fcomps
xchg
xor
fildl
mov
int3
mov
inc
or
cmp
cs
mov
cli
gs
stos
test
cli
jmp
dec
add
cmp
out
push
dec
lods
test
dec
add
mov
cs
das
das
in
arpl
enter
mov
mov
subl
cmp
fs
jbe
js
dec
add
fisttps
arpl
and
jno
js
mov
pop
fists
sbb
jmp
inc
dec
fildll
daa
negl
movsb
push
adc
fdivs
add
jmp
dec
xchg
ret
inc
and
dec
mov
jmp
leave
xchg
sbb
sar
divl
sti
aad
mov
test
sub
ficoms
sahf
in
sub
mov
stos
fs
fnstsw
add
icebp
fsubrl
sub
loope
test
imul
aad
dec
mov
and
xor
in
popa
push
fdivrl
add
out
movsl
cli
mov
cwtl
fwait
shrl
movsb
sbbl
xchg
in
or
push
mov
outsl
push
fsubs
ds
hlt
mov
add
sub
push
xlat
test
cmp
ljmp
xchg
sarl
lds
in
jbe
mov
lea
dec
loopne
mov
jp
out
push
iret
push
jmp
inc
movsb
scas
mov
fdivs
bound
inc
loopne
imul
jno
shll
inc
addr16
rcll
mov
shl
xor
xor
testb
fwait
mov
fstl
add
pop
shlb
xchg
mov
das
add
lods
dec
cwtl
pop
cs
jbe
adc
adc
rcl
rorb
pop
or
enter
lock
or
stos
and
movsl
mov
rcrb
in
dec
and
sbb
das
int
push
mov
inc
jbe
push
insl
mov
stos
jle
ja
lahf
jne
xchg
inc
and
xchg
fmull
insl
pop
pushf
ret
in
repnz
lods
pushf
filds
and
leave
xchg
mov
xchg
out
mov
ja
add
leave
out
lods
mov
xor
fwait
repnz
pop
data16
and
loope
inc
add
nop
sti
or
mov
xchg
ret
pop
dec
jl
sub
stos
adc
mov
pop
loop
xchg
dec
cld
cld
or
dec
cmp
js
cmpl
add
mov
add
xchg
int3
jl
and
pop
fwait
pop
mov
dec
iret
imul
jbe
enter
xor
lahf
inc
movsl
add
jbe
out
ficomps
sbb
into
je
nop
push
out
lret
movsb
stos
into
jb
push
stc
dec
in
shlb
roll
cmp
push
sub
mov
orb
daa
movsb
push
and
iret
push
add
xor
test
cmp
adcl
xor
imul
sub
shlb
inc
fimuls
mov
dec
popa
aad
lea
sub
sub
xor
push
std
inc
out
pop
cmp
in
push
ja
sbb
push
fcom
fwait
and
xor
shlb
jg
lret
hlt
filds
repnz
push
cmp
pop
inc
cltd
lret
dec
pop
pop
add
sahf
jb
ljmp
cwtl
scas
or
xchg
add
dec
sbb
ret
inc
mov
jecxz
xor
jg
xorl
pushf
push
xor
repz
adc
arpl
das
lret
cwtl
cmp
lds
test
and
in
pop
xchg
mov
cmp
inc
push
push
mov
js
mov
ja
mov
movsl
inc
je
sub
test
fisubs
pop
and
xor
push
leave
lds
jle
push
inc
and
xchg
jo
das
or
pop
push
and
adc
jo
loope
adc
mov
loopne
cld
push
sbb
fs
lcall
cs
mov
lcall
inc
nop
sub
push
adc
push
leave
sbb
out
ret
sbb
mov
push
adc
add
xchg
fcomps
mov
repz
inc
cmp
xchg
inc
shl
insl
cmpsb
xchg
testb
adc
xlat
dec
shll
push
lods
mov
mov
in
push
scas
cmpsb
dec
sbb
or
movsb
mov
jmp
sub
mov
cmp
adc
outsl
movsl
xor
fnstenv
xchg
mov
shlb
out
insb
or
loope
es
test
mov
mov
lahf
repnz
xor
adc
les
inc
xor
and
movsl
jo
lea
dec
js
pop
ret
mov
ja
and
mov
add
rorb
test
lods
faddl
adc
cmp
mov
xchg
add
sbb
lret
xor
bound
repz
sub
insb
jne
xchg
jg
stos
inc
clc
rolb
dec
mov
adc
lods
repnz
dec
shl
or
add
inc
jmp
in
icebp
cmpsb
in
adc
push
mov
sbb
imul
xchg
xchg
mov
adc
fsts
addr16
sub
int3
mov
inc
dec
dec
es
fbstp
movsb
sbb
addr16
imul
and
cltd
pop
sub
fmull
repnz
or
and
jmp
xor
jge
stos
clc
std
inc
fs
sub
pop
adc
js
and
test
lahf
leave
cmpsl
dec
xor
fwait
xchg
push
push
outsb
bound
xchg
or
jp
push
mov
icebp
in
and
mov
fdivrl
push
xor
jnp
insl
lret
arpl
push
fcmovnb
pusha
pop
lds
jmp
es
mov
xchg
inc
lret
lods
fiaddl
mov
cmp
jmp
sub
clc
ret
xor
mov
sub
cltd
outsl
pop
mov
ss
cwtl
push
fnstsw
shll
cmpsl
lods
scas
mov
dec
pop
idiv
cmpsb
mov
pusha
hlt
xor
mov
add
and
push
outsl
jo
std
xor
testl
adc
inc
pop
js
hlt
scas
push
or
add
mov
dec
jb
addl
shrb
sub
mov
adc
pop
mov
jo
loop
imul
add
sti
pop
fistps
or
sub
and
imul
js
out
mul
aaa
int
or
fmuls
push
mov
stc
or
and
out
aas
negl
adc
push
push
and
mov
xchg
mov
clc
test
mov
ror
sub
pop
jne
jecxz
cmpb
lds
pop
sbbl
sti
ja
mov
movsl
jecxz
in
push
mov
jbe
fists
jnp
lods
bound
adc
add
pop
dec
mov
mov
xchg
addr16
mov
pop
pop
fwait
add
mov
mov
or
pop
xor
inc
ret
sti
dec
lods
dec
jae
xchg
adcb
into
lea
rol
inc
call
add
and
xor
xlat
and
repz
sub
fistpl
leave
stos
cmpsl
push
imul
fs
lret
sbb
sbb
jmp
scas
mov
jle
mov
xchg
cli
and
add
ret
pop
sbb
es
popf
jl
ds
aad
cmp
loopne
pop
rolb
in
mov
lcall
cmpsb
enter
jbe
jg
sti
sbb
adc
mov
orb
scas
inc
cmp
sti
sbb
popf
nop
insb
call
push
mov
xor
xchg
xchg
jb
testl
divb
mov
dec
mov
or
mov
hlt
aas
inc
aaa
outsb
lea
mov
pop
or
cmc
repz
jbe
lret
mov
and
addb
sub
sub
andb
or
inc
mov
ds
in
mov
mulb
push
outsl
lret
mov
insl
sub
sub
push
and
rcrb
and
mov
xchg
jno
add
pop
ret
or
nop
cld
out
insb
jo
stos
ds
arpl
mov
ficoms
push
sbbl
jl
inc
xchg
mov
imul
arpl
lret
adc
and
insb
or
ljmp
insl
mov
outsl
scas
insl
fbstp
mov
in
lock
roll
adc
aam
mov
repz
push
ret
adc
push
test
sub
fcomps
push
mov
mull
mov
leave
xor
pop
mov
add
cmc
rol
lods
and
and
fmul
insl
pop
push
into
js
or
jge
push
out
jns
out
sbb
stc
imul
dec
rcrl
xor
xor
sub
push
lret
ds
iret
shll
ftst
or
or
mov
fsubs
add
call
or
push
pop
dec
push
xchg
jno
cld
jo
sbb
lret
add
pop
mov
xor
cmp
mov
sub
out
out
xor
add
pop
in
cmpsl
jb
fs
lahf
adc
push
push
xchg
mov
sub
inc
and
dec
dec
or
push
scas
mov
into
sbb
or
mov
xchg
mov
sbb
inc
push
loop
mov
jmp
iret
loop
cmpl
imul
es
js
mov
mov
mov
push
xor
sub
aad
and
test
nop
add
jecxz
xchg
aaa
fwait
repz
lods
and
ja
iret
insb
out
pop
mov
mov
repnz
pushf
cmpsb
add
inc
repz
sub
cmp
outsb
mov
out
sbb
rorl
xchg
imul
jg
jae
nop
xor
jne
and
inc
pop
jg
xor
in
push
ror
daa
pop
sets
out
xchg
push
ss
ret
dec
shrl
pop
test
ficoml
imul
movsl
push
adc
sbb
xor
push
adc
movsl
lret
cmp
mov
push
mov
in
inc
loopne
cmp
mov
xchg
sub
sub
add
sub
imul
jmp
fbld
jo
js
pop
sahf
ljmp
push
and
fdivrl
or
cli
mov
js
add
subl
nop
out
outsb
cmp
xchg
les
pusha
aam
jns
int
fstp
dec
jbe
sbbb
insl
jo
mov
jns
inc
pop
or
push
gs
jb
mov
dec
or
inc
roll
lret
pop
mov
movsb
xorb
mov
jo
movsb
jbe
scas
shl
mov
jmp
das
lds
sbb
push
jmp
sub
lds
adc
sarl
adc
jmp
or
pop
stos
addr16
adc
xchg
lahf
icebp
jns
dec
out
movsl
push
in
cmpsb
sbb
iret
and
test
push
pop
lea
jne
add
mov
fwait
shll
xchg
fdivp
dec
fcomp
push
lock
dec
mov
rolb
imul
jbe
shrl
cmpsb
pop
in
push
adc
push
push
sbb
xchg
mov
and
enter
xchg
testb
mov
cmp
lods
dec
push
sarb
cmc
xchg
adc
in
test
arpl
push
fsubr
aam
ljmp
stos
hlt
arpl
lods
mov
out
adc
lcall
inc
xchg
rorb
sti
dec
adc
test
add
call
call
jae
or
sbb
fcmove
dec
test
pop
mov
inc
xchg
xor
je
loopne
sahf
enter
xor
sub
dec
adc
ret
lcall
pop
jp
js
pop
push
cli
jne
bound
pop
pop
sbb
push
push
mov
mov
test
mov
mov
xchg
add
inc
repz
jbe
jmp
cmpb
fstpl
push
sbb
mov
xor
in
mov
lods
je
pushf
add
out
ficompl
sahf
and
sarb
pavgb
mov
int3
jg
dec
testb
loopne
roll
jns
iret
nop
mov
cmp
mov
movsb
jge
dec
addr16
dec
jnp
data16
dec
ret
scas
daa
mov
int3
push
shl
xchg
add
or
pushf
sbb
add
fstpt
inc
mov
outsl
jne
lret
insl
test
fiaddl
out
popa
cs
insb
in
stc
jno
and
daa
inc
dec
sub
aaa
and
cmp
mov
or
push
adc
or
in
mov
imul
dec
inc
nop
mov
fnclex
adc
std
push
xor
push
js
pop
ljmp
fcomp
inc
sahf
xchg
lods
stos
ss
mov
push
xor
xchg
pusha
jl
mov
add
sbb
sbb
lcall
cmpb
shl
test
inc
sbb
jl
ja
cs
sti
fdivr
jmp
lret
pop
int
out
aam
cmp
mov
popa
and
repnz
cmp
sbb
stos
jnp
dec
nop
call
mov
in
rcr
popa
test
adc
rcll
xlat
add
adc
notl
int3
pop
jbe
repz
push
xchg
loop
call
js
xchg
mov
sub
cmp
jno
adc
mov
movsl
jge
test
cs
and
jne
test
xchg
mov
popa
or
scas
popf
imul
cmp
push
and
outsl
xor
mov
jbe
in
loop
mov
pop
out
push
push
pop
jbe
outsb
sbb
mov
js
rcrl
testb
inc
out
adc
subl
shr
push
pop
in
rcrb
fwait
int
lahf
sti
sbb
shll
push
mov
sbbl
cltd
jns
add
movsb
in
dec
cltd
nop
insb
cmp
imul
adc
add
mov
xlat
mov
mov
movsb
int
into
rolb
inc
test
xor
mov
inc
add
mov
jae
dec
mov
mov
jp
jno
leave
outsl
mov
mov
movups
dec
lea
shr
daa
push
or
data16
cmp
mov
loope
jp
imul
movsb
std
insb
sub
xchg
and
pop
fwait
jle
sub
jns
push
test
dec
add
out
das
out
stos
add
sub
and
inc
int3
popf
repz
enter
repz
push
mov
rcrl
add
cs
js
cmc
lret
aaa
stc
inc
lahf
mov
and
into
push
repnz
ret
lds
es
lret
iret
xchg
push
mov
xor
ljmp
clc
enter
inc
mov
add
mov
stos
pop
and
lds
lcall
and
leave
cltd
rclb
aam
or
and
repnz
mov
mov
inc
jns
in
xchg
outsl
movsb
in
inc
cli
mov
add
mov
adc
xor
mov
out
jne
push
std
add
fsubrl
mov
adc
mulb
les
int
mov
stos
xchg
nop
stos
push
push
inc
fisubrs
or
mov
or
out
loope
ficomps
sub
xor
xor
mov
out
add
pop
lods
and
push
jle
push
loopne
sub
xor
inc
xchg
jns
jl
sbb
add
addr16
mov
scas
cltd
in
sti
pop
cmp
clc
sbb
or
ret
mov
sbb
and
mov
repz
leave
push
mov
mov
push
jmp
pop
push
insl
ljmp
scas
xlat
pop
sub
je
into
adc
xchg
dec
rcr
imul
sbb
mov
in
std
mov
out
call
pop
fld
xor
pop
notl
adc
in
push
cmp
imul
test
movsl
jo
dec
xchg
or
aad
xchg
cmp
jnp
or
add
pop
ret
arpl
add
inc
das
mov
nop
fdivl
fisubrs
pop
sarl
pop
outsb
xchg
jl
fisttpll
adc
xchg
jno
clc
xchg
and
or
mov
bound
cwtl
lret
jne
and
xor
das
test
int
xor
std
cmp
sub
loop
aaa
in
mov
sub
cmpsl
jg
push
or
ja
xor
xchg
movsb
aam
arpl
out
nop
les
adc
mov
pop
lock
sub
leave
out
mov
mov
mov
es
jmp
ljmp
loope
frndint
mov
scas
fsubrs
xorl
lret
sub
or
cmpsl
cmp
and
xor
dec
fsubrs
leave
push
push
adc
inc
sbb
push
or
cmpsl
out
xchg
sahf
xchg
add
test
jge
testb
stos
sbb
sbb
cmpsl
stos
cmp
jg
push
fisttpll
and
movsb
lea
pop
scas
mov
lcall
mov
lock
fdivrs
in
xchg
xor
mov
push
scas
xchg
ret
ds
jle
jae
and
xchg
lret
lcall
push
jl
sub
addr16
mov
into
dec
inc
adc
subl
xor
xchg
push
or
je
dec
inc
mov
add
dec
jb
mov
sarl
mov
outsb
subl
push
out
push
stc
dec
jl
pop
stc
jns
mov
outsb
mov
bound
jecxz
sti
lods
mov
jmp
xor
pop
adc
add
je
outsb
dec
cmc
jecxz
xrelease
sub
adc
and
mov
mov
lret
fnstenv
cltd
out
push
mov
fsubp
pop
ret
je
jle
cwtl
and
sub
insb
pop
inc
push
js
pop
sbb
dec
gs
cmp
sub
into
mov
pop
decl
in
cmp
pusha
fistl
addl
lcall
shr
fwait
test
jne
dec
xor
int3
mov
dec
add
push
push
push
mov
or
push
mov
cmpsl
lds
mov
clc
enter
jge
push
scas
test
jae
cmpb
loop
filds
lock
mov
mov
cmc
insl
int
cmp
ds
test
jp
sub
pop
jmp
jge
insb
or
dec
lahf
out
int
lods
addr16
hlt
fadds
mov
test
sbb
dec
ficoms
je
cmp
repnz
push
shl
out
push
mov
sarb
push
sub
inc
test
insb
mov
mov
xchg
fnstsw
int3
cmp
aas
xchg
or
mov
test
std
hlt
mov
sub
cmp
pop
sub
hlt
mov
mov
mov
cmc
popf
sbb
ret
jnp
cmpsb
std
test
inc
jo
sbb
sar
or
sub
scas
sub
pop
sbbl
mov
pushf
mov
movsl
loopne
das
clc
jns
jb
pop
scas
push
sbb
loopne
cmp
lds
jmp
pop
sub
stc
mov
js
mov
outsl
pop
hlt
inc
dec
push
in
inc
fcmovne
mov
loop
xor
and
and
iret
mov
push
popf
notb
mov
cmpsl
adc
sub
test
add
or
mov
pop
leave
jmp
test
push
xor
adc
lret
inc
sub
jnp
jnp
lods
add
incl
pop
add
insl
fs
lret
dec
sbb
mov
or
inc
sbb
dec
inc
dec
lods
or
jmp
pop
mov
test
sbb
int
adc
push
pop
cs
incl
sbb
jne
sti
jle
push
cmp
insl
add
fistps
arpl
out
xor
cmp
xlat
jae
pavgb
xchg
mov
push
lret
mov
push
lret
scas
jle
xor
in
dec
jp
mov
inc
mov
pop
mov
repnz
test
scas
loope
addr16
xchg
xor
mov
test
mov
push
sti
lods
dec
enter
movsl
cld
and
std
sti
pusha
std
jnp
subb
mov
jne
push
shl
jmp
popf
add
inc
cmp
subb
push
adc
mov
aas
dec
divl
lock
jb
xlat
std
inc
scas
mov
adc
dec
mov
mov
or
jg
sti
jge
js
lods
inc
js
and
fwait
rcrl
mov
movsl
sbb
cvtps2pi
mul
add
fcmovbe
fwait
inc
fwait
sti
or
les
popaw
jo
in
mov
or
pushf
xorb
cmpsb
pusha
sti
out
das
or
push
cmpsb
testb
shll
inc
in
bound
and
push
in
xchg
inc
int
loope
jg
in
dec
push
clc
sub
push
xchg
call
call
leavew
pop
push
imul
or
inc
mov
sbb
inc
xchg
roll
sub
ljmp
lcall
imull
dec
stc
pop
adc
adc
jecxz
into
movntps
lds
sbb
fists
xchg
cmp
into
imul
push
jg
leave
and
cwtl
mov
pop
lcall
dec
add
in
dec
mov
int
mov
call
fldcw
sub
int3
jno
cltd
int
xchg
xor
adc
in
leave
in
xchg
out
sahf
mov
cmp
xor
test
scas
mov
je
es
repz
jo
sahf
dec
pop
jb
push
sbb
negb
jmp
push
and
add
out
out
pop
inc
cli
aaa
mov
mov
pushl
jp
pop
mov
xor
push
sahf
sbb
jbe
lret
into
xor
inc
mov
mov
mov
aam
mov
push
aam
xchg
testb
lea
nop
push
ucomiss
pop
mov
mov
add
and
fmuls
jl
dec
xchg
int3
inc
pop
mov
mov
mov
rcll
outsl
mov
out
js
dec
jb
scas
mov
push
addb
hlt
xchg
mov
out
je
out
loopne
rorb
mov
cld
mov
mov
daa
outsl
mov
add
push
js
cmp
sub
movsb
and
add
cwtl
imul
add
jp
neg
inc
push
mov
mov
cmpsb
xchg
dec
stc
int3
mov
inc
out
in
xchg
cmp
test
sbb
ret
or
icebp
xor
insb
mov
or
out
adc
xor
or
dec
clc
das
adc
cwtl
dec
pushf
mov
add
aas
sbb
inc
sbb
insb
add
mov
in
mov
mov
or
jecxz
cmp
xchg
xchg
fnstcw
push
test
repnz
xor
sub
lret
push
movsb
outsb
cmpsb
jnp
cmpsl
leave
sahf
out
and
pop
adc
popf
mov
nopl
xchg
je
pop
inc
mov
inc
ljmp
incb
das
daa
inc
xlat
leave
cmpsb
rorb
push
adc
pop
and
jmp
enter
call
imul
stos
out
aam
ficompl
sub
sarb
movsb
jae
hlt
xor
fnstcw
push
dec
push
rcl
dec
icebp
lret
std
sub
push
push
repnz
jae
fstl
mov
add
out
mov
add
int
add
sbb
fwait
and
call
pop
insb
push
lcall
sarb
mov
or
call
cmp
xchg
addb
pop
pushf
mov
cmp
push
jbe
cmpsl
ja
xor
insb
js
pop
xchg
aaa
insl
in
pop
push
clc
jbe
into
sbb
nop
sbb
les
mov
ret
sbb
js
sbb
daa
addl
leave
cli
sub
imul
in
or
dec
push
jnp
mov
xlat
mov
or
lcall
cmpsl
pop
sub
mov
fistl
or
pushf
lret
mov
inc
and
dec
jmp
hlt
xor
arpl
and
lahf
push
or
push
xchg
imulb
shrb
jb
pop
mov
sub
repnz
xchg
add
mov
mov
pusha
inc
xchg
xchg
mulb
lea
pop
and
inc
arpl
push
scas
mov
daa
daa
mov
popa
mov
sbb
sbb
repz
push
aas
xchg
xor
xor
jne
andb
mov
hlt
pushf
jnp
dec
sarb
cmp
sbb
cmc
mov
mov
imull
je
loope
cmp
cmpsl
mov
xchg
pop
xor
fscale
ja
ja
insl
cwtl
dec
rcll
aas
xchg
push
mov
sub
xor
fs
cmpsb
cwtl
es
mov
jl
inc
add
bound
jnp
push
mov
adc
inc
xor
or
jmp
filds
xchg
mov
lock
and
push
mov
jl
sbb
test
or
fwait
outsb
je
nop
jne
mov
mov
and
scas
pop
cmp
xor
pushf
cmpl
jbe
out
stos
mov
dec
popf
add
adc
fs
mov
inc
pop
jmp
add
inc
inc
hlt
xchg
pop
cmp
lea
out
xor
push
sub
mov
pop
std
rolb
outsl
popa
add
mov
imul
aas
lock
push
dec
mov
stos
icebp
push
pop
ss
xchg
pop
andb
pop
mov
pop
lahf
sahf
push
gs
sbb
adc
dec
loopne
out
shrb
push
dec
fisubrl
lods
popa
pushf
sbb
mov
loop
dec
fwait
imul
mov
push
dec
scas
adc
test
inc
je
or
loope
leave
fdivrl
mov
mov
fwait
dec
mov
movsb
jle
loop
cmp
cvtdq2ps
pop
stos
vpmullw
mov
mov
jno
mov
xchg
fcmovne
sbb
cmpsb
lods
shr
loop
btr
push
test
cli
popf
test
and
mov
inc
lret
mov
andb
movsl
call
push
inc
sub
les
add
imul
inc
mov
add
dec
sub
aad
push
dec
sub
xor
icebp
gs
shlb
std
aaa
mov
out
mov
lds
dec
out
mov
cmp
sbb
sub
loopne
jb
mov
sbb
dec
and
xor
pop
jmp
and
push
push
fcoms
scas
pop
adc
int3
inc
or
dec
dec
lret
out
cmp
cmp
xchg
xchg
jb
and
fs
ljmp
add
and
ja
aas
adc
jmp
or
sub
test
cwtl
push
fldcw
js
xchg
xlat
mov
and
xchg
sub
push
mov
pop
stos
sub
push
dec
cld
dec
xor
mov
mov
push
fxch
jae
xor
pop
mull
xchg
mov
arpl
inc
sbb
mov
lret
jno
mov
pop
sbb
call
das
dec
leave
testb
rorb
and
insb
and
push
test
outsb
inc
loopne
jo
and
jns
xchg
les
call
pop
cs
sbb
mov
xchg
add
add
cli
stos
dec
sbb
pusha
rorb
pop
inc
cmp
dec
adc
roll
adc
xchg
dec
scas
add
ficomps
js
dec
xchg
ret
jbe
or
outsb
mov
ja
ret
cs
push
hlt
mov
cli
sbb
cmc
pop
cmp
es
insl
cmp
mov
add
or
mov
mov
in
int3
xor
and
pop
and
lods
dec
fstps
add
xchg
out
in
sbb
insb
mov
cmpsb
std
cmp
or
das
or
and
scas
cmc
test
mov
inc
and
pop
iret
std
pop
jne
mov
adc
aad
inc
mov
xlat
cmpsl
mov
lods
out
add
int
add
cmp
int
mov
pop
lahf
cmp
xchg
cmp
push
dec
ss
les
push
push
xor
insb
test
mov
aaa
shl
and
movlps
or
inc
and
sub
sub
andl
push
jb
pop
push
repnz
std
sbb
imul
push
xor
push
or
inc
and
loop
ds
ror
imul
push
clc
mov
mov
mov
xor
repnz
cli
jae
pop
add
cmpsb
mov
pop
sub
inc
mov
cmp
sbb
and
aam
out
xchg
adc
push
pop
dec
mov
dec
into
lret
enter
ret
jbe
cltd
add
pop
push
dec
jb
add
sub
mov
in
dec
mov
test
lahf
adc
push
xchg
push
test
lahf
pusha
cwtl
test
pusha
xor
mulb
sahf
call
cmp
push
pop
into
aas
fisubl
sbb
orb
mov
pusha
bound
ss
pop
push
mov
bound
mov
outsl
dec
bound
jmp
aas
inc
sbb
jne
hlt
mov
mov
cltd
aaa
inc
push
pop
mov
mov
pop
outsl
cltd
jnp
scas
scas
xchg
dec
lods
scas
dec
sahf
push
mov
and
loope
pusha
imul
sub
enter
fisttpll
lods
dec
sub
push
cltd
shll
or
dec
repnz
mov
stc
xchg
cmp
adc
mov
sub
hlt
add
jne
cmpsl
je
popf
xor
sar
xchg
mov
inc
xchg
stos
and
inc
imul
addr16
dec
jae
clc
cmp
push
movsl
mov
sbb
loopne
push
mov
pop
cltd
cli
test
sbb
lea
sti
ret
mov
dec
test
push
jecxz
roll
pushf
adc
les
addr16
jmp
add
push
and
call
leave
rclb
jge
add
leave
adc
xchg
repnz
push
adc
lock
in
in
pop
lods
rcl
sbb
mov
testb
testb
mov
scas
hlt
fld
cmp
cli
inc
mov
fildl
bound
jle
add
leave
fdivrl
mov
and
add
pop
mov
test
add
add
mov
push
cmp
lea
mov
jle
inc
push
outsl
mov
mov
cs
adc
pop
xchg
xor
or
push
xchg
push
or
sub
adc
jno
scas
dec
loop
in
call
xchg
in
subb
dec
fisttpl
in
push
hlt
ret
repnz
cs
xor
cmpsb
mov
pusha
aaa
jle
dec
and
sub
aad
lods
push
mov
push
ljmp
ret
cs
mov
inc
das
sub
incl
and
lods
pusha
cmp
cmp
repz
xchg
fsubl
lods
push
shrl
inc
int
pop
xchg
pop
or
cmp
adc
push
xor
cmp
jl
mov
fidivl
iret
push
cmpsb
outsb
out
test
mov
das
shl
out
xchg
mov
rorb
pop
xor
push
xor
sbb
jge
mov
scas
jp
leave
push
cs
mov
cld
cmp
mov
mov
jge
pop
push
mov
aas
loopne
test
je
lods
pop
mov
fildl
jmp
std
sbb
test
pop
pop
xchg
push
jmp
push
iret
xchg
cmpsl
js
or
adc
lea
mov
push
dec
leave
cwtl
cmpsl
and
sub
out
dec
and
sbb
inc
js
stc
xor
stc
pop
cmp
das
jne
add
sub
and
pop
lds
loope
fiadds
inc
xchg
mov
int
test
ljmp
and
pop
aam
in
fs
cs
mov
test
pop
icebp
fldl
out
lock
pusha
mov
mov
lahf
cmp
sub
jecxz
jmp
iret
mov
and
hlt
xchg
xor
ss
das
scas
sub
mov
inc
or
lret
dec
mov
sbb
pusha
or
push
fucomp
hlt
mov
addr16
repnz
mov
push
test
sbb
shl
fcoms
sub
repz
dec
or
fcomps
rcrb
mov
sbb
cmp
sub
rcrb
jb
ss
jmp
bound
xor
adc
jp
jp
or
inc
jnp
adc
sub
mov
xchg
fmul
out
pop
cmp
data16
js
cmpsl
xlat
into
gs
mov
fcoms
in
xor
jmp
in
jle
jg
xchg
les
lret
add
sbb
mov
xor
jbe
adc
xchg
push
arpl
cmp
or
rcl
cs
jp
iret
push
xor
cmpsb
add
cmc
xor
and
popa
repnz
js
and
push
loop
inc
adc
ret
jns
or
loope
ljmp
cmp
jae
aam
mov
xor
imul
cmp
mov
push
nop
test
and
mov
dec
jb
and
cltd
mov
or
inc
loope
adc
push
pop
sti
add
mov
int3
outsl
adcl
fnclex
arpl
sub
jo
adc
xchg
aas
jns
pop
mov
rolb
js
or
mov
cmp
sbb
push
pushf
sub
rep
loop
fidivrs
xor
inc
mov
xor
and
jl
xchg
inc
sbb
test
sub
xor
cli
pop
jg
aam
mov
lock
xchg
mov
fcmovu
rcrb
lcall
cmp
cwtl
pop
sub
jmp
aam
sbb
pusha
hlt
sbb
or
mov
inc
fisubrl
and
inc
je
or
or
xchg
and
jmp
movsb
ss
out
sub
mov
stos
cmpsl
outsb
pop
movsl
dec
inc
cld
scas
jno
out
add
out
cmp
scas
bound
loope
pusha
fistpl
push
shll
jo
popa
jo
das
fisubl
jbe
push
pop
push
int3
imul
dec
jo
add
enter
loopne
add
adc
jmp
or
jle
add
pop
stc
outsb
inc
lahf
orl
gs
and
test
mov
movsb
test
push
es
mov
xchg
inc
fldl
inc
loope,pt
inc
test
adc
add
inc
mov
int3
dec
sbb
in
bound
sahf
jmp
int3
insb
shll
push
mov
imul
test
rorl
push
pcmpeqd
cmp
push
lods
inc
shrl
mov
add
jb
mov
and
lock
inc
dec
mov
jecxz,pt
xor
imul
inc
jnp
xchg
mov
ja
ljmp
aam
inc
xchg
push
movsl
leave
push
lea
pop
daa
or
jne
mov
cmp
pop
daa
cmc
stos
rcrb
cwtl
push
push
in
adc
fists
cmpsb
out
jb
mov
js
dec
ja
or
sahf
fnstsw
or
and
js
ds
xor
cmp
movsb
fadd
push
pusha
mov
inc
xchg
jae
mov
arpl
pop
adc
std
bound
outsb
push
loopne
dec
xlat
push
adc
stc
lods
dec
cmpsb
sbb
jle
jae
mov
mov
and
xchg
stos
pop
imul
mov
lds
out
insl
dec
xor
push
jge
push
xor
in
ret
pop
cltd
imul
mov
xor
pop
xlat
adc
push
xchg
mov
fimuls
jl
sub
dec
jmp
or
movsb
test
aad
lea
int3
movsb
push
mov
sub
jp
jo
inc
mov
sti
push
ret
js
mov
push
push
popf
imul
xchg
subl
lock
movsb
pop
imul
dec
cld
ljmp
cmp
mov
outsl
out
sub
popa
push
rorb
arpl
fistpl
call
dec
imul
aaa
sbb
call
fisttpll
fs
in
push
mov
lcall
push
dec
cmpsb
pop
sahf
xchg
xchg
cmp
add
inc
out
lcall
movsl
cmp
adc
mov
fldl
jge
jg
shl
cmp
pop
sbb
pushf
push
fdivrs
mov
mov
inc
pop
pusha
pusha
xor
push
pop
lcall
outsb
call
ljmp
popf
push
mov
addl
xor
test
cmp
call
ret
movsb
popa
lea
sbb
inc
push
xor
mov
dec
or
jg
xchg
fadd
cmp
inc
jae
xor
inc
fisubl
mov
inc
jl
shll
out
outsl
nop
jbe
ret
sbb
incl
jp
aas
adc
lret
sahf
aaa
out
out
shll
xor
sbb
lret
loope
fdivrl
add
mov
pusha
sti
xor
inc
subb
out
mov
adc
xor
inc
mov
aaa
pushw
dec
xchg
mov
loop
stos
rclb
push
rcrb
negb
bswap
ss
push
sbb
aaa
inc
data16
jno
test
jae
adc
jg
sbb
xor
or
push
inc
inc
adc
loope
mov
push
shl
or
dec
std
mov
mov
push
ficompl
adc
cmpsl
imul
inc
sub
xchg
popa
into
lret
mov
pop
cwtl
add
pushf
int3
inc
sub
mov
in
cmpsl
ljmp
mov
xchg
xor
jg
pop
jmp
mov
lea
pusha
pop
and
in
inc
sbb
cs
fwait
in
dec
aam
stc
test
add
push
push
sbb
inc
fimull
outsl
cmp
xor
movsb
into
out
ret
les
jns
mov
xor
or
xchg
stc
mov
sub
lret
inc
fnstcw
mov
test
test
mov
cmp
adc
notl
fists
gs
outsb
lock
pop
repnz
sbb
repz
push
sarl
ja
mov
xorb
or
mov
mov
push
cmpsb
arpl
fisubrs
out
push
fcomip
dec
je
lds
hlt
bound
into
or
scas
lcall
repz
aaa
xchg
cwtl
enter
mov
lock
js
jae
mov
movsl
pop
cmc
jle
je
sarb
call
shlb
jns
out
mov
mov
rcrb
lcall
dec
or
js
andl
and
flds
adc
lret
mov
inc
cmp
sub
ja
andps
pop
mov
in
and
jle
stc
push
pop
mov
cli
or
fdiv
leave
sub
sbb
insb
lret
dec
fnstsw
pop
incl
jmp
aam
jnp
nop
cwtl
mov
outsb
dec
jg
insb
decl
je
jl
icebp
in
jp
adc
insb
leave
inc
aad
jp
sub
push
jno
loopne
mov
fisubs
cmpsb
or
hlt
js
add
xor
and
mov
mov
or
test
lret
pop
sub
push
mov
loop
mov
pop
icebp
sbb
bound
push
inc
or
mov
sarb
sub
dec
iret
jge
mov
imul
in
repz
test
sub
xor
aaa
mov
adc
dec
test
push
adc
into
iret
mov
ficoms
shl
push
andl
int
sbb
xchg
push
les
mov
jmp
data16
cli
js
push
cs
xchg
cmp
loope
pop
mov
nop
fcompl
xlat
lcall
dec
subl
jno
shrb
clc
xor
lret
xchg
push
jecxz
pop
xor
pop
xor
or
or
rclb
jg
push
insb
add
xchg
in
call
cmp
jl
enter
pusha
and
jge
push
jb
xchg
rolb
lcall
arpl
out
pop
xor
frstpm(287
popf
lahf
push
lods
sub
sbb
cmp
and
push
mov
sub
fdivl
mov
cmc
and
jns
sub
lods
jb
shlb
jae
dec
sarl
mov
push
or
gs
xchg
movsl
lds
cld
pop
sbb
ja
mov
sub
mov
inc
adc
out
movsb
add
jmp
mov
sub
push
jns
imul
inc
and
popf
repnz
jbe
andl
iret
mov
dec
rcr
dec
in
cwtl
mov
jo
sbb
jp
clc
scas
hlt
lods
mov
jae
pop
stos
mov
mov
das
aad
shl
shl
push
iret
imul
sub
jne
mov
aas
in
xchg
roll
sbb
push
mov
fdivrs
mov
cmp
cmp
dec
cmp
xor
mov
sub
lods
sbb
mov
mov
call
lds
dec
lretw
addr16
sbb
mov
mov
push
sub
daa
outsl
xchg
ret
jecxz
cld
mov
xlat
mov
xor
pop
jecxz
mov
inc
mov
mov
sbb
add
das
lea
add
cmp
pop
loopne
adc
out
dec
push
pop
fwait
addb
lea
xchg
sub
pop
das
pop
nop
and
dec
je
sbbl
outsb
inc
insb
mov
jl
mov
xor
out
ftst
daa
rorb
sub
les
jle
xorb
aad
mov
scas
sub
daa
cmpsl
mov
pop
scas
pop
pop
call
into
ret
xor
mov
add
stos
std
into
mov
aaa
xchg
add
lahf
cmp
stos
aad
cmp
cs
sub
lock
je
iret
push
and
and
imul
mov
push
xorl
or
add
push
mov
pop
test
xor
xor
fldcw
or
add
mov
repnz
push
iret
add
gs
movsl
addb
lahf
repz
jl
sub
movsl
sub
push
popf
or
lret
sbb
lret
aad
fnstcw
or
test
and
cmp
xor
cmpsb
imul
mov
ja
mov
xchg
imul
pop
mov
or
add
hlt
stos
imull
and
adc
icebp
in
nop
mov
sbb
add
int
mov
shl
fcompl
lods
into
mov
shlb
add
fistpl
fstpt
push
pop
hlt
cmp
mov
push
in
inc
lret
mov
xchg
lcall
or
xor
and
out
iret
push
fcomi
fsubl
jecxz
lods
adc
lret
push
imul
shrb
aaa
xchg
inc
mov
pop
xor
ja
push
test
pop
das
pop
rclb
xchg
out
icebp
mov
sti
nop
enter
xchg
adc
jge
adc
fwait
jo
cltd
mov
xchg
push
lock
fildll
mov
and
push
xor
mov
xor
daa
call
ss
mov
mull
inc
andb
mov
in
leave
xor
and
push
aam
inc
mov
mov
pushf
sub
mov
mov
cmp
enter
push
lock
cmc
loop,pn
shl
cmp
pop
and
mov
push
xor
mov
mov
jne
scas
cmp
aas
iret
xor
fbstp
test
mov
mov
inc
ljmp
add
incl
out
cmpl
movsb
pop
jmp
xchg
popa
dec
sbb
addb
mov
loopne
loop
jae
xchg
dec
adc
mov
ljmp
loope
out
dec
popf
pop
push
and
loop
push
adc
xlat
sti
mov
jno
cltd
inc
pop
inc
dec
aam
and
and
clc
scas
loopne
icebp
add
sub
ds
daa
push
jl
testb
aaa
sub
mov
call
stos
push
shll
push
push
mov
bound
pop
pop
lahf
pop
pop
flds
pop
call
call
inc
fiaddl
pop
xchg
xchg
iret
les
ret
sub
daa
dec
lret
jp
rcrl
cmp
push
les
shll
pop
hlt
lret
inc
xlat
cmp
ret
shr
push
add
sbb
inc
and
mov
mov
fimuls
movsl
jno
dec
mov
mov
cmc
mov
imul
push
scas
adc
mov
into
mov
dec
push
dec
bound
loopne
cs
fimull
adc
or
jno
adc
jbe
ja
aam
jecxz
or
jmp
cmc
pop
adc
mov
ret
push
movntq
xor
roll
jecxz
fiadds
sbb
jl
stc
lcall
aas
and
sub
fucomip
cmp
fmuls
sub
inc
stc
shll
jae
dec
cwtl
pop
jb
inc
mov
jp
add
sbb
movsb
cwtl
xor
adc
jg
ret
out
mov
dec
loop
in
leave
aad
pop
pop
xchg
lea
popf
es
lods
pop
cmp
ja
push
jae
fwait
in
ret
cmpsl
std
push
push
mov
cmp
xor
inc
xchg
sti
dec
repz
jno
in
insb
in
lahf
xor
into
xor
fmuls
loope
mov
cmpsl
and
cmp
cmp
adc
rcl
jb
fildl
cwtl
mov
jp
xchg
repz
sbb
jle
xchg
lds
mov
mov
mov
lods
cmpsb
cld
mov
mov
pop
cmp
sti
lock
mov
xor
rcrl
xor
cld
push
dec
movsb
loop
data16
xchg
pusha
cltd
iret
dec
loop
mov
sbb
mov
xchg
movsb
in
jae
lds
mov
out
lods
adc
addr16
push
aas
cmp
daa
mov
fisttps
shlb
jns
scas
test
sub
sahf
stos
sbb
mov
mov
mov
dec
pop
js
testb
mov
hlt
dec
addr16
test
xorb
xchg
or
xlat
push
pop
into
repnz
mov
fstl
pop
push
ret
dec
andb
pop
add
cmp
add
adc
cli
push
in
outsb
mov
pop
fs
sub
pop
mov
or
mov
jno
push
in
pop
andb
jle
pop
sub
adc
add
hlt
sbb
sbb
fdivrl
cli
das
lret
xchg
je
mov
fldt
gs
add
adc
pushl
dec
cmp
enter
mov
or
clc
xchg
lock
or
xor
shlb
and
pop
adc
iret
mov
shrl
fdivrl
cmp
cmp
sbb
fisubrl
in
mov
pop
aam
mov
sub
xor
cmp
test
mov
sahf
popa
fwait
or
movsl
lds
push
jp
fwait
lods
xor
popf
xchg
icebp
xchg
lea
cmp
sbb
movb
mov
popa
xor
mov
pop
inc
dec
or
xlat
xor
dec
icebp
pop
and
sbb
push
pop
mov
push
mov
nop
je
insl
xchg
cmp
sbb
lock
inc
or
sub
cmp
xor
add
pop
movsb
repnz
aaa
push
xchg
cli
xlat
lods
test
jae
jmp
es
dec
or
rorl
rcpps
sbb
jge
mov
jmp
js
ret
adc
movsb
push
fwait
notl
push
mov
test
ffree
mov
aad
hlt
xchg
pushf
leave
pusha
int3
xor
das
dec
insb
lods
mov
jmp
in
jp
mov
mov
das
pop
jnp
iret
in
mov
adc
push
pop
xchg
popa
out
lret
jne
cld
sbb
rclb
add
cmp
aas
ja
inc
push
shrb
sub
jo
sbb
dec
inc
push
in
leave
lods
sbb
mov
iret
inc
ljmp
mov
repz
mov
inc
cmp
add
pop
test
mov
cmp
push
in
dec
lods
daa
cmp
stc
cmpsb
adc
mov
loopne
cli
pop
dec
lods
jae
jle
add
inc
fwait
sub
inc
int
leave
stc
js
jnp
push
ss
sbb
and
or
shl
test
inc
rcr
pop
inc
pop
jbe
lret
sub
jne
mov
imul
push
lret
mov
xchg
or
shlb
push
pop
mov
lods
push
inc
xchg
pop
mov
sti
aad
aas
mov
lock
pop
cmpsb
push
mov
shr
jo
dec
cmp
mov
add
sbb
push
pushf
add
and
ficoms
orl
cs
incb
les
pop
jo
mov
cmc
pusha
lret
imul
jp
mov
add
mov
je
xchg
xor
and
cmp
lea
sbb
push
pushf
and
aam
clc
gs
ja
repz
jbe
das
or
jb
mov
shrb
nop
xor
fsubl
xchg
enter
push
mov
adc
jbe
movsb
popa
jg
push
jno
repnz
jno
mov
pop
jno
xchg
loop
inc
and
in
jmp
cmp
xchg
movsb
and
lea
sbb
les
xlat
insl
leave
mov
push
outsb
test
sahf
xchg
movsb
bound
push
add
sub
lods
and
add
pop
clc
cwtl
add
inc
push
push
mov
loopne
ret
dec
cmp
and
or
and
dec
stc
adc
add
out
inc
mov
aam
push
ror
repnz
loope,pt
clc
stc
mov
popa
test
jbe
lock
stos
jp
sbb
call
push
in
mov
mov
jae
cld
loop
jne
cmp
dec
ljmp
lahf
aas
push
mov
adc
cwtl
inc
pusha
jbe
mov
loop
adc
sub
mov
nop
les
bound
pop
mov
xchg
xor
fwait
les
int3
pusha
and
stos
add
sub
push
inc
adc
pop
adc
xchg
sar
shr
call
inc
inc
mov
int3
stc
pop
mov
push
pop
in
add
mov
cmc
repnz
adc
inc
xor
add
jae
add
sbb
push
mov
aaa
mov
cmpsl
addr16
xchg
or
loope
repnz
imul
fadds
mov
or
xor
loopne
mov
out
mov
mov
pop
inc
ja
fmull
adcb
lock
xor
mov
movhps
pop
push
inc
sbb
mov
lret
sbb
iret
push
adc
pop
jecxz
mov
das
stos
mov
cmpsb
int3
push
dec
loope
and
mov
or
push
sbb
and
aam
in
and
adc
imul
jo
sbbb
add
clc
test
repz
inc
jo
pop
dec
insb
push
mov
ja
pushf
shll
xchg
out
push
cmpsb
adc
repnz
inc
sbb
push
jle
push
shll
dec
push
data16
subb
mov
or
std
or
mov
jmp
divl
out
pop
lods
jg
pop
out
adc
mov
sub
and
xor
cmc
test
adc
loopne
pop
sbb
pop
push
movsb
xchg
ret
mov
dec
xchg
stc
xchg
jns
enter
imul
xor
mov
push
outsb
xchg
mov
sub
jne
lcall
jecxz
xor
mov
fimull
mov
inc
cmp
aam
test
jmp
jnp
or
cld
xchg
xchg
xchg
jo
mov
push
mov
push
dec
outsb
out
adc
xchg
cmp
sub
cmp
xchg
jo
cmp
in
aam
cmp
mov
adc
push
or
cld
mov
adc
cltd
movsl
test
mov
cmp
push
fldcw
test
in
push
dec
pop
pop
testl
pusha
add
loope
jl
cmp
dec
jns
mov
push
sbb
repnz
in
pop
push
xchg
push
xor
inc
leave
test
mov
icebp
push
jb
and
or
aam
ja,pt
jmp
movsb
sbb
test
and
add
xor
add
in
das
or
cwtl
pusha
push
jno
pop
xor
addr16
cli
pop
loopne
insb
jnp
lock
aam
jecxz
xor
ret
xchg
int
fisubrs
je
arpl
dec
rcl
in
cmp
jae
add
mov
pop
shll
push
mov
xor
fwait
dec
dec
incb
insl
adc
and
cltd
dec
in
mov
cmp
data16
xlat
fwait
sub
pop
ss
lahf
or
and
and
or
lock
testl
sbb
sbb
mov
shrl
ljmp
call
pop
dec
jl
push
stos
shlb
ja
pop
aaa
or
add
stos
mov
lds
aad
mov
mov
das
insl
adc
fdivs
xchg
insb
xlat
mov
mov
rcrl
or
inc
mov
into
loopne
cmp
movsl
fwait
adc
adc
or
std
into
jne
lods
xor
or
pop
loop
test
popf
or
outsl
xor
js
jg
cmp
push
aaa
in
add
roll
mov
rcl
jno
mov
pop
rcll
xchg
and
jbe
lret
ret
psubq
cmpsb
pop
push
rcrl
fildll
ret
xor
mov
mov
scas
push
jge
and
ret
jmp
mov
enter
and
pop
mov
xchg
cwtl
mov
pop
and
stos
xchg
cmp
add
mov
rolb
mov
push
movsl
movsb
xchg
sarl
xchg
outsl
push
mov
xor
fmull
test
jb
movsb
imul
mov
ds
cwtl
pop
jns
aad
push
or
fbstp
mov
pop
xchg
cltd
test
dec
cmp
add
push
repz
fadds
mov
lret
test
jg
and
loopne
outsb
std
jnp
jne
and
inc
rorl
inc
movsl
pop
lret
daa
pop
cmpsb
leave
pusha
fs
rol
xchg
jmp
int3
in
mov
push
jle
popf
push
nop
xchg
repnz
adc
push
add
mov
ret
movsl
inc
fstps
sbb
jno
pushf
sub
xrelease
test
adc
mov
rorl
xchg
daa
cwtl
cmp
push
xor
into
mov
cltd
out
mov
cli
push
nop
pop
fsubrs
mov
cmpsb
mov
scas
ljmp
cmc
cmp
shll
dec
push
pop
dec
inc
mov
and
lock
jge
aas
sub
jnp
insb
adc
sbbb
dec
xchg
add
fsubr
inc
loope
or
stos
out
xchg
mov
hlt
mov
in
jb
and
mov
and
lret
jbe
xor
sub
and
rolb
int
imul
ds
push
sbb
xor
ds
cmp
adc
add
rclb
nop
and
add
stos
call
int3
dec
scas
pop
adc
fisttps
xchg
ret
sbb
xor
test
cmp
xchg
cmpsl
sbb
or
cmpsb
sbb
xchg
jle
flds
cli
fadd
mov
sti
push
add
and
mov
fsubrs
pop
stos
dec
addr16
mov
out
in
test
inc
fistl
mov
nop
adc
sub
add
out
lea
jmp
call
mov
nop
in
add
test
jb
dec
mov
loopne
push
cmpsl
inc
rcrb
call
dec
mov
xor
mov
cs
subl
int3
test
jecxz
xlat
loop
mov
pop
repz
shrl
inc
pop
movsb
or
in
insb
cmp
faddl
daa
xchg
and
adc
xor
sub
pop
lods
sub
cs
or
shll
cmp
lret
or
shll
popa
mov
xchg
push
push
ss
fwait
stc
cwtl
mov
popa
and
push
rol
rorb
or
sub
popf
mov
dec
cmp
adc
imul
adcb
sub
bound
aas
push
push
in
in
ja
cwtl
inc
movsl
xlat
mul
dec
test
movsl
xor
mov
scas
dec
mov
ret
sub
inc
pop
and
out
int
pop
jns,pn
out
mov
pop
push
adc
xor
push
fistpll
lods
sbb
xchg
cmc
xchg
adc
or
xchg
sub
or
frstor
lret
out
or
dec
sbb
sbbb
mov
call
je
pop
fnstenv
les
sti
insb
les
arpl
call
lods
pop
shrb
out
repnz
sub
mov
jbe
or
fwait
lods
and
jle
out
mov
xchg
sbbl
insb
les
negl
loop
loope
mov
push
outsb
inc
das
cmp
jmp
out
out
mov
bound
mov
cmp
or
test
mov
inc
in
loop
fnstsw
in
adc
push
mov
out
mov
jmp
push
lods
int
inc
aaa
pushf
and
clc
ror
sub
push
or
enter
sarl
jne
dec
out
out
arpl
into
cld
push
test
fdivs
sub
push
or
js
mov
sub
shl
bound
mov
roll
int
lret
daa
jmp
mov
stc
loope
pop
test
loop
setae
cmp
cmc
xchg
jnp
pop
jp
outsb
test
push
add
sub
or
mov
aaa
jb
and
jmp
xchg
cmp
dec
sbb
cmpl
in
cmp
add
or
lret
pop
and
dec
jg
dec
jmp
mov
hlt
ljmp
andb
mov
or
xor
ret
std
insb
add
mov
jns
adc
sbb
shlb
flds
xchg
cmp
test
xor
lret
jns
std
into
mov
jecxz
nop
ret
inc
dec
sub
sub
xorl
xor
es
sub
push
adc
jecxz
imul
sbb
mov
push
repz
shll
or
jmp
dec
mov
push
jp
xorb
push
xchg
jg
pop
mov
adc
xlat
mov
out
vpackssdw
dec
sbb
or
outsl
inc
mull
xor
pushl
pop
adc
mov
shll
pop
mov
adc
cmpsl
inc
jo
add
mov
js
lods
fistpll
or
dec
inc
int3
pop
jae
jae
sub
mov
or
mov
in
mov
fsts
mov
aas
cmp
pop
cmpsl
stos
test
push
sub
les
testl
mov
jl
ljmp
push
hlt
dec
and
in
dec
ljmp
lcall
mov
fwait
adc
pop
dec
bswap
push
popa
mov
in
pop
int3
fsubl
lcall
push
push
mov
dec
aam
and
subl
jb
repnz
or
push
xorb
mov
and
mov
and
and
into
int
jo
divb
enter
in
mov
inc
in
aaa
arpl
xor
or
add
sub
mov
ljmp
cwtl
sub
push
inc
add
push
dec
mov
pusha
mov
inc
test
push
cli
ss
scas
and
lea
push
repnz
push
cltd
es
cmp
jg
jle
rcl
jp
pop
or
stos
roll
xchg
in
xchg
ja
outsl
and
xchg
sub
inc
imul
cmpsl
cmp
loopne
push
sbb
push
mov
cmpsb
adc
mov
lahf
repnz
mov
and
das
int
mov
pop
stc
inc
cltd
cli
cltd
aam
sarb
pop
dec
xchg
enter
xchg
push
xchg
and
or
scas
fimull
inc
ljmp
and
fsin
aam
inc
pop
repnz
insb
xor
mov
leave
iret
lahf
xchg
test
and
repnz
xorl
out
xchg
push
push
cmp
hlt
xchg
sub
sbb
scas
fwait
mov
sub
sbb
add
pop
out
cmp
popa
sbb
add
jne
lods
pop
add
inc
std
xchg
ds
dec
xor
int3
mov
fiadds
or
mov
das
xchg
loopne
bound
aad
fidivrl
dec
mov
push
or
bound
out
test
lock
jecxz
ret
addr16
loope
nop
sahf
cmp
aad
mov
fnstenv
sub
xlat
push
loopne
fimull
mov
ficoml
cmpsb
cmp
fstpt
jo
outsb
fwait
call
xchg
fdivrp
or
test
test
inc
lret
jl
sub
push
addb
data16
cli
test
lret
mov
dec
outsb
dec
mov
and
xlat
gs
sub
enter
mov
xlat
in
ret
jmp
inc
jge
mov
pop
shr
sbb
lahf
xchg
les
mov
jp
outsb
and
mov
jmp
push
or
int
sub
ficoms
and
cmp
jbe
push
insb
add
mov
mov
dec
mov
adc
sbb
mov
mov
lock
lds
add
mov
cli
cmpsl
xor
fstpl
adc
push
dec
call
pop
aaa
stos
repz
mov
mov
out
dec
imul
in
jnp
jge
test
loope
xchg
fldt
scas
or
xchg
mov
fwait
mov
jae
les
and
and
xchg
inc
xlat
orb
scas
dec
push
mov
les
cmp
imul
pop
push
stos
sub
push
mov
or
jnp
mov
push
aaa
jp
xchg
or
xchg
test
jg
xchg
movsb
jns
in
outsl
mov
adc
pop
and
jo
mov
roll
mov
outsl
push
inc
pop
cltd
out
aad
testl
subl
xchg
cmp
xor
mov
push
jge
mov
mov
orl
ret
ja
cld
mov
in
push
add
fiaddl
xchg
and
pop
repz
ljmp
ret
scas
addl
xchg
clc
shlb
mov
pusha
cmpsb
popa
andl
fs
or
mov
int3
int
in
and
pop
pop
repz
mov
out
ret
out
test
push
add
inc
lea
adc
lds
lock
scas
push
pop
in
jecxz
adc
int3
ja
pop
ljmp
and
imul
dec
mov
lods
mov
adc
aam
popf
loope
mov
hlt
gs
and
push
pushf
dec
jnp
mov
cmp
insb
fs
into
out
cwtl
cmp
pusha
popf
adc
pop
pop
mov
aaa
sub
xchg
int
inc
mov
push
push
sub
test
cmp
pop
dec
jnp
enter
leave
mov
add
inc
sbb
sahf
out
icebp
mov
mov
xchg
or
push
stc
js
sbb
pusha
or
ret
add
mov
push
dec
test
push
mov
inc
aas
jecxz
mov
and
mov
xchg
dec
lods
adc
insb
pop
mov
and
icebp
sub
ret
stos
xor
lods
dec
sub
cmpsb
push
mov
repnz
addr16
in
sbb
gs
inc
adc
xor
loopne
cmpb
sub
sub
cmp
sbb
call
test
sbb
adc
ficoms
inc
lea
adcb
roll
fcoms
mov
and
adc
or
add
ds
sahf
pop
in
adc
cmp
mov
int
insl
dec
xchg
mov
push
subb
mov
push
int3
pop
cmc
pop
inc
fmul
fcmovb
int3
rcr
fs
inc
xor
mov
icebp
lahf
push
cmp
in
xchg
in
popaw
sbb
adc
gs
data16
xchg
sbb
mov
sub
ret
rol
cltd
xor
mov
mov
repnz
inc
xlat
cmp
lock
mov
dec
mov
dec
popf
sbb
and
in
cmp
push
mov
xor
gs
mov
sahf
push
sub
xlat
and
jle
pop
out
mov
loopne
ljmp
sbb
outsb
push
iret
pop
notl
sbb
loopne
xor
push
inc
push
insl
repnz
lods
pop
incl
sbb
xchg
mov
rol
movsl
cltd
sbb
pop
loope
push
add
aas
rclb
pop
shlb
imul
xchg
flds
push
push
jp
xor
xor
ret
dec
adc
stc
rorb
pop
xchg
dec
dec
in
and
push
sub
shrl
push
dec
pushf
jp
xor
insb
out
je
jmp
leave
daa
popa
jmp
mov
or
stos
fsubl
pushf
push
lods
or
xchg
jb
and
mov
mov
add
shlb
mov
shr
mov
dec
cmpsl
aaa
sbbb
adc
jecxz
push
sarl
xor
and
dec
mov
hlt
and
jl
mov
fisubs
jge
test
jg
jno
andl
sub
adc
fldt
cwtl
aas
jno
add
or
inc
fwait
test
mov
push
jecxz
cli
xchg
xchg
dec
add
aaa
lods
push
into
cld
xor
dec
in
cmpsb
mov
lds
cltd
jle
push
mov
test
dec
sbb
out
pop
outsl
repnz
notb
xchg
jmp
cmp
jno
xor
cmp
mov
test
sub
sub
stos
pop
sbb
sti
adc
dec
out
mov
gs
jno
mov
jp
stos
add
std
ss
fidivrl
push
aam
movsb
jl
push
cmp
or
or
push
sub
dec
pop
mov
dec
loope
push
xor
adc
dec
jbe
xchg
leave
mov
ds
dec
std
add
popf
xor
ja
in
mov
and
fbld
jne
pop
mov
loopne
or
outsb
mov
pop
push
lea
je
sub
fwait
lea
xor
xor
les
adcb
mov
sti
and
sub
in
test
les
sbb
sub
loop
and
daa
adcb
dec
sarb
sbb
test
sbb
jle
loope
imul
mov
jg
inc
movl
mov
push
adc
mov
in
cltd
adcl
lret
cmpsb
or
and
into
test
add
addr16
mov
xchg
scas
cld
xchg
mov
pop
out
ja
jle
cli
mov
clc
div
cli
icebp
xlat
stos
and
jle
sbb
lret
scas
xchg
xlat
jo
je
push
cltd
js
sbb
aas
cli
pop
jecxz
test
ficoml
dec
cld
loop
sbb
mov
stos
cli
and
les
out
and
or
ret
addl
xor
and
add
cmp
pushf
mov
stos
aas
ret
fisubs
add
je
popf
enter
in
sub
mov
in
xchg
push
mov
stos
gs
sub
pop
pop
and
or
ret
std
mov
mov
ror
cld
flds
sub
cwtl
push
or
fcmovbe
sub
into
mov
into
inc
dec
movsb
out
stc
xchg
jp
pop
bswap
notb
ret
sbbl
or
lea
scas
mov
outsl
roll
cmp
inc
inc
in
out
in
pop
add
lods
push
cli
aam
jmp
xlat
cmp
adc
mov
mov
dec
negb
add
inc
test
lret
fs
mov
xor
in
ljmp
rep
sbb
cmp
inc
xchg
aam
jns
mov
test
scas
in
aas
xchg
or
leave
push
add
iret
jmp
inc
xchg
mov
mov
push
jnp
xor
mov
dec
clc
stos
mov
inc
jp
xchg
or
pop
sbb
inc
sub
movl
mov
and
push
test
fs
inc
sahf
inc
je
or
pushf
stos
in
gs
xor
and
mov
push
mov
imul
dec
sub
inc
loope
jp
mov
movsb
fstpl
mov
insb
sbb
outsl
dec
std
lods
inc
mov
mov
mov
pop
fdivl
aam
pop
mov
push
ss
jne
mov
shr
stc
sub
cmp
ret
in
xchg
xchg
sub
in
inc
inc
sbb
in
and
insl
or
xchg
loop
push
ffreep
mov
jo
push
fucom
push
cli
pop
push
lds
lahf
test
and
aas
dec
pusha
out
mov
dec
sbb
jp
mov
jecxz
push
jbe
push
pop
lock
stos
xorl
cmpsb
sub
ret
mov
jae
idivl
lods
add
mov
ret
jl
sub
scas
lret
mov
inc
xchg
push
fnstsw
mov
fisubrl
push
add
jbe
insb
and
movsl
xchg
hlt
shrl
jo
cs
dec
imul
jmp
pop
loopne
mov
adc
rcll
sbbl
fs
inc
jne
mov
xchg
popa
fucom
jle
movsb
xchg
or
insl
pop
push
ud0
jle
std
out
cltd
hlt
js
pop
inc
hlt
jmp
pop
dec
push
and
jl
and
andl
pop
repz
inc
jnp
loope
not
sub
clc
and
scas
ficomps
arpl
inc
dec
std
inc
dec
popa
jecxz
jne
or
test
jg
fs
inc
sbb
sbb
jne
ret
xchg
repz
fwait
xor
jo
dec
adc
mov
dec
test
pop
adc
ljmp
mov
jecxz
add
aam
xor
mov
push
mov
jle
xor
jnp
push
push
add
jb
lahf
mov
add
cmpb
dec
mov
cmp
pop
mov
pop
lods
mov
push
lret
mov
or
push
aaa
fisubrl
mov
mov
movsl
inc
test
xor
hlt
in
mov
mov
xor
jmp
push
je
scas
mov
aaa
call
mov
push
mov
jmp
dec
inc
cmpsl
call
cld
jno
xchg
dec
xor
jle
repnz
subb
mov
or
fcmovnb
inc
sub
jge
test
ss
jne
push
ret
lcall
inc
sahf
loopne
fsubrp
sbb
cmove
mov
mov
adc
pop
enter
scas
rolb
imul
and
aam
xor
loop
fwait
add
test
fstpl
enter
scas
mov
mov
cmpsl
mov
pop
mov
inc
cli
daa
mov
ds
in
out
aas
lret
int3
cs
sbb
aam
lods
cld
int3
push
icebp
hlt
and
mov
pop
sub
leave
xor
sbb
xchg
xchg
pushl
cld
fimull
js
mov
adc
mov
sub
andl
mov
mov
lods
int
dec
addr16
add
fwait
mov
xchg
ret
push
pop
out
js
in
mov
idivl
cwtl
push
les
mov
mov
mov
in
cmp
lret
stos
push
or
cmp
mov
mov
enter
push
mov
ds
sub
dec
jl
add
mov
in
arpl
repnz
xor
lahf
mov
add
idiv
iret
pop
pop
add
add
add
jp
fsubs
jns
mov
jb
xor
mov
int3
lea
scas
stos
sbbl
sbb
sbb
stos
xor
lret
cltd
lock
mov
adc
aas
push
ret
ja
adc
icebp
mov
xor
fdivl
dec
mov
in
push
scas
mov
pop
mov
mov
stos
push
jnp
xchg
cli
mov
xor
fmull
jle
push
push
xchg
mov
push
out
cmp
stos
icebp
sbb
mov
std
outsl
inc
rorl
push
add
inc
mov
mov
xchg
inc
adc
out
jae
pop
adc
popa
mov
xchg
aaa
or
hlt
ljmp
fwait
mov
and
sub
cli
dec
mov
jno
jecxz
sub
shr
stos
fwait
adc
inc
dec
addl
mov
daa
inc
stos
into
ss
pop
or
lock
insb
insb
fcmovnbe
pop
dec
jae
xchg
ds
jb
mov
gs
sub
jne
testb
lods
and
mov
adc
add
sbb
mov
stc
inc
fidivl
imul
fistpll
jmp
push
loope
iret
and
fs
mov
dec
mov
loopne
xchg
jl
lret
fwait
mov
inc
mull
out
nop
stos
push
push
loopne
dec
pop
jl
mov
ror
push
jnp
fwait
aaa
mov
repnz
jae
aad
cli
call
test
jg
pop
aam
sti
xor
and
push
addr16
fnstcw
in
stos
jg
pop
push
call
call
dec
insl
sbb
movsl
fwait
dec
stc
fisttpll
pop
add
mov
sbb
pop
xchg
movsb
es
pop
mov
mov
lcall
jno
inc
test
shll
testl
mov
je
mov
jp
cmp
popf
dec
push
dec
pop
out
pop
push
in
mov
xchg
inc
pop
or
out
rclb
clc
lds
test
or
jbe
inc
pop
xor
mov
insl
fdivr
and
jmp
push
insb
cmp
lea
fidivs
push
sub
inc
push
sbb
daa
xor
cmp
cmpb
jecxz
movsb
aaa
jo
xchg
pop
orw
test
xchg
dec
sub
pop
add
jb
xchg
adc
and
cld
push
stc
jmp
loopne
inc
pushf
js
push
arpl
jecxz
pop
push
js
daa
mov
pop
ja
mov
sbb
icebp
sub
xchg
mov
jmp
push
lock
adc
dec
addr16
loopne
cli
in
jns
clc
stos
sub
movsb
xchg
sub
repnz
aas
into
jge
lret
xchg
mov
jecxz
add
loopne
mov
stc
lret
adc
ret
call
push
popa
mov
and
add
inc
leave
and
in
mov
xor
pop
or
xor
add
cmpsb
mov
mov
mov
fnstcw
mov
cmp
cmp
xor
mov
inc
lret
int3
cli
mov
test
fdivrl
call
dec
adc
pop
lahf
jae
mov
jl
popf
mov
mov
test
sub
dec
shlb
mov
jp
jge
push
mov
js
addl
lds
ss
loopne
outsb
adc
insb
push
out
jp
gs
cmp
mov
addr16
fisttps
mov
jle
lretw
sbb
enter
jle
sbb
cmp
cmp
or
repz
ljmp
repnz
out
ljmp
adc
fcom
mov
adc
lret
push
sub
enter
call
push
lcall
jp
pop
sbb
jge
insl
cmc
sbbl
mov
sbb
xchg
dec
repnz
mov
jl
je
fs
mov
xor
negb
scas
lods
push
mov
jmp
jl
addr16
mov
jp
into
inc
aaa
pop
xor
sbb
mov
lcall
adcl
push
mov
int3
repnz
lret
lret
outsb
pushf
aaa
add
pop
sub
pop
inc
push
pop
mov
pop
das
loopne
out
stos
mov
lds
in
aam
imul
lods
or
dec
in
idivb
jae
push
pop
cld
lock
dec
xchg
lock
sti
mov
cmp
fwait
cmp
lcall
loop
sar
test
pop
inc
mov
push
test
xlat
outsb
idivb
mov
imulb
jb
shlb
aam
fisubrl
mov
sbb
cmp
rol
mov
mov
fisttpll
sbb
lock
stos
jecxz
mov
jg
cmp
or
imul
add
loopne
cld
std
fs
int
push
fmul
mov
cltd
and
fldl
icebp
adc
idivb
pusha
cmp
cmp
mov
cwtl
push
stos
inc
insl
out
dec
add
cmp
sub
jb
outsl
fnstsw
jb
ficoml
sbb
cmpb
mov
mov
shl
je
out
mov
lret
sbb
xlat
cmp
js
dec
fwait
aaa
js
mov
ja
insb
shrb
push
mov
repnz
mov
mov
xchg
out
push
xchg
cld
int
xchg
jne
pop
mov
hlt
cmp
fildll
lcall
dec
mov
adc
loope
lods
cld
mov
mov
xchg
jno
pop
test
jo
shlb
arpl
mov
imul
add
testl
inc
dec
test
int3
or
or
pop
mov
aam
sub
xchg
push
negl
aad
xor
data16
lret
cs
subb
and
and
leave
dec
aam
out
push
add
dec
sub
pop
mov
mov
cmp
outsb
inc
fdivp
fidivrs
dec
add
xchg
pusha
mov
nop
mov
xor
xor
scas
nop
cltd
in
mov
sbb
in
or
loopne
out
pop
cmpb
in
mov
xchg
aam
mov
lret
ja
sub
or
addl
pop
mov
pop
pop
inc
das
inc
xchg
sbb
mov
cs
push
sbb
adc
enter
cwtl
notl
aaa
cs
push
xor
pushf
pop
push
cmc
leave
xchg
or
cltd
adcb
mov
into
movsl
std
loope
out
out
and
ret
int
lahf
lcall
ret
out
sub
mov
hlt
pop
sahf
hlt
inc
push
repnz
arpl
ja
ljmp
icebp
ja
mov
xchg
popl
push
mov
push
out
xchg
push
add
sub
clc
and
inc
pop
or
out
arpl
cmp
sti
push
ds
std
lahf
add
jne
fisttpl
inc
mov
push
xchg
mov
lods
mov
cmp
aaa
negl
mov
sub
inc
mull
rcrl
lock
fisttps
cmp
xchg
add
jmp
cmpsb
lahf
int
ja
push
dec
inc
mov
jno
add
loopne
xor
dec
xorb
into
inc
dec
mov
and
mov
pop
inc
mov
addr16
xlat
bound
mov
add
fwait
leave
ret
cmp
or
mov
stc
lods
pop
and
je
or
sti
int
xchg
mov
adc
sbb
rcr
cli
xor
inc
pop
movsl
inc
hlt
sbb
xchg
mov
adc
shlb
aas
frstor
ja
mov
jno
fwait
xor
inc
stos
insl
cmp
jecxz
lret
mov
jo
pop
lods
mov
mov
jecxz
and
ljmp
fwait
xchg
xchg
jae
insl
dec
dec
add
in
lret
iret
xchg
or
into
jbe
mov
xchg
or
adc
pop
add
cmpsl
es
pop
mov
mov
dec
and
mulb
test
rcl
adc
jno
jno
into
mov
inc
sti
mov
lods
and
pop
pop
fdivs
bound
inc
push
or
xchg
inc
enter
mov
pop
arpl
dec
lcall
push
ret
addr16
pop
or
pop
pop
lahf
add
mov
movsb
icebp
add
mov
jae
push
xlat
cs
cmp
cmp
sahf
mov
inc
xchg
sbb
shrb
setae
or
jae
xchg
cli
adc
rcll
mov
push
jmp
stc
push
xchg
fcmovnbe
xlat
xchg
aas
test
mov
pop
push
mov
ret
andb
es
mov
bnd
push
loope
cmp
outsb
mov
adc
inc
insl
push
mov
sti
or
add
cmpl
xor
lock
inc
cwtl
inc
mov
jae
add
cmp
pop
je,pn
icebp
call
mov
xchg
adc
out
insl
sub
iret
or
ret
fsubl
dec
add
add
cmp
sbbl
mov
popf
idiv
cmp
pushf
mov
mov
jae
mov
jle
popf
nop
insl
outsl
xorl
movl
mov
xchg
cmp
or
xorl
scas
mov
inc
fistps
movsl
pop
pop
int
iret
xchg
mov
mov
pushf
fs
jo
mov
jbe
cmc
cmpsb
dec
xor
inc
out
sbbl
push
jae
sbb
roll
or
shl
repnz
je
js
test
int
push
js
mov
test
test
cmp
mov
inc
xor
push
repnz
push
je
nop
clc
daa
mov
jae
push
sbb
push
pusha
or
xor
push
push
inc
mov
loop
mov
cmpsl
sub
sbb
mov
push
inc
jg
divb
mov
cmc
rorl
and
xchg
arpl
jge
pop
pop
cli
push
dec
or
mov
push
sbb
repnz
xchg
shll
xor
ret
adc
popf
repz
lods
and
mov
dec
out
push
shrb
test
inc
jl
adc
jo
xchg
jnp
sahf
stc
dec
jg
movsb
pop
sti
mov
add
stc
in
insl
ret
push
pusha
xchg
push
pop
sbb
dec
push
or
jge
and
mov
mov
mov
data16
ljmp
scas
or
insl
mov
cld
sub
mulb
dec
inc
mov
imul
sub
dec
sti
sbb
mov
mov
popa
add
sbb
stos
aaa
xchg
or
subb
cmp
push
pop
std
add
mov
mov
sub
push
cli
pop
sbb
jmp
fidivrs
mov
and
xlat
daa
out
adc
pop
pop
lret
int
push
xchg
outsl
shl
inc
enter
adc
ret
into
adc
inc
sbb
lret
sbb
jmp
or
sbb
in
pcmpgtw
cli
mov
sbb
lret
pop
mov
push
xchg
add
mov
idivb
adc
jge
in
or
pop
loope
fiadds
stos
mov
addr16
mov
or
sahf
sbb
cmpb
push
aad
sbb
es
dec
stos
decb
sbb
pop
addr16
imul
fadds
fcoms
popa
pop
shl
popa
cmc
scas
pop
pop
lods
xchg
mov
cmpsb
sub
stos
adc
sub
adc
cmp
add
in
jno
popa
jbe
mov
xchg
and
inc
jmp
add
pusha
loopne
push
inc
jl
push
shlb
jmp
or
fbld
dec
mov
xchg
adc
lret
adc
outsb
sbb
adc
mov
pop
and
mov
insb
int
jo
in
jno
inc
mov
xchg
stc
out
lea
jne
out
fs
jmp
add
clc
xchg
add
div
cli
mov
aas
cwtl
mov
jl
cmp
and
mov
jl
mov
dec
mov
mov
push
sub
ss
sbb
adc
xor
andl
fstps
mov
or
cmp
mov
adc
arpl
cmp
jle
popa
xchg
push
mov
int
and
lds
rcrl
mov
fs
jmp
mov
lock
cs
or
cmp
outsb
daa
stos
mov
dec
pop
jmp
inc
fisubs
gs
adc
inc
cmpsb
mov
push
jg
lods
xor
stos
xchg
dec
aas
add
or
icebp
enter
jl
pop
pop
enter
lahf
addb
add
int3
icebp
push
mov
lods
mov
in
sahf
enter
out
mov
jge
jmp
movsl
stos
loop
stos
and
mov
mov
enter
stos
addr16
lods
cmp
sub
enter
xchg
mov
cwtl
aaa
stos
mov
subb
rorl
or
fnstcw
shrl
mov
push
cmpl
sub
fisttps
int
bound
sbb
xchg
loope
nop
sub
gs
sahf
dec
loop
cmp
push
add
jle
jno
incl
es
hlt
xchg
add
mov
stos
fstl
mov
xchg
mov
pop
fs
mov
das
ret
cld
int3
mov
pop
imul
lock
push
cmpsb
inc
rolb
insl
in
out
jne
xchg
leave
inc
lea
subl
sti
aam
call
add
mov
loop
fdivp
aam
daa
pop
arpl
bound
mov
pop
add
outsl
mov
in
in
in
test
and
sarb
loop
sub
popa
jmp
sub
rcl
cmpl
cmp
dec
dec
scas
mov
hlt
mov
arpl
data16
sahf
fxch
stos
call
dec
cmc
shlb
sbb
fiadds
pop
mov
call
xor
scas
out
cmp
xor
xlat
popf
pop
mov
lock
push
xchg
movsl
cmp
jae
out
mov
mov
bound
mov
mov
xchg
xadd
push
add
jp
push
cmpw
test
mov
arpl
int
mov
loop,pt
cmpsl
pop
sbb
dec
inc
xchg
or
std
mov
sbb
loop
fsubrl
jecxz
pop
lret
and
and
pushf
jg
mov
jo
xor
cmp
mov
mov
or
mov
int3
sub
dec
pop
cmpsb
fcompl
and
aas
add
cmpl
addb
jno
jg
or
dec
pop
push
aas
mov
xchg
xchg
repz
je
xor
mov
std
mov
pop
lea
out
jb,pt
inc
mov
int3
and
lods
or
call
andl
movsl
push
cltd
mov
mov
cld
into
pop
mov
insb
add
xchg
and
sbb
int
iret
out
mov
repnz
push
aaa
xchg
aas
sub
lea
fsubrp
pop
cmpsl
stos
push
stc
imul
mov
xor
idivb
mov
sub
aas
loopne
in
out
pop
adc
in
inc
mov
orl
push
je
arpl
loope
jb
iret
push
test
sti
jae
inc
pop
xor
bound
mov
jle
cmp
inc
pop
pop
jmp
jbe
in
popf
mov
or
loop
or
mov
mov
out
push
fs
mov
fstps
sbb
adc
add
out
adc
mov
fcos
cld
sar
iret
mov
jb
sbb
cld
movsl
cmp
and
int3
pop
jnp
jge
push
stos
mov
push
jmp
outsl
cmpb
or
fdivp
xor
mov
sbb
scas
dec
aam
mov
lods
push
xchg
jg
push
mov
push
in
imul
adc
outsb
cli
mov
mov
mov
jl
lods
clc
test
mov
xor
popa
push
cmp
addr16
mov
gs
mov
xchg
sub
ret
or
popa
pop
cmp
pop
mov
rorb
mov
push
sbb
lock
mov
lret
push
or
movsb
xor
cmpb
cmp
and
dec
fbld
mov
pop
popf
fnstcw
std
xchg
bound
lahf
aaa
stos
addr16
mov
inc
mov
or
xor
adc
add
pop
inc
ss
adc
fs
mov
jno
pop
mov
fistpl
push
test
popf
cmc
adc
fsub
fistl
orb
repnz
popa
push
push
jae
add
repz
hlt
cmp
aad
into
lret
push
add
sub
pop
sbb
xchg
push
data16
inc
and
jg
repnz
lret
cwtl
popa
pop
jbe
jge
fisubrl
cmp
jge
das
sbb
ljmp
imul
inc
mov
xor
pop
mov
jb
mov
adcl
pop
pop
lcall
imul
or
insb
hlt
subb
xor
fs
mov
jmp
mov
pop
aaa
aaa
gs
xor
push
dec
in
mov
call
dec
sbb
jne
mov
push
cmpsl
lock
out
andl
and
sbb
push
imul
movsl
cmp
push
rcll
cmp
iret
fwait
incb
lea
test
cmc
push
insb
add
push
pop
or
add
add
shl
les
xchg
outsl
xor
pusha
cmpsb
push
pop
xchg
xchg
or
jae
xchg
pop
mov
push
stos
cs
mov
cmp
ljmp
stos
adc
dec
cmpsl
nop
pusha
cmp
or
xor
pop
jmp
dec
xor
int
cmp
pushf
into
stc
add
sub
pop
sub
mov
mov
dec
cmp
nop
push
lret
data16
jno
inc
out
callw
popl
in
xchg
adc
int3
je
aam
test
cld
cmp
stc
bound
xlat
xchg
pop
mov
mov
cmp
popf
jae
adc
idivl
enter
adc
lcall
addb
enter
adc
dec
add
in
adc
add
test
xor
cmp
sub
test
aaa
pop
aaa
in
popa
cmp
fsubs
std
jb
mov
out
lret
push
fdiv
ret
dec
mov
mov
mov
mov
jo
int3
mov
push
les
iret
in
rcl
adc
daa
ss
mov
add
inc
sti
js
cmpsl
xchg
insb
jecxz
adc
aas
outsb
push
cmp
icebp
sub
shll
jb
test
mov
mov
ss
adc
mov
jb
enter
and
aam
cli
fs
mov
mov
inc
nop
pop
ljmp
fsubl
or
mov
mov
jmp
mov
ds
in
cmp
pop
pop
push
push
sahf
out
subl
hlt
push
mov
xor
cli
add
sub
push
pop
mov
dec
xor
rclb
ficoml
cmpsl
call
cmpsl
jne
mov
enter
sbb
pop
fcompl
xor
inc
and
lods
add
gs
bound
dec
jo
dec
jae
pop
clc
push
mov
xor
clc
add
mov
mov
in
dec
ja
cmpsb
sbb
mov
mov
arpl
jnp
jl
mov
xchg
jne
or
or
xchg
jb
sub
mov
pop
aad
pop
push
test
sbb
iret
sahf
jmp
or
adc
dec
sub
jp
jl
outsl
insl
jge
jae
mov
sbb
notl
dec
adc
mov
jecxz
mov
pop
and
lahf
addr16
push
outsl
pop
pop
jnp
das
mov
test
jnp
pop
dec
rcll
dec
stos
call
push
cmp
sub
lea
xchg
loope
lret
leave
insl
xor
or
mov
lcall
pop
int
mov
or
int
mov
sub
sub
mov
xlat
movsl
andb
js
repz
xchg
and
dec
in
aad
nop
aad
cmpsl
xlat
in
ss
insl
adc
jl
out
lods
mov
mov
push
cmpsb
xchg
pop
test
insl
setp
aaa
cmpsb
jp
inc
mov
mov
imul
mov
leave
jle
sbb
fldl
mov
bound
xchg
roll
loopne
repnz
push
add
insl
cmp
xchg
lods
dec
cld
cli
xchg
mov
mov
inc
mov
insb
pop
sahf
test
sbb
mov
pop
popf
xor
mov
je
add
call
mov
outsb
or
fnsave
out
jns
lock
std
sbbl
mov
cmp
repz
mov
out
mov
loope
jnp
mov
ljmp
or
jns
test
cmp
inc
in
pusha
jg
notb
es
mov
stc
repz
push
jp
push
mov
push
jns
sbb
xor
fwait
sub
cmp
cld
mov
add
btr
cmp
sbb
mov
mov
add
jge
aad
arpl
adc
xchg
lahf
lock
push
dec
sub
lods
xchg
adc
sti
adc
shrl
sub
fwait
jno
inc
into
sbb
pop
mov
jge
popf
out
rclb
fstpl
xor
and
mov
mov
in
aas
xchg
mov
outsb
bound
xchg
sbb
or
mov
in
cli
incl
insb
sti
mov
ss
dec
insl
adc
xchg
daa
push
int
add
sub
fdiv
mov
push
mov
into
mov
inc
add
mov
mov
inc
xor
jl
and
push
mov
imul
jecxz
divl
mov
dec
pushf
cmc
subl
shrb
push
jg
imul
testl
in
mov
insl
into
or
mov
clc
inc
adc
mov
int
scas
lret
mov
jle
idivl
pushf
or
cwtl
adcb
unpckhps
sub
adcb
scas
jge
iret
mov
sahf
out
shll
in
dec
loopne
push
pop
stos
mov
pop
lods
bound
ret
and
sub
mov
jl
mov
xor
xlat
lea
jg
insb
sub
dec
cmp
mov
mov
or
push
push
dec
mov
fbstp
cltd
pop
pop
lret
xor
ds
das
add
push
rorb
xchg
test
in
sub
pop
outsb
cmpb
ds
xchg
inc
sub
stos
icebp
adcl
xlat
jno
push
cmp
sar
insb
adcb
xlat
ret
stos
mov
ja
sub
push
and
mov
cltd
add
pop
adc
dec
ret
fmulp
push
push
test
sbb
inc
sbb
movsb
in
cli
and
add
dec
jge
sub
mov
xchg
and
fnstsw
mov
cli
movsl
or
les
push
pop
inc
ja
cld
test
pop
dec
loopne
aam
test
cmc
xchg
orb
xchg
lcall
inc
sub
mov
mov
add
and
sbb
sbb
lahf
outsb
push
mov
inc
dec
cmc
lods
out
jne
in
pop
mov
and
rorb
xor
js
mov
lods
out
push
insb
inc
je
scas
xor
lods
xorl
mov
loope
cmp
stc
inc
jl
das
das
cltd
pop
test
pop
add
rorb
or
scas
add
push
and
dec
mov
mov
imul
mov
pushf
and
xchg
inc
popa
dec
adc
outsb
sbb
jecxz
mov
push
ror
xchg
mov
adc
imul
mov
nop
mov
dec
cwtl
and
in
clc
and
imul
cwtl
inc
fidivs
jne
cmpsl
dec
cmp
in
mov
jno
ret
add
inc
xchg
xchg
loopne
cmp
add
dec
lods
icebp
mov
mov
xchg
push
out
adc
insl
push
push
xchg
xor
jbe
xorl
and
jg
ja
and
aad
inc
cmpsb
push
adc
fcmove
mov
fmull
aaa
lret
in
xchg
out
mov
je
mov
adc
mov
pop
push
mov
andb
daa
jns
pusha
jns
shl
dec
rcrl
sub
pop
psadbw
adc
xchg
add
add
push
and
push
mov
mov
rclb
leave
or
sbb
cli
mov
icebp
or
fdivrs
xchg
add
mov
push
ret
cmc
int3
insb
call
rorb
lcall
ljmp
stos
adc
sub
inc
pop
pop
aam
mov
inc
test
ss
mov
mov
into
add
sub
pop
lock
mov
ljmp
iret
add
adc
dec
mov
dec
loop
pop
mov
sarl
pusha
pushf
cmp
dec
sbb
lods
out
scas
jb
and
jmp
jb
ja
mov
or
jbe
or
xlat
push
xor
aas
sub
sbb
inc
adc
add
dec
cmc
mov
add
aaa
xchg
pop
sub
lret
sbb
pop
pop
jno
dec
or
out
jae
or
push
jecxz
xor
pop
out
pop
aad
mov
adc
andb
push
dec
and
xlat
cli
and
sub
xchg
dec
cwtl
sbb
iret
push
add
lock
scas
sbb
mov
xchg
divb
cpuid
out
jl
iret
outsb
mov
adc
mov
adc
sbb
or
mov
in
mov
add
and
aas
cwtl
push
adc
pop
dec
jmp
push
cmp
or
dec
call
repz
jge
popl
push
jbe
sti
jp
adc
scas
adcb
in
pop
mov
xchg
and
sbb
cld
cs
mov
cli
pop
inc
and
xchg
cmp
add
xchg
push
mov
mov
mov
pop
adc
pushf
add
addr16
lret
jl
insb
in
add
inc
mov
sub
lret
dec
or
push
mov
mov
dec
pop
testb
insl
enter
aas
imulb
pop
add
cli
fwait
ds
inc
add
sbb
push
mov
cmpsb
mov
mov
dec
sbb
jns
sbb
cs
lods
pop
jle
and
sbb
rcrb
mov
stc
mov
jns
pop
ljmp
dec
sub
movsl
inc
pslld
pop
sbb
jne
or
outsl
in
pop
mov
mov
les
inc
dec
js
jae
mov
jo
hlt
add
mov
jmp
scas
aas
int
test
gs
or
popf
pop
jle
dec
pop
mov
inc
and
sub
dec
clc
scas
aas
or
and
mov
hlt
notl
dec
das
jnp
mov
fwait
mov
sti
pop
inc
push
jmp
mov
jno
aas
add
mov
out
xchg
sbb
div
pop
mov
jp
mov
ja
div
mov
repz
push
and
mov
mov
mov
mov
or
lret
inc
stos
push
test
aad
mov
adc
mov
mov
cmp
loop
ret
roll
sub
loop
xchg
out
jle
dec
xchg
adc
push
imul
or
push
lret
xor
scas
mov
frstpm(287
pop
xchg
sbb
and
movsl
jb
fwait
xchg
scas
sbb
push
sub
dec
mov
mov
mov
test
sub
xchg
pop
inc
inc
push
loopne
adc
int
in
adc
cmpsl
jmp
or
imul
insl
add
idiv
out
jmp
insl
ja
add
mov
adc
lret
jl
into
dec
repnz
mov
pop
shrl
sahf
imul
in
out
ret
pusha
push
cmc
push
seto
sti
xor
mov
lods
inc
loope
loope
outsl
dec
mov
dec
mov
mov
stc
lcall
insl
jne
pop
addl
push
and
cmp
xchg
or
mov
pop
fdiv
inc
aas
test
pop
mov
insl
mov
xchg
loope
mov
push
pop
testb
cmp
loope
popa
dec
cmp
xchg
in
cli
cli
xor
cs
add
and
mov
and
xchg
sub
xchg
cmp
out
sub
in
jmp
mov
out
mov
mov
and
movsb
sbb
push
mov
dec
popa
mov
insb
xchg
xlat
fsubs
jmp
jno
sub
loopne
repnz
cltd
mov
add
fwait
dec
xchg
pop
mov
into
inc
stc
cmc
xchg
pop
int3
out
mov
hlt
mov
sbb
sahf
or
faddl
mov
sarl
adc
sti
sub
sbb
test
or
ja
mov
xor
test
icebp
mov
jne
sub
push
mov
push
adc
pop
sbb
cmc
sub
call
push
inc
cmp
jno
mov
sarl
sub
cltd
mov
add
mov
dec
into
xor
xor
jae
fcmovbe
jecxz
adc
aam
push
cmpsb
push
push
inc
sbb
pop
inc
or
mov
jo
xor
jnp
sbb
dec
sub
jns
sbb
jle
cwtl
sarb
out
test
ljmp
mov
fwait
cs
lahf
sub
loope
add
mov
decb
jne
pop
cmp
add
lcall
jge
pop
in
cmpsl
iret
and
sub
fidivl
push
ljmp
push
adc
mov
push
add
pop
add
mov
mov
decl
pop
popa
xor
test
in
dec
enter
mov
cmpsb
jmp
ljmp
dec
xor
popa
ss
dec
mov
aaa
dec
xchg
out
mov
ret
cs
dec
cmpsl
push
cmp
dec
xor
sbb
loope
inc
stos
push
shl
or
lret
mov
das
fstpl
repz
pop
aam
xlat
das
pop
out
lods
outsb
cltd
fld
pop
out
mov
mov
in
push
sbb
out
fists
add
rcrl
push
xchg
or
cmp
gs
imul
inc
aaa
add
lods
ds
insl
lret
pushf
popa
mov
cmp
sbb
inc
mov
popf
call
pop
xchg
inc
dec
xchg
ja
cmpps
lds
mov
xchg
daa
sahf
push
out
jp
dec
scas
sti
push
xchg
mov
or
inc
aam
mov
pop
cmpl
mov
and
loope
test
lea
push
int3
sbbb
inc
scas
lahf
sbb
or
push
out
jecxz
lea
imul
and
mov
stc
sub
push
repnz
jno
lret
sub
cmp
inc
pop
outsb
adc
int
fcoms
ret
movsl
sub
jg
insl
sub
add
into
mov
andb
mov
and
fnstenv
and
std
xor
loop
outsl
pop
mov
jmp
cmp
lret
sarb
pop
sub
and
inc
rorb
jl
cltd
stos
pop
xchg
test
mov
push
or
icebp
jmp
addr16
push
addb
xor
cwtl
wbinvd
mov
loope
add
push
fisubrl
adc
xchg
les
das
jne
xchg
ljmp
jge
push
fwait
in
ds
arpl
cmp
adc
and
mov
testl
sbb
idivl
jae
xlat
cwtl
pop
inc
push
add
stc
sub
push
sti
add
mov
jae
stc
lods
inc
js
dec
push
lcall
orl
loopne
adcb
cmp
push
dec
pop
cmc
pop
stc
jecxz
push
insl
inc
sub
into
xorl
pop
aas
or
test
dec
cmp
fs
icebp
das
xchg
pop
or
imul
push
inc
mov
push
stos
and
cmp
xchg
fsubl
jb
inc
das
jmp
cli
inc
mov
xor
jno
sti
inc
push
mov
jne
mov
pushf
ja
insb
je
push
aaa
mov
in
dec
sahf
lahf
das
mov
scas
and
ss
add
inc
jb
scas
mov
ficomps
das
mov
cld
lret
cmc
ss
rcll
xor
jnp
int
in
add
lods
dec
lret
adcl
mov
jmp
inc
inc
xchg
adc
mov
adc
xchg
add
mov
jb
lahf
in
pop
jmp
subb
cmp
ret
mov
add
or
and
repnz
xor
test
stos
pop
add
js
lock
std
es
pmulhuw
in
ss
mov
jb
fcmovnb
movl
dec
xor
xor
mov
notb
sahf
mov
dec
xor
push
sub
xor
and
mov
fmull
xchg
sub
dec
negb
rcll
cmpsl
ret
mov
sbb
sbb
aam
push
mov
mov
cmc
push
add
rcrl
stos
push
adc
shlb
bound
sarb
and
insb
xlat
loopne
lret
daa
hlt
test
ljmp
sar
sahf
lret
mov
add
fcmovnb
fnstsw
and
mov
inc
es
adc
clc
addr16
loopne
cmp
sbb
mov
fisubrl
fisttpll
pop
lock
mov
mov
mov
and
repnz
in
xchg
pop
xchg
into
inc
fistps
scas
pop
roll
cmpl
das
icebp
in
sub
xchg
ljmp
rolb
xlat
jbe
ljmp
bound
orb
cs
dec
sahf
add
fidivrs
mov
sub
sub
dec
popa
xor
mov
sub
add
push
mov
popf
fldenv
sub
ljmp
vpackssdw
out
mov
jo
ja
cmp
inc
xor
push
out
adc
popf
xor
stos
adc
aas
xchg
repz
dec
sub
cmp
cmpsb
shrb
or
data16
popa
lods
sbb
sbb
movl
sbb
hlt
mov
pop
add
sub
push
pusha
mov
ja
jbe
mov
cmp
jl
sub
arpl
cmp
test
sbb
xchg
and
push
dec
aas
rclb
pop
pop
jl
bswap
dec
jle
pop
dec
pop
in
jbe
or
subl
cli
sbb
jns
fs
into
pushf
cmpsl
fldenv
test
inc
int3
inc
fdivs
jecxz
ss
daa
clc
mov
das
into
scas
std
imul
mov
jbe
sbbl
cmp
faddl
arpl
xor
dec
sbb
mov
mov
cmp
jae
and
rclb
jns
loopne
bound
mov
lret
lock
dec
inc
mov
jg
pop
dec
xchg
int
mov
jmp
or
sbb
andl
mov
jg
scas
or
fidivl
pop
jle
mov
test
and
xor
lcall
fcompl
xchg
dec
stos
push
mov
cmpb
shlb
mov
dec
imul
push
push
adc
mov
xlat
pop
sahf
notb
mov
aam
and
mov
pop
xor
mov
pop
sub
out
mov
imul
jmp
aam
mov
xor
dec
dec
ss
stos
lock
mov
jecxz
adc
ss
inc
inc
jmp
jno
xchg
cli
out
push
pop
xchg
pop
jmp
test
xchg
es
ret
mov
stos
push
inc
and
push
popf
cltd
inc
mov
add
xor
cli
cli
insb
cmp
subb
push
mov
pop
cmp
mov
stos
lods
cmp
mov
mov
add
test
movsl
hlt
into
inc
loopne
addr16
and
mov
cmp
xchg
arpl
push
movsb
xor
inc
loop
mov
xlat
xor
mov
jecxz
mov
and
repz
xlat
adcb
jno
shrl
mov
xchg
int
xchg
push
sarl
das
aaa
lcall
das
mov
cmp
shr
fidivs
adc
sub
jne
sahf
jmp
loop
push
jge
inc
fadds
inc
rclb
out
fsubs
adc
ret
sbb
int
jno
mov
js
xchg
fidivl
pop
pop
jnp
outsb
lods
xchg
sbb
mov
xchg
push
call
jecxz
jmp
pop
pop
cmp
loop
jae
lcall
mov
sub
out
in
pop
inc
xchg
inc
sahf
sti
rcrb
das
add
jno
js
out
fidivrs
filds
mov
sarl
cmp
and
sbb
sbb
xchg
ror
pop
outsl
dec
lods
stc
xchg
cmp
push
mov
xorl
mov
scas
mov
orl
adc
or
ret
mov
cwtl
xor
push
loopne
or
pop
mov
lock
mov
jne
adc
mov
and
stos
les
jecxz
add
stc
push
dec
xchg
cli
fwait
push
xchg
lods
mov
inc
dec
push
in
cs
stos
mov
xor
fmull
enter
pusha
fildl
adc
adc
adc
cmp
cmp
pop
xor
and
popf
repnz
mov
nop
push
test
sbb
xor
js
lret
mov
jp
clc
mov
test
lahf
mov
lock
mov
fnstcw
je
dec
ds
pusha
mov
and
dec
ret
jne
shr
push
xchg
or
sbb
dec
add
cmp
and
fwait
int
add
mov
test
xlat
inc
xchg
pop
push
enter
and
push
into
addl
push
jne
add
popa
push
out
dec
or
inc
fdivl
adc
mov
push
dec
jbe
push
mov
adc
iret
jecxz
idivb
mov
dec
fadd
jno
cmp
mov
addr16
stos
pop
hlt
ss
das
outsb
adc
imulb
xchg
shl
and
or
jle
roll
push
lea
sti
jp
test
mov
dec
test
cld
xchg
mov
repz
cli
jnp
xchg
into
xchg
loope
mov
xchg
out
in
cmp
cli
push
or
sub
add
mov
fcomip
inc
cmp
fdivrs
iret
mov
mov
push
push
pop
mov
sub
push
gs
data16
sbb
cmp
mov
sbb
pop
dec
jo
and
add
mov
mov
call
push
cmc
sub
xchg
xchg
sbb
mov
lock
sub
xchg
inc
xor
aad
aam
sub
imul
in
mov
xor
dec
loop
ljmp
push
and
xchg
call
xchg
cmpsb
dec
lcall
jo
lock
mov
and
repnz
xor
ja
inc
aad
repz
out
cld
pushf
jno
add
vpermb
nop
mov
push
xchg
and
movsb
push
cld
int
adc
ffreep
fbstp
lods
push
aaa
insl
jbe
cmc
jg
clc
and
jno
inc
mov
test
or
jp
rclb
stos
sbb
sbb
movaps
jae
mov
pop
cwtl
or
outsb
jnp
push
inc
cwtl
or
cmp
cmpl
xor
dec
sub
mov
push
or
invlpg
xchg
xlat
pusha
rep
dec
xor
jmp
sbb
mov
ljmp
mov
add
dec
add
xchg
insl
lods
dec
jns
inc
repz
xchg
push
mov
cmpsl
arpl
inc
call
imul
arpl
mov
mov
jbe
mov
imul
stos
test
out
loopne
lret
test
cltd
jp
ficoms
mov
add
dec
jle
addb
fwait
sub
es
jno
sbb
aaa
call
in
and
jnp
int3
jecxz
sbbl
test
add
rcl
jb
fdivs
mov
pop
jbe
xor
jge
mov
mov
popf
dec
pusha
jno
dec
push
mov
pop
cmc
xchg
cmp
lods
mov
ja
adc
fists
mov
fstpt
test
cmp
xchg
mov
ds
adc
repz
cltd
pusha
adc
push
dec
lahf
jne
lahf
mov
ss
lock
adc
inc
jecxz
xchg
adc
out
fisubs
pop
xor
or
cli
hlt
or
pop
ja
loope
push
xor
in
jnp
stc
xor
push
test
lmsw
add
xlat
sbb
push
rorb
fcoml
mov
rcr
cmp
xor
and
popa
cmpl
movsl
lods
push
or
sub
gs
rcl
fstpl
jnp
in
cmp
and
mov
popf
clc
mov
mov
lods
inc
and
test
push
push
jne
sbb
dec
out
adc
insl
insb
cmp
mov
aad
mov
shlb
cmpsb
and
jae
fucomp
test
cmp
xor
in
dec
push
ss
clc
aad
sub
imul
mov
stos
xchg
pop
and
mov
insb
out
and
lret
insb
push
inc
jbe
outsb
je
movsl
add
inc
dec
ret
xor
inc
addr16
test
bound
cli
push
arpl
les
aam
and
mov
cld
fisubl
mov
lock
cmp
push
adc
sbb
xor
xchg
dec
das
fwait
cmp
les
push
jbe
dec
scas
adc
mov
repz
in
flds
xlat
inc
or
sub
cli
push
or
push
jmp
cmpsl
inc
mov
addr16
les
xor
outsb
ret
inc
fidivrl
push
push
imul
adc
int3
mov
mov
arpl
lods
pop
cmp
scas
sub
xchg
mov
je
je
sub
sarl
pop
sub
out
pop
and
fsubrl
dec
xchg
ja
mov
xchg
cltd
mov
mov
testl
jo
pop
push
out
lcall
lods
push
fisttpl
fnstcw
sahf
cs
sbb
cmpsb
hlt
icebp
push
dec
sub
cli
int
ja
pop
lods
hlt
shlb
sub
sahf
push
aaa
push
push
xchg
stos
out
adc
int
das
mov
mov
xor
xor
pushf
xchg
lds
inc
jl
mov
popl
nop
add
fsubp
out
mov
ss
js
jbe
and
push
pop
lods
loope
shlb
pop
sbb
jl
lahf
mov
push
jge
sub
mov
rorl
fwait
jl
rorl
sbb
loopne
es
jo
mov
out
repnz
lcall
repnz
pop
push
push
sarl
xchg
xor
push
fisubrs
adc
sub
cmpsb
mov
and
mov
fdivrp
hlt
xchg
or
jg
push
adc
incb
in
pop
mov
imul
adc
mov
or
sahf
mov
push
aam
bound
hlt
pop
xchg
or
pop
sbb
mov
lods
frstor
sub
rorb
pusha
in
and
pcmpeqw
mov
xchg
vaddss
xchg
jp
shlb
and
jno
sbb
dec
add
jecxz
test
push
adc
jb
inc
dec
lcall
cld
or
pop
add
adc
jge
mov
and
mov
sarb
popf
fldenv
jae
cmp
nop
rcl
mov
push
dec
xor
sbb
lds
dec
pop
mov
mov
movsb
out
loope
iret
push
mov
sub
pushf
jo
arpl
mov
testl
pop
stos
inc
sbb
fs
sub
push
out
fs
arpl
cmp
cld
sbb
lods
addl
push
jle
test
or
jns
jecxz
loop
sbb
enter
xor
testl
cltd
sar
mov
push
subb
sti
add
cwtl
mov
mov
and
sbb
sti
jo
dec
xchg
sub
mov
mov
dec
cltd
fcmovnu
inc
pushf
scas
or
dec
push
xchg
dec
ds
in
dec
test
test
outsl
inc
add
rolb
inc
xor
cli
jp
mov
int
std
xor
aam
or
push
push
gs
out
dec
dec
sub
rolb
fsts
aad
xor
sbb
jno
sub
lods
int3
mov
xchg
pusha
and
fiaddl
cmp
push
and
push
shll
aas
inc
cmp
xchg
jae
cwtl
ja
push
add
jp
popf
clc
stc
mov
inc
jnp
pop
fdivl
pop
push
sbb
iret
mov
jae
pop
test
sahf
roll
rcr
popa
pop
add
inc
out
cmp
mov
daa
pusha
adc
mov
loopne,pn
lahf
out
push
lret
xor
sbb
mov
lret
dec
ja
cmp
cwtl
cmc
lcall
cmp
sti
std
fsubr
add
push
sbb
mov
adc
andl
sbb
sbb
cmp
xacquire
loop
add
fiaddl
mov
inc
mov
jae
stos
adc
enter
mov
data16
dec
mov
jmp
imul
dec
xchg
pop
mov
rcrl
xchg
pop
adc
mull
cmp
pop
mov
adc
sbb
adc
aad
imul
clc
pop
mov
or
xor
fistpll
fstp
jne
jge
sbb
push
repnz
insb
cmpsb
sbb
sub
xor
insb
inc
loope
sarb
push
push
jnp
dec
in
mov
sbb
movsl
test
jl
mov
movsb
bound
stc
jecxz
ret
mov
cs
repz
and
pop
loop
push
xor
movb
push
je
xchg
lahf
fcomps
unpcklps
add
lret
shll
add
insl
push
ffree
sbb
loopne
lock
push
movsl
nop
lret
sbb
push
lock
xorb
jmp
stos
inc
xchg
add
mov
or
push
sar
inc
mov
cmp
cli
lret
mov
adc
fadds
and
push
mov
fmuls
mov
adc
fwait
stos
js
mov
clc
pop
adc
jmp
fs
mov
les
mov
mov
leave
hlt
dec
dec
cli
out
mov
mov
inc
push
jbe
or
xor
jl
jg
sbb
add
xor
das
aas
inc
test
nop
popf
adc
jb
pop
insb
jbe
shrl
xor
aaa
mov
popa
fsubrs
out
jo
inc
sahf
add
insl
jo
sbb
test
add
mov
scas
xor
rcl
pushf
outsb
fdivs
push
repnz
test
fstps
mov
dec
dec
inc
push
into
in
icebp
icebp
jae
or
pop
push
stos
je
pusha
sub
or
and
orl
xchg
arpl
ret
and
pushf
lret
fistl
mov
movsb
test
add
cmp
add
jg
cmc
jbe
ds
out
aaa
inc
loop
pop
push
and
lods
push
mov
or
push
push
push
fidivl
dec
and
cmp
sub
xchg
lret
scas
adc
pop
insb
sbb
lock
testl
jo
adc
lods
or
test
mov
sbb
mov
sub
adc
add
daa
sbb
ljmp
rol
les
pop
xchg
mov
movsb
ds
ret
pop
out
cmp
mov
mov
sarb
out
mov
mov
xchg
pushf
ja
ljmpw
jns
scas
jp
mov
lahf
cld
jg
cmc
mov
or
mov
xchg
and
add
in
sti
sbb
movsl
mov
out
jmp
lahf
xlat
arpl
inc
mov
dec
inc
subb
insl
lret
pop
cmp
mov
xchg
dec
mov
jl
or
mov
je
push
dec
jg
jp
into
adc
adcb
lods
xchg
insb
sbb
mov
imul
jmp
push
push
lods
jg
enter
mov
sti
inc
in
in
divl
adc
pop
nop
ja
punpckhbw
cmpsl
mov
aas
adcl
mov
cmpb
jecxz
mov
jg
jo
in
sahf
je
vpshuflw
fwait
xchg
inc
out
dec
inc
sub
arpl
enter
out
adc
fcmove
lds
jge
lods
mov
dec
fcoms
xchg
iret
stos
ret
and
jne,pt
add
jnp
sbb
or
sbb
sahf
mov
clc
mov
xor
mov
sbb
mov
ljmp
jmp
shl
test
xlat
fbld
jne
pop
jp
cmp
xchg
mov
cmpsb
sbb
stc
ja
xor
lock
cli
imul
je
fcmovb
enter
jecxz
pushf
pop
dec
push
cmpsb
fsts
addl
sub
pop
pop
mov
push
mov
or
push
sarl
cmp
lea
ss
iret
js
ljmp
lock
mov
dec
push
inc
mov
stc
adc
rcrl
lods
inc
or
mov
out
inc
insl
jns
dec
pop
jp
dec
mov
insb
sbb
iret
lea
push
mov
xchg
inc
adc
push
negb
or
pop
sbb
fdecstp
sub
pop
jne
shrl
mov
idivb
fs
lods
sub
out
sub
aas
jmp
call
pop
xlat
sub
pop
es
xor
adc
stos
lahf
loop
pop
adc
into
xchg
idivl
or
xor
lods
inc
cli
and
add
push
gs
mov
push
test
cmc
jne
ret
leave
jo
pop
fcomps
jmp
adc
adc
jmp
stos
xor
lea
jb
enter
fiaddl
mov
mov
shl
jle
out
sub
cmc
jge
lods
or
push
pushf
cwtl
mov
or
and
add
push
xchg
xor
xlat
adc
fs
ret
aas
mul
sbb
filds
sbb
jecxz
push
xchg
push
leave
inc
xchg
stos
sbb
add
lret
sbb
addr16
gs
xchg
mov
fsubs
xchg
push
cmp
push
dec
in
ds
mov
add
popf
mov
push
adc
adc
adc
mov
fstpt
xor
repnz
dec
fnstenv
ret
inc
outsl
push
sub
and
or
test
push
xchg
clc
pop
or
sbb
cmp
jmp
sbb
or
inc
arpl
sbb
mov
jo
pop
sbb
test
cmc
adc
mov
mov
push
out
lret
loope
lea
adc
push
repz
xchg
mov
pop
cli
les
mov
inc
test
inc
andl
out
rolb
sbb
sub
rol
push
push
adc
mov
dec
jnp
pop
fucom
ds
mov
xchg
in
mov
push
leave
xchg
int3
pop
ja
push
arpl
jge
sub
inc
ds
inc
xlat
xor
inc
jmp
dec
aad
jo
jbe
mov
xchg
add
inc
mov
leave
sbb
xchg
das
xlat
std
add
adc
movsl
or
push
cld
ljmp
add
lret
mov
jl
sbb
adc
fcoml
adc
inc
and
iret
in
shll
mov
rcrl
sbb
pop
movl
aad
and
fnstcw
stos
xchg
hlt
ss
push
push
xchg
dec
jnp
jae
repz
add
sbb
sub
dec
pop
inc
fstpl
sub
scas
call
cmpsb
in
xor
xor
inc
xchg
jmp
jns
in
stos
sbb
adc
mov
sub
mov
pop
fists
shr
add
mov
sub
pop
mov
lock
sahf
arpl
xchg
test
jns
stos
std
jmp
ljmp
rolb
test
popf
mov
jnp
movsb
test
mov
mov
lret
xor
fistps
mov
sahf
xchg
out
out
fs
push
pop
jnp
and
imul
loope
test
mov
aaa
in
pushf
dec
dec
rol
xchg
sub
xchg
iret
inc
cmp
js
xlat
push
adc
popf
addr16
sub
lret
adc
xchg
jmp
inc
and
outsl
fidivrl
push
aam
les
ljmp
insl
lock
jp
popf
ds
cmpsb
leave
arpl
fstps
into
push
or
mov
mov
or
lret
dec
lret
out
in
xchg
mov
dec
int3
dec
das
fstp
jo
andb
inc
cmp
movsl
jae
sub
stc
dec
cmpsl
neg
add
xchg
cmp
jmp
xchg
sbb
jmp
jns
cli
mov
jns
xchg
inc
popf
lret
insb
mov
push
fcom
cmpsb
insl
jb
repz
cmp
js
jge
fstpt
gs
inc
or
loope
pop
pusha
push
and
sub
lea
test
push
rcl
sar
iret
icebp
push
insl
setl
gs
jle
mov
inc
lods
shlb
cld
jb
pop
push
mov
ficompl
inc
jbe
cmp
xchg
ret
cmpsl
repnz
mov
and
jmp
outsl
mov
stos
repnz
sub
sar
jmpw
jae
mov
icebp
pop
ja
mov
int
pop
outsb
mov
xor
lods
out
mov
jbe
loope
pop
mov
outsb
mov
rorl
std
or
lcall
movsb
stos
mov
lret
xorl
inc
push
push
xor
dec
xor
into
push
sbb
mov
pop
pop
insl
scas
xlat
loopne
idiv
test
arpl
pop
xchg
loop
mov
ss
xor
pop
push
push
fadds
add
pop
inc
lcall
leave
in
xchg
xchg
iret
out
loope
jb
mov
outsb
or
std
incl
sbb
popa
insb
push
std
adc
push
adc
jbe
mov
jae
sub
cmp
ret
push
add
fistpl
shlb
mov
inc
mov
jne
call
pop
rcrl
lock
sbb
sub
jp
jnp
adc
pop
rol
cmpsl
xchg
cmpsb
sbb
add
hlt
ljmp
jnp
stos
les
aam
mov
mov
push
sbb
cmpsl
lret
pop
xchg
test
mov
inc
pop
mov
fdivs
xchg
cmpl
jns
aas
jno
fwait
jmp
pop
filds
pop
test
fidivl
lret
mov
out
cmp
cmp
adc
rclb
inc
mov
jp
or
and
leave
js
shrb
fdivs
mov
xor
or
testb
and
shll
push
adc
xchg
fwait
mov
mov
xor
adc
incb
stos
add
aaa
das
dec
mov
dec
outsb
inc
sbb
add
popa
cmp
out
cwtl
pop
cmpsl
mov
in
xor
jns
push
out
out
outsb
sarl
stos
and
xlat
lock
sbb
jl
sbb
cmp
inc
popa
out
push
mov
dec
cmovs
sbb
jo
add
xor
jl
push
push
jne
cmp
pop
jmp
add
cmpsl
icebp
mov
xchg
nop
fsubrs
push
jno
add
jbe
out
cmpsl
adc
pushf
sbbb
loopne
dec
cld
iret
push
pop
sbb
pop
inc
cmp
bound
in
push
inc
es
fs
or
loope
outsl
sub
xor
idivb
jo
pop
in
jns
mov
dec
ljmp
dec
or
popf
icebp
clc
jecxz
adc
leave
dec
ja
mov
mov
cli
pusha
shlb
js
out
push
aad
ror
sub
mov
mov
dec
push
jecxz
inc
cs
mov
out
js
inc
js
sti
fildl
rclb
or
lds
inc
pop
cld
add
xchg
ja
mov
sub
xchg
fstpt
sbb
out
sbb
xor
mov
push
aaa
sbb
push
out
subb
pop
and
xchg
das
xchg
sub
pop
dec
dec
and
outsl
leave
inc
aad
lods
pop
sbb
aad
shr
cltd
mov
inc
jmp
cmpsb
mov
pop
and
lahf
inc
jo
mov
movsl
push
cmp
pop
loope
dec
cltd
push
adcl
sub
xchg
leave
lea
andb
sub
and
cmp
cwtl
mov
fists
sub
outsb
aaa
fdivrp
orb
pop
nop
cmp
push
jnp
inc
ljmp
lahf
mov
push
icebp
xor
jno
and
add
sub
fnstsw
sbb
lds
pop
pop
rolb
ret
cmc
out
movsl
pop
gs
push
mov
push
mov
dec
lcall
lret
cmp
cltd
sbb
xchg
adc
pop
lods
ss
lds
dec
and
nop
icebp
pop
fcmovnu
jl
inc
fadds
lods
pop
repnz
aad
roll
icebp
or
outsl
pop
cmp
icebp
int
mov
fidivrs
shlb
xor
je
mov
addr16
nop
mov
push
fwait
insl
xor
ss
pop
dec
lock
in
inc
push
stos
jmp
cmpsb
pop
mov
fwait
stc
cwtl
aam
pop
push
repnz
lret
mov
mov
add
mov
push
pop
mov
test
pop
jg
mov
or
mov
loopne
in
fnstenv
std
sub
jle
lret
pop
or
sbb
xchg
sbbb
out
fsubl
lods
scas
ja
movsl
mov
lods
push
loope
mov
jo
add
movb
jb
in
inc
cmp
add
push
xchg
and
mov
mov
cmc
xor
out
add
and
dec
push
sbb
xor
add
or
sub
mov
cmc
scas
cmpsl
push
les
outsb
mov
cmp
push
xor
and
push
icebp
or
in
pop
add
aad
dec
jg
jge
repz
inc
mov
into
add
mov
cmp
repz
sahf
mov
push
imul
inc
adc
adc
shrl
mov
or
jns
ss
xor
mov
mov
aas
mov
adc
insb
insb
dec
jmp
testb
jo
push
jge
and
xor
xchg
jl
adc
in
test
or
lock
fists
test
mov
lcall
fadds
xchg
mov
int3
fisubrl
icebp
push
flds
mov
fs
adc
or
lahf
mov
sbb
xchg
mov
and
sbb
xchg
xchg
push
scas
push
rorl
lcall
test
sub
mov
lods
outsb
nop
jg
adc
xlat
adc
cmp
nop
jb
mov
cmp
fildl
pop
enter
roll
push
sub
icebp
pop
cmp
je
fimull
push
cmp
cmp
push
ficoms
scas
mov
dec
jbe
xchg
fwait
cwtl
pop
cmp
mov
fisubrl
lret
fwait
popa
jae
adc
leave
mov
xchg
adc
insb
stc
divb
pop
add
stos
inc
add
jle
and
xchg
outsb
mov
test
fldl
cmp
outsb
and
push
push
adc
dec
sub
add
cmp
dec
sbb
or
dec
sbb
jns
jmp
pushf
xor
outsl
xlat
out
imul
in
xchg
xlat
sahf
dec
adc
add
rep
xor
push
cmp
rcrl
pop
addr16
and
fsubrl
aaa
push
cmp
mov
or
inc
gs
sbb
stc
xchg
xor
jmp
mov
enter
jno
jo
ljmp
xchg
loop
jo
and
fnsave
rcrb
mov
xor
jp
mov
fstp
negl
loop
and
mov
xchg
pop
or
ljmp
ljmp
es
xor
push
adc
pop
xchg
or
repnz
adc
cs
fnstenv
imul
pop
xchg
fldl
lcall
push
icebp
stos
sti
mov
fbstp
pop
enter
cmc
in
mov
jbe
mov
xchg
mov
adc
repnz
xchg
cmp
cmp
jg
lea
in
dec
stc
lret
adc
test
xor
movsl
dec
sbb
pusha
clc
mov
inc
mov
ljmp
movzwl
xor
and
dec
adc
imul
mov
lods
xlat
nop
jbe
inc
or
iret
in
jmp
adc
mov
lds
outsb
rol
pusha
jecxz
adc
lds
mov
or
cltd
push
push
cmpl
mov
aam
push
in
inc
sub
dec
pop
add
js
pop
pushf
add
add
in
fildl
pop
dec
or
rcl
lods
jmp
gs
or
je
fdivp
nop
shlb
jb
cltd
ljmp
jb
dec
movzwl
repz
das
mov
xchg
je
rcr
lahf
lods
xchg
mov
pushf
add
mov
je
cmc
aas
loope
pop
mov
xchg
aad
enter
in
mov
int3
aam
in
clc
gs
cmc
or
xchg
jge
sarb
xchg
and
dec
fdivrl
arpl
push
cmp
lds
movsb
mov
fcoms
dec
dec
pop
xor
push
dec
test
mov
dec
and
loopne
sbbl
xlat
cmpsl
stos
out
cmp
gs
decb
mov
leave
fdivrl
shr
pushl
out
mov
jle
outsb
xchg
push
sub
push
push
enter
mov
sbb
push
in
mov
dec
mulb
xchg
add
lcall
adc
test
mov
lods
inc
loope
dec
push
adc
add
xor
or
out
inc
and
xor
add
out
jae
fdivr
cwtl
aas
inc
adc
xchg
mov
loopne
fucomip
adc
incl
daa
outsl
adc
aam
arpl
icebp
sbb
imul
dec
loop
jae
adc
outsb
cmp
xor
add
aas
xlat
lret
dec
shlb
mov
int
adc
cltd
cld
flds
pop
fsubrs
mov
fdivrs
and
hlt
fisubrs
and
mov
inc
je
pop
xchg
sub
stos
add
out
ror
nop
adc
ja
arpl
loop
jno
adc
adc
push
xchg
icebp
push
daa
shrl
stos
hlt
outsl
sub
cli
push
in
xchg
sbb
lods
mov
aam
pop
cltd
push
fldl
add
imul
popa
and
test
inc
or
push
ja
fnstcw
data16
xor
sbbb
mov
inc
arpl
xchg
mov
mov
xchg
and
jmp
mov
stos
iret
push
fs
add
loop
mov
mov
in
sbb
fcoml
jo
mov
out
push
sti
cltd
fidivl
push
sti
cmp
add
loope
dec
cs
pop
fdivl
jmp
rolb
mov
or
orb
movsb
jns
sub
jle
sub
cmp
fbstp
mov
pop
or
xor
push
push
jb
mov
jmp
gs
ffree
loop
int3
stos
jp
jle
dec
in
es
cmp
pop
xchg
inc
jl
xchg
std
sbb
sbb
push
mov
loopne
lcall
sbb
or
and
aad
inc
pusha
enter
pushf
jle,pt
shlb
inc
addr16
xchg
mov
jb
xor
fst
sub
fs
xor
enter
icebp
mov
daa
push
cmpb
xor
fsts
rcll
mov
xchg
pop
pop
mov
mov
lcall
xchg
mov
mov
sbb
dec
int3
out
mov
inc
add
push
pop
xchg
mulb
xchg
push
les
jmp
lods
mov
pop
mov
jns
add
test
and
std
or
mov
inc
enter
int3
or
pop
lods
out
xor
jmp
js
add
out
xchg
scas
loope
adc
repz
jge
ffreep
aaa
jl
dec
pop
cmpb
dec
loope
xor
mov
inc
mov
addr16
and
neg
ljmp
dec
je
arpl
jle
jnp
call
cmpsl
nop
orb
add
in
fidivrl
mov
notb
dec
push
gs
or
in
arpl
push
add
ss
pop
repnz
lret
out
aas
std
ss
stc
or
inc
cwtl
insb
ds
mov
add
loop
and
hlt
insl
inc
ljmp
mov
sbb
inc
xor
cli
lret
push
mov
add
movsl
mov
repz
sbb
xchg
insb
mov
dec
popa
dec
jno
out
les
fldl
adc
subl
fucomi
sbb
popf
stos
rcr
jmp
sbb
jecxz
push
mov
fsubl
mov
sbb
das
pop
or
sahf
cmp
loopne
xor
lahf
sub
addr16
test
dec
inc
call
sbb
shlb
add
out
aaa
mov
imul
jae
jnp
pushl
mov
jp
xor
jno
lock
mov
call
fists
push
cmc
in
sub
push
test
inc
lret
stc
lahf
jne
movsb
add
int3
in
mov
popa
shr
test
push
ret
mov
pop
movsb
loope
ljmp
loop
int
dec
inc
les
pop
or
mov
cmpsb
mov
mov
inc
outsb
mov
add
inc
xchg
lret
dec
mov
in
fcompl
xchg
insb
fs
adc
sub
and
jns
das
sbb
mov
push
aam
dec
add
adc
dec
lret
pop
xor
mov
xchg
cmpsl
xor
and
movsb
sub
and
aas
subl
pop
mov
inc
cltd
cli
cmp
sbb
inc
out
inc
loopne
fildll
cmp
jo
ret
and
jl
cmc
cmp
mov
xchg
into
repz
push
repz
or
xor
pop
repz
pop
pop
xor
icebp
dec
mov
jmp
jmp
andb
test
push
inc
popa
pop
rcrb
repz
or
inc
lods
cmp
or
sbbl
pop
xor
pop
xlat
jne
js
or
call
or
jmp
hlt
sub
dec
ljmp
push
repnz
jle
out
push
jecxz
mov
loope
scas
xchg
fnstenv
xchg
sub
clc
dec
cmp
nop
pop
into
xchg
jg
out
andl
lahf
sbb
push
cmpsl
mov
lds
mov
cmp
xchg
out
es
cmp
daa
in
in
ss
stos
js
test
jbe
sub
fsubrs
filds
add
hlt
je
test
mov
cmp
push
scas
and
pop
shlb
add
out
jns
das
jp
cwtl
mov
dec
mov
data16
mov
dec
pop
xchg
inc
cmp
dec
pop
lcall
cmp
sbb
shl
gs
push
fwait
sbb
call
in
in
jne
mov
mov
jne
cmp
xchg
push
push
pop
dec
lret
push
hlt
sub
jmp
adc
mov
mov
jno
test
int
xchg
cmp
dec
in
cmc
ds
xor
in
sbb
dec
iret
and
sbb
mov
daa
xchg
mov
ret
cmpsl
mov
jns
pop
push
lcall
or
in
mov
out
pop
mov
stos
out
mov
push
int3
or
push
lcall
aad
test
fidivrs
iret
add
push
push
int
mov
scas
dec
rcrb
pop
cltd
xor
mov
sbb
xor
push
sub
clc
ja
das
mov
push
cmpsl
sbb
icebp
mov
ss
jmp
fists
cli
jmp
mov
mov
cmp
inc
aaa
and
leave
mov
fnstenv
pop
test
jns
std
sub
xchg
roll
gs
enter
clc
push
jne
pop
arpl
in
in
adc
xchg
add
cmp
aas
addl
jb
js
or
popa
int
pop
pop
mov
mov
cmpl
push
mov
mov
jle
ficomps
pop
iret
cmp
mov
ret
lods
cmp
or
mov
std
out
out
ljmp
das
jle
fdivrp
stos
push
mov
xor
lret
stos
dec
test
test
adcb
cwtl
pop
clc
jmp
cmp
iret
xor
adc
mov
jnp
and
mov
dec
dec
cmp
xchg
icebp
cs
jmp
mov
ja
push
cmc
and
xor
outsb
scas
shlb
cmpb
mov
sub
popa
cmpl
push
lock
scas
dec
jo
popa
or
mov
in
pop
shrb
mov
xchg
push
or
adc
jns
push
leave
stos
xchg
add
jl
in
js
sbb
xor
out
rcrb
add
sbb
sbb
sub
jg
outsl
adc
sahf
sbb
jmp
adc
mov
popa
and
ljmp
push
push
push
outsl
xchg
or
sub
daa
pop
jns
push
pop
xchg
frstor
stc
sub
repnz
xchg
pusha
jb
ret
xchg
xorl
adc
mov
xchg
sub
sti
jl
divb
mov
int3
inc
mov
push
out
lock
imul
push
dec
mov
out
sahf
fcoml
imul
push
inc
xor
adc
dec
shll
ss
pop
mov
xor
dec
jmp
pop
mov
int
push
push
and
inc
std
inc
pop
es
adc
repz
adc
mov
jbe
xor
les
test
mov
int
fsts
mov
xor
sbb
dec
repz
adc
push
mov
fimuls
fisubrl
ficoms
xlat
dec
test
sub
mov
cwtl
fdivrs
cltd
out
jp
mov
mov
test
out
sub
cmpsl
incb
adc
cmovl
or
cmp
scas
imul
movsb
jmp
jmp
lahf
addr16
arpl
mov
icebp
cwtl
psraw
inc
sbb
xor
rolb
sub
ret
xor
js
xor
and
xchg
inc
jns
sub
addr16
cmpsb
and
mov
rolb
dec
jmp
sbb
lea
in
ljmp
dec
pusha
cld
cli
fdivr
enter
js
pop
cli
add
fldl
cmp
mov
cmp
mov
out
and
jns
push
popa
sub
imul
jmp
jo
lahf
mov
mulb
in
inc
cmp
mov
fbstp
test
and
jle
sarl
scas
sbb
sub
movsl
addb
mov
ljmp
test
aad
fs
loop
mov
fdivrl
dec
hlt
sbb
movsb
lret
insl
cmp
ret
dec
fadd
add
iret
jbe
jae
jbe
xchg
or
add
push
add
rcl
xchg
xor
leave
inc
mov
icebp
fisubl
dec
xorb
push
sub
jno
mov
out
xchg
aas
in
aaa
js
outsl
incl
pop
push
mov
shl
pop
jb
test
jle
pop
vpandn
test
sbb
aad
or
loop
sub
jp
jecxz
notl
inc
into
push
popf
dec
adc
add
sbb
stos
push
shl
rcr
pop
add
mov
jne
inc
insl
jb
sbb
pop
pop
pop
fs
gs
dec
xor
in
loope
pushf
aad
lahf
cmc
mov
bound
add
scas
cmp
adc
push
mov
inc
fdivs
xor
adc
clc
stc
je
es
or
sub
aam
pop
jecxz
in
test
shrl
inc
jbe
cli
pop
cmpsl
fcomp
dec
add
mov
fwait
xlat
imul
pop
les
cmp
out
ljmp
mov
js
shrb
stc
mov
or
push
push
sbb
pop
push
sbb
mov
mov
sub
lcall
mov
or
mov
inc
dec
imul
ja
pop
push
lahf
sub
scas
cmp
shrl
mov
mov
sbb
cmp
ljmp
add
ljmp
push
mov
inc
int
mov
adc
jae
repnz
lret
nop
in
jp
xchg
jb
cmp
inc
mov
popf
jmp
xchg
pop
leave
push
mov
movl
movsl
pushf
popf
nop
testl
add
loopne
pop
push
test
cmp
test
fildl
push
lret
jl
ljmp
lcall
push
icebp
aam
movl
mov
dec
or
insl
add
fistpll
inc
je
sbb
jnp
in
adc
mov
iret
lock
popf
icebp
push
mov
dec
out
xlat
or
xor
loopne
add
push
sarb
imul
jns
pushf
imul
mov
ficomps
inc
xor
in
dec
cld
test
cmp
lock
pop
jae
mov
out
cmpsb
pop
ror
movsb
call
jecxz
dec
out
inc
int3
test
out
dec
and
lods
pop
adc
andb
mov
xor
sbb
orl
xchg
jno
and
and
and
in
jno
stc
test
mov
fst
stc
xchg
cmp
out
mov
movsb
jb
ds
inc
sbbl
lahf
jae
mov
fldcw
fisttpl
stos
into
xchg
push
add
push
mov
push
lcall
testb
or
icebp
movsb
outsl
aad
flds
pop
out
movsb
adc
push
pop
mov
ds
test
stos
in
aad
cmp
arpl
pushf
sub
xchg
loope
jp
sbb
adc
mov
int
arpl
fs
fiadds
mull
call
lcall
outsl
cmp
sahf
add
pop
out
out
xchg
dec
pop
lahf
mov
jg
push
xchg
bound
mov
xchg
xlat
loopne
xchg
rcr
mov
fst
inc
xor
cmpb
aas
cmc
shll
cli
imul
ds
nop
xor
pop
pop
mov
xor
in
xchg
mov
push
cmpsl
movswl
jno
xchg
dec
imul
mov
addl
hlt
jge
test
outsl
inc
sbbl
cltd
cmp
jbe
outsb
mov
test
fldenv
bound
mov
push
lock
push
xor
add
push
adcl
pushf
loopne
sbb
adc
jg
enter
jnp
push
ljmp
add
shlb
xor
inc
inc
mov
lods
lods
dec
or
sar
int3
sbb
jl
xlat
mov
repz
xor
out
leave
repz
jmp
mov
sbb
fcoml
mov
mov
jge
mov
push
js
mov
fs
and
aaa
inc
aad
xchg
jnp
stos
lea
insb
fistpll
xor
and
sub
inc
inc
sub
jp
xchg
xor
jb
jecxz
nop
lds
jmp
sub
bound
ss
out
movsl
out
jmp
pop
cmpsl
ret
scas
andl
rorb
jbe
pop
fildl
cltd
cmp
cltd
shll
or
jge
outsl
test
mov
loope
imul
gs
scas
push
rcr
add
xor
iret
into
dec
jo
or
sbb
mov
rorb
test
pusha
xchg
and
ret
pop
sub
cmp
dec
jg
scas
sub
cld
sbb
mov
mov
test
adc
mov
inc
sub
popf
push
ret
cmp
add
scas
ds
add
cmp
xor
outsb
aam
jmp
push
mov
mov
out
jg
adc
sub
ss
add
pushf
loope
inc
dec
adc
lock
dec
dec
cltd
addl
aas
dec
and
jae
mov
pop
xchg
pop
cmp
popf
xor
sub
cltd
in
mov
and
test
cwtl
sbb
push
push
lret
fwait
push
fadd
mov
pop
mov
ja
xchg
push
mov
inc
dec
test
repnz
mov
aad
loope
add
inc
sbb
mov
dec
xlat
mov
rcrb
push
xchg
leave
pop
adc
std
or
shll
push
push
loopne
les
ficomps
push
xlat
jb
rcll
dec
aas
int
cmpsb
popl
idiv
sub
subb
fisubrs
push
jp
add
fcomp
jnp
jp
popf
addl
sbb
sahf
xchg
pop
sbb
inc
ret
xor
test
fsubl
or
sub
xchg
pop
and
xor
fst
mov
fistps
adc
nop
xor
mov
and
push
jecxz
jecxz
adc
adc
jns
xchg
nop
pop
negb
or
sub
es
repnz
push
dec
mov
leave
mov
lds
fldenv
xchg
outsb
insb
fdivrs
add
lods
movsb
fcompl
jecxz
cmp
or
jbe
mov
dec
sbb
lret
lahf
pop
repnz
xchg
jl
aad
mov
icebp
and
cmp
adc
add
insl
insl
inc
adc
test
push
cmc
dec
ss
mov
cli
pop
data16
fnstenv
outsl
into
ret
add
mov
repz
mov
nop
pusha
aam
jp
ret
mov
adc
repnz
xchg
pop
jle
out
ret
dec
add
lret
adc
lret
fwait
lock
lahf
push
mov
mov
jecxz
testl
dec
adc
andl
push
ror
push
flds
stos
mov
push
sub
lret
mov
adc
push
pop
bound
aam
out
pop
dec
cs
shlb
movhps
call
push
pop
sbb
fwait
lea
pop
pusha
or
pop
out
sbb
bnd
aas
cmp
js
stos
and
mov
lea
or
inc
clc
adcl
xor
cmp
jecxz
adc
loopne
loop
mov
mov
outsl
jb
cmp
mov
repz
and
addb
sub
sbb
arpl
daa
daa
mov
inc
popa
shll
out
fsubrl
faddl
cli
lock
fbld
popf
in
fistpll
stc
dec
and
rclb
es
xchg
movl
sbb
icebp
outsb
inc
mov
pop
popa
shrb
ds
test
es
repnz
mov
cmp
push
das
sti
rolb
rolb
aaa
shr
ljmp
popf
stc
cmpsl
cmpsl
push
xor
lcall
insl
insl
jle
gs
xchg
push
aaa
shl
fisttps
lret
adc
lret
pop
and
cmp
in
mov
test
outsl
xor
mov
dec
mov
loope
xor
int
ret
mov
inc
jle
movsb
in
fs
popa
dec
in
test
fucomip
cltd
in
adc
test
loope
mov
cltd
mov
adc
jae
stc
hlt
pop
push
pop
fsubrl
inc
shrb
cmp
mov
mov
cmp
insl
dec
adc
mov
aad
mov
ljmp
inc
stos
fisubs
jb
dec
dec
out
mov
and
xorb
and
arpl
and
sub
adc
fstl
das
or
call
cmp
sub
push
jle
xor
arpl
shl
fildll
pop
mov
mov
jnp
aam
adc
adc
je
jno
sbb
std
push
sub
sarb
xchg
gs
dec
lods
sub
mov
cld
push
hlt
icebp
insl
sbb
out
or
bound
rcrb
mov
dec
nop
or
push
mov
cwtl
cltd
jl
xlat
into
daa
add
push
out
add
xor
pusha
xor
in
ljmp
mov
sbb
shr
xchg
lock
lret
idivb
lds
lahf
dec
jo
clc
inc
mov
dec
dec
dec
stos
mov
lret
fistps
adc
loop
dec
cmpsb
mov
outsb
fisubs
mov
mov
lds
jno
ret
push
sub
jno
jne
xchg
pushf
push
rorl
add
mov
cld
pushl
pop
inc
clc
jno
testl
aam
filds
shll
fcomi
sub
mov
push
inc
adc
inc
mov
jae
sbb
arpl
fmulp
psubb
shlb
jne
adc
lods
int3
repz
adc
mov
ljmp
mov
or
add
addr16
repz
xor
into
movsb
pop
xchg
add
out
push
jecxz
imul
rcr
dec
fmuls
or
loopne
rorl
shlb
push
stos
sbb
sub
pop
lods
jno
push
repnz
pushl
ja
sbb
cld
or
mov
dec
pop
xchg
aaa
fbld
sbbb
movaps
xchg
outsb
leave
xchg
mov
inc
test
movsb
repz
pop
sbb
add
push
mov
sbb
mov
subl
insb
xchg
loope
lea
gs
pop
lock
xchg
dec
pop
pushl
xor
inc
cmp
addr16
jmp
adc
push
arpl
idiv
nop
mov
xor
xor
sti
div
sub
adc
mov
js
cmp
gs
das
dec
pop
popf
dec
shll
pop
call
pop
lds
std
fwait
aam
pop
fstps
test
movsb
push
daa
mov
add
or
xor
push
mov
insb
mov
jmp
mov
into
vcvttpd2dqy
jecxz
mov
dec
repz
pushf
dec
lock
shl
or
test
fcompl
in
adc
test
xchg
sti
mov
add
aas
mov
pusha
mov
or
pop
jp
rcrb
or
push
sub
jmp
lcall
jge
push
adcl
pop
in
sub
lods
cmpsl
inc
cmp
out
subl
xor
mov
mov
mov
and
rcll
bound
inc
pop
pusha
and
xchg
in
dec
pop
xchg
scas
clc
mov
mov
mov
gs
xor
xchg
mov
in
daa
nop
in
loopne
in
pop
imul
imul
and
mov
sbb
mov
aam
pop
jp
loope
mov
inc
movsl
scas
jb
and
sub
or
test
xchg
sub
sarb
sub
in
ret
sub
pushf
mov
mov
mov
and
fdivs
incl
xchg
xchg
in
xor
xchg
push
mov
xor
dec
adc
sub
cmp
stc
mov
push
in
cmpsl
push
sbb
fdivr
pop
xchg
scas
xchg
xor
test
push
adc
sbb
sub
int3
popf
test
dec
test
dec
jne
sahf
or
adc
mov
scas
lds
aam
and
cmp
mov
and
js
insl
in
inc
movsb
loopne
sub
out
arpl
add
int
js
inc
adc
imul
pop
pop
xchg
xchg
test
inc
push
xor
daa
imul
push
jne
mov
pop
inc
mov
arpl
arpl
sub
xchg
mov
cld
sub
or
test
loop
jo
cmp
xchg
push
add
xor
jl
mulb
dec
dec
das
fimull
mov
and
mov
xor
icebp
mov
xchg
aas
popa
test
push
test
or
loop
out
ljmp
outsb
scas
inc
sub
and
dec
fildl
test
sbb
hlt
mov
std
in
lods
lret
mov
jbe
lret
inc
out
mov
call
inc
insl
mov
pusha
fwait
test
inc
pop
xchg
shrb
testl
pop
movsl
dec
xor
mov
adc
call
mov
popf
ret
push
push
and
shl
adc
push
sbb
mov
add
cwtl
pop
imul
scas
lock
add
jl
push
loopne
fists
js
mov
sti
cmc
jl
mov
xchg
jp
adc
ss
mov
adc
push
lds
das
lock
nop
mov
inc
push
jno
add
jle
aad
roll
and
cmp
mov
lret
insl
adc
fs
mov
jnp
pop
mov
adc
xchg
push
pop
mov
xchg
jns
xor
pop
sbb
out
dec
out
pop
mov
xor
les
inc
inc
ret
subl
xchg
in
loop
repz
rcll
push
out
dec
mov
loope
xchg
outsl
xor
iret
std
out
pop
roll
xor
add
addl
ret
push
push
fcompl
out
jbe
inc
dec
mov
inc
imul
jne
inc
jno
cli
mov
pop
jne
sub
lahf
cmp
or
movsl
pop
int
inc
fiaddl
cmp
mov
daa
ljmp
pop
mov
aam
fwait
push
mov
std
jecxz
or
xchg
jl
push
dec
adc
lods
movlhps
outsb
repz
popf
mov
push
sub
or
pop
xchg
mov
xor
xchg
ret
dec
push
jge
lret
testl
or
sub
push
imul
nop
lret
mov
pop
aad
popl
mov
shl
lods
push
and
xchg
xchg
or
stos
in
push
dec
fdivrl
xchg
and
pop
push
iret
filds
sarl
cmp
in
pop
pop
mov
aam
inc
push
movsl
or
lds
xlat
es
arpl
jg
xchg
pop
mov
and
add
xorb
cmp
pop
test
sahf
jae
inc
je
sbb
mov
iret
test
out
es
cli
mov
pushf
pop
int
icebp
aam
cwtl
lock
mov
sub
frstor
add
add
fsts
lret
cld
das
mov
idivb
ds
add
cmp
pop
fst
xchg
xor
ficomps
scas
sub
ljmp
flds
call
and
pusha
jmp
and
jge
jmp
inc
mov
sbbb
outsl
inc
out
sub
inc
repz
push
pushf
cmpsl
sbb
loop
sarb
jno
cmc
jg
imul
int
mov
inc
pop
cmp
mov
inc
rclb
lds
xchg
pusha
jg
ret
cmc
pop
jns
imul
dec
mov
jp
jmp
inc
xor
mov
call
cld
cli
cmp
mov
sbb
repz
sti
ds
push
out
sbb
pop
sbb
push
in
pop
rcll
push
pop
jecxz
cmpsl
scas
lret
call
dec
test
jno
rclb
mov
push
in
xchg
mov
pop
sub
nop
and
movsl
lods
mov
push
lret
scas
dec
xlat
mov
popa
mov
jbe
cmp
ss
push
xor
inc
sub
mov
inc
jno
sub
pushf
cmp
sub
push
jns
mull
add
repz
rcr
fldl
dec
outsb
lret
jle
jo
andb
mov
or
cld
leave
pop
ret
mov
loopne
jecxz
dec
loop
jmp
sub
xchg
adc
pushf
pop
popf
jmp
cmp
bound
jl
mov
sti
cltd
push
mov
jg
sub
lahf
jle
dec
ret
adc
jmp
xor
subb
test
and
shrb
push
cwtl
aas
cmp
and
push
jnp
out
lea
gs
sbb
sbb
rcl
add
cmp
out
push
or
int
fwait
movsb
inc
jp
dec
test
cmp
jle
xchg
mov
out
push
and
outsb
mov
jl
sub
cs
imul
push
pop
inc
cmp
repz
jmp
pusha
adc
test
lcall
rolb
or
jo
cmp
incl
test
mov
imul
push
adc
popa
test
test
jo
sub
cmp
filds
adcb
add
pop
lret
aad
lcall
cld
jns
mov
jle
and
aas
popf
fucomip
xchg
sbb
mov
inc
mov
push
ss
movsb
jb
cli
lcall
jl
xor
pushf
cld
out
sbb
mov
and
test
cmp
int3
mov
stos
repnz
repnz
xor
stc
shrl
push
ss
sub
cmpsb
in
daa
xchg
aam
add
push
in
xchg
sub
sti
popf
daa
mov
add
add
cmpsl
mov
fcmovnu
jl,pt
pop
xchg
xchg
xchg
jbe
sbb
fistps
in
and
cld
or
sti
inc
dec
ljmp
punpckldq
shll
xchg
into
xor
sub
xlat
mov
addr16
jecxz
out
push
xor
inc
dec
push
imulb
push
xor
loope
pop
pop
or
lret
jnp
mov
jl
fsubrs
fs
cmp
mov
xchg
into
dec
daa
out
cpuid
rcrb
jp
addb
imul
push
cmpsb
lcall
adcl
mov
into
xchg
mov
insb
and
leave
jne
push
pop
cltd
test
pop
enter
movsl
and
jo
inc
dec
fs
sub
add
lock
pop
cmp
jnp
adc
push
cwtl
sbbl
ja
cmp
lods
ds
xchg
test
shrl
mov
das
outsb
mov
outsl
push
ja
push
movl
xorl
add
into
std
and
pop
test
adc
fisubs
sbb
rol
dec
scas
cmp
ret
mov
out
xchg
mov
cld
js
jbe
adc
repnz
pcmpeqw
roll
xor
mov
and
adc
bound
dec
jae
fbstp
dec
dec
rcrb
jno
jl
cltd
pop
cmp
jns
pop
jmp
push
mov
jge
jb
sub
pop
mull
push
fiaddl
sub
mov
outsb
cli
ror
jg
mov
popf
mov
jl
cmc
arpl
add
jns
insl
and
loop
jl
lock
sahf
aaa
hlt
js
jnp
pushf
insl
and
jmp
jp
and
push
push
dec
jo
jmp
mov
jns
and
push
pop
mov
mov
jmp
hlt
xchg
sti
jle
iret
inc
movsb
pmullw
test
dec
mov
dec
jmp
xchg
nop
mov
ljmp
cmp
jns
insl
mov
das
in
andb
scas
mov
ljmp
push
mov
lahf
inc
cs
dec
out
aas
out
inc
jo
mov
js
mov
push
mov
fimull
xchg
iret
in
xchg
aad
inc
test
enter
inc
inc
fdiv
subps
sbb
push
inc
pop
popf
dec
cmpsb
jle
mov
insl
inc
ds
jmp
xor
dec
sarl
sub
mov
push
sub
jle
enter
dec
add
lea
mov
jp
adc
mov
sub
mov
fists
test
ret
stos
xchg
in
outsb
add
test
fwait
cld
rcrl
cli
lcall
ds
sbb
push
popa
sub
sbb
scas
jle
lock
rolb
sub
push
in
ss
cltd
add
adc
in
gs
clc
mov
cmp
sarb
pusha
sbb
lods
cli
add
jmp
repnz
and
jno
test
add
rcl
fnsave
mov
aad
sbb
or
mov
mov
jb
cli
jb
out
cmpb
out
jno
rcl
jmp
cmc
les
hlt
fst
pushf
lods
icebp
sub
ds
xchg
jnp
sbb
cmpsl
jno
jns
cmpsl
sti
xchg
shll
sti
adc
test
mov
and
sbb
sbb
or
push
divl
ds
in
pushf
fsubrs
dec
push
mov
push
call
icebp
xchg
enter
lcall
les
mov
xchg
mov
popaw
mov
lock
les
jmp
inc
dec
sbb
cmp
sub
js
cmpsl
pop
dec
adc
or
popa
inc
sarl
fnsave
adc
ret
sub
pop
fldl
aad
dec
mov
js,pt
dec
loop
iret
inc
adc
addl
push
sarl
js
das
outsl
mov
stc
or
mov
mov
stos
inc
adc
ret
stc
mov
das
sub
mov
mov
inc
sbb
adc
lds
dec
inc
jo
lret
mov
lock
sbb
mov
insb
pop
push
es
push
dec
sbb
jl
fisubrl
hlt
popl
xlat
fistl
inc
test
ss
std
out
mov
shl
rcll
jg
rolb
je
les
pop
and
adc
lret
rorl
mov
lcall
int
in
rcr
xor
iret
jno
pop
mov
out
mov
mov
leave
adc
sub
push
xor
and
ret
int
mov
mov
xor
inc
mov
lea
dec
dec
pop
jne
mov
and
jns
cmc
sarb
push
test
repz
jp
or
loope
mov
dec
insb
jmp
cmpsl
push
into
mov
leave
mov
xchg
push
dec
insb
outsl
and
jns
jp
mov
dec
loopne
cmp
das
inc
or
push
sahf
add
test
sbb
movsl
cmp
pop
or
push
fs
push
lret
dec
dec
mov
cmc
ss
jl
cmp
ficoml
stc
movsl
xchg
jg
mov
fisubl
push
dec
xor
xchg
or
ror
ret
push
sub
inc
mov
dec
mov
gs
insl
mov
inc
enter
sahf
mov
xor
loopne
sub
loop
bound
inc
dec
adc
js
gs
push
pop
lcall
push
mov
pop
mov
cmpsb
adc
push
mov
mov
movsb
push
movsb
jg
out
jmp
mov
pop
ds
mov
add
dec
mov
rolb
sub
cmp
push
ss
call
adc
dec
ljmp
dec
xchg
xchg
cld
cmp
ret
popa
lcall
dec
aam
sub
test
or
jmp
xor
lods
imul
outsb
cmp
into
cmp
or
mov
jp
push
xor
repnz
sub
sarl
cli
dec
popf
call
sub
pop
int
xchg
cmpb
orb
ja
cmp
adcl
pop
and
shlb
loopne
inc
not
xor
sub
push
iret
pop
jp
pop
mov
stos
fiadds
mov
cltd
jle
scas
aas
or
and
pop
sub
mov
test
push
fisubs
mov
cmpsl
mov
outsl
int3
mov
push
jne
mov
pop
push
lcall
add
cmp
push
scas
movsl
lock
mov
inc
bound
stos
adcb
repz
or
imul
std
mov
mov
bound
cs
inc
test
mov
imul
push
lock
dec
xchg
movsb
adc
lea
push
pop
fnstcw
pop
xlat
pop
lcall
fidivrl
sbb
cmp
fs
mov
fcmovbe
jae
les
mov
inc
push
pop
inc
shrb
je
add
pop
cwtl
cltd
mov
loope
incl
mov
je
fnstenv
je
lahf
cmp
pushf
and
out
sub
cmp
es
dec
cmp
push
push
dec
aas
dec
es
imul
push
imul
mov
aas
ror
jge
mov
lret
and
orb
mov
sbb
outsl
sub
pusha
and
mov
sarb
mov
xchg
inc
and
jo
shr
fwait
enter
ljmp
nop
into
add
cltd
pushf
outsb
and
mov
pop
mov
inc
pop
test
ss
xchg
repnz
sub
jge
pop
fldl
stos
jae
lock
call
ds
cmp
jo
out
sbbl
pop
and
hlt
dec
popa
jmp
xchg
inc
icebp
xor
aad
fbstp
test
imul
push
je
mov
jns
mov
fidivrs
arpl
pop
pop
fistpl
mov
cmp
leave
in
pop
ror
in
mov
mov
pop
les
lods
cmc
lods
dec
imul
fldl
push
loopne
insb
mov
andl
pusha
jo
out
hlt
mov
sbb
test
push
dec
jmp
repz
inc
orl
decb
fisubl
sbb
fcoms
cmp
adc
pop
inc
or
dec
pop
mov
pushf
adc
add
xor
loope
sbb
fmul
addr16
or
in
push
add
fucomip
mov
cmp
jmp
loop
fnsave
inc
fiadds
shlb
int
mov
or
jecxz
jmp
xchg
jno
sub
xchg
dec
insb
jnp
mov
push
mov
out
pop
mov
into
repz
pop
fwait
lea
popa
lods
pop
out
lcall
sub
push
ja
outsl
rol
rclb
push
cmp
jecxz,pn
pop
addl
push
dec
movb
push
or
fidivs
and
stc
add
fisubs
xchg
cwtl
and
mov
push
outsb
ss
enter
in
mov
pop
push
shll
mov
repz
cli
pop
jno
xchg
inc
push
fnstsw
push
push
inc
push
scas
mov
stos
gs
call
push
sub
fs
pop
aam
cmp
add
and
jne
pop
fwait
mov
push
add
cmc
push
cmp
je
shrl
pop
xchg
pop
cmpsb
aad
shl
pop
xchg
xchg
mov
ret
or
stc
mov
movb
adc
test
fsubs
and
aas
pop
ror
popa
dec
test
test
cmp
ljmp
fcmovbe
jno
jecxz
xchg
jbe
push
pminsw
inc
pop
fisttps
cltd
mov
xchg
jecxz
jp
or
aaa
repz
mov
add
or
add
das
jle
jecxz
and
aad
cmp
in
mov
in
xchg
in
lods
jmp
test
ffreep
mov
pop
pop
push
sahf
repz
sahf
mov
ljmp
mov
cmp
xor
xor
cmp
out
mov
jg
lret
xchg
popa
scas
sub
outsl
adc
pop
xchg
push
out
movsl
cs
sar
adc
into
cmp
sbb
ljmp
push
and
imul
inc
inc
pop
xchg
hlt
push
movsl
push
mov
add
movsb
jecxz
mov
mov
lods
lock
insb
rcr
je
fcomps
imul
shlb
icebp
pop
sbb
push
out
lahf
jge
shl
dec
sbb
lock
loop
frstor
jg
push
test
mov
xlat
clc
ficoms
pop
lea
cld
loop
sub
inc
sbb
cmpsb
and
mov
adc
sbb
ret
xor
and
ds
mov
jnp
dec
cli
dec
mov
xchg
or
xchg
mov
dec
adc
hlt
pop
cmpsb
jmp
les
sbb
les
cmp
cmpsl
cmpsl
movsb
adc
mov
sub
jo
and
and
loope
mov
ljmp
leave
xchg
cmp
pop
dec
push
pop
push
xchg
mov
outsl
mov
mov
adc
pop
add
fcmovnb
adc
shrb
inc
daa
imul
sahf
outsl
pand
push
sub
push
jge
cld
or
sub
xchg
lods
pop
movsb
test
adc
pop
in
adc
fisubrs
push
xchg
push
fcmovnb
rcrl
dec
sahf
mov
dec
mov
ja
jb
in
add
and
adc
movsb
adc
popf
cmp
mov
lods
pop
jo
push
enter
dec
insl
daa
imul
mov
insb
and
rcrl
int3
out
loopne
fldcw
cwtl
pop
out
and
jl
pop
out
in
sub
cmpsb
cmp
inc
or
adc
ljmp
mov
cmp
aam
pop
jno
enter
push
ret
int
or
adc
jno
xorb
aam
dec
push
mov
push
rol
int
aad
fmuls
sbb
xor
shlb
incb
lahf
lcall
push
data16
les
stos
stos
mov
mov
mov
hlt
cmp
dec
stc
inc
push
int
adc
outsb
adc
mov
add
icebp
loopne
faddl
lret
test
add
in
mov
inc
fdivs
mov
add
or
dec
lcall
dec
loop
mov
xor
cltd
add
cwtl
repz
cmp
xchg
add
and
cmp
aaa
dec
cmc
jmp
leave
cmp
sbb
jns
addb
dec
mov
and
sarb
lahf
push
dec
shll
mov
out
mov
cmp
xchg
and
cld
add
push
sbbl
aad
and
lret
push
scas
pop
bound
std
cs
lcall
dec
fdivrs
popf
cmp
cmpb
test
shl
jnp
add
scas
sub
pusha
sbb
jnp
dec
adc
jecxz
scas
adc
pop
mov
outsl
imul
addb
jbe
rorb
daa
xchg
es
jae
dec
cmpsb
inc
andb
pusha
or
jle
movsl
movsl
mov
idivl
or
cmp
cmp
bound
xchg
pop
in
jo
fnstcw
lods
inc
push
or
sub
push
xchg
outsb
sahf
lcall
enter
lods
sub
fmuls
or
sti
push
cmpsb
pop
push
js
leave
std
cmp
frndint
jbe
pop
push
push
adc
ja
rorl
pop
fld
lods
psrlw
pop
data16
sbb
nop
mov
mov
cmp
jns
or
icebp
daa
jno
les
push
cmc
enter
mov
jecxz
sbb
pop
sub
imull
adc
sub
pop
xchg
repz
add
notl
mov
cli
cmpsl
lret
jo
je
jae
or
add
add
std
ret
out
sbb
xorb
addr16
pushf
inc
in
pop
jne
cltd
nop
cld
hlt
adcb
pusha
add
in
stos
cmp
cmp
xor
scas
sbb
adc
adc
scas
mov
mov
fiadds
adc
cmpb
mov
mov
mov
sub
in
int3
adc
hlt
int3
jns
mov
rorb
pop
bts
push
and
jmp
dec
pop
in
rorb
sbb
xor
jnp
xor
ss
lea
shrb
adc
adc
and
clc
insb
bound
jecxz
les
pusha
out
jno
xor
cmpsb
adc
addb
clc
mov
adc
and
cmp
sub
mov
test
xchg
pop
cwtl
pop
xchg
cmp
shll
jp
shlb
xchg
dec
fisttpll
ljmp
cmp
cmp
pcmpeqb
mov
hlt
out
xchg
pop
incl
lock
xchg
shll
loopne
call
sub
jle
mov
aaa
call
ret
jge
adc
or
pop
xchg
pop
test
outsl
aaa
insb
mov
mov
scas
jl
popf
clc
shlb
xor
or
pop
pop
sub
push
movsl
jne
jo
jmp
mov
or
xor
in
push
add
dec
mov
dec
inc
sbb
cmp
cltd
ljmp
push
mov
aas
cmpsb
mov
insb
ds
mov
and
dec
outsb
xor
repz
roll
cmp
arpl
adc
pop
lcall
dec
jb
sub
jno
pusha
pop
mov
addr16
jecxz
mov
bound
mov
cs
dec
cmp
enter
fsubrs
in
mov
xorb
jecxz
mov
push
js
test
mov
jae
or
or
repnz
xlat
in
cmc
stc
sub
add
stos
cmp
sbb
fisubrl
fidivrs
js
imul
sbb
dec
rcrb
dec
and
xchg
loope
int
and
jo
adc
subb
fsubrs
in
mov
push
insl
xchg
sarl
push
push
mov
and
repnz
dec
ficompl
sbb
js
sub
adc
inc
ret
out
dec
fwait
lea
pop
push
adc
push
sub
push
adc
add
loop
arpl
out
jl
scas
or
inc
shll
cmp
xor
dec
adc
jmp
push
enter
sahf
lret
inc
rcrb
jmp
jne
clc
or
pop
inc
movsb
jne
addb
inc
out
sahf
dec
popf
fdivrs
jbe
lahf
cmpsb
and
push
inc
and
ljmp
and
pushf
mov
ss
imul
inc
lods
mov
fimuls
cli
arpl
int3
jecxz
jecxz
adc
fldcw
shll
mov
pop
jecxz
xchg
pusha
cmp
dec
movsb
daa
std
sub
ss
jns
cmp
shll
mov
adc
sub
jae
mov
insb
mov
mov
add
jbe
xchg
sbb
push
fcmovnb
shll
mov
push
xor
repnz
push
mov
fwait
cmp
loopne
push
or
inc
sbb
out
mov
mov
idivl
mov
loope
or
push
and
js
loop
inc
pmulhw
push
xor
leave
rorb
sub
in
mov
mov
in
xchg
mov
or
rorb
sti
xchg
mov
add
xchg
fldcw
add
int3
xchg
jmp
imull
xchg
sbb
out
cli
xor
inc
fcmovnbe
adc
repnz
cvttps2pi
jae
mov
dec
mov
sti
fldenv
in
xlat
insb
stc
add
fs
xor
push
xchg
sbb
or
fsubrp
std
popf
cmp
stos
popa
cmc
stc
rcrb
and
pop
dec
dec
xchg
mov
cltd
xchg
add
sub
mov
jle
mov
sarl
jle
lds
and
ret
lahf
push
sbb
pushf
les
ja
mov
out
sbb
enter
inc
cltd
icebp
jnp
insb
and
ds
fisttpll
pop
jb
and
sub
prefetch
mov
jg
sahf
xchg
xchg
push
jle
out
es
icebp
test
lret
xor
fisubrl
xor
xor
jmp
lods
pop
rcrb
cli
cli
push
addr16
mov
aaa
dec
pusha
push
jo
dec
daa
mov
push
or
repz
fnstcw
sarb
xchg
adc
mov
xor
sub
cld
sub
sub
fsts
incl
xor
fiaddl
mov
cmp
dec
iret
mov
inc
in
pop
jmp
mov
mov
cwtl
fnstcw
maxps
shlb
mov
iret
dec
mov
aad
int3
inc
xor
inc
mov
bound
xor
ret
and
pop
and
pop
je
mov
shll
mov
fidivs
sub
inc
mov
lret
cmp
cmpl
mov
pop
sub
leave
cli
lods
adc
or
outsl
ror
nop
add
imul
loopne
fnstcw
popf
aas
jns
sarl
jae
lods
push
dec
inc
pop
push
mov
clc
push
dec
pushf
sbb
jo
jg
lods
sti
xor
mov
jl
jle
and
cli
in
out
lods
inc
dec
push
test
ret
cli
ret
sbb
dec
mov
sbb
ja
xchg
sub
lcall
and
aas
add
push
pop
out
cli
scas
sub
add
into
mov
mov
out
push
jmp
test
stc
mov
xor
dec
jns
mov
mulb
xor
jl
sarb
and
filds
and
jmp
push
into
fstpt
aaa
mov
sub
mov
xchg
loopne
lea
mov
xchg
or
sahf
movsbl
add
jo
cmp
mov
mov
loopne
faddl
and
push
pop
shlb
out
test
cmp
mulb
pop
sub
sbb
sub
imul
fwait
jb
call
das
or
test
into
and
mov
test
mov
lea
pushl
mov
xor
test
in
movsb
cli
xchg
xchg
out
sub
mov
mov
dec
xchg
mov
pop
imul
cmc
sbb
shll
lods
push
push
add
lret
or
aas
test
mov
sub
and
lcall
sbb
add
mov
loope
push
adc
test
repnz
push
lock
repnz
mov
cmp
sarl
xchg
dec
into
sbb
je
lods
lock
testb
xchg
rorb
jo
mov
sbb
inc
outsb
dec
arpl
fwait
xchg
xor
add
adc
adc
adc
sbb
pop
push
push
popf
sub
scas
sub
sbb
mov
mov
out
cmp
leave
jl
mov
pop
les
adc
inc
fadds
rorl
fwait
out
mov
sbb
push
pop
popf
mov
inc
call
mov
sbb
xor
pop
jnp
je
mov
push
and
add
or
mov
inc
dec
outsl
pop
sub
orl
sarb
call
or
pop
je
imul
sub
test
inc
out
cs
push
adc
xchg
mov
divl
add
cld
inc
mov
sarl
sbb
pop
int
iret
jne
jbe
add
push
jne
mov
test
dec
ret
xchg
mov
adc
out
cmp
arpl
mov
jne
fcom
mov
xchg
jo
cltd
movsl
scas
popf
aam
and
lret
cld
ja
insl
insb
inc
movsb
jbe
pop
sub
iret
push
cmp
adc
cmp
and
pop
subl
xchg
dec
or
int3
adc
mov
fldln2
mov
jl
mov
or
fidivs
test
add
jb
sahf
ljmp
dec
in
mov
ds
cmpsb
or
pop
mov
sub
sbb
pop
das
dec
xor
pusha
daa
dec
into
ds
and
pop
sub
push
mov
mov
cmp
and
movsb
mov
in
outsl
and
fcoms
shrl
jne
push
test
add
fdivs
int3
push
adc
xchg
jmp
push
jl
sub
outsl
lea
push
das
xchg
orl
and
lods
jno
mov
bound
adc
xchg
sub
lahf
and
movsb
mov
push
add
sbbl
mov
in
mov
mov
loopne
sub
adc
scas
sub
cld
pop
pop
test
cmp
sbb
push
imul
es
cs
xchg
xor
es
cmpsb
das
fwait
sarb
sbb
aaa
jbe
push
jns
sub
sub
ds
push
push
mov
nop
fs
or
movsb
mov
negl
jb
xor
pop
aas
fs
stos
bound
ja
leave
shrl
stc
lods
clc
addl
pop
js
nop
icebp
push
push
xchg
add
mov
sarb
cmp
test
xor
sub
add
inc
gs
pop
push
add
cmc
cs
into
adc
sahf
and
sbb
pop
xor
inc
xchg
and
ret
push
mov
pop
push
rcrl
js
out
and
test
sbb
pusha
xchg
jg
sbb
pop
das
mov
stos
hlt
mov
or
mov
mov
movsb
cli
lahf
mov
xchg
or
pop
or
xor
mov
enter
daa
aad
dec
adc
mov
shlb
sbb
je
sub
push
cwtl
scas
aaa
xor
insb
mov
inc
mov
lds
lods
out
addb
push
push
ljmp
stc
jge
fidivrl
pop
in
in
scas
fdivl
fistps
xor
xor
inc
push
jb
scas
and
aas
fistps
and
dec
or
xor
xor
int3
and
jle
dec
gs
ret
hlt
sbb
push
push
fnstenv
mov
out
test
and
les
push
dec
pop
jae
fs
and
mov
jb
mov
out
js
push
mov
push
popa
movsb
pusha
shr
pop
call
rorl
test
pop
loop
out
xchg
sti
jb
mov
loopne,pn
mov
dec
repz
add
pop
jle
fcmovnu
ss
leave
add
inc
out
xchg
movsl
cmp
or
fsubs
pop
jmp
testb
cmp
lahf
dec
mov
stc
and
aas
pop
xchg
lret
and
out
addr16
leave
inc
add
scas
into
movsb
add
xchg
stos
scas
push
or
jge
loop
fisttpl
out
sub
outsb
ss
pop
push
or
pop
lea
cmp
test
sbb
fwait
adc
jge
mov
jge
sbbl
push
aaa
add
xorl
dec
and
iret
ss
push
pop
decl
sti
cmp
movsl
lcall
aaa
adc
and
or
nop
push
mov
mov
xor
lret
test
dec
shrl
sub
push
mov
imul
pop
or
les
adc
mov
mov
cmc
leave
in
leave
jmp
outsb
xor
mov
lret
adc
pop
stc
xor
pop
cld
sub
std
inc
ficompl
push
xor
mov
jne
cmpsl
jno
dec
xchg
ficomps
push
push
repz
push
sub
je
test
pop
shll
inc
in
xchg
adcb
inc
fsubrl
out
jmp
add
cmp
dec
imul
xorb
push
notl
sti
arpl
mov
les
fidivrs
jge
sarb
pushf
jg
movsl
outsl
outsb
aam
movsl
push
fildl
mov
loope
lock
cmpsb
in
idivl
es
jmp
jp
into
ljmp
and
or
push
and
ret
pop
mov
adcl
dec
xor
sub
pop
mov
mov
cmc
or
or
sbb
cltd
in
xor
fisttpll
mov
push
sahf
in
cli
mov
xor
xchg
clc
mov
cmp
in
cmp
movsl
stos
cmpsb
mov
inc
mov
mov
loope
cmp
xchg
push
mov
clc
js
ret
lcall
sbb
leave
mov
loop
adc
scas
mov
loopne
cmp
in
pop
cmp
pop
enter
js
stc
std
xchg
dec
js
pop
cmp
cs
stos
lea
cwtl
inc
pop
push
rcr
test
sub
fsubrl
testb
sub
pop
cli
call
xor
sbb
nop
jmp
jns
jne
xchg
xor
xlat
in
insl
inc
adc
mov
push
movsl
jge
pushf
add
pop
test
cmp
cmp
shl
jge
mov
sbb
pushw
jle
ret
mov
adc
out
fstpl
push
push
lods
test
adc
push
repnz
cmp
sub
jl
out
sub
dec
or
ret
xchg
cli
xchg
and
add
push
mov
sub
mov
jno
cmp
ss
pop
pop
inc
lds
add
in
out
nop
fs
dec
repnz
int3
mov
les
hlt
sarl
insb
nop
stc
daa
jb
mov
fxch
pop
dec
cmp
popf
cmc
scas
xchg
mov
adc
sbb
lods
sti
ljmp
adc
lcall
sbb
addl
loopne
je
test
add
arpl
imul
popf
rcrb
xor
out
repnz
sbb
push
xor
cld
repnz
in
adc
movsl
mov
rol
jo
mov
jns
sbb
movsb
int
add
pusha
xchg
mov
cmpsl
test
insb
ss
dec
xchg
pop
pop
or
adc
inc
fcmovu
shll
ljmp
lret
imul
mov
or
sbb
push
xor
gs
mov
nop
shlb
pop
adc
mov
jecxz
rcrb
shr
mov
and
fwait
cmp
or
push
testb
or
cmc
mov
push
or
or
lret
xor
mov
ror
aam
das
pop
cs
lock
leave
and
daa
sbb
push
repnz
pop
outsb
inc
xchg
and
mov
pop
gs
out
xlat
xchg
sbb
mov
or
mov
xor
in
pop
test
xchg
sub
loopne
das
push
jo
loopne
test
aas
aam
shll
ja
sbb
add
hlt
std
push
data16
test
aam
xchg
dec
std
sbb
or
add
aas
fildll
mov
jp
rorl
lods
lret
rol
jno
cmp
sbb
lds
movsl
xchg
sub
bound
test
cld
adc
sub
or
orb
jb
and
fstpt
std
mov
pop
dec
hlt
and
scas
and
pop
push
dec
adc
hlt
adc
in
movsb
jnp
xor
mov
pop
mov
xchg
fldt
es
inc
push
mov
inc
jp
sub
and
mov
xor
mov
lret
movsb
mov
inc
push
and
das
mov
mov
xor
dec
xorl
and
data16
sbb
test
out
pusha
mov
lret
psubsw
add
pusha
lcall
mov
mov
inc
repz
and
shlb
mov
jecxz
pop
sub
lret
rorb
cltd
mov
stc
push
lret
jge
jnp
shr
mov
pop
movb
movsb
dec
sub
imul
imull
xor
or
xchg
or
movsl
add
sub
shlb
inc
test
and
insl
mov
inc
xchg
xor
xchg
js
pop
mov
cmp
inc
push
mov
ljmp
enter
ficoms
lea
repz
gs
in
sub
cmp
or
sub
xlat
fisttpll
idivb
mov
sar
std
pop
outsl
xchg
jae
pop
mov
clc
push
xchg
bound
jb
stos
xor
dec
xchg
lds
adc
inc
pushf
pop
mov
jg
shlb
leave
lock
or
inc
mov
mov
jl
sub
xor
clc
cli
sbb
xchg
sti
adc
xchg
out
mov
das
fsubs
pusha
adc
jecxz
mov
les
mov
jg
xchg
lahf
adc
dec
xchg
pop
xor
xchg
movsl
call
cmp
adc
push
lods
subb
cmp
jmp
mov
es
pushf
and
mov
mov
sbb
aam
nop
addr16
lock
mov
ret
and
lcall
sub
sbb
adc
xor
aad
xchg
bound
icebp
xchg
in
cmp
sbb
std
and
jae
fidivs
dec
mov
add
mov
inc
jnp
mov
imul
xor
mov
jecxz
es
dec
lcall
jno
adc
lret
in
fnsave
xchg
cmc
add
adc
xorb
iret
movsl
dec
jae
jg
mov
xor
mov
push
les
pop
inc
add
daa
leave
stos
pop
mov
and
cmp
popf
fidivrl
or
adc
fs
adc
dec
push
mov
popf
mov
rorl
subb
dec
cmpsb
lret
or
rcl
inc
pop
les
test
divb
cwtl
das
xor
lahf
fcoml
mov
scas
ja
fistl
push
pushf
cmp
xor
push
dec
fsubrl
jo
lock
xchg
sbb
sarb
xchg
or
mov
mov
adc
outsb
shl
gs
dec
or
pushl
mov
in
aaa
ljmp
pop
xor
pop
outsl
test
insl
std
test
mov
cs
je
insb
popa
xchg
test
xor
mov
fs
jno
stc
sbb
faddp
jo
test
loope
xchg
cmc
jb
sub
mov
dec
mov
mov
add
push
dec
lcall
fcomps
or
aad
jmp
cmp
repnz
cmp
scas
mov
mov
loop
fcompl
ja
dec
sarl
in
pop
xchg
sbb
sub
call
in
and
sub
sbb
mov
stos
fdivl
inc
ret
call
jbe
and
add
lret
push
cli
insb
fildl
outsb
xor
sub
inc
stc
xchg
and
pushf
xor
xchg
insl
les
in
hlt
ds
jns
outsb
outsl
fisubrs
adc
cli
pop
enter
rorb
mov
int
popf
add
add
pop
jp
nop
in
or
hlt
pop
jge
mov
out
cli
xor
or
aaa
adc
std
lcall
add
push
inc
lods
lea
cmpsl
xor
sub
xchg
shll
xor
push
test
cld
inc
add
aam
cmp
mov
movsb
xchg
and
adc
stos
bound
xchg
or
dec
add
push
leave
inc
outsl
out
leave
es
or
pop
enter
cmp
push
mov
in
test
sub
mov
mov
shrb
adc
dec
pushf
add
xor
shrl
out
and
out
xchg
enter
and
fcomps
fwait
push
adc
jl
out
cmpsl
xchg
jg
cmp
pop
cli
inc
xchg
stos
icebp
jae
in
or
mov
cli
jb
sbb
dec
icebp
or
daa
arpl
sub
mov
leave
js
cli
in
add
adc
int
inc
pop
shrb
rep
inc
jmp
insl
sbb
push
mov
push
stos
xor
js
lret
sbb
dec
dec
jle
xchg
test
push
test
cld
les
jecxz
xchg
iret
sub
or
jmp
mov
push
aas
mov
mov
into
scas
imul
fstpt
add
out
cmp
mov
sub
sbb
sbb
insb
ret
mov
jecxz
das
jg
xlat
sbb
xchg
mov
arpl
pop
aaa
ret
jmp
bound
mov
fnsave
xor
iret
lahf
or
mov
scas
mov
mov
pop
and
mov
pusha
int3
xlat
sub
add
cli
scas
push
adc
subb
lds
add
rorl
movb
pop
cwtl
pop
sbb
inc
mov
js
imul
insl
cmpsb
inc
xchg
xlat
rorb
addr16
pop
adc
ds
xchg
push
xor
push
pop
push
outsl
xor
adc
pop
and
inc
das
data16
mov
push
xchg
movsl
push
or
cltd
xchg
ret
xor
daa
jecxz
add
push
pop
outsl
test
das
rcl
out
dec
push
inc
xor
and
sbb
pop
aam
mov
fwait
lahf
adc
add
pop
mov
gs
test
mov
mov
and
scas
mov
and
jnp
push
and
fcoml
pop
sbb
sbb
mov
inc
out
cmp
push
push
push
into
adcl
push
test
cwtl
test
and
into
movsl
pop
icebp
adc
push
lcall
hlt
sbb
sbb
insl
popa
insb
cmp
push
ljmp
mov
test
inc
data16
sub
xchg
push
mov
enter
cmpsb
dec
fistpll
cmp
cltd
xchg
adc
push
xchg
ret
dec
sub
sub
movsb
push
sub
jecxz
adc
insl
mov
xchg
loop
test
inc
or
add
dec
cmpsb
aas
into
aaa
loope
xor
pop
mov
inc
stc
aas
lods
fwait
push
pop
popf
push
xchg
xor
add
mov
jns
fbstp
mov
aas
push
call
aas
inc
mov
lods
cltd
push
loope
ljmp
dec
or
mov
push
inc
leave
cs
xchg
repz
dec
dec
push
addr16
shrl
or
gs
adc
in
jge
mov
sbb
jb
sub
dec
sub
pop
stos
out
adc
sar
pop
and
add
es
lds
xlat
xor
or
movsb
or
add
inc
jp
pop
test
cmp
or
cli
xchg
les
sahf
dec
hlt
lret
or
in
pusha
cmp
or
xchg
jecxz
int
enter
shll
iret
mov
scas
dec
insl
cwtl
or
frstor
jae
adc
mov
mov
push
add
loop
shrb
mov
les
xor
lods
add
or
pop
mov
mov
xchg
jns
dec
adc
les
xchg
jno
in
sti
mov
lock
test
outsb
adc
dec
ficoml
daa
jl
test
fidivl
loopne
mov
fldenv
stos
insb
pop
mov
mov
orb
jp
cld
outsl
mov
push
jns
sub
add
push
repnz
cmp
cli
push
fs
popa
jecxz
repnz
xor
rcll
shrb
test
arpl
sbb
jnp
mov
mov
in
dec
outsl
daa
imul
or
or
dec
pop
dec
mov
lldt
mov
xchg
pop
pop
push
in
loope
xor
xchg
jbe
adc
pop
clc
adc
push
int3
lods
jge
insl
and
xchg
pop
sahf
das
lock
add
xor
ficoml
sub
xor
lods
push
xchg
pop
sbb
xorl
das
ret
and
adc
lock
in
and
loopne
xchg
push
cwtl
icebp
mov
mov
add
jl
mov
mov
into
stc
and
pusha
addb
jge
imul
mov
or
int3
push
mov
call
sub
mov
pop
sbb
sahf
cli
lahf
push
ja
sbb
inc
push
and
test
subl
pop
std
cmp
push
xchg
sub
push
and
and
clc
inc
not
aas
sub
push
and
iret
fisubrl
insl
dec
cmpsl
jo
mov
imul
lret
ja
imul
dec
testl
mov
repz
jno
rcrb
jb
rcll
xchg
ret
add
sbb
pushf
sub
mov
movsl
aas
in
xchg
inc
out
mov
inc
or
cmp
rol
jl
mov
hlt
cmp
dec
cmp
mov
mov
imul
push
enter
mov
push
sahf
mov
jne
mov
push
add
add
repz
icebp
inc
loope
jp
dec
or
rorb
loop
add
cli
add
sbb
popa
sbb
sbbb
fstpt
inc
in
testl
xchg
pop
mov
outsb
inc
cmp
mov
mov
add
dec
rorl
adc
movsl
inc
mov
cmpsl
inc
and
jle
pop
push
test
ja
fdivrl
into
pop
sbb
mov
sub
stc
leave
xchg
ljmp
nop
outsl
scas
das
std
lahf
pop
mov
into
or
cmc
cmpsl
int
in
popa
and
jb
popf
lods
mov
out
jbe
adc
xchg
pop
pop
jg
adc
pop
sbb
jne
inc
aas
not
mov
dec
fstpl
negb
subb
push
incl
stc
int3
bound
sbbl
cmp
test
sub
dec
mov
dec
sbb
cmp
test
cmc
mov
or
imul
aam
jne
or
xchg
mov
inc
ljmp
fdivp
sbb
ret
inc
imul
ljmp
push
stos
out
jb
push
or
jne
and
test
or
mov
insl
xchg
lods
nop
mov
cmp
stos
xchg
pop
mov
mov
addr16
mov
rcll
scas
jno
mov
mov
and
xchg
dec
push
xchg
rol
bound
pushf
xchg
imul
or
adc
mov
pop
mov
faddp
mov
stc
rorb
lock
lcall
cmpsb
add
push
nop
or
cmc
push
inc
orb
sbb
dec
je
and
fstl
in
enter
dec
dec
idivb
ficomps
fmull
jnp
jnp
add
sbb
mov
jnp
pop
ficomps
pop
pop
dec
cld
cmp
xor
sbb
ja
add
daa
mov
js
nop
pop
mov
xchg
lret
pop
leave
int
inc
icebp
or
xlat
xchg
mov
jge
fwait
je
and
jae
push
mov
gs
or
push
sysexit
mov
sub
aas
bound
adc
push
lds
clts
dec
or
repz
sahf
inc
lock
adc
mov
jno
push
and
addb
movsb
adc
das
or
frstor
jae
or
stc
bound
int
jecxz
xchg
out
add
sbb
or
adc
pop
push
jns
faddl
mov
sarl
cmp
xchg
loope
adc
loop
fcom
daa
adc
dec
mov
mov
pop
or
sub
mov
imul
fmull
divl
test
adc
pop
frstor
mov
and
push
xchg
js
ret
xchg
in
pushf
add
mov
adc
insb
out
je
mov
frstor
mov
aad
popa
adc
mov
gs
pusha
mov
loope
cld
lods
mov
adc
pop
push
xor
dec
adc
mov
xchg
mov
fisubrs
mov
jb
mov
fs
sub
cwtl
enter
imul
push
ljmp
lods
xor
mov
ljmp
push
mov
mov
pop
sub
cld
pop
aaa
test
sub
and
insl
add
xchg
jb
clc
repz
fwait
xchg
cmc
xchg
ds
jle
lods
out
pop
dec
mov
jge
movsb
movhps
and
outsb
push
and
mov
jle
dec
cmp
xchg
add
and
xor
in
add
lds
fbstp
mov
xor
das
push
push
scas
stc
inc
mov
std
and
and
ret
sti
sbb
in
push
in
nop
rcrl
jmp
fcoml
xchg
pop
lea
jno
xor
push
leave
mov
out
pop
rcrl
mov
arpl
arpl
push
mov
aad
rcrl
hlt
les
inc
xchg
cmp
dec
cmpb
andl
fs
push
inc
cmp
aam
pushf
mov
mov
out
pop
sub
imul
jmp
rcl
fwait
hlt
xor
pop
push
rolb
cld
outsl
push
jae
insl
lock
and
ljmp
jecxz
imul
adc
mulb
push
aaa
cmp
mov
adc
mov
aas
inc
push
insb
mov
mov
les
lret
or
or
rolb
leave
arpl
cmp
mov
jmp
xchg
rorb
jle
mov
add
push
test
xchg
pop
les
jno
sbb
scas
imul
out
in
cmp
xchg
aam
xchg
sub
pop
fisubrl
cli
xchg
sub
arpl
cld
mov
inc
jnp
bound
push
lret
inc
jmp
iret
pop
pusha
ds
pop
je
xchg
push
jp
and
inc
mov
outsb
mov
sub
cmp
inc
mov
jae
push
clc
nop
mov
test
out
icebp
or
dec
pop
or
sbb
fldenv
jb
cld
test
adc
arpl
idivb
out
addr16
xor
mov
sbb
daa
dec
les
aad
call
shlb
xchg
mov
jo
lods
es
in
lock
ret
popf
cmpsl
imul
aas
sbb
cmc
pop
in
dec
mov
sti
leave
cli
mov
aaa
xor
stos
mov
shll
ja
mov
jbe
inc
xchg
pop
push
push
lret
sbb
xor
cli
sbb
push
shlb
ret
aaa
or
test
xchg
cmp
sub
loopne
xor
xor
movsb
mov
pop
in
test
int3
insl
mov
mov
les
shl
out
call
pop
dec
dec
daa
sub
mov
aad
mov
mov
mov
and
sti
adc
and
hlt
xchg
or
clc
ss
cltd
lcall
mov
and
out
mov
mov
fwait
popf
add
arpl
sbb
fnsave
push
mov
mov
push
dec
cmpsl
push
mov
xchg
xchg
add
pushf
jg
popf
xor
sub
stos
data16
mov
leave
inc
fcomps
andl
flds
out
arpl
cld
jo
out
mulb
add
jne
xlat
xchg
jns
sub
fwait
aam
imul
leave
arpl
inc
addb
in
repnz
seto
int
jge
mov
icebp
or
push
mov
push
jecxz
cmp
test
adc
inc
xchg
orl
loop
stc
imul
pop
adc
lcall
or
pop
sub
xchg
lret
adc
mov
clc
xor
push
cmp
or
popf
jmp
cmp
inc
test
pop
mov
loopne
je
push
aas
dec
outsl
lahf
iret
and
sub
and
insl
and
xor
mov
imul
push
aam
popf
jbe
in
dec
adc
and
dec
out
repnz
xchg
add
cmp
add
scas
js
sahf
push
lods
mov
aam
pop
sub
xchg
scas
xchg
push
and
and
push
dec
or
adc
add
adc
nop
popf
jg
inc
xor
dec
in
cld
daa
cmp
call
and
mov
xor
mov
sub
jle
movsl
cs
fnstcw
cmp
push
lds
xor
xchg
les
adc
sarl
pop
and
mov
jle
in
push
movsb
ss
ljmp
xor
push
mov
in
icebp
mov
imul
stc
cmp
dec
icebp
adc
mov
adc
enter
fadds
pop
test
cmp
jle
dec
cli
adc
push
movsl
iret
cld
mov
cld
jbe
movsb
mov
jne
xchg
aam
idivb
fidivrl
movsb
sar
xor
test
push
mov
mov
pop
sbb
mov
into
lods
push
pop
xchg
jne
outsl
sbbb
pop
icebp
push
insb
movsl
dec
inc
iret
push
ret
fwait
xchg
pop
push
fistpll
mov
mov
mov
push
stos
ss
scas
repnz
and
add
add
dec
out
mov
addr16
cltd
fwait
and
dec
xchg
xlat
mov
daa
sti
mov
outsb
xor
jl
loop
clc
and
cmp
insl
xchg
std
xchg
incl
insl
cmp
out
notl
cmp
fsubrs
cs
and
jle
add
mov
fs
test
mov
cmp
arpl
faddl
jg
add
xlat
push
out
test
mov
into
out
xor
or
push
pop
fimuls
leave
adc
loop
fsubp
push
adc
xor
loopne
mov
mov
aaa
gs
jg
cmp
out
mov
xchg
cmp
movsb
mov
cs
inc
outsb
sbb
rcll
xchg
into
pusha
xchg
inc
int
into
push
mov
rolb
dec
dec
das
xor
loope
dec
fsubrl
inc
mov
les
lds
fcoml
jbe
mov
adcb
insb
pop
mov
fisubs
xchg
shr
inc
mov
in
cmp
pop
inc
stos
mov
push
sub
mov
mov
sarb
pop
or
outsl
rcll
dec
inc
mov
mov
arpl
ret
xor
clc
and
adc
sarb
mov
push
jecxz
jb
imulb
loopne
and
stc
cmpsb
dec
push
popa
lahf
insl
out
rcll
arpl
fistpl
sub
cs
pop
jns
xor
xor
rcrl
lret
daa
jg
jecxz
mov
in
and
add
xchg
lods
mov
lret
cmpsl
ret
daa
or
mov
lret
mov
and
test
sub
ss
outsl
and
mov
jge
movsb
outsb
add
jbe
bnd
jae
int
jnp
into
jp
aad
scas
mov
mov
and
jne
fists
pop
bound
dec
rcrb
js
cmp
xchg
mov
rcrb
push
std
aam
lea
lret
jb
fadds
mov
mov
or
xor
mov
sbbb
lock
mull
and
jnp
mov
int
fbstp
stos
xchg
and
xor
mov
mov
mov
sarb
push
sbb
push
ja
sbb
clc
in
rcl
imul
notb
pushf
stos
xlat
jp
adc
sbb
mov
push
dec
shl
fwait
daa
arpl
xor
add
cli
leave
aam
cltd
lods
lods
movsb
outsb
jae
or
jo
outsb
jno
lock
jge
ficompl
repz
and
call
mov
mov
in
xor
test
outsl
stos
jo
sbbb
xchg
add
mov
call
enter
cmpsl
popa
pop
test
xchg
outsb
adc
sub
outsl
sbb
cmp
rcrb
pop
loop
xchg
sbb
aam
inc
lahf
lds
repnz
fwait
xor
dec
fidivl
pop
sub
movd
lahf
fs
repnz
sti
stos
add
xchg
popf
outsb
pop
iret
aad
imul
jne
mov
ret
scas
pop
xchg
ss
fwait
mov
jg,pt
mov
lods
sbb
cld
cmp
push
jecxz
outsb
xchg
iret
jl
shrl
cmp
fsubrs
pop
mov
jg
sbb
mov
popf
mov
and
sub
dec
mov
clc
lods
xchg
sbb
test
pop
inc
pop
mov
pop
xor
mov
xor
sti
xor
cld
je
hlt
cmp
cwtl
or
jecxz
loope
or
aam
lds
dec
jmp
lcall
sti
sub
sbb
adc
adc
daa
add
cmp
lret
and
vmread
jle
les
cld
popa
ret
out
mov
ror
in
in
sbb
in
sub
pop
mov
out
cld
in
pop
add
lods
scas
xor
inc
sbb
filds
dec
fldt
adc
stc
mov
iret
pop
loop
adc
popa
outsl
xchg
std
sub
fbstp
adc
pop
mov
mov
lds
add
aad
xchg
push
jb
jmp
repz
dec
mov
mov
test
adc
mov
pop
cld
test
inc
popf
mov
insw
mov
mov
dec
dec
test
fsubrs
dec
dec
mov
shl
bound
cs
inc
int
mov
in
hlt
mov
dec
jne
out
fsubs
adc
xor
jbe
nop
mov
bound
add
call
out
jecxz
fistps
push
mov
xor
rcr
dec
pop
inc
pushf
jns
adc
cmp
mov
sbb
dec
and
push
std
jb
xlat
xchg
fistl
imul
stc
lds
pop
shlb
insl
dec
sub
lret
push
psrlw
push
orl
out
stos
fucomi
cwtl
pusha
mov
and
cwtl
jae
or
popa
adc
jnp
and
cwtl
loopne
push
sbb
in
jno
div
in
stos
adc
int3
outsl
lds
cmp
clc
pop
lods
and
fsubl
jbe
mov
movsb
and
mov
hlt
mov
mov
cmp
pushf
subl
test
outsl
movsl
outsl
ds
out
ds
xchg
in
cmp
inc
and
adc
pop
scas
lret
sbb
push
out
pusha
or
add
fisubrl
mov
scas
call
pop
call
pop
cmp
and
adc
imul
ljmp
rorb
aas
dec
out
shrb
js
pop
add
dec
and
shrb
je
sahf
add
mov
mov
fwait
mov
cmp
sbb
and
jle
and
or
popa
dec
and
sbb
jo
jle
aas
xor
push
sub
xchg
pusha
aas
mov
dec
pop
outsb
ret
fwait
add
adc
bound
sub
fstpt
dec
sub
push
mov
push
roll
pushf
imul
in
mov
pop
push
rcrl
pop
lods
or
or
pop
mov
pop
addr16
jne
sbb
jmp
sub
xchg
push
inc
push
inc
mov
sbb
ljmp
mov
aaa
das
gs
sub
jno
std
or
sub
aam
nop
test
jp
imul
ss
pop
in
xor
movsl
out
push
movsl
pop
cmp
fs
xor
loope
js
inc
out
popa
insl
shll
mulb
aaa
pop
mov
test
pop
xchg
xor
jnp
jnp
out
pop
and
fldl
enter
lock
outsb
add
rolb
icebp
daa
fisttpll
or
sbb
push
xchg
mov
movl
cld
test
stos
sub
xor
add
mov
and
jo
jo
push
out
insl
pop
xchg
iret
fs
push
and
movsb
dec
mov
jo
aas
addl
mov
xchg
jne
int
fs
enter
mov
pop
dec
notl
in
daa
xchg
lds
aas
push
pop
and
aaa
add
jge
out
mov
loop
sahf
jo
cld
scas
mov
mov
and
mov
inc
lcall
sbb
xchg
ret
aam
xor
call
or
and
sar
adc
test
mov
stos
pop
shl
mov
in
mov
in
or
xchg
cld
or
mov
pop
cmc
pop
lret
sbb
mov
cmp
insl
gs
je
dec
inc
je
adc
mov
cld
mov
outsb
pop
xor
shll
push
inc
and
pop
jmp
jae
dec
sub
scas
popa
jns
cld
rcll
repz
enter
aad
sbbb
cld
or
sub
ss
cmpb
cs
lds
ret
cmp
js
adc
cs
sbb
cld
lret
adc
sbb
jp
push
jo
jg
cwtl
ljmp
dec
int3
popf
lcall
es
sub
je
xchg
dec
jae
inc
jne
cmp
addr16
mov
daa
rcrl
pop
mov
fstpl
scas
inc
mov
cli
dec
outsb
and
adc
hlt
push
pop
or
xchg
and
mov
xor
dec
mov
push
push
leave
gs
lret
pop
movb
mov
sar
xchg
or
pop
cmp
dec
and
mov
pop
cmp
cwtl
icebp
movsb
mov
pop
cmp
inc
insl
inc
lcall
test
popa
ficoml
cld
in
cmp
and
xchg
sbb
adc
mov
fwait
divl
jl
lcall
je
sarb
fiaddl
xchg
push
xor
insb
mov
cmp
fildl
imulb
adc
xlat
and
adc
pop
jle
mov
cwtl
dec
xor
xor
icebp
in
ret
inc
jbe
mov
sub
xor
mov
xchg
scas
shll
and
jge
aas
andb
sbb
push
jecxz
cmp
or
imul
dec
ljmp
subb
ffree
lods
movsb
dec
loop
inc
outsb
iret
outsb
fdecstp
sti
adc
ret
sub
xchg
fldenv
xchg
es
inc
out
dec
mov
addr16
cmp
ljmp
pop
or
outsb
inc
loopne
mov
fnsetpm(287
jl
dec
cmp
push
out
sub
popf
sub
pushl
cmp
mov
lret
ss
insl
je
sbb
repnz
mov
cmp
aas
add
aas
lahf
mov
call
mov
adc
movsb
stos
xchg
or
xor
jb
ds
mov
cmp
and
push
test
aam
dec
add
mov
push
xchg
and
xor
pop
or
outsl
sbb
sbb
jbe
dec
mov
dec
adc
sahf
stc
push
es
sbb
and
pop
lahf
inc
scas
adc
mov
sub
sbb
pop
sarb
mov
fldcw
push
sbb
stos
pop
cmpl
pop
test
lds
jle
push
ja
xchg
gs
mov
jp
mov
dec
enter
mov
cli
inc
or
add
sahf
and
rcrl
cld
stos
add
jo
inc
inc
insb
test
jge
add
xor
cli
jle
mov
mov
dec
es
ret
xorl
cmp
push
dec
iret
and
dec
repz
pop
inc
outsb
clc
add
inc
repnz
jno
mov
push
enter
inc
lea
xchg
test
sahf
addr16
jo
mov
loopne
aaa
xchg
push
mov
call
or
mov
xor
shll
jp
bound
xor
dec
adc
xlat
mov
push
sbb
ret
jge
mov
pushf
xchg
and
das
fcompl
scas
cmp
inc
or
in
aaa
adc
hlt
xchg
popf
cmp
in
xor
mov
add
clc
xor
mov
outsb
incl
inc
pusha
push
insb
xchg
fstps
aas
sti
adc
ret
gs
xor
imul
out
lods
movsl
lcall
cmp
mov
ja
ds
inc
lods
sbb
mov
push
divl
ljmp
xchg
inc
enter
cmc
lret
aaa
and
mov
inc
ljmp
arpl
mov
push
call
enter
lret
mov
data16
test
fs
cmpl
lahf
add
sbb
inc
jg
push
add
sbb
xchg
xor
jnp
jmp
mov
mov
adc
out
cmp
aam
push
aad
clc
repz
cmpb
popa
xchg
push
push
fwait
and
in
jecxz
jmp
ja
fs
pop
or
sarb
inc
ds
cmp
cmc
dec
imul
xor
dec
data16
movsl
xor
pushf
mov
lea
inc
mov
pop
xchg
lret
jbe
cmp
dec
ret
adc
ss
test
es
push
push
stos
mov
scas
test
mov
lret
adc
xchg
movsl
mov
jle
les
ja
into
add
jge
dec
mov
outsb
inc
xor
xor
sbbl
jbe
push
cmpsb
lcall
jne
aas
mov
xor
or
pop
mov
pushf
frndint
cmpsl
repnz
lcall
shll
clc
wbinvd
cmp
jb
scas
js
xor
sahf
pop
push
scas
cmp
jns,pt
cltd
xor
cmp
cltd
stc
imul
adc
jmp
pusha
or
js
push
fsub
outsl
loop
and
cltd
js
xor
xchg
cmpsl
sbb
cmpsb
out
xchg
adc
xchg
dec
shr
sub
ret
std
negb
fwait
sbbl
mov
addr16
popf
jmp
orb
sahf
jecxz,pt
push
scas
adc
std
add
arpl
insb
cmp
cli
clc
sbb
fstpl
sbb
pop
jmp
in
dec
nop
pop
aam
inc
jp
push
aas
mov
dec
std
cmc
pop
xor
push
sub
push
shll
sub
mov
imul
clc
mov
enter
push
clc
and
lcall
jmp
inc
movsb
jnp
lods
loope
loope
dec
inc
xor
imull
in
or
pop
leave
sbb
test
ljmp
pop
daa
add
mov
pop
fidivrs
adc
add
jmp
lcall
imul
dec
push
mov
call
pushl
nop
imul
pusha
mov
cmpsb
pop
cli
jo
jne
shrl
fsubs
imul
fcompl
lds
push
or
sahf
add
cmp
xor
ret
add
and
sbb
sbb
lret
data16
cld
popa
enter
sahf
dec
lods
push
das
sbb
mov
lods
enter
fdivs
popa
je
jbe
pop
push
dec
divl
mov
stc
xchg
or
sbbl
fs
sbb
in
add
js
sbb
ljmp
lahf
stos
ret
psrld
ds
out
cmp
ffreep
xchg
inc
push
les
mov
cli
adc
sbb
mov
daa
lret
mov
icebp
and
shrb
xchg
in
xchg
sti
pop
or
xchg
inc
pop
adc
fcomps
jae
inc
icebp
add
xor
jae
dec
sbb
pop
mov
cmpsb
test
dec
dec
aam
ds
fldl
mov
mov
shrl
loopne
mov
addr16
or
xchg
cmpsb
ds
out
cld
test
sbb
or
das
sar
inc
inc
aad
out
stos
insb
cmp
cmp
pop
notl
dec
sbb
jno
fdiv
mov
or
movsb
sbb
pop
fwait
dec
jo
sarl
sbb
jecxz
push
and
pop
fsubl
mov
mov
jne
mov
jnp
pusha
fidivrs
out
arpl
divb
mov
sbb
fldenv
mov
mov
dec
sub
lods
mov
adc
aaa
mov
inc
out
dec
data16
lret
call
mov
cmpsb
or
and
movd
popf
cmpb
int
dec
in
pop
cmp
mov
mov
jle
add
pushf
lahf
cmp
addl
push
adc
lahf
inc
imul
dec
push
stc
repz
jmp
sub
fs
shrl
idivb
cld
xor
jmp
add
decb
js
imul
ret
cld
loopne
mov
cmp
loopne
scas
dec
cmp
jbe
pop
push
inc
xchg
cmp
mov
mov
out
pusha
cli
or
movsb
hlt
and
dec
jge
into
push
es
mov
pop
les
arpl
push
adc
popf
push
add
lods
pop
out
cwtl
adc
push
or
pusha
jns
sub
push
adc
xchg
data16
cmp
into
xor
add
and
and
jns
insb
scas
sti
pop
push
add
and
shrb
jp
popa
xor
inc
mov
pop
xchg
rorb
int3
pop
push
test
rorl
push
lahf
pop
pop
sub
xorl
imul
mov
sbb
push
into
mulb
ljmp
sarb
in
dec
in
cltd
sub
movdq2q
and
sbb
inc
fwait
lods
cwtl
sub
idivl
mov
popa
ficompl
mov
stos
add
xorl
cmpl
mov
sub
ja
mov
sbb
mov
mov
in
inc
imul
mov
das
pop
pop
mov
outsb
ss
inc
push
mov
sub
inc
in
adc
lahf
aaa
xchg
push
fldcw
mov
imul
sub
pop
pop
aam
mov
es
int3
inc
loop
cwtl
push
int3
dec
aam
jns
jb
or
push
push
mov
sbb
inc
into
pop
sub
push
decl
add
int3
sub
mov
das
mov
adc
loopne
shlb
mov
sub
ljmp
or
xchg
mov
mov
scas
xchg
test
cs
imul
pop
dec
in
shlb
fmull
sub
das
mov
lock
mov
push
pop
xor
push
mov
inc
add
mov
push
ret
inc
iret
cmc
xor
push
aaa
inc
mov
loope
mov
and
dec
mov
lret
and
push
pop
and
mov
jmp
or
mov
loope
fsubrp
fxrstor
pop
scas
pop
out
pop
push
js
and
add
xor
push
frstor
leave
or
and
xchg
shlb
and
les
adc
test
das
dec
test
cwtl
mov
mov
cwtl
sete
xor
add
xor
xor
or
stos
jno
or
jbe
cmp
bound
imul
sbb
xchg
push
mov
int3
mov
popa
rcl
incb
add
in
mov
and
push
push
rolb
xor
lcall
mov
pop
mov
add
repz
pushf
push
xchg
sbb
push
leave
mov
insb
ret
xor
jns,pn
inc
cmc
loop
push
and
mov
lret
jae
mov
push
mov
jbe
mov
out
in
and
sbb
lods
xchg
adc
lock
mov
or
rorb
out
dec
jnp
cmpsl
mov
insb
iret
jne
or
cwtl
dec
xchg
jbe
jae
fisubrs
dec
movsb
xlat
stos
out
loop
int3
cmp
cmp
xorl
repz
adc
adc
jmp
xor
and
xor
sbb
popf
mov
lds
ret
daa
inc
aaa
pop
test
sbbb
adc
and
ss
std
inc
dec
lods
or
shrl
js
jns
push
sub
xchg
xlat
out
push
add
loop
les
stc
pop
pushf
cli
imul
addr16
bound
pop
arpl
sbb
adc
mov
aad
mov
jg
ljmp
jae
mov
xchg
fs
or
add
mov
push
hlt
les
fwait
and
out
sbb
aaa
sub
push
repz
inc
sub
or
loope
xchg
cmp
jl
dec
lea
sub
repz
mov
lds
add
cmp
mov
jge
inc
xchg
aad
xlat
lcall
mov
jno
subl
test
sbb
dec
out
push
jbe
sub
mov
pop
outsb
jno
mov
std
mov
hlt
loopne
or
test
insb
mov
cmp
test
mov
fs
shll
sar
pop
rclb
jb
mov
or
arpl
dec
dec
mov
imul
out
push
bound
outsl
cmp
push
pusha
mov
mov
sahf
movsb
shlb
xor
jnp
repnz
iret
push
dec
nop
out
bound
icebp
mov
cmpsb
xorb
punpckhdq
shll
cmp
mov
out
xchg
dec
xor
adc
lret
and
std
out
out
mov
inc
xchg
mov
daa
imul
xor
and
mov
sbb
jg
insl
sub
and
sbb
es
in
mov
lret
pop
mov
inc
mov
cmp
or
add
call
pop
mov
test
in
and
add
nop
push
add
sub
pop
mov
scas
inc
mov
xor
dec
mov
mov
jno
lea
mov
lods
outsb
and
jmp
cmp
pop
lods
pusha
aas
inc
dec
test
hlt
pushf
data16
mov
pop
jl
imul
and
push
push
sub
mov
push
outsl
test
hlt
sbb
int3
xor
repz
mov
aad
adcl
popf
insl
pop
shrl
stc
cmp
and
and
pop
sbb
inc
jns
xchg
jbe
mov
nop
mov
xchg
idivl
mov
pop
mov
mov
sbb
and
pop
test
arpl
push
xor
loopne
in
jns
sub
and
xor
or
jge,pn
sub
out
imul
lret
aaa
mov
xor
mov
fbld
pop
adc
xorl
dec
pop
and
ret
loope
or
loope
pop
frstor
xor
mov
inc
popa
cmp
cmp
rolb
push
loope
aad
repz
jge
mov
rcrl
adc
jb
fdiv
sub
push
cmpl
sub
test
xor
or
add
int3
xchg
sbb
cmp
insb
rclb
mov
push
jmp
icebp
test
ret
std
xlat
ret
inc
or
inc
lcall
nop
push
inc
les
push
or
cltd
lea
addr16
sub
ret
jge
repnz
faddl
cli
fstl
addl
xchg
sbb
test
cmpsl
enter
xor
ret
lds
fildll
xor
mov
xor
stc
fistpll
mov
push
stos
cmp
mov
mov
pop
jecxz
mov
mov
adc
push
sub
pop
cmp
inc
enter
in
cmp
adc
cs
jo
mov
sub
xchg
mov
aas
pop
cmp
fidivrl
hlt
and
sub
fdivrs
jmp
inc
xchg
sarl
xor
jle
inc
adc
sub
mov
add
insl
adc
lods
adc
lahf
sbb
inc
mov
cmp
in
jo
popf
dec
call
add
dec
pop
push
dec
scas
xor
mov
hlt
mov
pop
enter
push
stos
add
stc
inc
add
dec
jns
push
pop
incb
cmp
pop
mov
xchg
xor
mov
mov
int3
add
out
call
mov
cmp
or
pop
cli
sbb
in
sbb
push
push
mov
mov
lods
xor
subb
cmc
loop
push
je
imul
outsl
fs
out
adc
push
rclb
push
fidivs
push
movsl
enter
mov
clc
push
sbbb
cli
jbe
mov
bound
andb
cmp
paddusb
sahf
repnz
mov
jge
inc
dec
sbb
sbb
negb
movsb
mov
mov
shr
das
or
test
stos
aad
jo
iret
sbb
jns
xchg
addr16
enter
fwait
ror
adc
roll
pop
sbb
das
mulb
inc
adc
push
scas
fs
leave
mov
and
mov
test
jl
sti
mov
icebp
aam
call
cmp
jl
fisubl
mov
outsb
push
jp
xor
repnz
pop
jg
fbld
jg
bound
movsl
push
lods
mov
std
aas
or
xchg
pop
pop
mov
mov
pop
mov
or
and
sti
insl
cltd
fsubrl
cmpsb
cmc
fdiv
movsl
mov
sub
jns
mov
std
shrb
sbb
adc
sbb
dec
xchg
loopnew
sbb
push
or
fwait
xchg
cld
cwtl
push
push
cmp
stos
aam
mov
pop
in
das
cmp
xor
jae
out
aas
ficoml
sahf
fdivrl
jl
fstps
xor
jno
mov
repz
adc
in
push
pop
push
adc
scas
jns
repz
mov
fdiv
push
mov
sbb
fbld
out
mov
dec
dec
pusha
xor
iret
rcrb
pop
daa
pop
cmp
xlat
jbe
and
jge
mov
mov
inc
bound
mov
lods
sub
cmp
jb
js
shl
out
sarl
cmp
xchg
out
call
sti
cmpsl
pop
lock
imul
test
jp
sbb
mov
jo
push
ljmp
push
push
ret
pop
sarl
add
bound
or
fldcw
xlat
filds
cltd
popf
fistpl
push
lods
and
in
jbe
add
xchg
enter
xor
cwtl
jp
xorl
test
and
inc
cmpsb
clc
inc
push
or
xchg
frstor
sub
leave
shr
out
mov
or
inc
or
scas
repz
mov
cmc
leave
cmp
add
je
dec
xchg
and
les
pushf
pop
cli
sub
mov
and
jne
add
and
loope
push
mov
push
rcll
pop
hlt
invd
rclb
out
and
xchg
cmp
jns
test
or
pusha
insl
lock
xchg
cwtl
aam
pop
add
nop
out
fisubs
xchg
into
lahf
or
sub
mov
mov
ja
add
outsb
lahf
add
ret
fwait
dec
mov
clc
jnp
fptan
dec
fistpl
cmp
rcr
adc
mov
dec
inc
adc
lds
adc
and
test
aas
ss
test
dec
fsub
sbb
or
idivl
dec
shrb
movsl
sub
and
push
int3
inc
std
loop
movsb
lret
xor
outsl
sub
mov
adcl
addl
cmp
and
ffree
fstpt
cmp
xchg
clc
or
insb
lret
cli
or
or
xchg
push
xchg
ja
cmpsl
loope
jmp
inc
fwait
cmp
sub
jecxz
dec
mov
xor
into
jnp
and
or
popa
pop
mov
arpl
lahf
aas
and
dec
into
testl
aad
xchg
xor
loope
mov
sub
pop
adc
fcom
out
cmp
push
mov
pushf
pop
jp
pop
fldl
pop
xlat
xor
jnp
icebp
sahf
imul
sbb
jmp
dec
mov
cmp
cmp
les
repz
push
and
cwtl
sub
clc
scas
and
inc
fsubr
es
mov
repz
repz
out
stos
push
scas
rorl
jmp
inc
push
push
jp
and
subb
cli
pop
inc
adc
pop
loope
push
add
cmp
adc
test
push
mov
sbb
jne
xlat
add
jle
lds
sbb
sbb
loopne
lahf
xor
jge
dec
inc
cmp
xchg
in
ret
xchg
icebp
xlat
aaa
cld
andl
das
ljmp
imul
shrb
inc
lock
jb
popf
fstpl
scas
inc
dec
fldenv
xor
push
mov
daa
pop
push
out
or
add
lods
shl
in
fdiv
cs
fldl
lock
dec
add
dec
cmpsb
fstps
ret
mov
add
fnstcw
leave
mov
sub
jae
mov
pusha
outsl
lcall
push
cmp
pop
andl
pop
push
mov
lahf
fdivs
mov
test
repnz
and
mov
fadd
popa
subb
xlat
pop
or
dec
sti
stos
mov
dec
aas
sub
les
ja
aas
jp
rcrb
into
loop
jl
stc
pop
out
outsl
lret
iret
xchg
pop
mov
sbb
dec
in
shll
add
cmpsb
jnp
fs
fmuls
imul
jns
cmp
add
sub
mov
clc
jno
in
mov
ret
mov
roll
or
xchg
jg
xchg
and
ss
pop
adc
repnz
push
add
movsb
adc
ds
push
sub
xchg
xchg
cmpsb
add
call
fistpl
mov
jno
dec
mov
or
cli
cmp
ja
jo
fidivrl
into
sub
dec
outsb
stos
sti
fisubrl
stc
xchg
jmp
sbb
mov
dec
lods
in
sub
push
out
xchg
and
cwtl
push
xor
push
shl
mov
iret
js
jge
out
sbb
ja
fldl
out
and
push
flds
sub
sbb
mov
in
add
adc
or
pop
xchg
dec
cmp
sub
add
mov
jne
xchg
xorl
pop
cmp
in
stos
xlat
mov
gs
adc
sub
subb
jl
mov
rorl
ja
mov
pop
dec
ror
sbb
xlat
push
call
in
cmp
dec
imul
lods
stc
dec
icebp
push
repnz
mov
rorl
subb
or
jg
insb
mov
sub
xchg
test
push
lds
add
lods
jge
rcll
dec
movl
adc
add
stc
scas
and
or
clc
sub
outsb
jmp
inc
sbbl
jmp
xor
mov
shlb
mov
cltd
pop
std
icebp
mov
inc
fcomps
js
cmc
mov
aas
shlb
xor
lcall
shrl
cmp
mov
stc
pop
dec
xchg
insl
jge
mov
movsw
in
arpl
cmpsl
adc
or
cwtl
cli
xor
cmpb
js
aaa
pop
pop
cmp
push
inc
jecxz
inc
mov
cmp
ds
stos
or
add
nop
and
cwtl
sub
mov
push
lcall
es
mov
hlt
icebp
mov
subb
sbb
js
test
inc
push
test
and
mov
enter
movsl
mov
mov
ljmp
add
in
mov
pusha
outsb
leave
in
popl
dec
cmpsb
aas
sbb
jne
popa
and
lahf
icebp
mov
aas
fsub
enter
push
repnz
and
wrmsr
sti
push
sbb
shrb
xchg
or
pop
jne
jae
int3
movsl
mov
loope
int
rorl
push
sub
mov
mov
sub
or
xchg
xor
mov
xchg
inc
sub
pop
movb
imul
insl
lret
jecxz
lods
enter
adc
ja
imul
cvttps2pi
outsl
xchg
jno
jno
or
add
mov
jae
dec
test
and
dec
jp
mov
cmp
dec
call
mov
test
dec
cmp
xor
sbb
jno
xchg
and
add
cld
lret
mov
cmpsl
mov
adcl
daa
mov
jl
adc
std
sbb
loopne
cld
cmp
cmc
icebp
and
fs
jge
xchg
mov
fwait
loope
in
jo
ret
add
inc
sub
lods
arpl
cs
or
pop
dec
fdivl
push
dec
pop
inc
mov
sbb
addr16
fstpl
xorb
test
push
sbb
add
adc
imul
pandn
nop
mov
ss
outsb
mov
jnp
ret
je
ficompl
minps
in
cld
cltd
mov
xchg
pop
fdivs
mov
cmp
enter
movsl
outsb
iret
add
lods
into
ret
je
mov
add
loopne
cmpl
xor
xchg
in
int
sub
bound
loopne
fnstcw
cmp
lahf
jnp
mov
cmp
dec
sub
popa
xchg
rorl
xchg
adc
repnz
xchg
push
adc
mov
pop
insl
push
sbb
pushf
sahf
mov
sub
pop
int
pop
fwait
adc
lock
inc
lahf
mov
adc
js
cld
stc
mov
es
add
inc
aaa
fisttpl
sbb
ror
rorl
pushf
leave
in
inc
je
nop
cmp
xor
add
mov
ret
pusha
shll
xchg
and
or
inc
pusha
xchg
add
popa
mov
fwait
dec
xchg
mov
push
stos
fistpl
rol
fwait
ds
push
mov
inc
pop
into
xchg
stos
add
lret
inc
shll
aaa
and
insl
mov
cld
mov
sub
jmp
push
mov
xchg
pushf
inc
fimuls
sbb
incl
and
jb
ficompl
sbb
lods
sbb
jle
add
sti
insl
in
or
push
nop
adc
cmp
loopne
xlat
sbb
lods
lret
js
test
push
adc
mov
cmpb
adc
cmpsl
sub
xchg
jmp
and
hlt
scas
aad
mov
jb
adc
and
and
dec
je
or
jno
jp
add
inc
arpl
hlt
mov
jmp
inc
dec
jg
dec
inc
adc
xor
and
leave
pop
jns
loope
pushf
inc
jne
inc
mov
les
adc
cs
mov
push
mov
sub
mov
rclb
aam
push
mov
inc
dec
test
dec
movsb
into
ss
mov
ret
push
jmp
test
jp
pop
ljmp
pop
xchg
cld
fdivp
mulb
fcmovb
jmp
fs
adc
mov
cmpb
xor
arpl
dec
idivb
popf
fmuls
mov
xchg
imul
add
mov
push
es
jg
mov
addr16
call
or
and
sbbl
lods
gs
push
xorl
xchg
and
xchg
push
lock
adc
imul
mov
test
outsb
jns
pop
and
push
aam
inc
fistl
js
stos
or
fs
addr16
push
mov
outsb
mov
xorl
arpl
testb
jl
cmpsl
aad
mov
or
sbb
mov
les
lret
pushf
inc
mov
ret
lcall
pop
dec
xchg
xchg
mov
sub
test
movlps
les
jae
inc
inc
test
test
xchg
lret
push
scas
push
adc
jb
add
adc
mov
push
cli
pushf
dec
jns
shll
mov
mov
jns
sub
pop
mov
movsl
xchg
and
cmp
into
mov
add
and
pop
fadds
mov
mov
nop
mov
sub
push
xchg
pop
or
sti
mov
xchg
insb
cmp
pop
xchg
inc
jne
jg
loopne
sub
adc
adc
mov
loope
in
dec
jecxz
mov
rcrl
mov
pop
sub
daa
inc
repz
test
leave
test
xchg
mov
jge
sbb
iret
data16
jb
xorl
mov
inc
es
aaa
inc
dec
fimuls
cld
dec
call
insl
shrl
clc
out
mov
push
sub
test
mov
and
inc
iret
jl
test
test
sbb
xchg
mov
mov
or
loopne
mov
data16
cwtl
push
xchg
out
outsb
mov
pop
ret
inc
daa
pop
inc
xor
and
shlb
inc
push
sarb
stos
mov
in
lahf
daa
repnz
mov
mov
lcall
mov
popa
push
cli
xchg
push
xchg
pushf
ja
or
mov
addr16
mov
sbb
ficoms
pop
imul
jg
xchg
rclb
add
pop
movsb
fbstp
dec
add
ja
jno
mov
adc
push
xor
jae
sarl
bound
sub
fdivrl
push
sub
sub
add
add
push
add
lods
mov
jecxz
push
xor
lods
bound
test
stos
neg
or
jb
xchg
dec
ret
and
cwtl
jl
xchg
les
sub
push
loopne
out
or
mov
add
cmpsb
or
push
and
mov
jno
mov
daa
pop
rorl
sub
lcall
cmp
into
pop
add
jns
aam
adc
hlt
xor
aad
add
stc
jmp
pop
mov
xchg
xchg
push
jnp
dec
insb
pop
mov
call
je
mov
hlt
aad
out
jnp
pop
andb
pop
or
in
xchg
mov
je
or
mov
lret
imul
xchg
in
leave
xchg
mov
imul
into
xchg
jbe
cmp
fcomps
in
mov
pop
push
xor
dec
inc
lods
mov
push
xchg
jp
or
repnz
inc
mul
dec
cmp
subb
sbb
pop
scas
fstl
sbb
jecxz
aad
xchg
push
push
and
sahf
lcall
sbb
stos
orl
jp
mov
cmp
push
xchg
mov
pop
xchg
xchg
cmp
sub
inc
jns
subb
or
mov
add
pop
mov
and
pop
gs
lahf
inc
inc
sbb
jne
or
lret
sahf
jecxz
dec
cs
jae
mov
int
xchg
inc
jg
outsb
pop
dec
movsl
outsl
movsb
loopne
xchg
testl
mov
popf
inc
pop
cwtl
xchg
lea
out
repnz
dec
cmp
fbld
imul
js
sbb
inc
mov
jb
jbe
rcrb
aad
fbstp
sub
aas
jbe
pusha
pop
mov
sti
popa
inc
mov
mov
jno
pop
leave
adc
test
mov
xor
sbb
xchg
mov
int3
push
jge
sub
repz
pushf
out
divl
push
mov
dec
dec
cld
dec
mov
push
add
mov
repnz
inc
and
jge
in
xchg
or
rcr
xor
mov
push
mov
cmpsl
pushf
pushf
outsl
call
dec
pop
pop
cmc
cmp
in
add
jnp
test
or
and
jns
mov
insl
jnp
popa
push
dec
fs
es
mov
cmp
ja
scas
add
data16
imul
in
xor
cmp
test
mov
adc
mov
les
push
xchg
clc
push
sbb
lods
adcl
xchg
leave
adc
testb
lret
xchg
adc
enter
mov
imul
lods
ss
sub
add
push
adc
xchg
xchg
cmp
or
lea
mov
jnp
test
movsb
pusha
mov
bound
je
lea
aas
mov
xor
mov
je
xchg
push
sbb
loopne
lock
divb
xor
mov
add
inc
syscall
ja
xor
cmp
cwtl
iret
hlt
out
les
loope
add
daa
mov
and
pop
push
jp
test
outsl
cld
mov
iret
movsb
outsl
dec
js
push
or
mov
add
hlt
push
sbb
adc
xor
mov
mov
xchg
mov
adc
add
out
cmp
repz
mov
cs
imul
movsl
add
ret
sub
out
push
loopne
xor
imul
fstl
xor
imul
dec
fcmovne
cmpsb
sub
adc
call
mov
add
lret
pop
icebp
sbb
fiadds
int
sub
sub
xchg
out
fxch
call
dec
push
adc
out
xchg
xor
jns
mov
shrb
into
add
ljmp
pop
xchg
cli
dec
inc
fwait
mov
out
cli
dec
adc
pop
movsl
lret
mov
pop
or
imul
repz
mov
sub
mov
xchg
or
lods
xchg
pop
out
jb
xor
lds
fists
xlat
movsl
pushf
out
inc
sub
cltd
xchg
in
add
dec
adc
cwtl
jp
dec
pop
aam
fidivs
xor
fwait
jge
lods
pushf
sahf
cmc
inc
or
pop
mov
cmpsb
les
gs
sbb
pop
adc
adc
inc
jbe
sbb
sahf
add
shrl
sahf
stc
xchg
inc
lds
fadds
cmpl
ljmp
or
adc
inc
fwait
cmp
sub
mov
mov
pop
and
movsl
leave
push
in
and
js
cmp
and
xor
push
mov
pop
flds
inc
mov
aad
cmp
data16
sub
cmpsl
xchg
mov
icebp
sbb
jne
notb
pusha
sub
out
mov
mov
aam
into
jns
mov
mov
mov
es
negl
or
jecxz
pop
ret
mov
insl
inc
addb
and
bound
pop
cld
cmpsb
daa
jne
in
in
ficoml
push
bound
icebp
mov
repnz
jmp
lods
hlt
push
gs
and
aam
shlb
mov
in
aaa
loop
adc
dec
cwtl
in
leave
fadds
mov
lods
fiadds
bound
fnstenv
fisubrl
mov
xchg
dec
sti
pop
add
mov
xchg
shll
ds
xchg
dec
shrb
jbe
js
lock
sbb
cld
mov
sub
sbb
dec
jmp
push
mov
sub
loope
push
jmp
mov
push
pop
xchg
int
inc
mov
loope
and
scas
fucomi
in
pusha
fmuls
mov
loope
shl
cmp
popa
cmpl
xchg
ja
leave
repnz
scas
xchg
jae
pop
mov
mov
mov
inc
shlb
mov
mov
addb
repz
rolb
xor
and
xor
insl
mov
inc
sbb
out
decl
dec
aas
arpl
jp
into
sbb
mov
std
pcmpgtd
ret
and
jb
jne
cmp
add
mov
cmpsb
mulb
int
int
add
into
jb
jbe
xor
push
iret
push
and
xchg
in
push
xchg
sbb
xor
dec
xor
cmp
mov
fwait
insb
adc
add
addr16
cmc
lret
hlt
ret
add
cltd
pop
sahf
dec
xchg
pop
mov
push
cmp
pop
inc
pop
cmp
enter
xchg
pop
lret
mov
push
cmpsl
mov
cli
mov
mov
pop
and
fdivp
push
mov
shll
sbb
call
inc
mov
jbe
xor
jge
cli
add
mov
push
ret
cmp
dec
jb
scas
popl
lds
sub
dec
jno
mov
lock
mov
fistpll
addl
lods
jnp
xorl
and
fs
les
add
sbb
aam
adc
xchg
sahf
lret
jmp
pusha
ret
dec
repnz
pushf
push
adc
xchg
mov
das
cmpsl
adc
add
jbe
inc
data16
jge
add
bound
mov
aad
push
sbb
aaa
and
sub
call
js
in
cwtl
jl
lock
cwtl
add
cmp
sbb
xchg
cmc
std
ret
dec
fadds
hlt
pop
cmc
bound
stos
rorl
sbb
mov
jbe
or
in
xchg
and
hlt
movsl
das
int
rcrb
aaa
sbb
or
pop
mov
popa
push
in
lods
lcall
cmp
out
xlat
int3
mov
mov
and
sub
adc
dec
mov
fildl
cmp
inc
or
test
push
mov
lret
push
in
jno
inc
inc
pop
das
fs
ret
jl
int
daa
push
stos
dec
dec
pop
cmpsl
push
das
ja
bound
mov
in
es
add
shrl
and
andb
cmpsl
cld
js
push
lods
push
pushf
inc
pop
fisubl
sbb
push
cwtl
stos
icebp
cmpsb
pushf
mov
ror
cmp
movb
pop
dec
int3
imul
pusha
mov
or
sub
cs
aam
cmc
ljmp
incb
xor
and
pop
ss
xor
es
insb
jnp
fistpl
mov
inc
lahf
xchg
test
sbb
push
add
sbb
xchg
adc
sbb
nop
sarl
xlat
lret
popf
fdivrs
jb
mov
adc
testl
sub
lret
xchg
test
inc
test
or
mov
mov
shl
mov
pushf
test
popw
pushf
push
jb
jns
fs
xchg
and
mov
xor
sar
pusha
fldl
and
mov
out
fstpt
or
lahf
jecxz
push
data16
clc
ret
xchg
xlat
lret
or
jae
call
adc
adc
lahf
nop
loopne
movl
ficomps
sar
ret
cmpsl
mov
dec
pop
inc
push
mov
in
ret
pop
lret
sbb
outsl
or
or
call
mov
pop
push
inc
je
pop
pop
andb
test
loope
pop
jle
data16
adc
dec
push
add
in
imul
movsb
push
sub
mov
mov
fstps
mov
ja
jae
sbb
add
lods
sbb
icebp
dec
inc
fsts
xor
cwtl
icebp
sub
pusha
sarb
aas
add
jg
ds
imul
jno
jle
mov
scas
js
push
add
sub
mov
cmp
repz
scas
aas
ret
mov
add
inc
ret
push
and
dec
xor
insl
addb
push
gs
rcrl
add
xor
lock
push
xchg
dec
cmp
lds
dec
ret
or
mov
out
pop
sub
es
sub
repz
fcmovu
scas
scas
cmp
or
inc
mov
jecxz
jbe
inc
lret
adc
lock
pop
xchg
jl
sub
and
ljmp
jb
insl
jno
adc
and
loope
and
leave
xor
sti
aaa
and
adc
movsb
cmpsl
negb
pop
les
mov
bnd
lahf
inc
and
stc
test
lahf
mov
cmpsl
stos
test
mov
dec
xchg
lock
lods
xor
das
enter
mov
mov
mov
xchg
and
pop
and
mov
stos
movsb
scas
das
pop
popa
sbb
jno
xor
nop
inc
out
push
adc
pop
inc
or
inc
sbb
ja
pop
std
xchg
inc
stos
pop
cs
inc
rcrl
cld
int3
push
mov
int
xorb
pop
adc
dec
mov
test
aad
push
mov
pop
jmp
lds
daa
sub
mov
outsb
push
rcrb
jno
hlt
jo
fidivs
sbb
push
mov
pusha
rol
xchg
ljmp
mov
enter
mov
inc
les
popf
jne
cmc
cmp
test
je
xor
or
sub
mov
repz
les
and
xchg
add
out
lret
cmp
push
iret
arpl
js
lods
lods
rcrl
lahf
out
fisubrl
loop
icebp
mov
jmp
and
or
xchg
mov
ret
data16
andl
jbe
ja
mov
arpl
pop
add
or
scas
repnz
push
sub
push
cli
cmp
adc
cmp
push
adc
lds
jo
in
adc
add
mov
mov
xor
xchg
test
push
out
lea
jb
scas
add
in
cmpsb
bound
jl
gs
xor
sti
adc
and
andl
and
outsl
addb
jmp
cmpsb
add
jp
es
pusha
pop
repnz
ja
stos
rclb
iret
jb
mov
dec
fldt
pop
lcall
sti
sahf
push
adc
jg
hlt
imul
into
inc
dec
xchg
incl
and
and
push
and
ret
dec
jo
mov
adc
mov
inc
jbe
pop
outsb
inc
mov
pop
data16
testl
rolb
std
mov
call
int
xchg
inc
adc
jne
mov
jns
xchg
xchg
push
ja
push
adc
in
sbb
arpl
xor
sub
mov
jle
sub
xor
cmc
mov
rcrl
popa
jns
push
popa
testl
les
popl
aaa
cmp
sbb
inc
sbb
cmp
ss
mov
cltd
dec
jle
inc
push
gs
add
in
out
scas
stos
fldenv
xor
sub
cmp
sbb
push
push
iret
rorl
jmp
adc
aam
pop
dec
mov
cltd
rorl
lcall
sbb
and
scas
adc
jmp
jl
sbb
pusha
pop
mov
pushf
pushf
mov
loope
cld
mov
push
push
push
mov
jne
sub
sahf
popa
dec
lock
xor
shll
aam
gs
and
pop
sar
mov
push
add
fs
sub
xor
stc
mov
movsb
push
and
inc
fiadds
xor
aad
sbbl
insl
icebp
ret
je
rcrb
addr16
xchg
shrl
dec
call
int3
std
in
scas
sbb
fstl
imul
lret
mov
sbb
insl
test
scas
sbb
sub
jns
add
sub
shld
jno
lahf
cmp
xchg
cmp
loop
test
push
jnp
aam
nop
mov
mov
fidivl
dec
rcrl
mov
enter
in
out
or
cmp
jg
into
xchg
cmp
test
lcall
repnz
fcomps
ret
and
dec
xlat
icebp
cmp
mov
gs
testl
arpl
fcmovu
pop
imull
add
xor
sbbb
test
fsts
fs
shlb
enter
xor
in
mov
add
or
cmp
push
pop
lods
push
or
push
and
push
or
mov
stos
pop
push
xor
dec
xchg
mov
push
or
stc
sbb
out
mov
inc
lock
dec
and
mov
cmp
stos
xor
mov
dec
js
mov
push
push
add
cmp
movsl
add
push
inc
aaa
int3
mov
xchg
pushl
loop
outsb
and
lret
and
in
mov
loope
aad
movsl
andl
pop
int3
sbb
in
in
xchg
gs
imul
mov
div
sarb
push
loope
sbb
pushf
jno
test
test
add
es
inc
dec
xorl
push
sub
stos
pop
loope
mov
xchg
lock
lea
fadd
ret
stc
das
jg
xchg
das
xlat
les
mov
sti
lret
jae
test
aas
push
add
cmp
push
mov
stc
cmp
sub
mov
inc
out
sbbb
les
imul
lds
out
and
test
in
pcmpeqw
and
pop
push
add
scas
adc
jmp
sbb
mov
mov
dec
sbb
jae
cmp
mov
je
jecxz
lea
add
and
inc
mov
and
inc
mov
xor
cwtl
pop
mov
mov
imul
imul
pop
dec
cmp
mov
lods
outsb
fs
cmp
xor
loopne
add
and
fbstp
ja
loopne
adc
add
notl
mov
jle
int
pop
add
dec
cs
pop
pop
xchg
push
shll
cmc
mov
jle
and
jne
and
ret
leave
fwait
ljmp
lret
cmp
dec
fcmovne
loopne
add
lods
inc
ss
inc
lea
pop
shrb
int3
sub
mov
stos
lea
pushf
icebp
jne
lahf
imul
sub
xor
std
les
mov
inc
mov
imul
aad
mov
mov
lcall
test
test
movl
sbb
in
cmpsl
mov
mov
mov
dec
fnsave
add
push
push
adc
in
push
js
lcall
mov
xor
adc
sbb
lods
scas
fisttps
inc
hlt
sub
mov
and
mov
mov
rcpps
cltd
std
out
mov
xchg
popa
iret
jnp
cmpsl
pusha
xchg
jnp
mov
xchg
or
mov
outsl
fwait
inc
addr16
scas
mov
into
or
icebp
je
inc
out
jae
sub
sbb
aaa
flds
cld
repnz
insl
sub
jmp
popf
ja
xor
add
jns
icebp
bound
cmp
insb
cmp
dec
out
sbb
cld
sbb
sub
sub
bound
out
les
jae
mov
jmp
and
push
mov
or
fdivl
mov
pop
adc
ss
int
mov
cld
pushf
and
mov
popa
xor
inc
test
adc
pop
ret
pop
dec
jp
push
or
inc
iret
add
mov
mov
addl
imul
xor
xchg
fcmovnbe
inc
jle
dec
inc
pop
jg
or
das
pop
leave
jge
or
movsb
inc
add
add
das
dec
inc
ds
jno
pop
scas
sbb
out
mov
arpl
icebp
mov
xor
in
lock
jmp
mov
stc
mov
or
jge
xlat
test
add
mov
repnz
stos
in
pop
cmp
sbb
aad
movsl
aaa
sub
xor
sub
leave
jecxz
or
icebp
and
movsb
mov
mov
das
leave
inc
fs
popa
fcompl
insl
pushf
jae
jns
andb
cmp
sbb
cld
xchg
not
lods
add
aas
jno
xchg
cmp
or
out
xchg
popa
and
fstps
andl
je
jo
sete
mov
int
sbb
sti
and
aaa
add
insl
icebp
loope
cmp
jbe
and
repnz
adc
add
pop
stos
cmp
adc
pop
push
cmp
test
add
pop
adc
stos
sti
pusha
or
add
mov
out
ret
cs
and
fmuls
and
xor
addl
pop
inc
inc
cld
leave
and
fmull
cmp
lods
ret
mov
repz
and
arpl
divl
jno
mov
loopne
aas
adcl
dec
pusha
adc
cwtl
pushl
mov
xlat
adc
leave
push
scas
jno
or
dec
add
int
xor
je
pop
add
daa
jbe
ret
cli
and
mov
cmp
iret
daa
or
mov
mov
xchg
sub
mov
fists
jmp
pop
mov
cmp
repnz
icebp
jns
cwtl
jb
or
inc
push
das
add
mov
enter
or
cld
gs
xor
out
push
lret
or
and
mov
repz
mov
ss
jbe
mov
jno
lea
ret
push
paddb
push
sbb
dec
loop
scas
sub
push
cmp
gs
push
jnp
mov
call
jp
or
test
mov
cwtl
sbb
push
sub
pop
xchg
pop
rorl
jmp
icebp
cwtl
fmuls
and
stos
jge
lea
mov
fs
jge
inc
nop
xor
fnstenv
adc
leave
xchg
sbb
or
cmp
mov
jo
xlat
jmp
push
imul
pop
xor
outsl
cmpsb
pop
das
rcr
fs
ja
outsl
sub
sbb
xor
loop
pop
shrw
mov
enter
sub
fwait
mov
push
cltd
popf
in
xchg
lret
push
jo
push
jnp
jge
jge
adc
mov
clc
inc
icebp
or
mov
dec
bound
dec
jne
inc
mov
pop
jle,pt
jns
or
xchg
fwait
pop
xchg
iret
pushf
outsb
cs
jp
sbb
adc
pop
push
sbb
push
xchg
fsincos
push
stos
and
lds
movsb
xor
fimuls
orl
fisubl
pop
mov
sub
inc
xchg
bound
mov
out
cmp
jns
add
fcmovu
daa
jbe
push
mov
add
pop
mov
mov
out
fcomp
nop
mov
sbb
xlat
lahf
add
mov
push
fbld
movsb
push
and
cld
or
inc
aaa
ja
xor
int
inc
loop
jmp
pop
lcall
add
out
testb
scas
dec
adc
iret
fnstcw
xchg
shlb
jbe
push
mov
mov
mov
mov
push
cs
mov
cmpsb
adc
aam
fildl
xor
inc
add
cs
sub
lock
pop
adc
add
adc
faddl
ficoml
leave
inc
std
mov
xchg
pop
adc
pushf
into
cmp
xchg
sbb
adc
mov
pop
pop
jle
lret
pop
sbb
filds
cmp
jo
jmp
mov
loop
mov
frstor
or
jne
cld
mov
sbb
inc
fucomi
mov
cmc
xor
sbb
xchg
dec
int
mov
sbb
and
jl
mov
loop
xor
sbb
jno
mov
pop
or
push
in
jnp
pop
or
idiv
dec
iret
mov
mov
and
xchg
das
push
shrb
cmp
insb
idivl
push
pop
cmp
jno
in
push
cmc
mov
test
imul
data16
shll
jns
push
xor
xchg
sub
in
add
dec
inc
mov
std
stos
fnstenv
outsb
xor
pop
aad
xchg
rcrb
xor
push
loope
std
mov
aad
loop
lea
imul
popw
popf
ss
test
lret
fadds
insb
mov
iret
repnz
outsb
push
mov
inc
rclb
dec
mov
decb
push
notl
loop
outsb
ds
mov
testb
add
xchg
pop
sub
insb
mov
repz
lds
jnp
pop
add
inc
dec
mov
jle
shrb
cmp
popa
push
xchg
cmpsl
pop
add
in
mov
test
adcb
rcll
iret
cmp
sub
or
orl
dec
testl
lock
xor
cmp
rcl
or
cmc
int3
and
int
daa
xchg
cmp
arpl
arpl
add
loopne
popa
es
dec
clc
adc
sti
repnz
cmp
cmp
pusha
adc
xor
lret
fwait
pop
jnp
in
jb
mov
repz
adc
out
jg
mov
cltd
dec
push
cmp
jmp
stc
mov
es
mov
mov
cltd
aas
out
mov
into
loopne
adc
cltd
dec
pop
mov
icebp
pop
shl
sti
arpl
push
jne
xchg
inc
lock
cmp
mov
or
mov
jne
xor
inc
dec
pop
inc
lret
mov
xchg
lods
mov
lret
std
movsb
sarw
ret
jne
test
pop
push
pop
inc
xor
lcall
fldt
test
pop
jnp
mov
adc
or
ds
das
cmp
arpl
and
xor
pop
mov
call
test
fisubrs
inc
leave
arpl
jns
cmpsb
cmp
call
pop
fidivs
addl
xchg
in
imul
nop
pop
daa
lods
xchg
push
xor
pop
xchg
insb
mov
sarl
ljmp
popf
andl
sub
sbb
inc
xchg
xor
fcomp
shlb
jge
clc
imul
lock
mov
shll
das
pop
mov
pop
icebp
mov
jno
or
sti
outsb
inc
daa
cltd
xlat
addr16
bound
shr
mov
ficomps
dec
jg
les
pushf
and
stos
push
lods
cli
cmpsb
mov
cmpsb
mov
cmp
xor
sarb
sbb
loopne
mov
int3
call
mulb
scas
inc
fisubs
rcll
mov
mov
sub
outsb
daa
mov
mull
mov
sub
jae
or
iret
mov
int
insl
shl
loope
call
nop
pop
mov
or
hlt
push
jle
pop
inc
iret
lahf
iret
enter
jle
sti
out
sub
push
ds
pop
scas
xchg
mov
int
cli
dec
inc
add
adc
aam
cltd
shr
int3
xchg
lods
inc
ret
ds
push
cmp
js
push
in
and
pop
add
dec
in
or
vsqrtss
mov
aas
orb
add
or
stos
push
sti
pop
lods
jb
lods
loopne
or
add
dec
std
std
cmpsl
stos
sti
imul
std
or
add
pusha
jb
and
dec
in
addb
sti
mov
add
cmp
mov
rclb
mov
rol
mov
dec
pushl
adc
pop
test
pop
stos
push
xchg
push
lods
outsb
sub
inc
mov
mov
jge
xchg
sbb
hlt
jmp
nop
pop
xchg
xchg
jl
sbb
sub
xchg
pop
sbb
faddl
popa
in
fisubs
and
jnp
je
push
adc
addr16
push
scas
ljmp
in
push
shl
push
pop
loopne
push
inc
jne
push
test
pop
popa
add
and
xchg
pop
sub
mov
scas
xchg
dec
addr16
push
sbb
cwtl
mov
scas
and
xor
push
in
add
shr
mov
loop
mov
inc
jno
in
ret
mov
xlat
lods
rcl
xchg
inc
test
pop
sub
lcall
xchg
add
ja
mov
ds
sub
sbb
loopne
inc
std
dec
xlat
pop
push
icebp
outsb
stos
mulb
mov
and
in
mov
push
xchg
andl
div
ret
repz
test
adc
stc
mov
aas
ds
jae
jae
sbb
vandnps
jbe
jmp
movsb
lods
sbb
insb
add
add
mov
mov
add
xchg
sbb
js
push
in
ret
into
jae
adc
outsl
icebp
lea
imul
inc
imul
mov
push
sti
scas
xchg
cmp
mov
xor
add
mov
pop
sub
jp
xchg
sbb
mov
pop
mov
jb
jbe
in
hlt
cld
bound
inc
sbb
or
sub
push
iret
imul
es
dec
ret
add
rcrl
fists
fadd
cltd
mov
push
or
inc
or
mov
sahf
cvtdq2ps
cmpb
mov
mov
mov
or
xor
ljmp
jp
ljmp
out
sbb
scas
pushf
rorl
pop
ja
adc
out
add
and
and
pop
es
and
repz
clc
dec
pusha
inc
sbb
pop
jle
cmp
shll
push
push
fists
mov
call
push
jno
mov
dec
xchg
cli
test
jns
ret
or
and
xchg
adc
sub
add
lret
mov
push
in
cmpsb
fisubl
sarb
xchg
stos
pop
shrl
jecxz
in
mov
mov
and
fimull
popf
mov
adc
cmp
xor
ss
fidivl
mov
jecxz
add
jmp
push
xor
lcall
lret
or
rcll
in
loope
test
in
sub
jg
lods
jg
push
imull
inc
fidivrl
and
fsubrl
cli
sbb
stos
jnp,pt
cld
mov
jp
test
aas
rcl
cld
adc
mov
cmc
es
dec
movsl
mov
ja
add
lea
inc
stc
inc
mov
aad
push
xchg
jmp
std
mov
and
sub
jmp
sub
inc
cmp
add
jnp
dec
sbbb
and
js
mov
xchg
stc
fwait
or
mov
pop
adc
mov
out
or
mov
lods
mov
lret
cmp
cmp
scas
repz
pushf
in
roll
stc
and
decb
loop
cmp
push
dec
fmuls
lds
iret
xchg
dec
loop
or
jl
loopne
xor
mov
and
pushf
or
add
repnz
push
mov
cmp
adc
pop
lds
xor
xorb
test
push
push
push
xchg
insb
jbe
jge
pop
sbb
add
mov
push
add
ja
jecxz
sbbl
xor
sub
test
out
and
xchg
or
subl
subl
cltd
lods
insb
pop
repnz
das
xor
and
add
xlat
pop
stos
subl
inc
mov
movsb
add
sbb
mov
daa
or
imul
sub
mov
jns
or
fld1
pusha
mov
fstp
or
or
mov
sbb
in
hlt
imul
cmp
ljmp
mov
mov
into
outsl
cmp
xor
sbb
mov
loopne
cld
loope
bound
mov
xlat
cmp
xchg
mov
mov
dec
and
or
inc
add
push
jno
int
rcrb
xchg
jns
inc
mov
pop
test
push
popa
in
das
daa
fwait
sbb
stos
push
dec
mov
rcl
inc
shl
andl
cltd
out
inc
imul
in
push
sbb
ds
ljmp
push
test
xchg
lds
cs
lret
daa
xchg
sahf
and
fcompl
mov
int3
inc
xchg
and
sbb
xchg
mov
sbb
inc
and
xchg
push
lods
mov
jb
in
dec
aas
lock
repz
in
pushf
lret
ficompl
jecxz
ret
pop
fistpl
pop
iret
call
ret
pusha
add
gs
outsb
adc
fs
out
pop
aam
out
imul
jbe
pop
push
aas
jae
mov
mov
jg
mov
xchg
push
push
xor
xor
push
std
lcall
cltd
jns
push
cmpl
pop
mov
dec
aam
addb
jle
lock
movsb
aaa
jnp
repz
mov
cmc
push
and
sbb
aad
stc
push
pushf
jg
insb
adc
pop
dec
daa
jno
aas
adc
push
jmp
xchg
push
xchg
pop
into
xor
insl
mov
adc
test
in
xchg
xchg
push
nop
test
mov
push
lea
pop
adc
popf
mov
xor
orl
inc
and
add
jno
jecxz
inc
shlb
mov
int3
adc
cltd
mov
sub
inc
push
ret
xor
imul
mov
jnp
sar
fists
hlt
or
lock
xchg
test
jae
push
jge
cmp
in
jne
sar
movsl
cmp
clc
rorl
xchg
sahf
sar
imul
or
dec
push
xchg
push
movsb
push
dec
push
shll
testb
and
dec
pop
sbbb
dec
mov
loopne
pop
lret
data16
jno
inc
clc
lds
push
inc
hlt
adc
lcall
push
data16
outsl
jns
or
shl
cmp
lods
jge
popf
pop
xor
in
ret
stc
idivl
pop
fmul
leave
push
mov
lock
jbe
not
imul
std
call
mov
outsl
cs
push
scas
mov
orl
lea
cmp
cmpsl
or
ret
xor
testb
xchg
cwtl
sar
insb
ss
jns
aam
icebp
and
mov
sub
inc
xchg
subb
fdivl
mov
dec
pop
mov
push
sub
xlat
das
shll
adc
mov
test
add
pop
insl
add
jns
ret
mov
inc
aaa
pop
mov
sub
mov
pop
sahf
adc
pop
jp
sar
dec
add
inc
jnp
cwtl
ljmp
dec
out
cltd
jae
ljmp
add
sub
loope
test
fsubl
fldt
test
push
and
enter
out
xchg
adc
aad
adc
outsl
icebp
les
xlat
out
mov
addl
and
jno
cmp
dec
xorb
sahf
fnstenv
aaa
lcall
dec
mov
andb
pop
sub
mov
mov
shrl
add
lock
add
mov
and
jmp
sbbb
lret
cmovs
in
fcmovnb
or
fisttpl
test
in
xchg
pop
mov
out
call
shll
adc
dec
inc
adc
int3
sub
jno
mov
dec
cltd
clc
xchg
lock
inc
imul
test
aad
xor
pop
cmp
mov
ds
stc
in
lock
and
loopne
pop
fidivrs
in
pop
mov
jmp
mov
stc
movsl
and
rcl
sub
repnz
pop
add
mov
mov
js
mov
int3
es
pop
ret
sbb
sub
shrb
cmpsb
push
inc
jecxz
movsb
add
lahf
sarl
nop
mov
add
gs
xor
inc
pop
aaa
nop
pop
out
xor
and
fcompl
daa
mov
xchg
insb
push
sbb
imul
jbe
adc
std
jo
xor
pushf
test
dec
sub
outsb
lcall
loop
shll
fistpl
adc
icebp
xor
and
aas
data16
push
lock
testb
push
scas
mov
sbb
test
test
pop
aas
repz
aas
inc
push
dec
mov
int3
xlat
or
mov
cmp
lcall
add
mov
add
mov
mov
inc
pop
es
ret
mov
cld
push
lcall
push
push
scas
pop
leave
push
or
ljmp
rclb
stos
int
or
sti
or
cltd
jmp
adc
jb
pop
cmp
xor
and
mov
aam
jne
mov
daa
mov
adc
fcoms
cmp
adc
adc
mov
fildll
cmp
addr16
mov
sub
cmp
ds
cmpsb
jecxz
inc
adc
jl
imul
or
aas
sub
int3
out
jge
pop
jg
mov
imul
jns
push
adcb
stc
fs
int
xor
psrld
popf
dec
mov
mov
mov
stos
lock
inc
shll
cmp
inc
ds
fnstenv
mov
stos
test
test
jp
fxch
mov
test
loope
xor
dec
and
xor
or
push
or
sti
sbb
sub
aad
xor
movsl
xchg
rorl
add
outsb
or
sbb
pop
pop
xchg
ss
fistpll
inc
jp
adc
pop
xchg
pop
rol
push
imul
push
add
dec
rcrl
mov
sbb
sub
pop
stos
sub
mov
or
aaa
jo
shlb
cmc
dec
mov
xchg
adc
jl
sub
mov
std
shlb
and
aad
adc
test
xor
mov
rcll
test
mov
xor
cwtl
jecxz
in
push
std
imul
jbe
mov
mov
fs
mov
data16
pop
cmp
sub
jmp
fdivrl
add
xchg
push
movsl
bt
jbe,pt
pop
loopne
xchg
sub
nop
or
dec
lock
js
jecxz
push
fdivl
mov
mov
popf
push
ret
cmp
fwait
push
and
iret
clc
stos
aas
pusha
lret
cmp
adc
mov
dec
aam
cmp
mov
adc
sub
je
or
mov
mov
loopne
loope
lahf
dec
dec
stc
les
adc
fs
ljmp
ds
xchg
in
data16
push
mov
and
movsl
push
mov
mov
mov
inc
and
iret
scas
sub
xchg
lret
lahf
xchg
cli
xlat
push
orl
iret
or
adc
movaps
mov
add
xor
movsl
cmp
mov
mov
jp
jno
aaa
ret
lret
mov
rolb
sar
into
test
or
filds
addr16
gs
mov
jb
push
aaa
pop
pop
add
adc
sbb
test
push
add
les
sub
sbb
jl
ss
loopne
push
jb
cmpsl
mov
push
out
rcrb
pop
loop
or
mov
into
clc
sub
cld
popa
mov
add
js
sbb
add
xor
mov
negl
sbb
lods
fcmovnu
sub
pop
push
inc
xchg
scas
std
mov
call
inc
pushf
fidivl
loopne
fs
inc
jnp
push
dec
loope
stc
pop
adc
dec
pop
cwtl
mov
shrb
jae
gs
shr
hlt
push
ss
mov
inc
cmc
sub
ficomps
in
jl
inc
xchg
call
push
daa
repnz
cmp
mov
push
in
fisubl
in
int
outsb
mulb
inc
les
dec
data16
xchg
pop
subb
inc
cli
adc
cmp
pushf
mov
rcr
das
cs
mov
mov
jmp
inc
and
js
fcoml
mov
push
pop
pop
cmpsb
cld
fsubl
es
in
cmp
cmp
sub
pop
shll
jecxz
adc
lahf
fidivs
jnp
sbb
sub
push
mov
adc
sbb
imull
lods
rol
mov
out
fmul
icebp
jl
pop
mov
gs
jmp
arpl
xchg
fcoms
shll
cmp
mov
in
jecxz
repz
les
es
dec
mov
ss
push
outsb
inc
rorb
push
das
cmc
add
repz
outsb
mov
in
pusha
clc
outsl
push
in
sub
js
xchg
sbb
shlb
cltd
stos
add
outsb
jecxz,pn
inc
dec
sub
cltd
test
sub
and
jnp
jne
mov
mov
pop
xchg
pop
mov
outsb
push
mov
or
dec
adc
and
ret
movl
negl
loopne
leave
sbb
xchg
xchg
mov
adc
xchg
jns
pusha
jecxz
out
shll
mov
movsb
jno
daa
pusha
mov
sarb
pop
filds
lock
stc
cwtl
xchg
mov
push
or
push
cmpb
sub
jnp
xchg
mov
xchg
push
inc
out
lcall
and
rcl
mov
cmp
int3
jne
insl
ljmp
imul
push
call
or
jecxz
aad
inc
es
sbb
adc
inc
mov
int
insl
jmp
mov
mov
jb
dec
sub
data16
mov
mov
cltd
jb
out
dec
or
je
pop
mov
adc
scas
addb
loope
stos
fldz
xchg
and
push
sbb
and
pop
loope
subb
insb
sub
mov
jp
jp
aad
cli
leave
test
icebp
inc
and
mov
adc
mov
aaa
inc
mov
mov
adc
iret
repnz
cld
mov
or
sbb
inc
cli
lods
cmp
push
rolb
xchg
adc
push
mov
mov
loope
inc
adc
das
xor
mov
push
xlat
int
repz
cmp
dec
add
push
jg,pt
icebp
inc
cmp
pop
movsb
jl
stos
hlt
popf
adc
ds
aas
insl
es
mov
in
mov
dec
movsb
es
shl
sbb
jbe
mull
push
xchg
lds
add
test
mov
les
fmulp
or
cwtl
xor
shll
inc
jp
scas
mov
jno
es
jp
sub
aaa
cmp
add
and
mov
push
stc
dec
pop
lret
push
jge,pn
push
cmpl
xchg
fisttpll
dec
in
pop
outsl
fwait
ds
adc
out
cmp
xor
stc
mov
popf
inc
jb
xchg
sahf
inc
insl
mov
inc
mov
lods
iret
and
and
push
insl
pop
mov
xor
inc
out
jb
mov
inc
cld
jb
pop
addl
add
xor
add
xor
sub
adc
mov
aam
or
lock
rclb
pop
push
xor
mov
fisubrs
clc
xchg
popf
push
in
dec
cs
hlt
in
push
aam
in
lahf
scas
fwait
adcl
pop
cs
adc
pusha
mov
push
lret
ljmp
mov
out
bound
cmc
addr16
out
je
add
and
mov
fcmovnb
jbe
idivl
cli
int
pop
xchg
hlt
cli
adc
loop
inc
adc
sarb
cmpsb
or
xchg
leave
lahf
mov
mov
cmp
pop
ret
mov
xchg
shll
jecxz
aaa
jae
jg
sarb
add
dec
insb
clc
adc
cld
jp
mov
push
lods
stos
or
sub
push
pop
adcb
push
dec
lcall
call
out
push
aas
test
mov
pop
jae
sub
test
gs
sub
imulb
aad
out
in
insb
push
scas
sub
push
test
lea
adcl
cmpsl
cmp
sbb
aad
stc
mov
dec
pushf
test
mov
outsl
sahf
in
jbe
rolb
jg
imul
jg
jnp
xchg
hlt
xor
and
cmpsb
sarb
inc
cmp
push
sub
xchg
inc
xor
repnz
popl
sub
adc
adc
xchg
dec
test
dec
mov
sub
jl
enter
daa
shll
jns
gs
lea
ljmp
cltd
loope
jge
stc
fst
rcll
lret
or
mov
and
push
lea
mov
mov
inc
jecxz
ss
ljmp
ficoml
xchg
std
inc
cmp
xchg
lds
test
xor
adc
dec
ret
ds
cmc
cld
sub
stc
mov
xchg
push
jl
add
jg
sbb
pop
push
jl
mov
notb
and
iret
cmp
inc
mov
cltd
dec
xchg
fs
ljmp
sti
xchg
jecxz
add
into
jne
and
lret
jno
adc
mov
mov
jbe
sub
fistpl
addr16
inc
sbb
jmp
stos
mov
add
sub
adc
rcr
testb
lods
fcmovb
pop
int
pop
pop
adc
popa
jge
lahf
mov
fcomps
lret
imul
xchg
shrl
push
or
sbb
xor
fidivs
xlat
les
cmp
in
dec
jae
rcll
loopne
sbb
ja
mov
inc
lahf
dec
xchg
loope
scas
inc
test
lcall
push
aad
ss
fcomps
inc
sub
add
xor
jle
push
iret
jmp
push
int
js
inc
fadds
jle
cmpsb
into
les
scas
lret
push
outsl
mov
rol
push
sub
jg
inc
cld
jne
das
xor
xchg
mov
xchg
ljmp
jp
mov
call
adc
test
adc
mov
in
xor
arpl
adc
popa
jecxz
adc
or
les
pop
mov
or
or
inc
adc
push
mov
mov
je
push
or
jbe
int3
lret
int3
stos
mov
xchg
cmp
out
das
insb
idivb
fadd
imul
test
out
mov
sub
mov
movsl
scas
and
sahf
test
loope
cmp
sub
cmp
fdivl
lcall
xor
sbb
rcr
leave
cwtl
mov
cmp
and
in
sbb
insl
or
rcrl
outsl
nop
insl
inc
mov
inc
mov
scas
ss
mulb
xchg
push
xor
mov
add
outsb
push
and
cmpsl
push
xchg
cli
mov
mov
sub
in
xor
aaa
xchg
rclb
or
mov
cmpsl
or
push
mov
jp
pop
jb
inc
imul
xchg
sbb
jecxz
repz
jo
ret
push
fistpll
jle
hlt
cld
xchg
sbb
nop
fnstcw
aad
adc
add
imull
jl
lcall
cltd
cld
cmpl
jmp
mov
jl
xor
pop
gs
mov
hlt
dec
ret
cmpsl
iret
fnstcw
mov
push
xorl
inc
sub
iret
movsb
mov
jp
mov
mov
outsl
adc
es
jbe
loop
push
cmp
mov
xchg
lret
sbb
mov
sub
mov
pop
pop
imul
ljmp
add
scas
scas
pusha
stc
test
adc
not
pushf
and
lcall
imul
imull
rep
movsb
xlat
shrb
mov
push
adc
in
push
cmp
mov
cmpsl
scas
addb
pop
xlat
insl
mov
adc
in
push
leave
bswap
and
sbb
push
fbld
rcl
int
mov
push
xor
sub
jns
test
shr
ljmp
adc
in
negb
xor
arpl
imul
push
mov
shl
stos
add
mov
sub
sbb
xchg
incl
outsl
into
adc
lods
add
push
xchg
insl
js
adc
xor
or
shlb
and
jns
je
rcrl
push
xchg
pop
dec
pushf
jo
inc
and
jle
and
popf
stos
jnp
xchg
mov
fiaddl
pop
incl
cli
cs
or
xor
dec
pusha
arpl
pop
pop
int
ljmp
jp
repz
push
cmp
lds
push
jecxz
adc
push
out
pop
dec
sbb
addr16
stos
hlt
enter
roll
les
shlb
mov
int3
leave
mov
dec
sbb
mov
aaa
pop
mov
xchg
push
cltd
stc
movsl
push
inc
rcrl
or
stc
ja
negl
mov
mov
in
push
fcomps
sub
mov
mov
jnp
stos
imull
mov
mov
scas
sub
repnz
sub
push
scas
mov
jge
adc
mov
cli
cmp
pop
jmp
popa
ficoml
adc
movsb
rcrb
add
and
cltd
fisubrs
push
push
inc
pop
push
jae
mov
scas
into
pop
out
fmuls
jecxz
movsl
das
mov
inc
popf
aaa
mov
add
movsl
ja
xchg
mov
icebp
inc
lcall
pushf
xor
fs
out
into
insl
cmp
test
bound
gs
in
jg
jnp
divb
pop
nop
jecxz
pop
inc
lcall
xchg
mov
add
mov
sti
ss
in
dec
or
loop
mov
adc
dec
mov
sbb
scas
rorl
enter
test
xor
data16
mov
icebp
aas
js
sub
jle
pop
imul
imul
mov
es
pop
pop
std
negb
filds
and
jo
movsb
push
or
fxch
jo
test
enter
les
ja
lea
mov
test
push
sbb
adc
sub
or
subl
or
pop
xchg
mov
pop
cmp
into
jle
mov
xchg
add
in
insl
or
sbb
dec
cmpb
jle
lret
popl
sub
pop
icebp
loop
dec
fs
mov
mov
sub
inc
push
loop
push
sub
divl
fisttps
pushf
loope
mov
mov
xchg
scas
ret
vcvtps2pd
cmpsb
push
push
ds
jecxz
aad
popa
sbb
mov
jns
pop
adc
mov
scas
push
int
pop
divl
pop
mov
xor
ljmp
jecxz
aas
mov
loopne
test
cmpl
push
mov
je
xchg
fcoms
dec
mov
call
adc
mov
stc
jg
push
pop
xchg
mov
jnp
neg
aam
jmp
sub
loop
cmp
push
dec
inc
jg
ljmp
dec
hlt
mov
ret
into
sub
dec
shll
das
sbb
push
enter
xchg
push
cmpl
std
loop
xchg
add
sub
add
sbb
insb
imul
mov
push
daa
leave
insb
adc
je
stos
lods
jb
cmp
lcall
sti
xlat
ljmp
xor
lahf
pop
mov
imul
jno
out
adc
pop
call
lahf
and
lret
leave
mov
mov
lds
sahf
in
movsl
leave
loope
sbb
jns
push
out
xchg
cmpsb
enter
push
call
mov
loope
push
jp
in
mov
inc
inc
jae
cli
xchg
jae
adc
sarb
jmp
dec
imul
cli
notb
fsubs
cmpsl
js
es
shlb
loopne
jne
sahf
and
stos
cmp
add
push
jnp
lods
fcomps
repz
fstl
cld
inc
mov
das
add
movsl
mov
outsl
repz
in
ss
pop
cmp
cmp
push
pop
mov
pop
lods
addr16
aas
mov
fdivrs
sbb
js
cmp
dec
lahf
and
repz
and
lret
jp
nop
pop
mov
shll
aas
lock
hlt
sub
subl
push
sarl
inc
dec
inc
ja
int
mov
testb
pop
push
je
loop
push
lock
push
jl
push
sti
pop
js
out
or
inc
xor
mov
lahf
fnstsw
push
mov
pushf
les
push
bound
addr16
leave
jno
sub
iret
push
es
addr16
es
xchg
push
add
lret
and
jbe
cmp
adc
lock
lcall
gs
dec
push
and
dec
push
jno
leave
jp
pop
jl
into
pop
inc
testl
lods
mov
adc
sbb
ret
xor
fisubs
pop
dec
fs
or
adcl
push
sub
cmc
js
testl
das
cmp
scas
xchg
movsl
int
sub
push
cmp
xchg
mul
sbb
inc
push
bound
mov
int
or
insb
dec
sub
fmul
sbb
imul
lahf
dec
push
out
adc
adc
loop
aas
push
jo
fstpt
dec
scas
or
adc
or
jbe
pmullw
cmp
dec
jl
xor
xor
sbbb
jl
cs
or
xor
loope
pop
popa
cmpsl
daa
xchg
mov
pop
mov
ljmp
daa
imul
or
jb
dec
test
cmpsl
xchg
fwait
clc
imull
inc
dec
or
sbb
sbb
out
js
push
inc
and
inc
pop
movsl
and
mov
fidivrs
lea
jo
jb
int3
or
pop
dec
sbb
jno
jge
and
shl
scas
lret
js
mov
in
das
mov
cmpsb
fstl
popa
in
cmc
call
ffreep
sbb
xchg
push
mov
mov
adc
add
arpl
in
mov
mov
cmp
and
jp,pt
idiv
sbb
lret
jb
mov
inc
aad
sbb
and
mov
lcall
int
mov
mov
ret
jne
shrl
stos
xlat
lahf
dec
ret
jle
sti
jae
cmp
or
xchg
xor
dec
cmp
dec
popf
xchg
push
sarl
or
arpl
nop
cwtl
mov
xchg
mov
pop
ds
mov
sbb
fs
jmp
lret
cmpsl
scas
mov
imul
sahf
xchg
jmp
xor
sti
sub
sarb
dec
adc
jno
mov
inc
repnz
inc
push
ret
xor
lret
cli
dec
xchg
add
jmp
adc
inc
divb
cld
xchg
or
gs
sub
cmc
out
cld
out
jbe
iret
in
aaa
adc
xor
xchg
aas
movsb
out
xchg
push
jbe
stos
test
add
pop
mov
lds
cmp
aaa
mov
lea
inc
lods
lock
bound
add
dec
inc
pop
mov
daa
adc
dec
jns
out
arpl
mov
xor
or
gs
cmp
xchg
insl
add
add
pop
mov
repz
ficompl
inc
je
inc
adc
popa
int
adc
in
mov
mov
and
aad
test
insb
push
rolb
inc
aam
ss
icebp
aad
mov
jle
xchg
mov
mov
mov
sbb
lret
mov
lcall
and
xor
jecxz
fbld
movsb
jbe
in
push
mov
adc
push
les
sbb
jo
repz
outsb
call
leave
cs
leave
into
scas
iret
insl
ret
mov
dec
add
enter
aaa
inc
mov
aas
icebp
push
and
sub
js
mov
ss
fsubs
lods
test
aam
add
out
cs
js
mov
or
fs
int3
fldt
lret
subl
lret
lahf
sub
frstor
das
push
daa
jbe
mov
lcall
fs
mov
jg
popf
inc
aam
loop
cld
pop
mov
test
inc
sahf
inc
add
jmp
roll
out
inc
xchg
inc
push
shrb
int
cltd
imul
repnz
orb
mov
movsb
dec
cmp
and
mov
js
and
scas
xchg
lret
fbstp
and
mov
sbb
scas
fisubl
mov
cmp
ret
dec
sti
cmp
sub
cmpsl
xor
push
sahf
push
int3
dec
shrb
pop
movsb
loopne
xor
cmp
enter
repz
enter
add
push
cltd
js
mov
mov
out
add
push
loope
outsb
mov
cmp
push
or
mov
dec
cmpsl
jmp
aam
mov
cmp
jp
xorl
sahf
xor
movsl
in
pop
cwtl
lret
and
inc
or
or
lods
stos
popa
push
mov
jl
and
mov
xchg
add
lret
and
ret
movsl
xorl
or
in
mov
adc
push
adc
sarb
das
mov
or
int3
mov
cli
ds
mov
hlt
les
mov
hlt
or
pop
push
push
gs
or
aaa
loop
addb
xchg
in
ljmp
xchg
adc
int
js
add
xlat
in
stc
cmp
jns
jp
xor
fwait
inc
or
dec
ja
lret
hlt
pop
and
imul
lret
leave
test
push
daa
jb
popa
repnz
cmpsb
and
add
movsb
in
aaa
cmp
mov
jb
cmp
test
jle
stos
push
sbb
aam
outsb
jnp
pop
call
ret
push
and
aas
mov
xor
xchg
xchg
cmp
mov
and
gs
lods
inc
cmc
arpl
int
cwtl
inc
mov
dec
xor
xchg
push
push
or
xchg
dec
cmp
mov
les
insb
push
addb
addr16
add
adcb
mov
test
dec
scas
nop
fdiv
jge
inc
or
or
adc
mov
xor
sahf
xor
daa
pop
add
xchg
aam
fcomp
sarb
jmp
xor
xchg
in
ret
xor
sbb
dec
daa
jle
sub
push
fsubl
xor
arpl
sbb
push
mov
add
jae
and
mov
out
sbb
mov
popf
mov
push
inc
sub
aaa
add
adc
lock
push
jae
sub
int
jbe
cmp
ds
leave
lcall
pop
rorb
or
push
xor
out
in
mov
addb
out
xchg
scas
mov
push
jle
sbb
cmp
test
pushf
fimuls
mov
dec
call
sub
arpl
cli
xchg
js
sbb
shrl
inc
adc
and
xchg
jle
inc
mov
aaa
lcall
aas
sub
daa
or
daa
mov
arpl
jg
dec
sub
xchg
add
lods
mov
xor
jnp
cmp
cmp
push
jno
xchg
cmp
std
mov
mov
jns
mov
pop
add
aaa
imul
push
out
fwait
ss
ds
inc
lahf
shl
fbstp
jmp
xchg
arpl
adc
xor
pop
sub
and
test
test
test
jb
pop
lods
and
cwtl
cmp
mov
das
cmpsb
loop
out
mov
in
adc
andb
mov
pop
mov
jo
push
out
stos
scas
xor
and
and
cmp
inc
sub
enter
pop
push
push
inc
adc
in
jg
mov
cltd
xlat
pop
jo
cli
dec
mov
pop
jle
inc
test
cs
mov
push
jne
orb
sub
xor
addl
mov
xchg
ret
xchg
int
arpl
inc
sub
popf
sbb
mov
jecxz
mov
push
mov
js
jno
sbb
lret
push
or
divps
fwait
inc
lcall
daa
mov
pop
xor
les
mov
dec
mov
repnz
and
jnp
lahf
sbb
sahf
ljmp
sbb
fsubrl
in
gs
push
cmpsl
ret
and
icebp
fmull
out
adc
aad
mov
fdivrs
stos
dec
aaa
jmp
repnz
sub
inc
sub
xchg
sar
jp
xchg
push
outsl
or
outsb
push
rorb
movsl
mov
movsb
cmp
int3
sti
das
sub
xor
inc
and
and
shrb
movsl
mov
mov
pop
jg
or
xchg
sub
mov
les
mov
sbb
fucomi
orb
and
vmovss
iret
mov
leave
dec
mov
imul
pop
add
and
xchg
and
inc
jl
lock
inc
or
adc
jno
add
repnz
cmp
scas
or
sbb
lret
dec
xchg
inc
mov
cmp
sbb
add
inc
aaa
jle
xchg
and
sub
cmp
fimull
loopne
fisubrl
mov
jg
mov
imul
lret
jecxz
jge
mov
repz
mov
movsb
loopne
and
int
das
outsl
rorl
nop
test
or
or
lock
insb
jp
rclb
xchg
or
in
dec
or
push
xchg
in
jns
shll
pop
lods
fwait
in
inc
xor
iret
jbe
js
xchg
popf
inc
jns
cmpsb
lock
dec
cld
enter
mov
mov
mov
xchg
xor
gs
ss
ffree
imul
aam
into
enter
addr16
adc
mov
push
push
fisubrl
int3
jmp
sahf
ret
inc
aaa
cmc
or
sub
sub
cwtl
jg
out
push
jl
xor
cltd
cmp
test
in
jle
and
xor
dec
xchg
adcb
jae
stos
jne
mov
jg
in
adc
adc
fbstp
jecxz
and
loop
pop
cmp
shl
xor
mov
mov
rorl
dec
inc
mov
sbb
push
cmp
pop
xchg
cvtdq2ps
adc
fs
inc
xorb
addl
or
push
and
mov
sbb
cmc
mov
xor
jne
xor
lods
xor
out
popf
cld
lret
lock
lcall
sub
sbb
ret
mov
das
aaa
xchg
fisubs
xchg
jle
xor
out
shll
mull
cmovg
fnsave
lcall
inc
aam
fcomip
lea
lea
jnp
jle
fisttpl
xchg
inc
pop
outsl
jb
add
cmpsb
cmp
testl
jge
in
cltd
jmp
pop
out
push
jmp
mov
stos
pop
imul
inc
mov
mov
outsl
xor
test
imul
pop
je
mov
pop
in
add
mov
push
out
sbb
dec
leave
cmp
pop
jno
or
sbb
jle
rsqrtps
cltd
loopne
or
inc
pop
inc
aad
negl
lahf
push
ret
dec
mov
adc
aaa
and
sub
cs
cmp
add
out
jp
xor
flds
dec
addr16
pop
inc
pop
outsb
and
out
and
inc
xchg
jle
adc
push
pop
mov
cld
std
stos
cmp
aas
jg
repnz
lods
mov
xchg
jno
jno
mov
jge
hlt
in
nop
jle
loope
out
or
mov
sub
aam
fidivrl
xor
mov
push
cmp
mov
inc
dec
into
dec
sbb
inc
ret
mov
xlat
mov
rcr
mov
mov
adc
mov
movsl
lea
repz
mov
in
mov
push
sub
push
jb
out
xchg
hlt
sbbb
cmp
rorb
stos
push
sti
andps
push
out
push
or
push
inc
clc
std
leave
in
push
dec
xlat
jmp
and
bnd
xor
xchg
fstps
sub
lods
mov
adc
adc
and
pop
aas
sub
sbb
orb
mov
stos
in
cmp
fcmovbe
test
sti
push
push
xchg
mov
addl
or
cmp
icebp
daa
fdiv
test
sbb
mov
mov
mov
test
mov
cli
cmpl
jo
loop
fcmovbe
les
mov
ficoms
into
push
sub
loop
cld
std
fs
sub
sbb
mov
inc
movsb
push
test
pop
mov
test
inc
out
mov
mov
pop
push
repnz
or
or
mov
dec
stos
int3
sbb
mov
xor
pop
loopne
push
int
mov
mov
jno
mov
lods
inc
pushf
or
push
adc
push
cmp
outsl
out
cmp
inc
mov
popf
and
inc
nop
outsb
repz
xchg
aas
jb
lods
jnp
and
mov
leave
xor
insb
clc
mov
rcrb
pusha
stc
out
add
out
and
jnp
push
mov
jmp
add
popf
mov
inc
or
in
leave
and
xchg
gs
mov
jge
mov
stc
adc
andb
arpl
aaa
testl
in
cld
pop
lods
push
cmp
inc
jae
into
out
lahf
adc
pop
xlat
sub
in
popa
mov
jae
scas
fwait
adc
out
test
mov
jmp
mov
paddsb
cmpsb
or
loop
push
aaa
and
xor
xor
push
ja
adc
dec
dec
cli
add
test
pop
mov
mov
cmpsl
scas
pop
and
movsb
sbb
pushl
sub
xor
mov
mov
movsl
pop
xchg
in
js
xchg
loope
out
fs
cmpsl
and
lcall
inc
mov
sub
shl
in
sti
sub
mov
fistpll
lds
and
xchg
test
jbe
rorl
ret
pop
adc
cmc
and
or
lea
jns
sarb
int3
lret
imul
iret
clc
xchg
lret
sub
cmpl
lret
imul
lret
jne
sub
xor
and
pushf
push
dec
ds
mov
into
jmp
mov
jnp
jae
orb
push
iret
ljmp
push
int
sbb
cmp
push
cltd
out
mov
aaa
aas
jb
sbb
jb
aaa
pop
les
out
or
lret
inc
int
mov
lock
add
or
fildl
jle
push
add
movsb
scas
or
push
push
mov
js
inc
pusha
jl
xorb
scas
or
adc
addr16
mov
addl
add
ja
sahf
rolb
add
adcl
mulb
lods
jl
jae
jl
jae
cwtl
jl
jmp
and
mov
fcomps
push
in
push
lahf
or
inc
enter
xor
movsl
inc
inc
nop
insb
xchg
cmpsl
lret
sub
xchg
push
push
or
pushf
orb
push
movsl
lock
inc
mov
pusha
lods
push
push
lods
ds
mov
push
adc
and
xlat
aaa
pop
mov
push
inc
out
and
mov
pop
pop
fsub
jecxz,pt
cmp
dec
aam
scas
incb
sub
loopne
jae
xchg
scas
mov
mov
mov
or
cmp
mov
push
add
fists
sbb
mov
ficomps
out
fsubp
rorl
das
adc
push
push
adcb
jg
test
push
imul
sbb
lret
fisubrs
sub
clc
mov
mov
jb
cmp
cltd
jae
insb
inc
jo
dec
inc
clc
pop
cmpsl
int3
int
push
push
add
in
xchg
loopne
jo
addb
mov
xchg
ss
mov
jg
lods
imul
mov
aam
xor
mov
push
inc
in
pop
mov
popf
mov
inc
iret
ds
add
xor
and
xchg
jge
and
mov
jne
mov
insb
shrl
adc
pop
out
ret
push
js
pushf
cmp
push
inc
mov
jno
xchg
inc
push
lds
mov
repnz
sub
stos
fsubrl
xlat
sub
scas
xchg
mov
mov
jb
mov
sub
pop
adc
faddl
dec
push
or
lret
mov
push
addl
pop
xor
out
mov
sbb
sbb
imul
cmp
dec
add
lods
pop
arpl
imul
jno
repnz
pop
xor
add
or
and
insl
icebp
push
or
pusha
int3
pushf
mov
pop
adc
fdivp
dec
fsubr
add
jno
sub
aas
ret
or
cli
stc
mov
push
pop
xchg
lock
clc
insb
adc
dec
jne
push
loope
stos
xchg
push
mov
xchg
jns
mov
outsl
popf
inc
mov
sahf
cmp
sbb
mov
aam
cld
ss
push
es
jno
adc
add
les
ret
int
incl
cltd
mov
xchg
and
aad
shll
mov
sub
daa
cs
mov
gs
sbb
ret
add
jns
pop
dec
mov
add
or
sahf
adc
cmp
jge
fmul
mov
call
imul
push
or
mov
mov
mov
jge
jno
lods
enter
loope
xlat
ret
pop
sbb
cmp
lret
push
das
lret
cmp
pop
adc
and
lcall
fstps
cmp
mov
and
sub
incl
cmpsb
push
aas
adc
ret
loop
movsl
shlb
push
out
hlt
sbb
jp
mov
cwtl
jb
test
imul
in
cltd
jmp
sub
lahf
mov
pop
popa
or
pusha
cwtl
ret
into
pop
leave
cltd
pop
jns
jle
sub
jmp
leave
into
sbb
in
nop
xor
inc
dec
mov
push
adc
sbb
mov
nop
adc
and
ds
lret
dec
lock
pusha
xchg
inc
push
or
push
lret
jmp
arpl
ljmp
pop
stos
mov
aad
sbb
dec
xchg
loop
mov
jg
push
mov
cmp
test
pop
das
out
jle
insl
dec
lret
rol
insl
gs
rorl
mov
sub
ss
xchg
push
jbe
sbb
loopne
call
imul
add
cli
mov
cmovs
or
adc
push
fisttpll
ds
ljmp
pop
and
add
xchg
stc
das
sub
mov
push
jmp
dec
insb
cmpsb
or
aam
fistl
xor
push
mov
arpl
decl
imul
xor
xchg
or
mov
or
add
adc
mov
lds
out
inc
dec
mov
lea
inc
mov
mov
mov
cmp
push
or
push
xor
fcoml
pop
adc
inc
cmp
loop
daa
push
add
mov
pushf
cmc
mov
push
cmp
jmp
push
and
cli
stos
push
ljmp
mov
jne
or
gs
popf
add
ljmp
push
mov
jmp
adcb
adc
xchg
les
das
test
leave
inc
fimull
dec
dec
fildl
ret
in
addl
daa
les
dec
add
jp
mov
add
sbb
enter
add
push
pop
pop
mov
loopne
mov
jae
or
xchg
push
adc
out
aaa
mov
mov
out
repz
push
fdivrl
in
mov
or
mov
mov
add
dec
sub
mov
cmp
add
jo
cmp
fdiv
out
cli
push
and
push
pushf
mov
repz
imul
adc
cmp
rolb
push
mov
int3
dec
mov
xchg
sbb
sub
pop
ret
sbb
pop
xchg
jo
shrb
cs
sbb
fisubl
and
popa
mov
cmp
stos
int
bound
imul
inc
xor
cmp
sar
push
cltd
pop
mov
or
jg
stos
sub
xlat
mov
jns
xor
inc
fstl
aad
leave
aas
pop
lret
cmpsb
cmpsb
mov
cmp
shr
add
pmaxsw
push
iret
cwtl
ret
lods
or
mov
lds
xor
dec
mov
push
add
cwtl
dec
adcl
es
mov
mov
push
xchg
lcall
mov
xchg
insl
int3
sub
and
jbe
int3
pushf
pop
jecxz
imul
xchg
cmp
fucomp
cmpsb
andb
sub
jae
inc
pop
mov
pop
lahf
mov
jnp
cwtl
ficoms
test
stos
cli
bound
aaa
hlt
push
adc
dec
mov
sbb
pop
popf
push
rorl
cmpsl
lock
mov
jbe
fneni(8087
sub
xorl
push
add
xor
pop
scas
scas
sbb
nop
rcll
xchg
xlat
or
icebp
out
addr16
scas
mov
not
dec
mov
cld
faddl
jne
clc
xchg
inc
mov
sub
mov
dec
mov
push
lock
or
rolb
sbb
bound
out
mov
in
daa
inc
push
insb
in
rclb
xor
push
adc
jo
inc
sti
and
inc
es
xchg
lock
fcmovne
inc
inc
xorl
mov
fcomi
ljmp
lcall
push
pusha
rorl
test
pushf
out
xchg
dec
push
outsb
imul
mov
push
sbb
jle
inc
pop
psubsb
sub
jb
pop
sub
fcomp
setno
or
lcall
xchg
pop
or
movsb
ljmp
es
add
add
push
xchg
xor
icebp
lret
int
sub
imul
lds
xor
cwtl
std
out
fisttps
imul
sbb
lahf
fldt
add
cltd
fisttpl
leave
pusha
cmpsb
cli
adc
pusha
lea
stc
push
adc
fstps
nop
int3
and
js
push
push
jo
jl
mov
popf
in
ret
fiaddl
mov
or
xchg
mov
cmp
or
pop
fcomip
jno
sahf
and
cmp
xlat
xor
mov
insb
inc
bound
push
cmp
loope,pt
into
punpckhwd
xor
mov
jb
fmul
xor
xor
je
add
enter
fsubrl
arpl
adc
int
mov
sbb
outsb
mov
aaa
es
imul
add
pop
xchg
and
int3
scas
push
pushf
jno
dec
push
sbb
jae
cmp
aas
sbb
fldt
push
shlb
lret
or
sbb
xlat
mov
ja
inc
sub
pushf
lds
cltd
aaa
inc
mov
mov
sahf
dec
inc
cmp
push
in
cli
xor
fdivs
and
sarb
mov
bnd
test
lods
sti
in
out
cmp
dec
xor
xor
xor
mov
fcompl
add
mov
dec
xor
outsl
push
pop
popa
jns
push
mov
pop
imul
mov
fwait
inc
inc
outsb
xor
jnp
mov
and
xlat
test
inc
cmc
inc
dec
jo
dec
pop
dec
pop
sub
dec
pop
mov
mov
sub
stos
les
adc
push
cmp
pop
addr16
js
or
lret
and
clc
sub
daa
push
xor
stos
mov
sbb
sbb
xchg
clc
sub
push
ljmp
rorb
push
into
jne
dec
pop
push
pop
lcall
mov
jle
pop
sbb
sub
jmp
inc
fimull
clc
movsb
sub
and
outsb
and
or
inc
insl
stos
int3
fmul
lret
mov
pop
int3
lea
pop
rcrl
mov
adc
inc
xchg
pop
fstpl
pop
hlt
xor
cwtl
jle
pop
int
sarl
jle
push
stos
aam
les
in
mov
mov
andb
sbbl
aam
data16
pusha
sti
fidivrl
test
or
mov
clc
push
sbb
ror
jl
xor
mov
cmp
xchg
adc
aaa
out
fiaddl
shll
lret
mov
addr16
sarb
cli
dec
mov
push
push
add
jmp
push
push
dec
jg
inc
mov
cli
dec
and
sub
sti
fsubrl
lret
jo
loopne
push
ret
in
push
dec
xchg
lea
lret
inc
sbb
addl
push
mov
or
mov
mov
enter
fdivl
jae
daa
fistpl
jl
mov
mov
pop
fcompl
ja
xor
jns
mov
sbb
setge
jo
fsubrl
inc
mov
xchg
js
outsb
fists
add
leave
rcr
mov
mov
repz
sub
xor
add
fsubs
xor
xchg
je
or
jae
add
fwait
mov
add
add
lods
jecxz
xchg
or
fldenv
xchg
scas
or
xlat
pop
mov
jmp
out
cmpsl
sti
xchg
inc
add
fisttps
into
dec
mov
or
pop
mov
push
xchg
out
lret
pushf
cli
mov
lret
sbb
adc
aas
xchg
add
fstpl
es
xlat
mov
xchg
mov
je
push
push
scas
push
addr16
push
xchg
sub
pop
pop
addr16
and
xchg
mov
xor
call
jno
iret
outsl
in
jp
rcrb
cmp
xor
in
ret
push
rcr
stos
sbb
pop
imul
xchg
xchg
stos
filds
and
and
sub
test
inc
add
xchg
stos
enter
movsb
or
jno
jb
push
jne
pop
pop
push
mov
push
std
fiaddl
mov
dec
mov
push
fimull
fbstp
mov
mov
lea
data16
es
frstor
mov
imul
int
sub
dec
and
pop
int
xor
xor
pop
aas
ret
push
xchg
enter
test
cmp
scas
sbb
mov
lretw
mov
lahf
xor
adc
mov
push
movsl
loope
fwait
jg,pn
pusha
add
and
jg
xchg
cmp
vmwrite
ficoml
pop
fwait
adc
ret
stos
mov
or
into
adc
dec
xchg
ret
push
movl
inc
xchg
enter
sub
mov
cmp
sub
jae
jnp
xor
bnd
loopne
mov
dec
dec
inc
sysret
gs
divl
sub
fcomps
inc
pop
xchg
jne
mov
xor
xchg
inc
or
jecxz
ret
lods
popf
ds
jbe
xchg
sub
inc
push
and
cmpsb
jb
inc
lods
nop
and
adc
nop
cli
lret
sub
in
add
jmp
cmpl
cs
sbb
orl
xor
jp
mov
jle
das
sbb
adc
les
inc
das
push
jno
mov
sbb
xor
cmp
pop
push
sbb
mov
xchg
xor
sbb
stos
xchg
jne
in
cmp
mov
mov
hlt
and
iret
roll
xchg
fsin
in
pop
inc
lahf
fadds
xchg
test
mov
cmpsb
aam
mov
adcb
cmp
jne
xchg
xchg
je
bndldx
mov
hlt
xchg
mov
mov
mov
adc
mov
xchg
pop
adc
xchg
aas
stos
sbbl
imul
loope
mov
push
push
fidivrl
inc
mull
pop
adc
add
mov
lcall
dec
sub
jl
push
adc
xlat
addr16
outsb
arpl
out
or
and
mov
push
pop
mov
xor
push
adc
scas
sbb
shrb
fldt
xchg
mov
leave
int3
out
sbb
mov
cs
sub
push
inc
and
mov
lods
push
arpl
xor
xor
pop
loopne
and
aam
xchg
cmp
sbb
div
xor
mov
bound
sti
push
dec
sti
into
sub
pop
es
adc
xor
xor
push
jg
push
cmc
inc
sub
cmp
das
addb
xchg
jnp
negl
rclb
and
bound
adc
jb
mov
mov
shll
and
push
jnp
arpl
pop
pop
inc
hlt
outsl
fstps
fst
popa
insl
xchg
inc
add
icebp
xchg
in
pop
es
cmpsl
fnstcw
enter
mov
cmpsl
pushw
movsl
push
mov
test
iret
mov
xor
push
sbb
out
push
pop
mov
mov
movsb
ss
gs
aad
mov
sub
xor
cmp
add
shll
xor
mulps
test
and
fmull
or
loop
push
xchg
sbb
stos
push
inc
cmpsb
mov
and
test
std
scas
test
mov
roll
fimull
inc
and
clc
adc
mov
in
fwait
cmpsl
iret
mov
ror
mov
sbb
loope
pop
or
xor
inc
test
sub
cmp
aas
out
lods
jle
jns
repz
pop
enter
sbb
in
movsl
xchg
inc
xchg
into
adc
enter
sbb
mov
cmp
sub
jl
loopne
push
lods
outsb
push
aad
cmp
fcomi
sbb
int3
outsl
mov
std
shll
sahf
push
mov
call
sbb
add
mov
enter
js
sahf
das
mov
sar
aaa
sbb
lret
xchg
loope
add
orl
pop
jmp
cmp
sbb
clc
jle
jns
ja
and
ja
inc
insb
imul
xor
pop
lods
bound
xchg
mov
in
jo
lahf
into
mov
pop
xchg
cmpsb
jmp
sub
adc
fiaddl
mov
xchg
dec
sbb
nop
loop
enter
push
in
jbe
jmp
pop
mov
pop
popa
cmp
inc
push
xorl
popl
fldt
jae
push
adc
js
mov
xchg
into
outsl
adc
shlb
mov
pop
fsubr
inc
inc
outsl
mov
and
fbld
mov
test
ds
out
xlat
out
cmp
pop
cld
cmp
sbb
stc
pop
adc
xchg
dec
rcr
aaa
out
scas
mov
into
and
add
mov
xor
sbb
mov
rorl
arpl
xor
inc
mov
inc
mov
adc
sahf
xchg
cmpl
scas
add
scas
inc
loop
push
jecxz
mov
mov
or
push
add
add
mov
ss
mov
scas
ja
mov
jg
enter
and
jge
push
sub
or
mov
jno
int
inc
pop
sbb
jmp
pop
jp
cmc
xchg
andl
sub
fcmovnbe
lahf
idivb
bound
sub
fnsetpm(287
inc
out
and
in
bound
andb
scas
das
in
fs
sbb
fisubrl
into
xchg
dec
pushf
int
mov
mov
inc
and
cmpl
sbb
out
jecxz
inc
outsl
jge
movl
mov
inc
adc
std
push
pop
push
mov
popa
and
dec
jnp
or
cmc
add
std
es
push
inc
rcrb
into
lahf
dec
cmp
test
fidivrs
shrl
popf
cmpsl
fstpl
imul
fwait
mov
cmpb
xor
pop
sahf
mov
mov
test
scas
mov
sbb
out
push
je
aas
inc
clc
daa
stc
movd
mov
push
cmp
es
call
lcall
cs
loopne
push
fists
loope
aaa
or
into
fnstcw
aas
pop
jp
int3
leave
mov
pop
popa
fsubl
dec
in
xchg
add
shlb
or
xor
addr16
add
idivb
jb
cwtl
sbb
outsb
lods
das
sub
add
and
fs
adc
ret
add
mov
out
or
loop
ds
sahf
loop
mov
insb
xchg
push
out
xorb
or
lods
cmp
jle
jae
mov
sub
inc
call
cmp
inc
push
dec
fldl
enter
add
xchg
loopne
cmpsb
push
mov
inc
movsl
pop
js
jbe
insb
xlat
mov
ret
je
movsl
adc
sbb
xor
lea
dec
adc
fisubl
jbe
jno
cli
sub
sub
lea
mov
daa
lss
or
scas
insb
mov
cmpsl
in
pop
mov
in
enter
test
cli
inc
outsb
mov
mov
mov
rorb
lock
rcrl
lods
lock
test
addl
mov
mov
or
jae
lret
xlat
inc
je
fcoms
jns
stos
ds
and
out
mov
loopne
sbb
shrb
popl
mov
clc
inc
sbb
adc
lret
mov
faddl
and
cmp
pop
mov
cwtl
nop
addl
lds
add
jmp
sub
ljmp
push
cmp
dec
scas
outsl
insl
adc
stos
jmp
repz
dec
lret
loopne
xlat
ja
ret
xlat
sub
out
das
in
orl
pop
jns
shlb
xchg
dec
mov
rcll
out
and
xor
mov
adc
jg
pop
fnsave
xor
sti
sub
icebp
xchg
push
jae
adc
imul
lcall
aaa
ja
mov
inc
lcall
and
adc
stos
test
cmp
les
mov
pop
out
cmp
out
aam
mov
push
fcompl
dec
mov
mov
mov
popf
mov
jnp
in
test
stc
sbb
add
xchg
mov
mov
mov
popf
call
lret
ljmp
add
insl
mov
pmaxsw
fadds
rorb
lahf
xchg
fsubrl
mov
repz
cs
dec
push
sbb
mov
lock
sbb
cld
sbb
movsl
xchg
adc
test
mov
ljmp
lds
icebp
sbb
mov
cmp
or
and
mov
sub
testb
adc
or
adc
ds
ja
push
and
push
xor
ss
repz
ret
test
imull
repz
sub
scas
mov
xlat
xchg
out
aas
mov
in
mov
mov
mov
push
arpl
dec
ljmp
aas
rcr
mov
mov
pushf
or
jo,pt
cld
and
je
mov
add
icebp
nop
cltd
xchg
imul
cmpsl
out
sub
or
dec
insl
scas
inc
icebp
ljmp
jecxz
inc
ja
xchg
scas
dec
lahf
icebp
call
mov
xchg
push
fisttpll
lods
mov
adc
mov
das
adc
cmc
cltd
dec
mov
pushw
cmpsl
je
lock
das
scas
gs
jle
dec
add
adc
add
daa
lea
sub
fildll
cmp
jg
jmp
xchg
aaa
jbe
addr16
cwtl
mov
scas
jecxz
rclb
lods
ljmp
mov
pop
je
push
in
push
mov
repz
mov
sbb
fwait
push
or
sbb
jmp
cmpsb
push
in
cwtl
roll
jb
inc
das
xor
stos
xor
mov
adc
aaa
movsl
cmp
inc
xor
repnz
mov
sub
mov
sbb
fbld
jnp
jmp
mov
iret
or
sub
dec
mov
scas
int
cmpb
push
adc
push
in
xchg
and
push
divl
shrl
adc
jp
or
inc
sub
repnz
xchg
sbb
insl
dec
insl
mov
push
mov
sub
xor
xchg
shlb
sahf
unpckhps
rcrl
and
xchg
clc
aad
xor
sbb
mov
and
adc
jmp
cmpsl
fildl
jl
pushl
adc
push
sarl
xchg
xchg
mov
daa
xor
loop
cwtl
aad
mov
gs
mov
sub
iret
repnz
rcr
mov
fs
cli
inc
mov
xchg
cmc
int3
aad
or
push
int3
xchg
cmp
dec
inc
test
stos
stos
test
scas
push
jle
push
add
push
xchg
into
dec
mov
mov
dec
popf
inc
cmp
fisttpl
in
imul
lock
gs
cli
or
adc
in
cltd
mov
adc
lret
xchg
repnz
je
adc
dec
fmuls
loope
mov
cmpsb
insb
call
data16
and
jmp
sub
lods
adc
shlb
cmovnp
xchg
cld
dec
xchg
insb
rclb
inc
sub
jp
imul
xor
jns
mov
outsl
adc
xchg
mov
sbb
daa
scas
jnp
cmpsl
push
adc
aad
cs
bound
cmp
cmp
push
fadds
pop
data16
add
jbe
fs
testl
aas
movsl
imul
lods
aas
stos
dec
push
test
jmp
rol
xchg
dec
pop
inc
test
adc
pusha
shlb
mov
lcall
fmull
iret
nop
and
fmuls
and
mov
movsb
loop
add
mov
mov
cwtl
loopne
mov
xor
loope
mov
mov
xor
sub
mov
lahf
cmpsl
push
in
inc
xchg
ja
push
leave
lds
shlb
push
or
outsb
dec
sahf
mov
aaa
jae
push
aad
sub
fcomps
lea
ja
push
or
adc
xchg
xchg
stc
or
test
push
nop
push
test
leave
push
dec
arpl
mov
outsl
orb
cmpsb
pop
sub
push
xchg
cmp
xor
mov
mov
imul
lcall
aad
cld
out
ret
fcomip
push
data16
outsl
stos
rcr
adc
lret
mov
out
scas
inc
cmp
dec
leave
push
notl
out
imul
and
xor
js
inc
repnz
jmp
add
lods
and
jns
fldl
subb
inc
pushl
lret
xchg
fnstsw
add
data16
stc
fdivrl
scas
xchg
stos
iret
adc
clc
outsl
aaa
adc
jo
xchg
xchg
pop
sahf
sbb
jns
dec
xor
inc
adc
pop
xchg
pop
stc
imul
pop
rcrl
loope
loope
movsl
adc
cmp
xor
push
test
rolb
fsts
inc
ss
shrb
clc
jl
lahf
call
popa
or
loope
lret
mov
inc
insb
mov
inc
lds
add
xor
jl
xchg
testl
cmp
bound
inc
sbb
xlat
movsb
adc
aad
sub
xor
lcall
add
pop
pop
mov
and
fnstsw
mov
or
test
dec
scas
or
out
test
push
sti
cwtl
ret
int
stc
sub
cmc
xor
sahf
jg
and
mov
std
ficomps
js
jo
aam
popf
xor
lcall
push
cmp
sub
xor
add
pop
add
dec
mov
and
rcrl
pop
dec
xchg
sarl
rep
lret
and
inc
xor
sahf
pop
jne
dec
cmp
sub
loopne
cs
mov
inc
mov
jo
loopne
test
pop
movsb
inc
lahf
mov
mov
push
and
push
push
adc
mov
inc
xor
repz
gs
and
inc
push
pop
xchg
adc
popf
into
sahf
fisubl
push
cs
orb
lods
jecxz
mov
mov
sub
outsb
into
shll
out
mov
xchg
mov
dec
add
cmp
xchg
mov
and
es
or
mov
or
loopne
inc
lock
les
push
ds
inc
cmpsl
dec
dec
xchg
push
int
mov
mov
out
xchg
dec
add
test
mov
aas
mov
loopne
cmp
mov
leave
es
cwtl
syscall
mov
test
shrl
jbe
dec
fs
dec
mov
cltd
jo
jecxz
mov
je
test
mov
stos
inc
sbbl
cmpsl
lods
jo
outsl
push
lods
adc
outsl
js
sbb
pop
lcall
shrb
inc
xchg
filds
and
cmpsl
xchg
scas
daa
sbb
sahf
add
repnz
stos
lret
adc
push
mov
fwait
addr16
std
movsb
xor
xor
sti
add
pushf
jecxz
dec
addr16
sbb
cs
mov
es
stos
cwtl
fiaddl
lods
sub
lds
mov
xchg
rcr
jecxz
push
add
clc
sarl
sbb
fdivrl
sub
jge
imul
in
push
leave
pushf
lds
das
cli
or
xchg
dec
mov
mov
clc
fsubr
and
scas
sub
mov
mov
sub
and
mov
mov
sbb
dec
mov
inc
sub
xor
aad
aam
mov
sbb
xchg
dec
fucomip
repz
rolb
mov
aas
xor
mov
dec
dec
das
mov
shll
xor
repnz
jb
and
sahf
incb
pop
cs
pop
push
adc
sbb
mov
sub
in
or
adc
arpl
outsb
cmp
inc
insl
pop
lods
rorl
test
mov
test
cmpsl
arpl
xor
inc
pop
stos
fcoms
stos
or
lcall
sbb
adc
sub
lods
cwtl
mov
insb
lock
lods
push
lcall
dec
xchg
lea
cmpsb
hlt
sub
mov
stc
xorl
or
or
mov
imul
add
jno
push
aad
mov
jg
push
mov
in
cmp
lods
aad
add
divb
pop
sti
insl
push
lea
leave
shlb
das
test
sbb
popf
mov
sbb
adc
pop
push
mov
sub
aad
xchg
push
xlat
imul
xchg
lock
mov
and
std
scas
sbb
int3
nop
xor
test
pop
enter
test
scas
call
xlat
cmpsl
dec
add
fisubrl
add
dec
xchg
push
jno
loope
xor
jge
sbb
sbbb
adc
sbb
jl
inc
shlb
and
xor
mov
push
jno
xchg
int3
mov
mov
test
push
inc
dec
mov
out
cmpsl
pop
cmpsl
push
mov
test
outsb
sbb
aaa
xor
sbb
out
xchg
loop
xor
jg
adc
mov
sub
fcmovnb
jae
xchg
xor
pop
iret
xchg
mov
and
sbb
adc
adc
es
pushf
xor
int
fs
jnp
jp
push
psllw
daa
dec
das
test
scas
or
inc
call
or
cld
jo
or
xchg
mov
jmp
xchg
les
dec
push
mov
movd
dec
fst
cmp
aad
jns
xor
idivb
add
and
lods
das
rcr
aam
and
dec
repnz
pop
push
stos
imul
xor
dec
aam
test
jl
and
push
dec
push
movb
dec
push
sti
cmp
pop
mov
pop
mov
pop
push
repnz
lcall
cmpsb
xchg
les
pusha
dec
mov
pop
push
mov
outsb
orb
push
mov
xchg
jb
xor
loopne
test
jo
or
mov
rorl
mov
sub
dec
sbb
faddp
and
loopne
cwtl
jp
fidivrs
add
scas
add
out
mov
pop
jge
sti
movsl
cmp
sub
xlat
cs
pop
stos
mov
cmpb
mov
add
xchg
decl
out
sub
loope
mov
cltd
ljmp
outsl
fwait
lods
push
out
test
add
mov
mov
mov
fsubr
xlat
icebp
or
pop
mov
rorb
and
and
cmp
pop
xor
mov
fidivs
scas
stc
jo
js
xlat
xchg
add
enter
push
jp
xchg
fiadds
in
mov
mov
sub
pusha
lods
mov
inc
ss
lahf
mov
dec
jno
xchg
push
push
sub
ror
push
movsb
push
sbb
jno
js
jne
mov
shlb
jmp
pushf
repnz
repz
pop
lret
mov
xor
icebp
mov
lahf
or
jl
int3
icebp
repz
mov
sbb
leave
adc
call
stos
test
mov
out
push
xchg
sub
loope
mov
push
clc
mov
add
push
int3
and
aam
test
cmp
xor
mov
jle
xchg
mov
inc
and
xor
push
dec
scas
or
push
xchg
loope
inc
dec
bound
push
cs
es
loopne
mov
lret
sbbl
stc
loop
pop
test
xchg
xor
jne
push
inc
sarl
jns
dec
das
cmp
mov
cmp
or
fsubrs
iret
jecxz
adc
ficoms
and
outsb
dec
dec
push
das
es
dec
and
sti
mov
xor
lea
subb
pop
add
std
pop
enter
pop
sub
sti
lods
daa
cmp
call
xlat
data16
xor
sub
lret
jge
das
xor
and
pop
jno
jbe
push
sarb
mov
sahf
testl
in
pop
test
decl
push
adc
sbb
and
inc
adc
sbb
repz
out
outsl
jbe
int
test
mov
fsubl
test
out
mov
fdivl
cwtl
lods
cld
testl
dec
jge
inc
mov
xor
ss
sbb
sbb
pushf
std
adc
addr16
sub
lret
dec
sbb
mov
sbb
mov
push
stc
rolb
pusha
ret
or
inc
pop
dec
scas
mov
and
fwait
mov
cmp
addb
pop
mov
push
xchg
stos
jne
in
out
test
in
cld
jo
push
sub
add
push
add
int3
or
sbb
inc
dec
and
mov
and
sub
pop
xchg
xchg
adc
sbb
out
jae
addr16
xchg
loop
sahf
movsb
cld
out
jb
es
int
lods
xor
xlat
dec
les
pusha
mov
adc
loope
out
or
into
mov
xchg
fwait
shll
jg
sbb
cli
into
pop
fimull
xor
loope
push
or
movsb
push
cmp
les
push
inc
in
out
jmp
ret
xor
roll
adc
cmp
aad
mov
jecxz
sbb
dec
dec
mov
rclb
call
bound
jl
pop
movsb
pop
mov
in
ret
test
pop
in
sbbb
sub
or
hlt
and
cs
repz
loop
push
lods
push
ud0
mov
mov
dec
sarb
insl
test
test
cmc
or
das
mov
xchg
lahf
frstor
jno
jno
sbb
ds
and
out
sub
test
push
xor
mov
adc
inc
imul
outsl
das
ret
xchg
cmp
iret
lret
rcrb
push
sbb
sbb
mov
in
adc
add
xor
add
int3
mov
fwait
jg
pop
fucomp
pop
loopne
lret
outsl
sub
mov
ficoml
mov
loop
push
pop
out
cltd
cmpsb
imul
mov
jns
nop
inc
sarl
and
dec
pop
mov
pop
cmp
mov
dec
or
push
add
rolb
mov
lock
sbb
cli
cmp
xchg
dec
lahf
xchg
and
cmp
pop
xchg
stos
add
push
std
mov
cli
cltd
inc
in
fwait
outsl
mov
add
mov
jle
icebp
shlb
mov
fdivl
xor
rcrb
cmp
dec
loopw
mov
and
jb
inc
fwait
mov
dec
mov
sub
adc
aad
inc
pop
hlt
pop
cmp
in
pop
and
movsb
jp
aam
das
orl
cs
xchg
sbb
xor
bound
jne
ss
lock
cs
adc
xlat
loopne
ja
dec
mov
pop
push
hlt
scas
cmp
and
lock
sbb
push
xor
fs
cmp
adc
iret
fidivrs
mov
push
mov
cwtl
xchg
std
xchg
mov
bound
popf
rolb
jno
fstpt
into
fdivr
mov
inc
gs
push
mov
les
pop
push
mov
testl
mov
test
cs
adc
iret
jp
cmc
mov
jb
jo
sbb
sbb
sub
sub
arpl
iret
pusha
lcall
and
xor
enter
and
out
movsl
lea
sbb
xor
inc
and
adc
jb
in
into
lret
test
fdivr
rolb
mov
adc
shrb
cltd
inc
push
cmp
mov
pop
xor
push
addr16
inc
mov
mov
xlat
and
pop
stos
ret
ja
ret
or
inc
push
mov
mov
pop
lret
pop
mov
inc
andb
xchg
xor
xchg
lods
scas
cltd
das
aas
or
xlat
repnz
mov
into
fs
sub
aas
push
aaa
fcoms
sti
and
cld
int3
out
lds
jae
adc
daa
lock
popf
into
xorb
pusha
mov
jmp
xor
orb
mov
cli
mov
rcrb
mov
js
lret
sub
outsl
les
and
insb
ret
push
mov
data16
lret
cwtl
xchg
mov
jmp
fldt
push
arpl
mov
xchg
or
dec
and
or
dec
imul
cmp
xchg
dec
enter
les
mov
aad
add
adc
cmpsb
dec
push
xor
jbe
mov
mov
fstps
jge
lea
fstpt
inc
xchg
popa
dec
rorl
int3
jbe
push
ror
push
mov
pop
pop
pop
testl
cmpsb
inc
add
xor
push
xchg
push
jle
cltd
or
repnz
dec
out
dec
pop
jle
out
and
add
xor
rcr
sbb
inc
xchg
push
sub
repnz
cltd
push
mov
xchg
ja
dec
shlb
negb
jge
loop
jp
xchg
sub
call
js
cld
push
aaa
sub
mov
bnd
cli
nop
adc
fcomi
jecxz
lcall
mull
ss
cs
add
flds
aam
subl
mov
inc
pop
dec
fsubrs
xchg
ret
jle
je
mov
inc
xchg
and
aad
push
or
test
sub
dec
scas
push
add
daa
and
in
mov
jl
add
fsubrp
pop
int
push
inc
andb
adc
daa
div
loop
stc
lahf
stc
jb
xchg
push
inc
cmc
out
mov
jle
movsb
les
xor
cmp
xchg
mov
rclb
sti
sti
fnsave
pop
fidivrl
inc
dec
xorb
adc
jmp
sub
mov
into
or
xor
add
outsb
push
mov
jns
jmp
pusha
mov
test
test
lret
sub
adc
aaa
insb
jno
addr16
mov
sbb
ja
dec
arpl
mov
lock
add
xlat
mov
jbe
in
mov
dec
lods
cli
and
push
adc
imul
mov
sub
in
aas
mov
mov
xor
inc
xor
aad
movsb
incl
subl
popa
cmp
and
cltd
fmull
hlt
adc
cmpsl
cmp
cmp
sarb
inc
cmp
rorl
mov
dec
mov
sbb
ficoms
cmp
ss
or
loope
test
jmp
test
sbb
lock
jmp
ljmp
lea
pop
imul
das
stc
push
sub
xchg
scas
cli
adc
mov
popa
gs
sbb
stc
cmp
fdivr
sbb
push
jb
mov
xchg
xchg
in
dec
dec
nop
mov
enter
stc
add
mov
sbb
cmpsl
and
mov
subl
sub
into
adc
mov
push
lahf
pop
jne
add
jnp
call
test
out
xchg
dec
or
leave
or
in
ljmp
or
adc
leave
ja
mov
mov
stos
add
loope
ret
fwait
mov
xor
pop
outsb
aaa
pop
jbe
xchg
mov
scas
movsb
pop
rcrb
pop
xchg
pop
push
mov
mov
ja
cmp
ds
cld
imulb
test
pop
fdivl
aam
adc
sarb
in
loop
add
std
out
mov
fbld
push
adc
mov
subl
pop
stos
ret
mov
daa
ds
jns
lret
mov
push
out
sbbl
test
sarl
cmp
outsb
and
pop
ljmp
sbb
jecxz
adc
int
inc
rcrl
ret
inc
inc
lret
lods
lds
outsl
clc
jb
loopne
dec
mov
dec
push
mov
scas
shr
mov
sbb
xor
or
sub
push
xchg
and
sahf
xchg
and
outsb
jecxz
popf
in
xorb
jnp
inc
mov
into
xchg
fistpll
sub
pop
ret
xor
inc
mov
lds
adc
sbb
shll
lods
sub
imul
je
lret
jno
sarl
fsubl
cmp
xchg
ret
outsl
decl
jb
icebp
inc
loopw
leave
push
mov
and
jecxz
cmp
jmp
arpl
stc
out
addl
out
xchg
push
out
stc
inc
pop
or
inc
mov
fimull
xchg
inc
mov
pop
xchg
aaa
fstp
push
scas
inc
sub
cmp
pop
std
lret
imul
rcll
add
sub
std
ss
nop
dec
dec
das
pcmpgtb
xor
jbe
or
jne
aas
push
dec
xchg
stos
push
or
dec
pop
shll
inc
popf
xor
iret
test
sub
mov
jle
lret
xchg
pop
cmpsb
cld
or
and
out
stos
lret
pop
out
into
pop
add
inc
movb
lds
mov
jle
daa
imulb
sbb
pusha
fwait
ror
cli
scas
out
and
adc
out
shrl
scas
xlat
xor
sub
add
and
in
roll
scas
lret
pushf
cmpsl
iret
pushf
frstor
std
lahf
cmpsl
hlt
out
sub
cli
pop
rep
out
jle
adc
adc
cmp
mov
dec
push
pop
lea
jb
cs
dec
out
in
dec
out
hlt
ret
rcll
shrb
mov
mov
adc
fs
push
dec
sub
pushf
mov
inc
orl
call
sub
cltd
adc
pushl
je
mov
rorb
mov
aam
and
jl
mov
int3
sbb
xchg
fs
add
loopne
outsb
sti
call
pop
sub
int3
cmp
shlb
test
ja
xor
xor
sti
lcall
lods
jg
sub
cli
sbb
lahf
or
hlt
pop
rcll
test
adc
ret
push
cmp
mov
insb
lods
jne
add
cltd
ret
ret
pop
out
je
dec
push
cli
cld
jmp
inc
cmp
shll
cmp
cltd
jno
mov
pusha
dec
notb
aaa
mov
sbb
rcrl
inc
or
sub
or
test
pop
test
pop
mov
inc
js
lods
aaa
xor
cmpsb
iret
out
pop
test
pop
jge
add
sub
push
sbb
jno
cmp
mov
pop
int3
push
cmp
shlb
or
cli
pop
and
data16
cmp
leave
jnp
and
int
je
scas
xchg
aam
jmp
popa
push
mov
push
imul
adc
push
arpl
out
pop
dec
mov
repz
arpl
fcmovnbe
cmpsb
cmp
xor
sub
in
and
cld
cs
aam
jns
cld
imul
ret
jecxz,pt
paddw
hlt
cmp
sub
pop
lds
subl
les
pop
jns
rcrb
neg
and
bound
xchg
or
pop
call
jb
testl
ror
or
insl
pop
sub
mov
in
fwait
jae
jge
mov
dec
in
das
xor
push
movsl
cmp
mov
fcoms
rclb
sahf
or
adc
loope
int
xor
pop
push
clc
mov
dec
stc
push
bswap
sbb
int
into
pop
xor
xchg
mov
pop
loop
jo
enter
stos
insl
xchg
mov
fwait
mov
aam
jo
and
repnz
pop
jp
add
dec
sbb
int3
rcrb
pop
inc
mov
jne
dec
pop
loopne
out
nop
adc
xor
movsb
pop
jmp
decl
sbb
pop
pop
dec
sub
jo
in
test
jle
mov
pop
push
pop
mov
movsb
and
fwait
jmp
jecxz
or
xchg
lret
inc
mov
movsl
cmp
adc
sub
push
sbbl
fwait
mov
or
data16
nop
push
lea
xchg
cmp
xchg
and
pop
mov
cmpsb
loope
fnstcw
pop
mov
outsb
push
scas
dec
jae
push
int3
push
sarb
out
jnp
xor
ja
dec
fwait
fisttpl
rolb
and
dec
add
adc
inc
dec
push
frstor
jnp
push
cmpsb
and
sbb
test
fnsave
xor
xchg
sbb
cmp
insl
stos
ret
mov
dec
push
loopne
xlat
stos
pop
push
xor
dec
rorl
add
insl
sub
fidivrl
jbe
stos
fs
scas
movsl
ret
jo
jne
lock
mov
jns
sarl
mov
cmpsl
mov
xor
or
adc
test
and
pushf
and
cmp
lret
outsl
jl
fwait
int3
cmpsl
dec
cmp
sub
add
pop
sub
xlat
out
nop
push
cmp
or
aam
outsl
dec
mov
dec
lcall
dec
mov
scas
inc
and
es
xor
pop
test
adc
rclb
sbb
popa
mov
je
jmp
pop
lret
xorl
push
sub
mov
out
pusha
mov
pop
inc
in
pop
mov
rorb
scas
jb
fcompl
stos
push
adc
adc
imul
mov
call
movsb
out
inc
scas
mov
outsl
daa
pop
dec
cmp
dec
jmp
cmp
jno
jg
push
add
dec
lock
outsl
adc
enter
add
mov
in
js
aaa
sub
and
inc
arpl
mov
or
jle
xor
lods
fidivrs
or
addr16
dec
test
test
sub
jmp
pop
insl
cmp
movsl
push
das
test
in
sbb
pop
rolb
push
imul
mov
pop
jbe
push
sbb
sti
push
sahf
iret
clc
pushf
out
xchg
fdivl
inc
data16
cmp
aaa
mov
je
pop
je
outsl
pop
lcall
das
xchg
imul
je
popa
movsl
sub
pusha
enter
mov
je
fisubs
push
loopne
add
and
hlt
push
adc
inc
inc
scas
adc
sbb
popa
sarb
mov
and
roll
fisubrl
push
fdivs
lods
cli
popa
sbb
es
lahf
dec
or
adc
cmc
xor
pop
and
mov
and
pop
sbb
lds
insb
sbb
and
aam
xchg
aas
sbb
mov
and
in
mov
outsl
iret
mov
jp
jmp
call
sbb
in
and
mov
add
mov
aad
aas
add
jae
or
xor
inc
xchg
out
jp
pop
mov
fnstenv
nop
insl
subl
jmp
hlt
pop
pop
dec
xor
loope
adcb
cmp
xchg
sub
jne
in
cmp
add
sbb
pop
inc
cltd
mov
xorb
xor
dec
outsl
add
pop
sbb
dec
jg
test
add
sub
adc
mov
lahf
repnz
or
push
lds
fdivl
movsb
mov
cmp
pop
mov
mov
cmp
add
dec
adc
sub
cltd
and
sbb
adc
lds
cmp
sbb
pop
or
sub
xlat
and
sbb
in
mov
cmp
xchg
aad
mov
pusha
pusha
mov
nop
lahf
mov
cltd
mov
jbe
inc
or
inc
sbb
out
std
scas
cmp
mov
pop
sbb
mov
push
and
xor
mov
jecxz
das
sarb
out
or
pop
jp
dec
add
sti
pop
jns
pop
icebp
call
clc
cmc
test
shlb
cwtl
and
sub
adc
imull
sahf
int
add
test
xor
mov
xor
push
jb
int
dec
mov
bound
lea
fadds
inc
outsl
cmp
inc
andb
or
lcall
mov
sbb
lods
push
fidivl
jl
and
out
dec
and
fwait
aaa
repnz
rcrb
xchg
pop
sub
xchg
fwait
sub
mov
ret
push
xchg
icebp
mov
pop
xor
outsl
stos
fidivl
xchg
jo
leave
dec
mov
jmp
inc
push
dec
ret
sahf
lret
adc
cmp
pop
jo
dec
jae
add
sbb
js
jno
xor
pop
xchg
clc
push
jb
pop
cltd
lcall
or
inc
addr16
jg
fdivrp
dec
mov
push
inc
gs
mov
jae
iret
orl
cld
les
adc
rorl
shl
fistpl
lret
imul
add
out
iret
cmp
mov
push
mov
cli
xchg
pop
jp
mov
push
xor
jl
add
adc
in
sbb
add
js
in
stc
cmpl
pop
ret
movsb
and
xor
rclb
xor
add
mov
adc
mov
roll
fbstp
push
mulb
arpl
jle
into
pushfw
mov
adc
pop
cltd
mov
mov
push
or
or
and
aam
sub
mov
out
dec
xchg
testb
inc
pop
mov
xchg
stos
test
out
ljmpw
push
lret
and
cld
jge
lret
stc
scas
adc
dec
stos
push
cmp
in
mov
mov
ljmp
mov
les
jae
mov
mov
arpl
xchg
xor
icebp
mov
push
pop
fsubl
out
push
mov
mov
add
lahf
jle
bnd
dec
mov
es
sub
cmp
xchg
aam
aam
pop
sbb
jmp
shr
ds
ljmp
ds
ljmp
sub
lods
cmp
push
xor
jl
sbb
dec
scas
inc
or
and
les
clc
std
xor
ret
push
mov
dec
push
sbb
jge
push
dec
cmp
pop
mov
inc
sbb
icebp
inc
lea
dec
lcall
rclb
pop
ljmp
sub
inc
into
outsl
dec
mov
arpl
sub
sbb
or
fsub
std
into
push
push
orl
cld
pop
adc
mov
lea
xor
cmp
cmpsl
xchg
jp
ljmp
jae
push
cmpsb
push
repz
and
or
out
ljmp
out
sbb
jp
inc
inc
and
in
mov
std
mov
int3
fs
sbb
jo
and
xchg
mov
jle
dec
ja
daa
loop
or
sbb
mov
sahf
fstpt
insb
xor
xlat
xchg
pop
fidivrs
scas
add
and
add
mov
in
outsb
shlb
roll
cmp
cmp
jb
inc
incl
sbb
stos
stos
aas
xchg
jno
ds
dec
sub
xchg
out
int
ficomps
xor
xorl
movsb
adc
loope
jnp
dec
and
sub
and
out
test
xor
popf
leave
out
ret
adc
lods
pop
xor
lret
push
mov
jecxz
xor
mov
pop
loopne
push
ljmp
dec
int3
xchg
pop
cmp
sbb
cmpsb
das
fidivrs
fs
xchg
jle
cli
testl
add
sbb
xchg
insl
stc
sub
dec
rorl
popa
sub
adc
testb
gs
movb
and
xor
pushf
scas
pusha
push
jmp
inc
adc
dec
cwtl
data16
out
or
push
cmp
add
xchg
pushf
mov
xchg
cli
push
add
rcll
rcrl
repnz
xor
mov
and
add
and
loopne
fsts
mov
xchg
pusha
lock
fnstenv
cli
push
sbb
repnz
icebp
int3
lock
bnd
out
and
fst
dec
mov
jecxz
std
inc
lcall
cmp
inc
in
push
jle
pusha
mov
mov
xchg
in
rol
test
aam
in
or
mov
sbb
adc
fsubrs
or
das
xchg
sub
sub
addr16
inc
aaa
pusha
pop
push
ja
push
pop
ja
xchg
pop
ss
lock
nop
sub
and
cmp
outsb
data16
mov
ret
mov
xchg
inc
outsl
push
es
sbb
shlb
mov
jb
jle
mov
scas
cmp
popf
mov
sbb
jae
rorl
pop
sbb
movsl
push
push
jbe
movsb
xlat
dec
jle
jg
jbe
call
sub
xchg
add
xchg
out
rcrl
test
inc
jle
jns
cli
cwtl
push
jge
adc
inc
hlt
mov
mov
in
clc
pop
pop
insb
shlb
mov
call
xchg
xchg
add
mov
scas
stc
mov
jl
outsb
std
in
mov
push
call
and
repnz
int
scas
add
testl
push
outsb
cld
mov
aas
sub
inc
mov
mov
lret
enter
mov
adc
int
dec
cli
pop
lahf
sub
mov
out
shrl
mov
vcvtps2dq
xor
jmp
dec
stos
or
mov
pop
sub
cmp
cmpsb
sub
jne
push
stos
in
stos
aam
stos
jecxz
add
enter
jmp
repnz
sti
lea
aad
cmc
add
das
jmp
inc
shll
cmp
fsubrl
gs
mov
movsb
je
cmpl
xchg
xchg
aad
mov
cld
test
stc
mov
enter
pop
xchg
nop
out
sub
xchg
cmp
inc
xchg
lds
mov
jge
jle
in
ffreep
or
into
icebp
add
int
pop
cwtl
repz
int3
mov
push
lret
and
jnp
mov
icebp
into
mov
lds
fisubrs
mov
push
mov
mov
sub
int
scas
dec
scas
mov
sbb
fistpll
inc
movsl
repnz
push
jae
fwait
sub
dec
insb
movsl
push
test
adc
lds
sbbb
aaa
push
jb
cmp
in
mov
sbb
jb
inc
add
xor
jle
lds
dec
sti
add
dec
out
cmp
lock
xlat
jmp
and
push
fucomi
jno
roll
xchg
pop
mov
or
jecxz
arpl
addr16
sbb
adc
jmp
adc
inc
push
outsl
popa
iret
fsub
cmp
imul
xor
loopne
adc
mov
arpl
or
aas
sbb
sti
outsb
xor
jp
or
in
stos
loopne
adc
std
in
mov
insl
ds
fnstenv
pop
loop
pop
and
xor
jb
mov
je
fcomi
les
es
aas
rcrb
aas
sbb
jecxz
push
jae
inc
adcl
cld
push
sbb
dec
or
addb
xlat
sub
and
imull
inc
jecxz
test
loope
ret
add
add
addb
testl
jne
sub
dec
into
and
fwait
cmpb
daa
cltd
aaa
shrb
cmp
daa
xor
jge
mov
sbb
fmuls
pop
int3
inc
in
jno
repz
jnp
iret
push
je
mul
adc
mov
int3
aaa
in
test
pusha
mov
les
or
push
out
adc
test
adc
mov
inc
stos
jle
xchg
jne
pop
and
hlt
ret
adc
int
jae
popf
jmp
int
jne
push
fimuls
jecxz
das
sub
cltd
pushf
mov
mov
push
mov
mov
mov
leave
das
jbe
test
add
mov
inc
clc
into
push
fwait
xor
stos
sbb
adc
add
mov
out
mov
in
and
and
leave
push
add
es
cmp
add
jp
adc
pop
sbb
das
test
outsb
pop
inc
outsl
sarl
fidivl
test
jo
mov
or
imul
pop
call
push
call
mov
jne
mov
nop
cmp
jg
mov
inc
test
and
and
cmc
pop
insl
mov
dec
cli
out
iret
in
ret
rcrb
push
jae
leave
adc
fisttpll
ret
xor
adc
mov
cmp
test
repz
addr16
sbb
jmp
in
xorb
aam
dec
inc
stc
sbb
aad
mov
ss
push
imul
inc
jg
test
into
adcl
cli
or
mov
sbb
sbb
sahf
icebp
push
mov
add
testb
es
out
pop
bound
cmp
sub
inc
mov
pop
adc
push
mov
cwtl
lahf
shll
roll
jns
jo
push
sub
repz
int3
jge
aaa
and
xchg
sub
out
jbe
sbb
shrb
in
mov
jbe
cmpsb
testl
mov
outsl
or
add
icebp
shlb
add
adc
cld
add
mov
add
imul
push
scas
fsubl
pop
sbb
movsl
inc
cmpsl
dec
stos
mov
icebp
mov
adc
jo
jb
pop
cld
ds
adc
push
shll
fildll
ljmp
stc
mov
mov
sti
inc
jb
push
adc
push
jmp
pop
inc
jl
and
aaa
cmp
into
andl
xchg
stos
mov
fcomps
or
inc
pop
dec
mov
push
repz
sbbb
cltd
rcrb
in
jl
inc
cmp
pop
loopne
sub
cwtl
pop
int3
pop
jbe
imul
cmp
orl
push
push
outsl
lcall
jbe
jno
push
pop
jmp
adc
mov
jp
sahf
ljmp
shll
cmp
adc
idivb
add
dec
fcmovnbe
cwtl
dec
in
sti
popf
sub
haddpd
sbb
shl
out
int
push
sub
aam
jmp
dec
mov
jecxz
addl
pusha
test
pushf
or
pop
outsl
fcomip
xchg
jge
fmul
mov
in
hlt
cltd
imul
mov
add
sub
jg
sbb
fnstcw
jge
sbbb
in
cmp
xchg
push
and
push
xor
sub
cmp
dec
data16
pop
inc
aas
repz
xchg
dec
jmp
js
cmpsb
test
nop
and
cmp
mov
test
clc
jp
test
int3
insl
rolb
shll
pusha
ror
xchg
xchg
mov
and
push
repnz
sub
jae
and
pushf
sahf
mov
pop
push
fimuls
aaa
or
push
inc
pop
lock
pop
sbb
into
or
push
hlt
cmp
dec
pusha
insb
sbb
mov
aaa
cmp
mov
dec
and
or
test
adc
jb
movsl
cmpsl
leave
out
fisubrl
aaa
add
je
fwait
arpl
sub
inc
pop
sbb
lret
jae
jbe
mov
out
stos
je
push
mov
jecxz
mov
ret
int3
mov
test
shl
lods
lahf
adc
jmp
bound
iret
aam
insb
or
sti
inc
imul
adc
jg
lret
sub
add
add
mov
jo
pop
sbb
mov
jnp
aad
pop
cwtl
sbb
pusha
roll
aas
inc
addl
xchg
dec
lahf
cmp
lret
mov
dec
lahf
push
mov
test
dec
or
dec
cli
loop
test
xor
jno
shrb
shrl
or
dec
mov
mov
inc
jl
add
inc
push
addr16
stos
imul
xchg
sub
inc
aam
push
jnp
popf
add
sub
xchg
iret
inc
in
mov
or
xchg
dec
fdivl
xor
cmp
stc
and
imull
jo
sub
mov
out
mov
xor
bound
cmp
mov
js
enter
sbb
decb
aaa
scas
test
jge
pop
iret
pop
mov
xor
iret
sahf
bnd
out
adc
aas
pop
sub
pop
jae
mov
pop
sub
inc
xchg
mov
xor
shrb
test
dec
dec
xchg
js
pop
imul
hlt
hlt
test
aad
push
stos
push
push
cltd
and
and
es
inc
sub
loop
cmp
pop
cmpsl
sub
imul
lods
mov
cmp
bound
push
sub
insb
inc
movsl
imul
das
mov
ret
sub
pop
ficoml
inc
add
add
arpl
adc
sahf
sub
jbe
xor
dec
lcall
dec
mov
jecxz
adc
aaa
xor
fistpll
push
lods
adc
int
test
push
aas
in
pop
loope
mov
outsb
cmp
dec
loop
ret
add
push
push
jg
aaa
add
fsubp
aam
aam
add
mov
push
in
insb
mov
push
pop
cli
xlat
lock
loopne
arpl
sub
leave
imul
cs
lods
xchg
mov
push
arpl
sub
and
jl
mov
mov
or
je
fwait
or
push
xchg
arpl
mov
sti
push
jge
sbb
xor
dec
push
les
push
mov
fldcw
jmp
aas
js
cwtl
xor
sub
fildl
jns
xchg
dec
daa
scas
sbb
aad
sbb
ficomps
and
adc
or
addl
pop
or
das
xchg
push
cmp
add
jb
mov
dec
and
jmp
in
fiaddl
repz
ret
xchg
dec
pop
insl
xchg
ret
pop
fucomp
insl
sub
lret
xchg
fdivl
ja
push
js
out
pop
pop
cwtl
aam
mov
xorl
push
push
or
sbb
movsl
shll
cmc
negl
inc
repnz
sbb
mov
add
jmp
sub
lock
jg
fnstsw
mov
cs
pop
cmp
and
pop
adc
into
dec
mov
movl
xor
jnp
sbb
test
mov
out
addr16
ja
fs
lcall
or
pop
push
dec
in
ljmp
popa
pop
stc
jmp
pop
pop
inc
dec
adc
sub
pushf
enter
aas
pop
pushf
push
mov
dec
xchg
jp
xchg
xor
fbld
and
inc
mov
sbb
cwtl
daa
faddl
cmp
pop
push
les
mov
fsts
rorl
dec
dec
pop
test
mov
loopne
sub
xchg
ud1
fld
push
pop
divl
push
cltd
mov
into
outsb
test
cmp
push
mov
jno
int3
adc
repz
test
xor
mov
push
push
pushf
je
lds
mov
mov
sahf
int3
cmpsb
xchg
add
hlt
dec
loope
pop
push
shr
pop
dec
rcl
movsb
mov
sti
incb
insl
cmp
lock
pop
cmp
dec
lcall
push
scas
xchg
cltd
xor
or
jae
movsl
sbb
nop
adc
pop
out
cs
pusha
inc
lret
sub
add
add
lahf
xchg
xor
or
ret
xchg
dec
data16
push
loope
shrl
dec
or
xchg
xor
pop
add
inc
inc
in
icebp
rcrb
push
lret
cmp
mov
ja
push
pop
outsb
test
fisubrs
mov
rcll
pop
xor
fs
ret
mov
fs
add
das
mov
pop
pop
sbbl
sarb
sbb
mov
mov
xchg
loope
mov
cmpsb
push
loope
lods
loop
fs
xchg
adc
cld
jae
pop
cmp
sbb
cmp
xchg
inc
daa
and
push
cmp
mov
jg
dec
pop
fwait
cmpb
jecxz
dec
dec
loop
test
mov
mov
cmpsl
repnz
mov
xchg
sbb
int3
leave
loope
je
mov
mov
fcoms
add
sub
push
inc
pop
ret
fcomi
push
mov
and
pop
sub
aad
cmpsb
mov
addr16
in
ljmp
imul
dec
mov
jae
mov
and
push
cmp
insl
push
push
inc
push
add
jo
push
pusha
dec
sub
or
sbb
jnp
mov
mov
pop
in
mov
in
dec
fwait
xchg
jle
push
cli
jmp
adc
push
call
cld
repnz
nop
or
in
adc
dec
andl
jbe
popf
call
repnz
inc
imul
int
push
xchg
dec
jb
sub
dec
cwtl
or
insl
xchg
jno
in
pop
mov
mov
pop
cs
popa
rol
ret
sub
sbb
and
fwait
jne
in
popa
mov
and
ret
jge
sbb
and
arpl
xorps
sbb
push
xor
in
stos
shl
call
cmc
lock
jge
fldcw
lods
and
test
mov
sbbb
push
mov
dec
cmc
rcrl
pop
insl
hlt
int
push
mov
xor
mov
mov
xor
xor
mov
or
xor
lcall
iret
or
cmp
shll
dec
rsqrtps
dec
inc
out
dec
dec
jmp
mov
lods
push
into
push
fildl
cmpsb
push
scas
jl
int
scas
push
dec
lods
inc
stos
faddp
insb
xchg
sub
loopne
sarb
sar
adc
in
or
sub
imul
mov
rorb
push
fnstenv
stos
leave
int3
jmp
or
and
xchg
mov
add
fiadds
sub
bound
mov
mov
negb
insb
mov
push
call
outsl
shrb
lea
shrl
js
stc
loop
mov
or
push
rorl
jne
xchg
lods
rcrb
in
out
push
push
jbe
xchg
mov
fistps
call
xor
xchg
sbb
xor
sub
push
aaa
jmp
jae
pop
in
stos
pop
cmp
cmc
ficoms
xlat
mov
xchg
push
adc
int
je
inc
icebp
mov
sar
fs
gs
or
xchg
inc
sub
xchg
aam
add
push
fdivr
sbb
xor
out
adc
inc
int
imul
jns
movl
aas
mov
inc
dec
sbb
sarb
leave
adc
rcr
mov
pop
cmp
out
add
rol
dec
cld
push
aam
pop
jb
sub
adc
cmpsl
lock
mov
or
and
mov
inc
mov
les
movsl
xor
shr
jne
pop
adc
stc
divb
rorb
mov
int3
pop
outsb
dec
lret
loope
imul
test
add
sahf
cltd
and
ss
in
or
mov
aad
jecxz
fisubrs
loope
mov
sbb
mov
popf
loop
adc
int3
je
push
dec
das
mov
adc
aam
push
mov
ds
lsl
and
jle
inc
test
std
cwtl
jae
sbb
les
jo
out
mov
or
jmp
mov
inc
pushf
adc
lcall
gs
dec
dec
jbe
lea
mov
pop
fsubrp
or
mov
pop
and
ror
lea
ja
repnz
add
sbb
push
push
cwtl
enter
or
fwait
xor
jmp
fscale
mov
call
inc
mov
and
mov
sub
ror
cmp
lret
mov
cmp
in
add
gs
test
and
fmull
mov
clc
inc
xchg
mov
test
pop
cli
add
xchg
das
xchg
clc
sbb
scas
pop
jnp
out
cmpsl
xor
mov
inc
cmp
xor
xor
xchg
addb
into
stos
fmul
ret
imul
cmpsl
or
sub
xchg
add
mov
test
lcall
push
imul
ret
pop
or
sti
push
xlat
fistpll
mov
pop
cmp
push
mov
into
fnstenv
push
mov
mov
scas
cltd
mov
fldcw
mov
mov
mov
lds
inc
add
jb
lret
xor
dec
ljmp
scas
mov
jnp
sub
test
ds
mov
ljmp
cmpsl
cmp
inc
sub
push
std
jns
push
xor
mov
sbb
add
popf
jl
test
pop
lds
push
lret
shlb
cmp
cld
xor
inc
mov
or
shl
cmp
jne
sti
call
jns
pop
mov
fidivrs
lret
test
mov
mov
or
fstpl
add
loopne
movsl
or
mov
addr16
pop
negl
pop
loop
clc
pop
dec
xchg
inc
rolb
in
sbb
or
inc
cltd
push
xlat
add
arpl
and
mov
jbe
fwait
pop
push
adc
jl
aaa
out
es
lods
daa
mov
icebp
jle
push
mov
mov
mov
dec
decb
testb
jmp
push
std
shrb
mov
iret
push
mov
movsb
add
dec
inc
ds
or
mov
lds
lahf
leave
sbb
int
and
arpl
cwtl
scas
rcr
mov
test
mov
dec
sub
test
mov
dec
inc
je
lock
sub
jp
add
rorl
mov
into
outsb
fidivrl
cs
inc
divl
int3
cmc
push
fwait
xchg
mov
sub
pop
leave
in
add
add
adc
int3
pop
sbb
inc
imul
add
out
cmpsb
insb
inc
adc
cmp
jp
outsl
iret
outsl
cmp
roll
or
jae
xchg
mov
dec
es
xor
hlt
jbe
or
stc
into
js
popa
jnp
pop
inc
pop
mov
int
cs
cmp
aaa
in
jl
enter
call
ret
daa
ret
lock
in
inc
fisttps
call
fidivrl
addl
pushl
dec
mov
sub
incl
pop
cmp
xor
pop
das
sub
cmp
leave
enter
mov
pop
pop
fldenv
add
enter
aad
mov
loopne
jge
out
scas
jns
das
test
addr16
cmp
into
stos
push
push
lods
stc
adc
cmp
into
movsl
pop
or
mov
out
jp
imul
insl
hlt
sbbl
xchg
into
mov
pusha
add
mov
ret
adc
sbb
xchg
push
jp
subl
sbb
es
scas
std
and
ja
pop
pop
mov
lfs
mov
xor
adc
outsb
js
movsb
imul
insb
pushf
sub
mov
or
add
pop
lahf
mov
shrb
popa
or
xor
mov
mov
sahf
outsb
jae
insb
popa
cmpsb
push
stc
daa
ss
jne
repz
loopne
dec
xchg
xor
jo
sbbl
sbb
outsb
jne
adc
rolb
aas
rcl
in
movsb
je
sbb
xchg
ja
mov
hlt
push
cmp
rclb
movsb
lret
lea
pop
dec
aaa
cmpsl
mov
mov
add
push
or
imull
jmp
pop
jno
ds
pop
fcomps
jae
sub
dec
push
dec
ss
mov
inc
rorl
mov
cwtl
sub
loope
aas
push
fs
mov
push
rclb
dec
movsb
push
pushf
adc
fdivp
shrb
aaa
stc
cld
jmp
pop
jg
dec
cmpsl
push
lcall
pop
add
xchg
inc
xchg
inc
out
pop
dec
sub
mov
inc
inc
fmull
cwtl
xchg
sbb
xor
mov
pop
mov
and
insl
mov
add
mov
and
mov
xchg
jae
sub
loope
cli
mov
push
cmp
jns
and
fwait
divl
pop
dec
sub
xor
jns
repnz
loop
test
fidivs
call
sub
leave
fisubs
xchg
inc
lds
daa
fnstenv
push
js
jo
ja
fs
pop
xor
push
add
or
in
push
add
sub
fldt
sub
rcrl
lds
mov
call
sbb
mov
cltd
mov
int
jp
xchg
test
lds
mov
pusha
in
scas
movsl
insb
cmp
in
mov
xchg
mov
sub
sahf
fldt
data16
jnp
popa
jns
add
sbb
dec
jmp
push
cmpsb
mov
mov
cmp
fwait
push
ret
in
push
cmp
shll
hlt
test
add
or
lock
push
in
in
shrl
scas
repz
xor
int
in
loope
sub
pop
leave
out
add
jne
in
aas
cmp
iret
mov
rcr
sub
aaa
adc
push
pop
mov
or
lods
test
test
repnz
sbb
and
shlb
out
jae
cmp
icebp
sti
xchg
sbb
mov
lock
and
xchg
sbb
push
ljmp
clc
cmp
stos
cmc
add
push
mov
pop
and
sahf
and
adc
mov
push
lret
fidivrs
int3
jmp
in
std
add
push
rcll
xchg
loope
sub
jp
cmp
dec
addr16
inc
and
push
fisubl
mov
insl
sbb
dec
pop
arpl
or
jecxz
in
insb
xchg
dec
leave
mov
insl
aad
movsl
adcl
mov
mov
call
and
nop
sbb
xor
mov
xchg
mov
jle
movsl
mov
fstl
jbe
xor
sahf
dec
in
push
mov
jb
jecxz
sahf
or
pop
into
mov
out
and
and
inc
xchg
in
test
mov
pop
sarb
data16
or
jae
imul
fs
dec
fstl
or
in
add
fcom
clc
out
dec
mov
push
imul
xor
cmpsb
lea
adc
inc
lock
cmp
push
fcmovnb
int3
pusha
add
push
or
or
out
xor
mov
stc
test
and
or
roll
cld
repnz
lock
decb
mov
mov
test
sbb
stos
outsl
xchg
pop
sub
insl
sub
and
adc
cwtl
mov
xchg
jecxz
xchg
ja
inc
call
movb
push
addr16
or
stos
lods
adc
out
rcrb
xchg
addb
sub
add
xor
adc
dec
and
and
icebp
in
imul
mulb
sbb
add
fsubrl
std
jbe
push
and
sub
mov
lret
jnp
ret
repz
push
std
mov
adc
push
sub
push
xlat
jo
lods
movsb
sbb
adc
repz
add
imul
mov
add
sbb
es
roll
mov
hlt
int3
pop
sbb
mov
mov
sbb
push
jbe
popf
jo
xchg
iret
jecxz
mov
push
stos
mov
push
in
jne
add
scas
inc
cmp
push
aas
xchg
int3
lahf
jbe
movsb
je
add
mov
push
sub
lods
loopne
test
and
sbb
nop
xchg
cmp
push
pop
cmp
inc
sub
out
sub
sti
pop
mov
cmp
ss
in
mov
inc
imul
mov
stos
popf
pop
adc
movsl
mov
xlat
pop
mov
in
or
xchg
insb
fnstsw
icebp
lods
std
pop
inc
inc
sbb
dec
aam
xchg
addl
mov
int
ja
sub
loop
mov
inc
dec
push
repz
ljmp
out
mov
scas
adc
in
lods
xchg
inc
dec
gs
clc
rolb
loop
push
add
sbb
add
jo
test
ds
or
int
fwait
sub
add
int
mov
xchg
mov
hlt
ficoml
data16
hlt
and
lret
and
or
lods
mov
push
jmp
xchg
popf
xor
jns
sbb
xchg
call
popl
add
xchg
gs
jp
dec
mov
push
and
xlat
sbb
xchg
testl
push
mov
sti
and
cmp
add
cmp
test
ret
jnp
arpl
pop
fsubs
mov
loopne
insl
xorb
dec
and
lds
repz
adc
cld
pop
popf
lds
xchg
mov
mov
pop
aam
adc
cli
mov
and
dec
cmp
shll
popa
sbb
sub
popf
in
cmp
test
jns
push
out
mov
ret
fbld
fsubrl
aam
xchg
mov
imul
pop
add
sarb
lods
xchg
mul
scas
sbb
mov
dec
dec
add
pop
and
sbb
outsb
lock
insl
test
imulb
enter
hlt
add
icebp
and
mov
xor
sub
lock
cmp
lds
push
fildl
pop
mov
fisubs
sti
dec
add
cmp
out
insb
lock
and
repnz
out
loope
mov
popl
mov
mov
test
mov
pop
add
jl
fisttpll
xor
xchg
aaa
in
adc
push
rorb
test
arpl
sti
pop
lods
xchg
out
push
lods
imul
inc
sub
xor
sbb
sbb
xor
and
mov
dec
fsub
insb
cmpsb
shr
xor
push
mov
or
repz
lock
adc
pop
xor
cmp
mov
sub
xor
xor
in
mov
xchg
jg
sub
test
mov
dec
xchg
adc
and
rcrl
sbb
inc
pop
test
pop
jne
mov
mov
sub
pop
mov
shlb
and
or
nop
mov
inc
xchg
aam
cwtl
mov
push
arpl
mov
pop
pop
js
aad
inc
jno
lret
ficoms
jg
mov
sarl
lahf
ret
add
je
jno
xchg
in
push
push
mov
and
xor
mov
cmp
mov
jae
dec
or
repz
cmc
sbb
mov
ss
test
pop
int
cli
push
cmp
adc
ret
or
lahf
ret
ljmp
scas
notl
sbb
xchg
movsb
xor
loop
or
fldl
data16
pop
jl
out
fdivrs
mov
pop
sub
push
repz
jae
test
out
ret
int3
or
pop
gs
sub
add
ds
call
xor
xor
bound
cld
mov
out
inc
pop
pop
push
mov
mov
xchg
subl
jo
jle
or
into
xchg
push
pop
lret
xor
or
xchg
subl
out
pop
pop
or
push
pop
fildl
mov
jb
repz
loopne
in
call
lret
fwait
test
insb
pop
sbb
das
int
sbb
pop
mov
pop
pop
dec
icebp
or
mov
jmp
movsb
jns
subl
jecxz
and
mov
push
enter
scas
out
mov
stos
mov
jg
push
pop
sub
or
call
dec
xchg
dec
fs
mov
test
repnz
out
lds
lea
aas
inc
je
pop
jbe
mov
xchg
mov
stos
mov
push
push
sbb
in
ljmp
lds
xchg
add
int
adc
pop
cwtl
sub
stc
ss
pop
add
ja
insl
out
popa
inc
sub
or
ret
mov
sbb
imul
push
test
adc
inc
adc
jb
ljmp
aad
mov
mov
add
jne
dec
sti
adc
inc
js
imul
cmp
jge
sub
lahf
in
xchg
addr16
clc
mov
dec
xchg
and
sub
mov
in
stc
mov
sub
and
mov
pop
cld
inc
and
rcrb
nop
adc
test
dec
call
jmp
cmp
scas
sbb
push
adc
iret
adc
push
lds
mov
lods
dec
stc
fcoml
jle
pop
xchg
insl
je
mov
dec
mov
loopne
mov
outsl
mov
gs
dec
adc
test
jmp
ficoml
jecxz
xor
aam
cmp
xchg
sbb
sub
sarl
popf
loope
pop
scas
sti
sar
jo
movb
clc
jp
push
in
sahf
aas
imul
dec
mov
push
insl
dec
pop
add
jbe
and
sahf
clc
dec
insb
mov
iret
in
dec
cmp
stc
adc
pop
jns
test
loope
push
and
mov
xor
and
mov
sbb
dec
xchg
insl
bound
push
loop
into
dec
fmull
cmp
lret
lea
pop
lret
sub
mov
pop
test
sub
imul
mov
jo
out
adc
test
xor
jge
sarl
sub
fnstsw
leave
adc
push
pop
cmp
pusha
xchg
push
jmp
arpl
jns
lods
roll
inc
jae
push
xchg
add
es
nop
sbb
fcmovnb
jnp
cmpl
stos
xlat
insb
int
fstps
mov
sahf
pop
lds
pusha
es
rcr
cltd
inc
and
out
mov
cmc
test
bound
and
adc
mov
out
pop
mov
jmp
mov
push
lahf
int
lahf
mov
inc
mov
pop
sub
pop
dec
imul
sub
inc
jl
inc
negl
in
add
and
adc
imul
fstps
cmp
pop
aas
xchg
pop
sbb
dec
sti
xor
stos
lret
inc
sub
inc
sbb
cmc
in
and
imul
repnz
push
adc
mov
imul
or
or
pushf
or
jle
daa
dec
dec
sarl
mov
inc
imul
cmp
sub
xchg
sub
push
ds
mul
or
mov
adc
outsl
pop
in
adc
sub
data16
dec
pop
mov
out
pop
ss
or
inc
imul
std
mov
je
or
loop
out
pop
mov
fcomip
mov
dec
jae
xor
add
sahf
jbe
fnstcw
popf
jo
pop
push
pusha
pop
xor
and
add
out
cmc
aas
div
pop
cmpsb
xchg
pop
scas
lcall
loop
dec
cmp
mov
xor
lods
mov
jae
inc
imull
and
lcall
xorl
int
out
out
mov
leave
cmpsl
aad
mov
insb
jnp
fisttps
cmp
push
divl
das
bound
hlt
xchg
scas
les
jnp
mov
loopne
cwtl
repz
jnp
mov
les
dec
lods
sub
pushf
jns
iret
cmp
pop
lcall
jmp
jge
inc
dec
add
add
aam
fs
test
pop
icebp
pop
mov
push
xlat
ret
jbe
lcall
inc
repz
into
add
daa
jmp
xor
mov
sub
pusha
add
sbb
aam
mov
mov
popf
addr16
sbb
sbb
out
loopne
xchg
xor
mov
inc
mov
mov
xor
pop
inc
mov
push
fildll
xor
shl
jb
pusha
adc
fnsave
mov
push
rorl
push
pusha
sub
or
mov
icebp
scas
leave
out
loop
hlt
or
outsl
js
lret
sbb
in
inc
outsl
lods
ds
in
ljmp
data16
movsb
addl
push
sub
or
std
add
xor
fistpll
fwait
dec
lods
stos
lods
scas
dec
imul
iret
orb
and
pop
sub
in
lret
push
out
push
sbb
push
clc
inc
arpl
dec
sahf
ss
in
fsubrs
and
inc
xor
add
loope
popf
mov
insb
or
sub
lods
inc
adc
mov
popa
pushf
leave
bound
sbb
jbe
imul
jle
lock
add
lret
jle
insl
xchg
sub
cmp
dec
into
xchg
leave
lret
adc
xchg
test
and
cs
mov
scas
lods
xlat
nop
mov
mov
xor
je
fldl
scas
push
or
push
xchg
mov
inc
mov
ja
inc
xor
add
das
push
sbb
dec
adc
lods
pusha
ljmp
or
in
push
or
mov
std
push
jne
jno
sub
outsb
pusha
jbe
loop
adc
pop
sbb
adc
cmp
lods
push
push
or
aas
enter
insl
sbb
fmuls
xchg
out
leave
add
lcall
and
jle
cmp
ffreep
test
sub
lock
jb
pop
mov
lock
pop
roll
test
xchg
lahf
scas
gs
pushf
dec
mov
scas
pushf
mov
stc
outsl
sbb
add
call
inc
jecxz
sub
adc
loop
imul
adc
mov
loope
inc
jb
add
jbe
ljmp
rcrb
in
orl
sbb
fistpl
leave
mov
mov
jno
aad
cmp
mov
jp
jno
pop
lods
inc
out
push
or
mov
cmp
out
xchg
hlt
xor
sub
pop
stos
js
fcompl
mov
lock
xchg
test
repnz
int3
cs
xorl
push
mov
sub
inc
dec
add
mov
sub
icebp
lods
xor
xchg
cmp
test
pop
outsb
shll
cmp
jo
enter
leave
icebp
fs
adc
dec
pop
punpcklwd
mov
cmp
xchg
fidivrl
das
dec
stc
stos
dec
mov
repz
mov
jno
xchg
mov
cld
aad
scas
sub
les
mov
ss
jmp
lock
jb
outsb
or
imul
icebp
push
psubq
pop
push
sbb
outsb
adc
dec
sbb
addr16
je
lahf
mov
sub
mov
fisubs
or
xor
lret
notl
push
push
mov
jns
pop
sti
outsl
fstps
les
shll
sbb
out
push
sti
lock
shll
lret
add
cmp
cmp
pop
stc
stos
in
mov
fdivr
insb
dec
inc
xorl
xchg
mov
pop
jle
outsb
cmp
stos
add
mov
push
jns
ja
notb
fstps
mov
fwait
iret
in
lea
xor
ret
mov
fstp
and
xor
push
cmp
fmuls
pop
push
insb
mov
adc
mov
mov
mov
fisubrl
mov
lret
mov
sbb
sub
xor
stos
mull
out
adc
aas
inc
out
push
cltd
pusha
dec
adc
movsl
jl
jbe
mov
xchg
adc
ret
std
xchg
imul
and
xchg
scas
cmp
add
pop
mov
xlat
add
add
addr16
and
dec
test
xchg
sahf
or
lods
fwait
das
mov
mov
add
jo
out
sbb
mov
xor
imul
jl
in
test
push
daa
and
dec
sub
movsb
cmp
in
lea
jb
loopne
xchg
mov
arpl
scas
inc
cmp
roll
ljmp
xchg
outsl
insl
test
in
lea
pushf
mov
test
jle
aas
adc
sbb
xor
dec
dec
shrl
aam
aam
out
frndint
icebp
cmpsl
mov
cs
mov
adc
fs
imul
fdivl
lret
inc
cmc
pop
inc
push
push
stos
dec
xor
out
scas
imul
mov
shrb
jns
iret
adc
inc
mov
shlb
inc
add
js
and
adc
popf
out
enter
repz
es
lds
mov
dec
pop
lds
pop
dec
push
mov
icebp
scas
cmpsl
test
xor
mov
adc
jo
scas
add
out
push
sub
and
or
mov
sahf
xor
pop
inc
sub
je
xchg
addr16
lahf
lods
rorl
fwait
add
pop
aas
data16
popf
adc
jl
ror
and
out
sub
scas
pop
sbb
jne
testb
mov
xchg
repz
pop
mov
mov
popa
push
push
jnp
ss
and
sub
sbb
jmp
out
push
loope
xor
shll
inc
mov
ret
dec
int3
cmp
mov
lds
lea
std
mov
mov
or
insl
pop
push
pusha
sbb
lds
fdivrs
stc
push
scas
rol
lea
mov
stos
cmp
xchg
shrl
adc
adc
shll
addl
sub
inc
cld
clc
jo
xlat
mov
pop
sbb
jge
cmc
jmp
out
fucomip
mov
push
fisubrl
mov
push
aad
dec
insl
pop
cmp
mov
lret
pop
sbb
mov
or
stos
and
push
sahf
in
pop
imul
mov
imul
mov
push
outsl
cmp
loop
sbb
cmp
inc
mov
daa
std
fnsave
test
gs
repnz
popa
sbb
pop
sub
xchg
mov
or
in
insb
lea
jecxz
adc
sbb
push
idivl
cmpsl
mov
dec
cmp
movsl
lret
cmp
and
push
cmpsl
out
movsb
repz
xchg
out
stos
xor
fdivs
cmc
sahf
xor
xchg
stos
int3
jo
lock
cmp
xchg
ljmp
outsb
xchg
push
jne
out
dec
cmpsl
jl
xor
xchg
test
sbb
or
mov
jle
pop
test
mov
cmp
testb
repnz
test
into
imul
add
fisubrs
and
xlat
adc
and
cmp
test
jbe
inc
mov
adc
mov
loope
fnstsw
adc
repnz
repnz
in
push
xor
xchg
in
mov
fs
or
into
sarb
dec
out
mov
pop
fwait
mov
outsb
pop
repz
out
xchg
push
push
lds
add
gs
popa
popa
push
test
neg
into
jp
mov
arpl
sti
scas
lods
mov
fs
mov
mov
push
test
imul
sti
push
inc
jl
lahf
into
cmpsb
cmp
andb
test
mov
dec
add
orb
loope
out
aas
dec
add
int3
jo
arpl
jmp
or
ss
std
jns
leave
xor
add
sbb
pop
or
push
pop
xchg
jbe
imul
movsl
aas
adc
nop
xchg
loopw
jno
insl
mov
xchg
jl
insb
and
shl
std
xchg
inc
push
mov
pop
jae
sti
cmp
jecxz
into
fmulp
sbb
fs
dec
dec
inc
les
icebp
fucom
test
das
scas
xchg
jbe
xor
int3
cmp
mov
jne
rcrb
sbb
jae
push
repz
div
mov
subb
call
and
cmp
call
dec
jp
push
and
push
sti
push
pop
mov
mov
lret
jb
and
faddl
std
sbb
jecxz
adc
or
les
in
push
lds
mov
jle
xor
pop
decb
es
mov
add
sarb
enter
xor
sbb
daa
xchg
cmp
aam
clc
pop
hlt
jno
loop
lret
jg
ret
loope
test
sub
or
jno
enter
aad
pop
std
lea
xchg
mov
lcall
push
sahf
movb
jae
fisubs
xor
jne
dec
loopne
jle
mov
adc
sahf
xchg
pop
pop
jns
out
lret
int
mov
outsb
mov
aas
mov
sbb
cli
addr16
or
les
dec
std
sbb
aam
ret
lea
in
mov
fiadds
sub
popf
mov
ret
xlat
jb
cmp
sub
dec
push
push
arpl
aaa
andl
test
and
cld
mov
dec
outsb
xor
adc
adc
inc
mov
fstps
mov
mov
fstl
cltd
mov
fmulp
mov
xchg
cmc
jo
testl
pop
outsb
add
mov
push
int
rcll
push
popl
ret
cli
jnp
add
in
inc
jecxz
adc
or
mov
fidivl
sub
push
call
and
mov
mov
mov
not
xchg
out
jecxz
xor
ja
mov
ds
mov
push
xchg
mov
mov
gs
sub
xor
adc
lcall
dec
repz
test
scas
negl
aas
or
leave
or
dec
shll
mov
fwait
mov
aaa
fistpll
pop
lahf
sub
push
sbb
add
push
sti
mov
shrl
cmp
cmp
fadds
mov
mov
rclb
lds
push
js
subl
cmp
and
push
inc
std
pop
int3
repnz
rcll
xor
pop
sbb
sub
std
fmul
xchg
and
in
sbb
mov
insb
mov
bound
in
cmp
out
movsb
jae
or
cmp
popf
mov
xchg
xchg
mov
sbb
mov
stc
orl
xor
lods
and
add
lcall
in
cwtl
jne
or
sahf
mov
cmc
sub
inc
push
mov
stc
iret
js
aam
stc
or
rolb
sub
jp
out
push
adc
pop
roll
jge
std
xor
dec
sub
mov
xorl
cmp
and
jae
ja
lea
lret
loopne
enter
adc
mulb
sarb
sub
popf
fildll
xchg
mov
sub
xor
movsl
add
int
outsb
sbb
mov
rcrl
xchg
pop
mov
aas
jmp
jecxz
and
mov
lret
les
mov
cmp
dec
cwtl
insb
fbld
push
outsl
fldl
movsb
into
faddl
dec
xchg
and
int
fistpl
push
ret
xchg
stos
push
cs
cmp
scas
or
xchg
jnp
js
icebp
pop
fldl
aam
xor
movsl
xor
mov
push
push
out
dec
mov
cwtl
mov
fsubrs
lds
push
add
adc
inc
fiadds
xchg
add
loop
inc
mov
movsb
push
cmpsl
fsub
jnp
inc
int
iret
daa
pop
mov
xchg
push
ds
mov
mov
shrl
push
fmull
pop
xor
ror
xchg
rcrb
pop
or
push
inc
jmp
aaa
or
inc
or
ljmp
int3
lea
push
cmp
add
enter
es
mov
add
dec
or
fwait
test
xor
mov
lret
add
jg
in
sbb
cld
mov
push
pop
aas
push
adc
fcmove
arpl
mov
mov
mov
xchg
adc
jp
clc
jge
lret
test
out
or
adc
jbe
js
add
ds
lods
sbb
dec
cmpsb
std
jb
iret
mov
negb
leave
inc
mov
adc
out
aaa
mov
xchg
mov
xchg
inc
sbb
out
rolb
test
jp
data16
jl
push
das
add
mov
add
jnp
es
pushf
fldt
cmp
push
cmpsl
cmp
pop
aas
fdivrl
cs
mov
pop
mov
xchg
fwait
sbb
cwtl
mov
jmp
in
repz
cltd
cmc
lods
insb
sbb
fldl
scas
lcall
repz
ds
call
scas
out
push
in
aaa
push
mov
stc
mov
icebp
bound
jbe
push
pop
jg
mov
roll
cmp
fstpl
hlt
fidivrl
cmp
and
ret
aad
mov
aam
inc
dec
aas
loopne
mov
scas
or
jle
mov
xor
pop
lret
mov
push
ror
sub
or
imul
mov
add
xchg
int
out
stos
jmp
stos
movb
fwait
jle
out
pop
jo
sbb
loope
lock
icebp
imul
fldenv
sbb
add
in
loop
mov
ret
cmpsl
aam
mov
jne
fs
mov
and
cmc
xlat
enter
daa
lods
push
xchg
je
mov
rclb
xchg
lcall
push
mov
les
sti
mov
adc
jg
pop
adc
add
xor
mov
mov
les
fmuls
inc
mov
pop
jmp
sahf
cld
cmp
mov
je
das
mov
sbb
xchg
negl
dec
inc
add
and
xor
lret
xchg
sub
xchg
mov
das
mov
pop
sbb
push
pop
repz
lahf
movsl
into
frstor
in
js
push
mov
push
call
testl
pop
cwtl
fidivl
insb
xorb
shrb
adc
rcr
or
stc
xor
repz
lods
or
insl
mov
dec
jg
xor
adc
and
mov
pop
stc
push
scas
sub
sub
jno
aaa
jp
xchg
inc
in
cmpsl
movsb
dec
clc
leave
outsb
fsts
das
xor
mov
push
pop
add
sbb
stc
adc
jg
sub
jo
pop
cs
sahf
or
cmp
test
mov
mov
adc
xchg
sbb
iret
aad
mov
mov
mov
jmp
inc
add
jno
adc
mov
xlat
lcall
out
push
mov
mov
mov
rcl
adc
jne
cmpsb
cltd
fwait
leave
jno
ret
jl
inc
fimull
push
mov
jecxz
daa
mov
push
imul
icebp
pop
stos
lock
push
dec
mov
add
add
sub
inc
aaa
adc
push
ret
cmc
push
int
or
dec
sub
insb
clc
pop
imul
xlat
data16
ds
fadd
jmp
mov
movsl
stos
test
pop
mov
outsb
ficomps
sub
ret
xlat
outsb
ret
int
daa
sub
mov
inc
cwtl
xor
mov
sub
loope
insl
pop
xchg
les
dec
or
scas
add
lock
aaa
fwait
jecxz
fistpl
xor
push
fcoms
jne
mov
push
cld
adc
fmull
jnp
aaa
inc
jbe
jle
leave
jo
and
push
shlb
cld
ficoms
clc
mov
repz
hlt
je
pop
rclb
xchg
ss
insb
subb
aam
cli
lret
xchg
jnp
aam
push
sbb
jg
adc
jno
movsl
mov
rclb
inc
xlat
lret
inc
stos
stc
rcr
or
sub
mov
pop
pop
pop
fs
rolb
xlat
xor
fs
xor
pop
mov
or
stc
mov
cmp
adc
in
cmpsl
movsl
insl
push
push
or
mov
scas
in
cmp
xor
pop
arpl
into
ljmp
gs
stc
fsubl
xor
push
add
lds
cmpb
cmp
sub
jge
int3
lods
mov
sbb
dec
mov
fnstenv
or
xchg
dec
out
popa
jb
sub
mov
cmc
arpl
mov
or
je
lcall
cmpsb
xchg
aam
stos
jbe
push
adc
rcll
xchg
lods
jnp
fisttpl
cmpl
addr16
push
xlat
rcr
mov
popa
nop
sysret
ret
scas
mov
jnp
and
push
jno
pop
add
pusha
cltd
into
dec
out
test
adc
adc
xor
push
jl
pop
cli
dec
add
dec
fs
cli
mov
sbb
xchg
mov
subl
cmpsb
push
fcoms
rorb
sub
sbb
mov
aad
ds
jg
jb
movsl
sbb
sti
sbb
lods
mov
and
sbb
push
jne
imul
fistps
pop
test
lods
mov
jmp
out
lods
or
pop
cmpsb
pop
data16
xchg
mov
sub
sbb
pop
mov
daa
ret
mov
mov
imul
push
mov
jp,pt
aas
and
lea
pop
cwtl
pop
lods
dec
push
fisttpl
jns
test
mov
daa
div
xlat
push
test
fs
daa
popf
mov
testl
mov
dec
aaa
mov
lods
nop
scas
jb
into
mov
xchg
lret
popf
int
pop
adc
sbb
inc
pushf
push
popf
insb
pop
insb
push
jge
and
adc
jmp
push
sbb
out
pop
fmull
inc
pop
lcall
rorl
inc
push
imul
adcl
mov
cli
push
fwait
cmpsl
push
pop
sub
into
mov
rorl
into
cmc
and
sub
sub
inc
sub
mov
imul
pop
in
mull
ss
sbb
pop
lret
cmp
add
lcall
iret
clc
bound
aas
aam
fxch
jbe
push
adc
stos
mov
xchg
pop
sbb
mov
dec
xor
ja
jge
sahf
outsl
pop
mov
push
aam
push
xlat
aas
lock
into
mov
daa
xchg
jmp
pop
xor
sub
pop
cwtl
pop
aad
lcall
js
outsb
inc
addr16
fidivrs
mov
push
stos
fmuls
push
fsubp
inc
lock
xor
adc
mov
lret
cmp
ret
push
xor
pop
ss
out
pop
dec
lea
cmc
add
mov
std
push
les
mov
inc
fiadds
stos
test
fstpl
fwait
cwtl
xor
cltd
xlat
sub
ss
scas
cmp
insb
jp
push
pop
test
xchg
aad
jle
push
add
imul
rorl
xor
insl
hlt
pop
push
add
pusha
out
repnz
sti
mov
jnp
push
mov
inc
ds
roll
sarb
push
cmp
or
mov
cld
sbb
mov
xor
mov
mov
fcmovne
hlt
aad
push
imul
out
push
ret
pusha
fistl
and
sbb
pop
push
lcall
mov
mov
xchg
xor
inc
repz
nop
test
cmp
sahf
xchg
cmc
xorl
push
xchg
xchg
mov
movsb
jmp
cmp
leave
mov
cmp
fimuls
fldt
mov
lock
test
or
js
jae
xor
rcr
testl
and
mov
mov
addr16
cmp
inc
popa
push
std
mov
push
pushf
iret
and
xchg
mov
lds
jns
pop
push
add
cmovle
dec
test
pop
xchg
cmpsb
mov
mov
insl
sub
ffreep
mov
pop
xor
mov
push
scas
push
test
in
jbe
mov
jl
in
adc
pushf
into
push
inc
pop
hlt
arpl
mov
stos
sbb
incb
add
outsb
std
pushf
mov
adc
je
ja
popa
stc
xor
mov
adc
imul
prefetcht2
movsl
icebp
fsubr
sarb
mov
xlat
ret
frstor
and
loopne
mov
mov
mov
pop
sub
adc
jb
nop
cmp
hlt
mov
mov
std
dec
xchg
pop
pop
out
cmpsb
pusha
mov
sub
cltd
mov
icebp
jmp
dec
adc
das
pusha
pop
or
sbbb
add
lods
sub
mov
sub
fwait
ja
out
test
ljmp
jb
in
hlt
or
hlt
enter
inc
out
sub
jb
into
dec
movsb
inc
add
xchg
push
iret
popa
xchg
mov
jbe
sub
push
cmp
repnz
mov
out
sbb
scas
aad
dec
adcl
data16
and
fistpll
aam
mov
add
xor
out
xor
adc
xor
jle
mov
xor
inc
mov
pushf
push
cltd
mov
push
cmp
jo
cmp
sbb
sbb
sub
xor
mov
jmp
movsl
xor
icebp
cmc
ss
aas
xor
adc
into
jbe
je
sub
mov
inc
mov
jg
scas
adc
dec
stos
add
xchg
out
inc
iret
loop
sahf
cmc
or
dec
out
and
inc
add
pop
mov
or
lcall
aam
add
insb
mov
cs
lods
mov
mov
jecxz
lea
xchg
flds
ret
test
add
out
sub
insb
inc
pushf
ficoml
sbb
sub
pushf
mov
fcmovnbe
add
decb
push
inc
pop
dec
mov
subl
icebp
xchg
ljmp
subl
rol
mov
mov
jo
or
push
xchg
mov
ds
jo
xor
jmp
sbb
pop
test
cmp
jmp
subb
rorl
sbb
xchg
inc
shrl
insb
inc
pop
and
inc
js
pop
call
push
in
jo
and
and
fucomi
lock
fidivrl
ja
mov
test
cltd
push
xchg
aaa
jge
hlt
test
cwtl
mov
jns
jnp
inc
push
inc
jne
psubq
sub
shl
in
fildll
jp
aaa
pop
setno
dec
out
scas
enter
mov
adc
cmpsb
pop
xchg
iret
dec
push
test
adc
fisttps
xchg
in
and
sub
jle
out
roll
inc
push
jge,pn
adc
imul
out
lock
idivb
jg
je
adc
sbb
sbb
sbb
popa
mov
push
sub
push
fisubl
outsb
sub
addr16
insb
popf
int
cld
inc
cltd
pushf
es
push
dec
push
adc
mov
and
cmp
pop
pop
sub
loope
cltd
mov
and
jp
pusha
pop
push
lret
pop
xor
push
lds
rorb
inc
cmpsl
iret
loop
loopne
xorb
xchg
or
cmp
or
test
and
in
lret
fcmovne
stos
inc
ja
jl
scas
into
cmp
mov
fnstsw
or
cmpsb
lods
xor
nop
inc
sbb
dec
push
cmp
test
sub
lcall
cltd
adc
stc
cmc
and
lods
popa
outsl
mov
dec
mov
lods
addl
stos
iret
lret
fistl
xchg
loope
test
test
addr16
aam
cli
mov
sub
enter
cmp
test
mov
xchg
add
rol
dec
pushf
add
pop
pop
push
push
mov
xchg
cmpsl
ret
xor
dec
shll
nop
mov
push
inc
cmp
xchg
test
iret
sbb
fs
jo
insb
add
sti
mov
scas
jle
xchg
pop
fmull
pop
dec
pop
mov
ja
das
sahf
mov
and
je
scas
mov
jp
push
es
sbb
insb
out
int3
mov
movsb
jle
or
test
es
jl
dec
pop
mov
sub
int3
pop
and
in
popa
aam
ss
fcomps
dec
lods
mov
xchg
ss
in
jle
sub
out
cwtl
pop
jno
pop
lcall
das
in
pop
out
and
aam
push
pushw
fisubl
pop
and
or
jo
imul
fisubl
xlat
cltd
icebp
and
in
fcomi
andb
mov
push
or
or
imul
repnz
stc
or
dec
pop
sub
mov
repnz
aad
cmpsb
mov
dec
dec
nop
scas
xchg
int3
sbb
shll
in
repnz
dec
xor
hlt
xlat
ficoml
iret
cld
fsubs
push
es
inc
push
mov
mov
or
mov
jle
shlb
sub
gs
sti
mov
xor
or
pop
movsb
and
sub
cld
mov
mov
lcall
imul
jle
out
out
pop
fnstenv
mov
cld
pop
test
jb
push
cmp
push
inc
ja
iret
xor
mov
dec
sti
push
push
enter
xchg
lea
add
popa
bound
shrb
push
adc
repz
cmpsl
pop
add
fdivl
push
add
sbb
cltd
jo
pop
xor
sti
add
aam
into
int3
push
bnd
mov
pop
in
cmp
repnz
loopne
or
aam
sbb
jp
cmp
cmp
jl
int
add
das
dec
mov
or
xchg
jg
mov
and
push
inc
xchg
mov
icebp
push
aaa
sub
out
popa
aaa
add
jne
scas
or
aas
addl
std
mov
rcr
inc
jne
inc
adc
sub
xchg
xchg
xchg
jp
pusha
jo
mov
bound
incl
jnp
out
call
mov
in
fdivr
arpl
repz
aas
xor
notb
in
popa
pop
jmp
mov
addb
inc
lret
mov
mov
aaa
aaa
into
mov
das
jp
ljmp
popf
shl
push
fstpl
or
mov
cmpsb
inc
sbb
test
sbb
loop
clc
leave
add
outsb
icebp
lds
test
lahf
mov
lods
daa
fistps
out
inc
push
xchg
sub
rol
repnz
cmp
in
xchg
repz
jo
inc
je
sub
cmp
test
repnz
imul
jo
push
pop
rorl
mov
aad
push
ds
push
jbe
push
mov
add
inc
inc
pusha
mov
fcmovnu
pop
dec
leave
arpl
adc
add
lcall
and
adc
mov
jl
in
ljmp
mov
in
addb
subl
push
push
das
and
cmp
fwait
sbb
push
xchg
cmpb
or
adc
pop
push
fcmovne
add
clc
xchg
push
imul
mov
sub
aad
in
adc
jbe
lahf
inc
test
push
cmp
dec
push
out
sbb
jge
or
ret
lock
xchg
pop
jb
and
push
hlt
cmc
mov
cmp
dec
cmpsl
repz
std
cmp
fidivrs
mulb
fs
jge
jge
mov
push
or
push
push
bound
lret
je
dec
clc
jge
dec
xchg
and
movsb
push
inc
pop
pop
pop
mov
jns
pop
cmp
insl
xchg
jb
jp
jle
mov
enter
jo
mov
test
mov
push
mov
mov
clc
sbb
shlb
shlb
sub
in
in
dec
gs
jb
es
pop
iret
mov
cmpsb
js
popa
aam
cld
jb
iret
cli
pop
lods
or
daa
ret
mov
inc
mov
in
and
rcrl
dec
sub
bnd
cmc
in
test
adc
roll
aad
add
cmp
xchg
pusha
scas
sti
movsl
dec
ja
outsb
or
div
push
fisttps
cmovno
stos
sbb
hlt
dec
sub
push
inc
ljmp
jmp
jmp
sarl
inc
jmp
mov
bound
push
leave
mov
mov
stc
xor
xor
pop
mov
das
lret
das
push
mov
out
loope
in
add
lret
xchg
dec
ret
lahf
xor
lret
fnstcw
cmpl
stos
rcrl
rcr
out
sub
mov
pop
jnp
pop
fmuls
out
sbb
jnp
stc
gs
loope
jmp
jmp
lsl
sbb
or
mov
xchg
nop
dec
or
cmp
lods
sub
inc
pushf
mov
push
sbb
mov
out
in
cmp
cltd
jo
jno
jmp
js
inc
or
mov
leave
xor
in
inc
repz
cli
mov
xor
push
mov
cmp
mov
fstp
in
cwtl
mov
lods
xor
sbb
and
dec
out
jl
stos
bound
jge,pn
loopne
fs
dec
hlt
iret
cmpsl
clc
popa
and
aaa
sbb
pop
xchg
dec
int3
loopne
xchg
mov
int3
inc
loop
js
movsl
and
loop
jmp
pop
pop
or
sub
cmp
xchg
aas
fs
or
or
xor
fidivs
jns
xor
daa
cmp
sbb
push
cmp
jb
movups
cltd
and
lds
nop
sub
je
icebp
ror
push
insb
lods
adc
jg
inc
rcrb
dec
mov
or
fxch
mov
outsl
test
xor
jecxz
je
push
aas
inc
mov
add
dec
cmpsb
xchg
ret
ftst
scas
rclb
dec
enter
lea
xchg
outsl
mov
je
shlb
dec
stos
clc
xchg
jl
jno
and
sbb
push
lods
aad
jo
div
mov
clc
out
mov
add
or
iret
das
mov
push
lret
repnz
fcoms
daa
in
mov
jnp
loop
test
daa
adc
jp
inc
or
add
inc
fildl
xchg
aad
cltd
mov
mov
pusha
fsubs
fwait
dec
mov
jg
lods
ficompl
pop
movsb
enter
fstl
jno
mov
push
jne
lea
loopne
sbb
aad
inc
sbb
rcl
repnz
jge
adcl
or
imul
inc
push
stc
lea
mov
xchg
lcall
sub
fsubrp
imul
repz
xlat
addl
enter
sbb
dec
dec
imul
test
xchg
xchg
mov
xchg
ja
push
test
cltd
aad
mov
js
imul
inc
lds
adcl
jno
pop
lods
iret
or
or
add
divl
jecxz
psubsw
lahf
cmpsl
test
mov
jp
aas
stos
jge
jo
xor
nop
pop
xchg
aam
lods
pop
test
xchg
enter
lods
sub
mov
repz
push
and
push
xchg
mov
pop
cwtl
cmc
leave
adc
mov
xor
test
mov
push
pusha
mov
lods
and
dec
mov
stos
ljmp
flds
es
inc
or
jnp
mov
sbb
ljmp
dec
mov
adc
inc
and
xor
mov
cmp
adc
ja
adc
mov
mov
sbb
dec
inc
jo
lock
gs
mov
fwait
push
negl
mov
xchg
outsl
cmc
sub
jnp
cmpsb
test
cmpb
hlt
bound
inc
push
jmp
das
addl
lds
lret
cld
or
jo
insb
imul
ja
xchg
daa
cmpsb
call
fdivr
sahf
fstps
mov
add
aad
mov
xchg
jae
sbb
out
leave
add
test
loop
adc
aam
xchg
andl
and
ds
test
fwait
pop
cmp
pop
pop
icebp
pop
shrl
pop
loope
mov
pusha
xchg
gs
dec
push
popa
fiadds
in
push
add
loope
sub
popa
std
xchg
popf
mov
mov
cmpsb
add
jae
clc
insl
mov
jb
movsb
sahf
push
mov
sbb
in
adc
arpl
popa
ret
das
sub
mov
es
adc
add
fcmovnb
stc
push
movsb
mov
and
subb
aad
push
lock
int3
push
fdivl
push
icebp
movsb
into
aaa
mov
dec
mov
xor
fstps
lea
mov
out
cmp
jle
loope
jbe
fldenv
and
add
movsb
inc
imul
xorb
dec
pop
loop
sub
pop
jl
dec
int
cltd
andl
inc
pushf
js
loopne
add
cs
or
arpl
mov
adc
lret
data16
or
stos
ja
lea
addr16
adc
in
arpl
xchg
outsl
lods
mov
inc
or
cmp
push
add
mov
pop
jle
sbb
test
or
xchg
imul
and
jp
in
aad
mov
enter
in
mov
lods
dec
jo
rorl
out
pop
daa
dec
leave
shll
enter
xor
fsubs
insb
daa
jne
inc
jg
dec
push
call
insb
aad
insb
mov
pop
xchg
pop
fcompl
fsubl
lods
mov
jle
add
lods
mov
pop
or
sbb
pop
ds
mov
repnz
mov
sub
and
adc
outsl
movsb
jbe
xor
into
push
int
popa
jo
mov
loope
test
sbb
push
push
ret
std
das
and
into
xchg
mov
imul
roll
mov
cmp
sbb
adc
in
jb
jno
insb
xchg
cli
pop
push
pop
jg
dec
xor
jg
test
test
add
adc
xor
pop
adc
ljmp
lds
dec
rcll
fdivrl
sub
or
jp
jo
popa
sub
lahf
ljmp
lret
push
jno
daa
lods
pusha
sti
pop
mov
push
adc
mov
dec
mov
jle
jecxz
gs
dec
sub
mov
dec
adc
lds
cmc
jno
outsl
testl
lock
popa
adc
sbb
pop
test
lret
out
and
stc
and
sub
mov
scas
add
into
mov
jne
jmp
rcr
sbb
push
xchg
jmp
loope
int3
inc
mov
or
mov
xor
addl
stos
or
test
mov
inc
test
push
mov
push
call
add
or
dec
pop
int3
mov
ret
push
jmp
inc
incl
lea
or
in
xor
ret
cmp
ret
mov
inc
jb
mov
xor
out
shll
jecxz
pop
int3
pushf
adc
xchg
leave
adc
mov
sub
sbb
xor
dec
pushf
iret
pop
sub
add
jae
push
push
clc
ljmp
jb
sub
rol
and
ljmp
pusha
dec
sbb
aad
xor
sbb
push
adcb
rcll
jge,pt
fsubrp
enter
fwait
into
daa
push
push
test
cwtl
and
test
lea
fisubrl
aad
inc
push
inc
sbb
fdivp
subl
dec
jae
daa
rdtsc
sbb
sbb
fistl
sahf
push
test
ljmp
cmp
dec
mov
shll
ret
jo
push
and
ja
push
imul
cmc
loope
lods
or
arpl
mov
push
jmp
in
iret
xchg
dec
test
std
and
rolb
cs
add
test
mov
push
test
mov
movb
xchg
les
int
sub
faddl
lock
pop
pop
mov
cmpb
mov
mov
mov
pop
pop
repnz
fs
jge
fwait
cli
xchg
dec
mov
dec
out
in
mov
and
in
sub
andl
pop
dec
jns
xor
loop
in
adc
adc
and
pop
xchg
xor
clc
xchg
mov
insl
lock
rcr
sbb
dec
cltd
nop
in
imul
inc
or
and
mov
mov
cmp
mov
aas
jo
scas
adc
or
jbe
repnz
popf
xlat
loopne
bound
aaa
adc
push
lods
push
lock
shll
sbb
jns
push
jne
sub
xor
mov
subb
fs
xor
push
out
and
cmc
cwtl
sbb
push
popf
or
lahf
lret
xchg
inc
testl
movsb
fmul
xor
icebp
or
mov
push
test
lea
xchg
dec
andb
jb
stc
xor
call
lods
cmp
mov
inc
andl
and
pop
scas
lods
sbb
jp
jne
nop
or
pop
roll
jb
lret
in
test
mov
jecxz
inc
scas
lcall
shrb
rcrl
test
xchg
push
sarl
sub
push
rcr
jnp
cli
xchg
idivb
add
xchg
out
ret
out
add
jnp
dec
xchg
scas
mov
and
in
cmpsl
add
and
or
cli
xorb
aad
adc
les
lock
cmp
jg
mov
cwtl
mov
xor
jge
mov
testb
dec
shufps
nop
or
inc
and
aam
xor
or
cmp
stc
dec
lea
std
dec
popl
inc
add
push
dec
dec
pop
out
lahf
addr16
inc
inc
ja
dec
mov
xor
add
je
xchg
mov
jae
mov
cmp
jb
inc
clc
test
or
jecxz
pop
ds
mov
mov
es
xchg
repnz
subb
das
inc
pop
cmp
mov
aad
push
decb
mov
xchg
ficoms
jo
fwait
repnz
pop
lea
cmp
sbb
popf
sbb
inc
in
xchg
add
jmp
push
std
jno
stos
xor
push
push
cmp
adc
inc
push
and
jo
jp
mov
jb
dec
cmc
fucom
pop
xchg
ja
push
mov
int3
insb
imul
xor
fcompl
push
call
xchg
iret
lock
jecxz
aaa
pop
nop
add
inc
xor
sbb
js
imul
sahf
mov
and
adc
fucomip
push
mov
sub
xlat
test
nop
inc
cmp
add
gs
mov
mov
pop
add
imul
adc
flds
push
mov
jns
sbb
inc
cmp
add
movsb
push
xchg
xlat
out
rcrb
daa
cmp
stos
mov
dec
mov
mov
imul
mov
test
sbb
pop
jae
jmp
inc
cmp
repz
mul
push
dec
mov
pop
pop
push
pop
push
mov
xchg
rorl
lret
clc
in
aas
push
xor
adc
stos
pop
adc
jb
mov
xor
jb
xor
lods
cmp
jne
les
inc
sahf
jno
out
pushf
jo
cmpl
or
mov
add
mov
mov
stos
cmpsb
pushf
stos
mov
sahf
fistps
xor
adc
test
pop
scas
jmp
jmp
popa
sbb
lahf
adc
and
lock
pop
adc
or
repnz
imul
stos
popf
push
out
and
pushf
push
inc
sub
dec
faddl
sbb
or
jns
addb
push
ja
push
test
nop
negb
repnz
mov
icebp
sarl
inc
cmp
mov
mov
ja
loop
js
xchg
cld
daa
lods
insl
pop
shlb
sbb
stos
rcl
xor
pop
cmpsl
fmulp
xor
mov
mov
mov
inc
xor
cmpsl
push
push
mov
jge
xlat
mov
sti
jge
cmpsl
sbb
cmp
mov
fdivp
dec
fld
cmc
adc
pop
or
mov
pop
shll
jae
push
ds
gs
inc
or
dec
cmpsb
pop
add
and
out
sti
adc
stc
movsb
rcll
sti
and
adcl
jbe
jbe
in
push
dec
sbb
add
stc
fimuls
out
in
push
sbb
inc
sbbl
jb
lock
testl
test
xor
test
sbb
mov
out
popa
mov
daa
das
hlt
cmp
or
xchg
dec
sub
in
pusha
xchg
sub
int3
xor
mov
push
xchg
sahf
outsb
orl
fs
pusha
xchg
ret
mov
shlb
or
out
sub
and
sbb
mov
rorl
cmpsb
add
xlat
lods
mov
sub
push
xchg
hlt
dec
add
xor
call
push
adc
mov
adc
xor
stc
jl
push
daa
inc
sub
outsl
and
inc
inc
cmp
outsl
push
loope
jne
insb
aad
pop
lcall
push
jg
sbb
aam
sub
das
inc
adc
iret
popf
lret
mov
adc
xchg
cli
sub
jnp
lret
push
nop
imul
pop
xchg
fiadds
addr16
leave
int3
ror
sbb
push
fstps
fldl
cs
push
std
push
outsb
jne
fistps
mov
xchg
cmc
mov
and
shlb
adc
xor
jae
sub
std
jecxz
or
arpl
pop
inc
outsb
cltd
loopne
or
xchg
adc
mov
sub
jbe
in
das
in
pushf
je
cwtl
sbb
add
insl
outsl
out
inc
jle
inc
iret
sbb
cmp
lahf
jae
out
inc
stc
mov
jle
movsl
mov
adc
ret
xor
xchg
mov
mov
cmp
in
dec
subl
push
adc
lret
loope
xor
xchg
es
inc
imul
clc
fwait
outsb
cmp
ss
and
sbb
in
mov
dec
mov
hlt
push
sbb
inc
mov
data16
jbe
mov
in
inc
movsb
cmc
cld
cmp
outsl
jecxz
lret
sarl
jbe
hlt
xor
pushf
cli
scas
xor
into
cld
inc
aas
xor
adc
push
push
mov
jns
push
jo,pn
orb
arpl
mov
imul
mov
mov
icebp
xchg
lds
rcr
lret
push
jmp
jno
roll
loop
incl
xor
jg
push
into
stos
adc
scas
filds
mov
aas
cltd
or
inc
fwait
mov
xchg
fmuls
int3
inc
in
pop
imul
stc
add
cltd
div
mov
mov
lock
jb
int
fwait
push
push
mov
pusha
xchg
sub
lds
inc
call
xchg
add
push
xchg
and
cltd
decb
shlb
xchg
and
adc
sahf
mov
insl
daa
jge
test
push
jmp
add
push
mov
nop
imul
push
jp
inc
mov
lret
xchg
jle
inc
jnp
xchg
and
cmpsb
xchg
test
sub
cmp
and
pop
mov
cmpsb
dec
rdpmc
bound
pop
inc
lahf
lcall
fwait
cmpsb
or
jae
and
cmp
ret
decl
jbe
cltd
mov
push
sbb
and
adc
out
mov
dec
pop
add
jecxz
mov
dec
xchg
imul
jae
sub
int3
sub
int
sbb
fcoml
cmp
test
pushl
xor
xlat
mov
push
add
lock
stc
jnp
fwait
movsb
sbb
ljmp
mov
testl
adc
xor
pusha
repnz
jmp
negl
test
cmpsl
pop
xchg
ds
fldt
loopne
add
pop
jb
sub
cmpsl
adc
loope
sbb
test
mov
cmp
dec
sbb
dec
pushf
test
push
jo
out
imul
xlat
andl
rorb
in
out
push
popa
sar
sbbb
jmp
call
jl
lea
les
lods
lret
pop
mov
dec
data16
dec
loope
add
fildll
int3
out
push
jno
andl
ja
adc
pusha
mov
aad
icebp
push
sbbb
aas
or
arpl
pop
add
jbe
loop
xchg
popf
jmp
push
aad
dec
repnz
inc
xor
mov
push
xchg
pusha
je
repnz
xchg
mov
imul
leave
lret
in
jne
xor
push
mov
addr16
sbb
aam
jns
or
pusha
inc
xor
mov
mov
add
pmaddwd
xor
dec
add
std
xor
mov
sti
sahf
and
loop
inc
dec
clc
test
stc
ds
pushf
add
adc
mov
adc
or
cmp
gs
push
add
fimull
xchg
iret
in
and
mov
pop
iret
loope
adc
pop
inc
cmp
aaa
mov
jecxz
mov
imul
icebp
push
rcrb
xchg
loope
mov
mov
cld
dec
add
xchg
sbb
or
push
mov
arpl
and
fsubr
and
push
cmp
fwait
and
cmp
cld
fistpll
mov
dec
subl
xchg
stos
sbb
sahf
xchg
jne
imul
adc
pop
pusha
gs
pop
sub
lods
stos
nop
int3
xchg
dec
push
jb
daa
fisubrl
aas
loop
loope
stos
inc
pushf
pop
or
dec
aas
sbb
pop
push
pop
hlt
stc
cmc
push
or
pushl
loop
dec
out
ret
push
jb
stc
mov
stos
jge
inc
add
adc
rolb
into
push
adc
dec
nop
dec
mov
xor
jns
inc
mov
lock
mov
ljmp
sbb
jmp
sub
rcll
dec
xor
xor
cs
gs
push
mulb
mov
pop
pop
mov
stos
pop
repnz
mov
shl
xchg
adc
test
fwait
dec
sub
enter
fs
jg
out
push
adc
jno
xchg
inc
adc
and
dec
jbe
push
jp
gs
sbb
insl
jp
cmpxchg
fcmovnu
sub
or
bound
int
fists
pop
inc
sub
jbe
xchg
cmpl
sub
mov
xor
jns
in
stc
dec
lret
add
xchg
clc
mov
pop
stos
push
mov
shlb
repz
sbb
and
out
rcr
mov
hlt
ss
adc
lds
std
inc
and
cmc
mov
jecxz
add
addr16
xchg
xor
dec
out
sbb
icebp
cld
dec
mov
outsb
dec
shll
movsb
xchg
jg
inc
test
cmp
or
lock
ficoms
sub
roll
int
push
add
mov
outsl
push
mov
lods
or
jb
movq
add
or
sub
and
outsb
imul
jbe
dec
rorb
add
mov
cltd
shl
test
jl
js
mov
sti
pop
cmp
mov
movsb
jb
and
daa
test
or
pop
mov
subb
push
lcall
lahf
subb
xor
fistps
imul
iret
out
add
in
pusha
sbb
jle
insl
lods
cmp
mov
arpl
scas
and
lods
int
inc
ficomps
lahf
mov
mov
pop
dec
and
mov
lods
sub
mov
pop
hlt
jmp
xchg
andl
mov
mov
and
inc
es
icebp
mov
inc
and
lods
or
test
mov
cmp
shlb
jne
jne
test
xchg
sub
rol
shlb
scas
xor
and
and
mov
dec
mov
sub
popf
repz
sub
dec
ljmp
add
cmc
xchg
mov
test
or
or
cld
mov
std
mov
mov
mov
mov
sbb
mov
sbb
xlat
movsl
out
push
jnp
ss
repnz
setns
fadds
dec
in
mov
cmpsb
inc
enter
jae
xlat
imul
cmp
loope
jl
aam
aad
jmp
mov
imul
fsubr
mov
mov
aam
sub
inc
mov
rcl
das
fs
pushf
mov
test
pop
pop
mov
clc
dec
in
jno
inc
xor
cmp
pop
cmp
mov
test
pop
and
imul
dec
push
ficompl
test
xor
push
xchg
jb
cli
jecxz
je
sbb
pop
jo
lret
dec
jmp
pop
ret
lods
lahf
repnz
dec
inc
mov
lods
sub
jo
enter
xchg
pop
std
fildll
xor
les
and
xor
lock
xchg
loope
mov
xchg
call
inc
daa
sub
inc
je
mov
inc
mov
push
sbb
leave
leave
les
imul
push
dec
leave
or
fistl
int3
dec
pop
or
push
pop
or
into
imul
enter
loopne
pop
outsl
ds
ss
pop
arpl
imulb
jbe
adc
pop
repz
inc
mov
outsl
sbb
or
cltd
mov
push
lock
aam
pop
loop
out
and
movsl
aaa
cmp
mov
mov
imul
dec
add
mov
test
ja
cli
xchg
push
imul
aam
jne
fimuls
sbb
pop
cltd
repz
nop
jmp
pop
outsw
mov
cmpsl
fwait
mov
inc
push
dec
clc
sbb
xor
fsubrs
shlb
xor
pop
mov
xor
push
add
jg
hlt
xor
aam
mov
cmpsl
fbld
mov
dec
push
lock
mov
push
push
shrb
add
xchg
out
xchg
inc
aad
or
scas
dec
push
movsb
das
mov
push
nop
and
pop
pop
lock
inc
lcall
push
cmpsb
call
loope
and
or
jmp
into
iret
in
cmpsl
lret
orl
and
mov
aas
aaa
adcl
jg
mov
xchg
mov
std
daa
loope
imul
or
push
inc
in
in
push
fcoml
mov
mov
jo
stc
mov
imul
sbb
xchg
repnz
sub
pop
daa
rcl
ret
fmul
dec
ss
cmpsl
or
jbe
leave
xlat
test
stos
loope
and
adc
push
fstl
xchg
pop
test
adc
pop
add
pop
mov
sbbb
in
jp
test
cmc
jle
and
cmp
pop
sub
push
divl
cmp
addb
sti
push
xchg
sbb
dec
fidivs
je
or
pushf
jmp
testb
xchg
mov
sti
pop
mov
pushf
mov
mov
clc
outsl
mov
xor
seto
pop
popa
jns
test
fdivl
jno
pop
repz
mov
push
test
cmpsb
pop
out
jecxz
std
ds
repnz
xor
loope
lret
jns
xorl
movsl
cltd
pop
repnz
mov
ljmp
inc
push
pop
jns
int3
inc
cld
rol
das
and
inc
pop
test
iret
sub
int
mov
ret
jle
mov
and
decl
int3
push
sub
repnz
mov
in
insb
xor
push
ficompl
cmp
xor
dec
test
stc
arpl
scas
dec
inc
das
adc
fbstp
xchg
inc
or
lcall
cli
scas
inc
shlb
popf
mov
jge
jl
or
push
jmp
arpl
movsl
lods
push
push
clc
cmpsb
xchg
mov
push
or
loop
mov
data16
out
push
cli
mov
sub
cmp
and
addr16
xor
push
hlt
adc
jns
and
std
andb
jge
dec
sbb
gs
jecxz
mov
sub
xor
popa
lret
cmp
icebp
int
cmpsl
jecxz
push
test
add
les
sub
jnp
mov
outsb
repz
xor
imul
fldl
arpl
xchg
lcall
mov
in
xor
jae
jae
xchg
das
imull
insl
test
and
lea
sbb
mov
out
repnz
pop
and
lahf
sbb
inc
add
ss
adc
lock
int3
scas
xor
sub
in
andl
ret
mov
dec
push
push
icebp
or
sub
inc
testl
mov
incl
mov
scas
popa
into
jge
inc
pop
push
dec
jle
es
nop
jb
push
loope
sbb
sar
adc
pop
inc
push
sbb
fcomi
dec
xchg
aad
push
xchg
mov
clc
aas
imul
dec
hlt
pushf
sbb
sbb
adc
cmpsl
xchg
imul
pop
and
xchg
mov
sbb
sub
sbb
mov
cs
rolb
dec
inc
push
fs
push
and
lock
inc
gs
pop
pop
push
jne
movsb
pop
adc
daa
inc
xor
mov
xchg
inc
cmp
jo
sub
imul
xlat
sbb
outsl
sahf
scas
pusha
icebp
jmp
repz
test
andb
aam
into
sti
sahf
pop
add
xlat
iret
fmul
lea
test
mov
add
or
and
outsl
mov
lods
nop
sub
inc
mov
xorb
xchg
sbb
pop
sbb
jg
lcall
imul
test
and
mov
xor
xchg
paddusw
pusha
adc
inc
pop
scas
sbb
fs
inc
inc
push
xor
sbb
ffree
in
adc
rolb
mov
push
ljmp
mov
dec
push
aam
xchg
sub
cwtl
fnstenv
jae
scas
mov
leave
pop
lcall
in
int3
lods
xchg
pop
fiadds
inc
fld
out
mov
or
add
repnz
or
inc
jge
mov
jl
and
xchg
jecxz
outsb
or
push
adc
and
pop
jo
jp
mov
add
pop
xchg
or
into
xchg
mov
add
lea
clc
test
push
popf
cmp
fwait
insb
incl
dec
add
jecxz
orb
lret
fwait
and
inc
imul
push
sti
mov
enter
ljmp
stc
pushw
inc
pop
addb
sbb
sub
mov
push
xor
jmp
sahf
mov
push
popf
roll
out
sahf
mov
out
cwtl
lock
mov
aaa
mov
shll
pop
cmp
loop
cmp
dec
dec
fwait
inc
jne
mov
mov
adc
mov
nop
jl
push
std
sub
iret
pop
cs
sub
aam
movsb
inc
arpl
test
lret
cmpl
loopne
aaa
dec
sub
add
sub
pop
pop
fwait
dec
mov
lock
enter
cs
jecxz
inc
jmp
and
fdivrs
adc
push
cvtps2pd
inc
push
push
pop
jb
xchg
enter
pop
dec
mov
push
ret
mov
lret
xchg
mov
inc
sbb
ljmp
push
fisttpl
dec
aaa
xchg
push
andb
jo
mov
shlb
cli
dec
pop
or
xchg
lea
sbb
mov
das
or
jge
inc
call
inc
jmp
fsub
or
adc
loop
mov
cli
into
inc
dec
adc
stos
xchg
pop
add
loope
repnz
mov
filds
stc
adc
and
or
xchg
stos
or
sub
xchg
ret
sbbl
mov
jle
jle
inc
into
lods
int
mov
aaa
mov
or
fldt
cltd
lret
sub
jbe
and
xchg
pop
xor
jl
jb
addr16
mov
rcr
jmp
dec
xlat
dec
mov
xchg
out
hlt
loop
test
jb
fdivs
sub
adc
shll
inc
rol
mov
cmp
xlat
stc
sub
fistpll
xlat
out
pop
cwtl
pop
pop
jae
dec
push
cmp
lcall
fs
add
out
fnstsw
addr16
mov
dec
fmul
in
loopne
xchg
subb
call
jmp
out
xchg
jge
stos
jno
cld
inc
inc
mov
push
xchg
daa
icebp
clc
xchg
fildl
test
mov
jno
stos
test
mulb
mov
mov
loopne
or
test
cmp
pop
sub
sarl
adc
mov
cmpb
adcl
mov
pusha
jmp
lcall
or
jge
pop
cmpsb
out
aad
shrl
movsb
mov
sbb
sub
jp
mov
push
out
xor
addb
je
popl
xchg
mov
jl
adc
je
pushf
push
inc
xchg
and
dec
push
push
dec
xor
lret
adc
in
push
into
arpl
aam
outsl
lock
shlb
mov
dec
xchg
popf
pop
push
not
xchg
fsubs
pop
ss
push
sbb
inc
iret
rcr
cld
repnz
jmp
lock
insl
pop
fsts
shlb
xor
nop
pushf
push
xor
pop
inc
xchg
call
xchg
das
mov
cmpsl
or
enter
xor
enter
push
cmp
enter
or
mov
lahf
movsb
add
in
in
xorb
push
cmpl
mov
sub
test
push
sub
mov
imul
push
popl
adc
les
add
loop
pop
int
mov
sbb
sbb
mov
xchg
mov
mov
iret
add
push
push
dec
mov
out
xchg
adc
push
out
pop
mov
pop
in
lahf
or
sbbl
mov
sbb
lahf
dec
jo
sub
scas
dec
push
jecxz
mov
ficoms
ss
sub
inc
push
inc
pop
add
jp
push
out
in
out
cmp
xor
mov
push
int
jb
and
xor
pop
push
in
addb
xor
out
ss
jb
jmp
or
loope
push
cmp
push
add
sub
jnp
popa
push
inc
addr16
sbb
hlt
jp
push
pushf
jecxz
push
jno
fistpl
scas
add
filds
imul
repz
cmp
fdiv
inc
pop
and
push
mov
push
jno
sub
jecxz
stos
rcrl
dec
insb
jl
xor
sbb
cld
in
cmc
mov
xor
out
xchg
pop
add
jl,pt
xchg
jne
mov
pop
insb
fisttpll
int3
mov
jb
push
and
and
fcomps
jbe
push
inc
ljmp
sbb
dec
pop
mov
sbb
push
inc
int3
outsb
les
scas
xor
mov
popa
xchg
data16
xchg
push
pop
inc
mov
je
and
mov
or
mov
ret
pop
std
inc
fwait
bound
cmp
sub
popa
cld
push
ror
dec
pushf
dec
fsubl
xor
paddusb
push
mov
aad
ret
cmp
push
adc
icebp
aad
mov
jno
inc
popf
movsb
outsl
cmpsl
sub
mov
test
mov
in
insl
incb
ret
out
insb
mov
push
cld
sahf
or
xor
das
add
jae
rorb
add
or
cmp
add
dec
iret
stos
addr16
in
xorl
pop
add
inc
bound
mov
out
add
das
lds
lea
push
dec
xchg
jecxz
mov
adc
sti
cwtl
mov
sbb
aam
cs
push
hlt
int3
cmp
movl
inc
push
repnz
fstpt
push
loopne
xor
mov
xor
jle
iret
roll
push
test
mov
push
add
dec
outsb
cmpsb
or
adc
repz
pop
xor
icebp
jecxz
jge
pop
jbe
dec
sarb
fdivrl
cmpl
fcomip
xor
inc
fisttps
sub
arpl
add
mov
cmc
rorb
mov
adcb
fucom
mov
cmc
inc
test
fidivs
jle
mov
mov
xor
add
jae
xor
or
push
adc
in
shlb
rolb
inc
sahf
dec
push
lret
cmp
cmp
dec
test
cmp
cmp
dec
test
mov
shlb
push
adc
mov
cmp
aas
je
ds
push
aaa
sub
loopne
inc
fs
jns
mov
ss
adc
cwtl
movb
inc
xor
xor
loop
inc
and
icebp
or
jp
ret
pop
jno
mov
cmpsb
shrl
fsubrs
cltd
fiadds
mov
shll
cmpsl
je
push
sub
outsb
dec
shr
bound
add
push
sbb
imul
cmc
cmp
adc
repnz
xchg
ds
loop
fimuls
mov
daa
adc
jmp
jle
shll
pmaddwd
clc
mov
fisubs
repnz
and
mov
xor
add
push
ret
add
pusha
xchg
mov
ljmp
add
idiv
mov
dec
sbb
fs
movsl
cmp
mov
outsb
jp
sarb
jo
xorb
icebp
sub
or
lock
nop
mov
xchg
lcall
pop
mov
mov
ds
cmp
or
and
movsl
orl
ret
pop
sti
out
xor
das
pop
in
push
pop
xchg
xchg
jae
jne
rorb
out
popf
insb
stos
out
aas
or
or
lahf
lahf
lcall
sbb
popa
lcall
mov
sub
add
sbb
pop
dec
adcl
jb
cmpsb
push
mov
jae
xchg
imul
arpl
xor
dec
fs
ljmp
in
and
jp
call
iret
clc
and
daa
popf
jge
in
add
mov
testl
mov
sbb
leave
sub
pop
xchg
mov
testl
lahf
in
and
orl
outsl
int3
pop
ret
out
scas
int3
or
rcl
sbbl
sub
push
outsl
jle
enter
outsl
inc
mov
roll
out
stc
test
repz
repz
sahf
ljmp
loopne
rcll
dec
imul
jl
mov
lock
clc
bound
cmp
push
or
je
movsl
pushf
movsl
cld
test
mov
repnz
sti
cmc
shll
or
les
femms
fwait
mov
push
or
cld
inc
mov
inc
or
and
fiadds
aas
icebp
stos
sub
xor
scas
xor
in
push
mov
jne
add
jecxz
repnz
icebp
or
js
pop
xchg
popf
cmp
pop
test
cli
dec
out
sub
ss
stc
push
mov
scas
aam
lds
mov
dec
jo
mov
or
inc
or
pop
mov
es
cmp
jne
pop
fwait
outsl
xchg
aas
mov
sbb
outsl
nop
sarb
lods
pop
and
mov
xchg
fildll
imul
fdivrl
int
hlt
icebp
dec
sbbb
imul
sub
arpl
or
pop
mov
push
push
insb
scas
xchg
or
out
and
dec
xchg
mov
gs
orl
sar
cmc
or
xor
dec
xchg
jecxz
sub
sbb
inc
sbb
shl
push
xchg
es
leave
lds
lea
mov
incb
loope
frstor
sub
jae
sbb
pop
pop
roll
sbb
movb
lods
adc
das
sbb
insl
or
js
dec
mov
adc
fnstenv
mov
sub
andl
cmp
fwait
outsb
mov
test
repz
repz
xor
jnp
les
pusha
cmp
stos
xchg
adc
std
addr16
gs
push
dec
or
ds
mov
lock
push
shl
xchg
mov
inc
inc
and
push
inc
leave
jbe
dec
mov
jno
frstor
adc
xchg
adc
push
repz
adc
test
std
daa
push
mov
roll
test
xlat
sub
mov
arpl
out
fisubrl
mov
leave
dec
fwait
in
dec
xchg
or
movl
ret
jo
pop
mov
sarb
cmp
fucom
dec
fldl
lods
add
inc
sbb
xor
xor
or
sbb
lret
imul
mov
xor
jne
add
arpl
pop
leave
divb
pop
lods
test
test
sti
push
push
push
cmc
xor
push
jge
xor
repnz
xchg
aaa
sub
pushf
stc
cmpsb
out
iret
cmpsl
lods
ja
shrl
push
push
repnz
mov
jmp
push
pop
ds
mov
pop
mov
push
cmp
sahf
cli
or
sbb
hlt
jle
mov
push
int
dec
adc
mov
or
scas
dec
mov
xchg
cli
cs
loope
inc
sub
xlat
fucompp
sahf
adc
inc
in
sub
pop
stos
ss
add
push
lds
pop
aad
sbbb
mov
push
sbb
push
mov
dec
and
mov
or
pop
dec
or
push
cwtl
mov
and
mov
add
adc
lahf
pop
dec
insl
addb
int
sub
jge
and
jbe
pop
pop
sbb
mov
test
mov
jne
pop
imul
scas
loopne
stc
dec
and
lret
and
push
cmc
insb
cmpsl
or
mov
jle
lret
mov
adc
sub
xchg
std
pop
push
adc
stos
xor
cmpsl
sbb
hlt
loope
pop
sbb
imul
loopne
xchg
dec
rorl
in
xchg
ret
sbb
inc
pop
fsubrl
fcomip
in
push
test
push
ja
add
sar
adc
xchg
add
mov
enter
mov
jnp
mov
jno
mov
mov
sub
shlb
adc
xor
test
mov
fsubl
and
lcall
push
repz
mov
dec
lods
mov
jl
incl
adc
xor
push
add
push
dec
inc
adc
and
mov
js
add
mov
pop
stos
mov
out
push
jecxz
cmp
lahf
int
aad
xchg
jmp
dec
cwtl
mov
mov
adc
push
sbb
sub
or
adc
scas
push
cli
jno
fwait
jne
out
push
pusha
pop
imul
inc
xor
mov
push
ss
xor
aam
sub
hlt
rcr
pop
fwait
mov
sbb
daa
stc
push
or
jns
cmp
adc
incl
sub
in
lcall
sbb
dec
loopne
fnstsw
xor
mov
out
cltd
xor
pop
xor
pusha
iret
pop
adc
fwait
inc
dec
call
imul
shrb
mov
and
pusha
push
xor
scas
subb
repnz
cmp
mov
xchg
jmp
test
in
inc
rolb
xchg
push
dec
sub
ds
out
cmpsl
pop
mov
jne
and
stc
adc
xacquire
shll
ljmp
push
or
stos
aaa
jbe
rorb
jne
test
sub
cwtl
add
dec
daa
push
pushf
push
jle
int3
xchg
in
mov
cmp
dec
mov
cmp
imul
inc
cltd
loopne
adc
imul
add
or
xlat
imull
mov
aas
xor
test
das
ss
shll
mov
popa
popf
add
and
getsec
jl
cmpsl
nop
cmp
hlt
fisttpl
fistl
sbb
sub
int3
mov
pop
pop
sub
mov
adc
fnsave
and
sbb
les
mov
add
or
sub
iret
push
fistps
jecxz
and
ja
xchg
jnp
fnsave
fstpl
or
test
mov
imul
loopne
inc
mov
adc
addr16
cld
arpl
adc
in
xor
fldenv
popl
sub
clc
add
or
popa
shll
stc
fmull
lret
sahf
addl
cwtl
adc
ja
std
inc
imul
int
lods
sub
mov
fcmovnu
ret
jns
jae
scas
inc
rcr
sub
rclb
mov
pop
and
jecxz
or
fs
in
repnz
test
out
and
outsb
js
inc
adc
mov
xchg
xor
nop
aad
sbb
mov
fildll
out
sti
aaa
mov
sbb
or
adc
jge
fldl2e
mov
jbe
lea
jl
imul
mov
sbb
inc
push
cmpsl
fidivrs
decl
rcrb
and
test
lods
push
movsl
pop
incl
ret
aam
or
int3
xor
aas
sbb
std
les
clc
xchg
inc
test
jg
lea
addr16
nop
test
xorl
mov
mov
scas
adc
repnz
sahf
lea
adc
adc
push
lret
add
sub
les
fisttpll
popa
xchg
into
and
out
xor
mov
add
push
inc
mov
mov
cs
jb
sti
arpl
insb
xchg
je
shl
xchg
negb
xchg
push
mov
pop
int3
incb
aam
xorb
add
mov
or
cld
add
fstp
lods
ss
mov
into
cmp
mov
sbb
jae
jne
stc
out
imul
fnsave
or
ret
push
pop
aaa
out
mov
push
xchg
lret
push
inc
shlb
mov
xor
pop
adc
cmp
test
lret
push
aaa
int
jno
pusha
push
mov
adc
in
std
out
movsl
pop
and
push
mov
divl
xor
sbb
rep
jno
test
push
lret
xor
es
inc
add
sub
mov
cmp
xor
pop
loope
cltd
and
adc
xlat
mov
stos
insb
mov
pusha
rclb
lods
jb
xchg
sbb
pop
in
pop
test
pop
or
mov
cmc
cwtl
sub
pop
mov
fstl
push
mov
inc
cmp
cmp
in
cmp
cmp
bnd
inc
jnp
mov
scas
or
in
ficoml
xlat
in
filds
push
xchg
ja
es
ficompl
mov
ljmp
or
and
jmp
pop
aad
ds
mov
mov
dec
negl
sbb
out
fildll
or
push
addr16
rcrb
push
aas
pop
xchg
cmp
jle
aas
dec
hlt
cmp
xlat
popf
pop
les
push
enter
es
into
inc
ss
jl
push
out
adc
aam
lea
sub
fisttps
xor
add
jmp
insl
inc
popw
cs
dec
cltd
sbb
addr16
roll
shlb
fisubrl
jae
mov
cmpsl
mov
fidivl
jp
stc
xchg
push
mov
dec
hlt
sti
inc
push
shrb
sar
enter
adc
or
push
sub
sub
aaa
dec
or
mov
lock
pop
mov
sti
mov
arpl
lods
lret
cli
les
out
inc
ss
push
push
popa
inc
and
or
push
lock
cmp
stc
xor
xlat
lods
push
add
dec
fidivl
or
pop
xchg
xchg
bound
add
mov
push
jo
push
push
mov
adc
and
mov
inc
test
test
mov
testl
jg
jge
dec
inc
shr
incb
fldt
and
xlat
leave
lock
xor
outsb
mov
mov
pop
out
dec
adc
or
dec
mov
jge
sbb
ds
mov
inc
cmpsb
xor
js
mov
pop
imull
mov
cmp
sub
clc
out
frstor
sub
sarl
orb
outsb
mov
cmp
jg
ds
stos
jnp
mov
push
aaa
adc
lcall
pushf
push
fadd
cmp
cmc
xor
push
dec
sbb
lds
fsubl
push
and
add
add
adc
repz
sbb
in
push
hlt
cmp
cmp
mov
subb
add
pop
or
outsb
mov
jne
movsb
add
int
sbb
dec
test
je
dec
pop
sahf
xchg
ficomps
fisubs
test
xor
loop
mov
aaa
in
and
or
push
push
lea
add
lea
fs
pop
mov
push
jecxz
gs
movsb
out
or
hlt
ret
pop
js
mov
cmp
mov
pop
fadds
or
in
enter
inc
xor
outsl
or
xchg
paddd
hlt
jle
stc
out
scas
outsb
or
loope
and
xchg
mov
fwait
in
inc
out
lcall
js
push
rcl
adc
ret
sub
cmp
inc
ret
cwtl
or
loopne
cmp
jg
fstpt
xorl
not
ss
pop
push
xchg
adc
aaa
leave
jl
and
push
out
mov
jl
sub
fs
imul
rclb
popa
les
mov
xor
adc
and
cmp
sub
inc
outsl
arpl
push
mov
xchg
adc
and
jnp
dec
push
loopne
jecxz
xor
in
fidivrs
out
push
pusha
or
xchg
mov
hlt
push
loop
das
hlt
cs
jmp
into
cmpsb
jae
inc
test
dec
mov
jno,pt
outsl
ret
jno
cmpsl
in
and
scas
popa
in
in
and
xchg
inc
and
pusha
inc
jo
mov
imulb
es
sarb
ret
js
xchg
out
pop
ja
pop
lahf
or
jbe
cwtl
lock
nop
bound
pop
cmpsb
adc
jl
mov
cmp
cmc
mov
cmp
outsb
xor
call
leave
pop
sbbb
pop
stc
repnz
repz
or
mov
test
enter
xchg
push
inc
or
movsl
mov
jmp
or
adc
add
lods
stos
mov
lods
aaa
dec
sub
adc
sar
pop
stos
and
xchg
pop
xchg
scas
push
dec
mov
mov
insl
int
loopne
dec
pop
rolb
loopne
lea
add
cmc
out
xchg
pop
jmp
and
notb
mov
lock
cmp
in
inc
or
roll
mov
fstps
pop
shll
or
push
cld
negb
jbe
mov
sbb
sub
add
or
addr16
imul
xchg
js
fdivl
xor
frstor
test
fsubrl
call
jle
shll
mov
jnp
stc
ds
add
jge
mov
push
cli
data16
xlat
mov
lods
cmp
jno
fwait
pop
dec
or
jmp
iret
sbb
hlt
add
lds
xor
mov
ss
mov
test
inc
adc
add
ljmp
sub
xchg
xor
and
movsl
aas
bound
addl
sbb
sub
fcomps
or
cld
push
mov
scas
mov
jne
shr
js
mov
pop
mov
inc
xchg
out
ret
xchg
pop
in
dec
mov
call
xchg
test
cld
xchg
push
push
shll
shr
pop
sbb
push
movsb
push
xlat
xorl
mov
jns
bound
shl
fstl
mov
sbb
sbbb
insl
enter
ss
scas
test
push
xchg
ja
mov
sbb
ret
daa
loop
xor
jnp
data16
jae
pop
loopne
daa
mov
lret
std
mov
mov
repz
mov
ljmp
cmpsl
aam
or
ds
icebp
push
mov
ljmp
loope
or
les
mov
push
push
nop
in
or
lds
aas
decl
mov
mov
filds
cld
cmpsb
sub
call
push
clc
push
outsl
cmp
jge
popa
mov
dec
popf
lret
dec
bound
adc
push
pop
out
xorl
or
pop
lret
jmp
dec
popf
xchg
enter
test
lods
les
out
pop
and
adc
inc
shrb
daa
mov
dec
mov
aad
notl
adc
cwtl
lock
outsl
add
sub
jg
cli
cmpsb
jg
adc
dec
adc
cmc
ljmp
mov
cld
stc
and
ljmp
pop
push
mov
dec
dec
mov
xor
xchg
pop
dec
jne
out
ret
clc
mov
fisttpl
xchg
ret
mov
insb
enter
xlat
call
in
ret
mov
fsubrl
addr16
nop
add
jo
cli
cmp
sbb
jne
fcmovbe
pop
cld
xchg
test
or
xchg
insb
ss
enter
stos
ret
adc
jmp
insb
dec
sub
test
push
movsb
in
jp
lea
pusha
cli
add
xchg
inc
xchg
movsl
push
xchg
pusha
mov
jecxz
adc
push
iret
xchg
jp
xchg
notl
aaa
ljmp
pop
aaa
cltd
int3
inc
mov
vrcpss
fidivrl
mov
xor
ja
shll
cmp
add
push
pushf
in
in
mov
jae
mov
jo
rcr
lcall
cmpsb
lret
out
mov
dec
push
loopne
push
push
jg
lret
cwtl
xchg
jnp
xchg
jmp
mov
mov
inc
popf
nop
loope
push
insl
nop
pop
pop
sub
insb
cmpsl
xchg
pop
mov
dec
mov
test
int3
sub
xlat
jo
decl
repz
xchg
jne
push
dec
addr16
and
imul
lcall
test
testl
pop
mov
jmp
psubsb
cmp
ja
mov
mov
cwtl
repnz
sbb
sahf
popa
das
sbb
mov
adc
xor
mov
scas
outsb
lahf
fwait
sarl
inc
or
sub
pop
xchg
jg
xor
enter
mov
dec
jns
inc
imul
and
xchg
fs
cmpsb
test
call
add
imul
mov
ret
cmp
movsl
andb
pop
rclb
fbld
push
stos
aas
lock
clc
xchg
fisttps
leave
dec
adc
scas
in
ljmp
imul
pushf
inc
daa
pop
and
pop
popa
fbld
fstpt
or
sbb
sbb
div
add
add
daa
and
ljmp
scas
pop
out
dec
mov
lahf
adc
cld
pop
push
jge
or
mov
fisttpl
repnz
les
push
decb
xor
or
pop
pop
adc
pop
enter
mov
jo
add
cmpsl
cld
shll
pop
jnp
int3
xchg
je
sub
jp
xchg
cmp
adc
out
xor
jle
add
and
xchg
rcr
lcall
rorl
cmp
cmpsl
clc
sbb
out
movsl
out
lcall
sub
or
pop
adc
sub
lret
test
mov
sub
out
xor
and
adc
mov
mov
fbstp
xchg
mov
push
sti
sbb
lcall
popf
xor
add
pusha
movsl
jb
mov
push
arpl
dec
int3
pushf
push
cwtl
add
jb
mov
adc
bnd
dec
or
push
adc
add
scas
movl
in
sbb
xchg
push
push
xor
les
sbb
pop
inc
push
sbb
mov
jo
jl
loopne
add
sti
jbe
jge
out
mov
leave
les
in
lods
mov
pushf
push
mov
and
sub
jecxz
sbb
xor
movsb
ret
lods
jle
mov
aam
sub
rolb
jp
sbb
xor
xchg
add
inc
jecxz
jnp
dec
cld
cmp
mov
call
rcr
sub
stos
aad
arpl
push
mov
sub
dec
aad
scas
sbb
int
xchg
subl
outsl
xchg
inc
je
pop
inc
pop
or
xor
mov
stos
mov
loope
inc
rcll
pop
and
fcompl
push
push
fidivrs
mov
push
xor
sbb
into
pop
addl
mov
and
sahf
mov
jo
cwtl
testb
push
rorb
cmpsb
enter
push
lods
cmp
movsb
ss
inc
pmulhuw
adc
add
stos
sub
in
sub
imul
fcmovbe
iret
ret
sub
push
loopne
arpl
pop
aas
js
dec
mov
and
inc
sub
dec
and
and
xchg
inc
cmp
mov
hlt
push
call
out
fptan
mov
mov
or
sbbb
adc
cmpb
inc
cmpsl
imul
pop
and
or
push
pop
xor
push
jns
mov
mov
xchg
inc
dec
iret
lods
lds
lret
shrl
loopne
mov
push
mov
aad
cmp
xchg
sarb
jne
xlat
and
clc
push
inc
nop
pop
push
stos
pop
or
dec
mov
inc
or
xchg
sub
xchg
mov
leave
sbb
aam
clc
cmpsb
mov
rorb
add
sub
or
das
dec
sub
and
repz
sub
xor
and
repz
das
jecxz
es
jmp
ret
in
jb
mov
xor
insb
push
nop
cmp
test
fsubl
adc
lods
or
mov
rcl
push
cmp
sub
pop
sbb
mov
ret
les
pop
lahf
frstor
stos
aad
std
bound
xchg
jle
xlat
pop
test
push
dec
inc
cmpsb
fwait
sbb
mov
jmp
repz
jbe
imul
cmp
jbe
xchg
lcall
mov
and
lods
add
adc
sub
push
mov
inc
dec
sbb
addr16
idivl
jno
adc
sbb
lret
sahf
lods
push
fldt
pop
lcall
test
aam
xor
inc
fimuls
test
mov
jg
arpl
mov
pop
pop
xchg
out
jns
cwtl
test
and
adc
sbb
adc
and
mov
xor
pop
ljmp
jmp
inc
mull
dec
popa
repz
clc
aas
push
adc
xchg
daa
cmpsl
mov
jl
mov
pop
shll
cmpsb
call
add
es
shll
inc
mov
xor
sub
cwtl
stos
arpl
pop
aam
push
out
movsb
and
mov
rolb
cmpsb
mov
decl
loope
mov
icebp
movsl
decl
mov
bsf
jno
add
mov
xchg
jbe
push
call
int3
icebp
pop
sub
push
ret
dec
lods
lcall
push
jbe
lds
pop
in
xchg
push
mov
add
or
inc
shl
cmpsl
push
mov
jo
xchg
pop
pop
sahf
mov
daa
hlt
cmc
pop
mov
iret
or
dec
sbb
push
imul
inc
adc
les
stos
andb
scas
adc
lahf
ja
mov
int
repnz
adc
push
imul
in
cwtl
lock
mov
xor
shll
jp
push
dec
ret
adc
sub
fldt
lods
mov
out
adc
jae
divb
lret
into
dec
mov
xchg
push
cld
or
movsb
mov
rcll
mov
gs
adc
fistl
pusha
mov
scas
jne
sbb
into
cs
jmp
or
push
inc
cs
dec
pop
je
mov
xor
xor
stos
cmpsb
les
outsl
xor
clc
sub
dec
add
cmp
notb
rcr
sub
mov
mov
jns
lcall
mov
mov
jecxz
cmp
sti
dec
ja
and
ret
jae
mov
icebp
popa
pop
and
popf
jns
fwait
xchg
in
scas
popa
cmp
cld
cld
lret
adc
addr16
les
call
push
cmp
xchg
inc
cmovns
incb
aaa
lea
pop
push
test
in
outsb
mov
cmp
and
push
adc
push
xor
xor
ljmp
xchg
add
lods
pop
roll
sbb
dec
repnz
aaa
clc
xor
insl
andl
pushf
imulb
test
mov
fidivl
out
mov
mov
cmp
jb
push
ds
add
fsts
push
es
sub
xchg
popa
mov
lods
push
mov
cli
inc
push
sarl
cwtl
mov
out
enter
jl
popa
pop
loop
mov
loop
call
fists
shlb
and
xchg
icebp
sbb
pop
sbb
loop
leave
loop
pop
sub
sub
inc
xchg
xchg
sarl
test
push
test
in
addr16
inc
pop
inc
pop
cld
push
push
pusha
xchg
adc
comiss
gs
aaa
js
and
dec
pop
mov
jbe
mov
imull
negb
pop
mov
cwtl
jbe
pop
dec
dec
cmpsb
mov
or
cmp
dec
stos
push
negl
jmp
mov
das
cmc
lods
xchg
mov
or
pop
sbb
push
out
gs
iret
push
cmc
lahf
add
sbb
outsb
ja
mov
shrb
mov
aas
cli
sbb
fidivrs
sahf
pop
add
ss
shrb
icebp
int
movsl
push
in
scas
dec
sbbl
or
insb
inc
or
repz
movl
pop
les
test
in
inc
cmp
mov
mov
jmp
adc
mov
cmp
push
mov
sub
adc
sub
int3
leave
jne
fldenv
cmp
xchg
cwtl
mov
jmp
jl
push
mov
mov
push
dec
pusha
rorb
pop
test
push
adc
lods
jle
mov
mov
aaa
xor
sarl
ljmp
push
pop
xchg
lds
fwait
xchg
lock
fwait
ljmp
adc
in
pop
jbe
sub
sahf
cmp
lods
out
xchg
sbb
lods
inc
icebp
cmc
aad
loopne
out
sbb
jne
sbb
rcr
mov
inc
jp
xor
repz
ss
mov
cmp
xor
add
dec
pop
out
sub
pop
mov
jns
push
jb
lods
push
pushf
push
imul
add
mov
cmp
push
add
cld
mov
clc
jp
aas
pop
xor
movsb
pop
cli
xor
mov
or
cmp
loop
mov
xchg
aaa
in
insl
sbbl
sub
xchg
je
lcall
xlat
or
push
jo
movb
add
fxch
push
inc
or
fdivrs
xchg
pop
ret
aad
fisubl
cmc
aam
xchg
shll
cmp
inc
push
inc
dec
pop
pusha
out
mov
add
sub
mov
outsl
aad
xor
push
lods
and
xchg
pushf
movsl
mov
sbb
lea
sbb
cmc
inc
insl
scas
jp
lret
mov
cmp
out
xchg
fiaddl
popa
or
cmpsl
jns
push
mov
notb
push
jp
sub
cmpsb
pushf
mov
int3
subb
ds
cs
pop
aaa
mov
lea
sbb
add
je
inc
inc
enter
leave
test
out
dec
pop
pusha
lret
mov
jmp
add
xor
sar
adc
mov
inc
push
hlt
outsl
cs
push
fstps
ljmp
and
mov
lret
clc
loopne
cmp
mov
cmp
cld
iret
sub
cmpsb
pop
dec
push
xor
pusha
repz
pop
or
icebp
aam
sub
sub
push
add
lahf
jp
jge
out
inc
mov
stos
mov
lcall
or
loop
or
xor
pop
cmp
outsl
xor
or
dec
mov
or
aas
jnp
and
pop
out
in
adc
clc
push
orl
mov
je
xor
jbe
jnp
addr16
imul
adcb
or
adc
mov
push
push
icebp
pop
test
or
mov
cmpsl
movsb
enter
mov
mov
push
push
roll
and
inc
adc
push
inc
xor
adc
dec
ret
scas
mov
lods
sub
iret
in
adc
jmp
mov
or
lea
sbb
fs
and
lock
push
mov
mov
jmp
mov
cmp
sbb
pop
inc
decl
jmp
adc
or
je
xchg
dec
lcall
or
clc
imul
xor
push
call
test
and
aad
mov
movsl
das
sbb
mov
sbb
inc
sbb
xchg
int3
popf
mov
popf
enter
call
jbe
mov
xlat
dec
cmp
sbb
xor
sub
mov
dec
pop
cwtl
jmp
and
adcl
inc
popa
and
jno
fstpl
sahf
xchg
cmp
add
mul
xor
jae
adc
mov
loop
sbb
notb
xor
cmp
testl
movsl
mov
and
jl
dec
add
mov
jmp
out
mov
cmp
jle
add
test
mov
mov
add
mov
ljmp
xlat
xchg
repnz
les
popf
inc
pop
ljmp
fistps
sahf
fsubr
jmp
and
xchg
icebp
push
ret
divl
addr16
iret
xchg
out
in
popf
dec
mov
lret
and
jnp
mov
daa
jnp
mov
repnz
sub
ficompl
push
cltd
sbb
lds
fidivl
pop
stos
pop
inc
jb
dec
call
push
xchg
jl
test
ljmp
outsb
adc
inc
loopne
nop
cmpsb
std
pusha
mov
enter
shll
and
lcall
adc
cmc
push
cmc
mov
inc
imul
cmovge
and
mov
push
loopne
enter
inc
das
xchg
jmp
repnz
inc
ficoms
ljmp
lock
jns
incl
insl
out
ja
pop
pop
inc
stos
loopne
adc
stos
sbb
push
hlt
shl
in
inc
iret
or
xchg
notl
pop
adc
mov
loope
inc
inc
jb
repz
test
push
nop
inc
xor
int3
push
cltd
adc
mov
xchg
jle
add
add
and
inc
pushf
mov
std
mov
dec
pop
dec
push
sbb
aad
add
test
inc
roll
mov
push
pop
out
push
repz
rcr
imul
jg
loopne
mov
add
jbe
cltd
sbb
je
dec
pop
pop
cli
jg
mov
imul
mov
ljmp
jecxz
inc
adc
cmc
cltd
sub
and
ds
dec
cwtl
push
dec
mov
mov
inc
pop
adc
adcl
cmpsb
clc
psllw
add
mov
lea
adc
ss
push
xorb
loop
inc
ficompl
pusha
icebp
pusha
mov
add
imul
dec
mov
and
adc
ljmp
iret
cwtl
sti
std
mov
sahf
cmp
xchg
cmp
test
out
aas
das
or
sbb
rorl
jp
push
xor
fidivs
push
pop
mov
out
repz
sbb
ficoml
stc
dec
loopne
adc
xchg
mov
pop
lds
inc
stos
mov
cwtl
jmp
mov
bound
fistpl
xor
pushl
fisubs
push
psllw
test
loop
shll
inc
sahf
outsl
sbb
enter
jmp
aam
mov
jmp
pop
adc
and
push
push
xchg
shll
lea
pop
jnp
push
and
xchg
mov
mov
jmp
push
das
cltd
xchg
test
repz
hlt
pop
jbe
xor
rep
fildll
or
sub
addb
pop
in
pop
sub
loop
inc
ds
mov
push
insl
in
push
insb
ss
jg
test
cmp
push
sub
sub
leave
popa
mov
adcl
or
addps
shll
cli
push
leave
mov
sub
adc
pop
ds
pop
stos
mov
test
sub
inc
fs
in
pop
add
int
scas
imul
leave
addr16
in
sub
pop
cmp
pushf
xor
incl
sbb
sub
inc
push
adc
dec
mov
cs
sub
xor
icebp
test
pushl
jp
lock
lret
sti
mov
inc
sub
daa
jle
inc
popa
fnsave
movsl
pop
jmp
lods
cmpsl
loop
clc
aaa
out
jo
out
rcll
jl
lret
popa
in
add
div
xlat
sbb
push
or
dec
jge
je
xlat
inc
jl
repz
dec
stos
mov
pop
iret
add
movsb
mov
pusha
jle
in
fwait
mov
jmp
divl
push
mov
push
ret
mov
dec
adc
or
xor
xchg
sub
xchg
or
dec
mov
in
mov
xchg
lods
cmp
mov
cmp
scas
xor
mov
enter
clc
fwait
mov
addr16
mov
sbb
mov
inc
xorb
out
adc
dec
inc
fwait
lods
aad
lock
in
pop
jmp
dec
push
movsb
cs
movsl
into
adc
lods
pusha
jg
daa
jns
stos
push
out
xor
xchg
push
xchg
cmp
xor
mov
repnz
loope
jnp
out
xor
shrl
sahf
in
frstpm(287
xchg
cmp
push
push
push
inc
xor
push
je
lcall
shlb
daa
sbb
xchg
scas
lea
pop
push
ficomps
push
sarb
push
jb
leave
or
mov
xchg
dec
mov
jecxz
adc
aas
mov
jp
push
xchg
stos
mov
add
mov
push
mov
incl
lock
std
shll
and
test
iret
cli
in
mov
negl
mov
ret
cld
or
lods
mov
popa
sub
mov
shll
push
push
inc
adc
jle
lret
inc
xor
es
sub
int
jne
insb
dec
decb
sti
cld
cmp
fldt
sbb
ja
pop
repnz
gs
mulb
lock
push
jle
sbb
dec
insl
dec
xchg
and
lods
nop
sub
xchg
inc
push
pop
lret
push
jae
or
test
dec
rcr
mov
xchg
xor
fdivrs
xchg
inc
xchg
jb
mov
sti
dec
jbe
cmpsb
cs
pushf
and
ss
and
adc
mov
xor
fstps
adc
or
xor
jbe
pop
shl
mov
cmpsb
or
incb
pusha
jge
inc
popf
test
aaa
fcomip
cmp
out
mov
add
repnz
je,pt
les
in
dec
push
xor
leave
pop
scas
and
fimull
insl
inc
xchg
cmp
cltd
pop
inc
fidivs
mov
and
mov
in
or
adc
mov
sub
data16
outsb
ret
rolb
jmp
cmc
cld
mov
mov
xor
jmp
rolb
sti
mov
inc
push
jo
roll
adc
mov
sti
adc
jno
cmp
mov
xlat
into
movsl
fidivs
stc
inc
xchg
shll
gs
mov
repz
popa
and
mov
or
push
xor
xlat
andb
lahf
addb
jmp
mov
enter
sbb
xor
sbb
in
fdivs
outsb
ret
mov
mov
pop
lock
mov
cmc
js
add
sub
pusha
inc
jecxz
popa
xor
xor
mov
jo
scas
ret
je
cmp
mov
in
add
and
or
nop
adc
inc
and
sub
loope
xchg
cmpsb
cmpsb
xor
push
adc
cld
imul
and
int
dec
movsl
sub
xchg
xor
daa
push
movsl
aaa
and
hlt
push
pop
jns
in
lock
in
notb
adc
in
xchg
adc
inc
jp
int3
fs
nop
pop
pop
popa
test
jbe
shll
addr16
push
loop
stc
pop
adc
mov
setge
rcll
loope
scas
lcall
sbb
repz
lahf
movsb
mov
cs
cmp
or
pop
clc
inc
test
adc
pop
cli
push
mov
out
pop
out
mov
sub
insb
pop
fucomi
outsb
movsb
fdiv
lea
in
add
mov
jnp
xor
push
push
jo
fwait
sbb
add
push
dec
jle
jne
insb
push
xorl
cmp
add
cwtl
xchg
dec
and
dec
sbbl
enter
xor
cli
mov
cmp
xchg
sbb
push
hlt
lret
insb
je
mov
and
jmp
push
subb
xchg
xor
sub
adc
add
insl
xchg
bound
mov
and
xchg
fcmovbe
mov
or
cmp
mov
xchg
jmp
inc
dec
mov
lods
or
mov
adc
inc
dec
push
inc
mov
cltd
mov
pop
mov
loope
out
clc
jb
shlb
test
int3
ret
test
mov
add
push
mov
sarl
ja
test
jle
sbb
andw
cmp
cltd
fwait
sub
and
lret
cmp
leave
fwait
ljmp
jnp
pop
pushf
mov
icebp
enter
or
and
test
shrl
push
stos
lcall
subl
cmp
clc
loop
movsl
dec
mov
aad
mov
aaa
fwait
xchg
sub
push
cmp
loop
cld
inc
mov
lret
adc
daa
cli
sbb
das
inc
sub
xlat
test
inc
cwtl
mov
outsl
gs
imul
mov
sbb
dec
sarb
sarl
cwtl
sub
sarl
push
add
shr
push
mov
and
mov
lods
pop
fildl
pop
mov
test
mulb
push
sbb
or
addl
mov
or
or
add
sbb
leave
push
fwait
xchg
cltd
xchg
lock
push
xor
pop
fsubrp
jns
stc
test
hlt
cli
mov
cli
push
lahf
xor
in
pop
int3
dec
push
cmp
push
adc
cmpb
data16
dec
xchg
sbb
nop
cmp
popa
fucomi
enter
push
jae
xor
push
pop
int
sbb
adc
mov
xor
jae
jo
inc
enter
cmp
bound
adc
mov
leave
xor
lea
stc
test
inc
repz
js
xchg
inc
xchg
rolb
mov
int
scas
inc
xchg
jg
jle
push
aas
dec
mov
jns
test
push
cmp
inc
mov
pop
pop
pop
mov
or
mov
ds
sbb
dec
push
mov
fistpll
stc
push
push
cmp
shl
add
mov
js
scas
inc
sbb
pushf
ja
push
decb
das
pop
or
das
pop
imul
daa
out
mov
jnp
lea
and
and
pop
pop
pop
ret
sbb
bound
fs
xor
mov
inc
roll
mov
mov
and
movsb
mov
mov
fisubs
lahf
test
mov
js
push
daa
xor
mov
add
mov
test
mov
xchg
dec
jmp
inc
mov
cltd
mov
aam
mov
sar
fcomps
ss
mov
push
mov
xchg
loop
cmp
jge
cmpb
cmp
loope
rdtsc
push
pusha
push
out
lahf
rclb
sbb
inc
jb
dec
insb
aad
sub
xor
pop
popa
jge
pop
cmp
inc
cmp
sub
mov
jle
les
cmp
mov
cmp
mov
jnp
mov
sbb
loope
adc
or
movsb
lea
fstl
fdivl
popa
push
push
jo
xchg
cmpsl
inc
dec
and
xor
pop
or
dec
lea
ja
mov
jne
loopne
inc
add
ret
xorb
out
arpl
jp
sbb
push
jno
insb
dec
es
sbb
xor
pop
xchg
fistpl
cwtl
pop
dec
mov
dec
orb
daa
daa
ret
mov
jbe
xchg
ret
sbb
fcmove
sti
push
scas
sbb
dec
repnz
adc
inc
lcall
les
int
cwtl
cld
pusha
mov
and
xchg
lds
insl
mov
fwait
push
inc
jecxz
dec
push
xchg
mov
mov
xchg
cmp
ja
or
jae
stos
nop
call
push
mov
sub
pusha
mov
xor
jno
inc
xchg
adc
adc
sbb
scas
dec
mov
lods
das
imul
mov
ret
push
jmp
in
fwait
push
xchg
and
inc
int3
sub
sbb
pop
or
cs
sub
push
cmpsb
sbb
push
loope
mov
jg
mov
arpl
nop
sub
jg
xchg
add
mov
jl
pop
sbb
xchg
incb
es
cmp
sbb
mov
adc
jge
jl
cmp
push
in
xchg
ret
xchg
repz
shlb
call
inc
mov
enter
int3
lods
cmp
enter
insl
iret
in
inc
and
movl
pop
sbb
sahf
fcmovnu
lds
sti
xchg
jg
popf
fdivr
mov
add
xchg
int3
aas
test
jmp
js
jno
sbb
arpl
xor
mov
jl
lcall
cmc
repnz
adc
je
out
sbbb
in
sub
dec
cmp
push
adcb
seto
stos
repnz
popf
add
jae
js
imul
sub
and
mov
and
xor
stos
rorb
std
negl
dec
ss
inc
mov
push
dec
ljmp
es
addr16
mov
ret
mov
and
dec
call
mov
stos
fmuls
jg
outsb
push
sub
loope
xor
aaa
into
cltd
xor
add
insl
lds
stos
cwtl
jnp
out
ffreep
inc
push
addb
daa
push
aad
mov
or
push
das
pusha
movsl
test
lods
push
int3
xchg
dec
ret
js
dec
or
imul
sub
rcrl
imul
inc
jnp
adc
jae
fistl
fbstp
aas
addr16
push
nop
xor
lods
sbb
pop
int
hlt
dec
fs
cmp
cmpsl
mov
lcall
pop
push
or
mov
sbb
push
cmc
push
lods
push
in
cwtl
mov
notb
sub
stos
loop
mov
shlb
ja
ds
jle
lods
cmp
lods
pop
loop
js
test
xchg
test
cmc
out
out
inc
shll
push
mov
aaa
xchg
xchg
or
lahf
mov
in
psllw
aaa
fwait
sub
inc
mov
push
movsl
fwait
aad
jnp
jmp
testl
and
jg
cld
cmp
insl
inc
pop
sahf
fsts
std
clc
xor
inc
mov
xchg
mov
sbb
cmpsb
pop
xor
jo
xor
aas
mov
mov
lock
pop
xchg
sbb
aaa
sbb
popa
and
fsts
pop
punpcklwd
pop
adc
rolb
sbb
mov
dec
push
ds
mov
addb
dec
or
push
mov
jge
loop
inc
stos
test
mov
lret
and
sub
and
nop
xchg
cmpsb
inc
hlt
xor
pusha
cmp
call
addr16
pop
in
xor
jbe
cmp
int3
imul
xchg
mov
shl
xor
orps
in
and
dec
iret
imul
adc
lret
ljmp
inc
lret
stos
jmp
outsl
lods
les
test
pop
and
in
in
pusha
in
cltd
idiv
xchg
movsb
cmp
add
test
inc
jne
rolb
or
aam
mov
shlb
xchg
std
cmp
iret
sbb
sub
mov
mov
mov
mov
stc
pop
add
and
cmp
mov
push
orb
mov
and
ss
mov
mov
leave
ficoms
xor
rolb
dec
testb
dec
stos
rcl
pop
mov
jnp
aaa
ss
stc
into
add
sbb
jmp
mov
data16
mov
jb
and
frstor
or
or
mov
push
push
mov
stos
sub
int
push
cmc
leave
into
jg
push
inc
gs
cmp
xchg
aas
out
jnp
mov
pop
mov
out
xchg
sbb
or
push
pop
mov
data16
test
jle
andb
cmp
jo
mov
sbb
mov
jmp
or
mov
push
add
push
xchg
rol
stos
xor
int
lds
arpl
and
add
ret
lods
or
adc
jmp
cmc
call
xchg
inc
mov
cld
cmp
xor
jo
insb
mov
pop
and
mov
stos
xchg
dec
in
out
test
or
pop
jge
and
sbb
fdivrl
jnp
mov
in
add
ficoms
fisubl
aam
cmp
pop
jnp
jmp
adc
stos
xor
ficoms
xor
dec
push
mov
das
repz
js
inc
sbb
mov
jmp
sarb
inc
stos
or
leave
cmp
cltd
xchg
movsl
sub
hlt
or
cmpl
nop
out
push
icebp
aaa
push
add
mov
out
sbbl
loopne
jb
push
inc
mov
jo
mov
hlt
dec
scas
ljmp
mov
or
sbb
shl
push
addr16
mov
shrb
cmc
pop
push
mov
or
mov
xor
pop
ljmp
cmp
cmp
mov
iret
add
pop
push
pop
gs
pop
pop
cltd
or
xchg
pop
dec
pop
jl
dec
cs
mov
loop
divl
es
mov
cmp
add
into
inc
out
scas
lret
icebp
std
xlat
aaa
es
mov
lods
mov
lods
sahf
xor
aas
or
fucom
loop
or
mov
xor
icebp
pmullw
mov
pop
adc
inc
mov
sahf
sub
inc
mov
addr16
ljmp
sbb
cli
sbb
mov
in
push
fidivrs
arpl
aad
call
add
pop
dec
pop
clc
hlt
pop
sub
fwait
add
push
test
add
mov
jle
jle
mov
mov
repz
xchg
fildl
xor
addr16
lcall
xor
hlt
shrb
mov
mov
mov
pop
pop
std
loope
lcall
in
inc
paddusw
sahf
pop
mov
out
test
loop
mov
cmpsb
xor
addr16
pop
pop
popf
dec
mov
or
and
fcomip
imul
jle
push
inc
lods
fimull
lcall
stos
xchg
mov
cld
inc
aas
push
jb
pop
add
push
and
cmpsb
into
push
test
jl
xor
inc
mov
mov
shrb
cmp
dec
xor
push
and
data16
inc
mov
insl
mov
jge
loop
data16
fstpt
fisubl
inc
pop
ja
icebp
jb
enter
jmp
push
test
xor
outsb
add
pusha
cmp
xchg
cmp
call
sub
daa
or
insl
test
das
cmp
test
test
aam
test
sbb
out
pop
call
push
and
jnp
out
sub
lret
jns
dec
mov
mov
add
sarl
jecxz
arpl
in
sbb
popa
movsl
sub
mov
dec
sub
sbb
hlt
mov
inc
sub
out
imulb
mov
fnstenv
pop
sub
jns
cmpsb
add
stos
stos
hlt
or
por
rcrl
inc
int
xchg
xchg
push
xchg
xor
pop
and
cmp
repnz
jg
ret
inc
xor
sbb
cmp
cld
add
imul
fstpl
xchg
lret
in
pop
mov
pop
mov
lods
mov
cmp
push
jl
push
and
popa
addr16
dec
call
in
sub
mov
xchg
xor
mov
testl
mov
je
sbb
js
imul
xor
adc
push
dec
in
and
repnz
aaa
xlat
and
mov
mov
negb
or
lock
in
movsb
fcoms
lcall
in
cmp
lea
ficoml
push
mov
pop
and
adcl
xchg
shrl
daa
call
lock
cmp
stc
inc
lds
dec
pop
repz
mov
ret
inc
ret
shrb
lods
push
pop
inc
mov
jmp
gs
test
mov
sti
stc
in
shll
cmp
div
or
inc
lea
insb
popf
mov
rol
xchg
mov
push
or
or
xchg
mov
push
dec
lcall
xor
sbb
cmp
fbstp
popa
je
repnz
mov
aas
add
in
jo
leave
sti
bound
push
inc
aas
dec
dec
fdivrs
add
repz
pop
pop
je
or
lret
and
mov
fs
mov
addr16
dec
pop
rorb
pushf
test
imull
out
mov
jns
push
pop
add
in
fwait
clc
scas
je
gs
pop
push
divb
adcl
out
call
iret
in
stos
push
insb
repnz
pop
pop
sbb
loopne
iret
stos
arpl
push
or
shlb
mov
gs
push
cmp
mov
rorb
push
xor
lock
push
mov
divb
or
mov
or
push
mov
push
mov
lret
stos
push
mov
mov
jae
mov
outsl
dec
stc
inc
push
aaa
mov
xlat
push
xchg
mov
test
xchg
jp
gs
in
xorl
jb
js
ret
jp
ret
adcl
imul
jmp
or
fldt
aad
sub
inc
fdivs
adc
cmp
fildl
mov
inc
sbb
or
xchg
xchg
inc
jns
pusha
dec
lea
or
je
icebp
mov
rorb
rcl
jne
xchg
pop
pop
and
js
lcall
jmp
push
mov
insl
xchg
icebp
dec
mov
inc
sub
arpl
cwtl
pcmpeqb
mov
popa
mov
neg
and
lcallw
js
sub
imul
pop
sbb
cmp
inc
push
push
cli
mov
cs
cmp
pop
pop
mov
nop
xchg
ret
test
xchg
jecxz
je
mov
lock
xor
shrb
xchg
mov
xlat
jo
pop
push
sbb
cld
pop
xor
shll
mov
shll
pop
cbtw
mov
jmp
and
push
sbb
fstps
lahf
addr16
mov
cs
popa
or
adc
cld
xchg
outsl
sbb
mov
daa
cmp
jae
stc
push
nop
or
xrstor
scas
pop
stc
ret
leave
inc
int3
push
sbb
push
mov
pushf
std
add
iret
negb
cmp
imul
and
cmp
sbb
mov
andb
xchg
ljmp
repz
cmp
pop
loopne
cmp
outsl
in
nop
jle
bnd
fsub
std
aam
push
outsl
xlat
shl
xor
sahf
mul
mov
adc
loope
cmp
adc
adc
out
xchg
out
in
and
mov
aas
add
jb
cmpsb
sub
es
push
add
cwtl
cld
add
xorb
movsl
adc
insl
mov
sbb
dec
mov
pop
rorl
sarb
shl
bound
fcmovnu
jne
je
and
mov
mov
inc
fnstsw
cmpb
into
xchg
add
repnz
xchg
lea
ds
shl
sub
mov
iret
addr16
in
insl
or
aaa
mov
lret
mov
sahf
inc
or
push
jns
orb
add
sbb
inc
add
imul
test
sarb
cmp
push
cmp
sbb
jge
imul
sbb
out
and
push
inc
adc
mov
dec
pop
rcrb
pop
test
imull
adc
jge
fistpl
xchg
cmpsl
mov
cmp
push
jnp
fldl
xchg
xchg
in
addr16
fistpll
sub
or
mov
fisttpl
mov
jl
dec
jmp
mov
mov
xchg
sbbb
hlt
fistpl
sub
mov
repnz
hlt
jmp
pop
addr16
lahf
xlat
aam
repz
int3
push
subb
cmpsb
mov
mov
fsubrl
adc
or
test
mov
inc
js
push
ja
call
mov
add
fs
cli
iret
daa
mov
out
mov
and
js
sahf
and
aam
int
pop
fwait
xlat
push
sahf
fcomps
shr
add
cld
dec
popa
sbb
pusha
mov
cmp
js,pt
out
movl
mov
jg
inc
inc
push
fidivs
mov
push
rcrb
pop
andb
int
adc
arpl
add
es
sbb
pop
ret
loop
mov
clc
es
push
aam
sub
push
jne
in
and
dec
sarb
adc
das
sti
sbb
addr16
mov
xchg
pop
jge
lea
or
add
mov
mov
cmp
pop
mov
imul
pop
in
loopne
test
imul
ficomps
pop
out
mov
jecxz
neg
pop
pusha
cli
insb
cs
cmp
dec
out
inc
jo
push
fdivl
in
push
fisubl
mov
jns
shr
rolb
xor
adc
movsb
xchg
push
push
xor
scas
mov
push
imul
pushf
jnp
cmp
repnz
inc
cld
cmp
pushf
je
pop
add
mov
dec
pop
adc
or
into
loope
or
dec
pusha
insl
aad
pop
aas
pop
shrb
pop
inc
xchg
pop
js
sub
cmp
mov
out
scas
xor
sbb
test
aaa
jmp
adc
or
addr16
outsl
xchg
dec
dec
mov
pop
jo
xchg
jp
cwtl
mov
and
mov
inc
lahf
push
cmpsb
loop
pop
sbb
aaa
sub
pop
in
scas
xchg
xchg
clc
add
mov
adc
pop
pop
sar
enter
mov
add
mov
mov
scas
stc
cltd
dec
ds
imul
push
cmp
sub
xchg
movsl
outsl
push
push
int3
test
adc
shrb
xor
and
rcrb
push
or
fs
pop
repnz
in
xor
bound
cmpsl
adc
jle
in
test
and
inc
call
add
sbb
or
push
dec
lret
or
rorl
xchg
popa
outsb
mov
addr16
sbb
inc
test
cmp
adc
xchg
cli
orl
aad
add
das
ss
les
orb
iret
mov
es
out
add
je
add
jle
aas
xor
out
push
sbb
inc
shrl
xorl
iret
bswap
add
or
in
popa
lret
roll
lock
inc
in
iret
jmp
and
das
aam
mov
sahf
sbb
ja
pop
les
test
std
icebp
add
pop
cmpsl
mov
or
cmp
outsb
aam
sti
xchg
imulb
in
adcb
test
sub
pop
in
and
hlt
xorb
es
jne
fdivl
in
hlt
push
jne
out
cmp
inc
mov
xchg
xchg
iret
push
xchg
test
cwtl
push
orl
mov
lock
clc
sub
cltd
popa
call
inc
adc
push
sbbl
inc
cmp
xor
je
fdivrl
test
ret
cmp
or
cwtl
xchg
or
imul
adc
test
push
xor
mov
clc
pop
mov
movsl
xor
and
int3
xchg
dec
in
jle
dec
dec
pop
jb
push
loop
push
or
stos
lea
fwait
jecxz
jmp
das
outsb
cmpsb
test
repz
adc
std
lret
into
jno
std
pop
pushf
jge
out
ds
loopne
push
add
jmp
je
jl
add
cs
insb
jo
pop
std
inc
sar
bound
xchg
xchg
inc
je
jmp
sub
fiaddl
adc
inc
jg
xor
pop
outsl
repnz
xor
mov
ret
sub
xchg
mov
fwait
es
push
test
negl
test
shlb
add
cmp
and
dec
repnz
add
data16
pop
mov
mov
popl
xchg
ret
int
or
stos
push
mov
sahf
nop
mov
add
jle
xor
shrl
cmc
adc
cmpsl
dec
sbb
adc
jg
lcall
push
js
loopne
fcmovnu
fdiv
iret
mov
fildl
or
aam
or
or
in
nop
fisubrs
and
pop
jb
out
pop
push
cmpsb
and
or
pushf
int
das
sti
stos
push
xorb
inc
movsb
xchg
std
sarl
mov
stc
loop
jp
inc
addr16
xchg
das
jne
xor
cmpsl
mov
add
call
mov
pop
pop
dec
pop
adc
pushf
inc
stos
xchg
cmpsl
int
mov
icebp
je
inc
leave
insb
inc
and
in
stos
loope
adc
jl
adc
repnz
insb
lret
xchg
ret
jno
pop
hlt
mov
mov
rcrl
dec
pusha
adc
or
int
dec
pop
add
pusha
idivb
push
mov
repnz
repnz
into
mov
pop
dec
in
mov
mov
xor
ja
pop
das
dec
adc
mov
dec
out
jno
gs
inc
jo
xchg
cmc
clc
sbb
sub
mov
add
mov
jae
in
aam
fs
push
in
std
fwait
mov
dec
dec
xor
mov
pop
and
pop
repnz
and
mov
in
loope
sbb
mov
xchg
jle
sarb
in
push
aaa
sahf
into
push
sub
mov
lods
loope
bound
fisttps
mov
or
es
fsubrp
push
stos
inc
jae
lret
fdivs
enter
jno
cmp
andl
ret
insl
sbb
dec
cmc
loope
dec
into
sbb
fisubrl
xor
repnz
mov
push
shl
pop
nop
in
sbb
mov
js
sti
sbb
int
or
xor
outsl
inc
mov
repz
out
insb
xor
push
cmp
cltd
add
fnsave
adc
adc
add
inc
lea
idivb
jb
pop
mov
add
in
mov
shll
adc
xchg
imulb
add
add
sbb
lahf
in
adcb
rcll
arpl
es
lea
inc
xchg
aas
ljmp
outsb
mov
cmp
in
cmpsl
mov
push
ja
cwtl
adc
pop
lods
scas
loope
pop
fadd
xchg
xlat
add
lea
das
mov
pop
xchg
push
mov
out
das
mov
into
mov
out
jl
fistl
sbb
fwait
adc
inc
in
rol
sbb
ja
add
scas
out
sub
js
pop
into
jbe
or
inc
jbe
sbb
sub
push
fmul
imulb
push
es
xorl
or
jmp
sbb
rcr
mov
popf
neg
and
mov
mov
adc
int3
repnz
xor
jmp
hlt
mov
andl
stos
sub
mov
pop
lret
add
nop
mov
cmp
rcr
mov
xchg
subl
dec
fcomps
icebp
shl
scas
mov
jbe
cmp
add
pusha
gs
imul
pop
icebp
mov
int3
and
jl
fs
cmp
outsl
call
dec
and
mov
sbb
push
or
mov
xor
xchg
popf
xor
lea
sub
std
loope
sahf
push
rorb
cli
lea
pop
xlat
mov
xchg
sub
xor
addr16
mov
aaa
or
loopne
push
jp
dec
rep
mov
das
push
insb
inc
fcom
pop
pop
stos
out
mov
je
or
push
lcall
movl
push
push
loop
push
sbb
jge
paddusb
xchg
cli
popa
pop
fdivs
cmc
mov
out
fidivrl
sahf
aam
push
or
xor
add
xchg
or
subb
sbb
aas
lcall
pusha
push
hlt
outsl
nop
ljmp
cltd
adc
stos
mov
jns
sbb
fadds
mov
xchg
in
lea
lahf
test
and
adc
push
mulb
cltd
movsl
cmp
dec
arpl
popf
inc
iret
incb
scas
mov
or
mov
mov
pop
xor
inc
mov
hlt
cmp
push
mov
enter
fsubl
cwtl
cmc
inc
mov
push
mov
or
push
sbbb
lea
bound
shl
imul
jg
fisttpl
aaa
stc
jg
call
fnstcw
insl
fstp
pop
mov
outsw
cmpb
add
cmp
in
fldcw
insb
aaa
pop
int3
negl
inc
sbbl
dec
es
push
adc
andb
addr16
adc
data16
mov
push
push
test
and
xchg
pop
push
cmp
inc
dec
cmp
pop
shrl
fwait
and
out
push
mov
lds
cmp
into
int
fildll
iret
mov
push
lret
add
add
xchg
icebp
inc
jge
xor
in
or
xchg
lret
xor
push
notb
adcb
push
pop
xlat
mov
stc
fstl
add
neg
fwait
xorl
xchg
into
sub
cs
xchg
popf
nop
mov
dec
push
aaa
ljmp
fsubr
out
rcll
inc
jmp
cld
push
adc
out
scas
andl
sub
in
in
sub
jbe
scas
xlat
mov
insb
in
add
and
nop
xor
outsb
fldt
mov
jg
int3
pop
mov
out
out
cs
nop
dec
mov
movsb
ds
in
cmp
daa
mov
addl
mov
pop
xchg
mov
xor
mov
idivb
mov
icebp
dec
pop
fnsave
push
mov
xchg
imul
sub
lcall
add
fcom
dec
pusha
les
xor
mov
rcrb
push
dec
cli
ljmp
add
cmp
sahf
rcll
sub
xor
test
mov
test
pop
lahf
loopne
push
add
aam
sub
push
add
jnp
inc
xchg
xlat
inc
push
cli
cltd
dec
sbb
cmp
cmp
jbe
sti
xor
inc
mov
mov
sub
cli
in
daa
jge
cwtl
sti
inc
sub
cmp
arpl
or
fistps
outsl
mov
adc
fisttpll
lds
mov
ss
sub
jle
cltd
and
xlat
jle
dec
or
outsl
add
std
ret
in
pop
cld
xchg
std
subb
shrb
mov
jae
or
iret
test
ljmp
rcrl
xchg
dec
out
loope
xor
jle
out
push
sbb
insl
loopne
add
lods
fwait
iret
cmp
xor
popf
in
in
int
lcall
sbb
das
mov
loop
iret
pop
sub
jp
rcrl
cld
fistpll
xchg
mov
xchg
shr
sbb
imul
inc
mov
adc
cld
cltd
stos
dec
dec
inc
adc
sub
inc
test
and
xor
mov
sahf
push
dec
hlt
jl
push
cmpl
dec
jno
or
jb
jg
inc
sbbb
pop
shll
inc
pusha
mov
aaa
cltd
push
sbb
mov
xchg
sti
xchg
dec
sbb
jl
xchg
outsb
cmp
mov
lret
fs
dec
outsl
test
mov
test
mov
mov
stc
jns
outsl
add
pop
add
cmp
hlt
pop
jae
mov
sarl
mov
dec
mov
jmp
inc
or
mov
lods
addr16
cmp
sub
mov
xchg
popa
jecxz
test
push
das
mov
andb
jl
lods
pop
cld
jae
sarb
xor
daa
fwait
add
and
repnz
and
shll
xor
mov
jne
in
mov
add
dec
inc
mov
pop
leave
das
sbb
cld
call
jmp
movsb
jl
ja
lea
out
sahf
inc
addl
js
xlat
rcr
rcll
xor
daa
rol
lods
frstor
add
pop
cmp
dec
fdivr
nop
or
adc
or
paddsb
callw
mov
fstps
sbb
aad
sub
arpl
xor
mov
mov
dec
jl
xor
test
mov
dec
out
test
xor
cmp
dec
scas
fstps
aaa
repz
loope
cmc
aaa
test
insb
pushf
roll
hlt
imulb
imul
xchg
sub
cmpsl
pop
lods
bound
and
pushf
sahf
add
ljmp
sbb
icebp
mov
pop
imul
mov
sub
or
std
pushl
outsb
out
iret
pop
mov
ja
rorl
jbe
mov
push
cmp
inc
addr16
pusha
cs
jo
les
out
cmp
imul
rolb
sbb
push
lods
xchg
push
popf
or
loope
andb
jae
push
in
add
je
ret
cwtl
mull
pop
std
push
pop
movsl
loopne
add
pop
jmp
popa
jge
xchg
add
bound
push
mov
loop
push
inc
scas
xor
and
bound
icebp
sbb
pop
dec
vcvtss2si
push
cmpsb
bnd
add
dec
out
push
push
adc
mov
fsubrs
xchg
mov
sbbb
mov
movsb
or
jecxz
icebp
cmp
sub
test
cmpsb
out
mov
cmc
in
std
int
cmp
sbb
add
push
xor
stc
push
loope
imul
incb
rorb
mov
inc
rolb
loopne
adc
loopne
cli
cmp
ja
sbb
shlb
push
in
test
or
xor
mov
jno
xchg
mov
lock
lods
pop
pop
dec
mov
and
aaa
out
shlb
mov
mov
mov
imul
cmc
outsb
sbb
sbb
add
jne
jl
aas
movsb
xchg
pop
sbb
add
pusha
xchg
lcall
sub
and
xor
clc
jbe
fldenv
outsl
xor
jb
pop
jg
in
lahf
repnz
jno
add
and
add
adc
jmp
mov
xchg
dec
xchg
mov
fwait
xor
cmovbe
pop
dec
sbb
dec
mov
add
loope
xor
test
cmp
jo
mov
or
adc
shl
sbb
mov
cli
sub
xchg
push
or
adc
arpl
lcall
mov
ret
lret
xchg
into
insl
adc
les
aas
sbb
add
roll
jb
push
xor
xchg
in
into
xchg
test
nop
push
inc
xlat
fcoml
dec
filds
test
outsb
or
les
popl
xor
or
jns
push
pop
push
mov
add
jp
adc
push
insl
nop
rorb
aad
outsl
cltd
and
repz
sub
in
or
mov
jle
xorb
sbb
hlt
addr16
clc
cmp
into
inc
push
mov
scas
adc
outsl
mov
loope
add
or
dec
das
mov
sub
pusha
sti
jecxz,pn
mov
cs
hlt
push
icebp
push
add
aad
dec
mov
mov
sarb
jg
push
lods
mov
addr16
pushf
aad
movsl
jne,pn
test
std
andl
or
pop
cs
enter
jl
nop
pop
xchg
xchg
add
icebp
pop
je
mov
imul
push
dec
adc
outsb
jecxz
jbe
popa
movsb
adc
push
ret
cld
mov
call
push
push
add
and
push
mov
movsb
pop
pop
insb
pop
push
ljmp
movl
jne
repnz
xorb
arpl
insb
cmp
xchg
je
mov
sbb
jge
mov
insl
sub
je
jmp
and
jae
mov
pop
lock
add
outsl
repnz
pop
mov
faddl
jae
aad
int3
mov
addr16
add
mov
mov
jns
push
or
mov
mov
daa
cmp
mov
lods
sbb
adc
mov
ret
repnz
lret
xor
cltd
add
sub
sarb
enter
or
nop
push
movsb
jle
aas
dec
mov
xchg
pop
mov
push
mul
mov
inc
dec
shll
adc
hlt
sti
test
pop
cmp
in
out
fwait
xor
mov
mov
fcmovb
mov
clc
jne
stc
nop
pop
out
je
mov
dec
mov
ret
repnz
faddl
leave
mov
loopne
inc
in
push
add
lods
faddl
jns
add
mov
cmc
lcall
movsl
popa
hlt
es
mov
or
mov
mov
orl
xchg
es
aad
add
add
test
and
push
loop
outsl
xor
scas
adc
cwtl
dec
cwtl
test
in
add
ljmp
mov
pop
inc
daa
fisubs
test
push
sub
rol
mov
and
xor
outsl
pop
cwtl
pop
mov
jle
mov
or
jae
lret
jmp
xchg
sbb
bound
mov
cmc
outsl
shll
jecxz
fst
push
push
leave
jnp
outsb
push
jo
notb
cltd
fcompl
push
in
sub
ljmp
aas
and
addl
and
mov
mov
cs
scas
ja
popa
mov
xor
pop
mov
dec
dec
ja
push
push
jbe
jb
clc
push
jns
mov
jne
das
sbb
or
pop
xor
fnstenv
sub
jle
fldcw
int
xor
cli
lods
mov
lahf
orb
jp
adc
arpl
mov
mov
rcrb
sti
and
add
icebp
pusha
lods
fsts
add
out
test
mov
dec
sbb
popf
dec
rcrb
inc
pop
adc
mov
in
cltd
xlat
mov
xchg
sbb
pusha
ds
push
mov
ret
subb
jnp
cmp
dec
and
mov
inc
popa
rolb
xchg
mov
push
inc
fisubrl
cltd
xchg
xor
xchg
push
sti
push
mov
add
jg
test
push
push
pop
fistpll
aaa
push
lock
push
adc
pop
mov
fldenv
add
aam
or
xchg
mov
add
notl
cmp
sub
push
stc
mov
or
test
cltd
sub
insl
cmp
xlat
stos
inc
jbe
repnz
stos
call
mov
dec
scas
dec
ds
les
mov
inc
sbb
lds
out
mov
sbb
inc
inc
clc
arpl
popf
cwtl
add
cs
fsubs
pop
mov
adcl
and
roll
ret
fsubrs
out
shrl
fisubl
hlt
jg
fs
mov
mov
insb
out
sbb
mov
sub
cmpsb
lock
ljmp
mov
inc
sub
sahf
mov
mov
iret
dec
mov
popa
push
xchg
cmp
or
or
ja
pop
xchg
stc
pop
push
sbbl
adc
dec
push
scas
daa
cmp
jge
stos
jb
and
jl
mov
sbb
lret
cmp
ljmp
jb
cmp
sbb
daa
lahf
cld
push
mov
movsl
xchg
adc
adc
outsb
insl
jo
ret
or
jns
push
cltd
and
adc
lret
inc
fisubrs
int
in
jp
testb
xor
arpl
into
popf
stos
imul
cltd
es
clc
lods
mov
mov
insb
xchg
add
addl
and
gs
sbb
push
int
mov
xchg
mov
push
fstp
sub
test
jb
or
or
or
and
cmc
lret
lcall
cmp
pop
xor
mov
fldz
out
inc
dec
lcall
dec
xor
movsl
test
and
dec
mov
cmp
push
jl
mov
filds
pop
sbb
push
int
fnstcw
or
daa
dec
pop
jecxz
test
outsl
dec
jl
cmp
lahf
scas
roll
inc
scas
mov
sub
jmp
dec
fstps
test
adc
loop
jne
mov
lock
and
mov
jl
mov
mov
fwait
inc
mov
test
adc
ds
neg
es
into
sbb
jns
push
mov
adc
jecxz
lock
aas
test
jp
adc
mov
pushf
out
aad
lcall
and
in
out
inc
push
int
cmp
outsb
sahf
mov
push
xlat
daa
dec
sahf
adc
and
xor
mov
adc
push
fldenv
sbb
iret
mov
xchg
sbb
xor
popf
loope
icebp
lret
mov
or
add
pop
loop
add
out
je
testb
fldt
xor
mov
mov
sbb
mov
jle
push
ror
sbb
ss
jno
call
adcl
pop
adc
sub
jmp
and
jb
popf
sbb
out
xor
pop
xchg
into
push
jo
or
add
cltd
jae
stc
movsb
jmp
cltd
adc
and
loopne
sahf
test
ret
mov
xchg
mov
es
mov
jl
andb
sbb
pop
insb
and
mov
fwait
xor
outsb
xor
dec
dec
mov
jp
and
and
test
jno
xor
jae
pusha
adcb
adc
outsl
mov
sub
cltd
lods
push
ror
sub
jne
testb
into
in
xlat
fsubrs
sahf
sbb
lock
imul
push
mov
push
pop
fwait
adc
leave
adc
push
in
pop
pop
test
jg
and
fidivl
sub
pushf
rolb
pop
xchg
fadds
daa
xor
addr16
sub
in
rorb
fwait
stc
pop
flds
push
movsb
inc
push
icebp
mov
and
imul
cmp
push
arpl
sbb
xor
ljmp
in
cmc
inc
pushf
sbb
scas
xor
or
lea
stos
jmp
test
mul
dec
dec
movsb
sub
mov
or
mov
pushw
jne
rolb
mov
jecxz
ja
cltd
sbb
sub
xchg
repnz
xchg
cmp
mov
bound
lods
mov
mov
mov
push
push
mov
das
jno
jle
ret
sbb
fnsave
adcb
test
push
pushf
dec
in
in
mov
in
scas
test
out
add
adc
ds
call
fimuls
cmp
mov
fiadds
inc
push
mov
or
stc
enter
push
in
pop
cmp
pop
cmp
or
mov
cmp
xor
push
hlt
xchg
push
dec
mov
imul
stos
mov
stc
lret
pop
push
pop
arpl
adc
cmpsl
push
xorb
and
sub
mov
int
in
jmp
pop
sahf
mov
mov
push
xchg
je
dec
mov
in
and
ds
jmp
mov
mov
andb
or
ffree
cmc
cltd
push
out
jno
xchg
test
xchg
mov
arpl
hlt
jb
add
push
loope
fldcw
mov
mov
push
into
fmul
ss
lods
lods
or
and
imul
mov
pop
ret
cmpsl
shlb
fstpt
imul
fadds
stos
push
mov
insl
inc
xor
aaa
iret
mov
cs
fstp
sbb
std
aas
enter
cmp
sub
pop
fdivl
aaa
int3
popa
repz
mov
cmpb
cs
mov
inc
cmp
mov
mov
mov
or
int3
mov
xor
rclb
scas
imul
repz
cmp
or
stos
fidivrs
inc
in
mov
inc
sub
inc
xor
sub
mov
les
fmulp
sbb
ljmp
fstpt
out
inc
test
lea
sub
sahf
clc
fldt
cltd
sbb
jg
lock
mov
push
jecxz
pop
ja
mov
push
lcall
pop
lods
xor
cmp
int3
jb
ds
pusha
dec
inc
fstl
xor
and
ficoms
ljmp
subl
popf
js
cmp
and
test
les
imul
mov
cwtl
dec
xchg
mov
stos
add
mov
test
repnz
push
jecxz
add
rorl
or
fidivrl
cmc
add
adc
test
lea
xlat
mov
rorb
jmp
mov
xchg
nop
les
sub
call
inc
mov
daa
sahf
mul
or
lods
xchg
adc
mov
repz
jge
inc
pop
push
or
dec
mov
pop
mov
rcrl
adc
xor
jae
push
mov
inc
pop
dec
mov
jno
repz
insl
mov
dec
stos
ljmp
ss
push
repz
cli
bound
and
mov
mov
xor
inc
test
jb
dec
insb
std
aas
inc
mov
sbb
xor
fsubp
enter
add
lods
mov
lahf
mov
ja
cmp
xchg
add
xchg
mov
popa
adc
js
xor
cli
std
aas
inc
mov
ja
out
cwtl
cmp
test
and
mov
incb
pop
push
divb
hlt
inc
or
rcll
cmpsb
mov
sti
mov
iret
jecxz
ljmp
lods
xor
mov
lods
daa
stos
in
dec
in
xor
adc
fists
addr16
pop
jle
sarb
push
pop
jbe
std
pop
addr16
or
outsb
or
mov
fldt
pop
sbb
stos
adc
ljmp
shl
sbb
xchg
pop
outsb
jne
mov
andb
mov
iret
fidivrs
adc
jp
jg
xor
mov
mov
rorl
dec
xchg
pop
cmp
pop
andb
inc
mov
dec
dec
mov
popf
jg
lcall
in
and
push
mov
push
push
push
sub
add
mov
jp
jbe
adc
mov
aas
stos
dec
aad
ret
int3
test
or
mov
mov
jmp
imul
adc
pop
pop
sbb
xchg
or
mov
loope
shl
dec
adc
addl
inc
mov
movsl
test
out
or
cmpsl
xor
dec
or
popa
ret
mov
aaa
int3
adc
cwtl
jno
out
push
std
sub
test
test
cld
mov
xor
cmp
xor
jb
push
bound
or
xor
push
ja
cmp
inc
ljmp
pop
out
xor
sahf
std
mov
arpl
outsl
cmp
mov
and
xchg
test
sub
loopne
pop
popa
in
cmpsl
shll
inc
in
popf
pop
shr
cmp
addr16
add
in
sub
push
and
stos
int3
dec
mov
dec
mov
out
sub
ficomps
fisubs
push
lret
jl
push
insb
mov
lea
and
mov
out
mov
pop
sbb
mov
and
mov
clc
xor
fs
cs
add
xor
cmc
dec
cmp
jle
push
test
cwtl
dec
pop
cwtl
cs
lods
sub
hlt
push
iret
punpcklwd
xlat
push
pop
movsb
push
mov
add
mov
xchg
xchg
mov
fwait
int3
mov
add
insl
sub
xor
mov
dec
lods
mov
pop
iret
leave
es
ds
mov
jg
or
cmpsb
xchg
jbe
lcall
hlt
sub
fmull
aad
sbb
or
push
pop
imul
and
mov
mov
push
push
pop
dec
or
ja
subl
fsubrl
out
pop
gs
inc
bound
fwait
scas
mov
inc
gs
sahf
inc
mov
out
adc
and
faddp
fnstenv
pop
loop
jp
mov
rorl
mov
xor
lds
outsb
mov
jmpw
cmp
mov
inc
mov
xor
adc
in
js
test
loop
loope
rclb
jbe
repz
mov
sahf
sbb
mov
lahf
pop
sbb
jmp
dec
push
sarb
nop
xor
mov
pusha
inc
lcall
cmp
sub
fbld
mov
std
push
test
push
mov
mov
adc
xor
sub
push
pop
mov
shrb
repnz
daa
cmp
imul
push
add
popa
push
xchg
imul
ret
jno
push
das
adc
dec
inc
enter
mov
fsubrs
cmpsl
popa
mov
lahf
jo
xchg
cmp
mov
cmp
hlt
sub
aaa
xorl
jmp
cwtl
repz
sub
push
push
clc
movsb
lcall
push
jae
inc
jo
pop
leave
pushf
lea
and
sub
mov
out
scas
push
adc
in
mov
in
inc
montmul
cmpsb
push
fildl
mov
and
loope
inc
fwait
int
or
mov
jmp
add
dec
into
clc
push
stos
mov
xlat
push
fisttpll
int3
adc
push
fildll
and
mov
sub
jb
pop
xor
cmc
test
sub
mov
int
xor
insb
loopne
aaa
lret
pop
iret
mov
daa
mov
fildl
jecxz
addr16
dec
test
test
dec
and
stc
adc
xchg
xchg
sahf
bound
or
jns
out
cmp
testb
loope
inc
call
jecxz
mov
xor
mov
jle
mov
adc
popa
dec
fs
push
mov
and
mov
notb
out
lcall
mov
push
ss
xor
insb
xor
loopne
pop
lock
aad
popa
xor
xchg
inc
in
push
data16
sub
imul
shrb
xorb
jle
sub
xor
mov
mov
jne
jmp
lahf
xor
pop
int
pop
aas
out
cli
hlt
xchg
mov
push
mov
mov
int
mov
shrl
xor
ficompl
adc
lret
jle
jp
xchg
inc
insl
cmp
xchg
mov
mov
shll
add
ret
push
out
push
push
jp
push
xchg
rol
lahf
ja
dec
je
in
push
jae
xchg
aas
mov
das
or
xchg
push
leave
add
movsb
xchg
lret
negb
jg
aas
mov
stc
out
jb
sahf
aaa
mov
iret
lcall
add
jno
mov
fiadds
iret
or
mov
lods
decb
filds
imul
int3
mov
adc
adc
sbb
arpl
jo
mov
in
in
xor
cmp
fnstenv
std
mov
jp
dec
dec
iret
jecxz
fsts
push
jne
pop
or
cmc
insl
mov
mov
mov
xor
adc
test
dec
or
repz
sub
repnz
mov
push
jp
inc
jb
popf
pop
dec
inc
mov
dec
sub
dec
dec
push
cmp
nop
sub
popf
rcrl
dec
negl
adc
in
stos
cltd
cs
clc
les
jae
xchg
insb
jmp
mov
lahf
xchg
pop
inc
test
mov
or
lret
jae
ficomps
inc
add
lods
xor
cmpl
ret
adc
fldcw
enter
pushf
push
dec
cmpsb
pop
adc
pop
ljmp
imul
mov
inc
pop
mov
inc
push
mov
je
sbbl
and
jae
in
mov
xchg
cltd
xchg
xlat
push
mov
mov
and
mov
push
xchg
jg
cmp
xor
pop
iret
in
mov
and
sub
cmp
mov
sub
and
sbb
sarl
scas
scas
inc
les
mov
loope
iret
arpl
mov
aas
xchg
jae
sbb
cmp
push
add
stos
jo
jae
fcoms
cltd
movsl
repnz
sub
sub
bound
rcll
inc
pop
ss
or
mov
xchg
add
mov
sbb
xlat
sub
adc
ds
and
mov
sub
or
push
lods
imul
sub
push
push
out
cwtl
das
dec
pop
dec
adc
jg
bnd
jb
dec
and
cwtl
sub
fnstsw
lea
dec
das
push
das
frstor
mov
mov
inc
sbb
push
addr16
fcmovne
sub
and
cli
cmp
int3
dec
clc
mov
xchg
mov
or
cmp
stos
daa
lods
mov
and
pop
jo
xchg
insb
cmc
pusha
movsl
cmpsl
adc
or
and
push
imulb
paddw
xor
add
cmp
mov
mov
loope
cld
out
scas
xor
sub
push
push
push
add
or
fcomps
push
pop
shlb
cmpsb
scas
cmpsl
push
jnp
fs
or
mov
xchg
and
xchg
mov
jle
mov
ds
iret
dec
sti
push
out
sub
dec
jge
stos
hlt
mov
push
pop
andb
sti
jmp
pop
pop
aas
cs
sub
fsub
jb
lods
icebp
mov
mov
xor
ret
xchg
and
cmp
in
sbb
or
out
adc
sarl
pop
push
out
pop
imul
ds
lahf
push
int
cmpb
cmpsb
inc
nop
shrl
xor
mov
mov
and
jno
jae
mov
pop
je
xchg
jmp
movsl
out
ljmp
xlat
inc
das
in
leave
lahf
pusha
push
out
rclb
jno
xor
xchg
adc
dec
dec
ret
ljmp
mov
repnz
xchg
jno
jns
sbb
push
mov
push
rorl
xchg
ds
push
pop
add
fucomi
sub
cwtl
aaa
fstl
mov
mov
mov
subb
push
leave
push
fcompl
mov
dec
mov
out
test
jge
push
pop
insl
push
sub
fbld
xchg
push
in
sbb
test
cwtl
sub
imul
mov
and
and
test
sbb
movsb
push
loope
imul
popa
inc
fisttpl
cmp
sbb
push
ret
in
out
stos
cmp
scas
xor
inc
sub
out
int
lcall
xchg
push
push
jne
xchg
xchg
arpl
data16
push
mov
dec
mov
lods
mov
mov
sbb
adc
adc
jo
test
sbb
addl
jp
popf
push
cmp
pusha
xchg
sbb
mov
aas
jle
push
xchg
ficoml
mov
and
popa
xchg
outsb
jg
in
pop
sub
jae
iret
aas
lods
push
sbb
push
xor
andl
add
and
xorb
lock
push
sbb
pop
mov
jmp
outsb
cmc
jnp
iret
stc
or
or
mov
lods
sbb
icebp
jp
mov
out
mov
notb
push
leave
fadd
add
imul
pushf
or
and
pop
leave
test
sbb
sub
mov
inc
inc
mov
pop
add
icebp
imul
mov
cmp
xor
mov
xchg
cli
jge
dec
in
cltd
popa
xor
clc
bound
ret
mov
cmp
and
inc
and
aam
cmp
stos
js
movsb
test
or
cltd
or
inc
push
repnz
das
and
or
ret
cwtl
pushf
cmp
cmpsl
subl
cli
mov
jae
cmpsl
push
fs
xlat
inc
jmp
jle
fnsave
cmp
inc
cmpsb
int
and
outsl
gs
dec
xor
pop
or
push
jae
jno
bound
outsb
insl
movsb
inc
outsb
test
in
dec
in
icebp
test
jmp
jb
lcall
xchg
xor
lea
mov
cmp
cmp
inc
sbb
push
mov
loopne
lcall
ret
fcoml
stc
pusha
hlt
cmpsl
xchg
dec
les
xor
dec
add
lods
push
sbb
cwtl
inc
or
add
adc
outsb
and
test
ficoml
add
cwtl
lds
xchg
adc
add
dec
and
or
mov
adc
lds
lock
inc
and
sbb
jge
aam
ljmp
sahf
or
dec
and
xor
push
test
stos
pop
inc
or
sti
outsb
test
arpl
popl
pop
cmp
movsl
dec
cmp
mov
out
arpl
rclb
pop
or
cmp
adc
xchg
dec
arpl
aad
mov
mov
push
ljmp
inc
lods
cmpsl
pcmpeqd
cmp
push
je
sbb
jmp
sub
loop
or
ret
cmp
aad
inc
mov
and
mov
push
pusha
setle
ret
gs
fstpl
std
jle
mov
leave
jg
jle
dec
xchg
jnp
insb
push
sub
ret
jbe
mov
xchg
cmp
cmp
leave
lcall
stc
pop
sub
fstps
or
adc
stc
mov
popf
mov
sahf
stos
call
xchg
pop
les
filds
jge
add
sub
out
inc
cmp
aas
addr16
add
dec
adc
mov
jmp
idiv
je
hlt
dec
mov
mov
out
std
xor
xchg
cmp
imul
mov
stos
sbb
test
jl
mov
dec
dec
sarb
daa
inc
xor
popf
mov
jns
mov
out
test
xor
mov
arpl
pop
pop
jbe
hlt
xchg
push
pop
int
mov
and
cmp
xchg
pop
cmp
rcll
sub
cld
sbb
lods
dec
data16
test
fsubp
out
and
mov
xor
in
sbb
or
inc
xor
arpl
xchg
int
jne
pusha
call
ljmp
mov
jnp
in
lret
sub
or
cwtl
push
aaa
push
xchg
cltd
pop
jns
mov
push
pushf
pop
push
jbe
mov
lock
add
int3
jno
xchg
iret
push
push
and
aad
iret
push
out
mov
mov
pop
lret
sub
or
dec
mov
xchg
xchg
hlt
idivb
cltd
notl
stos
sbb
ret
xchg
and
jp
addr16
jbe
nop
iret
and
data16
inc
into
cmp
fstl
test
jno
push
xchg
mov
mov
jae
je
or
in
mov
mov
data16
mov
adc
mov
xchg
out
adc
adc
sbb
xlat
push
xchg
gs
js
push
mov
arpl
iret
jno
loop
mov
cmp
add
sbb
mov
ds
rorl
fwait
mov
mov
call
inc
add
cld
fwait
mov
rcl
in
pushf
movsl
mov
stos
lret
add
or
or
jge
add
mov
xor
sub
test
cmpsl
sbb
jns
nop
push
jne
test
mov
pop
sarl
sub
or
aad
fsubrl
or
or
sub
je
push
test
sbb
addl
mov
jp
jo
daa
dec
push
cmp
xchg
scas
dec
pop
push
sbb
or
addr16
lock
push
dec
gs
sti
insl
dec
cmp
jb
outsl
rolb
mov
test
push
stos
inc
and
lods
adcl
adc
fnsave
lcall
jmp
mull
adc
and
ljmp
sub
xchg
jns
jo
stos
fwait
cwtl
pop
stos
mov
call
testl
xor
cmp
mov
mov
cwtl
fwait
out
inc
popf
aad
push
sub
or
gs
mov
inc
mov
jp
mov
xchg
cmp
test
test
das
adc
sbb
pusha
jns
fidivrl
xchg
pop
jmp
adc
xchg
mov
popa
push
ret
dec
dec
imul
cmp
add
mov
loope
adc
cmp
xlat
lods
gs
popa
adc
ljmp
mov
or
repz
pop
inc
and
loop
xor
jo
das
fldl
es
inc
pop
fisubs
rclb
lods
or
xor
aam
sbb
adc
dec
jnp
jb
cmp
std
sbb
ret
lahf
data16
pop
sub
fsubr
stos
lea
pushf
dec
ljmp
push
jne
mov
cmp
or
jb
cmc
orb
xchg
jle,pn
rorl
push
or
ds
dec
adc
mov
dec
mov
and
ss
lods
daa
dec
in
add
gs
adc
xor
cmpsl
cli
or
movsb
dec
jmp
dec
cmp
data16
mov
insb
xchg
push
out
fadd
das
push
mov
mov
stc
cli
add
mov
shrl
fidivs
xor
cmc
pop
nop
sbb
insl
cmpsb
push
into
sbb
xchg
inc
xchg
push
push
cli
cmp
cmpsb
mov
add
dec
mov
mov
sbb
out
sbb
fists
arpl
cmp
lea
push
or
notl
jecxz
pushf
mov
push
lods
mov
push
mov
dec
loope
mov
jnp,pt
insl
enter
sbb
jbe
int3
mov
jb
mov
mov
adc
push
imul
das
popf
or
rclb
in
loopne
and
mov
sub
and
xchg
jae
xchg
bswap
push
outsl
push
jmp
mov
imul
add
adc
xchg
out
fisubrl
xor
cs
mov
or
shrb
addr16
jl
fcomps
adc
out
adc
out
movsl
inc
pop
sub
push
cs
inc
ss
jb
roll
xlat
add
cld
jo
sbb
fdivs
jl
mov
xor
or
les
into
add
imul
loop
sub
or
jle
xor
inc
stos
stc
add
fisubs
repnz
adc
mov
test
mov
js
pop
fisttpll
xchg
test
mov
imul
mov
xlat
mov
lds
and
add
les
in
sti
push
in
xchg
jmp
test
jnp
shll
pop
and
lea
mov
ret
cmp
ret
rclb
in
sti
mov
lock
lock
cmc
imul
or
popa
rcl
jbe
xor
aam
push
aam
mov
ja
dec
sbb
adc
adc
xchg
and
pop
or
scas
xchg
stc
mov
push
xorb
xchg
and
mov
lea
movaps
push
cmpsl
mov
xchg
or
push
jecxz
dec
in
dec
mov
jnp
or
decb
cmp
push
jecxz
or
mov
xchg
cmpsb
or
movsb
mov
adc
and
mov
into
jns
imul
int3
pop
pop
or
push
pop
jmp
lods
mov
popa
addr16
lock
aaa
sub
mov
idivb
xchg
pop
ljmp
jmp
adc
ljmp
out
dec
mov
into
jae
jbe
xor
and
mov
shrb
mov
xchg
sbb
in
mov
inc
jae
adc
rclb
sbbb
push
sarb
aam
lcall
and
add
mov
rol
out
mov
mov
daa
aas
fisubl
xor
adc
das
adc
repz
fisttpl
pop
int3
and
dec
push
inc
lock
push
inc
xor
jae
lahf
popf
add
dec
xor
fprem1
insl
cmp
loopne
hlt
mov
cmpsl
mov
icebp
popf
dec
pop
mov
pop
enter
shlb
test
xor
push
push
or
xchg
inc
aam
jmp
cmp
popa
ss
jns
cltd
je
imul
add
incb
jge
xlat
jmp
test
out
xor
in
subl
aas
sbb
mov
cmpsl
mov
call
lcall
pop
fwait
sub
shll
fstps
adc
push
movl
stos
jp
popa
mov
adc
xchg
inc
daa
fists
int3
inc
push
pop
cwtl
xchg
iret
mov
imul
sub
out
mov
mov
aaa
mov
loopne
and
sub
cli
daa
or
mov
and
xchg
inc
jbe
imul
imul
pop
imul
push
jg
rclb
sarb
shrl
int3
cmp
cmp
mov
push
bnd
daa
enter
ret
jb
rorb
fmul
pop
xchg
arpl
outsl
push
mov
mov
jbe
aam
stc
icebp
xor
or
das
jmp
mov
in
in
aaa
stos
lds
mov
inc
aas
mov
mov
flds
in
inc
pop
sti
xor
lret
sbb
dec
sub
add
nop
push
xchg
cli
jle
mov
dec
push
sbb
sbb
cltd
cli
orl
add
fnstcw
pop
clc
push
push
jb
mov
cltd
sbb
imul
cmp
fstl
mov
shll
and
cmpl
aaa
push
sub
idivl
dec
pop
dec
and
inc
mov
add
adc
xchg
sub
loope
in
xchg
fcomi
fs
scas
lcall
mov
cmp
fisttps
pop
xlat
mov
test
xchg
xchg
push
hlt
or
aad
js
xchg
out
fsubr
lret
mov
aad
jl
scas
pop
mov
xchg
pusha
fsubp
pop
and
jp
cmc
mov
add
int
call
jns
inc
mov
cmp
sub
adcb
icebp
jl
xchg
hlt
out
pop
jge
dec
out
push
adc
mov
lahf
jecxz
mov
pop
pusha
pop
sbb
cmp
push
loope
adc
mov
test
jge
shll
sbb
cmp
sbb
sti
xorb
mov
aad
imul
scas
mov
inc
in
dec
rol
call
inc
mov
inc
in
jno
push
adcb
dec
dec
test
xor
test
loopne
addr16
jo
stc
int
push
and
pop
and
jle
addr16
imul
int
and
aaa
insb
dec
xor
mov
data16
pop
in
push
mov
or
out
or
dec
pop
xchg
cmp
add
es
insb
xlat
div
inc
add
xchg
subb
int3
inc
je
mov
out
mov
enter
into
push
xorl
mov
jo
jle
jo
push
xor
inc
mov
jae
mov
xlat
stc
inc
setne
stc
arpl
adc
adc
pop
xchg
nop
or
int
and
mov
lods
sbb
pop
gs
rorl
mov
cld
cmpsl
imul
jl
sub
push
xchg
clc
and
xchg
dec
js
enter
and
pop
das
mov
mov
imul
aaa
jmp
or
dec
cmp
cwtl
mov
lret
les
adc
dec
mov
mov
int3
loopne
js
jmp
jo
mov
xor
pop
cmpsl
sub
lock
pop
cmp
mov
andb
fs
pushf
lds
xchg
ret
dec
or
and
xchg
or
movsl
cwtl
mov
sbb
xor
movsl
cwtl
push
and
int
sub
test
lret
ljmp
std
ds
pop
xor
cmp
or
fsubs
fwait
lods
pop
jbe
int
jnp
in
jae
iret
jb
ja
xor
in
lret
jecxz
stos
push
sarl
dec
jnp
movsl
and
fdivs
dec
jmp
nop
cmp
pop
mov
cmp
xchg
ss
add
cmp
ds
pop
add
cmc
out
xchg
xchg
cs
icebp
icebp
push
lock
adc
ja
dec
bound
cmc
enter
or
es
xchg
pusha
mov
cmp
mov
sti
inc
imul
mov
sahf
je
lds
mov
sub
pop
pop
test
shlb
out
orl
les
rcrl
popa
lret
xchg
in
push
fmulp
add
data16
leave
inc
shlb
xchg
pop
inc
jbe
mov
inc
mov
inc
and
clc
scas
xchg
into
xor
add
stos
leave
and
jbe
mov
les
push
fsts
nop
lds
jns
sub
popf
and
inc
inc
adc
mov
or
je
jne
inc
jp
enter
leave
loop
mov
lods
and
lcall
ja
arpl
xchg
mov
or
mov
cwtl
add
push
jmp
mov
dec
xchg
xchg
inc
fmul
in
fucomip
stos
mov
rolb
sub
fisubrs
mov
shrb
add
and
push
lret
leave
jb
jne
fsubrl
aam
push
jae
jmp
xchg
test
push
sarb
shlb
pop
push
imul
lret
out
sbb
and
push
push
cmp
mov
xchg
jmp
and
pop
pop
push
mov
out
mov
dec
daa
jnp
xchg
xorb
imul
insb
shl
and
sbb
or
in
imul
xor
fsubl
jne
je
data16
aaa
push
hlt
cmp
loope
outsl
movsb
in
jnp
xor
add
test
je
les
xor
lock
test
rcl
insl
ljmp
imul
push
mov
jmp
loope
pop
and
mov
scas
sbb
or
or
xchg
fistl
adc
insl
sbb
in
mov
sbb
fists
lcall
xor
loopne
ret
or
lea
shll
mov
cmp
inc
outsl
aas
mov
fadd
sub
loop
leave
lock
clc
ss
push
jle
aad
scas
fwait
and
and
dec
inc
mov
daa
fdivs
xor
aaa
imul
mov
jecxz
xor
insb
fidivl
adc
cmp
jecxz
add
xchg
iret
sbb
dec
ficompl
push
add
arpl
arpl
cmpsl
div
pop
cmp
movsb
sub
and
pop
mov
sahf
sub
xchg
pop
and
fs
push
dec
fdivrs
test
adcb
sahf
lock
cmp
orl
push
pop
dec
pop
jns
outsl
in
test
rcl
ds
pop
fs
or
and
mov
push
xchg
mov
pop
xchg
dec
xchg
cmp
mov
xchg
int
push
sub
pop
dec
je
data16
ror
shrl
fstpt
xchg
enter
cltd
xor
jp
mov
inc
cmc
lahf
xor
push
aaa
sbb
mov
xor
sti
jnp
push
cmp
mov
and
push
xor
push
jecxz
and
dec
mov
aad
imul
jp
icebp
mov
movsl
push
imul
leave
movsl
andl
xor
test
and
mov
popf
push
call
bound
pop
cltd
push
push
sub
dec
sub
sbb
aam
mov
stos
fistps
push
rclb
ja
aad
repz
mov
xchg
sbb
arpl
aad
push
adc
test
jbe
daa
movsl
jne
xorb
popa
sbb
add
push
fsubr
jo
add
cmp
enter
xchg
sub
sub
and
pop
in
clc
testb
lahf
imul
call
aam
enter
inc
jo
outsb
push
and
mov
icebp
jmp
jbe
imul
push
pop
insb
pop
dec
aad
mov
mov
std
xchg
ret
test
test
mov
adc
dec
sub
cwtl
pop
iret
lock
pop
jbe
stos
or
rolb
insl
jne
jge
adc
jmp
call
inc
jns
dec
pop
inc
sbb
or
push
cwtl
mov
leave
lcall
mov
imul
popf
xorb
dec
cmp
das
dec
cwtl
cmp
std
cwtl
jne
test
push
sub
mov
mov
lret
cmp
adcb
pop
negb
mov
scas
mov
out
ret
mov
imul
push
adc
mov
mov
test
aaa
inc
aad
push
dec
aaa
mulb
jp
jge
ret
sbb
repz
mov
xor
mov
inc
push
cmp
scas
pop
cmp
inc
or
pop
and
mov
cld
fstl
out
mov
es
mov
call
adc
xchg
sbbb
xchg
imul
rcl
sub
test
jne
jne
test
adc
aas
adc
lock
xchg
xchg
adc
inc
sti
or
in
imul
out
in
shll
pop
or
sub
mov
shrl
or
nop
std
fs
imul
notb
test
add
aaa
add
int3
cmp
inc
xchg
cltd
xchg
test
in
cmp
mov
mov
lahf
aas
push
je
call
imul
inc
sub
pop
sahf
cmp
dec
jb
leave
pop
lods
push
jo
jae
mov
mov
popf
scas
stos
gs
jmp
xchg
fildl
jbe
inc
fs
lds
jbe
xchg
pop
fistps
mov
add
out
cs
mov
ss
adc
jo
arpl
aaa
mov
lds
je
push
stos
mov
jne
shrl
adc
or
dec
cmp
mov
sbb
adc
bnd
call
cmp
movsb
dec
std
pop
ds
ret
loope
or
aaa
cmc
lods
sub
and
lods
or
mov
subb
cmpsl
cmp
mov
and
popa
scas
push
out
pop
sbb
jbe
lcall
push
sbb
std
bound
and
pop
sbb
popa
push
int3
push
je
out
cmpsl
inc
jae
fistpll
ficomps
sbb
adc
repnz
push
cmp
fadd
xchg
adcl
sub
aad
jne
gs
je
jl
cmp
rclb
add
insl
xor
sub
sti
xchg
cmp
icebp
sub
adc
pop
push
int3
xor
shl
pop
push
jg
test
mov
xchg
mov
and
cvtps2pd
jmp
push
popl
lods
stos
or
aaa
and
loopne
pop
cmpsl
cs
sub
int3
lahf
xchg
and
mov
scas
in
adc
sarb
imul
push
das
xor
dec
aaa
push
inc
xchg
ret
stos
pop
cmp
pmulhuw
es
div
fwait
push
jp
inc
aas
hlt
sahf
cmp
mov
and
test
jl
sub
sarb
stc
push
es
sub
fldl
aam
nop
loop
or
mov
xchg
jne
notb
inc
mov
in
idivl
ret
mov
mov
or
mov
inc
adc
add
js
push
add
stos
dec
inc
and
xchg
js
in
dec
lret
xchg
xchg
imul
test
mov
or
arpl
inc
addr16
mov
in
adc
xchg
jae
rclb
test
ret
xchg
mov
in
jge
rcr
int3
shlb
xor
or
jecxz
sub
inc
inc
xor
orl
cmp
loope
jns
add
jne
loope
icebp
push
cli
loop
push
loop
cmp
test
sbb
xchg
adc
push
bound
divl
fwait
xchg
nop
out
pop
mov
hlt
mov
rcll
in
in
mov
sbb
ds
sbb
popf
daa
outsl
sbb
mov
and
insb
and
inc
cmpsb
cmp
jnp
icebp
jnp
aas
daa
pushf
pop
cmc
or
pop
cmp
push
sbb
scas
mov
dec
jle
mov
mov
jg
xchg
mov
nop
iret
out
repnz
pop
cmp
xchg
xchg
es
cmp
xchg
shrb
fiadds
aas
out
xchg
lds
dec
push
in
push
test
sub
mov
xor
push
mov
out
cli
jne
imul
rolb
add
in
lcall
in
repz
push
or
mov
jns
mov
pop
test
mov
dec
sub
test
push
loop
scas
popa
fisttpll
jae
xchg
jns
sbb
lret
loopne
sub
mov
xchg
inc
sub
clc
in
daa
mov
mov
push
nop
push
mov
dec
test
out
rcrb
xor
shl
mov
stc
mov
push
push
mov
cmp
sbb
sub
push
inc
mov
lret
fidivrl
in
jnp
sub
adc
adcb
cmp
out
inc
mov
inc
xchg
mov
movsl
add
pop
cmp
adc
repz
sbb
pop
cld
popa
mov
xchg
mov
mov
push
subb
test
sbb
push
pop
loop
pop
fimull
push
and
mov
mov
push
sub
mov
insb
push
and
dec
mov
mov
and
shrb
dec
aaa
test
or
add
pop
pop
jno
out
mov
mov
cmp
cmp
xchg
sub
hlt
mulps
out
dec
in
add
cmp
pop
push
add
aas
dec
or
leave
mulb
shlb
inc
outsl
gs
loop
mov
xchg
push
add
out
mov
jne
inc
cmp
das
insb
daa
inc
rcll
pop
rol
js
xchg
mov
lahf
jge
sub
jbe
ja
xor
sarl
jmp
enter
mov
popl
movl
in
mov
push
cltd
push
inc
xchg
insl
and
sub
js
sub
mov
push
iret
jg
mov
mov
nop
jp
or
mull
addr16
mov
psubb
sub
pop
push
fdivrp
divb
push
and
adc
mov
pop
movsl
packsswb
adc
mov
sbb
das
sbb
in
pop
mov
nop
fnstcw
sti
roll
mov
push
and
cs
ljmp
lret
bound
loopne
or
sub
imul
mov
jo
shll
enter
jg
ficoms
pop
movsb
mov
pushf
mov
hlt
push
jle,pn
push
flds
xor
pop
xchg
xlat
cmp
push
jbe
arpl
dec
dec
les
mov
xchg
in
push
sub
mov
scas
inc
fwait
dec
subb
mov
popf
imul
jg
imul
pusha
inc
push
xchg
ficomps
xor
stc
sbbb
jge
jbe
out
mov
xor
mov
cmp
sbb
jns
out
push
mov
jl
jge
mov
sti
jecxz
xor
movb
mov
xchg
ja
mov
pop
cs
pusha
adc
rcrl
ja
fistl
xchg
dec
push
push
adc
lods
add
push
cmp
mov
pop
mov
loope
xchg
or
xor
cmp
jne
xchg
jmp
push
cli
add
mov
stc
mov
inc
jns
loope
bound
pop
mov
and
pop
mov
mov
sub
insb
sub
mov
add
mov
sbb
dec
lds
inc
xchg
sbb
leave
sub
pop
pop
into
hlt
push
and
inc
mov
inc
cvtps2pd
and
je
test
in
bound
pop
and
cmpsl
aad
scas
mov
mov
xchg
pop
mov
pop
pop
cmp
sbb
ss
xchg
jae
sbb
das
cmp
sbb
mov
aaa
mov
jno
imul
mov
bnd
pop
jb
and
enter
sbb
enter
push
pop
adc
sub
adc
insb
push
jmp
adc
pop
inc
add
pop
stos
push
jmp
xchg
inc
out
lahf
jle
push
pop
imul
pop
pop
sub
enter
subl
js
jnp
repz
in
in
outsb
xor
mov
xor
or
xlat
or
add
dec
aas
call
jmp
or
xor
xor
repz
pop
shrl
lea
add
loopne
jbe
daa
fwait
inc
jb
xor
xchg
pop
pop
das
call
in
subb
xchg
fistpll
shlb
outsl
push
cltd
push
jnp
lcall
ss
roll
in
adc
outsb
in
icebp
inc
out
stos
mov
jne
subb
stos
loop
inc
repz
mov
dec
popf
test
mov
pop
pushf
dec
dec
out
sarb
xchg
push
dec
push
fs
xchg
jnp
push
cmp
push
mov
insl
jne
sub
sbb
sarl
inc
inc
sbb
in
push
mov
mov
mov
sub
inc
xor
ds
adcl
ss
cmpsl
sub
insb
rcll
cmp
fdivr
cmc
ret
dec
ret
divl
mov
sub
xor
gs
mov
adc
xchg
jno
lock
bound
pushf
push
subl
sub
jl
add
cmp
bound
gs
dec
ret
cmpsl
sub
inc
dec
lods
rol
imul
nop
mov
push
test
mov
test
xchg
scas
iret
cmp
mov
shld
xchg
and
out
aam
in
icebp
jecxz
mov
pop
test
hlt
icebp
cltd
pop
icebp
bound
jmp
orb
pop
lock
xor
xchg
mov
fcomp
outsb
test
mov
arpl
dec
lds
sub
dec
mov
xor
inc
dec
mov
sbbb
jl
cmp
inc
xchg
jle
arpl
lret
jp
int
cmp
sbb
mov
cmp
cmp
pop
imul
iret
jo
test
inc
adc
loop
jbe
and
xchg
scas
fimuls
mov
popf
mov
cmpsb
dec
jnp
stos
mov
pop
xor
sub
icebp
push
add
mov
mov
aam
in
xchg
mov
pop
jne
decl
data16
lret
mov
add
jmp
adc
inc
jo
gs
nop
sub
xor
mov
std
jnp
mov
pusha
cmpsl
sahf
shlb
dec
push
inc
or
xchg
movl
movsl
test
repz
lcall
dec
mov
mov
or
pushf
iret
push
mov
movsb
jl
lahf
int
mov
lea
jge
pop
push
jbe
dec
xchg
test
dec
testb
cmp
inc
test
dec
lods
cld
cli
fsubrs
movsl
popf
and
repnz
in
sub
push
mov
nop
add
outsb
ficomps
sub
out
clc
mov
loopne
mov
and
std
mov
insl
push
xor
mov
ds
dec
rorl
aam
orl
xchg
push
ds
push
lods
scas
sbb
aad
add
xor
sub
sbb
mov
pushf
cmpsb
outsl
sbb
inc
notl
std
insb
push
sbb
or
cmp
loopne
push
sbb
ret
test
pusha
mov
or
and
ss
or
mov
push
test
rcrb
vcmpsd
push
or
xchg
pop
into
data16
mov
out
stc
andb
and
mov
cmc
lret
nop
inc
lret
mov
jo
popf
fdivr
sti
stc
imul
outsl
test
sub
andl
lea
mov
scas
sub
push
jbe
cmpsb
and
out
fcoms
in
fistps
jns
xor
sbb
inc
in
sbb
jb
xor
fwait
lds
kmovw
cmpl
fdivrl
or
and
mov
pop
mov
adc
push
ljmp
cmp
out
daa
inc
mov
sbb
mov
jle
and
cmp
dec
mov
bound
fwait
test
mov
es
jb
inc
or
or
cmpsb
inc
push
fcomps
mov
mov
mov
test
mov
add
subb
inc
push
cmpl
push
xchg
dec
xchg
add
in
mov
nop
or
mov
mov
xor
out
adc
push
jmp
fstpt
pop
ds
addl
in
mov
pop
in
jp
in
lods
add
mov
sbb
sbb
sbb
and
scas
and
icebp
and
movb
ja
cmp
jb
xchg
push
inc
aaa
adc
or
pusha
mov
xchg
ljmp
jge
insl
jbe
popa
sar
or
lods
xor
adc
mov
push
scas
or
lods
sarb
out
pop
mov
add
std
mov
mov
cli
add
adcb
clc
mov
clc
aaa
sbb
inc
das
cmp
adc
test
push
pop
les
cmp
adc
rorl
xor
cwtl
jae
ret
orl
fnstenv
mov
fisttps
sbb
fs
add
adc
mov
add
inc
mov
or
fmuls
cmc
jne
pop
sbb
cmpsb
fdivs
mov
cmp
inc
xorb
scas
xor
and
lahf
sbb
and
nop
icebp
inc
iret
pop
not
or
into
pop
xor
popf
leave
fistps
aad
push
js
mov
push
scas
sahf
les
outsb
inc
xchg
xchg
jns
out
mov
lret
rcl
xor
add
or
inc
in
inc
adc
leave
jecxz
xor
sbb
insb
jbe
bound
sahf
imul
pushf
xor
stos
adc
xor
and
xor
addb
insb
outsb
add
in
push
push
add
dec
add
sub
jle
sub
outsb
sub
mov
mov
push
ds
jle
lea
imul
dec
rcr
loop
cli
sahf
sahf
adc
dec
mov
daa
xchg
sub
inc
in
pop
das
fisttpl
push
inc
sub
js
cwtl
call
iret
mov
std
aad
mov
add
in
sti
push
add
subb
and
push
and
test
mov
test
flds
xchg
pop
daa
pop
adc
arpl
jns
stc
ja
and
shrl
das
sbb
loopne
add
in
in
movsl
xchg
jg
cmp
push
ds
pusha
mov
pop
pop
mov
shlb
test
xchg
dec
dec
out
out
mov
jnp
outsl
mov
mov
sub
jb
jg
push
pop
data16
fildll
mov
mov
jns
cmpb
cmpsb
hlt
jle
enter
movb
rcrb
lea
int
ljmp
imul
adc
xlat
cwtl
lret
mov
test
test
neg
lods
dec
mov
cmp
jp
push
clc
in
mov
inc
dec
lods
out
push
fists
mov
mov
sbb
push
jnp
test
ds
loope
mov
fistpll
xchg
in
gs
in
push
mov
lret
dec
cld
nop
jle
mov
shrb
test
push
sub
mov
out
out
cwtl
inc
push
jo
mov
lahf
mov
mov
mov
lock
push
mov
jg
add
repz
idiv
xor
and
lret
subb
f2xm1
sbbl
xchg
mov
adc
ljmp
jp
mov
popf
loope
adc
lea
fidivl
out
add
push
ja
or
test
and
test
mull
aas
xor
pop
and
test
push
or
shlb
adc
int
adc
pop
adc
icebp
fwait
inc
or
add
lds
dec
loopne
push
or
repz
pop
out
lds
orb
mov
loopne
les
sub
in
xchg
xor
mov
fistl
adc
data16
js
jne
and
imul
cmp
imul
add
adc
sbb
jmp
lock
push
clc
mov
dec
adc
iret
out
outsl
push
xchg
cli
lds
pop
aam
and
dec
adc
aas
or
or
xchg
stos
mov
and
imul
add
popa
popa
flds
int
int3
les
hlt
clc
repnz
sbb
adc
adc
sar
lret
clc
imul
pop
imul
inc
loope
pop
jg
loop
stos
add
sbb
cli
sbb
add
dec
inc
jge
outsl
lahf
clc
mov
clc
jecxz
daa
jle
push
negb
inc
or
movsb
outsb
mov
push
pop
cmp
cmp
inc
adc
aad
ja
mov
sbb
inc
mov
rcll
aas
xchg
adc
fidivrs
fmul
mov
push
enter
shlb
daa
xchg
push
roll
jl
pop
std
mov
into
aad
mov
std
mov
cmpsl
dec
jo
adc
pushf
clc
cmp
xchg
je
dec
shl
lcall
adc
mov
push
popf
movb
addb
sbb
jl
shll
fmuls
jle
movd
sbb
das
sub
mov
loopne
cmovle
mov
ror
sub
adc
pushf
adc
xchg
jb
jl
test
out
push
in
imul
rorb
and
and
imul
mov
push
xor
test
je
jl
out
into
mov
push
cli
dec
or
movsl
mov
cmp
mov
cwtl
jne
pusha
scas
and
pop
fistps
pushf
jne
je
mov
jle
mov
test
addr16
sub
ja
test
mov
fwait
repnz
adc
stos
and
mov
mov
idiv
lds
jb
inc
outsl
test
fcoms
sub
mov
inc
xlat
inc
test
mov
and
inc
aad
sub
nop
bound
sub
lret
loopne
fisttpll
mov
movsl
outsl
adc
lahf
sub
mov
clc
push
and
sbb
jae
aam
jge
push
mov
cmp
lcall
pop
outsl
mov
rclb
and
add
mov
cmp
push
or
pop
gs
out
dec
bound
rcr
ficoml
stc
cmp
jecxz
push
pop
pop
loope
add
push
loop
das
addl
clc
jecxz,pt
add
mov
fwait
or
scas
add
jb
clc
aam
push
push
xchg
jo
mov
out
and
loope
in
test
adc
lea
mov
xor
mov
inc
je
out
dec
out
push
inc
shlb
add
in
or
mov
or
out
mov
int
or
outsb
cmp
xchg
mov
sahf
arpl
mov
addr16
imul
pop
mov
xchg
fdivrl
push
mov
jne
lods
pop
insl
es
js
rcrl
mov
jnp
ljmp
es
psadbw
or
jmp
cmpsl
aad
cwtl
out
mov
cmp
dec
and
dec
fcomps
int
xchg
cmp
pop
outsl
mov
pop
fists
jnp
jbe
cmp
mov
es
dec
pop
sub
push
mov
mov
inc
jae
push
es
fnstenv
cwtl
outsl
mov
cld
sub
inc
mov
stos
gs
mov
jg
fcomps
sbb
mov
mov
aad
nop
sub
and
jmp
xor
and
jne
adcb
jp
scas
scas
cmpsl
push
sub
sub
push
mov
aas
or
ja,pn
data16
inc
lret
scas
lods
arpl
imul
cmpsb
nop
adc
xor
xchg
sbbl
loop
xchg
pop
in
push
pushf
aad
test
mov
xchg
lcall
fisubs
cld
cli
rcl
xchg
cmc
xchg
sub
xchg
lea
cmc
ss
les
push
mov
jg
test
adc
pop
mov
and
test
dec
test
jg
hlt
mov
cmc
and
pop
push
mulb
mov
push
add
sub
fstl
ret
mov
rorl
push
xchg
or
testl
xchg
dec
pop
jbe
jne
mov
in
iret
inc
sub
aad
repnz
and
cmpsl
xlat
mov
mov
add
pop
mov
push
lret
aas
les
fwait
cmp
jnp
push
lods
jbe
cli
popf
xchg
shll
into
adc
add
fwait
outsb
sti
jmp
das
testl
inc
in
xchg
test
call
scas
sub
push
insb
mov
mov
cmp
fldl
nop
jbe
xor
rcll
push
push
cmpsl
sub
aad
mov
pop
adc
ja
rorl
shlb
xor
jns
push
pop
mov
daa
lods
add
xor
or
xchg
cs
sub
es
jnp
dec
into
cmp
pop
and
adc
push
loope
dec
and
fs
mov
hlt
add
daa
mov
push
in
dec
out
lahf
cltd
out
cs
insb
rorb
fisttps
int3
push
lds
add
lret
pop
mov
std
repz
mov
pushf
jbe
nop
jno
xchg
not
mov
mov
mov
shrl
adc
popl
fs
fldcw
mov
out
negb
xor
jle
aam
std
rcrl
ljmp
add
mov
mov
lods
repz
jno
rcll
jne
pop
mov
insb
orb
mov
dec
pop
push
ss
mov
rorl
adc
or
sbb
in
ret
jns
inc
mov
and
cmp
pop
jmp
sbb
jcxz
cli
movsb
call
add
jl
xchg
stos
push
push
push
and
test
mov
push
sbb
push
cwtl
insb
sbb
mov
inc
jmp
mov
adc
sbb
pop
inc
mov
idivl
das
sub
inc
hlt
jbe
stos
cmp
lock
or
jl
jnp
lock
xor
icebp
xchg
cmp
xor
into
jb
fildll
frstor
andb
jg
push
fistpll
into
add
push
push
jns
iret
pop
dec
inc
adc
mov
fdivr
movb
dec
out
mov
push
dec
cwtl
fadds
ret
fbld
mov
xchg
cmp
shl
mov
mov
fldt
pop
add
adc
and
cmp
subl
in
cwtl
dec
pop
std
push
lea
push
loop
cmp
outsb
cmpsb
les
call
das
cmpsl
push
fistps
cmc
es
subl
lds
push
mov
cli
xlat
gs
ss
xchg
adc
imul
loope
mov
xlat
dec
pop
dec
shlb
xchg
test
pop
adc
or
nop
loop
jp
adc
xor
xchg
int
sub
or
mov
dec
mov
mov
mov
fdivl
pusha
ja
aam
stos
jnp
lcall
jmp
loop
inc
int3
sub
pusha
dec
jnp
xor
and
sub
xchg
addr16
push
rorl
ja
push
pushl
pop
popf
into
inc
stos
jp
out
call
int3
and
lret
repz
inc
mov
loope
inc
xchg
inc
xchg
push
sbb
and
divl
aaa
icebp
xor
sub
jmp
sbb
into
mul
loope
aam
pop
add
jmp
mov
sbb
scas
daa
icebp
sub
out
inc
fisubl
xchg
adc
test
jno
movsl
enter
movsl
scas
sub
std
lcall
loope
icebp
jg
push
xor
rcrl
inc
jge
sub
pushf
xor
mov
cli
push
les
icebp
and
xchg
outsb
mov
inc
inc
and
shl
sbb
jg
add
push
xchg
cmp
in
ja
insl
or
lret
test
sub
sub
aam
clc
test
leave
sub
out
xor
xchg
adc
ret
testl
or
jmp
jp
movsb
sahf
sub
lock
rolb
lcall
lds
gs
jmp
add
clc
mov
jle
out
jns
aaa
and
jecxz
arpl
ja
push
aad
mov
popa
add
dec
jg
popa
push
mov
push
xchg
idivb
lcall
outsl
stos
adc
pushf
cmpsl
lds
mov
pop
cmp
lcall
lahf
dec
pop
sbb
das
add
mov
cld
adc
mov
sbb
lahf
lea
xchg
inc
mov
pop
lret
sarl
rolb
add
out
lock
cmp
ret
pop
add
addl
pusha
push
lret
mov
mov
mov
xlat
xchg
push
or
hlt
das
push
lret
roll
cmp
mov
cmpsb
add
cwtl
enter
ret
inc
adc
xchg
loopne
and
cs
jnp
daa
test
adc
lcall
cmp
jnp
dec
mov
dec
jne
or
inc
xchg
sub
mulb
jl
mov
sbb
rolb
jns
xor
push
fsub
out
movsb
das
cmp
jae
inc
lds
xchg
gs
add
movsb
in
fsub
mov
mov
pushf
dec
mov
inc
dec
scas
repz
pop
xor
test
aam
mull
or
cs
shll
ficomps
mov
cmc
cmp
outsb
and
mov
pop
push
mov
and
movsl
pop
aas
adc
sbb
or
sub
insl
out
jmp
dec
pop
adc
mov
sub
shrb
in
dec
inc
movsl
xchg
negl
dec
inc
cmp
mov
nop
xlat
or
mov
into
push
sub
and
sub
fmuls
cmpl
out
clc
jle
xor
mov
sbb
jp
cmp
lds
dec
xor
xor
or
pop
pop
subb
inc
mov
fs
aam
loop
inc
sbb
pop
stc
cmpsb
subb
jne
dec
cmp
lock
mull
dec
cmp
xor
sbb
in
cmp
mov
push
mov
or
lcall
cmpsl
sub
xor
cmpb
movsb
imul
aaa
int3
add
bound
push
aas
rep
bnd
mov
incb
addl
inc
or
xor
es
xor
lods
cld
inc
fisubl
mov
incl
xchg
pop
sbb
stc
out
pop
lahf
mov
sub
sub
scas
mov
clc
mov
cli
mov
add
je
loopne
xor
jb
je
adc
and
jmp
cmp
add
jmp
scas
mov
int3
aad
fldl
adc
pop
stos
xor
and
xchg
pushf
jle
lock
into
roll
das
cmp
mov
aad
sub
mov
push
fstpt
xchg
or
push
cmp
jns
lahf
jge
fwait
shrl
sarl
fs
and
mov
and
dec
lret
jns
xchg
js
cmp
mov
ret
cld
out
aaa
icebp
je
insb
insb
push
dec
int3
lods
or
sbb
fs
inc
in
mov
sbb
imul
in
movl
mov
es
mov
addr16
mov
pop
cs
cmp
fcmovne
fidivl
inc
cmp
pop
lea
repnz
int3
lahf
mov
int
sbb
pop
fdivl
pop
insl
xchg
aaa
gs
pop
pop
loop
add
outsb
aad
pop
cmpsb
lret
pop
jge
les
pop
dec
in
cmc
cmp
imul
fwait
iret
jbe
clc
push
test
jo
xor
jge
pop
sahf
push
addb
push
push
movb
sarl
cld
push
hlt
pop
jb
popa
lock
cmpsl
pop
inc
adc
test
fldl
cmpsl
bound
xchg
xor
and
repz
lds
pop
jp
ret
inc
cmp
adc
or
ja
and
dec
addr16
push
sub
out
push
popa
lock
lods
jl
dec
inc
popa
mov
inc
jg
mov
cmp
pop
pop
jo
mov
nop
ds
xor
jb
xor
sbb
push
inc
mov
pop
mov
adc
das
cli
aam
mov
or
dec
rolb
cmp
push
pop
adc
aad
std
addb
dec
aaa
mov
mov
outsb
xchg
test
imul
mov
jnp
loop
mov
arpl
mov
adc
mov
mov
or
fildl
pop
push
xor
sub
sti
fimull
out
push
mov
inc
mov
mov
inc
mov
mov
shrl
adc
lds
sti
subl
pop
js
adc
xchg
lea
icebp
mov
pusha
fbstp
pusha
add
push
fisubl
sbb
adc
gs
push
jp
pop
mov
scas
daa
jmp
mov
call
sbb
repz
push
divb
push
mov
lds
cmpsb
popl
add
mov
pop
mov
jbe
into
and
adc
xchg
fimull
xchg
sub
xchg
ret
jo
out
punpcklbw
push
sub
cltd
insl
repnz
les
enter
pop
push
mov
adc
jecxz
cmp
inc
mov
cmpsb
mov
lock
push
cmp
addb
and
dec
shll
pop
mulb
xor
mov
xor
les
in
xchg
sti
push
stos
aaa
fldl
dec
sub
adc
in
in
pushf
and
or
data16
or
jmp
push
mov
dec
ss
push
cmp
xor
push
test
mov
xor
ret
push
repz
push
xchg
popf
xchg
mov
fnsave
cwtl
jmp
dec
mov
imul
cmpsb
fistpl
std
popa
cwtl
mov
mov
testb
lret
xchg
jne
cmp
ljmp
sar
test
and
sbb
jp
jb
test
repz
cmc
inc
pushf
sarl
mov
lds
fsubl
or
xlat
enter
pop
and
les
cmp
shll
clc
sbb
xchg
add
popf
int3
jb
scas
fsts
sbb
aaa
daa
pop
cmp
icebp
xor
jne
cmpsb
mov
mov
sub
jnp
hlt
inc
call
insl
loopne
test
jmp
pop
pop
mov
sub
jg
aas
cmp
pop
pop
xor
lcall
ret
fbstp
xchg
stos
sbb
ss
hlt
sbb
or
pop
aas
xor
aad
daa
add
imul
sub
loopne
sbb
or
and
add
adc
xor
sub
xor
cs
adc
xor
fsubl
es
sub
popf
rorb
out
mov
out
leave
push
test
push
shrb
jge
and
jle
mov
xor
aam
mov
fs
sub
xor
adc
in
pusha
sti
sub
jne
and
pop
xchg
mov
ss
jb
sahf
pop
sbb
cli
sti
cwtl
jb
in
push
stc
icebp
xchg
lock
or
int
xchg
and
scas
or
pop
xchg
pop
test
mov
push
pushf
xor
jb
xchg
lret
push
rorl
pop
sub
cli
dec
ret
pop
clc
cld
sub
into
fcom
xchg
sahf
fcoms
push
gs
add
ja
sbb
mov
mov
dec
imul
cmpsb
frstor
mov
lcall
test
jb
fcompl
mov
fcmovne
mov
add
in
lea
xchg
in
dec
jp
jmp
outsl
pop
inc
and
sbb
and
popf
sub
or
scas
push
mov
push
rcrb
std
rcl
int
decl
push
ret
cmpsl
pop
mov
pop
sub
loopne
lea
push
fbld
push
adc
sbb
jmp
scas
insl
jo
sbb
repnz
mov
cltd
test
repnz
fsts
lcall
pop
jge
sti
add
test
add
mov
xor
cmp
mov
push
lret
fidivl
mov
mov
arpl
jne
mov
add
cmpsl
jo
mov
out
or
add
ffreep
push
addr16
gs
xlat
nop
popa
pop
jno
mov
inc
mov
in
insb
fcmovnb
cmp
push
mov
lds
fiaddl
mov
xor
xchg
push
sbb
cli
inc
push
push
pop
test
mov
dec
jno
sbb
mov
test
inc
aam
jmp
cmp
mov
xor
push
xchg
jbe
sbb
sub
cmovbe
ja
inc
lds
out
push
dec
pushf
mov
mov
mov
rorb
and
repz
xchg
jl
cmp
lock
sbb
mov
ss
pop
and
sbb
cmpsb
xlat
sub
into
lods
stos
xor
push
xor
test
jecxz
cmc
sub
lret
lret
into
jecxz
loop
mov
addr16
ljmp
or
mov
xor
addl
js
jb
dec
xchg
ss
mov
pop
dec
jecxz
adc
inc
shll
fildl
movsb
push
mov
or
xor
xchg
cli
push
jmp
test
or
imul
sub
mov
fcoms
ja
adc
imul
xchg
cmp
fs
mov
gs
das
out
inc
dec
push
aad
mov
mov
jmp
xor
clc
xchg
mov
or
test
cwtl
mov
jae
sub
test
pushf
mov
sbb
dec
xchg
aaa
push
jecxz
or
mov
icebp
mov
rorl
std
dec
mov
icebp
jmp
mov
push
les
sti
dec
and
bound
mov
pop
lock
mov
movsl
xor
je
mov
arpl
shlb
stos
lcall
rcr
idivb
popf
xor
stc
mov
fsubs
pop
bound
sahf
mov
mov
imul
imul
xchg
aad
or
push
aad
out
inc
push
int
int3
add
sbb
xchg
or
or
or
lret
shll
mov
loopne
xchg
jle
jae
dec
sbb
lea
sbb
cmp
pushf
add
cmp
xor
jle
dec
cltd
add
sub
xor
les
or
jns
xchg
push
mov
nop
dec
es
mov
ds
mov
pop
jno,pt
cmp
push
mov
repnz
scas
push
hlt
mov
das
pop
in
dec
dec
mov
dec
rcll
dec
mov
movsb
pop
fildl
popf
mov
sub
ss
mov
shlb
mov
mov
test
adc
pop
mov
sahf
dec
adcb
cli
mov
movsl
xchg
aam
test
sbb
sub
movsl
sti
sbb
or
lret
xlat
mov
mov
repz
adc
fdivs
out
arpl
xchg
ret
aaa
in
mov
imul
cld
fildl
add
scas
push
out
add
xor
push
in
je
cmc
insl
pushw
mov
and
lock
or
out
or
jmp
imul
test
jmp
data16
fsubrl
outsb
dec
subl
rcll
int
pop
andb
outsl
fisubrl
sbb
cmp
movsl
sbb
add
iret
mov
mov
mov
sti
paddsb
xlat
lock
and
fnstcw
push
es
mov
sub
int3
sbb
sbb
xor
call
mov
or
lea
mov
les
leave
mov
xchg
push
sub
and
jns
lcall
das
pop
das
mov
add
fsubrs
int3
mov
sub
fcoms
sbb
jge
fs
scas
data16
imul
mov
or
lea
mov
jb
and
adc
sub
dec
inc
pop
es
jno
aas
outsl
add
xorb
dec
mov
sahf
inc
cli
leave
push
stos
cmp
shlb
pop
push
inc
jge
sti
nop
in
test
fidivrl
inc
fiadds
idivl
push
ret
imul
sbb
cmpsb
lea
test
rcr
push
faddl
mov
sbb
sarl
adc
arpl
mov
xor
mov
cmp
mov
mov
adc
shll
xor
mov
inc
sub
inc
sbbb
popa
ss
xchg
and
mull
or
fsubrs
test
add
lods
pop
cwtl
push
or
push
inc
or
repz
in
xchg
or
data16
sub
mov
sub
popf
add
xor
and
fimull
xorb
sub
xor
data16
sbb
pop
int
push
sbb
mov
js
mov
inc
pmulhuw
and
in
arpl
icebp
xor
inc
jo
stos
jno
pop
int3
pushf
repz
ss
push
mov
lods
in
dec
add
loop
aad
gs
rol
shrl
pop
push
xchg
sub
pop
pop
aam
fwait
add
adcb
add
cmp
jno
mov
cmp
ret
jmp
sub
gs
in
dec
and
lret
dec
jle
lea
mov
fadd
out
jecxz
mov
pop
iret
sbb
stos
push
mov
shlb
mov
mov
xor
out
ja
aad
mov
out
ret
sbb
adc
movl
sub
lret
stc
push
add
cld
inc
mov
sub
fisubl
cmp
mov
fs
mov
inc
scas
scas
adc
xchg
out
js
or
das
insb
call
push
out
dec
inc
aam
inc
push
aas
loopne
sbb
cmp
inc
mov
popa
jle
cld
jge
cltd
loopne
call
cmp
mov
xchg
imul
xor
inc
add
mov
clc
inc
xor
push
jno
or
fcompl
xchg
lcall
pop
loop
dec
in
jle
call
inc
addr16
push
loop
push
or
push
test
xchg
push
sbbb
pop
push
je
adc
mov
mov
sbbl
mov
lcall
movsb
push
lds
lea
mov
sbb
movsb
lea
sub
fmull
sahf
movb
push
ja
stos
xor
or
pop
adc
into
and
int
cs
cmp
data16
push
xlat
mov
or
hlt
push
jmp
sti
addr16
mov
rolb
and
add
dec
das
pop
outsl
pop
dec
mov
lret
das
sarb
lahf
or
xor
pop
mov
dec
fisubs
xor
clc
enter
inc
sti
dec
or
adc
cmpb
inc
pop
mov
cmp
xchg
dec
in
push
gs
daa
fbld
leave
cmpsb
xchg
jnp
adc
push
jle
sbb
movsb
push
sbb
into
and
addr16
loop
push
in
push
cmpsl
mov
jb
jp
push
movsl
nop
gs
in
pop
push
nop
out
faddp
adc
cwtl
aas
repz
mov
cmp
jge
pop
imul
add
mov
ficompl
daa
adc
dec
jecxz
addr16
pop
jb
ja
in
xor
cwtl
mov
repz
xor
inc
shlb
test
ljmp
add
xchg
and
push
lcall
pushf
outsb
mov
fstp
pop
xchg
xchg
jg
mov
mov
mov
cmp
cld
sub
adc
ss
lods
or
int3
cmc
inc
fdivrs
jp
mov
ret
sbb
and
stc
xchg
cmp
lahf
sbb
lea
fistpl
sbb
cmp
jle
xchg
ljmp
inc
mov
xchg
cmp
gs
add
insl
sbb
mov
lds
adc
insl
insb
jle
inc
aad
or
mov
xlat
imul
dec
cmp
mov
lods
mov
or
add
pop
inc
into
cmp
jno
push
les
jl
int3
fisubs
test
cmp
xor
loop
sahf
or
sub
jo
clc
mov
in
push
inc
mov
hlt
fisttps
ljmp
scas
ljmp
and
bswap
jmp
popf
out
ljmp
inc
or
cmp
stos
jne
ds
mov
rorb
add
clc
mov
in
mov
or
setne
lods
in
xor
xor
cmp
rorl
xchg
inc
inc
fisubrl
ljmp
push
pop
and
push
imul
xchg
jl
ret
int3
mov
mov
mov
test
cmp
nop
sub
xor
ds
pop
loope
cmp
mov
int3
shlb
iret
push
mov
xor
mov
push
clc
add
out
in
inc
jnp
iret
mov
shl
push
mov
xor
sub
cmp
nop
push
mov
xor
ucomiss
sub
les
xchg
or
dec
pop
push
fsub
jns
bound
jecxz
push
addl
mov
and
xchg
cmp
lcall
sub
or
shlb
cli
add
jle
insb
mov
cmp
dec
mov
cli
sbb
mov
jl
shrl
jmp
xchg
dec
and
or
scas
pop
inc
mov
ss
push
cli
and
and
repz
pop
inc
xchg
repz
and
inc
js
xor
mov
lahf
cmp
insl
push
into
pop
xor
shrl
or
into
cwtl
outsl
jmp
pushf
sub
in
dec
pusha
mov
cwtl
dec
pop
fldln2
inc
pushl
rorb
cltd
insl
xchg
mov
mov
mov
mov
push
nop
les
dec
xlat
mov
imul
repz
fidivs
sub
mov
shrb
lahf
sub
or
sub
xor
enter
sbbb
jae
xlat
pop
pop
push
jmp
or
fsubs
jnp
mov
lahf
push
arpl
mov
int
addr16
xor
and
inc
aam
and
pop
pop
cwtl
test
ficompl
scas
xchg
push
pop
popa
in
inc
mov
test
cmc
mov
fucomip
adc
popf
add
inc
and
lret
inc
sbb
push
loop
jb
xor
into
je
pop
hlt
jno
pop
push
sti
or
jb
mov
rorb
aaa
inc
mov
test
std
sub
xor
pop
jg
popf
jp
and
jle
add
scas
lret
rcll
sbb
lret
mov
sub
lods
dec
fdivrl
pop
and
js
enter
fnstcw
scas
mov
shlb
cmpsb
jle
cltd
dec
jmp
push
xchg
movsl
push
mov
sub
sbb
gs
lahf
negb
sub
rcl
orl
mov
inc
mov
fldenv
into
pop
jmp
dec
and
mov
adc
aaa
push
xchg
mov
or
addr16
mov
pop
mov
jae
sarb
jae
adc
push
pop
movsl
inc
cmp
pop
test
add
out
fidivl
mov
movsb
pop
sbb
sbb
orb
dec
das
inc
add
std
roll
ljmp
mov
testb
add
lret
fdecstp
mov
stos
inc
scas
xchg
scas
and
mov
hlt
in
das
sub
cmp
test
dec
dec
sub
icebp
sbb
inc
pop
dec
jbe
in
out
adc
dec
scas
lcall
pop
lods
repnz
out
ds
add
pop
lock
inc
ret
movsb
jne
ss
push
les
aaa
sub
das
inc
sbbb
sbb
jl
xchg
movsb
cwtl
repz
into
sbb
dec
mov
cltd
and
popa
shrb
movsl
dec
movzwl
push
sub
outsl
mov
dec
xchg
mov
test
mov
mov
or
inc
add
int
sbb
sarl
fistpll
in
addr16
sub
loop
push
lds
adc
cmp
cmp
mov
stos
and
push
inc
les
pusha
cmp
loope
push
lahf
lods
in
push
cld
sti
push
das
push
mov
inc
jnp
jne
and
das
sti
add
lods
incl
fnstcw
mov
and
test
je
xor
xor
orl
sub
push
cmp
add
or
mov
adcb
cwtl
xor
int3
cmc
dec
in
pop
arpl
xchg
movsl
push
sahf
mov
adc
jmp
adc
int
je
mov
mov
cmp
and
pushf
mov
xchg
push
call
pusha
cld
push
lcall
xchg
sbb
das
int
pop
loopne
cmp
dec
add
xchg
or
cli
dec
lock
sub
les
cltd
sub
and
shlb
dec
lret
rorl
ret
lods
fdivrs
jns
cmp
adc
insb
or
jo
jnp
adc
sbbl
inc
pop
sbb
xchg
adcb
xlat
sub
add
or
testb
bound
fcomi
js
lock
dec
jmp
add
xor
or
and
fwait
clc
pop
mov
jge
neg
add
lcall
je
pop
out
or
xchg
lods
popa
cs
xor
xchg
mov
roll
shl
pop
imul
xor
sub
ficompl
fldt
add
add
test
mov
jmp
ds
rorb
jl
push
adc
out
push
and
cmp
mov
fs
push
subl
out
sbb
push
add
mov
and
add
or
mov
dec
mov
or
div
cmp
jae,pt
fdivrp
ficompl
aas
cltd
mov
push
jb
int
imul
ljmp
mov
icebp
ljmp
cwtl
mov
in
lret
mov
sbb
push
cmpsl
pop
and
ror
test
stos
push
hlt
sub
jmp
inc
jge
enter
pop
pop
mov
pop
fdivr
sub
das
add
jb
int
mov
fldcw
push
adc
mov
sbb
jno
decb
jns
jb
or
js
shrb
add
sub
sub
lahf
xor
inc
push
fildll
pop
sub
rolb
imul
jl
pop
fisttpl
movsl
jno
int
shlb
xchg
icebp
sbb
das
push
repnz
rorl
jp
mov
mov
repz
push
push
push
sub
jge
dec
data16
sahf
xchg
cmc
das
mov
mov
ret
sub
idivl
push
xchg
and
imul
push
and
mov
sub
cwtl
je
jmp
mov
xor
lret
jg
out
inc
adc
jno
lods
stos
inc
fildll
leave
jge
call
xchg
lods
or
mov
jecxz
push
mov
push
sbb
imulb
push
push
mov
cmp
xchg
mov
mov
pushf
dec
xor
pop
jmp
sahf
pop
xorl
dec
aas
addl
dec
or
sub
test
mov
inc
dec
push
and
fwait
int3
mov
in
jno
cli
sbb
xor
pop
pop
inc
cmp
sub
test
adcb
mov
xchg
dec
or
loopne
inc
dec
out
pop
mov
nop
popf
mov
mov
addl
cmp
pop
imul
stc
outsb
movsl
xor
dec
fbld
add
orb
push
cmc
loope
xchg
in
mov
xchg
jbe
mov
or
aam
sub
out
or
lret
pand
push
bound
xor
inc
inc
stc
loopne
push
sahf
lcall
cmp
push
jge
cmp
or
pop
out
sbb
ljmp
jns
mov
mov
jge
aas
jo
lret
js
popa
mov
and
lret
mov
pusha
add
or
sub
fisubl
cmc
inc
xor
mov
push
and
add
xchg
add
jmp
and
pop
cmp
pusha
out
movsl
imul
js
push
lret
lea
dec
cmp
xchg
lods
xchg
leave
mov
addr16
inc
jg
lds
or
xchg
stos
and
mov
dec
dec
sub
lods
dec
outsl
mov
lods
int3
shlb
fs
xchg
xor
mov
pop
outsl
out
repz
je
jmp
lods
notb
shrl
and
xchg
or
xchg
imul
fisttpl
pop
xor
xchg
lods
pop
out
clc
ja
fdivl
mov
inc
arpl
inc
mov
int3
scas
pop
push
gs
lahf
test
cmc
sbb
inc
mov
xor
add
out
lcall
or
sub
inc
stc
adc
aas
mov
shrb
shrl
out
lret
repz
jge
test
cmp
jo
rclb
mov
jl
inc
cmpsl
push
in
dec
cs
testb
mov
cmc
cmpsl
push
cs
mov
test
and
or
sbb
mov
adc
nop
arpl
sub
div
mov
addr16
ror
in
sub
stos
inc
jmp
push
pop
mov
out
fcomps
mov
sub
lock
add
or
insl
jecxz
jmp
cmp
adc
sbb
xchg
out
and
bswap
sbb
sahf
mov
mov
scas
shrl
pop
pop
pushf
outsb
sub
nop
stc
or
adc
shrl
xchg
lcall
filds
iret
pop
and
ficoml
sbb
or
cmp
popf
popa
clc
cld
clc
nop
cld
sbb
in
sub
pop
std
cli
dec
xlat
jae
mov
cmp
and
rorb
idivl
clc
jb
ds
or
push
cmp
adc
popa
popf
sbb
push
xchg
adc
push
pop
fiaddl
and
jg
negl
fstl
sub
cli
mov
sti
rclb
pop
addr16
inc
mov
mov
repz
into
lahf
jae
mov
lods
dec
pushf
movl
jecxz
or
iret
shrb
mov
and
dec
add
out
aas
icebp
mov
fdivrs
jecxz
imul
clc
call
enter
push
and
out
xchg
cmpsb
jno
cmp
hlt
mov
mov
and
pop
dec
cmp
sbb
roll
push
pop
push
dec
push
das
mov
js
add
xor
fsubl
jae
cmp
pop
sti
int
jae,pn
xchg
xor
stos
dec
add
movsb
sbb
fwait
mov
dec
dec
pop
iret
daa
fistps
adc
push
push
dec
inc
out
push
mov
push
mov
aaa
ret
xor
iret
jmp
add
sub
movsb
in
scas
sbb
xchg
es
outsl
sbbb
lods
imul
sahf
jle
fldl
sub
cmpsb
enter
lods
or
and
xchg
pop
leave
jno
aaa
dec
dec
jp
mov
jmp
sar
push
ret
cmp
jmp
es
in
fldcw
loope
mov
in
xor
pop
xor
jg
imul
mov
xorl
popf
mov
pop
test
push
and
call
mov
sub
in
pusha
hlt
xor
pop
int3
fcoms
fwait
in
xor
pop
mov
popa
or
cld
lahf
cmpb
ja
push
jg
jo
add
mov
xchg
in
add
shl
rcrl
iret
cmp
sar
ljmp
push
sub
push
fbstp
pop
mov
dec
popa
fsubr
lret
sbb
push
mov
push
aad
add
outsl
pop
inc
and
sub
shr
das
gs
fwait
or
sub
cmpb
xchg
add
push
mov
xorb
mov
test
lret
lret
mov
inc
lret
aas
mov
and
inc
aaa
dec
push
sbb
outsl
imul
ljmp
test
imul
and
add
mov
idivl
mov
loopne
mov
jno
test
pop
sbb
inc
sub
or
ret
inc
mov
pop
jb
insl
jg
add
sub
lods
jns
popa
das
inc
add
testb
xchg
mov
inc
dec
mov
adc
test
pop
clc
loop
lret
les
mov
pop
xor
cmpsl
loope
movsb
int
into
aas
dec
mov
cs
mov
inc
jp
xorb
and
push
cmp
cmp
add
repz
inc
mov
fcmovne
outsb
mov
sbb
es
lds
popa
shll
in
loop
jo
mov
xor
lods
hlt
fmuls
pop
sub
dec
add
add
push
into
xchg
je
xor
jne
cmp
push
push
sbbb
xor
nop
popf
mov
fistpll
adc
sbb
xchg
mov
mov
adc
sub
jmp
jnp
xchg
sub
pminsw
lret
xchg
sbb
cmp
pusha
cmpl
mov
repnz
es
cmp
jge
inc
gs
inc
xchg
idiv
movsl
cltd
pop
loope
and
sub
addr16
iret
test
cmp
in
sub
rclb
test
icebp
cmpsl
std
stos
stos
cli
in
cltd
pusha
push
sub
ret
mov
dec
out
out
xchg
mov
mov
adcl
ficomps
adc
jnp
or
repnz
cmp
push
sti
jb
leave
out
adc
push
mov
imul
dec
add
pop
dec
std
lcall
bound
lods
dec
or
pop
jmp
cwtl
je
push
pop
das
add
sbb
rcll
pop
ret
jmp
inc
sub
cmpsl
sbb
mov
mov
sub
dec
dec
push
and
mov
pop
push
jae
ds
jo
dec
and
or
out
mov
jnp
push
call
call
xor
mov
inc
ficomps
dec
sub
push
or
pop
aad
les
aam
lcall
push
lods
test
out
cmp
inc
push
subb
fisubrs
fstpt
jbe
in
fadds
xor
push
mov
mov
loopne
ja
pop
jbe
cli
sbb
in
pop
jbe
testl
push
idiv
adc
or
pop
mov
and
push
rcrb
cmc
lcall
mov
das
ja
icebp
out
js
cld
pop
addr16
mov
pusha
jo
repnz
jae
in
inc
push
sti
adc
cmpsb
rorl
or
pop
std
ret
outsl
sahf
ja
inc
ljmp
mov
pop
mov
out
lods
rcl
adc
lcall
and
add
mov
push
jecxz
loop
mov
std
mov
mov
lahf
inc
out
and
rcll
gs
mov
mov
sbb
rorl
stos
xor
push
outsb
stos
adc
call
pop
inc
insl
inc
or
pop
mov
push
sbb
xchg
mov
inc
aam
inc
push
inc
jle
sbb
icebp
addl
div
es
ffreep
lret
xchg
in
inc
arpl
mov
sub
ljmp
daa
inc
movl
inc
frstor
clc
push
call
js
xor
divl
xor
mov
pop
xchg
std
cmp
push
cld
mov
push
jb
bound
mov
adc
xor
add
mov
add
xlat
mov
push
test
aam
testb
sub
push
pop
xchg
cmpsb
dec
cmpsb
scas
jle
repz
rcl
insb
aam
aad
arpl
lret
inc
push
sub
pop
mov
ljmp
mov
pop
arpl
jp
jo
fldcw
ds
push
push
fwait
add
xlat
dec
push
mov
fptan
movsb
scas
xchg
push
pop
push
mov
or
mov
dec
xchg
xchg
cmpsb
jno
cmp
loop
sti
add
xchg
and
push
mov
sbb
xor
push
xor
xor
fneni(8087
shrl
cmp
push
imul
out
xor
jns
xchg
stc
ds
xchg
sbb
mov
push
pop
jmp
sbb
xchg
fs
jne
mov
into
pop
sbb
push
xor
xor
push
jns
add
hlt
cmpsb
hlt
lods
jb
mov
jge
and
testb
mov
icebp
out
mov
outsb
mov
cld
xor
fwait
mov
clc
pop
xor
into
and
shl
xor
adcl
pop
push
mov
pop
nop
push
mov
add
aam
jbe
ret
ret
ret
push
pushl
insb
mov
xor
push
inc
mov
in
push
push
fwait
enter
clc
xchg
addr16
popa
pop
push
ljmp
dec
fisubs
push
imull
les
fstpt
test
push
in
add
mov
push
rclb
push
int3
jbe
andb
dec
cs
outsb
aad
inc
pop
aam
sub
xor
mov
fdivs
into
mov
sbb
jnp
pop
les
insl
decb
in
jns
xor
ret
js
fs
xor
xchg
cmp
mov
fsubrl
gs
push
loop
fcmovbe
dec
xor
sbb
xchg
dec
shlb
sub
movsb
pusha
pop
adc
fildl
shlb
imul
cmp
imul
cwtl
ret
adc
cmp
sahf
push
in
shll
xchg
mov
out
fdivrl
xchg
sti
dec
outsl
mov
ds
mov
or
or
pop
test
repnz
xlat
sbb
aas
push
sahf
aas
aas
add
push
bound
insl
mov
lods
movsb
pop
mov
push
cmp
xlat
sub
pop
pop
inc
add
in
enter
test
pop
jne
popf
jle
xor
xchg
mov
cmp
mov
push
rorl
xchg
mov
mov
and
test
pop
mov
sub
push
rcr
cmp
jno
push
arpl
pusha
pop
pop
mov
ds
mov
pop
dec
scas
insb
fisttps
dec
dec
int3
data16
pop
aaa
mov
jae
jns
push
xor
xchg
mov
pop
push
fs
dec
mov
pop
xor
mov
pop
call
cmpsb
mov
sub
mov
sbb
push
jp
mov
es
sbb
in
je
and
cltd
pop
iret
jnp
fidivrs
in
and
clc
add
or
dec
jnp
popf
cld
nop
outsl
push
pop
sub
pop
out
inc
add
imul
cmc
lods
mov
test
push
call
push
fidivl
sbb
cmp
adc
call
mov
dec
ret
cmpsb
dec
aas
rcll
mov
gs
insl
dec
or
push
pop
int3
mov
mov
pusha
lods
into
rcr
xlat
insl
sub
mov
jae
xor
xchg
imul
in
inc
adc
ja
xchg
fistpl
sbb
shrl
inc
or
sub
mov
loop
popa
jecxz
or
dec
inc
aam
pop
ds
mov
and
fadds
loope
pusha
xor
imull
rol
inc
sub
and
imul
or
clc
sarl
push
mov
mov
sti
dec
js
mov
gs
test
jg
cmpsb
mov
scas
push
nop
jb
test
and
es
lea
sbb
xchg
insl
sbb
jp
jp
push
pop
sbb
loope
adc
sti
xor
ret
fucomi
sbb
andb
sti
add
js
pop
xor
fcoms
push
je
cs
cmc
mov
imulb
cltd
sbb
int
outsb
test
cmp
lea
mov
fsubs
xchg
cmp
lret
push
jnp
iret
and
aad
cmpsb
lret
adc
xor
cmc
std
sub
fs
movsl
pop
push
in
pop
das
jge
sbb
mov
orl
cmp
or
cwtl
mov
cmpsb
loope
nop
gs
popa
lds
rorl
in
stos
mov
add
sub
lods
add
outsb
jecxz
inc
pop
mov
sbb
fwait
popf
mov
mov
stc
add
pop
cmpsb
out
outsb
int
and
aaa
ret
pop
out
daa
sbbb
sbb
fdivrl
push
pop
push
fcoms
push
adc
ficompl
fcmovne
sbb
xor
popa
daa
xchg
scas
rep
shlb
dec
cmp
adc
push
pushf
jne
outsl
dec
cmpsb
ret
fidivrl
or
lds
ja
fldlg2
aad
cmc
aaa
pop
sub
jecxz
cmp
jo
movsb
fdivrs
je
pop
sbb
pop
out
lret
int3
xor
pop
push
aam
nop
js
sub
cmc
cwtl
xor
jmp
mov
arpl
mov
dec
or
pop
and
xorb
push
mov
in
lea
std
lret
jmp
pop
ja
ja
rcrl
cmp
movsb
or
mov
ja
sub
aas
mov
out
outsb
jmp
xchg
sar
cmp
add
mov
std
jo
xlat
stos
loope
or
jp
or
ljmp
lods
movsl
xor
sub
cmp
inc
in
push
sub
pushf
and
dec
lret
xchg
test
lret
enter
fistl
icebp
fdiv
int3
xchg
mov
popf
or
pop
adc
xchg
push
fimull
push
add
out
sub
ljmp
pop
enter
cli
les
jns
js,pn
jmp
or
xor
push
fdiv
scas
cli
in
mov
mov
leave
cmc
stos
jbe
fnstenv
inc
mov
dec
push
movsb
loopne
movsb
or
adc
mov
aaa
sbbl
add
outsl
mull
es
cmpsb
movsl
movsl
in
jecxz
push
inc
ss
lret
sbb
push
push
xor
pop
rcll
sbb
push
sbb
adc
fs
jecxz
add
mov
leave
xchg
insb
shrb
push
pop
pop
subl
icebp
aam
sbb
cmpb
orl
ds
aaa
xchg
int3
add
mov
cltd
pop
repnz
mov
sub
cwtl
xor
adc
mov
dec
in
and
cmp
rcrl
dec
cli
mov
add
dec
repz
mov
xchg
inc
and
fidivrs
xchg
into
and
stos
cmp
pusha
sbb
outsb
js
lock
mov
add
sti
mov
testl
sub
jp
pop
test
jecxz
hlt
mov
ret
adc
add
popa
out
mov
push
or
mov
mov
nop
out
fistl
in
cmp
or
gs
cmp
mov
ja
add
shlb
xor
sahf
jbe
adc
cli
mov
mov
addr16
test
and
aaa
add
iret
mov
jmp
and
lahf
and
xchg
sbb
jge
mov
in
js
lret
in
dec
dec
mov
arpl
cmpsl
pop
in
mov
sub
in
iret
jg
jne
daa
push
in
xchg
fwait
lahf
movsl
jae
inc
adc
call
mov
xchg
mov
add
mov
cwtl
sti
or
lds
lods
iret
arpl
test
inc
mov
imul
mov
shll
pop
nop
xchg
cmc
mov
or
dec
sub
mov
xchg
push
addl
inc
xor
imul
imul
fwait
adc
and
mov
pop
arpl
pop
pop
mov
adc
mov
cmp
and
pop
cmc
loop
lcall
sar
xor
je
dec
pop
xchg
add
dec
sbb
int
or
arpl
loop
push
sbb
sub
or
cmpsl
jmp
dec
push
shlb
push
gs
mov
and
mov
fldl
pop
shlb
outsb
mov
cmp
sbb
pop
notl
xchg
jbe
cmp
or
pop
in
sbb
aad
xchg
inc
cld
jbe
or
popa
dec
je
stc
test
mov
cmpsb
pop
xchg
mov
addb
sub
ffreep
clc
imul
arpl
pushl
pop
mov
fnstenv
push
xchg
mov
jecxz
enter
inc
mov
and
repz
out
and
ljmp
mov
in
ret
aaa
mov
xchg
pop
lods
cld
fsubr
in
shll
dec
lahf
or
cltd
lock
mov
xor
je
fs
bound
fwait
dec
jl
pop
inc
js
mov
mov
xor
pop
cmpsl
jge
lods
add
or
jno
adc
out
push
mov
pushf
push
imul
sbb
repz
test
pop
int3
int
pop
jge
cld
lahf
cmpsl
mov
negl
pop
hlt
xchg
sbb
xchg
lahf
into
dec
das
cmpsb
or
jecxz
mov
sub
push
mov
and
push
arpl
mov
jle
outsl
popf
testb
sub
and
scas
cmpsl
mov
mov
push
add
adc
and
lret
nop
add
cli
cld
dec
mov
dec
call
jle
add
das
and
ljmp
lds
or
jge
daa
loop
testb
jae
mov
add
out
and
jo
cmc
and
push
popa
mov
mov
xchg
aam
pushl
lahf
jg
jb
gs
mov
bound
call
adc
dec
in
lods
movsb
xchg
jl
adc
flds
aas
jp
fldenv
and
outsl
popf
jae
pop
inc
pop
adc
leave
loop
xor
dec
test
or
pop
rol
inc
xchg
pop
ret
out
lods
push
js
orb
pop
clc
adc
cmp
inc
lcall
xchg
fdiv
cmp
shlb
cmpsb
shlb
out
mov
add
adc
push
inc
xlat
and
fwait
and
testb
xchg
nop
stc
out
sub
sbb
in
xchg
or
adc
xchg
insb
cmp
shrb
adc
cmp
xorb
mov
dec
and
jg
mov
popf
rolb
repnz
mov
cmpsl
jmp
sbb
loope
sub
xor
inc
sub
or
cmp
mov
xchg
lcall
cmpsb
arpl
and
jns
jecxz
pusha
in
jp
cmp
adc
sbb
insb
lcall
pusha
jp
repz
mov
sbb
mov
push
or
or
or
dec
inc
ljmp
jge
or
pop
push
add
mov
push
addr16
push
xchg
push
add
lcall
inc
sbb
mov
sub
jmp
divb
adc
fwait
xchg
lret
jle
movsl
and
push
xor
sar
mov
int
pop
jae
cmp
adc
clc
push
popf
sub
mov
jle
out
call
mov
jp
mov
movsl
lret
add
sub
xchg
mov
insl
ret
out
push
pop
xor
js
out
mov
idivb
cmp
ficoml
mov
decb
fstpl
add
adc
mov
rol
sub
popw
repnz
inc
mov
aam
into
dec
push
or
cmpsl
push
cmpsl
cmp
add
shll
push
or
ficompl
mov
rorl
sbb
sub
test
lods
mov
fwait
xchg
add
out
faddl
jmp
fstp
outsb
pop
inc
aas
or
pushl
xor
roll
push
sbb
sbb
push
xchg
inc
rcr
push
fs
mov
xor
cmp
movsl
loope
aas
cmp
das
aad
imul
or
mov
es
lret
sub
mov
add
out
pushf
xor
decl
loop
push
jl
pop
pop
frstor
push
mov
xchg
push
sahf
out
cli
shl
outsb
mov
jbe
and
sub
or
push
js
or
add
and
inc
cwtl
scas
repnz
jge
jl
dec
push
xchg
mull
mov
add
call
cld
adc
push
mov
shrb
push
push
lods
ficomps
scas
bound
jns
mov
pop
shl
and
gs
fsubrl
iret
insb
repz
js
push
cmp
xchg
popa
js
push
loope
and
imul
xchg
scas
pop
adc
xor
xor
scas
mov
and
testl
addr16
push
sbb
lahf
pop
mov
or
pusha
movsb
loop
mov
std
mov
jmp
inc
mov
xor
lock
inc
jo
clc
test
adc
repz
mov
or
lret
insb
xchg
sbb
pushf
lahf
dec
pushf
and
fistps
xor
add
rol
pushf
lock
pop
jnp
jmp
pop
mov
sbb
loopne
sbb
dec
push
fisttpll
or
inc
sub
push
arpl
push
xor
dec
lods
mov
aam
jnp
insl
inc
std
in
rcrb
mov
or
pop
xchg
jecxz
jecxz
push
cltd
mov
sbb
xlat
enter
and
cmp
imul
push
clc
xchg
pop
push
repz
loope
fimull
repz
lock
std
js
fmulp
cwtl
into
les
jns
out
fs
add
jl
xchg
adc
inc
scas
enter
pop
aas
cmp
mov
inc
push
aaa
ret
ds
push
enter
mov
movsb
xchg
sti
fcmovnu
xor
mov
xchg
mov
jno
cltd
bound
dec
es
test
xchg
lahf
cmp
ret
rcll
idivb
sbb
cmp
jecxz
xchg
cltd
push
sub
mulb
xor
sub
mov
cmpsl
xchg
data16
add
loopne
frstor
dec
aaa
outsl
sbb
lret
movb
cld
xchg
ret
out
mov
dec
sub
loop
mov
sbb
fwait
pop
pop
mov
out
ret
aad
je
mov
ret
ret
ss
dec
loop
lret
shl
xor
out
sub
dec
sar
in
lahf
and
dec
fucomp
ret
adc
ss
call
stos
xchg
je
shrl
cmovne
aaa
and
popa
andb
imul
cmp
enter
loope
cld
popa
cmp
sbb
add
jl
pop
dec
popa
inc
xchg
pop
cmp
dec
outsb
pop
dec
je
lds
mov
fisubs
dec
enter
push
aaa
negl
out
lds
xor
push
movsb
xor
movntq
inc
jge
jo
outsl
pop
push
insb
insl
lods
out
sahf
lahf
aad
popf
je
inc
arpl
jb
sub
inc
arpl
shl
movsb
daa
es
xlat
adc
dec
inc
mov
in
lahf
std
lds
sub
pop
sarl
inc
sbb
lcall
xor
adc
data16
cmpsl
xchg
loop
les
xor
pop
add
pusha
sti
pop
dec
jmp
imul
mov
sahf
daa
in
ljmp
add
adc
pusha
cli
xor
adc
pop
in
or
std
out
aas
loope
int3
scas
ljmp
add
or
jecxz
jns
mov
enter
and
cli
aaa
imul
mov
sub
lcall
mov
sbb
pop
mov
pop
arpl
lds
adc
fcompl
inc
pop
inc
xor
pop
and
addl
or
test
dec
jg
xlat
lods
mov
lcall
mov
sub
sahf
xor
jns
mov
xor
inc
xor
std
repnz
and
jmp
push
inc
and
jmp
push
je
outsl
xor
sbb
rorl
xlat
not
jo
mov
push
dec
sub
pop
cpuid
jne
add
pop
inc
fistl
inc
imul
cltd
push
div
in
dec
mov
and
ss
fimuls
sub
addb
aaa
mov
dec
push
adc
std
scas
pop
pop
das
addb
push
fnstsw
and
adc
pop
push
sbb
cli
fsubl
dec
mov
push
mov
das
pop
clc
mov
out
lods
iret
cmp
aas
out
push
and
xlat
fmuls
push
add
adc
xchg
das
xchg
xlat
push
push
xor
mov
xchg
out
xchg
xchg
sub
ljmp
push
pop
das
mov
push
addr16
idiv
popa
rcrl
mov
stos
mov
pop
mov
jg
mov
push
cmpsb
bound
cmp
or
or
fiadds
or
addl
into
jle
xor
pop
mov
mov
movsl
or
and
out
or
cld
sahf
rcrb
pop
sbb
sub
inc
repnz
jg
jmp
insb
jmp
fimuls
test
inc
cmp
imul
mov
pop
sbb
xor
ret
int
rcrl
add
out
bound
jnp
jne
das
cli
fucomp
popa
sub
mov
mov
call
jp
sub
test
xchg
add
fldl
stos
dec
xor
xchg
cwtl
fcmovbe
or
mov
xor
pop
xlat
dec
int
xor
sbb
lods
das
leave
mov
xlat
nop
mov
shlb
cmc
notb
jne
repnz
pop
jle
sub
xchg
lcall
fiadds
inc
into
sub
cld
adc
xorb
lods
loop
xor
add
sub
movsb
jl
addr16
push
push
jno
dec
aad
or
aad
lds
subl
fmull
dec
jmp
cvtps2pi
cmp
push
sub
out
cs
pusha
pushf
pop
mov
cmpsb
mov
cmp
jne
aas
or
jmp
out
cmp
int
jecxz
mov
push
push
ds
or
xchg
sbb
mov
xor
cmp
jge
sub
mov
jne
push
and
into
cld
push
pop
loopne
dec
mov
popa
cmp
outsl
je
mov
xor
xor
and
iret
jg
movsb
or
out
mov
addb
popa
cmp
fcoml
lret
xchg
cmpsb
ljmp
js
inc
and
stc
in
fwait
data16
popa
sbb
movsl
mov
les
push
pop
jecxz
xor
movsb
push
xor
jle
lcall
lea
pop
imul
push
imul
mov
mov
pushf
addl
inc
repnz
cmp
or
and
or
sub
out
push
lods
xchg
enter
mov
jmp
xchg
mov
cmpsb
cmp
loope
iret
mov
push
cmp
cmp
sahf
out
and
mov
test
sarb
adc
in
idivl
cmpsb
sub
mov
push
sub
ret
or
shlb
negb
mov
cmp
fwait
out
sub
pop
push
dec
pop
xchg
cmpsb
notl
inc
mov
or
negb
pop
sbb
and
arpl
ss
testl
push
or
inc
test
ror
mov
mov
shll
sbb
mov
mov
fwait
push
adc
mov
dec
jae
hlt
fstl
sbb
jmp
mov
ror
imul
sbb
adc
jecxz
popf
xchg
or
aad
pop
xchg
ror
adc
movsb
out
push
or
js
jecxz
movsl
loope
loop
jns
fsubrl
sti
mov
repz
loopne
pop
in
sahf
lds
outsb
sbb
pop
cmp
jecxz
icebp
adc
inc
xor
pop
ds
imull
xor
rcrl
mov
and
and
fmuls
cmp
pop
cmc
popf
jnp
pop
out
sub
cld
add
out
cmpsl
add
or
mov
fistpll
fsubs
mov
ljmp
add
sub
in
sbb
mov
sbb
adc
or
int
daa
xor
add
sbb
sbb
or
mov
adc
mov
push
hlt
push
lret
scas
addr16
movsl
push
nop
jmp
jp
dec
mov
fwait
rorb
cmp
jge
mov
aas
subl
outsb
sub
mov
sbb
iret
dec
jmp
mov
sub
test
sub
fstpt
outsl
pop
movsl
xchg
mov
push
insl
icebp
dec
inc
arpl
ljmp
in
push
xor
cs
lock
jmp
into
movsl
outsb
lret
std
cmp
xor
into
jae
ds
dec
data16
or
xchg
and
int3
rcrb
inc
insb
mov
jle
repz
cmp
cmp
mov
loop
cmp
push
adc
xorb
jge
aaa
lods
cmpsb
adc
adc
xor
sub
jb
clc
test
fimull
rcr
icebp
pusha
push
int3
mov
lock
or
ficoml
call
mov
out
pop
xchg
dec
jl
fldenv
mov
aaa
mov
fnstenv
and
adc
cwtl
adc
std
insl
adc
xor
cli
hlt
and
movsl
pop
shl
decl
adc
dec
mov
cmpsl
pop
test
lds
jbe
ss
shl
clc
bound
dec
lea
jg
clc
dec
and
popa
cmp
shl
and
push
ja
fisttpl
cltd
jnp
and
add
addr16
dec
jns
repnz
nop
inc
pop
sub
cmp
xor
dec
xor
insb
imul
or
mov
popf
jle
cmpl
jo
in
stc
mov
mov
out
jg
sbb
or
orl
mov
filds
mov
lahf
inc
pop
adc
test
jecxz
ret
mov
pop
loope
jae
popf
jg
dec
jae
lcall
jo
xor
cltd
and
test
jle
sbb
adc
call
push
pop
data16
scas
inc
adc
push
negl
rorb
push
insl
lods
rorl
stc
xorb
gs
lahf
mov
int
pop
mov
test
push
mov
pop
inc
cli
movl
pop
negl
mov
xlat
cs
leave
inc
aam
xchg
add
jb
adc
dec
into
mov
roll
test
orl
or
mov
xor
mov
cmp
popf
int3
outsl
sbb
push
mov
aaa
scas
stos
sub
push
inc
pop
pop
sbb
fdiv
clc
xchg
adc
clc
xor
daa
push
rorb
imul
imul
iret
push
push
fdiv
or
and
out
or
scas
popf
imul
js
add
jmp
jg
loopne
xchg
into
mov
cmpsl
stos
pushf
js
and
push
leave
sbb
mov
mov
aas
rolb
mov
orb
cli
fiadds
test
sbb
mov
cwtl
jge
xchg
pop
cmp
mov
push
data16
sub
cwtl
dec
dec
pop
xor
movsl
lock
inc
inc
inc
iret
cmp
aad
out
jl
pop
pop
jge
and
cs
or
mov
mov
adc
rcrl
es
push
and
jecxz
gs
mulb
movl
jnp
jmp
xchg
in
sbb
arpl
and
inc
adc
pop
daa
sbb
test
das
push
sub
push
fwait
mov
or
inc
dec
dec
push
mov
fsubp
xor
or
adc
jb
add
dec
in
clc
fsubrs
dec
pop
jecxz
lret
loope
lods
ret
in
pop
and
xchg
daa
xchg
sbb
xlat
rorb
xor
cmp
mov
pop
sbb
push
jno
mov
jne
pop
iret
mov
sub
lods
adc
dec
mov
xchg
dec
and
add
inc
inc
adc
xor
popa
call
outsl
xor
outsl
push
aaa
movsl
add
sub
pop
std
scas
popa
dec
or
cmpl
imul
cmpb
mov
mov
insb
ret
add
inc
jno
mov
leave
sbb
idivl
cld
pop
jecxz
fsub
xor
xor
rdtsc
inc
fcompl
sahf
sub
cmp
add
cmp
cmp
test
lods
data16
test
in
stos
shll
push
sbb
cmp
add
push
rorl
fisttpll
mov
lea
out
lds
inc
mov
pop
inc
mov
jecxz
hlt
push
repnz
ss
xchg
pop
push
pop
sub
cli
ret
pop
mov
xchg
push
movb
scas
push
incl
jo
push
or
mov
aam
pop
pop
out
into
ret
rorl
sbb
mov
adc
scas
mov
dec
test
test
push
cmp
lods
and
mov
xchg
pop
mov
cmp
cmpsl
movsb
pop
or
or
jns
jo
or
inc
mov
jle
or
dec
xor
push
sahf
mov
jne
inc
mov
hlt
bound
jne
sbb
xor
mov
xchg
push
mov
cmp
loopne
insb
adc
jmp
shrl
adc
enter
xor
mov
push
mov
inc
ret
addr16
sbb
scas
enter
mov
outsl
cld
repz
sub
sbbl
test
sbb
test
out
pop
mov
movsb
push
or
into
fisttpl
das
adc
lock
dec
call
fstp
dec
pop
push
ret
ja
rcrb
std
xlat
dec
jl
xchg
fstps
movsb
rorb
stos
bound
imul
nop
arpl
in
adc
icebp
fsubrs
into
into
adc
out
mov
stc
xor
xchg
mov
addb
mov
add
int
inc
testl
into
loopne
std
loop
add
jbe
je
imul
int3
iret
not
xorb
cmpsb
or
cmpsl
pushf
in
fstpt
pusha
jge
dec
mov
or
cmpsl
pop
cmp
aam
ljmp
stos
pop
outsb
shlb
sti
xchg
out
inc
daa
in
movsl
test
jge
mov
mov
test
outsl
loop
test
mov
sbb
lods
rcr
sub
jg
bswap
mov
fldl
imul
or
lods
lret
dec
and
xchg
add
xchg
movsb
adc
in
loopne
stos
out
aad
and
mov
jae
mov
rcrb
dec
test
mov
pop
ret
mov
pop
pop
ds
or
mov
out
lds
jno
mov
sub
mov
adc
ret
enter
shll
mov
mov
lret
jl
repnz
stos
xor
movb
xor
int
xchg
jo
ja
out
xor
ljmp
call
fldln2
divl
roll
lods
add
cmp
cmp
add
adc
mov
cld
push
pop
mov
jnp
lods
repnz
xor
imul
dec
lock
jp
outsl
jmp
stos
movsl
pop
lods
test
je
pusha
iret
cmp
outsl
mov
or
mov
inc
xchg
pop
dec
ret
jns
cmp
sub
stos
pop
and
fbld
pop
sub
cwtl
mov
inc
loopne
orb
arpl
rcr
leave
ror
cwtl
les
mov
outsb
fdiv
enter
aad
scas
pusha
insb
mov
mov
xchg
cmc
xor
stos
fidivl
lahf
and
jmp
push
jle
jecxz
inc
push
push
mov
and
scas
pop
pop
mov
jo
xchg
fnstsw
stc
sub
dec
adc
push
flds
fldcw
outsb
sub
lahf
add
aaa
jbe
call
stc
inc
imul
jns
sahf
mov
lret
sbb
arpl
mov
adc
subl
dec
adc
andb
mov
das
sbb
imul
jecxz
cs
add
pop
mov
pop
sub
jg
mov
cwtl
push
mov
stos
movsl
iret
sbb
add
popf
stos
orl
insl
jo
sahf
icebp
mov
and
dec
fcmovne
ficomps
sub
mov
or
cltd
push
js
out
cwtl
adc
mov
and
loop
xchg
inc
das
jne
sbb
xchg
pop
scas
push
lret
xchg
dec
or
les
cmpl
adc
mov
movsl
cmp
test
mov
mov
push
in
lcall
sbb
fiadds
mov
hlt
cmc
gs
cmp
repz
icebp
out
mov
lcall
int3
and
pop
insb
bound
out
dec
lret
jbe
inc
cli
mov
mov
ljmp
and
mov
fisttpl
daa
lea
into
shrb
lea
push
sti
divl
pop
add
lods
mov
fs
and
scas
ror
std
lods
stos
or
nop
or
fdivrl
cmp
psubq
addr16
xorl
xor
rclb
cwtl
xchg
mov
add
push
xchg
push
jmp
aas
sub
sub
movsl
mov
test
ret
popa
push
xchg
jae
popa
jmp
nop
mov
lret
enter
cwtl
sub
mov
pop
mov
int
push
sub
outsl
insb
outsb
pop
mov
cmp
push
por
loop
outsl
pop
cmp
add
lods
xchg
push
push
xchg
lcall
scas
xor
es
sub
sub
repnz
popf
sbb
add
cmp
jmp
outsb
in
xor
lock
repnz
gs
jge
push
adc
in
arpl
sbb
xchg
js
test
mov
imul
cli
mov
insl
add
repnz
loop
add
inc
sbb
test
mov
mov
in
jmp
mov
das
fnstenv
mov
imul
push
popa
jno
data16
and
xor
test
jle
push
push
push
mov
push
dec
adc
jecxz
test
jg
inc
mov
stos
xchg
adc
addr16
int3
fs
cmp
adc
jle
add
loopne
mov
loopne
pop
negl
insl
sub
cmp
cmp
sub
loopne
add
push
jp
lret
and
pop
aam
jl
in
nop
ret
cmc
jmp
fcompl
and
sti
pop
xchg
sarb
sahf
xchg
arpl
fistps
cmp
int3
cmp
cmp
inc
stos
add
cmp
loopne
cmpsl
bnd
lods
daa
cmp
aaa
rcrl
aaa
mov
rcrb
adc
not
outsl
test
and
xor
inc
popf
int
dec
pop
sub
mov
pop
lahf
pop
mov
jo
inc
dec
aaa
add
lea
xor
cmp
add
mov
push
push
hlt
fimull
cmp
mov
mov
push
xlat
mov
mov
mov
mov
mov
xorl
adc
push
sub
pusha
mov
stos
xchg
cmp
xlat
lods
inc
mov
mov
xor
lds
mov
cmp
aam
jae
inc
ficoml
and
push
outsl
imul
cmp
imul
in
inc
inc
pop
mov
inc
fisubrs
mov
out
flds
sub
cld
xchg
decl
dec
push
xlat
test
out
cmp
mov
repnz
mov
push
fsts
rcrl
popa
cs
pop
dec
xorl
repnz
sbb
loop
cmp
lods
data16
jne
adc
sub
mov
xor
jge
imul
xchg
sbb
adc
mov
dec
and
inc
cmp
xchg
jp
sbb
dec
xchg
dec
xchg
push
mov
sbb
mov
repnz
inc
xor
jl
jns
fistl
in
fdivs
jnp
repnz
and
mov
fidivs
or
lret
loope
and
sbb
or
xchg
or
aam
or
jns
insl
call
fldl
mov
lahf
filds
adc
mov
pop
dec
icebp
hlt
cmp
out
cmp
xchg
cmp
or
push
jnp
rcll
and
rcrl
aaa
sub
adc
mov
mov
push
out
push
cli
fldl
idivb
jmp
pop
aam
mov
xchg
mov
mov
mov
jbe
xchg
mov
call
inc
pusha
pop
xchg
cmc
inc
and
push
leave
mov
inc
mov
cmp
adc
test
sbb
scas
sbbl
test
into
xor
loopne
cmpsl
sbb
xchg
rol
jbe
and
mov
or
outsl
cmp
sti
popf
lods
fwait
xchg
lock
jecxz
mov
inc
inc
xor
adc
jle
mov
mov
popf
dec
js
or
bnd
ret
es
scas
js
inc
lods
insl
dec
inc
loopne
mov
push
mov
xchg
pushf
movsb
xor
dec
add
aad
xor
sub
leave
cwtl
jge
out
movsl
jmp
mov
mov
bound
icebp
test
test
test
cmp
and
mov
dec
icebp
daa
pop
jp
movsb
jg
jmp
inc
jns
shrl
js
adc
push
mov
and
sub
sub
testb
adc
data16
clc
testl
mov
imul
pop
cmp
loop
dec
in
insb
fdivrl
cwtl
mov
in
sti
nop
dec
stos
call
loope,pt
imul
cmpl
pop
and
jp
mov
xchg
sbb
jne
int3
cmp
jbe
and
jmp
fbstp
mov
lock
pop
mov
or
out
fiaddl
jo
iret
pop
rcrb
or
inc
pop
mov
clc
aad
lods
add
test
gs
subl
or
push
out
cmp
fisttpl
fidivl
xchg
lock
ljmp
mov
lahf
jmp
dec
rcrb
inc
sbb
push
ficomps
pop
ret
lahf
rolb
mov
rolb
lea
mov
lret
rorb
sub
lahf
lods
adc
push
dec
daa
cmp
aam
xor
scas
sub
nop
sahf
nop
shlb
and
mov
jo
mov
jecxz
push
push
pop
aas
cmp
lock
ret
push
movsb
cli
frstor
xor
js
filds
daa
loop
aas
mov
mov
mov
jge
sub
std
cmpl
popa
dec
in
ficoml
xchg
lea
inc
or
out
popa
push
test
dec
sub
jmp
pop
and
xchg
pop
sub
and
inc
outsb
in
or
leave
jbe
or
call
inc
sbb
cld
imul
jl
pop
out
jl
lock
orl
rorl
push
xchg
add
les
enter
pop
adc
pop
sbb
mov
mov
dec
sub
scas
aaa
pop
jp
push
cmpsb
dec
imul
sbb
jle
ja
or
or
insb
inc
bound
ret
imul
jmp
out
pop
mov
cli
pop
scas
ret
cmpsb
test
in
xor
out
jmp
or
dec
mov
das
mov
push
add
cmp
xchg
pop
pop
and
pop
sub
push
adc
pop
cwtl
hlt
mov
mov
add
lret
stc
movsl
sub
mov
inc
dec
jl
inc
pusha
test
jmpw
dec
loope
or
shlb
pop
ror
mov
iret
fcoml
pop
sbb
inc
inc
fcoms
push
push
pop
sti
bound
and
xchg
mov
jo
dec
in
mov
mov
jle
cmp
and
jmp
int3
xchg
mov
mov
and
xchg
pop
lret
inc
cmp
pop
imul
test
push
or
xor
xchg
mov
push
mov
out
pop
addl
cmc
cmp
or
inc
int
mov
xor
adcb
mov
scas
jle
push
shll
lock
and
xchg
push
cmpsb
stos
mov
mov
mov
fsubp
adc
in
jge
xchg
scas
jns
xchg
mov
jnp
adc
xchg
insb
pop
test
mov
lret
fwait
dec
out
lods
jmp
pop
in
loope
adc
cld
fisubrs
push
ljmp
dec
push
xor
les
xchg
push
mov
mov
cmp
nop
push
fstp
jo
add
mov
pop
ret
xchg
pop
sub
aad
xchg
push
fcoml
data16
pop
pop
fsub
mov
rcrl
mov
popa
push
adc
mov
ss
cs
cli
xchg
xlat
or
adc
adc
icebp
lret
xchg
outsl
addr16
mov
mov
in
push
dec
mov
xlat
in
das
lret
mov
add
adc
insb
mov
ret
sub
push
leave
sub
jle
inc
rcrb
pop
sbb
push
data16
fsts
dec
movsl
arpl
mov
sar
dec
out
and
xchg
je
loop
mull
enter
loopne
sbb
xchg
mov
push
sbb
push
sbb
add
insb
xor
jo
cli
aad
push
inc
mov
cmp
push
and
stc
test
out
pop
xor
stos
lret
or
push
insb
fistl
sbb
cltd
stos
cmpsl
aad
jge
sbb
cmp
mov
jge
mov
cwtl
xchg
fisubrs
jbe
sbb
xor
enter
movsb
sbb
lea
xor
rcrb
xor
stos
bound
xchg
mov
shrl
imul
fidivrl
adc
mov
leave
push
cwtl
push
in
aas
mov
jl
mov
push
xchg
mov
xchg
je
xlat
pusha
pop
and
cli
jb
aad
in
mov
mov
fstpt
fptan
and
pop
xchg
ja
and
and
mov
push
insl
jo
clc
cmp
leave
push
mov
sbb
imul
mov
mov
xchg
inc
ret
lods
xor
lods
lea
pop
pop
xor
pop
and
push
ds
xor
push
loopne
jno
mov
dec
in
icebp
jge
adc
jns
outsl
int
mov
push
rolb
stos
sub
scas
mov
xorl
in
je
sub
jbe
stos
inc
fs
lods
into
popf
gs
scas
scas
cmp
test
js
in
daa
or
xchg
insl
xor
fisttps
addr16
mov
inc
scas
sub
inc
adc
xchg
xchg
enter
push
int3
push
faddl
jmp
out
inc
fstpl
mov
jns
jno
xor
lcall
fsubrl
lcall
mov
mov
lahf
insb
cmp
les
pop
mov
scas
popa
and
jae
into
ror
test
fnstenv
fisttps
gs
sub
shlb
nop
push
sbb
movsl
mov
push
imul
xor
jge
pop
lods
or
ljmp
addr16
aad
mov
outsl
pop
xchg
and
adc
addr16
xor
sbb
inc
push
fprem
pop
sub
stos
xlat
repz
push
jp
mov
cmp
push
add
aas
push
aaa
mov
neg
in
inc
arpl
hlt
hlt
xor
aam
dec
sub
and
and
jg
ror
int3
lods
dec
pushf
sbb
jno
pop
movsb
xor
jge
xor
mov
in
rcl
out
in
pop
xor
in
int
lret
xchg
movsb
scas
outsl
jmpw
ss
pop
lahf
push
pop
test
xchg
push
inc
adc
xchg
shlb
sahf
cwtl
cmp
push
push
es
adc
cmp
ds
stos
dec
aas
sti
movsl
push
mov
aam
les
clc
jae
icebp
jmp
lods
cmc
sbb
test
mov
push
lods
or
sbb
mov
inc
ds
lret
pop
inc
pop
repnz
mov
ret
and
lret
imul
sub
dec
mov
loop
scas
std
mov
sub
dec
in
test
shrb
dec
fs
repz
in
mov
mov
cmp
xchg
lcall
pop
jno
outsb
sub
mov
fistps
dec
bound
pop
inc
aam
mov
sub
mov
jo
add
mov
in
push
es
inc
test
mov
in
in
sub
mov
sub
and
xchg
in
xchg
mov
sahf
cmp
sar
popa
push
push
in
dec
das
xchg
ja
cmp
push
xor
push
add
sarb
pcmpeqb
int
jp
xchg
test
bswap
int3
out
popf
xchg
rep
sarb
popf
inc
lahf
dec
negl
pop
int3
repnz
mov
jb
fcmovnb
adc
and
subl
jp
inc
push
adc
pop
insb
or
add
bound
repz
mov
mov
addr16
inc
xor
sub
sbb
or
push
add
in
nop
sbb
popf
aam
ljmp
insl
adc
mov
loop
mov
clc
dec
mov
or
jo
ficomps
add
xor
xchg
pop
notb
or
push
movsl
push
sbb
ret
sbb
adc
aaa
pop
jp
insl
jmp
inc
inc
cs
mov
repnz
aaa
adc
inc
es
lock
cld
ret
rcrl
push
or
push
shr
ja
fistps
push
aam
pop
mov
rol
dec
out
inc
fcmovne
push
mov
mov
aaa
mov
data16
idivl
daa
xlat
bound
mov
mov
sub
cmpsl
push
ja
lret
mov
outsb
xor
cmp
nop
cmpsl
lods
lea
ljmp
test
sahf
push
cmpsb
xchg
xlat
hlt
and
mov
js
jb
setae
sub
mov
adc
dec
lock
xor
loopne
sub
mov
mulb
sbb
loopne
sbb
cmp
mov
dec
push
push
int3
xchg
sahf
and
sarl
sub
push
lods
lea
dec
xor
movsb
inc
mov
cld
add
outsl
jmp
lea
pop
jbe
mov
gs
loop
testb
cli
or
dec
push
imul
push
pop
dec
push
mov
hlt
push
and
hlt
je
in
jg
pop
sub
pop
add
lcall
inc
dec
xlat
fs
das
jecxz
outsl
jns
xor
dec
adc
mov
xor
iret
lahf
repnz
adc
mov
mov
mov
lock
inc
jno
lock
sbb
lret
fldcw
jp
pushf
aas
out
shlb
xchg
ret
mov
xchg
popf
mov
and
rclb
inc
sub
and
popa
mov
pushf
arpl
mov
push
repz
dec
movsb
jnp
jle
jne
mov
push
inc
stc
mov
adc
or
xchg
mov
add
lods
shlb
jg
test
pop
adc
lahf
sbb
dec
add
lahf
xor
adcl
jo
inc
add
rolb
scas
adc
xchg
jo
xchg
out
scas
mov
pushf
push
ret
sub
adc
movups
push
aad
mov
ss
outsl
loop
xor
jb
int3
xchg
xor
add
jmp
cmp
lcall
xchg
addr16
fnstcw
jl
jl
mov
mov
js
out
movsb
hlt
dec
xor
scas
mull
cmpsl
ja
mov
daa
cmpsb
push
jne
inc
sub
or
leave
mov
sbb
movsb
lcall
cmp
push
aas
add
ret
mov
test
imul
and
ljmp
movsb
jecxz
cmp
stos
movsb
xor
add
push
scas
xlat
fadd
dec
test
pop
negl
push
mov
push
fdivrl
test
cmpsl
mov
adc
and
sub
ds
push
or
sub
xchg
and
mov
popf
xchg
push
jae
lret
outsb
ss
add
test
mov
sub
pop
mov
add
sbb
pop
jecxz
pop
mov
dec
inc
pop
sti
in
js
lret
cltd
pop
lcall
sbbb
cli
xor
push
loop
jmp
sahf
out
pop
xor
push
dec
clc
push
popf
mov
adc
pushl
or
mov
mov
sub
pop
mov
jno
pop
jle
xor
test
adc
mov
imul
push
push
test
cmpb
dec
out
int3
fwait
mov
jae
pop
sbb
ret
xchg
aam
inc
inc
lea
pop
testl
loopne
dec
mov
xor
aam
ljmp
js
jnp
std
imul
push
call
lcall
cmp
rorl
out
loop
jmp
pop
aas
xchg
inc
dec
cs
sbb
leave
in
xchg
add
cmp
dec
nop
daa
lods
xchg
adc
jecxz
test
sahf
pop
push
dec
pop
pop
rclb
lods
fsubrs
adc
rcll
arpl
pusha
les
lods
test
cmpsl
out
dec
mov
jmp
xor
jmp
mov
sbb
pop
cli
xor
in
addb
fwait
in
sbb
xchg
lret
or
mov
in
fistl
push
bound
into
dec
movsl
popf
mov
xor
mov
mov
xchg
out
bswap
jmp
mov
dec
lcall
sub
fiadds
jnp
leave
test
icebp
fimuls
es
cltd
in
mov
add
mov
jge
test
andl
or
dec
push
push
loopne
mov
cmpsl
sbb
or
fistl
bndldx
mov
mov
loop
cltd
aam
jg
je
imul
adc
mov
push
frstor
ljmp
fisubrs
inc
pop
cmpsl
jo
fisttps
jae
int
push
sub
mov
test
ficoml
aad
lahf
mov
inc
rolb
outsb
fs
into
jno
pop
in
push
arpl
in
stc
mov
xchg
xor
out
outsl
pushf
push
dec
aas
imul
push
cmp
push
mul
mov
mov
jns
and
rorb
pop
and
stc
cmpsl
mov
movsl
sub
aam
pop
mov
js
cmp
mov
out
mov
test
mov
insl
push
inc
cmpsb
int3
sbb
and
popa
pop
loopne
lret
addl
mov
adc
cmc
sbb
jno
idivl
xchg
fstpt
push
fcomps
xchg
lds
test
jmp
jl
scas
js
jae
pop
ss
leave
in
in
jp
add
movsb
push
xchg
pshufw
ret
adcl
sub
lret
lods
fsubs
fsubrp
and
cmp
xchg
test
aaa
mov
inc
adc
jne
es
jno
gs
jecxz
arpl
je
test
push
xchg
fiadds
lock
cmp
outsl
int3
push
jp
dec
sub
lds
jo
mov
pop
and
dec
or
or
inc
mov
xchg
cwtl
dec
adc
xchg
or
fbld
setle
test
add
aaa
xchg
xchg
inc
push
mov
cmp
sbb
dec
jp
add
cmp
ss
and
das
push
mov
cmpsb
test
cmpb
dec
jge
mov
pop
push
xlat
xchg
add
iret
ret
dec
and
mov
rorb
xchg
pop
adc
xchg
cmp
js
enter
xlat
add
push
inc
rcrb
cmp
pushf
inc
add
test
inc
popf
jg
push
push
scas
int3
mov
mov
dec
outsb
imul
cmp
cmpsb
sbb
out
ficomps
xchg
push
dec
es
dec
mov
ds
push
ficomps
mov
cmpsb
add
int
std
or
call
or
cmp
xchg
xchg
adc
mov
sbb
jg
scas
push
adc
sub
aam
lds
jmp
xchg
sub
or
imul
mov
mov
mov
jbe
dec
lcall
add
xor
xchg
add
sub
mov
or
sub
dec
lret
push
xchg
insb
es
ja
jg
mov
xchg
iret
inc
scas
xor
clc
jnp
dec
xchg
mov
popa
xchg
shll
cmp
jge
aam
fsubrl
inc
xlat
int3
fistl
cld
add
stc
dec
mov
lret
gs
sub
cmp
cmpsl
loope
in
rcrl
xchg
ja
test
mov
pop
xchg
lcall
xor
movsl
sbb
test
xchg
xchg
xor
mov
or
es
into
dec
and
rclb
out
dec
jmp
or
cmpsl
sub
imul
adc
sub
or
mov
dec
iret
pop
xor
clc
je
sarb
gs
push
fnsave
dec
test
jb
push
call
inc
xchg
sbb
or
push
loopne
or
jle
inc
gs
cs
sbb
in
jnp
imul
iret
int3
mov
mov
mov
or
loope
sbb
frstor
jmp
in
and
out
xor
xor
cmp
mov
lea
loop
pop
outsl
inc
mov
mov
jo
jb
dec
ljmp
lret
movsl
imulb
iret
je
nop
inc
pop
andps
out
je
xchg
cmpsl
sub
xchg
mov
fstl
int3
rcll
jno
jecxz
lods
insb
cmpl
adc
adc
clc
outsl
les
xorb
int
loopne
add
mov
xor
mov
inc
jbe
shrl
mov
cmp
mov
outsl
xchg
and
pop
fnstcw
subl
dec
das
or
aam
mov
pushf
pop
pusha
lahf
stos
dec
adc
out
jp
xchg
jb
fdecstp
sub
push
das
cmc
mov
insl
adc
pusha
mov
add
and
fisubrl
cs
add
push
stos
sub
or
adc
lock
pop
popa
dec
stos
js
xchg
fildll
inc
icebp
or
je
xchg
xchg
or
dec
mov
icebp
fiadds
or
mov
adc
or
and
lds
add
xchg
pusha
jecxz
cli
movsl
iret
inc
push
push
loope
cmp
pop
mov
loop
pop
rol
scas
jo
mov
loop
inc
sahf
pop
aam
mov
in
push
mov
pop
in
addr16
movsl
dec
sahf
idivl
fsubrp
cmp
pusha
fistpl
cltd
xchg
popa
jnp
jbe
popa
cmp
and
mov
pop
inc
xchg
push
pushf
jmp
orb
rcl
push
pop
jl
mov
add
sbb
dec
sarl
sub
and
mov
push
and
pop
and
mov
dec
in
and
aaa
pop
lahf
testb
push
push
inc
sbb
inc
xchg
das
sahf
and
xchg
cmp
push
testl
test
arpl
int3
dec
push
pop
push
lahf
icebp
icebp
xchg
add
mov
sbb
imul
mov
cs
into
fcomps
adc
pushf
and
ss
popf
fsubp
dec
mov
mov
mov
sub
sub
sti
aad
dec
pop
repnz
neg
into
out
imul
faddp
les
pop
dec
push
fwait
sub
xchg
icebp
pusha
inc
das
xchg
and
fiadds
fstpt
gs
cmp
sti
call
arpl
mov
bnd
popa
dec
push
xor
lret
push
stc
pop
rorl
imul
or
xchg
jge
stc
mov
inc
mov
mov
push
ljmp
sub
mov
push
and
mov
js
mov
jge
addr16
sbb
dec
mov
movsl
cmp
and
xor
ret
inc
aaa
out
fxch
lahf
es
fcmovne
and
xor
repz
adc
pop
movb
mov
pop
mul
add
fwait
dec
fistpl
add
xor
mov
jl
or
aas
clc
lods
xor
and
sbb
xorl
mov
add
movsb
sub
xchg
stc
xchg
mov
cmp
lahf
push
mov
pop
ja
jmp
xchg
daa
addr16
test
add
or
adcl
lods
xchg
out
mov
xchg
cmp
mov
test
into
or
inc
std
jg
or
push
dec
cltd
ds
inc
pop
inc
adc
fildl
mov
and
stos
mov
rolb
and
dec
adc
xlat
pop
ret
pushf
or
mov
mov
dec
loop
fs
adc
mov
roll
xlat
push
out
and
push
or
cmc
sub
inc
dec
out
jl
int
std
push
sti
adc
testl
arpl
fadds
scas
add
xchg
aaa
pusha
pop
pcmpeqw
xor
test
xchg
dec
iret
mov
in
mov
fists
dec
xor
loopne
add
test
xor
push
xor
or
mov
cwtl
and
push
cmpl
dec
xchg
lcall
push
rorl
cmp
mov
lods
bound
mov
cwtl
xor
arpl
xlat
pop
mov
or
out
xchg
adc
lret
xchg
loopne
xchg
idivb
xchg
sahf
cmp
pop
adc
inc
lods
in
jo
xchg
cmp
mov
ljmp
mov
pop
clc
test
add
leave
cmp
insb
mov
xor
sub
push
clc
xor
jbe
xor
lock
imul
into
enter
xchg
mov
jns
pusha
pop
push
out
add
out
shufps
arpl
stos
orl
mov
jbe
enter
mov
jmp
mov
ret
mov
movsb
mov
lret
imul
and
cmpsb
aas
inc
mov
mov
cmp
iret
fldt
nop
push
push
pop
or
ret
adc
cmp
push
mov
jno
lahf
adc
ja
lock
lahf
xor
pusha
dec
add
lds
rclb
pop
mov
in
test
lods
push
orl
push
mov
cmp
xorb
into
orps
js
in
cmp
add
jge
cmpsb
lods
jle
xor
sbb
mov
loop
push
pop
int
js
xchg
pop
gs
std
je
adc
jno
inc
mov
fucom
pop
mov
movsl
lahf
jo
push
loope
lods
outsb
mov
ljmp
loope
sbb
inc
xchg
mov
test
jno
data16
and
push
fnsave
cli
adc
xor
pop
adc
dec
add
mov
and
pop
inc
ja
pop
mov
adc
push
stos
xlat
loopne
call
int3
in
add
xchg
sbb
mov
les
cmp
flds
std
gs
cmp
push
pop
push
mov
imul
sub
sbb
add
mov
cmp
cmpsl
push
mov
mov
sub
into
nop
in
dec
mov
sub
jmp
loope
icebp
push
lahf
scas
in
in
add
jno
lods
rcll
in
mov
mov
outsl
mov
lcall
testb
out
out
inc
or
mov
inc
stos
imul
movsl
outsl
mov
lea
dec
or
cwtl
bound
mov
xor
and
cwtl
inc
ljmp
inc
leave
icebp
mov
mov
push
pusha
adc
xor
pop
push
stos
jae
inc
loope
call
mov
add
aam
xor
popf
or
mov
movd
or
or
push
and
mov
outsl
inc
cwtl
inc
das
dec
fs
shr
gs
fnstenv
dec
out
lcall
push
lods
or
mov
testl
cwtl
jp
sahf
xchg
out
or
push
loope
pop
xor
ret
or
add
daa
sub
enter
sub
sub
repnz
out
sbbb
push
sbb
lock
xor
push
xchg
loop
popf
mov
cltd
test
movsl
fistpll
mov
sbb
out
scas
add
lods
cmp
push
xor
arpl
mul
xchg
sub
aad
mov
pop
jns
imull
adcb
out
mov
ror
in
loop
mov
add
loopne
in
sahf
mov
pop
xchg
jmp
jmp
push
mov
mov
mov
sti
aad
shlb
pushf
push
int3
ss
and
pop
dec
das
push
or
in
fwait
adc
push
lock
pop
loopne
push
fistl
mov
idivb
xor
or
sysenter
hlt
sarb
and
or
bound
jns
aad
xlat
js
sub
faddl
mov
jnp
lods
dec
js
repnz
lds
push
pushf
push
mov
jl
cmpl
test
mov
jge
scas
iret
test
jnp
lods
stos
aam
or
push
cwtl
mov
popf
add
pop
jo
mov
cmc
pop
rorl
icebp
xchg
aad
bound
pop
adc
xor
mov
dec
xlat
int3
rol
cmp
xor
xchg
mov
idivl
shll
pop
nop
ja
negl
loop
insb
sarb
pop
ds
fbld
outsb
xchg
shl
cld
sub
popa
push
xchg
adc
les
mov
lock
mov
loope
fisttpl
aaa
push
dec
ss
lock
loop
xor
shlb
and
outsl
mov
dec
inc
dec
outsl
dec
pop
ret
pop
add
pop
into
cmpsb
xchg
xchg
dec
pop
lret
vpaddsb
lcall
out
or
sbb
jl
js
jne
xor
jle
adc
outsb
xchg
cld
inc
test
xchg
mov
ret
popa
mov
add
add
pop
aas
jno
mov
imulb
push
sub
push
pop
mov
shlb
push
pop
lahf
clc
rcrl
and
imull
ljmp
xchg
mov
aas
push
arpl
xchg
cmp
mov
push
or
mov
aam
dec
addl
test
rcrb
mov
stos
test
repnz
sar
icebp
dec
push
or
rorl
xlat
outsl
lret
std
outsl
xor
inc
mov
popa
bound
sub
jmp
dec
adc
daa
mov
ss
sub
insl
inc
aaa
in
aam
lcall
adc
data16
mov
xor
inc
or
mov
stos
fadds
mov
mov
push
mov
pushf
sbb
sti
ficomps
lahf
lods
inc
push
dec
ljmp
xchg
adc
adc
into
push
jb
out
bnd
pop
call
add
mov
repz
adc
inc
aam
ret
xor
adcl
shll
ljmp
mov
nop
outsl
dec
adc
adc
inc
sub
pusha
fcompl
loopne
imul
xchg
push
push
paddq
push
std
int
out
and
mov
jbe
mov
out
popa
cltd
das
or
lock
lds
loopne
and
push
sub
mov
mov
mov
add
add
push
data16
mov
push
rcrl
pop
jae
jle
fstpt
xor
pop
xor
or
mov
lods
cld
dec
adc
ds
dec
push
repnz
mov
je
add
cmp
dec
adc
add
push
and
xor
sbbb
xorb
xlat
lock
xor
mov
xchg
inc
cmp
mov
je
test
out
jbe
stos
rcll
jg
mov
daa
aas
jo
mov
jnp
push
in
lret
rcrb
push
xchg
push
dec
dec
sub
xchg
aad
mov
add
mov
pusha
outsb
cmp
adc
nop
dec
mov
jae
loop
repnz
lcall
loope
pop
loope
bound
addr16
dec
xchg
aam
out
data16
in
pop
cli
lods
je
in
and
test
cmpsb
dec
jecxz
mov
adc
test
jb
push
mov
xor
jns
or
adc
iret
cwtl
mov
add
daa
push
inc
sahf
enter
sbb
roll
mov
add
mov
jmp
or
insb
jecxz
stos
test
sbb
xchg
adc
xchg
out
sub
int3
icebp
out
sub
in
mov
sub
ja
and
lret
push
sbb
leave
call
sub
adc
mov
jg
mov
in
cmc
test
inc
arpl
loope
add
mov
lods
mov
cmp
daa
jbe
nop
pop
jg
cmpsb
dec
jl
popa
jg
pop
cmpsl
xchg
stos
and
xchg
sub
cmp
xchg
mov
adc
mov
aad
les
cmp
mov
or
das
xor
mov
das
sub
mov
dec
pop
cltd
stc
mov
xor
jne
les
adc
cmc
mov
sub
jbe
sub
stos
mov
or
cmp
xchg
cmp
dec
fwait
imulb
cmp
negb
int3
add
adc
xor
cmpb
adc
adc
or
cmpsb
push
cmpsb
repnz
fs
sbb
cmpl
fdiv
or
and
pop
cmp
mov
shl
mov
mov
adc
in
aas
pushf
push
cmp
and
lret
sub
ret
inc
js
xor
inc
jae
pop
data16
lret
push
mov
fisttpl
into
sbb
aad
jae
sub
sbb
jnp
jo
mov
mov
mov
imul
jl
cmpb
call
jnp
push
jno
mov
jns
add
sahf
iret
sbb
mov
fwait
adc
lcall
mov
dec
inc
rclb
add
push
in
sbb
mov
push
je
xchg
jle
push
mov
cld
js
inc
mov
mov
mov
test
test
and
jle
sbb
xchg
inc
add
adc
xchg
sub
cltd
je
fidivs
arpl
pop
fxch
ret
ret
xchg
fs
and
nop
popa
lahf
data16
aas
pop
cmpsb
pushf
ss
adc
push
jl
inc
ljmp
stc
cli
jae
sbb
or
cmpsl
dec
sub
sub
in
jb
pop
pop
adc
outsb
pop
mov
pop
enter
divb
inc
shlb
scas
and
out
test
in
pop
mov
mov
cs
iret
pop
xchg
loopne
cltd
mov
loope
movsb
adc
lds
mov
push
push
jmp
mov
and
mov
icebp
adc
lock
and
mov
ftst
cmp
push
pop
cmp
addr16
xchg
in
mov
mov
dec
lea
mov
pop
ds
in
repnz
bound
xor
adc
fs
or
xor
mov
gs
dec
and
sub
int
mov
mov
add
cs
lret
jo
adc
testb
aad
insb
mov
rcr
push
dec
repz
mov
iret
lahf
xchg
or
gs
fisubl
aad
test
sub
in
imull
xor
push
movsl
insb
ss
sbb
jno
je
xor
sbb
push
jecxz
add
or
sahf
add
mov
mov
sub
sbb
cmc
cs
push
fwait
sub
xchg
shll
xor
ss
pop
shrb
inc
push
dec
lret
addl
rcl
sbb
push
out
mov
daa
and
shll
stos
faddp
arpl
dec
in
ret
es
xchg
jae
sub
cmpsb
pop
mov
xor
cmpsl
cld
div
push
paddsb
outsb
adc
or
push
icebp
and
or
add
inc
fdivl
out
fsubs
adc
sbb
test
xor
pop
sar
in
cmp
xchg
cltd
and
stos
and
jns
repnz
int3
andb
insb
cmp
fstl
jb
aad
sbb
jns
mov
push
mov
sbb
fbld
das
js
daa
repnz
push
xchg
cmpsb
pop
jle
and
inc
push
aad
inc
add
xchg
dec
and
push
insb
cmp
lret
and
mov
aas
rclb
sub
cmp
adc
lahf
loopne
jo
dec
dec
jmp
scas
movsb
mov
push
adc
notb
dec
pusha
loope
jbe
aaa
xchg
das
je
aad
test
mov
and
popf
mov
in
mov
sbb
sahf
lods
inc
pmuludq
aam
pop
cmc
fnstenv
cmp
imul
sbb
sbbl
or
and
xorb
imul
mov
fdivrs
lcall
fidivrl
xor
movsl
jg
and
sub
mov
jns
push
lods
push
jae
data16
xchg
sbb
xor
outsb
fstps
jle,pn
jg
es
lahf
adc
mov
lea
pop
add
xor
clc
imul
icebp
sub
dec
sub
pop
repz
movsb
popa
shr
jnp
aas
flds
neg
mov
dec
cmp
ret
mov
in
adc
pop
xlat
cli
loopne
push
lret
imul
or
outsb
pop
mov
das
add
xchg
flds
or
cmovs
pop
ret
mov
shr
loopne
cmpsb
pushf
dec
dec
mov
insl
sub
ss
jb
movsb
xor
jmp
popf
push
jle
mov
push
cltd
mov
mov
push
cmpsb
pop
mov
adc
mov
and
push
sahf
mov
xor
sub
sbb
repnz
fs
push
and
ret
jp
sub
xor
xchg
push
movsl
add
icebp
and
movsl
imul
or
fs
adcl
cltd
pushf
cmp
lds
mov
dec
jne
jge
jg
mov
imul
cmp
arpl
in
filds
test
pop
or
cmp
in
and
jg
stos
jmp
enter
in
fmul
xlat
xchg
out
adc
dec
test
xchg
mov
into
out
orl
cmc
pop
pop
push
pop
mov
and
mov
mov
mov
mov
sbb
sbb
stos
ret
in
or
shrl
cmp
xchg
clc
cmp
dec
sbb
push
inc
cli
je
push
out
mov
jg
cmp
push
jno
xor
add
call
lods
inc
cmp
sub
mov
hlt
add
mov
or
xchg
jmp
jmp
mov
jmp
loopne
fmull
push
mov
cmp
hlt
loopne
dec
lret
push
jno
shl
mov
inc
adc
aaa
mov
test
fwait
dec
mov
cmpl
jle
movsb
push
cld
arpl
xor
mov
or
lock
or
aaa
xor
or
xlat
inc
inc
pop
add
jle
dec
jnp
push
jo
mov
stc
aad
dec
jb
mov
ljmp
rclb
add
lret
push
hlt
std
cwtl
or
in
add
cmpsl
add
dec
stc
repz
repz
lret
into
cmp
insl
iret
xchg
xchg
xchg
fs
es
and
and
nop
lcall
add
cmp
xor
jae
imul
es
lahf
pop
push
in
aad
xor
or
rorb
rclb
into
push
push
adc
loope
xchg
out
mov
loope
sub
lods
lods
shlb
push
sub
shlb
or
mov
pop
movsl
in
adc
fisubrs
or
outsb
imul
xchg
das
int
mov
fld
push
sbbl
xchg
loop
pushf
xor
inc
dec
stos
scas
mov
lret
cmp
mov
in
lock
adc
push
enter
call
mov
in
js
mov
scas
in
adc
jo
jg
data16
popf
pop
out
loope
fidivrl
pop
cmp
and
hlt
xor
sub
ret
fbld
cmp
fmulp
push
inc
xchg
lret
and
jecxz
cmp
push
jge
xchg
cmp
aam
adc
imul
loope
push
adc
jne
in
lods
in
or
in
sahf
cmc
imul
sbb
inc
inc
lods
and
push
mov
adc
test
repnz
movsl
xor
mov
addr16
and
mov
push
add
jae
scas
jp
mull
sbb
inc
pop
inc
adcb
mov
sets
xchg
jb
shrb
jbe
xchg
hlt
xchg
rorb
mov
shrb
cld
jae
xchg
hlt
out
mov
mov
jnp
mov
inc
mov
lret
pusha
cmpsb
mov
movsb
dec
push
fwait
das
mov
mov
xchg
mov
xor
fisttps
aaa
mov
push
or
lods
adc
xor
and
xor
mov
ret
xor
out
jb
mov
xchg
dec
int3
aaa
sbb
jge
test
mov
xorl
pop
inc
in
mov
fdivl
fidivl
or
and
dec
mov
insb
js
fmull
mov
pop
std
jne
add
push
mov
aas
popf
scas
xor
mov
push
outsb
outsb
leave
test
push
fistpll
cmc
push
jge
dec
aad
xchg
mov
test
xchg
notl
addb
cmp
scas
aam
fcoml
add
xor
mov
arpl
jle
sbb
insb
sub
mov
mov
push
and
faddl
int
decl
cwtl
clc
jnp
adc
pop
int
fs
int3
enter
adc
add
inc
cmp
push
les
shlb
test
enter
stos
test
adc
inc
xchg
imul
cmp
cmp
inc
imull
mov
mov
aas
sar
sarl
adc
pop
mov
call
insb
dec
test
pop
mov
jbe
sub
sub
xchg
mov
iret
cmp
pusha
negl
fbstp
lea
xor
out
mov
adc
shrl
call
push
dec
data16
mov
mov
cmp
out
cltd
clc
sub
jle
int
sahf
or
shr
ret
pop
jecxz
fisubrs
cmp
adc
nop
ret
out
and
jg
mov
cld
in
xchg
cmp
pushf
dec
dec
notb
iret
or
sti
data16
cwtl
lods
and
mov
orb
inc
push
or
pop
inc
inc
aas
test
fidivl
leave
repz
sub
jge
mov
fwait
ret
dec
rcll
xor
fwait
lock
in
arpl
sbb
inc
ret
movzbl
jb
lcall
dec
aas
jnp
sub
test
add
add
xor
xchg
adc
xchg
or
cmpsb
js
mov
push
scas
loopne
or
xor
scas
xchg
mov
mov
rol
add
jnp
and
ds
or
in
sbb
jl
cmpsl
nop
mov
testl
inc
pop
cmpsl
mov
or
cmp
gs
in
ret
push
int
mov
xor
mov
out
cbtw
cmp
and
push
repnz
push
pop
cli
aaa
roll
xchg
mov
cli
and
outsl
cmp
xchg
fisubrs
imul
adc
lea
cmp
pop
sbbl
and
mov
orl
loop
fistpll
pop
mov
jo
sub
ret
mov
inc
pusha
xor
inc
pushw
mov
mov
xchg
mov
test
dec
fwait
shrl
adc
daa
int
test
je
mov
xorl
in
jae
jg
fldenv
adc
into
adcb
jns
imul
shlb
push
js
and
xchg
xchg
lahf
stc
loopne
test
aaa
enter
outsb
add
rcll
es
test
inc
adc
dec
push
xchg
xlat
je
dec
shl
xor
fisubrs
cmpsb
lds
mov
or
pop
outsl
dec
inc
sbb
int3
jae
imul
jo
dec
xor
xchg
sub
cmp
cmp
jmp
mov
adc
fbld
mulb
jg
in
pop
sub
lcall
lcall
pop
and
ja
test
push
sub
inc
cmp
shlb
fmull
arpl
pop
cmp
es
lods
pop
cs
dec
mov
gs
rorb
adc
fisttpl
xchg
pop
cltd
in
xchg
addr16
xchg
imul
add
subl
jb
insb
fs
push
pop
dec
test
outsb
loopne
rorb
shll
in
popf
cmp
out
aaa
in
mov
mov
sbb
test
faddl
mov
or
xchg
fcoms
mov
dec
push
xchg
movsl
cli
xchg
or
int3
mov
add
stos
mov
je
jbe
push
sub
mov
dec
sbb
adc
mov
cmp
mov
mov
in
cmp
mov
mov
push
out
sahf
cmp
pushf
mov
and
mov
mov
adc
adc
dec
loopne
enter
jl
jnp
lds
test
lds
mov
or
mov
scas
cmp
lods
xor
cmp
add
cmpsl
adc
xchg
movsl
or
dec
and
test
vmulpd
lahf
arpl
out
movsb
ret
sbb
test
ljmp
out
out
push
jge
icebp
test
mov
pop
mov
inc
sahf
add
pushl
je
addr16
pop
lsl
repnz
rolb
pmulhw
jne
fisttpll
inc
dec
lods
sti
and
sbb
mov
outsb
lret
sub
stc
imul
jbe
sbb
sbb
icebp
fstps
pop
sbb
xchg
sahf
insb
fidivs
jecxz
mov
cmp
imul
mov
pop
testb
imul
sub
ficoml
dec
mov
lock
sbb
in
test
dec
repz
mov
or
std
push
xorl
int
sub
adc
insl
sti
dec
insb
hlt
jp
push
inc
inc
push
sbb
add
mov
jl
pop
jnp
mov
js
jge
mov
jbe
loope
aam
lret
test
loopne
sbb
ss
test
jnp
stc
sub
enter
out
out
cwtl
ss
sbb
aas
xor
xor
call
clc
movsl
lea
int
push
test
nop
xor
push
mov
push
inc
lahf
mov
cli
out
ja
fcmovbe
cmp
aas
push
popf
inc
scas
xor
or
jno
jnp
xchg
xchg
dec
pusha
sahf
add
mov
hlt
bound
adc
mov
adc
jbe
xchg
loopne
roll
jb
popa
lret
add
lods
in
por
std
sbb
in
jmp
lret
jp
jbe
xor
xor
xor
decl
mov
outsb
roll
xchg
xor
std
push
sbb
loop
sub
inc
addb
insl
inc
in
and
movsb
cmp
push
xchg
adc
push
stos
cmp
movsb
sbb
pop
cmc
push
es
lcall
sbb
ficomps
xchg
or
sub
aam
inc
cmp
repz
push
call
aam
imul
jge
outsb
and
inc
sbb
sbb
ret
mov
imul
pusha
jg
xor
or
mov
or
jnp
in
cmp
mov
loope
xor
or
dec
dec
push
pop
push
scas
mov
fsubs
mov
pop
add
hlt
sti
add
addr16
es
in
lcall
jno
clc
fdivr
into
mov
hlt
shrl
add
cld
dec
inc
mov
xchg
sub
fmul
jbe
sahf
jne
outsb
cmp
mov
add
xor
and
pop
mov
push
insl
jge
pop
cwtl
push
movsb
xchg
sbb
popf
sbb
xchg
clc
or
sti
sbb
in
xor
popa
daa
mov
test
and
inc
xchg
add
xchg
bound
or
je
loope
xor
dec
movsb
mov
sub
dec
inc
pusha
iret
xlat
cmpsl
fs
mov
das
mov
push
jp
in
sbb
xor
xor
rcll
js
je
jb
andl
pop
cmp
lods
sbb
add
pop
jecxz
popa
dec
adc
sub
lds
jns
push
mov
fistl
pop
out
inc
xor
push
addr16
mov
mov
nop
pop
std
pusha
fwait
or
dec
mulb
xchg
inc
xor
dec
xor
inc
cmp
repnz
jne
xor
lods
and
push
cmp
ja
add
fdivs
cltd
out
jbe
sub
and
mov
leave
pop
and
cld
out
and
stc
push
mov
xchg
mov
or
pop
enter
xlat
iret
insb
lock
dec
mov
pop
shrl
cmpb
testb
push
outsl
sbb
push
stos
add
loop
js
lahf
out
in
hlt
outsb
ds
sbb
mov
dec
fwait
pop
pop
jmp
lods
xchg
imul
ds
lcall
clc
adc
cwtl
iret
stos
sub
xchg
dec
adc
cs
mov
sub
andb
adc
js
sub
mov
int3
imul
inc
jb
cmpsb
jnp
aad
gs
test
loope
test
scas
pop
inc
push
xchg
lods
xchg
pop
jae
es
pushf
mov
test
insb
repnz
cmp
test
sub
mov
xchg
or
push
push
mov
sahf
dec
xchg
or
shlb
and
cmp
push
fs
enter
xchg
jbe
mov
adc
in
cwtl
out
rolb
xor
lea
mov
dec
ret
or
out
sbb
outsl
insb
or
mov
int3
jge
dec
jle
cli
xor
add
ret
enter
jne
cmpsl
dec
es
rolb
xor
lock
stos
test
mov
inc
mov
push
or
fisubl
pop
es
das
mov
mov
rolb
cmpsb
dec
mov
pop
push
cmp
icebp
pop
test
inc
cmp
xchg
loope
dec
or
push
mov
mov
sbb
fiadds
lods
xor
xchg
dec
lods
sbb
jg
jp
xlat
fcompl
fidivrl
out
out
outsb
in
sti
lcall
pop
and
dec
clc
adc
jp
add
adc
movsl
inc
cmp
fwait
xor
int
in
inc
dec
push
stos
or
jb
push
push
insb
sub
mov
loop
lcall
or
mov
imul
xor
xchg
loope
mov
add
lcall
out
fwait
enter
mov
jo
rolb
xchg
popa
ds
cltd
push
cmpsl
pushf
test
mov
pusha
icebp
push
movb
test
aam
lock
pop
sti
fidivrl
jo
sbb
sbb
mov
mov
bound
mov
sub
adc
push
enter
jp
dec
push
mov
push
jp
xlat
in
cmpsl
inc
aaa
push
lret
stc
out
sub
and
add
fwait
sarl
pop
sub
mov
sub
lret
sbb
scas
insl
je
inc
dec
jne
aad
mov
pop
mov
push
xor
cltd
int3
push
push
inc
mov
outsb
mov
mov
not
push
lods
inc
jl
stc
add
je
xchg
push
or
loopne
cld
or
add
add
pop
add
mov
pop
stos
dec
fcoms
jp
mov
push
int3
bound
xchg
sub
pop
mov
dec
jecxz
out
lock
xchg
sbb
cld
add
sahf
inc
and
add
outsb
xor
and
mov
jl
jl
in
inc
shufps
imul
scas
add
jae
mov
jo
fisubl
push
sbb
xor
or
xchg
pop
out
push
insl
pop
sarl
lea
xor
lea
std
in
push
xor
cmp
inc
pop
xchg
jg
nop
xchg
js
pop
jae
sti
popa
cmp
pushf
and
and
xor
aaa
and
pop
mov
lahf
pop
insl
inc
lods
repz
dec
jp
or
jmp
loope
jns
sub
jnp
cltd
jp
adc
or
insb
mov
or
inc
lea
lock
cmpsl
and
js
mov
lods
jno
sub
and
sbb
ljmp
rcrb
dec
sti
pop
imul
out
adc
push
nop
cli
sbb
fnsave
outsl
test
sbb
popa
pop
ret
cmp
outsl
shr
jmp
test
mov
pop
js
push
arpl
enter
lock
push
mov
sbb
jl
stos
std
push
out
ffreep
imul
insb
mov
mov
cmpsb
jbe
inc
mov
roll
or
dec
out
clc
push
jns
xchg
sti
sbb
inc
call
pop
aad
dec
mov
cmc
mov
mov
dec
imul
scas
rcll
and
jns
je
cmc
add
xchg
stos
popa
pop
jecxz
sahf
jmp
cwtl
sub
rclb
mov
notl
xchg
dec
jo
push
fldl
inc
and
repz
pop
addb
mov
xor
mov
push
popf
das
lcall
cmpsl
rcll
jle
addr16
adc
inc
xchg
lcall
idivb
cmp
xchg
or
shll
shl
adc
clc
outsb
adc
inc
xchg
fmull
or
push
bound
sti
repnz
mov
push
cmp
loope
es
and
and
imul
mov
cmc
out
daa
sub
pop
repnz
ret
dec
loope
sbb
sti
sbb
out
dec
into
mov
inc
aam
xchg
push
sbb
call
mov
jo
test
pop
push
xchg
mov
push
pop
sbb
push
mov
jnp
outsl
jg
leave
xchg
xor
xchg
lahf
fildl
mov
test
xrstors
clc
test
out
mov
mov
push
repnz
mov
mov
xchg
adc
sub
das
repz
adc
dec
sub
cli
xor
out
sahf
add
mov
les
pop
rcrb
jbe
mov
sti
ljmp
xchg
pop
dec
sub
cmpsb
and
push
clc
mov
clc
push
mov
dec
or
loop
mov
in
jnp
test
fsts
in
inc
ret
cmp
sub
in
and
mov
mov
popl
pop
push
ret
mov
fmuls
std
ss
call
icebp
mov
cmp
mov
adc
sarl
icebp
adc
pop
inc
lahf
in
push
mov
sbb
sbb
inc
cmp
in
pop
pop
jg
xchg
sbb
cs
enter
sahf
push
aaa
imul
add
push
sub
pop
movsl
repnz
rclb
pop
mov
cmc
or
call
ret
or
cmp
push
jecxz
sbb
sbb
pushf
test
loope
jno
aam
je
mov
inc
pushf
stos
mov
lds
out
pushf
push
push
xchg
insb
orb
lcall
mov
test
test
in
add
push
pusha
fisubs
rolb
adc
adc
in
inc
add
or
push
les
adcb
es
in
das
cmp
loope
push
xor
out
fildll
mov
and
into
test
out
jge
pop
pop
mov
pop
lods
fs
fwait
mov
sbb
bound
xchg
cmpsl
dec
push
leave
gs
and
out
sbb
sbb
mov
stos
insb
bound
dec
das
mov
xchg
push
in
add
xor
adc
outsb
int
xor
je
fbld
jb
mov
add
mov
insl
add
xchg
cli
xor
andl
jo
or
les
push
push
inc
xchg
cmpsl
cltd
clc
sub
inc
mov
sbb
imull
and
dec
mov
stc
in
or
cmc
mov
loope
sub
pop
idivb
xlat
sbb
pop
mov
mov
cmc
jl
clc
aas
push
and
inc
sarb
mov
mov
dec
xor
es
aam
cmp
mov
jp
out
sbb
dec
cmpsl
idivb
cmp
leave
cmpsl
call
cmpsb
ljmp
cli
adc
pop
fnstcw
push
imul
sub
xchg
jb
lea
jge
jmp
andb
mov
aad
push
or
dec
mov
and
add
fisttpl
loop
lret
pop
mov
ss
xchg
fdivrl
or
lods
mov
shll
test
and
inc
dec
sbb
clc
jecxz
mov
icebp
js
cwtl
jne
push
jl
pop
loop
shlb
add
push
mov
add
movsb
push
or
jae
mov
push
popf
jge
add
pop
imulb
mov
sar
mov
jnp
xchg
push
mov
mov
lods
or
mov
cmp
lods
push
push
xchg
push
and
xchg
fcomip
out
scas
fnsave
sti
dec
fwait
in
dec
and
sbb
xchg
adc
loop
imul
push
xchg
sbb
data16
push
rorb
shl
pop
int3
loope
dec
popf
dec
xor
stc
sbb
push
cmp
pushf
rcl
cmpsb
loop
adc
mov
fcmovb
xor
fisttps
cli
stc
cltd
gs
outsb
dec
addl
int3
lock
lret
push
sbb
mov
and
xor
xor
lret
clc
pop
jno
notl
sbb
in
sbb
mov
push
pop
test
movsb
push
ret
adc
fbld
fwait
and
push
les
cld
ja
xor
out
push
mov
paddw
inc
daa
jmp
fldt
in
in
je
and
push
int3
or
mov
and
fisttpll
fwait
imul
jne
cmp
icebp
push
popa
push
test
data16
jle
mov
jmp
xchg
test
icebp
int3
movsl
jae
gs
dec
arpl
gs
pushf
mov
xorb
push
cmc
sbb
push
fstpt
mov
mov
mov
sti
adc
sti
adc
test
mov
push
mov
mov
jl
or
dec
bndstx
ds
pop
cmp
mov
or
lods
dec
lcall
mov
sub
test
xchg
mov
mov
cltd
sbb
cmp
jge
push
mov
in
fidivs
xchg
cwtl
sahf
scas
ss
sti
into
out
adc
adc
cmp
mov
dec
push
push
xor
mov
scas
sub
inc
jnp
push
dec
add
and
int3
jle
ja
push
fcompp
dec
lret
xor
cmp
in
push
adc
pop
sbb
pop
imul
addl
sub
cmp
or
push
dec
out
fldl
mov
das
lret
lahf
andb
and
cwtl
mov
int
jl
dec
scas
cld
insl
sbb
or
pop
test
sub
xacquire
jg
repnz
add
cli
push
cmpsb
fdivrs
out
jg
add
mov
mov
add
enter
add
cmp
je
or
repnz
stc
xor
aas
or
shrl
sbb
loopne
mov
outsl
pop
push
push
and
dec
popa
push
xchg
sub
lcall
ss
jne
pop
mov
and
or
xor
lea
cwtl
out
mov
outsb
arpl
stos
hlt
iret
add
or
mov
jg
les
cmp
mov
dec
mov
addr16
lds
repz
mov
mov
arpl
push
mov
inc
mov
je
push
mov
es
in
mov
dec
cmp
or
lea
inc
pop
pop
inc
jp
sti
dec
aas
inc
loopne
ret
test
out
mov
rcrb
lods
lcall
jne
test
das
mov
fnstsw
cltd
stos
pop
dec
ja
cmp
cli
imul
pop
out
fstps
insb
or
sti
mov
add
cmp
mov
shll
add
mov
sub
out
dec
mov
sbb
xor
in
rcrb
jecxz
lea
add
mov
pop
inc
fcomip
fldt
xlat
inc
scas
ja
jmp
add
pop
mov
test
sbb
cld
xor
mov
popa
mov
repnz
push
mov
push
sbb
adc
mov
xor
dec
roll
negl
xorb
and
push
push
daa
aaa
daa
mov
sbb
xchg
cmp
pop
stos
dec
fldl
nop
clc
inc
in
push
sahf
or
sbb
xchg
lret
sbb
or
pop
mov
and
sbb
repnz
cmpsb
outsb
sahf
push
pop
push
and
movb
sub
data16
sub
adc
jo
icebp
je,pn
sub
loopne
mov
push
ja
mov
dec
cmpsl
mov
xor
iret
jae
add
sub
aas
aam
pop
aam
cmpsb
sbb
repnz
rcl
call
mov
mov
pop
loopne
sub
in
lcall
mov
leave
out
push
rcrl
or
push
mov
jecxz
nop
sarl
inc
mov
mov
adc
bound
sub
push
lods
xchg
pmulhuw
add
scas
add
mov
jecxz
add
adc
into
imul
test
sub
icebp
sub
fwait
dec
test
sti
out
shlb
push
or
xchg
push
lcall
and
cld
in
dec
out
add
jge
shlb
adcb
jl
pop
fstpt
js
cld
cmp
jne
cmp
mov
xor
cmpsl
xor
push
loope
pop
sbb
popa
cltd
mov
jb
or
pop
scas
adcb
lods
cli
xchg
pop
pop
std
xor
fcomip
xor
scas
daa
mov
sbb
daa
mov
aad
repz
push
repz
or
mov
sbb
add
push
clc
ja
push
add
mov
add
aam
inc
leave
adc
sub
and
jg
imul
or
mov
and
push
scas
shlb
inc
fs
in
cmp
les
lret
push
cmovo
or
jae
imul
add
fwait
cmp
iret
cld
hlt
adc
lds
cmc
test
mov
fisubl
into
xchg
mov
fisubs
adc
add
lods
xor
out
adc
jecxz
subb
mov
int3
cwtl
hlt
idivl
xor
xchg
cmp
sbb
fdivl
stc
xor
jo
adcb
into
mov
mov
nop
sub
mov
sub
pushf
push
inc
fdivrs
push
iret
stos
jnp
xchg
lock
sub
test
sub
arpl
cmc
lock
gs
aas
mov
xchg
imul
repnz
mov
adc
adc
jle
das
dec
dec
sti
test
or
jp
inc
mov
mov
mov
push
inc
xor
popa
cmpsl
mov
pusha
mov
inc
sub
push
int
std
push
loopne
pushf
hlt
test
xchg
ljmp
dec
shlb
lods
and
cmc
shrb
popf
mov
mov
sbb
rcl
add
push
sub
fsubs
aaa
shll
clc
sub
cmpsl
or
aas
push
inc
xchg
dec
or
fdivp
shll
jmp
ljmp
mov
mov
pop
jmp
mov
mov
jg
mov
addl
stos
sbb
stc
lret
enter
mov
and
roll
adc
cmp
jnp
int3
xchg
outsb
aam
or
repnz
pop
lods
cmpsl
mov
xchg
call
or
jb
pop
dec
movb
xlat
stos
sub
dec
sbb
adc
push
xchg
xchg
push
jge
sti
rcll
sub
inc
dec
out
pop
cmp
enter
imul
mov
cmp
or
mov
pop
cmp
repz
ljmp
inc
mov
push
popf
push
data16
lret
mov
ljmp
dec
sbb
mov
shll
lods
fsubrs
movsb
xchg
mov
pop
mov
ret
jecxz
mov
ret
or
cltd
push
mov
fistl
cmp
pop
push
rcrl
mov
test
out
movsb
push
pop
push
sub
imul
jg
lahf
imul
pop
mov
test
cmp
addb
jns
cmp
cmp
sbb
cmpsl
idivb
push
out
in
cmp
mov
in
in
push
pop
out
xchg
popa
repnz
or
test
scas
sub
ret
loop
pop
out
daa
sbb
les
mov
or
inc
clc
sub
icebp
imul
out
jge
push
cmpb
mov
lock
dec
aad
rolb
or
mov
inc
or
into
stc
cld
xor
iret
bound
sub
inc
or
fcoml
push
js
mov
jle
mov
jg
pop
arpl
rep
divb
xchg
movsb
loopne
cmpsl
xor
out
xor
xor
jecxz
and
jnp
mov
add
mov
in
sub
jmp
ret
push
inc
pusha
cmpsl
xor
mov
out
jbe
aad
dec
les
out
imul
or
js
insl
adc
addr16
or
push
or
mov
mov
jecxz
add
add
mov
jo
mov
dec
pusha
dec
push
imul
adc
mov
mov
xor
or
mov
mov
je
out
cli
pop
cmp
addr16
xchg
call
hlt
stos
clc
fildl
xchg
fwait
dec
iret
outsb
push
cmp
mov
in
dec
inc
adc
stc
xor
lods
das
lahf
xor
sbb
push
sahf
mov
push
push
in
scas
push
xlat
cmp
sarl
push
pop
adcb
mov
mov
movsb
push
nop
gs
push
cmp
in
dec
scas
add
sarl
mov
shr
jle
int
dec
js
xor
pop
pop
call
mov
dec
nop
outsb
scas
push
dec
movsb
xchg
pop
in
imul
sahf
inc
outsb
xor
jo
sbb
pop
out
shlb
xchg
insl
daa
mov
das
int
cs
fmull
push
and
cld
aaa
push
push
gs
mov
cld
bound
enter
cmc
mov
jo
jae
outsb
pop
push
ljmp
or
cmpsl
cmpsb
inc
je
dec
les
mov
cmp
mov
fnstcw
mov
push
push
sbb
sub
lcall
rcl
test
push
adc
cmp
out
in
mov
cmp
decl
push
in
ja
pop
out
add
mov
dec
in
xlat
popa
adc
cld
adc
mov
stc
lea
out
add
lcall
inc
ret
bound
cmpsb
inc
adc
pop
push
gs
sbbb
jmp
sar
push
repz
rcll
or
cwtl
insb
dec
icebp
loop
lock
adc
lcall
std
cwtl
inc
xchg
mov
cmp
adc
je
movsb
sub
xchg
xor
out
add
das
dec
pop
sbbl
sub
or
scas
pop
sahf
insl
aas
add
or
inc
push
push
cmpsb
lods
aaa
fidivrs
pop
fnsave
test
push
jo
ret
jmp
std
mov
mov
mov
adc
mov
sub
loopne
popf
mov
push
cmpsl
popa
int3
xor
mov
xchg
aam
and
or
and
aad
das
notb
bound
dec
push
push
jl
mov
in
jnp
shr
int
jnp
scas
mov
cmp
push
pop
mov
sub
or
push
push
shll
sub
ja
xor
dec
loopne
dec
xlat
loopne
push
arpl
ljmp
sbb
bound
add
sub
cmp
lret
cmc
add
add
mov
sbb
mov
das
out
js
pop
enter
add
nop
lahf
adc
jne
in
rcll
fisubrs
add
mov
cmc
lret
add
sbb
cmp
inc
fstpt
dec
cmp
jae
out
ja
std
stos
mov
hlt
test
sub
push
pop
nop
cmpsb
xorb
add
mov
mov
xchg
add
pushf
xor
add
dec
sar
aas
popf
into
cmpsb
repnz
cmp
addr16
and
sbb
mov
push
adc
push
test
or
movsb
xor
sahf
ja
in
cld
out
int
outsl
and
mov
lret
arpl
sbb
mov
mov
adc
or
lret
dec
pop
cmpsl
repz
mov
aad
shrl
lret
in
loop
pop
imul
jmp
sarb
inc
sub
or
mov
or
jne
mov
insb
cld
ret
xlat
mov
sub
cwtl
add
mov
mov
leave
mov
cmp
jle
mov
rclb
iret
ds
fs
jmp
enter
sbb
push
cmp
sub
jmp
roll
aam
dec
bound
inc
leave
push
adc
cltd
and
dec
mov
mov
jne
insb
sub
dec
inc
ja
jmp
push
jle
movsl
stos
sbb
mov
inc
daa
data16
mov
dec
pop
mov
mov
notb
jp
aad
les
in
mov
dec
adc
xor
scas
push
fcoms
call
es
jo
add
dec
ds
jg
cmp
inc
and
jo
dec
test
movsb
or
pop
add
clts
jnp
jg
or
scas
sub
sub
mov
inc
add
inc
fistps
cmpsl
adc
cmpsl
mov
push
and
mov
mov
dec
flds
ljmp
mov
ds
add
ret
adc
rcrb
mov
sti
dec
mov
xor
inc
int
push
sbb
cmp
jp
mov
mov
js
aaa
sti
and
dec
pop
mov
outsb
adc
pop
int3
sbb
pop
adc
lods
add
sub
mov
xor
cmp
js
sub
add
pop
adc
or
jl
push
rolb
insl
dec
daa
insl
inc
iret
loope
mov
sbbl
mov
xor
rorl
dec
stos
fbstp
ret
or
lds
inc
sbb
add
add
add
add
bound
sub
xchg
adc
and
inc
mov
cmp
popf
mov
call
xlat
fcomp
mov
inc
gs
imul
in
arpl
dec
adc
pop
dec
out
mov
lods
add
repnz
cmp
dec
fists
pop
mov
mov
inc
add
rorb
inc
or
stc
add
ljmp
mov
push
cmpsl
pop
pusha
mov
pop
cmpsl
subl
pop
cmc
pop
mov
clc
aam
add
shlb
out
pusha
rorl
andl
mov
ficoms
mov
mov
pop
pop
fldt
cli
jb
mov
mov
sbb
int3
int
arpl
insb
add
and
jle
lock
mov
leave
push
fstps
sub
incl
out
xor
gs
xor
arpl
hlt
sbb
sbb
adc
add
in
imul
popf
lods
or
sbb
pop
ret
pop
xchg
shll
cmp
xor
dec
sarb
push
or
ljmp
ret
inc
nop
pop
pop
push
push
test
fs
mov
hlt
mov
in
cmp
repnz
xchg
or
test
adcb
das
mov
pop
xlat
popa
lock
sti
xor
xor
stos
test
push
in
daa
ret
ljmp
fists
scas
dec
adc
mov
add
jmp
and
cmp
adc
loop
lret
rolb
jae
cld
inc
adc
mov
sub
inc
sbb
hlt
mov
push
test
out
test
insb
mov
jno
mov
xor
stc
pop
int
mov
mov
or
ljmp
in
mov
mov
mov
mov
jo
enter
push
mov
jg
jno
arpl
dec
push
inc
or
inc
mov
push
sub
jl
loopne
xchg
jg
and
pop
mov
out
in
gs
fsubl
jge
repz
aam
pop
mov
js
inc
mov
add
adc
stc
dec
sti
dec
xor
ds
adc
mov
ja
int3
xchg
mov
icebp
jp
cmp
clc
loope
push
jbe
jnp
add
mov
test
inc
aas
inc
and
lods
subb
mov
or
pop
in
dec
xor
adc
cmp
and
sub
sahf
repz
sbb
xor
mov
jae
cmpsl
xor
aaa
cltd
jne
mov
mov
cmc
add
inc
nop
mov
out
call
ret
fmuls
add
outsl
and
in
sub
lds
fbstp
icebp
popf
addl
aam
scas
ljmp
mov
xchg
rclb
cmp
lahf
test
nop
loop
sub
add
push
cmp
push
stc
outsb
faddl
fptan
push
stc
call
or
xor
xor
xchg
cltd
int3
fcomps
push
jg
cmp
call
dec
dec
hlt
out
enter
mov
sub
sbb
out
mov
and
cmp
sub
icebp
dec
shl
mov
mov
sbb
pushf
arpl
push
aad
testb
jl
daa
shrb
int3
jae
insb
lds
mov
enter
rcrb
mov
fstpt
xchg
jne
enter
push
ds
flds
or
and
test
jg
mov
aas
xor
jge
pop
sbb
push
ds
push
cltd
shr
addr16
adc
lods
push
mov
and
shl
and
push
jb
iret
and
or
jp
pop
out
rcrb
mov
mov
ljmp
jns
mov
js
mov
xor
jecxz
imul
fstp
sub
add
dec
jb
mov
aam
sbb
arpl
scas
pop
mov
ja
mov
ds
mov
cs
lds
pusha
cld
stos
fistl
mov
add
xchg
mov
push
xor
dec
mov
sbb
in
insl
add
pop
rorl
sbb
int
and
cmpb
lcall
jnp
call
or
jge
ss
icebp
push
jge
xchg
stc
add
jbe
or
adc
pop
adc
sarb
rolb
dec
das
xchg
mov
dec
ljmp
and
icebp
loopne
xor
imul
in
jg
cmpsb
sbb
dec
movsb
or
fmull
lret
lret
cs
fstpl
loop
neg
aas
sub
adc
cli
enter
push
mov
stc
aas
xorl
in
cs
fisubs
mov
divb
push
outsb
jo
sub
xor
mov
arpl
or
in
rorl
xor
jl
std
mov
fisubs
movsl
or
and
mov
adc
jno
mov
nop
xchg
mov
nop
out
sahf
lcall
cs
push
loope
rol
mov
pop
daa
pop
xchg
adcb
fsubl
push
dec
or
shrb
rorl
add
ficoml
cmpsb
cwtl
xor
popa
sbb
hlt
repnz
push
and
lods
insb
jo
sahf
cmp
jmp
push
push
pop
stos
bswap
jne
aas
mov
icebp
xor
or
and
cld
aam
stos
or
pop
stos
rorb
push
pop
mov
adcl
fisttps
xlat
lret
xchg
pop
inc
add
jp
hlt
cmp
ja
arpl
ds
cld
test
mulb
push
jge
aaa
mov
mov
push
pop
mov
je
shll
sbb
aas
push
sub
jp
cmp
sub
mov
call
xchg
push
or
in
push
fidivrs
in
dec
in
shlw
fsubl
pop
das
aaa
divb
fbld
jbe
in
divb
mov
mov
int3
das
lods
xchg
mov
mov
pushf
add
jno
xchg
repnz
clc
and
jbe
loope
test
mov
lahf
aad
adc
mov
lret
inc
jge
pop
outsl
jo
les
mov
sbbl
xchg
pop
jp
mov
testl
loop
movsb
cmp
dec
rcll
scas
sti
lahf
js
push
in
das
rcr
or
cmpsb
andb
xchg
push
bound
sbb
jmp
lods
mov
cmp
jmp
xchg
jo
push
push
inc
dec
aaa
loop
sbb
rcll
push
test
adc
rcll
sub
cltd
jbe
in
push
cmp
stc
cmp
jae
push
jge
roll
sub
dec
inc
lret
fstpl
xchg
dec
adc
test
lret
xchg
shrl
insl
sbb
dec
pop
mov
xor
movsb
or
and
rcrb
lret
nop
jbe
sahf
inc
dec
shrl
push
fisubrs
xor
inc
cmp
inc
pusha
sti
shl
mov
repnz
xchg
push
push
ja
sub
insl
repz
mov
and
call
lcall
out
nop
jno
pop
fsubs
les
subb
inc
push
adc
mov
icebp
dec
fnstenv
int
movsl
jb
stos
and
scas
outsb
mov
inc
xchg
cmp
ss
aad
add
jg
movsl
jmp
and
add
lods
or
sbb
into
xchg
hlt
addr16
enter
pop
dec
inc
imul
ss
push
jle
push
and
lret
daa
lea
enter
rcll
cmc
xor
mov
int3
scas
jb
insl
clc
xchg
mov
dec
push
ds
xchg
fsubrs
in
call
fwait
or
xchg
mov
lret
pop
push
cld
pushf
sub
push
and
das
in
out
inc
imul
jns
pop
or
aam
lea
loop
or
lret
es
iret
test
ss
push
sarl
or
lock
and
or
push
jl
sbbl
xor
mov
and
pop
fadds
sbb
inc
stos
push
sub
sbb
outsl
iret
mov
scas
fwait
mov
lods
leave
pop
out
xor
movsb
and
pop
inc
jo
cmpsb
shl
mov
push
push
or
imul
inc
push
dec
es
or
stc
out
push
jno
jp
cmp
subl
ljmp
sbb
push
out
loop
int3
out
xchg
sahf
cmpsb
pop
xchg
outsl
pop
aad
push
or
divl
mov
inc
int
or
test
dec
jno
adc
in
push
daa
inc
sub
mov
adc
xchg
inc
sbb
out
cmp
ret
rcrl
lds
and
xor
dec
mov
insl
pop
stos
aad
cltd
and
xchg
cld
jno
sahf
daa
gs
loop
inc
mov
rcl
push
xlat
or
and
sbb
adc
pusha
test
push
xchg
mov
std
pusha
and
imul
adc
test
xchg
push
or
add
add
mov
roll
jmp
pop
es
jp
sbb
pop
adc
aaa
lea
push
icebp
sub
repnz
roll
stos
jb
adc
fstp
pusha
inc
sti
jge
lcall
repz
or
add
pop
cmpsb
mov
das
int3
push
movsb
mul
cltd
push
pop
in
or
sub
pop
jb
push
das
aas
test
das
lret
push
test
mov
jle
ret
icebp
lcall
das
add
lea
rcrb
divl
jne
jae
mov
in
sub
ret
cwtl
shrl
mul
mov
xor
add
sahf
push
cmpsl
hlt
cmp
test
mov
push
jne
lret
and
js
mov
add
mov
jno
add
mov
mov
loopne
sahf
nop
call
mov
sti
dec
jmp
jge
in
test
sbb
xor
push
mov
and
cmp
out
imul
push
pop
out
jge
dec
jnp
cli
jae
test
mov
jg
sub
and
jle
loop
jg
cmp
aaa
dec
inc
add
push
in
cli
loop
cmc
and
mov
jle
adc
mov
add
jo
push
pop
sbb
inc
pop
push
pop
push
add
mov
movsb
mov
and
push
pop
rorb
inc
popf
cs
adc
lods
popa
jae
jno
mov
mov
aaa
in
push
xor
inc
in
stos
sbb
xor
xor
push
or
leave
cld
movsb
jo,pt
das
or
js
push
xor
and
pop
int
aaa
cmp
les
inc
das
jno
int3
cwtl
sbb
stc
movsb
xor
dec
push
flds
neg
nop
sub
dec
fwait
shll
mov
inc
arpl
xor
outsb
sbb
dec
push
mov
pop
mov
fstps
jo
cld
sbb
adc
jecxz
cmpsl
ret
lret
xor
out
mov
cmp
jb
sub
dec
rorl
sub
xchg
jne
add
aad
jecxz
mov
or
mov
or
mov
outsl
xor
out
repz
shlb
imul
inc
ds
pop
testl
imull
mov
test
sti
sahf
popf
cmpsb
rorl
sti
out
inc
ja
mov
cltd
xchg
lods
dec
or
jns
rcrl
cmp
lret
jae
dec
jae
lock
sub
push
jne
jo
loop
pop
mov
arpl
mov
jmp
repnz
cmpsb
sub
xor
inc
test
aam
pop
hlt
lahf
xchg
sbb
mov
jb
pop
add
insl
out
adc
cmp
cmp
sbb
add
push
movsb
insb
gs
sub
int
xor
lret
jnp
cmp
faddl
mov
pop
cmp
imul
aaa
int3
adc
mov
xchg
jo
pop
mov
jbe
fmul
xchg
rcll
fwait
add
sbb
xchg
push
mov
or
fldcw
imul
scas
fwait
sbb
inc
lea
jb
je
and
rcrl
jle
ret
sub
out
xor
sbb
data16
xor
add
jp
insl
adc
daa
inc
dec
jnp
push
shlb
adc
dec
jno
sbb
mov
ja
jle
stc
iret
add
push
xor
push
mov
rcrl
cmp
or
mov
jmp
push
or
sti
outsb
pop
inc
sbb
mov
dec
shlb
shl
cmp
inc
dec
push
and
jnp
mov
mov
mov
or
mov
fnstsw
lock
hlt
pop
ret
sub
inc
mov
xchg
mov
push
and
jb
insb
inc
imul
jo
xor
lods
clc
outsb
push
mov
and
sbb
push
pop
and
add
lret
xchg
cmp
jmp
mov
and
outsb
mov
or
icebp
sub
mov
xchg
loope
popa
shlb
cli
insl
out
jb
pop
aad
and
mov
or
jb
addr16
incb
fwait
adc
clc
mov
out
cmpsl
or
es
adc
or
and
pop
loopne
negl
jno
mov
and
jp
cli
ds
jns
jno
cld
mov
jb
push
notl
cmc
fs
addr16
ret
divb
pop
movups
das
sub
sub
mov
push
inc
movsb
inc
testb
cmp
xor
clc
gs
int
in
dec
test
insl
jne
aaa
xlat
push
fwait
and
dec
mov
daa
das
cmp
mov
sbb
lahf
mov
shr
mov
push
cs
outsb
jbe
xchg
mov
inc
cmp
orl
pop
insl
add
pop
mov
jle
pop
icebp
mov
ljmp
rorb
sbb
and
test
enter
inc
mov
push
mov
sub
lds
mov
dec
aas
gs
jle
insl
loope
jl
pop
mov
rol
aad
stos
dec
movsl
cs
fadd
cltd
outsb
lea
aad
int3
fnstsw
xorb
das
pop
cli
je
stos
popa
mov
mov
pop
push
shll
fnclex
jno
jp
xor
js
pop
outsb
ljmp
push
xor
ss
jle
cltd
lahf
mov
mov
aam
xor
jecxz
mov
inc
daa
xchg
sbbb
xchg
jg
and
jae
adc
inc
dec
pusha
pop
cmp
loopne
and
mov
pop
sub
jmp
flds
push
adc
jmp
scas
mov
mov
push
inc
mov
and
inc
in
fsubrs
push
lds
sub
sahf
or
xor
xchg
cmpsl
push
and
xor
imul
sbb
std
cmp
mov
sbb
pop
pop
stc
mov
xlat
repz
or
add
lea
nop
push
call
mov
loop
lcall
aaa
pop
add
leave
pushf
js
cmp
sarb
xor
xor
dec
adcb
in
ja
cmp
outsb
movsl
xchg
mov
push
int
cmp
insl
pop
loopne
ds
stc
outsl
xchg
aaa
and
pop
sbb
shrl
mov
scas
jge
jp
cmp
out
mov
mov
jle
xchg
int
pop
faddl
shll
and
xchg
cvtps2pi
and
adc
out
dec
out
push
xlat
test
cwtl
aad
leave
dec
fnstsw
shll
in
and
mov
sbb
xchg
ficompl
jl
pusha
xchg
pop
sbb
sarb
jl
cmp
mov
push
jo
iret
sub
ret
pop
lret
jg
and
cmpsb
mov
ret
inc
adcb
inc
movsl
push
jg
jns
stos
jns
cmp
movsb
mov
sbb
popf
xor
push
testl
jge
xor
in
sub
xor
je
cmp
ss
aas
ret
or
jmp
movsl
fs
fcmovnu
lods
rcrb
push
mov
fnstsw
nop
stos
cs
addr16
inc
mov
or
test
dec
and
xor
jmp
cmpsl
push
ret
xor
addl
sbb
jp
int
rcrb
in
jnp
inc
dec
insl
mov
insl
iret
imull
sbb
mov
orb
pop
dec
mov
ror
orps
lods
sbb
mov
xchg
scas
xor
popf
adc
int3
inc
push
xor
add
or
add
in
sbb
out
dec
xchg
xchg
cld
adc
mov
xor
shrb
push
leave
and
lods
lahf
addr16
and
lods
push
mov
sbb
popa
push
in
xchg
xor
lea
int
imull
push
xchg
xor
push
xchg
imul
or
mov
cmp
xchg
mov
loopne
pushf
out
rclb
jno
clc
movsb
in
ret
mov
int3
cs
sub
in
push
inc
xor
sbbl
call
jecxz
aad
sti
add
imul
enter
in
fidivrs
mov
add
movsb
jge
pop
mov
or
int3
sbb
xchg
mov
adc
xor
jle
aas
lahf
test
add
push
push
ud1
lods
mov
loope
pop
sti
ss
xor
fld
pop
mov
outsl
mov
pop
dec
mov
jne
jbe
js
adc
mov
jle
pop
push
pop
mov
mov
or
sbb
xor
adcl
dec
inc
jb
lock
ss
cmp
sbb
mov
inc
sub
and
push
js
xchg
scas
mov
mov
addr16
cltd
scas
or
mov
bound
stc
adc
xor
sub
sub
shl
into
cmp
pop
test
push
bound
push
int
dec
lods
jmp
aad
ljmp
or
xchg
lea
lods
std
xlat
mov
xor
push
or
test
push
pop
ja
leave
pushf
ret
fcompl
xchg
lret
or
test
mov
pop
xchg
xchg
fmull
lods
mov
lea
popf
dec
lcall
mov
dec
sbb
in
mov
cmp
jl
js
add
rclb
sahf
loopne
cmc
xor
cmpsl
pop
jbe
mov
sub
inc
pop
shlb
daa
mov
xor
mov
out
mov
push
sbb
mov
mov
lock
pop
sbb
js
jecxz
push
xchg
movzwl
push
push
lret
or
mov
call
xchg
insl
out
fnsave
ja
sub
add
loope
dec
les
cltd
cmpsl
out
stos
js
lods
and
ljmp
lock
dec
ret
shlb
ret
in
inc
out
or
cld
jle
aam
fidivrs
rclb
add
push
xchg
aad
mov
xchg
inc
adc
mov
sbb
pop
mov
jb
cltd
bound
pushl
mov
mov
or
inc
fs
mov
out
repz
imul
in
adc
sbb
sub
sub
dec
push
push
and
aam
enter
push
jno
xlat
fimuls
jno
dec
add
mov
jno
enter
push
mov
pushf
cmp
std
cwtl
jp
xlat
mov
test
jnp
pop
push
mov
nop
push
cmpsl
and
lahf
imul
fldcw
sahf
cmp
mov
xor
inc
xchg
xchg
clc
push
cmp
mov
xorl
test
aaa
jnp
mov
lcall
fimuls
mov
dec
xor
xchg
int
mov
in
hlt
xchg
inc
repnz
jne
rclb
mov
and
stos
mov
mov
out
test
push
push
and
call
sbb
sub
faddl
mov
in
negb
jp
push
sarl
dec
ds
popf
lcall
adc
push
inc
inc
dec
push
fxam
xchg
lods
cmpsl
sahf
fsubrs
ss
jb
mov
push
xor
add
outsl
jae
sub
pop
ljmp
stos
and
and
jne
mov
movsl
push
and
outsb
fstps
push
insl
xor
jo
push
pop
popa
loopne
lcall
rol
push
lcall
movsl
scas
push
roll
jb
adc
dec
mov
cmp
xchg
dec
adc
pop
mov
push
negl
mov
bound
std
je
dec
fs
aaa
cli
mov
xchg
xor
lods
mov
gs
stos
rcll
xor
mov
inc
adc
fisubs
rcrl
pop
mov
xor
push
lret
scas
pop
jecxz
pop
xor
repz
mov
outsl
icebp
push
cmp
iret
stos
jmp
outsb
jo
imul
mov
sbbb
mov
xlat
cmpsl
lods
cmp
and
scas
stc
rorb
push
test
mov
addr16
clc
mov
adc
rcll
ljmp
pushf
push
or
mov
lea
adc
and
xchg
lods
into
mov
lahf
imul
jl
jecxz
sti
std
sbb
sub
add
and
lods
and
cmp
mov
dec
adc
jmp
cs
pop
pop
push
xchg
cmc
pop
pop
in
inc
cmp
xchg
adc
mov
outsl
pop
setg
jne
add
fwait
lds
add
ss
mov
push
popf
push
push
stc
lods
pop
daa
mov
aad
dec
xchg
int3
data16
xchg
add
xchg
pusha
shll
jne
inc
aad
inc
adc
sbb
sub
sbb
pop
mov
cmpl
les
xor
mov
ficompl
cmp
pop
and
push
cmp
cmp
add
add
pop
inc
insl
stos
mov
xor
xchg
jecxz
sub
or
inc
clc
jg
add
xor
arpl
addr16
sti
jo
out
movsb
lahf
icebp
mov
mov
ficomps
test
scas
jo
cmp
inc
pop
notl
aam
gs
mov
cmp
movsb
pmuludq
xor
xor
inc
xchg
pop
dec
mov
frstor
std
dec
leave
js
pushf
int3
loop
sti
jo,pn
lret
inc
sub
push
add
out
int3
rcr
or
cltd
sub
les
adc
sahf
sarl
popa
aad
in
mov
add
cmp
xchg
adc
dec
popf
sbb
jl
mov
or
inc
inc
sub
das
xchg
out
mov
fwait
lret
sub
and
repz
mov
mov
push
lea
cmovns
pop
data16
sub
fstpt
es
ror
xchg
test
mov
mov
mov
scas
mov
repz
inc
jo
inc
sub
or
sbb
add
lock
inc
stc
addr16
sub
fists
cmc
negb
and
gs
jnp
aam
in
or
adc
dec
lds
push
push
imul
lcall
jl
or
cmp
jno
pop
sub
loop
mov
fwait
dec
cmc
jno
dec
mov
icebp
in
stos
je
add
inc
addr16
aas
xor
jp
cltd
dec
fisttpll
leave
in
inc
in
addr16
jb
pop
cmpsb
ss
repz
fmulp
loop
stos
jge
jl
ret
lret
mov
stos
inc
int3
fpatan
mov
outsb
jge
adc
dec
adc
lret
jmp
mull
jnp
xchg
stos
nop
cwtl
outsl
aad
sub
cltd
push
daa
das
sub
cmp
mov
jecxz
jae
adc
cmpl
lds
and
sub
or
mov
aad
cmp
aas
and
dec
dec
pop
adc
jns
jns
sbb
imulb
pop
addl
in
push
xchg
jbe
cs
cld
inc
dec
jns
frstor
bound
imul
lea
flds
pop
and
jns
mov
jo
jae
int3
and
adcb
mov
jp
sbb
loope
pop
cli
arpl
std
inc
xor
sub
test
pop
ss
lods
lods
or
aaa
or
ret
jae
stos
push
roll
outsl
imul
pop
out
shl
icebp
popa
mov
js
bound
int3
add
sbb
cmp
push
pop
mov
incl
mov
dec
and
jb
popf
imul
mov
mov
jo
js
dec
lds
xchg
fsubs
xchg
jecxz
inc
jbe
pop
arpl
scas
std
out
jns
test
lret
mov
cli
les
out
xchg
mov
aas
testl
ss
in
dec
xchg
daa
or
imul
jp
mov
mov
shll
movsb
jo
mov
xchg
cmp
inc
cwtl
push
pop
mov
aaa
in
inc
mov
and
int
xor
rcrl
rcr
push
mov
mov
ss
sub
or
mov
dec
dec
xor
sub
xorl
jne
test
movzwl
loopne
lret
sahf
dec
je
jae
xor
mull
addl
mov
fisubl
shll
int3
sub
scas
shll
and
jmp
mul
jne
sub
push
cltd
in
rolb
dec
les
jp
jns
stos
in
mov
or
out
loopw
scas
mov
es
adc
aaa
mov
pop
je
push
nop
jo
inc
xor
add
mov
pusha
fstpt
push
mov
sti
das
rorb
loope
ljmp
shll
aas
jmp
ret
cmp
scas
mov
pop
pop
test
sbb
insl
or
and
stos
pavgb
mov
xlat
test
mov
scas
cmp
ds
and
pushf
jo
jae
and
jg
shl
lea
es
jge
std
adc
mulb
mov
dec
pop
repnz
loop
mov
divb
int3
insl
inc
ds
cmp
icebp
std
mov
test
adcl
jle
lea
das
mov
mov
sub
xor
sahf
dec
insl
push
scas
mov
cmc
mov
xor
insb
dec
xchg
call
xor
cmp
xor
inc
in
call
cmp
loop
ja
fimuls
leave
sbb
mov
pause
xchg
xchg
push
testl
cltd
clc
or
pop
mov
lods
iret
push
outsb
jae
movsl
jno
lods
movsl
or
adc
leave
cmpsl
in
cltd
xchg
ret
insl
dec
push
pop
dec
dec
decl
mov
and
pop
les
mov
lock
orb
call
sti
sub
jbe
xorb
subl
pop
daa
flds
stos
cmpsb
jmp
cmp
gs
or
mov
adc
or
lods
xchg
push
cmp
call
addl
fnstcw
or
mov
int3
inc
aaa
mov
mov
push
push
dec
ja
dec
int3
and
clc
mov
adc
fistps
xchg
test
aad
dec
iret
dec
inc
es
adc
cltd
push
adc
fbstp
mov
stos
mov
lcall
test
adc
mov
fstpl
jmp
clc
mov
std
cmp
dec
xchg
test
faddp
jp
hlt
xchg
add
in
dec
jb
shll
push
gs
xchg
data16
sarl
xchg
fwait
dec
aam
das
cmp
pop
loopne
inc
dec
xor
inc
mov
sbb
push
addr16
sub
orl
dec
or
mov
jne
mov
daa
sbb
push
sub
mov
aas
push
repz
mov
pusha
pop
mov
scas
lahf
fstpt
add
icebp
jo
aas
enter
mov
push
repnz
mov
mov
std
imul
pop
sbb
test
pop
in
sub
jle
sbb
pusha
neg
shll
sub
push
outsl
jmp
dec
pop
pop
in
mov
or
dec
xor
jo
fsubs
sub
jne
test
fcompl
jo
pushf
jns
inc
cwtl
pop
sbb
xchg
push
ds
sti
and
jb
xlat
push
sub
pop
je
loop
mov
dec
add
push
xor
lds
out
sbb
adc
push
push
pop
jmp
das
pop
push
push
adc
dec
mov
xor
jo
adc
mov
xor
lods
mov
lcall
jmp
inc
daa
adc
cmp
sub
dec
pop
mov
add
cmpl
inc
adcb
add
jmp
addb
push
or
pop
mov
add
into
fwait
call
pop
or
xchg
in
les
fs
jbe
dec
lahf
addr16
jbe
lcall
xor
and
jnp
push
dec
inc
shlb
lods
in
inc
pop
into
sub
sub
mov
push
inc
and
dec
and
push
jae
cmc
push
mov
loopne
icebp
ret
lods
inc
mov
and
dec
push
sbb
scas
dec
or
notl
dec
scas
fildll
pop
lahf
mov
adc
xchg
mov
mov
mov
mov
push
lods
cld
sub
xor
xchg
imul
cmp
movsl
inc
pop
sbb
pop
xor
div
out
adc
sub
fs
xor
cmp
mov
sti
aaa
lcall
nop
and
mov
inc
push
aad
lea
xor
adc
xor
or
out
pusha
shll
xsha1
cmpsb
or
and
call
push
sbb
nop
sbbl
cmc
jno
inc
cmpps
mov
dec
mov
test
leave
jns
insb
sahf
ds
fwait
sahf
je
into
fldpi
xor
add
adc
add
or
ficoms
xor
and
hlt
sub
out
inc
push
xlat
pop
cmpb
ficoml
movsb
paddusw
movsb
mov
pop
outsl
ljmp
xchg
mov
lcall
push
jo
aad
jnp
adc
hlt
arpl
bound
jae
add
add
mov
xchg
push
femms
es
idivl
mov
xor
cmp
lret
js
cs
xor
jnp
sub
xor
aas
in
popf
pop
or
dec
and
rorl
int
jns
call
and
mov
sbb
dec
mov
inc
test
jne
or
sub
and
and
test
in
test
in
add
push
repz
jns
fwait
stc
xor
stos
push
push
pop
call
dec
sti
aaa
and
jmp
inc
xchg
in
dec
push
add
xor
out
test
mov
cltd
push
mov
shlb
push
mov
add
rcl
int
rolb
popa
int3
icebp
mov
mov
xchg
pop
aam
or
data16
lock
sbbb
sub
pop
and
inc
data16
or
das
xchg
cmp
jo
mov
mov
in
ret
sbbl
push
daa
jne
outsb
sub
dec
mov
subb
pop
cmpsb
imul
mov
lds
push
ja
mov
xchg
lcall
ds
movsb
rolb
aad
push
cli
push
shrl
pop
insl
jo
inc
xchg
push
add
push
xor
mov
dec
daa
jne
stc
out
std
jae
out
jle
cmp
push
mov
data16
xor
jo
inc
daa
pusha
sti
dec
xor
aam
out
xor
fdivrl
pushf
jo
ret
and
pushf
fs
inc
or
or
ret
adcb
adc
pop
popa
lods
mov
aad
pop
push
int3
repz
std
cmpsl
jno
mov
insb
cmp
aaa
inc
sub
and
fstpt
pop
cmp
std
andb
xlat
mov
fidivs
dec
fisubrl
int3
mulb
mov
adc
repnz
lods
lea
dec
jns
repz
mov
push
loop
jae
add
mov
stos
cmc
and
xor
fnstsw
fsts
ds
add
out
fcoml
sub
jnp
jne
xor
shrl
nop
sub
pop
sbb
fwait
aas
or
inc
mov
mov
pop
cwtl
mov
adc
shlb
jecxz
cmp
push
add
push
dec
jecxz
cli
pop
xchg
fucomip
dec
mov
negl
out
xchg
jo
cs
mov
or
push
and
push
pop
fwait
movl
clc
adc
sub
ja
and
sbb
bound
dec
stos
and
sub
fmulp
mov
ja
lret
jle
mov
nop
lods
add
cmc
pop
pop
inc
mov
rorl
and
outsl
es
mov
adc
mov
cmp
add
pop
add
scas
add
lret
sub
enter
jmp
sahf
aaa
xchg
movsb
fcoms
cmpsl
jne
inc
repz
mov
push
sub
repnz
out
adc
push
jle
jae
push
add
leave
xchg
std
es
push
mov
sti
rcll
mov
jo
mov
xor
scas
je
daa
stos
add
repnz
sbb
cmp
push
stos
mov
cmp
pop
out
movsb
pop
js
ffree
std
rcr
adc
sbb
jg
mov
jns,pt
inc
jle
sbb
cmp
clc
mov
and
push
lock
jle
mov
jecxz
sub
sub
and
add
and
sbb
ljmp
or
adc
repnz
movsl
addr16
jge
in
mov
sub
test
repz
dec
sub
movsb
mov
test
and
aam
inc
mov
jo
adc
mov
sbb
pop
lock
into
mov
fdivl
mov
sub
mov
xchg
xchg
mov
shll
sub
rcrl
lock
jne
pop
pop
or
push
leave
xchg
push
dec
mov
add
rol
mov
or
imul
loope
scas
lock
insb
sti
sub
stos
xchg
sbb
pop
or
mov
out
mov
and
xor
addr16
lret
adc
dec
lahf
xchg
jo
movsb
push
add
cmp
movsb
sti
scas
iret
jnp
jecxz
rclb
mov
xchg
movsb
or
sub
dec
adc
inc
std
sbb
mov
xchg
and
jbe
shrb
mov
sub
addr16
xchg
pop
sbb
and
inc
adc
imul
ljmp
into
xor
mov
mov
popf
arpl
mov
mov
cmp
lret
lahf
jb
mov
aad
add
fidivrs
push
rorb
fsubs
mov
mov
jecxz
sub
and
dec
inc
xchg
xchg
dec
subb
pusha
imul
inc
lret
xlat
cmp
repz
xor
out
cld
or
fildl
pop
cmpsl
out
cmp
dec
sub
xchg
pop
push
inc
outsl
adc
arpl
icebp
inc
xor
cmp
cmp
xchg
adc
sbb
xor
bswap
cmc
adc
sbb
pop
mov
push
jb
lds
int3
xchg
or
int3
notb
inc
or
push
gs
data16
dec
jle
or
or
mov
test
or
imul
push
icebp
je
ret
stc
div
clc
in
mov
push
push
mov
scas
xor
lock
sub
outsl
mov
popa
mov
or
or
ror
mov
cmp
xlat
pop
mov
jne
inc
push
pop
xor
lods
sbb
lods
cmp
in
and
push
or
dec
xor
fucomip
mov
lcall
rep
push
les
ret
push
outsb
mov
mov
jle
mov
mov
gs
repnz
jae
jo
push
mov
xor
mov
sar
jmp
arpl
xchg
sbb
xchg
adc
lods
xlat
add
in
outsl
sbb
sub
push
sub
orb
stos
loope
sub
jmp
andb
sbb
test
or
inc
mov
into
adc
out
mov
subb
push
mov
aam
adc
fdiv
stc
repnz
sbb
iret
mov
sub
test
fwait
jmp
ret
loope
out
push
movsl
hlt
push
shll
push
aas
out
insl
clc
mov
sbb
sbbb
mov
stos
mov
inc
jl
mov
mov
hlt
pop
pop
mov
imul
rolb
mov
inc
bound
jle
and
sbb
fiadds
jp
push
add
lret
or
jg
repnz
xlat
mov
add
and
push
out
or
mov
dec
sahf
mov
and
ficoms
test
mov
xor
mov
stc
pop
in
lret
jns
fmulp
mov
push
mov
loop
lcall
or
jmp
enter
push
jbe
pop
cltd
dec
out
jmp
xor
scas
test
cmpsl
push
xor
shrl
subb
mov
sub
jecxz
nop
icebp
xchg
and
or
xor
inc
mov
je
psadbw
cmc
pop
mov
dec
aad
lret
ljmp
xor
icebp
jo
dec
fwait
jne
adc
push
pop
add
ret
sub
cmp
subb
xorl
mov
sub
addl
or
jae
mov
sub
dec
pop
lods
jne
mov
dec
mov
adc
jp
inc
int3
fstpl
sub
xchg
arpl
mov
push
xchg
and
inc
mov
sub
mov
sbb
lea
push
push
mov
jmp
movsl
mov
ret
fsubrl
repz
pop
aas
lods
rcrb
dec
rorl
push
test
fisubrs
ss
add
call
mov
aaa
incl
ja
inc
cmc
cmc
shrd
xchg
rcrb
jge
jmp
pop
jmp
out
std
adc
sbb
jne
cmc
jo
lods
in
pop
mov
lods
stos
out
sbb
mov
stos
sub
sub
mov
adc
daa
xchg
xor
iret
and
pusha
or
mov
les
rolb
lahf
aad
dec
and
mov
jp
std
out
push
mov
push
fldl
jmp
jmp
mov
lret
mov
mov
and
mov
nop
je
xlat
add
xchg
mov
dec
stos
pop
cmp
adc
movsl
dec
mov
test
aaa
call
test
out
adc
or
clc
cwtl
ja
push
cmp
push
decl
sub
adc
and
out
mov
mov
fistpll
cmp
outsl
fwait
dec
add
insb
push
mov
and
popa
and
sarl
loopne
inc
add
out
xchg
adc
dec
pop
push
pop
add
cmp
stos
pop
push
push
jmp
jge
and
std
xchg
mov
fldln2
adc
std
adc
xlat
jl
lret
shll
cmp
fbstp
xchg
inc
jg
repnz
cs
mov
enter
arpl
stos
fmuls
lahf
or
mov
xchg
sub
ficomps
add
movsb
aam
roll
mov
sbb
and
xor
add
stos
cmpsb
dec
xchg
and
out
in
mov
adc
pop
call
stc
cmc
pop
xor
xchg
jae
mov
cli
cmpsb
out
data16
lahf
ja
enter
pop
je
icebp
bound
lcall
pushf
fs
lret
pushf
fdivs
and
push
outsb
scas
arpl
jb
adc
jne
call
xchg
jo
xor
test
shl
sbb
push
xchg
cmpb
fdivr
sub
test
sub
fs
into
subl
mov
pop
xor
scas
hlt
fldcw
iret
sub
mov
xor
mov
xor
fnstenv
lds
sub
icebp
sbb
sub
mov
dec
cltd
push
mov
mov
arpl
add
xlat
les
dec
add
add
add
dec
aad
push
sbb
mulb
push
int3
lret
or
lahf
or
push
test
mov
ja
sti
add
sbb
sahf
jo
mov
xadd
pop
mov
cli
repnz
divb
hlt
in
fisttpll
ja
mov
lea
push
mov
or
clc
and
cmp
push
mov
cmp
lcall
popf
jg
es
in
loope
dec
fidivrs
add
mov
scas
mov
dec
cmp
stos
icebp
ret
jmp
cli
into
pop
iret
fimull
xor
pause
push
dec
int3
mov
notl
dec
fcompl
in
fcomp
sub
pop
sbb
mov
sub
fadds
or
sub
les
cld
pop
divl
cmpsl
mov
outsb
ret
js
clc
xchg
mov
scas
lahf
push
mov
je
adc
int3
sub
jg
testl
loopne
test
push
or
dec
sar
iret
mov
cwtl
in
mov
mov
push
in
dec
dec
lods
xchg
dec
sub
push
pop
inc
jecxz
imul
aad
pop
xor
dec
jnp
stos
iret
sbb
jl
mov
mov
adc
add
inc
jae
mov
stc
push
sbb
and
mov
imull
jmp
int3
testl
push
daa
loope
out
into
dec
popa
les
and
xchg
mov
pop
cmc
xchg
es
xor
xchg
push
lea
ret
ds
popl
js
addb
jl
movsl
and
es
movsb
mov
push
jnp
in
or
cltd
mov
and
push
inc
dec
adc
push
aam
sub
sti
and
add
fbstp
lock
xchg
lret
jl
add
fs
into
inc
xor
in
lret
in
stos
mov
popa
lcall
mov
call
jne
stos
pop
cmpsl
jmp
sbb
shll
cmp
jl
push
push
pusha
movsl
jp
pop
xor
mov
add
cmpsb
inc
nop
xchg
daa
pop
lods
data16
add
popl
fcomps
in
and
inc
lds
add
out
mov
std
cmp
xor
icebp
std
add
cmc
add
sbb
xlat
bound
and
xchg
icebp
daa
roll
xor
mov
jo
dec
pop
xor
fwait
or
mov
sbb
adc
ljmp
dec
lret
ja
mov
xchg
push
data16
loope
fcoml
sahf
mov
dec
xor
out
push
pop
adc
nop
cltd
in
je
and
arpl
xchg
cs
shr
inc
pusha
jne
mov
push
loope
stos
xchg
stos
mov
inc
xchg
sbb
mov
adc
push
adc
push
and
or
cmpsb
subl
dec
dec
lcall
repnz
pop
hlt
test
cmpsb
jle
pop
sbb
ror
mov
imul
mov
mov
insb
add
gs
aaa
push
xor
add
sbb
dec
push
or
imul
pop
pop
mov
add
sub
sbb
call
shrb
lcall
add
dec
sarb
inc
sub
xor
or
mov
bound
int
shrl
fs
fimuls
jbe
mov
mov
fimuls
cmc
push
and
and
xchg
aaa
cld
adc
xchg
and
jns
adc
idiv
and
or
adc
or
gs
das
inc
daa
cmp
push
or
inc
pop
out
mov
fwait
je
scas
mov
xchg
jae
bound
inc
xchg
fisttps
aaa
mov
jmp
jno
mov
lods
enter
cli
xchg
insb
jns
inc
arpl
dec
loop,pn
gs
mov
std
xlat
mov
ficompl
sbb
lea
cmpsl
rcll
sub
jp
fcmovu
leave
lock
iret
push
push
lods
jno
xchg
outsb
bound
fwait
and
mov
xchg
mov
and
cmp
mov
push
sub
and
inc
ja
fwait
push
cli
inc
lea
mov
jecxz
pop
pushl
sahf
xchg
in
mov
lret
fs
mov
xor
or
aaa
push
dec
inc
jmp
aam
test
xor
dec
mov
insb
ja
outsb
popa
or
cmp
stc
test
pop
in
js
subl
data16
mulb
cmpb
leave
data16
cmp
mul
fisttpll
repnz
jp
andb
mov
loop
dec
stos
mov
mov
pusha
mov
push
mov
insb
test
mov
dec
mov
pop
and
gs
nop
cltd
dec
lock
pop
and
stc
pushf
add
cmpsb
add
or
adc
shl
ret
and
das
pop
push
jl
dec
adc
sbb
dec
xor
and
cmp
sti
mov
push
ffree
int
or
sbbl
call
call
lods
enter
ljmp
inc
rcr
fwait
jns
cmp
push
aam
lea
addr16
mov
xchg
cli
lret
enter
and
pop
ds
movb
orb
add
ljmp
int3
mov
icebp
int3
dec
mov
scas
lret
add
xchg
xchg
dec
cmp
sub
mov
and
mov
xchg
fwait
mov
js
add
and
push
mov
addr16
shlb
add
add
mov
shrb
jne
dec
imull
fs
lods
jecxz
cmp
mov
jne
cli
mov
dec
dec
push
add
push
into
mov
stos
xchg
xor
dec
fcmovu
sub
lods
mov
xor
pop
fmull
out
add
lret
dec
fldl2t
xlat
push
sub
or
std
pop
dec
xlat
imul
jbe
or
and
or
pusha
stos
into
stos
sub
in
push
xchg
out
adcl
testl
jb
cli
xor
test
mov
xor
pop
shll
lcall
popa
and
cmp
mov
sub
xchg
cmp
add
push
aad
mov
sbb
into
pushl
fiadds
mov
out
jb
xor
icebp
and
adc
xchg
call
lock
jg
mov
pop
shl
jo
ds
sub
test
cmp
je
pop
dec
cld
jg
hlt
out
out
loopne
push
rorb
and
mov
cmp
ret
push
add
mov
test
push
xor
aaa
sub
hlt
sbb
push
loopne
push
sbb
call
fcmovnu
icebp
cmp
dec
sbb
xor
notb
sub
rcl
or
vunpckhps
stos
or
in
stc
jo
push
in
push
movsl
cmc
mov
sbb
test
mov
adc
sti
repnz
icebp
sub
mov
rol
rcll
inc
fldcw
leave
insb
xchg
xlat
ljmp
cmp
fldl
shlb
and
test
leave
jbe
test
mov
push
jl
pusha
out
mov
push
inc
push
push
pusha
jb
mov
in
pop
psubusw
jb
sub
in
ret
dec
sub
incl
or
sbb
lds
arpl
jb
sarl
fld
jecxz
inc
clc
mov
sbb
mov
repz
iret
mov
lock
cmp
mov
jle
dec
mov
enter
xor
mov
or
dec
lahf
push
pop
mov
dec
jmp
sub
in
adc
jno
fistl
dec
xchg
test
inc
xorl
call
mov
push
aaa
xor
sbb
lock
test
jl
aas
and
dec
fldenv
fsubp
mov
and
jbe
stos
insb
dec
fisubs
jnp
jno
arpl
push
lods
fsts
jecxz
out
add
xchg
jbe
xchg
mov
popl
pop
pop
jge
nop
xchg
ja
idivb
and
mov
jno
push
and
loope
ds
or
aam
scas
les
jmp
daa
xor
adc
ljmp
dec
mov
mov
cmp
test
pop
lea
or
adc
mov
add
dec
filds
sti
mov
cmp
movsb
xor
loope
sbb
mov
fldt
mov
lock
xchg
mov
sbb
flds
push
pop
fcoms
leave
fs
mov
sub
daa
mov
push
xchg
and
xor
xor
inc
or
loopne
xor
mov
mov
push
clc
fwait
ss
negl
or
negl
leave
and
sbb
xchg
sub
push
sarb
fcmovnb
out
xor
sti
jmp
xlat
or
mov
loop
adc
stc
pop
and
pusha
jbe
inc
rcll
mov
cltd
lods
cmp
sahf
sbb
pop
outsb
lcall
dec
mov
adcl
xchg
fidivrs
add
test
mov
adc
cmp
das
jecxz
dec
sbb
sub
mov
jp
and
inc
cmc
into
insl
aad
cmp
gs
cwtl
cld
test
pushl
push
push
xor
push
mov
mov
mov
jecxz
jmp
mov
outsl
popf
daa
clc
loopne
sub
cmp
lret
rorl
dec
nop
shrl
pop
lret
cmc
dec
fnsave
sbb
pop
dec
jno
test
sbbb
mov
ja
pop
shrl
js
cli
dec
add
icebp
cmc
and
ret
push
push
sbb
sub
pop
mov
hlt
int3
xor
mov
mov
mov
push
cmpsl
push
xor
fs
cmpsl
cmp
pop
cmp
out
loopne
lcall
xlat
dec
arpl
lock
lea
inc
mov
loop
aam
jno
in
xchg
mov
and
mov
sub
cmpsb
lret
sbb
scas
jge
cmp
push
insl
xor
out
add
push
pop
mov
popa
lcall
jb
sub
cmp
push
jmp
outsb
out
aaa
fsts
xchg
pop
arpl
popa
xchg
cltd
mov
mov
xchg
into
mov
enter
add
lods
rol
imul
fcomi
cmpl
movsb
add
or
or
or
sbb
lock
scas
rorb
xchg
cmp
xor
les
enter
mov
sub
cld
jno
jmp
lret
faddl
and
sbb
mov
mov
lock
sahf
notb
jle
and
inc
xchg
jle
cmp
push
into
lods
stos
push
lcall
mov
inc
fsubrs
jae
inc
cmp
bound
js
or
and
arpl
push
into
mov
sahf
loope
and
cs
cmpl
mov
jae
xor
lea
push
rorl
jl
push
inc
add
iret
xor
lock
into
push
or
mov
lods
pop
ret
push
mov
ja
dec
adc
pop
cmc
repz
mov
pop
call
test
lock
mov
xor
sbb
popl
aaa
addl
pop
lds
pop
ds
mov
pop
mov
pop
dec
push
cmp
jg
jbe
and
into
divb
lahf
popa
jns
in
jnp
vrsqrtps
inc
xchg
or
xchg
add
and
fs
push
outsb
ret
gs
repnz
push
lret
xchg
or
psubsw
mov
mov
hlt
fcmovu
pop
pop
push
shrb
cmp
addr16
xor
mov
jge
mov
mov
and
rep
push
adc
js
sub
mov
into
push
adc
jnp
and
cmpsl
cs
inc
xchg
push
dec
sub
lahf
fimull
popa
fidivs
xchg
and
dec
pop
pop
mov
jg
fstl
or
sbb
ds
outsl
add
roll
fdivr
shll
push
das
test
dec
xchg
pop
and
jo
dec
or
int
push
push
test
xchg
mov
sub
dec
mov
push
or
mov
std
inc
mov
add
negl
adc
cmpsl
sub
mov
insb
pop
fsubrl
or
movsb
sarb
dec
xor
out
dec
iret
imul
bound
lret
mov
mov
pop
add
jne
addl
fsubrl
enter
pop
mov
inc
outsl
int3
cmp
popl
in
inc
insb
jb
dec
jge
inc
out
pop
xchg
adc
cli
aam
stc
add
and
mov
fwait
jns
repnz
pop
stos
and
add
mov
jl
icebp
pop
je
jge
cwtl
mov
icebp
fwait
sub
mov
jae
sbb
or
test
movsl
adc
ret
addr16
sub
aad
test
mov
mov
jl
inc
cltd
repz
aad
inc
add
xor
add
cmpsb
insl
clc
mov
cld
jnp
sub
outsb
sbb
dec
or
test
and
xchg
push
jp
iret
ret
rcr
xchg
test
push
or
aam
push
sub
pusha
push
pushf
test
out
pushf
arpl
adc
xor
setle
pushf
inc
sbb
cmp
jle
jns
inc
popf
and
cmpsl
fwait
sub
orb
xchg
cmp
xorb
dec
mov
popf
add
data16
negl
andb
dec
in
enter
xchg
xor
cmc
imul
arpl
mov
dec
movsb
jmp
add
sub
xchg
les
int
pop
imul
aad
je
jbe
lock
ljmp
sbb
out
bound
out
xor
mov
loope
cs
cmpsl
push
push
pop
xor
mov
xchg
mov
adc
pop
fisubs
sbb
rcrb
xor
push
mov
inc
cltd
dec
mov
sahf
inc
mov
subb
sbb
or
loope
jecxz
shlb
xor
hlt
mov
in
mov
xchg
adc
stos
out
nop
push
add
add
dec
fwait
out
jge
bound
or
hlt
aad
push
and
xchg
adc
out
adc
shl
push
pmuludq
mov
out
sbb
inc
mov
pop
dec
jmp
inc
inc
movsb
dec
add
rolb
cmpsl
arpl
pop
cmp
nop
sti
int
mov
repz
cltd
test
jnp
jbe
out
test
xchg
mull
add
add
push
mov
inc
xchg
mov
les
dec
ds
adc
es
sbb
stos
cltd
cmp
iret
jmp
mov
lret
hlt
pop
stos
push
adc
in
xchg
push
sarl
sbb
sub
repz
scas
add
shr
sbb
xor
lahf
sti
xor
inc
shrb
mov
lahf
or
cmp
aam
stos
and
pop
clc
xchg
leave
in
pop
dec
pushf
mov
lcall
loop
mov
mov
xchg
mov
notb
shlb
loop
in
dec
xor
inc
xchg
popf
sti
add
push
repz
or
fcompl
mov
inc
inc
ljmp
cs
notb
sub
jno
push
mov
les
aaa
jge
adc
in
cmp
mov
in
push
shll
push
icebp
dec
adc
mov
sbb
and
pop
mov
es
pop
cmpl
push
mov
mov
xchg
or
and
ds
push
jg
cli
inc
in
pop
pop
jp
mov
adc
and
inc
movsl
nop
pop
mov
inc
add
call
in
rclb
push
xchg
push
fcomps
divb
movsl
loop
mov
sub
jp
test
mov
jg
sub
fxch
stos
cmpsb
sahf
ja
das
jne
shrl
sbb
cs
in
lock
stos
fsubrl
pop
in
push
sbb
sti
ret
cmp
aad
in
pop
lods
or
das
and
sbb
add
xor
sub
dec
arpl
movsl
mul
or
lret
sbb
add
xor
mov
jno
inc
les
push
add
out
pusha
aam
sbb
lds
fldenv
out
mov
inc
loopne
mov
rcrb
aam
mov
mov
mov
out
pop
clc
pop
jl
in
sbb
cmc
repz
mov
add
adc
sub
adc
push
enter
inc
fidivs
fsubl
or
outsl
mov
fsubp
data16
jb
jp
insb
mov
stos
mov
add
adc
inc
testl
shll
inc
or
or
inc
inc
or
push
mov
xorl
notl
pop
or
adc
xor
imul
xchg
pop
jns
xor
dec
iret
push
scas
sbb
fisttpl
daa
stos
js
xor
in
or
std
push
in
das
jnp
jg
shlb
fs
movsb
and
or
lea
adc
inc
cs
mov
cmpsb
and
jp
sub
mov
mov
jle
out
sti
ret
je
stos
jge
sbb
jle
or
sub
leave
adc
or
hlt
jecxz
add
xor
je
sahf
out
loope
cmc
stos
in
loopne
pop
adc
push
mov
mov
mov
ds
in
sub
test
leave
int3
lea
cmpsb
and
leave
pop
mov
fsubrl
or
and
mov
fsub
in
es
mov
subl
sub
pop
fldt
add
int3
sti
push
dec
negl
mov
push
gs
stc
lahf
mov
sbb
leave
sahf
in
and
out
and
fcomps
ss
cltd
push
xchg
jns
add
jle
out
iret
inc
in
test
aas
lret
sbb
cmpsl
sub
or
sti
lahf
aaa
test
xchg
jge
and
adcl
sub
jns
lea
test
cld
cs
and
sub
aas
fxtract
jecxz
iret
clc
jbe
ds
sub
adc
shlb
jmp
xor
jge
lea
xchg
sub
jecxz
shrb
dec
clc
cli
mov
cmp
xchg
adc
js
sub
jg
mov
in
cmp
jo
jnp
cwtl
popa
loope
push
and
inc
jecxz,pn
jnp
push
stc
push
imul
mov
cmp
push
xor
test
jae
insb
jmp
out
test
andl
cmp
mov
adc
xchg
fimuls
les
push
and
and
pop
adc
daa
movsl
loopne
pop
popa
mov
aaa
pop
pop
call
icebp
pusha
mov
or
pop
mov
movsl
jecxz
xchg
bound
cmpsb
xchg
add
lahf
jbe
jmp
cmp
int
adc
ljmp
inc
add
fidivrs
jl
mov
pop
jb
cmp
nop
push
push
idiv
fisubs
insl
mov
cld
mov
add
int3
sti
notl
fisttpll
push
clc
test
int3
rcll
sub
lods
mov
mov
mov
sbb
jmp
inc
ljmp
sbb
xchg
cmp
out
or
iret
sbb
fcmovnb
sbb
mov
cmp
ficoms
cld
pop
pushf
xchg
test
sti
shlb
fldenv
inc
scas
paddw
adc
mov
or
and
or
stc
pop
nop
div
jge
je
fdivrs
or
clc
add
mov
lods
je
shl
cmc
cmp
dec
out
pop
fists
mov
sbb
pop
pop
fsubs
in
xchg
addb
cs
cmp
rcr
lea
cmp
pop
mov
or
sbbb
mov
sub
adcb
xor
cmp
xor
mov
sbb
mov
push
mov
xchg
cld
js
xchg
scas
push
clc
jno
jecxz
add
xchg
dec
lret
sub
xchg
gs
bound
xchg
xchg
pushf
fmuls
lahf
mov
xchg
mov
xor
stos
xchg
sub
loopne
addr16
jnp
or
filds
dec
das
pop
and
mov
xchg
sqrtps
lock
and
popf
jo
mull
dec
mov
mov
nop
stos
das
xchg
sbb
pop
mov
outsb
cmp
test
pop
lahf
push
lock
popf
pop
inc
scas
test
cmpsl
pop
mov
mov
enter
rol
int3
sub
xor
clc
sub
jmp
aam
lcall
inc
dec
dec
std
sub
icebp
sti
insl
in
arpl
mov
idivb
lods
adc
lock
xlat
dec
gs
aas
fldenv
loope
mov
das
mov
cmp
mov
sbb
mov
enter
iret
adc
insb
or
ror
cltd
pop
jno
js
sbb
push
gs
add
insl
jb
pop
fstp
push
mov
out
push
jbe
out
xor
arpl
adc
jns
ds
loopne
sbb
and
int3
pop
push
or
out
jnp
mov
xor
xor
mov
movsl
fimull
stos
test
or
outsb
cltd
jnp
ficompl
pop
fbstp
sbb
into
mov
pop
pusha
loope
aas
jle
lock
std
sub
sbb
jb
fwait
out
int
jno
push
sbb
sbb
inc
and
ja
je
aaa
bnd
jg
or
in
mov
addr16
sub
sub
cld
int3
repnz
and
jns
mov
adc
aad
jp
jno
xor
mov
xchg
push
es
jno
rcrb
adc
or
or
std
pop
mov
les
hlt
scas
xchg
je
adc
jmp
ja
inc
std
or
scas
mov
stc
mov
add
mov
mov
inc
pushf
add
pop
push
aam
dec
lret
out
push
and
sarb
popa
lods
cmp
clc
aam
xchg
mov
iret
push
in
stc
adc
cs
push
unpckhps
leave
jp
in
cmpsl
inc
lea
mov
sub
sbb
adc
lret
xor
mov
add
inc
stos
cli
subb
stos
pop
pushl
out
cld
sbb
sbb
das
pop
outsl
xor
adc
loop
int
ds
aam
es
jne
cmc
out
pop
les
sub
or
xor
lret
push
popf
adc
push
mov
lcall
pop
out
stos
jp
iret
test
fs
mov
hlt
scas
cltd
sti
cmp
xchg
jbe
aaa
mov
sbb
repz
xor
jmp
popa
sti
jle
xor
pop
xchg
gs
pop
js
inc
push
adc
testb
mov
jne
lea
loopne
mov
iret
test
mov
jno
fs
in
sub
ljmp
imul
mov
mov
dec
sbb
mov
test
data16
stos
inc
dec
push
in
insl
repz
insb
cmp
inc
push
dec
cmp
sub
push
scas
movsb
pusha
jmp
sub
stos
mov
mov
pop
adc
mov
cwtl
stos
lods
adcl
ret
sarl
cmp
ret
sbb
lcall
dec
push
inc
test
mov
xchg
icebp
test
adc
fildll
into
mov
aaa
mov
push
fldcw
test
das
rorl
movsb
inc
scas
ljmp
jg
gs
stos
mov
gs
sbb
jle
mov
hlt
pop
enter
or
faddl
jmp
imul
or
adc
xor
pop
sub
fwait
je
enter
test
mov
sbb
and
gs
xlat
loop
pop
sbb
fisubs
mov
imull
into
je
sub
push
in
rsm
cmpsl
adc
test
sub
out
inc
mov
push
xlat
push
mov
push
mov
mov
loop
pushf
inc
adc
sbb
mov
and
ret
jge
xchg
call
add
push
outsb
test
hlt
sbb
add
fstpl
bound
ret
out
xor
call
or
scas
inc
pop
xchg
vmovq
or
mov
daa
pop
fildl
mov
mov
leavew
clc
nop
mov
test
lahf
push
dec
je
mov
pop
test
out
push
add
push
bound
jp
dec
xchg
add
fsubrl
add
lea
mov
push
mov
fnsetpm(287
sbb
ss
shll
adc
add
stos
mov
sar
lahf
push
scas
es
or
jnp
push
mov
mov
inc
ljmp
fwait
cmpsl
scas
pop
andb
mov
cmpsl
mov
or
out
push
cmp
inc
pop
pop
adc
je
cmc
mov
or
xor
jg
outsl
xorl
pop
mov
jns
push
pop
int
lahf
xor
dec
xchg
out
push
dec
xor
push
sub
and
fbstp
test
stos
enter
fwait
adc
pop
xchg
adc
aas
int
xor
loopne
or
fcoms
scas
mov
fimuls
push
iret
and
pop
xchg
cmp
mov
lcall
ss
inc
push
sub
lret
mov
adc
out
rcl
popf
inc
jae
cmc
jmp
jmp
cmpb
sbb
mulb
mov
jp
sbb
fwait
sahf
lods
lods
jecxz
pop
mov
mov
jp
lea
rorl
lcall
push
dec
mov
pop
push
cwtl
mov
jmp
add
and
lods
into
scas
xor
jp
push
leave
das
mov
jae
adc
cmp
dec
loop
movsb
and
dec
jle
mov
fcmove
jae
fst
mov
mov
in
jle
in
or
or
insb
iret
fisubl
inc
mov
adc
notb
in
loop
jbe
jge
dec
jl
mov
mov
shl
test
mov
mov
add
aaa
pop
push
jg
iret
add
inc
fistl
mov
xor
jge
jecxz
test
repnz
shlb
push
or
or
lods
bnd
mov
jns
jge
and
jo
adc
mov
pop
adc
cmp
adc
dec
clc
xor
int3
jo
lret
mov
stc
and
jmp
mov
xor
jl
adc
ljmp
dec
push
inc
loope
push
push
mov
push
call
jle
aad
push
cmp
ss
int3
andl
mov
mov
daa
arpl
in
fisttpl
push
cmpsl
das
lea
jae
fcmovu
in
pop
xlat
push
mov
mov
icebp
icebp
fcompp
fmulp
push
in
repz
imul
inc
fs
jns
adc
inc
adc
imul
and
rorl
aam
fstpl
sbb
imul
adc
and
aaa
sbb
inc
mov
pop
mov
push
in
mov
xor
mov
or
fiadds
pop
push
cmp
lds
jne
mov
insl
mov
adc
add
cwtl
and
orb
test
std
or
cmc
push
jns
push
jae
xor
pushf
idivl
sbb
stos
mov
jl
mov
cmc
cmc
pop
push
dec
adc
sahf
filds
in
add
adc
sbb
sbb
sub
leave
add
sahf
mov
arpl
clc
movsl
inc
xchg
enter
inc
fs
xor
loope
pop
add
leave
outsb
mov
jecxz
mov
lcall
iret
xchg
sbb
rcll
scas
fldt
add
mov
iret
jnp
xchg
fs
lods
rcrl
push
insb
ss
arpl
popf
mov
jb
add
xor
int3
or
xchg
rorl
bound
adc
push
inc
ficoms
out
dec
les
dec
xor
and
jmp
sub
and
leave
aam
insb
ja,pt
cmp
int
push
cltd
cmp
fstpt
mov
push
or
cltd
loopew
push
jle
das
gs
pop
sub
inc
mov
mov
fnstcw
loope
repnz
jge
mov
pop
call
addl
push
add
aad
adc
nop
pop
mov
aam
int
mov
sbb
jp
lret
roll
jmp
mov
push
aas
jbe
movsb
lret
pop
xchg
jmp
enter
ljmp
call
jno
push
in
icebp
daa
sub
pop
and
cmp
sbb
into
mov
push
std
sahf
cmc
ds
movsl
pop
pop
push
push
cwtl
dec
lcall
ja
rorb
push
rclb
sbb
addr16
out
enter
jge
mov
ficoms
scas
jns
mul
aaa
cs
insl
pop
jne
addr16
out
fbld
cmpsb
pusha
jle
daa
sub
repz
or
add
push
push
jae
cmpxchg
das
or
dec
or
jae
aad
cmp
test
adc
arpl
stc
sbb
jmp
inc
jmp
sub
adc
pushf
adcb
popf
cli
mov
dec
test
aaa
cmp
inc
arpl
pop
mov
aam
and
cmpsl
test
adc
pushf
jge
adc
lds
fldcw
or
inc
mov
sti
and
arpl
fs
div
rolb
cltd
jb
leave
mov
add
aad
insl
out
xchg
das
xlat
cwtl
and
add
push
mov
sub
jae
les
mov
add
aas
jmp
cmp
aas
cs
and
mov
and
or
sbb
cmc
jns
add
insb
pop
out
pop
mov
xchg
cmp
adc
jmp
in
sbbl
xlat
add
movsl
and
xor
arpl
mov
test
das
cmp
icebp
add
mov
or
inc
add
arpl
jb
or
idivb
pop
dec
dec
ret
add
das
fcmovb
outsb
push
push
scas
sti
pop
mov
and
inc
lods
push
addr16
mov
inc
adc
add
rcll
sbb
mov
and
jecxz
int
fistpl
xchg
aad
xorb
inc
or
arpl
aad
jecxz
push
cmpsb
clc
pushf
xlat
jg
xchg
pop
test
dec
jle
mov
int3
dec
shlb
inc
lahf
lods
sahf
cmp
es
in
hlt
lds
idiv
imul
cmp
xor
cmc
les
jbe
out
pop
test
sahf
mov
cld
in
push
xor
cmp
mov
add
push
sbb
loope
fcoml
fists
frstor
mov
mov
dec
loopne
pop
outsb
loop
push
stc
imull
pushf
mov
add
clc
insb
addl
aas
or
int
and
pop
les
sahf
scas
lock
pop
mov
insl
lret
iret
push
dec
insb
mov
sub
adc
lods
scas
testb
or
xchg
mov
xchg
or
out
cltd
mov
cmp
bound
and
lea
xor
mov
ror
fwait
out
xchg
cmp
out
xchg
cwtl
ss
gs
adc
aaa
adc
inc
imul
add
lea
aad
mov
mov
xor
popaw
ds
int
add
push
and
scas
cltd
sbb
adc
sbb
fcompl
or
in
pop
cs
imul
pusha
mov
mov
inc
and
fistpl
test
xor
test
cmpsl
and
out
iret
xchg
imulb
adc
dec
fxam
dec
sbb
push
jge
sar
cmpsl
pop
test
xor
imul
cmpsb
mov
addr16
jmp
push
mov
dec
lea
imul
xchg
mov
jnp
add
sbb
mov
test
push
push
aas
cmp
inc
mov
or
fcmovnu
cltd
mov
push
out
or
in
stos
test
pop
pop
and
pop
cmpsl
pop
xchg
xchg
in
lods
in
push
movsb
ficoml
dec
imul
sub
imull
adc
push
cld
inc
popf
cmpsl
mov
cmpsl
nop
loop
aad
mov
adc
imul
cs
hlt
dec
or
mov
roll
or
dec
fdivs
mov
loop
mov
push
sub
cmp
out
repnz
mov
sbb
cmp
dec
jb
mov
mov
xchg
cmc
xchg
adc
xchg
rorl
sbb
cwtl
stos
nop
notl
test
mov
and
in
dec
or
lret
push
hlt
in
es
bnd
xchg
pop
add
xlat
mov
cld
clc
lret
sbb
jecxz
mov
in
je
loope
jmp
push
mov
fs
jae
xchg
jecxz
and
test
test
aas
imulb
sbbb
xchg
push
mov
repz
mov
aam
aad
stos
shr
mov
xchg
mov
pop
jae
bound
shlb
jno
cmp
inc
jge
mov
sti
mov
push
das
xchg
pop
pop
mov
xor
jmp
ja
dec
ds
loop
ss
lock
hlt
push
sub
insb
sub
scas
stos
loopne
nop
aad
int3
cmp
leave
aaa
push
add
sbb
pushw
xor
mov
sbb
adcl
cwtl
repnz
lods
or
rorl
movsb
int
mov
pop
sub
sbb
rcrl
adc
mov
int3
fadd
adc
mov
jge
cld
add
add
scas
pop
cs
mov
mov
mov
jmp
adc
out
stos
mov
lock
or
push
push
fistps
sti
jge
dec
movsl
lods
pop
sarb
jmp
dec
bound
push
imul
pop
nop
aad
out
jmp
ret
imulb
mov
fldcw
or
cmp
push
inc
and
cltd
loope
aam
jle
rcrl
xor
xlat
in
jecxz
cmp
mov
or
jle
nop
arpl
sbb
mov
lods
scas
jge
cmpsl
cmp
call
pop
xor
test
es
push
sbbb
and
in
insl
cmp
lret
and
ret
xchg
popf
adc
movb
jb
and
sti
rcll
in
jg
xchg
imul
push
scas
cmp
jbe
fdivrl
push
leave
stc
inc
mov
sub
cmpl
ret
pop
pop
pop
fs
mov
mov
mov
and
shr
mov
outsb
and
jecxz
cmpsb
ljmp
xchg
aas
mov
push
pop
cld
adc
aaa
fwait
out
xchg
jno
xchg
mov
dec
repnz
mov
orb
dec
sub
or
xlat
fisttps
test
xchg
or
inc
cwtl
adc
push
inc
sub
ret
fisubs
aaa
push
loope
jmp
outsl
flds
ljmp
xchg
inc
orb
pop
sbb
sub
pop
lea
adc
mov
movsl
push
in
jle
push
mov
cmpsb
stos
add
mov
lcall
fwait
mov
leave
jb
jecxz
mov
and
mov
pop
enter
jbe
xor
or
lds
xchg
lea
cmpl
movsb
rolb
mov
xor
sbb
mov
daa
dec
ja
jae
or
insb
aaa
iret
int
inc
mov
xlat
xor
aam
das
pop
ss
mov
adcb
and
das
in
movsb
jne
loop
cmpsb
inc
test
les
aam
in
lds
push
lret
xlat
cwtl
mov
pop
inc
cmp
in
mov
dec
addr16
jp
aas
mov
cmp
xchg
xlat
fcomps
sub
dec
mov
push
andl
mov
adc
mov
clc
call
test
das
in
mov
loopne
pusha
and
outsb
enter
push
jle
jmp
pop
jae
mov
jle
ljmp
xchg
mov
cmova
sbbl
not
aas
xchg
inc
mov
cmc
loopne
mov
subb
mov
jo
sub
adc
decb
insb
or
xor
pusha
jnp
jbe
lods
push
mov
mov
ljmp
js
mov
fldz
aaa
inc
cs
in
or
mov
lahf
mov
xor
movsb
sub
cs
cmp
lcall
fildl
lahf
mov
push
xor
hlt
in
mov
stos
sahf
repz
xor
adc
das
imul
mov
test
dec
xor
mov
xor
fildll
arpl
mov
andl
loop
ss
cmp
fisubs
rclb
cwtl
or
movsb
call
lds
daa
ret
cmpsb
daa
dec
mov
mov
outsl
jae
insb
pop
lock
dec
shl
push
mov
inc
fnstsw
and
xchg
mov
xchg
stos
dec
leave
stos
mov
cmp
js
cmc
ja
dec
repnz
mov
les
ss
fldcw
pop
jg
scas
lret
adc
inc
xor
stc
addr16
inc
cmp
adc
jb
cmp
add
repz
movsb
rcrb
jp
pop
ja
adc
lds
stos
test
mov
xor
or
pop
xor
sub
add
jp
fsubr
ja
adc
test
mov
xchg
ret
jns
pop
loope
mov
adc
lcall
adc
mov
fcoml
sub
jae
mov
fxch
xchg
sbb
and
cmp
push
or
jg
call
testl
std
push
pop
xor
es
pop
lret
or
jae
sbb
js
scas
outsb
je
sub
into
xor
cmc
adc
dec
push
or
movb
xchg
and
push
ficompl
cltd
enter
stos
push
mov
xor
or
or
mov
mov
sahf
mov
filds
push
jbe
mov
jno
lea
mov
adc
repz
mov
mov
sub
jmp
and
addr16
rorb
inc
fbld
outsl
add
lods
sahf
sbb
leave
and
jae
mov
iret
jecxz
insb
in
mov
push
loopne
inc
imul
pop
xchg
or
shrl
call
ficompl
push
adc
daa
insb
mov
sbb
dec
jb
ljmp
jl
cmp
cmp
hlt
outsb
sti
int3
add
mov
mov
repnz
add
pop
mov
cmpb
es
enter
jno
push
pop
in
mov
out
xchg
cmp
mov
add
or
sub
adc
and
xchg
add
jno
mov
shl
xor
into
sub
cld
push
fstl
sub
push
or
movsb
mov
std
loope
pusha
jbe
and
scas
push
or
add
cmc
mov
out
inc
mov
mov
push
out
rcrl
dec
in
push
mov
movb
test
inc
or
and
lahf
ds
test
jge
sub
not
sbb
xor
je
dec
scas
jp
push
je
movsb
je
gs
enter
jae
xor
xorb
mov
das
xor
in
add
nop
xor
scas
xchg
scas
mov
addb
movsl
add
inc
pop
insb
xor
loopne
enter
aam
outsb
pushf
and
daa
or
addr16
sbbb
rclb
pop
push
dec
or
ljmp
jne
add
popa
adc
cmp
movsl
inc
cmpsb
in
scas
jb
into
outsb
cs
push
insl
sarl
arpl
ja
js
inc
dec
ja
repz
xlat
icebp
sbb
mov
cmp
push
imul
int3
sarb
mov
push
cli
mov
mov
shrb
sbb
push
cltd
push
outsb
cmp
pop
lock
fldcw
iret
dec
pop
sbb
loopne
dec
mov
mov
or
adc
out
das
testl
cmp
adc
push
push
in
testl
in
int3
mov
orb
daa
pop
jp
push
outsl
testl
mov
gs
lock
std
xchg
mov
enter
ret
push
push
sbb
pop
das
cld
loop
push
cmp
xchg
xchg
mov
test
cmpsl
cmpsb
inc
push
leave
sahf
cltd
mov
or
jnp
mov
push
xlat
shlb
jmp
fdivrs
dec
mov
aaa
out
fstp
xchg
or
jnp
sub
xor
in
sbb
pop
sub
mov
sbb
sub
ret
sbb
xchg
rcr
test
je
mov
sbb
jb
in
sbb
xor
outsb
cli
adc
pop
mov
add
aaa
sbb
jecxz
arpl
outsb
loop
aaa
mov
xchg
iret
repz
cmpb
mov
test
dec
push
mov
mov
icebp
mov
mov
hlt
lock
add
mov
insb
out
shl
mov
out
cli
scas
in
fiadds
inc
add
and
flds
nop
fistpll
out
test
sub
mov
or
jmp
xchg
sbb
cmpsl
imul
xchg
daa
mov
adc
enter
arpl
adc
add
xor
push
push
out
shr
pushf
scas
jo
cmpl
iret
mov
stos
mov
or
jno
les
cwtl
ss
mov
jmp
js
cld
sbb
jb
jo
pop
dec
stos
push
imul
stos
dec
sub
enter
shlb
mov
push
mov
repnz
or
pop
sbb
mov
push
out
lahf
rclb
push
gs
je
and
mov
cld
call
xchg
loopne
stc
cmp
cmc
push
lret
inc
jae
mov
rcl
clc
adc
addl
out
mov
mov
int
push
or
xor
and
lods
push
adc
jnp
sarl
cmc
iret
xor
fcmovu
mov
pop
gs
adc
subb
rdpmc
mov
mov
mov
push
mov
fcmovb
mov
mov
xchg
pop
loopne
or
mov
in
mov
push
or
pop
push
xchg
lret
test
imul
inc
and
push
scas
sbb
inc
pop
cli
andb
or
repz
lret
arpl
xchg
push
adc
movsb
pusha
sbb
aas
lret
into
xchg
cld
inc
jne
call
shll
jbe
push
popf
icebp
jl
ret
push
sbb
mov
dec
dec
sarb
sbb
mov
mulb
ds
xlat
aam
in
cmp
adc
mov
sahf
and
leave
jno
dec
ds
clc
js
notl
push
popa
sar
test
les
pushl
cmc
add
in
les
cmp
cmp
push
int3
mov
das
roll
push
jle
pop
dec
inc
repz
mov
int3
push
imul
adc
pop
jbe
int
cmpsb
sub
dec
dec
add
inc
gs
push
arpl
shl
and
stos
push
mov
addr16
or
mov
inc
lock
add
popf
decl
jb
jo
scas
ljmp
or
xchg
or
add
scas
icebp
xchg
mov
or
cmp
js
push
pop
and
in
push
and
jno
test
movsb
shrb
out
loope
sbb
and
out
icebp
shr
mov
push
notl
cmpsb
sbb
cmc
arpl
xchg
mov
sub
mov
js
pop
cwtl
cmpl
mov
rcl
push
cmc
out
lods
jp
adc
cmp
dec
dec
fdiv
xor
and
cmp
inc
clc
dec
js
loop
jae
adc
jg
in
jecxz
or
les
or
pusha
insl
jl
xorb
test
inc
pop
pop
sub
sbb
mov
and
adc
in
xchg
std
dec
popf
adc
push
dec
in
imul
in
push
lock
add
in
cmp
pop
outsl
out
iret
cmp
imul
lret
dec
cmp
and
loope
into
and
or
jl
mov
loop
shll
inc
cwtl
push
aas
push
xchg
sbb
xchg
push
pop
xor
hlt
jg
dec
add
or
mov
adc
xor
out
cltd
jl
daa
add
ds
push
cmpsb
or
lret
mov
xchg
insl
dec
pop
daa
mov
xor
imul
push
pushf
jle
mov
mov
arpl
lea
xlat
dec
pop
repz
and
jo
mov
xlat
aas
cltd
movsb
mov
ljmp
jne
jg
idivl
adc
outsb
in
outsl
dec
loopne
mov
sbb
cmp
cmp
lret
sbb
inc
addr16
jp
xchg
aaa
nop
popf
pop
mov
daa
cmp
inc
faddp
add
outsb
sbb
daa
lds
jp
repz
mov
and
jbe
int
sbb
adc
pop
mov
clc
xor
xor
ficomps
jo
stos
mov
mov
lods
cmp
lods
or
in
sbb
push
xchg
popa
fsubl
xchg
popa
adcb
mov
shrb
adc
test
sbb
int3
add
push
mov
xchg
and
dec
jnp
mov
lods
rcrl
sbb
xlat
shlb
cmp
test
ss
push
movsl
loopne
or
call
das
and
push
push
lock
push
insl
cmc
jb
xor
dec
inc
test
test
add
inc
sub
jle
xchg
xor
fnstenv
dec
cwtl
xor
push
inc
jne
mov
scas
andb
mov
dec
test
add
insb
shll
push
mov
repnz
lods
xlat
pop
cld
and
std
push
pop
imul
fmuls
xor
inc
jb
nop
sub
xchg
pop
or
push
push
outsb
pop
test
xor
dec
sbb
leave
lds
sahf
scas
sub
mov
mov
sbb
pop
mov
in
iret
icebp
jmp
cs
scas
arpl
mov
mov
scas
hlt
mov
ret
push
in
in
lcall
mov
aam
cmp
mov
mov
sub
adc
mov
xor
push
fadd
mov
rcl
push
sub
fs
xchg
out
cmp
push
adc
mov
ds
lea
mov
pop
addr16
add
rcr
and
xchg
pop
or
mov
and
je
fwait
gs
pop
je
add
stos
mov
jle
lea
gs
or
xchg
push
ret
dec
sub
xchg
push
shr
mov
jnp
repz
in
cmp
aas
jns
in
das
rolb
push
sub
adc
dec
jmp
mov
lret
adc
mov
loop
push
lea
dec
pop
lcall
fcoms
int
test
data16
cmp
xchg
stos
clc
push
jle
sub
stos
ja
cltd
gs
jmp
or
int3
mov
stos
insb
je
fisubs
adc
push
push
mov
loop
ss
cmp
pushf
dec
les
xorb
rcl
movb
jne
stos
testb
stc
inc
mov
pushf
cld
xchg
cmp
mov
jne
jne
sti
pop
inc
sbb
std
sub
inc
int
jp
repz
test
sbb
or
scas
or
or
or
cmc
dec
xor
icebp
add
xchg
or
mov
sbb
lret
add
ss
mov
notl
fimull
cmp
mov
sarb
clc
outsb
shll
lods
mov
mov
sub
dec
mov
pop
adc
jae
or
jmp
dec
mov
fisubl
cmc
sub
xchg
rcrl
outsb
sub
scas
lret
test
xchg
sbb
ds
lods
xchg
fldenv
or
cld
pop
push
mov
push
push
ds
gs
aad
jns
push
add
loopne
add
mov
ja
movsl
push
dec
decl
in
and
adc
or
loop
add
or
insl
xchg
scas
mov
adc
jbe
dec
cmp
test
sbb
testb
mov
in
mov
int
push
shll
loope
movsl
cmp
add
pop
xchg
jno
mov
mov
fadd
mov
sbb
int3
in
mov
ficomps
cltd
mov
or
icebp
mov
cmpsb
or
pop
aaa
iret
stos
into
loopne
cmp
out
pop
mov
imul
push
inc
inc
cmc
sbb
hlt
xchg
cmp
sub
jb
js
jo
and
inc
imul
or
inc
mov
scas
jb
xchg
jmp
pushw
push
push
inc
roll
sub
icebp
xchg
out
cmp
sahf
out
int3
dec
or
lods
lahf
es
bound
pop
cs
dec
in
xchg
lock
cmp
mov
movsb
popa
mov
cwtl
mov
cli
cli
sti
test
sbb
testb
arpl
dec
orb
pop
pop
sub
mov
adc
jmp
adcl
inc
pop
movsb
int3
emms
aad
nop
mov
and
xor
jl
dec
lods
loopne
add
cmpsl
dec
sub
and
push
rorl
rorl
ja
and
aam
int3
and
test
adc
adc
leave
adc
movsl
mov
xchg
mov
stc
fstl
mov
push
fcoml
cmpsb
adc
pop
shll
movsl
outsl
pop
sahf
or
fwait
cmpsb
mov
pop
pop
mov
cmp
jo
cmc
cmc
inc
in
sbb
xorl
dec
adc
jmp
jg
inc
ljmp
sub
sbb
data16
dec
shl
jae
imul
push
push
mov
test
push
or
jae
lods
dec
loopne
cmp
sbb
ljmp
dec
cmp
negb
dec
addr16
fstpt
fisubrl
cli
fimull
add
stc
sub
ljmp
add
shll
add
iret
out
jo
imul
jno
and
arpl
pop
std
sub
fisubrl
xchg
mov
push
bound
cmp
push
addr16
add
jbe
xchg
lds
cmp
push
les
repz
mov
mov
jp
sbb
jp
xchg
enter
rclb
and
xor
jmp
push
loop
sbb
fs
gs
push
xchg
notb
sub
push
mov
inc
adc
mov
loope
xchg
mov
jecxz
clc
es
xorl
cmp
les
push
cmp
push
dec
cs
in
out
stos
mov
js
jp
js
jp
roll
das
loope
iret
loope
loope
outsl
jmp
jns
outsb
dec
push
clc
push
repz
popa
int3
out
cld
adc
dec
daa
mov
out
xchg
sub
mov
nop
add
fsubrp
sub
jo
lcall
xchg
or
ret
ret
outsl
jno
lahf
scas
xor
push
xchg
repnz
sub
std
cmp
jl
and
mov
cmpsb
cmp
leave
mov
or
mov
lahf
sub
mov
push
pop
mov
iret
ss
in
adc
cmp
lret
in
and
andb
pop
or
pop
jecxz
xchg
fimuls
push
jl
lock
push
mov
or
push
or
inc
pop
aas
imul
cltd
bound
imul
iret
xchg
push
addb
add
mov
icebp
xchg
adc
mov
pushf
adcl
cwtl
adc
bts
sbb
xchg
cltd
lcall
cmp
fisttpl
repz
fadd
mov
cmp
leave
lret
lahf
cmc
mov
shl
int3
mov
dec
pop
fs
test
inc
mov
cwtl
inc
lcall
shll
loop
es
rclb
addr16
mov
mov
pop
jecxz
inc
sti
cltd
insb
adc
out
mov
push
shl
xchg
hlt
lret
cmp
dec
mov
cmp
add
lods
jne
add
mov
rcrb
ret
cmp
arpl
jmp
ds
mov
outsb
inc
int3
mov
in
cmpsl
idivb
movsl
add
xor
jnp
push
pop
cwtl
push
ja
inc
push
jo
aam
xor
in
data16
ja
add
mov
pop
jecxz
jp
push
add
mov
adc
or
pop
mov
test
jp
inc
stos
inc
sub
daa
roll
scas
dec
push
add
lods
jg
xor
dec
push
daa
daa
push
ja
inc
repnz
inc
jbe
scas
push
add
sbb
out
data16
or
mov
bound
pop
push
xchg
xchg
and
repnz
in
repnz
add
push
xchg
mov
ss
out
xor
pop
jmp
loope
jmp
dec
jl
add
push
and
test
push
and
aad
cmp
out
xchg
hlt
fdivr
stos
ja
lret
push
jnp
mov
pop
mov
add
arpl
inc
cmp
cmpsl
outsl
inc
shl
dec
push
out
adc
out
mov
xor
dec
push
xor
sub
test
mov
mov
mov
sub
int
xchg
ja
pop
mov
out
enter
inc
es
ds
cmp
push
data16
ss
gs
xor
aaa
sbb
movb
sbb
cltd
sbb
and
ret
cmp
mov
rorl
enter
bound
add
push
mov
ds
popa
cmpb
xor
cmp
cmpsb
push
cs
shrl
scas
and
jle
dec
add
and
mov
std
lods
xor
lret
ljmp
jne
add
mov
daa
sub
dec
push
and
adc
js
mov
repz
dec
ja
mov
inc
mov
in
cmpsl
cwtl
mov
mov
rcll
dec
xchg
clc
rcl
xlat
rolb
pop
mov
xor
testb
aad
push
cmp
mov
in
xchg
dec
out
clc
jo
push
in
imul
vaddsd
mov
stos
scas
pop
ret
jno
or
or
push
pop
mov
push
es
cmpb
icebp
xor
pop
repnz
inc
lock
pop
aam
or
jb
nop
ss
push
test
pusha
sbb
xchg
scas
add
nop
mov
aaa
sbb
mov
add
mov
dec
outsl
push
fsts
mov
mov
hlt
nop
and
fdivr
dec
scas
push
sbb
dec
sbb
loopne
pusha
mov
cmpsb
adcl
pusha
notl
cmp
pop
dec
mov
mov
pop
loopne
adc
pop
jmp
popa
push
into
add
outsb
lahf
jne
cmp
xor
lret
mov
mov
aaa
lcall
cmpsb
aaa
sbb
addr16
mov
lret
push
pop
dec
aaa
aam
mov
push
sbb
jnp
pop
repz
push
jle
fsubrs
xor
std
jbe
mov
popf
stos
pop
shrb
clc
ljmp
stos
aam
mov
xchg
push
arpl
mov
in
int3
lea
add
pop
jae
xor
bound
int
jbe
lret
inc
arpl
mov
mov
nop
lea
int
push
int3
xor
cmp
shll
sub
leave
inc
jbe
and
outsl
inc
fst
mov
xchg
popf
mulb
in
jecxz
mov
movsb
mov
pop
in
cmp
push
shr
pop
fldl
insl
and
xchg
xchg
aad
lods
dec
leave
pop
movsl
imul
xlat
ljmp
leave
andb
jb
add
rolb
test
mov
add
aaa
cmc
repz
dec
jae
out
dec
test
pop
adc
clc
mov
int3
fistpl
mov
inc
jecxz
std
sbb
inc
and
sbb
jle
push
mov
mov
aas
mov
add
mov
jmp
pusha
or
mov
cs
fs
hlt
shrl
imul
jle
mov
push
push
and
jne
inc
jp
ficoml
jle
pop
push
test
popa
cs
test
hlt
loopne
pusha
push
jbe
rorl
inc
gs
xchg
push
cmpsb
stc
jnp
fdecstp
mov
lods
push
cmpb
mov
roll
fnsave
fidivrs
in
sub
lock
push
rorb
sub
mov
xor
dec
out
or
sbb
mov
mov
into
mov
loop,pt
push
pop
sbb
movsb
mov
mov
ljmp
xor
fiadds
sub
or
mov
rolb
fsub
mov
push
test
decb
subb
sti
testl
xchg
xchg
xor
scas
insb
and
mov
enter
jp
mov
repz
add
inc
push
cmc
jg
inc
mov
ret
cs
iret
lods
fldl2e
pop
mov
cmp
jnp
xchg
imul
adc
shl
cmpsb
mov
cmpsl
mov
cmc
xor
into
xor
xlat
call
dec
adc
jb,pt
sub
adc
pop
sarl
mov
icebp
mov
xor
ljmp
nop
mov
repnz
or
subb
mov
dec
mov
inc
pop
sub
cmp
inc
jl
insb
hlt
dec
jge
mov
inc
cld
std
sub
jp
xchg
stos
sub
lahf
bound
mov
outsb
mov
mov
pushf
loop
iret
push
scas
xor
shl
sub
ror
adc
cmp
outsb
sbb
std
xor
cmp
mov
test
pop
shr
or
fs
inc
jle
jno
mov
jp
rcr
mov
fadds
mov
xchg
inc
mov
inc
mov
sub
es
hlt
jbe
pop
sub
mov
add
and
lea
in
push
std
mov
dec
std
cmpsb
fld
fldt
lret
les
push
rcl
pop
and
adc
cmp
subl
stc
inc
mov
and
mov
push
lock
icebp
popf
adc
fiadds
push
jmp
xchg
in
sbb
xchg
adc
les
mov
insb
sbbb
mov
jl
inc
test
dec
push
rolb
shll
adc
jb
fwait
int
adc
push
and
or
jno
xchg
test
cmp
and
cmp
xchg
je
mov
jo
sbb
mov
and
aas
pop
ja
scas
std
dec
sarl
stos
shrl
or
lods
pop
jbe
lret
mov
cli
jno
jo
jno
in
jp
outsl
mov
fucom
insb
inc
ss
int3
out
jle
out
rorb
cmp
add
ljmp
call
ret
mov
aam
inc
in
push
push
imul
mov
mov
mov
xchg
dec
add
sbbl
add
cmp
fnstsw
sub
sti
es
in
sbb
xor
pop
int3
sarl
jb
lods
cmp
cmp
xlat
fmull
mov
pop
push
movsl
ljmp
test
das
aaa
std
inc
mov
cmp
lods
mov
lock
fwait
jnp
ss
aas
push
aas
mov
sbb
sahf
and
imul
es
xor
ss
jg
mov
les
xchg
fistl
xchg
push
mov
jle
mull
add
lret
xor
lock
test
bound
push
sarl
xorb
mov
das
les
cmc
imull
aam
inc
addr16
lahf
xchg
add
fisttpll
fcomps
out
jb
movb
sub
jg
mov
mov
in
ds
jl
pop
and
das
jle
mov
int3
xor
xor
mov
scas
aas
mov
sub
mov
sbb
fistpll
movsb
dec
in
ret
sbb
cmp
jns
call
push
in
and
adc
out
int
cmp
fcmovb
ds
test
sti
ret
dec
adc
push
cmp
sbb
hlt
sub
gs
sbb
cmp
fwait
lock
xchg
insb
lret
push
add
clc
test
fbstp
add
out
mov
ja
loop
out
mov
sbb
push
jae
aad
pop
inc
daa
adc
lds
sbb
mov
mov
cmpsl
push
or
sbb
leave
in
out
xchg
xor
pop
jmp
mov
jno
lret
ficoml
or
mov
pop
mov
mov
inc
cld
pop
jmp
pop
cs
pop
xchg
inc
mov
xchg
test
in
pop
pop
xchg
in
ret
xchg
push
adc
push
lea
lds
aaa
and
movsl
mov
jo
dec
push
xchg
add
mov
dec
insl
xchg
mov
add
loope
daa
sar
sub
dec
cmc
inc
orb
mov
sarb
fdivr
jl
movsl
out
push
jbe
mov
in
and
fsts
sub
dec
inc
cltd
in
push
sub
fs
ficomps
sbb
cmp
ret
jne
pop
shrb
push
inc
in
dec
push
xchg
loop
ficoml
sti
adc
mov
mov
outsl
push
mov
clc
add
cmp
fstps
jbe
adc
jae
lahf
daa
test
mov
sub
cmpsb
js
mov
and
in
adc
shlb
ljmp
push
xchg
push
or
stos
sbb
add
inc
pop
mov
sub
aam
mov
sbb
jae
add
pop
lods
sbb
inc
jb
and
popf
scas
orb
repnz
mov
inc
dec
inc
fcompp
or
out
xor
ret
xlat
les
notb
xlat
out
out
mov
add
xchg
out
jle
les
sbb
mov
mov
mov
daa
insl
jecxz
fldenv
test
pop
loope
add
jo
incb
cmp
push
xchg
popf
fcomip
and
addr16
lret
add
cwtl
pusha
adc
inc
xor
dec
mov
test
in
mov
cmp
aas
xchg
add
sub
cmp
pop
xor
ret
or
enter
push
cltd
decl
xchg
mov
ret
je
sahf
lret
xchg
dec
mov
ja
ret
push
push
dec
sti
fsubr
and
ljmp
jns
sbb
shll
jl
dec
imul
mov
lds
mov
jle
push
in
push
in
test
daa
mov
loopne
cld
push
cmp
push
cwtl
daa
fs
add
dec
cs
or
dec
in
push
sub
mov
sbb
cwtl
mov
ret
popf
pop
aas
inc
stos
repnz
bsr
out
dec
cmp
xchg
jae
mov
cld
xor
dec
push
xchg
sbb
cwtl
adc
lcall
lcall
fiadds
cli
xchg
adc
push
lods
movsb
fcmove
aaa
dec
arpl
dec
sbb
inc
es
sti
and
out
inc
das
ret
ja
sbb
leave
xor
dec
adc
stos
xor
push
pop
xchg
mov
adc
jp
cmpsb
dec
xor
mov
mov
aam
pop
dec
jno
and
js
mov
fimull
and
in
xchg
jle
scas
fwait
pushf
and
insl
lods
ret
or
dec
leave
fdivrs
jl
loope
mov
fcomi
sahf
mov
mov
xor
sbb
sbb
sub
jns
mov
inc
fidivs
ss
aam
and
or
es
imul
mov
mov
pop
daa
fsubr
pop
lods
cmpsb
insb
push
mov
sbb
jo
inc
fsubrs
jmp
repnz
sub
mov
fsub
es
pop
adc
dec
xchg
ds
fcoms
lods
cmp
mov
push
iret
loope
add
and
xchg
jle
test
or
adc
add
mov
cmc
sub
push
fstp
hlt
mov
out
les
decb
mov
xor
pop
jp
add
sti
xchg
inc
rcrl
sub
mov
je
xchg
cmc
out
mov
sub
sbb
sbb
xchg
xlat
pop
imul
fdivl
stc
jmp
cmpsl
sub
hlt
popa
mov
add
sti
push
mov
xor
pop
xchg
adc
lods
mov
pop
and
outsb
std
pushf
pop
mov
xchg
add
xor
mov
adc
add
lret
mov
push
dec
mov
aad
pop
lock
mov
pusha
jge
popa
mov
pop
cmp
js
inc
sbb
addr16
adc
std
pop
icebp
cmp
and
inc
lret
push
setae
push
and
jle
push
pop
fldt
jb
daa
xlat
sub
xor
push
gs
push
lret
jg
jno
lds
adc
pop
enter
adc
movsb
dec
insb
repz
dec
call
pop
gs
xchg
mov
mov
inc
int
pop
or
or
loop
sub
repz
faddl
cmp
out
xchg
mov
cmp
addr16
sahf
pop
jae
xrelease
sub
out
lock
push
dec
mov
xchg
push
pop
fdivrp
lea
mov
sub
pop
fmull
imul
or
mov
jmp
mov
adc
inc
adc
in
movl
pop
scas
jns
out
aaa
out
xlat
mov
dec
addr16
test
cmp
aaa
lcall
pop
add
inc
adc
sub
ljmp
je
cmc
leave
fists
cwtl
mull
lcall
stc
xchg
add
vrcpss
dec
adc
cs
fdivs
in
push
fsubr
dec
jne
cmp
inc
push
mov
adc
mov
xchg
mov
jbe
adc
jne
cmp
mov
cmp
ds
jbe
inc
dec
sbb
mov
call
sbb
cld
xor
or
mov
iret
inc
cmpsl
adc
pop
movhlps
and
adc
inc
push
sysexit
mov
and
fwait
aad
jmp
dec
das
es
pusha
dec
mov
inc
xor
xor
fisttpll
stos
pop
sbb
xor
pop
lret
test
call
test
mov
sbb
xorl
pop
ss
mov
fdivrs
cmpsl
ror
ror
inc
outsb
cmp
enter
xchg
nop
in
sbb
fcoml
outsl
mov
jp
mov
xchg
not
lock
dec
jmp
push
inc
call
xor
ret
cld
in
das
call
xor
shlb
loope
call
push
xor
dec
or
call
jno
fdivrp
jb
ja
push
jl
sti
push
mov
xorb
dec
jl
adc
sbb
out
and
sbb
dec
cmp
push
test
sbb
xchg
mov
adc
gs
dec
or
rcrb
ljmp
out
pop
pop
pop
std
mov
out
sbb
jecxz
pop
addr16
mov
aad
punpcklbw
lods
shlb
fdivl
xchg
dec
mov
push
cmp
and
or
dec
lahf
xchg
data16
enter
mov
fmul
loope
lcall
mov
or
mov
pop
jge
jl
sub
xor
repz
dec
popf
ret
leave
stc
cmpsb
xchg
leave
jl
pop
into
mov
sbb
test
aam
fstpt
xchg
pop
sub
lcall
add
stos
fdivs
insb
mov
into
sub
or
dec
add
enter
jns
jbe
out
add
fidivrl
test
lds
cltd
popf
daa
xor
int3
pop
int
dec
lods
jl
aas
inc
pusha
jle
mov
cmp
loope
popf
mov
inc
pop
divl
cli
iret
adc
cld
add
xchg
std
sub
or
adc
xchg
cltd
shrl
mov
movhps
adc
sub
mov
xor
xchg
addl
inc
sbbb
lea
rcrl
inc
addr16
or
and
push
cmp
jg
pop
std
mov
clc
test
ja
imul
cmpsl
fildll
mov
jo
sahf
out
mov
lea
ljmp
decb
sub
jmp
packsswb
push
shll
test
add
into
dec
pop
jns
inc
bound
sbb
jmp
shlb
push
lret
lret
jle
sub
out
inc
cltd
dec
int
js
and
popf
adc
pusha
mov
loop
xchg
fstpt
jae
sub
pop
loope
or
pushf
sub
pop
fwait
iret
call
call
jge
inc
and
test
jp
sbb
clc
pushf
invd
adc
pop
cltd
fisubrs
inc
and
jae
inc
mov
jnp
daa
and
mov
mov
imul
mov
cld
push
push
jmp
inc
sub
je
or
cld
mov
in
dec
adc
cmp
mov
out
xorb
imul
inc
and
aas
fdivs
jle
fwait
ret
cmp
lods
push
xor
std
xchg
inc
mov
sbb
out
daa
shrb
inc
addl
lret
xchg
cmpsl
mov
mov
adc
sub
adc
mov
daa
leave
insl
push
jp
sti
add
ret
dec
leave
mov
pop
shlb
dec
adc
js
adc
ficompl
inc
or
xor
mov
push
xor
cwtl
icebp
adcb
and
xor
mov
ss
movsl
pop
leave
stos
pop
mov
test
jae
jne
dec
push
test
dec
inc
push
fdivrl
not
bound
lahf
out
mov
daa
xchg
test
mov
jmp
pop
cmp
xor
cmp
hlt
xchg
add
inc
and
mov
fwait
repz
and
fdivrl
gs
xchg
jnp
sub
sub
clc
mov
push
adc
call
jle
mov
cmp
sahf
adc
pop
loopne
push
lea
insb
imul
push
inc
jns
cmp
inc
pop
je
int
cmp
pop
adc
decb
xchg
cmpsl
push
pop
sbb
into
pop
repnz
cltd
jbe
and
cmp
daa
xchg
jnp
fidivrs
xchg
loope
mov
jnp
stos
js
arpl
mov
subb
sub
fisttpll
or
adc
movsb
xchg
js
jo
and
mov
hlt
nop
push
rolb
stc
jge
sbbb
sahf
push
inc
aad
add
ljmp
mov
arpl
jge
push
add
dec
cmp
sar
xchg
pop
xchg
xchg
dec
icebp
jne
jp
pop
icebp
xchg
mov
cmp
sti
jae
adc
fldln2
mov
lahf
scas
in
cmp
mov
cmpsb
adc
jbe
mov
xchg
and
ret
mov
or
mov
mov
mov
adc
pusha
pop
xor
and
fldcw
xchg
mov
push
mov
mov
mov
rcrl
xor
shrb
cmp
xor
dec
test
xchg
ret
fidivrs
rcll
xchg
lahf
sub
testl
jge
jmp
jno
mov
cmp
aaa
shll
xchg
xlat
cld
movsb
push
jne
cs
lret
adc
and
jg
cmp
in
in
sahf
fwait
sub
pop
nop
in
sahf
xlat
aam
and
jns
testb
push
cli
pop
xchg
sub
enter
adc
jmp
xchg
movsb
iret
lcall
cmc
enter
fsubr
sti
rcrb
xchg
sbb
mov
ds
jns
add
bound
and
ja
inc
xor
call
jbe
xlat
addr16
xchg
jb
lea
scas
xchg
jno
sub
pop
mov
xchg
inc
int3
or
test
xor
fs
xchg
mov
add
push
mov
cs
ret
add
add
pop
std
sub
push
and
cli
mov
cwtl
loope
insb
pop
outsb
sub
add
mov
cltd
mov
pop
and
cmp
mov
int
pop
xor
and
fisubl
stos
loop
fdivr
pop
je
xchg
and
add
add
lds
fildl
shr
cmp
xchg
add
sahf
mov
dec
daa
mov
cmp
mov
sbb
test
dec
and
and
loope
lods
jecxz
out
pop
leave
fidivrs
adc
xorl
lea
test
insb
xchg
jo
fimull
test
das
das
adc
mov
cltd
cmp
push
ljmp
repnz
or
inc
imul
pop
movsl
sub
gs
faddl
jecxz
mov
loopne
pop
std
mov
jns
into
mov
fwait
or
mov
divl
adc
aam
daa
lds
pushf
das
and
jbe
jl
xor
out
sahf
jae
mov
mov
dec
mov
xor
sbb
sbb
iret
and
xchg
icebp
jns
mov
pop
fs
lds
lea
aaa
dec
xchg
popa
mov
pop
jne
lret
jno
or
test
mov
xchg
insb
test
pop
sbb
mov
mov
fs
add
inc
and
mov
inc
aam
jmp
enter
subb
loopne
push
mov
or
outsl
inc
mov
push
push
dec
insl
mov
adc
add
test
fsubrs
stos
imul
icebp
fwait
dec
mov
mov
pop
in
push
xchg
jae
dec
add
int
mov
sbb
ss
add
dec
cwtl
aam
rcr
push
stos
inc
and
in
dec
sbb
cmp
mov
sbb
push
mov
lds
leave
adc
xchg
cmp
inc
insl
xor
std
mov
mov
sbb
pusha
inc
repz
and
jmp
repz
mov
repz
mulb
sub
pop
ss
rclb
je
and
in
fdivrs
outsl
inc
dec
in
jge
mov
push
add
aad
xor
aad
mov
adc
xor
pop
hlt
cld
mov
add
push
sahf
pushf
sbb
push
inc
push
sub
mov
and
xor
cmp
add
arpl
cmp
xchg
dec
and
and
outsb
scas
mov
jo
adc
xchg
or
cmp
gs
int3
and
dec
cmp
mov
movsb
clc
and
dec
repz
cmpsb
mov
cs
outsl
rorb
cmp
sub
je
mov
push
xchg
mov
imul
je
jmp
mov
jg
inc
jmp
popf
js
rolb
adc
shll
xchg
dec
out
es
xor
mov
jb
xchg
addr16
sbb
jns
outsb
mov
mov
in
ljmp
inc
mov
xchg
push
sahf
mov
or
push
xor
lds
xor
test
jg
in
sub
std
pop
sub
repnz
int
dec
fiaddl
or
xchg
test
fldl
mov
out
out
jmp
mov
and
mov
inc
mov
lea
push
jecxz
fimuls
or
mov
imul
aas
dec
sub
sub
jp
imul
inc
lret
xor
pop
movsb
scas
push
adc
xor
ja
adc
shrb
out
lds
mov
andps
inc
lock
sbb
scas
jecxz
loope
daa
sub
mov
jmp
ljmp
sbb
jmp
inc
lods
sbb
inc
pop
leave
ja
jecxz
xchg
dec
lea
or
inc
out
data16
pop
xchg
jge
ret
sbb
rolb
dec
xor
sahf
in
imul
es
mov
jecxz
sahf
outsb
shlb
out
fcmovu
pop
xlat
mov
loopne
mov
mov
or
jns
loopne
inc
shrb
mov
call
jg
jne
in
dec
lock
dec
icebp
imul
xchg
movsl
pop
lea
into
popf
dec
sub
mov
or
cs
cli
out
pop
inc
xor
lcall
cmp
pop
lea
mov
push
inc
fidivs
sub
mov
pop
icebp
insb
fnstsw
js
dec
movl
pop
mov
dec
icebp
push
movb
out
shr
mov
xchg
dec
jne
es
mov
add
jbe
cmp
xchg
jne
pop
xor
or
mov
jb
ljmp
in
adc
mov
xorb
dec
movsl
add
jne
shr
dec
ds
mov
mov
jo
add
aad
stos
outsl
push
jne
xchg
pop
inc
sub
xchg
mov
and
sbb
movsl
xchg
jge
mov
push
das
cmp
dec
test
push
sub
inc
push
xchg
fst
sub
mov
jae
decb
pop
jl
xchg
aaa
dec
cmp
jmp
scas
jbe
jp
jg
lds
xchg
and
sbbb
adc
and
and
xchg
mov
jns
push
cwtl
jle
imul
addr16
mov
aaa
cmp
int
popf
pushf
xor
adcb
pop
cmp
xchg
or
lods
frndint
mov
mov
mov
repz
fcmovnu
cmpsb
jbe
aam
lea
and
cld
add
xchg
pop
adc
adc
push
mov
sarb
and
xor
lret
into
cmpsb
mov
arpl
mov
pop
pop
sub
std
xlat
aas
xor
jg
and
out
leave
jae
dec
add
insb
cli
loope
mov
out
xor
pop
in
mov
sbb
add
adc
out
mov
int
pop
dec
xchg
test
inc
ja
mov
xchg
push
mov
mov
mov
cli
cmp
jns
fdivrl
mov
mov
std
sub
cmp
mov
iret
mov
aad
aam
cmp
mov
loopne
lods
cs
lock
out
jle
movsb
test
add
xchg
stc
aas
popa
mov
mov
sbb
xchg
icebp
mov
data16
call
roll
insl
push
xchg
adc
cli
jno
jecxz
mov
xchg
lret
out
rcr
lcall
cmc
xchg
xchg
outsb
mov
add
ljmp
inc
je
push
lcall
and
adcl
lcall
and
lea
and
cmp
push
popf
aas
in
movsl
fsubr
inc
cmp
ja
mov
pop
jmp
div
mov
pop
les
jne
aam
pop
mov
arpl
jge
cmc
xor
dec
clc
sub
test
jmp
lods
or
inc
pop
pop
dec
dec
notl
test
or
iret
ja
jnp
test
dec
add
xchg
or
xor
ret
sbb
push
out
mov
pop
popa
dec
clc
aas
xlat
insb
xchg
push
jne
sub
out
in
mov
dec
daa
loopne
mov
int3
mov
fiaddl
jne
and
lods
push
pop
jg
sub
mov
dec
xor
lock
mov
mov
mov
and
imul
imul
testl
sub
jne
fsubrl
fcoml
dec
ret
insl
icebp
ljmp
inc
jl
mov
jne
sti
mov
sarb
add
and
imul
vcvtps2pd
ja
push
xor
aad
cmp
mov
adc
in
ja
cwtl
xor
or
jge
inc
into
and
pop
movsl
cmp
scas
pop
inc
mov
xchg
add
stc
pushf
aaa
sbb
out
cmp
imul
int
lret
lret
mov
clc
dec
mov
test
roll
sbb
iret
insl
jb
jle
mov
pop
cmp
repnz
lds
mov
in
push
lret
jb
test
xchg
push
outsl
out
sbb
lret
mov
cs
iret
in
cli
insb
adc
and
adc
mov
cld
aad
outsl
add
push
sub
iret
pop
or
xor
or
jae
or
ss
in
adc
shr
mov
subb
cmp
pop
pop
mov
fcoms
and
clc
or
mov
xchg
sbb
sbb
and
mov
xor
orl
pop
imul
push
cli
or
jge
arpl
test
xchg
push
inc
repz
loop
jne
xchg
mov
icebp
fcoml
jmp
mov
cmp
das
sahf
cltd
mov
xchg
or
aam
jg
push
ja
xorl
cli
arpl
mov
or
push
jl
scas
call
faddp
out
or
das
les
jmp
sub
or
cmpsb
pop
xchg
pusha
rcrl
jbe
xlat
cmp
movsb
push
js
xchg
xchg
fwait
loope
sub
mov
sbb
mov
loope
mov
mov
pop
pushf
xchg
out
inc
sub
sahf
ret
adc
sub
popf
add
push
sub
sub
fimuls
adc
icebp
push
lock
mov
adc
shll
in
pop
cmpsb
mov
mov
clc
cld
aas
mov
mov
and
iret
xor
mov
ret
push
adc
pop
stc
test
lahf
jae
jo
dec
jns
daa
jp
cwtl
inc
popf
sub
pop
dec
fabs
mov
fdivrl
jne
jb
cmpsb
test
addb
int
addr16
ret
jns
push
outsl
arpl
in
push
test
cmp
cld
mov
test
push
inc
sub
repnz
mov
ds
push
lret
mov
jne
add
dec
imul
jno
lret
ja
ja
mov
mov
rcrl
inc
jo
bound
cmp
jp
imul
sti
sub
dec
repz
outsl
dec
hlt
or
scas
add
jecxz
daa
mov
lret
aas
adc
test
jbe
rcll
rclb
gs
jae
add
lds
jp
or
dec
std
add
xchg
fisubrs
icebp
pop
adc
and
push
outsb
add
rcl
xchg
and
mov
rcll
and
xchg
lret
ss
adc
or
inc
xor
aam
and
inc
pop
mov
and
push
xor
es
add
push
cs
nop
sbbl
cmp
bound
xor
or
add
loopne
test
inc
sbb
xchg
mov
scas
and
inc
in
scas
insl
xor
das
cmc
add
push
mov
lret
push
mov
call
cmp
out
xchg
cmp
arpl
pop
dec
sbb
fsub
sbb
dec
lret
mov
mov
mov
pop
call
mov
pop
pop
cltd
xchg
xchg
sbb
stos
fs
mov
cmc
scas
imul
mov
loopne
mov
add
in
std
popa
adc
stos
cltd
in
inc
sbb
cli
jb
mov
fdivr
add
xchg
pop
pop
stc
lahf
ret
cmp
xlat
sbb
xchg
sbb
or
testl
fdiv
jbe
add
or
test
in
mov
push
sbb
pop
pop
pop
xchg
pop
dec
sub
fwait
imul
push
fwait
movsb
incb
xchg
faddp
jmp
pop
addr16
add
jle
ret
and
dec
fs
push
adc
orl
add
inc
mov
sub
stos
dec
mov
push
movsl
inc
xchg
mov
cwtl
cmp
int3
mov
fsts
cmp
mov
add
xor
cmpsb
scas
mov
xor
gs
push
push
xor
addr16
mov
fidivrl
testl
sub
inc
jbe
mov
xchg
lcall
dec
mov
dec
cmpl
iret
popf
sbb
or
in
incb
push
mov
dec
sub
mov
cmp
clc
mov
lret
es
fs
dec
xchg
inc
stos
push
notb
adc
dec
aas
xor
ss
or
aad
push
xchg
cmp
mull
ret
sarb
inc
je
lea
push
mov
mov
jecxz
xchg
jecxz
ret
jne
lret
mov
cli
push
xchg
lods
mov
and
or
push
int
lcall
pop
or
cmpsb
in
aas
sti
cmpsl
xor
add
adc
push
mov
bound
lods
add
test
push
test
in
push
testb
ret
dec
pop
imul
test
xchg
movb
jae
js
dec
fmull
inc
xchg
push
xchg
and
dec
cmpsl
push
je
fsubrl
stc
test
repz
cmpsl
mov
push
aaa
dec
or
leave
stc
stc
mov
fnsave
rolb
hlt
ret
mov
add
mov
js
cs
testl
test
or
or
mov
scas
mov
stos
pusha
test
add
addl
in
sbb
lock
movsb
mov
mov
xor
xchg
mov
sbb
movsb
incl
lahf
mov
cmp
pusha
popa
je
and
mov
aad
push
and
mov
je
push
popf
in
cmp
movsb
daa
fldcw
mov
push
stc
pushf
xchg
les
push
and
addb
push
inc
adc
fwait
mov
add
adc
hlt
sbb
popa
jae
popf
movsl
sub
rcrl
leave
push
lock
std
push
fwait
and
lods
jbe
cmp
and
mov
dec
sbb
test
imul
and
je
addb
sbb
mov
sub
mov
dec
repnz
pop
nop
daa
add
aas
sbb
push
or
inc
xchg
popa
mov
dec
cmp
test
scas
testb
int
jp
pop
into
jns
mov
sub
sub
outsl
lds
aad
cmp
add
cld
push
mov
and
scas
push
dec
pushf
jg
inc
bound
inc
add
les
arpl
mov
cmp
loopne
jno
rorl
cmpsb
jbe
sahf
hlt
inc
mov
inc
mov
dec
cmc
cltd
mov
imul
incl
loop
mov
jno
test
fsubrl
mov
cld
adc
cmp
jmp
mov
xchg
pop
mov
ret
stc
fsub
stos
adc
xor
mov
inc
repnz
push
ja
nop
jbe
in
sub
adc
jae
lahf
mov
add
sbb
push
das
aas
jns
fnstenv
shr
cwtl
xlat
loop
test
or
inc
pushf
orl
mov
push
pop
test
aam
dec
push
ljmp
comiss
shlb
inc
fldl
xlat
dec
xchg
out
iret
dec
mov
pusha
ret
loopne
mov
int3
add
mov
mov
or
and
gs
xchg
jmp
and
push
movsb
in
shlb
insb
or
and
sbb
or
test
push
bound
cmp
fisttps
mov
clc
cmp
out
fisttpll
stos
fldt
int
or
cwtl
adc
xchg
or
and
sbb
out
xor
arpl
inc
sub
pushf
notl
shll
push
cli
lcall
cwtl
adc
inc
xchg
xchg
or
lea
and
sbb
jmp
cmp
inc
andb
outsb
jo
jge
outsb
jb
adc
shrl
aaa
insl
pop
imul
mov
inc
test
xor
pusha
add
mov
xor
lcall
or
mov
cmp
mov
xor
jl
movsb
loop
rcl
pop
mov
fwait
mov
push
pop
in
popf
inc
outsl
xor
aam
ja
hlt
mov
bound
lret
bound
xlat
mov
jnp
rcrl
cwtl
stc
sti
movsl
inc
push
lret
inc
popf
bound
sub
push
scas
stos
adc
push
or
insb
shll
or
mov
mov
fneni(8087
push
adc
mov
scas
push
pusha
and
mov
in
ret
sub
hlt
icebp
jne
stc
jo
jae
adc
popf
nop
negl
pusha
xlat
wrmsr
jbe
mov
jg
pusha
mov
push
rcr
or
in
scas
or
inc
sbb
xchg
arpl
dec
popf
mov
ror
sbb
scas
jecxz
mov
add
mov
mov
movsl
repz
push
jp
add
ss
adc
mov
jg
adc
push
push
adc
pop
xchg
js
add
cmp
cwtl
and
sbb
xchg
inc
mov
cmp
cmp
lds
push
pop
mov
mov
sub
and
jmp
pop
mov
jo
xor
out
sbb
pop
mov
adc
dec
mov
pop
in
lcall
cmpsl
sub
arpl
xor
rcr
inc
stos
push
lea
mov
push
std
pop
dec
jb
lret
xchg
stc
jmp
cwtl
push
in
outsl
cmpsl
out
and
stos
xchg
lret
mov
cmp
dec
jecxz
cmp
xor
call
enter
inc
in
je
jo
nop
mov
out
imul
lea
adc
push
or
rcl
repnz
mov
pushf
aam
pop
mov
addr16
adcl
cli
leave
sub
loope
movq
das
cmp
and
daa
mov
mov
addr16
scas
int
dec
popa
sti
pop
dec
push
mov
iret
cmp
xchg
mov
mov
leave
pop
add
mov
jg
dec
je
fdivl
lock
imul
stos
lahf
cmc
xorl
sub
push
movsb
orl
ror
xchg
and
sti
insl
mov
movsb
leave
in
fsubs
jne
sub
push
cld
ret
decl
hlt
scas
ret
jmp
scas
imull
aas
sub
jnp
jno
xchg
push
int
add
xor
lds
sbb
mov
rcr
inc
dec
nop
mov
pop
pop
leave
flds
cmp
lret
ss
jns
imul
jno
push
in
or
xor
cmp
fwait
gs
sbb
in
xor
push
dec
mov
mov
ljmp
inc
inc
cwtl
mov
sub
ds
pop
xor
xadd
adc
pop
inc
dec
mov
lea
mov
push
jnp
stc
xchg
jnp
mov
cmpl
out
shrb
test
cmp
mov
in
loop
jmp
stc
dec
adc
iret
mov
mov
loope
pop
loopne
das
insl
jo
jnp
xor
push
xor
test
push
pop
out
leave
subl
push
mov
mov
push
xchg
mov
rcr
or
stos
cli
rcrb
and
shr
cmpsl
mov
sbb
mov
aaa
or
clc
jecxz
mov
add
scas
cmc
pop
adc
sbb
fwait
xchg
pushl
lret
inc
xlat
aaa
mov
xchg
add
push
ja
xorb
mov
pop
cmp
int
cmc
lcall
sub
mov
push
jmp
mov
push
push
inc
shlb
inc
call
fwait
andb
mov
pop
push
out
rorb
jge
or
repnz
inc
xchg
inc
int3
jecxz
xchg
fisubs
inc
adc
xlat
stos
mov
cld
jge
fs
orb
push
pop
cmpsb
xor
sbb
xchg
and
lret
js
sahf
insl
ds
and
pop
aas
xor
xchg
cmpsl
add
mov
fwait
pop
mov
sub
dec
xor
int
and
inc
pop
cmpsb
mov
shrb
mov
pop
push
in
les
arpl
loope
pushf
or
xchg
in
dec
jmp
pop
scas
push
call
mov
add
jge
ret
cmpsb
xchg
sub
sub
imul
pop
in
mov
cs
cltd
jo
mov
push
outsl
shl
out
or
push
mov
inc
jg
notrack
mov
fwait
popf
sub
pop
stc
cwtl
les
cmp
xor
dec
and
jl
mov
out
xchg
lds
jge
ss
cltd
dec
test
and
cmp
cld
mov
pop
cmp
int
cltd
imul
scas
orb
pop
adc
jge
rorl
call
rolb
sub
test
mov
repz
push
mov
mov
loop
adc
cltd
xchg
jmp
shll
push
or
popa
add
daa
or
pusha
stos
mov
jmp
xchg
cmp
ficoms
mov
inc
push
leave
sbb
cmp
mov
aam
add
pushf
or
xor
lods
cmp
out
mov
push
leave
pop
mov
sub
addb
out
ljmp
pop
or
addr16
inc
stc
subl
mov
adc
ljmp
inc
int3
xor
dec
push
jecxz
push
push
iret
add
leave
push
lods
les
lock
ss
cmp
loope
xor
mov
adc
int3
ret
jg
cwtl
xchg
mov
add
addr16
push
stos
dec
bound
and
mov
push
cld
test
aaa
icebp
mov
mov
in
inc
dec
lods
enter
cmp
iret
xchg
fdivrs
call
add
pop
in
adc
adc
popf
insl
stc
test
repnz
rclb
xchg
inc
or
shlb
movsl
pop
fs
lea
sub
sub
shrb
and
loop
fwait
adc
push
jl
mov
ljmp
pop
out
jns
mov
mov
lret
dec
clc
addr16
in
js
add
pushf
xchg
lret
add
inc
add
and
icebp
lds
mov
jnp
push
ja
adc
test
sti
mov
shlb
and
push
movsl
dec
rcl
lahf
ljmp
rolb
shlb
cmp
or
mov
inc
in
pusha
sarl
movl
pop
test
push
push
dec
addr16
ds
jge
ret
and
hlt
sarb
test
cmp
fwait
mov
jo
dec
sbb
pusha
in
adc
inc
inc
jg
dec
outsl
pop
dec
movsb
andl
rol
sarb
cmp
insb
and
adc
in
xlat
push
xlat
into
sub
cltd
xchg
jb
test
dec
insb
andl
dec
push
mov
lods
sbb
dec
inc
int
adc
iret
hlt
xchg
mulb
mov
scas
fldt
std
cli
adc
mov
shlb
cmp
mov
mov
bound
push
cmp
cmc
scas
mov
bound
cmp
mov
sub
cmc
inc
xchg
in
adc
lahf
nop
push
insb
xor
hlt
jg
adc
sub
rcrl
jl
into
mov
hlt
lods
repz
iret
ja
movsb
mov
xor
ret
jo
popa
xchg
jmp
hlt
jge
shlb
cmp
shrl
roll
sub
clc
pop
dec
in
stos
or
in
push
jne
dec
loope
pop
ss
ret
repnz
movsb
sarb
pop
into
dec
and
inc
jae
enter
push
push
mov
dec
pop
mov
loop
test
mov
cld
and
pop
mov
mov
pop
add
xchg
xchg
push
imul
rorb
jns
imul
lods
fldenv
mov
mov
testb
inc
repnz
leave
pop
sbbb
inc
ja
jne
das
rorb
test
std
xor
jl
orl
lods
cltd
pop
js
inc
jle
test
stc
mov
cld
das
xchg
and
loop
stc
mov
shll
pop
scas
push
jne
jge
lods
adcl
lods
aaa
call
mov
bound
subb
push
mov
sbbb
and
sbbl
mov
dec
fnstenv
or
jne
lahf
xchg
cwtl
mov
sbbl
pop
xchg
add
pop
outsl
xchg
jp
call
jno
sbb
dec
push
push
stc
dec
jno
std
jns
fdivrs
xor
lods
nop
dec
pop
hlt
ret
out
dec
mov
xchg
or
test
xchg
dec
shl
aaa
sbb
xor
pop
xchg
mov
inc
ret
std
and
push
adc
jo
mov
insl
and
sub
jae
pushf
fidivrs
or
xor
loopne
mov
bound
and
lea
push
pop
shrb
jo
mov
pop
push
push
sbb
xor
negl
daa
sub
or
push
movl
prefetcht1
in
mov
xor
mov
arpl
stos
in
lods
stos
lea
and
lea
fists
in
and
sbbb
pop
ficompl
test
rolb
jg
sbb
fcomip
mov
xlat
or
mov
test
hlt
mov
out
jae
out
cmp
jb
insb
fldcw
pop
jle
mov
sbb
and
and
out
xor
repnz
sbb
int3
mov
aas
iret
cmpl
sbb
push
mov
push
xchg
int3
jns
int
fcmovnu
mov
xlat
insl
push
inc
or
aam
cmp
lds
lret
push
adc
or
jbe
daa
xlat
dec
push
insb
enter
push
pushf
rcrl
xor
sbb
xchg
inc
push
ljmp
push
jecxz
jno
imul
jl
jmp
dec
and
mov
mov
jl
lods
cmp
sub
pop
xchg
out
inc
enter
shlb
or
movsb
jge
or
sub
cmc
rol
mov
les
dec
lret
out
push
mov
jecxz
or
inc
rorl
inc
mov
fucomi
insb
iret
dec
xchg
je
jecxz
add
popa
push
call
or
pop
add
sub
xor
and
lcall
dec
addr16
mov
lock
mov
test
xor
aas
xor
sub
ret
sbb
lcall
dec
test
scas
adc
mov
mov
mov
dec
jl
push
add
pop
mov
scas
push
sub
enter
push
lods
or
mov
jecxz
inc
pop
das
imul
addb
rolb
insl
test
cmpsl
mov
or
mov
jmp
add
pop
xchg
dec
pop
adc
loope
mov
cmpl
dec
lret
or
sbb
push
cmp
int3
in
clc
stos
push
mov
xchg
fisubs
pop
jp
enter
iret
out
mov
out
or
loop
pop
lods
sbb
pop
shrb
mov
fcoms
xchg
dec
lcall
subl
stos
xchg
mov
fmull
mov
pop
and
fsts
add
and
push
and
and
scas
mov
int3
inc
sbb
call
in
mov
lds
mov
enter
scas
cmp
mov
cli
cmpsb
shlb
movsb
and
sub
repz
xor
dec
lcall
popl
loopne
loope
sbbl
out
xor
add
dec
push
das
xor
adc
jb
push
movsl
sbb
add
jl
jno
mov
addl
ljmp
mov
repz
je
iret
mov
xchg
dec
repnz
mov
out
sbb
dec
cld
out
sub
sti
jae
jle
xor
in
in
fmul
loope
pop
sub
xor
in
pop
mov
ss
rolb
sub
and
sbb
sbb
mov
ret
add
fwait
mov
jp
sbb
jp
pop
jbe
je
out
or
nop
pop
in
inc
xchg
xchg
in
aam
push
inc
mov
or
mov
clc
jg
loopne
and
inc
rolb
enter
data16
fsts
xlat
cmp
and
rol
mov
fstps
in
sub
xlat
dec
popa
push
add
push
pop
mov
out
and
jp
xor
fistps
jnp
out
dec
sub
rorl
outsb
cmp
lret
pop
jns
in
sbb
mov
cmp
pusha
xchg
xchg
movsb
popl
movsl
xor
dec
pop
xchg
push
fcmovnb
stos
andl
and
inc
sub
or
cmp
xchg
sub
jle
mov
and
push
in
test
lret
call
aam
mov
data16
xchg
in
mov
sub
scas
into
cmp
stc
mov
mov
jb
mov
dec
jbe
xchg
jns
pop
push
mov
cli
and
push
repz
pop
mov
xchg
adc
mov
jno
add
xchg
decb
mov
dec
adc
in
fisubl
inc
or
inc
shll
divb
mov
ds
je
pop
mov
loopne
adc
and
ja
lret
jnp
mulb
add
and
and
push
adc
jl
lret
mov
jo
xchg
sbb
sub
jmp
in
xchg
lea
sub
pusha
xchg
jge
das
adc
and
popa
jo
imul
mov
in
pop
out
dec
fcmovnbe
out
leave
xchg
ss
and
std
fwait
pop
out
mov
ror
mov
cmp
cwtl
cmp
mov
dec
sbb
lods
loope
push
or
enter
out
dec
loop
rorl
push
popa
pop
or
rorl
leave
mov
ltr
mov
pop
xchg
in
in
jo
inc
popf
pop
ja
inc
cmpsl
loopne
mov
push
in
jno
or
sbb
or
sti
inc
data16
xchg
xchg
sub
scas
outsl
jno
jmp
or
loopne
and
adc
imul
pusha
das
mov
std
fisubs
sub
mov
mov
push
pop
into
test
test
xchg
loopne
pushf
js
push
pop
cltd
pop
cmp
jo
jg
fisttpl
lret
pusha
es
mov
in
imull
cwtl
push
jp
stos
cmp
pop
sahf
xchg
out
xchg
leave
pop
lret
mov
pop
decl
cltd
xchg
mov
cmpsl
fsubrl
jns
push
inc
cli
cmp
out
test
cs
xor
movsl
aam
std
pop
sub
lock
mov
jns
inc
scas
jno
clc
push
scas
fincstp
xorb
leave
aaa
sub
gs
xor
pop
pop
jbe
shrb
push
mov
mov
or
popf
fiadds
push
add
mov
inc
pushf
cmp
xchg
fdivrl
mov
pop
insl
add
push
repz
inc
jmp
cmc
das
adc
add
or
fisttpll
in
jg
loop
jl
sub
sbb
cli
aad
add
push
shufps
les
mov
roll
call
in
pop
push
stc
fldl
adc
insb
jb
sub
add
xor
adc
and
jne
test
outsb
xchg
daa
out
push
inc
or
or
push
lcall
and
inc
sti
mov
in
pushf
int3
and
adc
mov
movsl
and
aad
dec
mov
add
mov
inc
mov
in
jno
rcr
je
fwait
sub
inc
dec
push
jb
cmp
or
lcall
or
lcall
sbb
fldz
mov
jg
mov
cmpsl
xor
push
jbe
mov
cmp
jge
lahf
jp
push
jne
push
mov
ja
stos
mov
sub
in
jmp
mov
nop
push
mov
inc
and
add
lods
cld
filds
nop
out
xchg
dec
push
lcall
je
mov
dec
adc
cmp
out
cmp
xchg
xchg
or
das
mov
mov
daa
lret
mov
int3
aam
leave
in
xor
imul
inc
in
jle
cs
push
sub
and
mov
enter
cmc
in
mov
lahf
mov
push
stos
sub
xchg
dec
push
adc
jmp
pop
ret
jmp
xchg
call
and
inc
add
and
xchg
test
imul
and
lds
ret
sub
jecxz
dec
lret
jp
test
and
imul
lret
mov
data16
dec
jecxz
data16
jno
js
test
sbb
mov
out
leave
jnp
outsb
pop
sub
fs
in
pop
scas
inc
jb
inc
int3
xchg
jo
lds
cwtl
mov
rol
fimull
jae
adc
xor
imull
stc
mov
sbb
je
popf
pop
or
mov
scas
sbb
ss
fnstsw
into
mov
jl
jge
out
push
aad
inc
mov
fmuls
aaa
pop
pushf
cmp
inc
dec
js
xor
mov
jns
test
fistps
dec
sbb
sub
call
fsubs
mov
gs
ljmp
ds
and
addl
sbb
dec
loop
out
pop
dec
inc
leave
cmpsb
fst
sti
ja
mov
popa
pushf
sti
mov
xlat
ret
xchg
push
leave
jnp
aam
jl
inc
sti
dec
jo
std
repnz
xor
in
lcall
ror
cmpsb
popa
sti
sub
pop
adc
hlt
inc
shlb
ja
shrb
fimuls
rcrb
decl
cmp
and
and
cmpsb
mov
lret
call
movsl
push
dec
push
aas
test
add
sbb
mov
sbb
xchg
outsl
push
out
jbe
addr16
jbe
dec
mov
lock
push
push
mov
repnz
mov
sti
movsl
and
jp
out
pop
idivl
adc
in
mov
lods
psllw
xchg
jg
xor
sti
in
push
lea
divb
ss
mov
or
push
and
xor
in
repz
xchg
jl
ret
mov
cmovl
push
add
xor
clc
loop
push
cld
scas
mov
sahf
inc
add
iret
nop
faddp
call
xchg
repz
mov
gs
fiaddl
in
movsb
pop
ds
insl
pop
dec
sub
aas
lahf
pop
data16
adc
ret
xor
push
stc
in
aas
and
mov
imul
mov
inc
std
jp
sbbb
jmp
fsubrl
movsl
test
push
je
pop
mov
jno
xchg
fdivr
outsb
mov
cli
test
jnp
sub
loopne
inc
jl
inc
js
fildll
fsts
lea
jle
imul
adc
test
jecxz
insl
cmpsl
inc
xchg
mov
cmc
loopne
xchg
pop
clc
mov
jo
stos
inc
inc
loop
hlt
dec
push
mov
jne
and
movsb
dec
out
push
or
lods
lea
lcall
push
xor
jae
les
imul
fsubrl
mov
inc
sti
and
mov
inc
add
adc
ret
dec
mov
nop
adc
aas
jno
pop
pop
add
and
repnz
rol
add
ret
stc
xlat
outsl
fldl
add
pop
inc
sbb
and
mov
pop
mov
repz
arpl
out
xor
fisttps
stos
test
scas
lds
ljmp
inc
xchg
adc
mov
sbb
iret
mov
xchg
xor
sub
push
push
movsb
push
stos
xchg
outsl
out
jo
hlt
xor
fbstp
inc
xchg
mov
test
cmp
mov
push
adc
int3
or
push
dec
bound
lods
enter
lock
xchg
cwtl
jb
inc
call
and
inc
dec
jmp
stos
mov
mov
cmp
hlt
cmp
pop
in
das
sbb
push
xor
inc
and
dec
push
or
mov
lret
and
clc
adc
mov
jp
cmpsb
jnp
cmc
ja
or
in
shl
iret
int3
arpl
call
xchg
fprem1
aaa
sbb
pop
push
movsl
jmp
pop
lcall
xor
mov
hlt
cld
ljmp
push
ror
jmp
stos
scas
and
sub
aad
sub
cld
lods
out
out
scas
pop
xchg
sub
sub
pushf
push
mov
test
sub
push
test
mov
lret
xchg
out
push
mov
sbbb
les
push
adc
jne
test
fldenv
add
cs
sub
dec
xor
cmc
pop
sub
out
aad
test
xchg
and
jecxz
into
mov
xchg
cmp
adc
or
push
push
sub
out
mov
imul
dec
in
mov
xor
ljmp
mov
sub
jb
scas
aaa
lcall
les
mov
shlb
ss
jp
daa
mov
xchg
pop
rcll
mov
push
subb
rolb
mov
fldl
sbb
sub
and
cmp
daa
add
test
mov
leave
aaa
ret
nop
adc
cli
jo
ss
sub
sub
out
insb
in
dec
stc
dec
aaa
jl
xchg
mov
pushf
pop
cs
sahf
xchg
pop
push
or
push
and
xor
in
shlb
aam
xlat
mov
test
fsubr
data16
inc
fimull
cltd
out
rcrb
lea
enter
jg
sub
mov
das
pushf
push
inc
hlt
cwtl
ret
lods
jo
or
imul
lret
add
stos
sub
mov
fidivl
insl
test
and
ljmp
xor
xchg
fisttps
inc
shll
push
insl
scas
adc
hlt
mov
imul
int
insb
mov
add
gs
stc
sbb
pop
and
imul
int
inc
pop
faddp
fdivs
aam
pusha
test
xchg
ret
pop
push
inc
mov
mov
xor
loop
test
xchg
lds
inc
push
dec
insb
push
and
push
mov
fwait
lret
shll
jp
idivb
jle
mov
mov
bound
stc
insl
mov
lock
inc
lret
pop
cmp
add
rclb
add
jle
cmp
mov
push
fcompl
gs
aaa
xchg
aam
mov
mov
data16
sbb
pop
dec
pop
testl
sub
inc
cmp
icebp
mov
jle
xorl
xchg
lods
les
lahf
push
outsb
inc
cmpl
jmp
and
xchg
outsl
fsts
and
mov
cwtl
dec
push
cmc
int3
and
stc
lea
popa
jmp
jp
sti
xchg
icebp
mov
adc
jb
mov
cwtl
cs
push
pop
test
out
xchg
and
dec
int3
xchg
ror
adc
cmp
test
js
les
cmp
lock
xchg
fucompp
jmp
and
adc
mov
insl
add
fsubl
and
add
dec
push
call
add
ret
xlat
mov
stc
aaa
out
xor
xchg
mov
sahf
push
js
cltd
jb
dec
fistl
orb
mov
lret
push
dec
pop
pop
jmp
leave
aaa
andb
mov
cltd
js
mov
insl
mov
xchg
push
cmp
shll
fsubrl
data16
addr16
mov
lods
stos
pop
ds
arpl
sbb
int
mov
xchg
xchg
das
adc
rcl
dec
shl
xchg
aas
cmp
xchg
sbb
xchg
pop
loop
popa
jecxz
cli
lcall
dec
cltd
dec
cmp
xor
dec
xor
dec
mov
popf
mov
aad
enter
call
fdivr
fistpll
outsl
mov
divl
ds
add
lods
int3
xorb
xchg
sahf
cmpb
add
fnsave
lds
add
notl
dec
into
call
sub
icebp
cmp
fwait
inc
push
inc
ds
outsb
inc
or
stc
lods
loope
stos
push
pop
in
cs
clc
push
or
xchg
push
adc
daa
aas
rorl
lahf
sbb
lahf
mov
add
rcr
cmp
dec
leave
jnp
pop
in
dec
pop
cwtl
pop
inc
xor
or
aam
jo
push
sbb
sub
inc
and
pusha
insb
repz
pop
jl
push
xor
test
ljmp
mov
iret
xor
mov
in
jno
dec
faddl
mov
sub
adc
mov
pop
sbb
and
stc
jae
ljmp
xor
fnsave
repnz
mov
fcoml
insl
leave
xchg
or
jmp
addr16
mov
xor
push
adc
sbb
es
insl
push
adc
dec
jmp
imul
in
xor
fcompp
mov
les
mov
push
nop
push
mov
outsl
pushf
mov
pop
sub
pop
push
mov
mov
call
cmp
xchg
les
repnz
movsb
and
or
mov
into
or
je
push
and
inc
ret
insl
adc
and
or
sbb
cmp
lcall
scas
pop
lods
jno
inc
push
xchg
mov
insl
movsl
and
inc
xlat
ja
push
orl
in
dec
subb
mov
into
sub
shlb
adc
sub
pushf
rol
ror
pop
mov
or
mov
stos
fmull
idiv
mov
sub
fnstenv
jecxz
pop
lods
aad
pop
or
push
out
loopew
mov
dec
imul
sahf
pop
sbb
mov
pop
in
out
and
mov
mov
cmovb
cs
out
jb
xchg
in
and
inc
jle
sbb
test
mov
mov
dec
pop
mov
dec
inc
mov
xchg
pop
sbb
in
adc
in
jne
test
mov
addr16
pop
out
negl
loopne
cmc
lds
cmpsl
adc
ret
cmp
cmp
inc
pop
negb
hlt
and
outsl
aas
jo
les
pop
and
adc
cmp
xor
fdivrl
out
orb
push
pusha
imul
xor
aaa
int3
inc
fimull
jne
jg
ds
push
xchg
mov
loop
push
push
mov
mov
xor
dec
leave
pop
cmp
adc
out
test
data16
push
jecxz
and
cli
inc
pop
sahf
inc
loope
movsb
fsubrl
push
popf
cwtl
adc
mov
fists
mov
ret
out
mov
jne
or
mov
mov
fistps
mov
ret
pusha
jg
inc
test
mov
aad
lahf
outsb
cmp
mov
push
mov
add
iret
mov
adc
data16
lock
or
mov
movsl
pop
push
dec
nop
push
mov
mov
out
std
adc
shll
add
ss
push
xchg
faddl
fld
xchg
data16
mov
and
or
jae
push
cmp
ret
clc
sahf
push
es
pop
cmc
call
adcb
aaa
pop
fmuls
add
movsb
incb
push
rcll
stc
add
mov
xchg
jl
rcr
ret
rcl
xchg
mov
lret
int
ret
dec
push
fs
fwait
js
fdiv
test
rcrl
addr16
pop
arpl
xor
hlt
xor
test
mov
xor
push
cltd
out
or
mov
pop
inc
xchg
inc
add
call
cld
cwtl
ljmp
out
add
sbb
hlt
loop
rorb
mov
test
lret
mov
pop
repnz
and
xchg
jecxz
out
filds
fwait
jno
js
and
add
push
pminsw
pushf
clc
inc
out
leave
int3
inc
push
sub
lds
jb
dec
addb
mov
sbb
and
inc
fists
xor
push
adc
sbb
dec
mov
mov
rclb
mov
cmp
cmp
xor
fs
dec
mov
subb
inc
decl
or
add
paddq
test
mov
ret
jo
outsb
mov
dec
js
int3
pop
out
inc
frstor
dec
fwait
lret
hlt
mov
xchg
mov
les
xor
sbb
dec
shll
add
xchg
or
andl
push
pop
fnsave
inc
xor
popa
xor
mov
sub
sbb
imul
lock
in
inc
xor
cmpl
das
and
dec
aad
out
das
mov
inc
pushf
push
aam
ds
lahf
ret
mov
xchg
js
cmc
das
clc
inc
dec
pop
xor
rclb
dec
int
and
adc
js
in
test
mov
push
or
insl
dec
push
in
mov
dec
lods
ret
push
mov
fidivl
inc
add
fucomi
mov
fstpl
xlat
inc
ss
dec
popa
mov
arpl
adc
loop
push
insb
sbb
xor
sbb
lea
xchg
fidivrs
or
xor
pop
mov
bound
push
call
sub
pop
mov
and
sar
stc
and
fistpll
cmp
xchg
add
cmp
jnp
addl
icebp
jne
jns
sub
inc
fadd
adc
repz
iret
insb
out
lea
xchg
insl
mov
adc
push
mov
dec
lods
loope
mov
mov
loop
jb
push
jge
in
dec
aas
fwait
push
lods
in
add
xchg
adc
sti
cli
pusha
sub
xor
popa
sub
xor
int3
int
xor
jno
shlb
jmp
xchg
std
hlt
repz
jnp
dec
lahf
popa
arpl
add
push
mov
inc
and
push
adc
sub
rcrl
inc
cmpsb
nop
loope
add
mov
insb
or
mov
cmp
mov
adc
cmp
test
sarb
mov
arpl
and
inc
add
push
andl
bound
fcoms
mov
ljmp
ja
sub
and
sbb
lahf
adc
into
push
push
xor
negl
inc
or
adc
jne
push
test
adc
fcmovnbe
arpl
orl
lahf
dec
test
ja
xor
loope
push
or
xlat
cmp
subl
icebp
shll
push
mov
pop
fcmovu
pop
push
iret
and
pop
ljmp
push
pop
mov
cmpsl
pop
and
lcall
aad
mov
add
fldl
xor
rcrl
rcrb
cmpb
aaa
push
lcall
leave
fs
push
test
into
cmc
scas
push
sahf
ficompl
dec
mov
push
fldcw
popa
add
pop
push
sbb
stos
push
out
jmp
jbe
cli
aas
adcb
pushf
inc
bound
adc
lea
xor
cwtl
ss
hlt
mov
sahf
sbb
mov
in
xor
push
cli
cmpsb
add
add
icebp
lods
inc
mov
push
ljmp
cmpsb
mov
int3
xchg
inc
loope
push
jbe
add
int
inc
mov
daa
add
cli
cltd
or
mov
mov
inc
clc
cmpsb
sub
sub
rcrb
jl
js
call
insl
stos
mov
mov
sti
mov
sub
sbb
push
xchg
sub
or
push
test
repz
pusha
cli
cmp
inc
mov
cmpsl
out
mov
call
mov
xor
and
les
cmp
xchg
fists
repnz
leave
mov
movsl
stos
sbb
and
vprotb
add
push
jg
sbb
cmpb
and
jae
xchg
rcrl
loopne
jl
add
stos
test
mov
and
popa
lret
mov
inc
movb
stos
mov
js
xor
mov
inc
mov
jb
xchg
and
in
sbb
outsl
hlt
bound
setle
int
lods
in
test
outsb
aam
and
push
cs
enter
loopne
push
sarl
xchg
inc
push
lods
mov
mov
daa
mov
in
movsb
adc
cwtl
pop
test
jle
sbb
mov
mov
mov
add
or
loope
mov
scas
push
call
inc
stc
rorb
push
movb
xor
pop
mov
fwait
lods
fs
mov
fwait
cmp
int3
adc
mov
pop
in
lods
sub
hlt
lcall
enter
and
fildll
lock
lods
es
push
sbb
xor
in
gs
ljmp
pop
push
push
int
xchg
push
xchg
mov
mov
sub
pop
test
and
sub
movsb
repnz
or
add
dec
mov
test
loope
test
jge
mov
in
pop
fsubrl
mov
add
fnstsw
cli
dec
xor
push
xor
cltd
push
mov
adc
int3
or
mov
mov
lea
fsubrl
lods
pop
scas
or
xchg
sub
jmp
daa
xchg
pusha
push
fdivs
cmc
sbb
pop
or
pop
mov
shr
mov
cmp
or
mov
add
pop
mov
fcom
adcb
lret
int
shr
pusha
test
xchg
pop
leave
paddb
lcall
lcall
ret
incl
mov
ret
sub
hlt
and
dec
subb
cmpb
jns
shll
shll
lea
fcmove
inc
push
test
mov
pushf
ret
addl
test
std
std
sub
cmpsb
into
or
jbe
stc
outsl
cmp
and
repnz
cmpsb
xchg
clc
jmp
cmpb
cmp
scas
add
mov
xor
sbb
daa
scas
sub
stc
xchg
mov
push
adc
jge
jae
add
aaa
and
daa
add
sub
sti
xor
pop
hlt
jb
and
dec
pop
jne
sub
lret
dec
das
dec
adc
mov
dec
outsb
and
cmpsb
inc
ja
sub
mov
loopne
jno
enter
push
jge
add
xlat
int3
dec
bound
inc
dec
ret
xor
dec
arpl
and
test
imulb
in
inc
popf
in
stos
testl
icebp
push
xor
loopne
mov
adc
dec
mov
ljmp
and
aam
dec
pop
rcrb
mov
dec
or
cmp
iret
xchg
xor
dec
xchg
std
ljmp
imul
cmp
xor
or
xchg
mov
mov
mov
inc
mov
jmp
hlt
mov
stc
mov
jg
push
adc
or
stos
add
leave
push
imul
arpl
sbb
imul
jl
push
dec
or
adc
lods
in
shll
mov
xlat
mov
mov
mov
roll
fsubl
jge
or
mov
xor
and
push
mull
xor
sahf
imul
jge
push
mov
jmp
inc
pop
jg
mov
add
lahf
pop
xchg
test
jecxz
or
sbb
rol
inc
cltd
sbbl
xor
xchg
xlat
xor
insb
stos
out
orb
js
lcall
into
mov
push
adc
mov
in
nop
mov
cmp
pop
jnp
in
hlt
int
sub
in
test
or
int
jecxz
xor
xlat
inc
and
stos
sti
push
xor
insb
cmp
mov
lcall
sbb
cmpl
imul
and
sbb
addb
outsb
sarb
cmp
les
inc
xchg
mov
sbb
mov
sub
jg
or
mov
pop
sti
push
cmc
data16
enter
aaa
jne
cmp
imul
insl
push
adc
and
mov
mov
aas
arpl
rcll
sbb
push
cli
cld
push
sbb
enter
sbb
and
js
int
lret
outsb
xor
xchg
xchg
shll
mov
js
pop
or
shlb
push
pop
in
mov
mov
adc
push
mov
pop
and
mov
xchg
in
pop
pop
into
cmp
cmpsb
arpl
shl
icebp
insb
jne
fnstsw
or
shlb
filds
jae
mov
jne,pt
sub
out
xchg
shll
pop
push
lods
cltd
mov
in
mov
in
xor
push
jne
fsubs
sbb
lahf
loopne
add
test
push
iret
sahf
mov
insb
repz
mov
jbe
int
jns
inc
adc
pop
or
pop
test
dec
leave
push
test
sbb
dec
stos
fucom
push
lods
dec
fisttpll
jge
inc
sub
sbb
cmc
mov
xchg
and
mov
cmp
mov
jmp
outsl
test
les
xor
mov
ljmp
sbb
ja
lret
hlt
adc
sub
inc
jno
daa
cli
inc
push
pop
xchg
inc
jb
loop
or
xlat
shld
addr16
and
xchg
xor
mov
std
mov
outsl
mov
popf
leave
scas
mov
inc
mov
adc
adc
xchg
js
mov
inc
jae
and
mov
fidivrl
sbb
stc
push
popf
data16
xchg
sbb
inc
in
adc
cmpsl
jns
dec
push
adc
les
cmpsb
roll
sub
daa
insb
push
xchg
and
push
xchg
stos
stos
mov
pop
adc
cmp
push
sti
adc
popf
outsl
pop
pop
lret
in
jb,pn
and
xor
add
inc
xor
insl
cmp
push
inc
push
sbb
push
adc
jg
nop
sub
psrad
test
mov
bound
inc
pop
adc
shrd
lcall
aaa
insl
into
jg
sbb
pop
push
jne
sbb
subb
inc
mov
xchg
inc
ret
add
pop
fsubr
aad
jle
mov
push
adc
pop
add
stos
xchg
jo
int3
mov
in
and
jne
jne
aas
push
mov
fisttpl
mov
pop
aad
std
sbb
xor
cltd
push
sbb
pop
mulb
loope
xchg
cmp
push
shlb
or
sub
adc
mov
mov
loopne
pop
daa
xchg
lahf
jp
sbb
or
adc
pushf
aad
subb
or
add
cmp
pop
sub
push
push
mov
lock
jo
fsubr
push
fsubs
cmp
and
xor
push
mov
jecxz
add
adc
sbb
jge
test
arpl
inc
fidivs
pop
jle
stos
stos
xchg
movsl
fsts
leave
outsl
xchg
adc
test
pop
andl
out
pop
add
adc
jns
loopne
repz
pop
pop
add
inc
sarb
jl
mov
mov
in
lods
imul
add
jge
gs
mov
stos
in
push
sub
orl
daa
cmpb
xor
inc
stos
loope
inc
jp
nop
and
icebp
mov
xchg
pop
jb
ret
mov
in
sbb
pop
add
mov
xor
in
or
jnp
lock
nop
loopne
cltd
arpl
cmpsb
xor
insl
std
mov
in
repz
push
and
xor
and
jns
cmpl
push
in
fsubp
jmp
fwait
test
jmp
cld
pop
insb
sub
mov
cli
inc
out
dec
shll
sbb
adc
inc
addr16
cmp
push
cli
in
xchg
lret
sub
lods
jb
mov
jecxz
insl
cmpsl
sbb
jp
in
scas
pop
lahf
cmp
push
xor
sub
pop
mov
sbb
loope
mov
clc
mov
imul
mov
cld
data16
fmulp
fbstp
adc
mov
or
or
jg
jge
lret
clc
sbb
xlat
xlat
add
mov
shll
gs
jle
and
movsb
rcrl
sbb
dec
adc
fsubrs
dec
sahf
push
mov
xor
or
pop
or
or
ficompl
inc
add
cmp
sbb
int3
lods
insb
orl
or
and
scas
stc
lods
insb
pusha
ja
cwtl
adc
mov
adc
inc
xchg
aaa
inc
addr16
enter
jo
inc
mov
push
in
pop
or
push
cld
pushf
mov
lret
pop
dec
stc
inc
sub
cmp
sbb
mov
das
ret
scas
movsb
mov
ret
mov
cmp
in
inc
or
fsubl
in
popa
mov
inc
cs
add
pop
pop
add
lcall
fsubs
adc
shll
popf
pop
xchg
cld
lods
test
stos
cmp
inc
inc
xlat
mov
lret
cs
cmp
push
fidivs
inc
sbb
push
outsb
add
sahf
push
mov
cmpsb
pop
mov
insl
sbb
fcmovu
mov
adc
jle
test
stos
out
sub
cmpsl
cwtl
inc
mov
inc
jl
icebp
or
in
or
bound
sahf
mov
jmp
dec
xor
shrb
sub
push
cwtl
jns
mov
gs
das
jns
js
or
mov
mov
adc
dec
bound
movsl
dec
ret
pop
mov
adc
loopne
push
fsubl
jb
inc
out
fisubrl
scas
mov
jp
xlat
cs
cwtl
inc
iret
inc
xchg
iretw
cmpsb
pusha
test
inc
jg
inc
lahf
les
test
shl
insl
lahf
loop
fwait
lods
cmp
or
cs
jae
scas
js
sub
dec
inc
add
neg
or
fnsave
mov
mov
int
inc
sub
or
fidivrs
cli
ret
dec
pop
movsl
lods
cmp
and
mov
cmp
clc
out
push
jl
mov
add
shlb
lahf
mov
imul
pop
push
mov
mov
push
bound
test
add
insl
imul
repz
lds
mov
jnp
mov
jnp
dec
inc
push
cmp
aam
lods
jecxz
push
push
push
mov
inc
mov
dec
lcall
mov
frstor
fs
fwait
lea
sbb
pop
adc
xchg
das
addr16
cmp
xor
fidivs
std
xlat
xchg
mov
inc
cmp
lods
int3
das
mov
lahf
inc
and
jne
pop
mov
cmpb
mov
pop
outsb
fs
das
cltd
scas
leave
push
jge
sub
xor
fwait
arpl
inc
jle
pop
insb
test
xor
fs
sahf
xchg
test
inc
mov
adc
sub
mov
inc
shll
dec
and
lret
nop
adc
roll
sbb
iret
sahf
mov
js
mov
cmp
jae
push
adc
dec
pushw
loope
pop
xor
pop
mov
es
mov
cmp
pop
jmp
mov
out
bound
int3
sub
sbb
cmp
outsb
in
push
in
mov
adcl
loop
pop
jne
dec
fistpl
dec
andb
inc
and
pop
cmpsb
lea
pop
sub
gs
push
jg
aam
scas
aad
jl
pop
add
lea
mov
stos
test
dec
popf
lahf
das
xchg
and
jb
mov
xlat
push
lock
cmpsb
dec
cmp
pop
scas
jecxz
sarb
push
hlt
mov
mov
mov
popa
roll
fs
bound
mov
adc
sub
dec
out
mov
imull
mov
jns
lret
mov
fcom
cmp
ds
adc
adc
clc
xchg
inc
xchg
sbb
mov
jne
sbb
lahf
popa
int
ret
insl
sti
add
cli
mov
push
push
push
in
dec
xor
daa
mov
lret
mov
imul
xchg
repz
mov
mov
add
scas
scas
xor
bound
sbb
imul
add
scas
out
fsubrs
xchg
test
aaa
in
adc
repnz
loopne
mov
icebp
dec
and
mov
pop
int
jb
out
xchg
rcrl
push
mov
lock
mov
loopne
cmc
mov
dec
inc
cmc
push
push
stos
popf
pop
mov
push
or
cmpsl
scas
aaa
out
adc
dec
push
push
or
pushf
fiadds
flds
xor
rorb
scas
divb
movb
scas
aas
mov
aaa
cmc
mov
ljmp
mov
imul
int
out
xor
jmp
cmp
xor
pusha
icebp
aas
sub
pop
movsb
cmpsb
pop
adc
mov
in
into
cmpsl
lock
test
imul
mov
sbb
mov
std
xor
sbb
cmp
sub
pop
push
cmc
mov
xchg
gs
testb
jbe
out
sub
ds
xor
ret
mov
ja
jnp
out
jmp
jae
add
lods
std
or
cltd
mov
in
rolb
subb
jl
aas
imul
mov
mov
jg
or
test
xlat
shr
dec
outsl
add
mov
cmp
test
mov
ret
dec
cmp
xchg
mov
sbb
mov
mov
cmp
inc
push
test
and
cli
stos
or
outsb
inc
vphsubdq
xchg
push
int
sti
popa
mov
lock
adc
leave
or
adcb
cld
icebp
xchg
pop
adc
lods
ljmp
movb
add
xchg
aaa
or
add
outsl
sbb
ror
fwait
aam
lret
fidivs
mov
pop
out
in
mov
in
loope
dec
addl
and
add
andb
jbe
dec
sub
test
sub
inc
mov
and
push
fsub
jne
testb
clc
test
pop
cmp
ss
cmp
enter
test
test
fucom
popa
adc
fidivl
adc
mov
mov
in
inc
mov
lods
sbb
jno
or
sar
mov
sub
cli
int
iret
idivb
cmp
jns
aas
loop
in
mov
xchg
test
sti
dec
mov
or
and
jl
gs
cmp
in
fwait
sub
push
fcoms
ds
adc
xchg
sbb
rcrl
shll
xchg
lea
add
pop
pop
dec
call
pop
jae
sbb
lods
aam
sti
sub
and
pushl
pop
or
ljmp
popa
cmpsb
add
movsb
repnz
sbb
test
xchg
fxch
cs
iret
jns
or
sub
mov
cmpsl
push
push
test
dec
rorb
shr
sub
fistl
add
lock
jns
mov
outsl
popf
jb
inc
mov
jl
sub
ror
ret
pop
push
int3
in
fnstcw
icebp
push
insl
add
add
cmp
xchg
insb
sub
jg
test
dec
mov
pop
mov
data16
pop
and
out
int3
add
lea
cmp
xchg
movsb
mov
test
mov
addr16
ljmp
or
outsl
enter
mov
pushl
orl
inc
add
xchg
in
mov
sahf
push
cmp
lock
mov
dec
cmp
adc
add
sub
rorl
cli
dec
xchg
arpl
or
ja
cmc
scas
fcmovnb
sbb
push
jnp
rcrb
sti
add
cmp
mov
imul
std
dec
orb
mov
popf
fwait
adc
outsb
fsubl
jl
sub
dec
imul
scas
lcall
in
dec
testl
lcall
adc
push
push
stc
nop
lods
icebp
inc
int3
scas
pusha
mov
imul
dec
ljmp
mov
xchg
add
gs
addr16
push
cmp
aaa
xchg
pushl
push
sbb
loop
stos
rorl
sub
jns
or
push
push
daa
push
in
fxch
pop
out
or
stos
dec
rcr
or
mov
xor
imul
dec
pop
mov
jge
leave
xorb
scas
jp
mov
cmp
lcall
cld
fadds
pop
pop
aam
es
loope
inc
and
jge
in
adc
test
jmp
sbb
pop
hlt
dec
push
push
clc
dec
xor
and
jp
dec
jg
mov
mov
call
fs
cli
inc
or
push
or
sbb
loope
pop
dec
cld
mov
das
sar
scas
or
mov
mov
ret
or
adc
xor
test
int3
cmc
and
xchg
jl
cltd
stos
imul
jb
ror
pop
jecxz
insb
fnstcw
jge
leave
dec
and
das
and
xor
dec
jle
xchg
fwait
out
and
out
outsb
jae
mov
lcall
xorb
adc
imul
or
scas
add
pop
daa
nop
shl
ds
insl
push
fimull
or
sbb
lock
and
das
dec
out
xor
adc
fsubr
mov
nop
bound
scas
mov
add
sub
dec
add
mov
xor
sbb
mull
out
rep
or
shlb
std
push
lahf
and
mov
out
dec
aam
mov
fnstenv
shr
dec
sti
pop
inc
xor
cmp
mov
mov
push
dec
xor
push
aam
jmp
test
sahf
cmp
pop
inc
leave
cbtw
and
xchg
xchg
adc
jle
lods
hlt
sbb
adc
mov
insb
push
mov
pop
adc
push
fadds
xchg
subl
jle
sarl
sub
inc
jo
jmp
and
sbb
clc
movsl
jmp
inc
loopne
xchg
cmp
inc
ret
jle
incb
out
dec
push
fs
adc
cltd
inc
add
jnp
mov
xchg
hlt
xchg
jmp
push
mov
lcall
or
dec
lock
and
fmull
imul
pop
scas
addb
lock
jp
rcrl
xlat
rorb
pop
inc
fsubl
sbb
gs
or
iret
daa
out
jo
pushf
jmp
pop
push
cmpl
in
and
push
adc
add
inc
pop
addr16
push
inc
fs
xchg
add
bound
push
out
outsl
add
out
into
mov
lock
dec
rcrb
shll
fcoml
jb
mov
or
xchg
adc
push
sub
pop
icebp
shl
data16
inc
dec
jae
push
adc
fiadds
dec
push
fyl2x
cmp
sub
sbb
jno
inc
les
lea
test
xor
push
mov
cld
clc
rorl
inc
mov
mov
xlat
cwtl
push
mov
sub
push
xor
xor
roll
addr16
pop
xchg
dec
clc
push
add
nop
scas
notb
and
lret
sbb
add
mov
jge
movsb
pop
scas
in
movsl
mov
pop
jo
add
aad
pop
loopne
or
sub
cmp
or
daa
stc
out
repz
mov
pop
enter
repz
sbb
adc
arpl
shrl
ljmp
cmpsb
adc
mov
jbe
mov
shrl
arpl
test
xchg
movsl
push
mov
cs
inc
mov
movsb
icebp
push
loope
je
xor
or
lahf
mov
mov
pop
xor
xor
je
sub
test
hlt
sarb
imul
movsb
dec
add
dec
dec
jp
pop
cmp
repnz
clc
js
scas
jns
sbb
lea
sbb
pop
call
inc
push
mov
mov
xchg
jne
call
dec
cmp
cmp
adc
sub
xor
mov
in
and
fiadds
adc
push
rorb
arpl
jb
cmpsb
sbb
pop
mov
push
ljmp
roll
adc
sub
pop
jno
jl
push
mov
jle
fwait
std
push
popf
adc
mov
adc
rclb
push
int3
sbb
data16
add
add
or
add
push
xor
sbb
mov
sti
jecxz
sub
add
inc
lea
inc
sub
dec
bound
cwtl
xor
sbb
and
push
cmpsl
sub
mov
cltd
mov
and
adc
int
mov
and
or
mov
shlb
jbe
int3
data16
cmp
scas
mov
imul
push
mov
fwait
and
jge
add
adc
inc
cld
mov
scas
sub
loop
sub
pusha
fsubl
lds
inc
xchg
jae
test
cli
ret
lcall
sub
pop
popa
jb
inc
xor
pop
or
cmp
test
cmp
jge,pt
push
add
imul
cmpsl
repnz
jnp
addr16
int
mov
cmovge
call
loope
cmp
out
cmp
loopne
stos
lock
xchg
push
sub
testb
cmp
lds
push
out
xchg
dec
dec
mov
lods
filds
add
insb
ret
mov
addr16
xchg
pop
arpl
mov
arpl
mov
ficoms
das
xor
jo
lea
sbb
pop
cld
or
lock
fstpt
test
popf
xchg
imul
dec
scas
imul
cmp
xor
aaa
dec
sbb
imul
jg
lds
jne
lahf
testl
es
stos
dec
or
mov
notl
xor
test
out
dec
mov
xor
dec
xor
cmp
adc
push
mov
sarb
mov
cmp
test
ss
jno
sub
push
rclb
sub
sub
mov
and
xor
push
mov
sub
mov
call
cmp
push
inc
aad
dec
aas
int3
pushl
push
or
add
jecxz
dec
push
push
sbb
mov
ds
cmp
pop
int3
dec
xor
stos
xor
testl
aaa
lret
mov
or
jmp
pop
add
xor
mov
insb
push
jae
inc
push
mov
push
mov
fdiv
dec
in
pop
bnd
movsl
jno
mov
adc
or
gs
mov
inc
push
add
addr16
sub
xor
pop
mov
sbb
cmp
cmpsb
pop
popf
shlb
mov
aam
sbb
dec
insl
lahf
xchg
ss
int
mov
xor
jp
lret
pushf
sub
pop
add
push
xor
jae
lock
sub
cmp
sti
jecxz
adc
in
mov
cmp
mov
dec
jb
cmp
or
cltd
stc
shr
and
jae
arpl
push
xor
push
dec
shrb
inc
push
pop
ds
js
mov
fsubs
in
dec
cmp
stos
inc
aaa
xor
xchg
mov
dec
xchg
sbb
mov
xor
pushf
outsl
fdivrs
mov
jg
pop
inc
jecxz
cmpsb
ljmp
bound
push
fsubrs
loope
test
inc
outsl
fsubl
mov
cmp
out
scas
xor
sbb
lods
in
inc
test
push
add
push
mov
inc
adc
sub
push
xor
in
iret
andb
mov
pop
inc
cld
pop
notl
inc
mov
push
and
ja
xor
mov
pop
fiadds
aas
mov
or
mov
pushf
mov
cltd
xchg
inc
mov
add
out
adc
clc
out
dec
subb
lods
cld
inc
fstps
jb
and
mov
mov
test
ss
jp
imul
dec
cs
pop
mov
scas
out
adc
mov
dec
lea
lcall
jne
dec
pop
pop
fcmovne
cmpsb
lods
clc
bound
xor
sbb
iret
mov
xchg
sbb
outsl
and
push
dec
mov
xchg
mov
push
iret
jnp
dec
insb
mov
cltd
pop
arpl
mov
std
nop
dec
and
inc
dec
out
js
fs
in
out
jmp
mov
lcall
je
cmpsb
push
push
dec
pop
mov
aad
aaa
imul
mov
aam
xor
lods
movl
in
xchg
popa
jns
test
or
cmp
push
or
pop
mov
subb
scas
sbb
xchg
or
sbb
mov
mov
mov
mov
cli
mov
subl
mov
fsubrl
clc
pop
mov
in
scas
outsl
cmp
push
add
push
or
adc
lret
sbb
xorb
cltd
ljmp
jbe
test
jp
and
fsubrs
scas
notb
leave
dec
xchg
or
add
mov
in
out
add
mov
inc
call
in
cltd
push
jp
mov
dec
inc
arpl
pop
xor
xchg
inc
insl
shlb
push
daa
sub
out
insb
in
dec
and
mov
xchg
lods
adc
jae
push
xchg
or
dec
addl
test
jo
negl
fwait
push
add
pop
and
std
mov
sub
hlt
adc
test
jbe
mov
pusha
ret
sbb
popa
jl
xor
test
sbb
or
mov
push
cmpsl
xchg
inc
nop
pusha
pop
inc
les
fcompl
cmp
xor
shll
xor
dec
stos
cmp
sti
aam
je
mov
jnp
sbb
and
sbb
dec
sahf
push
frstor
adc
xchg
int3
imul
test
pop
push
push
and
dec
faddp
lahf
add
dec
lcall
inc
pop
push
shrb
inc
pmaddwd
in
jp
dec
add
adc
movsl
mov
shrb
addb
xchg
inc
xchg
adc
insl
dec
mov
jb
pop
lods
adc
mov
cmp
nop
sub
jo
std
loop
lock
ljmp
sub
lcall
ret
cmp
outsl
mov
mov
jge
mov
mov
cmc
pop
addr16
xlat
dec
adc
outsl
inc
jp
cmpxchg
shlb
insl
cli
pop
jo
repnz
cmp
gs
dec
sub
loope
int
test
pop
xchg
hlt
adc
imul
cli
xchg
add
mov
mov
dec
sahf
and
push
sub
test
ds
jp
sahf
and
push
enter
push
or
xchg
orb
push
sbb
jno
lods
xchg
sbb
jnp
pop
sbb
add
clc
jno
jo
pop
cmp
pop
ficomps
std
daa
js
push
sub
inc
out
and
ja
jg
movsb
cmp
push
jmp
lret
les
test
fs
test
ret
dec
hlt
mov
jg
push
xchg
jb
dec
inc
xchg
adc
add
addr16
fwait
cmp
insl
loop
sbb
popf
faddl
outsl
lahf
push
shlb
cli
lds
sbb
out
adcl
lcall
sbb
pop
js
pop
xor
add
and
jae
js
xor
mov
iret
lock
cmpsl
outsb
adcb
cmpsb
ja
bound
lret
lret
pop
sub
aaa
pushf
aam
jecxz
mov
xor
je
dec
mov
inc
push
dec
mov
push
leave
inc
xchg
fs
and
or
push
mov
sbb
add
lock
adc
in
loopne
xchg
adc
pop
xchg
sub
repnz
pop
dec
repnz
clc
les
add
fs
and
pop
mov
push
je
fnstsw
jp
mov
cltd
xlat
in
inc
lret
mov
push
xor
mov
in
cmp
xchg
mov
jle
pop
inc
aad
add
stos
cs
pop
outsl
mov
jmp
cmpsb
fists
inc
push
clc
cltd
xchg
mov
repz
push
fwait
sub
shrl
dec
fsubrs
xor
popf
fbstp
sub
xchg
in
mov
andl
mov
and
adc
clc
cmp
lods
pop
dec
pusha
sbb
les
push
mov
mov
test
sbbl
ficomps
pop
stos
and
or
pop
inc
push
aam
push
mov
sub
pop
in
dec
icebp
inc
cmp
loope
sbb
lcall
rorb
cmp
push
jl
add
mov
pushf
aas
loope
jge
outsb
movsb
shlb
adc
xchg
or
pop
dec
movsl
mov
or
in
mov
or
negl
dec
sbb
lcall
in
lret
mov
mov
in
mov
add
inc
out
cmpsb
adc
push
imul
out
lret
shll
add
mov
je
ds
out
jno
mov
test
ljmp
mov
aad
int3
bswap
pop
andb
xchg
popa
sbb
test
cmp
mov
cmp
mov
or
jg
aas
fcompl
cmp
jecxz
pushf
in
xchg
in
xchg
push
sti
sbb
inc
xor
in
iret
sub
mov
movsl
jne
arpl
dec
sar
sahf
cmc
push
add
push
cmp
xchg
push
ss
pop
mov
mov
jnp
xor
push
add
stc
test
xor
adc
stos
cmc
repz
fnsave
sbb
push
leave
and
cmpsb
iret
cmp
pusha
out
push
xchg
stos
jnp
push
sbb
int
xchg
xor
mov
push
pop
and
popa
mov
jo
sub
mov
push
jb
aaa
loop
mov
sub
cmp
sbb
dec
in
lcall
lods
pop
sbbl
mov
xchg
sub
jb
pop
loop
dec
shr
fistps
iret
pop
std
cmc
cltd
leave
add
push
xor
mov
jecxz
push
jecxz
test
sbb
or
out
arpl
dec
xchg
pop
push
xchg
inc
cwtl
mov
iret
test
lock
and
jge
es
pop
cmp
aaa
pop
pop
jo
mov
mov
cmp
fisttpl
dec
mov
inc
int3
notb
sbb
mov
dec
mov
fcoms
and
mov
xlat
movsb
stc
fldenv
cltd
mov
aam
movsl
mov
push
scas
mov
inc
and
fdivrl
push
je
jecxz
mov
mov
fists
ljmp
push
mov
in
int
sub
cmpsb
into
es
mov
adc
sub
arpl
and
in
stos
dec
add
xchg
jae
sbb
mov
push
lods
cmp
popa
pushf
jl
mov
mov
dec
dec
push
add
or
ffree
scas
ret
ret
fwait
lods
andb
loop
and
mov
inc
add
or
mov
xchg
cwtl
clc
cmp
pop
mov
lods
fstpl
daa
add
add
or
fwait
scas
bnd
nop
fldenv
lods
jg
lahf
andb
repz
je
mov
sbb
fiadds
mov
mov
rol
sahf
int
mov
in
dec
movsb
mov
shll
dec
aas
ret
xchg
xor
shlb
sti
shrl
xchg
adc
xchg
sbb
pop
sub
and
or
stos
pop
sub
jl
rcll
fimuls
push
ljmp
popa
in
mov
push
nop
pop
dec
pop
lcall
inc
incb
jp
pop
push
xor
ret
mov
mov
sub
ds
add
jmp
loope
hlt
jl
insl
dec
imul
sbb
je
or
sarb
sbb
mov
les
push
cli
aad
dec
pop
rcll
test
dec
or
mov
and
dec
lcall
mov
popw
imulb
fldcw
test
aam
insl
std
jne
and
sbb
fldl
leave
pusha
mov
xor
mov
loop
iret
andl
rolb
xchg
jnp
stos
adc
mov
outsb
pop
mov
pop
je
mov
dec
addr16
jp
push
mov
xchg
sub
cwtl
mov
dec
stc
jge
cmp
add
shll
divb
ja
push
or
ror
das
inc
cld
sbb
mov
in
xchg
dec
js
ret
daa
lods
mov
mov
cmp
add
jb
xchg
in
scas
into
je
or
push
push
adc
jmp
mov
addr16
adc
jb
add
mov
pop
push
push
in
adc
mov
cmp
dec
into
jmp
adc
in
mov
daa
dec
in
stos
and
and
push
inc
inc
das
dec
sarb
push
inc
pop
mov
nopl
pop
sbb
cmp
psubq
cmpsl
sti
shrl
mov
popa
sbb
pop
jno
pop
sahf
sbb
popf
xchg
daa
sbb
dec
lds
inc
out
mov
jae
test
stos
out
xor
xor
jg
jecxz
jp
dec
cwtl
push
and
hlt
std
mov
cli
push
mov
mov
mov
add
aam
imul
data16
lret
enter
cmp
lods
mov
in
push
mov
sub
pop
cmp
scas
out
imul
jge
adc
rcrb
in
mov
sub
out
xchg
sub
arpl
mov
push
out
adc
mov
or
into
pusha
dec
push
popf
pop
jno
add
jle
in
pop
and
lods
int
xchg
loop
test
scas
pop
jnp
scas
idivb
cmpsb
jmp
xchg
pop
subb
es
push
movsb
xor
movsb
sahf
in
lret
fcompl
push
pusha
dec
leave
imul
test
mov
jg
lcall
add
fcmovbe
cmp
out
jl
pop
test
test
mov
pop
pop
les
pop
shlb
pushf
mov
xchg
xchg
dec
jp
dec
xor
pusha
inc
in
das
out
pop
jno
jns
xchg
adc
int3
daa
lcall
in
sbb
fwait
iret
add
mov
nop
inc
mov
push
orb
cmpsb
ffree
scas
bound
adc
in
jg
inc
pop
add
movl
dec
jo
ljmp
lret
mov
sbb
push
cltd
call
xor
sbb
mov
lods
cld
mov
fmuls
push
loop
fdivrs
cld
adc
and
scas
dec
pop
imul
clc
cmpsb
xorps
lods
es
ficoml
sub
bound
lahf
mov
cmp
out
jno
rcll
sub
pop
adc
jne
movl
in
sub
pmaxub
cmp
lds
inc
cwtl
out
mov
add
inc
test
popf
inc
mov
movb
pop
fdivs
mov
sub
fs
xor
stc
dec
push
lahf
and
in
pushf
add
add
in
mov
sbb
icebp
cmpsl
cli
sub
ret
push
and
inc
xor
xchg
pop
xor
pop
pop
out
fcmovb
dec
rorb
jno
in
mov
cmpsl
xchg
scas
cmc
xor
iret
cmp
xor
outsb
pop
or
out
in
lret
mov
mov
loope
popa
test
xor
lret
and
mov
mov
out
fistl
sub
add
xchg
lods
fsubl
dec
mov
mov
sub
repnz
jle
push
cmc
jle
sub
inc
xlat
mov
data16
and
movsl
jle
sbb
push
test
xor
jg
subl
out
inc
or
loopne
scas
sbb
or
mov
aaa
xor
in
jnp
ja
mov
enter
movsb
push
adc
sub
cmp
xor
pop
push
jecxz
ja
int3
std
mov
roll
es
sbb
cmp
bound
int
xchg
repnz
idiv
out
fcoms
repz
sbb
push
and
fisubs
add
pusha
outsb
gs
and
mov
cmp
aaa
cli
shll
xchg
mov
mov
pop
mov
pusha
xor
pop
les
jp
push
push
adcb
pop
xchg
lcall
inc
xchg
jns
hlt
xchg
dec
int3
addr16
xlat
xor
data16
jo
outsl
mov
mov
mov
leave
add
iret
cmp
mov
xor
mov
das
mov
popa
sahf
sub
js
icebp
in
inc
outsb
loop
mov
test
sub
mov
pusha
push
in
fcomi
dec
mov
sub
shlb
dec
lods
mov
mov
and
inc
ror
out
mul
test
popa
int3
mov
dec
jecxz
mov
lret
inc
push
pop
jne
mov
popa
adc
shrl
scas
pop
and
mov
inc
popf
mov
in
lcall
ret
dec
div
add
lea
inc
adc
in
add
jle
dec
cwtl
sub
jecxz
mov
push
sbb
nop
xchg
add
fmul
aam
sbb
adc
iret
push
lret
test
ss
jecxz
sub
subb
jle
jl
mov
inc
ret
xor
jl
mov
push
mov
hlt
insb
inc
lock
add
call
clc
lahf
adc
iret
and
push
dec
xor
outsb
inc
add
test
test
mov
mov
int3
xor
andb
std
mov
sub
or
mov
dec
inc
je
popa
sbb
push
and
jb
jne
sbb
mov
jg
negl
push
fmul
fucomip
inc
and
popa
push
cmp
inc
sub
jg
aas
adc
pop
cmpsb
mov
gs
and
aam
dec
xchg
xor
cmp
add
xchg
divb
adcl
cli
shlb
mov
outsb
cmpb
outsl
sub
cmp
push
lods
pop
call
inc
pop
in
pop
cmpsl
adc
sbbb
insl
cwtl
sbb
dec
loope
clc
addr16
fistps
jmp
addr16
jbe
sbb
jne
cld
or
in
and
aad
mov
sub
push
fdivs
in
xor
or
dec
enter
xor
je
int
cmpsl
int3
mov
add
ja
jg
lea
jg
fldcw
arpl
imul
out
movsl
stos
dec
jbe
fists
cwtl
mov
test
pop
xchg
xor
pop
and
rcrl
push
jne
imul
mov
mov
sub
js
ja
stos
inc
jle
idiv
xlat
mov
cmp
sub
add
arpl
pusha
mov
roll
inc
fwait
and
sbb
in
js
jmp
jbe
add
adc
lock
sub
or
test
lahf
rolb
scas
mov
ljmp
jp
cwtl
stc
in
mov
pop
cmpsb
cmp
js
mov
ss
adc
jp
jmp
shl
and
xchg
rdpmc
sahf
push
fidivrs
push
xor
fisubrs
inc
pop
xor
mov
sbb
jae
int
pop
lods
push
loope
stc
and
dec
push
or
cmc
or
stos
mov
jp
lret
mov
hlt
ds
insb
lcall
or
xor
cltd
out
cmpsb
sub
pop
mov
fwait
sub
arpl
stos
data16
fcomps
jb
adc
aas
mov
dec
jl
shrb
cmp
shr
mov
sbb
cltd
mov
insl
dec
push
cmp
fadds
jmp
sbb
inc
jecxz
insl
push
loop
inc
pop
dec
xorl
push
lea
insl
or
into
test
xchg
mov
mov
mov
mov
mov
lods
or
dec
lret
imul
addr16
loopne
push
orl
negb
mov
inc
pop
loop
jns
mov
add
ds
pop
inc
xchg
sbb
ret
clc
sub
in
leave
cmpsl
push
out
dec
sbb
lret
popf
and
lock
cmp
mov
mov
movsl
cmp
sarb
xchg
xor
sbb
pop
cs
cmc
mov
repnz
xchg
cmp
das
push
jns
and
xchg
jg
loopne
cmpsl
jecxz
scas
loopne
jne
out
sti
fdiv
jle
mov
pop
rolb
movsl
das
jle
sahf
lcall
sbb
xchg
jp
mov
shlb
mov
xor
cmpps
cmp
js
je
jl
into
aaa
test
jecxz
lds
les
scas
sbb
mov
stos
imul
sbbb
xchg
adc
test
jecxz
repnz
js
xor
xor
dec
outsl
mov
jo
push
stos
leave
inc
cltd
pushf
dec
mov
cmpsb
cmp
outsb
dec
fidivs
push
and
jno
jb
mov
iret
jne
loope
daa
fdivp
mov
pop
pop
dec
or
jmp
inc
dec
xchg
incb
cmc
jae
lds
aas
fwait
xchg
neg
or
rorl
ficoml
popa
and
and
sub
sub
push
jecxz
js
mov
add
nop
imul
xor
cmp
pushf
sub
mov
ficompl
dec
enter
jns
inc
les
xchg
sbb
dec
clc
movsl
ds
in
push
mov
push
lret
mov
shlb
inc
jmp
pop
inc
movsb
pop
mov
addr16
sbb
mov
sbbl
movsb
jge
and
adc
sahf
arpl
cs
repnz
ds
adc
insb
cmpsl
xor
xchg
stos
cmp
sub
pop
out
pop
aad
aaa
xchg
dec
mov
sub
mov
aaa
adc
rolb
outsl
cmp
xchg
repnz
fists
xchg
cld
jae
loop
jecxz
xchg
inc
pop
fnstsw
in
adc
addr16
mov
sbb
xchg
inc
les
xchg
and
cmpsb
pop
jne
xchg
mov
es
mov
inc
jb
sahf
jg
sti
jle
adc
cld
pop
and
fmul
cli
outsb
lahf
mov
mov
out
popf
push
mov
ja
cltd
xor
pusha
adc
das
cltd
in
mov
sbb
push
xchg
sbb
popa
xchg
outsb
mov
aad
inc
or
mov
inc
mov
popa
jbe
negb
fisubl
mov
or
jp
cld
dec
shlb
xchg
sbb
sub
xchg
out
and
icebp
or
in
roll
cmp
cmp
jmp
add
pop
jno
xor
loopne
inc
inc
cmpsb
lock
jo
lock
cs
lods
call
outsl
dec
out
xor
in
push
or
cmpsb
aad
test
add
dec
inc
insl
fwait
js
inc
test
les
ja
sbb
popa
cld
pop
adc
cmc
cltd
jne
and
xor
pop
leave
mov
mov
jmp
int
cmpsl
cs
rcrl
test
shll
scas
adc
xor
int3
gs
ret
push
jne
stos
lahf
jnp
adc
cld
ret
jmp
ja
adc
adc
cmc
enter
xor
xor
cmp
aad
mov
repz
out
fninit
or
add
test
pop
inc
sbbl
insl
test
and
mov
mov
cs
popa
lds
mov
adc
in
addr16
fildl
lock
xchg
mov
lock
mov
mov
dec
or
xchg
or
stos
adc
xchg
leave
rcr
pop
aas
add
cmp
stos
fwait
jp
jmp
and
stos
iret
stc
sbb
lea
mov
mov
lahf
lea
push
outsl
fcomip
xchg
inc
mov
mov
and
lea
jg
cwtl
mov
xchg
hlt
pushf
xchg
mov
out
xchg
jae
lcall
inc
not
aad
nop
sarl
cltd
or
pop
sub
aas
mov
out
xchg
inc
add
dec
pop
fwait
lds
mov
nop
rorl
in
jg
repz
movsb
mov
xchg
aaa
mov
idivl
clc
jge
pushf
push
cmp
cmp
aad
imul
mov
scas
loop
insb
jmp
mov
or
enter
cs
mov
xchg
bound
xor
gs
sub
push
in
sbb
mov
adc
sbbb
leave
mov
pop
das
nop
nop
push
je
pop
mov
add
cmp
insb
or
jne
sahf
js
insb
and
and
mov
mov
fldt
pop
scas
xor
sbb
mov
std
hlt
push
mov
dec
stc
pop
pop
push
mov
rorb
and
leave
ret
push
das
inc
adc
cmc
cli
clc
dec
adc
outsb
ja
dec
fstpt
pop
xchg
gs
mov
or
cmp
popf
jne
loopne
mov
mov
add
or
pusha
inc
scas
xchg
aas
push
or
popf
lds
sbb
xor
adc
jb
mov
insb
sub
outsl
cmpsb
xchg
sbb
lret
add
cmpsb
movsb
xchg
cli
xacquire
mov
and
and
mov
shr
cmp
mov
fiaddl
adc
test
jge
clc
lret
push
sub
loopne
lret
or
shl
ss
inc
mov
lods
lds
and
in
flds
xchg
cltd
loope
pusha
mov
out
sub
icebp
fwait
jnp
xor
sub
mov
mov
sahf
xchg
aam
jmp
xchg
xchg
adc
in
adc
xor
sbb
sbb
lods
adc
add
inc
out
dec
cmp
add
cmp
shll
inc
xchg
out
cwtl
mov
ficompl
enter
lret
rorl
popf
daa
inc
cmpb
xchg
outsb
nop
mov
rcrb
push
ret
fcoms
insl
pop
hlt
les
rcr
clc
mov
xchg
sti
icebp
sbb
xchg
mov
dec
test
cmp
mov
daa
xchg
adc
loop
cmp
cwtl
mov
inc
loop
dec
pop
or
mov
cmp
movb
xchg
push
loope
or
jecxz
jns
fldcw
lret
lahf
push
mov
mov
in
xchg
out
jmp
enter
dec
xlat
stos
scas
adc
jne
mov
sarl
pop
dec
cmpsl
mov
daa
test
mov
cmp
mov
add
popf
mov
jae
loop
pop
inc
int3
aas
or
pop
adc
leave
mov
mov
out
aad
mov
daa
lds
xchg
fs
scas
push
mov
xchg
mov
pop
and
or
insl
pop
test
sbb
scas
arpl
pop
sub
in
sub
test
mov
jns
inc
jmp
fidivrs
lret
aad
sti
inc
jle
inc
leave
or
adc
insl
or
mov
test
repz
mov
enter
int3
movsl
adc
test
mov
xlat
adc
mov
mov
aad
mov
sbb
bound
lcall
jmp
les
push
pop
loopne
fcmove
pop
mov
fimull
mov
xlat
roll
jl
jge
inc
jp
cmpsl
add
mov
push
and
add
push
enter
ror
pop
pop
add
pop
pop
cli
mov
push
mov
daa
loope
adcb
hlt
dec
outsl
and
movsb
inc
xchg
je
test
shl
jb
pop
cmp
lcall
sub
out
imul
push
xchg
lods
xchg
dec
shlb
lahf
dec
ja
dec
mov
adc
cli
inc
fdivrl
aas
loop
and
dec
mov
ret
mov
xorl
and
sub
lods
enter
flds
xchg
pop
fisttps
es
sub
jne
mov
sbb
popa
je
loop
outsb
jp
dec
dec
jle
pop
fisttps
lcall
xor
jp
add
pop
jp
cld
movsb
outsb
arpl
and
mov
or
mov
lret
mov
add
stos
push
mov
sbb
shrl
push
in
or
and
adc
sbb
xchg
jnp
pop
pop
sbb
and
test
pop
es
push
pop
jnp
aam
xor
cmc
stos
pusha
mov
imul
aas
sub
lret
inc
shll
dec
cmp
xor
call
ficomps
xchg
mov
cmp
xor
xchg
adc
mov
pop
cmp
xchg
cltd
jecxz
add
fdivr
jne
mov
scas
jge
xchg
dec
jle
jecxz
je
fs
jmp
into
mov
dec
lock
movsl
and
xor
pop
fdivs
jnp,pn
and
or
jecxz
sub
dec
mov
fmull
xor
sbb
outsb
xchg
int
clc
inc
pushf
nop
push
push
filds
push
pushf
dec
inc
orl
xor
addb
fisttps
hlt
dec
ljmp
xchg
out
push
push
dec
test
fldenv
pop
mov
mov
cs
xchg
inc
add
dec
push
fildll
sbbl
sete
int3
cmp
add
cmpsl
and
sti
cmpsb
xorl
into
jp
iret
xchg
testb
mov
pop
pop
add
and
adc
and
aaa
dec
mov
sbb
enter
sbb
add
push
xor
pop
jmp
adc
sahf
test
add
out
push
cld
xchg
pop
xchg
pushl
pop
mov
inc
stos
clc
sub
out
loopne
stos
adc
rorl
mov
pop
adc
rolb
setl
inc
and
push
out
cmpsb
rclb
imul
inc
data16
mov
jo
push
int
int3
fadds
shll
jae
cld
and
icebp
mov
or
mov
in
push
js
ds
lods
cmp
xor
mov
rcll
test
mov
out
jl
mov
test
push
repnz
les
dec
mov
mov
jno
addb
bound
imull
sbb
lods
mov
fisubrl
xchg
dec
js
loopne
out
mov
mov
xchg
jge
jne
dec
ja
adc
nop
shll
rcll
jns
pop
repz
adc
out
inc
jo
aam
outsl
dec
pop
cmova
ret
movsb
mov
pusha
addl
addr16
fcmovb
pop
test
xchg
mov
sti
add
jne
jo
jg
int
sub
sbb
jmp
xchg
icebp
test
xchg
adc
into
popa
push
cmp
sub
sbb
adc
rolb
inc
nop
ficomps
xchg
and
mov
cmp
mov
adc
repnz
mov
je
xor
data16
sub
jp
adc
repnz
mov
into
push
add
add
jge
mov
fisttpll
jo
rclb
xor
add
jb
dec
lcall
hlt
cmc
enter
pop
sbb
and
sbb
fadds
sub
jp
sti
out
sti
in
push
xchg
push
ss
dec
sub
aas
mov
sti
jecxz
push
lahf
lock
mov
pusha
jecxz
inc
mov
pop
add
xor
mov
add
ljmp
adc
or
nop
pop
and
lds
push
push
dec
fdivrs
ds
sub
shrb
mov
in
fstl
out
aam
pusha
mov
sti
pop
ficomps
hlt
pop
xor
aas
loopne
cld
inc
fimuls
mov
shr
mov
cs
push
aas
inc
rclb
iret
lahf
adc
pop
push
or
lahf
or
es
ds
roll
pop
lahf
cmp
add
sbb
sub
les
inc
mov
fwait
ja
outsl
or
add
int
aaa
fpatan
stos
or
mov
sarb
push
mov
xor
pop
fwait
test
jp
or
loop
dec
insb
arpl
xorb
std
mov
lea
popa
jne
out
or
popa
shrl
scas
adc
aaa
std
fwait
push
lret
inc
push
outsb
sbb
out
mov
lods
je
xor
xchg
gs
xchg
pop
call
push
pop
jb
mov
test
xchg
test
scas
mov
loope
test
add
rcrl
into
adc
pop
stc
clc
lcall
xchg
mov
mov
mov
cmp
push
aam
xor
popf
mov
jne
pop
xor
mov
sbb
cmpsb
fisubrl
add
or
test
test
and
std
inc
fstps
enter
or
lds
jecxz
pop
and
jl
enter
pop
out
hlt
inc
cltd
outsl
lcall
mov
sub
in
xor
std
xchg
mov
repz
mov
jecxz
out
cs
sub
mov
pusha
add
pop
xchg
dec
push
push
out
fists
arpl
mov
ret
xchg
fcoml
and
mov
fwait
inc
jle
or
dec
mov
xchg
aam
jb
int3
iret
clc
sbb
pop
inc
inc
scas
inc
mov
jae
add
cmp
aam
mov
pop
jl
adc
cmp
add
ljmp
or
lret
pop
pop
mov
mov
cmpsb
out
xor
mov
xchg
ret
cmp
cltd
inc
inc
mov
jns
mov
rorb
imul
idivb
adc
imul
jmp
push
push
aas
mov
jb
mov
push
jp
lahf
pushf
gs
jae
jg
fldt
and
loop
pop
aas
xchg
pop
jmp
shl
add
mov
inc
aam
mull
out
jnp
and
shll
add
aaa
imul
shl
push
in
xor
add
cmp
movsl
pop
mov
pop
lods
jmp
mov
popa
push
mov
lahf
dec
jg
stos
sub
cmpsb
fisubs
adc
cmp
sub
mov
int3
dec
enter
sub
das
inc
mov
testl
mov
hlt
test
sbb
call
int3
movsb
xchg
ret
sti
xor
or
jbe
test
jmp
or
jge
leave
mov
cmp
mov
jb
cmp
out
add
leave
or
enter
sub
rcrl
push
and
sahf
adc
fsubrs
cmp
push
shl
iret
aas
imul
cmp
add
rolb
inc
repz
icebp
sub
pop
imul
faddl
rorb
cmc
xchg
push
xchg
jmp
leave
dec
xchg
idiv
mov
push
xor
jnp
mov
cmp
and
push
cs
pop
loope
nop
pop
mov
jbe
sti
jge
imul
lret
adc
sbb
fstl
imul
cld
popa
push
in
and
push
std
sbb
xchg
add
cwtl
jns
jp
ja
out
jge
add
and
push
dec
and
or
or
subb
jp
and
mov
xchg
dec
mov
push
xchg
mov
xchg
mov
mov
cmp
es
test
rcrl
dec
jnp
or
pop
mov
ret
repnz
insl
insb
xchg
les
dec
dec
inc
inc
rcrb
xor
aaa
adc
lea
mov
into
loop
inc
add
mov
lcall
das
int
rolb
psllq
int
fidivs
iret
cmc
mov
xchg
cmp
in
cmp
imul
xchg
mov
dec
lret
inc
dec
mov
jg
loop
xor
xlat
fldl
cmc
and
mov
or
pop
xlat
inc
int3
mov
cmc
jae
mov
xchg
fsubrl
xchg
jp
stos
inc
bound
cmp
xchg
push
daa
test
adc
and
sbb
pop
push
or
jno
ror
daa
jns
jl
imul
cmpsb
jbe
es
jg
pusha
in
sub
mov
mov
lods
jae
or
mov
test
sub
loopne
cmp
ja
inc
sbb
mov
mov
ds
dec
into
push
xchg
sbb
sub
jmp
shrb
dec
sti
inc
inc
ja
jae
inc
call
dec
stos
jb
cld
or
jno
lods
je
je
shlb
bound
sub
mov
mov
dec
lods
xchg
scas
xchg
mov
sbb
cmp
or
mov
xchg
test
daa
pop
rcl
daa
and
and
push
mov
add
imul
and
andl
mov
mov
jecxz
push
and
test
pop
data16
cmc
sbbb
mov
dec
xchg
cmp
jp
dec
xor
lea
emms
mov
popf
pop
dec
adc
fwait
xchg
sub
ret
repz
pop
clc
test
dec
shll
push
adcl
dec
cmp
xor
dec
inc
cmpb
lock
pushf
mov
adc
add
adcb
popf
fdivrp
pop
mov
push
jl,pt
je
mov
repz
cmpsl
fadd
into
iret
xchg
jge
xor
jbe
jae
sar
and
inc
hlt
ret
and
xchg
stc
shll
stos
sub
xchg
sub
adc
xor
arpl
mov
mov
loop
push
pusha
mov
outsb
pop
xlat
mov
inc
nop
xchg
lret
push
das
push
dec
xor
fs
cmp
in
mov
inc
je
jnp
mov
test
jp
loopne
pop
in
jns
call
lret
outsb
les
rclb
jge
pop
cmp
lock
bound
into
iret
testb
cld
xor
mov
xchg
shr
mov
or
fdivrl
or
xchg
and
jns
out
dec
xlat
outsl
cmp
movsl
push
pop
loopne
lock
pusha
push
mov
push
sahf
loop
cmpsb
cmpsl
dec
push
dec
pusha
shll
jl
jge
or
out
add
stos
int3
into
call
jo
xchg
ja
mov
dec
mov
or
xchg
aam
mov
push
mov
int
push
fsubs
lcall
cmp
loope
iret
mov
or
add
lahf
call
mov
sarl
mov
rcll
dec
scas
in
andl
ja
loope
test
pushf
jl
xor
mov
mov
or
lods
test
stos
pop
and
je
pusha
xchg
sbb
lret
jp
jnp
subl
sti
inc
mov
xchg
jo
sahf
fs
int
mov
imul
mov
cmp
xor
cmp
xor
add
sub
rclb
pop
in
jnp
loope
xor
jbe
xor
sub
sub
addr16
sub
mov
mov
push
movsl
dec
rolb
mov
push
aad
je
xor
ds
or
jmp
pop
cld
pop
sbb
push
push
xchg
in
fcoml
add
add
and
mov
sub
adc
inc
scas
pop
loop
stos
sub
jbe
ficomps
leave
fcmovnb
sbb
dec
push
mov
push
cmpsb
sub
addl
pop
nop
pop
jp
fs
mov
aas
adc
out
into
xchg
and
xchg
inc
in
ret
shrb
fidivs
pop
or
pop
stos
je
popf
sub
sbb
lea
dec
imul
adc
or
cmc
inc
addb
xchg
shll
fstpt
std
pop
shlb
jbe
stos
sub
divl
jae
hlt
fst
outsb
pop
es
xchg
sbb
je
mov
addr16
mov
cs
sub
out
push
or
sti
xor
arpl
mov
test
push
jo
mov
aas
xchg
movsl
jp
clc
std
cwtl
int3
pop
mov
int3
aaa
add
addr16
sub
pop
jp
js
mov
or
or
cmpsl
lret
je
inc
adc
jo
popa
rcr
push
xchg
fsub
add
cwtl
rcrb
adc
cld
cmp
push
cmpsl
in
fiaddl
insb
sub
mov
int3
test
imul
shrb
xchg
insl
insl
xor
aad
mov
pop
push
xor
sbb
xlat
cmc
push
xor
and
out
insb
jbe
stos
stc
adc
flds
leave
push
in
xor
jl
lock
nop
jns
adc
cmp
std
outsb
sub
or
pusha
imul
ljmp
outsl
add
mov
ret
test
shr
sbbl
mov
fldcw
lahf
scas
sub
stos
fnsave
xlat
fistpl
or
cli
adc
cld
fcoms
ljmp
es
dec
outsb
divl
test
aas
loope
inc
sbb
hlt
fnstsw
sbb
adc
and
fcompl
call
ja
and
push
xor
imul
cltd
add
loop
lea
lea
js
stos
mov
and
les
dec
xor
mov
inc
ss
aaa
cmp
repnz
cmp
jmp
repz
ror
fisttps
add
dec
jb
add
push
insb
ds
mov
mov
mov
adc
add
mov
or
les
mov
inc
dec
and
mov
out
mov
sub
sbb
mov
sbb
xor
fcomip
icebp
outsl
jmp
sub
shlb
stos
lea
data16
cmpsb
mov
dec
out
or
or
mov
or
cmp
mov
adc
mov
cltd
adc
sub
dec
fdivr
test
jns
test
mov
jecxz
push
jnp
jge
cwtl
sub
daa
shlb
test
xor
cmp
pushf
xchg
stos
movsl
and
push
cmp
add
sti
and
mov
xchg
inc
jb
mov
js
push
sub
test
sbb
jae
into
out
pushl
mov
movsb
or
mov
or
sti
into
adc
lcall
pop
xchg
sbb
and
cmp
push
sub
rolb
pop
mov
add
sbb
mov
in
sub
and
adc
sub
fst
popa
push
fcompl
dec
insl
or
cwtl
daa
inc
incb
aas
push
orl
getsec
fcoml
dec
insl
repnz
push
xor
sti
fsubrs
jb
lds
inc
daa
xor
add
sarl
data16
jle
and
jae
stos
popf
xchg
sub
aam
repnz
xor
pop
push
and
jb
jbe
sub
adc
outsb
sbb
fnstsw
mov
pushf
popf
stos
mov
mov
cmp
sbb
je
daa
jno
shl
sarl
push
bound
cmp
dec
push
lcall
stos
aaa
std
jns
inc
xorl
or
das
sbb
std
out
lret
dec
fidivs
sarb
movsb
movsb
or
ds
jg
int
rorb
cmp
call
pop
lahf
lods
in
and
filds
push
divps
push
sbbb
and
sarb
out
dec
push
icebp
fimull
xchg
mov
and
push
mov
mov
sub
call
rorb
xlat
xor
rcl
in
out
rorl
xor
push
loop
rcrb
pop
cmp
mov
inc
outsl
stos
lds
xchg
push
addb
push
mov
fmuls
lods
lock
stos
push
das
jl
int3
push
mov
cmp
mov
dec
push
in
cmp
jnp
xor
je
std
mov
fcomps
scas
loope
adc
mov
je
xor
fisubrs
sahf
mov
aad
rcll
sbb
mov
js
xchg
cmp
sub
mov
stos
xor
pushl
xchg
pusha
push
sti
xchg
and
mov
hlt
insb
hlt
mov
xchg
leave
jns
xor
filds
jno,pn
mov
data16
sbb
mov
xchg
in
incb
sub
xchg
and
je
pop
fld
add
scas
mov
jne
pop
cltd
push
enter
mov
push
inc
and
adc
sub
mov
mov
mov
in
xchg
add
and
jl
test
cltd
in
in
ljmp
jo
sub
je
test
addr16
iret
aad
fdivrl
mov
hlt
jge
push
sahf
pop
cmp
xchg
pop
imul
repz
push
xlat
mov
mov
xor
stc
xchg
repz
cmp
mov
stos
jmp
push
nop
andl
xlat
cwtl
scas
dec
mov
rcll
inc
out
pusha
sbb
adc
pop
ret
inc
push
sub
lock
add
int3
sarl
test
mov
pop
jns
and
fimuls
jmp
aam
and
mov
movsb
xchg
push
pop
std
lret
movsb
out
or
ja
fdivr
int3
or
xchg
inc
mov
subl
loope
movsl
cmc
iret
daa
lods
ss
dec
jge
ja
test
mov
mov
arpl
or
sbb
mov
mov
pop
or
pop
dec
xchg
icebp
scas
jb
mov
push
fisubl
aad
jmp
cld
inc
jl
dec
lods
shl
in
fstpl
dec
call
pop
jo
mov
cmp
icebp
cmp
gs
mov
mov
cltd
sub
cmp
mov
loop
flds
ss
mov
or
cs
ret
cmp
lods
push
push
ficomps
add
ret
and
push
xor
push
adc
mov
dec
xchg
insl
stos
mov
dec
das
add
push
push
xchg
inc
cmp
or
js
and
repnz
dec
push
mov
cwtl
xor
mov
or
jp
orb
cmp
ret
jg
xor
xchg
pop
sub
movzwl
mov
aad
adc
std
sub
in
in
or
add
adc
imul
notl
shlb
lcall
arpl
sti
sub
enter
add
mov
insb
mov
mov
xor
or
mov
xor
xchg
cmp
and
dec
aas
adc
sub
sbb
mov
in
mov
pushf
jo
js
inc
imul
sub
movsb
push
jb
dec
jecxz
repnz
les
ret
push
stos
pushf
lcall
push
mov
sahf
sub
mov
aas
lret
pop
test
into
push
mov
sbb
mov
aad
ss
aad
out
fsts
loop
shlb
dec
pop
push
gs
mov
cmp
sbb
sub
sub
out
pop
outsb
mov
cmpsl
dec
jo
adc
pop
adc
lods
pusha
aam
mov
and
sbb
or
add
xchg
lods
dec
sbb
push
and
xchg
inc
jl
cli
in
outsb
add
lods
xchg
pop
sbb
out
ljmp
cmp
out
rcrl
fldl
add
aam
ret
sub
xchg
es
inc
adc
gs
xlat
sub
in
push
movsb
jb
fcmovbe
push
nop
push
mov
pop
adc
ljmp
xchg
pop
cmc
and
mov
mov
cltd
popa
fnstenv
mov
adcb
adc
mov
mov
test
mov
cmpsl
test
mov
jne
mov
test
test
or
add
ljmp
fs
rclb
out
pop
jne
movsb
add
push
xchg
movl
lods
into
mov
std
testl
std
mov
cmc
xchg
std
in
in
mov
dec
es
pop
push
pop
sahf
mov
into
jae
and
daa
cmovle
push
adc
pop
or
cld
mov
mov
pop
or
jle
lock
jg
cmp
dec
inc
test
fsubs
sub
sub
mov
dec
das
and
hlt
and
sahf
cmp
popa
shl
inc
add
es
bound
lcall
mov
add
loope
in
mov
add
addl
xlat
icebp
stos
fs
sti
fstps
lret
iret
push
sbb
fs
mov
int
mov
pop
jb
pop
add
mov
push
call
push
xor
stos
rcll
mov
adc
lret
movsl
and
xchg
inc
pop
outsl
lret
subl
loop
iret
pushf
pop
sbb
stos
mov
stos
push
inc
test
mov
or
je
cwtl
cmp
xchg
pop
and
fwait
je
stc
push
mov
mov
psraw
add
gs
inc
movsb
lds
iret
and
xchg
inc
test
dec
sub
sbb
pop
addl
pop
test
mov
dec
jmp
fcom
aaa
add
pop
pop
fisubs
mov
sbb
cmp
xchg
adc
inc
fnstsw
sbb
ja
out
and
pop
mov
sar
push
jae
fcomp
inc
in
dec
jb
xchg
mov
adc
mov
cmp
cmp
or
dec
pop
push
mov
fdivl
cmp
mov
adc
fsubl
and
sbb
pop
lcall
inc
out
mov
lods
out
mov
mov
fs
pop
ret
ret
dec
in
fldcw
inc
sarl
xor
idivl
add
inc
mov
pop
cld
adc
xor
adc
enter
mov
movl
popa
call
xor
out
cmp
adc
dec
or
pop
push
loope
out
lods
fadds
in
mov
mov
out
push
add
sbb
aaa
loop
dec
popa
dec
stos
aas
das
xchg
dec
in
fisubrs
cmc
bound
sbb
out
int3
cmpsb
sbb
popa
push
movsb
into
push
or
jle
jecxz
cltd
call
and
je
mov
lret
jbe
jno
fwait
mov
shlb
lret
aad
mov
mov
loope
and
mov
dec
es
or
leave
add
pushf
jg
cs
mov
cmp
in
hlt
cmpsb
push
insb
lea
sti
xor
mov
xor
and
int3
or
dec
or
jnp
inc
arpl
mov
cmp
out
push
mov
and
pushf
fcompl
inc
lcall
or
out
sub
sub
sub
mov
mov
add
jle
imul
mov
lret
xor
enter
out
daa
bound
lock
popa
push
push
sbb
es
mov
xchg
fs
repz
inc
aaa
test
mov
std
inc
je
nop
iret
sbbl
xorl
ret
out
push
mov
push
orl
adc
sub
xchg
inc
imul
xor
jecxz
into
pop
push
mov
jmp
push
in
inc
or
lahf
imul
jbe
movsl
lahf
addr16
dec
ljmp
pop
hlt
call
xchg
jge
fidivrl
out
dec
xchg
sbb
mov
test
mov
adc
push
fs
sahf
sbb
and
jecxz
adc
outsb
repz
cmpl
push
mov
fmul
das
nop
movsl
sub
enter
mov
lahf
or
inc
pop
ficoms
idivl
lods
pushl
xchg
mov
push
into
jmp
stos
orl
mov
mov
jmp
leave
rcr
and
sbb
push
fs
pop
mul
inc
sahf
adc
xchg
into
in
insl
mov
imul
mov
push
push
xor
xor
jo
cli
dec
imul
jo
pop
mov
sub
das
mov
mov
pop
gs
jecxz
and
clc
push
cmp
cmc
xchg
push
push
stos
shrb
test
clc
iret
mov
pop
into
push
mov
sbbl
ja
mov
fisubrl
sbb
mov
cmp
cmp
xchg
xchg
movsb
rorl
test
jg
xor
dec
jmp
sahf
in
jle
fwait
push
adc
or
leave
jp
leave
lea
and
dec
and
fcmovbe
mov
icebp
mov
popa
sub
daa
adc
add
pusha
je
lock
add
rcrl
push
test
cmc
pop
lret
mov
pop
rcrl
xchg
fnstsw
ret
push
loope
test
dec
mulb
mov
sbb
push
cmc
pop
mov
mov
scas
std
scas
mov
add
jo
lds
repnz
add
cld
mov
dec
push
cmp
enter
fs
roll
cmpsb
fimuls
sub
push
sbb
mov
mov
outsb
stc
pop
push
push
jbe
and
xchg
cmp
xchg
mov
push
cmc
rolb
mov
xor
mov
ljmp
das
aaa
std
inc
ret
and
push
insb
sbb
dec
aam
xchg
jbe
popf
or
dec
addb
sbb
out
jmp
sbb
imul
out
and
lods
mov
adc
sub
iret
mov
lcall
pop
xchg
jecxz
insl
xchg
popa
adc
jae
cmpsl
cmp
stc
add
cmpsl
mov
mov
jl
cli
xchg
pop
cwtl
push
jge
add
dec
js,pt
pop
cmpsl
sub
fsubl
loop
bound
mov
clc
dec
out
jnp
in
test
push
fisubrl
push
mov
insl
fwait
dec
push
sbb
das
stc
icebp
inc
or
stos
push
imul
pop
jbe
push
jmp
jp
cmpsl
adc
mov
insl
push
into
inc
push
mov
imul
std
sarb
flds
pop
inc
fnstsw
pop
add
jmp
sub
out
clc
imul
add
push
dec
icebp
stc
jne
out
jnp
icebp
inc
cld
sbb
pop
cmp
inc
cs
leave
loopne
jg
mov
jl
push
xchg
popf
sarb
dec
sbb
adc
pop
sbb
push
mov
sbb
sbb
stos
mov
jp
jnp
ffreep
punpckhdq
icebp
cs
sub
adc
iret
daa
fiadds
out
pop
or
bound
rcll
add
cmp
jmp
mov
je
mov
jg
pop
push
movsb
inc
cwtl
insb
cmpsb
lahf
pushf
mov
dec
pop
repz
mov
test
sbb
push
jno
leave
gs
xchg
sub
push
outsl
mov
sub
inc
jbe
and
repnz
push
sub
movb
adc
sub
imul
cld
ret
or
cltd
icebp
lods
cs
mov
ret
sbb
inc
inc
mov
leave
or
push
push
in
movsb
sbb
inc
dec
je,pt
push
mov
and
inc
xor
mov
pop
pop
mov
add
mov
aas
shrl
gs
dec
fcoml
inc
into
mov
xchg
stc
and
pop
test
aas
mov
add
sub
sub
je
stc
xchg
add
dec
adc
gs
fidivs
addb
stos
xrelease
sub
push
dec
mov
lcall
pop
adc
mov
lock
jle
ja
daa
sub
cli
add
leave
imul
das
add
inc
sbbl
fdivrs
repz
xor
subb
xor
sub
mov
adc
push
pop
pop
mov
leave
ret
push
inc
in
pop
subb
imul
popf
pop
fbld
cld
pop
dec
jmp
jae
xchg
repz
push
jne
notl
fs
adc
call
pop
and
jmp
cmp
hlt
in
imul
lds
in
les
or
adc
rcrb
clc
mov
adc
fldl
pop
mov
aad
cltd
leave
ss
and
loope
push
push
mov
adcb
pop
inc
cmp
cmp
add
xchg
pop
lds
pop
aad
cmp
das
repnz
lcall
popfw
or
mov
hlt
xlat
mov
insb
dec
pop
xchg
mov
mov
call
sbb
cmp
mov
stos
in
lods
loope
mov
insl
daa
cmp
repz
test
jae
mov
inc
loopne
pop
xchg
dec
push
imul
mov
lret
jns
fsubl
ret
js
jnp
and
dec
mov
dec
out
jno
das
loope
addl
cmpsb
add
adc
imul
or
mov
scas
leave
add
pushf
adc
pusha
cli
xor
jae
out
out
adc
popa
outsl
es
jle
test
adc
cmp
mov
jno
aas
fidivl
push
mov
cmc
mov
add
mov
in
inc
sbb
jne
imul
cmpl
push
clc
push
cmpsl
stc
out
mov
jmp
fs
mov
movsl
xchg
adc
pushf
mov
fstps
pop
aad
mov
xchg
sahf
inc
lock
movsl
call
adc
inc
jecxz
lods
cmp
jbe
cmp
and
popf
dec
fldcw
inc
pushf
jp
mov
popf
mov
aas
into
push
mov
lods
flds
xor
jno
xchg
push
in
call
mov
mov
sbb
mov
mov
xchg
out
adc
fisubl
iret
cmp
jno
xor
mov
sub
cmpsb
jbe
jae
cs
mov
outsl
mov
leave
sub
icebp
lds
xchg
cltd
dec
sahf
mov
insl
inc
xorb
clc
xor
jne
xor
insb
push
xchg
mov
test
iret
cwtl
adc
dec
lods
add
lret
aad
ljmp
mov
repz
std
lods
jecxz
mov
add
in
mov
mov
pushf
mov
xor
popf
lock
or
fwait
lods
rolb
aaa
xchg
dec
pop
add
fwait
pop
dec
fwait
jmp
xchg
mov
sar
arpl
inc
inc
loope
dec
jbe
in
lods
jg
jecxz
mov
jl
enter
and
xchg
push
adc
mov
pop
addr16
mov
sub
loope
test
in
adc
sti
movsb
jno
sub
add
sub
mov
nop
rcrb
adc
mov
jle
and
push
add
dec
enter
int3
push
push
mov
push
ja
sbb
inc
adc
pop
das
int
jb
lds
test
fcoms
stc
mov
sbbl
es
xor
rcr
je
cwtl
in
mov
dec
xchg
adc
and
jbe
jmpw
fbstp
call
mov
push
push
sub
das
fisubl
test
cmp
ds
leave
andl
lahf
adc
pop
cs
aas
xor
adc
push
test
add
xor
mov
jno
cmp
pop
push
shrb
loopne
stos
cld
fistps
fbld
jle
jbe
push
adc
xchg
add
push
push
xorl
mov
insl
cmp
add
jnp
push
cmp
adc
xor
add
iret
lcall
or
xor
popa
out
mov
popf
dec
jae
inc
add
out
pop
inc
mov
xchg
test
addb
lret
scas
cli
inc
hlt
sbbb
cmpsb
fcomps
testl
xlat
mov
sbb
or
loopne
and
cmc
aas
repz
movsb
ljmp
jl
xor
ds
pop
add
movsb
int3
inc
movsl
push
sbb
add
fsubl
mov
inc
gs
lock
add
jb
push
jecxz
pusha
fistl
jg
ljmp
sarl
test
pusha
fmulp
fdivrs
popa
jnp
mov
out
mov
mov
mov
pop
push
xchg
mov
adc
sbb
cwtl
xchg
cmpsl
cmc
sub
and
sahf
rorl
inc
not
pop
jne
sub
sub
mov
popf
push
pop
loopne
mov
xor
cld
xchg
jb
int3
xor
jbe
push
ret
lds
addr16
out
std
shll
sub
fs
jae
outsl
lea
add
sbb
stc
fwait
ret
cmp
dec
push
aaa
dec
lods
mov
jns
lods
bound
js
rcrb
ret
cmpsb
adc
cmpsb
push
add
add
adc
sbb
or
iret
and
pop
or
or
scas
mov
mov
nop
lods
mov
cmp
xchg
mov
cmp
sbb
ret
sbb
jmp
add
jge
jnp
jb
sbb
movsl
mov
outsb
stc
lods
sub
mov
adc
shlb
je
dec
ja
shll
sub
mov
sti
fstpl
aas
daa
pmuludq
call
inc
mov
inc
stc
sti
popf
jbe
xor
das
pushf
lret
popf
mov
test
pop
mov
mov
aad
jne
add
add
push
cs
add
jmp
test
pop
movsb
push
jmp
loope
push
xchg
out
mov
enter
bound
cmpsl
push
test
xchg
stc
inc
scas
or
dec
rclb
fnstsw
jo
out
cwtl
mov
mov
push
dec
loope
mov
pop
pusha
cmpsb
sbb
je
cmpsb
pushf
out
push
hlt
jmp
lods
cltd
mov
push
sub
xchg
xorb
pop
fbstp
or
test
lret
ret
inc
xchg
sub
push
std
mov
call
jp
mov
rclb
jl
jno
insl
loope
loope
dec
or
lock
ja,pn
loope
movl
popf
sbb
sbb
xor
ds
pop
add
pushf
jno
mov
pusha
mov
mov
out
in
dec
xchg
call
and
int
jle
cmpsb
cmp
pusha
dec
clc
pusha
pop
loopne
inc
mov
inc
out
push
mov
stc
rcl
stos
mov
rcrb
or
mov
inc
shll
inc
adc
inc
arpl
pop
enter
out
push
lea
outsl
mov
shr
xchg
cmp
das
stos
cs
add
and
jg
shlb
push
ret
cwtl
in
xchg
sub
adc
lock
pop
mov
inc
test
inc
lahf
in
or
fldl
mov
push
adc
fadd
sub
or
dec
jl
das
jmp
and
jnp
jg
cmp
fs
add
roll
pop
idivw
frstor
lcall
out
aad
inc
in
xlat
inc
inc
xchg
push
out
cmp
xchg
sbb
test
es
mov
dec
mov
inc
inc
jno
ret
or
dec
lea
inc
ret
repnz
ret
iret
dec
xor
pop
les
mov
mov
or
pop
std
lcall
stos
lds
ss
lea
cmp
into
push
sbb
icebp
out
sbb
sub
inc
mov
scas
fs
cs
roll
addl
movsb
xchg
testb
jmp
sbb
out
xchg
jnp
int
icebp
or
sahf
mov
pop
jl
mov
cmp
jns
mov
lret
xor
cli
cmc
sti
cli
lahf
xchg
sbb
push
aaa
gs
lret
push
enter
daa
int
mov
frstor
sbb
xor
lock
add
mov
inc
mov
out
mov
pop
cmp
nop
push
xor
mov
std
sub
sbb
aad
andl
push
and
imul
cltd
jge
pop
dec
outsb
mov
loope
call
mov
or
bound
cmc
daa
sbb
sub
and
sbb
mov
dec
or
les
push
leave
outsl
mov
cmp
gs
out
jp
inc
idivb
add
inc
nop
or
lods
ljmp
addr16
jno
mov
scas
sbb
outsl
out
insb
ret
xor
addr16
fdivrs
lret
icebp
cmpsb
and
ljmp
or
sbb
in
lock
xor
or
inc
mov
sti
push
xchg
mov
in
sub
das
push
fdivs
scas
inc
nop
in
mov
jge
fwait
cltd
fdivl
jb
inc
int3
mov
mov
scas
fdivs
inc
mov
mov
movsl
mov
mov
sti
mov
gs
cmp
jle
adc
shl
cmp
int
cmp
hlt
xchg
jge
ljmp
lcall
adc
push
lods
cld
jne
push
aas
add
mov
or
daa
push
sbb
and
sub
fcmovnbe
test
sbb
mov
ror
inc
std
jp
fsubs
es
sub
out
sub
stos
mov
push
mov
mov
push
gs
mov
add
adc
pop
dec
daa
sub
test
ja
mov
mov
xchg
xor
xor
dec
fcom
sbb
inc
lods
fwait
clc
add
pop
lods
sub
jg
or
lea
insb
cmp
mov
daa
push
mov
icebp
cld
sub
aas
adc
sub
iret
xchg
push
cld
nop
jg
add
idiv
jmp
cmp
fcmovb
ja
dec
popl
fisttpll
add
pop
cmp
es
fsubrl
cmpsl
punpckhdq
fwait
inc
adc
xchg
cmpsb
sub
lods
popf
sub
push
dec
mov
subl
fsts
dec
daa
mov
test
push
rolb
fcmove
xor
out
mov
add
nop
add
xorb
or
mov
addl
shrb
adc
movsb
stos
mov
xor
pop
lcall
mov
test
mov
push
sub
pop
push
xchg
outsb
sub
mov
loope
inc
jbe
aas
or
and
jb
push
aaa
and
push
dec
xchg
jp
mov
dec
js
xorl
mov
lret
pop
sbb
or
or
add
shll
cmc
fnstcw
in
add
and
repz
cltd
ss
aaa
es
scas
ret
xchg
cld
enter
sbb
sub
loopne
jno
loope
shrb
jmp
fsubrs
xchg
add
mov
rclb
sub
push
and
ret
push
stos
mov
movsb
scas
mov
dec
add
arpl
cwtl
pop
out
testl
lret
pusha
dec
mov
lahf
int3
test
pop
sbb
push
inc
xlat
dec
lods
and
repnz
sub
ret
inc
pop
cmp
gs
pop
sbb
pop
add
clc
mov
fsub
inc
cmpb
sbb
aas
inc
add
adc
jle
in
cmp
sbb
fdivs
fisttps
dec
cli
xor
mov
insb
sbb
mul
movl
xor
pop
shl
rclb
push
test
add
test
loopne
and
mov
out
sub
mov
mov
push
cmp
scas
ds
faddl
cmp
mov
lods
mov
les
mov
dec
jge
jge
mov
sub
xor
test
enter
lods
pop
jle
dec
les
mov
scas
sub
adc
inc
inc
je
mov
jbe
adc
test
rorl
mov
mov
jl
out
and
mov
and
adc
xchg
jmp
fs
std
push
icebp
lock
xor
or
xchg
hlt
mov
pop
mov
push
lret
pop
cmc
and
mov
cmp
sub
lcall
loope
sbb
xchg
sbb
adc
in
sub
es
out
into
inc
gs
pop
cmpsl
mov
sub
pop
jno
mov
cmp
pop
mov
das
hlt
xchg
aam
mov
adc
test
das
cmp
sti
cli
andl
dec
pop
and
cmp
sahf
sub
out
insb
leave
call
mov
test
call
stos
mov
and
and
mov
pop
pop
scas
je
ret
add
sarb
js
test
push
mov
mov
dec
loop
push
and
pop
seta
xchg
sbb
loop
dec
sarl
push
xchg
pop
pop
inc
jnp
loope
jo
insb
jg
inc
adc
add
sub
cli
inc
ja
push
add
add
mov
or
in
std
stos
out
inc
pop
xchg
or
addr16
nop
lods
adc
enter
addr16
cltd
subb
flds
sbb
cmp
lods
cwtl
xor
pop
leave
je
cmpsb
sbb
adc
aam
and
cwtl
push
icebp
loopne
mov
and
jecxz
push
adc
data16
aam
int3
jne
daa
or
lret
in
push
frstor
mov
pushf
pop
sub
cmpsb
jmp
push
xor
mov
mov
mov
xchg
push
inc
and
aaa
add
hlt
adc
xor
sbb
jg
jne
cmpsb
enter
loopne
push
in
into
sbb
cld
adc
outsl
fnstsw
dec
stc
pop
movsl
mov
out
push
fstps
adc
jge
fisttpll
push
push
jno
pop
push
and
fsub
mov
push
jbe
mov
das
in
int
lret
pop
or
sub
xor
mov
pop
xor
xor
pusha
mov
jno
jp
std
inc
fdivl
xchg
nop
cwtl
cli
sbb
iret
lcall
xchg
ret
inc
mov
ret
lods
jl
jecxz
mov
mov
cmp
pop
rolb
mov
aam
jmp
gs
and
outsb
and
fisubrl
jg
push
mov
dec
js
xor
in
imul
dec
jl
dec
xchg
add
aad
jecxz
mov
inc
aas
or
mov
mov
and
sub
daa
xor
xchg
std
or
dec
aas
adc
jb
imul
sub
mov
out
xor
test
inc
rorb
mov
push
sbb
xorb
ficomps
xor
out
sub
cltd
lret
test
mov
add
push
icebp
mov
and
leave
sbb
pop
nop
sti
in
ret
rcll
movsl
movsl
ficoml
sahf
ljmp
out
ljmp
mov
inc
stos
xchg
mov
pop
out
js
gs
hlt
push
fs
loop
ret
add
add
addr16
push
dec
pop
shll
xlat
mov
add
xor
jl
push
jle
test
outsb
data16
mov
ljmp
push
cmp
jbe
sub
dec
xchg
mov
jno
dec
lret
imull
out
call
inc
in
scas
mov
stos
in
sub
mov
xlat
rclb
mov
inc
ljmp
adc
cmpsl
cmp
lret
aaa
arpl
ret
add
cltd
call
and
lahf
fs
mov
mov
jno
jmp
rclb
stos
test
bound
lret
popf
jbe
push
add
jae
loop
out
xchg
push
xlat
push
stc
sahf
daa
mov
sub
jle
out
or
mov
mov
adc
popf
cmpl
xchg
push
repnz
cmp
or
imul
and
gs
fistpll
cmp
sbb
pop
push
sti
fwait
xlat
sub
ds
sub
aad
in
mov
outsl
xor
ret
cmp
lea
fcompl
incb
mov
push
add
cmp
xchg
pop
shlb
inc
rcrl
sub
or
mov
mov
or
imul
hlt
dec
push
xor
pop
mov
jns
cltd
jbe
mov
clc
ror
lds
push
mov
pushf
outsb
shll
fdivl
inc
inc
fwait
pop
or
jne
fisubrl
sub
dec
out
arpl
pop
add
xor
imul
incb
push
cmp
or
and
cs
dec
lock
jb
mov
and
aas
imul
jbe
jl
lahf
mov
cmpsl
push
rorb
insl
fistps
dec
negl
cmpsb
jb
and
or
lret
es
ds
outsl
sbb
int
ret
lods
shll
or
mov
dec
or
mov
mov
sub
jnp
mov
cmp
mov
jp
bound
mov
int
in
pushf
fwait
nop
neg
push
xor
xchg
inc
mov
xor
fcoms
xchg
adc
insl
mov
fcoml
movsb
lcall
xchg
stc
inc
sub
dec
add
bound
sbb
ficoml
xorl
shll
imul
fwait
xor
int3
cmc
and
call
jmp
ljmp
icebp
jge
js
ja
jmp
ficoms
ljmp
sahf
pop
scas
ss
pop
xchg
add
dec
mov
sti
sar
sub
shll
xchg
repz
cmpl
xor
ret
xlat
and
jae
and
cmp
pop
xchg
popa
push
sub
lods
roll
pop
out
pop
sub
add
cmpb
popa
out
add
cltd
cmp
add
maskmovq
mull
testb
movsl
cli
and
ja
js
pusha
addr16
jnp
iret
lahf
mov
hlt
fidivrl
pop
xor
stos
mov
fimull
iret
mov
mov
inc
xchg
loope
add
pop
adc
popf
pop
ljmp
dec
loop
jle
invd
mov
ret
lods
int
loope
adc
nop
ret
push
jg
xchg
dec
in
mov
mov
mov
sub
sarl
ds
loopne
dec
data16
hlt
scas
dec
sahf
scas
mov
test
lea
inc
das
xlat
or
inc
pop
mov
shl
push
cmc
inc
mov
mov
cs
xor
pusha
adc
mov
or
lods
out
ja
sahf
xchg
xchg
btc
pop
push
ljmp
insl
shld
jmp
jae
or
aam
or
cmc
adc
mov
push
fucomip
lds
ljmp
adc
sub
push
mov
dec
pop
cmc
enter
xchg
mov
rcrl
stos
in
pusha
fistl
cwtl
lods
mov
out
jne
and
inc
dec
popa
cmpsb
cmp
xchg
pop
sub
rol
jg
mov
cmp
push
adc
mov
jmp
andl
sub
testl
data16
loop
push
mov
jmp
xchg
push
pusha
loop
les
clc
jnp
jmp
cmp
mov
aam
push
es
and
mov
sbb
cmovle
in
inc
push
push
mov
dec
movsb
mov
mov
lds
sbb
xor
add
ret
ficoms
lds
shr
out
nop
fildll
xor
lds
mov
stos
data16
popa
ret
fs
stos
pop
lahf
shrl
in
sbb
xorb
adc
cwtl
add
mov
fnsave
pop
ds
aaa
push
jns
jp
sbb
adc
pop
scas
push
nop
mov
stc
test
add
jae
test
jge
pop
dec
add
shufps
dec
rorl
jle
mov
add
xchg
push
daa
addl
xor
mov
sub
movsb
andl
data16
jge
xchg
and
loope
jmp
xchg
das
sti
scas
jge
mov
sub
fisubrl
add
clc
mov
in
int
lret
adc
push
enter
pop
leave
sbb
cs
jnp
or
pop
adc
lds
test
lahf
mov
imul
sub
sub
mov
sub
dec
mov
xor
dec
sbb
xchg
jp
idivb
xor
mov
fstpl
test
push
mov
in
xor
cmp
jmp
hlt
pop
in
hlt
sub
addb
and
pop
in
test
scas
in
repz
push
movsl
mov
addr16
repnz
jnp
dec
gs
dec
adc
push
push
pcmpgtw
sub
push
fwait
imul
fmul
mov
inc
inc
sti
out
imul
or
xchg
xor
adc
mov
push
fs
addb
mov
and
xor
lret
xor
insb
insb
mov
adc
add
xor
jp
dec
lds
js
data16
lahf
mov
pop
and
sbb
add
test
and
in
int3
jmp
pop
stc
stos
add
jmp
jae
or
lret
pop
cmp
mov
lods
out
into
iret
mov
sbb
test
adc
push
inc
mull
xchg
mov
call
adc
jbe
je
arpl
or
ffree
inc
shlb
arpl
fistl
dec
add
sbbl
lar
xchg
add
mov
idivb
add
fimuls
push
cs
lock
xchg
mov
lcall
adc
les
popf
lret
int3
dec
and
pop
adc
lock
add
std
push
movsb
xlat
pop
xor
inc
outsl
and
mov
xchg
sub
mov
test
out
mov
inc
cltd
adc
sub
mov
notb
jno
dec
jle
xlat
imul
je,pt
inc
push
cmpsb
jno
push
or
sbb
xchg
movsb
mov
pop
not
and
mov
in
fwait
mov
mov
xor
lahf
xchg
xor
cmp
mov
jp
jbe
adcl
inc
or
xchg
pop
add
lahf
test
pusha
test
ja
addr16
dec
std
push
dec
or
or
jnp
orb
sbb
inc
sub
test
jb
sub
xchg
icebp
fcmovnbe
mov
or
negl
int3
hlt
call
lret
mov
out
adc
imul
cmpsl
mov
xchg
jne
adc
out
bound
push
add
add
cmp
adc
mov
aad
in
mov
les
jge
ja
adc
test
outsb
dec
test
in
sub
mov
ret
or
sub
out
inc
and
push
int
xor
test
sarb
add
mov
lds
jl
add
sub
ret
fwait
push
or
insl
gs
loopne
lock
hlt
lods
pop
stc
out
or
fcomps
fld1
mov
data16
addr16
out
and
add
xor
ss
pop
subl
ljmp
icebp
divb
repnz
xchg
test
fldenv
test
test
dec
fsts
and
pop
xchg
push
mov
out
into
jb
jae
lea
xor
sti
nop
lock
jle
sahf
lcall
cmp
sbbl
shl
sti
cltd
mov
dec
gs
lds
adc
and
ret
push
das
aas
cltd
push
dec
in
mov
jl
mov
call
mov
dec
aaa
mov
pop
pop
cmpb
fadds
pop
xchg
movsb
rcrb
mov
mov
adc
cs
jnp
movsb
jmp
inc
push
pushf
xor
cmp
xchg
push
ljmp
sahf
xor
jb
clc
adc
add
cmc
lods
xlat
mov
call
jg
fadd
daa
mov
jle
shl
add
hlt
mov
fmulp
arpl
mov
iret
jns
xchg
push
loope
hlt
hlt
pop
xchg
add
lret
push
loope
jbe
je
lret
lret
adc
mov
xlat
lock
cmpsl
out
mov
lret
xor
xor
sbb
cmpsl
mov
or
ret
push
pop
mov
into
aas
adc
cmp
jns
mov
es
and
sub
inc
add
and
int3
test
dec
sbb
int3
out
into
lret
add
cmp
mov
ret
pop
sub
xlat
mov
fisubrl
and
mov
lods
add
hlt
mov
xchg
addr16
xlat
jno
cwtl
and
push
push
outsl
sub
or
notl
cld
ffreep
jnp
mov
pop
cltd
or
dec
adc
scas
stos
mov
lret
mov
int3
loopne
in
pop
and
clc
mov
cwtl
std
test
xchg
jne
out
fistps
add
repnz
cmp
sar
addr16
adc
mov
fdivrs
repz
or
inc
aam
fildll
sbb
sbb
fadd
adc
std
jmp
rclb
jg
pop
stos
ljmp
mov
mov
add
in
mov
cmp
mov
es
mov
pop
mov
push
inc
inc
arpl
push
iret
lcall
add
sahf
fs
les
sbb
sbb
std
negb
pop
mov
sub
and
out
sub
sbb
scas
fdivl
add
fcom
outsb
lock
jmp
sbb
pop
mov
loopne
enter
xor
push
aam
fldcw
jo
inc
inc
adc
add
jb
hlt
cli
adc
cmp
or
pop
outsl
ljmp
stc
mov
or
mov
cltd
jmp
mov
mov
or
xchg
inc
jns
sub
pop
and
mov
or
addr16
mov
cmp
popf
jmp
jbe
hlt
mov
sub
or
and
out
aad
mov
sub
fs
mov
enter
push
jle
lods
insl
pushf
loope
jnp
popa
pop
mov
aaa
xchg
sub
mov
in
xchg
rclb
lret
push
push
mov
hlt
fidivl
push
jle
mov
sbb
push
repnz
or
inc
push
mov
xlat
jno
popa
lock
lds
mov
xor
fs
xchg
scas
ljmp
out
mov
arpl
dec
jnp
jle
fsubrl
adc
call
lahf
aaa
jae
adc
push
stos
bound
popa
and
lods
repz
push
repz
je
jecxz
push
and
mov
or
out
or
jo
or
lret
mov
jmp
or
mov
sub
lds
jg
xor
test
jae
push
ret
pop
out
inc
mov
mov
mov
sbb
rcl
and
subb
push
and
pop
push
cmc
mov
mov
movsb
andl
jle
les
mov
ret
pop
sub
shl
lods
je
bnd
std
das
lcall
pop
subl
and
jae
dec
add
pop
xor
call
popa
dec
jecxz
cmpsb
mov
scas
sbb
in
and
push
stos
fistpll
lods
cmp
jl
jmp
gs
roll
loope
sahf
cli
sbb
iret
pop
out
pop
popf
dec
adc
out
dec
outsl
adc
pop
xchg
cwtl
cmp
adc
shll
jecxz
sub
xchg
or
jmp
out
and
cmp
add
cmp
or
pop
fstpl
cmp
les
je
pop
adc
xchg
jecxz
mov
outsb
add
pop
cmc
pop
sub
cmp
pop
repz
pop
leave
mov
mov
inc
jb
jbe
mov
jg
loope
mov
lret
xor
mov
mov
mov
pop
pop
jp
insl
pop
pop
sahf
inc
jmp
push
roll
dec
jae
ljmp
lock
stc
cmp
nop
jl
push
into
and
mov
iret
sbb
push
fwait
inc
adc
nop
mov
imul
xchg
stc
in
into
xchg
pop
cmp
lret
clc
test
fs
das
push
mov
push
push
xchg
dec
insb
sarb
cld
fistpll
jmp
pushf
xor
es
sub
cmp
lds
cmpsl
mov
inc
sahf
fwait
lahf
dec
mov
pop
cmpsb
inc
dec
packsswb
pop
fs
cld
loope
sbb
out
sarl
adc
or
and
movl
adcb
aaa
es
push
and
xchg
sub
jbe
dec
and
jnp
dec
orl
mov
mov
nop
bound
adc
les
pop
jbe
xchg
adc
ja
or
xchg
icebp
fdivrl
jno
mov
notl
dec
adc
inc
pop
or
pop
sbb
in
mov
adc
sub
aaa
mov
in
pop
mov
shll
sub
inc
lods
sbb
std
cld
fsubrs
ja
insl
rcrb
sti
xchg
lock
aas
adc
in
mov
out
hlt
mov
ljmp
jge
stc
dec
aam
xchg
dec
bound
nop
lods
les
insb
test
sub
or
int
shlb
add
dec
push
pop
xor
jns
mov
push
add
ljmp
stos
ret
popa
popa
call
mov
sbb
xor
adcb
in
rcrb
pop
jne
add
fwait
outsl
inc
push
mov
addl
mov
push
insb
aam
mov
orl
pop
arpl
sbbl
cmc
test
outsb
enter
add
in
shll
imul
in
lret
pop
fldt
inc
push
mov
loope
jne
inc
add
leave
mov
ret
push
fnstcw
pop
and
movsl
cmp
enter
ret
cmp
cli
adc
stos
mov
cmpsb
or
push
or
cwtl
jno
jmp
or
mov
sti
or
and
mov
or
or
lds
jns
imul
mov
mov
sahf
inc
sub
sub
fwait
loopne
and
mov
cmp
cli
stc
scas
mov
inc
insb
add
push
in
add
or
lret
pop
mov
lods
push
inc
fcmovbe
mov
jg
push
jae
pop
icebp
pop
xchg
in
aas
icebp
xchg
pop
js
popa
inc
pop
leave
aam
cli
daa
movsb
jo
ret
mov
mov
minps
scas
pop
fisubl
push
pop
adc
fsubrs
inc
pushf
mov
dec
mov
mov
inc
arpl
inc
hlt
xchg
das
test
inc
mulb
cmp
outsb
push
push
xchg
adc
push
push
sub
and
inc
pop
lods
jle
sbb
js
xor
pop
adc
jno
enter
sub
push
xchg
push
mov
mov
mov
push
mov
sbb
pop
mov
jo
add
pop
outsb
movsb
mov
jmp
sti
jo
adc
pop
fbstp
push
clc
repz
mov
fidivs
sbbl
enter
sbb
xchg
loop
popa
jmp
bnd
pop
iret
cld
jle
mov
pop
int
mov
mul
stos
jo
ja
mov
push
mov
mov
dec
jp
loopne
iret
mov
dec
xor
sahf
mov
lea
call
and
lods
mov
push
out
pop
dec
sbb
sbb
push
sbb
fdivrl
sti
incb
jne
cltd
js
jecxz
mov
mov
std
xchg
xor
mov
lods
mov
int
add
mov
stos
daa
clc
hlt
adc
inc
fidivrs
daa
xchg
scas
sub
dec
je
mov
mov
jmp
mov
xlat
sahf
jle
cli
dec
pop
sbb
aam
jg
inc
fisttpll
or
lods
mov
push
jne
nop
ret
outsb
dec
mov
sbbl
inc
jp
jmp
lahf
stos
pop
push
ret
cmp
popa
push
shll
push
imul
or
pop
fnstcw
je
call
inc
fisubrs
cmp
shl
stos
inc
mov
jge
ja
imul
cmpsl
fwait
pop
adc
imul
int
sbb
repnz
fsubs
in
pop
adc
cmp
ja
push
mov
andnps
aad
fisubs
dec
sub
notb
popa
jmp
pushf
loope
icebp
lods
xchg
pushf
insl
pop
mov
das
aaa
cli
or
xor
jns
rorl
dec
mov
or
adc
fwait
mov
mov
xchg
and
dec
scas
jg
cmp
mov
push
and
fstl
adc
in
mov
jp
cmp
pop
mov
sbb
stc
push
ret
inc
or
cmp
cwtl
push
jae
xchg
and
insb
jg
dec
mov
jae
xchg
js
mov
cmp
push
and
rcl
cmp
imul
repz
fldenv
push
orl
pop
pop
sub
pop
sub
inc
xchg
push
ficoms
inc
inc
insb
mov
enter
xchg
bound
mov
adc
mov
xor
adc
jge
pop
mov
jg
mov
stos
shlb
jnp
lock
jle
jo
lret
pop
jmp
scas
call
mov
aaa
testl
jge
pop
sub
enter
push
fdivrl
imul
push
pop
cmp
xor
and
mov
cmp
and
and
dec
test
and
clc
jg
inc
push
sub
outsl
cmpb
xchg
push
int3
sbb
mov
and
add
test
pop
dec
mov
in
lods
clc
rolb
sbb
fcmovnbe
and
stos
daa
loope
pop
cs
mov
sub
adc
repnz
pushf
push
cwtl
popf
loop
add
lahf
xor
pop
push
scas
popf
mov
ds
cmp
das
loopne
mov
or
addr16
or
cmc
stc
lock
test
lods
or
scas
add
push
sahf
xchg
addl
xchg
lock
filds
jb
adc
mov
or
push
imul
sbb
iret
loop
add
iret
dec
push
sbb
fs
and
or
divb
jns
add
inc
push
jo
mov
fists
insb
mov
jno
pop
dec
xlat
cmp
xchg
jle
pop
mov
mov
out
dec
dec
jae
cmp
mov
jle
sbb
mov
repz
ret
add
add
xor
cmc
push
jae
mov
je
lods
rclb
jl
test
and
test
movsb
mov
bound
xor
fldcw
into
mov
cltd
jae
adc
mov
daa
and
clc
ja
jno
mov
push
imul
pop
mov
insb
fldenv
mov
xchg
sarb
jns
sbbl
sahf
pop
and
ret
sbb
push
das
xorl
pop
lods
mov
cmp
icebp
sbb
mov
pop
cmp
in
mov
clc
ret
push
jecxz
xchg
movb
cmp
enter
shrb
cli
insb
xchg
es
sbb
fists
jp
popa
enter
pop
pop
cmp
mov
mov
jecxz
xchg
mov
jecxz
sbb
push
mul
inc
jb
stos
cmp
push
out
jge
ss
adc
arpl
cmp
inc
inc
xchg
pop
cmpsl
sub
loopne
shr
and
xchg
lods
clc
sete
pop
xorl
mov
pop
imul
cmp
pop
add
aaa
sub
sbb
xchg
pushf
sub
or
cmp
sbb
imul
repnz
movsb
mov
jb
neg
decl
mov
dec
aas
outsl
mov
sub
jnp
fxch
pop
cmp
enter
into
cmpsb
movl
mov
hlt
jecxz
mov
sarl
xchg
mov
lods
insb
adc
pop
adc
xchg
inc
cwtl
subps
fcmovne
mov
pushf
cli
lret
xchg
repnz
mov
inc
ljmp
mov
mov
in
push
inc
fistl
icebp
mov
cmp
sbbl
test
rolb
xor
popf
test
or
lahf
int3
addr16
dec
cmovno
js
fcomi
mov
adc
jmp
push
adc
xor
imul
andl
jns
insl
xor
dec
push
enter
pop
jbe
push
or
mov
push
and
sub
repnz
mov
xchg
inc
xor
pop
sub
mov
sub
push
cmp
movsl
push
testb
xchg
ljmp
push
je
mov
imul
sbb
pop
jmp
push
out
sti
mov
sar
push
scas
sub
in
lahf
xor
std
xchg
and
cmpl
orb
jae
pop
lret
lcall
imul
les
scas
popf
ret
das
jmp
inc
xor
sub
outsb
lea
or
into
xchg
mov
scas
xor
and
fwait
cmc
add
dec
jae
insl
popf
addb
or
xor
add
insl
pusha
dec
fisttpll
pop
mov
push
inc
dec
imul
out
js
push
push
dec
xchg
icebp
ret
cmp
mov
xchg
ror
fnstenv
jne
cmp
push
sub
xchg
mov
lcall
or
sub
pop
call
dec
jg
jno
lea
or
test
mov
popa
sub
aad
jg
icebp
dec
div
int
mov
or
inc
jo
lds
jmp
rorl
daa
sahf
movsb
pushf
dec
cmpb
cmpsb
sbb
fnstcw
in
dec
out
stos
jo
test
popf
jb,pn
loopne
mov
pop
pushf
loop
pop
push
fmuls
std
loopne
mov
cltd
adc
cmc
popa
lret
pop
inc
push
mov
cmp
cmp
and
inc
outsl
cmp
test
inc
xor
push
js
mov
movl
shll
jnp
cmc
jne
and
test
lock
ret
das
or
in
add
dec
dec
aas
xor
pop
dec
mov
xor
cmpl
mov
and
mov
xchg
sahf
jae
inc
jno
push
sub
push
lahf
pop
mov
mov
sbb
jge
adc
out
xor
sub
mov
xlat
xor
iret
outsl
lcall
leave
mov
sub
jge
adc
xor
dec
mov
jp
dec
loope
cmpsl
sbb
pop
imul
daa
outsb
add
repnz
xor
rcrb
sbb
lret
fisubs
add
pop
mov
fidivrs
add
or
sar
shrl
mov
xchg
and
es
shl
ss
das
cmpsb
loope
cmp
aam
jle
je
adcb
cltd
xchg
jns
sahf
and
or
ss
push
mov
movsl
cwtl
push
faddl
mov
mov
popf
or
lcall
outsb
xchg
orb
mov
out
push
add
aam
mov
mov
sbb
jl
pop
scas
xchg
xchg
pop
pop
repnz
leave
stos
aas
push
cmp
pop
mov
cmp
insl
or
aam
xchg
fistl
or
fidivs
add
push
cmc
cmp
stc
mov
add
mov
dec
cmp
jns
dec
sub
movsb
push
ficoms
sub
mov
or
imul
sbb
xlat
cltd
outsl
shrb
mov
xor
in
outsl
cmp
pop
mov
ret
out
pusha
mov
sbb
pop
aam
repnz
pusha
imul
inc
adc
dec
mov
test
mov
movsb
cmp
sahf
clc
pop
mov
pop
mov
ret
cmp
les
cs
mov
xor
pop
imul
add
xchg
pop
in
jns
inc
sbb
push
mov
xchg
adc
cmp
out
jecxz
mov
pushf
sbb
mov
push
adc
adc
cs
inc
push
pop
mov
dec
pop
pop
or
rcrb
leave
int
lods
xor
cmp
and
fimuls
or
sti
mov
pushf
pop
push
cmp
pop
jnp
dec
inc
outsb
or
inc
insl
int
gs
lret
mov
sub
fnstsw
mov
mov
or
xor
pop
lock
push
xor
inc
insb
jl
sub
cmc
jecxz
add
push
xchg
push
icebp
pusha
je
lret
xor
sbbl
jmp
cmp
xor
sub
cwtl
out
jge
scas
xor
add
flds
or
add
jmp
stc
dec
scas
fistl
call
out
mov
mov
and
cmp
sub
sub
in
mov
mov
popa
loop
sarl
out
push
push
cli
ds
insl
repz
jns
sahf
ret
pop
mov
out
fldl
insb
xlat
jne
movb
aad
pop
add
in
fbstp
loope
jecxz
sub
imul
movsb
mov
xchg
les
lret
cmp
int3
adc
xchg
std
mov
cmp
pop
jp
mov
mov
inc
inc
add
jge
mov
pop
and
lahf
adc
or
imul
movsl
dec
mov
es
outsl
movsb
test
xor
and
test
ja
xchg
adc
inc
daa
clc
pop
inc
in
rcrl
sbb
push
daa
insb
mov
mov
sub
mov
cld
jmp
lods
or
mov
dec
loop
jp
fbstp
int
iret
adc
loop
xchg
ret
test
cmp
lret
and
mov
sti
add
sub
ret
imul
jp
push
sub
mov
ljmp
nop
inc
notl
and
das
mov
lods
pop
cmp
and
sub
xchg
addb
mov
lret
test
mov
inc
cltd
mov
xchg
and
pop
push
movsl
xchg
push
mov
jnp
jb
push
cmp
and
mov
fucomi
sub
and
jbe
mov
mov
pop
mov
sub
xchg
pushw
xchg
push
out
dec
ds
arpl
pop
inc
push
xor
push
adc
xchg
mov
pop
pop
out
rcrb
das
fcmovbe
cld
xchg
mov
sbb
sysret
adc
cmp
dec
lcall
lcall
sub
les
data16
xor
cs
popf
jp
aas
and
test
int3
or
jo,pt
lret
roll
imul
dec
in
lret
mov
iret
mov
int3
mov
stos
sarb
imul
dec
aad
lods
jp
test
xchg
repnz
or
mov
je
incb
xor
push
mov
add
sub
mov
push
lds
adc
jle
sbb
add
xchg
outsl
nop
cmp
inc
mov
idivl
and
fadds
sahf
vpmaxsw
repz
call
and
in
jmp
aaa
cwtl
in
sub
mov
xorl
ret
xorl
js
jle
xacquire
xor
gs
gs
repnz
mov
cli
adc
jno
or
sahf
leave
dec
das
int3
loop
sbb
and
test
sti
dec
or
lock
fimuls
mov
pusha
fidivrs
mov
mov
fucomip
add
xor
xor
arpl
in
inc
pusha
dec
cltd
mov
fbstp
test
dec
jne
and
inc
adc
in
repz
ror
mov
icebp
jb
cli
rcll
push
mov
add
icebp
xor
addl
je
outsb
js
popa
out
or
jnp
push
jne
cmp
xchg
ss
push
mov
hlt
push
xor
in
or
mov
dec
dec
hlt
sbb
fcoms
fistpll
sub
or
stos
mov
scas
movsb
jp
pop
mov
adc
mov
jae
or
xor
inc
inc
add
mov
or
popf
fsts
shr
pop
push
mov
or
enter
mov
insb
cld
flds
inc
xchg
inc
int3
xorl
stc
sub
fadds
or
gs
imulb
pop
dec
aad
adc
dec
adc
sub
cltd
add
mov
cmc
cwtl
adc
cmp
xchg
mov
mov
jo
adc
xor
cmp
jae
adc
mov
adc
je
jae
jns
sbb
ja
testl
push
lods
imul
sub
and
mov
aam
mov
ret
mov
int
andl
fstl
xchg
jnp
in
sub
and
dec
jle
jno
jmp
pop
fsubrs
in
push
call
xchg
xchg
cmp
jns
test
ljmp
repnz
cmp
pushf
faddl
ds
scas
daa
mov
dec
lea
aad
inc
and
pop
cs
pop
enter
jecxz
scas
scas
or
dec
dec
mov
sub
or
out
and
pop
loop
cmp
mov
mov
mov
adc
fcoms
je
hlt
pop
push
movsl
xor
in
cmp
xchg
mov
subb
fs
push
sub
arpl
mov
shlb
notb
mov
movsl
jl
sbb
insb
dec
dec
mov
sub
pusha
jecxz
mov
js
pop
cmc
mov
or
je
sbb
add
rorl
jg
cmp
call
jae
sub
outsb
int3
pop
insl
push
lea
push
mov
insl
push
pop
xor
imul
bound
sub
adc
adc
lods
sbb
stos
fisttpl
sub
inc
xor
adc
add
in
imul
or
pop
cmp
ja
mov
roll
iret
xchg
cli
adc
iret
fnstsw
xorb
xchg
push
xor
add
mov
inc
mov
jp
xor
fwait
pop
fstpt
js
and
ror
jb
mov
popf
cwtl
pop
pop
cmp
aad
popl
push
out
xor
pop
mov
mov
lret
jno,pn
popa
xor
fdivr
mov
inc
bound
in
lds
mov
mov
sahf
int
inc
lods
dec
xor
adc
out
cwtl
jbe
sub
sub
int3
loop
ja
xchg
fadd
fs
adc
enter
adcl
addr16
stos
xchg
or
popa
jno
or
cmp
fwait
insb
out
pop
pop
mov
call
pusha
pop
test
mov
xchg
dec
or
push
adc
pop
pop
xchg
sbb
movsb
dec
pushf
imul
sub
sub
sbb
xor
negl
xor
add
push
or
fnstcw
mov
sbb
iret
adcl
aad
out
adc
cli
iret
stc
outsb
daa
pop
mov
std
sbb
or
sbb
jmp
lds
ret
dec
outsl
xchg
inc
lock
test
inc
arpl
imul
je
mov
jno
xor
mov
cmp
jg
test
add
and
cmpsb
xchg
ljmp
fsubl
pop
sbb
loop
rcrl
flds
cmpsb
fistps
hlt
test
ja
mov
cltd
lcall
stos
pop
les
sub
fiadds
cld
ret
xchg
movsb
and
testl
nop
movsb
jle
adc
aaa
pop
jecxz
push
pop
push
mov
dec
filds
addb
sub
jne
xor
push
add
lds
repz
push
mov
repz
std
push
mov
arpl
cmp
dec
test
into
mov
data16
js
sub
ss
pop
fwait
or
fists
mov
repz
ljmp
pop
lret
insl
xchg
inc
dec
cs
out
inc
mov
hlt
aad
mov
or
fldt
scas
push
decb
jne
bound
xchg
imul
test
jge
and
call
loop
cmp
xchg
cmp
addr16
push
jp
jmp
pop
inc
jne
inc
in
gs
jns
push
pop
mov
pop
lds
xor
fsubl
ja
sub
lods
cmc
das
xor
es
sbb
or
inc
lea
or
mul
fadd
add
fsts
cmp
xor
fstps
pop
popa
mov
bound
aam
add
out
les
int
mov
lods
sbb
push
add
jb
adc
jl
sti
loop
adc
and
lock
sub
icebp
nop
cli
pop
jae
xlat
jbe
adcl
je
push
mov
imul
in
jp
out
mov
out
js
orl
jmp
stos
rolb
push
xchg
adc
jmp
pusha
enter
cmp
into
hlt
divb
fs
xchg
cs
and
iret
mov
aam
jmp
std
dec
sub
sbb
jb
test
rclb
out
loopne
test
inc
test
imul
fdivrl
lock
jle
sbb
insl
sti
ret
fs
dec
enter
mov
jge
pop
push
jp
aaa
icebp
xchg
inc
in
in
scas
xchg
sbb
fwait
dec
pop
push
dec
mov
outsb
push
call
xchg
add
std
and
arpl
cltd
add
repnz
orb
loopne
call
movsl
xchg
adc
out
leave
mov
enter
fwait
cld
aad
mov
push
sub
pop
inc
and
jp
cmp
scas
dec
out
xorb
ljmp
dec
sbb
xor
dec
popa
aaa
orl
lcall
scas
rcrl
cmpsb
iret
shlb
cmc
ficomps
xchg
out
jb
into
inc
jns
into
sti
cmp
mov
lret
sbb
xor
cmpsb
xchg
add
xchg
jbe
and
cld
cmp
int
insl
mov
shll
movsl
popa
scas
cmp
xor
call
jno
xor
dec
or
xchg
das
clc
in
mov
es
push
clc
lret
or
aad
aad
sub
idivb
adc
addb
jb
addr16
iret
mov
adc
fildl
push
sub
xor
imul
dec
roll
inc
jno
fucomp
jno
sbbl
movsb
add
lock
lret
ljmp
mov
aad
fsubl
pop
addr16
sub
xchg
mov
add
mov
daa
ljmp
xchg
mov
dec
push
jns
jbe
cmpsl
xchg
les
sbb
jbe
mov
icebp
jg
andps
add
push
pop
jle
lcall
jnp
sbb
mov
xor
jmp
mov
inc
loope
cli
aam
inc
jp
pop
dec
movsb
mov
mov
loope
insl
cmp
sub
dec
and
xor
inc
pushf
mov
sahf
arpl
shlb
push
push
mov
xchg
jecxz
cmp
pop
addr16
inc
sub
cmp
mov
insl
push
imul
lret
fcmovnbe
mov
and
std
sub
leavew
in
cli
mov
in
dec
decl
pop
xchg
stc
xor
fstp
and
xor
push
xchg
aad
repz
xor
or
loopne
or
int
lret
pop
mov
stos
mov
inc
cld
jbe
push
imul
rclb
push
lds
inc
jle
lcall
subl
jg
pop
mulb
push
int
add
mov
pop
mov
fistpl
fcoms
mov
data16
je
imulb
loope
mov
cli
mov
sub
sub
sbb
push
in
add
je
js
mov
out
data16
mov
mov
cltd
or
fildll
stc
pop
int
xor
mov
jle
dec
mov
stos
insl
mov
xchg
jb
mov
mov
jns
imul
sbb
shlb
inc
xchg
out
mov
flds
out
push
lahf
xor
fsts
sub
lahf
jns
add
je
loop
mov
or
pop
insb
fwait
sbb
inc
xchg
mov
inc
cmp
xor
pushw
and
mov
aam
cmpsl
addr16
out
xor
pop
pop
mov
pop
add
add
call
nop
rorl
mov
popl
add
lcall
mov
jl
xchg
jnp
dec
push
pop
test
push
or
icebp
lds
mov
sbb
loopne
jp
inc
push
pop
in
insl
mov
cmp
push
into
inc
jle
inc
jmp
or
fdivp
mov
pop
shlb
rcrb
mov
pusha
mov
imul
mov
cmpsb
in
outsl
shl
hlt
push
dec
adc
inc
lcall
cld
sbbl
fidivs
mov
add
popf
pusha
and
pushf
je
push
pop
stos
daa
arpl
sti
emms
mov
mov
dec
dec
lock
aas
xchg
lods
cmpl
fcmovnb
imul
xor
mulb
dec
clc
out
int3
inc
inc
inc
mov
repnz
pop
pop
gs
add
into
mov
add
jg
jl
out
lods
negb
repz
loope,pt
and
sbb
shll
cmc
lahf
push
dec
cwtl
inc
sub
xlat
movb
fs
mov
xchg
mov
mov
jns
pop
dec
sbb
jle
imul
out
fwait
and
imul
cwtl
daa
mov
mov
in
mov
mov
cs
mov
rorb
cmp
shl
jp
out
sub
rcr
sahf
inc
mov
push
ljmp
sub
dec
and
cmpsl
ror
mov
add
ja
cmp
mov
or
movb
xchg
jo
pop
mov
mov
or
or
push
dec
ss
scas
cmpsb
xor
icebp
lods
ror
lret
int3
mov
xchg
dec
mov
push
inc
dec
pop
inc
pop
jb
xor
add
sbb
cmc
or
pop
inc
xor
cmpsl
cmp
movsb
inc
aaa
cmp
ljmp
popf
das
in
pusha
lods
imull
mov
xchg
scas
and
pop
js
inc
ud2
mov
mov
fwait
arpl
in
stos
ljmp
jns
lea
xchg
cli
mov
outsl
mov
out
data16
adc
cmp
shll
dec
sbb
stos
inc
mov
in
dec
jle
add
adc
adc
in
push
dec
cmp
out
dec
ja
daa
mov
inc
fcompl
sbb
or
add
sub
push
pop
mov
icebp
roll
out
xchg
mov
add
cmpsl
cmpb
cwtl
das
mov
xor
xor
push
jbe
push
mov
in
lret
push
xor
out
pusha
push
roll
popf
pop
and
add
test
arpl
cmp
ss
fistps
stos
fsts
jmp
jae
adc
icebp
sbb
mov
or
push
cmp
out
dec
mov
ds
mull
in
loopne
xchg
lods
push
xchg
sub
dec
cmp
test
test
aad
add
xor
ja
lret
out
push
push
imul
and
mov
sub
aaa
pop
jp
dec
sbb
and
stos
in
push
cmp
cs
cmp
sbb
push
pop
fstl
mov
imul
push
push
pusha
and
shlb
je
std
inc
inc
sbb
call
dec
inc
outsl
das
push
adc
lods
sub
fwait
sub
sbb
dec
cli
shlb
sti
lods
lds
add
outsl
pop
lret
and
jecxz
dec
roll
xchg
mov
jne
pop
add
cmp
rcrl
stos
cmp
or
push
lcall
lret
or
sahf
inc
push
insb
outsl
add
push
std
adc
je
sub
xorb
test
gs
repz
les
mov
xchg
shll
aaa
jp
loop
testb
jne
sahf
stos
ja
mov
std
xor
mov
sbb
push
push
mov
mov
addr16
mul
inc
es
fimull
and
or
cld
popl
stc
fidivrl
sbb
mov
out
popa
mov
cld
lea
inc
pop
xor
xor
shrl
xchg
lods
ret
loop
fsubs
outsb
test
in
cld
loop
mov
outsb
iret
mov
xchg
cmp
mov
ds
fmul
mov
call
jle
test
fstl
out
or
repnz
add
shrb
mov
xor
xor
jbe
cmp
scas
movups
loope
pop
jo
xlat
sbb
jmp
bswap
pop
addl
cs
es
aas
cmpsb
xchg
or
mov
stos
in
data16
in
cmp
mov
out
test
xchg
ljmp
mov
or
pop
mov
sub
mov
dec
fnstsw
adc
push
dec
or
jne
fwait
sub
jbe
xor
adc
lcall
addr16
popa
call
dec
cmpsb
pusha
aaa
aaa
popf
adcl
xchg
mov
jecxz
jl
jge
sub
mov
loop
push
jbe
insb
adc
fildll
pop
lret
xor
jmp
int
movsb
cs
sub
call
dec
xchg
in
cmp
inc
cmpsl
arpl
dec
mov
xor
into
adc
inc
stc
push
imul
shrl
stc
mov
and
xchg
test
mov
ss
cmp
test
and
pop
mov
lret
and
or
addl
dec
jecxz
mov
xchg
sbb
jg
or
add
sub
mov
jle,pt
popf
and
cs
adc
inc
mov
inc
leave
mov
in
ss
sub
clc
fbld
inc
es
les
mov
or
push
adc
dec
xor
lret
cmpsb
or
xor
ja
cmovne
mov
testb
lods
xchg
push
jo
aas
hlt
mov
adc
xchg
mov
mov
jo
dec
inc
fildll
cmp
pop
sbb
out
mov
pop
fidivl
movsb
adc
in
xor
xchg
inc
sub
shr
in
adc
fists
mov
mov
sbb
jno
add
sub
andb
jnp
out
inc
aas
cmp
stos
popf
sahf
dec
mov
xor
sbb
push
cmp
cmpsb
adc
ss
cld
dec
dec
outsl
adc
es
mov
sub
mov
xor
shrb
cmp
scas
mov
lods
mov
jns
sub
or
incl
data16
aad
dec
mov
std
dec
es
ljmp
je
rorl
in
adcl
lea
dec
inc
jb
push
cwtl
sub
xor
xor
or
mov
mov
jae
push
nop
imull
adc
ljmp
scas
test
pop
stos
dec
jmp
xchg
pandn
fimuls
cmpsb
std
mov
sub
mov
mov
sub
and
cmp
cmp
lods
icebp
and
push
add
mov
cld
ret
mov
dec
loope
mov
shl
cs
rcrl
mov
pop
cmp
inc
push
jne
mov
cmpsl
cmc
and
fwait
cltd
sti
inc
and
rcl
pop
arpl
pop
sbb
fyl2x
int
lret
outsl
xchg
sahf
push
and
cltd
cmp
loop
fdivrs
clc
cmp
aaa
pop
dec
adc
test
jb
mov
xchg
fiaddl
push
inc
push
loopne
mov
daa
pop
jge
pop
xchg
sub
test
cmp
adc
scas
jge
int
cmp
xorl
inc
test
and
mov
sahf
cmc
xchg
ljmp
xor
inc
scas
jle
mov
enter
lret
mov
cmpsb
push
cmp
xchg
jo
cmp
sub
jns
enter
and
add
insb
lcall
pop
or
xchg
iret
mov
outsl
orl
sbb
data16
jbe
leave
ret
mov
lods
mov
push
ljmp
sub
adc
lds
sbb
std
frstor
fdivl
xchg
or
cli
xor
mov
jae
std
xchg
orb
out
test
in
call
inc
jne
insl
aas
lahf
mov
and
add
dec
lock
xor
or
add
int
mov
xchg
adc
test
or
sub
push
cmp
inc
sbb
aas
mov
xchg
and
mov
push
sbb
inc
imul
subb
adc
pand
mov
cmp
mov
mov
iret
pop
mov
add
push
mulb
fcoml
mov
out
aam
sub
enter
cmp
add
in
ret
dec
adc
and
cs
fwait
and
test
arpl
push
rorl
mov
lret
cli
hlt
ret
outsl
xor
jb
lahf
cmp
repnz
stos
push
sbb
test
mov
mov
xchg
mov
dec
cmp
pop
lock
into
movsl
push
pop
iret
add
sti
and
out
cwtl
push
mov
call
lods
or
inc
and
movsb
scas
xchg
pop
clc
xchg
fcomip
shl
shl
push
lea
xor
popa
mov
filds
pop
push
andb
or
movsb
push
add
cmpsl
dec
insl
scas
xor
push
cwtl
jg
ret
cmc
mov
data16
out
roll
cld
dec
das
push
dec
xchg
outsb
jnp
addb
push
sub
daa
aad
std
push
mov
lcall
jb
pop
rol
push
mov
incl
push
dec
ret
sub
push
mov
out
in
stos
mov
mov
cmp
pop
orb
xchg
inc
and
mov
sbb
popf
jmp
jmp
inc
adc
xchg
jne
data16
lcall
pop
imul
dec
lock
adc
xchg
or
sti
inc
scas
xchg
adc
jne
mov
out
sti
call
test
pushf
enter
xor
jns
cmpsl
ficoms
jo
lahf
dec
sub
jmp
and
inc
xor
test
xchg
pop
js
push
or
mov
lods
ljmp
hlt
les
push
and
packuswb
jb
lock
cwtl
mov
lock
int
sbb
popf
stos
aam
jns
ja
jne
pop
incl
in
adc
cmp
sbb
pop
xchg
dec
push
jbe
insl
and
adc
adc
outsl
sbb
mov
jp
sbbb
sub
sub
out
adc
sbb
push
stos
jb
test
push
dec
loope
jae
ret
or
sti
jbe
pushf
adc
cmpsb
outsl
sub
in
ljmp
xchg
div
arpl
add
fwait
repnz
push
loopne
outsl
push
arpl
sbb
push
xchg
insl
xchg
jno
pushf
rolb
xchg
jb
enter
outsl
adc
mov
int3
mov
or
pop
lods
scas
ds
add
add
adc
push
push
jns
sbb
push
les
mov
bound
dec
outsb
inc
sub
adc
mov
jb
aam
xor
pop
xchg
into
les
insb
rorl
lcall
imul
mov
stos
push
push
and
movsb
jns
mov
mov
inc
jp
fwait
sub
push
cmpsb
nop
lahf
pop
push
or
addl
dec
sti
add
or
mov
sbb
push
jp
icebp
mov
dec
push
pop
sahf
mov
xlat
xor
jb
lds
arpl
out
rcrb
in
movsl
inc
pop
push
inc
inc
sub
subl
cmp
xchg
jge
out
in
rcr
xchg
add
jb
pop
int
push
and
dec
sahf
repnz
sub
bound
into
rorl
mov
movsb
pop
push
les
loop
sahf
call
aas
adc
sbb
lahf
push
cmpsb
mov
xchg
nopl
loopne
imul
jbe
xchg
daa
adcb
mull
and
cli
outsb
or
lret
pushf
cmp
sbb
int
adcb
in
leave
pop
cli
mov
jge
movsb
aad
into
jo
int
cli
aaa
daa
pop
sbb
or
xchg
cmp
cmpsl
jne
mov
aaa
push
mov
sbb
jp
and
shlb
movups
sbb
xor
ja
cmpsb
outsl
bnd
inc
push
jp
sbb
mov
testl
loopne
pop
xchg
mov
mov
adc
inc
jne
xchg
sahf
movsl
inc
jae
pop
sbb
roll
mov
lahf
shl
loopne
sub
enter
std
inc
fiaddl
and
pop
add
dec
cmp
xchg
push
idiv
dec
mov
jle
push
add
pusha
nop
das
mov
hlt
and
cltd
rcll
fcoml
push
popf
aaa
test
dec
sbb
xchg
inc
lods
inc
pop
aaa
daa
mov
into
test
inc
adc
mov
xchg
xor
iret
dec
popl
icebp
out
fldt
and
xor
cs
lahf
test
sub
sub
add
pop
stc
mov
jge
pop
dec
outsl
lret
movsb
int3
mov
sbb
filds
or
cwtl
xor
jecxz
inc
jle
and
cmc
mov
adcl
pop
pusha
jne
jmp
lods
sbb
add
sub
aam
sub
cmp
popa
sub
out
and
or
xor
push
mov
sbb
arpl
inc
push
arpl
fwait
push
mov
scas
mov
push
inc
push
mov
and
xchg
mov
outsl
stos
dec
pop
shl
imul
iret
cmp
mov
dec
pop
cwtl
aaa
sbb
mov
mov
jle
imul
mov
mov
or
fsub
pop
inc
sti
xchg
stos
mov
out
xchg
and
dec
into
jmp
outsb
mov
adcl
mov
pop
push
cmp
cmp
pop
adc
aad
and
lods
add
cmpsb
xchg
fs
inc
mov
fldl
icebp
lcall
jo
das
push
cmp
cs
xchg
int
cmpsl
cwtl
leave
mov
mov
ljmp
jbe
mov
sbb
std
ss
push
pop
add
lods
add
jns
dec
jmp
push
lahf
cltd
cs
leave
cmpb
ljmp
sub
popf
pop
adc
test
gs
push
clc
pusha
lods
push
push
push
cmpsb
dec
loop
pusha
das
icebp
mov
dec
push
mov
int3
jo
mov
inc
cli
mov
rorb
sbb
sti
sbbl
jecxz
add
fdivrs
stc
jae
and
out
mov
fmul
cmp
sub
cmpsb
repz
call
out
sub
xchg
push
pop
mov
scas
ss
negl
pushf
shll
sub
sbb
sub
leave
inc
cli
adc
mov
iret
loop
pop
imul
jmp
cmpb
aad
shl
mov
cmp
add
lods
push
jno
fdiv
sub
out
sub
push
jo
pusha
dec
xor
sbb
xor
lret
andb
loopne
cmp
mov
lods
xor
daa
add
push
add
mov
addr16
jb
pop
lcall
lea
jnp
data16
gs
test
nop/reserved
adc
cli
inc
gs
lods
cmp
inc
xchg
ficomps
jae
in
cmpsb
xchg
dec
or
sbb
notl
mov
jno
and
ds
inc
pop
les
fistpl
dec
lock
pop
lahf
ljmp
gs
sarb
xchg
add
push
int3
push
and
sahf
sbb
into
jns
lock
and
pop
rclb
dec
test
sbb
add
ljmp
mov
sub
mov
jl
adc
lods
pop
iret
mov
das
cmp
das
jl
jbe
sbb
mov
add
pop
jno
xchg
dec
mov
enter
jg
dec
pop
ljmp
mov
add
not
loopnew
xchg
sbb
pop
movsb
ret
loopne
testb
sbb
loopne
cmp
jbe
repz
movsl
xchg
rol
mov
loope
jno
lret
cmp
and
dec
inc
insl
add
mov
mov
fisttpll
and
seta
pop
test
pop
mov
inc
movsl
pop
adc
dec
ljmp
dec
loop
in
repnz
out
jge
jne
and
sub
push
mov
push
addl
popa
pop
clc
push
push
pushf
je
jg
push
inc
lea
ja
packssdw
add
xchg
clc
sar
pop
pavgw
add
arpl
inc
test
lock
dec
mov
das
adc
jne
mov
jne
and
push
xor
cs
adc
push
test
adc
mov
pop
push
pusha
arpl
dec
lahf
mov
xchg
adc
int3
shrb
mov
insl
out
test
aad
loopne
mov
aaa
lret
pop
xchg
cmc
and
ds
ljmp
mov
in
mov
stos
xchg
stc
adc
mov
stc
js
aaa
mov
imul
jl
in
xchg
or
and
xchg
pop
jmp
les
sbb
pop
out
pop
cmp
pop
add
xor
addb
xchg
iret
jbe
mov
push
sub
out
lcall
mov
hlt
jno
inc
nop
add
mov
sbb
clc
pop
sub
jmp
or
fldenv
mov
faddl
repnz
fs
and
fwait
jo
jge
in
aam
rcr
add
jl
das
xor
lahf
stos
lret
movsb
int
ret
ds
adc
adcl
dec
adc
fwait
lods
push
pop
inc
jnp
dec
xor
inc
pop
in
mov
test
iret
mov
sti
cs
mov
xchg
push
or
ja
imul
ds
jo
xchg
and
push
jae
idivb
mov
dec
daa
adc
stc
jle
xor
add
pusha
rol
movsb
cli
or
nop
imul
mov
mov
scas
dec
adc
test
cmpsl
jno
test
ja
ret
addl
arpl
mov
in
les
rcrb
repnz
aas
cmp
test
push
enter
xor
ret
dec
or
in
mov
and
xor
hlt
arpl
push
mov
inc
mov
fsubl
mov
and
les
imul
std
adc
ret
imull
dec
stos
adc
xor
aaa
lret
js
cmp
adc
int3
add
jp
jnp
enter
repnz
sbb
cmpsb
cmpsl
inc
lret
mov
xor
movsl
enter
out
pslld
mov
es
inc
into
mov
scas
xor
sub
adc
mov
jo
sub
int3
and
and
lret
mov
cmp
xchg
lods
xor
inc
push
push
fsts
stc
ljmp
sub
int3
adc
and
cmp
inc
sub
outsl
std
lock
and
mov
xor
jne
pop
mov
repnz
mov
and
dec
faddp
push
jmp
shll
test
cmp
xchg
xchg
repz
xchg
rorl
sub
lds
cli
test
adc
mov
cmpsb
les
mov
sub
mov
dec
lock
inc
lret
pop
xor
scas
push
popf
inc
dec
lea
pop
xorl
cmp
dec
inc
lock
in
int3
loope
sti
mov
call
and
mov
repz
cltd
popf
nop
js
mov
test
sbb
inc
inc
lods
cmp
ret
add
push
in
inc
fisubrl
sub
sbb
jecxz
xlat
add
pop
cltd
push
mov
in
pushf
dec
push
dec
test
into
cltd
xor
mov
dec
sub
cld
cmp
lret
inc
xchg
shll
les
movb
test
cmp
cmp
iret
adc
daa
xchg
movsb
mov
sti
lods
iret
arpl
in
adc
or
rep
mov
adc
cwtl
jp
repz
fidivrl
cmp
mov
sub
xchg
dec
and
nop
sbb
int
mov
push
cmp
sub
popa
push
subb
adc
lods
loopne
leave
xor
add
push
jbe
pop
push
stos
mov
or
or
mov
gs
loop
mov
lock
fmulp
push
xor
dec
pop
xor
and
push
pop
sub
in
stos
inc
sub
insb
movsl
xchg
ja
mov
rol
ja
out
push
lods
mov
pop
sbb
mov
lea
and
cmp
faddl
dec
add
imul
scas
inc
mov
mov
cmpb
stc
jb
mov
scas
or
fs
mov
jecxz
test
mov
ds
push
test
xchg
pop
sub
dec
and
lock
repnz
push
push
adcl
jns
imul
test
lock
and
stos
inc
lahf
xchg
hlt
leave
cld
dec
imul
cwtl
cs
fistl
push
xchg
aaa
xor
push
pop
mov
mov
bnd
pop
pop
xor
ret
vshufps
fwait
cmp
mov
aam
xor
xor
adc
pop
pop
cmpsb
xor
mov
sarl
test
test
iret
int3
inc
dec
mov
shll
mov
xchg
pop
rclb
rolb
inc
inc
sub
into
inc
mov
pop
in
xchg
mov
xchg
stos
popa
xlat
or
dec
xor
out
jae
xchg
hlt
and
cmpsl
data16
adc
dec
inc
lea
xchg
lret
cld
sub
in
adc
xor
jmp
mov
shl
divb
sahf
imul
sbb
mov
push
jecxz
shlb
push
jle
out
fisubl
loope
sbb
pop
xor
sbb
lods
aaa
push
nop
int
cwtl
outsb
cmp
cmp
cmp
push
pop
and
test
imul
dec
push
sbb
push
adc
lret
bound
xchg
shlb
adc
or
cmp
lcall
addr16
outsb
sbbl
adc
aad
sbbb
out
gs
outsb
icebp
dec
mov
pop
ret
xchg
xor
mov
and
sarl
cltd
dec
rcl
cmp
loopne
repnz
xchg
stc
nop
dec
mov
sbb
mov
jbe
push
add
mov
faddl
inc
shlb
push
je
pop
cmp
add
pop
lock
inc
jmp
sahf
inc
cmp
testb
add
sbb
inc
jmp
cmp
cmp
sbb
adc
adc
inc
imulb
out
or
cmp
xchg
scas
popa
or
adc
into
sbb
dec
push
push
push
jg
scas
fidivs
push
sbb
jae
dec
xchg
in
lret
sbb
mov
shlb
gs
adc
inc
insb
push
inc
jp
mov
aaa
xchg
xchg
cmpsl
pushf
inc
mov
movsl
ret
imul
aad
lret
xor
cmp
enter
dec
xor
and
ljmp
scas
jnp
xor
cmp
mov
mov
sbb
int
jae
sbb
scas
fstpt
fmul
cmp
push
mov
push
or
cmp
pop
mov
jae
nop
sub
fistpll
data16
pop
ja
cwtl
sub
imul
adc
sub
cmp
mov
push
adc
dec
sti
imul
push
push
test
nop
jmp
mov
leave
xlat
cwtl
cmp
and
pop
jno
aas
jg
aad
in
sbbb
in
fistl
out
mov
ja
ret
jbe
xchg
loopne
mov
in
aaa
and
cmp
or
push
rcrl
je
add
jge
cmc
push
cmp
mov
pusha
adc
cmp
fxam
fcoms
inc
pop
jb
push
and
push
enter
pop
mov
push
add
xchg
dec
das
aad
das
mov
icebp
fnstenv
pusha
pop
repz
mov
xchg
xor
xchg
inc
pop
pop
xchg
mov
test
fildl
xor
pop
test
nop
jecxz
and
adc
lds
pop
aam
mov
fstp
mov
adc
insl
push
iret
mov
aad
xchg
sbb
rcrb
rolb
xchg
adc
lret
add
enter
pop
push
sub
jmp
cmp
xor
lods
test
dec
mov
outsl
and
out
xchg
add
xor
sbb
int3
icebp
pushf
push
xor
jg
out
cmp
test
cltd
es
outsl
cwtl
add
xor
xor
icebp
sbb
pop
scas
in
push
out
jl
push
scas
mov
stos
iret
sub
gs
roll
add
stc
out
mov
addr16
cmp
add
mov
test
stos
pop
inc
movsb
and
out
xchg
stos
adc
hlt
out
notb
sub
push
mov
or
push
repnz
xchg
or
les
xchg
cli
and
into
popa
or
and
shrl
jb
out
ficoms
ss
nop
inc
leave
jnp
shl
sbbb
push
stos
cmpsl
pop
jp
pop
add
mov
sub
and
lahf
outsl
xchg
pop
mov
push
hlt
sub
xchg
loop
je
js,pn
and
ret
stos
add
addl
cs
xor
int
cmp
aam
inc
imul
call
pusha
xorb
jo
pop
inc
inc
push
or
push
pop
int
xor
sbb
inc
cmp
xchg
repz
es
adc
btr
mov
scas
adc
push
mov
mov
inc
imul
imul
push
data16
jnp
mov
test
cltd
cmp
loopne
add
sbb
xchg
or
insl
mov
mov
mov
sti
push
das
pop
push
mov
push
shl
jecxz
jle,pn
add
jmp
in
repnz
clc
jge
repz
jnp
push
pop
jae
xchg
pop
jmp
iret
daa
cmc
cmp
into
imul
std
hlt
outsl
push
mov
and
xchg
xchg
mov
fiadds
sahf
adc
sub
out
lret
inc
mov
pusha
mov
ljmp
cs
mov
xchg
pop
call
jle
xchg
jns
inc
pusha
out
adc
xor
xchg
mov
fisttpll
mov
sti
mov
les
cmpl
shlb
sbb
cli
jl
testb
dec
ret
test
icebp
pop
xchg
add
or
cmpsb
in
adc
or
cmpsb
xor
jle
push
out
lret
lock
data16
rorl
sbb
inc
shrl
xchg
pop
and
pop
ja
fcomi
jae
rcll
ss
cmpsl
xchg
xchg
out
jne
adc
xchg
adc
je
xchg
testb
lret
mov
enter
mov
dec
cmp
xor
out
jbe
xchg
lods
jg
outsb
arpl
push
adcb
mov
xor
jle
fisttps
and
or
push
je
mov
add
sub
outsl
sbb
sbb
cmp
sbb
dec
dec
arpl
pop
lret
xchg
rorl
mov
mov
mov
inc
lds
gs
fwait
sub
jnp
jmp
push
and
fs
inc
clc
add
push
popf
push
add
push
aaa
mov
popa
outsl
push
pop
inc
xchg
or
mov
in
pop
in
scas
pop
adc
enter
scas
add
push
popa
dec
adcb
pushf
jp
loope
out
mov
out
ljmp
je
pusha
lods
out
jnp
int
cmp
mov
orb
pushf
out
mov
push
into
xchg
sti
fdivrl
mov
mov
jae
mov
xchg
in
ret
imul
shrb
cld
sbb
jg
cmpsl
ret
testl
or
insl
adc
inc
inc
mov
push
xchg
dec
aas
daa
or
or
lret
dec
adc
cmp
xchg
cmp
mov
pop
mov
mov
jg
into
test
call
repz
push
scas
daa
inc
mov
sbb
mov
dec
int3
aas
xchg
push
sbb
mov
xor
popf
pusha
jg
jbe
pop
jae
mov
movsb
stc
roll
in
jns
mov
push
sti
movsl
and
pop
cmp
cld
pop
cmpsb
scas
hlt
into
lcall
arpl
or
iret
inc
pop
pop
push
stc
cmpsl
mov
lret
and
clc
inc
mov
xchg
fsubrl
mov
fildl
lahf
lds
mov
xlat
sbb
testl
adc
outsb
add
jae
in
jo
adc
pop
fsubs
lahf
inc
lds
aad
xor
out
jo
mov
scas
daa
pop
rclb
stc
loopne
inc
sub
dec
js
add
xor
cmpsl
scas
xchg
mov
add
xor
and
dec
sub
cld
xchg
add
cmpsl
and
sub
test
and
xor
adc
adc
add
aaa
fldcw
in
sbb
hlt
lods
js
popf
idiv
sub
lods
sbb
mov
aas
and
addb
dec
inc
xchg
iret
inc
lret
sub
adc
pusha
mov
mov
out
out
sti
jge
add
sbb
pop
jo
xchg
or
in
stos
add
adc
fsin
mov
ds
negb
mov
ss
sbb
pop
mov
mov
test
cld
sbb
sbb
rcrb
jbe
popa
shll
sahf
xor
scas
scas
cltd
or
mov
fnsave
orl
jecxz
std
fbld
sbb
xchg
int3
adc
sbb
jo
data16
lods
ficoml
cmp
sbb
data16
fxch
stc
mov
cmp
loopne
xchg
ficoms
pop
iret
dec
and
fcomps
mov
dec
rcr
sbb
aad
popf
ja
dec
int3
jge
in
mov
xor
dec
pusha
lahf
or
mov
cmp
sbb
and
data16
jg
adc
data16
dec
mov
dec
mov
aam
movl
int3
fdivrs
sbb
push
xchg
xor
dec
stos
or
into
lock
jno
lcall
cmp
mov
dec
dec
push
mov
outsl
xor
out
jp
cltd
aas
jmp
repnz
xchg
push
sub
mov
sbb
out
sbb
pusha
in
cmp
ss
out
push
fdivs
adc
mov
loop
xor
push
andl
pop
mov
push
xchg
pop
inc
mov
sbb
test
adcl
mov
lret
xchg
stos
and
je
jns
pop
or
adc
push
xchg
jecxz
add
inc
ja
call
pop
push
pop
neg
or
pop
pop
inc
inc
fwait
fs
mov
mov
dec
or
enter
mov
sub
push
jns
pushf
loop
adc
xchg
sub
je
iret
nopl
mov
xor
mov
xchg
mov
adc
and
or
cmp
xchg
jp
jecxz
jecxz
movsl
adc
loopne
cmp
outsb
fldl
and
loope
stos
in
popa
sub
dec
sub
jecxz
inc
and
lcall
add
adc
test
pop
dec
push
xor
mov
push
mov
xor
std
jge
push
arpl
clc
daa
push
adc
aam
or
cmp
and
cmp
jae
mov
xorb
shrl
ret
dec
gs
mov
insb
add
addr16
sub
sbb
sahf
adc
daa
out
or
repz
loop
mov
mov
add
add
mov
inc
cmp
repz
insl
cmp
mov
mov
jl
adc
ret
jne
std
lcall
scas
vcvtps2dq
sbb
sub
hlt
add
stc
jnp
ss
inc
push
subl
cmp
icebp
sbb
in
mov
lock
xchg
repz
sbb
rolb
or
icebp
int3
xchg
sub
jae
mov
addl
fcomp
push
mov
lods
mov
mov
fisubs
in
dec
mov
pop
icebp
pusha
dec
stos
jb
rol
insl
pop
sub
inc
je
xchg
aaa
jmp
mov
inc
mov
in
mov
mov
pop
dec
xchg
rorl
inc
xchg
cmp
les
int
dec
lret
push
xchg
cmpsl
jmp
xchg
mov
push
xchg
jp
inc
sbb
pop
sub
add
js
jb
push
add
stos
mov
pop
and
xor
fdivrl
sbb
mov
pop
pop
sahf
call
sahf
lahf
das
mov
leave
aas
popf
mov
idivl
xor
outsl
rclb
test
test
out
lea
xor
push
push
test
push
jae
push
sub
pop
or
notb
scas
ret
out
xchg
pop
xchg
std
push
jnp
cmp
mov
dec
cmpsb
or
outsl
mov
jns
jnp
stos
lock
sub
cmpsl
int3
push
sub
fldt
iret
in
sbb
out
mov
in
pop
jl
loop
notb
push
lahf
ss
push
int3
sub
mov
arpl
testb
sbb
inc
fcomps
dec
inc
loop
pop
in
pop
push
pushf
xorb
xor
cmp
pop
ljmp
fisubl
mov
xchg
push
les
adc
mov
or
inc
or
xor
cmc
movsl
fistps
cltd
adc
jg
int3
jae
fdivrs
cmpsb
pop
outsb
pushf
stos
mov
mov
xchg
jae
cs
and
out
pop
lahf
int3
or
mov
xor
repnz
outsb
andl
xchg
mov
stos
xchg
push
adc
fimuls
sbb
scas
sbb
clc
stc
sti
mov
insl
cmp
mulb
pop
mul
and
inc
jmp
inc
and
and
sub
addb
test
addb
jns
outsl
pop
inc
ja
xchg
sahf
adc
mov
sbb
add
ljmp
insl
js
fs
test
aas
test
fimull
icebp
es
mov
push
loopne
out
pop
adc
shr
xor
fiaddl
sub
leave
push
pop
xor
pop
les
lods
jg
rcrb
cmp
ret
iret
sub
pop
pushf
gs
daa
arpl
adc
cmp
add
test
mov
pop
iret
inc
jne
push
out
rcl
mov
mov
ljmp
adc
jbe
imul
jae
das
fldenv
pushf
incl
aas
cmpsl
aas
fcoms
arpl
lahf
xor
rolb
add
imul
pop
aas
dec
jle
aas
jns
push
add
lret
adc
sub
push
in
in
mov
add
pop
and
out
adc
dec
fsubl
mov
mov
cmpsl
int3
pusha
push
lock
xchg
and
dec
popf
pop
int
insl
lret
je
jmp
or
mov
push
movsl
jo
cmpl
mov
or
das
jmp
mov
inc
andl
add
in
pop
push
icebp
add
lods
test
mov
push
mov
pop
test
adc
or
scas
aaa
cmp
pop
jge
sbbl
hlt
pop
mov
add
pop
mov
cmp
lock
loopne
mov
lret
push
push
idivb
sarb
jmp
and
xchg
shll
lock
and
dec
fnsave
repz
int
stos
aaa
inc
adc
pushf
add
imul
dec
lret
xchg
stos
loope
sbb
sahf
scas
or
sub
add
add
lret
es
addr16
scas
loope
jb
or
mov
xor
and
push
scas
ds
repz
inc
mov
std
push
xchg
cmp
sub
sub
lods
pop
in
stos
sbb
fcmovu
jae
add
ljmp
push
mov
iret
push
cli
divb
icebp
adc
out
dec
lcall
stc
cmp
idivb
push
movsb
push
enter
add
stc
mov
mov
and
jge
ja
pop
sub
sti
sbb
repz
js
aas
mov
sub
lods
movsb
movsb
and
test
pop
pop
mov
jns
inc
dec
mov
pushf
jb
sbb
cltd
push
ljmp
or
mov
test
lods
jb
cmc
cld
fst
scas
mov
push
mov
sbb
xchg
js
push
movsl
sbb
lea
push
pop
xlat
sbb
jae
lods
dec
orl
and
test
push
jb
insb
push
dec
push
lahf
mov
jno
lods
enter
xchg
out
aad
push
xor
mov
popa
mov
nop
mov
inc
fmull
sub
pop
test
insl
sub
pop
mov
mov
and
pop
lcall
jl
push
adc
pop
std
or
lcall
int3
rolb
adc
mul
push
jl
fidivs
lds
mov
mov
pop
cli
sub
add
xchg
sub
fstl
out
sub
pop
icebp
bound
add
mov
mul
or
sbb
inc
push
xor
lcall
pop
das
aam
xlat
push
pop
in
clc
xchg
adc
xchg
popf
and
ljmp
push
inc
into
jp
and
fcmovne
loop
mov
sub
add
ja
fisubs
xchg
fldl
fsubrs
add
pop
add
lret
repnz
mov
rorb
mov
testb
xor
and
mov
js
lahf
sub
jecxz
cli
stos
inc
in
cmp
bnd
jnp
jl
lock
mov
jmp
adc
add
push
fdivrl
or
xor
and
jle
pop
imul
lods
sub
outsb
scas
fisubs
idiv
shrb
jns
xchg
dec
push
cmp
push
adc
and
or
dec
dec
nop
dec
ja
dec
addr16
sbb
out
popl
mov
inc
cwtl
add
inc
add
mov
mov
sub
add
push
nop
adc
push
andl
pop
pop
jbe
pop
dec
cmp
cs
mov
xchg
pop
stc
sbb
or
pop
lods
mov
pop
push
and
cmp
iret
push
dec
outsl
cltd
hlt
sbb
test
jnp
xor
insb
adcl
cmc
subb
mov
sbb
outsl
and
adc
adc
mov
jg
fwait
jo
adc
pop
in
mov
add
jg
inc
scas
mov
jmp
loop
imul
cmp
adc
fstps
add
push
je
gs
mov
clc
sub
pop
inc
sbb
arpl
or
gs
sub
clc
dec
xor
sub
push
add
repz
jbe
imul
popa
dec
jnp
dec
ret
lock
dec
dec
popl
sub
je
roll
pop
popl
mov
sub
ret
test
hlt
int3
and
dec
mulb
shlb
cwtl
pop
scas
or
xchg
mov
push
sub
les
faddp
xor
jl
xchg
jge
mov
mov
arpl
xor
inc
jo
repnz
mov
int
orb
ret
sub
mov
xor
mov
pop
jne
jnp
shlb
push
push
inc
sub
aaa
or
mov
gs
insb
fucomp
ror
inc
inc
sub
sarb
jp
inc
jne
xor
adc
add
inc
sub
xlat
cmp
adc
xor
pusha
jl
xchg
jmp
imul
xor
sbb
xchg
int3
je
fldenv
cmpsb
or
fnstsw
std
scas
xchg
daa
dec
xchg
cwtl
sub
cmpsb
mov
popf
pop
sub
pop
mov
mov
xor
movsb
pop
scas
fsubs
loop
push
mov
and
mov
mov
movsb
je
lock
sub
mov
cmp
jmp
push
out
pop
jg
mov
sti
ds
cli
imulb
push
jmp
std
je
cltd
mov
outsb
insb
jo
pop
mov
lcall
jmp
pop
jecxz
shll
sub
rorl
hlt
mov
les
sub
pop
mov
arpl
daa
loop
push
jns
xchg
jmp
jno
inc
mov
ja
mov
pop
pop
pop
cmc
add
aas
fisubl
insl
mov
xchg
sub
cmp
mov
pop
jo
push
and
xor
sub
push
mov
pushf
xor
dec
xlat
pusha
out
inc
in
xchg
mov
sbb
bound
pop
std
sbbl
fisttpll
mov
xor
mov
aad
add
scas
jp
icebp
cli
mov
sbb
loope
cmp
xchg
pop
sbb
test
push
inc
pusha
xor
in
jae
xor
pusha
fwait
sub
shl
push
mov
lods
pop
loop
xor
movsb
pop
or
fsqrt
roll
mov
insl
loop
leave
lret
aas
pause
ds
jl
sub
mov
push
dec
dec
cmp
and
dec
jl
mov
icebp
pop
imul
xor
mov
ds
xchg
xlat
cs
sub
jge
jns
scas
fsubr
lea
fistps
in
lds
sub
pushf
cmp
mov
mov
test
shrl
test
in
jo
push
rolb
stos
xchg
in
outsl
test
or
fimull
movsl
cmpsb
icebp
in
lret
mov
and
and
sti
enter
xchg
mov
je
sub
push
int3
dec
loope
xor
and
adc
mov
xor
mov
push
test
adc
cmpsb
into
fsubr
sbb
inc
jo
xchg
sbb
mov
fwait
jo
jmp
sub
sub
inc
pop
in
xchg
ret
imul
sub
mov
or
sbb
xchg
es
loope
ss
xchg
mov
adc
add
fstpl
shr
mov
imul
and
add
jae
adc
inc
add
add
lret
cmp
negb
cld
inc
ret
inc
out
sbbl
jmp
xor
or
mov
es
cmp
ss
dec
bound
imul
mov
adc
outsb
shrl
xchg
lds
mov
cmp
ds
iret
dec
outsb
lret
popa
or
add
jmp
sbb
sbb
je
pop
movsb
jmp
push
outsb
int
test
inc
es
out
add
and
int3
dec
inc
add
or
iret
jge
daa
fs
mov
mov
out
ret
pushf
push
ficoml
out
sbb
jbe
loopne
mov
lea
jae
sub
inc
mov
imul
lds
test
adc
xchg
iret
test
add
ret
std
fiaddl
mov
movsl
push
lret
xchg
iret
daa
call
mov
iret
pop
fsubs
sub
dec
fsubrl
imul
mov
ja
and
repz
push
mov
out
push
mov
mov
lahf
add
imul
xor
jl
fwait
dec
popf
loopne
fsubs
sbb
ds
push
stc
daa
xor
dec
pop
in
jbe
repz
adc
push
xor
pop
fsubs
test
repnz
ret
push
idivb
pop
cmp
hlt
and
jns
and
jns
dec
out
ret
xor
push
fs
out
dec
push
pushw
test
dec
test
cmpsl
pop
pop
mov
pop
inc
std
into
arpl
loop
inc
push
lea
aam
rcll
mov
or
dec
pop
stc
mov
aam
pop
pushf
out
xorb
cs
mov
xchg
push
fnstcw
loop
mov
jle
push
jl
xchg
jg
outsl
cltd
test
sbb
adc
xchg
popf
insb
cs
ja
and
inc
lods
xchg
cs
sub
push
ljmp
jne
xchg
xor
pop
lahf
andl
or
sbb
push
cmpl
push
xchg
mov
jmp
pop
subl
add
xchg
adc
aaa
xchg
sbb
dec
pushf
insl
rolb
xchg
repnz
lods
fs
rorb
fs
xchg
data16
lock
jno
xchg
roll
cmp
and
rcll
sub
xor
push
adc
ficompl
or
dec
sbb
push
fisubl
mov
dec
jecxz
sbb
fbstp
dec
cmp
aaa
pop
stos
cs
or
jo
rcll
stc
push
in
out
cltd
test
ja
mov
jb
jg
and
cmp
rorb
pop
daa
repz
loop
cmpsl
cmp
or
lods
xchg
icebp
orb
inc
out
mov
jbe
ret
mov
inc
kortestw
xor
push
xchg
hlt
push
enter
xor
inc
popa
jecxz
popf
fcmovnb
mov
pop
insb
add
jle
mov
jmp
nop
cmp
cs
not
inc
push
std
insl
stc
pop
jno
adc
popa
cltd
fnstcw
int3
fisubs
addl
imul
test
in
lret
mov
lods
add
pop
lcall
rclb
sbb
cltd
daa
xor
out
bound
test
cmpsl
mov
mov
shlb
negl
pop
and
inc
xor
ds
les
popa
daa
aam
mov
inc
mov
xor
cmpsl
in
sbb
xor
pop
fisttps
pop
das
call
xchg
insl
ret
imul
lret
inc
arpl
sahf
fwait
xchg
dec
in
lea
rclb
or
mov
cmp
dec
les
test
mov
push
subl
mov
scas
shll
icebp
push
mov
xor
ja
sub
adc
push
lods
adc
sbb
mov
shrl
mov
push
stos
repnz
xchg
bound
lods
dec
shll
or
lret
jae
shlb
dec
fnstsw
in
mov
enter
das
test
out
outsl
ja
negb
icebp
outsl
cmpsb
lret
jb
movsb
in
xchg
repz
push
sbb
add
mov
cmp
pushf
push
adc
ret
or
lcall
pop
adc
ret
ljmp
xchg
or
dec
sbb
inc
hlt
mov
xor
out
xor
insb
dec
jb
push
pusha
in
mov
enter
mov
imul
inc
cmc
push
push
pop
pop
or
xor
pusha
repz
mov
je
es
out
daa
dec
jns
and
repnz
mov
and
push
push
cmp
xor
imul
xchg
mov
imul
inc
mov
jns
outsb
inc
and
sub
lock
push
xor
fchs
or
imul
jns
mov
popf
test
cmpl
test
fstp
std
sub
call
bound
adcb
dec
outsb
sub
dec
mov
in
lret
add
in
pop
or
insl
sahf
lods
loope
xor
ljmp
addl
lea
fwait
stc
outsb
add
jnp
adc
xorl
cmpsb
xor
inc
cmc
mov
loope
scas
add
xor
pop
add
jg
test
jecxz
pop
repz
mov
sub
push
cli
nop
lahf
loope
movsl
or
mov
push
pop
ss
negl
jmp
mov
jo
jp
push
sbb
cmp
aam
jo
inc
addl
stc
push
pop
pop
and
xchg
in
into
inc
mov
and
popa
adc
scas
inc
adc
sbb
addr16
loope
mov
test
dec
cs
into
inc
fimuls
jnp
test
cmc
and
mov
mov
and
subb
jno
mull
mov
test
insb
fsubrl
sbb
fldcw
es
arpl
adc
in
int
int3
add
xor
sbb
int
and
sbb
lahf
out
fiaddl
dec
fwait
xchg
cltd
ljmp
mov
cmc
and
in
pop
jne
add
aam
fcoms
mov
mov
loop
jbe
in
sbbb
in
inc
shl
push
xchg
or
in
dec
repz
mov
adc
mov
pop
test
std
popa
mov
in
jnp
fsubl
stc
dec
not
dec
punpckhbw
in
push
add
jmp
sbb
cmp
repnz
les
test
push
xor
mov
sbb
js
out
mov
mov
lds
sub
mov
cmc
clc
ja
cmp
fs
or
movb
sub
cs
shll
pop
or
xor
fs
cmp
jg
pcmpgtd
lock
cmp
jb
add
pusha
ja
ret
pop
leave
daa
cmp
jae
push
int
enter
xor
insb
js
decl
cmp
pop
popa
inc
or
insb
and
or
and
xchg
jge
cmp
ds
je
shl
mov
jp
push
sub
jge
xchg
jg
push
pop
cwtl
xorl
int
and
push
sbb
jg
add
fs
je
add
pop
cmp
outsl
lahf
mov
push
xchg
mov
push
bound
insl
mov
ror
jmp
stos
cmpsb
in
repz
fnstenv
jo
cltd
or
adc
and
sahf
sub
push
fimull
icebp
divl
mov
jae
test
stos
pop
rorb
mov
inc
dec
mov
add
mov
xor
mov
pop
inc
pop
add
jb
pop
in
xchg
jl
repz
add
sti
aas
adc
push
scas
sub
sbb
sub
mov
fnstenv
fnstcw
imul
sub
test
mov
aad
sbb
out
test
imul
cs
roll
cmp
adc
pop
lret
add
inc
js
xchg
add
push
aad
fstpl
jge
leave
xchg
adc
in
out
shr
jp
in
mov
jnp
and
xchg
mov
cmpsb
int3
es
and
data16
sub
enter
in
jns
sub
jae
rcl
mov
lahf
xrelease
in
addb
or
mov
pop
pop
pop
loope
sub
mov
test
lods
into
sbb
cld
pusha
or
pushf
dec
cmp
pop
push
push
fabs
iret
ret
sub
loop
adc
pop
fimull
psrlq
imul
sub
scas
mov
dec
lods
dec
ret
hlt
cwtl
loop
mov
cmp
dec
mov
or
pusha
push
scas
lcall
add
aaa
bound
negb
pop
mov
mov
jl
jae
addr16
repnz
je
das
push
sbb
dec
test
cmc
or
dec
push
dec
pop
fdivrs
mov
push
xor
adc
out
dec
pop
pop
fstpl
add
cmpsb
xor
insb
enter
aaa
and
cwtl
or
lea
call
xlat
imul
mov
and
xchg
es
loopne
jl
inc
fstl
int3
pop
and
add
das
cmp
lods
jle
jp
ljmp
addr16
mov
fwait
sub
rolb
movl
inc
mov
adc
sub
leave
ljmp
aam
lahf
push
outsb
mov
dec
cwtl
les
shr
loope
loop
test
addl
nop
push
das
hlt
cmp
ret
jmp
add
movsl
mov
mov
iret
inc
dec
bnd
and
das
mov
idivl
cs
xor
test
push
aad
push
gs
lds
xorb
mov
cs
sti
dec
loope
pop
jmp
fistps
mov
in
push
mov
in
add
sahf
fs
push
cmp
cmp
jo
and
push
pop
sub
xor
add
mov
inc
mov
scas
je
loope
mov
stc
lods
out
push
jmp
cmpsl
pusha
push
in
cmpsb
mov
gs
push
pop
and
lret
fcmovb
mov
hlt
fldcw
fistpl
xor
cli
frstor
popa
add
push
add
mov
leave
insl
jno
add
cmp
lods
lahf
inc
ficoms
sbb
and
test
stos
mov
and
adc
push
lret
cltd
sub
popf
mov
data16
imul
xor
sub
leave
les
mov
add
or
dec
test
lret
pop
out
bound
sub
sub
shlb
xor
jne
add
dec
or
outsl
subb
xchg
leave
adc
divb
xchg
or
push
aad
and
push
stos
fidivl
xor
cmp
imul
nop
pop
jbe
mov
aas
int3
mov
cmp
dec
cmp
into
or
mov
test
pushf
aas
fcoml
mov
sub
out
adc
dec
mov
js
sub
popa
or
jecxz
push
and
mov
addl
push
sub
dec
jp
or
ss
insb
jl
jecxz
xor
rclb
out
and
mov
cmovge
dec
pop
add
add
popa
test
aas
inc
fmull
xor
mov
inc
sbb
dec
iret
stos
push
outsb
in
xor
bound
xlat
ret
sbbb
imul
addr16
sub
lret
insl
mov
adc
sub
rorb
cwtl
push
push
mov
dec
pop
stos
pushf
lods
fs
push
fs
das
sub
and
xchg
lcall
cmp
int3
xchg
in
bound
pop
idivb
xor
aad
repz
idivb
jg
mov
test
sub
and
mov
test
add
mov
sbb
pusha
pop
add
int
xchg
push
movsl
sahf
mov
mov
pinsrw
decb
mov
and
testl
mov
mov
inc
sub
jge
mov
repz
mov
in
mov
les
lahf
cmp
pop
mov
lock
repz
filds
ljmp
dec
jbe
imulb
das
jmp
mov
testb
add
jmp
fisubs
inc
lahf
outsl
push
repnz
cmovae
aam
mov
fs
sbb
mov
and
aaa
mov
out
sti
dec
iret
imul
in
out
fnsave
dec
pop
mov
roll
xor
lea
repnz
xchg
in
xlat
lods
xchg
mov
or
add
daa
lret
insb
mov
lcall
adc
sbb
rorl
test
push
inc
fwait
xchg
faddl
es
inc
movsb
lret
add
insl
mov
out
mov
adc
enter
mov
push
xchg
xchg
xchg
pop
or
jns
shrb
sbb
push
clc
mov
sub
flds
inc
cwtl
das
out
js
sbb
xorl
movsl
das
out
jecxz
ljmp
roll
repz
push
pop
shlb
rcrb
daa
rcr
mov
icebp
dec
mov
and
dec
mov
jb
imul
inc
mov
cmp
int
inc
dec
push
fsubs
stos
les
ret
lret
xor
cmpsl
insl
add
jno
insb
insb
lret
jp
jns
cs
das
out
adc
std
lock
pop
fdivrs
nop
push
shlb
shl
aam
mov
testl
mov
push
jmp
ficompl
outsl
xchg
mov
ljmp
adcb
mov
xchg
shl
dec
cmc
dec
in
xor
aad
andl
mov
loope
repz
xchg
inc
divb
dec
icebp
jns
insb
pop
pop
mov
out
push
push
es
xchg
in
pop
int3
sub
dec
cmp
stc
mov
sbbl
mov
gs
xor
pop
outsl
push
ds
mov
sub
mov
ret
adc
test
or
mov
mov
lahf
or
xchg
mov
fistpll
or
in
adc
xchg
mov
cmp
mov
pop
inc
push
arpl
stos
mov
fucom
adc
and
std
insb
sbb
mov
test
mov
leave
test
jmp
std
cltd
daa
mov
lcall
inc
cli
sbb
mov
jb
inc
add
mov
jle
add
int3
movb
or
aam
dec
mov
aaa
insl
cltd
push
data16
jo
scas
mov
pusha
mov
enter
aam
jbe
rcrb
jmp
rorb
pop
jecxz
xchg
aaa
push
aaa
adc
lret
or
arpl
scas
and
in
jae
mov
cmp
popa
lahf
hlt
ljmp
dec
test
fidivrs
movsb
jmp
add
movsl
and
or
xor
mov
xchg
shll
dec
aam
mov
dec
pop
aam
jl
adc
fisubrl
sub
dec
es
stos
mov
and
gs
leave
add
pop
ja
dec
test
jl
cmc
mov
xor
incb
lcall
lcall
test
negb
fadds
jle
pop
jge
add
jge
xor
or
sub
mov
xchg
in
lahf
xchg
jmp
mov
ds
mov
pop
addr16
rclb
mov
push
jmp
js
outsb
mov
mov
and
mov
jecxz
add
dec
ja
sub
xchg
push
add
out
aas
iret
test
cmp
mov
jbe
push
mull
fs
sbb
out
lods
in
cmpl
lods
add
mov
jbe
push
push
cwtl
lret
or
and
addr16
aas
add
add
iret
inc
pop
jp
out
xchg
and
mov
or
lret
popf
adc
imulb
sub
pop
cmp
mov
cmc
jne
xor
xor
es
cmpsl
mov
lahf
xlat
cltd
add
cmp
add
sbb
mov
and
sub
jns
dec
push
push
xor
js
mov
or
xor
mov
and
xchg
mov
cmp
pop
mov
clc
adc
test
out
aas
and
aam
fsubrs
dec
in
call
addr16
push
xorb
in
es
fdivs
popa
push
sar
mov
nop
sarl
dec
xchg
mov
into
mov
adc
sub
icebp
fnstsw
lcall
std
xor
mov
xor
cmpsb
add
pop
pop
xor
loop
mov
add
xor
pop
push
lock
fidivrl
mov
and
out
inc
fucomip
jmp
mov
insl
pop
clc
cmp
or
dec
or
stos
ret
mov
jg
adc
testl
imulb
push
sbb
sahf
fsubl
pop
sub
idivb
std
nop
int
sub
cmp
cmpsl
add
lcall
aaa
or
or
push
or
pop
movsl
jl
int3
jno
add
pop
nop
fwait
inc
clc
pop
fxch
xchg
jle
stos
mov
repnz
mov
iret
xor
fs
addr16
mov
jns
in
insl
out
shlb
hlt
adc
sub
dec
out
jmp
imul
mov
xchg
xchg
push
inc
lahf
xchg
sbb
jmp
sub
fwait
xor
cmp
mov
inc
aad
sub
loopne
nop
mov
push
push
daa
scas
add
dec
lahf
inc
mov
ljmp
rolb
fwait
and
push
cmp
xchg
das
inc
pop
test
dec
mov
out
xlat
icebp
xor
icebp
sti
addr16
sub
adc
and
loopne
cmpsb
int
pushf
xchg
xlat
push
subl
mov
add
inc
and
mov
mov
rcr
movsb
cmp
lods
test
sub
lret
test
scas
rcr
lods
add
mov
addr16
and
jb
add
jge
cmp
bound
sub
xchg
inc
add
cmpsb
lea
int3
iret
ficompl
out
dec
call
jge
daa
es
outsl
sarb
jns
xor
push
inc
cmpsb
jbe
cld
sbb
stc
aas
imul
andb
pop
cmpsb
xor
rcrl
xchg
xor
out
insb
js
pop
out
xor
pop
sub
adc
cltd
cwtl
mov
adc
jecxz
out
into
sub
jp
cmp
or
fstpt
mov
pop
push
in
sub
scas
dec
addr16
leave
mov
out
es
stos
ret
les
xchg
test
pop
mov
aaa
addr16
stos
adc
mov
in
mov
aas
pop
xchg
pusha
pop
leave
mov
inc
sbb
ret
sub
lahf
pop
xor
sbb
mov
ret
ljmp
sub
push
rorl
xchg
pop
ljmp
movsb
jae
pop
pushf
rcl
sti
jnp
add
leave
and
pop
jnp
pop
cmp
test
or
xor
pop
imul
dec
or
mov
jp
pop
mov
gs
jecxz
ds
sub
neg
inc
jp
out
xchg
icebp
adc
jno
repz
repz
cwtl
out
nop
pop
lret
loope
movsb
jae
mov
sub
cs
xor
add
dec
stos
lea
cmp
out
call
sub
jmp
idiv
call
rorb
sub
repz
push
add
sub
mov
dec
add
stos
xor
or
sub
in
in
sahf
in
imul
fildl
push
in
clc
pushf
jecxz
ret
insb
orl
imul
sarb
inc
loopne
movsl
mov
lds
js
inc
mov
jb
nop
in
out
cmpl
loopne
adc
insw
sbb
loope
insb
mov
out
test
sbb
push
jmp
or
cmp
fwait
imull
in
fs
jle
mov
outsl
imul
sbbb
push
jbe
addr16
mov
les
jbe
std
out
cmp
nop
aaa
add
imul
xlat
dec
and
loope
mov
mov
dec
lahf
xor
fsubrp
xor
cmp
mov
dec
xor
fdivr
add
jbe
andl
jb
punpcklbw
lock
pxor
cli
inc
add
scas
in
mov
dec
insl
outsb
jo
fsubrl
scas
ret
add
push
imul
das
sub
xchg
jmp
fs
mov
jno
loopne
ds
imull
xor
push
sub
js
jo
cmp
dec
test
and
hlt
mov
xor
popa
fisubrs
loopne
mov
mov
lods
insb
call
mov
add
mov
out
cltd
pop
mov
inc
jmp
pop
addb
in
mov
ss
and
adc
adc
mov
push
dec
add
scas
divb
pop
jbe
clc
add
lret
scas
fstpl
mov
jbe
inc
mov
in
mov
fists
test
xchg
pop
xchg
ja
orb
sub
jmp
add
push
ja
idivb
mov
movsb
push
push
out
inc
cmpsl
aad
mov
sbb
cltd
rcrb
std
pushf
or
adc
mov
fdivs
mov
dec
je
out
hlt
inc
test
push
mov
cmp
ljmp
pushf
shrb
jle
repnz
lcall
mov
and
and
push
test
aad
add
sub
xchg
xchg
in
mov
subl
nop
cli
mov
icebp
adcl
mov
and
inc
ja
pop
js
mov
ds
push
push
cld
addr16
loop
dec
push
mov
outsl
or
or
stos
add
int3
xchg
pop
jno
ss
push
out
mov
adc
or
sbb
test
cli
inc
out
dec
inc
pop
shl
lea
addl
and
call
add
fiadds
adc
nop
adc
jns
xor
aad
inc
idiv
inc
loopne
push
and
dec
adc
shlb
jbe
shl
jp
pop
xlat
mov
and
mov
xchg
mov
add
jmp
scas
int3
cmp
scas
fdivrs
jne
fwait
push
mov
adc
or
ja
dec
adc
out
sbbb
insl
jmp
inc
enter
mov
mov
jp
std
jb
rcll
test
mov
int
cs
fwait
movsb
hlt
lahf
pop
fidivrs
sbb
in
data16
rorl
cmp
ror
xchg
ret
pop
xchg
cmp
test
add
cvtps2pd
insl
out
ja
outsb
dec
pop
stos
mov
arpl
arpl
bound
mov
mov
cs
das
out
lret
arpl
popf
dec
enter
insb
inc
ret
add
inc
es
sarl
in
dec
orl
pop
pusha
push
inc
mov
iret
sbb
mov
out
and
jp
mov
inc
jmp
lds
div
out
lods
and
dec
imul
adc
mov
push
mov
and
pop
push
xor
lret
test
push
jne
and
stos
mov
add
mov
sbb
repz
push
add
dec
mov
add
fldenv
dec
enter
cwtl
roll
or
aad
adc
push
test
and
mov
popa
jbe
push
xchg
leave
les
sbb
mov
sti
ss
cmp
sarb
sub
xchg
adc
dec
aaa
pxor
cwtl
das
bound
or
into
xor
pushf
in
pop
or
xlat
xor
mov
dec
aad
in
cmc
out
push
das
sar
mov
sbb
stc
xor
fildll
gs
and
dec
jno
call
loopne
aaa
orl
jb
pop
aaa
xabort
dec
and
fsubs
jecxz
or
adc
mov
popf
aaa
mov
or
sbb
das
loope
test
pop
xor
inc
pop
das
adc
mov
xor
jmp
or
test
push
adcb
or
into
sbb
pop
cmp
mov
jge
mov
xchg
mov
or
and
das
sbb
dec
adc
stc
arpl
xchg
xchg
stos
or
xchg
lock
sbb
call
jb
sub
dec
in
fsubs
adc
fcomip
lock
std
scas
sub
ret
lahf
outsb
cltd
stc
push
jecxz
lods
out
cmpl
dec
mov
push
cmp
mov
in
cs
popf
sub
mov
adc
push
ja
xchg
pop
test
jl
insb
popf
dec
lahf
daa
sbb
cmp
jae
rcrl
push
cwtl
add
fmuls
jge
sti
roll
enter
imull
test
dec
xchg
nop
cmpsb
outsb
xor
mov
es
pushf
inc
lock
xchg
ljmp
adc
ja
sbb
test
and
mov
in
dec
je
or
ljmp
jbe
xor
xor
cs
dec
add
mov
shlb
fidivs
push
mov
fwait
jecxz
jbe
dec
fstps
pop
dec
iret
dec
out
imul
inc
xchg
cmpsl
cwtl
faddl
push
cmp
inc
xchg
pop
jle
lcall
mov
cli
pop
enter
add
sbb
or
adc
dec
not
xorb
mov
imul
scas
jns
das
sti
push
jp
push
add
fisttpll
movl
push
lods
pop
inc
pop
out
imul
es
test
fisttps
or
mov
loop
outsl
stc
push
xchg
mov
add
or
xor
mov
adc
or
cltd
jb,pt
jbe
pop
mov
jmp
push
add
mov
push
stc
pop
lahf
shr
insb
icebp
dec
or
add
iret
adc
loop
aad
cmpsb
xchg
push
adc
and
xchg
outsb
adc
mov
mov
add
sarl
in
lret
xchg
aas
rorb
dec
lods
mov
mov
cmp
adc
xor
sub
push
fsubrl
pop
bound
push
sahf
mov
inc
ss
leave
orl
and
sbb
fwait
ret
pushf
jecxz
cmp
push
jecxz
fsts
or
dec
fstps
mov
test
xchg
pop
jb
dec
jno
sub
or
sub
ret
js
repnz
pop
pop
into
clc
xchg
xor
sub
push
mov
xchg
push
or
xchg
in
out
sub
xor
int
add
jmp
lods
rcl
sbb
or
aad
adc
leave
push
jecxz
mov
pop
sub
jae
aas
mov
push
mov
fiaddl
mov
sbb
jns
out
xchg
imul
or
popf
sahf
or
dec
dec
mov
push
clc
pusha
int
lret
jns
cmp
pshufw
push
hlt
push
cmp
std
inc
pop
mov
js
inc
call
sar
out
scas
inc
jmp
fsubl
xorb
adc
jecxz
lahf
loopne
div
mov
and
les
daa
cmp
jg
inc
jns
push
rcrb
sbb
xchg
mov
sahf
push
mov
movsb
int3
mov
std
xchg
mov
lds
jo
ss
popf
loopne
mov
jae
jecxz
push
mov
mov
jp
jmp
shrb
xor
jno
shlb
scas
push
and
jmp
and
fisubrl
sbb
push
aas
cmp
insl
xchg
into
subb
mov
cmp
cltd
test
pop
add
xor
and
test
and
les
adc
mov
sbb
mov
add
std
les
mov
cs
ret
mov
dec
pop
jae
xchg
test
xchg
or
mov
cmp
sbb
jmp
js
cmp
xor
and
mov
dec
mov
jbe
sbb
shll
gs
cmp
call
arpl
inc
xor
fs
inc
or
push
adc
incb
jecxz
lcall
pop
enter
addr16
inc
mov
mov
rclb
test
ja
jle
es
mov
jne
adc
test
ljmp
mov
cvttps2pi
jnp
clc
mov
insb
cmp
mov
stos
fisttpll
hlt
push
mov
sbb
xchg
sbb
and
push
bound
jmp
mov
sbb
into
sub
sub
ja
rorb
sub
and
les
mov
pop
cli
cmc
vpunpcklqdq
aas
bound
lods
pop
in
icebp
or
xor
mov
and
rcr
cld
fs
fwait
popf
and
inc
jbe
lds
inc
push
or
ss
setb
movsl
mov
cmp
lahf
or
ficoml
into
fwait
bound
clc
add
call
xor
dec
xchg
adc
shlb
call
mov
addb
mov
and
dec
inc
pop
mov
mov
es
cs
jle
xchg
lea
mov
add
mov
jmp
cli
sbb
adc
iret
adc
dec
test
ljmp
dec
ja
add
pop
jns
xor
mov
mov
sub
sbb
js
add
in
add
mov
outsb
int
push
cld
arpl
and
jl
jae
or
divl
or
in
fiaddl
dec
xor
lret
mov
sbb
fdivl
push
mov
movsb
adc
stc
push
jp
scas
inc
insl
outsb
test
xor
lods
mov
or
add
dec
inc
push
lcall
ja
dec
xlat
add
mov
pop
fdiv
negl
in
sbb
ret
xor
in
pop
fisttpl
push
jecxz
inc
or
pop
stos
icebp
test
push
mov
mov
lcall
pop
mov
je
fnsave
addr16
push
imul
dec
inc
pop
jno
fisttpl
lods
adcb
fwait
mov
cmp
stc
incb
es
rcrb
jmp
fcoml
sbb
dec
orl
xchg
mov
fwait
inc
imul
fisubl
fwait
outsl
loope
pop
mov
lods
aaa
sbb
outsl
cmp
aas
rcl
mov
xor
adc
or
arpl
fstpt
dec
movsb
mov
mov
int3
mov
sbb
push
adc
fidivs
dec
xchg
hlt
sbb
test
sub
sub
cmc
sub
insb
test
mov
mov
sub
lods
xor
xchg
outsl
movsl
stos
mov
negl
pop
arpl
insb
mov
inc
xor
outsb
mov
popa
dec
scas
les
mov
adc
jnp
inc
xchg
sub
lcall
push
xchg
xchg
pop
das
push
mov
dec
push
or
mov
cmc
sbb
mov
mov
repnz
cwtl
xchg
and
aam
call
or
sbb
push
inc
adc
int
add
fistl
mov
mov
mov
int3
test
scas
pop
int
cmp
and
loope
adc
jl
aas
sub
mov
cmp
scas
js
iret
ljmp
pop
mov
sub
sbbl
jl
imul
nop
lds
inc
js
adcb
daa
jecxz
fists
je
lds
push
fcomi
push
push
pop
in
add
mov
test
fstpl
rcll
xor
dec
push
imul
mov
pop
mov
jg
loope
cli
loope
loopne
loopnew
imul
movsb
xchg
loop
test
scas
mov
sbb
cli
fwait
mov
rorb
sbbb
inc
push
lock
mov
fdivrl
into
lcall
lods
gs
jmp
pause
add
shr
cmpb
or
push
jg
xchg
adc
add
dec
stos
pop
mov
xor
arpl
loop
pushf
mov
inc
das
ss
or
daa
int3
rol
inc
lods
call
mov
push
or
add
xchg
or
test
inc
stos
popa
mov
and
out
sarl
mov
or
mov
xchg
cmp
dec
loope
jb
sub
mov
push
pop
lock
mov
xchg
stc
mov
and
jae
das
dec
mov
fwait
cwtl
xor
xor
sahf
out
mov
pop
fisttpll
mov
iret
in
fsts
xor
cmp
imul
jbe
jbe
push
inc
out
test
cmpsl
xchg
imul
mov
adc
push
xchg
icebp
shrl
and
and
xchg
adc
mov
repnz
fwait
mov
jl
lahf
cmp
lea
mov
bound
or
push
dec
mov
scas
insb
mov
cmp
pop
sbb
ret
inc
mov
sbb
in
cmp
xchg
out
imul
cld
cmp
fs
ja
pop
popf
js
cmc
cmp
mov
aaa
sbbl
add
repnz
jns
scas
pusha
lret
xchg
xchg
es
aas
sbb
push
std
xor
mov
dec
aam
pop
adc
sbb
stos
scas
lods
and
sbb
add
push
and
jl
cmp
data16
mov
xor
adc
jne
arpl
jge
xchg
imul
adc
dec
test
inc
push
xchg
push
jecxz
push
xchg
add
out
stos
arpl
aaa
ret
push
mov
les
sub
subb
test
das
or
cwtl
int3
jno
jg
mov
out
fs
sahf
or
add
adc
divl
into
sahf
inc
push
or
sub
test
rcll
jno
cmpsb
fdivl
cmp
movsl
xor
jo
das
sbb
mov
dec
push
lds
add
push
mov
subb
lods
sub
mov
jnp
xor
cwtl
inc
adc
addr16
out
jecxz
cwtl
clc
int3
loop
in
movb
sub
hlt
xchg
insl
cmp
or
insl
fcmovb
push
sbb
xor
pop
out
sub
xchg
push
mov
push
or
stos
call
add
ret
enter
divw
xor
repnz
and
adc
incb
push
aas
in
data16
lods
es
add
cmp
dec
pushl
cmovb
pusha
loopne
push
push
inc
add
sbbl
adc
out
push
fisttpll
mov
dec
out
cmp
push
mov
hlt
loop
imul
inc
lock
fwait
js
pusha
push
nop
repnz
mov
and
popa
and
mov
jp
xor
lds
decl
stos
scas
out
ds
test
test
cmpsl
imulb
push
mov
jo
outsb
rolb
aad
ss
cmp
cmpsl
sbb
mov
push
jne
stos
adc
cmp
add
inc
popa
ds
add
pop
mov
shll
icebp
lods
mov
push
dec
mov
add
jae
mov
mov
pop
jno
xchg
enter
xor
add
repnz
pop
dec
in
add
inc
and
sub
sbb
shrb
jg
ja
push
cld
jl
jg
sarl
out
ja
mov
cmp
mov
mov
sbbl
fidivrs
pushf
dec
in
push
je
icebp
mov
sbb
lock
je
fadd
sub
and
xor
push
inc
test
mov
pop
add
sbb
jb
je
stos
pop
cld
in
mov
sub
aad
or
andb
or
std
dec
mov
sub
mov
outsl
lret
pop
push
inc
cld
es
push
das
push
xchg
popf
ja
rclb
iret
or
xor
and
sbb
icebp
lds
addl
xor
lret
insb
cld
insl
cmp
pop
push
mov
in
arpl
push
popf
mov
push
clc
mov
inc
pop
sbb
mov
push
scas
jbe
mov
lcall
cmp
add
ret
pop
and
push
and
xchg
test
cmp
cmp
pop
mov
std
sbb
insb
xorb
in
test
dec
pop
imul
dec
mov
add
mov
sahf
je
bound
or
loop
push
push
stos
subb
into
adc
adc
mov
sbbb
jne,pn
lcall
adc
mov
inc
jecxz
incb
js
hlt
enter
and
dec
inc
mov
and
push
icebp
and
add
insl
mov
aam
loop
inc
xchg
and
add
jge
aam
or
add
jg
aam
movsb
sbb
lret
mov
add
jle
pop
fstl
ds
mov
scas
push
iret
sarb
scas
cmp
pop
andb
arpl
sti
or
or
ret
scas
sti
test
add
enter
dec
int3
xor
xor
jmp
call
pusha
addl
dec
mov
dec
cmc
or
xchg
and
mov
sbb
aam
cltd
cmp
or
mov
test
push
cmpsl
lcall
inc
adc
push
sarb
mov
outsl
mov
aam
test
add
inc
pop
scas
and
adc
pop
rcrl
pop
jb
outsb
mov
dec
xchg
mov
nopl
cmpb
dec
cmp
test
push
loopne
jbe
adc
jnp
mov
lods
lods
sub
dec
or
aaa
cmp
loope
inc
sub
stos
xchg
test
lods
shrb
stos
pusha
cmpsb
fdivl
lahf
mov
xchg
push
push
out
es
lret
mov
xor
aad
add
push
add
cmpb
aaa
sub
xchg
cld
and
pushf
in
xor
xchg
ljmp
xchg
sti
scas
insl
out
mov
js
pop
loopne
cmp
insb
addl
js
fwait
pop
pushl
in
inc
mov
mov
mov
mov
daa
sub
aaa
test
int
outsb
fwait
add
in
mov
cmpsl
inc
add
xchg
lahf
cmp
cwtl
xchg
push
out
sbb
mov
rorl
rcrb
lods
sub
mov
arpl
sbb
or
aaa
mov
mov
pop
out
loope
nop
jo
xchg
loopne
insb
or
lock
rorl
repnz
std
jbe
mov
repz
add
cmp
xchg
or
jecxz
mov
push
dec
mov
jg
fs
fistpl
dec
jae
jae
mov
test
inc
adc
rol
int3
rcrl
psubb
mov
mov
push
hlt
xchg
dec
dec
mov
mov
add
push
fld
adc
stos
loop
mov
sub
sub
imul
sub
repz
cmp
mulb
add
lds
insl
adc
mov
xchg
xor
cmp
cmp
cmp
out
and
dec
std
jmp
les
repz
adc
arpl
mov
push
push
insl
jecxz
jno
sar
call
int3
cmpsb
mov
mov
clc
or
add
fmuls
push
je
call
lds
fbld
nop
aad
xchg
inc
jnp
fwait
sub
mov
lcall
faddp
fimuls
dec
inc
jecxz
test
sbb
mov
lcall
das
sarl
push
mov
in
sti
jl
ret
in
fnsave
push
push
mov
xchg
cs
lods
adc
mov
inc
mov
cmp
pushl
mov
mov
xor
fcmove
sbb
pop
mulb
cmp
sbb
mov
int3
pop
jmp
sub
daa
jno
hlt
pop
inc
stos
jnp
mov
sahf
test
push
lods
jns
pop
sub
add
jle
pop
lea
xchg
or
sahf
jecxz
xchg
mov
jae
in
sbb
out
fistps
jmp
dec
movsb
mov
cmp
inc
adc
lret
aaa
movsl
push
sub
imul
or
or
adc
dec
lods
scas
clc
or
pop
inc
sbb
repnz
jp
pusha
test
es
fimuls
dec
fists
lock
mov
data16
inc
jl
jnp
imul
inc
mov
sub
add
pop
repz
mov
inc
test
je
mov
pop
mov
loopne
add
fucomi
inc
sub
ja
shrb
adc
lods
push
test
mov
lock
sahf
in
aaa
pushf
mov
cmp
das
aam
cmpsl
lcall
cmp
sub
push
cmp
movsb
loopne
imul
xchg
jecxz
ficoms
fwait
mov
xchg
fsubrp
mov
add
icebp
test
nop
sub
imul
pop
inc
mov
push
xor
filds
imul
lahf
jnp
in
adc
cltd
adc
fwait
aad
stc
adc
push
movsb
rorl
int3
stos
cs
dec
gs
cmpb
or
imul
pushf
or
sbb
xchg
arpl
push
mov
mov
and
imul
loop
jb
stc
sub
inc
aad
dec
lea
adc
decb
out
pop
int3
popf
push
and
inc
leave
push
das
lods
pop
mov
sub
into
in
in
pop
pop
test
or
shlb
push
pusha
sub
into
aaa
insl
out
pop
xchg
xchg
shrl
inc
out
ljmp
arpl
stos
loopne
mov
roll
popa
in
mov
xchg
add
fs
in
jnp
lea
leave
repz
pop
in
test
leave
push
push
cmpsl
add
pop
stos
aad
daa
data16
jbe
nopl
repnz
xchg
test
out
movsb
jnp
daa
pop
cmc
pop
add
test
and
mov
add
popa
pop
in
mov
dec
ss
jns
pop
mov
sub
clc
lret
cli
xor
in
pop
jb
pop
dec
mov
adc
inc
pop
pop
subb
aaa
mov
cltd
insl
bound
or
loopne
ror
aas
adc
xor
dec
jp
fsqrt
cmp
sbb
inc
rorl
mov
and
jecxz
cltd
adc
mov
jnp
enter
pop
in
xchg
std
decb
xor
pop
jmp
scas
lods
pop
cmp
roll
and
xor
adc
cmp
push
ret
fnstsw
out
xor
sbb
imul
push
cwtl
mov
inc
push
add
push
xlat
and
adcb
loop
lahf
mov
pop
dec
pop
hlt
xor
mov
shlb
add
aaa
neg
cwtl
push
andl
inc
sbb
orb
inc
inc
mov
sbb
xor
mov
lcall
addr16
loope
jge
in
cmp
xchg
pushl
mov
push
vmovaps
sbb
sub
fwait
and
dec
sbb
add
into
sbb
sti
xchg
add
mov
mov
inc
xor
in
in
sub
push
pop
test
lods
push
pop
xchg
push
insl
xchg
xor
fnstcw
ds
lcall
jmp
mov
aaa
mov
push
and
xchg
add
test
data16
es
lods
out
movsl
xchg
push
or
mov
sbb
fdivrl
out
and
or
in
fidivl
inc
sub
sbb
mov
mov
shll
xchg
cld
and
cmpsl
jno
dec
adc
fcmovne
je
add
call
scas
subb
ds
loope
xor
pop
push
loopne
add
mov
mov
mov
dec
sub
dec
dec
scas
or
push
push
inc
sahf
fsubs
cmpsl
cmp
into
add
mov
xchg
stos
mov
pop
xchg
stc
dec
mov
cltd
hlt
or
hlt
addl
insb
rcr
icebp
ss
negl
out
dec
mov
cmc
sub
sti
fdivl
add
cmp
mov
andb
cld
outsb
cmp
xor
and
push
inc
cli
icebp
xor
push
pop
dec
jle
mov
xchg
cmp
xor
arpl
push
xchg
push
shll
jno
dec
mov
sbbl
rcll
push
aam
cmp
dec
scas
vprotb
mov
enter
inc
mov
sub
sub
fists
add
aaa
aad
cmp
push
jle
adc
jae
les
fmulp
add
mov
adc
lods
push
out
ss
test
leave
fcoml
mov
int3
mov
xchg
cmp
ret
fcoms
aad
cs
adc
inc
ds
fwait
cmp
test
add
nop
in
dec
mov
mov
jne
jge
mov
test
movsb
and
mov
cmp
cmpsl
push
mov
adc
in
dec
insl
push
sbb
inc
data16
xchg
push
xor
xlat
dec
push
jne
xchg
popf
daa
out
add
aam
lahf
lret
andl
or
push
pop
jns
mov
int3
es
scas
cs
in
fnstcw
inc
jp
push
shrb
and
mov
adc
mov
hlt
vmread
into
xchg
cmc
or
xor
mov
ds
out
sbb
int3
dec
ret
ds
aaa
insb
scas
fldl
adc
xchg
mov
mov
movsl
xor
jno
adc
lahf
lcall
or
pop
cmpsl
rclb
das
jle
mov
pushl
andl
push
mov
test
adc
dec
cmp
gs
in
bswap
orb
aad
xchg
test
mov
icebp
dec
ret
inc
add
outsl
in
push
fistpl
pop
cmp
ds
sub
stos
fsub
movsb
or
inc
pushf
mov
mov
sub
adc
cmpsb
sub
sub
jns
pushl
sti
sub
jge
push
add
test
lcall
lea
fsubl
jo
mov
or
int
lea
mov
lea
lahf
pop
fiadds
je
popa
and
les
imul
aas
cld
daa
xlat
stos
ret
mov
add
push
add
mov
lds
adc
in
cmp
xor
jb
xlat
sahf
or
lret
mov
sbb
sbb
jae
hlt
movsl
sbb
icebp
rcrl
lret
sbb
out
mov
fmuls
je
dec
push
js
cmp
adc
cmp
mov
mov
sbb
scas
insb
out
hlt
dec
lret
shl
in
add
fdivs
stos
inc
loope
jecxz
dec
push
jge
push
sahf
dec
or
cs
dec
fmuls
enter
jge
pop
sbb
ret
pop
cltd
sbb
stc
cmpsb
xchg
inc
inc
add
xor
xchg
loope
jae
shrb
fistl
inc
or
dec
out
int3
imul
push
add
pusha
inc
mov
push
pop
pop
xchg
mov
inc
and
jp
jg
cs
mov
outsl
lea
pop
xor
ss
cmpsl
dec
mov
out
sub
iret
mov
ds
ret
push
cmc
lcall
ja
sbb
adc
mov
movl
xchg
and
movsb
mov
decb
mov
jle
test
dec
movsl
adcl
xor
movsl
or
repz
sub
cmp
js
pop
inc
lret
or
xchg
fwait
cmc
outsb
push
negb
and
lods
sub
inc
sbb
dec
mov
dec
gs
loopne
sahf
test
in
cmc
in
test
jbe
cltd
sbb
jmp
push
add
dec
lret
lret
scas
cmp
push
cmp
mov
fildll
cmpl
and
in
test
aaa
mov
pop
cwtl
aaa
or
sbb
jmp
movl
sbbl
movsl
nop
adc
inc
popf
adc
and
sar
adc
sbb
outsl
in
mov
mov
roll
repz
add
cmc
loop
sbb
xchg
movsl
sbb
push
mov
add
fiaddl
pop
in
jg
jmp
mov
xor
scas
sub
sbb
mov
mov
lds
fwait
sbb
push
dec
xor
pop
dec
push
fwait
lret
rclb
sbb
shll
lcall
lods
scas
stos
add
hlt
cld
roll
imul
mulb
mov
and
cmc
push
lret
xor
and
push
jg
pop
jo
ficomps
xlat
call
outsb
mov
rcl
lods
call
mov
sbb
cmp
fstp
fidivrl
repz
in
lret
mov
push
push
sahf
sahf
add
xor
in
fbld
data16
mov
pop
push
or
loop
mov
xor
jle
and
popa
lds
movsl
inc
jg
fadds
sbb
sub
cwtl
aas
dec
dec
cmp
aaa
test
mov
mov
popa
and
sti
sbb
xor
fdivrp
ja
ss
and
pop
inc
mov
mov
adc
sar
je
mov
nop
mov
mov
adc
jne
fidivrl
aas
mov
lock
cmpsl
inc
cld
mov
or
in
pop
mov
ret
push
adc
in
cli
ljmp
push
lods
in
xchg
sbb
mov
fimull
icebp
in
sub
jle
stos
push
leave
or
add
pop
add
les
into
fdivr
cli
mov
arpl
push
push
or
mov
lcall
xchg
enter
sbbl
sub
mov
jbe
mov
imul
scas
xor
jecxz
mov
push
lahf
fcoms
arpl
aas
lea
clts
dec
fcoml
sub
inc
stos
clc
pop
and
stos
sub
adc
std
cmpsl
xor
sti
pop
push
jne
inc
dec
adc
push
and
ret
arpl
movsb
or
out
ret
in
std
cmp
xlat
pop
jp
cmpsl
push
loopne
xor
cs
fwait
lods
fsubr
mov
test
pop
imul
fadds
xor
mov
gs
jbe
lods
xchg
cmp
je
lea
clc
xchg
icebp
das
lahf
mov
jbe
call
sbb
inc
lahf
sbb
and
jae
ret
aaa
jle
ja
mov
mov
xchg
fiadds
fmul
mov
mov
test
push
mov
lret
jmp
push
mov
push
rclb
jg
add
insl
mov
xchg
js
test
add
ss
xor
jecxz
xor
out
fistl
lds
pusha
mov
lret
popf
inc
out
mov
dec
sub
inc
xor
stos
imul
arpl
lcall
sahf
mov
std
xchg
sahf
and
xor
mov
jnp
enter
test
cmp
xor
mov
mov
cltd
lahf
lock
cmc
movsl
hlt
mov
mov
inc
push
inc
push
cld
lahf
int
js
mov
scas
jo
arpl
and
jle
dec
ja
mov
cmpsb
movsl
sti
and
push
xchg
out
cli
in
jl
movb
loope
mov
lret
push
xchg
jmp
movsb
push
add
imul
mov
rol
xchg
and
das
in
xor
shlb
sbb
mov
out
lods
stc
xorl
fisubrs
into
xchg
add
sbb
popa
loopne
jg
out
lret
sub
and
mov
jp
callw
lahf
pop
pop
mov
mov
or
test
jecxz
xor
imul
add
je
dec
jae
popf
mov
mov
outsl
int3
jb
xor
pop
ja
insb
fdivl
dec
test
js
scas
add
dec
jb
sbb
pop
lods
mov
push
fnsave
outsl
mov
xchg
and
sahf
sbb
andb
push
sbb
mov
mov
xor
xchg
dec
sti
call
inc
int3
xchg
push
mov
neg
clc
adc
sub
cmp
pop
push
es
out
lcall
dec
cld
cmp
mov
and
mov
stos
cmp
je
xchg
push
xchg
test
adc
lods
jno
dec
call
out
push
mov
enter
iret
loop
imulb
stos
push
add
sahf
cmove
or
pop
jnp
cmp
or
xchg
sbb
xor
dec
sbb
mov
mov
add
out
insl
sbb
test
arpl
leave
xchg
test
arpl
xchg
mov
jo
fdivs
iret
fcomps
mov
adc
cmp
sbb
pop
mov
sub
cmp
mov
and
sti
in
repnz
pop
jg
xorl
loop
dec
or
mov
repz
imul
aas
xor
sub
fisttpl
std
pop
mov
mov
and
in
and
fnstsw
inc
adc
or
aad
sahf
inc
or
xchg
mov
mov
out
mov
mov
bound
inc
xchg
enter
mov
inc
add
pop
mov
imul
popa
adc
stos
int
or
pop
mov
out
xor
ljmp
pop
jl
mov
into
outsl
mov
pushf
jae
into
leave
shll
cmpsb
test
dec
sarb
cmovno
and
inc
add
xor
dec
scas
cwtl
jno
mov
fisttpll
movsb
fdivrs
or
shl
mov
mov
xchg
stc
add
test
aad
popf
fimull
imul
sub
lds
cltd
and
cltd
dec
jmp
lea
and
mov
mov
xor
or
outsb
js
out
neg
dec
cld
outsb
out
fwait
pushf
and
sbb
adc
jb
cli
mov
mov
int3
or
mov
call
in
mov
pop
sbb
ret
in
loop
push
sub
leave
or
ds
ljmp
cld
inc
mov
movl
adc
dec
bound
in
pop
in
mov
mov
cmp
or
xor
xchg
dec
mov
xchg
aaa
andl
or
lret
pop
inc
xorb
pop
sbb
push
xrelease
ret
push
sub
jg
push
pop
notb
lret
inc
dec
ljmp
out
mov
lock
sub
lret
shrl
xchg
pop
cmp
loop
jbe
shlb
sbb
or
cmpsl
mov
inc
inc
imul
popa
push
imul
cmpb
xchg
and
hlt
test
test
and
outsb
or
adc
pop
add
jbe
ret
mov
push
inc
pop
add
or
pushf
test
add
int3
xchg
popf
test
mov
cmc
xchg
mov
sub
out
in
fwait
xor
repz
ffree
push
arpl
pop
data16
in
test
dec
js
cs
adc
out
lock
in
cmp
je
pop
pop
out
insb
pop
mov
popa
jl
xchg
mov
adc
in
cmp
scas
test
int
add
addr16
jecxz
fs
dec
fmul
pop
mov
mov
push
or
in
xor
call
lock
mov
jge
push
and
xorb
into
enter
inc
div
test
mov
aaa
adc
xor
adc
int3
and
aad
push
unpckhps
decb
outsl
ljmp
rorl
sbb
mov
movsb
add
aas
inc
mov
mov
pop
and
dec
test
dec
fiadds
mov
push
jmp
dec
sub
aam
ret
mov
mov
movsb
pop
pushf
inc
or
out
fcom
sub
inc
test
push
aaa
push
imul
sbb
inc
aad
cmp
adc
shl
or
add
cmp
mov
dec
push
popf
repnz
fcoml
cltd
nop
out
jp
into
dec
insl
and
inc
mov
sbb
in
popf
push
sbb
jecxz
xorl
lods
inc
out
hlt
fcoml
xor
cmp
in
ret
jns
aaa
push
fcoms
and
xchg
mov
loop
fdivl
int3
ss
dec
jno
mov
xchg
xchg
push
xchg
pop
dec
mov
sbb
js
in
add
sbb
cli
dec
movsb
and
int
rcrl
mov
cltd
popf
pop
pop
or
int3
add
cltd
push
sub
imul
xchg
sbb
icebp
jg
or
inc
xchg
sbb
lahf
in
daa
popf
jae
lahf
data16
imul
xchg
dec
xchg
and
mov
aaa
ss
jnp
decb
cmpsb
mov
add
xor
mov
les
push
mul
xchg
fsubs
push
mov
stos
gs
mov
push
cmp
test
ljmp
out
mov
divl
inc
sub
enter
jp
dec
dec
inc
jecxz
ret
pop
jmp
adc
sahf
inc
int3
sarl
call
cmp
lea
push
xor
push
fisttpl
xor
adc
in
test
add
popaw
adc
jecxz
movsl
fscale
push
repz
sbbb
cmp
mov
ja
gs
pop
subl
cmp
and
inc
inc
inc
push
cmp
in
push
xor
and
or
lcall
cltd
inc
and
icebp
movsl
sub
sahf
pop
mov
lea
cmp
scas
movsl
jl
cmpsb
sbb
popa
xor
mov
push
xchg
jle
stos
sub
mov
xchg
cmp
stos
jns
jmp
xchg
jmp
pop
add
cmp
aas
mov
fnstenv
lock
fbld
lea
pop
in
push
cwtl
xlat
xchg
cmp
fistpll
mov
pop
je
stc
adc
imul
cmpl
stos
xchg
cld
repnz
dec
shl
dec
mov
inc
inc
push
aaa
mov
mov
js
daa
jg
jns
inc
push
clc
jle
dec
mov
in
shll
lret
out
xchg
pop
pushf
outsl
push
ret
addr16
icebp
push
test
mov
dec
imul
xorb
jl
mov
dec
inc
je
jnp
push
stc
push
test
push
cmp
test
iret
dec
xor
ljmp
lret
sub
push
and
pop
clc
xchg
xor
addr16
push
push
loope
or
bound
call
push
fs
pop
jmp
push
ja
jecxz
lea
jno
in
dec
dec
mov
arpl
sub
hlt
fidivs
mov
nop
and
mov
or
lock
out
push
xchg
mov
lretw
popa
jno
inc
bound
repz
and
xor
stos
or
mov
sarb
es
sub
lods
push
push
addb
lock
push
movsl
jb
jne
inc
push
sub
dec
insl
insb
insl
dec
sbb
rol
mov
adc
dec
or
mov
sub
sub
scas
fisubl
ret
aas
xchg
adc
fadds
mov
mov
sub
cmp
cs
je
sbb
out
add
cmp
and
scas
movsl
xchg
adc
and
push
cmp
mov
xchg
mov
xchg
daa
push
jo
je
or
dec
xchg
shlb
push
pop
inc
in
out
fadds
xor
mov
out
cli
and
rcrb
int
mov
add
es
out
and
mov
xlat
pop
cli
push
xchg
ret
pop
fwait
mov
jle
cmc
mov
pop
cli
sub
sbb
xchg
and
mov
mov
cld
in
sub
jmp
out
sbb
push
mov
frstpm(287
data16
and
movsl
loope
adc
xor
adc
cmp
push
inc
or
xor
mov
pusha
sbb
fs
dec
rcrb
test
push
jg
inc
cmp
or
fsubrp
imulb
fisubrl
lret
jecxz
fmul
mulb
pusha
mov
ja
cmp
popa
xchg
fwait
movsl
xor
fucomi
lahf
stos
lods
int3
sbb
jle
jae
mov
sbb
sbb
jb
notl
icebp
pop
hlt
push
and
sbb
add
aam
imul
dec
jnp
outsl
sbb
mov
xchg
push
cwtl
and
mov
adc
fs
add
add
paddq
dec
leave
rcrl
adc
inc
inc
push
push
scas
sub
decb
and
es
cmp
mov
pop
xchg
add
dec
xchg
int
orl
loopne
rcrb
into
mov
adc
and
adc
test
mov
add
pop
xor
add
repz
addr16
fwait
lret
pop
mov
in
and
mov
mov
mov
sbb
mov
rol
stc
sbb
push
leave
sbb
loop
sbbb
mov
out
xor
aam
jne
lret
push
pop
lods
out
inc
sub
hlt
lds
jbe
mov
pop
sbbl
adc
out
add
cmp
decb
or
dec
push
jle
push
cld
andb
sub
adc
mov
mov
adc
pushf
mov
cwtl
cld
imul
pop
dec
popa
pop
mov
jnp
xchg
jl
and
pop
shrd
push
fdiv
lds
mov
mov
insl
push
or
add
xchg
shlb
popa
ffree
xchg
add
inc
adc
shl
sarb
addr16
mov
cli
in
pop
aad
mov
xor
jb
jns
mov
cli
mov
push
or
dec
or
xor
pop
clc
aam
hlt
push
cmp
push
pop
sub
cmp
or
mov
rclb
cli
in
or
xchg
sti
bswap
cli
iret
jne
repnz
test
daa
adc
jbe
ror
lods
mov
stos
es
push
loope
lock
or
dec
aam
inc
sub
lock
ja
insb
mov
or
adc
sbb
sbb
movsb
call
pushf
mov
pop
push
scas
dec
xchg
hlt
imul
in
jge
sbb
cmp
cmp
jns
ljmp
movsb
not
movsb
lods
inc
sbb
stos
pop
imul
push
in
push
mov
xchg
scas
aam
or
stos
jno
sub
push
lea
jne
jmp
stos
lds
shrl
or
dec
aas
lock
outsb
adc
ljmp
adc
cli
mov
stos
mov
sti
push
mov
mov
fwait
add
aam
add
pop
mov
movntps
and
mov
mul
movsl
add
or
mov
inc
daa
aad
and
stos
inc
notl
inc
cmp
cld
sub
dec
sbb
inc
and
out
dec
in
adc
jge
cltd
sub
roll
inc
gs
fistpl
lret
test
stos
mov
insb
lret
xchg
into
inc
sbb
mov
cmp
mov
mov
push
icebp
sarl
ficomps
repz
push
cmp
inc
loopne
mov
xchg
aad
imul
inc
test
jmp
scas
das
subl
mov
and
mov
das
jge
nop
jl
cli
cmpb
decl
aam
std
and
push
leave
gs
lods
mov
fisttpl
xchg
pop
fisttpl
js
dec
es
push
ss
pop
rclb
inc
and
jno
fbstp
cmp
dec
xor
outsl
mov
and
push
mov
cld
sbb
lcall
lret
or
mull
in
ss
jbe
out
mov
dec
cwtl
sub
gs
and
sbb
mov
xchg
jbe
in
push
pop
fnsave
call
inc
add
outsl
enter
mov
sub
rorl
mov
les
hlt
es
addl
inc
popf
leave
adc
andl
lods
mov
mov
adc
or
mov
lock
or
test
fwait
mov
lods
push
mov
filds
ret
mov
xchg
jbe
ret
insb
out
incb
or
dec
lock
mov
sub
stos
push
icebp
mov
mov
lret
dec
jb
shlb
add
xchg
push
aam
xchg
cltd
pusha
mov
pop
mov
enter
loopne
inc
das
jp
addr16
scas
js
sahf
sar
insb
add
dec
xchg
sarb
iret
sub
cmpsl
adcl
fisttps
mov
adc
ds
das
jne
leave
mul
inc
sbb
or
inc
arpl
mov
pop
push
mov
dec
pop
mov
add
add
pop
or
sbb
pop
call
sub
add
call
loope
adc
push
insb
xchg
test
add
test
int
mov
pop
sub
adc
xchg
pop
or
mov
sbb
sbb
sbb
test
push
stos
cld
pop
xor
jo
mov
mov
in
out
gs
push
lret
pop
pop
dec
push
pushf
mov
adc
sti
les
dec
lret
test
mov
or
adc
mull
jb
js
dec
aaa
dec
ret
sub
out
push
incb
in
not
outsb
popa
xchg
push
xor
repz
mov
outsl
sbb
push
mov
push
outsb
sub
outsb
lret
mov
mov
xor
dec
mov
dec
aas
jae
xlat
les
fstl
lock
rcll
lock
cmp
lock
or
cld
aas
sahf
sbbl
or
or
movsl
inc
stos
push
mov
mov
inc
or
adc
stos
lods
in
pop
push
push
stc
mov
out
cld
push
mov
pop
jge
hlt
aam
sti
mov
pop
mov
in
dec
outsl
fs
push
push
xor
add
imul
das
dec
into
fcmovnbe
loope
jg
xchg
add
mov
aas
cs
mov
es
push
pop
cmp
hlt
ljmp
push
in
push
mov
adc
push
in
jl
rcrb
loope
jg
xor
sar
mov
mov
sbb
inc
loope
or
scas
jecxz
adc
mov
cwtl
dec
pusha
mov
lods
jae
xchg
pop
add
lods
jbe
pop
outsl
jno
mov
repnz
aam
and
xchg
mov
pop
cmpsb
pop
add
call
mov
push
jns
jne
fwait
and
insl
test
pop
xchg
push
push
mov
and
aam
iret
in
cmp
sub
mov
addr16
pusha
das
pop
jecxz
mov
mov
test
xchg
jne
ror
pop
add
mov
push
sahf
scas
push
jg
xchg
lods
cwtl
inc
lods
test
fnsave
sub
shll
not
pop
mov
adc
stos
mov
lcall
jb
mov
pop
add
xlat
xor
dec
jnp
fbld
dec
cltd
push
adc
xchg
bound
sub
adc
ret
dec
push
arpl
pop
fcoml
ljmp
sub
mov
psrlq
xor
lock
ret
add
xor
leave
cmpl
aad
cmpsl
aas
ret
data16
inc
or
or
cmp
loopne
out
dec
fmuls
jmp
cld
xor
adc
pop
cmp
inc
call
mov
rcrl
jl
xchg
xchg
jmp
shrl
test
jb
pusha
incb
nop
mov
lret
xlat
mov
fadds
mov
add
pushf
imul
jb
dec
mov
xchg
jns
scas
pop
push
aad
loop
pop
dec
mov
stos
repnz
mov
lret
idivl
xlat
in
or
and
in
rcr
iret
adc
and
adc
sub
jno
jle
dec
or
movsb
in
fsubp
xchg
xrelease
xchg
mov
mov
xlat
scas
cmp
aad
loopne
mov
cld
lret
fs
or
sub
cmc
fs
pop
aas
cmpsb
incb
int3
mov
sbb
push
pop
dec
mov
in
fcoml
and
aam
adc
sbb
ljmp
push
sbb
xchg
adc
add
mov
mov
and
in
dec
mov
or
ds
insb
push
xchg
ds
pop
fistps
shr
push
int3
popa
pushf
jp
ds
aaa
fmull
or
test
es
and
mov
movb
inc
or
stos
leave
mov
stos
dec
fldenv
loopne
adc
sti
sbb
ss
lea
cltd
sub
inc
pop
lret
sbb
lahf
mov
addr16
mov
sub
sub
cmc
inc
js
mov
insl
fwait
fs
mov
mov
jle
out
xor
jnp
inc
stos
out
xchg
xchg
repz
pop
dec
scas
and
data16
push
mov
cmp
or
outsb
jno
pop
and
push
inc
sarl
dec
or
enter
cltd
lea
addr16
cld
mov
cmp
jge
out
cmc
dec
dec
jmp
mov
out
xor
pushf
push
std
pop
sbb
clc
mov
aad
sbb
shr
add
dec
adc
iret
jns
test
lret
xor
and
test
mov
aam
insl
jg
mov
pop
sub
jge
dec
sub
sbb
mov
inc
in
cmpsb
cmp
dec
in
jnp
hlt
mov
enter
xchg
movsb
add
fsubp
mov
rcr
xor
xchg
clc
add
pop
sub
std
add
xchg
mov
sbb
jno
pop
dec
pop
mov
pop
in
mov
arpl
arpl
outsl
jnp
add
out
inc
sub
mov
clc
rcll
fiadds
lods
push
das
dec
sahf
push
lahf
pushf
mov
mov
add
pop
insl
in
int
adc
jo
mov
and
lret
cmp
cmp
loope
or
out
arpl
jae
cld
push
mov
pop
mov
and
out
sbb
pop
adc
sub
adc
sub
test
ljmp
leave
and
scas
adc
sbb
insl
lcall
push
pusha
loopne
cwtl
dec
test
push
call
inc
xchg
leave
in
pop
outsb
push
mov
xor
pop
out
addb
mov
in
or
push
popf
pop
xorb
and
scas
adc
inc
ret
scas
inc
push
adc
jns
pusha
cli
cmp
pop
addl
call
cld
push
xchg
jl
xchg
jo
in
push
shl
movsb
dec
lahf
sub
push
cmp
call
sbb
out
push
orl
arpl
mov
and
jg
pop
addb
pop
fcompl
popa
les
stc
ficoml
adc
sub
ds
push
add
test
jecxz
cs
jl
pushf
movntps
aam
xor
out
xchg
and
sbb
xor
inc
std
mov
jns
ds
xchg
sub
adc
int3
js
dec
adc
testb
adc
mov
lahf
cmc
les
inc
je
sub
mov
scas
ret
pop
sub
sub
xchg
sub
data16
lret
push
iret
jmp
ja
or
cmpsl
push
inc
mov
mov
shll
lret
or
sahf
push
cld
mov
loopne
inc
and
push
cmp
fcmovu
mov
out
rcr
xor
xlat
cmc
jne
dec
add
jbe
scas
shlb
ret
fwait
data16
rcrb
mov
cmp
and
jecxz
mov
bound
adc
cmc
adc
int3
cli
inc
nop
enter
decb
xchg
cs
fwait
inc
and
add
in
xchg
out
adc
movsl
mov
jne
xchg
mov
xchg
sub
adc
sub
inc
mov
sbb
mov
xorl
mov
idivb
std
jne
aas
mov
jb
and
lahf
pushf
cli
jb
jmp
inc
fnstcw
aad
mov
mov
inc
push
add
pop
jnp
mov
xor
ds
mov
jecxz
popa
test
jb
mov
into
imul
cltd
in
and
or
faddl
scas
or
pop
cmp
in
xlat
cmpl
dec
jmp
mov
and
out
dec
in
cmc
dec
out
adc
or
sbb
pop
jbe
adc
idivl
jl
cmp
lds
dec
in
mov
mov
das
leave
sub
testb
sub
je
arpl
mov
ljmp
scas
jmpw
arpl
xchg
das
push
pop
pop
std
mov
jl
adc
dec
xor
jo
jg
add
rorb
push
jbe
lock
cs
mov
cmp
inc
stc
out
test
push
in
mov
inc
int
dec
inc
fwait
add
arpl
and
subb
xchg
mov
test
push
and
and
xchg
jae
push
jge
imul
jns
pop
jle
imul
rcl
add
sbb
and
jle
push
mov
outsb
popf
and
push
outsb
dec
push
ljmp
mov
jp
into
pop
push
loope
ja
cmp
sti
mov
xor
xor
dec
arpl
jo
fsub
push
jle
fmuls
fcomp
sub
hlt
xor
ljmp
mov
ficompl
lret
fdivrl
mov
sub
add
xchg
pop
cmp
pop
mov
test
pop
inc
cwtl
dec
sub
jp
iret
inc
rclb
out
pop
fistps
in
outsl
mov
inc
dec
add
out
sbb
mov
nop
xchg
push
or
lea
fs
out
into
dec
arpl
fisttpll
inc
shlb
dec
lcall
adc
xchg
add
add
xchg
dec
shrl
pop
gs
push
clc
cmp
add
loope
loop
ficomps
and
sub
add
cmp
push
xor
inc
stos
dec
inc
dec
test
sbb
push
mov
xchg
or
stc
test
dec
and
cltd
imul
add
loope
mov
add
and
pop
in
sub
mov
cltd
xchg
popf
xlat
enter
movhps
xchg
clc
push
fwait
pushf
ret
popa
xchg
sti
and
jnp
cld
clc
sti
mov
jl
call
test
aad
adc
inc
cmp
les
scas
pop
dec
adc
mov
mov
pusha
roll
stos
testb
sarl
icebp
pop
push
mov
int
filds
pop
scas
out
lcall
push
and
ljmp
mov
pop
xor
hlt
and
insb
cld
pop
or
cmpsb
mov
test
xchg
mov
stos
and
mov
scas
fistpll
test
ds
jo
sbb
mov
popa
push
repnz
daa
or
push
lahf
shll
mov
or
shlb
inc
icebp
push
test
jecxz
xlat
mov
sbb
push
les
adc
sbb
mov
xchg
loope
loope
insl
add
rcr
ret
cwtl
cltd
lea
xchg
sarl
mov
gs
fs
lds
leave
scas
popa
pop
mov
fnstsw
jnp
lods
ret
lret
pop
jl
mov
das
cli
stos
dec
xor
mov
xor
mov
ret
cmpsl
fists
xor
cmp
pop
aad
hlt
ret
push
xchg
mov
popa
dec
mov
cmp
divl
outsl
adc
testb
push
mov
inc
push
lea
cs
mov
sub
xchg
push
jle
cmpsl
adc
push
hlt
movsb
insb
xchg
inc
popf
sahf
cmpsl
xchg
mov
aam
fiadds
mov
fcompl
cwtl
outsl
adc
in
fdivp
push
sbb
and
jnp
mov
xchg
shl
lock
pop
cmp
push
xchg
sbb
mov
pusha
sbb
inc
bound
pop
dec
xor
cs
jns
ficomps
sbb
dec
nop
test
pop
imul
and
scas
mov
xor
fimull
nop
or
dec
dec
cmpsb
cmp
pop
adc
iret
shrb
popf
imul
lods
xor
xchg
lods
mov
jmp
out
fstpt
icebp
mov
js
clc
ja
mov
mov
mov
sbb
insl
sbb
inc
jno
lea
imul
jno
shlb
cmpsb
hlt
adc
sbb
and
das
adc
je
mov
dec
imul
pop
fwait
dec
fnsave
pop
add
out
xchg
inc
adc
push
jbe
lcall
imul
cmp
ss
jle
fildl
in
lds
fildll
rorl
loope
pusha
lea
xchg
lds
or
test
adcb
push
lret
jnp
xor
mov
int3
inc
push
push
inc
jp
mov
shl
mov
pop
sub
mov
insb
xor
sbb
sub
jle
mov
sti
hlt
mov
jmp
and
pop
push
push
push
dec
xchg
sub
pop
jg
and
jnp
or
std
xchg
inc
xchg
fimuls
xchg
stos
jbe
js
sub
push
sub
ds
jmp
xor
repnz
push
iret
sahf
adc
jge
jmp
es
and
xchg
fs
in
aas
adc
push
faddl
sbb
push
mov
mov
cmp
es
jg
frstor
add
stos
scas
leave
pop
sub
sbb
in
mov
inc
test
push
sub
xorb
mov
aad
xlat
outsl
mov
into
jmp
insl
push
xchg
ret
inc
dec
jge
fldl
out
lret
add
jmp
sbb
mov
mov
lock
ss
decb
cmp
and
outsl
ror
inc
rcrb
idivl
sub
cmpb
push
mov
cs
loope
adc
xchg
mov
out
push
inc
sbb
mov
std
and
dec
loopne
fnstsw
jnp
or
fidivrl
mov
cmc
pushf
lahf
ret
repnz
test
rolb
faddp
scas
fsubrs
or
sbb
int3
cmp
aad
pop
jns
push
movsb
cmp
mov
dec
sti
pop
pop
xchg
das
jg
idivb
cmp
inc
sub
addr16
imul
pop
adc
ret
push
aas
out
cmp
insb
push
and
loopne
cmpsl
pop
xchg
rcl
bound
pop
add
xchg
sbb
pcmpeqw
nop
pop
test
test
aad
adc
add
inc
aam
rolb
pop
shll
ja
cmp
add
ret
ljmp
cwtl
cli
lods
mov
add
mov
leave
adc
aaa
outsb
mov
lahf
test
cwtl
xlat
lret
jle
fldenv
jmp
mov
adc
cmp
into
data16
jecxz
jle
in
sbb
mov
popa
psubusw
les
xchg
std
sub
lea
cmpsl
mov
ljmp
and
jge
xchg
xchg
adc
cmp
das
ljmp
dec
jle
xchg
fmuls
lods
orb
out
mov
lcall
pop
leave
inc
arpl
jno
fistpll
sub
pop
push
jns
imul
fiadds
std
test
sbb
lcall
sub
fbstp
or
stos
scas
push
sbbb
out
in
lea
mov
cmp
or
pop
sub
mov
fmul
repz
rorb
or
pop
cmpsl
outsl
xchg
or
lret
repnz
push
inc
sbb
aas
xor
xorb
adc
out
cmpsl
xor
dec
xchg
adc
sarb
pushl
fcmovnb
lret
cwtl
lret
test
jae
mov
dec
stos
lds
test
and
lahf
xor
rorl
mov
sti
and
lcall
adc
es
xchg
es
es
adc
mov
cmpl
into
aad
fsubl
cld
incb
or
push
cld
push
ret
repnz
sbb
int3
popfw
pop
pop
push
fs
arpl
pop
inc
dec
pop
sbb
aaa
fcomps
and
and
data16
cmp
scas
leave
mov
out
inc
daa
push
into
ljmp
ds
push
sti
xor
adc
shll
fcoml
pop
pop
ja
add
sti
mov
mov
pop
sub
or
inc
stos
dec
jnp
test
sub
mov
xlat
out
in
xchg
insl
hlt
sub
aas
mov
es
loopne
mov
mov
xor
mov
or
push
sbb
hlt
pop
sbb
movsl
jae
pop
aas
popf
dec
scas
mov
pushf
jge
xchg
push
loop
decb
lea
out
out
push
mov
mov
data16
out
xchg
call
imul
idiv
push
inc
or
in
mov
sarb
pop
in
fsubrl
inc
dec
clc
sub
pop
pop
fldcw
scas
mov
fisttps
dec
loop
cmp
sbb
and
fwait
xchg
xchg
jl
fidivrs
cli
in
and
xchg
push
xor
stc
add
add
dec
mov
inc
jbe
or
and
jl
shrl
cltd
push
xor
das
cmp
push
mov
hlt
dec
push
sub
inc
aaa
inc
xlat
int3
mov
scas
insb
mov
pop
addr16
xor
mov
sub
inc
cmp
cs
lock
push
dec
sahf
mov
dec
inc
pop
pop
decl
cmp
adc
pop
inc
out
mov
mov
int3
pushf
push
daa
negl
fcmovnbe
xchg
dec
xchg
repnz
stos
pop
je
ficoml
sti
in
test
mov
stc
mul
sub
call
push
sarl
mov
mov
stc
filds
lahf
loope
mov
ret
sub
jne
test
movsb
dec
sbb
xor
aaa
aad
popf
jmp
shr
test
sbb
xchg
es
movsl
and
dec
aam
cmc
int3
int3
ret
mov
fisubrl
pop
cmp
aad
lcall
pop
adc
jg
inc
add
mov
out
dec
inc
shl
xor
cmp
dec
cmpl
xchg
rclb
int
xchg
mov
dec
inc
ja
cld
aas
xlat
cli
add
lret
loope
das
subl
pop
hlt
iret
xor
dec
loope
cmp
pop
es
dec
xor
icebp
fprem
test
push
andl
push
dec
mov
in
mov
icebp
inc
lret
dec
fcmovbe
loopne
xchg
push
movsb
sub
xlat
clc
dec
ds
mov
scas
repnz
in
xchg
xchg
mov
ret
mov
cmp
popa
jg,pn
xor
clc
ficoms
inc
das
imul
pop
dec
das
enter
repz
cs
adc
adc
cmp
fdivs
mov
fcmovnb
lret
xor
adc
mov
mov
aam
pop
ljmp
pop
nop
addr16
and
xor
cmc
lods
push
add
xor
das
loope
ds
popa
jp
enter
jne
loop
loopne,pt
lock
clc
push
outsb
jo
sub
mov
clc
mov
js
push
sbbl
cmc
pop
lock
outsl
fcmove
in
daa
pop
mov
or
mov
or
dec
cmp
sbb
fistpl
data16
lds
or
mov
pop
ficomps
or
popf
mulb
out
outsb
pusha
testb
outsb
sub
into
mov
fistpl
pop
mov
popa
push
mov
out
jae
sbb
mov
mov
or
ret
pop
loopne
jns
cld
lods
push
and
xor
cmp
stos
mov
mov
repnz
sub
cmp
dec
mov
dec
fucompp
mov
jle
adc
jmp
icebp
pop
sub
mov
shrb
pop
movsb
cmp
xchg
push
pop
push
mov
fwait
cli
int3
pop
ret
mov
movsl
cmp
dec
adc
cli
xchg
or
outsb
imul
and
cmpsb
mov
add
leave
adc
nop
adc
mov
adcb
rorb
in
and
mov
insl
aaa
add
adc
dec
cmpb
jge
mov
dec
dec
jle
xor
or
enter
bound
or
rolb
js
aas
xor
dec
out
shrb
pop
rorl
iret
inc
pop
jnp
pop
mov
dec
scas
mov
xchg
imul
mov
pop
daa
cmp
aam
in
aad
or
sbb
push
icebp
movsl
mov
pushf
aaa
push
scas
and
cs
rol
cs
dec
stc
sbb
clc
cmp
mov
mov
lcall
pop
cmp
mull
dec
sub
or
jae
and
lcall
mov
stc
push
xchg
data16
sub
jge
lods
mov
mov
sti
inc
das
or
leave
xorb
sahf
sahf
mov
shlb
pop
xchg
mov
xor
ja
icebp
sahf
in
arpl
pop
repnz
fnstenv
push
cld
popf
mov
imulb
in
out
neg
les
add
fwait
xchg
arpl
in
cs
out
in
stos
test
adc
mov
rcll
imul
pop
cmpsb
pop
and
rcll
add
fsubl
cmp
jns
xchg
in
cmp
outsl
cmp
jns
adc
sbb
push
sub
mov
inc
pop
jecxz
rorl
push
rcl
cli
int
mov
or
pusha
jecxz
out
cld
es
insb
mov
xor
outsb
aad
sbbb
imul
fmulp
addl
les
push
js
pusha
adc
sbb
orl
sub
push
or
mov
icebp
jne
xor
mov
lret
dec
jmp
cltd
js
xchg
pop
sbb
aad
jo
adc
shlb
andw
inc
xor
add
mov
cltd
mov
imull
add
nop
cwtl
add
je
je
add
sahf
xor
pop
test
bound
jno
jo
insl
mov
mov
add
jns
das
mov
cld
nop
inc
bound
in
dec
fs
add
rcrb
mov
or
divps
dec
xor
cmp
bound
or
cwtl
pop
cmp
xor
mov
into
lcall
mov
filds
test
jae
ljmp
scas
iret
dec
xor
push
popa
in
jle
mov
fbld
ret
mov
xor
outsb
xor
pop
mov
cli
sbb
movb
arpl
cli
lret
add
jp
mov
dec
int
test
int
mov
jno
mov
and
and
mov
mov
adc
push
or
or
stos
out
ja
mov
add
out
sub
push
jg
add
divps
or
shrb
test
sub
jmp
push
adc
mov
cmp
outsb
add
mov
adc
cmc
das
pop
add
adc
push
jecxz
lret
popf
pop
mov
cmp
dec
adc
jg
mov
imul
pop
movsb
insb
pop
jae
fadd
jb
jmp
dec
inc
pushl
clc
and
xlat
or
mov
sbb
jge
pop
dec
pop
xchg
pop
mov
movsb
sbb
arpl
sub
or
fwait
and
push
call
mov
lea
ss
sbb
cmp
cli
mov
aam
bound
adc
add
imul
loope
jle
dec
mov
add
fsubl
dec
add
inc
pop
dec
mov
dec
lcall
sbb
dec
mov
push
pop
jns
jmp
cli
lret
dec
push
add
jo
adc
sub
mov
lcall
stc
inc
data16
sub
addb
add
fldcw
add
mov
flds
push
insl
inc
pop
int
cmp
movsl
out
mov
call
dec
dec
sbb
inc
js
xor
in
push
sub
jge
xor
int3
or
movsl
into
and
daa
cld
pushf
mov
test
lcall
sub
jl
cwtl
jb
sub
push
xor
scas
pop
stc
popf
int3
scas
and
mov
sbb
push
fidivl
cli
ficoml
xchg
hlt
das
jge
incl
cli
or
test
or
sbb
and
orl
neg
int3
add
loopne
adc
pop
lcall
leave
cmp
daa
shlb
mov
int
sahf
inc
cmp
or
lea
xchg
arpl
push
dec
and
mov
cwtl
or
dec
test
aas
rcrb
outsb
mov
ljmp
sub
xor
mov
mov
or
outsl
pop
decl
sbb
sub
add
lods
dec
adcl
rcrl
mov
adc
cld
mov
sbb
xor
testb
div
insl
fmuls
orl
push
cld
sub
pushf
cmpsl
dec
pushf
std
xor
aam
pop
jne
leave
jp
and
addr16
cmp
xlat
js
insl
push
and
jae
repnz
insl
stos
or
cs
in
inc
ds
popa
cmp
xor
push
ljmp
cmpsb
sbb
sbb
popa
insl
mov
in
mov
aas
xchg
cmp
pop
call
and
fnstsw
inc
mov
mov
dec
mov
in
test
test
sbb
jnp
test
fcmovb
mov
or
scas
aam
lods
pop
arpl
shrl
shrb
add
mov
lods
psrld
sub
mov
cltd
fs
mov
sub
sub
push
add
pusha
mov
sbb
pop
push
in
cwtl
push
mov
sub
xchg
xchg
pop
sub
adc
es
mov
adc
push
jmp
jbe
ror
push
push
ss
push
lea
jl
shlb
insl
adc
rolb
add
shlb
adc
hlt
enter
xchg
imul
dec
jp
push
mov
dec
imulb
cmc
movq
mov
cld
stc
and
int3
nop
pop
outsl
pushl
jl
sub
push
lock
lods
pop
add
mov
mov
insl
inc
fwait
js
sarl
fwait
jb
int3
out
sarl
jno
mov
pop
sbb
mov
jbe
xor
jae
in
mov
js
pop
stos
mov
sub
pop
pop
sbb
loopne
pop
pop
xchg
and
xchg
adc
xor
mov
pop
pop
popa
fnstcw
fmull
lea
ljmp
jecxz
inc
mov
imul
push
data16
in
jo
or
inc
mov
in
xor
je
fisubrs
nop
test
push
push
mov
push
xchg
fs
and
xchg
das
jmp
and
aas
jb
sbb
adc
sbb
jne
and
enter
flds
pusha
inc
push
sbb
mov
xor
shlb
cld
jns
lods
jns
sbb
sahf
and
pmulhuw
mov
mov
and
push
pop
jmp
sub
adc
inc
pushl
jge
push
aaa
lods
mov
jns
test
pop
icebp
sbb
push
push
sbb
add
cld
sub
dec
push
repz
movsl
sub
cmpsl
sub
pop
jp
pushf
cmp
aam
push
inc
int3
sub
xchg
sbb
inc
push
jl
ds
push
xchg
jae
xchg
fsubrs
cmp
outsb
imul
sbb
sub
test
rcrl
push
xor
push
mov
std
insb
andb
mov
adc
insl
inc
out
add
test
mov
cmpsl
adcl
aam
outsb
paddusb
and
movsl
cmp
add
sbb
push
stc
cmp
push
cmc
shl
jns
cmp
jmp
js
scas
in
inc
das
sbb
inc
jb
jecxz
dec
xchg
mov
sahf
pop
jns
es
jne
fistpll
sub
idivb
dec
jnp
push
and
dec
out
xor
notb
adc
mov
mov
push
aad
mov
fnsave
in
adc
inc
push
adc
pop
mov
popa
popl
bound
mov
movsl
scas
orb
jns
lods
fdiv
adc
mov
sbb
ss
out
or
outsl
add
dec
imul
test
mov
outsl
cmp
out
push
sub
adc
mov
iret
or
outsb
pusha
adc
inc
sti
xchg
clc
lea
push
adc
inc
mov
cld
not
inc
mov
repz
adc
mov
test
negb
aas
sub
stos
xorl
shll
in
cs
shlb
jns
mov
push
cmp
inc
push
enter
or
or
mov
dec
dec
pop
fcompl
in
adc
sbb
cs
xchg
and
jle
lods
xorb
out
jl
lcall
pop
xlat
iret
fidivs
mov
repz
mov
mov
sub
adc
and
add
repz
xor
or
ss
add
roll
add
push
mov
jae
cwtl
nop
jo
ljmp
xchg
lods
cmc
jecxz
rcrb
andl
sbb
shll
xor
adc
adc
mov
sbb
fiaddl
rclb
inc
outsb
je
inc
stos
in
scas
dec
inc
add
push
push
mov
xchg
mov
mov
mov
pop
jmp
mov
je
and
subl
xchg
lods
in
into
dec
int3
out
add
addl
xchg
add
or
or
daa
pop
push
rcr
push
fnsave
in
fisubrs
jp
sub
dec
or
or
adc
imul
les
les
jp
cmp
xlat
ljmp
mov
push
mov
sbb
out
js
jp
and
in
in
dec
int3
fcoml
xchg
stos
lahf
mov
mov
cmp
jge
add
mov
cmc
mov
mov
sti
in
or
les
inc
call
je
xlat
mov
shrb
icebp
xor
or
icebp
testb
loopne
push
ljmpw
sti
xor
insb
push
add
in
cli
test
imul
in
xchg
adc
cmp
int3
popa
test
xchg
insb
test
cmp
push
pusha
aas
xchg
loop
loope
pop
mov
sub
and
js
or
jo
push
iret
jo
out
xchg
movb
mov
xorb
stos
mov
push
mov
cmc
arpl
in
out
dec
test
out
lret
mov
icebp
repnz
cld
dec
inc
add
mov
adc
pop
lahf
stos
pop
in
aam
test
mov
bound
cmpsb
fisttpl
mov
ret
insb
nop
pop
lods
fistl
mov
adc
sub
push
aas
aaa
addb
rcrb
les
rcrb
add
cmpsb
mov
mov
enter
cmpsb
mov
test
clc
les
stc
mov
cld
adc
fldenv
clc
cmp
pop
push
ds
and
insl
cmp
fistpll
and
push
lcall
mov
shll
out
sbb
push
testb
xchg
push
sbb
stos
fwait
xchg
xor
add
mov
iret
repnz
dec
gs
mov
in
fwait
pop
sahf
mov
xor
lods
fisttpl
cmpsb
in
sahf
sbb
mov
in
add
xorl
sub
add
and
add
dec
andl
movsl
sti
loope
popf
add
test
inc
push
add
push
mov
mov
sub
fistl
mov
xchg
mov
mov
sub
sbb
roll
arpl
pop
data16
fadds
add
addr16
add
dec
lods
ret
mov
pushf
dec
xor
leave
repnz
rcll
pop
aaa
aaa
sub
cld
fcmovnbe
daa
xchg
data16
add
mov
cltd
clc
fdiv
jns,pn
ljmp
insl
dec
mov
cmc
test
subb
movsl
mov
in
movsb
lret
xor
inc
js
sarl
lret
loope
xor
fcmovnu
mulb
sub
push
ljmp
ret
cmp
jmp
outsb
cmp
shlb
mov
out
xor
pop
pop
loop
fcompl
movsb
jecxz
and
dec
in
dec
out
in
push
fs
cmp
sti
sbb
sub
pop
gs
push
jns
fstp
xor
or
arpl
mov
jne
sbb
jp
sti
inc
xlat
jecxz
aad
pop
or
sbb
icebp
sahf
jl
push
adc
fsubl
subl
mov
add
sub
pusha
lds
mov
cmc
push
sbb
push
sbb
mov
jmp
into
icebp
aam
fisubrl
sahf
or
pop
dec
testb
jg
or
adc
sub
mov
xchg
fildll
jmp
push
jp
adc
aas
push
jl
inc
sbb
add
mov
imull
and
and
inc
cltd
les
inc
jmp
outsl
aam
ljmp
jnp
dec
in
test
dec
test
push
add
mov
jno
adc
push
neg
imul
lret
sbb
rcrl
fisubrs
je
das
es
mov
pusha
cmp
push
pop
cmp
test
popf
mov
jno
ds
scas
push
test
pop
mov
jae
xlat
scas
or
cli
add
call
aaa
hlt
mov
mov
dec
pop
mov
lea
lret
int
stos
in
jnp
mov
mov
adc
mov
scas
pop
stos
mov
dec
pop
pop
mov
adc
and
sub
inc
or
hlt
imul
test
push
add
mov
movsl
and
cmp
and
sbb
js
pusha
or
sub
jno
lods
out
outsl
dec
mov
cltd
sbb
pop
xor
inc
fbstp
pusha
and
xorb
rolb
mov
std
pop
push
aad
pop
jae
mov
lea
mov
adc
xchg
filds
pop
cmpsb
add
popf
dec
pop
rorb
cmp
mov
adc
andb
lcall
cmp
repnz
inc
add
stc
jmp
lds
jle
or
lods
inc
std
iret
jle
jno
lret
adc
mov
inc
popa
xor
jbe
ret
and
pop
mov
rcll
loopne
cli
pop
jle
ror
add
mov
dec
or
push
jg
or
aas
mov
add
mov
xchg
sbb
sti
mov
stos
adc
pusha
js
and
outsb
mov
and
das
mov
jmp
cmp
mov
cmp
into
and
sbb
pop
mov
cmp
or
jmp
lret
jmp
and
adc
xchg
or
cli
xor
sbb
mov
push
lock
xor
cltd
mov
push
ffree
mov
mov
mov
imul
clc
dec
sub
and
leave
dec
push
pop
jge
dec
xor
testl
and
push
decb
and
lods
jbe
pusha
in
sar
pop
dec
xor
jb
xchg
mov
or
sbb
idiv
dec
std
mov
push
xchg
bound
rcrl
push
cmpsl
es
ljmp
jg
lods
movsl
fistps
cmc
test
or
mov
mov
icebp
out
mov
xor
cltd
mov
rcrb
outsl
dec
and
inc
push
stc
pop
pop
mov
sbb
add
mov
mov
daa
sbb
out
lds
or
mov
adc
subl
bound
cmp
add
loop
mov
sbb
jg
push
adc
add
int
call
sub
cmp
out
iret
enter
imul
mulb
push
out
mov
pop
inc
cmp
dec
addl
inc
sbb
in
into
pop
xchg
pop
or
sbbb
jne
sbb
in
xchg
sti
cmpsl
mov
mov
out
sub
nop
inc
fucomip
into
push
xor
imull
shr
aad
dec
mov
inc
movsb
mov
xor
xchg
mov
imul
cwtl
add
popl
cmpb
add
mov
stos
adc
test
roll
ja
lods
pop
or
jns
cmp
add
pushf
jnp
cmp
or
mov
jp
int3
js
jbe
xor
and
add
jo
call
test
mov
nop
xor
cmp
aam
in
cs
push
mov
push
mov
outsl
mov
bound
and
or
inc
jge
leave
push
dec
nop
arpl
push
sub
jne
mov
cmc
pop
aad
xor
adc
sbb
mov
mov
shlb
negb
adc
mov
and
push
pop
test
out
cmpsb
test
push
inc
push
subl
fxch
test
mov
scas
sbb
shlb
lahf
adc
cmp
push
and
aas
loopne
in
aaa
lods
dec
sbb
mov
lret
sbb
cmp
and
adcb
dec
push
aas
mov
mov
ret
dec
shlb
pop
pop
ret
fstps
xchg
arpl
sar
sub
jmp
insl
jnp
adc
mov
mov
add
aaa
repnz
add
push
imul
push
mov
mov
pop
test
andl
out
mov
sub
subb
and
xor
notl
pop
arpl
mov
fisttps
inc
or
std
into
insl
and
xor
cmp
insl
sbb
icebp
jp
inc
enter
xchg
push
nop
stos
inc
pushf
testl
sbb
mov
lods
sub
mov
lahf
mov
inc
cmp
mov
jmp
jno
cmpsb
rorb
jne
cmp
pop
test
jns
jecxz
inc
pop
rolb
cmpsl
pop
enter
incl
enter
push
or
jo
call
xchg
sub
fdivrp
lods
or
add
add
sbb
aas
sbb
pop
mov
daa
add
mov
jne
pop
adc
sub
cmpsb
xor
lods
jae
mov
xor
mov
xchg
loop
xor
addr16
stos
mov
sbb
or
pop
jne
test
clc
js
in
mov
loopne
std
sub
mov
dec
ret
vpsrld
scas
into
idiv
insl
outsb
out
or
in
inc
ljmp
int
mull
popa
push
sub
jge
inc
xlat
rorl
xor
gs
sub
sahf
xor
scas
mov
or
inc
repnz
aad
in
xor
subl
pop
lock
inc
sub
jg
jnp
jge
or
sbb
leave
mov
testl
jle
xchg
enter
fists
jno
add
aam
sub
pop
cmp
mov
test
push
mov
xchg
sbb
or
int
hlt
enter
sbbl
dec
rcr
sub
test
and
scas
aaa
jbe
das
jp
mov
imul
shl
xchg
jae
push
les
and
std
ja
mov
pop
mov
pop
inc
jbe
sub
movsl
add
adc
jle
shrl
stos
cmp
cli
inc
leave
sub
push
rorl
mov
inc
sub
cmpsb
push
adc
jl
test
cld
jnp
cmp
cwtl
xchg
leave
scas
ljmp
or
dec
sub
add
inc
fadds
xchg
push
iret
pop
ja
pop
mov
adc
sub
es
jle
xor
cmp
mov
mov
mov
mov
inc
dec
and
scas
ficompl
das
mov
outsl
frstor
sbb
adc
inc
pop
push
inc
nop
enter
jmp
mov
aaa
xchg
imul
inc
loopne
mov
adc
mov
gs
sub
data16
and
mov
or
cmp
pop
int
fmull
or
sub
push
testb
aam
fcoms
xchg
mov
scas
hlt
jge
add
xchg
mov
ss
fisubs
clc
mov
flds
mov
mov
lods
jo
sub
dec
dec
pop
in
or
mov
pusha
push
stos
lfs
lret
call
cmp
jle
aas
push
fcmovbe
cmp
or
xchg
fwait
test
cmc
insb
cmp
mov
cmpsb
xchg
les
call
xor
jp
jmp
insb
or
jns
cmc
cltd
shlw
cld
test
lea
pop
clc
paddusb
pop
out
ljmp
loopne
cs
loop
add
or
out
mov
jno
in
sbb
mov
arpl
pop
jg
inc
cmp
pop
stos
jg
pusha
popf
sbb
ret
outsb
cmp
cmp
jne
jmp
iret
push
rol
test
aam
test
jne
and
std
mulb
mov
lret
movsb
divb
cltd
out
mov
jbe
xchg
les
addr16
mov
pop
lock
xorb
inc
jno
repz
data16
arpl
lcall
push
adc
add
icebp
imul
inc
push
jp
dec
sbb
sahf
cltd
inc
pop
fadds
mov
in
fs
add
push
decl
sub
ret
mov
cmp
sub
jno
inc
pop
lea
cs
mov
outsl
pop
sti
pop
mov
out
addr16
inc
daa
xchg
gs
dec
popf
inc
push
bnd
jbe
repnz
adc
aad
rorb
shrb
ficomps
inc
stos
mov
sub
cmp
hlt
adc
shlb
xchg
ds
in
sub
sbbl
lods
pushf
daa
lret
out
cli
cmpb
aas
adc
movsl
lcall
xor
sbb
dec
lock
iret
rorl
sti
lcall
fnstenv
repnz
test
rolb
fwait
dec
or
test
xchg
imul
jmp
lret
fnsave
push
inc
loopne
adc
pushf
pop
xchg
sti
movsl
std
lcall
dec
jbe
psllw
push
dec
adc
push
pop
xchg
inc
sbb
cmpsb
int
mov
repnz
fwait
je
repz
negb
xchg
ljmp
dec
outsl
and
jnp
pop
or
fs
jle
cmp
mov
or
push
hlt
dec
push
mov
lahf
loope
inc
and
lret
mov
outsb
stc
test
xchg
inc
lret
test
mov
and
sti
or
movsb
dec
aam
cli
jno
sbb
cs
adc
aas
loop
int3
sub
mov
aas
iret
xchg
mov
in
xor
jmp
push
dec
fisubrs
push
xor
cmp
inc
jge
mov
fnop
movsb
xchg
mov
enter
js
roll
sbb
xor
mov
cmp
insl
xor
outsl
in
mov
es
sbb
ds
mov
pop
xor
scas
push
xchg
inc
movsl
fdivrp
mov
cmc
ret
arpl
mov
or
push
cmp
in
xor
add
cltd
sbb
rol
mov
jmp
mov
push
lret
movsl
sahf
add
hlt
cmp
into
cld
dec
xchg
or
dec
mov
insl
sbb
push
xchg
aad
mov
orb
testb
push
inc
inc
outsb
mov
iret
cmp
test
mov
popf
dec
ja
mov
es
roll
jb
lds
cld
xchg
cmp
push
mov
mov
in
pop
mov
addr16
cwtl
cwtl
fistl
dec
mov
xchg
iret
je
dec
in
mov
leave
push
rol
in
add
xchg
sarb
lahf
inc
sub
pop
rorb
rolb
pop
jns
pusha
or
ret
mov
mov
jmp
loopne
mov
popf
xor
mov
xchg
subb
movsb
icebp
call
test
ja
lcall
imul
xor
in
pop
mov
addr16
adc
push
and
mov
cmc
mov
inc
xlat
loope
dec
outsl
cld
mov
into
aad
jnp
aad
jmp
cmp
ficomps
aam
pushf
add
lock
cmp
mov
ret
xchg
mov
mov
fcoml
jge
pop
inc
jb
push
xor
or
pusha
add
into
jb
stos
jecxz
adc
push
iret
je
lahf
mov
jnp
cmp
mov
mov
xchg
sbb
jb
cmp
jae
xchg
xor
dec
xor
aad
cld
jle
xlat
jp
cmp
fidivs
add
adc
lods
cs
mov
outsb
push
push
fiaddl
xchg
inc
adc
mov
or
ret
lcall
es
arpl
and
xchg
fwait
testb
add
jp
int
or
imul
icebp
mov
push
in
jle
insl
ds
push
cmp
ja
std
test
daa
dec
mov
stc
in
xor
dec
push
into
mov
sub
cltd
loop
push
sub
leave
pop
sbb
shl
cli
sbb
nop
lahf
ret
and
nop
popf
mov
bound
sub
xor
push
and
sub
mov
mov
cmpsb
lea
in
add
fists
int
test
loope
repz
cld
rolb
stc
lods
and
cmpb
dec
xchg
adc
into
outsl
test
stc
nop
jge
or
mov
subl
leave
ja
ret
mov
decl
mov
or
sbb
jnp
mov
mov
xchg
test
rcr
push
jge
push
push
jnp
sarl
shll
add
icebp
mov
and
push
imul
repz
dec
ja
jmp
in
cmp
rol
sub
sub
daa
mov
or
out
or
cmp
xor
push
aam
js
fimuls
or
in
fs
sub
mov
push
inc
repnz
inc
test
jb
nop
rcrl
or
cmp
cld
in
sti
xor
cmp
in
cmpsl
xor
mov
cmpsl
aad
push
pop
imul
push
imul
fistpll
sbb
adc
iret
lods
xchg
icebp
mov
scas
outsb
mov
lock
sub
fwait
xchg
andl
les
mov
xchg
outsl
cmpsl
popa
sbb
shr
mov
arpl
add
clc
xor
mov
adc
sub
dec
xor
mov
ja
pop
lret
cltd
mov
add
cmc
jne
pop
adc
clc
ds
stc
test
and
xchg
ja
mov
sub
aaa
adc
inc
xor
out
out
xchg
jp
das
pop
adcl
out
or
or
xchg
xor
out
std
xchg
xor
push
sub
cmp
or
jmp
ret
negb
xor
andb
insl
mov
pusha
add
arpl
push
fs
cli
cmp
flds
mov
popa
lahf
jns
mov
pop
adc
fldcw
in
xor
je
or
mov
arpl
xchg
pop
iret
pushf
imul
push
mov
dec
test
jp
mov
adc
dec
mov
jns
sub
unpcklps
xchg
jbe
lea
ret
adc
sub
add
xchg
repz
mov
mov
xchg
jne
xchg
into
data16
sub
shrl
pusha
add
out
in
sbb
lods
in
movsl
std
inc
sbb
mov
stos
fwait
leave
inc
dec
aam
sbbl
jge
mov
jge
mov
aaa
fnstsw
pop
push
add
js
out
int3
shrb
xchg
mov
xor
lretw
imul
dec
mov
mov
sub
xchg
sti
jb
outsl
xor
and
sbb
std
sub
mov
jge
mov
and
sbb
mov
cmp
xchg
lods
push
sar
mov
lahf
std
fs
ja
in
inc
dec
mov
notl
stos
mov
xchg
jp
fdivs
imul
jge
stos
int3
push
clc
inc
add
mov
push
popa
mov
and
into
xchg
mov
call
rol
mov
movsb
sbb
dec
movsb
mov
popf
gs
adc
push
nop
mov
shrb
insb
or
cld
adc
out
mov
leave
loop
mov
out
movsl
push
inc
push
lods
ficoml
movsb
cmp
mov
cltd
dec
mov
sbb
test
dec
xchg
pop
or
ljmp
mov
add
cmp
lret
jg
aas
pop
add
pop
adc
or
xchg
mov
test
mov
dec
mov
rcll
cmp
loope
mov
mov
xor
insb
push
insl
repnz
mov
mov
adc
in
xchg
mov
jo
sti
inc
sbb
js
xor
jns
lret
cmp
add
cmpsl
pop
pop
and
mov
outsl
xchg
jg
out
jns
inc
ret
test
and
sbb
mov
sub
lss
add
shl
lret
mov
or
xchg
pusha
push
pop
pop
fwait
lods
clc
lret
cli
push
rcrl
mov
cltd
in
fnsave
push
je
iret
xchg
sub
add
xchg
stos
xor
sbbb
xchg
shrl
popf
pop
lods
imul
daa
fcompl
cmpsl
jmp
ret
ja
jp
sbb
dec
push
repz
sti
aaa
lcall
ja
mov
pushf
push
lcall
pop
test
mov
push
and
fnstsw
cmpsb
push
pop
and
aas
test
inc
setbe
mov
aas
fildll
inc
jle
mov
xchg
inc
mov
das
adc
push
pop
and
shll
and
jae
xchg
push
xchg
xchg
xor
shlb
leave
and
xchg
imul
leave
mov
mov
andl
mov
jae
mov
stc
lock
push
mov
test
pop
mov
fmuls
sti
es
jle
inc
cli
mov
in
xchg
push
ds
dec
lods
andl
mov
fwait
outsl
movb
sub
out
and
mov
call
pop
out
sub
adc
inc
lcall
inc
mov
lahf
dec
cmp
cwtl
jo
incl
aad
mov
cmp
or
sbb
ret
filds
pop
sbb
mov
int3
imul
cmp
scas
add
inc
jl
aaa
or
lret
mov
or
out
jmp
pop
mov
iret
inc
gs
in
outsb
fsubp
bnd
jge
jl
fwait
scas
scas
ret
into
sbb
jp
and
leave
cmp
ja
scas
nop
les
sbb
mov
jle
mov
mov
aas
pop
fnstenv
andb
cmp
cmpl
or
add
in
push
jo
mov
jl
pusha
adc
jne
push
or
cs
pop
mov
aad
and
jnp
call
int3
sbb
xor
adc
fldl
xor
popf
cmp
mov
out
jmp
add
xor
inc
jge
rclb
dec
push
loop
and
sub
mov
inc
adc
pop
daa
out
ds
mov
mov
lea
movsb
dec
cltd
fimull
popf
mov
sti
xchg
jne
hlt
rorl
xor
lea
and
jge
and
pop
int3
out
jne
pop
xchg
lods
fsts
lods
mov
dec
and
and
outsl
jl
push
push
push
jb
leave
lret
inc
cmp
xchg
sub
pushf
and
pop
mov
mov
xor
orb
clc
shrb
mov
mov
mov
popf
mov
mov
cmp
call
in
and
xchg
sbb
xor
ljmp
pusha
jnp
sbb
neg
enter
mov
mov
enter
xchg
imul
mov
mov
push
cmp
adc
jmp
aas
xchg
and
adc
fidivrs
or
bound
filds
in
sub
inc
ficompl
loop
popf
imul
sbb
or
mov
xchg
cmp
inc
sbb
push
pop
inc
leave
daa
sub
ret
ret
mov
fmull
sub
xor
jne
xchg
packuswb
adc
lahf
or
xlat
int
outsl
push
mov
dec
push
xorl
fimull
insb
adc
data16
pushl
add
adc
fisubrs
cmp
add
xor
pop
pop
lret
dec
into
adc
xchg
nop
or
and
mov
fwait
jecxz
lods
enter
add
and
lcall
lods
push
and
outsl
mov
les
fadd
or
push
or
fwait
push
jns
mov
subb
jle
lcall
xor
leave
mov
repnz
mov
cld
fwait
add
xor
pusha
sbb
sarb
adc
incl
aas
mov
test
scas
or
gs
push
or
lret
adc
ss
push
mov
pop
ret
cmpsb
mov
sbb
push
adc
and
std
std
xchg
addb
int
leave
push
sti
and
es
jl
jg
jne
pop
jl
addr16
mov
inc
hlt
ror
imul
repnz
dec
cmc
mov
xchg
jnp
mov
aaa
ds
iret
lods
push
push
xchg
data16
inc
sub
sbb
mov
xor
pusha
popf
dec
js
inc
mov
mov
cwtl
mov
or
xchg
ds
jge
sub
sbb
mov
xor
out
sub
ret
fwait
pop
inc
ret
mov
mov
push
mov
pop
and
outsb
jno
fidivs
clc
jae
sti
fwait
and
popa
in
xchg
xchg
push
ss
sbb
das
add
jae
jo,pt
lds
and
jns
xchg
jns
cmp
sub
push
out
lea
push
cmc
jnp
push
inc
jle
in
rol
xor
adc
orl
mov
mov
sti
cmp
dec
ja
fnstsw
cltd
xorb
shll
and
fcmovu
mov
and
mov
add
jns
idivl
mov
sar
daa
loopne
outsb
add
jmp
loopne
mov
push
inc
clc
inc
test
test
xor
cld
mov
push
or
dec
pop
jle
push
mov
inc
adcb
test
lea
loopne
push
pushl
stos
and
les
xor
mull
aam
mov
ds
jne
aaa
aaa
push
incb
enter
xchg
cwtl
repz
push
jg
sarl
push
cmp
sarb
push
cmpsb
sub
sbb
rclb
jb
inc
jmp
bound
test
scas
lret
mov
stos
and
ret
mov
xor
mov
sbb
fdivl
fdivrp
and
or
js
dec
out
mov
xor
pop
mov
fnstsw
or
sub
sbb
xchg
sub
xchg
pop
dec
fildl
xor
sub
jmp
test
imul
xor
add
int
jo
push
hlt
adc
fwait
mov
insb
push
pop
mov
loope
mov
es
and
repnz
movd
mov
cmp
aam
subb
mov
es
or
out
mov
push
cmc
test
mov
xor
jb,pn
jo
jecxz
cmp
push
or
and
sbb
push
xor
lods
into
jecxz
cli
adc
cmc
jl
in
xchg
icebp
jne
jecxz
inc
dec
mov
lods
pop
mov
cli
jnp
inc
aaa
push
dec
pop
mov
insl
jp
inc
add
pop
xor
cmpb
scas
mov
lods
test
in
lds
xchg
lret
mov
xor
inc
aas
popf
or
loope
lret
adcb
cwtl
jo,pn
mov
add
scas
mov
roll
mov
repnz
add
mov
add
cwtl
loopne
xchg
sub
fdiv
jmp
inc
inc
push
imul
add
ds
nop
dec
mov
iret
xor
out
jne
and
sti
psraw
sub
aad
xlat
mov
jmp
jle
mov
fidivrl
jne
xor
jg
stc
bound
js
mov
inc
aaa
lods
fsts
mov
insb
inc
ret
js
sub
in
xor
cmp
rclb
xor
mov
pop
mov
mov
push
push
nop
mov
jb
cmp
mov
subl
dec
imul
sbb
and
dec
add
dec
std
lods
in
ja
pop
push
loope
pop
push
std
dec
inc
lcall
popf
stos
ror
in
inc
push
and
cmpsb
and
nop
subb
in
sbb
enter
sub
cmp
je
or
into
sub
mov
cmp
push
aaa
mov
push
cmc
stos
dec
sbb
sar
shl
inc
xchg
les
adc
jl
cmpsb
ret
and
cmp
daa
enter
push
pop
lret
inc
pop
clc
cmp
jns
arpl
ja
push
sbb
out
push
daa
mov
inc
add
jb
das
data16
inc
mov
insb
subl
xchg
or
or
stos
dec
pop
mov
sub
imul
sub
xchg
fsub
in
dec
jne
sbb
or
dec
xchg
fists
pop
lcall
cmc
pop
cmp
repnz
sub
insl
cmc
testb
sbb
loop
lds
adc
sarb
ljmp
rorl
pop
das
push
push
xchg
mov
pop
loopne
loop
out
int
sahf
lret
lret
mov
jl
or
addr16
mov
stos
fsts
cmp
or
into
fcoms
shll
movsb
sub
and
add
inc
std
iret
add
mov
cmpsl
adc
sub
jo
lea
mov
insl
aas
iret
jnp
jge
sbb
or
pop
test
adc
sub
adc
repnz
sub
adc
jno
jbe
sbb
movsb
in
and
scas
jnp
mov
push
jne
out
fidivs
add
jecxz
pusha
push
scas
adc
rep
cmp
mov
shll
ret
mov
pop
jge
lods
fcmovbe
sbb
xchg
mov
out
aad
xchg
insb
iret
mov
pop
cmp
cs
inc
push
stos
cmp
mov
jg
out
aam
add
das
out
mov
pop
mov
dec
xor
arpl
push
sub
cld
adc
lock
xchg
or
inc
sbb
xor
push
push
adc
aad
mov
rolb
inc
cmp
jne
mov
jno
imul
xchg
in
jb
in
dec
inc
imul
clc
sub
mov
enter
and
mov
add
cmp
push
or
dec
data16
jnp
stc
xchg
out
enter
mov
daa
push
rcrl
icebp
mov
fwait
mov
repz
inc
inc
dec
xchg
pop
daa
daa
imul
mov
loopne
and
nop
xchg
sahf
pop
cmp
loopne
mov
cmpsb
mov
loope
test
aad
sbb
pop
lods
dec
add
out
xchg
sub
in
or
test
cmp
repz
lret
loope
rcrl
sub
push
mov
movsb
mov
push
xchg
out
xchg
js
push
xchg
inc
jp
bound
addl
dec
xchg
mov
push
cltd
pop
cmpl
mov
sbb
add
rcrl
push
outsl
idiv
fimull
or
push
or
mov
jecxz
rorb
mov
push
sub
leave
lret
mov
stc
pop
rcl
cli
dec
adc
arpl
mov
add
or
lods
mov
insb
or
jns
lahf
and
inc
mov
xchg
mov
or
dec
and
xorb
rcll
push
jae
ljmp
fnstenv
rorb
test
out
mov
ret
call
lret
sub
cmp
dec
ficompl
repnz
xor
daa
lods
sbb
sub
xchg
lods
cmpsb
in
mov
mov
sub
mov
jno
jns
test
xor
jb
xchg
pop
sbb
xchg
lods
push
mov
testb
or
push
push
icebp
iret
call
mov
push
cmp
jbe
sub
and
lods
or
push
pop
cld
mov
xchg
subb
and
mov
int
pop
inc
adc
rcrl
loope
test
sub
mov
lea
mov
stos
jne
push
lret
inc
insl
sbb
add
mov
jno
ror
push
fiadds
xor
insl
out
insl
xchg
ljmp
jns
faddl
mov
mov
sub
gs
or
mov
mov
fldl
push
fdivs
or
jmp
rcrl
mov
xor
mov
inc
jbe
je
sarl
sarb
fsubs
arpl
mov
ja
js
ljmp
jnp
xchg
mov
dec
leave
aas
mov
je
mov
push
add
cltd
fnstsw
jmp
lock
jl
imul
dec
add
xchg
data16
mov
iret
xor
xchg
adc
xchg
mull
lods
or
mov
ret
xlat
push
aam
xchg
sub
jl
sbb
test
pop
adc
into
lods
cli
mov
xor
push
fwait
lea
or
cmp
test
fsts
cltd
outsl
sti
or
jge
dec
dec
ds
mov
cmpsb
mov
sub
ret
ljmp
sbb
inc
adc
mov
pop
ja
fisubl
push
aam
je
push
mov
loope
roll
mov
dec
stc
ja
and
je
mov
push
xor
pop
push
xorl
pop
cmp
leave
leave
int3
data16
int
mov
test
imul
sbb
popa
jnp
aas
cmc
mov
xchg
adc
pop
scas
roll
push
pop
mov
pop
lods
cmp
in
hlt
adc
and
lret
adc
mov
adc
gs
jge
fstps
insl
pop
push
out
mov
sub
xchg
mov
sbb
outsb
cwtl
jmp
xor
push
int
out
in
xchg
stos
push
jb
in
jno
sbb
push
stos
jge
cmp
mul
test
mov
cltd
xchg
into
xor
cmp
inc
cmp
xor
jmp
testl
in
mov
inc
push
cli
add
jp
pop
fnstsw
popa
call
rclb
jnp
jg
pop
clc
sbb
loop
popa
add
ljmp
sbb
scas
lods
movl
jnp
lds
scas
icebp
xor
xor
jp
cmp
and
push
jns
ret
in
in
das
enter
int3
pop
push
inc
insl
push
mov
pop
and
lret
pop
inc
mov
xchg
xor
push
fisttpl
jbe
sub
mulb
outsl
aad
ja
push
cmp
jl
add
daa
sbb
lret
fwait
push
mov
push
movsl
gs
scas
insb
sbb
add
mov
mov
add
shll
cmp
fsubrs
adc
xlat
outsl
pop
stc
lahf
clc
mov
lods
decb
outsb
mov
lret
fdivs
sti
lcall
xor
jbe
arpl
jnp
cmp
inc
sbbl
mov
ret
adc
pop
dec
stc
jb
insb
cs
imul
xchg
sub
daa
mov
dec
push
mov
cld
flds
mov
stc
cwtl
ss
cmp
test
inc
incb
adc
mov
int
test
imul
add
rcll
jbe
adc
lds
mov
mov
push
aam
inc
lods
fsubs
cmp
mov
jmp
gs
or
xchg
loopne
sub
cmp
stos
insb
mov
cmp
sub
loope
pusha
push
xchg
mov
sar
sub
fs
or
jbe
cmp
mov
mov
aaa
imul
pop
add
lods
out
cmpsl
xchg
push
loopne
sbb
xor
enter
fcmovbe
push
mov
sub
lret
jns
inc
jp
dec
lock
or
pop
add
inc
mov
mov
or
jl
rolb
sub
out
mov
nop
lahf
push
enter
cmp
enter
test
add
adc
inc
stos
add
adc
dec
cs
fbstp
fdivp
shl
inc
sarl
popa
fildll
sbb
jb
lods
and
dec
and
pop
sbb
xor
int
fbstp
pop
add
das
mov
scas
test
lahf
mov
mov
fnstsw
inc
pop
out
ficompl
mov
xor
dec
or
cld
sub
adcb
pusha
sub
inc
ret
pop
push
pop
addr16
inc
cs
stos
sub
push
jo
push
inc
mov
into
fmul
xor
out
daa
push
jge
add
addr16
std
lret
adc
mov
jmp
icebp
data16
push
add
js
clc
sub
mov
pop
cld
sub
lods
std
sbb
dec
loopne
movsb
and
hlt
ss
iret
popa
push
pushf
jmp
mov
pop
stc
fsubr
push
sub
das
and
in
cltd
lahf
int3
enter
cmp
adc
insb
outsl
cmpsl
jo
ret
ljmp
and
dec
fnstsw
pop
push
popa
fucomp
mov
sahf
cwtl
sub
mov
lcall
rorl
dec
cld
test
test
mov
push
test
jecxz
test
dec
pushf
ret
push
movsb
push
sti
mov
pop
pop
pop
ret
xor
xchg
dec
sbb
in
rcl
or
clc
sarb
cmp
jbe
subb
jecxz
aas
mov
adc
mov
inc
pop
dec
push
cmp
in
out
push
jb
pop
stc
repz
enter
xchg
test
and
jnp
add
mov
adc
ds
inc
mov
repnz
out
lds
sbb
xor
mov
fdivs
divb
mov
mov
icebp
mov
inc
and
xor
sub
mov
xchg
xchg
mov
cmp
push
or
mov
lcall
push
jecxz
pop
fisubs
test
in
mov
gs
into
sub
pop
push
pop
xchg
push
jno
mov
sbb
inc
arpl
into
fs
push
adc
pop
icebp
inc
cmp
js
scas
scas
rorl
cld
stos
dec
adc
sbb
orl
sbb
lock
jl
call
shll
fldl
rclb
xor
lcall
sbb
jo
rcl
and
rclb
sub
mov
ret
xchg
jecxz
inc
lds
and
mov
mov
cmpsl
mov
stc
push
lea
aaa
pop
scas
lret
lret
je
adc
movsl
cltd
cmp
and
add
stos
adc
xchg
add
arpl
push
lock
cmp
add
loop
ror
pop
out
xchg
add
adc
je
and
loop
pop
push
shll
adc
or
pushf
mov
lds
call
sbb
imul
imul
jb
dec
stc
jbe
pop
pop
xchg
shlb
mov
cmp
hlt
stos
dec
repz
mull
gs
and
mov
adc
iret
pop
inc
pop
push
jg
movsl
andb
scas
cli
ja
inc
aaa
cmp
push
push
push
pusha
daa
fwait
enter
xchg
jmp
int3
sbb
mov
divl
lods
sbb
xlat
cmp
sub
mov
xchg
gs
int
fwait
adc
scas
cmp
xor
xchg
fs
mov
add
cmc
mov
add
scas
push
jge
popf
lahf
inc
stc
dec
xchg
ficompl
cmovle
jge
mov
or
and
jns
mov
clc
rcrb
adc
add
popf
sub
rclb
and
cmp
aaa
dec
popl
shr
out
sub
sbb
jns
stos
leave
outsb
push
sub
and
dec
addr16
push
insl
mov
inc
mov
fdivl
xchg
int
pop
orl
mov
xor
adc
add
repnz
dec
push
sbb
jge
je
cmp
nop
mov
aad
and
ss
int
pop
out
leave
pop
jp
in
cli
push
and
xor
repz
lds
jmp
xor
loopne
mov
clc
jnp
fsts
add
pop
xor
or
std
outsl
cmp
lods
iret
mov
jno
stc
xchg
jmp
push
cld
pop
jnp
inc
lahf
nop
ret
repz
fisubrs
sahf
hlt
adc
dec
jmp
add
push
add
bound
xchg
scas
mov
ljmp
push
cs
stc
inc
cmp
sti
jmp
int3
mov
sahf
icebp
in
movsl
xor
stc
xlat
aaa
aad
pushf
sbb
fisubs
inc
ret
outsl
jp
ds
xchg
dec
or
rclb
fs
sub
inc
ret
mov
lahf
mov
mov
or
test
and
mov
sub
pop
scas
pop
sbb
stos
sbb
pop
dec
movsb
dec
aas
jmp
xor
nop
fs
jb
stc
mov
push
fs
sbb
pop
cmp
hlt
sub
mov
cwtl
mov
add
bound
xor
std
mov
inc
xorb
scas
fdivrp
dec
adc
mov
fcomp
cmp
bound
mov
push
movsb
xor
sub
inc
push
rorb
cmc
mov
mov
sub
mov
fidivl
lret
mov
popf
mov
stc
cltd
out
inc
xor
cmp
xor
xchg
shll
jl
or
cmpsl
pop
or
cmpsb
cmp
int
mov
lahf
stos
out
sbb
jnp
addr16
jae
rcrl
stos
dec
pusha
addr16
push
jmp
mov
jbe
fstp
cmp
out
and
pop
and
mov
adc
cld
es
inc
xchg
stos
clc
out
imul
daa
xchg
fs
imul
lods
add
jge
jne
ljmp
pop
sbb
sti
xor
shll
inc
add
mov
sbb
pushf
inc
ret
adc
push
mov
les
sub
dec
jge
dec
mull
out
popf
or
lds
lods
popa
mov
xchg
mov
push
fwait
inc
shr
lods
arpl
mov
out
int
repz
pusha
xchg
pop
stos
jmp
jecxz
and
cli
dec
jl
or
dec
jg
mov
outsl
testb
jge
fldl
cld
shl
sbb
jmp
xchg
inc
xchg
stos
movl
inc
push
ret
sbb
xor
cltd
cltd
fidivrl
test
dec
xor
shll
push
mov
shlb
lods
xchg
stos
mov
stos
leave
dec
sub
dec
aas
sbb
push
adc
les
xchg
pop
add
mov
sti
mov
ja
fwait
adcb
fisubrl
add
ret
leave
mov
nop
arpl
cmp
out
int
ja
mov
hlt
xor
in
jecxz
mov
test
xor
aaa
and
call
mov
lea
mov
add
shlb
add
bound
les
push
xchg
jb
jo
xor
clc
ret
cmpsb
fsub
stc
sub
mov
or
sbb
dec
dec
test
aad
pop
fs
ljmp
addr16
bound
lahf
inc
popf
mov
pop
scas
push
insl
cmp
inc
push
into
cmp
jecxz
mov
xor
push
stos
out
stc
or
fisubrs
ds
enter
test
inc
fisttpll
mov
je
jp
push
mov
jle
adc
mov
js
xchg
ret
call
movsl
xor
mov
js
adcl
and
push
mov
sti
or
clc
inc
xchg
cmpsl
jmp
and
xchg
cmpb
xor
cmp
mov
xor
bnd
sti
inc
pop
dec
cltd
icebp
call
jbe
int3
in
sbb
push
jl
mov
jmp
les
xchg
mov
mov
jle
test
rclb
pop
xor
lcall
sbb
cmp
in
aas
sub
dec
mov
lock
and
in
bound
jne
in
imul
negb
mov
dec
imul
andl
xor
cwtl
cld
outsl
mov
je
dec
jp
sub
loop
jge
orl
popf
jae
fisubrs
scas
cltd
push
xchg
xor
pop
sbb
test
stc
hlt
sub
push
sarl
mov
mov
and
sub
dec
push
mov
lahf
lock
add
fists
push
mov
dec
insl
jae
test
mov
push
ljmp
sub
iret
dec
fstpl
pop
inc
pop
test
daa
cmpsl
adc
pop
or
insb
mov
cmc
sbb
imul
mov
fucomp
xor
cmp
dec
xorl
int
sbb
pusha
in
inc
push
mov
mov
push
xor
lret
and
out
fidivrs
and
xchg
bound
push
or
aaa
xor
and
inc
or
imul
jae
push
add
nop
xorl
mov
xor
out
push
adc
mov
leave
scas
dec
cmp
out
dec
dec
mov
das
sbb
adc
push
int3
add
cltd
sbb
out
test
jp
scas
cmp
xchg
loop
jae
mov
cmp
mov
xchg
inc
insb
fistpll
mov
pop
fwait
into
xchg
dec
and
subl
add
inc
andb
cmovne
and
lds
fldt
sbb
push
cmp
adc
dec
pop
mov
rcr
fstpl
mov
shlb
mov
inc
mov
dec
shr
push
ja
imul
push
mov
in
adc
mov
and
lcall
adc
dec
gs
test
imul
fbld
ss
icebp
cmp
lret
jle
fs
mov
shr
fldt
inc
add
addr16
call
gs
or
ja
enter
push
fwait
in
or
lods
out
jp
data16
jmp
stc
pop
or
pop
mov
leave
sub
jbe
push
popf
mov
or
adc
jecxz
movsb
sub
jne
inc
js
mull
adc
out
push
xor
and
fistpl
es
or
dec
xor
imul
or
ss
shrl
xchg
pop
ret
icebp
pushf
nop
pop
push
std
sbb
pop
or
mov
or
xchg
pop
shll
xor
mov
sub
pop
cmpl
out
sbb
pop
inc
outsb
and
leave
jb
jle
inc
dec
das
mov
sub
loopne
hlt
inc
scas
lock
mov
sub
loop
ja
out
inc
movl
mov
es
sbb
aaa
bound
inc
out
jmp
sub
xor
test
fimull
sti
das
ret
mov
loopne
popa
imul
daa
dec
pushl
adc
or
test
push
push
ja
dec
mov
test
addr16
ret
mov
mov
or
xchg
xchg
inc
or
shrl
add
dec
mov
sahf
cmp
hlt
test
cmp
pop
jne
je
adc
clc
gs
mov
icebp
add
sbb
ja
and
push
aaa
daa
and
mov
lods
stos
cmp
outsl
cwtl
test
jno
out
outsb
inc
lods
call
in
pushf
pop
ficomps
in
fsubp
dec
mov
add
xor
rclb
ss
cmp
lahf
or
adc
stos
pop
jae
xchg
mov
add
jns
mov
dec
lock
rcrl
movsb
in
push
dec
mov
push
data16
jb
sbb
jp
leave
pop
inc
lcall
push
inc
xor
mov
dec
sub
scas
outsl
jle
push
negl
aad
stos
out
lods
addr16
pop
movsl
loop
inc
pusha
jno
ficompl
les
adc
or
scas
dec
outsb
insb
outsb
movsb
pop
jns
add
out
jge
sarb
int3
in
into
out
call
lea
mov
mov
int
addr16
lcall
enter
add
adc
cs
rcrl
pop
inc
xchg
mov
xor
movsb
cmp
mov
mull
loop
adc
insl
add
push
inc
jp
xchg
cmp
mov
push
repz
jmp
jp
push
push
les
ljmp
subl
into
push
sbb
fs
mov
inc
push
in
shlb
xchg
in
setge
or
mov
sub
pop
rorb
dec
or
rorb
push
out
mov
jbe
fcoml
insl
outsb
sub
arpl
inc
dec
jl
xchg
loopne
ret
and
add
jae
and
movl
jno
xorl
jmp
xchg
lcall
jle
imul
mov
jae
hlt
adc
sub
xchg
mov
arpl
pop
sahf
and
lahf
pop
sub
cmp
dec
sub
sbb
rolb
cmpsl
cmp
push
pop
xchg
sbb
lahf
jecxz
sahf
and
adc
xchg
les
sbb
sbb
arpl
test
mov
frstor
or
inc
arpl
push
scas
mov
stc
inc
dec
mov
cwtl
fildll
testl
xchg
push
repnz
pop
jno
aaa
mov
out
aas
and
loope
jecxz
clc
sub
out
or
cmp
mov
sub
enter
push
push
repz
pop
push
pusha
mov
ss
shrb
cld
push
mov
push
dec
das
mov
add
xchg
rclb
jnp,pt
sub
mov
cmpsl
dec
scas
push
cld
push
pop
icebp
or
lods
sahf
xor
testl
bound
mov
testb
popa
jnp
hlt
inc
mov
dec
xchg
inc
pop
out
push
popa
sub
aad
xor
test
int
mov
mov
rorb
out
sbb
aad
fbstp
push
or
daa
adc
push
out
aaa
cwtl
addb
sbb
outsb
mov
cs
mov
push
cmp
push
sbb
mov
jle
shll
flds
in
pushf
out
adc
adc
fistpl
push
popa
stos
aam
movl
cmovns
push
jnp
mov
or
sbb
add
dec
jle
jg
mov
inc
xor
cltd
sub
push
mov
and
cli
cld
cmp
imul
in
loope
pop
cmp
and
pop
insl
jl
iret
je
loope
pop
and
adc
arpl
test
js
push
std
mov
bound
fnsave
ss
mov
inc
or
insb
roll
mov
jl
inc
mov
xor
xchg
jb
sti
xchg
mov
outsl
fwait
nop
xor
icebp
in
sbb
lods
and
jnp
dec
dec
inc
imul
in
loop
or
insl
adc
outsl
push
ja
jp
push
mov
cmp
inc
xchg
mov
mov
aaa
mov
xor
push
xchg
sub
and
repnz
iret
xchg
in
mov
cli
rorl
cld
loope
loop
bound
xlat
dec
jb,pt
mov
cli
testb
sub
xchg
test
dec
loope
sti
mov
test
shrl
inc
mov
ret
mov
cmp
sub
cmc
mov
sub
outsl
jb
dec
repnz
cmpsb
loope
mov
pop
ret
pop
or
mov
mov
fidivs
movsb
addr16
sbb
xchg
sahf
xchg
test
inc
les
adc
idivb
dec
mov
popf
das
xor
roll
enter
push
loop,pt
nop
ss
aad
bound
lods
push
cmpsl
out
imul
cmp
jns
int3
inc
dec
loope
decb
addl
test
in
and
jae
out
lret
ret
dec
imul
lods
lock
mov
adc
push
sub
ja
nop
add
xchg
xor
adc
sbb
jne
ret
int3
aaa
push
pop
lods
outsb
in
xlat
gs
ret
test
pop
jmp
addr16
testb
xchg
sahf
or
inc
sub
push
ja,pt
imul
pop
pop
mov
lahf
popf
movsl
addr16
lea
into
mov
in
pop
fisttpll
jno
jp
xor
mov
hlt
pop
cmp
test
pop
jns
das
js
aas
dec
cmp
rorb
push
mov
dec
ja
lods
push
clc
jl
mov
inc
in
aaa
push
mov
mov
call
dec
ljmp
adc
mov
scas
mov
dec
cmp
dec
mov
lods
jno
or
hlt
sbb
mov
jmp
leave
push
sbb
add
rcrb
sahf
cmp
push
jb
sbb
xor
test
negb
mov
lock
ror
fsts
mov
push
test
cmp
out
xor
mov
mov
shll
push
inc
cmp
shlb
sub
and
cmp
inc
sub
add
dec
and
jns
mov
mov
es
js
xlat
rolb
int3
sbb
sarl
xchg
push
ds
xchg
mov
in
dec
sub
add
fwait
adc
adc
in
xchg
xchg
push
push
push
int
mov
inc
lds
movsb
test
xor
adcb
push
mov
mov
push
addb
pop
aas
fsubl
insb
lods
lea
dec
mov
fisttps
or
loopne
pop
test
xchg
cmp
sbb
adc
inc
push
xor
xor
cs
test
rcrl
je
mov
pop
sub
icebp
or
cmp
std
mov
pop
inc
pop
push
sub
lea
sbb
xlat
js
ret
jb
std
jo
fistpll
jp
mov
out
bound
xchg
mov
push
mov
push
fwait
sbb
enter
hlt
jecxz
mov
jge
mov
xchg
fstpt
aad
insl
and
std
sub
xchg
pop
jecxz
mov
jo
data16
xlat
std
xor
mov
inc
fwait
push
repz
lds
xchg
mov
insl
or
pop
cli
or
int
jmp
cwtl
mov
mov
jne
jl
xor
sub
xchg
addr16
movsb
ds
and
push
sub
xchg
ret
lock
sbb
or
mov
jg
test
sub
leave
jmp
xor
pop
int
adc
dec
fisubs
xchg
sbb
sbb
jno
fisttpll
xor
data16
je
sub
or
in
or
ret
es
xchg
sbb
in
push
cltd
sub
mov
mov
outsl
ficoms
lea
cmp
jg
sub
xlat
in
roll
sbb
leave
xchg
inc
cs
sub
out
shl
mov
scas
arpl
mov
mov
dec
clc
test
xor
ljmp
pop
daa
pop
jbe
pusha
cld
add
push
mov
pop
repnz
lock
mov
rol
dec
pusha
daa
stos
in
dec
lret
pusha
fisubs
aaa
popa
and
xor
cs
rdpmc
ror
movsb
jno
sub
les
pop
es
mov
jbe
xorl
sbb
pop
in
inc
int
cmp
sub
inc
add
push
je
jne
pusha
lret
mov
int
out
or
sub
mov
mov
pop
push
push
and
bound
gs
dec
sahf
fdivs
fldt
iret
cltd
insl
pop
aaa
call
or
ret
clc
xchg
in
cmp
lds
lea
xlat
mov
out
xor
mov
out
aad
popf
or
outsb
fsubs
xor
fdivl
add
out
pusha
movhps
fsub
pop
pop
xor
cmp
insb
jb
sti
add
ret
xchg
and
iret
mov
pop
jae
jle
pop
add
lock
dec
jae
leave
jb
inc
fisttpl
movsl
add
pop
imul
cmp
insb
inc
sbb
fldcw
add
outsl
bound
sub
or
add
imul
mov
sub
pushf
cmpsb
push
repz
loop
mov
ja
fisubl
in
popl
inc
ds
scas
ss
cmpsb
popf
mov
ficoms
dec
scas
jp
jmp
xchg
sub
mov
std
add
aam
sub
enter
xchg
jns
insl
adc
fldcw
jmp
lcall
adc
xor
jbe
lahf
lret
sbb
adc
dec
cs
stos
push
push
repz
shrl
adcl
scas
leave
dec
dec
fstps
pusha
pop
ja
pop
mov
imul
rcr
mov
test
ljmp
sbb
jg
imul
jo
jno
sub
leave
enter
ds
or
imul
rclb
pusha
addl
aas
jmp
jp
sbb
mov
pop
pop
jecxz
outsl
leave
lret
pop
addl
sbbl
jle
dec
aad
loopne
pop
adc
sar
addr16
jl
adc
mov
scas
in
gs
sbb
clc
xor
mov
inc
cli
jge
push
jle
sti
jg
jbe
xor
jne
hlt
cmp
mov
dec
dec
mov
jnp
orb
inc
adc
fimuls
out
or
mov
aas
add
push
test
cmc
imul
xor
adc
test
les
repnz
mov
lcall
push
and
gs
dec
ret
arpl
jmp
in
inc
dec
adc
out
cmpsl
divps
adc
je
shrl
lds
adc
fsubl
mov
sub
push
das
fistpll
sbb
inc
jecxz
mov
xor
out
or
add
cld
push
xor
insb
inc
dec
adc
es
pop
dec
test
popa
loope
mov
jbe
imul
jne
loope
xchg
into
mov
xorl
sub
clc
mov
xchg
inc
scas
lods
aas
rorl
aaa
lret
push
jecxz
cmp
and
data16
and
out
popf
hlt
not
inc
or
repnz
das
fdivs
imul
jle
js
push
ja
lds
adc
mov
xor
pop
insl
dec
add
jle
mov
adc
fcoml
das
jg
and
stos
sub
shlb
push
cmp
add
xchg
pop
js
pop
adc
sbb
out
fbstp
xchg
mov
out
inc
xor
or
lods
std
pop
or
xchg
sbb
pop
fdivr
jl
jnp
fdivrl
notl
in
movsl
add
lret
fisttpll
imul
roll
jle
imul
pop
dec
mov
not
in
mov
std
xchg
cmp
push
rorb
add
sbb
pop
pop
push
mov
push
mov
xchg
lods
jmp
or
fidivrl
inc
pop
fwait
movsb
ja
aaa
fwait
addr16
and
or
pop
jp
sub
inc
hlt
xor
and
jg
push
jns
lahf
push
xor
arpl
dec
xlat
or
add
and
cmp
mov
js
xor
fistps
in
insb
sbb
dec
popf
notl
fbstp
shr
je
imul
mov
push
inc
fstpl
pop
cmp
rclb
pop
ds
loop
bound
or
xor
push
jmp
arpl
jle
das
dec
adcb
xlat
pop
inc
dec
push
xor
shll
mov
add
inc
sub
outsl
push
xorl
xor
push
push
dec
pop
je
dec
sbb
arpl
mov
xchg
insb
shlb
negb
add
jge
sub
inc
add
xchg
out
scas
sub
icebp
pop
loop
push
iret
in
mov
and
stos
push
fdivl
cmp
jmp
out
repnz
adc
push
std
lods
arpl
sub
push
roll
cmp
sub
mov
stos
fdivl
jecxz
cmpsb
in
jl
dec
mov
or
imul
jnp
xchg
jp
xchg
dec
add
push
lea
decb
fidivrl
outsb
daa
xchg
push
fidivs
inc
je
dec
out
enter
test
mov
mov
mov
mov
cmp
in
pop
ja
and
lret
sbb
inc
mov
cmc
xorb
stos
sbb
test
insl
fisubrl
bound
push
leave
nop
enter
imul
inc
push
in
cmp
cmp
push
sbb
loopne
adc
mov
addr16
xchg
xchg
or
jle
test
dec
push
or
stc
push
popf
lcall
and
and
pushl
repnz
or
adcl
adc
fidivrl
aad
adc
mov
dec
outsb
in
incb
inc
xlat
xorl
lret
sti
add
mov
and
mov
mov
rcrb
js
arpl
pop
xor
mov
loop
inc
or
add
adc
rcrb
loop
cmpsl
incl
xor
adc
rcr
mov
pusha
dec
clc
and
sbb
icebp
push
pusha
dec
sahf
shll
in
add
pop
mov
push
addb
les
data16
decl
mov
pop
mov
pop
imul
dec
out
xor
sub
and
mov
inc
loope
dec
ret
pop
in
movsb
xchg
idivb
push
inc
cli
cmc
adc
xchg
pop
ss
call
test
mov
loop
mulb
fcmovnu
scas
mov
inc
pushf
popl
or
pop
jnp
idivb
add
xchg
inc
add
mov
push
mov
push
std
fisttpll
testl
cmp
fsubrl
xchg
and
xor
js
lds
ljmp
sub
repz
imul
push
out
out
sahf
dec
sub
push
popf
jo
in
mov
xchg
xorb
fwait
enter
stos
add
adc
dec
add
leave
aam
jae
nop
shl
fdivrs
and
fisubs
insb
cmc
pusha
mov
push
mov
lea
mov
cmpsl
push
bound
ljmp
out
das
xchg
mov
scas
aam
lea
mov
jp
jg
rcr
lcall
cmpl
dec
rcl
add
notb
sub
pop
and
leave
mov
das
and
aas
iret
repnz
mov
dec
xchg
out
pop
int3
dec
xchg
add
xchg
mov
push
xchg
jg
xchg
push
jae
dec
mov
push
mov
mov
mov
push
loop
fcomps
out
out
push
jne
xchg
jg
das
jae
loopne
xor
js
ss
jno
jnp
loop
cmp
movsb
es
adc
je
out
cmp
jecxz
push
subb
popf
inc
mov
rol
adc
add
std
lcall
adc
inc
cld
jb
jl
out
je
test
and
imulb
cltd
sub
pop
cmpsl
inc
arpl
mov
stos
cmp
sarl
lods
sub
xor
outsl
rolb
gs
mov
sarb
leave
int
pop
xchg
shll
stos
push
sarb
jg
push
ret
loopne
pop
dec
repnz
loopne
push
mov
data16
xor
xor
cmpsb
xlat
popa
cli
neg
mov
call
xchg
jmp
or
mov
adc
cmpsb
cmp
push
es
jb
fdivl
rcll
sbb
adc
testb
and
stc
mov
dec
mov
mov
insb
xchg
add
repnz
cmp
mov
ret
cmp
sbb
jne
je
sbb
and
adcl
stos
in
mov
push
subb
aam
mov
jbe
and
int
outsl
cmp
test
sbb
adc
inc
adc
sbb
pushf
scas
imull
jge
jge
mov
loop
mov
mov
aam
or
pop
xlat
js
int3
push
and
and
aas
inc
mov
pusha
pop
or
or
shll
arpl
pop
add
test
addr16
js
dec
imul
dec
jecxz
lea
movsl
add
jp
inc
mov
in
pop
jno
addr16
popf
sbb
popf
jae
shrl
loop
mov
in
popf
out
outsl
mov
fidivs
jne
mov
test
sahf
jns
mov
outsl
dec
cwtl
push
mov
and
cmp
jns
aam
xor
push
or
jle
repz
mov
fwait
push
aam
sub
out
pop
adc
xor
mov
jmp
sub
add
lods
movsl
push
mov
cmp
add
push
inc
jmp
pop
dec
jge
lcall
imul
dec
adc
mov
or
lret
aaa
imul
mov
jmp
and
iret
inc
fdivs
push
cli
inc
lock
loop
ja
cltd
fs
jmp
push
js
and
and
cmp
pop
repz
and
cltd
lock
xor
outsl
cmp
movsl
lret
mov
ds
and
cmp
arpl
mov
sbb
add
xchg
leave
hlt
orl
mov
and
mov
leave
lret
sub
sub
push
movb
es
leave
pop
int
mov
or
sub
xorl
mov
jmp
int
pop
xchg
and
dec
xrelease
mov
jecxz
int
adc
mov
in
jg
popa
in
stc
xor
mov
fbstp
fs
js
jg
xchg
rcrl
shlb
das
add
call
or
in
aad
or
sub
cltd
or
mov
xchg
or
add
out
out
cmp
movsb
ret
pop
out
sarl
fbld
mov
add
jbe
cmp
push
arpl
popf
cli
inc
dec
cmp
pop
es
scas
mov
dec
sbb
push
orl
mov
pushf
mov
addr16
mov
xchg
xchg
jp
inc
pop
mov
lcall
int3
mov
loopne
and
lret
fadds
int3
aad
and
fsubs
clc
int3
js
je
inc
in
das
or
push
pop
inc
enter
test
mov
js
xchg
jle
add
fs
jmp
aas
jae
mov
aas
xchg
xchg
dec
aaa
fwait
mov
sub
or
ja
stc
xor
cwtl
xor
push
jbe
jge
pop
xor
ljmp
xor
ja
mov
push
mov
pop
pop
imul
jae
jns
into
sbb
and
add
cmp
fidivrs
rorb
sbb
adc
dec
in
leave
xor
sbb
jnp
ljmp
push
and
mov
aam
push
enter
mov
jl
push
push
push
gs
mov
pop
adc
outsb
fs
fldenv
jecxz
mov
mov
cmpsb
call
jnp
repnz
jmp
sub
int3
orb
inc
out
gs
inc
pop
or
in
cmp
fwait
jns
dec
pop
ret
out
rclb
inc
inc
sbb
cltd
push
jb
jl
add
push
xlat
jo
cmp
fwait
pop
data16
out
pop
sub
cmc
les
insl
xlat
jl
jge
fs
jns
add
pusha
aaa
push
jp
jbe,pt
or
lds
adc
cmp
dec
sbb
or
std
in
clc
or
mov
xorb
cld
dec
jl
cmpsb
jmp
dec
std
push
in
dec
cmp
xchg
stos
fst
cmp
fcomp
test
pop
sbb
mov
jge
pop
inc
mov
rep
loopne
stos
xchg
lock
nop
mov
or
in
out
mov
cwtl
outsl
xchg
pushf
jbe
fldt
jo
sbb
mov
cld
mov
out
icebp
negb
scas
mov
cld
xor
adcb
push
jns
jl
shl
jmp
loop
cmp
imul
and
and
bound
jl
popl
inc
insl
loopne
aaa
lahf
jb
and
lds
sbb
cmp
fwait
add
mov
pushf
xor
dec
js
enter
rolb
xor
dec
js
pop
imul
fs
gs
cmpsl
cmc
cs
inc
outsl
js
rorb
mov
mov
xchg
lcall
mov
stos
and
ja
mov
ret
sbb
xchg
mov
fdivs
pop
das
ss
sub
sbb
ds
sub
cmp
push
jp
sbb
dec
decl
pop
scas
and
ss
push
sti
dec
or
jbe
xchg
xchg
enter
pop
loope
sahf
loope
psllw
or
addr16
shl
imul
dec
sub
jb
push
mov
adc
adc
or
pop
ljmp
inc
cltd
dec
and
jecxz
sub
sbb
fisubrs
fwait
inc
inc
fldcw
je
fcmovnb
call
lret
nop
in
in
out
aas
and
fsub
mov
jno
jle
dec
stc
xor
ret
ja
iret
jecxz
loopne
sub
xor
es
xlat
cs
lcall
pusha
adc
fcoml
loope
jno
sbb
aaa
lahf
cmpsl
lea
outsb
and
push
inc
xchg
jae
mov
lods
enter
sbb
imul
loop
sub
cmp
pop
rcr
add
lret
jnp
xchg
imul
lea
in
arpl
cs
cmpsl
or
cli
negb
dec
add
rolb
mov
and
aas
je
pop
jge
rcrb
in
jnp
dec
or
xor
cld
jg
subb
scas
imull
out
ljmp
dec
mov
pop
sub
in
mov
xchg
clc
addr16
icebp
and
xchg
jne
sbb
push
xor
aad
and
mov
in
outsl
cwtl
aas
addr16
int3
xor
cmp
push
mov
movsl
rorl
in
cmp
sti
imul
pop
imul
pop
in
ljmp
jne
xor
aad
sbb
es
jo
arpl
mov
shlb
pop
and
out
shrb
pcmpgtd
and
add
xlat
sbb
jae
xorl
out
xorl
push
mov
movsb
ficomps
mov
aas
add
mov
iretw
in
rcrb
xor
movsb
mov
ljmp
mov
or
loopne
aaa
sbb
pop
jmp
sub
jmp
das
cld
cmpb
shrb
in
loopne
jbe
xor
push
imul
fisubrs
pop
xchg
aas
or
mov
mov
movsl
leave
inc
pop
decb
test
sub
movsb
hlt
xchg
das
rcrb
int3
inc
add
cs
fucom
inc
and
xor
mov
in
into
stos
mov
mov
es
gs
add
shrb
aas
push
loopne
add
jbe
push
jbe
andl
in
jns
jnp
pop
xor
in
xchg
movsb
jno
mov
pop
int
xchg
push
out
out
pop
mov
adc
and
imul
inc
insl
out
jae
mov
mov
inc
lret
lcall
insb
jmp
out
mov
sarb
xchg
cmpsb
fwait
sub
push
aam
cmpsl
aam
and
cmp
sub
sub
mov
xchg
mov
lods
sbb
cltd
call
inc
cmp
cmp
movsl
jge
mov
enter
mov
sbb
test
mov
jno
push
stos
xor
adc
jne
jmp
mov
imul
pushf
adc
sbb
pop
jae
mov
mov
sbb
popf
push
jle
lret
xor
mov
ljmp
push
dec
add
mov
stc
xlat
sbb
gs
jne
pop
outsb
xchg
and
inc
sbb
pop
sbb
adc
xor
fbstp
rcrb
jp
inc
and
jg
add
xchg
add
xchg
shlb
cmpsb
addb
movsb
sub
fists
push
push
cmp
or
inc
pop
aaa
xchg
adc
mov
fimuls
mov
or
mov
mov
lret
fs
sbb
inc
pop
mov
jne
in
adc
mov
out
or
mov
adc
cmp
sub
dec
pop
and
xchg
sub
fmull
idivw
in
xor
sub
sub
mov
int
xor
or
aas
xchg
in
pop
mov
into
adc
lahf
xor
movsl
hlt
lods
pop
sbb
into
push
in
clc
sub
out
sbb
mov
jne
push
inc
mov
jns
or
sti
mov
fistpll
filds
sbb
adc
idivl
xor
ja
sbb
hlt
or
lods
in
sub
aas
data16
rcrl
add
ret
inc
js
adc
xor
push
imul
jo
dec
pop
cld
and
iret
mov
mov
scas
dec
mov
adc
je
jnp
inc
lcall
adc
ret
sbb
nop
std
add
popf
add
jmp
leave
pop
cmc
xor
sub
sbb
repz
into
icebp
arpl
test
or
and
pop
sbb
aam
mov
call
push
adc
push
cmpsl
js
bswap
outsl
test
rcrb
ljmp
pusha
xchg
mov
call
mov
mov
bnd
cvtps2pd
push
ror
inc
push
jmp
dec
insb
out
cltd
push
mov
popa
fs
ror
jecxz
sahf
lods
and
imul
pusha
cmp
mov
dec
repnz
pushf
sub
mov
sub
andl
sbb
out
mov
mov
lods
leave
in
cltd
ret
mov
mov
gs
xor
add
fs
push
icebp
sbb
add
xor
sub
rcrl
out
xlat
test
mov
pop
sub
ficompl
fcoml
adc
jnp
jle
imul
inc
adc
lods
pop
nop
fwait
sahf
jns
jecxz
xchg
arpl
in
fwait
lock
dec
and
mov
fiadds
sub
mov
cmp
pusha
fsubrl
and
aaa
mov
pusha
jnp
in
inc
fs
fstp
sub
ret
stos
adc
xor
push
mov
adc
push
mov
out
lock
call
or
aad
or
out
push
ljmp
mov
fsts
cs
movsl
in
mov
lcall
add
lahf
jnp
adc
out
ficoml
dec
test
stos
loop
imul
aaa
test
sub
push
pop
mov
popa
ljmp
pop
arpl
or
or
mov
bound
cmp
aas
jge
sbbb
xor
adc
push
sti
xchg
dec
int3
inc
je
cmpb
xor
xchg
mov
subb
rcll
cmp
sahf
clc
punpckhbw
jg
insl
mov
sbb
out
repz
scas
mov
cltd
enter
sbb
pop
pop
das
out
sahf
pop
mov
sbb
add
fidivrs
es
push
ss
dec
pusha
push
pop
pop
pop
mov
jns
push
cmp
cmpsb
stc
pop
cmp
add
mov
sub
out
not
in
sub
mov
aam
lret
vpaddsw
xchg
or
cmp
sbb
aas
cmovge
sub
sbb
out
icebp
popw
lcall
push
cmpl
jbe
test
cmpsb
imul
cmp
mov
imul
movsl
ficoms
pop
shl
lds
jbe
sub
pop
hlt
in
shlb
popa
mov
and
stos
push
idiv
call
scas
insb
ret
and
ds
scas
and
xlat
dec
and
dec
aam
mov
mov
mov
aam
pop
lret
or
mov
xor
mov
fadds
movsl
sbb
cmpsl
repz
fimull
or
test
sbb
scas
lock
pop
aas
xor
fldl
inc
popf
fldt
jmp
popf
jl
test
pop
jle
out
sub
xor
das
imul
mov
div
xchg
int
push
test
adc
jo
and
sbb
pop
pop
adc
pop
aaa
idivl
repnz
icebp
jo
repz
add
aad
inc
xor
and
mov
aam
jo
ss
aam
inc
lea
aas
cwtl
lods
push
je
inc
stc
inc
leave
adc
rol
mov
xorb
pop
xchg
jle
fldlg2
xor
ljmp
and
sub
push
fistpl
ja
test
pop
jne
sti
fdivrs
pop
mov
fcompl
lret
pop
subl
es
cmp
mov
aam
stc
xchg
mov
cmc
test
mov
push
sbb
mov
mov
out
pop
addb
push
lret
add
insl
xor
mov
dec
outsb
jno
xor
or
movsb
mov
lcall
cmp
insl
sub
add
pop
xor
jno
aaa
mov
out
lock
imul
negb
movsl
lahf
je
mov
fcomps
push
mov
push
test
pushf
cmc
mov
xchg
lea
or
dec
mov
mov
mov
adc
mov
and
mov
push
clc
jp
aas
inc
leave
ret
lret
lea
aad
sbb
lods
rcr
jbe
aas
push
out
push
sub
mov
mov
mov
out
mov
jno
or
outsl
es
movsb
mov
mov
xchg
pop
lcall
pop
movsb
xor
or
cmp
pop
jb
insl
mov
popf
mov
xchg
jno
outsb
outsb
dec
inc
shrb
loope
testl
mov
test
mov
shll
push
pop
in
jb
stos
pop
ljmp
mov
jns
mov
xchg
mov
ret
dec
movsl
dec
shrl
or
into
addb
sbb
insb
push
jecxz
movsl
xor
movsl
lods
into
adc
sbb
sub
jge
aam
pop
jp
adc
lahf
sub
sbb
addr16
push
cmp
pop
test
insl
rclb
xor
cmp
mov
xor
mov
pop
adc
inc
mov
clc
inc
cs
cmp
xchg
add
mov
daa
jg
ss
sub
xchg
push
sbbb
fisubl
or
stos
insl
fnsetpm(287
fwait
cs
aaa
push
mov
daa
xor
mov
test
rcrb
loope
mov
lods
dec
push
fiaddl
jecxz
and
stc
fs
sbb
sub
popf
mov
outsl
xor
push
cmp
jle
outsb
sub
mov
call
lret
pop
cmp
cmp
jnp
in
loop
cmp
add
dec
inc
div
inc
test
pop
mov
cmpsb
sbb
inc
ss
ja
dec
or
dec
enter
stos
xchg
inc
cs
jne
lock
sub
loope
iret
xor
xor
adc
cmp
fstl
add
xor
sbb
or
filds
push
fsubrp
arpl
hlt
stos
dec
aam
lea
or
cmp
repnz
cmpsb
xchg
push
fadd
jmp
out
and
xchg
sbb
cmp
xor
push
jmp
inc
mov
push
cwtl
or
inc
pop
sub
out
mov
sub
popf
xlat
xor
fwait
adc
jecxz
sbb
and
inc
cld
jg
jb
mov
fnstcw
sti
mov
cs
iret
les
cmpsb
push
adc
xchg
fcmove
shll
push
and
pop
add
cmp
imul
cmp
test
fcoml
jns
cmpsl
jge
movsb
hlt
xor
fwait
adc
pop
mov
ss
lea
lcall
xchg
push
sub
lcall
push
jo
cmp
mov
cmpsl
fucomp
imul
ja
jl
inc
mov
call
hlt
dec
ficoml
push
daa
dec
add
dec
clc
leave
lea
xchg
inc
mov
xchg
add
nop
addb
sbb
dec
lea
sub
push
test
sbb
fcmovb
ljmp
xchg
sbb
out
push
or
std
mov
out
inc
fwait
ljmp
mov
push
negb
aad
clc
ds
sti
lock
shrl
pop
out
mov
sbb
jns
aad
sbb
cmp
cwtl
stos
iret
or
lahf
pop
add
loopne
hlt
or
mov
sbb
sbb
shll
xor
subb
sbb
xchg
das
hlt
lods
dec
cmp
pushf
loope
repz
or
pop
mov
call
add
xorl
loopne
dec
rol
test
rorl
cmp
and
aad
mov
adc
repz
mov
add
jbe
xchg
xor
mov
xchg
data16
xor
sub
jmp
gs
hlt
dec
loopne
add
xor
mov
subl
cmpsl
ds
xchg
mov
stos
xchg
mov
dec
inc
pop
fdivp
xor
jecxz
gs
xor
sti
push
aas
xchg
je
lock
insb
outsl
gs
mov
jecxz
xchg
and
or
jp
sahf
filds
out
cmp
or
cmp
xchg
mov
jp
scas
repz
lds
jb
into
ljmp
cld
aas
imul
mov
xchg
cmpsl
mov
hlt
mov
scas
imul
fucomi
cmp
inc
inc
fsubrl
mov
cwtl
jmp
decb
jae
aaa
sahf
mov
xor
pop
xchg
out
add
or
pop
rcll
adc
jnp
fldl
leave
out
int
push
clc
xchg
jge
lds
aam
sahf
movsb
in
dec
jmp
dec
cld
inc
in
pop
push
fadds
jbe
or
inc
fmull
mov
or
jmp
mov
out
mov
mov
scas
xor
pop
inc
ds
push
and
push
push
repz
das
push
sbb
sbb
sub
sub
inc
int
lahf
inc
jmp
jns
lret
add
movsl
pop
push
inc
call
popa
fwait
sub
loope
imul
xchg
in
insb
xor
or
xlat
js
add
add
add
inc
dec
cmp
and
iret
lret
hlt
jbe
pusha
cmp
insl
jecxz
cmp
or
out
push
ret
fcoml
jae
xlat
insl
xadd
inc
push
mov
es
xchg
scas
add
push
je
jp
cs
lahf
gs
add
adc
insb
popa
push
enter
push
push
nop
mov
loopne
push
jns
scas
add
inc
mov
cmpsb
mov
nop
add
or
cs
cmpsl
fisubs
xchg
push
push
in
popf
xchg
insb
fdivr
mov
add
and
ds
xchg
xor
sbbb
subl
sub
jp
mov
mov
cmc
mov
sbb
jo
adc
dec
sub
sbb
aaa
xor
notl
xor
mov
arpl
inc
jo
hlt
and
outsb
jbe
shr
or
loope
outsb
or
es
pop
out
xchg
fcoml
mov
in
stos
fcompl
call
sar
jl
xor
xchg
cld
mov
lea
jno
dec
imul
insl
push
pop
and
xor
adc
cmpsl
mov
dec
movsb
xchg
inc
loopne
add
repz
mov
ret
mov
aad
push
pop
add
ret
xlat
and
int
xor
and
loop
cmc
push
lea
lock
push
not
movsb
mov
cmpb
add
pop
sbb
xchg
xchg
in
adc
fdivl
inc
push
mov
push
ds
shl
out
mov
fstpt
iret
adc
mov
ja
into
pop
xor
xchg
adc
std
orb
loope
test
dec
mov
add
or
mov
mov
arpl
fisubs
jmp
and
cltd
jbe
int3
add
xchg
xchg
cmp
add
push
and
jl
mov
xchg
in
hlt
and
in
leave
dec
je
cmp
gs
outsb
push
lods
sbb
add
inc
or
stos
test
xchg
xchg
xchg
adc
mov
lock
xchg
mov
in
cmpsb
mov
or
jae
rorb
sub
mov
js
imull
cmp
loop
cmp
movsl
cmp
lahf
pop
cwtl
call
dec
shll
icebp
push
jns
mov
push
dec
mov
mov
es
and
sahf
imul
add
int
rorl
test
leave
jge
movsb
leave
in
loop
cmp
jns
or
xchg
dec
popf
cmp
push
push
mov
lods
repz
mov
and
stos
pop
lret
cwtl
jns
jae
mov
mov
sbb
push
imul
outsb
jbe
adc
sub
cs
pop
inc
lea
call
aaa
mov
cmp
inc
imul
ror
cmp
dec
adc
test
mov
dec
add
sub
pop
out
insb
cmc
sub
xchg
xor
fadds
stos
and
adc
inc
je
sbb
clc
arpl
icebp
imulb
ljmp
cmpb
adc
xchg
adc
leave
jecxz
mov
jle
cmp
sti
out
std
cmp
setp
and
sbb
cwtl
and
adc
or
inc
outsb
and
insb
lock
mov
adc
dec
inc
xchg
sbb
push
pop
fistpll
loop
mov
mov
cs
add
repz
shr
sub
rcrb
in
push
and
mov
sub
stos
mov
mov
adc
pop
es
lock
dec
xchg
dec
sub
mov
mov
lret
lahf
jae
test
inc
sub
sub
lahf
mov
xor
add
mov
cs
adc
shlb
mov
add
push
ds
pop
sub
lcall
and
rorb
xchg
pop
or
xchg
lea
cmp
hlt
add
mov
mov
in
pop
shlb
cs
or
mov
sbb
pusha
dec
mov
fcomps
insb
cld
stos
aas
and
jae
gs
mov
cmp
scas
mov
fistl
mov
imul
pop
mov
dec
add
push
loope
fwait
or
ret
or
or
movsl
into
adc
rcr
cltd
or
loope
adcb
pop
jno
out
mov
addr16
imul
fbstp
adc
lret
sbb
daa
les
testb
ljmp
adc
icebp
shl
jns
xor
test
sbb
mov
adc
push
fidivrl
mov
ljmp
leave
inc
sub
pop
sbb
inc
icebp
cmpsl
dec
hlt
xchg
and
cwtl
push
sbb
push
cmpsl
mov
mov
ds
sub
daa
adc
loopne
mov
loopne
nop
dec
mov
mov
jbe
sbb
cmp
mov
call
and
pusha
dec
shll
jbe
sub
arpl
mov
shlb
fdivrp
cmp
push
dec
outsb
repz
mov
adc
pop
sarb
or
insb
leave
inc
stos
jl
xchg
ja
ds
xor
push
aam
mov
or
sbb
dec
std
imul
ficomps
into
repz
xor
lea
adc
cltd
jmp
fists
push
lods
cmp
jp
jo
in
iret
jp
push
adc
out
sub
mov
fisttpl
mov
add
in
dec
nop
gs
and
and
dec
or
xchg
pusha
jmp
js
stc
and
daa
or
cmpsl
fisubrl
pushw
jnp
ds
sbb
dec
cmp
pusha
push
ds
ja
xor
in
mov
or
xlat
lret
sti
sbbl
cmp
mov
pushf
in
hlt
test
adc
pop
jo
insb
or
xorb
pop
in
rorb
sbb
push
sbb
outsb
cmp
adc
aam
jne
xchg
jb
dec
sub
sub
out
mov
dec
xor
test
in
mov
inc
in
xchg
push
fists
enter
sub
sbb
sub
je
pop
test
lds
push
outsl
adc
mov
repz
leave
lods
add
and
push
or
xchg
bound
cld
xchg
mov
mov
adc
fnsave
xchg
out
jae
out
jge
or
sub
mov
imul
or
cltd
jnp
xchg
out
loop
aas
test
jg
add
jno
movl
bound
cmpsl
ljmp
mov
xchg
push
sti
pop
ljmp
mov
push
cmp
decl
jl
js
dec
jmp
mov
mov
call
mov
out
lods
lahf
sub
jp
mov
xchg
mov
pusha
ret
data16
jno
xchg
nop
lahf
je
pusha
cs
mov
jne
mov
sbb
pop
dec
andl
daa
scas
testb
pushf
shll
and
mov
jnp
push
pop
ret
push
pop
sarb
imulb
xchg
out
push
nop
push
pop
scas
inc
in
and
add
popa
xchg
dec
add
pop
shlb
fisttpll
push
add
shl
pop
cwtl
int
inc
loope
mov
mov
sbbl
add
test
aad
into
ja
popa
cmp
ret
mov
lock
add
push
insb
sub
ljmp
push
mov
push
xor
mov
rcrb
xchg
dec
push
out
test
into
sti
adc
loop
or
push
mov
add
xor
or
aas
fisubs
pushf
or
sbb
adc
xchg
push
pop
adc
xchg
jg
jg
add
sub
out
addr16
push
adcl
mov
jbe
pushf
xchg
add
notb
or
pop
add
lret
loopne
sbb
fbstp
sub
loop
pop
pop
gs
dec
cmpl
imull
or
pop
shll
ficompl
add
sbbl
sub
movsb
lods
lds
xlat
pop
mov
rcrl
cmpsl
sbb
jbe
aas
mov
push
das
mov
jb
add
in
insl
xchg
sub
push
sub
sahf
rclb
sbb
in
xchg
or
or
lret
or
sub
mov
xchg
jo
sbb
fsts
mov
ret
mov
out
xor
cwtl
into
xchg
mov
rclb
notl
sti
sbbb
addl
inc
jmp
out
push
mov
push
jmp
jg
inc
nop
jge
adc
cli
mov
sahf
subb
push
ja
popa
test
lret
outsl
aad
sti
push
mov
mov
sbb
xor
subb
sbbb
lea
fs
mov
bnd
jns
xor
push
dec
push
mov
test
mov
lock
xor
test
inc
in
adc
hlt
dec
pop
stos
pop
cmpsl
sub
test
add
mov
xchg
add
filds
and
mov
int3
xchg
inc
iret
lret
sbb
and
pop
mov
or
stc
cmpsl
lods
out
fidivs
xchg
sub
lods
jae
rorb
sbb
jg
ficoml
fldenv
lods
test
push
pop
pop
inc
push
and
cmp
push
jge
iret
push
mov
rcll
rolb
push
outsb
int
repnz
mov
add
push
cli
seto
cmp
ret
sub
bound
andl
aam
cli
inc
ffreep
test
rcll
data16
adc
ja
fcomip
mov
insb
sub
cld
sub
out
adc
jb
fistps
or
sbb
sbb
loopne
jb
adc
sbb
lds
scas
jnp
or
pop
jo
xor
incb
sbb
sbb
in
jp
push
and
mov
lock
cmp
stos
notl
out
repz
pop
icebp
aas
ret
test
dec
adc
clc
decb
add
stc
arpl
test
in
filds
add
pop
cmp
push
test
stos
std
lcall
jg
sub
mov
dec
lret
jo
jle
jne
out
inc
push
aad
out
inc
in
aas
jmp
int
add
cmp
mov
inc
jae
pop
imul
stos
and
inc
mov
push
pop
or
je
adcb
lahf
fidivs
daa
imul
aaa
adc
es
push
outsb
jp
pop
jne
adc
push
mov
loop
cmp
scas
inc
cmp
aam
mov
sahf
xchg
cmp
or
jae
in
mov
jecxz
jmp
shl
idiv
dec
xor
jg
imull
mov
insb
fdivp
and
lods
lea
sbb
mov
loop
dec
leave
jge
loope
rcrb
push
dec
pop
out
cmp
pop
push
push
andl
dec
push
in
inc
and
int
mov
fdivl
mov
xchg
push
or
xor
mov
inc
cmpsb
pop
je
lds
jbe
jp
mov
stos
lods
sub
loop
int3
aam
sbb
test
daa
pop
pop
pop
mov
imul
fnstenv
dec
xor
sarl
push
sahf
shrl
int3
mov
js
cmp
movsb
jecxz
mov
sbb
or
imul
or
and
and
ror
fldcw
mov
cmc
iret
inc
sbb
and
insl
sub
call
je
mov
js
jmp
mov
outsb
icebp
addb
xchg
sahf
out
xchg
cmc
and
inc
push
daa
or
adc
pop
jne
cmpsl
mov
outsb
cs
in
inc
mov
sbb
bound
ret
sbb
mov
inc
push
cmp
jnp
cmp
sahf
adc
jmp
sti
shr
xchg
mov
pop
inc
or
dec
lcall
jge
bound
mov
dec
scas
lock
enter
shlb
fnstsw
adc
cli
add
scas
pop
ret
mov
ds
shlb
pop
daa
and
sbb
ficoms
jae
imul
aaa
mov
jbe
cmpb
xor
add
lcall
cmpl
pop
inc
mov
cld
mov
mov
mov
out
jae
push
bound
jb
jg
xor
cmp
jmp
cltd
sub
cmpsl
sbb
pop
xor
mov
mov
pop
add
push
int3
jg
dec
iret
mov
jne
lea
inc
mov
fcompl
repz
xor
add
mov
ret
ds
adc
push
jne
aaa
add
lcall
jo
push
jae
mov
xchg
push
mov
ret
loope
cmp
sub
insl
sbb
fisubl
adc
cltd
push
adc
daa
stc
sbb
test
ljmp
orl
outsl
je
stos
in
inc
cmp
mov
ds
test
push
cltd
clc
sbb
jns
and
pop
ljmp
faddl
repz
rclb
adc
outsl
adc
mov
out
test
jno
xor
add
ret
xor
adc
sbb
fimuls
rcl
ret
xchg
stos
incb
arpl
pop
insb
repnz
fiaddl
mov
push
test
lret
mov
xchg
push
push
jmp
and
ret
ret
leave
cmpsb
add
jo
cmpsb
and
mov
dec
jge
mov
fisttps
adc
std
and
cltd
icebp
lea
add
mov
inc
fs
das
fbstp
hlt
lods
int3
out
popa
jmp
jge
inc
and
mov
aam
xchg
inc
popf
cmp
jnp
jmp
mov
sub
aam
adc
dec
sbb
push
mov
sub
movsb
xor
scas
jo
mov
sbb
mov
stos
lods
jmp
pop
ret
push
movsl
mov
sti
add
jo
lret
test
inc
cmp
les
and
test
inc
add
xor
xlat
movsb
fcmovb
adcl
mov
cltd
pop
lret
mov
xor
imul
adc
jo
cs
loopne
inc
jg
dec
mov
xchg
cmp
cmc
and
out
std
inc
adc
cltd
lds
aad
aam
pop
mov
rcrl
stos
inc
xor
inc
mov
js
outsb
and
jno
mov
push
sub
leave
test
and
mov
or
fistps
aad
mov
je
nop
scas
loopne
clc
jns
push
insl
xchg
mov
add
cmp
and
inc
and
outsb
pop
sbb
push
cmpsl
mov
xchg
jmp
out
xor
pop
inc
push
fs
and
mov
stc
icebp
std
pusha
xor
daa
or
ljmp
cli
push
pop
mov
fsts
jno
lods
pop
xor
scas
iret
mov
jbe
inc
aam
cmp
dec
rcll
mov
shl
push
insb
push
sti
clc
imul
push
mov
xor
add
push
test
cmp
mov
sarl
lret
push
mov
push
rcll
scas
inc
les
dec
dec
adc
pop
sbbb
fwait
mov
out
and
mov
arpl
movsb
or
rorb
jmp
dec
xor
xchg
mov
sar
dec
stos
fldenv
jae
ljmp
xchg
dec
dec
das
push
mov
cmp
cli
push
add
shl
insb
repz
fnstcw
pop
sbb
in
push
or
xor
jecxz
adc
mov
add
and
dec
push
jae
dec
mov
out
inc
into
ret
int3
or
call
sub
stc
ds
sub
adc
dec
push
pop
hlt
lods
and
in
movsb
dec
xchg
cmp
cld
adcb
lods
and
inc
pop
ret
clc
leave
icebp
and
cs
push
xor
fdivrs
fildl
stos
push
aaa
pop
popa
xchg
add
aas
test
pop
ret
push
add
pop
or
mov
lahf
add
lock
pop
pop
in
and
rcr
sub
sub
xor
cwtl
scas
mov
add
mov
fdivrs
dec
and
fisttpl
and
xor
repz
jg
adc
dec
adc
outsl
inc
or
loop
pop
and
xchg
mov
or
mov
mov
dec
sahf
sub
mov
pop
add
cmp
jge
sub
shll
sub
dec
cmp
ljmp
ss
mov
pop
pop
daa
sbb
jnp
mov
js
xchg
stc
fdivr
mov
mov
jge
mov
inc
das
or
cmp
dec
mov
jmp
xor
mov
and
loopne
mov
xchg
inc
das
cwtl
and
inc
cs
adc
add
lret
insb
push
push
inc
xchg
sbb
cmc
push
imul
pop
xchg
adcb
jnp
ficompl
pop
jo
mov
sbb
shl
pop
xchg
mov
sub
icebp
dec
rol
addl
cld
mov
testl
lock
xor
cmp
mov
xor
cmp
imul
pop
jle
xchg
out
adc
imul
subl
outsl
push
in
out
sub
sbb
je
mov
rclb
mov
xor
aam
or
mov
ljmp
xchg
mov
mov
sti
repz
in
pop
scas
adc
mov
ss
or
xor
and
cld
and
test
in
xchg
xor
and
jl
mov
sbb
in
roll
sub
lret
pop
xchg
dec
fildll
clc
jle
add
movl
repz
ds
or
cmp
test
les
mov
gs
jo
adc
sub
xchg
rep
inc
jge
and
addr16
add
ljmp
ret
scas
jmp
mov
aaa
sbb
lea
pop
flds
mov
cmp
das
mov
xor
mov
enter
fstpl
mov
and
mov
lea
divb
sbbl
or
sub
push
test
xchg
dec
imul
lods
fidivrl
lea
sub
out
jns
mov
inc
adc
add
setb
divb
sbb
sbb
arpl
add
cwtl
mov
js
aas
mov
out
idivb
loop
pop
ja
sbb
add
adc
int3
imul
cmp
cmpsl
cmp
xor
xlat
push
sbbl
arpl
enter
enter
daa
movsl
outsb
mov
jae
mov
add
mov
das
jge
xchg
push
jl
and
push
pushf
into
and
xor
mov
hlt
test
aas
push
mov
cmp
mov
mov
sbb
insb
lret
add
call
popa
shr
add
pop
aam
ds
or
mov
fcomi
add
pop
stos
mov
pop
lods
xor
dec
jmp
jecxz
insb
or
mov
lock
jns
dec
test
jno
xchg
in
lahf
cmp
stos
imul
addr16
cmp
push
out
push
mov
hlt
inc
xchg
mov
sub
cmpsb
jecxz
mov
and
aas
pop
into
or
outsb
int3
aaa
leave
test
andb
ja
mov
inc
sahf
sub
xor
test
jecxz
mov
outsl
dec
or
push
scas
cmp
movsb
icebp
xchg
cmp
adc
adc
rclb
pop
sub
mov
xchg
mov
shlb
jb
shlb
xor
add
aaa
out
mov
mov
stc
xchg
mov
lahf
mov
cld
jl
jnp
stos
arpl
adc
dec
fiadds
mov
adc
in
cmp
fisubrl
aam
xor
aaa
mov
cltd
sbb
movsb
scas
shl
das
push
pop
mov
adc
pushf
push
fwait
incb
movsb
subl
adc
inc
xchg
add
mov
cli
dec
in
add
sub
repz
movsb
inc
pop
pop
jbe
xchg
sahf
addr16
pop
shrb
ja
roll
jns
and
or
movsb
mov
out
stos
xchg
push
mov
push
mov
dec
sub
ds
imul
sbb
aaa
popf
jnp
mov
pop
stos
adc
out
lcall
xchg
nop
jb
inc
pop
jo
or
sbb
mov
jle
pop
mov
pop
cmc
fstpt
setg
mov
in
in
rorl
cmpsb
mov
mov
or
and
and
mov
jne
and
and
xor
ror
mov
in
cwtl
cld
les
pop
in
sbb
or
add
mov
test
push
arpl
lcall
xchg
daa
push
pop
dec
mov
in
xor
xor
das
xor
cwtl
push
jle
sub
sahf
mov
je
jo
sbb
inc
cmpsl
dec
xor
daa
xchg
in
mov
xorl
or
subl
sub
lock
inc
sbb
fisubrl
mov
out
push
mov
mov
cmpsb
test
into
and
and
or
lea
dec
push
and
mov
or
push
xchg
out
adc
or
scas
xor
js
mov
dec
xor
je
push
pop
mov
mov
push
fcoml
andps
inc
pop
andb
cmpsl
mov
lods
int3
out
xchg
jmp
mov
mov
or
icebp
and
add
push
xor
jle
adcb
mov
pop
dec
stos
je
movsb
rcll
mov
xor
in
adc
pushf
mov
and
sbb
adc
jae
pop
add
xor
loopne
leave
out
jne
push
jl
or
cs
mov
movsl
pop
decb
or
sub
add
hlt
sub
xor
cmp
inc
jnp
aas
inc
negl
insl
jmp
mov
adc
or
adc
xor
int3
push
xor
sbb
cmp
cli
jg
sarb
or
add
repz
pusha
adc
or
outsb
gs
jle
push
cmp
cmp
stos
pushf
andb
test
jo
nop
fldenv
das
leave
jb
pusha
outsl
jne
dec
inc
push
pop
mov
je
or
and
sahf
sarb
push
inc
psubusb
cmp
out
cmp
dec
xor
push
xchg
add
andl
add
or
or
ret
or
loopne
fidivrl
ret
cmc
fnsave
rcrl
adc
add
jnp
jl
les
sbb
jae
sahf
push
jnp
jae
sti
pusha
jno
adcb
add
pop
jo
sarb
xor
add
sbb
andb
fisubrl
lea
in
lods
mov
add
jge
mov
dec
xchg
mov
push
xor
lcall
cmc
call
sub
inc
test
fcoml
lahf
out
sub
sub
mov
cld
cs
fwait
lds
xchg
pop
jg
ds
add
fwait
lds
xor
adc
and
cmc
fwait
push
xchg
or
jae
shlb
or
outsb
push
dec
push
repz
in
push
jp
pop
hlt
mov
and
jl
insb
xchg
or
andl
jo
mov
ss
into
cs
or
arpl
pop
stc
push
jae
xchg
adc
dec
adc
not
aam
pop
je
xchg
inc
pop
add
add
jno
jnp
push
jnp
jp
or
rep
push
lods
ja
inc
sahf
push
sub
sti
rorl
repz
cmp
pop
ljmp
sub
xor
sbb
inc
sub
fld
dec
add
out
sbb
sbb
das
xchg
push
sub
mov
sbb
pop
lds
inc
jbe
ret
sub
dec
mov
jns
or
sub
sub
adc
mov
pop
jns
dec
sbb
gs
jecxz
jle
inc
dec
stos
aam
dec
ret
mov
fneni(8087
add
pusha
int3
and
sarl
push
mov
ja
mov
cmp
lahf
dec
into
das
cmp
sbb
into
ror
mov
adcb
jno
dec
inc
rorl
mov
ds
xor
and
lret
mov
or
in
dec
mov
mov
add
dec
and
and
mov
or
outsl
adc
mov
insl
push
sub
jle
xor
pop
addl
in
adc
movsb
xchg
sbb
mov
stc
mov
add
jmp
push
insl
lcall
pop
sub
push
push
fistpl
sub
mov
enter
scas
or
mov
daa
push
cmp
adcb
sub
jmp
test
xchg
roll
cmp
mov
rcrb
stos
dec
xor
mov
lds
push
bound
rol
inc
pop
icebp
ja
mov
inc
pop
testb
dec
mov
xor
fisubl
pop
int3
mov
cmc
add
and
fbld
lret
xchg
addr16
jne
jg
cmpsb
xor
in
ljmp
jge
shlb
in
xchg
scas
jno
int3
movsl
int
lret
push
insb
je
sbb
movsl
loope
dec
mov
pop
popa
mov
stos
fimuls
mov
sbb
xor
push
stos
push
loop
ret
fdivr
nop
mov
es
add
bound
push
nop
xchg
jo
loope
sti
cmp
int
outsb
or
mov
out
xchg
jg
dec
jnp
inc
inc
cmp
in
sbb
add
cld
mov
aam
mov
out
push
popa
jne
push
cwtl
adc
fcom
test
cli
ret
imul
jb
mov
push
ficomps
pop
add
mov
cmc
dec
ja
and
jmp
outsb
rcl
push
dec
mov
leave
pop
repz
stc
add
hlt
dec
pop
mov
lods
lahf
xchg
std
add
movsb
mov
xor
inc
or
mov
mov
xchg
xchg
or
movsl
jo
xor
icebp
lods
sbb
mov
frstor
enter
insl
andb
inc
idiv
fdivr
pop
mov
add
adc
dec
push
mov
cmp
repz
sti
notl
bound
xchg
jbe
jl
out
leave
imul
mov
hlt
push
jb
push
push
negb
jge
out
pop
inc
sbb
xchg
mov
mov
and
cs
mov
das
adc
xchg
inc
iret
test
xor
mov
call
es
jecxz
sahf
or
lds
adc
in
pop
mov
cmp
jnp
gs
push
ret
xor
mov
adc
ljmp
test
rep
call
das
shrb
fcomi
xchg
mov
push
popf
fsubr
xor
inc
adc
xchg
aad
xchg
mov
mov
push
pop
je
inc
xor
dec
inc
ret
xor
fucomi
mov
pop
mov
enter
stc
mov
xchg
and
sub
hlt
bound
mov
jb
pop
xchg
xchg
xchg
add
dec
cmp
pop
push
test
and
fstps
cmc
les
pop
insl
and
stos
test
hlt
out
jae
and
fisttps
cli
and
and
pop
mov
cs
aam
cmpsb
inc
fildll
sbb
adc
icebp
push
sub
adc
fiadds
test
clc
jp
jae
jecxz
jmp
pop
inc
cmpsl
jno
int
rcr
int3
jne
or
cmp
fimull
sbb
adc
stos
lret
xor
mov
add
adc
arpl
sbb
sbb
xchg
add
repnz
in
jbe
out
sub
stos
mov
mov
sbb
dec
out
jmp
pop
sub
arpl
stos
sbb
jne
ret
sbb
or
int
stos
inc
subb
dec
xor
stos
push
xchg
imul
popf
fnsave
rclb
loop
in
adc
xchg
inc
push
and
mov
inc
das
sbb
dec
pop
and
push
enter
mov
jbe
adc
mov
sbb
xchg
inc
mov
sub
sti
arpl
cmp
scas
stos
dec
iret
in
push
lods
popa
scas
sti
push
es
sbb
xlat
hlt
inc
ret
sub
jns
mov
adc
movsl
pop
pop
push
sbb
pop
clc
jae
jp
sti
sbb
ja
mov
scas
cltd
cmc
ret
jle
je
shrb
enter
lcall
push
inc
sbb
imul
movb
sub
orb
xor
out
push
or
ss
jecxz
std
ljmp
out
dec
into
fbld
test
and
jns
dec
test
and
ret
or
outsb
in
mov
or
repnz
stc
addl
push
mov
xchg
cwtl
push
xchg
push
insb
push
mov
sub
or
subb
jmp
outsl
gs
pop
xor
jp
dec
inc
pop
idivb
lock
mov
adc
cmp
fisubl
mov
loopne
inc
orl
ffree
mov
ss
ja
cmp
push
pop
out
xorb
and
ficompl
jge
mov
int
out
test
pushf
cmpsl
sbb
fisttpl
enter
call
mov
dec
mov
mov
jp
and
into
dec
fidivs
cmp
mov
push
stos
mov
inc
incl
jmp
or
cmpsb
adc
in
add
sbb
pop
stos
pop
imul
sbb
jne
stos
sub
out
pop
lock
xor
mov
inc
mov
shrb
repz
mov
ss
mov
lods
mov
adc
les
dec
mov
adc
adc
mov
fstp
rolb
dec
xor
push
xchg
pushl
les
sub
and
sbb
imul
fmull
jle
mov
push
dec
test
jns
pop
cwtl
loop
mov
or
outsb
fmul
cmp
pop
xchg
mov
call
cltd
mov
cmc
enter
fiaddl
xor
je,pt
mov
fimuls
shlb
dec
sbb
mov
mov
mov
mov
push
repz
jo
mov
sbb
movb
movb
int
jg
stos
dec
imul
daa
cs
dec
lcall
cld
cmc
pop
adc
sub
cwtl
insb
xchg
or
paddb
data16
fisttpll
je
fstpt
fidivs
shlb
in
and
or
add
movsl
dec
loop
fcmovnbe
inc
fisttps
cmp
lock
sub
cltd
dec
mov
inc
ficomps
cmp
xor
sub
pop
xor
push
je
jo
xchg
stos
mov
mov
aad
sbb
clc
pushf
mov
pushf
sub
lock
gs
fbstp
xchg
stos
or
xorl
mov
inc
aas
cmpsb
mov
add
cmp
push
xor
mov
leave
and
xor
das
pushf
and
xor
and
test
mov
ret
jae
add
sub
addb
imul
and
das
or
test
jp
out
outsl
mov
sub
inc
fstpl
cmp
sbb
jp
ficoms
xchg
sub
mov
lahf
stos
testl
and
inc
push
cwtl
jle
aad
pop
xor
arpl
pushf
ss
inc
sti
mov
fs
scas
jbe
std
cmpsb
pushf
cwtl
jl
push
xor
mov
hlt
adc
inc
cmpsb
lret
rep
mov
mov
add
push
push
adc
test
mov
add
fsubl
outsl
mov
xchg
testl
call
push
add
mov
mov
jecxz
and
jne
dec
cwtl
xchg
and
sbb
cli
adc
mov
lods
push
sti
sbb
inc
jae
pop
loope
pop
sbb
fwait
iret
push
cwtl
into
xchg
mov
adc
mov
repnz
jbe
mov
dec
fsts
and
pop
ljmp
mov
inc
xchg
mov
cmp
pop
insl
mov
adcl
xor
or
rcll
pop
dec
sbb
sub
mov
stc
sub
inc
jb
andl
push
sahf
cmp
cld
pop
call
xchg
es
push
or
test
repnz
hlt
and
xchg
mov
mov
push
pop
stos
stos
aaa
push
cmc
push
rclb
inc
test
hlt
out
imul
scas
out
repz
and
add
inc
push
sbb
sub
and
cli
mov
mov
push
jns
sbb
scas
inc
mov
xlat
fistpl
es
lret
cmp
mov
push
pop
lret
mov
in
aam
adc
mov
mov
cmpl
aad
inc
in
jle
sarl
add
in
lcall
dec
sub
pop
cs
jle
nop
ret
xchg
jmp
mov
mov
push
pop
int
mov
cld
pop
jecxz
jae
jae
rcrb
mov
push
jne
std
out
mov
ljmp
ljmp
xchg
das
xchg
mov
and
sbb
pop
mov
mov
add
xchg
dec
cmp
inc
clc
sbb
test
arpl
lret
rolb
cwtl
aad
lods
sub
xor
mov
pop
and
xor
dec
cmp
loop
scas
cwtl
scas
pop
sti
das
adc
add
mov
imul
or
cmp
test
pop
xor
inc
movsb
xchg
jge
dec
ret
icebp
dec
jne
push
insb
xlat
insb
aad
aad
dec
inc
jge
mov
or
pop
adc
adc
fisubrs
xor
pop
mov
xor
xor
adc
stos
mov
and
sub
imul
adc
lods
pop
cmp
daa
test
xchg
or
movsb
imul
fsub
stc
mov
adc
sub
cmp
sbb
lods
xchg
pop
push
pop
cli
fnsave
mov
jle
aad
decl
sahf
dec
dec
in
loopne
jb
add
or
jmp
and
push
sub
cwtl
jns
lea
xchg
sahf
repz
mov
cmp
mov
and
insl
push
push
mov
clc
ljmp
jae
push
js
dec
ficomps
adc
xor
dec
push
cmp
mov
xchg
hlt
dec
nop
pop
popa
leave
xchg
cmp
dec
jge
adcl
pop
aam
fisttpll
cltd
fimull
sbb
ja
adc
je
xchg
xor
mov
and
mov
rcrl
lret
scas
outsb
call
or
add
add
push
imul
lods
xor
or
dec
jne
repz
outsb
mov
and
cmc
gs
lcall
lahf
mov
arpl
shlb
ss
push
push
neg
sbb
in
or
dec
fcompl
jnp
roll
and
adc
and
test
dec
or
out
dec
test
adc
es
jne
mov
lret
cmp
mov
cmp
push
push
fiaddl
outsl
ret
cmc
sbb
es
lea
push
arpl
or
movsb
movl
mov
pop
jae
inc
xchg
sbb
lret
scas
xor
cmc
lahf
mov
test
fucom
xchg
shl
or
push
mov
shl
mov
mov
push
frstor
shrl
stos
out
inc
mov
call
mov
xchg
fwait
sbb
jae
arpl
les
xchg
add
sbb
push
scas
push
inc
jle
pop
jnp
lock
sub
push
rcll
jge
xor
shlb
test
sbb
xchg
nop
mov
in
jmp
jle
and
jle
xchg
leave
loopne
mov
or
or
clc
fwait
test
fidivrl
fisubl
push
stos
fwait
sti
insl
push
je
push
pop
imul
push
popf
lods
jnp
sub
pop
pop
jbe
test
mov
lcall
sbb
xorb
rcll
sbb
mov
data16
cmp
mov
je
hlt
cld
movsb
add
or
fwait
and
cmp
xor
and
adc
push
mov
push
and
dec
or
sub
xor
fwait
dec
paddd
pop
mov
cmp
mov
int
cs
sbb
xchg
push
push
sbb
mov
sbb
lock
out
outsb
rorl
rcrl
adc
cli
popf
insl
or
push
aad
mov
imul
insl
sti
push
pusha
mov
inc
adc
sbb
clc
repnz
cld
sbb
cmp
lock
sbb
add
sbb
ljmp
dec
incb
pop
xor
aad
loop
push
pop
pop
fadds
test
loop
test
and
xchg
xchg
mov
scas
rol
enter
jecxz
mov
lock
cltd
sbb
jnp
jb
ror
pop
cmc
rorb
call
in
jno
nop
in
sbb
aas
mov
cmc
in
iret
or
je
fistps
repnz
xor
pop
sbb
dec
dec
negb
push
inc
in
add
push
loopne
xor
inc
jge
in
or
sarl
lret
js
pop
push
lea
mov
shll
fiadds
pop
and
call
mov
or
adcb
mov
cmp
loop
push
cli
pop
mov
fcomp
les
push
iret
hlt
mov
data16
loope
aad
cmp
mov
xor
arpl
inc
stc
jb
push
pop
jp
inc
daa
std
ljmpw
mov
jbe
bnd
lds
mov
jl
data16
adc
jae
jecxz
cltd
pop
out
lcall
sub
mov
jns
testb
fbstp
fiaddl
sub
or
inc
xchg
mov
dec
push
jg
out
pusha
cmp
negb
ss
lods
mov
dec
xchg
mov
imul
flds
lcall
rcll
mov
push
and
aaa
mov
ljmp
mov
call
jo
mov
mov
ds
mov
ret
loop
push
loop
jo
xchg
push
push
arpl
call
inc
es
fildll
in
outsl
and
mov
or
jnp
in
shll
pop
xor
bound
insl
mov
mulb
test
psraw
cmp
inc
popf
ret
arpl
mov
lods
pop
cmpsb
pusha
movb
out
sbb
imul
push
test
inc
jecxz
ds
lret
sbb
setbe
inc
inc
outsl
pop
imul
xor
jle
xor
fmull
sahf
cltd
ror
cmp
pop
sti
sbb
jb
stc
clc
ret
sbb
daa
sub
cwtl
roll
cli
outsl
sbb
ficoml
pop
xchg
mov
jmp
cld
stc
mov
cmpsl
sarl
add
mov
jno
test
jnp
leave
fucomp
cmp
and
xchg
mov
and
lods
mov
sub
push
mov
and
pop
decb
rcrl
aad
or
xor
pop
and
sbb
jb
pop
cmp
int3
jno
dec
cwtl
imul
pop
in
xchg
lret
pop
repnz
fpatan
and
mov
lods
adc
hlt
movsl
cs
std
push
xchg
sub
xchg
popa
mov
shl
inc
jae
cld
xor
ret
movsl
xchg
inc
xor
adc
scas
mov
imul
and
js
mov
cltd
enter
push
lods
mov
cmc
stos
or
or
pop
adc
xlat
jg
jns
outsl
jmp
cmp
les
daa
or
scas
push
dec
adc
aas
xchg
scas
pop
inc
loope
loope
push
mov
fwait
push
out
scas
ret
jmp
or
jno
imul
add
lds
or
aas
movsl
shlb
lcall
aas
jb
pop
scas
sbb
imul
sbb
movsb
jns
shrb
pop
or
mov
loope
testl
adc
out
xor
pop
leave
mov
jl
dec
dec
push
rcll
xlat
cli
sbbb
inc
jae
or
push
inc
add
adcl
xor
scas
push
mov
outsb
push
xchg
lret
xor
adc
xchg
je
sub
mov
hlt
dec
push
push
inc
mov
movsl
cmpsb
sbb
loopne
jge
xor
cwtl
cwtl
out
or
stos
sub
hlt
inc
push
jns
mov
dec
push
mov
xchg
mov
gs
xchg
pop
xchg
jnp
cmp
pop
stc
xchg
lcall
lods
in
sub
push
cwtl
stos
out
pop
push
inc
adc
in
out
imulb
sub
sub
nop
loopne
scas
sahf
adc
dec
test
testl
es
out
and
mov
push
cmpsl
lods
fwait
orb
out
test
pop
mull
scas
fdivr
mov
outsl
jae
inc
dec
ficomps
push
jecxz
clc
ja
repnz
es
and
mov
mov
dec
sub
pusha
ret
mov
imul
mov
xchg
cs
ds
in
sbbl
sub
ret
test
mov
fildll
dec
jns
or
adc
and
jmp
adc
dec
sub
dec
dec
mov
push
xor
sbb
into
fstpl
sbb
xchg
pop
jb
cmp
fisubs
pushf
cltd
fnstsw
fidivl
xor
and
mov
or
push
sahf
mov
int
andb
jb
and
cltd
mov
xor
pop
icebp
add
insb
sub
ds
test
mov
pop
popa
sub
adc
adc
xor
push
cmp
and
push
sarl
rorb
mov
insb
stc
mov
jae
pop
sub
test
scas
pusha
mov
shlb
test
fisttpll
addr16
jns
cld
add
inc
cmp
push
mov
sahf
cmp
xchg
xchg
cwtl
hlt
jle
cmp
inc
adc
jo
xchg
mov
push
push
push
inc
sahf
sub
pusha
sbb
mov
jg
shlb
push
loope
data16
jp
mov
outsb
ss
or
fldt
notl
pop
push
inc
add
push
xchg
push
pop
pop
xchg
adc
test
mov
and
jno
xor
ds
and
shll
ja
push
ret
iret
popf
stos
sbb
nop
sbb
ljmp
or
dec
mov
jnp
xchg
xor
aad
out
inc
stos
jns
call
jo
xchg
test
sub
mov
loop
sbbl
mov
inc
fs
js
pop
mov
mov
stc
in
das
popf
pop
into
cs
jo
adc
daa
and
push
inc
cmpsl
mov
pop
mov
dec
stos
bound
and
ljmp
cmp
jmp
sarl
out
bound
add
dec
or
arpl
jo
push
mov
mov
lahf
adc
cmc
leave
fsubrs
mov
and
mov
adc
jnp
lods
and
push
je
sub
jmp
int3
jge
xor
add
push
sbb
inc
push
mov
xor
lock
sub
lea
mov
cmp
icebp
cli
lcall
inc
mov
std
daa
jp
pop
pop
dec
loope
fidivrs
imul
mov
add
adc
mov
scas
clc
mov
lock
cwtl
popf
xchg
cwtl
push
pop
jae
adc
sahf
mov
mov
jno
mov
mov
cltd
mov
testb
mov
and
dec
test
xchg
ljmp
imul
pop
and
fists
sub
jae
mov
or
cmpb
outsl
sub
pop
xchg
es
and
pop
jge
or
mov
push
mov
lds
cmc
fists
xchg
out
dec
push
and
sub
out
fs
add
test
dec
or
aaa
mov
rcl
xor
add
lods
mov
imulb
inc
call
jmp
stos
mov
pop
enter
dec
sub
arpl
sub
and
in
or
scas
icebp
xor
adc
mov
jg
in
fnstenv
hlt
mov
lock
stos
fwait
mov
mov
test
xor
pop
xor
cmpsb
mov
int3
adcb
sbb
sub
push
jae
pop
lahf
pop
cmp
arpl
mov
lahf
pop
dec
adc
outsb
outsb
jbe
push
jne
outsl
scas
pop
jecxz
insb
push
aas
add
sub
cltd
xchg
rcl
cld
mov
sub
push
mov
sbb
xchg
inc
or
popf
lods
cmp
shl
sub
fs
sub
sbb
push
dec
mull
cmp
jecxz
rol
add
sub
inc
insl
pop
jecxz
pop
dec
cli
jns
jno
dec
pop
sbb
jns
jne
lcall
loope
movntps
xor
addr16
rorl
cmp
sbb
sahf
or
push
and
in
jnp
cmp
lret
imul
fwait
or
mov
inc
jge
dec
mov
jbe
mov
out
push
push
in
jmpw
call
mov
pop
or
test
inc
sti
cmp
cli
adc
push
adc
mov
addr16
lods
dec
mov
pop
adc
stc
mov
or
jg
push
lods
inc
mov
in
fildll
mov
push
add
push
push
mov
fdiv
or
insl
and
cmc
pop
sub
mov
push
inc
xchg
adc
in
cld
xor
mov
and
nop
adc
cmp
lds
call
into
fs
shrb
push
cmp
add
xchg
ja
out
xlat
lret
add
sub
or
js
sub
cltd
mov
or
stc
pop
insb
dec
mov
cmc
xorl
mov
adc
sarb
repz
dec
add
mov
imul
xor
fildl
out
das
or
mov
popa
mov
into
dec
adc
inc
andl
into
lds
push
rcrb
add
test
rcll
dec
and
push
adc
inc
pop
cmp
sub
aaa
adc
add
jge
repz
or
adc
pop
cmp
push
ret
mov
dec
and
fwait
mov
push
pop
lods
sahf
lcall
dec
ret
mov
cmp
dec
aad
mov
or
loope
fisubl
push
mov
jle
inc
mov
test
scas
sub
ret
aad
dec
or
ficoml
pushf
mov
sbb
hlt
sbb
je
daa
imul
mov
cwtl
sbb
sub
sbb
add
iret
in
mov
inc
mov
inc
sbb
xchg
cld
or
sub
push
pusha
cmpsl
aam
jb
add
sahf
fs
sub
mov
loop
insl
lods
aaa
jmp
mov
gs
mov
test
je
in
lahf
and
adc
and
lret
mov
xchg
mov
rcl
xchg
pop
mov
sub
add
test
mov
ret
movsl
pop
ret
rolb
and
sbb
add
out
pop
xorl
scas
scas
sbbl
push
mov
mov
lahf
cs
mov
repnz
jne
xchg
mov
jp
jle
sub
lock
and
imul
mov
pop
or
xlat
pushf
mov
mov
or
add
rcrl
frstor
inc
xorl
ficompl
mov
lods
add
pop
push
ljmp
cmp
out
imul
jno
mov
insl
les
jae
pcmpeqd
add
mov
mov
stc
xchg
sbb
sub
insb
and
dec
in
push
add
mov
iret
add
inc
mov
xor
shll
jne
dec
rcrl
les
pop
sub
mov
pop
mov
aam
pop
pop
dec
inc
lahf
cmc
pop
sbb
dec
sub
xchg
and
mov
enter
and
test
add
in
andb
cld
outsb
cmp
jg
leave
cwtl
jle
pop
shll
mov
repnz
add
gs
adc
sub
push
push
sbb
inc
jg
add
push
adc
jle
loop
std
insl
es
xchg
jb
inc
lds
repz
or
daa
jp
and
jb
xor
xchg
adc
test
fwait
mov
loop
push
xchg
or
repz
xchg
arpl
stc
in
ljmp
ds
mov
insb
std
lods
data16
sub
adc
pop
sarl
pop
insl
aam
push
loope
lds
ds
imul
aaa
pusha
cltd
pop
xor
add
add
inc
xlat
popa
inc
and
xchg
stos
repz
push
mov
pop
mov
out
in
push
call
sahf
popf
pop
lret
adc
jmp
mov
sub
into
scas
popa
or
ds
cmp
addl
jbe
xchg
add
dec
lcall
mov
or
add
sbb
jmp
adc
jl
jl
mov
mov
icebp
or
xchg
and
stos
add
mov
test
pop
in
adc
jle
mov
lods
pop
jmp
call
aam
mov
aam
push
xchg
mov
movsl
push
fs
sbb
icebp
pop
sub
jne
das
adc
lds
xchg
pop
push
jne
adc
push
das
mov
sti
push
roll
cmp
insb
inc
roll
clc
pop
sbb
xorb
add
sbb
xor
mov
lret
cmp
jb
dec
mov
adc
mov
lea
sub
loop
in
imul
mov
scas
scas
sti
mov
cmp
hlt
stos
insb
or
xchg
aam
dec
mov
adc
icebp
xlat
outsb
mov
cltd
sub
js
ret
dec
jmp
pop
cmp
xor
xchg
add
mov
pusha
icebp
enter
fs
xchg
mov
test
sarl
ljmp
fidivrs
lods
nop
xchg
mov
xor
jp
sub
out
or
je
or
pop
inc
mov
xchg
push
mov
mov
cmp
lahf
das
aaa
xchg
sub
cmpsl
fucomi
push
fisubl
test
jbe
clc
jp
push
xchg
cli
adc
mov
daa
sbb
out
aas
xchg
js
mov
xor
xchg
pop
scas
push
push
mov
clc
std
sub
xor
js
push
sub
pusha
iret
add
ret
faddl
jecxz
leave
lret
mov
pop
outsb
daa
addr16
dec
in
sbb
or
dec
sbb
push
sub
and
imul
sbb
rorl
jae
into
nop
sbb
dec
push
dec
fsts
repnz
lea
stc
jmp
out
xchg
scas
cli
sbb
negb
pusha
lea
lds
dec
push
aam
jge
mov
add
cmpsb
pop
or
int3
inc
adc
or
cmp
xor
cmpsl
jbe
push
rcl
xlat
hlt
dec
xor
mov
outsl
scas
es
add
data16
jp
fisubrl
jecxz
int3
mov
cmc
jp
push
int
inc
ss
clc
jmp
cmpsb
iret
cmpsl
pop
jbe
mov
adc
mov
mov
mov
es
pop
pop
sbb
cmc
shll
push
lret
pop
cmp
sbb
inc
cld
pop
sub
pop
mov
jns
mov
dec
outsl
andb
pop
adc
movsl
mov
inc
mov
mov
mov
xchg
push
mov
in
ret
jp
ss
dec
push
cmpsb
into
fnsave
xchg
cwtl
orl
push
iret
aam
in
xchg
pop
jg
add
mov
mov
aas
orb
lcall
loope
in
push
mov
ficoml
clc
ljmp
mov
stos
push
adcb
xchg
adc
pop
lret
xchg
in
nop
adc
ficomps
mov
popa
mov
lods
add
mov
daa
adcb
add
fs
cmp
jnp
in
das
sub
pop
jnp
sbb
rolb
sub
add
rcrl
call
lods
pop
jmp
insl
fsts
inc
pop
fmuls
es
in
xchg
mov
push
popa
xchg
inc
xchg
stc
or
sbb
stos
mov
dec
mov
pushf
insl
mov
out
pop
sahf
scas
mov
pusha
dec
nop
lds
lods
mov
inc
dec
xchg
int
mov
test
roll
cmp
andb
or
or
and
ret
mov
mov
hlt
sar
int
xchg
lods
out
pop
xchg
or
in
int3
jge
inc
mov
ret
out
negb
jne
mov
add
into
sarb
or
outsb
mov
out
movsl
jl
sbb
pop
and
or
jmp
mov
insb
jo
lods
in
les
int
test
jmp
outsl
xor
pop
jno
cmc
add
pop
inc
fldl
into
mov
stos
sub
cs
inc
push
dec
cld
arpl
mov
mov
xchg
push
jnp
jb
fcomps
movsb
push
push
or
jmp
jbe
in
dec
mov
push
ljmp
xchg
sbb
and
pop
ret
sbb
stc
data16
shrb
push
mov
and
mov
fsubrp
add
mov
lahf
stc
xor
out
mov
sub
xor
bound
clc
int3
ret
testl
pop
jo
jge
ret
cld
outsl
insl
js
hlt
sub
jp
push
ss
pushf
pop
jo
pop
mov
enter
fcmove
sub
std
and
dec
jg
test
out
loope
xlat
sbb
adc
sub
les
filds
cmp
pop
cmc
lahf
pusha
mov
out
pop
inc
jg
mov
aas
adc
sub
int3
out
sbb
sarb
pop
xchg
push
shll
int
pop
jl
push
fucomp
jae
sbb
sbb
mov
dec
test
inc
and
adc
int
lock
sti
roll
xchg
testl
into
adc
mov
dec
inc
je
mov
pop
adc
or
push
push
xlat
loop
inc
adc
outsb
fmull
mov
shll
in
movsb
int
inc
add
mov
popf
leave
pop
or
test
xchg
cmp
adc
sbb
mov
and
insl
dec
rolb
mov
sub
add
les
fisttpl
xchg
mov
stos
or
into
sub
cmpsl
jmp
lret
in
lds
ret
mov
outsb
and
cli
sar
push
std
push
pop
sub
movsb
nop
pop
sbb
inc
jae
ja
out
mov
imul
pop
sub
push
push
push
cmp
jmp
sub
adc
and
or
mov
push
push
mov
addr16
into
cmp
cli
fildl
ret
lods
mov
adc
pushf
pop
dec
ds
inc
into
mov
pop
inc
mov
insl
in
divl
rclb
pop
push
push
jl
mov
and
push
shl
sarl
inc
adcb
xchg
sub
sbb
fs
mov
mulb
fbld
xlat
pushf
insl
int3
ret
jge
push
xor
cmp
push
inc
or
push
push
aad
jb
jno
push
scas
pop
aad
dec
fimuls
push
jno
cmc
mov
shrl
push
shlb
adc
or
push
and
push
adc
xchg
jle
and
call
add
sub
add
popa
inc
jmp
test
sti
sub
ret
jo
xor
xor
mov
jecxz
jno
dec
pusha
bound
jns
or
popa
repz
push
sub
pop
inc
push
sbb
les
xchg
clc
insb
daa
xor
push
leave
jle
sti
cmp
xchg
ljmp
add
cwtl
add
dec
movsl
dec
pushf
jns
sub
dec
add
pushf
jns
ljmp
sub
fwait
or
faddl
orb
xlat
pop
ret
sub
idivb
pop
cmc
fbld
push
lcall
nop
pop
jo
push
outsb
pop
mov
addr16
sbb
or
mov
xchg
sbb
mov
xchg
xlat
dec
fnstsw
imul
mov
mov
scas
xchg
jne
sub
or
mov
ljmp
xchg
ss
lods
xchg
and
pop
and
in
dec
adc
jmp
loopne
sub
aad
imul
dec
fldl
idivl
xchg
lods
inc
ds
cld
ss
repnz
fcoms
sbb
pop
outsl
ret
mov
out
push
scas
xchg
mov
scas
sarb
push
lods
xchg
dec
call
mov
push
sti
pop
push
sbb
add
xchg
stos
mov
lahf
pusha
xchg
sbb
rcl
sbb
popa
pushf
pusha
push
call
ds
ret
dec
test
sub
xchg
or
mov
ficomps
mov
add
popa
pop
movsl
call
or
lods
jecxz
aas
lcall
mov
mov
popa
pop
stos
dec
jecxz
adc
mov
fcmovne
insb
jnp
stos
ds
loope
roll
xor
cmp
std
lahf
mov
roll
xor
pop
pop
mov
xchg
adc
loopne
cwtl
ret
push
rcrb
sbb
lds
std
daa
addb
pop
sub
ss
roll
cmc
imul
pop
and
and
mov
inc
inc
jo
loopne
out
cmp
push
ds
sti
arpl
xor
loope
icebp
adc
xchg
out
int
jl
mov
out
test
clc
popf
cmp
fstps
push
loope
add
std
rcr
lods
pop
cmc
loopne
lret
xor
xchg
cmp
jne
hlt
std
sbb
mov
nop
push
dec
lcall
lods
mov
aad
mov
add
xchg
dec
js
lods
sub
insl
mov
jo
imul
mov
arpl
pop
in
fs
pop
inc
lea
adc
aaa
lret
xchg
xor
ds
lods
xorl
or
add
mov
lahf
stos
aam
mov
inc
fidivrl
shlb
push
sbb
fucom
cvttps2pi
mov
inc
cwtl
xchg
mov
add
jg
jecxz
bound
push
xor
inc
insl
aad
dec
adc
and
sub
cmc
pop
mov
std
xchg
push
adc
js
fmull
mov
scas
push
movsl
xor
lods
fsts
pavgw
pusha
cltd
les
ja
or
add
inc
mov
add
shlb
repnz
jo
rcr
lret
test
mov
je
shll
mov
into
cld
dec
insb
jecxz
cld
aam
daa
std
pop
push
push
mov
push
orl
jge
sub
jmp
into
xchg
cmp
lahf
sti
push
push
pop
mov
jae
stos
cltd
mov
outsb
mov
inc
and
jo
sub
mov
jmp
push
pusha
gs
xchg
jns
add
cmpl
push
adc
into
loop
test
outsb
jno
jle
dec
js
xorl
xor
fcompl
pop
les
enter
aaa
in
test
xchg
xchg
mov
sub
xor
pushf
mov
aas
gs
push
and
mov
sub
mov
jae
inc
icebp
jnp,pt
sti
pop
test
sbb
sub
repz
mov
add
and
pop
loope
push
ja
jbe
inc
pop
dec
mov
push
cmpsl
std
jecxz
in
inc
dec
sbb
fsubrp
dec
roll
adc
fwait
addr16
iret
adc
outsl
subl
jns
lahf
cli
pop
cltd
mov
push
negl
arpl
loopne
insb
add
push
es
or
jns
test
and
push
jge
daa
dec
push
nop
mov
push
aaa
std
rorl
aam
sahf
js
in
iret
and
inc
idivl
out
inc
push
js
mov
out
rol
mov
adc
fisubrl
jmp
into
ja
aam
jg
push
pop
enter
mov
push
push
jno
adc
sub
lret
sti
or
fidivrs
mov
mov
xchg
jl
sub
cmp
testl
pop
add
pop
lret
fists
xchg
lret
ss
arpl
xchg
mov
andl
inc
jnp
jg
mov
adc
pop
enter
into
add
xchg
push
xchg
std
sbb
or
xor
sub
xor
int3
xchg
push
push
sbb
ror
and
shll
jo
loope
pop
lahf
sarl
inc
sbb
call
xchg
out
mov
adc
out
lods
push
pop
xor
call
pop
imul
jge
dec
scas
pop
and
jbe
subl
jmp
mov
pop
push
ret
cmovns
xchg
mov
mov
aam
in
jbe
pop
mov
nop
icebp
add
xchg
push
add
sub
repnz
adc
xlat
movsl
sbb
pop
mov
sbbb
fmuls
mov
cmp
push
testl
xchg
xchg
fiaddl
jp
push
imul
jmp
arpl
inc
scas
or
pop
test
sub
sbb
stos
fcomip
push
cmc
jnp
mov
mov
push
notb
adc
fs
xlat
jle
dec
pop
aad
rorl
test
mov
clc
add
push
mov
dec
stos
sub
push
nop
dec
repnz
jp
or
push
adc
iret
jns
mov
aaa
addl
das
in
aas
int
enter
push
dec
sub
pop
bound
pop
jg
add
add
lds
fdivs
clc
nop
in
in
pop
adc
lcall
in
sub
test
pop
pop
fmul
mov
sbbb
ss
test
dec
in
sbb
fimull
int
add
in
cmpsl
adc
sti
xor
into
and
cmpsb
pop
cmpsb
xchg
enter
stc
cltd
push
dec
jne
adc
push
scas
ljmp
ret
test
jmp
jno
testl
or
clc
clc
iret
and
push
jne
cmpl
loope
adc
push
loop
icebp
insb
or
iret
push
mov
ret
xor
mov
fst
sub
in
outsl
xchg
in
lds
cmp
mov
stc
pop
je
fnstsw
mov
pop
loopne
dec
outsb
repz
pop
in
inc
pop
sbb
repz
insb
jae
fisubrl
in
dec
xchg
mov
sbb
mov
mov
pop
pop
xor
fldcw
ret
loopne
shll
loope
sbb
shlb
out
test
test
jo
push
or
outsl
fwait
push
cmp
inc
pop
jae
dec
adc
gs
mov
jp
inc
mov
leave
test
or
lods
mov
fists
add
testb
test
gs
scas
mov
push
mov
dec
xchg
lahf
cmpsl
sub
and
std
sbb
sahf
or
mov
or
hlt
inc
sahf
sbb
mov
scas
adc
sub
or
dec
outsl
cmpsl
and
dec
aas
fdivr
stos
xchg
mov
or
ljmp
xchg
or
adc
xor
sbb
add
subl
pop
ljmp
add
into
push
pop
aad
into
int
fstpt
jp
insl
xor
dec
push
mov
mov
filds
imul
repz
push
jg
xor
push
or
repnz
inc
int
ds
flds
jo
sub
pushf
jb
pop
in
cmpsl
sub
decl
sbb
push
push
push
inc
call
dec
jecxz
push
sbb
push
adc
aaa
pop
outsb
dec
jbe
fidivs
loopne
into
mov
scas
sub
test
cs
pushl
lods
std
stos
adc
fiaddl
pop
lea
out
out
add
push
loop
lret
loope
iret
pop
bound
subb
aaa
pusha
jb
aam
sahf
bound
dec
lea
cmp
mov
sbb
aam
jae
or
inc
jp
test
xor
inc
or
movsb
lock
in
sub
scas
shll
aaa
cltd
in
jb
cmp
rclb
mov
adc
add
lret
or
lods
mov
call
into
lcall
or
push
jb
aas
fcompl
sub
stc
arpl
cs
rcrl
xor
rorb
pop
inc
ret
adc
dec
pusha
add
jge
xlat
add
jg
insl
fwait
subb
ss
add
and
lret
add
push
xor
mov
cmpsb
enter
and
popa
subb
outsl
ret
xor
inc
cmc
fs
les
call
mov
and
inc
lock
sub
inc
popf
fsubs
sarl
ss
pop
lea
lret
loope
sub
cmp
int3
sbb
es
mov
mov
or
mov
push
jg,pn
loopne
inc
outsl
sahf
cmpsl
adc
and
push
jno
push
push
xor
icebp
out
pushl
mov
pop
or
jns
sbb
and
mov
cmpsb
or
add
cwtl
push
mov
out
inc
push
sub
jge
outsl
lahf
xchg
fmull
push
stc
out
shl
pop
and
ljmp
scas
enter
scas
cld
mov
cmp
mov
mov
movsb
mov
in
mov
pop
jno,pt
cmovle
pusha
insb
lret
mov
loope
mov
xchg
mov
mov
sbb
imul
movsl
frstor
jmp
inc
arpl
imul
mov
push
test
sbb
inc
cs
pop
inc
call
adc
push
mov
and
hlt
mov
mov
ret
and
jl
inc
cmp
cmc
cmp
cmp
or
cmpsl
xchg
push
xchg
test
fwait
sbb
sub
movsb
pop
mov
pop
imul
pop
icebp
sub
or
or
insl
mov
push
nop
mov
test
dec
in
mov
push
mov
mov
gs
cmp
pop
sbb
lret
mov
xchg
insl
movsl
pop
mov
cmp
inc
xchg
movsb
jns
sarl
inc
sbb
aaa
out
xchg
loopne
fisubs
sub
jae
pop
mov
pop
mov
jnp
call
repz
add
and
lods
or
fisttps
shrl
xor
xchg
inc
aas
and
inc
out
rclb
and
push
cmc
and
test
outsl
mov
hlt
js
insl
mov
jae
lret
push
addr16
data16
dec
ret
sub
stos
cltd
jae
dec
and
jae
shl
fs
adc
in
in
sti
jp
or
in
xor
testb
dec
movsb
inc
sbb
icebp
outsl
popf
pop
lcall
inc
xlat
sbb
mov
inc
leave
jmp
clc
sub
sub
ljmp
sub
test
sahf
sahf
xchg
test
sti
inc
mov
mov
mov
jmp
dec
and
call
popf
out
hlt
repnz
adc
in
sbb
arpl
push
jo
iret
jecxz
repz
pushf
and
cld
jno
in
sub
out
mov
fstpt
jbe
mov
je
popa
test
dec
fistl
std
xchg
aaa
jbe
inc
ret
cwtl
or
mov
xrelease
push
mov
xchg
mov
adc
test
adc
sbb
cwtl
push
sub
jnp
popa
push
iret
jns
add
or
movsb
mov
sub
xor
loopne
mov
mov
adcb
mov
xchg
mov
ficoml
and
aas
xor
sbb
inc
mov
test
std
or
mov
ror
lret
sbb
aad
ljmp
or
out
pusha
add
mov
jae
ret
pushf
add
sbb
aad
roll
stc
sbb
push
jmp
add
and
or
popf
add
and
mov
mov
jb
adc
in
ror
xor
and
inc
mov
stos
mov
cmp
popf
cmpsl
jmp
mov
cmpsb
add
sbb
ljmp
push
sub
call
lock
ljmp
pop
and
dec
or
jb
cmp
push
mov
repnz
dec
push
push
cmpl
inc
push
fsubrl
cmc
js
pop
in
cmp
mov
sub
add
and
add
xchg
outsb
outsl
les
jns
push
movsb
cmpsl
aas
nop
call
push
mov
sarb
xchg
ret
mov
lcall
lret
testb
dec
mov
mov
adc
icebp
loop
shrl
or
out
mov
jg
dec
stos
les
test
inc
sub
aas
push
ds
add
adc
jg
xchg
fs
aaa
cmpsb
fwait
pop
jg
pop
pop
pusha
addl
dec
mov
push
mov
stos
inc
es
mov
stc
jns
push
insb
sbb
push
push
shll
sbb
sarl
cli
xchg
insl
adc
out
out
les
sub
scas
inc
push
sub
pop
ds
push
cmpb
dec
jp
sbb
rorb
jmp
mov
and
in
xlat
cmp
nop
fincstp
loopne
sub
fldt
mov
scas
or
inc
push
xlat
dec
and
lds
add
int3
fidivrs
cmp
dec
or
dec
das
and
xchg
mov
into
mov
mov
stos
or
push
mov
in
push
fnsave
pop
dec
rcll
daa
mov
lretw
les
pop
xchg
xchg
jge
adc
pop
aam
sarb
fwait
jne
cli
enter
or
ret
xchg
mov
repnz
push
push
pop
fnsave
pop
aas
adc
mov
pop
or
inc
xchg
ret
sbb
inc
adc
push
sbb
inc
jo
xchg
std
imul
aad
or
test
sub
inc
je
dec
mov
mov
in
xchg
and
xor
cmc
pop
shll
aam
push
push
jns
and
addr16
aas
sti
or
into
cmp
mov
aam
and
inc
sahf
mov
jae
mov
fldt
inc
sub
jge
fbstp
push
fcompl
sub
in
stos
adc
pop
add
sbb
or
jno
mov
xchg
dec
in
sahf
pop
xor
clc
xor
sar
push
dec
repz
push
loope
xchg
push
mov
cmpl
dec
mov
add
jb
std
enter
not
loopne
xchg
mov
data16
addb
jbe
cmpsb
mov
and
jg
push
fstps
je
jle
mul
repnz
jle
mov
jp
jne
int
push
stc
dec
dec
lock
fldl
jbe
daa
cmp
adc
push
fidivrl
xor
dec
dec
test
fdivr
jbe
xor
test
xchg
pop
jmp
jl
cmpsl
cmp
in
sbb
fisttps
jmp
mov
pop
popl
cmp
sub
adc
pop
lods
imul
fldcw
popa
outsl
and
rclb
imul
push
ja
movsl
out
mov
mov
cmp
sbb
ljmp
cmc
orl
in
adc
fstpl
jle
sahf
mov
aad
push
lds
outsl
scas
lods
sbb
shll
dec
or
and
push
sub
pop
mov
hlt
jb
xor
lea
hlt
loopne
data16
lcall
rorl
enter
in
in
add
mov
arpl
cmp
or
fdivl
and
pop
pusha
stos
lcall
or
or
cmpsb
sbb
iret
pop
cmp
xor
pop
das
fcoms
in
mov
xchg
sub
nop
std
repnz
insl
jmp
mov
pop
mov
and
cwtl
fwait
loope
pushf
aaa
xchg
aas
inc
outsb
jmp
push
ficomps
xor
fdivl
imul
jo
lahf
xchg
pop
xchg
mov
adc
pop
dec
adc
fwait
das
testl
inc
mov
pusha
adc
imul
mov
push
pop
mov
imul
fistpl
fdivp
xchg
adc
xchg
sub
add
and
xchg
fnstcw
mov
in
push
cmp
ss
inc
aas
in
xchg
cmp
das
cltd
bswap
cmp
ljmp
jp
xor
xor
aad
xor
sub
adc
jnp
je
lahf
fs
incb
cwtl
mov
stc
push
test
fwait
popf
stos
xchg
jp
mov
sti
fists
pushf
xchg
fimuls
xor
outsl
xchg
add
add
loopne
cli
ss
or
cs
dec
mov
cmp
mov
xor
dec
ret
dec
xor
pop
arpl
daa
and
mov
push
fimuls
mov
and
leave
mov
xor
jp
add
add
test
stc
insb
lret
dec
sbb
adc
pop
jle
jmp
push
xlat
jge
cmc
xchg
test
xor
xchg
mov
jle
push
sarb
fmull
cmpsb
mov
sub
push
lods
leave
adc
cmpsb
add
inc
or
sbb
push
imul
lcall
leave
jo
xchg
mov
and
push
jle
push
lods
pop
pop
orb
cmc
jns
popa
jne
adc
in
adc
adc
xlat
sbb
jns
fwait
mov
add
or
cmp
andl
loope
lret
aam
fwait
dec
and
lcall
lods
pop
aaa
aad
in
orl
leave
in
sbb
repnz
or
pop
inc
jbe
add
push
xor
outsl
xor
inc
lcall
and
test
gs
lcall
mov
jmp
fwait
cld
in
jo
lret
lods
movsl
pavgb
decb
out
iret
mov
cld
mov
jbe
nop
insl
pop
les
jp
pop
and
test
bound
or
lcall
and
in
fmul
pushf
push
sub
nop
je
push
cmpsb
and
jnp
adc
mov
loopne
inc
jo
ds
push
hlt
dec
hlt
ret
push
daa
sub
xor
dec
dec
pop
push
fdivl
out
push
pop
sub
je
aad
xchg
cld
jl
loop
cmp
xor
popa
das
cmpsl
mov
das
xor
push
add
jno
rorl
or
loop
push
pxor
rorl
aaa
xor
out
cwtl
out
pop
xchg
sub
fcmovu
in
mov
mov
mov
lret
mov
icebp
push
idivl
test
and
lret
jb
push
int
inc
lret
aad
adc
les
daa
mov
cmp
add
inc
flds
test
gs
ja
fwait
rcrl
jbe
or
ljmp
pop
cld
cmp
data16
xchg
mov
or
andb
add
movsb
lods
and
imul
xor
cmp
jge
mov
adc
adc
cmpsl
cmp
repnz
cmc
movsl
add
jl
andl
aam
xchg
rclb
add
test
gs
rclb
adc
xchg
push
out
sbb
cmc
sbb
out
fimull
std
mov
cmp
xor
push
pop
jg
icebp
jle
inc
bnd
mov
ret
xchg
ljmp
and
les
sub
testl
outsb
mov
push
sub
mov
pop
xor
movsb
mov
test
lock
fimuls
rolb
lahf
xor
xor
adc
sbb
dec
mov
add
fnsave
popf
sub
add
and
jl
rcrl
push
jg
sti
filds
jg
adc
xchg
fwait
adc
daa
mov
sub
cmp
aas
stc
loopne
in
addr16
clc
in
clc
inc
in
nop
push
xor
stc
pop
cmp
push
and
xlat
pusha
cmp
mov
fstpt
sub
mov
push
mov
popf
stc
jo
mov
mov
xorl
or
cmpl
pop
xchg
jp
fbstp
adc
outsl
testb
xchg
mov
inc
xor
mov
add
daa
add
inc
dec
sub
jecxz
jecxz
movsb
cmp
ret
leave
mov
rcrl
stos
xchg
xchg
int3
pop
lods
popf
fidivl
out
jbe
sbb
cmp
scas
push
cmpsb
arpl
push
test
fidivrl
mov
jmp
sub
out
das
push
xor
push
pop
or
jno
add
in
add
in
scas
cmp
test
test
inc
int
adc
xlat
push
inc
fsubrs
fs
jb
mov
out
dec
mov
repz
in
pusha
xlat
loopne
ja
popa
lock
jbe
inc
pop
jmp
ljmp
jg
mov
push
sbb
cld
loopne
pop
adc
sarb
idivl
add
test
scas
iret
fs
xchg
fisttpll
and
jg
int
addr16
pop
sbb
js
aad
stos
jmp
push
rcr
sub
jle
roll
mulb
pop
sub
test
cltd
fisttpll
cmp
push
cmpsl
bound
leave
jg
mov
and
push
cmp
push
xorl
mov
mov
insb
cmp
into
cmp
loopne
jb
push
test
lock
lret
fcomps
dec
inc
outsb
inc
aas
popf
fbld
mov
rorl
cli
inc
popa
mov
ficoml
sub
mov
mov
jl
in
cmp
push
icebp
xchg
mov
mov
cmpsl
sub
in
test
xor
xor
xchg
adc
push
mov
stos
std
ret
dec
jp
fisttpl
cwtl
test
cmp
adc
testl
or
xlat
mov
mov
test
pop
shrb
jae
pop
mov
mov
pop
pop
js
mov
stos
dec
mov
loop
or
inc
std
adc
imul
popf
mov
dec
mov
push
outsb
mov
mov
bound
pop
out
icebp
mov
icebp
addl
aam
fwait
ja
mov
inc
mov
xchg
iret
cmp
ds
iret
mov
adc
adc
daa
fisttpl
icebp
sbb
fstl
inc
inc
xchg
push
jnp
testl
push
or
movsl
and
imul
inc
mov
inc
subb
xorb
jae
cmc
push
repnz
mov
push
ret
es
jmp
adc
adc
fildl
stos
push
dec
repnz
pop
push
test
sbb
push
dec
mov
dec
rol
mov
adc
or
add
inc
push
xlat
cmp
nop
dec
out
dec
setnp
adc
dec
mov
rcrb
add
cmc
scas
sub
test
shrl
cmp
xor
cmpsl
imul
dec
ret
aas
inc
cmp
xlat
movsl
add
in
mov
sar
mov
es
fisubrl
add
dec
ss
sub
fisubs
dec
imul
or
xchg
mov
xchg
clc
insl
mov
push
int
mov
sub
mov
jne
icebp
mov
inc
dec
push
je
movsb
ret
in
fsubrl
movsl
sub
imul
adc
xchg
bswap
and
mov
scas
repnz
inc
dec
lahf
push
cmp
or
pop
rclb
aas
sub
push
inc
mov
push
adc
push
lock
movsb
leave
fmul
xorl
pop
mov
xlat
push
fisubrl
aad
and
dec
rorb
inc
mov
or
xchg
fildl
scas
popa
push
addl
cmc
gs
ret
mov
adc
enter
aas
je
and
and
adc
cltd
fldt
xorl
js
push
out
adc
fsubrl
shl
lahf
inc
mov
adc
outsb
rorb
push
sub
shrb
mov
movsl
or
cmp
rclb
pop
sahf
scas
lcall
jle
lods
stc
cs
aas
lods
inc
into
nop
je
mov
mov
dec
stos
ret
fmuls
inc
jl
icebp
jb
lods
cmp
sarb
jp
xor
idivl
fld
negb
and
cmpsl
push
cmp
mov
mov
dec
jns
inc
and
fsubl
cltd
or
xchg
jp
inc
add
enter
rolb
xchg
loopne
and
mov
mov
or
sub
pop
out
mov
inc
imul
jp
push
cmc
lret
into
add
repnz
inc
adc
mov
mov
mov
jno
pop
sbb
out
xchg
lods
aas
mov
ss
fdivrs
add
inc
iret
push
jbe,pn
fdivrl
jmp
test
mov
cmp
cmp
adc
jg
testb
repnz
call
and
lods
mov
rolb
add
ja
lret
sbb
mov
pusha
je
xor
dec
pop
lcall
insl
gs
outsl
jmp
in
push
mov
lcall
push
incl
call
sbb
pop
jmp
push
jecxz
and
imul
cmp
mov
and
and
ljmp
adc
imul
sbb
sub
sahf
pop
in
or
ret
inc
bound
lcall
push
jno
pop
pop
loopne
and
mov
mov
jge
push
into
inc
mov
mov
enter
out
dec
jl
mov
add
aas
stos
sbb
sbb
and
mov
push
mov
jg
clc
es
lahf
jne
adc
push
push
xchg
pop
fdiv
ret
pop
popf
in
fdivl
fmul
inc
jge
xor
das
dec
sahf
sbb
iret
push
and
ret
jle
dec
xchg
pop
sbb
add
lock
das
xlat
and
nop
scas
jg
out
mov
test
push
sub
push
adc
xchg
adcl
mov
andl
jecxz
add
mov
rcrl
out
shrb
inc
aas
mov
and
push
mov
je
inc
out
pop
and
pushf
jbe
xchg
add
jae
sbb
popa
xchg
dec
mov
mov
das
js
mov
insb
cmpl
inc
add
fdivs
ds
cmpsl
jge
and
enter
pushf
js
mov
jge
jp
pop
aas
mov
rcl
mov
pop
adc
sub
addr16
aas
sti
test
and
enter
scas
loop
inc
rcrl
mov
lock
cli
or
push
or
mov
dec
mov
pop
add
sbb
xchg
filds
add
aas
pop
jno
imul
pop
xor
movsl
xchg
push
idivb
icebp
dec
lahf
aad
mov
dec
iret
cmp
fsubs
fbstp
cmp
push
fwait
mov
or
lea
adc
andl
and
adc
pop
shll
fisubl
mov
dec
fistpl
nop
pop
fwait
xchg
rorb
scas
jbe
shlb
fildl
sbb
icebp
imul
push
sub
mov
int
rorl
dec
pop
push
inc
gs
inc
sbb
aaa
data16
hlt
jge
xor
in
and
fs
out
xor
add
adc
repz
adc
jl
sub
xchg
pop
sar
test
adc
std
mov
cli
inc
movq
fbld
xor
adc
dec
inc
sbb
imul
dec
pop
inc
sbb
mov
mov
clc
shll
or
xlat
icebp
push
std
out
xchg
hlt
fs
ret
sbb
sbb
cwtl
sub
mov
scas
cli
push
lock
movsw
dec
imul
rorl
imull
pop
xor
mov
mov
loope
rol
jp
fmuls
inc
mov
out
cmp
pop
mov
lock
pop
es
fsubrl
push
repz
scas
xchg
inc
jns
inc
sub
sarl
ja
xor
mov
popa
dec
gs
mov
cmp
ret
sub
sbb
jb
pop
sub
xchg
push
xlat
out
fucompp
cli
rclb
pop
xchg
aaa
int3
cli
mov
jbe
mov
js
inc
push
or
repnz
outsb
and
movsl
xor
mov
test
gs
mov
pop
dec
mov
xor
adc
inc
mov
sub
mov
clc
cmp
jl
push
push
addr16
loopne
in
ja
fnstsw
xor
fimuls
je
sub
push
mov
in
outsb
sub
sub
mov
fdivp
jle
push
imul
insl
cmpsl
ret
pop
inc
pop
roll
dec
andb
xor
scas
popf
xor
jns
icebp
mov
dec
adc
sub
push
in
out
xor
insb
out
sar
loopne
addr16
mov
sahf
jno
aas
das
inc
jo
xor
popf
in
lods
test
xchg
adc
pop
mov
dec
mov
dec
push
fcompl
jecxz
nop
lds
fldt
sahf
hlt
and
enter
insl
out
xchg
sbb
push
out
xchg
test
insl
sub
pop
ds
in
sbb
repz
testb
adc
imul
andl
je
pop
test
gs
jbe
add
sti
lods
int3
sbb
or
xchg
and
fnstsw
movsl
ds
les
dec
inc
loope
or
aas
pop
sub
aaa
rcrl
push
pop
fdivl
cmc
dec
ret
xor
add
pop
push
fidivs
or
cmp
inc
ret
pop
icebp
add
lcall
fs
sarl
cwtl
sub
jbe
mov
inc
cmpb
ds
mov
xchg
cmp
das
dec
pop
pop
jp
test
std
push
repnz
xchg
xlat
dec
adc
push
adc
daa
loop
aam
imul
add
lea
adc
jbe
jmp
test
sub
pop
nop
jge
movsb
out
pop
xchg
mov
insl
imul
dec
jnp
jecxz
cmpsb
hlt
into
bound
shll
gs
sbb
mov
xchg
xor
cli
int3
pop
xchg
sbb
pop
pop
push
jo
sub
cmc
fwait
icebp
xchg
test
xor
sub
iret
xor
adc
sbb
mov
lods
sub
xor
pushf
roll
lahf
scas
insl
jo
push
push
sbb
mov
mov
xor
imul
lods
fidivrs
out
or
movsl
popa
add
test
push
stos
or
xchg
rcrb
add
xchg
enter
int
scas
cmp
add
xchg
inc
incb
mov
pop
adc
gs
rcl
cwtl
add
jle
fiaddl
mov
in
xchg
loop
and
hlt
call
mov
ret
movsl
push
out
es
jae
cmp
sub
add
mov
add
loop
mov
or
int
add
popl
ljmp
mov
jg
jno
adc
mov
push
lcall
jbe
and
push
pop
xchg
inc
inc
and
mov
mov
or
cmp
bound
cmp
cmp
sub
ja
loop
outsb
push
lds
xor
nop
cli
lret
inc
mov
movsb
xchg
push
scas
sahf
int3
push
inc
jecxz
movsl
pop
aam
push
pop
aaa
inc
dec
gs
or
sub
bound
js
sub
stc
sbb
js
lret
out
daa
dec
jge
popf
mov
jmp
mov
dec
add
pushl
sub
insb
xchg
xchg
push
adc
les
jns
mov
xchg
mov
lods
aad
adc
int
sbb
sub
xor
mov
or
cli
out
cld
fisubrs
push
jle
into
stc
mov
dec
imul
and
pop
pop
mov
jne
shlb
std
sbb
jb
cmp
pop
xchg
outsl
or
lds
addr16
cmp
cmp
xor
lret
mov
xchg
icebp
stc
int
inc
shl
imul
scas
jne
gs
and
pushf
fistpl
je
movsl
pushf
pop
push
testb
je
mov
ljmp
xchg
push
mov
aas
jno
int
sub
cmp
adc
mov
test
xor
cmpl
and
in
push
add
mov
pop
idivb
mov
ficoms
mov
fsubr
xchg
jo
cld
xor
cmp
pop
jg
mov
shr
mov
into
imul
mov
pushf
or
push
imul
imul
cwtl
insb
addr16
push
fstps
mov
xchg
lahf
sub
adc
xor
xor
aaa
or
xor
pushf
pop
cwtl
mov
xorb
adc
mov
out
xor
xchg
aas
rclb
clc
cmp
cwtl
jecxz
dec
jns
movsl
into
xor
push
mov
jle
sub
sbb
inc
lcall
xchg
dec
mov
rolb
sahf
xchg
push
shlb
pop
cmc
stc
pop
vpunpcklwd
mov
jp
jbe
leave
jl
adc
rcr
pop
lahf
or
aaa
mov
add
and
pusha
cmpl
cli
aam
lods
inc
aad
dec
je
out
lds
sub
pop
inc
loop
mov
icebp
jmp
pushf
jmp
add
popa
adc
fisttpll
les
bswap
std
int
arpl
mov
bound
jle
dec
aaa
and
mov
push
shll
pop
inc
nop
cmp
lods
dec
pop
int
repz
cli
test
cmpsb
int3
cs
pop
fisttpll
and
push
jg
mov
xor
into
popa
add
mov
out
lcall
pop
mov
movsb
repz
es
mov
mov
adc
jne
add
mov
insl
mov
data16
pushl
jnp
push
int
call
fdivrl
movsl
sbb
cmp
adc
or
adc
sub
push
into
adc
out
scas
xchg
pop
loope
mov
adc
mov
add
andb
insl
movsl
std
das
icebp
cmp
outsb
jns
fbstp
and
xchg
add
xchg
sahf
mov
pop
dec
shll
push
pop
sbb
xchg
sub
pop
inc
push
push
icebp
imul
aad
push
cmp
xor
sbb
cmp
ds
outsb
push
and
scas
stos
add
mov
negl
cmpsl
pop
aad
or
hlt
jmp
and
mov
insl
lcall
mov
push
push
xchg
pop
xchg
mov
icebp
mov
and
dec
add
aas
cmp
pop
in
lret
mov
xchg
lods
lock
sub
lods
loopne
mov
out
pop
xchg
leave
cmp
jno
push
lcall
push
das
test
mov
outsl
xlat
jmp
sub
mov
add
xor
cmpsl
jge
cli
xor
arpl
je
inc
imul
jge
jp
push
dec
pusha
pop
xor
sub
out
out
cmc
xchg
cld
pop
andl
in
sbb
and
sub
imul
push
adc
outsb
clc
fsub
ljmp
xor
sbb
xchg
sub
cld
js
jb
push
ret
xchg
sbb
jmp
outsl
mov
dec
and
sahf
les
sub
add
pusha
sarl
mov
jl
adc
or
in
cmc
mov
adc
ret
mov
push
mov
es
and
push
cmp
mov
sub
and
orb
jl
aam
xor
mov
or
out
cmp
mov
sti
jns
orl
arpl
jmp
outsl
and
xchg
mov
sbb
push
cmpl
idivb
jecxz
clc
and
jae
pop
sbb
sub
fwait
movsb
mov
cmp
cltd
out
loopne
jns,pt
scas
sbb
cmp
into
jmp
add
cmpsb
add
lds
out
xchg
ja
std
into
enter
mov
lcall
push
lret
sbb
lret
add
xor
mov
lahf
mov
and
add
mov
fisubrs
xchg
aam
mov
addb
shl
out
rcr
pop
aad
cld
cmp
mov
jno
add
add
mov
or
xchg
push
push
push
sub
lods
pop
xlat
pop
push
sbb
pop
lret
repz
xor
adc
mov
out
jns
insb
xor
add
das
imul
jae
adc
cmc
movsl
mov
stc
fidivs
cmp
lds
cmp
test
xor
push
adc
cmp
jns
dec
test
inc
mov
fstpl
mov
jnp
pop
push
cmp
lea
repnz
ret
cmp
cwtl
sub
jnp
shlb
ficoms
inc
jge
or
sbb
pop
leave
nop
inc
push
scas
mov
cmpsb
cli
add
lea
aaa
enter
mov
pop
inc
mov
mov
cmp
add
inc
xchg
xor
pop
js
push
jge
ljmp
fsts
sbb
mov
mov
inc
xchg
dec
cltd
xlat
push
test
cmpsb
fmuls
pop
mov
jnp
xchg
call
cmp
xor
hlt
xlat
sub
loop
push
xor
cmpsb
inc
inc
fldcw
mov
and
add
add
xchg
sbb
jnp
lret
pop
in
adc
out
push
std
pushl
and
jb
sub
cmp
clc
ss
mov
stc
mov
xor
mov
enter
mov
or
in
mov
in
xor
push
push
in
xlat
sbb
adc
and
cmp
adc
xchg
push
mov
mov
nop
xchg
test
mov
movsl
ror
scas
cmc
mov
xchg
dec
add
std
sbb
fimuls
lods
test
push
out
jo,pt
lods
push
push
in
repz
dec
mov
inc
pop
xchg
mov
shlb
jne
jge
mov
shlb
sbb
pop
or
xchg
mov
push
adc
aad
inc
in
fldcw
jne
fisttps
mov
das
nop
cli
rcll
aam
mov
out
iret
push
arpl
pop
pop
jbe
cmpb
pop
out
cld
fwait
cs
outsb
dec
mov
xchg
or
test
aam
loope
int
mov
mov
cmp
pushf
sbb
rcr
pop
xchg
ljmp
inc
xor
push
or
mov
pusha
jno
mov
add
fidivrl
movsb
incb
sub
adc
mov
sub
in
clc
add
xchg
call
mov
ficoml
push
pop
xor
shll
add
outsl
push
pusha
movsl
jge
gs
hlt
mov
sub
push
xor
loop
out
dec
stos
cmp
cmpsb
jb
movsl
and
mov
inc
cli
cwtl
mov
or
jg
ret
xlat
mov
push
popa
lahf
pop
scas
inc
xor
sub
je
lea
add
xchg
fstps
rcr
fsubp
movq
loop
fld
sbb
outsl
loope
pushl
xchg
addr16
jecxz
aas
adc
jle
es
adc
adc
inc
jmp
mov
mov
xor
test
ret
scas
dec
add
fldlg2
mov
mov
pop
mov
mov
push
add
mul
xchg
hlt
and
pop
outsb
hlt
pop
mov
dec
les
cltd
aad
into
cli
adc
add
mov
outsb
xchg
sub
or
xchg
rorl
adc
xchg
jge,pt
mov
imul
xor
outsl
pop
mov
stc
jb
pop
fistpll
push
sbbl
arpl
imul
shrl
sbb
dec
sub
enter
in
cmp
repnz
xchg
mov
dec
xor
push
loope
jae
aam
jle
nop
push
push
aaa
cmpsl
or
mov
jne
aam
rcl
addr16
inc
pushf
int3
cmc
sbb
bound
out
out
jg
jp
loop
aas
vmread
lds
or
dec
add
movsl
push
dec
mov
cmc
jb
dec
stos
sub
sbb
sbb
lock
sub
add
mov
out
push
fdivs
negl
and
jecxz
xor
arpl
jb
push
push
dec
cmc
jl
cmp
mov
mov
sahf
mov
pop
and
pop
pop
sbb
cwtl
lods
andb
push
lock
mov
adc
pusha
xchg
ret
aas
fistpll
test
cmp
in
xchg
or
cs
jns
aad
clc
out
hlt
adc
push
sub
stc
lcall
dec
cwtl
movsl
in
mov
fsubrs
pop
mov
push
sub
shlb
movsb
or
test
push
push
popa
mov
inc
and
push
stc
jmp
fcom
aad
sub
xchg
lds
shll
cltd
add
dec
jno
xchg
or
jl
xor
xlat
hlt
xchg
jg,pt
mov
int
aad
std
inc
and
mov
push
dec
fimuls
or
xchg
push
inc
pop
insb
sbb
imul
mov
mov
shll
imul
mov
jle
lcall
and
adc
xor
test
cmpsl
stos
stos
testl
leave
pop
in
ret
negb
out
popa
in
nop
decb
dec
cmp
mov
mov
inc
xchg
mov
jle
cltd
bts
ret
lods
adcb
sub
mov
sbb
adc
or
sbb
aad
pop
test
or
in
fcoms
pop
movsl
adc
adc
pop
add
push
push
and
cmovbe
mov
and
rolb
mov
dec
hlt
insl
imul
std
mov
rcrl
rep
int
xchg
fsubr
jae
adc
mov
pop
push
out
push
cltd
pop
jbe
imul
fidivrl
sub
lcall
imull
adc
adc
bound
shll
scas
mov
lods
push
shll
jmp
sbb
sbb
jno
mov
ret
add
and
mov
pop
shrb
push
jl
mov
imul
repz
or
push
push
push
stc
cmp
xchg
ja
dec
mov
loope
shl
leave
mov
cmc
addb
pusha
arpl
bound
test
inc
push
fprem
ret
pop
inc
in
pop
xchg
insl
and
sti
xchg
sbb
mov
idivl
jbe
aam
fprem1
test
repz
push
or
mov
adc
stos
jno
pop
sar
fbld
push
dec
pop
mov
outsb
jno
or
and
in
mov
or
imul
jp
lahf
lret
call
jp
push
repnz
fldenv
ror
lea
jno
popa
dec
push
cli
and
insl
jmp
push
xorl
mov
fisttpl
in
bound
cmpsl
mov
repnz
mov
divb
inc
push
mov
cmp
or
es
enter
call
push
or
aas
jae
es
and
pop
pop
jb
inc
jle
sub
ret
call
and
sahf
add
xchg
push
shlb
loop
cmc
fwait
leave
add
dec
imul
adc
scas
push
push
pop
aas
pop
cwtl
es
dec
scas
dec
in
nop
mov
cmp
xchg
in
rorb
mov
push
ds
rclb
mov
adc
xchg
ljmp
ljmp
fistl
dec
cltd
mov
mov
and
lods
stc
leave
xchg
aas
sub
sahf
test
jp
ss
push
adc
and
dec
dec
or
js
dec
in
pusha
iret
mov
xor
mov
out
stc
or
stc
insl
adc
loop
sbb
xchg
xlat
cli
loope
add
push
jno
testb
mov
ja
cmp
in
push
dec
sbb
fmul
imul
cmp
pop
mov
lods
xchg
aad
xchg
clc
leave
or
mov
repnz
mov
lret
cmp
movsl
sub
das
popa
sbb
movb
cmc
mov
mov
add
movsb
repz
mov
mov
inc
mov
xor
arpl
pop
movsl
cmp
dec
mov
cli
addb
inc
mov
push
aad
pop
imul
cld
loope
fimuls
sahf
adc
push
lahf
mov
rcr
test
adc
mov
dec
add
lret
pop
test
jmp
repz
lahf
adc
mov
mov
jne
mov
pop
xor
mov
jo
jle
ds
ss
sub
mov
in
mov
cmp
mov
lret
or
mov
inc
sub
inc
lods
adcb
lods
arpl
test
add
fisttpl
mov
stos
inc
pop
or
jl
mov
jae
sub
adc
push
xchg
pop
inc
shr
xor
jo
xchg
mov
mov
fmull
stc
cmp
push
pop
sub
sahf
push
repz
test
mov
xorl
or
xor
popf
mov
push
decl
jno
int3
jg
cmpsl
test
xchg
repz
vpaddq
fisubs
inc
outsl
xor
les
sub
cli
dec
cli
call
dec
sbb
ds
lods
jecxz
out
xchg
jl
inc
jmp
pop
adc
cmc
loope
outsb
ret
imul
outsl
mov
fsubp
inc
sub
sbb
imul
mov
out
lock
push
setbe
cmp
xchg
test
sbb
sbb
and
pusha
cmpsl
sarl
ret
fucomip
jp
pop
sub
inc
xchg
pushl
cmp
lods
add
repnz
lea
cli
pop
aad
lds
fwait
pop
test
mov
push
lcall
add
sbb
jmp
xchg
xchg
push
ret
cmpsb
push
lods
fstp
push
mov
scas
mov
jle
or
out
pop
sub
fdivs
mov
adc
lock
push
dec
sub
mov
sbbb
sti
mov
into
mov
filds
mov
cwtl
dec
add
sub
sub
data16
xchg
into
pop
push
movsb
cwtl
jp
or
stos
inc
fistpll
cmp
fidivl
sub
cmpsb
adc
fdivp
xor
lret
test
dec
jbe
jl
push
mov
xchg
mov
jo
adc
test
mov
icebp
pop
sbb
mov
sub
jg
aam
fcomip
addb
xchg
cli
fcmove
aam
mov
mov
cld
xor
aad
mov
xor
outsb
dec
mov
mov
xchg
rcrb
xchg
or
adc
loop
or
fbld
sub
jns
les
pop
popf
sub
xchg
xor
xor
sub
or
cmp
movsb
cmp
sub
or
pop
nop
cmp
or
aam
mov
push
jle,pt
pop
cmp
xorb
mov
jmp
cltd
lret
mov
out
shrl
mov
repnz
rclb
test
mov
cmp
xchg
aaa
pop
das
imul
insl
fdivrs
rcrb
dec
or
in
and
xor
nop
add
loope
mov
fistps
dec
scas
lods
jge
add
imul
push
lock
arpl
mov
dec
fiaddl
add
push
aad
rcrb
fisttpl
movsl
dec
sarl
mov
stos
aad
stos
out
jmp
test
fldl
fs
jno
scas
aad
sub
pop
push
inc
sti
or
lret
pop
sub
lcall
xchg
cmpsl
loop
mov
in
xchg
test
add
dec
sub
test
mov
jb
out
data16
push
imul
push
adc
loope
push
push
mov
or
dec
inc
out
or
xor
dec
add
xorps
fcompl
cmp
add
fstps
ds
push
dec
mov
test
mov
dec
fnsave
mov
pop
or
jmp
inc
js
outsl
dec
scas
or
adc
lock
stos
movups
sahf
insb
or
xor
sti
jmp
orl
push
cmpsl
aad
inc
std
jns
je
lods
cmpsl
arpl
mov
cwtl
repnz
test
jle
or
and
lds
sahf
and
or
inc
pusha
jle
cmp
mov
data16
clc
xor
icebp
push
stos
inc
fsubrs
popf
je
push
fistl
test
xor
push
scas
data16
lock
es
sbb
in
repz
mov
in
movsl
inc
xchg
data16
daa
mov
xchg
cmc
mov
daa
inc
xchg
adc
movsb
mov
and
cmp
into
jmp
cli
add
push
pop
jno
jns
mov
or
in
gs
push
cmpb
mov
testl
enter
test
ficompl
dec
les
shll
and
mov
sbb
mov
mov
or
xchg
sbb
mov
daa
popa
sub
lds
push
cmp
mov
jge
rol
shl
mov
add
sub
shll
push
fsubl
mov
dec
or
and
cmpb
imul
xchg
iret
inc
xchg
mov
arpl
in
push
cmc
out
mov
jbe
repnz
outsb
pop
mov
jnp
add
inc
pop
mov
jae
jmp
mov
push
test
in
sahf
outsl
inc
xor
neg
add
jg
lret
in
xchg
push
cmc
mov
mov
cmpsb
outsb
hlt
sbbl
outsb
not
adc
lods
jb
cli
aaa
out
outsb
ja
xlat
enter
sbb
xor
ret
rorb
push
xor
sbb
push
adc
popa
xor
jg
lret
enter
or
pop
pop
test
js
push
mov
or
pop
ds
pop
add
xor
push
and
xchg
and
xchg
mov
or
dec
mov
call
mov
cmpsb
or
in
mov
aam
jl
add
xlat
leave
movl
cmp
mov
imul
add
mov
xor
icebp
cmc
pop
jae
insl
nop
jnp
test
nop
loopne
push
xor
pop
movsb
dec
xlat
pop
outsl
adc
jb
add
xor
lcall
inc
adc
fsubrs
lahf
add
inc
mov
xchg
fndisi(8087
inc
popf
jg
lea
pop
cmpb
mov
and
dec
ficoms
fisubl
cli
mov
adc
jecxz
test
mov
xchg
outsb
mov
inc
add
dec
nop
mov
movl
rolb
test
or
fs
sbb
xchg
fildl
jns
xchg
jno
stos
aad
adc
movsl
aad
xchg
inc
jle
mov
les
pop
pop
cmc
sbb
mov
jo
outsb
out
adc
or
mov
pop
cmp
imul
cli
sti
adc
mov
sbb
cmp
test
sub
test
daa
pop
enter
or
addl
xchg
loop
xchg
test
inc
js
dec
addr16
pop
cwtl
aam
cwtl
cmpsb
dec
cmp
xor
mov
leave
ret
jae
repnz
jecxz
dec
ljmp
add
iret
cld
dec
dec
and
fisubrl
push
test
jmp
push
mov
cmp
cmp
fs
arpl
dec
sub
and
out
adc
cmpsl
testb
or
jp
add
out
scas
ds
test
ja
jp
lods
or
rorl
lock
dec
push
pop
ds
in
mov
push
fabs
int
jmp
sub
in
lret
add
aaa
pop
into
cmp
call
or
test
mov
into
adc
push
lret
add
lret
mov
imul
mov
lret
mov
jne
inc
push
dec
inc
ret
xchg
rclb
popa
cmp
mov
movsl
mov
dec
fs
mov
sarb
sbb
popf
sub
das
pop
add
int
cmp
inc
test
adc
pushf
jb
rorb
rorb
insb
dec
and
imul
mov
add
arpl
ja
or
ret
pop
dec
shll
int3
fwait
sbb
cmp
in
ljmp
fsubr
out
pop
std
lret
mov
test
cmp
out
mov
shll
adc
clc
add
ljmp
lock
or
jnp
daa
loopne
xchg
dec
pop
pushf
pop
cmp
insl
enter
js
jge
xchg
mov
jecxz
or
mov
repz
in
test
lods
mov
mov
pushf
popf
cmp
mov
cmp
and
push
loopne
mov
roll
test
jmp
out
dec
aam
jae
and
inc
std
mov
cld
dec
nop
mov
mov
cld
jmp
call
adc
lret
sub
stos
out
in
in
inc
push
pop
fwait
pushf
jmp
in
lret
mov
loop
xchg
dec
xor
push
or
sub
bound
xor
fucom
xchg
pop
scas
inc
jmp
shll
push
sti
fbstp
insb
stos
movsb
sbb
int
dec
jle
test
cmc
or
or
dec
sahf
sbb
sti
sub
xchg
cmp
inc
sti
lret
ds
mov
inc
test
cmp
jae
lcall
dec
jo
jno
ret
js
sub
push
das
ss
aas
jecxz
bound
test
into
push
incb
adc
sub
cmp
xor
cmp
sub
mov
pop
push
mov
pop
jb
pop
xor
jecxz
and
dec
insl
jno
jb
and
loop
ret
xchg
xor
test
xchg
data16
inc
mov
inc
and
add
fwait
or
fldenv
popw
or
fcoml
movsl
in
push
clc
ficoml
popf
data16
mov
push
inc
nop
int
insb
cltd
xchg
mov
ss
dec
cli
xchg
and
push
and
repz
leave
mov
pop
push
add
in
sbb
dec
and
fsubrs
adc
or
out
or
jns
dec
push
test
jp
dec
or
mov
cmp
bound
xchg
outsb
xchg
add
pop
sahf
xchg
sub
add
inc
std
shr
int3
inc
dec
jg
into
sub
add
xchg
test
dec
dec
dec
je
sbb
inc
jnp
sub
outsl
mov
sbb
push
mov
aad
jno
pop
aaa
inc
sub
fisubrl
lods
cld
andl
test
mov
adc
sar
pop
mov
aad
pop
faddl
push
stc
into
lcall
mov
ljmp
cmp
push
fwait
pop
inc
fildll
mov
cmp
adc
xor
loop
dec
lea
xlat
xchg
insb
jl
mov
in
or
sub
and
nop
imul
cmp
popf
popf
cmp
into
jbe
jns
sbb
mov
pop
push
je
dec
fcmovnu
arpl
js
and
pop
xor
sub
popa
js
jb
cmp
jnp
dec
xchg
xor
xor
cmp
xor
jae
inc
xchg
pop
cmp
or
test
lock
mov
lods
cmp
aaa
sahf
mov
push
mov
test
mov
jo
enter
and
pop
xchg
dec
jle
cwtl
add
cmc
adc
add
jg
out
loop
adc
iret
insl
repz
jle
jp
add
sbb
in
mov
out
or
loope
sub
movsb
fnsave
sarl
lock
xchg
push
jbe
adc
mov
in
repz
call
cmp
mov
jno
shlb
jo
mov
xchg
cli
push
loopne
add
push
or
and
aam
lea
aaa
xchg
mov
dec
mulb
mov
mov
adc
pop
pusha
jb
in
push
jno
push
mov
pop
mov
or
cmp
add
mov
jnp
push
sub
inc
xlat
jno
jns
dec
mov
fwait
sub
in
and
iret
rcll
mov
xchg
es
cld
push
test
incl
fcoms
insb
mov
cltd
sbb
je
push
repz
mov
xor
fistps
or
sub
fstpl
mov
outsb
inc
mov
stos
and
in
mov
faddl
loope
sti
repz
mov
push
mov
scas
lods
mov
cmpsl
test
dec
shlb
add
adc
mov
jecxz
xor
mull
jnp
jno
lea
xchg
sub
insl
xchg
cmpsl
sub
xor
loope
xchg
fsubrs
sub
push
rol
fstpt
stc
jmp
xchg
addb
call
test
jle
pop
add
lea
mov
ret
inc
mov
push
cmp
dec
jne
mov
inc
movsl
adc
mov
jle
pusha
rcrb
adc
sub
and
add
sub
pop
sbb
cmpsb
inc
mov
data16
fisubl
xchg
lods
in
cli
imul
lret
je
sub
imul
xor
stos
push
jmp
cmpb
inc
insb
inc
adc
lock
mov
test
mov
dec
outsb
aaa
lea
mov
enter
mov
fstpl
les
jmp
daa
arpl
pushf
xor
loope
test
shll
mov
push
cmp
lock
dec
cmp
gs
jp
or
jmp
or
mov
push
in
std
xchg
inc
jns
xchg
push
aaa
or
movsb
pop
shll
xchg
int
mov
push
mov
outsl
or
fisttps
mov
mov
arpl
xchg
jns
js
or
push
cmpsb
adc
jl
push
dec
movsl
mov
mov
xor
lods
aaa
lock
stc
out
or
call
outsl
cli
sahf
cwtl
xchg
test
cwtl
in
xor
mov
cmp
ljmp
push
inc
sbb
jbe
ljmp
adc
push
or
dec
cmp
test
cmp
xchg
jo
dec
dec
sub
outsb
test
xor
add
or
cmp
inc
out
add
imul
sbb
loop
xchg
mov
and
negl
in
cmp
enter
ja
mov
test
jnp
jp
cmp
aas
jno
pop
xchg
or
jl
ret
orb
xor
insl
dec
push
and
xor
or
cmpsb
loop
movsb
cmp
push
lods
fdivrs
adc
enter
jno
stos
pop
pop
arpl
sub
push
push
cmp
addr16
pusha
aaa
stos
sub
or
gs
cld
pop
in
imul
cmp
xchg
mov
sub
fisubrs
shl
aad
pop
xor
es
pop
mov
lcall
xchg
mov
daa
pop
mov
sahf
or
adc
popf
iret
pop
int
lds
jl
sbb
jle
lahf
int3
dec
scas
xor
mov
xchg
ret
clc
popa
scas
in
in
and
dec
inc
xchg
loop
add
inc
pop
mov
mov
adc
sub
in
xor
mov
push
jl
mov
cmpsb
mov
dec
ret
lds
jns
or
inc
mov
pop
xor
jbe
jl
mov
aad
out
jnp
sahf
ret
orps
xor
pop
insl
pop
inc
subl
jl
or
leave
or
das
leave
push
fistpll
rcr
mov
jnp
xor
ds
cmp
mov
xor
clc
xchg
jb
mov
rcl
daa
sub
xchg
cli
fucom
arpl
cmpsb
and
pop
je
and
shlb
arpl
xchg
xor
pop
mov
rorb
cmpl
imul
cmp
sbb
push
in
xchg
rol
out
xorb
dec
jnp
outsb
mov
inc
mov
and
push
cmp
sahf
ret
ljmp
xchg
shl
or
add
jmp
ss
dec
clc
fistps
sub
jae,pn
mov
cmp
arpl
dec
dec
in
xchg
ret
movsl
push
xchg
inc
push
sti
mov
cmpsb
mov
aam
cmc
aaa
mov
xor
push
out
imul
sub
xchg
mov
stos
fstpl
add
add
pop
and
lahf
xchg
roll
jle
mov
arpl
test
xor
aas
push
icebp
push
mov
cwtl
aad
fimull
ja
movsl
adc
enter
or
and
inc
push
pop
fidivs
adc
xchg
repz
cli
fstps
aam
lds
add
cmp
cmp
cmp
sti
xchg
pop
jns
push
pop
fnstenv
lret
mov
xlat
int3
fldenv
add
pop
or
fdivrl
jb
ficoms
decl
and
mov
push
dec
sub
mov
lahf
cmp
push
xor
xchg
aad
cmp
and
fs
lock
pop
fbstp
jmp
sbb
int3
push
adc
ret
mov
mov
cltd
sbb
scas
and
sbb
xor
test
pop
push
sbb
xchg
test
scas
std
icebp
adc
dec
addr16
fcmovnbe
insl
test
fistps
mov
cmp
addb
bound
pop
pop
in
sahf
hlt
aam
or
xchg
loopne
mov
fwait
sub
pop
push
jg
lods
ljmp
out
push
adc
lret
and
cmp
aam
and
fadd
cmp
inc
in
add
sbb
pop
lea
popl
pop
jne
mov
ficomps
inc
mov
mov
xchg
mov
inc
add
pop
ret
movsb
mov
or
out
mov
fdivs
adcb
imul
jbe
fstpt
aad
lret
andb
fisubrs
inc
and
fildll
xchg
add
mov
lods
mov
xlat
xchg
mov
pop
out
fcoml
inc
es
mov
pop
xchg
mov
ret
push
sub
cmc
pop
mov
mov
sbb
aas
repnz
sbb
rcr
xor
or
mov
mov
xchg
and
lahf
mov
pop
sub
inc
dec
mov
imul
or
mov
data16
xor
cltd
js
pop
cmpsb
pop
fld
cmp
loope
into
push
push
notb
bound
test
jmp
pop
mov
das
jae
and
cltd
push
fsubr
xlat
and
lahf
outsl
inc
push
jle
xchg
imul
les
jae
and
outsl
xchg
clc
and
jp
not
ficoms
push
xchg
xchg
xor
stos
rcl
or
mov
mov
les
pop
pushf
cli
inc
mov
insb
adc
jp
mov
fwait
dec
scas
gs
stc
xor
adc
mov
adc
add
sbb
frstor
cmc
mov
ret
nop
adc
shl
cmc
inc
and
sub
inc
adc
or
insb
pcmpeqd
push
loopne
cmp
mov
daa
pop
xchg
mov
repnz
aad
jecxz
push
mov
push
xor
dec
and
jle
mov
dec
call
aad
ljmp
adc
mov
shrb
jnp
test
pop
sti
lcall
inc
lea
mov
push
das
xchg
stc
jl
dec
push
xchg
push
sti
cmpsb
inc
lahf
lret
out
daa
in
icebp
mov
jo
gs
int3
mov
clc
imul
xchg
inc
xor
push
jne
adc
adc
sarb
push
cmp
inc
insl
adc
or
inc
add
stc
icebp
adc
movsb
repz
xchg
roll
xlat
aam
daa
inc
in
sbb
ds
mov
jle
jnp
cmpsb
add
mov
rol
lock
xor
fdivrs
sbb
js
cmp
imul
adc
dec
pop
inc
jl
aad
pop
loopne
lret
std
jno
call
xchg
xchg
leave
sub
arpl
js
das
movsl
or
lret
pop
gs
fdivrl
or
dec
xor
pop
outsl
xchg
dec
and
das
fs
imul
daa
in
inc
nop
in
mov
ja
cmp
js
adc
insb
jg
jb
sbb
in
and
lret
outsl
lods
add
in
xchg
jg
fcom
mov
sti
adc
xlat
inc
mov
dec
xchg
pushf
ficomps
xchg
mov
mov
sbb
adc
adc
fisubrl
int3
mov
imul
ficoms
sahf
mov
ret
insl
pop
xchg
je
sub
mov
ficomps
aas
sbb
add
or
xor
mov
in
pop
lcall
sub
adc
push
mov
mov
mov
xchg
lods
xchg
cs
sub
xor
push
ja
cwtl
add
adc
inc
mov
mov
xchg
repz
in
outsl
mov
cmp
inc
add
rclb
jns
xor
cld
mov
and
and
or
inc
mov
aam
mov
push
inc
add
mov
push
lds
incb
cwtl
test
fbld
lcall
mov
shr
pop
sarb
stos
xor
aaa
rclb
pop
jo
in
repnz
jle
scas
gs
jns
inc
in
in
mov
sbb
cmc
popf
adc
and
lods
les
adc
mov
idivb
push
xchg
mov
dec
lods
and
mov
pop
jns
push
dec
fildll
lock
pop
or
mov
sub
cmp
cmp
lods
test
pop
and
dec
inc
and
dec
xor
ret
xor
call
les
fadd
dec
lds
xor
ficoms
fcoms
pop
popf
mov
jp
and
push
mov
into
jne
mov
pusha
jb
or
insl
push
mov
dec
in
pop
mov
out
loop
or
mov
or
out
sbb
repnz
add
xlat
fmull
inc
mov
mov
sbb
imul
push
sbb
mov
stc
and
das
insb
lods
xor
jae
shlb
int
cmp
fwait
sti
das
stos
pusha
out
pop
adc
add
in
into
dec
mov
sub
sub
insl
mov
dec
aad
rcrl
mov
add
cltd
test
and
insb
mov
xchg
dec
pop
jecxz
push
jae
lods
or
in
jb
test
and
jae
xlat
sbb
add
mov
jg
add
stos
inc
mov
fsubrl
add
clc
pop
aas
scas
mov
or
jnp
negb
adc
mov
sub
repz
mov
je,pt
mov
mov
mov
lds
sub
jp
stos
in
cwtl
jnp
adc
leave
insl
lahf
cmp
sbb
iret
xchg
lret
imul
push
xchg
or
xor
sti
jb
dec
xor
mov
addr16
shl
xchg
loop
mov
cwtl
stc
mov
and
popf
mov
cltd
or
or
stc
pop
cmovle
inc
loop
xchg
fwait
scas
pop
addr16
fwait
xor
es
hlt
or
aad
and
xor
sarb
add
negb
lret
mov
push
data16
insl
loop
pop
xchg
jbe
stos
es
addr16
add
cli
out
lahf
test
mov
movsl
sbb
movsl
inc
mov
xor
call
popa
arpl
insl
add
fnstcw
icebp
dec
mov
lock
xlat
lock
sbb
push
xor
mov
xchg
dec
lods
push
push
push
ja
and
loope
shlb
mov
mov
test
repnz
cld
sub
js
sti
shrb
add
in
pop
inc
adc
fisubrs
jo
data16
sbb
push
push
jmp
adc
jne
insb
mov
xchg
test
enter
mov
mov
xor
jae
imul
jp
mov
mov
lcall
jl
push
ljmp
repz
lret
gs
sahf
dec
dec
xchg
leave
jge
in
js
push
sub
pop
movl
jmp
in
and
pop
inc
cmp
iret
pop
cmp
inc
inc
lcall
pop
rcrl
ficoml
sub
mov
sbb
ror
aaa
mov
and
sub
icebp
push
adcl
cmp
cmp
cmp
or
std
sti
mov
mov
repz
jne
or
jno
sub
sbb
lds
jno
pop
aad
fistpll
pop
out
lar
pop
push
fwait
jl
cmp
loopne
mov
mov
out
ret
loope
lahf
pop
add
shr
sbb
insb
xchg
dec
xor
cmpsl
notl
daa
sub
mov
subb
je
ret
lahf
cmp
inc
xorl
add
test
dec
jns
xor
sahf
mov
cwtl
mov
iret
into
or
movl
hlt
cld
jmp
cmp
mul
add
rcrb
pop
xchg
test
ss
push
jne
into
xchg
fnstsw
shrb
mov
mov
sub
js
leave
dec
pusha
fcompl
mov
loopne
mov
dec
push
shll
ss
enter
xchg
outsl
loop
xor
ret
adc
iret
sti
mov
lret
sub
pop
adc
jb
pop
push
or
pop
test
es
fnstsw
sti
and
mov
lea
cmp
and
lea
mov
in
adc
sbb
mov
xor
orl
je
mov
cmp
inc
filds
sub
and
pmulhuw
sahf
stc
mov
adc
and
and
pop
cmp
jne
inc
es
shrl
popf
scas
push
and
rolb
mov
jnp
aad
xor
test
mov
es
fistpll
adc
sbb
arpl
push
mov
adc
mov
lods
data16
shr
fildll
mov
xor
jo
jecxz
sub
and
icebp
sub
scas
push
xor
cmpsl
mov
pop
pusha
mov
or
adc
test
xchg
push
push
repnz
xchg
mov
scas
sub
bound
cmpsb
aam
jp
mov
sub
jo
dec
cld
movq
pusha
push
jnp
shl
je
test
das
xchg
cmc
inc
push
ja
scas
test
stos
insl
adc
and
cwtl
movsl
or
pop
and
pop
mov
xorl
jb
xchg
adc
add
scas
loopne
xchg
jns
mov
lahf
gs
pop
inc
arpl
out
aaa
push
movsl
adc
xchg
adc
vmovss
dec
pop
leave
sbb
sub
sahf
call
inc
out
push
jmp
shrl
test
movsb
lret
fcmovbe
lds
push
lock
push
xor
sahf
xchg
dec
xorb
int
pop
rorb
push
pop
rcrb
xor
mov
push
in
jle
push
sbb
and
inc
pop
push
aas
xchg
inc
pop
mov
cli
sbb
pop
xchg
fwait
loope
ficoms
fwait
mov
jl
shlb
mov
loop
in
in
pop
shlb
jmp
xchg
mov
xchg
and
lock
in
lds
or
div
ret
xor
push
iret
out
rorb
pop
xchg
dec
pusha
jns
xchg
and
mov
int
pop
inc
xchg
inc
add
jnp
iret
cli
and
push
popf
sbb
fwait
add
popf
adc
int
inc
mov
mov
push
gs
mov
xor
insl
xlat
push
xchg
sbb
pop
fnstcw
adc
xor
sub
idivl
ja
call
sahf
mov
pusha
insb
js
jge
addr16
mov
into
aam
loopne
sub
int
jecxz
cltd
push
jae
xor
cmpl
fnstenv
sub
fstpt
clc
lcall
into
jne
pop
jle
jb
out
dec
fcom
push
outsb
adc
sub
ret
stos
in
mov
push
cld
fs
pop
cmp
inc
popf
push
add
xchg
lcall
xchg
pop
sbb
test
imul
pop
mov
or
loopne
aas
push
shrb
andb
jbe
bnd
ret
shlb
pop
std
sbb
out
stos
sbb
cmc
mov
jbe
jle
and
cli
sbb
testb
push
sbb
xor
sahf
cmp
jp
filds
mov
push
cltd
popf
push
pop
or
dec
in
loopne
inc
das
js
cmpsl
pushf
inc
and
ret
shr
pop
mov
sub
icebp
popf
fdivrs
mov
test
jae
bound
pop
jnp
pop
popa
scas
inc
sbb
aas
outsb
shll
ffreep
lret
mov
mov
dec
and
mov
repnz
aaa
inc
test
sti
fstpl
xchg
aam
xor
movl
pop
insl
pop
adc
iret
push
incb
aad
mov
sub
in
inc
rorb
mov
int
pop
into
xchg
out
dec
int3
push
aam
enter
lahf
push
ret
push
das
or
jp
mov
dec
nop
aaa
popf
fiadds
add
call
mov
jge
and
fstl
adc
outsl
jb
mov
inc
push
stc
jbe
inc
xchg
xchg
les
lods
or
test
adc
daa
xchg
in
add
sub
pop
xchg
repnz
mov
loope
inc
push
and
and
ja
sub
adcl
mov
fsubp
clc
push
cmpsl
dec
adc
not
dec
jge
and
cmp
shl
mov
pop
sub
pop
cmp
in
cmp
inc
stc
mov
out
andb
adc
aad
mov
loope
mov
push
ret
pop
scas
insl
lods
dec
hlt
fiadds
dec
daa
or
jecxz
test
mov
fimull
lea
push
and
or
movsb
sti
xor
loope
sahf
movsb
scas
add
jne
scas
out
inc
mov
dec
adc
in
sbb
divl
inc
push
xlat
adc
sub
aad
scas
add
adc
mov
loopne
adc
aas
xchg
inc
adc
add
push
sbb
and
lahf
xor
aad
and
mov
mov
ja
mov
dec
dec
push
inc
clts
adcb
pop
mov
mov
sbb
movsb
xchg
pop
lret
xchg
jle
ret
sarb
xchg
inc
dec
inc
popf
movl
mov
out
stos
add
sti
dec
adc
push
push
push
cli
daa
fmull
xchg
sarb
jecxz
pop
jb
cmp
cmp
xlat
inc
imul
bound
sub
dec
push
dec
cltd
pop
dec
outsb
cli
adc
push
lret
cwtl
push
aad
adc
push
dec
jg
xor
loopne
add
mov
test
and
hlt
das
jg
xchg
push
and
jne
xor
fstpl
sub
sbb
mov
xlat
sub
xor
and
inc
dec
andb
je
pop
jp
sbb
xchg
push
iret
sbb
jecxz
repz
pop
pop
inc
test
pop
adc
pop
pop
jmp
js
push
test
in
js
push
add
leave
sub
fwait
enter
and
bound
ror
test
test
cltd
repnz
int3
xchg
dec
aas
sbb
xchg
dec
hlt
lds
dec
stos
mov
push
adc
fs
lock
nop
test
dec
test
inc
mov
mov
jmp
adc
ja
fmuls
hlt
das
rolb
jmp
stos
and
inc
jo
lods
in
push
out
scas
adc
mov
mov
inc
sti
mov
stc
cwtl
push
push
in
inc
mov
imul
mov
push
inc
out
mov
pop
clc
sbb
fcomps
jo
and
test
pusha
xchg
imul
clc
inc
mov
cmp
xchg
cmp
lahf
xor
xchg
push
iret
fs
mov
mov
sbb
xor
sbb
movsl
inc
push
push
loop
pushf
push
jns
dec
xchg
in
mov
push
shlb
cmp
lds
mov
xchg
sbb
adc
jae
mov
push
lahf
jbe
add
mov
xchg
adc
inc
sahf
inc
rorb
call
dec
lods
push
add
and
fmuls
lds
aas
arpl
mov
mov
shlb
add
add
jp
mov
std
cmp
jb
add
sbb
lcall
adc
xchg
inc
iret
pop
je
pop
or
test
scas
pop
mov
lea
subl
mov
enter
and
mov
pop
mov
and
in
daa
mov
hlt
cmpb
imul
icebp
in
in
sbb
xor
nop
inc
push
adc
mov
test
iret
or
mov
gs
cmp
push
stc
mov
enter
sub
adc
jnp
jne
test
pop
xchg
xor
outsl
gs
fnstsw
fisttps
arpl
adc
jecxz
dec
movsb
fwait
push
stc
jae
les
repz
cmc
test
sbb
movsb
mov
or
mov
push
pop
enter
popa
jl
mov
shl
mov
rclb
push
lret
jae
shl
push
mov
sub
mov
sbb
pusha
popl
cmpsl
xchg
bsr
js
aaa
lods
push
xchg
cmc
insl
loope,pn
and
push
add
out
sbb
mov
adc
js
inc
and
mov
push
mov
dec
pop
adc
jae
negl
fldenv
pop
sub
mov
movsl
aas
push
inc
je
sbb
leave
xlat
xorl
gs
jo
inc
dec
adc
mov
mov
mov
aaa
insl
xorb
push
inc
aam
cmp
js
cwtl
scas
fs
arpl
pop
into
jecxz
mov
mov
mov
pusha
into
dec
xor
cmp
hlt
cmc
fs
and
ja
out
insl
and
sbb
or
je
pop
xchg
or
scas
arpl
lret
cmp
xchg
sub
pop
mov
jmp
in
pop
stos
orl
pop
aaa
iret
cli
xchg
and
sub
test
adc
loope
enter
addl
jle
adc
adc
mov
push
push
mov
and
push
ss
lds
push
in
push
xlat
cltd
shrl
mov
out
cmc
inc
fldenv
repnz
mov
mov
loopne
out
stc
lret
mov
pop
pop
pop
loopne
pop
xor
mov
rcrb
inc
shlb
xor
adc
jae
jno
mov
dec
fcoms
ljmp
dec
fidivrs
shll
cmp
ss
dec
ja
mov
push
and
scas
pmullw
pop
data16
jmp
test
or
push
sbb
xor
test
out
dec
inc
jns
jns
lret
dec
int
sbb
sub
cmpsl
mov
rcrl
call
test
int3
xor
cli
mov
push
push
in
arpl
push
jnp
pop
dec
and
enter
cmp
xlat
add
rorb
arpl
rcl
sahf
jl
jge
call
cltd
cwtl
inc
add
shll
cmpsb
pushl
push
mov
cmc
test
ja
jb
dec
ficomps
fmull
xor
jb
ret
out
xor
or
out
cmp
rcpps
pop
jecxz
adc
popf
out
sub
data16
adc
adc
xchg
push
xchg
jg
loop
xchg
dec
aam
and
or
and
test
jl
dec
pop
inc
push
movsl
ret
and
outsl
insl
lods
lea
inc
jo
or
xchg
pop
fidivrs
sbb
jp
ret
test
aam
fcmovbe
out
xchg
mov
mov
cmp
mov
aad
adc
add
dec
sub
das
leave
mov
fdivrs
daa
pusha
or
xor
cmpsb
pop
lock
sub
mov
jo
sbb
pop
xor
adc
mov
mov
loopne
lahf
mov
jp
jmp
and
jnp
jb
jae
or
sub
hlt
or
add
and
and
fstpt
dec
sar
cli
mov
fstpt
pop
dec
add
mov
out
orl
scas
jns
lret
stos
lcall
popf
lret
adc
and
call
test
daa
mov
repz
stos
dec
js
inc
xchg
dec
inc
sub
or
inc
bnd
inc
xor
sub
repz
cli
out
rclb
add
mov
dec
popa
fs
sub
mov
push
cmpsl
scas
sbb
cmpsb
add
ret
and
sbb
test
lock
or
stos
mov
outsb
out
xor
inc
inc
inc
lret
cwtl
scas
xchg
pop
sub
jb
mov
mov
adc
push
addr16
fdiv
fwait
sti
push
mov
les
int
push
pop
add
cmp
push
dec
lret
adc
mov
sahf
dec
popf
insb
xor
jl
fwait
jl
lahf
mov
sub
idivb
dec
imul
test
pop
mov
add
leave
movsb
scas
in
push
lcall
adc
fidivs
sbb
jb
xchg
sbb
mov
cmp
imul
lea
sbb
insl
pop
xchg
mov
add
mov
daa
aas
es
in
cs
adc
scas
cmp
mov
lea
sbb
repnz
mov
xor
inc
jns
popa
into
push
push
ss
mov
mov
js
loop
scas
jle
adc
xor
loop
xor
pop
fmull
sbb
fs
xor
fiadds
pop
xchg
pop
dec
add
insb
sti
out
clc
outsl
loopne
or
dec
rorb
cli
jl
add
jl
xor
in
lea
aas
jl
les
mov
xchg
shlb
mov
and
push
mov
clc
js
loopne
jg
lcall
flds
mov
test
jg
mov
xor
fsubr
ljmp
push
mov
ret
test
or
mov
ljmp
push
pop
arpl
jg
rclb
xorl
icebp
aaa
test
push
arpl
int3
inc
sub
lds
fcompl
cmc
pop
fiadds
sbb
in
add
or
add
iret
fistpll
jle
sub
jl
leave
fs
loop
sbb
in
sub
out
pop
sahf
loop
aad
inc
int
iret
sahf
sti
pop
inc
shrb
or
shrl
testb
test
shll
bound
scas
inc
adc
shlb
jbe
das
cmp
fisubrs
int3
mov
movsl
cmc
ret
pop
pop
sti
ss
popa
push
stos
sub
sbb
ret
ja
sub
or
xor
mov
inc
cmpsb
sub
jae
cltd
into
call
inc
outsl
mul
sbb
jecxz
cli
aaa
rcll
jns
cmpl
push
cmc
ret
xor
enter
mov
stc
out
mov
inc
cmp
jmp
mov
lahf
inc
jns
ret
adc
mov
sub
cmpsb
cwtl
push
adc
xchg
fnsave
jp
lret
aad
ret
adc
addr16
sbb
call
xlat
ret
pop
mov
mov
sti
xor
popf
je
xlat
rolb
mov
dec
leave
jle
ljmp
mov
mov
sub
sub
aaa
sbb
cld
ret
lret
and
rolb
test
and
lahf
hlt
sbb
dec
fs
in
xchg
jnp
pop
xor
xchg
repnz
gs
fsubrl
inc
imul
mov
push
cmp
in
out
call
mov
test
je
es
negl
int3
sub
aad
jae
mov
cs
sbb
leave
scas
popf
xchg
mov
lea
into
mov
cs
fiadds
rolb
ret
jge
dec
jbe
lret
xchg
and
inc
pause
inc
mov
jno
scas
and
sbbl
inc
lret
or
aaa
mov
ljmp
fs
in
xor
test
mov
ds
cld
xchg
sub
data16
ljmp
faddl
jns
lret
mov
xor
icebp
push
ja
xor
push
jle
mov
push
daa
mov
mov
mov
hlt
xor
std
cmp
rcrl
scas
pusha
xchg
pop
push
push
imul
mov
test
jge
add
je
das
call
xchg
cmp
mov
sub
xor
rcrb
xchg
std
shlb
mov
and
inc
pop
mov
sbbb
mov
bound
fnstcw
test
xchg
cwtl
or
or
fcom
xlat
mov
test
in
inc
int3
or
push
push
pop
lcall
jns
add
insl
or
out
push
mov
test
lock
add
xchg
dec
mov
aaa
jae
out
mov
jae
outsl
fdivl
pop
cli
pop
int
arpl
fdivs
push
mov
push
dec
lret
repz
xlat
scas
fldcw
pop
push
jnp
outsl
stos
xchg
jno
cmpl
dec
or
add
scas
in
and
or
mov
xor
xchg
push
out
pusha
mov
jnp
sarb
insl
test
mov
fdivr
dec
inc
xor
pop
out
test
clc
ss
dec
xchg
loopne
mov
push
into
fdivl
hlt
cwtl
repz
xchg
cmp
ficompl
pop
dec
inc
sub
rcrl
ds
andl
push
es
popf
cmp
subb
or
mov
test
cld
inc
cli
pushf
fistl
mov
push
xchg
or
into
cmpl
shll
mov
jp
fstp
xorb
pop
ss
fistpll
push
insb
into
dec
push
fs
jne
push
in
bnd
jp
imull
lds
or
inc
dec
popf
in
push
mov
insl
cwtl
adc
mov
inc
cmp
jle
lret
es
jp
and
sbb
push
sarb
nop
rorb
pop
popa
fsubr
pushf
fstl
imul
popf
inc
dec
inc
cmp
mov
shll
xchg
adc
insl
mov
inc
lods
mov
fstpl
mov
push
or
push
sti
in
mov
mov
das
and
jp
and
fstps
lret
mov
sbb
hlt
pop
cli
aad
cwtl
repz
push
mov
lock
dec
pop
xchg
cld
inc
xor
and
repnz
test
jns
jbe
fwait
es
mov
jle
xor
insb
inc
enter
iret
out
pop
jb
xor
jge
sub
push
cmp
and
shrl
and
rorl
jg
out
call
push
sub
or
sbb
push
mov
push
lock
cmpsl
mov
xchg
dec
mov
adc
rclb
xor
pop
xlat
mov
dec
or
cmp
xor
push
fs
ret
repz
push
or
sarb
sub
push
mov
ja
icebp
leave
pop
pop
mov
inc
fstpt
aaa
imul
mov
pop
push
jno
imul
test
xchg
sti
mov
xor
dec
mov
or
movb
jno
push
add
subl
inc
mov
insl
movb
cmp
lgs
lret
les
mov
fiadds
jnp
subps
xorb
cli
fnsave
inc
stc
addr16
add
pop
fiaddl
mov
add
sbb
mov
push
rol
xor
in
mov
inc
hlt
mov
fldenv
pop
enter
call
bnd
adc
fsubl
fwait
push
sti
aaa
mov
lods
test
mov
inc
jmp
cs
es
icebp
xchg
imul
fisttps
dec
and
stos
jg
call
or
xor
movsb
pop
rclb
test
jecxz
addr16
jg
aas
sbb
xchg
push
pop
rcrb
lret
mov
mov
scas
into
fimuls
mov
xchg
ret
jecxz
aad
mov
pop
mov
sub
loope
rolb
mov
dec
mov
jae
fmuls
xchg
movlps
pop
movsb
in
fnstcw
sbb
push
mov
cwtl
clc
cs
or
loope
fcoms
or
sahf
mov
fadd
jno
dec
repnz
dec
nop
hlt
push
xor
into
mov
add
test
pushf
je
add
leave
out
into
test
sbb
aas
sti
pop
stos
inc
mov
sbb
pushf
adc
loopne
or
clc
ja
sub
rcrb
push
leave
into
fdivrl
pop
adc
cltd
rcr
cmp
je
push
cmp
push
loope
pushf
insb
xor
pop
add
cmp
sbb
lcall
fldt
sub
cmpsb
fsts
popa
call
jo
and
xor
push
jb
mov
sbb
push
loop
js
in
jle
add
mov
jb
mov
push
fcoms
jae
sub
gs
testb
jle
cmp
push
sub
or
push
xchg
cmp
or
mov
add
push
pop
call
sbb
dec
add
push
stos
std
adc
and
lods
mov
repz
fwait
mov
das
sub
stos
jb
adc
dec
ja
dec
adc
in
scas
xchg
add
fists
es
int
in
in
add
loop
adc
cmp
daa
add
or
mov
adcb
pop
cltd
fcomps
jp
movsb
test
mov
icebp
jno
push
clc
and
mov
jno
pop
jno
add
fadds
pop
add
das
sbb
ret
lret
mov
jmp
push
sbb
jo
and
mov
scas
inc
xchg
jno
mov
js
xchg
dec
fnstcw
sub
sbb
jne
loope
fnsave
add
add
mov
loopne
dec
xchg
sti
xchg
lods
adc
jp
cmp
mov
out
dec
jnp
fnstsw
movsl
inc
test
mov
mov
sarb
test
dec
mov
pop
jg
cmpb
mov
fdivrl
mov
iret
out
lret
aaa
shl
jbe
or
and
pop
mov
pop
scas
pushf
sbbl
cmovbe
cli
cs
mov
jb
test
fldt
mov
dec
test
stc
mov
adc
aas
sbb
into
inc
adc
flds
je
popa
sbb
jmp
pop
cmp
add
pop
xchg
jne
test
nop
xchg
dec
lods
shr
lcall
xor
dec
iret
sbb
fbstp
inc
iret
add
mov
push
sub
ljmp
jb
or
divb
push
lret
std
jns
data16
pop
lcall
gs
push
xchg
test
pop
and
lret
or
jl
mov
add
and
shr
hlt
pop
xor
fildll
mov
lret
lret
push
push
fmull
or
pop
xlat
jbe
out
mov
jge
jne
xchg
push
je
sub
xor
xchg
push
out
pusha
sub
dec
sub
popa
cmp
stc
stos
dec
mov
xor
mov
stc
cmpsb
add
test
pop
mov
and
push
and
dec
inc
cmp
lret
iret
cmp
mov
sub
and
sub
inc
shl
dec
fwait
mov
ljmp
inc
sbb
mov
sub
in
sub
dec
loopne
enter
mov
cltd
loopne
in
ljmp
std
jmp
shlb
inc
inc
cmp
mov
and
inc
push
jno
sbb
movsl
inc
outsb
and
nop
roll
pop
in
lret
inc
out
imul
lock
jecxz
aas
nop
push
jbe
pushf
jae
cmp
daa
stc
mov
fimull
or
fsubs
inc
or
call
cmp
andl
push
ret
xor
mov
pop
dec
ljmp
ret
mov
sbb
mov
std
out
cltd
ljmp
outsb
icebp
ret
jmp
ss
mov
sub
popf
push
imul
aaa
jb
hlt
add
sub
shrl
aad
stc
dec
pop
and
pusha
ja
mov
sbb
mov
sub
adc
and
gs
outsl
daa
pop
fwait
lds
imul
cmp
xor
or
xchg
xchg
xchg
addl
jae
push
sbb
push
push
add
test
out
add
mov
xchg
vmread
push
cltd
jb
nop
add
fbld
sahf
push
mov
test
pop
imul
mov
push
ret
jecxz
shrl
and
int
in
aas
out
enter
lcall
insb
nop
repnz
stos
xchg
push
pop
pushf
jle
leave
adc
adc
fnclex
cmp
push
std
out
dec
fs
mov
sub
mov
mov
je
cmpb
mov
lcall
mov
movsb
xchg
cmp
int
dec
add
sbb
xlat
mov
sbb
cmp
shrb
dec
fsubr
mov
rcrb
xor
push
fists
sub
or
loope
pop
stc
cmp
lock
ss
inc
or
cmp
and
xlat
aaa
adc
sbbl
or
fistpl
push
lcall
or
dec
dec
jg
lea
stos
mov
jne
pop
lods
dec
or
or
imul
and
mov
add
mov
test
rcll
ds
call
pop
sbb
add
lret
inc
mov
out
pop
stc
test
add
mov
push
bound
cmc
mov
icebp
rorb
push
out
jmp
neg
mulb
clc
repz
fs
enter
aaa
mov
int
in
aas
mov
and
cli
dec
xor
push
bts
mov
jae
xor
mov
data16
cld
je
fistl
cmpsb
insl
mov
add
push
mov
in
or
fidivrs
jle
pop
cld
add
jo
dec
adc
mov
sbb
inc
test
cmp
iret
push
cmp
and
out
insl
sti
xchg
dec
jecxz
cmc
enter
int
inc
jmp
roll
mov
dec
pushf
mov
push
cmp
pop
popf
push
ror
and
sti
xor
orl
add
jl
push
sbb
loope
imul
std
push
shrl
and
sub
inc
cmp
scas
or
adc
xor
xchg
popa
mov
ja
xor
cwtl
cltd
test
cmp
scas
xor
out
shrb
fimuls
test
pop
popa
mov
hlt
fisubl
das
or
jno
lcall
pop
loop
jnp
add
shr
and
loop
add
sbb
ret
sarl
pop
lahf
add
xchg
sbb
dec
mov
inc
out
fstpl
inc
adc
push
daa
mov
loop
aad
fcoms
insl
inc
dec
pop
dec
sub
repnz
add
sbb
inc
mov
dec
jge
xchg
and
mov
sub
sub
pop
and
negl
push
dec
cli
shrb
sub
das
cmpsb
and
repz
js
dec
xor
lcall
and
xchg
push
jb
add
inc
test
aaa
jbe
int
sub
std
shr
push
out
stos
repnz
cli
addr16
loopne
arpl
sbb
push
shlb
orl
je
xor
aas
aam
stos
cmp
rorl
out
sbb
test
sub
fistps
sub
mov
jne
push
loope
icebp
pop
andl
insb
mov
add
incl
and
cmp
sbb
jge
and
sub
xor
insl
test
and
rcl
das
mov
jno
cmp
push
ret
ja
aad
shr
and
das
pop
icebp
into
mov
pop
and
xchg
push
mov
mov
sbb
lahf
sub
pop
mov
sbb
scas
out
enter
lods
push
cli
mov
in
out
xor
sub
aas
push
mov
push
leave
sbb
jle
add
pop
jnp
pop
aaa
adcl
inc
pop
add
mov
das
arpl
clc
jmp
mov
loopne
jp
pop
lds
add
cmp
push
test
push
std
jbe
cmc
push
scas
nop
out
push
popf
ret
cmp
mov
aaa
sbb
inc
sarl
sub
test
mov
push
test
imul
nop
pushf
push
mov
sub
cmp
mov
xor
out
push
in
sbb
mov
xchg
inc
pop
mov
mov
outsl
outsb
adc
push
dec
xor
jbe
push
movsb
sbbb
dec
push
lock
xor
movsb
daa
outsl
mov
xor
rorb
insl
pop
nop
jae
idivb
loope
mov
testl
shrl
sbb
sarl
dec
jle
push
loop
cmp
xor
outsb
jns
pop
mov
in
xor
into
mov
out
cmp
push
adc
xchg
inc
mov
or
mov
test
jl
cld
adc
or
cltd
inc
xchg
jmp
sbbb
pop
xor
ficompl
inc
rcrl
jno
or
dec
enter
jae
jae
std
scas
lods
ljmp
xor
sbb
and
addb
mov
and
or
mov
lds
and
sahf
mov
and
lea
stos
fnstsw
lcall
cltd
adcl
mov
mov
lods
aad
cmp
cmp
xchg
popf
mov
shlb
mov
pop
ja
addr16
or
cmp
in
mov
fdivrs
cmpsb
out
pop
ficompl
pop
es
mov
push
sbb
arpl
sub
es
inc
pop
sti
je
mov
loope
outsl
loop
arpl
insl
jmp
pop
cld
xchg
pop
out
je
rorl
fdivl
pusha
aas
xor
jne
lock
icebp
push
pop
pusha
jmp
adc
add
test
jno
sub
mov
std
xlat
fidivs
mov
inc
cmp
inc
ja
mov
jb
sbb
pop
push
addr16
or
inc
inc
add
cmpb
lds
fs
pop
pop
xchg
pop
rorb
xor
je
pop
mov
lret
xchg
push
mov
mov
mov
fisubrs
pusha
dec
add
add
daa
je
mov
push
aam
in
ds
adc
pop
outsb
int3
inc
les
cmpsl
iret
fisttpll
pop
imul
add
jp
sub
fs
outsb
jle
mov
pop
repnz
into
arpl
sub
add
mov
pushf
and
cmpsb
xlat
mov
testl
insl
test
rol
outsb
shlb
sbb
inc
cmpsl
ja
push
jmp
and
push
mov
insl
leave
inc
inc
in
pop
ss
or
testl
or
into
stc
push
in
stos
hlt
xchg
outsl
or
bound
inc
mov
pop
into
pop
adc
pop
adc
pop
adc
cs
lds
divb
xor
daa
cmovg
popa
xchg
xchg
or
fwait
sub
sbb
push
and
cwtl
fistpll
aas
dec
add
shll
xchg
rorl
add
inc
out
or
sub
mov
mov
test
shll
lcall
dec
inc
cmp
ja
mov
dec
rorb
rcll
ja
mov
dec
pop
pop
icebp
mov
xchg
arpl
xchg
push
sti
or
add
xor
into
pop
sub
jmp
adc
jmp
mov
les
cmp
cmpsb
leave
push
pop
out
mov
lret
mov
dec
adc
orl
call
subb
xor
push
push
push
xchg
les
xor
scas
ss
inc
xor
lds
sub
loope
or
fadd
dec
add
sub
outsb
dec
bound
imul
lret
mov
lret
xchg
sub
shrb
jno
addr16
add
xchg
pusha
enter
or
adc
dec
push
out
outsb
outsb
negb
jne
jb
jno
pop
add
dec
mov
or
sbb
jge
fwait
ja
mov
fcmovne
mov
cs
mov
xor
fbstp
ror
push
inc
inc
das
sub
and
jbe
or
and
jns
js
imull
jae
adc
lahf
sbb
imul
pop
loopne
jo
popa
fisubl
add
fs
rolb
push
or
jle
adc
adc
push
xchg
cmp
aam
push
adc
scas
cmpsb
test
push
xchg
lock
mov
cmp
ficoml
xchg
or
mov
call
xor
add
out
and
cltd
test
jnp
loope
xor
cmp
sub
mov
ds
lds
jecxz
pop
rorb
mov
jns
mov
lea
cmpsb
gs
imul
pop
adc
pop
cmp
dec
jp
pop
in
leave
inc
mov
cmp
or
pop
ret
jle
dec
adc
or
dec
and
aas
add
sbb
pop
pushf
push
or
scas
sbb
stos
popa
rcl
mov
xor
clc
add
pop
out
nop
mov
popa
jnp
test
aaa
int
sub
stc
cld
push
cld
xchg
dec
lods
cmp
push
mov
outsb
ja
in
inc
and
sbb
movsb
fsub
div
mov
nop
push
ljmp
aaa
mov
sbb
subb
pop
add
aam
cltd
sub
nop
lahf
rcrb
and
fisttpll
out
dec
push
sbb
add
pop
sub
sbb
in
lret
mov
pop
iret
sub
jle
inc
imul
cltd
xor
rcrb
notb
jle
adc
ja
jns
xor
mov
lock
movsb
sbb
clc
pop
mov
pop
out
mov
and
sbb
xor
call
ret
stos
xchg
outsb
xor
outsl
pop
sti
push
fwait
cli
xchg
mov
std
fbld
push
dec
add
mov
sarb
push
adc
lcall
adc
test
mov
cmp
dec
shrl
inc
mov
adc
xlat
jg
shlb
mov
popa
jecxz
dec
jbe
loop
popa
sub
and
or
mov
adc
cmp
mov
dec
cmp
sahf
std
mov
push
mov
sbb
testb
inc
adc
or
mov
shll
out
iret
adc
pop
lcall
int
adc
adc
pop
or
pop
jae
stos
sahf
xchg
xchg
cmp
rorl
and
jno
idivl
aad
pop
pop
or
adc
ja
iret
loop
sbb
test
test
lds
stc
xor
pushf
mov
mov
gs
cmp
ljmp
pop
inc
jl
mov
dec
push
inc
repnz
repnz
or
jmp
cmp
mov
inc
scas
pop
loope
out
inc
pop
repnz
in
xor
push
nop
pop
cmpsl
pusha
or
and
mov
cmp
dec
popl
push
mov
sti
cwtl
jnp
add
push
inc
add
hlt
sbb
dec
jbe
subl
minps
outsl
cld
pop
stos
xchg
loope
or
mov
test
arpl
cs
inc
adc
div
fs
jl
stc
sub
movsb
add
xor
lret
add
xchg
in
mov
data16
or
dec
cltd
rorb
pushf
pop
and
pop
loope
orl
sar
dec
stc
ljmp
dec
scas
in
sub
mov
jg
dec
mov
push
outsb
xor
daa
add
shrb
push
mov
mov
movsb
or
lds
clc
les
ds
mov
das
iret
or
pop
sbb
dec
pop
jge
test
ret
mov
xchg
cwtl
jb
push
lods
lods
mov
addr16
adc
fstpt
adc
pop
repnz
pop
lods
es
insl
dec
adc
ss
fildll
push
in
movsl
push
adc
stos
icebp
sub
outsl
mov
lret
cmp
movsl
std
lds
mov
jmp
inc
sub
sub
scas
les
fxch
lcall
addr16
aad
fisubrl
popf
lahf
repz
mov
mov
addr16
dec
mov
inc
add
sahf
sti
sahf
adc
push
jle
ret
mov
mov
popa
jne
and
adc
cwtl
sbb
test
popf
in
int
lods
stc
fdivrl
sub
sbb
lahf
sbb
movsl
mov
sti
mov
sbb
jg
sub
fsubs
shl
addr16
sbb
pop
or
in
pushf
rcll
cmp
cmc
mov
sub
sbb
ret
jp
in
sub
sub
and
cmp
mov
int3
or
scas
sti
repnz
test
dec
ret
test
daa
mov
pop
push
scas
lahf
je
fsubl
jl
jb
or
scas
cmp
insb
and
add
jle
stos
mov
pop
aad
ja
std
pop
jo
popf
sub
jecxz
xchg
adc
xchg
popf
mov
cmp
inc
nop
and
jmp
dec
jns
fsts
lods
or
sbb
jb
hlt
aam
jne
sub
lock
ljmp
lret
sahf
mov
xchg
and
push
lock
fsubrl
mov
icebp
pop
adc
jp
sbb
fnstsw
pop
jne
insb
lods
js
sub
outsb
bound
out
adc
lea
es
cmp
bound
ja
mov
and
cmp
mov
push
mov
xchg
dec
mov
shlb
inc
add
mov
mov
push
pop
movq
and
xchg
fldenv
lods
pop
insl
cmp
imul
add
or
mov
scas
ret
add
pusha
sub
xor
push
ds
add
shl
call
and
jns
dec
cmp
outsl
inc
cmp
xor
xor
or
outsl
mov
mov
scas
jnp
add
dec
mov
jae
int3
lock
in
adc
std
loop
cmp
sbb
icebp
jg
mov
lcall
std
mov
movb
shlb
xchg
xor
test
adc
shl
cmp
shlb
cmp
mov
out
inc
andb
rcl
les
scas
je
call
shrb
add
xlat
lds
cmpsl
mov
mov
cmpsl
shlb
mov
sub
cmc
xor
outsb
mov
incl
hlt
or
dec
rorb
mov
jmp
push
dec
add
xor
and
cltd
xchg
inc
jmp
lds
sub
xor
push
sarb
clc
jle
jne
sub
mov
mov
clts
or
ljmp
xor
and
xchg
aam
push
sarl
lret
xor
xchg
xor
pop
and
sub
dec
vmovlpd
rcl
repz
cmp
idivl
mov
mov
popa
inc
imul
rcrl
shlb
les
adc
cld
adc
popf
fs
loopne
rcrl
in
fistps
test
sub
imul
pop
in
mov
pop
ret
or
imul
inc
hlt
adc
icebp
lds
shl
inc
js
and
mov
mov
sub
sti
pop
cmp
in
ss
adc
or
rcrb
dec
push
leave
in
jns
das
or
push
xchg
xchg
fdiv
sbb
fs
nop
add
imul
lret
pop
cmp
ja
cmp
mov
aad
sub
mov
test
cmpb
and
xor
sarl
lret
shrb
adc
ss
mov
cmp
pushf
jle
mov
test
add
lahf
mov
push
jno
pusha
mov
adc
mov
mov
or
push
add
ss
add
adc
fistps
jle
mov
add
ja
adc
jne
xchg
jl
push
adcb
push
adc
sub
in
jg
and
cmp
setp
les
mov
sub
popa
int
mov
idiv
and
mov
and
in
jb
arpl
cmp
inc
pop
adc
in
push
ds
iret
loopne
mov
pop
xchg
add
ficoms
arpl
sub
adcl
jns
shrl
cmp
cmpl
fsubrl
es
push
fimull
xlat
int3
push
pusha
xor
pop
jmp
push
adc
mov
sub
std
clc
ror
fistl
into
popl
je
fidivl
shll
test
icebp
dec
insl
adc
movsl
pop
adc
jae
xchg
xor
lret
in
adc
icebp
and
icebp
and
fucomp
ret
pop
test
test
and
sub
cmp
jno
cwtl
ljmp
lret
mov
lods
push
in
or
xorl
or
fwait
jmp
push
inc
inc
dec
addr16
into
test
ss
repz
mov
in
icebp
cld
loope
sub
outsl
outsl
bound
jmp
popf
lret
test
call
je
mov
loop
jae
jp
cli
adc
pop
mov
pop
hlt
xchg
cwtl
es
cmp
in
pop
adc
cmpsl
mov
cmp
idivl
es
mov
sub
call
or
fidivs
add
in
dec
ds
in
fimull
mov
dec
push
push
fadds
mov
movsb
dec
dec
push
xchg
aad
jns
mov
sbb
stos
push
loopne
test
movsl
outsl
or
fidivl
in
adc
mov
daa
std
jg
push
call
rcrb
cld
test
dec
inc
add
xchg
sbb
xchg
ss
or
mov
sub
add
add
iret
fcomp
arpl
jge
xchg
or
lea
imul
std
xchg
nop
dec
push
push
ds
daa
adc
jg
out
test
mov
mov
jg
in
add
lret
sbb
jp
pushf
mov
pop
inc
mov
insl
mov
xchg
scas
and
and
jb
push
mov
aam
shl
data16
cltd
rolb
in
aad
test
loop
testl
push
dec
das
lock
mov
sbb
xchg
jb
pop
xchg
cmp
mov
mov
mov
shlb
out
push
mov
arpl
push
mov
jl
cmpsb
dec
jmp
pop
pop
stc
scas
xor
jecxz
call
incb
lahf
shrb
loopne
je
ret
in
mov
into
sub
iret
or
and
fs
adc
mov
movsb
or
or
jbe
mov
sub
enter
pop
into
ret
mov
push
add
mov
adc
inc
xchg
xchg
popa
push
leave
fisttpl
in
mul
jo
icebp
loopne
jbe
loopne
int3
fcomps
cmpsb
iret
icebp
cli
xchg
xlat
pminsw
push
out
cmp
sub
push
loopne
adc
xor
dec
pushw
pop
adc
mov
or
leave
and
xchg
and
push
scas
jle
leave
jecxz
cmpsb
xchg
pop
inc
xor
jno
adc
mov
pop
lods
mov
mov
or
add
and
imul
jo
notl
imul
mov
aam
lcall
adc
mov
dec
shll
mov
stos
sarb
sbb
dec
out
pop
xchg
mov
repnz
lcall
mov
mov
in
mov
aas
cmp
mov
adc
sbb
icebp
popf
sbb
cli
repnz
pop
mov
xchg
jns
das
cli
mov
scas
into
cmp
push
mov
mov
adc
inc
cltd
ss
mov
or
das
sub
test
and
lods
mov
addr16
push
lcall
jns
out
add
pop
cmp
pusha
aad
cmpsb
into
out
test
cmp
mov
mov
mov
lock
in
mov
add
inc
pop
ret
in
jle
scas
inc
inc
mov
aas
inc
ljmp
adc
out
mov
pop
sub
insl
cld
sbb
xchg
adc
jb
push
and
sbb
sbb
and
bound
out
roll
dec
pop
in
inc
pop
mov
popf
mov
inc
inc
pop
insb
lahf
sub
les
and
inc
pop
inc
inc
push
jl
out
daa
mov
idivl
xor
cmp
add
jecxz
mov
cwtl
adc
inc
fdivs
mov
nop
xchg
mov
mov
cs
sahf
jne
xor
push
rolb
mov
cli
popf
jg
addb
push
lds
std
dec
aam
fs
insl
insl
dec
jmp
mov
and
dec
ficompl
popa
mov
sub
mov
clc
mov
jbe
out
or
je
pop
repz
xchg
pop
jge
sbb
mov
jb
dec
int3
add
inc
adc
push
xor
cs
arpl
mov
lcall
inc
addr16
lods
insl
jg
sub
into
in
jns
mov
out
fwait
cmpsb
imul
xchg
lret
push
mov
bound
dec
push
push
xchg
out
fmuls
sub
scas
xchg
cwtl
dec
in
xor
or
js
ss
fmulp
jns
mov
in
sub
add
repz
fs
jecxz
or
inc
dec
xchg
popa
add
push
in
adc
mov
fstpt
sub
pushf
rcrb
jp
scas
mov
jb
test
imul
mov
dec
xchg
push
add
sub
stc
jo
pop
xchg
icebp
xchg
mov
rolb
movb
jbe,pn
push
loopne
xor
pop
xchg
or
js
xor
inc
dec
pop
aad
bound
call
and
push
lock
push
scas
int3
mov
flds
inc
dec
push
insl
add
jbe
adc
cmp
ljmp
cs
jmp
bnd
add
sbb
lahf
cmc
add
mov
sbb
in
dec
jnp
std
push
or
push
sarb
andb
cmpsl
inc
inc
jae
lret
add
xchg
loopne
and
add
scas
jne
mov
iret
and
pop
cs
nop
inc
lea
fimuls
dec
xchg
rolb
mov
xchg
xchg
iret
cmp
shlb
push
sub
or
jns
xor
fwait
mov
fcom
int
sti
shl
out
test
xlat
in
js
rcrl
add
data16
outsl
sub
mov
cld
mov
xchg
cs
roll
mov
das
mov
inc
add
and
loope
loopne
orb
stos
roll
add
mov
mov
cld
mov
loope
dec
inc
call
ljmp
cli
outsb
lock
addr16
popa
movsl
sbb
inc
jae
jmp
xor
dec
sbb
push
insb
add
test
lea
loopne
and
jne
call
mov
pop
sub
or
sbb
ret
cmpsl
cmp
jle
push
xchg
mov
pop
add
xchg
xor
xlat
push
push
std
sub
aad
testb
or
mov
jae
xor
in
or
out
pop
pushf
aam
iret
xchg
push
adc
sarl
xchg
xor
dec
xchg
sahf
mov
cmc
movsl
xor
xchg
mov
push
mov
sbb
xor
scas
es
lahf
adc
pop
bound
shll
jb
aam
fisttps
and
mov
jp
cmp
push
and
loopne
adc
and
cmp
mov
xchg
nop
cmp
cld
jbe
or
xchg
adc
jmp
test
xchg
sub
loope
mov
mov
sub
fadd
cmpl
dec
in
cmp
scas
mov
cs
aas
movsl
pop
mov
test
mov
xchg
gs
fcompl
adc
or
pushaw
sbb
push
lret
cli
lret
fisubl
lahf
jns
lret
aam
insb
cmpb
out
orl
mov
jle
or
stos
int3
sub
repnz
mov
cltd
lods
sbb
scas
stc
fwait
add
or
stos
mov
mov
dec
push
dec
and
or
push
lret
add
mov
sub
lea
mov
scas
arpl
push
ficoml
pushl
jecxz
push
xchg
mov
in
adc
dec
scas
dec
roll
pop
jle
cs
pop
lret
cwtl
jle
bound
sti
or
imul
pop
int
in
sbb
aad
out
lret
push
push
jb
lahf
mov
mov
scas
loopne
and
jp
push
in
insb
rcr
and
sbb
repz
fldt
aad
rclb
xchg
xlat
adc
gs
sub
pop
dec
push
fs
cwtl
pop
ret
ja
adc
fcoml
mov
mov
adc
xchg
or
sub
mov
sbb
test
dec
aad
addr16
sub
jne
mov
insb
adc
loop,pn
pop
xor
sahf
add
mov
leave
in
inc
mov
add
out
imul
xbegin
sbb
stos
mov
in
sbb
ss
mov
push
xor
shll
and
hlt
subb
cmc
pop
imul
and
adc
or
aas
loopne
leave
aam
imul
sbb
and
cmpsl
ror
mov
adc
sub
mov
int3
int3
or
test
adc
sbb
lret
ret
mov
add
xorb
ficoms
jmp
es
cltd
mov
mov
lcall
mov
sub
imul
pop
addr16
pop
push
ja
and
dec
out
test
mov
push
sahf
mov
and
imul
inc
repnz
inc
xchg
dec
mov
sub
rorl
xor
xlat
aam
and
mov
xlat
lea
xor
push
xor
sbb
sub
mov
fadd
mov
cltd
adc
mov
mov
fstp
sbb
lea
fsubl
adc
cmp
fidivs
cmp
xchg
pusha
fmul
pop
sbb
in
imul
ja
data16
outsl
dec
adc
jmp
mov
sbb
addr16
lods
std
add
in
clc
jae
sbb
insb
mov
fdivs
adc
pop
and
sahf
arpl
stos
and
rcrl
adc
fldl
ljmp
jecxz
insb
and
jae
jo
out
cmp
push
fstpl
mov
lahf
clc
dec
jmp
jbe
add
je
data16
jo
add
aam
test
mov
and
mov
xchg
mov
add
jmp
sbb
dec
mov
push
mov
lahf
hlt
xor
push
mov
cmp
pop
inc
add
jbe
inc
xor
add
or
std
loope
mov
push
pop
xor
ja
movsb
stos
test
pop
or
insl
jp
push
push
pusha
icebp
push
push
aam
inc
popf
fistl
push
sarl
out
inc
sub
xor
mov
mov
ret
dec
sbb
and
imul
jg
movsl
inc
cmp
testl
call
xchg
js
xor
sbbl
pusha
mov
sbb
mov
cmp
adc
pop
cwtl
xchg
in
xor
dec
repnz
mov
popf
xchg
adc
das
push
jbe
iret
ljmp
inc
adc
pushf
mov
jae
mov
pop
cld
jp
xor
pushf
pusha
xchg
pushf
int
out
push
xor
xchg
mov
xchg
and
fistpl
push
push
adc
mov
cmp
inc
mov
xchg
and
sbb
shl
push
sbb
lcall
adc
repnz
ja
mov
mov
jge
xchg
addr16
sub
or
sbb
fdivl
test
xchg
lods
cmp
push
dec
in
mov
lahf
fidivrs
or
push
jnp
pop
sti
clc
int3
pop
xor
addr16
lock
xchg
inc
or
stos
lock
inc
jb
das
lods
add
cmp
mov
shlb
adc
push
je
lcall
jg
inc
cmc
gs
outsl
push
adc
pop
push
pop
xchg
mov
or
cld
ffree
daa
outsb
daa
cmp
push
fcoml
clc
push
movsl
xchg
outsb
and
sub
and
fcoml
push
xor
in
pop
xor
jns
jns
cmp
dec
push
lahf
cli
sar
inc
cmc
jnp
fistl
adc
sbb
jmp
jnp
and
insl
pcmpgtd
dec
push
in
inc
ljmp
sbbl
cli
call
ljmp
push
xchg
cmp
mov
stos
out
dec
dec
insl
in
out
imul
xor
sub
ret
jmp
pushf
dec
mov
sti
aaa
in
mov
aam
jp
loope
xor
fucomp
jbe
push
fwait
inc
daa
int
jg
jecxz
sti
mov
jp
pop
popa
jae
hlt
cs
mov
scas
test
push
jb
test
shrb
xor
jo
ds
nop
xor
aaa
mov
js
lea
popf
adc
int3
pop
pop
out
pop
sub
pop
cmpsl
sbb
ret
movsl
lcall
fcomip
add
pushf
xchg
fdecstp
mov
pop
push
insl
pusha
adc
or
cmpsb
xor
push
inc
in
sbb
fistpl
lods
cli
in
jge
iret
jge
je
insl
xchg
mov
popf
jge
and
sbb
add
test
and
sub
jb
add
in
cmp
lock
sbb
pop
stos
jle
or
gs
bound
adc
lret
push
and
rcl
inc
test
test
in
dec
push
ljmp
js
add
js
pop
in
dec
xchg
movsl
sbbb
xor
clc
sub
sbb
add
pop
lretw
xor
leave
push
and
nop
insl
cmp
bound
mov
pop
add
stos
add
stos
jo
dec
push
fucom
and
pop
push
test
idivb
push
shr
lods
mov
dec
frstor
sarl
xchg
repz
jne
xchg
and
cmpsb
pusha
xor
mov
in
and
jnp
jl
xlat
adc
rorb
pop
je
cltd
imul
add
sbb
xchg
push
repnz
je
ljmp
mov
lods
xor
ja
bound
mov
sub
adc
inc
negl
arpl
lock
xchg
or
sahf
mov
ror
rol
imul
mov
jp
orb
int3
mov
and
pop
ret
pop
imul
mov
cmp
nop
notl
inc
movsb
mov
pop
imul
jmp
inc
mov
sub
mov
jg
inc
pop
adc
pop
imull
bound
pop
xor
fstps
imul
sbb
loop
rcrl
xlat
pop
xor
xor
adc
xchg
fisubl
push
mov
lcall
jb
xor
cmp
lds
sub
cmp
test
jmp
jb
cmp
sbb
in
push
ret
in
adc
je
jg
mov
pop
xchg
jo
adc
adc
xchg
sbb
mov
jmp
enter
mov
jge
inc
js
scas
jge
rcrl
icebp
push
cmp
add
scas
cmp
push
jo
jnp
subl
or
jg
lds
test
ja
xorl
pop
pop
mov
xchg
imul
outsb
push
xor
mov
scas
repz
stos
aad
stos
cmp
jge
loop
pushf
iret
les
repz
fistpll
sbb
inc
out
ss
jp
fcomi
or
dec
or
pop
pop
aad
clc
lcall
mov
nop
out
outsb
pop
jno
cmp
jnp
or
jno
mov
out
sub
pusha
jns
xor
cmpsl
idivb
pusha
xlat
pop
loop
test
rorb
mulps
sarl
xlat
out
ftst
jmp
out
or
sti
xchg
mov
sub
sub
jg
movsb
lods
cmp
js
sub
icebp
push
mov
ror
test
pop
mov
fs
cmp
pop
adc
sbb
cmp
popa
addb
mov
push
stos
addps
test
lcall
and
mov
mov
into
mov
jl
pop
pop
addl
xchg
filds
or
mov
and
lcall
jne
or
rorl
out
mov
pop
mov
dec
mov
in
jle
js
test
mov
pusha
pushf
push
into
ret
mov
shrb
or
sbb
fisubrl
jb
mov
stos
adc
sub
out
popf
pop
or
std
subl
cs
sbb
lret
rcr
fadd
mov
int3
xchg
cmpsb
mov
pushf
subb
jge
es
out
shll
pop
push
mov
outsb
push
loopne
sbbl
pop
xchg
pop
sbb
mov
adc
lods
stos
in
adcl
cwtl
jnp
xor
aam
cltd
test
adc
sti
movsl
icebp
cs
mov
xor
pusha
push
dec
mov
repz
pusha
cmp
pushf
and
mov
shll
xorl
mov
push
inc
rorl
adc
clc
cmpsl
cmp
cmp
fadd
mov
mov
pop
out
xchg
pand
sbb
add
loop
inc
cmp
int
ljmp
mov
dec
mov
popf
rolb
or
jle
test
int3
outsl
jp
mov
push
pop
nop
mov
aam
push
and
scas
add
mov
insl
jbe
fisttpl
dec
xchg
jmp
pop
pop
pop
jno
xor
imul
dec
or
insl
lcall
push
fwait
jnp
cli
or
xchg
jp
lods
pusha
mov
daa
imulb
push
popa
js
mov
push
jg
sarb
enter
jne
loope
cmpsl
or
and
cmpsl
lock
jl
xchg
leave
rcl
or
cs
xor
mov
mov
xor
jbe
fiadds
push
xchg
fwait
and
sub
mov
inc
cmp
subl
xchg
sbb
notl
inc
jle
jge
icebp
inc
and
cmp
xchg
mov
mov
pushw
insb
ds
jae
clc
sbb
dec
fwait
sbb
cmp
dec
xchg
jae
jb
pop
cli
insb
mov
sub
aad
xchg
mov
movb
bound
or
mov
mov
outsb
incl
sbb
xor
js
and
add
leave
or
rcll
dec
adc
loope
roll
inc
js
xchg
rep
cmpb
cmp
xchg
mov
pop
jns
jmp
adc
mov
movsb
xchg
jnp
push
es
lahf
mov
cltd
push
in
inc
mulb
push
icebp
idivl
sbb
cltd
pop
jp
clc
xor
cmp
mov
inc
xor
xor
popf
and
into
xlat
xchg
pop
xchg
dec
sarb
push
mov
mov
aam
daa
shlb
pop
push
insl
mov
fwait
pop
push
frstor
shll
test
pop
lahf
testb
rorb
xchg
std
popf
xchg
notb
jmp
lds
jb,pt
dec
imul
push
sbb
dec
xor
stc
xchg
inc
cmp
sbb
sbb
lea
loop
outsl
and
shrl
xchg
shll
xchg
leave
loopne
lds
push
push
xor
mov
in
push
leave
mov
or
jno
mov
xchg
mov
pop
xchg
in
test
sub
aam
mov
add
sub
jecxz
xor
loop
adc
je
mov
add
int3
shll
push
mov
popa
cmc
adc
sub
ffree
cld
xor
mov
mov
dec
fsts
dec
mov
mov
fisubrl
mov
fistps
jle
jae
cmp
inc
jecxz
xchg
mov
xchg
mov
jb
jne
xchg
dec
dec
mov
fidivrs
in
sti
xchg
in
add
sbb
rorl
mov
push
mov
std
push
jo
lcall
lods
mov
sbb
ja
and
dec
ljmp
les
inc
in
not
adc
sbb
sbb
mov
sbb
cmpsb
lods
gs
in
cltd
inc
adc
xor
es
or
pop
xor
out
pop
push
mov
inc
cmp
pop
or
push
add
sub
mov
pop
sbb
scas
addl
push
decb
or
jl
mov
xor
fistl
nop
lahf
clc
vcvtpd2dqy
incl
xchg
sub
push
aas
mov
adc
push
xor
iret
push
aad
lods
sub
gs
push
add
mov
jns
cmp
push
xchg
out
xor
std
inc
je
jmp
and
jl
xchg
and
mov
nop
sub
jno
idiv
push
and
mov
sahf
mov
aas
pusha
popf
stc
ljmp
add
pop
sub
xor
iret
in
loope
insb
in
fs
jno
test
inc
ret
in
stos
rolb
mov
inc
sbb
test
fdivrs
adc
cmpsb
or
jmp
push
gs
inc
push
or
sti
mov
push
lret
xor
in
repz
in
cmc
pop
fildll
xchg
addr16
mov
mov
inc
inc
out
iret
push
ljmp
fstpt
cmpsl
fwait
int
mov
push
rcrb
mov
mov
and
or
lea
in
lret
sti
inc
mov
mov
mov
xchg
cmc
cwtl
movzwl
call
sti
fsubrl
mov
push
xchg
push
loope
mov
cmp
dec
jnp
imul
pop
inc
mov
cltd
mov
xor
ret
loope
inc
or
shrl
imul
adcb
mov
fisubl
pop
pushf
inc
aam
mov
pop
cwtl
mov
fistpll
push
inc
xchg
in
int
insb
sahf
xor
dec
jne
and
jge
sbb
push
cmc
bnd
ds
stos
xor
or
pop
inc
adc
adc
push
pop
pop
mov
xchg
sbb
insl
ja
adc
adc
test
enter
xchg
out
mov
or
iret
mov
dec
jae
das
add
js
es
aaa
sbb
scas
mov
jmp
ljmp
and
inc
push
mov
cmp
arpl
dec
in
lods
xor
cmpb
lret
sbb
and
mov
jl
jb
adc
lea
cmpsb
test
shl
xor
cmp
xor
dec
push
jmp
scas
add
xrelease
arpl
push
lds
outsl
in
ds
jle
roll
push
enter
mov
inc
push
shrl
mov
push
paddb
sub
jo
movsl
xorl
push
dec
or
mov
jecxz
pop
xchg
insb
add
aas
xchg
in
cs
fwait
sbb
arpl
dec
enter
in
incb
adc
fidivrl
jbe
hlt
cmc
xor
jg
nop
mov
xchg
pop
lods
xchg
out
push
inc
sub
sub
into
aam
mov
jns
cli
fimull
imul
sbb
test
cltd
imull
push
push
imul
inc
adc
sub
xchg
adc
pop
push
mov
enter
pop
sub
test
cli
movsl
sub
stos
dec
push
call
sub
mov
jl
dec
xor
sahf
add
mov
cmp
push
xchg
test
fcmovnu
sub
loope
dec
mov
lret
xor
data16
into
loop
ds
or
aaa
adc
sub
xchg
push
stc
adc
cmp
push
aam
popa
push
mov
or
fs
int
lret
ljmp
loop
push
mov
xchg
xchg
in
jmp
or
out
stos
or
loope
icebp
lds
sub
sub
test
imul
sbb
ret
cld
mov
push
xor
mov
outsb
shlb
cmpl
cld
jle
ret
jp
xorl
mov
out
cmp
stos
mov
lahf
sub
mov
cmp
je
mov
cmp
loopne
cmpsl
ja
and
sub
pop
pop
test
xchg
andl
or
ja
and
mov
pop
dec
repz
pop
or
outsl
pop
jmp
sbb
int
cmp
data16
imul
cmp
jge
aaa
popf
sub
lcall
ljmp
pop
mov
lock
pop
xchg
xchg
sub
add
inc
or
ret
jno
add
fwait
dec
outsb
sbb
mov
xchg
cmpsb
jnp
stos
movsl
arpl
and
jno
sbb
jp
shll
jg
out
std
or
jne
jg
mov
clc
fadds
pop
decb
adc
or
dec
dec
jp
add
leave
shr
jb
jno
scas
cmp
ljmp
mov
movsb
fwait
and
ret
inc
enter
mov
icebp
outsl
ret
cmp
mov
sbb
flds
in
sub
mov
xchg
jbe
aas
and
jbe
mov
stos
imul
xchg
push
xchg
and
std
adc
and
pop
xchg
das
jecxz
bound
fwait
jg
add
lock
push
sbb
xor
xlat
outsl
andl
pop
es
into
xor
in
sbb
sarb
sub
xlat
dec
xchg
xor
ss
pop
in
xchg
or
sbb
or
fdivs
loope
sub
out
cwtl
loopne
enter
mov
sub
cmp
jmp
inc
sbb
ret
sbb
in
sbb
aam
ljmp
cwtd
dec
or
aas
xor
les
inc
lahf
or
jecxz
dec
pusha
mov
es
sbb
in
push
stos
lret
les
roll
divl
push
sbb
sub
mov
cld
mov
insl
pop
fs
and
loope
or
daa
lds
cmp
mov
pop
ja
ljmp
cmc
xchg
in
push
mov
sub
and
je
movb
cld
push
dec
adc
repnz
sbb
mov
vcvtss2sd
mov
test
cltd
into
fiaddl
xor
xchg
pop
dec
mov
into
push
fs
sarl
dec
push
lret
outsl
loope
xor
rorb
xchg
push
lea
or
sub
test
ret
xchg
mov
out
pusha
bnd
add
dec
dec
js
lahf
sahf
jbe
cmp
cmp
out
xchg
lock
sbb
jmp
fsubl
jp
mov
adc
push
inc
icebp
aad
sub
fidivs
shll
cld
shlb
loopne
aaa
dec
jecxz
ds
xchg
in
and
sub
leave
gs
and
mov
ds
mov
in
out
out
stos
leave
inc
std
fsub
mov
xor
hlt
arpl
add
or
dec
xorl
cld
jno
xor
xchg
fnsave
mov
fs
subl
roll
jg
mov
ds
mov
test
adc
push
mov
cld
fisubrl
sub
xor
adc
jo
xorb
sub
out
xor
adc
mov
mov
call
cmp
insl
push
sbb
cmp
mov
outsb
or
ret
stos
or
mov
and
aad
fisubl
xor
inc
jne
div
fs
push
add
sbb
inc
mov
aas
or
and
dec
out
in
push
out
push
dec
lret
adc
dec
pop
jb
loope
dec
pop
xor
jg
and
add
dec
int
sti
fisttpll
jmp
push
adc
rolb
or
js
xchg
enter
xor
cld
jo
pop
movsl
in
xchg
adc
int
rol
or
push
pop
fidivl
inc
stos
mov
push
mov
mov
out
add
nop
stos
pushf
cmp
mov
and
orl
or
mov
inc
movhps
inc
stc
sub
scas
js
rcrl
cmp
inc
inc
mov
dec
push
mov
inc
xor
outsl
pop
or
push
sub
mov
inc
insl
dec
mov
pop
cltd
arpl
pop
pushf
outsl
packsswb
sti
dec
pop
add
dec
push
cmp
add
add
jge
inc
sub
roll
xor
int
lahf
repnz
jns
mov
lret
mov
mov
xchg
bound
add
sub
mov
or
test
jg
push
clc
or
sbb
sbb
xorl
and
std
jnp
cs
mov
pop
js
and
ljmp
shlb
jae
insb
jp
rclb
lcall
mov
data16
dec
push
jp
cmp
mov
mov
jg
pop
dec
test
rorb
mov
mov
shll
dec
push
je
fst
movsb
mov
jns
mov
cmp
mov
xchg
int
rcl
adcb
and
inc
push
sbb
cmpsb
and
stc
dec
pop
ds
jl
lcall
add
inc
xor
add
sub
jb
es
jbe
loop
fiadds
xchg
sub
pop
jmp
push
repz
xchg
jle
mov
stos
pusha
pop
ret
mov
sar
cmpsb
std
daa
pop
jmp
fnstsw
in
xor
inc
sti
add
repnz
add
mov
inc
addr16
cltd
xor
or
sub
sub
cmp
push
shr
add
leave
mov
lcall
int
iret
mov
mov
lock
les
aad
imul
cli
xor
cmc
mov
test
inc
dec
pop
test
ja
mov
mov
sbb
dec
push
insl
cwtl
test
jno
push
push
mov
test
xchg
insb
sub
add
addl
mov
ja
cmc
adcb
shlb
jnp
jb
jg
ss
aas
std
mov
adc
jl
add
jl
pand
int
pop
hlt
mov
mov
or
mov
fbstp
mov
xchg
mov
pop
aaa
rcr
loopne
dec
aaa
lcall
or
cmpsl
stc
int3
push
add
add
fstpl
daa
cmpb
mov
ret
int
xchg
and
movsb
add
sbb
and
push
mov
fildl
jmp
pop
stc
pop
and
cmpsb
subb
ss
repz
cmp
adc
and
ret
fimull
pop
dec
test
ret
enter
xchg
imul
add
mov
or
or
xorb
jns
outsl
ret
cmp
fdivrs
popa
aad
pop
jb
jne
in
jns
ret
addr16
dec
cmpsb
add
pop
cmp
xor
rclb
jge
push
test
and
jne
ljmp
inc
les
sub
push
cli
in
adc
and
jle
nop
subb
mov
out
scas
aaa
bound
test
inc
insb
pushl
cmc
dec
mov
push
or
push
pop
dec
outsb
jae
xchg
jge
lods
int3
test
outsl
push
push
pop
imul
stos
hlt
ljmp
fdivrs
cmpsb
push
mov
sbb
inc
int3
mov
jnp
sub
push
pop
pop
or
mov
xchg
test
dec
mov
mov
inc
fiadds
mov
inc
rcll
jnp
mov
mov
fcompl
out
bound
lret
mov
subl
ss
aam
divl
sahf
mov
or
mov
ror
sub
jbe
xchg
ficoml
aaa
sub
vcmpss
xchg
inc
mov
xor
push
mov
cltd
int
jo
hlt
mov
or
mov
mov
rcll
jne
mov
xchg
mov
jnp
inc
dec
imul
js
mov
jmp
mov
pop
std
cltd
or
rclb
cmp
scas
sub
repz
jmp
jae
push
hlt
shll
arpl
lods
jno
ficoml
insl
push
rcll
lods
out
mov
xchg
push
test
jp
jg
xchg
insb
or
jl
call
jnp
movsl
push
mov
les
test
sub
add
dec
adc
mov
or
lahf
add
add
dec
jo
jmp
repz
scas
mov
stos
mov
adc
scas
aas
push
enter
clc
xor
or
ret
or
sub
enter
cmp
xchg
fstpl
or
xlat
push
xchg
lret
jecxz
dec
sar
pop
fsubs
popf
leave
jno
shl
out
sub
mov
cmp
rep
lret
or
sbb
cmp
inc
mov
cld
mov
ficomps
push
inc
sbb
inc
sub
xor
rclb
xchg
subl
test
cwtl
push
lds
jl
mov
mov
les
cmp
fistpll
jne
xchg
dec
dec
push
rclb
pop
pop
cmp
and
enter
pushf
int3
sahf
lahf
lea
pop
fiadds
pop
push
leave
sub
sub
lods
xor
jnp
jb
popa
stos
and
scas
pop
jl
lods
cld
int3
rcl
xchg
lahf
adc
mov
mov
pop
or
out
movsb
xchg
leave
fmull
and
mov
inc
push
imul
mov
mov
sub
js
pop
les
decb
or
sbb
shr
daa
push
jp
xchg
ljmp
jecxz
mov
jo
aaa
inc
std
cltd
and
frstpm(287
fists
dec
stos
std
adc
outsl
push
mov
gs
daa
test
lods
mov
shlb
test
xor
lods
dec
cmp
mov
mov
adc
cmp
or
out
aaa
xchg
gs
inc
je
pop
or
aas
pop
xor
xchg
jbe
repnz
fldcw
std
inc
or
and
in
pop
in
mov
adc
orps
inc
mov
arpl
lret
jnp
ljmp
add
fs
mov
sbb
es
push
daa
jecxz
push
js
sub
sub
mov
pusha
jmp
and
mov
xchg
xor
movsb
loope
rcll
jb
rclb
stos
mov
push
lock
sub
cltd
sub
inc
mov
outsb
jecxz
jmp
jb
or
push
push
in
icebp
xor
movsb
test
inc
xor
mov
cmp
inc
aas
nop
fptan
xchg
push
in
mov
test
in
popf
adc
loop
shl
xor
jbe
int
jmp
lds
xor
aam
in
scas
repz
call
mov
fs
lds
lret
lcall
and
cltd
or
or
xchg
sbb
nop
inc
lret
fisubl
inc
xchg
cmp
add
push
inc
mov
xchg
ret
push
sub
fistl
cmp
dec
pop
lahf
aas
movl
mov
in
jg
outsl
xor
testb
aam
and
sbb
sub
test
dec
cmp
push
mov
mov
call
cld
lods
and
mov
mov
and
and
scas
adc
fidivrs
int
lods
dec
out
pop
js
flds
xchg
ficompl
pop
jo
push
xlat
cltd
add
sub
out
fdivrs
ss
cmpsb
ljmp
fadd
subb
loope
or
jne
mov
repz
pop
rorb
nop
fstpt
popa
mov
pushf
scas
cmp
js
out
push
jns
movsl
shrl
cs
or
iret
mov
out
inc
ds
xor
loope
iret
imul
jne
or
jb
push
inc
push
mov
inc
pop
ja
es
inc
fucomi
fcomip
inc
jge
jle
icebp
mov
adc
lods
aam
mov
mov
mov
popf
add
pop
add
mov
movsb
aaa
cmp
sbb
out
adc
dec
mov
pop
jo
imul
popf
in
or
inc
push
cmp
lret
push
sarl
mov
inc
out
daa
test
pop
js
in
jle
sbb
jo
mov
test
fcmovne
pop
aas
jbe
sahf
push
dec
sub
jno
inc
imul
inc
sub
cmpsl
inc
cmp
pop
and
jecxz
fisubs
movsb
sbb
repnz
orb
cmp
inc
ret
pop
mov
lret
outsl
out
cmc
push
jo
xor
testl
mov
mov
outsl
fcomip
xor
loopnew
in
push
adc
iret
inc
xchg
inc
int3
cltd
int3
or
jge
inc
inc
fidivl
or
mov
xchg
push
hlt
pop
add
clc
popf
dec
sbb
jg
sbb
mov
inc
cltd
dec
or
pop
arpl
cmpsl
xchg
repnz
mov
iret
imul
pop
icebp
mov
popa
andb
add
mov
lods
dec
imul
scas
icebp
in
inc
jb
xchg
dec
jnp
gs
cmp
or
adc
lcall
adc
sbb
lds
jb
les
mov
mov
test
sahf
cmp
cmpl
sbb
lcall
xchg
in
loop
lret
jmp
rolb
adc
pop
pop
insb
inc
pop
and
dec
mov
daa
cmc
in
xor
mov
xchg
sub
mov
icebp
adc
add
and
lock
and
imul
pusha
test
aas
arpl
scas
popf
sti
mov
jle
adc
and
push
push
mov
nop
ss
fistps
ds
or
jns
dec
xchg
push
and
iret
sbb
pop
divb
push
test
mov
js
mov
push
xor
test
add
mov
divb
lods
cltd
mov
inc
hlt
inc
inc
mov
stos
jp
xchg
mov
xchg
inc
xor
stc
nop
stc
dec
rep
testl
adc
adc
mov
imul
jmp
cmp
pop
shll
mov
xor
pop
icebp
pushl
inc
cli
fistpl
jb
hlt
fs
mov
jge
mov
or
mov
test
dec
inc
mov
xor
pop
mov
ja
mov
lret
movsb
and
in
fsubrp
std
push
or
mov
cwtl
jae
mov
pop
mov
push
fistps
xrelease
dec
ret
add
in
sub
pop
sbbl
pushf
arpl
adc
repnz
lods
mov
mov
xlat
clc
pop
sub
cmpsl
and
mov
in
lock
sub
cmp
popa
rcl
or
lds
and
fistl
je
xchg
in
xchg
lods
popf
jno
lods
call
sbb
jne
mov
mov
sbb
jns
cmp
lds
mov
pop
sbb
sbb
dec
mov
das
jmp
jbe
loop
pushf
push
bound
add
test
mov
jge
popa
push
dec
add
and
xlat
xlat
data16
mov
adc
les
jns
test
sbb
out
sahf
inc
jmp
pop
xchg
add
cmp
or
aas
shll
shll
loopne
dec
or
mov
loope
or
movsl
test
sti
mov
int
jno
and
push
push
out
js
test
or
adc
lcall
push
fisubl
mov
out
rcl
dec
or
xor
inc
lock
sub
lret
add
mov
push
jl
jp
pop
call
arpl
aad
cwtl
mov
and
jno
mov
fcmovnbe
sbb
pop
inc
mov
xchg
mov
xlat
icebp
not
mov
push
jae
cmp
call
mov
jg
cltd
daa
xchg
inc
leave
daa
sub
clc
jl
inc
outsl
dec
int3
int
pushf
mov
lea
inc
aam
das
iret
and
dec
add
inc
xchg
les
xchg
jmp
jo
repnz
xchg
shrb
jno
loope
jnp
mov
sub
sbb
jmp
xchg
stc
sbb
orb
test
pop
orb
lods
lds
mov
lcall
lret
enter
and
sbb
lea
insl
invd
jae
stos
sub
jb
and
xor
mov
xchg
sbb
mov
push
xor
push
shr
push
bound
dec
and
pop
sub
adc
xor
push
insb
dec
sub
pusha
mov
sbb
mov
push
jp
imul
push
or
mov
inc
mov
imul
pop
xchg
fwait
or
push
sbb
and
or
arpl
out
shlb
or
push
xor
js
daa
enter
data16
cltd
push
shlb
leave
or
jecxz
ret
mov
int
insl
adc
push
mov
jg
loop
mov
cltd
mov
inc
dec
sbb
xchg
mov
sub
nop
adc
pop
imul
dec
jo
xchg
push
add
idivl
testl
shrl
sub
lcall
out
dec
ret
mov
call
in
dec
fildl
dec
cmp
rol
jg
add
ret
pop
and
xor
stc
mov
inc
repnz
stos
push
dec
bound
mov
in
or
mov
out
leave
adc
mov
sbb
cmpl
pushf
lods
adc
enter
jmp
movsb
loope
testl
loopne
cmc
bound
xor
outsb
adc
and
mov
xorb
pop
test
add
dec
jbe
lahf
lds
adc
fsts
std
push
std
nop
mov
mov
cmp
cmp
or
stos
dec
jnp
sbb
ja
cmp
and
cwtl
pop
repz
sub
lods
shlb
ret
pop
lock
xor
loope
fldcw
mov
scas
sub
bound
aad
mov
pop
fnstsw
pop
addr16
leave
idivl
testl
lcall
mov
mov
jnp
add
mov
repz
cmp
pop
sub
stos
inc
jb
or
jb
repz
jbe
lret
mov
jne
and
mov
ret
aas
into
mov
or
add
iret
rcll
cmp
scas
ja
sbb
addb
xor
sub
test
mov
fwait
hlt
test
add
ds
dec
mov
jle
ds
sub
inc
sbb
cld
test
pop
add
repnz
xchg
mov
loopne
movsb
mov
mov
loop
add
sahf
sahf
xor
rorl
ret
adc
jo
ds
or
jb
repz
lods
dec
push
push
stos
loope
lds
shll
cmp
les
lret
mov
jl
sub
push
out
pop
xchg
add
pop
cwtl
leave
sub
out
cltd
in
sub
mov
xor
lahf
out
daa
rcr
cmp
aam
sbb
pop
sbb
fs
mov
push
outsl
pop
adc
xor
pop
fimull
jno
cwtl
dec
sub
je
cli
jne
imul
les
test
xchg
sbb
pop
fwait
push
scas
inc
and
sub
mov
xchg
fwait
lcall
std
inc
leave
nop
xor
mov
mov
xchg
fildl
xor
mov
xor
je
inc
stos
cmp
cmp
jecxz
adc
sub
fucom
ret
lret
std
nopl
neg
add
popf
push
fprem
adc
daa
addr16
dec
in
es
pusha
pop
fists
and
shll
mov
js
xor
inc
adc
in
dec
mov
jno
movl
cmp
fcmove
adc
cmp
inc
inc
xor
adc
sarl
sarb
mov
aaa
jp
and
lods
je
cmp
out
lcall
xlat
aaa
xor
and
dec
mov
mov
lcall
sbb
add
out
or
adc
lret
fdivrs
mov
mov
and
pop
je
xor
xchg
loopne
xchg
out
aam
lock
lods
stc
cmp
pop
dec
int3
mov
mov
in
iret
call
xchg
pop
mov
mov
and
stos
dec
in
xchg
pop
add
paddusb
pop
mov
mov
dec
mov
push
ss
cmp
pop
das
xchg
inc
dec
push
cmpsl
lret
adc
fildll
xor
mov
and
in
cmpsb
xchg
mov
adc
sbb
xor
jns
out
gs
jle
out
push
mov
loopne
mov
pop
bound
xchg
lret
test
xor
stos
jae,pt
fdivrs
stc
pop
and
dec
push
sahf
jp
xchg
dec
sub
cmp
sbb
inc
enter
jl
mov
and
dec
pop
mov
aaa
popa
aaa
scas
sub
push
and
imul
das
jno
std
pop
shlb
lock
jg
adc
outsl
into
or
pushf
and
dec
or
ds
add
dec
adc
les
sahf
xor
enter
cwtl
ja
arpl
sbbb
dec
insl
xchg
cmp
outsl
cli
ja
cltd
xchg
cmp
mov
jnp
mov
ficompl
pop
mov
imul
xor
ljmp
imul
jae
sbb
insb
pop
xchg
daa
gs
pop
and
bound
pop
add
js
sahf
sbb
jo
in
push
xchg
imul
pop
lcall
inc
negl
inc
fidivs
mov
inc
mov
out
lret
add
lret
dec
aam
xor
pop
cmp
xchg
loope
fsin
lods
lods
dec
sub
adc
push
mov
sbb
sub
icebp
mov
vmwrite
hlt
out
xchg
xchg
daa
sbb
xchg
push
cmpb
outsl
loope
pop
faddl
stc
add
xchg
pop
pop
test
lods
push
adc
lods
mov
pop
add
adc
rcl
inc
pop
mov
test
sub
dec
fistpll
xchg
ja
and
dec
jecxz
ja
lods
inc
mov
cs
push
adc
adc
popf
in
movsl
lahf
jbe
dec
pop
push
push
and
sub
out
arpl
sbb
xchg
sbb
inc
sbb
sbb
je
rorb
shl
out
push
cmp
sub
mov
loope
xchg
pop
ljmp
jns
out
lea
popf
add
push
icebp
adc
jmp
ss
mov
mov
jmp
in
and
mov
xchg
aaa
mov
das
fldl
int
hlt
fiaddl
inc
xchg
mov
adcl
mov
adc
scas
mov
mov
mov
inc
repnz
fidivrs
outsl
mov
loope
sub
sarl
fdivs
lods
aas
push
sub
insb
xchg
and
adc
sbb
pop
andl
enter
loop
xchg
lods
lds
repnz
sub
incb
xchg
cmp
mov
pop
mov
jg
jnp
mov
movb
adc
jg
rcrl
in
jnp
and
movsl
in
das
mov
push
loope
adc
dec
iret
or
mov
fmuls
aas
sub
enter
cltd
cmp
arpl
sbb
stc
imul
or
lods
push
clc
sbb
popa
add
xor
push
adc
fadds
xchg
sarl
mov
xchg
movsb
call
into
mov
pop
or
mov
lret
mov
popa
outsb
sub
lods
insb
mov
mov
push
jne
pop
mov
sub
insl
test
push
push
add
cmpsl
rcr
fsubrl
pop
sbb
pop
lcall
push
fidivrs
adc
fnstsw
icebp
jne
pop
xor
inc
xor
test
cmp
cs
inc
enter
push
loope
push
pusha
cmp
xchg
leave
dec
in
test
incl
enter
jne
or
rol
pop
jno
popf
stc
or
jns
sub
scas
lods
dec
add
mov
iret
push
in
in
hlt
orl
aaa
inc
lods
mov
aam
in
cmp
adc
sbb
cld
cmpl
filds
imul
std
lea
mov
dec
dec
push
sub
jge
out
lods
loope
add
dec
jno
mov
leave
and
jns
push
rclb
bound
insl
adc
sub
sub
pop
push
ss
jne
jbe
shll
jae
fidivl
mov
jmp
add
push
mov
mov
out
flds
xchg
test
inc
mov
or
or
cld
fcoms
nop
icebp
pop
lods
or
jg
and
push
leave
xor
jg
hlt
loop
inc
testb
and
aad
lods
push
inc
sbb
sbb
out
inc
pop
adc
es
test
jno
sub
dec
jo
xchg
lahf
jbe
and
fs
jg
ja
mov
inc
inc
les
inc
push
mov
mov
cltd
dec
movl
adc
mov
sbb
xorb
test
dec
jmp
dec
cmp
cmpsl
add
lods
push
xchg
and
adc
enter
mov
push
inc
pop
sub
and
or
pop
push
hlt
insb
sar
pushf
fs
push
pop
cmp
lcall
mov
pushf
movsb
pushl
xor
iret
cmpb
pop
lahf
or
dec
xlat
jl
ds
dec
xor
scas
cmp
fs
sub
add
inc
lret
cwtl
leave
and
inc
in
jno
xchg
dec
add
inc
mov
sub
sub
inc
and
mov
xchg
enter
sbb
dec
cmpsl
and
setle
js
inc
lods
xchg
push
es
push
mov
xchg
cmp
rorb
inc
aas
mov
mov
xor
js
mov
or
rorb
out
lret
dec
push
jg
dec
and
sbb
and
xchg
pop
jl
mov
test
js
push
sysret
pop
cs
in
or
in
sbb
xor
cltd
push
xchg
xor
aaa
fwait
pop
add
adcb
scas
ret
push
int3
inc
divl
push
jmp
rolb
sbb
mov
jecxz
sub
add
mov
or
into
std
aaa
sar
les
xor
test
test
mov
inc
sti
xlat
imul
push
dec
cld
negb
hlt
fs
push
bound
add
sub
adc
add
cmpsl
mov
jb
dec
sahf
xlat
test
test
add
daa
cmp
sbb
adc
cmp
rclb
cmp
hlt
inc
pop
cmp
sub
in
push
fwait
push
sbb
rcl
jne
fwait
adc
push
es
test
outsb
dec
jge
cmp
outsl
push
lahf
jns
out
mov
jns
andb
incb
xchg
push
mov
jne
inc
cmp
push
fimuls
cmp
cmc
cs
icebp
and
or
pop
sub
nop
add
js
push
mov
and
fdivp
ret
dec
xor
lret
mov
or
iret
lret
pop
es
xchg
add
hlt
add
mov
inc
jb
mov
xchg
push
dec
mov
shr
mov
mov
lret
cld
mov
jge
sub
push
or
les
mov
sub
cs
aad
roll
neg
icebp
lods
jns
sbb
imul
mov
dec
cld
sub
iret
popl
mov
ret
sti
inc
fiaddl
sub
xlat
std
add
mov
addr16
jo
mov
add
xorb
xchg
sbb
xchg
adc
std
xchg
adc
dec
and
xchg
in
in
pop
pop
dec
jnp
cmp
push
rcll
mov
movsb
mov
or
andb
and
ret
andl
fisttpll
jp
mov
add
inc
sub
push
mov
vcmppd
iret
add
mov
add
sahf
lcall
inc
cwtl
and
mov
iret
rclb
outsb
mov
arpl
lods
and
cmp
jae
jp
mov
lods
and
inc
call
jmp
loop
xchg
pop
sub
adc
inc
mov
js
mull
negl
or
pop
imul
sahf
lods
xchg
cltd
aam
lret
cmp
mov
push
in
jno
mov
andb
dec
aas
lods
pop
lea
stc
ficomps
jbe
xorl
xchg
aam
jl
add
mov
in
mov
jmp
leave
in
aaa
xchg
sub
inc
out
cmc
dec
fsubs
arpl
and
pop
outsl
xchg
cmpsb
movsl
mov
pop
pusha
fmuls
je
int
add
aam
cmc
gs
mov
mov
test
sbb
pop
stos
jns
push
dec
scas
shlb
int
jl
sub
add
cmpsl
lods
cmc
cltd
xor
inc
sbb
cmp
jo
rep
mov
aam
fidivrs
das
imul
xchg
xchg
xchg
adc
sarb
daa
push
arpl
loop
mov
pushl
stc
dec
dec
notl
test
mov
fildll
adc
sbb
or
std
adc
cmpsl
add
lea
jge
add
aad
or
dec
aas
into
loope
iret
jmp
sbb
dec
lock
jge
lds
js
cmp
test
inc
roll
dec
test
push
pusha
movsb
xor
mov
aad
pushf
jb
repz
pminsw
popf
nop
js
or
lods
mov
xchg
jecxz
fnstenv
pop
mov
push
push
jmp
test
pop
sub
lahf
mov
xor
imul
inc
fstl
pop
xor
cmc
pop
or
imul
mov
and
mov
ret
mov
arpl
cmc
mov
push
xchg
lock
fcomp
lea
push
and
cmovno
fcmovnb
mov
push
lea
loopne
fisttpl
mov
xlat
pop
inc
test
push
sarl
cmp
lods
mov
dec
mov
xchg
or
mov
mov
nop
test
jle
cmpsb
rolb
mov
out
ja
out
mov
mov
mov
in
push
mov
lock
scas
jno
mov
mov
or
mov
or
cwtl
andb
inc
jne
mov
lcall
sti
xchg
or
sbb
cmp
adc
push
cwtl
stc
rolb
mov
adc
xchg
lods
call
fldenv
and
inc
push
and
andb
add
mov
pop
sbb
dec
sub
fcoms
pop
repnz
aaa
sub
sub
mov
pop
je
xor
leave
loopne
aam
and
push
imul
test
jl
lcall
push
gs
xor
mov
ljmp
cmp
xor
loopne
sub
jb
mov
daa
das
cmp
cmpsl
fstpl
add
push
pop
sbb
mov
les
jmp
cmpsb
adc
stos
dec
sbb
gs
outsb
lds
dec
orb
add
lock
js
push
pop
pop
ret
cli
jmp
sub
insl
add
mov
roll
scas
mov
jge
add
inc
add
in
push
push
add
lahf
arpl
jno
or
lock
or
imul
dec
push
enter
movsb
mov
and
mov
aad
mov
add
pop
ret
mov
out
mov
cmp
push
dec
std
lret
in
mov
mov
cmpsl
xor
mov
inc
xchg
pop
lods
aam
adc
cli
jo
pop
iret
add
leave
sbb
push
cmpsl
pop
add
test
in
movsb
fildl
dec
xchg
rcll
jle
iret
mov
aam
shlb
ret
inc
add
inc
andl
sti
adc
fsubl
sbb
movb
pop
dec
inc
jbe
mov
adc
and
mov
mov
add
and
or
into
or
nop
mov
inc
cs
adc
dec
out
pushf
icebp
mov
xor
push
push
aas
mov
inc
fdivl
fistl
mov
out
int3
int3
sbb
push
vandnps
incl
mov
cmp
ss
incb
in
in
lods
lods
lcall
roll
xchg
mov
xlat
and
std
fiaddl
cmc
and
inc
insl
lret
cmp
or
push
or
mov
cmp
inc
das
ljmp
lods
stos
sbb
js
lret
mov
cmpsl
js
ret
mov
data16
or
mov
pushf
cmc
je
popa
push
xchg
add
push
int
enter
jno
jnp
hlt
fstpt
push
pop
mov
inc
add
ja
daa
cs
orl
lds
and
jno
pop
inc
jae
aas
in
add
fmuls
and
scas
push
pop
mov
aaa
push
lea
jne
mov
mov
shll
xchg
cmc
loopne
push
jmp
bound
stos
mov
subl
ret
jg
pop
jns
and
xchg
inc
rcrb
stos
cmp
dec
xchg
sub
jno
or
lcall
and
pop
in
sub
fwait
test
push
imul
jb
lahf
imul
mov
faddp
mov
fiadds
in
gs
push
bound
jle
scas
push
mov
mov
lcall
aam
mov
jp
mov
daa
sub
rorl
in
mov
stos
sbb
cmc
int3
out
sub
fdivr
dec
pusha
pop
ret
push
dec
hlt
cmp
xor
mov
cli
jno
push
cmp
sub
xor
xor
loopne
and
cmpsl
inc
xchg
pop
dec
mul
lods
push
jle
or
pop
inc
ds
lret
xchg
xchg
xchg
loopne
pushf
clc
push
dec
and
xlat
cwtl
repz
bound
lcall
cli
loop
sub
divb
inc
aad
or
enter
insl
dec
shrl
adc
jg
pop
das
lret
sub
sub
cmp
mov
or
mov
pop
mov
cmp
pop
jl
or
movb
mov
ret
xchg
xchg
das
aaa
sub
lock
mov
push
fidivrl
clc
and
nop
movb
mov
add
xchg
xor
mov
arpl
movsl
aad
jg
movsb
lds
push
mov
add
sub
xor
ss
add
mov
fs
or
in
mov
push
jne
out
popf
clc
mov
mov
repnz
outsb
pushf
stc
adc
sub
inc
and
fsubrl
clc
popf
and
iret
adc
aaa
sbbl
xchg
movsl
popf
flds
xor
cwtl
mov
test
shlb
mov
mov
loop
test
sub
lods
jg
scas
and
imul
pop
leave
jecxz
push
ja
movsl
cmpsl
mov
in
cmp
xchg
pushf
rcrl
xlat
push
mull
into
inc
loope
leave
xor
pop
das
mov
inc
pop
sub
push
das
rcr
jnp
add
les
xchg
shll
xchg
repnz
adc
imul
pop
pop
dec
aas
iret
shlb
int
adc
sub
fdivl
mov
sub
pop
jmp
movsl
in
iret
ret
enter
jne
cmp
sub
aas
inc
aam
and
in
mov
stc
pop
inc
push
mov
sbb
jbe
dec
pop
xor
mov
xchg
jge
xchg
push
insb
adc
cmpsb
inc
mov
jns
aam
lcall
push
mov
inc
rorb
sbb
xor
insl
push
fwait
xchg
cmp
dec
mov
xchg
jno
pop
fisubl
or
cmp
cld
stc
mov
dec
movsb
and
test
fldcw
and
mov
enter
in
adc
mov
pop
jp
hlt
push
and
mov
or
sub
rol
xor
fcompl
dec
mov
and
mov
mov
xchg
insb
jo
sahf
pop
push
sbb
js
fmul
cmpsb
mov
push
dec
outsb
jo
lret
mov
in
add
aaa
cltd
nop
mov
fs
mov
nop
testb
push
shlb
orb
mov
adc
xchg
add
lods
push
adc
ja
lahf
mov
dec
jno
fs
add
icebp
fnstsw
scas
jno
lods
xchg
push
mov
push
scas
xchg
icebp
nop
sbb
inc
imul
movsl
jae
movsl
cmp
mov
xor
jno
adc
gs
int3
adc
rolb
ss
or
mov
cmp
add
outsb
out
ss
mov
lods
cmc
pop
push
inc
lea
movsl
cli
shll
mov
loop
test
lcall
dec
push
or
adc
or
stos
out
and
popf
rclb
adc
divb
jmp
mov
xchg
icebp
in
sbb
fisttpl
mov
sbb
lret
filds
mov
jo,pn
clc
repnz
stos
in
loope
mov
inc
mov
daa
jnp
push
jno
xor
out
mov
fwait
xchg
in
test
idivb
test
sub
inc
cld
xchg
fs
mov
jge
push
and
out
test
test
add
shlb
or
lcall
lock
dec
rcrl
sbb
dec
xor
dec
push
pop
out
mov
xor
jne
sbb
sahf
xchg
hlt
cmp
jnp
mov
outsb
lahf
cld
mov
jl
jo
xor
cli
shll
stc
mov
or
stc
mov
and
dec
cs
mov
adc
or
jns
jecxz
stos
lock
xchg
ljmp
push
adc
sbbl
mov
insl
or
cs
dec
fsts
insl
movsb
int
sbb
scas
aad
jmp
xchg
sbb
xor
ljmp
into
lods
cmpsb
adc
jns
and
hlt
cld
imul
rcl
lcall
scas
adc
cmovb
jmp
cmp
xchg
sbb
int3
shrb
iret
adc
repnz
jmp
in
dec
mov
sbb
mov
imul
mov
mov
stc
pop
pop
mov
in
push
loop
std
cmpb
lcall
mov
sbb
ds
in
fwait
imul
cmp
cmp
ds
loop
mov
movl
in
cmp
sub
mov
addr16
insb
or
mov
mov
xor
pop
cmp
add
cmc
incb
pop
test
mov
mov
jno
cld
adc
xchg
adc
add
ds
addr16
int3
mov
or
push
pop
and
insb
into
paddusw
insl
inc
push
xlat
xchg
roll
scas
jbe
and
jge
xor
int3
out
addr16
lea
cmpsl
fwait
nop
repnz
lret
and
push
pop
mov
dec
pop
bound
stos
loope
lcall
aas
stc
push
icebp
jbe
push
jo
cmpsb
mov
push
scas
mov
push
and
dec
jecxz
sub
push
aaa
cmp
jns
mov
sbb
adc
lret
cmp
mov
out
cmp
pop
pop
and
outsl
pop
adc
sbb
into
fnstenv
dec
adc
xlat
and
pop
jp
movl
ljmp
pop
adc
stc
push
loope
fsts
sbb
mov
insb
inc
mov
data16
fldcw
or
sbb
xchg
pop
scas
mov
mov
push
iret
sbbl
push
and
int3
lods
jmp
adc
enter
pop
into
jns
mov
andb
or
push
adc
push
fistpl
sub
das
mov
dec
test
xchg
add
push
movsb
push
cmp
jle
sti
xchg
push
jne
pop
push
bound
adc
fwait
out
or
pop
gs
repnz
mov
sbb
lds
cmp
fs
push
adc
or
ficoml
fsubl
rorb
push
pop
push
push
or
test
out
mov
pop
daa
orl
sbb
jmp
inc
ret
pusha
mov
push
dec
nop
loopne
sub
sbb
pop
test
mov
shll
frstor
ja
stos
enter
ljmp
leave
imulb
mov
pop
jmp
imul
push
out
cmc
mov
pop
mov
out
jo
aam
stos
mulb
pop
sbb
and
add
nop
push
cmp
out
fs
test
sbb
rcll
out
inc
rorl
mov
addb
je
cmp
jl
scas
pop
add
pop
dec
sbb
mov
ret
fcomps
insb
out
or
inc
xor
inc
sbb
mov
cmp
repnz
adc
xor
mov
lret
jb
scas
loope
jle
rcrl
cwtl
mov
inc
sub
pop
jp
sub
sti
and
lahf
scas
jb
mov
cmp
pop
sbb
or
push
rcrb
fdiv
icebp
sbb
loop
int
adc
lea
popl
pushf
mov
xchg
adc
pop
sbb
imul
pop
lods
outsb
call
shrb
mov
pop
outsb
add
fldl
shrb
inc
fiaddl
cmp
and
xor
int3
cmpsl
into
stos
outsl
pop
mov
ds
mov
daa
cld
xchg
xchg
rorb
push
shll
pop
popa
mov
loopne
or
fwait
rcll
mov
fwait
jecxz
aas
in
and
gs
pop
dec
rclb
imul
insl
mov
testl
sub
mov
popf
jb
cmpl
inc
jae
je
fdivrs
lods
into
fdivs
jecxz
ret
pop
xchg
movb
test
jmp
call
jnp
jae
adc
add
shl
dec
cmp
fucomi
loop
mov
jg
jbe
fistps
test
dec
jnp
aas
push
xor
or
jb
sbbl
pop
test
inc
or
add
jno
xlat
xchg
inc
sub
mov
cmp
pushf
lods
jp
test
add
and
pop
movsl
mov
inc
leave
pop
jle
outsb
xor
enter
sub
push
or
lea
addl
sbb
rolb
mov
inc
addr16
xchg
lahf
xchg
hlt
shlb
in
mov
ficompl
mov
dec
idiv
leave
cmp
inc
pop
push
xchg
push
cmpsb
jae
loopne
lret
jle
push
pop
sbb
and
movsl
mov
insb
fildll
and
adc
pop
inc
jne
cltd
add
push
jge
pop
push
xorl
pop
xchg
jb
add
lret
adcb
or
sahf
outsl
lret
ljmp
out
shl
jmp
pusha
pop
push
lret
cmp
sbb
std
xchg
push
inc
jmp
pop
fwait
jp
movsb
jo
pushf
cmp
push
dec
add
fcmovnb
and
loop
jmp
mov
jmp
and
pop
push
popf
xor
cmp
sahf
xor
in
and
mov
cmp
scas
sti
int
out
xchg
cld
mov
jecxz
hlt
mov
sub
inc
sub
mov
nop
pop
pop
insb
hlt
cmp
dec
xor
fwait
lret
mov
xchg
dec
fistpll
adc
and
xchg
xor
sub
daa
shll
test
jmp
xchg
jbe
ret
icebp
adc
sbb
shlb
fidivl
dec
mov
cmp
mov
jbe
lea
pushf
shlb
add
mov
pushf
nop
push
stos
cmpb
in
sti
insb
repz
pop
pushf
mov
jbe
mov
outsl
fwait
or
fnstcw
movsl
xchg
movsb
xchg
sub
leave
dec
pop
jne
in
push
mov
lahf
ret
sti
mov
je
addb
adc
shlw
lock
xchg
movsb
push
adc
imul
cmpps
cmp
stos
or
dec
sub
fs
cld
and
leave
rolb
lods
stos
jo
adc
inc
sbb
lcall
lea
sbb
xchg
adc
cmpsl
jmp
sub
pop
dec
xor
filds
movsl
mov
inc
and
mov
xchg
xor
scas
sub
lret
popa
pop
xor
adc
mov
jb
fiaddl
sbb
std
mov
sahf
mov
pop
das
push
fisttps
orb
jecxz
lds
mov
mov
sbb
jbe
jae
aaa
clc
subl
faddp
add
mov
pop
and
adc
inc
push
push
imul
ret
xor
push
sub
adc
push
and
shrb
sbb
pop
fucomp
cld
rcl
out
fldt
sar
dec
jmp
jae
jmp
cwtl
add
add
imul
mov
lods
push
jnp
scas
cmpsl
push
mov
pop
xor
cmp
xchg
test
inc
mov
push
xchg
out
cwtl
ret
dec
mov
ljmp
ja
pop
mov
sbb
xchg
test
dec
lret
adc
sbb
cmc
or
or
ret
aad
mov
pop
adc
adc
jae
fldcw
dec
jae
pop
and
insb
ljmp
cld
inc
or
loopne
push
cwtl
dec
loopne
aad
leave
add
pop
dec
outsl
dec
pop
pop
inc
gs
add
outsl
jecxz
cltd
cli
int3
aas
sub
mov
into
scas
sub
xor
push
aas
jecxz
xor
and
cmpl
cwtl
cmp
loop
cmp
mov
je
push
ja
and
xor
cmpsb
sar
in
and
and
pop
xchg
and
outsb
add
lret
nop
cltd
stc
or
les
mov
sub
xchg
sahf
in
test
ret
addr16
mov
icebp
mov
mov
cmp
add
jno
test
pop
mov
das
shll
or
outsl
scas
popf
adc
lret
ficoms
cmc
cwtl
mov
test
daa
xchg
aaa
outsl
and
add
mov
adc
pop
in
adc
mov
stos
es
mov
dec
xchg
adc
aaa
push
ret
push
add
rolb
dec
add
addr16
loope
sub
mov
out
stos
cmp
cmp
sbb
push
mov
and
jb
mov
sub
adc
and
sub
xchg
jbe
sbb
mov
in
lcall
adc
scas
rcr
adcl
jne
jmp
mov
mov
xchg
in
jne
fistps
fildll
adc
popa
push
cld
insb
xor
xchg
push
sub
cltd
inc
fimull
int3
fimull
pop
popf
xor
aad
ss
xchg
pushf
js
mov
jmp
ffree
adc
add
outsb
les
adc
push
xchg
jb
clc
push
int
and
sub
lock
insl
enter
mov
sahf
mov
insl
mov
stos
aaa
lcall
mov
pop
cmp
sbb
les
sbb
jbe
out
test
inc
pushf
mov
arpl
cmp
aas
pop
ss
test
cmpsb
or
sbb
rcl
movsb
mov
int3
sbb
push
inc
and
cmp
xor
jl
nop
cmp
mov
fidivrs
inc
lock
cmp
mov
xor
jb
rclb
sub
mov
aaa
cmp
cwtl
cmp
xor
mov
aas
inc
popf
inc
and
xor
fnstcw
cmp
daa
aad
js
mov
jnp
pop
popf
fcomip
xor
fdiv
mov
test
mov
aaa
stc
mov
pop
fld
or
or
test
and
mov
jno
sbbb
mov
stos
or
sbbl
in
scas
jo
stc
inc
mov
rorb
sbb
incb
in
out
xchg
aas
mov
pushf
cmp
xchg
push
mov
cwtl
in
loope
and
and
or
dec
dec
push
dec
int
inc
cli
shlb
das
pop
idivl
scas
out
xor
mov
pop
sbb
ret
imul
jnp
dec
jp
pop
cmp
lret
nop
and
mov
std
push
lcall
jno
ret
insl
fbstp
push
add
movaps
cmp
addr16
dec
mov
adc
movd
fs
popa
sub
dec
add
rol
push
stos
ja
xchg
int3
push
cmp
leave
je
jg
push
add
jl
movsl
insb
insb
xor
mov
push
shlb
xor
loope
stos
cmp
pushf
mov
fnstsw
stos
ds
insl
imul
xchg
push
xor
call
sti
jae
sub
lods
adc
sbb
dec
and
punpckldq
xchg
and
cmp
jmp
lock
jl
movsl
add
imul
cmp
out
dec
cs
cmpb
jae
arpl
lods
push
dec
ljmp
adc
jae
sbb
pushf
and
divb
inc
nop
out
ss
cmpb
push
fnclex
add
dec
lcall
movsb
push
cmp
ror
mov
jge
ss
mov
aam
repnz
divl
js
outsl
sub
je
pop
imul
cwtl
dec
xlat
in
lcall
stos
add
aad
dec
fdivs
xorb
sub
and
xchg
cmp
xchg
rcl
mov
test
mov
mov
push
shl
icebp
cmpsl
inc
mov
cmp
paddd
outsb
add
jb
fs
mov
jns
and
cmp
mov
mov
jle
xchg
mov
fcmovnu
jmp
outsl
into
xorb
shlb
aaa
dec
cmc
add
sub
imul
outsb
fwait
push
jle
nop
cltd
sarl
inc
or
sbb
das
rclb
xchg
in
int3
rclb
add
or
into
insb
dec
fwait
sbb
sti
pusha
lea
mov
jnp
out
inc
dec
scas
mov
inc
xchg
sbbl
adc
stc
in
dec
in
cmp
xchg
push
test
jne
mov
mov
les
repnz
mov
and
sub
mov
xlat
push
ja
cmp
cmp
add
out
or
adc
mov
or
adc
jecxz
shlb
push
scas
mov
popf
std
dec
popa
loopne
xchg
adc
ja
insb
js
scas
xchg
rcl
fstpt
sub
iret
outsb
cli
pop
out
sbb
mov
fstpl
xor
mov
out
pop
and
push
imul
cmp
pop
inc
jns
xchg
je
cmp
cmp
push
insl
dec
dec
or
xchg
jg
and
sub
unpckhps
bound
ljmp
pop
pop
mov
add
sub
pop
das
pop
stc
imul
ds
iret
ss
test
loopne
out
sub
xor
fnstcw
into
lret
cmp
sti
or
inc
out
sub
dec
aaa
cmp
push
inc
movsb
sbb
inc
loop
arpl
mov
movsb
push
xchg
dec
pop
stos
ret
lret
jg
xchg
sarb
xchg
enter
sub
outsl
test
idivb
inc
rolb
mov
in
xchg
fdivrl
loopne
xchg
inc
sub
mov
adc
mov
or
pop
adc
jp
loop
and
cltd
or
test
loope
mov
pop
add
fst
aam
jnp
stc
xor
mov
inc
aad
add
mov
cmp
mov
repz
cwtl
mul
push
fdecstp
and
mov
lcall
insl
push
mov
in
jp
push
fimull
repnz
cmp
and
shlb
dec
xchg
pop
ret
jae
test
pop
jne
into
jae
mov
mov
ss
xchg
out
pop
pusha
jg
dec
dec
movb
enter
std
iret
js
stos
ja
es
and
xchg
or
push
sub
mov
insb
mov
stos
sub
or
lock
test
dec
sub
lcall
sti
dec
pop
into
xchg
pop
mov
push
cmp
sarb
popa
sub
jae
jge
xchg
mov
mov
loopne
cwtl
arpl
rcl
jle
jp
jae
out
jnp
mov
add
pop
or
arpl
and
shrb
ljmp
push
mov
jecxz
lock
push
popa
dec
add
xchg
xlat
push
sbb
ljmp
enter
lret
out
ret
ss
outsl
inc
imul
mov
lcall
mov
xor
xchg
and
cmp
in
adc
sub
cmp
aad
add
jo
and
pop
sbb
xor
shrl
outsl
mov
pop
and
and
fs
dec
lea
mov
dec
xor
movd
sbb
into
lds
xchg
imul
jg
loope
icebp
dec
mov
fs
test
pop
stc
in
dec
inc
cli
das
add
inc
or
popf
cmove
in
mov
pop
adc
shl
test
aas
lock
movsl
pop
and
jle
popfw
lds
xchg
es
push
and
jnp
mov
add
mov
and
xor
jns
les
sarb
pop
sti
push
sti
shlb
mov
adc
stos
or
mov
aam
xchg
in
xor
mov
cmpsl
std
in
mov
jg
and
jno
jecxz
mov
stos
lods
int3
cmp
xchg
mov
pop
imul
pop
inc
in
pop
imul
sbb
lods
rorl
push
add
in
rcr
cwtl
das
and
pop
lock
cmp
add
fidivl
loop
add
jle
aaa
mov
cs
insl
dec
shlb
push
mov
jp
xlat
sti
andb
cwtl
jno
push
dec
int
arpl
ss
leave
pop
dec
and
adc
jo
stos
in
sub
pop
dec
cwtl
je
aas
dec
push
sbb
mov
cmpsb
cwtl
inc
repz
outsb
push
data16
es
add
cmp
mov
pop
dec
dec
pushf
xor
cmp
cmpsl
mov
outsl
xchg
xor
lcall
and
add
movsb
mov
jge
das
and
enter
dec
and
xchg
push
mov
sbb
inc
leave
mov
jecxz
stos
cmp
or
push
sbb
xor
xlat
sub
test
mov
cmpsl
aas
repnz
cld
mov
jl
add
pop
orl
nop
and
repnz
std
popa
das
jmp
shrl
ljmp
imul
mov
xchg
and
popa
mov
in
inc
addr16
sarl
je
jmp
cmp
fnstenv
pushf
ja
add
fistps
cmp
push
push
xlat
mov
xchg
mov
leave
ret
push
pusha
loop
lahf
lods
sahf
popa
mov
xchg
jp
je
je
cmpsl
clc
pop
addr16
pop
fisubs
lcall
les
cmp
mov
cmp
lcall
adc
ja
imul
xor
sub
popa
inc
dec
sbb
dec
adc
inc
jl
roll
in
cmp
mov
xchg
bound
pop
testb
lods
pop
inc
bound
filds
mov
lock
jo
shll
sti
push
xchg
arpl
jbe
out
std
sti
orb
rorb
pop
xchg
and
dec
xchg
es
and
pop
mov
ljmp
mov
fidivrs
cmpb
lret
int3
pop
adcb
testb
adc
cwtl
aam
xchg
jl
jecxz
cmp
test
icebp
ja
mov
inc
les
push
sub
popf
das
mov
nop
lea
adc
push
push
sub
xor
icebp
adc
jns
testb
dec
sub
lea
and
std
push
lock
out
sahf
roll
aam
sarl
sbb
repz
adc
sar
add
sub
lret
adc
je
pop
push
lcall
js
je
in
jns
mov
test
xchg
mov
xor
xor
push
loop
sub
mov
xchg
or
neg
xchg
imul
pop
mov
mov
jmp
cmc
fcompl
cmpsl
sub
std
xchg
xlat
jb
je
dec
inc
ljmp
divl
sub
cli
pop
rcrl
data16
dec
adc
out
in
push
jae
ja
lea
repnz
ja
jg
outsb
fdivrs
or
pop
add
out
fdivs
jnp
sub
popa
mov
addb
xor
sti
shrb
dec
aas
sub
adc
icebp
xchg
aad
je
testl
int3
ja
andl
sub
mov
ja
or
mov
es
jecxz
adc
dec
into
push
cltd
test
add
popf
push
push
push
dec
xor
dec
aad
mov
testl
and
jle
inc
push
in
cltd
or
mov
sub
bound
mov
leave
mov
mov
iret
hlt
mov
sub
push
repz
mov
inc
lcall
jp
je
enter
mov
mov
mov
notl
cmp
or
dec
popa
mov
mov
inc
mov
jbe
jecxz
test
cmp
xchg
fs
and
rcrb
loopne
mov
out
lcall
jecxz
stos
popf
cmpl
xor
xlat
cmp
outsl
mov
fsubs
or
cwtl
xchg
call
nop
fiadds
jne
int3
pusha
and
pop
or
push
les
loop
sbb
adc
push
cmpsl
les
jns
fs
cld
notl
aaa
daa
inc
fnstsw
mov
ret
negb
sub
mov
mov
subl
add
or
pop
roll
pop
and
lock
pusha
insb
or
xor
xchg
xlat
xchg
cwtl
lret
insl
mov
or
lods
test
mov
pop
jne
call
mov
in
shll
shlb
jbe
daa
inc
sbb
insb
je
adc
and
inc
sbb
xchg
roll
and
or
dec
cmpsb
pop
xchg
cmp
inc
mov
mov
lods
and
mov
jecxz
hlt
pop
dec
fildll
jne
push
in
xchg
cld
sbb
sub
loop
rorb
sub
nop
add
push
push
dec
ljmp
out
cmp
bound
pop
push
cmpb
repnz
outsl
lret
jecxz
bound
lcall
push
icebp
or
lods
mov
stc
hlt
cld
sub
stc
outsb
js
pop
addb
das
pushl
and
dec
sbb
jmp
or
fcmovu
int3
fld
lock
rolb
xchg
outsl
loope
mov
mov
add
movsl
xchg
jmp
adc
inc
adc
mov
std
jno
iret
lret
cmp
cmpsl
push
jns
out
jb
cmpsb
jl
movsb
push
mov
and
hlt
sub
fbld
loop
mov
in
xchg
push
and
fs
std
push
icebp
clc
jae
mov
filds
cmp
jmp
dec
cmp
lcall
inc
mov
push
mov
jae
inc
test
andl
push
xchg
outsb
add
lods
push
ret
hlt
sbb
rcrb
sub
mov
inc
fldcw
adc
scas
icebp
fstpt
jp
ret
add
push
xorb
mov
icebp
or
fimull
mov
cmpb
sub
dec
sbb
popf
mov
lcall
dec
roll
sti
mov
out
icebp
jg
or
sahf
mov
dec
mov
and
sbb
or
ss
dec
mov
mov
pop
lcall
aam
and
adc
xchg
mov
lds
int
sub
rcrb
xchg
mov
out
ss
rorl
push
sub
movsl
in
jae
gs
movsl
lock
aaa
int3
sbb
add
rcl
sbb
mov
mov
cmp
lods
enter
dec
mov
xchg
call
mov
adc
movsl
imul
mov
hlt
or
xor
cwtl
call
mov
push
pop
jb
test
imul
add
sub
xchg
mov
ret
xchg
xor
mov
pop
cmpsl
data16
xchg
cmp
stc
mov
rcrl
and
and
mov
ljmp
cltd
aad
mov
pop
jecxz
scas
scas
pop
mov
or
cmc
mov
push
stc
xor
or
xchg
sbb
jmp
push
out
lcall
inc
jne
ret
test
push
push
mov
fisttpl
pop
ljmp
push
xchg
pop
fucomp
mov
pop
lcall
loopne
mov
sub
fidivrs
inc
mov
jne
mov
mov
cwtl
jmp
imul
call
cmp
xchg
lods
lods
or
fucomp
jb
jl
sbb
out
stos
out
lret
arpl
fwait
xor
mov
add
push
cmpl
jo
dec
stos
fstpl
call
push
aam
ja
cmpsb
testl
mov
and
mov
aad
dec
nop
in
ror
sti
and
pop
mov
and
enter
fs
cmpl
xchg
push
adcb
dec
jge
cmpsb
fldt
sbb
adc
and
sbb
mov
and
mov
mov
xor
gs
popf
test
imul
scas
outsb
mov
jecxz
inc
clc
clc
push
or
rcll
mov
mov
cmp
out
adc
mov
pushl
xchg
mov
je
inc
pop
mov
dec
and
fadd
sbb
or
mov
ljmp
leave
pop
je
jb
cwtl
lret
mov
sub
jnp
mov
repz
sbb
aam
fcoms
or
xor
dec
pop
cmp
scas
divl
jne
mov
adcl
repz
fcompl
sti
arpl
pop
xchg
jno
xor
xor
ret
mov
pop
pop
and
mov
lret
or
enter
cmc
add
cld
lock
xor
and
int
int
xor
or
popa
idiv
xlat
cmpsl
test
push
inc
cmp
mov
inc
je
and
stos
jo
push
popa
xchg
dec
push
subb
shl
fs
and
or
cmp
cs
dec
push
imul
push
push
popa
scas
std
in
pop
ss
or
call
xchg
jno
mov
jns
push
dec
mov
fnstenv
ljmp
lahf
lahf
dec
xchg
sub
std
cmc
mov
jno
out
and
ret
inc
mov
push
aas
enter
cmp
adcl
movsb
push
adc
and
cmp
pop
xorl
pop
mov
rcll
out
or
lods
pop
arpl
stc
sub
stc
inc
into
xor
out
dec
sbb
mov
inc
add
inc
jge
mov
out
inc
jae
imul
js
rcll
pop
push
xor
rolb
insl
inc
adc
or
mov
dec
idiv
aas
jbe
pop
add
out
mov
test
add
inc
xor
jo
daa
je
mov
and
mov
xor
mov
es
rcrb
sub
jp
sbb
push
out
loope
test
cmpsl
int
sub
outsl
loopne
push
ss
pop
sub
lock
pop
inc
out
into
xlat
push
ud1
pop
jb
sub
xchg
mov
jl
lock
iret
inc
loopne
jecxz
ja
mov
add
outsb
inc
lods
cwtl
and
icebp
pop
daa
loopne
pop
popa
jmp
dec
int3
aas
cmp
stos
pop
or
rolb
xchg
insl
shll
inc
push
jl
insl
xor
fidivs
sbb
xor
lret
inc
lahf
adc
lea
fistpl
fnsave
ljmp
lahf
out
negl
or
add
cmp
hlt
push
les
incb
adc
xor
lret
std
pop
scas
out
pop
sahf
mov
in
inc
and
jecxz
lea
cmc
pop
adc
mov
fdiv
lods
jbe
popa
push
and
hlt
in
sbb
fiadds
dec
xlat
repz
xchg
mov
pop
and
mov
stos
inc
xor
push
std
insl
inc
arpl
adc
adc
gs
mov
cmpsl
sub
cmpsl
shll
jl
ret
into
jnp
das
cmp
xchg
add
xchg
sbb
xor
aas
add
mov
inc
mov
mov
or
mov
fstl
dec
rorl
cmpb
cmp
test
dec
data16
rep
arpl
out
or
pop
xlat
movsb
mov
dec
sbb
scas
cmp
mov
inc
xor
ljmp
icebp
sbb
jb
jae
inc
out
fsubrs
insb
js
shlb
xchg
xchg
cmp
or
xchg
xchg
add
adc
insl
mov
mov
xor
cli
or
cmp
rclb
and
pop
rcl
sub
push
rclb
fwait
popa
inc
add
movsl
or
outsl
pop
lds
or
popf
lock
or
mov
int
mov
gs
cld
mov
mov
xor
adcb
pushf
aas
cmpl
addr16
lods
mov
ja
sti
imul
les
fwait
popa
xor
mov
in
mov
xchg
mov
fldenv
mov
cltd
outsb
cs
mov
jmp
orb
add
ja
cmp
dec
sbb
sub
outsl
es
jno
inc
out
add
jg
popf
fwait
fwait
jae
leave
add
popf
mov
in
add
int
mov
inc
push
xchg
jbe
aam
movsb
lock
scas
test
insl
pop
jb
dec
lcall
fildll
dec
jmp
pop
xor
ljmp
int
inc
imul
ja
test
rcl
iret
outsb
and
sti
fwait
pop
xor
xchg
xchg
sbb
pop
js
and
mov
icebp
sar
mov
dec
push
jb
daa
shl
and
jp
iret
out
cmp
sub
movsl
sub
jecxz
pop
rclb
std
mov
xchg
test
jae
mov
sbb
nop
sarb
jbe
cmp
je
jo
xchg
das
adc
scas
lea
pop
mov
sub
iret
scas
add
mov
pop
push
jae
hlt
push
aam
inc
sbb
ret
andl
ss
cmp
mov
sub
dec
sub
jno
mov
cmp
jno
mov
sub
mov
sub
xchg
adcb
pop
mov
lea
out
call
push
arpl
hlt
mov
xchg
cs
xor
in
pop
mov
push
mov
js
test
cld
je
mov
and
lret
into
decb
cmpsb
dec
jge
mov
sub
adc
fbstp
ljmp
repnz
cmpsb
repz
adc
movsl
ljmp
mov
imul
stos
mov
pop
pop
mov
cltd
jnp
xchg
jns
cmp
sub
out
ret
out
popf
insb
inc
mov
pushf
cmp
cmpsl
pushf
dec
jle
aad
push
sbb
orl
xor
stos
push
adc
out
cmpsb
cmc
jmp
dec
lods
decl
jmp
adc
pop
lret
mov
lock
fdivr
lods
push
lods
lret
std
lcall
scas
push
jae
pop
shll
inc
scas
ret
or
dec
out
test
mov
inc
sbb
mov
out
stos
lds
push
add
xor
lcall
push
push
adc
adc
int3
push
xchg
mov
mov
add
imul
push
adcl
or
addb
loop
jb
hlt
in
jp
adc
call
mov
ret
mov
mov
cmp
pop
fbld
push
push
jecxz
add
or
aas
movsl
gs
icebp
test
stc
sbb
loope
push
lods
push
or
pushf
sub
xchg
xor
pop
or
inc
cmp
in
loop
adc
dec
jcxz
repnz
and
ficoms
xor
andb
lock
xor
mov
xchg
je
pop
fsubs
and
andl
dec
push
sarb
dec
cmc
mov
dec
jmp
xor
rorb
das
test
mov
and
fists
fdivrs
mov
push
or
fdivl
outsb
addr16
cmp
mov
or
mov
ret
test
or
lods
out
mov
push
cmp
mov
ret
pop
into
mov
and
imul
push
aas
stos
adc
mov
mov
not
adc
jecxz
lods
mov
ds
or
sub
adc
fidivs
dec
leave
or
xchg
scas
les
jp
sub
test
push
int
pop
mov
jnp
adc
das
push
ret
mov
stos
popf
stos
insl
cs
arpl
idivl
cwtl
pop
lret
push
adc
mov
jnp
imulb
stc
sbb
in
out
push
or
or
repz
sub
push
inc
iret
jl
mov
xor
dec
es
out
negb
sbb
pop
mov
xor
stos
pop
xchg
int3
repnz
mov
es
dec
mov
cmp
xchg
push
popa
cmpsb
pusha
bound
call
add
insl
fstpt
mov
sub
loop
int3
inc
push
or
push
ljmp
jl
sub
sarl
mov
imul
fdivl
loopne
mov
fbld
dec
repnz
fimull
ficoml
test
pop
int
pop
sub
cwtl
jno
test
outsl
neg
mov
insb
aaa
jb
sahf
nop
pop
cmc
mov
mov
adc
popa
fcomip
fs
stc
incb
mov
mov
dec
movsl
ret
shrb
int
adc
mov
mov
mov
aam
xchg
gs
hlt
push
insb
or
push
hlt
dec
movsb
scas
add
movsb
repnz
lods
std
jg
jnp
pop
icebp
push
pop
into
xor
pop
ljmp
out
sbb
iret
stos
popa
mov
sbb
or
jnp
stos
cmp
pop
test
loope
stos
adc
mov
mov
in
mov
inc
push
fisttpl
test
jns
hlt
cwtl
dec
loope
dec
jno
jnp
divb
xchg
nop
in
mov
stos
cli
mov
cltd
rcll
arpl
fcmovu
cwtl
xlat
das
add
mov
cmp
loopne
adc
pop
adc
cmp
aam
sub
test
xor
iret
fnsave
cwtl
push
rorb
and
xorl
sti
and
mov
dec
mov
fs
push
data16
sbb
xchg
mov
mov
les
test
jae
mov
jnp
jp
cli
out
test
test
bound
mov
push
xchg
pop
scas
sub
fs
rcrl
nop
icebp
mov
test
ss
add
cltd
xor
out
pop
cmp
inc
fcomp
xorb
pop
sbb
sub
std
int
movsl
rcrl
mov
xchg
sub
cmp
insb
jg
mov
mov
out
inc
mov
sub
push
jnp
dec
leave
push
or
cmp
decl
adc
xor
jnp
sarb
xchg
mov
pop
rol
fdivr
lock
out
sbb
int
and
add
adc
icebp
sub
rolb
std
xchg
lds
inc
insl
inc
mov
xchg
sahf
mov
js
xorb
stc
adc
test
in
xchg
dec
rcrl
out
cmpsb
sbb
in
aad
mov
adc
scas
std
rolb
pop
out
and
and
sti
or
or
jns
ja
cmp
pop
cmp
subl
pop
lahf
stos
jp
cs
add
sub
pop
cmp
outsb
int3
mov
mov
add
fmulp
inc
ret
call
stos
js
cli
push
fwait
jmp
or
ja
cmp
pusha
push
mov
jp
jne
pop
mov
outsl
mov
je
lds
sub
rcl
hlt
pushf
mov
sti
xor
fs
jl
sbb
in
or
negb
adc
loope
push
cmpsl
lods
and
adc
lods
mov
jne
push
loopne
movsb
push
pop
mov
and
sub
mov
or
lods
adc
pop
shll
jns
xor
int3
int3
cmpl
daa
cmp
dec
rolb
aam
cs
sbb
out
cwtl
push
xor
or
and
lods
data16
and
sbb
xlat
dec
jge
lret
adc
jge
mov
push
mov
rcrl
in
out
cltd
xchg
jg
push
and
xchg
push
test
sbb
xor
push
cmp
test
fisttpl
mov
sub
idivl
jle
sbb
orb
rep
sbb
lock
pop
cmp
and
ret
or
inc
ret
inc
pop
pop
push
divb
jp
jb
js
inc
xchg
rolb
lock
sbb
frstor
sahf
mov
mov
inc
lea
cltd
mov
call
outsl
repnz
test
dec
loop
fadd
iret
push
add
xchg
leave
add
out
sar
lds
and
pop
sbb
fdivl
stos
loop
sub
scas
xchg
push
or
mov
int
and
or
in
adc
shrb
or
test
fistps
push
scas
lods
or
dec
lret
ja
push
mov
data16
mov
pop
sbb
stc
mov
outsb
mov
cmc
xchg
xlat
jg
mov
mov
mov
sub
scas
call
mov
pop
in
rcll
jno
lds
lds
gs
mov
enter
lcall
jecxz
cmp
in
and
xchg
pop
mov
mov
ds
add
into
nop
xor
mov
repz
or
fcomi
jbe
pop
adc
push
decl
jo
loop
addr16
test
jbe
pop
xchg
movsb
add
test
add
cmp
push
mov
out
or
into
push
pop
in
gs
lock
ljmp
add
popl
outsl
jge
daa
test
inc
cli
in
jbe
xchg
and
push
cmpsb
xor
mov
xchg
jp
movsb
xchg
ret
mov
clc
cli
adc
pop
push
pop
es
cmpsl
pushf
adc
inc
enter
xchg
jae
mov
fcmovnb
cmpsl
dec
lds
and
loop
sbb
pop
imul
mov
loop
lods
pop
inc
loopne
push
push
clc
mov
dec
daa
mov
sub
pop
sbb
dec
iret
sarb
out
and
inc
pop
xchg
sbb
or
inc
mov
pop
mov
jecxz
mov
dec
push
loop
xchg
inc
mov
mov
out
nop
xchg
mov
jmp
es
andl
jo
adc
ljmp
and
jae
shrl
cmpsl
cmp
fiadds
nop
jle
in
loope
insb
lods
lret
sub
inc
push
inc
dec
cmc
leave
mov
xchg
je
in
jne
xchg
pop
pop
lcall
cmp
pop
cmp
adc
sub
mov
add
cmp
mov
adc
test
mov
jno
dec
cmp
xchg
push
out
and
into
and
in
fistps
test
lcall
and
aas
inc
pop
push
push
imull
sub
pop
js
scas
shl
daa
lcall
sbb
jnp
adc
pusha
fs
dec
adc
mov
push
add
xlat
xlat
sarl
adc
pop
cmp
adc
in
mov
test
stos
jb
call
daa
jge
or
dec
push
add
subb
mov
in
xor
xor
push
lods
jb
push
xlat
and
lea
addr16
add
js
mov
inc
divl
fistpll
test
addr16
xlat
cmc
ret
dec
lods
test
sub
xchg
mov
lret
outsl
adc
mov
mov
or
sbb
xchg
stc
pop
mov
xchg
jl
push
loop
mov
jns
or
int3
movsb
cmpsb
shrb
lret
jns
ret
pop
int
fsubl
lods
xor
jnp
push
or
faddl
or
cmpsb
nop
jno
movsb
cmp
cld
dec
xor
push
decb
adc
addr16
js
loop
cmpsb
stos
push
fs
adc
pop
repnz
test
ret
out
pusha
adc
icebp
push
mov
clc
adc
cli
loop
loopne
mov
je
dec
int3
aaa
dec
fs
xor
jb
xchg
or
lock
lret
mov
js
dec
xor
test
mov
add
push
pop
mov
sub
sub
mov
pop
xor
xlat
iret
or
pop
sub
jns
lcall
push
sarl
mov
push
ljmp
loop
xchg
subb
push
or
sub
clc
or
cmpsl
adc
push
or
pop
push
or
stc
and
pop
sub
inc
testl
add
call
dec
addr16
or
notl
push
jns
cwtd
mov
test
push
mov
adc
repnz
sbb
xchg
jae
into
nop
rcr
loopne
loopne
dec
pop
dec
ljmp
cmp
shlb
or
ds
js
sub
int3
mov
mulb
repz
fs
mov
pop
lods
xchg
lods
dec
gs
xor
push
mov
in
ja
mov
inc
push
push
hlt
ja
stc
cltd
cmovle
mov
cwtl
repnz
push
xchg
movsl
inc
pusha
sub
add
lock
push
ret
jp
adc
xor
dec
shl
je
imul
mov
xchg
xchg
pop
pushl
imul
jp
adc
outsb
insb
inc
fs
inc
and
pop
inc
mov
les
insb
out
adc
and
ljmp
sahf
insb
jge
lahf
push
mov
or
sbb
arpl
xor
push
cmp
loopne
inc
pusha
inc
sub
mov
push
sahf
inc
and
cld
jg
enter
es
xchg
mov
xlat
scas
xchg
leave
sar
mulb
inc
mov
insb
xor
je
mov
mov
mov
push
movsb
orl
mov
fdivr
mov
dec
or
addr16
aaa
arpl
mov
cmp
out
movsb
push
movsb
pusha
or
out
ss
xchg
mulb
inc
hlt
cltd
aam
inc
xor
xor
out
iret
sbb
popf
or
ret
repnz
push
jge
test
mov
mov
out
mov
fldcw
ret
mov
add
pop
and
fcmovnb
mov
xchg
lods
ljmp
outsb
cmp
dec
mov
icebp
dec
xchg
lods
mov
or
lods
push
stos
adc
inc
mov
adc
bndstx
mov
jnp
push
rcrl
nop
arpl
jecxz
shrl
lock
xchg
repnz
mull
sbb
out
shrb
jle
pop
jl
xor
lock
mov
add
sbb
iret
cwtl
cltd
sbb
rcrb
aaa
jmp
dec
stos
outsl
push
jmp
mov
push
adc
adc
stos
mov
push
lret
jge
es
xchg
mov
ljmp
mov
pop
ficompl
ljmp
ret
jnp
shlb
mov
jne
xor
loopne
mov
cmp
sub
sub
pop
out
adc
cmp
mov
cmp
jp
adc
mov
mov
scas
pop
outsb
jmp
into
adc
in
lret
add
icebp
mov
ror
push
xchg
xchg
fwait
cmp
fs
mov
sbb
lods
scas
mov
rclb
fbstp
pushf
repz
rorb
sbb
repnz
sbb
movsb
or
aam
pop
stos
cmpsb
sbb
or
sub
in
scas
sub
es
imul
or
insl
pop
lods
pop
ret
imul
rcll
data16
dec
daa
cmpsb
fstl
mov
pop
daa
bound
jb
outsb
test
enter
push
icebp
test
mov
aad
scas
cmp
sub
nop
adc
filds
loope
aad
mov
push
push
fs
in
ss
or
sbb
fdivs
addr16
jmp
lods
sbb
sub
pop
fcomps
aad
jns
jne
loopne
mov
xor
add
pop
ds
pop
pusha
mov
mov
or
cwtl
fwait
cmpsb
jne
aaa
jmp
or
sub
mov
jp
xor
xor
jecxz
push
cmpsl
pop
add
xor
or
in
stos
outsb
lcall
add
sub
jge
setae
adc
mov
fwait
xchg
inc
xor
cmpsb
add
xchg
sbb
call
icebp
rol
mov
pushf
fwait
mov
stos
mov
cmp
je
mov
push
xor
mull
inc
andl
dec
out
fcmovb
push
jp
dec
xchg
or
aad
cmpsb
fwait
sbb
pop
adc
out
mov
pop
push
sbb
pop
mov
push
in
out
test
xchg
pop
dec
add
mov
dec
sub
inc
mov
jne
adc
cmp
mov
cmp
ror
and
int3
lahf
push
adc
jp
mov
jne
mov
push
pop
adc
pop
aam
ja
mov
dec
sub
aaa
dec
inc
cmp
lods
mov
sahf
lea
sbb
ret
daa
out
sar
mov
out
mov
ja
jle
and
mov
out
adcl
mov
xchg
in
cmpsb
enter
inc
pushf
frstor
jmp
sub
xchg
adc
dec
mov
jp
pop
bswap
pshufw
xlat
mov
xorb
xlat
fmull
rcrl
add
xchg
clc
mov
adc
mov
in
popf
or
fsubrl
loopne
sub
int
sub
cmp
mov
ljmp
cltd
mov
xor
repz
mov
push
vcvttsd2si
movsl
xchg
push
ja
sbb
movsb
xchg
jmp
fldl
inc
dec
jae
xor
cmp
mov
mov
fwait
cmp
and
stc
scas
and
ret
aad
fstpl
subb
mov
dec
rcrl
sub
dec
lret
sub
orl
cmp
fs
lret
nop
xor
jns
das
jno
loope
cltd
ret
mov
xchg
test
mov
pop
lock
addr16
scas
lds
add
xchg
pop
xor
pushf
jl
add
pop
mov
and
push
fwait
cmpsl
jg
stos
inc
mov
mov
test
jo
push
stc
cmp
pop
out
cmp
jmp
loop
mov
int3
inc
ljmp
mov
sub
add
fdivrs
push
out
int
push
addr16
icebp
pop
push
jns
adc
xchg
mov
push
cmp
and
or
int3
lahf
pop
out
test
add
xchg
xchg
cmc
mov
pop
icebp
in
xchg
push
inc
mov
ljmp
sahf
sbb
daa
hlt
subb
dec
adcl
andb
jle
clc
enter
push
cmc
pop
xor
js
cmp
sbb
test
hlt
pop
insb
mov
push
sbb
lods
xchg
sbb
cmpsl
subl
fists
movsl
push
push
push
sti
or
and
test
nop
shll
in
add
jmp
lods
or
mov
aad
sub
fcomps
lods
lods
pop
jle
out
cmpsb
inc
pop
sahf
insl
push
push
mov
popf
add
fstps
dec
lret
pushw
xor
pop
jmp
and
pop
stc
addr16
sub
sbb
inc
sbb
jecxz
mov
mov
imul
pop
fisubrs
divl
and
sub
out
gs
fcomip
lret
fcompl
jmp
fldt
into
sbb
test
iret
mov
testl
xor
les
ljmp
outsl
mov
xchg
mov
nop
shrb
stos
dec
and
mov
filds
scas
int
xchg
dec
sbb
jb
sbb
adc
push
lods
js
mov
mov
add
ret
mov
inc
and
sbb
in
mov
mov
fistl
push
xorb
jno
mov
hlt
call
and
mov
lods
fsubs
cmpps
imul
sbb
shll
fdivrp
mov
dec
ja
loopne
cwtl
dec
xchg
int3
outsl
inc
or
mov
mov
jae
push
cmp
roll
add
roll
xchg
pop
or
cmp
add
adc
pop
fdivrl
fisubs
mov
adc
cmpsl
push
or
stos
pusha
push
fldl
int
or
xchg
cmc
es
push
imul
mov
ja
test
jp
xchg
mov
arpl
sub
mov
cmc
ret
inc
push
sub
push
xchg
mov
addb
insb
push
pop
xor
and
mov
es
jbe
pop
sub
stos
add
lods
push
mov
add
adc
pop
mov
pop
ss
into
lret
lock
or
mov
dec
and
inc
xor
ljmp
das
xchg
mov
cmp
dec
ds
scas
adc
jl
int3
mov
test
cmp
or
jg
dec
push
push
loop
in
pop
imul
sbb
lods
ds
jp
les
and
jecxz
lret
scas
std
into
sub
scas
neg
fsubrs
jno
xor
push
das
xor
and
std
movsl
xchg
bound
scas
mov
add
lcall
int
jecxz
adcb
sti
cmp
insb
out
pop
sahf
mov
test
xor
mov
or
test
mov
mov
aad
pop
test
ret
pop
test
and
push
dec
scas
or
jnp
stos
popf
sbb
add
pop
and
sbb
lret
xchg
repnz
adc
idiv
arpl
pop
mov
push
push
sarb
adc
mov
add
ret
push
int3
lcall
sbb
mov
push
jbe
inc
repnz
sub
lcall
xchg
les
sbbb
dec
orb
inc
in
lahf
test
dec
jb
jno
mov
sub
stc
fldt
js
sti
mov
movsb
push
xorl
sub
fldcw
xchg
cmp
and
imul
pop
cmp
scas
test
shr
jno
mov
test
dec
rclb
inc
pop
cmp
hlt
xchg
adcb
cmpl
arpl
aas
sub
mov
mov
shrb
mov
xor
jns
mov
test
mov
mov
mov
mov
push
jae
pop
adc
repz
xor
lock
sbb
loop
jl
adc
rorb
mov
ror
adc
bound
test
daa
fwait
sahf
pop
daa
cmc
in
sbbb
jnp
inc
cmpsl
pop
add
dec
or
scas
dec
or
xor
pop
push
das
out
mov
out
cmp
sub
pop
cs
xor
outsb
inc
push
dec
cs
and
xchg
pop
jns
dec
xchg
aaa
fidivl
jg
mov
cmpsl
inc
jb
jmp
in
in
pop
add
or
jae,pt
in
adc
cmpsb
push
stos
outsb
dec
cwtl
mov
or
insl
jg
push
sub
dec
inc
or
push
adc
xchg
pop
in
inc
fwait
inc
xchg
into
rcll
or
aaa
mov
jmp
imul
sbb
cmpb
push
xchg
xor
jnp
and
les
shrb
out
and
pop
sub
xorl
imul
adc
addl
add
mov
addr16
test
adc
pushf
mov
fistps
icebp
icebp
or
or
jno
mov
jne
sub
pop
dec
xchg
jne
push
mov
cmp
ret
int3
and
xchg
mov
sbb
xor
add
mov
push
inc
cmp
sbb
mov
movsl
mov
inc
imul
dec
sub
arpl
mov
or
icebp
pop
arpl
xchg
scas
push
mov
into
ret
aaa
test
jae
test
cmp
aas
mov
rol
sbb
mov
ret
jo
adc
push
push
sbb
inc
leave
sahf
js
mov
fiadds
and
outsb
push
fldenv
xorl
mov
adc
rcrb
cmp
mov
mov
inc
sub
and
mov
lock
mov
or
in
int3
jo
push
mov
mov
mov
xlat
mov
push
gs
lret
in
sti
outsb
lods
pop
adc
xorl
mov
and
int
pop
or
ret
test
xchg
mov
lods
mov
dec
test
outsl
call
mov
jge
xchg
dec
sbb
ljmp
mov
rolb
je
or
sub
jbe
fstpt
jmp
or
imul
dec
or
push
pop
rol
mov
insb
mov
mov
lret
sti
stos
aaa
daa
arpl
into
and
jp
dec
or
stc
cmp
push
xchg
mov
std
lods
cmpsb
ss
mov
or
mov
jno
mov
mov
jle
lods
sub
mov
xchg
mov
push
sub
add
dec
out
pop
mov
jb
adc
into
inc
sub
xchg
or
aaa
xchg
inc
sbb
roll
inc
outsb
dec
mov
cmpsb
ficoms
jbe
and
jg
pop
mov
scas
xor
inc
cmp
jns
fsubrs
mov
xor
pop
or
std
out
std
jnp
in
pop
cmp
mov
mov
mov
xchg
loop
fdivr
or
add
xchg
jle
shl
xor
pop
cmp
lods
sar
shll
dec
mov
or
inc
mov
dec
loop
inc
in
mov
pushf
mov
jp
lods
test
add
dec
mov
out
aas
mov
stos
pop
cmpsl
test
inc
movsl
lahf
mov
cli
push
mov
sti
fld
and
out
or
cltd
mov
push
cmp
push
mov
and
xchg
xchg
inc
jl
stc
rcrb
out
xor
cmpsl
sbb
add
jg
movsl
xor
or
adcb
pop
loopne
loop
adc
cwtl
adc
pop
and
inc
cmp
and
xorb
jns
in
or
inc
adc
das
xor
dec
cwtl
cmp
dec
push
add
lret
in
cmp
jno
repz
mov
in
xchg
xchg
or
das
rorb
lret
push
cmp
lret
and
jae
jecxz
mov
cmc
cmc
xchg
lret
mov
jl
flds
or
push
pop
pop
jae
in
sbb
sbb
and
pop
pop
lret
lcall
shrb
or
push
mov
fsincos
ret
lods
mov
cwtl
stos
aad
cmc
pop
xor
and
jl
sub
mov
daa
sub
out
dec
fdivrl
or
inc
add
roll
daa
lods
test
jb
xor
int3
sub
pushf
cltd
jg
xchg
cld
xchg
pop
sub
lods
inc
arpl
ss
sbb
lock
in
mov
mov
push
sub
cmp
movsl
dec
ror
push
jge
fwait
cmpsl
sub
pushl
push
fld
insb
addr16
inc
inc
jp
and
ret
push
clc
jg
mov
dec
in
sub
xor
test
dec
inc
sbb
test
je
mov
and
mov
stos
into
inc
pusha
pusha
mov
test
test
pusha
stos
mov
mov
xchg
inc
jecxz
lret
out
cltd
xor
push
fdivs
dec
pop
das
mov
dec
loop
pop
enter
cli
pop
aaa
movsl
sbb
cwtl
dec
scas
jae
add
addr16
idiv
adc
rorl
mov
repz
pop
out
inc
or
mov
mov
mov
pop
dec
out
lods
lods
addr16
cmp
fsubrs
sbb
jp
aam
pop
jae
clc
add
jle
dec
jge
mov
lods
outsl
decb
iret
lock
jnp
ss
add
adc
cmp
das
popa
adc
sub
pusha
mov
mov
subl
inc
pop
je
xor
fbld
lret
addb
daa
mov
ret
cli
les
cwtl
lea
push
iret
or
shrl
scas
fcmovnu
rorl
pushl
das
repnz
lret
add
ds
rclb
int3
lcall
loope
inc
outsl
pop
xchg
out
sbb
and
arpl
dec
push
mov
adc
jne
rclb
cmp
jbe
pop
xor
pop
pop
cltd
ja
loopne
data16
in
adc
jmp
rsqrtps
ret
cmp
popf
xor
cs
scas
scas
gs
jbe
mov
fdivrl
lret
xchg
dec
notb
cmpsb
adc
scas
and
std
xchg
loopne
cmc
pop
mov
imul
xlat
jne
mov
sub
jle
jns
push
lahf
push
cltd
add
mov
add
adc
popf
leave
shlb
inc
test
inc
ds
ret
mov
add
mov
std
inc
push
mov
mov
iret
or
imul
xor
sub
dec
outsb
push
mov
cmp
push
mov
fldl
xor
push
xor
in
push
popa
test
inc
push
ret
fucom
stos
jmp
and
inc
xlat
sahf
mov
shll
popf
int3
enter
ret
out
xor
inc
cld
je
add
or
loop
es
cwtl
scas
xor
push
dec
jo
mov
cmp
xchg
sbb
sbb
inc
ss
lea
sbb
jo
push
jno
push
outsl
stos
rorb
insb
js
cmpsl
push
xchg
mov
pop
push
in
aad
xlat
fwait
or
insl
jne
sbb
repnz
inc
lcall
insb
cmp
lds
jle
jo
test
mov
xor
and
sub
jmp
dec
in
xlat
idivb
mov
push
inc
jge
sub
pop
popa
pop
iret
inc
lret
mov
jecxz
mov
sbb
mov
push
jle
sti
fimull
adcl
mov
mov
mov
mov
aam
int
insl
adc
notb
cli
clc
outsl
aad
hlt
lret
shlb
orl
call
test
or
lcall
or
mov
repnz
imul
fs
cltd
push
jne
std
xchg
sti
out
or
cmpl
scas
movsb
aas
cmpsb
pop
addr16
and
sbb
jo
pop
ljmp
mov
mov
xchg
cmp
mov
or
adc
push
push
fbld
cli
movsb
jae
xor
mull
mov
sbb
pop
or
rcll
jbe
and
or
mov
cld
mov
inc
int3
jo
roll
mov
in
dec
cwtl
arpl
mov
repnz
mov
push
les
outsl
mov
sbb
rol
xchg
call
dec
lods
dec
xchg
sub
jle
add
fsubrl
xchg
pushf
mov
out
cli
adc
jno
xor
addps
divb
mov
push
data16
dec
pushf
dec
imul
and
repz
jns
fistpll
mov
cmp
and
lahf
mov
fnstsw
mov
jecxz
sti
ljmp
fs
fnstsw
cmp
imul
or
and
add
out
push
add
mov
imul
rorl
push
rcll
insl
push
sub
adc
cmp
xchg
push
mov
cmp
movsb
pop
push
adc
data16
inc
fwait
out
xlat
mov
mov
imulb
jbe
out
iret
mov
popl
cld
test
xchg
neg
dec
fmuls
mov
scas
mov
sub
out
rcrb
adc
cmp
aas
pop
movlhps
sbb
incb
cld
je
popa
in
daa
aaa
das
stc
xor
inc
test
jae
mov
or
out
lods
inc
adc
cmp
mov
and
stos
sub
cmp
fidivs
daa
add
ds
lds
sub
hlt
enter
repz
rclb
add
stos
adc
mov
jp
pop
in
pop
fs
es
xchg
pop
or
sub
or
gs
mov
mov
push
pop
imul
mov
mov
inc
fsqrt
cmp
jge
inc
lods
push
xor
outsb
std
loope
gs
iret
outsl
jecxz
outsb
xor
repz
mov
cmp
pop
cmpsl
mov
xchg
shlb
sub
in
sub
leave
sti
iret
add
pop
inc
xchg
mov
mov
xchg
xor
mov
sbb
stc
or
addr16
mov
enter
test
push
imul
jl
cltd
jmp
ja
mov
not
shrb
fnstenv
push
sub
jns
bound
clc
mov
adc
test
add
adc
cltd
or
sub
cmpsb
test
add
inc
mov
ljmp
push
jnp
xlat
lea
sub
cmc
pop
pop
fmuls
pop
xchg
pop
and
jmp
out
les
or
test
lahf
sub
mov
mov
xorb
popa
test
insb
mov
push
insb
loopne
cmp
sbb
sub
aas
ret
movsl
aam
arpl
orl
push
xlat
push
out
dec
adc
adc
or
dec
cmp
or
sbb
fmuls
inc
mov
inc
dec
out
ret
push
adc
test
jbe
xlat
pop
add
cwtl
push
addr16
dec
cmpsl
pop
mov
dec
xchg
pop
rclb
mov
push
arpl
sub
jmp
nop
je
lea
add
add
int3
fiadds
imul
call
and
or
sbb
jge
sbb
sti
test
add
std
xchg
push
lret
or
and
cmpsb
adc
pop
out
inc
fists
add
enter
popa
pop
dec
imul
ret
movsb
sarb
inc
xor
add
push
mov
in
scas
jno
sti
mov
pop
jp
inc
cmp
out
mov
pushl
mov
fwait
cmp
outsl
add
push
cmpsb
das
in
in
or
fwait
add
jecxz
mov
push
popf
fcomip
or
shrb
mov
imul
aad
bound
std
cmp
enter
cltd
mov
leave
js
and
leave
ret
jne
das
dec
js
dec
mulb
jbe
fnstenv
aaa
ret
push
jbe
xchg
cmp
xor
das
fisttps
and
lods
jo
or
mov
add
xor
inc
ret
jecxz
movsl
pop
into
dec
mov
push
push
jp
clc
xor
subl
call
mov
nop
stos
pop
mov
dec
out
xorb
jae
sbb
loop
lock
push
mov
xor
push
push
gs
and
sti
mov
pusha
aas
out
divl
xlat
jg
xlat
sub
pop
push
mov
or
xchg
loop
cmc
aas
test
int3
andl
lea
mov
inc
pushl
loope
loop
push
or
push
push
sti
mov
cwtl
test
inc
addr16
scas
cmp
cwtl
movsl
inc
push
or
lcall
js
dec
inc
push
and
pop
cmpsb
std
push
dec
mov
loope
inc
loop
xor
arpl
jle
and
cmp
sbb
mov
inc
into
mov
pop
mov
lock
sub
data16
xchg
lcall
cmp
add
jmp
movb
sysret
or
sbb
add
sub
cmp
fisubrl
cmp
rcrl
add
add
sub
mov
xchg
cmp
and
pop
and
pop
std
xchg
and
cmpsl
cwtl
push
inc
fldln2
jp
jo
cmp
xor
int
lea
sahf
jle
negb
and
in
outsl
imul
and
jb
cmp
push
lods
popf
cmp
xor
mov
xor
lea
movzwl
xor
mov
pop
inc
jge
xchg
adc
inc
ret
repz
dec
push
sbbl
xor
mov
push
mov
sbb
mov
or
fcmovb
mov
mov
sbb
cmp
push
mul
popf
daa
dec
das
jne
cmp
and
iret
xor
loopnew
mov
into
pushf
inc
xor
cmp
xchg
scas
daa
loopne
jno
out
push
test
mov
sbb
rcll
mov
xor
cmc
mov
in
mov
iret
fs
jns
mov
mov
mov
into
mov
jae
add
hlt
ljmp
ja
mov
push
stos
stc
mov
stc
xchg
cmp
cmp
mov
outsl
sti
mov
xchg
cmp
lcall
push
sub
jo
adc
sub
jb
out
rcl
pop
push
divb
rep
mov
and
es
cmpsl
pop
imul
xchg
push
push
pop
int3
push
mov
mov
lock
jo
lret
sbb
mov
mov
jp
aaa
lcall
loop
push
and
fmulp
or
out
xchg
popa
mov
mov
test
cltd
sbb
xchg
imul
insl
lods
leave
in
mov
and
fld1
mov
movsb
dec
adc
imul
mov
cmpsl
pop
pop
adc
xor
out
or
jb
cmp
dec
adc
ja
dec
push
sbb
shlb
fiaddl
mov
dec
int
sub
push
mov
push
mul
or
mov
je
out
sub
out
imul
pop
ss
and
out
adc
notb
sahf
mov
jnp
fidivl
pop
aaa
and
outsb
pop
int
incb
repz
cmp
adc
add
push
push
jmp
cli
dec
mov
mov
jo
ret
inc
sub
push
inc
cmp
inc
sbb
jae
push
mov
ds
xchg
push
ljmp
sbb
push
test
imulb
jb
mov
pop
mov
cmc
xlat
scas
fmuls
fidivrs
xor
xchg
fidivrs
aad
xlat
pop
loopne
dec
push
jmp
cli
gs
dec
mov
sub
cmp
aaa
mov
xchg
xchg
out
jecxz
or
inc
out
inc
out
xchg
dec
sbb
stos
out
fbstp
add
jle
inc
pusha
std
pop
push
jle
or
lds
outsb
ds
outsl
call
sbb
push
scas
insb
mov
pop
sbb
dec
pop
adc
adc
sub
pop
push
mov
push
js
data16
adc
add
adc
adc
push
dec
pop
pop
js
testb
insl
jp
inc
scas
stos
ror
mov
negb
add
xchg
daa
pop
mov
dec
aam
push
fnsave
push
pop
sub
aad
cmp
mov
das
push
cmp
xchg
xlat
pop
and
dec
sahf
dec
lods
clc
scas
cltd
pop
mov
adc
cmpsb
adc
dec
dec
movsb
rorb
fneni(8087
pusha
adc
mov
mov
out
sbb
sbb
clc
testl
xor
int3
ljmp
and
rclb
lret
push
insb
push
sbb
ret
xchg
stos
addl
inc
inc
bound
add
bound
jmp
or
mov
insb
pop
stos
xchg
insl
dec
outsl
pop
xchg
ret
xchg
jge
sbb
push
orb
ret
out
xchg
fists
repz
in
or
jle
rol
push
sbb
push
idivb
or
test
mull
jae
jo
sbb
data16
jp
cmp
push
scas
testb
sbb
outsl
dec
xchg
push
leave
mov
adc
movsl
testb
pop
shufps
add
fiaddl
enter
ret
in
sub
repz
jbe
adc
fldenv
push
fsubrl
imul
sbb
fcoms
push
xor
and
les
jnp
rcll
sbb
dec
imul
mov
pop
cmp
inc
test
push
push
jmp
ret
scas
test
nop
cmp
mov
movsl
mov
pop
out
xchg
out
hlt
clc
movsl
js
xor
inc
adc
or
mov
stos
xchg
scas
mov
push
vunpckhps
adc
in
dec
test
fsubr
mov
mov
ret
loopne
test
outsl
cltd
sbb
in
mov
ret
call
pop
aaa
mov
cs
pop
add
addl
popf
fimull
subb
push
in
repnz
dec
cs
add
je
cmpb
repz
bound
and
mov
mov
ficomps
cli
jne
ds
xchg
movsb
xor
add
inc
xchg
sahf
sbb
scas
pop
push
add
bound
imul
iret
push
negl
sub
cwtl
or
mov
adc
out
or
add
jmp
dec
dec
xchg
adc
add
push
and
jge
xlat
sti
pop
and
xchg
cmp
lds
test
pop
rcl
push
icebp
outsb
sbb
fiadds
mov
jmp
gs
xchg
pop
inc
cwtl
std
in
and
inc
and
mov
jae
arpl
es
aad
idivl
mov
ljmp
or
pop
dec
hlt
jge
add
jnp
adc
gs
lds
add
push
cwtl
mov
dec
push
test
dec
and
jp
inc
pop
sbb
scas
jle
jb
ret
in
pop
add
dec
test
dec
insl
shr
mov
fsubrl
cld
loopne
mov
stc
ja
cmp
and
add
xor
mov
cld
add
cmp
xchg
jnp
xor
mov
fimuls
cld
xchg
rcr
xor
mov
or
mov
data16
aad
mov
inc
bound
out
ss
mov
lahf
jge
into
popa
aaa
std
cs
pop
xorb
adc
pop
mov
push
lods
and
adc
cmp
cltd
leave
push
sbb
cld
movsl
mov
and
in
dec
inc
xchg
xchg
repnz
call
pop
test
pavgb
call
mov
aam
dec
ds
std
out
sbb
mov
cli
movsb
mov
lahf
mov
sbb
in
mov
jp
mov
mov
mov
pop
dec
hlt
jp
shl
into
jle
and
sbb
dec
mov
sbb
divb
cltd
mov
jg
test
out
addr16
movsb
sbb
push
mov
int3
out
xlat
lahf
mov
cmp
mov
xchg
push
js
or
lahf
aaa
inc
adc
jg
push
sub
xor
cwtl
mov
xchg
fdivrl
notb
aad
iret
pusha
sbb
sahf
push
pusha
testl
mov
pusha
mov
push
sub
push
dec
fdivl
push
das
lcall
scas
jl
test
or
pop
push
cwtl
mov
imul
or
dec
add
push
lods
fdiv
and
fisttpl
imul
and
xchg
decb
scas
add
shl
outsb
outsl
outsl
stos
pop
xchg
mov
xlat
out
call
pop
push
pop
lds
lcall
cmpsb
faddl
mov
cmpb
nop
rolb
int3
shr
ficoml
push
subl
ss
dec
mov
sahf
mulb
mov
push
mov
fucompp
mov
fsubs
xchg
das
jne
add
push
stos
pop
incl
cwtl
mov
mov
pop
mov
dec
jbe
out
imul
aaa
repnz
xor
jo
test
aaa
test
lcall
mov
cld
inc
cmp
pop
insb
not
xor
or
sahf
or
mov
fs
and
pop
cwtl
movb
xchg
inc
dec
pop
out
shlb
nop
je
mov
push
inc
add
sub
test
fsubs
jne
add
sub
xor
lcall
mov
push
jge
jmp
sbb
mov
xchg
test
xorb
into
mov
addr16
inc
pusha
add
mov
call
adc
jg
sbb
and
aad
int
ljmp
jle
cmp
push
subb
hlt
push
in
jns
push
mov
or
or
jnp
ret
xor
aaa
jbe
stos
sbb
xchg
stos
jp
mov
push
cmc
sub
mov
push
clc
fisttpll
scas
mov
popa
in
ret
std
in
scas
jl
jae
jbe
cld
dec
mov
in
clc
dec
dec
ficompl
jl
or
jns
dec
icebp
ret
lock
xor
imul
add
out
mov
cld
in
jo
inc
or
mov
aad
cmc
push
inc
cmp
fadds
int
pop
xchg
aam
adc
lret
mov
xor
loopne
imul
mov
pop
pop
test
int3
aad
pop
mov
jbe
adc
sti
mov
ss
sub
or
sub
mov
clc
loope
jg
outsb
mov
or
lds
push
push
adc
outsl
or
out
les
mov
xchg
push
adc
inc
adc
lret
cld
insl
jns
arpl
push
jnp
cmpsb
jbe
push
xor
cli
js
add
mov
decb
mov
js
inc
sub
xor
adc
xor
loop
mov
cmp
dec
int3
lret
pop
enter
jne
adc
push
mov
andb
mov
insl
in
test
jno
cmpsb
lret
shr
lcall
les
lods
push
fcomp
lahf
call
call
push
pop
in
mov
pop
nop
add
dec
pop
and
fildll
lret
xor
lods
enter
test
pop
mov
out
push
jns
jno
ljmp
mov
sbb
cmpsl
and
daa
aam
xor
fildll
lods
add
in
mov
stos
cltd
push
mov
mov
ret
or
add
xchg
inc
les
sbb
mov
mov
jecxz
lods
loope
repnz
rorb
adc
xchg
lods
incb
xor
mull
sbb
add
in
cmp
mov
stc
adc
daa
xchg
push
jns
insb
in
shrb
xor
int
xor
add
jl
dec
pop
mov
jnp
jns
repz
jbe
daa
cmp
sti
inc
fxtract
inc
popl
sbb
mov
addl
xchg
and
lahf
ror
ds
and
cld
insb
cltd
mov
xchg
dec
push
jmp
mov
dec
push
and
or
notb
mov
out
sbb
mov
mov
dec
lahf
movsl
js
mov
mov
jnp
xor
adc
sbb
data16
adc
cld
adc
cs
in
xor
xchg
sbb
pop
jecxz
push
outsb
add
jae
sub
mov
mov
mov
hlt
jl
mov
pop
dec
lret
ss
adc
cmp
sbb
push
pushf
dec
xlat
loopne
jno
cmp
pop
or
imul
adc
rclb
dec
pop
cmc
xchg
out
cwtl
inc
in
cmp
xchg
inc
xchg
jecxz
jl
rorb
adc
and
dec
out
push
sbb
dec
adc
jle
add
into
adc
arpl
les
sub
int3
pushf
clc
xchg
decl
lods
adc
mov
fcoms
xchg
das
jp
data16
les
jbe
movl
push
xchg
push
ja
js
pop
and
jp
fadds
fadd
in
push
inc
pop
fstpl
test
dec
pop
fisubl
jp
jb
sub
jne
cmpb
lea
dec
lret
hlt
test
cli
cmp
ss
sbb
lahf
decl
xchg
inc
dec
enter
aaa
out
inc
icebp
dec
mov
adc
jecxz
or
fsts
lods
sbb
add
mov
push
out
lahf
mul
cmp
push
push
inc
pushf
in
sti
add
je
lret
mov
aad
mov
aam
push
mov
cmp
cs
xchg
jl
je
and
gs
cltd
ret
xchg
inc
fsubr
xchg
push
xchg
xchg
and
mov
cmp
xchg
mov
xor
mov
test
pusha
xchg
xchg
out
bound
rcr
test
xchg
mov
sbb
xchg
shlb
je
pushf
mov
push
enter
lea
mov
neg
test
jle
xor
xchg
enter
addr16
inc
or
push
aad
pop
nop
adc
out
lret
xor
faddl
mov
adc
lods
sbb
fdivl
xor
iret
or
fcomi
inc
mov
jno
push
bnd
pushf
pop
out
iret
lcall
daa
adc
xchg
adc
jge
sbb
sbb
jecxz
call
xchg
dec
dec
pushf
cmp
jbe
cmp
jmp
mov
dec
xor
cmpsb
sti
imul
in
imul
pop
enter
mov
es
mov
rcr
rcll
pop
clc
sub
mov
jns
stos
pop
loop
mov
push
cmp
fistl
xchg
sub
add
inc
mov
and
jp
lahf
and
std
cmp
add
sub
je
sub
pop
pop
mov
pop
sub
jb
addb
cld
rcrb
cmp
inc
mov
push
out
push
das
js
into
sbb
jl
in
imul
fisttps
cmp
dec
fdivs
jnp
and
dec
clc
ret
mov
loop
or
std
gs
imul
out
pushf
or
gs
pop
add
add
test
sub
xor
sbb
or
pusha
cmpb
push
xor
fistps
ljmp
test
pop
les
in
cmpsb
and
xor
addr16
ret
movhps
pop
sbb
ds
int
sbb
rcrl
add
dec
enter
mov
pop
cmp
push
out
mov
mov
into
adc
repz
xchg
mov
arpl
mov
fs
xchg
stos
sbb
mov
xchg
inc
xchg
xor
fsubr
aad
dec
neg
rolb
sbb
mov
test
aam
clc
xlat
cmp
pusha
je
js
ljmp
xor
fnstsw
add
xor
sbb
in
jg
aaa
rorl
in
jg
sub
add
xchg
sbb
test
scas
adc
push
sbb
xchg
xchg
adc
mov
loope
push
scas
and
test
xchg
loopne
push
inc
xchg
sub
scas
pushf
jno
push
roll
repnz
push
fldenv
cmc
xchg
adc
push
inc
xchg
orb
pop
dec
push
fstpt
cmp
ja
push
mov
mov
sti
movsl
lods
cld
cmc
xchg
jb
mov
adcl
outsl
call
ds
pop
fnstsw
out
xor
imul
jle
fisubrs
push
push
mov
push
mov
pop
mov
jns
jb
cmp
jbe
imul
mov
movsl
jo
bound
fs
jns
std
fs
shlb
push
mov
pop
arpl
sbb
scas
dec
nop
outsl
sbb
sbb
sub
es
mov
das
mov
lcall
test
gs
js
bound
or
cmp
rcrb
dec
fisubrs
jecxz
stos
add
nop
dec
insb
xor
and
push
mov
out
push
js
sub
dec
add
lahf
xorb
roll
fsincos
add
pop
les
lods
mov
loop
das
pop
rorb
inc
or
neg
fstl
fsubrs
divb
imul
or
xlat
lahf
pop
mov
inc
mov
push
subl
xor
and
push
inc
jecxz
dec
cmc
jne
push
shrb
aad
add
hlt
pushf
adc
cltd
scas
mov
pusha
ret
add
inc
xchg
out
js
fst
pushf
and
hlt
into
lods
sti
mull
fistpl
push
cmc
inc
sahf
jge
sub
in
movsl
mov
adc
lahf
pop
jmp
sub
sbb
xchg
ficomps
pop
xchg
nop
sbb
fwait
cs
movl
inc
dec
or
fwait
cmp
pop
aad
add
jb
addb
into
jb
mov
push
xchg
adc
lock
cmc
es
test
mov
mov
adc
shrl
and
adc
or
inc
stc
jl
inc
or
movsl
jmp
pop
test
fcompl
mov
dec
popf
leave
addr16
inc
lret
and
inc
jnp
int
lock
cmp
aad
outsb
inc
test
lds
stos
inc
mov
shrb
push
push
push
jb
jecxz
leave
int3
cmp
fildll
pop
cwtl
daa
xor
ret
mov
jecxz
addr16
stos
enter
and
hlt
xchg
sbb
clc
cmc
mov
mov
pop
dec
pop
scas
push
cmpsb
mov
ja
subl
push
inc
popa
xchg
add
and
lods
cwtl
lret
and
add
fs
mov
dec
movsb
leave
push
sbb
push
and
imul
shl
jb
adc
rorb
add
push
add
xchg
push
insb
dec
lret
test
es
loop
and
ds
push
mov
mov
sub
outsl
stos
dec
push
shlb
dec
fsubrs
fsubs
es
and
ret
dec
es
push
stos
test
dec
int3
movsb
je
out
push
jg
pop
jl
clc
dec
xchg
imul
inc
and
jge
push
or
jbe
subb
sub
push
icebp
and
push
aas
outsb
pop
and
mov
daa
and
lods
mov
cmp
pop
rorb
enter
mov
or
dec
mov
inc
das
fxch
jp
sbb
add
push
push
cwtl
outsb
jg
sbb
pop
sub
cmp
and
lahf
xorl
sub
pop
or
test
xchg
out
movsl
mov
jp
mov
xor
and
mov
and
sbb
mov
jmp
or
mov
lret
rorl
sub
push
insl
ror
cmp
jnp
lret
je
rolb
mov
fwait
xchg
enter
test
andb
into
mov
ds
mov
rcrl
imul
scas
mov
ss
cs
imul
xchg
add
aas
out
in
or
test
xchg
mov
shr
fiadds
mov
rcll
stos
pop
outsl
dec
jae
push
jmp
xchg
push
cmp
and
stos
xlat
or
cmp
mov
or
xlat
dec
jns
jb
idivb
inc
dec
mov
cltd
imull
pop
lahf
lahf
mov
lds
daa
or
das
popf
xor
xorl
repz
out
pop
ljmp
rcrl
add
inc
nop
cld
push
movsb
pop
mov
mov
icebp
cwtl
jae
add
int
andl
or
jb
pop
arpl
stos
xchg
lahf
test
pop
push
std
iret
push
xchg
out
gs
inc
mov
fcoml
loop
in
aas
lods
data16
adc
push
adc
enter
rol
movsl
add
jno
sub
nop
pop
test
jne
stc
pop
mov
pop
mov
pop
fisttpll
daa
das
popa
pop
jge
and
and
push
xchg
inc
pusha
fimuls
cs
sbb
jo
cmp
fwait
aaa
push
inc
xchg
and
imul
nop
mov
fcomip
xor
jmp
cltd
imul
aad
inc
mov
outsl
inc
pusha
fcoms
and
testb
es
push
lret
mov
xchg
imul
cs
adc
in
jmp
ss
out
push
outsb
sbb
divb
aaa
pop
or
xchg
inc
scas
out
call
movsl
cmp
js
jne
jl
and
sbb
adc
pop
stc
mov
enter
pop
jg,pn
adc
cmp
xor
add
xchg
divl
xor
xchg
pop
jb
fwait
or
xchg
aaa
imull
inc
cmc
in
scas
sbb
xchg
inc
shll
jl
decl
in
stos
adc
mov
adc
add
call
xor
or
and
sbb
jl
stos
leave
dec
jecxz
mov
mov
pop
mov
ja
or
mov
aam
dec
pop
cmp
xchg
sub
adcl
mov
fdivrs
mov
fs
push
mov
clc
pop
std
sbb
repnz
push
pop
ret
cmpsb
mov
lret
repz
mov
jge
ficoms
adc
xchg
inc
out
fistl
lods
pushf
or
inc
or
inc
or
mov
sahf
rcl
jb
mov
push
cmc
push
xlat
mov
pop
xchg
push
cmp
cmpsb
jmp
fsubrl
enter
push
fistl
scas
sub
shlb
adc
mov
scas
in
or
push
lods
sub
popa
mov
neg
mov
clc
repz
pop
rorb
shrl
push
adc
out
sub
call
or
nop
out
ret
sub
sub
jmp
call
add
cmp
shll
cltd
pop
lds
xor
mov
adc
jmp
sahf
test
push
push
fstpt
repz
xchg
pop
loope
inc
pop
xchg
in
mov
loopne
dec
sub
stos
pop
lahf
addr16
mov
in
mov
xchg
sub
mov
pop
pop
int3
fsubl
dec
arpl
mov
pusha
movsb
push
inc
xlat
pushf
cmpsl
and
sbb
js
addl
inc
push
popf
in
je
rolb
fcmove
jmp
arpl
hlt
mov
xlat
and
ret
sub
shlb
jno
or
fwait
push
addr16
jnp
sub
pop
mov
push
sti
xchg
insl
mov
arpl
enter
sub
dec
jmp
mov
push
mov
gs
fwait
pop
mov
push
and
shll
rcll
push
jmp
adc
jns
test
ljmp
out
jmp
dec
jl
pop
inc
xchg
mov
xor
mov
mov
sub
or
xor
xchg
lret
pop
mov
insl
sbb
dec
fnstsw
cmp
xlat
ds
push
repz
std
adc
fisubrl
mov
aaa
bound
mov
or
xchg
jl
dec
mov
or
jl
ja
mov
lods
lock
int3
push
xchg
pop
bt
movhps
out
jns
pop
adc
jp
call
jne
pop
stc
mov
popa
mov
fidivs
mov
adc
sbb
shlb
addr16
mulb
or
insl
pop
dec
lret
push
jmp
push
mov
repz
rcrb
in
dec
fidivrs
int3
jmp
ret
aas
and
add
lcall
jnp
mov
mov
arpl
outsb
bswap
and
scas
int
jo
adc
push
popf
outsl
icebp
sub
hlt
dec
mov
adc
sbb
mov
xor
jg
or
rolb
stos
stc
pop
loop
jl
or
add
ret
ret
insl
xor
js
pop
dec
or
sahf
xor
std
or
rorb
mov
inc
mov
dec
sbb
mov
test
lcall
xorl
push
cmp
push
sbb
test
int
rcrb
and
mov
out
leave
xchg
sbb
in
popf
dec
cld
cmc
mov
js
and
dec
xchg
add
add
sub
mov
dec
popf
xor
clc
in
sbb
flds
js
je
fwait
lds
stc
fldenvs
xchg
pop
pop
dec
pop
push
mov
xchg
mov
frstor
adc
cltd
jmp
mov
pop
cltd
add
fistpll
das
or
test
mov
in
add
pop
sbb
sbb
xor
mov
fldl
imul
out
sbb
sub
pop
mov
or
aas
cmp
lds
mov
dec
xor
push
inc
mov
insb
jp
insb
inc
jae
adc
mov
orb
jle
and
ffree
testb
xor
cmp
mov
imul
jecxz
ja
lock
inc
fs
pop
cld
ret
mov
inc
je
lock
aam
add
mov
lcall
cmp
std
stos
imul
jns
loop
test
mov
call
add
sbb
jg
sahf
lahf
insb
pop
xchg
adc
and
mov
mov
jp
pop
ljmp
cwtl
mov
lea
icebp
dec
cmp
cltd
inc
cmc
insb
xchg
mov
shll
shll
insb
or
xor
adc
fwait
loop
jecxz
pop
mov
adc
mov
and
sub
xchg
dec
push
sbb
or
push
xor
cmpsb
lods
cwtl
or
dec
cmpsb
shrb
cmp
push
loopne
add
and
cmpsl
mov
push
ret
adc
mov
fisubl
xchg
arpl
fwait
daa
ret
in
push
cltd
mov
lret
mov
mov
jg
sub
enter
jp
andb
inc
xor
scas
jb
movsl
push
pop
arpl
stos
jmp
jmp
jae
imul
mov
jo
jbe
sub
inc
mov
cmp
fdivrs
leave
cmp
mov
fisubs
cltd
outsl
push
mov
sbb
cmp
add
sbb
inc
clc
jae
mov
add
xor
lds
ret
dec
ss
out
add
ss
jmp
subl
xchg
loopne
xor
int3
cmp
mov
mov
int3
out
pushf
jp
and
jns
or
adc
cmc
sar
adc
or
pop
adc
xorl
or
adc
std
cmpsb
aas
pushf
aam
xor
or
in
push
in
enter
xchg
xor
xchg
jne
fdivs
inc
sbb
dec
dec
push
cmp
push
jg
aaa
cmp
inc
subl
and
loop
lods
add
test
lret
imul
jl
insb
lcall
mov
aad
das
popf
mov
rcrb
call
adc
lds
dec
repz
cmpsb
notb
pop
mov
movsb
mov
in
pop
imul
inc
fstp
dec
out
cmp
pop
popa
cs
mov
stos
pushf
ss
dec
mov
lcall
arpl
add
inc
out
in
push
jecxz
jp
mov
testb
adc
xchg
xlat
lahf
in
add
dec
jno
dec
lret
pop
int
psadbw
in
sub
frstor
sbb
es
jns
mov
inc
push
cli
push
rcrl
xchg
mov
xchg
repnz
imul
push
xor
jmp
sbb
cld
and
addb
ljmp
sub
sub
insb
out
jmp
inc
jne
in
or
add
add
adcl
sbbl
adc
inc
sbb
les
lods
inc
inc
stos
xor
popf
clc
dec
adc
jmp
ret
xsavec
out
pop
loopne
dec
jge
pusha
lods
clc
dec
outsl
rcrb
inc
pop
jbe
cmc
inc
adc
adc
xor
jne
lahf
in
iret
pop
or
inc
sbb
loopne
lcall
add
movl
push
out
out
psraw
mov
cmp
lcall
cltd
icebp
sub
inc
fwait
aaa
bndldx
sbb
fiaddl
daa
pusha
sub
ret
aad
ficoml
insl
sahf
and
js
push
jmp
jo
pop
jp
xchg
aad
jp
push
dec
adcl
cli
jo
mov
sbb
and
jl
fs
loope
xor
pop
xlat
mov
xchg
jg
andl
pushf
testl
push
jo
into
leave
sbb
stc
jg
in
bound
xchg
lret
shll
lods
shrl
mov
in
stos
shlb
aaa
imul
xor
xchg
inc
inc
mov
adc
push
int3
pop
adc
ss
add
jne
ljmp
inc
ds
jns
mov
or
rorb
les
jb
iret
out
jae
jecxz
in
pushf
push
rcll
hlt
pop
cmp
hlt
and
lock
loope
and
out
psrlq
mov
aas
mov
ss
sbb
aad
sbb
je
xor
xchg
sbb
cmp
scas
in
outsl
test
fistpl
lret
mov
sbb
insl
jb
lock
rolb
jne
loopne
pop
in
or
into
pop
je
dec
mov
pop
sbb
mov
shll
scas
add
test
push
cmp
or
mov
out
pop
pushf
repnz
mov
adc
and
inc
out
xchg
inc
out
ljmp
mov
and
icebp
add
xchg
adc
pop
out
xor
cmpsl
aam
or
inc
mov
xchg
andl
adc
pop
lret
mov
imull
in
mov
lahf
out
inc
adc
mov
cld
nop
add
sahf
into
jl
adc
mov
and
add
sbb
cmp
clc
scas
xchg
adc
add
xor
rorb
lods
popf
dec
fstps
stc
and
in
lret
loope
push
push
pop
push
stc
pusha
out
mov
inc
insl
jbe
sbb
out
int3
mov
cltd
addr16
push
shl
and
pop
xchg
dec
dec
adc
xchg
test
cmpsl
pop
sub
scas
inc
pop
sarb
jae
fdecstp
iret
fwait
clc
test
and
nop
xchg
loope
and
jle
out
sbb
lcall
stos
ret
enter
cmp
mov
aaa
arpl
dec
loope
test
loopne
movsl
and
dec
inc
into
mov
sbb
push
insl
mov
neg
xchg
test
lcall
aad
mov
shll
mov
mov
enter
frstor
mov
xchg
mov
dec
xchg
jp
test
add
fdivrl
mov
jp
scas
add
push
flds
or
pop
add
adc
movsl
cmp
and
fidivrl
out
sti
loop
lret
push
mov
lret
mov
sahf
sub
sub
pop
inc
fistl
mov
adc
iret
sbb
push
inc
mov
out
push
insb
push
fbstp
jne
and
loope
imul
clc
stos
std
cld
pusha
fadd
in
cmp
imul
push
pop
mov
dec
dec
std
out
rcl
adc
xor
stos
jb
fwait
mov
enter
mov
arpl
xor
fwait
push
fs
pop
rolb
pushf
leave
dec
das
adc
lahf
shll
jmp
int
adc
push
dec
jbe
xlat
dec
push
jge
mov
aad
push
out
mov
inc
cmp
and
mov
mov
sub
cmp
or
or
mov
es
aaa
stos
sbb
cwtl
loopne
xor
ror
adc
lcall
incb
mov
ja
sbb
nop
je
push
outsb
in
lea
stc
lock
dec
jb
scas
pop
add
in
adc
mov
ds
sbb
mov
bswap
in
cli
cmp
test
into
inc
mov
cwtl
pop
or
push
cmp
scas
lcall
in
lahf
xlat
add
popf
cli
xlat
lods
in
test
xor
ret
and
jg
jecxz
push
mov
jne
fiaddl
dec
add
scas
stc
rcrl
mov
shrl
xor
jmp
or
push
sbb
dec
pop
add
push
xchg
mov
mov
jecxz
sarl
xor
lahf
push
outsl
add
and
icebp
cltd
sbb
scas
sbb
jae
cmpl
xor
es
cmc
pop
mov
xor
js
xchg
mov
cvttps2pi
mov
push
add
shll
imul
iret
mov
iret
jl
lret
insl
aam
mov
xchg
clc
push
repz
ja
sti
lret
pop
mov
xchg
mov
pop
push
or
jo
sbb
mov
push
mov
push
repz
fldcw
icebp
mov
jp
dec
leave
jecxz
or
xchg
cs
dec
jle
fisubrl
mov
sub
filds
cmp
pop
loopne
aaa
cmpsb
inc
ljmp
pop
pop
mov
ja
adc
inc
xchg
pop
or
imul
xchg
adc
popa
cwtl
jnp
cmp
dec
pop
mov
stos
aam
ficomps
jbe
adc
orl
fistpl
lods
jbe
scas
pop
bound
popa
or
xor
xchg
mov
pop
or
call
popf
rcl
and
test
insl
pop
mov
cs
aad
testl
sub
idivl
out
xchg
xchg
popa
adc
hlt
mov
jmp
stos
or
lea
mov
or
ror
pop
aas
movsl
add
test
fisttpll
hlt
xchg
outsl
mov
jl
punpcklbw
mov
xlat
add
adc
fisubl
adc
loop
sbb
stc
jb
test
pop
cltd
test
push
clc
xchg
cmpsb
stos
and
mov
hlt
push
push
dec
xor
xchg
xchg
icebp
cmpsb
imul
fcoms
outsl
popa
lret
pushf
mov
popa
cmp
das
dec
ret
mov
cltd
arpl
fcompl
mov
sbb
call
imulb
fs
inc
push
repz
fistl
pop
iret
cmpsl
mov
xlat
shll
addr16
inc
mov
pop
mov
pop
popf
frstor
rcrl
aam
sub
loope
mull
add
jns
stos
or
in
mov
jmp
sti
push
xchg
dec
fistl
shll
les
inc
loopne
in
out
dec
xor
arpl
cmp
push
lods
sbb
rcrb
sahf
mov
fldcw
sar
or
pop
das
stos
add
repnz
fdivrl
clc
call
stos
mov
mov
cmp
aas
out
and
adc
rcrl
iret
add
sbb
inc
mov
mov
pop
cmc
bound
add
cmc
out
push
popf
jge
insl
andl
sti
roll
mov
add
xor
jle
fucomi
sbb
jle
ret
imul
loop
push
sahf
push
xchg
inc
imul
jmp
mov
flds
adc
push
inc
sub
lret
or
aas
xlat
pushf
insl
jg
dec
gs
fldt
dec
repnz
add
and
es
and
test
imulb
sarl
sub
das
cmc
mov
adc
mov
cmp
mov
dec
fs
in
test
cmp
pop
inc
pop
insb
bound
inc
imul
sub
cmp
aaa
enter
inc
aad
inc
inc
nop
jmp
and
xor
lods
lret
addw
sub
jge
pusha
lods
mov
xchg
add
xchg
popf
dec
das
mov
or
sub
jecxz
cwtl
outsl
jle
xchg
jl
push
pop
test
mov
pop
push
lods
dec
mov
mov
rcrb
repnz
or
out
outsl
inc
es
dec
in
and
add
dec
in
aad
push
sbbl
pusha
mov
dec
sahf
mov
jae
imul
lret
push
cmc
ss
adc
mov
mov
int
das
inc
pop
fimull
hlt
mov
ljmp
rdtsc
mov
stc
cmc
ficoml
jnp
in
jae
push
mov
mov
inc
xor
xchg
push
popa
inc
and
mov
pop
int
adc
jns
mov
push
aas
mov
out
icebp
adc
shrl
xor
imul
mov
mov
jo
imul
sub
stos
mov
sub
dec
jae
insl
add
push
fwait
nop
js
mov
out
pop
enter
imul
subb
mov
adc
lods
mov
scas
cmp
fiadds
mov
xchg
mov
jns
loope
or
ds
add
mov
cmp
incl
jns
inc
adc
movhps
xchg
xchg
loopne
sub
push
fucom
imul
dec
jno
cwtl
insl
loopne
flds
enter
lret
ljmp
pop
out
push
xor
dec
xor
mov
adc
add
pusha
push
dec
cs
push
sti
adc
dec
mov
dec
push
sbb
outsl
cmp
iret
jne
push
inc
pop
stos
fsubs
mov
or
cmc
cmp
mov
xchg
xchg
xchg
scas
shll
xchg
dec
sbb
and
insb
or
sub
jbe
filds
mov
adc
leave
idivl
stc
xchg
fisubs
dec
xor
inc
in
jne
xor
pop
fcmove
into
shrd
jns
mov
xchg
mov
jns
pop
mov
call
pop
movsb
xchg
repz
mov
sti
sbb
inc
lcall
inc
cmpsb
shl
andl
push
add
push
and
inc
add
fldl
ret
or
sbb
movsl
mov
shr
push
dec
je
sti
mov
out
add
pop
leave
sub
or
inc
and
jp
jnp
sub
lret
outsb
rol
data16
pop
dec
lods
shlb
mov
sub
jbe,pn
fdivl
mov
push
push
sbb
pushf
push
jo
and
xlat
or
xlat
loopne
mov
sahf
or
or
or
clc
mov
pop
xor
in
aam
leave
mov
pop
jo
mov
push
mov
inc
jmp
ss
sub
mov
mov
aam
inc
sub
test
fsubp
rcll
je
rcr
es
mov
jnp
cmp
fcomps
ljmp
out
mov
mov
or
lea
ret
xchg
js
xorb
xchg
mov
jbe
pop
dec
sbb
mov
inc
pusha
pop
push
jb
pop
dec
gs
xchg
test
push
mov
and
decb
xchg
movsl
fs
jne
mov
inc
ss
out
pop
push
xor
mov
sarl
outsb
jno
mov
sbb
out
fists
mov
stos
xchg
jo
ds
cld
outsl
sub
lock
outsb
adc
lahf
cmpsb
inc
sti
push
and
shll
xchg
outsl
test
cltd
pop
mov
cld
xlat
cmp
and
add
roll
call
movsb
adc
inc
add
push
or
xor
mov
nop
sub
dec
jo
fwait
pushf
pop
mov
dec
jno
inc
add
mov
dec
and
xor
jns
xchg
stos
and
jb
sahf
or
icebp
adc
jbe
imul
push
and
enter
pop
pushl
imul
in
movsl
fstpl
jns
pop
ret
dec
js
jg
daa
mov
fildll
aas
jp
data16
iret
out
and
cmp
jne
es
out
idiv
or
mov
mov
insl
scas
cld
into
test
lret
mov
jl
jle
test
adc
hlt
in
repz
mov
cmc
fldl
insb
mov
test
lcall
mov
ret
decl
xchg
push
pop
das
or
xchg
sbb
adc
ficoms
and
test
movsb
roll
xor
sub
push
sub
xchg
fdivl
mov
and
adc
or
cmpsb
or
push
mov
inc
shll
dec
sub
jecxz
sbb
cmpsl
daa
adc
jmp
inc
dec
loopne
mov
xchg
mov
xor
lods
cmp
je
fisubl
clc
lds
mov
xchg
aaa
pop
fmull
fsts
cmp
sub
xor
xor
add
xchg
scas
xchg
rcll
loop,pt
stos
adc
jno
outsl
xchg
add
and
mov
lret
test
fisubs
das
add
cmp
push
lods
xchg
sub
pop
sbb
mov
mov
aad
int
pop
jg
aad
jae
iret
lcall
aad
and
push
and
cld
pop
out
aas
cmp
pop
mov
ret
jbe
mov
adc
into
push
out
clc
cmpsl
xchg
shl
pop
fwait
jbe
popa
or
xchg
mov
daa
cltd
xchg
test
sbb
mov
jae
sbb
or
mov
fsubl
mov
adc
rorl
jp
dec
out
dec
roll
loopne
lods
sub
and
xor
sahf
cwtl
mov
sub
enter
ret
in
roll
push
ret
fisubrl
push
cli
cmp
jp
jnp
sub
sub
divb
loop
mov
jmp
idivb
aam
test
fdivrs
mov
insl
mov
movsl
sar
sbb
push
nop
movsl
daa
loop
bound
inc
insb
nop
jl
icebp
xchg
shrl
das
int
lcall
in
lock
cs
cmp
adc
sub
and
fldpi
sub
jns
imul
cmp
je
out
inc
xlat
aam
cltd
pop
and
mov
cmc
aad
fxch
mov
xor
enter
and
adc
hlt
repnz
jo
call
pop
jecxz
fstpl
pand
push
push
xor
cmpsb
andl
test
jns
int
sar
aad
pusha
or
inc
mov
lea
movsl
cli
jo
xor
mov
jnp
dec
sbb
std
lds
inc
sub
cmp
je
addr16
add
popa
dec
pop
push
sarl
iret
fdivr
pop
addr16
mov
repz
js
addr16
or
test
and
or
cs
xchg
jns
lods
insb
test
arpl
je
mov
ja
add
les
cmp
and
rcl
jmp
clc
sub
sbb
lahf
mov
idivl
pop
fnstcw
jmp
adc
filds
insb
cmp
jo
dec
call
outsl
jp
fcom
push
into
imul
add
xor
xstore-rng
cmpsl
inc
mov
cltd
cmp
jne
idivb
sbb
pop
mov
xchg
lret
pop
in
in
andb
mov
fidivl
add
push
sarb
mov
dec
pop
mov
sbb
ss
stc
or
lcall
sub
adc
mov
in
sub
mov
and
dec
ret
xchg
and
imul
pop
mov
je
fsubrs
sub
adc
jb
shl
daa
sub
jmp
mov
pop
adc
inc
insb
xchg
int
jmp
mov
jno
cmpsb
pop
iret
popa
gs
je
push
ss
or
pop
mov
cmp
ret
push
mov
lock
ja
jb
push
xchg
pop
xchg
in
push
mov
adc
dec
lds
leave
insl
aas
std
adc
imul
and
or
sti
inc
aam
add
aas
imul
or
push
loope
addr16
insb
xchg
push
cmpsb
rorb
sub
out
shl
hlt
xor
cli
or
inc
pop
or
jge
gs
add
mov
adc
repnz
leave
imul
int3
test
repnz
out
aam
jg
test
cmpsb
add
adc
mov
out
xor
lcall
mov
xchg
lcall
xchg
adc
aaa
loop
in
inc
shrb
jle
mov
cwtl
adc
mov
add
jo
and
mov
jo
pop
xlat
js
lds
scas
fisttpll
je
cltd
leave
popa
pop
add
add
iret
add
add
lods
mov
pop
sbb
fcompl
pop
mov
out
in
dec
call
push
lods
xor
xchg
mov
push
outsl
and
std
rol
push
jl
out
sti
lcall
cld
inc
shlb
stos
sbb
je
iret
mov
dec
test
lods
jb
mov
lcall
cmpsb
lea
mov
jmp
jno
lods
stos
inc
dec
and
stos
mov
sbb
cld
stos
xchg
jl
push
arpl
fcoml
lret
or
inc
int
es
push
xor
cmpsb
mov
xchg
push
mov
inc
cmp
dec
fisubrl
jno
cmp
mov
fisttps
xchg
cwtl
mov
out
es
cmp
inc
nop
push
in
std
jno
out
jbe
ds
lea
divb
mov
and
inc
cmp
push
hlt
pop
loopne
cltd
mov
pop
cmp
mov
filds
cmp
or
dec
push
test
xor
cmp
sbb
mov
leave
adc
jb
cmp
loop
or
nop
cmp
movsb
inc
cmpsb
mov
add
pop
mov
pop
add
rorb
out
lret
pop
dec
rcl
aad
xor
flds
in
mov
lds
fcomps
sub
cld
xchg
aad
jecxz
sub
sub
dec
mov
out
jle
shrl
stos
mov
dec
jle
insl
lock
cli
push
fldcw
or
pop
cmp
cmp
icebp
lea
insb
std
insl
and
mov
and
cmpsl
pusha
mov
or
adc
fidivrs
xchg
pop
dec
in
stos
mov
cmpsb
sub
mov
ret
and
repnz
enter
mov
push
lods
push
or
testl
lcall
rcrl
or
lds
fistl
nop
cmpsb
adc
cli
push
ljmp
movsl
lods
xor
test
mov
jns
fistl
xor
mov
cmc
or
and
das
loopne
orb
xchg
cwtl
popf
mov
mov
inc
cli
icebp
cmpsb
cmc
es
cwtl
rorb
fxch
movsl
nop
sbb
aam
fwait
int
std
jmp
in
push
pop
inc
ljmp
xchg
pop
xchg
xchg
cmc
repz
add
es
inc
jae
jo
push
sbb
jo
push
or
hlt
repz
iret
mov
stc
fwait
inc
dec
push
decl
fiaddl
push
dec
xor
jg
dec
pop
arpl
repnz
stos
idivl
icebp
movsb
xor
sbb
jmp
in
test
sub
and
sbb
cmp
jl
pop
xchg
push
add
xor
imul
mov
cmc
rol
jge
mov
add
arpl
les
cmp
adc
pop
imul
xor
es
les
inc
test
rorb
loop
or
adc
rclb
cltd
divb
push
fildll
and
add
mov
push
xchg
adc
or
sahf
arpl
and
add
xchg
pop
das
xorl
pop
or
daa
mov
scas
sub
push
sar
mov
in
test
xchg
mov
fisubs
sbb
inc
roll
xchg
mov
mov
dec
andl
lds
mov
es
xor
cmp
aaa
fwait
sbb
jecxz
or
cmpsl
mov
daa
imul
jae
mov
pop
xchg
adc
ret
es
push
inc
sub
pop
clc
adc
mov
imul
repnz
mov
adc
das
gs
les
outsl
sub
movsb
jge
adc
adc
orl
inc
roll
pop
mov
gs
bound
fucomp
loope
push
iret
out
lret
push
ss
pop
clc
fadds
add
mov
adc
adc
dec
leave
and
outsl
and
ret
mov
ja
imul
repnz
and
push
dec
imul
lock
add
or
xor
out
lods
jle
popa
mov
incb
and
inc
movsl
mov
and
mov
les
lods
xchg
mov
or
push
mov
push
push
xchg
adc
and
imul
mov
insl
fs
icebp
or
lock
daa
sbb
cmpxchg
cmpsb
or
xor
jp
sub
and
jo
or
adc
push
pop
jle
lods
mov
sub
dec
stc
xchg
loopne
sub
or
xlat
cmp
les
loopne
xchg
push
les
mov
les
xchg
movsb
pop
lods
int3
in
xbegin
int
sub
lods
pop
or
inc
pop
popf
xor
cmpsb
or
inc
lret
lock
mov
mov
rcll
dec
mov
mov
inc
push
and
inc
pop
clc
sub
mov
xor
lock
inc
stc
push
fwait
dec
push
int3
xlat
mov
faddl
stc
or
fidivl
mov
sbb
push
push
outsl
cmp
insl
stos
jb
jae
scas
sbb
sarb
cli
fdivs
rclb
int
adc
popa
icebp
test
pop
sbb
push
fmul
shll
push
bound
sub
xchg
xlat
scas
lds
mov
add
cltd
lds
pop
pop
mov
ljmp
push
jp
stos
push
jmp
fnstcw
dec
mov
pop
mov
jnp
sbb
inc
and
fsts
mov
add
aaa
push
call
sub
in
mov
cltd
sbb
gs
sbb
fldl
pop
mov
lahf
jp
aad
inc
jge
mov
shl
xor
inc
sti
inc
insb
add
sub
out
outsl
insl
arpl
lret
out
mov
xor
jl
adc
nop
and
xchg
xchg
jb
mov
lods
mov
lea
jbe
jecxz
xchg
enter
pop
iret
inc
stc
mov
insb
fcmovu
xchg
shlb
sbb
pop
cmp
aam
or
sub
or
dec
push
mov
lock
sahf
fcompl
mov
outsl
pusha
pop
repnz
daa
into
lret
idivb
mov
mov
mov
jp
mov
call
mov
adc
cld
pop
mov
add
leave
jb
sbb
into
or
test
hlt
add
nop
xor
mov
pop
in
sub
ret
fidivrl
je
clc
xchg
mov
lret
out
cmp
insl
aam
xor
jg
xor
mov
dec
sub
xor
mov
mov
jnp
adcb
jp
and
push
push
iret
out
pop
jo
sub
jl
xchg
mov
cmc
cmp
int3
pop
lods
fwait
adc
cmpsl
cmp
int
inc
popa
inc
or
cmp
adc
mov
test
divb
dec
add
inc
xor
fdivrl
mov
add
in
jecxz
int3
add
iret
outsb
nopl
jl
out
mov
mov
clc
sub
lret
mov
inc
ret
inc
pop
clc
add
movsb
cmp
inc
aam
adc
icebp
or
into
pop
jb
data16
dec
dec
cs
int3
not
mov
xchg
xor
rep
inc
fstp
mov
cmp
mov
mov
insb
test
int3
cmp
pop
arpl
xor
sahf
insb
xchg
pop
loope
sub
xchg
in
jecxz
das
add
scas
xchg
sbb
faddp
shlb
ret
xchg
lock
imul
adc
xor
stos
sub
adc
lds
xor
mov
jne
iret
mov
inc
cmp
mov
adcb
repz
sbb
sahf
ret
pop
loop
daa
imul
and
lods
lcall
addr16
leave
xor
mov
iret
mov
and
aam
ljmp
xor
std
mov
and
push
adc
adc
jecxz
dec
fcompl
sbb
idivl
and
lods
xor
mov
mov
xchg
out
add
xchg
mov
jp
shll
push
xchg
into
insl
xchg
inc
rcrb
data16
push
fnsave
inc
and
imul
pop
mov
pop
and
push
inc
push
test
cltd
addr16
mov
pop
push
test
or
jmp
mov
icebp
test
test
ds
stos
sarl
and
and
pop
xlat
inc
and
cld
adc
shrb
lahf
push
push
add
int3
jg
xlat
mov
adc
xchg
in
push
out
xor
je
insb
inc
xchg
int3
lret
ficomps
ljmp
mov
push
push
call
js
mov
cmc
dec
fsubs
fsubl
push
repz
xlat
xor
test
xchg
fs
pop
aad
cmc
shrb
arpl
movsb
stos
mov
add
lahf
add
jge
mov
and
cmp
jl
in
dec
test
cli
int3
xlat
movsb
arpl
push
addl
sbb
jae
or
push
mov
arpl
fisttps
push
jecxz
pause
sbbb
mov
icebp
xor
inc
pop
pop
imul
xchg
add
int3
and
and
in
daa
out
into
in
sub
and
mov
inc
inc
cmp
outsb
ljmp
push
lods
adc
outsb
cmpsl
test
mov
pop
sbb
imul
sub
pop
push
scas
sbb
mov
push
lods
fsubrp
out
mov
dec
fisubrs
push
or
jbe
add
popa
mov
push
in
adc
sbb
sbb
inc
mull
mov
mov
push
int3
pop
mov
data16
xor
pop
and
cmovg
mov
push
xor
and
add
aaa
or
lea
cmp
rcrl
cmp
aas
or
and
jbe
pushl
sub
jns
push
mov
sbb
dec
mov
sbb
xor
testl
sbb
and
adc
lds
or
shlb
pop
cld
iret
mov
lods
xor
movsb
scas
andb
pop
into
mov
add
pop
xor
jmp
out
mov
mov
push
test
adcl
dec
daa
cmpsl
std
xchg
mov
jo
add
mov
addr16
imul
inc
push
mov
xchg
xchg
mov
rcrb
xor
movsb
mov
mov
adc
enter
adc
std
jno
adc
jb
add
or
ds
les
jb
imul
mov
cli
fcomi
out
arpl
jno
xchg
mov
in
je
cs
sbb
push
insb
push
shrl
jae
mov
pop
repnz
pop
jbe
int3
sbb
inc
or
cmpsb
addr16
inc
jle
addl
cmc
sbb
into
lcall
lods
xchg
add
inc
push
roll
jmp
loope
mov
xor
outsb
xchg
imul
into
into
pop
jnp
je
test
in
jae
je
fdivrs
and
cld
jnp
inc
push
jl
or
and
xchg
pop
mov
mov
xchg
mov
in
cmp
jae
lods
cmp
jecxz
sbb
cld
lret
in
rorl
test
xor
and
mov
xlat
push
imul
pop
mov
xchg
cmp
inc
push
jb
adc
sbb
pop
insb
jecxz
xchg
mov
pushf
push
pop
mov
mov
xor
addr16
cmp
pop
dec
movl
lret
cmpsl
movsb
out
lods
rep
aaa
loop
jnp
pushf
xchg
mov
mov
fcmovnu
and
inc
xor
add
inc
and
test
xchg
ds
mov
mov
and
aas
jns
and
xlat
adc
cmpsb
mov
leave
lock
js
repz
out
jl
arpl
test
pusha
xor
pop
lods
fimuls
inc
ss
mov
out
daa
je
arpl
xorb
cld
fisttps
dec
test
mov
cmpsb
mov
pop
mov
adc
xlat
cmpsb
shr
add
outsl
mov
cmp
cli
punpcklbw
adc
mov
lds
dec
in
sti
push
loopne
je
cld
gs
push
jae
pop
shrb
mov
jne
mov
test
lods
jne
or
inc
fpatan
xchg
sbb
rcl
lods
add
popa
lret
scas
js
in
es
jnp
loope
fistpl
mov
mov
xchg
in
gs
mov
inc
sbb
insl
fsubl
mov
into
push
cmp
ja
and
push
xchg
lds
mov
and
and
das
in
sbb
int
jae
test
xchg
enter
inc
dec
or
aad
jmp
loope
mov
push
cwtl
mov
test
nop
jmp
cmpl
mov
mov
movsl
add
cmp
fnstenv
arpl
lahf
lret
push
xchg
mov
aas
mov
mov
sbb
cmpsb
mov
sbb
js
pop
lret
fisttpl
movsl
mov
push
push
ret
loope
sysexit
ja
bound
js
out
mov
ds
jecxz
mov
icebp
fwait
cmpsl
sbb
xchg
enter
rorl
repz
cmp
es
aam
xor
or
dec
xchg
cmpsl
jp
icebp
imul
cmp
int3
pop
cwtl
mov
adc
mov
xchg
out
or
fwait
xchg
fisubrs
cmp
aam
sbb
adc
mov
push
fwait
push
inc
sbb
inc
mov
add
mov
call
mov
sbb
sbb
and
push
sbb
xor
push
sub
mov
mov
pop
mov
hlt
cmp
sbb
mov
outsl
sbb
loop
dec
sti
jg
inc
pop
push
xor
inc
lret
dec
sbb
dec
push
dec
test
js
inc
mov
jle
test
fimull
push
jne
cmp
fildl
push
clc
adc
repz
mov
movsb
inc
lea
popf
sub
add
stos
in
std
rorb
lods
sarb
cli
in
imul
mov
bound
outsb
imul
jb
add
adc
pushf
fs
fucomi
pushf
or
mov
push
jl
sub
ror
subl
push
ja
jns
add
push
test
lods
or
xchg
dec
push
mov
stc
inc
inc
jle
mov
pop
sbb
xlat
jo
cli
dec
sbbl
cmp
xchg
out
in
mov
nop
mov
mov
jbe
addr16
xor
popf
inc
xchg
sbb
rclb
mov
ja
imul
xchg
repz
lret
mov
aad
or
out
pop
out
outsb
pushw
xor
adc
jo
jmp
lret
push
xchg
repnz
cwtl
call
jle
pop
test
sbb
xor
insl
cmpb
leave
inc
addl
mov
or
imul
mov
lea
cmp
je
lret
xchg
add
dec
jae
fmuls
scas
fsubl
imul
aad
stos
cmp
push
leave
xchg
cmp
pop
les
notb
cmpsb
or
sub
mov
mov
and
popf
in
outsb
push
fcompl
xor
push
mov
stos
mov
std
mov
in
fbstp
xor
inc
push
les
mov
call
mov
or
cmp
pop
scas
mov
jp
xchg
cmpsb
out
call
mov
repz
sbb
pop
cmp
cmp
xchg
aam
sub
int3
out
dec
mov
mov
add
jno
sub
xchg
cmc
pop
mov
imul
sahf
imul
sub
rolb
add
in
push
mov
sbb
in
push
decb
js
push
mov
jbe
repnz
xchg
pushf
mov
fstl
mov
mov
push
push
xor
enter
neg
cmp
and
popf
mov
out
pop
lahf
jns
cltd
jno
mov
aad
scas
bound
imul
pop
push
pop
add
jnp
jg
jb
sbb
sub
lods
frstor
or
mov
jp
popf
mov
push
mov
filds
cmpsb
dec
or
pop
pop
mov
daa
pop
insb
orb
jge
nop
cmp
mov
mov
addr16
sub
jmp
icebp
mov
in
lcall
or
push
dec
inc
pop
iret
adc
xor
sar
inc
in
mov
hlt
dec
push
int
or
and
push
call
adc
and
test
vpackssdw
inc
ja
gs
jmp
lret
adc
xchg
sbb
jmp
pop
rorb
jae
aaa
pop
push
dec
xlat
out
sub
insb
fisubs
sub
js
cmp
loope
mov
fidivs
aaa
aam
fbstp
add
xorl
es
push
xor
xlat
and
aaa
repnz
mov
fimuls
mov
insb
dec
mov
fcmovne
lcall
add
pop
lret
pop
or
fmul
mov
ja
mov
push
push
mov
mov
mov
test
pop
sbb
lods
add
sub
in
push
fildll
push
inc
gs
mov
xchg
ret
sbb
mov
bnd
xor
sub
add
xchg
out
out
lock
mov
cmp
add
xchg
push
adc
aam
adc
repz
jae
mov
xchg
jecxz
mov
sub
or
adc
outsl
dec
and
imul
mov
and
mov
or
outsb
stos
push
mov
dec
mov
mov
cmpsb
jnp
push
shr
movsb
fsubr
shlb
pop
inc
popa
add
repnz
add
mov
ret
iret
hlt
repz
push
mov
xor
into
mov
aad
jae
sub
and
fnstenv
outsb
cmp
cmp
pop
jle
xchg
pop
outsb
mov
lods
and
pushf
pop
sub
add
mov
stc
xor
add
push
gs
sbb
push
inc
xchg
jne
sub
cmp
das
pop
in
das
xor
ficompl
cmpsl
mov
repnz
xchg
dec
mov
cli
add
testb
mov
add
mov
cmpsl
cwtl
cli
repnz
lock
pop
imul
sbb
dec
lret
ss
scas
js
aas
adc
aad
jge
inc
or
call
jnp
in
mov
and
les
test
adc
dec
jns
sar
add
test
mov
out
inc
jnp
mov
clc
xchg
or
fildl
xlat
mov
push
js
cltd
jge
and
adcb
xchg
inc
push
jge
iret
fmuls
add
clc
subb
subb
andb
inc
mov
adc
fisubrs
xchg
lcall
hlt
dec
scas
or
lret
adc
test
lods
xchg
mov
mov
ja
shr
and
rclb
push
insb
mov
ljmp
and
pop
stos
xor
mov
popf
jmp
mov
shlb
cmp
sarb
or
in
cmp
sbb
cltd
sbb
jmp
sti
loope
rcr
adc
xlat
loope
out
fwait
je
sbb
aad
add
stc
and
lds
mov
cmp
lea
and
pop
pop
or
dec
mov
sub
ret
test
loope
pop
cwtl
jle
pop
jb
mov
fs
sahf
xchg
xchg
call
jge
pop
cmp
popa
mov
lds
scas
scas
xchg
pop
or
sbb
inc
push
movsb
push
sub
ja
or
or
pop
add
sbb
pop
and
and
and
mov
adc
test
sbb
xor
out
mov
and
jno
js
fsubr
inc
out
xlat
mov
mov
pop
aam
sbb
loopne
or
outsb
je
mov
add
daa
cld
sub
in
mov
push
cmp
popf
mov
in
test
mov
aam
sub
int3
test
push
cmp
lock
mov
pop
lds
std
shr
mov
incl
popa
shll
iret
ret
out
inc
push
into
adc
out
mov
sub
loopne
cld
lods
sub
and
insb
fucomi
pop
stos
jbe
fildl
xchg
pop
cmp
mov
mov
aam
sub
aad
fwait
xor
mov
jecxz
mov
je
scas
jge
xchg
dec
dec
cmpsb
rorl
shlb
push
adc
xor
adc
mov
and
cmp
insl
mov
int3
movsl
cld
xchg
mov
repnz
xchg
in
ss
out
or
je
xlat
std
sbb
call
add
xor
test
cmc
popf
add
mov
fistps
inc
enter
loop
mov
sub
es
push
fbld
sbb
lahf
mov
fistl
jns
sub
xchg
ret
push
outsl
xor
movsb
ds
sbb
xchg
mov
push
add
out
mov
ficomps
aaa
dec
jb
cwtl
fsubl
clc
sub
jg
sub
pusha
idiv
imul
sbb
jne
dec
pop
leave
mov
mov
dec
xchg
cmp
outsb
cwtl
jne
mov
mov
adcl
sbb
xchg
lcall
mov
or
and
mov
jne
shl
add
dec
dec
iret
cmp
jno
cli
mov
cmc
jbe
testb
jae
pop
loope
adc
mov
cmpsb
aas
fs
cltd
shlb
movsl
test
icebp
popa
mov
ja
dec
sub
inc
push
lret
into
inc
es
push
sbb
bound
dec
sub
push
add
popa
mov
pop
loope
leave
sub
in
push
ds
dec
or
movsb
and
cmpsb
out
push
push
adc
lods
jecxz
dec
sbbl
mov
cwtl
test
add
mov
mov
push
mov
push
test
push
das
xchg
imul
in
iret
lret
loope
jns
pop
ja
adc
mov
aaa
out
sub
or
ss
aaa
aad
sbb
daa
dec
cs
xor
outsb
push
cmp
cmp
xlat
push
pusha
jp
fs
pushf
aas
repnz
loope
sti
jbe
cmpsl
jb
xchg
push
clc
fwait
push
jge
jl
pusha
lret
fcompp
int3
insb
mov
mov
adc
arpl
cwtl
scas
cmp
push
data16
nop
out
mov
sarl
dec
test
clc
movaps
aam
iret
movsb
fisttpll
pop
pop
pop
int
notb
xchg
rolb
popa
sub
dec
clc
decb
jge
popa
jae
fcmovb
loope
and
cli
nop
mov
mov
xor
pop
rorl
rorl
fbstp
stos
ds
cs
push
adc
ret
sub
ret
test
shll
xchg
in
repz
shll
mov
mov
ja
mov
push
and
and
sar
push
insl
stc
push
daa
lret
xchg
mov
and
xchg
xor
cmp
jp
in
jge
cmp
inc
shr
addr16
xchg
xor
enter
fmuls
jae
dec
loop
sahf
push
jg
stos
and
jns
xchg
loop
rcll
xor
xchg
dec
loopne
jl
aam
cmpsl
nop
mov
dec
jmp
mov
cwtl
xchg
cs
test
pushf
cmpsl
inc
mov
loope
add
roll
ret
jg
cmpl
addr16
in
shll
dec
fmuls
movsl
je
cs
loopne
mov
popa
call
dec
sahf
mov
icebp
in
imul
loop
push
test
push
xor
add
aam
in
fiaddl
lahf
and
mov
gs
outsb
cmc
andl
xchg
xor
sbb
in
out
cmp
lahf
inc
xor
jae
adc
or
dec
shll
test
loop
jno
ret
inc
nop
add
push
and
or
test
leave
popa
push
in
mov
mov
pop
add
movsl
dec
movsl
fistpll
add
leave
das
jmp
cmc
sbb
cmp
pop
arpl
ret
sbb
es
xor
inc
js
lahf
dec
out
cmp
mov
xor
pushf
fisttpl
aam
test
push
rcrb
addr16
inc
inc
push
mov
pop
pop
aad
nop
icebp
int3
mov
sbb
xlat
ror
in
in
xchg
pop
shr
stc
dec
and
adc
stos
scas
jae
inc
mov
jmp
out
sbb
sbbl
mov
dec
loopne
fisttpll
jb
scas
mov
and
clc
add
sahf
lcall
sub
lds
bound
add
hlt
sub
inc
cmp
mov
jge
xchg
ljmp
inc
aad
int3
lahf
movq
sbbl
lahf
xchg
leave
or
adc
and
aas
inc
imul
test
pop
lea
mov
or
je
push
std
ror
adc
and
mov
std
aad
fdivrl
sbb
aas
insb
or
scas
jns
jp
mov
shll
fsubr
inc
sbb
insl
sub
frstor
mov
imul
xor
inc
xchg
jbe
iret
negl
pushl
imul
push
scas
in
pop
inc
mov
cmc
and
cli
jg
xchg
sbb
loope
jae
xchg
dec
jl
insl
outsw
stos
inc
inc
subl
lock
jns
inc
out
inc
les
pop
lods
and
mov
mov
nop
mov
jl
test
dec
xor
out
push
inc
insl
push
je
mov
pop
pusha
andb
stos
adc
adc
into
pusha
add
push
mov
sbb
and
movsb
sub
into
outsb
in
jo
adc
pushf
mov
pop
int
inc
test
inc
pop
sbb
push
sub
adc
sub
mov
sub
pushf
xchg
xchg
or
push
push
loope
imul
xchg
sarl
push
cmpl
subl
js
je
lcall
adc
mov
inc
jg
fdiv
adc
in
mov
inc
inc
fidivs
and
daa
aas
aaa
push
clc
daa
fcomp
add
cmp
mov
jmp
out
add
xchg
lods
xchg
repz
xor
cli
mov
and
push
xor
outsb
stc
mov
sti
pop
cmpsl
aam
std
add
lods
lret
adcl
jle
mov
je
mov
cmp
fnstenv
or
lock
or
insb
sahf
loope
dec
mov
jmp
loope
dec
jg
mov
mov
inc
in
loop
dec
lea
mov
je
push
int3
dec
mov
in
mov
repnz
pop
shl
push
cmpl
lock
cwtl
mov
rcr
push
sti
xor
dec
fs
lock
mov
sarl
cmp
cmp
adcb
or
and
push
or
popf
out
rorl
outsl
out
or
mov
xchg
mov
aaa
stc
mov
aaa
jo
pop
pop
dec
sub
mov
or
ljmp
sub
mov
xchg
jmp
leave
push
leave
cli
xchg
fs
jbe
jae
out
push
pushf
and
jg
xchg
mov
in
fs
clc
add
mov
cmp
inc
test
lock
inc
or
mov
popa
add
lahf
xchg
gs
leave
fldcw
mov
cmc
popf
ret
stos
jmp
or
aas
aaa
mov
dec
jne
aaa
call
push
push
inc
mov
and
pop
outsb
je
gs
subb
inc
and
jne
pop
add
roll
enter
ljmp
movsb
push
xlat
out
push
aam
jle
in
imul
push
ficompl
test
mov
dec
imull
and
and
mov
aad
jbe
ret
popa
filds
lock
mov
push
xchg
or
xchg
or
mov
cmp
mov
mov
aas
sbb
out
push
xchg
mov
pop
xlat
stos
pop
jb
xchg
clc
mov
cltd
lahf
test
xor
xor
dec
add
js
mov
adc
pop
imul
notl
dec
push
iret
and
out
adc
mov
pop
mov
xchg
cltd
lret
loopne
aad
sub
mov
scas
arpl
out
or
adc
imul
test
mov
cli
jg
in
movsb
jo
push
fcomps
sbb
mov
jmp
adc
cmp
rolb
push
cmpsl
cmc
xlat
test
rorb
in
shrb
dec
into
shlb
or
xchg
imul
adc
int3
mov
dec
or
cltd
test
mov
xchg
xor
imul
dec
ret
call
mov
and
rolb
gs
or
enter
push
loope
xchg
dec
arpl
sbb
mov
imul
pop
leave
cmp
fs
fcmovb
aam
fsubr
fldl
xchg
loopne
jg
or
xlat
inc
add
in
icebp
out
stos
or
imul
in
fidivl
enter
sub
lock
inc
iret
xor
or
loop
push
mov
sub
out
in
cs
out
std
jbe
jg
bound
mov
sbb
stos
popf
icebp
add
out
andl
addr16
jg
int
int3
mov
movsl
mov
adc
jle
and
adc
xchg
push
push
pop
push
mov
xor
in
or
mov
mov
mov
mov
adc
xlat
leave
sub
ss
xchg
daa
push
mov
adc
lret
leave
mov
jbe
arpl
inc
fildll
in
jns
test
jp
mov
imul
imul
sbb
les
aad
inc
out
pusha
loope
jae
out
mov
movsb
popa
inc
add
jp
mov
dec
loope
ret
rolb
scas
mov
aam
pop
popa
hlt
jmp
outsl
mov
or
jmp
enter
jmp
lcall
dec
bound
jb
dec
add
dec
pop
movsb
push
testl
test
ret
xchg
inc
sub
add
mov
add
jnp
lds
mov
mov
push
sub
mov
int3
fisubl
pop
repz
jb
cmpsb
scas
and
push
mov
push
addb
sti
inc
add
mov
dec
xchg
mov
add
cltd
popf
xchg
mov
or
mov
inc
jnp
adc
imul
mov
dec
sub
ret
repnz
jmp
insl
popa
and
data16
adc
xor
mov
pop
push
pop
out
jle
out
sbb
sti
cltd
orb
push
mov
xchg
jge
jmp
jg
aam
sbb
in
add
pop
sub
lret
mov
lock
and
sbb
sub
mov
dec
add
popa
clc
and
mov
es
les
push
std
lret
cmc
xor
push
ja
insl
inc
out
out
jecxz
data16
arpl
inc
sub
js
xlat
xchg
xchg
enter
int3
dec
pop
push
adc
add
fnsave
sbb
jecxz
repz
cmpsl
push
push
clc
push
ss
enter
mov
std
cld
add
stos
jmp
xor
pop
xchg
mov
and
daa
and
call
aas
addr16
outsl
xchg
xor
out
nop
sbb
sub
inc
sahf
jg
pop
adc
mov
xchg
aam
dec
push
xchg
movsb
xchg
sub
in
dec
pop
and
clc
movsb
add
jno
rcrl
test
in
inc
shrb
or
sahf
push
add
pop
xchg
cmp
loope
insb
outsb
stos
mov
pop
push
push
mov
cmp
lods
or
rcr
ja
xorl
and
lods
mov
lret
add
shl
pop
fadds
cmp
ds
push
sbb
xor
xchg
jecxz
std
inc
loope
jmp
cld
add
jne
rorb
popa
or
push
stos
pop
loop
add
leave
ret
mov
lea
inc
icebp
jnp
add
cmpsb
aad
out
inc
inc
xchg
imul
xchg
lods
mov
fstps
push
sbb
mov
dec
sbb
inc
ret
es
xchg
sub
xchg
xor
fidivl
jns
jns
pop
shlb
cmpsb
out
jle
pop
inc
push
cwtl
andb
add
pop
mov
xor
stos
in
fcmovbe
jl
add
xchg
pminub
sbb
je
inc
xor
xor
dec
lahf
adc
in
mov
iret
or
out
dec
jno
std
jo
ret
cmp
push
xor
rol
cmp
lods
push
cltd
cli
hlt
jp
into
pop
insl
sub
mov
pop
sbb
std
jae
dec
sti
scas
lds
sti
sub
clc
push
sub
cmpsb
mov
pop
push
sub
movsl
jne
fcmovnb
lret
mov
xchg
cmp
dec
clc
mov
mov
in
test
fiadds
xchg
das
mov
mov
jns
dec
sbb
jmp
inc
mov
test
hlt
out
aam
lods
mov
dec
dec
or
jl
std
psllq
xor
ffree
push
jb
lods
mov
cmp
cmp
sub
insl
add
je
ja
and
leave
aas
ja
pop
in
sbb
shrl
lahf
or
jne
mov
lret
pop
mov
jb
cmp
xor
call
inc
aas
mov
ror
pop
outsb
cmp
in
mov
add
rorl
and
test
lcall
push
mov
dec
ficoml
orl
mov
dec
out
jl
jecxz
rorl
sbb
sub
and
sti
shrl
xor
jecxz
inc
add
sub
xlat
xor
add
jno
cmp
imul
cli
xor
sub
push
cltd
test
pop
cmp
movsl
cmp
adc
push
jmp
loope
cld
aam
mov
pop
ljmp
dec
mov
icebp
push
in
sub
sbb
sbb
jb
icebp
jne
mov
pop
cmp
dec
fdivr
in
stos
mov
and
cmpsb
xchg
jb
inc
jl
cmp
jecxz
sbb
lahf
pop
xchg
and
stos
shlb
jg
xchg
jp
mov
or
pusha
sub
pop
xor
dec
mov
cmp
ficoml
mov
dec
test
xchg
adc
push
sti
adc
addr16
inc
push
sub
fsubrl
mov
repz
pop
mov
pop
lahf
test
dec
add
and
xchg
inc
push
add
sub
out
ljmp
push
daa
adcb
sarb
dec
inc
mov
test
stos
push
sbb
push
in
jmp
les
sti
out
lcall
cmpl
rorb
imul
push
pop
imul
jecxz
movsl
adc
loop
addb
pop
jle
das
fdivl
out
fcoml
aaa
test
out
lods
dec
jns
inc
test
adc
xchg
aam
mov
add
mov
or
or
cmc
xchg
jg
mov
movsb
xor
jae
dec
push
stc
ret
xor
push
in
mov
js
push
mov
lret
icebp
mov
and
nop
and
adc
jo
popa
push
daa
out
adc
cmpsl
add
dec
aaa
cwtl
sti
stos
or
es
sbbl
push
test
push
xchg
xchg
sub
loop
mov
push
sbb
mov
push
or
pop
jge
leave
xchg
stos
popa
mov
shll
sub
test
mov
les
adc
xchg
adc
sahf
test
lds
add
mov
rcl
xchg
repz
je
jmp
aad
pop
adc
and
push
out
mov
insl
and
mov
mov
mov
ja
stos
aam
jle
insb
nop
ss
ficomps
mov
psllq
fwait
mov
loope
jnp
mov
and
repnz
sub
mov
xchg
inc
jle
push
fimuls
dec
insl
jae
sbb
push
jns
js
int3
je
rorl
punpckldq
aas
adc
xor
cld
mov
mov
sbb
mov
bound
xor
push
mov
xor
push
mov
nopl
mov
sbb
sub
jne
out
rolb
cmpl
and
xor
mov
jge
add
icebp
negb
add
sub
or
loope
test
fsubl
enter
and
cmp
loopne
cmpsb
add
sbb
stos
clc
or
push
inc
mov
jge
sbb
lcall
jg
inc
add
or
and
imul
lahf
sbb
or
loope
aas
jns
inc
jg
or
loop
stos
pop
test
xlat
jge
test
daa
mov
mov
and
dec
nop
pop
pushf
jne
or
aam
inc
pop
into
int
rclb
cs
lods
or
pop
cli
sub
xchg
sub
or
add
or
lds
icebp
cltd
or
es
aam
pop
data16
mov
dec
es
mov
pushl
es
cmp
sahf
sbb
fistl
cwtl
mov
sbb
adc
xor
sti
cmp
aaa
int3
xlat
xchg
enter
lods
sbb
inc
xor
jge
daa
jns
out
jno
in
sub
test
fdivl
jns
and
jnp
adc
mov
inc
pushf
out
xlat
in
cltd
ret
addb
dec
mov
insb
lret
fwait
sbb
sbb
mov
in
mov
enter
adcb
sbb
sbb
xor
ret
cmp
cmp
lds
sub
fistps
lea
rolb
ja
lods
xchg
fisttpll
scas
inc
out
cwtl
sbb
clc
fbstp
cwtl
add
jbe
das
fisubl
sbb
repz
dec
jge
mov
and
cld
push
dec
jae
cli
mov
sbb
loop
cltd
mov
insl
adcl
mov
jle
out
or
jns
shrb
pop
mov
es
pop
roll
pop
jmp
add
adc
arpl
fisubl
out
add
pop
pop
mov
sbb
aam
ljmp
fimull
mov
fdivrp
sbbb
scas
jp
pushf
sbb
cmpsl
int
mov
jmp
pop
mov
addr16
fildl
loope
inc
out
out
loope
jns
fcmovu
aaa
jnp
out
add
xor
dec
inc
add
mov
ret
mov
mov
cmp
pop
push
pop
sbb
hlt
icebp
mov
lods
pop
sbb
aam
add
popa
sub
inc
or
stos
dec
lock
xchg
mov
aam
cmp
loop
vandps
icebp
or
sbb
clc
inc
push
ds
and
pop
loope
daa
add
mov
shl
or
mov
mov
sub
mov
aam
jb
dec
xor
xor
jmp
mov
sbb
mov
cmp
xchg
in
xor
xor
frstor
inc
pushf
test
ror
adc
jmp
loopne
cmp
jg
iret
rol
cmc
leave
movsb
jns
leave
stos
mov
daa
gs
std
or
mov
jge
lret
scas
cmpsb
fstpt
setle
jl
mov
sbb
test
mov
add
push
fucom
dec
adc
rorb
jge
and
addl
and
rolb
pushf
sbb
cmpsb
xor
testl
in
pushf
push
loope
movsl
push
cmp
bound
jg
test
dec
pop
inc
push
test
sbb
scas
movsl
fsub
or
mov
mov
ficomps
test
cltd
adc
push
lret
das
jnp
fisubrs
nop
roll
and
es
mov
std
pop
or
xchg
and
mulb
js
movsb
aas
mov
call
fdiv
in
mov
cltd
cmp
js
xlat
cli
fcoms
imul
inc
pusha
loope
and
add
pop
js
jb
inc
mov
stos
jo
sub
sub
out
adc
in
push
outsl
mov
mov
or
adc
in
mov
das
scas
push
cmp
lret
xor
addr16
loopne
in
pop
js
movsl
mov
xchg
or
mov
mov
or
dec
cmp
xlat
adc
imul
mov
insl
xor
xchg
ljmp
mov
jnp
push
mov
push
aam
sub
enter
pop
gs
es
js
xor
int
xchg
add
or
inc
sbb
sti
lods
jecxz
or
adc
adcb
dec
adc
mov
pop
xchg
pop
scas
icebp
push
daa
jae
jbe
iret
pop
and
inc
fs
loopne
call
mov
sarb
mov
xor
pop
jg
xchg
data16
stc
fiadds
pop
xchg
mov
inc
dec
enter
movsl
fiaddl
mov
jae
xor
repz
xchg
sub
fisubrs
adc
mov
push
jno
nop
repnz
xlat
mov
xor
outsb
js
call
mov
inc
mov
ret
popa
adc
aam
sbbb
fwait
daa
cs
inc
icebp
mov
jl
test
push
cmp
and
outsl
inc
dec
pop
test
aas
pop
push
inc
into
movsl
fld
aas
sar
dec
mov
sub
bound
cmpsb
jle
add
loope
mov
fildll
ror
mov
ret
sub
les
xchg
repz
cld
scas
loopne
mov
fildll
rcll
out
fistl
fistps
inc
mov
pusha
rcrb
cs
sbb
xlat
xchg
rcrl
daa
ret
out
hlt
call
ds
lret
into
inc
rclb
arpl
inc
jo
es
test
mov
pop
cmpsb
xchg
ss
mov
mov
popf
xlat
pop
fidivs
push
and
leave
inc
mov
aaa
lds
sub
ljmp
popl
stos
add
jo
shrb
mov
sbb
push
or
pop
lds
jbe
mov
push
frstor
cwtl
fcmovnb
push
add
mov
cltd
inc
mov
inc
mov
push
test
rorb
adc
sbb
xchg
xchg
adc
fidivrl
mov
imulb
and
aad
lahf
ret
add
sbb
cmp
negb
sbb
call
sbb
dec
add
std
dec
in
pushf
mov
sub
cld
xchg
int
addb
into
adc
sarl
mov
fsubl
sub
sbb
hlt
jae
dec
and
aam
idivb
xchg
xor
daa
dec
popa
and
pop
std
fadds
pop
fcmovnb
mov
pop
lret
pop
iret
add
add
mov
icebp
mov
jmp
sbb
ret
dec
sbb
pop
sbb
add
or
or
cmc
stos
or
roll
push
fisubrl
sub
bound
dec
shrl
xchg
cld
jnp
frstor
mov
lock
sbb
sub
lahf
sub
sbb
push
pop
sub
mov
pop
rorb
ret
xor
and
fmull
cmpb
sbb
push
mov
jne
sti
sti
or
sti
insb
cmp
jmp
pop
adc
push
out
imul
aam
inc
int
mov
ds
dec
or
in
sbb
lea
fisttpll
mov
adc
outsl
xchg
imul
lahf
les
call
int3
cltd
dec
jnp
sub
pop
jl
imul
xchg
or
pop
cmp
movl
jne
cmp
fisubs
cs
sub
and
cmc
cwtl
pop
inc
push
pop
mov
jecxz
shlb
dec
enter
jo
test
stos
decb
fs
cmp
sub
icebp
xor
into
ret
xchg
dec
ljmp
out
rcl
or
cmp
lods
lock
push
dec
ja
xor
mov
div
pop
imul
sbb
sub
xchg
sbb
push
dec
imul
sbb
aaa
lods
inc
push
xchg
xchg
sbb
xor
aas
pop
ret
or
clc
hlt
mov
daa
fidivs
out
rclb
sti
scas
fisubrl
popl
aad
dec
cwtl
aaa
subb
in
mov
stos
or
inc
ss
push
rolb
push
mov
cmp
scas
pushf
pusha
and
jnp
inc
jg
xor
pop
ds
test
mov
mov
push
mov
sub
lds
gs
into
js
gs
sbb
xor
loopne
das
jnp
adc
mov
out
popf
lds
mov
and
sub
cmc
xor
fucomi
add
les
adc
lods
clc
arpl
in
xlat
dec
addr16
aaa
xor
or
pop
mov
ret
jns
cmp
mov
iret
test
or
adc
sub
aas
mov
lock
pushf
push
xor
add
je
js
xor
xor
dec
lret
and
add
outsl
out
sub
mov
jmp
xorb
mov
adc
xchg
dec
lahf
insb
adc
jmp
repnz
or
and
cli
jge
ficoml
enter
sbb
mov
shl
cmp
lods
fildl
idiv
daa
pusha
cmpb
aaa
sbb
aas
pop
xchg
mov
loopne
cmp
imul
jle
mov
xchg
cmp
addr16
or
adc
mov
adc
and
in
adc
loop
shl
test
fs
nop
and
ret
or
scas
sub
test
sarb
ljmp
aaa
jp
test
or
lcall
orl
mov
rcrb
jb
lock
push
and
popa
adc
dec
push
jmp
xor
mov
imul
fnsave
mov
lds
sub
ficoms
dec
jle
sub
mov
cmp
lods
je
push
divb
cmc
xor
push
lcall
jo
push
movsb
stos
popf
push
in
out
cmpsl
jmp
notb
es
mov
popa
jo
jl
testb
sbb
repnz
out
je
and
ljmp
inc
or
fisubrs
hlt
scas
sbb
adc
push
sbb
push
mov
ds
or
add
xchg
adc
data16
or
add
xchg
ds
push
mov
push
clc
inc
jle
mov
lcall
pop
outsl
test
loop
xchg
mov
xor
nop
fisubrs
push
inc
imul
push
xor
into
push
fdivr
cmp
jns
xchg
jne
fisubl
cmc
adcb
cmp
lods
mov
lahf
inc
shrl
mov
cli
lea
fdivrs
adc
push
pop
sbb
mov
sti
xor
lret
push
cs
xor
push
mov
pop
push
ss
das
inc
adc
aaa
bound
push
mov
cmpb
mov
sarb
mov
dec
pop
lods
dec
inc
or
int3
addr16
mov
jno
addr16
inc
inc
clc
xchg
subb
add
and
sti
test
fimull
mov
ja
xor
jo
jno
adc
mov
int
clc
fldenv
fincstp
add
ja
xchg
mov
and
mov
leave
mov
or
cmp
jnp
mov
cwtl
ja
lcall
mov
xor
xor
loope
into
je
push
xchg
sub
les
repnz
and
push
and
sub
fistps
inc
cmpsb
out
fsts
daa
jmp
out
add
aaa
add
or
xchg
jge
in
cwtl
mov
jb
sub
xor
or
add
jp
mov
adc
sahf
sbb
loope
jmp
pushf
lock
sahf
inc
lea
out
inc
mov
mov
and
cmpsl
dec
mov
outsb
std
pop
inc
push
lcall
push
adc
sub
mov
dec
in
xchg
stc
xor
xchg
cwtl
incl
jmp
shlb
dec
inc
mov
mov
pusha
sbb
ja
js
fcmovbe
or
ljmp
sbb
push
push
pop
cmp
in
lret
int3
cmc
insb
cld
pop
nop
clc
pop
xor
std
xchg
ret
imul
fxtract
adc
scas
in
subb
xor
repnz
std
loopne
and
jb
dec
mov
fwait
push
mov
rorl
lea
jecxz
aam
flds
sub
lcall
out
add
icebp
pop
jnp
push
pop
out
sbb
add
mov
cli
in
add
ljmp
das
retw
jno
std
js
repz
in
mov
sub
rcll
lods
adc
fimuls
xor
gs
in
jo
daa
pop
jge
push
fisttpl
jns
das
sbb
dec
xor
in
or
lret
std
mov
sbb
test
icebp
adc
jb
pop
or
push
jp
addr16
push
mov
dec
ror
out
xchg
adc
mov
sbbl
sarb
movsl
push
call
and
int
pop
out
add
shl
mov
inc
mov
mov
push
dec
add
fs
or
sub
xchg
faddp
sub
pop
dec
scas
movsb
jmp
cmp
mov
lcall
dec
mov
cwtl
pop
jmp
test
cmpsl
jge
mov
in
and
push
movsb
jl
aas
xor
icebp
xor
push
leave
orl
insl
sub
adcl
xor
xor
out
mov
jp
push
cmpsb
dec
jle
sbb
popf
dec
repz
loope
xchg
sbb
test
lods
and
lea
jl
fcoms
rolb
mov
test
stos
lea
cltd
inc
icebp
movsb
xchg
pop
les
sub
jbe
mov
hlt
mov
aad
in
mov
adc
pushf
push
pop
add
pop
xor
lret
jnp
sbb
in
push
inc
cs
mov
fcmovu
cwtl
test
iret
xor
sbb
inc
mov
sbb
insb
mov
cmp
iret
mov
sub
adc
loope
push
fwait
leave
push
aam
sbb
mov
sti
out
mov
shll
clc
test
push
shrl
and
mov
xchg
cltd
or
arpl
sahf
xchg
jl
mov
mov
js
cmp
aaa
sbb
inc
xor
mov
sub
jg
jg
or
mov
loopne
mov
mov
dec
xor
jns
inc
xchg
mov
xchg
nop
xchg
xchg
cmp
lcall
add
sbb
push
fwait
cmp
mov
sbb
lds
pushf
pop
cmpsb
or
in
das
adc
aad
leave
mov
je
mov
adc
insl
cmc
dec
stos
ret
fbld
scas
rcll
aaa
xchg
pop
add
movl
xor
dec
orl
fcomps
call
xchg
test
push
into
mov
jo
cmp
pop
outsb
lcall
decb
mov
cmp
pop
cs
pop
incb
stc
mov
hlt
or
adcb
int3
rcll
mov
mov
ret
fnstenv
divb
mov
add
test
filds
push
and
mov
mov
sbb
xor
and
xchg
daa
nop
inc
dec
aam
mov
fisubrs
jmp
xchg
inc
sbbb
insb
mov
pop
cmpsl
jmp
sti
mov
sar
xor
popa
xor
out
mov
mov
lea
pushf
and
xchg
test
push
sub
cmp
jg
jp
enter
sub
mov
mov
rorb
adc
push
ret
js
or
mov
dec
jb
sbb
pushf
dec
insb
bound
imul
push
sub
mov
adc
jae
lret
mov
mov
sbb
out
inc
cmp
cmpsl
insl
xlat
dec
fs
ljmp
ja
xor
divb
je
xor
loopne
sahf
mov
xchg
inc
jmp
pop
lret
mov
add
aam
jge
imul
lods
jmp
outsb
sti
cmp
idiv
cmpsb
jnp
mov
inc
adc
pop
or
inc
sahf
xchg
dec
sbb
stc
dec
sub
push
popf
or
adc
fldt
je
mov
cmpb
pop
lea
cmp
ret
rolb
repz
add
mov
and
jl
or
fisttpl
cmpsl
sbb
mov
pushf
fwait
push
inc
nop
subb
lcall
jne
push
lods
leave
insl
mov
push
int3
xor
pop
ja
mov
test
in
lds
roll
xor
pop
pop
notb
or
hlt
aad
sbb
xor
mov
pop
push
cmp
sbb
lea
xor
mov
lea
insb
lock
int
xor
repz
and
and
lcall
lret
pushf
shll
pusha
repnz
or
mov
jge
pop
mov
leave
or
inc
lods
jge
in
xlat
loope
mov
nop
xor
xor
sbb
lret
in
xchg
inc
arpl
mov
loope
mov
movsb
add
mov
jge
and
xchg
mov
in
dec
lcall
xchg
or
and
aam
ret
lds
test
mov
mov
fadd
jnp
int3
or
lcall
pop
xchg
or
inc
add
cwtl
xor
jg
jb
lret
pop
insb
stc
or
lahf
bsr
push
push
call
mov
mov
pop
aad
outsl
mov
push
cmp
pop
mov
push
sbb
popf
or
sub
outsb
cmc
inc
negb
mov
jg
shll
dec
ljmp
pop
cmp
dec
add
inc
and
aam
or
mov
push
inc
iret
adcb
and
int3
push
pop
loope
mov
in
out
fsts
cli
pop
jp
shll
lret
push
xchg
and
in
jae
outsl
btc
mov
mov
sbb
sub
addb
in
pop
or
into
inc
jmp
and
and
dec
pop
mov
fimull
adc
xchg
jle
outsl
mov
mov
out
dec
pop
dec
test
add
outsl
lea
aad
fisttpll
out
sti
stc
out
xorl
in
xor
test
lods
ljmp
dec
lds
xor
mov
jle
sub
fnstcw
bound
sbbb
std
xchg
lcall
mov
push
or
sub
jbe
lret
orl
mov
int3
aam
adc
inc
lahf
mov
shlb
push
cld
xchg
test
imul
sahf
pusha
sub
repnz
or
shrb
and
imul
xor
nop
bound
je
jg
int
push
inc
pop
jb
pop
push
sahf
stos
and
ljmp
adc
cltd
imul
outsb
stos
notl
mov
mov
ds
mov
sbb
jg
cmp
fdivr
sbb
stc
sub
andb
inc
in
stos
dec
mov
cld
orb
jne
in
into
mov
xchg
out
cmpl
jecxz
pop
arpl
aam
push
ret
xor
scas
dec
inc
cmp
rolb
xor
data16
jle
inc
movl
dec
cmpsl
add
add
data16
push
dec
mov
shlb
ror
jmp
sbb
loop
jp
mov
pop
fldt
shrb
mov
cmp
dec
pusha
jb
jge
cs
mov
outsl
inc
and
jb
jecxz
mov
enter
adc
inc
popa
lcall
push
in
dec
jo
fisubrs
or
loop
jle
mov
xor
jb
jmp
and
enter
inc
dec
psubb
lock
enter
mov
bnd
dec
pop
xor
mov
and
sahf
xor
push
push
add
ljmp
mov
and
scas
aam
inc
test
add
icebp
jle
pop
rorb
cwtl
rcrl
pop
test
sbb
sbb
inc
push
mov
sbb
bound
bound
movsb
dec
cmp
lds
cltd
movsl
lods
in
push
pop
inc
mov
xor
insl
sub
sub
addr16
pusha
sub
mov
ljmp
out
xchg
rcll
dec
jp
jl
dec
xor
sti
cld
inc
mov
cmc
sub
outsl
jne
les
imul
test
fisubrl
clc
stos
testb
lods
js
icebp
out
rcrl
cmp
push
adc
mov
mov
fwait
adc
mov
test
push
xor
js
pop
shrl
jns
mov
pop
xor
les
lods
pop
cmp
mov
lea
repz
push
imul
mov
das
lahf
lds
hlt
and
xchg
mov
cwtl
insl
movsb
xor
cmp
xlat
iret
outsb
mov
adc
jg
xor
stc
jle
xor
out
jl
jmp
stos
xchg
movsl
jg
lea
sbbb
xor
ljmp
stos
lcall
xchg
es
jp
test
and
dec
mov
jnp
cltd
mov
xor
and
sahf
out
cltd
fcom
add
lds
call
push
dec
lds
fdivs
rclb
add
pop
ss
push
mov
andb
mov
cmpl
mov
pop
inc
ret
jge
and
or
inc
mov
popf
mov
mov
cld
add
insl
pusha
int3
loope
ret
bound
sbb
mov
and
out
pop
out
jmp
and
xlat
loope
popf
cmp
in
dec
inc
aad
push
add
inc
loope
push
es
add
jno
inc
loop
push
or
or
pop
vcvtps2pd
sarb
std
pop
jo
loop
loope
fsubr
in
out
ror
dec
mov
xor
xchg
jmp
pushf
mov
mov
pop
int3
xchg
xchg
lea
mov
inc
gs
and
test
xor
inc
sti
lock
mov
mov
ret
inc
les
cmp
sub
push
sub
sub
adc
dec
mull
dec
mov
mov
and
lds
out
xchg
cmpb
mov
add
out
clc
rclb
fs
lods
jo
test
fiadds
adc
jb
test
rolb
test
xchg
shll
mov
dec
lahf
lahf
lahf
pop
mov
cli
pop
cs
pop
imul
push
mov
xor
aas
ret
jno
or
mov
out
shrl
dec
int
lss
xchg
das
mov
adc
sbb
inc
lock
stc
test
cld
in
mov
nop
movb
jno
pop
fldcw
xlat
cmp
out
push
pushf
xchg
dec
jb
cmp
bound
movsl
rcl
pop
movsl
hlt
jle
xchg
push
pop
xor
push
int
clc
jne
stc
pusha
fldt
mov
fistpl
daa
rolb
mov
cmp
mov
lahf
push
rcll
adc
xor
cs
out
mov
jns
lods
daa
pop
aad
loop
push
inc
fiaddl
push
jmp
fisubl
mov
setp
xchg
mov
or
inc
or
stos
jo
addb
inc
xlat
xor
mov
imul
stos
jecxz
jg
inc
push
test
fistps
xor
inc
fdivrs
mov
es
arpl
out
outsb
sbb
cmpsb
jg
adc
in
jbe
test
aaa
aaa
iret
outsb
movsb
pop
jnp
jne
xchg
xchg
mov
and
push
cmpsl
outsl
cwtl
imul
mov
xchg
sub
mov
add
xorl
fcomi
mov
in
pop
mov
jb
loopne
cltd
sub
jmp
mov
sbbb
pop
pop
iret
icebp
lock
sub
xor
in
push
int
outsl
lods
mov
push
popf
push
int
xor
pop
mov
mov
mov
arpl
notl
push
aaa
sub
sub
aam
cmp
push
inc
repnz
dec
mov
xor
cs
add
xor
repnz
sub
dec
orl
mov
and
mov
mov
cs
jb
add
lret
mov
std
pop
inc
push
or
test
bound
je
shlb
addr16
shlb
icebp
repnz
iret
add
xchg
cli
pop
ja
inc
sub
jae
ljmp
flds
xlat
out
test
push
xor
dec
out
mov
mov
std
xchg
sub
mov
mov
sbb
adc
cmpsl
mov
inc
gs
mov
insl
fucom
inc
dec
std
and
inc
jle
enter
outsl
shrl
js
loop
orb
movsb
push
adc
inc
and
insb
stc
mov
push
in
or
addr16
jg
or
pop
adc
push
movsb
aaa
insb
shll
test
add
lcall
sbb
adc
loope
push
sub
test
les
call
push
dec
aaa
arpl
fdivl
xor
lods
xor
or
lods
mov
test
cmp
inc
hlt
lods
shl
inc
int3
ret
cmpsl
xlat
jl
nop
fnstcw
imul
mov
in
xor
into
sti
xor
sahf
adc
cmp
add
jnp
jg
jge
dec
mov
inc
hlt
and
in
cmp
shl
js
fistpll
mov
push
cs
rclb
jl
outsl
xor
cli
int3
idiv
incl
adc
xchg
push
inc
sbb
lret
orb
adc
daa
adc
dec
call
cmp
insl
xchg
lcall
xchg
repz
ja
in
shlb
xlat
cmc
subb
inc
js
adc
or
js
sub
sarb
xchg
inc
xchg
adc
jae
jae
sbb
imulb
dec
hlt
and
adc
xor
sahf
into
fldcw
inc
cltd
dec
lret
or
mov
or
lea
cmp
adc
inc
test
in
test
pop
inc
dec
iret
mov
call
mov
mov
sub
push
mov
testl
shl
jb
imull
imul
xchg
jmp
pop
dec
pop
lods
or
cld
mov
popf
jb
iret
popf
dec
adc
mov
hlt
sub
stc
jnp
push
lret
js
aad
lret
xchg
jae
push
sti
data16
mov
test
xor
faddl
and
jle
sbbl
dec
das
pusha
enter
mov
loop
fstp
andl
out
shl
rcl
or
jnp
in
xchg
add
fmuls
add
sti
adc
in
adc
shl
mov
sbb
cmp
and
sub
mov
sbb
lret
scas
movsl
jne
mov
jp
pop
jmp
xor
iret
push
add
enter
mov
leave
arpl
push
js
cmp
addr16
adc
jne
insl
jno
mov
subb
or
loopne,pt
xlat
xor
cs
imul
push
xchg
mov
enter
jnp
push
cwtl
mov
or
pop
scas
insl
cmp
movsb
fisubrs
mov
fildl
fidivrs
pop
push
pop
add
dec
mov
shll
add
fisttpll
loope
dec
mov
mov
cmpsl
sti
stos
mov
jle
icebp
push
sbb
sub
loopne
lahf
adc
test
push
sub
xchg
xor
out
mov
xchg
adc
jne
xchg
xorb
push
jae
pop
pop
xor
xor
out
xchg
dec
leave
js
jb
inc
test
add
mov
jge
repnz
enter
cmpsl
imul
and
jb
mov
insl
rorl
jg
rorb
testb
out
sti
jnp
out
push
or
pushf
pop
test
movsl
or
jge
test
xor
mov
sub
adc
push
jp
in
mull
adc
xchg
or
adc
test
dec
jno
push
jae
les
pop
dec
cmp
jo
xchg
push
fs
cmp
push
mov
xchg
cmp
add
cmp
mov
pop
mov
pop
daa
stos
inc
xor
aad
push
sbb
repz
enter
or
lret
mov
sbb
sbb
push
int
dec
pop
mov
push
sbb
mov
sbb
mov
stos
or
or
add
in
adc
pop
mov
loopne
imul
mov
jg
stos
sub
ret
sub
inc
fisubs
pop
pusha
mov
les
popf
nop
xchg
lret
pop
fimull
xchg
js
adc
add
or
ficoml
outsl
cmc
rorl
mov
push
jle
cwtl
gs
fld
loop
shlb
scas
fildl
outsb
mov
pop
dec
jno
outsb
pop
or
and
aam
fdiv
test
outsl
adc
ja
je
xchg
std
pop
cs
mov
and
xchg
sub
repnz
jge
mov
js
cld
insl
push
mov
jge
out
in
popf
int
iret
jns
dec
jno
pop
lods
lcall
inc
cmpsb
test
lock
cmc
js
sub
xor
push
std
lock
pushf
repnz
sti
insb
pop
dec
ret
pop
js
mov
cmp
sbb
gs
cs
scas
cmc
mov
push
and
push
jo
mov
cmp
pushf
ret
mov
xor
imul
or
sbb
push
sub
push
sbb
sub
and
lcall
xchg
shrb
sbb
incb
gs
and
push
pop
inc
out
das
call
pop
rorl
push
fmul
leave
or
shr
mov
inc
xlat
push
in
pushf
dec
push
stos
sahf
jae
sti
aaa
fwait
cs
test
pop
dec
js
push
fiaddl
adc
adc
aam
mov
test
mov
pop
dec
dec
dec
in
and
daa
inc
inc
mov
aam
stos
add
or
add
add
fmuls
pushf
cmpsl
adc
mov
push
jnp
or
clc
call
or
push
jle
scas
xor
nop
mov
shrb
insb
sub
fimull
mov
imulb
mov
cmpsl
sub
leave
lret
aaa
sub
inc
lods
mov
xor
ja
jbe
sbb
lods
push
mov
lea
mov
mov
insb
adc
orl
xchg
aam
loopne
mov
mov
jmp
mov
adc
push
std
xor
lods
popf
loope
clc
fcmovnb
mov
adc
cmpsl
jp
ja
or
call
subl
push
jne
xlat
ficomps
lods
xchg
mov
out
dec
lods
xor
aam
mov
pop
stos
insb
jle
in
pusha
jne
call
adc
cli
sbb
jg
loope
jp
aaa
mov
cmpsb
lods
mov
sbb
or
jne,pn
or
push
sarl
sub
sbb
xor
int
adc
sbb
push
sub
dec
mov
in
inc
and
clc
cs
mov
dec
and
sarl
xor
lcall
dec
test
mov
inc
mov
add
jo
xchg
mov
or
sub
cld
cwtl
jle
pop
and
imul
sahf
dec
push
loop
loop
lock
mov
fdivl
test
cmp
ss
enter
sub
push
cmpsl
push
ffree
xchg
dec
or
sbb
mov
sbb
sahf
mov
and
dec
pop
inc
scas
or
jecxz
or
sub
jle
into
notb
fucomi
shl
cwtl
sbb
sbb
insb
inc
inc
inc
xchg
out
sub
adc
shr
in
inc
inc
mov
insb
in
mov
dec
hlt
fidivs
cld
and
ror
test
add
fisubrl
cmc
sahf
outsl
in
pop
outsb
or
std
cld
jge
dec
rcr
mov
inc
add
add
int3
cmp
mov
mov
cmpb
sub
jle
push
insb
outsb
push
lcall
inc
add
add
aas
cmp
mov
ss
fwait
xor
das
dec
ds
xor
pop
repz
adc
push
push
mov
xor
out
add
lods
in
imul
shlb
stos
loopne
adc
and
inc
loopne
or
cmp
out
add
out
xchg
mov
stos
addl
les
fimull
stc
pusha
mulb
pop
or
daa
loope
push
push
xchg
aaa
add
dec
xchg
sarl
jne
pop
xchg
in
cmp
mov
mov
or
adc
pusha
std
aaa
loopne
fdiv
in
adc
imul
daa
and
inc
add
jo
mov
mov
sbb
idivb
inc
sbb
mov
ror
lods
xchg
and
jl
sahf
cwtl
test
sub
in
es
push
jg,pn
mov
xlat
jne
mov
mov
dec
testl
xor
xchg
add
add
xor
call
push
stos
test
pop
cmpsb
lret
test
xor
xchg
jecxz
xchg
loop
shll
jle
mov
das
stos
and
lcall
bound
outsb
mov
iret
stc
pop
nop
mov
cmp
sbb
in
outsb
mov
iret
sub
es
cmp
pop
jmp
sbb
push
mov
dec
rcrl
pop
xchg
add
loop
jmp
ds
cmc
mov
jbe
or
sub
enter
cli
mov
cmpsl
xlat
pop
adc
adc
leave
add
mov
pop
xchg
push
sbb
outsb
xlat
sahf
xchg
inc
inc
add
add
dec
lock
inc
dec
xchg
sarl
outsl
xor
xchg
mov
scas
jl
fisttps
dec
mov
cltd
sub
test
xlat
test
pop
das
cli
sub
ret
fsubrl
and
loope
adc
mov
and
jle
into
aam
sbb
cld
stc
in
xchg
fbstp
nop
mov
sbb
lahf
jo
mov
loop
jg
pop
lods
push
push
cmp
sbb
loop
pusha
cltd
jge
aas
aam
xor
ljmp
fcoms
xor
pop
and
lea
push
mov
jecxz,pn
repz
add
add
xchg
push
pop
push
popa
mov
sarl
cmpsb
lds
xor
sbb
and
pop
adc
cmp
pop
add
fbstp
rcr
add
mov
mov
jecxz
dec
mov
mov
cmpsb
and
cmpsb
jmp
fadds
aad
jns
sub
pusha
lahf
adc
xor
pop
int
mov
enter
pop
fnstenv
mov
xchg
aam
cmc
jo
mov
cmc
mov
push
ja
lods
or
mov
adc
lds
lds
sarl
lcall
add
push
test
ja
xchg
out
ljmp
daa
add
jl
insl
cmp
ja
out
and
push
mov
loopne
repnz
cmpsl
jp
adc
adc
imul
lret
add
jno
std
les
sub
fucom
ret
rcrl
test
mov
push
pop
int
cwtl
pusha
pop
out
int3
jl
mov
add
inc
in
xchg
jbe
push
push
das
bound
scas
push
xchg
test
mov
negl
dec
jnp
inc
jp
jo
leave
mov
mov
jae
fcmovnb
cmp
mov
pop
cltd
or
not
sub
pop
push
mov
arpl
mov
dec
test
dec
fmul
pop
mov
in
jg
cmp
inc
mov
jp
stc
out
lods
bound
mov
ljmp
push
mov
repz
sbb
mov
popa
jl
jmp
cmc
adc
leave
rorb
add
das
mov
js
add
imul
inc
shrb
and
jmp
jae
shrb
sub
sbb
add
xchg
das
test
add
xchg
insl
add
push
lods
subb
xchg
pop
test
mov
movsb
cmpsl
jns
clc
daa
lret
sti
call
cmpsl
jb
add
scas
addb
into
int
pusha
int
adc
nop
dec
lods
mov
mov
xchg
int
jb
fistps
or
jge
push
push
mov
js
lods
inc
push
int
jmp
lfs
out
popf
adc
call
jns
mov
andl
leave
ja
add
outsb
int
xchg
fstps
dec
in
iret
pop
lret
pop
mov
xor
int3
dec
call
or
pop
std
test
adc
cmp
lods
xchg
and
es
sub
fisttps
jecxz
shrb
mov
xchg
xor
mov
jbe
outsb
jp
movsb
and
pop
cmp
cltd
ret
push
hlt
faddp
fbld
and
lahf
xor
mov
jo
inc
adc
jnp
popf
mov
push
shrb
and
sti
sbb
stos
in
add
lret
adc
mov
push
xchg
mov
movsb
out
push
xor
js
mov
scas
mov
fisubrs
mov
mov
dec
test
mull
imul
and
mov
leave
xor
insl
subl
cmp
subl
test
pop
mov
mov
test
mov
xor
inc
xor
iret
mov
pop
xchg
or
sub
xor
sub
cmp
scas
mov
hlt
add
sub
xchg
xchg
pop
repz
dec
push
mov
fisubs
push
icebp
pop
lret
enter
and
stos
mov
inc
mov
jmp
stos
and
pop
pop
xchg
and
sbb
stc
sahf
in
pop
je
jmp
mov
xchg
sbb
out
sbb
and
std
push
flds
ds
cld
fstps
inc
imul
pop
imul
jb
push
int
es
and
add
jae
int3
cmp
movsb
shl
mov
clc
inc
vmwrite
orb
insl
jns
cmpsl
jne
ljmp
sbb
rol
ret
cltd
inc
icebp
adc
dec
lds
jne
cmp
clc
hlt
push
arpl
dec
sub
insl
dec
push
pop
gs
sub
jne
pop
xor
lods
notl
addr16
ljmp
pop
sahf
mov
xor
mov
xchg
xor
mov
mov
mov
filds
mov
xchg
pop
mov
jecxz
cmp
sbb
out
sub
sbb
lcall
cld
pop
xchg
hlt
enter
fnsave
stc
mov
enter
mov
push
sbb
or
outsl
push
cmp
lock
out
out
inc
je
pop
push
jmp
aam
jp
sbb
mov
nop
mov
nop
mov
test
ffreep
les
dec
adc
inc
mov
jo
xlat
fisubl
sahf
hlt
addr16
roll
xchg
or
push
and
loope
add
dec
xor
cli
push
fbld
lahf
add
or
jbe
jle
and
scas
pop
in
push
mov
xor
sbbl
mov
or
stos
mov
jle
inc
cmpsb
lds
clc
out
push
xor
in
xchg
inc
popf
jmp
push
push
mov
lds
es
mov
sbb
pop
ror
add
mov
orl
stc
pop
adc
jno
scas
pusha
das
mov
sbb
test
and
inc
mov
in
adc
leave
imul
cmp
inc
mov
and
cwtl
das
jns
mov
push
cmp
pop
mov
inc
dec
movsb
out
or
sbb
jge
f2xm1
aad
loopne
or
jbe
les
pop
dec
jns
push
sub
push
andb
cmpsb
imul
lods
pop
pop
sbb
out
fstps
cmp
or
inc
pushf
sub
mov
dec
sbb
mov
mov
lods
scas
sbb
stos
dec
hlt
push
lret
push
pop
inc
cld
dec
mov
mov
aas
and
popa
inc
lahf
je
add
dec
repz
mov
mov
add
inc
lahf
ss
add
xor
xor
jnp
shlb
cltd
les
xchg
sub
lods
inc
jg
jnp
sub
mov
bound
lds
data16
jnp
aad
lea
cltd
sti
nop
jp
out
aad
movsb
jp
je
mov
hlt
adc
in
cltd
add
lock
cmp
cltd
lret
dec
inc
mov
jg
mov
push
inc
repz
loop
and
adc
scas
pop
cltd
lret
adc
pop
aaa
inc
add
jge
addr16
xor
inc
aam
sbb
lahf
enter
mov
lret
fwait
pop
fistpll
scas
test
mov
mov
leave
fisubrl
bound
push
fdivs
jg
shl
push
out
sub
outsl
mov
jne
cmpsb
add
lret
jmp
and
or
sbb
or
and
or
jge
pop
mov
scas
in
pop
pop
into
sbb
pop
movsl
fwait
ljmp
and
push
dec
cmp
test
and
cltd
lds
mov
inc
adc
iret
scas
loopne
fbstp
out
call
push
push
int
gs
roll
jmp
shl
add
popa
ss
mov
fstp
push
ret
mov
in
push
loop
popf
outsl
sarl
ret
ret
xor
jp
je
pop
push
fs
popf
sbb
imul
test
mov
arpl
or
mov
push
sahf
and
jns
cmp
lret
outsb
mov
mov
mov
push
cltd
aad
das
mov
into
or
mov
call
cs
fadds
cmp
pop
movl
insb
dec
add
dec
jge
arpl
push
ljmp
mov
mov
je
outsb
jge
mov
add
dec
fs
out
popa
mov
jmp
in
nop
cmp
jb
mov
xchg
xor
xchg
push
test
int
pop
sub
fimull
inc
fisttpl
and
loopne
sub
and
stos
mov
andb
gs
mul
shll
adc
js
push
ds
jo
inc
pushf
lahf
rcrb
adc
and
jmp
sbb
popf
mov
in
push
outsl
imul
inc
int
xor
push
out
adc
shrl
movb
shll
dec
xchg
pop
hlt
push
shll
sbb
pop
rclb
in
and
sub
outsl
xor
cmp
fisttpll
xchg
into
jno
mov
mov
hlt
aad
mov
sbb
xchg
xor
sbb
jae
cmp
or
jmp
lahf
mov
fs
push
push
or
cltd
notl
mov
movsl
aam
pop
nop
out
test
subl
test
test
xchg
icebp
aas
lcall
adc
jo
mov
mov
outsb
cmpsb
push
in
pop
fsts
mov
dec
or
push
out
cmp
testb
pop
negl
jmp
test
lahf
inc
dec
sbb
push
sub
aaa
sti
sbb
cld
pop
hlt
es
repz
mov
mov
adc
push
div
xor
push
mov
push
mov
mov
add
dec
lds
sbb
jg
scas
mov
mov
addr16
pop
sbb
sbb
jb
adc
in
push
mov
inc
repz
jge
cmp
ret
pop
mov
ret
push
xorb
fwait
mov
jle
sub
jb
sbb
out
imulb
xchg
jge
or
lods
push
inc
mov
lds
stos
sbb
stos
sbb
cltd
sbb
add
test
dec
pusha
loope
mov
leave
jp
fiaddl
popf
and
xchg
scas
loop
hlt
mov
mov
add
cmp
out
or
loop
or
testl
push
std
sarl
sti
pop
mov
sub
les
adc
and
lock
jnp
jge
arpl
adc
aas
inc
aam
sbb
adc
add
xchg
xor
stc
in
movsb
mov
dec
fsubrs
aaa
jmp
sbb
mov
xor
repz
scas
and
sbb
dec
int3
mov
pop
mov
mov
add
jge
cmp
sub
stos
cmp
push
imul
xchg
iret
ja
jo
fisttps
or
and
mov
std
pop
ja
shrl
adc
jne
dec
jg
mov
xor
push
jnp
mov
mov
aas
mov
sbb
mov
add
push
in
mov
push
lods
jl
xor
sbb
cwtl
lret
xchg
lahf
orl
mov
mov
enter
int3
iret
shrb
out
cmp
mov
aam
pop
adc
pop
dec
fmull
insl
das
xchg
cwtl
cmp
paddusb
sub
mov
es
pushf
in
cwtl
test
xchg
iret
cmp
shrl
push
cs
iret
lock
xchg
out
stc
jmp
mov
add
jo
bound
jno
push
aas
stos
sbb
pop
xor
jnp
not
dec
popf
adc
jnp
cmp
jle
mov
add
jno
sbb
ret
aad
xor
inc
adc
inc
adc
fiadds
mov
cmp
sub
and
rcrb
or
mov
add
in
mov
shlb
jmp
or
inc
mov
or
and
lds
int
gs
mov
stos
adc
lods
stc
sub
lock
aad
pop
testb
or
adc
in
xorl
enter
das
push
pushf
jge
inc
xchg
and
cmp
sbb
jp
dec
or
cmp
sahf
cmc
sbb
push
outsb
sbb
dec
data16
push
sbb
xchg
xor
pop
aaa
cmp
pop
adcb
or
in
adc
xor
jg
lods
add
mov
and
mov
push
jecxz
pop
icebp
sub
decl
test
cmp
mov
add
ss
sbb
flds
clc
mov
testb
gs
sbb
push
pop
test
movsb
lds
nop
into
mov
adc
xchg
xchg
mov
movb
pop
loopne
stc
int3
mov
cli
cld
xor
subl
mov
xor
dec
mov
imul
sbb
sti
ficomps
insb
dec
push
lods
jae
or
add
cmc
sub
mov
add
scas
mov
repz
sarb
xor
mov
jb
hlt
pop
mov
ret
cmp
sub
call
fs
sub
lock
stos
push
jo
cmc
jmp
xor
dec
push
rcrb
xor
outsb
ja
cmc
adc
rcrb
mov
mov
xor
ret
push
cmp
hlt
mov
imul
mov
pop
push
ret
and
jp
xchg
outsb
mov
fdivrl
push
stos
mov
xchg
jns
icebp
sbb
sub
loop
pop
pop
push
gs
cwtl
cmp
add
jae
mov
nop
sub
dec
jl
mov
fsubs
insl
dec
sbb
xchg
jae
or
fildll
pop
fs
movsl
lea
xchg
push
adc
mov
sub
mov
les
aaa
pop
dec
jo
aas
xchg
inc
scas
rcr
flds
or
dec
pop
cmp
call
filds
mov
sbb
arpl
xor
cmp
cmpsl
or
dec
inc
sub
mov
pop
in
fimuls
out
shll
jb
xlat
mov
ljmp
rorl
hlt
loop
mov
leave
test
or
mov
sub
lcall
out
and
sti
fcomps
int3
in
jbe
popa
xchg
scas
ret
push
popf
sti
inc
call
mov
repnz
adc
mov
test
jb
sbb
imul
pop
cltd
mov
cld
dec
cli
je
push
dec
call
sbb
ret
fstl
sti
add
ret
or
out
test
adc
ror
push
jae
out
clc
in
adc
loop
out
jns
lds
ss
adc
cwtl
pop
dec
push
in
loop
adc
xor
push
jmp
loopne
pop
mov
inc
sarb
sarb
xchg
sahf
push
in
mov
outsb
jp
inc
es
inc
lods
sub
adc
cmpsl
pop
enter
push
into
pushl
lea
movsl
inc
mov
jo
cmp
mov
mov
into
in
or
movsl
push
pop
mov
lret
jl
inc
push
ljmp
push
fwait
mov
jne
inc
por
mov
mov
int
movsb
stc
jno
cmp
xor
icebp
pop
dec
mov
iret
mov
inc
lahf
dec
push
dec
adc
push
mov
add
test
xchg
das
cmp
dec
push
mov
arpl
mov
les
xor
push
sbb
bound
mov
adc
mov
mov
jecxz
cmp
fcoms
jg
mov
cli
repnz
lcall
jmp
jno
imul
jecxz
aaa
in
pop
xor
aam
push
add
xor
xor
int3
add
inc
sbb
lret
xchg
mov
xor
shll
and
sbbl
jg
cmp
and
fistl
repnz
cli
add
daa
subb
push
sbb
pop
mov
int3
mov
jg
cmp
push
pop
lahf
test
xlat
xor
sbb
xor
adc
push
cmpsl
shll
cli
jo
or
in
cmp
jge
out
testl
dec
inc
js
outsb
dec
stos
popf
sub
neg
out
mov
outsl
mov
sub
rcl
pop
repz
lea
das
insl
fimull
dec
js
cmp
jmp
inc
xchg
lds
call
pop
and
mov
scas
cld
lods
int
scas
fistpll
cld
test
mov
pop
cs
cwtl
pop
add
out
aam
sarl
cltd
js
push
insl
xchg
pop
mov
adc
es
and
xchg
jnp
xchg
and
xor
pcmpgtw
fisubl
and
lret
or
cmp
cmp
cltd
test
repnz
pop
mov
mov
cwtl
push
jg
mov
hlt
mov
test
je
mov
lds
shlb
xor
scas
add
xor
insb
jbe
adc
and
inc
inc
adc
inc
sahf
cltd
and
fdivr
fwait
shr
push
mov
inc
rdtsc
shll
jno
sub
sub
xor
mov
pop
inc
pop
dec
je
fdivr
out
or
push
cltd
shll
or
lea
sbb
dec
mov
inc
jmp
jge
jle
loope
leave
rol
push
negb
jle
ja
shrb
les
jno
shrb
jno
dec
add
cwtl
dec
std
repz
call
add
fiadds
int
insl
and
aas
dec
adc
jp
xor
sub
jl
icebp
jno
les
js
mov
pop
das
mov
insl
aam
xchg
mov
fadds
mov
test
fcomip
mov
xor
push
fisubrl
cmp
add
adc
into
jb
pop
or
push
fisttpl
xor
cmp
mov
clc
lret
daa
addl
enter
and
adc
adc
notl
sbb
cmc
cli
fwait
adc
mov
fistpll
inc
cwtl
xchg
mov
sbb
fldcw
daa
aad
adc
ret
push
ss
push
inc
icebp
jle
shr
movsl
push
sbb
push
enter
popa
cmp
sbb
inc
test
push
scas
or
fistps
and
add
jg
ret
in
ret
mov
arpl
sub
jo
mov
cmpl
shl
or
aam
push
aaa
add
lret
cmc
cld
cli
out
rol
or
inc
clc
mov
in
addb
dec
dec
lcall
jecxz
xor
xchg
addr16
loop
clc
vrcpss
andb
insl
stos
jae
sti
and
icebp
pop
sbb
xor
into
lahf
cmp
mov
in
mov
xor
cmp
sbb
cmp
test
cwtl
pmullw
mov
push
mov
fnstcw
or
leave
outsl
sarb
lds
fcoms
ficompl
cld
sbb
scas
push
xor
jp
mov
mov
sti
or
dec
inc
enter
lods
bound
mov
lods
mov
add
ja
sbb
icebp
popf
or
jmp
jo
inc
ds
dec
jge
pop
xchg
das
jg
mov
add
leave
or
inc
jno
and
outsb
xchg
inc
and
enter
jb
mov
or
jno
loope
jmp
int
or
lods
fsubl
sahf
or
sti
cmp
cmp
jo
movsl
lret
das
rcll
cmc
inc
add
aaa
push
mov
fidivrs
sbb
andl
jmp
xchg
and
and
incl
ror
jae
pop
add
push
or
xor
mov
inc
xchg
push
mulb
out
or
jp
mov
xlat
mov
aaa
dec
cli
push
repz
frstor
lock
aaa
test
mov
fcoms
xchg
pop
cs
inc
sub
dec
add
jbe
mul
xchg
iret
out
shlb
cmp
sarb
cli
cli
inc
hlt
or
fs
imul
add
and
mull
xchg
adc
into
decl
and
je
sti
ret
fs
and
cs
jp
push
xor
fs
divl
lea
mov
sarl
arpl
pop
xor
xchg
pop
out
test
adc
or
pop
ret
dec
aam
sub
push
mov
into
in
hlt
xchg
push
adc
jmp
mov
int3
insl
in
jge
mov
push
fs
pop
jmp
int
add
dec
or
mov
mov
mov
xchg
sub
adc
or
xor
push
in
add
xchg
fs
xlat
mov
fwait
repz
adc
pop
and
pop
or
jle
inc
cmp
cmp
shrl
and
cs
push
in
lret
outsl
cli
arpl
push
add
out
insl
inc
in
cmp
cmp
jno
push
jmp
mov
jmp
popa
seta
gs
je
dec
adc
lds
cmp
push
push
imul
cmp
rolb
sbb
mov
ljmp
bound
pop
lea
and
arpl
rcr
xchg
mov
push
dec
cmp
out
pop
push
mov
js
call
dec
outsb
sahf
dec
and
pop
mov
je
adc
test
cmpsb
fisttpl
pusha
js
push
rcl
mov
dec
dec
je
nop
push
popa
loope
pop
lcall
insb
imul
mov
dec
sbb
movsb
ljmp
in
sbb
push
sub
jecxz
mov
adc
test
pop
inc
lret
sub
sbb
jg
xchg
add
ret
lods
or
push
fstps
jecxz
jle
push
pop
gs
jae
std
pop
movl
mov
dec
mov
inc
dec
xor
push
shrb
stos
popa
or
xchg
lcall
inc
nop
mov
out
inc
lock
jge
mov
pop
out
incb
inc
pcmpgtb
xchg
xorb
pop
push
and
mov
sbbl
inc
xor
cli
cwtl
lahf
add
fsubrl
lods
aas
hlt
jg
cld
movsl
jb
mov
cmp
dec
jp
xlat
push
int
sti
jnp
adc
sub
ss
pop
arpl
inc
or
cmp
push
lods
bound
int
xor
mov
sbbl
xchg
adc
inc
cmpsl
inc
and
lcall
sbb
pop
das
pop
lret
xor
sub
cs
jno
vmread
push
sub
dec
xchg
cmp
cmpsl
or
stc
cmpb
push
jecxz
adc
mov
out
aad
gs
push
call
lea
or
iret
arpl
ljmp
int
das
scas
jb
rcrl
pusha
repz
mov
idivb
scas
rcrb
imul
cmp
inc
xlat
mov
test
ja
fistps
pop
ja
call
add
jnp
sub
jne
pop
mov
xchg
lock
repz
xor
inc
dec
xchg
or
push
ljmp
rcll
dec
mov
ret
push
out
ss
cmpsl
sub
adc
mov
push
test
pop
push
inc
xchg
insl
clc
leave
sub
mov
push
xchg
sbb
and
ret
pop
pextrw
lods
jne
scas
lea
daa
roll
lods
mov
xchg
adc
in
inc
or
imul
gs
xchg
add
push
sbb
push
lea
fsub
je
std
rorb
mov
popa
ret
mov
lods
mov
or
inc
push
xchg
add
pushf
jp
cmp
sub
cltd
andb
movsb
dec
popf
fiaddl
es
pop
divl
outsb
sbb
clc
jge
pop
adc
sbb
xor
xor
add
inc
stos
push
push
or
xchg
push
fiaddl
jae
sbb
jmp
insb
jl
xor
cld
pop
push
dec
xor
hlt
sub
cmp
inc
push
sub
movsl
ret
leave
mov
jo
push
stos
cltd
jp
into
push
psrld
mov
sbb
pop
adc
lock
test
cmp
adc
mov
mov
ss
xchg
push
or
fs
popf
std
les
inc
xlat
popf
adcb
int
cltd
and
sbb
ret
hlt
pop
pop
imul
outsb
clc
dec
pop
inc
enter
pusha
ret
test
inc
mov
fmul
or
pop
or
pop
popa
push
sbb
push
jle
inc
mov
and
and
stos
xor
inc
mov
fdivrs
sub
enter
lcall
fwait
rorb
fwait
dec
lods
mov
sub
rcr
jecxz
repnz
sbb
fs
and
test
jp
mov
daa
js
int
leave
loope
popa
sbbb
cmp
jmp
add
mov
pop
lret
negb
xchg
insb
add
outsb
mov
dec
outsl
in
sti
ljmp
cmpb
mov
nop
sbb
add
mov
stc
push
cmp
mov
mov
movsl
jbe
lea
cvtps2pd
fidivl
adc
icebp
stos
push
pop
inc
mov
icebp
mov
sub
les
sub
test
adc
xor
xor
push
arpl
and
adc
adc
out
in
xchg
xor
sbb
push
mov
daa
xor
cmp
or
sbb
ja
outsb
pop
out
adc
addr16
pushf
aaa
jge
stc
ss
push
cmpsl
and
jmp
ja
rclb
ljmp
out
outsb
sub
out
xchg
push
dec
inc
aas
popa
int
imul
push
push
jbe
or
scas
fimull
add
xor
push
into
stos
dec
and
dec
clc
push
xchg
gs
and
leave
jo
or
xlat
xor
mov
mov
iret
and
in
xor
pop
cmp
push
xlat
fs
fimuls
arpl
movl
js
aaa
pop
repnz
sub
dec
rol
inc
sub
sbb
sbb
je
rorb
add
jge
mov
pop
data16
push
or
sbb
xchg
or
push
ret
push
stos
xchg
rolb
jbe
adcb
cmp
sub
adc
subb
cmpsl
in
or
jbe
scas
mov
dec
repz
ljmp
imul
sahf
and
inc
mov
or
dec
mov
int
mov
push
popa
in
and
pusha
cli
and
push
or
mov
dec
outsb
test
cltd
cmp
push
xchg
popf
sbb
pop
or
cmpsb
cli
xchg
cmpsb
enter
add
das
push
or
daa
jl
popf
insl
or
push
pop
xchg
and
int3
add
imul
lcall
xchg
xor
add
cmpsl
in
mov
sbb
jnp
xorb
xor
xchg
mov
sub
pop
iret
xchg
lret
pop
push
adc
or
push
mov
cwtl
adc
jae
jnp
dec
pop
sbb
stos
push
sahf
negb
cltd
int
pop
and
fld
pop
out
stos
pop
imul
lret
call
pushf
or
addb
mov
lock
ljmp
pop
push
adc
pop
jl
nop
push
cwtl
mov
std
xchg
std
iret
inc
adc
es
push
and
adc
das
iret
rcl
or
inc
aaa
sarb
dec
rcrl
test
iret
and
lock
leave
test
xchg
mov
xlat
rorb
aaa
mov
adc
mov
adc
in
push
sbb
add
sbb
sahf
jle
ret
push
and
adc
mov
and
js
xchg
nop
cs
push
arpl
or
mov
dec
and
es
stos
and
or
imul
xor
aam
rolb
fistps
add
ljmp
adc
jmp
cmp
in
push
scas
jl
inc
and
xor
mov
mov
outsl
fwait
and
sbb
faddl
or
in
sub
icebp
jecxz
pop
add
adc
shrb
mov
aas
iret
xorb
loope
dec
xchg
mov
add
xor
shlb
out
sbb
adcl
sub
mov
mov
xor
int
and
imul
pop
mov
shl
fmuls
outsb
shl
addl
enter
lods
mov
inc
push
dec
jecxz
sahf
or
pop
sbb
and
incl
xor
test
xchg
mov
cmp
mov
and
mov
scas
insl
jno
enter
mov
sbb
pop
aam
dec
jge
add
sahf
dec
sbb
xor
pop
lods
sbb
mov
adc
or
pop
jns
mov
fcompl
pop
and
cmp
aam
inc
inc
or
inc
loop
fwait
cmp
cmp
fsub
push
fisttpll
pusha
cltd
dec
leave
xor
cmp
dec
test
sti
xchg
lods
jmp
out
mov
ret
sub
movsl
cwtl
dec
out
cmpb
jnp
sbbl
je
jne
fcmovnu
into
sbb
pop
lret
sbb
fsubrs
and
decb
xchg
out
fwait
mov
jl
inc
in
mov
int
mov
mov
sahf
in
push
adc
jp
ds
mov
in
daa
jno
push
sbb
lods
push
xchg
and
xorl
out
repz
push
inc
aam
inc
mov
dec
cmpsb
fisubrl
push
inc
push
mov
test
out
pop
fwait
mov
jecxz
push
aad
mov
inc
mov
and
js
push
stos
xchg
push
mov
data16
test
jg
cmp
xchg
dec
shrl
cmp
or
mov
iret
pop
repz
out
cs
test
aaa
mov
dec
sub
test
xchg
push
stc
xchg
cltd
aad
xchg
or
in
in
mov
lods
sub
mov
pop
or
test
and
add
out
mov
xor
cmp
pop
enter
jecxz
xchg
stc
xchg
test
les
dec
aam
pop
pop
xlat
dec
orb
pop
aaa
fadd
and
pop
dec
mov
xchg
cmpsl
adc
push
outsl
pop
push
subb
jmp
shl
lea
fadds
xchg
fsubs
mov
jb
sbb
push
ret
sar
sub
rclb
in
mov
insl
outsl
jg
cmp
loopne
out
pop
sbbb
lret
mov
cwtl
int3
pop
pop
rclb
sub
sub
cmpsl
push
stos
mov
xchg
pop
dec
movsl
push
sbb
jb
dec
or
das
aam
adc
mov
pop
adc
lock
sbb
sbb
aaa
push
lock
stc
insb
sbb
out
inc
aaa
dec
divl
inc
sbb
enter
jns
insb
out
and
xor
call
jns
or
test
enter
jecxz
mov
push
inc
ljmp
xchg
mov
nop
int3
popf
and
push
adc
ret
push
pop
lahf
sub
dec
stos
lahf
mov
cmpsl
pushfw
fidivl
mov
push
inc
stos
and
jg
cmp
cmc
fdivs
push
lcall
push
and
push
mov
inc
sub
sbb
mov
sbb
mov
xlat
incb
test
or
icebp
dec
adc
jns
jns
sbb
and
pusha
movsl
popf
pop
xchg
mov
cmp
mov
and
mov
lret
xchg
xchg
jb
andl
and
cmp
push
cmp
adc
inc
push
das
pop
mov
je
stc
xchg
fisttps
jno
cmp
add
sar
mov
ss
add
loopne
xchg
mull
shr
ss
rcr
outsl
and
shlb
int3
mov
push
mov
mov
pop
sbb
fisttps
or
fnstsw
jle
pop
daa
mov
jl
cmp
mov
xlat
sub
add
mov
cwtl
jle
adc
mov
sub
call
mov
inc
in
pop
adc
pop
rcl
lea
cltd
pushf
inc
and
punpckldq
lods
shll
adc
pop
adc
push
les
aaa
push
out
or
rol
sub
aam
inc
mov
cmp
sti
lret
ljmp
add
jecxz
jmp
sarl
test
cmpsl
jecxz
std
sbb
push
lret
mov
push
jae
jp
xchg
adc
inc
pop
push
and
je
push
daa
add
movsb
dec
mov
push
jns
jmp
or
sbb
xchg
jle
lea
mov
in
adc
cmp
push
mov
ljmp
std
sbb
adc
pop
mov
loopne
frstor
xchg
adc
mov
or
pushl
fnsave
into
push
pop
xchg
and
mov
cs
pop
insl
movsl
out
inc
xchg
or
push
jmp
mov
jp
addr16
add
icebp
cmpl
inc
mov
in
xor
loop
pusha
push
or
stc
int3
inc
dec
xchg
addr16
orb
adc
mov
xchg
fists
cltd
xor
xor
xchg
mov
cmovg
movsb
inc
mov
arpl
cltd
pop
lret
stos
or
adcb
mov
in
setae
push
movsl
incb
mov
adc
test
cltd
dec
idivl
iret
clc
or
push
cmp
inc
pop
in
andl
sbb
sbb
aas
jle
jge
push
data16
leave
dec
jge
mov
mov
mov
aas
dec
lods
ficoms
cmp
cmp
cld
xorps
xchg
or
xor
xchg
push
lock
imul
push
cmp
and
sarl
jmp
mov
adc
mov
mov
cltd
or
rcrb
mov
add
mov
imul
sahf
lret
std
adc
pop
xchg
mov
jb
ljmp
dec
sub
lods
dec
repz
addr16
mov
pusha
repnz
cli
bound
pop
push
popf
and
movsl
mov
dec
mov
sbbl
popa
fdivp
mov
pushf
aad
stos
mov
jg
outsl
scas
inc
inc
scas
lods
push
mov
and
mov
lahf
jp
mov
fimuls
xchg
add
rolb
sbb
lock
stos
mov
adc
jl
mov
and
aad
fsubl
lcall
lds
insb
or
sahf
inc
jb
and
pop
adc
adc
or
push
test
test
call
add
mov
jle
or
cmpl
cmp
outsb
outsb
arpl
add
sub
mov
daa
mov
dec
jp
cmpsb
cld
mov
daa
jle
jo
shll
shlb
jecxz
mov
fisubrl
iret
outsl
mov
flds
ficompl
shll
xor
imul
sbb
lret
and
je
ret
jae
pop
cmpb
xchg
jg
lods
jmp
ds
es
repz
adc
push
icebp
xchg
pusha
movsb
cmc
adc
iret
lahf
mov
mov
lods
out
cld
mov
cmpsb
sub
scas
loop
cmp
pop
xor
sbb
push
data16
fsubrl
enter
inc
inc
mov
cltd
imul
clc
xor
mov
rcr
repz
loopne
es
sbbb
iret
daa
mov
mov
fdivrs
cmp
loop
shrb
and
loop
sub
js
das
mov
xchg
mov
sti
or
not
xchg
xchg
and
inc
xor
lea
inc
jnp
or
mov
push
fldenv
inc
lods
out
dec
xor
nop
mov
ret
jge
pop
push
mov
movsb
or
cmc
push
pop
pop
push
rcl
mov
ljmp
ret
lret
insb
adc
jg
pop
jne
fcmovnu
sbb
pop
lahf
mov
ds
enter
dec
cmc
xor
and
fiadds
cltd
stos
ss
fsubr
clc
rol
addr16
jecxz
adc
lahf
pop
cmp
jns
or
pop
dec
icebp
cmp
mov
adc
and
cli
mov
push
loope
xor
and
jns
lret
mov
cli
xlat
stos
lret
lret
int3
jnp
out
pop
cmp
lods
jge
rol
imul
imul
mov
push
fisubrs
popa
notb
pop
loop
aad
push
cwtl
bound
push
xor
jne
inc
sub
stos
inc
jg
pushf
inc
in
sbb
pusha
test
lods
xchg
xchg
in
adcl
jle
pop
adc
xor
testb
jp
lea
sti
mov
gs
outsb
out
lods
scas
icebp
and
lods
mov
fistpl
stos
sahf
jmp
fincstp
or
shlb
idivl
cmovge
test
mov
jl
test
lcall
or
shrb
sub
aam
enter
int
pusha
es
and
dec
aaa
repz
jae
outsb
cmp
daa
pop
test
enter
cmpsb
inc
ja
in
jnp
dec
jae
jnp
cmpsb
aas
dec
jno
cmp
push
insl
pop
aaa
jae
loop
mov
sbb
ret
adc
adc
inc
or
adc
pop
mov
jmp
int3
pop
std
xchg
lcall
pop
into
idivb
adc
xchg
push
pop
jnp
in
loop
mulb
push
mov
addr16
test
or
roll
repz
rcr
add
jmp
jnp
or
cli
inc
xchg
clc
xor
mov
mov
add
sub
adc
dec
jns
mov
jg
scas
fwait
push
fs
xchg
cmp
cli
inc
sub
xor
nop
rcll
mov
imul
insb
inc
in
and
pop
mov
orb
pop
xlat
pop
insb
cs
xchg
inc
jge
push
xchg
lea
push
push
cmp
xor
mov
jns
mov
xchg
ret
fcmovu
push
add
cwtl
pop
dec
lahf
fcomps
pop
cmp
jl
mov
sub
mov
aam
mov
ficoms
jle
in
sbb
loopne
or
in
movsb
xchg
out
adc
mov
shlb
mov
test
inc
xchg
push
cmp
decb
idivb
push
xor
into
dec
push
sbbl
ret
adc
sahf
out
sub
mov
push
jbe
mov
cmp
aas
test
cmp
cwtl
mov
or
cld
lret
inc
xor
mov
mov
popl
dec
call
in
xlat
or
fimuls
ret
xchg
scas
rcr
xor
jno
ljmp
adc
adc
dec
int3
jbe
aas
arpl
aam
insb
mov
popa
test
daa
jle
jg
mov
push
stos
fnstenv
lods
add
fs
hlt
inc
repnz
mov
jno
pop
or
jbe
scas
setle
mov
jbe
cmpsl
xchg
outsl
jo
insb
pop
inc
stos
pop
cmp
inc
stc
stc
sub
and
xchg
idivb
imul
lret
mov
bound
inc
loope
jp
test
mov
mov
adcb
ss
stos
push
loop
out
stos
cmp
arpl
xor
xorl
jnp
mov
cmpsl
pop
out
xchg
jnp
xchg
jmp
add
or
add
cmp
and
int3
repnz
cmp
push
sti
mov
mov
jecxz
jnp
shll
cmp
jno
adc
fwait
pusha
jecxz
roll
dec
adcb
out
xchg
add
sub
add
lahf
mov
pop
ljmp
fsubl
push
xchg
sub
loopne
out
je
pop
mov
mov
pop
std
int3
lea
jmp
cli
add
out
xor
jnp
or
dec
std
adc
xor
mov
icebp
test
data16
or
inc
outsb
sbbb
nop
lret
or
ds
cwtl
dec
pushf
add
icebp
mov
cmp
outsb
aaa
in
xchg
sahf
sbb
loope
adc
ja
arpl
ret
insl
sub
xor
push
mov
aas
jo
mov
cs
or
call
xor
push
icebp
je
cmp
mov
sti
fcomps
cwtl
pop
mov
pusha
adc
mov
push
jge
add
jb
lahf
rclb
out
and
mov
pop
shrb
mov
dec
pop
icebp
mov
arpl
xchg
cmp
repnz
push
popf
push
inc
adc
hlt
cmp
ljmp
xchg
jl
mov
cmp
fsubrs
testb
jle
mov
mov
cmp
leave
sbb
jno
push
xor
or
jnp
inc
cmp
test
je
mull
into
xchg
pop
dec
xchg
pop
inc
adc
popf
pusha
sbb
js
mov
enter
movsb
xchg
lock
enter
xchg
mov
jns
add
xchg
mov
jnp
cltd
pop
add
jmp
sahf
enter
ss
shrb
rclb
push
pop
xor
mov
adc
mov
imul
fsub
repz
mov
lds
xchg
xchg
sbb
popa
lahf
and
jbe
mov
aad
leave
es
inc
adc
and
sub
enter
xchg
push
xor
cmpsl
sahf
cmpsl
mov
mov
sub
and
sbb
mov
call
mov
or
xor
test
es
pop
adc
dec
icebp
out
imul
mov
daa
imul
imul
mov
mov
mov
jnp
adc
jg
mov
xorb
xchg
inc
int3
test
out
pop
sbb
push
mov
xchg
imul
cmp
jns
mov
jb,pn
and
sbb
dec
pop
xchg
mov
inc
loope
fmull
stc
ret
imul
repz
xor
mov
or
dec
scas
push
outsl
add
in
data16
sbb
mov
jge
mov
mov
xor
xor
or
cmp
mov
inc
mov
lahf
adc
dec
jnp
fildll
cmp
jo
aam
test
popa
fcoms
sub
aad
mov
mov
xchg
adc
xchg
cmc
ja
xlat
lods
scas
stc
lods
push
das
push
mov
out
push
sub
jbe
dec
subl
imul
xor
push
dec
push
mov
jns
stos
inc
inc
xchg
pushf
add
jp
xor
sbb
mov
les
and
aam
fisttps
mov
and
pop
push
ror
inc
mov
test
fcomi
sub
adc
sub
add
or
fwait
sub
jp
mov
lcall
mov
mov
test
xor
cld
xchg
out
add
and
dec
sbbb
ret
xchg
mov
in
mov
push
repnz
sbb
int
lds
inc
inc
pop
sbb
rcll
push
sub
stos
addr16
test
out
jg
je
xor
inc
fnstenv
shll
into
test
mov
inc
dec
jge
jb
adc
repz
cwtl
xchg
and
ljmp
arpl
nop
push
sti
lret
push
jge
rcr
push
mov
shlb
push
ret
aas
or
test
inc
push
mov
mov
xor
mov
paddb
mov
xor
mov
mov
fdivl
xor
xchg
mov
out
jae
jne
cmp
test
adc
push
orb
nop
push
cli
inc
loop
ja
jmp
cmp
inc
dec
push
cmp
add
jle
xor
cmpsb
jg
push
cmp
pusha
in
repz
xor
fisttpl
cwtl
idivl
pop
add
and
pop
and
adc
popa
addl
ds
mov
into
outsl
data16
mov
aaa
cmpsl
mov
std
roll
push
ret
popf
mov
jb
xchg
xor
pop
xor
mov
push
push
mov
nop
std
stc
rcl
mov
mov
xchg
add
or
fistps
push
sahf
iret
lods
xchg
sub
pop
in
xchg
pop
dec
pop
rcrl
or
fdivr
jg
mov
dec
inc
stos
mulb
ja
lahf
xchg
mov
add
sub
mov
inc
xchg
mov
cmp
es
cmpsb
jno
push
ret
add
or
mov
cltd
ret
adc
mov
mov
and
jnp
pop
xchg
roll
xlat
xchg
sbb
add
push
sahf
call
inc
mov
sub
and
movsl
jb
xchg
iret
pop
jge
and
mov
addr16
loope
addr16
mov
sbbb
sbb
sahf
frstor
out
cli
pusha
popa
xlat
mov
scas
mov
repz
push
sub
push
xchg
pop
jg
or
push
arpl
scas
or
cli
mov
dec
lock
and
sub
cltd
push
or
push
pop
iret
mov
lea
xchg
jne
js
pop
shll
sbb
or
xor
and
dec
lods
xchg
pop
adc
fistpl
xchg
adc
jecxz
lds
lea
sub
lcall
sub
jmp
jbe
jg
adc
adc
test
cwtl
mov
stc
addr16
inc
mov
push
out
cmp
cmc
jno
pushf
mov
pop
pop
std
inc
fidivs
cmp
stos
cmp
movsb
jne
sbb
in
or
mov
mov
mul
ret
sbb
in
mov
add
stc
pop
sub
ljmp
xchg
outsb
cmpsl
jmp
andb
xor
int
pop
clc
leave
notl
rcl
or
test
mov
imul
shl
pop
lods
add
das
in
arpl
inc
in
and
push
test
xchg
xchg
mov
or
ja
daa
jl
adc
std
int
pop
stos
mov
xchg
fidivl
sbb
pop
mov
negb
repz
jne
jnp
dec
cld
in
jno
jno
mov
mov
jno
jnp
enter
jno
cmpsl
add
jecxz
cmp
shrl
inc
aaa
dec
add
ds
or
and
int
jbe
out
add
and
out
sub
push
mov
mov
or
dec
test
jge
mov
movsw
xchg
jecxz
push
dec
es
cmpl
insb
inc
xor
outsl
push
xorb
push
rolb
mov
stos
inc
mov
sbb
adc
dec
push
xchg
pop
jge
in
les
mov
xlat
mov
mov
cmpsb
clc
in
loopne
adc
inc
push
sub
xor
pop
dec
jp
lret
nop
pop
cmp
dec
lods
scas
fildll
cmpsl
jmp
mov
add
jno
sbb
push
stos
jno
cmpsb
adc
ds
sbb
add
cltd
sbb
in
lret
fdivr
fwait
lahf
xor
sub
leave
mov
jg
sub
mov
and
push
repnz
add
push
into
adc
adc
jp
jns
mov
lods
inc
ret
mov
fwait
mov
lahf
and
push
jge
push
xor
outsb
fidivl
sarl
inc
inc
push
sub
popa
out
jp
fwait
nop
mov
sbb
or
add
adcl
aam
inc
ss
test
cld
out
jmp
ljmp
inc
cltd
mov
xchg
cltd
mov
loope
in
sbb
jmp
scas
sub
xor
dec
sub
aaa
mov
lahf
cmc
add
repz
ret
out
cli
xorl
xor
gs
cmpsb
push
insb
mov
cmp
or
mov
jmp
icebp
sub
jb
mov
push
movsb
xor
jnp
and
les
rcrb
into
cmp
test
or
cmp
xchg
push
push
adc
lcall
out
clc
xor
xor
cli
scas
aam
mov
lret
mov
mov
jo
adc
or
add
sub
xor
and
arpl
mov
insl
push
je
pop
loopne
pop
lock
xchg
jmp
mov
fwait
mov
cmp
arpl
jle
adc
aad
int3
movsl
sbb
sub
dec
je
shrl
mov
arpl
out
sbb
ret
rol
into
push
fnstcw
js
mov
push
jb
mov
iretw
cmc
inc
inc
stos
aam
xchg
push
inc
xor
pop
stos
out
movsl
inc
xchg
not
mull
neg
push
fisttpll
ljmp
mov
jge
roll
cmp
push
in
repnz
cld
dec
jecxz
cld
faddl
mov
mov
xor
mov
rcrl
jb
add
bound
mov
mov
adc
and
dec
cmpsb
push
dec
lock
aam
xor
cmp
test
jne
rorb
daa
pushf
mov
aam
mov
daa
or
mov
ret
sbb
add
adc
inc
rorb
push
mov
pop
jge
and
fildll
ds
pop
cmp
cmpsb
iret
cmp
sub
sub
and
push
outsb
outsl
lea
aad
jg
lzcnt
inc
outsl
movb
jnp
cltd
or
push
inc
pop
sti
sti
pusha
mov
pop
test
dec
hlt
adc
in
pop
sub
loope,pn
nop
pusha
fisubrs
sub
mov
fstps
aad
mov
gs
je
int
xor
imul
xor
mov
std
pop
mov
sbb
in
adc
pop
pop
push
push
fistpll
pop
dec
loopnew
in
adc
mov
cmp
ds
fdivrs
jnp
cs
sub
jmp
and
xor
dec
push
add
adc
rorb
adc
fiaddl
adc
nop
and
cmovne
pop
sti
inc
fisubrs
jp
push
dec
or
and
adc
adc
push
inc
xchg
js
js
fiadds
sub
cld
or
xchg
sbb
lock
sub
cmp
mov
cmp
pop
iret
iret
cwtl
popf
push
jmp
pop
loopne
sub
out
mov
and
push
arpl
pop
je
mov
push
adcl
inc
mov
rolb
sti
hlt
bswap
loop
pop
test
adc
std
sub
clc
cmp
mov
push
fcmovbe
xor
cmp
jbe
movups
or
cmpsl
sub
add
cli
adc
stos
nop
out
jno
popf
push
mov
aam
jge
cmc
pop
sbb
cli
andl
and
mov
adc
int
mov
pushf
repz
pop
cmp
imul
sbb
lock
stos
pop
fdivs
adc
jmp
popf
int
scas
push
test
movsl
fadds
daa
js
mov
push
nop
xchg
lret
pushf
rcr
pop
pop
icebp
mov
aas
fildll
jmp
xchg
cmpsl
mov
push
xor
rcll
lret
sub
shl
dec
add
mov
fnstcw
inc
xor
ja
pop
mov
xor
inc
xchg
and
jg
mov
inc
pop
push
inc
mov
pop
dec
mov
addr16
sub
ljmp
rol
adc
mov
addr16
xchg
and
sbb
mov
addr16
xchg
imul
fnstsw
add
in
fldt
xorl
pop
xchg
aas
pop
sub
inc
push
test
ror
cs
dec
je
popa
add
enter
sbb
sub
xor
and
mov
xor
ret
pop
fldenv
imull
sub
push
mov
mov
int
icebp
jmp
mov
test
test
cmc
push
les
mov
mov
jo
fwait
add
jbe
xlat
neg
add
xchg
cmp
shlb
addr16
push
shlb
insl
pop
and
dec
pushf
cmp
aad
pop
sub
add
or
std
sti
jl
lret
ljmp
cmp
or
lock
push
dec
sub
jl
addr16
cmp
andl
xor
test
add
rcll
fstpl
movsl
imul
ljmp
test
mov
decl
xor
sub
lea
jl,pt
push
jl
cmpsb
mov
jne
daa
pop
lret
lahf
jge
pop
xchg
ret
mov
ret
arpl
sbb
sbb
imul
cmp
push
xchg
test
sbb
lea
aam
cltd
push
shlb
sbb
add
or
leave
cld
cltd
loope
push
ljmp
fsubrs
push
pop
pop
mov
cmp
imul
pop
mov
jae
mov
dec
out
push
testb
loop
mov
or
xorl
lret
adc
push
sbb
cmpsb
lahf
xchg
and
idiv
lret
pop
xchg
int3
in
shll
or
lret
js
dec
jae
outsl
imul
push
bound
imul
cwtl
movsl
or
mov
xchg
pop
push
rol
push
add
push
and
add
adc
mov
ret
rolb
aaa
cmp
iret
push
shll
push
or
jo
push
pop
xchg
jae
popl
hlt
scas
and
movsl
pop
or
lcall
lods
daa
int
loop
pop
shr
clc
cli
mov
mov
jg
popf
lcall
pop
sti
mov
les
leave
lahf
sbb
inc
push
mov
sbb
push
pop
inc
hlt
sbb
xchg
aad
sub
cmpl
jne
push
inc
movsb
mov
mov
stos
fwait
int3
dec
mov
push
js
ret
xor
cmp
divl
sub
inc
mov
pop
mov
inc
subb
lret
ss
fs
mov
fisttpl
outsb
adc
and
push
cli
imul
xor
jns
dec
fisttpl
jge
and
fstl
jge
push
icebp
push
cmpsb
fmuls
and
xlat
mov
add
xchg
cmc
jmp
sbb
and
xchg
popf
pop
push
dec
jb
dec
mov
cmpsl
negl
pushf
loop
pop
enter
push
imul
cmp
mov
mov
fcomi
lea
insb
imul
iret
mov
inc
and
popa
ss
lods
mov
push
pop
outsl
clc
xor
arpl
aas
insl
ja
fcmovnb
sbb
dec
mov
mov
ds
push
mov
rcrl
arpl
push
jle
xor
mov
inc
fstpt
mov
mov
std
sbb
lahf
out
sahf
cmp
add
xchg
imull
dec
bound
jle
and
or
inc
enter
movl
insl
in
ja
jl
repnz
adc
lahf
fistpll
arpl
out
xor
shrb
xchg
adc
out
adc
pop
sbb
cmp
lret
cmpsl
sbb
sarb
jge
xor
adc
outsl
jg
hlt
and
jp
test
mov
lret
nop
into
dec
xchg
mov
mov
outsl
dec
loopne
shlb
enter
mov
adc
mov
inc
sbb
mov
dec
adc
xchg
adc
mov
push
inc
inc
pop
mov
and
leave
dec
mov
aaa
insl
sub
aam
mov
je
push
cmp
inc
scas
rorb
arpl
pop
pop
push
movsb
cmp
lahf
inc
fidivrl
ficoml
daa
icebp
mov
dec
mov
lods
adc
js
add
sbb
jl
cli
sbb
icebp
popf
arpl
push
int
shrl
xchg
stc
enter
loope
mov
insb
adc
jns
outsb
jo
sbb
cli
insl
push
and
pushf
mov
stos
push
inc
mov
lcall
adc
movsl
mov
popf
andb
mov
adc
or
and
push
mov
testb
enter
mov
ss
jne
enter
jno
or
les
dec
pop
jmp
adcl
inc
jg
lock
fcmovnb
and
add
testl
xchg
jo
hlt
scas
push
sub
jno
enter
stos
in
cwtl
lret
in
mov
xchg
popa
movsl
scas
out
push
bound
in
mov
sub
sbb
or
int3
notl
cwtl
xor
dec
dec
xor
enter
ja
sbb
stos
mov
dec
inc
ss
pop
into
loopne
pop
cld
sub
xor
movsb
mov
cmc
cmp
enter
loope
inc
add
push
ret
adc
jge
ss
sub
adc
cmpb
popa
jae
sarl
jns
inc
insl
imul
loop
dec
mov
repz
jp
mov
xchg
pop
mov
fwait
mov
mov
adc
insl
inc
pusha
cmp
push
adc
dec
pop
aad
jmp
shlw
movsb
mov
sub
push
aas
leave
mov
sbb
js
cmp
pop
cmp
sub
mov
test
xor
lcall
add
sarb
adc
xor
cmp
loopne
cmp
xor
orl
cmp
nop
or
cltd
addl
in
ret
idivb
push
dec
pop
jg
push
push
cmp
lods
lcall
xor
jbe
jle
sub
cmp
lods
ljmp
and
mov
sahf
in
outsl
rcrl
enter
cmp
inc
aad
ljmp
daa
push
sub
inc
in
sbb
sub
popf
cmp
cmp
jge
cli
mov
ja
je
cli
mov
cmpsl
iret
imul
jp
fdivrl
scas
cmp
loop
cmpsl
pop
and
adc
repnz
jns
mov
xchg
ljmp
cmpsb
push
xchg
or
jl
rcll
cli
cmc
nop
xor
push
mov
mov
addr16
mov
xor
xlat
je
in
std
cwtl
jno
xchg
xor
sbb
dec
in
mov
rcrl
es
out
outsb
aam
jle
imul
sbb
dec
stos
pop
je
pop
pop
ret
out
sub
iret
mov
pop
dec
mov
pushf
dec
jae
pop
lahf
movsb
sbb
cltd
aad
imul
in
scas
lods
enter
subb
push
stos
mov
in
mov
mov
test
and
js
sbb
jbe
inc
sahf
cmp
iret
mov
mov
cmp
pop
aam
aam
or
sbb
lret
mov
inc
daa
shll
movb
pop
mov
push
xchg
in
xor
dec
adc
fnsave
ljmp
mov
cmc
es
int
daa
ret
mov
lret
or
test
in
ja
xchg
aaa
enter
or
add
pushl
mov
mov
adc
mov
js
mov
cwtl
jo
push
pop
das
fidivl
xor
or
in
movsl
jbe
pop
push
xorb
repz
push
adc
mov
pop
fistl
push
xor
inc
std
mov
clc
push
dec
xor
sub
out
dec
dec
lods
scas
cmpb
push
scas
sarb
sbb
mov
movsl
loopne
cmpsb
pop
inc
xchg
pop
imul
cs
andl
mov
sub
push
mov
pop
or
sub
out
in
mov
das
push
adcl
sub
pusha
orl
sbb
mov
imul
cli
into
into
adc
mov
sbb
lock
fmull
rclb
inc
xor
dec
scas
movsl
ret
into
ret
mov
into
pop
or
scas
xchg
leave
sbb
das
stos
pop
int3
fistl
shl
cmc
ss
mov
xchg
das
jnp
mov
mov
xchg
jmp
shrl
es
jnp
push
xor
int
pop
bound
pusha
hlt
mov
push
mov
add
subb
inc
stos
testb
daa
or
in
push
push
scas
gs
or
jl
mov
outsb
inc
sti
imul
in
mov
jo
or
pop
mov
push
xchg
rcll
mov
cs
pushf
xchg
pop
adc
fsubrs
sahf
jno
fwait
inc
pop
stc
dec
inc
movsl
inc
imul
push
insl
xor
icebp
pop
ja
ror
sbb
cmp
out
inc
jmp
icebp
in
xor
fmulp
es
add
pop
jns
pop
pop
in
imul
fwait
mov
jge
push
push
mov
mov
pmulhw
stos
cmp
lock
add
push
inc
mov
loop
shl
xchg
lcall
dec
adc
mov
or
sbb
mulb
push
inc
push
xor
push
dec
xchg
mov
call
popa
fwait
dec
outsl
sahf
xchg
nop
nop
clc
test
pop
sbb
mov
outsl
scas
pop
mov
add
hlt
xor
adc
das
and
daa
fcomi
int3
in
test
sti
stos
imul
inc
push
sahf
in
call
jecxz
movsl
leave
mov
inc
int
scas
lret
mov
inc
sbb
fdivrp
inc
jecxz
cmp
repnz
mov
sbb
jnp
xchg
and
mov
sti
mov
xchg
mov
pop
jge
hlt
pusha
jb
movsb
cld
scas
popa
sti
rcrl
or
ret
sub
push
or
icebp
das
daa
leave
stc
es
cld
cmpsb
pop
rcll
jmp
adc
popf
enter
add
dec
add
popf
push
cmp
add
adc
sub
pop
cmp
dec
mov
inc
insb
mov
jg
shrl
test
jmp
int
push
fsubrs
sbb
jle
xchg
cmpb
pop
addr16
inc
call
xor
xchg
rcr
dec
mov
ljmp
sar
mov
push
push
data16
mov
cmc
lcall
and
icebp
repnz
nop
and
ret
push
adc
in
stos
into
and
mov
mov
out
dec
mov
pop
xor
or
inc
mov
loop
jns
jl
mov
adcb
push
popf
es
pop
sub
jge
rol
xchg
push
pop
cmpsl
sbb
or
jg
sub
mov
int
movsb
rdtsc
cmp
loopne
pop
push
std
cwtl
cmp
jo
pop
rcr
fs
cmc
push
sub
fiaddl
faddl
cmp
mov
xor
or
ds
in
mov
orl
mov
xor
jbe
sbb
adc
js
gs
in
xchg
dec
cmp
mov
sub
out
push
sbb
pop
scas
pushf
sub
imul
adc
das
mov
sbb
rcr
sub
popa
aad
xchg
test
dec
push
sbb
fistl
frstor
call
out
movsl
fsts
call
xor
mov
inc
aas
loop
loopne
and
and
inc
dec
xchg
xchg
nop
inc
int
aas
mov
dec
popf
sub
mov
sti
pop
cmpsb
dec
fmul
sbb
or
mov
pop
fs
push
jno
jb
in
in
push
cltd
aas
add
aad
and
sarl
or
popf
test
insb
fcompl
dec
and
gs
cltd
sbb
push
scas
pusha
ja
adc
mov
sub
ret
arpl
xchg
jne
xor
dec
add
sbbl
pop
aad
mov
jne
xor
dec
mov
cmc
pop
xchg
out
shl
push
leave
mov
clc
lods
cmp
loopne
mov
dec
sbb
push
sub
pop
imul
add
mov
mov
insb
or
rcrb
and
dec
call
sbb
out
pop
out
lret
loop
shlb
pop
dec
jae
cld
xchg
and
sbb
test
xor
fs
jl
imul
jp
movsl
popf
xchg
adc
fsubrs
mov
cmpsl
imul
aam
aaa
int3
es
mov
lahf
inc
std
fbstp
xchg
mov
jno
and
mov
mov
inc
test
push
pop
xchg
add
mov
mov
and
add
fwait
insb
ss
pop
hlt
inc
inc
stc
push
aam
insl
inc
imul
cld
cld
movsb
push
push
sub
mov
lods
jbe
sbb
fcmovnu
repz
arpl
std
jnp
jmp
pusha
insl
sbb
or
jge
jo
aaa
fldcw
sub
in
pop
lods
loopne
push
pushf
das
test
loopne
inc
mov
daa
or
xor
mov
xor
repnz
mov
add
dec
inc
cmp
out
test
xchg
in
shrl
xchg
pavgw
jae
add
and
cmp
mov
fimuls
pop
ret
sub
lret
jecxz
insl
movsl
in
call
jl
stc
dec
rclb
xlat
jno
adc
rol
push
inc
jge
push
mov
loopne
mov
cmp
scas
or
jecxz
xchg
xorb
dec
inc
fcmovne
cs
pop
inc
in
inc
mov
movsl
push
loope
sub
into
sbb
push
pop
sarb
mov
and
test
mov
and
lcall
dec
loope
adc
mov
mov
test
movsl
sti
clc
inc
dec
js
outsl
fucomi
imul
xor
sbb
in
jo
loop
dec
adc
mov
push
daa
or
pop
fistl
mov
scas
or
aad
add
jbe
jnp
icebp
imul
jae
xor
fidivs
ret
mov
insb
cmp
cmpsl
inc
add
cltd
mov
lahf
dec
leave
push
sbb
or
xor
xchg
jb
enter
cmpsb
dec
push
lods
pop
inc
aas
xor
jge
pop
orl
loope
mov
jo
push
icebp
test
cmp
inc
xlat
je
aas
cmp
pop
mov
scas
sub
in
xor
cmp
ret
insl
cmp
mov
xlat
adc
xchg
mov
xchg
loopne
sahf
push
lock
test
sbb
subl
pop
mov
dec
inc
sbb
test
inc
scas
cmp
out
jne
mov
sub
dec
andb
in
mov
loope
aad
fwait
and
lock
orb
cmpsb
push
add
aaa
jne
ss
push
das
xchg
stos
mov
std
xchg
mov
jl
arpl
sbb
dec
mov
lea
push
fidivrs
adc
cmp
fcomps
adc
filds
dec
pop
bound
mov
push
sbb
pop
cmpb
leave
arpl
mov
lods
add
or
outsl
mov
ja
push
sub
cltd
mov
loop
imul
mov
data16
fcmovb
cmc
mov
dec
xchg
xor
mov
adc
fcmovbe
xchg
sbb
shll
divl
pushf
or
sbb
int
idiv
fidivs
imul
pop
hlt
fsubs
push
mov
test
in
and
ds
bound
mov
sub
dec
daa
sysexit
xor
push
sub
and
fmuls
and
mov
dec
mov
addr16
jg
cs
insb
sub
insl
rorb
jle
out
push
jnp
lods
loopne
adc
mov
inc
sub
mov
inc
xlat
jns
cmpsb
pop
push
rcrl
sbb
aam
lret
pusha
outsb
pop
ss
imul
movsl
inc
data16
scas
mov
call
rorl
jle
jmp
sbb
test
and
cwtl
push
loop
mov
add
pop
pop
xlat
lcall
cmpsl
cmp
test
nop
xchg
bts
movsl
xchg
cwtl
icebp
js
mov
ret
sub
push
loop
push
add
and
add
test
shl
lret
test
sub
push
jnp
rol
dec
aad
dec
imul
lahf
shll
mov
call
xchg
das
jnp
jb
mov
jp
and
and
mov
aaa
fcomip
les
in
jle
mov
cmp
insb
cmp
or
adc
aaa
inc
mov
add
jmp
or
cmp
or
cmp
push
push
or
sub
std
es
fwait
les
loopne
mov
mov
fs
mov
push
inc
dec
push
jmp
shl
inc
push
xor
out
dec
push
jne
push
add
pop
mov
dec
in
fdivp
mov
in
sbb
push
or
gs
aam
jmp
jb
lret
scas
jle
or
test
cli
rclb
mov
ret
cli
dec
js
rcrb
adc
rorb
xchg
je
repz
dec
or
dec
and
jb
mov
adc
nop
lods
cmc
divb
inc
cmp
popa
jp
cmc
dec
and
xorb
stc
jo
xchg
mov
or
xchg
xchg
sbb
inc
fld
jle
lea
dec
fwait
and
movd
test
add
dec
xor
lahf
test
dec
nop
sub
cmp
test
sti
xchg
pusha
jmp
adc
xchg
xor
cmp
mov
mov
mov
xor
or
imul
xor
jns
mov
lret
and
outsb
adc
popf
pushf
adc
sbb
cwtl
aam
sub
ja
inc
mov
mov
ret
shlb
push
in
jecxz
arpl
xchg
popf
rorl
sbb
popf
inc
cwtl
das
sti
and
or
iret
roll
push
inc
lahf
and
loop
adc
mov
test
movsb
aam
adc
negb
add
xchg
insb
mov
xor
and
lcall
or
jecxz
pop
mov
lds
dec
or
or
or
push
xchg
rcll
xor
je
cld
fildl
add
movsl
push
and
dec
flds
jg
icebp
push
push
fmulp
fs
sub
xor
js
bnd
add
cmc
pop
lods
add
mov
int3
xlat
call
or
sti
inc
test
punpckhdq
gs
daa
mov
adc
call
mov
insb
and
fsubrl
xchg
xchg
aaa
jne
xchg
pop
addr16
popf
mov
adc
mov
mov
sbb
sub
leave
xlat
pusha
dec
repz
xchg
out
push
int
sti
cmc
fwait
sarb
mov
sar
and
leave
hlt
jecxz
adc
cmp
fldt
mov
insl
lods
mov
add
std
pop
xchg
jno
xor
fidivrs
and
pop
dec
xorl
dec
iret
jno
xchg
movsb
push
ret
mov
push
jge
mov
gs
jne
dec
les
sbb
stos
jle
fcompl
pandn
cwtl
ret
sarl
ja
xor
or
out
mov
lret
sub
daa
aad
jbe
adc
aad
sbb
adc
lds
jmp
rorb
lcall
outsb
and
mov
leave
and
inc
stos
jle
mov
xchg
push
es
dec
fldcw
mov
test
mov
sbb
xor
test
aaa
mov
pushl
movsb
add
push
and
xchg
jnp
pop
sbb
add
and
mov
stc
sbb
lret
lea
sub
lods
popa
mov
xchg
ljmp
das
inc
push
mov
movsb
bound
popf
mull
pop
dec
loope
push
push
scas
jno
adc
nop
inc
xor
cwtl
repnz
mov
mov
lret
test
in
xor
sub
rorl
lods
cmova
ret
dec
nop
inc
adc
mov
enter
aaa
add
stos
sub
jmp
mov
xor
faddl
pop
aas
pop
test
inc
xor
cld
mov
add
in
mov
and
faddl
cltd
sbb
sbb
adc
fidivrs
icebp
xor
out
sub
outsl
gs
mov
fdivr
repnz
dec
jle
jle
inc
pop
insb
in
cwtl
adcl
nop
in
pop
mov
mov
aam
popa
mov
enter
fs
ja
loopne
or
mov
in
add
mov
jae
xor
pop
aam
add
push
inc
pushf
push
cmpsb
gs
in
mov
fs
mov
pop
sub
mov
mov
call
push
js
push
aad
add
cli
mov
into
and
xchg
out
and
fidivl
gs
dec
jno
jle
lods
mov
scas
cltd
fsin
loop
pop
cmp
int
pop
push
les
repz
scas
arpl
lret
je
sub
sti
outsb
out
inc
imul
push
popf
xlat
mov
mov
inc
xor
fists
jp
push
ja
sub
stc
loope
mov
xchg
pop
loope
call
pop
sub
add
imul
adc
jo
mov
addr16
push
push
push
pop
shl
out
pop
rolb
aas
insl
pop
inc
push
in
fisubrs
sbb
or
jbe
jbe
icebp
fsubl
jecxz
hlt
push
rcrb
inc
rcrb
and
mov
cmpsl
repnz
push
mov
movsl
push
mov
imul
cmp
mov
scas
xor
test
divb
cmpsl
in
jmp
push
fs
sti
jmp
loop
sbb
adc
mov
cs
ja
xor
lret
mov
cmpsl
movsl
mov
scas
outsl
dec
adc
lret
les
or
pop
sub
jge
push
mov
cmpsl
in
lcall
daa
addr16
sbb
mov
push
add
jnp
fnstsw
inc
outsl
mov
ja
arpl
inc
xor
adc
bound
test
xor
add
push
in
bswap
lods
xlat
out
or
int
cltd
add
lret
inc
leave
pusha
jge
sub
out
mov
dec
mov
sub
imul
mov
fistl
jl
jmp
in
insb
repz
push
push
push
push
sbb
jle
xchg
xor
test
and
les
xchg
sub
jl
ja
ret
mov
stos
sub
add
outsb
xor
mov
jle
int3
testb
adc
mov
fnsave
jnp
movsl
jb
cmp
lret
mov
andb
dec
sar
popa
mov
xor
mov
daa
loop
xchg
test
and
outsb
xor
jo
ljmp
and
add
shll
int
shlb
add
mov
sub
inc
pop
ja
ljmp
ds
loopne
mov
fistpl
out
and
xchg
dec
mov
rcll
out
into
mov
cwtl
push
aam
xlat
daa
and
and
fbld
imul
mov
and
enter
and
push
popf
repz
or
aaa
mov
sahf
jbe
dec
test
mov
pop
and
jns
mov
lds
lea
insl
dec
ja
mov
insl
and
scas
shlb
inc
dec
push
leave
jle
xchg
pop
stc
sahf
nopl
test
push
aad
and
cs
cmp
test
fisubs
jns
jns
push
or
dec
test
sub
leave
mov
mov
mov
mov
add
clc
add
mov
nop
and
adc
pusha
push
xchg
or
addr16
test
adc
imul
sbb
into
cmp
scas
loopne
sbb
stos
pop
stos
repnz
jns
shr
rcr
out
fdivrp
pop
ds
into
xor
lods
daa
push
addr16
bound
sahf
pushf
sbb
les
or
adc
jne
mov
fcomps
popa
jnp
movsb
aaa
cltd
int3
inc
std
mov
inc
jbe
push
sbb
cld
jecxz
mov
jns
popa
gs
ljmp
cmp
mov
and
pop
shlb
pop
xchg
jbe
mov
push
lcall
das
fimuls
jo
fdivl
call
adc
add
insb
dec
xchg
outsl
xor
mov
mov
popf
xchg
rolb
and
dec
int
mov
push
push
pop
jns
mov
rcl
out
pop
cwtl
xchg
xchg
inc
mov
mov
iret
sbb
loope
dec
btrl
cmp
out
imul
xor
int
adc
loop
lcall
loopne
and
xchg
jecxz
rolb
cmp
aam
pop
cmc
repz
add
push
and
sbb
sub
mov
test
cmp
mov
popa
inc
pushf
ljmp
adc
push
mov
cmp
in
sti
pop
mov
pop
test
mov
ss
add
fst
sbb
or
lds
out
inc
pop
mov
xchg
fwait
inc
mov
pmulhuw
jae
fdiv
hlt
lds
cwtl
cmc
fcmovb
adc
push
rclb
or
enter
ja
push
mov
mov
or
add
pop
ret
xchg
aam
add
jbe
scas
rol
inc
repnz
cmpsb
push
jo
loop
add
fisubs
lea
push
fadds
fsub
jmp
mov
sbb
adc
push
push
aas
jmp
pop
mov
cmc
aam
sub
imul
jle
sub
ficomps
repz
stos
mov
cmp
gs
adc
mov
outsb
push
and
rcll
mov
les
lahf
clc
xchg
mov
and
cmpsb
clc
pop
shlb
xor
mov
push
es
stc
jmp
popa
ss
xor
and
push
scas
xor
adcb
enter
scas
daa
cmpsb
loop
lcall
xor
insb
or
and
inc
cmp
sub
pop
scas
jne
test
inc
loope
arpl
xchg
addr16
mov
and
test
xchg
in
scas
xor
scas
fsubs
or
mov
jbe
xor
test
push
xor
push
out
cmp
rolb
movsb
icebp
test
push
shrl
xor
test
loope
add
mov
push
ret
test
inc
enter
and
dec
ficoms
iret
pop
mov
stos
push
adc
adc
xor
mov
cwtl
ss
xor
mov
jecxz
rcr
xlat
or
out
filds
ret
push
ret
lret
and
stc
push
cwtl
iret
imul
xor
or
pusha
fwait
and
in
sub
xchg
mov
cwtl
mov
mov
test
dec
aas
mov
arpl
popf
fmuls
push
es
mov
jne
popa
sub
adc
push
test
pop
repnz
push
icebp
push
lret
out
or
and
mov
sub
enter
dec
pop
mov
or
jno
test
dec
lcall
xchg
jbe
ffree
push
mov
in
inc
out
pop
stos
xchg
and
ss
inc
outsb
jp
jp
or
mov
outsl
push
rcr
pop
lcall
sahf
mov
jecxz
sub
cmc
add
pop
fimuls
xchg
xchg
cmp
xchg
dec
sbb
pop
mov
jns
mov
aas
fdivp
loop
ret
test
in
ja
inc
je
dec
lds
push
arpl
das
jle
push
and
mov
mov
call
fldl
and
push
jmp
or
out
pop
dec
jbe
sbb
cmp
push
hlt
push
mov
mov
jnp
sub
mov
mov
ret
mov
ljmp
addr16
fcompl
push
je
xchg
cmp
jge
jne
jmp
jbe
lock
shl
or
addb
mov
je
mov
ficoms
pop
inc
push
or
and
pop
inc
scas
cmpsb
cmpsb
mov
cmc
pop
pop
mov
arpl
data16
mov
push
sub
and
or
aad
ret
call
int3
add
aaa
test
fistps
enter
daa
mov
mov
mov
enter
in
push
cwtl
pusha
cld
pop
mov
repnz
stos
outsl
cmp
popf
imul
int3
pop
pusha
outsb
mov
ja
push
pop
fwait
adcb
or
outsl
ja
fmuls
aad
cmp
stos
sub
mov
out
cmp
fnstsw
je
push
movsl
add
aam
int3
dec
aaa
jl
mov
outsl
fcompl
ljmp
cmp
filds
or
popf
into
mov
adc
cwtl
test
fidivl
ss
xchg
fcoml
cmp
jne
sbb
aad
fs
inc
inc
adc
pop
mov
jbe
xchg
fcmovne
iret
adc
test
and
mov
add
sbb
adc
nop
push
je
enter
test
popl
inc
xor
out
mov
stos
pop
push
fsts
in
or
lea
scas
add
mov
xchg
cmp
test
mov
insl
rcl
adc
dec
jge
movsw
push
pop
stc
mov
push
cmp
cmp
out
xlat
push
jecxz
add
stc
push
adc
mov
sub
inc
fidivs
sbb
adc
dec
sub
xchg
inc
ds
add
sbb
push
pop
lods
mov
sub
std
sub
and
push
push
int
push
loopne
add
sarb
fnstenv
mov
jecxz
aad
mov
cli
in
mov
fildll
mov
movb
icebp
adc
mov
out
outsb
or
out
jmp
out
loope
cmpsb
sub
sub
pop
stos
push
stc
scas
scas
hlt
mov
xchg
jo
loopne
fisubs
clc
insl
mov
push
add
sbb
cmpsl
roll
cli
xor
movsb
jle
lret
aas
mov
mov
aas
mov
incl
xchg
aaa
mov
mov
push
add
jo
or
lds
in
loope
leave
or
bound
ret
mov
cmp
xchg
fdiv
add
inc
xorl
sub
inc
adc
lcall
adc
and
or
test
jmp
xchg
fdivs
rcrb
je
jl
call
lods
sbb
cwtl
xchg
inc
jl
insb
xchg
add
xorb
sbb
xor
mov
out
lret
gs
int
int3
adc
addl
test
xchg
jne
xchg
std
ret
in
push
sbb
xchg
or
fcomps
xor
xchg
shrb
fsubrp
push
or
jg
loopne
jbe
push
cwtl
and
inc
movsl
push
cli
mov
iret
in
xchg
imul
mov
mov
enter
mov
mov
xor
popf
ret
sub
in
arpl
push
push
dec
popf
cmpsb
pop
insb
add
inc
pop
cmpsl
in
push
xchg
int3
adc
sub
mov
imul
or
test
push
mov
es
icebp
mov
jle
ficompl
sahf
dec
fs
shll
xchg
mov
imul
dec
or
jl
icebp
mov
gs
mov
push
inc
lods
jae
cmp
adc
ret
ja
dec
add
push
cmp
stos
movsb
cmp
and
popa
stos
fs
or
adc
ret
xor
inc
adc
xlat
adc
cmp
mov
repnz
loopne
cmpsb
push
lret
je
je
push
aad
lcall
cld
jb
cmp
ret
fldl2t
mov
lahf
inc
in
int
out
push
aam
add
push
mov
jae
sbb
jb
decl
xor
cli
aas
imul
jecxz
mov
cmp
inc
xchg
out
dec
mov
jmp
push
test
inc
pop
inc
mov
shlb
xchg
inc
push
scas
or
imul
jecxz
and
insl
jg
mov
pushf
es
sub
popf
loope
lds
fsubl
inc
or
insb
test
jl
daa
pop
rcll
push
xor
movsl
adc
xchg
fisttpl
mov
mov
inc
push
sbb
sbb
pushf
jns
or
push
je
and
in
fld
fsubrl
shr
lret
inc
or
add
outsw
movsl
inc
adc
movsl
xor
add
jbe
int3
aam
mov
fcomi
mov
icebp
jl
sarb
jl
mov
xchg
jns
mov
sarb
sahf
or
into
push
or
push
ja
fwait
xor
push
lcall
fisttpl
negb
push
xlat
popa
add
or
js
sbb
loopne
int
loop
xchg
jb
push
nop
lret
fidivs
call
push
insl
fiadds
out
pop
push
jb
int3
sbb
cld
js
mov
xor
jo
mov
jmp
mov
mov
xor
sub
in
insl
adc
xor
les
mov
fnsave
or
inc
xchg
loope
push
cli
dec
adc
shrb
pop
push
push
xchg
pop
jl
xor
and
push
mov
jns
xchg
mov
jle
jb
lahf
aaa
dec
cs
fstpl
jnp
mov
adc
cmp
data16
nop
std
fwait
pop
wbinvd
inc
out
js
popf
in
movsb
pop
xchg
insb
rcrb
and
jne
xor
lahf
jnp
sub
jae
outsl
xchg
dec
sahf
clc
test
icebp
sub
mov
lock
hlt
icebp
inc
ss
shl
gs
mov
mov
leave
lcall
jp
icebp
or
je
enter
ret
stos
adcl
sub
pop
fcoml
jae
jp
stc
fnstcw
fcmovu
cmp
int
pop
movsl
out
inc
sti
cmc
sub
pop
adc
sbb
jp
data16
xchg
pop
mov
inc
jmp
enter
aad
push
aad
mov
xchg
inc
aad
movsl
dec
jno
fbld
aad
ficoms
dec
lea
mov
push
rol
add
xchg
xchg
push
ret
push
iret
push
xlat
out
or
nop
adc
cmpsl
adc
jmp
jge
pusha
pusha
sbbb
jecxz
popf
fldcw
out
scas
cmp
mov
popa
mov
test
inc
lock
sbb
in
xchg
les
inc
xchg
jbe
xchg
mov
bound
and
cmpb
lahf
sub
es
fmull
dec
add
add
pop
xor
xchg
mov
lret
inc
pop
sub
xchg
cld
loopne
mov
xor
popf
sets
jo
mov
dec
xor
cli
ss
xor
movsb
lcall
sbb
shll
xchg
sub
mov
adc
icebp
xchg
jno
pop
mov
in
mov
mov
jnp
ss
mov
inc
sub
les
lcall
xchg
mov
insl
sub
js
jg
dec
mov
add
push
jno
lcall
scas
pop
and
xchg
mov
int3
ret
je
push
shrl
int3
push
sti
aaa
bound
call
push
movsl
popf
cltd
inc
push
add
rolb
lods
push
inc
hlt
pop
mov
xchg
enter
fs
ret
dec
pop
push
shll
aam
xchg
mov
ss
mov
sbb
mov
sar
test
popa
fisttpl
sbb
mov
jmp
mov
jle
jmp
lods
or
stos
adc
lea
inc
sub
rolb
imul
inc
sbb
adc
sbb
jne
mov
stos
movsb
mov
xor
xchg
call
addr16
bound
loop
cmp
sarb
pop
call
adc
lds
push
cwtl
and
loope
out
scas
test
add
lods
sub
jnp
into
pop
dec
mov
push
pop
or
add
push
iret
or
adc
xchg
clc
aam
adc
hlt
xor
and
xchg
or
xchg
cwtl
aaa
pushl
lock
cmp
imul
clc
dec
and
nop
or
xchg
xchg
push
mov
mov
inc
mov
xchg
iret
pop
mov
and
or
std
test
cmc
sub
push
or
inc
mov
mov
pop
add
sbb
data16
inc
cwtl
js
sbb
inc
dec
jne
jp
out
inc
push
aam
xchg
add
stos
negl
jp
in
lret
in
out
jecxz
mov
lret
or
jg
dec
xor
test
sti
add
rorb
enter
and
xchg
jbe
jle
pop
dec
sub
ljmp
pop
test
enter
push
out
sbb
and
test
aaa
xchg
cmp
and
mov
jno
out
ret
fwait
push
ds
xor
pop
mov
and
fcomip
stc
push
dec
dec
jnp
inc
into
mov
rcr
inc
int
xorl
fiaddl
push
mov
adc
inc
imul
push
fmull
stos
mov
jl
sbb
mov
pop
mov
add
std
sbb
and
xor
xchg
add
push
call
fstps
ja
and
pusha
xor
add
pushl
and
lds
das
dec
lahf
pushf
adcl
pop
cmp
das
bound
and
sbb
push
mov
mov
xor
dec
loope
lret
sub
mov
fldcw
or
and
outsl
and
clc
fsubrl
jo
push
sub
sub
dec
mov
cmpsl
cmp
lret
mov
gs
add
cmp
mov
xlat
aad
stos
sti
add
xor
nop
adc
repz
xchg
repnz
xchg
push
sbb
cli
scas
sub
das
mov
mov
add
xor
mov
or
out
and
pop
inc
pop
shr
stos
mov
adc
xlat
jbe
fimuls
iret
push
xchg
insl
or
dec
adc
jle
mov
fstpt
mov
enter
rcrl
sarl
dec
fcmove
stc
es
jns
js
hlt
mov
scas
jp
int
out
push
dec
mov
pusha
movsl
out
inc
movsb
xorw
rcrl
ret
jmp
aaa
shrb
lret
mov
adc
xchg
pop
xlat
cmp
iret
bound
cmpsb
test
rcll
and
lods
or
sysexit
test
push
sub
scas
mov
and
sub
js
add
mov
xchg
aaa
push
add
sub
movsb
adc
mov
lea
push
mov
lcall
jmp
inc
jg
notl
sahf
inc
repnz
arpl
inc
jae
scas
jns
push
cmpsl
cmpsl
xchg
inc
jp
sbb
lods
push
dec
or
pause
out
cmc
aad
fnstenv
test
lahf
jl
out
stos
push
jg
pop
xchg
ss
js
scas
inc
das
jecxz
xor
push
jae
stos
push
in
mov
mov
nop
pushl
or
call
fimuls
stc
cli
mov
mov
arpl
pop
lods
cmp
dec
xchg
cli
xchg
mov
push
in
push
outsl
jno
jp
mov
mov
cli
jne
in
push
mov
sub
sub
inc
lock
repz
das
sub
or
hlt
sbb
cmp
inc
sub
lahf
imul
push
loope
cmp
in
pusha
imul
mov
xor
loop
es
inc
add
inc
subl
imul
test
loop
rcr
or
sub
call
add
ss
push
dec
mov
inc
packssdw
adc
shll
loope
adc
xor
repz
clc
add
sub
fwait
sbb
icebp
xor
insb
jo
jne
and
mov
and
jg
insl
sbb
or
cmc
mov
std
or
jge
rorl
in
cmpb
push
in
ds
add
lret
daa
fists
into
bound
sbb
aad
sbb
data16
cwtl
push
call
mov
cld
fwait
adc
and
bound
mov
cld
mov
lcall
js
pop
inc
sub
xor
aaa
pop
ja
icebp
setge
sub
ljmp
icebp
adc
imul
inc
jnp
imul
iret
das
fldt
mov
push
or
repnz
cltd
addr16
push
hlt
fisttpll
in
sahf
lea
mov
pop
fwait
mov
pop
mov
or
push
std
stc
xlat
test
mov
cmp
xor
cli
mov
cltd
cld
rcrb
popf
scas
cwtl
or
dec
out
mov
mov
imull
in
popa
pop
test
daa
pop
mov
push
add
or
or
dec
in
pop
fwait
mov
das
idivl
ja
std
popf
push
aas
push
mov
jge
sahf
aas
xor
ds
test
outsb
pop
aam
sub
inc
lock
cmp
pop
xor
sbb
mull
mov
adc
mov
mov
adc
out
pop
fildl
aaa
sbb
add
out
imul
lds
jecxz
lock
mov
pusha
mov
mov
test
cmp
xchg
inc
adc
sub
inc
cmp
cmp
clc
xchg
push
pop
inc
inc
test
imul
push
in
arpl
mov
push
cmp
mov
push
pop
xchg
imul
nop
dec
addr16
dec
mov
add
pop
pop
ret
xchg
fs
mov
fbstp
lret
mov
std
push
in
push
cmp
pop
sub
sbb
or
push
xor
insb
adc
arpl
fbstp
sub
les
adc
imul
or
sub
sub
movsl
scas
xchg
jb
pop
shlb
jo
add
int3
push
lahf
out
pop
shll
xchg
fs
lea
inc
out
mov
xchg
cwtl
in
lahf
push
lea
jge
inc
add
and
inc
inc
mov
lahf
pop
fcompl
dec
mov
or
inc
test
dec
in
jmp
sahf
and
lock
icebp
pop
sbb
mov
cmp
es
jg
and
stos
imul
fldt
pop
mov
xchg
roll
push
mov
test
push
popa
pop
rorl
enter
ljmp
aam
lea
xchg
xor
push
sub
movsb
loopne
stos
pusha
out
cmpsl
inc
int
xchg
lock
sub
or
sub
pusha
xchg
xor
cmp
and
das
iret
cli
arpl
pop
lea
push
and
clc
vpaddb
mov
aad
jge
test
xchg
adc
or
jns
into
lods
stos
testl
xchg
pop
add
cmp
shrb
inc
loopne
jno
push
ss
fmulp
stos
pop
lds
test
int
dec
int
xor
pop
push
cmp
pop
jns
add
dec
enter
pop
add
xlat
mov
jge
xor
adc
jbe
fdivrl
xor
fldln2
xchg
jmp
ljmp
or
dec
pop
cmc
adc
call
testl
insl
loopne
lcall
enter
lds
fwait
test
arpl
mov
lea
sbb
hlt
jne
jne
cmp
mov
out
jmp
scas
int3
loop
stc
mov
cmpsl
mov
in
pusha
cmp
and
or
and
push
mov
mov
inc
or
inc
insl
cld
loop
mov
call
test
cmp
or
xor
mov
lods
push
pop
push
sti
mov
mull
xor
add
mov
dec
in
popa
insb
push
cmovo
cld
lcall
shlb
out
arpl
inc
ja
movsl
and
mov
cli
adc
imul
and
in
lcall
fdivs
jecxz
lahf
mov
iret
or
testl
sbb
scas
mov
test
aad
rorb
sbb
sbb
jne
mov
pusha
int3
imul
mov
lea
sub
push
scas
movb
movsb
add
push
loop
test
and
out
add
loop
add
movsb
jb
iret
lods
outsb
xor
pop
xor
rcl
jae
jnp
je
cwtl
cwtl
dec
and
or
cli
cltd
cltd
mov
mov
aas
addr16
mov
pop
jno
xchg
sub
mov
sbb
push
in
cld
and
pop
jp
jge
out
sbb
loopne
inc
filds
mov
or
mov
xor
test
jge
in
jae
adc
popa
jle
out
inc
pop
out
or
call
jp
push
ja
cltd
out
jns
out
sub
add
dec
jmp
mov
inc
pop
pop
sub
mov
push
jne
in
cmp
cmc
jl
push
lea
add
cs
jb
jecxz
pop
cs
leave
sbb
push
mov
jno
pop
mov
or
inc
and
into
in
outsb
jne
xchg
loop
scas
mov
test
mov
loopne
pop
cmp
movsb
mov
frstor
xor
ss
and
sub
cmp
sbb
ret
mov
push
movsb
add
pop
shrb
popf
faddl
inc
sbb
aas
sbb
mov
inc
pushf
xor
rcll
mov
or
lahf
arpl
lds
xchg
mov
mov
insl
dec
sbb
xchg
aas
push
mov
cmp
jo
cmp
mov
minps
and
mov
push
xchg
in
and
adc
jmp
jmp
sub
add
fsubrl
add
mov
ljmp
cmpsb
rcpps
cmpsl
mov
sti
js
scas
ja
shlb
es
sub
push
mov
push
imul
ds
inc
xchg
inc
test
push
aaa
shrd
and
repz
jg
dec
push
ds
lea
bnd
es
mov
loope
dec
xchg
pop
add
inc
xor
jle
and
lret
mov
sahf
inc
cs
arpl
sarl
add
mov
adc
pop
sbb
jns
mov
daa
cmp
inc
xchg
adc
cli
cld
repnz
test
mov
aad
ficompl
lret
sbb
jmp
fsts
cmp
lret
loopne
inc
push
sub
xchg
dec
pop
cltd
add
clc
rcrl
push
cs
mulb
sbbl
jbe
cmp
pop
mov
adc
insb
or
mov
sahf
stos
xor
mov
add
mov
jnp
adc
pushf
add
scas
add
jle
jmp
adc
std
sbb
xchg
and
xchg
ljmp
popf
sbb
mov
cmp
mov
aad
movups
pusha
pop
aad
xor
lods
lahf
test
push
test
mov
xor
bound
lods
sub
imul
inc
stos
inc
movsb
hlt
and
xchg
shll
xor
fdivl
lahf
pop
push
xor
sbb
andl
add
js
jbe
cld
in
mov
sub
mov
cmp
iret
cs
and
or
push
push
cmp
fcmovnb
add
or
incb
ds
imul
or
adc
dec
inc
imul
xor
fistpl
jo
repz
mov
addr16
int
mov
ljmp
inc
imul
xchg
inc
xor
xor
adc
inc
sbb
xor
and
lea
int3
mov
inc
aad
sbb
shlb
cmp
xor
dec
test
sbb
lcall
or
es
xchg
js
testb
popa
jl
dec
mov
mov
clc
stos
hlt
pop
cmp
orl
xchg
adc
inc
and
stos
jl
xor
cwtl
scas
or
cmp
jnp
cmpsl
push
arpl
loop
mov
clc
mov
cmpsb
arpl
fnstenv
pop
nop
jo
pop
cld
push
push
push
clc
or
adc
dec
leave
std
inc
jecxz
aaa
lcall
dec
fsubrs
add
xchg
rcl
sbb
ret
xchg
mov
dec
mov
scas
test
in
xchg
loop
pop
jno
in
repz
or
xor
pusha
sbb
adc
or
fwait
dec
std
hlt
inc
cmpsl
adc
aaa
test
or
mov
jnp
out
inc
add
int3
scas
jle
rclb
and
lds
xchg
cmp
roll
mov
cmp
push
mov
mov
pop
fbstp
dec
out
push
mull
jae,pn
mov
es
enter
or
sti
mov
stos
add
adc
cmp
cmpb
flds
into
mov
mov
les
dec
cmp
xchg
mov
out
bound
push
mov
addr16
or
cmp
or
popf
stc
ret
lret
les
aaa
test
ficomps
sbb
ret
in
xchg
fstl
lcall
ficoml
xor
add
add
xor
mov
repnz
sbb
push
and
xor
das
xchg
mov
divb
ljmp
sbb
mov
mov
test
ficoml
leave
fbld
mov
push
cmp
mov
pop
insb
push
sbb
shlb
adcl
cmc
push
add
add
nop
mov
xor
jne
lods
test
mov
shlb
cld
push
aam
jl
add
jl
mov
aad
cmp
adcl
negl
ror
mov
jns
jmp
leavew
jmp
in
xor
sbb
ljmp
fldcw
sti
dec
pusha
push
cvtps2pd
cmp
dec
orb
jmp
jle
dec
idivl
pop
in
pop
insl
sahf
push
or
sub
sub
dec
into
xchg
mov
cmc
jnp
adc
clc
inc
xor
jae
adc
sbb
fmul
sub
and
decl
mov
mov
adc
enter
and
aas
xchg
rclb
mov
lcall
mov
popf
hlt
and
in
mov
lret
pushf
adc
popf
gs
dec
cmp
or
lods
cmpsb
into
push
std
mov
dec
out
jne
mov
sub
sub
pushl
scas
pop
out
or
mov
fistpl
sub
jne
pop
xor
mov
sub
lcall
lods
jno
arpl
xchg
pop
or
inc
mov
push
pop
mov
lds
mul
pushf
jnp
pop
outsb
jne
mov
xor
gs
in
lcall
xor
sbb
lcall
fdivl
fists
cmpsl
test
mov
lods
jmp
int3
popf
adc
and
mov
add
inc
xor
fs
mov
scas
scas
loop
iret
fdivr
insl
inc
xchg
iret
data16
fcoms
popf
jns
xchg
sub
xchg
pop
mov
loop
in
jnp
icebp
stc
inc
or
or
cmp
out
dec
inc
in
call
mov
push
mov
or
and
data16
dec
push
es
sbb
xchg
inc
insb
pop
in
rclb
sarl
sbb
dec
mov
mov
or
pop
mov
pop
and
lock
int3
fstps
ss
in
in
test
xchg
jb
fstl
loopne
push
jns
sbbl
xchg
imul
xor
jb
jecxz
mov
or
adc
scas
loopne
push
jle
jle
adc
stos
pop
mov
lret
pop
or
mov
xlat
in
push
outsl
mov
mov
dec
movsl
int
add
mov
je
mov
das
sub
dec
sarl
push
sbb
cmp
or
hlt
insl
inc
dec
xor
fs
mov
or
scas
sbb
mov
lret
cltd
adc
fcoms
sbb
sbb
and
iret
inc
or
ret
dec
jae
pop
sbb
mov
jge
xchg
ljmp
cmpsl
loopne
pusha
push
cmp
xchg
imulb
jg
outsl
cs
dec
fisttpl
cmp
out
or
add
insb
push
clc
in
stos
stos
mov
out
or
push
pusha
ja
loopne
cld
adc
jae
movsb
fdivrl
fs
pop
pop
cmp
mov
jle
xor
add
push
stos
ljmp
data16
out
pop
pop
mov
leave
stc
call
jbe
mov
aaa
dec
jle
sbb
mov
in
pop
psubq
data16
repz
mov
pop
push
mov
cltd
scas
inc
inc
outsb
dec
mov
inc
roll
add
inc
sar
push
pop
bound
sbb
fwait
add
adc
data16
and
sub
fs
sbb
rol
push
bound
repz
dec
mov
jns
outsb
iret
sub
fmuls
scas
test
xor
int3
pop
les
fs
add
pop
push
mov
arpl
icebp
push
sahf
xchg
mov
mov
subl
pop
ss
shlb
push
stos
cmp
push
dec
pop
dec
daa
clc
imulb
in
in
sub
xor
inc
and
loop
push
jp
push
xchg
insb
loope
loopne
mulb
fwait
lcall
mov
hlt
jnp
data16
xor
cmp
aaa
jmp
ljmp
das
add
adc
popf
mov
pusha
dec
sbb
push
mov
cs
mov
dec
fcomip
add
or
loop
jmp
push
pop
push
les
fnstsw
jbe
mov
lret
and
xchg
in
jmp
movsl
pop
mov
data16
sub
dec
daa
cmp
add
push
insb
mov
mov
outsl
into
xor
popa
in
je
pusha
push
fistpl
mov
lret
cli
push
pushf
and
mov
jo
ret
imul
cld
pop
or
mov
adc
jae
shr
ret
movsb
cld
dec
sbb
xchg
sub
xor
push
subl
sbb
les
imul
popa
push
cmp
dec
mov
test
sbb
enter
clc
mov
cmp
js
inc
iret
insb
and
jp
aaa
int3
outsb
or
out
inc
sbb
and
push
inc
xchg
test
mov
mov
or
cld
sarb
push
pop
and
popa
frstor
xlat
add
sbb
sub
push
or
test
dec
int
aad
mov
cmp
daa
cmp
das
insl
int
jl
pop
imul
push
shll
enter
adc
negb
xchg
pusha
pop
mov
out
push
xor
sub
jbe
sbb
dec
cmp
add
and
je
cmp
cmp
dec
ljmp
ficoms
rorb
or
fidivs
adc
mov
sbb
pop
movd
into
pusha
mov
shl
js
inc
ret
cs
ss
xchg
mov
jo
lds
mov
clc
mov
xchg
xor
lods
fstps
push
adc
shll
xor
mov
repnz
scas
nop
push
sbb
daa
adc
cmpb
hlt
mov
lds
pop
pusha
into
push
cmpsb
add
inc
cmpsl
mov
add
flds
into
and
in
repz
ret
rcrl
push
mov
xchg
inc
stos
add
jl
mov
sbb
daa
cmp
sbb
mov
inc
and
sub
cmp
aam
cmp
adc
stos
les
adc
jg
add
add
daa
pop
sarl
fwait
mov
xchg
pop
adc
call
inc
shl
push
subl
idivl
add
push
les
push
clc
xchg
jne
inc
hlt
or
fnstcw
cmp
sbb
push
dec
cmp
mov
mov
xchg
jl
test
xlat
mov
cmp
movsl
cmp
fisubrs
cmpsb
nop
inc
lcall
xor
mov
fcoms
leave
lahf
inc
cs
mov
es
les
push
cltd
outsl
shll
fdivp
push
data16
test
lcall
adc
addr16
cmp
mov
xor
xor
xchg
shll
cmp
mov
ja
adc
push
sbb
clc
adc
xor
js
xchg
es
psllw
fbld
jo
cmpsb
lods
imul
inc
gs
adcl
pushf
into
arpl
xchg
push
sbb
mov
fxtract
ja
lds
and
rclb
enter
cld
jle
jg
pusha
xchg
sbb
enter
fprem
xchg
out
adc
pop
jle
popa
lahf
or
sahf
mov
or
fistpl
adc
mov
cmp
and
or
dec
aaa
pop
popa
adc
jo
out
inc
xor
adc
loop
pusha
pushf
mov
sub
jp
std
push
and
in
imul
stos
int3
push
add
dec
mov
cmp
dec
inc
int3
or
cmp
mov
imul
and
or
movsl
sub
gs
add
rcrb
xor
inc
mov
pop
jns
sarb
in
cmp
sbbb
pop
xchg
sbb
int3
inc
std
aad
sbb
push
popa
sub
inc
pop
add
movsl
dec
cmp
stc
fwait
push
jg
lret
aaa
cli
data16
ret
push
adc
jp,pt
dec
xchg
inc
test
inc
jl
rclb
mov
sbb
add
or
push
dec
in
rcrb
mov
stc
and
push
test
roll
test
fdivrs
xchg
cld
cmpsl
push
add
adc
movsl
mov
out
hlt
fs
je
loopne
popf
test
in
and
loopne
add
add
cmpsb
pop
push
pop
aam
lds
cli
movsb
push
fmull
jbe
sub
popf
daa
and
aas
fisubs
stc
shlb
insb
aam
add
xchg
jns
mov
lds
fmuls
and
int3
push
push
add
jp
mov
adc
dec
scas
mov
mov
jge
mov
lea
out
push
xor
xacquire
sti
sub
jnp
rcr
aam
adc
bound
mov
push
shl
das
int3
int3
add
addr16
fsubl
les
push
fbstp
jns
cmp
xchg
out
push
mov
dec
call
das
mov
test
dec
push
pop
sahf
arpl
xchg
scas
adc
sbb
push
push
fisubl
add
scas
fcomps
test
jae
adc
pop
jecxz
push
jbe
bound
pop
fsubs
nop
ret
sbb
add
jnp
rcrl
add
add
in
ficomps
adc
adc
mov
stos
loop
sub
dec
sbb
outsl
fistl
pusha
pop
jmp
mov
mov
jno
lds
ss
sbb
notb
add
sub
jnp
push
fs
pop
gs
imul
cli
hlt
push
aas
mov
pop
int
iret
iret
push
push
pop
adc
lret
or
pop
mov
outsl
out
adcb
sti
cld
into
pop
jnp
add
shlb
xchg
outsl
in
roll
pop
aad
je,pn
cwtl
cmp
sbb
iret
orb
cld
mov
sahf
rcrl
mov
mov
in
lcall
dec
lds
aaa
add
push
aam
sub
mov
fisubrs
xchg
mov
movsb
jae
incb
xchg
shrl
mov
in
arpl
gs
inc
xchg
push
jbe
mov
fildl
or
dec
lea
outsl
jg
inc
inc
pop
mov
mov
mov
jns
hlt
pop
xor
stos
inc
incl
push
jmp
xor
mov
bound
call
sub
addl
sti
pop
fs
popa
lds
mov
and
std
fldl
mov
dec
push
stos
sbb
loope
push
push
fsts
dec
dec
pusha
jge
dec
cs
dec
shrb
aad
stos
jno
lods
ficoml
pop
repz
add
arpl
rorl
inc
cmp
inc
push
loopne
js
jo
xor
jecxz
xor
sbb
nop
xchg
lods
ret
xor
imulb
xchg
ret
daa
scas
sbb
dec
sarl
subl
xchg
test
inc
xor
popf
pusha
and
mov
aad
movsl
hlt
xor
xchg
push
ret
daa
imul
and
out
dec
jo
xor
imul
pop
and
pop
sub
aam
sti
and
shrb
call
push
jnp
push
jg
jg
jl
les
fwait
je
mov
lret
xor
hlt
mov
rcr
addr16
push
dec
rclb
mov
aam
js
aam
aad
xor
pop
mov
insb
popf
mov
popa
add
push
sbbl
stc
popf
pushf
sub
xchg
jle
or
sbb
pop
icebp
out
inc
xor
sarl
xor
xor
ss
shll
sub
out
jo
sbb
pop
jno
in
testb
test
lahf
xchg
sbb
and
xor
pop
bound
adc
sbb
xchg
xor
and
cmc
adc
push
xor
es
jp
sahf
lock
and
int
push
pop
nop
data16
xchg
fistl
or
push
push
mov
lahf
jg
fstpl
push
jg
lret
push
loope
jb
movsb
shr
mov
call
imul
flds
adc
std
mov
sub
test
sbb
scas
sbb
dec
movsl
push
imul
xchg
mov
xchg
arpl
jns
inc
mov
push
imul
pop
or
notl
jbe
cld
mov
jne
iret
cli
fldenv
dec
call
ret
adc
imul
fstpl
notl
inc
jle
cmovae
sub
popa
jge
lods
sbb
stc
inc
jmp
and
mull
xchg
aaa
lods
or
cmp
inc
mov
sub
aam
dec
pop
sbb
or
or
outsl
rorb
lea
mov
jp
subb
into
sub
lods
cli
xchg
jg
jbe
stc
pop
dec
jecxz
sbb
cmp
xchg
mov
lret
mov
xor
cltd
add
fstps
xchg
popf
inc
cmp
outsl
push
test
sbb
repnz
mov
mov
test
pop
bound
mov
jns
inc
repnz
add
inc
push
inc
jne
cmp
lret
pop
xor
pop
xchg
movsb
popa
mov
outsb
mov
sar
in
ret
ja
fcmovnbe
rcrl
inc
movsl
add
or
out
cli
in
ret
add
cmp
mov
mov
mov
mov
cmpsb
lret
orb
movsb
fists
add
fimull
fstpt
data16
push
pop
scas
inc
pop
lods
out
and
repnz
insl
mov
adc
out
jle
sbb
mov
mov
push
cmp
xlat
cmp
repz
in
cmp
or
cmovp
test
rcll
dec
mov
or
jg
xchg
sub
mov
rolb
ss
cmp
mov
popa
xchg
nop
int
inc
cmp
rclb
repnz
mov
mov
push
jns
ljmp
aam
fistl
mov
iret
mov
sbb
pop
add
popf
dec
in
mov
aad
pop
jnp
sub
push
movsb
jno
push
sbb
jns
dec
or
and
mov
stos
fsubl
iret
mov
cltd
outsb
imul
sbb
mov
ss
jg
sbb
int
push
mov
mov
push
rcrl
jne
aaa
sub
clc
movsb
lods
lcall
jmp
mov
les
and
clc
lea
sbb
xchg
pop
stos
dec
dec
sbb
aas
xor
out
pop
sbb
ret
add
xlat
and
shrb
je,pn
jne
test
push
mov
call
outsl
imul
cmpsb
out
imul
mov
incb
cwtl
xchg
and
icebp
jne
dec
jae
mov
xchg
sbb
aaa
jns
inc
inc
pop
jns
push
shrl
scas
cmp
jb
xor
in
inc
mov
fwait
push
testl
push
cmp
cmp
mov
rorl
in
jae
xor
or
mov
mov
ss
lahf
push
int3
test
fwait
pop
outsb
push
call
fiadds
push
lea
sbb
add
fdivrl
cwtl
ds
xchg
xor
inc
pop
in
push
pop
mov
cmp
jo
and
mov
enter
cmp
test
mov
inc
adc
mov
add
xor
cmc
shll
shrl
mov
cmc
fimuls
lods
push
mov
cs
mov
fnclex
imul
push
mov
sbb
or
jmp
inc
pop
xor
pop
lahf
sarb
jmp
mov
lock
in
or
jnp
das
xchg
jno
std
rorb
pop
ret
pusha
push
lret
xchg
sbb
sbb
ss
xor
mov
rol
rcr
add
out
adc
aas
ja
mov
dec
cmp
or
mov
add
mov
adc
add
cltd
lahf
mov
xor
mov
cmp
fists
dec
sub
jo
jae
sbb
insl
pop
inc
dec
push
cvtpi2ps
leave
and
fldcw
stos
sub
jp
jns
iret
pop
enter
push
fwait
pop
push
push
sub
or
mov
cmp
leave
cmp
adc
movsb
mov
pop
lock
xchg
sbb
cs
jbe
sarl
add
test
leave
jnp
push
and
enter
test
push
dec
insl
fstpt
pop
fwait
jp
stc
data16
jge
rorb
jmp
ss
std
mov
inc
add
cmpsb
fdivr
and
add
jmp
mov
out
pushf
push
sub
dec
pop
test
lods
pop
adc
add
mov
out
arpl
mov
cmp
fs
sub
popl
mov
loopne
or
pop
add
call
cmp
jb
push
dec
adc
pop
xchg
nop
mov
sbb
ljmp
aas
aaa
dec
jae
mov
daa
rep
es
mov
sub
ja
mov
cmpsl
jnp
gs
lods
pop
dec
mov
mov
mov
ret
sbb
jbe
jg
dec
sbb
mov
das
jmp
cmp
push
imul
cmpb
sbb
repnz
sbb
ret
sbb
mov
out
mov
mov
mov
mov
fs
out
imul
movsl
cmp
push
xor
mov
fwait
inc
ds
and
out
lea
faddl
push
pop
xchg
movsl
or
imul
shll
or
lcall
inc
jl
fnstsw
stos
dec
les
dec
push
jnp
pop
mov
into
pop
xor
xchg
js
std
and
bound
repz
aad
nop
mov
inc
popf
fmulp
sbb
mov
xchg
sahf
xchg
adc
push
jbe
cmc
shrl
xchg
aam
in
mov
int
rcll
fwait
sub
into
daa
cmc
mov
ds
push
inc
jmp
add
out
jns
std
cmp
and
fmuls
lock
dec
sbb
mov
sahf
and
xor
mov
insl
cmpsb
mov
jle
jl
imul
push
shl
or
jno
or
outsl
and
repnz
shl
mov
xor
test
sbb
insl
sbb
shll
dec
repnz
pop
push
inc
jle
inc
outsl
or
int3
in
mov
cmc
sub
mov
dec
push
push
xchg
in
or
or
xor
pop
push
dec
inc
jmp
mov
push
popl
rclb
cltd
xor
in
dec
jmp
xlat
mov
jle
xchg
cmp
jb
popa
js
aam
rorb
int3
pop
icebp
mov
ret
shrl
sbbb
jo
mov
push
stos
lea
xchg
mov
lahf
outsb
fidivrl
imul
dec
sbb
das
sub
ret
scas
and
daa
jmp
lods
add
lods
stc
adc
dec
clc
jg
cmp
mov
mov
pop
jns
mov
cmpsb
shrb
test
pop
pushl
es
popa
mov
xchg
sbbb
jae
shll
sarb
addr16
repz
notl
and
out
gs
or
mull
stos
jge
add
gs
xchg
cmpsl
outsb
ljmp
push
add
out
pop
jg
cmpsl
loopne
cli
mov
xor
repnz
and
in
shr
and
mov
mov
scas
imul
aas
inc
outsl
cwtl
scas
pop
pop
cmp
repnz
icebp
and
cmpsb
push
push
or
jb
clc
movsl
adc
push
xor
daa
jb
pushf
mov
inc
mov
adc
test
cli
aas
jle
sahf
sbb
loop
cmp
pop
js
in
test
jbe
adc
add
push
ss
ret
test
jbe
sbb
movsb
mov
xchg
inc
enter
adc
jns
ds
mov
mov
icebp
rorb
orb
repnz
push
and
sub
inc
pop
dec
pop
in
or
mov
rcr
cmc
inc
and
cmp
mov
sbb
lcall
jl
push
mov
xor
das
leave
imul
ret
mov
pop
inc
sbb
jno
rcll
inc
rolb
and
add
test
or
and
add
sub
pushf
and
sbb
cmp
jns
mov
outsb
rcrb
mov
adc
fs
rol
cmp
cmpsl
insl
cltd
cmp
loopne
or
shlb
sbb
imul
pop
sub
cld
imulb
push
xchg
cmpsl
inc
out
xor
ljmp
test
add
dec
rorb
bound
dec
fwait
cmc
xor
cltd
xchg
jo
ffree
ret
shll
adc
mov
push
rcr
mov
str
pop
sub
or
push
sbb
cmc
fsts
mov
xor
inc
das
inc
or
hlt
mov
xor
in
lds
sub
sub
sub
pop
pop
push
fwait
xchg
ljmp
adc
lcall
icebp
es
jne
xor
lods
aas
xchg
daa
lret
push
repz
shll
xchg
push
rcrl
push
daa
cli
lea
mov
fists
cli
mov
neg
or
mov
out
outsb
cmc
cmp
pop
orb
xchg
pop
mov
sub
mov
es
stos
cmp
div
mov
sub
das
stos
loop
je
add
dec
and
es
adc
xchg
aad
push
adc
push
int
jno
adc
inc
lret
int
outsb
enter
out
inc
sbb
dec
fstpl
sti
mov
test
xchg
imul
mov
mov
jb
cs
inc
aas
lods
enter
test
inc
loope
lds
cmp
mulb
adc
pop
and
stc
das
sbb
stos
push
xchg
cli
adc
xchg
adc
into
pop
int3
adc
or
mov
dec
ret
xchg
scas
shrb
xchg
pop
sub
stos
adc
mov
out
rorl
divl
cmc
push
sub
cmp
sub
decl
in
push
or
xchg
jge
and
in
xor
jmp
mov
dec
mov
push
scas
xchg
stos
sub
inc
dec
lods
inc
orl
insb
mov
xor
push
test
fs
add
push
cmpsb
loope
cwtl
jmp
jne
ss
push
stos
rep
rcl
imul
adc
xchg
push
pop
mov
mov
sbb
cli
mov
js
inc
lret
lahf
les
mov
arpl
pop
jge
idivl
or
and
xor
sbb
xlat
mov
repz
aaa
aaa
mov
pop
jb
clc
mov
mov
xor
lds
mov
sbb
aad
scas
cltd
test
mov
and
push
je
sub
dec
and
inc
sbb
movsb
xor
mov
call
mov
inc
je
pop
or
rcl
stos
add
gs
inc
sbb
push
add
and
in
adcb
cmp
jo
pop
rcrl
mov
testl
inc
popa
sbb
notl
fisubs
mov
les
cmp
cli
fsubr
imul
pop
pop
cwtl
test
in
dec
out
xor
pop
xchg
ret
cwtl
cltd
mov
icebp
push
pop
ficoml
xchg
jbe
mov
mov
jns
dec
push
push
aaa
or
mov
dec
es
stos
imul
pop
mov
pop
test
fwait
out
adc
xchg
mov
pop
js
insb
imul
mov
lea
jecxz
je
in
sub
cmp
fcmovb
leave
cmc
icebp
cmpsb
add
jne
aad
adc
call
les
cmpsl
mov
mov
dec
cmp
stc
outsb
adcb
dec
lods
out
nop
adc
outsb
jmp
enter
cmp
nop
adc
pop
ss
sbb
aaa
das
sbbb
xchg
sbb
jb
loope
std
adc
pop
scas
lcall
jl
fwait
incb
adc
cmp
int3
pop
cmpsl
push
dec
addr16
inc
mov
mov
mov
scas
in
jno
call
mov
clc
addr16
and
jb
aaa
sti
lds
insb
jge
loop
pop
jl
scas
adc
or
push
mov
pusha
lods
push
add
mov
inc
dec
mov
and
pop
jge
andl
jb
sbb
mov
jmp
cltd
push
repz
lods
jge
xchg
pop
fsubp
test
daa
dec
sbb
ja
enter
pop
lahf
xor
int
sbb
cwtl
adc
mov
sbbb
test
xlat
mov
cwtl
sbb
cld
mov
jae
les
int
add
mov
inc
shl
mov
pop
mov
mov
cs
mov
frstpm(287
xchg
cmpsl
je
fisttps
jns
ds
cmp
pop
jne
dec
push
arpl
push
fcmovnb
inc
sbb
cli
fidivrl
adc
and
mov
out
roll
ja
iret
into
xchg
into
xchg
mov
push
or
imul
out
xor
packuswb
loope
mov
jno
ss
pop
xchg
cmpps
xor
mov
cld
xor
into
sub
iret
movsb
scas
mov
xor
cmp
fisubl
lods
sbb
pushf
add
xchg
icebp
mov
adc
enter
sti
cli
xor
jge
xchg
and
lock
mov
nop
push
ljmp
inc
push
fistpl
lcall
and
push
sti
jmp
cwtl
divl
popf
sahf
jnp
rcrl
testb
or
adc
daa
xchg
sbb
faddp
xchg
loopne
xor
push
shrb
or
push
dec
aad
cwtl
add
or
inc
mov
cs
int
cmp
rorb
dec
jle
es
xchg
popa
sbb
fistl
loopne
and
xchg
das
mov
dec
fwait
adc
sti
in
pop
ret
rcrl
gs
xchg
push
into
inc
scas
rcrb
mov
push
jne
add
int3
pop
iret
testb
jae
std
popa
pop
out
jb
cmpsl
in
add
adcl
ljmp
sub
lea
inc
cld
push
mov
out
adc
dec
xor
iret
sub
lahf
adc
pop
fnstenv
jl
inc
hlt
iret
in
mov
loop
inc
out
cwtl
out
popa
jp
pop
aas
pop
pmullw
xor
call
dec
pushf
into
xchg
test
jmp
mov
orb
cmp
icebp
and
jecxz
aam
fcomps
push
insb
movb
es
jg
xchg
jg
fwait
ret
push
mov
mov
add
rcrl
popa
bound
add
stc
lea
jmp
xlat
lahf
add
mov
pushf
and
mov
js
jl
out
leave
cmp
repz
mov
fwait
pop
lcall
das
push
lods
and
aas
jno
mov
jg
and
jg
pushf
mov
mov
cmp
mov
xor
jns
add
mov
pusha
xchg
ljmp
adc
out
aam
dec
jo
test
and
outsb
jl
pop
in
jl
dec
pop
jbe
pop
jae
jg
push
ds
push
addr16
cmp
je
fs
mov
loope
out
add
ja
sub
add
cld
add
loopne
pop
xchg
push
push
inc
aas
inc
out
ja
dec
add
mov
inc
es
lds
fidivrl
xchg
fstpt
xor
jnp
clc
fwait
push
or
pop
jp
pop
js
mov
mov
xlat
lds
cld
mov
push
pop
neg
fidivl
mov
test
negb
xor
fdivs
dec
sbb
mov
jge
jge
inc
test
scas
xchg
std
pop
xor
mov
sbb
lret
and
movsl
lcall
outsl
push
outsl
shrb
sbb
cld
push
mov
dec
cmp
bound
xor
sbb
sbb
outsl
fwait
lock
xchg
or
xor
repz
ja
into
inc
shrb
ret
jge
adc
cltd
xor
ficomps
bnd
xor
add
aam
sarl
or
call
push
sbb
inc
lret
xchg
add
outsb
rorb
sbb
push
cmp
xchg
xor
pop
jle
pop
mov
pushf
add
push
ss
jmp
pop
je
inc
outsb
cmp
and
push
repz
cmp
ljmp
nop
bnd
loopne
outsb
popf
imul
outsb
sub
xchg
test
push
lahf
loopne
outsb
push
insl
adc
inc
jecxz
lods
in
adc
xor
stos
aaa
pop
sahf
imul
es
jns
dec
and
jle
fdivl
in
arpl
shrb
push
push
lods
lea
inc
mov
xor
insb
mov
ljmp
xor
rep
push
enter
xchg
iret
inc
mov
dec
int3
mov
mov
push
fwait
jns
imul
lret
sub
negb
lret
ljmp
dec
sub
mov
test
bnd
pop
lea
cmp
in
xchg
sub
loopne
push
cli
xchg
cmpsb
inc
xchg
in
popa
push
rolb
stos
lret
scas
xchg
ret
jo
pop
dec
add
or
pop
inc
sbb
xchg
cmc
sub
cmp
insl
mov
movsb
scas
add
fldln2
lock
shll
in
std
cmpsb
mov
dec
fmull
adc
and
pop
pop
insb
sbb
mov
mov
jbe
or
lods
and
in
lods
scas
xchg
loopne
and
cmpsl
adc
cld
or
jo
push
pop
fld
aaa
push
push
es
popf
or
dec
jns
out
test
nop
in
and
sti
jp
pop
mov
sbb
mov
xchg
cmp
mov
outsb
test
inc
lahf
push
mov
leave
fbld
pusha
test
mov
cltd
subb
js
stos
aaa
mov
mov
lds
pop
sysenter
fwait
mov
push
addr16
ja
jae
int
or
xor
test
imulb
sahf
mov
cmp
jo
sub
and
imull
xlat
in
lret
rcrb
test
repz
in
xorb
cs
insl
lds
rorl
cld
test
push
sub
fmuls
dec
sti
daa
sbb
jecxz
add
outsl
orb
pop
in
xchg
and
ret
push
xchg
xlat
fiadds
pop
dec
inc
dec
inc
xor
mov
incl
cltd
leave
pop
xchg
loopne
cmp
sub
pop
lahf
out
test
or
xor
sbb
andl
jne
pop
cltd
out
mov
cmpsb
stos
cli
mov
xor
in
pop
das
jl
dec
shr
test
ret
sub
and
mov
push
test
xor
lods
aad
enter
pushf
xchg
loop
test
push
stos
pop
and
inc
jl
xchg
cmp
mov
xchg
into
pushf
or
or
dec
fnstsw
pop
push
insl
xor
pushl
mov
loopne
or
sbb
lds
shrl
sbb
push
xor
sub
iret
stos
xchg
push
xor
push
or
dec
pusha
pop
fistpll
int3
xor
cmp
stos
pop
xor
pop
mov
adc
push
cmp
inc
mov
xchg
in
sub
xchg
orb
aas
pop
sbb
jg
jo
pop
cmpsb
fs
adc
xchg
mov
addl
loopne
rol
ret
add
or
push
divl
repnz
cmp
mov
pusha
sti
scas
paddusw
fistpll
push
aaa
in
and
add
es
cli
in
pop
gs
dec
xorl
in
xchg
js
fimull
cwtl
jbe
push
cmp
jmp
sbb
imul
imul
mov
sbb
movsl
lret
or
push
push
sbb
lret
sub
aad
jmp
xchg
sbb
mov
int3
mov
in
repnz
leave
adc
loop
cmp
out
stos
mov
adc
cmp
negb
mov
js
enter
out
adc
fnsave
cmp
mov
xor
inc
shr
repz
pushf
in
fs
repz
adc
push
call
jo
dec
rol
sahf
cli
sbb
sub
out
mov
dec
sub
rcrl
cmp
fidivrl
push
push
rcrl
sbb
mov
cmp
sub
push
ret
icebp
mov
addr16
iret
sbb
cs
test
jge
mov
jl
ss
xchg
pop
and
adc
jmp
or
loope
jne
mov
mov
in
jno
fs
inc
mov
xor
les
std
fldl
xlat
xchg
pop
pop
dec
mov
lods
dec
xorb
mov
or
mov
mov
jnp
in
or
call
iret
push
fwait
icebp
out
mov
outsl
and
movsl
orb
cmp
add
sub
subb
dec
cld
mov
bndstx
mov
or
arpl
xchg
rolb
shlb
xor
sbb
aad
cmp
clc
js
aad
popf
je
sbb
scas
loop
and
sub
mov
dec
scas
ret
test
xor
cmp
comiss
add
int3
test
and
push
nop
ja
iret
xchg
js
popf
aam
lret
test
les
mov
out
and
cmp
cmp
sahf
mov
pop
mov
jle
inc
pop
test
sti
and
inc
inc
mov
jbe
push
and
xchg
adc
insb
dec
sbb
xchg
inc
jne
das
inc
mov
cmp
jno
test
sub
push
lock
mov
in
jg
nop
push
or
xchg
fiaddl
jmp
shrl
movsb
into
icebp
xchg
push
shll
xor
xchg
cmp
lods
outsb
addl
arpl
mov
pusha
sub
adc
xlat
lcall
cmp
ror
mulps
jns
xor
push
push
adc
lcall
mov
fcoms
add
or
lea
push
cmp
out
mov
jg
jnp
mov
lret
int
outsb
mov
sti
sub
fwait
pop
in
test
sub
add
clc
xchg
pop
into
cmpl
ss
cmp
test
leave
add
insl
inc
gs
gs
push
jo
xchg
push
adc
out
sbb
sahf
js
pop
outsb
pop
push
stos
icebp
xor
int
xor
notb
push
or
fdivp
scas
movsl
mov
xchg
lods
shlb
ljmp
test
in
inc
pop
test
adc
ffreep
ret
dec
cmp
xor
push
shlb
enter
push
cmp
push
adc
inc
push
sbb
pop
push
rcrl
test
repnz
jno
push
and
out
test
imul
xchg
mov
add
jecxz
push
enter
inc
lods
push
je
or
xor
cld
inc
jge
dec
mov
adc
add
add
test
dec
xchg
cmp
jnp
mov
cs
mov
sbb
lahf
movsl
dec
mov
rcrl
mov
mov
and
and
insb
xchg
mov
ds
pop
and
pop
inc
pop
mov
xchg
into
sti
inc
fisttpl
clc
sub
idiv
sbb
stc
dec
xor
mov
subb
or
pushf
in
outsb
add
mov
or
addr16
inc
push
stc
pop
ja
adc
mov
movl
push
pop
xor
insb
sahf
xchg
es
js
aam
jbe
popf
mov
and
aam
popf
add
sbb
xor
gs
cwtl
testb
cmp
jno
xlat
dec
cmp
mov
inc
loope
rorl
xor
stos
xchg
add
push
or
addr16
mov
outsb
fcoms
pop
add
push
mov
add
into
dec
dec
ljmp
lcall
shlb
outsl
cld
mov
ret
loop
shlb
fisubs
cmpsl
mov
inc
push
sbb
add
mov
xchg
push
idivl
dec
sub
repz
jbe
jecxz
negb
mov
je
iret
cmp
fcmovb
popa
shll
in
and
inc
push
mov
pop
or
sbb
test
jne
push
mov
jae
popa
add
fcomps
xor
lret
push
xor
cld
mov
dec
arpl
gs
inc
pop
in
push
cmpsb
xor
cmpsb
sub
jl
das
ds
push
mov
popf
addr16
cltd
test
notb
sbbl
lds
push
jnp
pusha
xlat
fnstcw
aaa
or
and
test
icebp
insl
idivb
pop
dec
incl
sbb
and
jge
fcoms
sub
cmp
xchg
das
dec
pop
xchg
sbbb
jns
pop
xor
pop
dec
push
call
gs
dec
decl
sub
sbbb
pushl
shlb
dec
clc
rcr
daa
add
sti
ss
popl
rcr
inc
dec
dec
push
sbbb
filds
mov
ljmp
mov
sbb
mov
nop
dec
dec
mov
scas
testb
loope
xor
inc
fsubrl
mov
dec
mov
fcoml
mov
jns
insl
dec
sub
int3
dec
adc
cld
idivl
push
xchg
cmp
das
nop
jge
in
cmpsl
xchg
sub
das
sarb
xchg
mov
aam
in
cmp
lahf
push
xor
inc
cmp
repz
icebp
sub
das
out
ljmp
push
mov
jl
adc
leave
int3
xchg
cmp
cmpsb
lock
mov
rorb
ja
ret
sbb
pop
mov
sbb
inc
and
pop
fldenv
je
jge
sbbb
jmp
jmp
arpl
mov
loopne
pushf
mov
mov
mov
shll
mov
pop
ret
ret
pop
push
lcall
cli
inc
adc
outsb
or
ret
add
sbbl
inc
aad
stos
add
adc
mov
and
pop
mov
xchg
dec
pop
dec
mov
mov
xchg
test
push
std
mov
iret
mov
inc
push
shlb
sarb
ljmp
jmp
cmc
inc
out
adc
mov
mov
adcb
out
mov
xchg
cli
dec
imul
scas
mov
ret
cs
mov
sbb
or
inc
int3
les
loopne
and
or
cmpsb
subl
or
dec
cmp
inc
int
mov
mov
jmp
lods
mov
push
shr
pop
std
arpl
lahf
jp
loop
sub
push
or
sub
fwait
pop
cmp
jge
jg
cmpsb
and
test
push
add
leave
dec
or
hlt
aaa
pop
imul
mov
aas
xchg
sbbb
int
test
xor
insl
cmpsb
fsubs
cmp
int3
fildl
call
mov
sbb
rol
mov
cmp
icebp
subl
outsl
insl
or
jge
xchg
pop
pop
aam
sbb
pusha
inc
fwait
inc
cmp
ss
out
sbb
jae
lock
sbb
pop
inc
cmpsb
sbb
lcall
cmp
adc
loop
gs
lret
xor
cltd
cli
xchg
faddl
mov
sbb
xor
aaa
mov
aas
aas
xor
or
aaa
call
js
add
jo
pop
xor
arpl
leave
jns
cltd
or
mov
push
or
pop
jp
xchg
loop
xchg
sbbl
jb
sarl
dec
popa
push
jo
pinsrw
sti
mov
cmp
je
sbbb
mov
fst
in
jb
mov
sub
jmp
fisubrl
insl
fs
lret
sti
jg
or
inc
push
imul
push
repnz
leave
cltd
testl
hlt
fwait
dec
cltd
dec
push
cmp
test
adc
enter
pop
mov
mov
je
adcb
ljmp
jae
inc
ds
jo
push
out
mov
and
push
and
xor
inc
mov
inc
shll
sbb
ljmp
cmp
inc
movsl
adc
and
add
std
jo
pop
and
xor
pop
decl
scas
cmp
dec
nop
rolb
dec
insb
punpckhdq
lcall
sub
nop
pushf
jae
inc
mov
mov
jmp
mov
arpl
loop
add
add
inc
inc
test
mov
xor
mov
out
cs
fsubrl
ljmp
jl
ss
xor
mov
movsb
jecxz
mov
inc
test
in
inc
sbb
pop
sahf
inc
mov
mov
neg
and
xor
hlt
sub
enter
adc
jno
add
or
es
in
hlt
xor
cwtl
pop
arpl
outsb
stos
dec
mov
dec
and
mov
mov
mov
jo
insb
data16
sbb
mov
add
pop
addb
add
cwtl
jnp
dec
js
xchg
lret
xchg
adc
lahf
and
out
rorl
mov
pop
loope
pushf
test
repnz
pop
lahf
les
popf
or
pop
mov
in
mov
jne
ds
pop
or
rcrl
lret
sub
movsl
mov
aaa
mov
jge
test
rorb
mov
push
pop
jo
mov
xchg
ljmp
mov
sub
cs
sbb
adc
mov
fcompl
test
cmc
jle
mov
shrb
ss
mov
jo
fists
push
lcall
mov
mov
lods
loop
inc
lcall
pop
pop
xor
cwtl
jl
js
push
or
mov
xchg
repz
cld
mov
jge
pop
mov
sub
out
jb
loopne
hlt
pop
cld
fnstcw
test
aad
std
divb
js
cmc
call
cmp
pushf
bound
mov
jle
dec
jne
adc
jge
xchg
sbb
push
fcoms
push
leave
inc
loopne
stc
int
push
ds
mov
mov
imul
pop
dec
push
test
dec
hlt
or
lret
mov
add
sub
push
loope
daa
mov
pop
inc
pop
fwait
in
mov
ds
stc
movsb
ret
loope
pop
fnstcw
xchg
push
mov
mov
addb
int
xor
mov
sbb
std
mov
lods
xor
or
cmp
pushf
cmp
arpl
es
scas
and
mov
push
or
clc
andb
sbb
xor
push
sbb
je
imul
sub
cmp
jg
jmp
mov
sti
sbb
jg
add
in
out
mov
xchg
and
sbb
ret
outsb
insl
and
xor
flds
lret
jns
icebp
xchg
mov
dec
loop
fadd
test
adc
or
and
dec
in
xchg
outsb
addl
pop
bound
lods
mov
xor
mov
ror
addr16
loop
xchg
jle
sub
mov
sarb
loope
enter
jecxz
xor
in
aaa
cmp
lahf
cltd
iret
xor
sub
pop
cwtl
in
in
cmp
lods
sti
ds
xchg
mov
out
out
insl
dec
xor
out
mov
dec
xlat
aaa
cltd
cmc
outsl
sbb
out
out
push
sub
icebp
and
ror
inc
mov
sbbb
mov
adc
push
and
inc
inc
xor
rcrb
cmp
rcll
mov
add
sbb
scas
jne
test
adc
loop
xchg
push
xor
ja
lcall
ds
iret
int3
int3
nop
sbb
or
lret
mov
cmp
loope
push
pop
push
ret
push
lds
mov
push
jge
mov
sbb
ret
movsl
adc
les
iret
adc
inc
push
push
div
or
xorl
cltd
lds
fdivr
aas
inc
push
cmp
lcall
leave
pop
in
lret
dec
xchg
mov
jae
lret
jae
imul
gs
cmc
movsl
cmp
sub
push
or
adc
stc
jmp
daa
mov
mov
jo
adc
in
lods
dec
add
sbb
or
fsubrl
pushf
add
sbb
inc
ret
adc
push
js
popf
xor
aaa
or
pop
sbb
stos
xor
fstps
cmp
in
pop
xchg
lock
daa
sbb
nop
dec
fsubl
xchg
stc
fcmovu
add
adc
add
jae
lret
out
pop
mov
adc
aad
es
xchg
in
lods
push
ficompl
leave
pop
in
sahf
fistpl
push
push
and
mov
push
cwtl
lds
pop
push
adc
mov
add
cmp
pop
cmc
mov
je
adc
xchg
out
sub
mov
daa
repz
and
sbb
jp
icebp
daa
add
dec
xor
dec
in
movsl
push
fdiv
mov
and
mov
inc
add
xor
push
data16
sub
jmp
mov
jnp
leave
jbe
js
xchg
push
dec
sub
add
aaa
sub
out
fwait
xchg
jb
jp
out
mov
out
das
fildl
sbb
addl
imul
cmc
jecxz
push
lahf
imul
je
mov
add
lcall
jno
fwait
jg
cwtl
push
jno
fisttpll
adc
mov
xor
scas
loopne
test
in
cmpsb
mov
notb
fs
xchg
jb
mov
std
inc
sub
sub
inc
and
mov
sub
inc
sarb
adc
mov
jns
push
andl
in
dec
pop
test
mov
add
pop
int3
pop
std
or
aam
cmp
bound
jb
add
push
test
fcmovbe
push
pop
inc
mov
xchg
and
push
lret
inc
or
in
int3
xchg
mov
xchg
outsb
dec
cld
out
dec
stos
mov
sbb
xor
xchg
pushf
loop
aad
rorb
adc
mov
add
mov
out
and
in
add
sti
cmp
sbb
cmp
xor
cmp
negb
sbb
in
ja
dec
scas
xor
xorb
cltd
mov
int
out
movhps
jl
push
lcall
pop
js
rorl
shll
and
mov
fwait
add
pushf
wrmsr
pop
test
jmp
pop
and
and
inc
push
cwtl
cwtl
or
in
pop
dec
cmpsl
fsubrl
or
ss
add
push
jne
icebp
dec
nop
movsl
pop
push
cmp
in
shll
add
sbb
mov
jo
sub
dec
out
lret
cmp
cmp
xchg
ficomps
mov
into
sbb
rclb
sbb
aas
push
dec
cmpl
cmc
jecxz
push
inc
shrl
movsb
and
data16
adc
lret
movsb
outsb
lahf
sbb
adc
xchg
fs
mov
aam
lahf
sub
and
jle
xchg
push
jp
aaa
jae
pop
mov
lods
ss
jl
dec
cmc
push
nop
add
dec
rcrl
mov
and
icebp
jae
cs
daa
cwtl
cwtl
or
ret
iret
mov
stc
xchg
insb
sub
xor
cli
push
jno
jb
xor
imul
and
mov
in
lock
sbb
jg
jge
or
inc
jg
sbb
nop
icebp
ljmp
adc
cmp
cmp
pusha
push
sub
adc
lahf
test
ficoms
adc
mov
jnp
imul
mov
fcompl
mov
mov
pop
cmpsl
jecxz
jbe
xor
sub
lods
mov
inc
push
jecxz
je
test
mov
cld
popa
xchg
mulb
ljmp
mov
add
sahf
enter
sbb
mov
add
xlat
loope
inc
flds
stos
outsb
inc
rclb
stos
or
jbe
lret
les
out
lahf
js
repnz
xchg
xchg
enter
pop
xchg
cmp
push
loopne
mov
jae
jmp
xor
sbbl
test
xchg
adcb
mov
shll
lea
rcll
daa
out
cmp
push
cmp
push
scas
or
xor
push
dec
push
inc
lcall
fcmovb
aad
les
push
pop
aad
mov
adc
sbb
add
mov
xchg
mov
loop,pn
sti
or
mov
or
mov
and
lock
cltd
arpl
mov
and
sub
sbb
jae
xor
lods
jge
lods
and
int3
or
adc
test
nop
in
sub
cli
aad
xchg
mov
push
cmp
pushf
cmp
xchg
push
jne
int3
lret
inc
mov
loopne
mov
cwtl
xchg
jo
push
and
jg
mov
int3
mov
sti
shlb
dec
shr
xchg
push
mov
ret
xor
and
xor
aad
push
rcrb
sbb
movsl
sbb
pushf
pop
mov
cmpsl
cwtl
sbbl
mov
mov
and
fisubrs
cld
pop
mov
arpl
pushf
jg
xchg
enter
mov
mov
lock
push
iretw
mov
fsubr
and
push
xchg
pop
scas
pusha
sbb
cmc
inc
mov
pop
popa
bound
out
xor
mov
imul
bound
adc
shr
daa
int3
push
aad
mov
jmp
push
cltd
inc
mov
outsl
inc
mov
jle
adc
sbb
inc
or
mov
xchg
cmpsb
adc
ss
icebp
in
in
pcmpgtb
dec
mov
jl
int3
inc
sbb
or
cli
and
pop
jge
xor
push
ds
mov
mov
and
ja
adc
movsl
adc
out
push
jbe
xchg
je
xor
inc
inc
rcl
stos
pop
loope
jg
and
dec
mov
push
sarl
adc
mov
pop
fldt
mov
push
mov
sub
push
dec
add
mov
loope
shlb
int
call
aas
jb
mov
repnz
scas
loope
ret
jbe
cmp
cmpsb
pop
xor
repz
out
pop
inc
mov
sbb
push
imul
hlt
jmp
or
sbb
cs
mov
stos
and
lcall
leave
jl
jg
sub
mov
and
push
jno
cmc
test
lock
dec
inc
push
gs
or
data16
pop
dec
dec
data16
ficoml
enter
aas
daa
shll
rorb
push
pop
push
push
jns
push
fwait
inc
dec
pop
fs
dec
pop
jno
add
pop
imul
cmpsb
jp
add
push
aaa
mov
outsb
pop
push
cmpsb
and
mov
push
pop
adc
cmp
iret
shrb
cmp
add
push
pop
sbb
push
jb
nop
push
jo
arpl
xchg
imul
cwtl
sbbl
movsb
dec
inc
mov
pop
xchg
lahf
mov
test
xor
loopne
jge
or
push
sbb
clc
call
lods
ffree
pop
rorb
movsl
dec
rcrl
hlt
or
aas
mov
mov
and
cs
pushf
movsl
push
imul
fsubr
lret
push
lock
adc
cmp
jne
lcall
xor
sub
outsb
test
mov
scas
jg
mov
stos
jge
jg
ret
mov
sbb
mov
pop
push
jo
push
and
push
nop
push
and
cmp
divl
xor
sub
mov
nop
je
shll
pop
push
test
mov
push
adc
testb
or
push
jl
jp
xor
clc
rcll
ja
push
shl
cwtl
nop
mov
imul
gs
sbb
in
xchg
inc
sub
pop
xor
insl
mov
push
push
gs
mov
lods
lret
fs
popa
sbb
pop
out
cmpb
sub
dec
cmp
xor
imul
mov
or
xchg
jns
cli
sbb
dec
dec
mov
adcl
xchg
loope
addr16
gs
daa
or
aaa
xor
cltd
inc
lods
push
shrl
jae
fistpl
enter
scas
push
loope
mov
popf
ret
mov
adc
inc
mov
push
leave
mov
jle
mov
insb
es
pop
xor
xorl
notb
and
add
mov
cmove
and
sti
add
push
xor
jbe
cmp
in
add
jg
das
fidivl
sbb
jo
pop
repz
xor
xor
aaa
scas
rcr
pop
shlb
out
idivb
idivl
out
pop
mov
push
inc
add
xchg
xchg
mov
mov
and
sub
ljmp
pop
and
hlt
rcrb
sahf
or
mov
mov
sub
pop
jg
xchg
sbb
mov
add
mov
leave
cs
mov
and
mov
dec
or
cmpsl
jno
xor
mov
push
sub
mov
hlt
pop
jae
lods
fbld
adc
jge
mov
sbb
movsl
incb
push
aaa
pushf
popf
pushw
pop
inc
cmpsl
dec
outsb
dec
shrb
leave
sbb
jp
xor
jbe
xchg
lret
sbb
jle
sti
push
xchg
xor
shll
add
adc
fstpt
jg
scas
and
arpl
and
fsub
ret
movsl
cmp
lahf
out
push
rclb
fisttps
lret
mov
fnsave
out
dec
mov
push
inc
stos
push
mov
sbb
push
roll
cmp
bound
inc
sub
mov
pop
lret
xor
and
push
and
in
cltd
and
scas
push
xor
enter
dec
pusha
stos
inc
mov
std
push
mov
ljmp
mov
bound
inc
jle
add
fwait
popa
sbb
or
cld
xor
xchg
sti
lcall
pop
or
mov
test
xor
jg
push
and
push
lret
mov
cmpsl
mov
jo
adc
mov
xchg
sarb
and
fs
sti
arpl
push
bound
sbb
mov
je
add
in
fdivr
cs
aas
jle
xchg
imul
inc
inc
mov
jnp
aad
mov
call
fisubs
jb
jge
loopne
push
movsb
mov
inc
sbb
orb
push
cmp
lret
imul
xor
dec
mov
fldenv
icebp
ja
in
cmp
repnz
pop
fmuls
jle
cmc
repnz
stos
aas
pop
loop
jo
fisubs
cltd
ljmp
fxtract
addr16
sbb
lods
daa
mov
inc
mov
fcompl
pushfw
add
shrb
jp
jo
jmp
pop
and
mov
cmp
loop
scas
addr16
nop
cmp
pusha
xor
pushf
test
cltd
sub
insl
or
data16
jmp
sbb
jne
mov
xor
sub
roll
or
fdivr
daa
gs
adc
cmp
push
adc
push
inc
push
or
aas
pop
repnz
pop
in
fsubrs
cmp
and
or
roll
clc
cmp
repnz
das
outsb
mov
sub
mov
and
xor
or
mov
insl
std
xor
push
push
dec
xchg
xor
and
loop
add
cmc
adc
xor
or
rcrb
and
test
mov
addl
fcom
mov
int3
mov
cmpsl
pop
sub
sbb
pop
les
test
test
shrb
data16
out
mov
sbb
lds
add
scas
mov
data16
adc
dec
into
call
jmp
int
pop
lea
jg
ret
inc
mov
push
mov
pushw
dec
push
jge
out
cs
mov
psubsw
sub
data16
mov
cmc
iret
je
fcmovnbe
adc
inc
cmp
push
push
ljmp
cmp
pushf
fcomp
inc
pop
add
inc
int3
sub
hlt
xlat
and
cmp
jnp
data16
test
cmp
or
scas
jg
sub
dec
sub
fisubrs
inc
lock
pop
sbb
xchg
testl
adc
sbb
mov
stc
stos
ja
and
ja
sarb
adc
sbb
jno
sub
je
cmc
aad
scas
sbb
and
add
push
aad
mov
int
dec
mov
push
ljmp
cmpsb
out
add
xlat
cmp
lret
pop
mov
ds
push
jg,pn
pop
push
sbb
hlt
mov
inc
icebp
dec
fbstp
pushf
repz
sub
add
ja
cmpsl
lds
jne
arpl
jecxz
mov
mov
jne
aad
cmp
add
jg
sbb
sub
inc
and
mov
pop
fisubrs
ret
fiaddl
jecxz
sub
xchg
cltd
gs
sbb
cmp
lret
andb
add
cltd
stc
roll
and
insb
xor
mov
ds
push
jb
out
push
mov
les
add
repz
fisttpl
ja
mov
jmp
scas
add
pop
inc
xchg
enter
pop
arpl
adc
dec
sub
ret
push
and
sbb
mov
mov
mov
fistl
push
push
data16
ror
inc
push
test
and
not
xchg
xchg
std
mov
mov
jno
sbb
pop
and
lcall
fcomps
mov
xchg
stc
movsb
jno
mov
mov
ds
sub
mov
push
adc
dec
push
aas
or
or
add
shlb
dec
roll
add
clc
out
icebp
inc
push
xor
lods
je
sub
shl
loop
push
and
pop
cwtl
fstpt
cli
das
push
mov
dec
jmp
adc
adc
lock
mov
in
pop
out
jg
mov
jno
addr16
ret
leave
leave
gs
push
add
sti
xor
xchg
aas
mov
out
stos
scas
xchg
cmp
fnsave
ja
and
cld
out
sbb
mov
push
out
out
dec
mov
pop
mov
push
inc
mov
mov
mov
roll
or
bound
shlb
loope
cld
xor
xor
or
ret
dec
filds
push
cli
inc
mov
dec
or
aad
and
test
and
adc
mov
sahf
out
mov
int3
movsl
sub
lret
dec
push
mov
xor
pusha
fdivrl
mov
test
mov
shlb
xor
js
sub
es
xor
rolb
pop
test
insb
cmp
mov
negb
pusha
testl
dec
sub
xorl
adc
lcall
and
cmp
movsb
icebp
les
decb
cmpsl
or
in
xor
cmc
and
gs
push
jae
adc
cmp
pop
out
sub
sbbb
add
in
gs
das
lret
stos
xor
clc
call
sub
rcll
or
ds
mov
fldl
pop
push
sub
cltd
push
sbb
or
cmpsl
sti
lea
cmp
fnsave
mov
icebp
lret
fadds
mov
loope
pop
jnp
in
mov
testb
fistps
pop
sti
test
int3
cmpsl
shll
mov
mov
das
mov
data16
insb
inc
cmc
loop
sub
pushf
lcall
arpl
test
cmp
cwtl
enter
testb
js
adc
mov
add
pop
adc
arpl
adc
scas
les
pop
fwait
lahf
imul
fimuls
add
dec
mov
adc
das
jbe
repnz
lds
mov
cmp
es
pop
sub
inc
leave
aas
movsl
sub
push
ja
sbb
lahf
stc
lods
jle
jne
sbb
push
imul
movsb
mov
icebp
pushf
inc
push
inc
pop
sub
data16
add
mov
daa
jmp
popa
test
mov
aas
mov
pop
cmp
and
div
xchg
dec
xor
xor
sar
test
mov
lcall
jmp
sub
scas
andl
inc
scas
aas
push
push
dec
sbb
int
xor
pop
out
test
js
xchg
mov
jo
dec
xor
and
outsb
loop
lret
lret
mov
jae
xor
arpl
mov
push
outsb
aad
mov
ret
pcmpeqb
inc
mov
pop
xchg
imul
and
mov
lods
xchg
in
add
es
fmulp
xor
or
sub
clc
push
fists
mov
test
or
das
js
jnp
imul
sub
das
pop
out
mov
test
cmpsl
jae
rorb
mov
inc
shr
mov
mov
cmp
out
cltd
filds
lock
in
sbb
mov
fmuls
addl
loopne
xor
mov
jmp
push
outsl
bound
iret
dec
mov
insl
cwtl
loopne
loope
push
outsb
sub
jae
add
loope
aaa
mov
dec
dec
adc
iret
imul
iret
rcrl
test
inc
pop
icebp
adc
jmp
orl
xor
daa
pop
leave
arpl
out
dec
jmp
je
mov
in
add
jo
mov
out
cmp
cli
testb
mov
or
cld
add
into
push
xchg
mov
xchg
cltd
insb
jl
inc
imul
flds
cmpsl
mov
cli
jbe
mov
mov
mov
sub
cwtl
call
std
or
cmpsb
cli
les
pop
dec
stos
lcall
sub
gs
lret
popf
lods
pop
cwtl
loope
mov
test
pop
cmp
scas
mov
fmuls
adc
movsb
sbb
les
inc
testb
imul
daa
or
iret
cmpsb
adc
inc
idiv
jb
les
insl
xchg
push
xchg
and
jae
mov
xlat
ja
icebp
aaa
leave
fisubs
rep
mov
dec
mov
adc
pop
mov
ja
xchg
mov
jg
fdivrl
pushl
mov
std
mov
adc
mov
adc
pop
and
call
mov
sbb
sub
fsubl
je
mov
jno
sbbl
pop
xor
jae
aam
and
addr16
ljmp
movsb
call
dec
adc
loope
lods
or
pop
aam
mov
mov
loopne
sub
lods
mov
daa
dec
pop
mov
fstps
pop
sar
xchg
xor
enter
fstps
xor
in
sub
jp
mov
fistpl
fnsave
lds
sti
js
daa
stos
and
cmpsl
inc
clc
movsl
adc
lcall
push
mov
icebp
iret
fistl
mov
dec
es
dec
fcmovbe
push
scas
cmp
clc
jmp
insb
rorb
xor
jb
jp
scas
mov
adc
and
push
add
push
push
jb
loope
dec
and
fimull
pop
sbb
test
xchg
stc
add
add
loope
iret
fmuls
je
push
stos
lods
rolb
push
adc
insb
sub
mov
dec
pop
dec
inc
lahf
icebp
add
inc
daa
or
jne
jle
fcomp
xchg
ljmp
outsl
mov
xchg
adc
or
sbb
sarb
in
popa
cs
test
lods
or
fisttpll
std
sub
insl
and
mov
pop
jb
push
ljmp
or
je
sbb
xchg
into
push
nop
stc
or
loop
or
aas
dec
icebp
sbbb
mov
mov
fisubl
or
sub
adc
xchg
fs
fcoms
sbb
std
loopne
xor
sub
pop
ror
add
mov
mov
sbb
jnp
jecxz
push
shrl
pop
sub
sar
or
fcmovnbe
mov
mov
iret
aaa
loope
fistpl
xor
xchg
mov
jb
or
mov
fadds
icebp
mov
insl
fucomp
add
in
xlat
out
jno
xchg
idivl
mov
push
mov
loopne
sub
pop
imul
inc
fwait
adc
jb
icebp
mov
xchg
aas
inc
js
repnz
pop
daa
push
rol
jae
lds
mov
xchg
je
popf
ja
xor
incb
in
mov
jae
mov
pop
xor
push
xchg
divl
add
stos
mov
jbe
jo
pop
insl
out
sarb
outsb
stos
mov
sbb
mov
mov
sbb
gs
sbb
mov
sbb
xor
aad
sbb
cld
stos
pop
pop
test
das
cmp
fwait
push
addl
add
and
je
mov
fs
adc
inc
mov
push
lret
pop
pop
jecxz
xchg
pop
addr16
jbe
mov
testb
mov
insl
mov
mov
mov
sbb
hlt
mov
cmp
jmp
lds
repz
mov
push
inc
repz
pushf
adc
lret
jb
in
cmp
pop
jmp
out
mov
sub
mov
add
mov
mov
adc
lea
packsswb
jp
in
push
aas
enter
ljmp
dec
xorl
xlat
adc
mov
dec
mov
dec
xor
pop
fildll
jmp
adc
shll
adc
push
push
testb
fs
icebp
fbstp
mov
icebp
pop
push
xchg
pop
out
jmp
xchg
aaa
adc
js
outsl
xor
stos
xchg
cmc
jb
dec
cwtl
adcl
cli
out
ja
aas
pop
jbe
popf
lea
mov
lret
incl
jo
out
sub
stc
in
xchg
mov
aam
lret
jge
xchg
lahf
or
int3
lret
scas
pushf
sbb
jno
fnstenv
push
xchg
xor
ds
hlt
xchg
mov
inc
lds
in
ret
in
inc
or
std
shrb
jmp
cmc
add
xor
out
lods
mov
xchg
fisttpll
fstpl
or
xlat
pusha
js
lock
cmp
xchg
icebp
adc
repz
cmp
iret
ret
jns
cmp
out
xchg
xor
add
js
jno
pop
sbb
jg
push
push
mov
mov
hlt
sbb
inc
mov
dec
and
and
mov
inc
pop
gs
jno
and
inc
or
dec
iret
fldcw
cmc
bnd
lods
mov
imul
arpl
mov
pusha
lds
loopne
stos
loop
push
sub
cmp
push
mov
dec
mov
xchg
jge
push
addr16
mov
scas
lods
xlat
dec
cld
in
fdivr
push
mov
mov
sahf
dec
leavew
loop
cmpsl
jno
xchg
push
xchg
sbb
mov
lods
int3
xlat
and
adc
mov
fisttpl
stos
xor
rol
cmc
loop
or
js
scas
out
cmp
or
xchg
imul
sbb
add
and
ds
test
iret
sahf
mov
xor
lcall
push
lods
fmuls
sub
push
scas
mov
cmpsl
test
mov
jmp
push
sahf
dec
out
aas
repz
pop
adc
lahf
arpl
jne
out
sbb
add
and
or
ds
push
aas
and
scas
xchg
into
adc
xor
cltd
lahf
adc
lea
daa
jb
iret
mov
xchg
out
sub
xchg
in
clc
jp
sub
xchg
cwtl
fdivrs
movsb
fsubrs
adc
test
push
call
inc
mov
dec
adc
add
xor
imul
inc
test
mov
out
bound
push
jmp
cmp
or
loopne
jo
cmp
inc
xchg
xchg
and
test
push
push
adc
stos
jp
popf
fwait
push
mov
and
js
es
cmp
and
fidivrs
in
pop
repz
xor
ds
cmp
mov
dec
cwtl
push
sub
loop
cmp
cld
mov
subb
push
in
push
or
xor
jl
pop
movsl
test
stos
push
dec
mov
mov
outsb
and
fsubl
xchg
scas
frstor
adcl
inc
sub
add
pop
xchg
pop
pusha
lret
pop
push
push
cld
and
ljmp
scas
ret
pop
and
xlat
fdivp
mov
adc
dec
sbb
xor
mov
xlat
add
iret
call
push
mov
push
imul
mov
lods
mov
mov
push
mov
inc
loopne
jb
jns
cmp
aam
cmp
xor
sub
mov
sbb
in
cmp
mov
in
jns
in
ror
xchg
push
sbb
xchg
out
pop
shll
sub
and
in
and
jno
mov
pop
ja
adcb
xor
test
and
push
lods
inc
sub
mov
ror
aam
clc
fnstsw
cmp
pushf
das
push
aas
nop
mov
sbb
dec
pop
in
enter
mov
call
mov
movsl
lods
pop
sub
pushl
test
inc
jnp
imul
test
sbb
inc
adc
add
add
inc
sbb
push
push
mov
xchg
imul
add
jp
inc
pop
push
mov
cld
sbb
inc
xor
mov
dec
mov
add
js
cmc
aam
adc
xchg
push
cmpsb
imul
scas
fwait
push
cmp
dec
pop
fnstenv
and
out
add
test
mov
lock
call
imul
inc
stos
mov
sahf
hlt
iret
out
sub
mov
sbb
mov
jb
mov
pop
outsl
int
xchg
int
fldenv
js
test
cmp
xchg
sub
movlps
mov
push
dec
sub
popf
fiaddl
pop
sbb
loope
mov
loop
push
adc
cmp
push
sbb
xchg
and
pop
clc
negl
cltd
out
dec
test
rclb
imul
sbb
js
mov
mov
imul
testl
jp
or
dec
lahf
into
fists
pop
test
push
pop
rcr
das
sbb
pop
es
jo
sub
push
shlb
cmp
add
cmpsb
in
cmp
pushf
xor
mov
cs
push
mov
cmpsb
in
pop
add
mov
add
xor
jnp
jns
movl
mov
mov
sbbb
fistps
cmp
in
sbb
jl
dec
in
mov
filds
negl
aad
cmpsl
test
and
pop
mov
mov
call
jno
ja
xchg
add
leave
sbb
xor
sbb
cmp
stos
lret
js
cmp
dec
popa
or
xchg
dec
push
xchg
sbb
push
in
rol
in
adc
mov
sub
lret
aad
into
sbb
xlat
adc
rolb
push
push
sbb
fcmovu
lds
or
or
mov
and
xor
aas
fsub
ja
mov
cmp
gs
lret
push
in
xlat
fists
sub
test
test
pop
mov
jg
mov
pop
mov
test
movsl
cmp
cmp
psubusw
xor
ds
mov
cmp
cmp
cltd
lods
data16
enter
scas
cmpsl
cmp
jecxz
or
mov
cmp
imul
call
dec
repnz
mov
sbb
inc
cltd
orl
test
adc
mov
jmp
inc
fst
cs
mov
mov
xor
nop
add
mov
adc
fstl
cs
jb
sub
in
pop
movsl
xchg
popf
mov
xor
mov
es
shll
dec
stos
inc
aas
cmp
adc
or
das
dec
mov
jecxz
dec
outsl
clc
aam
and
sbb
rclb
aam
outsb
pop
jo
lret
in
es
cmp
push
cli
xor
push
push
cld
pop
mov
lods
push
ja
das
xor
jecxz
push
jbe
push
aad
mov
aam
incb
jnp
cmp
push
cmp
mov
data16
fldcw
push
add
dec
popa
add
stos
mov
sbb
arpl
cwtl
add
sbb
les
xchg
lods
out
pop
idivl
pop
sbb
das
xor
repnz
add
call
xlat
push
repz
mov
jno
fcomps
scas
add
flds
test
fucom
sub
ds
loope
dec
stc
or
int3
out
cmpsb
mov
movsl
mov
add
cs
adc
loop
jbe
jp
pop
flds
inc
pop
jae
lock
dec
xchg
lea
ret
icebp
xlat
xchg
sbb
push
xor
adc
mov
movsb
adc
mov
out
lds
pop
mov
sub
fs
and
les
cmp
cs
int3
mov
sbb
scas
scas
jno
jno
mov
aaa
mov
xor
adc
mov
je
std
ret
int3
lods
insb
jle
loopne
and
scas
sub
pop
data16
leave
in
inc
popa
push
pop
popf
mov
mov
movl
xor
ja
add
dec
mov
dec
or
addr16
fdivs
cmpsl
jp
mov
fsub
inc
out
jp
xchg
mov
jecxz
add
jmp
adcl
xlat
dec
stc
flds
adc
jo
mov
fidivrl
mov
inc
sbb
int3
xchg
dec
and
push
jp
loopne
push
jmp
dec
dec
sahf
orb
pusha
and
fbld
push
jbe
inc
daa
cmp
pop
popa
adc
add
popa
aam
push
mov
popa
sub
stos
test
test
jl
cmp
pop
jge
xchg
std
mov
mov
testb
loope
jle
xor
in
leave
in
pop
xor
mov
daa
mov
push
sbb
dec
cmpsb
mov
or
xor
fists
loop
dec
sub
adc
pop
out
push
out
sub
lea
jge
mov
mov
xchg
jb
jo
loope
lods
daa
xor
fadds
lds
js
into
add
dec
test
mov
call
insb
sbb
push
icebp
xor
enter
lods
jae
mov
rol
filds
enter
and
loop
insb
testl
outsl
cmc
andb
je
mov
mov
cltd
dec
pop
clc
fcoml
jbe
ja
add
dec
frstor
cwtl
in
or
aaa
lods
lods
sub
sub
notl
arpl
dec
mov
repz
cltd
cltd
out
mov
mov
xlat
dec
ss
or
sbb
pop
pop
push
push
shrb
cmpsb
in
jb
adc
push
popf
fcomps
ss
push
sub
jg
cmp
mov
leave
mov
jb
add
dec
jmp
mov
jne
xchg
jmp
ja
leave
cs
jle
ja
push
mov
repnz
lret
lret
mov
jp
fadds
jmp
mov
scas
and
xor
das
es
jmp
pop
xor
movsb
xchg
scas
fisttpl
adc
and
out
rcl
xchg
mov
xor
fsubrs
je
mov
mov
xchg
jecxz
lcall
xchg
jns
adc
sub
pop
pop
flds
jbe
adc
xchg
es
daa
cmp
xchg
dec
pop
mov
sti
mov
lock
mov
shlb
jae
aas
sbb
cmp
cmp
dec
mov
cmpl
ds
loop
sbb
sti
cmpsb
xchg
sub
push
mov
cmp
xlat
add
test
mov
lea
jecxz
mov
jl
xchg
cmp
std
stos
jno
push
adc
add
sbb
pop
push
ss
sahf
mov
ja
mov
push
cmp
push
push
test
fwait
ret
mov
push
add
add
lds
xchg
arpl
int
lds
and
mov
lcall
lods
lahf
pop
sbb
movlps
and
xchg
and
and
cmc
xor
outsl
aaa
sbb
jge
sbb
aaa
cmpsl
pop
stos
enter
sahf
imul
fsincos
je
sub
in
mov
sar
xor
mov
pop
cmp
pop
ret
xor
fnstsw
pop
stos
xchg
inc
pop
jl
popf
decb
push
insb
sahf
in
mov
icebp
mov
ljmp
and
arpl
in
in
inc
ret
ljmp
aaa
sahf
or
add
cwtl
sahf
not
pop
adc
adc
aas
lahf
xor
in
aas
outsl
scas
aas
fcomps
mov
mov
les
cmp
pop
lret
jecxz
push
ret
out
xchg
cmpsb
ret
or
pop
cld
adc
shr
mov
sub
lret
and
and
movl
lea
icebp
hlt
je
addl
test
lcall
xor
pop
enter
xchg
mov
test
cld
mov
in
ja
push
icebp
pop
jne
scas
pop
ds
xor
xchg
or
push
jo
add
mov
in
push
mov
mov
mulb
addr16
clc
ret
push
repnz
ficoms
aad
popa
mov
lret
mov
ja
add
js
mov
push
test
je
insl
mov
xorb
cwtl
in
push
std
fisttpl
or
movb
pusha
mov
push
test
rorl
mov
mov
mov
sti
push
pop
lock
xchg
pop
nop
pop
in
sbb
sub
jp
jp
mov
dec
or
jl
dec
ljmp
and
ret
cltd
das
jecxz
jg
lret
mov
lahf
cmp
testl
test
iret
jno
arpl
hlt
in
mov
sbb
xchg
mov
shr
jo
mov
shll
and
daa
pop
int
das
and
lret
adc
nop
cmc
or
sub
lcall
in
addr16
out
lock
mov
pop
addr16
fcoms
cmp
xchg
mov
cltd
pop
mov
push
sbbl
mov
popf
jne
dec
inc
inc
xchg
and
jo
xor
pop
orb
cmpsb
cvtps2pd
lea
sbb
clc
cli
outsl
pop
std
fisttpll
pop
adc
mov
jae
or
ret
add
sti
jl
pop
xchg
mov
pop
sarl
sbb
dec
mov
and
shl
sbb
or
mov
and
pop
les
in
sub
mov
fs
outsb
inc
or
outsl
pop
leave
imul
in
fldenv
lret
sbb
and
sub
aaa
cmp
dec
loope
lret
imul
fstp
ficoml
gs
or
and
orl
pop
xchg
aam
stos
repz
pop
cmp
mov
mov
mov
jmp
cmpsb
fimuls
mov
lea
and
xor
mov
sbb
mov
pop
adc
and
sahf
lret
xorl
dec
in
xchg
xor
jmp
in
and
jo
mov
jno
sbb
cmpsl
sub
xor
xchg
jae
into
sbb
mov
push
das
mov
mov
out
pop
mov
push
callw
mov
sbb
dec
push
mov
mov
cmc
decb
in
imul
cmpsb
pinsrw
inc
clc
push
in
in
movsl
out
sub
fdivrs
jp
into
dec
rorb
pop
jbe
int3
mov
cld
jle
xor
insb
sub
cmc
popf
ja
and
call
loop
inc
or
xchg
js
push
out
adc
adc
mov
mov
jg
in
lret
inc
aas
pusha
xlat
lds
leave
sub
and
mov
add
cmc
dec
sub
cld
jne
loopnew
xor
aaa
sbb
dec
mov
dec
sub
xor
xchg
cmc
outsl
shl
js
fxch
test
or
xchg
adc
mov
pop
mov
es
cmp
jnp
mov
xchg
sarl
sbb
xor
and
shll
hlt
aam
add
pop
sti
fists
scas
cmpsl
les
cltd
jle
jmp
mov
push
or
xchg
ret
jle
int3
out
cwtl
sarb
inc
mov
data16
jmp
ret
cmp
xchg
mul
pop
aaa
or
stc
xor
fwait
adc
mov
mov
lds
pusha
lret
rcr
test
or
icebp
mov
xlat
sti
jns
pusha
jns
sbb
test
imul
add
jae
out
jecxz
scas
leave
jge
pop
nop
mov
jp
inc
iret
push
dec
mov
push
pushf
mov
jo
cmp
fadd
pop
loopne
cmpsb
ja
or
sbb
adc
ret
and
mov
lods
xor
loope
push
pop
pop
cs
insb
mov
pushf
xor
aaa
mov
aad
jle
scas
les
test
sbb
pop
mov
pop
loopne
pop
push
pop
popf
fwait
int
out
push
add
adc
std
lret
jne
adc
mov
cmp
push
pushf
fbstp
mov
je
adc
mov
inc
hlt
popa
mov
lds
dec
jecxz
sarb
mov
pusha
ljmp
jae
and
cmp
out
addr16
int
test
stos
adc
adc
ss
adc
popl
jne
repz
popf
les
jmp
frstor
cmp
xor
popf
mov
jae
ret
lock
insb
insb
pop
and
call
into
testb
pop
in
jl
outsl
adc
outsb
pop
lret
test
aam
movsl
sub
pop
sbb
inc
add
inc
lock
jg
cmpsl
imul
dec
push
loopne
mov
and
mov
popf
mov
xorl
mov
mov
xchg
mov
lret
push
push
mov
sbb
repnz
inc
add
inc
test
sti
jmp
add
jmp
push
cmp
xchg
icebp
xchg
mov
fdivrl
and
pop
jns
loopne
hlt
cmp
shll
lods
ja
sahf
nop
cmp
pop
gs
mov
cmp
out
xor
dec
sbb
popa
push
fstl
xchg
lods
lds
rclb
decb
dec
hlt
stc
loope
out
cmp
aas
dec
push
cmp
mov
sbb
icebp
sub
mov
pop
xchg
push
stos
loope
adc
stos
cmp
mov
and
push
out
dec
sbb
jl
shr
es
fidivl
cltd
scas
xchg
jno
sbb
pop
push
loopne
or
mov
fsubr
jmp
shlb
cmp
xchg
out
sbb
and
rcrb
inc
ret
pop
es
lea
adc
mov
adc
fcmovne
add
xor
shlb
jmp
adc
pop
mov
data16
jp
icebp
lock
mov
jg
scas
insb
mov
cltd
jbe
xchg
jb
test
xor
push
out
push
lods
loopne
cmp
les
mov
cld
cmp
jmp
loope
mov
inc
jp
enter
lds
mov
aaa
push
in
sbb
xor
mov
xor
ret
sbb
xchg
int
andl
sub
fsubrl
push
jge
xchg
dec
mov
andl
cmc
stc
mov
test
fiadds
loop
adc
aam
mov
movhps
mov
cwtl
cmp
add
xor
cwtl
lea
mov
dec
push
loopne
jg
xchg
out
pop
jae,pt
test
cmp
fcomp
and
test
test
rcll
lcall
ror
push
decb
lcall
test
dec
es
cmc
jg
scas
sub
mov
shl
loop
enter
sbb
xchg
push
test
jae
nop
lret
andl
lret
in
jl
popf
xchg
fs
incl
ds
pop
aad
icebp
push
dec
pop
cmc
xchg
cmp
adc
loope
xor
jge
sbbb
sub
xor
inc
or
iret
test
subb
jo
dec
pop
dec
imul
mov
push
loopne
mov
push
iret
dec
jns
ljmp
xlat
cmp
sub
je
push
movsl
test
jg
xor
pushf
pop
pushf
ja
pushl
sub
add
pop
xor
mov
push
adc
pop
test
lcall
imulb
in
or
xor
dec
push
ret
pop
mul
and
xor
ja
push
jae
inc
imul
test
inc
notb
sbbb
adc
lahf
cmpsl
add
fisubrl
sahf
mov
cld
add
and
addr16
add
loopne
pop
jns
mov
subb
fprem
repnz
sarb
xchg
imul
bound
pop
inc
stc
movsb
je
jbe
popa
push
incl
pop
stos
jbe
mov
ljmp
call
pop
cld
jg
cs
add
mov
sbb
push
out
rorb
push
push
in
add
push
pop
add
call
sbb
es
inc
insl
xlat
stc
rol
jge
mov
add
adc
mov
ret
inc
sbb
shrb
int
xor
fs
cmpsl
test
in
xor
mov
in
sbb
sbb
pushf
pushf
incb
repnz
loopne
or
mov
adc
outsb
cmp
orb
or
sbb
dec
insl
cltd
jnp
lds
fistpl
pop
dec
imulb
test
bound
mov
sbb
dec
stos
xchg
sbb
fptan
xor
lret
data16
mov
cmp
repnz
fs
jg
xor
mov
or
out
loopne
lds
out
imul
mov
pop
lods
xlat
sub
pop
pop
icebp
ljmp
andb
jmp
wbinvd
cmp
test
add
mov
xchg
jl
xchg
mov
aad
pop
rcr
sub
add
inc
mov
lret
das
sti
xor
sbb
jl
pop
imul
je
das
call
push
xlat
iret
aad
dec
xor
das
mov
sarl
sbb
mov
ja
pop
mov
xor
outsb
jo
add
mov
dec
adc
pop
lea
addb
mulb
push
std
pushf
inc
push
int
arpl
dec
pop
adc
and
dec
jne
xchg
aad
sbb
jl
push
rol
xchg
jo
lret
mov
mov
outsb
mov
shl
mov
and
test
pop
mov
lahf
and
inc
ja
aam
xchg
cmpsb
or
add
mov
aaa
mov
cs
adc
adc
push
dec
into
lods
cmc
ljmp
jne
add
push
in
sub
popa
add
dec
sbb
dec
jno
pushf
pop
mov
jbe
xchg
mov
sub
adc
push
repnz
cmc
push
cmpsl
or
mov
jne
dec
xor
repnz
cmp
xchg
mov
jbe
push
lods
pusha
cmp
push
pusha
das
inc
or
cmp
lods
sub
and
xchg
out
and
lods
pusha
addr16
mulps
mov
dec
jmp
inc
cmp
jb
scas
xchg
outsb
inc
enter
xor
loopne
mov
xchg
lds
js
test
jl
sbb
add
sub
popf
pusha
cs
adc
push
les
pop
adc
int3
cmp
xchg
lods
jne
lahf
or
jae
or
filds
roll
pop
cmp
xchg
das
adc
mov
repz
mov
call
sbb
repnz
pusha
ds
jle
pop
rcr
xchg
mov
and
inc
jbe
dec
test
jl
loope
rorl
inc
push
int3
push
push
repnz
jbe
push
movsb
dec
dec
in
push
in
aad
sub
xlat
add
mov
sub
icebp
pop
sub
sub
cmp
es
adc
outsl
pop
mov
arpl
test
jge
inc
dec
dec
fwait
rorl
scas
push
icebp
rorb
cli
into
popa
lods
xchg
in
addr16
adc
mov
sbb
and
ljmp
sub
call
hlt
dec
inc
insl
pushf
sub
loopne
rol
push
jo
stos
addl
push
mov
pop
pop
out
clc
shrl
pop
jo
dec
test
stos
movsl
insb
lahf
fisubrs
mov
bound
inc
int3
lods
jns
sbb
pop
inc
cld
xchg
call
xchg
dec
ror
sub
pop
je
inc
inc
test
je
in
stos
aaa
jp
mov
pop
shrl
xor
in
inc
sbb
loop
mov
imul
lea
jmp
jnp
dec
push
mov
imul
sbb
or
mov
popa
cmp
lea
inc
cltd
push
fimuls
popf
js
xchg
jo
call
jno
nop
and
out
sbbb
fstpl
scas
inc
cmp
frstor
add
sti
arpl
inc
jmp
mov
loope
mov
stos
sbb
mov
and
xor
scas
mov
pop
ljmp
out
pop
stos
xlat
ficoms
jo
hlt
and
inc
pop
and
test
mov
lods
mov
fstl
outsb
test
sub
mov
repz
mov
inc
test
mov
bound
call
imul
repnz
cmp
lds
fmull
adc
adc
out
or
jmp
call
push
push
out
ljmp
stos
cwtl
mov
push
and
outsb
clc
fcmovnu
push
or
popf
shrl
repnz
arpl
pop
daa
push
and
adc
out
sti
into
les
push
adc
lods
and
add
jns
add
inc
pop
leave
xorl
adc
incb
pop
add
jb
mov
sub
imul
imul
scas
lds
cmp
iret
test
rolb
mov
repnz
sub
push
push
cmp
mov
pop
shlb
popa
shrl
adc
and
xor
xchg
insl
lods
jg
adc
ds
sub
inc
lock
das
sti
daa
jo
outsb
or
push
mov
test
mov
mov
jae
testl
clc
fnstcw
popa
fcmove
inc
mov
dec
xchg
movsb
shl
inc
inc
sbb
dec
jnp
std
cmc
push
cmp
hlt
divb
data16
orps
adc
andb
movsl
adcl
sarl
xchg
mov
mov
pop
pop
sbb
notl
sub
inc
idivl
fisubl
mov
clc
jne
cwtl
xchg
dec
cltd
pop
add
xchg
addl
xchg
arpl
jmp
lock
push
adc
int
lea
dec
sub
add
pop
and
jg
push
test
dec
jb
cmpsl
sbb
clc
push
xor
aaa
adc
mov
into
fidivrl
xor
push
lock
mov
aaa
inc
gs
push
cmc
outsl
inc
mov
adc
push
dec
xchg
stos
repz
or
jl,pn
popf
cmp
mov
daa
cltd
aaa
jnp
daa
mov
sub
inc
repnz
or
mov
insb
sbb
arpl
sbb
fwait
imul
and
and
mov
and
mov
mov
shlb
adc
push
mov
fdivr
in
testl
insb
imul
sub
xchg
and
dec
pop
cmp
mov
jge
dec
inc
pop
test
lods
das
jmp
mov
idivl
in
rcrl
lea
cld
arpl
out
and
pop
clc
stc
cmp
mov
adcl
out
sub
aad
in
jl
xchg
push
mov
cmp
repnz
jo
mov
pop
inc
nop
bound
push
aam
fwait
mov
call
xlat
out
inc
imul
xor
sbb
and
sbb
ja
mov
xor
inc
jmp
je
sbb
fildll
nop
nop
sti
sub
loope
mov
sar
bound
js
lea
and
clc
or
adc
xor
fwait
cmpsl
mov
fwait
stc
xchg
mov
mov
outsl
les
fxch
cmp
cmpsb
and
mov
mov
xchg
ds
sub
jb
inc
pop
in
cld
mov
jb
pop
adc
mov
mov
adc
push
cmpsl
jecxz
loopne
dec
lods
fwait
mov
pop
mov
xor
inc
xor
push
imulb
call
imul
sbb
xchg
sbb
push
aaa
adc
stos
mov
test
jbe
pop
cmp
aad
and
inc
mov
lret
aam
lods
or
out
sub
add
jp
aaa
mov
inc
in
adc
cli
dec
sub
icebp
jmp
jge
call
out
test
nop
push
jo
dec
lock
mov
es
or
sub
sbb
and
xor
ret
mov
sub
pop
mov
ret
mov
movsl
jmp
cmpb
cmp
je
test
or
pop
pop
mov
xor
push
cmp
stos
arpl
mov
xchg
daa
in
and
add
sbb
je
lret
mov
insb
ja
sub
stc
in
aaa
jmp
sahf
dec
stc
jno
xchg
dec
testb
pop
and
jns
ret
cmpsb
rcll
es
js
icebp
sbbb
dec
and
js
outsl
jge
icebp
sub
in
test
addr16
test
loopne
inc
rolb
int3
sub
adc
lock
inc
jnp
fnstsw
and
scas
ss
test
fprem
xor
mov
mov
faddp
imul
lods
jnp
and
push
sbb
pop
leave
fmulp
add
sub
fmul
bound
in
mov
jno
idivl
faddl
subl
jmp
xchg
sti
jge
jne
sbb
pop
popa
mov
lods
inc
add
jge
and
mov
popf
rclb
inc
pop
outsl
xor
sub
jb
lret
aam
sub
pop
sarb
push
mov
jecxz
xchg
sub
outsl
fistps
mov
icebp
inc
lds
jg
clc
jno
pop
and
xlat
mov
xchg
outsl
lcall
lea
and
inc
sub
test
push
and
leave
loopne
jp
fs
and
mov
cmpsl
inc
jl
jmp
jns
sahf
ds
popa
stos
lock
call
nop
insb
xchg
push
add
xchg
sbb
rcrl
add
pop
xor
add
in
push
xchg
push
pop
sbb
es
xlat
push
ss
fcomps
sub
sub
movsb
subb
xor
mov
cmp
or
in
repnz
pop
or
mov
lea
bound
pop
mov
in
mov
incb
mov
push
lods
popa
fnsave
inc
hlt
lret
shlb
daa
repz
inc
aaa
mov
add
xor
fildll
xor
popf
jg
adc
and
lods
stos
das
xor
ror
iret
inc
mov
test
scas
pusha
scas
mov
loopne
sbb
cmpsb
gs
and
and
stc
xchg
out
lds
psraw
test
mov
push
popa
dec
dec
adc
arpl
test
ljmp
gs
mov
daa
sub
ss
mov
jnp
inc
fisttpl
inc
cmpsl
mov
jl
mov
flds
scas
xchg
sbb
and
sbb
out
int
sbb
lret
jmp
aaa
and
lds
xor
out
or
mov
adc
push
aaa
dec
jnp
jo
push
data16
push
dec
fsubrp
aad
mov
mov
xor
sub
or
rcr
mov
mov
ja
cli
xchg
std
mov
dec
sti
xor
and
rorl
ss
mov
shl
xor
mov
movsl
or
cwtl
aas
xchg
nop
sbb
mov
pop
cmp
dec
xor
std
mov
mov
dec
dec
xor
or
and
insb
mov
imul
lock
xchg
mov
lret
xor
lods
rcll
xchg
pop
xor
mov
rorl
mov
mov
hlt
aas
push
mov
pop
adc
dec
or
sbb
test
sbb
roll
cmc
daa
repz
inc
rcr
orl
sbb
scas
sbb
cmp
and
stos
outsl
sti
fiadds
stos
inc
lret
push
cwtl
lock
jo
add
dec
pushf
inc
pop
and
push
sub
mov
movsl
das
dec
or
add
repz
xor
sahf
cmpsb
jmp
push
aaa
xchg
test
popf
pop
inc
jae
sbb
or
mov
sub
or
add
jo
xor
sbb
mov
stc
jb
pop
inc
cmp
mov
sahf
insl
cmc
dec
pop
out
sub
nop
lods
mov
push
mov
pushf
movsl
cmpsb
sbb
push
mov
cmp
add
dec
jbe
xchg
mov
push
pop
pop
jno,pn
sbb
mov
adc
je
push
jl
sub
push
xor
icebp
out
loopne
outsl
imul
bound
pop
cmp
xchg
mov
adc
dec
out
cmp
push
cmp
mov
or
inc
rclb
or
pushf
lods
mov
pusha
mov
lea
lea
loop
mov
mov
in
mov
repz
out
pop
fmull
mov
xchg
xchg
xchg
fisubrl
aas
nop
pushf
and
push
jb
leave
xor
sub
mov
call
mulb
aad
les
xchg
fbstp
js
in
push
pop
in
xchg
ja
aad
sub
outsb
push
cmp
cmc
xor
clc
adc
ret
test
aad
adc
xchg
insb
inc
in
xchg
xchg
loope
xchg
jmp
scas
jnp
mov
add
aaa
bound
repz
icebp
mov
loopne
sub
ljmp
insb
xor
test
or
repz
iret
inc
dec
fisubl
lock
mov
push
dec
mov
iret
sahf
dec
jmp
inc
call
es
das
adc
push
sub
jmp
and
dec
pushl
in
dec
jb
fs
mov
insl
loop
sbb
push
testl
out
add
xchg
in
and
lret
fisubrs
addr16
pop
pop
mov
aad
cmp
jne
pop
in
inc
data16
loopne
sahf
scas
jl
mov
add
mov
jmp
mov
adc
scas
push
xor
jp
ja
push
mov
shrb
pop
mov
adc
pop
sbb
and
scas
mov
mov
out
sbb
cmp
cmpsb
pop
ret
cmp
sti
sub
adc
stc
lock
adc
adc
sub
sbb
push
dec
subl
outsl
xchg
xchg
mov
ljmp
or
rcrl
jle
lcall
mov
mov
mov
lcall
push
repnz
or
mov
add
mov
mov
xchg
xor
mov
fnstenv
xorb
test
push
and
push
out
or
neg
je
test
jmp
inc
add
mov
sub
enter
inc
adc
scas
mov
stos
sbb
test
movsl
sahf
pusha
cli
mov
cld
xor
push
or
xchg
mov
into
mov
or
mov
test
push
push
lcall
pop
xchg
dec
in
push
pop
loope
cwtl
xchg
scas
mov
jmp
xor
cmp
mov
fistl
cmp
insl
jno
test
outsb
dec
push
in
or
cs
testl
xchg
addr16
pop
mov
ret
insl
jo
dec
lcall
sbb
lods
add
push
xchg
fstpt
and
and
iret
loopne
or
xchg
mov
jge
addr16
shr
lahf
ficomps
push
pop
jecxz
inc
push
scas
mov
mov
lahf
test
pushf
pop
lock
adcl
test
pusha
inc
imul
pop
fsubrl
lock
jnp
or
ljmp
jae
sub
fwait
sub
dec
push
adc
in
iret
jnp
and
mov
push
mov
cmc
push
jnp
shrl
mov
mov
test
xchg
out
call
push
adc
jo
hlt
sub
mov
inc
sbb
xor
sub
iret
std
imul
mov
pop
in
fldcw
sti
mov
push
mov
push
scas
idivl
mov
add
mov
mov
xor
scas
std
cli
sub
jo,pt
xchg
outsb
xchg
mov
push
mov
adc
sbb
push
fxam
mov
test
xchg
dec
fwait
gs
repnz
mov
or
fnstsw
ss
daa
in
subb
pushf
cmp
push
push
and
inc
pop
dec
push
push
sbb
inc
jb
xchg
and
mov
aad
xor
mov
mov
dec
stc
daa
push
pop
rorb
pop
lahf
and
mov
push
inc
xor
lcall
mov
xchg
lahf
aas
mov
jecxz
cmp
sub
or
pushf
ljmp
fwait
enter
mov
repz
ja
adcl
cld
push
mov
lods
mov
jg
dec
popa
fcmove
mov
test
movq
or
sub
xchg
popf
inc
xchg
jb
or
addr16
sub
ljmp
push
aaa
xor
es
and
rcrb
into
shll
mov
cld
and
scas
lds
add
cmpsl
scas
sub
sar
inc
mov
out
lahf
and
mov
sub
cmpsb
xor
call
std
push
sub
push
xor
dec
dec
jae
or
int3
add
xchg
inc
addr16
pop
ja
inc
lods
fsub
fs
xchg
or
or
test
call
aaa
xlat
pop
movsl
xchg
lahf
cltd
mov
and
jle
push
inc
cld
cmc
into
fadds
movl
or
js
imul
xchg
insb
test
test
cmp
add
aas
aam
fwait
mov
push
inc
adc
js
and
or
mov
inc
je
in
bound
rolb
mov
dec
scas
add
cli
xchg
xchg
jl
xor
popa
inc
add
in
daa
iret
cmp
jae
or
test
inc
fdivrl
stc
call
cld
sub
dec
sub
jp
fistpl
rorl
sbb
mov
xchg
enter
jnp
xchg
loope
dec
push
sub
js
adc
fbstp
adc
out
and
jmp
mov
shlb
aaa
sub
adc
rorb
cmp
or
jo
insl
xor
push
xlat
jmp
xchg
je
cmp
mov
mov
mov
push
clc
lret
imul
pushf
adc
mov
ss
repz
inc
mov
add
repnz
lds
jecxz
decl
fisubrs
leave
mov
add
data16
lret
mov
lret
loope
mov
data16
jl
add
xchg
jecxz
push
adc
add
enter
call
stos
pushl
adc
xor
popf
or
cmp
xchg
addr16
adc
mov
xchg
inc
stos
xchg
stos
leave
mov
mov
rcrb
sub
call
iret
xchg
fdivl
out
mov
push
out
pop
ss
jecxz
repnz
add
add
rolb
mov
stos
cmp
into
add
push
jle
cmp
loop
sbb
mov
or
mov
rcrb
push
sub
int
mov
lods
mov
sahf
xchg
jmp
jg
xor
repnz
or
mov
clc
push
mov
sbb
lods
repnz
or
mov
jmp
aam
inc
xchg
push
xchg
fbstp
pop
pop
in
xor
mov
mov
gs
xchg
jno
cmp
loop
lret
bound
icebp
push
or
sahf
or
inc
cmpsl
subl
push
test
mov
mov
shrl
shlb
jg
shr
ljmp
adc
mov
add
es
rcll
adc
inc
and
lfs
imul
push
divb
dec
jbe
xlat
or
out
in
in
enter
sti
rcr
cmp
fs
push
push
enter
mov
xchg
pop
lock
and
mov
cmp
mov
push
xchg
sub
test
int
sar
divl
adc
and
out
pop
xchg
mov
orb
cmc
hlt
jmp
inc
out
mov
stos
xchg
leave
stos
jae
test
in
mov
and
ljmp
mov
pop
cltd
mov
popa
in
push
mov
lods
jle
ret
sub
push
int
test
jge
or
dec
lds
ljmp
push
inc
rcrb
shlb
js
add
push
mul
addr16
xchg
adc
push
push
mov
pop
pusha
pop
xchg
cmc
xchg
push
mov
fistps
stos
push
xor
mov
jae
div
push
dec
fiadds
pop
lods
bound
loope
push
xchg
cwtl
outsl
cmova
arpl
push
mov
or
jns
repnz
sti
call
pop
out
aas
cld
pusha
jp
sub
shll
rorb
jbe
push
icebp
sub
pop
ja
pop
jo
fdivr
pop
ret
bound
cmp
mov
cmp
mov
dec
adc
aaa
ljmp
xor
dec
dec
fcmovnb
pop
cli
inc
inc
fstps
push
data16
mov
in
inc
daa
in
cmp
rorl
jae
jae
hlt
dec
subb
aas
inc
call
mov
shr
pop
push
out
jl
pop
dec
icebp
push
push
mov
cmp
mov
dec
std
lret
std
out
fs
push
push
insl
lods
scas
inc
and
mov
loop
movsl
and
mov
xchg
fisubs
addr16
push
neg
mov
pop
xchg
aas
adc
int3
adc
adc
push
nop
push
mov
pop
push
lret
push
pop
inc
add
lahf
sbb
int
xchg
popa
outsl
stc
mov
adc
pop
mov
adc
mov
es
push
jp
scas
std
pop
pop
adcb
loope
not
xchg
cmp
das
sub
fists
call
mov
std
push
popa
inc
lret
push
add
sbbb
mov
mov
ja
ss
sub
lods
inc
or
and
inc
arpl
fldt
push
pop
dec
in
xor
or
inc
fsubrl
jo
outsl
das
leave
cmp
out
rcr
aas
stos
xchg
cld
mov
lret
test
inc
or
iret
enter
outsb
xchg
jmp
inc
mov
das
lret
push
or
xchg
mov
sub
push
pop
mov
push
jg
xchg
dec
sbb
or
dec
xor
lods
adc
dec
jp
jl
lret
test
inc
insl
arpl
mov
pop
rep
mov
sbb
pop
fwait
mov
adcb
repnz
sbb
test
sbb
call
xchg
leave
xchg
daa
popf
fdivr
add
mov
adc
sub
mov
cld
fcmovne
cs
mov
xlat
or
add
jl
int3
pushf
les
aaa
shll
fisubl
inc
push
pop
aaa
xchg
pop
xchg
xchg
andb
sub
stc
xor
test
cmpsl
lods
jmp
cld
sbb
insl
dec
pop
adc
adc
adc
pop
sub
lods
xor
rcrb
fucomip
jns
dec
xchg
adc
fldenv
pop
popl
mov
fldcw
in
addb
sbb
xchg
push
mov
jmp
adc
xor
and
dec
dec
sahf
std
xor
mov
pop
jle
mov
push
add
sub
inc
cltd
insl
repz
enter
jle
jge
int3
shrl
push
jns
xor
jb
jmp
imul
insl
dec
sbb
loopne
or
push
cli
jbe
mull
sbb
dec
es
jmp
aas
adc
idiv
adcl
scas
incb
cmpsl
lock
jmp
mov
pop
or
mov
inc
push
jae
pop
out
cltd
cmp
loop
mov
jno
imul
add
out
inc
pop
cmp
out
sarb
in
add
sarb
das
cli
pop
loop
dec
pop
xor
xchg
xchg
icebp
sub
and
inc
xchg
sbb
xor
loope
xor
popa
fmull
mov
jno
cmp
addr16
cli
in
cld
test
testb
push
in
add
dec
nop
or
mov
push
sbb
push
test
pop
adc
cmp
dec
leave
mov
adc
sahf
incb
ficompl
add
dec
repz
dec
sub
mov
adc
jg
pop
js
sub
xchg
jecxz
push
sbb
cmp
vunpcklpd
hlt
mov
std
ror
xchg
cmp
inc
pushf
ja
mov
cmp
mov
push
lret
xor
jne
pop
xchg
inc
mov
push
aas
fisubrs
mov
sbb
jge
add
pop
movlps
or
rcr
jp
push
add
dec
ret
jno
mov
les
xchg
and
sbb
loop
lahf
jge
adc
cmpsb
add
clc
xor
and
cltd
je
mov
dec
xchg
lcall
sub
or
adc
sarl
fmull
xor
mov
sahf
pop
and
adc
xor
sbb
dec
add
int
nop
bound
mov
aas
insl
dec
sub
push
and
rorb
sbb
fistpl
pop
sbb
daa
mov
cs
push
jne
test
mov
dec
adc
and
pop
inc
popf
mov
mov
inc
mov
xchg
and
fistpl
inc
in
daa
jl
dec
scas
movsb
inc
mov
sbb
stos
test
sti
sub
xor
sarb
fildl
mov
mov
xor
cld
xchg
xor
dec
sub
imul
cld
stc
inc
mov
insb
dec
lcall
loopne
subl
add
cwtl
cwtl
int
and
test
outsb
rorb
xor
stos
aad
std
mov
fcomi
sbb
pusha
mov
cmp
daa
or
xchg
movsl
stos
das
out
lods
test
sti
int3
loop
lahf
test
inc
hlt
arpl
les
adc
subb
icebp
sub
cmp
mov
xor
lea
movb
dec
lods
mov
scas
sub
call
mov
xlat
loopne
fmul
fcoms
ficoml
cmpsb
lds
shrb
int
es
cmp
mov
sub
int
insl
movsb
and
lcall
movsl
sub
dec
and
and
fistps
cmp
stos
dec
sub
mov
ja
jp
adc
clc
call
in
div
scas
lcall
or
or
sub
fstpt
jg
lret
insl
mov
push
ds
or
lret
outsl
sahf
cmp
push
into
lods
mov
push
cld
sbb
or
mov
ret
rcr
shll
mov
dec
adc
jl
jle
and
cmp
sbb
push
outsb
adc
hlt
xchg
sbb
mov
test
test
add
sub
xchg
test
insl
adc
ret
mov
pop
xor
arpl
sub
sbb
aaa
pushf
std
aam
sarw
and
add
orb
pop
xor
loope
icebp
sbb
mov
jecxz
daa
adc
push
in
out
mov
dec
insb
push
sbb
cmp
add
fcompl
aaa
into
sbb
cmp
shl
gs
inc
jmp
popa
ljmp
lea
cmpl
je
dec
lahf
mov
movsl
push
movsl
cli
stos
push
repz
fwait
aad
xchg
icebp
xchg
fsubp
movsl
lods
jne
stc
ja
mov
add
aas
cmp
dec
add
jnp
pop
sub
mov
repnz
jp
neg
repz
test
cwtl
push
dec
rep
je,pt
or
mov
sbb
inc
lea
popa
xor
loope
jmp
ret
fcomps
dec
xchg
xor
mov
cmovbe
sarb
xor
mov
inc
pop
inc
lahf
push
or
test
outsb
push
dec
jle
std
sti
mov
imul
in
dec
ja
xor
rcr
fisubrs
ret
aas
pop
mov
push
sti
pop
shr
frstor
cwtl
push
js
clc
jnp
out
push
push
lds
mov
mov
jg
pop
push
das
inc
mov
std
mov
jge
out
outsb
mov
aaa
aad
mov
push
pop
arpl
mov
int
in
scas
mov
cltd
aas
imul
jns
movsl
mov
out
add
mov
in
jle
dec
jp
dec
or
je
in
or
aam
cmpsb
mov
stos
lret
jae
jns
pop
pop
mulb
cltd
lcall
popa
repz
cltd
fidivl
jge
mov
sbb
mov
ret
mov
out
push
imul
sti
push
mov
ds
lret
mulb
or
ror
xor
scas
jo
push
in
arpl
loop
sub
insl
lods
or
push
push
repnz
pop
sbb
adc
cmp
repz
imulb
in
lds
jg
in
cmp
mov
ret
mov
and
ret
adc
xor
xor
pop
fs
push
jmp
leave
in
add
inc
mov
push
dec
inc
add
call
mov
jmp
adcl
mov
int3
push
xor
add
gs
jle
fwait
outsl
bound
mov
sbb
and
cmpsb
inc
pop
mov
xchg
pusha
mov
int3
add
or
lods
lret
dec
into
addr16
movsb
pop
lods
fstl
and
dec
pop
sahf
jo
rorl
cmpsl
ror
ret
dec
and
mov
jo
test
pop
dec
out
aad
mov
pop
push
ja
jno
cld
and
jle
add
xor
lea
outsl
add
jns
xor
fisttpll
mul
cmp
dec
loop
fisttpl
lret
aam
loope
mov
cmpsb
jb
jg
push
popaw
and
outsb
pop
jnp
jns
and
adcl
xchg
nop
and
cwtl
add
mov
gs
sti
clc
sub
cmp
fs
jge
inc
or
xchg
push
mov
and
and
popf
xlat
mov
data16
sub
xor
in
xchg
jae
jb
push
rcrl
fwait
int3
std
in
jae
xchg
fdivs
pop
mov
and
add
xlat
inc
sub
ficomps
dec
pop
pushf
and
mov
iret
jnp
cmp
adc
xor
push
jle
push
pop
js
mov
js
in
fcoms
push
fnstenv
xor
dec
push
push
cmpl
popf
mov
pop
mov
clc
push
xchg
mov
lock
lods
cld
pop
sbb
daa
or
bound
sti
test
push
andl
adc
adc
xor
shll
enter
adc
stc
nop
into
pushf
mov
movsb
out
mov
mov
lcall
mov
leave
ror
bnd
stc
in
mov
jg
lret
pop
es
mov
mov
hlt
es
jle
test
pop
or
ljmp
and
push
pop
sub
aas
push
push
mov
cld
xor
out
sub
mov
inc
test
jmp
sti
inc
fsubr
add
scas
cmp
and
jge
push
inc
cwtl
movsl
adc
cwtl
push
xor
adc
mov
push
sbbl
dec
adc
add
outsb
in
push
loopne
and
sub
or
int3
mov
loopne
inc
mov
cmp
rol
dec
ds
ss
dec
push
push
dec
xadd
divl
xchg
pop
aas
xor
sub
clc
xchg
insl
test
xchg
jle
mov
lds
popa
mov
fnsave
sub
test
add
lret
into
mov
into
sbb
in
out
lock
arpl
jp
outsb
in
stos
fsubl
scas
popf
stos
mov
inc
test
in
mov
rol
sbb
aas
dec
negl
insl
sahf
aad
mov
mov
test
dec
xor
out
ret
add
rcl
outsb
fiadds
jecxz
mov
xchg
fstps
push
ret
inc
lods
xor
mov
mov
inc
mov
rcr
gs
push
adc
fstps
filds
les
shl
jns
jmp
data16
adc
and
mov
lcall
xchg
mov
shlb
dec
int
out
imull
inc
sar
jo
mov
mov
mov
dec
mov
shll
cmpsl
rorl
xor
pop
mov
dec
sbbl
sub
fiadds
xor
pop
aam
mov
and
add
mov
xor
adc
cmp
pushf
scas
mov
daa
pushf
orb
sahf
mov
pop
std
pop
lods
jg
fcoms
push
mov
inc
jmp
push
cwtl
or
das
scas
stc
push
in
arpl
cmp
sbb
ljmp
jne
flds
es
js
xor
fstpl
push
cli
lds
cmc
dec
shr
mov
cmp
cld
xor
cmp
adc
lods
ret
lock
dec
inc
fs
lahf
adc
test
fidivrl
mov
mov
jae
repnz
xchg
sbb
mov
fcoml
lahf
add
jge
pop
ss
jmp
mov
pop
fsubs
dec
adc
sub
pusha
lcall
sti
mov
inc
ret
subb
mov
sub
jmp
push
inc
inc
xchg
mov
je
enter
xchg
mov
popf
adc
mov
cmp
cli
add
cmp
lcall
sti
loopne
lret
ss
data16
ja
pop
ret
mov
orb
loopne
iret
mov
jns
andb
mov
out
inc
inc
fcmovne
jge
lods
xchg
rol
dec
jnp
stos
cltd
lcall
daa
loopne
ljmp
or
es
push
mov
jge
jb
sahf
andl
mov
cmp
mov
lret
push
pop
adc
jno
lret
std
ja
aaa
popf
xor
sub
clc
fimull
rol
inc
rclb
leave
aas
imul
bound
cmp
in
aam
and
jae
dec
aaa
icebp
int3
jno
out
out
and
mov
jecxz
lahf
sub
xchg
mov
or
clc
or
adcl
or
lret
jg
mov
jecxz
jge
mov
cs
pop
test
cmpsb
mov
dec
cwtl
jne
popa
mov
jns
loop
mov
push
jmp
arpl
mov
jno
mov
mov
dec
mov
bound
arpl
pop
lret
fisubl
int
mov
add
not
mov
dec
sbb
aaa
push
jl
push
je
jo
mov
dec
and
pop
aam
push
movsb
rorb
add
and
outsl
mov
mov
jb
push
and
out
mov
push
out
push
loopne
xor
dec
pop
stos
shll
rolb
lret
add
lret
out
or
pop
shlb
outsb
into
pushf
jp
addl
push
or
ret
pop
push
test
and
aas
shll
rol
sub
and
leave
mov
or
pop
cmp
imul
fdivl
xor
add
lret
jno
mov
fstps
lret
lock
mov
insb
xor
dec
jae
dec
jg
mov
cmp
into
mov
mov
mov
mov
push
xchg
mov
inc
xor
dec
xchg
pop
xchg
sbb
mov
aad
adc
cli
xor
sbb
mov
ret
cmp
out
movsl
mov
cmp
mov
stos
lea
sub
in
sahf
adc
popf
fsubrs
and
mov
dec
dec
popf
mov
insb
adc
or
roll
dec
and
or
iret
mov
mov
outsb
adc
and
in
std
mov
dec
sub
add
add
pusha
push
addl
lods
dec
push
mov
mov
and
repz
fstpt
pop
cmpsl
les
cmc
stos
stos
or
push
faddl
fistps
mov
fcompl
lcall
or
clc
popf
xchg
pop
into
or
mov
xor
out
shll
adc
je
aad
pop
xor
int
ljmp
sub
sub
rolb
sub
fists
pop
jb
mov
xchg
fnstcw
sbb
jbe
fmull
xor
sbb
in
es
insl
mov
shrb
add
sub
mov
leave
or
repnz
dec
mov
aaa
inc
popf
movsl
inc
mov
mov
jecxz
add
pop
cmp
sub
test
adc
xlat
sahf
add
test
push
and
pushf
or
gs
enter
dec
fsubl
dec
popa
gs
popf
jl
sbbl
sub
and
mov
outsl
push
and
jne
fs
dec
daa
mov
jae
adc
loopne
pop
outsb
aad
mov
xchg
and
mov
cmp
or
ss
or
cmpl
imul
push
push
sbb
test
cwtl
pop
ret
pop
shlb
fadd
bound
lock
sbb
and
xor
xorl
repz
push
jg
into
adc
xchg
je
adc
jb
and
push
or
daa
jbe
test
sti
cmp
in
ljmp
sahf
hlt
xchg
or
pop
dec
lahf
push
mov
mov
ds
mov
pusha
inc
adc
xchg
and
ds
sub
inc
aaa
scas
out
outsl
xorl
cmp
ret
rcrb
and
dec
loop
adc
into
out
repnz
je
pop
and
cmc
cmp
cmp
push
and
out
icebp
pusha
adc
shll
mov
outsb
xor
push
mov
ds
cmp
stos
dec
es
aas
pop
cmpsl
inc
sahf
aad
aaa
mov
jle
out
cmp
iret
out
clc
stos
jae
pop
sbb
or
jle
repnz
hlt
ret
cmpsb
inc
mov
push
jge
xchg
cwtl
jmp
adc
push
cmp
int3
push
jo
ret
fsubrs
lcall
jns
lahf
hlt
inc
out
or
push
adc
jae
add
xchg
push
push
push
cmp
push
fiaddl
in
sarl
dec
daa
mov
lods
bnd
push
sarl
jecxz
push
mov
pop
add
test
push
jae
icebp
sti
mov
popf
adc
inc
mov
imulb
jl
xchg
adc
rcrb
cmp
fnstsw
sbb
testl
je
sub
shll
into
xor
inc
push
xchg
dec
orl
iret
aaa
sbb
cmp
and
movsl
add
and
stos
jnp
inc
out
cmp
jl
xchg
push
fdivl
adc
sahf
dec
or
rclb
lahf
cmc
out
outsb
cmp
mov
inc
cmp
push
push
subl
hlt
add
mov
and
cmp
cmp
xor
mov
clc
testl
mov
pushf
pop
scas
enter
test
xor
jmp
cmp
jmp
jb
adc
pop
jnp
lahf
push
nop
cltd
mov
sbb
xchg
mov
mov
ljmp
mov
pop
dec
hlt
stos
insb
inc
aas
mov
adc
call
vpmaddwd
rclb
pop
push
jns
cmp
mov
dec
xor
dec
jae
xor
int
shrl
cli
out
nop
pop
insb
shll
stc
dec
in
lcall
movsl
daa
sahf
adc
scas
adcb
divb
pop
sbb
adc
jnp
loopne
lea
xchg
rcr
stc
hlt
xchg
inc
push
adc
sub
ja
mov
mov
push
int3
pop
scas
dec
mov
mov
mov
idivl
cmpsl
js
loopne
fstp
mov
sub
imul
mov
dec
push
cmp
jnp
push
sub
fisubl
fistpl
ja
fsubp
out
lret
dec
xlat
push
aas
adc
aaa
push
les
push
fwait
sbb
in
mov
dec
jnp
xchg
xchg
fisubrl
dec
imul
cmp
inc
jne
add
mov
pop
bound
push
filds
cmpsb
push
and
imul
xrelease
pop
popa
leave
mov
mov
test
data16
and
sbb
add
sub
repnz
mov
push
pop
jg
iret
mov
jmp
rorl
xlat
or
xlat
jns
xchg
xor
jge
and
mov
cmp
outsl
mov
sbb
lods
dec
lahf
sahf
and
mov
clc
pop
xchg
push
sbb
stos
xor
inc
insb
into
sbb
dec
cli
push
adc
es
bound
fwait
sub
cmc
mov
movsl
enter
xor
std
adc
push
stos
movsb
je
sbb
mov
lock
cli
pop
inc
sbb
popf
fmull
mov
leave
push
sbb
xor
push
sbb
movsl
mov
xor
mov
mov
mov
addl
cmp
jbe
or
xor
mov
sub
enter
int3
cmpsb
cmpsb
je
add
mov
lcall
aas
cld
or
enter
loop
jl
popf
jo
fs
push
inc
fs
inc
cmp
jbe
jmp
ss
movsl
stos
clc
mov
mov
xlat
add
and
dec
inc
loopne
iret
div
cmp
add
sbb
shl
jp
dec
push
jecxz
and
jns
xchg
or
gs
jg
push
or
pop
adc
push
cmp
notl
fmulp
test
cmp
hlt
mov
out
cmc
js
das
enter
jns
leave
aas
or
pop
xchg
inc
jg
fldl
push
aam
dec
cmp
mov
xchg
lret
mov
adc
cmp
mov
adc
or
push
insb
pusha
push
leave
mov
mov
jne
jle
addl
fcmovb
int
fsubl
call
and
insb
dec
mov
lret
subl
loope
orb
adc
pop
mov
fsub
leave
and
push
pop
dec
outsb
xchg
scas
repz
inc
sbb
sub
xor
pop
fstpl
into
inc
fsts
iret
cmpsb
mov
aam
dec
jo
dec
scas
fcompl
popa
dec
mov
roll
daa
cmp
fdivs
lret
movsl
scas
stos
in
sarb
sbb
jno
xor
jnp
in
ds
jmp
sahf
js
adc
or
adc
test
xor
sub
popl
scas
mov
push
jg
or
xchg
sti
dec
aas
xchg
fs
mov
mov
repz
jb
jb
mov
sbb
cmp
lods
sub
jae
sbbl
imul
jmp
mov
cmpsb
inc
in
das
xor
daa
pop
sarl
sub
adc
scas
roll
bound
daa
dec
adc
jle
adc
dec
daa
push
and
stos
xchg
push
fdivl
pop
and
sub
test
and
popa
mov
pop
sub
arpl
push
pop
sub
or
stos
xchg
sub
cli
xchg
and
pop
sub
shll
outsb
cmp
jmp
push
cli
lock
and
test
std
jae
push
cwtl
mov
popa
in
adc
stc
ds
hlt
dec
fwait
setae
dec
and
jmp
push
xchg
cmp
dec
pop
aaa
pop
add
dec
pop
mov
fcmovnu
inc
xor
popa
movl
lea
aad
pop
dec
in
or
jne
cmp
cmp
adcl
cmpsb
lds
cld
mov
mov
dec
dec
inc
mov
inc
cltd
push
gs
and
js
ret
mov
push
fisubrs
mov
cs
imul
das
and
dec
and
pop
mov
or
mov
push
xchg
data16
jns
sbb
lret
ljmp
cltd
jbe
add
jle
xchg
jae
outsl
or
mov
iret
test
in
leave
xor
leave
pop
inc
push
mov
aas
ds
jge
pusha
jbe
mov
sub
outsl
inc
jae
imul
in
adc
fstp
mov
ja
subb
pop
stc
out
jle
jae
jmp
fldl
mov
les
dec
cmp
popa
mov
xchg
mov
push
pusha
cmp
lock
jmp
stc
xchg
dec
mov
mov
push
jmp
lahf
pushf
jbe
and
sub
mov
add
pop
pop
fdivrl
lea
xchg
mov
stc
outsb
loopne
insl
xor
and
sub
or
dec
ret
jecxz
lret
jmp
mov
mov
push
add
repnz
in
dec
pushf
int3
test
lret
in
push
pusha
and
je
orb
decb
fstpt
mov
xchg
sahf
sbb
dec
lds
and
jle
dec
push
scas
iret
add
test
mov
out
ja
mov
add
sarb
das
xchg
mov
sub
pop
add
mov
sub
loopne
adc
fwait
sub
lret
test
xor
pop
mov
iret
outsb
push
ja
arpl
lock
push
cmpsl
dec
adcl
mov
mov
xlat
ret
mov
add
sub
sub
sbb
xor
mov
std
inc
jne
fdivrs
mov
mov
sarl
pop
rcll
push
sbb
or
pop
ret
or
lcall
push
ljmp
pop
daa
push
pusha
cmpl
or
push
iret
fisttpl
sbb
pop
sbb
cli
neg
inc
insb
jg
push
dec
sbb
adc
js
mov
in
mov
or
popf
cbtw
mov
nop
jmp
enter
sbb
pop
repz
push
pushf
sbb
mov
shrl
cmp
int
loop
out
sti
test
xchg
rcrl
outsb
push
xchg
and
ja
loopne
inc
lret
push
jl
out
cmp
je
dec
and
pop
fcom
dec
fldl
or
int
xchg
push
lods
fcmovnu
sbb
imul
mov
sub
dec
mov
push
sub
shlb
mov
sub
jle
xchg
mov
adc
loop
pop
jno
lods
cmp
cmpsb
sahf
add
clc
dec
mulb
pop
mov
mov
das
scas
push
daa
cwtl
mov
fistps
mov
fisttpl
cmp
pop
sbb
or
cltd
mov
shrb
mov
mov
sarl
int
lods
in
xlat
out
movsl
pop
cmp
cwtl
mov
mov
inc
pop
imul
xchg
test
inc
mov
jecxz
jmp
scas
xchg
and
mov
jp
dec
inc
sbb
or
cwtl
test
pop
add
pop
cmc
ficoms
push
mov
jo
pop
cmp
shlb
mov
push
out
mov
neg
lcall
add
arpl
push
sub
or
xor
push
in
pop
out
sbb
cmp
push
loope
fdivs
jle
dec
addb
jae
sub
ljmp
popa
jge
sbb
addb
xchg
sub
xor
jmp
test
lret
push
push
pop
jo
leave
mov
cmp
sbb
cmp
ss
fs
fmuls
dec
mov
inc
push
dec
ljmp
add
mov
mov
or
dec
leave
push
mov
loope
mov
ficoml
sub
in
sub
mov
fwait
popa
pop
push
lahf
add
xor
test
push
mov
int
ret
gs
and
sub
stc
loop
ja
push
stos
inc
mov
xor
mov
inc
roll
imul
adc
mov
mov
xchg
xor
pop
aam
fnstcw
jp
out
sbb
imul
jnp
dec
sub
cmpsb
jo
insl
push
sbb
movsl
js
imul
lods
xlat
mov
leave
daa
jmp
or
insb
or
inc
cmp
cmc
mov
gs
jbe
add
or
andl
xor
xchg
inc
cltd
dec
int3
mov
dec
pop
pushf
icebp
repz
test
pushf
in
xor
adc
js
mov
push
loop
mov
jae
cmpsb
shll
sub
dec
es
icebp
jns
xchg
outsb
in
jecxz
sbb
and
cmp
jge
call
xchg
leave
aaa
jo
mov
cmp
push
xchg
push
scas
loop
out
adcb
clc
mov
rorl
jbe
sub
jmp
mov
ss
lcall
leave
xchg
mov
xchg
cld
ret
cmp
hlt
push
lods
pusha
jge
cmp
xchg
jb
jbe
or
push
je
adc
fwait
mov
xchg
dec
lods
shll
pusha
int
and
nop
les
sbb
fsubs
pop
adc
int3
shlb
push
xor
test
push
push
imul
or
adc
inc
leave
and
mov
test
int3
cmp
popf
fwait
sub
into
in
xor
xorb
mov
decl
lods
push
outsb
aas
clc
pop
repz
fmuls
mov
pop
cli
inc
adc
hlt
add
out
cld
sub
and
inc
loope
sbb
jno
push
lock
lcall
lahf
jo
loopne
pop
daa
xor
xchg
mov
push
inc
scas
push
std
add
push
and
les
mov
xlat
cld
iret
jg
push
add
aaa
icebp
popf
leave
inc
ficoml
les
ja
sub
inc
lods
dec
sub
nop
into
xor
push
loop
mov
or
pop
inc
push
push
and
ja
mov
cmc
xorb
jno
pop
or
cmp
adc
mov
jae
push
mov
push
scas
cmp
into
mov
cmp
movl
or
mov
cmp
inc
mov
pop
xchg
repnz
push
insl
imul
nop
and
aam
fisttps
clc
or
test
mov
mov
or
stos
in
xchg
popf
mov
movsl
jne
jmp
nop
outsb
stc
add
pop
pusha
sub
inc
inc
and
or
adc
in
jg
add
or
outsb
add
mov
jecxz
test
sub
sub
int3
cmp
fisttpll
pop
adc
rol
pushf
adc
push
popf
outsl
jnp
popf
rolb
pusha
ss
mov
repz
or
mov
mov
movsb
hlt
inc
mov
int
xlat
mov
xchg
mov
stos
scas
outsb
mov
pop
in
xlat
push
add
icebp
adc
jns
dec
into
nop
test
xchg
push
jns
push
int3
add
scas
fidivrl
cltd
pop
push
insl
mov
jmp
inc
jecxz
push
add
loopne
sbb
roll
int
dec
mov
sbb
and
mov
adc
mov
lea
std
xchg
stc
outsb
cli
or
sub
int3
sbb
or
pop
xchg
jle
js
xor
xor
lea
mov
jecxz
mov
in
pop
jnp
sbb
fdiv
dec
xor
aaa
lock
inc
das
adc
mov
ds
repnz
repz
mov
adc
cmp
lods
mov
sub
sub
dec
inc
jmp
das
jge
test
aaa
mov
xor
ja
xchg
pop
mov
rcrb
adc
adc
xchg
dec
push
data16
int
add
int3
pop
push
pop
cmp
dec
in
sti
imul
xchg
fmull
dec
js
hlt
fisubrs
adc
inc
rcll
ljmp
pop
aas
sub
xor
and
ljmp
pop
jg
jle
ss
sahf
imul
pop
lds
jbe
out
jmp
es
popa
aam
pop
xor
sub
sub
ss
cmp
inc
cmp
sbb
xchg
jmp
mov
int3
sub
add
push
sbb
lods
adc
outsb
xor
mov
call
imul
jae
iret
mov
ret
cmp
and
push
lcall
ljmp
popa
sbb
jmp
setno
mov
jmp
call
fdivl
inc
movl
pop
sti
mov
packssdw
mov
sub
out
shrb
cmpsl
popf
mov
stc
imulb
adc
inc
or
out
loopne
push
loop
sub
pop
lret
fadd
inc
les
pushl
xlat
xchg
and
jo
pusha
xchg
dec
push
sbb
stos
into
inc
and
sti
mov
out
mov
cmp
lret
stc
test
or
loope
dec
adc
mov
cmp
mov
insl
arpl
pushf
adc
sbb
push
and
movsl
cli
and
mov
insl
xchg
ja
fldenv
jle
push
aad
adc
dec
adc
xor
cmp
dec
fstps
lret
xchg
sub
mov
jg
bndstx
mov
cmp
out
xor
bound
mov
jo
in
loop
mov
stos
sbb
mov
test
xchg
loope
fisttps
adc
iret
xor
lcall
mov
cltd
arpl
fsubrp
sahf
xchg
std
add
insb
popl
jmp
xchg
pop
fsubp
jo
fldenv
clc
mov
mov
aaa
nop
cmpsb
inc
cwtl
test
sub
xor
jo
add
dec
test
sub
data16
test
mov
xor
sbb
lds
and
xchg
xor
test
out
push
and
mov
mov
cs
outsl
iret
dec
stos
fwait
hlt
and
ljmp
jnp
push
imul
mov
lret
xor
leave
sub
loop
pop
arpl
fisubs
out
faddl
push
imul
mov
lahf
mov
push
loopne
shll
mov
imul
scas
jns
lea
lahf
fndisi(8087
mov
jl
push
mov
xchg
mov
inc
movsl
mov
ss
jo
add
mov
cld
imul
imul
into
fdivrs
fmuls
fisttpl
xchg
and
inc
rclb
cmp
mov
shl
push
pop
aam
lea
jb
call
scas
mov
pop
mov
mov
pop
stc
in
sub
adc
mov
cld
fidivrl
mov
mov
mov
lgs
into
hlt
xchg
daa
rorb
mov
inc
popl
in
aam
fisttps
cmp
fisubs
dec
repnz
pushf
daa
lahf
insl
push
mov
inc
shll
in
inc
hlt
lock
repnz
xor
xor
sub
inc
pop
das
repnz
fstpl
mov
neg
xor
pop
das
test
fdivl
pop
adc
push
sti
fcomps
and
jns
mov
in
gs
sbbb
cltd
xchg
rclb
xlat
aas
int
pusha
fwait
inc
sti
xor
sbb
or
push
xor
pop
jecxz
addb
jo
mov
stos
imul
lods
fadds
in
add
dec
dec
cmp
add
and
mov
lcall
sub
xor
das
mov
hlt
cli
aam
aas
inc
mov
mov
jno
movsl
sub
cmovs
aaa
dec
sub
aam
inc
xor
jmp
sahf
aaa
mov
and
mov
imul
dec
icebp
mov
test
cmc
pop
sbb
cli
dec
cmp
mov
mov
xchg
gs
inc
pop
int3
mov
xor
sbb
xchg
nop
mov
loopne
xor
rcl
pop
pop
mov
scas
sbb
loop
je
test
dec
pop
cmp
push
out
mov
dec
or
into
xlat
popa
dec
std
mov
adc
jl
pusha
hlt
imul
cmp
les
cmp
ret
or
and
pusha
cmp
es
in
fdiv
add
mov
fwait
mov
ret
ret
lret
adc
cmp
and
or
jge
xor
fbstp
repnz
xchg
add
out
popa
scas
test
push
in
loope
xorb
sbb
inc
pop
adc
or
and
repz
push
jecxz
int3
inc
mov
daa
pusha
xor
inc
jecxz
pop
ret
push
jbe
addr16
loope
dec
sbb
jo
clc
rol
or
int3
ss
enter
imul
sub
setne
lret
jg
data16
push
xchg
loop
std
pop
adc
mov
pop
int
jae
test
lods
flds
hlt
cmp
lret
int
ljmp
fstl
pop
jg
je
mov
pop
add
inc
xchg
repnz
test
fs
inc
ljmp
scas
push
popf
je
or
movsl
stos
or
clc
int
in
ret
mov
xchg
testl
movsl
mov
mov
fwait
cmp
adc
hlt
stos
loope
jb
inc
nop
lcall
aad
rcrb
or
out
push
lock
sbb
mov
imul
or
in
push
outsl
jae
test
push
xchg
inc
lods
sbb
inc
fwait
mov
sahf
call
stos
mov
fwait
mov
mov
adcl
jl
sbb
pop
add
flds
mov
add
out
sti
push
jecxz
stos
shrl
dec
push
sub
xor
push
mov
inc
shll
shll
nop
daa
rorb
ja
loop
movsl
mulb
dec
pusha
roll
daa
lret
cmc
push
inc
popa
loop
rcll
leave
push
or
cmp
inc
movsb
add
dec
popf
or
push
gs
push
jecxz
pop
mov
xchg
ret
sub
jmp
stc
jnp
loope
cmpsl
dec
mov
cmp
jg
popf
mov
push
push
imul
outsb
cld
xchg
dec
xchg
or
cmpsb
mov
pop
test
jmp
test
inc
cmp
xchg
fcomi
mov
mov
mov
push
or
loopne
addb
icebp
int3
stos
pop
mov
push
cli
pop
xor
push
imul
movb
sub
ja
je
test
xor
aaa
mov
push
iret
out
cmpsb
add
push
push
mov
sbb
or
xchg
dec
cmp
movsl
mov
into
mov
cmp
mov
fwait
ja
mov
inc
pop
ja
sbb
sub
pop
loopne
idiv
mov
jae
add
mov
add
pop
enter
xor
sub
pop
sbbl
loop
lcall
popf
ret
inc
out
je
loope
lea
fwait
mov
ret
addr16
test
jo
mov
cmp
shlb
cmpsl
or
mov
nop
mov
repnz
into
mov
inc
cmp
stos
dec
mov
jnp
adc
or
and
pop
stc
fiaddl
pop
add
out
and
mov
and
mov
cmpsl
jmp
jle
xchg
test
add
adc
ror
jb
out
out
sub
mov
push
sub
lahf
les
sub
or
add
mov
jmp
push
jnp
sbb
fwait
xor
and
ror
sti
in
mov
lock
dec
mov
dec
popa
stos
dec
pusha
and
push
dec
in
cmp
dec
push
adc
jp
mov
stos
ds
sbb
xor
ljmp
call
fld
sbb
jne
mov
xor
inc
test
xor
ret
call
popf
rol
sbb
into
ret
in
and
les
lock
scas
repnz
xchg
or
push
cmpsb
xchg
sbb
xor
insb
mov
mov
frstor
xchg
pop
ret
pop
xchg
cmp
push
andl
mov
in
outsl
movsl
ds
mov
inc
out
dec
les
mov
mov
lock
dec
js
shlb
frstpm(287
addr16
sub
lds
pop
fsubp
pop
pop
scas
cld
dec
stos
pop
fdivrs
in
dec
movsb
shrl
pop
mov
push
cmpsl
add
and
jle
loopne
stos
cmp
xchg
cmpsb
xor
xor
jmp
pop
mov
or
ret
loop
in
add
push
jnp
dec
xor
adcl
stc
adcl
icebp
fldenv
scas
push
cmp
xchg
mov
pop
subb
sti
cmp
loop
xchg
xor
movsl
mov
xor
cmp
in
push
xchg
cmpsl
fmul
inc
insl
test
push
shr
cltd
lret
ljmp
cltd
add
mov
adc
mov
cld
je
xor
rolb
imul
xabort
or
or
xchg
loope
xor
and
leave
call
popf
dec
dec
arpl
mov
cmpsl
adc
or
in
cmp
inc
add
scas
mov
inc
fisubl
dec
jnp
or
out
mov
nop
jbe
xorb
scas
inc
fldz
or
or
test
mov
es
notb
and
pop
fldcw
dec
inc
jno
xchg
cmp
or
lea
push
lods
outsl
cltd
ja,pt
and
and
or
out
xchg
aad
sbb
xchg
inc
movb
dec
bswap
test
add
cmp
mov
add
mov
hlt
xchg
lahf
mov
and
pusha
leave
movsl
repnz
iret
add
movsb
push
out
xchg
lcall
clc
pop
xor
jnp
dec
adc
dec
xchg
daa
cmpsl
cmpsl
inc
jmp
imul
sbb
xchg
into
and
js
repz
ljmp
mov
mov
push
mov
adc
das
loopne
sub
mov
sarl
pusha
test
leave
daa
sarl
fsubrp
jl
repnz
mov
mov
imul
das
test
test
xor
jbe
enter
fdivrl
mov
sub
rcll
aad
imul
jmp
inc
ds
test
push
xchg
mov
adc
fildll
mov
inc
leave
roll
test
mov
lods
mov
dec
out
mov
mov
aas
out
incb
imul
fcmovnu
out
mov
sahf
ficomps
sub
and
in
ficomps
in
and
inc
pop
mov
mov
push
cli
push
xchg
frstor
test
out
xor
push
adc
in
test
andl
mov
pop
xchg
or
ljmp
mov
or
mov
sarb
aam
test
daa
jne
ja
adc
fstl
pop
jno
pop
inc
pop
or
xchg
sbb
ljmp
pop
sub
xchg
pop
lret
or
aad
xor
inc
mov
mov
mov
sbb
sbb
pop
cmpsl
fwait
test
mov
lods
mov
mov
inc
fsubrs
sub
jmp
outsb
je
jne
xchg
sbb
ror
pushf
test
mov
cmp
or
adc
ret
xor
in
inc
xorl
fsubrl
or
push
pop
and
int
pop
dec
mov
stos
xchg
sub
outsb
stos
jb
add
cmp
fldt
xchg
jbe
fnstsw
pop
xchg
xlat
popa
add
inc
jnp
adc
neg
add
push
fnstcw
xlat
lcall
mov
leave
add
xor
in
aaa
mov
mov
or
xchg
out
ja
mov
inc
stos
mov
dec
aam
movsb
push
sub
push
pop
sub
inc
test
cmp
out
scas
ret
jae
lret
add
dec
div
test
rorl
sar
sub
lods
repnz
xor
dec
arpl
xchg
add
shrl
aad
add
xor
ja
cli
divl
or
and
stc
push
arpl
ret
or
push
je
and
lds
icebp
roll
push
adc
and
mov
add
mov
into
outsb
inc
ds
jbe
call
xchg
cmp
push
daa
mov
mov
andl
jae
pop
test
adc
lds
jl
rclb
jb
icebp
outsl
imul
inc
xorb
movsb
inc
insl
xchg
mov
push
sbb
push
rclb
jnp
push
fcompl
push
dec
dec
push
enter
xchg
ja
shll
in
xchg
jge
test
shrl
jne
addb
dec
cwtl
cltd
xor
adc
lea
lcall
popa
add
push
mov
je
subb
adc
cmpsl
pop
push
mov
sbb
add
lcall
int3
insl
or
and
push
jmp
icebp
test
xor
sbb
mov
pop
inc
lock
inc
xor
mov
movsl
sub
inc
add
or
lret
sub
cwtl
fwait
xlat
jae
loopne
loope
pop
loopne
nop
inc
sbb
inc
jl
cltd
xchg
cwtl
lea
xor
fneni(8087
jmp
cmpsb
jle
mov
aad
push
or
xchg
mov
sub
mov
test
cmc
clc
xchg
pushl
ret
ja
or
and
test
jge
pop
stos
scas
mov
xor
fwait
std
add
dec
mul
imul
xor
int
xchg
xor
loop
repz
inc
pop
popf
in
popa
test
inc
sbb
xor
ja
pushf
aas
push
jno
push
xchg
pop
call
jmp
in
or
or
pop
jb
adc
aad
sbb
rorb
adc
dec
cwtl
out
pop
mov
lahf
xchg
js
lea
inc
jb
jae
inc
fwait
jb
fcoml
push
call
in
xchg
push
push
lret
fsts
or
lahf
mov
or
cmp
imul
push
mov
jp
sahf
add
push
jmp
dec
fwait
jb
mov
adc
pop
sub
sub
jo
jb
les
pop
hlt
sbb
sub
arpl
fyl2xp1
xor
scas
mov
pop
stos
popf
mov
or
and
xchg
gs
xchg
repz
lret
mov
xor
je
mov
shrb
mov
fsubrl
sbb
or
xor
xlat
negb
cmp
inc
push
add
ret
pop
push
aam
lret
pop
rcr
mov
clc
sti
mov
xchg
jmp
pop
cli
test
lcall
dec
pop
or
jg
cmpsb
jno
in
sub
outsw
jecxz
sbb
flds
ss
and
lods
jo
and
pop
mov
dec
jle
inc
xchg
jl
sbb
bound
push
in
cld
fwait
add
ljmp
fwait
mov
pop
in
rorb
push
xorb
hlt
das
dec
sbb
aaa
aam
cs
jecxz
adcl
in
jecxz
add
hlt
jnp
and
les
repz
insl
sbb
movsl
lock
rorl
cmp
fidivs
jnp
fwait
push
outsl
ljmp
arpl
jno
rcll
dec
mov
push
fsubrs
lahf
ret
test
jle
push
pop
idiv
ret
stos
out
fldpi
insb
xor
xor
sub
mov
xor
push
dec
inc
jnp
jle
cltd
sbb
cli
icebp
dec
and
jbe
cmpb
test
sbb
gs
and
inc
jmp
xor
data16
sub
or
lahf
push
lods
test
dec
pop
scas
lcall
imul
mov
mov
cwtl
in
das
sbb
out
mov
fiaddl
mov
dec
mov
fnstsw
iret
shll
stos
lds
pop
and
dec
iret
cmpsb
sub
frstor
adc
jp
mov
jp
mov
inc
inc
mov
inc
test
pop
push
shlb
mov
inc
iret
ret
mov
push
adc
dec
imull
cmp
pusha
lret
pop
inc
sti
icebp
push
ljmp
mov
inc
xlat
cmp
pushf
mov
mov
scas
adc
icebp
stos
in
dec
lcall
sarb
pop
mov
add
sub
or
test
leave
jno
sbb
andl
cmpsb
mov
add
add
out
push
jp
pop
sub
cmpsb
loopne
in
sub
mov
sti
sti
int3
mov
mov
mov
mov
push
mov
pop
or
xorl
push
mov
loop
pop
lcall
dec
lock
int
pop
or
popa
out
sbb
int3
outsl
out
sbb
daa
outsb
cmp
lret
int3
dec
les
test
jno
in
aas
fwait
jmp
sahf
mov
ret
ret
aas
jno
nop
push
std
inc
mov
shrb
movsb
das
testb
aam
inc
scas
or
scas
lods
jmp
push
mov
dec
sahf
ret
in
clc
jo
inc
popf
jae
dec
adc
add
inc
dec
inc
xchg
mov
into
sub
mov
ja
xchg
lret
test
mov
shr
hlt
xchg
lea
je
cwtl
es
xchg
dec
aad
push
xor
fisttpl
sbb
fcmovb
cmp
lock
ds
mov
add
cmpsb
sarl
arpl
in
jns
xchg
fsubl
cmpsb
cmp
in
imul
decb
cmp
dec
add
inc
push
je
int
mov
in
jae
ret
vpshab
lock
dec
dec
jbe
insl
fcom
lods
test
data16
int
loope
cmp
imull
sub
rol
cmpsb
xchg
xchg
pushf
mov
adc
cs
les
xor
es
mov
add
dec
jp
mov
insl
rclb
pusha
jle
push
xor
pop
mov
or
out
xchg
rclb
int
insb
clc
fcoms
push
inc
adc
mov
lret
pop
fimull
pop
cmp
pushf
xorb
cmp
cmp
sahf
fwait
mov
mov
ret
sub
daa
mov
dec
insb
sub
rolb
mov
jecxz
inc
mov
les
push
mov
and
sbb
push
lret
scas
popf
cmp
dec
jg
or
daa
lds
adc
inc
je
lods
cmpsl
fcompl
es
aas
and
jo
inc
push
addr16
push
mov
sar
shrl
int3
mov
mov
cmp
inc
rcrl
add
lahf
mov
adc
jo
xchg
rcrl
fcmovbe
aaa
clc
insb
mov
jne
movsl
loop
insl
and
cltd
or
mov
xlat
dec
cmp
pop
orb
aaa
pop
xlat
mov
xchg
sub
or
shll
cmpsb
mov
inc
test
fdivrs
add
adc
rclb
fcoml
adc
and
inc
loopne
in
jecxz
iret
inc
xor
sti
push
in
pop
jae
fadds
ds
leave
imul
push
ret
cli
xacquire
adc
mov
lret
sbb
inc
popf
pop
jnp
xchg
fadds
stc
outsl
lcall
les
dec
adc
cld
mov
lds
or
cwtl
cs
notl
or
loop
mov
mov
add
das
les
test
xchg
adc
jp
mov
les
jp
inc
hlt
push
mov
push
pop
div
leave
out
fsubr
push
daa
rcl
xor
xchg
jl
add
pop
js
fstpl
xor
dec
stos
push
adc
jo
jo
mull
repnz
inc
es
cmp
dec
inc
pushf
cmp
enter
or
pop
xor
lods
fldt
stos
mov
dec
xchg
call
dec
leave
test
jg
pusha
cld
push
nop
jae
lods
pop
cmp
imul
leavew
cmpsb
cld
pop
gs
push
cli
cltd
mov
or
sbb
test
nop
lods
pushf
scas
or
and
mov
lods
cmpsb
movsl
add
pusha
mov
test
lret
xchg
lret
cwtl
xchg
stos
jp
adc
xchg
pushf
pushf
cmp
test
test
pop
pop
and
out
or
push
sti
push
sbb
xchg
jmp
les
pusha
sub
dec
sub
mov
push
and
add
or
cmp
xor
test
sbb
xchg
xchg
cwtl
push
mov
pop
sub
sbb
inc
cmp
aad
aas
pop
mov
mov
jne
cmp
popf
dec
test
lcall
add
jnp
sbb
imull
cmc
sahf
sub
add
std
mov
ret
movsb
negb
mov
fwait
xchg
outsb
arpl
es
sarl
adc
ret
jno
mov
fildl
movsl
fisttpll
xchg
xorl
iret
in
ds
scas
and
les
xchg
or
lea
out
inc
jno
mov
adc
mov
jno
dec
mov
jns
inc
and
push
sub
cmp
push
loop
cwtl
mov
arpl
inc
jne
lcall
test
das
aad
hlt
xchg
aam
call
ror
dec
dec
mov
bound
xor
pop
xchg
mov
dec
repz
inc
aas
jns
ds
into
xchg
add
into
aas
out
inc
cmpsl
mov
mov
shrb
and
and
push
fdivrs
push
push
ret
mov
push
pop
outsb
cmpsb
scas
jmp
pop
inc
je
or
ljmp
jecxz
hlt
dec
mov
mov
inc
mov
jno
les
out
cmc
test
stos
call
leave
mov
pop
mov
and
jg
cltd
fbld
repz
sub
jnp
cmp
out
adc
lcall
jmp
add
push
repnz
xlat
dec
pop
nop
fildll
and
out
jbe
add
and
incb
outsb
les
addb
pusha
xchg
pop
xor
pop
fsubrp
mov
sub
insl
or
icebp
stos
pop
shlb
and
pushf
aad
inc
pop
pop
icebp
push
fbld
xchg
lods
push
sub
rcrb
sub
fucomp
xor
mov
xchg
jg
jl
mov
ja
out
daa
mov
cwtl
inc
dec
jg
sub
outsb
stc
bound
leave
pushf
inc
mov
scas
or
addr16
push
jns
ljmp
clc
jg
imul
imul
push
repz
xor
fstp
outsl
lret
jb
stos
aam
roll
hlt
repz
test
dec
mov
adc
cmp
push
pop
shlb
mov
bndstx
mov
push
mov
add
pop
in
sub
dec
push
out
xchg
xor
ret
inc
popa
fmull
add
cmp
cmp
neg
addb
mov
jge
push
mov
jno
mov
inc
push
mov
sti
push
daa
out
pop
popf
dec
leave
cmp
mov
jg
xchg
outsb
xchg
push
imul
adc
pop
dec
lret
lahf
lock
cld
jnp
inc
ret
jmp
adc
loopne
push
dec
loopne
push
xor
xchg
mov
into
pushf
jl
jno
inc
dec
int3
mov
mov
mov
xchg
dec
rcrl
mov
jle
cld
lea
jae
and
cltd
sbb
sub
and
insb
clc
jno
int
dec
jbe
fcompl
movsl
notl
cmp
sub
adc
mov
jbe
xchg
cmpsl
pop
and
test
xlat
jmp
loop
adc
xchg
push
jmp
fidivs
test
mov
arpl
int3
orb
mov
push
imulb
cli
add
sub
xchg
xor
and
pop
mov
push
push
and
sub
mov
adc
inc
in
inc
pop
push
jl
cwtl
xchg
xor
mov
lock
pop
xchg
jns
pop
mov
arpl
mov
filds
cli
and
fldl
lahf
fs
rorb
cmp
stos
loopne
sub
mov
adc
test
xchg
mov
xor
int
sbb
mov
mov
adc
cs
aas
pop
shlb
icebp
mov
xor
jo
ror
arpl
fwait
push
test
sbb
test
mov
add
fstps
jp
pavgw
mov
movsl
std
jle
cmp
jae
adcb
aas
push
in
push
pop
add
xchg
daa
shl
mov
mov
pop
ficomps
push
sub
scas
scas
jae
nop
adc
mov
inc
movsl
fucom
test
dec
notl
jnp
shrb
das
movsl
insl
sti
mov
bnd
xor
hlt
jmp
sti
cmp
jbe
add
les
pop
imul
and
test
lds
int3
dec
call
leave
insl
out
jge
in
push
push
mov
push
jl
jno
sahf
mov
mov
add
xchg
xchg
cmpsl
lods
aaa
js
xchg
or
dec
fdiv
icebp
pop
mov
xchg
jp
popa
or
sub
pop
sti
into
mov
lret
sti
add
rcrb
push
pop
pop
and
stc
dec
inc
fsubs
imul
sub
xor
xchg
xor
sbb
insl
lods
shr
mov
push
mov
enter
add
mov
pop
fcom
roll
shr
jmp
lock
repnz
test
ja
jl
mov
mov
or
dec
mov
ds
xchg
out
test
inc
xor
jb
sti
xor
adc
add
arpl
push
ret
loop
mov
mov
mov
push
daa
cmpsl
int3
xchg
je
adc
aaa
jno
rolb
mov
jbe
lods
dec
push
ljmp
mov
jg
push
dec
sarb
jbe
leave
or
fs
dec
jbe
push
xor
mov
mov
or
loop
repz
scas
mov
in
fsubp
call
sub
push
mov
push
aaa
jmp
or
mov
mov
in
movsb
lea
xor
add
adc
mov
pop
mov
or
cmpsb
dec
int
data16
cmpsb
in
sbb
add
dec
stos
xlat
inc
jmp
cmp
sbb
or
loope
mov
movsl
movsb
inc
mov
out
xchg
xchg
adc
out
orl
jnp
xchg
or
ret
lock
mov
mulb
test
sbb
inc
scas
ret
loopne
test
or
jbe
outsl
jge
addr16
adc
mov
aad
push
fdivl
dec
cmp
jno
xchg
inc
add
int3
jmp
push
jmp
cmp
jo
mov
fmulp
or
and
pop
jp
pop
xchg
int3
enter
sti
icebp
add
scas
push
mov
push
sbb
xor
mov
out
mov
inc
cmp
mov
push
cltd
je
lock
xor
inc
xchg
and
sub
xchg
mov
lahf
sub
fmuls
push
aaa
adc
xchg
lds
push
mov
or
jecxz,pt
jbe
addl
cmp
cmpsl
push
pop
test
inc
js
stos
fdivrp
lcall
out
push
pop
js
lods
movl
mov
out
leave
cmp
gs
mov
lret
mov
gs
out
xor
sub
incl
cmp
pop
xchg
addb
cmp
insb
aaa
cmpsb
adc
hlt
mov
into
adc
cmp
lret
mov
or
addl
mov
test
cld
leave
sub
xchg
pop
and
add
shl
lahf
mov
jbe
mov
jno,pt
cmp
dec
repnz
push
mov
cmp
cs
xor
int3
fs
cmpl
cmp
sahf
xchg
push
sti
lahf
bound
jne
loop
scas
inc
pop
add
jne
mov
pop
jo
push
jo
and
iret
mov
jle
mov
inc
enter
stos
repnz
int
pushl
aaa
dec
sub
inc
mov
or
dec
sub
dec
mov
push
add
cli
push
inc
pop
mov
sbbl
xchg
scas
xor
lods
jnp
pop
jae
fcoms
mov
sub
or
pop
fisttpl
mov
adc
mov
aaa
add
jae
inc
or
dec
in
notl
adc
jno
loope
cli
dec
fdivrl
pcmpgtb
mov
out
out
pop
mov
add
pushf
scas
sbb
mov
iret
inc
sub
pop
and
movsb
dec
inc
sbb
cmp
lock
cltd
int3
cmp
stc
adc
rcrl
outsl
xor
mov
jb
enter
cmp
xchg
pop
or
mov
js
test
sbb
test
aas
pop
push
sbb
sub
adc
adcl
sbb
bound
jae
loope
ret
dec
mov
cmp
lds
xchg
sbb
sbb
mov
dec
in
outsb
ret
mov
leave
sub
add
push
pop
jno
andps
and
dec
pop
inc
je
pop
out
adc
add
mov
pop
test
mov
jo
ret
inc
fsubrp
scas
mov
fstpl
adc
popf
subl
test
outsb
xchg
jnp
iret
pusha
ffree
loope
and
fwait
data16
push
int3
imul
inc
shll
pop
mov
into
mov
push
mov
ret
sub
sbb
mov
inc
jecxz
mov
leave
sub
sbb
mov
out
jle
add
sarl
push
test
xor
pop
ljmp
call
sub
call
faddl
int3
dec
or
jo
sub
jo
lahf
xchg
lret
pop
popf
push
xor
fwait
ljmp
cmp
in
lods
or
and
enter
mov
xor
lea
frstor
ds
dec
pop
cmp
insb
sbb
ret
lods
mul
mov
mov
sbb
subb
mov
adc
scas
test
xchg
popa
xor
mov
rcll
push
clc
les
pop
into
aad
outsb
sub
cli
dec
repz
repnz
xor
aad
mov
mov
addl
jno
xor
loope
test
scas
aas
jo
clc
or
aas
push
jl
int3
ja
lcall
lret
fwait
mov
push
rorl
dec
movsb
les
jl
sub
jp
lea
nop
jne
arpl
adc
loop
push
mov
fisubl
add
xchg
and
ficomps
pop
sub
mov
mov
out
in
and
jl
xchg
rcl
filds
add
xchg
cmp
lods
pop
or
inc
decl
lock
in
cmp
push
cmc
adc
imul
push
leave
sub
cwtl
inc
aas
mov
xchg
test
insb
pop
xor
jmp
popf
repz
arpl
in
jb
lds
ret
or
imul
push
mov
mov
push
leave
iret
cmpsb
or
sub
pop
scas
mov
adc
in
ss
sarb
and
cmpsl
ljmp
sub
add
mov
adc
and
stos
sbb
push
insb
lea
cwtl
or
das
push
jecxz
fmuls
stos
xchg
push
dec
ud1
jge
mov
sub
jecxz
mov
rcrb
out
daa
mov
shlb
into
aas
mov
pop
adc
imull
fisttps
mov
ja
aaa
jmp
movb
cmp
repz
call
lret
pusha
or
cmp
pop
repz
int
inc
jmp
xchg
adc
adc
call
mov
sahf
test
sbb
sbbb
sti
and
notl
mov
adc
mov
xchg
aad
xchg
sub
cld
enter
mov
mov
hlt
dec
sti
xchg
sbb
inc
adc
inc
and
inc
xchg
inc
pop
adc
jne
fdiv
push
push
out
fisubrl
sub
push
dec
dec
sub
lods
ljmp
lcall
inc
fs
adc
call
pop
pop
lea
cmp
lret
lret
call
popa
dec
leave
push
inc
xchg
mov
xchg
repz
jne,pt
push
rcll
rcrl
scas
inc
or
jo
int3
inc
sahf
inc
mull
sbb
mov
push
jo
cmp
add
push
sub
jg
jnp
leave
xor
and
mov
dec
dec
repz
mov
mov
clc
lcall
stos
aad
int
cmp
push
mov
cmp
push
in
push
outsl
sbb
cmp
in
les
ss
inc
or
lds
mov
pushf
jae
or
mov
insb
jp
aad
les
xor
jge
mov
mov
dec
dec
in
pop
xchg
sbb
or
inc
and
repnz
call
divb
insl
aaa
mov
movb
imul
xor
xlat
mov
idivl
notl
push
xor
decb
sbb
lods
cli
inc
addl
pusha
rolb
into
test
mov
dec
add
subb
pop
jo
mov
inc
xchg
rolb
jnp
pushf
imul
roll
aad
cmc
cwtl
cmpsb
xor
jo
jb
addb
mov
xor
or
add
mov
outsl
stos
mov
xor
imul
je
stos
sbbb
lret
push
mov
mov
out
pushw
mov
ja
lahf
std
dec
jne
dec
jp
sbb
cltd
loopne
add
adc
daa
in
mov
jecxz
cltd
ja
ret
bound
xchg
jno
xor
push
lods
hlt
mov
mov
sbb
xchg
test
ja
push
mov
cmc
mov
mov
rcl
rorb
xchg
xchg
mov
push
xlat
add
jae
aas
rcrl
mov
jmp
test
data16
pop
jns
subl
mov
call
aas
stos
sub
cltd
aaa
pop
dec
push
loope
rclb
xchg
pushf
arpl
mov
cmp
jg
lods
cmpsb
push
imul
clc
int
xor
xchg
sahf
or
hlt
xchg
or
and
insl
cltd
pop
pop
push
je
sbb
or
subl
rorb
fisubl
inc
repnz
mull
cmp
lods
lret
xorl
fwait
pop
jns
or
filds
mov
push
loopne
pop
call
jl
lcall
cwtl
pop
pop
pop
iret
sbb
aaa
xchg
jb
mov
add
cmpsb
pop
sbb
int
ds
test
lcall
inc
popf
fisubs
or
testb
pop
mov
xorl
fistps
jae
insl
and
div
mov
cli
adc
inc
fbld
movsb
outsb
movsl
and
arpl
xchg
ds
in
jae
mov
aaa
pop
in
fwait
xor
xchg
in
ret
mov
test
es
dec
mov
inc
int3
pop
and
push
dec
jo
cltd
pop
mov
in
pop
pop
fwait
gs
mov
xchg
mov
add
add
sbb
stos
out
ficompl
jle
into
ss
add
addr16
pop
movsl
lcall
jmp
and
ret
dec
in
ja
jecxz
jnp
shlb
test
or
ds
sbb
bound
sub
loop
mov
dec
sub
ret
lahf
cmp
frstor
push
sbb
dec
mov
cmp
loop
fisttpll
mov
mov
sub
fwait
push
mov
lods
mov
mov
inc
inc
testl
add
mov
xchg
aad
push
push
pop
es
lods
sbb
xchg
mov
repnz
jle
pushl
imul
push
fs
mov
icebp
jle
mov
leave
and
ret
inc
push
xchg
jge
imul
add
int
lock
sub
adc
jne
sub
dec
ret
pop
shlb
hlt
rcr
xor
jae
sbb
ret
ja
jne
add
add
fcomp
pop
out
push
jnp
pop
movsl
and
add
jge
std
in
pop
in
in
dec
das
mov
daa
into
push
je
ss
sub
mov
pop
dec
lcall
sub
mov
rcrl
sub
movl
pop
pop
fwait
xlat
popa
jnp
dec
shl
cmp
jmp
sar
insl
fcomps
in
aad
dec
loop
aam
xor
cmpsb
fildl
in
or
jl
inc
cmp
fxtract
and
sbb
shrb
enter
pavgw
popf
mov
fidivrl
in
repz
cli
cmp
pop
add
or
add
andl
lock
mov
andb
outsb
in
bound
into
cmpsb
sub
icebp
stos
push
sbb
cmp
in
add
xchg
shrb
jl
lahf
or
inc
loopne
iret
aaa
inc
push
xor
xchg
jne
xchg
mov
out
in
hlt
pop
add
hlt
loope
pop
push
mov
jle
shll
xor
pop
add
xlat
aas
mov
xchg
mov
aad
dec
loop
dec
test
lock
xchg
jnp
movsl
push
pop
sub
leave
cmc
call
sub
scas
add
mov
ja
sub
movsb
movsl
sub
sbb
sub
shlb
sti
insl
pop
jb
push
stos
xor
mov
fisubrs
xor
adc
flds
cmp
sbb
mov
pop
xor
inc
aas
rolb
mov
nop
dec
call
adc
sub
aas
cmp
jle
adc
call
jne
fstpl
pop
jl
mov
push
mov
lret
mov
stos
popf
fbstp
cmpsl
push
scas
mov
scas
lods
cmpsl
adcb
into
out
and
mov
pop
adc
xor
out
jbe
mov
or
mov
aam
pop
xchg
pop
jbe
out
rcrl
imul
lock
jns
bound
bound
or
jecxz
mov
inc
xchg
push
in
movsl
mov
pop
and
xchg
mov
lcall
faddp
insl
lods
shr
int
dec
ja
inc
dec
pop
sbb
sbb
cmp
cltd
add
std
xchg
or
pop
das
sbb
sbb
jno
orb
xchg
pcmpeqd
and
rorl
incb
leave
xchg
add
cltd
lds
cld
mov
sbb
popa
out
neg
lea
clc
inc
xchg
mov
hlt
mov
xchg
arpl
movq
mov
loope
xchg
enter
push
mov
psubb
inc
add
test
je
xchg
rcl
out
enter
adc
ljmp
mov
paddsw
loop
adc
cmpsb
das
jne
repnz
subb
cs
sar
fimuls
inc
dec
cmp
mov
popf
out
inc
sbb
outsl
mov
stos
movsb
fidivl
enter
lock
jno
andb
pop
and
push
dec
push
inc
out
adcb
adc
sbb
xorb
in
lcall
adc
xchg
jmp
pop
sub
xchg
cmpl
scas
sub
mov
fldl
fcmovnu
ret
push
cmp
or
push
xor
lods
and
dec
xchg
sbb
xor
jb
imul
sti
stc
push
sti
jb
jmp
mov
lcall
cmp
pop
aas
mov
jecxz
xor
cltd
and
sbb
nop
jl
fists
ret
push
insb
cmp
popf
pop
mov
mov
lahf
push
out
push
pop
fxtract
add
aad
pop
sti
and
cmp
shl
xchg
and
in
sbb
mov
nop
jno
ss
xor
xchg
jns
ret
lcall
dec
lahf
add
ficoml
add
push
lock
cwtl
fists
icebp
mov
fcomps
frndint
inc
test
mov
shll
mov
mov
rcl
mov
jge
jnp
addr16
idiv
xor
xor
add
cs
xchg
out
pop
mov
adc
test
shrb
lcall
mov
aad
jne
pop
test
hlt
xor
stos
mov
lcall
dec
loop
pop
outsb
lock
sbb
outsb
push
test
xchg
je
or
mov
mov
notb
pop
fdivrl
sub
pop
clc
fcoms
cwtl
cmp
mov
sbb
mov
cmp
data16
inc
xorl
pop
leave
add
insl
push
xor
pop
or
inc
mov
inc
mov
and
push
pop
sub
movsb
sub
mov
dec
push
dec
lret
and
push
sub
adc
adc
or
fstpt
loope
aam
cmp
mov
inc
fistpll
out
push
adc
mov
mov
aaa
mov
bound
inc
in
add
cltd
or
jno
adcb
cmp
clc
lds
in
jae
shll
pop
add
pop
mov
cmc
push
nop
dec
sub
sbb
shlb
mov
mov
sbb
ja
cmp
dec
mov
mov
sub
mov
cmc
cmp
lcall
cmp
dec
notl
push
stc
outsl
dec
fildl
test
ret
out
lcall
je
iret
jge
out
psrad
xchg
inc
cld
pop
lods
and
aad
cmp
lcall
dec
adcb
aaa
xchg
sbb
xchg
push
push
xor
sbb
insb
and
int
mov
push
enter
cmpsb
mov
std
pop
pushf
mov
lahf
adc
scas
data16
clc
shrl
push
call
jne
mov
sub
mov
xor
pop
fisttpl
adc
ss
pop
or
add
pushf
mov
mov
in
ja
les
fs
jmp
es
push
pop
daa
push
add
mov
adcl
das
jo
test
jbe
xor
pop
js
push
pop
out
xor
bound
test
pop
test
push
mov
mov
sbb
jl
movsl
aam
push
mov
pop
sbb
xchg
ds
rorb
dec
adc
shlb
cmp
cmp
xor
pop
stos
fisttpl
shr
out
pop
cwtl
dec
mov
testb
mov
imul
inc
jbe
mov
and
lds
jg
and
stos
jbe
or
xchg
insb
xchg
pop
adc
mov
push
imul
loop
pusha
stc
testb
push
mov
xchg
mov
popf
push
cmp
jae
push
in
popa
jbe
jmp
jbe
xorl
push
and
jle
f2xm1
and
pusha
add
aad
or
adc
and
or
sbb
add
mov
xchg
nop
out
sub
jmp
leave
je
dec
aad
pusha
test
xchg
fldenv
push
add
push
mov
lret
mov
cmp
mov
or
les
or
stos
testb
aas
lcall
dec
jae
mov
inc
jmp
sbb
into
inc
in
in
enter
push
sub
setle
shll
cs
push
push
or
gs
repz
scas
adc
sub
fcomi
stc
outsb
int
jnp
outsl
mov
in
adc
lock
fstpl
xchg
cmc
hlt
sarl
in
pop
fldz
mov
loope
push
leave
cmpsl
jge
mov
pop
mov
dec
sub
sub
addr16
and
iret
je
adc
adc
test
xor
lods
dec
ss
add
cmpsl
adc
test
inc
lret
into
cmp
push
cwtl
lret
cmp
mov
mov
mov
fnstsw
lahf
rcl
icebp
out
out
xor
pop
inc
std
sahf
imul
inc
shll
push
xor
jecxz
adc
int3
push
not
cmp
mulb
xor
sbb
aas
push
jbe
mov
or
aas
mov
js
addb
sub
shl
ss
addr16
cmpsl
addb
cltd
mov
push
pop
push
cmp
in
mov
jl
test
mov
enter
mov
rcll
sub
pop
mov
cmovg
and
lret
imul
addr16
and
inc
cmp
adc
add
pop
mov
pop
pop
mov
xchg
subb
jge
push
sub
loopne
imul
enter
loopne
lret
negl
cmp
cmc
inc
xchg
fistl
mov
mov
jg
pop
cmp
pop
inc
cmp
stos
repz
adc
shrl
or
xchg
jbe
pop
jne
cmpsb
push
fnstsw
stos
call
das
sbb
roll
cmp
mov
ret
test
or
fnstcw
outsl
adc
loop
cltd
mov
les
mov
icebp
cltd
int
cltd
daa
mov
push
cli
lcall
mov
cmp
ja
mov
scas
bound
and
aas
sbb
sbb
jo
outsb
decb
ljmp
mov
inc
push
int3
mov
jbe
adc
xchg
mov
stos
cmp
rcr
daa
jo
push
sbb
sbb
ret
scas
inc
mov
and
adc
push
scas
aad
out
stc
daa
mov
insb
mov
add
testl
adc
mov
addl
imul
sbb
adc
pop
nopl
mov
aaa
pusha
cmpsb
jmp
lcall
pop
adc
sub
push
push
or
xchg
add
or
jp
insb
pop
inc
hlt
int
push
clc
dec
loopne
fdiv
mov
sbb
loope
lcall
lods
sbb
cmp
add
enter
popa
out
ret
jns
sub
aad
cmp
xchg
sbb
mov
lock
and
xor
pop
mov
lods
cwtl
push
xor
adc
cmp
sbb
out
gs
leave
lock
jg
dec
push
add
mov
mov
jo
pop
pusha
sub
push
jmp
fimull
subb
imul
inc
and
add
sub
adc
push
inc
xor
outsl
cmpsl
mov
mov
ss
or
pop
rorl
inc
call
movsl
inc
aaa
lret
jg
mov
imul
sub
adc
mov
jecxz
inc
lock
in
lahf
jns
add
addb
negb
xor
adc
mov
lods
sahf
ja
out
loop
mov
push
push
add
xchg
sbb
push
fimull
in
nop
and
push
aaa
insl
jae
ds
in
cmp
sti
mov
xchg
xor
mov
outsb
add
pop
std
inc
add
cs
jl
sbb
sbb
cmp
jns
scas
mov
pop
out
sbb
shrb
push
xchg
daa
pop
dec
cld
or
in
pop
call
and
into
test
imul
pop
stos
lcall
cmpsb
xor
sbb
negl
rcrl
loop
hlt
mov
rorb
aaa
mov
jge
xor
in
push
test
mov
int3
xor
mov
mov
fdivrl
jg
mov
lock
in
test
dec
sub
fmuls
pop
loop
shrl
mov
or
sub
or
ljmp
test
push
push
and
sbb
out
imul
fdivr
test
lds
repz
clc
faddl
loop
mov
sub
xchg
adc
popf
jne
dec
push
loope
and
dec
mov
ror
bound
daa
fucomi
in
ficompl
fisubs
outsl
cld
jbe
jecxz
ret
xchg
cmp
sub
inc
and
outsl
lahf
insl
dec
movsl
xchg
es
notb
loope
mov
lods
and
fwait
int3
test
pusha
add
sti
in
aam
cwtl
sub
stos
and
cli
jbe
fcompl
jecxz
jo
inc
and
ret
xor
sbb
negb
repz
inc
cwtl
lret
cmp
push
je
dec
shl
imul
shrl
call
loopne
stos
test
movsb
cmc
cwtl
jl
jle
xchg
jbe
jns
bnd
push
and
jb
xor
inc
adc
add
rorl
loop
and
aad
daa
out
adc
repnz
sub
repnz
shll
push
mov
push
loopne
add
push
push
or
add
outsb
loope
aaa
hlt
das
mov
push
dec
or
lahf
scas
mov
in
test
das
adc
pusha
iret
push
add
dec
mov
sub
bound
ss
leave
push
xchg
pop
lods
mov
or
lods
cmpl
add
and
sbb
fwait
pop
out
mov
cld
jge
xchg
fcoms
sahf
bound
lds
pop
es
ret
dec
data16
cltd
dec
inc
fsub
push
dec
or
add
aaa
or
dec
mov
call
sbb
icebp
fcmovu
inc
cmpsl
push
movsl
lods
inc
sbb
push
sti
xchg
ss
push
lock
inc
dec
mov
mov
inc
sub
xchg
stos
call
inc
mov
push
in
or
pop
sub
repz
sub
xchg
push
jp
mov
push
repz
loopne
push
push
push
lret
movsb
jns
mov
mov
mov
xlat
xor
mov
pop
mov
loopne
sbb
sti
xlat
icebp
aad
xor
adc
jmp
inc
push
cmp
and
push
mov
outsb
push
into
jno
sarl
cwtl
das
xchg
rclb
ret
fisttpll
je
js
inc
adc
push
cmpb
int3
pop
js
inc
mov
pop
out
or
adc
sbb
mov
mov
fcoml
sti
add
inc
hlt
mov
push
int3
mov
sub
stos
mov
int
sub
test
in
or
jecxz
jae
xor
push
jmp
pusha
lock
imul
or
enter
or
bound
pop
iret
push
cli
fistpll
mov
mov
addr16
mov
popa
out
iret
push
leave
fiadds
std
sbb
dec
cwtl
rcl
orb
loopne
fdivrs
mov
cli
addb
stc
add
sbb
loopne
pop
inc
aas
adc
repz
pop
push
xchg
addr16
sub
sbb
iret
movsl
inc
leave
loope
pop
sbb
icebp
scas
lods
push
sub
stos
sub
push
adc
outsl
cmp
dec
cmpsb
dec
out
dec
and
mov
stc
arpl
mov
insb
push
js
xchg
dec
mov
push
and
adc
repnz
stc
shl
jo
add
ret
mov
mov
adc
outsl
jg
cmpl
push
or
add
mov
mov
sub
sbb
inc
cltd
arpl
xchg
dec
pop
gs
loop
sbb
sti
sahf
hlt
or
aaa
mov
orb
ror
mov
xchg
popa
mov
ret
aam
sbb
inc
adc
sub
jo
xchg
aad
add
shrb
inc
push
sub
pusha
pusha
or
or
adc
pop
adc
adc
mov
repnz
pop
sub
mov
lret
jg
add
sbb
pop
sub
inc
adc
inc
mov
repz
mov
aad
aas
inc
xchg
pop
insb
lock
add
adc
loope
shll
ficompl
adc
push
and
mov
lahf
inc
es
push
sub
ds
mov
jmp
or
popa
jns
fsubp
aam
push
dec
cmp
mov
jecxz
repz
movsb
data16
das
addr16
ret
lea
jmp
add
lahf
push
push
cmp
and
adc
adc
popa
and
cmpl
xchg
scas
cli
or
sub
sub
mov
lock
stc
xor
nop
and
mov
mov
cli
lcall
fistl
imul
test
adc
test
adc
or
cmp
out
in
ret
push
cmp
jmp
enter
jecxz
jp
gs
push
imul
movsl
push
mov
jno
and
fcomps
mov
fs
mov
and
dec
into
jge
shlb
and
repz
mov
xchg
pusha
cmp
pop
jne
mov
xor
jae
sahf
mov
push
ss
out
nop
std
mov
lret
inc
xchg
push
or
jmp
mov
push
inc
jp
adc
cmp
stos
or
xlat
cli
adc
push
mov
dec
sarl
stc
inc
add
stc
iret
lods
mov
stos
inc
or
sbbl
pop
das
sbb
std
sub
add
stos
and
mull
jb
data16
adc
scas
cmpsb
shll
sub
es
jl
insl
orb
cs
aam
dec
jb
xchg
sub
pop
icebp
lret
push
lret
test
push
add
mov
imul
stos
mov
in
lods
cwtl
mov
sub
iret
stc
xor
insl
icebp
shrl
or
jno
xor
adc
pop
fstpt
add
push
mov
adc
sub
dec
lods
xchg
ljmp
adc
xchg
pop
sub
in
mov
leave
notb
xchg
mov
pop
inc
negb
jb
and
mov
pusha
fcomps
popa
into
mov
adc
inc
pop
addr16
mov
xlat
fidivrs
push
mov
mov
xchg
out
mov
xor
insb
loope
hlt
sub
ret
cli
inc
adc
or
pop
call
xchg
xor
fnstenv
push
push
push
popa
add
jmp
addr16
fldenv
subl
cltd
incl
mov
jbe
xchg
mov
rorl
push
icebp
fiaddl
insl
testb
mov
arpl
into
xor
icebp
push
xchg
push
mov
movsl
adc
lret
lahf
lea
mov
xchg
into
pop
adc
jl
dec
fldl
pusha
popa
lea
in
lret
xor
xor
js
pop
fwait
sub
mov
out
iret
cli
and
cmpsb
out
or
fwait
les
push
add
lret
loope
sub
dec
pop
push
nop
add
out
pop
in
ljmp
xchg
xchg
adc
push
xor
popf
mov
test
jno
xor
adc
sbb
cmpsl
test
pop
jno
mov
test
inc
mov
jge,pt
rcl
dec
inc
adc
adc
cmp
vunpcklps
loope
push
es
lahf
cmpsl
or
dec
add
xchg
out
or
xorb
jo
jg
add
ficompl
popf
fldl
shrd
mov
stos
outsb
jg
mov
mov
or
xor
mov
call
jo
adc
pop
mov
test
mov
stc
xor
test
push
ss
jnp
mov
in
loop
fldl
repnz
xchg
mov
xchg
pop
xorb
and
fs
sbb
dec
pop
jno
insb
mov
jne
out
sub
add
notb
into
cmc
or
push
aam
push
fisubrs
jne
fnstsw
lods
mov
rol
popf
leave
mulb
xchg
add
xor
pop
sahf
iret
into
xchg
mov
adc
push
adc
rep
inc
incb
shr
dec
inc
aas
ss
btr
pop
cmpsb
jge
pop
push
orl
adc
sbb
cld
inc
ret
cmp
pusha
repz
popa
xchg
idivb
jmp
push
or
subl
push
dec
xchg
loop
inc
mov
loopne
les
or
sub
fistpl
mov
cmp
aad
jg
pop
adc
cwtl
jb
fwait
lcall
ss
andb
jae
inc
xorb
inc
scas
std
int3
xchg
lods
in
test
stc
pop
sbb
jnp
push
mov
lahf
sub
icebp
xor
inc
stc
movb
push
test
mov
call
shll
mov
dec
cli
pusha
addb
les
jns
outsl
mov
sub
push
pop
cmp
les
jb
add
push
clc
mov
sarb
xchg
cmp
sbb
fs
repz
push
inc
cltd
stos
mov
insl
aaa
scas
mov
push
lds
rclb
cwtl
push
xchg
xchg
cld
add
cmp
inc
les
mov
adc
idivb
movsl
inc
lret
dec
dec
lds
sub
jle
repnz
cmpsb
out
mov
fisttpll
pusha
mov
and
sub
arpl
sahf
movsl
lods
mov
push
ret
or
add
jmp
shl
sbb
sub
jg
sub
jle
movsb
xchg
lds
out
mov
sbb
loope
or
sbb
push
jne
dec
pop
imul
jbe
mov
cld
or
sbb
dec
sbb
rcrb
fs
int3
movsb
inc
jg
mov
cmp
sahf
test
jle
testl
jne
dec
xchg
cmpsb
int3
fildll
pusha
or
gs
mov
outsl
xor
leave
sub
mov
mov
push
pop
xorl
loopne
imul
adc
push
xorb
xchg
movsb
dec
xchg
add
gs
outsl
pusha
inc
push
scas
shrl
out
sub
mov
pop
mov
js
dec
mov
or
es
sub
or
dec
push
insl
jb
or
xchg
arpl
lret
movsb
mov
cmp
scas
mov
dec
stos
cmp
add
pusha
in
mov
pop
pop
lret
cmpsb
repz
das
add
adc
dec
fisubs
out
int
xchg
ret
mov
push
mov
das
mov
mov
nop
sbb
push
sbb
mov
inc
les
sbb
dec
mov
in
sub
jmp
aaa
adc
pop
adc
sbb
int3
fisttpll
mov
insb
stc
dec
sbb
ja
inc
scas
pop
call
mov
test
or
imul
in
pop
jle
loope
roll
cwtl
loopne
sbb
mov
test
or
es
mov
mov
test
cltd
push
xchg
mov
clc
je
pop
mov
lahf
sub
cli
pop
jno
not
xchg
shll
sub
jns
leave
lahf
or
out
xchg
push
lods
in
sub
inc
add
xchg
test
idivl
adc
push
pop
inc
xchg
sub
adcl
add
jl
rcrl
lea
shlb
sarl
mov
fistpll
jl
xchg
xchg
gs
xchg
push
inc
push
adcl
add
jnp
ret
je
dec
outsl
addr16
subb
ds
pushf
pop
lods
xchg
fs
int3
das
in
xor
or
mov
jl
popa
jns
mov
imul
js
adc
sbbb
mov
mov
push
cmp
ds
inc
nop
arpl
imul
fadds
push
orl
xchg
ficompl
sbb
std
and
adc
sti
mov
outsb
lods
mov
dec
mov
pop
fucomip
test
insb
adc
loopne
xor
pop
jl
ret
pusha
loope
cmp
pop
mov
adc
jmp
movsb
shlb
sti
xor
xabort
add
xchg
cmp
push
mov
push
or
aam
sub
ss
inc
leave
fsubl
lods
adc
scas
cmp
pop
js
cld
pop
mov
jbe
jl
imul
fwait
mov
or
inc
jg
jge
mov
sub
jecxz
aad
fimull
xor
mov
inc
mov
out
cmp
push
push
xchg
mov
movsl
scas
iret
add
in
dec
dec
and
imul
repz
mov
popa
outsl
lcall
xor
xchg
fidivs
cmpsb
sbb
call
dec
jae
data16
es
xor
nopl
dec
push
xchg
insb
inc
es
es
lret
bound
jle
pop
arpl
loopne
adc
leave
xor
adc
sub
addr16
push
sbb
sbb
push
xor
ljmp
imul
dec
cmp
movsb
int3
stc
iret
test
dec
jb
jle
out
push
mov
sbb
mov
pop
icebp
or
lock
adc
fs
mov
idivl
inc
inc
sub
and
cltd
mov
popa
shlb
jo
test
fcom
push
stos
std
mov
mov
mov
scas
jae
sbb
fwait
push
and
mov
pop
filds
in
push
test
xlat
xchg
into
pop
fs
mov
and
inc
push
lret
mov
mov
sbb
jge
or
xor
repnz
adc
add
ds
xor
fstpt
mov
jo
bound
movsl
sub
test
shl
xor
adc
xchg
lods
mov
xchg
jmp
test
stos
fisubl
mov
jae
scas
mov
xchg
pop
fisubl
or
mov
add
inc
inc
cmp
ficoml
pop
mov
pop
xchg
loop,pn
sub
sub
mov
in
or
fadds
insb
mov
loopne
in
mov
jo
add
xlat
cmpb
dec
leave
dec
xor
jo
and
sbb
xchg
xorl
js
lret
arpl
mov
xchg
xchg
xor
ret
test
lods
stos
push
xchg
xchg
mov
jb
push
xchg
pop
push
in
add
mov
push
adc
scas
cmpsl
inc
mov
or
sbb
punpckhdq
enter
gs
shrl
icebp
shrb
sahf
imul
pop
rcl
jno
scas
push
pop
xchg
xchg
adc
inc
ret
adc
jge
pop
adc
lods
std
jno
and
push
iret
mov
sbb
xlat
repz
pop
inc
push
loopne
mov
out
jecxz
jl
outsb
cmp
addr16
fistl
loop
dec
ret
clc
pushf
arpl
inc
imul
pop
out
lods
and
cmpsl
jle
sbb
sbb
sbb
xorb
xor
mov
xchg
push
mov
aam
cmpl
jo
and
push
leave
inc
xlat
les
mov
mov
fwait
xor
or
leave
leave
jbe
pop
sub
cltd
push
add
adc
arpl
jae
mov
xchg
rcrb
hlt
dec
mov
push
dec
jnp
mov
or
sbb
sub
adc
sbb
sub
lods
cwtl
sub
mov
pop
cmp
jl
jae
icebp
xor
in
push
jo
pop
mov
pop
addr16
inc
fstp
addb
into
daa
jg
andb
repnz
mov
scas
sub
push
push
rclb
fdivs
out
xor
jbe
mov
push
rdrand
mov
in
mov
cmpsb
xorb
dec
in
xor
xchg
rorl
mov
jp
cmp
and
repz
cltd
cmp
imul
jp
pop
stos
jmp
and
add
insb
cwtl
mov
inc
test
dec
push
fdiv
rolb
pop
sub
push
adc
pavgb
push
xchg
and
inc
inc
bound
aaa
add
addr16
test
and
or
cmp
xchg
mov
add
pop
ljmp
mov
add
mov
push
or
cmp
adc
xchg
cmp
or
sahf
pop
sbb
mov
sub
out
scas
fs
addr16
movsb
dec
ret
fdivs
outsb
lret
hlt
aas
popf
mov
dec
xorb
insl
and
loop
adc
mov
lds
xor
cmc
xor
dec
fwait
adc
or
sub
xchg
mov
jo
mov
mov
dec
pop
mov
sub
loop
and
xchg
aaa
sub
xchg
and
mov
inc
jecxz
inc
mov
testl
loop
cmp
ficompl
je
sarl
sbb
xor
out
or
add
cmp
mov
pop
dec
mov
jo
aad
inc
cmp
aaa
pop
add
dec
mov
inc
mov
cmpsl
lret
push
jne
push
lea
dec
or
aaa
bound
cltd
push
push
mov
sbb
hlt
pop
push
and
lock
fucomi
jge
cs
sub
push
xchg
jmp
sarl
or
les
test
pushl
xlat
xchg
roll
push
xchg
out
xchg
mov
clc
sar
fiaddl
mov
jmp
dec
inc
imul
lea
push
hlt
fwait
mov
dec
jnp
imul
mov
dec
xchg
enter
icebp
sbb
pop
xorl
pop
sub
fstl
jle
or
adc
pop
dec
xchg
inc
scas
int
inc
xlat
mov
inc
cltd
adc
daa
mov
push
mov
inc
pop
fsubr
into
call
cmp
orb
mov
mov
inc
mov
shll
xchg
push
pop
lods
test
sub
repz
or
or
xor
lock
cmp
clc
subb
test
rorb
sub
int3
adc
test
js
push
subb
pop
stos
sub
push
add
jbe,pt
out
xchg
push
jnp
xlat
inc
lods
fwait
and
xlat
push
push
ja
fcoml
xlat
jnp
mov
pop
cmp
mov
test
xor
mov
sbb
mov
push
pop
jp
push
push
mov
jno
push
test
out
or
jns
mov
stc
fnstcw
mov
into
xorb
pop
sub
dec
dec
in
aam
aam
cmp
fidivs
jno
xor
mov
cmp
dec
mov
fdiv
mov
je
outsl
xor
sub
mov
std
and
xchg
gs
dec
mov
mov
scas
aam
mov
int
pop
pop
and
ljmp
sbbl
repnz
push
jecxz
xlat
ja
mov
push
int
or
outsl
push
jb
dec
inc
push
out
sbbl
mov
out
je
clc
mov
and
lcall
insb
rol
and
cmpsb
test
add
push
dec
aaa
call
sub
jl
test
xor
sbb
gs
sbb
repnz
dec
leave
mov
nop
inc
push
jle
cmp
adc
loopne
adc
or
xchg
cwtl
stos
mov
jecxz
jns
or
mov
fisttpll
adc
mov
sbb
ficompl
xchg
cld
mov
push
cmp
mov
js
shll
jg
cmp
rorl
mov
js
enter
dec
jnp
hlt
jge
mov
sbb
scas
nop
loop
lret
and
dec
mov
aam
fstps
aam
stos
outsb
in
lods
dec
loop
int
xchg
and
out
or
shll
clc
in
lret
call
xchg
int3
dec
arpl
mov
insb
mov
test
ds
jo
mov
xchg
cmp
adc
repz
mov
rcr
mov
add
pushf
inc
ss
xor
inc
push
rcr
cmp
inc
cltd
jo
mov
push
push
int3
fmuls
sti
mov
mov
dec
mov
cmp
movsb
add
mov
test
jg
mov
cs
push
sub
push
lods
js
fidivl
xor
and
jno
out
and
and
scas
popf
fisubl
out
iret
dec
jle
je
decb
cmpsb
inc
jo
lods
sub
fnstenv
imul
push
int
add
inc
dec
and
or
in
lods
jle
push
loop
or
add
xchg
pop
mov
pop
test
test
sbb
and
enterw
cmp
xor
bound
jo
lods
sbb
add
fdivr
scas
jp
pop
inc
or
add
mov
or
out
pop
cli
hlt
mov
pusha
lret
repz
loop
insl
xlat
xor
lock
mov
sarb
mulb
xor
int3
les
and
xchg
xchg
or
jno
lret
cmp
movsl
lcall
int
and
add
mov
ret
jle
out
cld
jb
inc
mov
decb
xor
jmp
jo
ja
xor
push
into
fisttps
out
enter
mov
aam
sub
repnz
mov
inc
fs
jge
pop
lods
pop
clc
popf
stos
lea
ret
jg
movsl
mov
cmp
cld
add
inc
inc
mov
int
ret
stc
imul
fwait
sbb
mov
push
int
and
ds
jle
icebp
push
cmp
push
adc
sub
mov
movsl
sbb
in
sub
pop
jnp
int3
sub
lahf
jmp
sbb
arpl
pop
les
pop
push
loop
divb
lahf
pop
outsl
mov
sbb
xchg
insb
movsb
imul
xchg
rcl
andl
js
jg
insb
pop
fdivs
mov
das
mov
loopne
xor
pop
jno
push
ret
daa
sti
adc
aaa
jno
int3
xchg
adc
clc
pop
cmc
xor
mov
xchg
bound
lcall
lock
sub
pop
in
daa
jg
push
or
das
in
test
xchg
xchg
je
test
mov
or
pop
loopne
sbb
sub
sub
icebp
lods
rclb
or
out
orl
imulb
pop
movw
out
pusha
popa
add
in
fstpl
cltd
addl
or
jnp
imul
sbb
sbbb
push
inc
jae
rclb
stc
pushf
push
pop
xor
fsub
pop
and
je
push
adcb
jo
mov
pop
lret
mov
inc
jecxz
sbb
iret
insb
insb
pop
cmp
repz
out
and
xchg
bound
mov
loope
dec
sbb
movsb
xor
lods
pop
sub
add
in
xchg
cmc
in
inc
test
mulb
les
jb
push
notl
test
sub
gs
sti
and
or
pop
in
daa
movsl
int3
insb
jle
xor
cmpsl
mov
mov
push
fdivrs
int3
sub
out
xor
aas
cmp
pushf
test
or
mov
add
or
sbb
jmp
or
add
cmpsl
arpl
mov
jae
aad
push
add
jge
pop
mov
adc
jnp
imul
bound
lret
scas
rorb
mov
in
mov
and
pop
xor
aam
fistps
ret
add
lea
hlt
orb
aam
ja
jne
fldenv
movsb
fldenv
out
and
outsb
pop
gs
ljmp
fstl
inc
scas
mov
movsl
js
xchg
add
add
and
popa
mov
stos
pushf
and
ljmp
shlb
into
stos
or
xor
or
imul
mov
cmc
iret
stc
inc
insb
jnp
das
fdivrl
push
jmp
mov
lcall
xor
push
push
cli
cwtl
jp
push
ss
aam
xchg
push
jnp
pop
aam
leave
sbb
adc
popf
inc
je
rol
jo
sar
test
cwtl
add
idivb
les
fs
cmc
add
dec
jle
aaa
push
lock
xchg
push
lcall
inc
scas
into
mov
mov
lods
aam
and
sbb
dec
push
xor
ljmpw
and
pop
pop
adc
bswap
pusha
xorl
in
iret
sub
fldt
popa
mov
bound
inc
loop
cmp
leave
mov
mov
insb
test
jnp
dec
loop
and
sub
int3
mov
mov
call
mov
add
sbb
pop
jo
xchg
sahf
mov
cwtl
ror
shlb
sbbb
cmp
or
stos
mov
jb
mov
adc
dec
add
push
sbb
inc
mov
push
inc
lds
gs
scas
jno
mov
or
cs
out
fsubp
jns
mov
inc
pop
cmc
push
push
into
loop
test
push
sbbl
scas
cmpsb
pop
cmp
ljmp
jl
scas
test
or
mov
lds
dec
inc
dec
add
or
push
mov
add
std
add
rclb
push
lret
ss
sbb
sub
mov
mov
or
mov
add
push
inc
loop
sbb
icebp
mov
jae
mov
pop
mov
decb
push
stos
push
sbb
adc
or
loope
xlat
sub
icebp
add
mov
ret
mov
lahf
lods
mov
cmc
jno
push
icebp
jecxz
gs
lret
sahf
rclb
orl
cmpl
movsb
xchg
daa
ror
push
hlt
jo
das
int3
scas
js
jnp
xchg
jns
sbb
leave
cmp
call
cli
hlt
sahf
scas
stos
jae
sti
push
adc
dec
jmp
stos
out
pop
adc
adc
jb
or
push
inc
test
sub
orl
and
and
leave
cmc
std
adc
pop
or
adc
outsb
jp
rcll
lods
and
out
mov
fs
and
lds
pop
inc
push
scas
test
pusha
or
mov
outsb
cmp
cmpb
arpl
cli
push
sub
push
xchg
mov
mov
dec
lock
mov
xchg
std
inc
cmp
js
test
dec
sub
enter
fiaddl
sahf
stos
pop
int3
and
xchg
xchg
mov
cmpsb
push
xor
rclb
and
mov
inc
clc
mov
cmp
bound
push
xor
xlat
movsl
sub
repnz
push
mov
pop
pop
inc
ficomps
aad
xchg
jl,pt
test
fs
aad
mov
push
pop
stc
out
clc
adc
imul
je
inc
popf
dec
fdivr
mov
sbb
in
imul
dec
jnp
jecxz
sbb
xor
dec
lds
int
cltd
or
jg
lahf
pushf
stos
popf
xchg
or
xor
out
mov
test
xor
dec
fldcw
jae
shrl
and
cmpsl
les
out
jge
fs
xchg
cmp
mov
mov
stos
or
lahf
mov
adc
out
pop
stc
fstpl
mov
pop
out
add
push
cs
push
sbb
int3
insb
aaa
adc
test
aaa
loopne
dec
pop
sub
test
lcall
push
jbe
movzwl
pop
and
clc
cld
push
insb
shll
out
incl
enter
and
fiaddl
rorl
cltd
lea
fisubrl
push
jle
add
mov
sahf
or
jae
mov
and
xor
inc
cmc
lea
rorb
ret
add
rcr
sbb
shrb
fmul
sbbb
loop
and
mov
cmp
inc
jp
cs
repnz
outsb
adc
pop
jnp
ss
pop
push
dec
stos
jno
lea
loope
mov
popf
out
adc
adc
xor
sub
push
xor
fidivs
inc
mov
xor
xchg
test
pop
xchg
clc
pop
sbb
clc
mov
mov
xchg
jno
faddl
mov
ret
mov
fnstsw
ljmp
repz
inc
push
push
pop
sbbl
inc
mov
sbb
mov
push
add
push
test
pop
icebp
mov
and
shll
icebp
aas
pop
add
mov
push
sbb
jb
push
sbb
sti
adc
or
jg
cld
pop
xchg
inc
je
adc
in
push
xorl
xchg
or
push
js
fisubrs
xor
test
ret
mov
mov
inc
jnp
cmc
imul
ljmp
lock
xor
dec
dec
test
cmp
leave
testl
inc
push
pop
inc
jnp
test
and
inc
cmp
sub
out
cmp
test
in
cmp
imul
pop
adc
into
mov
jnp
xor
pop
test
pushl
js
mull
je
in
aam
cmp
pushf
cmpsb
stos
iret
daa
adc
jmp
mov
rep
loop
fwait
mov
jnp
loopne
out
pop
pusha
stos
sub
in
hlt
cmpsb
push
iret
xchg
cli
adc
jb
mov
pop
mov
cmp
push
movsl
pop
xchg
cs
fdivs
int
lcall
loopne
sub
xchg
mov
adc
push
cmp
mov
sub
test
aas
push
idivb
xchg
das
sub
inc
push
cmp
push
push
mov
mov
mov
iret
xchg
aam
mov
dec
jo
pop
lods
or
mov
inc
cld
scas
sti
jb
mov
ss
and
pop
jne
sub
pop
adc
cmpsl
in
cmp
or
xchg
lds
mov
mov
in
or
cmc
into
addr16
bound
cmp
popl
sbb
sub
add
repnz
mov
gs
loope
mov
movsl
loopne
lcall
add
loope
cmp
testb
lods
pop
test
xor
dec
ljmp
roll
mov
pop
sbbb
jl
pushf
sbb
mov
lds
shl
push
pop
dec
mov
movsb
lea
scas
daa
sbb
pop
sbb
sahf
dec
push
adc
cli
mov
ret
jb
cltd
out
sbb
cmpl
inc
adc
stos
lret
adc
es
and
lret
in
push
dec
mov
std
mov
std
mov
das
and
loope
xchg
je
shrb
inc
loope
cli
inc
decl
push
jo
sub
jne
mov
hlt
pop
pop
jno
and
mov
scas
scas
cmp
jecxz
hlt
cmpsl
repz
xor
jmp
pop
mov
stos
or
add
push
xorb
xchg
cmpsl
rcrb
orl
in
xchg
ret
in
push
inc
rcrb
inc
es
sub
add
ss
lds
push
cld
sbb
out
push
cli
sub
cwtl
mov
pop
pop
and
xchg
ret
xchg
ret
ljmp
xchg
pop
xchg
mov
ret
andl
mov
and
aad
xchg
pushf
shll
dec
lea
pop
cld
addr16
and
add
adc
ss
adc
aas
adc
push
movsl
push
movsl
cmp
push
test
inc
das
test
xor
and
mov
cmp
pop
push
inc
fidivrl
cmp
testb
or
insl
jmp
xchg
rorb
and
hlt
inc
rorl
pusha
int3
add
das
xor
pop
rorl
jae
cmc
gs
ficomps
jne
push
pushl
movsb
pushf
inc
xchg
push
adc
sbb
ret
shll
cmp
dec
je
sbb
or
and
push
jmp
jno
cmpsb
imul
pop
fisubs
adc
loop
jno
sub
faddl
test
mov
aas
jge
test
mov
lret
push
adc
test
arpl
mov
sbb
mov
sub
and
add
aas
jge
mov
arpl
inc
jle
repz
call
in
movzwl
cwtl
repnz
mov
es
js
jno
inc
test
ret
test
pop
fucomi
jae
ja
push
inc
add
xchg
xlat
mov
or
fildll
xlat
pusha
adcl
sub
ficompl
jns
xchg
aad
inc
movsb
inc
adc
jp
jp
pop
mov
fcoms
inc
jns
mov
cmp
xchg
and
dec
cli
xorl
scas
arpl
imul
stos
add
es
js
cli
or
jno
inc
cmpsb
into
push
sub
or
test
jmp
mov
lret
sti
dec
xchg
iret
stos
inc
xor
inc
jge
movsb
inc
dec
jge
into
aas
cmp
sbb
or
xchg
or
test
mov
outsl
pusha
push
fadd
dec
inc
ret
shr
push
cmp
adc
test
xchg
in
inc
xor
test
mov
std
push
jge
dec
mov
sub
test
test
or
ficomps
jnp
jo
shrl
jnp
xlat
mov
lods
jns
test
mov
mov
test
sbb
jb
xor
in
nop
lock
or
roll
sbb
jg
xchg
jnp
sub
fcomip
jae
icebp
sahf
shl
in
mov
stc
jnp
pop
filds
xchg
scas
add
inc
sub
jb
cmp
cmc
mov
mov
jmp
ror
insb
adc
or
repz
je
or
lcall
ret
roll
mov
inc
jbe
cmp
fistl
movsl
mov
or
sbb
iret
popa
mov
push
cld
cld
ss
cmc
into
or
inc
mov
sbb
pop
mov
sbb
leave
out
jmp
xchg
adcb
adc
loop
dec
dec
mov
lods
mov
adc
cmp
sbb
int
lret
rclb
jle
popl
sbb
inc
imul
popf
stc
arpl
add
arpl
push
ss
mov
push
mov
dec
sub
pop
add
sbb
xchg
rcrl
pop
mov
aad
into
jbe
mov
xchg
out
sub
nop
and
ret
sbb
dec
in
es
rcrl
pop
aaa
inc
dec
lds
inc
adc
mov
fidivrl
dec
and
pop
cmc
xor
push
or
movsb
push
jg
sarb
scas
pop
push
lock
pop
xchg
inc
mov
nop
or
and
lods
imul
jge
pop
js
adc
push
scas
mov
pushf
push
mov
xchg
daa
add
or
daa
test
cmp
mov
push
inc
dec
jg
adc
ret
inc
adc
mov
fcmovnb
xchg
mov
pop
fcomi
test
adc
mov
and
out
sub
push
mov
bound
adc
pop
push
mov
ret
cmc
test
jg
stos
adc
xor
mov
fucom
sahf
dec
add
pop
mov
inc
enter
sbb
jnp
lea
inc
jl
aad
fwait
xor
addr16
pop
lods
sti
inc
lret
adc
pop
std
jl
pop
les
mov
xor
jmp
fimuls
inc
inc
push
mov
daa
lahf
jmp
inc
nop
repnz
lods
ds
mov
nop
cmp
jmp
add
push
fldcw
scas
mov
das
pop
xor
xor
js
mov
rorb
or
xchg
outsb
jbe
dec
xchg
fwait
cli
sub
shl
xor
xchg
jbe
lock
out
sub
mov
jne
into
xchg
and
mov
pop
cmp
fidivrl
add
gs
adc
jp
std
and
bound
sub
ljmp
scas
pop
insb
loopne
mov
mov
and
add
test
icebp
dec
push
xchg
in
loopne
out
out
fsubrs
idivl
xchg
pop
adc
sbb
mov
cmp
addr16
push
inc
mov
mov
and
pusha
gs
test
test
movsb
xor
pop
inc
test
jo
lea
movsb
outsl
pop
fldcw
pop
xchg
div
ret
out
mov
fdiv
enter
pop
mov
jl
jmp
inc
jno
lock
jmp
inc
lcall
dec
pop
out
popf
jp
subl
aaa
nop
mov
iret
lcall
jg
xchg
andnps
sahf
mov
ljmp
mov
mov
xchg
sub
psubusw
cmpl
xchg
lds
adcb
fs
sub
outsl
jno
shl
or
movsb
addr16
mov
sbb
jge
mov
aam
sub
pop
mov
vpshlw
and
pop
xor
insb
cwtl
xor
lods
sahf
daa
dec
jbe
int3
lret
sub
scas
sub
mov
adc
mov
xchg
inc
repz
pop
dec
imul
fstp
or
fistpll
sbb
mov
test
mov
in
imul
or
pop
popa
cmp
fimull
jmp
jg
xchg
rclw
dec
mov
scas
cmp
mov
push
mul
hlt
hlt
sbb
adc
mov
ds
rol
scas
xchg
test
decb
insl
ja
jmp
in
decl
lea
fs
fwait
sub
xor
repnz
loop
mov
out
sbb
std
mov
not
cmpsl
push
lds
inc
inc
dec
fld
xchg
jl
faddl
inc
jns
les
pusha
lock
cs
or
dec
loopne
test
push
lret
lcall
int3
add
daa
push
jns
pop
imul
dec
fbstp
xchg
mov
sbb
outsl
push
mov
mov
pushl
push
jl
leave
push
mov
mov
xor
pop
inc
movsl
dec
in
addb
xchg
and
out
mov
dec
dec
sti
sub
lock
rcrl
cmp
stos
jg
or
add
jb
sbb
mov
mov
orl
scas
mov
movsl
loopne
repnz
shrb
xchg
sbb
out
xchg
add
addr16
xchg
pop
pop
les
pop
movb
and
div
add
clc
pop
ljmp
pusha
cs
push
pmaxub
gs
inc
push
inc
dec
test
imul
icebp
dec
mov
jge
xchg
sub
xchg
enter
in
mov
lcall
dec
xor
icebp
mov
inc
xchg
and
test
push
or
xor
scas
outsl
mul
or
mov
lea
jge
pop
lret
daa
mov
xor
jecxz
xchg
in
pop
jl
cli
mov
add
dec
mov
cmp
lahf
adc
cmp
into
cmp
cmp
lds
imul
loop
dec
add
push
repnz
xchg
loopne
xor
mov
out
call
pop
jmp
test
or
outsb
mov
stos
mov
cli
push
insl
jg
jno
mov
mov
lahf
inc
je
or
fisttpll
enter
mov
or
mov
adc
insb
dec
push
jb
sub
fld
xchg
mov
dec
push
mov
mov
xor
mov
dec
rolb
mov
jmp
inc
stos
mov
popa
outsb
mov
pop
mov
icebp
jg
daa
call
sbb
pop
repz
adc
push
xchg
aad
jo
fld
push
and
inc
and
cwtl
out
outsb
loop
rcr
popa
add
cmp
es
cmpsl
repz
jp
jb
int3
xor
sahf
arpl
add
in
mov
push
sbb
sub
and
sbb
adc
jmp
push
inc
hlt
xchg
and
scas
jg
xchg
push
mov
sbb
pop
insb
add
and
mov
test
nop
ljmp
or
adc
movsl
mov
jle
shr
into
pop
mov
daa
or
andl
outsl
stc
xor
mov
push
sbb
push
ret
aad
mov
das
sar
cmp
sti
mov
mov
or
cmp
inc
fmuls
cwtl
push
mov
shlb
and
popf
add
imul
sub
mov
shl
ret
push
add
arpl
cmpsb
xchg
stc
cltd
mov
outsb
jge
sub
addr16
jne
aas
push
push
sbb
aam
mov
test
clc
or
je
mov
leave
jno
lret
sbb
gs
jp
in
mov
cmpsb
aaa
dec
mov
inc
aaa
cwtl
scas
imul
flds
sbb
add
and
cmc
xchg
icebp
sub
repz
sbb
sbb
sbb
add
mov
jg
jmp
sub
push
das
mov
xchg
imul
cmp
jecxz
cmc
inc
fxch
sti
mov
dec
or
mov
jp
ljmp
ret
and
fcmovu
notl
hlt
mov
stc
in
sub
lds
mov
jbe
push
add
xor
out
lods
jnp
add
das
sub
lret
stc
popa
inc
pop
xor
push
dec
pop
outsb
arpl
sub
das
and
mov
imul
int
in
pusha
addb
dec
sahf
cmp
bnd
dec
inc
repz
je
lods
inc
addr16
sbb
cmpsb
in
mov
sub
xchg
xchg
mov
mov
iret
je
lcall
sbb
icebp
repnz
mov
or
cmpsl
jb
hlt
scas
fdivr
mov
in
adc
mov
and
mov
cmp
imul
add
or
mov
xor
out
enter
aaa
mov
cwtl
and
mov
push
sub
bound
cmp
ja
cwtl
mov
inc
out
in
sbbb
ja
jp
pop
ljmp
cwtl
mov
sarl
sbb
sub
test
cld
sbb
je
sub
mov
pop
sti
jecxz
imul
mov
push
jne
outsb
aam
fisubrl
arpl
repnz
jb
imul
lret
jo
lock
jmp
sarl
sarb
sbbl
mov
or
cmp
sub
xor
loop
in
push
push
push
insl
pop
sahf
and
sub
xchg
idivl
jno
gs
scas
pushf
jmp
mov
dec
shll
hlt
mov
cmp
pop
stc
mov
add
out
xchg
xor
pop
into
inc
ja
and
xchg
loopne
or
das
arpl
fcmovne
pop
in
mov
incl
sub
mov
xchg
fs
jg
cmp
leave
dec
adc
mov
aam
mulb
rcrb
sbbb
jp
xchg
cmp
ljmp
or
movsl
or
mov
je
loop
scas
jnp
cmp
dec
mov
adc
negl
xchg
pop
sbbl
xor
fisubl
outsb
fstl
lock
add
cli
cmpsl
jecxz
lahf
mov
inc
push
lahf
mov
test
test
ljmp
in
dec
lahf
dec
push
fcos
add
mov
mov
mov
jb
inc
and
gs
dec
rcrl
adc
add
push
iret
push
pushf
imul
int
push
rcrb
insb
cmc
cmpb
push
insl
leave
dec
popw
fnstcw
jle
pop
push
push
fildl
out
mov
sub
les
in
aas
push
mov
insl
fdivrs
rol
jg
mov
mov
scas
and
lock
xchg
enter
ret
test
xchg
test
sbb
mov
clc
pop
fsubs
mov
into
pop
mov
ljmp
ljmp
add
bound
movsl
shlb
jb
pusha
cmp
xchg
adc
test
xor
lret
lret
aas
rorb
movsl
dec
fs
cmpsb
sbb
mov
ja
dec
dec
lods
pop
inc
aam
mov
adc
dec
jo
stc
ss
push
inc
arpl
je
pop
push
push
or
inc
push
daa
sub
or
cmpsb
int
xor
mov
pop
leave
insb
or
fcmovnb
dec
mov
inc
push
xlat
outsl
xchg
leave
cwtl
in
fadds
inc
inc
call
jae
and
push
js
adc
inc
and
mov
div
jae
sub
push
loop
mov
sbb
xorb
xchg
aaa
int3
sti
pusha
sbb
out
sub
sbb
mov
in
push
sarb
in
cmp
cmpsl
adc
and
insl
and
or
xchg
add
mov
fmul
push
pop
xor
js
stc
jecxz
xor
in
push
xor
adc
xlat
pop
add
subl
in
lahf
jnp
lods
es
in
pop
pop
nop
fxch
pop
xor
imul
pop
mov
mov
push
inc
cld
fbstp
adc
jp
add
jo
mov
xchg
push
jns
cld
xchg
pop
insl
or
insl
xchg
xlat
mov
pop
inc
test
pop
jge
mov
das
lods
rorb
ret
jmp
xchg
xchg
mov
test
push
push
xchg
shlb
andl
lahf
mov
fwait
mov
push
mov
cltd
mov
push
push
pusha
stc
ljmp
xacquire
stos
cwtl
loop
xor
xor
enter
iret
push
insb
pop
cli
sti
pop
mov
adc
push
and
cmpsl
and
scas
out
adc
sub
es
inc
xor
into
sbb
sub
insl
outsb
sub
in
rcrb
cmp
and
pop
outsl
adc
test
xchg
jo
jg
xchg
iret
out
mov
push
dec
enter
sbb
mov
jg
and
idivl
inc
repnz
adc
testl
sub
hlt
push
pop
popf
outsl
sbb
pop
or
jmp
and
lock
lcall
test
test
push
dec
stc
adc
mov
out
pop
cwtl
mov
aam
inc
test
addr16
sbb
int3
dec
mov
ljmp
loopne
pop
cltd
adc
mov
sbb
testl
lea
xchg
pop
ror
jle
sbb
or
prefetch
or
mov
dec
inc
call
stc
push
hlt
ljmp
adc
gs
xor
xchg
jne
pop
aaa
inc
xor
or
pop
and
outsl
call
fwait
push
or
jge
aam
xchg
jno
in
fld
hlt
imul
pop
leave
mov
cmp
pop
out
repz
xchg
pop
jle
aam
imul
dec
pusha
cmp
lahf
sahf
push
cmp
lods
call
mov
rorb
mov
xor
test
xlat
xlat
mov
lahf
mov
xchg
into
mov
inc
icebp
pusha
shrb
or
stc
mov
inc
sbb
lock
cmc
clc
rcl
or
cmp
pop
sahf
ds
xchg
inc
and
adc
mov
popa
hlt
fucomip
mov
sub
aas
mov
mov
imul
add
mov
jle
psubd
mull
dec
int
pop
ljmp
inc
es
push
shll
cs
sub
mov
sti
das
sub
mov
je
sub
sub
shrb
sub
pop
mov
in
ss
pusha
imul
imul
loope
add
pop
mov
push
mov
testb
mov
cltd
cltd
sti
pop
scas
mov
ljmp
sbb
cmp
pop
inc
sub
pop
call
jle
sub
je
daa
adc
clc
out
pop
call
fsubr
sub
mov
pop
out
in
dec
jl
imul
jl
in
jmp
jne
adcb
xchg
lods
push
xchg
xchg
pop
dec
dec
xchg
ja
test
dec
xlat
test
outsl
and
push
adc
test
sbb
cmp
stos
lds
add
xchg
push
fmuls
aaa
test
sub
aad
xorb
cmp
xlat
out
aas
sbb
add
xchg
xchg
test
dec
loopne
cld
je
lret
aad
pop
jg
pusha
or
mov
ret
push
ja
xchg
jle
jmp
fisubl
fistl
dec
mov
aam
fdivs
jnp
out
jnp
sti
test
or
sub
pop
rolb
sbb
xchg
stc
in
dec
lods
nop
lret
lahf
mov
xor
jmp
push
sarl
fst
mov
fisubs
mov
mov
lock
dec
adc
pop
outsb
mov
dec
loopne
adc
push
movsb
fstpl
mov
or
inc
pop
sub
out
jg
fmull
xchg
jbe
mov
inc
cmp
scas
inc
and
and
jne
ficomps
stos
out
dec
movsl
lahf
jno
push
sbb
pop
xchg
cmpsb
lock
sahf
scas
mov
adc
push
push
jb
ss
push
mov
fildl
xchg
jmp
xchg
mov
js
fstpt
mov
push
jbe
out
lods
mov
add
lds
scas
push
mov
lock
and
or
adc
pop
movsb
xchg
dec
idiv
mov
rorb
popf
fisubs
js
into
lahf
shll
ss
sub
pop
rcrl
movsl
cmp
popf
cmc
rorb
push
test
pop
sub
jge
sbb
mov
sbb
inc
sub
je
shlb
jo
xor
push
or
mov
lret
sbb
xor
mov
mov
les
idivl
dec
mov
mov
es
mov
in
adc
enter
cmp
repnz
adcl
hlt
or
jmp
shlb
mov
push
dec
push
addb
fwait
rol
int
cmpsb
sub
push
mov
sti
fdivrl
int3
mov
dec
rep
xor
or
adc
das
pop
ja
lods
fcomip
sbb
jo
loopne
push
xchg
mov
adc
sbb
icebp
sub
loope
push
inc
in
das
mov
sbb
xor
push
insl
fldl
sub
test
xchg
dec
mov
cwtl
decl
adc
repnz
sbb
ja
add
cs
daa
jecxz
adc
fwait
add
sahf
cmp
xor
or
data16
in
mov
bound
sbb
sbb
sbb
fsubl
mov
cmpl
aad
dec
leave
pop
sub
sti
scas
xlat
fadds
mov
or
pop
mov
mov
inc
sub
xor
inc
jnp
outsb
mov
sub
insb
aad
adcl
cmp
xchg
repz
rcr
in
fnstenv
mov
dec
inc
ja
andb
es
call
jmp
inc
lret
sarb
stc
inc
fdivs
xchg
lods
cmp
lret
aad
pop
cmc
cs
lret
enter
mov
imul
insl
cltd
ljmp
cmc
pusha
jne
aam
mov
and
push
das
xor
cmpsb
or
pop
ficoms
sub
das
paddusw
xchg
mov
dec
jne
push
sub
sub
rcll
inc
xchg
loopne
cmp
adcb
sbb
cmc
inc
cmpsl
push
pushf
mov
pop
mov
mov
sub
call
rol
jle
js
jnp
scas
lahf
push
clc
loop
adc
iret
pop
mov
jle
ficoml
adc
lods
sub
aad
js
movsb
js
mov
ljmp
xchg
es
call
cmp
rol
mov
add
pop
mov
pop
cmc
dec
rolb
lret
adc
out
nop
jle,pt
pop
sahf
scas
nop
rcll
inc
repnz
aas
inc
sub
adc
fiaddl
push
les
jns
jge
and
int3
jb
push
cmpsl
fwait
mov
sahf
das
jbe
sar
dec
jle
aam
cmp
fistps
sub
mov
mov
cld
add
pop
push
push
insb
xchg
push
movsb
and
mov
das
fistpl
das
daa
rorl
sub
test
pop
call
mov
ret
cltd
push
sbb
int
into
inc
fwait
sub
jnp
sub
dec
shlb
rdpmc
lahf
cld
sbb
mov
jmp
arpl
inc
and
filds
int
mov
or
adc
or
sti
dec
divb
js
ret
mov
jl
in
cmc
cmp
pop
push
add
ds
fdivrs
test
das
dec
imul
cmp
lock
adc
mov
add
adc
out
sahf
movsl
and
and
mov
dec
push
aad
decl
daa
sahf
fisttpl
xchg
adc
jne
mov
mov
xchg
repnz
pop
aam
push
or
sbb
mov
xor
rclb
fcmovnu
mov
or
pop
in
mov
jns
push
mov
inc
mov
insb
xchg
mov
cmp
add
xchg
inc
add
inc
rcl
push
scas
into
push
pop
add
add
bound
lock
and
mov
or
inc
fcomi
pop
and
mov
sbb
jge
jbe
or
jns
cli
ss
sbb
fsubs
int3
lods
and
je
inc
or
adc
test
ja
mov
test
in
xor
arpl
into
mov
mov
aad
shlb
jno
in
aad
insl
jle
call
fmuls
cmpsb
jb
and
push
xchg
mov
pushf
aaa
jg
mov
orl
add
jl
sahf
pop
imul
fwait
mov
imull
pop
push
imul
ret
dec
sbb
xchg
rcll
sub
cmovno
add
lcall
jno
adc
mov
xchg
cmpsl
dec
jo
into
inc
cli
dec
popa
cmp
push
addr16
xchg
sti
test
es
xchg
and
jae
enter
mov
pop
and
fisttpll
xchg
negl
and
jecxz
fs
js
div
call
mov
jbe
xor
scas
ret
push
fimull
or
ds
inc
loopne
test
clc
xchg
daa
push
mov
insl
mov
dec
and
add
or
addr16
add
jbe
jmp
aam
mov
outsb
xchg
daa
xchg
aas
add
lcall
push
adc
daa
insl
mov
mov
leave
mov
dec
ljmp
adc
or
in
das
pop
pusha
nop
xor
mov
insb
imul
ja
lret
bound
movl
add
popa
push
sarl
and
adc
add
mov
loope
shlb
mov
jge
adc
mov
cmc
ja
inc
std
dec
sub
add
out
push
push
lcall
rclb
ret
or
xor
mov
jns
sbb
and
add
imul
sub
test
mov
dec
and
pop
pop
xchg
imul
fdivrl
lret
mov
or
lods
test
sub
test
or
pop
leave
xchg
pop
mov
dec
out
popa
movsl
lcall
ficompl
jns
rclb
rcrl
mov
popa
pop
mov
inc
ret
sti
adc
adc
or
fimuls
jg
out
cmp
push
and
push
aaa
pop
cwtl
mov
in
sbb
pop
dec
test
stos
fstl
mov
mov
outsl
aaa
ljmp
sbb
jmp
inc
in
addr16
iret
cld
lock
inc
sbb
xchg
sbb
bound
mov
mov
pop
jmp
loope
pop
inc
pop
and
jge
lahf
mov
xor
push
adc
mov
cmc
jle
clc
jns
je
mov
in
mov
loopne
aaa
daa
fildl
shrb
out
push
xor
bound
pop
pop
outsl
test
adc
mov
pushf
dec
jge
popa
pop
cld
dec
out
pop
adcl
cmp
mov
mov
jns
in
or
pop
jnp
adc
icebp
inc
shl
iret
cmc
xor
mov
aad
outsl
mov
and
jle
shl
cmp
aaa
push
lds
popa
ret
mov
mov
std
out
dec
dec
adc
pop
pop
inc
popl
xor
adc
vpshld
lret
inc
sahf
outsl
inc
jns
push
mov
lods
fsub
mov
mov
mov
xchg
lcall
jle
imul
lods
jne
loope
pop
mov
popa
popl
xchg
or
int3
les
mov
jge
add
iret
mov
or
rcll
jne
repnz
ss
mov
inc
outsb
orl
dec
shrl
mov
ja
jb
dec
inc
xchg
sarb
lret
and
fisubl
test
inc
pop
lret
cli
cmp
jmp
js
sbbb
cltd
mov
gs
pop
or
int
pop
sub
xchg
or
mov
cmp
mov
andb
sbb
lock
fdivl
dec
scas
out
mov
cmp
in
mov
pop
notl
xchg
push
adc
adc
aaa
push
hlt
rorl
icebp
push
clc
mov
pop
out
movsl
imul
scas
fidivl
mov
inc
loope
and
lods
or
add
cmpb
push
clc
push
add
or
mov
mov
dec
jmp
mov
or
jnp
pop
lret
popf
cmp
shrl
loopne
pop
popf
imul
iret
out
repnz
lea
adc
shll
repz
inc
xor
push
js
leave
fprem1
xchg
add
repnz
pop
pusha
xchg
movsl
jno
sub
cltd
fisubs
popf
loope
pop
popf
push
mov
fsubrs
jmp
inc
dec
cld
loop
test
mov
cmp
pop
mov
addl
add
sub
ss
cmp
adc
mov
jae
pop
enter
int3
jae
mulb
lock
lcall
sbb
pop
inc
pop
push
dec
pop
dec
adcb
lahf
pop
inc
dec
jle
cli
hlt
scas
std
lahf
dec
push
pop
out
or
mov
push
push
xchg
fnsave
xchg
pop
mov
test
movsl
xchg
sbb
dec
aas
cld
push
push
pop
mov
pop
test
xchg
xchg
jo
xchg
inc
mov
push
stc
fcomps
imul
ror
jb
xor
divl
lcall
stos
fcoml
push
mov
pushf
inc
pop
sbb
mov
and
dec
into
rorb
sub
add
ret
in
inc
sub
inc
movsb
dec
jmp
es
ret
outsb
dec
pop
jo
cltd
cmpsl
fstpt
cwtl
mov
push
push
and
dec
out
adc
incl
push
movsb
stos
xchg
adc
sub
jmp
lcall
add
inc
and
mov
adc
out
sti
xchg
iret
into
stos
push
scas
pop
call
cwtl
in
or
mov
jge
mov
xor
popa
loope
std
push
mov
packsswb
out
push
mov
or
in
cmp
ret
mov
dec
jno
rcll
cmp
xchg
mov
add
ss
shlb
les
mov
loopne
mov
push
lods
icebp
in
fwait
je
lds
outsl
daa
and
xchg
pop
in
mov
xor
add
bound
popf
adc
fwait
imul
stos
cltd
scas
xchg
lods
int3
ret
jge
rcl
dec
jp
sub
out
in
mov
inc
lods
repz
pop
popf
inc
push
cmp
jne
add
cmp
push
adc
test
mov
outsb
or
scas
mov
push
push
inc
in
add
mov
mov
fs
pop
inc
lock
in
jae
mov
int
sbb
jno
pushf
fcoms
movsb
xchg
divb
call
outsb
shlb
push
pop
das
add
adc
pop
aas
mov
into
out
cmp
sti
sub
out
jns
add
hlt
lds
push
mov
push
jecxz
lods
imul
mov
dec
shrb
ss
inc
pop
push
pop
cmp
xor
mov
in
push
mov
push
dec
and
dec
test
xor
gs
or
mov
loop
in
mov
test
dec
inc
lods
in
outsl
iret
push
xchg
imulb
outsb
aam
lds
push
pop
mov
pushf
cmpsl
into
jg
xor
jnp
sbb
jno
insl
mov
fsubrl
rcrb
enter
sub
scas
pop
aaa
add
jg
out
stos
xor
mov
rorl
push
test
xor
pop
aaa
add
pop
fsts
push
test
push
scas
xor
in
fisubrs
push
pop
repnz
shr
pusha
push
pop
icebp
push
push
mov
push
test
jne
orl
mov
jno
mov
xor
jne
jle
or
sbb
jge
and
fwait
pop
dec
and
idiv
dec
dec
repz
push
mov
cwtl
gs
xor
cld
sbb
inc
mov
adc
fdivrs
push
loop
pop
in
into
cld
cs
push
out
lea
cld
mov
in
jne
stc
inc
mov
test
scas
mov
sbb
cmp
arpl
jne
fbld
pop
cmpsl
add
adc
mulb
mov
outsb
dec
cmc
ljmp
loopne
sbb
int3
cmp
add
pop
insb
pop
push
cld
ret
cmp
jae
enter
add
sar
mov
les
cwtl
dec
inc
shl
enter
pmullw
add
or
xor
inc
out
xor
int3
push
mov
es
mov
push
push
rcrl
pop
cmp
pop
out
add
xor
inc
xchg
leave
sbb
mov
pop
xor
mov
les
sbb
inc
lds
xor
cwtl
int
dec
mov
imul
jp
jnp
adc
imul
inc
mov
jnp
lds
xor
fbld
fadd
std
sub
jp
and
imul
jp
shrb
mov
lds
std
xchg
push
jp
ret
lods
pop
mov
jmp
int
add
cmp
ljmp
push
cwtl
loop
mov
into
push
add
push
adcb
es
in
movsb
data16
sbb
or
testb
jo
cmc
mov
daa
outsb
and
push
sbb
xchg
push
mov
jo
jecxz
nop
sbb
arpl
js
mov
test
insl
dec
push
push
lret
rclb
fisubs
int3
andb
push
jl
sub
add
push
inc
dec
or
xchg
mov
lret
lcall
dec
inc
jmp
cmp
jge
inc
sbb
je
cmpsb
rorl
shll
push
and
push
test
mov
jp
jl
jae
in
pusha
cmc
enter
in
push
in
cmp
xchg
xorb
add
mov
cmpsb
xlat
cmp
add
pop
add
negl
fcompl
inc
or
mov
sarb
adc
sbb
out
loope
sahf
inc
pop
js
pop
lds
inc
scas
jmp
push
dec
adc
pop
adc
sub
pusha
cmp
lods
test
inc
inc
es
jge
call
adc
inc
faddl
cmc
into
fcmovb
repnz
in
iret
or
sub
push
inc
xchg
addr16
push
or
sub
and
inc
leave
stos
mov
xchg
gs
scas
cli
dec
jp
push
cmp
ljmp
in
add
inc
jge
push
jnp
jae
jno
lcall
sbb
out
ss
pop
hlt
pop
ret
mov
popa
psllq
imul
push
jle
jecxz
and
lods
adc
pop
or
into
pop
icebp
add
dec
cmpsb
pop
xchg
jno
jbe
outsl
shrb
ja
sbb
adc
negb
fs
cmpsb
test
add
in
mov
xor
shlb
fs
testb
mov
push
push
mov
cmp
pop
sub
add
pop
xor
test
jb
stc
test
addr16
add
push
lcall
lods
pushf
push
shl
sbb
mov
sub
jl
pusha
imul
push
popa
je
imul
xor
pop
ja
mov
ret
icebp
daa
pop
sbb
jae
adcb
xchg
imul
aas
mov
out
or
mov
mov
inc
scas
rclb
jg
jne
fwait
mov
lea
mov
mov
xlat
cmpsb
adc
testb
scas
xor
jmp
sbb
push
xor
inc
inc
xor
sarb
pop
or
loope
mov
loopne
jns
push
outsb
in
pop
ljmp
sbb
jb
pusha
add
ja
push
addb
insl
adc
mov
inc
push
ret
mov
sub
popa
mov
and
pusha
sub
push
jmp
insb
inc
scas
adc
dec
push
mov
mov
or
cmp
insb
lea
pop
adcb
les
fs
mov
addl
cltd
test
mov
mov
cwtl
stos
push
inc
ljmp
xorl
test
push
dec
mov
cmp
ret
icebp
data16
hlt
lock
adc
negb
push
cmp
cmp
push
test
push
iret
xor
outsl
mov
pop
pop
add
out
icebp
ds
pop
cmp
sbb
xchg
adc
mov
jo
adc
jno
mov
cmp
pop
imul
lcall
pop
jo
shrl
sbbl
sbb
mov
add
scas
mov
sbb
lahf
inc
fldenv
xor
iret
sbb
cmp
pusha
mov
sub
dec
pushf
sbb
dec
jl
jmp
movsb
das
fcompl
movl
cwtl
fstps
sbb
jmp
push
fs
inc
xor
push
adc
hlt
add
std
das
sub
mov
xor
das
inc
stos
or
clc
or
jo
bound
add
xor
gs
xor
jo
test
jp
pop
sub
mov
pop
mov
mov
gs
cmpsl
enter
sbb
in
nop
push
fadds
inc
cmp
imul
mov
jnp
mov
pop
xchg
mov
xchg
inc
enter
xchg
jae
pushf
jno
push
mov
mov
icebp
rorb
sbb
jl
loop
inc
movsb
mov
cmpb
call
in
add
mov
mov
push
mov
imul
fldl
push
mov
mov
xor
jmp
inc
mov
stos
ja
sarl
xor
movsl
icebp
jge
dec
cld
xor
xchg
and
fisubrl
cmp
inc
xor
insl
xor
sub
mov
xor
out
push
xchg
jb
ret
sti
push
adc
adcl
and
outsb
loop
push
or
push
mov
jge
outsl
sbb
aam
fsubl
pusha
lds
insl
out
inc
filds
outsl
sbb
daa
adc
fstps
insl
maskmovq
xchg
mov
add
xlat
mov
sbb
xchg
mov
int3
mov
and
mov
jae
loopne
enter
jecxz
xchg
scas
negb
and
cmp
mov
sti
add
movsb
mov
ret
mov
mov
cmp
mov
repnz
cmp
jns
mov
lret
or
and
fwait
jns
jp
cmpsl
scas
xchg
xor
sub
cli
cmp
pop
testb
pop
xlat
int3
mov
xor
sub
nop
je
xchg
test
pop
cltd
adc
cmpsl
ss
jne
xchg
add
lds
lock
jnp
les
daa
gs
je
mov
test
xor
cwtl
lods
jb
pop
and
test
push
adc
inc
add
enter
sbb
mov
dec
cld
lods
scas
mov
lret
jnp
int
repnz
cmp
cmp
cmp
repz
bound
xchg
jno
push
and
aas
mov
fadds
sub
xor
loope
push
push
daa
add
fcoml
mov
mov
push
xorl
mov
outsl
jecxz
int3
repz
and
jp
stos
fisttpll
ja
testl
mov
xor
xchg
pusha
dec
and
stos
pop
adc
xchg
sbb
cmp
out
test
cltd
in
push
sub
push
arpl
push
fisubl
or
ljmp
mov
insb
jg
mov
mov
sub
mov
in
xchg
ljmp
xchg
fisubl
pop
adc
rcrl
pop
add
and
xlat
pop
xchg
add
repnz
scas
pop
mov
rolb
call
iret
ja
mov
mov
sti
adcb
insb
sub
and
sbb
cwtl
mov
mov
les
ficomps
loopne
jae
clc
cmpl
push
inc
lods
jns
pop
aas
adc
bound
sti
xchg
adc
jbe
vmovdqu
gs
sub
and
in
mov
jmp
in
loope
pop
dec
inc
adc
dec
stc
bnd
xchg
and
cmp
adc
mov
outsb
repnz
in
repz
xchg
mov
cmc
dec
das
inc
pusha
lret
cld
pusha
fistpl
test
pop
or
insl
roll
pop
rcrb
mov
cmp
scas
in
jne
push
mov
jne
inc
jecxz
jb
pop
adc
inc
inc
jb
popa
mov
bound
mov
mov
xor
cmp
lods
add
test
call
xor
inc
pop
push
test
mov
pushf
dec
popf
xor
mov
push
fstpt
xchg
call
orb
and
icebp
mov
loope
nop
in
add
test
lret
lds
and
movsl
leave
movsl
aam
sub
push
mov
xor
mov
xchg
cli
dec
fdivrp
lahf
jae
pop
xchg
daa
mov
cmpsb
xor
lds
jne
repnz
lea
popl
xor
mov
loopne
or
or
sub
mov
or
popf
in
pop
and
mov
rcrl
fnsave
inc
mov
dec
add
fsubrl
out
mov
lahf
xorl
and
testb
adcl
fwait
outsb
std
rcrb
mov
inc
sbb
push
sub
cld
mov
or
cwtl
movsl
das
mov
arpl
xor
xchg
xor
cmp
jno
cmpb
mov
prefetcht2
jg
sti
mov
cmp
push
int3
addr16
mov
mov
mov
mov
dec
int3
inc
xorl
mov
sahf
sarb
pop
sbb
ja
cld
inc
lock
enter
icebp
rorb
ret
mov
int3
popa
pop
jb
jae
mov
ljmp
push
fisttpl
leave
shrb
sub
mov
sub
mov
or
shrb
push
in
lods
jno
or
cs
movl
xchg
mov
jmp
out
sub
sahf
insb
fwait
cmp
mov
xor
fwait
nop
jno
insb
lret
sbb
les
adc
andb
cltd
jnp
and
scas
fimuls
es
addr16
jmp
cmp
and
pop
pop
cs
loop
mov
cmp
into
mov
dec
dec
insb
iret
push
sahf
lea
int
cmp
or
cmc
aad
adc
sbb
out
pop
and
cs
jnp
loope
push
addb
lods
or
ljmp
inc
xchg
or
insl
incb
mov
cmp
jne
cmpb
aam
sbb
mov
sub
push
loop
cmp
call
adc
nop
stos
lea
ljmp
pop
cmpsl
int
stc
dec
push
adc
or
dec
lea
fwait
mov
rol
xchg
xor
test
fnsave
jp
lahf
sub
and
mov
cmpsb
and
lret
mov
pushf
adc
data16
fs
jnp
cmpsl
in
mov
xor
push
test
ljmp
leave
std
or
cmpsb
dec
sub
mov
lret
aas
mov
xchg
mov
daa
xor
xacquire
ja
aaa
in
lahf
mov
pop
pop
outsb
pop
pop
push
lret
pop
iret
sbb
lock
cmp
idivb
call
mov
push
push
inc
push
add
push
movsl
ss
int
inc
mov
fcomps
dec
sahf
jmp
mov
mov
andl
cmp
push
push
adc
xchg
sub
cmovle
aaa
push
dec
dec
or
les
jmp
cmp
xchg
fsubl
cmp
add
and
add
xchg
inc
cmp
in
xchg
mov
mov
xchg
or
lcall
jg
aam
mov
sbb
xchg
inc
pop
cmpxchg
adc
sub
adc
loopne
cmp
mov
call
xor
or
push
std
push
pop
les
sbb
fcomps
mov
bound
xor
frstor
mov
inc
dec
pop
mov
loope
scas
jbe
mov
adc
mov
adc
pop
outsl
call
jg
loopne
and
lret
cwtl
adc
gs
or
pop
inc
mov
mov
mov
aas
sub
xchg
aaa
push
fsubrs
jns
stos
xchg
xchg
cmp
xor
aad
xor
std
inc
es
mov
cmp
xor
lret
push
ficomps
mov
mov
mov
mov
pop
testl
ficoms
mov
ds
add
lods
out
push
fsubr
lahf
aam
sbb
push
sbb
cwtl
mov
xor
flds
or
popf
in
push
aad
stos
xchg
imul
repnz
clc
xchg
lcall
mul
and
ja
inc
imul
adc
mov
enter
and
pop
fdivs
ja
lods
inc
xor
cmc
jmp
insl
add
cli
add
outsb
fwait
int
xlat
nop
ficoml
mov
mov
mov
std
std
fsub
dec
mov
cmc
das
mov
jecxz
or
cli
sbb
outsl
push
cmpsl
fstl
shrb
xor
mov
dec
add
into
mov
int
cmpb
into
inc
ret
add
adc
in
jmp
inc
cmp
push
and
jns
shlb
test
and
out
dec
cmpb
sbb
xor
scas
sub
scas
hlt
sub
inc
or
jp
xchg
jmp
inc
imul
and
add
xor
push
aas
fcomps
inc
adc
lods
mov
test
sub
fldt
sbb
cli
cwtl
mov
sbb
cwtl
push
xor
mov
push
gs
xchg
sbb
pop
sub
xorb
mov
imul
imulb
daa
dec
adc
sub
dec
sub
push
xchg
xor
or
mov
addb
sub
shlb
es
mov
jl
cmp
call
add
sbbb
sbb
repnz
loope
out
inc
imul
adc
cli
int3
jns
xor
cs
push
push
xchg
and
in
jbe
push
gs
mov
pop
adc
sti
test
add
hlt
mov
and
clc
outsb
dec
mov
pop
aam
rclb
push
orb
and
iret
or
sti
faddl
mov
inc
jae
stc
ja
push
push
std
cmp
fwait
popf
andb
mov
loope
mov
xor
sub
or
push
into
ror
pop
inc
and
out
inc
push
aam
pop
scas
fmuls
add
mov
enter
sbb
mov
push
add
dec
sbb
cmp
dec
in
pushf
jl
pop
push
shrl
jns
lods
scas
sbbl
call
adc
lret
or
sbb
movb
mov
push
pusha
lcall
xor
push
fstl
fists
cs
jecxz
lods
add
jmp
pusha
xor
cmpsb
aad
cmp
mov
push
lds
jp
in
ljmp
cwtl
push
std
jg
mov
fdivrs
push
jb
iret
aaa
pop
sbb
int
add
or
dec
out
sub
es
dec
push
sbb
inc
dec
add
out
cld
out
add
gs
insl
jge
popa
bound
ljmp
icebp
dec
stos
mov
pop
mov
mov
shll
add
xchg
incl
jg
cs
mov
jecxz
push
pop
sbb
insl
gs
xchg
mov
outsb
cmc
repnz
pop
mov
out
hlt
mov
addr16
shr
aaa
popf
or
fmul
mov
in
and
cmp
les
rcl
sbb
rcll
push
sbb
jmp
pusha
jl
popa
pop
or
lahf
or
push
fmuls
and
adc
sahf
sub
mov
int
out
shlb
das
test
and
and
mov
sub
fwait
push
data16
jecxz
out
and
add
clc
scas
jb
jns
add
iret
bound
pop
stos
sbb
std
fsubr
ss
mov
test
fstl
sub
cli
lahf
shrb
or
xor
dec
and
sbb
ja
jmp
push
sub
inc
and
mov
xor
repz
repz
jecxz
mov
aas
push
inc
mov
mov
cmp
subb
cmpsl
test
dec
fstpt
pop
jbe
or
dec
mov
sub
sahf
cmpsl
insl
fstl
push
pop
mov
or
rolb
mov
pop
jl
xchg
dec
aaa
clc
fwait
jno
jb
pop
mov
lret
add
cmp
in
iret
xor
add
push
and
lods
pop
fs
mov
and
push
movsl
mov
push
sbbb
lods
mov
cltd
sbbl
cmp
dec
das
neg
enter
adc
xchg
mov
aad
add
movsl
dec
insb
into
movsb
daa
insb
mov
test
jge
out
cltd
pop
paddq
cmpsl
out
adc
test
push
filds
inc
mov
mov
adc
ret
and
mov
inc
movsb
mov
pop
pop
xor
xchg
xor
insb
sbb
push
xchg
imul
mov
jnp
gs
cwtl
aas
lahf
call
js
jo
enter
daa
dec
inc
shlb
int
xchg
popa
push
add
jno
js
add
add
lock
shll
lahf
fnstsw
mov
lods
jbe
or
mov
imul
in
push
gs
addb
or
leave
fistpl
leave
pop
xlat
jo
cmpb
inc
ror
dec
mov
test
or
cmp
adc
mov
jbe
cwtl
pop
lcall
sahf
or
jae
push
mov
xor
or
ret
pop
xchg
or
jbe
dec
cmp
mov
addl
mov
ds
popf
jp
mov
mov
out
mov
or
cmpsl
push
mov
xor
jg
outsl
addr16
mov
sbb
jmp
lret
int
and
xchg
inc
sbb
bound
lahf
and
rcl
cmpsb
out
pop
mov
loope
repz
mov
jns
push
dec
addr16
in
faddl
add
dec
cs
test
adc
pop
js
inc
ss
mov
sub
xor
jb
mov
shlb
jl
xor
das
fisubrs
mov
dec
mov
jns
ds
imul
push
xor
or
push
pop
call
inc
inc
aaa
and
fmull
mov
or
stc
adc
roll
cli
stos
add
mov
or
xor
rorb
adc
std
rorl
pop
and
addr16
repz
fsubp
push
loop
xor
mov
das
out
or
dec
push
jne
icebp
xor
dec
std
and
or
mov
mov
push
and
int3
stc
cmpb
pushf
pop
lock
iret
add
out
dec
jl
rcrb
mov
jmp
pop
mov
push
mov
push
test
mov
sti
sub
cld
cmp
xorl
lret
insb
mov
sub
dec
sbb
mov
and
idivl
or
sub
fnsave
pop
mov
xor
das
arpl
pmaddwd
inc
mov
add
jno
addb
cld
mov
jl
cmp
mov
iret
lahf
xor
jae
jbe
push
jnp
xchg
mov
lcall
ja
sub
pop
xor
cltd
mov
in
fisubrl
mov
pushf
mov
or
in
mov
mov
imul
xor
fs
pusha
add
push
jmp
dec
jg
inc
dec
xor
mov
ret
sub
ja
mov
hlt
mov
shl
int3
int3
mov
das
scas
es
arpl
repz
mov
add
inc
shll
cli
int3
dec
outsl
push
leave
mov
sbb
rcrl
shl
xor
scas
mov
xchg
xchg
or
xor
fwait
mov
xor
data16
icebp
jecxz
push
dec
subb
pop
idivl
int3
mov
jp
sahf
in
xlat
enter
jmp
mov
xchg
mov
ret
pop
dec
stos
inc
fnstsw
mov
out
lret
or
fdivr
ret
or
push
call
fs
fisubl
es
push
sbb
iret
add
push
js
idiv
repnz
cltd
dec
or
inc
pop
cmpsl
inc
dec
outsb
pop
dec
fs
adc
sahf
lea
dec
ret
in
outsl
aam
xchg
testb
movsb
arpl
jns
mov
xor
jae
scas
fs
dec
jg
push
cwtl
data16
cmc
fdivrl
out
dec
inc
les
pop
daa
mov
movzwl
shll
aaa
in
pop
mov
imul
adc
mov
mov
icebp
pop
adc
lret
ja
sbbl
lds
mull
mov
outsl
pop
test
call
cmp
jns
lcall
mov
cltd
and
lahf
sbb
loop
mov
sub
xchg
enter
dec
xchg
adc
movsl
fildll
and
int
cmp
push
xor
scas
fists
sbb
js
xor
push
push
mov
shlb
sub
movsl
xchg
arpl
push
fldenv
push
lods
jmp
xchg
adc
jne
lods
in
mov
jno
test
int
mov
out
cmpsl
sahf
arpl
jnp
mov
xchg
jno
fiadds
or
xor
xor
push
mov
or
cmp
lods
fbld
divps
dec
rcl
jge
mov
adc
sub
aas
cltd
dec
loope
cld
addb
inc
divl
movsl
pop
inc
cmp
aam
and
or
add
daa
enter
negb
push
mov
push
loop
mov
push
xchg
repnz
arpl
dec
out
jle
les
mov
leave
cld
imul
rep
movsl
push
and
adc
mov
call
test
mov
adc
pop
sbb
mov
stos
fists
aaa
bound
dec
outsl
push
mov
push
inc
imul
jo
sti
or
jmp
xchg
dec
imul
and
inc
addb
gs
sub
or
xor
adc
test
pop
cmp
bound
test
hlt
pop
dec
inc
stos
lods
jge
sahf
aad
adc
rcrl
std
dec
test
pushf
jno
push
fs
out
shlb
in
scas
dec
mov
push
std
mov
mov
js
or
outsl
mov
xor
nop
jmp
fcoml
in
ficoml
jl
das
testb
mov
mov
jp
das
stos
and
pop
pop
movsb
dec
adc
sti
dec
sbb
movsb
int3
insl
aaa
sub
jmp
xchg
addr16
xchg
mov
push
inc
mov
adc
cmpl
xchg
cmp
out
inc
adc
push
jnp
pop
jge
jno
outsb
rorl
lds
mov
pop
outsl
or
dec
jg
jne
adc
cmp
loopne
push
scas
pop
jge
adc
and
daa
pusha
pop
sub
sti
jl
cmp
leave
push
xor
je
hlt
and
mov
subb
or
inc
js
mov
in
sub
inc
cmp
mov
aaa
mov
dec
cli
jbe
lahf
arpl
xor
push
xchg
aas
popf
scas
sahf
add
inc
sub
lcall
and
daa
mov
js
fs
xchg
mov
dec
dec
or
mov
dec
sub
fmuls
ds
arpl
aaa
rcl
pop
bound
pop
pop
into
in
loop
hlt
push
fs
mov
pop
orb
in
jp
dec
ja
mov
or
inc
arpl
jl
mov
cmp
in
xchg
push
sahf
adc
lret
mov
ret
lret
fnstcw
jp
outsl
movsb
in
lds
sub
cld
in
pop
sub
push
orb
push
ja
push
jb
inc
cmp
fwait
or
movsb
hlt
fldt
pop
add
xor
mov
mov
add
cmc
inc
mov
gs
cli
inc
movsl
in
popf
push
mov
test
movsb
inc
or
sahf
loopne
pusha
add
push
enter
popf
js
repnz
xor
push
xchg
dec
push
lock
cmp
and
jecxz
mov
das
lods
fdivrs
mov
jg
out
sbb
jbe
push
dec
jne
push
scas
mov
loop
xchg
lods
pop
inc
mov
dec
mov
cmpsb
orb
dec
mov
add
and
sub
ficomps
or
xchg
jg
push
orb
movsb
lods
inc
insb
xor
addr16
stc
and
adc
mov
mov
lock
add
or
and
stos
shlb
fistpl
pop
loope
xlat
sub
loop
movntq
lea
jl
out
fcoms
es
int
icebp
call
cmp
lods
jne
in
mov
fsubrl
jp
add
shr
or
jns
leavew
pop
fldl
cmp
aas
addb
mov
xchg
cmpb
jnp
add
push
cmp
jp
addb
mov
das
aas
sub
sbbl
jmp
ret
inc
pop
sti
add
rep
push
jp
mov
pop
cmp
lods
mov
addr16
mov
dec
aad
bound
mov
add
xlat
and
fcomps
adc
into
scas
push
aas
sbb
outsb
icebp
mov
mov
dec
in
cltd
xlat
jle
sbb
fisubrs
or
ja
inc
xor
pop
or
int3
lcall
in
pop
mov
scas
fiadds
cmp
aaa
out
js
hlt
jne
into
test
sub
cmp
cmp
enter
fs
mov
sub
movsl
clc
cmpsb
std
or
jl
mov
data16
mov
and
test
lds
adc
jbe
push
clc
xchg
clc
inc
sub
inc
sub
jo
jbe
lahf
icebp
xlat
cmpl
iret
out
push
outsb
stc
xchg
leave
aad
test
sbb
lahf
push
pop
and
push
imul
push
add
bound
movsl
fs
push
sbb
aaa
popa
sub
inc
fnstcw
subb
push
sti
ja
jmp
jbe
rorl
iret
adc
sbb
lds
sbb
xchg
adc
testl
lret
iret
mov
jne
mov
inc
pop
aas
es
jnp
xor
addl
scas
mov
or
lods
push
jno
call
dec
jno
mov
push
sub
out
js
sub
dec
push
or
jae
sahf
push
push
xor
subb
cmp
jp
mov
bnd
cmpsl
sbb
aam
out
dec
lds
sbb
daa
pusha
sub
pop
popf
pop
push
loop
dec
leave
push
ret
aas
lock
fucomp
add
jbe
out
jecxz
and
fsubrl
gs
aam
cmp
shr
xor
loopne
lds
adc
and
ds
xor
mov
out
push
jle
movsb
ret
jl
pop
mov
sarb
sub
cmp
adcl
data16
lock
and
sub
out
inc
rorl
push
push
cmp
mulb
dec
xchg
adc
adc
inc
mov
sahf
mov
xchg
iret
xlat
pop
adc
movsl
ja
lret
push
or
mov
xlat
pop
add
lea
dec
mov
or
lea
mov
in
push
fcoms
or
xlat
or
cmpsl
in
lret
call
push
lods
adc
incl
pushf
inc
or
int
sahf
ret
mov
push
xor
pop
test
xor
pop
aaa
sbb
js
xor
and
jnp
decl
enter
loop
ret
and
xchg
out
adc
lea
aad
fwait
jge
sub
add
call
v4fnmaddps
ret
stos
in
push
rcl
inc
push
daa
add
mov
pop
add
loop
push
pushf
sbb
jmp
shll
sarl
mov
sbb
xlat
lods
push
bound
xchg
nop
pop
dec
sub
fbld
daa
dec
mov
ss
in
or
jae
pop
lea
cmpsb
cmp
xchg
pusha
repnz
pushf
scas
bound
rcrb
popf
push
add
arpl
add
stos
std
imul
cltd
call
jl
ss
pop
push
in
xlat
pop
mov
sbb
stos
out
cld
je
lcall
or
pop
repz
stos
xchg
jmp
jmp
lds
adc
mov
dec
add
xor
add
pushf
insl
sbb
fadd
adc
dec
subb
mov
pop
inc
ds
pushf
subl
dec
data16
bound
scas
push
mov
pop
ljmp
adc
xor
in
mov
in
hlt
cltd
insb
jns
xor
mov
pop
je
js
adc
lea
andl
pop
and
pop
jbe
rorb
dec
mov
add
jmp
sub
data16
cmpsb
in
out
shl
cltd
out
fldt
adc
jo
test
or
push
sbb
subl
fnstenv
out
movsb
out
push
mov
mov
add
daa
jo
pusha
pusha
mov
mov
push
dec
cld
lods
icebp
add
jo
aaa
pop
cmpsb
mov
mov
mov
pop
inc
and
fcompl
lcall
stos
jns
in
inc
cltd
push
jnp
pop
mov
sbb
add
inc
cmp
mov
stos
lods
cs
test
loopne
cli
in
inc
mov
sarb
ss
adc
rolb
mov
or
mov
lret
xor
lods
outsl
call
testl
popa
mov
enter
addb
sbb
ljmp
push
sti
xchg
rcrb
inc
and
mov
adc
imul
inc
int
fadd
add
orl
and
sbb
xor
call
ss
rcl
stc
xchg
mov
movsl
mov
pop
dec
add
push
iret
js
lods
adc
pop
adc
gs
jbe
pop
pop
add
icebp
sbb
std
loop
xor
inc
xchg
xchg
test
or
mov
or
lea
cmpsb
mov
fnsave
jo
loopne
bound
mov
clc
mov
cltd
in
adc
push
nop
and
inc
mov
jmp
add
in
inc
hlt
sbb
out
lods
lods
inc
aas
xchg
scas
nop
sbbb
fsub
jne
cwtl
cmp
aad
or
icebp
jp
cmpsb
lahf
mov
stos
mov
dec
imul
jecxz
bound
addl
xchg
adc
adc
movsb
nop
add
pop
stc
test
or
shr
jmp
sub
or
imul
xlat
das
push
or
lret
lret
xor
je
sahf
lahf
das
in
loopne
cli
jp
inc
in
push
push
cmp
fs
adcb
xchg
add
or
push
loope
addl
stos
cmp
xor
mov
mov
je
cmp
add
popf
pop
or
inc
outsl
push
push
add
imul
popf
inc
scas
lods
test
add
insl
insb
jns
in
xchg
outsb
push
pop
push
movsb
xor
sti
inc
jecxz
mov
in
mov
das
sbb
mov
dec
add
roll
mov
jg
pop
insl
xchg
sbb
loop
push
push
lahf
pushf
pop
push
sub
test
arpl
pop
dec
lcall
hlt
xor
fldt
mov
stos
mov
pop
sub
lea
and
shll
fdivs
and
push
loopne
dec
popa
or
test
xchg
pushf
xor
stc
repnz
add
shl
les
lds
lret
xor
pop
mov
dec
jle
sbb
mov
pop
loop
int3
mov
cmp
sti
cmpsl
lret
cltd
adc
push
mov
sahf
pop
lret
repz
mov
sar
cmp
ret
mov
cld
jns
iret
xchg
jp
and
in
push
adcl
mov
sbb
xchg
add
test
pop
mov
mov
or
pop
fiadds
dec
fmulp
pop
push
xchg
fs
pop
stc
or
insb
cltd
push
add
pop
xchg
xchg
dec
imul
xchg
pop
mov
sbb
cmp
and
notl
dec
popf
push
push
stos
mov
arpl
xor
dec
push
std
data16
pop
dec
add
jno
adc
int
std
xor
test
and
popa
jg
std
jecxz
icebp
dec
mov
mov
nop
std
mov
xor
fcmovne
add
fisubrs
pushf
xchg
xor
xor
adcb
js
pop
push
enter
or
and
and
mov
inc
push
mov
xchg
aam
mov
leave
imul
mov
push
dec
mov
and
inc
fldcw
rorl
pop
int3
mov
push
push
les
mov
inc
jno
pushl
adc
insl
adc
pop
cmp
out
lds
sbb
inc
icebp
fistpll
lcall
adc
fcmovbe
insb
jmp
push
and
orb
sub
or
push
pusha
divb
data16
adc
mov
test
out
lret
mov
jmp
lret
pop
mov
cmovns
aad
jl
test
dec
pop
call
clc
shr
loop
add
pop
gs
sbb
push
xchg
and
mov
popa
outsl
jbe
push
gs
mov
lret
pop
or
stos
out
cld
sub
int
cmpsb
lock
rcl
pushf
or
daa
pop
movb
iret
int
mov
fsubrp
iret
adc
pop
or
pop
mov
lret
push
jp
xor
xchg
cmc
xor
scas
std
push
or
out
push
pop
fwait
mov
outsb
inc
jl
add
push
subl
movsb
das
pusha
lods
cli
cs
cld
pop
es
inc
aad
jb
repnz
out
xor
xchg
jge
jle
fucomp
gs
xor
fcmovbe
aam
mov
xor
mov
fistpl
mov
and
in
sub
adc
xor
cltd
or
test
mov
flds
or
pop
mov
xchg
inc
js
insb
out
xor
fmuls
int3
pusha
aam
adc
js
add
xchg
fucomp
bound
jl
je
jnp
mov
push
fldcw
xor
outsb
add
push
and
and
dec
push
jbe
and
fs
mov
push
or
xor
in
mov
xchg
cmpsb
lods
fsubrs
lods
xor
dec
mov
pop
fnsave
mov
inc
scas
jmp
xor
out
mov
sub
push
lret
jmp
xchg
test
sbb
jge
push
pop
insb
pusha
and
mov
or
ret
fadd
inc
gs
xchg
cmp
ss
mov
cwtl
popf
jmp
shl
mov
mov
stc
or
stc
cmpsl
aam
xor
lods
or
push
adc
int3
sbb
rcll
or
xlat
dec
push
xchg
lods
je
enter
jg
xlat
dec
clc
jbe
add
jge
and
mov
push
mov
xchg
cmp
js
push
shlb
mov
jae
cwtl
adc
loopne
ret
push
in
add
xchg
push
jae
in
stc
pop
add
pop
rclb
xorb
mov
arpl
xor
ret
and
repz
addb
push
inc
dec
repz
and
push
test
fwait
cs
lock
iret
xchg
jbe
jbe
jge
subl
xchg
push
jnp
and
jae
jmp
fisttpll
lcall
inc
xchg
and
inc
mov
adc
adc
je
out
frstor
lds
sahf
push
and
lcall
jb
sbb
jbe
sbb
mov
dec
out
fwait
mov
adc
mov
and
out
pop
xor
in
dec
sbb
jae
lock
cltd
xor
shlb
mov
jne
inc
gs
ror
sub
addr16
inc
dec
dec
sbb
stos
adc
and
fdivrl
in
cmp
mov
cmp
mov
push
sti
or
pop
adc
cs
sbb
std
mov
mov
xchg
mov
imul
mov
mov
sub
or
mov
inc
stos
icebp
cmc
rcll
int3
test
cmp
cmp
div
push
ljmp
and
xchg
sub
js
xchg
hlt
xchg
mov
nop
cld
jecxz
inc
ss
xchg
sub
adc
cmp
jnp
jno
adc
sub
sbb
sti
sarb
and
cwtl
sarb
ret
adc
mov
cmc
pop
das
loop
into
jno
andl
outsb
sub
xchg
and
adc
fmull
mov
inc
inc
add
adc
fsubl
lahf
scas
lock
jp
aaa
sbb
xchg
or
push
mov
mov
pop
add
js
sbb
mov
adc
dec
imul
cld
mov
inc
ret
push
nop
in
jp
add
push
sub
loope
addr16
sbb
inc
push
push
pop
sarb
int3
dec
or
xchg
mov
add
push
insl
ret
sub
lods
and
mov
mov
push
fs
fdivs
sbb
pushf
cmp
or
jae
dec
inc
pop
bound
in
das
nop
sub
push
inc
jae,pt
mov
sub
and
lcall
aam
jne
dec
rclb
xchg
jmp
pusha
sarb
sbb
dec
les
push
push
and
dec
addr16
push
xor
pop
mov
test
sub
shrl
jle
xchg
jno
mov
pop
xchg
leave
out
mov
xrelease
movsl
in
pop
add
and
dec
leave
and
leave
loop
push
stc
cmpxchg
sub
jae
and
fs
inc
push
repz
sbb
push
lods
lock
lds
mov
jge
pop
jmp
mov
in
in
in
jno
xor
mov
jnp
idivl
add
and
sub
repz
mov
xchg
adc
xchg
addl
mov
xchg
dec
cmp
cltd
xchg
sub
xchg
xchg
pop
cmp
pop
ljmp
xchg
push
xor
pop
and
push
int3
push
pop
aaa
ffree
mov
cmpb
sahf
es
pop
fmull
gs
mov
mov
test
dec
int
cmp
pushf
sti
mov
adc
add
pop
jmp
clc
xchg
repz
xchg
and
and
push
loop
outsb
pop
add
inc
movsb
into
pushf
fildl
xor
mov
mov
test
jle
xchg
pop
mov
movsl
dec
sub
dec
fstl
inc
pop
push
mov
fimull
aaa
add
cmp
loope
adc
sub
xlat
fwait
cltd
mov
pop
les
jle
lods
rcll
pop
insl
inc
inc
pop
mov
test
xchg
pop
push
lock
mov
andl
pop
pushf
inc
xor
xor
fs
push
mov
scas
push
and
outsb
cmp
xchg
lods
std
sub
push
xchg
mov
leave
lea
push
pop
adc
sbb
call
inc
sbb
sti
push
cmp
jne
xchg
js
fistps
mov
inc
sarl
into
out
int
xlat
sub
jns
pushf
xchg
movsl
add
sbb
or
push
sarl
push
or
aad
sti
bound
jge
lods
lods
or
roll
gs
test
repnz
aas
inc
loopne
mov
dec
cmpsl
cmpsb
or
and
out
and
dec
pop
cmp
rcrb
dec
cwtl
test
push
rolb
daa
stc
rorb
data16
and
loop
repz
jno
mov
adc
add
in
mov
push
shl
dec
mov
popf
or
inc
les
sbb
xchg
add
cmp
repnz
stos
mov
popa
sub
sub
adc
mov
add
in
cmc
in
sbb
dec
xor
mov
pop
pushf
fwait
shll
es
adc
andb
sarl
in
add
jae
int
mov
or
dec
aaa
mov
xor
outsl
push
gs
dec
int3
rclb
arpl
xor
hlt
mov
into
cmp
pop
inc
mov
pop
clc
sbb
push
push
aas
fwait
sub
xchg
cwtl
jb
arpl
lods
jns
xor
sub
or
lock
inc
subl
mov
jmp
dec
mov
sbb
xchg
ljmp
movsl
out
push
sbb
mov
xchg
lods
inc
pushf
fcoml
lcall
sub
cmp
mov
push
add
inc
sbb
inc
orl
mov
or
pop
jg
add
stc
aaa
lret
int3
test
pop
push
cmp
icebp
push
rcl
cltd
out
cli
lods
or
add
jl
retw
mov
xchg
bound
outsb
xchg
mov
aad
jge
subb
sub
aad
xchg
sub
mov
shr
jp
adc
popf
push
ljmp
mov
popf
mov
out
daa
stc
cmpsl
test
jns
sahf
arpl
test
shrb
orb
mov
jae
insb
cmp
push
push
adc
rcrl
jbe
test
js
or
or
xorl
xchg
push
popf
mov
stc
dec
adc
jmp
mov
ja
ljmp
and
mov
mov
enter
inc
xor
jg
je
and
sarb
pop
fcomi
push
jge
pop
std
out
inc
sbb
lahf
jne
push
popl
fs
mov
imull
inc
jp
sbb
mov
aad
cld
mov
mov
negl
mov
mov
or
mov
mov
outsl
adc
sub
and
and
add
adc
xor
scas
xchg
sub
xor
inc
and
rorl
nop
cmp
test
add
test
jle
mov
rolb
clc
sbb
call
cmpsb
sbb
lock
mov
jbe
mov
xchg
ljmp
cs
aaa
add
jge
lret
jmp
js
lea
scas
xor
daa
add
fs
insb
sub
loopne
inc
bound
sub
testl
inc
pop
xlat
lea
mov
out
inc
ljmp
mov
inc
sbb
mov
enter
xchg
adc
pop
pop
stc
mov
push
test
ds
pop
mov
lea
push
lret
nop
ljmp
add
add
push
pop
push
pop
aaa
and
and
cmp
out
pop
rorb
push
dec
in
xchg
xor
cmc
nop
jge
lcall
outsb
inc
or
pop
dec
outsl
sbb
icebp
or
push
pop
aad
push
pop
sahf
sbb
rcr
push
loop
or
stos
out
shrb
adc
in
jl
ret
sub
in
lret
push
fwait
popf
or
lods
mov
addr16
sub
or
jno
jne
ss
ss
aad
and
jo
div
pop
inc
push
and
mov
cmp
cmc
jl
movsb
test
xchg
jp
xor
xchg
in
lods
adc
jecxz
xor
dec
pop
clc
fcmovnbe
jno
and
rcll
mov
pushf
push
mov
stos
or
xlat
ljmp
aas
shlb
lahf
pop
mov
icebp
in
cmc
xchg
mov
inc
push
mov
fldt
adc
icebp
stos
mov
clc
and
dec
cltd
inc
xlat
mov
mov
mov
outsl
xlat
sarb
fstp
int3
xchg
sub
daa
jnp
cmp
mov
mov
sbb
lahf
sahf
ljmp
jmp
andb
in
das
aam
cs
push
lahf
aas
dec
imul
insl
xchg
ja
and
stos
popf
jle
push
in
xor
push
xor
data16
jle
in
pushf
dec
outsl
push
cmp
add
mov
mov
push
arpl
and
xor
sub
and
sub
movsb
test
ds
xlat
adc
ja
popf
mov
dec
pushf
in
sbb
jl
mov
cld
inc
insb
aam
sbb
jo
dec
add
in
sbb
inc
mov
mov
jp
aad
xor
addl
add
aad
push
adc
xchg
add
mov
push
rorl
lcall
mov
add
ljmp
pop
or
xchg
das
dec
test
andl
inc
dec
and
je
mov
push
xchg
dec
mov
loopne
pop
loop
enter
cltd
adc
lret
clc
xor
cmp
jns
xor
imul
pop
aas
mov
mov
xchg
popf
stos
test
pop
ljmp
sbb
xor
inc
mov
dec
in
jns
lods
sub
mov
mov
enter
fistps
push
mov
es
dec
ret
lds
pop
loopne
mov
pushf
outsb
xchg
cmp
stc
jno
mov
or
lods
dec
xchg
pop
aad
sbb
inc
cmp
adc
gs
jg
dec
cld
daa
mov
mov
mov
sub
ror
xor
xor
mov
call
sbb
and
dec
cmpl
pop
fnsave
add
mov
or
das
xor
in
or
jmp
dec
popa
cmp
lds
xchg
ljmp
fwait
xchg
xchg
call
into
movsl
cmp
or
jg
xor
mov
cmpsl
mov
ret
cmc
shl
ja
sbb
dec
test
inc
or
sti
xchg
aad
int3
clc
add
cltd
xchg
shl
xorl
ret
dec
data16
add
pop
fcomps
mov
mov
push
cmp
out
and
clc
xlat
movsl
pop
imul
in
xchg
clc
xchg
or
outsb
in
test
xor
add
ja
pop
mov
bound
jae
enter
push
mov
adc
jno
outsl
mov
mov
inc
xorl
lods
jge
sbb
sbb
fistpll
or
xor
jnp
pushl
lds
mov
addr16
push
cvtdq2ps
adc
negl
inc
icebp
cld
xchg
aaa
fmul
es
and
dec
mov
sbb
pop
cltd
mov
lret
cmp
fcmovb
jmp
out
outsb
pushf
mov
js
xchg
push
bswap
inc
fwait
sub
in
jne
xchg
push
cmp
add
fiadds
cmp
jg
xor
jle
mov
les
and
in
mov
xlat
inc
mov
sbb
jl
jle
and
inc
hlt
push
jno
mov
dec
mov
sub
fmuls
or
lea
cmpsb
push
call
dec
and
push
and
out
inc
jne
mov
out
icebp
lahf
pop
mov
or
das
jb
jge
mov
or
or
add
in
add
jge
jne
mov
dec
rdtsc
insb
xor
mov
popf
inc
sahf
test
inc
jge
movsl
cmpsb
ret
sbb
cmp
push
aad
xchg
std
or
sub
inc
push
test
and
mov
sbb
dec
ljmp
in
mov
cltd
aam
xor
xlat
out
cmp
add
inc
cmp
fmull
pop
inc
std
jno
inc
sbb
lds
cmp
in
imul
push
jmp
loope
xchg
rorl
mov
cmpsl
jmp
pop
or
inc
fcmovnb
sub
mov
push
inc
sub
jns
push
iret
mov
and
fildll
inc
icebp
mov
push
dec
xchg
movsl
cli
in
ss
bound
jb
fs
stos
dec
mov
add
dec
sub
clc
lret
inc
dec
add
push
mov
mov
and
lahf
movsl
into
bound
pop
test
loop
into
into
inc
mov
aam
or
fs
mov
je
or
cmp
dec
iret
inc
jno
icebp
inc
jle
fstpt
test
test
ljmp
lock
mov
mov
xchg
pop
test
shlb
and
in
push
in
insl
sahf
mov
mov
repz
adc
ret
aas
jnp
push
test
adc
mov
cld
xchg
movsb
pop
in
pop
mov
fsubrl
sahf
adc
imul
push
jne
mov
cmpsl
addb
cli
jo
test
cld
jle
movb
sub
pop
dec
mov
pop
mov
das
jbe
fisttpll
mov
js
popa
mov
cwtl
rcl
roll
cmpsb
popa
xor
ljmp
push
xchg
mov
jmp
lods
dec
das
ss
out
push
mov
xlat
jo
cs
data16
imul
repz
hlt
adc
push
iret
adc
jne
xor
jae
imul
fbstp
pop
push
sub
testb
ret
sub
pop
lahf
mov
rcrb
jne
adc
xor
push
jae
mov
pop
mov
jbe
cwtl
cmp
cmp
pushf
mov
das
imul
xchg
and
jb
hlt
loop
push
mov
dec
call
add
xlat
sub
daa
shlb
out
dec
sbb
insl
test
jp
iret
xchg
add
sub
xor
decb
cmp
inc
loope
mov
mov
mov
test
cs
mov
jg
popa
xchg
loope
das
andb
adc
ss
rcr
jecxz
and
mov
aam
in
loopne
push
push
xor
js
popf
fwait
movsl
fcomi
test
xor
pushf
leave
dec
fidivs
jp
mov
arpl
mov
cmp
or
mov
stos
lahf
sbb
ljmp
push
lock
mov
or
add
in
cs
push
inc
jecxz
push
or
ret
sub
sahf
adc
sar
pop
ret
cwtl
push
cmpsl
dec
add
jno
jl
add
or
inc
lret
adc
clc
rcrb
lods
lahf
ja
xchg
push
sub
sub
sahf
lods
xor
push
imul
cmp
mov
lret
adc
enter
dec
out
adc
xchg
popa
movsl
lret
aaa
lods
inc
dec
inc
push
test
sarl
dec
add
or
sub
clc
xorl
push
jb
call
movb
pop
jns
dec
fisttpl
sbb
pop
sub
out
movsl
ds
cmpsl
bound
sar
or
icebp
sub
jno
push
push
xchg
repz
pop
push
or
test
pop
stos
cwtl
push
rclb
iret
lea
push
enter
or
in
jmp
push
mov
cmpsb
pop
push
xor
dec
adc
push
insl
aam
push
out
cltd
jge
inc
imul
inc
push
fwait
xchg
in
jbe
lock
imul
aad
ljmp
lcall
iret
mov
xchg
sub
js
rorb
sbbl
fnsave
and
jo
pushf
or
inc
ljmp
pop
dec
add
add
sub
adc
les
popf
sub
cwtl
fldt
iret
push
lds
repnz
and
lods
test
mov
aam
mov
call
sahf
mov
sub
ljmp
xchg
pop
es
xor
dec
mov
int
mov
jae
ljmp
bound
mov
jg
jno
lss
inc
stc
cmp
aad
adc
sub
inc
popf
xor
cmp
imul
iret
out
dec
fisubs
mov
sub
sbb
mov
inc
icebp
push
sub
fdivrl
movsb
ja
push
jmp
mov
std
and
and
add
xchg
add
lods
inc
jae
or
xchg
repz
mov
xor
lods
loopne
inc
sti
xchg
cmp
in
sub
mov
pop
notb
and
stos
movsl
mov
loop
mov
xchg
xor
stc
xchg
loopne
cmpsb
inc
push
notb
fcoms
ror
loope
addr16
in
xchg
and
mov
sub
adc
lods
ds
jnp
mov
inc
lea
in
fisubrl
jb
sbb
std
popf
rcr
iret
xchg
xor
call
scas
mov
or
fsubrl
jne
jg
xchg
mov
xchg
out
es
jbe
inc
push
andb
mov
andl
add
popf
data16
out
mov
je
lea
fstps
push
push
mov
rcl
or
add
xor
movsb
test
enter
mov
clc
and
xor
into
fninit
stos
sub
loope
xor
mov
jb
xor
pop
jno
push
adc
xlat
out
xor
dec
nop
jmp
lret
cmpsb
xchg
xchg
add
repz
sbb
dec
jnp
hlt
rol
or
int
adc
stos
or
dec
insb
adc
loope
aam
pop
and
int3
adc
loopne
int
inc
mov
outsl
movswl
xor
or
mull
cmpsb
sub
ja
jg
lods
jp
testb
mov
pop
mov
mov
pop
lea
fcmovnbe
xchg
out
in
add
xchg
dec
adc
add
jp
mov
mov
cmp
ret
jle
mov
mov
scas
dec
jle
cmp
sbb
push
sbb
cmp
or
les
aaa
mov
divl
les
dec
sbb
fistps
fwait
pusha
cmp
out
dec
jno
adc
or
adc
roll
sarl
imul
jg
es
rcll
das
sbb
xchg
inc
jecxz
mov
rclb
sbb
xchg
nop
mov
xor
xor
std
std
test
or
enter
sub
in
or
mov
inc
aam
bound
rcll
adcb
and
add
mov
or
sbb
adc
shlb
cmc
out
faddl
daa
les
aaa
out
sahf
cmc
mov
xor
scas
ret
rcrl
jle
sbb
sbb
imul
mov
lds
inc
xlat
pop
stos
adc
clc
rcrb
stos
adc
dec
in
cli
fcmovnu
cwtl
lods
add
jg
jp
mov
or
sti
mov
and
repz
or
dec
mov
enter
add
or
or
pop
mov
mov
cmp
adc
push
adc
pop
lret
mov
call
mov
push
fcomi
mov
out
sbb
or
dec
adc
xchg
or
xchg
xor
fcoms
pop
push
pushf
push
pusha
sub
js
rcrl
daa
jecxz
out
sub
lret
lcall
dec
or
scas
pop
ret
cmpsl
adc
popa
fnsave
or
adc
aaa
push
ficoml
inc
sbb
mov
add
insb
sub
cli
or
sub
cmp
adc
leave
xlat
push
push
sbb
dec
imul
inc
and
daa
sub
xchg
cmp
out
in
arpl
out
push
and
mov
fisttps
cld
movsb
xchg
cmp
sahf
mov
push
rcl
hlt
mov
loopne
and
orb
and
sub
or
sar
das
movzwl
xor
sub
xchg
xor
mov
push
imul
jo
stc
xlat
enter
adc
push
cmp
int3
mov
mov
cltd
mov
mov
scas
xor
popa
and
xor
dec
out
push
pushf
xor
mull
lods
stos
movsb
test
lea
cmp
bound
xchg
ds
scas
jmp
xor
call
je
sti
or
cli
ds
and
push
adc
mov
mov
sub
cltd
inc
je
xlat
enter
inc
lock
in
pushf
sub
insb
cmpsb
mov
es
dec
inc
and
fbstp
add
enter
xchg
pop
add
out
jg
cmpsb
nop
sbb
sbb
out
js
adc
mov
mov
sarl
outsl
scas
test
adc
ficoml
fiaddl
loopne
adc
js
ret
ret
aam
xor
push
stos
aaa
pop
movsl
dec
insb
sbb
daa
mov
mov
loopne
jmp
cmpsb
call
test
jne
push
mov
cmp
loop
adc
or
mov
cwtl
ljmp
pop
sub
jecxz
fnstenv
into
hlt
inc
gs
je
addl
jns
fstpt
mov
fstpl
jecxz
fistps
js
insb
out
cmp
hlt
xchg
pop
popa
es
add
pop
movsb
loope
sahf
xchg
outsb
add
in
sub
xchg
call
ret
and
aad
xor
pop
mov
leave
mov
dec
cltd
and
jno
dec
or
fidivs
int3
test
xchg
or
pop
mov
and
mov
scas
cltd
divb
call
sbb
mov
jne
sbb
mov
push
dec
mov
add
shrl
scas
loope
lcall
xchg
mov
cmp
jmp
sbb
test
into
xchg
push
sub
mov
or
repz
out
add
sbb
and
insl
mov
popf
jo
das
or
scas
stos
add
sub
jb
jbe
lods
sbb
xchg
cltd
or
rcll
repnz
repz
popf
ja
roll
xor
stos
push
inc
movsl
and
jmp
push
divl
lods
stc
xor
scas
arpl
jg
add
aam
xor
and
dec
inc
and
pusha
push
imul
scas
pop
fwait
insl
pop
jmp
int3
test
insb
test
std
in
or
enter
dec
mov
loop
dec
xor
shlb
mov
mov
into
push
insl
jp
dec
lods
cmp
pop
icebp
jmp
inc
mov
ja
fstp
roll
jg
adc
add
hlt
ja
inc
pop
hlt
fsubrl
adc
and
mov
push
push
adcb
insb
orb
sub
mov
pop
movsl
adc
mov
jno
std
pop
mov
repz
mov
dec
mov
add
fdivr
test
lcall
mov
cmpsb
mov
adc
jmp
xchg
adc
test
and
sbb
insl
inc
mov
mov
jp
add
push
xor
jbe
jae
jbe
pop
cli
inc
enter
inc
gs
push
mov
clc
out
ja
inc
mov
sarl
ror
test
pop
lock
mov
pop
push
and
je
lock
sbb
aaa
push
aas
icebp
xor
xchg
dec
nop
adc
inc
or
mov
jecxz
aad
cmp
outsl
pop
mov
cmc
mov
mov
push
or
andw
cmpsb
inc
repnz
jge
addr16
aad
lahf
cmpsb
mov
push
decb
xchg
sbb
inc
mov
jbe
inc
shl
pushf
lock
sbb
jmp
mov
ds
pop
dec
inc
adc
ss
js
xor
fninit
adc
jge
xchg
aad
mov
push
inc
pop
mov
push
fsubs
push
sahf
mov
jmp
cs
lahf
and
shlb
xor
scas
lret
icebp
add
xor
fstps
cmp
dec
sti
or
fnsave
xor
push
add
or
imul
xor
mov
mov
lods
addr16
sahf
out
hlt
insb
pop
push
lods
dec
xlat
mov
mov
out
mov
cltd
imul
mov
dec
or
mov
shlb
xchg
sbb
and
sti
sub
ljmp
mov
inc
lea
xchg
pusha
lret
jecxz
out
pop
inc
fimuls
pop
push
bnd
cmpb
jle
rorl
lock
add
shlb
add
jno
sub
mov
mov
iret
fdivr
pop
push
mov
mov
addr16
xchg
mov
ljmp
push
cmpsb
ficoml
inc
cmp
push
ret
rcll
pop
fldcw
in
loop
and
clc
inc
jne
rcll
dec
mov
divl
test
mov
xchg
and
into
insl
mov
stos
push
adc
pusha
cmp
push
add
adc
arpl
push
push
sti
pop
cmp
mov
inc
fnstcw
cltd
pop
jnp
pop
xlat
push
sub
push
addr16
cmc
ret
push
pop
arpl
std
ror
cmp
test
cmp
mov
push
popf
cmp
insb
testl
fldt
andb
add
lds
stos
xor
mov
mov
xchg
js
inc
rcl
decl
and
push
pop
push
popa
pop
in
ja
jg
and
jmp
aas
insb
ss
cli
xchg
push
fstl
cmp
xchg
dec
mov
shll
pop
movsb
hlt
dec
pop
loope
in
mov
mov
lea
adc
shll
test
lcall
rolb
xor
mov
mov
or
mov
mov
sahf
push
add
scas
iret
rolb
idiv
test
mov
sti
sbbb
mov
jno
jne
mov
scas
cwtl
pop
push
mov
movsl
mov
cmp
dec
and
bound
push
cs
sbb
mov
jne
rep
cmc
adc
sarl
sbb
stos
in
adc
dec
outsb
andl
jo
xchg
pop
jo
pop
pop
or
dec
or
jnp
inc
shlb
push
orl
xor
vcvtdq2ps
mov
jge
or
add
loop
inc
push
js
mov
jb
xchg
mov
fnstenv
jg
jo
adc
jae
jbe
inc
stos
jb
mov
daa
or
test
mov
shlb
sbb
jnp
xchg
repz
pop
sahf
aam
cld
cmp
lock
ret
orb
add
or
int3
xor
push
insb
jle
leave
subb
mov
sub
pop
bound
sbb
mov
outsb
mov
mov
xchg
mov
iret
fdivrs
xchg
or
jo
add
lods
femms
mov
negl
stos
insb
push
add
cmpsb
stc
add
sbb
sub
cmpsb
fsubl
pop
sbb
inc
and
pop
shl
leave
cltd
popa
xchg
lea
lahf
xchg
jmp
inc
setge
out
in
and
push
pop
fldl
icebp
sti
es
mov
stos
hlt
push
adc
jmp
xchg
mov
sti
pop
cmp
pop
cmpsl
das
pusha
dec
popa
push
push
mov
les
dec
pop
imul
arpl
mov
dec
lahf
inc
cwtl
sahf
mov
scas
pusha
xor
add
or
sbb
jecxz
outsb
adc
loopne
dec
add
and
fdivrl
sahf
shrd
mov
adc
or
jbe
mov
xor
dec
or
addl
pop
push
fnstenv
fmuls
add
jnp
cld
xchg
shl
inc
or
mov
icebp
dec
push
add
sub
cltd
jae
loopne
inc
push
mov
data16
cmpsl
dec
sbb
arpl
in
xchg
lret
aas
inc
add
mov
adcb
fs
cmp
scas
shr
add
stos
xor
loop
les
outsb
aad
jp
inc
push
push
mov
sub
std
jns
mov
in
or
lds
push
int
dec
pop
or
adc
jb
stos
mov
xor
not
es
outsl
mov
or
sarb
jbe
add
ret
test
pusha
pop
jmp
add
xor
lds
xor
popf
repz
lcall
cwtl
pmulhw
lods
mov
jbe
jne
into
roll
rcll
sbb
jecxz
dec
aad
inc
dec
mov
clc
rorb
out
push
jecxz
lahf
test
jbe
push
mov
enter
or
out
adc
lahf
add
call
jne,pn
insb
jno
movsb
shrl
inc
push
shlb
pop
push
jle
sahf
stos
mov
jnp
adc
sub
sub
cld
fadd
and
movsl
pop
rcrb
jns
xchg
jns
incl
out
insb
fildl
out
outsl
ljmp
xchg
out
das
pop
or
or
mov
add
dec
fstpl
sahf
dec
mov
stos
lret
xchg
sub
push
lock
dec
adc
or
xor
cmp
sbb
adc
mov
mulb
xor
inc
sub
mov
xor
sub
insb
cmpb
mov
pop
sbb
mov
push
push
mov
inc
fdivs
mov
add
add
rolb
mov
mov
pop
clc
jge
fwait
bound
lahf
dec
cmc
es
or
xor
cmpsl
sbb
xchg
mov
push
adcb
mov
dec
popa
arpl
adc
dec
shl
cwtl
in
std
std
repz
cs
pop
xor
mov
scas
insl
loope
xor
pop
and
mov
orl
fadd
fidivrs
push
adc
movb
or
push
cmp
xchg
out
sahf
xor
aas
dec
sub
testl
cmpsl
push
dec
mov
pop
xchg
inc
and
mov
psubw
push
pop
adc
fnstenv
cld
sub
enter
mov
test
push
in
push
dec
out
inc
lahf
mov
cwtl
in
icebp
packssdw
adc
lods
mov
jns
push
ret
outsb
pop
cmc
aas
hlt
jb
icebp
sub
sub
pop
inc
mov
imul
mov
test
mov
daa
sub
xor
imul
sbb
es
insl
jge
pop
lock
pop
xchg
pop
icebp
jl
push
idivb
mov
inc
push
inc
mov
jge
xchg
cmpsl
outsl
sbb
test
xlat
je
xchg
int3
pop
cmpsb
jge
icebp
icebp
inc
jecxz
jo
push
imul
cmp
ds
dec
sub
jne
icebp
pop
notl
sti
movsb
arpl
mov
pop
pop
pushf
dec
sub
jle
out
and
sub
lods
jne
sbb
dec
mov
addr16
cmp
pop
jnp
and
or
stos
cmp
inc
scas
lods
hlt
ss
es
call
fdivrl
xchg
and
adc
filds
js
in
mov
inc
jno
xchg
fsubrs
push
inc
mov
scas
jae
enter
ret
aaa
arpl
xor
mov
xor
test
cs
and
and
movsl
or
pop
adc
movsl
mov
int
mov
add
add
addr16
mov
xchg
int3
into
mov
inc
xchg
xchg
adc
lahf
jo
fwait
xor
lea
xlat
sti
or
test
aas
mov
sub
jge
lock
jecxz
and
stos
inc
test
mov
nop
stos
lret
sbb
fisubrs
gs
fisubs
push
aas
nop
movsl
mov
or
xchg
cmc
xor
pushf
iret
insl
jle
addr16
cmpsl
repz
dec
inc
loop
shlb
mov
aaa
in
mov
fsts
or
jnp
add
negl
arpl
fdivrl
jp
fbstp
out
jb
mov
and
pop
cltd
cli
or
ja
xchg
cmp
scas
adc
loop
xchg
loope
test
dec
push
jle
sub
out
in
mov
adc
adc
mov
pushf
push
or
xor
fs
sahf
inc
data16
mov
push
test
pop
fcoms
add
sub
cmp
stos
rclb
xchg
nop
push
fwait
scas
das
lods
aaa
sub
negl
jmp
int
out
jle
and
push
pop
ja
and
jb
stos
cmp
js
sbb
ljmp
push
imul
cwtl
bound
jl
mov
sub
into
xchg
or
into
mov
mov
sub
jne
jp
aam
and
lods
icebp
cmc
mov
dec
nop
mov
sbb
sub
mov
cmp
call
mov
sbb
mov
cld
push
iret
adc
mov
pop
int
fildl
pop
fcomip
mov
pushf
cwtl
lahf
into
inc
imul
mulb
mov
popa
dec
pusha
imul
sub
insl
fwait
jns
mov
mov
rorl
shll
arpl
adc
xor
sbb
call
lahf
sub
imul
sub
cmpsb
push
daa
adc
sbb
stos
ljmp
cltd
dec
jle
or
pushf
dec
push
fiadds
cld
daa
push
scas
pop
push
sub
mov
push
pop
ret
les
ret
sub
mov
lods
fnstsw
push
fdivr
jg
dec
and
repz
inc
dec
loopne
xchg
mov
vpunpcklbw
in
in
add
adc
bound
xchg
mov
mov
push
dec
cmp
sbb
xor
jp
cmpsb
pop
mov
iret
or
js
shrl
fisttps
fsts
repz
mov
xor
xchg
mov
jne
and
mov
movsl
pop
arpl
pop
jo
inc
xchg
jecxz
xchg
rorb
ja
or
mov
mov
popa
addb
push
xchg
ret
cmp
outsl
inc
aam
xchg
dec
shrb
lds
and
sbb
or
inc
clc
xlat
sahf
sub
push
and
jmp
rcll
dec
jne
jmp
movsb
jae
cmpsb
sahf
repz
je
xor
add
dec
push
xor
out
xor
sub
and
adc
inc
jmp
push
movsb
fnstcw
sub
lahf
dec
inc
lods
cmpsl
cli
push
in
adc
sub
stos
stos
orl
jns
mov
push
cmp
movsl
ljmp
jmp
mov
fisttpl
inc
sbb
inc
sbb
and
cmp
cmpsl
jmp
mov
and
push
cmc
xlat
aas
bound
xor
pop
push
cli
pop
jg
repnz
enter
mov
dec
add
cmc
xor
cmpsl
cmp
and
pusha
xor
rclb
fs
hlt
jl
or
mov
dec
insb
fldenv
mov
enter
and
and
mov
or
mov
adc
bound
jae
xchg
jl
mov
adc
int3
cmc
mov
int
sbb
push
js
lods
or
xor
pop
cwtl
mov
fstpt
mov
loope
icebp
sub
cmp
xchg
mov
cmc
mov
push
mov
pusha
cs
push
push
dec
cmp
add
adc
inc
mov
clc
and
pop
pop
in
xor
mov
scas
cmp
inc
stos
scas
nop
ljmp
out
pop
es
or
je
mov
xchg
insl
pop
sbb
pop
xchg
cmpl
popf
test
loopne
fldenv
clc
rcll
imul
sub
mov
xchg
hlt
lahf
rorw
sbb
and
inc
dec
dec
mov
pusha
lcall
mov
movsl
fidivl
pop
mov
fdivrs
mov
jmp
iret
pop
clc
dec
sbb
pop
cmp
movsl
inc
cmp
mov
cmp
outsb
or
xchg
out
repnz
pop
inc
imul
ss
jae
xor
lds
cmp
push
push
into
inc
sahf
setno
jae
fidivrs
cmp
cmc
xor
ds
mov
mov
pop
aam
sar
pushf
cmp
gs
xchg
cmpsl
scas
sbb
call
fisttpl
clc
xlat
sub
cmp
aad
lahf
add
out
cltd
xlat
and
insb
jae
add
aad
xor
outsl
and
fwait
lods
lret
xor
pushf
imul
ja
mov
rcl
lea
mov
or
sub
mov
pusha
data16
mov
imul
and
std
jae
push
stos
ja
icebp
icebp
push
clc
cmp
xor
xor
jle
lahf
and
push
cmc
test
bound
cld
adc
js
in
jecxz
ffreep
pop
mov
icebp
xchg
or
sub
xchg
xchg
test
pop
xchg
orl
mov
mov
insb
jb
cmc
cmp
int
push
ljmp
dec
lods
repz
jg
mov
ljmp
inc
mov
add
sar
leave
je
pop
push
orl
sti
mov
mov
bound
insl
insb
mov
je
mov
and
jae
ret
sti
ret
fwait
inc
test
push
sarl
or
mov
xchg
and
add
jae
imul
lret
pop
sahf
cli
jecxz
xor
sbbl
sub
cmc
xlat
or
icebp
mov
imul
insb
jae
fcom
push
repz
push
enter
sub
mov
outsl
lcall
pop
mull
popf
call
in
mov
mov
imul
aad
data16
pop
xchg
ret
dec
in
gs
fisubs
inc
inc
hlt
or
fists
cmp
lods
inc
and
inc
sub
cli
xlat
push
in
ja
aaa
fdivrs
ret
call
stc
lock
push
sub
shll
jp
cmp
lods
xor
je
roll
stos
adc
fisubl
cmp
shll
call
add
in
test
push
lea
mov
rcrb
lods
rcrl
dec
push
aam
adc
xor
mov
insl
repz
in
aas
cmpsb
nop
movsl
xchg
popf
pop
add
pusha
cmpsl
je
adc
dec
dec
xor
adc
mov
pusha
je
jbe
inc
daa
xchg
inc
inc
cwtl
out
push
mov
mov
cli
xor
sbb
xchg
mov
movsb
sbb
into
fwait
dec
mov
inc
xchg
xchg
fisttpll
dec
add
cmc
push
ret
stos
lret
lods
out
leave
inc
mov
out
mov
inc
lock
mov
jmp
cld
test
mov
loop
jb
sbb
sbb
and
stc
inc
leave
stc
push
fisttps
sub
add
fcoms
into
aad
jge
dec
dec
shrl
ret
mov
rorl
xlat
addr16
add
rcl
pop
dec
js
popa
sbb
push
lea
ret
das
mov
popa
mov
out
lret
aam
mov
push
dec
mov
push
push
jmp
outsl
shll
cmp
cs
inc
push
mov
cmp
or
mov
pushf
out
add
hlt
dec
xlat
sbb
add
push
and
leave
mov
sbb
xchg
push
test
lds
xchg
movsl
pusha
ret
js
add
iret
mov
idivl
push
shr
or
sahf
testb
lock
jg
call
hlt
subb
stc
movsl
bound
sub
loopne
add
xlat
or
negl
in
mov
sbb
insb
inc
iret
out
mov
inc
jb
sbb
out
mov
and
jne
xor
imul
loope
inc
cmpsb
cmp
mov
in
lea
pop
add
popl
in
add
pop
inc
scas
fisttpl
xor
pop
cmp
hlt
push
jno
in
fucomip
mov
dec
aam
adc
push
lds
cli
adcl
aam
xor
je
sbb
hlt
and
xor
mov
inc
cmc
rcrl
test
int
xchg
ds
fldl
jbe
das
in
out
mov
sub
pop
sub
inc
into
jbe
pop
and
je
jecxz
mov
call
push
bound
cmp
or
rcrl
roll
or
pop
outsb
cmpsl
lcall
addr16
data16
insl
hlt
xchg
int
jg
mov
or
mov
sbb
xchg
inc
add
add
cmpsb
dec
and
mov
loopne
mov
test
or
shr
ds
xor
xchg
and
lea
ljmp
mov
pop
cmp
jbe
negb
sti
sbb
push
sbbl
push
fmul
cmp
pushf
add
add
or
jg
lahf
or
aad
aad
outsb
dec
filds
lahf
into
inc
xor
fstpt
cmpsl
mov
push
and
popa
and
iret
jl
dec
mov
je
ret
xor
stos
lock
bound
fwait
imul
fdiv
xchg
in
lret
xchg
or
ja
stc
mov
ljmp
adc
jle
test
adc
xorb
and
mov
std
lcall
mov
pop
push
mov
je
jl
or
jbe
test
fcoml
popa
dec
push
and
push
mov
xor
mov
ds
imul
add
push
mov
mov
inc
jbe
add
sahf
cmpsb
inc
test
jge
cmp
dec
out
jns
popf
loopne
test
lret
shll
add
xchg
xor
mov
mov
pushf
test
and
ja
rcrb
mov
fisubrl
adc
fistpll
mov
xor
and
popf
lock
xchg
leave
jbe
dec
dec
out
xchg
shll
icebp
mov
insb
push
orl
jo
dec
push
daa
lahf
jmp
dec
or
aaa
test
ret
xchg
clc
sub
push
out
orb
mov
jo
jb
sahf
jge
or
adc
clc
stc
sub
jmp
xchg
daa
or
mov
and
or
mov
push
ds
mov
loope
jne
push
push
jae
lret
cmc
ret
cmpsl
out
mov
out
sub
ss
mov
bound
out
fcom
lea
inc
into
in
xchg
jmp
lds
xchg
shl
push
jp
movsb
pop
cmp
or
cmc
lret
push
mov
scas
std
into
xor
add
add
mov
xchg
stos
stc
pop
movsb
fcmovu
sbb
push
mov
test
scas
cmp
lahf
and
scas
addr16
mov
pop
std
mov
ds
lock
outsl
test
sub
mov
incl
xchg
fld
test
or
ljmp
popa
inc
jmp
mov
cmp
sbb
mov
add
testl
movsl
or
add
icebp
fdivrs
fisubrs
lahf
jne
enter
mov
mov
lret
xlat
ss
adc
movb
sub
xlat
push
mov
rcrl
push
and
pop
adc
lock
push
xchg
pcmpgtb
data16
push
arpl
push
cmp
repnz
fisttps
push
cmp
cmpsl
out
ljmp
push
cmp
and
inc
scas
xchg
jb
dec
loop
pop
dec
mov
lock
lret
sahf
push
testb
xor
mov
shl
movsb
imul
bswap
imul
scas
mov
std
push
fsubl
adc
insb
xor
enter
sub
bound
in
xor
daa
push
add
lock
and
fwait
and
inc
push
enter
inc
mov
ljmp
mov
and
movb
push
fucomp
clc
jns
test
in
push
mov
mov
add
xor
mov
scas
sbb
adc
stc
dec
fsubl
orl
jge
rcll
dec
test
sub
add
out
pop
cmp
faddl
add
pop
enter
ret
add
sub
or
jbe
push
es
movb
jo
imul
sti
jle
bound
jo
into
xlat
lea
xchg
test
mov
pusha
shl
mov
adc
sahf
mov
scas
mov
dec
inc
pop
sbb
nop
je
jg
pop
incl
xchg
add
cld
push
jmp
or
adc
subl
inc
sbb
dec
add
repnz
dec
add
xlat
adc
lahf
fdivp
xor
jg
test
mov
jmp
pop
dec
dec
push
dec
xor
push
loop
aaa
sub
nop
mov
and
scas
dec
ret
and
sub
fisubl
jmp
addr16
daa
pop
loope
jg
sub
sub
ds
pushf
xorl
icebp
jnp
leave
pop
jge
ficomps
cwtl
mov
mov
sub
or
repnz
sbb
and
int
cmp
and
data16
pop
pop
pop
dec
pop
mov
sahf
cmp
outsl
push
in
test
sarb
pop
ljmp
nop
dec
shll
fcomps
leave
jp
sbb
bound
adc
nop
jbe
dec
lret
mov
popa
test
in
xchg
outsb
push
push
pop
push
sub
imul
push
out
dec
or
loopne
dec
xor
pop
sub
push
cld
stos
pop
idivb
cmp
testl
pop
pusha
iret
pusha
sub
or
jmp
mov
jne
fucomip
cmp
mov
data16
push
pop
fmuls
ljmp
jle
or
mov
sub
add
repz
or
xchg
dec
shrb
je
adc
jmp
std
adc
mov
adc
jp
lds
xor
jecxz,pn
or
inc
push
add
mov
dec
cmp
adc
cmp
fwait
js
in
xchg
test
insb
sub
ljmp
shlb
test
mov
pop
inc
or
mov
push
jno
xchg
cs
lcall
adc
inc
push
mov
div
pop
movsl
in
mov
ja
mov
outsl
add
cmp
mov
jne
ds
add
testb
inc
push
fdivs
cmpsb
das
test
and
pop
xlat
in
cmpb
cmp
inc
daa
cmp
mov
lret
cs
xchg
sbb
sub
sahf
notl
sarb
xlat
imul
mov
jl
push
mov
pop
arpl
mov
jg
into
notl
je
fistpll
fs
xchg
cli
lds
loope,pt
jg
dec
fs
mov
lds
cmp
adc
jg
or
inc
add
clc
sub
inc
fcomps
test
dec
icebp
btc
out
scas
xlat
push
jmp
test
pop
jmp
or
dec
jb
mov
add
pop
and
into
jo
push
out
xchg
add
jmp
sahf
fistl
fiaddl
lret
and
push
jns
mov
sbb
mov
leave
cmc
pop
xchg
dec
sbb
fisttps
lret
push
mov
fisttpl
pop
jmp
jge
fs
rorb
mov
imul
shrb
inc
pop
mov
sbbl
mov
ds
fwait
xlat
dec
pop
and
xor
mov
sbb
add
lret
push
loopne
mov
pop
sub
xor
xor
inc
cltd
shrl
lret
jmp
into
adc
cli
int
push
or
mov
push
lret
fistpl
and
and
dec
push
pop
pop
cmp
cmp
inc
test
and
inc
cwtl
push
mov
mov
fs
loope
daa
loope
out
mov
sub
push
jp
adc
fidivl
jl
ficomps
dec
test
cltd
shl
movsb
inc
rcr
inc
out
pop
fisttpll
ljmp
pop
scas
nop
adc
sbb
xchg
inc
mov
mov
pushf
push
or
aas
arpl
pop
ss
adc
push
loopne
sub
gs
lods
fmuls
dec
xor
icebp
sti
lret
or
popa
int3
fscale
sbb
fcmovu
addl
adc
and
sub
jle
xlat
mov
repz
adc
int3
pop
addb
les
add
adc
add
insl
xchg
push
sbb
aas
sti
sahf
roll
dec
test
imul
loop
sbb
or
test
aam
bound
sub
xchg
repz
int
daa
lret
adc
push
fwait
push
icebp
cld
divb
nop
bound
jnp
enter
mov
mov
in
testl
sub
pushf
push
mov
adc
xor
je
int
jbe
jnp
mov
mov
leave
test
and
out
aam
out
lock
jno
inc
je
cmp
les
xlat
iret
or
movsl
push
fdivrs
inc
test
lahf
xchg
sbb
sahf
sarb
sub
jnp
adc
jnp
pop
lret
inc
cmp
sub
movsb
leave
or
insb
clc
dec
mov
addr16
push
dec
or
rolb
cmp
movsw
pop
push
adc
outsb
pusha
push
clc
mov
jnp
cmp
sbb
sub
mov
jmp
xchg
sbb
and
and
mov
jae
xchg
mov
push
gs
lahf
js
adc
repz
mov
push
sbb
mov
mov
sbb
pop
nop
jae
or
clc
cmp
and
jge
push
icebp
mov
repnz
stos
enter
cmc
fadds
add
jno
les
lock
sbb
ljmp
bound
dec
dec
lahf
mov
pop
mov
sbb
leave
out
jle
add
sarl
movsl
or
hlt
and
pop
dec
cmp
js
ss
ss
lea
or
adc
cmp
imul
or
or
push
std
cld
test
mov
add
cltd
rcrb
mov
insb
aaa
mov
mov
ret
ja
adc
addr16
das
jmp
cmp
xchg
nop
lods
sbb
insb
xor
mov
inc
out
sbb
mov
mov
fistl
rcll
push
cmp
push
mov
pop
aaa
pop
js
out
mov
xchg
insl
lcall
mov
in
cmc
adc
lret
adc
adc
loopne
sti
pop
lods
test
jbe
pop
aad
lock
inc
push
lds
mov
mov
adc
and
mov
daa
add
inc
adc
pop
and
out
add
push
mov
shrl
push
aad
jp
in
into
mov
stos
jae
imul
fwait
cld
gs
jo
subb
in
adcl
icebp
test
inc
fisubs
jns
mov
es
out
cmp
test
pop
stc
adc
jo
mov
dec
mov
dec
mov
andl
sbb
mov
imul
in
ljmp
cltd
sbb
xchg
mov
mov
movsb
cmp
testb
mov
pop
push
fisubl
push
cltd
push
sahf
sbb
fstl
ret
inc
sbb
jle
cmp
xchg
push
test
xor
aaa
mov
enter
jns
push
ror
inc
filds
push
clc
mov
mov
jno
stc
push
xchg
fdivrl
mov
out
ficompl
hlt
pop
fnsave
xor
aad
in
imul
xor
dec
in
int
insl
aas
test
out
sub
int
mov
arpl
xor
stos
pcmpgtb
xor
subl
sub
shll
sub
mov
enter
jns
jge
std
cld
pop
aaa
mov
out
vpmulhw
xchg
aad
addr16
jge
sub
lret
imull
repz
scas
pop
or
inc
jmp
les
jae
aas
andb
pop
daa
movsb
xor
stos
mov
cmp
loope
sub
pop
stos
mov
sbb
mov
negl
das
stc
or
sbb
daa
push
int
fnstsw
movsb
mov
or
repnz
insl
mov
push
nop
jmp
mov
mov
pushw
outsb
lods
adc
mov
hlt
imul
das
outsl
test
sbb
ret
xor
mov
scas
xchg
dec
cvtps2pd
in
dec
loopne
iret
pop
pop
mov
sbb
mov
or
jns
mov
push
mov
fwait
pop
loop
xlat
xor
jo
lret
cltd
subb
clc
call
popf
jbe
pop
lea
jle
cmp
loopne
add
sbb
enter
mov
stos
lahf
xchg
xchg
pop
jnp
lock
add
lcall
add
pushf
out
xor
and
ss
rclb
mov
and
push
cs
mov
jns
inc
loope
or
aad
aam
cmp
sahf
mov
ss
stos
xchg
mov
inc
push
push
push
mov
add
adc
jl
scas
aas
adc
shll
or
outsl
out
sub
xchg
xchg
xor
out
rcrb
inc
outsb
scas
outsb
fdivrl
pop
mov
jg
lahf
loopne
sub
mov
and
dec
out
mov
mov
jne
idivl
fisttpll
push
movsb
inc
leave
sbb
fiadds
xor
cli
mov
mov
cmp
mov
jmp
inc
test
arpl
test
xlat
fistl
outsl
mov
lsl
clc
shr
shr
out
ret
bound
jns
xchg
stc
jns
icebp
or
sub
inc
adcb
stos
xchg
sahf
ljmp
sbb
push
in
mov
pop
lret
or
sar
or
test
xchg
pop
jnp
and
cli
stos
xchg
mov
in
add
inc
xchg
mov
orl
adc
sub
das
dec
xor
pop
pop
in
fcomp
xlat
push
ret
jb
jno
cli
xor
sbb
fldt
jns
mov
scas
mov
mov
lods
movsl
imul
jnp
cmp
js
sub
icebp
adc
xchg
inc
lret
stos
lret
out
cli
fcmovnu
lods
xchg
scas
xor
xor
imul
ret
jle
inc
push
test
push
mov
xor
popf
mov
xchg
cmpsl
nop
lcall
sbbl
xchg
gs
push
js
or
mov
xchg
or
inc
data16
push
add
lods
daa
xor
std
mov
outsb
or
mov
cltd
shll
jge
mov
jbe
out
mov
loope
inc
sub
mov
cmp
xchg
lock
cmpb
aaa
sub
xchg
cmp
inc
sub
push
lcall
ljmp
sbb
and
test
lods
jns
leave
pushl
add
divl
mov
jb
aaa
dec
cmpb
lods
es
add
call
and
or
iret
and
aam
jle
dec
or
out
or
mov
lcall
sti
pusha
test
fs
insl
pop
std
pop
insb
mov
add
mov
rol
repz
cmp
outsb
cmp
add
pop
and
lret
mov
xchg
inc
adcl
mov
lock
cmp
push
xor
or
pop
mov
fwait
lret
stos
pop
scas
mov
test
and
push
push
xchg
and
mov
lret
mov
fcomi
fwait
dec
lahf
insl
xchg
mov
push
insb
test
add
or
fcmovne
push
pop
jmp
adc
push
pop
dec
out
and
fsubl
lods
test
arpl
mov
out
test
xorb
lods
push
xorl
sbb
arpl
xchg
push
sub
hlt
sbb
inc
dec
lods
cmp
jle
adc
sub
imul
jg
mov
adc
jecxz
lahf
jno
dec
mov
push
cmp
or
ds
and
and
add
in
mov
push
icebp
cmp
xchg
mov
shr
cli
mov
jns
imul
cmp
push
fidivs
outsl
cmp
xchg
inc
push
call
inc
add
adc
mov
xorb
and
sahf
pop
scas
xchg
pop
arpl
lahf
out
sbb
sarb
xchg
outsb
stos
aad
lret
lret
insb
cwtl
mov
dec
lock
mov
pop
sbb
mov
xor
mov
mov
loope
xor
pop
xor
mov
mov
push
xor
movsb
sahf
cmp
aam
rcll
adc
pop
jl
pop
push
fbld
dec
xchg
add
mov
lcall
xor
push
test
sub
aam
popf
push
sahf
push
xchg
bound
mov
ficompl
ret
add
inc
jg
sahf
aaa
mov
subl
mov
sti
inc
sub
mov
mov
mov
lea
out
add
rcrb
or
push
insb
nop
cld
push
cmpsl
xor
mov
cmpsl
jne
negb
dec
xchg
pop
inc
push
bound
push
mov
out
mov
stc
pop
add
dec
fwait
dec
cli
push
rolb
sbb
pop
inc
mov
push
xchg
lods
or
mov
aam
scas
ss
and
lahf
push
add
out
in
movsb
sub
cmp
dec
push
xor
into
loope
aas
pop
or
inc
andl
iret
mov
loope
xor
cmc
cwtl
mov
and
cltd
inc
in
cmp
mov
test
sbb
mov
fs
xchg
cmp
shlb
sbb
mov
add
mov
rolb
mov
jne
jo
pop
imul
sbb
lcall
push
pop
icebp
add
and
push
xor
mov
lock
xchg
xchg
sbb
pop
add
pop
call
sub
inc
into
sti
inc
mov
xchg
jecxz
pushf
xor
iret
sahf
test
lods
ret
inc
fstl
mov
jl
inc
fs
sub
push
cmovp
sub
popa
nop
pop
dec
pmulhuw
push
pop
scas
roll
mov
mov
xchg
mov
jge
sbb
sbb
lcall
adc
rep
xor
sub
sysenter
rolb
adc
mov
cmp
repnz
stos
roll
fisubs
ret
fdivrs
aad
jns
mov
cli
sbb
sub
push
adc
aaa
hlt
jge
and
dec
int
std
fwait
mov
or
aam
or
lret
mov
push
mov
lods
pop
lds
dec
sub
jns
or
out
xchg
scas
hlt
mov
or
cmpsb
ret
mov
mov
stos
in
rol
sub
notl
jbe
xchg
loopne
and
adc
and
sbb
in
shrb
jnp
rcrl
and
out
push
xlat
mov
int
gs
inc
and
mov
fldenv
add
pop
rcr
lock
or
mov
add
test
clc
xlat
mov
popa
pop
pop
pop
mov
rcrl
mov
rcll
add
mov
mov
ror
adc
inc
cmp
loopne
inc
xlat
stos
das
xor
in
sub
les
add
pop
push
mov
cwtl
jno
jecxz
shlb
mov
insl
lret
fwait
imul
insl
and
addps
jbe
jl
in
fnstsw
test
lcall
mov
sbb
add
loop
cmp
outsb
dec
cmpsb
xor
inc
xchg
mov
xchg
pusha
cmp
ss
hlt
xchg
outsb
add
arpl
xchg
aaa
adc
jmp
stc
bnd
mov
mov
push
inc
testb
xor
gs
sub
or
push
push
rclb
pop
fstpt
xchg
xor
rolb
das
add
mov
xchg
dec
jl
mov
cwtl
pop
test
jne
loopne
adc
xor
loopne
jnp
jmp
call
test
and
xchg
push
add
lret
mov
jmp
int3
push
sbb
mov
std
out
test
mov
aaa
inc
pop
outsl
xor
fstp
cmp
test
nop
xchg
adc
xchg
jbe
jmp
push
cmp
fsubl
xor
popf
iret
add
pusha
into
out
int3
inc
adc
sbb
or
xor
xchg
aas
lahf
dec
ja
and
rol
xchg
jne
mov
jecxz
cmc
shld
ss
jb
mov
hlt
mov
sti
mov
inc
icebp
in
out
dec
andb
jbe
enter
aad
lret
out
xor
gs
rol
aaa
xchg
pushf
xchg
jg
testb
daa
jae
outsb
rcll
jns
adc
ljmp
xor
push
stos
je
lahf
and
sub
fldenv
ffreep
nop
repnz
mov
mov
in
pop
int
into
shll
lahf
mov
mov
cs
leave
jle
nop
push
inc
mov
je
call
xchg
pop
xchg
and
not
scas
shll
mov
cwtl
cmp
int
xchg
pop
cs
ja
stc
jecxz
insl
inc
add
out
sbb
call
ss
lock
mov
loope
insb
mov
repz
lahf
pop
les
daa
cmp
test
mov
push
jb
inc
fsts
mov
or
add
dec
and
pushf
adc
fiaddl
nop
fcomip
pop
mov
adc
and
jle
jg
aam
in
dec
sub
jecxz
mov
arpl
cwtl
jno
movsb
or
ret
xor
jl
cmp
imul
fsub
xchg
push
outsl
sub
movsb
sub
dec
xchg
es
roll
push
jnp
pop
es
hlt
push
stos
xor
mov
push
mov
sahf
gs
mov
roll
and
ja
push
sbb
pushl
pop
or
movsb
pop
sub
arpl
ficompl
stos
dec
jecxz
mov
lcall
addb
dec
adc
xchg
lods
or
jae
popf
pop
dec
imulb
pop
mov
sub
test
jns
xor
xor
dec
mov
dec
jno
ret
mov
cltd
int
cmp
xchg
mov
sbb
mov
pop
inc
adc
or
sub
push
sub
pop
mov
xorb
xor
xlat
jg
pusha
aaa
std
sbb
mov
adc
inc
shr
lea
in
outsb
rcr
out
jno
cmp
rorb
sub
inc
adc
mov
call
roll
sbbb
mov
js
push
mov
mov
xor
xchg
push
gs
jne
es
cmp
and
shll
and
outsl
lcall
mov
or
adc
notb
push
dec
lret
out
pop
inc
mov
add
adc
daa
add
clc
out
sbb
scas
js
push
jp
lock
dec
dec
adc
lock
or
push
mov
sarb
movb
inc
pop
andl
cmpsl
out
jae
jge
mov
pop
mov
cmc
fcomps
sub
or
add
mov
cmp
daa
and
push
sub
rcll
mov
nop
cwtl
sti
ss
in
ret
jnp
pop
jge
jne
push
sub
fsubs
xor
cmc
repnz
mov
daa
scas
cltd
mov
adc
sub
add
into
push
mov
mov
int3
add
arpl
adc
sub
adc
xchg
fwait
add
cmp
xchg
xor
cmpsb
sbb
mov
cmp
in
inc
cmpsl
movsb
js
cmp
inc
pop
jbe
xor
sub
test
ficoml
shl
xor
int
mov
push
jb
and
add
mov
inc
hlt
mov
cwtl
gs
cmp
sbb
mov
outsb
mov
or
clc
mov
lea
cmp
push
imul
xchg
mov
and
add
mov
out
arpl
or
mov
or
rcr
xchg
sbb
push
out
jns
or
mov
dec
xchg
dec
loopne
push
xchg
xor
mov
lcall
int3
arpl
pop
mov
push
mov
mov
pusha
fdivr
adc
lret
sar
ss
scas
xchg
enter
or
js
sub
mov
pop
loop
ret
cmp
popf
pop
es
iret
popf
popa
xchg
shll
mov
mov
adc
fiaddl
dec
test
ljmp
lods
jmp
movsl
sub
cmp
scas
aam
mov
dec
je
addr16
xchg
mov
call
aaa
push
pop
hlt
pop
not
add
loope
repnz
dec
add
cmp
adc
dec
push
out
mov
jl
mov
pop
jns
in
mov
mov
mov
cmp
ficompl
in
push
ds
in
fidivs
repz
sbb
sbb
test
in
loop
cmpsb
fstpt
and
and
loopne
iret
jmp
xchg
pop
jnp
pop
jl
sub
fs
and
imull
pop
arpl
and
and
iret
fwait
lcall
jno
shll
push
jle
mov
mov
test
scas
pop
mov
and
push
lods
cmp
mov
sbb
adc
std
sbb
jmp
divl
xchg
imul
inc
sbb
sub
add
cmpsb
mov
cmp
shr
out
jb
inc
cmp
push
xlat
lock
int3
cld
mov
call
shlb
add
ds
aaa
stos
jbe
enter
jnp
xor
loopne
std
xchg
add
or
cmc
rorb
sub
pop
in
insb
jae
push
or
pop
jae
push
andb
rorl
fistps
aas
pop
jne
xchg
popf
imul
fstpl
pop
je
out
cmp
adc
aam
or
jnp
cli
mov
fs
push
jnp
ds
mov
inc
outsl
in
popa
jmp
ja
or
jle
lds
in
jns
mov
dec
js
cmp
jg
rol
add
in
stc
cmp
fwait
int3
lds
roll
jnp
es
and
loopne
inc
in
stos
lcall
sub
jp
adc
mov
mov
loop
les
inc
cs
sub
pushf
mov
or
or
add
lret
push
cltd
cwtl
push
stos
adc
adc
into
or
cld
std
inc
mov
sbb
cmpsl
cmp
in
shrl
nop
jmp
sbb
inc
ds
dec
lahf
jns
xchg
andb
out
push
outsb
jnp
gs
push
xchg
sti
or
adc
outsl
inc
sbb
inc
loope
lret
lret
aas
pusha
xor
or
mov
inc
ss
int
mov
clc
jbe
int3
xchg
cmpl
hlt
sarb
adc
inc
mov
adc
into
mov
sub
or
add
and
jg
jmp
leave
stos
adc
ds
cs
mov
rorb
push
loopne
scas
aad
or
subb
mov
sub
mov
in
jne
mov
clc
rcll
stc
sbb
adc
and
mov
ljmp
outsl
push
mov
jne
pop
or
pop
dec
sbb
dec
mov
add
jge
les
sbb
jmp
mov
xor
rclb
cmp
jbe
out
inc
cmc
dec
sbb
sahf
inc
lods
push
jmp
jp
js
lods
cmc
push
movl
xchg
dec
je
fists
outsl
push
aam
pop
xlat
mov
cmp
or
in
test
lods
imul
lods
cltd
insl
dec
mov
pop
xchg
sbb
cltd
cli
add
mov
lahf
rcrb
imul
xor
cmp
cmpsb
mov
pop
repnz
scas
imul
jecxz
movsl
inc
mov
into
pop
dec
rcl
pop
mov
hlt
jo
adc
push
dec
lods
and
or
add
pop
dec
out
movsb
into
mov
xlat
jecxz
add
repz
mov
testl
mov
call
daa
int
push
cmp
adc
ret
cmpb
jae
dec
daa
pop
loopne
mov
das
int3
aad
loopne
std
ss
or
out
xchg
mov
rol
mov
jbe
cmpsb
xorl
jmp
mov
add
xchg
scas
cmpl
mov
jno
into
or
pop
dec
lock
cmp
ss
mov
add
sbb
push
xchg
add
cwtl
xchg
mov
fwait
hlt
or
fbstp
daa
sti
dec
fxch
push
loop
pop
adc
mov
adc
adc
ret
xor
sub
jno
movsl
ja
lret
movsb
outsb
loope
jne
test
pop
cmp
mov
add
pop
dec
les
add
sub
pop
notb
rorb
in
pop
mov
sar
outsb
lea
pop
sbb
ljmp
fimuls
push
test
rcrb
ja
sub
xchg
adc
pop
cmp
mov
xor
or
sbb
mov
pop
mov
out
sar
xchg
and
dec
pop
in
scas
inc
hlt
xchg
and
mov
and
mov
imul
enter
xchg
pop
inc
mov
adc
jne
aaa
scas
movsb
xchg
sbb
enter
sbb
adc
pop
mov
in
mov
pop
add
cmpsb
cmp
lods
sub
jne
and
and
mov
sub
push
cmp
cmpsb
iret
or
into
ficompl
shl
dec
mov
outsl
cs
movsb
sub
sub
test
faddl
subb
mov
enter
xchg
jl
dec
xor
cmp
fcmovu
inc
fildl
cmp
xchg
imul
push
jnp
sbb
or
xor
enter
outsb
pusha
adc
std
test
cli
repnz
idivb
inc
mov
outsl
gs
xlat
shrl
fidivrl
js
push
outsl
cmp
or
and
testl
add
test
push
push
sub
lcall
outsl
and
inc
inc
push
inc
sahf
add
das
ror
test
lret
scas
push
loopne
dec
out
ret
mov
sub
xchg
push
push
ret
fisttps
fmul
stos
sbb
int
addr16
or
cs
xor
and
bound
mov
mov
mov
push
sbb
push
adcl
and
std
mov
pop
lods
cmp
scas
scas
js
shll
and
sub
insl
testl
pop
inc
gs
or
jmp
lock
xor
jbe
adc
add
ds
mov
js
movsl
inc
ljmp
push
pop
arpl
xlat
jmp
test
inc
mov
mov
mov
rcr
xor
dec
scas
add
ds
xor
xor
pop
xchg
lds
test
fisubl
popf
xlat
adc
lock
jge
or
sub
mov
push
ret
push
xchg
popf
std
xlat
mov
push
fldl
and
mov
mov
pop
add
stc
xor
add
cld
clc
xor
hlt
add
cmc
mov
xchg
out
icebp
xorl
fistl
xor
inc
ja
lods
jbe
pop
pusha
mov
idivl
pop
inc
addr16
xchg
dec
cmp
in
or
adc
dec
dec
sahf
ds
mov
mov
test
xchg
cmp
ds
rcl
arpl
push
sbb
dec
lea
sub
mov
mov
push
mov
mov
jne
push
and
decl
mov
scas
mov
data16
dec
ja
add
and
out
movsl
nop
mov
adc
ds
and
xchg
loopne
sub
sbb
add
jmp
rcll
or
pop
xchg
lods
mov
mov
mov
es
dec
iret
cmp
or
jns
or
repz
xor
aaa
cs
ss
xor
shll
push
inc
or
sbb
fs
push
or
loop
inc
cmp
insb
cmp
sti
push
fimull
pop
mov
sbbl
mov
enter
xchg
push
popl
shl
and
push
adc
cmpl
pushf
inc
mov
inc
pop
inc
jg
lea
xchg
fidivs
jle
inc
stos
mov
xor
bnd
jnp
mov
dec
ss
sbb
jno
mov
loopnew
ljmp
adc
fs
scas
push
cld
gs
imul
ljmp
and
in
lret
mov
ret
mov
push
nop
and
popf
ror
sbb
push
pop
into
leave
cwtl
fimuls
push
mov
push
mov
mov
mov
inc
cld
test
cmp
xlat
push
lds
push
lcall
and
mov
dec
in
pop
pop
in
pushf
inc
sbb
nop
inc
xchg
fadds
lcall
fadd
cmp
cmp
out
cld
rclb
push
and
ficoms
xchg
leave
js
lods
fsubrl
outsb
cmp
jg
icebp
mov
jecxz
hlt
sbb
lahf
pop
aad
gs
popf
pop
push
adc
sub
and
mov
pop
inc
push
cld
outsb
lcall
push
outsl
and
cmp
mov
and
sub
pop
icebp
es
add
insl
or
movsl
xchg
sbb
ret
sub
movsl
dec
je
sbb
ficoms
sub
orb
adc
out
into
insl
inc
loope
idivl
push
outsl
cmp
xchg
lcall
push
daa
sahf
jbe
add
pusha
sbb
aaa
loopne
xchg
or
ds
ds
inc
push
sbbl
popf
mov
jecxz
aad
xor
mov
pop
rorb
xchg
mov
ret
leave
mov
mov
out
mov
icebp
insb
outsl
rol
xchg
fstpl
push
mov
into
fidivl
nop
es
jecxz
test
dec
jecxz
sub
and
je
push
int3
inc
fs
daa
out
xor
fdivrl
sbb
push
or
jl
bound
jle
adc
es
into
in
dec
mov
cmp
sbb
pop
mov
sbb
lcall
ss
jnp
adc
xlat
adc
stos
sub
mov
popf
or
mov
jl
lods
inc
sbb
sti
or
adc
iret
sub
orb
das
jmp
mov
add
pop
sub
lods
mov
aas
dec
cmp
mov
iret
adc
inc
or
cmp
cltd
clc
in
mov
les
aaa
out
fwait
mov
jl
adc
cs
daa
rcrl
fmull
add
push
push
xor
add
pop
or
push
cwtl
cmpsb
mov
nop
jmp
out
fwait
add
scas
or
mov
cmpsl
inc
cld
out
xor
jge
push
pusha
mov
inc
inc
dec
jmp
mov
adc
addr16
xchg
mov
insb
insl
mov
mov
sub
je
clc
leave
pushf
iret
into
or
and
dec
in
movsl
xchg
mov
mov
in
xor
rclb
jae
and
js
dec
enter
mov
sbb
cmp
jmp
fcoms
jecxz
inc
cmp
add
push
notl
mov
rolb
out
roll
insb
dec
fwait
push
loopne
sub
test
cmp
pushf
jo
or
push
sub
std
pop
and
dec
aaa
jno
das
arpl
xor
sbb
int3
stc
dec
addr16
and
test
pusha
testl
cmp
dec
aas
xchg
xchg
cmp
sub
lods
mov
rclb
aad
and
or
imul
adcb
subb
mov
cmp
mov
cmpsl
xchg
js
fisubl
inc
push
pop
add
xchg
mov
or
enter
pop
cli
xchg
cmp
jb
inc
dec
sbb
out
xchg
rcll
arpl
mov
dec
jne
jae
cmp
loop
inc
and
push
scas
dec
pop
sbb
push
cmpsl
repz
pushl
mov
addr16
and
dec
inc
add
cwtl
sub
mov
out
lods
jns
sub
mov
aad
into
and
outsb
loop
lods
dec
jle
and
imull
hlt
test
push
xchg
sbb
pop
imul
les
or
test
dec
add
mov
sub
jb
lret
xchg
mov
xchg
sub
adc
dec
mov
pop
xchg
shlb
adc
mov
fdivrs
cmpsl
mov
sub
fisubrs
mov
cmc
mov
push
test
addr16
adc
rorl
lods
or
lods
mov
mov
cmp
loop
ret
push
or
in
or
cld
and
xchg
sub
test
lcall
leave
lcall
sbb
sbb
pop
andps
xor
out
js
loop
repnz
fcoml
test
sbb
lds
jl
jmp
adc
imul
push
dec
movsl
lods
test
push
scas
pop
cmc
push
pop
cltd
pop
orb
outsb
clc
aas
jg
xchg
sub
jge
mov
rcrb
push
lds
mov
cltd
arpl
aaa
adc
mov
dec
push
xchg
ja
push
pop
fsubrp
push
mov
or
inc
add
out
ljmp
mov
daa
pop
inc
xchg
call
insb
push
xchg
add
cmp
add
inc
enter
lret
mov
mov
and
data16
stos
mov
repnz
nop
push
in
leave
xor
das
mov
mov
pop
add
adc
adcl
fnstenv
add
cs
scas
bnd
out
adc
imul
xor
cld
cmc
xchg
sbb
jecxz
dec
pop
dec
lret
or
mov
aaa
gs
mov
inc
sub
push
pusha
test
mov
push
push
cmp
imul
xchg
mov
sbb
outsb
lcall
mov
adc
into
lcall
pop
sub
jbe
cmp
stc
xchg
jb
into
xor
ret
sbb
lock
inc
adc
cmpsb
vmread
lahf
int
mov
mov
adc
xor
xchg
jmp
inc
shll
pop
and
je
inc
insb
jno
out
or
lock
inc
add
mov
push
dec
mov
push
out
pop
add
adc
push
out
inc
adc
sub
xor
pop
mov
rorl
popa
jp
cs
loop
cmpl
dec
les
mov
mov
xchg
sti
cmc
add
out
popa
mov
mulb
jg
insb
ss
lods
xchg
jmp
pushf
sub
enter
cmc
jp
mov
ss
cltd
mov
rolb
pop
ret
inc
xor
push
cmp
cmp
loopne
jns
imul
leave
into
lods
sub
mov
movsb
mov
int
mov
out
mov
inc
adc
mov
jns
push
adc
jbe
inc
xchg
jg
jb
insb
xchg
enter
jno
test
loop
mov
mov
xchg
jle
scas
dec
cwtl
xor
xor
and
pop
test
mov
push
mov
jp
js
push
pop
xor
pusha
stc
adc
mov
dec
scas
jp
adc
js
xchg
mov
ret
lcall
adc
pop
xor
push
adc
les
addr16
scas
jmp
iret
ja
mov
mov
sar
leave
jg
pop
push
dec
and
enter
sbb
jne
pop
xchg
imul
cmp
xor
inc
pusha
insb
cs
imul
test
xchg
xor
dec
popa
mov
and
cmc
jl
xchg
imul
iret
ss
jl
hlt
sbb
cltd
jecxz
stos
sub
mov
xchg
test
mov
shr
xchg
cmp
out
aad
mov
jo
ret
xchg
into
out
dec
mov
arpl
and
cmp
mov
inc
out
sub
enter
pop
xor
rcll
mov
xchg
sub
jecxz
addr16
aam
xchg
in
int3
std
mov
push
inc
xor
and
frstor
xchg
leave
xor
inc
push
cmp
insl
inc
aad
xor
imul
jg
cwtl
mov
insb
mov
pop
adcb
repnz
mov
scas
shll
adc
insb
jl
loope
shll
stos
mov
lods
xchg
xchg
ljmp
nop
cmpsb
sub
in
push
data16
aas
andb
sbb
in
shl
aam
cmpb
adc
stos
ja
xchg
decb
lods
xchg
xor
sub
out
pop
insb
sub
xchg
xchg
int
mov
jle
fldl
dec
hlt
dec
inc
pop
imulb
xchg
push
pop
mov
adc
jo
or
adc
ja
inc
cmp
stc
cmp
mov
clc
sbb
jle
xor
push
cmc
inc
leave
pop
adc
js
out
shl
lods
ljmp
aas
sbbb
test
stos
lahf
and
add
sbb
cmc
adc
fs
or
test
cmpsb
loop
sub
sbb
jbe
ja
and
in
jns
int3
mov
mov
ret
cmovge
mov
mov
add
mov
pop
outsb
cmp
push
fwait
mov
xor
xchg
inc
add
mov
stos
adc
jne
mov
dec
xor
pop
sub
test
adc
fnsave
cmp
es
push
lods
fdivs
push
insb
int3
and
sub
mov
mov
cltd
out
mov
mov
daa
in
mov
mov
dec
jg
test
dec
cmpsb
adc
jecxz
lahf
xchg
shll
cmpsb
mov
push
pop
push
mov
loope
je
sub
fbld
cmpsb
jno
fidivl
mov
mov
pop
test
stos
test
sbb
jne
push
bound
test
rorl
cmp
aam
lods
jl
rorl
ret
icebp
pop
xchg
js
dec
dec
repz
cltd
stc
sti
loopne
mov
andl
int3
mov
fmulp
pop
inc
sbb
push
pusha
xchg
cmp
push
adc
gs
loope
push
daa
stos
push
popa
push
popa
or
sub
dec
push
es
fwait
jne
adc
mov
mov
adc
in
inc
inc
movsb
ljmp
je
inc
and
es
bound
sbb
cmc
popa
outsl
xchg
lcall
pop
arpl
cmp
xchg
inc
mov
scas
sub
aas
pop
out
mov
psubsw
ljmp
jo
jl
sbb
add
lods
jae
jg
imul
jge
or
and
xlat
dec
sub
mov
imul
xchg
lret
mov
xlat
into
es
inc
aad
jne
movsl
sub
mov
pop
insb
and
cmp
ficoms
push
mov
sub
mov
ljmp
mov
pushf
popl
inc
ficoml
dec
arpl
add
mov
jg
in
hlt
dec
or
lea
bound
js
and
lods
daa
inc
pop
hlt
loope
push
jae
mov
lock
aas
fildll
dec
arpl
and
and
jp
into
fisubs
insl
ret
fists
inc
jae
ds
push
stos
lods
addr16
xchg
adc
testl
mov
pop
in
out
daa
stos
xor
scas
fwait
daa
xchg
popa
or
outsl
fadd
xchg
sub
sbb
inc
mov
cmpsb
sub
int3
add
jg
in
test
inc
ret
in
inc
rcll
ret
cmp
push
test
mov
stos
imul
jmp
adc
popf
shll
lods
fcomps
adc
out
jle
into
cmc
sbb
pop
xor
sub
fidivl
inc
ficomps
push
inc
sbbl
push
dec
inc
push
lds
cmp
mov
and
mov
out
nop
xchg
stos
mov
idivb
fimull
push
stc
cltd
sbb
dec
inc
int
mov
fmuls
orb
mov
mov
addr16
jle
and
push
iret
add
fldl
rclb
adc
and
xor
dec
push
jmp
sub
outsb
mov
dec
lods
sbb
or
nop
test
popa
mov
inc
mov
push
add
in
out
jg
mov
js
or
or
leave
xor
cld
inc
std
cmp
arpl
pusha
jbe
fs
or
sbb
imul
fs
das
shlb
clc
or
movsl
sub
mov
jecxz
mov
insl
sbb
adc
ljmp
stos
scas
add
pushf
push
xchg
dec
mul
cmpsl
jp
or
fstpl
outsl
inc
in
addr16
lcall
jge
mov
movsb
push
add
ret
sub
pusha
addb
mov
aad
cli
pushf
jbe
sbb
loope
jb
or
inc
leave
cli
loopne
gs
mov
ret
sub
mov
jbe
mov
jne
add
xchg
roll
adc
xlat
mov
lods
inc
js
into
xor
je
adc
imul
inc
out
push
inc
sarl
pop
outsb
shll
mov
out
or
push
mov
mov
push
dec
cmp
xor
push
lock
and
cmp
lea
movzwl
jle
andl
xchg
mov
inc
xchg
loope
lahf
cwtl
les
dec
lret
lods
xchg
ret
lods
sbb
xchg
push
loope,pn
aam
mov
fcompl
cmpb
addr16
jns
and
outsl
sub
sub
sbb
rcr
repnz
mov
jecxz
jb
xchg
insl
aaa
jmp
cmp
idivb
popa
add
aas
sbb
adc
mov
xor
rcr
sub
cmp
add
push
shr
adc
js
lret
dec
jno
and
or
pop
adc
cwtl
cmp
inc
sub
inc
jbe
cmp
xchg
push
je
lret
add
repz
mov
out
jl
pop
mov
add
iret
or
mov
xchg
adc
jecxz
mov
fsubrs
pop
std
mov
mov
out
sub
dec
mov
incl
mov
popf
sub
push
hlt
das
xor
nop
les
sub
ds
dec
std
cld
mov
mov
or
or
cmp
jb
xor
fxch
adc
mov
sahf
jb
cwtl
mov
icebp
flds
adc
adc
cld
jp
lret
jl
xlat
add
cmpl
jae
fwait
pop
adc
aam
pop
insb
fistl
cmc
and
arpl
xchg
jecxz
bound
sub
movntps
out
in
stc
pop
sub
insl
or
lods
shr
push
mov
cltd
and
mov
pushf
xor
mov
and
mov
push
add
sbb
jl
out
lds
cmpb
out
rcrb
fs
jp
mov
rorl
mov
adc
xor
dec
inc
fsts
mov
mov
outsl
push
mov
jp
cmp
bound
out
test
mov
lea
gs
adc
fmuls
dec
mov
and
ja
sbb
xchg
fistpll
push
cltd
inc
mov
inc
xchg
cwtl
loop
mov
and
in
inc
jp
sahf
sub
and
jmp
sbb
xor
dec
shl
cmp
mov
mov
add
inc
push
pop
leave
js
xchg
rcll
xchg
pop
mov
out
lods
mov
xchg
pop
pop
loop
push
pop
jl
sbbl
mov
inc
dec
test
pop
fucom
xor
in
pop
jge
adc
pop
and
xchg
dec
in
jg
jmp
fs
xchg
mov
adc
mov
loop
cld
mov
aad
push
loope
dec
sbb
mov
push
popa
aam
int
jae
mov
jne
push
pushf
push
and
mov
sbb
movsl
dec
push
mov
mov
add
xchg
mov
outsb
enter
mov
ret
pop
psraw
in
xchg
jecxz
push
rcrl
jmp
es
in
sub
dec
int3
mov
xchg
orb
inc
lret
push
add
adc
inc
jae
inc
xor
push
mov
in
dec
jbe
stos
xor
cmp
aad
out
xor
stc
std
inc
sbb
or
pop
cmc
xor
xor
mov
jbe
ds
lret
xchg
mov
sub
pusha
les
rclb
inc
aaa
popf
outsl
out
aam
mov
test
movl
mov
cld
and
ror
insb
clc
xchg
jb
jmp
int3
das
loop
repz
fnstenv
cmpsl
xor
lods
fdivrs
mov
sbb
out
cmp
cmp
mov
jl
loop
fcompl
not
es
cltd
pop
mov
idivb
cld
and
adc
sbb
icebp
jae
jae
fdiv
inc
xchg
xchg
popf
lods
mov
mov
pushf
inc
mov
or
sub
xchg
sbb
or
pop
pop
lcall
dec
fcmove
dec
fldl2e
iret
sub
insl
jp
int3
into
pushf
jle
and
and
mov
sub
xor
movsl
xor
lret
jnp
out
cmpsl
out
int
mull
or
outsb
imul
std
inc
jno
dec
xchg
enter
mov
push
outsl
and
insb
imul
push
addb
iret
mov
test
int3
mov
mov
lods
mov
sbb
add
mov
cmp
pop
xor
shl
push
cmp
xor
mov
cmp
int
push
cmp
xchg
loopne
ja
sbb
scas
ds
lahf
rclb
nop
fdivrs
cmp
or
cmp
aam
and
jle
dec
fsts
int
call
addr16
adc
es
aas
mov
out
pop
imul
mov
test
pushf
mov
fnstcw
jge
pop
inc
test
imulb
or
jae
add
nop
test
stc
dec
sbb
xor
add
loopne
cmp
arpl
enter
or
and
repz
xchg
adc
pop
ss
loop
lahf
and
mov
fs
or
mov
push
sub
push
fmulp
pop
roll
cmp
in
icebp
movsl
xchg
xchg
int
add
repnz
out
ds
dec
pop
cmp
jecxz
and
mov
cmp
mov
shll
mov
and
hlt
dec
sub
mov
jae
jecxz
mov
sbb
jmp
iret
orl
xchg
add
test
int
jnp
ficoml
inc
push
sbb
hlt
insb
add
faddl
lea
in
mov
mov
mov
or
jne
repz
clc
or
and
dec
lret
dec
sub
pop
inc
je
or
in
cli
dec
inc
jecxz
jne
loop
dec
loope
lcall
movsl
dec
call
push
enter
mov
or
xor
test
jle
dec
ja
int
inc
outsl
push
xor
ljmp
jmp
in
lret
loopne
and
dec
xchg
mov
in
mov
js
sub
pop
add
jp
sub
sbb
shrl
jmp
stos
push
xchg
and
dec
das
das
inc
fiaddl
xchg
dec
dec
mov
mov
imul
iret
movsl
popf
jae
sbb
mov
pop
ficomps
cli
mov
stos
cmpsl
mov
adc
inc
or
or
ret
xchg
mov
mov
sbbl
add
lock
jae
inc
xchg
pop
cld
adc
mov
mov
add
je
push
iret
push
out
sub
mov
adc
scas
dec
fidivrs
push
enter
fists
aad
lret
addr16
hlt
jmp
std
push
jbe
inc
xchg
mov
add
adc
aad
or
inc
jle
inc
mov
rclb
cmp
insb
jb
ljmp
mov
aam
jo
push
loope
sbb
jb
out
jmp
cmpsl
ror
xchg
stos
and
dec
add
lret
aam
push
ljmp
clc
mov
mov
out
enter
jnp
and
fsubrl
add
mov
fs
ljmp
mov
push
mov
ret
jg
xchg
addr16
xchg
dec
leave
and
vmovss
lret
mov
stc
mov
mov
insl
sub
mov
shr
pop
icebp
cmp
inc
ss
sub
and
or
test
pop
int
sub
outsl
idivl
add
gs
xor
movsl
inc
mov
out
and
ret
adc
scas
sub
and
out
mov
mov
int3
ret
shrl
fsubs
ss
add
in
adc
dec
out
outsb
inc
pusha
cwtl
jnp
cs
xlat
imull
pushf
pop
ds
add
add
aam
inc
nop
pushf
das
pop
mov
aam
mov
cmc
mov
pop
loopne
out
movsb
cld
pop
gs
pop
hlt
pop
xor
nop
dec
mov
xor
push
lock
ds
pop
pop
jbe
or
lock
or
ror
xor
mov
jae
fnstsw
lods
push
pop
js
aas
in
mov
mov
daa
addr16
inc
in
in
es
stos
pusha
push
inc
mov
inc
test
sbb
sahf
fdiv
mov
jecxz
arpl
sbb
leave
lret
cli
pop
xlat
jae
in
movsb
inc
mov
inc
test
inc
xor
mov
jl
pop
andl
out
xor
scas
icebp
movaps
mov
and
test
jmp
xor
cld
iret
mov
adc
pop
ja
mov
ret
push
sbbb
add
add
mull
cmp
rol
sub
xchg
xchg
into
daa
gs
inc
test
mov
test
push
push
push
jo
push
nop
clc
fstps
dec
test
adc
mov
jne
jl
adc
sbb
jnp
je
jae
sub
dec
addr16
mov
push
push
jo
data16
lahf
push
mov
out
int
sbb
push
aam
mov
ret
and
jbe
dec
inc
lock
jno
jmp
jecxz
mov
ret
jge
adc
mov
cmpsl
adc
push
and
repnz
test
icebp
insl
lods
shlb
xchg
js
in
mov
add
push
data16
jecxz
pop
jge
sub
fs
out
jb
xor
cltd
push
xor
ss
imul
call
inc
xchg
pushf
hlt
lods
rol
pop
or
or
xchg
push
or
fcompl
xlat
add
into
cld
sbb
arpl
mov
xlat
push
add
jle
mov
push
in
movsl
push
lds
lret
fucom
lea
sbb
dec
or
or
pop
fsubl
sub
inc
aam
imulb
sahf
out
cmpsb
out
sar
pop
leave
inc
dec
pop
rorb
mov
inc
jae
rcll
lcall
xor
xchg
cmpsb
insb
negl
rcrl
sbb
das
int
dec
add
mov
dec
xchg
or
mov
push
std
cltd
int
inc
popf
roll
jae
push
xchg
inc
gs
gs
mov
hlt
adcb
scas
xor
or
xor
out
hlt
lds
pop
add
mov
mov
jne
jge
and
push
xchg
nop
sbb
outsl
dec
dec
dec
push
push
dec
push
adc
imul
cmpsb
xor
js
int
jmp
mov
int3
cmp
fs
popf
jnp
sbb
pop
int
movsb
aam
adc
mov
mov
cmpb
or
push
inc
popw
xor
adc
adc
push
or
xchg
das
adc
cs
and
adc
ljmp
mov
jmp
aad
movsl
fwait
cmpsb
pop
lea
cmp
sub
or
mov
jp
add
add
icebp
jae
dec
enter
push
adc
in
jb
roll
push
cmpsl
mov
jmp
cmpsb
xchg
arpl
fnstsw
inc
mov
cmc
xor
and
outsl
loop
pop
test
rcrb
sub
and
mov
inc
dec
ret
ds
sub
sarb
pop
and
xchg
divl
sbb
enter
les
xor
mov
out
add
repz
pop
les
push
pusha
pop
repz
xor
sbb
jbe
mov
push
les
add
imul
add
minps
jnp
dec
sub
push
fstpt
into
scas
inc
inc
inc
fimuls
sbb
cmpsl
push
xchg
adc
adc
mov
or
testb
mov
mov
adc
xchg
mov
add
out
movsl
js
xchg
cmp
xlat
xchg
inc
dec
cmpsb
xchg
xor
das
rcrl
mov
imul
fidivrs
icebp
pop
movsb
inc
fdivrs
dec
jne
test
xor
mov
mov
xor
push
aad
out
out
nop
or
pushf
pusha
aad
scas
incb
nop
pop
add
int
xchg
cmp
addr16
loop
in
adc
jp
jp
fdivp
jge
push
dec
je
addr16
mov
push
xlat
mov
inc
sarb
push
jmp
idivb
add
or
mov
jnp
jo
test
in
imul
pop
inc
pop
int3
inc
cld
loope
push
sbb
fwait
jb
fsts
mov
push
cmp
inc
or
sub
jno
adc
cli
jle
cmpsb
sbb
cmp
andl
leave
jae
pop
imul
mov
les
addr16
test
pop
pop
push
xchg
adc
mov
stos
inc
iret
imul
out
add
cmp
enter
in
jns
outsb
gs
mov
xor
dec
push
jb
in
jp
iret
cmp
dec
inc
sbb
ficoml
xchg
lds
cs
adc
xchg
mov
xchg
dec
ljmp
icebp
jmp
mov
lret
sub
hlt
testl
adc
jmp
out
nop
cmp
mov
cmp
push
test
clc
jle
rcrb
or
sti
xchg
mov
mov
outsb
xor
cwtl
rcrl
ljmp
ret
xchg
xor
mov
xor
into
adc
nop
push
call
lods
imul
pop
rcrb
jne
xchg
add
sti
insl
sbb
mov
das
xchg
inc
xchg
xchg
push
sahf
sub
fsubrl
inc
pop
sbb
xor
pushl
int3
in
leave
xor
push
pop
mov
mov
aam
dec
out
push
mov
push
add
jecxz
mov
nop
and
loope
cmc
das
scas
jmp
push
mov
faddl
aad
cmc
enter
test
or
mov
popa
or
sub
outsb
jl
or
in
xchg
ja
lock
loop
inc
shlb
jecxz
repnz
pop
add
or
fiadds
stos
xchg
lods
mov
xlat
dec
out
sbb
int3
lods
jmp
adc
add
data16
mov
mov
inc
out
mov
or
movsb
dec
lahf
xor
jmp
inc
ss
push
andl
jns
ss
popa
mov
cmp
fcomps
call
mov
cwtl
cmp
add
out
sti
mov
idivb
mov
stc
pop
rolb
mov
mov
push
mov
lock
push
ficoms
adc
enter
test
cmp
xchg
jns
or
test
xchg
bound
jb
push
fldcw
inc
movsb
pushf
adc
es
mov
push
pop
mov
pop
ds
out
clc
cmp
cs
push
ss
sbb
jno
or
cmp
imul
gs
aaa
lret
scas
repnz
push
fmull
fisttpll
outsl
test
out
repz
fldt
int
jnp
test
cs
es
xor
add
pop
mov
scas
rorb
leave
test
mov
or
int3
adc
and
sub
mov
inc
movsl
mov
nop
outsl
roll
mov
out
jbe
pop
inc
cmc
jecxz
sbb
stos
sbb
or
jmp
hlt
out
dec
sub
mov
data16
leave
jae
mov
lock
add
fadd
sbb
adcl
mov
fcmovnu
add
pop
cld
mov
dec
mov
mov
fdivs
pop
add
lods
inc
loope
test
fimull
mov
dec
or
mov
or
sti
sub
push
inc
mov
out
mov
push
cmp
movsl
shlb
or
leave
dec
or
lds
xchg
repz
lock
jecxz
fldl
and
push
cmpsb
ds
adc
cmpsb
mov
mov
push
movsb
in
scas
lret
ljmp
mov
lds
jl
mov
ret
sbb
loop
cwtl
jne
iret
orl
popa
jbe
or
xlat
push
add
dec
add
divl
test
push
mov
rcll
or
and
jecxz
mov
int3
gs
pop
pop
lods
mov
out
mov
fistpll
inc
dec
sub
subl
loop
sbb
xor
jns
jb
arpl
xchg
outsl
push
das
push
add
inc
adc
add
push
sbb
push
leave
inc
xchg
pop
xor
adc
decb
or
sarb
dec
mov
test
mov
add
xor
repz
dec
sub
ss
gs
xor
insl
out
mov
aam
xor
loop
mov
cmpsl
add
fstl
jp
outsb
mov
inc
xchg
add
sbb
ljmp
enter
dec
call
sub
filds
hlt
jle
jno
sub
mov
lea
mov
cmp
fstpt
fbstp
popf
hlt
out
xchg
nop
loope
sbb
mov
fistl
dec
mov
and
push
cmpsl
and
cmp
jno
sbb
sbb
shrb
push
pop
cmp
shrl
movsl
stc
shll
or
adc
sbb
lods
and
mov
int3
out
je
mov
in
mov
scas
push
or
pop
hlt
push
addr16
andb
loop
mov
xor
out
mov
xchg
sub
or
popa
fstps
sbb
int3
cmp
pop
std
lahf
xchg
xchg
add
mov
sbb
and
shrl
xor
data16
into
les
mov
scas
lods
rclb
add
mov
stc
xchg
and
or
icebp
pop
mov
mov
and
sti
stc
stos
in
hlt
xlat
jge
push
pop
jmp
mov
loop
test
fs
pop
cmpsb
lret
add
imul
adcb
stc
sahf
jno
mov
lock
daa
addl
pop
rorl
jb
jge
push
loop
test
insl
mov
mov
and
jp
leave
mov
gs
hlt
aam
aam
add
hlt
mov
sbb
scas
mov
jne
data16
cmp
sarb
imul
jne
imul
ret
dec
shl
pop
fldln2
cmp
fcompl
daa
xchg
bnd
repz
dec
add
in
rcll
repnz
dec
xor
dec
test
jg
and
jl
lea
pop
std
mov
and
iret
xchg
cmpsl
stos
push
xor
dec
inc
push
adc
imul
sarb
popa
fdivrs
cwtl
cltd
aaa
add
fsubp
stos
push
addb
push
pop
test
xor
cmp
sahf
mov
popa
push
dec
sbb
test
mov
fisttpl
push
dec
sbb
clc
push
jmp
lret
sbb
cmp
mov
fbstp
dec
push
scas
cmpsb
xor
adc
xor
testb
push
jne
fcoml
add
dec
push
insl
aam
mov
icebp
in
push
dec
sbb
add
rcll
pop
and
mov
shrl
jl
scas
fldcw
push
push
test
fcmovne
andb
ja
out
xchg
inc
jb
out
push
mov
sahf
fadd
in
popa
daa
imul
sub
rclb
test
adc
add
icebp
push
pop
adc
mov
mov
push
sbb
movsl
jae
pop
inc
mov
in
xor
xchg
movsl
dec
jmp
js
call
test
mov
cmpsb
pop
mov
sbb
test
and
fbstp
out
push
push
cltd
pop
mov
cmp
cmp
or
shll
jno
mov
ljmp
adc
sub
and
sbb
std
mov
push
add
jl
out
dec
jbe
imul
dec
mov
mov
push
add
inc
xor
adc
jns
and
imull
js
cwtl
sbb
das
mov
jmp
es
out
cmpl
punpcklwd
xor
js
lods
sbb
xchg
mov
addr16
sahf
jle
pushf
pop
int
out
jecxz
and
les
or
mov
subl
sarb
add
xchg
fildl
xchg
xchg
sbbl
dec
pop
xchg
dec
and
es
pop
aas
pop
fwait
cmp
add
lock
nop
xor
repz
cmp
mov
add
fstpl
lahf
fwait
cwtl
outsb
xor
in
jg
xorl
push
adc
sub
xchg
les
lret
dec
jne
mov
jecxz
les
jb
dec
or
push
imul
mov
incb
mov
adc
or
in
scas
ja
jno
lock
cmp
cmpl
xorl
sub
ret
inc
fldt
repnz
lcall
ss
push
ds
mov
cmpsb
iret
in
pop
cmp
xor
pop
xor
int3
mov
leave
dec
int
rcrb
dec
test
xor
adc
shr
in
test
or
sti
imul
imul
sub
mov
xchg
xchg
cmp
jp
es
pop
insl
sub
repnz
push
test
outsb
cld
jo
add
cmpsl
out
or
adc
cmpb
shlb
jae
sub
xor
pushl
mov
data16
xor
sub
jno
jo
jae
insb
stc
cltd
xor
jae
aaa
push
push
mov
jecxz
aam
xchg
sbb
outsb
pop
into
or
lcall
out
xchg
out
pop
push
or
cmp
mov
push
mov
xchg
mov
popa
push
xor
pop
sub
or
push
shl
mov
hlt
or
aas
mov
aas
out
mov
inc
inc
cmc
and
fadds
daa
negl
imul
fimull
push
pop
mov
ds
es
int3
cmp
mov
mov
mov
mov
jecxz
dec
idivb
enter
inc
dec
dec
jno
fisttpl
dec
popf
xlat
inc
pop
push
nop
and
jo
pop
out
out
jbe
jae
mov
pop
push
xchg
fsubr
jg
rcll
cmpsl
fsubs
cmp
jge
add
mov
dec
cmpl
push
inc
sub
jo
mov
or
jne
xchg
shlb
mov
mov
shlb
sub
lea
pop
aaa
push
or
push
inc
sarl
fnsave
addr16
sub
fisttps
mov
movsb
ljmp
dec
addr16
enter
xor
dec
loopne
mov
divl
jno
out
mov
cmpsl
cs
cmpsl
stos
pop
fimuls
push
adc
stos
mov
imul
sarl
pop
jle
push
xchg
lods
inc
lahf
cmp
ljmp
mov
leave
push
dec
jecxz
and
pop
addr16
mov
push
sbb
pop
test
lret
or
shll
xchg
pop
cld
sbb
roll
pop
in
mov
dec
filds
mov
xor
jge
cltd
lds
jb
mov
pop
jno
add
or
pop
xchg
int
stc
jb
push
adc
xor
adc
frstor
int3
and
loop
out
mov
pop
lret
gs
sbb
adc
xchg
jae
sbb
outsl
jae
or
xchg
lcall
mov
pop
cmpsb
mov
ds
lea
mov
imul
mov
pop
mov
and
fwait
shl
leave
jnp
psllq
call
addl
adc
or
mov
fidivl
cmc
rol
fiaddl
dec
pop
or
fsubr
xlat
cs
xchg
je
jb
mov
ficoml
inc
sahf
mov
pop
cmp
out
dec
dec
and
enter
cmp
add
subl
movl
imul
add
in
fcoml
pop
mov
mov
pop
sbb
call
adcl
mov
mov
in
xor
inc
or
call
lret
push
cmp
sub
add
pop
dec
mov
and
in
test
xchg
sbb
mov
mov
pop
pushf
enter
in
test
push
repnz
sub
pushf
fsts
xor
pop
jle
mov
mov
or
decl
jp
data16
mov
mov
jae
lret
cltd
mov
loope
xchg
inc
mov
pop
popa
loopne
xchg
roll
jae
add
fldt
ret
dec
popf
sub
scas
inc
cmp
and
mov
push
repz
cmp
pushf
push
neg
aas
mov
ret
std
imul
cmc
sbb
adc
jae
enter
xchg
xor
jp
jne
adc
xchg
fldenv
cmpsl
dec
loop
push
popa
pop
addss
add
xchg
outsb
add
inc
aaa
jo
aas
jle
and
gs
xor
jo
inc
jns
in
pushf
mov
jl
push
into
stc
aaa
decb
sbb
adc
jle
jecxz
xchg
mov
push
xorl
cmc
incb
movsl
jg
ret
and
push
loope
sti
jae
lret
enter
jne
xchg
mov
pop
adc
dec
dec
adc
rorb
dec
jp
sti
in
outsb
inc
xchg
stos
or
les
rolb
mov
and
test
data16
das
mov
jp
int
sti
ret
ljmp
popa
push
leave
dec
test
stos
push
xchg
jge
clc
rcrb
dec
sub
mov
adc
les
mov
sbbl
lods
int3
aad
mov
mov
mov
xchg
add
pop
das
xchg
inc
iret
stos
pop
sbb
xchg
rcrl
cmp
or
xchg
int
lret
mov
sub
or
out
xchg
ret
mov
inc
divl
bound
mov
lahf
out
aaa
lods
out
dec
push
rcrl
sahf
mov
jne
out
xlat
stos
sub
ss
cmp
add
push
testb
in
minps
push
lock
std
test
jl
lahf
jne
xchg
mov
cwtl
cmp
jns
mov
cmp
notb
xor
ret
hlt
sbb
scas
add
std
lods
xchg
jp
jge,pn
adc
mov
push
mov
in
outsl
das
inc
ljmp
cmp
cmpsb
and
stos
sub
inc
mov
sarb
mov
cli
cmp
int3
xchg
mov
sub
and
movsl
nop
leave
xorb
enter
mov
das
les
cmc
mov
pop
xchg
sbb
adc
ja
mov
outsb
mov
xor
repz
aam
test
cwtl
mov
cmp
cmp
stos
testb
mov
aaa
and
xor
xchg
fnsave
outsb
fcmovb
pop
push
fisttpll
loop
or
mov
roll
clc
mov
lcall
jae
and
scas
loop
fwait
pop
xor
les
dec
xchg
or
xor
pop
adc
inc
mov
sbb
mov
popl
fdivs
pop
mov
mov
xor
dec
imul
pop
gs
mov
daa
cmp
push
jge
out
pop
stc
das
or
sub
push
jne
mov
push
pop
or
mov
mov
add
std
jle
and
sub
mov
jl
bnd
scas
push
cmpsl
mov
cltd
sahf
popa
idiv
data16
mov
jl
jb
gs
jg
mov
and
mov
xor
cmp
add
pop
xor
adc
jae
stos
inc
push
xor
mov
mov
test
xchg
sub
adc
lods
add
pop
jl
push
enter
fstp
cld
or
in
jb
pusha
mov
fdiv
mov
pop
pushf
sub
inc
jp
mov
sbb
imul
mov
dec
cmpsb
addl
or
xor
xchg
enter
arpl
inc
cmpsb
cmpsb
jecxz
loop
jae
ss
mov
jp
fimull
dec
mov
les
addr16
lret
inc
imul
sti
sub
mov
fdivrl
aam
sbb
adc
and
out
sbb
movsb
frstor
int3
add
pop
inc
shrb
fwait
jmp
ret
in
jo,pt
loopne
lea
sub
inc
inc
inc
icebp
jp
imul
inc
mov
inc
jecxz
fcompl
dec
inc
push
scas
jbe
popa
or
fisttpl
mov
sub
lds
es
inc
mov
addr16
iret
pop
adc
stc
testb
rcrl
xlat
dec
fistl
cli
test
int
lds
cmpsl
xchg
movsb
pop
test
inc
pop
test
stos
jmp
rol
cmp
mov
rclb
cwtl
jnp,pt
ja
je
jnp
lahf
mov
inc
aaa
mov
leave
cmp
mov
jecxz
adcl
and
sti
divb
lods
pop
ja
mov
and
loopne
inc
xor
call
andb
add
int
scas
cmpsb
xor
jg
jb
mov
sub
jno
inc
enter
popa
xor
hlt
inc
cmp
mov
pop
pusha
pop
fidivs
cmp
cmp
in
mov
test
int3
repz
sahf
mov
inc
xchg
cltd
mov
daa
aaa
lcall
add
arpl
adc
or
mov
negb
shrl
inc
iret
push
push
cmpl
loop
pop
cmp
mov
xchg
jns
lret
out
xlat
rcll
dec
xchg
mov
sbb
int
hlt
sbb
lret
ss
add
and
mov
lcall
rcrl
loopne
inc
adc
shr
jecxz
nop
cmp
mov
scas
push
add
xchg
fnstcw
xlat
movsl
in
pop
sbb
scas
ret
xchg
inc
fldcw
sbb
hlt
outsb
push
movsb
fcomi
mov
push
add
mov
add
inc
jne
dec
dec
jecxz
repz
inc
adc
jnp
jb
ja
jbe
mov
pop
dec
push
or
shl
sbb
stos
movsl
jno
movsl
add
bswap
sti
nop
xchg
ret
add
push
orl
addr16
mov
add
lds
test
in
test
dec
sbb
dec
out
lods
add
mov
sbb
and
push
sarb
repz
jmp
adc
cli
push
popa
loope
jle
or
scas
mov
imul
jnp
and
inc
mov
out
loope
andnps
loopne
aad
aaa
lret
mov
pop
leave
mov
insl
and
sti
aam
loope
js
icebp
pusha
loop
adc
icebp
jbe
push
mulb
jo
xchg
addl
imul
es
pop
xchg
push
clc
and
mov
fsubrl
jmp
inc
pop
xchg
imul
out
dec
insb
lcall
add
lea
xor
adc
fwait
mov
push
test
cmp
xor
jns
jp
neg
dec
ficompl
mov
cmpsb
ret
clc
popa
jae
add
xlat
ja
pop
dec
push
xchg
xor
jge
aam
or
lcall
cmpsl
or
lock
in
mov
pop
imul
pop
add
lds
repz
dec
inc
sbb
jns
and
aam
pop
movsb
jns
stc
pop
and
shll
jno
fs
and
mov
mov
popa
adc
gs
xlat
push
adc
imul
enter
insl
fwait
fwait
and
or
xor
ds
mov
out
test
or
or
add
or
add
or
pop
pop
adc
xor
push
aas
pop
ljmp
inc
xor
mov
pop
xchg
pop
xchg
adc
lods
out
loope
pop
jae
push
into
sbb
repz
jnp
jle
lret
or
rolb
mov
add
mov
inc
jnp
mov
mov
jl
sbb
mov
fisttps
jmp
repnz
xchg
pop
nop
mov
pop
insb
jecxz
jg
inc
inc
in
rcll
fdivrs
mov
add
in
pop
scas
popa
insb
ret
push
push
add
in
icebp
sub
cmpsb
pop
jmp
pushf
dec
ffreep
les
push
sbb
lds
push
xchg
ja
lcall
dec
pop
lcall
inc
dec
adc
out
add
add
dec
xchg
lock
cmc
ret
test
sbb
jge
or
ljmp
mov
movsl
mov
pusha
call
pop
mov
data16
ret
in
insl
enter
test
sub
popa
aam
jg
cmp
and
sbbl
adc
xchg
push
inc
pop
ja
movntps
adc
pop
ret
fs
add
push
jecxz
lock
inc
inc
mov
or
dec
dec
mov
sub
xchg
les
ret
inc
mov
dec
inc
jmp
cmp
inc
or
dec
imull
mov
iret
push
dec
cmp
push
in
sub
xor
jl
adc
push
lds
int3
in
mov
cmp
jae
or
push
fcmovbe
xchg
aaa
or
es
popl
sbb
in
mov
xchg
fiadds
jae
or
sub
sahf
cmp
cmp
or
jecxz,pn
test
iret
aad
adc
pop
je
xor
cmc
pop
mov
mov
and
fs
xchg
xor
enter
adc
fisubs
push
mov
xor
xchg
mov
popa
push
movsl
dec
pop
outsl
push
xchg
adc
pop
icebp
test
or
iret
sbb
add
das
mov
jns
rol
mov
xlat
repnz
int3
mov
imul
push
pop
adc
pop
movsl
cwtl
test
test
adc
ljmp
mov
inc
mov
xchg
mov
dec
pop
push
gs
fs
mov
xor
imul
lret
and
loop
rcrl
xchg
mov
outsb
gs
push
sub
mov
das
loopne
repnz
insl
int3
pushf
mov
hlt
mov
mov
mov
addr16
add
jbe
fwait
loop
and
pop
addb
dec
mov
fdivr
lret
cmpsl
and
jb
subb
dec
cmp
and
test
pop
imul
ret
daa
stos
add
sbb
and
adc
mov
jmp
xchg
and
xchg
jns
loope
adc
ds
add
icebp
xchg
jnp
insl
in
bound
xchg
hlt
outsb
popa
lods
jnp
int3
cli
jnp
dec
dec
jbe
mov
pop
pop
add
popf
or
mov
mov
mov
or
mov
add
sub
jns
js
xor
daa
ljmp
adc
and
fdivl
pop
pushf
mov
pushf
fwait
aaa
out
sahf
repnz
sub
dec
xchg
fisubrl
or
add
aam
stos
mov
insb
pop
add
loopne
jb
loop
pusha
mov
out
jbe
push
mov
jbe
pop
or
das
mov
je
nopl
jbe
test
negl
fs
js
mov
jmp
or
orb
inc
or
cmp
and
scas
dec
fadd
aaa
test
out
push
cwtl
mov
jns
inc
out
and
cmp
adc
rcll
imul
iret
shl
test
rcrb
iret
jmp
fimuls
fxch
in
pushl
lret
or
andl
jae
mov
cmpsl
outsb
mov
mov
inc
andl
cmpsl
loop
push
lcall
xchg
inc
jae
add
repnz
movsb
mov
cld
ljmp
cmp
add
add
push
push
sbb
aam
mov
popa
lea
mov
jns
dec
inc
mov
sub
gs
dec
xor
arpl
in
jmp
ret
loope
cltd
pop
int3
sub
dec
loop
mov
faddp
in
loope
xchg
cmpl
cs
and
inc
push
gs
shrb
ret
sbb
lods
test
les
clc
cmp
mov
sarb
sub
pushf
fwait
xor
pop
out
stc
or
mov
cld
xchg
in
and
ljmp
and
xchg
cmc
xorb
test
add
stos
jg
push
sub
inc
mov
xchg
ljmp
cs
pushf
push
xor
xor
pop
je
ret
inc
mov
push
jnp
inc
roll
mov
pusha
push
mov
pusha
cwtl
mov
or
jno
shlb
or
mov
sub
add
sahf
add
jno
jbe
out
incl
lret
pop
jno
inc
test
mov
push
sub
lret
stc
sub
xlat
lret
dec
insb
daa
jg
mov
dec
sarl
gs
pop
xor
js
int
cmp
and
das
jmp
lock
fisubrs
mov
or
jmp
jae
xor
adc
xor
push
cmpl
jecxz
jge
xchg
lock
iret
js
mov
mov
add
inc
ja
movsl
adc
sub
cltd
cmc
inc
stc
mov
in
sbb
fcompl
mov
mov
lcall
ss
fsub
out
frstor
mov
lock
mov
jne
xchg
aaa
add
lcall
out
ss
mov
cwtl
xor
aad
cmpsl
sahf
mov
fbstp
xchg
inc
pop
push
sbb
mov
or
lea
cs
dec
jne
rclb
jb
mov
sti
push
pop
aam
inc
sbb
cmc
cmp
insl
jge
cmp
xchg
leave
fldenv
mov
mov
sbbl
in
jmp
jae
sbb
inc
gs
add
test
mov
repz
cs
stc
inc
int3
in
or
adc
jl
sub
or
hlt
mov
push
or
cltd
es
roll
push
fbld
inc
data16
and
into
sbb
add
sub
xchg
xchg
insl
mov
test
ja
push
lods
push
insb
les
xchg
das
add
test
mov
jnp
les
outsb
clc
sbbl
subl
pop
ljmp
iret
hlt
aam
push
sbb
cmp
or
loop
insl
outsl
das
inc
mov
clc
ljmp
nopl
sub
jno
lahf
pop
sbb
outsl
cltd
mov
mov
mov
cmc
jle
sbb
jnp
push
mov
test
dec
into
gs
data16
jno
in
jo
inc
ret
pop
fldenv
xchg
pop
mov
mov
and
mov
ud2
orl
movsl
lret
stc
mov
mov
sbb
or
hlt
enter
push
pusha
addl
iret
dec
cmpsl
out
popa
in
mov
out
cmpsl
push
sbb
sub
das
repnz
int3
xchg
out
mov
enter
sbb
fs
mov
std
add
test
lret
call
mov
inc
jmp
loopne
dec
fdivrl
in
or
add
jne
lods
in
addr16
dec
pop
xor
arpl
data16
jns
icebp
fiadds
mov
jge
mov
mov
arpl
xchg
arpl
pop
mov
popf
mov
hlt
mov
pop
orl
add
push
rorl
arpl
push
mov
jns
jg
lea
mov
orb
push
cwtl
add
inc
decl
jmp
dec
dec
xorb
pop
lods
pop
jp
scas
adc
or
xor
adcl
test
or
adc
mov
outsl
lds
dec
push
loope
and
or
cmp
pop
sub
dec
push
dec
lods
lods
add
js
sarl
out
push
iret
dec
pop
pop
xchg
mov
pop
pop
push
fisubrs
sub
adc
iret
cmp
popf
addr16
sbb
fdivl
subl
loop
daa
xchg
insl
mov
mov
or
test
outsl
rclb
push
and
cmp
and
cmp
cwtl
push
aas
lods
pop
dec
pop
jno
xchg
pop
dec
xor
and
in
sub
sbb
scas
lahf
cmpsb
and
sbb
xchg
fcoms
and
lret
mov
push
ret
and
cs
pop
mov
xchg
repz
mov
nop
push
xlat
setb
sbb
lret
enter
xchg
mov
mov
and
mov
and
add
jecxz
push
pop
bound
dec
xchg
enter
das
push
andb
ffree
ret
fimull
add
mov
cmc
into
jb
fildll
sbb
jbe
sbb
je
insb
fsts
inc
xlat
or
shrl
roll
ret
mov
loopne
pop
adc
enter
cs
sub
ja
out
pop
movsl
repz
test
and
clc
fnstcw
sarb
push
jb
and
addr16
push
fwait
repnz
fstps
mov
pop
push
mov
jmp
movsb
inc
mov
mov
rorb
and
imul
pop
mov
stc
fldt
cmp
mov
cmp
xchg
jbe
repnz
inc
and
jecxz
push
and
lods
mov
jnp
sarb
mov
and
lock
testl
ss
lods
dec
fnstsw
mov
shlb
popa
div
jb
fstps
cmp
xchg
fiaddl
cltd
data16
fsubrl
xlat
loopne
jae
sarb
fstpl
call
adc
daa
lahf
cmp
mov
lea
xor
andb
cmpsb
dec
push
xchg
hlt
sbb
ljmp
cmp
jle
int
mov
pop
or
push
xchg
push
lea
push
aad
jbe
add
mov
cmp
leave
and
mov
daa
loopne
xor
call
mov
sbb
arpl
mov
or
pop
popa
add
out
pop
xlat
dec
roll
push
fiadds
or
lods
or
pop
out
inc
fldpi
movb
push
aam
sbb
mov
cwtl
xchg
scas
add
and
cmc
or
cmc
shll
test
mov
aaa
jns
sbb
fidivl
push
add
adc
dec
cld
lock
xchg
push
mov
rorl
outsl
sti
inc
push
sbbb
outsb
pop
push
mov
call
fdivrl
and
pushf
mov
or
les
sub
pop
scas
addb
in
popa
and
mov
sub
rcl
or
loopne
js
xor
out
test
roll
out
mov
xor
sbb
push
cmp
out
xchg
add
cmp
inc
xchg
push
in
scas
aaa
repz
pop
xor
pop
fucomip
jno
mov
fldl
xor
scas
fnstsw
mov
push
push
push
imul
ss
jb
sbb
nop
sbb
out
rcrb
mov
cmp
jnp
jne
insl
add
push
in
dec
push
mov
xlat
inc
je
sub
mov
mov
xor
cmc
xchg
pop
mov
jns
inc
xchg
mov
ret
xor
call
movsl
es
xorl
out
addb
xlat
cwtl
in
mov
lret
push
xchg
mov
mov
mov
into
inc
insb
inc
and
xchg
nop
inc
add
adc
xchg
les
lcall
xchg
sub
movsl
insl
icebp
ret
clc
fdivr
mov
push
jmp
sub
add
or
insb
insb
inc
mov
not
fmulp
cmp
shlb
loopne
sbb
push
ss
aas
stos
repnz
cmc
daa
dec
fiadds
lahf
push
andl
stos
aad
test
or
mov
cld
ds
mov
ret
jmp
xor
pop
lcall
fistps
dec
mov
or
mov
mov
aad
sub
jno
push
and
jmp
pop
pop
js
lcall
int3
push
cwtl
std
adc
loopne
cmp
add
fwait
and
mov
sbb
pop
int3
mov
leave
popf
pusha
inc
mov
jns
dec
mov
test
jl
xorl
das
cwtl
cltd
dec
xor
in
cli
js
movsb
and
in
add
mov
jecxz
nop
fildll
sub
insb
jle
int
push
push
push
xor
pushf
cmc
pop
ds
leave
pop
lods
add
loopne
jo
popf
fcomps
int
es
inc
sub
jae
pop
sbb
rcrb
dec
xlat
push
xchg
sub
or
addr16
filds
fnstsw
fdivrs
fsub
aaa
int3
sub
adc
adc
and
imul
inc
lea
cmp
sbb
inc
movsl
rcrl
xchg
loop
repz
repz
pop
mov
test
jb
mov
arpl
subl
fldcw
lock
sbb
orb
mov
mov
mov
push
test
mov
jne
and
test
adc
mov
int
in
cs
test
jne
test
jecxz
je
pushf
mov
ljmp
mulb
mov
inc
jl
into
lea
inc
imul
adc
lcall
mov
lcall
add
push
loopne
test
or
fs
inc
fs
aas
cmp
jbe
xchg
cmpsb
out
aad
mov
jb
sub
lcall
outsl
clc
pop
cmpsl
sbb
lock
pop
cmpsb
clc
jmp
fiaddl
sbb
js
mov
sub
or
sbb
push
or
loope
popa
jbe
daa
push
or
inc
incb
nop
and
dec
add
jne
bndstx
les
lock
idivb
xchg
mov
cltd
out
bnd
into
test
mov
sbb
out
sahf
js
and
movsl
out
loopw
jmp
jno
adc
jmp
mov
fbld
rcrl
les
outsl
dec
push
mov
cmp
hlt
imul
call
loope
mov
or
clc
push
sbb
lret
es
stc
dec
int3
inc
in
pushf
enter
fs
jmp
adc
test
arpl
cmc
pop
push
cmp
mov
stos
pop
pushf
pop
adc
jmp
sub
jge
into
lret
mov
les
sub
lds
xchg
outsl
out
and
adc
push
sub
cmpsb
add
mov
lahf
jno
xchg
cmc
iret
and
fwait
imul
loop
jmp
mov
insl
mov
loopne
inc
rcll
push
fstpl
mov
mov
shlb
lods
jge
gs
bound
aas
fisubrs
mov
jo
or
push
insb
adc
xlat
fistl
pop
lock
push
push
mov
xlat
jo
mov
xor
xchg
int3
test
mov
test
jp
stos
insb
daa
mov
sub
xchg
or
out
fcompl
ljmp
repnz
int3
movsl
out
insl
mov
out
sub
loope
xor
dec
jmp
add
sbb
jmp
scas
repz
stos
xchg
lods
rorl
xchg
in
push
popa
sub
lret
das
bound
xor
insb
stos
pop
aas
sbb
ljmp
scas
lret
fidivrl
loope
lock
arpl
in
std
hlt
xor
test
mov
inc
jge
subl
aam
adc
push
push
in
and
jl
lahf
or
fldenv
push
sub
mov
mov
cmpsl
ljmp
sub
dec
call
cmp
pop
aaa
sahf
stos
enter
xchg
mov
or
add
jl
gs
and
jl
adc
adc
push
mov
lea
idivl
jae
loope
xchg
ficoml
xor
outsl
jmp
sarb
xchg
int3
test
mov
repz
in
imull
mov
ljmp
mov
jmp
aad
mov
sbb
adc
inc
mov
loopne
push
mov
test
sub
xor
xchg
sbb
je
vmovmskps
push
jae
and
mov
andb
cld
push
pop
cmp
mov
jp
push
mov
pop
cmp
sbb
mov
gs
xchg
stc
or
and
popf
int3
pusha
sub
icebp
jmp
adc
sbb
shrl
push
out
mov
aaa
rclb
mov
mov
mov
lret
out
jge
or
in
xlat
in
cmp
iret
cwtl
sbb
test
add
test
cmp
imul
pop
cli
sub
aaa
int
fbstp
aas
das
aas
sbb
cld
xchg
out
fmull
iret
xor
sub
mov
test
loop
lret
inc
mov
dec
sarl
mov
cmpsb
sbb
fldcw
popl
dec
adc
rcrl
inc
ret
xchg
sub
aad
data16
cmp
jecxz
mov
sub
sub
and
in
cli
lock
stc
cmp
or
jnp
pusha
inc
and
push
mov
les
or
cltd
call
xor
sub
cltd
lods
loope
mov
push
clc
adc
mov
sti
lret
and
jge
xor
mov
call
mov
out
sarb
out
lahf
int
push
and
jne
icebp
loopne
inc
adc
lahf
jmp
movb
cs
les
mov
inc
jg
bound
scas
mov
movsb
imul
sub
loop
popa
sbb
mov
jo
cmp
jne
pop
dec
dec
into
ja
repz
mov
xchg
cld
adc
mov
xchg
dec
dec
scas
sub
rorb
jge
out
lods
cmp
xchg
subl
dec
xchg
push
fdivr
push
cmc
int
and
mov
mov
cmc
or
in
mov
pop
lock
adc
dec
lcall
nop
mov
lods
pop
push
xor
ret
lds
and
in
mov
sbb
sbb
dec
lods
mov
cmpsl
lcall
jbe
mov
test
jl
sub
hlt
ret
gs
int3
lret
hlt
ss
fdivl
aas
add
jne
leave
push
cmp
mov
loopne
jl
pop
and
or
or
add
sbb
dec
pop
adc
cmp
jmp
inc
dec
ret
les
aas
stc
cmp
cmp
int
fstpt
add
inc
adc
add
test
scas
mov
and
nop
pop
icebp
mov
cmp
je
xchg
fldl
and
push
hlt
test
in
jl
cmp
pushf
adc
push
mov
dec
outsl
push
nop
push
xchg
inc
arpl
push
cmpsb
call
mov
rcl
lods
mov
mov
cwtl
jno
cmp
mov
cli
rcrl
push
icebp
sbb
mov
sti
sub
ret
mov
sarb
mov
js
xchg
bound
inc
test
dec
aam
leave
mov
mov
and
imul
test
sbb
xor
push
stos
xor
ja
inc
xor
xor
outsb
subl
ret
icebp
mov
js
mov
adc
mov
pop
scas
jmp
iret
mov
add
es
xchg
sbb
mov
in
adcl
add
inc
imul
mov
repz
test
adc
push
iret
or
popa
mov
xor
pop
and
push
dec
jge
lret
stc
pop
cmp
jne
pop
and
outsl
insb
dec
pop
test
test
add
adc
pushw
mov
call
mov
loope
pop
cmc
xor
shrl
jnp
xlat
inc
in
clc
xchg
movsb
pop
hlt
xchg
js
cmpl
faddl
and
cmp
stc
clc
push
aaa
cmpsl
repz
cmp
dec
mov
imul
or
sbb
out
ss
psubsb
call
call
lea
imul
inc
je
pop
ljmp
mov
lret
repz
push
loop
cmp
inc
mov
dec
xrelease
scas
xor
aad
mov
add
and
icebp
cld
inc
loope
xchg
jg
loop
xlat
lcall
enter
lahf
mov
lods
ja
jle
pop
pop
or
inc
shlb
inc
cmp
setbe
flds
ljmp
push
stc
imul
shlb
pop
mov
insl
cmp
je
mov
popf
and
movsb
and
ja
xor
ds
dec
jecxz
inc
add
fldcw
hlt
mulb
inc
sub
xchg
dec
and
inc
lods
dec
test
adc
jge
add
arpl
gs
pop
mov
test
lds
dec
mov
jns
aaa
adc
adc
movsl
imul
dec
mov
int3
mov
jb
js
jnp
sub
and
mov
test
test
insl
pop
fs
add
lret
lahf
cmp
xchg
ret
cmp
sub
pop
mov
jns
ljmp
xchg
jecxz
out
in
insb
dec
and
adc
jno
or
pop
mov
dec
mov
in
mov
jbe
push
sahf
push
sub
iret
sti
stc
dec
cwtl
ret
cmpb
fucom
jbe
scas
mov
add
mov
jp
outsb
or
inc
xlat
add
mov
js
pop
cmp
inc
cwtl
pop
cmp
pop
lods
xor
ret
pop
outsl
mov
in
sbb
repz
xchg
mov
ja
pushf
popa
movsb
sub
cmp
stos
xchg
add
cmp
cwtl
jp
fimuls
dec
fadds
or
into
leave
pop
and
mov
push
rcl
jne
sub
xlat
or
mov
pop
xchg
fdivl
mov
and
mov
ja
insb
cmc
fstpl
ljmp
js
and
push
dec
mov
je
push
lods
das
popf
gs
fcmovnu
lret
xchg
in
dec
jmp
jge
fsubr
cwtl
imul
shll
fstpt
movsl
xchg
add
rcl
std
pop
rolb
sbb
jae
sbb
roll
into
mov
sbb
and
and
rorl
or
rcrb
jno
sbb
adc
pushf
adc
dec
xchg
mov
les
pusha
pop
adc
cmpsb
dec
pusha
push
mov
fisubrl
mov
mov
stos
or
mov
movsb
lea
mov
or
lods
mov
pop
jecxz
sbb
jmp
repnz
lea
out
enter
pushf
inc
push
sbb
or
cmp
pop
pop
xorl
cmp
xchg
movsl
jnp
or
push
xor
jno
fistpll
xchg
insl
pop
shlb
xchg
popa
inc
out
fldt
and
insb
push
test
inc
and
rcr
outsl
test
mov
adc
xchg
lahf
popa
das
add
or
test
jge
fnstsw
sahf
xor
add
sbb
aad
pop
pusha
sbb
lret
mov
adc
jecxz
push
movl
cmp
divps
test
push
jmp
scas
out
sahf
ljmp
imul
nop
and
mov
sub
sbb
outsb
or
imul
mov
nop
mov
jno
sbb
mov
sarl
add
jp
dec
sub
adc
add
xor
sub
dec
jl
push
and
loopne
ret
std
adc
ds
iret
mov
sub
inc
push
insb
or
int3
dec
sbb
sbbb
std
pop
stos
adc
pop
pop
sarl
jns
fiadds
inc
push
jge
sbb
pop
mov
add
inc
fisubrl
pusha
sahf
rcl
enter
pop
testb
inc
ds
push
mov
popf
pop
pop
jno
add
popf
in
xor
sub
push
popaw
pop
mov
lahf
sbb
cmpsb
xor
pop
push
push
lret
mov
mov
push
mov
sbb
dec
jae
dec
lahf
aam
popa
jo
lret
xchg
dec
push
sbb
add
add
fldenv
mov
into
aad
jecxz
and
fwait
dec
jnp
pop
bound
sbbl
mov
mov
sar
imul
aad
fcompl
xchg
aaa
scas
or
es
add
and
and
pop
sbb
xor
push
dec
or
leave
sbb
es
or
jl
dec
pop
fwait
and
pop
add
ljmp
mov
popf
and
pop
aas
xor
mov
xchg
add
mov
mov
in
sbb
notl
lea
jg
mov
movsb
mov
xchg
push
mov
ret
pop
ret
jne
movsl
cmpsb
inc
cwtl
fmulp
jmp
add
int
in
icebp
data16
xchg
femms
dec
fdivs
int3
lahf
push
cmpsb
lods
movsl
and
cmpsl
pop
inc
push
loop
aam
int
push
lock
jne
movsb
scas
in
rcrl
fdiv
hlt
pusha
and
test
pop
xchg
clc
adc
inc
lret
adc
xchg
bound
cs
je
nop
jg
inc
lahf
jne
sbb
dec
out
cmc
lods
add
cmp
mov
stos
repz
dec
out
push
movsl
xchg
dec
sub
pop
and
fsub
and
cld
hlt
lret
dec
es
popa
aad
and
or
add
in
xchg
inc
btr
adc
cmp
push
mov
movsl
cmp
fldenv
cwtl
mov
and
inc
xor
jae
arpl
call
jecxz
ffreep
mov
into
in
jmp
and
enter
or
sub
xlat
test
shll
ret
lahf
and
xchg
mov
gs
insb
push
push
push
pop
mov
push
in
dec
aam
jecxz
lretw
adc
or
xchg
iret
mov
and
sub
movsl
adc
ret
mov
dec
ja
sub
ds
dec
mov
hlt
imul
rclb
mov
xchg
or
cli
mov
loopne
jge
sahf
outsl
add
xor
rcrb
or
sbb
mov
add
movsl
fdivs
jb
push
movsl
arpl
xor
jb
sti
xor
ljmp
stos
xchg
loopne
in
xchg
roll
xor
sub
inc
adc
xor
aas
sbb
xchg
cs
or
ret
fsub
jmp
push
pop
dec
test
sbb
push
addr16
aas
push
mov
inc
lcall
imul
iret
xchg
mov
dec
adc
push
fldt
dec
push
es
test
popf
cli
aad
push
mov
jge
std
cmp
fistpll
inc
daa
xchg
in
leave
rcrl
push
frstor
mov
xor
repz
ss
xchg
adc
lds
xlat
stos
data16
nop
std
mov
nop
pop
adc
push
pop
and
fstl
or
mov
sahf
cmpsl
es
mov
inc
push
dec
sbb
cmpl
es
dec
mov
push
sub
push
leave
add
repz
pusha
loopne
ret
and
pop
movhps
fistl
daa
fldln2
sub
add
inc
inc
fistl
pop
fs
inc
jecxz
mov
loopne
jns
mov
add
jae
lods
sub
push
aas
inc
mov
pop
movsl
mov
jns
mov
outsb
arpl
lods
or
int
es
sarb
call
or
inc
xchg
mov
icebp
xchg
movsb
xchg
add
outsb
rcll
push
sub
addr16
scas
fs
in
fs
mov
test
addr16
cmp
or
sub
inc
adc
stos
mov
dec
dec
mov
mov
jbe
sbb
jae
es
cmc
test
movsb
jge
movsb
jmp
xchg
sub
in
inc
push
cmp
dec
jb
jmp
sub
add
loop
aad
xlat
xor
mov
push
decl
aad
stos
in
add
mov
jl
sbb
push
xchg
and
pop
adc
lcall
pop
orl
cmpsl
sbb
aam
mov
in
out
and
mov
icebp
out
std
ret
decb
pop
mov
stos
push
pop
fcmovnbe
aam
insb
and
xchg
fcmovbe
mov
or
icebp
xchg
sub
push
lods
popl
cmpb
cmpsb
jo
cmp
or
pop
enter
or
outsb
das
sbb
push
stos
mov
aas
dec
jnp
pop
ret
in
sbb
mov
ljmp
xor
popf
icebp
pop
mov
pushf
xor
leave
mov
cmp
or
xchg
jecxz
xor
push
test
adc
xor
mov
push
jae
mov
mov
sbb
lock
inc
mov
inc
test
fildll
xchg
icebp
mov
shrl
sub
mov
std
or
in
jge
fistpll
sti
sbb
and
add
sub
sbb
xchg
xchg
sub
pushf
or
in
push
mov
add
or
mov
xlat
fldenv
push
add
cmc
jmp
or
fcompl
out
inc
pop
push
jbe
jo
xor
in
pop
filds
mov
mov
pop
scas
pop
repz
in
mov
adc
fwait
dec
push
pop
jecxz
repz
sarl
add
loope
movsb
jl
cmpsl
xlat
rcrb
add
icebp
cmp
adc
int3
xchg
lcall
sar
xlat
scas
pop
inc
sub
mov
jns
cmp
fsubs
jne
sub
popa
push
and
fstl
mov
fnstenv
xchg
stc
fs
scas
es
mov
cmc
dec
xor
xchg
roll
jge
dec
out
call
jmp
aam
pushf
mov
int3
push
adcb
aad
repnz
fldt
push
mov
fwait
push
test
stos
cmp
xor
sbb
loopne
dec
xchg
xchg
cltd
icebp
popa
in
in
movsl
xchg
or
mov
inc
repz
hlt
mov
es
mov
ds
sub
or
xor
iret
mov
packuswb
push
or
and
mov
push
sahf
xlat
mov
dec
insl
and
mov
jecxz
sbb
mov
or
sub
mov
adc
jl
and
push
gs
mov
inc
jge
call
into
orb
cmp
inc
aad
sbb
cmc
insl
pop
jo
mov
cltd
loop
mov
xlat
xchg
jp
push
int3
dec
dec
ret
mov
mov
pop
es
popa
xor
push
add
rolb
pop
int3
dec
clc
mov
je
xchg
cmp
dec
add
std
je
popf
clc
scas
sub
sub
xchg
dec
lahf
ret
cmp
or
cmpsb
les
insb
aad
out
aad
and
lea
xchg
or
out
mov
pop
xchg
in
dec
inc
cltd
aaa
push
fisttpll
imul
mov
push
dec
cli
es
jle
pop
adc
bound
jmp
cmpsl
mov
jns
mov
dec
and
pop
adc
ja
mov
add
jmp
jne
sbb
and
cltd
ret
mov
in
adc
in
inc
sub
pop
add
inc
scas
push
test
push
jmp
add
and
and
jl
lret
cltd
and
push
mov
loop
mov
popa
cmpsl
fmulp
push
enter
enter
mov
mov
pop
mov
lds
imul
jbe
outsl
xlat
daa
scas
sub
sbb
fildll
sub
push
mov
xchg
test
js
mov
stc
mov
ss
call
in
adc
cmpsl
cmpsl
jne
loop
les
je
jl
sbb
xor
testl
push
shlb
insb
sub
sti
decb
xor
cmp
jno
pop
pop
in
mov
out
dec
sbb
mov
adcb
cli
movsl
mov
inc
sbb
fisttpl
cmovl
cmpsb
sbb
xor
push
lods
xchg
fsubrs
cmp
inc
decl
xchg
es
stc
xchg
sub
test
in
jp
test
sti
dec
mull
and
sbb
fimull
push
xor
data16
out
fisubs
xor
inc
sbb
mov
lock
arpl
push
and
fstl
int
pop
or
inc
and
cmp
ja
xchg
lea
lar
xchg
mov
loopne
jb
ljmp
mov
fidivs
lcall
adc
shll
in
lds
adc
dec
movsb
das
inc
and
mov
mov
in
fnsetpm(287
insl
rclb
rolb
add
sub
dec
cs
or
mov
fidivl
divb
or
outsl
or
add
out
fcoms
mov
and
jle
js
mov
movlps
imul
xchg
cmp
sar
jb
and
sub
je
sub
enter
mov
ds
jb
cmp
arpl
shlb
shll
mov
jmp
decb
das
rcl
leave
jns
cmpsb
shll
test
adc
sub
repnz
push
rorl
or
mov
or
subb
popa
mov
xlat
pop
mov
jecxz
in
and
jb
in
cmp
lea
lahf
xchg
push
sahf
outsb
lret
jne
or
dec
in
imul
dec
xchg
gs
adc
out
or
into
pop
iret
jae
mov
outsb
cwtl
insb
inc
mov
pop
add
cld
sahf
mov
push
daa
jae
inc
fbld
pop
bound
cli
into
mov
add
xor
ja
adc
aad
gs
xchg
xor
fistpl
shlb
cmp
xchg
xchg
pop
jb
in
dec
mov
fcompl
jne
loop
daa
pop
jb
jge
push
xchg
test
cs
bound
jns
inc
push
movb
das
sbb
push
push
pop
daa
ja
adc
lea
pop
les
and
cmp
cmc
mov
xchg
pop
push
push
adc
out
xchg
shrl
dec
cltd
jp
dec
movsl
ljmp
xor
mov
aam
arpl
lock
movsb
mov
xor
adc
pop
flds
pop
mov
cli
sub
mov
sub
div
loop
xchg
pop
lret
pop
cmp
shlb
jb
cli
push
jbe
icebp
pop
push
rcrb
jmp
adc
xchg
jnp
rolb
cmc
inc
inc
scas
adc
lahf
stc
pop
pop
push
insl
fucomi
and
and
ja
and
sarl
inc
mov
aaa
cs
mov
xchg
mulb
ljmp
and
lods
sub
bound
das
and
popf
lds
mov
jno
outsl
and
imul
xchg
mov
jnp
aaa
mov
adc
add
adc
cmp
and
push
stos
fcompl
into
sub
pop
mov
adc
mov
xchg
mov
sbb
into
and
cli
ret
lret
inc
push
mov
mov
gs
and
and
test
fldcw
mov
movsl
cmp
sbb
inc
dec
pop
cmp
int
je
pop
pop
xchg
push
inc
adcb
xor
xor
dec
inc
pusha
inc
dec
mov
aas
addr16
inc
mov
adc
mov
pushf
sbb
punpcklwd
hlt
outsl
fsts
fwait
popa
xchg
jns
rep
jl
repnz
movsb
jp
mov
mov
xor
xchg
mov
push
gs
les
and
loope
repnz
aaa
insl
std
add
out
sub
lea
lea
fwait
leave
dec
out
in
rclb
dec
mov
popa
arpl
mov
adc
mov
cmpsb
popa
inc
xchg
or
fldcw
pop
aam
push
ja
dec
mov
dec
or
or
add
scas
pop
mov
test
imul
imul
out
dec
fldenv
loop
mov
sbb
add
mov
imul
sbb
jbe
pop
pop
mov
fwait
popa
push
sub
mov
push
insb
sub
jge
cmc
mov
xchg
aad
jp
bnd
pop
pushf
daa
jmp
pushf
mov
and
jecxz
jle
cmp
mov
xchg
or
pop
fdivr
insb
xor
xchg
lahf
rcll
in
xor
pop
out
sub
lahf
out
lock
jne
ljmp
pop
push
dec
pop
imul
gs
mov
jno
sbb
push
nop
ret
ja
xor
add
dec
imul
incb
out
mov
mul
or
push
push
ret
add
icebp
push
fwait
cmp
add
push
or
sbb
mov
and
repz
and
pop
rcr
add
cmpsb
push
jp
daa
inc
fs
xlat
dec
pusha
imull
sub
fisubs
dec
aas
iret
mov
lret
out
adc
jmp
adc
and
or
ss
rolb
pop
pop
push
mov
movsl
xor
mov
loop
fadds
sbb
imul
in
fldl
inc
jp
scas
jmp
adc
mov
arpl
idiv
insl
mov
adc
xor
add
gs
movsb
push
iret
sbb
flds
sbb
jp
mov
sbb
push
jnp
loopne
test
xor
imul
ljmp
push
and
xchg
dec
int
inc
insl
or
cmp
in
sub
std
inc
jb
les
pop
adc
xchg
iret
scas
in
idivl
mov
dec
mov
add
pop
mov
das
mov
sub
and
adc
mov
icebp
push
and
mov
jge
dec
icebp
xchg
and
xchg
inc
in
xchg
iret
sbb
sahf
cmpsl
bound
loope
push
pop
cmp
jno
syscall
cwtl
test
adc
dec
scas
and
xlat
in
inc
bound
mov
les
outsb
test
xor
das
xchg
sbb
mov
testb
sbb
cmp
loope
testb
ret
inc
lret
mov
addr16
push
fcoml
or
loopne
mov
jge
add
xchg
sbb
sub
rcrl
enter
addr16
scas
arpl
cwtl
cmp
inc
mov
add
mov
mov
cli
pop
mov
xchg
and
mov
push
sbb
push
mov
pop
pop
xor
and
xchg
cwtl
and
out
pop
cmpsb
mov
data16
mov
mov
pop
or
loopne
bound
pop
fdivl
lds
das
mov
and
mov
xlat
add
in
mov
jecxz
ja
jno
sub
lret
icebp
adc
mov
mov
pop
xchg
mov
lock
inc
arpl
pop
add
cmp
mov
fisubs
push
out
mov
in
mov
sbb
sbb
or
adc
sbb
xor
nop
pop
lahf
insl
mov
add
ljmp
std
mov
adc
bound
outsl
jnp
cmpsl
inc
jge
sub
inc
fwait
lods
cli
cmp
lret
imul
mov
gs
shlb
mov
ds
icebp
xchg
xor
jb
les
mov
xor
icebp
inc
dec
pop
repnz
cmp
mov
jge
mov
inc
out
mov
into
stos
pusha
add
fwait
sbb
xchg
mov
lods
jo
gs
aas
push
push
pushf
mov
pop
jns
test
jnp
mov
adc
add
pop
jmp
and
pop
mov
out
lcall
mov
sub
sbb
push
mov
pop
arpl
mov
push
or
iret
dec
cmp
inc
imul
mov
gs
aam
mov
xchg
mov
cmc
cltd
jecxz
cwtl
enter
lret
dec
push
inc
and
cmpsl
xchg
inc
sbb
pop
ljmp
addb
ret
mov
test
mov
and
vpmaxsw
fsubp
mov
inc
jae
or
mov
mov
dec
cli
push
mov
cmp
scas
xchg
pop
fs
mov
pop
and
sbb
xchg
in
mov
fldcw
mov
push
mov
sbb
ror
jbe
aas
loop
jbe
and
roll
or
imul
mov
xor
in
mov
shr
xchg
mov
stos
fcmovnb
xor
in
scas
bound
mov
mov
xchg
roll
or
mov
sub
cwtl
psadbw
mov
add
jmp
lods
ror
jne
mov
cmc
aad
add
loope
rorl
addr16
jbe
mov
into
sbb
aas
loop
and
data16
push
adc
ficoms
stos
nop
outsl
sbbb
or
push
fisubs
xchg
jne
test
ret
cmpsb
repnz
dec
stc
out
fiadds
xor
pop
lods
push
jg
rclb
xorb
or
and
jmp
push
fidivrl
dec
leave
or
mov
pusha
cmp
sbb
mov
jbe
mov
hlt
and
xchg
fwait
jno
push
mov
xchg
int
scas
xchg
icebp
mov
and
cmp
lahf
sub
mov
dec
adc
enter
in
or
jno
mov
pop
dec
jne
sbbl
and
stc
jcxz
ret
clc
dec
mov
insb
push
jp
xor
popf
hlt
gs
xor
push
lret
xor
mov
mov
cli
sbb
lock
cs
stos
dec
in
fwait
std
jbe
gs
add
sub
shlb
mov
movsb
rcrb
pop
and
jb
lret
popa
repz
mov
dec
ljmp
std
inc
cwtl
sub
rorb
or
ljmp
sbb
or
mov
movb
das
mov
mov
push
mov
mov
pop
out
sbb
aaa
lods
addps
dec
mov
add
jb
hlt
inc
sub
jp
loop
xchg
pop
bound
lods
ljmp
bound
aam
mov
dec
lods
jl
pop
mov
push
imul
ret
pop
sbb
adc
or
pop
cmp
xlat
ja
fdivl
js
jge
mov
lcall
fistl
push
and
mov
icebp
into
in
in
push
lahf
ja
les
and
faddl
lea
push
dec
ds
mov
repz
lds
cmp
xorl
stos
cld
jnp
sub
aam
adc
sub
or
push
xor
ss
adc
xchg
repz
insl
xor
jbe
aad
dec
push
mov
jo
pop
push
fmul
ja
mov
rolw
mov
xor
push
mov
sarb
repnz
ret
test
jge
cmp
mov
ss
test
fmulp
aam
jae
daa
adc
jbe
mov
pop
shrl
enter
outsb
mov
add
and
repz
pop
movsl
pop
inc
add
mov
popf
or
aas
add
cmp
lods
dec
mov
sub
loopne
jae
imul
sti
xchg
test
fcmovne
lahf
dec
cli
xchg
fisubs
dec
adc
insl
jae
hlt
jb
aas
push
mov
in
enter
cmc
divb
std
jecxz
lods
xchg
outsb
dec
cmp
dec
mov
ljmp
inc
js
pushf
push
cli
sub
dec
inc
inc
fildll
jmp
xor
ret
rol
xchg
sub
mov
mov
xchg
lods
test
pop
mov
mov
push
push
mov
mov
rol
dec
sub
sbb
cwtl
add
cmp
in
adc
push
add
out
mov
ficompl
xchg
jecxz
sub
dec
shl
cmpsb
or
add
in
inc
xor
loopne
sub
in
xchg
mov
cli
stos
scas
inc
pop
ja
fdivs
out
arpl
cwtl
in
sub
mov
inc
pop
adc
sbb
mov
pop
int3
and
xor
dec
outsl
fs
add
jecxz
mov
dec
xor
add
ds
dec
lret
icebp
and
imul
fldln2
clc
pop
roll
cltd
stc
xor
inc
movsl
cs
sbb
lods
cmp
jae
nop
jno
and
cmp
les
cltd
pusha
pop
inc
dec
sbb
mov
push
aam
insb
adc
shr
adc
scas
clc
xlat
fbstp
jne
and
cmp
fbld
mov
pop
icebp
mov
add
sarb
push
push
stos
insl
mov
inc
lds
push
movsb
loope
clc
test
add
mov
aaa
mov
lods
pop
lret
add
or
adc
sub
fbstp
mov
push
flds
xchg
jae
xorb
repnz
or
push
pusha
sti
pop
jl
out
mov
rol
dec
add
inc
daa
in
cmpsb
fdivr
or
lcall
cmpsb
xor
sahf
xor
xor
notl
test
cmpsb
mov
or
dec
inc
jb
lock
mov
jecxz
add
push
test
dec
fsubrs
sub
mov
aam
mov
fistps
and
xchg
fsubrs
andl
add
in
int3
or
repnz
les
mov
js
push
jns
pushf
dec
sarb
mov
push
pop
sub
outsl
mov
push
pop
sub
sub
lcall
jb
cmp
sbb
int
mov
into
movl
popa
outsl
scas
dec
arpl
sub
jmp
sbb
repz
sub
lret
es
mov
sub
push
cmp
lcall
adc
into
mov
dec
mov
mov
jg
fmuls
inc
push
push
xlat
fcoml
dec
adc
mov
cmp
mov
test
out
out
and
cmpsb
out
cwtl
push
test
fwait
nop
lock
or
push
inc
sbb
and
jne
cmp
outsl
sbb
leave
pop
out
sub
mov
jmp
adc
shll
imul
or
hlt
je
ss
mov
repnz
xchg
mov
aaa
inc
sub
pop
cmpsb
push
push
dec
ss
xor
insl
jg
rclb
outsb
cs
ljmp
leave
jl
lahf
lock
jnp
int3
ret
xchg
stc
jmp
xor
dec
jnp
sub
pop
xor
in
lret
or
out
repnz
sub
xlat
loop
mov
das
cmp
xchg
sti
in
and
sbb
xor
scas
adc
not
mov
sbb
daa
dec
adc
js
std
sarb
insb
mov
xor
nop
ret
subl
xchg
out
cli
int
jno
stos
clc
ret
daa
scas
adc
push
dec
in
ret
mov
jg
or
in
mov
rcll
or
dec
clc
adc
mov
and
outsl
cmp
int3
mov
out
dec
ljmp
cmp
ret
cs
sarb
push
push
xchg
int
movsb
xchg
jns
inc
inc
pop
movsb
mov
test
mov
inc
dec
push
xchg
imul
xor
in
pop
cltd
xchg
inc
cmp
scas
dec
xchg
ret
stc
jge
mov
cli
rcl
xchg
mov
divl
sti
sti
push
pop
aam
scas
addl
test
pop
mov
pop
mov
cmpsb
dec
xor
and
popf
clc
repz
std
test
jno
mov
mov
ret
jmp
divl
mov
inc
sbbb
out
add
push
jo
sub
adc
cmp
aad
jecxz
into
xor
mov
jae
cmp
jno
test
mov
add
repnz
cmpsb
pushf
mov
pop
inc
lahf
rcll
jns
pop
fcomps
lds
lods
repz
xlat
pop
inc
mov
sub
daa
push
es
push
push
xor
and
fs
cmp
jg
in
fadds
mov
in
lods
add
adc
jnp
ja
pop
jmp
mov
bound
sbb
add
icebp
ds
in
adc
jmp
pusha
jecxz
jne
ret
cmp
fs
shrl
cmpsl
xchg
sahf
out
stc
jae
enter
push
add
and
xchg
push
sbb
stos
sbbb
js
adc
adc
outsl
jp
scas
int
cmc
add
pop
test
leave
lea
jae
mov
xchg
stos
std
adc
addr16
jo
mov
sti
insl
adc
cmpsl
popf
rcrb
mov
jne
mov
inc
pop
push
xlat
shlb
and
iret
sarb
and
shr
xchg
pop
fwait
sub
fs
sub
xchg
les
pop
popa
fsts
subb
test
add
iret
mov
mov
dec
mov
addr16
pop
inc
add
ja
jns
mov
push
aam
je
pop
daa
dec
and
jle
loopne
inc
fadds
pop
mov
out
sbb
outsl
push
sub
xchg
sti
cmp
jecxz
iret
leave
mov
fxch
movsb
cld
jo
js
cmp
sub
mov
inc
fildll
mov
xchg
aam
shr
jl
add
popf
jae
sbb
jb
add
clc
insb
push
fcmovu
sub
add
shl
cmpb
or
fs
jns
mov
ret
mov
inc
cwtl
xchg
decl
jno
aaa
inc
fdivl
add
fxch
pusha
lret
push
sub
test
jle
pop
in
add
mov
stos
or
add
fdecstp
push
mov
jne
outsb
outsl
inc
jge
int3
mov
data16
inc
repnz
adc
push
int3
fmuls
pop
mov
push
push
xchg
jae
fadds
dec
mov
into
outsb
popf
mov
pop
jb
sub
decb
push
ds
bound
cmp
mov
scas
mov
jmp
xchg
sub
xchg
push
add
mov
mov
sbb
mov
je
xor
test
js
jns
pop
out
mul
xchg
ja
jbe
dec
lds
mov
cmp
adc
xor
xlat
push
xor
les
push
lcall
xchg
addr16
sub
cmpsb
cltd
add
data16
push
ret
or
and
inc
mov
dec
ret
lret
icebp
inc
cld
adc
sbb
jmp
adc
pop
xchg
push
dec
sar
in
jo
and
xchg
xchg
imul
es
adc
dec
pop
movsb
cmp
das
adc
imul
dec
adc
stc
jno
inc
inc
fildl
outsb
jbe
sbb
das
mov
inc
fdivrs
dec
loope
lret
sbb
cmp
inc
clc
cmp
xchg
outsl
icebp
pop
arpl
mov
les
add
jl,pt
outsb
pop
test
mov
popf
sbb
mov
adcl
stos
js
out
inc
and
xchg
xchg
sbb
movb
aas
ret
in
out
jmp
ret
imul
add
leave
pop
cmp
adc
loope
mov
cmp
push
sbb
and
cmpsb
sub
jle
push
and
cmc
out
js
lea
push
es
mov
sub
icebp
call
adc
mov
inc
mov
fsubrl
xor
call
add
shlb
mov
jge
mov
out
insb
insl
ror
rorl
or
ss
repnz
incb
in
ss
icebp
out
int3
xor
repnz
mov
test
jne
imul
int3
xor
inc
jp
cmpl
add
fsubrs
cmpsl
xor
push
mov
sub
stos
cmpsl
call
out
mov
cmp
mov
cmp
dec
aad
repnz
jmp
call
insl
call
push
je
pop
fimull
psubsw
scas
cmp
clc
push
cmp
cmp
mov
pop
push
inc
jp
test
dec
jo
into
push
nop
fdivl
and
ret
mov
nop
pop
pop
jle
or
adc
cmpsb
mov
lods
cmc
aaa
xor
repnz
es
xchg
xchg
mov
adc
popl
fcmovnbe
fwait
cmpsl
push
gs
mov
shr
cs
cmp
jns,pn
movsl
mov
das
add
or
std
rorb
pop
je
mov
fsubrp
jno
aam
push
fsub
lret
data16
mov
leave
lret
or
pop
jp
lods
cmp
repz
lods
test
adc
stc
sbb
and
mov
push
jnp
ret
inc
lcall
sahf
and
ror
popa
or
push
mov
dec
cmp
xchg
pop
lea
rcl
add
dec
sub
xor
fcmovnbe
mov
lods
lds
pop
int3
repnz
jo
je
scas
sbb
bound
lret
push
pop
xorb
cs
sbb
popl
push
mov
sbb
je
pop
lock
lret
and
cltd
mov
ret
mov
jmp
sahf
sub
testl
mov
jo
inc
ret
ret
and
popl
test
leave
test
mov
aas
and
push
mov
pop
jne
pop
add
test
add
sub
stos
lcall
imul
mov
test
cmp
rclb
inc
pop
dec
xchg
push
lods
mov
cmc
popa
imul
sbb
ljmp
mov
xor
mov
add
je
hlt
aam
push
xchg
push
or
mov
mov
mov
cmc
jo
sbb
add
mov
jnp
mov
add
leave
xchg
sub
scas
mov
cmp
push
mov
lret
rcl
push
mov
test
inc
sub
lcall
scas
mov
stc
adc
leave
jecxz
or
movsb
daa
and
sub
mov
mov
xchg
lret
idivb
cmpsb
popa
ret
call
inc
pop
pop
dec
add
pushf
scas
outsb
inc
jecxz
xchg
xor
loope
inc
mov
fdivl
sbb
push
fwait
add
in
and
cmpsb
xor
stos
mulb
iret
mov
sti
sub
imul
adc
cwtl
cmp
xor
call
pusha
dec
int3
fdivl
mov
fldt
adc
jle
mov
ja
out
dec
mov
xorl
adc
mov
xor
dec
mov
inc
shr
mov
pop
fcompl
imull
jmp
sub
fs
insl
push
push
cmpsb
ja
mov
cmp
push
or
je
inc
xchg
cmp
jg
sub
sbb
mov
adc
sub
mov
and
in
sbb
inc
mov
int3
push
jns
ja
pop
es
in
fidivrl
dec
add
lods
xorl
aam
xlat
push
and
fnstenv
inc
mov
bound
xchg
mov
daa
pop
aas
adc
in
xchg
cmc
inc
add
ror
andb
lock
pop
lods
xlat
lods
xor
and
movsl
test
mov
lcall
out
cmp
inc
pop
add
cltd
mull
bswap
and
in
push
add
mov
jno
sbb
jle
andl
inc
and
outsb
inc
mov
mov
pop
or
mov
orb
push
jp
jg
push
mov
dec
mov
or
stos
mov
mov
mov
arpl
stc
add
inc
jle
fnsave
pushf
inc
ljmp
xor
popa
je
lret
andl
arpl
push
fisttps
mov
shlb
sbb
or
jb
pushf
inc
fbstp
add
loop
scas
sbb
cmp
incl
xchg
mov
inc
stos
sbb
mov
sarl
dec
stos
lret
jb
aas
cli
push
cmc
pop
out
jb
pop
cmpb
xor
cmp
icebp
push
mov
and
mov
dec
aad
push
popa
in
call
add
clc
and
inc
ficompl
cmp
in
movsb
jmp
scas
inc
xchg
adc
cmp
jp
scas
cmp
pusha
arpl
mov
mov
mov
ljmp
in
and
xor
lret
mov
and
push
push
arpl
push
mov
mov
push
das
jae
sahf
leave
adc
lahf
ja
out
add
sub
inc
adc
mov
dec
xchg
xor
dec
test
in
aaa
setb
sub
fsts
sub
mov
or
sbb
enter
push
daa
jae
test
push
inc
push
push
in
mov
push
cmp
lret
movl
mov
adc
sub
jb
xor
adc
ffreep
jbe
dec
mov
out
mov
insb
inc
lods
jg
fwait
pop
xchg
jl,pn
lret
outsl
fmuls
imul
dec
rcrl
lcall
movsl
cltd
clc
in
or
in
push
outsl
add
pop
push
fldt
mov
dec
loop
sub
inc
mov
cmp
fmul
mov
rcrl
loopne
cltd
ja
xchg
inc
lock
xor
in
push
cmc
cmp
popf
aaa
shr
adc
jle
cmc
in
jmp
loop
sbb
popa
cwtl
mov
mov
dec
push
pop
and
mov
pop
lds
mov
add
cmp
dec
in
ffree
dec
ss
jns
mov
mov
sbb
lea
cmp
push
cmpsb
jl
divb
or
push
mov
in
and
cli
sbb
xlat
push
mov
mov
pop
hlt
adc
xchg
lods
movsb
popa
adc
jmp
popf
add
cmpsl
out
inc
outsb
leave
adc
mov
out
fwait
stos
stos
dec
adc
mov
dec
imull
insl
inc
fidivrl
ret
mov
loope
push
mov
mov
inc
data16
mov
xchg
add
fdivrl
cmp
shl
push
imul
mov
fs
inc
stos
cmp
add
cmpsb
lock
xor
jge
dec
push
fdivrp
outsl
sbb
mov
daa
mov
xchg
ficomps
cmp
mov
inc
mov
js
mov
int
add
or
pop
data16
add
sub
dec
jnp
cmp
lret
push
cmp
cmp
and
imul
imulb
jg
jb
frstor
cs
mov
stos
inc
lock
das
aam
sti
loopne
sti
jae
js,pt
lahf
es
mov
insl
mov
sarl
cli
out
add
and
cmp
loop
ret
jecxz
stos
repz
fcoml
or
popf
or
pop
dec
cs
cmc
jl
les
pop
lds
lcall
in
aas
add
or
mov
and
jne
jmp
jecxz
add
mov
mov
inc
movsl
xchg
das
in
arpl
push
or
lods
hlt
xchg
fs
sbb
cmc
imul
int3
dec
mov
decl
pop
mov
loopnew
mov
mov
bound
dec
std
lods
xlat
ds
cmp
lcall
adc
sbb
inc
sub
loop
jae
jp
stos
and
xchg
negl
popa
cmc
sub
scas
std
sub
sub
daa
inc
jp
jne
jmp
pop
mov
mov
daa
std
and
jle
push
mov
or
fxch
adc
cmp
xchg
rorl
xor
mov
dec
jge
mov
cli
push
bound
lds
pop
xor
add
aad
ss
push
lock
je
scas
jg
sbb
in
mov
xchg
inc
cmpb
pushl
jbe
mov
lahf
mov
push
aad
inc
sub
fists
sub
sti
ret
iret
mov
inc
mov
ljmp
int
jle
test
or
mov
lahf
aas
int
adc
outsb
cmp
sbb
aam
addr16
push
pop
lahf
xchg
sbb
and
add
sbb
jle
mov
dec
push
and
jg
nop
ficoml
and
push
pop
sub
nop
movsl
sub
and
jno
cmp
das
lar
mov
loope
lods
ss
add
or
dec
push
test
pop
sub
push
das
pop
xchg
fistps
cwtl
lea
mov
push
lds
push
and
pop
popf
loop
inc
mov
push
out
sub
push
aam
lds
stc
xor
rclb
scas
call
pop
stos
sub
jl
pushf
sbb
push
cltd
rclb
mov
mov
adc
lock
imull
ja
pop
call
adc
fldcw
out
or
cmp
out
dec
add
mov
add
lcall
pop
xchg
jl
mov
into
mov
xor
jle
push
xchg
pop
adc
and
sub
lret
fldl
divb
sarb
shl
add
jg
or
shl
xor
push
jl
inc
push
adc
iret
dec
jnp
xchg
ret
adc
add
test
inc
push
daa
xor
sub
ds
xor
shll
fs
jb
mov
push
in
hlt
arpl
xor
fistl
and
popa
mov
rcl
pop
jmp
aas
fbld
adc
push
adc
inc
mov
or
mov
dec
jge
fs
push
fldenv
jmp
je
xchg
jl
jle
dec
mov
xchg
arpl
mov
inc
dec
dec
subb
icebp
mov
cwtl
icebp
pushf
mov
add
xor
mov
pop
mov
ret
adc
ret
mov
mov
sbb
cld
push
addr16
fstl
xchg
adc
shll
jne
cmpsb
imul
out
add
mov
xor
clc
cmpb
jp
stos
xor
pushf
xchg
push
ret
fs
mov
outsb
div
mov
xchg
push
fcomip
sbb
outsl
insb
jge
sbb
inc
pushf
lcall
dec
lock
fstl
mov
jl
jl
sub
inc
jl
cmpsb
dec
or
insl
fwait
push
bound
and
xchg
movsb
cmpsl
das
imul
addr16
ret
call
aad
mov
mov
stos
or
jb
lret
jae
lret
daa
sarl
and
push
inc
or
andl
ss
ret
push
jo
xchg
and
mov
stos
mov
loop
insb
sbb
and
push
fcompl
xchg
mov
inc
inc
rorb
ss
mov
inc
fbstp
pop
int3
jno
jle
fcmovne
out
or
aam
repnz
stos
mov
or
dec
push
incb
movsl
inc
test
or
ja
inc
mov
aad
push
mov
int3
punpckhwd
sarb
inc
xor
idivl
jae
and
mov
dec
repz
cmpl
cltd
xchg
jge
add
pop
sti
cmpsb
cmp
push
push
gs
mov
test
inc
push
addr16
inc
xor
pop
add
mov
loopne
out
std
pop
pop
dec
loope,pn
xor
lahf
js
pop
cmpsb
push
imul
sub
pushf
sbb
inc
icebp
aas
mov
aaa
ljmp
pusha
mov
cmp
ret
aad
shrb
fcomps
jmp
inc
scas
mov
adc
inc
mov
loopne
push
xchg
inc
and
sbb
not
xor
lret
push
ja
mov
cmp
int3
xchg
in
mov
mov
mov
les
repz
mov
scas
xlat
testb
pushf
xor
cli
sbb
rcll
test
jns
insb
jb
clc
pushf
jnp
dec
pop
int3
xchg
fwait
dec
mov
in
sub
mov
bound
push
test
pop
fs
leave
adc
shl
das
pop
inc
jnp
push
jns
cmpxchg
sbb
pushf
mov
push
push
sbb
jmp
jmp
dec
ret
cltd
xlat
and
test
xorl
push
and
pop
or
subl
mov
mov
adc
fnsave
dec
jmp
adc
pop
cmp
sbb
roll
pop
in
arpl
adc
cmpsl
stc
push
cmp
or
sub
lret
mov
xor
outsl
jmp
pop
and
int
ds
imul
fs
out
clc
test
cwtl
xchg
out
outsb
inc
scas
mov
and
popf
orb
dec
add
js
out
dec
repz
lock
jge
jae
cwtl
push
pop
jnp
jo
iret
sbb
push
sbb
sub
mov
adc
mov
xchg
mov
ljmp
mov
jmp
jbe
test
les
push
or
ret
ljmp
sarb
lret
jecxz
add
xor
jo
add
cltd
gs
lds
mov
ficoml
mov
jne
mov
sti
test
jl
push
sub
filds
loope
cmp
inc
jns
and
test
imul
cs
cmc
stos
movsb
shlb
fcomps
pop
sub
cli
dec
inc
lret
mov
fistl
jno
or
jg
dec
mov
outsb
xchg
mov
jg
fs
add
and
xlat
mov
pushf
cli
addb
sub
dec
mov
imulb
sbb
pop
mov
sbb
cwtl
rorb
xor
jbe
mov
sub
dec
aad
out
xchg
xor
cmp
push
add
loop
mov
inc
fnsave
cmp
out
add
dec
insb
outsl
or
enter
pop
inc
stc
nopl
mov
dec
mov
cmpsl
sub
or
sub
push
push
cmp
loop
leave
cmpsb
lret
arpl
jno
test
jecxz
outsb
add
fwait
push
cmpsl
mov
shr
rcll
push
jae
in
hlt
scas
cmp
stos
dec
xchg
inc
xor
jo
mov
cmp
ss
loope
adc
jne
jl
xor
in
enter
ficomps
out
dec
xor
xor
add
stos
fidivrl
sub
inc
xor
nop
mov
mov
inc
cmpsl
dec
push
scas
mov
cmp
xor
repz
sub
rclb
xor
xor
sti
dec
sahf
cmpb
adcb
jmp
jbe
sbb
cmp
fdivr
dec
bswap
enter
mov
js
and
or
xor
into
outsl
add
mov
xchg
jg
je
xchg
sbb
iret
adc
dec
mov
inc
call
sbbb
xor
loop
out
sub
icebp
pop
jnp
popa
lea
test
call
ds
frstor
cmp
mov
sbb
dec
jg
mov
jg
sbb
movsb
adc
xchg
jns
xlat
sbb
cs
adc
fwait
adc
adc
add
subb
or
pop
cmp
call
mov
ss
jmp
notb
adc
sbb
insl
cmpsl
test
cmp
push
iret
bound
nop
cmp
mov
call
out
xor
fimuls
sub
and
pop
pop
outsb
cmp
or
test
inc
mov
das
in
jmp
cs
insb
into
dec
sbb
movsl
cmpl
adc
jge
mov
test
lods
dec
sbb
xchg
pop
sti
lret
sbb
lahf
mov
stc
rcl
shll
popf
xchg
hlt
add
inc
mov
jg
decb
push
inc
out
cmp
sub
pop
mov
ds
mov
sbb
sub
sbb
xor
leave
mov
mov
dec
or
pop
popa
in
add
int
leave
clc
pusha
adc
ret
fs
insl
pop
cmpb
dec
lahf
mov
or
popa
outsb
andb
xchg
mov
insl
mov
mov
push
adc
and
fmull
cmp
sahf
hlt
pushf
push
sarl
or
cmpl
mov
adc
mov
dec
or
adc
add
xor
jp
lods
mov
add
rcrl
test
push
fdivl
add
mov
push
dec
adcl
and
rorl
jo
sub
fcmovnu
popa
mov
cmc
sub
lods
ret
xchg
mov
movsl
andl
pop
push
cli
cld
pop
aaa
shl
mull
jbe
cmpsl
and
std
cs
in
and
mov
popf
jno
cltd
lcall
cmp
jae
inc
fsubrs
mov
jp
test
icebp
adc
aad
jp
jecxz
outsl
jge
pop
add
inc
sbb
inc
xchg
mov
sbb
sbb
out
ja
sub
sbb
mov
lds
sahf
or
cwtl
ja
push
insl
cmpsl
or
inc
fwait
add
push
lret
movl
or
andb
stos
imul
push
loop
mov
mov
jb
push
sbb
and
inc
scas
sbb
in
aaa
enter
xchg
aam
inc
jmp
sbb
mov
pop
icebp
ret
adc
adc
js
xor
lods
es
notl
or
mov
test
mov
xor
pop
jbe
int
cmp
or
enter
iret
mov
cld
xor
push
pushf
mov
pop
repnz
pusha
aaa
mov
loop
fs
imul
push
aad
rcl
jmp
mov
lds
mov
inc
movsl
cmpsl
push
icebp
mov
stos
and
pop
pusha
mov
cs
mov
adc
xchg
fnstsw
movsb
sbb
mov
cmp
jbe
imull
push
adc
pop
lea
dec
adc
aaa
outsb
popa
or
dec
in
enter
pop
call
filds
sub
aas
xor
movsl
push
sbb
ficoms
fnstcw
push
leave
and
mov
cmpsb
lahf
inc
xchg
mov
sbb
popaw
rcrb
cs
or
nopl
sub
push
divps
push
mov
xchg
pop
bound
shlb
in
int
xor
mov
jae
mov
stos
mov
out
scas
nop
sub
inc
xchg
push
jmp
popf
sbbl
inc
or
les
ret
push
inc
jb
dec
xchg
jae
mov
cltd
divl
dec
scas
jl
and
xchg
sub
repnz
and
pop
test
fiaddl
ret
push
ret
pushf
xor
jae
push
pop
imul
cmp
jg
jne
lret
jb
fnsave
sahf
ds
in
popa
sbb
in
stos
pop
and
lret
mov
mov
and
push
or
mov
fdivs
mov
mov
or
mov
or
or
xor
dec
push
or
scas
jns
inc
lret
inc
push
loope
mov
mov
fimuls
add
jb
pushf
bound
fst
test
fstps
in
jmp
inc
daa
popf
repnz
leave
add
imul
jl
mov
sub
sahf
insl
jecxz
out
sbb
icebp
shll
jge
out
andb
divl
jmp
rep
add
mov
mov
iret
arpl
xor
cmp
adc
cwtl
imul
fiaddl
rorl
pop
xchg
pusha
sbb
imul
push
insl
mov
mov
fsubrs
push
mov
push
fwait
cmp
sub
inc
xorl
aad
xchg
pop
inc
call
and
enter
dec
dec
inc
leave
sbb
sarl
mov
int3
fnsave
and
lods
jp
push
xor
inc
jge
pop
jbe
push
lock
iret
fisttpl
jns
jno
xchg
mov
mov
leave
cld
xchg
sbb
daa
add
push
dec
sub
outsb
mov
adc
mov
cmp
push
xchg
jmp
cmp
mov
enter
loopne
dec
jecxz
decb
js
in
or
test
or
out
lock
cltd
or
fldl
jp
dec
sub
ret
addl
pop
lcall
cmpsb
mov
inc
ret
and
stos
push
push
adc
dec
loopne
aas
pop
add
stc
mov
mov
sbb
cmp
outsl
addb
mov
sub
jne
rclb
nop
es
add
insl
or
clc
and
sahf
cld
xor
mov
pop
mov
test
dec
js
xor
dec
out
push
push
sarl
call
ret
ljmp
push
imul
into
lcall
lods
lcall
inc
or
jecxz
ret
pop
mov
out
repz
add
mov
jmp
cmpsb
popl
mov
pop
hlt
dec
mov
lret
or
jb
adc
js
push
repz
sub
in
insb
sbb
cmp
in
and
lcall
test
xor
sbb
pusha
dec
sbb
or
je
lock
cs
je
out
mov
mull
pushf
insb
into
bnd
xor
cmp
lods
sbb
push
int3
sub
das
aas
push
pop
je
cmp
jecxz
pop
in
mov
adcb
jbe
cwtl
inc
fstpt
mov
into
mov
cs
dec
je
sbb
mov
dec
ret
lods
test
mov
icebp
lret
call
scas
jb
cmc
add
aad
xchg
in
rcrl
rcrl
xor
xchg
dec
mov
mov
ret
bnd
hlt
sub
push
jbe
cmc
inc
test
stc
ss
pop
fs
cmpsb
popf
pushf
inc
inc
stc
sub
mov
or
daa
ja
and
mov
cmc
pop
inc
out
cld
stos
xor
insb
stos
jmp
call
jnp
movsb
cmpsl
fcomps
dec
cmp
push
inc
das
ror
ljmp
jmp
jg
fiadds
lret
push
jb
push
mov
inc
add
cmp
addr16
sbb
mov
negb
pop
inc
push
stc
pop
or
mov
loopne
push
push
rclb
sbb
lods
dec
fiaddl
aad
hlt
js
test
pop
add
pop
xchg
jge
in
lods
aam
xchg
pop
mov
pusha
ja
lods
sbb
rcrl
popa
movsl
push
repnz
lahf
sub
add
sbb
jbe
loope
add
loop
cmp
in
in
dec
loopne
rcrl
out
push
adc
and
pop
shlb
ret
test
push
test
fcoml
popf
jnp
mov
inc
inc
add
sub
stos
jmp
ss
jns
subl
addr16
stos
icebp
xor
sarl
pusha
and
mov
dec
jns
les
mov
in
bound
gs
shl
push
stc
mov
aaa
insb
inc
mov
jmp
xchg
stc
fildll
fisubl
inc
sbb
dec
xlat
arpl
loopne
addr16
sbb
lods
or
cmpsl
mov
sbb
stos
push
movsl
lret
and
pop
adc
inc
dec
adc
pusha
xor
aam
pop
add
imul
in
sbb
lcall
stos
out
movsb
sti
xor
mov
lea
sahf
inc
popa
add
insl
jg
sbb
mov
xchg
pop
andb
lcall
arpl
mov
into
call
mov
push
repz
repz
std
xchg
mov
add
and
aas
and
mov
shl
xchg
cs
xchg
pop
or
add
in
hlt
insl
pop
nop
cld
outsb
std
vmovsd
pop
pusha
ror
div
xchg
arpl
ljmp
pusha
lods
xchg
pushf
dec
xchg
loop
inc
cwtl
insl
push
shrl
lahf
push
mov
adc
shll
mov
fwait
pop
cwtl
je
lahf
scas
sbb
in
addr16
xchg
cmp
fmull
test
sbb
daa
loope
cmp
or
fcomps
or
aaa
inc
push
arpl
out
cmp
xchg
lahf
rorb
and
out
sbb
mov
out
dec
and
adc
push
jae
xlat
jp
xchg
fucomp
fsubrl
push
pop
mov
test
popf
xchg
sub
and
xchg
cmp
mov
outsl
pop
lret
sbbb
es
fnsave
jns
push
das
pop
inc
sbb
stos
ret
dec
xchg
cmp
popa
mov
mov
xchg
sub
enter
sub
aad
and
jp
pop
and
lret
mov
stos
jnp
faddl
push
sub
push
mov
xor
pusha
cs
mov
sti
pop
cmc
mov
mov
inc
jp
cmp
lods
xlat
inc
fimuls
or
call
call
cwtl
jae
sarl
cmpsl
jg
testl
xor
cmpsb
mov
xor
mov
scas
out
aas
mov
xor
mov
jmp
or
adc
add
in
cmp
in
mov
push
daa
inc
mov
aas
ss
and
sub
jge
push
clc
jne
mov
xchg
or
mov
std
das
addr16
rcrb
dec
xchg
dec
mov
out
insb
ja
or
cmp
int
stos
int
sbb
aam
cmp
push
ja
xchg
in
into
movsb
jl
push
lahf
inc
into
fstpt
mov
syscall
push
outsl
dec
inc
into
sub
push
mov
lods
ja
stos
daa
aaa
inc
sub
icebp
insb
in
fidivl
in
stc
dec
xor
mov
ljmp
dec
push
lock
xorl
lea
jae
cld
jae
and
mov
xchg
mov
test
pop
and
or
dec
or
fistps
mov
js
jbe
xor
cmp
push
xchg
lea
iret
lds
add
mov
add
or
sbb
pop
sbb
pop
call
out
cmp
rcrl
movsb
push
sub
aad
jge
aad
test
popf
mov
add
into
mov
mov
add
inc
test
test
cmc
dec
pushf
mov
inc
icebp
xchg
sbb
out
int
outsl
enter
push
push
loop
inc
fisubrs
pop
int3
pmaddwd
out
cld
inc
lea
sub
rcll
adcb
cld
and
in
sahf
mov
popa
add
sub
loope
divb
pop
aam
mov
aaa
lcall
jecxz
jle
and
adc
add
or
add
cltd
imul
push
int3
add
pop
data16
or
aad
lods
cmp
in
out
push
je
punpcklwd
pop
push
loop
mov
add
dec
mov
bound
push
lret
dec
fmull
imul
jae
or
mov
aaa
pusha
add
cmp
dec
fimull
andb
xor
les
movl
das
mov
or
fcmovnu
jg
mov
mov
inc
mov
pop
inc
jmp
stos
or
add
cwtl
sbb
lock
out
dec
push
das
outsl
mov
insl
push
xor
call
mov
mov
xor
jb
arpl
xor
xor
xor
fdivr
mov
xor
insl
lock
fstl
jnp
bound
or
mov
or
inc
fdivrs
pop
dec
in
sti
mov
nop
imul
in
lret
mov
repz
fdivrl
xchg
leave
add
adcb
or
sub
inc
andps
movsl
hlt
dec
fsub
mov
adc
aaa
adc
mov
pop
les
in
jmp
arpl
les
sub
sahf
lea
test
stc
mov
outsl
push
xlat
jmp
mov
lret
push
inc
movsl
adc
xor
mov
jbe
pop
in
dec
inc
popa
xchg
lret
xchg
cs
inc
fdivrs
stc
out
adc
hlt
fistps
inc
sarb
dec
dec
inc
fwait
mov
rcr
dec
add
stc
jmp
mov
fstps
jns
sbb
jmp
vphaddudq
repnz
inc
mull
xchg
jnp
into
bound
insb
dec
mov
out
cmc
adc
xchg
and
std
jp
movsl
lock
mov
out
xchg
pop
or
inc
adc
pop
rcrl
outsb
dec
xchg
dec
into
push
or
pop
dec
enter
daa
loope
adc
nop
dec
sbb
mov
xor
movsl
inc
push
jnp
std
lock
push
jns
test
jno
and
lidtl
repnz
mov
xor
pop
push
movsb
sub
jmp
pop
jnp
rcr
sbb
xlat
sub
push
or
or
mov
leave
lea
cmpb
test
cmp
cmc
lahf
xchg
aam
xchg
ret
sbb
fs
popl
pop
mov
rclb
jnp
negb
jns
jle
inc
iret
dec
jo
adc
in
insb
enter
jns
dec
jns
add
loope
inc
or
in
jnp
xchg
adc
ret
adc
cmp
mov
imul
decl
and
jo
das
xor
fcomps
lcall
test
or
movsl
mov
or
aas
adc
cwtl
fidivl
into
test
ficoml
lret
int3
and
fidivs
and
dec
jl
fwait
and
test
push
fdivrl
jecxz
in
push
xor
or
sti
imul
aad
scas
negb
jb
lahf
in
add
ret
pop
jne
mov
stos
sub
jae
fsts
int
jmp
leave
loope
nop
mov
fxch
xor
xor
dec
push
pusha
shl
ds
adc
lahf
or
jb
stc
dec
xchg
clc
jbe
rolb
cmp
xlat
mov
xor
stc
mov
and
addr16
fsubrl
decb
sub
scas
or
cmp
lcall
xor
push
cli
and
xor
xchg
mov
mov
push
js
insb
add
jne
xchg
bnd
cmc
loopne
xchg
int3
pop
pop
adc
and
xchg
cmpsb
mov
or
and
ret
cwtl
lahf
lret
inc
ja
mov
or
cmp
xchg
inc
aad
test
lahf
cmpsb
mov
rorl
negb
repnz
xchg
mov
or
and
aas
outsl
test
int3
xchg
jg
dec
cmpl
inc
enter
add
out
mov
cmpsb
lahf
mov
add
icebp
or
pop
xor
push
dec
push
pop
pop
inc
pop
jo
fldenv
mov
and
hlt
in
jne
dec
dec
inc
in
adc
ret
xor
push
inc
sbb
sbb
push
sub
fistps
loope
cli
or
mov
pop
jl
rcl
push
icebp
ret
dec
out
js
imul
or
xlat
mov
fsubs
push
rcrb
sub
sbb
dec
mov
jmp
or
adc
and
dec
mov
pusha
fisubrl
mov
or
cmp
movsb
sub
push
xor
imul
daa
dec
mov
xor
jge
or
sub
int3
or
es
ljmp
sbb
scas
cwtl
fnstsw
pop
mov
sbb
sbb
mov
ja
pop
cmp
cmpsb
mov
imul
add
setl
xchg
cwtl
inc
cltd
or
int
aam
js
mov
sbb
cmpsl
adc
sbb
sbb
dec
push
dec
fbld
in
mov
or
aaa
mov
and
leave
jl
fwait
pop
int3
xchg
sbb
mov
dec
in
add
mov
into
sbb
addl
roll
sete
jns
lcall
jmp
sbb
sub
pop
xchg
inc
pop
fisubrl
inc
out
sti
lea
xor
xchg
sbb
lcall
cmpsb
xor
cld
mov
mov
cmp
pop
push
popa
std
cld
jle
outsl
jmp
cmp
pushf
jae
pop
and
ds
cmc
inc
imul
das
pop
ret
adc
out
out
stos
cmp
inc
pop
sub
xor
test
mov
cs
idiv
adc
mov
xchg
test
add
jns
pop
loop
lea
xor
inc
jno
je
pop
push
push
sbb
mov
push
test
dec
sbb
sub
mov
lods
pop
hlt
dec
add
std
xor
cmp
or
push
daa
stos
stc
and
hlt
mov
je
dec
aaa
adc
sbb
mov
seta
push
loope
dec
cmpsl
mov
mov
lcall
xchg
aad
out
and
popf
mov
jg
or
insl
dec
arpl
jno
outsl
ljmp
or
or
xchg
mov
sti
test
mov
nop
nop
jb
test
pop
int
or
lahf
cmp
inc
xchg
push
icebp
sub
scas
adc
mov
fcmovu
xchg
cmc
mov
aas
xor
negb
das
xlat
aaa
call
movl
fxch
pop
rcll
repz
mov
fcoml
jge
cmp
mov
xor
push
and
push
push
clc
das
lcall
addr16
movsl
mov
adc
mov
dec
enter
pop
jge
mov
mov
sbb
push
jns
inc
cmc
and
xchg
sbb
push
jecxz
adc
mov
cmp
cmp
pop
jl
ljmp
mov
and
push
inc
lcall
dec
leave
cmp
movsl
rol
mov
push
loopne
stos
push
and
pop
fwait
cli
xchg
imul
rclb
xor
xchg
in
ja
adc
mov
xchg
addr16
or
popa
push
inc
nop
iret
fstps
cld
cli
imul
or
imul
inc
xor
arpl
setb
push
inc
cmp
stos
fs
push
dec
in
mov
inc
sub
ret
push
fcoml
test
jmp
cmp
in
mov
clc
jno
shr
outsl
jb
or
or
or
add
shlb
and
pushf
popf
or
add
xor
jmp
aad
mov
mov
int
mov
movsl
xchg
ja
fldl
adc
sub
push
daa
loop
or
divb
dec
xor
sbb
cmp
stos
mov
ret
aaa
insb
inc
repz
insb
jno
rolb
xchg
fsubl
or
fisttpl
frstpm(287
cmp
cld
ret
mov
outsb
int3
jbe
mov
xchg
jl
aad
adc
lahf
es
aas
cmp
out
test
mov
fisubrl
jns
fsubrs
cli
push
les
shrl
inc
push
or
cmp
lcall
push
stos
inc
pop
test
repnz
jge
in
adc
jbe
mov
xlat
repnz
push
and
dec
cmp
ds
outsl
pop
cld
push
movsb
push
les
lock
xor
out
add
daa
push
adc
mov
cmp
mov
cld
enter
lods
jae
mov
cld
out
jae
int
decb
mov
xchg
cmc
lds
push
scas
mov
std
fdivrs
gs
dec
das
jbe
xor
sub
and
add
mov
mov
sub
push
fnstsw
sbb
pop
sbb
movsb
dec
inc
aad
out
mov
jmp
pop
cmp
xchg
mov
aaa
pop
mov
in
inc
sub
lret
adcl
fistps
stc
call
mov
std
lret
ret
dec
ret
push
scas
les
inc
cmp
push
mov
das
and
mov
in
push
mov
pop
xor
jg
jg
bound
test
dec
mov
jo
dec
dec
into
xchg
test
imul
das
in
or
fcomi
inc
fs
arpl
cmpsl
push
sub
inc
ret
push
es
pop
subl
inc
mov
loopne
adc
out
imul
rol
aad
pop
xor
out
dec
push
adc
pop
dec
fdivl
js
xlat
out
jecxz
add
sbb
push
lods
aaa
sbb
loop
sarl
push
sbb
ds
or
clc
mov
test
cmp
hlt
and
sti
sbb
adc
pushf
mov
loopne
xor
push
sub
mov
call
ficoms
stos
das
into
mov
and
js
pop
outsl
sub
push
push
sbb
bound
inc
mov
outsl
or
lcall
mov
stos
andl
es
cli
loope
xchg
shll
ljmp
and
dec
lcall
xchg
out
es
shlb
mov
cwtl
repz
fmuls
cmp
jne
inc
push
stc
popf
scas
in
push
cmp
and
bound
mov
fincstp
push
pop
sbb
jne
icebp
push
pop
call
fs
push
and
jae
xor
push
or
lret
mov
fldcw
xchg
mov
cmp
repz
out
xchg
mov
mov
test
add
hlt
pop
push
jnp
push
pop
jmp
movsl
ficompl
inc
xor
cmp
stos
sbb
loopne
jmp
push
and
cmp
jecxz
jnp
push
adc
mov
mov
in
inc
cmp
mov
inc
push
xor
fcmovnu
ret
loopne
fnstsw
ret
inc
push
push
mov
cltd
dec
dec
sarb
cmpsl
adc
aas
hlt
adc
movsb
into
pop
loopne
into
stc
insb
call
mov
decb
push
es
lret
rcll
das
sti
pop
jge
mov
call
push
mov
lahf
dec
enter
inc
sbb
xlat
call
xchg
mov
pop
push
mov
daa
xor
int
sub
arpl
nop
pop
rolb
or
bswap
test
or
mov
adcb
mov
aam
xchg
push
mov
into
fldcw
sub
mov
into
sub
adc
jbe
jbe
fisubs
arpl
pop
sbb
lahf
or
add
fucomip
in
stos
and
pop
repnz
inc
push
sub
imul
arpl
fdivrl
sbb
jne
loop
or
in
and
gs
pop
xorl
das
cmpb
mov
mov
pop
mov
movsb
sbb
out
mov
xchg
mov
xor
ljmp
mov
lods
add
jecxz
imul
sbb
hlt
out
and
inc
pushf
in
stos
mov
jnp
repz
test
lcall
mov
je
daa
mov
xchg
push
xchg
adc
lret
pop
sub
out
pop
outsb
loop
inc
outsl
jp
jns
sbb
lods
cmc
pop
lret
daa
mov
out
ljmp
mov
clc
mov
mov
xor
xchg
xchg
sbb
dec
xchg
out
adc
push
mov
push
add
mov
mov
cmpsb
test
int3
and
fwait
jp
fcomps
ffreep
add
cmpsl
fs
mov
mov
mov
push
popf
popf
out
insl
sbb
cmpl
mov
popa
adc
icebp
ficomps
cmp
cmp
dec
dec
nop
sbb
lea
clc
testb
dec
sub
test
icebp
push
pop
jbe
dec
mov
sti
clc
fstpt
cmpsb
mov
mov
pop
repnz
out
fs
inc
xchg
insl
jp
lahf
sub
imul
and
pop
or
gs
add
mov
ret
or
jecxz
in
adc
push
out
adc
adc
pop
fsubl
movsl
shl
push
mov
or
mov
jle
dec
sbb
je
xor
xor
hlt
fdiv
aas
or
mov
ret
leave
jl
inc
stc
push
cmp
jl
mov
cwtl
sti
and
pop
mov
and
gs
cmp
lods
enter
cmpsl
mov
mov
int
lea
jne
jo
insl
sbb
scas
adc
popa
loop
cmp
xor
xchg
mov
out
gs
imul
into
sub
stos
push
add
pop
lds
fcomps
jbe
das
sub
and
lods
mov
out
sbb
or
test
cmp
ds
xor
xchg
out
out
push
mov
jg
sbb
sbb
lahf
movsl
mov
arpl
fwait
or
add
mov
inc
cli
mov
cs
ljmp
test
lock
mov
adc
push
mov
add
mov
xchg
lahf
aaa
insl
cwtl
call
xchg
inc
push
fs
mov
sbb
test
cmpsl
std
sub
out
ret
pushf
mov
lea
push
fistpl
push
inc
or
pusha
jge
insb
mov
jb
ljmp
adc
jbe
pmullw
and
ret
sub
xor
ret
sub
cmp
mov
xchg
inc
xchg
sub
adc
and
inc
mov
pushf
xor
cli
repz
adc
push
pop
or
fwait
popf
and
dec
xor
jae
lahf
movsl
ss
hlt
and
xlat
sub
add
aaa
mov
sub
bswap
in
and
cwtl
xchg
ds
cli
nop
sub
pop
sub
pop
add
jnp
xchg
add
sub
mov
pop
fmuls
jbe
dec
add
dec
pop
inc
inc
mov
test
int3
xchg
lret
shrb
cwtl
cli
pop
adc
pop
out
fisttpll
es
dec
pusha
pusha
push
sahf
enter
mov
add
sbb
xchg
test
jecxz
inc
pop
addr16
sti
and
test
lahf
and
aas
insl
mov
add
test
push
jb
inc
dec
mov
dec
xchg
jne
adc
pusha
negb
lods
jno
mov
mov
mov
fcmove
xor
or
push
imul
lods
lods
mov
xchg
clc
jle
out
test
jno
sub
dec
add
sarl
adc
sub
lret
jl
mov
movsb
sub
adcl
lahf
cmp
xor
loopne
pop
data16
xor
shl
xor
inc
xor
popa
add
stos
cli
or
adc
push
in
test
mov
jecxz
cli
mov
adc
shlb
lcall
xor
addr16
xor
jnp
mov
sbb
shr
sbb
lahf
mov
mov
hlt
fbld
mov
xchg
ja
xor
cli
mov
adc
test
add
inc
or
aam
call
mov
pushl
bound
cwtl
inc
ss
into
stos
std
or
fstp
xchg
iret
mov
ret
aam
and
in
insb
cmpsl
pop
sub
cld
test
fwait
test
imul
cli
inc
call
sub
cmpsb
test
aad
das
pop
in
add
adc
inc
ret
pushf
pop
inc
pusha
inc
pop
pop
dec
and
inc
leave
out
or
dec
into
inc
outsl
inc
inc
xor
xchg
cmp
inc
add
lahf
das
pop
ljmp
or
mov
loopne
notl
orb
xchg
jge
cli
jae
mov
mov
sbb
pop
adc
jge
or
xchg
pop
aam
pop
repz
lods
mov
test
in
xor
in
dec
mov
mov
lock
mov
dec
fimuls
notb
loop
sbb
inc
test
inc
dec
nop
rcrb
incl
xor
stos
loope
clc
mov
mov
sub
mov
mov
xchg
cmp
iret
and
pop
icebp
sbb
sbb
jg
jns
scas
push
push
adc
push
les
adc
mov
xchg
sub
cltd
dec
icebp
push
scas
aas
and
xor
gs
test
lret
aaa
loop
add
mov
nop
inc
jecxz
std
lods
cltd
or
imul
pusha
lock
cmp
xor
outsl
insb
lods
adc
mov
hlt
or
cwtl
cs
ror
notl
stc
daa
push
mov
movsb
iret
scas
inc
out
call
cmp
and
adc
push
sbb
outsl
test
mov
jmp
adc
dec
shrl
cmc
bound
jmp
cmp
pop
mov
add
pusha
and
pop
je
adc
xor
push
sbb
das
add
and
pusha
imull
sub
icebp
inc
sub
xchg
das
pop
push
pop
cmpsb
daa
xorb
in
jl
mov
mov
mov
fidivrs
pop
mulb
xchg
push
pop
xor
mov
loope
dec
out
add
and
cltd
imul
jb
nop
jnp
lret
imulb
test
xlat
fcoml
mov
pop
dec
cmpsl
scas
mov
lcall
mov
fwait
shrl
jge
xchg
push
out
and
mull
bound
push
leave
fnsave
push
jns
outsb
outsl
addr16
js
out
stos
enter
jo
add
fiaddl
outsl
jne
scas
fdivs
sub
xor
pushf
add
inc
inc
and
or
shlb
std
push
repnz
fwait
jb
xchg
fwait
cwtl
add
fiaddl
cmp
lods
mov
xchg
pop
in
nop
xor
mov
xchg
in
ja
jl
xchg
xor
push
in
add
mov
loop
sbb
adc
sub
xor
mov
adc
pop
push
lcall
adc
loopne
call
sbb
mov
das
push
push
lcall
jle
repz
cmc
xchg
cmpsl
xor
xchg
xor
shll
dec
xchg
push
movb
data16
aas
xor
leave
lea
divb
rcr
cli
repnz
pusha
shrl
cmp
xchg
sub
and
fnstsw
adc
mov
add
call
sbb
add
out
movsb
test
fnstcw
mov
fstpt
rorb
push
int
cltd
mov
popa
push
jbe
mov
dec
scas
negl
and
cmp
mov
xchg
mov
shll
out
push
mov
mov
jge
mov
xor
jnp
sbb
sbb
out
sub
sbb
inc
outsb
fsts
testb
enter
jg
fs
sub
add
out
dec
fwait
xlat
jl
aad
pop
fiaddl
adc
ja
inc
pushf
movl
pusha
icebp
pop
enter
jecxz
sbb
push
negl
pop
xchg
jnp
or
loopne
ret
cmp
orl
xor
sub
pop
fsub
outsl
mov
xor
push
scas
inc
mov
in
daa
cli
aam
jecxz
or
shrb
in
loop
inc
push
lahf
rorb
adc
mov
sbb
ljmp
test
jecxz
sar
mov
xchg
ficoms
frstor
cmp
mov
lock
bound
cmpsl
cmp
sahf
in
xchg
std
cwtl
lods
fadd
lret
lea
pop
push
roll
xchg
mov
aaa
mov
jae
mov
xchg
std
jo
cmp
decb
aaa
jae
popa
fldl
cmc
rclb
gs
jecxz
addr16
in
stc
sar
test
pop
xchg
repz
cltd
lahf
aad
ljmp
push
sahf
and
fcomps
and
xchg
inc
call
sbb
cmp
xchg
mov
lods
cld
adc
shll
xor
mov
push
mov
mov
popa
mov
dec
inc
add
fldl
jbe
addr16
mov
into
andb
xor
adc
sub
xor
insb
test
mov
daa
ret
sbb
gs
jns
int
ljmp
jmp
mov
int
pop
bound
test
outsb
in
das
jnp
dec
add
int
clc
stos
aam
les
or
jge
and
mov
popf
sub
js
xlat
lods
test
jmp
or
std
push
jns
xor
pop
dec
sub
rcrl
scas
call
pop
movl
mov
ret
je
xchg
or
je
xlat
mov
mov
pop
std
xorl
adc
cli
sub
mov
push
out
xchg
pushf
mov
lods
fisttpll
ds
out
addr16
fldenv
dec
call
xchg
or
add
fimull
add
mov
dec
cltd
xor
inc
add
push
add
jle
sub
mov
aad
arpl
push
lods
lods
loopne
ljmp
xor
negb
add
push
in
mov
aad
cmp
into
cmp
adc
jecxz
sub
inc
mov
adc
cmpb
adc
add
xor
xchg
nop
hlt
mov
mov
shr
fs
mov
pushf
pop
nop
out
fisttpll
mov
cmc
mov
push
mov
aad
call
mov
mov
xchg
add
jmp
mov
int3
pop
fmuls
lcall
ja
loope
lret
xchg
adc
mov
test
js
cmp
cwtl
imul
das
loope
es
into
pop
adc
sbb
adc
sahf
into
jbe
xor
sbb
loop
push
fbld
push
mov
andb
ljmp
iret
fsubr
arpl
mov
sbb
inc
xchg
pushf
insl
fsubrs
jle
cmpsb
or
xor
xor
lcall
mov
sbb
aad
insl
sbb
les
incl
push
jecxz
in
inc
inc
and
out
inc
addl
sbb
sbb
pop
outsl
adc
outsb
mov
xor
or
push
mov
fldenv
shrl
ss
inc
lret
imul
imulb
inc
dec
jl
dec
mov
gs
cltd
push
and
jnp
xor
sub
cmc
mov
inc
movsl
inc
in
sbb
pop
js
into
adc
lahf
mov
xchg
lods
mov
jae
enter
mov
pop
es
add
orl
je
cmp
out
sbb
inc
jo
icebp
pop
xor
dec
clc
gs
dec
nop
aad
push
into
add
dec
sbb
jae
dec
test
jo
data16
and
mov
push
add
fdivs
int3
sbb
hlt
cmpsb
lea
scas
or
fistl
sbb
inc
xor
fwait
lcall
test
or
mov
sbb
je
sbb
mov
xchg
fsubrs
imul
mov
cmovb
popa
pop
push
jno
ja
loopne
dec
adc
les
jmp
or
cmp
test
adc
push
mov
dec
pop
ret
push
jo
adc
ret
fwait
xchg
jnp
lcall
fsubrs
push
mov
mov
push
lahf
or
das
inc
push
or
cli
lret
stos
pop
dec
mov
outsb
jge
jp
mov
push
inc
into
xorb
jb
mov
pop
std
mov
push
icebp
xchg
scas
and
ds
mov
mov
push
testb
out
hlt
mov
add
xchg
repnz
sbb
push
stos
ret
test
push
cli
fdivp
arpl
ljmp
mov
push
add
popa
xlat
and
xchg
lret
xor
xchg
imul
jb
imul
es
lods
dec
pop
aam
sbb
andb
mov
sbb
adc
xor
xor
leave
das
out
add
push
push
scas
sbb
or
rcl
push
mov
or
iret
xor
inc
shlb
or
and
inc
push
cmp
push
dec
shll
push
xchg
test
adc
loopne
fs
mov
stc
sbb
mov
loope
js
pop
mov
jno
aas
dec
add
lahf
mov
sbb
mov
push
xchg
das
inc
orb
mov
fisttpll
inc
and
insl
or
jp
mov
mov
fwait
cmp
adc
and
xor
cltd
outsb
sub
xor
ret
xchg
aam
add
mov
jbe
pop
insl
or
adc
sbb
and
dec
jle
fisubrs
mov
movsl
aas
int
mov
fwait
dec
cmpsl
out
mov
mov
pop
je
xchg
adc
jge
inc
sbb
gs
cmp
jp
push
popf
jae
shll
jmp
icebp
push
mov
shrd
inc
sub
inc
pop
jno
pop
mov
or
fistpl
scas
int3
xchg
xor
mov
push
inc
outsb
sbb
dec
inc
add
cmp
inc
pop
push
and
push
cmp
inc
jae
shll
into
pop
xchg
test
dec
pop
push
int3
js
pop
jecxz
cmp
and
jg
out
in
jp
pop
in
into
jbe
mov
fs
jbe
inc
arpl
cmp
cltd
push
fldl
ljmp
outsl
shrb
dec
mov
mov
push
aas
xchg
aam
dec
popa
loopne
mov
int
cmpsb
repz
push
cmpsb
add
pop
rorl
xchg
pop
xor
adcl
adc
cmp
sbb
imul
mov
outsl
adc
test
mov
and
test
mov
loop
pop
cmc
rcrb
aam
pop
dec
sidtl
pusha
orb
cmc
sbbl
jbe
out
mov
outsb
mov
cmc
mov
jo
or
bound
das
sbb
cmp
jbe
inc
das
cltd
push
xor
addr16
sub
dec
out
mov
clc
add
nop
sub
test
cltd
xchg
mov
pop
arpl
cmpsb
lret
out
fsubr
dec
dec
pop
ficompl
dec
test
mov
das
adc
push
push
push
dec
inc
mov
ss
jmp
daa
es
sbb
inc
iret
dec
xor
mov
mov
daa
ret
xchg
subl
repnz
adc
push
out
cld
inc
notl
add
cmpsb
scas
adc
sub
adc
ffree
lret
push
fwait
int3
stc
mov
scas
lods
push
pop
jnp
pop
in
repnz
push
dec
loopne
fs
adc
loopne
push
test
jl
insl
in
in
cmp
mov
lods
adc
fwait
ja
daa
leave
sub
ret
cmpsb
lds
adc
fldl
and
std
std
shrb
sbb
pop
rorb
in
addr16
sahf
and
sub
mov
int
add
ret
inc
lret
fldl
call
cmp
pop
int
loope
imul
outsl
pusha
lea
imul
cmp
aad
aad
push
xor
mov
jo
jg
dec
sbb
imul
sub
fildl
aas
push
clc
sbb
cmpb
xchg
xchg
inc
addr16
notb
pop
es
sub
mov
push
jno
pop
xor
decb
dec
sbb
mov
mov
cmp
mov
jecxz
stos
jecxz
jmp
movsl
inc
push
xor
je
mov
mov
rolb
mov
push
pusha
loope
and
mov
cltd
scas
pop
mov
dec
outsb
sbb
xchg
clc
mov
push
stos
out
xchg
jmp
bound
aad
nop
jbe
push
jnp
ja
mov
mov
aas
add
insb
sti
in
mov
iret
scas
sub
cmpsl
jle
mov
dec
mov
sub
cmpsb
fcomi
bnd
subb
jae
pushl
sub
rclb
not
ror
jl
test
dec
adc
cld
fnsave
pop
xor
mov
inc
lret
cmc
or
jae
xchg
testl
xchg
dec
leave
jne
dec
pusha
test
int3
mov
scas
xchg
sbb
mov
cltd
push
xor
and
add
out
xor
mov
mov
test
clc
gs
jp
push
xor
sbb
jl
sbb
push
ds
aad
inc
clc
lock
test
in
andl
xchg
sub
and
sahf
sbb
fucom
xor
cmpsl
pop
out
and
stos
push
lret
loopne
sbb
cmp
mov
cmp
push
and
in
fcmovnu
xchg
nop
jmp
mov
add
and
push
push
je
push
gs
shrl
negl
in
popa
lea
pop
loopne
inc
andl
lcallw
push
enter
inc
inc
xchg
ljmp
and
xchg
movsl
call
mov
push
push
out
mov
jae
push
dec
dec
rclb
bound
push
outsl
inc
loope
fsubr
hlt
inc
jno
xor
sub
dec
pop
rcr
in
push
outsb
pop
inc
xchg
add
mov
sbb
mov
int
mov
mov
aas
sub
adc
pop
push
test
push
sbb
jae
gs
add
leave
pop
cmc
hlt
sbb
pop
xor
popf
inc
xor
xchg
rorl
xor
sbb
js
shl
mov
setg
pop
out
jp
fldenv
jp
xchg
add
or
jbe
lods
jle
push
cmp
xchg
inc
icebp
popa
mov
mov
int
add
fidivrs
cmc
hlt
lret
and
add
xor
sub
mov
jg
insb
cwtl
mov
mov
sahf
push
int3
aas
jbe
int
pop
jns
aad
fstps
ljmp
addl
xsave
add
sub
sub
mov
sub
mul
xchg
mov
cmp
push
in
dec
mov
mov
add
shll
scas
jns
jmp
loope
xorl
sahf
and
or
outsl
push
mov
mov
push
xchg
test
addr16
mov
repz
push
mov
std
icebp
insl
fldcw
fistpl
out
mov
sub
lds
dec
sub
push
cmp
xor
cmpsl
xchg
pop
lret
adc
pop
cmpsl
sub
dec
sbb
pop
cltd
pop
xorl
push
movsb
sbb
push
mov
pusha
and
es
movb
sarl
and
cld
test
mov
pop
xchg
call
divb
push
or
cwtl
sbb
jbe
inc
sub
xor
cs
inc
popa
push
pushf
scas
mov
repnz
out
dec
repz
add
cmp
test
icebp
scas
ja
inc
push
aad
dec
mov
in
xor
and
dec
popf
push
ja
add
test
lahf
inc
lret
jne
out
out
push
movb
dec
sbb
mov
fsubs
ds
imul
sub
sbb
aam
push
jmp
imul
aaa
inc
dec
test
rcr
negl
mov
adc
and
sbb
pop
js
popf
push
pop
int3
adc
ds
scas
inc
dec
sahf
mull
hlt
lods
jp
jo
inc
adc
imul
aas
sub
or
push
fidivl
inc
adc
fnsave
ljmp
push
popa
or
sub
rep
mov
les
rol
icebp
jle
stos
add
xlat
jl
fstps
push
inc
and
lods
jae
leave
jns
addr16
addr16
mov
mov
cmp
aam
xorb
es
lea
cld
out
pop
mov
or
xor
fldcw
leave
jo
leave
jno
push
shrb
mov
repz
cwtl
ljmp
sub
cmp
push
dec
xorb
mov
arpl
adc
jno
inc
mov
scas
dec
test
dec
icebp
cmp
mov
mov
push
xor
nop
sub
xchg
stc
test
cmp
pop
lods
mov
arpl
mov
fcomp
ret
mulb
fstpt
lods
dec
jns
out
lods
js
mov
xchg
negw
mov
decb
inc
dec
js
xchg
jne
sahf
sbbl
hlt
cmc
mov
cwtl
push
cmp
out
aaa
xchg
mov
sbb
cmc
cltd
lret
add
out
or
fs
pushf
repz
lea
insl
adc
xchg
in
jb
pop
cld
aad
cmp
fiaddl
pop
std
fdivrs
ficompl
and
and
scas
mov
pusha
xor
inc
lahf
xchg
jnp
sbb
imul
sahf
and
pop
ljmp
aam
sarl
add
movsl
sbb
arpl
insl
xchg
je
xchg
dec
and
adc
ljmp
sti
jnp
pop
into
mov
pop
dec
loop
and
cmpsl
pop
hlt
jo
cmpsl
push
add
sub
and
cltd
stc
jnp
pop
jge
fsubrs
mov
or
push
fs
dec
sub
loop
scas
push
xor
and
mov
and
or
in
fldlg2
or
pushf
sbb
int3
icebp
mov
insb
ficoms
mov
fimuls
nop
or
test
mov
clc
inc
rorb
out
enter
insl
rcll
inc
aaa
mov
daa
pushf
scas
iret
sub
and
ss
xchg
daa
mov
add
mov
xchg
lea
sub
add
rol
les
and
out
jg
xchg
js
iret
cwtl
cs
fwait
pop
lds
sub
jb
jb
mov
inc
add
test
rorb
jnp
mov
xchg
fstpt
mov
inc
sub
ljmp
data16
jp
add
andl
xchg
adc
leave
jmp
push
std
inc
lea
lods
les
push
pop
repz
jb
aam
or
xor
sub
out
std
sub
addb
stos
add
add
xor
or
push
lock
adc
jl
lea
jb
loop
lcall
test
aad
cmp
add
push
insl
clc
xor
add
enter
mov
cmpsb
jno
push
and
fmull
sub
lea
mov
fdivrp
cli
inc
xchg
lods
insl
outsl
or
aas
loop
mov
inc
inc
stos
or
mov
loopne
sbb
divb
test
cld
pop
or
pop
rcrb
mov
js
jnp
inc
push
jp
fwait
insl
add
adc
and
out
test
aas
loop
inc
mov
lret
or
sbb
jno
jle
and
jecxz
rolb
mov
mov
adc
cmp
arpl
jns
out
nop
lods
inc
xchg
push
pop
jecxz
jae
push
repz
jmp
cmp
add
adc
sbb
loope
movsl
xchg
das
dec
lea
xchg
mov
iret
stc
fcos
xor
imul
xor
inc
sub
inc
test
pop
push
jne
xorl
mov
movsl
cmp
inc
pop
dec
cmp
add
imul
or
lcall
in
ss
popf
outsl
sahf
or
jne
loope
mov
lea
sub
fldenv
lahf
testb
pop
mov
xchg
pop
test
test
sti
pop
cmp
push
mov
ja
lods
jo
inc
dec
fisubrs
add
fidivrl
sub
pop
popf
movsb
adc
int
push
push
jg
cmc
xchg
or
sub
add
or
ljmp
or
mov
xor
test
inc
add
cmp
mov
das
dec
sbb
loope
jo
cmc
jle
les
scas
pop
es
loope
sub
jl
rcr
inc
cmp
dec
mov
add
xchg
in
dec
jae
mov
addr16
cmpsb
dec
inc
dec
push
push
addl
mov
inc
xor
incb
xchg
vsqrtps
scas
inc
mov
inc
scas
and
fdivr
xlat
sti
mov
mov
js
mov
sbb
gs
push
out
add
imul
mov
fdivs
addr16
test
sub
mov
aam
mov
pop
xchg
xchg
add
nop
dec
outsb
nop
jg
mov
sbb
xor
mov
test
and
inc
jnp
into
push
push
jo
ljmp
cmp
pop
loopne
push
mov
mov
test
loop
movl
rcrl
sbb
sub
sub
mov
roll
arpl
les
inc
inc
cmpsl
jp
sub
xor
mov
jp
add
lahf
dec
push
stc
cmpsb
iret
jle
mov
inc
jecxz
inc
adc
punpckhdq
mov
es
dec
jle
out
ret
out
sub
js
std
mov
out
arpl
cmpb
cmp
mov
jmp
fwait
addb
jo
out
hlt
rclb
push
imul
sub
in
push
or
loop
repz
in
sbb
mov
adc
cli
xchg
loope
cmp
mov
es
mov
iret
and
push
pop
adc
imul
and
jg
scas
add
and
push
xchg
popa
out
dec
and
xor
push
mov
inc
aaa
mov
push
loop
test
inc
or
cmp
enter
xor
daa
mov
and
cmp
push
xor
std
aam
sti
sbb
cmpsb
pop
xchg
jae
and
lds
test
adc
ds
push
imul
std
cmc
shl
cmpsl
clc
jbe
inc
mov
inc
cmp
adc
fistps
cmp
or
lret
and
into
jno
andb
in
adc
int3
and
faddl
fs
jb
mov
sbb
fadd
pushf
stc
inc
push
loope
mov
mull
mov
loope
movsl
not
mov
adc
xchg
in
xchg
inc
inc
pop
lock
aam
das
xor
mov
mov
std
xor
jns
cli
push
imull
out
je
or
lea
xchg
pusha
push
sub
int
leave
dec
scas
push
push
jle
mov
or
inc
add
mov
int3
mov
dec
inc
pop
aas
imul
repnz
out
fisttpl
scas
daa
pop
xor
jle
mov
fcomps
jne
adc
loope
adc
jo
sbb
inc
sub
ja
or
pop
ljmp
jnp
test
mov
pop
nop
push
or
daa
insb
lret
cmpsl
push
lods
sub
mov
sub
add
imul
fld
rolb
sar
stos
push
inc
cmp
add
stos
in
imul
xor
dec
or
scas
adc
into
iret
shll
mov
call
mov
loope
xchg
adc
movsl
cvtps2pd
pop
dec
dec
pop
inc
int3
imul
lods
dec
mov
dec
mov
pusha
push
or
xlat
mulb
lahf
cld
mov
orb
shll
sbb
popa
cmp
push
hlt
leave
sbb
or
push
inc
xchg
mov
adc
loop
sub
gs
cmc
data16
mov
adc
outsl
push
fbstp
jmp
adc
jo
push
fidivl
inc
inc
popa
stc
outsl
scas
xor
loopne
mov
cmpsl
sbb
dec
add
imul
adc
ret
cmp
dec
bound
out
xor
dec
inc
dec
mov
in
lea
jbe
adc
lret
int
jmp
pop
push
and
dec
imul
mov
fcmovbe
in
in
mov
leave
jle
xor
xor
inc
push
mov
enter
mov
stos
ret
add
adc
and
rcrl
adc
scas
mov
pushf
das
mov
and
inc
or
fdivl
mov
cmpsl
jns
sbb
push
lret
rcl
pop
cmp
in
lret
jge
shrl
mov
cmpsb
lock
mov
loop
lret
imulb
push
mov
mov
stc
jecxz
mov
add
out
add
inc
cmp
fisttps
inc
dec
pop
leave
arpl
and
sbb
rcr
mov
adc
mov
mov
notl
comiss
fstpl
fisubl
ret
jge
xor
xchg
ljmp
scas
dec
mov
push
ret
mov
push
dec
push
fildl
mov
adc
and
loop
sbb
shlb
subb
push
popf
lret
sbb
aaa
mov
mov
lock
nop
cld
lret
adc
add
hlt
mov
pop
inc
movsl
or
pop
pop
jno
test
loopne
pop
cmp
mov
and
pop
jp
push
sbb
in
jbe
faddl
push
sbbb
add
xchg
test
hlt
cmp
lret
pop
and
add
push
pop
push
mov
add
jns
mov
cmp
daa
and
in
cmpsb
and
and
pop
in
pop
pop
inc
mov
pop
jmp
roll
aam
cmp
lock
mov
dec
pop
ljmp
ljmp
subb
dec
and
ljmp
mov
sbb
in
sub
outsb
mov
shl
jns
push
outsl
sbb
inc
aaa
cmpsl
mov
sbb
orb
popf
lock
adc
jns
imul
scas
jl
sub
inc
cmpsl
mov
test
scas
or
mov
and
mov
cmpsb
sub
xor
adc
jo
xchg
sbb
je
subb
mov
jns
push
mov
mov
leave
or
or
andb
or
jne
lahf
nop
movsl
or
push
mov
cwtl
and
sbbl
add
fwait
test
insl
push
cltd
hlt
call
push
stos
inc
pop
sbb
outsl
jae
fdivl
repz
psllw
clc
lcall
daa
leave
or
fnsave
jae
push
iret
jg
mov
in
add
add
out
sub
cmp
repnz
cmp
aad
sub
sub
sbb
sti
sub
mov
insl
pop
mov
jo
pop
loope
roll
es
lods
lods
and
lahf
test
ja
hlt
fwait
jmp
addr16
jne
sub
test
imul
xor
cmp
ss
orl
shl
fisubrs
in
jbe
ljmp
add
sbb
dec
ja
xor
or
lods
outsl
repnz
mov
dec
sti
imul
js
aam
shlb
and
and
in
jbe
ja
cli
push
cli
jns
mov
jp
jge
fidivs
fisubrs
xor
in
int3
notb
scas
stc
jge
mov
add
jecxz
mov
inc
cmp
mov
iret
sbb
sbb
hlt
or
xchg
lds
push
or
jle
adc
or
sbb
adc
pop
push
add
xor
test
xor
pushf
cmp
xchg
insb
add
push
inc
add
push
call
push
or
and
pushf
in
and
mov
fwait
adc
xchg
arpl
push
push
outsb
stos
jmp
mov
jns
xor
add
mov
adc
push
mov
mov
adc
lock
enter
mov
sarb
cs
xchg
sbb
or
push
or
mov
cmp
nop
cmp
ja
daa
pop
push
adc
ret
ret
sti
pop
outsb
and
jge
sbb
std
mov
sahf
and
cmp
cli
js
pusha
pop
push
fimuls
repz
mov
jle
inc
push
cmp
inc
mov
or
xchg
sub
inc
mov
and
fidivl
pop
mov
and
adc
or
fistpl
repnz
dec
outsb
fistps
in
pop
inc
hlt
jl
dec
cltd
sbb
cs
movsl
mov
and
push
mov
lret
cmp
adc
inc
ret
mov
push
repz
mov
push
shll
push
pop
fld1
in
rorl
sub
push
js
add
mov
adc
lds
out
jae
daa
xor
pop
mov
cmp
and
mov
pop
lcall
gs
cmpsb
mov
fucomip
xchg
notl
sbb
inc
sbbl
jmp
pop
adc
int
mov
sub
fistpl
xchg
lret
aad
in
aaa
pop
pop
lods
xor
adc
adc
dec
push
mov
mov
jle
push
mov
jle
enter
mov
xchg
push
xchg
fcmovu
pop
jg
out
push
fisubs
pause
push
adc
mov
mov
aad
or
popf
mov
out
lcall
ss
xchg
jge
add
push
jl
rcl
push
jo
cmp
mov
shll
fsubs
cmp
dec
push
jnp
pmullw
jg
popf
stos
repz
daa
mov
push
adc
dec
test
imul
arpl
into
das
pop
int3
mov
movsl
jns
ret
mov
test
xchg
jmp
jmp
lret
xchg
scas
jb
add
cli
les
or
jp
add
jae
addr16
aas
dec
fwait
mov
shl
xchg
inc
cwtl
adcl
jnp
inc
lds
jle
and
iret
mov
sub
and
push
int3
push
sub
ret
aam
push
sahf
sbb
mov
cmp
mov
hlt
add
aam
xlat
data16
in
test
cmp
mov
std
push
and
pop
mov
ficompl
es
and
leave
xor
dec
cmp
dec
pop
mov
dec
xchg
or
ss
jne
les
cmpsb
test
pop
fsubrp
int3
sbb
insb
nop
repnz
fiadds
xchg
xchg
iret
in
inc
inc
cmc
dec
push
lret
mov
xor
fiaddl
ret
push
jne
jg
xor
test
jmp
js
xorb
push
int
inc
test
rcrl
xor
lds
jge
pop
aad
inc
fsubs
sub
mov
out
cmp
out
xchg
adc
adc
outsl
dec
mov
movsb
ret
mov
lret
dec
stc
xor
xchg
mov
xor
mov
and
fcmove
xchg
mov
add
out
cli
outsb
push
push
or
fwait
sbb
hlt
int3
shufps
lret
jnp
pop
xor
inc
test
inc
testl
test
mov
mov
iret
iret
dec
jno
jle
rol
or
xchg
test
xor
push
mov
sbb
mov
in
jmp
lcall
das
xchg
cld
test
insl
inc
js
inc
paddb
mov
daa
sbb
jnp
ret
or
xor
in
imul
mov
add
xchg
adc
notb
jne
pop
pop
jg
test
js
aas
std
pop
popf
rcrl
outsl
sti
enter
popa
xor
xor
jae
test
in
or
sub
mov
in
push
mov
int
insl
cltd
movsl
jg
sub
popa
fists
cmpb
xlat
inc
mov
jo
movsl
clc
xchg
loopne
sbb
sti
pop
jnp
adc
dec
mov
sahf
nopl
xchg
cmpsb
outsl
pop
add
add
cmp
fidivs
jo
sub
enter
subb
cmp
cmp
mov
aaa
scas
jo
das
fwait
and
in
sub
jbe
dec
decb
sahf
ret
xor
sub
or
enter
lock
lcall
cltd
dec
mov
mov
stos
push
lea
cltd
pop
cmpb
pop
add
jp
jbe
and
add
xchg
xchg
daa
pushf
cmp
jae
jns
xchg
loopne
pop
push
pop
jl
notb
mov
lock
dec
lahf
cwtl
call
ljmp
aam
stos
cmpsl
movsb
shll
mov
mov
dec
sbb
push
dec
push
fwait
cld
mov
push
and
and
bound
int
lcall
cld
dec
cwtl
stos
out
fildl
inc
into
enter
loop
fldl
or
test
add
inc
push
iret
cmp
and
adc
pop
idivb
lock
icebp
xor
iret
idiv
or
call
or
cmpb
inc
es
insl
mov
xor
ret
add
or
xlat
call
movsb
in
rcrb
dec
insl
dec
hlt
mov
pcmpeqd
pop
mov
add
xchg
bound
or
or
cwtl
xchg
jns
rcrl
fisubrl
sbb
dec
roll
pushf
jle
cmpb
jecxz
mov
mov
adc
xchg
cli
movsl
cmp
stc
cmp
dec
aas
inc
jnp
data16
mov
cmp
jno
outsb
and
inc
divb
testl
mov
mov
sahf
call
out
lret
pop
sarl
mov
js
imul
pop
iret
add
in
cmp
lret
inc
jecxz
push
jecxz
jo
push
xchg
push
pop
int
incl
repnz
mov
sbbb
sbb
sbb
notl
fstps
mov
sub
out
pop
cmp
pop
in
outsb
xor
mov
sbb
rcrb
movsb
hlt
stos
mov
sub
or
xlat
adc
fiadds
sub
fildll
mov
jecxz
xchg
jg
sbb
mov
inc
out
loope
cmp
push
mov
lea
clc
sub
mov
mov
xchg
insl
cwtd
dec
xchg
addr16
into
nop
les
scas
and
arpl
notb
notb
and
jle
adc
lods
dec
xchg
repz
sbb
and
mov
jb
cmc
push
or
mov
or
mov
adcb
adc
test
mull
fwait
push
push
leave
mov
negl
jno
xor
cmpsl
mov
and
dec
scas
jl
xchg
mov
out
jo
jo
stc
into
fisttpll
scas
adc
dec
cmc
movsb
mov
dec
mov
sbb
testl
fidivs
lods
js
sbb
cmp
test
xchg
inc
daa
sbb
fidivrl
aam
push
andb
pusha
shlb
test
shlb
pop
mov
aad
enter
into
or
adc
int
out
rcrb
jae
xchg
mov
lahf
test
dec
push
fisttpl
or
movsl
iret
mov
and
add
test
call
das
inc
mov
scas
mov
add
inc
xchg
stos
mov
sbb
mov
icebp
das
leave
ret
insb
or
or
jp
mov
mov
mov
mov
hlt
jae
ret
dec
push
js
jmp
and
stos
outsl
test
xor
dec
cmp
arpl
pop
inc
fmul
ret
loopne
fsubl
loope
hlt
hlt
shrl
xchg
mov
inc
mov
mov
lods
adc
pop
ficoml
jg
sti
jo
mov
adc
rcl
fucomip
outsl
outsb
idivl
les
xchg
sbb
mov
add
mov
test
mov
add
loop
pop
test
or
jp
cltd
mov
push
adc
dec
or
ret
mov
mov
cld
and
cmpsb
and
inc
gs
lods
pop
mov
iret
pop
xchg
adc
xchg
andb
ss
adc
fists
ficoml
adc
push
cli
and
mov
sub
not
lret
gs
cmp
loope
mov
push
xor
insl
adcl
sbb
daa
imul
inc
out
in
sbb
fnstcw
inc
adc
push
add
inc
jp
clc
inc
lret
sbb
inc
mov
xchg
into
jle
pop
jecxz
aaa
inc
xor
and
std
dec
xchg
leave
pop
test
movl
xchg
xor
enter
pop
xchg
xchg
jle
dec
cwtl
or
and
cltd
cmp
shr
aam
sti
and
sbb
push
or
dec
mov
dec
cmp
mov
cwtl
inc
cmpsl
insl
inc
lea
and
and
jmp
pushf
push
fld
lods
lret
incb
lods
mov
xlat
and
testl
xor
scas
dec
jl
subb
cmp
daa
hlt
mov
xor
daa
lds
push
cmp
sub
pop
fsincos
add
mov
cmpl
push
cmp
and
mov
call
lret
xor
push
add
cli
aad
pop
lcall
orl
sti
push
bound
pop
pop
cmpsb
or
fcomps
and
sub
mov
hlt
jp
sub
xor
mov
mov
sbb
loopne
je
xor
pusha
icebp
adc
int3
cmpsl
mov
sub
in
mov
sub
mov
lock
std
sub
popf
sub
add
aaa
sbb
aaa
movsl
jae
dec
dec
mov
lds
sbb
xchg
sbb
mov
stos
cld
test
outsb
out
dec
and
test
jnp
fdivs
add
fprem
je
or
jg
in
arpl
pusha
enter
sbb
xchg
pop
push
into
add
f2xm1
push
add
adc
test
subl
std
mov
mov
sbb
dec
sti
cmp
sti
adc
stos
xor
lret
mov
cwtl
xchg
xorb
adc
push
push
mov
xor
xchg
sbb
fildl
js
cmp
out
pminsw
sub
lret
sub
pop
shll
pop
das
lods
hlt
or
cmc
and
pop
call
stc
imul
pop
xchg
pop
rorb
inc
in
sete
lret
fidivrs
testb
lcall
add
xchg
inc
test
rol
push
loope
mov
adc
and
call
outsb
inc
mov
ss
lea
int
arpl
pop
sbb
adc
cmpl
aas
into
cmpl
rorb
lds
lock
fidivs
or
dec
dec
pop
mov
sarb
mov
stos
in
mov
call
ficomps
xor
or
xchg
sahf
mov
sbb
inc
out
in
xchg
pop
push
dec
mov
les
into
ret
pushf
lret
outsl
sbb
out
lret
xchg
add
enter
inc
out
and
aas
adc
and
push
mov
mov
fbld
xor
dec
rcl
or
add
cwtl
or
lods
sub
insb
pop
shlb
push
jns
loopne
jo
push
adc
addl
clc
sbb
stos
cli
xlat
jl
dec
sahf
jg
popf
mov
lock
pop
enter
and
test
sbb
jns
add
add
pop
fisubs
jae
popf
orl
sbbb
addb
icebp
out
in
cld
scas
push
inc
push
or
movsl
pop
scas
xchg
jecxz
jno
rcl
adc
gs
sub
adc
cmp
push
inc
not
int3
leave
aas
gs
pop
int
and
mov
mov
cwtl
mov
mov
mov
jbe
jns
pusha
in
inc
jmp
adc
out
mov
mov
cwtl
sarb
dec
jbe
insb
call
fidivrs
mov
mov
pop
insb
push
sub
test
push
pop
cltd
push
mov
mov
inc
mov
add
rcrb
lea
test
and
push
mov
jno
loopne
push
inc
cltd
or
cmp
xchg
ds
roll
cmp
das
xchg
aaa
cmp
lret
adc
sbb
adc
out
scas
test
xor
jb
and
jb
es
cmp
jle
pop
aas
add
mov
and
dec
jmp
mov
hlt
cmp
ja
ret
adc
jbe
fidivs
adc
mov
insb
aam
les
or
jne
mov
loop
sarb
cmp
push
mov
jb
push
cmp
push
push
jmp
cld
pop
daa
pop
jbe
push
aaa
push
lea
adcl
repnz
daa
mov
aam
xchg
add
mov
adc
cmp
loope
in
dec
sahf
push
rcl
and
push
popf
data16
xor
mov
pusha
jnp
imul
push
push
aam
push
mov
fldt
or
mov
stos
sahf
cli
lcall
dec
sbb
pusha
dec
insl
jl,pn
nop
mov
sub
std
ss
sbb
jl
out
dec
sahf
or
sbb
and
lret
out
mov
add
scas
mov
stos
in
jecxz
js
inc
fadds
mov
jecxz
xor
mov
lds
popf
push
rcrb
je
fld
fscale
or
lret
adc
fsubr
hlt
jmp
loop
aad
jbe
aad
cmpsb
ret
movl
das
adc
clc
xchg
fld
leave
insl
cli
xor
in
jno
ljmp
out
mov
clc
stc
aas
mov
bound
fnstcw
push
sbb
fcoml
sti
mov
pop
adc
test
sbb
leave
jne
call
push
inc
mov
stos
pop
jo
enter
je
pop
add
adc
sub
ret
fstl
cli
jbe
enter
mov
cltd
and
cld
or
shll
dec
mov
pop
out
lcall
daa
lahf
add
jno
std
scas
jo
hlt
into
cwtl
sbb
sti
outsb
hlt
cli
fbstp
push
daa
mov
mov
mov
sahf
sbb
sub
mov
je
or
lods
push
or
icebp
stos
jae
xchg
subb
add
sbb
sub
sarl
mov
mov
das
cmp
xor
pop
rolb
or
jle
and
or
pop
mov
cltd
jl
sub
aad
dec
pop
jbe
mov
mov
test
mov
out
jmp
jle
pop
or
sarl
insb
jecxz
mov
test
stc
cmp
pop
xchg
fsts
xchg
xchg
push
mov
push
fadds
cltd
inc
sub
test
fildl
addb
mov
outsl
dec
mov
imul
flds
test
push
stos
jns
jae
stos
mov
mov
les
loope
mov
sahf
inc
subb
pop
sbb
sar
mov
xor
test
jmp
ljmp
sub
or
hlt
jecxz
mov
sbb
movsb
ljmp
push
cs
xchg
lret
mov
cmp
addr16
fists
jmp
pushf
aam
addr16
jl
aaa
push
sub
in
aam
jg
sub
add
jo
xchg
js
movsl
es
aad
cmc
push
cwtl
jb
push
adc
mov
inc
push
cmp
test
icebp
rcr
mov
ljmp
jnp
adc
ljmp
not
xorb
adc
sarb
mov
inc
xor
insl
repnz
stos
repnz
inc
mov
jo
or
sub
xor
mov
pop
lea
adc
mov
mov
adcl
mov
mov
js
jle
in
repz
popf
jbe
mov
mov
sti
xor
pusha
js
pop
inc
ss
xlat
xor
lods
jno
lret
hlt
mov
pop
push
mov
push
je
test
xor
pop
lods
loop
lahf
jecxz
dec
lds
addl
pop
pushf
hlt
orl
roll
clc
leave
xchg
in
xor
mov
fisttps
test
inc
inc
inc
cltd
dec
and
mov
jg
mov
sub
push
jecxz
cli
lcall
sarb
lds
je
cli
in
xchg
add
in
nop
inc
adc
test
sbb
sub
js
int3
gs
icebp
inc
dec
pop
mov
xchg
mov
inc
xchg
outsl
or
xchg
mov
mov
fwait
mov
in
xchg
or
or
push
pop
sub
and
jne
push
and
fs
cmpsb
xchg
jne
mov
jmp
jns
pop
jno
stos
xchg
repz
dec
arpl
jnp
lods
lea
movsl
test
test
sbb
lods
inc
test
mov
in
cltd
and
fdiv
outsl
push
loope
pushf
or
shll
test
sbbl
shll
and
out
mov
test
push
jl
or
in
movsb
fstps
dec
notb
cmp
sbb
ret
cmp
mov
ret
and
jmp
stc
shl
mov
hlt
xor
fsubr
push
hlt
lea
dec
nop
mov
dec
paddusw
je
cwtl
dec
adc
mov
aam
add
cmp
dec
test
movsb
mov
mov
mov
fadds
ficompl
iret
pop
hlt
shlb
pop
jecxz
dec
sbb
sbb
in
rcrl
inc
jp
clc
sub
inc
mov
mov
or
adc
mov
pusha
out
insb
push
or
call
and
and
jbe
xchg
std
cmc
loope
or
xchg
std
mov
lods
sbb
xchg
sub
in
inc
xchg
adcl
sbb
sub
jg
iret
xor
aaa
jp
lcall
mov
mov
jne
outsb
adc
cmp
loopne
inc
xchg
jge
push
jmp
out
mov
cvtpi2ps
jl
sub
inc
lods
jns
add
fwait
dec
push
out
addb
sub
ja
std
fsubr
pop
in
xchg
fisubrl
pop
push
push
lea
shll
stos
or
insb
pop
push
sbb
fistl
gs
sbb
in
inc
mov
loop
sub
adc
mov
repz
and
lahf
insb
sbb
int3
mov
dec
fs
shlb
cmp
dec
jge
dec
lods
lock
mov
push
int
cmpsb
cltd
sbb
sbb
fwait
mov
mov
cmpsl
cmp
hlt
pop
add
int3
das
call
iret
push
mov
mov
test
cmp
mov
xchg
jbe
inc
inc
imul
xchg
push
cmpb
push
test
push
sub
cmp
incl
pop
packuswb
mov
ljmp
scas
sbb
mov
fs
testl
test
mov
mov
rolb
xor
sbb
es
mov
arpl
mov
xchg
adc
sbb
xlat
xchg
mov
or
lret
inc
fadds
ret
adc
arpl
inc
xor
xchg
xor
inc
sbb
enter
push
into
jecxz
or
orb
icebp
leave
mov
call
and
lahf
jmp
add
lcall
cmp
fiaddl
addl
insl
inc
ret
or
push
cmp
movb
mov
lods
mov
mov
or
repnz
dec
push
inc
out
or
push
or
adc
cmp
aaa
push
rcl
mov
sub
adcb
dec
mov
fucom
int
cmp
fstl
jno
roll
in
sbb
push
imull
pop
dec
in
cmp
es
fdivrl
in
cmp
dec
fs
mov
add
or
cwtl
scas
mov
jae
out
add
pop
mov
xchg
dec
xor
inc
sti
cmp
push
not
test
xlat
add
push
add
in
and
xor
add
cmp
ss
outsl
push
xor
hlt
shll
in
xchg
icebp
cltd
sti
xor
push
jecxz
mov
test
pushf
sbb
fwait
insl
mov
adc
fsubr
or
xchg
push
adc
leave
orl
les
fisubs
xchg
xchg
and
subl
cmc
lret
das
arpl
ror
and
pop
mov
in
mov
push
enter
add
ss
std
scas
sub
hlt
push
cli
test
jbe
aad
outsl
add
lock
inc
add
mov
aaa
jno
xchg
xchg
dec
lret
arpl
mov
out
mov
mov
or
jp
les
fidivrs
mov
out
add
fstl
mull
addr16
push
repz
xorl
jo
repnz
jbe
dec
jo
and
lea
sbb
dec
popa
aas
rcrl
aaa
jnp
inc
push
fistl
push
xchg
test
sub
fsubl
ret
cltd
sti
cmp
inc
and
sti
push
jno
jae
aad
ret
mov
jmp
mov
movsl
clc
imul
push
ljmp
les
daa
xchg
jl
dec
jg
push
sbb
pop
into
aam
cltd
loop
jbe
push
xchg
fwait
mov
fists
repnz
idiv
movsl
mov
sbb
mov
add
add
push
adc
push
lock
dec
xor
ja
popa
aas
hlt
add
cmc
cmp
xor
xchg
clc
jnp
fistl
lahf
hlt
stos
jg
dec
fmuls
movntq
push
shlb
mov
or
adc
pop
arpl
outsl
fimuls
pop
pop
add
push
lods
xchg
stc
jle
jns
nop
andps
std
and
pusha
inc
shrb
outsl
push
int3
mov
int3
daa
inc
std
dec
push
or
sbb
shrl
push
jno
dec
or
pop
sbb
inc
and
outsb
cmp
pop
imul
insb
stc
stos
mov
inc
push
fwait
cmpsl
cmpsl
insl
int
mov
sbb
inc
daa
lret
cmpsb
or
aam
ret
pop
mov
movsb
jae
mov
push
lcall
and
insb
xor
mov
jae
mov
and
and
cmpsb
mov
add
ret
stc
xchg
divb
cmp
fsubr
fbld
mov
and
outsl
in
daa
stos
xor
or
loopne
jns
adc
in
mov
mov
push
mov
xor
inc
or
xor
pushf
cs
jle
or
scas
sbb
enter
sbb
test
dec
call
stos
bound
sbb
jo
stos
mov
call
cmp
out
and
cmp
mov
push
scas
xchg
rcl
and
leave
xor
leave
or
dec
xchg
mov
imul
sub
adc
adc
inc
mov
pop
test
mov
ficoms
xchg
call
mov
cmp
jl
idivl
test
lret
pop
jge
fwait
lea
cmp
mov
pop
mov
push
fstpl
mov
bound
mov
push
xchg
jge
mov
and
in
mov
push
in
movsb
xchg
icebp
xor
jbe
mov
pop
add
out
xchg
xor
out
push
lcall
xchg
adc
push
std
mov
fwait
daa
iret
popf
pop
xchg
loop
cmp
outsb
jae
add
pop
loopne
add
mov
sbb
xor
pushl
insl
lods
pop
pushf
inc
test
jecxz
mov
stos
pop
test
cltd
mov
sub
cmp
xlat
pop
inc
add
jb
add
fiadds
into
sbb
sub
je
js
xor
gs
sub
icebp
mov
mulb
pop
das
jb
dec
and
jecxz
iret
sub
push
bound
push
jae
into
fsubrl
sbb
dec
sbb
or
scas
shrb
pop
in
cmc
rol
stos
xorl
or
repz
push
das
out
jecxz
or
mov
push
add
fs
ja
xchg
fcom
in
jbe
cmp
hlt
enter
movsl
or
int3
fcmove
jge
cmp
push
call
setg
sbb
dec
mov
std
enter
add
ljmp
in
xchg
sarb
push
loope
mov
mov
jbe
scas
imul
pusha
inc
mov
add
int
idivb
pop
cmp
bound
fsubrs
outsb
dec
add
mov
adc
lods
cli
test
popa
mov
mov
popa
jb
ret
jp
push
cli
repz
imulb
sbb
add
fwait
lods
adc
xor
ja
hlt
shrb
stos
enter
jle
js
aas
sub
cmpsl
mov
inc
push
pop
sbb
mov
das
mov
xor
in
xchg
add
daa
rcrb
out
xor
mov
push
mov
sbb
xchg
xchg
cmp
xor
lea
xchg
aam
mov
cmpsl
frndint
xchg
and
xchg
push
outsb
lcall
pop
push
insl
movsb
dec
add
out
xchg
push
cmp
in
dec
loop
call
cwtl
xchg
add
add
xor
rolb
test
and
and
cmpsl
cmpsb
cmp
gs
inc
pop
fisubrl
jecxz
sbb
dec
fwait
mov
inc
mov
xchg
aam
xchg
mov
sub
xchg
rol
add
inc
adc
movsb
sarb
mov
or
out
inc
mov
imul
lahf
daa
adc
enter
xlat
enter
lahf
das
mov
into
pop
jp
pop
cmpsl
cli
add
into
insl
mov
adc
fsubr
call
dec
push
ret
xor
mov
loop
jo
xor
scas
fs
js
cmp
repz
and
or
pop
xchg
sub
cmpsl
out
push
mov
in
icebp
jbe
add
cmp
aaa
cltd
pop
daa
mov
in
cmp
xorl
adc
mov
mov
cmp
mov
sbb
ffreep
xor
scas
mov
shlb
jmp
mov
jle
inc
jnp
into
aaa
mov
and
addr16
push
pop
aam
sub
std
aad
sbb
addr16
daa
pop
adc
repz
jb
pop
cmp
mov
in
xchg
leave
mov
dec
mov
ljmp
iret
dec
lret
imul
test
cmp
in
loop
push
fidivrs
lcall
aam
sbb
sub
insb
adc
aaa
sti
aad
and
mov
push
push
orl
test
or
stc
xor
aad
mov
lret
dec
dec
add
mov
xlat
xchg
or
pop
leave
imul
inc
subb
fst
inc
ret
lods
pop
inc
sahf
mov
cmpsb
lds
or
dec
jle
cmpsb
cli
mov
push
sub
loop
gs
or
mov
shll
out
dec
cmp
fs
add
mov
dec
cld
loope
bound
inc
jge
lret
popf
mov
arpl
and
js
mov
jle
xchg
lcall
gs
mov
push
xchg
sbb
cbtw
lret
xor
rolb
repz
sbb
cli
sub
xor
orl
jb
stos
fistps
mov
faddl
cmp
popf
notl
push
xchg
cwtl
xchg
inc
aad
and
fldenv
cmp
push
adc
dec
rolb
push
xor
jg
or
decl
dec
ljmp
repnz
insl
mov
or
mov
cmp
clc
jmp
ds
mov
test
dec
fists
scas
sti
popf
cmp
jmp
lahf
xor
xchg
and
cmp
sub
xchg
adc
sub
dec
add
push
dec
xchg
lcall
push
dec
pop
dec
add
sbb
sti
je
jl
sub
adcl
xchg
sbb
aas
fstp
mov
mov
mov
mov
daa
cmp
push
pop
jae
push
fcmovnu
and
dec
lret
insb
insl
sub
fistps
push
push
lods
pop
and
int3
dec
inc
pop
mov
sbb
adc
and
sahf
repnz
insl
stos
ret
mov
inc
xlat
adc
lret
iret
xor
sbb
call
fcos
movsb
aam
enter
aas
out
rclb
xlat
pop
leave
pop
insl
sbbl
sub
sbb
inc
pop
lret
test
roll
xchg
push
mov
dec
lea
fwait
imul
data16
movsl
cli
sar
pop
dec
cli
sbb
int3
fistps
pop
scas
mov
add
nop
inc
xchg
ds
adc
xchg
and
enter
jns
and
and
pusha
cmp
addr16
lds
xchg
dec
and
rcrl
jle
sbb
out
shll
add
insb
pop
mov
dec
imul
inc
mov
mov
jle
repnz
pop
dec
mov
ss
pop
popf
mov
leave
jl
ds
pop
push
push
lods
sti
notb
adc
and
push
jle
dec
out
mov
ljmp
fs
pop
push
cwtl
sub
cmpsl
mov
cmp
test
jl
push
xchg
jns
sub
or
cmp
pop
push
mov
cmp
insb
incl
inc
sub
pop
xor
jg
xor
call
add
push
mov
sub
insl
stos
test
add
and
arpl
pop
and
out
int
sbb
inc
cmp
out
rcrb
add
and
jae
scas
lds
inc
cmp
jp
dec
add
jne
pusha
ljmp
outsb
lahf
lods
sti
dec
xchg
stc
aas
pop
push
mov
fnstenv
leave
dec
jne
xor
movsb
push
fisubl
or
test
movsb
and
push
icebp
je
mov
mov
repnz
dec
popaw
push
inc
mov
sti
test
jmp
fisubl
and
jmp
mov
imul
shll
rolb
xlat
xor
or
dec
lea
popa
lahf
imul
cmpsb
movsb
push
push
jle
mov
jne
add
push
sbb
cmc
outsb
dec
jle
out
rorl
jnp
lock
jbe
jae
mov
int
imul
lea
or
inc
call
pop
mov
push
mov
mov
or
jnp
cmpl
xor
ja
in
js
lods
dec
lods
xchg
enter
mov
aad
cmp
inc
jecxz
mov
ret
in
mov
out
jbe
es
into
cmp
addr16
fucomp
pop
jge
outsl
out
sbb
js
xor
out
divb
pop
xrelease
push
mulb
xlat
or
and
scas
dec
xchg
loope
mov
xchg
shrb
pop
adc
pop
aaa
bound
je
and
mov
or
dec
stc
sbb
outsb
nop
and
push
mov
push
push
pop
js
inc
or
lahf
sub
sbb
dec
pop
dec
test
in
ja
insl
lods
adc
dec
adcb
repz
mov
mov
adc
fwait
pop
fs
idiv
and
in
enter
loopne
sbb
lret
in
ror
ss
outsb
sub
push
mov
mov
push
cmp
jecxz
and
and
xchg
test
sti
jno
mov
pop
mov
jb
sbb
mov
mov
adc
stos
call
fwait
test
pop
ja
call
xchg
pusha
dec
pop
pop
out
dec
iret
test
xlat
int3
fistl
add
dec
rcrl
pop
pop
mov
into
dec
or
inc
cwtl
or
push
sbb
xchg
jbe
sbb
add
test
xor
repnz
ss
cld
mov
inc
cmp
into
jns
mov
xor
push
ror
mov
sbbb
fwait
xchg
les
scas
je
das
gs
mov
shl
mov
push
outsl
movhps
xor
sub
loop
loope
nop
popa
pop
xchg
xorb
lods
lock
inc
mov
pop
clc
add
xchg
shl
sahf
stos
fs
adc
aaa
pop
adc
jo
ja
dec
push
fsts
aam
xor
cmp
js
out
pop
hlt
xor
in
mov
mov
and
sub
ss
pop
pop
ret
inc
mov
add
outsl
mov
dec
pop
pusha
and
imul
add
mov
jne
out
or
cmp
insb
loope
sub
int
xor
cs
call
sbb
incb
fdivl
aas
xchg
pop
rcrb
outsb
mov
scas
negl
out
pop
pop
jne
push
jb
cs
je
test
pushl
rorl
mov
cltd
sarl
mov
adc
sbb
xor
sbb
or
dec
scas
int3
push
push
inc
pushf
test
fs
pop
call
inc
daa
cmp
jmp
lds
push
push
in
xor
push
push
inc
cmp
arpl
ret
xchg
inc
movsb
jbe
xorb
dec
arpl
jo
outsb
jnp
sub
int
shl
mov
insb
repnz
xchg
mov
dec
mov
subb
icebp
andl
stos
add
sbb
dec
sub
xchg
mov
repnz
push
inc
mov
or
adc
jmp
mov
mov
add
push
xlat
jnp
push
gs
or
inc
and
push
xchg
rcll
pop
mov
gs
je
test
fadds
test
mov
rcl
in
or
shl
or
xchg
sub
pop
and
mov
mov
scas
jle
add
mov
out
outsb
jne
xchg
dec
adc
sub
sub
divl
fcomps
and
mov
push
lods
test
popf
cld
rcrl
inc
mov
jp
popf
jmp
bound
cmp
mov
mov
mov
inc
loopne
push
outsl
sbb
jne
test
fstpl
scas
sub
and
inc
add
stos
or
xchg
out
lock
sbb
aad
mov
lret
stos
jmp
lret
and
es
sahf
stc
and
adc
out
insl
jl
cmp
test
je
divb
jecxz
sub
ljmp
sbb
fcomip
sub
daa
inc
mov
enter
lods
or
mov
jmp
sbb
dec
sub
jle
leave
sub
daa
lcall
mov
sub
xor
aam
ss
cmp
jg
fs
push
fldcw
push
and
daa
cltd
in
std
pop
dec
sti
rcll
and
scas
xchg
push
ja
sbb
push
out
cmc
cmp
cmpl
in
insb
xor
and
push
cmc
jbe
ljmp
xlat
or
mov
pop
cmp
imul
adc
out
push
sbb
dec
push
call
mov
dec
cmp
ss
pop
cwtl
nop
cmp
in
sub
adc
push
jl
and
mov
call
jne
xchg
pop
xchg
inc
xchg
rcll
xchg
sti
outsl
scas
inc
aam
int3
pop
fidivl
sbb
out
xor
fdivrs
mov
fiadds
adc
lock
cmp
das
mov
filds
xchg
xor
sub
xor
or
or
pop
sub
inc
idivl
scas
inc
ja
add
push
sbb
mov
ret
insb
dec
lret
ficoms
out
or
and
pop
dec
mov
xor
test
add
into
mov
pop
fwait
dec
or
mov
inc
sub
mov
mov
std
lret
mov
push
in
jecxz
sub
cmp
lea
pushl
sbb
add
xchg
jmp
shrl
ja
mov
in
or
call
or
pop
pop
xor
jmp
jno
jne
nop
sahf
jae
sub
inc
movsb
and
stos
jge
leave
ficoml
add
jle
gs
insl
hlt
insb
inc
cvtdq2ps
cli
out
xchg
jb
aam
dec
sbb
fcompl
leave
jmp
mov
roll
mov
adc
fdivr
mov
cmp
lret
bound
call
add
xor
mov
jg
out
mov
pop
shrl
adc
jns
jbe
push
fdivrs
ds
jnp
stos
dec
in
pop
sub
test
sbb
xor
mov
ds
or
dec
icebp
int
jmp
lods
ja
addr16
sub
mov
mov
into
or
call
adc
std
xchg
arpl
nop
addr16
nop
or
testb
clc
out
mov
je
mov
pop
xchg
push
jge,pt
cmpsl
jecxz
add
jecxz
lcall
mov
cltd
adcl
jp
fldl2t
jp
cltd
mov
xor
sub
ja
rorb
stos
inc
jne
movsb
data16
mov
ja
lret
cmp
dec
jno
arpl
mov
setl
lods
sub
js
stos
or
jno
or
xor
in
test
lock
pushf
mov
les
and
pop
sub
sub
shll
pushf
dec
femms
mov
xor
cmp
fcmove
insl
jne
cmp
mov
insl
jle
out
xchg
mov
cmpl
out
dec
lods
cmp
xchg
sub
push
jle
mov
scas
mov
xor
lock
not
cltd
pop
mov
xchg
pop
cltd
mov
in
stc
test
jb
pop
add
cmpsb
sub
in
mov
in
jg
ds
icebp
fisttpll
and
mov
imulb
jp
ret
add
mov
mov
ljmp
sbb
push
in
or
xchg
and
cmp
test
shlb
jns
das
popa
das
lods
inc
mov
add
push
fs
add
outsb
mov
lahf
dec
pop
insb
pusha
in
cld
mov
jg
inc
xchg
cltd
mov
test
jle
and
xchg
xchg
adc
bound
insl
out
mov
test
push
adc
outsl
outsl
imul
out
cmp
mov
and
sub
jmp
xor
mov
jp
arpl
sbb
stos
pop
int3
mov
arpl
imul
mov
mov
ret
sti
mov
jbe
mov
dec
sti
push
and
and
rcr
jge
inc
pop
adc
rolb
xchg
sub
fisubrl
movsl
mov
rol
inc
dec
inc
in
test
sarl
int3
bound
pop
mov
inc
lcall
mov
fsubrl
or
mov
inc
jo
fnstenv
js
pop
add
xchg
testb
dec
mov
mov
and
mov
xor
pop
mov
xor
mov
add
inc
mov
addr16
iret
push
es
cmp
mov
js
mov
mov
fdivrs
mov
or
mov
cli
xor
dec
mov
add
adc
aas
mov
ss
fidivl
pop
pop
cmp
repnz
mov
cvtpi2ps
test
int
icebp
xchg
mov
in
loopne
aam
mov
leave
mov
lahf
xor
pop
mov
hlt
mov
adc
cmpsb
xchg
jp
xchg
lcall
mov
gs
mov
ss
xor
mov
cmp
cmc
cmp
movsl
jnp
aam
std
rclb
jge
xchg
inc
cs
sbb
aas
mov
ret
cmp
push
test
xchg
cmp
sub
shl
fldl
pushf
int
mov
sti
popf
push
pop
insb
daa
mov
fildll
rorb
sbb
std
sub
mov
ljmp
das
fs
loopne
repnz
jle
pusha
sub
stc
xchg
cmp
jmp
push
mov
sbb
sarl
cmp
push
xchg
jnp
fiaddl
push
push
fists
dec
xchg
lock
test
or
clc
or
out
jmp
pusha
ficoml
jns
ds
pop
mov
jg
and
pushf
dec
mov
addr16
in
jo
incb
cld
or
sarl
cld
jae
xor
xor
imul
xor
mov
leave
and
jge
push
mov
and
adc
ljmp
add
testl
mov
dec
sub
and
lods
ret
xor
repnz
repz
adc
dec
push
rclb
cmpb
adc
dec
fwait
mov
fidivrl
notl
sbb
jl
sub
pop
fs
shrl
pop
sbb
mov
xor
xchg
xor
clc
lret
shll
dec
xchg
fcoms
push
lods
sbb
pop
cmp
push
rclb
data16
jecxz
push
pop
push
ret
adc
push
out
adc
add
loop
xchg
imul
test
and
cmp
stos
pop
sbb
lock
adc
pusha
jecxz
jmp
outsb
enter
jge
test
mov
jb
dec
add
add
xor
shll
cmpsl
cmpsb
in
xor
inc
inc
stos
mov
and
sti
call
push
daa
roll
sbb
pop
adc
ss
adc
scas
and
cltd
push
pop
rol
outsl
jo
stc
cmp
inc
jb
iret
cs
or
inc
adc
repz
adc
dec
movsb
aam
mov
pop
inc
call
inc
rcr
jge
cmp
push
sbb
jne
js
pop
cmp
push
movl
pop
outsl
repz
xor
lock
pushf
sub
cmp
repz
sub
pop
lock
pop
xchg
lahf
xor
test
dec
lea
xor
in
popf
test
dec
xor
push
adc
xchg
cltd
out
xchg
and
lret
mov
pop
cmp
pop
jg
cli
jg
inc
ret
mov
stos
movsb
jno
push
lods
fcos
sub
repz
xchg
and
push
das
xchg
sub
rcrb
add
mov
mov
mov
pop
insl
and
iret
fcmovnbe
imul
mov
jno
inc
jns
int3
sub
adc
mov
mov
mov
mov
add
inc
and
addr16
es
xchg
push
fwait
mov
xchg
aas
addb
out
xchg
cmp
ljmp
daa
insb
loopw
popa
enter
push
fisttpl
lcall
push
pusha
xchg
pop
push
lahf
inc
stc
outsl
mov
add
pop
xor
insb
mov
mov
cwtl
jne
enter
or
and
cmp
push
inc
lahf
negb
das
sbb
or
insl
notb
mov
pop
vmread
xorb
xor
ss
cwtl
mov
lcall
cmc
pushf
test
cmovae
or
lds
stos
arpl
das
cmp
aam
insl
adc
dec
rcrl
add
ljmp
or
insl
fwait
fwait
test
addr16
insl
mov
adc
add
fidivl
push
dec
fnstcw
fistps
mov
pop
lahf
push
xor
fidivrl
jne
ret
xchg
pmulhuw
pop
into
movsb
jb
insb
push
addr16
popa
jno
push
sahf
arpl
fmuls
les
adc
addr16
pop
call
loope
and
outsb
out
xchg
sbb
cmp
pop
or
sar
push
push
je
fldenv
cmp
aaa
in
enter
push
test
shl
icebp
add
out
adc
mov
inc
inc
pusha
sbb
cmp
in
and
inc
pop
pop
outsb
std
fsts
dec
add
mov
push
ret
popa
sbb
pushf
mov
das
sub
imul
leave
pop
fisttpll
outsb
push
sub
lods
notl
and
dec
addr16
lcall
add
in
mov
fscale
shr
and
je
xchg
jle
jo
cld
jne
mov
out
jb
add
jo
bound
push
jg
data16
les
std
sub
cmpb
pop
push
scas
imul
icebp
and
lcall
pop
or
or
out
stc
ss
loop
add
sbb
int
jl
mov
nop
rcll
jge
sbb
add
incb
cs
sub
dec
adc
or
mov
xchg
mov
not
dec
imul
adc
or
rorl
filds
out
and
adc
lods
aam
das
addl
fistl
popf
sbb
in
mov
int3
movsb
aaa
inc
je
inc
push
repz
inc
ret
adc
int3
pusha
inc
ret
adcb
loope
sub
popf
and
int
push
sbb
push
addl
ljmp
adc
mov
and
sub
addr16
adc
adc
lcall
pop
loope
aaa
dec
xchg
lods
lret
mov
imul
mov
push
pop
push
mov
xchg
dec
mov
xlat
dec
cmpb
loope
mov
sbb
cwtl
inc
xor
sub
xor
sbb
jns
jno
xor
xchg
xor
xorb
sub
testl
mov
pop
popa
dec
cltd
inc
pop
xchg
add
inc
ss
mov
insb
mov
hlt
pop
dec
dec
pop
and
dec
fstpl
xchg
andl
pop
out
in
jecxz
pop
test
into
aad
nop
mov
jge
mov
repnz
mov
ret
cmpsb
test
jg
jae
test
mov
dec
in
mov
mov
mov
mov
fmulp
fiaddl
pop
int
pusha
sub
aaa
jp
mov
and
xor
and
mov
add
and
scas
mov
inc
lret
dec
push
nop
mov
push
fdivs
inc
shl
inc
int3
rolb
sbb
sub
in
cmp
mov
into
mov
aaa
shl
call
scas
add
rorb
cmc
add
movsl
fstl
push
pushf
sbb
jo
lods
mov
pop
xchg
mov
dec
jmp
popl
sbb
les
clc
add
jecxz
gs
lret
pop
cmp
or
popa
mov
adc
xchg
arpl
jne
scas
ret
jnp
mov
outsl
pusha
sub
mov
pop
cltd
std
stos
sarb
aas
les
mov
shlb
stc
arpl
fisttpl
add
loope
mov
aas
sbb
sub
rcr
push
ja
dec
das
xchg
js
add
cmp
stos
cmpsl
in
sub
dec
sbb
test
sbb
sub
stos
xor
push
and
push
addr16
mov
dec
inc
nop
jb
push
push
lock
jns
fisttpll
movd
xchg
out
outsl
dec
and
daa
sub
enter
js
inc
adc
xor
stos
into
repnz
jmp
enter
push
into
cs
out
inc
inc
and
jp
loope
mov
jle
sbb
lods
outsl
incl
dec
andl
rcrb
xchg
flds
pusha
cmp
cmpsl
or
testl
jb
popa
arpl
add
xor
rcll
xor
int
aas
aas
or
jle
ret
add
inc
arpl
mov
sub
push
add
outsl
test
sub
pop
aam
mov
cmp
push
in
xor
mov
call
scas
jns
scas
clc
mov
fdivr
lods
or
mov
xchg
fldenv
pop
andb
arpl
mov
scas
ret
outsl
lret
xor
in
and
dec
mov
loop
push
sbb
fimuls
test
into
xchg
sub
mov
push
les
aam
out
pushf
push
xchg
xor
xchg
clc
repz
test
outsb
xchg
shll
jae
jno
or
dec
mov
xor
push
cs
mov
lea
fmul
and
fsts
inc
ret
lock
scas
gs
inc
stc
arpl
into
lods
out
cmp
repz
out
popf
je
sub
pop
lret
cmpsl
or
rclb
pop
scas
shl
mov
mov
inc
cmpsb
repnz
xchg
das
or
icebp
std
cmpsl
mov
fwait
outsb
sti
fiadds
jno
add
lret
jo
call
jns
imull
mov
inc
fdivs
inc
dec
call
sub
int
pop
sbb
ror
and
addr16
push
mov
mov
ret
adc
adc
dec
mov
jae
mov
mov
sbb
shrl
push
push
sub
adc
jns
or
jb
adc
sbbl
cmp
negb
in
movsl
mov
int
inc
ret
pop
sti
mov
leave
jp
dec
xlat
lcall
test
filds
push
dec
add
data16
in
mov
movb
inc
adc
pop
mov
push
leave
jmp
cmp
cmc
push
jl
loop
and
out
mov
cmpsb
mov
into
or
mov
push
gs
and
mov
fwait
aas
inc
sub
mov
ficompl
inc
std
mov
push
loopne
pop
add
in
sub
or
cltd
roll
lds
mov
jge
jno
xor
sbb
or
xor
mov
mov
mov
push
rorb
data16
std
push
and
into
xchg
adc
add
les
fs
gs
lea
fnstcw
enter
xchg
rclb
mov
adc
inc
cmp
mov
lods
mov
cmp
inc
inc
iret
fwait
push
cltd
lret
sbb
mov
sbb
das
jne
mov
daa
ss
xor
jl
push
aam
fsubrs
inc
pushf
sbb
sub
jle
and
cmpsb
es
dec
add
ds
mov
cmp
push
xlat
push
xchg
pop
int
push
out
and
cmpl
mov
mov
imul
aam
mov
xchg
jp
arpl
lds
add
rolb
xchg
inc
ret
mov
mov
popf
inc
pop
js
xchg
ljmp
jns
push
aas
in
pop
xchg
rcrb
or
and
ficomps
inc
add
mov
in
jb
aam
and
push
int
xlat
mov
insb
add
mov
lods
loop
loope
mov
movl
mov
scas
jb
loope
ret
xlat
cmpsl
sub
rclb
adc
insb
sub
popf
inc
dec
xor
enter
add
pop
mov
ret
imul
add
movsb
in
sahf
insb
hlt
jno
loop
outsb
or
cmp
je
pop
fucomp
sub
pusha
jbe
fsubl
cwtl
pop
add
inc
sbb
add
test
lods
shll
add
clc
cmp
pop
fadd
or
repz
into
fnstcw
fisttpll
shlb
es
in
shll
mov
mov
sbb
push
mov
in
mov
jge
decl
mov
or
mov
lock
js
pop
lea
imul
int3
adc
js
mov
pop
lret
push
jg
shll
cltd
xor
mov
popf
cmc
das
jne
and
insl
jno
mov
jmp
iret
sbb
outsl
and
imull
sbb
mov
adc
loop,pn
adc
mov
pop
cmc
push
mov
testl
nop
dec
push
sub
loope
pop
inc
mov
popa
mov
daa
incb
mov
pop
cltd
sub
lods
out
lods
push
je
push
pop
push
pop
pushf
pop
inc
movsb
ret
mov
sbb
mov
xor
add
or
dec
add
push
adc
shr
stc
push
std
out
and
in
cmc
in
sbb
jae
in
xchg
jns
cmp
xchg
mov
and
int3
fcomip
add
iret
pop
sbb
ds
pop
mov
filds
in
dec
sarb
enter
enter
jne
cmp
push
and
call
dec
jo
cmpsl
rol
add
dec
test
adc
hlt
mov
or
hlt
lods
mov
cmp
pop
cmc
jle
je
mov
mov
sub
fdivrl
add
jge
mov
mov
mov
rorl
xchg
leave
stos
push
lods
adc
icebp
inc
aam
lock
in
test
pop
int
lods
add
sbb
push
mov
jg
sub
int
cmovne
shrb
in
aam
xor
xchg
jge
je
bound
lcall
pop
lret
in
jbe
xor
adc
xchg
inc
and
shll
cld
lahf
dec
mov
fisubrl
int
arpl
pop
rcrb
fs
popa
xchg
jne
jp
rolb
jbe
jecxz
mov
pop
push
lcall
sbb
jae
and
dec
add
les
xchg
into
rorl
ja
jp
stc
inc
cmpsl
jno
out
push
shl
and
cmp
testl
xchg
cmpsl
adc
adc
inc
dec
scas
into
arpl
into
push
nop
dec
loope
jbe
fwait
mov
and
in
mov
mov
test
cmp
pop
repz
xchg
aas
add
dec
cld
addr16
add
pop
outsl
mov
add
mov
lods
stos
ret
scas
xchg
pop
lods
enter
lea
rcrb
jbe
lods
ljmp
adc
pop
push
aas
jns
lds
movb
loop
subl
fsts
mov
cmp
push
jns
nop
mov
andl
adc
cmp
pop
push
push
insb
icebp
cmpsl
pop
cmp
inc
cmp
mov
mov
cld
jp
push
mov
and
loope
dec
mov
loop
or
jbe
scas
fisttps
scas
paddd
cli
or
bound
cltd
cmp
mov
push
dec
xor
dec
push
lret
enter
fs
push
adc
outsb
add
popa
test
inc
movsl
push
adc
and
div
fisubrs
push
push
cltd
lods
push
add
out
sbb
in
test
dec
enter
or
mov
or
xor
loop
rorl
pcmpeqb
loop
mov
or
and
mov
mov
mov
xor
mov
jne
jecxz
dec
inc
xlat
add
push
or
ss
in
pop
lahf
in
push
ficoml
lods
or
loop
pop
ret
and
push
cmc
add
call
mov
add
push
test
mov
mov
add
add
lods
cmpsb
mov
fisttps
xchg
mov
in
sbb
jecxz
or
dec
es
ss
push
xchg
lds
push
pushf
cld
sub
cmp
xorl
sbb
rorb
fldcw
aam
lea
dec
xchg
sub
orb
push
pop
pop
jns
sti
cmp
rorb
push
out
jno
xchg
fcmove
dec
jb
add
cmp
andb
jmp
add
enter
inc
adc
stos
fistpl
cmpsl
aam
xchg
inc
dec
xor
repz
repnz
inc
sub
mov
mov
mov
jg
leave
mov
ret
mov
adc
sarb
cmc
testb
adc
test
daa
xchg
imul
hlt
xor
cmp
or
push
sub
orb
mov
xchg
mov
mov
js
fwait
pop
and
xor
sahf
lods
xor
fistl
or
pop
lods
rclb
jmp
pop
sbb
dec
mov
mov
test
jp
mov
jbe
data16
lds
stos
dec
ljmp
dec
fisubrl
inc
or
cwtl
test
push
movsb
xchg
pop
in
mov
pop
jl
in
jmp
add
fs
sbb
imul
stc
and
push
dec
fdivrs
pop
movsl
xchg
xchg
int
cmpl
scas
sub
nop
cs
int
push
pop
pop
hlt
or
pop
xlat
loope
jns
das
or
and
mov
roll
popa
pusha
push
ret
imull
inc
push
cltd
mov
xor
lret
addr16
mov
fmull
lcall
and
fwait
ret
lea
dec
or
es
call
frstor
pushf
xor
inc
repnz
ja
cltd
enter
cld
int
sub
adc
sub
xchg
fcmovnu
mov
mov
fldenv
aam
push
loope
aam
cmc
or
pop
popf
pop
xchg
nop
add
mov
or
in
pop
outsl
xlat
cli
cmp
mov
into
cli
ror
jecxz
repz
lret
lret
pusha
mov
outsl
sbb
jbe
out
cmp
push
xor
es
dec
cmp
add
fwait
cmp
xchg
sub
lcall
xor
push
push
test
addr16
push
xchg
xchg
push
or
shr
xchg
adc
or
dec
pop
add
shrl
loope
add
push
cmc
das
aam
push
daa
fmuls
mov
push
dec
xchg
dec
mov
insb
fisubrl
pop
movsb
pop
mul
jmp
popf
cli
mov
scas
cwtl
ss
ret
mov
ss
js
in
scas
data16
lods
add
out
pushf
push
push
push
mov
dec
pop
cmc
sub
pop
cltd
add
cld
ret
push
jbe
mov
adc
mov
or
xor
mov
call
adc
fisttpl
or
decb
movsb
or
or
sbb
pop
test
aam
test
sub
iret
mov
jne,pt
jecxz
xor
cmp
xor
push
jnp
xchg
popf
mov
and
mov
or
mov
rcrl
mov
add
push
sbb
xchg
xchg
rorb
xchg
outsl
clc
ljmp
sbb
inc
pop
fildll
push
add
cs
ds
leave
jnp
sub
mov
xor
mov
lods
out
je
cld
push
dec
fs
sub
jecxz
push
inc
push
rclb
test
lds
imul
sub
je
fucom
jns
or
inc
lock
incb
dec
ds
fldenv
jnp
mov
aas
in
jecxz
call
cmp
mov
jl
add
and
or
jne
jmp
aaa
xor
daa
jecxz
cmp
loope
sub
mov
mov
jb
jl
leave
imul
insb
jp
inc
fldl
and
mov
mov
pop
lock
fildl
testb
je
cmp
jp
mov
test
adc
data16
shrb
aad
and
and
int
push
mov
xor
and
arpl
int3
mov
std
cmp
pop
jae
and
add
inc
test
push
xchg
enter
psrlw
sub
mov
clc
xor
out
adc
jno
stos
pop
push
sti
push
mov
aam
jno
fldcw
fwait
sbb
pushf
adc
cs
gs
scas
mov
jle
mov
dec
mov
push
jle
cmp
in
cwtl
xchg
mov
push
out
clc
movb
adcb
dec
or
cli
mov
rorb
adc
xor
xchg
cltd
dec
daa
sbbb
loop
pop
leave
lahf
mov
repnz
lret
out
push
movsb
hlt
jbe
jge
cmpsl
cmpsl
mov
mov
aam
push
pop
loop
xchg
shl
testb
mov
clc
mov
jnp
xor
mov
adc
adc
es
es
add
xchg
into
mov
pop
cmp
add
xchg
adc
out
repz
lcall
dec
lods
fsubr
cli
jecxz
xchg
lcall
cmp
jb
mov
and
test
aas
jp
loope
jb
clc
inc
adc
jns
rcrl
sbbb
insl
add
test
hlt
nop
dec
pop
fcmovne
pop
shlb
sbb
pop
out
jle
psrlw
jne
test
fidivs
mov
or
loop
aas
stos
xchg
test
pop
dec
fadd
mov
or
fisttps
push
pop
and
mov
inc
push
arpl
jl
decb
dec
fwait
scas
xor
arpl
jae
leave
hlt
jae
adc
jbe
sbb
dec
js
and
xor
mov
rcr
fcomps
xor
js
or
sub
cmp
fdivs
xor
sbb
sub
jb
not
push
inc
inc
jg
mov
lods
mov
sbb
and
mov
setl
out
sbb
jmp
push
repnz
in
and
mov
inc
int
dec
xor
aad
xchg
enter
in
push
loop
out
cmp
mov
mov
push
xor
xlat
jnp
add
add
push
out
aam
or
jo
fmuls
aas
xchg
loopne
aam
xchg
sub
sub
lret
sub
mov
xlat
sbb
mov
push
push
push
shlb
push
sbb
push
mov
mov
stos
jb
dec
negb
rol
test
sar
cmp
iret
loop
arpl
leave
mov
lret
lods
movsl
sub
pop
scas
je
mov
push
cltd
daa
aam
enter
inc
mov
test
dec
pop
sbb
or
std
out
xor
pusha
fsubl
pop
inc
scas
cwtl
sbb
lret
cmpsl
and
fiadds
pusha
hlt
mov
mov
mov
push
ficoms
movsb
icebp
aaa
pop
mov
inc
insb
cmpsb
stos
sub
jbe
xor
aas
pop
adc
mov
mov
cmpsl
sub
out
adc
cmp
mov
fsubl
outsl
das
xor
sub
movsl
mov
push
pop
lods
mov
and
hlt
aad
call
aas
xchg
inc
rolb
jo
mov
flds
stos
sbb
cmpb
loopne
ret
int3
jne
pcmpeqb
cltd
call
mov
lds
lret
adc
imul
mov
mov
mov
mov
push
jnp
add
or
addr16
mov
fnstenv
jnp
pop
push
cmpsb
lock
roll
sub
mov
aas
sub
xor
lret
stos
inc
cmpsl
insl
call
stc
scas
hlt
push
cli
and
jg
test
cmp
mov
shrb
xor
int
jbe
scas
cwtl
daa
lret
adc
pop
retw
lcall
pop
rcl
ret
dec
push
in
mov
jb
lock
dec
out
lods
jmp
int
lret
or
movsl
sbb
lea
push
ret
jb
pop
jle
cmp
push
cmpsb
fdivrs
lock
ss
lods
aad
mov
repz
nop
nop
dec
scas
jne
in
daa
jecxz
test
rcll
cld
pop
xor
xor
jle
pop
push
rcl
fstpl
popa
mov
sub
or
vpunpcklwd
pop
movsl
mov
daa
popa
dec
sbb
or
js
add
add
jae
pop
fcomps
std
adcb
adc
cmp
sbb
jo
test
aaa
scas
test
popf
push
and
imul
mov
stc
cwtl
pop
les
mov
mov
ljmp
sub
lea
xor
push
jg
std
pop
adc
xor
sbb
pop
pop
cmpsl
cmpsl
pop
stos
lods
mov
pop
repz
movsl
sbb
ficomps
mov
jecxz
and
fimull
jbe
jle
sub
cmp
and
mov
xor
dec
xchg
pop
mov
xchg
jle
xor
jle
cmc
dec
mov
push
sbb
mov
and
jl
or
shrl
mov
out
add
movsl
adc
jo
mov
xor
sahf
mov
mov
add
movsb
pop
add
fadd
jge
mov
mov
mov
fcompl
xorb
aaa
testl
pop
aam
ret
cmp
and
fldenv
jb
fnstcw
js
or
imul
add
cmp
ja
arpl
and
loop
rcrb
ja
cld
push
push
insl
cmpsl
mov
rcrb
xchg
fucomp
setae
xchg
or
fwait
inc
add
inc
jp
cmpsl
jmp
dec
xchg
ljmp
stos
pop
pop
and
add
and
out
mov
cld
cli
stos
sbb
push
int
enter
mov
loopne
mov
push
pusha
dec
jecxz
add
jnp
fwait
stc
push
xchg
sbb
pop
xor
jo
mov
mov
cmc
xor
or
inc
test
mov
pop
and
jo
aad
gs
or
aam
movsl
add
aas
add
pop
dec
sub
sbbl
pop
xchg
out
cmp
jp
inc
mov
push
rcr
test
in
jp
stc
mov
loopne
mov
shl
arpl
push
movl
xchg
lret
sub
jge
enter
jmp
cmp
inc
mov
push
iret
dec
xchg
leave
dec
js
aad
xchg
and
or
pop
pop
fadds
jo
or
cld
into
mov
sbb
mov
sahf
mov
cltd
pushf
add
mov
cmpsb
ljmp
push
mov
push
jb
test
ja
mov
xlat
jns
mov
or
add
dec
cmp
xor
adc
fsubrl
imulb
cmc
addr16
lret
or
push
sbb
jmp
add
dec
bound
sbb
pop
jg
lret
push
dec
jge
stos
flds
xchg
push
and
out
dec
es
test
pusha
dec
dec
xchg
scas
es
insb
add
ja
mov
aas
repnz
into
add
dec
sbb
arpl
loopne
and
jge
scas
int
bound
mov
lret
notb
cmp
pop
sbb
stos
adc
in
mov
pop
pop
leave
or
mov
sub
dec
inc
mov
lret
mull
jne
mov
xchg
and
cmpsl
repz
andb
cld
and
outsb
jmp
loop
jo
aaa
pop
mov
clc
cltd
mov
cmp
hlt
sbb
cmp
dec
inc
shlb
pop
out
push
inc
and
adc
std
test
push
dec
out
xchg
sub
pop
pop
pop
pop
popf
jmp
testb
mov
sbb
insb
test
test
stos
xlat
loopne
add
or
aas
mov
push
mov
cltd
sub
stc
xor
arpl
inc
sub
mov
pop
sub
jecxz
lret
jbe
mov
inc
iret
and
aad
idivb
test
dec
test
jo
ret
jl
imul
loopne
je
push
mov
in
adc
test
push
sbb
push
xor
sbb
and
sub
xchg
inc
and
mov
xchg
cmpsl
dec
stos
xor
push
mov
in
dec
cmc
insl
sub
mov
out
in
gs
push
inc
dec
sti
fsts
and
in
xor
sub
ret
clc
pop
repnz
or
loopne
fistpl
lods
pop
arpl
sub
mov
test
and
mov
sbb
jl
mov
int3
add
js
adc
adc
xor
decl
adc
push
cmp
neg
xchg
mov
mov
cmp
aas
inc
adc
dec
hlt
cltd
push
out
adcb
aaa
aam
test
mov
inc
xchg
out
aam
cs
iret
cmp
int
push
pop
rorl
das
push
jl
or
adc
xchg
push
fld
jecxz
iret
pop
mov
or
mov
jmp
sbb
cmpsl
test
sar
stos
and
mov
adc
imul
add
add
mov
dec
mov
push
push
scas
sti
add
lahf
mov
mov
imulb
shlb
jne
xchg
pop
jg
das
sub
jecxz
test
dec
movsl
xchg
int3
enter
pop
sti
cmp
sbb
jg
adc
dec
inc
fwait
int3
hlt
in
outsl
xorb
outsl
sbbl
jae
fisubs
jb
aaa
dec
mov
cmp
pop
popf
mov
add
or
pop
and
aaa
rcrl
test
mov
and
jb
test
push
mov
psubsb
imul
pushf
test
shll
jae
dec
test
xchg
enter
enter
xchg
jbe
xchg
or
xor
fcmovnu
cmp
imul
ret
daa
outsl
cltd
mov
ud1
dec
jbe
or
lods
mov
out
jmp
lock
xlat
adc
xor
pop
imul
mov
push
dec
pop
sub
scas
xchg
sbb
and
imul
jp
ljmp
ss
add
pusha
dec
movsb
push
loop
das
loope
jns
xor
add
test
lods
sub
lahf
add
repnz
xchg
lods
popa
sbb
add
lods
cmpsb
aam
daa
and
in
xor
sbb
sub
fcomip
stc
pop
les
out
ret
fsubl
sbb
lods
xor
sub
into
xchg
inc
repnz
xor
cmp
ja
sub
add
into
xchg
mov
pushf
cld
hlt
add
jl
test
fldenv
aaa
push
jb
push
stc
testl
call
out
jecxz
xchg
insl
pop
mov
xchg
scas
icebp
inc
mov
mov
pop
int3
sub
push
test
into
add
hlt
cli
leave
in
fwait
xor
into
push
imul
dec
in
inc
sbb
mulb
mov
add
or
lds
stos
jge
xor
cmp
mov
fcomps
js
ljmp
cmpsl
jg
dec
ret
imul
fcmovnb
pop
sub
push
pushf
fwait
int
jbe
xchg
shrb
jp
dec
inc
ljmp
sub
test
pop
fwait
jae
push
repz
daa
or
sbb
loopne
fsubp
ss
stos
xor
xor
test
push
mov
cmp
dec
ljmp
test
xor
in
fcompl
mov
fdiv
lahf
inc
inc
jno
aas
sti
js
jno
push
xor
scas
cmc
mov
popf
jge
push
in
and
push
rcll
xchg
mov
cmpsl
or
sar
or
or
test
pop
mov
jmp
aas
push
adc
and
loop
add
cmp
and
sbb
mov
fdivl
mov
pop
rcl
fbstp
rol
cmpsl
jle
fadd
outsl
repz
iret
xchg
sub
push
cld
into
and
stc
xchg
mov
daa
hlt
mov
mov
mov
push
jns
test
clc
popa
inc
scas
int
pop
mov
push
cmp
inc
sti
icebp
stos
enter
fs
popf
push
mov
and
pop
popa
fsubp
not
cmpsl
fists
mov
or
or
mov
rcl
das
push
lds
jbe
add
popa
inc
outsl
push
adcl
scas
mov
mov
jbe
arpl
cmp
call
xchg
je
dec
jecxz
xor
mov
adc
add
hlt
adc
shlb
sbb
fwait
mov
pop
shlb
mov
popf
loopne
mov
jp
int
pop
lret
pop
fstp
dec
mov
je
pop
in
inc
lret
sbb
or
aas
ret
xchg
js
clc
jae
mov
xchg
cmp
mov
ljmp
mov
or
xchg
cmp
test
push
sbb
das
hlt
mov
lret
cmpsb
jp
mov
cmpsl
loopne
rcrl
pop
ljmp
in
popa
add
outsb
popw
push
daa
loop
sbb
sbbb
jmp
dec
xchg
ret
push
into
hlt
mov
pop
gs
cmp
jecxz
mov
xor
rorb
lods
mov
push
gs
sahf
fwait
jae
gs
jle
jae
inc
enter
adc
clc
mov
mov
aaa
js
das
lods
shlb
testb
pop
inc
inc
popa
cmp
in
stc
and
sub
add
inc
movsb
insl
in
sar
das
dec
or
mov
sbb
push
push
add
and
sub
mov
lcall
sbb
and
sub
xor
into
rclb
popf
fs
loop
loop
adc
movsb
imul
pop
es
popf
test
inc
or
lds
arpl
ja
jnp
addr16
imul
mov
cmp
pop
lret
fistps
outsl
jmp
fisubrl
push
dec
lret
jg
ret
sbb
icebp
jb
xor
mov
mov
sub
jno
imul
adc
pop
jo
dec
lds
mov
dec
out
push
daa
nop
xlat
popa
xchg
cmpsl
or
inc
icebp
sub
cmc
adc
inc
sub
call
idivl
pushf
mov
dec
and
inc
scas
int
xor
push
cmp
gs
inc
ljmp
jle
add
clc
es
jbe
std
jmp
jae
cmpsl
cmpxchg
test
repz
into
xchg
push
lahf
dec
xorb
fdivrl
icebp
aaa
mov
maskmovq
mov
mov
and
popf
test
jmp
out
roll
pop
outsl
mov
pop
fimull
xor
cwtl
lret
sbb
push
imul
xchg
daa
int3
mov
sub
in
inc
add
pop
push
jecxz
cmp
divl
sbb
sub
xor
stc
cltd
sbb
mov
xor
mov
mov
jg
inc
xor
dec
pop
daa
call
lret
push
pop
icebp
out
mov
movsb
xchg
test
mov
cmp
ss
mov
mov
mov
das
imul
adc
inc
js
ds
xchg
inc
test
ficoms
jo
inc
sbb
inc
mov
pop
mov
pop
mov
outsb
in
cs
mov
mov
dec
push
pop
mov
or
xor
add
mov
mov
xor
push
xor
adc
push
pop
jl
rclb
push
call
jecxz
cwtl
fisubrl
fbld
xchg
xor
jecxz
inc
out
arpl
mov
push
mov
cmc
in
add
inc
ret
xchg
imul
add
call
xor
cwtl
movsb
mov
fdivrp
jno
pop
enter
or
jecxz
outsl
mov
out
je
cmc
add
sbb
imul
test
pushl
aaa
add
fsubrl
lds
jbe
movsl
cmp
lods
add
lcall
xchg
jnp
pop
push
dec
es
jnp
testb
mov
xor
popl
mov
mov
in
popf
jno
ret
gs
adc
jle
pop
repz
xor
jbe
xor
pop
jp
push
xor
nop
lds
lods
xchg
mov
out
push
pushf
or
imul
loop
and
icebp
popa
jbe
fldt
jecxz
imul
cld
pop
dec
add
sti
ja
jae
cmpsb
mov
out
les
xor
adc
popa
push
sbb
cltd
ljmp
out
sahf
adc
lahf
fidivrs
add
mov
mov
jbe
out
testl
and
fisubrs
push
pop
std
push
push
cmp
pop
sub
or
lods
cmpsb
mov
leave
xchg
dec
fs
cld
cmp
mov
push
subl
adc
repz
and
xor
js
pop
adc
sub
imul
mov
out
push
lods
sub
lds
lods
jmp
and
insl
hlt
cmc
ret
mov
outsb
popf
add
or
sarl
inc
xchg
xchg
loope
xchg
and
fwait
ds
shr
sbb
adc
mov
pop
dec
jns
mov
xor
push
adcb
ficomps
sub
or
jecxz
cmp
in
pop
dec
xor
dec
dec
xor
xchg
jns
push
dec
xor
fs
and
add
iret
popl
jle
ds
cltd
cltd
mov
inc
insb
or
pushf
xor
popa
fcomip
mov
lcall
fwait
popf
push
insb
push
cmpsb
xchg
loopne
xchg
popa
or
in
scas
sbb
mul
mov
push
or
in
out
insl
stos
outsb
jnp
ds
scas
ljmp
mov
xchg
jle
mov
jno
aam
pop
lcall
push
in
arpl
fstps
rolb
imul
in
push
es
push
mul
inc
push
loope
and
push
add
jmp
jns
pop
jns
add
fsubrs
jmp
pushf
fisubl
push
pop
jnp
dec
and
shrb
add
loope
cmp
jne
fcmovne
adc
push
sbb
jbe
push
and
or
and
mov
lds
or
mov
cmp
test
movsl
es
push
add
hlt
xor
imul
jo
lds
call
xchg
ror
push
adc
cmpsl
shll
push
test
push
in
lods
mov
sarl
adc
adc
int
imul
cmp
jae
ljmp
dec
test
subb
enter
imul
xchg
insb
jl
cmp
out
sub
jg
mov
cmp
lods
push
pop
adc
clc
dec
add
loopne
add
sub
leave
int3
jge
jge
shl
sar
mov
in
in
jbe
daa
and
cmpsl
sub
out
cmp
jmp
movsb
push
xchg
mov
pushf
xchg
roll
cmc
pushf
jmp
fidivs
in
les
nop
push
daa
adc
cmpsl
cmp
imul
lods
negb
jbe
das
neg
push
cwtl
out
dec
add
push
fidivs
pop
and
iret
xchg
lds
jl
ret
mov
push
fmull
sarb
lcall
dec
push
mov
dec
repnz
push
lea
mov
xchg
mov
outsl
aam
inc
stos
adc
dec
lea
mov
mov
sbb
xorb
pop
adc
aaa
pop
aas
lcall
and
cmpb
in
xor
or
clc
nop
sub
sbb
mov
mov
and
mov
or
xlat
ja
push
add
mov
jns
fcmovnb
divl
aas
mov
xchg
pushf
cmp
add
xlat
test
ljmp
push
jbe
sbb
in
ljmp
xlat
mov
jp
test
push
jmp
xchg
cltd
shrb
xor
int3
sahf
and
jl
out
imul
fisubrs
adc
int3
or
loopne
pop
rcrl
xchg
popf
inc
inc
mov
ljmp
pop
mov
dec
fistpl
inc
icebp
and
jbe
dec
inc
pop
and
mov
mov
xchg
sub
test
push
mov
fistpll
mov
cmp
ja
pop
pop
adc
ret
daa
xchg
insb
test
push
int
pop
loopne
jnp
fisubrs
xlat
adc
scas
ret
add
mov
mov
in
dec
into
stos
mov
fistl
or
sahf
data16
shll
jno
pop
xchg
leave
inc
dec
dec
sub
das
fbld
mov
push
push
ret
mov
inc
cmp
jge
sbb
pop
insb
and
jbe
daa
mov
jns
ljmp
mov
cmp
mov
sbb
inc
sub
mov
mov
push
xchg
jl
daa
or
push
aas
pop
mov
popf
scas
test
add
jns
cmpsb
push
pop
inc
outsl
cmpsl
fisubrs
sbb
arpl
loope
mov
push
mov
and
movsl
negb
cmp
cwtl
ja
inc
outsb
sbb
fcoms
mov
sbb
add
cli
ja
lods
xchg
pusha
xchg
movsb
mov
out
mov
call
cmp
popa
push
mov
rorl
sub
loope
and
mov
sub
cs
cmpsb
and
and
push
fldt
push
movb
test
shr
fistpl
notb
add
sbb
lret
pop
or
gs
call
popf
jns
arpl
or
mov
ljmp
mov
mov
add
lret
xchg
xor
ret
and
in
out
scas
inc
arpl
lcall
test
ja
mov
arpl
imul
push
sub
sbb
mov
mov
into
pop
repnz
push
fistpl
rcrb
add
add
mov
sub
xchg
mov
addl
js
sahf
dec
push
pop
adc
in
xchg
ret
mov
int3
or
aaa
jns
push
out
mov
push
sub
and
mov
or
or
push
pushf
push
dec
and
sbb
sbb
loope
rcr
pop
neg
adc
cltd
das
roll
fisttpl
sbb
jge
ds
push
cmp
or
in
push
out
shl
movsb
push
cmpsb
cwtl
mov
outsb
sbb
mov
xlat
int
out
dec
add
out
mov
sub
sbb
sbb
mov
das
dec
jbe
movsl
sub
add
adc
mov
rolb
adc
xor
jne
ljmp
orb
mov
ret
adcl
sbb
call
in
jno
lcall
mov
xchg
push
clc
popf
pop
xlat
rcrl
xlat
test
test
mov
fmul
pop
xchg
in
sub
and
sbb
xchg
xor
repz
addr16
mov
jne
repnz
pop
mov
pushf
aam
cmp
jb
scas
test
std
in
fdivrl
push
jmp
jge
or
lret
jno
lods
stc
aas
das
jle
loopne
mov
std
loope
test
inc
int
pop
mov
bnd
push
mov
sub
std
imul
aam
mov
cmc
xchg
xor
mov
ret
shrb
fimull
scas
gs
loop
mov
jns
mov
int
lock
sbb
outsl
pop
xor
and
icebp
mov
mov
mov
pop
mov
aas
sub
fstl
mov
jns
into
pop
mov
or
aas
mov
fidivl
insb
insl
mov
sbb
push
or
mov
mov
sub
mov
outsb
mov
push
mov
xor
push
push
xorl
into
dec
inc
or
sub
lock
test
fstps
fprem
aam
cmpsl
push
out
insb
or
adc
cltd
into
in
mov
cltd
in
push
cmp
jmp
fadds
mov
arpl
mov
jmp
aam
add
xchg
ds
iret
stc
mov
and
mov
xchg
arpl
lret
ljmp
fldenv
mov
inc
cli
mov
xchg
xchg
push
cmpsb
inc
jb
je
dec
xchg
in
imul
repnz
mov
shrb
sub
inc
inc
dec
int3
jl
xor
subl
cmp
mov
testl
mov
fadd
pop
push
pusha
ret
add
push
dec
mov
and
iret
xor
into
bound
fmul
cs
adc
pop
lock
mov
pop
sarb
lods
nop
insb
jnp
sub
popf
push
sti
into
jbe
repz
inc
jne
imul
roll
outsb
test
sub
mov
aas
jle
mov
pusha
fldln2
js
pop
adc
cmpl
roll
mov
movsl
in
push
jg
imul
subb
add
inc
dec
jbe
mov
je
aas
das
xchg
add
fmul
cwtl
or
mov
ljmp
adc
hlt
jne
dec
and
push
xor
in
shrl
les
inc
testl
adc
data16
movsb
jle
loope
stc
push
sahf
push
push
pop
mov
sbb
jle
loop
push
xor
xor
cmp
arpl
xchg
xchg
or
cs
lods
nop
pop
sbb
pusha
loopne
push
jo
lds
in
add
push
sub
pop
in
and
pop
into
dec
fwait
int3
fists
and
insl
add
pop
or
xor
mov
int
dec
mov
out
imul
lock
mov
mov
jmp
cs
cmp
mov
movsl
in
loopne
mov
fisubs
add
sbb
add
inc
fwait
add
lret
xchg
fiaddl
int
inc
cwtl
loope
in
es
aam
movsl
mov
xchg
roll
xor
push
fld
xchg
aad
sbb
rcll
lea
push
or
insb
dec
adc
call
fsub
dec
imul
push
jne
sub
jmp
mov
jg
sbb
daa
jb
shrl
lods
sub
gs
cmp
jo
faddl
ret
data16
pop
mov
xchg
popa
dec
hlt
dec
hlt
mov
insl
repnz
mov
les
mov
rol
in
out
or
mov
or
mov
movsl
push
rorl
lcall
cmp
mov
scas
gs
mov
xchg
push
mov
popf
dec
call
movsb
dec
mov
pop
aad
pop
mov
mov
or
cmp
fwait
sahf
or
mov
mov
or
sub
gs
push
ror
pop
gs
dec
adc
cltd
jae
popf
xchg
xor
add
sarb
aad
outsl
fldcw
add
and
mov
lods
sub
clc
sbb
sub
mov
push
sbb
xchg
sub
scas
stc
inc
jne
aaa
pop
mov
or
mov
sub
add
push
xchg
xor
stc
cmp
insl
inc
das
hlt
xchg
mov
sahf
js
or
or
mov
ds
xor
mov
mov
mov
mov
inc
pop
cmp
or
cs
nop
jl
pop
jnp
mov
fcmovnu
lret
rcr
add
jl
lods
cmp
in
adc
out
imul
rorb
push
sub
fcomip
sahf
inc
push
and
sub
xchg
in
lock
ret
add
pushf
fs
movsb
jp
add
mov
pop
or
lods
cmpsl
pushf
push
jb
out
xor
xchg
dec
dec
push
lods
shlb
test
daa
adc
lds
pop
mov
push
sub
sub
aad
shl
mov
loope
sub
aam
loope
stc
push
mov
stos
sar
mov
mov
inc
lea
cwtl
pop
xchg
push
ja
lret
xor
cli
or
popf
cld
sbbl
xor
pop
dec
xchg
mov
fucomi
pushf
int3
test
or
lret
xchg
sbb
mov
fnstenv
push
imul
cmp
movsl
mov
xchg
mov
and
push
cmpsb
fstl
xchg
add
dec
mov
mov
dec
sbb
and
popf
mov
fidivrl
lods
sbb
scas
add
test
jne
mov
js
add
ss
jne
inc
sbb
mov
or
pop
insb
xlat
mov
es
sbb
in
adcl
fsts
aaa
pop
call
roll
out
shrl
lret
pop
fsts
cwtl
nop
inc
push
jp
rol
call
lds
xor
pop
nop
ljmp
push
pop
cli
pushf
int
adc
into
cmpsb
jb
mov
mov
imul
pop
pop
mov
cmp
jbe
fdivl
xchg
mov
fs
adc
dec
mov
sub
add
test
push
cmp
popf
int3
push
stc
lock
decl
rclb
mov
jmp
mov
out
movsb
add
xchg
cmpsb
and
roll
jae
lds
mov
aad
xchg
dec
repnz
or
jle
pop
in
ja
xchg
aas
push
ftst
xor
out
popf
inc
dec
lods
ss
dec
mov
mov
push
cltd
jns
push
popf
xlat
ret
mov
push
fwait
subl
out
aam
inc
fistpl
cmp
pop
sbb
mov
addb
addb
mov
and
icebp
jle
pop
ret
push
in
xchg
xor
adc
add
inc
xlat
cmp
dec
mov
inc
mov
pushf
pop
cmp
movsl
inc
iret
repnz
mov
pop
cs
xrelease
jne
or
adc
cwtl
mov
int3
lods
pop
xor
mov
and
cmp
ss
ds
ja
fsqrt
std
and
xor
mov
sbb
mov
push
lahf
daa
jo
mov
xchg
fistpl
fdivrs
adc
mov
dec
jl
mov
lods
das
push
aas
fsubrl
mov
inc
jecxz
push
adc
test
andl
ret
jmp
aaa
mov
lods
xchg
dec
fsubr
xchg
xorb
mov
cs
test
pop
mov
jnp
mov
mov
xchg
loope
cmpsl
mov
enter
dec
stos
test
or
icebp
fistl
add
into
stos
or
inc
ljmp
icebp
jecxz
int3
adc
fstpt
cmp
into
lcall
ud1
js
lds
test
jp
in
xchg
lcall
or
cmp
lcall
ja
cmp
rclb
sub
stc
cmpsb
mov
rol
adc
jns
aas
dec
mov
loop
outsb
pop
mov
mov
pop
push
lahf
dec
rol
ss
cltd
dec
in
std
mov
mov
cmpsb
jp
ljmp
les
shrb
push
stos
fmuls
dec
add
adc
inc
int
sti
imul
dec
cmp
inc
jns
xchg
cs
add
daa
mov
inc
pop
shrb
addr16
mov
sahf
pop
or
cmp
jno
add
xchg
xchg
mov
popf
cltd
inc
les
push
or
aam
add
xchg
push
ljmp
cltd
inc
jne
dec
fsubrs
mov
add
jne
sbb
mov
mov
cwtl
xchg
push
jns
cmp
xchg
addr16
aad
jns,pn
pop
sub
xchg
xor
jecxz
inc
xchg
adc
lds
mov
and
fsubrp
pop
imul
mov
dec
push
add
push
mov
out
sub
rolb
push
xor
sub
mov
sbb
int3
mov
js
cmp
mov
add
jle
lea
mov
push
or
xchg
pop
dec
add
lahf
aam
or
sbb
aad
imul
mov
adc
xchg
leave
mov
mov
vpsubsb
sbb
dec
mov
out
stos
cmp
cmpsl
push
sub
pop
or
sub
xchg
xlat
sbb
adc
imul
and
scas
stos
mov
jp
xor
push
push
sbb
pop
jae
jbe
aam
cmp
jno
idivb
fs
pop
xor
or
and
jns
out
mov
shlb
lret
pop
mov
xor
loopne
pop
xorb
addr16
stc
cmc
cld
hlt
or
icebp
fnstenv
sbb
lret
push
std
adc
and
in
push
push
xchg
cmp
popl
fbstp
aaa
pop
dec
push
stos
outsl
push
stc
sbb
lods
add
in
test
mov
insb
dec
lea
hlt
out
xchg
xor
movsb
je
cs
pop
xchg
sub
rorl
dec
xchg
scas
clc
and
add
cld
xor
sar
movsl
out
mov
dec
and
ss
ja
jmp
mov
dec
cmp
pop
lods
ljmp
and
out
push
pop
shrl
jb
pop
testl
or
add
popf
pop
add
cltd
xchg
add
imulb
out
outsb
and
outsl
mov
shl
repz
popf
adc
mov
push
xor
xchg
pushf
sahf
scas
sub
insl
loope
pop
jnp
sub
push
sbb
mov
xor
xor
and
scas
aaa
mov
cs
push
mov
add
mov
mov
popa
sar
dec
mov
push
fstpl
lret
pop
mov
ret
push
xchg
mov
dec
dec
add
or
dec
dec
mov
jp
rcrl
cmp
and
sub
orps
add
inc
nop
xchg
push
pushf
mov
pop
daa
insl
pop
mov
xchg
jnp
pop
aam
xchg
dec
gs
push
sti
sub
in
or
mov
mov
in
xor
mov
xor
push
mov
imul
dec
dec
mov
loope
jmp
push
aas
out
push
addr16
ljmp
mov
pop
xor
pop
dec
push
lret
mov
mov
notl
lret
outsl
shlb
es
push
fwait
subb
jne
cmpsl
into
adcl
push
push
mov
mul
mov
mov
xor
in
jg
orb
add
push
mov
pushf
iret
jmp
mov
aaa
and
or
jno
shlb
or
jne
mov
les
cli
rclb
cmp
mov
stc
fildll
ljmp
xor
dec
aaa
pop
jle
popf
imul
pop
pop
adc
ror
dec
std
std
xor
das
lods
rolb
mov
cmpsb
pop
pop
lock
adc
popa
test
push
jns
ds
lahf
push
test
test
adc
pop
sub
cmpsl
sub
mov
lret
mov
mov
aas
fstpl
cmp
popa
mov
add
pop
mov
test
mov
js
mov
dec
addr16
xchg
mov
fisttps
and
pop
popf
or
data16
ja
rcll
int3
cmp
inc
out
mov
enter
repnz
out
cmp
pop
jno
testl
inc
jae
mov
ja
jl
mov
pop
cmc
sahf
ds
mov
pop
mov
sub
xchg
popf
push
xchg
and
or
out
sbb
mov
lds
stc
mov
cmc
cs
adcl
mov
sub
sbb
adc
mov
jnp
aaa
push
clc
jae
mov
fistl
xlat
sbb
sbb
push
clc
in
push
and
fsubr
leave
or
outsb
pop
or
mov
xor
push
xor
jecxz
bound
dec
outsb
stos
mov
push
adc
das
in
stos
mov
loope
pop
test
push
rorl
and
rol
inc
test
push
scas
outsb
shl
ret
outsb
test
cmp
fwait
jo
lret
dec
lret
jae
push
lods
nop
ja
iret
loopne
notb
sub
outsb
mov
add
push
add
sub
adc
sub
dec
dec
inc
fstpl
in
and
mov
jp
jne
lahf
lock
xchg
lret
mov
mov
inc
xchg
mov
mov
add
out
mov
sahf
daa
adc
cmpsb
pop
push
and
pop
hlt
xchg
in
mov
mov
add
pop
fidivrs
rcrl
xlat
mov
pop
xchg
dec
fcmovnu
dec
or
pop
xchg
ljmp
loop
dec
dec
adc
xor
ret
jge
ss
icebp
mov
push
sahf
jne
xor
dec
pusha
dec
xor
jl,pn
inc
fcompp
das
mov
aaa
mov
or
js
into
pop
stos
jns
pop
sahf
cmp
push
pcmpeqb
mov
std
inc
inc
addr16
rolb
xchg
inc
lds
sbb
sub
cmp
add
and
adcl
decb
ss
sbbb
inc
sbb
xor
jo
xchg
jecxz
add
aad
insl
cltd
push
pmaxsw
adc
int
fistpll
xchg
in
std
aas
and
push
fwait
dec
out
dec
mov
outsl
adc
sbb
adc
xchg
cwtl
xchg
mov
jl
mov
jl
aaa
jp
xchg
test
or
mov
mov
nop
adc
data16
and
test
mov
rolb
jmp
xchg
jne
mov
sbb
vunpckhps
fidivrl
lcall
push
and
cwtl
pop
out
add
scas
dec
jns
and
data16
sub
xor
mov
and
mov
in
and
enter
mov
dec
mov
mov
mov
or
les
mov
mov
mov
mov
pop
in
aam
aaa
adc
cwtl
jbe
std
andl
pop
lods
dec
cltd
fcomps
mov
lea
test
fwait
pop
push
rolb
das
int
push
test
mov
loop
into
mov
dec
and
and
addb
xchg
inc
mov
mov
sbb
jno
add
pop
jo
pusha
data16
pop
adc
sub
mov
jae
shrb
jnp
mov
cltd
hlt
xchg
ja
jecxz
into
out
xchg
ja
push
add
mov
or
data16
and
push
add
movsl
fiaddl
ror
into
cmp
sarb
push
fsubr
pop
cmpsb
sub
push
idivb
or
stc
cmpsb
inc
fdivr
js
mov
adc
adc
divl
in
lods
mov
cwtl
push
push
sub
push
test
jae
icebp
push
fdivs
call
fadds
mov
rcrl
sub
dec
loop
in
adc
add
sbb
fisubl
push
test
cld
add
test
sahf
es
cmpl
fcmove
pusha
cmp
icebp
pop
fidivl
loope
push
pop
fldcw
in
and
outsb
jnp
fistps
sbb
sbb
out
mov
movsl
adc
pushf
pop
sti
in
adc
movsl
je
sub
cmpsl
mov
sbb
xchg
push
mov
pop
jno
mov
xor
hlt
jle
hlt
dec
paddusw
or
and
arpl
dec
leave
pusha
mov
mov
sub
jne
stos
sbbl
scas
mov
xor
xlat
pop
xor
fadds
jo
mull
nop
cli
push
add
mov
shrl
imul
mov
rorl
dec
lea
mov
test
mov
outsl
xchg
xorl
inc
das
aaa
repnz
mov
mov
mov
jmp
popa
test
ljmp
mov
adc
sbb
cmp
movsb
sbb
xchg
xchg
ja
rcrl
push
dec
and
push
lea
std
adc
in
mov
sub
cli
call
mov
add
and
lds
aad
shl
pop
loop
pop
and
add
enter
mov
insl
xchg
insb
leave
in
ret
add
outsl
cmp
daa
inc
adc
pop
inc
jo
jp
push
cld
and
movsl
insl
jnp
or
decl
cs
std
xor
push
je
jmp
or
sub
sbb
loop
pop
aas
sub
pop
loope
dec
mov
sarl
pop
xor
xchg
pop
cmp
std
mov
pop
push
mov
cmp
repz
cmp
pop
adc
add
push
leave
orb
xchg
pop
and
repnz
mov
loop
or
mov
jl
rorb
xor
aas
dec
imul
loope
add
sub
enter
hlt
pop
mov
or
enter
mov
inc
push
insb
push
test
jo
push
int
sub
ljmp
cltd
mov
mov
dec
movsl
jmp
sbb
std
sub
pop
dec
mov
jp
push
mov
dec
ret
sbb
out
push
or
stos
push
cmp
jle
xchg
jo
in
movsb
andl
cmp
xchg
pop
jnp
sub
or
xor
push
ja
sub
sbb
push
dec
pop
and
roll
nop
sahf
lahf
fisttpl
shlb
adc
cli
in
xchg
cmpsb
xor
add
mov
mov
or
outsb
mov
and
das
outsl
mov
jp
lret
or
lea
lret
pop
jno
aam
adc
xchg
mov
sub
out
mov
pop
dec
add
push
cmc
cmpb
popa
outsb
sbb
add
jne
and
mov
xchg
jae
popa
into
xlat
bt
push
adc
sbb
dec
fmull
pop
gs
jb
je
ficoms
scas
pop
shll
cmc
mov
loope
sub
add
push
jl
or
push
fucomip
sahf
mov
or
popa
lcall
addr16
popf
adc
or
les
inc
pop
in
shrl
aam
ds
push
idivl
cli
sub
in
movsl
mov
jmp
cmpsl
xor
dec
cli
int
cmc
ss
push
and
push
add
cwtl
pop
mov
xlat
sbb
dec
add
lea
push
cmpsl
mov
enter
lahf
cwtl
add
cmp
cmp
fmull
test
dec
mov
push
mov
popa
or
dec
mul
dec
callw
fstps
aaa
sahf
pushf
lcall
mov
push
xchg
sbb
movsl
sbb
aaa
inc
aas
les
jnp
dec
scas
dec
or
pop
xchg
pop
mov
pop
out
ja
psrld
test
in
test
test
jg
sti
sbb
jo
or
jo
sub
lret
mov
out
inc
jp
fdivrs
sbb
aaa
pop
sub
xchg
idivl
push
pop
jge
adc
stc
add
jmp
ret
pusha
cmpb
push
jnp
jae
in
daa
cmpsl
sbb
jnp
repz
adc
push
popf
insb
outsl
jecxz
xchg
or
shr
push
lods
ljmp
mov
sbb
in
hlt
aad
sbb
iret
sub
or
xchg
xlat
xchg
dec
and
mov
jnp
dec
cld
adc
stc
jl
jecxz
popf
loop
out
addr16
addb
cmp
lea
test
adc
mov
mov
adc
pop
cld
filds
inc
sub
or
decb
fisttpll
pop
aaa
mov
pushf
add
add
push
insl
xorl
add
xorb
in
mov
or
sahf
imul
data16
test
jnp
fldl
addl
cwtl
roll
in
jns
push
fadd
jp
sub
push
pop
pop
gs
shr
aaa
push
jno
nop
adc
mov
insl
out
int
call
pop
fwait
inc
jne
jo
fstpt
fisttps
gs
insl
arpl
push
inc
mov
test
sbb
mov
call
popf
inc
and
test
bound
dec
push
std
pop
icebp
ljmp
xor
pop
movsb
lods
xlat
pop
addr16
jb
int3
cmp
add
sbb
lods
lahf
adc
inc
fs
subl
adc
out
sbb
jl
jbe
imul
mov
pop
push
lods
sbb
dec
and
pop
daa
inc
inc
ret
fists
sbb
dec
inc
mov
jge
stc
cld
or
out
jns
jmp
mov
outsl
cs
add
inc
ljmp
imul
xor
push
cmp
in
sarb
shrl
adc
ss
lret
inc
shrb
jno
push
mov
mov
jecxz
or
call
shlb
push
mov
dec
dec
push
xlat
clc
adc
adc
sub
rcr
jmp
outsb
sti
add
inc
lahf
mov
std
jg
dec
jne
push
xor
in
enter
imul
push
repnz
in
fsubrs
xlat
jnp
xor
adc
sbb
mov
dec
fisttpl
cmp
push
push
imul
ret
mov
sbb
cld
pop
fwait
xlat
or
xor
push
test
fbstp
clc
movsl
xor
mov
rcr
lods
jo
xor
jne
lahf
je
mov
lock
sub
jmp
adc
cmp
adc
lds
mov
iret
inc
fcoml
in
mov
cmpsb
adc
or
stc
sbb
pop
mov
aad
out
jle
enter
mov
xacquire
mov
mov
xchg
mov
xchg
xor
fmuls
adc
call
or
stc
dec
mov
jp
mov
cmp
test
push
ja
cmc
dec
jno
push
push
pop
fs
aam
or
xchg
and
fs
add
and
jg
icebp
and
outsb
mov
and
jge
xchg
arpl
mov
fidivrl
testl
ds
repnz
clc
out
aad
movsb
mov
push
getsec
and
cmp
fwait
add
mov
mov
mov
xchg
rcrb
mov
sub
lret
stc
pop
sbb
adc
stos
push
outsb
stos
sub
movsb
jle
and
test
xor
xchg
iret
jecxz
or
mov
mov
push
fisttpl
xor
in
loopne
and
popf
lahf
or
aam
in
sarb
cmp
jae
jle
lret
sahf
sbbb
ja
pushf
movsl
inc
in
loopne
scas
push
insl
int3
lock
outsb
lds
jp
sbb
push
pusha
in
and
and
or
rol
add
out
adc
inc
imul
pop
jb
fnstcw
adc
fadd
xlat
mov
mov
sub
mov
iret
jbe
xchg
ja
jbe
shll
popa
lods
inc
jmp
hlt
xor
ret
add
inc
push
push
ds
arpl
inc
push
cmp
in
inc
xor
insl
gs
jle,pn
out
mov
lret
mov
jmp
pop
pop
cld
sar
sbb
movsb
outsl
push
out
icebp
sahf
dec
pop
out
stc
stc
imul
sub
adc
fdivp
inc
xchg
sub
test
inc
je
cs
std
ret
ret
lahf
jp
jo
xchg
movsl
fstl
cmp
and
arpl
and
insb
or
lcall
mov
jne
stos
lods
cli
add
mov
xor
insb
pop
cmp
sbb
jno
out
aad
jecxz
fimuls
jo
and
out
pop
sub
inc
fdivrl
into
xor
add
and
aaa
lods
cs
xchg
push
inc
adc
das
es
lahf
cmp
xchg
and
dec
repz
push
idivb
roll
mov
dec
or
push
fucomp
hlt
aaa
adc
sbb
dec
jl
cmp
xor
call
and
push
mov
pop
iret
add
push
pop
push
shr
fmull
imul
inc
lahf
pop
hlt
repz
jae
popf
jge
jo
jle
bound
or
test
cwtl
pushl
or
ret
cli
mov
int3
fiadds
mov
lret
lock
push
aam
pop
fistps
sub
mov
or
mov
testl
xor
ja
adc
pusha
push
cmp
adc
test
mov
icebp
dec
cwtl
cwtl
or
pop
mov
dec
mov
int
jns
imul
lcall
out
imul
dec
cmpsb
aaa
jmp
sub
das
jns
in
movsb
mov
lods
push
lahf
pop
je
aad
insl
out
xchg
adc
jmp
cli
sub
jb
aaa
pop
mov
mov
aaa
cmp
enter
adc
adc
lea
push
mov
pop
xchg
adc
sbb
inc
lahf
pop
callw
popf
push
add
add
cli
nop
mov
mov
cmp
and
mov
cs
stos
nop
inc
mov
push
ja
lods
sbb
ror
into
add
mov
rol
cmp
cmp
inc
xorb
adc
adc
shll
push
lret
add
ja
insb
lods
loopne
inc
cmp
and
ss
mov
cmp
pop
andl
xor
pop
mov
jmp
pop
pop
out
jo
fiaddl
mov
jns
test
ss
pop
mov
out
insl
mov
cmp
pop
xchg
mov
mov
clc
push
or
incl
les
cmp
pop
sbb
sub
cwtl
mov
incl
scas
mov
dec
xchg
in
push
and
xor
add
cmpsb
inc
xor
lret
lds
sbb
roll
push
shlb
ja
lods
xchg
call
inc
mov
dec
loope
xchg
mov
mov
xor
sti
ja
mov
lahf
mov
scas
roll
leave
lds
ljmp
rclb
add
cmp
jnp
inc
pop
inc
push
repnz
jg
dec
aad
stos
imul
mov
bt
subb
leave
sbb
stos
push
in
cli
push
dec
popa
jge
sbb
shl
or
lcall
icebp
inc
out
sarl
push
push
mov
mov
xchg
sbb
ret
out
xor
es
jle
sbb
mov
inc
push
or
and
imul
arpl
inc
xor
mov
push
sbb
push
mov
aas
rcr
aas
adcb
cmp
mov
xlat
sbb
cmp
movsl
lret
pop
fisttpll
gs
js
jge
inc
cwtl
lock
push
lds
jl
jae
or
dec
and
lret
cwtl
jmp
jecxz
std
or
cmpsb
or
hlt
cld
enter
lods
sub
add
cli
icebp
lret
icebp
add
outsb
mov
sub
lahf
in
pop
out
pop
ja
lcall
scas
jl
test
rcll
fucom
sbb
lea
xchg
xchg
mov
stos
sbb
mov
jecxz
pop
imul
stos
jb
mov
xlat
ss
fst
pop
shll
jnp
in
mov
ja
cld
shlb
mov
xchg
test
out
frstor
stos
imul
dec
mov
std
inc
cmp
aaa
mov
jg
lret
test
xor
in
mov
jae
adc
gs
mov
mov
sbb
insl
fidivs
cltd
cmp
mov
xchg
add
jg
lea
inc
xor
inc
fstps
pop
add
push
stos
cmp
or
lock
xor
adc
jmp
jmp
vpslld
jg
outsb
lea
dec
adc
mov
or
jb
gs
prefetch
test
sbb
mov
xchg
sbb
add
cmp
ret
shlb
repz
pop
dec
fistps
add
xor
push
das
and
adcl
int3
push
out
fwait
lahf
getsec
shll
sub
out
and
mov
pop
push
gs
mov
adc
cmc
outsl
push
cmp
pop
sbb
xor
loopne
repz
xor
jp
sub
cmpsb
xor
imul
adc
test
lret
fucomip
and
and
lcall
and
rcll
sub
cmpsb
jno
inc
or
cmc
shlb
int
lods
mov
xchg
and
movsl
in
fsts
ret
repnz
add
stos
sahf
rol
imul
add
inc
jb
sbb
pop
std
imul
mov
clc
mov
push
mov
mov
pop
ret
mov
lds
pop
sbb
push
xchg
scas
popa
add
adc
push
lcall
dec
int3
ds
pop
mov
lahf
mov
mov
and
lea
mov
popa
arpl
popf
dec
mov
ds
jne
in
rorb
xchg
insb
fdivrl
cmpsb
repz
dec
or
repz
jno
imul
fisubl
sbb
xchg
arpl
cmp
movsb
ret
mov
push
in
jne
loope
sbb
jbe
and
sti
lods
cltd
popf
xchg
xchg
sti
paddusb
push
popa
dec
adc
add
xchg
insb
xchg
je
inc
inc
andl
in
insl
jns
cmp
sbb
mov
push
popf
jno
movsb
jg
push
sub
jno
cmp
sbb
inc
shrb
sub
and
mov
push
insb
int3
sarl
pop
int
xchg
jg
or
dec
prefetchw
out
daa
xchg
mov
xor
jge
inc
cmp
orl
out
testl
pop
in
int3
fidivl
xor
pop
cmpsb
jns
aaa
add
cmpsl
popa
push
leave
testl
les
in
sub
sti
and
into
ret
out
mov
movswl
add
push
mov
imul
mov
sub
fldcw
xlat
pop
mov
sbb
cmpb
test
mov
xchg
mov
call
mov
outsl
jmp
repnz
sbbl
scas
push
js
and
adc
das
ja
nop
mov
lods
mov
mov
cmc
push
sbb
push
ds
mov
inc
dec
cltd
add
pusha
mov
jbe
stos
cltd
mov
push
lcall
jne
rcll
fsubl
daa
cmp
aad
cmp
ss
dec
pushf
dec
or
mov
icebp
ds
xchg
inc
dec
mov
hlt
fmull
pop
cmpsb
ja
jo
popa
pusha
jbe
test
sbb
mov
mov
ret
ljmp
push
jno
cltd
push
loop
jns
xor
sbb
int
adc
jnp
push
xchg
rclb
out
in
pop
into
and
cmp
push
jle
flds
jl
test
mov
mov
cmp
fimull
mov
scas
leave
mov
or
pop
and
mov
iret
je
push
xlat
push
movsb
jp
fiadds
out
cld
mov
push
mov
and
cwtl
orb
adc
xchg
stos
or
into
or
subl
pop
in
mulb
xor
lods
addr16
cli
lcall
or
out
jae
stos
aam
inc
inc
ja,pn
ds
cld
mov
in
and
sbb
call
sub
or
stos
and
sub
xor
out
cltd
lock
xchg
mov
xor
xor
mov
mov
aam
xchg
xor
mov
jb
xchg
xchg
mov
dec
sahf
outsl
inc
fcomps
sub
add
stos
mov
sub
sbb
lock
push
nop
repz
mov
fcompl
mov
scas
es
rclb
jecxz
pop
ss
out
lea
call
push
push
aaa
jl
aaa
mov
pop
test
lods
lea
sbb
pop
aas
jg
sub
mov
mov
int
fcomps
sbb
adc
push
adc
sbb
hlt
or
gs
push
mov
xlat
lock
sbb
mov
scas
jnp
mov
push
les
mov
pop
push
fimull
je
int
lods
cs
sbb
arpl
mov
mov
mov
testl
int
or
aaa
ss
and
add
push
push
mov
dec
cld
mov
andb
das
cmp
out
mov
out
jno
and
xchg
inc
adc
mov
loop
gs
cmpsb
adcb
insl
xor
cmc
dec
sub
cmpsb
int3
frstor
lret
push
cmpsl
xchg
mov
icebp
ss
movsl
pushf
scas
dec
into
or
pop
xor
xor
popa
sbb
movsl
xchg
mov
aas
pop
pusha
or
and
mov
cmp
add
push
frstor
inc
push
out
mov
loopne
lahf
adc
mov
push
mov
adc
mov
pop
mov
push
push
adc
jns
dec
add
inc
xor
out
dec
pop
movsb
mov
enter
jmp
xchg
cmp
or
adc
cmp
repnz
in
mov
push
or
jo
test
inc
sub
adc
add
pushf
jns
cs
sbb
shr
nop
mov
pop
mov
stc
ror
es
xchg
sub
clc
lea
push
sub
xor
push
sbb
sbb
orl
xchg
lret
mov
mov
enter
aad
ret
cld
push
sbb
xlat
insb
cltd
call
jae
pop
movsb
push
inc
pop
push
mov
pusha
fadds
int3
test
mov
movsl
shlb
stc
ret
std
imul
mov
iret
push
movsl
mov
sub
dec
lods
mov
jo
cmpsl
or
sbb
maxps
call
fcoms
bnd
data16
cmc
movlps
shr
sub
aas
shlb
lret
xchg
mov
and
mov
int
inc
cmp
cmp
cmp
xor
inc
push
cmp
sahf
inc
xor
cs
sbbb
xchg
adc
pop
adc
inc
cmp
rol
in
push
dec
sub
push
xor
cmp
dec
cs
popa
push
pop
leave
xor
sbb
mov
jl
or
xor
inc
sbb
add
dec
xorl
mov
out
push
xchg
or
and
pusha
jecxz
icebp
pushf
push
incl
mov
xor
and
je
mov
leave
ret
sahf
jbe
in
ret
push
mov
ds
sub
and
push
jns
dec
pop
jmp
fisttps
add
lahf
mov
cmp
mov
pop
xor
xchg
pop
xchg
std
mov
lcall
jo
lret
das
mov
fdivs
adc
add
leave
loopne
and
scas
jl
dec
xchg
mov
movsl
push
in
jg
mov
pushf
jmp
mov
add
mov
scas
clc
ja
push
xorl
out
arpl
icebp
nop
es
pop
pushf
xchg
mov
int3
xchg
sub
push
mov
fisttpll
mov
add
shll
adc
fwait
and
not
push
pop
loope
loopne
cmpsl
pop
adc
or
dec
addl
mov
add
subl
test
je
jl
pop
fiaddl
push
gs
pusha
ss
imulb
sbb
jnp
jle
pop
leave
mov
ds
sbb
or
adc
ja
sbb
loop
pop
arpl
cmp
enter
dec
adc
push
sbbl
pusha
xchg
pop
insl
xchg
jns
repnz
in
push
push
mov
pop
popf
mov
and
call
mov
call
iret
mov
jo
jecxz
in
nop
ret
jbe
ss
mov
pop
in
pop
sbb
cmp
lock
pop
jmp
add
outsl
and
test
stos
daa
adc
and
dec
int3
arpl
stc
dec
test
mov
int
pop
push
movsl
int3
jmp
testl
add
aad
mov
mov
pop
enter
jl
lret
mov
aad
xor
sub
add
jae
enter
dec
divl
movsb
jae
pop
jnp
add
jae
add
std
nop
lock
push
divb
push
sub
call
leave
jl
cld
adc
insl
leave
cwtl
cmpsb
movb
cld
imul
aad
das
pop
mov
out
imul
mov
inc
jbe
pop
jb
int
mov
mov
stc
movsl
dec
pop
push
adc
cmpsb
dec
sub
push
inc
and
pop
dec
insb
les
dec
ficompl
sahf
jle
inc
sarl
cmc
inc
jnp
lret
add
mov
and
xchg
push
xchg
out
movsl
popf
push
jb
lods
cs
aas
mov
or
test
sub
adc
ficompl
in
mov
dec
and
dec
insl
sbb
jno
iret
mov
negl
cmpsb
dec
test
fcmovbe
jmp
popf
jo
mov
jne
addr16
arpl
shl
mov
outsl
sbbb
nop
shl
xchg
xchg
inc
ds
adc
inc
pop
add
movsb
push
pop
pop
repnz
das
inc
movsb
jge
stos
xchg
dec
ja
ret
nop
lds
cmpsl
pushf
nopl
test
cmp
loop
in
pop
insl
bound
iret
test
add
loop
mov
bound
inc
insl
mov
jnp
jno
imul
rorb
loopne
mov
outsl
sahf
or
add
lods
dec
jno
jge
add
add
sahf
mov
or
jo
push
jae
cld
adc
leave
cmp
jmp
xchg
mov
adc
mov
pop
pushf
add
push
mov
notb
aad
sbb
es
mov
sub
out
ljmp
and
cmp
or
ja
imul
mov
cmpsl
or
cs
or
mov
gs
into
xor
pop
push
sbb
cwtl
pop
dec
jb
lods
or
fadd
ja
test
mov
or
cmp
adc
lret
rcrb
mov
inc
ljmp
mov
mov
stos
rcll
arpl
mov
mov
or
fsubs
icebp
pop
nop
cmpsb
call
gs
out
jb
pop
or
mov
or
data16
pop
mov
jne
mov
xor
push
adc
push
cmpsb
dec
dec
or
xorb
andl
pop
mov
and
rcll
sar
inc
repz
xor
cli
jnp
testb
fiaddl
inc
fidivl
arpl
mov
imul
push
test
adc
xor
xchg
scas
cltd
mov
stos
movsb
push
fisttpll
adc
nop
and
loope
lock
sarb
scas
mov
mov
test
adcl
popa
jp
loop
cmp
loop
xchg
xchg
je
push
icebp
pop
fldenv
pop
adc
and
mov
mov
lock
imul
adc
test
sbb
movsb
inc
push
push
cmc
in
sub
adc
dec
fsubp
addr16
test
cmp
mov
cli
jbe
mov
xor
push
or
inc
jae
lock
inc
aad
jmp
iret
jo
mov
and
add
js
push
jg
call
or
pop
repnz
push
sub
fwait
loop
jno
pop
jmp
xor
js
jns
je
sub
sbb
push
mov
and
mov
inc
lcall
inc
sbb
push
aad
cmpsl
clc
popf
push
fildll
aam
sub
clc
aam
mov
push
out
movlps
or
sbb
xchg
cmpsl
das
dec
lcall
jno
cmp
or
inc
xchg
leave
add
in
cmc
mov
push
inc
fsubrl
bound
ljmp
out
mov
pop
ss
in
xor
ret
adc
xchg
ret
inc
cmp
dec
sub
add
adc
popa
leave
outsl
adcb
cmp
jns
lods
repz
cmp
aad
sbb
or
xor
mov
mov
cmp
mov
mov
loopne
jbe
dec
add
and
lret
fldenv
cmp
sahf
loopne
mov
fcmovnb
int
dec
cli
scas
xor
std
cltd
inc
lods
add
movsb
jg
mov
mov
lds
inc
ret
popl
cltd
cmp
cwtl
outsl
pop
xchg
mov
sbb
inc
pop
aam
xor
adc
fidivrl
cld
push
dec
fimuls
scas
lcall
scas
fnstsw
and
pushf
leave
pop
jp
rorl
test
mov
jecxz
sbb
mov
sub
xchg
mov
fldcw
ss
lods
sbb
movsb
mov
add
xor
imul
aaa
xor
std
push
or
xchg
hlt
jb
rcll
pop
or
jecxz
imul
dec
lcall
inc
fimuls
movsb
add
cltd
mov
inc
sbb
mov
xor
pop
adc
dec
pminub
dec
pusha
and
shll
mov
pop
push
and
popa
xlat
mov
jp
popa
imulb
add
and
inc
mov
xchg
hlt
inc
and
inc
mov
mov
pop
lods
dec
test
or
out
test
mov
lea
push
sbb
or
in
loope
sub
xor
xor
mov
ss
cmpsl
dec
pop
xchg
xlat
ret
sub
jb
mov
sub
pop
rcrl
dec
les
jl
dec
mov
push
loope
sbb
enter
mov
push
mov
scas
add
iret
cltd
lcall
enter
jne
mov
adc
sbb
repz
jb
dec
jg
sub
mov
or
inc
insb
pop
sbb
mov
stos
enter
outsl
int3
xchg
imull
inc
add
dec
fstpl
adc
ljmp
adc
add
lret
mov
ja
repz
faddl
in
cmp
pop
mov
in
mov
insb
call
lret
lcall
pusha
out
sbb
lock
pop
lahf
out
dec
jne
mov
scas
jge
notb
jnp
lcall
push
mov
stos
movsb
or
push
push
in
push
call
sub
dec
lea
mov
movsb
dec
jg
ret
add
scas
imul
add
inc
mov
lods
les
int3
pushf
ja
xchg
adc
testb
mov
es
lods
dec
xor
shrl
mov
pop
or
xor
mov
jb
arpl
ret
or
test
fmull
dec
lcall
jge
xchg
inc
mov
daa
xor
mov
lods
fistpll
dec
mov
fcoml
out
aas
and
je
das
pop
int3
gs
imul
scas
mov
imul
lods
out
les
cmp
adc
in
enter
bound
pushf
push
imul
fnstsw
xor
push
or
inc
cmpsb
mov
xor
outsb
movsl
popf
mov
and
sub
xor
xor
repnz
mov
imul
sarl
pop
jmp
jp
and
push
testl
cmp
xor
jge
pop
add
fcoms
and
jbe
cmc
and
xchg
xor
and
pop
outsb
jns
das
fsubl
inc
push
fs
mov
xor
pop
xchg
adc
inc
in
nop
sub
jo
fs
push
adc
or
mov
sub
pop
pop
clc
cltd
cs
fs
mov
xor
fldl
jmp
cli
fcompl
inc
movsl
inc
inc
mov
test
loope
shlb
pop
loope
mov
sti
cmp
shrl
adc
ud0
mov
sbbb
push
cmp
popa
jnp
or
and
xchg
jp
mov
xor
jg
sbb
mov
push
and
sub
jle
aaa
pop
dec
push
clc
enter
mov
int3
adc
popa
je
ss
call
aas
fnsave
xor
pop
lcall
cmp
fwait
mov
out
inc
sarb
scas
cmc
or
and
fsubp
movsb
dec
xchg
or
in
es
out
mov
aas
addr16
dec
leave
ficompl
clc
inc
mov
push
cmpsb
push
mov
and
int
testl
sub
outsb
dec
adc
mov
repnz
jne
ret
arpl
push
jle
inc
cmp
and
lock
sbb
subl
std
das
leave
maskmovq
xor
lods
xor
cli
xchg
jbe
cld
jnp
sub
adc
push
dec
push
fs
leave
mov
loope
lods
orl
imul
cmp
sbb
jecxz
and
enterw
xchg
dec
dec
jae
ret
in
cmp
popa
sbbb
pusha
out
mov
push
cmp
leave
mov
xor
jae
inc
ficoml
add
std
andl
daa
cmc
mov
xlat
add
pop
test
sbb
lret
sbb
sbb
jg
xchg
in
cmpl
sbb
cmc
sub
outsl
cltd
push
jmp
lods
push
dec
out
xchg
jns
out
add
clc
mov
int
loopne
sbb
adc
mov
mov
or
mov
pop
inc
jge
std
adc
hlt
jp
cmpsl
inc
mov
rclb
int3
cmp
mov
mov
push
and
lret
push
fisubrl
fbld
stos
push
scas
mov
daa
mov
stos
lahf
and
cmp
mov
cwtl
lods
fidivs
pop
push
rcrb
mov
inc
cmpsb
incb
dec
push
shl
dec
push
mov
mov
push
in
jo
mov
fsts
aam
dec
xor
pop
pop
scas
cmp
int3
and
test
scas
cmp
stos
xor
aaa
shrb
push
filds
xchg
sub
fsubl
pop
xor
rolb
jecxz
pusha
adc
pop
lods
mov
push
pop
les
mov
stos
in
not
sub
sti
or
jns
sbb
loop
dec
pusha
ds
pop
inc
push
sub
pop
xchg
xor
or
jecxz
sbb
xchg
clc
mov
mov
sbb
imul
pusha
scas
mov
cmp
xchg
cmp
push
lret
mov
push
jb
outsl
cwtl
pop
int3
xchg
sub
outsb
sbb
jns
mov
dec
xor
arpl
hlt
outsl
jns
out
inc
pop
jmp
lds
xor
jae
mov
movsl
dec
int3
fldcw
fisttpl
outsl
or
dec
ficompl
and
jo
pop
mov
jmp
jmp
ljmp
dec
popa
mov
or
inc
in
hlt
cs
subl
pop
ficomps
pop
push
adc
inc
jmp
outsl
push
jae
scas
out
sub
add
or
xor
and
sub
xor
out
xchg
fnstsw
subl
dec
repnz
cmp
div
sets
add
inc
mov
pusha
xor
lret
js
fidivrl
mov
es
and
rcrl
test
add
sub
jae
je
xor
pop
mov
push
mov
sbb
aad
mov
icebp
dec
es
add
insl
jg
mov
mov
leave
xlat
in
add
add
loopne
and
jb
inc
cli
dec
mov
aaa
idiv
inc
cmp
and
or
shrb
stos
mov
gs
das
xlat
xchg
jae
jnp
loop
jge
xchg
es
movsb
or
push
dec
into
jbe
pusha
xlat
add
mov
popf
mov
cmp
xchg
xor
add
sbbb
fdivrp
sub
cltd
icebp
inc
iret
mov
inc
ret
sub
or
outsb
push
add
dec
lcall
cmpsl
mov
mov
arpl
push
test
shl
call
mov
in
mov
xor
out
jp
dec
inc
mov
gs
je
mov
add
test
jnp
or
cmp
iret
sub
pop
sub
pop
sbb
cwtl
push
and
push
shrb
cmp
inc
xlat
inc
xor
shrb
call
add
aad
das
popa
xor
aad
popl
cwtl
pop
daa
xchg
out
sub
add
clc
xchg
cmp
xchg
push
lret
cmpsb
int
insb
mov
push
jg
mov
mov
dec
mov
jno
in
fnstcw
sbb
into
jle
add
cmpsl
adc
add
leave
sarl
lahf
pop
dec
mov
inc
shll
bound
fnsave
aad
xchg
fcoms
movsl
add
pushf
jecxz
test
test
test
add
fimuls
mov
and
fs
sahf
and
or
ss
sub
inc
or
xchg
fistl
sbb
mov
xor
mov
lea
xlat
cmpb
pop
loopne
insb
mov
and
push
in
mov
out
mov
adc
xchg
add
xchg
inc
sub
sub
loope
adc
mov
fbstp
jno
xor
mov
ja
sbb
ror
iret
push
push
xchg
lret
sbb
add
xchg
out
stos
nop
add
or
and
loopne
cmp
leave
sub
jecxz
in
add
ds
call
test
shrb
mov
mov
push
cmp
dec
mov
mov
xchg
xor
dec
imul
fnstsw
setb
imul
adc
and
enter
push
mov
es
adc
mov
int3
ss
push
dec
mov
jbe
hlt
fsubrs
cmp
fcmove
sbb
lds
mov
dec
mov
mov
cmc
popl
jo
rorl
xor
mov
stc
lea
je
xchg
nop
and
and
int
push
aad
mov
movsb
mov
pop
mov
insl
mov
mov
sbb
ror
daa
jecxz
rorl
mov
in
push
cmpsl
mov
lock
cmp
pushf
lods
inc
inc
insb
mov
sti
push
ljmp
mov
or
mov
push
mov
mov
push
and
xlat
dec
dec
push
cwtl
fsubr
jl
pushf
movsb
mov
mov
stos
ss
test
shlb
jge
in
and
fsubrl
fwait
out
stos
test
inc
das
add
xor
sbb
lods
sbb
mov
add
jl
rorb
and
popf
xchg
lods
loope
popf
cmp
jne
fcmovne
pop
gs
adc
and
adc
test
lock
nop
cmp
or
out
cmpsb
jo
lahf
mov
push
andl
dec
mov
ljmp
or
xchg
ljmp
daa
xchg
pop
out
fisubrs
pop
out
fiadds
lods
xchg
scas
dec
jle
mov
call
adc
test
sahf
lock
push
lea
repz
fsts
fs
mov
aaa
cmc
sahf
sbb
cmp
xlat
cmp
rcrb
and
inc
imul
or
shlb
leave
test
jp
sbb
xchg
mov
dec
inc
aas
jae
clc
jae
xor
dec
inc
hlt
adc
push
jg
sbb
dec
inc
test
fisubrs
jnp
inc
scas
push
cmc
pop
imul
cmp
or
incb
mov
lahf
sbb
sbb
mov
xchg
mov
or
xlat
mov
out
adc
out
lods
or
jp
cmc
in
imul
mov
add
andb
mov
leave
jmp
outsb
rcrl
dec
inc
cmp
or
sarl
dec
popa
mov
hlt
cmp
dec
pop
or
lret
gs
dec
aad
mov
mov
xchg
jge
arpl
cli
stc
stos
enter
das
or
outsb
push
adc
nop
shlb
lcall
add
bound
mov
dec
sub
leave
and
les
inc
jb
cmp
push
mov
push
xor
call
xor
mov
insl
movsb
cli
test
pop
mov
pop
mov
divb
stos
sub
xchg
aam
push
pop
add
sbb
cmp
movsl
jmp
push
shlb
xchg
mov
push
out
xor
dec
stc
xor
mov
pop
jne
mov
or
add
mov
xchg
inc
pusha
sub
push
mov
push
xchg
or
sub
jbe
ss
jle
mov
sub
das
jge
or
xor
inc
cmpb
lahf
jle
cs
ja
sbb
sahf
sub
bound
push
js
sub
push
test
mov
sub
int
pop
jbe
mov
xchg
sub
cld
ficomps
cltd
mov
data16
jecxz
cltd
insl
shlb
push
pop
jno
cltd
out
lds
leave
cmp
dec
dec
in
cltd
cmp
sbb
mov
adc
repz
sub
inc
lahf
scas
dec
pop
cmp
sub
in
jecxz
test
shll
jge
xchg
aas
subl
adc
hlt
push
sub
mov
clc
adc
out
fs
loop
out
sub
adcb
movsl
xchg
mov
enter
or
enter
sahf
jle
fxch
sub
add
test
sbb
movl
adc
pushf
xor
push
or
mov
sahf
mov
push
cmp
nop
scas
js
jmp
sahf
daa
loopne
outsb
insl
cmp
in
jo
mov
ret
xchg
jle
dec
dec
out
movsb
sub
xor
cmpsl
or
or
jle
bnd
jne
add
lods
outsb
cmp
shrl
or
adc
stc
mov
outsl
insl
mov
or
xchg
sub
es
sbb
ret
in
ret
iretw
push
xchg
and
std
cwtl
sbbl
or
push
divl
cs
stos
sahf
repz
pop
es
dec
sti
sbb
push
les
jl
adcl
divb
push
ret
xor
pop
pusha
pop
mov
sbb
adc
cmp
int
lds
jg
adc
and
inc
or
cmp
mov
jne
fmull
xchg
les
loop
les
scas
sub
pop
sbb
mov
outsb
ret
pop
dec
mov
lcall
push
test
xlat
lcall
inc
mov
mov
jmp
sarl
in
mov
or
sahf
pop
nop
pop
push
arpl
pop
ret
jmp
jle
test
ljmp
jg
cld
push
push
push
nop
push
add
pop
adc
or
sbb
mov
hlt
jbe
inc
loope
jmp
jo
fisttpll
sti
xchg
loop
mov
sbb
lret
aas
lret
add
movsl
push
hlt
cmpsb
inc
into
sbb
stos
pusha
movb
fsubrs
inc
xchg
outsl
into
test
cmp
clc
jle
mov
jmp
out
xorl
push
fstpt
mov
iret
lret
popf
xchg
cmc
iret
loopne
xchg
psllq
pushf
cmp
mov
sbb
in
xchg
cmp
xor
fcoms
in
and
cvtps2pd
faddl
ret
in
insb
adc
fildl
stc
push
mov
hlt
fmuls
shr
scas
inc
mov
sbb
outsb
sub
scas
fisttpll
ret
or
rclb
insb
xor
shlb
mov
movzwl
mov
jl
into
std
lret
xor
sub
adc
jae
outsb
addb
push
clc
sti
fiadds
xchg
je
rcll
pop
fwait
pop
xchg
andb
xchg
mov
inc
into
push
lds
lahf
inc
out
ja
test
dec
ja
lret
rcrb
xor
int
fldcw
fisubl
inc
pushl
or
push
daa
pop
jl
or
icebp
mov
sbb
ja
inc
jle
pop
or
enter
and
jb
xor
and
dec
push
aam
vcvtss2si
repnz
ret
jmp
mov
shlb
sub
or
btr
test
lret
ds
cwtl
inc
ja
sbb
aas
sarl
xchg
mov
repnz
jl
dec
pop
in
mov
dec
add
std
pop
ret
jno
xor
xor
aad
scas
jecxz
sub
dec
mov
pop
mov
fnstcw
jnp
aam
xchg
rcl
xor
sbb
sub
sbb
sbb
sub
out
ljmp
mov
push
mov
roll
mov
and
inc
enter
mov
xor
xchg
pop
fdiv
jl
cmpl
das
addr16
push
divl
add
push
or
cmpsl
sbbl
imul
in
xlat
or
xor
repz
mov
cmp
jbe
pushf
mov
xor
add
inc
push
ss
xchg
jmp
in
into
or
fmuls
scas
mov
mov
inc
cmp
jnp
jne
jae
dec
push
pop
xchg
cs
pusha
push
in
add
mov
mov
xor
push
rcrl
fs
xchg
mov
mov
ret
js
add
and
rcrl
adc
call
pop
daa
rcll
inc
inc
leave
cmp
stos
jo
or
jo,pn
mov
inc
jno
jl
out
clc
jp
bound
stos
pop
jo
xor
hlt
jp
adc
and
xchg
adc
dec
push
xchg
or
movsl
mov
test
shlb
lret
test
je
inc
mov
mov
pop
or
xor
lods
ss
push
loopne
iret
out
lock
ja
pop
rcl
das
add
xor
pop
or
sbb
xchg
pushw
test
sbb
xchg
sbb
mov
adcb
setb
pop
inc
cmpsl
mov
hlt
sbb
mov
pop
cmp
faddl
flds
pop
js
rol
ja
enter
outsl
lods
xor
fstpl
and
pop
fmul
pop
jg
insl
cld
jle
and
jb
loope
repz
pop
inc
cmp
outsb
icebp
mov
lahf
sub
cmp
loop
aam
sub
icebp
lods
mov
sbb
pop
imul
inc
inc
adc
stos
mov
test
mov
cli
jne
stc
xorl
xor
lods
add
ljmp
inc
lods
xchg
fldl
pop
add
pop
loope
addr16
push
into
push
int3
mov
sbb
das
and
add
andb
sbb
xor
lds
ljmp
sub
ds
push
cs
adc
dec
fdivrp
stos
cmp
pop
or
mov
sub
push
adcb
rcr
lret
enter
inc
xor
pop
lcall
dec
xchg
outsl
cwtl
aaa
cld
and
jp
dec
cmp
dec
lds
sub
add
loope
stos
inc
push
jae
cmpsl
dec
ss
mov
enter
inc
or
loope
mov
repz
cmp
or
jnp
lock
lret
sti
mov
adc
jmp
pop
scas
rolb
adcl
enter
push
enter
mov
add
jne
movsb
clc
fwait
lcall
aaa
pop
pop
pop
sbb
pop
pop
and
jl
arpl
adc
pop
inc
and
test
dec
cli
fisubl
dec
popa
push
mov
lcall
mov
adc
inc
dec
repnz
stc
scas
in
mov
cmp
xchg
hlt
lret
test
popa
clc
cs
aaa
jecxz
xor
ror
sub
and
insl
sbb
fwait
mov
pop
push
cmpsb
lods
push
faddl
mov
push
in
test
inc
mov
lcall
bound
cmpl
and
jno
add
adc
std
clc
ja
dec
mov
cmp
xor
data16
lcall
pop
mov
ret
and
loope
mov
outsl
popf
inc
jne
add
out
nop
cs
sbb
push
cmpsl
idivb
stos
bound
fimuls
imul
dec
cli
dec
or
aaa
sbb
daa
xor
or
jno
pop
fdivp
repnz
mov
inc
sub
add
push
sahf
and
add
sbb
js
push
pop
pop
cmp
movsl
jns
dec
out
xchg
rclb
mov
xor
mov
imul
pop
mov
push
mov
adc
sbb
xchg
adc
dec
fisubrl
push
lds
std
push
pop
imul
pushf
jo
jp
gs
and
add
jp
pop
repz
fdivs
mov
xchg
loopne
mov
mov
popf
jmp
mov
mov
push
push
pop
ss
jl
cmpsb
sub
push
roll
in
lea
mov
xchg
and
cs
std
fstpl
dec
xchg
repz
cmp
insl
into
addr16
cmp
cld
or
xchg
ja
push
shll
enter
mov
sbb
push
out
inc
xchg
enter
lret
add
into
jge
pusha
add
je
adc
lods
adc
insl
jbe
xchg
insl
fwait
lcall
xchg
out
add
or
add
getsec
lods
and
push
jne
mov
lods
adcl
and
int3
imul
mov
lds
fstps
stos
mov
mov
fninit
sub
subb
xchg
subb
push
mov
mov
push
mov
jae
add
pop
sbb
push
push
out
iret
sbb
push
push
sub
or
iret
cmp
loop
in
sub
xor
adc
rorl
mov
xor
mov
divb
cmc
pop
sub
jle
add
stos
push
mov
sarb
and
popf
in
pop
ret
aad
jge
aam
shlb
pop
mov
test
out
dec
inc
aaa
ss
adc
adc
ret
mov
scas
pop
push
jo
fs
adc
fistpl
cmp
fwait
cmp
ror
add
and
std
xor
test
incl
or
fbld
add
xchg
sbb
imul
push
sub
lcall
dec
sub
sbb
popf
repnz
and
push
rolb
mov
faddl
in
inc
mov
das
rcl
inc
jge
lds
xchg
pop
inc
pushf
cmpl
in
fsubs
adc
dec
jae
movsl
fdivl
push
leave
jns
test
lds
das
imul
and
sub
xor
rcl
mov
xlat
adc
fcomps
sub
mov
xchg
sarl
les
jnp
and
ds
push
sub
inc
jle
popl
mov
jns
or
mov
xor
pop
push
or
pusha
sahf
neg
stos
out
xor
push
mov
mov
sti
js
popa
sbb
arpl
ljmp
mov
repz
dec
ret
pop
fwait
xor
push
xchg
push
adc
dec
cmp
das
push
js
jnp
sub
jg
push
jne
call
cmc
mov
in
mov
jl
mov
mov
add
inc
or
test
repz
aad
sub
dec
fwait
mov
idivl
lods
outsl
insl
mov
jmp
pop
stos
pop
jae
int3
or
fstp
jmp
into
stc
aam
call
xchg
sub
and
lods
mov
xchg
rcrb
cmp
mov
in
aaa
repz
call
dec
jge
sbb
ret
sbb
stc
push
push
rcrl
add
mov
jmp
jno
pop
int
inc
lret
insb
jno
es
cmp
call
popa
bound
cltd
insl
pop
jle
leave
inc
arpl
cmp
pusha
int
xlat
adc
inc
mov
ss
bound
jmp
jbe
cltd
push
inc
xchg
mov
les
push
repz
dec
jns
mov
sahf
push
fcoml
lahf
pop
lea
mov
mov
out
push
jne
gs
add
mov
mov
cmp
dec
add
fbstp
mov
out
mov
aas
add
loope
ret
pushl
jge
xchg
iret
mov
aad
cmpsl
ficoml
xchg
out
jo
push
jne
jo
jmp
add
push
and
pop
dec
je
adc
dec
sti
sbb
inc
adcb
ljmp
mov
std
inc
scas
lcall
mov
lret
sbb
std
test
push
psadbw
sub
je
lret
outsl
sbb
pop
push
lret
int3
xor
cmpl
movb
ds
cmc
cli
xor
cmp
std
insb
and
in
ret
je
jecxz
int3
out
sbb
cmpsb
scas
sub
or
jnp
loopne
jns
stc
fistpll
mov
ljmp
mov
inc
sub
push
jnp
mov
cwtl
cmc
adc
subl
or
aad
xor
jecxz
insb
aas
jl
sub
mov
dec
push
arpl
push
jp
xor
add
out
mov
jmp
rolb
xor
xchg
imul
mov
xor
inc
or
into
lds
mov
sbb
sub
loop
std
lds
add
aaa
inc
out
mov
pop
xor
adc
push
mov
cmp
or
sbb
jno
jb
mov
push
or
mov
sbb
aad
in
gs
bound
fcomi
out
pop
and
adc
fwait
pop
js
ja
movl
mov
or
sub
pop
inc
ljmp
sub
xor
and
std
or
mov
dec
mov
arpl
addr16
xchg
inc
fndisi(8087
shlb
mul
or
and
jne
stos
mov
adc
fcoml
push
lds
loopne
xor
push
and
cmp
aad
ds
cwtl
aas
repnz
pop
insl
icebp
frstor
sbb
mov
push
or
es
and
jns
mov
aad
inc
sbb
cwtl
push
ret
aaa
outsl
ss
inc
or
lods
ds
cmc
pop
call
lds
lret
inc
loope
inc
enter
das
cld
sbb
add
pop
test
inc
test
pop
or
jbe
xchg
pop
fisubl
and
in
jbe
push
popf
test
pop
jnp
cltd
sbb
jne
es
pop
ret
add
mov
shr
xlat
mov
adc
xchg
jmp
mov
nop
shl
fwait
pop
mov
pusha
xor
adcl
jbe
in
sbb
loop
das
xchg
xchg
jns
popf
cwtl
push
mov
roll
mov
fwait
cmp
or
stos
or
add
sub
xlat
add
daa
lea
jge
lods
sub
inc
notb
add
stos
mov
nop
stc
repnz
test
pop
push
imul
test
nop
and
push
mov
test
mov
movsl
sbb
mov
dec
mov
fsubl
xor
inc
mov
cld
sahf
stos
adc
fisubl
mov
add
orb
test
jns
push
xchg
leave
sbb
das
out
cmp
sub
std
movb
xchg
test
cmp
sbb
mov
fdiv
cmp
adc
add
stc
jl
push
std
stc
mov
mov
pop
in
notrack
call
dec
repnz
lahf
repz
mov
rcrl
fwait
push
mov
inc
sbb
lea
and
jge
xchg
das
xor
dec
xchg
sub
arpl
xchg
inc
sub
stc
lock
dec
add
daa
xor
inc
mov
and
das
aaa
clc
test
push
fiadds
dec
cltd
arpl
xchg
mov
jg
lret
jo
call
pop
push
ss
fldl
shll
int
add
mov
add
insl
pusha
jb
lret
pop
gs
dec
insb
out
fisubl
lret
int
mov
test
or
mov
shlb
mov
or
xchg
into
daa
jb
jl
leave
sub
sub
or
sub
aam
xor
mov
push
inc
sbb
inc
xor
outsl
out
test
and
mov
into
jno
inc
sub
and
cmpsb
push
inc
or
lods
hlt
outsb
inc
stc
js
lret
sbb
cmc
lock
jmp
lods
mov
jo
mov
add
into
sub
sbb
stos
stos
adcl
push
hlt
add
lock
push
pop
and
cli
repz
orl
cmp
cmp
ja
cmc
in
jp
sahf
bound
inc
sub
mov
push
pop
jmp
xor
sub
jge
aam
bnd
fldl
das
or
enter
add
test
mov
mov
mov
ret
stc
or
xor
dec
push
ds
in
leave
add
jo
mulb
punpckldq
insb
jbe
cs
jp
xor
xor
mov
stos
int
out
ret
pop
fisubs
mov
in
lret
aaa
cmp
mov
fwait
movsb
fs
flds
mov
in
mov
pop
sarl
sbb
lds
mov
push
and
repnz
out
js
dec
xor
cmp
jns
jmp
pushf
jge
cmp
fcoms
xchg
and
mov
cltd
xchg
push
and
mov
cmp
outsl
or
mov
aas
aaa
push
sbb
ss
scas
pop
js
mov
push
jo
inc
insb
jle
push
sahf
pusha
mov
mov
cmpsl
aaa
test
push
or
adc
sub
clc
pop
inc
dec
mulb
loope
push
jnp
incb
mov
adcl
and
test
je
mov
mov
mov
aam
clc
pop
add
ds
int3
lea
cmp
cmp
sahf
daa
cld
sbb
in
cltd
adc
lret
mov
ss
or
stos
dec
int3
orb
xchg
test
xchg
mov
bound
inc
repz
orl
repz
sbb
ljmp
xor
iret
cmp
pop
pop
and
push
push
adcl
test
addb
pop
data16
int3
adc
jp
push
mov
sbb
dec
pop
xchg
pop
jo
mov
aam
repnz
push
inc
inc
pop
add
jb
gs
adc
xor
out
cmc
imul
ja
mov
in
mov
dec
int
jae
mov
insb
cmpsb
mov
lock
cmpsl
adc
inc
cmpsb
pushf
cmc
test
push
mov
pop
in
rcrl
es
mov
pop
repnz
cmp
jne
dec
out
scas
test
subb
data16
mov
lea
in
add
rcrl
notb
insb
iret
fcompl
test
repz
push
adc
pop
jb
imul
adc
sbb
pushf
cmp
scas
sahf
lcall
xor
repnz
and
sub
jne
cmp
mov
into
cmp
in
rcrb
xchg
xchg
or
in
in
xchg
repz
mov
leave
mov
scas
jb
xchg
add
push
rcll
shlb
in
or
push
lret
inc
dec
dec
cmp
jne
lret
jne
loop
je
arpl
jg
lret
pop
mov
or
fdiv
test
imul
clc
mov
push
aaa
bound
jge
cmc
mov
cli
mull
dec
ret
mov
adc
pop
mov
and
push
cmp
jge
js
dec
pop
inc
scas
es
add
dec
sbb
dec
or
and
add
test
test
pop
je
int3
andl
xorb
scas
imul
loopne
nop
push
sub
insl
lods
ja
xchg
pop
jl
es
cli
testl
pop
and
adc
pop
int3
movsl
adc
mov
faddl
xchg
mov
mov
leave
mov
push
ret
out
outsb
pop
sahf
push
fstl
clc
lahf
adc
leave
pop
es
repnz
pop
push
add
sbb
cmp
sbb
cmpsl
xor
cld
push
jle
dec
sbb
dec
ficomps
mov
shl
adc
mov
popf
dec
sbb
pop
sahf
loop
pop
or
push
xchg
fs
test
out
leave
sbb
sbb
cwtl
dec
dec
jae
adc
or
cmp
ror
jno
fisttpl
movb
cmpsb
or
in
out
jmp
repz
cmc
pop
lea
cmpsb
fidivrl
sbb
cmp
jg
outsb
lods
push
xor
adc
dec
pop
push
dec
add
outsb
inc
sub
adc
push
lea
ret
fstpt
adc
int
jle
orb
xchg
repnz
leave
mov
popa
mov
xor
cmpsb
cmc
inc
insl
sti
xchg
push
in
scas
mov
mov
pop
inc
jae
ss
xor
mov
cmp
sti
mov
add
fstps
les
shl
leave
and
ret
dec
mov
sbb
jecxz
push
cmp
and
adc
mov
mov
es
sub
cli
imul
test
inc
outsl
sub
cmpsb
icebp
jno
pop
ljmp
fs
fidivs
rclb
test
xchg
call
enter
ja
mov
jnp
inc
je
mov
pop
sub
pop
popf
mov
in
bound
sahf
daa
ja
mov
in
stos
mov
pop
sub
xor
xor
and
pop
fucomip
push
aad
add
jp
sub
subb
adc
adc
lcall
fsubrs
dec
sbb
shlb
xchg
data16
in
and
lock
cmp
pushf
sahf
outsb
outsl
imul
add
pushf
popa
in
int
fstpl
repnz
aad
jno
or
xor
add
std
gs
sub
shrb
jo
sahf
sbb
jno
xchg
insl
mov
add
outsl
sub
xor
or
idivl
or
jae
pop
incl
insl
or
jl
imul
shlb
punpckhwd
sub
mov
add
test
fs
jge
seta
and
dec
fcomi
lret
jle
lret
sbb
fstps
push
in
jno
iret
dec
or
jns
jnp
aad
and
in
shl
and
pop
pop
cmp
sub
clc
scas
loope
enter
out
xchg
sbb
gs
adc
int
aaa
xor
fsubr
pushf
inc
cmp
mov
or
push
or
das
ds
leave
fidivrs
bound
test
mov
and
mov
int3
and
mov
clc
or
into
lock
mov
and
jnp
push
test
add
imul
ret
jb
cmp
imul
imul
out
out
cmpsl
add
mov
jge
sub
popa
jns
sub
js
sbb
lea
sahf
cli
push
repnz
ret
jae
adc
adc
xchg
pop
push
sbb
shll
notl
mov
mov
cmp
jmp
fiaddl
rcrl
stos
jl
mov
cmp
cmp
add
mov
cs
stos
dec
sub
faddp
add
and
sti
lret
push
sub
arpl
leave
jle
ja
mov
cmp
mov
add
iret
sub
lret
push
in
repz
pop
adc
scas
fadd
daa
pop
in
fsub
sahf
iret
jg
scas
push
push
sarb
cmpsb
mov
or
xchg
lahf
std
lcall
jae
ret
xchg
dec
and
mov
ds
sub
mov
jnp
adc
push
add
cmc
ja
or
test
sbb
sbb
add
mov
mov
iret
jb
divl
aad
jo
mov
mov
leave
stos
inc
fidivl
or
cld
pop
movsb
cmp
outsb
outsb
clc
pop
in
outsb
int3
push
loop
sbb
mov
in
lahf
push
jo
fucom
dec
cmp
pop
test
enter
leave
bound
xchg
incl
cs
adcb
cmp
lds
shll
jg
fstp
xor
xor
sbb
fildl
dec
mov
dec
dec
push
mov
div
add
fwait
push
or
outsl
ret
into
mov
addr16
dec
xor
and
jb
jp
inc
push
push
clc
or
lds
sbb
lods
repz
pusha
in
mov
test
jl
cmpsl
fs
push
je
push
jae
lds
andl
ret
mov
insb
scas
add
in
je
sub
pop
je
fwait
cmc
incb
push
inc
mov
inc
adc
jmp
loopne
or
imul
jb
sbb
pop
popa
cmp
jmp
arpl
add
dec
mov
imul
popa
and
sbb
ss
jb
cmp
mov
mov
and
push
xlat
jge
dec
addl
cmp
addb
mov
arpl
jge
shrb
mov
lcall
daa
rorb
cld
cmp
pushf
shlb
xor
mov
sub
loop
push
add
enter
xor
xchg
or
pushf
hlt
jmp
popa
pop
xchg
and
sbb
outsl
subl
mov
mov
stos
sbb
xchg
push
push
cs
daa
shlb
scas
pop
push
sub
icebp
out
cmpsl
mov
jmp
lea
popf
cmp
push
flds
and
xchg
repz
pop
jge
mov
push
mov
shrb
sub
cmpsl
cli
sub
loop
sbb
mov
test
xchg
and
lea
stos
incb
andb
negb
sub
sbb
adc
jge
cwtl
insb
hlt
lds
mov
repnz
fcmovnbe
scas
pop
and
cmp
insb
jg
mov
xor
jb
ds
jmp
das
mov
mov
mov
sbb
bound
add
adc
std
xchg
mov
outsb
add
stos
call
ret
jl
imul
mov
and
lock
xor
loopne
or
aas
mov
in
push
jg
push
hlt
iret
push
add
sub
pop
fs
iret
xchg
stc
push
dec
mov
inc
sbb
mov
or
mov
inc
loop
sub
ret
add
xor
jp
xchg
mov
das
mov
pop
sub
xchg
sub
push
sbb
mov
and
adc
xchg
cmp
dec
pushl
pop
xchg
psllq
or
out
lods
adc
and
mov
lret
lahf
fcmovnb
pop
mov
jb
pop
jp
push
xchg
sub
inc
sub
aad
push
adc
aad
pop
add
mov
test
mov
xor
or
imul
aas
jnp,pt
inc
shr
jns
nop
testl
stc
mov
outsb
aas
lods
rclb
mov
mov
jle
pop
aad
jp
pop
cmpb
mov
test
cmp
xlat
ljmp
test
dec
pop
lahf
pop
movsl
ret
in
mov
hlt
clc
sub
sbb
adc
mov
cmpsl
cli
mov
inc
add
je
mov
clc
dec
push
pop
aas
pop
dec
test
fcompl
rcr
xchg
mov
inc
dec
mov
pop
std
cmp
or
lods
fs
inc
xchg
pop
faddl
bound
adc
xor
popl
xchg
lods
mov
dec
fwait
dec
jnp
pop
xlat
int
xchg
setae
shll
and
push
push
in
arpl
xchg
sbb
mov
xchg
or
jb
nop
pop
enter
ljmp
imul
dec
mov
cwtl
out
insb
xor
mov
dec
mov
cmpsl
cmp
ja
adc
xchg
fstl
movsl
divl
sbb
pusha
inc
je
mov
repnz
cwtl
cmp
xchg
or
mov
mov
push
movsl
dec
outsl
mov
pop
inc
cmpsl
and
cmpsb
stc
lea
add
jmp
pop
fdivrs
push
dec
mov
jl
cmp
cld
pop
sbb
mov
test
sub
popf
das
test
inc
and
sub
and
addr16
ror
je
push
mov
adc
inc
push
cld
jae
cmpl
sbb
mov
jge
xor
js
mov
fsub
dec
mov
test
fbld
push
mov
inc
js
mov
out
ret
cmc
ja
pop
out
lcall
lock
lcall
cwtl
mov
nop
push
insb
sub
xor
or
add
inc
dec
ljmp
idivl
shlb
and
hlt
adcb
popa
stos
and
mov
xor
cmpsl
xor
mov
lret
movsb
popa
xor
jns
dec
ja
shrb
ja
mov
das
or
jle
fs
lock
nop
dec
in
mov
clc
std
add
or
xor
cmp
sbb
pusha
cwtl
sbb
cmpl
mov
call
xor
sbb
ret
movsl
jae
pop
std
lcall
push
dec
and
adc
adc
jnp
sub
lea
sub
outsb
test
ja
dec
dec
notl
inc
mov
inc
cmpsb
jno
ja
mov
ljmp
xorb
and
clc
add
mov
repz
and
mov
out
loopne
xchg
movsb
push
cmp
aas
and
or
fs
push
jg
addr16
incl
mov
inc
sub
addr16
fmul
pop
loopne
loopne
xor
rcll
jge
add
sub
and
scas
pop
add
pushf
pop
push
repz
xchg
xor
mov
das
loopne
cmp
sbb
ljmp
outsb
movsb
jmp
mov
fs
or
cmpsl
pop
sbb
repnz
ss
or
and
or
scas
sub
mov
inc
xor
xor
mov
dec
xchg
xchg
mov
adc
and
cmp
das
fwait
cmp
fstpt
adc
sbb
and
mov
scas
jb
push
xor
push
xorps
insl
xchg
inc
cmp
xor
ret
mov
push
sbb
jae
jns
jns
pushaw
xlat
inc
inc
xor
imul
sbb
jge
sbb
jbe
test
sarl
mov
std
shll
aas
cmp
jmp
shll
inc
jnp
jne
xor
inc
pusha
clc
pop
adc
ret
ret
push
leave
rcrb
cmc
push
in
lock
lods
pusha
lret
hlt
xchg
ja
inc
in
mov
sbb
and
xchg
sub
loopne
es
dec
mov
lahf
push
add
iret
inc
xor
sub
cs
test
sub
xor
sbb
addb
mov
das
popa
loop
aam
mov
enter
in
push
push
push
xor
aaa
push
sbb
cmc
and
cli
aas
push
out
hlt
or
scas
push
sbb
cmp
inc
jp
test
or
lret
pop
outsb
cmpsb
jb
push
mov
mov
sbb
sub
xchg
and
fwait
movsb
fcmovu
shrb
dec
push
ficompl
mov
imul
rcrb
idivb
xlat
stos
cmp
ljmp
call
mov
mov
or
or
and
loop
out
lods
inc
pop
push
sbb
scas
icebp
dec
xlat
ret
pop
sbb
fbstp
inc
lret
xchg
cmp
cli
imul
repnz
pop
ja
dec
and
ss
in
jecxz
les
xor
jl
fisttps
in
cli
hlt
jno
fstpt
pusha
mov
add
faddl
sub
sub
add
jns
jbe
hlt
mov
xor
push
xor
gs
pop
insb
arpl
mov
pop
push
jle
xchg
shrl
jp
in
lock
mov
dec
nop
push
xchg
test
jl
aam
dec
mov
jle
sub
jg
addr16
je
ja
les
movsb
loopne
rol
inc
mov
int
repz
sbb
out
rol
enter
jns
pop
addl
xor
cltd
push
jecxz
popa
jl
outsl
in
insb
movsl
or
dec
scas
sbb
xchg
loop
aad
fidivrs
cmp
out
andl
push
push
cmpsl
xchg
cltd
fstp
mov
adc
sub
lcall
shrl
stos
mov
ja
lods
dec
jl
xchg
sub
out
jge
or
adc
sti
mov
dec
outsl
pop
ret
mov
dec
cmpsl
push
pop
jl
in
loope
inc
mov
rcr
cli
popa
mov
or
push
pop
stc
std
sub
aad
xor
xchg
adc
in
and
fidivrs
ds
je
rolb
mov
cmpsl
cmpsl
fistpll
sbb
int3
push
sbb
adc
or
stos
pop
push
daa
repz
cs
mulb
je
rorl
mov
dec
xchg
loop
adc
roll
dec
into
jae
leave
adc
pushf
lcall
pop
popa
fmuls
xor
cmpsb
aaa
arpl
pop
jl
jo
repz
cmp
movhps
sti
cmp
inc
xor
pop
jnp
orb
jge
stos
dec
push
inc
data16
jmp
pop
jl
rolb
xchg
mov
out
xchg
mov
loope
inc
cmp
sti
bound
dec
mov
inc
js
in
mov
ljmp
xchg
sbb
mov
dec
xchg
shrl
iret
in
popf
lea
add
fcompl
mov
cmp
cld
insb
rcrb
adc
daa
sub
test
jb
and
xchg
js
pushf
mov
dec
cmp
stc
cmpsl
dec
and
mov
sarl
js
inc
or
in
cmp
test
dec
adc
mov
mov
cmp
idivl
push
jmp
outsl
add
inc
push
in
jno
insl
shl
fmuls
repz
mov
jb
xor
sub
dec
sbb
imul
fldenv
add
mov
std
mov
or
ret
xor
popf
push
or
jns
jne
bound
clc
dec
dec
lcall
call
pop
sub
popa
sub
call
mov
push
jno
mov
and
mov
sub
jp
movsl
mov
cltd
inc
jae
jb
out
test
jle
xor
js
and
cwtl
sbb
mov
mov
mov
and
pushf
sarb
rclb
mov
inc
dec
mov
adc
add
cld
mov
je
lret
xor
in
cs
pop
sub
sahf
into
ret
outsb
fadd
cltd
push
lock
test
jno
mov
xor
inc
and
fwait
jbe
sub
lods
jl
aaa
in
pop
inc
inc
inc
int3
push
pushf
xorb
push
js
and
aaa
popf
test
xchg
inc
out
jo
mov
call
jmp
sub
xchg
popf
dec
std
cltd
test
add
cmp
cmpsl
iret
mov
enter
add
adcl
ja
xchg
cwtl
sub
in
mov
andb
sbb
out
faddl
add
xchg
pop
lock
jge
mov
or
loope
adc
inc
es
adc
sub
push
scas
xor
jne
outsl
inc
push
jns
in
dec
cwtl
mov
mov
add
stos
sti
roll
in
arpl
stc
push
push
mov
adc
mov
into
shl
mov
adc
ret
out
add
loop
pop
adc
sub
adc
adc
into
testb
push
fisttpll
mov
push
sub
cmp
and
xchg
xchg
jnp
inc
dec
add
out
aad
add
mov
loope
mov
lods
sbb
jbe
dec
stos
xchg
std
cmp
sarb
sub
and
sarl
cmp
in
nop
movaps
loopne
fucomi
int
jp
inc
ja
xor
cltd
dec
mov
enter
or
out
cld
jmp
inc
inc
sub
sarl
popl
and
lret
sbb
or
or
loope
add
mov
push
push
lahf
pop
imul
sub
sbb
xor
cs
and
dec
loop
jno
test
inc
dec
lea
push
push
sub
daa
pop
popf
cmovp
mov
cmp
aam
mov
xor
fwait
mov
dec
aam
jo
mov
imull
mov
jb
rolb
sub
mov
repnz
xor
aas
insb
xchg
outsl
mov
popa
aad
repz
sub
dec
mov
mov
add
push
in
lret
mov
push
dec
xchg
movsb
fstp
jmp
xorl
jmp
fs
movsb
xchg
pop
jmp
pop
test
je
lods
movb
mov
cld
jecxz
inc
sbb
icebp
jne
jp
stos
lahf
fbstp
cmp
lods
insb
jnp
xor
or
les
pop
mov
pop
cmpsb
test
mov
mov
xchg
fnstcw
in
sub
pop
lret
ret
out
negl
or
fstl
adc
push
popa
push
jmp
das
rclb
mov
jmpw
mov
dec
lea
test
pop
ljmp
xchg
orb
or
mov
int
aam
cmp
or
and
out
push
sti
negb
or
jno
adc
push
sbb
sbb
jne
into
iret
lods
jmp
fstps
and
fwait
jne
cmp
das
mov
mov
xor
ja
shll
cltd
cmovne
xor
mov
jle
push
popf
ljmp
cmpsl
sub
mov
add
push
popf
into
movsb
inc
rorb
push
or
mov
sub
jns
and
cltd
dec
mov
push
jb
cltd
addr16
add
stc
mov
push
and
mov
mov
add
dec
mov
add
lcall
in
jae
mov
jge
xchg
sub
add
aam
push
sub
xor
adc
leave
das
pop
sahf
sub
ds
cmp
jae
insb
dec
sub
shrb
popf
cmp
sbb
xchg
lock
aam
mov
xchg
sbb
lahf
pop
jge
cmpsb
test
jb
mov
cli
nop
inc
dec
cmpsl
rcrb
mov
mov
mov
aas
inc
push
repz
in
les
sub
jmp
mov
jmp
cli
pop
popf
inc
inc
jne
fistpl
cltd
inc
sub
divl
bound
mov
lds
lods
and
cmp
je
fisubrs
mov
into
testl
mull
call
ss
clc
mov
sub
gs
scas
xor
test
xor
mov
jne
inc
lods
std
push
lret
in
push
rcll
inc
sbb
sbb
xchg
repz
sub
or
xor
aam
xchg
and
loope
roll
outsl
decb
adc
push
cmp
lods
test
dec
in
mov
push
icebp
mov
and
lret
ficoml
xlat
insl
inc
or
pusha
jno
test
or
jge
pop
adc
xor
add
xor
stos
pop
arpl
push
jmp
or
into
xor
add
xchg
jno
loopne
inc
fistpll
pop
inc
mov
mov
sbbb
or
dec
popf
push
mov
sub
lock
fwait
js
nop
xchg
push
std
sbb
int
popa
mov
ret
push
inc
test
mov
push
insl
and
jmp
cmp
or
cs
pop
movsb
and
push
dec
add
jp
shrb
inc
imul
pusha
xchg
xor
xchg
rcl
sbb
aad
dec
sahf
inc
xchg
data16
mov
lahf
jmp
dec
je
ds
dec
fwait
adc
xor
popa
sbb
sti
jae
or
adc
cld
jno
mov
pop
popa
adc
std
lods
inc
andb
mov
fbstp
sub
push
jbe
push
dec
jno
xchg
sbb
jmp
sub
out
push
ret
fwait
mov
popa
scas
mov
out
fdivrl
les
repz
cs
dec
sbb
iret
sub
lcall
clc
lret
and
push
xchg
dec
push
mov
xchg
add
mov
repnz
sub
xlat
jmp
and
test
jo
sub
enter
jne
or
std
cmpsb
jg
aad
enter
pop
stos
cwtl
stos
cmp
insb
xor
add
enter
into
aam
sbb
sub
sbb
jno
mov
ret
into
es
inc
xchg
loop
out
or
mov
mov
fsubrl
outsb
push
loop
out
push
int
lods
fwait
push
fisttpll
adc
xor
lret
fldcw
cmova
add
imul
fs
push
mov
aaa
adc
inc
pop
pop
or
sahf
mov
and
push
lea
lods
inc
dec
movb
negb
jle
ret
aaa
jecxz
cli
add
mov
sub
or
lods
push
sub
test
mov
lea
push
ljmp
mov
movsl
andb
push
cmpsb
dec
adcb
xor
in
mov
inc
push
call
outsb
dec
cltd
jp
mov
jmp
adc
pop
adc
cmp
outsl
ret
push
mov
mov
scas
xor
imulb
adc
das
lock
and
bound
mov
adcl
js
daa
dec
lahf
pusha
aas
cmc
jb
adc
cwtl
inc
cwtl
add
and
adc
adc
xor
cs
xchg
in
or
add
sub
dec
sbb
mov
pop
push
or
loope
xlat
pop
mov
subl
sbb
je
in
and
add
ja
lds
mov
add
pushf
inc
je
dec
xor
fstpt
stc
cltd
shlb
inc
jmp
jnp
jns
icebp
add
test
mov
mov
xchg
mov
out
in
ja
icebp
addr16
pop
push
jae
jb
frstor
cwtl
jnp
shll
nop
hlt
in
scas
push
add
clc
into
gs
xchg
data16
out
jmp
movsl
mov
xchg
pop
dec
outsb
sub
fdivp
dec
in
aam
adc
add
insb
pop
mov
test
pop
daa
loope
arpl
adc
mov
push
sub
lods
daa
bound
xchg
xchg
lcall
cli
repz
xchg
imul
mov
xchg
xchg
adc
cli
sub
repnz
rorl
in
bound
loop
adc
repz
pop
sti
add
cs
mov
adc
stos
mov
mov
je
dec
les
jno
push
sbb
and
cmp
push
push
push
mov
ja
and
std
test
push
fcomp
or
or
scas
sti
popa
insb
add
stos
jno
push
or
mov
add
jmp
mov
mov
mov
adc
xchg
enter
repnz
push
jecxz
xchg
ja
pop
push
ja
jge
in
xor
sbb
or
cmpsl
push
sbb
mov
jb
test
sbb
adc
jmp
scas
nop
jno
aaa
push
lods
xor
repz
pop
ljmp
jbe
sbb
dec
adc
iret
rorl
out
in
sub
or
orl
mov
loop
loope
xlat
int3
adc
push
pop
jae
js
clc
ret
test
jl
cmpsb
cmp
dec
xor
hlt
or
mov
or
xchg
fadds
fldcw
pop
mov
arpl
add
jnp
xchg
mov
sbb
movsb
sbb
sbb
push
lods
mov
leave
out
call
leave
js
fsubp
ror
and
push
dec
or
xor
not
push
xor
out
aaa
inc
js
popa
inc
xchg
imul
stc
push
xlat
popa
rclb
pop
dec
adc
outsl
or
xchg
push
push
insl
dec
lods
sub
xor
pop
jno
and
xchg
loop
rcll
loopne
addr16
test
jno
sub
jb
sbb
fldcw
clc
mov
arpl
mov
mov
xor
das
pop
aaa
mov
cmp
sahf
mov
stc
mov
fstpt
adc
mov
fsubrs
cld
shlb
fmul
test
fwait
pop
push
out
push
xchg
jb
fwait
and
sbb
push
icebp
in
inc
pop
popa
jecxz
test
and
mov
das
push
rclb
mov
push
mov
add
and
mov
gs
flds
fsubs
je
xor
add
sbb
rol
fadds
fucomip
cltd
xchg
inc
outsl
fsts
push
sahf
mov
pop
test
ret
into
push
bound
mov
add
arpl
push
mov
inc
in
add
lahf
es
out
out
mov
fidivs
rcl
and
push
xor
ficoms
lods
xchg
xchg
and
test
addr16
sbb
fisttps
or
loop
xor
test
pop
lret
mov
vandpd
movsl
sbb
sbb
or
fs
gs
popf
and
bound
repnz
lods
fwait
sub
outsb
test
out
jmp
sahf
mov
out
outsl
sub
or
inc
inc
in
push
adc
ret
shlb
fisubrs
iret
mov
ss
rcl
mov
xchg
fdivrl
filds
insl
mov
inc
and
idivb
shrl
jl
subb
mov
lods
sti
test
push
iret
xor
popa
imul
pop
xor
mov
inc
stos
test
insl
inc
jno
mov
or
imul
or
jle
and
cmovno
adc
popf
adc
inc
add
ret
icebp
out
jle
inc
mov
mov
in
sbbb
loopne
mov
mov
dec
inc
cmpb
lods
push
mov
jl
and
jbe
xor
mov
mov
out
jmp
aas
mov
cmp
dec
mov
enter
test
pop
enter
pop
dec
clc
cmc
and
jg
pop
push
sub
xor
fldl
ja
mov
add
xchg
xchg
push
ljmp
cmpsl
es
dec
dec
push
cmp
and
jb
sbb
scas
mov
gs
aad
je
pop
dec
fdivrs
aam
pusha
imul
pusha
mov
mov
or
out
ljmp
jle
outsl
push
push
push
or
adc
xor
or
jmp
jle
xor
or
sub
std
jle
movsb
jne
mov
lods
pop
fistl
lcall
rorl
shlb
mov
push
into
addl
add
add
test
mov
push
and
cmpsb
push
fisttpl
jb
dec
lcall
xchg
jb
fstpl
mov
mov
sti
adc
jbe
test
cmp
je
int3
popa
fwait
pop
lcall
pop
loop
push
mov
and
frndint
stc
dec
scas
xchg
lahf
mov
imulb
nop
adcb
xchg
sub
clc
add
xor
loop
jbe
mov
movsb
jae
scas
stc
mov
ficoms
push
fildll
aaa
in
shll
fstps
mov
js
dec
fwait
ror
or
sub
jbe
ret
lods
loopne
fimuls
sub
adc
xor
mov
jmp
lcall
add
dec
test
pop
mov
xchg
ja
fstl
js
dec
scas
push
clc
sbb
push
insl
pop
mov
in
gs
loope
sub
jle
adc
stos
jb
cltd
xchg
cmp
loopne
fmull
ljmp
fstps
daa
lods
cmp
outsb
adc
sub
adc
adc
sub
mov
or
sbb
or
push
mov
cltd
cmpsl
cs
jp
xchg
stc
xor
imul
les
inc
push
test
in
push
or
cmp
adc
aad
mov
cs
inc
push
pop
ficompl
lock
mov
jns
insl
test
mov
mov
in
mov
mov
mov
add
sbb
testb
out
scas
mov
inc
xchg
or
shll
ja
dec
gs
mov
xchg
rolb
inc
dec
push
shrl
inc
or
inc
jg
es
adc
cli
imul
pop
das
xor
pop
jg
or
mov
mov
mov
lock
inc
push
xchg
push
pushf
lahf
in
cld
lret
xlat
divl
push
mov
cmc
inc
cld
cmpb
xchg
pusha
push
add
movsl
dec
xchg
fs
enter
test
daa
ja
add
mov
out
sub
and
aaa
cwtl
outsb
pop
in
mov
popa
push
lock
sub
out
pop
inc
push
std
mov
ljmp
mov
leave
cs
repnz
clc
mov
cli
insb
dec
iret
push
adc
addr16
jmp
mov
push
dec
aas
sarl
cltd
test
and
repnz
pop
cli
scas
add
cmp
test
aaa
stos
sbb
pop
and
xchg
sub
fdivrs
aaa
sub
sahf
mov
and
or
in
orb
mov
mov
call
int3
dec
pop
cmp
cmc
push
stos
sbb
inc
lret
mov
mov
sbb
lea
mov
adc
mov
cwtl
int3
test
inc
loop
adc
mov
mov
sahf
test
fwait
adc
sahf
and
bnd
popa
inc
xor
out
adc
push
cmpsb
mov
lods
lret
pop
xor
jae
mov
addb
pop
pusha
popa
adc
add
nop
pushf
and
xchg
push
mov
adc
das
pop
mov
lock
pushf
scas
shrl
sahf
jle
mov
jb
mov
repz
fldt
sub
or
xchg
lock
int3
dec
mov
inc
add
jmp
xchg
xchg
dec
test
mov
push
repnz
mov
lahf
and
and
mov
mov
imul
out
xchg
or
pop
in
flds
into
movsl
aad
xchg
jmp
or
testb
js
jne
pop
lds
mov
cs
pop
in
jo
mov
xor
cmp
and
into
jp
dec
xor
dec
outsl
nop
mov
aam
cmp
push
movsb
adc
in
mov
lahf
outsl
inc
into
in
or
xchg
das
sub
xchg
pop
aaa
jp
hlt
mov
inc
pop
bound
push
loope
mov
and
push
div
int
jmp
jo
lods
xchg
xor
aam
decl
in
gs
sbb
jo
and
mov
mov
adc
bound
add
push
movsb
leave
fstpl
add
cwtl
lds
mov
xchg
stos
mov
lcall
shrb
loop
jbe
cmp
arpl
add
add
mov
int3
and
sub
push
nop
mov
outsl
adc
enter
xlat
push
fidivs
cmp
out
mov
mov
lret
mov
jecxz
mov
dec
push
rol
ljmp
hlt
cmp
push
test
jb
ljmp
or
dec
xlat
sub
xchg
stos
das
push
rorl
jmp
shrb
mov
mov
fisttpl
xchg
jg
adc
mov
enterw
pop
or
shlb
repnz
ret
adc
add
xor
cmp
out
mov
int
mov
xlat
jle
mov
mov
jo
cmp
add
nop
or
es
push
insl
mov
and
ret
leave
arpl
das
mov
lahf
xchg
sub
sub
jno
push
pop
inc
outsl
jecxz
mov
and
mov
push
aam
rsm
cmp
mov
std
pop
sbb
jae
jmp
sbb
clc
rcrl
inc
and
out
push
out
dec
sbb
push
lret
out
or
ret
inc
jbe
in
jle
adc
mov
leave
sub
test
mov
push
sub
inc
ds
mov
fcompl
out
push
pusha
mov
push
imul
xor
int3
mov
lahf
rcll
push
cmpsb
xchg
and
hlt
icebp
push
sbb
repz
add
bound
in
push
mul
cwtl
xlat
loop
pop
das
jl
push
inc
mov
lcall
mov
jno
in
pop
sub
add
push
stc
scas
leave
or
test
mov
fldl2t
lret
mov
icebp
addr16
sub
ret
adc
sbb
sti
cltd
cmp
outsb
fxam
repz
icebp
dec
adc
adc
sbb
xlat
inc
push
xor
out
inc
add
inc
xor
xorl
dec
adc
fimull
andl
adc
fwait
jge
add
xchg
xchg
ja
jmp
out
arpl
sbb
or
push
add
xor
inc
inc
fistps
or
pop
pop
mov
adc
and
dec
xchg
mov
insl
enter
fstps
pop
xor
pusha
loopne
sbb
add
decb
jge
je
cltd
xchg
sub
int
jg
jne
lea
aaa
sub
push
addr16
in
mov
sbb
push
test
popf
inc
mov
jbe
xchg
inc
leave
adc
mov
xchg
pop
gs
fadds
xor
cmpsb
mov
mov
aad
mov
pushf
insb
orl
mov
mov
mov
add
imul
pop
loop
jae
andb
xor
jecxz
fwait
dec
and
add
or
dec
rclb
testl
cmpsl
iret
cmpb
mov
jecxz
and
outsl
lcall
test
jb
lods
cmp
xor
pop
pop
and
sbb
push
fldt
fisubrs
cs
xor
enter
lcall
subl
push
dec
xor
shrl
xchg
mov
mov
mov
mov
or
pop
cmp
dec
cmp
cltd
mov
mov
pop
repz
frstor
add
sbb
adcl
andl
nop
shll
cmp
push
fstpt
es
loope
pop
call
rolb
lods
notl
lock
outsl
shl
mov
mov
push
lea
loopne
cmpsl
cmp
mov
fists
mov
cmp
sub
pop
add
iret
dec
or
pop
jbe
cltd
push
rep
inc
mov
cwtl
mov
inc
mulb
mov
push
pop
dec
mov
push
out
mov
xor
mov
adc
divb
clc
mov
aad
sub
enter
mov
mov
in
xchg
push
jmp
cs
xchg
xchg
mov
cmp
jl
and
cmp
xchg
aaa
mov
les
mov
nop
mov
add
adcl
into
push
je
or
pop
mov
stos
pop
addr16
fistpll
arpl
or
sbb
or
xchg
cmp
mov
sbb
and
cld
xchg
pop
int3
or
mov
ret
stos
and
or
mov
inc
ret
mov
adc
mov
leave
in
mov
fimuls
xchg
mov
push
adc
push
lock
push
movsl
lock
pop
xor
cwtl
fwait
outsl
xchg
stc
scas
jmp
jbe
adc
xorl
mov
rclb
mov
add
int3
orl
inc
mov
cltd
sbb
dec
stos
pop
lods
xchg
sbb
xchg
add
or
jns
dec
add
scas
pop
mov
mov
pop
sarb
sub
leave
and
jae
xlat
and
adc
icebp
movsl
js
lret
repnz
aas
mov
fs
dec
addr16
test
sub
jo
je
cltd
adc
pop
in
fidivrs
xor
leave
shlb
scas
ds
pop
and
lds
mov
adc
mov
test
pinsrw
daa
out
lds
in
loopne
fsubl
repnz
add
outsb
out
dec
dec
push
scas
ret
sbb
xchg
lods
repnz
push
xlat
lret
adc
cmp
enter
push
cmp
pushl
sbb
jnp
movsl
dec
cmp
xor
sar
les
movsb
fwait
sub
cmp
loopne
mov
ret
dec
bound
call
bound
das
fsub
fwait
push
cld
mov
xchg
hlt
stc
pop
inc
js
dec
inc
stos
vandnps
push
lea
xor
push
sti
mov
mov
aaa
add
pop
loopne
dec
test
insb
xor
sahf
inc
gs
shlb
mov
dec
or
in
pushf
cmp
test
jno
add
cwtl
call
clc
lods
mov
or
aam
mov
xlat
call
jecxz
xchg
in
push
aam
int3
jg
scas
test
repnz
sub
js
lds
ds
mov
dec
mov
or
loope
sbb
jns
decl
aam
movsl
std
mov
jge
flds
call
bound
incl
rol
bound
xchg
test
scas
adc
mov
addr16
gs
lcall
pop
loope
lahf
xorl
insl
mov
cli
inc
lahf
insb
es
insl
arpl
push
xor
jae
sbb
and
sahf
sbb
jmp
push
ret
mov
push
inc
dec
dec
call
pop
dec
insb
adc
out
out
mov
cmp
lods
xchg
mov
call
in
pop
mov
or
adc
or
cs
sub
test
mov
sbb
lahf
xor
or
push
stc
jb
sbb
lcall
aaa
adc
adc
push
inc
mov
mov
add
and
add
cmp
cltd
pop
mov
aaa
jle
subb
rclb
ss
or
lock
push
pushf
insl
adc
add
or
jno
out
and
lea
iret
enter
cmp
and
bound
call
into
mov
popa
mov
sub
nop
das
je
jmp
jl
adc
jne
or
dec
cmp
popl
stc
adc
sub
or
dec
in
ja
movsl
mov
rcl
lret
andb
ret
loope
lret
jmp
movsl
push
push
scas
or
push
adc
pusha
insl
stc
inc
scas
out
gs
std
sahf
xchg
pop
lcall
or
loope
pop
mov
out
mov
push
ret
daa
sti
sub
repnz
push
dec
aas
lods
shll
test
and
aam
jno
testb
jl
fisttpll
lret
pop
or
sub
enter
sbb
jne
jge
cmp
sub
lcall
rcrl
out
das
pop
and
jg
push
fldcw
aaa
scas
jle
aad
fwait
mov
and
pop
les
jo
dec
sub
dec
xor
test
int
mov
mov
out
pushf
cmp
addb
jne
sbb
mov
push
dec
fidivs
cmpsb
push
ja
add
leave
aam
push
pop
jnp
js
mov
sub
jo
xchg
or
sub
mov
es
test
xchg
fwait
call
test
jnp
aaa
incb
leave
incl
inc
xchg
mov
cmp
inc
ljmp
and
sahf
repz
daa
push
test
or
cmp
xchg
mov
lds
adc
pushf
jl
rorb
inc
and
cmc
cmp
inc
and
shll
or
ret
in
pop
in
inc
loopne
jno
push
jle
lahf
dec
dec
jle
nop
pop
mov
fstl
sub
xchg
dec
adc
imul
xchg
xchg
lock
adc
cmp
icebp
sub
pop
sbb
pop
dec
movsl
mov
adc
or
cmpl
repnz
cmp
je
sahf
popa
pushl
pushf
int3
int
mov
adc
mov
bound
mov
inc
sbb
lock
mov
gs
cltd
addr16
loop
dec
add
xchg
and
bound
imul
adc
out
xchg
push
or
js
or
repnz
jo
or
in
add
lock
ret
lds
jns
jge
enter
xchg
dec
andl
push
call
cmp
push
fdiv
lods
outsb
mov
aaa
sarb
and
pop
sbb
js
daa
rolb
sub
inc
iret
repz
or
sub
mov
add
push
mov
cmp
xchg
insb
repz
mov
or
xor
adc
aad
and
push
pop
je
lds
push
xchg
cmc
fistl
push
mov
ficoml
nop
push
loope
into
mov
mov
shll
adc
sar
icebp
mov
leave
fdiv
lods
fistps
fisubl
or
lea
push
xor
mov
idiv
movsl
dec
cmpsb
lret
push
bound
or
and
lret
or
push
or
fnstcw
jl
jg
rcr
xor
xchg
repnz
jg
repnz
ficoml
push
xchg
and
orb
test
mov
mov
pop
adc
lods
insb
inc
inc
lods
and
add
loop
pusha
mov
xor
pop
movsl
add
mov
arpl
leave
xlat
int
ret
cmp
mov
cmpsl
js
push
cltd
cwtl
les
mov
out
cmp
inc
push
jo
stos
sbb
adcb
lahf
dec
push
lret
sub
dec
lahf
xchg
aam
cltd
jbe
cmp
mov
fcmovne
adc
add
mov
imul
inc
out
push
xorl
add
xchg
xor
xchg
adc
lret
in
sbb
jl
aad
xor
sub
sahf
fcomp
iret
jp
jae
fldcw
loope
xor
jle
ljmp
jne
cs
sub
fabs
adc
popa
cmp
dec
mov
xor
stos
adc
jg,pn
xchg
dec
push
ds
xor
pop
dec
mov
js
rcl
ja
lods
fidivs
sub
add
shrb
and
imul
push
stc
xchg
pop
inc
jbe
xlat
inc
daa
mov
sarb
loop
popf
ret
pop
shrb
or
movl
jno
fisttps
je
xor
xchg
jecxz
subps
rolb
ja
dec
addr16
popf
ds
xchg
in
xor
push
jb
jnp
addr16
jns
mov
push
mov
mov
add
cmpsl
int3
shl
fisubs
loopne
je
int
shl
inc
test
adc
lret
jae
es
mov
xchg
pusha
mov
cltd
jbe
sub
push
leave
cmp
in
sub
cmp
out
in
xor
shl
xchg
les
in
scas
in
dec
popa
insb
mov
ret
or
sub
xor
xor
adc
iret
or
push
pop
pop
je
pop
mov
lret
dec
mov
push
cmpsl
in
inc
cmp
sbb
stos
push
movsl
xchg
add
rcr
test
add
push
insl
mov
scas
xchg
lahf
and
enter
inc
shrl
je
fildl
notl
mov
sahf
and
js
fdivl
adc
pushf
cmp
push
lcall
pop
adc
std
rcrb
out
xchg
jbe
notl
leave
inc
and
sub
or
in
out
xor
cmp
out
enter
in
or
popa
es
pop
sbb
or
mov
cmp
jp
jnp
inc
xchg
test
pushf
or
mov
movsb
dec
enter
jge
negb
mov
scas
sub
addr16
mov
lret
push
mov
cmpsl
lret
sbb
repnz
iret
arpl
es
sub
mov
mov
inc
fs
sub
xchg
loopne
cmp
mov
les
mov
xor
sub
mov
sub
or
pop
lret
pusha
dec
cmp
outsb
unpcklps
mov
xchg
and
aas
fdivr
inc
rorl
xor
jbe
stos
fs
pop
lods
sti
mov
jge
mov
mov
cwtl
clc
cltd
rcrl
cmpsl
mov
push
scas
insb
fcomps
data16
sub
lds
dec
hlt
mov
xor
inc
arpl
iret
in
mov
or
xor
popa
das
insb
push
jb
fisubl
and
in
inc
sahf
data16
cmp
jmp
or
adc
xchg
mov
adc
xchg
adc
aas
int3
fld
lret
push
dec
dec
xchg
jnp
nop
aas
xchg
sub
add
push
ljmp
push
repz
movsl
mov
inc
shll
iret
mov
pop
je
das
shrb
xchg
pop
sarl
shrb
mov
shll
rorb
dec
int3
outsb
and
icebp
nop
pop
ds
dec
mov
fcomps
outsl
addr16
cmp
push
shll
stos
inc
and
loopne
fisttpl
sahf
imul
sbb
psraw
in
sbb
xchg
sbbl
xchg
les
pushf
push
xor
adc
push
loope
div
call
xor
test
mov
add
aad
and
dec
jle
aas
sbb
inc
aam
pop
mov
arpl
lret
mov
ljmp
cmpsl
addb
sub
cmp
lret
js
xchg
inc
repz
pop
mov
mov
aas
mov
sbb
jo
push
mov
insb
adc
fcomps
lret
inc
sub
rcl
shlb
orl
std
rclb
xor
lea
inc
ss
imul
pop
cmp
jmp
sahf
pop
jl
cmp
add
fcoml
adc
push
and
mov
mov
sbb
or
mov
push
sbb
sarb
aaa
adc
sub
mov
rorl
jmp
call
jmp
push
mov
add
int3
jne
xchg
scas
or
cmp
and
sub
xchg
fadds
or
repz
sub
out
jg
pop
pop
mov
pop
dec
push
dec
pushf
insl
and
mov
xchg
loopne
scas
xchg
sub
mov
outsb
pop
and
and
dec
popa
divb
sbb
sahf
sub
and
mov
loopne
dec
and
popf
and
xor
cmp
pop
mov
jo
sbb
fimull
and
or
xchg
mov
pop
ret
xchg
inc
in
sbb
or
add
mov
outsb
shlb
insl
aaa
outsb
jmp
cmc
sub
mov
or
mov
je
lods
cmp
je
hlt
push
or
lock
dec
jmp
jb
mov
js
repnz
mov
push
shlb
fidivs
sub
rcrl
fs
xchg
and
mov
mov
shll
je
adc
dec
daa
xchg
sub
gs
outsb
sti
jb
jp
arpl
fdivs
adc
or
sbb
jp
cltd
sub
xchg
inc
std
scas
add
xchg
dec
xchg
std
ss
repz
xor
mov
inc
mov
xchg
test
out
repnz
movsl
ret
jnp
or
adc
imul
std
xchg
lret
pop
push
in
xchg
xchg
push
push
mov
sub
xor
ljmp
cmp
sbb
arpl
cmp
faddp
in
imul
push
or
pop
inc
decl
mov
ja
lods
lahf
addr16
lahf
push
mov
lods
mov
or
shl
sub
and
into
inc
sub
jnp
outsb
mov
add
subb
push
pushf
notl
mov
inc
pop
dec
mov
jl
jo
xlat
clc
sub
pop
and
cmovs
cs
jno
insb
xor
inc
rcrb
in
cmpsl
gs
inc
push
sub
data16
mov
scas
jge
mov
mov
dec
cld
imul
adc
mov
fwait
cwtl
mov
mov
mov
ficomps
adc
test
push
mov
pop
xchg
call
sbb
mov
insb
and
push
lahf
fimull
jne
mov
std
xchg
sub
bound
aam
cld
insb
mov
or
xlat
ss
in
cmp
pushl
test
dec
call
mov
notb
pop
xlat
ds
outsb
add
fnsave
fwait
stos
push
mov
into
cs
inc
push
scas
xchg
mov
or
dec
push
adc
sub
mov
imul
lcall
mov
jne
inc
xor
cltd
in
pop
xchg
lods
and
jae
insl
mov
hlt
push
cmp
xor
in
rcr
pop
lahf
out
clc
or
add
xor
pop
dec
xchg
movsl
sti
clc
adc
fcmove
addb
inc
test
sbb
pop
cs
add
mov
inc
out
pusha
xchg
outsl
int
push
and
jno
add
ss
scas
push
movsb
mov
push
mov
mov
inc
mov
jno
int3
cltd
mov
fisubs
jle
jns
mov
pop
cmp
jae
cwtl
stos
ret
pop
jns
rcrl
xchg
rclb
jae
aad
or
add
fisubs
int
sbb
sub
jno
lods
fcoms
or
aaa
orl
push
jmp
mov
pop
imul
and
push
mov
and
ret
in
or
add
in
fnstcw
fidivrs
adc
cli
adc
cmp
mov
jle
scas
pushf
pop
lret
cmc
sbb
push
xor
mov
push
adc
xchg
clc
bnd
push
jno
pop
mov
in
test
sbb
mov
add
cmp
dec
cmpsl
jnp
or
test
popf
or
cwtl
lods
pop
xor
fbld
icebp
insl
and
stos
adc
cmp
mov
push
andl
fcmovnb
mov
and
lea
daa
faddp
xchg
int3
cmpb
adc
in
out
push
lcall
xchg
cs
rorb
test
push
pushaw
gs
pusha
sub
movsl
xchg
mov
and
and
xchg
stc
dec
sahf
or
sbb
sbb
in
xchg
inc
icebp
mov
mov
and
clc
mov
imul
cmp
repnz
mov
jb
or
and
pop
pop
test
scas
adc
jnp
xlat
mov
je
idivl
rol
sbb
xchg
sbb
sbb
mov
pusha
xchg
pop
jle
insb
dec
xchg
inc
add
sbb
aad
aaa
test
and
adc
in
sbb
test
adc
dec
or
xchg
outsb
and
sub
dec
test
cmp
scas
xor
adc
inc
lods
xchg
sbb
aam
pop
pop
inc
arpl
ret
xchg
push
mov
mov
dec
pusha
mov
push
jecxz
loop
cmp
and
inc
adc
lcall
out
lock
dec
addr16
push
test
ljmp
fwait
aaa
test
sbb
stos
inc
sub
loope
sti
adc
aam
inc
lret
and
jmp
sub
pusha
scas
outsl
cli
jno
mov
cmpsb
es
mov
sahf
daa
aas
inc
or
scas
fcomps
hlt
hlt
sub
and
sub
mov
in
xchg
in
stos
adc
pushf
stos
loope
loopne
xor
mov
fcoml
mov
cltd
mov
bound
arpl
shrb
shlb
ljmp
pop
add
mov
shll
into
sub
fdivs
out
mov
xor
fbld
ja
addl
enter
aaa
xchg
test
mov
ds
or
xor
movsb
in
pushf
mov
icebp
sbb
and
mov
sub
and
repz
jmp
add
mov
insl
xchg
std
mov
sub
push
xchg
mov
xlat
cmp
push
and
or
aaa
xorl
out
js
sub
popa
push
sub
adc
negb
nop
xor
xchg
jo
roll
sub
sbb
stos
gs
push
inc
cs
test
mov
dec
sub
fs
loop
jns
and
jmp
xchg
fimull
faddl
adc
push
sahf
mov
stos
imul
mov
push
sbb
fsts
jb
and
mov
cli
cmp
aaa
and
pop
dec
jnp
shrb
pop
outsb
test
cmp
in
inc
inc
xchg
or
adc
jge
jg
lret
jecxz
shrb
push
sahf
popf
das
add
jno
rcrl
or
push
and
sti
das
mov
rolb
int
push
movsl
adc
rcr
iret
inc
push
enter
mov
inc
mov
stc
enter
jle
sbb
inc
data16
inc
cmc
addr16
cmp
pop
dec
push
enter
ds
add
cmpl
dec
xor
add
mov
nop
aaa
rol
aam
test
xor
mov
out
sbbb
push
jg
fisttpll
ret
jb
dec
mov
pop
xchg
pop
adc
lret
mov
and
dec
clc
sbb
ret
push
mov
imul
push
ret
cltd
lods
xchg
scas
jge
push
addb
cmpsb
outsl
leave
cmp
push
pop
outsl
mov
adc
imul
lea
dec
cli
add
cwtl
adc
insl
in
das
cmpsb
xchg
fiadds
mov
mov
lock
jmp
nop
push
add
pop
dec
lock
stos
pop
mov
and
ja
cmp
push
bound
mov
mov
mov
aam
fidivrs
fcoms
push
sahf
inc
imul
fistps
mov
call
sbb
add
fbstp
jnp
push
sbb
std
cmp
in
mov
rolb
ljmp
into
test
mov
negl
addb
aad
add
cltd
and
les
sub
adc
faddl
jns
push
sarl
mov
mov
int
mov
xchg
outsl
test
jg
cmp
xchg
leave
xor
push
push
sub
lret
mov
pop
jp
dec
mov
xchg
add
jne
loope
mul
ljmp
loopne
or
or
adc
pop
lods
std
xchg
mov
lock
add
pop
lock
outsl
mov
insl
cmp
push
cmp
fsubs
or
inc
cmpsb
fidivl
or
out
mov
or
sbb
stos
fucom
push
ss
and
fstl
xor
test
cmp
xchg
inc
clc
adc
rcl
pop
push
jne
cmp
std
ficoms
inc
ds
jecxz
pop
test
clc
js
gs
jb
mov
movl
in
fsub
push
pusha
pop
inc
lret
mov
enter
repz
pop
lea
or
icebp
cmp
mov
inc
aad
xchg
xor
fistpll
jne
pusha
add
push
push
pop
mov
cmp
cmp
aam
out
pop
bswap
cmc
cmp
ss
xor
les
push
sub
scas
dec
sub
pop
mov
sub
or
movsl
push
jbe
jns
je
out
inc
mov
jle
jle
stos
adc
jmp
aam
je
ficoms
hlt
js
icebp
sub
cltd
or
ja
dec
inc
frndint
pusha
mov
xchg
pushf
sarb
xchg
mov
shrl
lcall
jno
pop
sbb
mov
dec
mov
xor
divb
shlb
adcl
xchg
mov
icebp
movsl
xchg
adc
mov
rorb
dec
shlb
jg
mov
jnp
pop
dec
ret
cld
fdivrl
shlb
sub
add
aam
ja
mov
into
jmp
jge
xchg
repnz
ds
lods
xor
das
inc
loop
test
sbb
addb
push
xchg
and
push
jmp
in
in
mov
lret
xor
add
sarl
mov
movsl
pop
popf
cmpsb
inc
testl
sbbl
cmp
into
sahf
mov
sbb
cmpsb
shrb
call
xlat
icebp
inc
aad
fwait
mov
xchg
test
mov
lea
jns
jb
std
iret
xchg
sub
out
xchg
stos
pop
jle
or
pop
sbb
lret
mov
xchg
in
jmp
sahf
xlat
xorb
sub
mov
push
and
lock
popf
mov
dec
ds
cmp
stc
pop
sahf
or
mov
popf
jg
cs
or
pop
arpl
cmpsb
sub
ss
in
lret
add
subl
rorl
loopne
mov
cmp
xchg
cs
pusha
inc
xchg
inc
test
mov
pop
push
xor
out
jnp
scas
aam
push
icebp
mov
data16
dec
sub
pop
sbbl
stos
scas
lods
ror
or
mov
xor
xchg
jb
incb
dec
push
lods
fiadds
cmp
inc
dec
sbb
pushf
lods
sub
cmp
push
outsb
mov
xor
jl
sahf
xor
cmp
or
push
loop
cmp
push
clc
aaa
mov
mov
lahf
sub
pop
out
cmc
daa
ret
jae
das
js
out
leave
jae
jmp
popf
mov
shlb
int
xchg
mov
ss
dec
in
aas
arpl
sub
rorl
add
cmp
leave
adc
mov
jb
xchg
xchg
imul
out
call
mov
jl
lcall
arpl
jle
mov
int3
insb
mov
pop
lods
xor
pop
push
and
pop
adc
dec
ret
lret
fstl
mov
jnp
inc
loope
lds
pop
mov
dec
test
popa
out
adc
lret
mov
cmp
inc
fistps
jo
sub
xchg
loopne
mul
out
or
add
cmp
cmp
or
pop
lahf
mov
dec
aad
inc
adc
in
imul
mov
cmp
iret
pop
incb
dec
shrl
pop
cli
xchg
push
xchg
push
xchg
push
dec
movsl
dec
sbb
add
aad
les
ret
dec
adc
adc
add
push
pushf
xchg
inc
adc
push
xor
fwait
dec
sarl
lea
mov
fidivrl
or
xchg
lods
out
insl
push
test
xchg
lahf
loope
jae
ret
dec
jl
cmpsb
xor
mov
add
and
out
int
addb
fwait
repnz
lret
mul
and
sahf
roll
icebp
lret
gs
push
pop
cmp
into
and
les
add
dec
add
lahf
daa
dec
outsb
jo
test
dec
pusha
lret
jae
gs
sbb
adc
pop
aam
cmp
push
mov
jae
inc
pop
inc
in
mov
das
cmp
in
inc
jmp
roll
insb
adc
and
adc
sub
push
repz
fsubs
pop
and
mov
add
repz
cli
xor
pop
lret
jno
jae
jbe
dec
test
aam
ret
decb
call
add
xchg
and
mov
adc
jae
adc
dec
mov
add
jle
sbb
lea
xchg
call
inc
in
ret
out
add
add
pop
mov
test
fistl
pop
sbb
std
lcallw
pop
loopne
push
jecxz
jns
fwait
lcall
xchg
xor
shrb
jp
incb
test
mov
push
jmp
add
sbb
stos
cld
mov
and
repz
pop
mov
ss
push
dec
movsl
ror
hlt
xorb
jne
add
fcompl
jmp
mov
shl
sbb
xor
jb
cld
sbb
adc
xor
nop
xchg
xchg
pop
xor
adc
jno,pn
push
insb
xor
sbb
dec
inc
stos
lret
mov
push
in
pop
testl
xchg
daa
inc
ror
xchg
leave
outsb
lea
in
xor
xchg
mov
xchg
mov
push
fldpi
subb
out
lcall
xorb
hlt
fiaddl
pop
adc
fimuls
jp
fstps
int3
push
adc
dec
or
xchg
insb
inc
dec
scas
and
repz
popf
insl
in
jo
pusha
mov
fstpl
sub
jmp
xorl
mov
lret
mov
jo
dec
call
add
scas
jge
roll
xchg
inc
mov
and
pop
and
dec
cld
cmp
jb
xchg
ffreep
jmp
mov
aam
jo
mov
lret
pop
js
lds
jo
movsl
mov
cmp
addb
xor
xorb
push
mov
inc
adc
pop
xor
je
das
xchg
mov
sub
daa
xchg
sbb
insb
test
aas
push
test
mov
imul
lock
push
lret
lea
mov
push
je
into
lock
jecxz
fmull
data16
lahf
into
sti
mov
xlat
jge
jge
out
cli
insl
movsl
or
outsb
and
imul
pop
or
sbbb
das
mov
xchg
push
inc
or
ss
std
es
cmpl
xchg
dec
imul
dec
lahf
gs
int
cmc
jns
loopne
insb
fmull
xchg
adc
cmp
jp,pt
call
xor
cmpsl
dec
insb
lret
sbb
data16
xchg
dec
and
dec
aam
cmp
pop
jnp
mov
cmp
or
outsl
cmp
packssdw
sbb
or
lods
push
jne
ret
cwtl
jno
inc
and
loope
ret
mov
mov
dec
jns
cmp
loope
aaa
inc
add
add
mov
or
xchg
lret
pop
int
push
js
scas
adc
adc
nop
punpckhwd
rcrb
xor
loope
sti
mov
mov
xor
loope
push
dec
jmp
xor
mov
dec
pop
push
xchg
add
inc
test
jecxz
daa
imul
or
int3
repz
andb
adc
push
mov
mov
mov
mov
push
mov
sarb
pop
pop
outsb
in
pop
orl
mov
inc
xor
repnz
pop
jmp
cmc
shlb
arpl
pop
mov
mov
outsl
ret
movsl
pop
stos
js
stos
lret
xchg
sbb
out
enter
arpl
cmp
cld
jo
arpl
inc
sbb
orb
pop
inc
lock
jp
sbb
loope
ja
shl
push
jae
clc
outsl
dec
jl
mov
ljmp
mov
fmull
outsl
mov
push
pop
dec
cmp
dec
xor
mov
jecxz
or
or
fs
rol
cmp
imul
mov
test
mov
pushf
lods
popf
pop
pushf
pop
stos
jnp
ljmp
adc
repz
decb
in
fnstenv
xchg
das
outsl
pushl
xor
pop
pop
inc
or
dec
push
mov
ss
sub
aad
push
nop
jecxz
dec
cmp
jae
xor
xor
mov
push
out
sub
mov
lods
jle
bnd
add
sbb
imul
test
jmp
ss
mov
mov
gs
fcmovnb
add
adc
cmp
mov
push
in
popa
push
fidivrs
stc
mov
das
pushf
stc
cmpsb
in
mov
aas
lods
xchg
repnz
xor
aas
jl
in
popf
mov
imul
dec
cmc
lcall
or
xchg
outsb
dec
jb
inc
pop
cmp
inc
out
fnsave
add
loop
int3
xor
es
and
adc
mov
pusha
out
cs
imul
and
imul
mov
adc
and
cld
ja
pop
jb
movsb
xor
inc
imul
les
xchg
fnsave
xor
sub
push
out
in
mov
in
test
add
inc
daa
aad
dec
addr16
aaa
push
xchg
or
xchg
mov
inc
fwait
sbb
pop
mov
xlat
jmp
lret
sbb
pop
push
xor
je
vxorps
sar
scas
movsl
sbb
mov
and
xchg
in
inc
subb
lret
loopne
das
fs
pop
and
into
out
test
inc
or
jae
pusha
dec
lahf
in
fists
inc
out
scas
xchg
pop
testb
mov
pop
lds
xor
pop
dec
arpl
mov
fdivr
sbb
fdivrs
adc
and
mov
inc
fdivl
inc
push
mov
cmpsl
je
popa
xchg
cwtl
add
fistpl
aas
dec
imul
inc
add
push
in
add
xchg
sbb
add
mov
ret
dec
mov
pushf
inc
call
addr16
lahf
addr16
rcrl
test
in
jp
movsl
xchg
call
mov
and
cmpsl
aas
mov
mov
sbb
push
pop
shrb
adc
sub
test
jno
stos
inc
dec
jg
jg
outsl
aaa
mov
pop
mov
dec
icebp
add
sti
test
and
and
cwtl
mov
mov
cli
dec
mov
clc
and
jnp
mov
push
or
adc
ja
and
decl
lret
jle
mov
in
leave
jmp
sub
dec
imul
inc
or
mov
outsb
add
lea
insb
ds
andl
orl
adc
dec
aas
jo
lcall
es
fstp
inc
mov
push
pop
mov
jmp
cmp
test
xlat
mov
inc
cmp
xor
jmp
mov
add
je
mov
jno
testl
jecxz
lods
adc
push
sti
int
fmul
imul
ss
test
push
xor
mov
subl
stos
add
xchg
xlat
pop
sbb
inc
pusha
je
push
inc
xlat
data16
adc
iret
jle
insb
or
repz
dec
icebp
lret
popf
xchg
sub
loope
loop
mov
sbb
adc
movsl
xchg
in
inc
mov
das
addr16
icebp
cmc
enter
lcall
xchg
push
jns
mov
outsb
dec
fcoml
sti
mov
xchg
xor
sti
xor
int3
jbe
pop
divl
subl
cltd
cld
out
pop
mov
push
pop
cltd
aas
mov
mov
pop
out
cld
jg
cwtl
push
iret
icebp
and
xchg
rol
stos
cmpsl
push
add
mov
sbb
mov
pop
roll
dec
ror
iret
das
push
out
sbb
mov
cmpsb
push
insl
cmp
mov
xchg
lods
divl
cmpsl
add
inc
cwtl
lock
pop
cmpsl
or
lock
dec
pop
pop
testb
jnp
jne
mul
inc
pop
out
and
mov
fiadds
cld
xchg
mov
push
in
push
push
imul
push
adc
dec
mov
push
iret
push
stos
mov
sub
lret
cwtl
adc
add
sti
cltd
push
mov
jno
ret
xor
jp
jle
or
or
cmp
stc
inc
cmpsb
cwtl
popf
imul
dec
in
mov
pop
xchg
mov
int
cltd
push
in
inc
or
mov
aas
insb
test
mov
lahf
out
jo
push
xchg
sub
scas
pop
shll
int3
cli
movsl
mov
mov
sti
and
aaa
mov
out
xor
bound
jnp
inc
xchg
aam
add
out
or
fdivr
sub
jp
movsb
add
fidivs
loope
jmp
sbb
scas
fucomi
pop
jo
pop
ds
sahf
fnop
push
cld
or
popa
lods
dec
pop
add
mov
dec
sbb
cld
mov
pop
lods
in
sub
sub
das
sarl
mov
ljmp
call
test
mov
in
enter
rorl
ljmp
inc
mov
jo
stos
shrl
ret
rorl
in
stc
jnp
aas
subl
sub
repz
pop
add
rorb
out
mov
inc
les
iret
adc
cmp
into
outsl
bnd
cli
mov
aaa
pop
mov
cli
mov
adc
lds
movsl
adc
popa
jp
in
dec
push
mov
mov
idivb
orb
jb
loop,pt
cli
cmpsb
insl
ss
cltd
add
mov
add
mov
jl
mov
in
cmpsb
xor
addr16
and
mov
push
cmpsb
loopne
xchg
or
shrb
xchg
mov
ftst
pop
or
shl
cmpsl
push
dec
cld
xchg
jg
div
pop
nop
push
aas
push
add
lods
cmpsb
out
bound
jge
pop
cmc
add
mov
std
xchg
xchg
dec
shrl
sbb
jns
cmp
sbb
ds
mov
mov
movb
clc
roll
xchg
add
sub
cmp
cmc
pushf
cmp
sub
xchg
mov
and
in
cmp
sets
js
push
into
mov
pop
cwtl
add
sbb
rclb
push
dec
fists
data16
data16
cwtl
sahf
mov
bound
lock
je
sub
js
push
sub
jmp
cltd
adc
sub
ret
jae
jl
das
push
sub
outsb
push
cs
in
insb
shll
lret
out
jbe
push
pop
xchg
pushf
and
adc
inc
int3
jp
sbb
jge
test
xor
stc
andl
push
xlat
into
gs
or
mov
cmp
ret
sub
incb
cmpsl
andl
popf
sub
ret
setns
sbb
xorb
ja
fwait
mov
in
scas
jmp
test
push
rorl
jno
cmpsl
jecxz
mov
dec
mov
pop
int
ds
xchg
lods
loop
dec
push
dec
inc
jo
push
leave
push
in
xorb
daa
sbbb
jecxz
mov
and
imul
iret
test
mov
sbbl
int3
mov
xor
sbb
mov
cmc
pop
imul
xor
jecxz
ds
cmpsb
int
imul
and
sbb
inc
jae
mov
and
jno
aas
xor
repz
adc
push
shll
pop
xchg
lock
push
pop
inc
cld
pushf
into
xchg
insb
adc
adc
mov
sbb
jnp
lods
sbb
sub
sbb
sbb
daa
stc
psubsb
cld
sbb
das
lods
frstor
add
testb
push
sbb
js
jbe
into
jmp
test
ljmp
outsb
rcll
or
nop
cmp
fisttpl
mov
cli
leave
xchg
xchg
test
mov
fucomi
push
mov
push
notl
push
repz
mov
jno
or
cmpsl
aam
lret
jle
mov
jne
lods
nop
and
sbb
inc
in
mov
stos
ficoms
jmp
arpl
or
or
mov
and
dec
decl
fwait
negb
mov
or
adc
dec
cmp
lods
test
or
mov
dec
movsl
sbb
shrl
into
adc
mov
into
xor
dec
sub
notb
push
sub
jo
push
cmc
out
cs
std
pusha
jbe
mov
inc
jge
addl
mov
cmc
push
pusha
cli
hlt
data16
adc
and
or
add
ds
jecxz
nop
jo
xchg
imul
jno
in
pop
mov
addl
xlat
jmp
mov
into
pop
addr16
mov
xchg
jg
clc
popa
addr16
cmp
pop
mov
pop
int3
imul
jle
xchg
filds
cs
xor
test
xchg
sbb
adc
cmp
adc
sub
push
jb
mov
or
js
sahf
testb
xchg
fiadds
xchg
aas
dec
js
test
jge
int
out
stos
call
mov
cmp
dec
ljmp
rclb
push
push
aaa
add
adc
xchg
or
sarb
lods
xchg
xchg
out
ret
mov
push
xor
data16
xchg
jae
jbe
mov
pop
mov
int
push
inc
movsb
pop
mov
fisubl
iret
add
add
mov
xchg
add
xchg
xlat
divl
int
cmc
icebp
mov
mov
cmp
cmp
fldenv
les
inc
xchg
sub
cmp
and
sbb
dec
lret
mov
cmp
stos
fisttpll
or
xchg
aas
mov
xlat
mov
shll
mov
sub
cwtl
test
pop
jne
pop
fildll
jmp
xor
jns
mov
or
loope
stc
imul
arpl
sbb
cmp
dec
in
inc
adc
fsubrs
sti
stc
jmp
push
lds
pushl
jae
push
xor
jge
mov
jno
sti
in
cmp
imul
or
sub
dec
dec
lods
repnz
rorl
ret
adc
negb
repz
xchg
pop
cltd
cmpb
cmp
jg
sahf
mov
mov
dec
xor
mov
jne
or
sti
js
sarl
stos
inc
cmpl
mov
dec
sbb
mov
sub
xchg
add
jns
mov
jno
sbb
iret
ret
add
push
jle
xchg
jo
outsb
jmp
andb
les
mov
cli
lds
and
sub
lea
pop
xchg
cmpsb
cld
out
cmp
inc
push
std
mov
nop
push
or
int
stc
fwait
addr16
sbb
push
pop
pushl
stos
aam
fidivrs
pop
movl
xchg
nop
or
inc
jl
aas
rcrl
into
repnz
mov
mov
and
test
insl
dec
mov
jl
leave
adc
mov
sahf
mov
ja
cmpsb
cmp
sub
and
pop
push
or
jne
inc
divb
sbb
mov
int3
xchg
iret
outsb
adc
xchg
leave
mov
std
insl
sbb
mov
and
dec
mov
push
mov
outsl
lds
mov
mov
xor
int3
push
mov
popf
dec
adc
xchg
mov
xchg
stos
mov
mov
or
push
mov
bound
and
stos
lret
lahf
ret
movsb
jno
inc
nop
aam
mov
inc
dec
hlt
push
add
into
ret
leave
movsb
mov
jo
cwtl
xchg
xchg
jg
sbb
insb
imul
sbb
stos
fcmovb
in
rcl
je
cmp
rcrb
pushf
divl
jb
mov
inc
add
and
mov
inc
lea
dec
addb
cli
jg
into
cltd
mov
xor
and
sbb
inc
jp
adc
ja
pop
inc
or
inc
mov
rol
cmp
fiadds
pushf
sbb
adc
or
xchg
fimuls
or
adc
dec
cmp
sti
imul
into
dec
push
mov
fdivrs
inc
xchg
pop
shlb
outsb
inc
cmp
xchg
clc
clc
xchg
xor
inc
lret
dec
pop
or
nop
stos
dec
jae
xchg
das
sub
sti
jle
jnp
push
sbb
clc
mov
dec
rclb
jbe
shll
sub
cs
mov
xchg
ret
pop
dec
dec
mov
inc
xor
add
add
mov
push
jbe
imul
mov
push
int
adc
sub
sti
adc
mov
mov
stos
mov
clc
cmc
xor
add
add
xor
shrl
ficomps
mov
pop
aaa
clc
std
test
das
push
and
cmpsl
mov
inc
xlat
aad
in
dec
fldl2t
sub
and
or
mov
pop
xor
lret
xor
sub
mov
xor
loop
cwtl
or
movsb
adc
jge
xlat
sub
pop
xor
push
cmp
mul
inc
mov
mov
insb
or
pop
lret
sahf
nop
bound
push
insl
cmp
add
mov
sti
test
jp
jmp
sub
in
insl
xchg
scas
sub
and
jecxz
mov
gs
inc
fldt
pop
jecxz
not
push
not
roll
dec
daa
inc
dec
dec
push
mov
and
inc
inc
pop
dec
bound
or
mov
and
dec
sbbl
data16
cmp
pop
pop
fldt
add
cmp
test
outsb
mov
push
in
fs
mov
testl
hlt
sbb
das
cmp
enter
and
sahf
jnp
out
inc
out
or
fwait
dec
cmp
xchg
push
in
jmp
sub
movb
gs
repz
jg
pop
stos
fwait
mov
movsb
xchg
adc
ljmp
jb
xor
call
or
into
inc
and
sbb
loop
mov
mov
loop
jmp
cmp
fnop
and
inc
cmpsl
inc
sbbb
fwait
js
movsb
ffree
dec
pop
dec
mov
mov
pop
adc
leave
add
ret
cmp
jnp
xlat
xchg
dec
in
sub
mov
mov
adc
call
pop
mov
xchg
sub
into
or
inc
cmp
jb
sbb
popf
das
jns
je
iret
les
call
enter
mov
xor
xor
and
adc
or
xor
insb
ljmp
sbb
sub
push
arpl
pop
dec
int
inc
jns
jle
jae
xchg
pop
mov
jmp
out
subl
push
add
stos
sub
test
jecxz
mov
leave
add
das
add
pushf
xor
sub
sahf
adc
jl
loope
push
je
push
lds
pop
data16
sub
into
out
xchg
cmp
mov
test
mov
inc
mov
cmp
jno
mov
bnd
std
push
pop
mov
hlt
icebp
mov
pop
xor
add
loop
mov
sbb
mov
out
jmp
stc
cwtl
std
sbb
enter
insb
inc
arpl
into
js
stos
mov
sub
lock
sbb
or
rcll
fwait
cwtl
movsb
lods
mov
inc
lcall
aaa
lods
add
cwtl
sub
sbb
movsb
jecxz
fistpl
mov
in
fs
pushf
jno
sub
cwtl
dec
adc
or
and
push
test
push
test
sub
mov
aaa
lret
inc
jp
xchg
sbb
cmpsl
jle
fcomip
jne
les
push
mov
mov
dec
adc
hlt
insl
bound
testl
mov
add
rclb
aaa
js
and
inc
mov
bnd
adc
stos
lahf
movlps
inc
mov
loopne
cmp
dec
rol
ljmp
aad
scas
sbb
lods
cmp
lret
push
xchg
adcl
sbb
aaa
inc
or
loopne
movsl
sbb
stos
and
mov
lret
xor
jo
frstor
mov
stos
jno
mov
int
mov
les
std
scas
lret
push
jmp
cmpsb
mov
xlat
dec
dec
push
sub
sarl
cmp
dec
mov
mov
inc
pop
sti
aad
jb
jp
jle
subb
scas
add
dec
fisubs
aas
ljmp
pop
jbe
pop
scas
popf
ret
ret
mov
sub
daa
gs
icebp
add
sarl
inc
in
adc
adc
cmp
add
push
popa
pop
enter
insl
int
test
sbb
loope
ja
daa
or
fisubrl
popa
fldl
sub
add
sbb
je
clc
xchg
movl
adc
xchg
imul
dec
add
cmpsb
xchg
aad
mov
xchg
ds
push
sub
orb
xchg
test
mov
fiaddl
imul
xor
ja
sbb
xchg
dec
mov
push
in
jb
xchg
test
pop
cld
sbb
push
mov
stos
ds
cs
ja
bound
test
shlb
ljmp
and
push
shl
aam
jle
mov
push
xorl
pop
jo
and
inc
pop
fs
mov
mov
iret
dec
sub
cwtl
push
mov
sahf
lods
dec
in
and
daa
out
cmpsl
jmp
ljmp
sbb
xchg
es
imul
cmp
in
mov
ss
jb
adc
mov
sub
in
jmp
movsb
inc
xor
sub
cs
sub
add
ret
mov
mov
cmpsb
orl
jae
imul
lock
aam
mov
mov
mov
popa
cld
pop
test
sbb
hlt
and
jne
sahf
sbb
and
loop
xchg
adc
mov
je
jl
cltd
fs
aas
imul
loop
cld
xchg
movb
nop
lods
cli
xor
das
daa
jg
jmp
add
arpl
add
les
negl
sarb
adc
ret
xor
and
sahf
lds
lea
cmp
cmpsb
inc
pop
pop
sbb
or
into
sbb
mov
and
mov
stos
in
out
mov
push
outsb
flds
or
mov
and
sti
mov
mov
hlt
sti
in
mov
mov
mov
outsl
inc
loope
dec
flds
push
dec
push
sub
nop
or
incl
fwait
dec
lahf
psrad
ss
dec
mov
or
sahf
xchg
stos
repnz
dec
faddp
in
inc
shlb
nop
or
lahf
inc
mov
push
jno
int
sbb
in
mov
or
movsb
lods
clc
xchg
nop
mov
sub
add
lahf
pop
dec
mov
xor
dec
push
pop
dec
sub
lds
fadds
addr16
xor
jmp
daa
mov
jge
and
roll
ret
mov
sbb
jl
push
repz
mov
ss
jb
mov
dec
and
add
push
push
pusha
or
sbb
or
aam
int
ror
repz
dec
das
and
mov
push
insl
fildll
adc
push
fs
ret
outsl
and
adc
in
iret
lret
xchg
xor
xchg
dec
sar
shll
pop
adcb
ss
push
cmpsl
cmp
dec
ss
pushf
ret
nop
mov
test
push
push
dec
movsb
stc
and
int
mov
mul
cmc
sbb
mov
and
mov
loope
roll
mov
cmp
and
push
mov
stos
mov
mov
and
aad
arpl
cmp
mov
out
arpl
jne
sub
inc
mov
rcll
xlat
xlat
adc
lods
sti
test
mov
or
and
sub
je
and
pop
xchg
repz
and
dec
adc
mov
rcl
or
pop
sti
mov
push
mov
mov
mov
popa
aaa
mov
loop
in
stos
add
sarb
shl
out
sbb
sub
movsl
jns
adc
jmp
pushf
std
inc
cmp
pop
aas
pop
sub
lock
dec
xchg
daa
mov
or
scas
mov
push
push
push
xchg
call
mov
mull
add
imul
shrl
stos
push
sub
ud0
fcompl
faddl
dec
arpl
test
push
lret
adc
inc
push
je
test
test
fsubrp
sarb
cli
jb
mov
push
decl
lret
add
addr16
xchg
test
mov
push
pop
les
movsb
mov
cmp
lcall
pop
xchg
fwait
jns
push
cmp
test
xchg
jmp
pop
or
repnz
jns
mov
sahf
pop
fsubl
icebp
mov
push
mov
inc
fucom
out
xchg
cmc
data16
add
test
xchg
adc
xchg
adc
sub
inc
test
pop
pop
sub
addr16
mov
sub
xlat
cmp
mov
push
imul
mov
popa
fs
adc
mov
pushf
jle
or
jle
test
sub
test
shrl
iret
inc
mull
addr16
sub
push
inc
push
xchg
pop
lods
in
pop
fmull
pop
and
xor
iret
push
mov
add
push
mov
mov
push
dec
fdivl
cwtl
cmp
mov
mov
add
movsb
adc
mov
imul
cmp
fwait
lea
mov
sbbl
mov
xor
in
fwait
mov
sub
and
mov
sub
mov
sbb
mov
bound
push
mov
lea
gs
int3
cmc
mov
loop
push
and
les
test
test
jb
sbb
enter
iret
and
je
lock
cltd
les
adc
jl
xchg
movsb
mul
adc
push
cld
xchg
ret
mov
mov
lahf
jl
sbb
repz
add
lret
lea
sub
push
mov
sub
mov
es
xor
aam
jg
sbb
insb
loop
jno
and
sub
inc
sbb
in
or
pop
xchg
clc
loopne
add
push
jo
dec
ss
lock
hlt
push
xor
bound
fprem
sahf
push
mov
lret
repnz
nopl
es
or
push
or
rolb
icebp
ja
stc
call
into
pop
or
pop
lcall
mov
fdiv
sub
rcl
inc
jnp
jnp
mov
ja
les
mov
or
xchg
sahf
push
or
dec
xor
out
mov
jp
mov
mov
pushf
aam
cli
test
popf
jno
mov
cmp
andps
sbb
xor
cmp
cmpsl
xor
mov
fs
push
rorb
ret
les
fwait
and
mov
jge
mov
shll
lods
insl
fisubs
in
sahf
xchg
dec
ljmp
xchg
add
js
out
adc
stos
dec
fildll
dec
scas
into
pop
ss
pop
mov
stos
mov
das
imul
and
sbb
push
faddl
cmp
or
cltd
rcr
jno
ljmp
pop
repz
xor
jno
outsb
jecxz
xor
ror
cmp
cmpsb
push
loop
arpl
insl
rorb
std
dec
lods
mov
mov
inc
nop
jb
imul
pop
pop
negl
sahf
add
in
push
cmp
adc
push
mov
sub
xchg
inc
xorb
hlt
cmpsb
xor
xlat
cltd
mov
push
mov
cmc
int
adc
shrb
pop
mov
scas
out
shrl
sbb
mov
dec
mov
xor
pop
xchg
mov
sahf
dec
inc
cltd
dec
es
and
popf
test
mov
sub
arpl
and
mov
out
js
fidivrl
pusha
ficoms
out
jno
mov
stos
xchg
ljmp
push
in
test
in
and
jg
scas
jle,pt
rolb
insb
stos
jecxz
dec
mov
mov
or
xlat
mul
movsb
shlb
movsl
insb
dec
sub
add
push
sub
shl
xor
js
clc
cmp
xchg
orl
pop
stos
pop
aam
movsb
arpl
pop
lret
cmc
addr16
push
decb
sub
push
mov
movsl
pop
loopne
push
mov
out
sub
and
iret
sbb
lcall
nop
cmp
cwtl
and
dec
rolb
sarb
xchg
jmp
sti
push
lret
sub
shl
hlt
xor
sbb
and
sahf
sbb
mov
sti
mov
and
cli
fldt
ljmp
fidivrs
popa
push
movsb
sahf
cmc
lea
movsl
mov
mov
ja
fldcw
loopne
int
pop
gs
ja
jle
mov
int3
xchg
outsl
pusha
in
ja
gs
out
test
bound
dec
mov
add
xlat
test
out
pop
lret
testl
pop
repnz
movsl
ljmp
xchg
mov
stc
xchg
mov
leave
mov
adc
inc
loopne
hlt
mov
outsb
jmp
sub
fnstsw
push
aad
mov
adc
fisubrl
xchg
inc
loop
sub
fdivrs
hlt
pop
inc
fildll
je
or
adc
add
fstpl
insb
lret
sbb
jge
adc
inc
pop
or
xor
lret
push
and
loopew
test
out
pop
fnstenv
dec
aas
test
mov
cmp
pop
sti
or
scas
adc
adc
cld
dec
sahf
pusha
incb
bound
imul
das
sbb
sar
js
out
jbe
and
dec
mov
push
outsl
or
or
xchg
fwait
leave
icebp
pop
lods
imul
sbb
add
icebp
lock
or
xchg
xchg
push
int
and
stos
cmpsl
cmp
sbb
idivb
push
sub
adc
movsl
sub
pop
aaa
lret
inc
jo
subb
mov
adc
mov
and
out
in
ds
pusha
mov
rclb
xor
mov
dec
or
inc
inc
movl
andl
add
nop
cs
and
lret
call
sbb
jae
xlat
aaa
adc
sbb
pop
xchg
aas
rcrl
mov
xchg
dec
pop
loopne
mov
sub
sti
iret
jl
or
and
push
adc
fisubs
jbe
out
jl
xchg
hlt
mov
outsl
cmp
inc
loopne
cmp
gs
sbb
orb
adc
mov
xor
out
notb
push
mul
out
jge
fsts
scas
movsl
in
dec
lods
mov
pop
xor
int
test
add
jne
and
popa
sbb
xor
scas
outsb
or
xor
push
imul
cmp
jno
movsb
mov
inc
mov
pop
mov
mov
andb
pop
sub
ret
fdivs
sbb
pop
inc
cli
imul
sarl
dec
fidivl
addr16
push
jge
mov
fsub
mov
or
add
jg
rorb
lret
push
adc
push
mov
mov
icebp
dec
sbb
aaa
lcall
arpl
lcall
adcb
xchg
es
into
mov
ljmp
inc
push
das
adc
imul
notl
in
mov
pop
adc
stos
sbb
xchg
pusha
push
loope
and
mov
xor
fnstsw
xchg
out
paddd
dec
jle
pop
push
imul
sub
imul
cmp
and
rcrl
add
jmp
cmp
and
jecxz
repz
dec
or
fnstcw
jns
dec
add
mov
mov
sbb
lea
jle
pusha
inc
test
scas
insl
cmp
xchg
mov
or
out
scas
mov
aam
cmp
dec
ror
sub
jnp
sub
shrb
das
sub
call
insl
scas
xchg
int3
testb
and
xchg
adc
cmp
mov
std
mov
inc
lds
pop
fsubs
mov
adc
mov
cmp
stos
push
and
repnz
jle
fdivl
mov
dec
fdivrl
out
gs
mov
movsb
push
inc
jnp
cmpsb
test
cmp
jo
daa
jle
es
lahf
insb
repnz
lock
pop
jmp
fwait
iret
sarb
aad
sub
mov
dec
sub
pop
fdivrs
or
jg
fmull
into
sbb
xorb
push
inc
sub
js
push
mov
fstl
lret
mov
int3
sbb
in
mov
pop
and
xchg
repnz
jno
jns
or
mov
pop
cmpsb
xchg
xchg
sti
iret
jae
or
scas
das
das
pop
add
mov
pop
or
inc
add
lret
pusha
pop
add
icebp
cltd
add
mov
setle
pop
xchg
add
loope
insl
cld
pop
test
inc
cmpsb
aam
adc
jle
and
cltd
or
and
scas
ret
lcall
push
cmp
mov
sbb
mov
aad
dec
push
or
or
loop
out
mov
fdivp
test
jp
mov
xor
jno
imul
push
add
jecxz
push
int3
push
in
loope
sbb
mov
sub
jmp
xor
popa
fcmovnu
mov
scas
fld
or
cwtl
lods
xlat
in
negl
mov
and
test
mov
cmpsl
rclb
pop
inc
mov
fisttpll
add
mov
mov
jmp
add
add
fldl
insl
mov
daa
fsub
or
out
push
shll
and
cltd
dec
addr16
test
repz
outsb
jnp
dec
mov
dec
mov
add
mov
pusha
js
cmp
mov
cmpsb
fdivrp
cmpl
lahf
int3
mov
pop
leave
push
cmp
loop
mov
insl
mov
mov
sbb
out
jle
dec
sahf
addb
scas
dec
xor
inc
push
xchg
push
popa
loopne
and
pop
cli
inc
push
cmp
push
adc
push
in
adc
jg
mov
jno
sub
shll
rcl
pop
cmp
jmp
sti
mov
xor
lds
outsb
or
stos
mov
adc
dec
mov
sub
mov
lods
shrl
push
cmp
sbb
mov
inc
ds
mov
into
das
push
aam
inc
mov
mov
stc
adc
in
mov
cmp
jns
dec
pop
cmpxchg
sbb
cmp
pushf
push
inc
jge
imul
ds
pushf
pop
or
mov
or
jg
repnz
data16
add
cs
inc
insl
jns
inc
cwtl
fbld
push
pop
mov
xor
loope
icebp
pop
xchg
inc
les
cld
jbe
arpl
mov
sbb
test
push
push
test
pop
loopne
stc
aam
adc
mov
loope
push
and
fnstcw
data16
sbb
add
sti
or
arpl
inc
mov
js
cmp
push
mov
and
pop
out
inc
dec
push
leave
pop
stos
stc
ret
std
mov
or
push
or
inc
cmp
mov
out
loopew
sub
mov
aad
stos
aas
out
mov
fiadds
dec
das
nop
fwait
mov
push
hlt
popa
into
mov
pop
ror
mov
enter
add
sti
sub
mov
dec
hlt
mov
into
or
rcll
andl
movsl
loop
xchg
jmp
ja
push
mov
in
lds
fcmovne
neg
mov
add
lods
pusha
and
dec
pop
loope
ljmp
sbb
fmull
xor
mov
xor
xor
xchg
ljmp
mov
xor
jo
xchg
mov
or
fnstcw
movsl
shlb
rolb
inc
repz
daa
test
outsl
inc
rorb
aas
or
in
sub
stos
jne
into
pop
pmovmskb
popa
clc
cmp
adc
cs
lea
ret
in
inc
das
mov
pop
ds
popa
pop
jge
unpcklps
pusha
ljmp
hlt
add
xchg
or
dec
rcrb
stos
scas
sti
movsl
in
dec
test
xchg
dec
push
stos
xchg
inc
cltd
jae
iret
gs
jne
pusha
les
test
iret
es
sbb
enter
cmp
push
jl
or
stos
xchg
and
cmp
add
sub
ret
sahf
xor
sbb
inc
push
cli
sbb
mov
xor
mov
lods
sub
push
sub
out
lret
out
xor
push
cmc
sti
scas
adc
push
loop
sub
sbb
mov
push
pusha
out
mov
jnp
lahf
cli
jb
or
ja
sub
dec
ljmp
xchg
and
out
and
int
cmp
aam
dec
xor
lcall
sbb
int
inc
cmp
mov
inc
cld
hlt
shl
push
sub
lcall
imul
mov
jno
jge
push
cltd
mov
mov
jmp
or
inc
jb
imul
fsubrs
ss
pop
in
outsb
mov
jae
jp
lock
jle
sbb
jge
lods
fcmove
int
push
repz
dec
cmp
and
jne
out
mov
imul
in
das
subl
sahf
popf
fs
add
jl
xchg
mov
stos
jmpw
dec
add
lret
lods
aaa
inc
pop
out
lds
mov
scas
ds
push
loopne
mov
leave
sti
lods
leave
pop
mov
iret
jecxz
add
ja
and
dec
and
mov
add
jnp
mov
adc
push
inc
popa
xchg
adc
addr16
or
or
movsl
cmpsb
xor
fstps
inc
cld
mov
stc
pop
cmp
xor
ret
jp,pn
dec
outsb
add
add
sub
stos
int
loope
xlat
inc
adc
jo
sti
rclb
and
cli
inc
cmp
pusha
dec
push
dec
push
cmp
pop
flds
repnz
test
fimull
mov
push
xchg
cmp
inc
push
jne
lahf
push
push
out
or
pop
lret
add
cmpb
add
push
ja
cmpl
ljmp
scas
xor
addr16
shll
imul
push
ja
jg
cwtl
jl
int
pop
into
popf
cmp
out
popf
and
je
sarl
sbb
xlat
hlt
ljmp
mov
test
les
or
jne
xor
add
pop
ljmp
dec
aaa
fstl
push
fadds
xchg
cwtl
mov
jle
imul
sub
loope
adc
pop
icebp
pop
mov
cmp
es
mov
pusha
push
mov
jae
int
mov
jo
outsb
inc
sti
icebp
pop
scas
add
or
mov
arpl
push
sub
pop
mov
imul
nop
in
lds
lret
inc
hlt
ss
mov
and
cltd
test
mov
mov
jmp
push
insb
lret
dec
mov
das
or
mov
fwait
insb
cli
push
cmp
std
lods
in
sbb
and
fs
ljmp
sub
mov
cmp
and
inc
xor
out
xor
xchg
xor
jecxz
inc
mov
dec
das
jge
sti
adc
nop
int
adc
jbe
mov
sub
fisubl
leave
inc
xchg
sbb
fs
sbb
mov
mov
aam
dec
xchg
pop
aas
pop
jl
mov
leave
sbbl
adc
shll
pusha
cmp
jge
sbb
fnsave
test
pusha
mov
lods
jp
sub
scas
push
mov
or
add
ret
push
push
pop
das
lea
xchg
nop
sub
jecxz
mov
rcl
or
inc
mov
test
mov
sub
sub
aad
imul
push
ret
mov
ja
movsb
mov
xor
jle
rcrb
rolb
ss
add
inc
mov
mov
popa
cmp
dec
jne
inc
pushf
xchg
or
ss
aas
std
in
negl
fadd
ret
push
loopne
xor
scas
insb
jmp
in
add
pop
and
xor
pop
add
outsb
jae
push
lret
mov
and
mov
or
mov
mov
imul
stos
scas
cmpsl
jbe
test
orb
jne
pop
lea
pop
mov
movsb
mov
adc
or
ret
jmp
sbb
fprem
push
push
dec
mov
loope
cmpsl
pop
daa
imul
repz
push
repnz
outsl
xlat
enter
add
movsl
fistl
push
lret
or
push
scas
dec
sbb
mov
sbb
inc
jb
push
or
pop
sbb
jmp
rolb
sbb
outsl
and
cs
sti
iret
loope
fdivs
insl
es
mov
and
cwtl
popa
jecxz
aaa
mov
push
ja
insl
and
addl
mov
vmovdqa
push
xor
into
call
mov
psrlq
push
cld
arpl
enter
mov
push
inc
add
mov
sub
xchg
jnp
cmp
arpl
mov
sub
pop
repz
test
imul
cmc
dec
pop
mov
jno
sbb
lods
enter
loope
rclb
and
push
adc
pop
jb
loopne
dec
and
cmp
mov
mov
ljmp
push
add
and
repz
dec
addl
adcb
inc
gs
fsubs
in
dec
pop
xchg
aaa
sub
mov
pop
xchg
mov
xor
in
cmpsb
xor
outsb
and
adc
cmpl
mov
cmp
loop
xchg
lock
mov
scas
mov
jg
sub
lret
jle
mov
fdivrs
sbbl
xor
mov
mov
push
inc
fisubrs
int
cltd
jae
pop
fscale
js
fsubrs
xchg
in
inc
mov
pop
out
hlt
inc
daa
adcb
out
jnp
in
pop
push
scas
xor
cwtl
lds
push
xchg
les
loope
pop
in
mov
cmp
or
xchg
nop
fimuls
cmp
sub
push
repz
loop
mov
test
mov
test
ss
pop
aaa
pushl
inc
aaa
adc
fimull
fldcw
movhps
adc
cmpsb
dec
xchg
sti
stc
nop
mov
xlat
in
cmp
aas
sbb
roll
xchg
test
popl
aaa
dec
jp
es
inc
fcoml
sub
xchg
cmpsl
xchg
mov
add
sub
add
fmull
rorb
dec
jo
ss
inc
fucomi
outsl
icebp
xorb
psubb
push
out
mov
popa
mov
dec
jae
xor
sbbl
insl
test
pop
jne
pop
mov
xor
loop
lcall
push
daa
testb
mov
jnp
inc
jns
std
xor
sub
fwait
rcr
cltd
divb
jo
sub
jp
hlt
leave
xlat
pop
nop
in
sahf
cmp
movsl
lcall
sbb
jmp
dec
cs
jmp
movb
mov
loopne
pushf
out
xor
jno
enter
xor
xchg
cmp
mov
mov
ret
adc
xor
inc
cwtl
sbb
mov
shll
shll
inc
sub
test
popa
enter
mov
inc
fcmovnb
pop
sahf
xchg
sub
addr16
addr16
inc
enter
xor
mov
jb
dec
or
call
or
fcmovnu
cwtl
into
sub
push
fs
push
std
xlat
xchg
jecxz
cmp
decl
jp
pop
movsl
adc
push
pop
xchg
cmp
inc
int3
dec
xlat
cmpsl
loope
leave
mov
xor
adc
mov
in
push
add
xchg
jns
decl
mov
add
pop
pushf
dec
mov
imul
pop
mov
pushf
add
inc
xor
jl
mov
sub
jnp
rcll
and
mov
cmpb
sarl
jecxz
push
push
and
ds
mov
and
dec
dec
pop
jne
dec
pop
and
inc
lock
rcrl
push
mov
adcb
mov
pop
jle
js
inc
xor
btc
jmp
icebp
outsb
ds
fidivrs
mov
inc
adc
lds
ds
sbb
bound
jl
sub
stos
lods
adcb
mov
jo
fwait
daa
mov
and
pop
icebp
test
push
roll
inc
mov
mov
push
cmp
ret
pop
push
mov
aaa
jns
scas
mov
insl
int
xor
pop
xor
xchg
push
bound
outsb
repz
dec
sbb
clc
push
scas
stc
add
adc
push
fnstcw
inc
adc
pusha
mov
or
pop
mov
push
lcall
stos
cmp
mov
xchg
cmpsl
push
iret
popf
in
jmp
gs
sub
cmp
cmp
fcoml
xchg
xchg
xor
cmp
mov
jg
ss
push
cltd
mov
inc
into
xchg
adc
sbb
xchg
xor
popa
adc
pop
cmp
leave
inc
cwtl
lret
inc
pmuludq
dec
dec
or
lea
scas
scas
inc
push
xchg
mov
in
movsb
jmp
cmp
out
daa
mov
jne
lret
adc
xchg
rolb
ds
cmp
nop
fs
lods
aas
jns
sub
fsubp
je
std
push
mov
mov
sbbb
rcll
cmp
push
push
xor
stc
inc
adc
fcomp
imull
mov
sarb
cld
pusha
repz
js
pop
sahf
xor
test
test
fcmovnu
sti
sbb
jecxz
xlat
sbb
sbb
mov
cmp
jge
jg
test
and
xlat
adc
add
mov
jno
inc
rclb
out
inc
mov
movsb
sub
ljmp
loope
pusha
xchg
push
fsubrs
push
leave
pop
movsb
pop
repnz
jae
xor
adc
mov
xor
stc
ljmp
ficompl
pop
sub
mov
lret
data16
jno
xchg
and
pop
xchg
xlat
out
addl
movsb
aam
sti
mov
sbb
mov
lock
fsubr
xor
loopne
jg
xchg
addr16
cli
icebp
testl
inc
fadd
mov
stc
cmp
rolb
cmp
mov
push
inc
jle
pusha
dec
loop
sub
mov
mov
outsb
repnz
ret
and
xorl
jno
sub
mov
jno
dec
fnstcw
mov
inc
adc
fbstp
nop
sub
stos
data16
cwtl
push
lret
xchg
or
xchg
pop
cltd
loop
xor
aad
das
cmp
dec
and
mov
mov
fiaddl
and
pop
xor
mov
mov
in
popa
out
xor
xchg
addr16
xchg
aad
std
cmpsl
ljmp
add
pop
test
shl
icebp
fwait
cmp
mov
pusha
enter
cmpb
xchg
sub
dec
aad
and
adc
fs
jae
test
push
sbb
mov
jno
jo
inc
hlt
mov
xchg
icebp
pusha
mov
loopne
out
jo
gs
gs
notl
imul
jl
shrl
scas
mov
jmp
adc
call
popf
mov
loopne
or
cmpsb
adc
mov
es
aam
stos
fidivs
and
out
inc
daa
ret
sbb
in
lret
cmp
rclb
push
fdivl
pop
inc
mov
jp
fildl
mov
xor
cs
loop
scas
das
sub
imul
hlt
sub
sarl
mov
sbb
dec
jne
push
jp
shlb
std
mov
fsts
mov
push
ss
pop
jne
insl
lods
cmc
popa
ljmp
test
mov
fistpll
shrb
mov
mov
or
repnz
daa
pop
jmp
sbb
sub
jbe
mov
jge
pop
adc
aad
cmp
pop
jne
sbb
inc
loope
or
and
adc
mov
mov
cmp
ljmp
mov
es
rep
mov
mov
mov
or
daa
and
adc
lds
or
repnz
daa
mov
sbb
imul
mov
dec
mov
sub
xor
xchg
test
popf
cmp
sbb
rorl
js
enter
mov
inc
xchg
insb
mov
jo
fistps
mov
inc
addr16
stos
sti
jmp
rcrb
cs
sub
mov
push
psubq
ret
sub
enter
lea
jge
int3
sub
or
mov
repnz
adc
int
jbe
jmp
cmc
insl
cwtl
inc
inc
inc
ds
cmp
fwait
and
sub
mov
xchg
je
in
roll
push
outsb
push
mov
and
mov
cld
int
mov
test
or
sub
int
mov
push
cmovb
sti
add
xor
shrb
xor
js
sbb
sbb
insl
fwait
add
mov
daa
sti
and
repz
sub
loopne
xor
sbb
mov
mov
push
jge
popf
fadd
aas
xchg
jnp
fcomps
idivl
mov
sarl
cmp
out
xlat
push
xchg
xor
add
jl
insb
popa
icebp
lcall
lock
movsb
jle
mov
jo
ja
rcr
sub
xchg
mov
mov
hlt
aas
xor
dec
std
out
and
rorl
add
iret
xor
push
pop
out
sbb
pop
out
xchg
aam
loope
mov
jle
sarb
pop
inc
cmp
adc
lods
cmp
popa
mov
test
pop
out
jle
fldl
or
sarl
outsb
xchg
mov
and
in
xchg
inc
pop
dec
add
sub
mov
out
mov
adc
sbb
icebp
push
add
out
mov
pop
xor
adc
sahf
xor
cmp
xor
outsb
dec
mov
push
push
in
outsb
mov
aas
or
pop
icebp
cli
jl
nop
ret
cmpsl
pop
cltd
loopne
and
cmp
sub
insl
sbb
negb
aaa
dec
daa
je
jns
jae
je
pop
test
inc
xchg
fsubp
cmpsb
pop
push
aad
cmp
iret
out
daa
shll
cltd
test
addl
lret
mov
pop
cmpsb
pop
int3
aad
mov
push
mov
pop
xor
ds
sbb
test
jge
mov
incl
idivb
insb
loop
decb
cmp
daa
mov
cmp
push
push
jle
dec
adc
push
dec
inc
and
mov
in
stc
int3
fisubl
push
scas
or
repnz
test
adc
imul
sub
jg
mov
push
std
das
jnp
add
cmp
fistps
enter
das
imul
mov
rol
jb
jmp
mov
out
xchg
sarb
test
pop
sub
xchg
cmp
cltd
cmpsl
inc
repz
cmpsb
addb
push
xchg
push
xchg
pop
rorl
mov
xchg
rorl
cwtl
push
data16
jg
jle
ret
out
push
aas
lods
loopne
iret
and
mov
data16
or
jg
sub
addr16
mov
pop
call
dec
inc
inc
jae
mov
mov
ljmp
and
addr16
outsb
fs
std
repnz
push
push
push
xor
mov
inc
push
sbb
std
dec
adc
add
dec
mov
dec
lret
cmpb
mov
fstpt
push
or
jle
out
cmp
das
mov
xchg
mov
xlat
and
movsb
in
fisubl
jl
mov
out
movsb
xor
cltd
pop
push
sbb
sbb
fyl2xp1
mov
into
loopne
mov
adc
xchg
dec
stos
loopne
orl
movsl
fldcw
insb
mov
test
lahf
fisubl
jnp
icebp
cmc
jnp
int
inc
jmp
hlt
jb
or
cli
repnz
sti
xor
dec
jmp
jmp
repnz
fwait
hlt
and
pop
imul
xor
dec
fimuls
scas
fucomi
fisubl
ret
ss
out
into
icebp
mov
mov
hlt
mov
movsl
ret
nop
aam
pop
ret
bnd
pop
xor
ret
jl
fisttpll
arpl
dec
and
and
push
in
cmc
mov
shlb
push
mov
jno
movsb
mov
mov
andl
xchg
psubb
lods
pop
aam
xor
inc
and
mov
sbb
cs
add
dec
icebp
rcrl
mov
lods
adc
xor
jg
pop
out
arpl
loop
mov
mov
mov
sbb
dec
push
sbb
stos
sbb
inc
inc
push
rclb
test
inc
add
or
sahf
pop
movsb
cmpl
mov
jbe
push
xor
cltd
shll
out
sbb
pop
sub
push
das
xchg
push
fsubrs
out
xchg
mov
lds
xlat
jb
daa
push
adc
and
or
inc
push
sahf
rclb
insl
and
inc
pop
sub
fsubrp
bound
jb
cmpsl
rolb
push
sub
fisttps
sub
push
cmp
push
out
dec
fidivs
adc
and
cmp
andl
repnz
in
mov
js
dec
nop
negl
pop
jp
andl
adc
mov
inc
mov
jae
xchg
fbld
add
loope
filds
mov
or
xor
fmull
add
popf
mov
sahf
sub
out
dec
mov
sbb
mov
decb
sub
lret
sub
imul
xor
cmpsl
push
push
aas
or
mov
es
fadds
fldcw
rorb
mov
inc
sahf
push
je
inc
fmull
test
sub
pop
adcl
cmp
fdivp
ja
pop
shrl
dec
mov
inc
or
ficomps
ret
mov
dec
imul
mov
pop
mov
ljmp
fdivs
dec
out
std
or
and
lea
test
dec
cli
cwtl
xchg
cld
sub
sbbb
pop
dec
sub
push
inc
pusha
dec
adc
icebp
je
mov
mov
add
outsl
jmp
push
cmp
mul
adc
pop
cmp
cmp
ret
lahf
add
jne,pn
xor
and
cld
jmp
std
add
movsl
and
enter
pop
sti
sahf
mov
incl
ss
ja
sub
negb
lods
dec
add
jecxz
dec
mov
push
jnp
jl
ret
push
push
or
or
test
mov
je
sbb
xor
and
ret
xorb
cmp
gs
loopne
mov
cmp
out
jg
xchg
out
pusha
mov
xchg
and
sbbb
xor
mov
lds
das
push
lods
cld
xchg
rol
inc
rcrb
in
lahf
sub
sbb
into
movsl
rclb
pop
push
out
scas
aaa
mov
fcomps
cmpsl
sbb
lret
push
mov
imul
push
push
or
out
sbb
add
pop
aam
mov
data16
fdivl
adc
push
push
pop
xlat
je
shlb
sub
pop
popf
fwait
xchg
cmpl
xchg
dec
rcll
push
xor
inc
push
push
xor
xor
mov
cmp
filds
or
mov
ret
mov
test
int3
test
push
movsb
xor
fs
jno
shll
inc
jbe
cltd
mov
aam
sub
pop
inc
iret
iret
mov
mov
or
mov
push
or
mov
push
jle
dec
xchg
std
mov
loop
insb
imull
and
aaa
xchg
hlt
rcrl
loop
inc
imul
and
push
into
gs
pop
repnz
test
pushf
inc
adc
jl
ret
test
mov
push
jp
aas
lret
cwtl
rcl
mov
mov
push
inc
scas
fsubl
mov
pop
pushf
mov
in
jl
ja
mov
hlt
sbb
cld
sarl
rolb
push
fxch
sahf
xrelease
pop
sub
cmpsb
sub
inc
insb
daa
mov
add
and
or
data16
jae
fwait
aaa
mov
mov
ja
hlt
or
pop
imul
jge
inc
test
pop
test
sbb
cmp
mov
inc
xchg
orb
in
push
mov
cmp
leave
in
sub
sahf
je
fcomi
dec
ret
sti
dec
pusha
push
pop
jbe
outsb
pushf
sahf
adcb
int3
out
mov
aam
fsubp
xorb
divl
adc
jp
jmp
test
out
pop
repnz
xchg
int3
add
je
in
push
dec
lods
bound
test
repz
ja
mov
xchg
fmuls
fs
dec
add
js
sub
mov
insb
cwtl
ss
inc
or
sub
adc
hlt
js
xor
mov
mov
lock
xchg
add
sub
mov
shrl
jno
test
sbb
lahf
jno
cmp
dec
push
gs
xchg
enter
dec
mov
sbb
mov
cmc
inc
scas
rcrb
xor
xor
cmp
push
and
insl
push
jne
sub
sub
mov
adc
mov
cltd
and
add
insb
stc
lret
sti
shr
lds
push
cmp
adc
sbb
js
cmp
push
repz
leave
popa
or
jnp
lret
mov
cltd
je
fwait
clc
test
mov
dec
cmp
stos
mov
push
repnz
cmc
sbb
fldcw
jecxz
lods
rcrb
aam
nop
pushf
mov
mov
mov
push
loop
mov
sbb
adc
jns
lahf
xchg
or
cmpsb
cmp
popa
sbb
call
or
ret
out
scas
inc
outsb
xor
push
out
add
cld
pop
arpl
cwtl
fdivrl
in
rol
mov
push
sbb
push
or
enter
jmp
mov
es
scas
aad
lahf
popf
or
or
imul
and
out
inc
cmpsb
add
lods
enter
iret
testl
jle
je
cmp
movsl
push
gs
or
sbb
mov
sahf
les
icebp
rol
leave
in
popa
dec
ss
lahf
xor
push
or
mov
fs
into
repnz
jge
inc
mov
imul
xchg
sub
mov
sahf
mov
push
int
std
movsl
ds
popa
inc
mov
add
sub
or
mov
pop
push
mov
das
mov
out
jl
popa
push
pop
in
pop
add
loopne
or
sub
push
jecxz
add
lret
outsb
add
xlat
push
out
sbb
push
and
pop
ret
xor
in
xchg
cmp
mov
fwait
lods
mov
rclb
cmp
adc
sub
xor
rcrl
pop
out
aas
xlat
lret
cltd
or
cmp
sbb
jne
inc
ljmp
ret
adc
adc
add
inc
jmp
push
pop
jne
aad
cwtl
jle
mov
lcall
ret
repz
hlt
xor
xlat
inc
shll
les
outsb
arpl
push
push
loopne
imul
stc
or
mov
mul
mov
adc
jns
mov
in
add
jmp
sub
repz
lock
mov
mov
add
test
rcrb
es
cmpsb
jge
or
fcoml
mov
aam
dec
dec
xor
in
lahf
xor
fistps
add
fsubl
ds
daa
dec
or
idivb
xor
shrl
imul
mov
fsubl
adc
dec
shll
and
sub
inc
jb
popa
pop
pusha
add
test
jo
negb
out
mov
xchg
leave
or
fnstcw
das
ja
jne
loope
notl
aas
xorb
pop
xchg
cs
enter
nop
dec
sti
xchg
ljmp
fcoml
enter
ja
and
push
mov
pop
js
and
js
xchg
xlat
mov
inc
jb
out
imul
or
add
cmc
sti
jp
push
sarb
xchg
jb
add
das
scas
mov
popa
inc
repnz
das
jno
xor
jg
add
pop
cmp
xor
or
negl
inc
fwait
mov
popf
imul
cmpsl
in
lret
cli
pop
out
push
enter
inc
mov
scas
ss
mov
or
pop
sarb
mov
mov
pop
pop
das
test
lock
mov
push
jg
repz
xor
push
sahf
loop
sbb
adc
mov
jo
adc
dec
outsb
je
sbb
sub
push
and
cmp
mov
add
pop
hlt
sub
cld
sbb
jge
dec
pop
cmpsl
push
xchg
inc
in
popf
sub
test
insl
cwtl
push
pop
mov
dec
and
lahf
in
or
push
sub
div
cmpsb
sub
adc
mov
push
xchg
push
cmp
arpl
out
or
adc
mov
fadds
lcall
das
sub
ljmp
lahf
inc
out
jecxz
popf
mov
push
cmp
ljmp
push
xchg
or
popf
jmp
adc
ret
dec
jmp
xor
or
cmp
daa
and
cli
ret
cwtl
jmp
lahf
lret
push
jo
dec
aam
xor
and
fnsave
shll
nop
xorl
hlt
lahf
sbb
jmp
inc
jo
es
js
add
dec
cmpsl
add
inc
or
adc
sbb
xor
jmp
cmp
push
push
in
inc
outsb
jne
xchg
mov
sbb
fwait
mov
shlb
rolb
push
fs
xlat
xor
or
or
test
push
dec
cmp
rcrl
sub
jb
pop
roll
stos
xor
mov
mov
mov
mov
loopne
in
in
adcl
push
ja
or
jne
cmp
arpl
mov
negb
out
and
mov
and
addl
out
fisttpl
repnz
mov
lcall
lret
inc
cli
out
add
bound
and
cmp
mov
enter
jmp
xchg
stos
cwtl
daa
lock
pop
call
mov
cltd
mov
push
lret
mov
push
out
sub
lret
cmp
add
fdivrl
xor
cmp
xor
pop
data16
popf
test
rcl
out
iret
xlat
inc
aas
lahf
jne
inc
adc
xlat
enter
mov
adc
push
inc
mov
jne
js
jl
adc
cli
push
xchg
push
jge
or
test
push
bound
sub
add
or
ror
cmp
sahf
inc
inc
mov
xchg
dec
cmp
add
sti
jg
pushf
iret
mov
pop
test
cmpsl
shrb
jmp
mov
inc
cmpl
imul
loope
lds
cmc
xor
jmp
push
or
mov
pop
jno
shlb
push
scas
inc
std
jae
rep
or
lds
insb
sar
lock
fcomps
lea
mov
add
ret
pop
add
jmp
or
xlat
divb
pop
rorl
mov
aad
loop
mov
aaa
rcrl
xchg
and
loope
dec
fists
fisttps
stos
push
mov
mov
and
cmp
shl
pop
mov
movsl
cltd
out
into
and
xchg
inc
jg
rcr
scas
shlb
cmp
and
outsb
loopne
cs
fcoms
push
lods
ret
add
aad
adc
sbb
push
mov
es
mov
mov
jae
outsl
mov
loopne
leave
loope
xchg
outsb
mov
popf
in
jp
repz
lea
or
ret
jo
and
daa
pop
jns
adc
ret
mov
js
or
shll
scas
lods
aas
sbb
pop
bound
sbb
pusha
fcompl
or
int3
ljmp
cmpsl
pop
mov
jb
rcrl
jp
std
sbb
lock
lock
fisttpl
dec
mov
xlat
jl
push
inc
out
pop
cld
movl
jmp
adc
lcall
pusha
add
or
pop
or
or
insb
enter
and
loopne
adc
and
add
insl
dec
mov
pop
mov
add
mov
mov
xchg
xor
cmp
jp
inc
adc
add
aam
jge,pn
bound
cmp
fdivrs
mov
mov
stos
mov
std
outsb
push
mov
push
dec
jo
in
or
sarl
int
test
add
ret
add
dec
imul
jl
jecxz
sbb
rol
and
insb
cmc
lret
pop
inc
mov
out
xchg
ljmp
and
imul
mov
xchg
cltd
sbb
cmpsb
inc
popa
push
inc
push
fwait
in
xor
jns
stc
jns
jbe
or
iret
icebp
mov
prefetch
inc
into
lea
repz
rclb
mov
sub
xchg
mov
mov
out
jl
out
mov
in
or
aam
jns
add
mov
ret
sub
sarb
shl
test
enter
xchg
mov
ss
hlt
jmp
sarb
sbb
in
inc
clc
inc
jge
mov
mov
push
imul
mov
outsb
sbb
jg,pt
xchg
jae
aad
mov
insb
jnp
or
mov
mov
ja
roll
fisubrl
adc
sub
setne
mov
lods
in
sbb
lret
loope
and
cmpsl
cmpsl
xlat
push
sbbb
shrl
mov
sub
sub
inc
push
andb
in
in
mov
mov
repz
jp
scas
jne
push
data16
cmp
mov
test
into
xorb
mov
aaa
or
sar
cli
and
in
push
push
sbb
fstp
scas
fidivl
test
xor
fisttps
mov
push
sbb
push
stos
pop
cwtl
in
jl
adc
push
inc
ficomps
push
shll
in
dec
ret
pop
add
movsb
shlb
out
nop
imul
inc
sub
loop
mov
add
xor
sub
inc
movsl
pop
fs
cwtl
ret
cli
loop
and
add
je
xchg
xchg
dec
jle
frstor
arpl
je
faddl
fs
pushf
rorb
test
jno
xor
addr16
out
addr16
or
popl
adc
popf
pop
adc
fwait
jl
xorl
loop
rcr
adc
daa
stos
push
dec
push
or
ret
insl
rcrl
or
aas
ss
mov
das
ss
pushf
imul
mov
pop
sub
mov
jge
pop
pop
inc
stos
mov
pushf
add
or
dec
add
dec
inc
aam
mov
adc
xor
push
inc
je
enter
jg
mov
and
cs
lock
je
mov
mov
loope
sbb
ds
sub
mov
cmpsl
hlt
sub
jmp
movsl
testl
loope
in
and
iret
dec
jb
fwait
lea
mov
jp
mov
mov
inc
cmp
dec
pop
sti
adc
ja
mov
out
push
andb
nop
xor
cwtl
add
inc
sub
test
cmc
out
and
pushf
adc
xor
push
sahf
jne
mov
xorl
inc
add
cmpsb
jecxz
nop
push
mov
mov
aas
xchg
andl
ret
ret
pop
pop
xchg
pop
add
jb
dec
icebp
lods
push
xor
ret
lds
xchg
jb
xchg
mov
mov
pushf
adc
jmp
jb
xchg
jne
cmc
aas
or
push
jne
mov
adc
mov
loopne
repz
and
out
add
jle
popl
jo
sti
incb
jmp
cmpsb
in
cmc
push
cmp
rorl
in
push
mov
bound
dec
push
insb
icebp
cmp
stos
xlat
loopne
xor
mov
in
test
jge
out
sbb
std
mov
cltd
popf
push
lock
push
lret
sbb
test
mov
push
mov
or
ret
dec
fwait
mov
leave
jl
pop
ds
mov
push
cmp
jle
jp
dec
sbb
dec
jmp
pop
daa
andl
shll
adc
dec
inc
andb
mov
mov
addr16
adc
mov
bound
cli
dec
pop
inc
dec
push
inc
push
mov
xchg
rolb
xor
push
cwtl
mov
in
mov
adc
bound
pop
and
mov
lcall
adc
push
fnsave
mov
aad
pusha
sbb
movsl
cmpsb
pushl
imul
sub
aam
mov
inc
jle
sub
rcpps
js
scas
and
fstp
fnstsw
arpl
mov
ljmp
pop
and
cmp
push
cmp
clc
sar
pop
imul
xchg
pop
and
fisttps
dec
push
movsl
cmp
les
insl
popl
adc
sahf
movsb
push
pop
je
mov
jl
in
sbb
jne
jne
imul
aam
and
les
pop
mov
sub
xor
outsl
mov
imul
ds
loop
mov
out
inc
add
dec
and
sub
or
lock
xor
dec
jmp
addl
scas
jbe
adc
push
push
sahf
pop
sub
push
dec
int
xchg
jno
dec
sub
or
in
nop
inc
xorb
divb
mov
xchg
dec
movsb
cmp
sti
push
pop
add
pop
fs
cli
scas
jp
rol
or
fimull
push
inc
add
dec
ret
mov
mov
cwtl
dec
lret
add
dec
sti
xchg
dec
xor
mov
insl
scas
push
xchg
or
and
mov
sbb
push
adc
mov
pop
xor
out
push
inc
sbb
jecxz
jb
pop
je
or
mov
fimull
mov
or
cmp
sbb
sbb
lahf
hlt
xchg
cmpsl
jmp
cltd
adc
adc
les
cmp
in
mov
jbe
into
in
jnp
mov
sub
xchg
fwait
shll
sub
push
lret
xchg
mov
aad
fisubl
push
jg
mov
in
pop
pusha
pinsrw
int3
jno
push
arpl
and
lods
movsl
out
hlt
fsin
cmpsl
mov
adc
jne
sti
jecxz
xor
xchg
push
loopne
lret
in
into
cmp
xchg
sub
pop
cmpsl
fisubrl
jb
inc
imul
int
imull
xorl
rclb
add
xchg
ja
cltd
xor
sub
push
add
and
mov
stc
jbe
fld
xchg
mov
in
cmp
cmpsl
pop
stc
cmp
and
adc
and
fildl
sub
xchg
lahf
pushf
mov
xor
int3
sahf
je
xchg
cmp
ljmp
adc
sub
and
xor
sarl
dec
or
mov
xchg
mov
enter
xor
push
sub
loop
mov
addr16
and
sub
push
scas
int3
xchg
inc
lcall
or
lret
fidivs
js
lahf
add
cltd
or
lcall
repz
mov
lds
iret
out
pop
scas
ljmp
std
cmp
pop
mov
rcll
jb
movsb
mov
or
or
addb
sbb
ss
or
ret
test
imul
outsb
fisubs
out
inc
xor
xchg
into
ja
mov
lea
repnz
int
or
leave
xchg
jecxz
mov
punpckhbw
dec
push
popa
jge
in
lea
cmp
addr16
xlat
jne
jmp
gs
jae
push
popf
jns
and
mov
pop
push
mov
xor
ja
cmpsl
insl
push
cmp
ljmp
xlat
sahf
mov
dec
xchg
add
push
sbbl
dec
jae
add
fmuls
in
add
shl
sbb
cs
leave
aam
or
lods
mov
loopne
out
sbb
push
sub
iret
imul
inc
ss
outsb
lds
mov
mov
add
push
and
dec
fwait
cmp
and
dec
jb
loop
pop
lahf
lret
inc
xchg
gs
mov
pop
lcall
sti
pop
pop
scas
sbb
pop
add
sbb
cs
stos
loopne
sub
mov
inc
xchg
inc
test
xchg
fstps
cmpl
or
cmpsl
fwait
imul
or
xchg
push
in
pushf
mov
in
pop
lods
jb
popa
addr16
ret
mov
push
imull
adc
jmp
inc
bound
xchg
sub
repz
inc
xorb
adc
je
mov
add
xor
jg
movl
xlat
xor
and
aaa
cs
push
cmp
cmp
int
sbb
leave
jne
and
ljmp
xor
movsb
inc
icebp
mov
mov
imull
popf
rorl
iret
dec
and
dec
fwait
pop
roll
mov
xor
sbb
es
cmpsb
lea
roll
sahf
or
or
jne
repz
leave
stos
fistpl
sub
popa
jmp
mov
cmp
jnp
lods
or
int3
popf
das
or
cmpsl
int
test
adc
sub
cmp
dec
cmc
xor
cmp
movnti
inc
sahf
cld
fwait
in
jne
stc
nopl
sbb
add
subb
jno
ds
shrb
dec
push
push
or
sbb
adc
and
cwtl
and
jnp
insb
mov
divl
xlat
lods
jne
mov
pop
or
lea
mov
mov
imul
mov
ja
mov
and
roll
jp
test
mov
xor
cwtl
mov
and
stos
fbstp
les
test
stos
in
lds
adc
or
or
dec
stc
and
xchg
aaa
pop
fwait
rorb
inc
mov
fstsw
stos
scas
fwait
in
nop
xchg
idiv
movsb
mov
add
push
cwtl
das
faddl
aam
rcrl
jle
add
das
mov
push
les
dec
mov
mov
iret
data16
add
xor
decb
add
outsb
push
lds
popf
mov
pop
lret
mov
sbb
fnstsw
or
jnp
int3
das
cld
dec
and
stos
cmpsb
popa
mov
filds
scas
and
jne
add
fs
cmp
popa
jns
xchg
lods
rep
jae
out
cmpsb
cwtl
jns
mov
jmp
pop
mulb
and
aam
lods
push
es
xchg
xor
cmp
mov
enter
lret
sub
push
jp
dec
movsl
or
sbb
jle
rclb
mov
adc
pop
insb
xor
mov
sub
int3
lock
or
inc
add
bound
push
xchg
pop
dec
int
les
call
sub
stos
xor
cmpsl
mov
aad
dec
mov
mov
lret
fstps
rep
pusha
insl
fiadds
xlat
add
cmp
test
es
pushf
adc
xchg
sub
xchg
cwtl
fstl
shrl
add
sbbb
sub
cmc
mov
xchg
test
dec
jle
scas
mov
lcall
and
lahf
dec
xor
pop
gs
popf
loopne
mov
dec
cmpsb
ret
roll
jmp
inc
mov
popa
dec
xchg
ret
xchg
jbe
rcrl
lods
jle
push
push
adc
popa
push
aad
lret
out
nop
cmpsl
fisubs
push
insb
push
dec
gs
xchg
test
outsl
dec
bound
dec
scas
leave
in
or
imul
mov
fsincos
daa
cmpsl
imul
mov
xor
lret
xor
test
or
xor
rorb
fsub
lods
push
imul
inc
mov
push
adc
jecxz
dec
cs
dec
cli
mov
test
and
sbb
int
mov
icebp
pop
xchg
push
adc
jbe
ja
and
addl
in
jecxz
int
subl
insb
aaa
push
sbb
lcall
mov
adc
mov
mov
cwtl
push
or
filds
inc
mov
dec
jg
pop
test
xchg
xchg
loop
mov
xchg
idiv
mov
addl
xor
mov
popa
lds
std
pop
enter
lret
rsm
lods
cmp
ljmp
loope
xchg
pop
xor
adc
dec
and
jnp
adc
xchg
fidivl
aas
sbb
daa
inc
and
mov
push
mov
sub
dec
shrl
stos
adc
mov
clc
mov
sarb
mov
sbb
cmp
jmp
test
cltd
cmpsb
jle
in
clc
adc
ss
cmp
mov
aas
sub
repnz
xor
mov
lds
mov
xor
xchg
pop
loopne
lcall
sub
cmp
xor
jle
dec
push
inc
dec
xor
or
sbb
mov
adc
notb
cmp
push
das
mov
pop
sub
pop
jae
sti
inc
fdiv
incl
fsubrl
add
pop
xchg
in
imul
ret
dec
pop
jne
dec
or
push
dec
fs
cmp
adc
test
or
outsl
mov
jle
adc
pop
sub
lods
xchg
loop
loope
fs
popa
jle
adc
cld
or
sbb
mov
mov
mov
push
sub
movsl
mov
lods
push
mov
out
push
repnz
pop
mov
cmpb
sbb
push
jg
mov
dec
xlat
shrb
pop
sbb
pop
cli
jl
shl
out
fldl
cmpsl
int3
aam
add
mov
enter
test
inc
dec
sbbb
xchg
popa
cmp
mov
clc
xor
and
jae
inc
lcall
xor
jb
frstor
cmp
xor
push
lcall
jnp
popl
sub
popf
data16
xor
sbb
or
lret
andb
pop
pop
cmpl
add
push
clc
mov
pop
xchg
pop
lret
subb
lret
sarl
pop
sahf
cmp
jae
mov
push
hlt
cltd
cmc
dec
fisubs
ss
pop
jg
rcl
mov
rorl
cmpl
dec
rol
mov
out
mov
pop
mov
push
enter
into
mov
mov
mov
lock
imul
pusha
scas
push
shll
mov
lcall
inc
pop
sbb
sub
cmp
dec
int
mov
out
xchg
xchg
imul
test
xor
loopne
xor
pop
push
fstp
leave
shl
mov
mov
iret
mov
mov
and
mov
adc
mov
xchg
imul
cltd
sbb
adc
out
mov
hlt
mov
and
pop
push
nop
push
sub
or
cmc
in
cwtl
dec
jg
arpl
mov
xchg
orw
push
scas
inc
into
fnsave
jae
jp
jg
push
or
or
clc
popf
xchg
cmc
sub
jl
cmp
iret
xchg
pop
cmp
mov
cmp
cmp
cmp
sbb
mov
sbb
testl
pop
mov
idiv
js
jbe
mov
js
jecxz
call
push
fucomp
hlt
cltd
pop
outsb
jbe
pushf
out
shrb
jmp
adc
pop
arpl
cltd
mov
aas
out
leave
cltd
out
fbld
cmp
mov
fstps
call
sahf
cmpsl
lods
pop
lods
es
mov
lret
stos
mov
or
mov
mov
dec
pop
push
xchg
sbb
mov
dec
leave
pop
push
push
mov
or
scas
out
mov
ret
sub
jge
scas
or
jp
aad
push
fisttpl
movsb
pop
and
or
sbb
out
insb
insl
add
scas
repz
mov
cmp
hlt
inc
insl
aas
scas
pop
insl
cld
mov
ss
adc
lahf
sbb
pop
cmp
imul
fsubl
fldt
jno
and
ret
in
add
cmpsb
or
cld
sbb
ret
cwtl
out
ficompl
fucomi
dec
adc
insb
mov
pop
cmp
mov
cs
inc
rolb
lock
pop
mov
cmp
xchg
lds
mov
popf
pop
xor
push
popa
data16
rcr
mov
bound
daa
lds
sbb
add
shr
or
scas
js
loopne
jae
jb
sbbl
adc
arpl
push
test
jo
mov
lods
jb
in
pop
adc
fistpl
inc
push
aam
fsubp
fs
mov
addb
add
mov
call
call
mov
and
scas
jmp
or
gs
jo
xor
dec
roll
lea
inc
in
inc
frstor
nop
push
mov
or
sahf
cmp
push
mov
arpl
rorl
aad
dec
pop
mov
mov
and
sub
popa
adc
les
sub
fcmove
inc
or
sub
mov
jg
testb
pop
aaa
into
push
sub
inc
into
mov
xchg
jns
cmp
stos
xor
fs
js
rep
mov
sub
adc
push
mov
repz
repz
dec
mov
mov
mov
push
xchg
xchg
pop
imul
jle
insb
mov
xchg
xor
cmp
push
ja
inc
ss
inc
lret
ret
push
mov
adc
xchg
ffreep
outsl
insl
in
test
fistpll
mov
test
xchg
sbb
inc
popa
movsb
cmpsl
sub
mov
fldcw
jb
dec
pop
cmp
ret
add
loope
out
movsl
enter
popa
pop
loop
xor
nop
repz
mov
xor
mov
push
jne
dec
xor
loopne
daa
pop
mov
push
sub
aam
cwtl
movsl
xor
xchg
insl
mov
sub
or
inc
mov
lahf
imulb
or
add
cmp
mov
xchg
insl
push
jmp
and
sub
ficompl
inc
add
jg
lock
pop
fisubs
push
lods
loop
loope
dec
arpl
imul
jecxz
mov
xor
repz
out
xor
push
jp
push
add
xlat
sub
push
insb
sub
lock
xor
adc
jmp
pushf
jg
pop
and
jno
xor
ss
mov
jge
mov
pop
fsts
inc
xor
icebp
mov
out
jle
push
sbb
hlt
stos
push
lods
push
pop
push
add
ds
xlat
clc
push
dec
jp
pop
jg
mov
cmpsl
sbbb
inc
fistpll
lock
movsl
dec
test
pop
or
in
sub
and
in
test
sbb
push
mov
xor
je
pop
mov
xor
cmp
fnstsw
pushf
lods
shlb
scas
or
push
pop
fistl
pop
aaa
cmp
xor
xchg
mov
jle
cmpb
pop
sub
sbb
pop
inc
rorb
mov
add
add
cmc
rolb
add
mov
les
filds
dec
mov
enter
je
loop
mov
add
int3
cwtl
cmp
dec
xchg
lods
xlat
sub
or
mov
in
or
in
pop
add
iret
mov
mov
jl
rorl
sbb
lret
jecxz
scas
jl
cmp
add
sub
ja
xor
xlat
push
mov
push
mov
jmp
es
push
dec
into
push
jns
scas
lcall
icebp
jmp
and
pop
mov
fisttpll
jecxz
sar
dec
jg
repnz
es
mov
push
cmp
add
stc
sarl
addr16
repnz
mov
hlt
adc
ret
scas
fildl
or
inc
mov
cld
scas
push
pop
int3
stos
xor
jl
jb
and
pop
cmp
sbb
bound
test
cmp
adc
mov
sbb
fisubrl
pop
push
push
data16
fnsave
aaa
xor
insl
sti
inc
or
mov
mov
mov
sub
pop
pop
mov
adc
push
xlat
jecxz
psubsb
or
mov
fistps
xlat
dec
stos
loop
imull
out
push
mov
lret
out
dec
jge
stos
loope
lret
dec
aaa
mov
stos
sub
in
mov
push
lods
xor
adc
jns
sahf
cld
int
int3
cmpsl
scas
xchg
repz
fidivs
gs
xchg
pusha
cmpsb
xor
lods
insl
out
cmp
ret
cmpsb
sub
mov
mov
addr16
mov
sbb
sub
push
js
and
jo
xchg
loopne
movsb
shlb
pop
lea
in
movsb
andl
test
adc
shll
mov
repnz
jae
les
aad
sti
cli
in
xor
sar
out
push
xchg
test
out
mov
add
outsb
cmpl
and
shlb
sub
cmpsb
jmp
imul
jl
jo
aam
push
or
adc
arpl
pushf
adc
mov
dec
andl
cmp
dec
xchg
fsubl
stc
mov
sub
enter
jne
ljmp
and
or
jp
inc
or
push
fstps
mov
inc
popa
mov
add
xchg
fmull
mov
cld
out
push
pop
fucom
cmp
mov
sbb
inc
dec
orl
in
out
rolb
call
shlb
sbb
xor
fisubrl
decl
out
ljmp
jp
inc
arpl
cmp
je
rorl
push
outsb
and
fcoms
push
push
inc
ss
lods
jne
mov
in
push
cmc
es
sbb
mov
aam
sbb
cltd
pop
sub
int3
mov
mov
mov
pop
xchg
add
enter
xlat
in
mov
fcmovne
xor
rorl
inc
sbb
and
std
dec
arpl
lea
xchg
add
sbb
mulb
mov
mov
daa
insb
std
push
inc
push
inc
cli
cmp
or
inc
pop
push
sar
mov
xor
mov
movsb
shll
enter
addr16
test
or
mov
dec
adc
inc
lods
movsl
ds
sbb
test
je
in
sahf
or
xchg
shl
loop
gs
into
iret
pushf
xor
and
sbb
icebp
inc
lods
pusha
scas
xchg
xchg
xor
int
loope
mov
pop
negl
stos
movb
cmpsb
outsb
test
jmp
roll
and
cmp
adc
xor
dec
jp
xor
push
js
scas
scas
mov
sub
xsave
sub
jl
js
mov
out
and
inc
dec
sbb
jbe
loop
xchg
xor
push
lret
sbb
cli
jno
dec
aad
fidivrs
shrl
xchg
ljmp
jge
fcompp
movb
rorl
js
push
inc
xchg
call
dec
js
rclb
fmull
es
adc
stos
je
imul
imul
push
imul
push
dec
mov
add
and
jmp
sbb
pushf
sbb
mov
sarb
mov
orl
jle
xchg
repz
ja
dec
jns
mov
scas
adc
adc
inc
outsb
nop
invd
stc
push
pop
push
adc
cld
js
jae
or
ds
and
jg
xorb
cmp
xchg
cmc
aad
add
mov
xchg
cmpsl
inc
or
test
pushf
xchg
sub
insb
push
int3
es
aam
gs
adc
mov
frstor
push
stos
xchg
sti
mov
and
xor
lret
sbb
mov
addr16
outsl
adc
xor
repz
in
jge
cmpsl
or
xor
and
testl
dec
into
shrl
adc
call
stos
cmp
mov
shl
push
ret
dec
or
sub
outsl
lods
int3
js
out
push
jg
cli
movsl
inc
icebp
loopne
sub
sbb
call
test
mov
repz
sub
loope
push
lahf
pop
lods
inc
aaa
mov
xor
xor
sbb
add
in
mov
cmp
lret
out
jo
or
loop
in
xchg
sub
lods
push
xchg
mov
xchg
and
divb
mov
pop
outsb
shll
and
cs
jae
mov
ss
cmp
push
ds
bound
pop
or
imulb
ljmp
cmp
sbb
imul
mov
sub
rclb
loope
sbb
int3
inc
scas
or
imul
data16
test
in
cmp
mov
sbb
mov
hlt
daa
adc
mov
test
push
sahf
dec
add
cmp
leave
loope
pop
xor
out
dec
std
test
cli
sub
jp
dec
subl
sub
rcrb
stc
hlt
imul
xor
jnp
mov
jnp
sub
in
aad
xor
push
or
shll
add
xchg
fisubl
adc
int
mov
cli
and
and
xchg
testl
ret
jg
adc
cmp
mov
push
loop
cld
imul
into
mov
loop
dec
insl
xchg
jns
insb
pop
out
lock
add
mov
fmull
stos
bound
mov
push
push
jp
jb
fimuls
iret
cmovae
mov
jp
xor
and
mov
fwait
inc
roll
xlat
mov
mov
cli
imul
and
inc
lahf
inc
leave
cwtl
std
sbb
jae
mov
out
push
fyl2x
jnp
sub
cmp
xchg
xchg
notl
in
and
daa
jecxz
jns
loopne
jle
mov
movsb
mov
andl
xchg
xor
cmp
mov
jne
lea
sti
mov
sub
cmp
jmp
inc
push
lock
inc
adc
out
jg
cmp
pop
ret
add
stc
orb
cld
add
add
fdivl
pop
mov
lret
and
push
push
dec
mov
test
push
push
pop
fstpt
stos
mov
pop
iret
sub
fstl
or
test
or
cli
xor
mov
or
or
xchg
test
adc
fsubl
pop
dec
bound
dec
and
fimuls
cwtl
gs
call
cmp
rcrb
lret
insl
cld
or
jg
mov
mov
fsubrl
and
xchg
or
xchg
or
cmc
cmp
popf
outsb
and
insb
jb
push
mov
adc
pushf
mov
push
int3
daa
aad
shl
sbb
in
xchg
mov
pop
subl
pop
push
sahf
aad
sub
loop
into
cmp
mov
lock
xchg
mov
jae
les
sbb
add
xor
decb
jno
mov
rolb
mov
fistpll
in
dec
sbb
fxam
andb
out
xchg
jne
jne
pop
out
fwait
mov
xchg
sub
jl
mov
xchg
cmpsb
and
repnz
cmc
stos
mov
mov
push
cmp
adc
hlt
xchg
jecxz
push
pop
mov
dec
sub
lock
inc
arpl
or
xchg
lret
ficompl
sbb
mov
add
cmc
xor
dec
pop
sbb
adc
jmp
jp
cmp
mov
dec
sbb
sti
jno
and
adc
push
rcll
mov
fucomip
nop
adc
xor
into
inc
fistpl
inc
ja
push
mov
sbb
jo
into
test
sub
pop
jnp
or
movsb
jne
rorb
mov
sub
mov
aaa
push
xchg
scas
subl
hlt
stc
rcl
loop
push
pop
push
repz
or
push
mov
push
push
mov
js
bound
sub
cwtl
nop
in
cs
cmpsl
scas
add
and
outsb
add
push
add
xchg
loop
sbb
call
mov
outsb
lods
jl
jp
add
ret
cli
out
insb
add
and
pop
std
dec
bound
jo
push
cmp
jg
aad
std
in
push
orl
push
fs
jle
xchg
cmp
mov
push
arpl
cmp
ret
jg
jg
test
lcall
movsl
cmpsl
cmpsl
inc
mov
lods
aaa
addr16
stc
shll
mov
fcoms
add
in
sar
pop
and
jle
sub
add
pop
sbb
andb
dec
push
call
pop
into
adc
xor
pop
divl
mov
sbb
mov
std
push
cs
and
xor
insb
jge
push
std
in
fcmovu
cmp
aam
cmp
adc
cltd
xchg
add
jl
rclb
pop
jp
pop
test
add
dec
mov
aad
and
imul
fisttpll
pop
inc
scas
frstor
paddb
std
orb
adc
mov
xorb
mov
add
mov
jp
add
fistpl
sbb
outsb
gs
lret
les
sbb
inc
inc
jmp
cs
adc
ficoms
push
add
inc
inc
or
loop
xchg
cmc
xor
es
dec
test
and
decb
pop
mov
rcll
sbb
xchg
pop
sub
pop
cmp
jle
and
gs
gs
cmp
jp
adc
mov
int3
sub
add
scas
dec
fisttpll
mov
fiadds
cmp
aaa
sub
test
ret
xor
add
lret
fsubr
push
imul
mov
mov
xor
cmpsb
mov
sub
ds
pop
stos
adc
addl
or
cli
mulb
sti
or
xchg
or
sti
pop
and
movsb
cld
xchg
xor
mov
sub
jge
pop
sbb
add
into
fbstp
leave
jae
cli
lret
xchg
push
imul
popfw
cmp
push
or
jo
push
pusha
mov
clc
pop
ss
xor
jp
aad
insb
lahf
xor
repz
aam
ret
sbb
push
push
pop
je
popa
jl
aaa
cmp
mov
std
cmp
xchg
or
mov
cs
adc
adc
movsb
pop
or
imul
dec
fs
add
inc
fistpll
dec
into
mov
mov
jbe
lods
rolb
out
inc
pop
rcl
inc
repnz
enter
cli
incb
fidivrs
cmp
fwait
sub
iret
pop
popf
dec
ret
aas
ficoms
mov
test
dec
in
into
rorl
loopne
inc
hlt
or
sub
adc
adc
out
push
sbb
out
fldl
bound
orb
loopne
cmp
leave
mov
mov
in
int
cmp
daa
addr16
pop
sar
int
mov
jl
fwait
pop
cmpl
into
mov
movsb
adc
clc
sbb
int3
pusha
addr16
xor
jmp
das
in
jnp
movsl
inc
dec
cwtl
pop
inc
ljmp
dec
mov
iret
pushf
sub
dec
daa
aas
mov
pop
scas
lret
outsl
dec
sub
or
push
gs
js
pop
sub
cwtl
int3
mov
jbe
push
cli
enter
xchg
adc
sub
cli
rclb
aas
and
pop
stos
subb
adc
pop
push
inc
inc
pop
pop
sbb
push
fistl
sarb
xchg
outsb
jb
xchg
shl
mov
movsb
in
mov
lret
sub
adc
mov
mov
sbb
inc
aam
out
mov
repz
xor
fisubrs
div
jb
xchg
add
inc
cmp
dec
pop
outsl
adc
pop
movsl
fwait
daa
rolb
ss
mov
fsubrl
sti
fstpl
mulb
sub
aam
bound
sbb
js
or
div
jge
ljmp
dec
hlt
into
repz
jle
mov
shrb
cmc
jbe
sub
inc
mov
sbb
xchg
inc
dec
mov
in
sarl
movsb
adcl
push
pop
xchg
xchg
jne
rorl
js
lahf
cmpsl
sbb
or
lods
cmp
jmp
popf
sub
sbb
or
cs
dec
scas
xor
add
loopne
rcll
and
enter
mov
aas
lret
add
dec
jp
sar
mov
orl
add
inc
dec
in
scas
dec
cmp
jge
or
push
outsl
inc
inc
push
push
rol
imul
push
outsl
mov
mov
cs
mov
repnz
inc
fidivrl
sbb
fcompl
jns
popf
mov
xchg
xchg
jnp
mov
jb
scas
xor
popa
dec
int3
sti
in
movsb
pop
mov
jmp
sub
outsl
sahf
sbb
out
dec
outsl
xchg
xor
xchg
inc
or
cmpsb
adc
xor
jne
adc
inc
and
cli
popf
sbb
out
mov
adc
es
mov
sbb
test
daa
inc
pop
sarb
call
fcomps
rcr
jle
xchg
subl
shl
jg
ljmp
outsl
negl
lods
outsl
and
gs
test
pop
xlat
int3
pop
inc
movl
mov
push
ljmp
lret
loope
fdivrs
fistpl
dec
lds
sub
arpl
in
adc
stos
stc
mov
inc
push
out
cmp
jne
in
imul
jp
gs
mov
mov
je
gs
push
push
mov
aad
fcompl
add
xlat
sbb
adc
scas
add
cmp
imul
repnz
hlt
repnz
sarb
fwait
add
mov
adc
or
pushf
mov
sbbb
insl
jnp
add
fwait
mov
jo
push
jg
movsb
mov
ficompl
adc
sbb
pop
jns
push
rcl
aas
cmp
repz
mov
jno
mov
insb
nop
xchg
lods
mov
lcall
pop
push
mov
mov
imul
push
jno
iret
shl
ret
sbb
enter
xchg
imul
mov
jecxz
inc
lods
loop
cmp
enter
sub
andl
mov
push
out
jle
mov
jnp
dec
sarb
lea
ret
loope
inc
mov
mov
test
gs
or
mov
xchg
test
dec
and
out
stc
inc
les
push
std
and
frstor
cmpsl
repz
xchg
outsb
repz
adcb
cld
cmpl
mov
push
mov
adc
pop
pusha
pop
dec
stos
push
movsl
or
fcomps
sub
push
popf
xor
adc
pushf
test
out
dec
test
pop
pusha
push
leave
dec
ja
mov
mov
mov
xchg
push
jo
jle
lcall
dec
xchg
mov
ficoms
sbb
in
out
jle
sbb
dec
fpatan
out
or
fstp
fiaddl
std
push
lds
pop
pop
xchg
in
add
xlat
xor
pop
inc
inc
lcall
and
jp
scas
js
push
unpcklps
sub
sar
cwtl
in
xchg
daa
std
iret
popf
fsubl
push
mov
jp
sub
mov
enter
mov
cld
adc
pushf
jb
adc
jg
adc
lret
jo
push
xchg
jg
data16
mov
lcall
jg
sbb
mov
add
mov
ja
aam
std
push
jne
jle
incb
jb
jno
nop
and
mov
push
pop
fidivl
and
jmp
sub
les
mov
and
xor
iret
lcall
pop
sbb
je
aaa
mov
outsb
fstps
fdivrl
xor
scas
sbb
pushf
fcom
orl
lock
test
jnp
cmp
jae
dec
cmp
mov
sti
mov
xor
lcall
fisttpll
cmpsl
jge
cmp
fisttpl
mov
push
popa
cwtl
xchg
xor
loopne
popf
adc
xchg
dec
ljmp
in
mov
jl
das
pop
push
push
add
mov
aas
in
and
iret
jp
int3
cltd
mov
pushf
ret
lahf
scas
outsl
js
cmp
or
in
adc
sbb
jb
bound
add
fs
cmp
cmpsb
aam
pop
jle
xchg
jb
and
sub
xchg
test
add
add
push
dec
je
jno
in
jno
cmp
push
mov
or
or
push
inc
scas
inc
lods
push
push
ljmp
fwait
sti
inc
fwait
imul
inc
mov
and
add
mov
nop
fildll
dec
push
lods
xchg
out
ds
adc
jno
mov
xor
fstl
in
and
or
mov
xor
mov
rorl
out
sbb
out
pop
mov
mov
pop
scas
sub
es
scas
das
xchg
mov
xchg
push
sbb
sbb
add
idivl
cmp
xchg
lret
pop
cmpsl
push
push
insb
int
jae
sub
aas
pop
lods
jno
mov
mov
lret
mov
out
ljmp
jo
fnstenv
out
aam
jmp
gs
lds
pop
int3
inc
and
cmp
inc
push
shlb
sahf
cltd
shlb
dec
or
pop
or
lea
dec
sbb
cmpsl
mov
cmpsl
xchg
loope
test
inc
mov
mov
cmc
sbb
bound
add
lds
jns
and
jmp
fsubrp
xor
aam
dec
and
cmpsb
mov
and
add
pop
ja
rcll
call
lret
sbb
sahf
cwtl
ret
mov
xor
sbb
jp
cwtl
popa
push
out
pop
jg
dec
ja
xor
mov
jmp
movsb
gs
lods
cmpsb
js
outsb
testl
cmc
lock
sub
call
icebp
or
dec
pop
sbb
add
dec
aad
adc
add
sahf
inc
add
pop
nop
or
adc
and
or
es
aad
lea
push
dec
shll
leave
fucomp
stos
psubw
inc
fbld
adc
mov
push
sti
insb
or
or
pop
insl
sub
nop
mov
adc
lcall
repnz
mov
inc
lds
or
rolb
scas
or
jnp
mov
out
sbb
or
sub
xor
mov
cmp
cmp
push
pop
hlt
inc
stc
push
add
stc
xchg
xchg
xchg
mov
sti
cmp
fsubrl
rep
fstl
lock
fcompl
das
inc
les
mov
xchg
hlt
or
pop
rep
push
mov
xchg
pop
addr16
aad
mov
pop
insb
aam
cmp
cmc
lods
dec
inc
adc
fiaddl
hlt
les
fs
jns
es
scas
cmp
int3
jmp
push
sbb
push
lds
leave
and
xchg
sti
cltd
or
inc
fistl
dec
mov
lea
lret
ret
fiaddl
xchg
pop
insl
pop
mov
lahf
sbb
cmpsl
push
inc
leave
push
cmpsb
pop
xchg
mov
add
in
lcall
cwtl
add
xchg
mov
jecxz
loop
je
mov
adc
js
inc
add
dec
and
jge
andb
jbe
sub
in
inc
out
pop
in
mov
lcall
mov
insl
ja
jg
push
movb
jae
push
test
in
jmp
add
jnp
shll
aaa
mov
mov
mov
aas
dec
xor
sahf
mov
sbb
push
or
push
mov
in
cmp
shrl
jno
mov
cwtl
and
jmp
fwait
call
fbstp
push
pop
pop
fidivs
cltd
lods
repz
sub
pop
pop
fldl
test
sbb
test
clc
xor
icebp
xchg
fdivrl
pushf
pop
enter
pop
jns
push
and
daa
testl
pop
sub
lock
pop
or
loopne
imul
inc
movsl
loope
and
sbb
or
lock
mov
sbb
ret
mov
enter
shrb
mov
sbb
and
or
outsl
cmp
ss
cltd
sahf
pop
xor
mov
mov
lcall
cmp
xchg
mov
sub
mov
out
xchg
stos
cmp
push
iret
sub
mov
mov
sti
pop
pop
jg
sub
lods
iret
mov
jecxz
sahf
pop
subb
add
cmp
cli
fidivl
imul
inc
or
push
pop
cltd
in
ja
cld
addr16
cmp
cmp
movsb
lods
push
roll
cmp
out
in
inc
cmp
fildll
cmpsb
rclb
push
cmp
or
pop
pop
scas
mov
cmc
xor
mov
and
dec
jno,pt
fstp
mov
and
leave
mov
cmpsb
rorb
xor
push
fsubr
and
outsl
fsts
xor
cwtl
icebp
insb
xchg
aad
jl
sub
xor
sar
mov
addr16
nop
mov
or
xchg
lods
inc
lods
aam
pushf
mov
or
ja
in
mov
sbb
mov
lods
lods
sbb
xchg
movsl
sub
call
sbb
lret
rorl
and
js
cs
lods
dec
jnp
jns
scas
pop
pushf
data16
fwait
jmp
icebp
and
sbbl
fs
ret
out
fsubl
cs
mov
fidivs
cltd
test
rcr
dec
add
mov
add
mov
sub
out
ljmp
push
or
push
test
call
dec
xor
sub
jo
or
mov
xchg
js
xchg
mov
and
inc
fsub
sub
push
std
movsl
mov
adc
xchg
push
push
scas
into
xchg
adc
lcall
mov
cs
jl
sti
mov
xor
pop
bound
ret
or
cli
mov
pop
jns
jno
pop
gs
fnsave
incb
push
loop
adc
cwtl
pop
xor
addr16
pop
inc
inc
ficoml
das
xor
les
daa
xor
sub
mov
and
cmp
aas
pop
scas
mov
stos
mov
pushf
test
push
insb
mov
popf
data16
cwtl
push
xchg
xorb
dec
mov
int3
je
jl
dec
adc
or
adc
xor
push
out
out
adc
add
jbe
aaa
mov
jne
lcall
mov
jae
hlt
repz
in
adc
rcl
es
fsub
ss
insb
stos
add
push
cmp
test
lds
cmp
ss
inc
and
das
adc
mov
mov
mov
ds
lods
push
call
aaa
repz
ret
jae
daa
or
in
jge
in
movsb
and
jle
cmp
lds
lcall
stc
adc
add
stos
jg
jo
jbe
nop
mov
and
scas
inc
pop
adc
mov
cmc
aas
jns
or
notl
jecxz
imul
popf
cmp
mov
stos
mov
pop
jge
add
xor
mov
or
cli
lcall
ror
mov
js
gs
subl
cs
mov
sub
sub
test
push
xchg
filds
ret
xor
testl
lret
shr
in
aam
scas
stc
adc
push
xchg
mov
sbbb
mov
jb
push
jge
repz
cli
xchg
out
lea
push
lods
mov
cmp
iret
lret
repz
dec
js
stos
xchg
jge
adc
adc
cld
inc
daa
jbe
push
sub
sbb
lods
lret
fistpll
std
sbb
inc
js
daa
dec
xor
addr16
pop
mov
orl
popa
mov
test
addr16
mov
push
xor
pop
mov
push
out
loop
lea
rorb
ja
gs
js
mov
pop
bound
pop
mov
xor
xor
lods
push
sub
ret
xor
int3
xor
xchg
pop
sub
cmp
push
sub
adc
out
xchg
les
outsl
mov
cld
and
repz
popf
cmp
mov
insb
aaa
hlt
mov
test
add
rclb
in
mov
sbb
sbb
add
adc
or
lods
mov
inc
mov
cwtl
pop
adc
fs
cs
push
lods
sbb
mov
rcrb
xchg
dec
push
in
cmp
dec
fistpl
sub
cld
mov
jmp
mov
jmp
std
cmpsb
jno
mov
lods
arpl
push
test
out
xchg
icebp
es
addr16
sbb
ja
out
sahf
jle
out
mov
test
dec
jle
cmp
out
push
fnstsw
enter
sahf
aas
pop
js
pop
mov
cli
mov
dec
fcoms
repz
adc
lock
or
inc
jae
rcrb
out
call
jg
lods
ljmp
adc
pop
gs
scas
ficoml
sub
xor
push
test
adc
jne
mov
adc
or
out
gs
xchg
xchg
jecxz
push
add
stos
adc
mov
dec
push
lahf
cltd
jg
movsb
les
xor
in
imul
sti
loopne
dec
jne
pop
aaa
pusha
addb
popf
or
push
test
loop
dec
bound
xchg
test
mov
or
clc
das
cmp
adc
ja
vmread
movsb
mov
std
ss
push
cld
cld
test
adc
sbb
xchg
sub
leave
dec
nop
jmp
sbb
inc
mov
pop
cmc
lret
add
and
add
aas
dec
sbbb
sbbb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
push
cmp
pop
aaa
ret
cmc
je
fidivrs
std
fcmove
adc
mov
arpl
test
les
or
inc
mov
pusha
and
loopne
scas
lods
xchg
test
fidivrs
insl
into
adc
scas
fucomi
lcall
cmp
lahf
imul
fimuls
xor
mov
cmpsb
pop
hlt
imul
or
jge
pop
mov
iret
ficoml
add
imul
push
xor
xchg
cmp
and
jne
add
cmc
mov
add
gs
or
adc
mov
pop
test
xor
imul
cmp
xchg
push
into
and
movsb
push
inc
push
fsubrl
bound
push
divl
test
add
imul
pop
test
hlt
and
xchg
cli
jp
push
fimull
sbb
sbb
daa
push
mov
pop
in
cmpps
push
fists
adc
mov
mov
and
adc
mov
jge
cmpsl
in
hlt
stc
outsl
repnz
mov
push
lods
cmc
and
dec
fxch
pop
or
mov
add
jns
das
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
or
insl
add
insl
add
insl
