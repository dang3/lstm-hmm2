sbb
add
mov
cmpsl
cmpsb
mov
negl
cmp
jmp
and
fstpl
test
xchg
or
out
lods
mov
mov
int
jl
subb
and
pop
aas
std
adc
jp
test
sbb
sbb
inc
out
pop
ja
and
cmp
inc
xchg
xor
cs
into
hlt
or
jae
xor
int
in
jecxz
push
fnstsw
jl
je
add
repnz
cmc
cmpsl
sti
lds
mov
hlt
loop
ja
inc
pop
lea
pop
lods
mov
pop
jne
leave
adc
cmpsl
dec
test
movsl
orl
mov
sbb
xchg
in
fnsave
fistpll
cld
lock
sbb
ja
fists
and
fmuls
jae
xor
jmp
lcall
and
jbe
xchg
stc
pusha
pop
pop
shl
mov
je
add
or
fdiv
xor
and
in
test
inc
ja
repz
sub
gs
mov
sti
cwtl
enter
mov
inc
xchg
fistps
cmp
dec
adc
cmp
add
sub
xor
push
push
cmpsb
add
and
cmpsb
ficoml
dec
movsb
nop
jo
aaa
test
cmp
push
push
addr16
jecxz
sub
pop
add
pop
xchg
rorb
mov
and
jb
and
test
mov
mov
push
leave
cmp
arpl
mov
aam
lcall
sub
jns
cmpsb
loope
mov
push
or
pop
imul
nop
and
sub
cmpb
adc
ud0
js
mov
and
cmpsl
xor
xchg
jg
call
inc
inc
xor
mov
sarl
mov
jbe
or
dec
push
data16
mov
shlb
pop
jbe
icebp
lret
out
int
mov
adc
js
fdivs
arpl
jo
in
out
sub
popa
and
loop
pop
xor
mov
pop
and
mov
mov
je
lods
adc
mov
cli
inc
lock
stos
aas
cwtl
mov
mov
sbb
mov
aam
jg
sbb
pop
or
sti
push
push
lret
call
ss
cltd
push
sub
lods
addr16
or
frstor
sbb
or
adcl
cltd
and
xchg
cmp
loopne
ja
movsb
sar
jnp
lock
cltd
rorb
pop
aas
sbb
mov
push
xlat
int3
mov
push
inc
gs
repz
xchg
testl
or
fs
and
loop
sbb
or
xchg
mov
mov
int3
out
jns
sub
xchg
xchg
mov
jecxz
or
push
inc
mov
cmp
enter
mov
mov
lcall
imul
clc
ljmp
pusha
data16
xor
mov
push
sbb
cwtl
cmp
sti
sub
movsl
lret
adc
mov
xchg
movsb
xchg
cli
adcb
push
gs
mov
add
scas
mov
sbb
jp
shrl
xor
fldl2t
ss
scas
subl
dec
hlt
shll
jno
sub
or
fwait
xchg
mov
sbb
in
je
xchg
mov
mov
xchg
xor
stos
pop
lods
ljmp
or
push
rorb
stos
pusha
ret
lea
mov
cmc
mov
stos
mov
inc
jno
flds
insb
jl
pop
mov
std
mov
mov
scas
pop
aad
sbbl
mov
mov
arpl
in
ficoml
pop
paddb
push
xor
add
sbbb
dec
subl
jb
cmp
lret
in
mov
inc
sub
data16
scas
iret
or
movsb
add
out
adc
lds
dec
out
insb
dec
shlb
jl
adc
mov
in
movsl
shll
test
aam
outsb
mov
enter
pop
out
mov
mov
mov
repnz
sub
mov
pop
mov
adc
fisubs
and
pop
push
mov
and
add
push
nop
fists
cmpsl
seta
rol
pusha
ljmp
xchg
cmp
mov
fdivrl
ficoms
pop
push
fnstenv
movsb
cmc
sbb
fnstenv
cmpsb
mull
cltd
ljmp
mov
push
xor
fmull
jle
adc
mov
lret
adc
enter
in
ljmp
or
push
inc
aam
mov
lods
rorl
dec
clc
out
xlat
rolb
out
outsl
pop
push
push
jb
lahf
push
and
aam
sub
xchg
stc
ja
jg
add
push
mov
inc
or
int3
xor
cli
mov
dec
roll
xor
sti
push
jmp
and
scas
sbbb
cmp
push
pop
stc
pusha
outsb
mov
rorl
lea
push
mov
in
das
and
jns
es
inc
das
loope
aas
lcall
sbb
or
cmpsl
into
leave
pop
addr16
jmp
push
mov
popa
in
daa
jo
repz
inc
dec
pusha
mov
inc
cmp
push
cmp
inc
add
xor
jne
xchg
lock
push
in
xor
mov
inc
mov
sbb
mov
sub
mov
gs
xchg
pop
inc
xchg
loope
icebp
test
cmp
jg
cmc
xor
mov
in
mov
sarb
adc
fdivrp
mov
cmpsl
inc
scas
cmp
cmp
mov
add
add
negl
adcl
call
hlt
cld
or
sbbb
pusha
sbb
adc
icebp
dec
in
sbb
inc
cmp
add
and
and
sbb
or
fwait
mov
fsubr
cmp
jp
mov
subl
or
sub
push
sub
in
push
jmp
mov
in
mov
js
xor
sub
aad
adc
lock
pop
cmp
imul
xor
and
lcall
jp
mov
adc
xor
push
and
shrb
xor
sbb
fistps
ja
adc
out
insl
insb
dec
leave
ljmp
lahf
and
shlb
jg
push
int
outsb
daa
sub
mov
ja
lock
add
mov
sub
xchg
jne
popf
xchg
lea
mov
push
or
test
lea
lock
mov
movsb
jecxz
mov
je
negl
lahf
push
mov
js
dec
mov
jecxz
jbe
insl
jns
jne
mov
rorl
fmuls
mov
test
cltd
loop
nop
addr16
add
popf
hlt
and
xor
xor
mov
sbb
imul
in
movsl
out
pop
add
outsb
or
push
sub
icebp
dec
outsl
fcmovbe
sar
rcll
lea
mov
fmul
mov
xchg
nop
cmp
jmp
mov
cmc
fisubs
imul
add
sub
add
mov
sarl
hlt
cmp
inc
movsl
add
leave
adc
sbb
repz
push
aad
outsb
mov
sub
out
scas
sbb
push
add
jmp
and
fadds
scas
lds
cmc
mov
and
push
and
in
sbb
dec
jae
shl
je
movb
notl
xor
push
pop
pushf
test
xchg
hlt
jg
jmp
testb
fbld
cltd
adc
and
xchg
sbb
hlt
mov
mov
mov
push
pop
repnz
inc
jge
mov
les
and
ds
fwait
subl
shr
cmp
jle
mov
jnp
arpl
xchg
jecxz
mov
fstsw
jns
fdecstp
rorl
cmc
mov
outsb
insl
xchg
mov
aaa
clc
pop
ret
mov
or
or
addr16
dec
xchg
xchg
xor
sbb
mov
je
mov
lret
or
je
push
cmp
inc
xchg
push
jns
mov
cld
mov
push
test
loope
or
jbe
and
imul
addr16
ljmp
xchg
adcb
pop
sub
sbb
dec
or
xchg
movsl
mov
inc
orl
das
out
jl
mov
outsb
ljmp
dec
dec
push
cltd
insb
lds
pop
in
lock
xchg
and
das
shrb
fadds
in
je
mov
sub
or
and
fcmovbe
mov
xchg
negb
mov
cmp
ret
movsb
in
data16
popl
enter
sbb
adc
bound
xchg
mov
ja
movsl
ss
hlt
pop
daa
fnstcw
fmuls
dec
jb
pusha
add
je
cmc
jecxz
outsb
cmpb
jns
mov
sub
orl
jne
sahf
mov
dec
and
sub
mov
mov
push
ret
or
xor
data16
cmp
cwtl
dec
arpl
lret
adc
ret
mov
pop
jge
push
popf
mov
jne
mov
cmp
adc
inc
out
adc
mov
repnz
cmpsb
in
sbbb
dec
add
dec
sti
fimull
inc
pop
adc
fisttpll
or
rorb
cmp
lret
std
sti
jge
and
imul
dec
jo
das
lahf
pop
sub
insl
xchg
sbb
sar
push
and
lock
dec
insb
jns
or
loopne
inc
sub
les
dec
icebp
fimull
scas
scas
pushf
stos
shll
xchg
popa
mov
sub
cmp
push
dec
sbb
leave
mov
xchg
lods
add
lds
and
lods
or
mov
adc
int
or
mov
test
mov
int3
push
sahf
xchg
add
scas
mov
or
jbe
mov
movsb
dec
pop
cld
push
ljmp
pop
or
stos
lret
outsb
jnp
push
sbbb
xor
bound
call
mov
sbb
push
sarb
mov
ror
inc
jns
inc
shrl
clc
inc
hlt
sub
imull
cmp
test
mov
out
aam
in
pop
pop
dec
out
test
pop
mov
stc
xor
fsubl
cmc
mov
icebp
icebp
jae
add
xchg
pop
repz
rclw
out
mov
rcrl
xchg
pop
nop
std
dec
inc
lea
pop
and
daa
sbb
or
into
cmp
cmpsl
mov
int
push
pop
int
ds
sub
jmp
push
push
pop
addr16
cs
cmpsl
sbb
out
dec
adc
xchg
test
jle
adc
mov
jg
scas
jmp
pop
xor
adc
or
cltd
dec
inc
les
ficompl
out
dec
cld
popf
dec
sub
addr16
pop
fildll
fs
inc
loop
cli
sbb
movsb
sub
cmp
sub
xchg
fldt
pop
ss
adc
pop
shll
aas
xchg
mov
adc
cmp
push
daa
aam
adc
aas
cmp
sbb
xchg
dec
lahf
push
sub
push
mov
sbb
jmp
and
clc
out
aas
mov
cmp
loope
enter
test
pop
shll
add
flds
fsubl
lock
shll
add
and
fsubrs
sbb
test
sti
iret
sub
cli
jbe
negb
mov
aam
jge
dec
addr16
jne
leave
push
add
cmp
getsec
sahf
pop
in
test
inc
pop
or
int3
mov
nop
sub
stos
cmpsb
call
rcr
icebp
jae
mov
aam
jne
ja
mov
cmp
roll
pop
stos
stos
bound
xlat
sub
fsubr
jne
push
pop
clc
cmc
fdivr
ljmp
subb
cmp
push
dec
pop
sub
or
or
push
and
std
mov
push
jge
scas
cwtl
ret
rorb
es
inc
push
sub
cmp
out
mov
jbe
dec
sarl
orb
aas
leave
cmp
cmp
dec
lret
int
cmp
mov
inc
aad
aad
jl
arpl
jnp
in
test
imul
mov
xor
test
xchg
das
inc
pop
mov
imul
xor
loopne
mov
jl
nop
insl
fidivl
daa
sbb
pop
js
jmp
insb
sbb
pop
aad
mov
stos
dec
mov
cmp
mov
jg
or
lods
call
in
popf
add
inc
jge
jo
inc
or
sbb
in
js
into
cltd
pop
in
repnz
or
mov
xor
lods
bound
cmc
mov
out
dec
adc
pop
or
and
jne
jb,pt
jg
cmpsl
nop
xchg
jmp
in
sti
test
sub
cmp
push
mov
mov
pop
cmpsl
push
pop
scas
mov
and
int3
fstl
sub
push
dec
cmp
xchg
xor
out
mov
push
aad
jge
push
int
xchg
pushf
push
arpl
adc
mov
aas
inc
sarl
movsl
and
stc
mov
sahf
fcompl
xchg
ret
dec
lret
fldln2
ret
pop
xor
mov
test
in
out
pop
sub
imull
jmp
bound
xor
loop
sub
jmp
sub
sub
mov
int3
jnp
and
hlt
out
xchg
arpl
and
xchg
ret
outsb
cmc
sub
test
jp
out
sub
lock
rorl
hlt
cli
mull
mov
pop
data16
jge
sub
inc
adc
sub
sbb
in
outsl
and
sbb
scas
sbb
mov
cmp
adc
daa
dec
mov
xor
xor
mov
sahf
sub
leave
push
mov
lds
std
xchg
mov
or
adc
and
pusha
or
movsl
cli
push
stos
int3
lea
enter
int
dec
mov
pop
data16
and
inc
iret
xor
cmp
jp
ret
aaa
inc
sub
hlt
push
mov
sbb
and
push
sub
jo
call
xor
add
mov
xlat
popa
push
xor
popa
shlb
pusha
pop
cmp
xor
shrb
iret
jbe
js
xor
jne
dec
aam
filds
jo
jne
add
add
mov
aad
lcall
xor
push
cmp
pop
push
xchg
add
jns
std
icebp
sbb
sbb
xor
jno
push
sub
xchg
push
dec
in
out
or
mov
rol
adc
lret
and
mov
add
xlat
ret
movl
pushl
stc
mov
mov
jno
pop
dec
jno
dec
pop
sti
lods
in
sbb
lret
jno
push
aas
negb
mov
cmc
cwtl
push
inc
xor
inc
xchg
jle
sbb
imul
scas
lahf
stos
mov
bswap
lods
mov
inc
mov
test
inc
jge
push
lret
xchg
and
or
orl
xchg
sti
js
sub
and
lret
ficompl
addr16
fimuls
adc
sbb
std
rolb
add
mov
shrb
dec
mov
mov
cmp
pop
dec
mov
pop
jg
inc
xor
ficompl
stos
cmp
sub
mov
int
push
or
cltd
gs
xchg
imul
mov
dec
clc
sbb
mov
cmp
cmpsb
scas
out
cmp
cmp
cltd
jl
xchg
cs
push
inc
in
popa
mov
adc
mov
jnp
mov
cmp
cmp
fisttps
mov
ds
sbbl
out
and
add
adc
inc
xchg
sub
arpl
subb
fidivrl
jb
push
punpcklwd
sarl
pushf
aaa
adc
or
or
sub
int3
adc
xchg
and
insl
imul
adc
arpl
scas
push
xchg
out
jl
sbb
andl
bound
movsl
rcrl
mov
pop
imul
push
loope
xor
fidivs
mov
mov
test
inc
enter
jae
dec
popa
xchg
stc
cmc
pushf
inc
movsb
clc
sbb
sbb
addl
out
mov
pusha
mov
rcrl
pop
int
xchg
xchg
popf
cmp
imul
pop
les
mov
icebp
loope
les
int
icebp
jno
mov
and
fidivs
cwtl
xor
loopne
adc
add
out
xchg
andl
cmpsl
sub
clc
jno
dec
jecxz
dec
sbb
and
sti
sbb
int3
cld
jne
repz
subl
loopne
mov
shll
dec
loop
call
loop
xchg
aad
push
xchg
pop
dec
imul
stos
add
inc
xor
call
nop
popa
dec
adc
jg
adc
stos
aam
subss
lcall
loopne
data16
xor
adc
nop
mov
jns
xchg
or
push
dec
xor
push
push
and
mov
incb
incb
div
add
push
ret
mov
into
cmp
push
fimull
sub
scas
mov
stos
loopne
iret
jmp
rcrb
ds
jae
in
call
push
sub
jmp
jb
cmpsb
pop
shlb
fnstcw
jecxz
ret
test
loop
push
pop
pop
and
scas
add
sbb
cltd
and
outsb
sbb
movsb
pop
test
popf
aaa
mov
push
pop
or
add
sbb
enter
jbe
cmp
cmpsl
call
out
mov
test
xchg
jl
xchg
orb
cld
inc
shlb
nop
filds
jnp
out
test
aas
add
in
sbb
je
in
pushf
pop
xor
inc
pop
mov
xor
cmp
sub
push
jge
add
loope
cli
fstl
adc
data16
inc
nop
sbb
rol
fimull
enter
inc
mov
sbb
push
stos
jne
jne
xchg
jle
and
call
orb
mov
dec
bound
sub
adc
xchg
ret
sbbb
test
and
fdiv
fcompl
or
push
lahf
repnz
jl
push
cmp
sub
lods
outsb
stc
fs
jae
sub
mov
pop
mov
mov
ss
fadds
dec
sub
dec
dec
xchg
jnp
jge
mov
push
jp
lret
adc
mov
sub
mov
outsl
fnstsw
mov
fnstenv
adc
arpl
test
pop
data16
test
lret
xor
sub
jno
xor
insb
xor
dec
loop
or
ss
pop
je
dec
ljmp
inc
mov
mov
sbb
push
test
mov
andnps
cmp
test
pop
and
xor
addr16
mov
push
sub
mov
push
je
daa
iret
pop
xchg
and
sub
scas
dec
inc
out
lahf
adc
pop
stos
js
fcomps
loop
insb
dec
mov
or
mov
incb
data16
fdivl
xlat
dec
jecxz
das
dec
mov
rcrb
dec
pop
std
inc
clc
insl
imul
sti
in
inc
scas
jne
pop
aam
sbb
call
or
pushf
push
cs
es
call
jo
jae
aad
and
jno
mov
and
mov
jb
pushl
gs
add
jp
sbb
xor
pop
xchg
in
adc
xchg
ds
pop
xchg
xor
add
adc
push
add
movsl
sti
xor
adc
flds
enter
xchg
xlat
shl
mov
dec
fstp
cli
cwtl
shl
inc
cld
add
sbb
cmc
cmp
insl
lcall
insb
lods
inc
rcrb
and
xor
jp
jp
in
or
shrb
dec
push
clc
daa
lret
mov
int3
loope
or
in
stos
call
jp
fidivrl
dec
filds
push
dec
and
jne
scas
inc
fdivrs
mov
cld
fstl
dec
in
jmp
push
jmp
in
xor
sbb
jl
stc
push
add
or
jb
adc
scas
push
xor
cmpsl
dec
ret
enter
leave
js
jmp
lret
cmp
sub
cmp
pop
inc
sarl
jecxz
orl
inc
jp
xchg
mov
jge
pusha
sahf
dec
imul
push
inc
xor
mov
cwtl
inc
jmp
and
cmpsb
std
fidivrl
ljmp
repz
insl
push
leave
adc
sahf
and
sub
fsubrs
xor
jle
imul
mov
js
adc
divl
cmp
stos
pop
and
jne
das
adc
push
pop
mov
decl
andb
jecxz
scas
xor
pop
mov
outsb
xchg
insb
sbb
or
loop
aaa
scas
mov
negb
repnz
cmpb
lock
popa
mov
cmp
aaa
jl
or
jo
jnp
and
lds
shr
push
push
dec
fs
loop
jge
les
xchg
sub
sbb
mov
mov
fsubrp
xor
fldl
or
mov
lods
mov
jg
jnp
and
pop
push
mov
jae
xor
xchg
sub
or
pop
sub
movb
inc
arpl
xchg
or
daa
cli
pop
cmpsb
int
xor
mov
xchg
fadds
pushf
cmp
lods
and
sub
jecxz
mov
inc
shlb
cmp
cmpsb
mov
mov
mov
jne
shlb
es
int3
in
dec
sub
or
lock
and
into
xchg
push
push
iret
fimuls
icebp
mov
adc
fidivrl
out
sarb
xchg
inc
dec
shll
in
pop
sarb
jo
mov
jns
stos
mov
jnp
inc
mov
or
pusha
repnz
repnz
fiaddl
sahf
arpl
mov
sbb
pop
jl
and
cs
push
add
mov
adc
mov
add
xchg
inc
push
push
out
push
in
lods
mov
jbe
jle
fiaddl
js
ss
mov
in
mov
sub
ljmp
stc
stos
mov
lock
and
lds
shlb
cltd
hlt
jmp
out
fiaddl
xchg
cltd
sub
rep
xchg
adc
fsts
mov
test
sbb
xor
jns
xchg
sub
fdivrs
and
rolb
sub
daa
jl
inc
int
rorb
adcl
xor
push
cltd
movsl
jg
pop
mov
mov
inc
hlt
mov
decb
or
inc
mov
xchg
fsubrl
repz
and
cld
cmp
mov
sbb
divl
adc
or
ret
pop
and
fwait
pop
aaa
stos
add
iret
stos
mov
pop
jp
mov
jno
pop
jae
mov
fstpt
inc
stos
dec
imul
mov
pop
inc
xor
out
data16
hlt
cld
dec
mov
scas
dec
gs
dec
mov
inc
aam
xchg
lea
add
idiv
ret
aad
into
and
sbb
fwait
xchg
cmp
or
mov
cmp
pop
sub
popa
push
jge
add
sub
iret
inc
popf
cmpsb
test
in
and
mov
call
lret
in
pop
jnp
mov
push
dec
or
mov
adc
jo
fstpt
mov
test
push
jle
push
repz
mov
lcall
mov
xchg
pushf
loope
inc
cmpl
cmp
mov
and
shlb
lea
cmp
or
mov
push
push
loopne
jl
xor
xor
sbb
jno
jns
fcoms
cwtl
inc
sbb
mov
xchg
loop
movsb
sub
mov
mov
xchg
addr16
jmp
mov
inc
xor
sahf
movsl
jg
mov
mov
in
mov
push
fists
into
add
aad
mov
cmp
out
in
add
push
and
push
into
or
adc
out
sbb
xor
insb
lahf
mov
sub
fdivr
negl
dec
dec
and
int3
imul
mov
pop
in
mov
leave
jge
jp
aaa
rclb
enter
push
lret
sbb
out
lods
push
cmp
je
cwtl
cmp
aaa
fidivrl
push
cmp
adc
push
stos
in
pop
dec
std
or
into
mov
flds
or
cmpxchg
cmpsl
mov
cmp
in
mov
ljmp
fcmovnu
out
fnsave
xchg
stos
inc
xchg
xchg
push
mov
xchg
sbb
push
add
or
out
and
nop
inc
hlt
negl
pop
sti
xchg
dec
dec
mov
push
movb
mov
mov
cmp
inc
aaa
fmuls
divl
cmp
mov
outsl
adc
dec
mov
movsl
int3
in
int3
enter
test
leave
popf
inc
mov
jb
cmc
mov
sbb
fidivrl
jb
or
gs
fstsw
add
adc
fsubrl
xchg
cmpsb
dec
bound
je
dec
sbb
dec
and
pop
push
jae
lds
pop
call
push
sub
mov
jmp
or
in
sub
mov
imul
in
jge
pop
and
sti
mov
les
push
int
mov
jecxz
mov
push
stos
jg
and
and
sbb
shrb
and
xchg
push
or
in
pushf
mov
mov
cmpl
xchg
shll
out
loope
jae
sub
jge
loop
fwait
add
test
lods
add
aas
cs
lock
or
stc
mov
push
dec
or
xchg
fcoml
xor
push
popa
int
mov
dec
jne
xor
push
loope
inc
pop
dec
pop
pusha
jl
imul
xor
xchg
das
mov
or
lods
or
test
inc
ja
mov
sarb
push
sub
fdivl
xchg
lret
stos
sbb
out
out
insl
test
or
sub
repz
mov
jae
aad
cmp
mov
mov
test
imul
iret
insl
xchg
mov
push
cmp
loopne
les
movsl
test
pop
mov
repz
into
mov
xor
push
add
jne
inc
fimuls
push
jns
test
mov
mov
mov
fwait
mov
sub
jns
nop
cmp
int3
jle
scas
and
fstps
sub
lcall
or
xor
in
cli
push
mov
dec
rsqrtps
adc
das
adc
scas
rcrl
sti
add
add
pop
notb
ret
push
es
cmp
lahf
mov
and
fstps
nop
add
fldl
outsl
shrl
inc
ss
xor
cmp
xchg
and
outsl
icebp
insb
pop
jbe
or
insl
mov
fsubrp
mov
sti
pop
or
jo
jp
xor
sub
scas
scas
inc
mov
mov
sub
xor
bound
loopne
inc
icebp
mov
and
sbb
call
sub
rcll
subb
sbb
ret
mov
pop
xchg
in
cmp
fnstsw
jl
xchg
fsubrp
jns
cmp
movb
and
mov
xchg
cmpb
sbb
aas
call
aas
iret
cli
jns
sti
xlat
cwtl
mov
cwtl
cltd
into
in
adc
test
jmp
sub
dec
jl
movsbl
cwtl
adc
add
xchg
jg
scas
pop
into
dec
cli
mov
imul
fisttps
arpl
gs
outsb
mov
cmp
fwait
sub
inc
test
js
rcrb
jbe
xor
idivb
test
call
xchg
lods
fwait
xor
bound
popa
loope
lock
fdivs
neg
xchg
mov
push
rolb
and
push
repnz
das
fs
fs
ss
sub
leave
fists
mov
inc
jmp
mov
dec
lea
sbb
sub
test
and
mov
cmpsl
aas
in
inc
adc
sti
js
pop
daa
push
mov
dec
push
out
mov
mov
pop
jo
cwtl
shll
mov
roll
jle
cwtl
sbb
imull
push
movsl
cmp
jp
jnp
fildll
push
imul
jo
mov
aaa
cmp
xor
xor
sub
out
popf
mov
inc
rcll
xor
popa
jle
cmp
mov
outsl
dec
push
arpl
lret
jb
pushf
jno
repz
in
mov
int3
subb
fisubl
jo
jge
mov
sub
out
repz
leave
add
add
clc
sbb
dec
jnp
enter
test
cmp
cvtpi2ps
movsb
int3
sbb
jo
lock
push
sbb
aam
pop
adc
stos
es
inc
mov
and
div
ds
mov
lea
jo
add
arpl
push
test
popa
stc
sarb
fidivs
or
fimull
bound
data16
movsl
inc
loope
sar
aaa
push
insb
loope
ljmp
pop
fs
push
mov
aad
aas
stos
push
pusha
jno
pop
ror
into
mov
out
fistl
in
xchg
popa
xor
in
nop
insb
sahf
cwtl
nop
add
mov
jno
sub
and
dec
imul
mov
stc
arpl
mov
movsl
adc
and
push
adc
fcoml
shlb
ror
dec
push
and
jbe
mov
sbb
je
fwait
mov
dec
and
dec
enter
pop
stc
mov
stos
lcall
inc
cli
dec
std
adc
fmuls
loopne
jb
cmpsl
mulb
mov
or
lret
shl
xchg
gs
or
stos
ret
ret
mov
lahf
add
pushf
arpl
dec
mov
jecxz
cmpsb
es
xchg
cmp
sub
rcrl
scas
sbb
sub
mov
ss
es
sub
mov
loopne
in
mov
cli
in
jne
mov
sub
sti
mov
cli
and
dec
loop
jae
lods
mov
hlt
mov
test
ss
inc
or
sbb
xorb
pop
cmp
xor
lods
fwait
not
and
push
jmp
mov
add
inc
inc
lods
in
fwait
sub
sbb
testl
inc
mov
xorl
pop
popa
mov
cmc
sbb
push
or
mov
jb
lret
push
cmpsb
cmp
cs
mov
test
rolb
add
rcl
test
xchg
repz
sar
mov
fmuls
sub
push
cmc
lock
insb
xchg
pop
pop
rolb
sbb
pop
loop
jbe
jns
movsl
loop
mov
nop
jg
mov
mov
jecxz
or
fmul
add
fcmovnu
je
mov
fisubl
dec
insl
dec
jnp
cmpsl
xor
inc
mov
sub
jno
movsb
rol
shlb
jo
pushf
nop
loope
sbb
inc
sbb
in
fcoml
sbb
jne
cld
lods
divl
dec
mov
inc
rorl
leave
and
mov
fldt
sbb
insl
stc
scas
enter
mov
std
jl
xor
and
es
or
inc
ret
adc
je
xchg
out
cmp
fdivl
popf
fldt
mov
adc
lcall
pop
outsb
dec
pop
add
and
pushf
xchg
js
sbb
movsl
lock
push
xor
iret
scas
in
jg
mov
xlat
push
ret
xchg
outsl
imul
psubusw
adc
jmp
mov
call
xor
xor
push
mov
add
pop
inc
das
jo
nop
jno
addr16
fisubrs
inc
cmc
or
mov
cmp
mov
pop
dec
push
stos
jecxz
xor
dec
sub
call
pop
jp
rclb
pop
gs
mov
jmp
inc
cmc
call
stos
xchg
sub
push
ret
repz
xchg
shll
push
daa
rolb
push
adc
dec
loop
sub
dec
call
pusha
xchg
jg
push
dec
int
cmpsb
mov
outsl
cmp
push
inc
and
mov
mov
sbb
xlat
bnd
adc
loope
and
std
adc
push
scas
sahf
in
xor
cltd
pop
loopne
mov
mov
sub
frstor
cmp
ftst
mov
push
ljmp
pop
xor
mov
cwtl
dec
fcmovb
stos
push
or
add
and
fnsave
sbb
gs
add
lret
adc
jge
pop
jae
cmp
insb
ret
frstor
fistps
pop
int3
out
mov
ss
icebp
pop
stc
jge
loop
cwtl
push
xchg
fidivrl
gs
fs
scas
xchg
popf
mov
stos
jne
xor
aas
fisubs
sbb
stc
popa
pop
mov
sub
mov
fsubs
cmp
jg
inc
int
and
shll
lds
mov
sahf
adc
daa
and
xor
xor
roll
pop
sub
enter
out
testl
mov
push
lcall
push
imul
cli
dec
std
cmpsb
push
ret
js
xchg
cwtl
mov
test
jns
jle
xchg
notb
dec
test
in
adc
adc
popl
popa
xor
test
sti
xor
aaa
sub
dec
js
add
pop
jns
push
mov
push
dec
insl
ljmp
sbb
and
arpl
jne
xor
sub
push
mov
push
scas
je
mov
fadds
cmp
or
daa
cli
push
sbb
jecxz
aad
inc
imul
or
jae
inc
scas
fs
dec
and
mov
out
in
push
ficoml
insb
xchg
inc
cmp
sub
nop
mov
jno
push
xorl
repz
dec
mov
test
fs
gs
and
cmpsl
scas
cli
inc
fisubs
push
test
dec
test
lahf
cmpb
popf
sti
movsl
jns
scas
idivl
scas
imul
mov
xor
add
add
sub
dec
ret
stos
push
jno
inc
fisubrl
mov
into
out
out
sub
cmp
test
in
stos
imul
test
mov
pop
hlt
push
fwait
sahf
fbstp
push
lock
push
cmp
xor
out
std
cwtl
test
jmp
and
mov
sbb
dec
jge
sub
movsb
adc
call
mov
movsl
cli
stc
int
cltd
cmc
loope
aaa
sarl
lds
fsubrs
mov
add
mov
or
mov
rolb
sahf
and
push
test
jmp
test
xor
out
pop
pop
adc
das
cltd
and
jno
jl
or
or
xchg
pop
cli
sbb
and
out
rcll
insl
loop
mov
push
push
gs
dec
loopne
pop
fimuls
jbe
cbtw
adc
mov
jns
je
test
add
rclb
js
pop
cmp
sbb
insl
push
or
mov
and
xchg
jo
sahf
jl
mov
add
xor
test
sbb
das
popa
scas
dec
notl
sub
adc
incl
stos
lahf
mov
pop
std
lret
lds
test
stos
popf
out
repz
mov
mov
jne
and
test
nop
cmp
imulb
repz
lret
add
aaa
sbb
and
sub
fdiv
repz
lret
pop
cmc
xchg
lret
add
cmp
jo
imull
addl
dec
xorl
stc
int3
lret
insl
ljmp
fs
mov
in
lret
add
xor
sbb
ljmp
fbld
aas
shlb
icebp
or
sub
lods
xor
sub
cwtl
add
int
xor
sub
stos
jmp
push
arpl
test
push
cmp
ret
inc
shrl
test
repnz
movsl
loop
dec
dec
mov
out
inc
stc
dec
lock
insl
mov
int
cmp
das
ss
inc
mov
mov
mov
mov
or
call
xchg
rep
scas
shll
lods
cli
int
push
imul
insb
clc
push
xchg
adc
mov
test
loope
ds
pusha
mov
cmp
sub
or
outsl
pop
ret
mov
inc
push
sub
cmpsl
addl
ss
mov
ja
sbbb
jle
sbb
and
inc
loopne
inc
xor
clc
lea
int
loop
mov
cld
inc
mov
add
push
imul
shll
test
mov
mov
cmpsb
xor
stc
and
cs
and
mov
pop
dec
adc
popa
dec
stc
push
cli
sar
out
mov
jecxz
or
aaa
add
mov
sub
popf
fwait
dec
sbb
mov
xchg
xchg
int3
sbb
mov
pop
pop
jle
add
dec
push
fisubl
sbb
push
aas
es
stos
jns
push
inc
cmpb
popf
icebp
cmp
xor
xor
int
adc
outsb
or
test
mov
nop
sahf
mov
mov
in
callw
insl
mov
push
imul
test
and
sbb
jbe
test
mov
lds
xlat
add
insl
shl
mov
lods
xchg
jge
mov
das
inc
cs
mov
xor
cmp
jecxz
orb
shl
xorl
xchg
repnz
and
aam
outsb
jmp
mov
sbb
addr16
mov
int
lds
rcll
mov
pop
addr16
mov
cmp
fcmovu
or
test
fwait
add
imul
jl
add
movb
mov
or
cwtl
dec
sub
push
inc
scas
mov
pop
xchg
loop
loopne
push
pop
leave
mov
fwait
aaa
sbb
mov
xchg
or
and
ss
data16
cmp
lsl
xor
fs
arpl
loopne
mov
popa
or
jecxz
push
push
faddl
mov
mov
les
pop
adc
pop
cmp
pop
push
dec
dec
xchg
and
scas
enter
inc
pushf
cmp
xor
in
fsubs
push
hlt
mov
repnz
arpl
lods
xorl
lea
sti
fiadds
call
dec
mov
add
sbb
fsubrl
outsl
mov
mov
sbb
adc
push
imul
sub
dec
cmpsl
movsb
jecxz
sbb
mov
data16
xor
sbbl
gs
test
pop
das
inc
push
movsb
mov
out
xchg
add
xor
or
dec
mov
add
sbb
mov
imul
dec
dec
imul
jmp
mov
pop
mov
ret
mov
adc
jbe
hlt
bnd
stos
mov
pop
loope
out
or
and
dec
mov
and
call
rolb
lock
lods
fwait
cmp
cld
insl
lret
and
loopne
notb
mov
sbb
xchg
and
xor
sahf
loopne
jmp
shl
cmpsl
jmp
mov
sub
adc
aad
pop
cmpsl
outsl
push
das
gs
cmc
inc
or
jmp
jns
cli
mov
das
les
push
mov
jg
fcoms
add
pop
sbb
jo
push
push
pushf
pop
test
stos
repnz
imul
and
mov
sbbl
in
adc
rcrl
or
mov
sbb
lret
xchg
inc
das
ja
mov
adc
xchg
dec
icebp
cmp
pusha
inc
lcall
enter
or
cmp
or
hlt
pop
mov
dec
call
inc
xchg
jo
arpl
test
es
push
enter
icebp
pop
outsb
inc
cs
rorb
xor
stos
jecxz
repnz
or
push
testl
mov
jno
inc
push
push
lods
data16
pop
je
mov
fsubrl
sbb
es
xchg
adc
and
nop
ja
rcrl
push
std
jae
clc
rcrl
dec
rcrb
enter
mov
adc
fisttpl
and
sbb
xchg
fiadds
jp
ret
push
cmpsb
fsubrl
sbb
jo
xor
sub
in
sti
ss
or
pushf
insl
lds
test
or
mov
iret
rclb
mov
jl
shll
icebp
push
fidivs
xchg
lret
es
xor
imul
add
stc
cmpsb
shll
dec
or
xor
hlt
mov
and
adc
inc
sbb
mov
ret
push
sbb
mov
mov
out
cmp
dec
lods
pop
aad
cmc
int
cmp
adc
cld
lds
xchg
mov
xor
movsl
mov
es
xchg
leave
jmp
pop
notb
jge
call
or
ds
dec
xchg
push
lods
bound
mov
push
cmp
hlt
push
movsl
decl
leave
lds
or
imul
sar
pop
jb
ja
inc
adc
pop
sub
sub
inc
cmp
jb
popa
stc
stc
mov
lret
lds
scas
rcrb
pop
in
xchg
daa
push
fldenv
leave
cmp
push
jmp
dec
nop
mov
daa
xchg
mov
pop
arpl
stc
inc
cmp
cmp
out
mov
and
adc
outsl
pop
ret
pop
mov
loope
sub
dec
mov
cmp
adc
scas
cmp
incl
out
push
daa
imul
xchg
js
push
mov
imul
dec
popf
frstor
lret
out
dec
pop
fldt
mov
into
xor
pop
and
dec
sub
ds
fdivr
or
xor
subl
jl
add
push
loopne
stc
mov
ds
sbb
push
sbb
ljmp
je
movsl
aad
hlt
push
stc
cli
mov
jmp
leave
test
out
or
rcrb
jp
mov
adc
xchg
out
add
xchg
add
int
mov
outsb
outsb
xchg
sbb
mov
inc
sub
fwait
notl
inc
loopne
mov
fsubp
inc
push
loopne
scas
xor
test
mov
mov
xchg
xchg
sbb
push
in
in
mov
ss
sbb
jle
push
outsl
xor
or
imul
pop
out
nop
xchg
negl
testb
vmovdqa
decb
xchg
jo
out
xchg
xlat
sbbl
adc
xor
sbb
arpl
inc
sbb
push
mov
sub
xor
loope
stc
mov
sub
sub
xlat
xchg
scas
mov
test
mov
add
lcall
add
fcmovb
push
ja
jmp
lret
leave
push
imul
inc
pop
or
push
inc
loopne
repz
divb
jle
inc
mov
addr16
inc
cmp
push
or
or
mov
jnp
pop
rcrb
xor
dec
stos
dec
mov
or
mov
dec
bound
gs
push
in
sahf
insl
ja
lock
push
push
pop
push
outsl
inc
test
clc
mov
jbe
sub
sub
fstpl
or
sbb
xchg
inc
ljmp
adc
shll
sub
ja
mov
test
mov
in
pop
addr16
insb
pop
jp
add
dec
and
dec
pop
enter
xchg
outsb
push
push
xor
testl
xor
cmp
nop
neg
mov
repnz
pop
mov
cmp
xchg
stc
and
or
cltd
inc
push
paddsw
dec
mov
pop
sbb
cmc
sub
mov
push
xchg
mov
inc
test
xor
mov
dec
popa
xor
or
dec
jg
push
lds
inc
mov
rorl
sbb
popf
jmp
and
jne
cs
repnz
push
push
aaa
dec
in
mov
xor
push
les
push
cmpsb
lock
adc
xchg
in
xor
aaa
add
aas
or
xor
dec
dec
adc
movb
jo
out
jl
sbb
cmc
mov
or
rcl
mov
xchg
and
inc
mov
mov
sub
sahf
xor
mull
inc
and
imul
mov
jmp
loope
or
iret
lods
jmp
in
andl
pop
add
lods
pop
lret
cwtl
int
inc
stos
lods
sbb
push
push
xor
testl
pop
inc
lea
or
in
fst
in
push
std
mov
push
rcrb
mov
cld
cmpsb
pop
lock
jp
mov
ret
idiv
mov
stc
xchg
fistpll
lcall
cmp
pop
out
and
mov
xlat
sub
inc
mov
jno
dec
loope
and
mov
inc
sub
inc
adc
insl
stc
adc
cmc
sbb
cwtl
adc
out
cmp
ficompl
loope
mov
jg
sbb
shr
sbb
cmp
mov
jg
jp
test
jecxz
lods
iret
int3
jmp
jecxz
adc
and
aad
mov
jmp
adc
lahf
jne
jecxz
mov
loope
bound
repnz
arpl
stos
inc
jae
pop
es
aaa
pop
imul
cwtl
push
fwait
test
in
enter
sub
mov
cmp
je
in
cmp
in
pop
mov
lret
xchg
or
lcall
lock
cmp
outsl
push
ss
movsl
pop
fldenv
in
dec
mull
pop
cmp
inc
iret
xor
fsts
icebp
dec
adc
arpl
push
and
lods
cmp
test
inc
addr16
out
xchg
daa
pop
jge
in
ret
leave
jle
sub
jge
out
inc
into
cmpsb
nop
cmc
jb
jecxz
mov
in
pop
rol
mov
add
adc
jns
fbstp
push
out
sarl
jmp
jns
icebp
and
push
pusha
pop
lahf
inc
mov
scas
aas
push
add
scas
jno
sbb
sub
push
aam
sub
mov
mov
loopne
mov
cltd
xor
and
jle
push
cmp
imul
test
mov
test
iret
xor
jmp
aam
adc
xor
mov
pop
xor
fincstp
jge
cli
cmp
mov
cmpsl
daa
xor
cmp
aam
jbe
add
jb
enter
mov
subb
adc
push
push
out
jo
inc
fwait
outsb
lcall
ja
stos
jl
lds
insb
cli
push
jno
fs
imull
in
lcall
or
fisubrl
add
roll
repz
xor
cmc
xchg
sbb
add
stc
sar
cmp
xor
mov
loopne
push
loopne
mov
push
es
sub
jb
cld
xchg
xchg
lds
aam
sub
inc
cmp
and
ljmp
out
fnsave
iret
scas
inc
clc
fs
in
in
or
mov
fsubrp
xchg
or
stc
mov
adc
into
pop
add
out
pop
aaa
dec
das
cmp
and
hlt
repnz
push
inc
xlat
pop
sbb
pop
fidivs
push
push
jmp
pop
mov
in
add
pusha
inc
and
das
loopne
gs
cmpsl
iret
xchg
push
or
mov
iret
loope
mov
xchg
pop
mov
xchg
lret
jge
aas
sbbb
ljmp
test
push
inc
add
in
dec
mov
dec
mov
or
test
or
push
cmp
rcrl
stos
sbb
fcoml
mov
subb
stos
popl
or
and
insl
es
stos
jo
leave
jns
mov
or
jo
add
jge
shll
mov
ja
notb
lahf
mov
dec
es
push
jno
jl
fidivrs
adc
loope
push
movsl
and
mov
mov
subb
xchg
stc
lahf
sbb
sub
mov
xor
xor
pop
or
xchg
in
mov
fs
sbb
mov
sbb
mov
inc
inc
scas
outsl
cmp
frstor
sub
sbb
and
dec
rol
jp
xorb
insl
push
fdivs
or
fildl
xor
ror
gs
mov
outsb
push
call
int3
cmp
inc
add
and
adc
push
xchg
inc
jo
ret
shrl
xorl
fisubrl
mov
mov
mov
enter
popf
push
iret
ret
hlt
or
pusha
orb
adc
add
or
dec
ss
xchg
jmp
or
cli
das
dec
in
push
push
jbe
dec
mov
cmp
lods
mov
lret
cmp
jmp
inc
outsl
push
inc
shll
mov
mov
clc
and
cmp
jecxz
xor
stc
shlb
data16
sub
cmp
adc
stos
or
and
int
sbb
pop
xchg
and
sub
loop
stos
xor
cltd
mov
cmp
movsl
jns
ds
pop
sbb
iret
dec
inc
push
or
push
pushf
xchg
outsb
notl
je
or
mov
fsubl
enter
mov
scas
xor
inc
aas
bsf
cmp
sub
leave
fisubl
pop
in
jbe
mov
test
fdivs
xor
sub
adc
push
inc
cltd
fildll
xchg
sarl
movsb
adc
dec
pusha
inc
lret
out
push
push
sbb
push
mov
and
iret
jnp
sub
add
arpl
mov
cmpsb
stc
mov
shlb
sub
xor
mov
sub
xor
mov
pop
shrb
cmpsb
xchg
hlt
int
ret
aad
push
mov
push
jb
jo
mov
xchg
dec
push
dec
ror
pop
pop
inc
inc
mov
stos
xchg
jp
ss
adc
lret
jmp
out
mov
push
js
call
daa
add
in
lods
sahf
sub
or
movsb
ss
in
inc
les
rorl
sub
rcl
adc
cmpsl
fidivrs
sub
jge
mov
cmpsb
dec
sbb
fistpll
ds
and
enter
mov
cmpsl
inc
jbe
xor
jg
rcrb
mov
sbb
xor
cmp
cmp
in
jb
sbb
fmul
scas
mov
sub
push
inc
cmp
cs
sub
push
xor
clc
or
imul
cmpsb
sbb
xchg
or
jle
pop
hlt
dec
push
push
cli
test
pop
push
std
mov
xchg
in
push
movsl
mov
mov
pop
leave
jmp
imul
aam
pop
vmovaps
mov
in
pop
lahf
mov
push
lods
dec
mov
scas
mov
mov
push
jb
nop
adc
pop
xchg
jnp
repnz
out
daa
fimull
fnstsw
addr16
imul
sbb
fisttps
xchg
lahf
call
mov
bound
aam
fbstp
mov
leave
sbb
xchg
lods
xor
inc
pusha
jnp
fisubs
jmp
push
and
ljmp
aam
push
adc
mov
outsl
lret
lea
cs
hlt
scas
arpl
add
test
lcall
xlat
sub
leave
inc
fistpll
xor
mov
xchg
inc
int3
dec
call
aaa
dec
xchg
cmc
and
jg
sahf
ret
aaa
std
inc
xor
push
ljmp
add
hlt
add
mov
rorl
lret
jl
data16
outsb
cmp
in
xchg
cmp
or
jecxz
daa
sbb
insl
in
adc
ljmp
push
dec
stc
sub
outsl
add
shlb
loop
jne
in
outsl
mov
xor
mov
fs
lods
pop
dec
je
sbb
sbb
cmp
arpl
cwtl
mov
pop
adc
lret
jne
jae
sar
lea
mov
es
pop
outsl
xchg
mov
xchg
pop
cli
ja
push
xorl
or
or
or
xor
xorb
rorl
cmp
push
jle
loopne
loopne
fists
and
jnp
sbb
pusha
leave
and
and
imul
pop
fimuls
fwait
push
loope
inc
sbb
fiaddl
bound
sbb
mull
cmp
jp
cltd
mov
pop
loopne
fidivs
pop
pshufw
and
out
call
movsl
and
sub
adc
or
xchg
cmp
popa
pop
or
nop
test
stc
add
or
mov
ret
inc
lahf
cltd
pushf
clc
outsb
movsb
jo
jg
inc
lcall
movd
sahf
xchg
test
dec
adc
mov
ja
adc
xlat
pop
mov
mov
scas
pusha
xchg
vmovdqu
sbb
and
ret
dec
stos
fidivs
jl
pop
inc
ds
sahf
lcall
jno
dec
movsb
jg
sub
push
or
pop
add
subb
cwtl
xchg
sub
out
jmp
mov
adcl
sbb
test
cmpsl
mov
jmp
inc
stc
stc
pop
mov
pop
add
mov
mov
sub
popf
adc
int
nop
nop
stos
xor
pop
test
sbb
xor
adc
push
dec
cld
or
add
push
pop
inc
push
or
adc
test
negl
ss
repnz
cmp
push
cs
add
call
and
push
js
inc
cltd
and
into
rclb
popa
mov
mov
lcall
test
call
out
add
pop
or
jecxz
sbb
sbb
dec
icebp
xchg
shlb
mov
into
in
outsl
decl
cmpsl
adc
xchg
data16
jg
jg
outsl
fimull
daa
xor
aad
mov
cmp
enter
mov
insl
mov
pop
or
adc
repnz
add
sbbb
cmp
cmp
ljmp
jg
mov
xor
fcmovnb
adc
rcrl
scas
ds
mov
negl
fnstsw
divb
push
mov
xor
xchg
mov
jle
movsb
lahf
pop
ljmp
and
roll
ds
push
leave
pop
cmp
pop
pop
mov
pop
loopne
inc
mov
cmp
lock
outsl
add
sub
nop
andb
addb
sbb
arpl
std
test
xchg
add
or
aaa
pop
xchg
in
cs
jno
mov
pop
ss
popf
into
pop
fildll
cmp
pop
push
mov
adc
out
shrb
out
add
shr
cmpl
cmpsl
mov
sbb
js
in
mov
xchg
sbb
push
cmp
fists
and
lock
xacquire
movb
popf
aam
xchg
sbb
mov
xchg
lcall
daa
aas
add
andb
sar
pop
mov
enter
jmp
loop
test
rorb
inc
ja
jnp
sbb
lods
shl
les
aad
ret
loope
pop
mov
mov
dec
push
icebp
fidivs
imul
mov
xchg
repnz
push
mov
out
ja
push
push
sbb
mov
adc
mov
ret
push
aad
ss
stos
dec
cmp
adc
ss
lea
pop
repnz
push
xchg
test
jmp
xchg
xorl
xchg
scas
push
add
fldl
popa
pop
in
subb
ja
test
imul
sarb
xchg
daa
adc
mov
cmpsb
xor
out
xor
dec
test
jecxz
pop
jg
mov
jae
mov
jae
arpl
sub
jmp
cmp
iret
pop
sub
vcvttps2dq
test
or
test
mov
addl
in
xor
mov
cwtl
dec
popa
fildl
cmp
sub
push
dec
les
xchg
fwait
inc
js
jbe
out
or
and
mov
jnp
pop
add
inc
xchg
adc
mov
fistpll
push
dec
push
xor
out
cmp
xlat
add
gs
jg
cmpsb
out
lcall
cmc
out
fwait
pop
out
insb
xorl
and
icebp
aas
dec
sbb
outsb
aaa
or
push
xor
sub
mov
fadds
fisubl
or
pop
sub
sbb
int3
xchg
fmull
addr16
loope
lods
leave
sbb
repnz
adc
je
jno
std
and
mov
or
and
enter
xchg
mov
sbb
add
inc
test
mov
mov
xchg
fs
jmp
test
sub
pop
xchg
ds
imul
fsts
sbb
jg
mov
icebp
sahf
cmp
mov
outsl
scas
movsb
lcall
ret
lods
mov
test
mov
cmc
push
sbb
sbb
and
xor
pop
xor
jo
adc
mov
into
shll
sub
arpl
lea
scas
inc
mov
xchg
popa
sbb
sbb
sbb
lods
jo
loopne
push
cmp
nop
imul
mov
add
dec
mov
fdiv
cltd
divps
sbb
lcall
mov
dec
dec
sahf
fisttps
mov
or
movsb
sbb
ljmp
pop
loop
mov
sub
jne
std
daa
mov
jae
pop
xor
outsl
inc
sbb
into
pop
repz
mov
out
jae
jp
dec
jmp
dec
add
mov
aas
int3
imul
cld
or
js
out
sub
push
pop
dec
imul
repnz
push
mov
jg
sub
fs
sub
xchg
leave
xchg
xchg
sahf
mov
rorb
fwait
rcrl
xcrypt-cbc
cmpsl
push
sub
imul
stc
jno
in
xchg
shlb
mov
dec
fnsave
jg
lret
inc
sbb
fwait
shlw
pop
add
pop
jo
cmc
pushf
outsl
stc
lahf
mov
clc
xlat
pop
je
movsb
gs
daa
and
and
bound
push
add
mov
ret
mov
imul
inc
movl
mov
jp
lods
popa
lret
repnz
mov
sti
mov
mull
lods
xchg
je
mov
arpl
pushf
jg
hlt
clc
addr16
lods
push
adcb
fisubs
or
out
shrb
cmp
or
pop
lds
fwait
jmp
mov
fisttpl
sahf
push
lea
fs
mov
lcall
pop
test
lea
add
add
mov
add
mov
jnp
outsb
cli
adc
bound
mov
add
cmp
dec
add
nop
in
idivl
pop
ss
jge
dec
adc
in
pushf
out
out
pop
ss
sahf
out
push
and
out
outsl
out
in
jns
sbb
js
leave
push
push
pushf
jnp
jb
push
sub
jmp
xor
cmc
jmp
dec
xor
sahf
jns
mov
push
imul
or
test
sub
cmc
mov
fsts
pop
vpavgb
mov
dec
sbbb
mov
mov
cs
cmp
clc
movsl
loop
pusha
adc
xchg
mov
ljmp
push
adc
ja
cwtl
sahf
cmovb
leave
scas
pop
imul
cmp
pushf
jne
mov
stos
idiv
pushf
pop
or
inc
imul
mov
xchg
out
jo
sbb
pop
pop
gs
into
lds
lea
fmul
inc
fsubrs
std
loop
jl
icebp
pushf
js
imul
popa
rol
ffreep
jmp
mov
jmp
inc
fisubrl
xor
loop
lret
js
fisttpll
xor
ljmp
push
js
loopne
sub
mov
and
das
or
mov
cmpsl
out
push
sbb
int3
sub
fwait
mov
mov
hlt
add
rep
test
js
call
mov
lods
jnp
mov
in
xor
push
movlps
ja
cli
nop
mov
xchg
inc
mov
xlat
sub
fwait
push
rolb
addb
sbb
pusha
and
xchg
add
and
fimull
adc
std
stos
data16
pop
icebp
dec
fdivrs
mov
pop
mov
adc
inc
sub
lods
lock
nop
addr16
fnstcw
icebp
lcall
cmp
scas
popa
xor
movsb
add
push
mov
sbb
fidivs
xlat
lock
add
ja
sub
mov
lods
int
in
lahf
mov
leave
bound
fstps
cs
notb
das
mov
pushf
data16
mov
or
inc
xor
mov
jp
loope
jge
dec
test
in
lea
leave
pushl
dec
push
stc
lcall
fwait
sbb
sbb
out
push
push
loopne
xchg
xlat
in
cmpsl
popf
or
and
cmpsb
jne
lret
test
aad
arpl
loope
in
insl
mov
and
sub
and
cmp
aam
loopne,pn
fucomp
jmp
out
iret
mov
loop
fdivrl
hlt
pop
cmp
pop
cld
inc
loope
ret
dec
sahf
movsb
xchg
mov
xchg
frstor
add
add
lods
fisubrl
push
cmp
xor
dec
iret
inc
jmp
sub
or
push
dec
out
dec
push
out
sbb
push
dec
xchg
mov
xchg
int3
in
pusha
pop
push
inc
loop
mov
mov
popa
sub
fstl
xor
orb
add
pusha
or
and
mov
cld
scas
cld
es
fndisi(8087
ljmp
sub
loope
sbb
adcl
or
mov
xlat
outsb
arpl
mov
mov
testb
dec
and
orl
idivb
test
loope
mov
outsb
loope
add
inc
pop
mov
cmp
jb
loopne
out
push
jo
popf
mov
sbb
and
out
enter
into
cmp
js
pop
subps
dec
jnp
ljmp
repz
cmpsb
jns
xchg
or
in
pushf
lods
scas
pushf
pop
dec
jne
cmp
sbb
cld
adc
bound
pushf
cmp
sbb
subb
sarl
sbb
ljmp
rcr
daa
lea
fisubrl
sub
jae
cmp
inc
push
inc
dec
daa
jbe
sub
sbb
jle
sbb
ljmp
push
mov
mov
or
push
pop
dec
and
jns
adc
lcall
mov
mov
shll
icebp
orb
lret
test
sub
push
xor
adc
mov
xchg
lcall
js
dec
sbb
mov
pop
jl
and
mov
fbld
xchg
mov
and
sub
dec
mov
pop
mov
adc
mov
lahf
add
pusha
push
sti
test
cmp
cmpb
push
data16
dec
out
pusha
sub
rcll
sub
fs
xor
sarb
imul
dec
pop
mov
stos
jnp
imul
sbb
out
sti
fildl
fwait
cmp
jmp
icebp
dec
mov
test
jne
std
call
cmp
or
jae
dec
xor
inc
inc
lods
jp
aaa
scas
or
push
test
dec
pushl
fistpl
xchg
or
adc
loop
dec
lret
std
mov
push
pop
push
data16
cltd
repnz
jbe
sub
and
pop
inc
popa
inc
push
cmp
lcall
jg
mov
shlb
test
push
popf
sbb
cmp
xchg
pop
push
sub
in
and
pop
test
xor
loopne
mov
sbb
sub
addr16
xchg
ror
pop
lret
fbstp
or
lods
xorb
xorl
xchg
inc
iret
jae
jne
popf
push
mov
dec
jae
pop
mov
xor
dec
xchg
mov
xchg
and
fdivrl
ret
jne
ds
jb
sub
xchg
dec
popa
loope
dec
idiv
push
ljmp
inc
mov
mov
mov
leave
sub
add
ja
push
in
adc
pop
jbe
jmp
lock
test
sub
lock
test
jl
insl
incl
adc
add
insl
sub
shrl
or
test
and
mov
mov
fiadds
xchg
mov
mov
or
add
pop
pusha
fwait
test
iret
jno
jp
insb
adc
addr16
cmp
loopne
ljmp
outsb
pop
sub
movl
aas
jnp
add
lods
insb
xlat
jnp
gs
rolb
lds
mov
or
insl
pop
xchg
inc
dec
sub
cltd
mov
cld
lret
adcb
mov
int
psrlw
mov
xchg
sub
cmpsl
test
inc
icebp
mov
lods
jmp
cmp
lods
mov
js
xor
mov
jg
mov
sbb
mov
outsb
in
fs
mov
vmovhps
nop
addr16
sub
lds
shl
push
and
inc
orl
sub
jne
push
mov
inc
call
aaa
push
in
cmpsb
in
dec
popa
leave
mov
insl
jle
pop
fsubp
leave
xor
jp
jecxz
scas
nop
xor
repz
rclb
push
cmpsb
inc
iret
and
xchg
xchg
adc
repz
push
movsl
decl
sbb
aas
pusha
out
leave
es
ljmp
xchg
sub
fistl
sub
or
cld
fbstp
lods
sbb
out
aad
cli
leave
fadds
mov
dec
pop
sbb
push
or
add
jno
push
inc
arpl
xchg
pusha
test
pop
rcrb
inc
adc
sub
daa
add
in
push
lods
pop
sbb
cli
xchg
or
inc
push
imul
sub
ja
dec
mov
inc
mov
sbb
xor
aad
lcall
pop
jge
cmovp
cmp
ja
dec
inc
pop
jp
jb,pt
mov
in
das
imul
xchg
mov
jmp
jle
ret
popa
sub
por
add
and
sub
cmpsb
add
adc
ja
int
je
pop
sub
idivb
inc
mov
sti
in
or
lds
xlat
mov
inc
mov
lds
movsb
cld
mov
pop
repnz
popf
sub
add
sub
inc
notb
sub
das
inc
in
or
jb
push
repz
push
xchg
push
in
jmp
cs
out
or
movsb
inc
out
cmp
sahf
test
cld
and
inc
dec
call
cmp
xchg
jae
cmp
cli
movl
ret
mov
mov
mov
dec
test
sub
jge
xor
pop
inc
dec
movsb
in
notl
iret
imul
hlt
sahf
in
popf
pushf
inc
movsb
mov
jg
sub
add
mov
stc
pop
and
icebp
fsubrs
repz
pop
sbb
xchg
pusha
mov
lret
xchg
aad
jno
test
pxor
pop
test
fsubrs
jp
xchg
bsf
sbb
test
scas
pop
stc
stc
repnz
xchg
xlat
insl
mov
xor
xor
test
mov
xor
cwtl
insb
xor
and
sbb
mov
dec
jmp
loopne
fwait
in
xchg
es
repnz
fsubs
cmc
adc
or
test
jbe
mov
inc
aas
inc
int3
pop
fstpl
push
xor
std
or
insb
adc
inc
sub
pop
inc
scas
cltd
fldl
add
pop
ss
iret
int3
sahf
push
mov
jo
ror
imul
sbb
pop
mov
sbb
push
push
jo
jb
pop
adc
pop
adc
movsl
jl
adc
pop
xchg
ret
push
push
sahf
or
push
jge
add
xchg
jecxz
sub
int
xor
scas
or
aad
test
jle
xor
in
cltd
les
pop
fcompl
push
test
sbb
push
adc
cmp
inc
and
inc
scas
enter
faddp
and
jb
addb
pop
es
push
xlat
mov
fstpl
xchg
push
sub
add
sti
push
and
shrb
divps
test
inc
aas
es
insb
lods
pop
es
xchg
adc
scas
push
lods
aas
xor
hlt
fs
adc
adc
pop
orl
popf
lea
ja
pop
sub
fcoms
sbb
cmp
popa
cmp
addr16
mov
push
mov
cmp
mov
or
ss
mov
mov
into
pop
scas
inc
lods
mov
jmp
fiadds
movsl
mov
mov
sub
movsl
xchg
or
mov
out
pop
cmp
ja
inc
sub
mov
test
inc
js
sbbl
pop
int3
mov
inc
sbb
rorl
cmp
inc
lock
fcmovb
idivb
addl
adc
je
psllw
cwtl
ljmp
loope
outsl
mov
sbb
hlt
jmp
xor
jbe
in
aaa
fwait
mov
inc
push
add
test
subl
ljmp
jmp
les
mov
cmp
fimull
in
icebp
xor
push
fcomps
mov
sti
sub
mov
rorb
push
lret
sbb
addr16
sub
mov
pop
jp
or
add
lea
fcompl
inc
and
into
pop
jns
sub
imul
jg
jg
mov
xchg
das
mov
test
push
mov
out
sub
inc
daa
and
cmc
xchg
negl
lds
jg
mov
sbb
scas
std
imul
inc
pop
xor
lock
or
int
xchg
sub
and
push
sub
aam
and
imul
icebp
add
cmp
mov
orl
xchg
sbb
lock
and
loopne
loop
rorb
xchg
lret
fdivs
push
mov
sbb
iret
imul
push
dec
sbbb
xlat
inc
lcall
add
fwait
pop
repnz
add
dec
movsb
imulb
sbbb
in
dec
add
push
sub
in
dec
sub
cld
push
cs
dec
add
sub
jno
adc
lret
pmaxub
cld
imul
push
jne
jge
mov
push
shrb
jmp
mov
jl
lahf
dec
inc
xlat
dec
inc
addb
mov
and
and
std
push
inc
fldcw
push
les
cmp
adc
loope
stc
loope
jne
testl
out
out
jbe
testb
cmpsl
cmp
push
or
jbe
xchg
mov
push
out
clc
idiv
stos
jl
jl
add
mov
jno
jae
fimuls
mov
pop
jle
cmp
push
xchg
sbb
scas
sub
mov
push
lock
push
inc
lcall
pop
fidivl
jmp
es
mov
inc
insb
xchg
popf
data16
cmp
mov
sti
fwait
aaa
mov
or
xchg
fucomip
fdivrl
sahf
xchg
adc
inc
sbb
pop
mov
insl
shrb
or
xchg
xor
mov
jnp
mov
inc
sub
jmp
rcl
or
add
ffree
mov
mov
lods
fs
inc
clc
cltd
sar
jmp
je
mov
sub
dec
sub
mov
loopne
sub
mov
cmc
les
ds
aas
sbb
test
testb
xor
into
pushw
sbb
jg
add
ljmp
aaa
in
daa
pop
loope
jo
dec
adc
pop
lock
push
fs
jmp
or
fmuls
cmp
mov
fistpl
jecxz
mov
jecxz
pop
or
push
mov
add
pop
std
add
dec
mov
out
or
cld
xchg
sub
jo
setns
push
shlb
mov
lock
bnd
scas
adc
and
sbb
dec
adc
arpl
arpl
cld
cwtl
outsl
pop
cmpsl
stc
das
mov
lahf
orb
mov
enter
xor
pop
enter
jns
push
daa
mov
fnstenv
jns
sbb
add
adc
pop
jae
mov
outsb
out
imul
test
clc
mov
jmp
movsb
int3
xchg
scas
pop
jbe
inc
push
into
mov
sbb
adc
and
push
sbb
jle
mov
lds
test
sub
and
mov
stos
clc
xchg
fbld
or
ret
or
inc
aam
dec
adc
mov
push
test
lds
xor
xorl
adc
jp
sbb
test
cwtl
and
push
decl
int
mov
sysexit
push
push
adc
sbb
mov
add
inc
mov
mov
sti
stc
mov
pop
push
push
int
in
lods
mov
hlt
add
out
and
mov
loope
inc
sbb
aad
fimull
mov
xchg
jnp
jbe
adc
or
dec
inc
push
mov
pop
dec
jecxz
sub
aam
fistpl
mov
clc
mov
clc
xor
in
fldcw
mov
jp
loop
fwait
add
or
ja
sbb
jp
jge
lret
jmp
pusha
ficoms
mov
movl
cltd
shl
sub
xlat
push
mov
push
sub
xor
push
add
data16
inc
loopne
mov
iret
adc
mov
mov
outsb
loopne
jecxz,pt
into
ds
push
inc
push
popa
xor
lds
push
mov
in
outsl
push
or
and
sti
fisubl
in
push
add
cmp
negb
daa
push
sarl
jg
and
sti
jecxz
jo
mov
pop
add
sub
mov
in
sbb
inc
hlt
xorl
mov
repz
into
lock
add
push
stos
repz
fdiv
ret
push
fistl
test
rorl
sbb
lret
push
or
sbb
push
aam
cwtl
push
xor
cld
pop
mov
adc
sti
cmc
inc
push
dec
xor
std
lcall
aam
stc
cmp
mov
lahf
push
test
aaa
mov
sub
add
scas
cmp
enter
and
push
add
mov
into
cmpsb
jmp
test
imul
jae
and
push
aaa
jne
addl
lods
fwait
out
xchg
iret
call
mov
mov
cmp
sti
ficoms
sub
sbb
push
out
imul
inc
cmp
lea
adc
and
ret
sbb
cmp
push
pusha
mov
push
in
pop
ds
test
outsb
push
loopne
push
rcrl
jecxz
jecxz
stos
xchg
sub
xchg
xor
lods
or
insl
flds
sub
iret
cs
sbb
pop
xchg
mov
lods
hlt
push
add
idivl
jne
inc
mov
jecxz
sub
fcmovnbe
cmp
dec
fcompl
adc
xchg
pushf
sahf
jnp
and
sti
adc
dec
mov
stos
pusha
xchg
nop
jns
add
lret
cwtl
jg
fsts
mov
cltd
sub
out
mov
in
enter
aad
xor
push
addr16
push
hlt
or
daa
mov
aaa
dec
js
sbbb
push
adc
jmp
fwait
fs
adc
push
fwait
gs
push
into
fs
mov
mov
add
pop
out
pop
popa
dec
fisubrl
inc
inc
cli
flds
out
iret
call
fcompl
add
dec
insl
and
test
andb
shll
push
pop
mov
push
add
ret
sbb
jo
leave
sahf
push
cmc
je
pop
leave
push
insl
sub
add
dec
addr16
movsb
jnp
int
fsubrs
das
and
mov
inc
pop
add
popf
ret
inc
xlat
dec
mov
lods
insl
dec
push
add
les
je
inc
frstor
out
test
add
js
out
pop
in
mov
cmpsl
jae
ja
clc
mov
xor
push
mov
sub
inc
add
sbb
aam
aam
or
dec
outsb
mov
test
sbb
xchg
cmpsb
mov
pop
sbb
sub
and
fld1
inc
cmpb
and
std
sahf
sub
arpl
test
mov
add
or
or
ja
popa
dec
cmp
adc
xor
mov
sub
mov
push
inc
push
call
aam
inc
jecxz
mov
and
sub
dec
xchg
and
push
jnp
test
push
cmp
movsb
shll
jno
or
in
mov
xor
xchg
pop
les
ja
sub
or
je
insl
in
sbb
mov
pop
les
fadd
sarl
and
jne
int3
pop
adc
shr
in
mov
mov
sub
push
mov
outsb
outsl
sarl
jns
mov
push
add
aad
fdivrl
daa
inc
or
lods
testl
pop
rorl
imul
fcmovnb
in
mov
fistpl
mov
or
dec
xchg
dec
add
adc
cmpsl
push
dec
ret
mov
jp
jo
call
daa
lods
jo
lods
inc
cmovp
insb
jle
mov
mov
mov
cmc
cmp
mov
addb
mov
scas
xchg
ja
fdivl
sub
and
sbb
jb
fdivs
dec
imul
iret
pop
in
ret
mov
shlb
pop
scas
outsl
pop
and
ret
data16
jl
cmp
dec
mov
adc
inc
notl
and
sbb
and
cmp
daa
imul
je
test
sbb
sbb
pop
xchg
mov
fisubrs
mov
ss
sbb
sarb
pop
pop
fstpt
add
shlb
xlat
aas
mov
sbb
jle
mov
hlt
sarl
add
jmp
push
mov
stc
out
push
xor
xchg
xchg
into
mov
or
mov
in
jae
inc
pop
shrl
mov
mov
mov
push
daa
jnp
mov
divl
fld
dec
mov
insb
fdivs
orb
mov
xor
xlat
push
mov
lods
cld
lds
cld
jge
int
cmc
mov
xchg
sbb
leave
xchg
cwtl
xchg
pop
ret
mov
mov
jl
mov
dec
jl
jno
aas
xchg
out
sti
fsts
or
or
or
nop
push
ss
test
out
nop
mov
pop
adc
jmp
xor
insl
jo
pop
lret
pop
popf
and
mov
xchg
xor
aam
movsl
test
mov
rol
xchg
fimull
cmp
cld
jne
jnp
aad
in
xor
mov
out
cs
ljmp
xchg
test
xchg
mov
add
mov
xor
addb
scas
scas
push
and
fadds
cltd
sbb
cmp
mov
scas
add
in
mov
call
cmp
mov
popa
insb
mov
sub
into
inc
fwait
cmp
in
test
loopne
divl
inc
das
jnp
call
pop
fcmovb
repz
in
adc
iret
or
adc
fadds
jge
popf
adc
push
mov
mov
loopne
in
jno
loopne
mov
adc
imul
and
xchg
aad
jl
and
movsl
sbb
and
out
jmp
lret
loopne
cld
pushl
add
xor
call
cmp
add
sbb
jmp
dec
lock
xchg
dec
push
xchg
mov
out
mov
mov
cld
inc
scas
mov
lcall
rorb
mov
pop
mov
adc
sub
push
xor
lods
daa
and
pushf
shlb
mov
sub
dec
xchg
out
push
test
call
sub
int
mov
push
xor
sub
pop
push
mov
xlat
sahf
mov
xor
mov
inc
lods
xchg
mov
sub
movsl
scas
je
ret
jmp
mov
rcrl
arpl
lods
sub
adc
sub
test
add
xchg
and
inc
add
mov
in
test
adc
jl
pop
sbb
popa
scas
or
xor
jno
mov
mov
outsb
clc
or
stos
or
dec
int3
lods
and
jg
dec
adc
mov
iret
adc
mov
push
add
ljmp
lcall
xchg
mov
add
sbb
sbb
inc
dec
adc
call
idivl
roll
sub
loope
cld
testl
xchg
add
mov
loop
sbb
inc
test
cmp
insb
jl
fidivs
aas
hlt
mov
popa
je
lods
jge
or
push
mov
in
xchg
sarb
bound
sahf
push
bound
add
push
jb
and
psubusw
fwait
std
inc
ret
hlt
xor
sbb
dec
js
sub
adc
jle
xor
adc
fisubrl
and
or
push
daa
fistpll
fidivl
push
int3
mov
dec
lods
bnd
bnd
loopne
imul
cltd
push
iret
cwtl
mov
outsb
adc
sahf
mov
in
add
nop
jl
outsl
sbb
rcll
sub
add
ja
pop
es
fistpll
xor
mov
pusha
dec
push
ret
hlt
or
ret
jecxz
dec
push
sti
mov
and
jno
ret
fcomps
dec
in
push
cmp
or
into
xchg
fsubs
cmpsl
imul
iret
add
pop
add
test
and
lret
xchg
and
fs
pop
sarb
mov
push
mov
std
popa
es
movsb
xchg
cld
cmp
icebp
jns
inc
mov
in
pop
fwait
adcl
push
ret
nop
or
mov
cmp
mov
clc
xor
push
pop
add
ljmp
cmp
pop
sahf
cld
pop
adc
sub
cmp
sub
test
insl
ljmp
add
ret
sbb
fs
les
jl
js
mov
test
dec
mov
cmp
loop
or
and
jmp
add
outsb
inc
les
aas
pop
sub
add
shlb
and
sbb
imull
fisttpll
jmp
lock
pop
mov
pop
jl
stc
enter
pop
push
inc
jmp
je
push
cmp
or
push
fisttpl
cmpsb
rcrb
jb
clc
out
cmp
adc
mov
xchg
jge
xchg
je
sarl
outsl
clc
mov
adc
fwait
sbb
add
aad
fdivrl
andnps
xchg
jno
nop
stc
imul
cmp
sub
add
inc
negb
or
sarb
aad
popa
mov
add
rcl
insb
and
popa
pop
jle
push
loopne
jae
dec
xchg
outsb
jge
pushf
or
aas
add
sbb
cmp
test
dec
sub
fwait
inc
mov
dec
inc
cmpsl
or
pop
movsb
push
or
stos
xlat
cmp
inc
cmp
mov
pop
mov
mov
mov
and
lds
or
jae
inc
cs
sti
popf
xchg
gs
bound
lret
cmp
push
pop
mov
clc
cmp
shl
dec
push
xor
into
movl
cmp
push
std
icebp
xorl
loope
xor
out
jno
loop
sub
imulb
hlt
ja
out
inc
mov
rorb
dec
add
push
pop
push
push
bound
enter
aaa
cwtl
jb
icebp
jg
sbb
xchg
aas
mov
cltd
mov
iret
aaa
ljmp
or
scas
sti
imul
push
rcl
mov
and
pusha
lock
out
cltd
and
popa
jne
sub
sbb
pop
jmp
outsb
jg
enter
adc
loopne
lret
data16
lea
xlat
inc
mov
mov
push
jnp
imul
add
push
fwait
bswap
add
sbb
hlt
add
loopne
cmp
or
roll
lea
and
sbb
ds
add
sbb
aaa
jbe
add
out
cli
sbbb
push
mov
cmp
jg
adc
inc
fdivr
pop
mov
ja
sub
cmpb
and
xorl
shll
xor
addr16
inc
xchg
fists
mov
scas
adc
xor
iret
add
movsb
push
jno
sub
shr
aas
push
jo
movsb
rol
sbb
xchg
les
push
and
fadd
daa
inc
xor
stc
or
cmp
jne
pop
fisubs
arpl
cs
nop
dec
and
pop
add
das
and
jnp
jmp
jle
adcl
mov
xor
inc
push
aas
fldlg2
mov
jne
and
inc
sbbb
pop
gs
inc
jo
lods
into
out
std
jbe
outsl
mov
cli
pop
ret
add
xchg
pop
repnz
and
ret
adc
mov
or
inc
fidivrl
xlat
push
lods
outsb
out
aas
pop
iret
jnp
into
leave
repnz
push
mov
dec
cld
sub
add
sub
sub
movsl
pop
fisubrs
inc
arpl
fldcw
jnp
jnp
inc
popa
lret
or
nop
sahf
jecxz
push
mov
adc
adc
jae
or
scas
decl
int
sub
cmpb
fisubrs
push
mov
enter
jg
cs
cmp
stos
inc
adc
lea
pop
sub
adc
lods
pop
mov
outsl
sub
call
xchg
push
jns
sbb
adc
ss
mov
or
pusha
sbb
imul
adc
dec
inc
test
jp
ja
js
mov
mov
and
sbb
xchg
xchg
mov
jp
repnz
movsb
movsl
jnp
inc
enter
lock
dec
sub
inc
push
add
nop
mov
pushl
in
call
mov
cwtl
pop
mov
ss
lcall
push
mov
pop
add
cmp
push
sbb
je
clc
jb
stc
pop
push
nop
lea
mov
dec
add
mov
je
std
xchg
mov
rorb
sti
cltd
add
pop
int3
mov
outsb
popa
jae
jbe
test
dec
movsl
mov
xorb
ljmp
adc
jle
push
clc
pop
pop
pop
cs
loop
pop
jo
mov
ds
sbb
add
in
pop
add
sub
call
inc
arpl
pop
unpcklps
xchg
sub
ja
lret
mov
cs
fistpll
xchg
xchg
xor
jle
js
cmp
inc
cwtl
popa
xor
pop
cmpl
rcll
cwtl
jecxz
jo
push
add
sub
divb
lock
push
pop
mov
mov
sub
iret
cmp
and
or
loop
idivb
or
ret
inc
adc
es
ds
mov
in
pop
mul
fcomps
fcompl
stos
mov
add
or
aad
rol
ffree
nop
pop
lea
add
jl
push
or
bound
clc
push
and
mov
add
test
div
pop
scas
movsb
dec
sbb
add
push
xor
stos
push
outsb
dec
imul
mov
jl
or
inc
inc
or
test
mov
ja
xchg
push
leave
mov
sub
in
lock
fdivs
add
aas
sub
stos
or
cmp
test
ret
add
dec
push
mov
mov
jle
cmp
ljmp
or
mov
ret
loop
lds
sub
add
mov
lret
cmp
cmpsl
jl
dec
stos
add
iret
inc
ror
mov
jo
inc
fwait
cmp
sub
dec
movsl
aas
push
rep
mov
scas
mov
push
mov
test
push
mov
fldenv
mov
jbe
cli
lods
push
adc
hlt
pop
add
bound
jnp
out
inc
shll
or
idivb
cwtl
lret
jns
push
cmpsl
test
xlat
dec
jno
mov
cs
fiadds
call
or
cmp
pop
pop
incl
cld
fdivs
xor
adc
jl
pop
xor
insb
pushf
push
pusha
xchg
xchg
scas
nop
jno
xchg
jmp
xchg
jle
xchg
lods
pushf
popa
push
sub
mov
test
xor
xor
gs
sub
sbb
xchg
faddl
je
lret
ret
mov
outsl
loope
inc
mov
mov
mov
loope
push
cmp
mov
insl
sub
pop
cmp
clc
in
push
cmp
js
int
fisttpll
in
cmp
and
or
pop
test
cmpsb
jns
mov
adcb
in
sbb
int
dec
pop
mov
jbe
xchg
mov
jo
inc
inc
sti
ljmp
gs
dec
lahf
push
add
std
mov
lock
or
int
sahf
fmull
push
inc
in
in
add
cmc
cmp
mov
ror
scas
orb
adc
popa
add
ret
push
xchg
ja
sar
xor
inc
mov
inc
mov
pop
orl
and
gs
add
lea
mov
add
sbb
pop
jb
sub
int3
push
xor
cmpsb
push
inc
mov
cmp
pop
repz
xchg
mov
movsb
aam
sub
imul
sub
sub
pop
mov
add
enter
push
sbb
push
repnz
pop
xor
ss
dec
mov
mov
paddw
ret
mov
and
jecxz
cmp
stos
inc
stos
cmp
xor
out
jno
movsb
inc
mov
add
popa
sti
mov
gs
fchs
clc
in
imul
pop
fsubl
xorl
mov
cwtl
fcompl
es
in
ror
data16
aad
adc
add
adcb
jmp
xor
push
inc
cmp
push
push
lcall
cltd
not
ds
mul
mov
rcrb
xor
xchg
dec
insb
dec
in
jg
test
and
or
jecxz
int
cmp
outsl
lds
daa
lahf
xor
mov
imul
jge
mov
or
sbb
cmpb
or
xor
fcmovnu
divl
jae
dec
mov
xchg
dec
popf
mov
jle
mov
dec
es
pop
fidivrl
dec
lea
jge
pop
xor
push
jge
mov
jne
les
lods
sub
cltd
mov
popa
lds
dec
dec
sbb
mov
pop
sahf
sti
popa
mov
lret
mov
in
or
xchg
movntps
mov
mov
push
cmp
cmpsl
in
adc
jp
jp
mov
push
add
jae
les
test
mov
xchg
rcll
or
mov
cmp
fmulp
or
and
inc
mov
and
popf
and
pop
dec
push
sbb
out
out
mov
add
jg
mov
js
loope
rorb
cmpsb
fistpl
inc
dec
cmc
mov
xchg
add
mov
dec
push
jge
sub
cmp
pop
or
cli
cmp
lret
icebp
dec
mov
add
pop
jmp
dec
in
and
scas
in
clc
dec
sub
xchg
mov
xchg
mov
xor
scas
repnz
or
cmc
pushl
stos
scas
and
out
ret
test
add
jge
sub
pusha
in
xchg
and
imul
ret
inc
xor
xor
inc
dec
inc
mov
mov
jbe
sub
push
push
cmp
xchg
movl
inc
ret
mov
in
ror
rclb
jns
daa
aas
sbb
cmp
sub
movsb
andb
adc
out
mov
orl
and
and
jmp
or
mov
dec
out
cmp
pop
push
xchg
sbb
xchg
wrmsr
imul
cmp
push
cmpsb
rorb
pusha
shll
add
jle
shl
lds
test
pop
addr16
scas
inc
ja
pop
outsl
mov
mov
mov
push
mov
xor
je
clc
daa
test
subb
xor
sub
fs
ds
sti
hlt
inc
sarb
repz
test
mov
out
or
and
inc
repz
cmpsb
cld
ss
and
adcl
and
jbe
ret
pop
test
fmuls
enter
loope
enter
pop
jo
dec
jg
add
xchg
mov
out
or
popa
jp
xor
adc
in
outsb
mov
out
dec
adc
loope
xor
mov
sub
sbb
loop
xchg
xchg
movsb
addr16
mov
adcl
mov
xchg
jecxz
xchg
mov
test
push
lcall
push
xlat
insl
loopne
jl
cwtl
std
or
mov
push
mov
sbb
dec
jne
dec
imulb
jb
mov
mov
repz
push
idivl
imul
cmp
cltd
or
or
fists
inc
cwtl
aad
addr16
rolb
loopne
jbe
add
loop
inc
fiaddl
js
cmp
push
push
mov
push
inc
rcrb
add
ss
jg
adc
sti
jmp
sub
stos
aas
sti
ret
vpmaxsw
mov
xchg
adc
adc
dec
dec
mulb
int
jecxz
dec
and
and
shlb
mov
movsl
std
and
and
mov
call
shr
orb
push
mov
jecxz
lahf
sbb
push
push
sub
cmp
popf
xor
cmp
mov
mov
and
mov
xor
roll
mov
insl
or
das
dec
and
leave
xchg
mov
dec
xor
mov
pop
dec
mov
sahf
sahf
mov
mov
or
and
std
ja
jg
enter
fists
cmp
sub
dec
insl
rorl
cmp
xchg
outsb
popf
ret
add
imul
das
test
insl
loopne
mov
sub
push
scas
push
movsl
inc
aaa
jnp
fbstp
jbe
xchg
int3
nop
cmp
jecxz
aad
pusha
pop
mov
adc
int
jnp
add
or
fwait
or
cld
cmp
aad
fwait
mov
mov
cmpsb
xchg
push
lcall
sbb
out
push
outsb
mov
ret
test
push
orl
icebp
scas
in
pop
mov
ja
push
adc
cwtl
pop
sub
outsb
and
shrl
lods
mov
fimull
inc
scas
stos
xchg
aad
pop
pop
out
mov
arpl
imul
dec
mov
dec
jl
xchg
cltd
jno
and
mov
jle
emms
xchg
sbb
cmp
into
mov
and
mov
je
lods
inc
mov
fucomp
ffreep
mov
stos
cmp
adc
mov
sub
mov
mov
dec
or
push
jg
lock
shl
hlt
mov
dec
aad
or
cmp
add
adc
pop
jns
lea
sahf
in
in
jle
jb
sub
push
cmp
cld
or
lea
insb
fnstenv
test
mov
ljmp
cmc
and
cmpsb
jno
add
xor
andb
cmp
jle
xchg
outsl
inc
dec
xor
jne
popa
ret
jbe
mov
add
cmp
and
popf
pop
sub
xor
fwait
imul
fstpl
xchg
dec
rcrb
inc
jmp
sbb
aad
lahf
fildll
cli
mov
jl
subb
ds
jl
pop
push
sub
and
stos
inc
fsubp
jne
push
and
enter
push
les
clc
and
ret
lea
inc
dec
mov
aam
pop
lret
and
add
inc
adc
push
cld
cmp
mov
add
xorl
cltd
adc
and
inc
push
or
fstl
loopne
mov
xchg
dec
scas
out
pop
mov
jbe
pop
std
push
outsl
push
dec
sub
xchg
out
push
sub
stos
pop
jl
mov
int
or
jp
ret
adc
cltd
mov
aaa
cmpsl
xchg
pop
cmp
xor
incb
cmp
cmpsb
mov
ret
adcb
adc
inc
fisttpll
cmpsl
inc
je
pop
jbe
pop
xlat
rcrl
fdivs
sbb
or
mov
adc
jge
and
in
fcmovnbe
mov
push
pop
mov
mov
jne
cmp
lret
push
pusha
cmc
mov
cld
ljmp
es
dec
add
xor
sbb
mov
ds
or
sbbb
movsb
subb
mov
pushf
jbe
jmp
aaa
pop
test
and
sub
push
in
je
adc
mov
dec
shll
stc
jl
pop
inc
pop
pop
dec
imul
jp
mov
xlat
aam
inc
push
cld
push
add
inc
shrl
bound
inc
inc
jmp
or
push
stos
test
add
mov
jae
adcb
pop
cli
scas
xchg
push
inc
adc
sbb
stos
sbb
inc
rclb
mov
outsl
inc
push
daa
test
jge
les
lods
inc
xchg
mov
jo
sbb
inc
jne
cmp
loopne
ljmp
push
inc
xorl
std
insl
and
dec
mov
jne
pinsrw
je
call
incb
add
sbb
pop
inc
sbb
mov
sarb
fidivrl
addr16
fildl
jmp
push
movsl
testb
inc
orl
mov
jmp
jae
int
sub
mov
in
pop
dec
mov
adc
mov
sbb
rclb
or
pop
loopne
pop
gs
rcl
sahf
ss
pop
pmaddwd
pusha
dec
adc
arpl
stos
cmp
sbb
sbb
out
lret
mov
cmp
push
jne
dec
xchg
adc
push
aam
sub
mov
dec
imul
adc
jmp
test
jbe
jne
test
leave
cmp
inc
lahf
movsb
push
cmp
cmp
push
sbb
and
fstl
mov
sbb
aad
and
sub
push
std
inc
bound
mov
jmp
mov
pop
mov
mov
jbe
pusha
loop
sbb
arpl
fistpll
rcrl
sub
cmp
test
sbb
and
xor
push
cld
push
sti
mov
sbb
mov
std
push
repz
sbb
pop
push
and
cltd
pop
push
or
mov
or
jl
push
pop
sub
mov
push
xor
out
sbb
or
test
in
xor
mov
pop
gs
sub
sbb
and
jb
leave
jmp
adc
pusha
popf
outsb
sbb
imul
xor
mov
push
nop
repz
mov
cwtl
adc
pop
pop
insl
in
shlb
dec
loopne
cmp
cld
es
clc
mov
xchg
adc
xchg
and
je
fcompl
stos
add
jno
aaa
sub
ret
cmc
inc
jno
and
pusha
jle
shr
and
xor
jecxz
imul
bound
or
xchg
and
or
mov
lds
popf
lret
dec
repz
mov
stc
fldenv
movsl
mov
iret
xor
jmp
arpl
pop
sbb
xor
enter
out
leave
leave
push
mov
loope
push
xorl
xlat
and
xchg
adc
call
mov
pop
mov
jecxz
jge
pop
jmp
or
daa
xchg
xor
mov
test
js
xlat
gs
xchg
add
dec
cwtl
loopne
inc
xchg
shlb
xor
test
mov
repnz
mov
lcall
inc
xchg
dec
pop
sub
sub
lds
push
data16
jnp
inc
mov
stc
xchg
cli
push
xor
loope
or
pop
iret
dec
rcrl
pushf
clc
icebp
ror
sbb
jl
mov
add
add
pop
dec
in
mov
sbb
aaa
test
xor
test
xor
decb
iret
or
cltd
push
cwtl
push
mov
push
stos
or
mov
lahf
xchg
rol
jmp
ss
pop
mov
rorl
ret
xchg
fs
pop
xchg
std
das
imul
and
dec
insl
leave
inc
in
and
nop
jb
mov
xor
imull
jno
orl
ja
xchg
xor
add
std
arpl
cmp
pop
cld
lods
adc
sar
arpl
mov
xor
add
in
ret
fisttpl
enter
in
std
jne
shrb
leave
inc
dec
cltd
cwtl
dec
daa
lret
pop
xor
mov
movsb
movsb
xchg
shll
xchg
inc
rcl
aad
addr16
dec
mov
mov
ja
dec
ror
adc
add
cmp
jnp
shlb
mov
fucomi
mov
mov
push
and
add
repnz
in
push
pusha
mov
jo
pop
lds
gs
jg
test
xchg
xchg
cmp
mov
dec
into
and
or
notl
mov
mov
xchg
fdivrp
push
gs
xor
pushf
fs
cltd
lahf
mov
data16
inc
shr
clc
movsl
out
sarl
out
enter
pusha
lea
cmpsb
test
roll
pop
cmp
sti
sub
add
pop
out
shll
xlat
sub
mov
inc
mov
cmpsb
xor
push
aam
jae
inc
jno
mov
icebp
in
and
cltd
test
mov
and
add
std
xchg
push
mov
lock
xchg
mov
jbe
pop
add
in
cltd
mov
insl
aas
adc
or
insb
mov
push
fwait
mov
dec
xchg
sbb
ss
in
add
add
cmc
cmpsb
cmpsb
fimuls
iret
rolb
addb
hlt
mov
jae
js
push
les
or
mov
xchg
cmp
je
popf
adc
push
movsb
inc
mov
push
stc
jo
out
adc
and
jle
jle
pop
dec
insb
rcll
or
or
push
cmc
dec
out
popa
addr16
jne
adc
pop
aaa
in
sub
ror
and
sub
add
call
leave
mov
std
mov
daa
xchg
test
lcall
push
ss
mov
adc
jns
cmp
jnp
mov
cmpsl
les
cltd
xchg
lds
mov
jge
int
dec
jmp
cltd
sbb
test
cs
inc
subb
xchg
jae
pop
stos
mov
inc
mov
or
daa
loope
mov
pop
jmp
adc
in
pop
ret
bound
add
and
mov
leave
add
fisubrl
or
cmp
cmc
or
dec
sub
out
stos
pop
mov
movsb
movsb
mov
xlat
sbb
rol
cmp
fisttps
jp
add
dec
mov
xor
inc
inc
popa
bound
out
cmpsl
mov
ja
enter
and
rcrb
lds
xchg
adc
xor
inc
cmp
and
cmp
pop
fwait
mov
mov
ret
popf
mov
out
les
mov
rclb
cld
movsl
dec
cmp
inc
mov
inc
mov
xor
inc
shlb
test
shrl
inc
out
out
scas
out
lret
sbb
je
insb
mull
not
cmc
addr16
je
sbb
xlat
shl
out
cmp
push
inc
mov
dec
xor
jl
and
add
pop
xor
add
in
mov
sbb
mov
pushf
push
cli
in
es
cwtl
mov
mov
pop
aas
inc
sub
scas
outsb
test
dec
xchg
inc
aam
hlt
sarb
adc
shr
dec
xor
sub
cmc
jne
cltd
dec
es
dec
data16
mov
sahf
and
into
sti
not
pusha
out
movsl
movsl
or
mov
arpl
test
mov
mov
dec
push
push
push
rorl
push
inc
lcall
loopew,pt
cmp
shlb
repz
sbb
push
insb
into
subb
mov
mov
xor
call
inc
and
push
test
aam
test
clc
inc
cmp
dec
inc
repz
test
dec
ss
out
mov
int
outsb
fstps
lock
cmp
aas
xchg
outsb
pop
jmp
fmulp
orb
dec
adc
inc
ljmp
je
push
pop
cmp
cmp
stc
push
add
sbb
fadds
call
xlat
lcall
xor
nop
mov
jnp
mov
jecxz
fisttpl
rorl
addr16
cmc
cmp
add
out
dec
mov
movhps
ss
in
inc
andl
mov
inc
in
cmp
pop
aad
and
add
mov
popf
dec
mov
cmpsb
inc
mov
jno
icebp
or
jge
dec
xorl
pop
mov
ret
or
frstor
mov
orl
add
fildll
lea
sbb
push
sub
shll
fwait
lcall
pop
add
add
nop
into
sti
inc
repz
or
aad
icebp
and
add
inc
inc
scas
sub
ret
jecxz
inc
fsubrp
aaa
xor
clc
mov
stc
out
scas
dec
lret
push
dec
pop
loop
jmp
xor
insl
ds
or
out
sti
xorb
mov
adc
xlat
push
adc
jl
pusha
lcall
loop
jnp
shll
fsts
ljmp
push
fiadds
call
mov
push
mov
das
pop
sbb
fnsave
mov
dec
lcall
cli
in
lods
clc
xlat
sbbl
sub
mov
or
call
adc
rcrb
sahf
jle
aad
xchg
adc
bound
sub
jns
aaa
dec
pop
shr
dec
das
fwait
mov
push
pop
scas
add
and
rorb
jge
repz
dec
pop
nop
popf
add
xor
nop
nop
std
cmp
lea
andl
leave
xchg
dec
mov
mov
cwtl
mov
dec
xchg
cld
insb
stos
push
push
dec
or
jnp
mov
and
mov
inc
pop
sbb
nop
push
jae
add
xchg
jne
leave
int
cmp
call
fdivrl
xchg
cmp
jmp
stos
mov
icebp
inc
sbb
add
sbb
push
pop
push
rcrl
jle
jns
mov
push
aaa
fwait
inc
add
ficoms
dec
pop
lods
sahf
mov
dec
arpl
inc
mov
andl
in
ja
lock
dec
add
sbb
clc
pop
jo
xor
mov
in
stos
scas
imul
push
cs
jns
dec
mov
div
js
and
inc
mov
hlt
jge
xorb
sub
mov
sub
jo
nop
mov
movsb
mov
and
lret
enter
adc
outsl
sbb
fcompl
repz
into
filds
scas
fildll
mov
popa
jae
xchg
call
add
dec
shll
repnz
push
sbb
sbb
jne
sahf
pop
or
jns
pop
inc
arpl
adc
push
mov
loop
xor
pop
push
imul
sbb
out
or
insb
mov
fstpl
push
mov
xchg
ds
push
test
mov
fdivrl
loopne
dec
insl
push
push
sub
xor
xchg
cmp
add
pop
mov
jnp
or
add
out
mov
sti
cmp
add
mov
out
orb
lahf
mov
repz
mov
les
imul
pop
inc
test
pop
push
pop
je,pn
ds
mov
addr16
jecxz
cmp
fistpll
int3
push
mov
ss
xlat
negb
frstor
dec
outsl
dec
dec
inc
sub
fistpll
pusha
loop
dec
shrb
jl
ret
pop
cmp
mov
out
stos
or
sbb
sbb
adc
pop
lds
loopne
repz
pop
sub
addr16
inc
jo
pop
test
fs
inc
mov
testl
cmp
data16
or
push
js
and
xchg
testl
movsl
lock
stc
push
jle
aad
cmp
out
rol
in
inc
jmp
mov
cmp
loope
inc
add
popl
cmp
add
mov
dec
mov
mov
movzbl
out
cli
push
gs
cmp
scas
ds
int
pushf
lock
out
jle
cmp
push
inc
ds
jg
mov
stos
in
cmp
ss
adc
call
push
inc
mov
ret
test
les
mov
inc
scas
or
inc
pop
cmp
inc
cmp
fucomi
jl
push
icebp
rcrl
aas
push
pop
stos
sbb
sub
sbb
std
rcll
cltd
sbb
mov
push
bound
inc
and
hlt
mov
cmc
xchg
pop
cmpl
pop
test
adc
or
jae
test
stos
mov
mov
imul
test
and
jb
pop
mov
cld
add
int3
add
adc
pushf
cmpb
adc
xchg
sbb
aas
imul
insb
insb
sbb
iret
jne
sbb
dec
dec
mov
mov
lods
xor
repz
mov
les
inc
sbb
mov
dec
cmp
xchg
mov
nop
mov
jnp
cmpsb
jp
loopne
movsl
jae
xchg
mov
stos
jle
aam
insl
sti
mov
pop
adc
rorl
add
mov
mov
pop
imul
ss
fdivrs
ffree
pushf
or
incl
into
dec
insb
pop
js
test
jge
test
test
xor
cltd
jp
pop
sbb
es
push
and
ret
negb
pop
lea
movl
cld
sbb
shlb
xchg
shrb
mov
ljmp
andl
or
daa
dec
jbe
lcall
inc
dec
and
and
cli
xchg
jecxz
push
xorb
dec
xor
rcrb
xchg
sub
lock
mov
inc
mov
pop
ljmp
movsb
pop
sbb
sti
pop
xchg
out
lods
test
in
pop
and
out
jbe
inc
arpl
andl
cld
push
shrb
sbb
add
cltd
adc
mov
jbe
dec
movsl
fucomp
mov
dec
test
gs
add
lods
mov
dec
pusha
mov
add
push
lahf
fs
fdiv
xchg
add
cmp
rcr
mulb
std
and
bound
push
dec
inc
stc
jne
jbe
adc
sbb
iret
lcall
add
add
insl
and
in
and
addr16
adc
fs
push
pop
cmpsl
shll
fdivr
subb
movhps
inc
dec
cmp
ljmp
or
xchg
push
repnz
sub
inc
fiaddl
aam
adc
lods
and
fistps
inc
lods
add
pop
mov
dec
rorb
xchg
pushw
jae
mov
add
jns
lahf
outsb
mov
sub
cmp
jno
nop
sub
jle
lods
mov
jnp
arpl
pop
or
sub
cmp
cmp
std
imul
ret
cmp
loop
stos
lret
push
or
dec
lea
xor
push
xchg
inc
jb
outsl
mov
jne
mov
or
xchg
pop
repnz
loope
adc
cmp
mov
jns
sub
inc
mov
subb
js
mov
iret
sub
pushf
sbb
dec
mov
cs
mov
xchg
mov
loope
adc
or
loop
mov
jg
cmp
scas
fbstp
push
stos
or
clc
cmpsb
std
ja
push
out
pop
jnp
int
arpl
fs
or
push
fldl2e
ret
mov
scas
cs
mov
popa
xor
cwtl
or
dec
push
jle
popf
aad
inc
push
lahf
cmp
sbb
push
or
jg
ret
std
sti
xor
mov
movsl
inc
lahf
sbb
ret
jae
sub
cmp
loop
enter
in
or
mov
das
and
push
pop
push
movsl
jns
pushf
ffree
inc
mov
in
loopne
inc
enter
movmskps
out
jg
xor
cld
mov
mov
rclb
pop
jmp
cmp
mov
sbb
in
cmc
dec
sbbb
cmp
loop
sub
nopl
stos
insb
adcl
mov
stos
outsb
sbb
sbb
repz
jo
rcrl
dec
popf
stos
fucom
les
sub
fcomps
or
int
loop
inc
push
mov
mov
outsl
xor
lock
cmp
mov
push
adc
and
enter
imul
lock
mov
push
jp
lahf
mov
or
mov
cmpsl
pusha
scas
add
push
call
sub
mov
rcll
fucomp
jae
dec
cmp
jb
jae
test
into
jmp
inc
mov
mov
dec
xchg
cltd
cmp
jge
xchg
pop
cmp
and
lcall
jne
in
xor
adc
imulb
fs
in
incb
or
mov
pop
or
cmp
push
fsts
xchg
jae
js
sub
std
add
stos
mov
xchg
or
adc
adc
mov
cs
pop
jp
bound
stos
shlb
nop
pop
add
fs
rclb
hlt
add
cld
dec
jbe
es
mov
pop
mov
adc
lea
adc
add
mov
push
mov
icebp
xchg
jl
push
insl
jae
push
adcb
jae
insb
mov
lods
mov
xchg
dec
out
aas
sub
test
repnz
cs
add
movsl
sub
ss
lcall
and
ret
fisubrs
popf
cmp
and
fcomp
fidivrs
scas
nop
lock
lret
inc
sub
mov
inc
ds
in
notb
cli
mov
pusha
pop
cli
add
jmp
lods
add
fisttpll
out
add
gs
push
movsl
or
sbb
pop
cld
dec
mov
out
das
aam
mov
pop
mov
inc
cld
push
or
cli
mov
shrb
dec
data16
push
sbb
dec
cmp
rcr
test
aas
sbb
aas
jle
push
pushf
inc
out
adc
mov
aas
inc
mov
stos
into
arpl
or
pushf
shl
xor
dec
loope
pop
lods
mov
lret
push
aaa
dec
xchg
dec
mov
addr16
les
sti
add
and
lock
dec
aaa
push
nop
push
pop
cltd
scas
sub
je
enter
in
insb
add
xchg
insl
rolb
subl
aas
dec
jno
lods
xor
enter
dec
jg
push
cmp
data16
mov
pop
aam
add
jne
push
mov
xchg
add
push
add
call
fiadds
or
iret
test
add
add
push
lods
pusha
or
push
cmp
imul
push
dec
sub
adc
xorl
push
movsb
loope
and
xor
js
into
dec
mov
fwait
cmpsl
inc
xchg
pop
add
dec
and
cmp
bound
lds
fwait
insb
mov
cmp
jbe
xchg
xorb
fnstenv
call
or
leave
out
popf
sub
dec
cmc
stc
and
jnp
or
jnp
cmp
mov
cld
jbe
sbb
movsl
mov
adc
dec
cmc
ret
insb
fmuls
shl
xlat
sub
sbb
insb
ret
aam
int3
shr
cld
imul
mov
mov
inc
cmpsl
adc
sub
in
pushf
mov
mov
imul
popaw
out
mov
inc
pop
jne
ja
sbb
pusha
cmc
add
xor
out
cltd
lahf
inc
jnp
xchg
mov
das
les
or
ret
jo
fisubs
xchg
iret
push
loopne
popf
or
mov
adc
lahf
and
xchg
lds
idivl
rolb
xchg
cmpsb
inc
mov
ds
add
jmp
imul
mov
sti
add
push
icebp
enter
sub
stc
or
leave
stos
out
mov
and
xchg
adc
inc
pop
and
cmc
xchg
scas
bound
scas
shll
mov
xorb
idivb
xor
and
fdivr
push
cmp
popa
sub
pop
push
mov
jb
xor
or
rorl
sub
xchg
jnp
loope
lock
cmp
sub
mov
inc
nop
fwait
std
push
lret
ror
add
cli
pop
jbe
pushf
test
sub
or
mov
sub
pop
jmp
shrb
movsl
mov
sti
mov
das
mov
dec
shr
sbb
sub
mov
push
clc
push
xor
xchg
shl
mov
and
dec
add
addl
nop
adc
ja
in
rolb
sti
sbb
jge
push
sti
sub
les
mov
fwait
shrl
mov
iret
jg
mov
imul
dec
xchg
sbb
mov
hlt
cmp
mov
jbe
dec
xor
les
roll
add
inc
mov
sbb
cld
iret
jge
add
mov
adc
jns
outsb
push
fstl
jb
ja
scas
outsl
movsb
xor
sbb
ljmp
jmp
movsb
cmp
pushf
out
popf
adc
sarl
push
cs
adc
inc
xchg
mov
mov
jmp
jl
sub
adcl
xor
stc
popf
das
pop
in
repz
testl
sbb
pop
jp
jo
dec
mov
adc
inc
out
jbe
stc
sub
add
cmp
sbb
xchg
mov
push
sub
pop
repz
mov
push
cld
pusha
and
lret
pop
push
sbb
push
fwait
pop
dec
xchg
sbb
call
test
loope
sub
ficoml
cmpl
cld
jp
fcomp
xchg
mov
js
pop
xor
sub
lret
mov
fists
pop
ds
push
dec
jp
imul
inc
ss
and
dec
push
stos
cmc
rcrb
push
cmp
daa
lahf
mov
ret
cmp
fdivs
scas
inc
nop
sub
or
outsb
xchg
and
add
xchg
xor
adc
cmpsb
mov
iret
jo
lds
sub
and
popf
jne
loope
push
test
ljmp
inc
sbbb
dec
ja
push
scas
pop
cmp
pop
add
stos
sub
sbb
dec
mov
inc
sbb
orb
xlat
jb
insb
jnp
sbb
lds
lret
das
test
out
cli
dec
inc
add
daa
sahf
sub
popf
jge
es
leave
cwtl
popf
shlb
mov
push
mov
push
dec
enter
jo
in
push
mov
push
in
sub
jne
push
cli
mov
ja
sbb
loope
mov
test
cmp
les
mov
xchg
loopne
aaa
push
xchg
cltd
adc
mov
insl
cltd
jo
jmp
mov
sar
push
xchg
xor
sub
sahf
sbb
stos
mov
sbb
push
leave
repz
and
clc
data16
int3
mov
aaa
cmp
clc
pop
dec
insb
xchg
pushf
in
push
scas
jg
jnp
imul
lret
jnp
lahf
lods
in
push
loopne
lds
loopne
cmp
jle
shl
lock
pop
pushl
inc
sbbb
mov
dec
mov
xchg
inc
sbb
sarb
mov
cmp
lock
inc
or
imul
arpl
inc
jne
dec
adc
mov
adc
or
push
test
repnz
inc
imul
adc
sbb
mov
icebp
ds
loope
pop
sbb
cmp
xchg
lock
mov
xchg
sahf
pop
jmp
test
jb
mov
repnz
lock
pop
inc
pop
xchg
int
aam
das
push
and
fnstsw
jne
movsl
jge
sbb
jo
push
out
mov
push
lret
lret
push
insl
roll
add
and
test
mov
ljmp
fldcw
dec
jo
call
push
cwtl
push
out
xor
push
sbb
lret
insl
int3
xchg
jecxz
mov
inc
add
mov
out
scas
push
sub
xchg
mov
dec
dec
sete
mov
jae
push
pop
inc
inc
jae
inc
jne
lret
stos
pop
and
jbe
lret
pop
cmpsl
ljmp
stos
push
cld
in
lret
xchg
add
and
xchg
or
add
dec
xchg
in
aad
jmp
dec
and
aad
jns
xor
inc
pop
mov
or
sub
ja
push
rol
xor
sbb
xor
sti
dec
lock
jge
int
dec
mov
into
inc
and
lcall
out
lods
jns
push
bound
inc
lahf
or
movsl
push
add
cmpl
dec
ss
lcall
pop
adc
mov
jnp
fimuls
xchg
cmp
add
out
mov
push
mov
aaa
aaa
mov
cmpsl
fcmovb
jae
jmp
pop
jge
fdivl
cmp
add
fdivrs
push
jbe
pop
jge
adc
scas
pop
movsb
shrb
xchg
insb
and
xchg
gs
sti
mov
xor
sub
mov
shrl
mov
rcrb
adc
jmp
mov
pop
roll
mov
roll
out
lds
cmp
in
fwait
loopne
addr16
mov
xchg
cmpsb
cmp
mov
imul
in
inc
xor
sub
dec
push
push
rcrl
mov
leave
mov
aam
adc
fstp
inc
xlat
out
pop
mov
orb
daa
test
or
mov
movsl
mov
adc
addr16
cld
orb
into
inc
aas
xchg
jnp
xchg
push
and
sub
fistpll
mov
clc
iret
aas
dec
pop
xchg
cmp
pusha
mov
sbb
scas
mov
aas
lea
sahf
js
outsl
push
insb
int3
xchg
adc
test
mov
xor
push
jmp
xor
cmp
icebp
mov
nop
cmp
data16
iret
xchg
shrl
push
xor
mov
ljmp
idiv
or
xor
inc
enter
pop
in
dec
dec
pop
pushf
out
es
push
rclb
xlat
push
aam
jae
add
mov
pop
fbstp
dec
testl
push
push
xor
and
add
or
cmp
xchg
in
sbb
and
aam
scas
xchg
cmp
rcrb
mov
rcr
leave
repz
pushf
mov
jne
cmp
push
movsb
jne
out
mov
nop
ficoml
rclb
dec
es
jne
loopnew
xchg
std
dec
mov
pushf
jns
sub
lret
push
insl
mov
fbstp
mov
mov
and
rolb
jmp
xchg
mov
sbb
test
sub
mov
mov
fisubl
mov
sbb
ljmp
imul
stos
pop
incl
pop
pop
cmpsl
mov
jl
pop
fidivrl
and
mov
or
jnp
push
or
push
xchg
dec
and
push
sub
mov
mov
out
jg
scas
fidivs
dec
pushf
jbe
fbld
inc
sub
xchg
hlt
mov
lcall
in
vmovupd
es
push
xchg
roll
jno
pop
xlat
mov
stos
push
mov
sub
fwait
lret
push
cmp
mov
loopne
jae
jl
dec
jnp
cmc
inc
in
mov
gs
jne
mov
enter
ds
pop
sub
fisubs
lcall
rcrb
cmpl
jmp
or
fimuls
cmp
mov
fwait
or
ja
mov
in
mov
xor
push
cmp
sub
pushf
add
sbb
in
or
jle
sbb
cmpsb
pop
cmpsb
xchg
push
fcoml
loop
fbstp
mov
cmp
sahf
xor
int3
dec
xor
jae
adc
test
push
mov
loope
repz
mov
dec
ja
or
sbb
packssdw
aas
sub
add
int3
mov
push
imul
lods
ljmp
push
mov
or
mov
jns
sbbl
sbb
cli
push
nop
lea
ss
sarb
pop
insb
mov
xchg
mov
imul
sahf
imul
pop
cmc
or
xlat
pop
pop
loopne
lock
add
loop
jmp
lods
fadds
jae
dec
popf
fwait
loop
sub
push
in
outsl
in
cmp
xor
gs
jb
cld
pop
iret
cmp
cltd
mov
mov
sti
lods
test
es
fsubrs
xchg
pop
fchs
pop
dec
mov
sarl
fs
aas
mov
xor
out
xchg
nop
ds
jbe
inc
xor
stc
popa
pop
in
lahf
dec
mov
das
mov
jge
sti
xchg
and
xor
cmpsb
gs
dec
xor
insl
dec
data16
sbb
fdiv
inc
imul
push
jbe
pop
lods
pop
pop
clc
or
add
movsb
xlat
mov
adc
xchg
ja
in
lret
aas
push
xchg
inc
mov
shlb
xchg
lret
aaa
sar
xchg
mov
push
cmp
ds
rcl
insb
adc
shll
gs
bound
aaa
pop
ret
mov
or
jmp
jle
push
xchg
mov
cwtl
inc
loope
sbb
fcoms
rcl
gs
loope
dec
lahf
lea
imull
fwait
cld
push
dec
xchg
push
out
xchg
ljmp
sbbb
or
mov
cmp
mov
jae
out
add
and
fidivrs
cmpsl
mov
pop
xchg
push
adc
ss
mov
daa
std
rorl
dec
out
add
mulb
outsb
fstps
lods
pushf
sbb
movsb
lods
aas
ds
jmp
out
lods
add
xchg
lcall
popa
jle
adc
adc
nop
adc
mov
xor
js
sub
inc
popa
test
dec
cmp
push
push
cld
sti
cmp
add
xchg
dec
lahf
cmpsb
add
popf
xor
mov
sub
lock
movsb
add
testb
inc
inc
jmp
jecxz
loope
and
sbb
dec
pop
sbb
add
or
popf
add
inc
flds
mov
dec
ja
jle
dec
mov
mov
xchg
fisubl
int
inc
in
filds
fisttpl
xchg
outsl
adc
int
xor
sbbl
dec
jp
jg
mov
push
les
fdiv
push
inc
sahf
outsb
je
nop
jns
sbb
lret
pop
mov
and
mov
imul
mov
push
lret
add
jbe
loope
out
add
fsubr
xchg
test
dec
imul
sti
xchg
mov
push
mov
test
ret
xchg
cwtl
dec
add
sarl
dec
add
shlb
mov
cltd
jo
neg
cld
xchg
inc
mov
xchg
or
loopne
push
jbe
pop
mov
dec
cwtl
adc
stos
mov
out
or
push
fidivs
bound
aas
sarl
xchg
hlt
pop
sbb
dec
jp
imul
sbb
imul
inc
fimull
sbb
xchg
and
sub
xchg
jb
adc
xchg
mov
and
popf
loopne
lahf
ret
cmpb
mov
xor
mov
test
jnp
shl
lcall
je
cmpl
push
data16
fwait
test
lods
mov
aas
popa
and
sub
stos
mov
inc
mov
mov
pop
daa
mov
mov
fwait
lock
das
xorl
sti
into
push
dec
dec
xchg
push
mov
sbb
inc
cmc
jnp
xchg
inc
or
loopne
inc
out
aam
mov
cmp
xchg
dec
popa
xchg
setno
fidivrs
repz
pop
fadd
mov
call
rcrl
mov
jnp
adc
xchg
mov
outsb
mov
js
adc
xchg
pop
lods
imul
mov
pop
mov
add
sar
inc
xchg
push
inc
dec
repz
cmp
andb
imul
clc
outsb
es
dec
pop
dec
iret
cmp
or
push
sub
xor
cli
leave
mov
loope
in
mov
test
adcb
stos
movsb
imul
outsl
int
sbb
cmp
xchg
in
push
shlb
pop
xor
mov
in
pop
mov
xor
pushl
add
in
push
sbb
or
lds
mov
ret
popf
fiadds
addb
fsubs
or
jmp
test
fiaddl
test
lea
and
test
int
pop
push
mov
sbb
mov
cmpsb
dec
inc
pop
jnp
mov
fwait
dec
movsl
nop
in
jle
adc
pop
adc
inc
inc
int3
and
add
aad
jbe
inc
jg
mov
mov
xchg
xor
push
roll
loop
and
pop
je
or
jmp
mov
ret
stos
sub
push
cs
mov
push
and
cltd
mov
mull
cmp
outsb
push
jl
inc
outsb
shr
jmp
sbb
inc
mov
ljmp
hlt
lret
pop
mov
cmpsl
mov
jns
cmc
xchg
fs
add
shlb
pop
pop
daa
orb
jno
or
addr16
xor
inc
stos
into
and
rcrl
lock
jle
fildll
xchg
hlt
aaa
das
sbb
stc
xchg
lea
cwtl
jns
mov
mov
ljmp
inc
cs
add
and
sbb
mov
push
int3
bound
repz
mov
cld
daa
scas
cwtl
cld
mov
adc
mov
sbb
cld
leave
hlt
adc
push
sbb
lret
jmp
mov
movsb
or
mov
adc
pushf
gs
sbb
add
out
pop
xchg
stos
jne
mov
inc
jg
or
ret
arpl
push
mov
push
fcmovu
loope
mov
dec
mov
fsubrs
ds
out
dec
fmull
or
mov
xor
lds
or
test
in
clc
jg
lods
les
mov
popa
mov
scas
js
cmp
aas
or
inc
ret
and
xchg
insl
and
aad
cwtl
fldl
mov
push
dec
jp
or
mov
outsb
jmp
lcall
inc
adc
pushf
pop
test
push
pop
cltd
scas
loope
xor
into
sub
rorl
cmp
add
mov
fiaddl
dec
jb
outsl
xor
or
dec
std
mov
mov
cmp
sti
dec
pop
leave
jmp
int
fwait
mov
inc
outsl
jecxz
js
fldenv
and
lods
daa
push
movsb
adc
mov
imul
push
gs
mov
dec
int3
mov
jns
ret
sub
inc
or
loope
mov
push
test
std
inc
movsl
sbb
pop
mov
add
dec
cmp
movsl
pushf
std
sbb
rcl
inc
xchg
xchg
fdivs
dec
adc
pop
repnz
xchg
and
clc
pop
xchg
daa
aad
and
adc
fidivl
dec
jno
popa
mov
fwait
sbb
mov
clc
cmp
xchg
xchg
in
jb
push
mov
add
pop
sarb
and
cli
xchg
sbb
pop
and
addr16
sbb
outsl
fnstcw
adc
aam
pop
inc
pop
lahf
sbb
and
and
jno
and
xchg
bound
xchg
and
add
out
inc
or
enter
jmp
add
pop
arpl
out
das
adc
sub
popf
fs
repz
xlat
ret
outsb
push
decl
shlb
daa
pop
fs
mov
push
ret
lea
inc
test
inc
xor
scas
mov
jp
jns
sbb
mov
xchg
pop
and
pop
fisttpll
adc
add
inc
xor
mov
jecxz
sbb
xchg
pop
ja
cld
mov
lods
or
push
cmp
adc
cmp
mov
dec
in
add
dec
es
pop
push
into
enter
testl
shrb
cmp
push
in
push
push
lods
inc
pop
push
xchg
xor
cmp
movsb
mov
ffreep
cmpsl
pop
cmp
fldcw
adc
push
movsb
xchg
stos
push
cli
in
cmp
and
cmpsl
cltd
dec
lcall
sbb
push
and
lcall
cmp
fwait
lcall
pushf
negb
pushf
mov
out
inc
pop
stc
push
and
addb
leave
sbb
add
dec
cmp
dec
xchg
sub
mov
sar
pop
mov
stos
xchg
pop
in
outsl
pop
mov
orl
repz
mov
xlat
test
mov
fwait
mov
fs
lcall
and
pop
add
std
xchg
add
dec
fsubl
pop
mov
jae
rclb
cwtl
popa
push
xor
xlat
cmp
mov
mov
jo
das
inc
movsl
sub
std
jmp
ja
dec
repnz
movb
sub
ret
leave
cli
push
add
xor
enter
cs
clc
jnp
jle
pushf
or
shlb
mov
clc
movsb
gs
adc
push
mov
and
cmp
add
lret
out
cmp
pop
aas
data16
mov
negl
idiv
rcpps
leave
mov
imulb
sub
fdivs
lcall
icebp
test
adc
addl
mov
mov
push
test
or
inc
dec
inc
mov
sbb
sub
arpl
into
cmc
pop
das
out
bound
xlat
jae
pop
dec
inc
inc
xchg
stos
adc
aas
movsb
add
adc
into
sarl
dec
mov
jb
out
movsb
popa
mov
lds
xor
lahf
adc
mov
mov
leave
repnz
daa
movsb
push
pop
mov
pop
pop
fcmovnu
xchg
int
sbb
ret
and
jns
xor
into
insb
sub
jl
mov
loope
jge
inc
sbb
add
mov
ret
mov
add
mov
jle
sbbb
imul
mov
mov
push
lahf
idivl
inc
dec
std
xchg
dec
or
jecxz
push
cli
and
imul
mov
stc
bound
jno
ljmp
xchg
cmpsl
inc
mov
stc
test
ja
ljmp
mov
and
dec
rcr
xchg
sti
inc
add
xchg
cmc
xor
int
push
and
out
pop
call
sub
xchg
adc
cmp
adc
or
adc
imul
push
inc
push
popf
fistpll
enter
stos
xor
call
fcmovb
mov
daa
and
pushf
andl
pop
cmp
rcrl
mov
mov
xchg
adcb
lock
adc
cmc
push
xor
and
sti
mov
xchg
pushw
imulb
push
and
fisttpll
sbb
add
cltd
or
fcompl
in
cmpsl
push
dec
jbe
aam
iret
scas
push
aam
add
jp
cmpsb
mov
arpl
cmp
imul
filds
stos
es
cs
ds
add
in
insb
pop
xchg
pusha
testl
and
repz
pop
xor
je
rcll
pop
leave
inc
call
in
and
cmpsb
sarl
pop
or
lar
lock
negb
sahf
xor
adc
xchg
repnz
out
fs
loopne
dec
popf
lcall
movsl
in
cmp
mov
out
pop
test
sub
icebp
cmp
inc
mov
pop
cs
and
mov
and
cld
andl
aas
inc
insl
xor
ja
dec
data16
push
or
mov
mov
lea
pop
aaa
test
inc
ret
bound
adc
loope
pusha
adc
lds
push
lock
pop
cmp
xchg
jb
sbb
nop
loope
movsb
fcom
push
jae
rep
les
mov
xchg
fidivl
push
jae
cmp
xlat
js
stos
lds
sbb
rolb
aad
outsb
fs
mov
xchg
adc
mov
lds
nop
mov
or
repnz
jne
or
nop
loope
sbb
loope
cs
mov
fucompp
pusha
xchg
into
rcrb
inc
daa
fbstp
test
push
lods
je
movsl
ret
stos
imul
aam
pop
adc
in
inc
pop
shl
hlt
xor
scas
mov
das
or
xor
xchg
aas
jg
adc
test
push
stos
or
les
mov
mov
lods
insb
xchg
scas
roll
pop
iret
sub
pop
movsl
dec
cmp
jo
mov
cmpsb
sahf
sub
jbe
mov
jbe
mov
lods
stos
std
mov
push
mov
cmc
aas
sub
cltd
mov
clc
cmp
adc
jns
jne
adcl
das
inc
xor
popa
jns
adc
mov
ja
mov
sub
int
jmp
popf
or
jae
lods
ss
mov
scas
jg
push
xor
sbb
add
push
frstor
outsb
fistpl
cltd
subb
repnz
pop
es
mov
xlat
clc
pop
mov
mov
imul
inc
sub
inc
push
cs
add
in
scas
ret
jo
xor
div
push
sbb
xor
stc
push
xchg
add
nop
xchg
jge
xchg
mov
test
mov
aaa
call
dec
aas
aas
and
fmull
sub
mov
or
inc
sbb
jne
mov
mov
int3
movsl
and
jbe
push
push
shll
fcompl
jmp
sub
push
mov
std
stc
cmp
incl
push
xor
inc
sar
mov
cli
lods
idiv
ds
sbb
cwtl
jg
xor
jne,pt
adc
sbbl
xor
pop
adc
lock
xchg
mov
aaa
aam
ret
sbb
add
push
in
hlt
movsl
cli
jnp
ret
movsb
and
dec
mov
inc
mov
movsb
add
imul
pxor
pop
gs
mov
aam
out
xor
add
ret
addb
aas
lods
mov
mov
addr16
adc
lret
pop
pop
inc
xor
jg
sbb
nop
clc
daa
fstps
mov
mov
jo
stc
adc
outsl
lds
mov
std
jp
sub
popa
mov
or
cli
push
mov
xchg
daa
xchg
lret
out
dec
sar
imul
push
and
cmpsb
xchg
xor
je
mov
cmp
inc
xor
shrb
jge
rcll
pop
aam
loop
pushf
lahf
inc
movsb
dec
stc
mov
ret
jmp
push
push
cli
pop
cmp
pop
sbb
jnp
test
push
orl
mov
inc
sbb
jno
jmp
cmp
mov
inc
insb
adcb
or
xchg
mov
mov
dec
nop
ret
or
xchg
jl
fmul
and
pop
pop
add
xchg
cmp
jecxz
push
sbb
bnd
jecxz
jp
data16
dec
outsl
test
dec
daa
or
ret
scas
inc
fwait
xor
jle
icebp
or
es
insl
outsl
mov
ret
shll
int
or
fwait
notl
sub
push
mov
xlat
arpl
arpl
inc
or
imull
push
cmp
rorb
push
bound
ja
xor
xchg
movsl
sub
xchg
mov
out
popf
popf
in
sbb
cld
ss
mov
inc
lret
popa
sub
pop
call
jl
inc
pop
cmp
jo
xchg
or
mov
xchg
cld
xor
arpl
sub
ficompl
push
dec
in
cld
in
push
int
push
divl
ret
dec
adc
insl
int3
mov
or
fdivrp
shrl
jb
mov
inc
jmp
ret
int
repz
xor
jle
jmp
cli
dec
pop
sarb
dec
cs
out
pop
or
xor
xchg
pop
and
fmull
mov
sub
jge
movsl
push
cmpsb
sbbb
mov
push
test
std
fnstenv
sub
lcall
pop
int3
cwtl
lods
mov
sub
fstpl
out
stos
les
mov
lods
fimull
sub
or
rcll
cld
add
lahf
popf
popa
pop
mulb
mov
mov
cmp
fbstp
popa
jo
ja
fcmovnu
mov
mov
sar
adc
loopne
icebp
jg
push
pusha
pop
aas
je
mov
mov
sbbl
push
xchg
xor
in
inc
jge
dec
push
xor
faddl
adc
out
cmpsl
xchg
mulb
idivl
push
mov
or
inc
rcl
test
mov
dec
pop
in
arpl
sub
fnstenv
push
dec
mov
dec
push
hlt
out
fstl
mov
push
loop
in
ds
adc
call
test
cmp
or
loopne
fidivl
inc
rol
pop
inc
movsb
or
loop
jle
jle
fistpll
sub
mov
fsubrs
mov
dec
jno
insb
and
loope
xor
adc
mov
mov
arpl
adc
shlb
outsl
cwtl
cmp
add
xchg
sarl
mov
aad
add
mov
lahf
xchg
or
cmp
loope
scas
cltd
adc
push
mov
or
mov
repz
mov
jmp
cltd
test
fs
or
jo
pop
sbb
out
cli
dec
loope
mov
aad
ret
and
cmp
jg
pop
nop
stc
pop
ss
enter
push
test
imul
aad
fldenv
or
xor
notl
pop
icebp
lock
dec
push
xor
stos
shl
movsb
lea
repnz
cmpsb
inc
jne
aam
pop
xchg
mov
aam
and
xchg
inc
rclb
stos
inc
lretw
pop
lock
insb
idivb
pop
ja
sahf
push
sti
lock
xchg
mov
jno
mov
xor
mov
popa
fbld
jbe
and
jae
test
cmp
in
mov
test
mov
rcll
add
test
addr16
addr16
loopne
movb
or
hlt
or
fisttpl
call
cmpsb
push
inc
aad
fbstp
adc
xor
adc
lret
wbinvd
add
push
rclb
mov
movsb
or
jae
pop
pop
sbb
mov
jae
lods
pop
ficoms
cmp
loop
dec
jmp
gs
ss
call
mov
mov
test
cmp
push
subl
sbb
popa
out
adc
inc
lret
mov
imul
dec
je
inc
jg
mov
repz
dec
leave
scas
mov
mull
mov
sbb
xor
jae
adc
sbb
dec
icebp
jmp
sbb
ja
movsb
jo
repz
add
data16
xchg
pop
call
jecxz
movsl
mov
xchg
std
clc
gs
mov
and
andl
jmp
cld
cld
cld
scas
mov
repnz
js
mov
jns
mov
push
leave
xchg
or
xchg
or
outsl
enter
fmul
xor
sbb
insl
pop
and
cmc
mov
lds
pop
les
sub
scas
mov
enter
test
loopne
clc
movsb
xlat
std
adc
xlat
je
pop
xor
sbb
dec
mov
ja
std
gs
xchg
pop
jge
loop
jb
jbe
inc
or
int3
enter
rorb
aas
jno
insl
inc
mov
jo
inc
je
and
and
imul
sahf
icebp
jle
stc
iret
outsb
pop
in
and
inc
dec
push
cvtpi2ps
lret
xchg
fstps
lahf
xchg
sub
jnp
popa
pop
mov
push
aad
lret
cmp
subl
in
xchg
popf
push
cwtl
sub
sub
cli
or
jo
xchg
leave
fstpt
mov
jmp
shll
sbb
cmpsl
addl
popa
xor
push
push
cmp
das
jns
sarb
xchg
jbe
xor
mov
pop
movsb
sahf
add
push
sbb
arpl
push
inc
xchg
repz
cmp
mov
inc
mov
and
movsb
inc
dec
sbb
popa
mov
mov
std
mov
aam
loop
testl
js
adc
push
sub
iret
add
or
imul
xchg
popf
inc
addr16
dec
dec
sti
push
push
mov
xor
mov
sti
inc
cmp
adc
sbb
mov
dec
lcall
or
inc
sub
push
out
roll
sub
jg
enter
dec
inc
jns
ja
push
lcall
rcrl
fidivs
jns
push
fwait
testl
orb
out
enter
mov
aad
sbb
cmp
jmp
cwtl
cmp
icebp
jmp
sub
push
test
inc
jo,pn
xor
cmp
rolb
xor
es
sbb
sbb
popf
adc
daa
push
inc
mov
nop
dec
ret
jge
scas
mov
enter
push
je
daa
mov
jbe
cmp
dec
das
or
cli
push
pop
pop
and
dec
xor
adc
std
rolb
xor
and
loope
arpl
shrl
mov
inc
fdivs
sub
xchg
dec
pop
sbb
int
scas
xchg
rolb
sub
and
sahf
sbb
sbb
movsb
sbb
jb
out
sahf
pop
lret
ds
sub
jns
imul
mov
test
adc
fmuls
cmp
cmp
pop
dec
popa
rclb
or
std
data16
and
shlb
dec
mov
in
xchg
gs
mov
mov
dec
cmp
rcrb
test
pop
push
cmp
sub
dec
jl
inc
inc
imul
sbb
lock
orb
mov
adcb
add
in
negb
ret
mov
scas
icebp
into
std
std
mov
inc
xchg
scas
and
push
inc
cmp
inc
dec
in
mov
sub
movsb
push
mov
call
pop
pop
push
push
jmp
cmp
inc
fs
xchg
xchg
shl
push
imul
cmc
data16
and
adcb
mov
jle
aaa
add
les
cmp
inc
xor
mov
cmp
cmpsb
adc
fldenv
subb
sbbb
xchg
cmp
js
hlt
lcall
jno
std
je
push
fwait
dec
call
lock
test
cmc
mov
mov
sahf
sub
sub
lods
xor
pop
ja
bound
enter
dec
sub
sbb
insb
sbb
and
mov
cli
adc
loopne
add
xorb
mov
jo
das
int
push
mov
cmp
int
dec
jne
incb
mov
jle
mov
push
test
aas
pop
rcll
lock
repnz
js
adc
ret
jnp
addl
xchg
mov
jp
jno
pop
int
scas
mov
int
jg
adc
push
lock
cltd
in
xchg
mov
outsl
push
mov
imul
pop
outsb
jno
push
jp
daa
sub
jge
pop
loop
fcomi
mov
or
sub
outsb
and
shlb
cmp
dec
push
jle
loopne
std
inc
xchg
daa
out
push
das
sbb
fmull
jmp
push
sub
sbb
inc
data16
pop
cmp
and
enter
jecxz
add
inc
mov
subl
shlb
dec
orl
push
insb
nop
push
mov
loop
push
mov
jne
cmp
or
mov
jle
dec
enter
les
cltd
dec
stos
and
push
inc
lods
int
lahf
stos
cmp
cwtl
push
push
jb
in
cli
sub
jne
pop
int
cmp
dec
lret
inc
sub
movsl
xchg
rclb
xchg
xchg
hlt
and
call
dec
out
enter
aaa
filds
mov
loope
inc
mov
cmp
push
xchg
scas
hlt
das
mov
mov
addr16
sti
loope
adcl
subb
mov
add
cmp
cli
dec
enter
xchg
aam
cmp
addr16
lods
mov
jae
rcr
mov
cmovg
insl
dec
pop
enter
pop
add
sub
sbb
imul
dec
repz
ljmp
push
mov
mov
icebp
stc
push
fsubl
fcmovbe
cmp
lret
imul
icebp
test
bound
jo
rcll
mov
lret
movsb
stos
push
dec
xchg
xor
sbb
je
add
std
arpl
fldt
mov
movsb
mov
sub
les
jne
jbe
sti
pop
lods
addr16
es
pop
fsts
movsb
or
rclb
mov
jmp
jno
les
cmp
cli
inc
out
push
push
mov
jg
cli
add
push
xchg
arpl
cmpb
jno
cltd
loopne
rorb
mov
dec
mov
pop
test
push
xchg
bound
push
lods
xor
sarb
or
call
lock
cmp
mov
jp
sbb
es
mov
fstp
jmp
dec
test
cltd
inc
inc
push
mov
jge
jns
xchg
add
sbb
lret
cmp
rcll
dec
ljmp
lahf
out
xor
mov
cmpsb
or
jg
xor
push
sub
cmc
sub
mov
jg
inc
lret
add
sub
and
mov
and
xchg
ret
mov
daa
pop
test
sti
rcrl
or
daa
aaa
cmpsl
jl
pop
mov
mov
cmc
push
insb
cmp
ja
adc
jl
fisttps
iret
les
jo
addb
cmpl
xchg
add
jae
push
jae
push
std
pop
fsubrs
imul
sub
pop
aad
aam
jb
out
jge
xor
in
je
sbb
insl
aad
js
int
scas
inc
push
into
movsb
roll
xor
or
mov
and
mov
test
pop
push
add
mov
mov
jle
xchg
lcall
and
les
les
push
imul
push
insl
cld
jle
xor
out
repnz
pop
cwtl
in
xchg
pushf
call
dec
loop
xor
sbb
subl
out
stos
stos
stc
movsb
test
dec
mov
pop
sbb
scas
rcrl
lods
sub
mov
das
bound
or
arpl
sbb
repnz
push
filds
mov
xchg
aam
or
push
sbb
jmp
idivl
mov
adc
arpl
lods
dec
ficompl
sbb
or
jp
xchg
mov
push
lret
stos
test
ja
into
cmp
cltd
push
cmpsb
fbstp
jg
sub
out
hlt
mov
lds
rcrl
data16
mov
inc
adc
fwait
sbb
mov
sub
into
test
mov
add
mov
clc
dec
or
cs
sub
push
stc
js
stc
and
and
push
daa
push
mov
sbb
push
lock
ds
cwtl
ret
repnz
and
test
inc
out
xchg
lock
je
xor
sbb
lcall
out
xchg
mov
adc
in
push
sub
insl
cmp
fs
add
push
mov
sbb
div
cmp
lods
lcall
mov
icebp
sbb
je
shrl
fsubl
fwait
jg
or
or
mov
and
sub
inc
add
dec
adc
fldenv
dec
and
mov
mov
pop
adc
pop
add
add
int
mov
sarl
mov
inc
xchg
adc
xchg
mov
jns
sbb
sub
sahf
jmp
int3
mov
cmc
inc
scas
ljmp
or
jecxz
mov
cmp
inc
mov
test
cmp
in
xchg
push
cmp
outsl
inc
mov
adc
fsubs
cs
shlb
lret
or
ljmp
test
jge
mov
cmp
xor
cmp
fwait
in
ljmp
sbb
jae
aaa
fisttpl
xor
rcr
sahf
sbb
sbb
mov
xchg
dec
shrl
loope
gs
daa
lea
ret
icebp
sbb
xchg
fnsave
es
sbb
or
fs
and
mov
sub
inc
adcb
fwait
aad
sub
or
flds
cmp
idivb
inc
xchg
imul
fidivs
out
pushf
popf
push
pop
adc
xchg
cvtps2pd
data16
pop
mov
adc
int3
adc
and
inc
fildl
xchg
ja
insl
pop
mov
push
mov
pop
jl
mov
dec
push
dec
sbb
movsl
ret
clc
pop
pop
lods
mov
inc
enter
daa
xchg
sub
or
ficoms
jo
movsl
ljmp
sub
xchg
rolb
jmp
mov
nop
inc
mov
hlt
sub
mov
shr
int
insl
data16
jb,pt
jg
and
xor
mov
sub
adc
notb
orb
sti
or
or
mov
or
and
push
rorb
sbb
mov
jge
pop
inc
fiadds
pop
ja
dec
testl
pop
data16
daa
icebp
shl
cld
loopne
push
mov
cmc
adc
jmp
xchg
sub
jae
pop
test
rcr
xor
xor
pop
bound
jge
jne
loopne
pushf
les
sub
bt
jmp
jne
pop
cwtl
cs
push
adc
adc
inc
fildl
stos
and
in
jno
cmc
add
xor
inc
push
in
lock
sbb
rorb
push
jg
out
mov
fs
sub
push
adc
dec
or
scas
jge
add
xchg
sub
addr16
push
test
movsl
in
aam
pop
mov
sub
mov
test
je
hlt
mov
xlat
and
sbb
dec
pop
lods
pop
cmpsb
into
ret
push
prefetch
sbb
fmull
xchg
jge
add
jno,pn
dec
ljmp
push
xchg
dec
push
jbe
lock
test
pop
mov
inc
or
adc
imul
out
into
stc
mov
sub
and
out
jns
rorb
mov
push
sbbb
jg
loope
arpl
inc
jae
or
sbbb
add
adc
pop
push
out
xor
mov
push
jnp
mov
jmp
lods
pop
push
iret
popa
adc
or
lds
divb
in
bound
flds
sahf
sub
outsl
xor
mov
std
push
enter
js
incb
jnp
adc
cltd
adc
push
cmp
sub
xchg
xchg
sbb
sub
lretw
sbb
or
les
mov
push
mov
xchg
fdivs
cld
push
sub
sub
popa
ret
fsubl
mov
sbb
addl
lds
faddl
sub
jl
inc
jne
stos
mov
cmp
ss
movsl
cmpsl
je
movl
cmp
jmp
ss
cmp
cmp
call
mov
mov
pop
pushl
enter
jae
fs
ret
xlat
rolb
mov
aaa
sub
mov
and
dec
test
movsb
add
fyl2xp1
scas
inc
cltd
xor
jnp
fcomp
and
pop
iret
xchg
mov
adc
mov
imul
subl
sbb
fs
adcl
imulb
mov
shll
out
daa
or
mov
and
sbb
in
test
jo
sbb
pop
jne
je
lret
aam
jl
or
repz
fs
jle
scas
jmp
adc
ja
clc
xorb
cmpsl
add
mov
into
mov
into
mov
xchg
lea
cwtl
xor
xchg
push
scas
test
ret
xchg
pushf
and
fcoml
jae
push
imul
mov
cmpsl
or
es
jo,pt
cmpsb
add
and
mov
sti
fldt
mov
inc
lods
mov
dec
movsb
lods
popa
inc
jo
and
xlat
clc
or
dec
repnz
stos
fdivs
gs
shlb
xchg
loop
hlt
adc
enter
dec
fiaddl
cmp
jno
and
jmp
das
xchg
test
lock
cmp
imulb
daa
ret
fcomp
mov
push
push
mov
or
fs
or
jnp
sub
xor
dec
int3
sbb
push
test
ja
mov
xlat
sub
shlb
faddl
mov
push
lds
ja
rcl
leave
lock
cmpsb
ret
outsl
cld
mov
rolb
pop
jle
fistpll
lds
mov
dec
jecxz
test
xchg
mov
dec
jecxz
mov
fcompl
pushf
add
lret
push
xor
sub
mov
movb
testl
or
inc
lcall
jbe
pop
sub
adc
adc
push
adc
inc
jmp
and
fwait
pop
loop
sub
cmp
mov
or
iret
mov
push
xchg
sahf
inc
jno
aas
push
push
add
push
jle
jns
loop
popf
xchg
mov
push
push
stos
jge
les
cmc
imul
cmp
or
adc
out
scas
daa
mov
aas
dec
push
std
push
or
sbb
add
ljmp
shl
fcompl
dec
outsl
or
fistl
repz
outsb
pop
xchg
fwait
mov
adc
jae
fnstenv
push
aad
inc
stos
iret
packuswb
inc
sbb
aas
mov
loop
dec
mov
ljmp
mov
and
mov
dec
mov
xor
cld
jmp
pop
and
mov
inc
add
sbb
rcrb
mov
imul
cmp
add
adc
leave
push
sbb
fs
sbb
cmp
mov
push
fsubl
lcall
pusha
dec
cmp
jns
call
mov
in
loope
xchg
mov
or
pop
jge
out
sub
inc
jno
loopne
into
xor
mov
push
mov
inc
fdivs
ret
cld
mov
xorb
sub
addr16
out
inc
adc
add
bound
enter
xchg
cwtl
cmpl
mov
jle
popf
pop
in
addr16
jmp
mov
push
mov
mov
shl
sbb
cmp
dec
stc
inc
sarl
or
add
xlat
mov
xchg
repnz
jno
push
sbb
out
add
pop
mov
pushf
neg
int3
mov
lret
pop
jb
xor
add
test
sub
ret
fs
imul
jle
mov
ret
dec
add
test
pop
jge
inc
adc
sbb
mov
add
pop
jl
lods
std
pop
adc
rolb
pop
loope
cmp
iret
mov
sbb
pop
adc
adc
and
in
add
jno
lret
dec
jno
in
mov
addr16
cwtl
rol
loopne
cmc
mull
cli
pusha
mov
xchg
jmp
jmp
stos
dec
push
outsb
cmp
int
inc
mov
fists
dec
jno
pop
sbb
sti
lea
ljmp
mov
jl
cmp
and
xchg
test
xchg
outsl
std
jge
pop
jo
push
cmp
adc
mov
and
adc
btc
mov
dec
xlat
test
xor
xlat
add
push
xor
sub
xlat
popa
dec
push
int3
and
js
jecxz
lods
adc
xor
pop
jl
mov
cmpsb
cmp
add
jg
xchg
and
adc
jnp
jne
sbb
fists
mov
inc
inc
shlb
xchg
sbb
mov
push
sub
push
add
mov
jns
xor
add
gs
jmp
pusha
nop
pop
aam
mov
inc
jg
adc
outsl
mov
or
jne
sub
xor
sbb
add
in
je
fnstenv
imul
movsl
pop
fxch
mov
aas
jg
jb
clc
fsts
cmc
xchg
xchg
filds
xchg
jge
xchg
push
rorb
fwait
mov
cli
sbb
adc
sub
inc
icebp
test
xor
push
insl
jg
scas
inc
or
sub
ja
ss
out
stos
adc
adc
lds
leave
ja
adc
sub
add
pop
cmp
sbb
mov
lret
dec
ror
pop
mov
add
enter
or
pushf
cmc
cli
lock
sub
sub
inc
loop
dec
shl
inc
ficoml
movb
scas
sbb
sbb
scas
xchg
jge
or
cmp
sub
mov
jl
xchg
sahf
or
out
cld
sbb
test
bound
sbb
lea
popf
inc
in
push
test
push
daa
std
inc
lock
lds
lcall
das
jo
fistpll
out
cmp
cmpsl
cld
loop
push
sub
jge
mov
pop
xor
mov
mov
movsl
aaa
mov
repz
adc
rcrl
scas
aaa
aad
int3
cmp
cli
dec
je
shlb
jge
in
dec
cmp
dec
jno
mov
cmp
mov
fs
dec
stos
mov
inc
test
mov
add
arpl
pop
pop
nop
jl
enter
jno
pop
leave
loopne
dec
sti
dec
jecxz
cmp
mov
cwtl
inc
cmp
outsb
stos
cmp
out
rclb
nop
mov
sbb
pop
pushf
fwait
cmpsl
enter
stc
fistl
shr
or
in
bound
cmp
cmc
mov
in
push
movsl
test
pop
push
iret
push
lock
lahf
add
dec
and
push
ret
test
push
sti
lods
fbld
movsb
adc
xchg
add
je
lods
pop
jle
aad
mov
jle
shrl
out
cmp
mov
ffreep
fs
imul
subl
inc
adc
sbb
xor
pop
mov
push
iret
in
xchg
pusha
ret
inc
or
sbb
mov
sbb
cmp
ja
sbb
jno
les
push
or
mov
pop
bound
jg
mov
gs
inc
rclb
rorl
ss
mov
adc
lock
pop
and
call
mov
out
rcrb
xchg
cli
testl
repz
pop
adc
xchg
xor
push
xchg
sub
in
icebp
sahf
repnz
lcall
push
das
xchg
dec
loop
add
lods
jecxz
and
pop
add
jo
mov
lahf
xor
adc
mov
push
mov
loopne
jmp
pop
loope
or
sti
pop
sub
js
jae
sbb
fisubrl
repz
imul
jbe
inc
movsb
add
jmp
test
mov
xor
mov
repnz
or
dec
mov
iret
mov
hlt
repnz
sbb
or
xorb
test
ds
xor
cmpsb
mov
jmp
mov
sbb
mov
jnp
je
sub
push
stc
mov
xchg
mov
fsubs
sarb
movsb
in
pop
in
inc
fcomp
xchg
push
subb
popf
sbb
fisttps
nop
dec
add
addl
cmp
imul
lret
hlt
add
jae
jecxz
out
jbe
jg
popa
inc
pop
add
jp
cld
adc
adc
or
push
test
sub
adc
and
push
push
push
jnp
inc
mov
hlt
mov
dec
shll
loopne
jge
out
sub
aad
aam
push
in
mov
std
inc
aam
enter
mov
sbb
scas
and
popf
add
es
xchg
in
pop
add
fistpl
add
sar
gs
xchg
outsl
test
sbb
xchg
lret
jmp
daa
cmp
adc
data16
lahf
inc
test
jg
sbbb
or
movsl
mov
inc
or
dec
inc
je
popf
inc
clc
into
test
leave
je
mov
stos
or
mov
push
ret
dec
or
outsl
adc
mov
shrb
dec
icebp
or
data16
jo
sbb
je
inc
pusha
xchg
mov
js
xchg
popa
pop
push
test
test
sti
add
jns
mov
jnp
pop
sbb
push
push
jmp
stos
cltd
mov
mov
jnp
call
cmp
fadds
add
mov
inc
mov
loope
sbb
or
aam
popa
cmc
mov
ret
adc
sbb
adc
das
mov
xchg
pop
mov
fs
in
push
mov
out
mov
push
mov
shl
sub
cmc
push
enter
mov
jge
loope
mov
loopne
sub
jl
cwtl
ljmp
mov
and
ss
jg
and
sub
jp
or
fdiv
leave
jb
test
clc
mov
and
nop
lock
mov
and
mov
push
mov
mov
adc
add
cmp
out
inc
push
imul
leave
in
in
jmp
sub
mov
dec
cmp
rcrb
dec
and
addl
xchg
xor
cltd
mov
pop
das
mov
loope
sahf
jmp
pop
jge
xor
pusha
push
outsb
mov
arpl
pop
lcall
aaa
mov
rcr
pushf
mov
movsl
xlat
dec
xchg
sbb
addr16
shlb
jp
pop
and
addb
adc
addr16
faddl
adc
xchg
out
es
jo
lcall
lret
xchg
and
mov
mov
les
lock
test
jmp
and
cwtl
push
dec
not
je
inc
dec
std
insb
sahf
inc
dec
xchg
mov
lret
cmc
pushf
push
pop
cmp
jnp
adc
outsl
cmp
mov
xchg
push
cmp
ret
ja
lea
lret
in
push
int3
mov
push
rorl
jbe
mov
rorl
bound
lds
aas
mov
inc
aad
dec
movsl
dec
scas
add
inc
jno
pmullw
sbb
divl
push
out
call
xor
xchg
cwtl
pop
addl
xchg
ds
lods
test
cmp
stos
test
popa
iret
or
mov
sbb
mov
sub
icebp
rcll
inc
outsl
in
dec
push
test
cmp
push
lods
ss
rolb
ret
scas
xchg
mov
or
test
pusha
or
insl
push
fcoml
lock
xchg
int3
add
adc
mov
jp
lcall
loopne
addr16
dec
decl
aaa
ret
mov
mov
sahf
movsl
push
divl
mov
or
repnz
mov
popf
inc
dec
lods
jmp
push
inc
aas
out
inc
es
cmp
int
and
arpl
pop
and
jp
enter
mov
jecxz
in
sbb
xor
fs
adcb
jmp
pop
rep
aam
or
nop
inc
xor
imul
std
xchg
mov
xor
mov
repz
hlt
mov
dec
inc
int
mul
ja
jmp
int3
enter
push
xchg
sub
mov
addr16
jl
jg
leave
bound
clc
repz
inc
xchg
cs
mov
pushf
mov
dec
dec
mov
mov
cmp
push
sub
sub
lret
pop
dec
jg
fistpll
addr16
lret
rorl
xchg
cs
cltd
xchg
cmp
cmpsl
leave
or
sub
popf
out
jp
outsl
call
and
idivl
jecxz
outsl
stos
mov
stc
imul
in
in
repnz
sub
insw
enter
js
out
lcall
dec
add
lahf
mov
loope
mov
xor
outsl
out
jmp
and
lret
xchg
enter
cld
or
in
fmull
mov
mov
pusha
ja
push
aas
lods
cs
push
sub
daa
in
lods
adc
lcall
mov
pop
adc
cs
out
js
sbb
mov
mov
mov
add
std
xchg
adc
xor
dec
test
outsl
lock
sti
pop
sbb
mov
xchg
sbb
loopne
jl
scas
sub
mov
fcomi
ret
imul
jo
call
sahf
xor
rclb
push
cs
add
xchg
pop
sub
dec
aam
test
movsb
and
mov
loopne
fcmovnu
sub
xor
hlt
repnz
mov
or
push
filds
data16
xlat
cmp
int3
outsb
clc
pushw
mov
daa
sbb
mov
daa
stc
adc
mov
fcomps
ljmp
push
sub
ffreep
fldcw
add
sbb
pusha
fs
push
push
xchg
mov
rcrl
icebp
mov
lods
push
push
call
scas
fwait
add
outsl
cmp
ja
jge
inc
ja
nop
bnd
jl
rcr
push
ds
sub
lret
cmc
lods
jge
movl
pusha
inc
or
mov
jbe
lret
roll
mov
nop
sub
mov
cmovae
mov
add
dec
insl
mov
mov
xchg
inc
push
sbb
or
and
inc
jecxz
pushf
test
mov
pushf
aam
mov
mov
cmp
xorb
nop
out
loope
sub
mov
in
adc
dec
jno
xor
jl
push
cli
insb
add
roll
ljmp
ja
push
jnp
push
jae
mov
and
jg
es
mov
push
add
fldt
pop
xchg
jae
fsts
jae
popa
mov
rdmsr
movsl
fimuls
cld
dec
stc
call
test
mov
mov
sbb
test
cmp
fsubrl
mov
mov
cmp
setb
pop
jp
sub
ret
cwtl
or
cli
add
xor
orl
and
stc
test
push
jp
xchg
in
test
rcl
test
mov
sahf
lods
ret
add
mov
jge
rclb
add
fcomps
sahf
scas
mov
and
dec
xor
push
mov
push
lea
sbb
and
or
clc
xchg
cmp
das
pop
fwait
inc
sbb
in
jl
jne
pop
push
loopne
or
jl
insl
mov
pop
cmp
inc
adc
xchg
xchg
rorb
xor
push
dec
ds
push
out
pushf
dec
insb
sub
push
pop
pop
push
jo
test
lcall
mov
mov
xor
ja
sti
dec
and
sub
pop
aad
mov
jns
lock
adc
sarl
push
xchg
rolb
mov
inc
ja
iret
popa
sti
jb
inc
jg
lahf
imul
xchg
push
icebp
add
gs
push
dec
dec
shlb
inc
dec
sub
lods
aam
inc
jecxz
xlat
push
ret
int
mov
pop
ss
call
xlat
loopne
lock
test
test
loop
mov
dec
ljmp
repz
add
dec
movsb
add
divl
mov
xchg
and
xor
xor
cmp
movsb
mov
pop
mov
addb
shrl
mov
xor
pop
negb
dec
cltd
push
push
pop
outsl
adc
jp
rcrl
in
in
or
in
mov
and
ljmp
xor
ret
sti
sub
inc
into
mov
xchg
jne
and
or
icebp
and
fistpl
lcall
dec
dec
sbb
movsl
pop
push
sbb
pop
loop
sub
adc
xor
pop
xlat
mov
or
sbb
push
xlat
adc
xor
sub
bound
fstl
mov
mov
dec
fildll
mov
cmp
imul
xchg
xchg
aas
jl
inc
dec
pop
xchg
popf
lcall
lret
push
adc
addr16
in
xchg
std
mov
or
add
mov
inc
sub
sahf
or
cmovno
inc
jno
push
jns
push
loopne
xor
pop
je
mov
out
push
pusha
into
xor
popa
push
cwtl
std
ljmp
mov
jg
lcall
or
or
inc
mov
mov
mov
popf
pop
lds
or
push
fidivl
cmp
andb
mov
lods
adc
mov
in
outsb
and
out
aas
loope
push
push
int
ja
test
je
or
pop
cmp
sub
jge
inc
add
add
inc
das
lcall
cmp
dec
add
cmp
call
call
jb
in
xor
mov
sbb
mov
cmp
sbb
aam
xor
xor
xchg
pop
cmpsl
hlt
es
push
or
add
jecxz
fimuls
fwait
ss
cmp
rcll
jno
stos
test
ljmp
mov
test
sub
sub
sbb
lret
xchg
cmp
or
dec
jae
pop
movsb
xchg
nop
xor
push
xchg
daa
jnp
push
leave
nop
fdivrl
mov
mov
test
sbb
inc
loop
jbe
dec
lods
or
repz
or
sbb
inc
sub
out
or
pop
xchg
mov
movsl
btrl
call
out
shll
push
add
push
jnp
xor
call
and
rol
das
inc
or
mov
inc
sbb
push
lret
test
aam
test
das
jecxz
ja
test
arpl
mov
cld
test
push
cmp
sahf
cli
mov
scas
inc
inc
cmp
adc
add
xor
pop
add
fbstp
cwtl
push
mov
cltd
daa
lahf
clc
insb
xchg
jnp
lods
sub
insl
xchg
repz
jge
inc
aaa
dec
adc
inc
dec
cmpsl
testb
cs
das
in
xchg
in
xchg
sbb
outsb
mov
xchg
inc
and
mov
test
dec
cmpsb
sub
lret
dec
pushf
cmpl
mov
daa
mov
cmp
pop
dec
sbb
stos
pop
iret
enter
movsl
cmp
sbb
xlat
adc
inc
xchg
jo
daa
adc
jne
idivb
in
xchg
pop
insl
cld
sub
or
xchg
repnz
fdiv
lock
sbbb
adc
imul
jl
mov
mov
inc
repnz
ljmp
mov
add
cld
inc
push
lods
cld
loop
and
clc
out
jo
sahf
pop
mov
xor
setb
mov
inc
adc
dec
rolb
out
jno
sti
insl
outsl
xor
jo
repz
ret
rorb
popa
push
rcrl
xchg
dec
dec
xchg
loopne
add
outsb
nop
popf
iret
jl
nop
cmp
jne
shll
scas
jae,pn
inc
push
std
pop
adc
out
stos
into
mov
xchg
inc
pop
push
pop
out
in
and
push
lahf
test
mov
ja
enter
push
sub
push
gs
xchg
imul
add
repnz
adc
out
dec
cwtl
push
ja
add
xor
pop
jnp
outsl
test
mov
mov
or
loopne
lea
xchg
loope
xchg
jmp
stc
jg
sbb
pop
sahf
push
adc
sub
aaa
jnp
push
xor
sub
es
cli
fwait
mov
mov
jle
daa
adc
cs
sub
or
mov
sub
and
cld
repz
iret
fdivrl
std
fisubrl
jle
sbb
cs
sub
in
mov
xchg
sahf
and
add
inc
dec
das
rcl
push
inc
ss
lds
mov
mov
add
add
ja
xchg
fdiv
pop
xorl
sbb
fisubs
popf
insl
push
add
xchg
sbbb
push
sbb
and
push
xchg
jns
push
pop
loopne
mov
cmp
out
xor
push
xchg
bound
and
stos
mov
fdivs
stc
xor
lea
inc
fs
mov
jmp
test
sbb
mov
push
jp
fldcw
xlat
ljmp
outsb
mov
adc
into
inc
bound
inc
push
push
aad
scas
inc
xchg
mov
int
adc
gs
pop
adcl
inc
int
push
mov
dec
in
insb
adc
xor
inc
std
mov
ja
scas
dec
push
cmpsb
pop
xchg
sub
scas
mov
xor
sarb
jno
push
cmp
fs
xorb
inc
sbb
sub
es
jo
push
in
dec
ret
test
xchg
push
stos
jecxz
insb
jecxz
sbb
cmpsb
jo
shrb
dec
movsl
cmp
fisttps
in
inc
xor
in
push
int3
lock
std
pushf
inc
orb
les
push
clc
test
cmpsl
xchg
or
cmp
push
lcall
in
jns
std
jp
divl
pop
testb
mov
mov
inc
ss
cmova
sbb
or
cwtl
into
or
mov
or
dec
mov
in
pop
xorb
repnz
and
cmc
leave
mov
cmpsb
jl
mov
jb
lcall
xorl
movsl
pop
and
mov
aaa
xchg
int
lahf
lods
cmpsb
aad
aad
add
xchg
aas
or
jne
loop
jns
shlb
shrb
xchg
popa
jne
push
mov
cld
loope
dec
icebp
mov
sti
dec
xchg
imul
pop
sbb
lcall
lahf
mov
jle
adc
or
adcb
pop
mov
xchg
stc
je
mov
andb
loop
mov
sub
inc
dec
mov
fstl
pop
jp
xor
and
mov
sbb
jbe
cs
ss
dec
sub
xchg
pop
lds
inc
dec
cmp
stc
cmp
repnz
or
lds
cltd
and
sub
jmp
in
xor
add
mov
ret
dec
lods
icebp
inc
je
ja
fwait
subl
idiv
pop
mov
mov
repnz
jbe
sbb
clc
xorb
fsubrs
mov
packuswb
add
jno
jns
xchg
leave
push
jb
test
mov
xor
cmpsb
jb
inc
paddw
dec
sub
lods
jnp
and
fidivrs
movl
jns
pop
filds
dec
divl
daa
jge
sub
xor
lret
mov
lock
inc
adc
imul
cmp
rcrl
sbb
rorb
inc
xor
addr16
test
xchg
and
aas
fwait
adc
lret
dec
arpl
rolb
or
xchg
push
int3
insl
or
inc
and
cmpsl
shlb
aaa
jmp
inc
subl
pop
cmp
jbe
bound
push
fnstenv
outsb
ljmp
or
stc
mov
rcr
nop
jae
movsb
pop
out
xchg
push
mov
xor
mov
cmp
stos
xor
push
jle
jge
f2xm1
push
jmp
lock
jnp
lahf
out
inc
jne
mov
lock
mov
mov
xor
xchg
sub
or
imul
mov
movsl
cmp
bound
daa
mov
jge
ds
cmp
mov
outsl
pop
lods
cwtl
jg,pt
inc
inc
mov
pop
or
sub
out
in
xor
fisttpl
fcmovnu
lret
fcmovbe
lret
stos
insl
cmp
adc
mov
pop
jbe
movsl
dec
loopne
arpl
pop
pop
and
test
cmp
lods
xor
cmp
out
movsl
lea
iret
sbb
shrl
fiadds
or
adc
xor
je
mov
sbb
pop
push
mov
adc
gs
aad
enter
das
stos
pop
jg
xchg
cmp
call
orb
ljmp
mov
movsl
std
and
testb
sub
cmp
test
pop
dec
sbb
cs
lods
fwait
loop
push
mov
outsl
mov
outsb
pusha
hlt
sub
ss
les
jae
loope
mov
inc
dec
xchg
stos
add
test
add
fisttpll
push
xchg
in
sub
push
cmp
scas
cmc
xor
adc
sub
push
jmp
lds
jl
test
ds
cs
pop
mov
imul
test
xchg
les
sahf
jb
sub
popf
xchg
cmp
cld
sub
xor
ljmp
xchg
js
push
mov
test
in
push
xchg
pusha
inc
jae
cmp
popa
out
xsha1
cmpsb
or
imul
mov
mov
mov
popf
scas
sbb
call
cmpsl
jns
pushf
bound
push
cs
jp
shll
stc
test
bound
push
popa
leave
pop
insb
arpl
cmpsl
loopne
mov
ljmp
or
xchg
icebp
mov
jge
xchg
lods
daa
out
add
xchg
add
aad
icebp
ret
rcr
nop
cs
fistpll
punpckhwd
push
cwtl
push
mov
sbb
and
scas
test
jge
inc
fsts
call
imul
aad
in
pop
scas
cmpb
sbb
fldl
dec
pushf
inc
in
jae
push
cli
loope
roll
stc
pop
push
dec
adc
sbb
outsb
xchg
sub
dec
psubusw
movsb
adc
andl
dec
loope
sub
insl
lea
xchg
ret
pop
imul
cld
jmp
mov
outsl
shll
mov
jmp
lods
ss
mov
das
jne
loop
jmp
mov
movzbl
pop
ficompl
jmp
dec
jbe
cmc
and
sbb
or
imul
outsl
adc
xchg
add
adc
push
sbb
xchg
test
jbe
sbb
andl
fnstsw
add
ljmp
adc
insb
dec
loop
pop
in
nop
leave
fistpll
jge
repz
rcrl
inc
cmp
fisubs
test
icebp
je
sub
pop
xchg
xchg
xchg
or
orb
js
mov
pushf
xchg
shr
testb
push
xorl
xchg
loopne
jae
pop
inc
and
jb
or
mov
mov
sub
sub
lret
int3
xor
outsl
pushf
enter
mov
loop
test
xor
popf
movsl
es
out
pop
pop
cld
imulb
and
xor
in
iret
push
out
movsl
stos
insb
xchg
jb
pop
push
dec
iret
jne
inc
push
outsl
or
sbb
mov
push
mov
in
mov
cmp
pop
push
fists
xor
hlt
push
mov
jne
or
movsl
addr16
cmpsl
int
sbb
xchg
aas
js
aad
add
ss
lods
scas
addb
add
paddsw
ret
rclb
pop
pop
pop
mov
stc
cmp
jnp
pop
into
jb
cwtl
jo
cmp
jmp
pop
add
enter
xlat
cs
jb
sub
in
out
adc
jl
sbb
add
imul
push
xor
xor
test
jl
addr16
fnstcw
cmp
frstor
sub
mov
or
jl
and
es
cmp
jecxz
xchg
adc
jb
imul
scas
jo
into
aad
adc
and
inc
stos
push
adc
mov
pop
mov
rorl
in
js
xlat
xor
cmc
pop
aam
mov
rcll
movsl
insb
dec
xchg
cmpsb
xchg
push
mov
adc
add
pushf
dec
adc
and
xor
jae
adc
pop
je
loop
or
data16
mov
mov
sub
push
int3
adc
inc
jmp
adc
lcall
cli
or
lds
aam
and
dec
out
lret
movsl
ret
dec
adc
arpl
inc
mov
mov
fistpl
fldt
adc
mov
mov
cmp
or
xchg
push
xor
cmpsb
ret
cld
pop
lahf
jg
mov
sbb
jmp
push
dec
idiv
xchg
pop
iret
xchg
mov
mov
hlt
shlb
aad
and
in
cmp
and
dec
fidivs
ret
xchg
jl
idivb
adc
scas
test
push
cli
and
in
out
mov
in
lea
push
and
cmpsb
mov
cmp
mov
add
xlat
jge
test
push
outsl
jnp
std
lods
push
mov
push
add
sahf
shl
pop
jle
sub
cmc
sbb
cli
negl
repz
stos
ja
loop
jns
jb
scas
pop
jge
outsl
sahf
adc
dec
int
pop
or
mov
cltd
stc
mov
mov
adc
bound
fnstenv
sbb
jo
mov
movl
jno
scas
out
dec
addr16
xor
in
cwtl
cmpsb
cmp
filds
inc
je
push
add
xchg
mov
adc
xchg
insl
leave
inc
ljmp
test
repnz
arpl
addb
imul
mov
and
jbe
push
xchg
sub
push
fildll
cmp
out
repz
cmovg
and
testb
xlat
jb
nop
test
mov
pop
push
or
pushf
mov
mov
in
aaa
mov
insl
xor
mov
pop
cli
das
loop
mov
rcl
mov
push
imul
adc
cmpsl
into
lcall
sbb
xor
add
xchg
int
into
std
sub
push
mov
mov
dec
pop
cs
sub
or
call
lock
pop
rolb
aam
xor
adc
in
mov
sar
push
and
adc
aam
jl
inc
cmp
push
jbe
adc
xlat
jecxz
leave
cmp
std
fs
jno
and
fwait
sbb
mov
sbb
push
pop
dec
dec
shll
cli
out
pop
jp
push
lock
mov
ucomiss
movsl
pop
es
add
test
pop
adc
jo
mov
or
xlat
bound
fistps
jb
inc
and
rcrb
shr
mov
jnp
js
sbb
bound
je
je
lcall
xor
jnp
sbb
jns,pt
xchg
incl
push
push
xchg
xchg
ret
std
imul
scas
into
fnstenv
imul
jae
xchg
imulb
push
mov
loope
pop
repnz
mov
test
inc
dec
leave
xchg
pop
shlb
mov
mov
rorl
daa
les
mov
gs
mov
icebp
in
imul
inc
stc
cmp
jp
fsubr
dec
xlat
jno
mov
xchg
sahf
push
mov
dec
inc
push
xchg
out
pop
sbbl
scas
imul
and
push
scas
sub
jnp
int3
test
fmull
sbb
out
cmc
in
addb
inc
jns
pop
ret
mov
adc
mov
les
mov
ret
pop
sub
push
mov
mov
sub
dec
cmp
cmp
jmp
sub
testb
sti
mov
push
data16
lods
mov
lret
das
out
push
ja
pop
popa
adcb
xor
loope
test
out
stos
push
sti
pop
jo
addr16
mov
clc
sbb
test
sub
pop
mov
sub
test
add
es
or
dec
adc
mov
jne
push
and
and
or
decl
faddl
stos
ret
mov
pop
bound
sub
jnp
adc
fcomps
aam
sub
jae
and
in
sub
pop
inc
addr16
cmc
jns
dec
and
inc
lret
aas
fwait
sub
xchg
sahf
and
loop
nop
mov
push
xlat
gs
jns
out
bound
ljmp
je
sti
aad
ja
scas
pop
pop
jae
lahf
pushf
xlat
adc
mov
pop
sub
pop
mov
push
lods
test
dec
scas
pop
outsl
pop
jecxz
jb
adc
vminss
push
pop
cltd
clc
jl
lret
jns
iret
mov
stos
or
cltd
loop
adc
add
or
inc
adc
push
jmp
cmp
jle
outsl
sarb
or
sbb
cmp
add
and
fidivl
stc
aam
or
sub
sub
inc
in
xor
arpl
mov
addb
popa
pop
pop
in
jl
mov
mov
inc
dec
movsb
cs
int
xor
fstps
es
sbb
popf
ret
or
jle
lock
sbb
mov
lfence
into
mov
daa
int
xchg
cmpsb
mov
xor
leave
pop
push
pop
jge
mov
scas
ds
sbb
jmp
andb
in
enter
ds
loop
arpl
stc
pop
clc
pop
aam
xor
stos
gs
xor
sub
and
jmp
or
xor
xor
cli
push
add
movsb
mov
in
jo
inc
adc
mov
nop
repz
mov
imul
mov
popf
or
mov
or
dec
mov
call
iret
sub
dec
add
ljmp
add
stos
mov
jno
fsts
xchg
pushf
cmp
ds
pop
push
inc
insl
movsb
adcb
mov
xor
fs
mov
and
and
out
cld
out
cmp
cs
outsl
bound
int3
adc
jno
cli
das
sbb
add
mov
mov
sub
fmulp
push
lods
xor
add
xor
push
or
aad
dec
lea
cmc
fnsave
add
jbe
mov
sbb
pop
cmpsl
jp
mov
daa
in
aad
push
int3
mov
ret
lret
xor
fldcw
cmpsb
cld
out
lret
dec
lret
jecxz
sbb
clc
ficompl
inc
cld
dec
fiaddl
shll
pop
mov
imul
into
and
or
or
sarl
sub
lods
add
sub
je
lea
cli
cmc
mov
jmp
scas
pop
xchg
or
mov
lods
mov
shll
es
test
and
jnp
cli
mov
mov
int3
mov
and
mov
mov
xchg
or
adc
mov
push
jp
cltd
lret
mov
test
jge
sbb
sbb
les
fdivs
sbb
push
lret
push
sahf
push
mov
jbe
xor
ja
call
test
sti
xrelease
lods
and
lahf
jmp
inc
xchg
mov
je
ja
pop
ss
daa
mov
mov
les
rcll
idiv
mov
mov
mov
xchg
jmp
and
push
mov
and
inc
icebp
adc
js
xlat
pop
dec
jae
push
adc
js
fistps
ficoml
fcomps
add
lds
add
mov
sbb
mov
jmp
in
mov
lret
and
jge
pop
stos
add
mov
ret
xor
movsb
jno
lret
sub
push
push
pusha
cmp
mov
out
pop
rcl
push
lock
mov
stos
repz
incl
mov
dec
fldt
loopne
in
adc
fdivrl
loopne
mov
popf
nop
fcom
cli
out
and
mov
daa
ljmp
shl
sub
jmp
pop
jmp
adc
aad
xorl
xchg
fisubrl
ja
sub
cmp
popf
dec
or
loopne
or
stc
shlb
ffree
add
and
sbb
int
outsl
jne
xor
sbb
cmp
out
sub
shll
pop
push
popf
rorb
mov
mov
mov
andb
cltd
adc
inc
ret
inc
dec
pop
add
dec
lahf
jno
out
pushf
mov
ss
pop
call
aaa
inc
push
mov
sub
aad
in
xchg
sub
ljmp
mov
xchg
cmp
adcl
xor
or
ljmp
cmovp
mov
jmp
fildl
push
sbb
mov
idivb
scas
sub
cli
testl
xor
mov
es
aam
push
dec
mov
cmpsb
dec
sbb
dec
scas
mov
pop
cltd
cld
out
inc
out
pop
adc
xlat
ss
xchg
inc
sbb
loope
pop
arpl
out
jbe
inc
fsubrs
inc
xchg
pop
cltd
sbb
mov
iret
push
in
aad
sub
and
inc
pop
push
test
out
shrl
mov
pushf
pop
xor
adc
bnd
fmuls
ljmp
rcrb
jbe
jecxz
xchg
cmp
mov
mov
adc
add
mov
insl
cltd
jp
inc
cltd
lcall
push
xchg
dec
mov
jne
clts
sbb
imul
mov
jb
repnz
inc
test
add
pusha
push
dec
subl
into
sub
imul
sub
movsb
lods
rorb
sub
std
fwait
outsl
daa
in
dec
dec
push
lds
jns
scas
dec
int3
jmp
dec
push
dec
xor
mov
dec
in
popf
pop
or
mull
push
sub
adc
addr16
rcll
cmp
icebp
inc
sbb
insl
adc
shlb
xorb
cld
jg
aaa
dec
push
test
or
fdivp
or
xor
fwait
bound
xchg
jbe
jb
outsb
mov
pusha
out
inc
shll
js
cwtl
mov
pop
inc
pop
int
jmp
js
sbb
repnz
and
push
jno
imul
clc
inc
xchg
pop
pop
pop
dec
xchg
jp
xchg
popf
add
mov
fcmovnu
jle
stos
jge
cli
loope
clc
cwtl
jge
mov
inc
or
repz
call
bnd
imull
repz
int
push
mov
ds
stc
ljmp
ja
push
sub
call
loopne
call
sbb
inc
aad
xor
xchg
push
js
and
fscale
adc
ret
pop
es
out
js
jo
stc
mov
gs
adc
sub
in
imul
add
jg
pop
sbb
push
int
dec
stos
aas
jbe
fidivrl
push
xchg
sub
xlat
push
mov
or
cmpsb
cmp
xor
int
movsb
iret
fadds
lcall
or
push
sub
loope
and
insl
push
xchg
pop
xor
or
lcall
sbb
jns
cmp
sbb
mov
nop
outsl
mov
jne
iret
adc
pop
inc
sub
je
jbe
xchg
inc
mov
cmp
in
mov
movsb
sarb
push
cmp
jnp
xor
jae
lods
adc
adc
xchg
cmp
mov
roll
cltd
mov
pop
jg
cs
xchg
inc
cmpsl
negb
lret
adc
mov
iret
incb
mov
rcrb
mov
push
adc
add
popa
pop
lret
jb
fbld
lea
hlt
or
mov
shrl
iret
iret
sub
mov
lods
rclb
and
incb
inc
mov
sub
subb
in
cmp
push
jecxz
push
mov
cld
cmpsb
mov
js
lret
jle
icebp
lcall
pusha
push
lret
repnz
sub
xor
sub
push
mov
jle
dec
movsl
es
cmp
jge
jp
pop
out
push
xchg
nop
hlt
xchg
shl
adc
cs
mov
mov
subl
pop
fsubp
test
jmp
xor
jp
ret
dec
and
cmp
mov
jbe
scas
add
and
pop
jg
jle
jmp
jp
mov
jmp
sub
nop
fildl
dec
or
inc
mov
sbb
lods
repnz
jl
imul
lods
xchg
mov
dec
mov
pop
mov
rcrb
cli
mov
sub
push
push
stc
adc
aas
outsl
inc
into
add
sbb
mov
decb
sub
push
loopne
sbb
cwtl
pusha
shufps
sbb
xchg
pop
mov
dec
loop
test
jno
nop
mov
xor
fsubs
arpl
dec
add
outsb
push
nop
sbb
xchg
mov
or
jecxz
inc
and
mov
jmp
fnstsw
or
jecxz
sbb
lock
loopne
scas
out
push
rorl
sub
inc
nop
xlat
shrl
das
aaa
dec
inc
sub
sahf
push
popa
cltd
in
mov
arpl
test
mov
jle
fidivl
fs
push
push
out
in
sub
fsub
mov
ljmp
cltd
inc
xor
inc
repz
lock
lahf
fwait
ret
jo
fwait
add
dec
int
rclb
inc
pop
shlb
sti
push
in
xor
mov
cmp
add
popf
mov
push
ja
movl
lods
mov
pop
add
out
mov
out
loop
mov
pop
xchg
push
cwtl
mov
scas
movl
jns
pop
lret
and
push
sar
dec
or
push
imul
inc
int3
in
jne
aaa
lds
and
in
mov
sbb
push
jge,pt
popf
xor
pop
clc
cmp
pop
xor
out
ds
mov
daa
pop
jnp
mov
mov
bswap
xchg
push
and
pop
js
inc
int
jge
add
cltd
push
fwait
xchg
dec
jle
outsb
mov
pop
adc
in
jo
mov
sbb
push
inc
pop
or
repnz
adcb
jo
add
sbb
out
cmp
mov
dec
orb
lahf
jl
ds
cmp
les
adc
xchg
cmp
mov
xor
lea
rcrb
mov
dec
cli
mov
mov
imul
jecxz
neg
dec
adcb
pusha
push
leave
lds
mov
movsb
or
add
ljmp
pusha
mov
and
mov
daa
rcll
dec
jl
push
add
jmp
and
aam
xchg
jbe
add
fcmovnu
sbb
add
mov
out
and
adc
xorb
fildll
repz
cmpsb
jno
dec
sub
add
pop
lcall
enter
lahf
hlt
cmp
dec
bnd
or
mulb
lods
shlb
out
jae
test
ljmp
js
push
or
data16
ficoml
mov
mov
data16
aas
cltd
popf
sub
in
xor
popa
xchg
mov
shrl
dec
fwait
in
xchg
push
das
shl
mov
xor
mov
xchg
inc
fildl
cs
push
push
mov
fisubs
sbb
xchg
sub
sub
push
popf
and
repnz
mov
xorb
sbb
sub
cmp
dec
repnz
mov
push
fisttps
inc
in
addr16
push
xchg
test
mov
pop
jb
push
pop
in
les
in
mov
aaa
jnp
push
push
pop
xchg
jecxz
insb
rorl
mov
push
in
imul
dec
leave
and
int
out
jmp
mov
idivl
aam
xor
jne
jmp
jp
jno
cmp
mov
pop
jge
add
pop
mov
xor
add
out
test
movsb
hlt
add
ja
mov
adc
mov
sub
cmpl
pop
adc
negl
xor
inc
mov
mov
jl
cmpsl
and
and
pop
lret
lods
loope
push
xchg
or
out
iret
xor
dec
test
cmp
leave
dec
mov
rcrb
fdivs
mov
and
cmp
xchg
pop
inc
arpl
mov
jne
xor
int3
pushf
dec
insb
rcll
add
xor
cmpsb
pop
lret
fidivrl
mov
lret
or
dec
into
mov
push
ds
lret
mov
jge
das
inc
sbb
jle
jge
mov
sbb
lds
add
mov
pop
inc
xor
or
jae
pop
ja
in
sub
jne
repnz
jae
lods
or
dec
loope
bound
enter
mov
adc
mov
out
outsl
xchg
rorb
mov
ljmp
xchg
xchg
loop
shll
mov
ljmp
inc
fnsave
cmp
dec
movsb
cmp
jae
leave
push
pop
das
loop
cld
cmp
stos
sub
push
lea
js
inc
popa
lds
xchg
fisubrs
xor
dec
add
repnz
inc
test
cli
imul
in
dec
in
mov
ret
pop
aaa
inc
dec
adc
adc
jnp
fcomip
and
pop
pusha
ja,pt
into
xchg
in
inc
scas
fs
mov
loop
aad
mov
jo
out
xchg
iret
sub
xor
add
or
negl
mov
nop
jns
pop
lret
and
inc
jp
leave
cmp
mov
lock
sbb
sti
popf
test
pop
ret
sbb
cmp
in
adcl
mov
sub
out
enter
fiadds
jmp
push
lret
fbstp
cmp
mov
cwtl
je
or
xchg
andb
xor
mov
movsl
mov
or
lcall
outsl
aam
pop
jg
xchg
xchg
jnp
insb
jg
xor
and
das
std
and
dec
dec
ds
xchg
loope
cwtl
jne
sub
pop
nop
pop
jb
sub
fidivrl
loop
mov
or
sbb
inc
mov
repz
loopne
adc
push
ljmp
fstpl
pop
jmp
aam
or
out
fsubp
push
das
cmp
or
fnsave
mov
ficompl
sub
push
xor
sub
lock
inc
aaa
ja
test
mov
or
cmpsb
scas
lock
xchg
cmp
sub
lods
add
pop
xchg
mov
add
inc
cmp
pusha
add
push
rorb
adc
lock
fadds
mov
orl
mov
cmp
loope
and
fwait
fwait
mov
jae
repnz
jg
sub
jns
xchg
shrl
test
sbb
pop
pop
outsl
push
sti
mov
lock
pop
addr16
clc
iret
insl
push
ljmp
es
out
fadds
jmp
inc
cmp
loope
and
mov
mov
imulb
mov
stos
mov
and
cltd
push
repz
mov
push
idivl
mov
sbb
es
cli
add
int
mov
xorb
movsb
in
add
cmpsb
repz
int3
push
fmull
fcomps
add
popf
cmp
push
adc
movsl
xchg
cmp
xchg
push
pop
push
aas
ds
or
xorl
jecxz
test
mov
jns
aad
int
mov
fstpt
adc
movsl
addr16
sbbl
pop
inc
mov
adc
mov
rcr
aaa
popl
sbb
cmc
rolb
lods
aas
stos
dec
lret
scas
dec
stos
or
add
popa
cld
ljmp
mov
sbb
jp
adcl
lahf
cltd
xor
das
pop
ljmp
mov
ljmp
xor
negl
cmp
fsubrl
mov
sbb
sub
in
ret
xchg
daa
jbe
out
adc
ds
add
mov
push
mov
fldenv
nop
enter
imul
bound
or
dec
jae
pop
jbe
push
pop
ret
jecxz
jg
fs
lods
pop
jo
mov
scas
mov
mov
jle
fidivrs
pop
loope
hlt
cmp
mov
fdivl
fwait
mov
cmc
je
insl
test
cmpb
repz
lods
or
in
jne
pop
inc
mov
test
xor
lahf
push
xchg
lret
adc
sub
lcall
mov
jbe
out
gs
fwait
mov
xchg
inc
jo
add
insl
sub
add
sub
or
xchg
push
push
sbbl
xor
mov
or
sbb
push
mov
mov
adc
bound
test
mov
push
xor
inc
cmp
xchg
xchg
int3
push
adc
rclb
jnp
sub
ret
push
lea
sub
lahf
jmp
lcall
addb
sbb
jno
lahf
in
rorl
jge
repnz
and
push
pop
and
push
sbb
mov
sbb
lods
inc
xchg
lds
out
mov
jge
push
xchg
push
fcom
sbb
or
sub
adc
jns
adc
jns
ja
xchg
fs
push
push
into
mov
shl
fcmovu
pop
out
push
into
sub
mov
xlat
jle
movsb
jbe
xchg
in
pop
or
es
jp
jl
rcll
call
jmp
sbb
ljmp
push
xchg
jp
rcrb
push
xor
sub
mov
mov
jb
cld
xchg
out
cmpsl
out
test
inc
push
out
ljmp
sbb
and
out
cmc
mov
scas
mov
lds
fcomp
scas
or
or
cmpsl
adc
inc
rcrl
das
rcll
stc
std
data16
cmpsb
jne
fidivs
or
cmp
mov
lret
or
in
lock
dec
or
push
clc
addb
stos
iret
or
jle
bound
out
inc
inc
sub
mov
stos
push
mov
push
sbbb
lea
mov
push
or
lods
inc
sahf
lret
dec
fwait
mov
test
ja
and
pop
sub
xor
jle
out
nop
jl
stc
roll
mov
pop
out
push
das
sub
push
adc
pop
or
xchg
cmp
adc
push
rclb
addr16
jmp
and
jb
mov
fidivl
imul
clc
dec
ret
and
loop
mov
push
mov
pop
jl
xchg
jg
divb
mov
jg
pop
push
or
scas
out
sub
xchg
fdivl
push
dec
dec
test
mov
fcomi
inc
mov
sbb
xchg
fcmovu
mov
cs
test
xor
das
sub
cltd
stos
rorb
push
stos
mov
or
aaa
push
sti
mov
fs
out
xchg
movl
pop
xchg
or
xchg
hlt
out
aam
fdivrp
or
push
add
loopne
stos
bound
arpl
iret
pop
ljmp
bound
mov
jbe
mov
sbb
xchg
jb
adc
xchg
cmp
mov
sbb
and
adc
lea
lea
push
mov
rcll
testl
das
dec
mov
lret
outsl
adc
push
aam
cmp
lret
daa
cmp
mov
notb
std
add
add
inc
aas
mov
ljmp
out
mov
mov
shl
incb
mov
jno
sbb
xor
movsb
xchg
into
mov
and
mov
push
lods
js
jl
arpl
sbb
mulps
dec
mov
xchg
dec
jb
add
adc
add
shlb
in
push
out
mov
pop
xchg
lret
in
fabs
push
lret
lock
enter
sub
lock
sub
dec
test
into
rolb
popf
and
adc
lock
out
data16
jno,pn
sub
xor
pop
xchg
sub
cmp
sbb
movsb
mov
pusha
outsl
fcoml
fcoms
lahf
nop
adc
scas
int
sbb
loope
cltd
push
or
jno
xor
cmp
cmp
out
ds
into
ljmp
in
fstpt
push
jae
pusha
rcrl
je
lods
mov
mov
xchg
adc
dec
mov
jl
cltd
pusha
sbb
xchg
ljmp
push
sub
xchg
insb
ret
fwait
scas
cmp
jl
cmp
xlat
fbld
fstpl
pop
test
mov
daa
xchg
in
test
dec
inc
jb
jmp
inc
cli
loopne
dec
xor
pop
fdivs
outsb
fmul
loope
lds
add
mov
fwait
xor
sbb
mov
pop
xor
movsb
enter
lahf
jl
push
pop
xor
xchg
js
sub
jp
leave
addb
rorl
jbe
ja
push
mov
in
aam
jb
outsb
push
fwait
insl
lcall
std
sub
mov
cwtl
rcrl
dec
cld
lret
xor
jno
mov
mov
daa
outsb
mov
adc
popf
and
push
mov
mov
pushf
cmc
movsl
in
jmp
mov
xchg
ret
xchg
inc
dec
sbb
clc
loope
and
sub
lds
mov
jmp
aas
mov
jecxz
and
dec
shrl
jmp
or
cltd
das
pop
into
adcb
inc
adc
push
lock
jo
inc
adc
jg
fadd
push
dec
fwait
mov
addr16
inc
daa
scas
das
loop
mov
dec
adc
pop
jno
sbb
stc
int
mov
arpl
mov
xlat
rorb
xor
pop
imul
gs
test
xchg
push
inc
sarb
ret
sti
cwtl
cmp
bnd
ds
sti
xor
adc
pop
rcr
push
push
push
addb
mov
arpl
xor
jg
and
sub
hlt
es
fs
loop
lea
movsl
push
and
je
sub
jge
arpl
jg
xor
pop
out
jmp
shl
mov
cmp
jne
nop
mov
insb
pushf
cmp
push
out
pop
fdivs
idivb
bound
adc
cmp
pop
popf
je
cltd
or
int3
cmp
fcoms
dec
mov
fwait
adc
xchg
dec
ds
mov
lcall
int3
hlt
push
pop
test
inc
in
scas
loope
sbb
gs
mov
dec
outsl
ljmp
imul
inc
mov
lock
stos
arpl
push
ja
ljmp
mov
or
lods
push
out
sub
add
xchg
add
add
push
xor
mov
adc
testb
mov
mov
jecxz
sbb
cld
mov
inc
sarb
or
mov
insb
das
mov
faddl
push
push
dec
sub
sbb
mov
lahf
adc
sub
cmp
pushl
clc
mov
ljmp
cmp
or
push
cmc
std
mov
mov
jbe
xchg
mov
push
jle
add
sub
pop
xor
lahf
sub
adc
mov
pop
jg
add
mov
sbbb
subb
movsl
bound
js
adc
push
xchg
jecxz
je
or
xchg
dec
cs
or
cmp
popf
test
out
ja
sti
jbe
push
movsb
add
jecxz
push
pop
add
xchg
pop
sbb
fidivs
cwtl
mov
xchg
jno
aaa
lods
mov
add
in
movsb
and
sub
jg
push
pop
or
aad
cmp
int3
inc
add
shll
sbb
add
xor
test
jl
inc
inc
and
jns
xchg
jbe
mov
test
xchg
adc
add
and
rdtsc
fdivrl
lock
pop
test
push
shr
dec
mov
jp
mov
pop
cltd
add
loop
sti
xor
test
jg
add
xor
push
loope
jb
mov
sub
mov
and
jl
out
xchg
ret
jns
mov
fwait
jecxz
inc
or
mov
push
cmp
aaa
fmuls
adc
and
push
sub
xchg
xor
mov
adc
imulb
jp
pop
outsl
inc
adc
mov
scas
xchg
bound
jecxz
xor
sbb
push
jge
xchg
divb
xchg
mov
jg
stos
test
xor
mov
jmp
lahf
cli
dec
leave
or
popf
jns
mov
dec
inc
cmp
in
push
jmp
sub
lock
cmp
loope
jb
mov
lea
loope
cmpsl
inc
rcrl
fadd
sub
popf
pop
ds
inc
sbb
inc
sub
dec
imul
cmpsb
sub
sbb
adc
xor
sub
hlt
sbb
pusha
test
inc
sbb
addr16
pushf
xchg
jnp
sahf
pop
aaa
fstpl
xchg
sbb
inc
xchg
mov
lahf
int3
mov
xchg
pop
ret
sub
or
gs
jge
andb
and
mov
or
test
dec
mov
daa
mov
divl
pushf
scas
cmp
popa
xchg
mov
in
mov
add
jle
and
mov
cmp
stos
loop
xor
push
sbb
fstl
mov
and
sbb
sbb
arpl
lahf
inc
rorb
pop
xorl
mov
movsl
dec
dec
adc
pusha
add
cltd
aaa
xchg
add
dec
xor
sarl
scas
mov
jp
in
mov
push
cmp
jns
fstpt
mov
jecxz
testb
movsb
mov
dec
xchg
es
jmp
mov
xor
je
or
mov
mov
notb
arpl
jl
dec
addr16
shrl
in
ret
adc
cmp
cs
cli
xchg
lock
mov
icebp
cmpsb
cli
push
dec
cmp
dec
xor
dec
push
test
and
fisubrs
hlt
fistps
testl
mov
sti
xor
test
push
lret
mov
dec
pop
jp
push
pop
inc
jo
inc
orl
push
roll
mov
fchs
out
lret
shrl
and
or
xor
push
jg
into
inc
fildll
cmpsb
mull
push
repz
xor
lea
push
in
daa
xchg
pop
stos
sub
xchg
xlat
inc
mov
pop
fwait
pushf
in
cmc
mov
test
aam
in
adc
imul
sub
inc
inc
mov
xor
jge
xor
in
xor
pop
cmp
or
jmp
stos
mov
jo
test
mov
jle
iret
inc
mov
mov
daa
mov
push
xor
adc
into
inc
xchg
rorl
xchg
push
push
je
hlt
movsl
dec
div
sub
loop
add
mov
mov
push
into
add
push
and
xor
mov
xchg
dec
adc
xor
mov
pop
push
cmp
in
sahf
jb
or
movsb
mov
aam
dec
pushf
adcb
daa
mov
es
ss
lods
jp
sar
mov
daa
jl
mov
xchg
lret
test
leave
adc
mov
pop
iret
xor
jnp
jo
test
mov
sub
and
ljmp
cmpsl
jnp
dec
pop
push
cmp
adc
xor
out
std
out
rol
int3
xor
mov
push
push
xchg
movsl
or
jg
subb
dec
jecxz
loop
xorb
outsl
xchg
xor
lods
sub
sub
dec
dec
data16
add
pushf
dec
in
orb
mov
repz
movsl
jae
clc
int
cmpsl
jmp
adc
push
stos
out
aaa
test
xchg
shll
mulps
in
pop
adc
inc
xor
shlb
mov
pusha
fsubl
jge
ja
aad
inc
pop
sbb
or
mov
xchg
xchg
push
aad
rcll
add
sub
mulb
push
fldl
xchg
mov
pop
inc
in
xor
xchg
loope
sti
sub
in
lahf
add
lea
daa
adc
sub
mov
mov
jmp
fnstcw
sbb
int3
mov
test
sbb
dec
dec
xor
push
repz
insb
enter
push
les
lods
test
mov
imul
mov
cltd
out
mov
out
jnp
push
cmp
fs
stc
xor
sbb
call
mov
push
xor
add
mov
popf
mov
testl
mov
add
sbb
arpl
call
filds
and
inc
scas
cmp
adc
xchg
out
xor
imul
mov
mov
jl
fsts
ret
sbb
pop
xlat
adc
push
mov
arpl
dec
pop
push
sbbb
cli
jge
rcrb
mov
rcrb
push
in
mov
ror
cwtl
loope
shrl
xor
mov
dec
inc
push
pop
dec
adc
xor
fld
data16
adc
sbb
sarb
jbe
in
repnz
inc
movsb
mov
je
inc
ret
sbb
fs
mov
pop
xor
adc
enter
add
lret
adc
cmp
push
xchg
xor
pop
lcall
dec
lcall
aad
out
scas
add
push
or
leave
pop
mov
in
jns
mov
jbe
pop
shlb
xor
jg
addl
dec
sysenter
lods
rcrb
sub
in
xor
pop
push
or
pop
mov
xchg
sbb
clc
push
call
pop
mov
or
fisubrl
cld
ret
jne
insl
jo
call
fidivrs
pop
or
add
inc
in
jnp
push
mov
loop
mov
lcall
mov
dec
fsubrp
cmp
cmpsl
enter
inc
sub
stc
cmp
push
cli
push
xchg
xchg
popa
gs
int3
mov
lods
clc
lock
xor
les
sbb
xor
inc
testb
xor
mov
fisubs
push
or
add
add
dec
int3
aad
and
lods
sti
idivb
fcom
xchg
push
mov
jo
pop
lcall
pushf
pop
ss
sbb
repnz
out
add
in
sbb
push
jbe
test
add
out
adc
mov
push
rcl
lret
loope
fcmovb
xor
call
aam
push
pop
push
js
push
cmp
into
xor
sarb
and
cmp
xchg
inc
fdivs
xor
mov
sbb
ja
dec
xor
enter
xchg
out
inc
js
cmp
shrb
add
lea
inc
fnstenv
aad
fsubp
jle
out
xor
hlt
out
add
inc
mov
adc
aas
daa
and
pop
cld
ret
in
mov
vsqrtpd
pusha
jle
jbe
dec
jle
mov
in
add
xchg
mov
jbe
sub
lea
fcompl
out
into
xchg
data16
mov
mov
and
in
xchg
and
sub
mov
and
push
jo
imull
cmc
popa
add
add
out
sbb
jnp
ret
dec
jmp
mov
mov
mov
xor
pushf
adcl
loope
push
lods
sahf
es
fstl
into
push
mov
lds
cmp
incl
adcb
cmp
mov
cmp
xlat
scas
out
das
add
jne
jl
stos
outsl
inc
mov
lods
sarb
inc
das
pusha
dec
mov
in
negl
mov
jecxz
pusha
arpl
add
imul
push
jae
push
mov
push
or
scas
pop
add
xchg
in
shll
dec
and
iret
insl
push
inc
mov
out
int
push
clc
clc
in
pop
lods
dec
or
loopne
push
ss
sbb
rcl
mov
jno
sbb
mov
pusha
imul
call
xorl
or
inc
mov
in
dec
jge
fnstcw
add
aas
ss
les
add
jecxz
mov
pop
add
adc
mov
lods
movb
xor
sub
inc
insb
dec
inc
sahf
clc
mov
bound
std
pop
mov
mov
repnz
xchg
cmp
pop
iret
mov
out
mov
popf
in
sbb
add
insb
loopne
movl
adc
outsl
cld
adc
cmp
popf
sub
mov
xchg
mov
fcoml
scas
fisubs
mov
jecxz
inc
inc
push
aam
mov
add
mov
add
and
cltd
or
adc
inc
push
movsb
fnsave
push
mov
sahf
imul
lods
push
aam
mov
jb
adc
lods
pop
pop
jb
psrld
or
add
add
xor
mov
sbb
in
jno
adc
testb
repz
test
xlat
rcrb
cmp
jge
mov
in
xor
movsl
out
out
pop
jp
jmp
repz
leave
inc
mov
dec
sbb
inc
or
xchg
push
sti
movb
xchg
fdivrl
cmc
or
das
jmp
push
pop
adc
test
ficoml
xor
mov
xchg
mov
add
push
mov
ss
dec
add
test
pop
inc
ss
fs
and
mov
jno
xchg
rorb
test
stc
dec
stos
aas
jo
mov
fisubrl
sub
popa
cmp
jecxz
xchg
stos
test
stc
and
cmp
mov
mov
adc
ret
mov
mov
add
dec
ja
rcrl
ret
ficoms
sbb
loopne
mov
sub
and
movsb
push
iret
add
adc
lahf
fwait
add
icebp
into
and
popf
xor
cmpsb
ret
movsl
pop
push
loopne
and
test
dec
inc
test
lahf
int3
ds
inc
xchg
ss
mov
cs
scas
leave
out
ja
dec
and
xchg
xchg
jecxz
nop
push
jnp
xor
btsl
jbe
testb
movsb
xchg
pop
jb
call
xor
xchg
xchg
orb
adcb
test
das
cmp
setno
popa
sbb
cmpb
cwtl
push
mov
cmc
les
push
jmp
ja
adc
mov
mov
pop
daa
lods
out
sbb
cmp
cld
sbb
xor
sbb
lahf
stos
cltd
sarl
cwtl
rcl
mov
pop
push
ds
pop
out
pop
icebp
sbb
ret
lret
jg
sbbl
xor
xlat
add
add
std
loope
or
out
jbe
pop
ja
sub
or
xor
or
cmpsb
rcr
inc
out
lods
cmp
enter
dec
cs
or
scas
popf
test
mov
gs
adc
jae
add
mov
stos
imul
mov
xchg
sub
sbb
cmp
fs
movsb
in
icebp
inc
push
jo
push
jg
lcall
dec
mov
mov
subb
in
cld
adc
cltd
jmp
ficomps
adc
loopne
push
incb
mov
mov
pop
xor
or
sahf
mov
shll
dec
sbb
aam
sub
jmp
int3
aad
fstpt
pop
call
in
mov
pop
je
cmc
xchg
insb
inc
xor
jg
xor
pushf
or
push
jb
lret
mov
mov
mov
out
flds
pop
adc
lahf
cld
xor
ret
movsb
pop
cmp
jnp
cmp
stc
movsb
pop
mov
mov
xchg
test
inc
mov
push
cmp
shll
daa
inc
in
adc
jg
stos
and
push
add
sbb
push
mov
adc
pop
cmpsb
jae
jae
shlb
sbb
xor
jno
dec
cmp
lcall
es
sub
popf
mov
movsb
add
popf
stos
enter
mov
cmp
inc
scas
sub
xor
mov
shl
fisubl
sbb
call
xor
pop
stos
pushf
push
mov
lret
jbe
and
jl
mov
xor
or
push
decl
lcall
and
ja
pshufw
or
loop
jge
out
and
addb
inc
push
cmpl
and
and
call
dec
xchg
inc
sbb
mov
dec
sub
rorl
outsl
push
inc
jne
and
dec
out
imul
push
mov
fwait
sbb
subl
ret
dec
fs
fistpll
or
or
jne
rorb
cld
ds
subb
pusha
push
mov
hlt
adc
add
scas
adc
test
in
jmp
dec
pop
jb
add
mov
fiaddl
and
push
aam
push
rorb
je
xchg
aas
mov
insb
push
jo
in
gs
outsl
adc
js
sub
xchg
jnp
nop
or
mov
mov
imul
sbb
fdivrl
sub
hlt
pop
sbb
fdivrl
push
loope
cmp
mov
mov
xlat
xlat
push
and
push
mov
imul
sbb
lcall
mov
imul
nop
repnz
pusha
jns
out
mov
int
fstl
sub
inc
fwait
xchg
push
dec
sbb
jl
mov
faddl
clc
mov
lea
pusha
jle
sbb
sbb
mulb
pushf
iret
test
push
sbb
push
xor
pop
data16
fisttps
stc
jbe
push
lea
clc
dec
lahf
leave
jp
mov
xor
data16
loope
mov
mov
pusha
mov
inc
adc
clc
pop
push
jno
sub
lds
pop
adcl
pop
jns
loope
sub
and
jae
jp
lock
sbb
lret
add
andl
mul
fstp
aaa
xchg
mov
je
int
out
arpl
fwait
mov
sbb
fs
push
mov
push
loopne
push
inc
add
addb
stc
push
fld
mov
pop
cwtl
test
loop
mov
mov
xchg
jmp
dec
bnd
mov
xor
mov
int
xchg
rcpps
out
sbb
popa
add
testl
jmp
test
push
add
inc
push
mov
push
arpl
rcrb
int
adc
jbe
mov
fstpl
fldl
xlat
popf
lds
outsl
test
pop
mov
fdivrl
lods
into
mov
or
pop
and
pop
jle
push
adc
int
cmp
nop
mov
fwait
xlat
rcrl
aas
ss
scas
push
jbe
bound
xor
aas
mov
pop
pop
adc
pushf
and
js
push
and
cmpsl
inc
cwtl
pop
jl
movsb
inc
xchg
inc
add
inc
and
inc
aas
fadd
cmp
ja
jns
addl
dec
xchg
in
inc
jge
xchg
test
and
xchg
dec
fsubrp
scas
mov
mov
insl
push
inc
subb
mov
mov
and
dec
mov
test
mov
ljmp
fidivrl
add
adc
fwait
and
aaa
mov
std
push
cmpsb
cmp
imul
push
shl
and
cwtl
push
daa
or
dec
int
out
dec
mov
sub
enter
js
shlb
xor
dec
jae
pminub
adc
cmp
cmp
shrb
ja
mov
jno
dec
lods
mov
mov
outsb
xchg
cmpsl
loope
out
push
scas
pmulhuw
repz
mov
cmpsb
outsl
xchg
sbb
push
xor
mov
adc
cmp
lods
inc
xor
pusha
lock
xlat
mov
leave
les
daa
test
movsl
cmp
outsl
subb
adc
xorl
and
lock
out
in
xor
push
lahf
xchg
ret
xor
in
push
sbb
fcomi
test
ss
enter
out
xorb
fwait
adc
push
mov
lret
adc
aaa
fucomip
mov
shll
cltd
mov
scas
lahf
inc
jl
aaa
mov
xor
sbb
ret
or
cmpsb
loop
enter
xlat
lahf
xor
js
dec
insb
xor
stos
out
xchg
fadd
test
test
ds
imul
ljmp
mov
push
add
popf
lods
rcll
hlt
jo
adc
ja
push
xchg
out
fs
xchg
xchg
add
mov
dec
mov
shll
inc
xchg
call
sbb
lret
mov
add
jb,pt
xchg
jmp
out
push
shlb
pop
movsb
xor
sbb
test
cmp
insb
insl
das
mov
fwait
rorb
sahf
mov
inc
sub
sahf
xchg
jnp
pop
cld
and
mov
data16
xchg
dec
mov
cmp
shll
pop
ljmp
lods
shrl
mov
ret
aam
mov
ds
ret
sub
enter
fisttpl
dec
adc
lahf
ficoms
fisttps
add
in
xlat
jmp
scas
xlat
adc
and
fsubs
cs
or
dec
cmpsl
mov
sbb
lea
adc
add
out
dec
pusha
cmpsb
xor
in
sub
dec
test
mov
cmp
add
or
cltd
xchg
je
mov
xor
sbb
movsl
scas
repnz
lds
mov
pop
lret
daa
dec
fildll
lcall
arpl
das
xchg
sub
popa
sub
sub
repz
int3
push
mov
mov
shrl
pop
rolb
gs
ljmp
or
or
xor
xor
jmp
daa
xchg
push
mov
pop
ret
mov
into
imul
cld
or
stos
negb
jno
sbb
or
push
jae
mov
dec
xor
lods
inc
stc
xor
add
cs
or
jb
iret
sbb
in
xchg
add
sub
movsl
push
sub
inc
stos
push
fdivrp
lret
orb
aaa
fidivrs
or
mov
xor
push
jno
loop
jmp
aas
popf
sub
lret
fsubrs
xor
jno
ss
jg
mov
mov
push
jns
lods
sub
cmp
inc
xor
inc
push
jmp
sub
bound
enter
push
addr16
cmp
push
push
test
arpl
sbb
addr16
xchg
add
cmpsl
lods
dec
lcall
das
mov
cmpsl
stos
out
xor
test
jae
ret
xor
pop
mov
jae
push
scas
pop
in
js
test
hlt
pop
pop
push
in
loop
xchg
jo
cmp
imul
or
in
popf
les
jle
jmp
sbb
mov
daa
push
cmp
jg
mov
push
xorb
push
mov
mov
jns
sub
adc
adc
jns
ds
dec
incb
inc
fsubs
jo
pop
adc
mov
addr16
enter
mov
dec
jo
cmpsb
inc
mov
es
jb
sub
push
or
cmp
or
pop
nop
adc
rcll
repnz
xor
cmp
leave
aas
cmpsb
mov
sbb
sub
icebp
mov
inc
aam
inc
and
mov
sarl
jle
mov
xor
pop
inc
mov
mov
pop
pushf
jae
stos
mov
sub
int3
scas
adc
bound
cld
fisubrs
adc
mov
mov
inc
adc
das
or
xor
imul
or
mov
out
pop
add
xor
push
movsb
es
pop
adc
cltd
gs
lea
jne
adc
cmpl
pop
push
or
enter
pusha
mov
test
adc
or
out
lea
pop
sbb
cmpsl
les
xchg
in
jnp
xchg
fistps
enter
inc
sbb
lcall
adc
lods
cld
in
int
std
mov
xchg
jae
mov
in
adc
lock
dec
std
loop
cli
call
push
aaa
out
leave
negl
jl
lods
lcall
push
fstpt
sahf
rsqrtps
mov
cs
out
pop
sbb
fbstp
push
sbb
cmp
add
ret
imul
in
sub
push
adc
ljmp
cmpsb
mov
aas
test
in
movb
lods
xor
xor
push
cmpsb
cwtl
mov
jp
sbb
lea
andl
scas
adc
lret
outsl
mov
jb
push
sbb
je
imull
stos
dec
mov
push
mov
xor
mov
out
stc
movsl
std
jmp
adc
push
js
jl
push
test
das
gs
mov
std
cmc
loope
pop
push
dec
fiadds
dec
adc
dec
insb
jne
shlb
push
imul
and
fildll
clc
and
cmp
xchg
bound
mov
push
imul
mov
xor
test
sub
or
dec
dec
ret
insb
in
les
cmp
pop
or
xchg
std
mov
movups
mov
aam
shrl
lds
adc
dec
daa
push
stos
mov
inc
sub
mov
test
ror
fwait
mov
lods
movsb
xchg
mov
bound
ret
out
inc
jmp
add
test
je
ss
push
int3
cmp
jp
div
ret
or
addr16
jecxz
arpl
loop
in
add
mov
push
pop
aam
xor
sbb
js
adc
scas
jns
loope
mov
cmp
test
rclb
clc
lods
add
out
mov
or
jmp
inc
test
xchg
xor
sbb
fsubrl
pop
add
arpl
sbb
sahf
jge
sahf
lods
mov
stos
pushl
popa
push
or
pop
mov
sub
adc
pop
nop
cmpsb
je
loop
fcoms
cwtl
jb
fcompl
inc
test
push
popf
pop
inc
mov
push
add
bound
rcl
fists
rclb
mov
mov
jnp
into
movsl
jl
fdivrs
dec
movsl
fmull
add
jmp
repnz
cwtl
mov
rcrb
loop
or
lahf
or
insl
cmpsb
pop
decl
mov
jmp
aas
frstor
sub
cmp
cmp
add
jo
repnz
in
cmpsl
subb
jmp
lahf
cmpsb
mov
subl
mov
shrb
lret
cld
std
or
lds
mov
push
mov
cltd
and
enter
xlat
sbb
dec
mov
and
xor
add
ja
imul
out
js
jl
mov
flds
mov
outsl
andb
xlat
xchg
clc
mov
mov
mov
jl
les
mov
xor
adc
ds
jge
fxch
insl
push
mov
mov
dec
sahf
bound
std
fstps
inc
push
inc
js
lods
push
shlb
aad
cmpsb
int3
shll
cmp
scas
cmc
rcrb
jno
push
lea
mov
insl
and
cs
imul
outsb
push
daa
add
rdmsr
xor
fsubrp
mov
outsb
pop
loop
shlb
jg
mov
sub
pop
sbb
rolb
cltd
je
cmc
dec
adc
ds
xor
mov
mov
enter
fwait
outsl
and
adc
ljmp
sbb
cmp
or
add
das
sbb
and
pop
test
pop
popa
mov
pop
popa
push
mov
pop
iret
inc
jno
decl
lea
mov
xor
sahf
adc
lret
js
mov
add
adc
xchg
push
dec
mov
scas
icebp
leave
hlt
dec
fidivrs
jo
xor
sub
adc
popf
out
push
or
mov
jns
daa
shlb
out
inc
push
pop
dec
fcom
sbb
arpl
and
in
loop
jp
jge
jge
pop
mov
ror
lods
dec
or
mov
mov
adc
dec
iret
into
and
mov
mov
mov
lea
mov
in
jns
vpshaq
pop
bound
aad
mov
scas
int
sbb
jns
mov
jp
xor
cmp
sbb
gs
test
test
je
addb
out
fstpl
icebp
xchg
jle
cmp
inc
ret
xor
insl
popa
push
and
xchg
mov
lods
cltd
jbe
mov
pop
push
jg
jnp
fcomps
aad
push
dec
push
movsb
adc
ss
adc
pop
repz
lods
jmp
pop
cmpsl
jno
push
inc
mov
or
cmp
xor
add
outsl
out
imul
sub
in
mov
aas
jecxz
mov
jecxz
xor
gs
mov
jo
xor
nop
jbe
pushf
inc
dec
sti
cmc
repz
stos
inc
leave
inc
jp
ret
add
rcrl
jl
outsb
jne
dec
in
cli
pop
jno
into
add
xchg
push
dec
xor
cmc
sahf
enter
sti
in
lods
inc
mov
xchg
pop
stc
dec
in
testb
fsubrl
mov
cmp
pop
adc
pop
sub
dec
cmpsl
inc
jbe
lret
inc
jecxz
daa
incl
sbb
pop
sub
jae
cmp
xchg
bnd
shll
mov
out
cld
sub
push
mov
inc
outsb
jae
xchg
test
sbb
cmc
add
add
xor
out
aad
sbb
sub
inc
and
lret
mov
ljmp
adc
xor
insl
pop
mov
push
inc
jl
pusha
cmp
ret
in
sbb
imul
xor
mov
ljmp
push
repz
aam
popa
aaa
fbld
fadds
in
jae
xchg
xor
cwtl
fstps
xchg
dec
ror
pop
jnp
stos
mov
loope
mov
or
ret
int3
fidivrl
xchg
fdiv
add
dec
mov
dec
push
sahf
mov
and
aam
sbb
jnp
pop
les
dec
gs
add
push
pop
repnz
ret
mov
fsubrs
sbb
mov
subb
ja
icebp
in
sub
ret
rclb
push
mov
xchg
mov
outsl
push
shlb
jmp
push
jmp
push
push
fisttpll
and
cmpsl
or
push
insb
pop
lods
pop
and
or
inc
xor
repnz
lods
mov
jle
jl
pop
notl
dec
dec
xchg
cltd
popf
sar
sahf
or
fwait
movsb
sbb
stc
xchg
sbb
pop
inc
jnp
addr16
imul
lahf
enter
mov
montmul
cmpsb
add
cwtl
nop
rcr
mov
xchg
cmc
mov
test
push
mov
test
xchg
fiaddl
adc
sub
negb
outsl
pop
in
xor
pop
inc
stc
scas
icebp
sahf
cli
push
or
outsl
jb
repnz
cmpsb
xchg
pop
push
loopne
jbe
jle
pop
cs
add
test
inc
cltd
fsubl
xchg
out
fs
test
or
dec
lahf
jae
and
fldl
fs
add
insb
sub
jb
sbb
pop
test
arpl
jp
xor
lds
outsb
stos
or
xchg
or
add
cmpsl
addl
mov
cmp
int3
xor
repz
jo
mov
inc
lcall
aaa
dec
xchg
idivb
jno
sbb
fildll
roll
push
adc
cmpsl
imul
test
push
insb
adcl
jb
insb
cmp
add
push
add
push
dec
lret
cmc
leave
xor
out
subb
cmp
arpl
fwait
mov
imul
mov
dec
shr
add
pop
jnp
mov
and
xchg
lret
fistps
lea
sub
testl
daa
push
lret
and
fwait
movsb
jns
pop
xor
mov
bswap
push
in
fsubp
jge
xor
outsl
rcrl
mov
cld
int
out
pop
sub
js
sub
pop
loope
inc
lods
and
jne
cmp
cmp
pushf
mov
mov
xlat
jno
lret
ret
out
push
movsb
adc
adc
push
xchg
bnd
into
mov
inc
sub
dec
jle
mov
add
fidivl
imul
add
jp
pop
daa
pop
cmpsb
pop
add
loop
js
gs
out
sbb
add
jae
adc
les
push
subb
inc
mov
lods
arpl
clc
loopne
imul
call
pop
inc
ret
test
divb
pop
adc
mov
clc
or
ret
mov
and
mov
dec
clc
sub
shrl
rcl
add
sub
inc
sub
ja
lret
test
dec
popf
and
pop
test
inc
pushf
adcb
add
inc
lcall
jbe
inc
xchg
movsl
adc
cmp
add
cmpsl
pop
bound
shl
ljmp
imul
cmp
gs
divb
rorb
jbe
movsb
mov
insl
lock
pop
mov
push
pop
imul
push
and
pop
inc
xchg
enter
sub
rcrl
pop
lds
ficompl
out
pop
cwtl
out
xor
adc
mov
jge
movsb
xchg
adcl
dec
inc
in
push
add
inc
nop
jb
pop
mov
rorl
repnz
cmp
xor
test
js
ret
xor
stos
lahf
jne
repnz
cli
dec
push
push
cmp
shll
xchg
subl
data16
mov
rcrl
insb
pop
inc
add
adc
out
mov
xchg
pop
push
pop
pop
bound
fs
pop
pop
xor
sbb
testb
mov
dec
cmp
mov
push
std
cmpsl
in
and
movl
sbb
enter
or
test
xor
or
mov
dec
pmullw
xor
adc
push
mov
je
movsl
sbb
and
addb
add
mov
mov
aad
or
movsl
std
pop
mov
mov
mov
mov
cmpb
fstpt
fwait
cmp
dec
in
and
incl
or
cmpb
hlt
popf
sbb
movsb
pop
pop
pop
jne
outsl
sub
pop
inc
lds
pop
mov
std
sub
sub
scas
scas
jecxz
and
xchg
jnp
pop
shlb
xor
or
dec
mov
cwtl
lahf
pop
movb
jne
ficoml
notb
add
or
ffree
lods
loopne
sbb
neg
push
inc
fwait
fisubrs
outsb
clc
xor
lret
clc
and
cmp
mov
xchg
imul
test
xchg
mov
inc
mov
aaa
mov
movswl
cmc
mov
mov
inc
lahf
cmp
or
push
es
jne
cmp
add
inc
enter
jnp
cvtps2pi
arpl
ret
push
jmp
jecxz
ds
jno
inc
push
leave
xchg
adc
xchg
shlb
inc
pusha
mov
mov
push
or
imul
cli
popa
inc
ljmp
push
testb
dec
jo
adc
andl
push
inc
lret
and
bound
cmp
lea
movsb
shr
dec
sub
bnd
hlt
std
xchg
push
js
inc
xchg
sbb
pop
jo
pop
testl
add
mov
scas
xor
xchg
sub
fwait
xor
cmpsb
test
lds
loop
daa
std
push
adc
xchg
cli
pop
lret
xor
push
cld
and
mov
stos
scas
mov
mov
pop
test
jo
mov
lahf
mov
jbe
xchg
inc
xchg
pop
inc
jge,pn
sub
adc
pop
lods
xrelease
shlb
lea
xor
or
pop
lods
decl
push
cmp
xorl
imull
xchg
vfrczss
push
and
inc
shll
push
add
movsb
adc
mov
and
das
rclb
repnz
sub
enter
rcrb
sbb
sbb
pop
mov
repnz
pop
mov
clc
jnp
aas
push
sbb
inc
test
jb
pop
cmp
jno
push
movsl
fldt
lods
push
sbb
out
leave
fdivs
pop
addr16
inc
push
xchg
test
movsl
cltd
leave
decl
cmp
pop
movsl
cmp
pop
and
xor
pushf
jb
mov
pop
in
mov
aaa
fisubl
mulb
mov
lahf
das
test
leave
into
scas
mov
pop
das
adc
out
and
and
jb
pop
pop
and
and
pop
jg
test
xor
enter
ds
daa
pusha
adc
dec
pop
cmp
aad
fisubl
movsb
jle
out
mov
jge
sub
test
mov
fiaddl
dec
idivb
pushf
push
jno
sarb
enter
sub
fstpt
lds
fwait
lock
mov
cld
pop
arpl
push
mov
dec
push
and
mov
mov
xchg
imull
ret
mov
cli
stos
dec
or
movsb
or
jb
outsb
es
mov
arpl
outsb
int3
dec
out
iret
addr16
fxch
out
lret
jge
insw
xchg
je
push
and
mov
loope
lret
into
push
lds
repnz
dec
test
jecxz
cwtl
mov
pop
mov
sbb
nop
int
aas
and
mov
sub
cmpsl
jp
adc
outsl
in
and
mov
adc
xchg
push
adc
dec
or
lock
cs
stc
xor
test
xchg
repnz
mov
test
xchg
cmc
inc
subb
jo
popa
andb
pop
jmp
cmpb
je
into
les
les
xchg
call
xor
lods
pop
pushf
imul
mov
xchg
sub
xor
repnz
jp
sub
add
shufps
adc
dec
dec
push
fs
dec
pop
fdivrs
pop
fcoms
push
divl
out
loope
mull
mov
enter
mov
mov
lret
push
lods
push
jle
jns
sub
ror
adc
fldcw
mov
notb
xchg
mov
push
cmp
push
xor
lea
mov
data16
aaa
add
mov
sub
jae
push
sub
mov
adc
pop
mov
ds
out
or
mov
push
dec
add
rcll
call
nop
mov
pop
inc
inc
adc
add
adc
inc
or
sbb
andb
inc
aaa
jle
sub
int
pop
stos
aas
arpl
adc
xchg
movsb
push
jp
cmp
add
mov
clc
add
xor
adc
xchg
ficoms
cmp
fists
fdivrl
fwait
daa
pop
loopne
mov
mov
pop
loopne
pop
fdiv
and
mov
and
mov
ljmp
xchg
inc
mov
out
mov
inc
add
add
js
xlat
adc
mov
repz
dec
mov
dec
repz
push
jl
leave
repz
imul
or
gs
cmpsl
out
dec
imul
aaa
mov
jne
enter
hlt
orl
int
xchg
loopne
mov
xor
add
mulb
cmp
xchg
loope
lret
lcall
outsl
jge
adc
int
inc
gs
mov
or
mov
dec
adc
inc
add
rcll
arpl
cltd
and
pushf
xlat
insb
and
inc
test
cmp
filds
mov
insl
jg
out
mov
mov
dec
adc
or
je
addr16
in
pop
call
aad
and
or
dec
loope
outsb
lea
dec
add
jns
dec
repnz
cmp
int
repnz
push
xchg
lods
aad
lods
lods
pop
sbb
iret
pop
xchg
cmpsl
sbb
test
ljmp
jg
sub
inc
imul
nop
or
ljmp
or
test
push
push
or
fildl
scas
pop
daa
iret
xor
add
test
adc
add
movsl
dec
or
rorl
cltd
lcall
stos
mov
jp
js
sub
inc
sbb
out
mov
adc
mov
push
fsubs
push
adc
rolb
scas
inc
fwait
xor
pop
add
push
cmp
out
xchg
dec
dec
xor
cmp
push
and
cmp
outsb
cmp
hlt
pop
pop
adc
int3
out
mov
xor
inc
add
lods
test
dec
sti
icebp
pop
orb
insl
test
add
add
xchg
xchg
and
dec
mov
pop
test
adc
xor
cli
arpl
sbb
adc
mov
mov
das
and
add
clc
mov
mov
xor
push
cs
push
ljmp
call
repz
jns
rcl
ret
int
insl
fsubrs
test
divb
mov
in
sar
sbb
ss
in
fdecstp
xor
pop
jmp
lret
dec
jo
iret
pop
pop
adc
rcrl
fcmovnb
push
adc
push
es
scas
hlt
fisubrl
je
push
fdivrs
inc
mov
out
jl
loope
das
stos
jg
xorb
stc
cmp
imull
not
lods
orb
inc
xchg
sahf
dec
xchg
push
or
fucomip
enter
sbb
loope
cmp
in
fwait
jo
push
jmp
xchg
inc
loop
pushf
jbe
or
jg
dec
in
scas
pop
and
insl
mulb
dec
cmc
xor
pushl
dec
jl
jle
ja
sub
aam
rorb
inc
or
mov
pop
mov
icebp
mov
jmp
call
or
negb
adc
mov
push
adc
jno
push
test
frstor
cmc
jg
sbb
fsubrs
jp
xor
jae
sub
mov
push
enter
pop
aam
sarl
scas
cmp
movsb
or
mov
pop
out
push
dec
gs
gs
arpl
mov
inc
adc
lret
xor
nop
mov
cli
sub
adc
mov
mov
xor
cmpsb
xchg
inc
idivb
fidivrl
jno
mov
out
xor
out
dec
sbb
cmp
jl
xor
in
pushf
in
sbb
or
mov
mov
out
stos
jmp
xlat
cwtl
mov
mov
sbb
fsts
sub
inc
imul
push
inc
jne
cwtl
lods
mov
mov
stos
loopne
cmpsl
xchg
jecxz
sub
xlat
subb
into
iret
dec
inc
mov
fbld
push
adc
inc
jno
mov
and
idivb
or
outsl
mov
mov
nop
jecxz
mov
sub
call
xchg
xor
ret
xor
fisttps
adc
push
movsl
hlt
add
pop
push
push
into
out
xor
cmpsl
xadd
lret
cltd
inc
jo
xor
mov
inc
les
mov
sub
movsb
mov
cmp
jno
jecxz
add
lret
out
dec
and
mov
jnp
lcall
jne
inc
jecxz
hlt
mov
mov
inc
xchg
fcompl
sub
mov
lock
pusha
adc
in
in
js
cmp
adc
jg
lcall
or
mov
lret
adc
popa
fisubrs
jo
dec
in
fisubs
push
pop
fistl
xchg
mov
sbb
rorb
in
cmp
cmp
dec
aaa
adc
sub
pop
push
push
xlat
mov
lret
divl
movsb
adc
inc
mov
sbb
mov
es
daa
add
adc
xchg
sbb
int3
mov
rorl
gs
inc
repnz
mov
and
mov
or
mov
les
imul
leave
and
outsb
jmp
out
mov
fcomps
ljmp
dec
add
out
cmp
int
adc
pushl
pop
imul
outsb
out
lahf
sti
xlat
and
hlt
push
pop
arpl
adcl
cmpsl
push
sub
mov
or
insb
pop
in
out
je
mov
mov
mov
in
test
mov
in
cmpsb
sub
jp
jne
mov
lds
pusha
dec
outsl
xor
inc
sahf
pushf
in
scas
cmp
lret
fs
inc
pushf
adc
rol
hlt
dec
cs
adc
outsb
pusha
int3
pop
ja
fisubs
xchg
fildll
lds
int3
adcb
pop
rorb
sub
repz
xor
ljmp
pop
mov
push
daa
movsl
divl
cmpsl
pop
sti
dec
shrl
jb
add
outsb
xlat
stc
or
mov
jae
mov
adc
fisttpl
stos
and
fstpl
sbb
and
dec
int3
mov
xchg
xor
sub
bound
or
dec
mov
out
jecxz
lret
mov
xchg
mov
mov
jae
testl
adcb
push
sbb
mov
xor
xchg
sub
sub
mov
xlat
test
loopne
xchg
daa
pusha
js
lods
mov
xor
and
xor
cmp
rclb
lcall
imul
bound
into
lea
ds
lock
mov
push
xlat
jo
jp
mov
pusha
or
xchg
jno
rclb
outsb
inc
mov
call
es
xchg
jns
or
mov
outsb
in
sub
dec
sub
jle
ret
cmpsb
pusha
or
or
inc
insl
jae
push
xchg
mov
and
xor
pop
add
inc
cmp
dec
paddsb
add
popf
mov
data16
icebp
jb
add
jg
cmpsl
mov
xor
out
xor
mov
rcrl
cwtl
ret
adc
mov
mov
adc
cmp
sahf
mov
dec
push
mov
out
pop
xor
addl
inc
dec
push
mov
push
sbb
call
jge
andb
pop
shl
idivl
xchg
les
jne
aaa
cmp
jl
pop
imul
nop
addb
loopne
les
sbb
mov
imul
inc
mov
pop
into
test
es
and
adc
rcrb
jl
daa
enter
inc
sbb
mov
jl
rorb
addr16
sti
leave
test
fs
sub
mov
jmp
cltd
xor
mov
xchg
repz
sbb
mov
cmp
lods
jnp
dec
and
push
test
and
dec
subl
sub
xlat
ret
sub
in
push
sub
out
nop
or
sub
push
dec
and
jmp
add
sti
rcl
pop
cmpsb
int
rcll
faddp
dec
shl
xchg
mov
dec
icebp
xchg
iret
xchg
pop
push
rolb
add
cwtl
test
imul
sahf
mov
pop
push
push
jb
xor
ljmp
out
jmp
push
push
push
push
xchg
mov
mov
loopne
jo
movl
dec
cmp
lock
fstpl
scas
jp
push
out
js
in
dec
stc
loopne
jg
mov
sub
push
push
loope
dec
rclb
cltd
mov
cmp
out
lock
scas
orb
lock
or
push
test
adc
out
and
stos
push
clc
sbb
stc
push
stc
ds
dec
arpl
sti
mov
mov
lods
popa
fldt
cmp
jae
mov
scas
aas
xchg
stos
mov
mov
pop
xchg
xchg
xchg
bound
cmpsb
scas
mov
loop
imull
sahf
subb
icebp
repz
je
sub
inc
sti
mov
pop
ret
test
xor
nop
movsl
dec
xorb
jge
cmp
adc
pop
notb
rcrb
jbe
repnz
lock
push
cmp
out
out
sti
aaa
sbb
stos
xchg
inc
jl
lea
mov
cmp
es
mov
sarb
js
fstl
das
inc
pop
inc
cld
xchg
fisubrs
push
or
ss
aaa
ljmp
repnz
out
in
repnz
cmp
mov
test
in
popf
adc
pop
insl
or
loop
pop
push
xchg
idiv
sbb
sub
fisttpl
shlb
dec
js
or
jns
iret
stos
xor
cmp
jb
jb
and
push
cmc
jns
mov
mov
rolb
cli
dec
jl
dec
loopne
in
cmp
out
psllq
fadds
cwtl
pop
dec
outsl
mov
sub
dec
adc
dec
push
pop
pop
mov
bound
pushf
scas
std
xor
lds
inc
popf
mov
mov
hlt
rcrl
adc
adc
pop
clc
test
sbb
dec
cmpsb
and
xchg
test
test
clc
rep
adc
hlt
jo
addl
xchg
push
jmp
inc
repz
loope
rclb
and
xor
int3
jle
cld
mov
dec
xor
cmp
push
sbb
jbe
ret
sub
testb
insl
cmp
lret
loope
call
mov
jmp
fs
jo
push
cwtl
bound
cmp
int3
or
sub
ja
mov
mov
mov
icebp
push
fcomps
jecxz
sbb
stos
mov
cli
divb
mov
popf
fxch
or
cli
cs
fistpl
mov
push
xlat
cs
inc
cmp
adc
test
pop
idivl
lock
add
ret
mov
fwait
pop
or
mov
push
aas
mov
dec
push
andb
dec
call
push
loop
test
nop
mov
push
xchg
push
push
aad
or
addr16
fs
mov
shll
enter
imul
jb
outsl
movb
cmp
pop
adc
ficomps
stos
or
call
sub
bound
mov
jge
inc
mov
loop
data16
adc
mov
add
pop
or
sbb
mov
jne
je
nop
nop
fnstsw
dec
test
xchg
fnstenv
movsb
out
cmp
js
add
or
jne
leave
jmp
and
fstpl
ds
mov
jl
into
pop
cmp
or
test
outsb
xor
sbb
cli
daa
pop
sub
fcmove
jae
mov
loop
out
lock
mov
leave
les
xor
sub
mov
xor
cltd
push
jbe,pn
cmpsl
aad
inc
xor
cmp
ror
add
pop
jmp
jo
enter
ror
sub
ficoml
loopne
adc
jbe
movsb
pop
push
lret
cmc
daa
adc
jne
aaa
movsb
mov
outsl
mov
xorb
mov
push
pop
xchg
aas
repz
mov
testl
repz
fpatan
push
sbb
imul
fwait
jmp
loop
jmp
dec
daa
fsts
rcrl
push
dec
pop
fdivr
fimuls
dec
andl
push
xchg
inc
xchg
jmp
pop
cs
and
test
mov
sbb
out
inc
ds
das
cli
mov
scas
pop
loopne
movb
test
sub
loope
and
lods
sub
cmpsb
and
shl
leave
bound
iret
shlb
fsubr
adc
and
xor
adc
nop
cmp
dec
out
jge
add
scas
dec
inc
xchg
out
cli
rcrl
pop
cltd
xor
mov
add
inc
xchg
decb
outsl
mov
pop
gs
xor
or
rcl
call
add
dec
mov
int
jo
test
mov
in
or
xchg
in
divl
pusha
fisubrs
aam
mov
cmp
int3
mov
pop
xlat
xor
ja
stc
jge
std
cmpsb
pusha
addr16
sbb
leave
adcb
pop
addr16
inc
inc
scas
cmp
inc
mov
xchg
loopne
push
ds
enter
test
dec
clc
adc
sub
in
fdivl
mov
xor
and
cmp
jne
fnstsw
je
sbbl
inc
dec
mov
sub
movsl
rorl
or
push
cmpsl
outsl
mov
or
aad
inc
mov
inc
cmpsb
adc
aaa
inc
cmp
sub
mov
xor
std
add
ljmp
clc
or
or
cmc
inc
hlt
pushf
pop
add
push
call
test
addr16
push
cmpsl
stc
add
jl
sahf
push
jns
dec
dec
and
ret
and
scas
add
xchg
add
sbb
cwtl
repz
shl
into
jno
add
sub
lock
mov
fiaddl
ret
test
sub
dec
test
rcrb
cmpsb
mov
pop
jnp
mov
sti
mov
adc
adc
ljmp
adc
aam
imul
clc
mov
enter
push
in
cwtl
cmc
in
lods
dec
popa
add
scas
ret
push
dec
xlat
push
gs
jne
aaa
in
cmp
mov
out
js
stos
dec
add
cmpb
push
pop
loope
push
loop
add
push
mov
inc
in
push
adc
insb
popf
or
in
out
mov
mov
xchg
std
lret
mov
loop
pop
add
dec
dec
pushf
insl
lods
sahf
icebp
inc
xchg
add
pop
bound
push
fs
mov
push
test
mov
lret
xchg
xchg
imul
fucomp
outsl
mov
inc
sub
ljmp
jae
jge
inc
push
adc
fisubrl
xchg
mov
dec
repz
lds
xchg
and
mov
mov
xor
jae
shll
gs
loop
rcrb
inc
push
in
jo
push
jnp
dec
mov
stc
je
aaa
scas
dec
imul
fiadds
bound
js
movsb
mov
rorb
xchg
clc
inc
repnz
sub
div
call
inc
imul
jne
rep
arpl
add
ss
and
sub
cmpsl
scas
test
inc
loop
dec
shll
test
loop
push
andl
inc
dec
jnp
mov
push
pop
les
jmp
aaa
sub
pop
mov
icebp
xchg
aas
pusha
adc
popw
fmuls
imul
js
pop
mov
pop
xor
lea
int
pushf
cmp
sar
mov
scas
and
stos
pop
push
jnp
es
test
movsb
fiadds
test
jb
sub
adc
aam
sub
mov
xor
xchg
mov
test
scas
js
addb
jne
and
mov
mov
sbb
or
popf
jae
repnz
pop
cwtl
or
jl
cmp
cmp
icebp
int3
or
add
shll
out
dec
dec
jo
fsubl
js
or
add
mov
enter
adc
test
xor
jmp
movsl
sbb
mov
stos
push
push
xor
push
insl
inc
xlat
nop
mov
jecxz
jg
lods
sbb
xor
inc
push
push
dec
mov
pushf
inc
lods
in
dec
and
daa
sbb
sbb
jno
jns
or
cmp
stc
fs
mov
mov
xor
in
inc
xor
arpl
test
stos
add
sti
mov
das
xor
mov
ja
insl
jmp
scas
and
cmp
add
test
leave
xchg
add
fsts
daa
test
pop
lea
jmp
pop
addb
sub
in
push
stos
xor
cwtl
pop
ficompl
xor
idivl
gs
aad
cmp
mov
sar
out
lock
gs
inc
xor
mov
pop
xor
xchg
push
mov
adcl
mov
lods
ret
out
xchg
ljmp
jo
enter
add
dec
leave
inc
add
lods
mov
out
jno
xchg
sbb
sbb
xchg
ret
push
iret
daa
adc
dec
mov
xchg
pop
mov
out
mov
cmp
out
and
cli
aam
pop
leave
dec
mov
pushf
sbb
outsl
notb
mov
mov
push
push
cmc
push
push
push
test
movsl
mov
ja
inc
jae
jecxz
or
sbb
hlt
outsb
pop
mov
pop
nop
jns
cmp
xlat
adc
push
loope
lock
add
cld
int3
add
xorb
mov
mov
bound
mov
mov
mov
adc
mov
xchg
repz
pop
loopne
es
inc
jmp
mov
inc
pop
jns
xchg
pop
mov
movsl
in
xchg
xchg
fmul
mov
add
ret
lcall
test
and
mov
jecxz
fisttps
pusha
pop
or
dec
aam
or
cmp
pop
or
xchg
jge
lods
popa
out
add
mov
negl
pop
sub
push
sub
pop
dec
mov
das
jno
add
ret
lods
inc
dec
out
shlb
cmpsl
jg
lods
lea
or
mov
ds
mov
rolb
in
mov
and
int
adc
cmp
fs
mov
dec
mov
pop
xor
aas
and
jmp
pushw
mov
jecxz
outsb
jb
push
xchg
fldl
dec
mov
pop
add
sub
es
pop
fdivrl
jecxz
leave
test
test
push
popa
mov
mov
pushf
sahf
jge
jb
fistpl
divb
clc
es
xor
pop
mov
cmp
and
loop
adc
outsb
sub
mov
xorb
out
loope
cmpsl
xchg
add
lret
adc
lods
bound
dec
int
sub
out
loopne
es
xchg
xor
popa
push
fcmovnb
sub
and
out
daa
imul
sub
inc
dec
data16
les
push
je
inc
cli
test
mov
xchg
add
popa
aas
stos
sbb
adcl
arpl
sbb
sbb
movsl
movsb
push
jg
add
push
shld
xor
sub
adc
mov
sbb
leave
sbb
xchg
sahf
mov
or
and
inc
or
sub
test
std
xchg
push
xchg
mov
or
pop
add
push
or
enter
loopne
push
dec
scas
stc
mov
inc
mov
dec
sub
icebp
mov
in
shlb
fmuls
adc
cmp
xor
lods
pusha
cwtl
lods
dec
out
movsl
mov
adc
mov
std
jno
leave
inc
test
cld
add
add
loop
aam
repz
arpl
dec
push
rorb
dec
fldl2e
stos
popa
movsl
ficompl
sbb
adc
cmp
lods
inc
or
dec
lcall
mov
xorb
test
pop
imul
add
mov
dec
gs
xor
js
push
xor
addr16
mov
xchg
pusha
add
sbb
pop
das
sahf
inc
xchg
sbb
dec
jecxz
fst
cmp
js
icebp
test
ja
loop
idivl
adc
dec
aam
fdivrl
adc
fmuls
ja
xor
jne
aad
adc
dec
out
cmp
sarl
xor
aad
inc
pop
and
add
jne
mov
fildll
pop
pop
and
rorb
inc
cmp
out
in
mov
fsts
inc
mov
inc
pusha
fisubrl
shlb
ficomps
pop
daa
mov
inc
bound
or
dec
inc
mov
dec
add
mov
xlat
mov
es
or
mov
cmp
xor
cmp
inc
aam
gs
xchg
mov
aaa
les
adc
push
fdivrl
xchg
adc
mov
push
xchg
sbb
adc
mov
jb
adcl
cld
lea
add
and
sbb
mov
push
cmp
sub
jge
pop
jmp
ljmp
pop
sahf
sti
outsb
cmc
shl
cmp
pop
adc
cli
iret
fnsave
cmpsl
xchg
cmp
ret
bound
sub
ret
mov
add
les
jo
mov
mov
xor
scas
shl
dec
mov
cmc
xor
push
cmpsb
adc
cs
sub
xchg
xchg
xchg
mov
adc
xchg
jns
mov
bt
mov
sbbb
cmp
je
into
ror
sti
pop
cmp
mov
movsb
movsb
inc
mov
pop
xor
mov
pop
push
add
test
cmp
stos
stos
adc
xchg
xchg
scas
outsb
and
insl
fnstcw
jo
and
stos
sub
out
dec
sub
es
dec
imul
daa
jecxz
add
mov
rclb
cmp
daa
and
nop
push
out
cs
idivb
std
icebp
andl
push
fiaddl
je
fisttpl
lahf
fcmovu
pop
scas
pop
adcb
pusha
push
xchg
insb
rcll
aam
jns
dec
sub
push
daa
rolb
push
outsl
hlt
call
cld
sbb
or
pop
xchg
mov
jne
mov
sbb
xchg
push
cld
xchg
pusha
fisttpl
cmp
out
push
or
ficoml
cmp
mov
adc
cmp
andb
add
push
call
ss
into
and
jge
in
daa
daa
leave
or
jo
mov
pop
cs
fists
push
outsl
shll
jae
xchg
or
or
lahf
xchg
lret
pop
dec
sti
fsubrp
into
cld
sub
pop
insl
inc
push
int3
jmp
shlb
or
mov
mov
jmp
jp
xor
push
cmp
popf
add
jg,pn
inc
xor
bound
int3
pop
mov
push
aad
jl
popa
and
in
and
sbb
jae
sub
jnp
mov
cmp
in
or
scas
popf
add
xchg
mov
xchg
cli
fnstenv
mov
push
xor
push
mov
aas
fisttps
out
xlat
es
dec
cmp
sarb
in
mov
das
jnp
pop
roll
test
sbb
cmp
inc
mov
xchg
sar
lods
mov
adc
jae
insl
sub
dec
jle,pn
test
cmp
mov
xor
mov
push
push
xchg
daa
pop
sbb
repz
ret
or
mulb
push
ja
dec
repnz
fcomps
cld
imul
popf
shl
or
aas
jmp
and
push
push
nop
xchg
dec
shll
mov
les
or
psubw
xor
fstps
jns
sbb
int3
sarl
or
mov
mov
or
lods
icebp
pop
in
pop
leave
imul
cmp
or
pop
mov
jo
push
insb
ret
sbb
rolb
push
inc
cmpsb
ds
ljmp
sbb
sbb
lcall
sarb
xor
mov
adc
mov
js
cltd
fstpt
adc
push
push
cwtl
das
add
call
push
test
xchg
ljmp
aam
inc
ja
cmp
out
mov
lahf
cmc
and
in
cmp
jae
mov
cmp
aam
xchg
push
ret
lcall
test
xorb
lock
sti
push
sti
out
cli
loop
mov
decb
inc
jno
xchg
imul
sbb
stos
push
dec
mov
xor
sahf
cmp
pop
dec
leave
push
mov
pop
xchg
mov
mov
jmp
lret
stc
sarb
sbb
sarb
inc
fs
inc
ljmp
popw
ret
js
clc
lahf
inc
push
adc
adc
inc
sub
push
xlat
loop
movsb
es
lock
js
fwait
sub
stos
mov
out
cmp
mov
jo
jbe
pusha
dec
sti
jle
mov
test
xchg
cltd
int
push
jno
fdivrp
lahf
and
mov
sbb
pop
in
ja
push
lcall
das
mov
fstps
mov
and
subl
out
rorl
out
or
ret
test
jg
jge
mov
mov
test
mov
pop
or
std
xchg
inc
dec
in
out
pop
cld
or
ljmp
dec
xchg
cli
jb
cmp
inc
push
leave
xchg
stc
mov
fwait
ljmp
xchg
xchg
mov
push
das
mov
jne
lret
sarb
fiaddl
neg
push
loopne
push
frndint
xchg
ljmp
xchg
xchg
inc
mov
pop
pushf
int3
pushf
jae
mov
leave
lahf
pushf
sub
mov
sub
mov
pop
imul
test
dec
popf
cltd
and
jns
in
sub
pop
repnz
inc
callw
sbb
lods
sub
mov
push
popa
out
seto
jp
mov
cwtl
fdivrs
cld
iret
sub
or
jo
dec
orl
div
icebp
or
jae
cmpsl
out
jns
mov
add
fdivrs
mov
aaa
pop
fdivrs
jmp
lcall
lds
popf
lds
aad
dec
int3
or
dec
xchg
jmp
push
jns
dec
xchg
sub
push
xchg
push
mov
mov
rclb
nop
popf
sub
in
sbb
mov
jne
lods
inc
xchg
loope
ja
xchg
lods
dec
or
jge
dec
loop
xlat
and
push
jnp
subl
ficoms
push
lret
adc
cli
popa
stos
mov
dec
jp
loope
jns
loope
pop
pop
bound
scas
and
sub
test
inc
std
push
into
ja
push
mov
pop
jge
xchg
inc
shlb
fistpl
insb
push
adc
data16
mov
lea
mov
push
test
jmp
dec
pushf
cld
insl
push
arpl
mov
hlt
mov
data16
mov
add
lods
test
jmp
pop
aad
popa
pop
mov
dec
push
outsb
mov
cmp
sub
lcall
orl
xchg
push
jg
xchg
test
jl
cld
jmp
jno,pt
or
addr16
addr16
lock
ds
movsb
push
rorl
out
or
sub
clc
mov
ret
inc
ret
push
pop
dec
mov
insb
or
mov
dec
imul
js,pt
mov
pop
bound
push
add
pop
repz
xchg
push
mov
push
addr16
je
pop
insl
cmpsl
mov
pop
mov
mov
ffree
mov
jno
inc
pop
gs
sbb
jge
pop
repnz
rorl
adc
push
mov
pushf
mov
mov
outsb
pop
push
repnz
mov
push
mov
les
cmp
xchg
add
enter
jb
rcrb
sbb
sub
scas
fdiv
cmp
out
adc
xor
pop
call
pushf
jecxz
movsb
jo
push
int3
push
loopne
pop
les
mov
xor
arpl
movsl
dec
test
arpl
dec
in
inc
sub
cmc
jle
fiaddl
or
loope
jb
shlb
fwait
xorb
ss
add
movsl
sub
std
popa
lods
mov
ret
std
outsb
sbb
dec
cld
pushf
or
sub
dec
or
cltd
into
mov
xchg
jmp
push
or
xchg
dec
add
inc
xor
xor
xchg
jno
mov
fmuls
aam
dec
jbe
cli
jle
pushf
popa
mov
jo
jnp,pt
xchg
aam
orl
gs
pop
pop
nop
mov
mov
xor
adc
daa
aas
mov
inc
cmp
inc
and
pop
rorl
cmc
inc
adc
rcll
dec
out
imul
imul
dec
and
cmp
or
jns
enter
sub
add
sbb
push
scas
outsl
cmp
inc
inc
mov
in
icebp
mov
or
xchg
jge
add
div
cltd
add
sbb
cmp
xor
icebp
dec
imul
dec
inc
pop
jns
stos
test
jnp
subb
stos
pop
mov
mov
cmp
out
or
inc
mov
add
xchg
stos
xchg
pop
sbb
leave
lret
out
sbb
add
outsb
outsb
and
cmp
push
sbb
dec
dec
das
jo
fwait
push
out
stos
stos
dec
jne
sbb
rcr
je
mov
xor
or
int
and
cwtl
pushf
mov
or
ljmp
xchg
sbb
xor
cmp
xchg
mov
lods
fs
push
inc
in
or
dec
mov
mov
fs
dec
pop
push
dec
rcrb
inc
jp
xchg
inc
and
imul
cmpsl
xchg
adc
dec
mov
push
cmp
mov
sub
ja
test
mov
lea
outsl
lret
fs
js
aam
rol
dec
or
xor
add
std
mov
xor
mov
or
loope
in
xor
mov
insl
in
icebp
dec
sbb
add
dec
cmpl
sub
cmp
dec
push
outsb
mov
call
ja
hlt
scas
or
movsb
movsl
mov
popl
cld
scas
adc
lahf
dec
outsl
adc
inc
iret
ja
fists
test
cmp
sub
rcll
nop
daa
pop
xor
mov
pop
inc
pop
jmp
xchg
lret
out
jmp
push
adc
jne
std
ja
repz
outsb
mov
adc
or
jbe
adc
xchg
fdivl
pusha
clc
lcall
rcrl
jmp
push
add
mul
xor
adc
imul
and
xchg
inc
cmpsl
mov
mov
lahf
mov
repz
sti
mov
shll
mov
jbe
add
data16
fiadds
out
aaa
sub
push
ljmp
jo
mov
imul
lea
xchg
pop
add
add
repz
mov
cmp
jge
js
inc
test
out
mov
movb
jmp
repnz
mov
test
dec
fcoml
sbb
sub
mov
xchg
adc
add
divb
mov
out
lds
fimull
pop
cld
sahf
fdivl
push
cmp
das
push
lock
stc
sbb
stos
dec
es
adcb
add
add
daa
xchg
xor
imul
pushf
clc
dec
dec
add
movsl
mov
pop
cwtl
xchg
mov
xchg
int
xchg
jge
outsb
and
lea
cmp
push
sub
push
cmc
stos
insb
out
or
dec
pop
and
ss
mov
mov
int
imul
je
std
leave
ljmp
popa
gs
hlt
push
push
test
dec
add
fucomip
cwtl
into
push
pop
mov
shl
shlb
mov
lods
idiv
adc
adc
loop
mov
fwait
pop
add
lods
shll
fstps
in
pusha
inc
call
push
mov
pop
sub
mov
inc
cmp
aaa
js
push
jle
xchg
inc
cmp
jns
mov
ret
outsb
insb
mov
int3
out
iret
sub
in
ja
sbb
jno
or
repz
frndint
test
adc
mov
lcall
cmp
push
mul
aad
gs
pop
fwait
xor
push
jns
movsl
je
xchg
andl
les
ret
jle
aas
aad
jle
dec
lods
dec
js
cmp
push
mov
sub
inc
addr16
in
dec
int
push
mov
mov
out
enter
xor
xlat
aas
rcll
setae
stc
pop
jle
xchg
fadd
stos
mov
mov
into
mov
pop
fwait
rcl
sub
arpl
imul
pop
and
sbb
push
or
adc
fdivrl
push
imul
ds
pop
sub
inc
mov
out
pushf
push
mov
xchg
scas
push
outsl
repz
je
pop
push
fbld
in
daa
mov
cmp
mov
pop
add
sub
pop
xchg
shrl
push
dec
xchg
dec
insl
into
paddw
cltd
fistps
outsl
push
aas
stos
pushf
popl
inc
loope
adc
xor
das
push
lock
repnz
sbb
push
jmp
shl
push
fldl
or
and
sbb
js
pop
xor
sub
and
xor
clc
inc
fcomps
lret
js
je
je
imul
add
hlt
scas
mov
dec
fdivl
jle
or
dec
sti
mov
xorl
test
push
dec
loopne
lods
or
scas
scas
xchg
xor
cmp
mov
xchg
xor
jg
mov
xchg
or
sbb
ds
cmp
jae
mov
xchg
sub
adc
stos
cmp
inc
xchg
add
lea
out
int3
and
test
and
push
cmp
cld
cmp
sbb
jle
fsubrs
mov
or
daa
into
xchg
movsl
jle
outsb
inc
and
jecxz
out
idivb
and
es
jne
xchg
pusha
mov
mov
repz
push
push
sub
fmuls
fs
xchg
jb
sub
enter
fs
repnz
xor
mov
jno
mov
push
or
lahf
repnz
cmovs
jecxz
xchg
or
in
xchg
xor
inc
outsb
sub
inc
and
add
repnz
scas
mov
or
mov
or
and
subb
jg
xchg
testb
rol
jmp
mov
mov
inc
pusha
adc
hlt
add
push
inc
pusha
out
mov
cmpsl
push
icebp
sub
pop
xor
in
cmpsl
or
call
adc
leave
out
dec
popa
test
into
scas
xor
mov
shl
push
roll
and
fcomip
sbb
push
sbb
and
sub
xor
fs
stc
xchg
icebp
pusha
xchg
xor
adc
loope
stc
movsb
arpl
sub
adc
faddl
scas
das
setle
xchg
and
test
cmp
subl
mov
iret
sub
je
mov
add
loopne
cmp
scas
sub
or
mov
sbbl
and
icebp
andb
inc
dec
fisttpll
jp
rcll
mov
icebp
dec
lods
sbb
scas
outsl
loopne
fistpll
cmp
pusha
ret
fidivrl
into
lret
sub
mov
rcll
fucomi
adc
and
cltd
ds
pop
sub
or
dec
inc
lcall
rolb
push
imul
jg
cltd
fbstp
icebp
cli
or
xchg
cmp
pop
sbb
cmp
and
les
xchg
loopne
cmp
push
cmp
jl
fbstp
jp
dec
imul
outsl
das
mov
scas
xchg
inc
nop
out
push
mov
out
std
jge
mov
or
adc
out
aaa
cmp
les
outsb
lret
pop
mov
dec
jne
dec
shll
sahf
jmp
jecxz
and
add
fst
push
mov
mov
push
dec
mov
xchg
add
and
cmp
aad
test
daa
pop
lahf
stos
xor
adc
pusha
pop
pusha
pop
ds
cmpsb
xchg
je
jbe
xor
sti
imull
push
inc
movsl
pop
dec
out
cs
cltd
jle
cmp
jmp
add
sbb
sub
popf
push
out
sbb
in
bndstx
lock
mov
out
xchg
stc
call
sbb
adc
pushf
pushf
mov
fwait
sbb
icebp
cld
sahf
bound
lea
dec
loop,pn
or
cmpsb
addl
or
sbb
fwait
add
jmp
jecxz
cwtl
cmc
sub
out
aam
dec
xor
and
mov
jo
mov
mov
mov
xor
pop
inc
int
mov
push
cmpsl
notl
jns
pop
cmp
fwait
pop
and
pop
jbe
cmc
xor
adc
arpl
sahf
imul
cmp
jge
je
add
fnsave
inc
pop
adc
lods
mov
mov
jnp
nop
jnp
je
jmp
xor
cmpsl
shrb
ljmp
adc
xchg
in
repz
xchg
shr
and
mov
mov
stos
sti
pop
imul
hlt
ss
ret
xor
mov
cmp
filds
push
and
stc
bound
sbb
clc
fs
mov
sti
inc
test
xor
out
sahf
or
xchg
leave
pusha
dec
jp
jbe
rorl
sti
inc
pop
loope
ret
mov
xor
jmp
add
cmpsb
cmp
test
popa
test
mov
mov
dec
xor
aaa
fbld
xor
jae
sbb
xchg
mov
decl
rclb
sub
jge
sub
xor
dec
icebp
adc
add
rcrl
fsubr
idivb
xchg
movsl
mov
mov
add
cs
mov
mov
mov
mov
insb
mov
xchg
xor
cmp
or
add
cmpb
lcall
mov
jns
testb
push
xchg
lcall
xor
jno
sbb
popf
dec
mov
sub
sbb
imulb
popf
stos
adc
arpl
pop
iret
out
push
loopne
jge
rol
shrl
testb
popf
in
push
das
pop
call
pop
ljmp
pop
push
cld
adc
adc
jmp
mov
jbe
lods
xchg
movsl
and
push
pop
dec
jl
mov
mov
stc
push
and
mov
cmc
xor
les
scas
or
adc
jmp
add
sub
ja
sti
inc
int3
fidivl
or
cltd
add
lret
pop
lods
movsb
xchg
pop
test
inc
stos
stos
mov
or
nop
mov
std
push
aam
lret
pop
inc
loope
scas
nop
ret
int3
pushf
mov
insl
cmp
ja
add
das
lds
shll
shll
push
pop
repz
mov
jmp
jg
dec
pop
gs
xor
mov
fnsave
xor
aam
sbb
mov
jle
aad
push
jne
movsb
scas
testb
sbb
mov
dec
ret
add
cmp
insl
sub
fidivrs
cmp
inc
cmp
sahf
gs
sub
ror
enter
inc
and
xor
xchg
aas
push
loopne
dec
add
gs
add
loop
insl
jg
adc
incl
xor
fadds
cmp
scas
sub
mov
jnp
mov
or
push
ss
clc
pop
xchg
pop
sbb
idiv
cmp
xchg
or
mov
pusha
sub
lahf
inc
push
mov
mov
loop
pop
sub
mov
sahf
call
cmp
push
xchg
ret
inc
inc
jne
push
repz
sub
daa
lds
into
sbb
jl
out
arpl
rcrb
pop
pop
int3
rcrl
mov
sub
mov
cli
repnz
adc
dec
jnp
mov
push
xor
xor
sub
mov
pusha
dec
cmp
cltd
push
lds
out
mov
inc
jecxz
adc
pop
jp
and
je
dec
lea
imull
rorb
jg
mov
pop
add
mov
ds
push
mov
pop
shr
stos
xor
mov
adc
pop
or
pusha
jnp
jmp
mov
fldt
clc
subb
dec
mov
das
inc
add
and
sbb
lock
lahf
ds
xchg
sub
sub
dec
insb
lock
scas
sahf
test
in
add
push
shlb
add
jb
mov
mov
or
fmul
and
cmp
setle
outsl
testl
pop
jl
outsb
icebp
adc
gs
jbe
dec
stos
daa
push
jae
imul
push
shll
and
inc
sbb
cltd
fnstcw
daa
daa
js
mov
mov
xchg
pop
aam
fisubrl
jge
dec
pop
in
in
rsqrtps
mov
into
arpl
cmp
movsb
mov
ja
push
cmp
loopne
ret
adc
add
imul
and
adc
sbb
mov
adc
mov
int3
sbb
loope
cmp
push
cmp
push
mov
jmp
movsl
mov
inc
icebp
cmp
jmp
xchg
test
mov
mov
aas
data16
ficompl
xor
cs
mov
scas
js
mov
add
and
sti
add
dec
xchg
mov
xor
add
loopne
in
es
sbb
sub
pop
sub
mov
rorl
fildl
add
sub
and
notl
lcall
shll
bound
xlat
aam
adc
int
push
xchg
in
ret
and
adc
shll
jb
fadds
leave
pop
inc
lods
pop
cmp
dec
mov
movsb
repz
arpl
sub
cmc
faddp
or
mov
xor
orb
dec
cld
movsb
pop
iret
or
dec
cmp
lods
or
mov
mov
iret
jle
nop
lahf
mov
fdivrs
cmp
mov
fcoml
jg
dec
call
fdivr
and
ljmp
repz
and
cs
cmpsb
push
mov
push
sti
lods
jbe
in
jbe
mov
js
shrb
pop
jno
lret
gs
cmp
std
sub
and
movsb
es
shlb
sub
ret
shlb
out
mov
das
mov
ret
mov
mov
mov
add
in
jbe
pop
adc
aam
xor
call
and
pop
xor
push
dec
call
xchg
cmp
divb
inc
mov
adc
xchg
sub
xor
cmpsb
frstor
and
test
rcll
xor
mov
lcall
pop
roll
in
sahf
pop
pop
xor
cmpl
test
adc
sub
hlt
test
fsub
jns
pop
sub
mov
cmpsl
cli
adcb
out
inc
jb
icebp
stos
add
test
mov
lret
jbe
adcb
inc
leave
and
dec
mov
mov
cmp
arpl
mov
insl
loopne
mov
test
and
adc
sbb
xchg
pop
mov
sbb
adc
jle
add
mov
scas
sub
arpl
cli
sbb
sahf
lret
call
mov
jne
scas
gs
shrb
call
cwtl
adc
ja
xor
mov
nop
cmp
push
sbb
int
lods
scas
shl
xlat
pop
int3
jg
movsb
ret
fcmovnbe
out
cmp
pusha
pop
pop
fdivrs
fistl
mov
cmc
mov
push
fldln2
cmpb
inc
sti
imul
pop
or
mov
push
loope
ja
test
out
xchg
and
lcall
and
fidivl
mov
mov
into
scas
cmpsl
test
jb
shrb
pop
inc
mov
sub
dec
int3
push
add
negb
sahf
ss
js
xor
and
mov
add
imul
push
cmp
cltd
cmp
dec
cmpsl
cltd
outsl
sub
lds
je
and
cmp
movsl
stc
movsl
jae
sub
fcompl
sbbb
hlt
dec
loop
cmp
jp
dec
loopne
les
push
pop
aas
or
xlat
and
dec
neg
mov
dec
pop
fisubl
lret
jae
inc
xor
or
xor
sbb
pusha
push
push
jmp
xchg
in
cmp
pop
rorb
lret
xor
push
mulb
in
jecxz
mov
inc
sarb
int3
call
xor
sub
xorl
shlb
gs
cli
sub
mov
or
cmc
jp
clc
or
mov
out
cltd
mov
popa
jns
cmp
xchg
gs
in
es
fistps
pop
xchg
mov
ljmp
xor
cmp
pushf
je
mov
dec
mov
lock
dec
mov
push
in
out
pop
xor
or
xlat
add
mov
jae
lcall
les
push
jecxz
dec
outsb
fcmovnbe
mov
cli
les
xor
les
fcomp
dec
and
fcoml
push
and
enter
out
fdivrp
dec
mov
pop
mov
daa
hlt
xchg
or
or
pop
fldt
dec
fmuls
sub
and
mov
repnz
mov
js
lret
movsl
enter
push
jo
or
mov
sub
adc
xchg
test
packssdw
mov
push
arpl
int3
outsb
mov
lds
call
jb
push
xor
scas
sbb
xchg
loope
mov
add
sbb
dec
mov
cli
sub
sub
enter
or
mov
mull
push
out
mov
test
and
dec
aaa
les
adc
xchg
sub
aaa
and
sti
mov
jb
pop
dec
inc
lods
mov
aas
shlb
jp
mov
add
cmp
jle
adc
add
iret
xchg
in
es
add
mov
jp
push
sbb
add
jo
cwtl
int3
inc
dec
test
nop
inc
in
push
popa
iret
or
cmpsb
gs
dec
pop
jg
add
arpl
sbb
pop
pop
mov
jecxz
je
mov
cmc
mov
mov
es
mov
ret
mov
mov
sets
and
add
push
jg
hlt
iret
lods
movsb
call
daa
insl
jo
movsb
cs
mov
cmp
or
xor
inc
aam
pusha
inc
xchg
ret
jns
inc
insl
enter
push
xchg
push
xchg
add
cmp
inc
xor
sbb
fisubl
out
call
or
add
ret
sbb
dec
xchg
mov
ljmp
lea
push
dec
xchg
mov
sub
and
enter
not
and
jnp
data16
ja
leave
fcmovnbe
lret
outsb
loop
or
or
sbb
clc
push
fwait
mov
adc
mov
jb
xor
add
inc
sbb
hlt
mov
sbb
push
je
in
sahf
sbb
jecxz
scas
jp
and
and
in
jg
mov
stos
or
pop
fisubrs
rorb
inc
gs
shll
lods
pop
or
sub
pop
aad
lock
sub
leave
xchg
inc
xor
cmp
and
cmp
fidivrl
and
int3
and
add
shll
push
push
jl
inc
scas
fbld
dec
js
mov
dec
out
add
lds
xor
inc
adcl
imul
mov
inc
sbb
jg
sub
fwait
jae
pop
in
add
adc
push
push
ds
std
loope
sub
cmp
add
addr16
andb
jge
fwait
enter
pushf
pop
popf
mov
test
xor
xchg
out
add
or
ss
mov
mov
pop
inc
fidivrl
cmp
pusha
mov
xchg
cmc
and
lods
mov
jg
dec
mov
mov
clc
add
shlb
repz
pop
call
xor
push
push
stos
filds
stc
rcl
inc
in
adc
xchg
ss
inc
lock
test
scas
iret
pop
nop
loop
push
into
sti
pop
int
bound
test
and
orl
pop
repz
lock
stos
dec
pusha
loope
adc
fwait
ja
mov
imul
pop
int
lods
add
insb
jne
mov
mov
aaa
es
push
icebp
in
xchg
js
repz
xchg
mov
insl
push
cmp
mov
ljmp
xchg
out
jne
lods
movaps
push
rcr
frstor
pop
jge
push
test
mov
sarb
cmp
call
shll
sbb
jle
fwait
xchg
jb
jns
jo
push
jb
adc
sbb
fisttps
or
enter
and
push
pop
cmc
mov
inc
sub
jb
lods
les
mov
hlt
push
in
cmp
xchg
dec
push
test
xor
insl
lcall
test
push
xchg
data16
and
insb
dec
aam
xchg
mov
mov
mov
push
mov
leave
addr16
pushf
test
bound
mov
cmpb
in
jge
add
push
scas
mov
and
inc
jae
jbe
cmpl
jb
sahf
fcmovnb
sub
add
jmp
xor
into
ret
push
ret
push
fstp
push
lds
rcrl
inc
xorl
shlb
cmc
pushf
lea
icebp
mov
es
outsb
js
jb
arpl
cmp
subb
out
cmp
daa
ret
xor
jns
jb
pop
inc
sti
cmovle
push
mov
and
and
test
add
shl
or
leave
mov
icebp
cmp
scas
jge
call
lds
mov
xor
mov
sbb
insl
in
popa
leave
out
rcr
pop
out
xchg
fbstp
and
sbb
mov
add
mov
punpckldq
add
adc
int
out
mov
aaa
out
mov
pop
jne
push
lea
cwtl
sbb
outsb
ds
cltd
push
pop
xor
and
std
repz
stos
lock
cmp
push
push
mov
sbb
cs
or
out
push
stc
fwait
ja
lods
jbe
int
xorl
mov
inc
push
test
cmc
repz
pop
mov
out
inc
arpl
aad
or
in
adc
lds
add
inc
sbb
sub
adc
adc
push
pop
cmc
leave
in
cmp
cltd
sahf
mov
inc
mov
loop
xor
pop
pop
fldcw
push
dec
rol
shlb
insb
xchg
es
push
xor
hlt
xor
xlat
lods
ds
cwtl
mov
or
ljmp
mov
test
push
mov
and
sub
inc
push
nop
loop
lds
dec
push
out
pop
adc
repz
or
mov
xlat
sub
push
jnp
mov
pop
push
sbb
inc
fwait
xchg
mov
stc
stc
lock
imul
nop
and
fdivrl
popf
daa
loopne
repz
int3
ja
scas
inc
mov
cmc
daa
icebp
and
inc
and
dec
sub
pop
dec
clc
add
aam
mov
mov
cltd
gs
cmpsb
ljmp
outsb
icebp
test
lahf
fidivrs
popf
or
cmp
cltd
test
pop
insb
mov
inc
add
test
aas
inc
xchg
or
mov
and
pop
inc
repz
xchg
and
cltd
addr16
cmp
mov
aad
ret
into
rol
push
ds
xlat
cwtl
mov
inc
inc
or
rolb
sbb
cltd
pushf
js
inc
or
out
loope
in
pusha
fstps
push
fiadds
mov
das
imul
fidivs
into
cltd
mov
push
sahf
xchg
mov
data16
insb
mov
mov
cmpsl
nop
xchg
scas
add
add
jge
push
fildl
test
je
add
ret
mov
test
mov
or
or
je
add
mov
dec
inc
inc
inc
pop
out
jno
push
sub
xchg
outsb
xor
mov
sbb
out
sub
dec
aas
loopne
es
mov
aam
ret
movsb
mov
insl
pop
loope
cs
mov
mov
inc
or
imul
cs
mov
push
pop
into
cmpsl
and
js
outsl
xlat
sub
mov
push
dec
sbb
add
jns
add
push
loope
mov
mov
imul
adc
or
orb
or
mov
jns
xlat
ret
in
inc
test
ficomps
in
sbb
mov
cmpsb
jns
cmpb
andl
and
xchg
mov
ljmp
in
sub
jecxz
pop
jl
scas
addr16
iret
popf
mov
mov
sbb
sbb
pop
bound
pop
sarb
lods
jmp
lcall
adc
mov
dec
int
aaa
in
mov
push
dec
xchg
mov
sahf
movsb
jno
mov
call
dec
insl
and
sti
fcmovnb
mov
lahf
xor
les
xchg
in
cmp
into
out
testb
pop
or
mov
imul
out
and
shll
fsubs
stos
sahf
rcrb
mov
scas
pop
inc
test
aas
adcl
sub
ficoml
jae
push
sbb
enter
leave
in
sbb
icebp
stc
nop
cli
test
mov
clc
adc
jns
pop
pop
aaa
adcb
scas
adc
out
jecxz
sbb
loope
push
fcomip
in
test
pushf
push
shrl
lcall
adc
ud2
cmp
arpl
aaa
jo
icebp
lds
pop
or
imul
jecxz
mov
enter
push
inc
sub
xchg
testl
jmp
test
pop
pop
dec
cmpsb
jl
cmp
shl
bsr
jne
cmp
add
pop
xchg
sub
add
repnz
sbb
popf
gs
arpl
mov
and
xchg
loopne
pop
fisubrs
stos
sti
es
rolb
aaa
jl
popf
out
mov
cmc
push
mov
adc
sub
sub
inc
pop
dec
sub
mov
cmp
sbb
xor
mov
mov
push
or
ljmp
mov
sbb
jmp
pop
jle
ds
int
and
pop
int3
sbb
push
popf
and
push
push
push
adc
mov
imul
push
out
mov
pop
mov
lcall
sub
push
sbb
clc
data16
jnp
xlat
stos
movsl
out
fisubrl
hlt
movsl
or
xchg
xor
mov
loopne
adc
data16
incl
fcoms
movsl
fidivs
mov
rclb
xor
not
mov
movsl
arpl
inc
xor
sub
mov
sbb
ljmp
adc
lods
lea
repnz
xlat
out
jns
cmp
mov
lret
inc
cmpsl
and
adc
pop
ret
sub
fwait
scas
fsubs
in
xchg
stos
push
pop
xor
test
push
jl
mov
movsl
inc
inc
xlat
adc
sbb
pop
or
or
or
lds
scas
add
stos
pop
lods
push
into
adc
enter
addr16
ds
sbb
int3
push
xchg
sbb
es
insl
cli
test
sbb
ror
iret
repz
int
and
leave
and
add
push
aad
mov
sbb
in
fadds
pop
push
push
mov
push
leave
sbb
jl
popf
call
push
pop
jnp
hlt
dec
push
test
ret
pusha
push
lds
xor
push
repnz
sub
iret
jmp
xor
sub
repnz
mov
xchg
add
call
pop
mov
cltd
lds
lods
fstps
dec
cmp
sbb
xor
adc
aas
jae
arpl
call
rorb
ret
loop
sbb
sbb
ret
scas
push
inc
cmp
mov
cmp
or
mov
lock
cmp
std
out
rclb
test
lea
mov
push
popf
in
mov
or
lods
or
mov
cmc
mov
xlat
andl
stos
aam
aam
adc
insl
pop
pop
insb
loop
fwait
pop
lea
int
mov
fsubrl
hlt
dec
xorb
cmp
pop
outsl
jecxz
cmp
inc
xchg
icebp
xlat
dec
mov
and
fstpl
ss
imul
jns
mov
mov
sbb
pop
movsb
mov
xor
call
lret
int
test
arpl
xchg
inc
clc
aad
mov
add
data16
jge
mov
sbb
fnsave
es
mov
in
and
setnp
dec
and
in
scas
cmc
inc
cmp
les
ja
adc
add
nop
push
jge
inc
add
xor
in
dec
dec
mov
or
add
aas
push
cmp
rcr
sub
call
cmp
xor
push
clc
inc
sti
or
out
rclb
cltd
mov
mov
mov
leave
sub
xlat
inc
pop
loopne
rcll
inc
mov
int
clc
jmp
iret
ja
xchg
not
iret
rol
or
cmpsb
rorl
mov
outsb
imul
cmp
out
lds
jne
mov
cmp
arpl
xchg
push
push
iret
sbb
bound
sub
xor
push
or
ds
sbb
mov
lcall
add
cmpsl
and
fisttpll
sbb
loope
mov
xor
movsb
jnp
mov
loope
xchg
addr16
lret
dec
mov
pop
push
and
mov
lods
sarl
ret
dec
fildl
cmpb
or
loop
or
lret
lcall
mov
or
xlat
fmull
fisubs
pop
rorl
jecxz
fwait
rclb
inc
push
cmp
xchg
inc
mov
mov
mov
mov
lods
jne
mov
idivl
ds
sbbb
jb
lods
shll
inc
dec
inc
add
xor
mov
xor
icebp
lds
mov
andl
ret
icebp
pop
ljmp
fdiv
mov
in
and
mov
cmpsb
shr
jno
outsl
xchg
xor
mov
lods
popa
adc
jno
xor
mov
sub
ret
jecxz
jne
sbb
mov
xor
das
mov
dec
jne
mov
rorl
add
rcrb
sub
mov
fimull
sarl
ret
jo
iret
rclb
movaps
cltd
xor
push
aaa
sbb
mov
and
mov
push
out
rorb
test
sbb
jmp
mov
popf
sbb
jecxz
mov
mov
es
xchg
stos
push
cmpsl
push
jno
sbb
fidivs
sub
ja
pop
mov
inc
shl
insb
mov
jae
movsl
add
mov
push
pop
mov
ret
lods
push
hlt
repz
lea
mov
mov
stos
mov
mov
popa
imul
rorl
or
repz
and
mov
add
testl
or
adc
rcrl
sar
sbb
ret
inc
bound
jg
lret
xor
std
inc
repnz
loop
insl
and
mov
out
cmp
outsl
gs
xlat
push
and
scas
mov
int
imul
pop
in
jne
sbb
cmp
insl
pop
popa
cltd
lret
stc
add
xchg
push
dec
push
adc
sahf
push
pop
sahf
dec
loopne
pop
sub
adc
out
sahf
jecxz
push
shrl
fistps
mov
mull
jg
mov
cmp
cmp
or
cmp
or
test
stc
mov
mov
flds
rcrb
ja
push
add
jnp
scas
sub
jo
sbbb
fldl
ds
sub
mov
xchg
inc
es
dec
add
out
ja
add
in
jecxz
xchg
cld
rolb
leave
and
inc
out
sub
js
mov
int
mov
sbb
lods
mov
inc
lds
inc
lods
xchg
dec
xor
sahf
lcall
xor
das
js
sub
mov
pop
int
fwait
std
jns
xchg
outsl
insb
test
sbb
rclb
stos
movsb
jb,pn
xor
dec
cmc
icebp
imul
fiaddl
or
xor
xlat
fwait
imul
mov
adc
test
mov
cli
xor
mov
in
jle
ret
inc
or
shl
popf
lret
mov
jecxz
scas
push
popa
pop
mov
dec
pop
lcall
mov
lret
push
pop
inc
ds
sbb
pop
das
sbb
sbb
gs
and
lds
add
push
movsw
jnp
imull
mov
cmpsl
fists
popf
jmp
dec
lds
sub
dec
es
xor
jl
mov
pop
push
ret
mov
divl
lret
cmpsb
ror
or
push
xchg
xchg
sbb
lds
and
fldt
inc
add
nopl
push
popf
add
nop
mov
inc
mov
outsb
push
sbb
add
jl
in
sbb
iret
sub
jg
inc
scas
lret
mov
enter
notl
out
stos
lcall
in
jne
jge
in
cmp
xor
enter
repnz
dec
scas
mov
inc
lds
and
rolb
sbb
push
stos
leave
aaa
into
cwtl
pop
dec
xchg
arpl
popf
enter
adc
inc
cmp
mov
pop
test
xor
push
cmp
hlt
inc
pop
aam
xchg
nop
mov
in
lods
test
leave
test
xchg
pop
jno
jno
mov
push
arpl
xchg
sub
inc
mov
sub
arpl
fcomi
imul
mov
ss
loop
mov
movsb
shlb
cmp
in
test
or
adc
and
and
pop
lcall
aam
into
js
test
jge
mov
idiv
cli
cld
dec
and
cmc
mov
lods
xchg
adc
icebp
add
std
loopne
or
sbb
shll
hlt
ret
and
push
inc
cmpsb
inc
pop
mov
adc
in
js
pop
ficompl
data16
push
push
cltd
xlat
xor
dec
lds
mov
push
repnz
jo
pop
pop
push
sbb
mov
or
bound
xchg
lods
fcomps
jb
pop
jae
outsl
push
ljmp
stc
push
dec
push
aaa
or
sub
fisubrl
mov
push
push
push
and
cmp
daa
mov
cmpsb
add
scas
cmpsb
sbb
ret
xlat
and
int3
and
enter
cmp
and
pop
dec
cld
mov
mov
test
stc
fnsave
cmc
xor
ror
sarw
push
aaa
xadd
dec
add
mov
repnz
iret
jecxz
lock
lcall
fdivs
mov
idivl
fmuls
imul
fmull
ljmp
outsb
mov
xor
mov
dec
popf
mov
das
les
leave
cmp
fs
shrl
in
in
adc
mov
xor
clc
int3
inc
in
xchg
adc
call
xor
xchg
fs
outsb
cltd
add
leave
ds
mov
sti
aaa
roll
out
sti
cmp
mov
jne
fcoms
jmp
pop
or
aas
ficoml
insb
or
loopne
add
int3
xor
popf
mov
or
push
shlb
jmp
xlat
push
push
cld
popa
cmp
pop
mov
xchg
push
inc
test
dec
and
cld
ljmp
je
inc
ljmp
mov
ljmp
add
sti
rorl
icebp
cmp
outsl
int
cli
mov
xor
cltd
loop
lret
pop
daa
insb
pushf
or
fists
shr
cmp
xchg
filds
es
xchg
cmp
jecxz
cli
push
push
jae
jbe
cwtl
mov
cmpsb
xchg
adc
sub
add
popf
push
out
movb
mov
mov
testb
inc
leave
call
out
cmpsl
daa
rcr
hlt
sbb
repz
jns
push
ret
ss
or
bound
icebp
sarl
mov
in
sub
or
in
push
xchg
mov
test
jno
mov
sub
dec
ret
fwait
push
test
aam
arpl
fdivrl
lods
mov
pop
xchg
stos
popf
fsubrl
addl
xchg
xchg
test
lea
inc
dec
push
or
stos
jg
int3
mov
xchg
sbb
aaa
test
push
sub
add
and
outsl
or
lahf
cmp
and
flds
repz
into
mov
rcrb
mov
push
dec
add
push
adc
sub
mov
and
adc
faddl
mov
popa
js
rcrb
fists
shll
cmp
mov
push
add
ret
dec
or
inc
mov
inc
sbb
cmpsb
jo
cld
loop
in
pop
stc
inc
ja
dec
pop
ljmp
push
cmpsb
out
jp
repnz
pop
fcomip
inc
jl
dec
call
lds
rol
pop
scas
jl,pt
inc
lret
lcall
mov
lret
sub
orb
mov
pop
jge
and
cmc
push
pop
mov
test
aas
stos
sub
pop
mov
or
lcall
add
or
loope
shrb
clc
add
mov
xchg
roll
push
push
nop
jg
sbb
push
xor
adc
cwtl
xchg
out
mov
pop
cwtl
stos
jmp
mov
push
jne
xor
xchg
pop
sahf
xor
inc
adc
cmp
xchg
in
int3
movsl
in
add
pusha
xor
movsb
sbb
pop
mov
sbb
xchg
and
cmp
in
clc
rclb
ret
out
sahf
xor
adc
or
add
mov
xor
pop
inc
or
and
adc
sbb
stc
shll
dec
or
mov
mov
loope
imul
out
scas
fldl
int3
or
stos
std
mul
fsubs
mov
mov
lea
pop
fs
shrl
add
enter
mov
mov
sub
or
stc
mov
cmpsb
inc
pop
jae
jg
sub
push
mov
stos
and
mov
cmp
into
xor
xorl
sub
in
lock
xor
hlt
inc
jno
inc
dec
sbb
cmp
in
std
loopne
stc
add
out
scas
das
int3
xchg
icebp
subl
mov
add
insl
les
pop
and
stc
jecxz
mov
test
ds
xchg
cmpsb
mov
dec
lahf
jmp
jnp
ja
add
imul
mov
push
sbb
sbb
int
pusha
es
sbb
dec
repnz
or
in
mov
in
adc
push
inc
mov
shrl
sub
push
faddl
pop
dec
jnp
push
rclb
lock
movsb
cmp
andb
movsb
lock
loop
popf
push
sub
insl
pop
pop
pop
jmp
jl
fidivrs
push
vprotd
xchg
xor
dec
loopne
js
movsl
mov
out
xchg
sbb
pop
shll
sbb
out
daa
sti
xchg
mov
sbb
sub
pop
sub
int
mov
push
in
xchg
add
or
sub
rcl
mov
inc
and
in
push
adcb
jbe
shll
stos
insl
xlat
or
into
pop
data16
lods
pusha
rolb
inc
sahf
xor
clc
js
pushf
lahf
pushf
neg
and
mov
mov
cmp
push
dec
push
repz
gs
mov
bound
xor
add
addl
movups
lds
sub
push
loopne
pop
and
mov
add
or
ljmp
stos
cmpsb
imul
xor
mov
dec
ficoml
std
xchg
mul
cltd
jbe
xor
lcall
sbbb
dec
jp
movsb
jmp
test
inc
fcmovnb
inc
jecxz
test
push
in
mov
and
or
mov
xor
cwtl
in
cmp
mov
cltd
lods
sbb
jns
sub
and
jbe
cmpsl
out
bswap
cmc
cmp
xor
faddl
repz
dec
test
cs
sti
push
inc
in
sub
jp
jne
or
decb
dec
test
cmp
mov
add
lods
push
call
add
mov
inc
inc
cmp
and
sbb
mov
cltd
pop
mov
notl
stos
jle
inc
mov
jne
sarb
pop
sti
jp
mov
andl
lods
xor
adc
stos
adc
inc
adcl
movsl
xor
arpl
lahf
mov
fcoms
pop
test
enter
in
arpl
push
nop
lcall
xchg
mov
pop
stc
cli
andb
and
loopne
cmp
int
mov
stos
mov
jnp
add
je
cmp
cltd
gs
movsl
jbe
dec
jge
mov
iret
aas
xor
jae
xchg
or
fs
int3
ss
in
scas
pop
aad
jle
mov
mov
jo
scas
insl
andb
jp
inc
sub
and
xor
cmc
and
fiadds
xchg
sbbb
mov
test
pop
adc
mov
cmpsb
mov
in
scas
push
negb
sbb
sbb
fnstsw
mov
mov
mov
aas
push
sarl
jge
stos
movsb
mov
xor
movsb
jge
and
pop
arpl
dec
insl
jae
or
out
mov
jmp
push
and
mov
xchg
sbb
lds
leave
addl
sub
hlt
es
mov
into
sarl
inc
fs
lock
int
lock
jmp
testb
and
adc
inc
pop
push
xchg
dec
pop
clc
mov
xchg
mov
jle
cmp
out
dec
sub
jb
dec
adc
or
ret
cmpsl
inc
xchg
addr16
pop
ficompl
push
cld
mov
fwait
cmp
fistpl
and
int
dec
sub
iret
dec
ss
cmc
addr16
xchg
mov
call
dec
neg
xchg
fistpl
cs
cmpsb
xor
pusha
xchg
movb
pop
sub
into
movl
and
mov
std
push
mov
ja
fcomip
faddp
mov
adc
add
or
push
sti
leave
cmpsl
data16
sbb
js
outsb
not
lock
ret
mov
mov
lock
pop
repz
repnz
inc
movsl
pushf
add
push
jb
push
les
push
mov
lahf
pushw
or
mov
push
mov
adcb
push
mov
test
mov
fcoml
push
sti
or
mov
enter
sahf
and
ret
mov
mov
lods
mov
push
jl
ja
test
mov
and
inc
add
push
insb
shrb
inc
stc
pop
repnz
pop
das
sti
call
scas
push
lret
jp
decl
fwait
mov
jmp
ss
mov
mov
shll
enter
mov
test
loopne
mov
nop
mov
cmp
imul
pop
aas
add
xor
dec
inc
stc
lcall
call
cli
cmp
and
imul
shrb
inc
sub
imul
movsb
in
mov
fiaddl
and
pop
loope
mov
ja
or
imul
pop
cmpsb
adc
sub
jl,pt
or
jl
lret
sub
aam
adc
dec
out
aaa
push
stos
call
mov
add
mov
repz
sbbl
outsl
std
push
xor
aaa
xchg
pop
dec
rcll
movsb
sub
enter
mov
popa
cld
popw
xchg
clc
mov
push
inc
sub
mov
sbb
pop
das
xchg
outsl
xor
dec
adcb
rcll
xchg
push
add
mov
incb
dec
shl
push
cwtl
mov
ss
or
adc
push
outsb
pop
xchg
in
cmp
mov
pop
pop
inc
out
pop
repnz
sub
ror
ja
xor
js
dec
movsb
nop
movsl
movsl
mov
addr16
insl
mov
stos
repz
push
stos
push
push
nop
addr16
push
push
in
xchg
bound
outsb
add
hlt
or
dec
jns
call
aaa
outsl
iret
jbe
xlat
rol
mov
lock
imul
scas
int
xchg
lcall
sti
push
adc
daa
and
mov
test
pop
jne
lods
out
or
out
stos
jmp
cmp
outsl
mov
sbb
mov
mov
push
inc
sbb
inc
adc
sbb
push
or
movsb
sbbb
and
movsl
roll
out
movsl
scas
dec
sub
cmp
test
lea
and
das
ror
jns
jns
in
inc
outsb
mov
inc
pop
pop
cmp
jecxz
sbbl
mov
mov
dec
inc
test
lret
jno
inc
and
sbb
or
xchg
xchg
xchg
mov
mull
js
lods
das
dec
dec
mov
inc
pop
test
loope
orb
sub
nop
jo
mov
mov
mov
push
addb
jnp
pop
pop
and
dec
mov
jae
mov
and
mov
repnz
shr
movsb
insl
pop
lods
popf
sti
addr16
adc
pop
les
cli
dec
gs
push
mov
add
add
dec
mov
jle
dec
cli
stos
inc
and
xor
mulb
popf
push
mov
data16
je
adc
push
push
lock
js
push
sub
or
or
hlt
loopne
push
les
inc
mov
int3
mov
xchg
enter
jmp
jmp
nop
inc
fidivrs
repz
dec
fidivrl
or
push
inc
in
inc
or
mov
int
les
out
repnz
sub
mov
jbe
xlat
daa
rcr
cmpsl
mov
repnz
adcl
and
repnz
loop
mov
push
xchg
mov
sbb
jb
into
loopne
xchg
fcmovu
aam
cmp
push
mov
sbb
sub
add
sub
aad
addr16
mov
inc
push
cltd
xor
xor
lret
not
imul
enter
push
imul
lcall
pop
out
lods
sbb
cmp
in
addr16
pusha
out
xchg
xor
js
jp
shlb
push
mov
sub
test
rcrl
movsb
jno
scas
sbb
fnstenv
dec
test
scas
fists
dec
push
mov
push
add
cmp
mov
cmp
nop
imul
ret
push
sbb
mov
into
mov
inc
or
and
and
mov
rorb
fdivrs
pushf
sbb
mov
jae
sub
stos
jae
mov
shrb
leave
cwtl
mov
lods
repz
aaa
rolb
push
leave
xchg
fs
jmp
fdivl
repz
std
pop
enter
repz
js
in
cmpsl
ss
lcall
xor
pop
test
sub
xchg
rcll
mov
movsl
test
test
sub
cltd
and
sub
ret
fstl
and
fmul
add
scas
ss
and
jae
addr16
mov
insl
out
push
mov
cmp
xchg
sub
inc
pop
jge
cmpsl
pusha
es
mov
push
jb
inc
cmpsl
iret
outsl
xor
jmp
cmpl
mov
jg
lods
inc
movsl
outsl
mov
orl
cmp
mov
inc
imul
mov
mov
adc
cmp
sub
jbe
dec
mov
pop
lret
dec
mov
je
enter
out
clc
scas
lods
mov
das
lods
inc
xchg
inc
filds
outsb
mov
and
sub
dec
es
sub
dec
pop
pop
lea
lret
out
xchg
test
push
sub
cmp
idiv
adc
scas
adc
lock
jbe
shrl
data16
rorl
sub
clc
ds
aam
fucomp
lods
dec
fcomi
fidivl
cmp
cld
ds
mov
lcall
outsl
inc
fisubl
sbb
pop
dec
push
sbb
mov
movsb
testb
xor
mov
cs
outsl
in
mov
jns
dec
add
xor
adc
xchg
jo
and
int
out
loopne
lret
fnsave
mov
je
cli
and
mov
sub
test
lds
jo
subl
push
xor
or
xchg
icebp
loop
mov
sub
bound
mov
pusha
mov
and
fistpll
rolb
mov
dec
cli
xor
mov
lods
pushw
or
and
or
ficomps
shr
or
orb
repnz
das
mov
aas
rclb
clc
enter
fimuls
nop
dec
add
inc
pop
and
addb
cs
jg
cmp
lret
imul
mov
pop
pop
inc
mov
inc
and
aas
pop
popa
ret
and
sub
test
rcr
aad
push
xchg
shr
out
xlat
enterw
sub
sub
add
out
sub
call
neg
inc
in
popf
rclb
mov
cli
sub
sbb
lea
or
pop
sub
movsl
cmp
or
fs
sub
mov
in
movsl
sub
imul
cmpsb
mov
cmp
popa
pop
mov
stos
inc
shl
je
loopne
sbb
mov
dec
sub
xchg
push
sbb
loopne
ljmp
jns
mov
cmp
pop
lcall
or
sarb
and
pusha
jmp
into
es
int
pusha
pop
lea
loope
or
clc
sub
push
cwtl
mov
lea
pop
rorb
ds
hlt
mov
jno
loope
sbb
mov
or
fistps
sbb
push
rclb
out
mov
rcrb
shll
ja
pop
and
cmpsl
mov
shrb
cmpsl
cmp
test
inc
andl
xchg
out
inc
jge
cltd
rcrl
or
and
lahf
adc
scas
xchg
es
add
mov
pushf
cmp
cmp
mov
pop
xchg
lcall
jae
push
sbb
mov
in
push
adc
rorl
dec
xor
cmp
or
data16
sub
fldcw
pop
mov
cmp
push
or
outsl
rclb
push
xchg
add
scas
jp
xor
push
dec
mov
add
ds
jle
test
xchg
movsb
add
sti
aas
mov
push
xor
jo
xchg
pop
inc
xchg
mov
pop
dec
daa
jecxz
mov
testl
lcall
fnstenv
fwait
lds
and
mov
clc
lcall
gs
xor
addb
inc
sub
enter
jae
aaa
inc
or
ficomps
sahf
jne
inc
les
loope
mov
xchg
cmp
xor
pop
int3
inc
xchg
xor
mov
icebp
mov
mov
mov
jmp
jno,pt
xor
jo
rcl
xchg
lcall
mov
in
pop
les
jmp
in
dec
mov
in
or
cwtl
push
ret
add
jmp
mov
mov
iret
jl
xchg
arpl
fwait
scas
pop
das
sub
mov
push
stos
cmp
idivl
subl
cwtl
cmp
les
sbb
mov
mov
xor
jl
jns
mov
push
add
int3
fdivrp
inc
cli
imull
push
sbb
cmp
ret
testl
mov
lods
cmp
lea
mov
lret
js
fiaddl
cld
jb
das
push
mov
popa
adc
lods
jg
popf
out
mov
push
test
sete
popf
sbb
sbb
mov
outsb
gs
add
nop
inc
push
test
pop
rclb
cmpsl
mov
ficomps
mov
lret
adc
xchg
and
or
adc
xchg
mov
addr16
cmp
xor
fwait
pushf
xor
test
xchg
jge
fxch
arpl
flds
shl
roll
stc
jae
popa
stc
rcrl
or
jmp
adc
push
and
mov
pusha
lock
jbe
mov
jb
mov
mov
insl
fisubrs
stc
sti
dec
bound
push
sbb
dec
cmp
out
cmpsl
icebp
xor
add
adc
ljmp
push
xlat
out
pop
pop
jg
out
sub
cmp
stos
inc
mov
add
ret
fildll
sti
mov
dec
push
hlt
sahf
push
insb
insl
fildl
out
xchg
addr16
inc
xchg
xchg
mov
jbe
push
shrl
jns
aad
out
sbbl
sub
cmp
shll
imul
adc
mov
jle
mov
jae
pop
les
imul
popf
adc
dec
jo
jl
push
push
ret
cwtl
std
xchg
addr16
adc
daa
stc
dec
pop
cwtl
fiadds
sbb
dec
test
mov
sbb
lock
ja
sbbb
cwtl
push
popa
rcr
cwtl
shll
lahf
repnz
stos
dec
mov
adc
adc
rcrl
xor
gs
add
loop
pusha
sti
mov
pop
mov
jle
mov
iret
sub
pop
mov
aam
cmc
popa
add
cmp
add
cli
pop
repz
mov
pop
cmc
push
jo
outsb
or
scas
sti
lcall
sbb
push
sub
ficomps
test
cmp
push
out
add
daa
adc
jle
xor
jo
cwtl
push
rclb
mov
mov
mov
mov
mov
jmp
or
std
outsb
mov
and
dec
fidivs
pslld
cmp
and
jp
repz
pop
cmc
cmp
fmulp
xchg
popf
push
aaa
cmpsb
out
fdivrp
addl
and
fs
cwtl
mov
push
arpl
xchg
mov
test
and
and
fwait
adc
ret
push
xchg
cltd
sub
es
hlt
jp
incb
xor
jae
mov
std
jmp
sub
fninit
aam
adc
aaa
pop
arpl
imul
popf
sub
xchg
scas
fisttpll
inc
and
push
xchg
pop
mov
mov
jg
subb
adc
or
sub
adc
push
inc
sbb
insb
movb
sub
cltd
mov
xchg
ljmp
jns
mov
pop
rcrl
clc
addr16
mov
pop
stos
or
dec
add
sar
icebp
nop
dec
cmpsb
out
bswap
pop
jg
dec
je
or
add
push
ja
inc
pop
lahf
in
int
add
fnstcw
sub
cmp
add
out
jl
push
jle
rolb
mov
in
xchg
cmc
icebp
push
sti
lahf
xor
push
inc
test
pop
mov
cmp
movsl
jns
test
jge
lret
cmc
nop
sub
popf
jecxz
cwtl
dec
fs
bound
lcall
jl
jb,pt
jg
lods
popa
sub
jmp
fs
int
dec
mov
xchg
clc
repnz
xor
sbb
mov
testl
test
inc
loopne
fwait
jae
mov
das
nop
push
call
sub
div
inc
loope
or
sbb
ljmp
jl
inc
mov
mov
cwtl
shrl
pop
cmp
jmp
mov
dec
or
fidivrl
sub
push
inc
xor
shlb
mov
fs
and
or
or
imul
sub
or
ljmp
jb
pusha
mov
int3
push
iret
int3
jnp
cmp
sahf
out
ljmp
fisubrl
sub
lret
sub
idivb
adc
add
pop
and
add
hlt
xor
sub
dec
mov
scas
fldt
mov
push
repnz
push
insb
call
lcall
xor
inc
fstpt
dec
outsl
sbb
pop
lods
mul
roll
out
sub
or
in
lods
idiv
cmp
jae
dec
cmp
ljmp
or
mov
or
xor
and
stos
inc
dec
insl
inc
test
push
pop
pop
sbb
xchg
arpl
mov
scas
pop
jne
mov
sbb
mov
sbb
jl
repnz
pop
and
adc
std
push
jb
xor
fdivrl
jb
fstpl
inc
je
or
sbbl
js
loop
outsl
adc
xchg
mov
std
dec
inc
mov
inc
sub
pop
add
into
stc
sbb
leave
add
in
testl
xor
or
bound
out
mov
popf
mov
jl
js
xchg
mov
into
adc
std
adc
sbb
xchg
in
or
jl
movsl
push
inc
scas
mov
mov
in
js
iret
xchg
and
cmp
fdivrs
mov
mov
and
jae
push
mov
imul
das
push
xor
dec
sub
pop
mov
aam
nop
inc
sbb
insl
insb
mov
sub
jmp
out
out
jno
mov
es
bound
in
aaa
pusha
mov
cmp
int3
mov
dec
sbb
sbb
and
push
popf
shlb
jp
movsl
cs
test
add
roll
add
arpl
test
adc
dec
inc
adc
in
jno
lcall
mov
pop
push
push
and
cmp
mov
dec
dec
mov
push
dec
data16
dec
test
xor
dec
cs
mov
add
mov
lret
sbb
jae
stc
int
inc
shll
cmovs
inc
bound
test
or
lcall
add
roll
aam
jb
loope
aas
popa
pop
xchg
add
sti
fcmovne
loopne
cmp
dec
andl
jge
xor
jge
sbb
and
push
dec
mov
rorl
push
test
sbb
ds
or
int3
orb
mov
xor
lcall
mov
or
pop
xchg
mov
mov
jb
cltd
pop
and
pop
outsb
pop
sub
pop
outsl
mov
mov
jbe
les
xchg
cmp
xchg
jp
add
pop
cmpsb
lahf
enter
mulb
push
shll
aad
jne
pusha
lea
inc
jge
sbb
push
dec
fnstsw
insl
dec
std
fidivs
mov
lret
out
add
into
shl
lods
lea
sub
cmp
mov
movsb
jge
mov
mov
cmpsb
inc
loopne
lret
bound
lahf
add
xor
push
fists
shrb
pop
cmpsl
push
int
fdivp
jno
mov
cs
fs
dec
jge
mov
dec
fidivrs
xchg
inc
inc
jge
mov
lods
xchg
sub
arpl
and
es
xchg
mov
mov
mov
mov
std
dec
lret
int3
outsb
adc
adc
in
pusha
ret
movsb
insl
int3
push
mov
gs
data16
add
xchg
imul
flds
std
pusha
adc
stos
push
aas
mov
clc
scas
insb
ss
mov
outsl
sahf
test
dec
cmp
mov
push
lods
enter
leave
adc
or
add
pop
add
sbb
int3
arpl
shrl
icebp
daa
imul
lds
sbb
loopne
push
dec
or
jp
imul
lds
adc
pushf
cltd
add
rorb
hlt
pop
std
insl
mov
mov
dec
add
or
rcrb
aas
daa
lock
rolb
cs
test
mov
and
sbb
rorb
mov
ja
dec
repnz
push
mov
xchg
or
cli
jo
xchg
or
test
jae
sbb
testl
add
test
push
cld
pop
mov
pushl
into
lods
jnp
or
lahf
dec
out
pop
sbb
mov
mov
lods
les
repz
lods
and
loope
jbe
aam
in
std
dec
lods
in
pop
and
jecxz
test
xchg
in
xor
out
and
icebp
xchg
pop
pop
das
insb
pusha
or
sbb
pop
inc
jb
mov
and
lgs
in
dec
cmp
jge
insl
fistl
imul
aaa
dec
pop
jg
pop
lahf
hlt
mov
push
sbb
xchg
gs
insb
scas
jp
adc
decb
loope
cmpsl
js
and
hlt
jns
xchg
cmc
arpl
mov
inc
sub
fisubl
repnz
mov
mov
rcll
ljmp
jo
push
loope
inc
xlat
jns
ja
iret
shlb
leave
and
outsl
or
jnp
bound
in
cld
cmp
lret
ficoms
push
mov
mov
in
ss
cmp
sbb
cld
cli
mov
ds
enter
mov
inc
scas
and
pop
call
daa
mov
adc
mov
mov
xor
enter
cmpsl
daa
inc
insl
leave
es
cmpsl
adc
jge
es
stc
iret
add
jle
xchg
enter
push
add
mov
mov
dec
mov
mov
xlat
mov
lea
insl
in
jle
push
pop
rorb
mov
mov
popf
or
sub
push
jae
mov
arpl
mov
cmp
lcall
adc
jecxz
cmp
cld
dec
jge
pop
in
movsb
push
leave
rorl
and
jp
fs
in
int3
ds
cmp
call
inc
int
mov
sbb
mov
test
inc
jge
jge
push
push
adc
fildl
sbb
fstpt
xor
fs
mov
and
xchg
lret
add
mov
mov
ds
sub
cli
cwtd
xor
cmp
pop
movsb
aas
pop
les
scas
xchg
push
mov
mov
in
movsl
vmwrite
pop
cmpsb
jl
ficomps
or
pusha
adc
fiaddl
or
xchg
insb
mov
dec
mov
cltd
stc
stc
pop
addr16
push
inc
fidivl
sub
and
push
testb
out
stos
push
ljmp
cmp
cmpsl
lcallw
mov
xor
push
loop
push
xor
mov
pop
and
cmp
data16
push
inc
mov
es
subb
enter
and
adc
sub
push
or
inc
jge
or
fistps
es
cld
inc
jb
push
hlt
mov
xorb
xchg
je
sbb
in
lcall
mov
popf
sbb
popf
mov
jmp
mov
adc
cmp
cmp
cli
divb
cmp
mov
popa
mov
mov
icebp
cli
ds
cmp
mov
jge
pop
int3
les
lcall
and
sbbb
scas
sbb
imul
inc
arpl
fcmovnbe
jae
popf
outsb
xchg
jnp
cmpsl
mov
mov
lahf
sbb
imul
inc
add
mov
std
ficompl
mov
dec
fistpll
out
mov
add
aam
add
jl
xchg
lds
pushf
push
adc
dec
out
xlat
cmp
in
stos
xchg
xchg
adcb
addr16
int
or
push
mov
or
inc
xor
mov
or
in
lods
push
xor
lock
out
data16
mov
pop
inc
dec
out
mov
mov
xchg
daa
sub
in
mov
add
mov
jae
mov
cmpsl
loopnew
imul
fsubrl
jle
mov
hlt
lcall
iret
xchg
jmp
shlw
popf
sahf
jp
in
loop
das
dec
insb
sub
cmpsb
lret
icebp
in
sahf
xlat
sub
in
ror
dec
cs
dec
das
popf
sbb
mov
xchg
mov
movsl
adc
arpl
dec
xchg
loope
movsb
fisubs
fsubl
pop
push
mov
popf
pop
inc
jbe
cmpsb
lcall
jmp
jecxz
scas
and
pop
mov
sahf
push
lock
iret
mov
loopne
test
into
loopne
sti
orb
ror
pop
lea
mov
popf
push
push
jae
cmp
inc
push
jmp
jl
arpl
in
mov
fsubl
jl
lock
dec
cs
mov
in
pushf
xlat
lret
jmp
test
xlat
sub
roll
and
dec
mov
add
test
add
clc
cmp
xchg
data16
mov
adc
arpl
jecxz
jmp
dec
cmp
or
aam
or
dec
ja
cmp
arpl
je
sub
add
sbb
or
xor
out
daa
pop
jae
cmp
lods
and
or
xor
or
or
pop
sbbl
xlat
cltd
cmc
sti
sub
xor
cmpsb
adc
cwtl
cmp
arpl
dec
cmp
jae
fcomi
dec
jp
stos
imul
movsl
xor
or
std
or
leave
shl
pop
popa
xchg
pop
stc
fstp
add
sub
push
lock
push
fcomps
mov
int
or
rcll
fsubrl
xchg
lock
push
push
mov
pop
std
mov
sbb
inc
mov
jno
fcomi
rorl
fldenv
lds
or
lods
cmp
jno
nop
add
into
arpl
push
movsb
call
out
popf
ljmp
mov
cmp
push
mov
push
sub
push
int
pusha
out
aaa
sbb
lret
in
lea
out
test
cmp
js
cmp
pop
ss
jne
ret
sub
sbb
lods
loopne
cmpsl
sub
push
ror
cmp
push
std
jne
pop
mov
mov
inc
fsts
fistl
test
ret
mov
adc
imul
je
shrb
mov
push
jns
adc
dec
phaddsw
or
cs
mov
jle
adc
mov
push
stos
sbb
pop
sbbb
or
mov
data16
mov
mov
enter
or
js
add
dec
push
popf
mov
popl
adc
lret
xor
inc
push
add
movsl
imul
jg
xchg
pop
jb
and
arpl
sub
movsb
mov
call
dec
les
cmp
mov
int3
pop
mov
xchg
int
jge
cmc
xchg
add
dec
insb
sub
xor
cmp
jne
and
and
adc
cmp
dec
jo
icebp
and
push
shrb
inc
int
xchg
movsb
mov
dec
sbb
mov
fidivrl
aaa
ret
dec
mov
ror
jbe
movsl
lret
xor
mov
jo
je
push
into
lahf
les
inc
fwait
mov
jl
stos
dec
xchg
mov
cmpsb
or
stos
dec
push
sbb
popa
xchg
add
add
xchg
xchg
and
mov
and
out
mov
push
out
push
repnz
cmp
push
push
es
bound
and
bound
sbb
stos
xchg
jecxz
stos
fmull
mov
fldenv
mov
xlat
scas
dec
cmp
aam
xor
dec
push
scas
pop
ja
push
or
jp
mov
mov
push
mov
cmovs
sub
dec
out
fcomps
rorl
filds
mov
pop
or
cmc
stos
xor
mov
clc
sti
adc
lret
mov
pop
sbb
mov
dec
negl
inc
push
xchg
sub
dec
mov
jl
test
sbb
fwait
lock
ja
mov
stos
rclb
add
push
movsl
rorb
lods
cmp
jmp
arpl
jmpw
cmp
stos
push
mov
aaa
lret
xchg
in
out
inc
xchg
stc
clc
push
mov
sbb
cwtl
icebp
pop
and
push
push
lret
pop
test
cmpsb
popf
pop
ss
sbb
fwait
sub
jg
pop
xchg
and
lcall
jl
sbb
cmp
cmp
mov
je
mov
data16
test
int3
jecxz
mov
aaa
fdivrl
fdivl
inc
cmp
add
mov
repnz
push
leave
stc
lds
mov
jae
inc
stos
ret
jae
cmpsl
sub
inc
enter
imul
push
sbb
add
xchg
and
jo
into
push
jmp
mov
adc
pop
mov
inc
sbb
aam
clc
jo
imul
mov
aad
jge
mov
and
push
push
adc
sub
jge
lea
cmp
scas
sarb
dec
mov
jae
mov
jmp
insb
out
pop
ret
jbe
pop
sub
add
push
xor
arpl
fildl
jb
ret
mov
jmp
popf
xor
aaa
or
adc
cld
bound
xchg
nop
stos
scas
mov
mov
out
and
scas
adc
or
shr
js
jbe
cli
fcomp
lea
nop
or
dec
sub
pop
imul
stos
push
pop
gs
jge
mov
sub
jg
lds
inc
cmpl
cmp
and
cmp
and
sbb
fld
sbb
aam
sub
fisubl
add
imul
sbb
sub
mov
mov
imul
dec
adc
mov
sub
leave
imulb
and
jno
addr16
mov
andb
xor
fwait
mov
jecxz
add
insl
mov
fists
je
clc
or
xor
add
xchg
xor
adc
mov
inc
or
push
ret
xor
and
adc
lock
lods
jmp
add
pop
mov
mov
add
es
subl
add
dec
fstpl
jb
pop
push
cwtl
lahf
js
jp
gs
fldl
add
ds
lods
sub
fs
clc
or
sarb
mov
sub
in
aad
lret
push
push
or
lahf
imul
imul
movsb
sub
jne
jp
pop
and
xor
or
jp
sbb
and
enter
imul
test
add
dec
cmc
adc
add
rcl
xor
popa
sub
pop
das
add
dec
pop
lock
es
sbb
shll
imul
ja
lods
mov
test
sbb
push
adc
mov
and
dec
imul
dec
jb
cmp
or
arpl
jge
xchg
stos
call
and
stos
in
adc
add
ret
ss
lret
jl
fs
and
inc
movb
dec
jp
test
dec
cmp
add
lahf
cltd
movsb
mov
cmp
jl
cmc
lods
lods
movsb
mov
je
mov
outsl
mov
rcr
aaa
iret
cmp
out
mov
mov
stos
sub
int
lea
mov
mov
stc
shld
in
shrl
icebp
push
jle
mov
jp
jae
fdivs
sub
aad
mov
roll
adc
scas
xor
mov
ljmp
daa
add
jbe
mov
dec
fbstp
bound
push
outsl
fdiv
shll
and
jns
js
cmp
divb
xor
push
adc
cli
cld
sub
jno
xor
lock
xor
add
xor
icebp
int3
addl
inc
cmp
imul
fisttpll
loopne
pop
fstpl
cmpsb
xor
xor
aas
add
loop
lock
xor
ljmp
dec
pop
lds
int3
aaa
xor
push
pop
cmp
cmp
mov
jecxz
sub
xchg
sub
pop
xchg
out
sub
cld
mov
push
shrl
divb
hlt
sub
add
mov
xchg
dec
in
inc
rorl
stc
lods
pushf
out
cmp
adc
movsl
pop
adc
test
out
jg
mov
sarl
xchg
xlat
pop
fisubrl
lods
mov
enter
aad
lcall
and
inc
adc
ds
jbe
jb
cmpb
hlt
loope
lret
aaa
rcr
mov
jbe
xlat
or
dec
mov
pop
push
push
lods
in
jne
jmp
dec
mov
lods
rorl
adc
call
out
cwtl
les
leave
dec
add
sub
jnp
or
fdivs
std
and
mov
pop
shl
addr16
shlb
pop
jge
xor
add
hlt
ljmp
pushf
add
push
xchg
sarl
in
jecxz
push
mov
aad
adc
add
pushf
jle
dec
ss
mov
cmp
jae
in
add
sbb
leave
pop
dec
push
jno
xchg
orb
fdiv
mov
cmp
or
inc
lret
xor
pop
hlt
lods
add
adc
ljmp
fldl
ljmp
inc
orl
push
mov
movl
outsb
and
movsb
push
orl
pop
push
mov
pop
and
lea
xchg
mov
jne
xlat
repnz
jge
add
and
dec
stos
scas
divb
insl
push
or
scas
shrb
or
xchg
popf
inc
mov
push
sub
loop
push
pop
jle
sub
fs
jge
pop
cmp
mov
stc
stos
hlt
push
data16
mov
and
jns
ss
aas
xor
loop
movsb
mov
jnp
cwtl
or
pop
mov
ja
push
mov
loope
fdivrl
push
or
cli
popa
pushf
xor
bound
jne
xchg
and
cmp
pop
mov
inc
cmp
sbb
lods
pop
pop
add
mov
aas
pop
or
jns
dec
push
enter
and
fadd
adc
call
xor
mov
jo
scas
scas
xchg
sbb
mov
mov
mov
ljmp
adc
inc
push
pop
in
in
jnp
mov
sbb
sub
test
mov
mull
test
not
pop
pop
pushf
jle
xchg
add
loope
xchg
sub
xlat
ds
mov
mov
iret
mov
fcomps
xorl
jae
mov
lds
mov
imul
adc
xor
mov
mov
cli
fwait
inc
and
mov
cmpl
cmp
pusha
add
outsb
xor
shll
add
inc
mulb
repz
xor
int3
adc
into
mov
pop
je
xchg
pop
sub
outsl
inc
cli
push
lea
dec
popf
mov
inc
jle
inc
bound
sub
ret
adc
xor
les
add
push
xor
jg
shrb
std
mov
mov
std
imul
xchg
lock
sbb
dec
xor
arpl
cli
push
gs
fisubs
push
mov
cld
dec
vpmulhw
jns
cmp
mov
imul
cmp
mov
or
in
loope
lcall
lods
adc
repz
jae
mov
cmp
pop
nop
test
jecxz
mov
cwtl
xchg
shl
addr16
pop
sub
cwtl
popl
daa
test
adc
pop
aam
sbb
add
fcmovnu
shrl
movsl
hlt
mov
cwtl
loope
mov
mov
imul
and
bound
sub
aaa
mov
enter
rcll
arpl
insb
pop
cwtl
aaa
sbb
cmp
sbb
sbb
in
jae
ret
mov
lahf
sbb
sbb
loop
popa
cmp
jb
lods
aas
mov
rcrb
cmpl
inc
fnstsw
add
mov
mov
mov
mov
or
xchg
stc
in
sbb
repnz
mov
lea
or
jnp
loope
jae
ficoms
and
sbb
push
faddp
dec
movb
lret
inc
int3
fmuls
push
and
mov
dec
pop
or
and
dec
daa
in
inc
jae
sahf
pop
mov
add
cmc
test
sbb
mov
xchg
aam
jecxz
jne
pop
ja
lahf
mov
or
inc
ret
mov
push
adcb
scas
lcallw
cld
push
inc
sbb
les
leave
adc
jmp
mov
mov
adc
pop
xchg
jb
insb
mov
mov
leave
adc
push
adc
and
lds
outsl
gs
or
cmc
mov
idivl
imul
call
and
pop
or
sub
test
mov
jmp
fnstsw
mov
rcl
fimuls
or
mov
popa
lods
mov
popl
andl
push
int3
sub
imul
push
fnstenv
fadd
fdivrs
insl
roll
test
lret
data16
jns
insb
popa
pop
roll
push
cs
fstl
and
test
call
mov
xchg
in
loope
xchg
xchg
movl
mov
push
loop
repnz
cmp
jae
sahf
mov
xor
pop
rcr
inc
and
cltd
cmpb
in
inc
xchg
lret
es
inc
adc
push
loop
aam
mov
add
dec
addb
mov
movsb
adc
push
shlb
les
pusha
arpl
stc
jnp
div
or
dec
pop
pop
gs
xchg
xchg
jbe
dec
scas
out
or
call
repz
int
es
sbb
aas
add
cltd
icebp
int3
xor
cmp
jg
jecxz
fsubrs
enter
aad
mov
dec
or
add
adc
or
cmpsb
and
cmp
sarb
inc
gs
sahf
cmpb
cmp
incb
push
insb
in
jne
mov
push
inc
xchg
cmp
out
cmpsl
ret
dec
shl
add
out
sar
or
stos
filds
pop
cmpsb
insb
pop
sbb
hlt
mov
cmp
or
movsl
mov
mov
or
out
sub
mov
xchg
cmp
les
dec
push
decb
adc
out
js
jno
adc
lret
mov
cmp
sbb
aad
push
fs
into
mov
mov
xchg
clc
xorb
xchg
hlt
xchg
repz
mov
hlt
inc
mov
aam
pop
jle
add
xor
fdivrl
cwtl
imul
enter
mov
inc
xchg
push
adc
mov
mov
pop
out
xchg
arpl
jo
ds
mov
sub
loopne
or
inc
push
loope
outsb
ds
fistpll
cltd
rclb
xor
mov
or
pop
arpl
ljmp
pop
adc
fdivr
and
add
sbb
cmc
and
and
imul
daa
in
jmp
in
push
repz
repnz
and
out
sbb
xor
int3
movsb
mov
leave
sub
mov
mov
stos
dec
addl
fldcw
arpl
aas
daa
sbb
out
into
sbb
mov
adc
sub
inc
sti
rol
jp
pop
lret
sahf
sub
lahf
or
or
int3
je
lock
pop
jne
or
and
add
hlt
in
arpl
adc
repnz
add
test
mov
inc
cltd
push
gs
mov
mov
icebp
cmpb
sahf
ret
xlat
js
jmp
mov
and
ret
pop
fcomip
xor
mov
out
std
xlat
xor
fisttpll
call
push
mov
dec
add
mov
or
sbbl
jnp
dec
xlat
test
jns
nop
xor
xor
and
rcr
add
pop
xchg
xchg
sub
rorl
stos
leave
adcl
jae
jecxz
pusha
rorl
out
lock
sbb
aas
ret
push
dec
add
ficoml
or
popa
inc
add
pop
or
mov
cmc
imull
pop
add
inc
iret
adc
pop
xor
mov
jecxz
fbld
push
adcb
pop
add
stos
mov
jb
dec
loopne
pushl
cli
psubq
out
into
mov
inc
test
hlt
inc
cmpsb
sub
jge
pop
xor
pushf
aad
rcrb
shrb
mov
pushf
pop
ja
fisubl
xchg
xchg
fistpl
mov
cmp
cli
ss
cs
xchg
pslld
jmp
pusha
test
stc
and
rcl
sub
icebp
mov
xor
lret
sbb
jg
lea
daa
shlb
scas
sbb
sbb
adc
add
xchg
mov
movb
out
mov
and
xor
sbb
repnz
test
fisttpl
outsl
mov
pusha
xor
pop
dec
add
movsb
orl
sti
jb
push
mov
add
add
stos
ret
arpl
push
cmp
movsb
int
xchg
aad
xchg
fcomps
mov
push
arpl
push
test
push
jb
mov
jge
out
sbb
add
sbb
or
lds
add
push
jns
sub
mov
scas
jb
adc
push
jle
pop
adc
push
icebp
lods
je
fs
ds
xchg
xchg
in
jno
popa
sbb
pop
out
sub
out
test
gs
xchg
rcrl
sbbl
xchg
icebp
jbe
push
mov
xchg
scas
dec
xor
adc
mov
xchg
leave
js
cmpsb
mov
leave
xchg
mov
sub
movsl
pop
jmp
inc
lock
lret
sbb
push
jecxz
dec
mov
pop
cmpl
cmpsl
cmpsl
xor
arpl
push
les
dec
test
and
jo
aas
icebp
dec
dec
mov
adc
loopne
stos
outsb
cmp
pop
add
cmpl
xchg
loop
mov
xchg
fwait
xchg
fwait
mov
prefetchw
imul
loope
sub
and
aad
xchg
push
loopne
fcmovnu
es
test
fildll
in
loop
mov
xchg
cmp
xchg
out
imul
out
clc
into
aas
enter
call
jo
add
add
movsl
push
xchg
aaa
add
mov
pusha
leave
pop
jns
jbe
ret
in
inc
xchg
adc
popf
negl
xor
jmp
inc
test
mov
popa
arpl
pop
sbb
call
ror
in
pop
dec
lahf
fdivl
xorb
ret
sahf
popa
mov
adc
or
sbb
cmp
imul
push
and
and
jmp
xor
jle
sub
imul
push
into
push
pushf
mov
pop
lods
daa
inc
push
les
jae
mov
pop
adc
or
and
add
mov
mov
daa
mov
sub
mov
ss
cmp
jmp
and
dec
iret
in
cmpsl
and
or
cmpsb
push
addl
lea
dec
lock
addr16
call
jecxz
nop
fsubr
mul
jge
pop
cli
in
and
testb
out
cmp
pop
addl
mov
pop
jmp
mov
dec
jmp
ficomps
cmp
mov
notb
lahf
and
mov
int3
mov
pop
insl
nop
inc
bound
inc
jl
xor
push
sub
outsb
pushw
fdivrs
fsubl
jl
mov
push
push
and
mov
xchg
mov
fnstcw
jg
clc
xchg
stos
lods
je
mul
into
mov
imul
data16
pop
and
mov
js
pop
jb
pop
mov
dec
pop
cmp
sub
iret
repz
lret
subl
cmp
mov
popf
mov
mov
es
hlt
push
inc
jmp
push
mov
push
aas
sub
push
ud1
repnz
dec
jo
mov
mov
and
pop
sub
gs
icebp
mov
jg
sbb
sbb
insb
xchg
jle
mov
dec
and
test
or
pop
push
dec
in
xchg
jmp
mov
inc
jl
and
out
push
cmp
ficomps
lock
cmp
sbb
into
adc
mov
fnstenv
std
pop
xchg
test
ret
xchg
xor
stos
rcl
sub
mov
mov
scas
in
jp
sbb
dec
orb
sbb
pop
in
jnp
mov
insl
adc
jp
cmp
adcl
adc
fwait
cmpsb
hlt
lcall
pusha
js
pop
jbe
xor
xchg
xor
std
rorb
in
and
jno
bound
icebp
shrl
dec
jb
add
arpl
mov
insl
popa
ja
xor
pop
lods
fnsetpm(287
cltd
cmpsb
mov
pop
lods
leave
add
imul
pop
cld
jnp
dec
pop
ret
jp
inc
lret
sub
insb
pop
ret
stc
fdivrs
xor
xor
dec
sub
mov
xchg
adc
pop
int3
sbb
ret
lret
push
adc
sbb
mull
fcmovnu
lods
loopne,pt
and
notb
mov
jno
into
adc
rep
and
fstl
mov
xchg
shlb
adc
mull
ret
xchg
scas
or
stos
jns
enter
and
push
out
jnp
movsl
lret
icebp
push
outsb
jns
mov
rcrl
test
dec
jle
mov
call
test
jb
pushf
andb
mov
mov
sahf
imul
mov
push
cmpsl
test
pop
cwtl
sbb
inc
into
ljmp
lret
jge
call
notl
jl
add
push
shlb
lcall
or
rolb
adc
dec
inc
lock
aad
add
arpl
and
dec
sbb
inc
xor
hlt
or
push
adc
sbb
ds
xchg
xor
lods
test
sbb
test
mov
xchg
divb
pop
sbb
insb
push
out
mov
dec
cmpsb
adc
xchg
push
cmovge
xchg
adc
xchg
jg
out
into
cmp
fwait
or
lods
aaa
lret
popf
xor
push
adc
jmp
sbbl
pushf
dec
mov
and
cwtl
dec
sub
xor
pop
push
jae
aam
dec
cli
xchg
push
cwtl
dec
cmp
jg
imul
or
sub
and
loopne
and
loope
jnp
and
gs
aaa
push
cld
ret
shll
in
sub
icebp
sbb
sbb
rcrl
lods
push
or
or
mov
jae
arpl
loop
fiaddl
cmp
xor
fcoms
mov
iret
inc
inc
jne
sti
rorb
jg
pop
mov
and
out
addl
mov
popa
inc
mov
sub
das
sbb
xchg
call
jbe
adc
lods
mov
xor
lds
outsl
lret
inc
pop
inc
jno
lret
cmp
push
vphaddwq
lea
add
jp
out
adc
push
imul
adc
pop
lock
cmc
lret
inc
outsl
mov
repz
cmc
mov
repnz
jle
ja
inc
inc
popa
add
inc
sbb
movsb
push
sbb
cmp
mov
je
pop
icebp
repz
daa
lcall
cmpsb
pop
sbb
jns
mov
jmp
push
jo
call
nop
sub
and
popf
je
insl
nop
loopne
ja
lret
pop
loop
ficoml
arpl
add
mov
add
jo
clc
mov
push
test
mov
scas
adc
insl
push
cmpsl
nop
sub
mov
mov
dec
jns
shlb
and
sar
mov
mov
add
fsubrl
cmp
loope
add
add
rorb
fidivl
adc
and
or
jecxz
fdivl
cmp
or
jnp
cmp
push
ret
sbb
ja
inc
es
dec
add
out
loop
les
bound
and
xchg
scas
dec
aas
pop
mov
and
dec
out
roll
adc
testl
xor
lods
push
stc
xor
xlat
pushl
push
pop
sub
fsubs
push
outsb
sarb
in
xor
cmp
pop
jne
pushf
gs
inc
lds
mov
shlb
popf
cmp
iret
jl
addl
jge
inc
mov
int3
loopne
insl
scas
in
daa
xor
ljmp
es
stos
insl
dec
fnstcw
pop
ljmp
lea
sbb
mov
je
mov
push
ljmp
fisttpll
adc
addr16
xchg
lea
sub
adc
jle
adc
or
push
int
je
pop
push
mov
mov
jmp
pop
iret
jg
imul
test
cmp
xor
ds
aas
and
aaa
enter
jg
inc
pushf
and
push
xchg
fimuls
stos
jmp
inc
dec
loop
push
dec
ja
icebp
dec
push
repz
test
push
sub
dec
pop
jp
out
jo
jbe
push
pop
and
jae
into
cmp
mov
addr16
xor
out
push
jne
or
and
push
jbe
xchg
cltd
popa
and
fidivrs
lds
and
test
aas
aas
pusha
dec
movsb
movsb
js
push
idiv
and
and
out
daa
mov
and
popa
sub
adc
scas
mov
lock
adc
and
dec
nop
pop
add
push
cmp
adc
cmp
xlat
mov
pop
fs
cmpsl
cmp
pop
lea
mov
ret
cli
icebp
sbb
xor
add
inc
loop
mov
clc
addb
cld
arpl
or
out
xor
fidivl
loope
pop
adc
cmp
inc
bound
lcall
adc
rorl
mov
and
out
cli
dec
lahf
es
xor
xor
push
loope
adc
push
pop
pop
test
mov
in
mov
inc
and
xchg
call
inc
mov
mov
push
aam
mov
ror
pop
clc
ds
add
push
cmp
test
xchg
mov
les
rclb
outsl
inc
ljmp
inc
push
inc
sub
ret
inc
pop
jl
dec
call
cmpsl
add
movsb
out
add
or
cmp
sti
inc
icebp
data16
jns
jp
sbb
jmp
mov
jb
xchg
jb
sbb
and
scas
or
das
cmp
loope
inc
pop
jge
mov
test
mov
popf
push
subb
popf
xchg
inc
test
test
les
fisttpll
icebp
fwait
xchg
inc
jmp
popa
push
mov
test
shll
fdivrs
push
inc
sbb
inc
out
scas
sub
jmp
mov
jmp
xchg
add
jl
in
test
xor
add
mov
xchg
xlat
xchg
add
lcall
outsb
cmp
notb
rcl
je
stos
ret
dec
xchg
add
adc
dec
pop
lahf
iret
xchg
nop
sub
jle
cwtl
je
dec
in
push
sbb
ss
push
fimuls
icebp
push
xor
out
je
mov
inc
stc
cmpsb
mov
mov
cmp
or
cmp
repz
adc
add
pop
in
xor
dec
jne
outsb
adc
xlat
inc
sub
iret
clc
and
pop
in
mov
shlb
jb
sub
std
push
flds
in
or
xor
or
ss
fstps
std
jo
jp
test
insb
mov
sbb
push
or
daa
testb
sahf
add
and
pop
jnp
sbb
test
std
insl
dec
xchg
dec
add
sti
fdivrl
jo
mov
sti
das
xlat
sbb
push
inc
push
movsl
in
sti
cmp
subb
adc
shrb
fwait
push
outsl
xchg
xchg
mov
lret
sub
mov
aaa
jae
pop
cld
lea
pop
sbb
ja
sub
pop
test
fsubl
out
xchg
sub
push
or
add
or
test
lret
pop
jbe
pop
sub
dec
xchg
cmp
xchg
adcl
gs
or
mov
dec
adc
in
inc
and
movsb
arpl
shrb
jo
insl
mov
mov
daa
jp
pop
sbb
mov
push
idivb
shl
sbb
jecxz
sbb
dec
lods
rcrl
fbstp
inc
dec
addr16
out
pop
add
push
sarb
sub
out
shl
adc
cmp
lock
or
in
sub
ljmp
rcrb
or
sbb
xchg
subl
adc
xchg
xchg
or
gs
push
or
jge
sbb
popa
push
ja
add
and
pop
movsl
adc
inc
sbbb
xor
fisttps
cld
jmp
pop
xlat
punpckhdq
or
out
mov
push
sub
shrl
cmp
xchg
xorl
inc
sbb
or
in
xor
out
adc
adc
enter
xlat
mov
inc
sub
in
inc
jp
inc
sbb
jle
or
out
push
xchg
mov
cwtl
mov
dec
mov
cltd
lret
sbb
mov
idiv
inc
xor
sahf
out
imul
pop
push
mov
push
ret
in
push
shl
in
and
and
scas
fisttps
into
pop
xchg
jae
icebp
adc
pop
sbb
enter
pop
and
out
lds
test
jg
enter
sbb
jnp
inc
sbb
push
repz
adc
pop
insb
dec
sbb
push
lea
je
addr16
leave
fwait
cli
mov
sbb
adc
fwait
or
fcmovnb
fwait
mov
clc
jnp
loop
mov
ja
jl
sub
movsb
adc
mov
inc
push
sub
sub
mov
in
mov
sub
hlt
loopne
cld
es
push
cmp
or
cmpsl
leave
sti
add
scas
stos
cmp
mov
pop
js
inc
inc
and
stos
lahf
insb
lret
dec
xchg
mov
cmp
in
jecxz
jno
cmc
push
pop
mov
daa
enter
sbb
lcall
sub
aas
out
std
xchg
and
cmpsl
je
fwait
ljmp
inc
rcrl
jnp
xchg
mov
lds
inc
out
inc
out
cmpl
sarb
mov
inc
push
jle
jmp
nop
in
stos
ds
sub
jne
add
jno
loopne
sbb
fsubl
les
pop
lds
cmp
mov
jne
xor
aad
and
adc
sub
xchg
sti
test
and
lock
or
loope
mov
or
push
inc
mov
sahf
sbb
xchg
or
sub
pop
loopne
je
mov
dec
pop
hlt
pop
aas
push
sub
popf
jg
mov
push
dec
cmp
add
fdivs
mov
ljmp
mov
test
pop
addr16
push
stos
mov
ret
sbb
mov
cwtl
add
mov
repnz
or
mov
popa
stos
sbb
inc
insl
push
daa
dec
pop
mov
cmc
xchg
insb
js
arpl
cmp
jno
push
fs
fmull
or
pop
inc
ljmp
loope
inc
movsl
out
sti
fsubp
sub
cltd
mov
int
rol
lret
jg
pushf
shl
mov
jne
push
jbe
out
mov
xor
sbb
cld
sbb
loope
iret
xchg
hlt
aam
mov
xlat
cmp
jge
dec
addr16
dec
jbe,pn
add
add
mov
rcll
sbb
sub
pop
lds
jmp
inc
mov
sub
sbb
mov
dec
popf
inc
loop
cwtl
cwtl
xchg
in
inc
out
pushf
sti
xchg
dec
icebp
fisubs
divb
sub
and
inc
cmp
or
aad
rcr
adc
push
inc
shrl
xchg
imul
mov
gs
push
jle
mov
push
or
or
lock
hlt
fidivs
mov
pushf
xor
adc
ds
xor
push
ficomps
or
mov
test
jae
mov
xlat
mov
testb
mov
insl
sbb
mov
add
test
cmpl
or
inc
data16
and
loope
lods
cs
pop
inc
test
mov
dec
add
inc
lods
outsl
or
outsb
movsb
mov
xor
aad
flds
arpl
or
add
and
lds
mov
dec
fadd
into
mov
adc
adcl
pop
mov
sbb
mov
dec
xor
aaa
inc
outsl
pop
out
mov
xchg
data16
in
loop
xchg
jg
and
test
cld
inc
cmpb
add
hlt
movsb
cmc
mov
sbb
scas
clc
cwtl
xor
std
popf
dec
adc
jecxz
pop
xchg
pusha
xchg
add
and
xchg
fidivrs
and
xor
call
movsl
pop
or
adcl
adcl
push
adcl
lret
pop
stos
shll
nopl
mov
fwait
scas
jl
pop
loope
lods
stos
in
clc
dec
add
xor
js
dec
in
and
jb
loope
ds
inc
ds
lds
out
cmp
call
lods
push
mov
adc
daa
sbb
sbb
mov
lcall
sbbb
mov
or
push
or
imul
xchg
movsb
mov
jle
mov
imul
add
lcall
int3
jne
mov
push
or
pop
sub
popl
in
mov
adc
bound
bound
jmp
jmp
mov
imul
sti
es
cld
jp
sbb
fbld
fwait
xchg
rcrl
jmp
fwait
fwait
les
cs
outsb
mov
xchg
xor
pop
xor
adc
loop
lods
mov
data16
add
int3
aam
dec
das
fninit
jo
mov
sub
xchg
or
lret
std
adc
shl
inc
cmp
dec
test
inc
popa
pop
cmp
or
jns
dec
push
ljmp
cmc
and
mov
adc
mov
cmp
push
lret
cmp
lods
in
lock
push
adc
xchg
cli
aas
frstor
mov
pushf
or
into
es
mov
and
cmpsl
mov
dec
lahf
lods
sbb
gs
sub
mov
arpl
mov
or
pop
inc
push
mov
xchg
cmpsb
lret
sub
cmpsl
cmp
push
movsb
movsb
pop
out
jl
stos
xchg
mov
ss
xor
xor
js
adc
test
dec
pop
xchg
repz
xchg
js
push
pop
push
pop
push
lods
ljmp
insl
lret
push
and
stc
sub
out
add
add
mov
in
outsl
test
push
pop
jg
fs
pop
or
dec
push
mov
cmp
fistpl
mov
lods
cmp
jge
mul
aad
inc
xchg
ror
repz
pop
pop
orb
push
sub
mov
mov
dec
add
or
xchg
add
jecxz
rcr
stos
fnop
jmp
jp
cmp
lcall
inc
mov
call
dec
cmp
in
es
push
lock
in
loopne
mov
ss
stos
or
rolb
add
and
mov
scas
or
mov
lods
mov
cmp
mov
inc
insl
clc
pop
stos
sti
or
jno
shrb
addr16
stos
xor
adc
cmc
add
jl
xor
xchg
sti
in
sbb
and
mov
nop
fs
sub
rorb
cltd
in
ja
mov
js
shll
repz
mov
push
xor
sub
mov
les
mov
nop
je
fs
je
and
loope
popf
fcmovbe
mov
addl
xchg
adc
add
pop
push
xchg
inc
lcall
pop
mov
das
repnz
aam
push
mov
test
call
xchg
movsl
adc
sbb
mov
scas
jge
daa
ret
fmull
loopne
add
popa
dec
inc
mov
mov
lea
cwtl
xchg
lcall
xchg
sbb
imul
pusha
add
cli
incb
sbb
mov
loope
cmc
jecxz
ljmp
xchg
inc
mov
cmpsl
mov
cli
lock
adcb
pop
je
cwtl
inc
cmp
mov
inc
adc
insb
xlat
jge
jno
enter
lret
fisttpl
dec
popf
sub
lcall
or
push
jecxz
mov
fs
cmp
jns
sub
movsb
ret
jge
mov
pop
and
pop
jae
inc
mov
and
push
cltd
inc
imul
push
loop
adc
dec
gs
jne
sub
mov
mov
hlt
les
lods
mov
and
imul
loope
pop
xchg
dec
out
nop
hlt
push
push
shrl
sub
imul
ss
ljmp
jno
push
aad
rol
mov
jns
adc
cmpsb
clc
adc
or
addr16
sub
lea
cmp
jbe
shll
mov
cmpsl
mov
push
pop
mov
cmp
test
test
mov
dec
add
lea
fdivrl
test
xlat
push
adc
pop
fbld
cmp
sbb
and
shll
notl
loope
ret
lods
imul
dec
out
rcll
ja
pop
lock
divl
xchg
push
sub
stc
sub
call
adc
rorb
int3
push
in
mov
imul
jno
pop
mov
xorb
pushf
icebp
aaa
xchg
lock
stos
jmp
sub
sub
in
xchg
mov
daa
int3
pop
mov
jge
pop
stos
dec
and
xor
xchg
cmc
or
cmpsl
mov
les
imul
ja
lds
fimuls
stc
mov
pop
repz
lock
sahf
jo
push
jno
lret
add
ret
sub
ljmp
popa
adc
pop
cmp
cmpsl
scas
push
imul
hlt
clc
jmp
inc
adc
lods
fistps
movsl
and
ja
mov
shrl
les
xor
mov
inc
adc
rcrb
pop
nop
sub
push
push
push
adc
mov
ja
cwtl
test
or
cmpl
dec
scas
push
sub
cltd
and
enter
adc
rcrb
ret
cmp
arpl
int3
hlt
jge
aas
ret
test
insl
gs
cmp
lds
fdivs
or
cmp
pop
loope
enter
decb
sub
cmp
mov
and
mov
scas
cmp
add
and
mov
or
dec
gs
xor
lds
push
call
fdiv
or
jae
xchg
sub
push
rol
call
imul
fwait
xchg
aas
sbb
xchg
pop
int3
leave
sti
push
push
bound
xlat
inc
cmp
out
sti
out
pop
mov
int
cmp
jno
mov
inc
enter
test
and
lds
adc
pusha
ja
lret
out
lahf
xor
adc
mov
sbb
std
mov
out
in
add
jmp
aas
xchg
lds
xchg
sub
or
mov
mov
fnstenv
pop
mov
xchg
imul
aad
xor
sub
inc
sarb
cwtl
and
inc
ds
push
in
dec
jbe
gs
push
and
adc
repz
and
mov
insb
xor
cmp
jmp
jbe
push
aas
and
pop
sahf
xor
divl
mov
inc
ret
in
into
cli
dec
adc
push
loopne
mov
dec
jmp
ret
push
movsl
outsb
imul
and
daa
mov
or
mov
inc
add
xor
icebp
dec
pop
enter
dec
pusha
imulb
xchg
lock
fistps
mov
pop
imul
fistps
xor
mov
movsb
xor
mov
jo
pop
pop
fdivl
jbe
mov
sbb
rclb
mov
jl
adc
cmp
popl
loop
xor
jge
out
jae
mov
xchg
and
xchg
and
xchg
jmp
test
notb
addl
movsb
in
xor
or
outsl
sbb
mov
jbe
sub
popa
ds
mov
mov
xchg
lock
cs
pop
adcl
loope
in
cmp
jne
popf
cmpsb
hlt
jecxz
add
sbb
pop
push
cld
das
insb
mov
sub
xlat
cmp
or
std
lods
or
mov
push
xor
mov
rcll
in
push
pushl
pop
cmp
popf
mov
je
inc
cmc
bound
mov
adc
lcall
fwait
insl
out
into
imul
mov
cmpsl
sbb
jb
es
sbb
cltd
addps
mov
shll
jg
push
sarl
stc
push
mov
add
jmp
pop
jns
fsubrs
xchg
or
add
jae
jg
mov
ljmp
pop
stos
xchg
add
xchg
repz
mov
loopne
add
fistpl
shl
sub
dec
aad
inc
out
mov
add
fimull
outsl
mov
repz
jp
jae
xchg
in
sarl
repz
lods
gs
ret
mov
in
pop
ror
cmpsb
ja
sti
adc
into
or
lock
jne
inc
leave
or
sub
insl
xor
call
cmpsb
mov
push
imul
mov
mov
or
sub
xchg
xchg
push
push
sub
push
in
dec
daa
std
out
or
pop
xchg
xor
insb
sbb
mov
push
inc
scas
xor
orl
adc
inc
movsb
int
aaa
rorb
pusha
stos
pop
jae
div
je
loope
jg
ficomps
add
pop
dec
mov
aad
mov
testl
adc
dec
push
inc
mov
lahf
jbe
subb
fs
cmpsb
inc
sarb
clc
push
imul
repnz
push
imul
push
xor
xor
out
or
jg
pop
mov
adc
loope
jmp
push
das
loop
jno
adc
addr16
sbb
jg
fcmovnu
or
bound
add
dec
repnz
mov
popf
in
sbb
int
outsl
popf
mov
das
sub
pusha
sbb
sbb
mov
test
mov
addb
pop
xchg
push
in
jbe
cmp
xlat
insl
mov
repz
mov
pop
jae
jae
popa
sbb
xlat
xor
es
xchg
test
and
jae
stos
lcall
push
inc
clc
dec
aas
ret
cld
outsb
xchg
sub
dec
mov
jp
push
dec
in
xor
imul
jmp
dec
fsubl
lret
mov
stc
sub
jno
sbb
cwtl
rorb
adcl
shrl
fnstcw
scas
xor
out
scas
dec
test
repnz
adc
cmp
or
xor
jp
or
mov
add
neg
ret
jno
mov
out
sbb
pop
sti
in
imul
jns
xor
mov
dec
data16
mov
mov
sbb
shlb
fldenv
movsb
ljmp
jne
sbb
cmc
xchg
test
jl
mov
adc
in
cmova
dec
ds
push
and
mov
jno
mov
cmpsb
mov
roll
inc
mov
or
push
aam
fists
cmpsb
sub
or
cs
and
cmp
jecxz
jecxz
aas
mov
fstl
inc
loope
negb
jg
mov
cmp
inc
xor
sub
fwait
daa
pop
repz
test
fmuls
sbb
cmp
push
leave
jle
addl
and
jecxz
or
mov
push
mov
shll
out
sub
testb
and
push
and
jmp
pop
or
xor
js
insl
and
rolb
dec
rcrl
cmp
xchg
xor
push
xchg
jp
add
cld
jmp
fsincos
dec
jo
cmp
xchg
test
xor
cmp
mov
adc
and
adcb
cmp
or
cmp
push
jg
stc
lret
mov
sbb
mov
mov
mov
dec
cmp
negb
test
loope
aas
insb
mov
std
cmpsl
push
lea
fs
or
cmpsl
push
addr16
aas
inc
mov
push
repz
sub
push
adc
pop
in
dec
shl
pop
repnz
inc
cld
and
test
mov
adc
and
out
inc
jo
in
and
dec
push
je
sub
int
or
lea
jle
cmp
pop
xchg
pop
jmp
inc
or
xor
adc
mov
cmpb
adc
das
jae
in
mov
fwait
mov
stc
adc
ljmp
cmp
pop
mov
negl
cmp
push
mov
xor
sub
fisttps
imul
in
jle
ret
js
orb
sahf
cmpsb
shrl
push
push
mov
mov
xchg
outsl
adc
ljmp
in
cmc
dec
cli
and
or
out
data16
icebp
inc
xor
fwait
add
pop
sbb
jne
mov
jmp
xor
cmp
pushw
pushf
gs
push
inc
cmp
xor
dec
sub
addr16
out
stc
add
sub
mov
ja
mov
rorb
hlt
repz
aas
mov
pop
mov
add
icebp
push
jecxz
xor
aam
sahf
lcall
xchg
xor
int
jo
jo
xchg
pop
pusha
cmpb
sahf
dec
push
ficompl
jno
cmp
fcompl
add
sub
xorl
out
cli
dec
aad
xchg
lods
add
cmp
inc
push
add
sarl
mov
pop
and
pushf
inc
cld
adc
mov
bound
dec
add
jle
adc
fcmove
iret
mov
ljmp
cmp
sbb
inc
frstor
xor
aas
sbb
jecxz
xchg
add
pushl
lods
sbb
je
shr
fwait
out
mov
mov
pop
mov
insl
cmp
dec
pushf
rcr
loopne
test
mov
push
jmp
sub
cmp
cs
js
mov
mov
add
sbb
cmp
and
out
xor
jecxz
mov
clc
sub
in
cmpsb
xchg
std
fsub
xchg
imul
pop
stos
pusha
xchg
sub
cmc
jge
mov
jecxz
mov
mov
inc
fbld
sar
pusha
and
pop
lds
insb
loopne
mov
inc
pusha
mov
je
adc
inc
arpl
mov
pushf
or
leave
aam
dec
into
nop
xchg
jmp
jo
jne
mov
mov
add
jge
mov
mov
mov
pop
mov
xchg
inc
adc
ret
mov
pop
mov
js
std
xchg
call
sbb
iret
test
int
mov
call
sarl
xlat
xchg
pushf
and
inc
ret
cmpl
test
inc
pop
add
int3
jnp
sub
add
mov
jnp
mov
aad
push
enter
mov
add
in
stc
lret
orb
rol
gs
arpl
js
xchg
xchg
jg
leave
imul
data16
xchg
fisttpll
ficoms
sub
sahf
popf
jge
or
adc
mov
inc
push
jnp
loope
out
or
mov
and
and
or
adc
call
popf
insl
adc
stos
adc
add
adc
aas
dec
jge
loope
sarl
ds
je
jb
xchg
push
fcmovnb
iret
sbb
jae
rcll
xchg
dec
pop
arpl
iret
fwait
or
xchg
xchg
lods
sub
lea
mov
sub
shll
dec
add
gs
dec
mov
adc
cmp
in
and
mov
imul
adc
mov
data16
xchg
repz
pop
add
cmpb
rol
shlb
addr16
nop
mov
cmp
xorl
push
pop
xchg
repnz
adc
mov
js
push
je
andb
sbb
test
hlt
jb
cmp
and
cmp
xlat
xchg
pop
mov
leave
xchg
mov
ss
xchg
mov
dec
push
imull
js
int
jo
jo
mov
fisubl
shl
cli
sbb
shl
rcrb
xor
dec
and
inc
fidivrs
fldt
loopne
lahf
lret
repz
xor
mov
je
xchg
jnp
cld
xchg
outsb
and
fmulp
ds
xchg
cmp
mov
in
ret
lcall
mov
xor
xor
sbb
mov
dec
dec
shrb
mov
inc
fldenv
movsl
cmp
arpl
pusha
inc
or
shl
lahf
imul
and
fbld
fs
xchg
xchg
stos
xorb
xchg
jo
cmp
les
fiaddl
iret
lea
xchg
pop
ljmp
repz
pop
adc
icebp
pop
push
inc
jp
imul
out
xchg
mov
lcall
popa
dec
lret
pop
mov
xchg
push
or
jp
daa
jg
sub
jnp
adc
mov
lcall
xchg
dec
mov
data16
ss
pop
shrl
cmp
movsb
dec
fs
add
outsb
stos
jmp
or
xchg
pusha
inc
verr
pop
scas
cmp
mov
mov
dec
inc
mov
lock
xlat
or
cmovs
ret
fmuls
cwtl
jae
inc
adc
sbbb
aas
push
loopne
push
mov
or
icebp
jmp
or
shlb
testb
push
xor
pop
imul
jmp
add
dec
mov
xchg
loopne
ja
or
pop
xchg
cltd
pop
in
push
cs
adc
mov
pop
cld
imul
insb
movsl
and
and
fidivs
testb
adcl
std
and
sub
pop
addr16
mov
mov
popa
lahf
cmp
sbb
mov
xchg
daa
cmpsl
add
sub
insl
cmpsb
mulb
pop
inc
call
dec
out
push
jg
or
inc
jo
ficomps
jne
push
data16
sti
push
sub
inc
push
mov
rorb
lock
cltd
pop
das
jmp
cmp
negb
dec
pop
mov
imul
add
out
imul
loope
sbb
mov
mov
lret
jns
aaa
pushf
push
repnz
pmaxsw
movsb
pop
push
aaa
fwait
sarl
test
inc
mov
ret
push
add
adc
push
sbbb
pop
add
mov
fwait
jno
in
push
push
xlat
int3
push
lock
and
jp
test
adc
stc
leave
es
push
dec
test
add
jmp
or
hlt
jns
aaa
pop
pushf
push
in
orl
lcall
test
dec
xchg
sti
xchg
faddl
xor
aad
sbb
fsubp
ror
push
jnp
pushf
push
add
fidivrl
cmp
addr16
and
sub
pushl
sbb
inc
xlat
sub
aam
mov
add
insb
fsubr
xor
dec
inc
dec
mov
sub
fildll
jp
jns
ja
cs
int
js
in
or
call
xor
loopne
inc
push
cmc
leave
fcompl
sbb
lods
xchg
add
ret
adc
enter
orb
push
insb
mull
bound
imul
arpl
je
fdivs
or
sbb
jno
inc
sahf
je
cltd
scas
mov
ret
push
or
incl
scas
mov
and
mov
jb
fwait
adc
fnstsw
lret
sahf
dec
mov
loopne
stc
aad
test
bound
rcl
stos
adc
scas
jo
xor
dec
icebp
std
mov
sbb
ret
jmp
aaa
addl
cmp
jcxz
sub
and
and
cmp
lods
ds
out
aaa
fwait
sub
andb
sbbb
fistl
push
mov
jge
add
dec
or
push
bound
arpl
popa
jmp
pushf
push
ret
cmc
inc
ds
push
pop
adc
icebp
pushf
and
mul
ret
scas
jl
hlt
fst
fidivl
push
jnp
push
xchg
aas
lcall
daa
jno
mov
mov
cwtl
hlt
sti
stc
lods
adc
mov
jmp
adc
dec
dec
sbb
xchg
lahf
mul
movsb
push
and
scas
rorb
movsl
sub
mov
insb
xchg
cmp
in
mov
pop
push
movsb
dec
stc
cmp
and
clc
lock
push
jne
aas
pop
add
fdivs
out
in
xor
mov
test
mov
je
clc
pusha
test
mov
jnp
xchg
repz
xor
dec
mov
push
fcmove
push
int
mov
inc
cmpsb
lahf
xor
popf
incb
xor
cs
enter
pusha
adc
add
ror
arpl
xor
arpl
mov
sub
push
pop
cld
dec
aas
or
pop
fnsave
mov
mov
dec
leave
jo
jae
lret
mov
aam
test
gs
xchg
lahf
xchg
lods
mov
dec
push
or
push
insb
gs
mov
inc
sbb
sub
inc
bound
mov
cmp
sbb
incb
call
pop
sbb
fnstcw
lock
and
loopew
fs
cmp
jecxz
clc
or
cmp
ja
sbb
pop
pop
nop
mov
and
imul
aaa
repnz
or
push
adc
jno
xchg
popa
xchg
add
je
stos
adc
mov
ret
dec
daa
adcl
inc
in
jno
mov
mov
jmp
dec
mov
mov
and
lahf
addr16
dec
inc
lahf
jp
mov
adc
push
pop
stos
add
mov
push
dec
jae
dec
xor
imull
out
add
jecxz
mov
xor
out
pop
add
pop
mov
adc
lea
sbb
jns
add
sbb
xor
adc
xor
cmpsb
adc
xor
mov
bound
xchg
loope
hlt
lahf
cmpsb
stos
dec
jbe
add
out
cmc
fxch
mov
and
fsubl
pushf
mov
adc
mov
cmp
jmp
cmp
mov
int3
dec
out
push
fistpll
jge
and
pop
popf
xchg
jl
mov
rol
cmpsb
into
sub
movsb
movsl
nop
pop
mov
cmp
add
gs
cmc
leave
loope
filds
sbb
push
lock
test
int3
mov
and
lcall
aas
lahf
js
xor
out
loopne
xchg
mov
mov
cs
cltd
popa
ja
jo
mov
push
fistps
xchg
test
sbb
inc
cmp
arpl
dec
push
ljmp
cli
cmp
cmp
loopne
dec
xor
push
int
sub
gs
dec
in
cmp
scas
push
rcrl
std
push
push
xchg
dec
dec
shl
jne
ds
ljmp
pop
out
inc
mov
xchg
mov
outsb
pop
movsb
jnp
into
mov
xor
roll
add
orl
inc
cmp
and
push
mov
sarl
push
in
outsl
sub
aam
dec
add
cld
xchg
cmp
dec
outsb
fwait
cmpsl
loope
in
dec
adc
dec
cmpsl
inc
sbbl
adc
stc
stc
into
jne
bound
mov
cmpsl
pusha
mov
or
pop
dec
sbb
mov
and
mov
adc
out
gs
mov
push
cmp
jle
fucomi
lcall
shlb
inc
push
fisubl
rolb
add
sbb
mov
xor
dec
xor
scas
lods
pop
inc
inc
sbb
or
popa
popa
mov
push
cmp
leave
jo
shl
clc
int
mov
sarl
shll
or
ljmp
out
pop
inc
mov
dec
sub
add
dec
or
es
fistpl
and
js
gs
inc
jle
imul
pop
jl
mov
shll
in
lahf
inc
ljmp
incl
cmp
mov
int
cmp
jle
into
cmpsb
add
xchg
sti
dec
sti
subl
mov
mov
push
int3
push
scas
stos
repz
xchg
test
ljmp
push
push
pop
clc
sti
xor
push
arpl
mov
cmp
ret
ret
jno
mov
insb
clc
js
xchg
and
jecxz
neg
in
pushl
xchg
stos
sub
outsl
rcrb
es
inc
test
popa
out
adcl
je
cmp
mov
push
inc
clc
jnp
dec
jno
inc
add
sub
in
add
xlat
xor
cmp
adc
sbb
mov
push
and
pop
lea
inc
sub
inc
cwtl
push
jnp
scas
sbb
and
lock
popa
scas
mov
push
push
lret
popf
rcrl
sbb
mov
fidivrs
std
cmp
push
into
and
jno
sahf
pop
cmovb
pop
nop
mov
adcl
int3
arpl
fisubs
std
mov
jb
sbbb
jae
lcall
push
mov
das
ja
mov
lea
negb
icebp
fisttps
sub
ds
pop
inc
sbb
dec
dec
push
xor
pop
xor
inc
out
icebp
fnstsw
movsb
bound
push
or
mov
aaa
lret
in
cmp
movsb
mov
sub
mov
add
and
hlt
jns
bound
rorl
pop
out
mov
das
add
push
andl
and
test
add
and
mov
xchg
addl
xorl
imul
aam
out
sbb
rcrb
push
mov
vmovntps
lock
out
mov
movsl
inc
and
sbb
or
xor
lahf
push
ret
daa
xor
mov
in
mov
fs
mov
fisttpl
sbb
jp
cmp
adc
mov
pop
push
jmp
and
mov
push
out
addr16
pop
and
lods
stos
xor
add
sbb
sbb
inc
xchg
je
sti
xor
mov
xchg
rcll
in
out
cmpsb
cmp
pop
xchg
or
push
pop
outsl
or
xor
jae
shll
xor
jmp
mov
icebp
push
dec
out
xor
gs
xor
lods
loopne
nop
mov
in
imul
pop
pop
adc
cs
cmpsl
andl
mov
push
add
test
and
popa
jmp
and
adc
incb
gs
mov
jge
ljmp
movsb
cmp
pop
add
lock
mov
xlat
mov
xchg
add
adc
jne
out
push
jmp
mov
xchg
stc
mov
into
mov
push
mov
push
and
divl
pop
cli
dec
lret
xchg
mov
and
test
imul
jno
or
loopne
lea
cmc
mov
outsl
pop
and
test
or
mov
pushf
sub
pop
subb
pop
cmp
jle
push
stos
pop
cmp
add
loop
push
aas
fidivrl
xchg
loope
xlat
xchg
ja
dec
jbe
inc
xchg
dec
lret
inc
inc
xor
mov
mov
jo
xor
jmp
dec
setb
loope
cmp
add
mov
repnz
clc
add
sub
adc
push
jecxz
lcall
fldenv
push
inc
xchg
push
pop
sarl
hlt
jmp
ror
call
pusha
jle
pop
and
mov
and
cmp
xor
add
jmp
xor
mov
mov
and
icebp
ret
sub
mov
mov
stos
mov
cmp
test
mov
jb
push
fwait
cmp
sbb
lcall
xchg
add
jbe
js
mov
stc
push
in
pop
out
mov
insl
jg
insl
dec
stos
inc
fcoms
pop
fs
xchg
sub
push
mov
or
mov
sti
les
lds
add
call
ja
stc
bound
push
sbb
test
xor
and
jns
cmc
jnp
dec
sbb
sbb
push
repz
pusha
dec
mov
dec
repnz
aad
dec
push
inc
jle
and
add
sbb
popf
ret
mov
inc
xchg
sbb
pop
arpl
mov
sub
scas
shll
or
cmp
mov
pop
mov
mov
js
mov
or
xor
add
jno
mov
xor
data16
ljmp
add
jecxz
in
xchg
add
push
mov
test
add
xchg
and
push
mov
and
mov
push
cld
mov
sbb
sti
sbb
sub
pop
xchg
scas
rcrb
dec
mov
hlt
fisubl
in
jnp
and
push
fwait
pop
popl
repnz
add
movsbl
xor
repz
pop
mov
sub
or
inc
lret
es
pop
jb
loop
adc
adc
outsb
jl
jno
xchg
imul
fidivl
mov
add
cmp
inc
jecxz
jno
or
xor
or
js
sbb
popa
and
jecxz
jae
mov
in
dec
add
xorl
mov
xlat
push
jns
xor
mov
push
push
xor
scas
dec
lea
lret
jle
std
js
adc
push
das
icebp
in
loop
lock
int3
fldl
cwtl
stos
xor
mov
iret
add
jo
pop
mov
mov
lahf
je
je
push
sbb
loope
inc
sub
ret
into
shrl
cmp
push
mov
leave
gs
mov
iret
inc
dec
repnz
lods
outsb
in
scas
jmp
cmp
andl
sbb
insb
loope
push
scas
mov
push
imul
cmpsl
scas
mov
mov
mov
in
sahf
test
insb
stos
jno
fsubrl
adc
push
jb
mov
adc
add
xor
mov
jb
fdivrp
int3
and
pop
pshufw
dec
cmc
ja
or
imul
adc
sahf
bound
and
movsl
mov
mov
and
mov
icebp
sub
adc
cld
sub
lcall
ficoms
or
arpl
lahf
mov
enter
jmpw
cmpsb
adc
pop
and
call
adc
ds
pop
pextrw
scas
mov
dec
mov
pop
xor
stc
dec
inc
sti
dec
cmp
orl
dec
mov
mov
mov
mov
jo
out
jmp
xchg
mov
xchg
adc
in
xor
cmp
or
ljmp
sub
nop
dec
add
and
mov
ficompl
inc
ljmp
inc
jo
arpl
dec
in
divb
add
push
std
sub
sub
xor
push
lods
mov
pop
mov
loopne
cltd
icebp
push
xchg
insb
mulb
add
sub
test
mov
rolb
and
decl
lcall
nop
cli
or
ds
sbb
pop
xor
inc
in
push
jnp
outsl
clc
jl
xor
inc
rclb
jb
dec
jmp
enter
mov
fstpt
in
lds
test
pop
cwtl
sub
cmc
sbb
add
jns
movsl
addr16
std
shlb
and
imul
dec
mov
mov
nop
hlt
lcall
lods
adc
cld
andb
es
push
add
movsb
insb
out
xchg
xchg
bound
fdivs
adc
mov
cmpsl
je
sub
xchg
adc
pop
mov
mov
lret
inc
ret
dec
adc
jge
add
sti
and
ret
jo
jecxz
jp
ss
xor
sbb
push
inc
lretw
mull
lret
test
cmc
pop
dec
inc
or
lcall
scas
lock
inc
mov
jle
shlb
sub
scas
push
mov
repnz
subl
jp
or
stos
cmp
xchg
sub
shlb
and
bound
or
test
push
shrd
shll
jo
aaa
imul
adc
sub
cwtl
in
scas
cwtl
dec
xchg
xlat
dec
add
xor
pop
jb
mov
push
lahf
test
cmp
pusha
push
pop
pop
subl
in
rcr
gs
mov
xlat
dec
jbe
xchg
mov
xor
rcll
mov
lret
push
xchg
jecxz
fsubl
push
adc
add
imul
mov
add
mov
add
bound
mov
shrb
jg
jno
mov
cmp
sti
xchg
fcmovbe
jl
push
xor
movsb
cmp
inc
in
stos
ret
dec
cmpl
nop
adc
jno
mov
fcmovne
repz
sbb
lods
adc
sbb
mov
mov
imul
sub
cs
movzwl
cld
nop
mov
push
push
dec
xorl
mov
aam
das
add
jnp
dec
cmp
mov
cmpsl
outsb
mov
test
cmp
ds
jae
cs
inc
xchg
call
inc
jnp
pop
imul
es
inc
push
pop
sbbl
mov
lret
push
add
fs
lea
test
jmp
je
xor
test
push
ja
add
and
adc
inc
int
push
or
fwait
push
mov
test
sub
icebp
mov
les
movsl
xor
frstor
lds
int
outsl
mov
imul
add
rcl
xchg
push
mov
dec
popf
test
xor
push
mov
orl
xchg
lahf
insb
mov
push
inc
push
scas
test
fs
sub
xchg
iret
mov
mov
sti
das
test
cld
dec
in
xor
pushf
cltd
xchg
jne
test
lret
xor
cmp
rcr
ret
clc
fsts
sbb
pop
add
xor
lds
addr16
jecxz
insl
xchg
frstor
out
gs
scas
and
in
rclb
push
test
mov
sub
or
scas
and
jecxz
orb
enter
add
push
test
andl
nop
cmpsl
cmpsl
scas
push
ds
pop
sti
int
dec
and
sub
fnstenv
fdivrs
subb
mov
les
inc
fldt
and
pop
into
mov
lcall
push
into
mov
int
xchg
jne
mov
in
cmp
push
das
fwait
icebp
sbb
mov
and
and
push
push
pop
cs
out
add
mov
in
xchg
push
or
pop
addr16
aaa
lcall
repnz
gs
dec
mov
mov
xor
sbb
cmp
lcall
or
add
sarl
out
push
ret
pop
jecxz
xlat
sbb
dec
sbb
mov
mov
aam
cli
leave
pop
outsl
movaps
pop
mov
push
and
into
xlat
out
and
cmc
xchg
jle
cwtl
cli
pop
mov
ficoms
test
mov
and
sti
stc
cmp
sub
mov
jge
push
mov
sbb
icebp
sahf
push
sub
inc
out
or
add
xchg
jno
dec
add
jns
inc
mov
adc
jmp
mov
push
imul
mov
out
in
mov
repnz
mov
sbb
adc
inc
mov
mov
jo
lds
in
imul
cmp
and
fimuls
pop
sbb
jmp
xchg
cld
div
outsb
jae
call
ljmp
and
push
inc
dec
jns
enter
scas
fwait
imul
ljmp
leave
push
mov
loope
roll
push
add
out
or
jne
sbb
jp
mov
mov
mov
sub
dec
orl
inc
add
loop
mov
push
inc
or
push
shrb
sbb
add
fildl
mov
sbb
arpl
mov
cmc
cmp
sbb
mov
mov
adc
jns
and
xor
mov
add
xchg
sub
stos
fnstsw
loope
mov
ss
movb
nop
test
sbb
dec
mov
popa
xchg
cli
add
test
daa
notl
outsb
xchg
mov
jno
test
scas
aam
addr16
xor
or
popf
push
xchg
cmp
sub
cmp
cli
outsb
push
jecxz
subl
mov
adc
out
mov
jae
jecxz
mov
dec
adc
rcrl
repnz
into
push
xor
cmp
or
mov
xor
cwtl
mov
jmp
mov
ret
in
pushf
mov
sbb
loop
fnsave
pop
popa
xchg
ja
popf
jecxz
ret
clc
jbe
loopne
adc
sbb
pop
imul
outsb
mov
daa
int
leave
int3
jae
add
fists
jnp
adc
mov
mov
fs
jmp
dec
jo
fdivl
lcall
pusha
jnp
pop
inc
js
mov
in
mov
cmpsb
xor
lcall
jae
add
iret
pusha
test
mov
and
dec
dec
inc
std
jno
fsub
roll
popf
or
cvttps2pi
dec
mov
fdivl
cmc
loop
sub
xor
ret
push
ja
insb
sarb
xchg
pop
movsl
ds
enter
mov
pop
lods
or
inc
loopne
sbb
lods
xchg
pop
inc
push
mov
sub
fsubrp
jg
adcb
aad
testb
in
xor
push
ret
xor
jl
mov
subl
push
aad
loopne
mov
cmp
or
push
mov
inc
push
xorl
lods
sub
shlb
icebp
or
imul
pop
call
lcall
les
cltd
mov
push
push
mov
add
mov
and
bound
pop
fdivrs
mov
mov
lret
mov
or
xor
adc
rcrb
cmp
jns
daa
add
mov
cmovb
lds
push
xor
jnp
and
out
insb
and
inc
sbb
pop
dec
movsb
outsl
add
gs
add
and
icebp
mov
cwtl
xor
into
ret
fistpll
push
jbe
xchg
js
or
faddp
cmp
push
inc
pop
dec
es
push
adc
push
loope
icebp
punpckhwd
inc
fdivs
inc
fldt
outsb
repnz
mov
insb
sbb
ss
xchg
pop
pop
jbe
ret
mov
xor
sar
adc
dec
es
xor
or
jb
and
xor
fnstcw
pushf
ljmp
xchg
mov
cli
add
cltd
bound
in
mov
je
mov
pop
sbb
in
adc
psllw
pop
xor
outsl
movsb
test
jae
ret
adc
dec
xorl
jbe
inc
lods
mov
inc
fisttpl
mov
fisttpl
mov
or
out
std
addr16
cmp
mov
sbb
jle
cmpsl
fcoml
filds
jl
out
stc
dec
test
movsl
dec
xor
mov
mov
mov
xchg
cmp
dec
jge
arpl
or
adc
out
out
dec
iret
into
push
rclb
mov
pop
jae
xor
cmpsl
xor
stos
int
movsl
ja
mov
or
xchg
pop
roll
das
or
pusha
fdivrs
jl
dec
xchg
xor
fnstcw
ja
shlb
testb
cmp
add
fucompp
dec
jb
cwtl
mov
outsb
fcoms
and
xor
mov
sahf
in
fcmovnu
xor
mov
outsl
xchg
push
std
mov
mov
lahf
xor
je
mov
rcl
pop
stos
lock
shrl
je
shrb
out
repz
cli
in
ds
pusha
cmp
loop
cmp
xorl
sbb
adc
aam
mov
mov
jno
lret
enter
xchg
xchg
cmpb
std
mov
jo
mov
leave
subl
js
or
rcrb
cmp
cmc
and
int
pop
inc
shlb
sub
outsl
bound
push
and
aad
fsubrl
jo
add
mov
gs
test
and
lcall
aaa
sub
cmp
mov
adc
test
pop
xor
mov
das
mov
sbb
es
ret
mov
data16
cmp
adc
arpl
aam
adc
test
inc
shll
push
daa
cld
xor
ja
xchg
adc
gs
xchg
or
ljmp
push
popa
lahf
lret
sbb
and
jb
ret
out
nop
fstp
jne
cwtl
fwait
dec
xor
fmuls
out
push
push
cmp
lret
movsb
mov
mov
xchg
jb
dec
mov
incl
rcrb
aad
call
sub
and
push
fstl
rclb
aam
sub
mov
pop
cwtl
loope
ret
pop
sahf
jo
or
fxch
push
sub
mov
stc
inc
rcl
mov
jge
inc
dec
add
cmp
outsb
jle
sub
aam
adc
mov
outsl
dec
je
jge
cmpsb
mov
addr16
cli
push
dec
enter
jmp
sub
mov
dec
cli
jecxz
rcrl
push
pusha
repnz
int3
sbb
cmp
mov
jmp
push
pop
and
loopne
add
xchg
xchg
lock
add
sbb
pushf
testb
fisubs
leave
sub
sub
sub
lock
popf
pop
or
or
lock
mov
and
and
or
iret
push
mov
out
and
xchg
std
icebp
add
push
jae
scas
ror
jnp
outsl
pushf
dec
into
push
mov
sahf
out
add
sbb
cli
or
rclb
inc
push
jl
pop
bnd
sbb
mov
imul
icebp
lods
pop
xor
movsb
lret
shll
lds
dec
pop
popf
mov
sbb
sub
out
stos
jno
or
add
sub
ret
movsb
js
imul
cmp
jecxz
cmp
and
sahf
pop
fdivl
pop
lret
xchg
mov
push
cmc
or
inc
xchg
sub
jp
fcmovu
outsl
pop
aam
pop
es
cmp
loopne
xchg
or
jo
ret
ror
cmp
fs
adc
xor
cmpl
loope
xchg
xor
mov
mov
shll
add
xchg
push
roll
mul
pop
sahf
stc
call
jne
and
mov
pop
jmp
shlb
cltd
nop
sbb
enter
mov
mov
in
mov
xchg
fsubrl
mov
dec
jb
and
cli
cmp
addr16
inc
call
out
pop
pop
dec
xlat
stos
add
cltd
scas
mov
dec
jns
jle
cld
mov
fadd
subl
push
cli
xchg
je
cmpsl
adc
in
sub
mov
lret
loop
cld
mov
or
stc
push
push
int3
daa
js
xchg
mov
pop
add
mov
add
popf
lds
and
pop
jle
xchg
adc
xor
mov
mov
aam
cmp
js
mov
in
rcrb
pusha
mov
push
sbb
sub
fmul
movsb
pop
cld
pop
fmuls
sub
jge
fxch
das
xor
lahf
jb
fsubrp
or
mov
sub
mov
imul
and
inc
movsb
and
push
dec
data16
jp
pusha
inc
mov
in
jns
jnp
mov
lahf
lea
js
mov
xlat
in
push
lods
jne
fwait
xchg
pop
add
mov
push
and
loope
and
adc
mulb
pop
movsb
xor
gs
js
idiv
aam
sbb
or
inc
add
mov
cmp
sbb
jnp
pusha
cmp
repz
lods
ficoml
pop
jae
mov
int3
jmp
lods
add
push
iret
cmpsl
pop
mov
dec
aaa
or
xchg
icebp
jns
lret
cmpsb
stos
insl
popa
enter
out
xchg
push
aas
mov
sub
in
xor
dec
mov
adc
les
cwtl
fisubrs
xorb
std
mov
test
ja
push
adc
js
lods
xchg
xchg
mov
pop
pop
push
and
cmp
sub
cmpsb
imul
mov
xchg
mov
and
leave
das
jo
imul
jbe
sbb
popa
xchg
enter
outsb
mov
popa
jnp
fists
mov
jne
inc
lds
inc
push
out
inc
cmpsl
jp
popf
or
or
icebp
mov
stos
punpcklwd
or
add
decb
or
out
mov
sbb
clc
icebp
dec
lahf
aas
xchg
cmpsb
daa
push
add
add
gs
dec
push
pop
inc
xchg
insb
sub
xor
mov
icebp
inc
mov
rorl
mov
mov
push
mov
sarl
jnp
int3
enter
push
sbb
rep
test
repnz
dec
std
and
cmp
sub
dec
mov
in
cmpl
faddl
add
movsl
lcall
and
fidivs
lock
mov
and
es
imul
push
or
lods
lcall
xchg
out
out
jp
push
cmp
cmp
and
ljmp
and
mov
xorb
je
ds
ja
xor
rorb
adc
addr16
push
xchg
hlt
aaa
out
dec
push
inc
xchg
mov
dec
ljmp
xor
jmp
jo
out
and
sub
xor
jmp
dec
ss
add
int
mov
test
hlt
push
loopnew
test
xor
jne
xor
push
add
bound
jb
xchg
mov
or
cmp
fstpt
sub
lcall
or
mov
pop
add
cmpsl
pop
push
icebp
dec
mov
int3
sbb
or
lds
mov
sbb
cmp
arpl
in
push
mov
cmp
int
pop
dec
clc
repz
sti
xchg
sbb
mov
dec
mov
jge
push
cmp
push
sub
aam
inc
dec
cld
lock
and
cmpsb
aas
sub
xchg
push
ret
jmp
or
jns
pop
movsl
aaa
jne
mov
je
movsb
mov
stos
in
mov
cli
jmp
jmp
nop
daa
xor
lods
leave
sub
aad
dec
cli
or
test
lock
fstp
stc
sub
or
into
lods
ds
pop
ss
push
xchg
outsb
aad
js
jns
lock
addb
pop
sbb
jecxz
rol
sub
cmp
icebp
pop
cwtl
je
nop
cmp
pop
and
cli
xchg
adc
je
sub
adc
jo
repnz
push
vmread
cmc
and
sbb
scas
jne
adc
cmpsl
push
mov
test
imul
dec
dec
jle
popf
inc
adc
lcall
popf
xor
cmp
add
and
fwait
aam
push
or
cmpl
lods
push
mov
mov
fs
js
scas
fldt
xchg
inc
jbe,pn
fildl
xor
mov
jbe
idivb
int3
dec
add
jne
xlat
shlb
icebp
aaa
pop
outsb
daa
cmp
adc
xor
incl
pop
cmp
das
in
xchg
jp
aas
pusha
jb
cmc
or
daa
sub
aaa
inc
int
arpl
leave
mov
push
mov
add
jns
mov
nop
pusha
outsl
stos
mov
and
pop
mov
sbb
sahf
jne
or
addr16
iret
dec
add
adc
inc
dec
jmp
imul
daa
enter
add
stc
in
imull
or
pop
push
es
jbe
das
icebp
call
cltd
and
sti
test
arpl
mov
rcrb
adc
flds
into
xchg
dec
fdivrs
xchg
cwtl
rol
loopne
dec
and
je
adc
jo
sub
mov
xor
aad
sub
mov
lock
fisttps
fbld
xor
xchg
imulb
xchg
out
jae
ret
orb
mov
xor
in
and
cmc
sbb
jns
sub
xor
pop
in
pop
mov
mov
pop
aam
mov
mov
mov
and
addl
enter
inc
cltd
xor
shll
cmp
push
rolb
sbb
scas
in
imulb
gs
aam
jmp
cwtl
mov
test
mov
in
imul
mov
xchg
xchg
mov
ja
mov
rorb
push
out
lds
aas
pop
jbe
adc
mov
shll
sub
ljmp
out
addr16
fadds
iret
xchg
or
mov
jp
xchg
jmp
insb
push
mov
mov
in
push
or
mov
lcall
dec
sarl
lret
or
vsubps
fcom
ds
jno
fcompl
mov
loopne
nop
mov
sbb
es
repnz
stos
push
inc
test
call
mov
add
sub
xor
pop
adc
rcr
dec
mov
fs
stc
push
fidivrl
leave
inc
inc
ficoml
mov
add
loopne
jl
cmpsb
jmp
lcall
int3
xor
add
and
ljmp
ds
popa
negb
es
and
push
jmp
js
into
jp
jbe
mov
xor
rorb
sti
dec
repnz
lret
stos
cwtl
inc
xchg
xchg
xor
adc
xor
jae
iret
pop
fnstsw
sub
add
or
and
jmp
test
fwait
int
lea
and
movsl
es
jnp
mov
cmp
inc
dec
in
adc
repnz
xchg
mov
dec
xchg
scas
flds
jl
fidivs
bound
addr16
cs
jmp
push
add
nop
xchg
xchg
jmp
sahf
or
hlt
js
popf
data16
test
pushl
sbb
pushf
mov
lea
mov
in
mov
pop
mov
ss
aad
adc
push
pushf
pop
leave
mull
mov
push
inc
push
dec
mov
sti
cmp
jle
cs
mulb
das
cmp
xor
mov
pop
xchg
push
dec
push
ret
push
add
call
mov
lea
xlat
aam
hlt
repz
cld
int3
pop
das
loopne
add
sbb
cmp
inc
addr16
cmpsb
add
lahf
in
xor
add
arpl
call
mov
pop
rorb
mov
enter
xor
jno
addl
in
call
fisttpll
add
pusha
jno
shlb
stos
arpl
mov
push
ficoms
push
lahf
and
push
sub
jg
lock
xchg
outsb
dec
shll
lret
das
adc
xor
and
or
mov
sub
es
pop
rol
mov
xchg
add
push
add
decb
sbb
cs
mov
mov
aaa
mov
jecxz
lahf
stc
pop
aad
xchg
neg
outsl
gs
out
jbe
sub
mov
cld
adc
mov
mov
lds
jbe
shll
lahf
addr16
pop
test
lret
ror
lock
mov
lock
aaa
lods
or
sub
push
test
xor
mov
insl
dec
fstpt
pop
inc
fdivl
push
mov
pop
mov
cmp
sbb
add
daa
in
andb
movsl
push
out
scas
or
into
aas
jecxz
and
clc
stc
xor
adc
call
cmp
rclb
mov
test
cmpsl
ljmp
outsl
xor
push
pop
mov
mov
push
add
adc
jecxz
or
sbb
ljmp
inc
shll
stc
jl,pn
jl
jl
fs
xor
mov
sti
push
call
icebp
inc
or
bound
ret
mov
mov
call
pop
jle
fisttpll
outsb
and
push
jae
lahf
add
hlt
jnp
rcrl
lret
rclb
aad
add
lods
bound
mov
idivl
les
sbb
jns
add
push
call
lods
xlat
mov
gs
lds
lret
out
add
push
xchg
neg
das
mov
je
xchg
popa
dec
pop
cmp
testl
imul
std
add
sub
push
fldt
jp
push
ds
push
cld
insl
push
das
mov
lret
inc
aam
std
test
xchg
popa
pop
and
mov
clc
popf
cwtl
cmp
and
pop
lea
in
subl
xchg
les
pop
cld
movsb
add
leave
pop
arpl
fldl
test
fidivs
pusha
jg
das
mov
cmp
imul
ret
imul
inc
and
cmc
jne
push
xchg
call
mov
inc
std
movsl
pop
int3
andl
pop
adc
call
mov
in
and
push
lock
movsl
int
push
out
mov
xlat
inc
jno
fistps
dec
pop
mov
and
push
push
and
mov
xchg
mov
xor
mov
add
ret
mov
dec
push
mov
sub
xchg
mov
adc
popl
popa
xor
iret
imul
test
cmp
hlt
cli
xchg
mov
jmp
dec
and
mov
out
ret
push
xorb
push
jne
addr16
sbb
jno
mov
nop
mov
jp
pop
ja
mov
cld
and
lock
push
push
out
and
xchg
or
mov
dec
mov
dec
ret
adc
iret
repz
pop
dec
xor
in
lahf
out
movlps
lret
xor
cmp
icebp
insb
loop
dec
dec
inc
push
xor
clc
push
inc
sbb
inc
out
gs
popf
bound
mov
push
push
int3
sub
bsr
jne
xchg
mov
fldcw
inc
fbstp
shr
sbb
pop
or
fimull
push
es
inc
js
cmpl
daa
or
push
push
add
dec
outsb
loopne
mov
mov
es
cli
cmp
test
cmpsb
subl
mov
lods
mov
loopne
xchg
jo
push
in
testb
in
mov
add
adc
int
in
imulb
and
imul
movsb
mov
stos
cmp
and
outsb
mov
sarl
xchg
imul
and
pushf
arpl
stc
and
ds
ds
cmp
pop
or
sbb
jno
or
ret
popl
addr16
hlt
xchg
mov
adc
stc
pusha
push
andl
cmp
lahf
xchg
int
jo
enter
mov
xchg
adc
dec
les
xchg
pop
call
movsb
jno
or
or
ja
mov
std
loop
sub
xchg
outsb
leave
adc
sahf
jb
xor
xchg
cmp
arpl
dec
cmc
test
movsl
jp
orl
into
les
sbb
mov
sbb
aam
aam
mov
xchg
repz
movsl
sub
frstor
aam
addl
inc
fmulp
xchg
sahf
mov
mov
mov
jae
pop
cmp
cmpsl
dec
mov
daa
lret
fcompl
lret
int
imul
test
hlt
jecxz
push
add
int
or
inc
ret
sti
aaa
mov
and
push
or
xchg
fwait
icebp
popa
mov
aas
nop
pop
data16
jnp
add
push
test
mov
mov
icebp
sahf
add
lret
aam
ret
jge
lock
add
mov
jl
sub
pop
inc
or
xchg
inc
int
and
cmc
dec
push
add
add
dec
xor
sub
cmp
movsl
add
jb
or
or
cld
test
or
shlb
cld
adc
dec
jl
std
sbbl
adc
loope
xchg
xchg
inc
mov
jecxz
mov
mov
out
cmp
push
int
mov
mull
inc
insb
push
shll
mov
xorl
add
out
jno
add
adc
or
insb
scas
out
stos
iret
jbe
das
mov
int3
inc
or
jl
inc
adc
xor
pop
jle
xchg
mov
push
flds
outsl
jo
dec
sbb
lock
cld
mov
inc
push
xchg
push
jnp
loope
loope
push
ss
xor
cs
ret
dec
mov
lcall
pop
ret
inc
cltd
mov
xchg
popa
ss
fucomp
sbb
aam
out
xchg
sbb
dec
xchg
jle
inc
ret
pop
mov
jp
cli
int3
pop
inc
pop
xchg
jmp
xchg
pop
cli
negl
out
lret
mov
xor
sbb
xor
cld
js
inc
or
push
jo
adc
sbb
int3
pop
jb
or
into
cmp
lret
sub
fistps
shl
cmp
shr
movsl
cmp
ret
popa
cmp
jb
pop
shll
xchg
xor
dec
xor
iret
mov
jae
cmc
mov
sub
repz
lret
aam
xchg
out
fwait
xchg
inc
pop
add
pop
cltd
shll
push
or
ljmp
pop
mov
shl
test
mov
and
mov
data16
mov
mov
or
mov
call
mov
sahf
pop
xor
mov
nop
arpl
idivl
gs
cmp
hlt
pop
int
mov
adc
dec
pop
push
push
mov
mov
adc
sbb
lcall
data16
push
lret
mov
xchg
jnp
xchg
out
xor
and
into
lahf
fwait
jmp
sub
xchg
inc
pop
stos
call
sbb
les
cmp
jge
xchg
lods
imul
loope
sub
pop
mov
fmuls
test
js
outsl
xor
add
adc
lds
enter
xchg
pop
popf
xchg
testl
adc
in
scas
xchg
enter
test
push
push
ret
push
inc
cmc
movsb
mov
sub
rorl
jnp
and
repnz
cmp
addr16
sbb
xor
mov
dec
testl
hlt
or
push
loop
in
cmp
pop
add
inc
mov
sti
cmp
add
dec
push
xor
xlat
and
sbb
mov
cmp
out
clc
cmc
insb
sub
loope
jno
or
lahf
imul
in
aad
xchg
mov
xchg
sbb
mov
mov
xchg
enter
sbb
xchg
mov
push
sub
test
sbb
inc
xchg
fmull
out
add
sti
nop
pop
repz
rorb
jmp
jmp
sub
test
je
in
push
push
movl
dec
fwait
push
js
mov
loopne
fistl
push
movsb
cmp
imul
out
xchg
inc
lcall
pusha
popa
je
xchg
int
cmp
adc
dec
xchg
sub
xchg
push
adc
mov
or
and
aaa
imul
imul
enter
es
ds
repz
xlat
filds
clc
loope
dec
cs
ds
lock
and
add
jo
ret
xlat
mov
cmp
push
and
gs
incb
jo
test
insb
lahf
lret
shrb
push
lock
jle
jmp
mov
imul
jg
add
push
push
and
xsaves
stos
mov
test
add
push
mov
out
addl
popl
pop
fildl
or
pop
mov
or
xchg
adc
and
dec
cmc
pop
and
lds
jo
cmp
adc
nop
jl
mov
pop
add
hlt
mov
mov
or
mov
push
cmp
test
dec
stc
outsl
les
aaa
movsl
pushf
adc
out
dec
pop
ss
aad
sbb
mov
pop
aad
aas
scas
inc
xor
shll
mov
mov
jl
out
lods
loop
jno
adcl
gs
cs
outsl
dec
clc
adc
xchg
and
dec
jae
aas
inc
int
cmp
addr16
ljmp
add
stos
xchg
pop
jg
cmp
sti
popa
mov
jmp
out
cmpl
insb
xchg
adc
pop
loopne
punpckhwd
insb
ficoml
inc
into
pusha
rcr
adc
mov
adc
push
cmp
ja
pushf
loopne
adc
sbb
jg
adc
jle
lcall
inc
std
pushf
mov
lods
addl
xchg
xchg
out
hlt
ss
pop
mov
xor
enter
aam
inc
cmp
and
mov
sub
cltd
xor
adc
and
push
push
push
jb
fldcw
leave
xchg
aad
jl
lods
gs
aas
imul
push
ret
mov
cmc
mov
leave
sub
gs
push
sbb
fildl
mov
cwtl
cmp
lods
test
out
loope
mul
out
and
enter
xchg
int
pop
arpl
cwtl
repz
insb
or
mov
sub
jmp
xchg
inc
outsl
cmpsb
add
jb
dec
jno
fstp
push
xchg
xchg
adc
add
out
mov
aas
scas
cmp
sets
cmp
loope
bound
daa
adc
and
cmp
mov
in
outsb
adc
scas
add
sbb
nop
in
and
out
pop
or
add
inc
shll
test
mov
and
mov
ror
sahf
dec
outsl
pop
pop
or
pop
loop
popa
sbb
hlt
ret
loope
pop
addr16
jbe
aaa
in
jb
rcl
test
pushf
iret
lea
mov
insb
cs
and
and
outsb
add
sub
cmpsl
scas
mov
aas
mov
push
cs
push
mov
sbb
stos
dec
cmp
xor
inc
push
enter
jg
mov
dec
jge
jecxz
sub
insl
sub
pop
jle
cmp
xchg
popa
sbb
fwait
mov
jb
xchg
loop
sbb
xlat
xor
in
nop
jae
jmp
push
mov
xchg
pop
and
icebp
ja
jg
mov
jb
mov
stc
jnp
bound
in
mov
xchg
clc
jg
lret
push
dec
push
lods
insl
insb
dec
mov
and
cwtl
jge
hlt
bound
in
into
push
push
xor
inc
rcrb
mov
inc
mov
call
insl
jmp
xchg
in
xor
dec
arpl
mov
fsubrs
test
add
dec
dec
push
in
inc
jg
test
lahf
adc
in
ja
insl
sbb
aad
dec
cmp
cs
xorl
inc
scas
ret
pop
mov
push
mov
mov
es
cmp
sub
jnp
adc
jo
mov
cltd
sarb
in
mov
jl
bound
sub
int
mov
int
pop
test
cmp
pop
lock
dec
jmp
sbb
mov
jb
push
and
ret
cwtl
jge
popf
xor
mov
adc
les
inc
lcall
adc
push
mov
gs
ret
stc
ds
dec
cmp
insb
mov
jl
loopne,pn
fimull
sub
imul
inc
inc
jne
or
xchg
test
push
outsb
not
jmp
cmp
repz
pop
mov
nop
aaa
pop
gs
and
rcll
push
in
mov
and
das
ljmp
aam
out
cmpb
call
jno
dec
mov
lcall
jl
add
push
leave
mov
sbb
pop
sub
mulb
popa
mov
sub
jge
test
mov
fstl
das
enter
das
adc
mov
aad
es
pop
mov
fdivp
inc
dec
or
scas
cmpsb
movsb
mov
ja
jns
adc
leave
test
imul
add
or
cmp
test
addr16
xchg
cmpsl
imul
dec
adc
push
mov
roll
xchg
mov
sbb
cwtl
jecxz
cmpsl
cld
add
sbbb
jp
sbb
mov
call
mov
fucomp
dec
in
ja
inc
out
test
adc
les
in
mov
xchg
ds
mov
fcmove
hlt
sub
orl
bound
orl
fimuls
cmp
popa
cmc
xor
adc
or
dec
not
cmp
inc
fs
mov
in
out
ss
aaa
adc
push
xchg
loop
rorl
sti
fiaddl
inc
pop
sahf
dec
pop
xchg
mov
leave
ret
mov
js
add
pusha
mov
xchg
pop
lahf
fidivl
cwtl
idivl
inc
sub
and
movsb
push
iret
fs
and
xchg
jnp
dec
push
and
clc
fs
and
sbb
std
cmpsl
dec
cmc
and
or
cmp
ja
bound
adc
aas
outsl
dec
mov
add
addr16
xchg
jae
mov
outsb
xor
jg
mov
mov
fisttpll
imul
mov
and
jo
or
xchg
add
xor
and
cmpsl
cmp
push
and
dec
mov
push
shl
add
sbb
int3
sub
mov
sub
jmp
jle
xchg
jl
fistps
or
adc
dec
pushf
bound
call
iret
jo
test
insb
rcrb
gs
mov
into
mov
pop
xor
cltd
and
roll
cmc
aas
clc
dec
sarb
dec
iret
mov
orl
imul
and
mov
rcrb
addr16
lea
cmpsl
and
gs
icebp
in
push
or
mov
jg
xor
les
push
add
sbb
inc
das
sub
loop
jns
rcrl
leave
push
lahf
ljmp
pop
add
jmp
out
and
aad
and
shrb
jecxz
inc
jne
inc
je
sub
pop
sub
dec
jecxz
mov
movsb
or
pshufw
out
mov
imul
pushl
pop
jl
iret
cmpsb
sub
mov
adc
out
scas
out
inc
add
incb
imul
movsb
in
xchg
mov
lret
pop
lock
cmpl
adc
pop
sub
dec
push
dec
sub
mov
or
or
mov
xor
cmp
dec
enter
out
push
mov
out
repz
lods
pusha
jle
addr16
in
scas
mov
stos
jbe
clc
push
lret
cmpl
les
jbe
clc
mov
adc
cltd
cmpsl
jmp
mov
pop
cmp
cmpsb
push
mov
and
das
push
lahf
dec
or
shrl
or
movsl
lock
sbb
js
mov
pop
xor
into
fmul
dec
int
mov
enter
dec
negb
cmpsb
and
cmp
rolb
lods
and
divl
pop
inc
inc
jns
lret
rol
jge
mov
push
inc
dec
cmp
aam
std
inc
adc
and
int3
mov
add
mov
sarb
daa
mov
add
loopne
rorb
nop
xchg
mov
scas
fmuls
pop
mov
out
jle
ja
ss
call
out
cli
ret
test
rorb
btc
in
scas
cwtl
cmp
cmp
push
sbb
xor
push
jb
and
out
adc
add
jge
sub
sbb
dec
jmp
cli
mov
jmp
mov
adc
incl
inc
xor
pop
test
push
lahf
pushf
jg
movsb
and
out
stos
sub
mov
dec
sahf
dec
in
movsb
les
jnp
scas
mov
lds
and
mov
cmp
add
sub
push
cwtl
aam
mov
inc
pop
dec
xchg
scas
cmp
int
sub
cltd
jae
in
into
add
pop
mov
push
push
adc
js
in
pop
ret
xorl
mov
mov
push
jmp
mov
loope
aam
cmpsl
or
stos
dec
push
inc
cli
cmp
enter
fcmovb
lock
dec
mov
lret
jmp
mov
packuswb
push
ljmp
sub
shr
das
imul
xor
ss
sub
out
pop
addr16
ljmp
pop
sub
sub
cmp
cmp
or
jle
aaa
adc
iret
ja
xchg
lahf
shll
mov
mov
in
insl
inc
iret
adcl
push
dec
movsl
sbb
and
subb
loope
jge
or
aas
faddp
outsl
out
test
pusha
dec
addr16
scas
mov
enter
add
add
fcmovnb
adc
fidivrs
bound
and
ror
jbe
mov
iret
imul
mov
or
stos
pop
jl
mov
scas
leave
sub
mov
xchg
mov
aaa
movntq
xchg
mov
and
test
fsts
and
and
je
cld
pop
adc
int
xchg
clc
push
dec
aas
cmpsl
int3
mov
inc
scas
data16
or
mov
jbe
or
out
addr16
adc
or
adc
mov
std
inc
shll
mov
movl
out
dec
lret
push
jp
push
pop
lds
aam
jl
jp
dec
ret
inc
mov
gs
push
mov
xor
aas
mov
aad
dec
jp
jns
and
xor
in
shr
negl
or
clc
add
add
pop
pop
mov
bnd
lods
fwait
andb
nop
ficoms
mov
jecxz
cmp
sub
out
push
sti
scas
ret
divb
imul
int3
cmp
jbe
sbb
icebp
inc
and
pusha
out
sahf
mov
les
pop
jno
out
imul
inc
cmp
jno
cmp
fstps
test
and
lret
fsubr
imull
js
cltd
dec
push
in
lcall
pop
push
pusha
push
pop
mov
jae
stc
adc
leave
adc
stos
int3
mov
pop
out
imul
xor
cmpsb
notb
ss
push
lcall
stos
mov
mov
ljmp
push
mov
mov
dec
dec
stos
cmc
scas
sub
pusha
push
sahf
dec
fistl
imul
lea
js
sub
comiss
es
into
jb
mov
sub
shr
sarl
shlb
adc
jp
mov
bound
filds
mov
orl
mov
int3
gs
cmp
and
cltd
pop
nop
pushf
je
std
mov
pop
dec
xchg
jmp
fdivrl
xchg
push
jne
and
push
and
loope
inc
sarb
popa
daa
mov
les
mov
push
add
mov
xchg
xor
fbld
sbb
and
adc
jne
fs
sar
cmp
popf
pop
sub
xchg
xor
int3
cmp
pop
add
sub
fiadds
js
pop
mov
out
pop
push
pop
pop
lds
mov
insb
fcomps
dec
xor
push
push
fsubrl
sbb
pop
imul
int
out
lret
stos
pop
fildll
adc
push
mov
dec
mov
test
xchg
jg
in
cld
mov
and
aaa
ficomps
pop
add
mov
jmp
and
sub
cmp
sub
mov
add
cmp
push
sub
cmp
ret
movsb
icebp
clc
add
popa
out
sbb
pop
insl
xor
loopne
scas
lret
sti
ficoml
call
shlb
inc
sub
call
push
cmc
push
daa
inc
pop
cmp
out
test
lahf
sbb
scas
mov
push
jb
add
cmp
in
mov
xor
add
test
repz
divb
fisubrs
lods
xchg
xchg
insb
cmp
add
mov
out
and
sbb
nop
dec
clc
stos
iret
daa
insb
cmp
push
je
cmc
icebp
dec
push
push
mov
leave
lock
push
scas
pop
xchg
jne
cmpsb
out
jbe
xchg
sti
iret
ljmp
push
mov
xchg
pop
mov
push
cmp
mov
ljmp
insb
fs
popa
dec
mov
outsl
inc
ds
leave
fistl
xor
or
pop
lods
lods
push
jmp
add
push
decb
je
pop
jb
fistps
sbb
cs
lcall
and
ret
cmova
inc
add
dec
cmpsb
mov
imul
mov
mov
pop
dec
gs
lds
add
sbbl
bound
adc
enter
jp
xor
outsl
cs
jno
loopne,pn
sub
je
jno
call
mov
into
in
outsb
mov
into
mov
pop
jbe
sub
out
inc
mov
mull
or
fwait
data16
xlat
popf
lahf
in
cs
fildll
sub
insb
loopne
xor
dec
and
lods
loop
mov
iret
imul
mov
stos
pop
and
movsb
dec
xchg
leave
adc
fadd
test
jmp
fsubrs
push
fdivrp
popf
fistl
rcl
cmp
call
adc
in
mov
popf
sahf
push
add
insl
mov
scas
nop
xchg
or
push
out
mov
sbb
xchg
cmp
sarb
lahf
cltd
cs
nop
out
cmpsl
int3
pusha
fisubl
xchg
inc
arpl
dec
test
test
icebp
ret
mov
push
sub
adc
repz
lret
jecxz
es
jnp
je
daa
xchg
bound
lcall
mov
jmp
iret
fcoms
sub
iret
adc
push
push
add
scas
enter
mov
xchg
dec
jns
sub
popf
jp
ret
popa
or
dec
jp
add
adc
xchg
xchg
push
outsb
cmpsl
sub
xlat
in
sub
dec
or
outsb
dec
out
orb
movsl
cltd
jl
test
adc
jge
inc
mov
jge
dec
or
call
add
imul
sub
and
ss
mov
or
je
dec
and
cld
test
pop
fsubrl
cmpsb
and
fstpt
repnz
cmp
jl
sbb
shrb
test
imul
lods
xor
xchg
dec
or
fs
push
mov
adc
data16
aam
sbb
mov
mov
iret
push
xchg
cmp
xor
cld
nop
je
jbe
xchg
jo
pushf
cld
ds
sbb
cwtl
mov
incb
out
sub
mov
cmp
pop
cmpsl
movups
inc
mov
out
insl
inc
sub
lcall
out
pop
pop
ja
not
add
in
clc
int3
mov
arpl
popf
lods
arpl
sub
test
mov
mull
test
rorb
les
xorl
ror
or
pop
inc
ja
rcrb
pusha
sbb
and
mov
sbbl
sub
jns
test
pop
xor
xor
addr16
and
std
adc
mov
mov
dec
jmp
xor
sub
gs
jl
andb
jmp
add
dec
sahf
out
es
sub
push
fidivs
adc
sub
bound
faddl
ret
mov
subb
repnz
push
fdivr
pop
push
pop
mov
loope
add
push
pop
aad
cmp
mulb
movsl
addl
mov
adc
insl
movq
shlb
inc
xchg
dec
mov
push
mov
mov
ja
add
and
mov
rcr
sbb
cmp
pop
sbb
inc
and
mov
xor
push
cmpl
mov
leave
out
mov
lods
sbb
adc
mov
adc
push
xchg
add
imull
pop
es
push
in
callw
lret
mov
mov
push
nop
scas
mov
mov
or
push
test
std
mov
inc
popf
das
mov
adc
add
xchg
or
push
push
sahf
and
pop
sub
das
push
decl
mov
add
scas
repnz
sbb
shll
pop
jne
pop
cld
clc
inc
es
cld
push
add
dec
lret
push
bound
notb
out
mov
movsb
xchg
xor
mov
int3
mov
xor
dec
ss
pop
mov
dec
int3
xchg
dec
loopne
or
jle
je
aaa
push
ljmp
orb
std
add
jmp
adc
jge
jmp
xor
cli
mov
push
imul
imul
mov
sar
sub
ss
sbb
or
aaa
lods
sbb
in
bound
bound
push
xchg
sahf
jl
sarb
aaa
ret
call
mov
sub
in
movsb
cli
sbb
cmc
stc
xchg
in
outsl
dec
jp
add
out
xchg
and
mov
pop
test
and
shll
xchg
jbe
lcall
ds
imul
dec
push
lods
in
aas
jmp
push
scas
mov
aad
addr16
cmp
stos
jnp
mov
andb
lea
ficompl
jecxz
fstps
or
jge
xor
jle
test
pop
arpl
je
mov
out
leave
clc
lret
mov
lahf
cwtl
xchg
rolb
add
bound
inc
cmpsl
dec
insb
fdivrl
push
mov
sbb
mov
adc
dec
subl
out
lods
ja
sbb
popf
daa
fwait
jmp
mov
pop
addr16
xchg
cmp
out
dec
xchg
lea
js
clc
scas
push
enter
xor
ja
mov
pop
data16
daa
inc
pop
cld
cmp
shll
rcrl
popl
ret
std
cmp
das
mov
jge
pop
sbb
andb
mov
xchg
jle
call
dec
push
adc
inc
repz
in
pop
xor
in
ret
xchg
mov
fdivp
mov
and
cmc
pop
cwtl
jecxz
mov
mov
push
movsl
adc
cmp
lret
inc
inc
test
arpl
aaa
cmpsb
icebp
movsb
into
dec
jmp
shlb
xor
jp
lret
les
lret
cmp
outsb
xchg
adc
in
loop
or
test
sbb
mov
scas
shll
loop
mov
xor
stos
inc
movsl
rcll
mov
scas
out
repz
cli
xor
es
fcomps
mov
notb
or
inc
jo
sub
iret
iret
and
jmp
repnz
push
pop
xlat
and
and
sarb
adc
mov
fdivr
mov
nop
sbb
cmp
popf
fdivs
xlat
fildll
sbb
push
subl
sahf
insb
imul
mov
mov
and
sbb
dec
rolb
dec
add
shlb
cmovbe
pop
test
das
inc
and
xchg
scas
mov
pop
stos
fxch
rcrb
or
sbb
jnp
stos
mov
jecxz
xchg
lret
addl
sub
cmp
push
dec
jb
jmp
insl
pop
ljmp
loopne
mov
pop
das
xlat
scas
mov
outsb
adcl
mov
scas
orb
int
mov
out
jns
jnp
negl
xchg
sahf
jmp
cmp
sarb
loop
std
addr16
cwtl
hlt
insb
adc
jnp
test
aaa
jb
mov
sub
inc
int
cld
imul
xchg
and
add
mov
dec
lret
ret
cmp
jno
out
shl
out
sbb
mov
movsb
aam
out
ss
mov
mov
inc
jbe
daa
sub
sbb
mov
adc
out
pop
cmpsl
in
dec
rcrb
repnz
push
clc
cmpsl
imul
xchg
cmp
daa
aam
mov
gs
inc
dec
pop
jns
jno
mov
shrb
fstpl
sbbl
mov
orb
enter
mov
xchg
xchg
call
fstpt
rcrb
ds
inc
inc
push
aam
dec
icebp
xor
ljmp
and
xchg
mov
test
pushf
and
andl
inc
pop
scas
mov
mov
insl
xor
fdivs
mov
shrl
cs
cli
xchg
lods
cmpsb
sub
dec
xor
inc
inc
jo
and
sub
rcr
inc
lcall
jmp
jl
bound
mov
sbb
testl
sub
mov
mov
leave
repnz
jg
sbb
and
add
mov
push
pop
das
and
test
pop
inc
push
lods
xchg
mov
stc
jo
xor
or
outsb
xchg
iret
scas
xor
mov
idivl
lods
mov
and
push
xor
sbb
sar
dec
pop
leave
xor
mov
aad
pop
adc
xor
out
mov
stos
ffreep
pop
aas
jb
test
sbb
adc
add
dec
cmp
xchg
add
mov
mov
pop
shrb
adc
lret
and
dec
js
fdivl
ja
fimuls
pop
mov
push
int
inc
inc
or
inc
icebp
adc
push
shll
jb
idiv
leave
iret
or
cmp
jmp
frndint
push
xor
add
sub
loop
xor
push
xchg
pop
lea
pop
popl
loope
and
adcb
out
jo
clc
xor
repz
sub
iret
cmp
dec
repnz
mov
cli
sahf
loop
push
lcall
clc
stos
mov
dec
mov
cmp
xor
mov
repnz
push
test
mov
mov
sbb
adc
int3
push
stc
sbb
pop
sub
add
je
cmpsb
aam
fimull
fsub
xlat
icebp
divps
leave
cmp
add
push
pop
push
mov
mov
scas
lods
xchg
popa
stos
sti
adc
std
fisubrl
pop
out
or
hlt
pop
data16
std
inc
imul
popf
pop
jne
je
xor
cmpsl
lret
movsb
mov
adc
or
dec
mov
xor
into
testb
imul
popa
add
into
xchg
out
fidivs
in
cmc
clc
cmpsl
lret
call
or
jno
jbe
push
aaa
pop
push
arpl
test
xchg
outsl
dec
pop
dec
dec
shrb
pop
or
inc
and
dec
out
repz
fucomp
fbld
out
lahf
iret
xchg
pop
lret
rolb
add
outsl
les
stc
jmp
out
or
sub
rol
iret
test
jle
xor
mov
sub
jbe
adcb
clc
icebp
aad
lock
inc
stc
cltd
pop
xchg
dec
push
movsl
cld
inc
je,pn
movsb
xor
pop
sub
jge
xchg
shrb
jno
adc
mov
dec
sbb
lea
cmc
lret
inc
mov
jmp
or
dec
fwait
jbe
call
adc
xchg
inc
mov
test
or
sbb
lret
lds
les
add
test
push
or
and
jbe
jge
hlt
sub
int3
fs
mov
jno
pop
mov
jg
push
pop
pop
push
movsb
push
jecxz,pt
dec
js
repz
enter
jns
cmp
rcll
hlt
cmpb
test
sub
adc
sbb
xor
xchg
movsb
addr16
daa
xor
jo
repnz
repz
xor
add
jnp
cmp
idivl
mov
in
push
lods
jno
adc
mov
lcall
hlt
push
outsl
push
cmp
sbb
mov
pusha
cmp
mov
add
push
fists
sti
movb
cmpb
fisttps
sbb
cmc
push
adc
xchg
ja
test
mov
lret
cmp
test
push
pop
test
or
cmp
sub
je
sbb
test
fiaddl
dec
je
outsl
jne
ja
cmp
mov
loop
cmp
clc
dec
push
rorb
pop
test
jmp
fbld
adc
lahf
aaa
pop
mov
pushf
ljmp
stos
or
dec
push
jp
push
lret
mov
push
jl
jp
pop
adc
dec
cmc
dec
xchg
aam
dec
push
dec
jnp
mov
lahf
dec
inc
test
push
dec
sub
adcb
jmp
orl
jae
pop
mov
popf
lcall
rcrb
das
es
sti
mov
jo
add
adc
stc
sub
xor
mov
xor
in
loop
mov
xchg
adc
and
xor
aas
xchg
inc
dec
adc
push
iret
xchg
jnp
pop
adc
int
lret
xor
jg
movsb
or
stos
cmp
push
lods
lds
xchg
jns
mov
dec
lret
test
fstpt
xor
mov
or
test
lods
xchg
int3
enter
mov
xchg
mov
gs
jbe
into
inc
or
pushf
cs
test
xor
inc
test
ss
xor
data16
mov
pop
mov
mov
xchg
cwtl
inc
test
jbe
sbb
inc
cmpsl
mov
jne
sub
bnd
inc
cltd
xlat
roll
addr16
jbe
inc
dec
dec
nop
lcall
mov
xchg
hlt
clc
popf
repnz
sti
sti
loop
xor
dec
sbb
sbb
add
mov
adc
sbb
or
xchg
xchg
mov
test
mov
mov
leave
std
fstpl
test
loope
lds
lods
sarl
mov
pop
in
loopne
imul
xchg
pop
pop
dec
xchg
jle
out
add
inc
or
aas
dec
xchg
insl
push
xor
push
cmp
inc
fimuls
std
fmull
stos
jnp
jne
ja
ljmp
lods
int
frstor
lds
sub
push
pop
xor
cmc
adc
fisubs
subb
push
mov
cmpsb
bound
andl
repnz
lahf
pop
mov
push
dec
outsb
inc
rcr
out
loopne
cld
fiaddl
xchg
jecxz
add
dec
in
lret
sub
pop
or
or
movsb
jae
lahf
arpl
out
push
push
dec
shr
mov
ds
data16
test
sbb
pop
pop
sbb
sub
aas
cld
lahf
jecxz
lcall
out
shll
pop
clc
jns
and
mov
fdivp
je
push
arpl
cmp
daa
or
test
push
fsubr
loope
adc
sub
add
ja
xlat
imul
popa
jecxz
and
fucomip
lds
jbe
mov
or
fwait
mov
mov
mov
jmp
lds
into
adcl
rol
dec
dec
add
push
mov
xchg
mov
mov
dec
or
xor
bound
fbld
insb
mov
lcall
movsb
mov
mov
mov
mov
icebp
jmp
popf
inc
andb
jp
outsl
mov
ret
and
nop
or
ret
ljmp
pop
push
lahf
jle
leave
lea
dec
or
dec
movsb
add
cmovns
push
imulb
out
loopne
mov
jge
mov
repz
lods
or
mov
pop
mov
ret
pop
xchg
jne
stos
pop
inc
inc
xchg
gs
movsb
cmp
jb
pop
mov
and
or
adc
dec
mov
pop
imul
lds
pop
sbb
push
cld
add
push
mov
lods
shll
add
cmp
add
dec
mov
jnp
mov
xchg
je
fdivrp
inc
dec
ljmp
or
push
add
inc
sahf
mov
push
comiss
insl
rcr
mov
mov
cltd
cmp
daa
xchg
sub
loop
xor
test
mov
or
lret
xchg
dec
jo
jbe
xor
or
ja
inc
mov
mov
cwtl
loope
stc
pop
std
loope
jb
and
mov
push
cwtl
mov
stos
add
rorb
adcb
out
in
jp
push
nop
pop
insb
das
add
pop
dec
push
hlt
mov
in
mov
fsubs
lds
out
mov
or
push
add
repz
inc
inc
jnp,pn
or
xor
sub
loop
mov
insl
mov
pop
xor
xchg
dec
push
xlat
daa
xor
add
enter
push
imul
hlt
inc
xchg
orb
cmp
test
xor
cmp
mov
push
mov
negl
aas
mov
jb
xchg
jg
test
mov
inc
nop
scas
dec
pop
rorl
jo
xor
or
xchg
clc
dec
data16
arpl
mov
push
mov
pusha
mov
jge
in
push
xlat
fwait
popf
out
jno
adc
gs
fmull
push
test
jl
leave
movsb
leave
icebp
scas
and
add
movsl
mov
lods
pop
mov
into
pop
inc
sub
jne
ljmp
add
push
das
scas
test
push
ds
test
xchg
hlt
mov
jp
imull
dec
and
ficomps
cmpsl
jae
in
inc
inc
and
jl
lods
mov
shll
add
xchg
pushf
adc
or
rorb
inc
and
mov
mov
bound
shll
aas
mov
mov
cmp
and
and
pop
cmc
cmpsl
mov
std
lret
pop
add
jnp
test
push
inc
loop
and
sbb
sub
dec
sbb
dec
and
jo
dec
cld
mov
inc
inc
adc
addr16
xchg
and
xchg
xor
cmp
sub
push
pop
daa
xchg
aam
cmp
repz
call
mov
xchg
sbb
bound
pop
xchg
mov
mov
arpl
ret
or
outsl
pop
shlb
test
cld
fwait
adc
andl
leave
sub
lcall
xchg
repnz
aaa
scas
lods
inc
and
xor
iret
lods
addr16
pop
jae,pn
jns
fbld
sbb
out
imul
mov
std
stos
int3
popa
inc
test
dec
push
mov
popa
xorb
cmp
cmp
push
jmp
jo
out
inc
jns
pop
xor
cmp
int
mov
adc
fs
lds
dec
jg
lcall
mov
inc
sbb
out
mov
mov
dec
xor
jns
dec
add
data16
repnz
mov
sub
clc
ss
mov
cmpsb
fnstsw
dec
cmpsl
sbb
aas
out
add
inc
daa
testb
pop
push
test
push
inc
iret
jg
inc
repnz
aas
test
negl
iret
dec
imul
pop
rclb
jp
mov
jno
pop
mov
mov
nop
mov
adc
cli
loope
dec
pop
popf
imul
fldenv
mov
fistpl
inc
sbb
cmp
mov
mov
mov
adc
jge
mov
lret
in
adc
scas
lods
movaps
mov
jle
iret
or
repz
xchg
push
xchg
in
jg
adc
jno
and
xchg
jle
dec
scas
cmc
inc
inc
push
icebp
jns
repnz
jo
pop
imul
stos
mov
out
js
xor
test
and
push
inc
repz
and
pop
xchg
mov
lcall
xchg
cmovno
sbb
loope
dec
sbb
push
adc
jmp
cli
fs
fiadds
mov
notl
aam
int3
mov
fmulp
cmp
je
mov
xlat
insb
sbb
lock
sub
js
cmp
les
in
jns
xchg
push
xor
push
cmpl
rclb
movsl
mov
mov
cmp
in
inc
cmpl
ljmp
dec
fistpll
jnp
into
xchg
and
and
pop
test
jg
sub
jno
add
and
pcmpgtd
mov
insb
dec
pop
pop
cmp
mov
xor
sbb
loope
mov
adcl
int3
inc
jno
cmp
sti
mov
dec
inc
dec
mov
add
ss
test
pushf
out
ja
mov
test
shlb
push
xchg
dec
mov
inc
addl
imul
es
lcall
add
gs
arpl
mov
xchg
int3
js
sbb
movsl
insl
or
jno
inc
pop
pop
or
cwtl
call
hlt
ror
and
push
sbbb
ret
xor
sarl
enter
jno
insb
jp
lock
rolb
pop
test
inc
adc
jnp
aam
push
into
xor
popf
test
xchg
push
outsb
faddl
mov
ret
and
filds
icebp
jbe
out
inc
mov
push
test
pop
mov
jb
out
rolb
push
mov
xchg
int3
rcl
arpl
repz
ss
fsubs
data16
imul
test
mov
lods
pusha
mov
pushf
jae
jo
mov
ret
fstl
cmp
cmp
add
mov
jg
sub
int
sub
mov
or
enter
jns
mov
jne
aam
pop
xlat
add
lret
dec
cmp
lods
lret
push
inc
dec
pop
fadds
push
pop
jnp
jb
cmpsb
and
ret
clc
orl
stos
pusha
sub
add
push
pop
lea
and
out
call
daa
pop
ret
nop
adc
notb
js
fcmovnbe
imul
jne
jp
mov
jmp
add
fsub
xor
notb
jge
loopne
push
cs
dec
sub
jecxz
mov
pushf
push
out
insb
sahf
pusha
iret
mov
shl
test
sub
xor
popf
mov
mov
xlat
jmp
orb
mov
bound
xchg
mov
insl
pop
ret
lret
pop
lods
int
inc
in
mov
and
cmp
xchg
adc
pop
out
lds
hlt
inc
insl
enter
and
push
stos
lret
fwait
in
and
pop
fs
fidivl
jle
xchg
mov
sub
dec
lcall
adc
inc
add
inc
loope
dec
pop
or
js
push
sbb
sbb
xchg
lcall
xor
cwtl
jp
les
mov
push
pop
or
xor
cmc
stc
sub
aad
add
jg
mov
mov
jmp
sub
in
pusha
rorl
or
ss
sub
dec
mov
jnp
aam
outsb
or
clc
or
cld
nop
xor
push
imul
fsubr
add
inc
loopne
movsb
in
mov
ret
shll
inc
inc
mov
lods
xor
int3
jge
int3
movsl
bnd
jecxz
and
push
jmp
jne
jp
xor
sbb
lcall
jns
into
or
insb
sahf
adc
pop
inc
adc
xchg
push
shll
nop
orb
inc
lds
mov
loopne
dec
and
int3
fistpll
xor
mov
adc
xchg
pop
push
stos
mov
push
mov
jo
lods
jbe
enter
xor
test
or
xchg
ret
test
outsb
iret
pop
push
orl
xor
jp
mov
mov
subl
dec
pop
xchg
js
mov
aaa
cmp
sub
fcomip
xchg
cwtl
and
pop
subl
mov
pop
std
push
lods
jb
and
push
fnstenv
adc
shll
fstl
xchg
mov
les
into
mov
pusha
lea
xchg
test
add
fisubrs
inc
or
xchg
cs
adc
or
daa
and
fistps
subb
call
or
mov
lods
mov
pop
loop
ss
xchg
popf
lret
xorb
cld
inc
rolb
je
jecxz
and
xchg
das
popfw
in
daa
lock
lods
lahf
mov
cmpsb
frstor
lods
or
notl
int3
xor
loop
pop
mov
fsts
jno
jge
fisubs
push
sbb
aas
push
out
fucomp
mov
sti
push
shll
inc
fdiv
leave
push
or
sub
scas
out
add
sarl
mov
bound
dec
mov
cli
adc
shll
mov
jns
mov
jno
or
mov
or
push
mov
and
jno
imul
pop
popa
push
mov
decl
test
inc
jmp
clc
mov
cmc
lcall
je
add
xchg
icebp
dec
adc
rorb
dec
pop
loop
add
pop
mov
add
sti
push
mov
scas
and
lock
out
es
in
jno
push
cmp
cmp
and
test
push
xorl
repz
int3
dec
rolb
adc
cmp
cli
xchg
cltd
sub
clc
rcr
orb
mov
mov
jo
cli
lahf
cmp
mov
jns
xchg
xor
outsl
rcr
push
mov
push
push
movsb
mov
push
jne
push
cmp
ds
iret
bnd
bound
arpl
push
fcoml
push
lret
je
dec
notb
lahf
and
xchg
sbb
push
dec
popa
push
lds
jl
push
push
lds
fistpl
bound
jp
test
out
sub
in
mov
enter
pop
int3
pop
lods
addr16
xchg
sub
das
jbe
jbe
inc
ljmp
push
inc
in
sar
dec
mov
insl
inc
mov
mov
repnz
add
pop
lods
or
jae
in
divl
jae
cmc
dec
or
scas
inc
adc
popf
jne
dec
nop
dec
sub
xchg
mov
das
push
loope
adc
in
jmp
add
inc
adc
std
or
mov
and
mov
push
jo
int
es
notl
popf
fstl
in
push
or
adc
lea
xchg
leave
and
xchg
out
daa
into
into
icebp
sub
xor
in
mov
mov
aam
fs
xor
mov
mov
push
dec
jnp
xlat
mov
sub
icebp
lods
xor
imul
dec
pushf
pushf
jl
sub
dec
push
push
and
cmp
and
or
mov
popf
inc
mov
fcoms
and
push
repz
inc
cs
jns
insl
imul
fsubs
loop
aam
bound
xchg
shrl
mov
movsl
cmp
pop
xchg
divl
adc
push
push
test
or
loop
mov
pop
test
rcrl
adc
xchg
pop
ds
int3
adc
inc
sub
xor
pop
inc
addr16
lock
dec
mov
cmp
or
rep
cli
cwtl
xor
sbbb
inc
sub
jg
or
test
xor
cmp
pop
in
sub
loopne
aaa
jge
sbb
sbb
mov
lds
adc
in
pop
xor
cmp
add
imull
lds
or
xor
and
aam
fs
mov
jecxz
cmp
push
jg
inc
nop
push
mov
subb
or
mov
pop
lcall
idivb
clc
loope
bnd
cmp
fwait
mov
jmp
dec
shr
mov
mov
imul
xor
mull
shr
sub
insb
add
sub
iret
and
sbb
fwait
sahf
addr16
rcrb
cli
dec
insl
adc
add
in
cltd
fcomps
into
mov
lret
scas
fdivrs
movsl
sub
repz
out
movb
outsl
int3
or
fisttps
mov
mov
sbb
sub
add
sub
aas
inc
lcall
sub
sub
xor
push
add
pop
pop
or
inc
xchg
rcr
dec
mov
lds
arpl
push
rolb
jmp
loop
or
jno
xor
leave
test
int
sbb
xchg
shrb
cs
fcmove
shll
dec
insb
std
jnp
sub
inc
jns
adc
xlat
sub
icebp
outsl
lds
xor
scas
pop
jp
add
mov
push
add
ss
icebp
xchg
cli
shr
fsubp
and
mov
xor
dec
les
fwait
push
fchs
jbe
pushf
cld
pop
das
cmp
cmp
inc
insb
or
cmc
inc
push
ja
sub
dec
mov
divb
xorb
push
adc
leave
jb
adc
aad
or
int3
fs
imul
out
loopne
lods
cmpsb
or
in
mov
out
add
inc
repz
sub
mov
mov
jecxz
pop
call
lret
and
jge
push
push
lea
sub
int
inc
sbb
mov
sbb
push
dec
dec
xor
push
push
lods
stos
daa
mov
jbe
sbb
sub
push
dec
es
sahf
or
test
mov
iret
jl
popa
mov
out
jne
in
stc
shlb
sub
sahf
aam
mov
jp
jnp
outsb
xor
mov
fldcw
popf
dec
push
js
dec
dec
push
jg
mov
jnp
mov
sub
sarb
cmp
cmpsb
xchg
int
adc
stc
sahf
mov
jmp
popa
cmpsb
movsl
or
sbb
fldcw
fdivs
mov
outsl
xlat
jl
or
pop
dec
pop
xchg
adc
jns
dec
out
and
xchg
dec
inc
fldt
subb
mov
fmull
jecxz
outsb
pop
subl
paddusw
dec
fisttpl
jmp
adc
ja
jle
mov
adc
loopne
ret
mov
lods
push
xor
shrb
push
push
sbb
shll
rcrb
dec
xor
scas
add
int3
sub
push
and
push
ret
adc
jl
sbb
sub
in
dec
addr16
loope
inc
rorl
jge
mov
and
lret
jmp
call
dec
hlt
adcb
push
mov
pop
addr16
jmp
mov
xchg
movsl
jge
dec
adc
in
test
sub
push
int3
xchg
aaa
fcmovu
lret
or
sub
pop
cmp
xchg
das
xchg
insb
testl
adc
pop
or
cmpl
gs
ja
fdivrl
pop
insb
in
into
push
xlat
cmp
inc
fisttpl
jae
xlat
jo
inc
popa
mov
pushf
and
cmp
mov
aas
xchg
stos
pop
xor
jae
dec
sub
mov
outsl
mov
push
movsl
scas
cmp
xchg
stos
lret
fdivrl
push
aad
fidivrl
or
xchg
iret
inc
insb
push
mov
scas
add
cwtl
clc
cvtdq2ps
js
push
mov
and
repnz
mov
movq
xor
xchg
lods
xchg
loop
je
jecxz
out
pop
xlat
xor
or
pop
pusha
jl
dec
xchg
aaa
outsb
pop
aas
dec
push
adcl
push
negb
jle
in
jns
rorl
cmc
sbb
adc
dec
xor
mov
into
mov
add
mov
stc
xor
cmpl
xchg
int
mov
test
std
bnd
sbb
fcmovnu
mov
daa
mov
mov
ret
add
push
js
or
xchg
or
push
mov
ficompl
repz
mov
lahf
and
lock
pop
add
push
dec
xor
adc
mov
popa
cmpsb
add
jb
dec
push
orb
push
pop
push
and
ret
dec
and
push
cmp
xchg
xchg
jb
dec
or
sub
jnp
pop
pusha
xchg
je
fldl
xor
lcall
inc
das
int3
mov
faddl
and
inc
inc
rcrb
mov
sbb
xor
xor
cmp
pop
cmp
movsb
jmp
push
cmp
push
adc
scas
dec
mov
xor
cmc
bound
ds
xchg
or
enter
or
dec
dec
jno
mov
or
xor
xchg
jmp
mov
ds
imul
ss
xor
pop
shrb
adc
and
dec
mov
rolb
movsl
stos
pop
push
xchg
pop
dec
std
and
cltd
push
mov
cmp
aam
add
inc
push
jle
sub
dec
jae
push
jmp
repnz
inc
ss
or
sub
push
repnz
push
mov
pop
xchg
stc
xchg
jp
les
ljmp
stc
ds
mov
lcall
cmp
arpl
pusha
movsb
dec
addr16
mov
cmp
add
jae
iret
lock
out
mov
cmp
test
lcall
loopne
jp
xchg
sti
and
mov
sub
filds
mov
cmp
cmp
or
aaa
sbbl
xor
ffree
push
pop
mov
js
xchg
cld
mov
cmp
pop
xchg
mov
sti
push
scas
in
repnz
movsb
cmp
lcall
sti
dec
mov
out
pop
fidivrl
xchg
mov
and
enter
stos
jge
icebp
addr16
inc
lods
ljmp
mov
xor
movsb
xor
jae
and
add
mov
xorb
xchg
cmp
out
call
repz
adc
adc
pop
or
pop
aam
test
stos
in
out
xchg
mov
push
lea
mov
cmp
sbb
pop
call
sbb
mov
daa
sub
cmpsb
cmp
shrb
js
imul
inc
jb
btc
pushl
push
into
lret
fstpl
mov
mov
lret
push
and
push
fidivrl
cmp
es
addr16
pusha
push
push
jl
nop
lcall
xor
and
lds
cmp
call
cmp
sahf
jg
xor
imul
jb
sbb
cs
cmp
sub
test
stos
pop
pusha
pop
xchg
jno
jge
std
xor
mov
mov
push
mov
xchg
test
repnz
cmp
push
push
pop
sbb
mov
pop
xchg
xchg
sbb
fucomip
in
push
xorl
adc
cwtl
inc
mov
sub
data16
or
pop
lret
leave
jl
in
dec
imul
fldenv
outsl
shll
pop
inc
ss
hlt
ja
lret
loop
xchg
push
cli
push
xchg
mov
out
popf
and
addb
stc
in
fucom
mov
aad
xchg
lea
mov
or
xchg
dec
push
lea
stos
push
fisttps
andb
fdivp
or
dec
js
dec
pop
inc
dec
jae
mov
xchg
jmp
sbb
mov
sub
fildll
popf
popf
je
mov
test
mov
call
cwtl
data16
rcll
mov
gs
ret
sbb
adc
test
aad
xor
inc
jge
rclb
cltd
fsub
gs
or
cmp
mov
adc
in
js
movsl
mov
pop
sbb
inc
xchg
xchg
fs
in
sub
xchg
mov
adc
ja
cmp
lock
xorl
cltd
aaa
fsubr
aam
pop
mov
ss
dec
sub
je
mov
mov
pop
dec
adc
or
pop
loop
cmp
dec
rcrb
xor
xchg
add
dec
push
mov
add
pop
or
or
sub
sub
sbb
push
out
das
pusha
and
fs
popa
sbb
ljmp
mov
cmp
outsl
fwait
es
pop
pop
cmp
dec
sbb
ds
xchg
mov
mov
addb
sbb
les
pop
test
and
bt
aam
in
cwtl
imul
push
pop
mov
jge
and
lret
or
inc
cs
jg
rcll
xchg
adc
movsb
mov
or
data16
cld
mov
ljmp
arpl
cmp
mov
addl
push
ja
mov
push
stos
std
insl
dec
js
test
pop
inc
mov
scas
loope
notb
sub
loope
add
adcl
aad
mov
subl
mov
inc
addl
leave
xchg
in
or
shr
sub
inc
orl
cmp
mov
test
add
out
sub
jl
jg
fucomip
or
and
lea
mov
jp
ss
jbe
or
add
cli
hlt
mov
fisubl
cli
adc
mov
lret
mov
gs
sbb
mov
lds
pop
lahf
mov
es
repz
mov
daa
push
add
shl
pop
fsubrl
jb
xlat
jecxz
sbb
fsubrl
mov
daa
lds
iret
push
xor
addr16
std
pop
mov
in
popf
mov
inc
lods
push
add
cmpl
inc
mov
mov
mov
stos
sub
pushf
sbb
negb
fisttps
dec
push
xchg
mov
lret
pop
das
or
jp
or
pop
ds
addb
aas
push
sub
and
adc
push
repnz
aad
stos
adcb
dec
jecxz
out
movl
lods
cmp
testb
jmp
push
jp
cmp
xchg
dec
jecxz
test
jl
mov
add
hlt
and
or
jo
mov
mov
pop
out
fs
lock
icebp
call
inc
pop
das
hlt
ss
or
jbe
pop
sahf
ret
sbb
adcb
lods
lcall
and
mov
repnz
insb
dec
dec
jle
rcll
or
inc
aaa
js
adc
cmp
adc
push
lods
pop
pop
clc
stos
push
inc
xchg
dec
push
aam
push
mov
aaa
or
and
sub
stos
leave
frstor
sub
or
pushl
int
test
stos
addr16
popf
mov
mov
jns
data16
fistl
xor
repnz
jecxz
hlt
stc
enter
out
and
or
fwait
aad
mov
stc
ret
mov
inc
or
ljmp
add
mov
stos
cmp
mov
outsb
adc
mov
imul
in
inc
fcompl
and
and
fcoml
rolb
xchg
xor
sub
or
and
push
mov
dec
cmp
nop
cld
cs
jl
icebp
and
addb
mov
or
shll
inc
addr16
pop
gs
push
push
xchg
and
or
aam
and
sti
idivb
std
mov
dec
sti
faddl
shrb
jecxz
jno
and
pop
shrb
jge
addb
mov
stc
out
lret
aad
jge
int3
dec
push
cmp
cmp
in
dec
aas
fnstsw
mov
fldt
adc
cmp
sbb
fwait
sub
push
mov
push
push
imul
loop
xchg
pop
mov
sbb
in
mov
xor
pop
sub
dec
stos
loope
fadds
ret
mov
call
test
jle
sbb
lods
adc
push
in
pop
pop
pop
stos
pop
cmc
test
pusha
cmp
je
imul
ljmp
clc
dec
test
mov
mov
push
repnz
xlat
xor
mov
ret
cmc
add
fucomp
jmp
out
xchg
fisttpll
xor
jmp
mov
mov
jle
jg
pop
inc
in
shr
adc
aam
lods
std
pop
push
mov
mov
push
or
mov
xchg
sbb
daa
add
stos
xor
dec
into
xchg
mov
mov
add
sbb
and
cmp
jnp
hlt
cli
movsb
jp
jecxz
pop
out
ljmp
pop
pop
idivb
aad
loop
add
inc
pop
and
adc
addr16
push
mov
insb
sbb
aam
clc
xor
cmp
sbb
fwait
test
mov
mov
mov
ljmp
shrb
pop
fdivr
aas
popa
les
push
add
and
mov
mov
xchg
dec
dec
cmp
push
add
sub
cmp
mov
imull
xchg
cli
leave
rcr
mov
and
jecxz
ret
push
scas
mov
cmp
sbb
movsl
xchg
out
sub
xchg
cld
dec
dec
repnz
imul
mov
ficoml
jecxz
cmp
inc
cmpxchg8b
out
xchg
push
adcl
dec
ljmp
in
cltd
popf
ds
call
jns
or
dec
add
sti
or
add
adc
hlt
mov
imul
jns
sbb
ret
sbb
pop
pop
mov
sti
cmp
jb
inc
xor
mov
cli
mov
outsl
insl
ffree
push
add
fs
mov
lret
loope
inc
mov
jl
mov
in
sar
jp
jge
clc
lea
cli
sahf
aam
cld
in
adcb
xor
pop
xchg
jmp
testb
cld
aam
push
lret
mov
imul
movsb
inc
andb
add
and
sbb
push
addr16
adc
aam
cli
js
mov
cmpsl
cmpsb
or
repz
cmpsb
dec
cli
mov
cli
inc
leave
js
jg
adc
adc
sbb
xor
lock
push
dec
xchg
adc
sbb
jne
pop
pop
int
xchg
js
addr16
addr16
push
aad
ret
add
jnp
ds
mov
add
inc
mov
cld
shr
stos
jle
push
addr16
jmp
ret
rolb
lret
mov
pop
mov
sub
push
test
insb
sbbl
out
fdivp
fsubrs
aaa
mov
insb
or
fisubrs
insl
pusha
mov
lret
fsubp
sub
sub
xor
test
faddl
test
and
lods
jl
jge
or
js
js
mov
repnz
loop
push
inc
mov
push
into
jecxz
daa
adc
movq
es
xor
punpcklwd
or
mov
mov
jno
xchg
rorb
movsb
inc
call
pushf
stos
aad
pop
ds
divl
shlb
sbb
js
cmpsl
outsb
adc
add
fs
repz
push
cmp
xor
push
adc
pop
mov
and
mov
sbb
sti
mov
cmp
cmpsb
sub
cmpl
and
sub
jae
cltd
mov
sbb
mov
cmp
adc
cmp
pusha
fisubs
mov
outsb
sahf
pop
inc
int3
imul
lret
and
cmp
xor
test
test
mov
mov
cmp
cmp
movlps
repz
add
cmpl
jns
movsl
mov
ficoms
cmp
fbld
or
xor
sbb
fimuls
sub
xchg
in
push
lods
fcom
out
lahf
iret
push
cmp
shrl
scas
inc
push
clc
mov
add
sbb
icebp
mov
lds
aam
fs
cwtl
mov
icebp
cmp
fs
mov
cmpl
sub
mov
xchg
loopne
jmp
nop
xchg
shrl
daa
xlat
add
adc
jo
shlb
inc
jns
loope
mov
mov
or
sub
ror
mov
bound
cmc
aam
dec
test
sbb
test
loopne
test
iret
icebp
cmp
ret
and
cli
inc
sub
lahf
lods
mov
dec
mov
xor
adc
loope
push
out
ret
std
call
or
testl
inc
lret
repnz
mov
aaa
lods
enter
xor
mov
int3
fnsave
imul
call
fs
dec
mov
mov
add
repnz
mov
mov
sahf
pop
cmpsb
inc
sbb
movsb
lods
addr16
mov
addr16
or
pop
cs
pop
or
mov
aam
ficoms
inc
pop
xor
sbb
pop
xorl
sub
lcall
mov
pop
int3
cmp
arpl
inc
or
add
inc
cltd
and
xor
pop
mov
das
and
ja
call
jecxz
stc
jmp
mov
cmp
xlat
cwtl
repnz
in
shll
ds
mov
sub
movl
mov
aaa
sbb
push
fs
push
pop
mov
jae
mulb
adc
ljmp
jb
cmpb
sbb
xlat
mov
pushf
sub
and
mov
mov
lahf
xlat
mov
loopne
mov
loope
mov
incb
ja
je
shl
frstor
mov
push
or
aad
imul
and
lea
lahf
sub
jmp
dec
sahf
subb
sub
aam
je
and
cmp
jns
insl
mov
mov
imull
imul
loopne
cs
rolb
xchg
push
inc
rorb
dec
inc
mov
out
mov
dec
outsl
xor
subb
stc
rcrl
sarl
or
scas
in
test
mov
mov
or
push
sub
pop
imul
and
xor
cli
dec
jns
mov
pop
out
std
cmp
sub
daa
push
mov
fcomi
sti
jge
and
sti
xchg
mov
cli
dec
call
xor
adc
inc
movsl
mov
sahf
ror
sbb
sbb
iret
sub
out
sub
int
adc
mov
pand
cmpsb
std
sbb
iret
dec
xchg
idiv
aaa
shll
adc
dec
decl
repnz
rclb
lds
cmp
and
mov
das
jp
and
pop
lahf
pop
mov
fucom
cmp
adc
xor
test
pop
inc
or
jb
sbb
loopne
xor
mov
sbb
call
movsb
dec
mov
sti
sbb
pop
xchg
roll
xor
lea
dec
mov
lods
out
and
inc
push
jns
or
ss
sub
out
stos
stos
fildl
dec
and
daa
shlb
xor
xor
mov
fbld
and
sbb
push
rcr
insl
ret
scas
dec
scas
into
add
addr16
in
cli
push
and
int
test
aad
mov
stos
xlat
sbb
mov
xchg
push
pop
call
mov
ja
add
adc
imul
ficoml
movsl
push
xor
roll
mov
mov
cmp
faddp
and
jg
pop
fs
jg
xchg
lea
mov
mov
adc
xor
add
test
or
dec
jle
mov
bound
jno
jo
pop
xchg
pop
mov
xchg
jnp
inc
xchg
es
adc
pop
out
mov
dec
cmp
fimull
mov
xchg
or
mov
cs
ror
xor
fsubs
inc
dec
es
sub
add
pushf
incl
xchg
inc
add
stos
nop
pop
test
mov
and
in
sbb
dec
push
stos
xchg
adc
xchg
mov
out
das
xchg
inc
sarl
or
push
mov
cld
enter
add
ret
mov
mov
data16
sub
js
out
repz
add
jg
pop
sub
lret
imul
jl
xchg
jl
adc
rorl
mov
ljmp
lahf
loop
pop
sub
sahf
or
hlt
push
mov
mov
mov
inc
std
mov
sahf
push
cmp
test
pop
fucomp
popa
cwtl
push
stos
pop
cmp
sub
jg
ret
add
push
loopne
pop
cltd
sub
dec
aaa
mov
push
popa
stos
sub
mov
lret
addb
scas
in
ja
or
inc
inc
sbb
jae
and
jecxz
push
sbb
out
mov
into
repnz
test
xchg
sub
or
aam
lret
pop
xchg
xchg
out
mov
rcll
mov
pop
cld
cltd
enter
xor
mov
xorl
xchg
xchg
jb
rol
in
aaa
sbb
repnz
jne
xor
call
adc
pop
leave
in
outsl
cmp
jp
fwait
inc
int3
jbe
add
cmp
jae
cwtl
sbb
xchg
lcall
stos
push
dec
enter
push
adc
sarl
ss
orb
pop
mov
mov
xor
andb
xor
cltd
jne
shrl
mov
insb
jns
dec
icebp
push
dec
cld
cld
rcl
std
int
popf
das
cli
pop
vpsrlq
cmpsl
pop
enter
jp
mov
sub
push
in
add
insl
in
mov
jge
push
xor
mov
adc
xchg
cmp
sub
or
insl
pop
cmp
lcall
addb
cmp
pop
and
pop
sahf
out
ret
jmp
dec
cmp
fstpt
add
pop
cmp
pop
jb
cmpb
cld
gs
push
clc
loope
lret
stos
push
sbb
jmp
pushf
and
xor
andb
push
ja
loop
jmp
add
xor
loopne
popa
jl
daa
outsl
enter
and
hlt
xor
mov
jbe
mov
cld
or
xor
or
stos
fidivs
rorb
movsb
xchg
out
xor
or
jo
faddl
mov
xor
loop
aam
pop
jo
in
mov
les
std
add
adc
leave
inc
pop
push
mov
mov
and
inc
sbb
mov
pop
cmpb
cmpsb
xor
push
bound
or
xchg
or
inc
pop
inc
int
and
shlb
out
imul
jb
std
loopne
adc
std
cmp
nop
sub
sti
push
push
xchg
add
jecxz
imul
cmp
fwait
pop
inc
ds
mov
shlb
iret
xor
jbe
inc
das
fildll
and
aad
and
test
in
fsubs
popf
push
adc
sbb
ss
dec
loopne
inc
pop
repz
shl
mov
inc
rcrl
loope
inc
mov
in
dec
jmp
popa
mov
scas
cmpl
jg
adc
xor
xchg
stos
dec
fmuls
add
xor
ficomps
xchg
xchg
arpl
jne
outsb
mov
ret
sbb
push
shlb
enter
movsb
int3
lahf
insb
mov
jo
icebp
xor
lea
mov
in
cltd
scas
sub
test
jb
jecxz
pop
push
inc
addr16
imul
mov
dec
dec
in
rolb
test
mov
mov
shrb
call
jle
movsb
int3
cmp
popa
addr16
sub
or
sub
pop
imull
xchg
mov
xchg
lret
sbb
daa
sahf
jns
das
push
aam
in
call
and
mov
lock
lahf
jle
fdivl
cmp
sub
in
daa
add
add
push
mov
jmp
call
add
popf
mov
cld
mov
in
lahf
sub
push
or
sub
daa
test
lret
add
or
loopne
daa
inc
and
je
lds
xchg
cmp
push
cwtl
adc
sub
mov
daa
pop
cli
mov
in
adc
aad
inc
sahf
and
mov
das
push
xor
repz
lahf
in
dec
mov
jle
bnd
mov
inc
xor
cli
ja
addl
cmc
cld
ljmp
pop
xchg
jne
pop
xchg
jle
insl
add
aaa
inc
popf
fwait
subl
mov
sub
adc
push
dec
dec
adc
jp
lods
add
xchg
movsl
inc
inc
cwtl
xchg
pop
dec
mov
inc
cmp
xor
scas
fs
arpl
cld
nop
test
ret
inc
sbb
push
pop
loopne
sbb
xchg
xlat
fildll
out
fildl
lret
adc
xlat
das
cld
insl
andb
in
push
imul
jecxz
and
adc
or
dec
sub
aam
adc
insl
mov
xchg
aas
cmp
jle
adc
mov
int3
nop
inc
hlt
xor
or
and
nop
dec
scas
lds
fstps
lds
sbb
dec
and
adc
int3
daa
add
mov
or
push
cmpsb
fcomps
lock
mov
ds
in
add
sub
jg
lods
je
xchg
push
movsb
jno
fidivl
sbb
dec
enter
lret
mov
push
and
xchg
loopne
jns
cmpsl
adc
add
movsb
js
cli
mov
movsb
jae,pt
lds
shlb
andl
push
sub
sahf
xor
inc
in
test
out
orb
maskmovq
testl
xor
pop
mov
pop
lret
mov
xchg
stc
push
test
dec
and
ds
or
ljmp
mov
pop
shrb
clc
outsb
icebp
loopne
mov
jo
enter
jns,pt
insb
out
cltd
cs
test
es
jge
xchg
xchg
cmp
mov
push
pusha
mov
dec
adc
popl
dec
inc
jle
cmpsl
dec
mov
in
fmulp
mov
mov
sbb
out
mov
stos
fidivrl
jb
addl
lea
repnz
fdivrl
sbb
jae
call
xor
scas
rclb
das
sub
lods
xchg
icebp
fldl
and
mov
mov
dec
inc
jo
insl
clc
adcb
leave
sbb
adcl
negb
cli
cmp
sahf
cmp
or
icebp
lods
mov
ja
out
lret
mov
icebp
shrl
jns
jle
out
in
adc
inc
xchg
pop
fs
outsb
pop
push
xor
pop
xchg
mov
xchg
and
out
pop
xchg
std
fadds
sub
adc
mov
lds
mov
je
leave
and
bound
jb
mov
pop
cli
sbb
call
out
call
fdivrl
xchg
mov
mov
je
xor
add
push
les
addr16
and
xchg
adc
mov
lcall
stos
pop
int
mov
cwtl
cltd
cmp
jae
or
rcl
lock
jg
sub
jg
sar
mov
cmp
inc
iret
pop
cmp
jo
xchg
push
lcall
out
mov
fists
jbe
mov
pop
adc
xor
pop
aad
repz
dec
bound
cmp
xor
jg
lret
jle
mov
adc
lret
mov
mov
mov
xchg
in
cwtl
call
cwtl
adc
outsb
fmull
aam
dec
daa
or
out
jmp
dec
cmpsb
popa
mov
pushf
loopne
bsr
cld
xchg
xchg
or
push
cmpsb
gs
and
pushf
mov
jmp
scas
add
imul
xchg
push
out
mov
push
arpl
sub
jecxz
mov
adc
mov
mov
mov
iret
dec
cmc
cmp
adc
in
lea
push
xchg
push
xor
fmuls
jg
call
add
jo
jle
mull
adc
shrl
scas
jo
jecxz
dec
ret
pop
movsb
mov
iret
sbb
fyl2x
sbb
push
xchg
add
negb
std
mov
lods
insl
repz
pushf
mov
cli
cmc
out
inc
push
or
add
inc
mov
jg
aas
fsubl
out
mov
xor
scas
xor
ljmp
clc
adc
xor
pop
mov
cmpsb
lea
jns
aaa
ljmp
in
inc
push
xchg
fs
fadd
pusha
sti
aas
sub
cmpsl
mov
jbe
subl
adc
pop
aaa
les
adc
test
in
cmp
jbe
add
inc
or
addr16
int3
sbb
push
aaa
es
ss
push
mov
inc
push
mov
push
sbb
pop
inc
xchg
or
iret
jb
jo
cwtl
xchg
or
movsl
add
xor
scas
mov
xor
fldenv
and
mov
push
pop
lcall
push
in
inc
imul
leave
jg
leave
pushf
jb
loopne
or
jno
push
iret
aam
push
lds
in
jne
into
mov
into
add
shll
repnz
or
icebp
cmpb
mov
sbbl
rcrl
jg
test
pushf
call
xor
xchg
jb
push
imull
mov
jnp
decl
daa
cwtl
pop
in
push
inc
test
mov
add
xchg
jge
test
shlb
das
lods
fstpl
inc
sbb
imul
jl
dec
ds
xchg
adc
inc
stc
mov
ljmp
xchg
aam
ret
jle
jge
pop
pop
gs
sbb
or
and
or
mov
outsl
mov
repz
mov
stos
sbb
out
cmp
pop
push
dec
xchg
in
mov
shrl
sarl
adc
cmpl
rcll
sub
inc
stos
iret
addl
fwait
mov
xor
adc
cwtl
push
or
dec
add
mov
mov
lock
sbb
and
movl
aam
cmpsl
fidivl
mov
add
or
clc
xorb
push
data16
fcmovu
pop
push
xor
faddl
cmp
rclb
ja
and
inc
int
and
fists
ds
jg
cmpsl
cmovg
pop
add
push
movsl
adc
xchg
jbe
sub
xor
xchg
loopne
jecxz
fistl
add
add
push
dec
jb
mov
cmp
mov
push
test
les
lods
sub
jb
ret
fstps
xor
mov
push
push
repnz
xchg
add
jg
cltd
mov
fidivrl
lret
mov
mov
or
cli
jb
movsl
ja
dec
lds
push
jb
mov
clc
add
cwtl
ret
js
in
push
mov
sbb
sub
xchg
icebp
loopne
jle
push
ja
xlat
pause
arpl
out
fsubl
xor
push
into
adc
div
stos
or
mov
mov
adc
stos
pop
dec
sbb
mov
es
pop
or
xor
xor
mov
xor
pop
push
xchg
xchg
mov
add
or
push
and
pop
sub
dec
adc
mov
jmp
movsb
mov
mov
xchg
mov
adc
sahf
xor
pop
aas
mov
shlb
adcb
mov
test
test
movsl
daa
and
jg
inc
fsubrl
sbb
pop
dec
and
fcoms
cwtl
jo
shrb
ror
testl
test
mov
aad
mov
lods
inc
lcall
mov
xor
imul
fsubrs
fmuls
jp
lea
sub
sbb
and
dec
mov
xchg
mov
cmp
add
negb
lds
and
xlat
in
add
fadds
mov
jb
cmc
loope
pusha
xor
jp
pop
push
mov
push
xor
dec
xor
cli
out
xor
push
push
pop
xchg
xchg
sbb
push
inc
daa
dec
adc
lods
cmp
frstor
pushf
xor
std
in
mov
dec
lods
aaa
xorl
in
and
mov
jl
inc
add
pusha
and
or
fstps
and
pop
mov
inc
xor
arpl
sbb
lret
insl
inc
popa
mov
sbb
fstpt
mov
enterw
js
jp
jne
inc
dec
ljmp
loopw
xchg
sub
push
aas
repz
dec
push
sti
addr16
push
ja
inc
ja
lcall
das
add
out
dec
jg
addl
pop
imul
movsb
push
dec
or
test
inc
adc
hlt
leave
mov
push
or
aaa
repz
into
ret
pop
mov
bts
cmpsb
xor
inc
test
outsb
xor
mov
imul
jmp
ss
and
mov
in
orl
cmp
fcmovne
push
test
lds
push
jecxz
push
or
jp
push
popf
xchg
sub
stc
push
sbb
pushl
cmp
dec
jmp
push
lcall
mov
push
xor
ja
rol
je
out
mov
rclb
shl
ret
xor
es
push
daa
cmc
sbb
pop
stos
xor
pop
sbb
dec
mov
cmpsb
add
cmpsl
dec
cltd
push
pop
movsb
insl
test
ficoms
push
cs
sub
mov
imul
add
mov
adcl
jle
cmpsl
gs
les
mov
sbb
mov
cld
dec
jb
jne
shl
jecxz
adc
popa
or
cmp
fdivr
lea
inc
aaa
sub
jge
inc
popf
outsl
add
xlat
pop
decl
or
add
stos
fdivs
xchg
loopne
inc
inc
sbb
jge
inc
out
dec
inc
imul
sub
repnz
test
fadd
or
enter
lds
hlt
mov
mov
nop
mov
xor
lcall
ljmp
adc
jne
int3
add
push
jno
mov
lret
mul
orb
push
push
aas
stos
cmpsb
cli
mov
add
and
insb
ja
xchg
iret
cwtl
cmp
dec
mov
rcll
shr
bound
fbld
mov
lods
xchg
push
jmp
xlat
pop
inc
sbb
mov
mov
nop
jg
jns
data16
xchg
sahf
mov
aaa
inc
push
jno
leave
mov
jbe
xorl
js
sbb
add
dec
or
and
xor
ja
movsb
test
mov
jmp
ss
sbb
pop
leave
fdivrl
in
sbb
addr16
sub
pop
outsb
inc
popf
pop
lret
mov
pop
jb
fsubp
imul
xchg
adc
lahf
lahf
xor
add
in
test
jb
jp
or
xor
out
test
aam
xor
dec
add
in
fnstcw
xchg
push
dec
lahf
stc
inc
push
add
mov
xor
mov
pop
lock
sub
nop
dec
and
test
movb
sarl
inc
jo
daa
lds
xchg
mov
pop
scas
addb
stos
pop
adc
add
mov
fs
add
dec
push
add
ljmp
add
sti
lea
jecxz
dec
sbb
in
ret
es
xchg
pop
mov
aad
rcrl
sub
rcll
add
negb
aas
mov
jmp
cmp
xor
sahf
jno
mov
cwtl
jbe
stos
rep
adc
stc
inc
shll
mov
lock
loop
daa
int
add
sbb
xor
hlt
out
fadd
adcl
lea
imul
xchg
cwtl
or
push
popf
push
outsl
cmp
dec
test
gs
xor
scas
aaa
xor
lret
cmpxchg
and
xchg
test
mov
mov
mov
and
ret
mov
leave
mov
or
addr16
sbb
out
inc
jb
js
push
xor
lods
sbbl
cld
addr16
in
test
and
fnsave
sbb
or
cmp
stc
movb
ljmp
ja
out
jne
cmc
cmp
fwait
or
mov
stos
test
call
adc
jp
mov
fmul
sbb
or
inc
add
outsl
cmp
adc
mov
push
sub
icebp
cmp
cltd
push
pusha
enter
and
movsb
clc
test
mov
dec
sti
ja
sub
push
mov
inc
pop
dec
cmpsl
inc
pusha
in
in
ljmp
neg
ret
pop
jle
test
enter
scas
push
cmp
ret
movsb
int3
shl
push
loope
sub
cmp
mov
push
adc
fsub
jno
movsb
loop
icebp
mov
imulb
xchg
out
test
mov
mov
mov
mov
iret
arpl
mov
xchg
aad
mov
shr
sub
dec
sbb
cmp
xlat
mov
xchg
fwait
xor
mov
cmpb
es
add
xor
xor
fisubrs
pop
push
mov
push
cs
fistl
push
jb
in
or
nop
pusha
and
add
mov
sub
pop
jae
in
mull
push
fstps
sahf
jl
pop
cli
mov
mov
inc
fsubr
outsl
arpl
mov
lret
sbb
scas
sti
fsts
jae
mov
ja
dec
cmpb
cmp
mov
ljmp
pop
aas
push
mov
andb
movsb
mov
dec
push
mov
stos
clc
jno
and
out
mov
xor
dec
lods
ss
cmp
dec
xor
pop
dec
call
popa
dec
add
std
add
int
sub
push
incl
int3
lret
inc
das
outsl
pop
pop
lock
or
xchg
push
icebp
xchg
mov
jp
push
push
adc
mov
scas
jmp
or
add
adc
jp
enter
sbb
test
xchg
mulb
push
jne
out
ss
ja
je
lcall
add
jecxz
aas
jl
outsb
imul
dec
xor
mov
push
loop
sub
mov
lods
rcrb
ret
int
in
ret
in
xchg
xchg
es
jp
lret
add
decl
cmpsl
xchg
dec
movsb
mov
and
ljmp
pop
sarb
mov
mov
popf
mov
xchg
adc
push
das
mov
pop
adc
add
lods
xor
or
lds
fistps
sub
mov
scas
popf
mov
bound
xlat
mov
xor
int
cld
or
fsubl
ds
lret
cmc
popf
pop
sarb
out
xchg
jl
pushf
rcrl
stc
out
addb
mov
imul
jle
pop
pop
aas
fnstsw
stos
call
iret
inc
arpl
fimuls
xchg
pop
inc
iret
jnp
dec
dec
inc
mov
fdivs
inc
popa
cmp
jbe
cmp
xor
jge
or
icebp
sbb
sub
andb
cmp
sbbb
in
enter
push
outsl
sahf
xor
not
xchg
iret
sbb
gs
rolb
adc
adcb
pop
repz
out
push
add
daa
arpl
mov
iret
sbb
stc
fdivrl
ret
push
inc
sub
push
push
cmp
push
add
mov
or
adc
mov
mov
xor
imul
loope
jecxz
adc
clc
shll
dec
xor
dec
sub
rorb
xchg
pop
lahf
mov
xchg
out
sbb
mov
xchg
jg
sub
xchg
cwtl
push
test
lret
sbb
aad
jno
flds
pcmpeqw
jl
cli
sarl
dec
js
mov
icebp
popf
add
dec
leave
xchg
outsl
lcall
xchg
int3
inc
inc
movsl
sti
test
dec
pop
lret
pop
and
cmp
icebp
lods
sub
mov
pop
outsl
mov
mov
sahf
fisttpll
jg
arpl
jl
test
roll
in
sub
mov
and
aam
xor
roll
xchg
sbb
push
cld
inc
sbb
cwtl
add
adc
mov
jb
adc
rcl
dec
fistpll
cmp
repz
mulb
in
aad
and
fwait
into
dec
aad
fstl
in
push
popa
out
int
outsl
sbb
sahf
pop
inc
shll
sbb
lods
xor
addr16
stc
shll
jle
ret
js
mov
int3
jae
lret
scas
sbb
jmp
adc
mov
mov
sbb
adc
std
test
mov
sahf
pop
shl
into
jecxz
inc
mov
mov
cmc
bound
mov
push
enter
std
sbb
movsb
clc
mov
sub
fcmovbe
inc
mov
inc
xlat
dec
add
mov
inc
jl
sbb
and
xor
push
fistl
cld
push
cmp
dec
dec
sahf
xchg
xchg
int
subb
fisttps
rcl
cmp
repz
add
sarb
and
mov
sbb
cld
mov
xchg
jo
sub
adc
ljmp
rdmsr
and
idivl
mov
dec
lret
bound
xchg
jle
mov
rcll
addr16
xchg
outsl
xor
inc
ljmp
mov
cmpsb
push
add
hlt
inc
icebp
add
cmc
sub
sub
xorps
fildl
xor
insb
stos
out
fbld
push
inc
adc
shl
dec
and
mov
lret
mov
shll
cmp
cmp
stc
cmp
les
fidivl
bnd
mov
sub
cmp
cmp
lea
push
dec
xlat
js
movsl
pop
lods
pop
packuswb
mov
mov
gs
cli
add
test
es
stos
lahf
std
and
popf
les
cltd
test
dec
movsl
mov
popf
shl
or
shlb
xor
adc
addr16
push
inc
adc
lret
loope
add
sarb
mov
shrl
mov
scas
jmp
loope
cmp
sbb
inc
rcr
mov
dec
xlat
test
pusha
movsb
mov
cmp
aas
sarb
mov
dec
adc
test
imul
into
mov
incb
es
repnz
into
add
js
test
xchg
mov
xchg
mov
in
imul
xchg
pop
inc
ss
xor
or
mov
and
in
or
loopne
inc
xor
outsl
sbb
fdivr
aam
rol
rorl
or
dec
or
ss
loopne
daa
arpl
mov
mov
testl
push
fmuls
mov
shll
jbe
out
mov
lahf
mov
xchg
fbstp
mov
mov
mov
ss
inc
testl
lahf
sahf
ds
jbe
aaa
lds
imul
stos
mov
lds
fwait
add
movsl
loope
mov
pop
ds
les
mov
lds
into
daa
pop
push
fimuls
enter
xchg
push
xchg
push
stc
mov
push
in
cmc
aaa
fldcw
jecxz
and
xor
lock
pop
pop
mov
xchg
add
push
mov
insb
pop
xchg
push
push
sbb
sub
xchg
or
das
out
nop
movl
call
rorb
cmp
roll
xor
cmpsb
in
dec
loopne
mov
jp
push
mov
repz
bound
test
rcll
jnp
cmp
mov
movsb
dec
xchg
push
pop
fcmove
test
mov
and
add
stc
lcall
imull
mov
mov
sbb
addr16
mov
scas
or
mov
adc
pop
push
hlt
dec
imul
jg
sub
jno
fsqrt
imul
adc
ret
lret
mov
sbb
lcall
sub
inc
lods
cli
test
nop
or
mov
jnp
gs
bound
add
xor
and
call
test
inc
jns
xchg
add
cmpsb
push
ss
or
ret
repz
pusha
adc
pop
das
fldenv
pop
loopne
pop
insl
lcall
iret
cwtl
cli
inc
clc
xchg
mov
push
fsts
inc
je
gs
mov
bound
je
ja
push
inc
mov
shrl
aaa
mov
arpl
stc
mov
out
xchg
fnstenv
push
dec
mov
int
sarl
sti
mov
mov
and
in
nop
sbb
dec
sahf
pop
jns
xchg
lods
out
icebp
push
loope
cmc
inc
aas
sub
and
xor
jl
popf
adc
pop
push
inc
std
inc
add
pop
inc
push
call
xchg
sti
rcll
insl
imul
rolb
imul
push
subb
mov
push
cmp
nop
je
in
in
notb
das
or
xlat
sbbl
jnp
adc
sbb
divb
lahf
xchg
stc
mov
add
mov
cwtl
lret
mov
push
jl
pop
sub
mov
out
mov
gs
in
push
jge
mov
jge
push
jnp
mov
nop
mov
inc
or
add
mov
cmp
push
and
push
imul
pop
mov
push
rclb
mov
pop
movsl
cmp
push
jl
sub
adc
mov
sbb
adc
sbb
loop
adc
and
dec
enter
push
sbb
and
leave
in
xor
sub
jo
mov
push
push
hlt
jecxz
fists
inc
enter
jns
jp
stos
inc
mov
pop
or
mov
pop
nopl
mov
jle
jp
mov
andl
mov
push
xchg
sbb
in
stos
mov
aad
ljmp
lret
out
mov
fstps
repz
pop
repz
aas
mov
pushl
std
dec
sbb
lret
bound
xchg
fldl
xor
aam
imul
mov
fdivrs
mov
mov
cmp
sbb
lea
add
shr
lods
das
test
or
cltd
inc
lcall
xchg
or
cltd
mov
cmp
adc
xor
leave
ja
adc
stc
mov
add
clc
pop
jbe
in
mov
insl
dec
and
add
das
fsubs
ljmp
mov
out
mov
xchg
ss
je
push
repz
enter
mov
cmpsl
fldl2t
sbb
pop
fnstenv
cmpsb
pop
mov
sbb
cmpsl
dec
scas
and
mov
cmp
pop
loop
xchg
mov
push
sbb
and
xchg
push
jne
inc
dec
outsl
cmp
mov
movsl
cltd
addr16
lcall
lret
lret
and
or
outsl
loope
add
shl
push
movb
mov
fdivl
lock
xor
dec
inc
or
test
and
xor
xchg
and
insb
rclb
iret
inc
in
pushl
pop
ljmp
jo
adc
push
repz
mov
fisttpll
xlat
xchg
aaa
push
adc
js
aas
and
dec
and
cwtl
movsl
mov
pop
cmp
das
roll
std
sub
iret
popa
mov
mov
cmp
clc
cmpsb
xchg
sbb
ficompl
mov
pusha
insl
mov
mov
adc
xor
gs
clc
gs
fadds
inc
mov
dec
sub
push
scas
xor
pop
jae
xor
cwtl
fs
jp
cmp
push
sbb
imul
mov
repnz
cwtl
int3
in
inc
movsl
push
sbb
xchg
mov
jle
push
cmp
mov
lcall
jno
mov
push
xor
push
adcb
push
jle
test
iret
jmp
xor
xchg
adc
int
add
push
dec
js
and
mulb
pop
or
clc
cmp
not
jne
push
xchg
int3
sbb
push
xor
mov
add
jmp
xchg
scas
test
pop
sub
jae
sub
fsubrs
out
sub
scas
fcmovnb
xchg
and
adc
cmpsl
lret
push
xchg
fimull
sbb
fwait
negb
push
in
repnz
aaa
mov
mov
sbb
fdivl
sub
sarl
add
cs
fdivs
mov
and
adc
loopne
sbb
and
insb
inc
lds
das
and
inc
mov
pop
adc
les
dec
std
pop
in
loope
jecxz
div
dec
add
jae
jp
pop
xor
lock
and
push
cli
out
push
jb
ror
xchg
adc
call
cmp
aas
pop
or
loope
pop
mov
xchg
mov
adc
adc
jp
mov
ret
call
shlb
jno
imul
dec
ret
add
pop
and
inc
jns
or
mov
loope
out
stc
cmpsb
push
test
jne
xor
into
out
mov
inc
out
mov
sub
std
push
test
aad
cmpl
shl
and
pop
push
sub
inc
repnz
xor
jle
sub
mov
into
push
sti
decl
mov
outsb
in
pop
test
shrl
xchg
movl
adc
dec
inc
dec
sbb
into
aaa
adc
cld
push
sbbl
ret
mov
lods
fwait
dec
popa
inc
push
rcll
jmp
outsb
into
sbb
inc
es
sub
or
pop
push
mov
sbb
movsl
aaa
sub
mov
pop
jmp
jl
ljmp
and
mov
push
idivl
mov
push
sbb
jae,pn
lcall
sti
mov
sbb
pop
popa
xchg
out
sub
test
mov
adc
int3
inc
loopne
push
andb
mov
popf
jne
or
mov
testl
mov
test
stc
dec
fisubrl
cwtl
imul
adc
pop
out
lret
xchg
lea
jne
mov
lcall
add
loop
out
xor
fcoml
stos
pop
push
sbb
into
repz
cmc
pop
test
xchg
aaa
lahf
clc
mov
dec
ss
mov
outsl
notb
ficoml
pop
adc
and
xlat
movsl
inc
xsaves
jb
aaa
inc
pop
sbb
jb
mov
rclb
pop
and
cwtl
cmpsl
movsl
call
mov
shrb
xor
inc
pushf
pushf
out
in
and
mov
insb
dec
aaa
lods
push
or
js
push
enter
scas
jg
test
lods
or
lds
clc
psubusw
add
sub
dec
pop
mov
dec
lcall
call
mulb
push
push
jno
icebp
aam
or
ljmp
inc
xchg
xor
stc
push
push
xor
push
xor
sti
xchg
movsl
aaa
imul
ret
sbb
dec
xchg
pop
jp
outsb
mov
xchg
mov
mov
inc
jno
jge
xchg
mov
popf
outsl
inc
out
push
and
cwtl
xchg
inc
inc
mov
cmp
adc
xchg
imul
sbbl
ljmp
std
dec
cmp
pushf
cs
xor
sub
lea
jecxz
shll
mov
popf
sbb
mov
jnp
push
sub
scas
das
repz
adc
hlt
cmp
push
inc
xchg
leave
mov
ss
mov
jecxz
ja
dec
insl
test
mull
outsl
or
mov
outsl
pop
inc
mov
sub
mov
cmp
mov
pop
ja
arpl
cmc
rcll
jns
add
and
rcrl
scas
jns
cld
add
insl
adc
dec
add
sbb
dec
pushl
les
scas
out
fildl
xchg
adc
push
aad
push
mov
aas
mov
sbb
out
mov
std
cmpsb
dec
push
lret
mov
jg
jae
movsb
lcall
lea
cmpsl
dec
push
mov
xchg
in
push
jnp
int3
fsin
fwait
xchg
fdivs
fsts
in
stc
fs
mov
inc
shl
mov
call
push
jg
pop
fisttpll
ror
lcall
pushf
jne
insb
in
add
mov
lock
orl
mov
movsb
xor
mov
or
out
in
push
outsb
cmpsl
adc
sarl
sub
pop
inc
xchg
xchg
add
fldlg2
negl
ss
jle
adc
movsl
lret
fisttpl
subl
adc
cmp
and
inc
imul
mov
and
push
sub
es
mov
out
xchg
xor
cwtl
in
stc
xlat
pop
jo
jle
stos
pop
mov
je
repnz
mov
pop
mov
xor
je
jno
mov
stc
scas
xor
mov
movsb
lea
lret
std
inc
in
mov
pop
xor
mov
orb
pop
ret
dec
push
cmp
fimull
repz
pop
cmp
jecxz
pusha
push
sbb
dec
jb
fsubl
pop
jle
aam
mov
iret
cli
lret
push
nop
fs
pop
jle
jnp
ret
jbe
and
inc
sub
or
test
lock
test
push
ffreep
stc
nop
jne
mov
xchg
data16
push
dec
lods
mov
push
les
push
jecxz
fwait
adc
pop
repz
add
lock
xor
mov
das
int
mov
lds
andb
cwtl
or
jl
pop
mov
pop
pushf
mov
daa
mov
pop
add
xor
cmp
bnd
imul
dec
in
fdivs
dec
adc
pop
les
pop
adc
ret
sub
sbb
cmp
jne
sbb
mov
push
inc
repnz
dec
lock
mov
mov
and
outsl
je
xchg
xchg
dec
and
xor
lea
add
jp
pop
sub
jno
cmp
loopne
mov
jmp
inc
pop
lods
shufps
xrelease
mov
stc
incb
int3
xchg
mov
pop
cltd
pop
in
fxch
cli
push
add
arpl
sub
in
inc
js
inc
or
jne
xchg
pop
jno
test
ret
xchg
add
sbbb
sbb
test
and
cwtl
jae
lahf
hlt
stos
nop
mov
popf
cwtl
inc
dec
and
mov
push
addr16
gs
inc
inc
cltd
ljmp
sbb
les
xor
scas
sub
aaa
mul
inc
push
sbb
loope
test
jno
dec
mov
dec
sti
inc
addb
mov
shll
cmp
sbb
jmp
cmpsl
inc
push
inc
rolb
mov
pop
neg
insl
cmp
test
sahf
push
inc
sub
jge
mov
imul
jae
sarl
shrb
inc
inc
inc
xor
push
fcomip
xor
mov
cmp
add
push
sahf
mov
xchg
in
orb
fldt
xchg
jmp
mov
push
pop
inc
pop
push
out
mov
movsbl
adc
stos
fs
mov
repnz
bnd
aam
adc
mov
popa
movsb
mov
popa
movsb
ds
jle
push
iret
dec
lret
cld
insl
cld
out
outsl
sbb
je
jle
cmp
add
mov
mulb
or
sbb
cmp
cmp
cwtl
push
xchg
testl
aaa
jmp
add
and
addl
insl
pop
repz
dec
frstor
pop
out
out
mov
mov
add
popf
jmp
adc
ljmp
jae
mov
push
and
or
add
ror
mov
and
aad
int
into
mov
jnp
inc
jmp
mov
add
dec
out
mov
pop
or
cmpsl
cmpsl
scas
movsb
add
cmc
icebp
icebp
je
xor
sarb
xchg
adc
pop
int
push
rcrb
xlat
repnz
xchg
int3
xchg
xor
xor
pop
xchg
call
ret
hlt
scas
enter
jno
and
push
dec
jbe
mov
xchg
out
dec
mov
mov
enter
xorb
push
jmp
jp
push
add
adcl
lods
push
add
sbb
or
sub
out
fstps
mov
fmulp
imul
xor
cmp
sbb
cli
jle,pt
test
stos
cmp
add
xchg
push
lea
and
xchg
push
into
btcl
xchg
xor
pop
sbbb
pop
push
fisubl
rcrb
push
add
call
jle
sbb
xchg
pop
outsl
inc
sub
or
xchg
adc
in
and
inc
pusha
adc
pop
cli
dec
aas
add
push
cmp
sub
loop
inc
inc
push
stc
pop
lds
hlt
or
stos
sahf
ljmp
jl
or
std
out
scas
xchg
cmpsb
pop
fnstcw
xchg
into
jo
rclb
jge
jmp
in
std
cmp
dec
loop
fs
ret
adc
cmp
lahf
sbb
popl
jne
push
push
push
jo
mov
mov
pushf
and
movsb
test
testl
mov
pop
xchg
cmp
std
or
sub
jg
out
xor
popa
cmp
or
mov
push
stos
pop
pxor
mov
imul
mov
das
dec
cmp
adc
nop
sahf
lahf
outsl
cli
jge
nop
dec
mov
out
scas
lock
dec
sub
outsb
add
pusha
in
pushf
xorl
inc
bound
jbe
gs
dec
movsl
cmp
sbb
xchg
push
mov
loop
testl
push
std
andl
rcll
into
xchg
ja
enter
jo
into
outsb
insl
insb
xchg
cmpsb
ret
xchg
sub
jae
mov
fdivrl
es
ja
pop
lock
cld
mov
jb
subb
mov
fcompl
dec
dec
nop
test
adc
sub
sub
fdivl
cwtl
sbb
and
fldenv
aad
test
je
testb
and
add
inc
push
add
mov
cltd
jns
xchg
cwtl
add
fdivr
push
js
inc
adc
insl
clc
mov
loopne
outsb
inc
dec
jne
mov
icebp
dec
adc
sub
cltd
loope
pop
dec
ljmp
cli
repz
ljmp
or
mov
push
dec
addr16
mov
add
jnp
xor
ljmp
sub
jb
fsubrs
or
repnz
xor
sbb
mov
int
in
mov
pop
into
push
int
jb
mov
dec
cmp
mov
in
jmp
imul
jae
jg
sahf
testb
pushl
add
cmpsl
or
fildll
dec
and
and
and
and
sub
ss
lret
cmpsb
inc
or
mov
mov
xchg
mov
mov
out
pop
clc
jne
daa
test
addb
in
fdiv
aaa
adc
sbb
and
in
mov
adc
ficoml
pop
fwait
fdivr
das
jmp
icebp
lock
and
pop
and
dec
lods
pushf
xchg
in
mov
mov
movsl
dec
out
fld
mov
cmp
in
imul
mov
insl
mov
incl
orl
inc
fcomi
lods
movsb
dec
andl
mov
cmp
sbb
pusha
dec
cli
shrl
jecxz
jns
mov
jecxz
roll
add
push
out
rolb
xchg
arpl
data16
and
mov
aaa
push
ja
mov
mov
xor
fwait
sub
rolb
jecxz
pop
jbe
test
int3
sbb
add
out
iret
imul
leave
sub
add
and
push
in
loop
in
stc
mov
cmp
inc
js
jmp
clc
and
and
fs
mov
jb
or
lret
jnp
in
int3
dec
cmp
nop
cmp
inc
hlt
sbb
xchg
int3
jns
fs
int
cmpsb
daa
pop
stos
sti
sub
loop
adc
std
das
mov
mov
xchg
mov
mov
lock
adc
sub
out
adc
cmpb
aad
pop
aaa
loop
xlat
xor
lea
hlt
jl
and
ss
loop
xchg
int3
popf
je
sbb
jl
add
lods
push
cwtl
or
sbb
dec
add
out
pushl
xchg
push
testl
or
es
roll
jnp
push
daa
sahf
or
pop
out
repnz
jno
xorl
orb
inc
lretw
loope
jmp
adc
jnp
pop
jg
cmp
enter
adc
and
xchg
pop
je
and
mov
cli
sbbb
pusha
jmp
out
xchg
mov
int
add
sbb
bnd
stos
mov
lret
enter
pop
loop
inc
mov
jmp
nop
pushf
and
pop
insb
stc
shlb
or
pop
ret
lock
daa
dec
cmp
add
repz
push
jecxz
pop
mov
lods
fisubrs
aaa
cld
mov
and
sub
shl
and
mov
jg
jbe
cmc
sub
or
fldenv
cmp
gs
push
cmpsl
mov
lret
mov
in
cmp
pushf
xchg
data16
out
popf
scas
mov
mov
pop
cltd
jns
cmp
sub
mov
enter
mov
xor
sub
and
into
arpl
xor
pop
mov
mov
gs
inc
lods
cmp
add
fsubl
jmp
sbb
or
cmp
adc
lds
lea
push
popf
call
scas
stc
cmc
sti
dec
xor
or
sbb
xchg
mov
fisubrs
in
repz
or
cwtl
mov
mov
cmc
adc
out
or
mov
jne
push
fldl
push
jb
sub
int
push
inc
sbb
cmp
cmc
stos
add
jbe,pt
negl
sub
jb
xchg
int
popa
add
into
mov
nop
and
jno
aam
pop
fistpll
xor
rorb
xor
jp
bound
das
pop
out
arpl
ss
lcall
mov
pop
adc
ljmp
in
fildl
mov
mov
insb
stos
sub
push
and
dec
clc
jnp
gs
mov
in
movsl
mov
ret
movsb
xchg
call
xlat
stos
mov
imul
add
pop
in
xor
fstpt
loope
and
cmpsb
popa
test
int3
pop
out
pop
dec
adc
push
pusha
hlt
jecxz
xor
push
loopne
sub
jb
mov
jno
mov
dec
les
cmp
mov
cmp
pop
std
pop
fiadds
xchg
cwtl
outsb
test
push
ret
inc
sti
mov
sbb
or
out
mov
xor
hlt
xchg
cltd
or
push
mov
inc
sbb
icebp
shr
dec
xchg
push
cwtl
imul
mov
xchg
and
xor
cmpsb
jmp
jl
orb
in
add
add
lods
shlb
cs
sbb
cs
mov
pop
mov
lret
sub
mov
xchg
add
cmpsb
movsl
addb
sbb
out
dec
cli
xchg
pop
and
lea
lcall
mov
sub
mov
sbb
popf
mov
and
ja
std
cmp
cmp
int3
sbb
loopne
pop
popa
sahf
cmp
outsb
call
and
dec
sub
insb
hlt
aam
daa
call
dec
xchg
cmp
jge
lock
cmpsl
ss
dec
xor
aad
in
je
ljmp
push
sarb
push
mov
or
push
fnsave
pop
in
cmp
xchg
add
mov
test
mov
xchg
hlt
leave
lock
cmp
inc
lret
movsl
addb
pop
cltd
movsb
andb
ret
push
es
push
xchg
mov
and
sbb
repz
aad
fs
and
cltd
pop
jecxz
jnp
popa
pop
mov
xchg
mov
mov
push
or
xchg
or
clc
jmp
pop
adc
out
adc
popf
add
sti
mov
mov
test
mov
dec
cmp
push
adcb
ljmp
into
sbb
fwait
pop
or
jmp
clc
loop
divb
sbb
jmp
movsl
xorl
push
sbb
and
lcall
dec
test
repz
mov
repnz
rcr
and
cltd
cmp
popf
cwtl
xor
or
cmp
mov
xchg
mov
push
mov
mov
inc
dec
add
pusha
xor
rcll
lcall
pop
or
cmp
jb
adc
or
jns
pop
imul
or
push
sbb
dec
cld
sbb
pop
xchg
jg
daa
scas
xchg
ja
xchg
mov
sbb
mov
int
loope
cmpb
xor
push
jecxz
pushf
je
iret
in
out
nop
aaa
xor
movsl
andb
fsubrl
xor
push
aad
xchg
ret
into
and
pop
fwait
mov
subl
fstpt
faddp
jbe
inc
lea
push
push
les
scas
popf
push
cmp
xchg
aad
sub
push
sub
mov
in
in
ret
pop
xchg
mov
vpcmpeqw
dec
mov
aam
push
jge
xchg
fnstcw
or
pop
cmp
dec
xchg
mov
xchg
test
sbb
jae
ror
add
push
push
stos
xor
and
ja
add
mov
xor
jbe
add
xchg
xchg
pusha
lods
popl
adc
rcr
mov
push
mov
imul
iret
jae
mov
mov
push
shrl
imul
cmp
pop
scas
dec
jecxz
shlb
push
mov
mov
orb
cmp
sti
xor
cmp
rolb
emms
addr16
dec
pop
pop
sti
test
sub
inc
add
mov
jp
xchg
inc
out
jmp
arpl
sbb
mov
mov
xor
xlat
pop
iret
pop
out
push
jne
adc
pop
add
dec
or
mov
jmp
cmpsl
mov
mov
mov
fildll
xor
fwait
out
pop
mov
xchg
js
repnz
lods
aas
sti
sub
sbb
popa
jnp
mov
jnp
aas
sti
popf
leave
sahf
movsb
xchg
mov
addl
sahf
and
push
jnp
cmp
sti
adc
push
pop
les
pop
outsl
mov
add
in
jecxz
xchg
inc
cmpsb
mov
dec
xor
jecxz
jns
pop
or
lea
jbe
rcl
jg
popf
add
leave
lret
jmp
int3
cmp
cmpsl
mov
jno
pandn
insb
dec
test
or
es
hlt
in
aas
mov
dec
push
mov
push
xorb
sti
test
fisubrs
cmc
outsl
and
jecxz
jne
cmpsl
xor
xor
sbb
xchg
fnsave
mov
xchg
adc
imul
clc
xchg
ljmp
ret
dec
mov
andl
les
cs
mov
lahf
ret
enter
ja
imul
loop
push
inc
cmp
lods
xchg
stos
pop
dec
sbb
pop
dec
cmp
addr16
sti
sti
pop
xor
lret
std
push
sbb
imul
jnp
sbb
mov
mov
lret
cmp
mov
lcall
movsb
lahf
jg
xchg
sub
ds
test
mov
mov
sbb
mov
push
add
xor
jae
adc
push
and
adc
xor
adc
cltd
in
roll
jle
or
jb
push
clc
outsl
inc
jo
adc
inc
sbb
pop
mov
jmp
push
sbb
pop
push
push
mov
loop
push
mov
mov
push
in
ss
cmp
lret
add
mov
sbbl
mov
scas
enter
or
mov
push
dec
rcrl
jge
and
outsb
pop
dec
aad
data16
into
adc
cmp
sbb
xchg
outsl
sub
mov
mov
add
and
jle
popa
add
sbbb
fdivl
sbb
out
loop
out
lds
xchg
push
lods
in
loope
outsl
fisttpl
lods
jo
adc
xchg
jl
adc
and
jecxz
lret
pop
or
pop
imul
out
repnz
cmc
pushf
inc
xchg
mov
incl
inc
or
test
jle
enter
flds
inc
cltd
cs
jae
lret
pop
mov
cli
clc
and
jnp
or
arpl
adc
xlat
addr16
add
jp
scas
mov
popa
test
ret
sub
push
xor
sar
jmp
and
int
and
jae
adc
dec
adc
pushf
push
lds
outsb
dec
adc
std
mov
push
xchg
fidivs
sti
dec
int3
movb
shrl
mov
out
pop
inc
cmpsb
xchg
aas
xchg
std
adc
enter
adc
gs
xchg
jg
aad
fsubrl
nop
or
sub
dec
js
sub
enter
je
push
pop
stc
or
mov
ljmp
jb
sbb
dec
hlt
adc
mov
pop
mov
mov
popf
push
sbb
add
lea
divl
jb
inc
imul
xlat
les
and
repz
sub
cmp
xchg
push
mov
xchg
sbb
in
push
insb
or
push
pop
push
jecxz
inc
punpckhbw
ds
push
scas
aad
scas
push
push
lea
rorl
pop
and
mov
enter
sbb
gs
shl
or
mov
xor
inc
fisubrs
inc
scas
das
in
push
cs
fldenv
gs
out
sub
fnstcw
sub
push
aad
sub
add
nop
ds
aad
jp
and
sbb
mov
bound
adc
iret
flds
sarb
mov
imul
fsubrs
call
mov
pushf
shlb
subb
xor
jmp
or
dec
nop
mov
test
mov
sbbb
xchg
cmpsl
ficompl
mov
sub
inc
mov
loope
pop
xor
add
xorl
lock
hlt
aad
nop
cmp
push
ds
outsl
sbb
jo
sahf
mov
lock
jno
lods
fiaddl
faddl
out
fwait
xchg
sub
and
sbb
shr
sbb
push
lods
push
xor
mov
push
add
popa
jns
lods
aas
cwtl
je
mov
xchg
pop
call
and
jge
mull
mov
clc
sbb
xchg
lret
mov
dec
fstps
scas
daa
fwait
or
lds
push
imul
ds
mov
call
push
xor
inc
lods
arpl
inc
mov
leave
xchg
inc
adc
add
movsl
stos
call
aas
sbb
nop
shlb
mov
adc
dec
fldt
dec
mov
push
clc
sbb
hlt
ds
pop
in
outsb
mov
mov
mov
pop
jmp
mov
arpl
cmp
mov
and
scas
popa
outsb
inc
shlb
sbb
bound
lods
xor
dec
adc
cmpsl
aam
sahf
cmpsl
call
sbb
push
lret
jns
or
push
test
mov
mov
mov
add
jae
enter
roll
inc
sub
loope
int3
mov
jbe
add
in
mov
je
fucom
icebp
mov
cld
sub
jmp
imul
add
cwtl
call
dec
insl
addr16
lods
je
repnz
xor
xor
stos
mov
push
jb
mov
jne
sub
fs
xor
shll
jmp
hlt
adc
mov
jmp
mov
das
and
jle
mov
and
adc
jg
hlt
lock
sbb
pop
mov
pop
cwtl
dec
nop
gs
repnz
fldcw
dec
ljmp
jo
nop
ja
filds
xchg
mov
fdivrl
sbb
mov
aaa
sahf
imul
call
sbb
mov
xchg
jne
scas
mov
in
mov
outsl
jmp
fs
inc
imul
dec
repz
imul
popa
mov
int3
pop
stos
sarb
sub
lea
std
mov
fstpt
mov
xor
pop
test
xchg
push
dec
cmp
hlt
daa
pop
sub
lods
lods
pop
add
int3
ficompl
nop
xor
insb
dec
cmp
inc
inc
fwait
pop
pop
mov
push
stc
dec
adc
push
and
sahf
or
into
pop
ret
cltd
and
je
lret
mov
push
inc
dec
shlb
inc
adc
sub
popf
mov
adc
incl
ja
into
cmp
aad
mov
loopne
jle
add
add
cld
cmp
cltd
inc
ret
jo
enter
jg
mov
and
repz
mov
sub
adc
xchg
xchg
cmc
and
adc
sub
jae
out
lods
test
imul
repnz
cmp
mov
mov
pop
add
pop
jmp
cmp
fisubrs
fldcw
aam
xor
test
sub
in
xor
sub
pop
imul
push
add
or
jae
outsb
mov
mov
imul
cmp
dec
push
or
mov
das
mov
mov
jle
test
pop
repz
sub
pop
sbbl
xchg
vorps
adc
sbb
leave
push
in
repnz
mov
mov
mov
mov
sbb
sti
out
adcb
mov
add
jmp
mov
jge
hlt
mov
dec
xchg
lods
test
fwait
push
push
mov
aad
jnp
fcomps
leave
das
xchg
pop
inc
in
cld
enter
in
xchg
sub
push
lret
push
mov
sahf
sbb
call
pushf
inc
cmp
or
rcrl
cmc
arpl
aaa
lahf
data16
mov
add
and
sub
cmp
fstps
mov
inc
ja
testb
icebp
stos
pop
or
add
clc
push
jmp
icebp
mov
inc
jae
sbb
push
je
fisttpll
movsl
adc
xchg
inc
push
dec
pushf
jg
jl
push
lret
fnstcw
outsl
and
pop
sbb
addb
outsl
push
adc
xor
movsl
cmp
lods
dec
cmp
xchg
cs
cmpsb
mov
xlat
mov
fldl
cmpsl
mov
mov
dec
pushf
mov
or
test
ret
aam
xlat
xor
loopne
mov
in
aam
pop
dec
dec
pop
pop
and
and
mov
cmpsb
out
movsb
cmc
jge
shl
enter
ret
mov
imul
loop
into
push
dec
mov
imul
rcrl
sbb
mov
jnp
ja
lods
test
ret
loop
data16
mov
call
jb
add
repz
hlt
es
hlt
push
sub
xor
dec
repz
outsl
stc
and
adc
and
shrl
mov
lock
outsl
stos
dec
icebp
jecxz
in
mov
mov
mov
and
nop
out
cmp
pop
std
sbb
out
sarb
and
scas
adc
iret
mov
or
jg
cli
in
out
loop
inc
sbb
fidivrs
pop
sbb
insl
push
cli
jo
nop
out
into
xchg
out
ds
mov
add
test
std
pop
addr16
outsl
add
or
mov
out
scas
cmpsb
jl
push
aad
nop
push
mov
add
test
test
ss
insl
aaa
sar
pop
pushf
lea
dec
sub
loope
jb
ljmp
mov
cli
loope
lahf
popf
cmp
mov
sbb
rcl
in
inc
sbb
inc
jge
in
mov
adc
mov
iret
xchg
push
rcrl
dec
stos
xchg
in
addr16
mov
sub
sahf
out
push
arpl
loop
mov
cmc
xor
inc
imul
dec
sbb
gs
pop
pop
pop
push
mov
mov
mov
arpl
mov
sbb
scas
push
addl
ret
in
mov
dec
and
cmp
mov
xor
mov
push
push
xlat
or
jmp
adc
in
in
push
int
adc
sub
cmp
in
cwtl
enter
clc
xchg
add
cmp
cli
jbe
insl
fs
and
xchg
push
jo
cwtl
and
dec
ds
cmp
test
loopne
cltd
in
lock
lea
negl
out
lods
pop
inc
cmp
ret
fwait
ret
ficoms
repz
jae
out
jmp
cmp
xor
mov
fs
pop
lahf
jmp
mov
push
in
cld
xchg
sub
into
mov
insl
fisubs
mov
mov
mov
int
mov
movsb
pop
sbb
dec
jo
in
push
test
push
clc
pop
mov
mov
xchg
test
pop
jne
enter
data16
aam
push
clc
and
cmc
xor
cmp
push
pusha
out
xlat
add
je
aam
enter
gs
mov
into
inc
or
mov
pushl
and
sbb
dec
sbb
sub
push
std
or
pop
cwtl
icebp
insl
out
fldenv
fbld
jge
int
scas
daa
stc
mov
dec
fsubs
xchg
popf
xor
push
mov
and
icebp
mov
bnd
jle
pop
mov
add
and
cmc
cmp
lret
ja
popf
cmp
fisubrs
fnstsw
repz
or
pop
data16
xor
inc
jb
jo
jp
test
sbb
inc
movsl
cmp
jns
mov
dec
imul
cltd
jmp
loop
and
orb
lret
adc
jae
adc
and
pop
pushf
pop
mov
add
sbbl
data16
mov
push
adc
xchg
test
sbb
rcrb
push
inc
loope
test
jmp
jne
enter
scas
mov
mov
jo
mov
sbb
imull
ljmp
mov
daa
sub
and
or
std
lock
jb
xchg
movsl
push
push
dec
lret
imul
or
push
mov
or
mov
push
or
add
lods
test
sti
jno
adc
or
mov
or
loop
cmc
es
movl
cli
inc
fucomp
and
push
sti
rcrl
pop
repz
fmulp
jno
add
sub
lods
iret
jb
add
lock
adc
loop
jmp
fwait
out
sbb
rol
mov
xchg
sbb
sub
mov
jl
push
mov
push
sbb
cld
sbb
mov
mov
incb
cwtl
mov
in
out
movsb
cwtl
outsb
mov
ja
sbb
aaa
roll
jle
cmp
cmp
sub
cmpb
mov
pushf
sub
cmp
test
dec
xor
or
mov
lea
mov
cmp
idiv
push
adc
mov
stos
sbb
cmp
mov
or
sarl
adc
sub
in
pop
int
and
fisttpll
lcall
and
push
hlt
pushf
pushf
push
out
mov
mov
xchg
lock
out
out
cli
ret
rorb
mov
in
lods
jb
mov
xchg
popa
sub
aas
push
fdivr
lods
fdivs
cltd
div
mov
add
xchg
push
aam
cmc
mov
sub
movsl
nop
jp
pop
aad
push
cmp
jle
jg
xor
add
cmp
lods
sub
sbb
imul
mov
or
inc
and
vmovapd
adc
pop
and
aad
cld
scas
gs
sbb
jb
fidivrl
call
int3
inc
xor
xchg
add
ss
aad
outsb
cld
sub
leave
mov
sub
mov
pushf
add
fildll
inc
dec
push
fisubl
mov
inc
fcoml
std
scas
cmp
add
push
loop
scas
mov
sbb
repnz
js
jl
bound
movsb
sbb
xor
ja
adc
mov
lret
xor
pop
roll
stos
imul
adc
dec
jle
pop
jp
mov
mov
nop
test
jnp
aas
jl
mov
lock
out
mov
pop
mov
push
push
sbb
ss
fcomp
orl
ret
pop
pop
ljmp
cld
jp
inc
pop
mov
cmp
xchg
jno
cmp
dec
vpmuludq
fmuls
mov
leave
fldl
faddl
imul
loopne
jb
mov
clc
push
test
adc
imul
jb
inc
fsubl
or
cli
daa
fcoms
or
and
daa
lahf
jmp
sti
pusha
outsb
adc
xor
repz
mov
scas
push
enter
sbb
insl
push
sahf
sti
icebp
sbb
inc
test
xchg
adc
bound
jp
push
xchg
fwait
cs
and
fdivrs
insl
aas
dec
jne
popa
jno
push
pop
dec
mov
rcl
inc
mov
xchg
inc
lcall
fimuls
xor
stos
adcb
data16
mov
pop
mov
pop
out
pop
into
or
mov
cmpsb
inc
jg
rcl
adc
ljmp
mov
inc
push
sbb
sbb
test
cmp
adcb
ss
ljmp
outsl
ror
lret
and
repnz
sbb
and
add
and
aas
out
xor
jecxz
jae
mov
orl
pop
xor
push
push
int
cs
pop
cs
out
popf
push
push
mov
daa
stos
xor
push
or
imul
push
mov
ficoms
dec
mov
dec
pop
or
dec
jb
addr16
rolb
adc
imul
mov
mov
jp
lea
sub
or
inc
cmpsl
test
out
mov
test
pop
mov
int3
fnstsw
mov
inc
scas
xor
jne
vpslld
insb
idivb
es
sbb
popf
push
movsb
in
or
cmc
int3
popf
nop
aas
push
pushf
ss
inc
mov
push
test
orb
adc
lea
hlt
pusha
add
adc
add
out
stc
sti
lock
or
inc
iret
movsl
sbb
sub
push
sub
mov
mov
lods
inc
test
bound
xchg
leave
adc
daa
test
test
jnp
dec
testl
cmp
xchg
fadds
dec
daa
mov
mov
dec
js
dec
vhsubps
push
lcall
in
mov
push
cmc
push
sub
inc
mov
js
xchg
out
jno
jnp
repz
inc
mov
mov
and
test
xor
inc
testb
sbb
les
popa
loopne
shl
lret
aas
out
cmp
jb
pop
outsl
imull
dec
mov
dec
je
mov
sahf
in
cwtl
pop
in
js
xchg
out
rolb
lds
cltd
dec
and
aam
and
push
orl
cltd
add
lahf
inc
push
jp
jl
sub
test
dec
in
jne
cmp
adc
out
lock
pop
sbb
sbb
daa
sbb
movsb
rclb
jmp
icebp
mov
push
adc
data16
stc
scas
rorb
cli
cmc
or
cmp
adc
inc
jl
out
pop
outsl
fnstcw
dec
aam
push
push
cltd
pop
fistl
or
std
inc
dec
outsb
imul
mov
out
cmp
adc
ret
rcrl
xchg
mov
inc
or
jae
push
pop
push
cmp
inc
mov
sahf
addl
mov
aaa
sbb
mov
jne
sub
fildl
add
daa
fstpl
jge
std
dec
inc
imul
fwait
dec
adc
push
jbe
popf
or
xchg
mov
cmp
sub
loopne
ret
fnstcw
add
push
jb
inc
dec
es
sub
dec
ret
scas
dec
push
sbb
sub
mov
push
das
repz
loop
lcall
xchg
push
sub
lea
movsl
add
adc
std
and
sub
ret
in
adc
inc
divl
adc
adc
es
jno
mov
jo
lcall
loopne
movsb
xchg
xor
sub
outsb
xchg
sub
and
mov
sahf
dec
rcr
and
lods
fwait
sti
out
inc
imul
fidivrl
mov
xchg
inc
mov
ss
mov
sbb
ret
and
dec
push
adc
pop
fwait
scas
cmp
lods
xorl
mov
jp
int3
push
nop
sysexit
testb
mov
mov
mov
lock
inc
arpl
jle
lret
nop
mov
inc
xchg
popa
mov
adc
xchg
xchg
dec
mov
jno
idivb
fst
rolb
mov
jl
movsl
jb
stos
dec
mov
sbb
dec
cli
dec
lods
clc
jmp
sub
jnp
scas
stos
adc
dec
jns
add
and
jno
insb
cmc
test
lds
notl
fcoml
fsubrp
ficomps
xor
int3
outsl
ret
mov
push
push
mov
mov
mov
cmp
ss
gs
jp
sbb
out
mov
mov
adcb
or
cs
fisubs
xchg
fisttpll
cmpsl
mov
ljmp
mov
jmp
sub
cld
dec
add
or
mov
xlat
adc
cmp
aaa
dec
xchg
pop
mov
cmc
add
les
xchg
add
or
xor
fcmovne
sbb
cmp
mov
sbb
push
dec
sub
xor
rol
and
and
mov
or
dec
mov
outsl
out
lods
or
push
adc
mov
in
cmpsl
mov
icebp
fisttpl
cltd
scas
xchg
mov
das
in
std
lods
mov
push
xlat
xlat
in
dec
xchg
mov
outsl
pop
mov
ljmp
or
es
dec
outsl
ret
mov
jge
jb
sub
pusha
mov
or
adc
and
dec
cmp
inc
sbb
les
xchg
jg
int
bound
jle
mov
test
jg
inc
or
lahf
sbb
jg
pushf
lcall
jbe
inc
in
cmpsl
negb
lret
stc
ret
sbb
xor
pusha
je
adc
pushf
xchg
fisubs
cmpsb
push
mov
sub
or
mov
mov
sbb
push
test
mov
movsl
jge
dec
fcomps
in
in
std
movsb
mov
mov
imul
lock
imul
xor
stc
push
jne
dec
data16
xor
aad
cmp
add
rclb
cwtl
popa
or
xor
daa
orb
lcall
pushf
jns
or
leave
loop
pop
fcmovne
sub
ficoml
popa
outsb
outsb
daa
xchg
lods
sti
aam
test
mov
dec
cmp
push
dec
sub
aad
add
test
mov
jp
pop
and
inc
addr16
lds
in
test
fs
fs
cmp
push
push
outsb
shll
cmc
inc
mov
or
ljmp
fisubs
mov
cli
xchg
aam
inc
sbb
xchg
enter
into
sub
mov
pop
gs
dec
out
pusha
add
jno
fs
ljmp
push
sbb
loop
and
sbb
rcr
fistl
popa
clc
or
xor
aam
les
and
ret
xchg
cmp
sbb
pop
enter
hlt
mov
lret
xchg
cmp
scas
ja
fistpll
pusha
insl
loop
mov
dec
ja
cli
rcrb
subb
shrb
ss
je
inc
add
je
ss
mov
lahf
adcl
inc
push
mov
mov
adc
nop
mov
push
inc
in
shlb
nop
ret
popf
movsl
loop
jle
mov
push
sbb
fdivr
cmp
hlt
mov
and
add
dec
jmp
or
jb
pop
mov
fstp
xor
dec
or
addl
js
inc
pop
enter
sub
jnp
push
jo
sbb
movsl
ficoms
mov
inc
jne
adc
add
js
mov
fmuls
sbb
movsb
inc
mov
adcb
lods
shr
into
out
or
sbb
jg
push
cmp
sub
mov
test
jle
cmc
lock
pusha
xor
jmp
popl
repz
pop
pop
jbe
cwtl
jge
test
jge
jge
pop
stos
sub
outsl
outsb
fcmovu
fcomp
jmp
popf
push
jecxz
cmp
jp
push
fistl
jno
jg
stc
andl
pop
outsb
lods
stos
inc
inc
testl
lret
cmp
lahf
mov
jge
adcb
pop
inc
daa
fisubl
test
cmpsb
test
dec
push
mov
or
push
loope
cs
aad
stos
jo
adc
cld
push
mov
addb
aam
stc
inc
inc
cmp
push
mov
inc
mov
clc
sbb
mov
lods
push
xchg
in
mov
jp
les
jmp
push
jbe
mov
and
pop
data16
clc
mov
mov
xlat
push
mov
in
aad
fmuls
pop
push
popf
sub
sub
inc
mov
or
ret
mov
pop
inc
push
js
xor
sub
cmpsb
adc
jp
sub
mov
xor
repnz
dec
mov
fs
outsb
ljmp
sub
ljmp
fisubrs
fistl
mov
mov
sbb
add
pop
mov
negb
xor
outsl
outsl
mov
xchg
pushf
stos
test
out
daa
lahf
int
cmp
mov
cmp
adc
add
mov
testl
movsl
js
mov
fidivl
mov
icebp
pushf
and
addl
sti
lahf
in
cltd
movsl
stc
and
in
push
cld
lock
jb
dec
call
xchg
dec
outsl
gs
adc
push
xor
pop
ret
cmpl
sub
sbb
imul
scas
movsb
pop
addb
add
aas
mov
dec
fwait
pop
fnsave
dec
mov
xchg
add
cmp
inc
imul
pop
dec
push
pushf
push
pop
and
repz
mov
push
vmovshdup
cld
mov
dec
subl
add
inc
add
pop
out
fildll
jmp
sub
scas
ss
movsl
cmpsb
xchg
dec
fildl
mov
ficoms
mov
scas
mov
adc
push
sub
aam
in
test
or
lret
shlb
cs
test
push
and
pop
shll
je
xor
popf
jae
shl
jb
mov
repnz
mov
and
xchg
roll
shr
jbe
cmpsb
pop
pushl
or
in
rclb
test
cmc
mov
mov
shrb
in
fnstcw
mov
mov
into
inc
mov
in
mov
xor
sbb
loop
push
dec
dec
sub
jb
dec
movntq
lahf
push
test
in
ljmp
xor
jecxz
xchg
sarl
push
pusha
fsubl
xor
xchg
inc
cmp
jns
movsl
jecxz
ret
imul
adc
pop
cmp
fs
mov
pop
insb
add
mov
movsl
fsubl
mov
cli
push
fs
lock
clc
xor
shlb
mov
ret
inc
test
xchg
jl
cmpl
add
cltd
xor
jns
hlt
cmp
cmpsl
jns
rcr
and
sarl
sbb
mov
mov
xchg
aaa
add
add
mov
scas
jbe
dec
xchg
and
test
pop
daa
or
mov
inc
jo
sub
cmp
pop
jl
ds
push
pop
adc
in
pop
icebp
bnd
mov
mov
ljmp
pop
jg
lds
dec
dec
sub
sbb
mov
fcmovu
jle
xchg
inc
cmpsb
es
sahf
adc
cmp
test
sub
outsb
outsl
jns
dec
not
out
loop
jl
pop
int
adc
fisubs
cmc
sub
fsts
sti
hlt
fwait
mov
sub
xlat
cmp
sub
mov
aaa
inc
shrl
imul
je
fcmovbe
ljmp
xchg
jl
jmp
and
inc
test
cli
mov
icebp
shrl
aaa
movsb
push
adc
ret
add
push
push
cli
ja
push
sub
enter
or
fcomi
into
xchg
cltd
xlat
sahf
rcrl
add
cli
pop
dec
add
scas
sbb
test
pop
cmp
shll
pop
gs
das
ret
arpl
fisubs
sti
enter
lock
pushf
incb
cmp
push
mov
inc
test
xlat
sbb
cmp
pop
inc
loopne
dec
les
inc
push
pop
je
out
mov
jp
cmp
or
lret
pusha
cltd
jge
or
jle
add
or
sti
pop
enter
xchg
push
mov
adcb
push
mov
xor
mov
jg
inc
xchg
dec
add
lods
jns
mov
mov
inc
pop
mov
sub
arpl
mov
sub
cltd
popl
xor
pop
mov
adc
test
jecxz
pop
bound
imul
mov
mov
jne
adc
push
add
xlat
inc
mov
jp
sub
aad
inc
sbb
jg
jecxz
pop
mov
adc
icebp
fs
jl
sbb
stos
inc
insl
shrl
cmp
fdivr
mov
jb
dec
or
mov
push
test
mov
popf
jge
push
mov
stos
mov
in
mov
xor
movl
ljmp
jcxz
lahf
movsb
pop
icebp
mov
cs
dec
or
pop
mov
leave
cmp
dec
aas
mov
cmp
xor
push
fimuls
adc
or
daa
xor
fisttpl
lahf
orb
adc
sbb
out
push
out
or
or
sub
adc
push
mov
iret
inc
jmp
jecxz
shll
jb
jno
push
stc
sbb
pop
and
xor
roll
cmp
mov
insl
mov
mov
jae
popf
fcmovb
mov
dec
adc
cmpsb
pusha
stos
outsl
stc
push
pop
xor
fisubrl
cmc
sub
daa
out
ret
mov
out
les
out
in
in
std
adc
mov
movsl
fsubrl
jl
scas
jno
repnz
xchg
cmpsl
inc
into
cmp
add
arpl
add
xchg
or
dec
inc
inc
ljmp
or
mov
pushf
xor
cmp
ret
jmp
aas
jg
mul
pop
adc
lret
and
jno
push
push
out
dec
mov
jae
or
jbe
mov
sub
dec
inc
fs
sbb
push
dec
scas
sti
or
dec
mov
daa
addl
jae
std
in
repz
and
xlat
adc
push
es
das
das
outsl
outsb
sub
clc
inc
pop
add
out
sbb
xchg
jmp
push
imul
insl
jg
outsb
mov
test
int3
inc
inc
push
dec
nop
gs
mov
jge
dec
mov
push
xchg
sbb
std
in
jge
stos
jge
lret
popf
jb
std
lcall
lds
fucomp
daa
xchg
int
add
pop
sbb
xchg
push
in
cmp
call
push
mov
inc
sbb
mov
imul
push
fwait
cmpsb
mov
push
stos
sbb
cmpsb
out
pop
push
paddw
sub
popf
shrl
mov
mov
xchg
inc
mov
xchg
ret
add
push
movsl
sbb
adc
xchg
addb
push
fcoms
dec
mov
les
call
pop
cmp
out
cmp
movsb
push
scas
popf
ljmp
jnp
or
rorl
or
les
icebp
popf
sbb
sbb
mov
test
rdpmc
insl
jbe
dec
out
scas
out
add
push
adc
mov
mov
adc
add
sti
cmp
inc
and
lds
pop
lock
iret
add
and
jae
mov
xchg
ds
sti
inc
daa
shrb
xchg
jno
inc
xchg
xor
sbb
mov
inc
jp
cmp
dec
cmpsl
dec
dec
mov
cmp
stos
add
es
icebp
stos
addr16
sahf
push
mov
insl
pushf
add
lret
lret
cmc
negl
test
xchg
and
dec
mov
xchg
sbb
lock
pop
mov
fmull
aaa
xchg
jp
xor
adc
or
jne
add
push
sbb
fdivrl
pop
std
insl
pop
lahf
je
iret
sarl
repnz
cvtpi2ps
test
in
lods
cmp
test
mov
cmp
repnz
outsb
cld
cmp
inc
lds
iret
mov
dec
pop
popa
adc
in
cli
fcmovnu
push
xor
dec
loopne
jbe
shlb
push
add
leave
std
add
cltd
push
outsb
xor
inc
push
repnz
xor
mov
dec
sbb
xor
jg
bound
xchg
dec
lea
inc
std
inc
fildl
pushf
ror
cmc
lret
adc
repz
repnz
pop
inc
pusha
jmp
xor
popf
testl
push
mov
and
dec
mov
add
and
push
inc
lret
or
adc
cld
sbb
and
jge
adc
out
dec
xor
ftst
push
outsb
mov
popf
loopne
fs
adc
je
data16
popa
push
and
pushf
inc
jl
jbe
cmp
mov
xor
jg
mov
inc
movsl
sbb
imulb
add
xor
add
call
jnp
scas
and
xchg
in
pushf
inc
popa
push
mov
push
mov
fstl
cltd
rcrl
xchg
aam
out
popa
add
mov
fcomps
push
ds
stc
shl
ljmp
outsb
mov
inc
movaps
inc
jecxz
jle
push
mov
sahf
or
sub
dec
push
sbb
in
lret
imul
iret
outsb
cmpsb
pop
aad
push
mov
or
out
shll
test
pop
sti
scas
or
jecxz
ret
lret
iret
fwait
subb
pop
and
in
jecxz
push
iret
in
mov
push
sub
aas
sti
push
leave
loopne
arpl
cmp
mov
sub
mov
ret
dec
and
jb
in
cltd
adc
pushf
push
idivl
cmp
inc
cwtl
and
out
ljmp
mov
aaa
aaa
fcmovb
mov
jmp
push
lods
mov
scas
pop
les
movl
cmp
ret
inc
ret
jae
bound
aas
lods
add
cmp
and
aam
inc
lret
pop
aas
xchg
jmp
adc
mov
xor
adc
dec
outsl
inc
pop
mov
and
xor
mov
mov
jne
notb
xor
in
mov
or
xor
push
scas
sarl
jbe
jp,pt
dec
js
out
aas
and
adc
sti
xor
mov
loopne
int
or
adc
lods
jmp
ret
push
jns
adc
mov
and
mov
pushf
mov
mov
js
mov
out
and
lods
pop
fs
fnstsw
sbb
scas
data16
ss
cld
add
sub
loopne
lea
xor
inc
out
mov
loope
mov
add
and
sub
mov
scas
js
out
ds
cli
test
jb
sub
pop
nop
ja
push
cmc
jecxz
es
loope
jnp
push
mov
jne
mov
jne
xchg
mov
inc
dec
into
insb
inc
aaa
gs
inc
mov
ficoms
repnz
xchg
pop
dec
cmp
fistps
xor
mov
inc
xchg
hlt
cmp
cmp
outsl
ja
rclb
jbe
adc
loope
xor
hlt
je
outsl
lds
in
aam
dec
notb
test
xlat
inc
mov
add
xchg
out
and
out
cmpl
stos
in
and
cmp
mull
or
mov
mov
ficoms
ds
insb
mov
ja
outsb
movsl
jecxz
push
mov
dec
leave
cmpl
pop
mov
cmp
sub
and
out
mov
les
add
add
lods
leave
rcrl
xor
mov
roll
cmp
sahf
adcb
cmp
paddsb
out
adc
or
cmp
jae
ret
std
ljmp
cli
movsl
lock
mov
mov
and
loop
addr16
dec
mov
sub
pop
xor
shl
cmp
cli
mov
roll
mov
cwtl
sbbb
lods
cmp
dec
pop
jmp
add
mov
mov
inc
test
fs
leave
mov
fldl
loopne
pop
icebp
aaa
and
xchg
inc
xchg
and
sahf
or
xor
rorb
push
add
and
inc
inc
and
fiaddl
fdivs
clc
sahf
inc
sub
loop
adc
pop
cmp
out
pop
push
aad
ds
and
dec
mov
shrb
dec
push
pop
xchg
pop
add
mov
push
mov
cmp
mov
xor
mov
jno
cmp
cmc
stc
jne
inc
xor
adc
pusha
sub
xor
fs
int
negb
ja
scas
into
sbb
dec
nop
je
cmp
jne
jne
sub
pop
iret
loopne
jbe
nop
inc
or
cmp
adc
aaa
aam
notl
adc
imul
and
or
mov
or
in
mov
and
lea
popf
addr16
test
xchg
cmpsl
or
test
cmpb
dec
xor
mov
cmp
fcomps
int
sub
xchg
mov
shlb
jp
jns
ret
or
jno
lret
sub
mov
xlat
adc
mov
adc
dec
js
inc
popa
test
sbb
adc
icebp
aaa
sub
sub
clc
cld
pop
aas
fildll
dec
popa
outsb
xlat
jne
fistpll
fucom
pop
pop
sub
xlat
mov
pop
fcom
sbb
lods
sub
or
cmp
inc
test
cmp
add
xchg
and
mov
xor
sbb
push
test
push
cmp
mov
xor
lock
adc
ljmp
call
mov
cmp
loope
nop
mov
lods
js
dec
daa
hlt
or
jns
lods
out
xchg
inc
cmp
push
mov
das
ds
loopne
into
adc
sub
outsl
push
jmp
pop
push
pop
dec
lods
jbe
push
xor
mov
mov
pop
dec
filds
dec
ss
cltd
push
adc
enter
inc
pop
adc
cld
mov
inc
jae
and
addb
aas
push
cmpsb
lods
ficompl
jo
nop
cld
or
add
bound
jecxz
aas
call
jmp
insl
outsb
add
xor
sub
iret
dec
ficompl
mov
cmpsb
inc
lock
arpl
jge
lahf
sti
loopne
or
sub
jecxz
cmc
push
ds
sbb
inc
sub
stc
or
dec
insl
jns
addb
or
lcall
das
bound
push
hlt
out
push
lahf
jbe
iret
aaa
scas
jp
cmc
call
and
inc
je
xor
pusha
xchg
nop
jmp
cmp
repnz
movsb
pop
xor
loop
stos
insl
jge
pop
stos
sbb
out
lea
push
xorb
ja
mov
push
xor
repz
xchg
xchg
mov
sub
mov
bound
bound
push
int3
aam
das
xor
shlb
inc
fisttpll
and
cwtl
jno
test
push
inc
aam
jecxz
in
test
xchg
hlt
lcall
test
pop
ja
xchg
sti
hlt
dec
adc
test
sahf
in
add
mov
or
pop
inc
imul
lods
cmp
popf
push
insl
leave
sarl
mov
scas
inc
ljmp
xchg
xchg
icebp
mov
loop
sub
jb
movsl
mov
jno
jge
enter
mov
mov
dec
dec
mov
xor
xchg
jo
mov
neg
push
xchg
mov
adc
push
pop
dec
bound
rolb
pop
jno
mov
pushf
cmpsb
dec
or
jo
pop
pop
addr16
dec
outsl
clc
aas
push
cltd
loop
mov
adc
or
inc
in
pop
mov
fadd
lahf
pusha
or
xchg
repnz
pop
adc
aad
aad
shrb
add
and
cmp
push
lds
ja
push
mov
mov
cli
jne
in
add
or
dec
sbb
jl
je
shl
jle
stos
adc
fcmove
xchg
or
sbb
jmp
cwtl
popa
pop
subl
adc
outsb
movsb
dec
push
movsb
mov
test
scas
sub
pop
or
orl
ljmp
xchg
adc
mov
or
or
jne
push
cwtl
ret
ljmp
xchg
lcall
sub
ret
popf
inc
push
push
cli
dec
pushf
aad
ret
dec
call
push
xchg
lea
lret
mov
pop
clc
dec
inc
cwtl
cs
jmp
jl
inc
inc
jl
dec
aas
loopne
mov
repz
mov
cmp
mov
es
dec
lds
test
out
mov
pop
add
sub
dec
mov
cmpsl
dec
das
adc
test
gs
test
jo
ljmp
fstpl
dec
pop
push
mov
rcrl
cmpsb
stc
push
test
pop
nop
dec
je
loope
jns
pop
xchg
sub
mov
mov
adc
mov
divb
mov
test
mov
xor
sti
push
ds
cmp
cmp
popf
mov
scas
mov
clc
in
insl
cmp
cmpsb
hlt
push
bound
call
mov
jmp
jne
mov
mov
inc
stc
dec
mov
xchg
inc
xor
jl
cld
cld
sti
xor
jne
gs
das
sub
add
insl
sbb
flds
mov
arpl
fildl
test
cmc
sub
fcoms
jecxz
adc
stc
movsb
mov
inc
cltd
push
mov
int3
out
dec
push
in
push
psllw
and
xchg
pop
int3
sub
mov
fistl
insb
jne
in
add
fs
outsl
pop
test
aad
js
gs
leave
mov
fistpl
or
push
js
push
jmp
jle
pop
sbb
or
fidivrl
loope
out
fsubrl
flds
and
insl
daa
jne
cmp
xor
das
iret
lahf
imul
cmp
and
xchg
mov
push
bound
loopne
mov
cmp
jbe
mov
cmc
jnp
testl
les
fldl
sahf
ret
outsl
lret
inc
cmp
xor
or
inc
mov
push
or
adc
bound
hlt
and
std
xchg
and
cs
or
hlt
int3
lods
xchg
mov
push
rorl
cmp
popa
nop
es
shrl
pop
shr
call
lcall
fcomps
sbb
fcmovbe
sbb
outsl
movl
shll
dec
cltd
xchg
jge
jle
jns
das
push
int
fcompl
cli
dec
lcall
and
testb
adc
jo
cmp
cwtl
mov
and
cmpsb
pushf
aas
fucomip
mov
add
sbb
jl
xor
ss
mov
add
jp
xchg
cmp
ds
and
push
ja
data16
dec
mov
std
mov
rcrb
push
sbb
jecxz
repz
mov
mov
push
sbb
fisubrs
xchg
outsb
jle
jg
xor
mov
sub
or
pop
cld
mov
popa
fwait
mov
mov
cmp
add
lds
xchg
fisttps
scas
push
xor
pop
mov
xor
xchg
arpl
mov
aam
jmp
mov
adc
jo
and
or
dec
js
gs
adc
lock
sub
jno
lds
or
mov
push
hlt
aas
test
outsb
movsl
pusha
sbbb
lds
and
fidivrl
mov
loop
mov
rcr
add
jecxz
adc
lret
lock
or
jg
inc
in
mov
add
gs
sub
add
xor
loop
mov
jae
repnz
xchg
lahf
dec
add
jo
inc
xchg
shr
mov
lahf
arpl
push
xlat
mov
fwait
xor
dec
xchg
inc
jae
or
and
mov
add
ljmp
daa
daa
dec
in
lret
xor
mov
or
push
dec
clc
adc
pop
fldt
fs
outsb
and
fs
add
int3
decb
mov
fsubs
adc
pop
mov
and
inc
mov
push
xlat
gs
mov
out
dec
mov
jg
aas
sub
and
cli
mov
ja
sbb
mov
dec
add
fadds
lds
ficoms
mov
stos
fs
mov
or
cmp
js
dec
mov
movsl
mov
and
or
pop
jecxz
ja
mov
xor
xchg
packssdw
addb
popf
loop
mov
cs
dec
in
aas
cmpl
les
xor
arpl
jnp
lods
es
cmpsl
enter
push
add
test
popf
scas
das
int
adc
inc
sub
je
xor
mov
sarb
jb
push
jp
ja
pop
dec
loope
and
inc
and
cmc
xchg
enter
fcompl
and
xor
mov
in
sub
pop
loop
sub
rorl
in
mov
es
push
push
mov
mov
sub
jns
fcoml
enter
fdivrs
leave
sub
fucomp
or
mov
pop
cld
mov
inc
xchg
mov
push
loope
inc
cltd
mov
cld
mov
jbe
mov
dec
pop
scas
fisttpl
dec
xchg
xor
ss
push
in
xor
adc
insl
xchg
es
mov
jb
sub
lcall
xchg
sbb
xchg
loopne
sahf
out
pop
fmuls
xchg
outsb
xchg
cmp
mov
dec
pop
fstp
out
sub
cmp
pop
pusha
and
pop
mov
mov
out
xor
lods
cmp
test
dec
add
icebp
insb
repnz
notrack
cmp
xchg
adc
test
aad
pusha
xor
loope
mov
ljmp
and
out
lods
cld
in
cmp
jo
mov
cmpsb
jae
mov
adc
jmp
cmp
cli
dec
add
inc
inc
dec
notb
add
fwait
cmp
or
ss
mov
cmp
sti
mov
aaa
repz
cmpsb
cmp
inc
dec
and
leave
cmpb
xor
and
iret
ret
xchg
outsb
jae
outsl
imul
adc
mov
jecxz
cli
jo
mov
xchg
sub
xlat
sbb
pushl
aad
aas
insb
int
cmpsb
pop
lret
cwtl
xchg
pop
adc
mov
lock
cli
fnstsw
pop
rclb
ljmp
sbb
sarl
shr
lret
mov
sub
adc
mov
dec
mov
xorb
push
xor
test
add
pop
or
adc
out
mov
mov
sub
sbb
jo
pop
mov
push
clc
xor
mov
scas
cmp
arpl
sub
ret
mov
jl
les
adc
mov
xchg
imul
add
dec
sbb
dec
sarb
mov
scas
mov
jae
movsl
xchg
sbb
test
xchg
dec
es
push
inc
adc
ss
or
lahf
insb
push
xchg
pop
push
fs
ret
push
in
ljmp
ja
fwait
sbb
bound
jb
mov
xchg
pop
mov
mov
hlt
cmp
mov
dec
add
and
je
sub
cmpsl
lahf
out
int3
clc
cwtl
inc
mov
je
repz
lahf
aas
stos
dec
je
subb
loop
push
dec
or
dec
out
inc
mov
jecxz
push
push
mov
mov
pop
mov
or
pop
dec
ds
outsb
or
imul
fnstenv
sub
mov
int
addr16
sbb
or
or
jno
sbb
lea
out
iret
push
scas
leave
ficoml
scas
jb
add
call
ret
dec
mov
shll
popf
rclb
imul
push
ret
jae
jbe
loop
loopne
push
cmp
cmc
fnstsw
xchg
add
sub
xor
lret
cmp
or
es
lahf
xor
mov
or
enter
movl
xchg
lcall
mov
mov
cmp
xchg
cmp
lcall
inc
xchg
sub
and
fptan
push
mov
mov
adc
orb
and
and
xor
test
dec
or
jns
test
push
lods
and
sbb
push
call
or
sub
out
cmp
idivb
mov
divb
mov
dec
cmp
call
inc
jbe
loope
sub
pandn
js
and
lods
add
xor
in
pop
jp
dec
jbe
xor
jo
xchg
push
ljmp
shrb
fwait
cmp
adc
push
jl
push
mov
add
mov
dec
cmc
or
push
jb
cwtl
outsl
aaa
je
dec
xor
fwait
out
xchg
or
fnstcw
inc
adc
lahf
data16
out
dec
cmpsb
push
push
add
in
icebp
inc
mov
jne
out
insl
ret
mov
jne
lods
fisubl
lret
and
push
pushl
or
popf
mov
lret
les
xor
push
pop
sub
js
pushf
sti
add
dec
adc
mov
push
cmp
and
repnz
ljmp
sub
dec
xchg
out
add
and
or
icebp
add
cmp
cld
aam
lea
fucomi
inc
js
add
inc
pop
add
dec
sahf
inc
enter
push
test
std
mov
jae
decb
sbb
stc
push
jae
popa
push
subb
inc
pop
ss
cmpsb
jl
fldt
jae
adc
or
out
cmc
jbe
stc
pop
out
jo
enter
adc
jl
jmp
enter
cmp
leave
jg
aam
ret
cmp
cmp
test
test
cwtl
push
inc
nop
push
push
sub
push
aad
and
repz
dec
in
and
leave
mov
icebp
popl
outsb
test
jecxz
test
push
loop
lret
xchg
insb
sarb
dec
sbb
nop
or
call
mov
outsl
in
sbb
lcall
aam
inc
jle
in
subb
and
jmp
fmull
mov
xlat
inc
ret
adc
xor
pusha
jecxz
mov
xlat
dec
mov
es
push
or
daa
enter
and
call
sbb
clc
cwtl
in
sbb
pop
or
push
cmp
cs
cltd
imul
sbb
clc
or
jge
rcrb
int
add
dec
adc
icebp
add
dec
xchg
mov
bound
sbb
sbb
dec
cmp
test
jbe
add
dec
test
outsb
add
sub
pop
cmpl
subb
aaa
sbb
mov
aas
jl
and
xchg
andb
xchg
xchg
js
je,pt
call
jmp
inc
in
cwtl
mov
dec
lret
loope
lahf
fucomip
push
cli
sub
test
cmpsl
jmp
and
jmp
addl
stos
outsl
scas
imul
roll
sbb
xchg
or
in
in
xorl
adc
fisttps
and
jae
sti
jmp
sahf
add
mov
push
addl
bound
mov
add
lcall
sarb
popa
jg
or
jecxz
fbstp
xchg
jl
movsl
loope
repnz
in
fimuls
icebp
sub
xchg
cmp
sbb
scas
mov
mov
add
add
cmp
adc
mov
clc
or
dec
sbb
lods
or
sbb
inc
shld
push
inc
lods
inc
in
dec
sbb
fdivr
jp
jp
popa
sar
push
adc
jg
stos
cmc
scas
bound
or
addl
or
or
sbb
orps
dec
lock
shll
gs
fdivl
sbb
pop
xlat
scas
repnz
fwait
imul
dec
and
xchg
or
imul
std
jg
sub
out
inc
dec
les
cmp
jge
cmpsb
leave
imul
push
ret
xor
les
sbb
xchg
sbb
adc
and
iret
shrl
gs
sarb
std
lcall
xchg
mov
mov
test
ss
sbb
fistps
es
cmpsb
mov
lods
sbb
in
mov
data16
nop
cwtl
cli
lcall
jl
subl
setg
shl
les
adc
and
dec
pop
rcl
cmp
push
lods
imul
jnp
mov
stos
mov
stos
shl
pusha
das
sbb
sti
or
mov
pop
cli
jbe
insl
test
shl
test
sub
lea
jg
xor
mov
xor
mov
shll
jg
faddp
repz
and
mov
stos
xchg
popa
cmpsw
dec
push
pop
outsb
leave
repz
pop
sbb
sbb
pop
shrl
pop
xchg
mov
jmp
addr16
dec
xchg
adc
sbb
insl
lcall
cmp
in
icebp
testl
loopne
cmpsb
push
cmp
mov
outsb
dec
or
pop
and
fsubl
jo
or
insb
bswap
dec
sbb
cli
in
cmp
mov
or
mov
in
mov
dec
clc
out
in
cmpl
and
sbb
mov
mov
stos
mov
test
sub
int3
dec
fmull
jg
adc
lds
add
mov
pusha
push
sti
enter
fcompl
and
ja
xor
mov
push
xor
les
push
jecxz,pn
adc
mov
fdivl
js
and
mov
das
js
int
gs
ret
orps
fiadds
ja
orl
addl
hlt
add
insl
out
push
mov
leave
xchg
jb
clc
dec
mov
out
not
hlt
xchg
cmp
out
sub
outsb
sbb
sbb
mov
lahf
inc
and
add
push
imul
stos
or
loop
ds
xor
enter
add
xor
sbb
sbb
add
or
add
push
dec
out
es
pop
sbb
inc
adc
popa
jns
icebp
adcb
dec
mov
fwait
jns
repnz
cmp
add
push
test
rcrl
shlb
test
mov
sub
mov
leave
mov
xchg
and
dec
mov
or
mov
shlb
loopne
lret
pop
xor
outsb
fbstp
aad
and
pop
mov
push
push
or
push
fsubr
scas
hlt
leave
les
jecxz
push
sub
int3
push
in
adc
jne
lea
insl
pushf
int3
test
mov
rorl
mov
fwait
push
sbb
xchg
adc
jo
pop
test
je
in
popf
or
and
cmp
shl
mov
push
or
push
adc
sbbb
dec
dec
lock
mov
sbb
lock
lea
dec
add
mov
cmc
test
sub
pop
ds
pop
mov
sbb
mov
fiadds
das
inc
push
adc
jg
popf
sub
xor
or
mov
je
jmp
pop
push
adc
mov
aaa
mov
mov
xor
fadds
lahf
aaa
inc
out
ljmp
mov
repz
push
scas
aam
pop
insb
xchg
fnstenv
dec
xchg
cmp
in
les
ret
fst
mov
dec
push
imul
sar
stos
lock
dec
icebp
stc
add
xorl
shll
movl
out
xchg
push
sar
xchg
shl
cwtl
es
xor
push
xor
add
jb
lret
adc
fcmovne
inc
add
lcall
pushf
subl
push
and
add
sbb
hlt
jl
sub
cmp
mov
lcall
and
test
sub
push
cltd
xchg
mov
ja
xorb
pop
test
mov
add
pushf
jae
jo
mov
call
mov
imul
cmp
xchg
int
ja
sub
js
repz
int3
aad
mov
lods
sahf
add
arpl
mov
pop
iret
jle
push
inc
cmc
fsubrl
lods
jo
xchg
dec
sub
mov
pushf
jnp
into
and
mov
and
popa
add
inc
int
lea
pop
testl
cmp
ss
aam
lds
push
lret
jg
enter
hlt
and
nop
sbb
cmpsb
stos
sub
je
or
mov
fcmove
gs
and
ja
test
movsb
out
loopne
rorb
push
mov
mov
psrad
pop
inc
push
inc
gs
jle
sbb
adc
xchg
mov
add
jecxz
lds
or
cli
xorb
push
sub
adc
jo
push
cmp
mov
xchg
sbb
jo
jl
movsb
push
repnz
adc
mov
fstps
dec
pop
xor
out
mov
ljmp
push
pop
shlb
fcoms
frstor
jne
and
cmp
popf
mov
out
je
sub
or
test
scas
scas
and
pop
sub
int
xchg
xchg
cltd
mov
sahf
and
mov
and
add
add
mov
and
std
jb
sub
mov
out
cmpsl
pop
sub
data16
mov
rclb
test
inc
pop
es
dec
mov
and
movsb
push
hlt
mov
xchg
outsl
sbb
xchg
jp
add
lret
cmp
ja
adc
sub
aam
jle
out
pusha
add
out
adc
js
xchg
test
mov
cmp
push
pusha
mov
lret
pop
loope
outsb
mov
sbb
ljmp
push
mov
lcall
pusha
iret
in
in
sti
mov
push
xlat
sti
xor
notb
pushf
jmp
stos
lods
es
cwtl
lea
mov
cmp
nop
imul
and
test
in
pop
cltd
xchg
sbb
out
and
jecxz
lds
dec
insb
in
fsubrp
xor
lds
lea
push
xor
push
call
mov
mov
sub
lret
cs
iretw
shl
push
xchg
mov
sbb
sbb
mov
adc
out
jae
jno
enter
imul
pop
adc
in
inc
mov
pop
push
sbb
movsl
push
nop
loopne
push
cmpsl
mov
inc
popa
movsl
and
adc
adc
fisubrs
lods
lcall
add
and
shl
repz
outsl
ljmp
aam
cmpsl
mov
dec
and
mov
or
xchg
jae
sub
pop
mov
cmpsb
or
jae
bound
ret
scas
in
es
jp
sub
subl
call
pusha
adc
mov
cld
lods
sbbl
sbb
and
daa
mov
pop
mov
outsb
or
inc
mov
fcoms
sti
cltd
mov
jae
push
mov
es
pop
out
sbb
jnp
cli
add
xor
insl
out
sbb
aas
loope
mov
mov
movsl
dec
add
aaa
enter
pop
add
mov
jge
insl
pop
mov
push
sbb
and
jbe
lock
pop
hlt
jo
dec
mov
lcall
ret
sbb
adc
xor
mov
xor
xlat
or
dec
out
or
xchg
pop
mov
mov
lcall
nop
jnp
mov
jns
xor
xchg
cltd
xchg
pop
adc
sub
push
fdivrs
ret
sti
jae
mov
pop
sub
into
cmp
xchg
and
dec
adc
leave
lods
cli
and
loopne
sahf
sbb
movsb
sub
push
gs
mov
ror
mov
pushf
push
xchg
clc
or
jns
mov
mov
loop
dec
in
pushf
lret
xchg
sahf
stos
xchg
arpl
fistps
into
lret
leave
insb
icebp
push
fwait
lahf
jbe
or
sarb
push
ss
into
lds
je
mov
test
pushf
bsr
pop
dec
leave
cli
adc
shr
mov
jno
outsb
mov
lcall
ret
repnz
lahf
inc
xor
cli
int3
mov
jecxz
mov
pop
frstor
adc
movsl
jmp
mov
push
mov
iret
popa
cmp
sub
fldenv
in
dec
nop
cmp
lahf
xlat
lret
sbb
xlat
add
test
ljmp
jle
mov
sbb
sbb
pop
and
push
wrmsr
pop
scas
lcall
pop
or
dec
adc
cmp
frstpm(287
adc
shll
mov
xchg
ret
rclb
test
cmp
mov
icebp
mov
cmp
cltd
push
xchg
push
sarl
jecxz
lahf
cmp
daa
rcrb
adc
mov
xor
xor
stos
mov
fwait
out
jecxz
popf
lret
xchg
xor
push
mov
or
xor
jmp
xlat
mov
adc
pop
xlat
lret
mov
addr16
in
add
scas
push
std
imul
add
add
test
test
mov
pop
jbe
repz
imul
sbb
sbb
cmp
lods
adc
dec
cli
cmpsl
xchg
mov
jg
and
pop
jb
sub
pop
adc
xchg
test
jmp
sbb
xchg
out
inc
xchg
pop
adc
pop
mov
pop
outsb
inc
mov
mov
mov
int3
inc
push
xor
pusha
or
mov
ffreep
roll
outsl
loop
lods
pop
dec
push
jecxz
lret
je
mov
inc
imul
mov
jg
ret
add
enter
jmp
addl
dec
cmp
pop
jno
push
or
cwtl
pop
test
mov
addr16
iret
sub
repnz
add
pushf
inc
test
das
popa
dec
push
xchg
xchg
dec
test
mov
add
fst
cltd
repz
stos
or
rolb
outsb
lock
mov
cmp
cmp
shlb
bound
adc
mov
jae
pop
dec
movsb
push
ret
and
sbb
outsb
cli
shll
sbbl
push
lock
insl
pop
mov
lahf
adc
pop
pop
aam
scas
enter
xchg
xchg
fwait
stos
mov
fstpt
rcll
data16
xchg
push
jo
sbb
aaa
mov
loopne
lcall
xchg
sbb
mov
stos
fwait
sub
cmp
pop
push
dec
jle
faddl
and
clc
out
lds
divb
add
data16
mov
sti
mov
in
lahf
push
scas
inc
mov
loop
insb
cwtl
js
jge
xor
mov
fsubrs
add
pop
lock
adc
fistpl
sub
shll
outsl
fwait
xchg
sti
push
inc
rcl
arpl
add
push
in
cltd
push
mov
rcrl
test
xchg
daa
xor
mov
cmp
xor
in
push
imul
leave
lock
out
or
adc
mov
icebp
inc
push
jecxz
cwtl
stc
dec
scas
adc
in
ficompl
sub
cwtl
fst
jg
push
push
rcll
add
mov
sti
adc
ljmp
inc
push
xlat
outsl
std
pusha
pop
daa
dec
xchg
fidivrs
inc
mov
sbb
pop
mov
fnsave
test
mov
mov
mov
push
cmpb
add
adc
sbb
rcrl
into
in
aad
lods
aam
xchg
sub
addr16
push
mov
cmp
adc
push
inc
dec
in
test
push
rorb
jo
inc
mov
xor
pop
sbb
nop
or
dec
ja
out
and
sbb
testb
pop
in
jae
ret
pop
sub
cwtl
stos
lahf
xor
xchg
xchg
lret
imul
iret
or
mov
jecxz
jl
bound
xchg
mov
mov
cmpsb
cs
icebp
adc
fs
add
pop
mov
push
xchg
mov
data16
rcrl
dec
cld
aas
std
push
dec
jns
popf
in
daa
inc
add
push
jl
xor
ja
pop
adc
adc
arpl
jmp
push
mov
add
aad
xchg
fstpl
jb
jge
js
nop
jbe
xchg
dec
pop
in
cmp
das
imul
mov
push
popf
pop
mov
clc
dec
cli
jb
fwait
mov
sub
pop
mov
addb
ficompl
inc
mov
ret
cs
xchg
gs
push
icebp
fwait
xchg
ss
push
xchg
stc
sbb
push
mov
inc
outsl
push
mov
xlat
or
rcll
les
inc
pop
adc
outsb
xchg
rcl
js
stos
add
mov
push
dec
repnz
inc
rcrb
fildl
and
add
lahf
cmp
xchg
arpl
inc
shl
pop
loopne
push
or
cmc
pop
pop
subb
jbe
inc
lea
or
cmp
fwait
dec
scas
or
sti
test
lds
xchg
or
loopne
push
rcrb
lret
xchg
fnsave
call
outsb
add
add
insl
xchg
inc
mov
mov
bound
jbe
call
pop
inc
and
lcall
pushf
xchg
dec
rol
or
nop
movsl
fisubl
mov
adc
rorl
jo
dec
xor
sub
cmp
rcl
jl
or
int
xchg
not
sti
xchg
fdiv
cmp
rorl
popa
pop
mov
cltd
subl
leave
scas
lahf
jns
mov
dec
dec
shll
cmp
out
cmp
pop
xchg
adc
lods
jns
xor
fcmovb
fmuls
stc
mov
adc
mov
ljmp
cmp
sbb
mov
mov
mov
daa
std
int3
xchg
loop
mov
mov
popa
mov
cli
into
lcall
imul
repz
lds
mov
jg
inc
push
call
xor
mov
hlt
lcall
pop
shll
or
enter
adc
insb
push
insl
ret
jecxz
and
push
rol
xchg
adc
dec
cmpsb
lret
shrl
into
stos
bound
jecxz
test
cmp
jb
add
mov
or
out
add
xor
shlb
mov
mov
in
fistpll
scas
out
xlat
pop
rorb
cmp
fcmovne
popf
lret
insl
loopne
lods
or
cwtl
aaa
bound
fwait
lahf
aaa
xchg
js
add
testb
lret
or
cmc
divb
fisttpl
gs
mov
fcoml
enter
cmp
sub
ds
test
xchg
imul
xchg
iret
push
daa
clc
xor
mov
shl
xchg
repz
cwtl
mov
cmp
loope
dec
loope
int3
cmp
sbb
mov
insl
mov
cmp
lret
pop
or
mov
mov
dec
and
mov
add
sub
sub
adc
fs
pop
xchg
enter
cmp
pop
leave
out
cmp
mov
dec
ja
mov
les
jg
add
lea
mov
add
iret
shl
sti
push
pop
aas
pop
push
sub
nop
cmp
mov
hlt
cmp
pop
or
sar
int3
flds
jno
inc
int
inc
sarl
fcomps
mov
xchg
mov
mov
aaa
leave
repz
inc
mov
aam
flds
nop
notl
adc
jbe
jbe
fildll
xor
cmp
out
lret
dec
jns
movntq
frstor
lcall
inc
cli
mov
loope
mov
jge
fistps
into
jb
cwtl
adc
sbb
xlat
imul
loop
dec
adc
xor
xlat
ss
pop
jo
loopne
outsl
outsl
data16
jg
sub
cltd
shlb
scas
pushl
jecxz
mov
cmpb
fsubs
fwait
movsb
mov
mov
xlat
lcall
fistpl
aas
inc
scas
inc
push
mov
dec
ds
cmc
in
xchg
and
mov
mov
call
in
es
add
push
aam
push
test
sbbl
adc
fdivp
adc
pusha
cli
sub
fistps
dec
sbb
xchg
inc
and
sbb
sahf
insl
lock
jp
sahf
push
sub
push
outsb
les
fnsave
mov
pop
adc
daa
adc
push
leave
dec
in
icebp
rcll
or
ljmp
in
cld
popl
xchg
fs
mov
out
inc
in
mov
jae
popa
mov
movsl
subl
cmpl
inc
push
sbb
inc
mov
ds
cmp
jg
js
das
and
mov
hlt
adc
popf
scas
sbb
mov
loopne
in
pushf
outsl
out
sbb
and
repz
sub
out
mov
mov
mov
sbb
push
fisttpl
test
or
jo
sbb
sbb
daa
sbb
xor
sti
out
mov
outsb
mov
test
jae
mov
dec
ja
inc
inc
int3
push
dec
enter
fildl
imul
outsl
or
repnz
incl
stos
out
mov
enter
movsb
xchg
enter
sbbb
lret
je
int
cwtl
jle
adc
pusha
outsl
xchg
jns
sbb
inc
dec
sub
daa
pop
or
pop
cmp
ljmp
rcrb
roll
pop
das
fdivl
lods
js
mov
enter
ljmp
mov
mov
call
stos
lret
cli
dec
mov
push
lea
out
sub
out
push
jnp
mov
xor
scas
fldt
adc
mov
jg
mov
or
sbb
or
xchg
mov
pop
push
sbb
icebp
pop
insl
mov
push
ds
jno
mov
xchg
and
in
add
or
filds
shr
ljmp
lret
jb
jp
xor
mov
js
shrb
xor
lcall
add
loop
cmp
and
xchg
cmpsl
cmpsb
pop
xchg
lret
popf
lock
test
cli
mov
sbb
rcrb
loope
inc
mov
cmp
mov
adc
iret
aad
sar
aas
jp
data16
pop
mov
popl
shr
jnp
pop
loope
insl
or
dec
stc
roll
movsb
shl
je
jae
addr16
and
push
mov
test
jp
cld
push
adc
sub
lret
outsl
and
clc
int
mov
push
xchg
push
leave
adc
imul
mov
dec
push
mov
cmc
jp
ja
xor
jno
xor
scas
dec
pop
mov
lret
jns
pop
mov
stos
mov
shrl
in
std
jecxz
mov
popa
test
jle
or
sbb
dec
jae
out
or
xchg
ljmp
push
scas
jg
jae
leave
sub
mov
and
xchg
mov
lods
and
adc
add
push
test
imul
loope
lret
popa
push
ret
enter
sar
or
jnp
xor
xchg
add
outsl
jmp
jecxz
jge
ds
adc
pop
pop
cmpsl
push
push
sub
insb
dec
nop
aaa
xor
push
jno
inc
imul
xor
ds
pop
xchg
push
es
and
mov
fistps
out
adc
icebp
insb
xor
or
inc
dec
int3
mov
xchg
dec
std
cmpsb
jnp,pn
orb
leave
in
mov
dec
pusha
orb
ja
mov
mov
or
adc
pop
jle
mov
pop
pop
push
xchg
lods
or
rcrb
adc
nop
cmp
pop
dec
std
sub
aam
sbb
enter
stos
inc
sub
call
sub
inc
mov
movsb
lret
data16
xchg
mov
popa
fwait
cmpsl
push
sub
mov
loopne
call
or
pushf
adc
imul
incb
nop
outsb
cltd
rcrb
push
in
ds
out
mov
pop
inc
test
imul
jl
sub
imul
jge
jae
xchg
in
jle
push
popf
sarl
sti
cmpsb
adc
cld
mov
jns
xchg
inc
mov
adc
loop
mov
add
pop
scas
ds
pop
push
push
xor
divl
inc
stos
inc
lret
cmpb
cmp
sbb
add
int3
pop
iret
add
dec
mov
sti
ja
or
jns
jecxz
push
stc
inc
das
rorl
mov
jle
frstor
and
popa
ljmp
xlat
jbe
adc
cld
inc
mov
popf
daa
imul
jne
pop
cmp
jno
gs
dec
adc
or
pop
push
mov
inc
scas
and
ss
mov
cmp
repz
js
dec
pop
cwtl
jne
xchg
adc
mov
incb
or
je
xchg
jmp
inc
repz
int3
push
decb
in
mov
mov
aam
mov
mov
jmp
rcl
iret
xchg
iret
je
mov
pop
or
test
push
push
cli
and
cli
or
test
mov
cmp
push
sti
dec
sub
insl
mov
cmpsb
adcl
add
loopne
sub
mov
xor
ffreep
repz
mov
inc
in
xor
adc
inc
mov
mov
clc
pop
pop
clc
xchg
ret
in
dec
and
mov
push
sbbb
or
and
jge
sbb
mov
mov
fsubl
out
adc
fnstsw
cmp
imul
shlb
scas
clc
daa
jne
scas
je
gs
cmp
xchg
xchg
xor
sbb
mov
push
cld
das
adc
mov
pop
outsb
lods
mov
mov
gs
lcall
sbb
sub
xor
or
notb
repnz
xchg
lahf
mov
test
pusha
cmp
cmpsb
mov
cmp
cmpl
jmp
shr
cltd
scas
adc
ljmp
xor
test
or
cmc
xor
xlat
sbb
ds
sbb
dec
or
jae
jbe
dec
mov
int
scas
cmp
or
rcrl
into
in
lcall
push
lds
jne
faddl
jge
adcb
dec
nop
add
fsubrl
out
cmp
xchg
outsb
jecxz
lahf
into
dec
or
ret
or
or
imul
hlt
pop
mov
test
add
aad
add
push
dec
imul
jecxz
loopne
arpl
popf
aas
insl
fdivrl
add
test
inc
mov
sar
mov
mov
push
repz
shlb
lcall
and
jecxz
jno
test
xchg
xor
imul
leave
dec
sbb
cmp
fwait
or
xlat
shll
adc
xchg
stos
fstps
xchg
in
fisubs
jno
and
mov
mov
cwtl
hlt
xchg
xchg
push
push
xor
inc
xchg
ret
pop
fcomip
cs
out
sbb
and
outsl
clc
imul
pusha
dec
lods
stos
xchg
jp
arpl
add
add
movsl
push
arpl
popl
cmp
fcmovne
sysenter
pushf
popf
fs
pop
or
clc
xchg
cmp
jle
cwtl
enter
bound
fstp
sub
in
ret
pop
add
lds
ljmp
repnz
dec
fistps
or
lods
test
xchg
sbb
dec
cld
xchg
mov
inc
das
in
scas
dec
or
insb
mov
push
adc
in
imul
aad
xor
aas
minps
es
cmc
push
scas
mov
and
insl
lcall
xchg
in
and
jp
cmpb
add
mov
adc
icebp
gs
arpl
loop
out
pop
xchg
sbb
push
or
cmp
test
mov
add
xacquire
cltd
ret
fwait
xchg
adcb
xchg
cmp
xchg
push
mov
into
loop
push
xor
mov
add
faddp
jo
and
xchg
js
sub
push
xorb
push
xchg
loopne
inc
adc
push
incb
sub
in
mov
fisubrl
scas
inc
and
add
insl
add
fdiv
lcall
and
paddw
mov
xor
sahf
shrl
push
push
adc
bound
out
add
mov
cltd
mov
inc
push
shll
fmuls
icebp
jno
cli
push
and
xchg
push
clc
incb
pop
subb
lcall
cmp
hlt
sub
sbb
fs
mov
pop
jle
push
stos
cli
repz
jmp
shl
inc
sub
mov
xor
daa
in
sbb
push
push
sub
out
in
pushf
int
adc
fdivp
inc
outsl
dec
or
mov
lcall
fstpl
dec
ret
in
sub
push
add
in
mov
pop
jb
in
scas
out
sbb
xchg
push
iret
add
dec
and
testl
popf
outsb
adc
int
pop
mov
add
dec
repnz
push
jb
xor
rdtsc
int3
pop
pop
loope
faddl
add
mov
lods
push
cmp
ret
test
push
and
inc
push
push
push
into
cmp
inc
xchg
jns
pop
cli
xchg
inc
movsb
adc
push
xchg
cmp
push
push
ficompl
sbb
rcr
cli
and
push
cmp
out
push
adc
xchg
clc
lahf
lret
loope
sbb
and
ja
sub
lds
sub
mov
and
pop
arpl
or
and
push
loope
outsl
rcr
dec
insb
xchg
cmpb
mov
loope
cli
xor
inc
cltd
je
dec
dec
maxps
lret
jne
pop
adc
push
or
pop
insb
sbb
insl
pusha
repz
mov
sbb
cmc
and
stos
and
dec
xchg
dec
out
aam
push
sbb
sbb
mov
adc
xchg
ljmp
xor
push
imull
dec
loope
int3
inc
aam
outsl
push
jl
sub
xchg
push
mov
push
xor
test
dec
repz
push
fdivl
dec
test
add
lods
jbe
ja
add
ficoml
push
shl
ret
and
add
ret
movsl
lret
add
fadd
dec
mov
fdivs
cwtl
pop
repz
out
push
stc
and
popa
sub
cmp
xchg
lea
jg
xchg
adc
in
xor
outsb
jl
addr16
cltd
insb
inc
xchg
add
lods
mov
fmuls
mov
push
mov
repnz
xchg
mov
cmp
scas
adc
mov
dec
adc
add
in
hlt
jmp
addb
ja
cmp
in
std
push
adc
dec
cli
enter
mov
sbb
mov
cmpsl
data16
or
dec
cld
sbbl
dec
sahf
cld
xchg
xchg
inc
adc
stos
outsl
nop
js
dec
jo
pushf
mov
test
adc
push
dec
call
outsl
adc
sbb
push
and
ret
addr16
sub
and
testl
bound
mov
adc
test
divb
add
mov
cltd
lcall
int
pop
xchg
add
clc
sub
aas
mov
andl
sub
loopne
rolb
add
je
cltd
pop
inc
inc
mov
mov
or
sbb
sbb
cwtl
into
and
inc
aas
mov
mov
xchg
mov
cmp
adc
adcb
ja
fstpl
push
ljmp
daa
or
stos
pop
add
xchg
pop
daa
call
inc
ja
movsl
mov
xlat
nop
jecxz
add
mov
xchg
fadd
mov
pop
mov
imul
out
scas
adc
cmp
sbb
fs
xchg
add
cmp
push
dec
fnsave
inc
lock
jae
shrb
lcall
out
push
test
xor
mov
push
or
cmp
insl
cmp
mov
scas
adc
lahf
jns
pop
int
js
and
or
les
cmp
cmp
bound
sub
sbb
lret
scas
mov
stos
arpl
adc
adc
repnz
popa
jbe
sbb
test
sbb
mov
out
sbb
cmp
sbb
or
push
mov
dec
mov
fnstenv
xor
stos
lods
mov
and
sbb
mov
inc
subb
add
testl
loope
divl
push
sbb
sub
cwtl
or
subb
mov
mov
mov
cmp
adcl
out
scas
aad
xchg
mov
mov
fdivs
pop
inc
sub
jns
rcrb
pop
lret
lret
je
jnp
jno
jmp
hlt
pop
ret
into
loop
xchg
sbb
push
sub
ljmp
mov
lahf
mov
dec
aaa
test
sbb
adc
andl
in
mov
mov
cmpsl
jne
imul
push
jmp
lret
jl
fildl
fnstcw
repnz
push
xchg
sbb
push
or
pop
jge
into
adc
jae
pop
roll
push
ret
jp
call
xor
outsb
das
fbstp
pop
mov
in
lock
sub
mov
cli
pop
ss
jmp
sarb
xchg
push
das
fcmovnbe
xchg
std
aam
sti
fstps
push
lahf
push
or
shll
cwtl
cmp
xchg
and
fsubl
xor
jmp
aas
ds
bnd
daa
sbb
and
lss
sarl
xor
ret
repz
mov
addr16
push
inc
sub
jmp
mov
ljmp
stos
pop
loop
mov
lahf
fcmovbe
fwait
mov
push
pop
outsl
shlb
icebp
int
jae
and
and
xchg
inc
mov
push
cmp
and
mulps
cmc
xor
mov
mov
mov
test
mov
and
adc
or
insb
rcll
and
cmc
cmp
loope
mov
scas
sbb
cmp
xchg
mov
xchg
imul
push
pop
and
cltd
jl
leave
std
dec
inc
sub
pop
pop
and
adc
imul
jno
mov
add
mov
or
pop
shrb
dec
sbb
ret
lret
push
cmp
nop
pop
jge
adc
ja
xchg
test
mov
xor
rclb
imul
xchg
sarb
nop
pushf
mov
call
loope
iret
mov
xchg
inc
pop
dec
mov
aad
cltd
pop
mov
fisttpll
adc
xchg
cmp
or
dec
dec
and
jno
or
mov
repz
test
movsl
sub
stos
xchg
shl
fdivrp
jns
inc
pop
inc
fbld
dec
cld
movsb
loope
enter
cmc
cmp
jge
lret
out
out
pop
popl
inc
and
mov
cmp
mov
cmpsb
jmp
jno
adc
ret
mov
pusha
or
fistpll
and
push
push
adc
icebp
mov
fdivr
mov
stc
pop
leave
mov
gs
iret
aad
or
imul
inc
or
add
or
xchg
cmp
jmp
or
dec
and
sbb
inc
mov
or
insb
addr16
lret
jb
cmp
jb
xchg
dec
pop
mov
jb
cmp
pushf
pushf
dec
dec
sarb
push
sub
inc
std
push
xchg
loope
mov
ljmp
pop
sar
add
push
adc
mov
lahf
pusha
in
mov
in
jnp
and
int
sti
or
lods
movsb
lret
in
nop
aad
mov
lret
pop
mov
test
jp
testl
xorl
jb
out
int3
fsubl
mov
mul
inc
pop
loope
popf
test
stos
gs
or
aas
mov
or
fcomps
test
xchg
es
insb
repnz
andl
cmp
or
pop
mov
mov
xchg
jbe
faddp
cld
mov
push
je
jbe
push
cli
lock
mov
fdivrl
outsl
push
mov
jl
jb
repz
adc
cmp
push
add
ljmp
mull
idivb
dec
pop
push
sti
pop
xchg
arpl
cmpsb
shll
xchg
push
rcrl
testl
cmp
push
jg
popf
push
push
arpl
mov
rol
add
sbb
cmp
subb
pop
outsb
mov
loope
push
xorb
lea
jbe
mov
sbb
mov
rcl
mov
stos
nop
adc
sbb
push
mov
or
int
addb
jns
or
fisubs
jae
and
bound
ret
mov
les
gs
sbb
je
xor
loopne
shlb
push
mov
sbb
pop
inc
sbb
icebp
push
or
push
sbb
fdivrl
arpl
repz
sub
popf
and
mov
cmp
mov
jnp
fistps
jl
sahf
shrl
add
sete
adc
imul
outsb
lods
and
pop
jo
xchg
addl
in
xchg
call
pushf
faddl
outsl
sbb
push
test
pop
and
sbb
jl
iret
in
sbb
xchg
lock
imul
inc
in
xor
dec
xchg
sub
fmuls
push
push
sbb
imul
cmp
int3
xor
repnz
pop
mov
daa
outsb
mov
xlat
mov
pop
sbb
inc
pop
dec
jge
xchg
imul
adc
inc
out
pop
xor
test
fisttps
push
aam
ja
jp
mov
push
adc
lods
int
mov
add
popa
dec
jle
push
fcoms
jnp
sub
daa
hlt
dec
and
pop
sub
mov
mov
inc
aas
and
es
outsb
sbb
incl
mov
hlt
mov
cmp
xchg
aas
dec
out
repnz
pushf
popf
mov
cmp
xchg
shlb
jmp
rol
push
adc
inc
dec
push
xchg
cmpsb
and
repz
mov
add
mov
out
jbe
cmp
pop
adc
adc
test
sub
icebp
jge
imul
inc
repz
cmp
adc
jb
in
jne
cwtl
sub
test
roll
fildl
movsl
jp
insl
rol
cmpsb
inc
xchg
leave
mov
rcrb
daa
jno
cmpsb
push
lcall
int
cmp
and
into
cmp
daa
or
jmp
jne
sbb
pop
mov
sbb
cmc
mov
arpl
or
addr16
inc
sbb
sbb
lock
adc
cmp
inc
sub
in
xlat
jecxz
dec
xchg
mov
inc
repz
aaa
mov
aaa
and
dec
pop
jl
aas
mov
mov
dec
jne
jg
and
mov
mov
mov
mov
int3
je
lods
and
scas
shll
test
sbb
sub
xchg
add
mov
ss
addl
gs
popf
or
bound
ss
cmpsb
mov
xchg
enter
add
lods
shlb
xchg
inc
push
cmpsl
or
xchg
sbb
test
movsb
ret
mov
sub
loope
add
shlb
dec
inc
lods
adc
adc
test
movl
xchg
ret
xchg
jo
insb
push
lret
mov
xorb
inc
mov
fwait
clc
addr16
mov
wrmsr
mov
push
arpl
andb
mov
mov
cmp
in
mov
pop
loop
je
adc
ret
fstl
jns
sbb
inc
push
push
aaa
cli
loop
mov
adc
mov
xchg
ret
mov
fs
jb
mov
or
je
cli
jno
ja
aas
cmp
imul
rcl
lahf
es
dec
add
ja
dec
insl
mov
repz
push
sbb
push
mov
add
and
jbe
mov
cs
cmp
clc
cmp
les
fldcw
dec
addr16
mov
mov
rol
je
xchg
int3
cmc
setae
data16
sub
sti
mov
inc
adc
pop
scas
iret
nop
out
sbb
pop
push
mov
ret
sar
and
neg
stc
icebp
xor
cmp
fmull
inc
inc
dec
out
push
push
neg
cmpb
jae
cmp
sub
sub
pushf
xor
fisttpll
pop
inc
pop
dec
repz
and
jecxz
mov
pop
mov
mov
fs
jg
mov
pop
rcll
fiaddl
xchg
movsl
xchg
jecxz
in
xor
test
enter
mov
sub
adc
movsb
jmp
ja
or
cmc
sti
adc
cmpsl
movb
fstps
jecxz
lock
mov
mov
add
lret
outsb
es
ret
mov
or
cmpsl
cli
sub
mov
cmc
pop
imul
jge
lea
es
push
lahf
adc
fimull
in
ds
sub
dec
sub
in
test
and
cmc
jnp
jno
jo
xorl
or
push
insl
ror
mov
sbb
add
repnz
je
test
rcr
pop
int3
scas
sub
subl
adc
push
adc
mov
repnz
or
test
pop
mov
mov
repnz
std
mov
mov
and
mov
pop
dec
inc
dec
lcall
negl
cmp
ss
pop
adc
sub
jl
add
shrb
xor
xchg
out
repnz
fbld
mov
push
sahf
es
inc
cwtl
jmp
adc
pop
cmpsl
les
or
mov
insb
push
in
lods
cs
ja
inc
inc
insb
cmpsl
inc
repnz
or
movsl
jnp
scas
sbb
and
arpl
xor
cmp
add
push
es
lds
and
xor
mov
sub
cmp
mov
jp
lret
repnz
mov
jne
popf
inc
pop
das
jge
mov
loop
dec
mov
xlat
pushf
in
mov
sarb
or
outsl
adc
arpl
xchg
out
mov
sub
sbb
sub
aas
sbb
mov
mov
imul
nop
addr16
rolb
out
jecxz
mov
aad
stos
and
add
stos
rsqrtps
in
sahf
or
and
sub
mov
loope
fs
sbbb
cwtl
push
mov
mov
loopne
xchg
or
es
lods
mov
lods
inc
cltd
call
pop
lea
jo
pop
cmp
push
and
loopne
sub
shrl
leave
outsl
mov
inc
lret
xor
jmp
aaa
aas
loopne
cmpsl
js
inc
sub
push
repz
cwtl
aad
xchg
mov
test
dec
sub
mov
lahf
test
mov
inc
int
cmpsl
sti
arpl
fs
dec
pushf
leave
outsl
cmp
xor
adc
js
dec
mov
xor
cli
testl
or
stos
mov
je
test
in
sbbl
sub
test
daa
adc
mov
repnz
push
xorl
pusha
fucomp
add
fnstcw
dec
xchg
pop
or
aaa
dec
jg
cmpsl
sub
aam
sub
orb
adc
popa
dec
dec
adc
int3
add
dec
bound
dec
ret
fwait
pop
lods
lret
xor
int
adc
sbb
cmp
int
cmpsl
adc
mov
addr16
das
adc
cmp
dec
sbb
popa
xor
js
daa
mov
cmpl
inc
push
jp
sub
cld
mov
popa
add
and
sbb
add
int
sbb
sbb
lds
xchg
pushf
and
in
es
adc
push
mov
adc
outsl
dec
leave
jg
mov
push
and
jb
pop
sbb
push
sub
in
stos
inc
or
popa
pop
movsl
sub
lods
dec
fsts
xchg
pop
popa
fs
pushf
out
xchg
xchg
dec
mov
mov
clc
jge
dec
pop
pop
fcoml
add
adc
shlb
ljmp
das
pushf
xlat
sub
cmp
push
adc
pop
xor
sub
sub
std
lods
fsubs
add
addr16
pop
mov
mov
hlt
or
je,pt
out
cmp
sahf
sbb
pop
outsl
mov
outsl
xor
add
mov
ss
stos
sbb
push
or
pop
mov
pusha
push
imul
test
pop
aas
out
mov
dec
pusha
loope
je
mov
and
mov
mov
pop
xchg
dec
xor
fistpll
repnz
adc
ret
repnz
cmp
xor
push
sbb
or
add
inc
cmp
gs
lods
test
pop
les
mov
push
out
fdivr
dec
xor
icebp
pop
or
in
push
mull
push
hlt
test
push
push
aad
xchg
push
xor
xchg
inc
fisubl
mov
sbb
pusha
enter
sub
nop
inc
cmp
mov
push
mov
pushf
mov
movsl
lock
je
sub
data16
icebp
lock
mov
iret
out
and
mov
insl
adc
aaa
rclb
and
ja
push
inc
and
loopne
inc
fistpll
rolb
dec
cmp
cli
js
aam
into
out
and
push
inc
push
or
shl
cmpsl
xlat
mov
imul
jmp
pop
pop
xor
mov
add
mov
cld
or
jmp
lret
imul
ret
jmp
inc
lret
add
test
adc
push
and
mov
and
mov
scas
xchg
pop
das
shl
sbb
jp
xchg
sbbl
or
pop
mov
cmp
dec
sbb
outsl
inc
lret
das
lahf
cmpsl
mov
jg
pop
sub
lahf
cmpsl
daa
faddl
push
or
jmp
orl
pop
or
and
jne
add
xor
adc
jl
lahf
test
in
sbbl
inc
xchg
mov
rolb
int3
xchg
popf
xor
xor
aas
mov
add
loopne
cltd
pushw
mov
cmpsl
insb
mov
sbb
mov
mov
imull
push
addr16
imul
lock
mov
sbb
push
add
test
or
dec
pop
mov
std
sub
lret
cltd
scas
xchg
rolb
sub
movsb
shr
jno
bound
pop
mov
icebp
imul
rcrl
xchg
es
push
add
or
or
mov
xor
cmp
push
jg
aam
shl
aam
fldl
adc
cmp
or
or
fsts
xchg
rorl
and
loop
hlt
mov
mov
fstps
imul
add
movl
popl
inc
or
xor
jmp
mov
cmp
imul
divb
pusha
js
popa
or
das
fpatan
mov
cmp
daa
hlt
mov
xor
xchg
std
or
cmp
dec
js
insb
inc
push
mov
sti
inc
mov
dec
int
adc
pop
popf
test
ljmp
insb
loope
or
pop
and
or
ffree
xchg
jns
int3
push
inc
xchg
icebp
cmpsb
add
pop
and
push
push
xor
icebp
sub
jnp
ds
xlat
mov
xorb
mov
or
adc
mov
out
mov
insb
fists
mov
pusha
movl
add
or
cli
movsb
mov
int
out
xlat
dec
push
mov
add
mov
out
aam
inc
add
jp
pop
outsb
or
lea
lds
cld
jge
dec
lret
sbb
jle
and
in
jne
push
jl
loope
xchg
fnstcw
ret
jecxz
xchg
ret
xchg
iret
add
jne
inc
arpl
std
shlb
adc
cmp
pusha
xor
in
xchg
in
sbb
mov
jl
jbe
popa
push
test
mov
scas
inc
sub
in
rcrb
rol
pop
mov
das
sbb
ficoml
aas
dec
fldcw
mov
cmp
pop
and
adc
pop
ljmp
pushf
push
out
lods
or
hlt
scas
out
iret
mov
dec
out
sbb
xchg
sbb
mov
xchg
in
push
mov
imull
sbb
aas
icebp
or
xor
adc
dec
shll
out
xor
out
ret
jo
sbb
xor
jae
in
ljmp
cmp
movsb
adc
push
sbb
xchg
push
pushf
data16
cmpl
push
jmp
ret
push
push
pop
jb
es
jmp
sub
sub
mov
dec
dec
loopne
push
jle
inc
orl
mov
jno
dec
ss
and
test
or
sub
dec
mov
mov
pop
mov
push
clc
icebp
push
movsl
cli
lods
loope
dec
pop
mov
xchg
loop
in
outsl
mov
or
lock
pop
inc
adc
xchg
or
in
into
mov
je,pn
loope
ds
cltd
insl
in
add
shrb
arpl
inc
hlt
nop
out
xchg
jecxz
cmp
push
fdivr
insl
xchg
mov
sti
mov
xchg
jg
xor
mov
pop
and
in
jge
lock
loopne
pop
and
push
lock
lcall
or
xchg
test
out
push
mov
xchg
popa
loope
fwait
out
mov
ds
mov
mov
stos
fsubl
inc
dec
cmp
jo
stc
xor
outsb
cmp
sbb
dec
add
pop
les
jl
xor
scas
stos
mov
test
mov
adc
scas
mov
cmp
jno
lea
arpl
or
or
andl
xor
inc
lahf
mov
stos
addps
fiadds
imul
pop
mov
push
push
into
push
lcall
jg
fidivrs
jp
dec
and
in
jbe
lods
leave
mov
aaa
lahf
mov
aam
jle
lds
rorl
push
cmp
inc
daa
aas
mov
or
lret
jb
mov
add
xchg
jmp
into
cld
sub
aas
pop
inc
fsts
mov
adcl
dec
sbbl
cwtl
push
div
sbb
sub
negb
leave
sbb
jne
jge
add
enter
jmp
call
sub
lret
cmp
out
push
addr16
fs
jle
ret
dec
rorb
cmp
rorl
sub
cmpsl
es
add
inc
xchg
dec
jl
outsl
push
jne
mov
mov
xor
aaa
iret
fs
jno
jecxz
sub
push
lock
pop
sub
inc
test
jno
inc
mov
mov
push
xlat
dec
jg
xchg
dec
mov
cmp
repz
push
sub
inc
ja
mov
xlat
daa
ret
cmp
sub
repnz
fmuls
aad
pusha
scas
je
scas
xor
sub
std
and
and
test
aas
jnp
lods
aas
pop
psrld
or
mov
lcall
mov
sbb
fst
mov
repnz
pop
and
test
xchg
add
dec
fldcw
stc
mov
shll
xchg
xor
cmp
inc
cld
jge
test
and
in
daa
dec
push
mov
outsb
mov
ds
xchg
mov
xchg
jae
scas
popa
mov
shll
cmp
jle
js
cmp
xor
mov
pop
mov
into
push
inc
rcll
sbb
and
xor
test
scas
out
jbe
pop
dec
ds
jae
jno
pop
dec
push
and
push
sub
and
inc
or
cmp
cmp
aam
push
adc
pop
adc
cmp
loopne
and
andb
mov
fistps
mov
mov
fcomp
xor
in
jne
int3
fidivrs
fisttps
mov
scas
popa
roll
ds
cmp
mov
xor
cmp
adc
pop
hlt
out
push
or
mov
dec
lret
dec
mov
ss
out
xchg
pop
fistpl
inc
lcall
xor
xor
outsb
mov
mov
and
int
add
jp
shll
xchg
or
jl
stos
mov
cli
sbb
push
add
fdivs
sub
sbb
movsl
lret
sbb
lods
inc
jae
je
data16
mov
pop
stos
pop
andb
nop
addr16
mov
sub
ret
cmp
push
sbb
shrb
test
push
mov
mov
rcll
jns
xchg
loope
decl
ret
xchg
lods
mov
inc
in
sub
js
mov
fwait
and
inc
xor
xchg
es
js
xlat
and
adc
cmpb
adc
test
stos
push
xchg
repnz
scas
adc
jg
loope
push
xchg
fisubs
jo
leave
lds
and
mov
mov
insl
movsb
shl
sbb
xor
test
gs
pusha
je
ret
in
mov
mov
cmp
xchg
xorl
jbe
and
cmc
mov
sahf
mov
mov
xor
cwtl
lret
sub
decl
inc
repz
jge
data16
lret
mov
hlt
cmp
jl
lret
mov
lcall
inc
arpl
or
inc
push
push
xchg
push
pop
sbb
and
repnz
insb
sbb
and
out
sbb
scas
jnp
push
xor
shrb
xchg
or
inc
imul
add
push
aaa
outsb
push
push
xchg
in
arpl
adc
mov
pop
and
mov
inc
mov
es
and
push
sbb
js
jno
cmp
mov
popf
mov
jnp
add
xchg
std
pop
movsb
adc
inc
sub
mov
test
addr16
sub
adc
or
fisttpll
lret
cmp
jns
xchg
ficoms
mov
xchg
push
out
jle
xlat
lods
and
call
xchg
push
xchg
jmp
mov
push
popa
out
sbb
sbb
into
pop
xlat
js
in
pop
pop
aas
mov
movsb
lock
les
jecxz
int
insl
testl
mov
popa
lods
jne
dec
ret
mov
iret
sbb
dec
jg
mov
out
stos
call
adc
clc
std
daa
mov
jl
lock
arpl
fiadds
xchg
test
out
jp
mov
or
xor
call
fcmovnb
xchg
jae
je
jb
mov
cli
rcrl
inc
jecxz
jg
out
gs
mov
mov
mov
push
adc
mov
mov
mov
loop
out
cmpl
pop
sbb
inc
mov
in
fsubrl
outsl
fsubs
or
fsubp
test
out
fidivs
fcoml
ret
loopne
jns
inc
or
xchg
inc
mov
or
sub
data16
adc
decb
and
jb
sub
test
out
jbe
pop
mov
jnp
cld
dec
test
adc
rcrl
in
std
js
push
test
push
lods
jp
jbe
mov
or
pop
or
test
jns
inc
mov
cli
subps
je,pn
test
test
nop
pop
daa
call
mov
sub
mov
mov
lds
xor
jo
into
push
jb
ror
outsl
mov
jge
dec
loope
das
ret
test
stc
or
in
cmc
imul
adc
xor
push
add
pop
popf
shlb
std
insl
mov
push
hlt
test
jmp
pop
scas
pop
jns
addb
ret
insb
sub
fwait
mov
out
les
fidivrl
push
jne
nop
mov
jb
xchg
adc
pop
out
jo
mov
jne
push
lret
push
clc
rorl
and
inc
sub
bound
in
enter
mov
mov
pop
hlt
lock
sub
es
int
cmpsl
push
popf
push
inc
hlt
lods
insb
fsub
dec
cmc
mov
sbb
xchg
or
pop
pop
dec
lock
mov
outsl
or
xor
push
mov
sbb
inc
lret
pop
ss
pop
add
or
push
sub
ret
dec
ljmp
xchg
sarl
xor
int
push
dec
dec
ss
xchg
test
jb
popa
inc
gs
enter
iret
movsb
adcl
test
clc
in
jo
dec
in
cs
inc
insb
and
lock
dec
sub
mov
and
jnp
arpl
xchg
jmp
or
insl
popf
sbb
or
sbb
xchg
pop
xchg
inc
ljmp
scas
in
icebp
addl
repnz
lods
mov
sbb
sti
jp
pop
cmp
cmp
mov
jnp
mov
sarl
movsb
negb
mov
sub
data16
jns
inc
jae
pop
sub
out
or
lret
and
inc
sbb
sbb
ds
jmp
or
xchg
cmpsl
push
outsb
bound
xlat
push
add
mov
mov
ds
movsb
pop
test
outsb
arpl
nop
inc
mov
shr
and
sub
lea
mov
dec
fs
dec
mov
sbb
inc
ds
pop
cmp
cmp
jbe
or
scas
xor
loop,pn
inc
rorl
or
cmpsb
movsb
mov
jae
xor
imul
and
mov
lcall
mov
fldt
fstps
loopne
push
push
in
or
mov
leave
cmp
adc
xorl
and
hlt
jbe
out
lods
ss
adc
push
jg
or
sub
mov
jne
divl
pop
cwtl
mov
jp
xchg
jo
mov
xorl
rol
lods
fidivrs
xor
dec
cmpb
jmp
xchg
lret
push
out
adc
sub
jp
dec
iret
jns
or
sbb
pusha
std
cmp
aam
in
sbb
mov
data16
fbstp
adc
idiv
lret
push
ja
xor
ficoml
lahf
cmp
gs
add
push
add
mov
sbb
sbb
or
xchg
insl
shr
sub
pop
loopne
jb
negl
xchg
fwait
pop
mov
ljmp
pop
jae
cmp
push
in
popf
std
aad
push
push
test
push
leave
sbb
cmpsl
xchg
imulb
mov
adc
fwait
jecxz
dec
cli
in
mov
imul
fimuls
sahf
divb
setne
cmp
insl
jae
enter
jmp
scas
cmp
push
or
enter
aas
in
pushf
aad
sbb
fucom
push
shl
xchg
ret
pop
out
inc
es
push
int
fldt
pop
data16
xchg
and
cmp
aam
dec
mov
fs
mov
shll
arpl
and
sub
mov
dec
add
and
movsl
data16
sti
lods
mov
mov
fsubrp
push
outsb
outsb
js
rcll
xbegin
jae
xor
pop
dec
mov
ret
filds
xchg
cld
popf
clc
jg
gs
pop
negl
sbb
outsl
ror
mov
and
loop
sahf
sti
out
cld
aaa
inc
mov
sub
sub
jge
iret
mov
inc
out
mov
push
xor
inc
pop
add
in
ljmp
lret
lock
dec
mov
xchg
rcrl
ss
repnz
and
addr16
bound
and
jp
leave
push
cmpsl
xchg
cmp
fcomps
es
outsb
push
inc
or
test
pusha
cmpsb
xchg
pop
xchg
inc
int3
enter
cli
call
popa
pop
adc
hlt
mov
mov
ret
xchg
std
xchg
push
lahf
jo
xchg
jae
loopne
jnp
aas
hlt
inc
and
inc
xchg
sahf
fnstenv
out
incb
sti
mov
jecxz,pt
or
xor
in
repz
out
leave
sbb
fs
in
or
pop
ljmp
mov
jo
imulb
or
test
int3
sub
popf
cmpsb
sub
dec
dec
fistps
cltd
mov
fcoms
mov
adc
sarb
xlat
incl
mov
mov
sub
iret
and
fisubl
mov
xor
and
mov
aas
fidivrl
xor
inc
sub
jmp
push
fs
sti
nop
fmuls
mov
push
push
nop
incb
data16
xchg
stc
xchg
mov
mov
dec
mov
xor
lahf
fdivs
aaa
lods
xor
adc
xchg
test
push
xchg
cmp
mov
inc
lds
push
jnp
and
stc
inc
cwtl
lret
cmp
dec
mov
and
fiaddl
jge
jbe
jle
rclb
xor
and
or
movl
cmp
xchg
insl
loope,pt
xchg
push
push
nop
inc
lcall
jl
pushf
stc
rcrl
ja
mov
rorl
or
dec
sarb
and
add
jno
xlat
adc
sub
das
mov
ljmp
cwtl
xor
rcll
push
repnz
sbb
xor
and
xchg
jae
ds
pop
aas
into
jp
icebp
inc
stos
loopne
inc
cmpb
or
or
ss
addr16
fidivl
or
adc
jne
imul
stc
push
xchg
imulb
jge
mov
and
jae
bound
pushf
pop
mov
xchg
push
scas
pop
mov
dec
lahf
mov
push
mov
inc
jmp
pop
iret
mov
xor
js
jmp
or
stos
push
dec
xchg
lock
lods
scas
or
sbb
out
jg
push
imul
stos
std
test
out
inc
cmp
xor
popa
adc
jg
sarl
pop
pop
test
pop
sahf
push
mov
push
lds
inc
loop
xchg
pop
push
lret
sub
mov
or
xchg
lock
push
adc
jg
arpl
aad
je
inc
and
cld
jbe
pop
in
mov
xor
xor
cmpsb
aad
stc
cld
ret
push
xchg
mov
das
imul
or
mov
lret
jnp
movsl
mov
in
jnp
sub
xor
aas
ljmp
dec
jle
rolb
iret
lods
xchg
or
xchg
xor
sti
xlat
push
scas
pop
pusha
push
dec
je
repz
jae
push
test
mov
lds
xchg
fmull
roll
inc
xchg
adc
shll
push
push
sar
dec
out
fnstsw
sarl
movsw
insb
test
jp
mov
mov
out
cmp
int3
insb
and
movsl
xor
push
push
inc
and
push
push
sub
adc
mov
mov
fistpl
cmp
xchg
fnsave
push
fwait
xor
inc
fwait
sub
push
js
mov
out
orl
dec
sar
xchg
out
or
call
testl
lea
ljmp
outsb
xchg
test
in
push
mov
loope
push
mov
mov
pop
jmp
stos
cltd
lods
cltd
pop
and
cmpsl
cs
bound
scas
in
fs
jns
lret
arpl
and
ja
adc
sbb
pushf
or
jmp
mov
es
xchg
bound
jae
mov
shlb
mov
in
cli
rcrl
in
adc
mov
pushf
lods
cmp
jl
stos
inc
in
leave
xchg
cmp
fs
hlt
inc
subl
stos
sarb
mov
les
adc
mov
hlt
lods
fucom
insb
add
in
rep
push
inc
mov
jns
aaa
sub
int
inc
aaa
add
push
fstl
pop
xchg
jmp
push
lret
fidivrl
mov
adc
sub
arpl
lret
cld
xchg
adc
in
sarl
xor
inc
imul
jno
cmp
push
jg
enter
jg
dec
orb
cmp
fadds
mov
and
sub
xor
or
jne
adc
adc
and
decb
movsb
pusha
subb
call
mov
imul
daa
leave
jge
cmc
jg
popl
arpl
or
fdivrl
and
jae
mov
mov
push
sbbl
fadds
orl
in
gs
jne
adc
mov
gs
adc
push
dec
sbb
adc
lea
xor
push
call
jno
xchg
andl
sub
fldl
sbb
jp
imul
imul
lea
sub
ficoml
pusha
add
sahf
pop
lret
ds
inc
mov
lods
out
lret
and
push
in
lcall
mov
leave
dec
test
sarb
adc
rcrb
mov
mulb
add
jge
mov
std
cli
mov
mov
icebp
jecxz
mov
and
mov
aad
push
pop
shlb
test
cmp
cmp
lock
scas
mov
in
and
inc
sahf
repz
cmp
rclb
inc
mov
int
cmpl
mov
jmp
aas
in
push
ljmp
sub
push
inc
arpl
inc
fs
out
cmp
rolb
aad
sbb
aas
mov
and
xchg
pushf
movsl
fwait
sub
push
pop
cmp
rorb
ljmp
dec
icebp
mov
xchg
pop
mov
fistl
test
dec
xlat
scas
out
cmc
mov
cltd
jns
nop
add
sahf
outsb
jle
cld
mov
insb
mov
mov
mov
fldt
ljmp
into
lods
mov
fcomps
shrl
xor
mov
movsl
test
outsl
mov
sbb
pop
mov
lds
xchg
nop
xchg
out
sti
stos
adc
rclb
clc
lods
adc
mov
sbb
sahf
mov
loopne
shrl
xchg
aam
stos
add
imul
push
dec
out
cmpl
frstor
mov
jmp
ja
pop
fs
test
cmpsl
sarb
push
ret
mov
test
int
xchg
add
sbb
movsl
add
icebp
push
call
jae
jp
mov
xchg
out
call
fisttpll
mov
lahf
fucomip
in
or
mov
push
or
mov
inc
adc
lea
sti
sarl
enter
aad
enter
iret
fnstsw
xor
loop
pop
fdivrs
in
js
mov
inc
mov
ss
rclb
adc
ret
cmp
ljmp
and
js
icebp
sbb
lods
fstl
std
loope
sti
ja
sbb
out
fiadds
lret
gs
dec
mov
and
inc
testl
js
xor
das
je
ret
mov
and
pusha
mov
je
xchg
adc
xchg
popf
out
mov
jnp
loop
mov
xchg
in
xor
sbb
add
es
dec
cwtl
cmpsl
orb
sub
or
cmp
push
mov
rorl
insb
rolb
es
adc
ljmp
pop
add
pop
xlat
sbb
inc
mov
push
dec
out
jmp
in
cltd
ljmp
ficompl
pop
fisubs
push
das
and
sarl
es
add
or
xchg
or
int3
cld
push
cmp
in
leave
mov
jns
push
and
test
push
mov
out
sub
mov
and
mov
add
mov
fsubs
mov
xor
cmp
orl
or
mov
push
ror
mov
sub
pop
push
scas
imul
pushf
ret
dec
xchg
mov
xor
xchg
sub
pop
sub
xlat
add
int
xor
dec
es
xchg
xor
lret
fs
icebp
dec
fldenv
push
mov
call
cmp
gs
push
jns
or
pop
mov
xchg
inc
cmovae
inc
pop
stos
cwtl
cs
rcl
jp
mov
mov
mov
stos
fs
adc
pop
movsl
insl
inc
inc
sbb
icebp
xchg
and
pop
test
sub
cld
loope
fmul
mov
test
mov
ror
mov
jg
cmc
fadds
out
pop
mov
fldl
dec
ret
negl
insb
sbb
mov
mov
dec
in
mov
rcrl
mov
adc
pop
jno
test
adc
or
cmp
push
lret
sarl
mov
int
mov
xor
sti
cmp
outsb
push
pop
mov
outsl
popf
ret
sub
sub
push
sub
mov
add
std
sub
dec
fbstp
in
push
sti
aam
sub
pop
inc
ficomps
cmp
dec
aaa
push
add
out
cmp
jae
xlat
movsb
mov
shl
pushf
push
adc
adc
inc
pop
std
test
push
sahf
push
push
jns
pop
lods
in
test
adc
es
iret
in
mov
pop
xchg
test
out
mov
test
mov
push
jbe
cmp
and
mov
push
mov
ja
std
int
subl
js
cmpb
fdivr
popa
clc
jg
dec
push
xor
fsts
lods
adc
add
sti
shll
add
pop
jecxz
dec
ljmp
xlat
rorb
dec
dec
pop
pop
pop
mov
dec
arpl
cmp
je
jno
xor
pop
ja
push
inc
sahf
sbb
mov
cmp
ljmp
sub
js
fsub
dec
cmp
outsb
ficoml
sub
enter
inc
lret
pop
repz
stos
jae
jb
mov
inc
or
or
jns
repnz
push
mov
sbb
sub
rcrl
lds
fcmove
sbb
jl
ss
mov
lea
mov
nop
push
clc
popw
lea
int
add
rcl
lahf
inc
orb
stos
negl
das
cltd
cmp
mov
dec
jb
push
je
in
mov
mov
pop
cmp
pop
add
inc
scas
jl
pop
daa
rcr
add
pop
repnz
sbb
mov
mulb
lret
mov
mov
cmpsl
mov
mov
leave
mov
lahf
scas
decb
stc
pop
mov
push
push
stc
sti
jae
mov
push
mov
cmp
je
sub
pop
daa
fisubrl
mov
xchg
jno
call
arpl
rcrb
push
bound
xchg
xchg
push
test
pop
fdivrs
cmpsb
std
stos
inc
icebp
cmpsb
mov
push
add
sub
and
test
sub
adc
sub
adcb
mov
jne
mov
out
cld
es
and
and
xor
mov
mov
jge
ljmp
popf
jmp
xor
out
cwtl
jo
cmp
xchg
cmp
lret
lret
push
loopne
or
inc
pop
repnz
popf
addb
cmc
cmpsl
mov
push
mov
add
int
test
push
sbb
dec
jge
push
add
insb
add
int
and
mov
icebp
dec
cmc
das
cmp
fcmovnu
ret
mov
hlt
imul
push
outsl
iret
std
xchg
into
jbe
adc
in
bound
mov
fchs
or
adc
out
pushf
push
or
mov
push
cmp
sbb
enter
or
pop
movb
loope
sbb
leave
push
push
jns
loop
ja
dec
bound
or
scas
add
nop
sub
leave
and
aas
lods
fsubrs
aad
repnz
adc
clc
mov
out
adc
dec
cli
inc
or
push
test
jg
inc
fsubl
jo,pn
xor
arpl
push
xchg
bound
into
stos
and
paddw
addr16
scas
and
xchg
repz
shrb
pop
xchg
jnp
pushf
cmpsl
fs
das
gs
cmp
pop
cmp
push
loop
mov
lret
cmp
inc
ret
js
int3
ficoml
add
and
ficoml
push
ret
jmp
sub
xor
jle
push
push
adc
push
scas
cli
js
jno
adc
pop
or
rcrb
push
push
fildl
sahf
pop
jbe
iret
insl
sub
arpl
leave
jg
jo,pn
sub
pop
loop
addr16
insb
or
pop
filds
push
push
pop
xor
sbb
inc
mov
push
add
mov
dec
adc
bound
jecxz
xchg
xchg
push
xor
pop
lret
das
dec
divb
test
es
inc
lret
mov
int3
inc
and
bound
ret
xorb
das
mov
jb
adc
sbb
dec
in
push
test
iret
sub
sub
adc
sub
pop
jmp
mov
xor
fistpll
xorb
mov
xlat
insw
idivl
cwtl
lock
mov
inc
sarb
xchg
icebp
sti
aaa
imul
pop
pop
sbb
stos
rcrl
icebp
sbb
push
or
das
mov
in
nop
ret
mov
cli
shlb
ljmp
dec
shlb
ficomps
mov
ss
xchg
push
lods
push
fdivl
movsb
dec
push
sbb
aaa
stc
dec
out
ds
add
ret
inc
addr16
adc
nop
std
dec
dec
inc
jp
int
into
lods
lods
fwait
stos
dec
push
cmc
xchg
xor
rcrl
pop
dec
add
add
std
test
jecxz
mov
xchg
mov
jo
out
rolb
adc
mov
in
in
and
pop
and
stc
aad
pop
stc
mov
popl
push
cmp
subb
es
cld
das
int
sbb
lret
lods
mov
jle
mov
add
jo
or
push
insb
cltd
out
fildll
pop
xchg
and
loop
mov
rcr
add
sbb
mov
push
ljmp
push
or
push
mov
jnp
jb
sub
shr
fimull
pusha
jg
rolb
sub
inc
pop
adcl
out
lea
imul
lcall
inc
sbb
jbe
nop
jb
je
insl
pushl
dec
es
sbb
movsl
sarl
rol
mov
or
pop
jno
repz
add
dec
cltd
dec
xor
ss
adc
and
shll
call
push
js
lock
jne
pop
cwtl
insl
or
clc
ss
scas
in
int3
sub
mov
mov
adc
outsb
sbb
cli
mov
lods
scas
cmp
cmp
clc
aam
jne
and
mov
mov
cmc
xlat
insb
cmc
pop
cmpsl
pop
dec
cmc
fwait
scas
pop
in
addb
jl
xchg
in
mov
nop
sub
dec
outsl
mov
adc
in
xchg
jp
out
or
je
ret
lahf
cmc
cwtl
ret
loopne
push
sub
int
fadds
cltd
popa
pop
add
cltd
jnp
dec
faddp
jle
pop
pop
test
and
mov
push
jp
xor
mov
add
bound
jle
outsl
out
arpl
movsb
adc
loopne
fisubrl
inc
lcall
adcl
iret
lods
dec
test
mov
mov
xchg
lods
int3
xor
cmp
sub
inc
adc
mov
mov
adc
clc
mov
daa
jge
mov
cmp
shll
into
cmp
sub
xlat
push
stos
in
and
add
bswap
push
divl
scas
out
std
cmp
mov
ficoml
scas
pop
dec
dec
aad
fiadds
push
pop
mov
imul
jp
into
mov
add
xor
xchg
hlt
push
mov
push
pop
jb
jns
ret
jo
enter
mov
repz
in
jae
push
cmp
in
arpl
jne
lret
xor
iret
sbb
dec
push
mov
mov
mov
js
or
inc
xor
jp
xchg
pop
xor
adc
ja
adc
test
add
stos
and
in
shll
xor
daa
movsl
inc
inc
cmpsl
insb
xor
arpl
fwait
outsl
push
fiadds
sbb
dec
sub
aas
inc
and
and
lret
dec
push
sarb
aas
lret
mov
cmp
bswap
cld
dec
icebp
push
jb
mov
movsl
out
inc
adc
or
insb
daa
dec
cltd
mov
outsb
ja
shll
sbb
in
add
sub
movsl
outsl
and
cmpsl
jl
cmp
push
imul
test
or
pop
les
in
dec
xchg
in
mov
mov
insb
cmpsl
popf
icebp
int3
or
ja
jg
sub
add
xchg
push
jnp
orl
mov
outsl
sbb
stos
jecxz
xchg
js
data16
mov
or
lret
sub
insb
out
sahf
cmp
cld
scas
xor
mov
test
xlat
inc
test
fcmovb
insb
rcl
pusha
insb
mov
pop
outsl
dec
mov
das
cmp
sti
pop
popf
xor
sbb
inc
and
dec
or
jne
addl
ret
sbb
rclb
or
inc
inc
push
sbb
cmp
xchg
lret
jg
rcrl
pop
sub
scas
adc
jge
and
stos
loop
imul
inc
push
xchg
or
add
dec
dec
mov
clc
fstpl
xor
mov
sub
mov
mov
cmc
in
adc
add
cs
rcrl
dec
dec
jb
sbb
or
inc
leave
mov
std
cwtl
push
loopne
fdiv
jl
lds
std
cmc
lret
inc
aam
mov
pop
mov
lea
jb
dec
repnz
pop
out
arpl
mov
jo
dec
jmp
sbbb
add
or
mov
movsl
loope
into
xor
pop
lcall
lock
lds
mov
mov
dec
repnz
lods
mov
rcr
xor
and
aaa
jmp
daa
outsl
pop
test
aas
pop
cltd
popa
imul
sbb
pop
stc
sarb
xchg
push
lret
lahf
leave
dec
in
loopne
pop
bound
ret
aad
sub
and
mov
xchg
mov
imul
fnstenv
xchg
adc
jmp
pop
mov
dec
mov
inc
adc
negl
into
into
iret
cmpb
pop
lods
adc
test
bound
mov
dec
jg
cli
xor
sbb
das
jge
jmp
sbb
ja
push
or
jne
pop
cmp
dec
mov
loope
pop
data16
mov
mov
inc
cmp
xor
dec
js
outsl
je
arpl
mov
adc
jne
push
add
or
ficoml
nop
xchg
in
dec
insl
popf
or
pop
xchg
push
mov
jbe
pop
adc
pop
es
sbb
and
decb
in
lret
xrstor
orl
xor
out
fstpl
sti
and
dec
pop
rclb
outsl
int3
sahf
or
pop
mov
das
jo
xchg
mov
stc
push
out
stc
sub
insl
xchg
mov
loope
hlt
or
mov
cltd
fs
popa
mov
push
or
popa
neg
pop
insb
inc
cmpl
aas
xor
stos
lock
mov
fdivl
xchg
das
xchg
into
or
sub
lret
fdivrs
cld
jnp
cmp
jle
and
shr
push
add
xchg
outsl
sub
cltd
inc
sub
sub
and
stos
adc
push
mov
sub
inc
test
int
rorl
test
lcall
inc
subl
xchg
jecxz
and
xor
and
xor
push
mov
xchg
inc
mov
cmpsb
add
add
nop
cmp
mov
rcll
jg
fwait
int3
push
sahf
loopne
lods
dec
and
sti
data16
pop
subb
mov
xchg
in
xor
pop
outsb
cmpsl
add
inc
pop
mov
scas
xchg
mov
fdivp
test
mov
mov
add
enter
or
pop
dec
in
sahf
cmc
loopne
bnd
insb
gs
jmp
jmp
aam
cmp
test
dec
xor
pop
push
mov
or
sub
sahf
icebp
pop
mov
cmpsb
and
ljmp
pop
add
sub
arpl
push
imul
jo
fistpl
mov
or
movsl
dec
push
push
js
in
xor
push
jb
aam
jae
scas
movl
jmp
dec
pop
jle
aaa
jno
xor
ljmp
insl
test
testl
cmp
mov
mov
scas
xchg
or
mov
outsl
pop
push
inc
fmulp
xchg
inc
bnd
push
cmpsb
sti
jecxz
in
xchg
pop
cli
call
add
cmp
test
pop
repz
hlt
inc
out
dec
mov
lea
movsl
cmp
popf
pop
jmp
mov
mov
ret
test
repnz
mov
add
lea
nop
jae
and
mov
cmpsl
dec
or
mov
scas
shr
daa
pop
or
sbb
pushl
mov
dec
xchg
out
sbbb
mov
sub
inc
pop
addl
inc
imul
mov
int3
cmp
cld
push
sub
push
leave
sbb
mov
xor
inc
outsl
popa
jmp
add
call
movsl
or
lret
mov
jge
add
sti
xchg
or
inc
xor
mov
hlt
divl
adc
js
or
dec
and
jnp
test
bound
and
jl
cmp
pop
icebp
stc
cmpsl
jb
testb
in
arpl
jns
enter
mov
dec
popa
push
jbe
mov
arpl
push
fisubrs
addb
ficoms
add
cltd
cwtl
mov
inc
lahf
std
cld
imul
inc
js
push
cwtl
in
imul
fcmovne
and
insb
movsb
clc
leave
inc
cmpsl
in
sbb
lcall
push
vpaddsw
jbe
jp
lds
pop
repz
add
inc
sbb
xchg
pusha
push
add
or
xlat
test
sbb
arpl
sbb
inc
xchg
or
sbb
and
push
push
cmpsl
jmp
cld
jle
cmpsl
orb
push
add
ja
aam
adc
lods
mov
add
or
inc
fnstenv
pop
cmp
cmp
mov
dec
aaa
sbb
addr16
dec
repz
cs
aas
jg
aas
clc
push
rolb
dec
xchg
xchg
mov
jg
push
inc
aas
inc
mov
mov
arpl
jle
add
in
outsb
push
repnz
hlt
xchg
ljmp
ret
mov
and
pop
sub
iret
jl
fidivrl
and
pop
jl
popf
mov
inc
fwait
mov
and
ljmp
mov
dec
pop
iret
xor
dec
in
pop
mov
ret
jecxz
nop
push
je
in
mov
mov
mov
xorb
add
ret
shll
push
pop
lods
mov
inc
sbb
or
fsubs
lahf
cld
adc
leave
mov
gs
dec
rcll
jo
stc
ds
pop
repz
pop
mov
mov
add
push
pop
xchg
or
sbb
lods
cmc
mov
scas
jl
int
clc
jl
push
addr16
jmp
dec
scas
lock
mov
jmp
scas
jecxz
test
push
ret
pop
lret
rorb
sbb
inc
sub
pusha
shrl
adc
aas
adc
imul
mov
stc
xchg
push
rorl
enter
inc
enter
dec
out
jns
ja
inc
xor
mov
adc
outsb
cmpsb
mov
mov
out
sti
repz
movb
pop
stos
imul
testb
shlb
dec
ds
int
push
popa
je
jb
fisttpll
jle
sbb
jg
jmp
stos
nop
aad
xchg
test
pop
sbb
popf
rol
adc
cmp
popa
cmp
dec
pop
add
dec
xchg
cltd
and
add
mov
aas
pop
jle
data16
mov
mov
sub
sub
adc
loopne
mov
mov
fwait
js
test
adc
jmp
arpl
push
mov
lcall
imul
pop
adc
cltd
loop
icebp
adc
push
mov
mov
inc
push
mov
inc
sbb
xor
cltd
sub
pop
addr16
vorps
fcmove
sbb
mov
push
ret
popf
sti
mov
or
mov
pushf
and
push
insl
and
fwait
call
add
jo
xchg
pop
std
in
sbb
loop
adc
dec
enter
adc
stos
pop
insl
sub
add
lock
mov
pop
aad
push
pop
in
pop
adcl
pop
jne
js
adc
inc
ljmp
sub
cmp
hlt
jbe
sbb
jno
mov
cmpsb
xor
int
es
ret
stos
and
lcall
loope
outsl
xor
and
and
inc
push
pop
jmp
mov
ss
push
out
xor
jmp
jge
jns
dec
call
xchg
loope
lods
or
adc
ljmp
das
testb
xchg
and
push
loopne
inc
push
into
stos
int3
jle
and
fldcw
jl
xor
mov
les
push
cmc
inc
or
stc
adc
shl
pop
add
sbbb
mov
mov
mov
std
adc
call
mov
into
std
pushf
sub
mov
xchg
mov
ds
arpl
leave
pop
div
pop
call
xor
adc
aas
mov
inc
push
lods
test
add
adc
fildll
cld
inc
in
push
sbb
out
inc
dec
mov
or
dec
mov
andb
daa
rorb
mov
es
jbe
or
outsb
lcall
push
outsl
setp
addr16
aad
sti
add
dec
mov
mov
add
scas
lret
lods
cmc
dec
shrb
out
mov
out
xor
sahf
and
fmull
mov
fisttpll
fnstsw
push
in
repz
enter
movsb
xchg
ret
testl
add
inc
sbb
fdivr
add
cmp
fnstenv
inc
lret
in
sbb
into
rclb
xor
ret
xchg
leave
xchg
call
jb
or
les
xchg
mov
fisubrl
icebp
and
sub
daa
test
in
stc
dec
jl
sub
stos
inc
movl
mov
sub
stc
clc
jle
scas
movsb
testl
sbb
mov
aaa
nop
pop
aad
adc
dec
ror
push
sub
lret
sub
out
fcompp
push
mov
or
cmp
in
addl
lret
push
js
ret
jecxz
push
sub
xor
mov
or
pop
jl
ror
movsl
fistpll
push
pop
lods
cwtl
mov
add
shrl
or
inc
and
inc
rclb
addr16
mov
xchg
dec
ret
sub
ljmp
jae
clc
adc
les
mov
movsl
test
popa
les
shll
loop
unpckhps
pop
into
imul
movsl
jns
nop
lods
xchg
cltd
sbb
addb
loop
inc
in
js
mov
inc
stos
mov
sahf
push
out
pop
nop
sti
and
fs
and
adc
pop
mov
aaa
ja
xor
notb
or
pop
fsubr
test
aas
adc
idiv
sub
jb
cs
sbb
pop
icebp
or
outsl
dec
iret
ficomps
mov
mov
jno
sbb
ficompl
adc
jp
mov
cwtl
int
sbb
fsubrs
add
std
mov
xchg
leave
inc
or
xlat
push
lahf
aad
lock
push
aad
cmp
rep
lea
pusha
mov
lock
test
in
xchg
rorb
mov
pusha
and
inc
sbb
jp
ret
ja
fdivrl
popa
mov
xchg
jle
sub
lea
out
in
jle
lcall
dec
mov
hlt
or
into
push
cmp
jge
fs
and
aas
add
mov
stc
cwtl
cmpsl
lahf
sbb
int3
xor
and
mov
arpl
pop
cld
mov
xchg
jle
mov
mov
movsl
sub
sahf
repnz
jp
stos
lcall
or
sbb
je
inc
xchg
es
pusha
dec
and
xchg
scas
rcr
int3
sub
into
pop
pop
imul
mov
lret
xchg
pop
dec
out
in
pop
cmpsb
dec
ja
xchg
stos
jne
inc
mov
mov
adc
in
ja
jae
add
popa
cmp
test
sbb
lret
xchg
iret
xchg
lahf
inc
in
imull
or
mov
xor
ljmp
js
imul
test
xor
test
jmp
push
les
popf
xchg
enter
xlat
xor
pop
push
test
fadds
inc
sbb
movsl
mov
loope
xor
push
mov
in
fstl
mov
mov
testl
insb
cmpsb
fimull
fdivrs
lock
inc
les
push
inc
pop
xor
sub
dec
shll
mov
or
add
dec
ds
inc
add
stos
pop
pop
push
mov
or
push
and
or
sub
inc
sub
out
aaa
outsb
pop
data16
xor
loope
pop
mov
jge
add
cmp
incb
test
aaa
mov
lods
ja
xchg
ds
cmp
rcr
mov
dec
cmp
mov
fs
pop
mov
xor
jle
popl
inc
xchg
pop
or
and
xor
arpl
cmc
dec
xchg
sub
adc
call
int3
std
push
dec
add
repnz
cmpsl
repnz
cmp
push
add
outsl
decl
cmp
jno
mov
pop
mov
and
mov
cmpsl
push
pop
cmpsl
sti
cmpsl
lcall
enter
pop
shrb
fistps
lret
loop
in
mov
inc
jg
mov
sbb
push
test
add
stos
cmpsl
add
pop
adc
sub
test
fisubl
negl
push
dec
nop
cmpsb
xchg
testl
mov
mov
and
pop
ss
adc
push
add
mov
sarl
push
dec
inc
outsl
mov
push
mov
xor
jl
mov
mov
incb
pop
pop
pop
fwait
or
and
stos
push
mov
or
fildl
dec
jo
cmpsl
call
jmp
dec
mov
aad
jo
xor
in
push
push
insb
or
add
cmp
and
push
xchg
jl
out
xchg
pop
loope
xchg
sahf
jge
dec
sbb
cmp
cmc
je
stos
pop
stos
dec
add
aas
aam
popa
xor
cwtl
push
dec
cmp
ror
test
cmp
mov
push
jns
cwtl
sbb
or
cld
jp
sub
xor
movsl
loope
stc
xor
je
lock
and
repz
jp
pop
jmp
jmp
into
push
pushl
or
or
mov
pop
sbb
push
sbb
jb
sub
test
int3
inc
jge
lahf
xchg
and
loopne
jge
cmp
aaa
or
cltd
pop
leave
test
arpl
lahf
xchg
in
int
inc
xor
fdivrs
adc
ja
bound
cs
xchg
mov
shll
cmp
dec
aaa
sub
test
pop
xchg
push
push
or
cmp
dec
mov
adc
add
popf
aaa
js
xor
push
popf
mov
pusha
andb
add
cmp
pop
repnz
mov
cmc
gs
testb
sbb
bound
xor
imul
mov
push
push
bswap
outsb
mov
jbe
or
mov
jp
adc
cli
sbb
inc
jg
lds
adc
inc
cld
insb
push
push
mov
in
jp
dec
sbb
pop
add
icebp
pop
push
sub
inc
pushf
lock
mov
lret
cmpsb
in
iret
or
sub
cmp
out
push
xchg
incb
inc
idivl
add
repnz
insb
adc
in
cltd
scas
and
inc
mov
jb
sbb
jp
sbb
cmp
xchg
cs
jle
push
cmpsl
ljmp
ja
pop
jp
mov
cmp
and
sbb
or
add
int3
and
sbb
call
gs
add
push
mov
movsb
xchg
test
jp
pop
sbb
inc
inc
push
adc
orb
or
sub
pop
sahf
add
adc
lahf
lods
push
push
lret
mov
movsb
and
push
xor
movsl
or
jo
cmp
jbe
scas
dec
nop
push
add
xor
inc
dec
inc
stos
or
inc
mov
xor
dec
call
sbb
xor
cs
xor
pushf
stos
das
pusha
mov
aad
xchg
das
aam
mov
das
mov
xchg
jbe
dec
jno
push
sub
clc
shrb
cltd
mov
insb
daa
fcoml
enter
push
fisubrs
js
std
xchg
out
adc
les
sbb
dec
in
dec
ret
mov
xor
notl
aaa
xchg
push
je
sub
in
stos
lea
mov
or
mov
aaa
lods
fsubrp
icebp
ret
mov
loope
mov
imul
push
aad
adc
cmp
mov
inc
outsl
adc
mull
pop
mov
dec
sub
cmp
or
mov
push
aaa
in
lods
je
aam
mov
shlb
int3
push
out
ret
pop
cltd
cmp
adc
or
jl
aad
arpl
cld
mov
and
cmp
nop
push
repz
push
loope
out
or
push
sbb
cmpsb
iret
xchg
loop
jns
nop
cltd
jmp
ljmp
das
mov
or
sbb
and
std
push
lret
add
leave
pop
je
jge
sub
sbbl
out
lea
jl
mov
xor
not
incl
sti
shlb
dec
lcall
xchg
jl
push
pushf
xor
cmp
push
test
sarl
les
pop
pop
jbe
mov
inc
jno
negl
aaa
fldt
daa
sbb
xchg
nop
mov
imul
push
dec
xor
leave
fwait
or
data16
push
ja
xchg
mov
jb
pop
icebp
inc
in
or
fisubs
sub
lock
mov
or
push
loopne
fiadds
adc
fs
int3
jmp
sahf
xlat
nop
roll
pop
aaa
inc
in
or
mov
pop
hlt
rolb
pop
rcll
inc
push
hlt
jns
dec
jno
push
stos
pop
push
aaa
push
mov
sub
js
cld
stos
aam
inc
xor
jecxz
push
sub
and
mov
pushf
fldt
incl
xorb
insl
je
hlt
xchg
add
push
pop
sarb
inc
shr
dec
pop
mov
xchg
jnp
xchg
in
testb
mov
lea
in
test
mul
ret
push
or
inc
add
push
mov
pop
out
mov
jo
out
mov
mov
jne
push
add
pop
iret
nop
adc
and
nop
sbb
push
nop
adcl
cmp
ja
xor
bound
jno
hlt
jbe
js
adcb
test
add
test
cmpsl
xchg
jmp
pop
out
les
fs
test
mov
push
iret
add
add
addr16
adc
xor
mov
lea
stos
aam
mov
or
cmp
inc
sbb
mov
pop
dec
aam
dec
andb
mov
xchg
lock
js
cwtl
mov
and
pop
jmp
and
add
sbb
and
aaa
loop
jl
cltd
mov
push
movsl
fsubrl
ret
insb
pop
push
cmp
adc
push
insl
lcallw
bnd
jo
pusha
pop
aaa
sbb
test
add
lea
sbb
mov
jo
mov
xorb
add
inc
lret
push
sbb
or
addr16
jno
mov
andl
shrb
mov
cmp
adc
and
pop
ja
enter
sbb
std
and
pop
sbb
cmp
lods
jne
cmp
push
jg
jmp
outsl
notl
dec
push
dec
xchg
cmp
xchg
jp
adc
sbb
cwtl
xor
or
xchg
repnz
lds
add
mov
jle
mov
push
mov
add
jne
or
pusha
mov
bnd
mov
lea
mov
pop
cwtl
mov
jbe
ljmp
and
xchg
pop
cli
jmp
mov
cmpl
add
syscall
call
xchg
mov
fdivr
cmp
mov
mov
sub
imul
test
sbb
or
xor
and
pop
shr
sbb
pop
outsl
das
jb
pop
daa
cmpsl
dec
in
sub
pop
mov
icebp
rolb
mov
movsl
lret
rolb
hlt
popa
pop
mov
jae
jge
cmp
loopne
or
mov
insl
jmp
scas
pop
enter
adc
mov
adcl
inc
test
adc
push
sbb
clc
or
popf
pop
sbb
cmp
sub
in
mov
mov
mov
mov
jge
and
adc
inc
push
jno
jecxz
lret
cwtl
pusha
fucomp
sbb
stos
in
movsb
inc
aas
pop
mov
divb
scas
inc
inc
rol
in
leave
iret
mov
and
sub
xchg
ss
push
jae
mov
cwtl
xor
add
cmpsb
sti
push
add
psubsb
in
and
mov
addr16
xchg
bound
jae
xchg
xchg
mov
cmpsb
sbbb
xchg
or
test
xor
lret
jno
int
sbb
lods
orl
push
in
jmp
ret
and
inc
cmc
lods
adc
loope
push
push
cmpsb
cmp
lods
pop
iret
or
daa
ds
enter
sbb
in
shrb
mov
adc
in
mov
mov
icebp
shr
pop
dec
sbb
andl
call
jmp
push
mov
jnp
dec
aaa
fs
popf
or
fbstp
push
stos
mov
mov
imul
jns
mov
adc
and
icebp
inc
movd
or
lods
jl
xor
xor
push
and
jge
pop
cmp
out
inc
ret
mov
mov
push
cld
mov
clc
aas
or
aad
test
cmp
popa
sti
mov
fcoms
adc
jno
ficoms
xchg
js
mov
mov
push
cmp
mov
mov
test
inc
or
lea
sbb
mov
mov
mov
jns
mov
sarb
fisubs
stos
sub
jle
subl
pop
push
mov
inc
ret
outsb
lahf
shrl
aas
data16
xor
mov
dec
dec
mov
pop
inc
and
xor
mov
adc
or
popa
stos
repnz
dec
mov
xchg
and
cmp
lcall
sbb
in
scas
mov
mov
lret
xchg
ljmp
cwtl
pop
addr16
sahf
jo
xor
in
das
repnz
test
mov
pusha
sub
fs
or
int3
pop
mov
fnstsw
xchg
sub
lock
and
xchg
fistps
mov
and
sub
cld
lods
das
sub
inc
xchg
dec
cmp
cs
or
lret
repnz
movups
int3
jne
pop
mull
je
insb
fldenv
inc
mov
imul
xchg
and
fisttpll
jns
or
test
inc
xchg
sub
addr16
outsb
lods
xchg
out
sbb
or
std
cltd
mov
insb
popa
ret
ret
enter
sti
push
in
sbb
fildll
fs
and
lahf
cs
push
inc
fwait
mov
fsubr
mov
repnz
xchg
fimull
push
lock
mov
aas
sahf
xor
push
push
lds
lds
in
dec
jmp
js
jbe
jl
pushf
popa
mov
fwait
xchg
mov
or
out
xor
jo
and
inc
in
inc
push
inc
out
pop
xchg
inc
inc
mov
jp
rcrl
add
jns
pop
sbb
and
hlt
jns
mov
enter
mov
ret
in
adc
test
mov
xorb
jge
jp
sub
jp
dec
add
loopne
insl
xorb
xor
lahf
or
mov
xchg
insl
sub
or
scas
stc
add
jne
stc
dec
adc
push
xor
jmp
add
fucomp
jmp
dec
loope
cmp
fimuls
call
inc
call
mov
jo,pn
ljmp
and
iret
sub
bound
cmp
cld
pop
push
fstl
testb
or
movsb
mov
ret
shll
sbb
cmp
loop
jns
mov
push
jle
and
clc
in
mov
ss
jnp
inc
sahf
push
sahf
sbb
xchg
fiaddl
dec
dec
adc
rolb
jmp
and
add
into
jp
in
mov
mov
xor
mov
pop
xor
adc
ret
or
into
adc
popf
push
xchg
adc
cld
mov
jbe
dec
test
ja
pop
stos
mov
jns
cmp
dec
inc
stos
sub
mov
test
scas
iret
push
inc
and
add
push
sub
xchg
icebp
inc
adc
jno
mov
or
push
xchg
scas
lret
out
adc
mov
je
insb
sub
movsl
push
cmp
jbe
push
inc
add
in
mov
out
pcmpeqd
std
xorb
popa
lods
addl
add
sbb
xchg
stc
dec
lock
fsubrp
cmpsb
mov
xor
incl
std
push
xchg
out
popa
lock
shrb
aam
inc
mov
icebp
filds
shll
out
imul
mov
fs
push
jae
icebp
mov
idivb
out
or
aaa
dec
mov
sub
push
fdivrl
aad
lea
dec
aam
sub
adc
ds
jg
or
xchg
ljmp
mov
add
adc
enter
test
loopne
adc
leave
dec
bound
cmp
rorb
xlat
or
rcll
out
mov
jno
mov
imul
cltd
inc
xor
xchg
mov
inc
push
outsb
add
cltd
scas
jb
hlt
jmp
lds
cld
adc
push
out
leave
pop
dec
add
sub
iret
faddp
sbb
mov
xchg
and
jle
xchg
mov
or
and
pop
pop
push
jg
sbb
inc
fistpll
fs
call
out
clc
lds
shlb
jne
mov
arpl
cmp
std
dec
xor
dec
bswap
aas
mov
insb
cmpb
xchg
push
cmpsb
cld
or
xchg
fidivrl
js
adc
pop
jb
push
sbb
shrb
or
push
inc
mov
loop
and
mov
adc
mov
cmc
idiv
dec
add
lock
or
xlat
mov
fs
insb
shr
dec
cs
in
into
xchg
aas
sbb
iret
lcall
or
outsb
mov
popf
stc
sbb
shl
inc
fbstp
add
out
jecxz
sub
sub
xchg
or
lods
mov
dec
out
fists
insb
mov
xchg
push
inc
dec
push
push
cmp
icebp
fcmovne
std
xor
xchg
adc
fcoml
inc
mov
lahf
scas
adc
rorl
cli
mov
aas
jle
fwait
and
test
sar
hlt
pop
sbb
push
push
xchg
mov
adc
cmp
negb
stc
popa
fstl
jb
out
dec
add
jp
movsl
sahf
test
push
jo
lods
mov
insl
loope
mov
add
sbb
jp
mov
sti
inc
mov
das
cmpsl
inc
xor
xor
ljmp
xchg
lret
lods
pop
test
push
jg
xchg
mov
cmpsl
fcoms
sbb
xchg
fmull
shll
rclb
sub
inc
xchg
inc
push
push
pushf
or
adc
sbb
cmp
das
jnp
loopne
enter
inc
xchg
aad
adc
dec
nop
mov
int3
out
es
jno
mov
pop
out
add
sti
ret
pop
outsl
xchg
daa
inc
add
ret
aaa
imul
test
mov
cltd
andb
cmc
in
loopne
movsb
jbe
cmp
repz
mov
xchg
mov
cli
aaa
dec
stc
or
xchg
inc
scas
push
loope
jl
mov
cmp
test
xchg
inc
pop
lea
ret
pop
push
testl
pop
sbb
js
pop
fisubl
aas
addr16
xor
jl
gs
je
xchg
imul
imul
pop
js
outsb
in
sbb
mov
mov
pop
dec
adc
mov
icebp
sbb
ja
cmpsl
adc
cmpsb
lret
cs
mov
insl
xor
shrb
int
in
test
aad
fbstp
cmc
mov
mov
adc
ret
icebp
in
jno
sbb
enter
addr16
inc
scas
fs
dec
xchg
jg
hlt
fs
test
xor
cmp
mov
outsb
mov
lahf
fldcw
jnp
jl
mov
imul
test
jge
jbe
jp
mov
push
dec
outsb
adc
pop
xlat
inc
pop
inc
insb
mov
nop
pop
ja
fidivrl
inc
lods
test
cwtl
fmul
pusha
repnz
loopne
inc
add
std
loopne
cld
fwait
cli
sahf
test
mov
dec
sbb
jnp
and
call
aad
hlt
in
addr16
and
arpl
and
dec
je
addl
and
jbe
dec
enter
or
push
ljmpw
js
rcr
addl
ficomps
fs
mov
jnp
iret
mov
dec
or
lock
sbb
mov
loope
sbb
xchg
inc
sub
sub
mov
test
sub
stos
xor
fmuls
push
aaa
jecxz
cmp
int3
xor
dec
rorb
stos
inc
incb
mov
mov
cltd
pop
jle
dec
in
fnstsw
mov
stos
clc
mov
pop
idivl
sbb
fidivs
scas
mov
inc
inc
test
out
test
shll
adc
push
add
mov
ss
adc
and
mov
sarl
jge
les
mov
cmp
es
enter
sar
xchg
mov
mov
xchg
dec
push
inc
jmp
decb
lcall
testb
xor
dec
loopne
shrb
jmp
push
lock
fs
mov
mov
pop
xchg
leave
jnp
push
jno
fildl
stc
mov
dec
mov
fucomi
cwtl
test
inc
in
stos
sti
rol
pop
int
sbb
sub
notb
sarb
cli
fimuls
insb
andl
stc
repz
shl
lock
cli
push
test
scas
jne
loope
test
add
pop
repnz
jp
jb
rclb
xorb
lret
loopne
sbb
out
negb
mov
ss
add
push
cmp
push
mov
mov
icebp
sbb
hlt
cmp
cld
push
int
jne
pop
cwtl
push
mov
in
data16
sti
pop
and
pop
add
ret
and
pop
dec
xor
cmpsl
stc
push
fadd
in
pop
popf
loop
clc
inc
xor
jge
mov
push
mov
push
push
mov
ds
out
loope
pop
mov
insb
sub
je
aaa
jbe
or
jl
pop
repz
mov
movb
inc
xchg
jp
lcall
push
jne
xor
sub
xor
cmp
idivl
ljmp
pop
rcrb
call
or
mov
dec
rorl
dec
hlt
dec
mov
jp
add
scas
stos
in
push
bound
fcmovne
mov
jle
sbb
pop
lcall
xchg
shlb
mov
mov
imulb
mov
push
and
cld
sub
and
push
jo
ret
aas
push
loop
ljmp
adc
lret
outsb
ljmp
dec
jno
xchg
jge
inc
inc
add
pushf
lcall
and
loope
js
cmp
iret
insb
cmp
shl
fwait
mov
add
iret
int3
jmp
in
pop
dec
test
clc
loopne
pop
xor
jbe
mov
stc
jg
mov
xor
pop
lock
push
mov
mov
pop
repnz
add
notl
test
xor
cmp
cltd
push
push
mov
mov
mov
inc
inc
inc
pop
pop
mov
and
les
mov
out
push
add
pop
adc
fldl
das
lahf
sub
cmp
fwait
testb
adc
cld
jo
inc
scas
inc
loop
xlat
jns
ficompl
adc
daa
mov
push
xor
and
rcl
jle
mov
sub
out
ljmp
std
jl
and
scas
aad
mov
shll
cli
frstor
popf
adc
aad
lds
push
gs
mov
rolb
js
inc
push
nop
aad
pop
mov
mov
addr16
mov
gs
ret
lcall
pushl
pop
stc
push
ret
fistpll
maxps
in
ret
jg
push
ret
mov
mov
test
jl
mov
jo
ljmp
fdiv
enter
decb
mov
jp
insl
add
psadbw
out
fisttps
push
push
subw
imul
fdivl
out
push
icebp
js
ljmp
or
mov
aaa
pushf
nop
push
mul
push
inc
shll
rol
or
adc
test
inc
roll
pop
idivb
jmp
sti
xchg
sub
enter
pop
movsb
sub
xchg
popa
push
sbb
test
repnz
shlb
mov
sub
lahf
pop
sbb
adc
mov
push
aad
testl
xlat
dec
jp
ret
inc
add
inc
mov
sub
mov
ja
sbb
push
orb
std
leave
pop
mov
js
aam
cmp
movsl
scas
lret
imul
inc
fcmovnb
fidivrs
pop
fisubrl
aaa
or
fwait
dec
xchg
inc
or
jns
out
xchg
sbb
fwait
inc
fs
ja
xchg
sbb
nop
fmulp
mov
add
inc
test
cld
and
mov
pop
add
out
lds
cmpsb
shrb
jne
pop
and
push
sti
sbb
xchg
adc
hlt
pop
mov
sbb
adc
xchg
cmpl
and
push
movsl
dec
out
and
psubsb
inc
mov
or
sbb
clc
xchg
icebp
or
sub
sub
sti
push
enter
mov
and
xor
jae
push
fcompl
xchg
or
xor
xor
bound
sub
repz
inc
push
std
xchg
jo
fs
xor
jle
xchg
push
push
pop
aam
call
mov
mov
inc
orb
lods
mov
add
mov
hlt
jp
mov
in
push
roll
sub
sbb
adc
mov
out
das
nop
faddl
or
dec
or
mov
and
mov
mov
ret
addr16
or
mov
mov
sub
loope
and
enter
pop
je
pop
call
rcrb
xchg
lods
mov
movsl
fwait
push
pushf
sub
push
push
das
xchg
sub
or
rorl
adc
jl
imul
cmp
mov
movsl
or
push
sahf
ja
jl
fimuls
ret
sub
pop
push
icebp
sbb
xor
xchg
int
pop
in
ljmp
iret
sbb
pushf
jo
jo
sbb
jns
push
fiadds
movsl
repnz
cld
mov
push
mov
or
add
push
or
inc
sbb
stos
or
xchg
and
aas
scas
popf
lock
sti
mov
xor
in
xlat
dec
mov
fsin
scas
push
cmp
out
sub
test
testb
scas
sub
or
mov
inc
pusha
pop
push
insb
pop
out
loopne
sbb
cmp
sub
push
cld
dec
xchg
loopne
jmp
inc
bound
xorl
mov
push
xor
xchg
rcrl
jbe
sbb
push
sub
xchg
lock
and
test
jbe
sub
lds
idiv
adcb
or
repz
loop
mov
xchg
pop
jb
xor
out
and
sbb
inc
add
xor
sbb
xchg
mov
in
ds
sbb
imul
jnp
inc
and
jbe
push
xlat
jp
sub
pushf
push
int
mov
mov
loope
ret
roll
cmp
adc
lock
scas
cli
mov
and
and
dec
jl
daa
dec
sahf
shl
xchg
out
movsl
mov
out
mov
push
pop
mov
loope
sbb
mov
mov
loopne
loope
not
pushf
xor
cmpsb
dec
mov
outsl
push
xor
fsubr
inc
popa
cmp
mov
push
sub
jecxz
mov
call
imul
mov
ret
enter
inc
cwtl
fildll
cmpsl
data16
dec
je
bound
cmp
stos
sub
out
add
push
cmp
dec
addl
and
cli
or
push
jae
dec
ljmp
sub
loop
mov
inc
jmp
dec
leave
pop
fwait
cwtl
cs
clc
xor
imul
rorl
imul
out
in
and
pushf
jge
mov
pusha
sub
fadds
mov
ja
mov
test
bound
mov
pop
inc
fcompl
fiaddl
cwtl
call
out
daa
insl
ds
scas
test
popf
jno
jnp
cmp
aaa
jge
sbb
sbb
jno
inc
sub
lods
lcall
sar
icebp
cmp
push
xor
fldcw
dec
mov
push
out
push
add
loop
xchg
jl
movsl
pop
icebp
cli
jp
and
adc
and
or
scas
pop
mov
inc
stos
xchg
mov
daa
cmp
gs
jbe
jge
add
fisubrl
push
jp
mov
mov
pop
xor
inc
shrb
mov
or
adc
xchg
xchg
or
add
push
stos
es
push
dec
xchg
or
imul
sub
pusha
xchg
pushl
je
lahf
dec
or
and
imul
je
dec
jecxz
sti
mov
jns
xchg
stc
cmp
insb
xor
push
enter
pushf
pop
js
pop
imul
js
push
imul
inc
icebp
ss
fsubs
outsl
fldt
aad
js
jnp
push
push
in
jg
fcmovnbe
sub
sub
dec
xchg
ss
sti
and
dec
xor
lcall
xor
pop
fstl
or
out
ss
loop
popf
pop
outsl
push
add
pop
cmpsl
gs
cmp
loop
bound
fstl
and
sub
test
lods
sbb
fcomip
or
pushf
pop
xchg
imul
adc
jo
inc
xchg
fs
rcrl
mov
mov
in
xor
dec
and
cwtl
out
and
inc
rclb
cmp
insb
cmpl
jg
sbbb
push
shr
sti
jae
pmulhuw
or
rclb
fs
dec
inc
fcompl
sbb
push
fnstenv
fidivs
and
cli
fcmovu
test
ss
js
mov
jne
fidivs
pushf
ja
in
sahf
loopne
inc
mov
outsb
popfw
or
fs
push
cmc
out
ret
add
fwait
inc
fsubl
mov
sbb
cmpb
jo
sub
sbb
jo
ret
cmc
jb
xchg
cmp
pop
cmp
jo
hlt
inc
lock
test
pop
mov
int
test
imul
or
inc
lock
mov
and
cmc
inc
mov
cltd
fsubl
shr
push
lcall
cmp
js
and
jae
std
pop
aas
mov
stos
sbb
xchg
mov
or
mov
shlb
inc
add
fsubs
push
add
xor
pop
or
setnp
mov
outsb
lret
or
xchg
add
push
push
in
xor
and
leave
adc
or
in
fcomp
mov
sbb
fsts
sub
add
push
sub
or
add
cwtl
cwtl
mov
mov
jle
pop
loopne
or
xor
sub
cmc
push
nop
add
js
and
addr16
add
dec
xchg
push
ja
popf
push
xor
iret
clc
sbb
mov
fstl
mov
push
sub
mov
push
in
mov
cmc
in
ficomps
mov
inc
iret
adc
and
or
int
out
and
je
mov
cmpsb
mov
add
loopne
add
fwait
mov
push
jmp
jle
iret
fs
dec
inc
movsb
mov
xchg
and
jle
jle
inc
push
mov
dec
inc
add
and
mov
sub
sub
mov
into
lock
xchg
xchg
mov
aaa
jmp
mov
sbb
cmpsl
pop
push
jns
imul
inc
jnp
leave
or
je
jbe
add
adc
test
cmp
ret
mov
add
pushf
daa
and
jbe
fs
push
loop
divl
loop
les
mov
nop
gs
mov
jae
jae
pushf
xlat
and
pop
sub
int3
inc
push
ret
subl
xchg
clc
cld
lret
pop
scas
and
lahf
insb
sub
out
push
lods
ja
cmp
mov
fidivrl
cmpsl
inc
neg
lods
or
out
out
lahf
sub
addl
jne
dec
outsb
movsl
adc
icebp
sbb
xchg
xchg
xchg
iret
xor
sbb
jmp
sub
popa
in
in
aas
xchg
sbb
sbb
dec
pop
adc
test
dec
arpl
out
add
cmp
or
cmp
lret
mov
xchg
outsb
scas
inc
mov
xchg
enter
mov
adc
sbbb
mov
or
mov
pop
jle
aad
dec
jmp
push
fwait
enter
xor
push
lods
arpl
or
push
dec
popl
pusha
inc
mov
fldt
les
bswap
ret
push
rorb
xchg
stos
enter
push
out
mov
cmp
in
inc
fsubrp
lcallw
cmpsl
sbb
repz
in
dec
movsb
sarl
mov
leave
cmp
lcall
push
dec
addr16
mov
mov
sub
ljmp
and
xchg
and
into
les
stc
test
cmp
dec
inc
cmpsb
lret
ja
pop
mov
inc
push
pop
mov
pop
and
insl
mov
jmp
rolb
repz
sti
mov
sbb
pop
pop
xadd
adc
xchg
nop
dec
mov
jo
cld
mov
fisttpl
cs
aad
sbb
aas
data16
add
jne
popf
dec
cmpsl
das
loop
cmp
sbb
xchg
filds
mov
iret
mov
pushf
ds
jle
xchg
sbb
sub
popa
xchg
sbb
hlt
pop
stc
adc
jge
repz
js
fiadds
and
repnz
hlt
sub
cmp
inc
pop
and
iret
cltd
test
inc
add
in
push
xchg
fistpl
out
cmpsb
insl
or
xor
jp
sti
inc
pop
in
repz
mov
cmp
mov
ret
je
imul
and
ljmp
call
add
aaa
mov
push
imul
add
xor
adc
fs
aad
sub
mov
sbb
lods
cmp
ret
fidivl
inc
std
inc
mov
pop
lods
xor
iret
inc
ret
add
in
out
jmp
push
push
outsl
incl
cmp
mov
ror
cmpsl
mov
fwait
dec
leave
push
jecxz
aad
and
loope
andl
mov
scas
xchg
cmp
jge
jge
adc
adc
mov
mov
jp
push
mov
inc
ja
int3
inc
cmpl
push
frstor
xchg
stos
jns
neg
mov
stc
inc
mov
decl
ficomps
leave
push
xor
xchg
ss
sbb
fnstcw
repnz
and
mov
test
xchg
mov
sti
inc
pop
arpl
js
jecxz
out
rcll
mull
popw
jmp
or
cmpb
rorl
xor
stos
mov
mov
sub
stc
loope
stos
adc
iret
inc
loopne
fs
dec
sbb
cmp
add
outsb
mov
pop
and
daa
xchg
ret
lods
mov
xor
cmp
dec
sbb
and
sub
mov
jne
clc
mov
cvtpi2ps
in
push
int3
sub
leave
pop
jmp
in
adc
fisttps
push
inc
xchg
xchg
mov
and
mov
rolb
repz
call
inc
cmc
xchg
std
sub
and
les
lret
enter
mov
cmp
cmp
sbb
mov
mov
add
inc
adc
test
sub
and
pop
mov
jbe,pn
dec
sbb
cs
cmp
or
mov
lahf
cwtl
icebp
in
sbb
xchg
pop
and
lea
mov
jmp
shrb
movsb
in
jno
jle
xor
out
sbb
jne
js
sahf
imul
sbb
stos
adc
addr16
push
dec
repnz
pop
dec
scas
int3
lret
add
lods
xorb
lock
stos
pop
adc
aam
fisubrs
mov
js
dec
sahf
stos
out
mov
xor
arpl
lock
pop
pop
mov
and
cmp
lock
or
fs
and
cmc
add
xor
aam
clc
movsb
lods
add
popf
int
lret
pushf
test
outsb
sbb
xor
cmp
cld
in
roll
jp
sub
jb
std
and
mov
test
sbb
and
xor
inc
outsl
xor
loope
cmp
movsb
dec
add
cli
push
jbe
sahf
dec
push
mov
inc
mov
pusha
adc
popa
loopne
jge
iret
lcall
pop
sub
sahf
mov
sahf
sbb
mov
mov
repnz
das
pop
mov
enter
stos
push
fistpl
push
ss
and
mov
mov
ret
scas
inc
dec
stos
test
fsubr
push
dec
scas
les
sahf
fs
out
pop
add
mov
add
cltd
test
movsl
mov
ljmp
pop
mov
xchg
aad
and
lods
mov
js
movsb
cmp
bound
stos
sub
push
ljmp
mov
loop
xor
in
stos
mov
add
fdivl
sub
or
scas
mov
push
sbb
sbb
ja
sub
ret
jecxz
loopne
cmc
or
pop
mov
int3
cmp
aas
adc
loope
rcrb
iret
mov
fsubr
lcall
or
imull
inc
xor
or
ljmp
fildl
xchg
mov
mov
mov
popf
xlat
std
xchg
aas
xchg
repnz
xchg
orb
pop
scas
dec
cmp
xor
imul
fdivs
jns
fdivs
filds
fidivl
sub
loope
dec
orb
jecxz
cmp
mov
hlt
rcrl
pusha
push
movsb
adc
lcall
inc
sti
outsb
sub
push
into
inc
mov
adc
out
dec
push
lock
or
roll
push
jecxz
cmp
pop
sar
sub
stc
lds
mov
outsb
push
jmp
aam
outsb
movsb
sbb
add
push
dec
or
pop
js
cs
cmpsl
inc
call
out
mov
jmp
mov
sub
sarl
cmpsb
dec
mov
jg
xchg
inc
mov
enter
cmp
in
out
lds
mov
adc
xor
aas
mov
or
push
push
add
jg
pop
cltd
stos
stos
sub
xor
cmpsl
shrl
repz
loope
scas
push
cmp
jo
in
ljmp
xchg
mov
sub
cltd
mov
xchg
mov
rol
mov
sbb
test
push
rorl
push
jecxz
xor
data16
inc
adc
or
pop
fildll
cmpsl
repz
pop
popf
add
shl
pop
std
lea
scas
lret
in
test
and
enter
jl
test
cmp
adc
xchg
out
push
cmp
pop
push
xorb
sub
lock
xor
sbb
ds
nop
lds
and
lret
adc
es
out
mov
sub
lea
sbb
adc
test
mov
arpl
lods
aaa
sarl
movsb
pop
lret
pop
mov
hlt
rclb
xchg
cs
adc
fs
mov
dec
aas
popa
fs
clc
iret
repz
enter
push
xchg
int3
jp
dec
outsb
add
jns
or
xor
out
and
sub
ret
or
inc
arpl
xchg
lret
dec
shlb
call
leave
jo
ficoms
sub
out
lea
pushf
pop
test
bnd
out
push
pop
adc
xchg
mov
fldt
jmp
dec
xchg
pop
dec
arpl
popl
repnz
ljmp
popa
push
pop
dec
jo
fiadds
nop
mov
cmpb
add
mov
in
mov
add
repnz
mov
andl
inc
dec
aad
ret
xor
stos
pop
sub
fildll
jle
push
loopne
repz
push
int
mov
add
lahf
jl
mov
fildll
sub
mov
stos
mov
mov
jns
push
xor
xor
push
roll
andb
push
xchg
mov
or
std
sub
mov
jmp
scas
fldt
inc
insl
imul
sti
cmp
pushf
in
fstps
dec
xor
filds
enter
pushl
adc
hlt
lret
adc
or
ret
loope
mul
in
test
loope
outsb
jecxz
pop
mov
ljmp
dec
xchg
pop
add
rcrb
imul
pop
sbb
add
pusha
jg
dec
pop
mov
sbb
cmp
dec
aam
push
and
out
decl
mov
popa
inc
stos
fildll
fucomip
push
outsl
adc
cmp
cmp
and
or
icebp
shrl
mov
into
mov
call
sti
push
fcompl
mov
outsb
arpl
test
inc
xchg
enter
cmp
fadds
xor
push
bound
clc
movsb
pushf
inc
sahf
sub
mov
mov
xchg
fs
neg
add
orb
stos
push
sub
stos
push
rcrl
insl
popa
mov
sub
jb
inc
push
mov
pushf
aas
or
mov
icebp
sti
pop
inc
loopne
mov
xchg
xchg
pushf
out
jmp
vandps
sti
outsl
out
mov
sub
stos
inc
or
xor
fsubrs
hlt
into
test
mov
jmp
mov
mov
jge
xchg
sbb
out
sbb
push
imul
pop
cmp
xor
in
into
fisttpl
add
sahf
pop
jno
pop
adc
push
sbb
mov
stc
sbb
or
pop
scas
out
adc
add
aaa
jecxz
aaa
sahf
sbb
std
jg
aam
in
mov
out
and
push
xor
sahf
loop
popa
sub
ret
je
iret
loopne
add
daa
or
pop
hlt
adc
add
in
jmp
mov
add
nop
bound
mov
pushf
xchg
mov
xchg
push
lret
cwtl
pop
mov
dec
xor
jp
in
fcmovb
pop
jmp
jbe
push
add
pop
ljmp
fdivrs
repz
fwait
imul
cmp
cmovno
shl
or
inc
dec
dec
add
push
push
hlt
xchg
push
cmp
cs
or
gs
pusha
push
jp
xchg
arpl
fdivrs
in
inc
mov
test
pop
push
pushf
imul
rorb
mov
jl
sti
pop
push
repnz
adc
pop
cli
mov
pop
adc
mov
add
mov
adc
repnz
dec
enter
test
ljmp
in
or
inc
cltd
add
adc
fwait
movsb
lods
xor
adc
in
jl
iret
push
dec
xlat
mov
jge
das
fsubr
addr16
pop
jle
sbb
movsl
popa
push
test
les
inc
mov
push
jae
loopne
daa
test
icebp
loopne
js
das
lods
movsb
xor
pop
fistl
pop
or
sub
xchg
mov
pop
mov
and
sbb
fs
lcall
sub
in
or
mov
add
cmp
adcb
dec
ja
adc
fdivs
insl
outsb
insb
push
imul
push
add
hlt
inc
adc
push
mov
rcrb
jp
and
bound
ja
out
adc
lcall
cli
mov
ljmp
leave
push
call
push
mov
lods
mov
mov
std
mov
aad
mov
scas
jp
xor
mov
pop
sbb
stc
xor
add
and
or
cltd
test
sbb
inc
pop
lret
push
mov
sti
shrl
sub
imul
inc
add
lcall
mov
jle
loopne
cld
aam
test
pop
lods
sarb
imul
xor
je
xchg
addr16
stos
pop
outsl
ja
dec
jae
add
lods
insl
cmp
fisttpl
sub
repnz
in
add
fdivrp
or
mov
cltd
dec
push
into
pop
push
lock
js
or
mov
out
fcom
cmp
dec
out
xchg
mov
mov
pop
dec
in
fbld
mov
pop
es
and
dec
js
mov
inc
sub
xor
mov
sahf
fldenv
add
dec
cld
mov
sub
add
xor
xor
inc
or
leave
mov
incl
mov
inc
xlat
sbb
bound
hlt
and
jmp
push
pusha
xchg
mov
cltd
fs
and
jge
lahf
pop
repz
mov
jne
sbb
ret
fisttpll
mov
rcrb
and
add
push
mov
mov
les
mov
xchg
pop
sbb
or
stos
maskmovq
notl
fsubl
push
clc
ds
bound
inc
push
out
and
sub
outsb
out
rcrb
jp
cmp
in
dec
mov
inc
xchg
cwtl
test
lods
fmul
jne
popf
movsb
and
pop
mov
xlat
xor
push
push
mov
add
xor
jno
loope
mov
pushf
mov
mov
std
xchg
and
loopne
dec
lret
inc
adc
xchg
imul
xchg
cli
inc
xchg
jae
pop
cwtl
lret
pop
jne
cwtl
push
sbb
sub
jns
cld
loop
sub
or
xchg
in
int
lret
scas
movb
mov
dec
loope
les
jbe
lock
xor
inc
dec
jmp
adcb
adc
cmp
mov
outsl
mov
insl
xchg
ud1
dec
and
xchg
xchg
and
ficompl
xchg
vpmaddwd
xor
out
jl
jns
pop
push
sub
lock
sub
stos
ljmp
cs
lret
dec
or
or
lret
sbb
sub
js
inc
jbe
mov
push
cmp
xchg
mov
jns
leave
or
add
inc
push
push
cmp
push
test
loopne
mov
imul
adc
dec
lret
fistpl
aad
paddw
jae
out
push
add
nop
add
mov
mov
fcom
inc
or
repnz
inc
xor
je
jb
adc
push
movsb
stc
decl
inc
xor
ss
arpl
push
mov
fcoml
in
pop
pop
or
sahf
ret
loopne
les
mov
repnz
stos
push
enter
dec
adc
ret
add
adc
outsb
mov
add
lcall
outsb
cld
sbb
pusha
jmp
lock
add
pushf
push
rcr
add
jg
jns
or
or
sarb
adc
aas
xchg
push
mov
pop
mov
or
adc
lds
xor
iret
or
jle
lods
out
mov
incl
in
jge
push
lret
sub
dec
add
dec
in
inc
jmp
push
insb
ficompl
adc
cli
xor
jne
or
sbb
jl
push
das
push
pop
ret
lds
iret
jmp
push
insb
aad
scas
sub
loope
lock
dec
icebp
outsl
pop
sbb
mov
push
add
clc
cld
cmpsl
cmpsl
inc
stos
sbb
jno
popa
jp
xor
lods
xor
push
test
test
adc
and
mov
jne
pop
ret
mov
mov
inc
sbb
sub
movsl
mov
sbb
xor
popa
push
dec
ret
pop
imul
scas
hlt
push
mov
push
leave
mov
or
enter
sbb
jnp
movsb
cmpsl
popf
mov
inc
cmp
mov
leave
in
repnz
xlat
pop
cmp
ret
imul
pop
ret
cmpsb
pop
mov
mov
scas
repz
fsubrl
pusha
mov
jl
leavew
in
sbb
addb
cmp
nop
mov
xlat
pop
ljmp
sbbb
fs
or
test
outsl
and
inc
cmp
and
cli
mov
and
xor
add
sub
iret
cmp
out
test
jmp
mov
mov
fstpt
aad
or
xor
sbb
mull
jbe
push
mov
xchg
mov
std
in
cmp
add
xor
jecxz
jae
daa
test
leave
adc
lds
lahf
sti
fwait
test
mov
rcrb
dec
sbb
mov
sti
cmc
leave
ds
repz
arpl
push
mov
rsm
mov
mov
aad
xchg
das
mov
or
pop
mov
pop
mov
dec
ja
xchg
lock
xchg
push
ljmp
inc
xchg
lahf
push
and
pop
pusha
les
les
mov
dec
mov
js
jp
sub
rcl
add
cmc
setge
fstpt
pop
xchg
dec
out
mov
cmc
push
mov
add
pop
xlat
xlat
mov
sbb
call
cld
pop
lock
jg
adc
jno
cmp
mov
pop
mov
hlt
loop
or
mov
sub
sub
mov
scas
lret
cltd
iret
and
imul
sbb
mov
mov
popa
lahf
jmp
jb
push
jmp
push
and
in
cmp
out
out
adc
xchg
sahf
daa
adc
lret
arpl
lock
dec
and
gs
xor
mov
mov
or
cmpsb
fcompl
call
pop
inc
inc
jno
lret
stos
das
test
sti
in
repz
push
or
rcl
ljmp
push
xchg
rol
xchg
std
shrl
mov
xchg
mov
mov
es
sbb
cmp
mov
addr16
xchg
push
in
cmp
adc
or
outsb
fnsave
mov
xchg
sar
push
aaa
xorb
sbb
push
xor
out
out
fmuls
stos
mov
and
and
or
aaa
fldt
or
mov
scas
adcb
stc
fmuls
add
out
test
stos
data16
out
xchg
xor
fdivs
lret
sbb
mov
lock
lahf
inc
or
or
jno
mov
cmc
dec
push
adc
sub
adc
mov
xor
lret
adc
mov
xor
mov
out
xor
es
dec
sub
in
cwtl
adc
push
adc
pop
dec
sbb
js
add
in
arpl
jge
loop
mov
mov
lret
mov
and
stos
into
sub
mov
mov
stc
fildl
dec
sbb
mov
int3
mov
lods
or
xor
sbb
xchg
call
adc
and
cmpsb
xor
push
shlb
movsl
test
adc
mov
cmp
cmp
sahf
ja
sbb
popf
stos
pusha
pop
ds
add
mov
ja
sub
ljmp
sbb
jecxz
xchg
jne
ret
stos
jge
stc
xor
shrb
adc
subl
and
iret
mov
xchg
hlt
lock
in
mov
or
add
ljmp
mov
ret
jo
popa
xchg
stos
imul
xlat
xor
loopne
pop
sbb
lret
jle
cwtl
xor
cmp
daa
jae
jmp
inc
xlat
mov
sbb
hlt
push
lods
lods
pop
or
lcall
pop
fstpl
mov
jne
cwtl
push
cmc
push
je
cld
inc
std
xlat
push
sbb
jge
lea
xlat
fdivrs
mov
shr
sub
pop
add
movsl
pop
jnp
testb
dec
adc
loopnew
dec
dec
fdivs
pop
iret
xchg
aad
adc
sub
rolb
push
dec
sub
or
outsb
xchg
out
jne
jno
test
push
push
or
xchg
mov
and
filds
and
mov
mov
arpl
jbe
jbe
add
imul
out
cld
fsubrs
jp
repz
fdivrl
add
pop
shrl
pop
dec
lahf
adc
lods
xchg
cld
pushf
mov
cmp
cmpsb
sbb
jb
mov
shl
adc
pop
mov
cmp
add
cmp
push
push
lods
dec
fsubl
mov
popa
and
mov
or
aam
cmp
mov
fistpll
xor
int3
push
into
push
dec
adc
dec
in
mov
cmpsb
lcallw
mov
test
mov
xor
pop
je
loopne
pop
movsl
jecxz
mov
jne
pushf
mov
cmp
test
dec
rorl
lret
xchg
xor
out
movsb
dec
dec
mov
dec
stos
leave
xchg
cmp
mov
out
imul
cli
fcmovu
cmp
jae
push
push
fildl
call
xchg
sub
inc
sbbl
dec
and
mov
jg
js
cmp
gs
leave
dec
int
outsb
push
add
xor
sbb
adc
push
or
imul
xor
aas
add
inc
imul
je
mov
mov
add
or
push
jge
loop
fisttps
bound
sub
xchg
lret
pop
fisubrs
inc
fidivl
ljmp
adc
mov
jmp
sub
add
clc
fdiv
in
sub
adc
popf
mov
mov
xchg
mov
imull
mov
mov
fidivs
scas
imul
adc
push
pushf
sbb
loop
xchg
int3
aam
mov
jne
lea
popa
add
cmp
leave
stc
stos
jg
cli
or
icebp
pop
in
jecxz
adc
fsubrp
xchg
in
rclb
xchg
mov
add
dec
popf
mov
xlat
outsl
sub
mov
add
sbbl
call
test
test
mov
leave
sbb
push
mov
mov
xlat
pop
sti
scas
ljmp
scas
mov
les
rcll
xlat
outsl
pop
and
xchg
lods
lods
push
hlt
mov
sbb
inc
lds
jle
cld
imul
cmpsb
int
sbb
dec
cmpl
push
xchg
daa
mov
and
int3
push
mov
cmp
lock
pop
sub
das
adc
cmp
inc
rcll
lret
xor
adc
icebp
inc
jl
in
ss
data16
pushf
cltd
mov
and
push
and
mov
jmp
push
push
rorb
jecxz
int
jle
into
stc
adc
nop
pushf
das
div
je
inc
dec
cmp
hlt
mov
pop
mov
add
xchg
dec
lea
es
push
mov
push
fwait
das
stc
sbb
push
xchg
and
fcoml
mov
scas
mov
iret
gs
jbe
fsubrs
fcos
pop
int
jnp
cld
add
jp
adc
lcall
arpl
xor
mov
fsub
mov
sub
dec
jge
daa
je
push
test
sbb
push
sub
clc
lods
daa
icebp
inc
cmc
out
dec
ja,pn
cmp
pop
sbb
inc
jge
cmp
xor
dec
and
jle
leave
push
mull
inc
lahf
xor
push
je
dec
xchg
push
push
icebp
out
push
dec
adc
fadds
movsb
jo
add
loopne
stc
lahf
sub
notb
out
rorl
mov
lea
out
jge
jg
jbe
jp
dec
dec
repnz
sub
sarb
enter
int
sbb
cs
fisttpll
adc
into
mov
decb
mov
jnp
jg
mov
xchg
and
xor
scas
loopne
andb
sbb
in
pop
push
lds
push
or
or
int3
lret
out
push
cltd
xchg
cmpsl
fisttpll
in
and
cmp
add
popf
inc
paddq
mov
into
ja
mov
pop
je
xor
cs
fistl
pop
stc
pop
inc
daa
lea
mov
ficomps
sbbb
into
std
in
sub
jns
imul
push
sub
xor
push
mov
pushf
pushf
aad
in
dec
push
fiaddl
or
sahf
lret
sahf
dec
test
jae
mov
adc
je
push
cmc
xchg
lea
test
sbb
jo
xchg
fldt
test
cmp
and
inc
lods
fdivrl
push
adc
push
jno
ret
push
cmp
jl
popf
ficoms
xor
add
sbbb
xor
test
inc
jbe
mov
cmpsl
and
add
jg
popa
sub
mov
aas
or
ljmp
xchg
cltd
push
lcall
dec
arpl
pop
insb
cs
movsl
loopne
pushf
es
mov
and
cld
xchg
mov
or
mov
ficomps
push
xor
jo
or
and
fdivs
ljmp
leave
xchg
notb
sub
xor
add
push
jecxz
jb
cmp
cmp
icebp
icebp
jp
test
or
scas
popw
cmp
mov
lret
stos
ror
adc
push
out
stos
sarl
out
dec
mov
jbe
mov
dec
test
sub
xchg
mov
or
scas
in
les
dec
les
sub
aad
iret
cmc
jecxz
ss
jno
orb
je
xor
fistl
jne
dec
leave
shlb
mov
pop
mov
mov
xchg
mov
je
cmp
adc
je
sub
xlat
orb
cli
rcrb
mov
lahf
in
paddb
xor
iret
jo
cmp
mov
les
mov
pop
inc
in
shl
cmpsb
or
jne
out
hlt
cmp
cmp
jg
test
mov
jbe
nop
mov
pop
nopl
insb
sahf
push
nop
rolb
sub
jmp
mov
xchg
add
mov
repz
mov
imull
imul
cmc
in
insl
into
movsb
dec
test
lea
jb
mov
enter
sbb
mov
xor
mov
pop
iret
mov
pop
lods
lds
mov
shlb
stos
dec
popa
cmp
cli
es
xor
in
mov
mov
ret
xchg
outsb
roll
jns
aad
hlt
cmpsb
imul
pushf
frstor
jb
adc
cmp
mov
sbb
push
lcall
cmp
lret
dec
xor
mov
test
dec
adc
sahf
dec
insb
or
enter
ror
push
in
insl
ds
int3
cmp
xchg
push
fidivl
cmpl
cmp
cmpsl
cmp
mov
lds
mov
aam
loop
mov
sbb
orb
fcmovu
xchg
into
adc
push
dec
cmp
rcrb
adc
popf
inc
push
xor
mov
adc
sub
xor
out
pop
mov
addl
rcll
mov
xor
jp
outsl
xor
xchg
addb
inc
movsb
fs
fbstp
push
popa
cmpsb
fcmovbe
jns
nop
popf
jp
or
in
dec
cmc
insl
sbb
test
scas
dec
sar
dec
loop
sub
test
lret
pop
mov
add
jae
add
pop
int3
jbe
mov
or
packssdw
push
pop
mov
jb
sbb
xchg
mov
outsb
divb
sub
out
add
pop
or
dec
rol
movsb
icebp
mov
ret
adc
pop
and
inc
imul
fcompl
dec
stos
ss
loopne
outsb
movsl
pop
loopne
sti
addb
loope
fsts
push
lock
pusha
fnsave
jae
adc
push
lods
inc
mov
xorb
dec
add
pop
mov
fcoms
call
inc
mov
fimull
xchg
ljmp
cli
test
add
cmp
lret
nop
insb
cltd
xchg
mov
and
dec
pusha
sub
xchg
pop
out
xchg
and
pop
test
rcrb
pop
dec
clc
adc
loopne
push
mov
jge
out
cmpsb
lea
addl
jae
cmp
fldt
dec
inc
test
sbb
pop
cmp
mov
and
xchg
adc
hlt
pop
dec
testb
test
mov
adc
xor
add
mov
lcall
dec
gs
adc
fldenv
lock
xchg
pop
sbb
push
popf
popf
sbb
fcomps
mov
loopne
aas
popa
bound
push
mov
jo
jae
sbb
movl
inc
insl
sub
sbb
pusha
mov
roll
js
adc
adc
stos
je
jnp
xchg
mov
data16
pop
mov
sbb
jne
sbb
pop
decl
xor
adc
into
dec
mov
mov
mov
mov
pusha
inc
arpl
sbb
fistl
add
fsubl
mov
mov
outsb
adc
mov
test
xchg
sub
stc
jns
sbb
pop
adc
xchg
sar
ljmp
bound
mov
int3
pop
outsb
shlb
aaa
sbb
dec
xor
sub
pop
ss
xor
icebp
sbb
shrb
stos
fstl
cli
or
and
jns
sbb
in
stos
lock
pop
cmpsl
pop
imul
mov
lea
sbb
and
negl
iret
inc
fcmovnu
lds
push
xchg
mov
push
add
aas
xlat
jae
lret
xor
std
cmp
mov
adc
xchg
loop
shlb
xchg
dec
mov
jecxz
and
gs
lahf
jns
jle
sbb
inc
sti
mov
cmpsb
push
and
scas
cmc
push
movsb
out
lods
inc
pop
arpl
xchg
jp
sub
call
sub
cmp
inc
shlb
in
shlb
xchg
mov
jo
ds
sti
pop
pusha
mov
cld
and
xchg
sti
mov
enter
daa
ret
mov
std
stc
ret
mov
or
into
mov
fcompl
inc
lods
inc
dec
pop
jbe
fcmovnu
pop
jno
in
fildll
in
xchg
mov
fcomps
xchg
inc
cmpb
pushf
push
fistpl
add
frndint
aam
jl
lret
xchg
xor
mov
or
mov
test
es
xchg
ret
push
dec
xchg
lods
sub
outsb
ds
cmp
or
pop
adc
dec
aaa
ss
scas
and
lock
cmpsb
in
xchg
jbe
mov
pushf
out
jnp
pop
test
pop
outsb
lock
sahf
inc
inc
jae
or
aas
mov
mov
or
cmpsl
aam
pop
xor
clc
fs
or
insb
jb
jo
push
ret
add
dec
aaa
lea
fdivrl
pop
push
jne,pn
dec
repnz
inc
jle
lods
scas
sub
xorb
inc
cmp
scas
mov
xchg
adc
push
and
stc
adc
pop
cmpsl
ret
out
sub
mov
cmp
inc
mov
repz
xor
idiv
and
jmp
es
mov
jo
sbb
out
sub
push
mov
rolb
sbb
jl
pop
cmpb
push
call
dec
jo
pop
mov
flds
cli
call
cltd
aam
sub
fsubs
mov
inc
das
mov
rcl
mov
iret
sub
call
jp
addr16
mov
and
and
repz
inc
aam
fadds
pop
fdivl
fistps
dec
insb
xor
xchg
pop
mov
jge
mov
shl
jl
sub
popa
push
xor
xor
add
sbb
ret
pop
xor
push
aas
jecxz
or
and
out
lret
lea
dec
jl
push
push
mov
mov
nop
out
adc
xor
adc
jge
mov
aaa
bound
loop
adc
mov
nop
aas
xor
dec
mov
scas
insl
outsb
int3
outsl
iret
mov
loope
cld
sbb
sub
or
loope
xor
xchg
mov
mov
cmp
add
mov
sahf
push
sbb
xor
cmp
or
add
push
ret
aam
les
stc
ljmp
jae
pop
dec
xchg
outsl
test
fstps
mov
mov
or
pop
in
xchg
aaa
xchg
movsb
jne
fistl
into
dec
mov
hlt
loopne
sbb
enter
sbb
jnp
dec
test
insl
out
insb
hlt
ret
pop
mul
out
into
pop
inc
loope
jnp
pop
mov
dec
jo
xlat
aaa
sti
inc
aas
pop
lea
in
and
adc
pop
mov
push
ficompl
sub
add
fwait
mov
push
inc
nop
clc
sbb
xor
cli
fs
mov
div
scas
mov
push
cmpl
out
add
and
ret
jecxz
arpl
in
sbb
jge
and
fdivrs
and
dec
cli
jns
loopne
add
insl
pop
xchg
sbb
imul
dec
scas
fsubrs
arpl
or
pusha
inc
sahf
sbb
rolb
cltd
jae
push
scas
pop
pop
pop
fldl
push
xlat
add
pop
fnsave
or
jnp
adc
mov
test
lret
pushf
clc
and
movsl
mov
sub
clc
dec
push
das
sub
dec
hlt
xor
pop
vpcmpgtd
pop
test
clc
or
stos
and
push
xchg
cli
pop
popa
or
cmpsb
dec
stc
xchg
jle
adc
ret
cwtl
jae
arpl
std
add
lahf
jo
xchg
push
mov
xlat
ss
movsb
pushf
mov
mov
cmc
push
xchg
and
mov
mov
lcall
dec
mov
dec
cmp
inc
loop
ror
and
jle
xchg
rcll
iret
sarl
les
movl
mov
or
push
pushf
xor
ficoml
mov
xor
dec
in
jl
fwait
push
adc
and
out
std
push
sub
loope
mov
mov
lods
xchg
pop
jnp
mov
inc
lret
pop
sbbl
sbb
jns
jno
pop
push
pop
add
cwtl
sub
xor
mov
cvtps2pi
or
andb
lds
stos
pop
cwtl
cld
sub
inc
pop
test
loopne
mov
and
dec
inc
jae
mov
lea
fistpll
jae
cmp
iret
push
enter
in
push
test
pop
pop
xor
adcb
xor
pop
icebp
sbb
jae
pop
cmp
jecxz
test
inc
jne
inc
dec
jae
push
sbb
xchg
out
jb
jae
push
or
subl
pop
dec
mov
mov
xchg
in
xor
in
or
icebp
cmp
inc
subb
aaa
push
lret
rcrl
ret
outsl
jnp
inc
push
add
and
out
sarl
lret
xor
sbbb
inc
nop
jmp
mov
lcall
out
pushw
adc
adc
popf
mov
stos
xchg
aad
xor
sti
push
and
jae
or
jb
add
push
je
sbb
test
push
xchg
mov
lods
sbb
stos
imul
clc
pop
push
xchg
into
pusha
inc
mov
test
jecxz
sub
jno
jg
mov
xor
test
mov
call
lret
mov
jbe
aam
lea
rcrb
or
xchg
jl
or
aam
push
dec
mov
add
mov
xchg
inc
fdivrp
and
lahf
insb
pop
mov
popf
mov
imul
xor
fwait
shrl
xchg
xlat
enter
mov
mov
enter
je
push
jo
repz
mov
out
fdivrl
in
sub
push
hlt
roll
add
test
xchg
clc
bound
ret
xor
jmp
xchg
in
js
mov
sahf
stos
cmp
rcr
std
dec
dec
and
in
push
or
shlb
subl
inc
mov
cmpsl
ja
push
or
xchg
pop
ret
mov
sbb
cltd
mov
sbb
mov
push
icebp
jmp
xchg
mov
ror
int
lahf
test
insb
jmp
shll
mov
fmull
stos
jle
mov
add
iret
jp
sub
sub
add
out
xor
stos
lret
enter
xchg
xchg
std
pop
ffree
divl
movsl
pop
push
push
cmpsb
xchg
sbb
scas
sbb
imul
icebp
ljmp
jne
xor
mov
cmpsb
int3
sahf
movsl
xor
inc
out
nop
mov
push
fbld
mov
es
das
nop
mov
cmp
shrb
loop
adc
inc
cmp
mov
push
lds
popf
sti
scas
mov
rcll
testb
lret
and
in
in
test
roll
pop
lahf
ss
add
test
int
out
es
xchg
nop
js
mov
daa
add
pop
dec
jb
and
push
aas
cld
jmp
sbb
cwtl
fisttps
sub
mov
pop
add
stc
sbb
inc
fwait
pop
test
lret
jmp
push
jb
jl
into
in
sbb
inc
mov
nop
sub
das
pop
dec
ljmp
lcall
mov
movsl
push
fildll
loope
mov
push
psllw
adc
mov
mov
lods
imul
pop
cli
cli
repnz
add
dec
and
dec
das
pop
icebp
or
adc
mov
inc
pop
and
jnp
push
adc
lahf
adc
clc
mov
jge
cld
xor
sub
movntps
pusha
lock
shrl
lret
js
out
lods
push
data16
mov
test
sub
cmp
xor
pop
js
and
nop
dec
ret
mov
mov
dec
cmp
call
repnz
out
fisttps
out
mov
mov
xchg
mov
and
vpsubusb
fwait
out
daa
movsl
fstps
test
into
gs
jp
adc
ds
pushf
lahf
lcall
fstp
jno
xchg
mov
mov
pushf
inc
mull
push
cmpsl
pop
call
mov
push
pop
sub
int
fistpl
inc
sar
pop
cmp
push
ficoml
cmp
imulb
loopne
xchg
or
dec
push
or
ljmp
sbbb
inc
mov
sar
dec
push
jmp
int
lods
or
add
icebp
notl
mov
adc
rcrb
sbb
ret
pop
push
jge
sub
pop
add
cs
pushf
cmc
cmp
inc
lcall
arpl
jle
sbb
mov
xchg
jae
aas
test
mov
inc
mov
pushf
int3
mov
ljmp
lahf
repnz
insl
movzwl
stc
mov
add
int3
rclb
pop
cltd
hlt
add
ret
outsl
xchg
addb
stos
push
testb
enter
sub
inc
xchg
sub
in
dec
ret
addr16
repz
stos
sub
lods
cmp
int3
in
sarb
dec
lods
ret
rolb
mov
push
xchg
cld
enter
dec
mov
mov
adc
push
cmpsb
dec
outsb
inc
or
jns
jmp
jp
les
pop
pop
out
mov
loope
push
cmpsl
pop
in
jnp
rcr
or
ret
shl
mov
or
sbbb
adcl
xchg
xchg
fistpl
scas
cvtdq2ps
jb
jg
push
dec
cmpsl
ret
or
fnstenv
pop
cmp
sbb
enter
adc
and
dec
mov
test
call
orb
mov
lea
mov
lods
mov
or
out
icebp
add
mov
inc
aad
rorb
testl
cmpsl
out
cld
mov
negl
call
xchg
in
sub
sub
inc
aas
cmp
inc
cmpl
sub
jno
icebp
lods
add
lcall
mov
jge
sub
jnp
push
pusha
test
cmp
sahf
cmp
aas
repz
stos
nop
test
dec
or
adc
outsl
xchg
cmp
arpl
add
add
in
mov
add
and
dec
outsb
ja
mov
mov
pop
jnp
loope
jo
mov
push
sti
cmp
adc
push
and
insl
xor
xor
pop
call
xchg
adc
and
hlt
mov
add
and
test
setl
sub
pop
hlt
jmp
cmp
sub
xchg
mov
into
aad
scas
adc
pop
hlt
pop
push
repz
adc
outsb
clc
out
call
scas
sbb
aaa
ljmp
inc
mov
or
inc
std
cmp
cs
push
cmp
sbb
test
mov
in
mov
stc
ret
inc
outsl
ficompl
push
or
mov
subb
jecxz
out
fwait
add
push
mov
fcoms
cmpsl
lcall
fildll
ja
pop
or
call
jne
push
arpl
sbb
add
aam
xor
inc
lea
cltd
rolb
out
jae
rcr
notb
insl
mov
ret
jle
xor
out
jno
jle
in
jo
mov
std
cvtdq2ps
mov
sbb
cli
scas
lock
adc
mov
push
cmp
push
scas
cmp
movsl
es
movsb
test
shrb
jmp
popf
in
fnstsw
ja
cmp
or
dec
pop
jbe
out
jle
xchg
xlat
aaa
aam
mov
pop
outsw
aad
add
dec
mov
inc
notb
cmp
mov
pop
xor
xchg
mov
pushf
mov
mov
or
xchg
xor
and
rorb
lahf
imul
shrl
cmp
or
clc
push
stos
and
loope
mov
and
push
and
dec
push
jecxz
adc
mov
or
sub
ret
sub
dec
fcomip
push
movsl
arpl
cmpsb
fisubrl
xchg
out
movl
or
ret
mov
dec
outsl
or
mov
movsb
rdpmc
aas
add
mov
ljmp
loopne
sbb
and
iret
mov
bound
insb
das
sub
lock
xchg
rcrl
sub
in
test
andb
lock
aam
into
mov
bound
icebp
jnp
sub
int
imul
mov
pop
mov
and
mov
sub
push
test
idiv
jle
cmp
xchg
sbb
mov
jmp
insl
icebp
push
movsb
jb
in
in
and
inc
mov
push
test
ror
mov
dec
dec
sbb
push
adcb
xchg
jge
ret
icebp
cmpsb
xor
les
sbb
jl
push
hlt
push
xchg
push
jb
and
ret
sbb
inc
add
push
rcr
cmp
dec
int
daa
inc
xchg
xor
and
dec
std
dec
cwtl
adc
sub
or
incl
ljmp
loopne
sbb
adc
fdiv
in
sbb
inc
or
fistpl
jg
pusha
add
ds
push
inc
ficoms
lea
cs
lret
roll
or
dec
daa
jg
testl
fimull
add
inc
pop
js
pushf
out
xor
or
xor
out
cltd
push
icebp
inc
jne
xchg
popf
fwait
aad
jne
sub
das
pop
push
dec
mov
adc
mov
cmp
mov
mov
pop
cmp
mov
jb
dec
xlat
push
dec
dec
xor
fwait
or
push
sti
mov
mov
jecxz
or
pop
mov
pop
pop
pop
test
popa
js
lods
cld
mov
cmp
lahf
into
out
sbb
and
mulb
fnstenv
ljmp
mov
loopne
dec
stos
js
mov
push
repz
add
inc
sub
or
stos
hlt
lods
adcl
cmpsl
fwait
das
jmp
icebp
shlb
jo
stc
addl
mov
jg
gs
ret
adc
cmp
in
xor
shl
sbb
sub
or
inc
in
mov
jo
insb
jne
aam
fisubs
add
xchg
movsl
mov
xor
daa
mov
das
in
ds
cmp
or
sbb
xlat
push
mov
outsb
ja
mov
push
inc
inc
mov
pop
sub
cmp
pop
mov
jmp
ud0
pop
or
push
sahf
mov
cmc
add
insl
push
dec
hlt
cld
call
inc
mov
xchg
cmp
icebp
into
sarb
adc
adc
add
adc
dec
jl
xchg
cmpsl
cld
cld
fs
adc
ret
mov
push
cmp
cmpsl
or
sbb
or
movsb
cli
or
sti
mov
stc
loope
int3
xchg
out
mov
inc
jecxz
aam
mov
mov
push
inc
cmp
ret
mov
mov
mov
adc
push
inc
xor
inc
adc
inc
jp
mov
fists
loopne
xor
cmp
pop
jg
jg
sub
repz
pop
test
addr16
pop
cmc
sbb
jp
cmc
pop
push
cmc
xchg
scas
dec
push
pop
adc
push
pop
sbb
fwait
xchg
push
arpl
xchg
cld
dec
jg
pop
jp
sub
enter
adc
stos
int
lahf
jns
jo
js
add
pop
push
loope
ljmp
jae
xchg
jb
xchg
adc
and
outsl
jmp
and
shufps
call
dec
in
inc
jp
push
lahf
fsincos
cmpsl
push
pop
mov
mov
pop
out
or
aad
pop
and
in
sub
shll
mov
dec
fstps
lret
iret
or
enter
push
bound
hlt
insl
sbb
and
loopne
inc
sbb
adc
leave
mov
adc
std
cmp
cmp
ja
ficomps
xor
mov
test
bnd
xchg
jecxz
into
lock
fstsw
mov
mov
mov
sbb
and
sub
mov
or
xchg
xor
fisttps
cmp
fcomi
popa
jl
push
neg
fcoml
jno
loopne
jg
jl
push
bound
leave
ret
ja
icebp
mov
fstpl
or
and
hlt
cmp
xchg
out
inc
pop
test
mov
pusha
dec
inc
std
adc
cmp
imul
into
mov
mov
dec
fcmovnbe
fidivs
jmp
cltd
stos
and
pop
mov
jmp
xorl
dec
add
idivb
and
in
cmpsl
imul
imul
inc
adc
sub
cwtl
insb
or
ret
cmp
sar
mov
stc
mov
jle
push
xor
push
jo
imul
test
roll
daa
or
gs
cltd
inc
sub
shll
lods
adc
pop
daa
push
inc
in
cli
mov
adc
push
and
outsl
dec
adc
mov
xchg
xlat
lcall
lods
jg
lret
cli
xor
push
sub
stc
mov
or
aam
jecxz
mov
sbb
cmpsl
sub
add
call
adc
pushf
pop
dec
xor
popa
cmpsb
mov
xchg
js
pop
dec
loop
push
mov
cltd
fcmovnb
xchg
lods
or
dec
sbb
enter
dec
fdivr
mov
test
jnp
jle
dec
or
popf
lcall
sbb
fcoml
scas
nop
jl
xchg
and
cwtl
pop
cld
sbb
fnstcw
push
pop
jae
sbb
cli
loope
mov
sub
ficompl
sbb
mov
push
sbb
in
jg
loopne
nop
stc
roll
mov
shrb
pushf
test
lahf
aas
sti
mov
stc
jecxz
mov
ja
inc
add
idiv
sbb
hlt
mov
xor
add
sub
and
cmpsb
fbld
fucomp
in
lahf
ljmp
je
test
in
mov
or
mov
sbb
mov
adc
dec
test
dec
fldcw
mov
gs
xchg
imul
sahf
lods
adc
push
jmp
xlat
pusha
ds
dec
es
inc
notl
test
sub
adc
fcompl
popf
lret
or
mov
adc
lods
aas
inc
fidivl
gs
push
or
pop
insb
addl
stos
or
mov
leave
cmc
jl
loop
lods
iret
in
push
dec
push
stos
test
int
push
andl
xchg
repz
pushf
pop
out
jb
ss
mov
outsl
push
inc
adc
or
mov
dec
cld
cmpsb
pop
scas
in
aaa
inc
rclb
dec
pop
xor
jmp
push
je
rol
das
data16
push
das
jecxz
and
add
sbbb
cmp
xlat
loope
aas
inc
push
jecxz
jo
daa
nop
sbb
icebp
loope
pop
inc
aad
cmp
xor
mov
or
mov
add
movsb
add
mov
and
xor
or
and
mov
sub
sub
lahf
sub
out
sbb
lds
jbe
xchg
out
sub
lds
sbb
les
xchg
scas
xchg
scas
mov
mov
pop
cmpsb
jge
pop
mov
mov
jno
inc
and
xchg
das
add
nop
icebp
xchg
ret
inc
sub
adc
lds
cmpsl
shll
ss
scas
call
iret
arpl
cwtl
mov
pop
dec
pop
cmp
lret
cmp
stos
ja
mov
inc
negb
test
scas
lahf
push
call
inc
pop
pusha
xchg
insb
mov
mov
xor
testl
push
test
scas
jle
cmpsb
popa
lds
and
inc
test
fmul
jp
xor
gs
push
inc
cmpsb
xchg
xor
stc
nop
ss
push
sbb
das
inc
jbe
fcom
fstps
cmp
and
cs
mov
sbb
jg
push
not
jnp
shrl
in
push
ret
push
int3
xchg
xchg
aad
ss
lret
movzbl
dec
lret
int
mov
loope
testb
subb
cmp
sahf
aad
xor
dec
imul
int3
mov
mov
cwtl
stos
jno
movsl
lods
cmc
jnp
sbb
add
es
addl
jp
ljmp
or
frstor
inc
aas
ret
mov
pusha
mov
add
pusha
fs
aam
into
cmp
cmp
bound
stc
xor
pop
and
pop
stc
or
jg
ds
cltd
cmp
es
ss
in
add
mov
cld
jnp
insb
fiaddl
jbe
sbb
inc
or
add
lods
push
xchg
out
fdiv
push
movsl
clc
mov
out
test
mov
or
mov
fcmovnbe
and
mov
adc
mov
sbb
mov
mov
jnp
fimull
rcll
pop
adc
in
xchg
int
jns
pop
cmpl
sarl
repnz
xor
testb
ja
pop
mov
xchg
fwait
mov
mov
addl
xor
cltd
leave
scas
xchg
mov
enter
clc
sbb
cmp
or
inc
shll
ds
loopne
push
adc
popa
jge
scas
or
jo
jno
push
jns
mov
rcrl
sbb
and
xor
mov
mov
adc
jmp
loope
and
push
out
push
inc
in
xor
inc
fwait
adc
dec
mov
mov
sbb
pop
or
push
es
in
jmp
adc
xlat
fists
sar
and
sbb
pop
sbb
sub
ffree
cld
cmpsb
xchg
add
add
dec
stos
fs
mov
xchg
pop
xor
pop
xchg
jecxz
sub
xor
frstor
es
inc
mov
cmpl
shl
pop
lock
jmp
xor
sub
lret
xlat
mov
inc
jg
cmp
fmull
in
addr16
lock
sbb
or
shl
int3
add
add
add
sbb
add
sbb
xchg
xor
xchg
mov
out
sub
pop
stos
dec
popl
rol
sub
out
lret
aaa
push
mov
fcmovnbe
adc
adc
daa
ds
inc
jbe
call
shlb
nop
cli
dec
cmp
out
xchg
loopne
and
insb
out
cmc
mov
inc
sbb
pusha
xor
loopne
test
pusha
lret
push
and
imul
and
sub
mov
pop
add
insl
int
scas
imul
and
es
push
mov
cltd
into
sbb
outsb
sbb
push
mov
sbb
mov
push
mov
xchg
xchg
push
nop
xorb
push
aas
lock
mov
aam
ljmp
pop
or
popl
xchg
es
pop
mov
jns
or
lds
sbb
adc
jg
test
fstpl
push
jb
cmc
int
xchg
dec
jae
sti
loopne
nop
cmp
fldt
call
and
sub
cltd
pop
mov
mov
push
fmulp
sbb
fidivs
mov
je
daa
scas
adc
xchg
popa
rol
movsb
or
mov
xchg
gs
aas
aaa
sbb
loope
fwait
sub
mov
push
inc
bound
ja
je
shrl
mov
rclb
lds
dec
and
jb
rcrl
xlat
mov
loop
xchg
pop
adc
and
out
iret
or
and
mov
adc
adc
dec
test
sub
cmpb
flds
jp
adc
les
sarb
sbb
xchg
sub
and
adc
sub
aad
in
jno
push
mov
push
call
out
sbb
mov
movsb
decb
and
push
shlb
in
stc
push
add
test
xchg
mov
inc
icebp
sbb
mov
xchg
cmpsb
fisubrl
adc
cld
jp
or
in
mov
imul
lods
mov
cmpsb
xor
adc
mov
pop
jl
jne
push
and
push
sub
cmpsl
test
leave
sbb
mov
cmpsl
mov
push
inc
das
xor
shll
xlat
int3
push
cmp
leave
push
cmp
mov
jg
mov
fistpl
mov
mov
fidivrl
lock
in
push
adc
mov
popf
mov
rcll
movsb
lret
jo
loope
andl
inc
pop
adc
or
or
cmp
mov
jg
shll
mov
cmpsb
int
fdivs
fwait
xchg
lock
sahf
lea
push
add
mull
cmp
divl
inc
daa
lods
xor
push
cwtl
lcall
sbb
mov
mov
cmpsl
fdivs
ret
push
and
cli
int
lret
or
lret
imul
cmp
fsubrl
jnp
adc
mov
rcrb
icebp
add
dec
stc
inc
adc
outsl
mov
cmp
xor
mov
add
push
incl
pop
rorb
xchg
sarb
jmp
inc
push
test
xchg
scas
and
imul
sbb
or
aad
adc
xchg
push
repz
xchg
loope
xchg
std
push
js
bound
lods
loop
adc
jge
xchg
pop
mov
ret
test
mov
test
fstpt
fsubl
mov
insb
push
cmp
lds
sarb
mov
arpl
icebp
es
add
and
lods
dec
fcompp
or
aam
movb
and
sub
xor
adc
adc
adc
jmp
in
mov
add
aas
iret
loop
or
push
jns
in
scas
sub
xchg
push
sti
and
int3
add
jbe
lods
icebp
insl
ds
icebp
xchg
movsl
addr16
add
ja
shlb
mov
mov
and
sub
xchg
adc
and
mov
cmp
adc
rcrl
sbbl
in
cwtl
loopne
std
push
xor
in
xor
push
or
clc
pushf
cmp
lock
push
pusha
mov
sub
cwtl
mov
adc
pop
mov
and
in
inc
jle
test
hlt
sub
mov
imul
imul
mov
push
inc
ret
jns
mov
mov
mov
cmp
ja
lret
dec
scas
add
div
push
rolb
pusha
inc
push
int3
es
loop
popaw
dec
pop
cli
cmp
pusha
pop
push
les
pop
mov
and
or
stos
dec
ss
int3
xor
test
adc
inc
adc
ljmp
xor
push
mov
hlt
lds
sahf
mov
lret
imul
jo
mov
sbbb
insb
pop
jno
sti
test
adc
fnstenv
fldl
or
push
adcb
xor
jae
popf
jp
xchg
les
imul
imul
jp
lods
xor
add
fidivrl
adc
int3
adc
jb
ss
push
jl
or
or
lret
or
jmp
sub
inc
or
jbe
test
mov
push
xor
movsb
and
ds
lcall
arpl
repnz
cmp
jge
inc
gs
and
mov
gs
daa
cmp
cmp
jle
mov
cmp
rcrb
jp
cli
clc
scas
cmpsl
fnsave
fsubrl
xchg
test
inc
popa
inc
std
or
lahf
repnz
repnz
sbb
mov
aaa
add
sub
shlb
std
cs
push
aad
scas
add
pop
xchg
lahf
pop
testb
pop
add
jmp
and
jb
mov
cld
insb
fnstcw
jne
mov
mov
lds
mov
iret
push
les
into
pop
fistps
mov
lea
mov
xchg
dec
repz
lock
aam
add
cs
jecxz
dec
xor
add
mov
pusha
adc
sarl
jns
addr16
jno
es
test
mov
jbe
sbb
and
mov
imul
dec
sti
mov
jg
pop
into
mov
mov
or
outsb
aas
into
adc
inc
and
mov
mov
gs
dec
dec
push
add
mov
cli
jne
subb
lds
scas
ficoms
stc
movsl
jbe
cmc
pop
fmuls
mov
enter
sbb
cmpsb
addr16
aam
mov
outsl
lock
sub
mov
cmc
and
adc
test
pop
jecxz
cli
xor
leave
xchg
out
or
push
or
jge
dec
je
xor
pop
es
cmc
test
cmp
repnz
ds
es
jne
ret
mov
and
mov
xchg
xchg
xchg
add
addr16
mov
fsubrs
add
test
sbb
rorb
imul
andb
loope
movsb
es
gs
jo
xor
inc
mov
push
push
jmp
jno
mov
inc
shll
mov
out
sub
pop
into
shlb
sti
lret
divb
dec
mov
sbb
popa
xchg
xchg
shll
mov
sbb
dec
cwtl
xchg
insl
adc
add
lret
push
or
int
mov
push
lds
lock
dec
sub
jne
lods
mov
lahf
rorl
add
xor
xchg
stos
sbb
pop
mov
movsl
mov
mov
xchg
fisttpll
pop
test
or
mov
push
lock
in
jmp
inc
lock
and
push
or
lea
xchg
xor
cli
cmp
mov
loop
ret
shlb
xchg
in
pop
cmpsl
pop
xor
cltd
movsb
hlt
mov
imul
mov
iret
inc
int3
jo
gs
xor
popf
bound
add
andl
sub
push
cmp
push
lcall
punpcklwd
xchg
or
dec
sub
ror
jb
and
call
cmp
cmp
neg
loopne
push
mov
mov
mov
hlt
idivl
dec
daa
scas
ds
divl
cld
add
lret
mov
pop
dec
mov
ss
cwtl
pushf
adcl
sbb
mov
push
loopne
xchg
sbb
scas
std
pop
outsb
adc
jns
cmp
stos
mov
cmp
jmp
mov
jo
lock
ja
xchg
sahf
aam
insb
lods
cs
ljmp
add
lds
mov
test
or
andl
mov
popf
test
inc
mov
shll
das
jmp
xchg
pop
add
in
in
shl
pop
mov
mov
sub
sub
mov
loop
iret
sub
mov
sbb
sti
mov
push
mov
sbb
adc
xor
pop
push
sub
push
xchg
sarb
push
jmp
jbe
mov
mov
jbe
dec
sub
pop
push
and
dec
mov
mov
pusha
loopne
mov
pop
mov
lods
mov
ja
ficomps
jge
cmovne
test
push
shl
aam
pop
or
push
push
adc
scas
cmpb
mov
lea
je
xchg
rcll
cmp
out
icebp
inc
iret
adc
fucomi
fwait
ret
pop
mov
addr16
xor
mov
xor
mov
sub
push
cltd
pusha
push
push
mov
in
or
or
incl
dec
push
loop
ret
loope
jb
and
sti
jmp
sbb
cmp
push
mov
mov
sub
jbe
or
rorb
pop
fwait
ja
jb
cmp
icebp
or
pop
cwtl
cmpsl
sbb
out
ljmp
mov
addr16
out
dec
adc
mov
cmpsb
leave
pop
push
jg
xchg
inc
xor
aam
lods
dec
dec
pop
sti
test
adc
jle
xor
add
pop
xor
lea
xchg
test
shll
xchg
sub
fbstp
adc
popa
lds
inc
mov
leave
mov
iret
test
fwait
or
insl
out
fsubr
push
push
imul
lret
aam
pop
cli
inc
adc
imul
dec
sbb
int
not
scas
test
gs
cltd
leave
jns
xchg
mov
jbe
push
data16
mov
push
rcll
sarb
cmp
adc
aaa
gs
out
cmp
and
arpl
daa
movsl
dec
mov
and
fwait
and
lock
pop
mov
fwait
cmpl
cli
pushf
loopne
xchg
sub
dec
sub
pop
mov
pop
out
lods
cmpsb
cwtl
int
movsb
jmp
cmp
dec
jle
fwait
dec
pop
and
cwtl
stos
lods
cmp
fs
add
xchg
sti
cmp
in
cmp
fucomp
mov
xor
and
and
xor
dec
adcl
sub
lds
js
pop
lods
sbb
pcmpgtw
in
or
fsubrl
jns
xchg
mov
mov
inc
push
adc
sub
dec
add
sub
fwait
adcl
and
lcall
jb
in
icebp
pushf
cld
out
push
mov
cmp
and
int
adc
jmp
inc
rcrl
mov
mov
xchg
in
mov
repnz
lret
movsl
inc
push
les
or
js
mov
popa
pop
xchg
push
cmpl
in
mov
lahf
aas
pushf
push
cmc
jle
int3
push
mov
lcall
call
dec
or
lahf
arpl
jl
notl
jg
xor
lods
mov
jno
lahf
iret
inc
sub
xor
mov
add
adc
adc
mov
adc
push
mov
jmp
and
mov
iret
ljmp
outsb
pop
or
jb
adc
mov
aas
pop
sub
mov
test
loop
or
insl
je
test
dec
stos
hlt
adc
mov
mov
outsb
fidivl
jnp
jecxz
mov
scas
outsl
cld
jecxz
xchg
mov
push
pop
inc
dec
stos
jb
cmp
push
outsl
lock
ss
and
imul
ss
xchg
cmc
dec
mov
mov
mov
fsub
cwtl
cmp
inc
das
adc
mov
fwait
sar
pop
scas
out
jb
call
into
pop
dec
sub
daa
dec
sub
push
sub
gs
or
push
dec
pop
repz
inc
fsubl
mov
insb
mov
push
cmp
icebp
jge
ss
dec
dec
lret
test
shr
mov
sbb
scas
leave
sbb
pop
jecxz
inc
mov
add
insb
fnstenv
and
push
dec
add
or
out
aad
and
inc
out
lds
cwtl
sbb
aas
in
cmpsb
fwait
jns
mov
mov
adc
push
popf
pusha
les
call
mov
cmp
mov
je
cmp
in
test
loop
fdivl
mov
sbb
cli
cmp
sub
mov
and
inc
sbb
xor
xchg
sub
xchg
loop
aaa
mov
insl
insb
stos
cmp
pop
cmp
int3
ficompl
aaa
adc
and
lods
pop
mov
adc
add
insb
add
imul
xor
xchg
xlat
stos
push
jns
jno
fstp
xchg
push
pusha
stc
xchg
fistps
cwtl
lods
sub
xchg
jg
out
jo
push
arpl
jg
mov
dec
push
roll
es
push
loopne
lods
lahf
lods
mov
adcb
pop
mov
mov
jb
inc
aas
cmp
nop
inc
jecxz
dec
and
ss
dec
loope
les
test
gs
outsl
mov
lods
mov
test
adc
mov
fnsave
push
mov
arpl
cmpsb
push
jbe
add
jmp
fildl
and
js
push
in
cs
outsl
adc
aaa
xchg
std
scas
and
add
jne
pop
pop
dec
stc
stos
add
aaa
xchg
xchg
xchg
icebp
test
push
sbb
test
cmc
jg
in
andnps
push
push
dec
cmpsb
lahf
jo
xlat
sub
out
jle
ret
mov
imul
xlat
mov
daa
out
sub
pop
cld
ret
mov
mov
js
bound
fdivrs
add
inc
dec
adc
mov
vpsrlw
pushf
fnsave
loopne
push
jg
out
mov
int
mov
popf
mov
add
sarb
adc
sub
test
test
in
xchg
flds
hlt
and
sti
addb
jne
int3
and
ljmp
fmul
gs
mov
mov
pop
sahf
mov
xor
push
adc
add
fimuls
sbb
sbb
ljmp
lahf
test
jns
out
dec
sbb
jg
cmpl
mov
inc
jno
ret
lahf
pop
and
ds
std
and
pop
cld
sbb
adc
das
xchg
lret
push
and
daa
add
dec
hlt
inc
out
mov
mov
xor
cmp
loopne
sub
xlat
push
je
lret
mov
fwait
inc
nop
sahf
test
leave
pushf
insl
shll
pusha
scas
inc
ja
lcall
dec
popa
sub
jnp
sub
pop
ret
dec
pop
in
push
repz
pushf
push
xchg
cltd
scas
pushf
call
loop
inc
and
xor
add
insb
jbe
insl
test
imul
fnstcw
mov
repnz
enter
repnz
mov
repnz
jle
out
test
mov
aaa
adc
orl
xchg
jmp
mov
cli
xchg
cmovl
push
xor
stc
arpl
popf
in
in
out
jns
data16
lock
mov
fsts
adc
into
adc
mov
mov
adc
mov
inc
xor
enter
icebp
fistl
xor
int3
xchg
mov
mov
idiv
mov
lret
stos
call
mov
rorl
sbb
dec
test
jns
jecxz
xchg
mov
es
negl
inc
pusha
cmpsl
imulb
adc
cwtl
out
mov
sbb
mov
lret
push
fiadds
inc
cmp
fidivl
icebp
fwait
add
pop
inc
sbb
test
cmp
xor
sub
jne
mov
call
cmp
dec
add
repnz
dec
pop
and
dec
cltd
pop
popa
xchg
xor
inc
sahf
push
cmp
mov
fimuls
lods
sbb
pop
mov
int3
jb
in
ds
xor
mov
pop
sub
sbb
lds
fcomps
in
sbb
cmp
mov
ljmp
subl
dec
jno
loope
fldt
push
xchg
cmc
pop
subb
nop
arpl
call
cmc
icebp
loop
dec
jne
cli
aas
inc
mov
mov
inc
pusha
movsb
or
lock
mov
sub
mov
out
outsb
inc
loope
cwtl
and
and
cwtl
mov
lock
ret
mov
lret
dec
dec
push
data16
pop
inc
sahf
mov
or
xorb
mov
fdivl
repz
cli
fs
mov
cmp
shll
ljmp
cmp
dec
inc
out
add
fiaddl
push
push
cmp
mov
test
dec
loop
mov
fisttpl
dec
jns
jo
mov
scas
mov
jo
push
lods
movsb
mov
add
add
cmp
and
mov
jnp
nop
pop
adc
loop
dec
lea
xor
int3
test
push
adc
and
or
cltd
sbb
pop
cmp
cli
in
aam
dec
stos
xchg
sub
stc
mov
or
adc
adc
mov
and
popa
push
outsl
or
sub
push
push
mov
aam
mov
mov
in
or
or
sti
push
pop
or
fidivrs
pop
es
mov
popl
and
loope
mov
mov
stc
fistps
mov
popa
mov
dec
jl
lahf
lock
leave
push
test
add
push
pop
jnp
fs
lods
sbbb
adc
push
xchg
test
cli
leave
jge
sti
int3
sbb
and
jmp
cmp
insl
xor
xor
fldenv
mov
and
loopne
lcallw
inc
xchg
and
mov
adc
xor
fsubl
loop
pusha
push
fadd
scas
ja
dec
das
jae
adc
mov
gs
mov
mov
xlat
fcoms
notb
dec
shrb
ret
ret
loope
fildll
cltd
dec
pusha
or
cmc
fdiv
sub
jmp
mov
pop
adc
test
sub
je
add
pop
mov
push
sub
jmp
lcall
mov
cwtl
and
and
shrb
and
test
pop
dec
pop
adcb
shll
rcrb
stos
repz
out
jp
mov
in
mov
and
dec
lret
rorl
adc
xchg
adc
out
fdivr
sbb
shll
mov
test
fnstcw
jns
test
jne
fs
adc
movsb
add
inc
mov
mov
repz
cmovno
aas
inc
cltd
or
cwtl
nop
xor
nop
aad
push
out
cli
sbb
or
out
or
jge
fsubl
sahf
jbe
sahf
sti
or
faddl
and
dec
inc
sub
cwtl
dec
sub
outsl
outsb
cmp
pop
fadd
movsb
inc
push
push
les
arpl
mov
dec
je
es
mov
sbb
push
adc
arpl
sahf
rorl
mov
mov
fstl
xchg
pushf
inc
scas
xchg
addr16
int
dec
out
and
iret
fxch
mov
das
pop
mov
sbb
and
es
das
out
pushf
jp,pn
pop
js
xchg
les
or
jge
push
jmp
inc
ja
adc
sbb
mov
xchg
jb
mov
cwtl
or
jo
stos
loop
scas
mov
sbb
insb
xor
adc
mov
push
fcompl
mov
mov
sbb
inc
mov
mov
mov
sub
outsl
and
add
add
inc
mov
xchg
mov
jne
xchg
imul
insb
mov
cmpsb
cld
push
ds
aad
loope
lcall
adc
push
dec
sbb
mov
mov
mov
mov
pop
leave
shl
cmp
adc
movsb
sub
adc
test
lods
stc
jno
or
insb
jns
pop
sbb
popa
push
or
stc
daa
fsubr
inc
aam
pop
or
divl
mov
add
push
or
repnz
js
out
daa
lods
push
xchg
mov
enter
imul
push
jnp
ds
mov
shrl
aam
sbb
lahf
sbb
adc
fmuls
test
jns
pop
mov
out
xor
sub
dec
add
or
les
dec
shlb
and
xor
pop
jge
jge
and
mov
dec
inc
mov
add
mov
mov
insb
push
lahf
sbb
aad
ret
adc
clc
lret
push
aaa
mov
into
and
addl
push
addr16
mov
add
pop
test
icebp
ret
shlb
add
stc
cmp
fldenv
sub
jge
aad
mov
mov
clc
out
dec
nop
pop
cwtl
mov
sarl
cmp
fisubl
and
mov
out
or
sub
loopne
std
fwait
dec
cmp
xor
outsb
lret
in
add
jl
push
sbbl
movups
sti
pop
movaps
pop
insb
cli
xchg
leave
add
cmpsl
stos
xor
lret
scas
ret
fwait
cmp
add
dec
or
ja
insb
add
and
mov
fidivl
jmp
clc
outsl
sbb
sbb
adc
jmp
cmp
outsb
pusha
daa
decl
and
fistps
sarb
into
scas
je
xor
loope
orb
lret
and
push
fst
movsb
or
mov
rcrl
jp
cmp
stos
xchg
jb
imul
mov
mov
imul
inc
sbb
pop
enter
jns
xchg
es
outsb
das
inc
jns
andb
mov
mov
cmp
add
cmpsb
out
add
repz
push
adc
add
test
jns
sbb
jecxz
lcall
dec
out
stc
sbb
icebp
sahf
cld
jns
and
in
lcall
imul
xor
pop
aam
aad
ss
cli
dec
mov
lods
mov
bound
push
and
xchg
outsb
mov
xor
jmp
lcall
or
mov
jnp
xor
sub
push
mov
in
mov
push
pop
xchg
mov
enter
pushf
out
xchg
outsb
pop
jbe,pt
mov
les
rclb
jb
pop
and
daa
mov
out
lods
jne
or
push
mov
xchg
inc
dec
in
loop
xorb
scas
adcl
mov
rclb
aad
or
xchg
mov
clc
scas
push
test
subl
mov
lods
jnp
push
inc
jnp
jae
sbb
mov
popf
lds
fs
jle
addr16
mov
into
test
or
xor
inc
nop
cmp
fisubl
cmp
out
pushl
xor
inc
or
pop
pop
cltd
fwait
in
mov
into
movsl
int3
mov
mov
jns
das
pop
dec
adc
pop
cmp
ss
idivb
mov
movsl
rcrl
dec
mov
jmp
dec
repnz
notl
xorb
sbb
aaa
jnp
push
inc
cmp
jp
rorl
arpl
pop
cli
pop
or
jno
loop
push
fcomip
sub
push
gs
fcompl
xchg
decl
lods
push
push
jmp
push
jno
mov
push
xor
cmp
imul
repz
cmp
setns
clc
inc
lods
cmpsb
cmpsb
push
mov
and
jl
mov
and
pop
mulb
pop
inc
ret
adc
mov
arpl
or
adc
jecxz
jb
pop
mov
inc
adc
popf
subl
mov
dec
push
sbb
pop
cli
cmpsl
jo
enter
fyl2x
add
mov
or
xchg
sbb
or
jo
ja
insl
shlb
and
dec
shrb
lods
inc
mov
fcos
sub
xor
push
bnd
andb
mov
fdivrl
pop
lahf
push
jae
movsb
and
xchg
fwait
jb
loopne
add
jecxz
arpl
or
movsl
mov
arpl
and
incl
or
mov
aas
push
ffree
in
xor
add
loopne
ljmp
jo
inc
or
pusha
push
test
or
xchg
jp
jle
cmp
mov
pop
enter
push
out
subl
or
mov
dec
sbb
xor
sbb
pop
popf
jno
pop
push
sbb
dec
and
cli
adc
pop
pop
xchg
cld
ds
test
add
out
push
pmaddwd
pop
adc
jecxz
push
and
push
dec
cmp
pop
mov
loope
movb
jp
or
mov
hlt
push
push
inc
cmovs
pop
sarb
adc
dec
dec
lods
subb
addl
and
pop
fbld
aam
mov
xchg
sahf
pop
mov
icebp
push
push
stc
movsl
in
cwtl
mov
lahf
fnstenv
inc
or
stos
xchg
and
push
push
jmp
xor
loop
clc
aad
loope
into
push
inc
cmpsl
push
sub
cmp
or
or
jbe
or
inc
rorb
xor
add
je
out
jmp
les
popf
jne
jne
add
stc
js
push
adc
scas
and
lods
mov
mov
cs
pop
and
pop
out
push
cmp
cmpb
mov
jbe
xchg
fwait
leave
js
xor
adc
mov
imul
jecxz
mov
ds
jmp
mov
xor
adc
or
inc
hlt
shrl
dec
insb
pop
xchg
pop
pop
shll
mov
pop
loop
mov
and
jo
and
pop
push
mov
jl
dec
test
shl
mov
bound
test
jecxz
into
es
mov
pop
fidivl
aas
hlt
pop
push
addr16
pusha
ss
mov
or
cltd
imul
gs
int
outsl
or
sub
adc
xchg
imul
sbb
mov
push
sub
adc
pop
rclb
or
ret
dec
subl
pop
fnstsw
inc
push
xchg
ja
mov
sahf
pushf
add
mov
xor
lahf
push
daa
gs
loope
jae
cmpsb
pop
test
loope
test
orb
mov
sahf
mov
insl
pop
ds
je
aad
fistps
sub
sub
fldenv
push
add
push
jl
rcrb
jmp
lcall
lcall
jno
mov
cld
dec
popf
lods
pop
sbb
sti
jbe
out
dec
mov
out
xchg
out
sbb
mov
or
scas
fsubrs
idivb
das
out
lcall
mov
mov
aam
test
je
ficomps
fadds
xlat
stos
notb
xor
sub
testl
stc
sub
test
push
in
movsb
dec
aaa
out
je
mov
xorb
mov
sub
and
jnp
nop
xor
sub
fsubp
clc
mov
or
lret
mov
push
das
or
out
fdivrs
pop
jb
fidivrl
loope
inc
dec
adc
test
stos
and
xchg
inc
sub
scas
cmpsb
jle
dec
pop
arpl
sarb
xor
xchg
hlt
add
popa
sahf
ljmp
xlat
imul
fcmovnu
push
arpl
sbb
fidivrl
punpckhwd
repz
xor
sub
jnp
or
repz
lret
inc
adc
cmc
dec
pcmpeqd
jne
jbe
je
ficompl
xor
mov
and
or
sub
sub
ss
jns
iret
es
div
jmp
loopne
inc
and
pop
pusha
lods
pop
mov
mov
in
subb
xchg
xor
xor
push
xchg
sbb
pop
add
xor
enter
popa
cmp
cmpsl
jl
stos
mov
out
fsub
mov
dec
popa
mov
dec
or
or
adc
addb
outsl
cmpsl
jae
jne
mov
or
xor
loop
pushf
cmp
test
out
mov
out
int
stc
and
jae
cli
ret
push
xor
das
or
cmp
movsb
dec
rcrb
push
iret
popf
andl
aas
jge
cltd
sahf
xchg
jecxz
into
aaa
or
dec
mov
pop
mov
dec
sbb
adc
pop
inc
mov
push
cmc
mov
sub
lock
xchg
mov
mov
movsb
jle
jecxz
addr16
lds
in
shl
rcrl
dec
out
and
loop
push
dec
dec
loope
js
mov
jp
repz
sub
dec
adc
inc
in
pop
lret
add
das
test
mov
movsl
xchg
mov
std
or
inc
push
fidivrs
cmpsl
int
out
lea
mov
movsl
std
adcl
outsl
stos
ficoms
ficoml
xlat
add
mov
dec
pop
mov
and
lds
sbb
mov
adc
inc
testb
imul
jnp
pushf
out
shrb
cmpsb
shlb
or
adc
push
and
xor
mov
test
rcrl
jmp
sub
out
lret
push
xchg
aam
sub
insb
jmp
cmc
mov
out
rolb
lods
jmp
dec
shll
in
jo
hlt
sahf
mov
mov
inc
daa
mov
fmuls
push
cmp
xchg
pop
sub
ret
pop
stos
loope,pt
das
dec
inc
xchg
push
ss
adc
or
or
test
nop
pop
ret
mov
and
popf
scas
xchg
mov
and
loop
loop
iret
jb
shl
movsl
idivl
imul
outsb
mov
xor
xchg
xor
inc
inc
es
cmp
lret
out
addr16
cmc
cmp
pop
sub
add
sahf
out
cmc
mov
stos
adcb
ret
push
and
xchg
fnstsw
cmp
lods
push
lods
mov
in
inc
adc
and
cmp
inc
push
xor
divl
dec
lret
push
popa
movsb
push
lcall
in
in
xchg
mov
inc
scas
mov
int3
stos
shll
imul
jge
xchg
adc
xchg
sbb
dec
push
lret
loopne
jp
jnp
pop
cmpsl
sbb
sahf
daa
pop
aad
push
dec
lcall
nop
jge
dec
sbb
test
aad
call
mov
inc
jae
xor
cmpsl
loope
popa
add
imul
pop
loope
data16
mov
js
fcoms
rorl
dec
jp
mov
stc
jecxz
xchg
mov
xlat
sub
inc
dec
pop
or
push
clc
sti
fwait
mov
andl
sti
and
cli
jl
mov
rclb
insl
data16
dec
or
cmp
cmp
and
xchg
into
xor
and
ss
dec
xor
pop
xchg
ficomps
enter
pop
shlb
cmc
idivb
test
ror
xchg
cmp
pushf
mov
jne
cli
clc
or
inc
popf
inc
xor
sbb
ljmp
push
dec
xchg
pop
push
xchg
add
mov
inc
sub
adc
je
aad
pusha
popf
mov
out
imul
cwtl
sub
lea
cmp
add
gs
or
push
pusha
out
pop
mov
add
mov
mov
movsb
ss
lods
lcall
mov
lret
aad
ss
repnz
lock
push
sahf
sarl
pop
outsb
xor
jne
cmp
aad
xlat
adc
sub
inc
inc
scas
jle
pop
int
aad
inc
addr16
push
and
add
fcoms
data16
fsubrl
sbb
popf
cmpsb
mov
nop
push
adc
ss
mov
and
popa
cmp
out
xchg
mov
jmp
sti
xchg
imul
or
adc
push
lods
mov
push
cmpsb
into
repnz
xchg
or
or
dec
iret
sbb
xchg
mov
ss
shl
mov
cld
imul
cmc
push
outsl
mov
push
repnz
test
divl
stc
push
ficoml
cmpsl
insb
fists
push
xchg
mov
dec
sub
call
aas
fidivrl
mov
test
xor
push
dec
out
out
arpl
jo
stos
in
rolb
rolb
pusha
stos
pop
mov
mov
mov
dec
stos
dec
push
imul
lret
bnd
enter
not
jp
xor
xchg
sbb
adc
test
pop
push
dec
or
jmp
mov
std
xchg
xchg
pushf
mov
push
pop
stos
jecxz
or
pushfw
push
or
xor
dec
sbb
int3
cli
adc
repz
rorl
movsb
push
shll
fwait
jbe
fimull
cli
mov
cmc
mov
jl
fwait
gs
sub
sub
sbb
mov
push
mov
aam
push
mov
lods
push
xchg
mov
adc
test
pusha
sarb
xchg
cmpsl
xor
bound
xchg
push
dec
jns
or
xchg
add
in
test
or
xchg
cmp
mov
inc
jbe
mov
js
cmp
xchg
cmp
and
fdivrs
insl
lock
lcall
dec
insl
popa
shrb
out
or
sbb
lods
push
aad
sbbl
cmpsl
out
pop
ret
es
xor
sub
dec
jb
in
rorl
dec
adc
je
adc
out
inc
mov
std
out
pop
sub
lret
outsl
scas
scas
xchg
jg
shll
sahf
rcl
shlb
test
jmp
movsb
xor
cmp
sub
jmp
cmpsb
adc
arpl
pop
mov
jae
pusha
mov
addr16
xor
push
push
sbb
mov
sbb
lcall
add
push
adc
stos
lods
and
or
push
mov
sbb
loop
out
or
jecxz
syscall
mov
aam
das
push
cld
and
push
js
test
mov
ss
clc
sbb
repz
orb
xchg
aaa
lret
repnz
insb
xor
or
ds
mov
sti
jg
popa
out
jl
aas
pop
js
sub
vpaddw
push
push
xchg
test
aas
sbb
lds
into
out
jne
dec
mov
push
mov
mov
popa
cs
jne
xchg
or
add
adc
adc
cli
jbe
push
xchg
in
jge
adc
sub
arpl
jo
cmp
pop
inc
xchg
mov
gs
inc
pop
mov
sti
test
inc
inc
sbb
inc
mov
hlt
jp
test
inc
incb
push
loopne
add
sbb
pop
ret
jo
cmpsl
dec
in
mov
sub
push
dec
xor
mov
cwtl
fisubrl
into
loope
jecxz
popa
inc
lahf
mov
leave
jmp
test
out
mov
inc
repnz
push
addl
scas
add
push
xchg
jp
mov
stos
jns
mov
pop
loope
inc
add
out
subl
adc
sub
pop
fs
jge
out
out
or
pop
stc
push
xchg
test
ja
std
scas
testb
cmp
mov
or
push
and
xchg
aas
pop
dec
fucomip
imul
xor
out
mov
and
dec
jp
xor
bound
mov
push
xchg
xor
mov
dec
mov
mov
lds
push
dec
xor
and
scas
add
adc
repz
mov
mov
cmp
ljmp
or
fmul
insb
sbb
pop
jp
add
mov
inc
adc
pop
js
cmc
fistpl
fnsave
add
pusha
popf
push
aas
mov
mov
xchg
add
lahf
clc
xchg
and
aam
sahf
jmp
pop
adc
push
roll
lock
pop
cwtl
push
push
ss
ret
shrb
jbe
sub
push
pop
mov
mov
mov
or
cli
mov
testl
lods
lea
stos
push
dec
mov
scas
sub
pop
rorl
push
push
mov
mov
pop
dec
ficoms
inc
inc
push
sbb
loop
mov
mov
pop
sub
lret
jp
mov
or
dec
xchg
push
jns
add
mov
cmc
lret
pop
adc
mov
mov
std
lea
mov
sub
inc
das
orb
jecxz
mov
fwait
or
int
pop
add
cwtd
xchg
and
sub
lahf
aas
pop
jle
xchg
or
test
cmp
lods
mov
pop
incb
fsubs
cmpsb
fnstsw
fistpl
inc
jle
add
cmp
sbb
shrl
fisubs
adc
cmc
pop
mov
outsb
pop
lods
leave
push
xor
mov
test
stc
push
mov
add
int3
int3
les
mov
and
jp
ljmp
jmp
divb
xor
pop
in
or
jno
shrb
jno
push
dec
in
jmp
repz
sub
aaa
js
and
adc
jb
mov
mov
sbb
dec
add
jmp
movsb
mov
mov
inc
mov
lea
dec
jbe,pn
icebp
lahf
leave
sub
jne
push
xchg
push
pop
pop
adc
mov
decl
test
xorb
sbb
add
orl
pop
sub
bound
mov
push
mov
aad
in
jbe
clc
faddl
lods
ja
fs
sbb
popa
xchg
in
jns
jb
cmpsl
and
faddp
jb
sarb
test
pop
arpl
xchg
push
push
xor
jp
push
outsl
rcll
jae
test
mov
xor
int3
rolb
cmp
call
inc
dec
movswl
jecxz
rorl
loopne
mov
roll
sbb
dec
js
test
lahf
outsl
push
mov
cmp
pop
scas
out
icebp
mov
mov
loop
push
loopne
mov
adc
sub
or
fwait
adc
xchg
pop
push
jbe
sti
jo
push
mov
dec
pop
sub
or
repz
push
sub
imul
xchg
lods
jp
mov
mov
cmovs
and
adc
popa
mov
and
je
mov
lods
push
mov
push
stos
or
call
push
sbb
xor
sub
stc
adc
sbb
jns
test
enter
cmp
pop
jl
shrb
sbb
lds
loop
push
dec
lock
aas
sbb
or
aam
mov
sub
ret
hlt
pop
arpl
push
xchg
jb
stos
mov
sbb
mov
push
jge
stc
ret
bound
or
pop
xchg
arpl
mov
fs
jl
pop
loopne
test
icebp
jmp
shlb
pop
fldenv
rol
cmpsl
ficoms
xchg
inc
cmp
mov
inc
and
orl
outsl
lock
mov
into
xor
testl
popa
lods
jge
sarb
js
cmpsl
ret
inc
rcr
ficomps
jns
test
call
pop
ret
orl
jns
pusha
popf
ss
out
mov
stc
sbb
inc
cmp
inc
and
outsl
dec
lahf
push
stos
push
imul
jno
enter
push
dec
sub
adc
in
lahf
lcall
pop
loope
cmc
data16
adc
int3
jne
xor
push
dec
jb
and
jae
mov
mov
mov
test
xchg
inc
rolb
in
cli
ss
rcrl
call
dec
jmp
xor
lcall
lock
cmpsl
push
xor
xchg
dec
pop
sbb
shrb
mov
add
inc
dec
sub
pop
jno
ret
movsl
adc
jbe
stos
xchg
test
inc
inc
iret
aas
inc
cmpsb
es
pop
adc
in
das
dec
data16
hlt
xchg
or
enter
es
out
push
ret
adc
stc
mov
es
jo
jl
dec
push
dec
int3
test
sbbb
push
dec
sbb
pusha
adc
cmpsb
shll
cmc
clc
mov
jae
jmp
cs
in
mov
cli
test
in
lret
int3
mul
adc
xchg
lods
ret
out
ret
cmp
sub
pop
rorb
pop
jle
sub
incl
push
std
and
sbb
jle
add
sbbb
sbb
dec
lods
aas
or
or
sahf
push
lcall
cmp
fs
sti
nop
test
in
jmp
sub
sub
mov
adc
incl
negl
daa
dec
test
cmp
or
jecxz
enter
rorl
and
loope
frstor
adc
pusha
cmp
jmp
lahf
push
icebp
fsubl
dec
pop
add
mov
pop
mov
xor
push
out
test
sub
xor
xor
rol
insb
sub
aad
test
dec
add
hlt
sbb
cwtl
mov
lret
and
cmp
pop
dec
imul
nop
jbe
jno
outsb
loopne
jns
popa
push
add
std
push
or
cmc
and
sub
aad
daa
or
jbe
and
icebp
fisttpll
loopne
cmp
call
sub
fisttpll
pop
cmpsl
sub
adc
mov
shll
rclb
jo
dec
fwait
cltd
mov
fs
leave
in
popf
testl
in
and
xchg
jne
mov
mov
xchg
dec
popf
xchg
jb
lods
jne
mov
sbb
push
out
jle
mov
testl
and
inc
sbb
xchg
shrb
inc
jg
ds
or
stos
sub
int
rclb
fimull
xchg
into
call
aad
push
icebp
mov
adc
and
sarl
xchg
xlat
nop
dec
cld
shl
add
sbb
sti
pop
pop
dec
xor
xorb
mov
fsubrs
jae
je
add
leave
sbb
movsl
adc
pop
jl
rcrb
and
movsl
aaa
stc
mov
fsts
subb
mov
mov
adc
xor
cmp
jle
jl
sub
clc
xor
mov
out
rcl
and
and
or
pushf
out
push
ljmp
stos
js
rcll
add
sbb
sub
dec
xor
test
mov
in
lcall
pop
stos
jo
lods
test
rorb
add
sbb
inc
xor
test
ficompl
inc
xadd
ret
imul
cmp
xchg
orb
sbb
sti
mov
add
jno
mov
mov
mov
aas
xor
mov
dec
std
dec
xor
std
cmp
adc
inc
mov
mov
push
push
jmp
movl
ret
iret
cmp
sbb
lea
movsl
cli
je
xor
mov
ficomps
inc
repz
mov
cmp
push
inc
pop
sub
inc
xor
push
mov
ret
jb
pop
lahf
jbe
orl
mov
int
mov
iret
or
test
sahf
insb
pop
je
popf
fdivl
rorl
divl
sub
xor
pop
dec
push
cmp
jns
and
push
mov
jo
movsl
in
popf
mov
mov
addb
mov
bound
shll
repz
lahf
mov
mov
jle
fs
out
xor
pop
inc
in
mov
sti
dec
dec
pop
push
adc
xor
jmp
popa
fcmovnbe
dec
and
jnp
xchg
vmwrite
push
pop
in
and
das
pop
mov
fwait
clc
in
lods
adc
mov
ljmp
push
je
and
xchg
imul
in
sub
outsl
notb
mov
sub
xchg
test
pop
mov
dec
into
push
shl
sahf
pop
imul
pop
lock
mov
or
nop
pop
cltd
adc
or
scas
bound
std
dec
push
jo
or
pusha
rcrb
xlat
cmpsb
mov
pop
bnd
jg
push
cmp
jmp
sub
add
mov
repz
inc
xchg
adc
pop
fstpl
outsb
mov
push
shll
int3
movsb
xchg
adc
sahf
pop
inc
or
lea
mov
cltd
lea
int3
pop
pop
cmpsb
lods
push
xlat
les
je
pusha
jo
mov
sahf
inc
or
call
mov
sbb
cltd
popf
sub
pop
sahf
js
xchg
and
jb
mov
out
clc
sahf
loopne
push
repz
sahf
fwait
xor
pop
mov
pusha
pop
jle
lds
and
jns
andl
push
jne
mov
mov
mov
imul
and
inc
sub
mov
inc
mov
jle
sbbb
stos
mov
mov
dec
mov
mov
xor
xchg
daa
insl
mov
jge
das
bound
xchg
out
lret
inc
fisttpl
lret
inc
add
mov
in
pop
mov
int
mov
sti
add
cmp
and
xchg
dec
loop
movsl
int3
mov
sbb
fimull
lret
add
sub
int
mov
pop
je
sub
addb
push
cmp
test
dec
cli
adc
dec
lods
add
push
mov
pop
movsb
jmp
ljmp
add
clc
and
and
cld
jno
packssdw
add
inc
adc
testb
add
rcll
test
pop
rcrl
sub
pop
sarl
fcmovbe
movsb
fmul
filds
xor
clc
js
in
mov
test
lods
ss
mov
dec
mov
add
xchg
test
adc
ljmp
sar
jmp
xor
push
dec
jbe
movsb
out
jmp
movsl
cmpsb
jnp
or
in
hlt
sub
in
repnz
add
loop
mov
inc
cmp
js
mov
movsb
or
imul
sub
popa
out
adc
dec
sbb
jmp
push
mov
sahf
jmp
test
cmpsl
inc
xor
xor
arpl
sbb
sbb
iret
xor
cltd
jno
daa
gs
push
mov
or
shr
pop
cmp
or
scas
mov
cmp
xchg
xorl
mov
xor
outsl
cmp
push
fnstenv
fimuls
xor
test
pop
cmp
hlt
sahf
iret
cmp
xor
movsl
in
or
cmp
adc
and
push
ss
icebp
and
push
mov
cld
insb
or
dec
jg
jbe
push
add
lahf
dec
sahf
popf
add
andb
jecxz
push
cmp
rcl
mov
daa
ja
stc
cmp
sub
lock
es
dec
dec
mov
cmp
pop
push
dec
mov
loop
inc
lret
sbb
imul
adc
clc
adc
dec
int3
dec
jmp
and
nop
mov
les
sbb
mov
inc
cli
jae
push
pop
es
or
in
mov
je
stos
jp
ss
inc
ja
jle
mov
sahf
sbb
jbe
outsl
ss
mov
mov
xchg
mov
ds
out
aam
dec
nop
ficoml
or
lock
fmuls
stos
out
dec
xchg
xchg
xchg
cmpsb
das
inc
mov
xchg
mov
hlt
mov
sbb
adc
mov
bound
mov
push
lcall
cld
dec
ja
fidivl
aaa
imul
mov
sub
add
mov
inc
je
adc
rcr
stos
and
xchg
push
fcoml
sub
repz
sbb
jg
sti
dec
mov
adc
in
xchg
loope
dec
fsts
test
cwtl
divl
xchg
mov
xor
cmp
mov
and
adc
xchg
orb
int
int
sub
xor
inc
mov
shll
or
les
cmp
shr
subl
out
xor
sbb
and
mov
mov
push
mov
sbb
scas
dec
and
and
test
sbb
in
loopne
lret
in
in
sete
out
sub
fadds
jae,pn
outsl
mov
inc
in
dec
cltd
jb
movsl
mov
pushf
xchg
push
mov
sbb
lock
ljmp
push
mov
and
jge
jae
loopne
cltd
lea
bound
adc
cs
aaa
push
xchg
mov
in
iret
insl
sub
mov
xor
cmp
cmp
testb
and
sbb
and
mov
mov
mov
add
arpl
clc
popa
andb
jae
roll
mov
mov
pop
adc
fiaddl
cmpsb
add
js
pop
mov
xchg
fdivs
dec
push
cmp
mov
test
xchg
outsb
adc
pop
xor
cltd
in
es
or
sti
out
lcall
mov
push
or
push
fneni(8087
out
out
out
outsb
into
je
out
xorl
testb
lret
push
push
movsb
loope
or
test
mov
loope
pop
iret
addb
push
daa
sbb
add
push
sbbb
cli
ss
sub
mov
hlt
sahf
push
mov
das
sbb
rclb
add
xor
or
push
dec
shlb
mov
lods
arpl
fldt
cmp
dec
cmp
push
xor
jnp
xor
fld
push
and
sub
rolb
icebp
aad
push
or
aaa
mov
loopne
mov
sbb
mov
mov
lret
and
jl
xchg
push
call
popf
bound
repnz
sub
dec
adc
mov
subl
jle
addl
mov
dec
xor
xchg
push
addr16
sub
lds
push
lahf
xchg
add
movsb
test
pop
mov
mov
mov
clc
js
sbb
es
fdivr
test
movsl
arpl
les
inc
imul
or
push
pop
outsl
push
inc
pop
sahf
cmp
xor
jecxz
cmp
add
jge
xorl
stos
clc
cmp
push
push
pop
pusha
test
dec
pusha
mov
mov
fwait
scas
mov
mov
iret
xchg
jge
push
test
sub
xchg
fs
sarb
pop
in
xchg
popf
inc
out
clc
push
add
xchg
and
cmc
sbb
cmp
out
sbb
xor
in
ret
not
mov
test
inc
inc
mov
mov
mov
fwait
out
inc
xor
xchg
xchg
sbb
aam
push
lock
repz
push
pusha
sub
mov
pop
mov
imul
clc
popf
pop
cmp
add
fsubrp
mov
pop
es
mov
dec
xchg
cmp
sbb
jns
lret
out
sbb
stc
rcrl
int3
mov
push
cs
dec
push
sbb
or
add
cli
in
push
popa
pushf
jecxz
lret
popa
add
fadds
sub
nop
mov
dec
cs
into
rolb
mov
push
insl
mov
movsl
pusha
lods
xor
outsl
jno
aas
sbb
mov
jo
lock
ret
dec
aam
cmp
fisttpl
leave
arpl
repz
aaa
adc
xchg
mov
out
das
daa
adc
pusha
pushf
cld
mov
hlt
fstl
sub
aad
inc
add
xchg
xchg
sub
push
dec
lret
fwait
cmc
mov
sbb
mov
cwtl
movsl
mov
cs
sbb
sbb
in
fisubrs
cmp
insl
sub
dec
pop
push
aaa
mov
sub
dec
ret
pop
push
icebp
fsts
sahf
or
cmc
or
xor
stc
adc
jmp
cmc
fstpt
out
mov
push
jle
inc
pop
js
inc
sbb
mov
mov
sbb
inc
lock
xchg
mov
push
dec
adc
jns
mov
pop
dec
dec
cwtl
addr16
dec
fs
lods
dec
in
xchg
mov
mov
orb
call
add
pushf
or
lods
jecxz
jge
jmp
xchg
xor
dec
subl
fsubp
dec
sbb
das
nop
push
push
xchg
mov
inc
push
test
loope
jo
sbb
inc
out
loop
pop
mov
or
push
imulb
inc
ret
mov
xor
pop
js
movsb
push
inc
dec
jg
jg
xchg
push
mov
test
imul
mov
inc
jg
rcl
adc
pop
jbe
fwait
ret
sub
pop
aad
xchg
push
adc
xchg
inc
enter
dec
fisubrs
adc
mov
pop
jno
out
mov
pop
xor
mov
adc
dec
fcmovu
pushf
addb
or
bswap
jns
sub
loop
stos
mov
xor
jb
shr
xor
loop
sub
aad
test
adc
sbb
xor
stos
arpl
pop
sti
mov
xorb
notl
sub
push
loope
mov
jmp
and
cmc
sub
pushf
insb
xor
sub
scas
sub
add
add
mov
cmp
out
test
mov
stos
mov
mov
ret
in
sbb
icebp
test
data16
scas
jo
scas
pop
xchg
and
pop
loopne
jle
cwtl
mov
ljmp
rcll
inc
jmp
scas
call
mov
arpl
mov
mov
sbb
aas
js
out
int3
adc
inc
xorl
js
clc
or
xor
pop
scas
pop
lods
add
in
sub
stos
movsl
mov
inc
pusha
inc
adc
call
adc
xorb
pop
movsb
mov
cmpsb
dec
pop
add
fnstsw
faddl
and
push
xchg
mov
mov
movsl
and
jp
into
jnp
and
mov
dec
jmp
jbe
lods
push
xor
and
mov
int
sahf
jl
push
adc
xor
cmpsb
push
xor
xor
enter
xor
adc
movhlps
std
or
setns
dec
and
js
aas
popf
lock
add
add
sbb
xchg
lret
aam
mov
adc
roll
cmc
arpl
add
cmp
cmpsb
in
daa
inc
cwtl
test
out
inc
mov
jp
das
gs
scas
dec
and
cmpsb
pop
push
cmp
nop
leave
cltd
dec
sub
mov
xor
ss
sti
mov
adc
stc
dec
clc
inc
dec
jns
lahf
call
cmp
popa
into
div
scas
xor
xlat
addr16
cmp
mov
cmc
sbb
xor
popa
cld
gs
js
adc
ficomps
cld
mov
clc
mulb
repnz
nop
arpl
shll
and
stc
inc
mov
pop
es
adc
xchg
push
cmpsb
shrl
loop
xor
adc
das
outsl
cmp
lea
pop
dec
mov
imul
int3
in
outsl
jmp
daa
lock
push
repz
xchg
pop
movsb
fucom
jg
push
adc
inc
subl
cmc
xorb
fs
push
int3
icebp
cmp
icebp
and
jecxz
xchg
in
pop
inc
jge
lcall
lods
jmp
or
pop
and
xor
in
xor
jae
add
xchg
stc
lahf
xchg
mov
cli
inc
mov
inc
into
dec
stc
mov
mov
fdiv
pop
movsb
mov
enter
popa
fsubrl
imul
jo
add
add
insl
popf
fbld
mov
pop
sub
xor
or
rorb
xlat
mov
cmp
shrb
ds
out
add
mov
jp
mov
lahf
outsl
into
es
push
pop
test
mov
mov
push
bnd
adc
xor
mov
xchg
in
mov
or
jbe
push
adc
adc
fsubrp
mov
mov
repz
jmp
imul
out
jnp
pop
sbb
pop
sbb
push
rcrb
das
inc
mov
into
cwtl
cmp
fsubl
js
sbb
in
cmp
mov
lcall
je
lahf
inc
out
stos
jo
push
mov
add
jbe
and
jg
dec
iret
mov
aas
mov
lds
adc
adc
sbb
sub
cmp
pushl
hlt
sub
pop
ja
mov
xchg
pop
inc
add
inc
xor
cmp
mov
pop
jno
shlb
fwait
push
inc
movsb
insb
not
cmp
cmp
mov
inc
into
xchg
punpckldq
xchg
sub
mov
fistl
mov
adc
loope
mov
adc
inc
sti
int
add
mov
pop
pop
mov
jg
pusha
jbe
push
enter
mov
inc
push
xchg
add
xor
mov
stos
les
xchg
ss
idivl
stos
mov
in
mov
inc
lcall
movsb
cld
orb
cmpsb
imul
shlb
pusha
call
and
shll
dec
ljmp
adc
mov
cmc
pushf
cld
aad
in
push
fs
into
fnstsw
cmp
movsb
es
sbb
mov
and
out
out
mov
std
sub
jb
hlt
negb
add
or
mov
adcb
pop
test
jp
in
outsb
das
test
jb
adc
loope
xor
shr
ret
cmp
mov
insb
aaa
inc
sub
leave
dec
loope
adc
std
or
cld
cwtl
orl
bound
xor
outsb
pop
imul
xor
and
jno
lret
lret
lcall
das
cmp
lods
push
mov
aad
popf
push
paddsb
idivl
adc
jge
sub
aaa
bswap
popf
or
cmc
sub
imul
pop
cmpsb
mulps
stc
mov
inc
mul
cmp
insb
das
adc
in
dec
xchg
unpcklpd
cmp
or
fadd
aam
aad
dec
xchg
mov
dec
ret
int3
in
mov
mov
xor
jae
hlt
out
xor
adc
jmp
sti
lahf
andl
out
test
std
es
pop
add
lds
jnp
cmp
and
or
in
popa
test
sub
jae
imul
dec
mov
push
xchg
xchg
pop
lock
mov
negl
push
xlat
adc
inc
test
jmp
xor
fabs
hlt
mov
pop
scas
lret
or
movsl
dec
lret
cmp
arpl
stos
and
negb
int
nop
aam
loopne
xor
shlb
sarl
sub
nop
dec
and
pop
int3
xlat
stc
cld
movzbl
and
in
jo
pop
inc
rol
sti
mov
lods
mov
daa
sub
rcr
xor
imul
xlat
cmp
sbb
inc
dec
mov
decb
pop
adc
frstpm(287
inc
or
mov
out
rcll
push
rolb
popa
negb
xchg
adc
mull
loope
std
popf
jnp
gs
rcrl
sbb
cs
mov
mov
inc
iret
and
pop
lods
mov
cli
or
pop
push
push
xchg
mov
adc
xchg
mov
or
shrl
idiv
loope
out
scas
sub
mov
bound
lahf
push
cld
ficoms
sub
xor
mov
sbb
cmp
sbb
pushf
mulb
rorb
mov
popa
data16
cld
aas
pop
jbe
shlb
repnz
out
push
shrb
movsl
arpl
ss
out
or
scas
mov
sbb
sarl
mov
jle
into
mov
outsl
in
ljmp
or
cli
loope
mov
or
jbe
push
adc
mov
adc
adc
loop
xchg
dec
pop
push
fimull
arpl
rcrl
mov
pop
ss
mov
cmp
rorl
stos
lret
lret
push
inc
cmp
xlat
fcompl
push
fdivrp
mov
pop
shll
jbe
push
mov
shrl
sub
push
sbb
mov
outsb
data16
filds
fwait
pop
adc
mov
sbb
rcl
dec
jbe
inc
sbb
out
cli
pop
test
mov
outsl
je
call
outsb
adc
sbb
and
add
or
clc
cmpsb
fs
cmp
inc
inc
das
jecxz
cmp
lret
mov
shlb
add
mov
scas
add
iret
fcompl
sti
push
int3
mov
ss
cmp
fmul
sbb
int3
inc
adc
stos
out
sar
adc
dec
add
shrl
lcall
repnz
or
test
shll
rcll
imul
or
inc
mov
xchg
outsl
push
in
mov
pop
cwtl
jo
ret
loope
push
sub
in
dec
or
cmp
add
xor
shl
dec
bound
cmc
cltd
push
pusha
loope
add
aad
data16
out
or
xor
pusha
push
movsl
ret
or
loope
cmp
fidivs
ss
push
jb
shll
in
jo
leave
sti
scas
int
dec
push
push
push
or
ljmp
cmp
mov
test
outsb
jg
rolb
ucomiss
adc
and
fdivr
es
push
adcb
jge
or
xchg
fdivrl
out
into
lock
out
ret
and
js
add
icebp
fmuls
inc
data16
scas
jo
test
es
aas
mov
push
xlat
pop
test
mov
jecxz
push
fcmovnu
xchg
dec
into
fiadds
mull
lock
enter
cmp
jbe
inc
mov
pop
sub
idivb
inc
jo
shlb
jb
bound
mov
neg
imul
sti
mul
loope
adc
stc
and
inc
test
or
ret
dec
jp
and
jl
mov
negl
inc
bound
mov
sbb
and
cs
sbb
enter
xor
cltd
inc
out
test
ret
stos
unpckhps
mov
sub
sub
mov
frstor
cmp
sbb
cmp
loope
mov
pushf
aad
arpl
test
sub
ret
mov
cmp
cwtl
arpl
addl
pop
sub
mov
enter
inc
outsb
xchg
fidivrl
or
ret
or
mov
data16
and
mov
jae
fcmovnu
jl
mov
ror
mov
xchg
mov
stc
cltd
int
in
push
loope
mov
fisttpl
lods
in
mov
inc
in
mov
mov
xchg
sbb
push
cltd
jle
addr16
pop
inc
pop
out
sahf
je
jne
mov
lahf
test
xor
dec
push
cmp
adc
outsl
adc
shlb
test
inc
ds
jmp
shrb
push
outsb
fisubrs
xchg
ljmp
insl
mov
int3
adc
push
inc
mov
mov
pop
xor
lea
inc
scas
subl
jnp
sub
jmp
data16
pusha
in
xchg
mov
or
xchg
cltd
pop
xchg
sub
or
xor
mov
push
jno
adc
inc
or
cli
clc
xchg
lret
icebp
jne
sbb
fiadds
clc
mov
sbb
mov
stos
sub
imull
mov
cltd
jge
nop
vexpandpd
loop
xor
enter
cmpsb
dec
xchg
bound
push
les
in
cmc
mov
dec
pop
vpandn
dec
lock
lods
shrb
sbb
daa
fimuls
movsb
add
add
lret
and
mov
sub
test
push
mov
push
push
cmpsb
inc
xor
xchg
ret
xor
sub
xor
nop
lock
push
and
repz
inc
mov
jg
shlb
int3
inc
inc
js
push
sbb
scas
call
add
outsl
adc
or
addr16
aad
add
add
test
shlb
rcrl
jns
iret
fsub
jae
scas
xlat
sub
ja
cmc
jg
std
pusha
xchg
jne
in
mov
xor
outsl
xchg
addr16
push
lcall
in
cmp
and
cmp
push
inc
xchg
iret
rorl
nop
into
sti
xchg
jnp
pop
xorb
sub
cmp
ret
xchg
sahf
and
gs
push
pop
mov
xchg
sub
and
fistpl
dec
and
pop
mov
scas
or
inc
mov
cmp
mov
int
das
dec
leave
mov
pop
push
dec
daa
cli
enter
cmp
lahf
jnp
push
xor
in
mov
jle
xlat
frstor
jbe
mulb
mov
inc
jo
test
sti
stos
and
sbb
pop
xor
pop
xor
js
pop
push
popf
enter
xchg
ret
pop
iret
imul
cld
xor
dec
ret
ficoms
push
mov
and
aad
push
jl
inc
xchg
jb
mov
or
mov
pop
adc
roll
mov
and
xor
sbb
mov
stc
cld
xchg
andb
rcrb
nop
mov
bound
hlt
adc
push
sub
nop
ljmp
es
or
pop
xchg
movsb
inc
in
add
pop
xchg
xchg
les
xor
and
mov
aam
pop
inc
mov
fs
pusha
pop
jo
sti
mov
mov
fidivl
scas
mov
insb
into
jp
sar
lcall
jae
and
hlt
mov
cltd
shlb
ja
pushf
pop
cmp
mov
clc
add
inc
cmc
pop
mov
jns
jg
jno
hlt
shll
cmpsl
jle
cmpsl
xor
test
sub
out
unpckhps
pop
and
push
sbb
aas
cs
negb
jmp
mov
or
push
movl
sbb
add
and
sbb
fnstenv
or
add
mov
xor
imul
mov
cmp
fcomps
jg
pop
popa
data16
push
add
pop
mov
add
xlat
cmp
adc
je
mov
pop
iret
lds
ja
nop
stos
push
fwait
jle
adc
mov
xor
dec
imul
jb
insl
inc
setle
jno
fdivs
or
push
push
data16
rolb
lea
dec
lods
call
mov
mov
nop
hlt
jle
fildl
mov
lock
xchg
aaa
sub
add
rcl
jbe
fbld
repnz
jle
aaa
lahf
or
aaa
jle
inc
mov
ss
rorb
fs
je
sub
mov
adc
mov
mov
ja
es
pushf
add
inc
mov
mov
jnp
pop
test
mov
bound
punpckhwd
ret
push
add
xchg
dec
insl
fisubrs
jmp
pop
js
mov
sbb
movsb
loope
lods
jo
sti
jne
jo
pop
cwtl
xchg
and
stos
imul
cmpsb
push
jne
push
cmpsb
mov
push
adc
lock
pop
or
cmp
mov
adc
movsb
testb
imul
or
sub
jecxz
ficoms
and
repnz
out
imul
ret
aas
mov
mov
mov
pop
and
lock
mov
pop
lock
imul
pop
jg
idivl
iret
fbstp
mov
or
in
cmc
pop
int3
lock
cmp
aas
fwait
mov
out
js
lock
pop
andb
sbb
insl
mov
sub
fimuls
mov
clc
push
add
add
lods
sti
mov
cmpsl
dec
out
inc
xchg
dec
imulb
sub
fcom
js
mov
packsswb
dec
orl
std
mov
xchg
sbb
cmp
adc
sub
cmpsb
cmpsb
cmp
mov
cmc
xchg
push
stos
push
cmp
loop
popf
xchg
out
out
xchg
push
pop
cwtl
or
inc
jecxz
jl
xor
jmp
push
mov
lods
gs
push
and
outsb
mov
cmpsb
das
std
js
mov
movsb
mov
test
sti
cli
in
mov
nop
adc
in
or
ss
ret
mov
imul
mov
sbb
inc
inc
push
push
mov
icebp
jns
sub
or
into
or
pop
xchg
movsb
or
insb
fidivl
repz
stc
sar
psubq
loopne
inc
pop
cs
xor
push
mov
dec
mov
ret
out
imul
call
movsl
out
xor
pop
xchg
jne
rcll
and
in
sbb
jl
mov
in
ja
mov
repnz
dec
cmpb
imul
sbb
loopne
arpl
test
mov
add
xor
js
pop
bound
test
xchg
xchg
push
and
xchg
mov
pop
push
push
movsb
mov
es
fmull
fwait
xchg
add
push
pop
mov
cltd
jo
popf
xlat
loope
jnp
inc
sub
jl
add
into
pop
decl
test
xchg
and
mov
xor
pop
dec
lahf
idivb
out
dec
dec
test
sbb
les
leave
inc
shrl
and
xchg
inc
xor
das
test
cs
call
rorl
mov
dec
movsb
mov
int3
and
scas
mov
arpl
and
cmp
arpl
sbb
sbb
out
mov
pop
mov
jne
lods
push
out
in
cmp
ja
outsb
pop
xchg
or
add
jnp
cmp
xchg
mov
daa
cmp
cwtl
jae
int
cmpsl
mov
fsts
movsb
les
imul
leave
sahf
mov
mov
jnp
push
cs
jnp
bound
enter
sbb
mov
dec
lds
pop
popf
jno
push
push
add
scas
inc
lock
gs
xchg
test
dec
orb
xchg
aad
push
inc
fsubs
mov
cmp
and
cmp
pusha
mov
setbe
sbb
repnz
outsb
add
scas
mov
jmp
sub
cmc
pop
or
jmp
pop
popa
lods
mov
jl
cmp
xor
inc
push
and
adc
adc
sub
add
test
in
cld
dec
mov
sti
jmp
sub
dec
fwait
std
adc
mov
jge
test
sti
xchg
scas
pushf
daa
aas
mov
cmp
mov
imul
push
iret
mov
bound
out
and
cmpsb
int
mov
dec
imul
or
dec
je
sti
aad
loope
out
cltd
push
in
out
mov
pop
push
ds
or
cmp
sti
jae
mov
xchg
mov
dec
jbe
daa
test
sub
or
fnstsw
jns
out
es
inc
pop
inc
dec
and
aad
adc
jl
add
jecxz
adc
xlat
imul
scas
sub
rcrl
movsl
mov
ljmp
cmp
xor
lods
fadds
pop
outsl
mov
sahf
cmp
mov
in
pop
pop
out
dec
push
pop
js
xchg
mov
cmc
enter
xor
test
fcoml
hlt
std
mov
inc
xor
cmovno
das
mov
or
mov
mov
push
mov
ss
test
stos
jns
les
cli
mov
push
push
mov
adc
mov
jle
loopnew
repz
loope
fwait
bound
lret
mov
lea
mov
dec
sti
fcmovne
pop
inc
ffreep
test
rcll
xor
cld
scas
out
imulb
adc
sar
pop
inc
xchg
push
add
out
mov
adc
enter
sbb
movsb
pop
push
pusha
cmp
cmpsl
xchg
fmul
inc
mov
cmp
imul
test
mov
loopne
test
cmp
inc
and
lods
adc
addl
cmc
xchg
add
rcrb
pop
xchg
shr
adc
lods
andb
in
push
pushf
push
push
push
xchg
lret
jno
shll
sub
dec
cmp
or
adc
push
scas
ds
movsl
clts
mov
out
paddw
je
sarl
pop
aam
fcompl
push
add
mov
xor
shlb
std
inc
pop
mov
test
xchg
cmp
aam
inc
inc
iret
repz
call
scas
movsl
fdivrl
xchg
lock
das
adc
pop
ja
jmp
mov
jle
push
out
gs
push
adc
scas
inc
clc
sub
into
lods
inc
pop
push
sub
cmp
push
xor
sub
xor
js
shrb
mov
test
es
ret
scas
jbe
push
lea
add
sub
dec
test
cmp
outsb
and
ss
aaa
sbb
pop
mov
push
pop
sarl
mov
jnp
ret
xchg
mov
out
cmc
cmp
or
jecxz
jo
repnz
or
cmpsb
cli
jo
jl
ret
mov
adcb
xor
cmp
mov
out
cmc
push
in
adc
push
rol
mov
pop
int
xchg
fwait
mov
jbe
shlb
test
and
aas
enter
int
and
nop
sub
jb
pop
cld
dec
std
xlat
sub
fstl
out
std
mov
push
movsbl
jns
mov
adc
and
hlt
lods
xor
pop
hlt
mov
and
pop
push
push
neg
cmp
fs
mov
sub
pop
and
and
mov
xchg
jo
and
fistps
daa
cmp
cltd
mov
movsb
aad
xchg
jbe
dec
stos
mov
cmp
dec
dec
jne
cli
xor
mov
movsl
dec
clc
mov
fdivrl
rorl
jnp
adc
ror
data16
mov
adc
xchg
mov
add
into
addr16
xchg
jno
sbb
mov
add
push
sti
mov
push
decl
aam
in
xor
leave
loope
sub
rclb
iret
cltd
das
jno
roll
mov
mov
cmc
mov
adc
aad
dec
adc
shll
pop
lds
adc
and
push
sub
inc
scas
testb
or
xchg
mov
pusha
cmp
mov
lea
mov
sti
pop
fdivrl
inc
repz
dec
shl
ror
sbb
cmc
mov
add
dec
mov
shlb
pop
cmpsb
jo
xchg
flds
and
dec
mov
cs
mov
movsb
jg
or
mov
fimuls
and
mov
xor
xchg
mov
sahf
jne
scas
mov
icebp
push
mov
xor
or
sub
sbb
jno
sarb
pop
dec
popa
les
orl
je
daa
add
or
mov
jecxz
mov
addr16
aaa
inc
rcl
cmpsl
mov
and
sub
in
xchg
aas
xchg
aas
icebp
xlat
rclb
ss
mov
add
adc
lahf
test
inc
or
push
push
sbb
xchg
sub
icebp
jnp
and
mov
xor
popf
cmpsl
xor
mov
cmpsb
pusha
rorl
nop
cmpsb
lods
push
xor
popa
mov
adc
shll
jg
mov
int
jmp
cmpsl
mov
imul
mov
lahf
mov
xlat
dec
shl
aaa
cmp
xchg
mov
or
xchg
push
jl
pop
shlb
sbbb
setnp
dec
mov
xchg
outsb
push
nop
inc
aas
mov
mov
iret
xchg
mov
ja
das
jbe
sbb
data16
test
sub
pushf
push
adc
lds
fildll
test
adc
stc
je
pop
and
out
pop
jecxz
xor
sub
adc
out
cmc
gs
mov
loopne
pop
and
add
aas
inc
mov
push
jl
js
sarl
ret
call
rcr
adc
inc
sbb
aaa
mov
bound
testl
stos
stos
or
sub
dec
lock
pop
rcr
inc
push
sti
leave
jns
fcmovu
sbb
inc
jb
pop
std
adcb
int3
pushf
push
jne
or
sahf
xchg
std
ret
jp
gs
movsl
mov
pop
and
nop
sbb
scas
mov
lret
stos
rorb
xor
pop
xchg
out
sub
sti
cwtl
jbe
sbb
iret
jne
popf
fldl
movsl
rcr
mov
adc
dec
push
aaa
ja
and
dec
clc
in
jne
loop
sbb
xchg
inc
int3
sub
std
fadds
push
rorb
je
nop
mov
jmp
push
lods
push
aam
jo
mov
xor
adc
push
into
lock
clc
in
pop
sbb
fs
pop
outsl
mov
std
jno
xor
push
dec
mov
ljmp
mov
cwtl
mov
or
sbb
leave
and
jb
repnz
sti
popa
add
dec
pop
imul
scas
jmp
insb
icebp
dec
popa
push
and
pop
test
inc
push
xor
movl
xor
jo
mov
xor
scas
inc
mov
sub
scas
outsb
add
popa
data16
nop
mov
gs
shlb
addr16
adc
pop
cltd
nop
mov
mov
lret
add
ss
mov
hlt
jb
daa
lods
sbb
adc
xchg
ss
push
cmp
shrw
test
or
aaa
mov
dec
sub
xchg
xor
sub
mov
ror
sahf
std
rorb
testl
insl
cmp
cmp
xor
lods
dec
fisubrs
cltd
je
lcall
jo
cmp
data16
in
lds
push
movsl
clc
lahf
inc
push
push
sbb
je
aaa
ljmp
scas
fwait
sahf
jp
fistps
dec
inc
push
and
mov
iret
jb
cltd
push
push
lds
and
mov
sub
idivl
xchg
pusha
dec
into
pop
push
aam
mov
insb
loope
or
or
xchg
push
dec
jp
out
dec
movsl
add
xor
mov
jno
mov
sbb
push
jle
scas
cli
or
addl
sub
jne
xchg
mov
dec
pop
andb
push
xor
dec
iret
xchg
test
jmp
mov
in
cltd
cwtl
fldl
mov
mov
rorb
and
mov
scas
fmull
fsubl
xor
and
sahf
jp
ljmp
pushl
sbb
dec
add
mov
stc
cmp
and
stos
add
stos
mov
loop
xchg
lcall
xchg
repz
fnsave
dec
lret
ret
lahf
or
push
xchg
pop
fwait
inc
cltd
push
or
and
aam
and
gs
ja
lret
shlb
push
aam
inc
dec
dec
loop
mov
mov
ficoms
fwait
mov
cmpsl
jp
mov
ss
inc
ret
cmp
xor
cmp
mov
bound
pop
aam
cltd
or
cmp
jbe
insb
sub
lret
mov
mov
jg
mov
divl
inc
push
xchg
xchg
pusha
dec
xor
ss
or
test
mov
and
loope
cmp
pusha
aaa
jecxz
jbe
dec
test
ljmp
sahf
push
push
sub
adcb
add
jns
adc
or
fmuls
mov
cwtl
pop
sbb
idivb
dec
lods
pop
aaa
lods
and
fwait
cmp
inc
jp
enter
mov
push
sub
outsl
add
and
das
pusha
cmp
stos
jecxz
call
leave
sbb
sub
adc
ss
push
add
or
repnz
movsl
mov
lds
and
push
icebp
lods
in
and
inc
push
js
sub
xor
fiaddl
stos
insl
xchg
lds
lret
ja
mov
jg
ds
push
int3
cmpsl
push
stc
xchg
adc
test
stc
imul
jecxz
push
insl
dec
xlat
jae
nop
cmp
add
mov
jp
ret
cmpl
or
push
in
decl
inc
nop
sub
dec
fimull
jne
arpl
pop
cmp
lds
leave
mov
in
lock
xlat
mov
sub
adc
movl
adc
xchg
arpl
loop
cmc
jo
mov
or
sub
xor
jns
mov
xchg
dec
test
adc
mov
dec
pushf
inc
dec
mov
repnz
sub
pop
sub
popa
xor
test
xchg
push
inc
xor
mov
ret
and
outsl
cmc
sub
imul
ljmp
in
adc
sahf
movsb
inc
imul
movsl
cmp
jecxz
pop
adcb
bswap
inc
push
or
shlb
pop
xor
ds
and
and
mov
jno
js
subb
inc
loop
push
out
xchg
js
sbb
inc
push
and
sub
adc
lahf
dec
out
jo
cmp
sub
mov
cmp
dec
mov
into
loop
adc
out
out
dec
sub
xchg
dec
inc
lahf
js
int
cmpb
adc
dec
pop
inc
gs
pop
xchg
ss
lret
nop
popa
mov
mov
cmpsl
and
bound
push
xlat
mov
adc
or
sub
dec
push
adc
loopne
pop
icebp
jmp
mov
nop
test
loopne
shlb
cmp
repnz
fstps
jle
movsl
test
test
or
movsl
mov
cmp
cwtl
lods
sbb
push
stos
in
rorb
and
imull
outsl
pop
and
lahf
add
pop
dec
fcomps
fisubs
adc
mov
jne
popa
mul
and
xchg
or
add
sub
lea
movsb
mov
std
cmp
pop
pushf
mov
clc
xlat
xchg
push
push
pushf
push
dec
fwait
cmc
neg
add
shrl
mov
mov
mov
and
icebp
cmp
push
sub
lahf
test
inc
dec
push
paddusw
nop
sti
je
fwait
scas
push
int
jo
jne
loope
sbb
sub
call
or
mov
mov
pop
pop
push
mov
lea
xchg
inc
push
push
cmp
push
repz
cmp
and
aaa
mov
pop
push
mov
cli
jge
xchg
or
cltd
sub
mov
cmp
mov
cmp
mov
inc
adc
jae
mov
dec
cmp
dec
add
sbb
sbb
shll
pop
mov
cmpsb
and
inc
pop
mov
bnd
aad
mov
adc
or
xchg
push
inc
and
cmpsl
xlat
push
add
xchg
dec
fsubl
sbb
enter
lods
sbb
mov
bound
dec
popa
aaa
ficoms
out
cli
aaa
and
dec
loopne
pop
push
jb
jge
idivl
jb
sub
mov
or
adc
rcr
imul
jo
hlt
bound
sub
ret
rorb
add
imul
dec
outsl
add
movsb
mov
adc
adc
mov
rcrl
push
int
dec
jo
mov
cmp
loop
pop
imul
dec
adc
or
lds
sbb
in
xor
std
adc
jns
add
addr16
mov
mov
sahf
ffreep
mov
mov
fmull
loop,pt
out
gs
mov
fcompl
mov
and
mov
add
xchg
movsb
xlat
pop
xor
fiadds
stos
nop
adc
jge
lret
and
mov
or
sysexit
xor
in
mov
mov
inc
adc
cmp
js
inc
dec
orb
dec
adc
roll
push
pop
inc
outsb
test
mov
lock
aam
and
cltd
cmp
inc
outsb
pop
push
mov
pop
es
sbbb
mov
mov
pop
shrb
and
push
xchg
inc
aad
mov
mov
js
gs
push
push
stos
mov
or
mov
jo
jns
xchg
cmp
xor
lret
incb
sub
xchg
repnz
in
xlat
adc
xchg
sub
add
jne
dec
aam
jne
scas
cwtl
inc
in
and
lods
cmpb
inc
and
in
dec
pop
sahf
or
clc
pop
cmc
cmp
imul
mov
pop
jne
or
cmp
in
aad
xlat
dec
pop
jge
inc
jnp
adc
push
sub
or
sbb
mov
sub
push
jne
rorb
imul
fisubs
cwtl
sub
xchg
jnp
and
pop
push
out
adc
jno
sbb
addr16
lods
jp
and
inc
in
cmpsb
dec
idivb
jno
testl
cmc
popa
add
in
adc
lcall
add
cmp
pop
xchg
push
aad
outsl
pop
les
add
cwtl
scas
jo
and
xlat
mov
das
xchg
adc
and
movsb
cmp
mov
out
xor
js
jmp
jecxz
aas
insb
pop
js
test
clc
test
xchg
mov
pop
shr
mov
inc
loope
sbb
or
or
push
mov
dec
mov
cs
push
outsl
push
add
imul
jl
arpl
in
ss
sbb
into
jle
mulb
jp
mov
cltd
add
mov
xchg
sbb
mov
mov
rclb
movsb
inc
or
insl
fst
add
das
lcall
and
pop
mov
in
jb
jp
mov
cmpsb
xchg
imul
cld
push
inc
int
xor
iret
pop
add
into
mov
negb
xor
hlt
lahf
repz
sub
cmp
pop
push
and
push
mov
out
mov
arpl
sub
scas
and
sarl
in
rorl
test
js
mov
outsl
lahf
js
push
inc
mov
jno
mov
test
outsl
rclb
add
adc
pusha
and
sub
sbb
adc
cmc
movsl
dec
aam
mov
push
xchg
push
inc
cs
sti
mov
xchg
lods
jb
imul
dec
stc
lds
fisubrs
decl
ret
jbe
repz
fisubl
adc
fstpt
scas
jno
mov
xchg
lock
inc
add
cmpsl
xor
jb
jmp
adc
fcmovnbe
and
das
lea
test
out
test
sub
daa
rorb
mov
or
mov
dec
std
es
ret
addr16
xor
mov
xchg
shlb
imulb
pop
cmpsl
or
xor
jge
xchg
mov
cld
cld
push
push
mov
lret
add
ljmp
inc
scas
decb
jle
lock
adc
insl
fldl
adc
stc
xor
roll
push
xor
rolb
inc
inc
adcl
xchg
fmulp
adcb
mov
mov
movsl
loop
mov
in
into
inc
jmp
xor
cmc
push
gs
mov
outsl
inc
xchg
insl
fisttpl
adc
insb
inc
adc
lods
out
iret
push
sbb
and
cmp
mov
adc
dec
mov
popa
add
sbb
lods
pop
xor
insl
ret
cmp
scas
testb
push
jp
scas
mov
xor
in
mov
fcoms
mov
sbb
dec
mov
mov
push
cs
addl
push
and
loopne
sbb
mov
stc
pop
cmp
out
out
daa
lock
mov
iret
and
push
cwtl
rcrb
xchg
fisubs
shlb
xor
adc
sub
les
jg
add
int
add
dec
xchg
mov
mov
sahf
mov
mov
addl
pop
repz
mov
push
repnz
add
mov
xchg
stc
xchg
push
insb
in
lcall
inc
jns
inc
mov
mov
fistpll
inc
sub
mov
add
out
jge
push
mov
addr16
lret
or
aas
pop
mov
mov
js
cmp
xor
xor
pop
jge
out
dec
lret
out
rcll
fs
mov
jmp
mov
inc
testl
hlt
int
or
mov
sbb
sub
lds
cli
mov
enter
xchg
add
ret
xorl
inc
dec
add
cmp
xchg
sbbb
dec
adc
jae
clc
cld
nop
add
add
ss
jb
mov
loopne
mov
sbb
mov
testb
insl
cmp
in
jmp
or
push
loopne
jo
push
jge
mov
outsb
out
mov
sub
mov
adc
or
push
dec
ret
testl
adc
lret
data16
dec
nop
roll
cmpsb
add
mov
insl
mov
fwait
aad
movl
xchg
jnp
inc
xor
arpl
mov
mov
in
fisttpl
xlat
inc
popf
xchg
dec
mov
cmp
sub
push
mov
cmp
xorb
push
or
mov
scas
push
mov
int3
notl
cli
aas
pop
test
inc
xchg
sbb
jno
daa
add
mov
ja
outsl
pop
mov
sbb
fcomi
xor
ret
push
mov
sub
notl
bound
cltd
into
shrb
je
adc
mov
js
fbld
sbb
enter
icebp
or
add
stc
insb
mov
pop
rep
pusha
popf
movsb
push
sar
jae
ljmp
cmp
push
mov
push
loop
jp
popa
cmp
jb
popw
adc
loope
pop
test
push
js
jecxz
jp
xchg
popf
test
and
and
push
cmp
fdivrp
push
movsl
adc
xchg
dec
int
lret
mov
sbb
pop
adc
fdivl
jno
dec
jle
dec
add
and
jns
pop
sbb
cmp
sbb
or
lret
ss
insl
shll
ret
enter
cld
fs
inc
mov
mov
scas
ss
call
push
push
mov
mov
rol
cmpsl
xchg
insl
pushf
je
cmpsb
xchg
xor
lods
xchg
mulb
daa
pop
pop
xorl
add
or
loope
faddp
add
sahf
mov
mov
add
sub
clc
sar
pop
push
fadds
and
mov
mov
jp
pop
sbb
jno
lret
insl
movsb
mov
push
fmull
jae
dec
and
leave
mov
cmp
testb
outsl
mov
jo
pop
push
pop
cmpsl
inc
pop
daa
sarl
lock
push
insl
cmpsl
andb
fstpt
into
mov
mov
movsl
dec
adc
insb
les
jns
pushf
ret
aad
inc
lret
inc
inc
jmp
mov
sarb
mov
addr16
out
xchg
cld
cmp
sbb
mov
leave
scas
aaa
xchg
movsb
cmp
popa
enter
push
in
in
inc
in
icebp
mov
test
mov
dec
loopne
andl
add
leave
lds
mov
cmp
inc
fnstenv
push
add
jae
mov
les
fldt
jne
inc
xchg
out
and
jne
add
imul
xchg
sar
insl
mov
pop
and
sti
clc
iret
cmpsb
mov
stos
cmpsb
mov
pop
mull
cmp
pop
inc
test
jne
scas
mov
into
test
dec
call
xor
out
push
dec
add
mov
cmc
into
test
leave
stos
aas
data16
dec
or
outsl
pop
movsb
fsubl
xchg
xchg
outsl
orb
mov
mov
mov
aad
repz
mov
fidivs
xchg
xchg
repnz
xor
and
mov
test
mov
ds
jl
mov
in
mov
scas
sbb
rclb
mov
xchg
jae
das
test
outsl
jns
lods
cltd
aad
push
jno
pop
dec
sti
jp
push
testl
outsl
jle
rcrb
push
movsl
pop
push
and
aas
push
popf
out
inc
aaa
jge
push
push
inc
jbe
out
imul
repz
dec
shrb
mov
sbb
std
mov
push
add
push
xor
syscall
jae
mov
push
insb
mov
jg
or
dec
fstps
daa
pushf
cmc
stos
vmulpd
xor
xchg
ja
loopne
jno
xchg
or
mov
and
jge
xor
das
and
test
outsb
cmp
insl
ret
mov
xchg
xchg
and
loop
jns
nop
inc
je
or
test
dec
test
lahf
lods
jle
inc
adc
add
cli
fcmovne
lahf
xor
add
insb
insl
icebp
test
cmp
jge
push
daa
and
jb
sbb
rclb
int3
sub
jge
out
out
in
pop
or
sbb
push
push
sub
jb
sahf
shrl
cmp
daa
sti
shrl
stos
sub
mov
das
sbb
sbb
dec
out
fsubrs
mov
subl
insl
sub
or
cmp
fisttps
mov
push
aad
pop
out
loope
popf
int
movsb
out
mov
xchg
test
push
mov
popf
scas
outsl
xor
stos
insb
repnz
adc
adc
inc
push
mov
adc
and
fwait
dec
icebp
pushl
inc
into
adc
into
sub
cli
sbb
gs
std
daa
cmpsl
mov
sbb
jge
cld
lahf
into
nop
dec
sbb
nopl
inc
pop
aam
sub
pop
lods
jle
scas
aas
popf
stc
xor
or
pop
scas
cmp
add
cld
sbb
and
xchg
lahf
mov
push
cmpsb
or
sub
or
inc
loop
jg
imul
in
jnp
imul
xlat
mov
pop
dec
fnstsw
out
cmp
jo
push
fiaddl
cmc
adc
lea
jecxz
xor
lcall
cmpsb
lahf
sbb
xchg
out
and
and
mov
xor
dec
jae
out
inc
cmpl
sbb
or
adc
dec
ret
push
rolb
push
xor
mov
arpl
iret
pop
loopne
jmp
lock
jl
xchg
orb
test
jl
sub
mov
add
mov
sbb
ficomps
bound
push
xor
aas
sbb
lods
imul
xchg
icebp
mov
xlat
lret
inc
dec
bound
jmp
dec
repnz
out
jle
mov
inc
shr
notb
fwait
or
cltd
mov
mov
push
ficompl
mov
addl
mov
xlat
or
aam
cmpsb
inc
sub
stc
sub
and
popa
stos
lret
fbstp
jg
mov
adc
mov
adc
lods
ds
fildll
jp
xchg
cwtl
pop
enter
sub
push
xorl
repnz
test
push
arpl
add
imul
into
lods
push
in
cltd
jecxz
fbld
test
dec
jno
push
jns
imul
out
jnp
shr
icebp
or
mov
js
sbb
xor
mov
sbb
push
popf
out
lahf
or
jae
bnd
cwtl
iret
imul
sbb
jmp
in
sub
sbb
mov
adc
pop
mov
xchg
jno
std
mov
sahf
push
push
aaa
cltd
jg
hlt
mov
inc
sar
cwtl
dec
push
add
ja
out
fwait
jno
xchg
add
add
xchg
mov
js
cwtl
adc
jle
mov
movsl
bound
out
cli
xchg
mov
andb
nop
jne
imul
cwtl
cmp
sub
in
insl
les
into
lret
jl
push
pushf
jg
leave
loope
pop
push
aad
out
cmp
iret
mov
pop
mov
lods
pop
cld
testb
cwtl
mov
jb
jl
adc
sahf
imul
outsb
repz
jno
mov
adc
out
fisttps
and
ja
pop
sti
jmp
mov
sbbb
imul
rorl
sub
inc
xchg
push
adc
cmp
jbe
loope
pop
mov
push
popa
ljmp
mov
jo
repnz
push
jne
loop
cmpsb
jne
data16
loop
faddl
movsb
shlb
test
test
adc
mov
cmp
cmpsb
cmp
fcmovb
dec
sti
loopne
and
imul
shl
pusha
xchg
outsb
xchg
stc
push
mov
dec
aaa
or
idivb
fs
fsub
adc
testl
aam
mov
cmp
inc
fwait
dec
adc
ret
incl
mov
cltd
nop
popf
xor
push
and
imul
mov
or
ss
xchg
cmp
call
sbb
cmpsb
int
xor
pop
cli
pop
push
dec
in
pop
in
movsl
sbb
lret
lret
or
das
inc
rcr
pop
sbb
jne
xchg
das
xchg
int
jo
out
push
stos
mov
stos
sahf
push
inc
cs
sub
out
jl
test
mov
sbb
mov
bswap
bound
xlat
cmc
push
dec
out
movsb
sbb
dec
shrb
jge
add
inc
jb
ss
or
gs
out
jnp
imul
negl
pop
jne
imul
pusha
roll
in
sub
shrb
fsubl
sti
mov
into
mov
adc
sbb
inc
rcl
xor
mov
mov
mov
out
cs
and
xchg
mov
sbb
mov
and
movb
fcompl
mov
out
inc
jbe
ret
sub
stc
inc
lds
pop
add
fsubs
xor
push
pop
mov
pop
push
cltd
inc
push
es
lock
sahf
cmc
xlat
das
mov
insb
sbb
stc
ret
scas
and
data16
jmp
cld
inc
cmpsb
ror
inc
mov
pop
lret
inc
push
scas
add
testl
pop
shll
sahf
fs
repnz
pop
sti
cmpsl
inc
rcr
repnz
xchg
mov
in
cmp
pop
pop
lods
outsb
ficomps
mov
out
push
jmp
cmp
pop
in
mov
rcrl
add
fwait
xchg
negl
dec
mov
test
sbb
shr
aam
in
inc
mov
xchg
inc
dec
inc
loop
frstor
frstor
int
cmp
inc
mov
or
pop
push
rol
cli
popa
ds
vpminsw
pop
push
push
push
scas
movb
xor
out
fidivrl
jle
pop
jmp
mov
mov
adc
out
insb
lret
cmp
jne
test
sbb
fdivrs
xchg
sub
pop
jl
insb
stc
push
pop
in
dec
add
pop
mov
sahf
push
bound
pop
mov
mov
outsl
add
dec
lods
xor
lcall
push
jnp
cmpsl
cmc
dec
jns
insl
add
and
mov
fsubrs
dec
test
arpl
adc
mov
xor
loop
xor
sahf
rcrl
push
test
mov
sbb
or
and
test
hlt
mov
add
sarb
pop
add
push
cmpsl
sbb
sub
sbb
ja
jne
jb
sub
jne
cmp
iret
cmp
rcll
leave
sbb
shll
xchg
loopne
mov
push
mov
fdivrs
fbstp
inc
jl
ja
adc
movsb
mov
scas
lahf
add
loop
and
subb
push
sbb
adc
rclb
cmp
shlb
lods
outsb
call
stc
int3
flds
adc
aam
jbe
mov
out
adc
je
sbbb
imul
stc
adc
sahf
sub
dec
into
inc
scas
adc
mov
lret
sarb
and
cmp
out
mov
xchg
jae
mov
sub
icebp
mov
jne
xorl
lahf
aaa
lds
and
inc
cmpl
or
add
test
inc
adc
jg
ja
enter
xor
and
and
aaa
push
mov
mov
inc
jae
cmp
mov
dec
rorl
bound
pop
insl
mov
sub
adc
pop
pop
cmpsl
sub
cmp
adc
cwtl
jp
ds
xor
int
adc
enter
and
es
out
xlat
mov
imul
pop
jle
or
test
push
and
xchg
dec
mov
sub
in
aam
pop
adc
loope
cmp
gs
xchg
mov
sub
popf
jns
mov
ret
les
rcl
mov
adc
xchg
lea
scas
or
cwtl
nop
scas
loope
arpl
sub
test
jmp
daa
insb
or
mov
mov
test
push
add
adc
or
lds
movsl
cmp
fmull
add
mov
stos
stos
xchg
jae
imulb
add
jg
dec
dec
loopne
xor
mov
cmp
jmp
aad
in
adc
lods
in
push
lock
push
shrb
hlt
mov
pop
in
insb
cs
dec
ret
stos
loop
mov
xor
pop
repnz
fldt
sbb
pop
pop
pop
sti
ret
pop
push
pop
cli
outsl
pusha
stc
ret
mov
call
sub
arpl
ficomps
push
ljmp
daa
into
lods
or
stos
cmc
xchg
inc
inc
dec
mov
fcoms
pop
shll
xlat
mov
xchg
xor
inc
das
aaa
lret
pop
cmp
mov
test
nop
cmp
push
push
mov
test
in
sub
add
push
loopne
mov
lods
dec
sbb
or
or
outsb
fdiv
and
pop
iret
outsl
adc
sub
jbe
das
xor
int3
add
push
stos
sub
adc
mov
xlat
mov
cs
inc
movsl
subl
invd
lock
pop
sub
push
ja
or
and
mov
mov
jmp
sbb
dec
jns
fstps
inc
lds
add
std
sti
aaa
frstor
add
incb
jl
sbb
inc
repnz
insl
lret
test
pop
jp
mov
pop
lods
ss
lods
push
mov
out
dec
mov
mov
mov
push
repz
stc
fdivs
fdivl
lahf
pop
add
pusha
xchg
out
push
sbb
aam
sub
mov
int3
iret
in
inc
jb
out
mov
loop
mov
adc
lds
dec
nop
push
in
ret
dec
int3
sti
dec
arpl
and
mov
mov
mov
in
or
jg
into
rcrb
pop
add
mul
outsl
xchg
sbb
xchg
jnp
xor
push
sbb
mov
loop
cwtl
jo
ret
sub
mov
cmp
xchg
adc
cmp
fdivs
dec
lds
inc
aad
mov
lods
les
ficoms
jbe
lock
xchg
ja
call
addr16
jnp
lea
mov
mov
stos
add
jns
iret
adc
gs
pop
sbb
xlat
mov
addb
pushf
inc
dec
sub
inc
fwait
and
pushf
xor
movsl
into
push
sub
push
pop
cld
push
xacquire
arpl
sub
pop
test
popf
mov
jg
out
outsb
jo
jnp
mov
inc
rolb
mov
lods
fidivrs
sbb
adc
sti
clc
mov
pop
cmpsb
lock
imul
arpl
enter
fxch
lret
les
and
outsb
fcmovbe
push
dec
inc
insl
push
mov
xor
in
lock
dec
fwait
inc
pop
sbb
sbb
mov
add
push
in
xchg
ja
arpl
cmpsb
mov
and
cmp
mov
adc
xor
jmp
lea
cs
subl
dec
add
aad
aaa
pusha
mov
jmp
scas
aaa
rcrb
jmp
pop
cmp
pop
mov
push
mov
lahf
insb
leave
or
mov
sub
int3
into
or
sahf
stos
pusha
sub
imul
cmp
add
stos
jo
iret
add
jae
das
imul
int3
popa
adc
sub
dec
mov
fdivr
inc
out
jp
idivl
daa
push
shl
adc
repz
cs
jbe
aad
lea
bound
pusha
push
clc
cmp
mul
push
inc
push
add
int3
inc
or
orl
lret
dec
cwtl
jle
clc
daa
dec
sbb
jae
mov
cmp
repz
fisttpl
orl
fninit
xor
mov
incb
arpl
inc
and
mov
ss
xor
push
into
scas
and
cli
pop
mov
fwait
cwtl
rorl
roll
adc
test
add
mov
ljmp
or
or
mov
mov
sbb
pop
xchg
das
loopne
sub
push
notb
outsl
test
loop
jae
adc
lds
out
sub
orb
test
mov
or
adc
jmp
das
lds
adc
imul
addr16
jl
int
and
xchg
cmp
push
cltd
ror
pop
jmp
cmpsb
push
inc
pusha
sbb
mov
test
cmpsl
dec
int3
repnz
jne
cmpsl
sbb
cmc
sbbl
rorb
xlat
enter
aad
out
mov
pop
in
dec
hlt
xor
add
std
rorb
ss
sub
mov
inc
rcr
pop
sbb
xor
push
popa
cld
leave
dec
xor
fstps
xor
mov
cltd
outsb
outsl
lods
push
fs
subl
sbb
inc
cmp
pop
sahf
mov
out
adc
cmpsb
xchg
xchg
lock
mov
fdivrs
or
out
fildl
jns
push
negl
je
sbb
sahf
dec
outsl
sahf
ret
nop
mov
mov
lock
aas
loop
push
stc
das
dec
mov
sub
mov
adc
leave
pop
loopne
cmp
xchg
mov
inc
push
out
add
xchg
cmpsb
pop
test
xchg
push
insl
stos
mov
xchg
sbb
out
xor
sbb
in
xor
cmp
into
xor
sbb
pinsrw
enter
jp
sub
push
dec
outsl
aam
inc
cmpl
jecxz
mov
out
add
test
sarl
pop
pop
out
jno
mov
call
pop
mov
push
sub
or
sarl
not
movsl
push
and
fsts
mov
lcall
insb
push
mov
push
sub
pop
lock
push
scas
push
jmp
xor
fnstenv
cli
inc
pop
int3
fistl
cmp
cmpsl
mov
in
mov
nop
add
aam
dec
sbb
rorl
cmp
inc
mov
sahf
aas
sub
pop
int3
repnz
loop
xchg
inc
imul
fildl
stos
loope
cmpsb
mov
sub
imul
cmpsb
stos
mov
add
iret
fwait
rclb
leave
hlt
in
xchg
jecxz
add
mov
xchg
outsl
jecxz
mov
loop
or
jbe,pt
mov
repz
stos
pusha
xchg
mov
mul
in
fsub
and
ljmp
out
fadd
idivl
movsl
dec
mov
into
gs
notl
mov
arpl
and
lret
cli
call
cmpsl
xor
adc
sub
xchg
stc
faddl
dec
jp
sub
xor
add
adcl
jle
or
rcr
aam
js
stos
and
add
jne
sbb
xchg
cs
cmpsb
adc
jo
test
ret
cmp
sub
push
or
ljmp
pop
xchg
push
xor
mov
fstps
add
stos
push
addl
arpl
dec
rorb
loopne
shll
adc
inc
clc
mov
and
ja
cmp
lcall
popa
dec
lret
mov
insb
test
adc
sbb
lea
addl
loope
mov
call
mov
bound
mov
loope
ss
xlat
xchg
mov
ss
int3
nop
es
jg
fistpl
mov
or
movsb
mov
add
and
popa
rolb
mov
cmp
aam
insl
std
xchg
sbb
or
rcrl
ret
mov
popa
add
dec
or
fbstp
iret
into
in
mov
push
sbb
call
je
dec
inc
xchg
adc
loope
daa
xor
jne
lods
int
loope
test
xor
aaa
push
pop
int3
jg
inc
test
xlat
or
es
ljmp
stos
or
jecxz
popf
lret
lret
pop
jne
subl
or
xchg
flds
or
sub
into
push
insb
shrb
out
push
lret
shl
rolb
fmull
pop
sahf
push
int
test
call
mov
ds
push
sub
hlt
ret
adc
cli
push
inc
fidivs
ficompl
jnp
inc
cmp
mov
imul
push
sbb
aad
dec
loop
in
cwtl
scas
nop
cwtl
inc
push
outsb
xlat
rol
xchg
cltd
mov
int
sbb
mov
push
mov
lcall
testb
pop
or
cmp
dec
pushf
jne
popf
mov
in
cli
mov
ds
pop
cmpsl
std
push
popa
cs
mov
cld
push
fxch
jg
addr16
call
adc
dec
in
imul
mov
sbb
repz
xchg
sbb
push
mov
ret
mov
sbb
push
cmp
pop
js
aad
dec
mov
pop
cld
push
mov
stc
ja
push
inc
xor
inc
lea
pop
lea
adc
gs
jno
xchg
sbb
stc
insl
stos
int
mov
cmpsw
dec
mov
push
push
xor
xchg
pusha
aam
enter
or
imul
or
inc
mov
xchg
jecxz
mov
adc
subb
add
and
mov
in
ja
sub
sar
test
hlt
mov
in
jl
mov
aas
jp
pop
andl
fcoms
jmp
xchg
aas
les
jp
test
dec
popf
popa
pmovmskb
lea
mov
sbb
mov
pop
pop
ret
pop
jg
je
fwait
and
dec
stc
jae
rorb
hlt
hlt
cmp
jae
popa
mov
scas
mov
enter
sbb
les
dec
in
sub
outsb
fistps
push
fs
adc
out
push
mov
sbb
rorb
inc
mov
sbb
movsb
jno
or
bswap
repz
cmp
add
ljmp
adc
adc
jge
pop
add
movsb
mov
jb
pop
dec
std
int
mov
sub
call
fcmovnb
pushf
inc
jno
shll
jg
shrb
pop
ss
imul
popa
add
sbb
xchg
sbb
je
or
sbb
jns
fsubrl
lds
inc
dec
int3
test
and
sub
sarl
sbb
imul
inc
push
jbe
cmpsb
mov
sbb
fcompl
add
pushf
mov
sub
cwtl
ljmp
push
mov
repnz
sbb
fimuls
or
int
sbb
mov
icebp
cmp
mov
sbb
push
xlat
outsl
sub
ret
sbb
movsb
xchg
and
inc
pop
adc
pop
pop
out
in
stos
cmp
push
cmpsl
je
fs
enter
mov
rol
xchg
js
push
push
push
cmpb
imul
in
push
and
call
xchg
mov
fdecstp
push
popa
sahf
testl
cmp
lcall
xchg
lcall
int3
rcll
and
mov
bound
lock
and
loope
and
xchg
cmpsb
and
mov
sub
inc
test
push
mov
cltd
and
cli
popf
dec
cmp
scas
pop
sub
jge
mov
sar
dec
dec
mov
cmp
hlt
mov
fimull
adc
and
sub
sti
clc
int
dec
xor
das
inc
xor
dec
inc
fdivs
imul
aas
fstpt
shrb
sbb
jo
push
pop
dec
mov
daa
jbe
push
rcrl
divb
jae
dec
push
inc
push
nop
shl
cmpsb
pop
add
dec
imul
push
cmpsl
iret
mov
adc
mov
pop
imul
insl
mov
mov
imul
mov
outsl
mov
mov
fildl
xor
outsl
jo
mov
test
pop
push
push
es
test
cmpb
out
push
fs
mov
jg
pop
pop
push
pop
push
push
test
dec
mov
ljmp
outsb
rcrl
cltd
movsb
mov
dec
jb
iret
outsl
jmp
insb
inc
ds
sbb
mov
in
or
add
roll
jecxz
adc
or
sub
js
out
sbb
jne
jle
bound
sti
daa
pop
ds
fsubs
mov
or
push
mov
shlb
inc
push
movsb
xor
cmp
xor
lcall
cmpsl
loopne
sti
inc
cmp
outsb
ror
mov
enter
mov
inc
in
add
mov
cmp
add
cmpsl
pop
ljmp
aam
jb
jle
sar
jnp
mov
jle
push
jecxz
das
xchg
mov
stc
dec
cwtl
jl
in
leave
sub
mov
aas
ljmp
and
jnp
repz
outsb
adc
loopne
xor
shlb
fcomps
push
xor
cli
test
cmp
push
pushf
push
ja
mov
scas
pop
inc
or
xor
add
add
inc
int
lock
bound
or
outsb
fldt
outsb
mov
pop
dec
test
add
inc
or
cmp
mov
jecxz
sbb
and
icebp
movsb
pop
sbb
sti
cmp
jnp
push
dec
hlt
dec
outsl
jecxz
jno
xor
mov
push
or
jg
push
rorb
sbb
test
mov
dec
aam
mov
cmpsl
pushf
jbe
cmp
icebp
out
orb
jecxz
mov
adc
pop
outsl
lret
out
mov
push
xchg
lret
stc
sti
test
cld
movsl
mov
xor
pop
fsubr
push
jmp
stc
cs
jl
or
adc
jbe
jnp
or
in
pop
loop
cmp
popf
cmpsb
lret
push
sti
xlat
jnp
or
mov
sti
pop
jg
pop
push
mov
mov
iret
inc
xchg
repnz
cld
je
xchg
or
enter
mov
jb
test
pop
mov
fldl
adc
xchg
cmpsb
mov
push
and
jne
mov
dec
pushf
test
sbb
mov
jg
sub
pop
and
call
fs
or
mov
mov
in
loop
xchg
sub
dec
aad
push
cmp
dec
xor
fwait
inc
xchg
rorl
pop
es
ja
out
dec
repnz
push
mov
pop
cwtl
bound
sbb
xchg
jne
jno
push
lods
and
pop
pop
and
fcoms
mov
mov
iret
cmp
js
out
mov
adc
adc
cs
jge
or
loopne
int3
aas
cmpsb
repz
xor
and
jge
rcr
das
inc
mov
scas
stc
sbb
inc
fstpt
mov
xchg
scas
sub
and
push
jmp
mov
dec
fnstsw
cmp
push
push
push
push
std
xchg
outsb
imul
repnz
std
and
or
mov
xor
scas
imul
inc
pop
daa
mov
and
sar
iret
orb
fwait
in
subl
cmp
test
aam
test
push
mov
jns
mov
or
mov
jg
add
movsb
mov
xchg
pop
pop
out
jmp
xchg
xchg
and
jb
add
ror
and
sahf
push
sub
mov
mov
addr16
repz
sbb
pop
jb
testl
fsubrs
movsl
or
sub
clc
and
out
sahf
jp
mov
or
mov
mov
aaa
mov
pop
fiadds
cltd
gs
repnz
add
cmp
add
sbb
neg
loopne
push
add
xchg
cwtl
jle
mov
sti
enter
insb
int3
cld
dec
push
cmp
lret
sub
cmp
lahf
sub
mov
mov
or
mov
sbb
cmp
cmpsl
mov
inc
mov
or
bound
jg
dec
dec
out
daa
fmuls
ss
fstpl
loop
mov
xorb
pushf
add
imul
loope
ret
sub
xchg
mov
jmp
pop
jb
lods
push
sub
adc
lods
sbb
sbb
loope
ljmp
stc
xchg
ror
loop
lods
repz
insb
je
nop
addl
repnz
es
push
lcall
sti
fs
jo
pop
loope
mov
jo
xor
mov
repz
ret
fisubl
insb
fistl
fs
sub
lods
lock
adc
in
ja
xchg
pop
mov
mov
stos
inc
movl
fdivrl
pop
cmpsl
mov
jmp
lods
lods
cmp
int3
mov
inc
add
fsts
inc
mov
mov
cmp
das
xchg
xor
add
lcall
xchg
xor
or
negl
sbb
stos
data16
daa
jle
int
stos
sbb
xchg
sbb
dec
shrb
jg
sub
fistps
jecxz
mov
arpl
clc
test
push
jg
push
fistpll
xchg
jb
lods
xchg
jecxz
mov
add
rcl
mov
pop
mov
adc
clc
fists
bound
int
pop
cld
cs
add
add
test
dec
add
outsl
call
fisttpll
or
mov
into
add
mov
ret
push
mov
insb
aas
add
int
imul
xlat
dec
mov
pop
push
movsl
adc
imul
inc
inc
push
cmp
adcl
sbb
dec
andl
pextrw
cltd
sub
aaa
lds
mov
out
jecxz
or
add
pop
cli
cmpsb
inc
and
test
adc
push
cmpsb
negl
push
aaa
lds
test
mov
aas
mov
mov
and
lahf
cmc
fcom
xchg
adc
sarl
out
das
les
hlt
xor
and
das
test
dec
sub
cld
clc
stc
lods
push
pop
cvtps2pd
push
hlt
cltd
or
or
jg
cmpsb
ljmp
jge
cmp
fistps
cmp
pop
jp
and
in
stc
pushf
sub
or
call
test
in
rep
inc
mov
inc
popf
sbb
fwait
mov
inc
and
fcmovnbe
jecxz
dec
xor
fst
adc
icebp
push
mov
nop
and
hlt
repnz
push
pop
and
mov
push
and
test
hlt
cld
mov
xor
pop
or
test
push
outsb
sbb
call
imul
cwtl
jb
lods
in
inc
cli
lock
push
ja
ror
xor
xchg
enter
xor
hlt
xchg
ss
outsl
cmpsb
ss
push
pop
cmp
push
cmp
lahf
insb
mov
dec
or
jns
lret
cmp
rorl
aad
dec
in
add
pusha
or
cli
fimuls
mov
sub
xor
lea
dec
sti
outsl
mov
popf
in
add
mov
adc
jno
sub
adc
cmpsl
fsubrp
mov
fadd
adc
xchg
in
xchg
lahf
cmp
adc
dec
repz
or
jno
mov
xchg
stos
leave
test
stos
mov
and
and
mov
mov
pusha
pop
test
lret
dec
call
sarl
out
xlat
ret
mov
jmp
out
std
lods
hlt
lcall
insl
push
pop
xor
mov
fiaddl
lock
faddl
dec
call
sub
mov
imul
add
in
loope
xor
adc
repz
in
cmp
lock
cmp
std
mov
dec
imul
aas
pop
clc
lret
outsb
sti
cmpsl
lods
pop
addl
cwtl
push
xor
leave
xchg
mov
mov
or
jl
sub
xchg
scas
int3
sub
fldt
or
lock
mov
nop
pop
fadd
mov
aaa
adc
xor
mov
push
enter
dec
push
xchg
push
js
fs
add
mov
fcomps
add
jnp
cmpsl
in
ret
imul
pop
dec
pop
out
sub
rclb
jecxz
adc
xor
test
movsl
xor
psrad
fisubrl
cmc
mov
push
repz
sbb
cltd
insb
pop
stos
ja
dec
in
or
fsubs
stos
push
jnp
and
push
xchg
inc
int
repz
imul
pop
sar
ja
mov
das
jnp
jmp
and
sbb
mov
sti
push
adc
sti
insl
popa
pop
dec
cli
mov
xor
sub
sbb
adc
mov
stos
adc
mov
addb
pop
pop
mov
add
mov
pusha
xor
push
jle
mov
movsl
out
hlt
push
sbb
dec
adc
adc
mov
xor
popa
jnp
xor
adc
sbb
mov
cmp
mov
push
mov
push
dec
pop
idiv
sub
fsubs
stos
mov
scas
and
or
and
inc
xchg
or
inc
xchg
subb
jl
lahf
mov
push
cmp
scas
add
xlat
mov
xchg
push
push
dec
adc
xor
cmp
popf
add
scas
sti
or
add
in
push
outsb
push
cmpsl
out
or
pushf
mov
insl
mov
mov
lcall
and
pop
out
jb
sub
ds
and
push
jmp
pop
pusha
mov
fistps
fucom
loopne
pop
lds
lods
mov
test
mov
jge
mov
push
jecxz
sbb
ret
push
bound
cmp
aaa
mov
mov
ds
imul
sub
stos
xchg
mov
addr16
ret
inc
push
mov
push
and
add
out
shll
outsl
subl
push
loope
lahf
sub
push
cmp
cmpsl
adc
mov
sbb
xchg
int3
pop
push
sbb
lret
jg
inc
gs
rcrb
repz
xor
ficompl
das
inc
mov
loopne
fnstenv
ficoms
jb
cmp
daa
rclb
iret
dec
inc
mov
les
cmovb
lret
in
test
popf
xchg
pop
fsub
and
outsl
xor
fcmovbe
leave
inc
fisttpl
cmp
rcl
lea
and
lcall
je
lock
in
outsl
mov
in
mov
popf
ljmp
call
loope
idivb
sub
mov
cli
mov
push
sub
js
mov
adc
arpl
hlt
jo
mov
adc
add
mov
lret
out
xchg
pop
pop
imul
sbb
inc
mov
sahf
adc
pop
jmp
je
leave
adc
sahf
loopne
pushf
or
mov
mov
jp
movsl
sbb
mov
xor
xchg
sahf
lock
and
dec
outsl
insl
enter
rorb
dec
and
push
mov
icebp
add
inc
insl
xlat
out
xor
popa
outsb
bound
int
mov
adc
fwait
mov
cltd
les
in
or
iret
pop
scas
or
pop
test
clc
cmp
xlat
or
fdivrs
dec
outsb
mov
cmpl
xchg
xchg
out
inc
jns
xchg
jg
mov
cmp
rcl
mov
adc
sub
into
cmp
and
ja
scas
xorl
mov
aaa
xlat
and
add
in
cwtl
ss
or
pop
out
mov
mov
cld
jmp
push
push
insl
ljmp
es
cmp
mov
and
sbb
or
mov
fcoml
cmp
cmpsb
inc
popa
sbb
or
dec
rolb
rolb
lahf
fcomp
imulb
fcomps
loope
jbe
popl
std
xchg
mov
movsb
setae
mov
sbb
das
icebp
cmp
stos
loopne
es
gs
das
pop
in
daa
outsl
loop
cli
sbb
ds
hlt
cmp
cmpsl
outsl
adcb
std
pop
or
les
dec
cmpsb
and
test
shrl
push
mov
xchg
nop
mov
hlt
or
inc
push
sub
push
pop
fiadds
in
mov
js
xor
and
dec
xchg
pop
loop
xor
nop
inc
loope
into
add
xchg
xchg
sub
jae
int
pop
mov
mov
cmpsl
push
push
in
imul
mov
add
push
ss
sub
gs
sarb
xchg
sub
int
sti
cs
addr16
jecxz
pop
push
insb
push
addr16
push
adc
aaa
incl
imul
xor
test
leave
sbb
or
pop
rorb
pop
loopne
mov
cwtl
mov
mov
mov
ss
inc
jne
ret
enter
cwtl
shrb
push
mov
mov
adc
pop
stos
sbb
loope
sub
clc
outsb
cmp
lret
push
out
add
stos
sbb
sub
dec
mul
cmp
push
mov
and
adc
jbe
jge
test
addr16
jb
pop
mov
cmpl
jae
outsb
mov
stos
mov
sub
aam
pop
ficomps
sub
pop
arpl
mov
sti
scas
adc
sbb
inc
mov
roll
imul
push
outsl
and
insb
xchg
insl
xchg
int
ret
in
dec
and
sti
xor
test
movsl
push
call
adc
aad
cmp
mov
push
sub
mov
test
xchg
jns
push
mov
push
scas
sbbl
nop
lea
push
ja
lods
loopne
and
js
lods
daa
or
es
push
sub
cltd
cmc
cld
sti
repz
push
rorl
mov
dec
or
jae
imul
je
pop
push
repnz
push
gs
movsb
movsb
push
jnp
mov
fcoml
in
filds
push
adc
ss
test
dec
lods
jno
mov
lods
add
lret
jmp
lods
adc
icebp
rcrb
cmpsb
dec
xor
rolb
cmp
mov
cli
test
mov
inc
xor
dec
mov
mov
aas
sub
add
idivb
repnz
cmp
mov
pand
orl
push
mov
xor
sbb
iret
or
lret
push
repz
stc
add
nop
sub
jo
out
xlat
cmp
or
xor
in
cld
xchg
insl
mov
push
mov
add
sysexit
repz
insb
push
fs
and
das
xor
ja
imul
es
lods
cmp
xor
jae
fiadds
and
out
or
inc
gs
roll
insl
inc
mulb
arpl
je
stc
xchg
shll
jmp
in
pop
cld
jl
inc
and
add
out
sbb
jle
cmp
mov
jl
pop
enter
outsb
sub
push
mov
mov
lods
pop
jmp
xchg
cs
repnz
xchg
jge
push
das
xor
inc
cmp
jo
rol
repnz
mov
cwtl
sub
addr16
mov
push
jbe
iret
xchg
adc
movsl
cmp
or
xorl
fwait
inc
or
mov
pushf
lds
mov
lds
push
lods
xchg
rclb
xchg
fidivrl
sbb
jl
adc
mov
jo
insb
push
add
imul
or
test
pusha
aaa
adc
je
das
and
mov
clc
inc
xlat
cmpsl
aam
pop
imul
sub
out
shll
loop
int
repnz
mov
mov
sahf
add
cmpsb
outsl
fistl
mov
cmp
adc
cmpb
incl
bound
cli
cmp
mov
dec
mov
mov
mov
mull
scas
outsb
sti
dec
xor
stos
push
not
lahf
sbb
mov
ja
pop
pop
and
push
xor
or
inc
faddl
call
mov
push
pop
xchg
lahf
push
repnz
xor
add
pusha
sbb
push
mov
dec
shlb
dec
stos
rol
xchg
sbb
cld
out
loopne
inc
and
fs
and
outsl
lods
add
pusha
lea
jbe
dec
and
ficoms
lahf
fistl
mov
pop
rcr
scas
jmp
and
and
add
icebp
cmpb
mov
loop
outsb
add
lret
insl
in
mov
stos
adc
fmuls
out
add
cs
mov
adc
imul
pop
jmp
dec
jo
cmpb
jecxz
aaa
iret
mov
xor
loopne
push
mov
lcall
leave
xor
dec
orl
call
jle
fbld
movsl
cmc
push
jle
mov
vpaddd
cmpsb
lret
xor
or
out
imul
and
sbb
mov
pop
int
mov
sub
jge
mov
rcrb
fs
pop
push
mov
stc
je
dec
push
mov
shll
pop
stos
sbb
jb
out
cmpsl
inc
jg
mov
or
push
xor
push
sbbl
jg
sub
ret
arpl
pop
xchg
hlt
stos
mov
notl
xchg
push
aas
push
int3
jb
lods
xchg
sub
ja
lcall
mov
xor
les
bnd
push
ret
in
fisttpll
mov
fdiv
push
mull
jae
stc
lea
popf
test
and
sbb
xor
jg
adc
xchg
incl
test
imul
out
ds
mov
mov
cs
add
jmp
adc
cld
inc
pop
jo
cwtl
pushf
jb
in
mov
xor
loop
push
mov
es
sbb
ja
push
pop
push
xchg
cmp
and
jno
stos
je
push
push
in
mov
sbb
inc
push
scas
aad
lcall
insb
mov
rcl
je
ret
mov
jecxz
inc
arpl
xchg
shll
and
inc
jne
repz
mov
mov
sti
mov
testb
repnz
inc
pop
scas
jge
xchg
rorl
inc
mov
fnstcw
idiv
mov
inc
mov
xor
cwtl
sbb
insb
sti
pop
inc
shll
fdivr
mov
inc
cltd
js
pop
xor
lods
loope
aad
dec
inc
test
idivb
daa
dec
gs
xchg
fldt
outsb
jle
je
xlat
jl
dec
mov
xchg
enter
dec
fs
cmp
sub
push
lret
jo
test
sar
xor
sub
fmuls
sbb
pop
aaa
rorb
ja
mov
xchg
js
pusha
jp
xchg
fstpt
push
cmp
outsb
xchg
push
imul
lock
mov
xor
addps
pop
sbb
shl
fdivs
pop
and
lret
fs
inc
lcall
push
push
xchg
mov
popa
mov
lcall
cltd
sub
xchg
lahf
xor
arpl
mov
in
dec
es
sbb
cli
notl
les
jns
adc
cld
mov
jns
or
adc
or
loop
mov
mov
movsb
jge
fsts
push
in
fstpl
jbe
mov
and
in
decl
adc
or
sbb
jecxz
mov
jno
and
push
lret
je
and
lods
push
hlt
movsb
adc
or
mov
push
sarb
arpl
mov
mov
jge
sbb
jp
in
dec
inc
adc
push
dec
ljmp
test
mov
mov
sbb
cmp
movsl
mov
mov
rcr
mov
or
mov
xchg
jno
cmc
aad
ret
inc
mov
cmp
jmp
jge
fs
xor
mov
cmc
adc
mov
sub
lods
daa
cmpb
xorl
mov
ds
imul
mov
aas
sub
lods
sbb
push
jge
ds
cmp
sub
push
scas
push
clc
std
jecxz
pop
movntq
sub
adc
lods
ds
mov
or
out
jns
sarb
loope
rorb
insb
loope
aas
into
loop
and
jp
jnp
mov
out
fwait
pushf
pop
mov
incl
ds
inc
fisttps
xchg
push
add
push
push
xchg
push
lahf
sti
jnp
rcrl
add
lock
jbe
out
xor
xlat
sbb
inc
push
mov
std
or
inc
inc
inc
sti
fiaddl
aaa
das
sub
or
dec
jge
push
in
push
or
sbb
xor
lds
stc
ffree
sub
aaa
add
mov
xchg
adc
adc
imul
loop
mov
decl
adc
jb
out
xor
out
add
jmp
xor
insl
stos
mov
fcompl
add
mov
loop
and
negl
mov
stos
test
lock
lds
in
stc
or
xchg
daa
adc
out
cmpsb
xchg
test
or
mov
dec
lret
or
nop
sbb
addr16
sbb
sbb
ret
ret
ret
add
jl
dec
aad
rclb
mov
popa
imul
add
into
cs
push
repz
sbb
cmc
adc
mov
xlat
lods
and
xchg
dec
cmpsl
mov
iretw
mov
scas
dec
push
imul
cmp
push
add
inc
into
loope
xchg
pop
loop
pop
cltd
xor
ds
mov
loop
pushf
dec
cmc
stos
data16
dec
negb
out
or
and
sahf
popa
outsb
lods
into
callw
adc
sub
xchg
mov
add
insl
gs
in
ret
push
xor
or
xchg
cmp
outsb
mov
in
jmp
test
inc
shlb
sub
ret
lock
shll
add
stc
ds
das
xchg
jle
lock
xchg
sbb
xchg
dec
inc
adc
add
mov
cs
nop
mov
sub
mov
mov
jge
and
cwtl
xor
data16
mov
jae
incl
cmp
outsb
pop
xchg
push
js
sub
inc
clc
pop
adc
lret
push
add
fwait
sbb
iret
insb
arpl
fcmovnu
mov
and
popl
int3
xchg
add
shr
or
fwait
fwait
xor
pop
cmp
xor
loop
mov
lods
out
push
in
jnp
cmpl
shrb
arpl
pushf
inc
jb
int
xchg
jmp
test
push
sbb
pop
sbb
sar
mov
adc
pop
mov
call
mov
cmp
jmp
jge
hlt
cmp
inc
and
sbb
fstpl
mov
cmp
mov
push
adc
stc
shll
iret
stos
adc
mov
mov
pop
mov
sbb
dec
stos
ds
inc
push
andb
push
jg
cld
setbe
scas
repnz
arpl
pushl
cltd
inc
fnstcw
and
add
push
inc
data16
outsb
xchg
hlt
mov
int3
je
pop
mov
cmp
pop
sbb
sub
push
cmp
push
pop
cmp
mov
icebp
and
push
cmp
bound
sbb
mov
or
insl
or
outsb
sbb
dec
ja
fwait
xor
out
dec
fmuls
adc
inc
pushf
cmpb
das
ja
cld
leave
clc
sarl
fsts
mov
or
gs
xor
pusha
mov
stos
int
into
cmp
mov
pop
dec
insl
pop
xchg
mov
jmp
add
movsl
jge
adc
std
movsl
lock
int
fcomip
add
cmpsl
sub
js
push
pop
xchg
jns
and
mov
add
lds
xchg
mov
add
push
add
lods
xchg
jmp
out
xchg
jp
xor
lea
sub
imul
lret
inc
pop
sti
xlat
inc
loope
jno
out
out
xchg
lcall
rcrl
jo
aaa
dec
ja
sub
xchg
daa
xchg
rol
mov
imul
jns
mov
inc
movsb
pop
jmp
aas
lods
xchg
add
inc
pop
xchg
push
sub
and
fs
xchg
fs
movsl
mov
sahf
imul
cwtl
idivl
data16
popa
imul
xlat
rol
insb
mov
lock
cmp
imul
fistpll
xor
jmp
sti
data16
orl
jecxz
mov
jl
loopne
xor
xor
int
xorl
andb
dec
xchg
aaa
insb
adc
dec
scas
xor
mov
sub
pop
xor
jbe
ret
rcr
jb
std
cmc
sub
cmpsl
push
insl
and
jbe
jb
sub
icebp
xchg
repz
mov
mov
iret
ljmp
add
fdivr
add
dec
add
inc
and
jecxz
jnp
test
into
push
nop
push
je
addl
hlt
pop
sbb
loope
nop
inc
dec
mov
iret
cli
sbb
pusha
mov
jbe
xchg
push
outsb
cmp
mov
test
push
mov
xchg
and
int
add
push
sbb
rcrl
and
adc
mov
inc
lahf
shr
aaa
lahf
roll
jmp
lds
je
mov
loope
fs
mov
loope
out
es
xor
and
cmc
xor
dec
and
pop
and
cwtl
sub
pop
pop
inc
fwait
xor
inc
into
adc
sbb
lock
idiv
jge
shlb
cmp
mov
push
push
in
cmp
addr16
int3
mov
jle
pop
jge
inc
ret
imul
lcall
jne,pn
inc
inc
push
je
xchg
stc
mov
dec
cs
xchg
cltd
mov
mov
pop
inc
nop
dec
or
or
decl
xor
lretw
sub
sub
jp
mov
fsub
out
stos
push
inc
lcall
dec
xchg
dec
pusha
or
das
mov
xorl
push
aas
adc
das
pop
stos
pop
or
ljmp
mov
mov
cmpsl
sbb
xchg
xchg
sub
test
jmp
int3
popa
cli
clc
imul
cld
clc
fscale
cmp
xor
out
test
add
push
add
cmp
add
and
jne
jle
popa
cmpsl
adc
lfs
xlat
mov
enter
mov
mov
mov
je
pop
xor
test
scas
sbb
test
int3
xlat
test
push
in
shl
decb
out
mov
jecxz
dec
loop
fs
adc
pop
aad
jb
fldenv
aas
jmp
inc
jne
ret
loopnew
add
int3
in
int
xchg
mov
jne
push
add
sbb
and
dec
sbb
iret
cmp
sti
outsb
adc
shlb
mov
add
arpl
and
add
or
adc
dec
add
es
push
fstl
imul
inc
push
int3
jle
fwait
lahf
adc
aas
dec
push
scas
std
push
movsl
sbb
ret
lcall
xchg
ss
xchg
cltd
adc
ficoml
cmp
sbb
pop
fxch
test
mov
mov
mov
or
sahf
out
inc
cmp
sbb
insb
icebp
iret
mov
and
fsubs
or
dec
jmp
frstor
lods
push
xor
cmp
aas
add
jp
fs
ret
xor
int3
xchg
push
sub
push
push
jmp
fwait
and
sbb
unpckhps
sbb
incl
dec
mov
data16
cmp
lea
cmpl
int3
cmp
out
or
addr16
xor
stc
out
ja
bound
loope
jp
mov
ror
pop
das
dec
adc
dec
insb
outsl
jne
or
sbb
xchg
mov
xchg
mov
fs
popa
cmpb
ret
cmpsl
or
dec
sub
insb
out
cmp
ret
stos
xor
lret
fstl
push
push
stos
cmpsb
inc
push
aam
inc
jnp
mov
les
inc
add
adc
fbld
adc
scas
lods
jge
cmpsb
mov
pop
cmp
out
xlat
add
push
rclb
jbe
inc
xchg
out
es
imul
test
jns
loope
add
pop
insb
cmp
into
lcall
imul
movsb
out
nop
mov
pop
mov
mov
enter
mov
testl
int3
out
lock
pusha
and
adc
or
in
in
cmp
gs
or
leave
xchg
cmp
pushf
vpsubsw
arpl
cmp
push
outsb
pop
insb
dec
test
cmp
sub
mov
push
push
fbld
std
xor
ds
mov
push
daa
inc
adc
mov
fistl
jmp
and
and
inc
rclb
xor
das
pop
mov
cmp
dec
mov
imul
cld
data16
sub
mov
xchg
mov
lretw
int
pop
mov
imul
imul
xchg
jb
cmp
mov
add
cmpsb
mov
sahf
mov
sbb
cmp
stos
leave
sarl
mov
out
sbb
pop
es
sub
sti
sbbl
or
pop
loop
shr
and
lock
cmpsl
imulb
cmpsl
push
ss
dec
sbb
and
inc
test
out
sbb
jmp
insl
mov
push
mov
pop
add
jbe
add
fimull
imul
lcall
into
fnstsw
sbb
pop
dec
ds
adc
xchg
outsl
testl
adc
mov
scas
in
or
xchg
lret
lret
mov
andb
jno
and
mov
nop
outsl
and
shll
inc
dec
cmp
loop
cmp
mov
mov
xor
mov
aas
jmp
addr16
xchg
push
and
sbb
addr16
sbb
les
adc
push
lds
pop
in
xor
pop
push
stc
cmc
adc
add
popa
xchg
jbe
and
sub
lea
pop
nop
loop
sub
xchg
outsb
sub
mov
pop
jae
add
adc
cwtl
jp
push
repnz
and
nop
arpl
sarb
out
dec
xchg
mov
movsl
jno
enter
into
pop
mov
imul
pop
xor
and
mov
push
dec
fbld
jg
orb
popf
sub
and
stos
lcall
mov
cwtl
or
loopne
hlt
fmul
dec
sbb
jns
jb
jp
iret
loope
push
mov
lcall
pop
lods
mov
or
movsb
stc
jo
rcrb
adc
pop
pop
sbb
sbb
fldz
lods
shll
xchg
in
and
jb
loope
and
cmc
mov
dec
mov
sub
scas
mov
adc
push
inc
lcall
jg
rorl
jbe
subl
shl
mov
pop
push
sbb
into
sub
mov
push
jge
ficompl
daa
jae
xchg
jle
idivb
inc
mov
sub
xchg
inc
adc
xor
cmp
gs
hlt
pop
push
and
mov
cmc
stos
xlat
in
arpl
or
adc
scas
lret
aad
ja
fdivs
push
shlb
lret
xor
jmp
push
clc
bound
jno
add
xor
pop
cmp
push
cmp
ret
push
cmc
pushf
or
das
gs
test
outsb
dec
stos
push
dec
xlat
cmp
fdiv
js
fiaddl
out
xchg
pop
xor
adc
xor
push
stos
and
pushf
mov
mov
mov
jbe
adc
imul
push
fdivrl
pusha
dec
push
pusha
dec
idiv
mov
and
xrelease
jmp
or
in
jle
xchg
rcrl
pop
test
mov
into
aaa
and
in
adc
cmpsb
add
inc
xor
mov
cmp
call
ljmp
in
arpl
int
jb
sbb
scas
cmp
and
xchg
arpl
stc
imul
test
jl
lahf
mov
mov
jle
mov
xchg
imul
xchg
fisubl
pop
test
mov
adc
xor
es
loopne
add
jae
or
fisubl
xchg
mov
inc
sbb
mul
xor
cmp
mov
fsubs
cmc
lret
and
scas
mov
outsl
and
in
loope
pop
jnp
cmpsl
into
es
outsb
jae
in
movsl
outsb
daa
aam
push
leave
lea
addr16
shl
gs
mov
addr16
push
pop
xor
cmp
lods
neg
xchg
hlt
inc
iret
or
jp
and
jne
jbe
inc
subb
cmpsl
pop
sub
add
push
mov
into
add
rcr
adc
mov
fiaddl
push
cmp
fcomip
rclw
into
out
adc
push
pop
mov
inc
faddp
ret
aam
dec
outsb
outsb
xlat
stos
mov
test
outsl
imul
xchg
mov
push
test
dec
jnp
lock
outsb
pop
jmp
mov
or
fstl
sbb
pop
pop
add
xchg
jge
sti
out
add
out
jb
js
jne
or
mov
rol
rorl
imul
dec
push
in
adcb
dec
or
lds
or
mov
xchg
jmp
cmp
dec
xlat
int
sub
mov
cltd
jecxz
mov
aam
add
leave
lcall
jno
push
imulb
xchg
jns
inc
sub
shrb
sub
js
sub
repnz
and
cltd
add
repz
xor
xor
sub
loop
insl
sub
sbb
or
sbb
shl
inc
xor
mov
fimull
inc
xor
and
int
mov
mov
movq
ret
jo
add
xor
add
mov
insb
mov
xor
add
test
fwait
sbb
das
out
ds
stc
pop
out
mov
push
inc
inc
hlt
js
testb
ss
ja
adc
outsl
pop
pop
fbstp
add
mov
imul
adc
push
push
into
mov
xor
mov
jle
rcr
rolb
movsb
push
push
dec
addr16
rep
cmp
dec
shrb
mov
jns
cld
push
sbbb
sub
add
adcl
pop
xchg
mov
pop
jmp
adc
xchg
testb
mov
insl
enter
mov
outsl
outsb
es
imul
cmpb
fcmovnbe
push
mov
stos
pop
mov
xchg
push
out
loop
mov
pop
cmc
mulb
or
push
lret
popa
jnp
inc
xor
dec
xchg
mov
mov
push
cmp
lret
mul
mov
xlat
js
aas
outsl
add
stc
cli
mov
jl
js
jo
xor
push
cmp
into
jle
loope
fcmovnb
cmp
push
js
cltd
pop
cmp
push
push
cmpsb
in
jmp
insl
push
adc
mov
std
jl
shr
push
adc
xchg
sbb
int3
mov
out
xchg
nop
xchg
pop
pop
setbe
jnp
pop
push
ljmp
sbb
lret
inc
js
push
pop
inc
int3
push
xchg
shlb
andb
mov
sub
push
or
daa
jnp
xchg
lock
pop
jle
xchg
inc
imul
xor
ret
jne
and
xor
jecxz
or
pop
push
add
xchg
lods
xchg
cmp
add
jno
into
sub
inc
dec
xor
lret
or
loop
pop
sbb
sub
xlat
mov
push
inc
dec
inc
rorb
mov
loopne
jns
mov
jle
dec
sbb
loop
js
dec
jge
inc
call
dec
push
pop
insl
popa
popa
cwtl
and
out
inc
lea
je
scas
lret
shrb
lret
mov
sbb
pop
hlt
loope
or
ret
mov
lcall
xor
mov
mov
push
lods
pop
and
adc
mov
idivl
lcall
sbb
int
imul
call
jecxz
jmp
js
vmovupd
xchg
ds
and
pop
jmp
or
dec
les
mov
add
push
addr16
mov
mov
notl
jmp
sub
fnsave
icebp
mov
test
insl
daa
test
push
les
pusha
jno
rcr
pop
insb
xchg
pusha
cmp
mov
leave
adc
pop
clc
add
mov
xor
xor
out
out
cwtl
lock
in
mov
push
xor
mov
add
das
add
sbb
aaa
and
aaa
in
xchg
jg
cwtl
mov
arpl
mov
in
inc
xchg
fwait
testb
and
add
or
fistl
ret
xor
jmp
fisttpl
inc
enter
jge
fisttpl
lods
jmp
leave
negl
pushf
fmull
icebp
xchg
mov
stos
sbb
sbb
xchg
sub
pop
cmp
xchg
pop
movsb
pop
pop
dec
xlat
imul
cltd
adc
adcl
xchg
mov
ffree
cmp
mov
inc
fdivr
or
mov
dec
divb
mov
scas
aam
jno
sbb
cmp
cmp
cltd
andb
mov
fistps
cwtl
pop
fmul
icebp
repz
mov
insl
div
jbe
push
jge
add
sub
pop
and
jne
xchg
lret
jle
cmp
jae
mov
rcll
iret
or
ror
in
insl
xor
adc
push
lcall
aam
mov
fsubl
mov
xchg
mov
inc
sub
aas
loopne
mov
in
xor
adcl
jns
cmp
dec
pop
lea
push
roll
xor
push
movsb
test
pop
mov
aaa
cmp
sahf
repnz
add
push
lcall
shrl
inc
and
cmpsb
jb
fdivs
jmp
add
fnstcw
adc
add
rclb
ja
sub
inc
pop
dec
scas
sti
add
mov
fbstp
push
or
or
dec
jge
mov
and
loopne
sahf
inc
sub
and
stos
push
xor
adc
add
dec
arpl
mov
mov
dec
push
movsl
mov
push
lret
mov
push
push
js
js
daa
xchg
and
jle
mov
xchg
or
orb
in
jns
or
in
adc
pop
out
inc
test
inc
lahf
jle
sbb
xchg
cli
flds
enter
leave
pushf
imul
rclb
arpl
push
in
xor
cmp
lds
ret
xor
mov
or
inc
loopne
xchg
mov
les
out
mov
stc
add
push
cwtl
jle
dec
xlat
and
adc
bound
mov
pop
and
jns
xchg
push
dec
les
dec
adc
stc
push
add
mov
adc
push
ja
arpl
dec
push
adc
loope
hlt
pop
rcll
jo
sbb
fdiv
xchg
fisubrs
jle
pushf
popf
push
sahf
pop
mov
and
mov
nop
adc
jnp
mov
cwtl
push
sub
push
int
test
jo
xchg
sbbb
in
sub
out
imul
sbb
aas
out
mov
add
mov
ljmp
es
js
or
or
lret
repnz
xchg
mov
push
pop
mov
cmp
push
mov
jle
sub
add
not
sarl
push
lock
xchg
dec
push
sti
sub
mov
jno
xlat
mov
inc
sub
cmp
jp
fbld
repz
lcall
xchg
mov
ror
dec
and
adc
mov
into
pusha
test
out
dec
roll
lahf
push
fwait
popa
aas
in
mov
adc
pop
mov
dec
dec
fcmovbe
inc
xor
sbb
mov
sbb
icebp
mov
cmp
pop
test
add
lods
mov
out
adc
xchg
xor
jns
dec
mov
and
pop
pushf
aaa
fisttpll
sbb
sbb
fs
dec
pusha
popf
test
pop
push
cmp
mull
sbb
sbb
out
int3
cmp
and
ffreep
inc
mov
sbb
call
popa
mov
sub
dec
int3
aas
lods
aam
xchg
lods
fnsave
inc
pop
cmpsb
pushf
stos
imul
clc
sarl
icebp
cmp
xchg
jp
push
mov
aad
xor
outsb
mov
sbb
sub
mov
aad
fdivr
dec
lret
arpl
pop
jl
mov
fwait
mov
mov
mov
sbb
fistpll
push
jbe
mov
fisubrl
add
push
dec
dec
out
jle
jmp
ret
add
mov
xchg
test
push
test
imul
jge
push
ret
jp
enter
icebp
or
sbb
jb
push
pop
les
and
cmp
rclb
jne
shlb
cmp
imul
stc
hlt
or
jb
cmpsl
jl
repz
outsl
or
dec
adc
push
mov
and
mov
ljmp
mov
fwait
inc
pushf
data16
add
test
push
push
and
sub
test
shlb
sub
mov
fldt
roll
mov
mov
rol
movsl
dec
in
xchg
and
fucomp
ja
aas
lret
shrb
bound
sub
mov
and
inc
into
jbe
jo
in
jl
push
bound
cld
int
loopne
insb
lret
mov
lahf
test
sarl
jle
mov
imul
dec
xchg
pop
pop
add
test
jp
sbb
repz
pop
add
loop
cli
mov
outsl
push
pusha
xor
out
in
sbb
pop
mov
inc
mov
xor
or
test
mov
push
push
jb
bound
adc
mov
xor
lods
inc
push
rcll
fs
cli
into
lds
jl
jo
imul
bound
jge
pop
hlt
dec
xchg
xchg
sbb
loope
xchg
inc
add
mov
pusha
cmpsl
imul
sarl
sti
outsl
daa
mov
std
sbb
adc
out
cmp
xor
xchg
ret
pop
inc
cmc
iret
fistpll
xor
and
xor
test
dec
into
cld
xor
in
dec
cltd
in
and
and
aam
stc
fs
iret
mov
pop
pop
std
enter
xchg
loop
and
jmp
xor
dec
leave
mov
jmp
popf
ret
sti
dec
nop
mov
rcll
add
mov
repz
mov
and
call
mov
jne
mov
xchg
andl
insl
insl
movsl
icebp
pop
fs
or
ja
test
lods
movsl
sub
scas
cmp
sbbl
push
mov
dec
cld
nop
or
ror
push
push
es
pop
lea
icebp
lea
push
fwait
pop
mull
xchg
adc
pop
jne
xor
je
jp
or
cld
dec
arpl
push
push
inc
push
inc
xor
jp
jb
push
cmp
mov
lea
int
sbb
cmp
stos
push
pop
aas
pop
dec
rcll
or
sbb
dec
int3
push
cltd
into
xor
push
and
cltd
jg
jl
inc
repz
cltd
loop
inc
jecxz
add
mov
das
mov
repz
push
cmp
pop
dec
and
scas
push
mov
adc
cs
ret
push
push
cmpsl
and
fcoms
pop
jge
stc
movsb
cmp
and
or
pop
dec
minps
xchg
push
test
mov
cmp
mov
xlat
xchg
inc
les
sbb
jno
dec
inc
loopne
in
mov
movsl
in
ljmp
popf
call
sbb
lea
ja
mov
cmp
dec
aam
fcmovnu
insl
adc
jne
clc
lods
out
stc
dec
jne
xchg
scas
add
xchg
cmp
xor
jbe
lds
sbb
cmp
ficomps
push
insb
dec
scas
rorl
vldmxcsr
pop
xchg
stos
lods
pop
outsl
cmpsb
mov
lret
jo
mov
scas
or
xchg
es
fnop
lods
cmp
pop
cmp
sbb
add
loope
rcrb
push
lcall
add
xor
fldcw
mov
jmp
adc
pop
ljmp
mov
jecxz
test
mov
test
outsl
mov
cmp
pop
pop
push
pop
mov
cli
movsb
dec
ja
cmpsb
adc
mov
in
fs
and
and
es
xor
insb
cmc
push
ss
or
scas
adc
jb
mov
cmp
cmp
cwtl
movsb
mov
push
adc
mov
es
mov
stc
shr
cmp
insl
sbb
xor
je
in
hlt
sub
aam
inc
sbbb
dec
cmp
add
andb
mov
or
dec
and
dec
out
arpl
jnp,pn
data16
mov
xor
inc
sbb
movsb
push
inc
xchg
fdivs
fisttps
sti
jle
rcll
dec
rol
xor
dec
fisubrl
gs
inc
addl
stc
or
cmp
jne
add
or
scas
xchg
push
popf
sbb
pop
jl
fdivrl
jle
sbb
movb
mov
mov
sbb
push
jb
ljmp
insl
pop
and
or
call
or
mov
add
aaa
pop
jmp
cmp
and
dec
dec
adc
movsb
in
inc
fmuls
ljmp
pop
int
sub
les
xor
mov
sar
mov
lds
pop
mov
call
cmp
and
push
mov
insb
xchg
insl
xor
sahf
mov
gs
mov
filds
mov
das
pop
dec
jo,pn
cmp
mov
mov
iret
sub
jmp
in
and
xchg
aaa
test
pop
xor
outsl
xor
dec
mov
adc
dec
xor
iret
mov
daa
inc
cltd
stos
out
stc
enter
pop
adc
leave
add
sub
in
repz
lea
or
fs
sub
inc
add
lret
push
gs
je
sarl
inc
fbstp
test
xor
orb
stos
enter
mov
mov
neg
ss
fwait
xchg
push
adc
jae
add
cltd
adcl
gs
or
xchg
xor
mov
mov
stos
jns
rcrl
mov
pop
js
sti
inc
arpl
cmpsl
inc
loope
cmp
adc
lods
adc
lods
scas
and
xor
fists
xlat
lock
lret
je
xorl
cmpsl
pop
das
mov
pop
fs
cmp
sbb
stos
das
and
push
out
rcll
adc
cmp
fcmovu
xor
xchg
and
push
push
popf
cmpsl
or
faddl
pusha
push
int
flds
in
xor
adc
rorb
mov
imul
sar
pop
push
ds
aad
lahf
xchg
sub
dec
add
inc
and
pop
pop
add
call
and
aam
out
mov
adc
pop
add
cmp
xorb
xchg
inc
xchg
in
cld
imul
scas
stc
jge
nop
unpcklps
jno
inc
xchg
mov
popa
mov
xchg
je
pop
sub
loopne
pop
sbbb
out
push
rcll
cmp
test
mov
arpl
or
jae
and
gs
adc
aaa
fsub
adc
mov
mov
pop
pop
xchg
aaa
js
mov
stos
pop
movl
test
out
adc
test
dec
testl
loope
or
xchg
or
and
insb
mov
jno
pop
pop
fidivs
push
cld
or
push
jp
aas
dec
inc
mov
aad
jle
or
mov
sbb
mov
sub
iret
lea
int
cmp
push
and
test
mov
dec
jae
fs
xchg
xor
inc
ljmp
cmp
shl
fwait
push
add
mov
push
mov
in
push
cs
sub
jl
insl
xchg
push
add
jb
aaa
imul
cs
leave
in
sti
mov
outsb
enter
cwtl
ficomps
sbb
mov
shrb
sbb
lret
mov
pusha
dec
sbb
push
mov
adc
insl
push
xorb
pop
cli
pop
ret
pusha
stc
mov
xchg
pop
inc
int
cmp
jg
shrl
add
andl
sets
dec
fisubs
add
gs
mov
inc
jnp
rcrl
movsl
lock
inc
and
jecxz
mov
adc
sbb
add
mov
mov
vpcomuq
dec
or
rol
outsb
dec
xchg
mov
or
out
sbb
loopne
ljmp
add
sbb
outsb
push
add
popa
popa
mov
mov
sub
in
aas
mov
pop
mov
sub
pop
out
push
insb
xor
jbe
pop
or
inc
mov
jmp
xor
fistps
movntps
jnp
pusha
mov
inc
out
shl
push
pop
xor
jl
dec
iret
sbb
lods
dec
iret
xor
lods
movsb
aam
and
mov
scas
jmp
push
jge
sub
mov
mov
cmp
movsb
cmp
sbbb
hlt
mov
cmp
test
rclb
inc
decb
cs
into
mov
fcomps
stos
clc
and
inc
mov
push
in
push
lock
repz
sbb
fwait
jae
ret
loop
jnp
adc
push
push
sub
xchg
mov
adc
ja
pushl
jge
xchg
inc
lret
mov
jbe
cmp
xor
dec
adcl
jp
lret
push
insl
pop
std
aaa
pop
mov
iret
cmp
aaa
int3
mov
cmc
xlat
sbb
add
movsb
cwtl
arpl
inc
js
pushf
or
sbb
jb
cmc
cld
sti
lods
mov
fisubrl
es
mov
mov
fsubrl
or
sub
sbb
int
imul
fs
mov
in
cwtl
aam
jno
jnp
jno
leave
cmp
test
aam
les
mov
adc
shll
jb
cltd
xchg
or
fstpl
inc
adc
inc
scas
xor
xor
fadds
loopne
insb
dec
scas
mov
push
add
push
lret
sbb
fmuls
scas
test
test
mov
ret
mov
mov
fnsave
fwait
add
mov
mov
and
pop
cld
xor
dec
fmuls
xchg
pop
adc
enter
pop
inc
aaa
lea
push
cmp
lods
jg
xor
data16
and
push
xlat
stos
mov
mov
dec
aas
fisttpll
xor
ret
lahf
cmp
pop
jne
mov
enter
jecxz
inc
fbld
rolb
xchg
pop
sub
jge
mov
and
test
popa
dec
ja
in
jge
mov
jae
mov
inc
aad
dec
rcrb
sbb
sub
sub
ds
pusha
jae
stc
pop
push
sarl
inc
test
push
push
cli
ret
fs
dec
inc
daa
pushf
jne
test
jecxz,pn
loopew
push
movsl
aam
mov
mov
out
lods
imul
push
ss
loopne
xlat
ljmp
lods
mov
inc
sub
rcrb
xor
sub
dec
cmpsb
loopne
push
or
mov
out
mov
nop
or
pop
ljmp
jae
fcoms
movsl
daa
icebp
mov
lods
es
dec
inc
ficoml
dec
push
std
or
ror
lods
je
add
aad
sub
stc
ljmp
or
pop
movsl
sbb
cmp
test
jge
das
iret
stos
xchg
adc
inc
mov
inc
out
loopne
mov
insb
stc
ss
pop
popa
and
andb
pop
add
ret
fs
sub
push
adc
mov
sub
popf
fidivrs
jle
lea
push
pop
dec
mov
rolb
fsubs
push
rorb
movsl
push
push
daa
xchg
add
jmp
in
aaa
sbb
sbb
pop
pusha
xchg
pop
int3
iret
add
inc
adc
pusha
mov
fwait
out
test
in
pop
incl
xorb
pop
xchg
inc
cmpsl
xor
add
xlat
fs
jge
push
cmp
mov
cltd
sub
scas
inc
or
jbe
sub
add
test
or
xchg
jb
jecxz
or
in
subl
ljmp
out
mov
mov
mull
jp
jecxz
mov
cwtl
dec
xor
pop
xchg
mov
jp
les
jns
stc
arpl
add
in
push
das
xor
lods
jmp
cmp
add
sub
fldcw
rcl
scas
adc
xor
pusha
add
movsb
lar
mov
dec
add
in
pop
inc
sub
test
and
jecxz
cs
inc
aas
mov
push
out
js
or
movsl
test
test
mov
imul
add
orb
ss
lock
xchg
jo
les
xchg
sbb
fs
add
loope
aaa
mov
push
mov
js
fistps
and
pop
xchg
xor
popf
sub
mov
mov
nop
or
xor
push
adc
sbb
cmpsb
or
aas
ljmp
xor
jmp
bound
mov
cmp
mov
aaa
xor
pop
xchg
xchg
xchg
mov
into
lds
jmp
cltd
adc
pop
das
in
sbb
cmpb
jnp
mov
leave
inc
mov
and
inc
jecxz
jbe
dec
clc
into
mov
fistpll
sahf
cli
sarl
insl
pushf
imul
fdivr
out
lret
mov
rcll
or
out
and
adc
mov
mov
addl
cmp
inc
ds
push
cs
cltd
jg
ss
sub
mov
mov
in
mov
fmul
adc
cwtl
rcll
add
xor
mov
repz
in
add
cwtl
imul
cmp
inc
mov
mov
mov
outsb
inc
xlat
in
stos
dec
les
sbb
mov
cltd
xlat
sub
jae
stos
adc
add
sub
add
div
xor
xlat
fwait
push
out
sbb
mov
mov
mov
mov
or
sbb
sub
jle
push
idivb
jo
lock
jl
je
xchg
cmp
popa
std
inc
pop
aad
dec
call
add
mov
mulb
pop
sbb
aad
aam
sub
inc
jmp
inc
and
test
adc
lcall
dec
jae
in
insl
push
mov
cmp
dec
cmp
incb
out
push
lcall
jne
pop
cmpsl
sub
or
pop
pop
out
daa
adc
mov
mov
fld
push
push
mov
in
div
iret
pusha
mov
test
or
lret
jecxz
pop
mov
enter
or
mull
into
insl
push
movaps
testb
std
stos
mov
xor
fwait
inc
mov
pop
xchg
inc
or
pop
sub
das
mov
cmp
pusha
ljmp
aad
dec
movl
pop
in
add
xor
aam
sub
mov
sarl
or
and
lods
lcall
add
jno
sbb
loope
lcall
jp
insl
mov
addl
repnz
pop
mov
adc
das
dec
in
js
jmp
xchg
cli
dec
add
movsl
lcall
adc
add
add
clc
push
in
xchg
inc
fstpt
scas
popf
js
or
loop
sub
sbb
or
pushl
xor
add
shll
add
stos
rcll
cld
orb
sub
xor
lea
es
xor
fistl
je
mov
inc
xor
xchg
mov
cmp
dec
mov
imul
cmp
sub
out
movsb
js
hlt
aaa
rclb
adc
cmp
xchg
jae
pusha
data16
arpl
jmp
or
push
sbbb
aam
movsl
push
jnp
push
ffree
push
xchg
js
arpl
lahf
jb
ljmp
int3
inc
sarl
dec
inc
jnp
or
push
push
popa
enter
push
xchg
aad
add
jb
stc
xor
cmp
lea
fisubrs
xor
mov
adc
mov
shlb
dec
call
js
fwait
cmc
inc
test
sub
test
jecxz
iret
inc
loop
loop
lret
ss
subb
aas
add
jae
punpckhwd
sub
xchg
test
test
dec
repz
loope
fmulp
mov
add
adc
inc
or
cmp
xlat
ds
fistpll
lods
add
push
fidivrs
pushf
dec
lods
cli
jl
cmpsl
push
ss
push
dec
jae
dec
push
xchg
popa
xor
add
mov
cwtl
mov
pop
or
dec
es
cli
out
push
aam
cmp
in
push
jp
cs
mov
pop
xor
push
pop
jp
loope
data16
adc
cltd
in
push
lock
jecxz
xchg
sbb
and
jg
pop
xchg
cli
inc
stc
push
or
sub
es
mov
stc
jno
mov
dec
rorl
pop
jle
ss
jns
mov
repnz
aam
ror
push
xlat
pop
mov
icebp
pop
xchg
inc
mov
inc
add
xor
inc
out
adc
fcmovne
sub
pop
adc
pop
cmpsl
mov
mov
lock
or
lret
push
addr16
sbb
mov
mov
push
fs
push
inc
xor
ret
inc
jmp
sarb
push
inc
and
sarl
jg
sbb
dec
push
imul
repz
cwtl
ss
add
nop
mov
add
pop
pop
call
xchg
scas
cmp
test
adc
out
loopne
fcompl
out
push
sbb
enter
push
imul
inc
jne
sub
dec
jg
movsl
mov
jle
push
pop
pop
aas
bnd
pop
mov
mov
push
fstl
fisubrs
cmp
jb
xchg
mov
push
int3
jns
rcll
jae
mov
outsb
mov
jp
test
jmp
sbb
sbb
mov
ret
xchg
test
xchg
ljmp
add
or
or
addr16
xor
int
iret
sahf
loop
out
out
nop
sbb
lret
pop
dec
and
xchg
inc
aas
repnz
incb
fdivl
mov
sbb
jl
cmp
cmp
cmp
in
push
aas
push
xchg
cmp
popf
ficoml
xchg
cwtl
lcall
xor
or
jecxz
mov
leave
loopne
lret
xor
cmc
mov
inc
in
xlat
call
jg
enter
lahf
and
mov
aam
cmp
or
fisttpl
or
jnp
mov
push
insl
push
push
xchg
cmp
inc
test
add
pushf
out
int
lods
sbb
ljmp
xor
aad
in
push
cmp
dec
xchg
imul
mov
jmp
xlat
mov
sahf
sbb
ljmp
cmp
xor
out
cmpl
stos
mov
xor
popa
stos
movb
test
aaa
xor
adc
cmp
pop
shrl
push
lahf
xor
sub
aad
jp
sub
outsb
push
or
sbb
arpl
mov
xchg
mov
popa
aad
mov
adc
mov
mov
insb
pop
in
aad
mov
arpl
stos
add
lock
in
je
shll
repz
dec
insb
das
adc
bnd
add
or
push
xor
xor
filds
imul
rolb
lods
mov
inc
push
adc
mov
cld
sub
mov
pop
cmpsb
mov
mov
jl
add
push
dec
xchg
addl
pop
xchg
repz
movsb
cltd
jno
cmp
sbbl
xchg
add
leave
sub
mov
xchg
mov
sub
dec
cld
push
pop
adc
push
mov
mov
inc
mov
jg
mov
sbb
sar
sbb
js
mov
ljmp
mov
dec
int3
in
and
iret
cmpsl
popa
aas
repz
and
jo
pusha
mov
pop
xlat
xchg
in
out
push
jnp
lahf
inc
push
je
jg
mov
pop
stos
outsb
in
stc
jmp
cmp
adcl
into
mov
mov
lds
outsl
aas
aaa
adc
lods
idivb
cmp
movsl
sbb
loop
pop
bound
push
push
cmp
xchg
repnz
mov
xor
or
fcmove
mov
mov
jnp
and
mov
inc
rorl
aam
jno
mov
out
pop
jns
adc
in
dec
inc
sub
sahf
inc
mov
cmp
adc
pop
adc
mov
xchg
call
dec
jae
mov
ret
mov
insb
jl
or
movsb
popf
inc
sub
ja
pop
nop
xchg
mov
shlb
push
xor
ss
mov
sub
out
int3
fsubrs
push
or
fnstcw
cmp
inc
push
pop
mov
mov
dec
lock
mov
imul
fiaddl
test
ror
xchg
ljmp
inc
mov
rol
das
ret
sub
nop
sahf
clc
fsubrs
addr16
add
mov
rep
mov
mov
call
fnstenv
sbb
push
stos
and
pop
clc
loope
shll
cmp
jg
mov
shll
fwait
mov
pop
shlb
push
cli
sbb
subb
dec
push
sbb
xor
xor
repnz
xchg
add
mov
orb
xchg
ret
mov
push
cmpsb
jmp
ja
cli
repnz
push
out
xchg
push
sahf
or
push
sbbl
icebp
lret
repnz
in
pop
cmp
addr16
mov
jns
sbb
and
out
push
test
mov
les
rorl
xchg
aas
je
adc
mov
jle
lea
es
pop
pop
test
cmp
adc
mov
cli
mov
inc
cli
dec
nop
mov
or
sti
jmp
pushl
fistl
mov
out
fcom
push
sbb
iret
jnp
dec
fidivrs
in
push
adcl
or
arpl
inc
mov
sub
shlb
sub
jmp
xchg
pop
loop
imul
aam
sbb
sub
and
or
mov
aaa
jge
enter
popa
popl
rolb
sbb
xchg
dec
fistps
xor
clc
lret
outsb
jmp
arpl
add
dec
iret
andl
roll
mov
push
movb
mov
push
fwait
insb
loope
mov
jo
pop
mov
jmp
cmp
popa
mov
xchg
sub
cltd
sub
es
mov
cwtl
pop
xor
jbe
lea
fidivrl
mov
lretw
dec
in
mov
mov
adc
push
lret
push
mov
aam
mov
xchg
ret
ljmp
sub
ja
negb
xchg
mov
int
out
call
inc
pop
rclb
ja
aam
cmpsb
loop
fs
mov
fiadds
xchg
inc
sub
pop
mul
arpl
es
shrl
lds
lret
or
movsl
adc
mov
fcomps
xlat
sar
in
sub
inc
sbb
aam
clc
stos
in
repz
cltd
es
mov
int
mov
out
adc
fistps
mov
sbb
mov
mov
push
push
jae
outsb
cmp
popa
cmp
sahf
pusha
pop
lret
and
push
mov
jno
push
loope
jmp
mov
in
push
mov
loop
pop
aas
dec
sbb
sbb
mov
and
nop
pop
lret
out
andb
flds
inc
xor
jns
cmp
add
mov
gs
sub
or
jecxz
xorl
xlat
push
jae
dec
pop
xchg
sub
pop
inc
jl
lea
mov
mov
aad
sti
hlt
xor
loope
scas
movaps
bound
in
mov
sub
addr16
ja
lret
xor
dec
out
data16
add
repnz
shlb
and
dec
inc
cld
cmpsb
stc
sub
mov
dec
dec
jns
lock
sahf
jns
sbb
orb
sbb
mov
insb
mov
repnz
jo
das
inc
mov
rorl
mov
xor
xor
mov
adc
fcmove
pop
push
fsubs
repz
inc
xchg
shlb
fldt
es
aaa
outsb
daa
jge
pop
bound
sbb
and
sub
jbe
shll
push
mov
mov
shll
add
inc
incl
push
loopne
insl
pop
cwtl
mov
or
dec
pushf
clc
dec
sbb
rcrl
stos
iret
mov
mov
adc
shl
jmp
lret
sbb
dec
sahf
lods
mov
sbb
cwtl
mov
pop
sub
dec
std
xchg
and
js
dec
clc
rolb
inc
lods
fs
ret
mov
push
std
hlt
lret
lods
jmp
sbb
flds
faddl
jecxz
and
jmp
dec
test
xchg
xchg
rclb
pop
fs
das
cmpsb
mov
movsl
bndstx
pop
and
sub
testl
mov
or
and
mov
or
out
jo
inc
rorl
add
sub
lcall
ja
mov
jle
cwtl
xchg
pushf
xchg
mov
ret
pop
dec
and
jecxz
jp
pop
sahf
fdiv
adc
scas
push
out
mov
and
fwait
xchg
les
insl
les
inc
aaa
push
lods
lods
mov
int
jle
test
and
push
xor
push
add
push
or
int3
imul
mov
lods
xchg
js
arpl
sahf
popf
fs
shll
out
and
mov
or
data16
int3
jle
arpl
in
mov
pavgb
psrld
push
insb
xor
mov
xchg
inc
cmp
or
add
cmpsb
jmp
push
insl
js
into
push
lea
mov
test
loope
jnp
sahf
xor
dec
inc
pop
out
adc
outsl
sbb
add
lock
lods
out
stos
int
jne
popa
lds
sbb
lret
sbb
mov
shl
jecxz
scas
fcoms
push
lea
popa
or
loop
sbb
add
jmp
pop
push
add
inc
inc
test
xchg
cwtl
push
enter
cmpsl
fsubs
addr16
and
mov
stc
shl
movsl
mov
pop
add
jecxz
fstl
rorl
in
cmc
outsb
rcrl
mov
insl
sub
push
ds
adc
mov
ret
jo
bound
dec
jle
mov
shrb
pop
cmpsb
sbb
jmp
adc
pop
fsubs
inc
push
sub
pop
sbb
mov
in
jp
ljmp
popf
add
loop
mov
sub
in
imul
fs
cld
ss
jae
and
leave
enter
lods
das
rcrb
fdivrl
pop
and
jne
bound
mov
cmp
sub
cmp
test
pop
jbe
nop
dec
cmc
jp
in
mov
mov
xor
cli
in
push
mov
cmp
adcb
inc
dec
fistps
push
daa
scas
lea
sti
mov
mov
aad
mov
shll
jne
or
movsl
bound
pop
cmp
leave
xchg
dec
js
enter
shrl
cmp
scas
loopne
dec
je
icebp
push
jno
cmp
into
dec
pop
or
xor
nop
inc
jl
scas
dec
sti
dec
xchg
mov
outsl
in
pushf
roll
push
dec
lret
sub
sbb
dec
out
es
dec
ds
cwtl
xchg
cmp
iret
inc
lock
mov
adc
push
mov
dec
sbb
popa
pop
fsubs
loopne
xchg
add
cmp
mov
cmpsb
and
xor
andl
mov
mov
ret
sub
mov
call
inc
xchg
lock
mov
dec
adcb
pop
dec
mov
add
xor
push
jle
data16
sub
std
insl
pop
int
out
jo
pusha
stos
mov
mov
sub
mov
mov
add
imul
call
xchg
add
repz
xor
repnz
pop
xchg
mov
mov
add
mov
stos
fwait
mov
adc
das
das
addl
lahf
cmp
iret
data16
icebp
or
popf
jb
inc
mov
mov
inc
aam
push
jb
push
fiadds
insb
test
pop
pop
lahf
add
jae
xchg
mov
push
jae
pop
and
xlat
lcall
loop
sub
xorl
in
and
cmp
jae
fistpll
imul
jns
icebp
outsb
dec
pop
dec
sbb
enter
push
adc
lods
dec
xor
outsb
inc
adc
mov
test
test
mov
adc
xor
das
cmc
adc
xchg
mov
add
pop
aaa
jp
jg
mov
stos
adc
bound
sub
push
test
pop
lcall
sahf
in
out
pop
jo
mov
fidivl
add
ljmp
loopne
in
mov
or
dec
cwtl
divl
mov
pop
push
aad
andl
fwait
jecxz
xor
lock
push
imul
arpl
or
mov
loop,pt
dec
push
fdivrs
dec
jl
in
mov
xchg
xchg
inc
mov
inc
xchg
add
into
push
or
xchg
xchg
aam
shlb
xor
in
and
repnz
fiadds
adc
mov
sbb
test
in
and
pop
mov
pushf
mov
int
das
push
rorb
and
mov
push
jne
add
roll
cmp
or
sti
jmp
mov
leave
ljmp
dec
push
aam
pop
mov
mov
pop
es
add
rorb
jo
out
xchg
int3
mov
in
sti
jl
loop
mov
push
mov
nop
jo
test
mov
fimuls
pop
aas
cmc
sti
xchg
mov
jmp
testl
int3
cli
push
pop
ja
out
cmp
dec
xchg
mov
inc
js
push
popf
divb
jmp
pop
cmpsl
cld
int
mov
lock
add
loop
jmp
popa
adc
sub
decb
sarl
aas
jmp
rol
mov
sahf
cmp
test
enter
aas
inc
and
scas
aas
jle
mov
sub
push
jmp
daa
mov
cli
xor
sti
adc
push
pop
movsb
nop
data16
mov
imull
cltd
add
in
xorb
mov
adc
ret
push
cmp
push
xchg
mov
sbb
scas
add
adc
jb
cmp
fisttpll
mov
data16
dec
shll
lods
imul
or
or
xchg
mov
insb
pop
cmpsl
mov
icebp
lret
shrb
jmp
cmp
or
xor
repz
xchg
cld
shrl
in
mov
shll
push
sbb
pop
add
xchg
nop
push
cmp
jae
int3
sub
mov
or
mov
mov
pop
insb
jnp
pop
test
mov
out
or
shll
cmp
cmp
test
pop
mov
add
loopne
clc
push
push
xor
and
aaa
ret
mov
into
shlb
sub
and
or
popa
cwtl
imul
clc
leave
test
aaa
lcall
inc
fimuls
mov
movsl
xchg
gs
negb
or
mov
cmp
dec
setp
lcall
adc
popf
pusha
sub
and
cmc
in
mov
jle
sbb
call
fistps
rorl
cmpsb
pop
cmpsl
data16
push
mov
and
and
aam
sbb
xchg
test
fsts
or
fwait
outsl
and
fwait
iret
stc
push
stc
loopne
ja
in
lret
and
mov
mov
xor
or
push
push
pop
xchg
sahf
ss
flds
rcrb
push
xchg
push
addb
jae
cmp
dec
repnz
insb
add
out
ss
jae
fldcw
loop
inc
xchg
aaa
add
fsts
jl
jl
mov
jecxz
or
mov
jp
scas
fs
adc
mov
in
pop
xchg
jge
jo
pop
adc
mov
add
fs
fstpt
sbbl
repnz
icebp
cmc
stos
cmp
mov
adc
xchg
inc
xor
and
std
rcrl
adc
sbbb
daa
jo
or
xor
sbb
cmpsb
loopne
sarl
mov
gs
adc
dec
push
into
cld
pop
cmpsl
add
or
or
pop
aam
mov
out
lret
or
in
mov
sbb
mov
dec
leave
scas
dec
jnp
jo
pop
pop
in
sbb
push
or
xor
ficompl
insb
dec
lea
sti
cmp
dec
push
jne
ret
cs
nop
sbb
imul
xchg
push
shr
stos
imul
xchg
mov
pop
push
xchg
pop
pusha
ds
arpl
std
add
test
add
mov
test
jp
test
mov
mov
cmp
fildl
sbb
lods
mov
imul
je
cmp
xsha1
cmpsb
or
ficoms
adc
data16
xor
rcll
insl
out
or
mov
and
ja
xchg
jmp
adc
shrb
lds
push
inc
das
sbbl
add
jne
mov
xor
pavgw
aas
jge
push
push
pop
sbb
cwtl
and
leave
adc
jp
enter
iret
mov
cltd
push
xor
addr16
fildl
xchg
add
push
sub
mov
dec
inc
lahf
bound
mov
add
inc
pop
xor
mov
cwtl
cmp
and
lods
fsubrs
lods
cmp
fsubrl
push
jb
test
add
in
testl
xchg
cs
pmulhw
add
lcall
dec
jbe
fisttps
cmp
mov
jnp
and
xchg
out
lock
xor
cmp
jne
lods
test
jne
jns
and
bound
lods
dec
xchg
sbb
jne
add
inc
and
add
sub
push
push
mov
push
lea
inc
and
pusha
cs
dec
mov
push
pop
and
test
cmpsb
mov
addb
repnz
lahf
mov
jecxz
xlat
adc
sbb
jecxz
rolb
pop
xor
repnz
lcall
dec
js
and
push
ljmp
in
imul
xor
push
sub
add
ret
jo
mov
adc
mov
jns
cmp
das
xchg
fiaddl
int3
ret
push
mov
mov
fdivl
inc
repnz
cmpsb
insl
fisttpll
mov
ds
test
into
mov
jle
in
cs
cmp
popf
in
popa
leave
jmp
sbb
push
je
jae
xor
dec
retw
xor
faddl
fisttps
jo
jo
xchg
std
cmp
js
adc
int3
pop
enter
movsb
rorb
add
xor
sbb
jns
int
xor
pop
push
dec
push
lea
mov
sub
outsb
xchg
pusha
dec
xchg
xchg
mov
jmp
adc
add
inc
push
idivb
push
or
fsubrl
mov
sbb
scas
mov
or
cmpsl
cmc
lods
fwait
adc
into
mov
mov
pop
cld
jnp
or
sub
push
nopl
jmp
xor
jno
jae
mov
xchg
das
pop
xlat
es
insb
push
insl
out
sub
lods
imul
ret
push
mov
lret
out
push
and
mov
inc
jo
xorb
scas
xor
pusha
lret
std
repnz
loope
notl
cltd
fucom
sbb
jecxz
xor
and
jmp
scas
scas
xor
pop
leave
cmp
mov
jb
gs
pop
mov
pop
jno
lcall
les
pop
fimull
and
mov
mulb
jne
fdivl
adcb
jae
pop
or
shrl
and
inc
or
jmp
inc
ret
incb
int
loopne
pop
shrb
sub
dec
cli
xor
pop
icebp
cmpl
cmp
sub
in
sti
push
adc
lret
jge
mov
xchg
jmp
mov
js
movsl
out
push
pop
jnp
jbe
pushf
jns
lods
xchg
outsl
outsl
cmpsl
cld
aad
outsb
bound
push
popf
xchg
cli
stos
ljmp
sbb
outsl
cmp
pop
jo
xchg
int3
fs
sbb
rcrl
adc
and
lods
mov
mov
cmp
fs
ja
sub
cmp
in
adcl
test
xor
gs
icebp
fnstsw
or
lea
push
nop
inc
and
cwtl
filds
sbb
fldcw
sbb
jmp
shlb
popf
fcmovnu
test
scas
out
pop
in
push
lods
and
adc
leave
pop
rclb
xchg
fbld
inc
mov
adc
cmpsl
pop
pop
mov
fldl
js
cmpsb
loope
fildl
bound
adc
cmp
shrb
add
jne
mov
out
ret
xlat
mov
dec
inc
fucomip
clc
jne
test
push
dec
or
pop
test
lret
clc
popf
fadds
sbb
in
xlat
jp
jb
xchg
loopne
jmp
mov
cmc
cwtl
sub
pop
mov
jge
dec
movsl
mul
adc
push
cmp
les
fbld
cmp
sbb
push
jnp
and
adc
loopne
std
aad
scas
andb
imulb
mov
or
lods
inc
aam
adc
jns
addr16
in
gs
mov
lods
pop
rcl
pop
mov
sbb
push
lods
insb
add
seta
xchg
jo
mov
adc
pop
or
cmpb
data16
cmp
add
sbb
xorl
mov
ret
or
mov
enter
cmp
push
imul
addl
mov
cltd
mov
imul
cwtl
or
icebp
mov
pop
xchg
push
and
inc
jl
loope
rorl
lds
in
mov
xchg
xchg
pushf
adc
popfw
add
and
pop
imul
mov
mov
fucomip
movsb
mov
stos
lods
adc
add
and
enter
mov
orb
add
xor
add
jno
sub
dec
push
lahf
sar
inc
sub
cs
mov
adc
into
mov
clc
xchg
in
andl
fsts
pop
xchg
sbb
insl
cmp
xlat
mov
daa
add
and
sub
push
add
repnz
outsb
rcr
dec
loope
in
in
in
xor
mov
lock
push
test
push
fldenv
je
and
sub
arpl
or
cmp
mov
mov
jo
loopne
xlat
leave
orl
lcall
popa
jge
sbb
jmp
test
cmp
push
jecxz
aas
sbb
mov
int3
pushf
mov
sbb
push
movsl
mov
jb
xor
lods
in
lcall
sub
mov
inc
dec
xor
addr16
cmp
lock
in
ds
or
sti
cmp
mov
push
rcr
mov
shl
test
dec
loope
xchg
sbb
sahf
mov
hlt
dec
pusha
cli
movsb
cmp
ja
cmp
cs
jp
jge
mov
adc
inc
add
vrcpss
mov
insb
das
in
fadd
cmp
jo
sub
or
daa
mov
push
dec
and
add
or
sub
pop
lods
test
mov
jmp
mov
mov
outsb
sub
js
sbb
arpl
in
jne
dec
je
test
mov
bound
jp
clc
mov
insb
movsl
outsl
add
sub
loope
flds
sahf
sub
pusha
pop
imul
inc
icebp
mov
xchg
or
rclb
xstore-rng
cmpsl
sbbb
out
sti
imul
hlt
std
les
mov
out
xchg
shll
shrl
fimull
dec
sbb
les
ds
incb
xlat
lcall
popa
int3
cli
dec
and
xchg
ja
arpl
call
dec
fsubrs
cltd
cs
pop
and
sarl
pop
push
sub
addr16
mov
and
push
add
jae
cmp
je
inc
adc
add
push
jp
cld
mov
shll
bound
scas
clc
push
fidivrl
cmp
xchg
sub
stc
into
loope
sbb
mov
push
add
int
cmpsb
sub
and
push
mov
xor
ret
mov
sti
xchg
adc
cltd
jnp
sbb
xor
mov
inc
stc
js
stc
movsb
inc
cwtl
push
push
cmpsl
popa
jmp
cmc
sbb
stc
jb
mov
pushf
pop
sub
fimuls
jne
jns
dec
push
add
fs
fdivs
call
mov
push
in
cmpl
lock
xchg
nop
es
and
nop
and
jge
adc
dec
sub
adc
mov
mov
push
and
jns
outsb
mov
movsl
mov
add
add
roll
jb
out
test
sbb
mov
jb
push
jnp
mov
mov
pop
arpl
enter
jno
loopne
or
jo
addl
roll
pop
and
cld
mov
xlat
lea
popf
xor
pushf
add
leave
pop
mov
lods
push
xchg
jne
movsb
lds
and
push
xor
scas
ja
xor
jmp
aaa
pop
popf
lahf
inc
pop
cmp
hlt
lods
push
mov
ja
test
dec
negl
nop
ret
inc
out
jmp
add
or
sbb
mov
lods
add
or
xor
push
out
xor
test
stc
add
rorl
in
mov
int
xor
pop
out
jns
mov
xor
mov
or
jg
push
pop
in
fs
mov
les
or
sub
jg
jbe
cld
add
stos
movsl
inc
xor
jae
sti
add
or
clc
pushf
inc
loope
and
push
js,pt
test
mov
dec
rclb
add
stos
out
in
sti
and
xchg
ud0
sub
ret
out
mov
xchg
dec
jb
xor
xor
int
push
sbb
cmpsb
xor
in
ret
push
scas
xor
xlat
into
xor
orl
sub
fs
dec
mov
and
insl
mov
imul
jge
xchg
fdivrl
fdivl
insl
std
icebp
mov
js
push
pop
out
outsb
rcll
call
dec
dec
in
cmp
xchg
fdivl
leave
fstps
scas
fiadds
stos
xor
or
stos
jg
outsb
push
cmp
lods
sub
adc
sahf
jb
icebp
add
pop
pusha
pop
imul
push
mov
notl
ljmp
lret
lcall
or
cs
mov
push
mov
ds
add
fimull
mov
mov
fisttpll
dec
cltd
cmp
cmp
cpuid
testl
pushf
xor
pusha
and
sub
adc
add
fstps
mov
ret
jo
lds
add
mov
test
aaa
mov
inc
mulb
push
into
fwait
loopne
leave
outsb
lods
out
push
lahf
xor
outsb
and
jae
push
ds
nop
inc
dec
pop
ss
mov
movsb
popa
into
pop
sbb
jno
gs
mov
add
adc
jb
fs
dec
push
jg
movsl
fnsave
jge
xchg
shll
sti
mov
std
and
lahf
jae
fisttpll
dec
cmc
test
stc
lea
pop
fidivrl
xor
lock
jmp
fs
fstps
leave
fildll
mov
stos
mov
xchg
sbb
pushf
rcr
jg
push
sbb
mov
pushf
mov
ja
and
xor
repz
stos
aam
cli
xchg
push
filds
mov
jle
stc
cmp
fnstenv
sub
ss
popf
add
adc
das
data16
loopne
repnz
std
bound
into
bound
std
sahf
cld
in
pusha
pop
out
dec
jmp
mov
sbb
add
adc
push
pop
shrb
aas
xchg
or
adc
adc
or
xchg
adc
mov
cmp
rcl
push
xor
insl
fcompl
jae
or
pop
hlt
adc
mov
mov
fstpt
pop
ss
or
je
fucomi
pop
mov
cmpsb
pop
jecxz
push
lea
out
rol
and
cmpb
jo
xchg
xchg
scas
testb
pop
dec
mov
icebp
btc
and
add
mov
neg
mov
in
push
cli
in
inc
xor
in
sbb
or
jmp
stos
aam
mov
sar
aaa
xorb
int
test
or
dec
clc
push
and
repz
mov
xchg
push
fnstsw
jno
loopne
push
cld
es
or
leave
in
or
pop
rol
mov
pop
test
mov
sbbb
xchg
xor
xchg
pop
scas
xchg
push
shll
negl
xlat
subl
mov
leave
in
cmc
out
sti
movsl
push
xchg
jle
sahf
in
jo
adc
cwtl
sbb
std
dec
pop
mov
loopne
fs
sbb
sarb
rep
xchg
sbbb
mov
lods
pop
in
jnp
jg
enter
in
jno
mov
jmp
push
ret
dec
mov
push
hlt
stc
mov
sti
nop
clc
jae,pt
adc
pop
mov
dec
cmovs
mov
arpl
lea
lahf
or
mov
sbb
xchg
sub
outsl
out
dec
das
adc
lods
push
pop
sub
outsl
sti
and
aas
push
and
xchg
mov
xchg
dec
add
sub
adc
out
push
gs
add
les
pop
cmpsb
movb
fsubs
jge
inc
pop
std
pop
ja
cmp
mov
clc
loopne
mov
sbb
fsubrl
repnz
shll
jmp
adc
or
and
movb
lods
inc
and
or
xor
call
pusha
sbb
mov
mov
xor
ja
shlb
imul
pop
inc
or
xchg
inc
or
int3
std
ret
mov
ret
xor
push
push
nop
nop
sbb
sti
stos
in
sbb
addb
sub
jle
enter
pandn
sahf
lret
add
test
xor
fwait
push
aas
cmp
je
jb
aas
pop
push
sarb
loope
stos
test
rclb
xchg
pop
jp
cmp
or
ss
insb
xor
or
shlb
jns
or
mov
cs
lret
cmp
sbb
mov
pop
iret
adc
cmp
xor
stos
out
push
fiaddl
jp
cli
push
jmp
out
sti
sub
mov
mov
dec
push
das
test
adc
xchg
xchg
gs
sub
sbb
cmpsb
jmp
andl
movsl
test
into
xchg
inc
repnz
cld
cmp
stos
xchg
int3
arpl
lahf
movsl
mov
sbb
daa
and
cld
mov
xchg
mov
clc
pop
push
gs
data16
aad
stc
jb
aad
stos
ficoms
imull
cmpsl
mov
jne
fldt
add
inc
cwtl
push
mov
jo
rcl
mov
stc
stc
mov
jg
dec
out
aam
mov
shll
sti
gs
inc
jns
sbb
dec
out
cmp
jl
js
imul
or
lret
enter
ret
sub
jp
sub
ret
lcall
and
dec
call
scas
out
ror
xchg
into
mov
orl
cmpsl
jecxz
add
pop
sti
into
cmpsl
jb
or
mov
arpl
aam
sub
sbb
mov
andb
insl
jbe
pop
push
sub
outsl
cltd
mov
pop
test
iret
xchg
cs
xor
adc
lods
data16
xchg
mov
js
out
iret
sbb
test
mov
inc
mov
repz
jo
mov
outsb
mov
inc
jmp
mov
add
fists
scas
js
data16
icebp
xchg
add
adc
and
jb
outsl
nop
movsb
adc
xor
lods
mov
outsb
stos
mov
mov
int
jno
mov
out
push
rclb
cmp
push
inc
js
frstor
daa
in
orl
sti
das
lods
stc
xchg
int3
or
notl
aaa
lahf
mov
mov
pop
sarl
bswap
adc
push
popf
mov
mov
and
xchg
outsb
pop
pop
out
mov
movsb
sub
mov
pop
mov
and
lods
sahf
adc
jb
leave
or
mov
ret
je
sbb
ja
pop
lsl
lret
add
fisubrs
sbb
out
adc
out
ret
pushf
pop
addl
imul
lea
adc
int3
adc
jns
push
mov
add
filds
aas
pop
and
inc
sbb
ss
mov
enter
lcall
mov
stos
inc
adc
cmpsl
push
pop
mov
stos
flds
inc
pusha
add
loopne
pop
rorb
movb
mov
sbbl
cmp
sbbl
inc
adc
enter
in
push
sbb
mov
popf
notl
lret
and
sub
inc
mov
out
stc
leave
jecxz
or
add
jo
negb
mov
insl
cs
popa
mov
sub
add
cs
fcmovne
into
in
dec
adc
mov
pop
in
mov
outsb
int
in
push
imul
fs
adc
xchg
int3
out
adc
dec
mov
popf
rcll
icebp
insb
pop
fidivrs
sbb
lcall
loopne
push
and
add
iret
adc
pushf
push
inc
adc
bound
imul
dec
mov
addr16
mov
aas
inc
mov
dec
mov
outsl
jl
inc
push
cmp
mov
pop
sbb
ret
xor
cltd
xchg
in
jle
mov
outsl
ret
scas
add
cmp
enter
out
push
and
insl
dec
add
pop
mov
fwait
mov
lea
in
rcrl
xchg
fiadds
hlt
push
insb
cltd
adc
fistpll
dec
dec
flds
add
jl
pop
sahf
fs
push
xchg
and
mov
repnz
dec
stc
mov
push
xchg
mov
push
mov
andl
lds
loopne
or
pushf
mov
out
jp
cwtl
inc
ljmp
mov
es
jg
push
jl
mov
jmp
test
fadds
outsl
aas
push
mov
ss
ja
jmp
dec
je
sbb
pusha
cmp
mov
mov
jnp
mov
xor
scas
add
mov
popf
in
push
adc
push
xchg
fwait
nop
in
rol
or
fisubl
ljmp
lret
jle
outsb
jns
mov
lret
mov
fcompp
lods
and
sub
sub
pop
or
cmpsl
int
dec
arpl
sbb
add
xor
push
inc
dec
insl
fdivr
out
cmp
aad
sbb
push
xor
sub
mov
inc
cmp
cmp
xchg
lret
test
xchg
mov
test
ss
add
add
stos
add
pushf
dec
pusha
xchg
add
mov
mov
xchg
mov
in
fucomp
shrl
mov
aaa
xchg
test
lret
mov
imul
jge
and
mov
outsl
cmc
aaa
sbb
inc
mov
or
decl
pop
test
xchg
or
pop
push
lahf
adc
inc
pop
xchg
push
fwait
push
clc
out
push
lcall
testb
outsl
cmp
lds
jno
insl
or
xchg
pop
aas
mov
test
pop
adc
scas
jecxz
xchg
clc
ja
mov
imul
movl
sub
xor
and
rcrb
stos
insb
fcmovnbe
mov
sbb
shl
ret
fcmovnu
cmc
push
sbb
cltd
jg
jecxz
outsl
aaa
inc
mov
dec
cmp
insl
mov
out
jmp
rcrl
pop
test
inc
sbb
and
cld
cmp
fldenv
xor
cmc
dec
rolb
jecxz
mov
je
js
sbb
jb
xchg
jae
aam
sbb
shrb
adc
add
dec
ret
cmp
mov
movsb
aas
pop
push
add
xchg
dec
push
arpl
in
and
cs
pminsw
mov
loop
sbb
xchg
sub
sub
testb
iret
repz
inc
loop
pop
sahf
xchg
jae
sub
fwait
cmp
fimuls
mov
jge
out
pop
push
je
inc
lods
aas
es
jae
inc
mov
jg
and
movsb
out
jle
push
push
fcomi
out
mov
cs
enter
adc
add
daa
rolb
sbb
add
add
lods
adc
xchg
loopne
outsb
lcall
mov
fists
sub
jmp
inc
sub
iret
mov
push
dec
ljmp
jecxz
in
xor
inc
insb
pcmpeqw
mov
mov
sub
out
push
rcrl
cmp
pop
adc
fs
in
frstor
mov
pop
xchg
sub
outsb
xchg
test
mov
adc
ja
inc
stc
push
push
imul
test
cmp
cmp
inc
adc
jg
das
jnp
lds
lods
sub
lods
jl
insb
xor
xchg
cmpsl
cmpsl
ds
push
aaa
hlt
ss
into
movsb
add
hlt
not
stos
imul
aaa
notl
cld
ret
movsb
dec
xor
arpl
xchg
inc
adc
out
adc
mov
add
in
and
pop
out
xchg
nop
pop
xor
mov
mov
stos
cmp
mov
cmp
add
lahf
mov
imul
add
push
xor
pop
imul
or
rorl
pop
jns
sti
sarb
adc
pop
jns
mov
int
mov
dec
adc
scas
cmpsl
test
in
mov
cmp
jge
push
out
fldt
cmp
das
pop
jae
out
xchg
daa
int3
into
xchg
icebp
and
subl
mov
lret
out
adc
pop
jns
call
mov
push
cld
sbb
pusha
adcl
adc
ret
xchg
in
fcomps
lahf
fldcw
jo
fwait
add
inc
push
fstpt
mov
mov
cmpsl
mulb
cwtl
push
dec
cmp
test
xchg
cmc
and
cmc
enter
outsl
or
test
jmp
lods
daa
jo
js
cmc
pop
test
leave
push
insb
or
mov
sbb
std
ljmp
dec
xor
sbb
mov
adc
lea
lret
sub
add
push
jge
xor
ja
mov
xor
movsb
pop
arpl
xchg
mov
inc
jp
jo
pop
xor
aas
and
sahf
andl
fwait
adc
stos
or
iret
adc
popa
es
mov
clc
adc
xchg
in
jb
push
or
syscall
cmpsb
and
push
inc
jmp
stos
mov
movsl
or
gs
fs
daa
cli
or
or
push
mov
pushf
xor
cmovge
lea
push
lahf
das
push
jle
icebp
xchg
shl
in
push
xchg
scas
cmp
mov
jmp
mov
stc
and
xlat
mov
mov
push
dec
adc
leave
popf
mov
hlt
enter
add
inc
lret
dec
jmp
mov
jnp
imul
out
shll
push
add
pop
adc
pop
or
jo
sbb
xor
jmp
movsb
lret
mov
fwait
adc
adc
xchg
loop
mov
aas
dec
jno
xchg
jmp
iret
mov
add
sub
ja
mov
and
insb
sti
adc
and
sbb
sti
sbb
adc
hlt
pop
int
push
mov
test
imul
mov
pop
scas
sbb
sbb
lods
sahf
aaa
mov
shll
and
insl
push
dec
push
in
jb
fnstenv
pop
xor
and
pop
add
sbb
mov
cli
shr
cmpsb
sahf
add
scas
lods
push
xchg
push
dec
popa
cmp
stc
les
out
mov
por
adc
mov
adc
cmp
cmp
push
in
and
jne
dec
movsl
sub
sbb
push
mov
pushf
cltd
jg
lock
mov
test
movsb
xchg
pop
push
dec
mov
mov
inc
xchg
int
daa
jmp
or
adc
adc
addr16
mov
mov
sbb
leave
mov
popa
pusha
mov
mov
mov
stos
incb
rorb
loope
aas
inc
push
outsb
iret
jecxz
pop
into
mov
xchg
test
outsl
fisubs
fldenv
xor
clc
jg
xchg
aaa
adc
pop
jp
mov
mov
push
jbe
les
mov
cmp
data16
icebp
stos
mov
sarl
xchg
xchg
andl
lods
out
mov
mov
cmpsl
jnp
fwait
das
aam
ds
loopne
stos
imul
jne
popa
popa
loopne
rcrb
inc
pop
pop
push
xchg
jne
fwait
add
out
mov
xchg
cmp
mov
jne
pushf
lret
mov
add
xor
push
xor
pop
inc
inc
sub
jle
shrb
xchg
and
cmp
pushf
insl
ret
js
jnp
mov
jnp
jb
sbb
fs
je
xor
cld
cld
insl
or
sbbl
hlt
loope
out
add
arpl
cmp
rolb
repz
and
mov
rorb
jbe
xchg
mov
pop
xlat
pop
cli
out
clc
pop
jmp
xchg
enter
cmc
fwait
cmp
push
dec
lea
dec
popa
outsb
pusha
minps
sbb
add
cmpsl
mov
and
int3
stc
adc
outsb
stos
mov
movsl
mov
loopne
xchg
and
dec
sub
jb
or
push
js
sbb
add
addb
push
xor
pop
mov
testl
jmp
int3
mov
in
iret
ljmp
cmp
daa
push
push
and
jl
mov
sti
xchg
repz
loopne
je
mov
mov
lods
out
mov
pop
pop
sbb
loope
or
test
jmp
push
xor
push
adcl
add
xor
into
adc
shr
imul
call
out
adc
testb
cmpsb
rorb
stos
dec
dec
adc
and
pop
inc
inc
aad
sub
inc
sbb
shl
lcall
out
jbe
popa
stos
jecxz
lcall
inc
mov
pop
xchg
stc
or
xchg
add
inc
repnz
out
aam
ja,pn
sahf
dec
mov
cmpl
mov
pop
sub
adc
ret
into
push
cmp
jns
iret
stc
pop
jecxz
outsb
hlt
mov
fisttpl
add
shll
ror
ds
ret
mov
nop
ds
cmpsl
and
and
rcrl
inc
xchg
or
cmpsl
js
jecxz
rolb
xor
cmp
mov
addr16
adc
faddp
outsl
lock
cmpsb
or
loopne
ss
sar
xor
lret
daa
sbb
mov
shrl
jl
testl
lds
test
and
sbb
adc
mov
aam
mov
popf
mov
sbb
mov
in
lea
frstor
sub
clc
leave
pop
and
leave
dec
jp
pushf
adc
dec
cltd
cwtl
mov
and
outsb
push
ja
sub
daa
jle
mov
lcall
xchg
call
enter
inc
loope
cld
push
xlat
cmpsl
cmp
xor
sbb
sub
lock
sub
out
pop
push
imul
jb
clc
movsl
push
sub
fisubs
int
mov
popa
mov
adc
and
dec
mov
mov
mov
and
stos
and
enter
or
loop
adc
or
dec
pop
xor
jecxz
leave
imul
jae
mov
shrl
sbb
push
mov
sti
mull
les
orb
push
adc
out
push
cmp
out
mov
ficomps
dec
mov
int3
add
or
or
push
xchg
or
aaa
jl
jmp
data16
sub
xor
ja
idiv
or
jae
mov
xchg
add
cs
inc
jp
mov
dec
cmp
fcomi
jge
pop
xor
mov
sub
icebp
ficoml
iret
setns
arpl
pop
notb
xchg
nop
sbbl
or
adc
push
ficoms
pop
cli
out
mov
gs
lea
push
jae
jle
lea
cmp
dec
int
sbb
dec
or
lret
push
pop
mov
clc
test
pop
cli
or
out
adc
pop
and
jne
and
xchg
insb
aad
das
lahf
pop
mov
push
cwtl
sub
sub
cmp
enter
insb
roll
fstps
pusha
push
add
data16
gs
loopne
stc
jbe
aaa
mov
sub
fs
sbb
lret
ja
cmp
ds
xor
cmpsl
inc
fwait
sub
lret
cltd
dec
xlat
jmp
xchg
filds
outsb
sbb
mov
cmpsb
inc
imul
xchg
movsb
nop
add
fwait
mov
cmpsb
sub
loopne
sbb
lret
out
loope
mov
cld
aam
mov
pushf
pop
push
sbb
inc
adc
adc
dec
out
ljmp
hlt
iret
leave
movsl
js
xchg
test
leave
lahf
mov
adc
movl
pop
std
ss
sub
adc
push
xor
and
cld
push
cmp
or
push
add
sbb
pop
cmp
or
fstpl
cmp
in
es
pop
inc
shlb
addr16
push
mov
mov
ret
pop
stos
gs
push
stos
add
popl
aas
cmp
imul
lcall
aas
ss
call
out
sahf
into
pusha
cwtl
imul
scas
jae
add
xchg
xor
fs
repz
sarb
ret
pop
jns,pn
add
pop
push
pop
in
ret
mov
inc
push
jns
sar
js
lods
mov
lcall
pop
dec
popf
mov
out
sub
pop
addr16
cmp
je
xorl
or
repnz
inc
adc
int3
xor
xchg
xchg
ljmp
xchg
scas
cli
push
cmpsb
mov
ja
jle
jne
xchg
loope
mov
in
jle
outsb
jge
scas
add
adc
mov
or
scas
ljmp
das
adc
fyl2x
imul
stc
xchg
push
arpl
xor
mov
or
aad
xchg
add
cmpsl
mov
xchg
call
xor
ftst
pop
push
fsubs
and
fmull
push
subb
sarl
mov
or
hlt
inc
les
dec
cmp
mov
jno
and
test
jae
ret
cmp
into
jbe
jmp
popf
and
popf
shll
dec
xchg
data16
je
imul
lds
cmp
fsubrs
xchg
stc
in
mov
sub
vcvtpd2psy
mov
fidivrs
fcoml
mov
pop
add
or
leave
lcall
lods
fs
iret
in
stos
enter
pop
xor
je
xchg
leave
arpl
aaa
sub
enter
dec
pushf
push
test
add
daa
leave
fstps
call
cmpsl
xchg
cwtl
mov
repz
lea
xchg
mov
fdivl
cmp
sbb
hlt
ror
add
mov
scas
lea
adc
pushf
lahf
icebp
movsl
adc
mov
pusha
jp
call
clc
push
push
push
push
cmp
pop
and
mov
mov
imul
push
out
stos
popa
cmpsb
lahf
mov
mov
cmp
adc
dec
mov
popf
add
and
lcall
movsl
inc
fidivrl
orl
ja
xor
pop
jne
xor
mov
call
jecxz
or
jb
aas
lods
push
das
shlb
mov
in
in
mov
dec
lock
es
pop
mov
push
das
out
iret
shrb
cmp
dec
jle
imul
jmp
push
div
loopne
xchg
sub
in
rclb
mov
pop
pushl
fdivrp
loopne
sbb
fbstp
dec
dec
xchg
stc
xchg
pop
loope
push
aas
xchg
aad
addl
xchg
jno
add
mov
test
loopne
mov
or
es
fistpl
pop
adc
imul
fdivs
ss
testb
mov
stos
dec
inc
fnsave
aas
mov
clc
adc
inc
cmp
and
fmuls
ja
test
outsb
push
dec
scas
cmp
incl
sbb
faddl
out
sub
or
push
inc
in
loopne
ret
fcoml
push
sub
inc
int3
mov
xorl
jnp
mov
ret
or
sub
pop
ret
inc
dec
ljmp
cld
sub
dec
pusha
rcrb
shrb
push
add
loopne
aaa
aaa
cmp
js
sbb
xchg
cli
push
pop
jmp
int
aad
mov
mov
inc
loopne
scas
fmuls
or
mov
jo
mov
dec
push
or
fstpt
xchg
stc
inc
mov
nop
sbb
outsl
sahf
mov
xchg
adc
rcll
mov
pop
shl
test
mov
push
das
xlat
inc
and
mov
sub
call
push
dec
imul
cmp
add
or
push
mov
data16
jg
test
out
in
out
test
cmp
les
test
mov
into
pop
push
lods
arpl
and
mov
bound
movsb
sub
mov
adc
insb
dec
inc
jecxz
leave
push
mov
fs
jb
iret
in
mov
js
rol
push
add
mov
lds
xchg
cmp
jns
pusha
mov
jmp
or
xchg
aaa
jnp
fnstcw
mov
pop
cmc
mov
and
out
push
mov
and
repz
mov
fwait
pop
nop
in
xchg
jecxz
mov
orl
faddp
dec
mov
add
pop
jg
jno
push
xchg
out
push
loopne
mov
insl
mov
push
mov
push
sub
sbb
add
inc
loopne
out
xor
ds
adc
fldenv
icebp
imul
dec
mov
mov
sbb
je
sar
xchg
std
movsb
xor
rorb
pop
dec
push
sahf
pushl
icebp
repnz
mov
jns
lods
jp
sub
dec
out
stos
mov
jle
jp
mov
addr16
jge
mov
int
cmp
nop
sub
jl
fs
jns
ds
stos
sbb
dec
mov
inc
sbb
dec
jmp
aas
loopne
cmpsl
div
call
mov
push
outsl
mov
jp
fldt
push
jbe
and
insb
xchg
cmc
inc
pop
rol
mov
es
or
xor
pop
shll
cmpsb
xor
pop
adc
arpl
inc
movl
fcomip
test
outsb
xor
loope
push
frndint
fwait
test
xor
xchg
xlat
lock
rclb
test
mov
and
iret
mov
test
push
jge
push
es
or
adc
ljmp
outsl
neg
pop
jg
mov
or
mov
stos
fmulp
lcall
or
sahf
mov
rcrb
ds
std
fimuls
jecxz
jbe
cltd
add
call
xor
pop
mov
mov
or
jae
adc
pop
push
sbb
push
test
lds
fisttps
mov
scas
mov
jb
scas
negl
pop
mov
fnsave
cmp
mov
gs
lcall
imul
xchg
inc
stos
push
pop
das
test
jnp
fs
sbb
adc
ret
notb
mov
lahf
out
aam
jbe
cwtl
mov
mov
out
pop
and
insl
cmp
xchg
and
enter
pushf
fidivrl
dec
adc
jmp
imul
negb
and
sub
mov
outsb
mov
out
cmp
or
test
adc
pop
mov
pop
cmp
jno
stos
sub
or
adc
lret
push
outsb
jmp
lret
sbbl
push
or
jo
sbb
shl
jne
push
jne
movsb
in
cmp
sub
pop
mov
and
lds
xor
arpl
mov
cs
sbb
adc
inc
mov
lret
or
jmp
or
movsb
in
jbe
mov
lods
hlt
test
pop
cmpsl
cmpsl
ja
mov
fldl
addr16
xor
inc
cli
stos
cmpl
aad
xchg
adc
outsb
xor
loope
push
cld
loope
cmpsb
jge
pop
outsl
lahf
adc
ljmp
and
rol
cli
dec
mov
jo
mov
sub
in
enter
inc
or
stos
or
out
bnd
add
cmpsb
data16
jg
rolb
and
or
jl
and
pop
repz
mov
jb
in
cmpl
dec
lret
subb
loopne
imul
xor
mov
adc
mov
cmp
scas
ss
imul
les
imul
iret
pop
test
xchg
out
and
iret
cwtl
dec
js
inc
sbb
xor
inc
test
jae
aad
leave
xor
mov
and
repnz
jns
cmc
imul
dec
pushf
cmp
inc
mov
sub
lcall
push
cmp
inc
scas
es
imul
bound
jl
and
nop
pop
inc
jmp
add
sub
add
sub
lea
and
and
jb
sub
cwtl
or
push
jnp
jp
into
in
adc
and
nop
pop
lds
adc
rorl
ds
sub
pop
add
sub
xor
jp
es
push
dec
out
leave
jns,pt
and
sbb
shlb
cmp
in
xchg
cwtl
jp
sahf
ds
aam
and
xchg
adc
movsl
and
jne
adc
jecxz
cld
subb
mov
sbb
incl
mov
xlat
icebp
dec
and
add
scas
jne
adc
lea
push
sbb
dec
sub
cmp
dec
js
jl
lods
adc
ret
xor
insb
out
mov
push
mov
fiaddl
cmp
pop
xor
pop
je
pop
push
in
test
rol
mov
rolb
push
push
dec
pop
inc
notl
xor
cli
inc
cltd
dec
icebp
outsb
mov
das
or
xor
testl
mov
inc
mov
xchg
mov
and
xor
mov
rolb
add
adc
es
dec
mov
lcall
jl
test
cmp
mov
mov
jecxz
out
adc
icebp
mov
pop
movsb
pop
es
jno
hlt
sub
imul
add
pushf
icebp
out
mov
shlb
rcrl
pop
xchg
in
jmp
dec
dec
js
cltd
clc
jno
push
adc
lds
out
add
std
xor
inc
loop
add
or
cltd
sbb
dec
movsl
jge
pop
xchg
add
dec
mov
clc
dec
enter
xor
cmp
jmp
pop
lea
loopne
rol
xlat
mov
xor
cmp
push
cmp
sarb
push
stos
ficoms
adc
inc
cmp
fs
or
xor
in
sub
psubusw
jmp
or
ret
mov
rcll
xchg
rcll
es
xchg
clc
and
mov
xchg
mov
imul
mov
sbb
movsb
sar
adc
sbb
icebp
shlb
shl
in
incb
jge
inc
push
push
test
in
in
add
daa
ljmp
stc
jecxz
loop
mov
adc
ret
push
push
mov
imul
or
add
lret
jge
rcll
sbb
test
repnz
push
inc
leave
mov
pop
mov
cmp
jns
pop
and
in
daa
call
adc
into
fcomps
enter
imul
adc
fildl
adc
push
push
adc
dec
inc
subl
xlat
icebp
mov
dec
jmp
test
shr
fisttps
lods
sbb
enter
outsb
xchg
lods
add
mov
add
aaa
cmpsb
rcrb
mov
mov
outsb
dec
mov
mov
push
call
mov
mov
push
rolb
daa
lock
and
ret
out
sbb
and
mov
movsb
insb
js
push
aaa
sbb
cmp
out
jle
cmc
int
inc
pop
xor
xor
or
out
or
outsb
cmp
cmp
xchg
scas
cmpsl
mov
jge
movsl
sarb
jne
push
out
push
jne
sbbl
clc
lods
ss
jecxz
les
jne
cmpsl
movsl
js
adc
and
jmp
pop
not
fs
cmc
popa
ds
pop
jo
int3
add
sahf
mov
mov
fldcw
add
sub
and
in
lods
aas
fs
cmpsb
fwait
popf
push
cmp
add
sub
iret
stos
or
adc
bswap
and
cwtl
in
inc
xchg
mov
pslld
gs
aas
or
xlat
mov
test
enter
mov
scas
jae
dec
and
inc
nop
iret
dec
pop
mov
pop
popa
inc
mov
insb
push
fisttps
jne
movsl
cmpsl
in
mov
fildll
mov
mov
inc
stos
enter
lods
fbstp
jbe
cmc
dec
scas
or
lret
adc
push
jns
rcrb
out
test
scas
sub
out
mov
out
dec
in
fwait
iret
loop
push
jno
jnp
sub
sbb
loope
hlt
dec
test
cmp
outsb
pop
or
mov
add
out
inc
lahf
and
mov
xor
fsubr
jo
sbb
in
mov
mov
pop
cmp
xor
inc
jmp
push
inc
push
cmp
outsl
adc
or
dec
sub
shll
jno
inc
inc
cltd
sub
push
mov
inc
sub
xor
into
imul
xchg
pop
scas
fdivrl
jg
mov
pusha
repnz
xchg
pop
inc
xchg
mov
pusha
xchg
loop
xor
sbb
push
add
jmp
repnz
dec
cli
push
mov
sbb
mov
leave
cmc
sbb
dec
adc
adcl
sete
jbe
mov
cmpsl
jp
cmp
dec
dec
andb
stos
sahf
int3
jp
mov
cmp
xlat
push
decb
nop
mov
insb
lock
jp
inc
xor
shlb
jp
mov
sub
mov
inc
loop
and
repz
push
sahf
repz
cmp
imul
mov
cmp
add
stos
mov
cli
jle
rcrb
cli
cmpsl
inc
and
xchg
ja
mov
push
push
sahf
stos
dec
inc
nop
in
ja
xchg
xlat
adc
popf
subb
sbb
add
inc
mov
jnp
jnp
aas
sub
xchg
adc
int3
ds
cmpsb
pop
ljmp
insb
inc
subps
sub
mov
mov
pop
mov
push
jg
add
push
add
test
or
cmpsl
in
xchg
xlat
cwtl
nop
pop
push
xor
jle
dec
fldt
xor
das
add
cmpsl
mov
ss
or
xchg
loopne
push
add
mov
ffreep
cwtl
mov
leave
call
sahf
inc
push
inc
push
mov
je
sub
gs
push
adc
ljmp
fs
cs
adc
addr16
adc
mov
mov
testl
js
jae
fisubl
jp
loopne
jnp
inc
inc
pop
or
pushf
and
mov
mov
xor
jbe
adc
insb
js
push
mov
adc
fsubp
jl
notl
adc
stos
cmp
add
add
push
or
das
cmp
xchg
imul
xchg
add
mov
jno
and
pusha
imul
jb
mov
in
pop
arpl
push
jp
iret
mov
aas
mov
adc
jg
inc
sbb
pop
ljmp
outsb
xchg
sub
xchg
xor
xor
sbb
inc
gs
adc
dec
push
push
pop
cmpb
adc
jb
mov
and
pop
jp
mov
lock
popa
dec
cmp
jo
add
mov
js
inc
sub
xchg
fimuls
daa
and
lea
inc
xor
addr16
std
lahf
lods
rsqrtps
or
stc
adc
insl
nop
sub
jo
jae
jae
xchg
adc
push
pop
test
rclb
div
dec
ljmp
pushf
fdivs
dec
inc
shll
cmpsl
push
xor
adc
mov
pop
and
adc
inc
lods
sbb
inc
jge
mov
leave
rcrb
in
jl
fadds
das
push
es
out
dec
add
in
imul
data16
and
sub
dec
movsb
mov
inc
sbb
mov
mov
sti
dec
push
mov
dec
test
add
sbb
sahf
dec
aaa
mov
daa
sbb
fistl
mov
lds
dec
jne
das
outsb
data16
inc
outsb
and
outsb
jle
dec
out
inc
loopne
fwait
stos
das
cli
outsb
arpl
mov
jle
popf
inc
or
and
dec
mov
shlb
xor
mov
jne
mov
jecxz
out
xor
idivl
fcmovb
adc
xor
push
test
int
hlt
dec
fsub
in
cmpsb
loope
fisttpll
in
aas
jg
and
adc
inc
sub
and
std
push
int3
movsl
inc
sarb
jp
dec
mull
test
stos
jmp
pop
cmp
fsubrs
iret
ds
mov
push
rolb
ret
cmp
clc
repnz
js
xchg
mov
outsl
insl
dec
subl
outsb
fnop
mov
lahf
lea
movsl
iret
dec
iret
pop
push
push
dec
lret
jl
inc
mov
push
pop
and
cmp
in
inc
movsb
cli
pop
or
adc
xchg
mov
push
sub
cmpsl
test
stc
pop
adc
cmp
pop
pop
jns
das
sbb
and
ds
cmp
imul
test
dec
cmc
sbb
cmp
in
fsub
shlb
pusha
mov
lods
movsl
mov
pop
test
stos
sub
imulb
xor
adc
sti
dec
loope
scas
xchg
dec
lds
cli
xor
ljmp
mov
movsb
cld
xchg
mov
jmp
xchg
jae
test
mov
mov
testb
and
pop
roll
cs
inc
imul
lahf
loop
insl
mov
movsl
jmp
xchg
cli
and
mov
lock
mov
dec
mov
xlat
hlt
aaa
push
shll
test
inc
sbb
pop
or
push
dec
sbb
add
addl
addl
dec
jmp
les
sbb
push
stos
test
xchg
mov
sahf
cmpsb
into
adcl
cmpsl
xlat
adc
push
dec
sahf
mov
mov
dec
mov
shll
popf
xchg
xor
mov
pop
in
xchg
stc
sbb
push
push
add
in
scas
inc
and
imul
pop
sbb
stc
adc
and
jb
in
in
inc
mov
js
jae
jg
or
stc
pop
xlat
and
jge
in
or
lods
in
lea
xor
mov
inc
xchg
dec
jnp
xchg
nop
jns
insl
xchg
cwtl
adc
in
lret
push
roll
inc
into
xchg
push
mov
mov
ds
push
popa
mov
pop
loop
inc
pop
mov
add
repz
cmp
inc
sbb
or
repnz
out
xchg
push
push
loope
jno
jae
jne
dec
pop
jb
mov
adc
dec
enter
lock
xlat
ljmp
arpl
popf
aad
cmp
mov
fisttpll
pop
cltd
aam
fwait
rol
jmp
out
xor
jne
sub
outsb
inc
and
sbb
mov
sub
and
iret
pop
test
ret
push
adc
ljmp
pushf
mov
sbb
les
jne
sbb
cmp
mov
scas
lret
and
sub
xor
sub
test
jmp
sub
mov
cld
jnp
loop
sti
or
and
daa
lds
inc
frstor
lea
jo
testl
jbe
jne
mov
sub
ret
std
sub
insl
xor
fdivrs
bound
pop
xor
lods
push
lock
jno,pn
dec
pop
push
jae
incl
imul
or
and
ret
pop
pop
rorl
push
xor
mov
or
and
add
cmp
pushl
pop
rorl
cmp
out
or
lock
divb
jl
das
and
fstl
fwait
lret
out
fs
into
xor
out
adc
adcb
or
push
or
insl
dec
fisubrs
push
idivl
add
jne
mov
dec
pop
out
xchg
sub
mov
mov
adc
inc
icebp
xchg
das
add
cmp
arpl
dec
jg
shl
out
sbb
sbb
mov
pop
add
das
std
xchg
mov
or
shll
orl
and
movsl
xchg
iret
in
mov
jge
jl
or
jmp
xchg
xchg
push
lcall
ss
repz
int
jbe
adc
into
and
and
or
pop
clc
adc
mov
sbb
ljmp
sti
fsub
push
arpl
push
out
clc
iret
sub
mov
into
fisttpll
rcr
leave
lret
jmp
test
ljmp
stos
mov
gs
lock
pop
addr16
pop
aad
hlt
dec
push
mov
fdivrp
jbe
shll
ss
mov
sahf
jmp
insb
stos
sti
xchg
shrb
scas
xchg
push
ret
lock
xor
inc
push
adc
jnp
in
or
fnsave
aad
mov
cmp
imul
insl
xor
xchg
cmp
xchg
mov
sub
sub
inc
pop
sbb
ds
test
arpl
pop
in
cld
jae
fwait
sbb
mov
std
push
or
sti
xlat
xchg
mov
fcomps
mov
push
push
mov
mov
pop
clc
and
mov
jl
mov
mov
xchg
cmpsb
cmp
xchg
mov
inc
loopne
or
xlat
dec
ss
and
sub
jg
pusha
dec
dec
cmp
inc
call
xor
fcmovu
or
mov
xor
adc
lcall
xor
xor
jl
loop
mov
xlat
pop
fwait
and
and
add
dec
roll
inc
jb
sbb
dec
daa
xchg
mov
dec
push
push
mov
nop
out
out
sub
cwtl
xor
ds
dec
repnz
push
jmp
popf
in
push
mov
and
ljmp
jmp
mov
lahf
cli
popa
out
imul
aad
insl
leave
jo
sarb
inc
jnp
stc
pop
fadds
aaa
mov
hlt
out
add
lcall
adc
daa
xchg
pop
mov
xlat
mov
push
pop
mov
gs
push
stc
xchg
push
and
inc
pop
lods
rolb
and
sbb
ljmp
xor
shrb
cmpsl
jle
fisttps
outsl
cmp
scas
stos
loope
data16
out
cmp
push
add
sbb
fisubrl
stos
insl
fs
adc
cmpsl
mov
lret
out
xchg
test
xchg
stos
fnstcw
ss
leave
or
je
scas
sub
pop
stos
mov
add
outsl
xchg
jmp
push
data16
arpl
andl
notl
leave
pop
popa
cmp
jns
data16
outsb
hlt
stos
xchg
mov
and
push
outsl
xchg
jecxz
mov
sbb
push
dec
mov
mov
cmc
ret
cltd
inc
bound
sub
xor
mov
scas
push
pop
lock
add
push
mov
or
popf
daa
jmp
outsl
add
movsb
mov
jbe
in
xchg
nop
inc
jl
jns,pn
sbb
fdivl
sub
or
sbb
inc
lahf
xor
int
sub
sbb
cmpsb
int
fiaddl
fdiv
mov
hlt
fdivrp
sahf
mov
movsb
and
adc
xor
stc
aad
js
insl
into
ret
or
enter
push
add
push
jle
es
sti
rorb
cmc
popf
sub
fcompl
lods
and
pop
int3
mov
popa
dec
clc
mov
mov
out
cld
cmp
scas
dec
cli
sbb
test
out
dec
cmpsb
addl
sub
push
aam
insl
dec
cmp
mov
dec
dec
adc
lcall
mov
mov
or
decb
out
pop
cmpsb
sbb
push
push
lret
xor
mov
dec
mov
inc
cmpsl
loop
in
push
dec
jae
shll
sbb
cmp
pop
mov
push
divb
cmpb
pusha
aam
mov
xor
pop
push
fisttpl
xchg
pop
mov
jbe
cs
loope
cld
adc
jge
cmp
in
add
pushf
or
mov
addl
pop
fldcw
push
sti
mov
jo
shll
std
shll
jg
sub
mov
cltd
lods
push
push
jno
cmc
xchg
loop
jnp
jg
mov
rcll
push
adc
sbb
jmp
sti
out
in
xchg
sti
notl
sarb
scas
fisttpl
xchg
je
mov
jbe
mov
mov
jmp
repz
mov
sbb
adc
mov
or
add
xlat
daa
sbbb
scas
movb
pop
xor
adc
mov
sbb
xchg
mov
and
shll
imul
loope
mov
in
inc
or
mov
xchg
fbld
sbb
mov
xchg
push
hlt
add
out
mov
mov
mov
shlb
push
outsb
inc
rcl
aad
push
jne
and
aam
xor
push
mov
push
inc
mov
es
pop
and
xor
subb
gs
ss
lcall
test
cmc
pop
out
pop
fucomp
popf
adc
in
pop
insl
sti
mov
mov
adc
xlat
inc
mov
jne
mov
scas
pop
sarb
and
lret
mov
add
dec
cmp
into
mov
fidivs
adc
shl
stos
add
dec
sahf
fcomi
xor
mov
repz
mov
ficompl
pop
not
test
arpl
dec
add
data16
lods
les
in
mov
add
push
ss
mov
mov
in
cli
mov
sbb
mov
xor
fadds
push
xor
stos
mov
sbb
jno
ret
lret
fsubrl
adc
push
inc
xchg
movsb
xchg
xor
lock
mov
xchg
sbb
mov
push
or
cs
mov
bound
mov
mov
gs
ret
inc
cmp
mov
jmp
fists
stos
mov
cmp
jmp
rol
cmpsb
xor
xchg
test
lahf
and
pop
cmp
andb
fwait
add
jae
jge
mov
inc
mov
sbbb
inc
leave
movsl
ljmp
fwait
pop
jb
pusha
in
lahf
addr16
xchg
cmpsb
adc
fstpt
mov
mov
jl
je
iret
mov
jmp
sub
les
inc
cld
pop
test
cwtl
mov
pushf
imul
mov
mov
out
int3
mov
lret
test
shrb
loop
jl
xchg
xor
cmp
cmp
mov
lods
mov
and
iret
int
loope
cli
mov
rclb
pop
sbb
sbb
adc
pushf
popf
xchg
xor
pop
cmp
test
loop
and
mov
push
lods
test
push
sub
in
adc
or
xor
test
and
xchg
jo
push
xchg
lock
cli
or
bound
scas
insl
jle
adc
inc
stc
add
pusha
pop
jne
in
cs
mov
pop
mov
arpl
xchg
jge
add
std
mov
push
or
inc
loope
idivb
jmp
testl
mov
insl
xchg
std
mov
shll
push
and
mov
jnp
and
imul
push
xchg
lds
insl
mov
out
cmp
mov
sub
pop
fxch
xor
cld
jnp
cwtl
jno
push
inc
pushf
enter
bound
xchg
mov
lods
lods
add
mov
mov
cmp
adc
xlat
jns
fcmovnb
leave
mov
push
std
popf
pop
sub
and
outsl
cmp
stos
mov
xlat
push
lahf
into
ficoml
push
mov
jae
cwtl
mov
rclb
ds
cmpsb
dec
pop
fdivl
add
roll
jae
mov
push
into
packssdw
jbe
xchg
cmp
push
mov
mov
and
imul
rcl
cmc
or
push
mov
ret
daa
inc
outsl
sbb
inc
jb
fimuls
cmp
sub
repz
cs
fcmovu
lahf
insb
inc
sbb
pushf
pop
inc
sub
adc
lods
les
sarb
stos
dec
push
sub
dec
stos
add
jge
lahf
scas
es
subb
shll
cli
xor
lds
imul
and
repnz
add
and
int
xorl
gs
cmp
push
sbb
inc
sub
pushf
imul
rcrl
sub
and
xchg
xchg
js
pushf
cs
sbb
ja
loop
jne
imul
mov
mov
fildll
sti
sub
aaa
jg
mov
mov
sbb
xchg
loop
or
das
fs
jne
mov
imul
mov
sub
xchg
ljmp
mov
call
shll
sarb
mov
fldt
sub
mov
push
sub
add
pop
inc
mov
mov
or
cltd
sbb
push
inc
dec
lahf
rcrb
xchg
fbld
xor
lock
mov
cwtl
js
push
and
mov
cli
insb
int3
addr16
imul
lret
dec
xor
mov
jg
pop
and
les
jecxz
repz
and
cmp
hlt
jo
xlat
jg
adc
repz
stos
test
mov
aam
dec
jl
lea
stos
ret
adc
and
inc
adc
mov
xchg
popf
popf
jbe
and
aam
jb
pop
sbb
pop
cmpsb
loop
cmp
mov
dec
mov
mov
push
dec
jp,pt
push
pop
lods
ret
jmp
insl
fs
ret
sbb
pusha
xor
icebp
mov
in
xchg
pop
mov
das
sbb
les
fnstcw
mul
imul
pop
test
sbb
sub
adc
hlt
lods
pushf
es
inc
mov
sti
or
out
jg
lods
xor
mov
out
mov
insb
cmp
mov
xor
stos
fisttpl
jb
push
inc
lods
ds
or
cmp
mov
aam
xchg
int
cmp
or
test
lcall
shr
cmpsl
fidivrs
mov
out
fbstp
jae
adc
jl
imul
and
mov
adc
cltd
mov
or
pop
sbb
fidivrs
iret
data16
mov
test
or
sbb
shl
data16
fimull
push
int
adc
push
gs
fdivl
jg
outsl
pop
dec
push
xor
inc
jl
int3
jae
movsl
inc
inc
gs
je
mov
mov
movsb
cmp
adc
inc
xchg
mov
jns
aam
addr16
push
lahf
shl
loope
or
push
push
xchg
ljmp
shll
add
push
sub
xor
jge
mov
add
gs
sarb
int
dec
and
mov
adc
sbb
jbe
div
dec
movb
adc
inc
je
sub
mov
scas
icebp
jnp
cmp
pop
mov
pop
mov
sbb
pop
cmp
js
mov
js
inc
jno
cmpsb
mov
sbb
add
cltd
les
ja
dec
push
int3
cmpl
dec
aam
pop
js
mov
push
arpl
xchg
cmp
adcl
imul
push
xchg
jo
loope
icebp
rcrl
repnz
sarl
ja
data16
mov
fmull
mov
sbb
jmp
pushf
adc
inc
divl
xchg
sub
add
cld
mov
mov
decb
out
ja
xchg
or
push
pop
flds
push
rcrb
cmp
jmp
iret
daa
je
add
loop
inc
rcll
inc
shl
sbb
push
push
jno
xor
mov
scas
jns
dec
adc
test
sub
push
xor
pop
leave
imul
sti
xor
cmp
scas
sahf
int3
cmp
mov
push
in
into
mov
fbld
dec
pop
xchg
out
push
push
pushf
cmpsb
jl
sahf
aad
sub
stos
xchg
fidivrl
inc
mov
push
scas
and
pop
into
dec
mov
adc
xchg
fldt
imul
sub
popf
lahf
add
insb
daa
sbb
xor
mov
fcoms
inc
mov
push
push
dec
jae
lcall
mov
jge
sti
subl
pop
pop
out
cmpsl
sbbl
mov
mov
fdivs
ret
cwtl
push
aam
dec
adc
sub
or
test
stos
cmpsb
jne
inc
jne
stos
mov
mov
sub
imul
sub
push
shrb
jno
hlt
loop
rcrl
pop
pop
fstpl
stos
mov
dec
push
push
mov
cmp
mov
add
test
int3
and
push
stc
and
sbb
mov
mov
and
sahf
cs
mov
cmc
xor
fstps
xchg
jne
mov
cs
je
push
pop
mov
fisubs
mov
fisubs
jne
and
xor
jmp
push
jp
mov
mov
jb
stos
add
adc
loope
xor
jb
dec
cmpsb
dec
adc
movsb
adc
xchg
dec
loop
cwtl
pusha
fcoml
jae
dec
push
insl
add
icebp
jg
movsl
cwtl
mov
cld
movsl
test
sbb
fimull
out
jns
mov
xor
insb
fldcw
pop
pop
call
xchg
movsl
mov
push
out
out
pop
adcl
push
arpl
jne
cmp
movsb
mov
stos
xchg
sub
xchg
lahf
int3
mov
mov
dec
cwtl
mov
xchg
jle
jmp
xchg
repnz
daa
loop
cmp
aas
xchg
test
pop
stos
sub
cmp
dec
cli
sub
inc
pop
mov
dec
and
jo
pop
nop
lahf
mov
pop
pop
push
jg
jae
mov
jno
jmp
cmp
jmp
push
rorb
shrb
dec
inc
xchg
aad
xchg
arpl
addr16
or
imul
mov
push
rcrb
push
outsb
mov
int
mov
mov
fs
or
adc
movsl
pop
add
mov
les
push
mov
sub
adc
adc
rcrl
mov
jmp
mov
mov
xchg
mov
mov
mov
sub
mov
mov
insl
out
mov
mov
dec
or
mov
ss
push
xchg
shll
pop
or
xlat
icebp
xchg
xor
arpl
icebp
pcmpgtb
pop
mov
add
jmp
js
repnz
cwtl
fsts
mov
bt
arpl
mov
and
iret
cmp
pop
test
or
mov
mov
pushf
subl
sub
dec
outsb
call
sbb
push
push
js
in
rcl
pop
lahf
add
les
test
fcmovu
inc
lea
leave
pop
xlat
sbb
fdivp
cmp
jae
sahf
aaa
int3
fsubl
mov
jl
pop
jg
sbb
mov
icebp
push
pop
dec
aas
leave
jg
jmp
sbb
jmp
call
stos
jo
mov
sti
add
pop
enter
cmp
cwtl
add
icebp
dec
mov
popa
add
pop
daa
lods
and
push
cwtl
sahf
jne
stos
jl
mov
vmovhps
flds
insl
jne
insb
jl
hlt
scas
xor
icebp
ja
das
mov
sub
inc
jno
fisttpll
dec
add
test
pop
das
in
pusha
mov
nop
jae
dec
addb
inc
jo
cmpsb
stc
pop
into
repnz
push
cwtl
xchg
xchg
cmp
add
mov
pop
mov
pop
mov
dec
push
aas
lret
xchg
lods
mov
sbb
pop
cmp
lret
jo
xchg
sahf
dec
cmp
sbb
hlt
enter
out
sar
mov
jg
sahf
leave
inc
push
jo
push
insb
aam
test
lret
cmp
iret
add
out
jb
mov
js
repnz
inc
inc
in
fcoms
or
or
shlb
loope
mov
xor
subl
lret
mov
dec
das
mov
dec
pop
adc
add
scas
cmp
out
xlat
aaa
shll
clc
stos
mov
xchg
xor
clc
fstps
mov
ret
inc
jg
or
mov
mov
out
sahf
jmp
push
xor
sub
pop
fwait
out
jno
inc
xor
mov
fistl
push
outsb
jae
cwtl
mov
jb
por
stc
ret
and
jno
outsl
inc
cmp
and
daa
inc
sub
inc
inc
nop
inc
std
push
sub
mov
xchg
jne
aam
lcall
das
lea
mov
fwait
cli
mov
sahf
in
mov
mov
lea
aam
lret
addr16
mov
arpl
push
loop
aam
mov
aas
sub
rcrl
mov
xor
cmp
xor
and
sbb
test
jecxz
xor
fs
adc
stc
mov
push
sbbl
adc
pop
lret
mov
ret
push
xor
jge
pushf
repz
mov
mov
and
sub
pop
imul
mov
push
mov
inc
out
mov
mov
inc
or
fistps
scas
mov
lret
data16
jp
fisubs
int3
bound
xchg
push
jnp
ret
fisttpl
xor
jns
pop
add
or
je
adc
push
in
adc
push
mov
gs
fbstp
test
cltd
push
or
push
jae
and
fidivs
xchg
mov
and
or
cmc
mov
pop
std
lds
add
lcall
sub
out
lret
shl
inc
inc
or
or
push
stc
push
sbb
sbb
push
jbe
fmuls
xor
test
inc
lock
inc
add
out
mov
jl
mov
cld
testb
mov
or
movsl
sub
ds
or
fsubrl
lods
mov
push
dec
push
pusha
movsb
mov
rclb
outsl
or
or
jo
inc
insl
jnp
sbb
scas
add
lods
pop
js
outsl
enter
add
mov
dec
xchg
or
xchg
pop
es
in
push
in
adc
pop
adc
inc
mov
mov
xchg
jne
cmp
outsb
nop
jbe
rclb
mov
data16
dec
mov
mov
pop
outsl
inc
dec
pop
xor
xor
sub
cld
jecxz
lods
fcompl
ss
push
test
jge
lahf
iret
jg
mov
es
xchg
sbb
inc
adc
std
pop
lret
imul
push
bound
jbe
fbld
xchg
fiaddl
ljmp
scas
mov
insb
fwait
pusha
jno
cwtl
aas
and
fcmovne
adc
imul
jge
or
ljmp
cmp
test
or
push
mov
cwtl
pusha
sub
inc
int3
push
das
adc
push
gs
out
jne
xchg
out
mov
push
sbb
jb
orb
out
add
dec
push
arpl
mov
mov
out
fcoml
cmp
gs
push
out
sar
cmpsl
cmp
push
add
or
sub
outsl
jbe
or
stos
sbb
test
and
or
mov
in
mov
in
stos
inc
xor
lret
cwtl
jb
les
das
mov
cmp
xor
mov
add
out
cmp
fnstsw
stos
sub
fwait
add
repz
push
xor
clc
xchg
push
mov
aam
jnp
loop
cwtl
inc
xor
sub
push
ret
push
enter
mov
jle
call
cld
mov
lret
or
xor
lret
in
pop
and
adc
test
std
mov
jae
push
sub
out
data16
cmp
test
scas
scas
out
mov
fidivrl
test
xor
xchg
cmp
push
push
xchg
xlat
xor
push
add
add
popf
mov
mov
test
and
inc
aam
jnp
or
lret
lods
add
ss
aaa
out
inc
imul
add
dec
roll
pop
jns
pop
bnd
gs
repnz
das
test
cli
dec
ds
cltd
mov
insb
clc
xchg
sub
or
push
je
dec
in
and
shrb
shll
js
xor
sub
imul
add
dec
and
ficompl
fldcw
inc
es
lock
lods
ljmp
mov
inc
jne
adc
pop
mov
pop
outsl
stos
ljmp
cli
lahf
rcll
aam
mov
push
or
xchg
cmpsb
gs
cs
xor
jnp
insb
mov
fsubrp
mov
icebp
int3
cs
jmp
sub
lods
cmp
aaa
and
imul
inc
mov
mov
xchg
fs
jns
pop
pop
fisttpl
push
ret
add
mov
addl
mov
mov
xor
iret
popf
mov
sbb
test
adc
xchg
sbb
mov
xor
jo
mov
and
cmpsl
xchg
mov
rclb
mov
mov
insl
ljmp
inc
pop
jae
push
dec
popf
or
jecxz
dec
testl
mov
push
xor
hlt
repnz
iret
push
mov
mov
cmpsl
xchg
in
shlb
mov
mov
push
icebp
les
add
mov
adcb
cld
inc
outsb
mov
xor
mov
xchg
iret
and
test
mov
pop
sub
push
stc
jo
gs
sti
jnp
popf
adc
mov
in
or
dec
push
or
jecxz
push
and
inc
add
jnp
pop
out
sahf
sub
hlt
aam
sbb
in
pop
call
inc
xchg
dec
mov
mov
push
test
lret
mov
pop
cmp
push
dec
fistpll
hlt
popa
push
mov
hlt
sub
add
xlat
inc
jb
dec
adc
or
sub
push
imul
mov
lods
fcoms
pop
int
inc
mov
ljmp
cmp
sub
dec
lret
rcrb
roll
sbb
pop
imul
dec
ss
jo
decl
fucomp
and
sti
js
data16
dec
lods
xor
popf
adc
cltd
xchg
push
cwtl
adc
jb
mov
cmpsl
dec
sub
add
int3
mulb
rclb
jae
insl
sahf
loopne
mov
xor
ljmp
dec
mov
lock
daa
and
mov
int3
push
cmp
movsb
cmp
and
les
xor
nop
test
repz
pop
mov
mov
cs
fsub
fldl
lea
in
xlat
push
cmp
movsl
or
stos
mov
ss
sarb
xor
push
gs
jo
xor
fs
adc
pusha
cwtl
xor
xor
mov
or
xor
incl
lcall
test
jne
movsb
les
cmpsl
pop
or
cli
ja
ljmp
sub
shr
adc
test
jb
jo
loopne
push
and
mov
js
loope
xchg
dec
or
aad
jb
in
pusha
dec
pop
add
mov
mov
lods
xchg
lret
adc
mov
outsl
inc
and
cmp
out
int3
fs
mov
push
add
inc
or
lret
ror
ss
cmp
pusha
out
jno
mov
and
pop
mov
inc
adc
aad
movsb
adc
sti
xchg
jmp
and
and
fdivr
cmc
mov
sbb
loope
dec
add
xchg
xchg
mov
adc
int3
pop
cmc
jle
xchg
or
repnz
xchg
add
in
push
ss
into
inc
sbb
jae
jne
mov
lods
cmp
sbb
and
xchg
dec
insl
scas
xor
fst
les
adc
movsl
mov
lahf
in
mov
das
jns
and
subl
and
sbb
lahf
subl
pop
sbb
dec
shll
sbb
xor
mov
repz
sbb
add
cmp
mov
inc
sarl
xor
jns
fildl
stos
lods
pop
pop
inc
imul
int3
out
mov
notb
fmulp
imul
ret
leave
sbb
out
sub
inc
sbbb
inc
jno
mov
cmp
sti
mov
dec
mov
dec
dec
in
fcmovb
and
icebp
repz
in
mov
xchg
fstl
add
push
dec
inc
mov
das
cmc
cmp
inc
mul
xor
cltd
jnp
stc
ret
stos
ss
cld
movsl
into
mov
dec
sub
sub
push
xor
lds
jnp
push
es
cld
add
push
test
pop
xor
lahf
inc
in
test
fsub
xchg
popf
add
scas
in
gs
sub
xchg
dec
cmpsb
mov
mov
loop
mov
pop
fwait
push
inc
inc
xchg
pop
repz
adc
insb
das
mov
add
and
lret
jg
test
stos
pop
push
test
inc
push
dec
loope
or
ficomps
sub
out
push
mov
mov
ss
or
rcr
pop
roll
pop
mov
dec
lret
jl
movsb
xchg
and
daa
andb
loope
jp
jno
sti
mov
fbstp
int
jl
cmp
xor
mov
inc
jbe
into
imul
cmp
in
push
adc
insb
fidivl
jg
leave
or
flds
pop
aad
xchg
xchg
xor
aam
ds
cmp
cmp
leave
mov
out
adc
sbb
inc
and
cmc
mov
pusha
push
scas
sub
fldl
out
sbbb
outsb
cltd
cld
out
pop
cmp
stc
dec
insb
pop
push
and
es
mov
fldln2
jmp
mov
ret
popf
cmp
test
pop
and
call
lods
pop
repz
cmpsb
movsl
scas
or
cmc
xchg
mov
sbb
ret
les
mov
push
cmpsb
fldt
pusha
ds
outsl
lock
dec
or
xchg
mov
push
push
enter
pop
cli
push
and
out
shll
sti
daa
hlt
and
test
sbb
adc
nop
call
xchg
je
test
loop
jmp
inc
outsb
sar
inc
adc
cltd
imulb
ljmp
stc
adc
mov
jo
out
insl
dec
push
jle
jmp
add
and
fnstcw
repz
jno
sbb
mov
mov
mov
dec
into
sbb
mov
int
push
out
das
sub
sbb
xchg
sub
xchg
push
shl
mov
jg
outsl
pop
mov
rcll
fistpl
xchg
in
and
add
fnsave
loop
or
std
mov
fs
loope
ja
mov
or
jg
jb
pop
int
ja
xor
pop
xchg
jnp
ficomps
lods
rcrl
or
push
or
pushf
pop
movl
nop
cmp
addr16
add
cld
jnp,pn
es
lea
xor
and
das
sub
push
cwtl
mov
add
std
push
push
mov
dec
pop
ja
cli
out
das
popa
je
mov
cmp
mulb
cltd
sbb
sub
mov
loopne
push
les
cwtl
xchg
out
stos
flds
das
data16
add
dec
xchg
inc
scas
or
adc
lods
imul
xchg
sbb
shrb
sarl
inc
dec
pop
add
ror
arpl
insl
pop
out
int3
cmpsl
insl
leave
in
ja
mov
int3
pusha
popf
lds
mov
in
or
int
das
or
dec
inc
xor
cmovl
and
cmp
jg
dec
sti
pop
fildll
fmul
out
lock
adc
or
pushf
subl
imul
popaw
pop
shr
cmp
mov
xchg
fs
js
add
les
mov
mov
adc
idivl
in
in
test
sub
mov
mov
or
gs
stos
inc
ja
lret
leave
mov
xor
push
fsts
pop
pusha
rolb
mov
push
sbb
lret
mov
lahf
mov
jb
and
fdivrs
lahf
call
ss
mov
xor
xor
cmp
mov
cli
jbe
dec
outsl
lods
lods
dec
dec
push
push
std
gs
cmpsl
das
and
cmp
cmpl
mov
inc
sti
jle
sbb
loop
jnp
sbb
aaa
pop
mov
jp
mov
shl
push
or
dec
sub
xchg
repz
sub
roll
pop
insb
jl
add
sub
cmc
rcrb
fwait
sub
daa
jg
mov
pcmpgtd
out
loop
push
mov
and
adc
inc
movsb
push
push
dec
scas
sbb
lods
and
mov
jle
pop
inc
addr16
sbb
movsb
lods
call
add
add
iret
sub
addr16
repnz
inc
pop
fsubl
jns
sub
push
test
fisubl
lret
test
outsb
sub
xchg
push
stc
mov
and
leave
dec
cmp
ret
pop
test
es
jo
fwait
int3
inc
mov
shl
mov
test
loopne
xchg
jle
aam
mov
bound
inc
loope
xor
pop
or
dec
inc
cmpsl
sar
adc
cld
ret
cmp
jne
sarb
loope
enter
mov
xor
mov
xchg
out
ficoml
sahf
mov
mov
push
xchg
mov
inc
mov
cmp
cmp
jo
push
cltd
dec
out
mov
pop
dec
xor
pop
adc
lods
mov
xchg
pop
sbb
jmp
mov
rcr
cmp
bnd
aam
and
mov
pop
mov
hlt
cmp
xor
xchg
mov
mov
fs
gs
rcr
es
lahf
lret
outsl
or
arpl
addb
lods
or
xor
push
xchg
push
jbe
sar
sbb
cmpsb
fidivrl
dec
fsubs
mov
and
scas
imul
loop
and
in
in
movl
shlb
and
popf
inc
cs
std
es
xor
mov
push
test
hlt
aad
test
adc
sbbl
xchg
or
andb
loopne
lock
fisubrs
dec
cmp
pop
in
int
incb
xchg
xor
jbe
rcrb
lahf
fcoms
imul
mov
push
fdivrl
xlat
and
jge
pop
sub
push
sahf
test
pop
xchg
mov
fmull
dec
and
push
gs
pop
insl
dec
mov
adc
pop
dec
icebp
movsb
add
fwait
and
xchg
cmp
jae
iret
movsb
test
nop
or
addl
sub
mov
inc
pusha
aaa
or
add
adc
adc
subl
into
adc
scas
sahf
pushf
lods
inc
test
sbbb
insb
inc
inc
push
lcall
ljmp
push
imul
add
fdivl
or
call
sbb
add
sahf
fwait
and
div
mov
jp
cmpsb
adc
rcll
and
stc
xor
mov
rclb
add
es
mov
int3
mov
jmp
stos
and
jmp
or
push
aaa
jne
loopne
out
mov
fildll
or
cmp
inc
jnp
insb
add
fwait
mov
cmp
cwtl
cmc
ds
ljmp
mov
push
incl
cli
out
push
fdivp
call
and
pop
pop
addr16
stos
xchg
lods
jmp
mov
outsl
jge
jge
push
cmp
push
iret
out
pop
xchg
jmp
ret
cmpsl
into
push
xor
dec
in
imul
out
xchg
mov
aas
pop
xchg
push
jnp
lods
imul
divl
inc
pop
mov
add
stc
nop
ja
mov
jle
pop
ret
mov
imul
inc
in
js
pop
sub
test
mov
call
push
and
sbb
sarb
int3
jmp
leave
jg
dec
pop
push
sahf
jb
enter
test
pop
mov
cmpsl
out
xchg
subb
push
sub
adc
mov
decl
in
rolb
leave
xor
mov
push
mov
popf
jno
pop
or
popa
out
or
mov
stos
adc
mov
xor
popf
fisubrl
sub
push
push
dec
pop
push
ljmp
ja
cld
adc
xlat
sbb
mov
mul
out
arpl
mov
xor
shrb
add
sbb
jmp
in
pop
cmp
dec
in
jmp
xchg
repz
push
incb
xchg
scas
cmp
loope
lods
sbb
and
movsl
pop
jns
xchg
or
ss
fildll
scas
sbb
mov
imul
sbb
stos
in
jo
or
imul
out
mov
insb
sbb
pop
iret
inc
repnz
xor
in
adc
mov
inc
push
pop
xchg
sarl
and
add
mov
xlat
xchg
sbb
fstp
mov
sahf
mov
and
adc
cmp
test
das
mov
jg
mov
fcomi
hlt
sbb
sbb
fcomip
push
adc
loope
sbb
ror
addb
in
ret
fstpt
mov
outsb
sti
pusha
cmovae
adc
lea
adc
add
aaa
push
shlb
add
fnsave
lahf
adc
mov
mov
iret
adc
jp
imul
jp
jbe
xor
push
stos
sarb
out
or
rcll
jge
or
das
sub
loope
orb
icebp
jo
fmul
cmpsb
shl
xchg
sub
pop
movsb
je
pusha
xchg
outsl
adc
test
cltd
out
jg
sbb
mov
int
pop
aad
adc
push
loope
and
cmpb
cld
jo
sub
jno
adc
inc
mov
fnstsw
add
pop
int
mov
jns
hlt
lahf
iret
sbb
rcr
sbb
aam
leave
insl
js
mov
std
loope
in
imul
iret
xchg
push
mov
jae
aad
cmp
jbe
fwait
idivl
in
mov
xchg
sbb
cld
push
lret
pop
sbb
sub
in
push
pop
and
mov
stc
pusha
sub
jns
or
jmp
ret
cmpsl
ret
fnstcw
mov
test
scas
cwtl
jne
push
cs
fnstcw
lds
movsb
mov
les
iret
mov
orl
rcrl
mov
sub
stc
mov
xchg
sahf
xchg
iret
and
daa
pop
jg
dec
jle
mov
jbe
test
dec
lret
gs
or
pushf
cmove
nop
push
push
xchg
sub
add
out
mov
inc
pop
sbb
aad
cmp
pop
out
movsl
push
jns
imul
orl
jecxz
push
cmpb
in
push
cli
ljmp
repz
jl
test
jbe
mov
cmp
ljmp
lcall
leave
mov
dec
out
bswap
lea
leave
or
lods
fistl
nop
les
out
and
out
inc
testb
dec
sti
inc
xor
jmp
adc
ret
mov
jbe
lods
mov
and
scas
fildl
popa
popa
xchg
sahf
prefetcht1
ret
out
jno
gs
push
int
mov
cld
rolb
jb
ficomps
mov
and
adc
insl
popf
inc
lods
xchg
dec
not
push
ja
mov
mov
adc
aaa
pop
push
add
pop
popa
push
stos
lret
push
mov
insl
outsb
lods
loop
xchg
ja
xchg
push
xlat
in
lret
and
dec
pop
cmp
or
adc
mov
sub
pop
inc
sbb
adc
imul
xchg
inc
cli
cmp
push
lret
dec
sbb
test
dec
out
orb
mov
jge
mov
sub
mov
pop
out
jae
inc
add
and
mov
mov
jbe
arpl
dec
mov
cmpsl
inc
pop
pop
pop
mov
in
pusha
sbb
enter
outsl
fidivl
dec
inc
iret
sbb
dec
out
ss
mov
pop
jmp
scas
test
aas
push
push
cmp
loopne
out
cmp
fcompl
imull
mov
adc
cmpsb
in
xchg
rclb
sub
outsl
inc
shlb
or
add
and
mul
mov
jmp
xor
cmpsl
test
xor
adc
daa
push
gs
divl
pop
push
pop
loopne
inc
xor
fadds
addr16
inc
movsl
sbb
jge
adc
inc
clc
addr16
fsubrp
adc
jmp
mov
xchg
das
mov
jmp
and
sub
jp
insl
in
xor
mov
and
lret
dec
in
movsl
out
pushf
pop
dec
loop
clc
es
mov
leave
icebp
sbb
jb
rcl
int
iret
lret
fstps
cmc
cmp
test
dec
push
and
add
out
mov
rcll
and
push
std
or
xor
insl
sbb
mov
sbb
cmp
int
subb
dec
mov
bound
xchg
shlb
or
mov
inc
in
xchg
xchg
cmp
popa
xchg
cmp
mov
mov
inc
dec
jmp
stos
cwtl
adc
jne
sub
jns
int3
dec
out
lret
push
pop
add
or
jmp
sbb
cli
sbb
cli
popf
add
ficompl
cli
dec
or
andb
push
push
or
cmpsb
dec
sub
loope
imul
fstl
sub
and
sti
dec
lcall
test
sar
repz
fiadds
dec
mov
cmp
cmc
inc
and
cmp
push
jmp
test
inc
loope
pop
jl
jno
xor
call
ret
es
push
repz
pop
imul
movsb
ret
mov
adc
inc
push
add
pop
icebp
aam
add
pop
idivl
gs
push
pop
aam
arpl
jp
and
xor
jo
mov
ss
pop
dec
mov
xor
cmp
ja
add
adcb
std
lret
loop
push
add
paddsb
mov
cwtl
sbb
icebp
lods
pop
fwait
sbb
std
fwait
out
jmp
inc
out
ss
adc
mov
ss
xchg
and
xchg
imul
jle
jb
dec
icebp
test
pop
into
nop
jg
cli
outsb
inc
stos
mov
sbb
rolb
inc
aaa
sti
ss
test
xor
mov
pop
outsl
xor
cli
adc
bnd
inc
call
lock
ljmp
loop
andb
out
push
push
cmp
xor
and
mov
mov
push
rcll
pop
xor
jns
lcall
fcmovbe
scas
jb
notb
mov
push
pop
leave
lcall
stos
inc
push
sbb
rcrb
sbb
sbb
add
out
mov
in
mov
adc
and
ja
and
xchg
mov
push
add
in
mov
js
mov
inc
and
sarb
or
sahf
das
pop
jl
jecxz
in
cmc
cmpsl
push
xchg
cmpb
or
jmp
and
pop
mov
jl
cmp
jecxz
hlt
push
dec
fisubs
mov
jo
mov
int3
and
mov
fcompl
out
and
sub
jb
sub
fcoml
repnz
pop
inc
xchg
notl
pop
pop
xchg
ret
push
dec
arpl
addr16
outsl
imul
pop
sub
jae
mov
xchg
fstpl
cwtl
outsb
hlt
rcrb
lock
inc
or
mov
arpl
pop
xchg
xchg
movb
pop
mov
iret
sbb
adc
and
rorl
cmp
mov
inc
repz
fidivrl
test
rol
mov
push
pushf
pop
cli
add
rol
cmp
out
pop
add
push
gs
jp
mov
push
jbe
add
notb
jns
sbb
add
sub
loopne
jmp
sbb
imul
add
inc
sbb
xchg
pop
xchg
jge
stc
add
sub
jmp
in
add
inc
jg
test
push
push
sub
lret
mov
mov
cmp
pop
fdivrp
aas
pop
repnz
lcall
xor
dec
cs
cld
cld
xchg
out
adc
enter
pop
das
mov
arpl
xor
xchg
mov
cmpsl
repnz
push
repnz
outsl
imul
shl
xor
cmp
mov
popa
mov
lahf
jnp
sbb
sbb
sar
cld
xorl
pushf
jnp
leave
mov
pop
inc
neg
mov
iret
jnp
mov
add
xor
jo
pop
mov
mov
mov
fwait
test
inc
push
xor
sub
out
jbe
push
aad
dec
lods
test
mov
scas
mov
mov
sub
xchg
xor
cmp
inc
or
iret
ljmp
adcl
notl
gs
push
dec
fdivl
loope
xchg
inc
or
lods
lret
mov
fimuls
mov
mov
call
jae
cltd
lock
in
sbb
idivl
mov
fcompl
int3
push
in
in
insl
ror
dec
sbb
imul
adc
xchg
cli
adc
mov
pop
jl
daa
sbb
add
out
sbb
sahf
mov
jo
inc
cmp
sbb
stos
stos
add
mov
ret
jo
lret
inc
xchg
inc
mov
mov
in
outsl
fcoml
push
mov
mov
mov
call
in
icebp
adc
inc
cmp
jae
add
and
dec
or
dec
xor
cmp
and
jbe
dec
lds
insb
les
dec
mov
dec
clc
push
stc
sbbb
or
popa
jne
enter
inc
mov
xchg
div
test
scas
out
into
pop
stos
pop
pop
add
push
mov
adc
jge
inc
sbb
aam
push
in
rcl
mov
je
pop
or
ret
or
aas
adc
dec
test
xchg
cld
shrl
andl
rcr
mov
jnp
fistpll
mov
xchg
js
xor
movaps
out
imul
cld
repz
inc
in
mov
sub
mov
out
jg
hlt
mov
movsb
or
push
cmp
repz
dec
repnz
mov
aaa
sub
in
inc
push
inc
imul
add
pop
in
inc
mov
out
xchg
jo
mov
mov
sbb
xchg
inc
xchg
inc
lret
das
sbb
inc
out
jg
data16
ret
adc
mov
dec
add
jb
jl
push
insb
lods
daa
mov
test
xor
mov
dec
aas
in
out
mov
cmpsl
aaa
fcmovne
in
sub
enter
dec
rorl
insl
in
pop
mov
insl
popf
adc
mov
cwtl
sbb
adcb
pop
inc
mov
cmpsl
and
test
inc
mov
test
adc
iret
movsb
out
dec
or
mov
cltd
add
xlat
sti
int
loopne
mov
leave
cmp
int3
ja
fmuls
bound
mov
mov
aad
in
lods
dec
add
sarb
jne
inc
mov
ja
xor
pop
aad
jecxz
and
ret
mov
jl
icebp
hlt
and
outsb
xor
out
mov
push
lds
sahf
cld
lcall
gs
cmp
in
add
xlat
fdivs
fisttps
push
pop
sbb
out
ret
ljmp
push
push
js
mov
pop
outsb
sbb
sbb
xchg
adc
lods
ljmp
dec
and
loopne
push
jbe
jge
xchg
sbb
out
mov
cs
ds
pop
clc
push
lods
mov
gs
or
jno
gs
fsubr
js
mov
test
push
pop
push
cmp
adc
jmp
dec
sbb
mov
rcr
jo
leave
dec
push
and
mov
pop
cwtl
ljmp
mov
imul
mov
sub
shll
ret
aas
xor
xchg
lcall
add
stos
ret
pop
mov
mov
cmpsb
inc
fsubl
cwtl
and
pushf
sti
xor
pmuludq
and
inc
nop
in
loopne
dec
xchg
lret
repz
test
out
push
mov
xchg
out
cld
cltd
inc
negb
bndldx
push
lret
sub
loop
xchg
or
sub
cmp
dec
int3
xor
xor
outsl
shrb
ret
out
lea
stc
stos
in
bound
fdivr
mov
les
mov
std
pop
cmp
fbld
sbb
cwtl
out
xchg
lahf
lcall
loope
mov
cli
mov
jle
les
mov
mov
repnz
test
ret
fs
pop
xchg
repnz
loope
mov
adc
adc
ret
push
adc
mov
adc
xor
pop
dec
jae
lcall
daa
xor
idiv
cmc
sub
repz
cli
mov
sbb
in
mov
fisttps
int3
repz
or
cmp
xor
bound
cmpb
add
out
mov
mov
ficomps
es
call
lods
mov
in
aad
or
movlps
xchg
jo
fidivl
push
jle
push
decb
jno
mov
sub
shl
fisttps
fistl
xor
jnp
mov
add
jbe
rcll
shll
popf
inc
aam
or
push
aas
inc
mov
and
sub
insl
pop
fucomi
pop
aam
ljmp
pushf
adc
push
xor
call
push
sbb
cmp
mov
xchg
lcall
sub
adc
outsb
cli
or
mov
xor
icebp
dec
or
push
sub
and
shl
daa
sub
sbb
rcrl
inc
pcmpeqw
pop
fidivrs
lret
test
cmp
shrl
movsl
xchg
adcl
sub
mov
xor
aad
sbb
inc
mov
cmp
or
add
mov
push
mov
mov
pusha
and
shlb
mov
pop
lock
xchg
inc
cmpsb
in
xchg
push
push
pop
ret
js,pt
lods
mov
das
mov
add
stc
xlat
xorb
pop
mov
jge
fidivl
cmpsb
lahf
lods
mov
mov
mov
mov
sbbb
popf
rcrb
repnz
nop
daa
push
xchg
mov
inc
std
dec
outsw
out
ficompl
rorl
or
pop
xchg
addr16
out
ja
scas
add
fnsave
rorb
subl
call
pop
out
lds
fnstsw
push
mov
cwtl
add
pop
mov
adc
aaa
pusha
in
addr16
push
adc
xchg
and
cmc
and
std
fwait
cld
or
cmp
or
mov
jl
divb
into
loope
dec
js
shlb
or
push
mov
stos
nop
sbb
cmp
push
sbb
out
adc
sub
loopne
test
mov
ffree
jnp
mov
test
fstpl
les
mov
push
sbb
insb
aas
jns
or
xchg
xor
pcmpgtd
push
loop
or
adc
js
sub
xchg
pop
or
out
adc
sub
adc
jmp
mov
xchg
cmp
cmc
xlat
xchg
mov
jbe
lret
adc
ja
mov
fistpl
in
sbb
xchg
lds
cmc
mov
rcrb
sub
cwtl
mov
adc
jle
aas
mov
pop
mov
inc
std
inc
cld
mov
pusha
push
ljmp
sbb
call
and
dec
das
test
test
add
jnp
movb
xchg
xchg
xor
sti
lret
adc
lahf
mov
mov
dec
stc
xchg
sbb
cmp
mov
adc
dec
add
enter
sbb
sbb
aad
lcall
add
mov
xchg
popa
ficoml
out
jns
push
ja
push
stos
ja
test
shl
adc
loopne
clc
adc
lock
mov
pop
dec
clc
jge
lods
pusha
sub
popf
in
call
adc
cwtl
test
inc
cmp
xor
sbb
ljmp
add
push
imul
adc
test
inc
pop
pop
mov
mov
jg
mov
pop
lds
lds
pop
pushf
adc
mov
and
fstpl
and
stos
xor
mov
dec
leave
out
jg
pushf
cmp
lret
jle
loop
sar
sbb
int
push
icebp
icebp
popf
js
fidivs
fnstcw
dec
jo
pop
iret
push
sub
in
push
pop
js
and
sbb
xor
mov
mov
jno
pop
xchg
xchg
jp
mov
sub
inc
sbb
loop
push
cmp
push
xchg
loope
rolb
adc
xor
sti
push
mov
mov
std
stos
insb
jnp
insb
ror
loopne
je
xchg
sub
jl
xchg
xchg
adc
lock
movl
inc
stos
push
les
aam
cld
movsl
xor
out
enter
mov
hlt
jmp
dec
adc
xchg
xor
fwait
imul
in
mov
daa
out
subb
test
mov
icebp
xchg
dec
jo
or
add
cmc
cmp
xchg
pusha
add
test
push
int3
cmpsb
xchg
int3
cltd
push
or
ret
mov
call
ds
dec
ret
mov
xlat
repnz
dec
outsl
mov
pop
stc
andb
pop
rolb
and
mov
add
sbb
push
je
fnstsw
dec
mov
mov
jo
and
je
call
fwait
inc
push
in
mov
fcoms
jle
outsb
push
ret
lods
sbb
adc
enter
mov
stos
sbb
jp
dec
mov
pushf
sbb
inc
lods
mov
daa
incb
and
push
testl
pop
mov
pop
cmp
jge
daa
mov
leave
dec
aam
lcall
outsl
xorl
dec
mov
push
sub
pop
repz
mull
push
cmp
sti
inc
push
jnp
cwtl
mov
jnp
stc
adc
inc
fistpll
jno
sar
add
cmp
or
pushf
xor
int
jnp
in
jo
aad
sti
mov
out
mov
data16
push
pop
js
out
scas
push
and
cmp
sbb
or
jp
dec
dec
ret
fildl
sbb
cmp
and
fs
lds
mov
inc
xchg
xchg
int3
mov
ret
inc
add
sbb
leave
addr16
cltd
and
dec
out
or
inc
leave
ljmp
xchg
negb
sbb
and
call
stos
push
out
cwtl
arpl
and
sub
aam
fcompl
ret
inc
and
lods
pop
push
cwtl
and
adc
cmp
cli
dec
std
out
xchg
sub
mov
cli
sub
sub
ljmp
or
xchg
ret
push
and
sub
loop
repz
int3
dec
lret
cwtl
pop
movsb
add
adc
jns
fsubrs
aas
xor
aaa
mov
add
or
sar
daa
and
lahf
mov
es
movsb
mov
in
mov
or
addb
xchg
clc
ljmp
lahf
push
in
or
ret
mov
clc
mov
pop
cmc
dec
mov
jnp
or
loopne
sbb
mov
sub
xor
dec
cmp
pop
jg
xor
ds
xchg
cltd
into
sub
dec
sub
arpl
push
inc
in
jmp
lret
mov
lea
imul
add
cmp
repz
shlb
ror
mov
or
mov
insb
pop
push
mov
and
pushl
mov
lahf
call
movsl
mov
imul
lds
clc
out
xchg
adc
jp
js
mov
jb
adc
stos
cltd
or
cli
loopne
imul
xor
cmp
push
iret
shlb
outsb
sbb
repnz
rclb
mov
and
fisttpll
shr
pushf
adc
jp
lock
mov
dec
jb
ds
push
pop
mov
adc
mov
popf
pop
sbb
loopne
imul
add
cmpl
mov
test
pop
outsb
sti
cltd
add
scas
movsb
insl
movsl
push
fiadds
cwtl
ja
enter
xlat
inc
cld
cld
xchg
movntq
pop
repnz
mov
adc
in
xor
je
xor
out
enter
movsl
scas
arpl
lret
lods
xchg
mov
pop
xor
inc
mov
lcall
out
ljmp
scas
and
int3
jbe
sbb
ljmp
lret
ffreep
scas
jb
lods
lret
fisttpll
xchg
and
push
mov
jl
push
adc
fldcw
stos
cli
dec
mov
and
pusha
pop
divb
add
xchg
scas
push
dec
xor
dec
cmp
test
fsub
mov
movsb
pop
insl
lds
xchg
repnz
notb
dec
popa
cmp
out
fmulp
mov
fs
push
bswap
cwtl
pop
mov
fwait
jns
lahf
and
sub
cmp
xchg
sbb
lock
xor
mov
mov
xchg
iret
dec
cmp
push
push
mov
sahf
fists
popa
lods
ja
add
adcl
xchg
adc
scas
out
insl
pop
cltd
cmp
out
pusha
push
sbb
addr16
dec
mov
mov
xchg
pop
adc
sub
push
xchg
pusha
lock
push
insb
test
inc
lret
dec
popf
ss
lcall
pop
negb
pushf
cmpsl
xchg
inc
in
and
insb
sub
pushf
mov
push
jge
nop
or
xor
aam
and
insb
addl
cmp
xor
dec
push
pop
test
inc
pop
out
mov
xchg
jecxz
je
mov
push
mov
dec
js
shl
and
test
push
ret
pop
pop
pop
lods
in
dec
lahf
sti
inc
popf
test
xlat
nop
ljmp
mov
repnz
mov
out
cmp
jmp
adc
pop
std
nop
mov
sbb
test
nop
add
dec
jg
push
cmp
mov
cmp
mov
pop
sub
push
mov
inc
dec
sub
jmp
jp
jle
int3
dec
jne
jbe
std
sub
imul
push
test
lock
lahf
fnstcw
jbe
sbb
pushf
mov
inc
inc
sub
push
or
jno
adc
or
sub
std
ds
scas
xchg
pushf
adc
mov
cld
mov
ret
add
dec
sub
movsl
stos
fwait
mov
std
aam
mov
adc
in
scas
in
mov
mov
outsb
std
adcb
mov
pop
aas
xchg
mov
sub
adc
cltd
scas
push
xor
pop
lret
xchg
lods
push
fisttpll
shlb
cli
xchg
mov
int3
aad
sbb
mov
add
and
imul
mov
dec
cmpsb
aad
mov
addb
movsb
jns
sarb
pop
adc
fcmovne
dec
mov
fnstcw
loopne
dec
sbb
xchg
repz
dec
inc
jns
cli
ret
sarb
pop
mov
push
mov
adc
bound
adc
jbe
cwtl
mov
xchg
fmul
push
imul
jbe,pn
and
ret
inc
jno
jle
aaa
loop
mov
js
add
mov
sub
test
xchg
jbe
lods
dec
stc
shr
call
jbe
daa
mov
incb
add
outsl
cmp
xchg
in
or
fisubrl
rorb
loope
sbb
test
pusha
das
andb
cli
xchg
dec
xor
aaa
push
xchg
push
jg
ja
enter
jmp
fildll
dec
lods
nop
push
mov
out
je
enter
dec
test
push
scas
sub
flds
xor
dec
add
shl
bnd
sub
mov
xchg
sbb
or
sti
xorb
cli
mov
jmp
or
mov
mov
mov
push
xor
shll
into
or
sbb
test
outsb
mov
xor
cwtl
sub
add
dec
add
mov
and
aas
cli
ss
and
pusha
push
loope
movb
add
imulb
js
add
and
inc
pop
sti
xchg
inc
mov
sub
loop
inc
lret
movsb
cmp
and
cwtl
stc
icebp
mov
arpl
adc
aad
dec
in
es
and
mov
mov
push
jno
add
in
shlb
xor
xchg
mov
int3
ss
outsl
sub
xchg
sbb
test
pop
insb
mov
popa
mov
std
data16
aad
sbbb
push
cmp
dec
js
and
roll
sahf
add
inc
fbld
add
xchg
lcall
inc
xchg
repz
ret
into
jmp
pop
push
inc
pop
xorl
outsb
xor
andb
fistps
loop
bound
out
and
mov
les
and
out
js
imul
clc
push
lcall
xchg
pop
lock
mov
push
aad
or
dec
xchg
dec
xchg
clc
lods
sbb
rcrb
lea
add
and
cmp
out
hlt
cmpsb
mov
iret
push
pop
addr16
bound
mov
test
xchg
push
lret
or
pop
pop
cwtl
push
pop
cltd
and
inc
enter
inc
mov
adc
ret
adc
jmp
add
pusha
test
leave
sbb
loopne
xchg
jle
and
sbb
lret
idivl
mov
enter
add
and
adc
scas
xchg
roll
xchg
adc
push
daa
or
mov
test
dec
mov
out
mov
pop
dec
mov
xchg
push
cmp
jp
inc
mov
fadds
jne
lcall
push
pusha
push
jns
adc
nop
inc
inc
sbb
inc
mov
push
ds
ja
and
jl
mov
nop
test
mov
fiadds
stc
push
cld
cli
sarb
pop
cwtl
cmp
jnp
xor
mov
xor
int
xchg
and
mov
jnp
fidivrl
js
lret
out
sti
repnz
fimuls
cwtl
iret
inc
ss
sub
sbb
into
sahf
dec
rorb
test
xlat
out
jbe
mov
pop
imul
fcmovne
cmc
std
sti
jb
xchg
mov
jmp
pop
ror
test
jae
inc
mov
aaa
mov
cmp
jecxz
es
scas
cwtl
sarb
dec
jae
dec
mov
mov
call
push
fcompl
fdivr
cmp
jo
pop
push
xchg
rolb
fnstsw
xor
test
xchg
bnd
xchg
dec
push
mov
and
push
ja
pop
out
gs
out
and
incb
mov
mov
push
out
ljmp
fistps
jb
insl
adc
outsl
jg
xlat
insb
lods
add
mov
fcoml
fldt
sbb
mov
dec
mov
lods
test
shll
push
inc
sbb
popa
mov
clc
xchg
pop
shll
inc
in
nop
add
cmc
cmp
cld
popa
and
outsb
jge
mov
clc
xchg
fs
dec
std
ljmp
push
inc
stc
dec
mov
fld
icebp
pushf
cltd
fisttpl
cld
mov
aad
pop
aaa
cld
xchg
dec
cmpsb
cwtl
in
jb
sahf
xchg
sub
repz
loope
push
ret
mov
bound
fcomps
xchg
push
outsl
repz
es
jmp
dec
dec
insl
xor
das
xlat
jns
pop
mov
inc
xchg
add
xchg
sbb
adc
adc
or
divps
int
movsb
movl
and
cmpsb
int3
jmp
fwait
pop
fadd
inc
fs
andl
pop
cmp
adc
or
ja
scas
out
repnz
mov
pop
int
and
adc
clc
js
xchg
rol
cmp
inc
dec
add
cmp
sahf
fisubs
lcall
aas
dec
jns
inc
lahf
cmpsb
mov
xchg
clc
rorl
ror
adc
and
fbstp
or
jb
popa
fbld
push
sub
int
xchg
dec
roll
and
int
pop
push
je
sbb
sub
dec
pushf
mov
stc
dec
andb
pushf
fsubs
xor
jno
jne
dec
xchg
xchg
add
inc
inc
cltd
stos
push
add
imul
sub
inc
xchg
popa
negl
clc
ss
es
xor
mov
mov
sahf
lds
push
test
testl
inc
je
jns
sbb
lds
scas
sub
repnz
sbb
sbb
enter
pop
mov
stos
push
jne
arpl
je,pt
xlat
ja,pn
adc
add
loope
insb
inc
xor
stos
xchg
mov
bound
sub
dec
dec
std
es
jbe
cmp
movsb
mov
arpl
aaa
jmp
lcall
cmpsb
insb
test
xlat
test
sbb
repnz
iret
and
notl
push
scas
scas
hlt
jo
mov
jecxz
jno
lahf
mov
inc
lcall
int
mov
cli
mov
or
fsubrl
daa
mov
inc
mov
in
inc
idiv
in
and
push
and
sub
fsubr
or
or
ret
or
shr
push
push
pushf
and
mov
shlb
aaa
aas
mov
sbb
test
push
andb
adc
and
scas
mov
pop
inc
sbb
mov
clc
js
xchg
adc
out
movsb
into
adc
aam
inc
and
jp
mov
cmp
movsb
mov
mov
sbb
stos
adc
cmpsb
ret
ret
jg
mov
and
push
xchg
dec
adc
repz
jge
test
ss
inc
ljmp
push
cli
out
and
call
dec
aad
mov
sbb
pop
sbb
pop
sub
xor
add
inc
les
stc
ret
les
fmull
pop
mov
sub
xor
push
cmpl
aas
dec
adc
mov
sti
cmp
repz
roll
nop
stos
stos
xchg
jecxz
sarb
push
lods
outsb
test
cmp
ds
and
mov
adc
and
test
cmp
out
mov
xor
push
ror
rep
aaa
or
das
lret
xor
or
test
add
mov
fwait
xor
cmpl
les
or
cmc
ljmp
xor
rorb
shll
outsb
push
push
mov
mov
ljmp
and
inc
jmp
add
stos
test
fst
sub
cwtl
jl
in
cmp
ja
in
adc
faddl
add
push
leave
ss
les
ja
xor
data16
lds
fdivs
ret
push
xchg
mov
sub
sub
dec
adc
pop
add
sbb
out
or
mov
jbe
lcall
dec
xchg
sbb
jnp
push
sub
and
fdivrp
data16
scas
outsl
sbb
stc
or
adc
rclb
mov
xchg
out
dec
push
rorl
jmp
jae
popa
push
lea
xchg
shll
and
sbb
pop
iret
scas
pop
push
bound
in
push
test
mov
in
out
mov
fdivrs
incb
in
push
faddl
int3
push
pushf
add
xchg
cmc
xor
aaa
sub
subb
jle
repz
and
mov
fcoml
sub
sbb
cmpsl
mov
dec
lods
mov
adc
jae
add
xchg
pusha
and
fwait
das
jbe
inc
dec
stos
rclb
iret
push
add
fildl
xor
ds
rolb
ss
lods
sarl
jecxz
inc
add
addl
cltd
cmpsb
jecxz
outsl
test
cmp
ljmp
arpl
enter
jno
mov
out
ja
cltd
jp
not
sbb
lea
inc
mov
mov
adc
je
add
push
inc
outsl
pop
or
jae
subb
inc
cmc
dec
and
cwtl
xchg
fmuls
and
mov
push
pushf
cmpsl
xchg
mov
push
mov
push
in
gs
popf
push
xlat
mov
mov
inc
inc
call
in
stos
ja
addl
push
mov
lods
push
stos
jbe
lods
js
sub
movsb
mov
or
cli
inc
frstor
mov
jne
aaa
jno
inc
arpl
arpl
add
adc
pop
xchg
inc
and
sub
xor
loop
pop
cmp
adcb
ss
arpl
pushf
pop
imul
sub
fwait
cmp
shll
in
stos
ja
mov
xor
scas
sti
test
cmp
pop
lret
out
rorl
xchg
xor
xchg
push
cmp
gs
xorb
inc
mov
inc
stc
lods
push
add
jns
iret
inc
cmpsl
lods
mov
inc
outsb
or
mov
repz
in
jnp
push
enter
lods
cmp
fwait
jbe
mov
test
push
fsubrl
hlt
lds
ror
stos
jge
or
and
inc
xchg
mov
push
mov
cld
push
dec
cmpl
cwtl
loope
dec
pop
je
daa
add
adc
sub
test
sub
popf
lcall
cpuid
leave
dec
cltd
sti
sbb
jmp
scas
mov
add
mov
mov
testb
or
adc
xor
and
mov
and
out
cmp
in
mov
adc
and
pop
call
add
fs
dec
jle
push
jnp
push
test
ret
ss
sarl
sub
or
enter
outsb
jbe
push
inc
pop
and
out
lock
clc
mov
bound
mov
push
push
and
pop
adc
ljmp
dec
add
and
lret
ficoml
sbb
dec
int3
aaa
push
imul
mov
sbb
inc
adc
test
dec
lcall
clc
fiaddl
push
cli
out
popf
mov
push
xchg
nop
xchg
sahf
mov
in
cmpb
add
pop
or
mov
push
inc
lock
addr16
and
jmp
fstl
fnstenv
lea
jg
je
lret
dec
pop
adc
mov
test
js
sbb
jp
in
jno
xor
pop
movsl
aas
xor
shlb
andl
aaa
push
insb
imul
fisttpll
nop
dec
imulb
ds
in
mov
in
pop
sub
mov
inc
add
xor
mov
call
fwait
add
jle
or
outsb
dec
ds
mov
jbe
out
pop
xor
or
scas
jae
adc
jnp
mov
add
and
ja
lret
jno
add
mov
mov
cmc
xchg
in
les
add
hlt
scas
mov
xor
orb
push
insb
xchg
gs
jmp
fcompl
or
push
scas
mov
lods
cmc
inc
jge
iret
lock
rolb
or
xor
jo
dec
fs
adc
add
xchg
dec
in
popa
cwtl
in
out
inc
sbb
movsb
orl
bound
mov
into
xchg
jo
fidivrl
cmp
push
fildl
sti
jl
xchg
fwait
lds
adc
dec
pusha
movsl
pop
popa
xchg
dec
and
mov
lcall
inc
lds
into
mov
cmp
dec
and
cmp
rcrb
jb
or
xchg
test
cwtl
xchg
js
jp
ret
sbb
aaa
fmulp
xchg
ficoml
sbb
push
xchg
pop
jle
scas
lcall
push
das
inc
and
push
jbe
cmp
jp
movsl
push
xchg
pop
jmp
mov
stos
test
xchg
inc
ficompl
push
lea
add
inc
push
push
in
and
je
rcll
lcall
adc
pushf
fmull
sbb
aad
gs
jmp
inc
jbe
mov
pushf
sbb
mov
push
jecxz
das
or
xchg
inc
rorb
jb
xor
mov
scas
jmp
inc
push
jb
jbe
pop
out
test
in
call
sahf
mov
or
sbb
xchg
popf
mov
xchg
stc
inc
dec
lcall
insb
jne
sbb
and
jmp
in
js
inc
push
lds
in
jge
scas
dec
nop
push
push
xchg
pop
pushf
pushf
sbb
lds
add
testb
pusha
dec
adc
and
fdivrs
std
and
out
out
xor
mov
fucomi
fwait
dec
mov
es
add
jno
mov
add
adc
mov
or
sub
lods
fstpt
and
xor
lret
fwait
lock
ret
bound
loopne
xorl
je
push
inc
mov
cmpsb
mov
fs
xchg
movsb
sbb
push
jb
pop
mov
mov
out
aas
xor
push
push
lds
int
sub
aad
inc
jb
mov
test
in
add
nop
fsub
sbb
cld
sbb
push
cmp
xchg
cmp
call
pop
push
rdpmc
ret
pop
test
sbb
flds
push
loopne
mov
lcall
and
bound
or
sub
out
test
xchg
les
sub
cld
ljmp
mov
sbb
dec
push
inc
adc
jbe
in
mov
cli
adc
icebp
rcr
push
lods
inc
cmp
mov
in
ret
in
mov
rclb
xchg
cmpl
push
jae
mov
sbb
shrb
loop
mov
push
popa
aam
push
imul
inc
das
mov
arpl
push
dec
inc
das
mov
mov
push
sbb
or
push
dec
lods
divl
fcmovu
gs
xchg
fucomp
push
push
mov
pop
fldl2e
sbb
jno
pop
or
out
xchg
or
outsb
mov
loopne
jno,pt
loop
rorl
mov
jge
repnz
push
popa
cmp
scas
mov
inc
mov
pop
xor
jge
stos
xor
insl
mov
dec
shll
inc
push
mov
jne
push
mov
sbb
imull
cmp
enter
pop
fsts
pop
jecxz
xor
jge
jnp
jnp
nopl
addl
xchg
ds
xchg
pop
or
or
jge
adcb
fsubr
push
int
daa
cmp
imul
es
popa
xchg
xor
jp
call
in
push
xor
ret
xorb
jbe
lret
out
push
cwtl
dec
nop
xchg
hlt
lret
sbbl
mov
leave
xor
rol
add
jmp
adc
mov
inc
push
xchg
popf
hlt
jp
mov
daa
dec
rcr
hlt
adc
test
mov
mov
pop
popa
fadds
add
int
cmp
in
in
shrb
pop
stc
addl
push
lahf
jge
imul
cs
xor
mov
and
nop
push
lods
fwait
mov
ss
xor
or
inc
dec
pop
xchg
dec
cld
shl
in
mov
xchg
mov
enter
imull
dec
pop
xor
pop
xchg
cmp
out
sub
ss
cmp
stos
adc
cmc
dec
out
mov
mov
pop
arpl
cmp
test
jnp
mov
cmp
test
daa
push
xchg
movl
daa
sti
push
fisttpll
cltd
sbb
push
or
je
pop
ds
movsb
pop
loop
xor
orb
mov
dec
cmc
push
mov
in
aad
aaa
xchg
and
dec
mov
mov
notb
in
sbb
adc
adc
popf
xchg
rep
das
jns
arpl
es
andb
aam
xchg
mov
dec
pushf
ja
and
fbld
push
fdivrs
xchg
stos
inc
dec
xor
adc
lock
pop
or
les
fwait
pop
jnp
cli
and
xor
shlb
xchg
and
xchg
je
scas
std
sti
movsb
movsl
loop
sub
jb
loopne
or
dec
push
mov
fnstsw
roll
ficomps
scas
cmc
xor
or
xchg
inc
aas
out
push
ret
stos
fisttpll
inc
mov
ficompl
xchg
stos
adc
leave
test
mov
dec
stos
xchg
es
ss
jae
xor
lods
in
shrb
sub
jge
adc
adc
in
jne
push
or
dec
dec
mov
mov
xchg
dec
bound
add
fs
inc
imul
test
lock
and
mov
push
nop
jne
sub
repnz
jle
test
aad
mov
dec
mov
das
xchg
lods
pop
xor
mov
nop
push
test
mov
les
clc
sbb
xlat
gs
adc
xchg
pop
mov
stos
stos
and
cld
lahf
outsl
mov
lods
mov
mov
sub
dec
into
sbbl
pushf
mov
jbe
mov
in
out
lahf
jnp
aaa
jne
pop
or
pop
aas
fmuls
jg
inc
push
cmp
repnz
push
and
add
mov
mov
pop
fiadds
inc
rcl
xor
outsb
fwait
iret
mov
iret
mov
ljmp
adc
push
cmp
adc
cmpsl
mov
pop
icebp
mov
cwtl
lcall
mov
pusha
mov
loopne
stos
aaa
leave
or
xchg
ss
orl
mov
inc
je
gs
aam
rep
cld
adc
or
sbb
aas
mov
dec
or
mov
sbb
add
jno
ljmp
push
out
dec
push
xchg
mov
int3
dec
push
pop
in
mov
cmc
in
sti
jne
rcll
inc
pop
cmp
mov
mov
sub
arpl
dec
nop
lods
mov
loope
outsl
in
adc
cmp
adcl
mov
scas
fbstp
fnstsw
int3
mov
jne,pt
lret
test
pop
mov
add
loope
lcall
pop
cli
or
xor
stos
adc
mov
mov
lcall
sahf
dec
or
mov
sub
insb
stos
mov
and
push
rcll
hlt
mov
stc
subb
ljmp
sub
ficomps
mov
leave
pop
cmp
dec
insb
lcall
lock
mov
xchg
test
mov
rcrb
mov
mov
in
ds
call
push
dec
mov
std
scas
and
sbb
mov
and
in
push
xchg
data16
pop
stos
adc
in
lods
mov
or
xchg
imul
out
mov
jns
divb
pop
sar
push
cmp
outsb
hlt
loopne
xchg
fldt
mov
push
loope
jae
jecxz
xchg
ljmp
js
enter
mov
lahf
lcall
cmp
imul
jne
sbb
filds
into
imul
jg
push
add
xor
or
stos
pop
push
in
cmpsb
jb
push
mov
negb
push
and
out
ss
jo
jns
in
rorb
xchg
cmpsl
and
incb
dec
sbb
shl
rcrw
int
dec
xor
fwait
int3
aam
mov
lea
lock
xor
loop
ret
mov
pop
lahf
outsb
test
int3
repnz
cmpsb
repnz
and
mov
jae
add
arpl
xchg
pop
out
sub
xchg
mov
add
fwait
in
call
fstps
ret
push
int3
cmp
enter
leave
cmp
icebp
mov
add
lods
jnp
decb
sub
pusha
push
out
jnp
add
nop
push
xchg
int
aad
inc
mov
jno
pop
jmp
rcl
stc
insb
leave
fs
mov
outsb
xchg
leave
mov
aas
cmp
jmp
cmp
add
dec
icebp
mov
dec
inc
outsb
push
xchg
dec
mov
pop
arpl
adcb
sbb
push
fldl
adc
aas
or
add
jnp
pushf
xchg
mov
jg
cli
lahf
pusha
mov
cmp
stos
push
xor
and
jne
push
sbb
jo
adc
inc
in
and
add
add
lods
std
xor
jl
shrb
data16
cmp
jge
xor
in
sbb
dec
add
mov
inc
imul
pushf
pop
cmpsl
lock
adc
sbb
rcrl
mov
jnp
daa
and
ljmp
jnp
sbb
lods
xchg
and
pop
fcmovnbe
aad
mov
fmull
add
xor
dec
imul
aaa
ljmp
xchg
jo
fldl
lods
add
cmp
adc
lret
scas
roll
pop
mov
cli
mov
pop
push
mov
inc
cmp
pop
push
jne
mov
push
lahf
test
loop
out
xor
lods
or
popa
pop
add
pop
dec
sub
xchg
icebp
in
push
or
movsb
shll
fstl
inc
mov
dec
lods
fidivrs
add
leave
insl
push
xor
je
test
mov
lea
sub
shlb
outsb
shlb
std
movsl
stos
add
push
cmc
pop
adc
nop
out
push
sbb
sub
mov
nop
rorb
imul
sbb
scas
push
lret
adc
push
xchg
sarb
sub
jb
je
dec
rol
jne
in
test
fstpt
insl
dec
adcl
xchg
sbb
inc
inc
bnd
jl
cltd
cli
popf
cmovns
sbb
out
add
into
sti
or
jl
dec
shrb
jmp
sub
xchg
push
mov
lret
std
or
push
sahf
mov
aad
or
ret
cltd
int3
fidivs
dec
fwait
xor
test
pushf
je
jne
xor
data16
loopne
mov
jns
in
rol
in
test
mov
cmp
mov
out
xor
roll
xchg
orb
jp
push
and
xchg
sub
jmp
xchg
pop
mov
in
jb
out
test
and
cli
xchg
sti
iret
mov
std
sbb
xchg
es
mov
cvtpi2ps
xchg
fsts
test
push
in
cmp
adc
push
insl
jns
lods
bound
inc
fists
inc
add
fwait
cli
daa
fwait
jns
pop
xlat
dec
gs
mov
jne
adc
add
mov
addr16
mov
jbe
mov
cmpsl
mov
mov
xor
push
push
mov
ljmp
sub
leave
sub
clc
sbb
or
loopne
sbb
pminsw
mov
aad
shrb
add
mov
lods
jecxz
inc
mov
and
popf
pop
test
push
fwait
mov
mov
mov
rorl
sbb
clc
pop
lret
std
xor
mov
mov
imul
aam
aaa
jmp
int3
add
or
xchg
leave
xchg
out
cmp
push
insl
pop
dec
xchg
icebp
sub
and
enter
iret
cmp
and
dec
xchg
outsb
out
or
sahf
lds
dec
stos
sbb
mov
fcmovb
out
mov
scas
sub
and
fsubrp
cli
sbb
ja
push
push
mov
mov
out
xor
es
pop
lret
inc
stos
adc
pop
daa
and
mov
pop
in
orl
js
or
and
fildl
sub
std
push
jp
rol
sub
fsubl
jae
icebp
push
popa
imul
into
repz
test
mov
xchg
dec
pop
sar
cmp
shlb
mov
stc
mov
loop
push
lcall
mov
ds
jb
mov
aaa
jo
sub
xor
jbe
neg
or
push
jo
insl
insl
cmp
das
test
bound
dec
fbstp
mov
sub
sub
loopne
test
int3
dec
xor
stc
iret
pop
enter
and
js
repnz
movsl
cmp
test
enter
mov
lret
mov
push
mov
dec
loope
cmpsb
jge
lcall
dec
lret
repnz
pop
jge
out
pop
inc
adc
adc
cmpb
adc
xchg
inc
stos
lea
fadds
ds
cmpsl
adc
lods
gs
test
jbe
and
fistps
cli
pop
gs
mov
je
adc
jbe
push
mov
pop
dec
leave
dec
fs
nop
rorl
cmp
mov
pop
addr16
adcl
or
int
sbb
mov
icebp
pop
lds
mov
jo
xchg
mov
push
push
nop
sbbl
sbbb
xchg
mov
and
pop
cmp
push
or
or
xchg
imul
sbb
or
inc
and
push
dec
xorb
jo
and
jg
xchg
sahf
inc
mov
sbb
cmp
cli
jmp
jb
jns
jb
or
sbb
pop
pop
shlb
or
gs
push
out
test
jae
adc
fwait
sbb
mov
out
cmp
mov
mov
shl
lods
leave
bound
pop
mov
lds
jmp
repnz
stc
std
lock
in
pop
cmp
fimull
jecxz
inc
cmp
insl
sbb
outsb
sub
xchg
jmp
mov
dec
addl
or
inc
xchg
jl
test
data16
sbb
andl
jne
push
cmc
pop
cmp
mov
andb
fdivrs
inc
jmp
imul
insl
jmp
cmp
repnz
or
testb
xor
push
idiv
add
lods
adc
cwtl
xchg
mov
push
ds
jecxz
cmp
pop
ds
fxch
arpl
je
xorl
bnd
loop
cmp
xchg
les
je
sahf
stos
movsl
rcrl
and
inc
adc
cwtl
lcall
cmp
xchg
lret
je
jmp
mov
std
push
push
mov
lods
shll
and
push
adc
ljmp
roll
sub
imul
push
mov
scas
sub
or
mov
fdivr
sub
pushf
lret
mov
es
or
mov
cmpb
jnp
jno
into
push
cmp
repz
scas
xor
imul
jl
push
pop
mov
imul
lods
scas
std
mov
rcrl
or
pop
loop
jg
test
and
out
or
pushf
mov
mov
out
and
adc
nop
sbb
ret
mov
dec
mov
mov
add
les
arpl
inc
inc
mov
sbb
xor
mov
clc
ljmp
fldcw
push
mov
mov
pop
mov
movsb
sub
enter
mov
mov
add
add
dec
jecxz
arpl
sbb
adc
loopne
stos
in
push
mov
fisubs
sub
int
lods
testl
out
push
cmp
ljmp
popa
les
add
mov
add
xchg
lods
lods
out
and
jb
xchg
movsb
xor
int
sbb
fsubs
adc
in
es
int
push
ljmp
dec
fdivr
pop
stos
mov
cs
imul
aas
sahf
add
xchg
test
sbb
mov
dec
popa
iret
ror
test
and
jecxz
pushf
mov
sub
cmp
dec
adc
xchg
cmc
xor
mov
popf
mov
insb
out
scas
in
and
shrl
sbb
lea
xor
out
inc
mov
jg
push
fdiv
in
test
or
fs
xor
and
sbb
fwait
and
or
fcmovne
cmpsl
mov
push
add
popf
clc
shr
or
rcrl
jge
pop
dec
pop
dec
inc
dec
fnsave
sbb
and
dec
pop
cmpsl
jae
mov
and
insb
cmp
outsb
inc
mov
push
in
cs
das
xlat
loop,pt
shr
sbb
ja
stos
scas
fxch
add
lahf
ljmp
cmpsb
or
and
decb
or
mov
dec
in
mov
xchg
adc
addr16
jb
jb
les
mov
cltd
mov
add
cs
call
shrl
push
mov
cld
pop
push
dec
jne
and
fucomp
or
sbb
xor
jmp
rorb
jbe
jmp
pop
ficoml
divb
jg
xchg
clc
fdivr
stc
cmp
push
scas
jecxz
pop
cli
mov
rorb
cmp
cmp
fsub
mov
fsubrp
or
dec
mov
std
subb
aas
out
sbb
xchg
int
test
enter
cmp
add
sbb
imul
cld
in
and
out
sbb
fwait
xchg
mov
inc
divb
inc
lahf
sbb
pop
push
dec
into
addr16
js
push
pushf
xlat
movsb
lret
jle
mov
jmp
or
ret
sbb
nop
mov
mov
dec
cmp
ds
nop
je,pn
cmp
outsb
lds
xchg
pushf
lret
mov
cmp
sbb
pop
pushf
jnp
add
aad
lock
stos
sub
out
xchg
hlt
mov
adc
mov
jnp
xor
pop
aaa
push
add
sbb
cmpsb
leave
loop
stos
push
xchg
pop
ljmp
aaa
cmp
push
movsl
cmp
arpl
bound
add
push
lcall
sbb
xlat
push
xor
mov
sbb
push
mov
sti
push
mov
sub
fwait
aas
xchg
fstpl
lods
and
cltd
fdivl
outsb
cwtl
dec
jl
inc
arpl
movsl
div
sbb
mov
add
jno
xchg
sbb
mov
repz
adc
ret
test
arpl
addr16
jns
jle
stos
dec
js
dec
je
rcrl
gs
jo
lods
xlat
rolb
adc
mov
pushl
aad
test
mov
call
popf
mov
adc
dec
stos
or
aad
jecxz
lods
cmpsb
int
lret
jecxz
stos
cmp
jge
mov
pop
ja
dec
or
jecxz
add
scas
les
xchg
push
mov
pop
shl
lahf
and
mov
leave
push
lret
xlat
and
add
iret
mov
test
fwait
push
mov
rorl
mov
xchg
mov
dec
cmc
pop
mov
jbe
or
sub
mov
mov
and
xor
je
stos
and
cltd
xor
test
lods
mov
mov
test
and
test
mov
mov
jge
test
fnstsw
aaa
add
push
inc
add
leave
jmp
nop
pop
mov
and
or
pop
xchg
sub
xor
movsl
or
pop
lods
dec
and
in
popa
or
cmc
or
add
repnz
pop
jl
jg
mov
mov
mov
test
cld
pop
add
popf
and
clc
dec
bound
push
mov
addr16
shrl
mov
divl
lds
pop
mov
adc
cmp
push
dec
inc
scas
sub
inc
scas
cmc
into
push
insb
xor
imul
sub
aaa
dec
pop
popf
jne
in
es
das
lods
mov
cli
dec
testb
mov
pop
or
fcomp
call
stos
mov
fadds
sub
inc
cmp
and
ret
add
fs
xchg
pushf
js
inc
or
pop
xor
ret
jb
scas
loop
hlt
shll
imul
in
mov
sbb
aad
shr
jge
sbb
imul
cmp
and
push
and
pop
xchg
xchg
out
sub
ljmp
sub
or
xchg
je
or
lret
jp
pop
pusha
jnp
mov
sub
pop
les
rcll
dec
xor
in
je
stc
cvtdq2ps
lods
repnz
mov
dec
xor
or
test
dec
loope
lods
xor
xlat
xchg
cltd
bound
call
xor
sbb
movsl
add
inc
add
mov
loopne
lds
or
mov
adc
jae
sub
sbb
out
xorb
sahf
pop
int
mov
mov
xchg
cmpsl
pop
roll
sbb
jo
iret
fidivrl
pushf
shlb
inc
mov
jnp
inc
fcmovnbe
xchg
out
fstps
cwtl
jl
cli
orl
cmp
addr16
push
roll
inc
loop
mov
add
push
in
sub
stos
pop
push
cmc
mov
in
mov
pop
mov
pusha
ss
shlb
pop
adc
hlt
jg
shr
cmpsl
mov
subb
aaa
hlt
daa
mov
push
lds
mov
fidivs
xchg
scas
jg
push
out
mov
mov
mov
ret
xchg
and
mov
mov
xor
push
pop
test
jo
in
add
popf
popf
dec
lcall
stc
mov
test
mov
xor
mov
mov
je
ss
fs
cmpsl
xchg
jl
dec
cs
addr16
inc
pop
ja
call
ja
movsb
fdivr
dec
mov
push
nop
jecxz
pop
and
sub
adc
adc
mov
lahf
lock
fnstcw
mov
adc
jge
lods
jge
lods
sarl
xchg
and
jbe
clc
xchg
in
mov
jg
sbb
andb
adc
fcompl
addr16
lock
or
ljmp
push
pop
cmpsl
mov
les
sub
sbb
inc
cld
sub
call
inc
mov
popa
insb
xchg
or
iret
mov
xadd
scas
repz
xchg
inc
js
insl
xor
jmp
add
cmpsb
inc
jl
das
xor
push
add
adc
mov
or
test
ret
das
hlt
call
out
das
jo
scas
aam
add
sbb
pop
cltd
rcll
xchg
mov
mov
das
out
shll
in
and
popa
mov
push
mov
or
and
sub
jge
jl
add
xor
push
fwait
sbb
sub
shl
les
pop
push
hlt
ja
std
outsl
mov
out
add
sub
in
jmp
roll
jg
fistps
imul
cmp
and
mov
jecxz
jge
sbb
pop
xor
loope
loop
data16
mov
xor
mov
and
inc
jns
add
xor
mov
xor
test
xlat
shll
xor
mov
lods
lea
inc
mov
and
lahf
std
mov
and
in
inc
test
mov
fwait
xchg
jecxz
test
jl
cmpsl
stos
xlat
arpl
and
inc
addb
or
imull
push
and
test
bound
push
out
jl
mov
or
push
jl
and
mov
cltd
scas
jnp
stos
addl
push
leave
adc
ss
dec
lcall
lahf
lahf
loopne
pop
cmpl
cli
jl
add
outsl
sbbb
xor
jb
sub
mov
add
scas
lock
cs
clc
pop
in
daa
push
imul
mov
pop
xchg
add
push
xchg
fldz
mov
shr
mov
insl
test
or
int
leave
mov
sbb
xchg
das
sub
popa
jae
daa
lcall
mov
sub
les
stos
outsl
dec
add
dec
loopne
add
or
inc
lods
lods
cmp
fisttps
push
jbe
das
jp
call
mov
aad
pop
xor
fdivs
negb
fcomip
mov
ja
sbb
fs
pop
jnp
sbb
cmp
loope
nop
add
rcrb
add
lahf
mov
loopne
insb
jb
adc
lea
adc
lock
stos
hlt
stc
pop
test
and
pop
int
js
in
sbb
mov
shrb
cld
cmc
ret
movsb
xchg
jecxz
push
mov
pusha
xor
pop
sbb
xor
iret
or
xor
test
fidivs
lret
lret
sarl
inc
dec
cmp
add
jns
loopne
add
mov
lret
outsb
inc
popa
mov
add
push
jns
inc
add
dec
inc
mov
mov
adc
aaa
add
cltd
loope
inc
and
push
jl
nop
mov
jecxz
jle
adc
dec
sbb
or
jnp
rcl
nop
das
movsb
test
mov
inc
xor
fcompl
or
xor
icebp
jo
cmp
dec
lahf
sti
xor
and
xor
jmp
pop
add
out
outsb
cmp
mov
adc
jl
dec
lcall
icebp
ret
dec
xchg
xor
rcr
xor
jae
xchg
xor
popa
stos
pop
jle
jmp
stc
mov
and
inc
movsl
mov
leave
std
loopne
jge
adcb
movsb
subb
sub
jge
test
movl
ror
cltd
sbb
push
test
jo
adc
sbb
ret
int3
pushf
pop
imul
xor
pop
scas
cltd
cmp
pop
inc
enter
cli
jno
push
pop
sub
int
or
in
rcr
dec
push
jp
jns
push
or
and
mov
jg
lods
xchg
mov
loope
mulb
add
lods
jbe
sub
jo
push
sar
icebp
lahf
xor
mov
push
inc
fwait
push
fidivs
push
mov
push
and
movsb
xchg
mov
lock
xlat
movsb
push
imul
fcoms
fisubl
and
dec
clc
ljmp
mov
jns
xor
sub
pop
out
push
out
fnstsw
loop
push
mov
rolb
or
or
xchg
insb
dec
test
int
lods
sub
add
jmp
sti
pop
pusha
fadds
jecxz
insb
bound
icebp
pop
out
into
jmp
inc
pop
decb
jmp
push
out
inc
push
dec
scas
mov
aam
adc
into
insl
mov
or
sub
mov
pop
lret
movsl
adc
pop
sub
out
inc
fcomi
mov
and
ja
add
sti
sbb
jle
push
push
cltd
mov
pop
xor
push
scas
inc
jnp
dec
stos
cld
jge
sbb
mov
sbb
stos
bound
xchg
rorb
jmp
stos
cmp
mov
in
divl
jge
and
test
push
stos
imul
add
cmp
imul
andl
pop
inc
and
add
sub
lcall
mov
dec
or
push
xchg
aad
outsb
ret
loopne
lret
ljmp
repnz
mov
xor
mov
mov
pop
xchg
insl
adc
aaa
gs
insl
push
mov
iret
jmp
cmc
popf
mov
cltd
outsb
in
jb
xor
add
enter
pop
stc
stos
movsb
fwait
cmpl
adc
ss
and
cli
sarb
fcomip
mov
je
jne,pt
dec
stc
sub
mov
xor
ds
out
lret
pop
leave
enter
add
xor
push
mov
mov
mov
pop
and
imul
dec
arpl
mov
push
lahf
dec
outsb
stc
subb
repz
push
ficompl
pop
inc
aam
push
sbb
jp
inc
add
fiaddl
jbe
xchg
cwtl
mov
mov
ss
xorl
mov
icebp
int
adc
pop
mov
pop
shrl
xchg
lahf
adc
jmp
mov
xor
inc
fs
mov
pushf
movsb
mov
push
xchg
repnz
jmp
push
mov
fildll
inc
adcl
test
and
into
out
sub
fcomp
adc
push
inc
push
cmp
mov
lret
rorb
bound
lret
cmpb
jns
pop
insb
out
add
daa
and
icebp
jp
call
ret
loopne
addb
std
cmc
mov
jle
sub
push
jne,pn
sarl
jmp
cwtl
pop
frstor
cmp
popa
ljmp
out
pushf
mov
sub
arpl
pop
add
and
xchg
and
nop
xchg
ljmp
cmp
xchg
add
stos
test
cwtl
mov
roll
inc
into
bound
sbbl
into
push
les
hlt
jbe
xor
fcomip
add
xor
popf
ljmp
push
ds
mov
aam
cld
sbb
mov
push
sub
inc
scas
jg
fadd
fdiv
hlt
push
mov
imul
out
adcl
pop
xchg
insb
mov
xchg
out
mov
push
jb
lret
lret
mov
aam
push
aas
and
std
push
add
mov
repz
mov
jle
mov
out
push
push
jecxz
xchg
out
dec
mov
mov
mov
aaa
mov
popa
dec
jmp
btr
leave
in
aam
xchg
loopne
sahf
xchg
add
and
clc
and
cmp
jns
call
fwait
pop
dec
mov
xchg
aam
lret
lods
add
add
test
cmp
pop
jge
ret
xchg
jmp
inc
clc
stc
adc
xchg
out
test
loopne
fwait
dec
xor
js
out
mov
flds
pop
subl
sub
test
je
push
or
and
negl
sub
data16
mov
std
xor
gs
xchg
and
ret
in
rol
cmpsl
in
xchg
std
nop
rol
xchg
test
mov
rorb
arpl
mov
jae
sbb
outsb
mov
pop
gs
pop
or
adc
sti
out
ror
scas
into
mov
inc
ds
jo
pop
inc
cmp
lds
call
inc
jne
call
mov
cmp
fisubl
mov
fistpl
push
pop
test
pop
xchg
jge
xchg
lds
pop
push
dec
std
cmp
jb
xlat
bound
mov
movsb
int3
xchg
pop
popa
fdivrs
stos
js
xchg
and
mov
nop
mov
mov
sahf
sub
push
data16
push
ret
pop
jb
push
sahf
jp
imul
sbb
mov
xchg
inc
gs
add
pusha
xchg
in
ret
nop
sbb
sub
pop
add
sub
jle
negb
rorb
repz
adc
mov
xchg
cs
ss
push
loop
std
stos
dec
xchg
dec
lock
push
pop
andl
cld
or
add
mov
and
in
cmpsl
fs
cmp
adc
mov
cmc
nop
out
add
test
shll
mov
add
mov
inc
mov
and
cltd
imul
and
jne
filds
cmpb
dec
xor
jecxz
mov
cwtl
jge
adc
imul
cmpsb
cmp
pop
and
rolb
xor
push
inc
mov
test
repnz
inc
outsb
and
inc
lahf
or
icebp
cmc
pusha
dec
mov
cmp
es
ficoml
in
lahf
xchg
loopne
sub
cmpl
out
lods
adc
xor
xor
out
aas
sbb
cmpsl
xchg
jg
xor
sbb
aad
sbb
xor
faddp
adc
sbb
sbb
js
pushf
bound
pop
arpl
add
outsl
push
subb
push
shll
jnp
adc
lcall
adc
or
inc
dec
cmc
int3
dec
sbb
push
adc
or
add
jp
fcmove
add
push
push
sub
mov
pop
mov
fwait
xchg
cmp
loop
jecxz
cmp
cmpsb
push
pop
inc
jp
insb
pop
pop
in
push
mov
push
cmpsl
cmp
cmp
addl
pusha
xchg
cwtl
ret
inc
rcrl
testl
xchg
addl
jl
test
push
inc
ljmp
add
loop
rcll
pop
repz
push
mov
mov
add
inc
aaa
pusha
movsl
mov
mov
jp
mov
xchg
push
inc
leave
push
les
sub
jmp
jecxz
dec
inc
mov
push
or
push
adc
mov
cmpsl
sarl
xor
add
mov
pop
jecxz
push
ja
xchg
mov
sub
cmpsb
iret
sub
sub
mov
movsl
cmc
sub
test
movsb
xchg
lods
cmpsl
dec
out
mov
pop
clc
jg
stos
nop
hlt
enter
push
gs
cmp
inc
hlt
inc
mov
andb
cwtl
xchg
push
das
lods
inc
cmp
in
stos
lea
jo
jecxz
js
jl
fsubrl
xor
iret
cmpsl
je
xor
or
rep
jl
out
xchg
jmp
out
dec
sbbb
cs
add
push
xchg
es
rcr
ret
pop
sub
sbb
jecxz
cmc
pop
outsb
mov
adc
xchg
in
push
aaa
add
pop
jecxz
xchg
pop
aad
and
dec
fstp
loopne
mov
mov
push
pop
inc
xchg
in
dec
and
bound
mov
test
sbb
push
mov
adc
xchg
jo
inc
testb
fstps
push
daa
push
jle
pop
stos
out
cmc
movb
mov
and
cmp
sub
out
bound
xchg
mov
test
push
dec
stc
test
fisttpll
icebp
jl
and
push
aam
std
cmpsl
xlat
push
sub
test
mov
push
mov
push
mov
xchg
arpl
cwtl
ja
pop
or
in
imul
mov
call
rclb
push
aam
rcrb
outsb
aaa
es
adc
out
sub
xchg
je
popf
mov
fisttpll
or
test
cmp
jmp
xchg
adc
cltd
jp
xor
sub
jne
in
push
in
fcmovu
sbb
out
daa
scas
daa
test
movsl
push
popf
int3
out
adc
and
test
movsb
push
rol
mov
adc
or
out
js
sbb
adc
xor
aad
fsubrs
push
or
sbb
sub
in
stc
mov
ja
pop
xorb
iret
lea
push
data16
mov
in
xor
gs
push
data16
clc
scas
cli
push
test
mov
dec
test
pop
push
insl
divb
repz
xchg
push
scas
stos
sbb
push
mov
movsbl
aam
pop
testb
pop
lods
popf
mov
cmp
pop
scas
jmp
jbe
xor
clc
inc
int3
popa
int
push
ds
mov
fsubrs
pop
inc
imul
and
in
adc
stc
or
mov
pop
and
pop
aaa
ljmp
push
mov
xlat
add
ds
and
ljmp
push
sbb
jp
dec
xchg
push
fcoms
repz
jecxz
iret
push
notl
push
aaa
stc
or
ss
lock
ret
sub
arpl
and
or
mov
ret
ss
popf
pop
mov
int3
jne
sbb
jae
pop
xor
jmp
ss
shl
push
or
pop
push
sub
cltd
add
sbb
in
jbe
loopne
ds
in
femms
mulb
mov
mov
adc
jnp
pop
pop
jne
loope
mov
jmp
lret
hlt
pop
minps
push
xchg
mov
pop
xchg
cwtl
dec
in
xor
inc
adcl
cmc
scas
subl
mov
ljmp
ljmp
mov
dec
std
repnz
movsb
adc
mov
and
repz
movsb
in
int
mov
mov
add
ret
insl
cmc
lcall
lret
shrl
dec
mov
sub
outsl
jne
shll
push
push
fsubr
jns
pop
push
into
dec
decl
push
and
xchg
popa
sub
and
inc
inc
xchg
sub
fidivrs
xchg
call
lods
jno
mov
fbld
aas
sti
in
mov
inc
test
xor
push
jmp
add
mov
xor
mov
mov
jo
in
lcall
cmp
mov
and
lods
or
fucom
mov
sbb
cltd
and
andl
pushl
imul
jb
mov
cmpsb
sbb
ss
push
in
and
rorb
pop
mov
cmp
loope
fnstenv
cmpsb
jno
and
icebp
xor
lea
pop
popf
push
insb
push
and
pop
xchg
iret
sub
ljmp
mov
xchg
outsb
call
dec
inc
pop
sarl
ljmp
inc
hlt
lds
imulb
imul
insl
clc
push
mov
or
sbb
inc
sub
call
lods
scas
pop
enter
mov
push
in
sub
inc
jbe
lea
or
cmp
jp
int
jne
add
jp
into
decl
into
adc
sbb
iret
inc
fcomp
and
sbb
outsl
sbb
xor
imulb
aad
cmp
add
call
cli
dec
mov
xor
cmpb
fnstcw
popf
add
jl
mov
push
inc
mov
and
fmuls
inc
int3
mov
loope
ret
lea
dec
sub
mov
fisubl
inc
in
dec
xlat
xchg
cmp
icebp
popf
test
mov
mov
mov
lahf
inc
or
mov
stc
xchg
adc
sub
mov
or
pop
shll
aas
sbb
lahf
stos
push
adc
mov
or
or
aaa
sub
bound
aas
sub
fsubrl
fiadds
cmp
fwait
push
fsts
cwtl
test
dec
add
pusha
jno
adc
cmp
lahf
sub
bound
lds
inc
sbb
sbb
sub
call
mov
shl
rclb
fcomps
xchg
sbb
sbb
and
sub
sub
ss
ja
in
scas
push
frstor
inc
push
and
jmp
jl
lods
shrl
jbe
ret
and
or
cmp
push
cmp
test
outsl
stos
or
mov
lods
and
inc
int
lcall
pusha
fcomi
pushf
adc
xor
dec
xor
js
cmp
push
xor
and
jp
subb
xchg
hlt
lret
pop
icebp
xor
inc
loopne
push
xchg
xchg
fsubrl
enter
sbb
pop
cmpsb
cld
xchg
cmpsl
mov
ficompl
movsw
scas
dec
loopne
aam
in
add
fcoms
dec
in
mov
addr16
decb
leave
push
add
and
lods
shrb
inc
push
dec
add
sbb
aam
cld
call
cltd
mov
and
lret
cmpsb
xchg
mov
fdivrs
mov
fbld
mov
sub
xchg
pusha
inc
lods
fisubl
push
and
outsb
push
in
out
push
mov
mov
mov
pop
fldt
pop
jnp
sbb
test
push
lods
enter
cmc
and
mov
pusha
jge
popa
stos
cmpsl
xchg
rcrb
arpl
aam
push
out
test
cld
int3
pushf
cmp
pop
mov
jle
adc
ret
xchg
mov
notl
into
mov
and
in
lods
xor
mov
sbb
cmpsl
inc
and
jg
int
mov
mov
sbb
loope
aam
out
push
xchg
cmp
jbe
iret
ror
aaa
push
test
jae
fisttpl
and
and
jbe
insb
mov
mov
sbb
push
sub
mov
sub
out
repnz
xchg
mov
adcl
les
adc
and
ja
add
inc
cmp
xlat
addr16
xor
sub
push
stc
fwait
movsl
adc
out
faddl
jb
or
or
sbb
xchg
mov
data16
sarl
inc
nop
leave
lret
mov
mov
add
mov
sbb
sub
in
xor
imul
clc
rol
sar
xor
mov
pop
mull
sbb
push
cwtl
sub
pop
push
ror
add
mov
push
pushf
jmp
aas
ficomps
int3
mov
aam
push
shlb
adc
das
adc
pop
fisttps
aas
push
xor
jle
inc
ret
mov
jo
xor
in
adc
push
sbb
ljmp
sub
mov
call
cmpsb
sub
bswap
push
mov
pop
das
mov
push
aaa
shlb
or
jno
scas
dec
sarb
pop
sub
enter
cmp
fcomip
sub
pusha
add
test
or
mov
or
out
bound
js
daa
or
out
ja
xchg
scas
ljmp
mov
lahf
icebp
jp
dec
cmp
mov
inc
loopne
pushl
cmp
xor
inc
movsl
std
push
aad
pop
cli
jmp
sub
jo
movl
js
icebp
incl
clc
mov
scas
adc
or
jns
add
stc
out
shll
sub
jg
pop
mov
cmp
and
push
lods
rclb
push
or
dec
sti
push
fldcw
jno
into
sbb
leave
loope
pop
aaa
jl
pop
fmul
pop
push
into
popf
outsl
mov
mov
sbb
ss
mov
iret
and
pop
xchg
movsl
movsl
sub
and
xchg
ret
cmp
shll
sete
sub
adcl
int3
bound
lcall
cmp
mov
hlt
fisubs
ret
outsb
push
testb
mov
adc
cli
xchg
xor
fimuls
push
add
dec
push
mov
shlb
mov
sbb
pushf
cmp
call
add
pop
xor
movsb
mov
pop
fsubs
mov
out
and
out
xchg
or
rcl
cmp
xchg
add
dec
add
nop
das
adc
idivb
fdivl
push
or
cmp
inc
and
xchg
scas
dec
mov
and
mov
adcl
mov
mov
cmc
adc
jmp
into
cmc
sub
in
test
ja
rcrb
sbb
jae
inc
mov
pop
sahf
xchg
pop
jecxz
sbbb
dec
lea
movsb
aad
dec
stos
lock
pop
jbe
sub
or
imul
xchg
or
xchg
sbb
cmc
enter
clc
jae
jge
stc
lret
shll
xchg
test
or
mov
out
mov
mov
movsb
push
call
aad
idivl
into
cmp
dec
pushf
jge
dec
mov
add
inc
hlt
lahf
adc
je
push
in
xor
adc
sub
mov
dec
jg
stc
cmp
aas
inc
cs
and
ds
cmc
adc
dec
pop
adc
pop
adc
shr
cmpsb
push
or
jg
push
mov
iret
out
movsb
mov
mov
or
movsb
mov
and
sbb
add
inc
andl
repnz
sub
or
jp
mov
or
jge
inc
daa
jle
sub
cmp
xor
fwait
jp
inc
outsb
dec
pop
or
outsl
or
add
jmp
jno
iret
add
daa
aam
inc
incl
mov
shll
adc
int
mov
or
mov
hlt
mov
xchg
repz
mov
lahf
xchg
mull
xor
addr16
sbb
xchg
mov
mov
lock
and
add
stos
mov
inc
daa
adc
dec
pop
or
jecxz
cmp
sub
inc
mov
pop
popf
hlt
xchg
inc
popf
repz
push
or
and
cld
leave
arpl
subb
xlat
and
pushf
pop
cmp
in
xchg
or
jae
and
sub
call
cmp
int
in
testb
and
xor
jl
inc
push
sti
xorb
cld
mov
in
popa
xchg
xor
xor
rorb
mov
fiadds
or
ljmp
fstpl
or
pop
stos
call
add
xor
jecxz
xor
es
mov
aad
lret
mov
das
scas
lret
imul
mov
push
jo
loopne
dec
push
ljmp
int
push
mov
into
inc
imul
popf
cmp
mov
imul
xorb
mov
push
mov
in
push
xchg
pusha
inc
sub
inc
sbb
mov
adc
ror
xchg
cmp
fsub
xor
loop
sbb
jb
push
insb
xrelease
sbb
sub
pop
mov
mov
mov
add
and
sbb
ror
jp
sahf
mov
lea
faddl
xchg
sbb
xor
xchg
lcall
xchg
cmpsb
lds
and
js
inc
pop
inc
jns
jmp
xchg
shll
jnp
test
mov
mov
js
cld
shll
mov
enter
icebp
lea
aaa
jle
mov
push
repnz
pop
lods
divl
lock
sub
sub
adc
loope
xchg
jns
pop
jmp
jl
arpl
std
xor
mov
call
mov
sbb
dec
popf
hlt
mov
mov
inc
lock
mov
add
aad
inc
inc
pop
mov
cmp
sarb
and
xchg
mov
in
or
mov
pop
inc
fwait
ss
adc
outsb
and
imul
mov
divb
jg
cmpsb
fistpl
xchg
iret
jmp
jl
cmp
int3
data16
test
ret
stc
xchg
sbb
aaa
test
or
inc
or
lret
adc
sub
rcll
fistps
addr16
or
and
ljmp
jp
cs
pop
ds
es
xchg
imul
stos
cs
pushf
pop
popa
iret
pop
sbb
push
jne
lret
insb
jne
or
adc
shrl
jp
sti
hlt
movb
sub
popf
out
xor
jl
daa
rcrl
in
cmp
cmp
jne
mov
push
sub
sub
clc
inc
popf
insl
inc
cmp
pop
lock
xor
cli
fdivrl
lcall
decl
fs
mov
xchg
into
outsb
xchg
ljmp
sbb
push
fsub
enter
cmp
mov
fucom
add
pop
nop
jnp
std
fldt
cmpsb
cs
leave
out
test
in
jecxz
xor
dec
xchg
push
push
push
xchg
nop
mov
mov
bound
push
jmp
dec
das
test
rep
mov
sub
push
es
or
xchg
iret
fs
xor
out
xchg
jne
into
dec
push
daa
dec
adc
cmc
sbb
fdivs
out
aaa
in
inc
xor
sub
and
enter
iret
and
xchg
sahf
add
push
pop
pop
push
shll
sbb
mov
cwtl
mull
out
and
mov
sub
or
outsb
fwait
mov
fsubs
sti
pop
sahf
stc
cmpsl
jecxz
sbb
add
mov
in
xchg
mov
aam
xor
xchg
hlt
gs
mov
sar
fidivs
int3
ret
adc
popa
hlt
lods
push
sub
push
ja
sbb
add
int3
fnstsw
xchg
jg
pusha
jl
int
decb
sbb
jns
leave
fsubrs
push
jmp
pop
cmpsw
push
out
mov
shr
pop
xlat
imul
cld
ret
cmpsl
popa
xchg
mov
aas
sbb
mulb
hlt
call
call
sub
sub
sub
jo
andb
popf
pop
jge
fbld
pop
iret
push
rolb
fdiv
mov
jae
pusha
mov
iret
test
test
lock
fwait
xor
sub
fwait
test
mov
add
add
rcr
inc
jno
xchg
push
hlt
adcl
push
orl
xchg
dec
pop
cli
hlt
add
xchg
loop
pop
cld
daa
fisubs
pop
inc
sbb
lds
aas
dec
ss
sub
mov
lahf
xor
pop
sti
mov
lds
subl
subl
test
sub
push
fidivs
test
mov
cmp
xorb
sbb
xchg
pop
adc
sets
ljmp
or
out
mov
and
jne
mov
mov
ljmp
and
or
in
rclb
push
jge
insl
aam
std
lds
jmp
test
push
mov
cmpsl
mov
in
inc
aam
repnz
and
std
jns,pn
mov
lcall
fdivl
movsb
push
sub
out
or
sti
xor
fldt
jle
lods
roll
jno
inc
add
xor
cltd
xor
mov
mov
cmp
lock
clc
sbb
add
inc
xchg
out
jge
jns
js
lods
aas
sahf
int3
rcr
dec
fistpl
cmpsl
adcl
cwtl
cmp
arpl
xchg
sbb
ss
je
in
outsb
xchg
or
jbe
jg
clc
push
fdivr
jl
sahf
mov
mov
outsl
xchg
xchg
add
jge
xor
cmc
out
adc
es
mov
lods
ret
xor
inc
mov
mov
dec
jb
pop
aad
inc
out
lea
dec
std
and
pop
repnz
nop
push
aam
or
inc
shr
test
stos
inc
mov
lcall
test
push
test
inc
cmp
sti
sahf
add
xchg
in
aas
cli
jnp
dec
divl
or
cmp
adc
pop
jmp
sti
inc
mov
pextrw
pop
xchg
xchg
mov
fstps
leave
and
outsl
adc
pop
push
push
leave
sahf
les
cmpsl
push
mov
mov
shll
dec
mov
mov
fldenv
insb
xor
add
icebp
js
sub
pop
fwait
adc
aas
sub
cmp
or
repnz
jle
sahf
mov
cmpsl
aad
mov
in
stos
mov
jne
xor
arpl
xor
cmp
xchg
ficompl
addl
mov
jge
mov
inc
jo
or
cmpl
mov
icebp
pop
in
hlt
cmp
mov
inc
jnp
into
aaa
or
pop
aad
cmpb
movsl
and
pushf
dec
cmp
vpshaw
orl
enter
xchg
mov
arpl
and
ljmp
pop
imul
fs
mov
jns
lcall
pop
test
jo
mov
push
lds
mov
cmovno
xchg
sbb
repz
scas
testl
mov
mov
mov
sbb
push
inc
nop
add
or
sub
adc
jmp
lret
and
lock
fisttpl
test
or
xchg
scas
scas
lods
jl
mov
popf
mov
mov
shlb
fnstsw
or
mov
pop
jae
jmp
bound
sbb
push
lds
dec
dec
cmc
mov
inc
sarl
pusha
push
sub
dec
xor
or
adc
stc
fbstp
add
andl
sub
loopne
clc
ds
and
or
leave
mov
mov
pop
and
divb
mov
jb
mov
jo
xor
mov
rol
and
std
push
loop
dec
jmp
arpl
test
das
mov
jp
popa
cmpsl
lods
daa
fidivs
dec
sbb
adc
add
loop
cli
pop
dec
xlat
aam
or
xchg
rcrw
enter
mov
adc
psubusb
pop
adc
lock
add
pusha
pop
pop
jno
push
ss
adc
xchg
jmp
adc
sbb
xor
lods
jb
fsubrs
ret
dec
mov
cmc
pop
jmp
leave
ds
mov
mov
xchg
imul
and
sbb
movsl
inc
and
rclb
sub
cwtl
out
fwait
sbb
int
mov
and
jecxz
in
dec
pop
out
lahf
jo
mov
lock
inc
and
mov
mov
je
inc
xchg
mov
stos
jno
jle
add
cld
jg
jno
leave
sub
pop
fisubs
divb
insl
out
outsl
insb
pop
cmp
or
jg
lret
or
dec
call
std
xchg
inc
jp
lahf
fs
out
xchg
in
int3
jl
out
cmpsb
sub
test
sarl
clc
inc
sub
jne
out
outsl
jo
push
pushl
nop
sbb
je
mov
push
fcmovne
xchg
cmpsb
or
sahf
or
aas
cmp
je
lcall
cmp
and
mov
test
sbb
push
mov
push
lea
inc
test
push
dec
or
mov
clc
push
lcall
adc
xor
xchg
les
xchg
inc
push
push
mov
inc
shrb
repnz
jecxz
leave
cmpsl
inc
cmpl
mov
divl
mov
out
negl
or
fists
mov
lcall
push
jo
mov
popf
mov
and
xor
pop
ljmp
aas
mov
ds
stos
sub
xchg
adc
add
aam
sbbl
loopne
pop
fbstp
dec
call
lods
sbb
jno
dec
push
xchg
mov
inc
xlat
and
sbb
arpl
xchg
outsl
bound
cli
sub
ret
imul
pop
inc
pinsrw
sub
xchg
ds
mov
ja
jge
cmpsl
pop
out
or
add
std
pop
sar
mov
fnsave
aaa
xor
add
pop
inc
sbb
adcb
mov
dec
inc
pop
jnp
stc
push
sarb
xchg
jg
or
mov
mov
fmull
es
testb
test
setg
ficoms
cs
fldenv
mov
mov
aaa
stos
enter
inc
xchg
and
test
stc
pop
das
adc
pop
js
and
insb
sbb
hlt
sub
xchg
das
inc
jne
cmpsb
adc
mov
and
cmpsb
and
xchg
and
cmc
cmpsb
adc
cmp
push
xchg
in
aad
pop
lcall
les
movsb
in
fldt
popa
testb
lock
inc
xchg
test
ret
xchg
pop
jns
push
jno
xchg
adc
jmp
push
scas
arpl
sbb
rorl
faddl
dec
loop
insl
test
cmpsb
adc
xchg
lds
mov
mov
pop
mov
scas
imul
bound
int3
sub
out
mov
cmp
xchg
sbb
loope
imul
rorb
adc
xor
clc
mov
jbe
test
loopne
shlb
push
loop
loope
mov
inc
ljmp
sbb
mov
push
inc
addr16
mov
mov
js
or
out
dec
in
ret
inc
mov
lock
rorb
inc
inc
mov
xlat
inc
int
sub
fs
sbb
lods
out
shll
or
fidivrs
jnp
cmp
fld
pop
rolb
hlt
ret
enter
and
hlt
adc
pop
cmp
in
pusha
fsubrl
daa
cltd
mov
xchg
jp
ficoml
sahf
scas
repnz
add
pop
sub
mov
cmp
test
pop
popa
inc
xchg
jnp
jo
sti
jecxz
jp
jg
in
mov
popa
mov
sbb
pop
mov
pop
jnp
daa
mov
push
int3
push
push
bound
xlat
arpl
in
xor
outsl
mov
and
mov
push
loope
es
pop
mov
aas
xchg
roll
lahf
pop
les
cwtl
sub
and
mov
mov
xchg
mov
lods
push
std
nop
xor
subps
mov
out
ficoml
out
jge
shl
lret
inc
fsts
mov
movl
mov
jno
cmpsl
lods
xchg
push
jae
je
dec
std
pop
repz
add
xchg
std
movsl
push
test
cmpb
enter
rol
lds
jge
iret
and
lret
es
les
ja
jno
dec
and
lret
sub
lds
iret
inc
fmull
sub
mov
add
add
xchg
lea
pop
jb
orb
mov
pop
push
mov
mov
jbe
sub
mov
mov
sarb
xor
cmpsl
imul
ret
inc
cmp
inc
dec
lds
lahf
test
xor
push
or
or
pop
xchg
test
push
bound
cmp
sub
sbb
inc
cs
leave
and
lods
mov
jbe
xor
mov
cs
mov
xor
push
jnp
loop
mov
add
inc
sbbl
cmp
ret
aas
mov
sub
psadbw
pop
aam
out
dec
jb
push
out
pop
cwtl
nop
inc
imul
xchg
push
xchg
pop
sar
sbb
mov
mul
pusha
inc
int3
add
pop
test
mov
dec
ljmp
dec
mov
outsl
mov
lret
out
mov
int3
inc
and
and
arpl
repz
ss
pop
fists
pop
lcall
mov
dec
mov
cltd
pushf
shl
outsl
xchg
inc
scas
and
in
imul
lea
icebp
das
push
xor
mov
mov
fldcw
xchg
pop
in
jnp
dec
mov
imul
push
jns
mov
mov
aas
loope
inc
addr16
jmp
leave
adc
mov
ss
inc
and
leave
jbe
out
push
ret
sub
rorb
pop
dec
jae
clc
stos
outsl
xor
xorb
lock
shrb
push
ds
sbb
jge
cmp
pop
int
dec
push
enter
ds
xor
int3
stos
sub
push
loope
ja
cmp
xchg
xlat
neg
sbb
in
dec
mov
and
test
test
push
jecxz
mov
and
int3
jle
inc
sbb
outsl
sbb
mov
imul
xor
movsb
xor
xor
mov
pop
pop
pop
outsl
add
mov
jns
cmp
push
out
jns
rorb
loope
sbb
or
cld
scas
je
xchg
stc
or
jb
mov
dec
adc
mov
mov
jp
adc
pop
shrb
sub
cmp
mulb
aad
cmpsb
je
sub
inc
adc
hlt
arpl
inc
test
stos
insl
imul
inc
lea
fnstsw
dec
mov
pop
sti
imul
mov
ret
mov
push
xor
clc
sbb
inc
ds
fwait
test
jbe
and
lock
imul
jp
pusha
sbb
pop
mov
out
jo
and
or
stos
cmp
push
push
stos
add
mov
sub
cmp
shll
sub
sbb
movsl
pop
sub
out
adc
cmc
sbb
xchg
push
loopne
pushf
or
ja
sub
jecxz
out
cltd
rcr
mull
mov
mov
pop
cwtl
pop
dec
outsb
xchg
stos
cmpsb
xchg
mov
iret
push
sahf
cmpsl
icebp
push
sub
addr16
es
dec
sub
or
bound
mov
add
inc
xchg
iret
and
mov
push
jns
inc
outsl
dec
adc
dec
mov
lods
adc
mov
xor
out
jb
iret
pop
int3
jbe
aas
xor
dec
mov
push
mov
outsl
jg
add
cli
xor
rorl
mov
mov
js
lea
repz
add
rolb
flds
lret
jb
mov
insb
in
dec
int
jl
dec
icebp
sbb
xchg
xchg
scas
ds
dec
cli
xlat
and
mov
mov
das
and
push
imul
imul
out
push
mov
ret
sub
pop
mov
shrb
dec
jge
ret
push
dec
and
adc
lahf
insb
or
int3
jle
push
mov
or
mov
dec
mov
sbb
inc
icebp
mov
popa
outsl
inc
in
in
pusha
jecxz
jne
in
cmpsb
inc
or
int
push
ficompl
fidivrl
jg
lock
ficoml
jne
cmpsl
push
cli
inc
xchg
test
test
mov
xchg
jle
xor
vdivps
pop
add
add
mov
xchg
pop
rol
xchg
je
sub
int3
mov
mov
bound
jmp
mov
psubusw
jae
mov
sarl
lret
js
xchg
in
loop
mov
lret
aas
mov
dec
mov
fimull
xor
cld
outsl
dec
mov
dec
das
xor
repz
cmp
dec
xchg
cmc
pop
lret
mov
jmp
sbb
add
xchg
filds
mov
js
sbb
and
ffree
test
std
mov
fstpt
push
fstpl
fsubrp
or
add
adc
and
pop
das
aaa
addl
dec
cmc
js
sar
cmpsb
inc
aam
mov
sbb
cmp
jecxz
mov
out
nop
sub
xor
mov
arpl
pop
pusha
xchg
fstpl
in
ffreep
ss
mov
xor
movsb
outsl
outsl
inc
mov
dec
in
pop
cwtl
and
imul
mov
jo
add
sbb
inc
mov
daa
aad
xorb
int3
xlat
js
mov
pushf
sub
push
imulb
push
cmp
adc
xor
push
fdivrl
adc
les
rclb
inc
cmp
jns
es
cmp
scas
sbb
lret
inc
jbe
push
mov
xor
sti
pop
lea
push
and
mov
shl
addl
ret
pop
cs
out
mov
and
xlat
and
sbb
data16
mov
cmc
loop
mov
dec
adc
js
sub
leave
mov
mov
out
mov
rorl
push
push
stos
aad
ret
pop
sbb
jbe
gs
hlt
fcmovnb
dec
bound
shlb
xor
adc
ljmp
fnsave
fwait
or
inc
and
loopne
out
inc
test
cwtl
outsl
ret
and
sbb
sbb
lcall
aam
jb
loopne
jmp
loope
push
cmp
adc
xor
sub
sbb
fcomps
pop
ljmp
pop
mov
lea
outsb
cmp
inc
mov
addr16
xchg
mov
lret
stc
adc
fdivr
aas
test
lods
pop
stc
test
inc
incb
ljmp
js
into
jbe
idivl
scas
aad
rcll
dec
ret
rcrb
xor
inc
dec
out
rcl
aas
mov
dec
add
mov
int
dec
jl
mov
xor
lret
mov
pop
bound
or
cmpl
cmc
and
pop
mov
out
sub
lods
mov
sahf
mov
cmc
scas
pop
loope
test
popa
lods
and
insb
sahf
stos
mov
in
in
out
push
add
fadd
dec
inc
mulb
inc
in
jg
outsb
pop
scas
notb
shrl
in
outsl
pusha
pusha
daa
adc
fiaddl
movsl
cmp
push
push
stc
mov
jnp
inc
sbb
hlt
test
cld
xor
into
sub
test
xor
lret
mov
dec
orb
lahf
xor
dec
icebp
adc
dec
xlat
jno
and
repz
flds
push
test
add
add
pop
stos
add
out
adc
addr16
mov
aad
xchg
insb
push
inc
sbb
outsl
jbe
jne
repz
mov
mov
jne
icebp
les
mov
sbb
in
jle
or
cmp
mov
jmp
inc
shl
fdivrl
xchg
mov
xor
repnz
jae
inc
es
mov
push
mov
lods
mov
xor
lret
fprem1
pop
iret
in
mov
es
stos
push
jo
std
das
mov
pop
sarl
pop
cld
adc
jmp
cltd
les
mov
mov
das
and
out
jl
mov
pop
out
frstor
pop
inc
push
dec
sbb
fildl
inc
std
sub
pop
push
and
ror
mov
faddp
jbe
push
mov
ljmp
rorb
push
xchg
dec
mov
into
mov
dec
test
adc
mov
xchg
mov
cmpsb
push
xlat
jns
jmp
mov
mov
mov
pop
stos
data16
subb
jle
add
cmp
pop
aam
mov
sub
aas
dec
pop
stos
cmc
sbb
out
jmp
sub
push
rclb
add
push
mov
outsb
popf
aam
xor
mov
movsl
sub
ds
loopne
int
enter
jno
popa
sbb
stos
adcb
push
jbe
sub
mov
cmpl
inc
pop
lock
cmc
xor
add
xor
dec
mov
mov
sbb
jge
out
lret
stos
add
ds
sbb
adc
sub
stc
xchg
push
push
shlb
fcmovb
fcmovbe
push
stos
mov
mov
lret
pop
mov
rcrb
movsb
sub
clc
aam
jnp
test
stos
jbe
stos
nop
sub
push
movsb
pop
push
vorps
sub
test
jecxz
jbe
aam
repz
add
cld
push
jno
push
jl
arpl
clc
sbb
mov
cmc
out
push
jle
add
jg
push
ds
add
xor
add
andl
add
or
adcb
xor
push
les
lcall
jl
mov
insb
lret
ret
push
mov
pop
mov
mov
mov
jo
leave
lock
mov
int
aaa
pop
aaa
mov
lret
sahf
daa
in
mov
test
es
adc
mov
or
push
cmpsb
bound
jns
mov
cmp
outsl
je
repnz
or
loope
rcrl
xchg
push
jl
mov
js
pop
popa
mov
mov
jbe
jo
add
aaa
sub
out
add
aam
aad
mov
js
pusha
mov
repnz
cmpsb
aas
jae
jmp
xchg
and
push
fwait
pop
mov
sti
std
pop
les
sbb
jns
mov
fs
jno
aas
or
daa
pop
xchg
sbb
scas
xor
xor
xor
mov
mov
fldl
popa
adc
jbe
cwtl
adc
xchg
xchg
cmpsl
dec
negb
jb
inc
ss
inc
dec
call
and
rcl
in
movsl
clc
mov
mov
and
fistl
in
mov
inc
lods
rcr
inc
stos
pop
rclb
popa
sahf
jnp
popa
mov
sti
add
repz
lods
in
aaa
ss
ja
stos
adc
sub
out
add
std
in
add
or
nop
and
movsb
pusha
fisubl
jo
xor
or
mov
cmp
pop
shlb
add
testl
icebp
jmp
inc
pop
adc
rcrb
adc
mov
adc
xor
insl
shrl
mov
cltd
pusha
or
push
adc
sbb
mov
jns
stos
in
push
cmp
dec
cld
sbb
sbbl
mov
iret
es
cli
jns
lahf
call
int
divl
pop
sti
mov
push
mov
imul
dec
adc
lock
add
xor
mov
mov
popa
inc
mov
inc
cs
fs
fmuls
stos
push
out
fsts
xchg
ljmp
je
push
mov
stc
or
xor
adc
jo
sbb
xchg
and
in
jns
out
push
inc
lods
mov
cmp
cld
jmp
dec
sbb
mov
and
das
cmp
pop
mov
inc
xchg
clc
xchg
cmp
adc
jns
sbb
cmc
inc
icebp
xchg
jne
dec
mov
fisttpl
test
push
jno
dec
xor
fmull
jno
adc
inc
xchg
jge
in
add
into
adc
mov
in
and
lods
test
and
mov
xchg
fstl
xlat
jbe
sbbb
jbe
dec
popf
and
fwait
cld
jne
add
aad
mov
repz
pusha
cmp
push
mov
jns
ror
cmp
cmpsl
sub
les
inc
inc
mov
sbb
adc
pusha
dec
lock
jne
shrb
mov
dec
lahf
lods
addr16
sub
push
push
push
pop
fxch
jmp
mov
push
jo
sahf
aam
mov
shr
or
in
or
mov
cwtl
xchg
dec
inc
mov
mov
fisttpl
mov
cmp
fmull
lods
rclb
push
sarl
icebp
cmp
jo
imul
xlat
lock
push
test
pop
cmc
jp
or
cmp
and
inc
inc
xchg
jecxz
sbb
lods
inc
jle
mov
push
jbe
sahf
add
repz
cmp
aaa
pusha
ss
sub
ds
pop
cmpsb
cmp
dec
xchg
jg
addr16
xor
fldt
adc
jp
cwtl
jmp
fwait
pop
add
inc
and
adc
test
lock
cs
shl
repz
sbb
cmp
add
push
mov
iret
rol
movsl
dec
jecxz
xor
repnz
sbb
push
mov
fdivrp
iret
daa
mov
sahf
adc
mov
inc
jbe
lods
adc
sub
cmp
imul
out
push
mov
rcl
stc
movsl
int3
add
push
add
outsl
inc
pop
mov
imul
out
sti
out
mov
bound
lahf
and
push
adc
es
sbb
test
xor
imul
cmpsl
add
cmp
vmread
cmp
adc
add
fistpl
stos
lea
imul
notb
or
sbb
jmp
cmp
aam
lret
jmp
push
add
nop
lea
push
add
test
dec
sbb
add
xchg
mov
loope
sarl
xchg
sar
sahf
cld
mov
jmp
mov
call
in
jmp
repnz
jae
mov
xlat
mov
ds
mov
ret
inc
sub
inc
scas
aam
mov
mov
xchg
jle
fsts
addr16
flds
in
popa
sti
pop
mov
mov
jae
or
fcmovb
inc
jbe
ss
gs
push
adc
or
mov
mov
add
mov
xchg
mov
sub
gs
push
popa
mov
into
ret
pushf
jp
inc
cmpsb
xchg
push
jo
dec
das
or
xchg
sti
bnd
js
sbb
xchg
out
and
sub
lds
mov
push
and
lds
rol
sahf
shlb
ja
mov
int
push
lcall
sbbl
jg
cli
add
push
stos
jge
aad
pop
xchg
and
xchg
mov
test
mov
sub
out
insb
or
stc
sub
xchg
pushf
scas
xchg
and
mov
push
lahf
orb
enter
push
jbe
mov
addr16
push
add
cmp
mov
pushf
scas
jle
pop
sub
inc
push
jns
popf
inc
fsubs
sbb
fisttpl
sub
lock
rol
sub
jge
div
mov
imul
stos
pop
out
sub
push
icebp
pop
push
jnp
add
loope
pop
xor
push
aaa
mov
sbb
dec
cld
call
insl
jle
add
pop
in
cltd
xlat
mov
xor
in
push
ret
pop
and
push
push
sub
xchg
aaa
leave
les
inc
jge
mov
fmuls
popa
push
adc
sub
gs
jecxz
jae
test
jo
repz
inc
lret
lods
push
fs
jecxz
mov
pusha
sbb
sbb
cmpsb
fisttps
push
add
enter
sbb
and
push
lcall
out
xchg
push
sahf
sub
aas
pop
fsub
jecxz
movsb
pop
add
xor
cmpb
shrl
mov
test
mov
mov
fistpl
xchg
jle
pop
ds
sbb
sbb
dec
mov
xchg
mov
in
cmpsb
push
sbb
mov
mov
loopne
pop
sub
sub
adcb
jne
insb
fmuls
out
and
stos
jne
mov
addr16
push
loopne
stc
mov
lahf
or
or
sbb
add
enter
out
add
imul
cmpsb
push
inc
jge
inc
rclb
inc
call
xor
mov
mov
and
adc
push
call
outsb
xor
rcll
xlat
ljmp
cltd
and
ss
push
adc
shll
push
outsb
dec
clc
lea
aam
and
leave
shlb
mov
jae
in
js
aam
lret
mov
push
ss
aaa
fucom
jns
cmpb
cmp
outsb
in
icebp
fsubp
and
arpl
xchg
mov
pushf
mov
push
ja
mov
mov
xchg
cmp
xor
xchg
movsl
inc
rcrl
xchg
dec
lret
and
cmp
ret
insl
inc
cld
cmp
push
out
sub
add
in
ds
jo
sbb
pushf
rorb
xchg
cld
loope
jp
inc
loopne
test
sarb
jbe
inc
bound
xchg
xchg
sbbl
push
ret
lahf
mov
nop
xchg
outsb
js
mov
aad
jne
inc
sub
stc
gs
xchg
push
cmpsl
jl
add
jo
fdivr
push
xchg
xchg
xchg
fstpl
movsl
repz
jb
add
cltd
addb
test
ret
inc
aam
movsb
pop
sub
mov
jmp
mov
and
mov
ljmp
mov
inc
sbb
das
pop
mov
dec
sbb
mov
add
sub
xor
adc
push
insb
cltd
nop
rcll
lret
repnz
imul
sbb
xchg
cmp
lods
jl
sbb
jne
mov
xor
fs
stos
mov
lock
repnz
cmpb
xor
sub
lahf
arpl
add
dec
cmp
dec
adc
or
jo
clc
mov
adc
jmp
mov
aad
dec
iret
jbe
sahf
pop
add
adc
add
mov
add
incl
lods
mov
insl
test
mov
rclb
push
inc
sub
shrl
mov
sbb
incb
cmpsb
repz
adc
mov
or
add
sub
nop
test
jb
xchg
cld
iret
pop
push
ja
aad
rorl
and
ljmp
add
movsb
inc
mov
and
dec
or
jbe
pusha
lcall
mov
aas
out
out
fmuls
inc
sarl
mov
cmp
rcll
pop
xchg
inc
pop
addr16
xchg
pop
sub
int3
or
push
dec
ds
rclb
pop
jb
xchg
call
les
mov
outsb
out
rcr
clc
mov
jno
jbe
pop
push
push
arpl
lock
and
and
pop
int
lea
mov
or
int
enter
mov
or
mov
cld
lock
jmp
std
jmp
mov
xchg
shll
push
push
and
or
in
roll
sti
das
pop
dec
pop
lahf
sub
sub
mov
xor
add
clc
imul
pop
xchg
lret
pop
push
cmp
fldcw
sarb
fnstenv
pop
inc
icebp
mov
push
mov
sbb
add
jg
pop
xor
xor
and
and
cmp
pop
mov
loope
cli
popa
push
out
dec
adc
std
push
aas
je
lret
add
mov
bnd
mov
cmc
shrb
pop
das
test
mov
sub
inc
sahf
fiaddl
fdivrp
aam
add
test
inc
div
jae
push
or
jp
mov
jae
or
hlt
lods
shrl
mov
js
jge
and
and
es
dec
scas
mov
loop
pop
outsl
mov
mov
imul
pop
mov
or
mov
push
es
mov
ljmp
mov
data16
push
xchg
inc
adc
and
enter
push
into
pop
and
ds
cltd
fcom
jp
in
adc
jno
pop
jns
xchg
fldenv
mov
aam
sub
jmp
mov
pop
std
jae
xchg
cmp
sahf
push
loop
ja
insb
aam
add
add
add
xchg
adc
mov
test
int3
shlb
fucomip
test
icebp
ja
add
xorb
lods
imul
scas
les
pop
and
xor
insb
sbb
cltd
shrb
push
mov
into
bound
jb
or
ljmp
inc
sbb
fwait
outsl
xchg
daa
add
dec
xlat
mov
int
loop
aam
pop
inc
mov
xor
jbe
mov
loopne
faddl
add
out
frstor
mov
xchg
mull
jle
push
dec
dec
lret
sbb
fmuls
adc
js
jle
ja
or
or
mov
arpl
fsubrs
inc
mov
sbb
mov
pop
lahf
sub
pop
cs
dec
loope
and
or
dec
lods
hlt
daa
push
fistpl
jno
das
fisubs
push
push
cmp
or
pushf
lods
jg
pop
popf
sub
xor
and
xor
sbbl
cmp
mov
inc
dec
imull
pop
daa
fdivrs
mov
sub
jecxz
icebp
lret
loopne
fbld
xor
loop
nop
mov
xor
ds
jnp
inc
push
je
out
pop
scas
or
fcmovne
mov
mov
clc
xor
stos
mov
jne
iret
stc
fimull
ss
push
xchg
cmp
xchg
and
pop
sbb
jecxz
xchg
pop
fcom
sub
rol
xchg
push
out
aam
xchg
or
loopne
mov
fwait
notb
xchg
cmp
insl
pop
bound
notb
lea
add
inc
mov
cli
lahf
test
movsb
dec
sub
inc
sti
aam
vmwrite
popa
pop
movsl
sbb
xor
mov
in
mov
xchg
and
ret
cmpsb
test
stc
dec
lods
and
call
push
daa
pop
add
clc
fs
das
adc
movsl
addr16
scas
aam
mov
jmp
mov
lods
loope
adc
jge
test
mov
das
into
push
add
push
xchg
mov
clc
add
jo
pop
std
xchg
inc
testb
jo
sbb
loope
stos
and
fbld
mov
jbe
nop
movsb
ds
div
frstor
jae
sub
fmull
nop
test
inc
movsl
lret
andl
js
cmp
mov
jo
andb
add
push
in
out
xor
les
outsl
lret
lds
jge
fisttpll
sahf
bnd
into
imul
popf
add
dec
daa
int
add
jle
mov
xor
mov
sub
into
mov
mov
out
outsb
inc
push
in
js,pt
jns
xlat
idivl
inc
xchg
or
cli
mov
daa
xlat
mov
cmp
and
hlt
and
mov
mov
ja
mov
sub
inc
sbb
or
daa
lahf
add
pop
lret
iret
inc
inc
pop
mov
stc
sti
cmc
mov
rcr
lret
jbe
sti
push
sarl
mov
rolb
lods
push
into
pop
movsl
and
jno
movsl
in
fwait
mov
push
test
dec
sbb
or
dec
xchg
push
ret
rclb
xor
add
mov
xchg
jbe
mov
sub
mov
push
pop
xchg
daa
pop
lret
in
insl
mov
dec
jmp
imul
loopne
or
shll
fistpl
movsl
jg
insl
in
pop
int3
push
push
cmc
jl
pop
push
xor
test
into
outsl
dec
jbe
cli
or
aad
loop
cmp
js
adc
nop
xor
add
mov
lahf
rol
popf
push
lcall
mov
iret
mov
xchg
mov
pop
mov
push
mov
enter
cli
mov
adc
cs
repnz
jno
sub
push
pop
xchg
mov
mov
mov
hlt
add
lea
test
cmp
add
xorb
or
mov
mov
mov
pop
aas
add
jo
pop
mov
push
orl
add
ds
pop
jge
dec
stos
cli
cmp
mov
cmp
bound
fcomps
leave
cmp
cs
cmp
out
imul
push
and
std
sbb
sub
push
lods
adc
mov
rcl
inc
test
jbe
jo
cmp
fadd
push
gs
dec
mov
lds
add
js
jg
popa
push
jo
add
aam
lret
jp
jb
cwtl
dec
fs
shr
les
sbb
cld
cld
mov
inc
cwtl
lea
icebp
mov
mov
mov
adc
and
test
aas
xor
dec
dec
movsl
test
pop
lods
pop
mov
mov
leave
cmpsl
call
imul
dec
cld
xor
xchg
test
mov
jp
rcrl
cmpsb
mov
dec
aad
add
pop
std
inc
mov
std
jge
inc
in
mulb
push
adc
mov
popa
pop
test
pop
dec
jge
cmpsl
mov
movsl
jno
sti
sti
lcall
enter
sbb
das
mov
mov
cmp
jmp
mov
test
movsl
test
in
dec
add
xchg
pushf
xor
stc
in
pusha
sub
enter
jno
lds
jge
push
push
cmpsl
stos
stc
mov
push
jg
test
xchg
fcomps
sbbl
hlt
xor
insb
and
mov
std
mov
mov
and
scas
repz
popf
fstpl
fs
cli
sbb
enter
insb
mov
jne
mov
cld
xlat
imul
notb
add
ja
inc
mov
sub
push
adc
lcall
inc
cld
in
mov
dec
sahf
sub
sti
aaa
sub
or
add
push
mov
popa
pop
xorb
xchg
outsb
xchg
mov
mov
push
push
push
rcrl
andb
or
sub
mov
inc
add
sbb
faddl
or
xor
jnp
clc
inc
sub
pop
lret
cltd
outsl
sub
pop
xchg
add
pop
test
jb
mov
leave
mov
pop
xchg
push
inc
lgs
mov
xchg
decl
cmpl
lcall
in
sbb
cmc
test
add
dec
movsb
lods
push
shl
lahf
sbbl
ret
orb
clc
pop
sub
mov
and
repz
dec
jl
scas
jmp
scas
sub
xor
mov
jmp
sub
inc
or
cltd
dec
xchg
fimull
sub
push
xchg
xor
add
pop
andnps
ds
xor
lds
insl
inc
das
ds
cmp
inc
adc
adc
mov
inc
cwtl
xchg
jae
rcrb
in
test
push
and
ret
imul
flds
xchg
mov
fmul
mov
adc
fdivrs
dec
sbb
imul
in
aaa
lods
outsl
or
jle
pop
sbb
stc
test
push
dec
mov
mov
in
add
cltd
and
mov
cld
sub
lods
push
xchg
sahf
orl
movsb
pop
cmp
sub
es
cli
ffree
add
jns
dec
hlt
adc
rcll
or
divl
stc
jg
dec
jecxz
push
and
pop
fildl
les
dec
mov
sub
sar
push
or
pop
inc
leave
scas
loopne
add
jo
xchg
cltd
rcrb
sbb
mov
test
mov
les
loop
loope
lds
or
mov
adc
in
inc
pushf
xor
int
bound
inc
mov
std
dec
outsl
cltd
cmp
fucomp
sub
xor
push
test
xor
sbb
scas
enter
inc
lahf
pop
lods
mov
sbb
mov
fbstp
shl
push
xor
pushl
and
inc
jne
fs
movsb
ret
addr16
mov
jle
push
or
insb
mov
xchg
jns
ds
push
inc
inc
push
pushf
cmp
sub
jg
call
cmp
and
mov
cmc
sbb
xchg
push
daa
jg
movsl
mov
out
dec
xchg
jecxz
fwait
subb
inc
aas
adc
les
adc
jp,pt
test
jns
mov
cmp
aam
aaa
mov
jecxz
jnp
xchg
or
pop
pop
test
inc
mov
lds
mov
mov
sbb
inc
imul
jp
mov
lahf
lods
xchg
adc
xor
ds
pop
jecxz
enter
lock
and
jnp
imul
in
cltd
in
ds
and
aad
int3
jns
out
sub
pop
mov
mov
push
pop
jae
and
sub
ret
cmp
cmpsl
jmp
in
sub
or
sub
xor
aaa
push
out
mov
push
aam
outsl
mov
jb
cmp
cmpsb
mov
pop
xchg
cmp
push
jmp
push
pop
adc
ja
int
repz
and
jecxz
sahf
mov
sbb
pop
hlt
sub
lret
mov
sub
mov
call
xor
dec
movsb
ds
jno
ja
in
xorb
sbb
push
in
mov
mov
cmp
mov
cltd
leave
scas
arpl
mov
cmpsb
pop
mov
push
stos
mov
pop
cwtl
jb
sbb
xchg
pop
lods
out
mov
and
lahf
js
adc
stc
and
leave
or
sub
std
adc
cmpsl
mov
mov
adc
sbb
xchg
repz
je
or
and
dec
mov
aas
xor
mov
clc
xor
mov
xlat
repnz
xchg
xor
imul
xchg
int3
push
out
rcl
aam
pop
cmpsl
hlt
les
outsl
or
xchg
dec
and
push
pop
sbb
mov
or
dec
sbb
lock
sub
and
jnp
xchg
xchg
jbe
dec
cmp
jo
sbb
xlat
pushf
sarb
call
sahf
mov
inc
out
movsb
adc
or
enter
mov
jle
lret
mov
or
xor
adc
es
push
mulb
popa
lods
divps
xor
cmp
lahf
fidivs
push
fstps
ds
fnop
cld
aad
pop
jp
aad
rcll
mov
in
add
cli
enter
cltd
inc
mov
popf
fistpl
shrl
pop
mov
jo
arpl
test
lahf
push
outsl
and
lcall
and
int
dec
adc
data16
sub
add
jecxz
push
cmp
mov
pop
cli
call
adc
or
inc
jns
into
loope
or
inc
or
jbe
insb
out
clc
bound
push
xor
shlb
inc
cmc
xor
ds
cs
pusha
push
iret
push
jge
dec
dec
mov
mov
and
dec
lods
pop
push
aaa
stc
mov
jns
call
js
and
xchg
aaa
mulps
jecxz
shl
adc
sar
orl
dec
aam
or
adc
or
scas
push
out
sub
lcall
pop
es
pop
cwtl
out
xchg
in
sbb
cs
sub
mov
mov
lds
pop
ds
sti
push
ds
mov
push
test
movsb
movsb
mov
sbb
pop
gs
ficompl
bound
dec
shll
fisubrl
bound
xor
jp
xor
mull
ret
fisttpll
sbb
iret
fisttpll
cwtl
in
cmc
fimull
rcrb
inc
sahf
add
push
outsb
or
lods
les
jmp
out
insb
pushf
leave
loope
popf
das
push
push
in
jbe
pop
inc
inc
sbb
jnp
add
in
aad
jns
mov
rcrl
mov
cltd
jecxz
cmpsb
test
hlt
stos
cmpsb
sbb
dec
mov
push
push
jns
xor
mov
cmp
testl
sbb
sub
shrb
arpl
ljmp
or
mov
sub
xor
cmpsl
mov
dec
xor
or
ficoms
ljmp
imulb
xor
sbb
xchg
jl
pusha
sti
add
xchg
scas
fldt
adc
fs
les
adc
int3
out
loope
mov
andl
les
inc
add
dec
loop
xor
sahf
jecxz
gs
fimuls
mov
dec
pop
jne
ja
mov
mov
or
pop
ds
add
mov
xchg
push
jo
stos
dec
popf
pop
sbb
scas
and
push
cmp
xchg
addl
mov
or
xchg
cmc
out
push
dec
xor
push
sti
ret
jmp
cmpl
gs
mov
stos
push
and
sbb
add
std
into
outsl
fwait
adc
out
dec
cmc
mov
xor
out
bound
insb
repnz
cli
loope
icebp
mov
push
fsubrl
incl
jne
mov
add
xchg
insb
or
lret
dec
xchg
jnp
mov
repz
push
mov
sti
xor
cltd
sub
mov
dec
mov
pop
dec
cmp
pushf
mov
xor
mov
sbb
sbb
pop
outsl
adc
jl
xchg
jp
mov
jo
xchg
pop
mov
jne
dec
fmul
and
bound
push
push
push
add
push
xchg
mov
inc
add
jae
lods
and
push
dec
or
cmp
pop
xchg
and
mov
inc
pushf
add
cwtl
clc
inc
notrack
dec
sahf
arpl
in
insb
pop
shrb
or
dec
and
idiv
lahf
add
cmp
fstl
jecxz
ja
add
dec
mov
mov
push
call
inc
scas
adc
dec
sbb
pop
add
outsl
sbb
xchg
pop
pop
cmp
insl
rep
adc
adc
inc
pushf
mov
in
xorb
popf
sbb
adc
dec
mov
and
cli
xchg
imull
aaa
jmp
icebp
popf
aaa
pop
fisubrl
pop
mov
xlat
push
fimull
sti
inc
lock
sarb
cmpsl
xchg
mov
jge
sub
xor
jmp
cmp
loope
lahf
rol
pop
call
loopne
into
mov
std
push
sbb
lods
adc
mov
cmp
inc
mov
and
and
icebp
std
or
ret
mov
xchg
xchg
sbb
inc
jno
outsl
iret
loope
inc
or
inc
mov
push
das
push
jl
dec
sbb
negl
add
mov
out
aad
jl
pop
shr
or
pop
sti
xchg
or
sbb
xchg
add
inc
stos
hlt
sub
lods
aas
enter
lods
push
xlat
jb
jp
xor
stos
ror
inc
jns
popf
jno
gs
inc
aad
iret
or
pop
leave
loopne
cmpsl
loope
adcl
push
xchg
push
adc
pop
xlat
shll
jo
lret
mov
and
xor
push
xor
add
mov
mov
xchg
mov
movsb
test
jbe
subb
nop
out
and
aam
adc
adc
icebp
adc
fs
or
sahf
push
pop
mov
pop
xor
ds
incb
pop
fs
lds
mov
jne
mov
dec
adc
add
aad
dec
mov
mov
flds
mov
and
pop
mov
je
push
jae
xchg
dec
pushf
inc
call
sub
cmp
mov
cmc
std
jmp
scas
les
dec
and
add
ljmp
add
aam
inc
ss
xor
sub
lret
sbb
popa
xchg
push
imull
aas
mov
inc
push
stc
fldenv
insl
push
jmp
out
and
arpl
mov
xor
lds
xchg
sub
enter
sbb
scas
sti
cltd
sbbl
clc
ss
and
pop
adc
sbb
and
nop
fwait
aas
sub
xor
mov
dec
xor
ljmp
push
aaa
mov
push
mov
and
and
add
dec
into
les
inc
test
iret
lahf
nop
icebp
xchg
or
fisubs
shl
lods
cmpb
je
das
mov
mov
xchg
push
int
scas
jns
addb
fnstsw
sub
rorb
fstp
mov
push
xchg
mov
cmp
out
mov
or
fimull
out
or
push
adc
xor
ds
ficomps
scas
jmp
xor
ljmp
sarl
andb
aaa
add
push
hlt
stos
xchg
outsl
imul
adc
and
or
jo
add
or
mov
lcall
fstl
pop
sub
push
ljmp
jge
sti
cmp
inc
sbbl
dec
repz
xchg
adc
test
jle
inc
insb
add
mov
testl
outsl
or
addr16
fstp
mov
pop
jns
pushf
leave
mov
jmp
inc
cmp
test
dec
sbb
xchg
lret
jp
adc
lds
sub
mov
pop
mov
rorl
mov
icebp
daa
jecxz
shll
data16
mov
ljmp
sub
push
data16
sbb
sbb
push
sbb
mov
aaa
stc
mov
mov
es
das
dec
inc
mov
sub
inc
test
mov
cmp
adcl
pop
mov
pop
xchg
icebp
outsl
cmp
les
sbb
pop
cmp
cmp
stos
xchg
inc
pop
mov
push
clc
iret
mov
jno
mov
pop
sub
in
std
push
pop
and
lods
adc
das
mov
push
jg
imul
mov
ss
push
adc
scas
std
adc
cmp
and
cmpsb
dec
cmc
xchg
mov
dec
popf
mov
cmc
sbb
sbb
ljmp
mov
mov
imul
sub
jmp
rcrl
sbb
clc
mov
pop
daa
and
test
fmull
das
mov
sbb
iret
inc
and
add
or
add
shll
lods
and
mov
sbb
imul
arpl
inc
testl
dec
mov
bound
outsl
data16
nop
mov
lds
add
loopne
add
xchg
cmp
jecxz
jae
mov
rorb
jg
movsb
jns
and
mov
push
sahf
pusha
jae
push
lea
frstor
mov
lea
dec
ret
addr16
call
push
dec
dec
add
sub
out
out
jecxz
jbe
jo,pn
xchg
in
cltd
cld
negl
push
in
test
pop
push
adc
xchg
mov
movsb
mov
pusha
sbb
mov
or
pop
out
test
mov
mov
inc
lods
pop
cmp
ficoml
out
add
in
sub
stos
outsl
divb
inc
jge
fstl
mov
mov
lods
iret
inc
gs
test
es
shlb
mov
pop
fistpl
cs
mov
popf
push
fildl
aad
push
fwait
cs
insl
jno
dec
add
test
jno
xchg
cli
sbb
mov
sbb
push
cmpsl
imulb
lret
out
push
adc
jae
jp
fstp
fnstenv
je
push
jge
rorb
ret
and
js
rclb
lret
ret
mov
out
xchg
shrl
and
jmp
xchg
adc
movb
push
jp
repz
xor
fmul
mov
lret
les
pusha
cmpsb
out
sbb
add
dec
cwtl
mov
mov
jb
xor
xor
xchg
push
leave
shrl
lock
push
xchg
bswap
cwtl
xor
lods
sbb
fucom
data16
mov
pusha
push
mov
push
mov
sbb
add
xchg
pushf
movsb
int
xchg
push
popa
push
roll
inc
xorb
int3
daa
pop
jbe
out
push
mov
xchg
cltd
push
pop
or
jecxz
push
daa
pop
pop
mov
and
das
insl
cltd
mov
pushf
jb
sub
aam
movsb
cmp
jecxz
aaa
loopne
push
or
sbb
jno
sbb
push
dec
xchg
push
cmc
out
lcall
mov
lret
sub
sar
sti
loopne
pop
out
in
shr
xchg
fdiv
mov
or
outsl
call
in
mov
mov
sub
or
push
movsl
mov
xchg
jl
mov
popa
repnz
adcb
les
sub
rorb
fmuls
xor
pop
jp
xchg
add
jb
and
adc
mov
imul
inc
mov
out
mov
dec
ss
in
jge
mov
popa
jno
les
mov
cmp
notl
cmpsl
jne
xchg
leave
aam
jns
lods
sub
jmp
push
inc
roll
cmp
add
test
sub
pop
push
lahf
xchg
int3
mov
ja
rorl
dec
nop
xor
push
je
xor
adc
mov
sub
lds
sbb
fldl
sbb
xor
push
xor
insb
push
mov
cld
mov
cmc
pop
leave
jb
fisubrs
ja
out
pusha
mov
adc
sbbl
jo
pusha
fimull
shlb
rcl
and
add
addr16
fucomp
lret
inc
inc
divb
loopne
inc
mov
inc
jo
cmp
dec
mov
sti
adc
mov
mov
ss
movsb
mov
xchg
add
dec
daa
sbb
into
call
mov
call
mov
pop
add
adc
adc
jle
pushf
push
xchg
into
cmp
in
mov
pop
and
ret
fsubl
out
movsl
in
scas
cmc
xchg
sbb
fsts
xchg
mov
mov
in
out
cmp
arpl
push
xchg
push
push
adc
cmp
testl
and
test
and
inc
stc
sbb
je
cli
out
out
cs
push
lods
xchg
cwtl
add
xchg
sbb
inc
cmp
loopne
sbb
cmpsl
jbe
push
jl
icebp
xchg
or
push
icebp
add
sbb
lret
ljmp
ljmp
pop
mov
dec
movsl
lcall
movsl
scas
pusha
out
jmp
js
jno
jbe
jmp
ret
dec
lahf
sbb
ret
fwait
lret
mov
nop
xchg
fbstp
mov
and
sub
lea
jmp
mov
xor
sbb
not
into
test
in
jae
xor
cld
sub
jle
dec
sub
inc
es
mov
cwtl
lea
es
and
orl
sub
movsl
shr
mov
jbe
jecxz
shrl
adc
xchg
mov
enter
mov
xlat
push
lret
js
and
sbb
shrb
pop
xchg
add
jmp
or
xchg
xchg
dec
xchg
and
daa
push
ret
jecxz
inc
add
clc
mov
scas
push
or
test
sbb
jns
aas
ret
mov
mov
fsubl
xchg
xor
xor
cmp
pushf
push
fdivl
stos
adc
xchg
popf
orb
push
into
sbb
xlat
sbb
xchg
dec
push
std
nop
pusha
mov
std
pop
cmp
and
stos
push
fisubrs
add
jnp
sbb
stos
jno
pop
sbb
xor
and
cld
mov
mov
add
scas
cmp
xor
dec
xchg
scas
adc
js
loope
notl
inc
incb
jle
push
scas
pop
daa
adc
lods
pop
mov
inc
jmp
lret
jp
add
loop
dec
insl
popa
icebp
cmpsb
pushl
stos
dec
or
loop
cmpsb
popf
loop
rol
arpl
push
xchg
out
out
clc
stos
movsl
xchg
xlat
rolb
push
int3
lock
psubb
cmpsl
sub
imul
lahf
ret
dec
and
call
or
jb
push
mov
sbb
and
shlb
cmp
inc
icebp
clc
sbb
cltd
pop
fdivrs
mov
lods
pop
fwait
sbb
sarl
sahf
icebp
dec
jb
inc
cwtl
xchg
pop
sub
ds
xor
cwtl
and
pop
dec
jle
or
pop
sub
leave
mov
push
inc
sub
inc
pop
mov
mov
push
mov
pop
aam
fiadds
imul
ret
pusha
das
and
xchg
pop
dec
push
dec
mov
jne
outsb
imul
ret
add
adc
in
inc
xchg
loopne
notb
mov
xchg
xchg
aam
xor
daa
and
repnz
pop
repnz
xor
lcall
and
arpl
out
push
pop
lret
xchg
fwait
cmp
rcl
add
push
and
xchg
jnp
xor
xlat
popl
mov
pop
push
jecxz
stc
out
jo
stc
inc
loop
mov
adc
or
sahf
sbbl
repnz
faddl
cwtl
das
imull
test
outsl
jae
pop
dec
data16
push
in
hlt
popf
sbbl
sub
enter
sub
mov
sbb
mov
sbb
adc
jnp
sub
or
cld
and
sbb
cmp
mov
popa
stos
int
and
ljmp
ret
ljmp
dec
xor
lock
ljmp
inc
imul
pop
sub
jge
daa
push
dec
lods
jae
out
or
lcall
and
mov
cmpsl
cmp
fadd
dec
movsl
adc
cli
bound
adc
mov
fstp
or
out
sub
enter
xor
dec
out
sbb
push
pop
and
push
je
sbb
mov
pop
ds
inc
jge
loop
mov
loopne
scas
xor
push
fisttps
cmp
push
xor
cmpsb
jb
pop
cmp
inc
scas
mov
mov
xor
aaa
adc
sarl
inc
out
aaa
adc
dec
xchg
add
xchg
shlb
cwtl
inc
addr16
add
lret
pop
movsb
jg
lock
xor
and
dec
aam
sub
jno
xchg
repz
push
mov
jns
push
test
cwtl
mov
pop
push
adc
xchg
repz
sahf
mov
jae
mov
jno
fmull
add
add
add
popa
je
lcall
push
int
adc
push
xchg
push
push
mov
fstpt
jl
adc
lds
dec
xchg
jae
stc
xchg
cmp
or
push
dec
fidivs
mov
imul
fimuls
adc
cld
repz
test
sbb
pop
out
push
movsl
xchg
pop
stos
xor
cmp
mov
dec
mov
and
xchg
mov
push
jle
out
cwtl
lahf
mov
sbb
ljmp
push
gs
dec
inc
imul
cmpl
fucomip
stos
fwait
dec
dec
inc
rolb
pop
push
pop
xor
add
jp
jne
and
adc
pop
and
loopne
fdivrs
push
fists
call
lea
jne
xlat
mov
mov
cli
xor
cltd
testb
cmp
dec
push
addr16
cmp
sbb
aaa
fld
test
int3
cmp
inc
sub
je
push
sub
roll
orb
mov
cli
pop
push
repnz
push
sbb
and
mov
push
outsl
mov
xor
sbb
add
xchg
push
xchg
sbb
ja
lock
mov
dec
cmp
rolb
imul
cmp
push
decb
sahf
fists
mov
sbb
icebp
sbb
mov
lods
xor
loop
cmp
fsubrs
or
fiadds
popf
cmc
dec
je
mov
js
mov
insl
jge
cmc
icebp
mov
repnz
ficoml
shl
sub
add
mov
lcall
mov
imul
adc
out
dec
and
ja
push
push
std
mov
clc
mov
dec
cmp
test
push
outsb
mov
jnp
mov
push
lahf
ljmp
cmpsb
pushf
sti
push
popl
cmc
pop
lahf
sti
mov
jl
bound
arpl
push
sub
imul
daa
sub
inc
cltd
and
bound
or
ss
sbb
movl
mov
inc
xchg
ficompl
add
nop
aad
pop
aaa
push
pusha
sub
mov
sbb
rcr
shlb
sub
sbb
outsb
jb
hlt
jp
testb
xchg
xor
sbb
mov
cmp
test
jecxz
jnp
js
imul
sti
lock
and
outsb
jecxz
inc
xorl
aas
mov
pop
pushf
les
adc
and
cmpsb
mov
push
push
push
dec
push
jnp
outsb
xchg
xchg
movsl
jmp
jl
int3
dec
sub
and
scas
cli
cmp
or
pusha
in
mov
xor
mov
sahf
flds
andps
arpl
fistpl
inc
sub
and
gs
test
pop
pop
jmp
daa
sarl
jo
mov
cmp
lret
gs
test
hlt
loopne
push
pop
js
sbb
adc
punpcklbw
push
dec
mov
add
mov
sbb
das
dec
cmpsb
nop
fidivrs
or
mov
dec
adc
outsb
bound
inc
and
pop
arpl
sbb
popf
adc
xorl
xchg
adc
fwait
sbb
imul
adc
pusha
insl
aam
out
iret
jle
adc
mov
jg
sahf
out
stc
mov
cmpsb
jo
mov
pop
sbb
cmpsb
les
shll
fdivl
testb
pop
cld
mov
fwait
shrb
cmpsb
xchg
sbb
iret
stos
xor
movzbl
cwtl
fdivrl
scas
jne
mov
int
sbb
push
test
inc
xchg
or
rcrl
push
jne
lret
push
push
js
daa
lock
pop
jb
add
ss
loop
negl
ret
cmp
mov
push
push
xchg
movsl
ja
add
out
in
cmp
bound
pop
mov
pop
int3
jmp
inc
jno
dec
jmp
sbb
nop
lods
xchg
lret
adc
clc
xchg
and
jnp
cmp
sub
test
movsl
add
mov
xor
stos
inc
xchg
pop
popa
jae
or
movsl
mov
jle
fwait
mov
aam
addr16
neg
and
pop
ds
jmp
push
mov
fidivrl
adc
inc
pop
aas
aad
fcoml
sbb
hlt
ljmp
push
xchg
inc
testl
cmc
add
xor
insb
fs
mov
gs
push
sbb
arpl
mov
out
add
daa
pop
xor
cwtl
mov
sbb
sub
mov
rorl
test
mov
cmc
loopne
aad
cmp
stos
push
stc
xor
addr16
loopw
push
sub
sub
push
jae
stos
shr
jb
cmp
bsf
enter
cmp
imul
push
lds
insl
mov
fstl
pop
cmp
es
jae
mov
dec
imul
lcall
jb
stc
lahf
cltd
clc
aad
xchg
stos
xchg
mov
mov
pop
xor
add
cmp
xor
scas
fs
adc
ss
mov
repnz
jge
int
mov
push
loop
stos
pop
push
jg
and
mov
inc
mov
xchg
push
or
pop
mov
sti
or
mov
xor
fsubl
clc
adc
cmp
push
pushf
sti
inc
orb
int3
mov
clc
loope
data16
jns
or
int3
or
pop
lahf
daa
mov
sahf
mov
fsincos
aam
jecxz
jbe
in
std
mov
add
fstpt
lock
addl
sbbb
push
jge
mov
mov
lret
mov
mov
cmc
jae
push
xchg
cld
add
outsb
mov
and
sahf
mov
jle
xor
cmpsb
in
push
notb
sti
add
jb
mov
popf
mov
lods
inc
das
pop
int
push
loopne
or
mov
outsl
adc
mov
xor
cmp
dec
fwait
outsl
rolb
mov
inc
stos
adc
mov
pop
ja
push
daa
loope
mov
sub
dec
jnp
xor
xor
inc
je
fstl
inc
xlat
and
call
jg
mov
aaa
call
xor
mov
sub
lahf
fs
push
or
jns
cmp
jl
xchg
fistl
xchg
add
mov
ror
jb
mov
scas
lret
jae
push
inc
loopne
aam
xchg
sub
ljmp
imul
imul
insl
pop
loop
jle
push
cmp
out
xor
in
jmp
loopne
mov
test
fnsave
dec
scas
sbb
jecxz
mov
out
negl
jmp
push
push
push
stc
jne
or
ud0
xchg
inc
jno
cwtl
lcall
movsb
mov
cmp
fs
inc
sti
fimuls
scas
cltd
add
sahf
rclb
xorl
mov
push
sub
mov
jb
xchg
xor
icebp
cli
jae
mov
std
and
test
mov
xchg
jne
add
pop
push
jae
dec
das
mov
dec
and
jns
pop
add
xchg
jns
arpl
jb
mov
xchg
sbb
jmp
pop
adc
jl
stos
fldl
mov
mov
xchg
insl
jp
cmp
jge
adc
xchg
sbb
pop
pop
sahf
adcb
pop
outsb
test
notb
fcom
mov
scas
mov
mov
pop
mov
call
push
cs
jnp
sbb
and
repz
push
pop
or
push
arpl
cwtl
in
add
jg
clc
mov
pushf
jnp
les
insl
mov
dec
mov
cmpsb
gs
and
xchg
add
sahf
xchg
cmpsl
std
add
test
or
add
or
xlat
cmp
aaa
stos
lret
or
and
lock
dec
mov
outsl
jo
aas
pop
push
pop
lahf
pop
inc
pop
dec
enter
adc
xor
pusha
dec
xlat
pop
out
cltd
testl
lods
pop
dec
or
lock
sub
cmp
pop
dec
out
pop
or
fwait
or
xor
leave
push
mov
add
in
in
inc
outsl
fcompl
sti
fs
stos
cli
bound
and
pop
mov
xchg
and
in
jg
fmulp
adc
cld
popf
push
loop
mov
fidivrs
mov
fimuls
add
adc
int3
inc
ljmp
addr16
les
pusha
or
mov
rcr
xchg
push
mov
dec
pop
push
dec
or
popa
xchg
call
fisubs
addr16
ds
sbb
mov
daa
sub
jne
sbbb
mov
dec
movsl
pop
aaa
pop
pop
lods
test
notb
and
and
xor
pop
and
roll
sub
ret
fistpll
jnp
insl
lds
out
xchg
rorb
aam
and
sbbb
cmp
scas
mov
sahf
insl
std
cmp
inc
sbbl
add
xor
mov
inc
mov
jb
insl
cmpsb
popa
push
sbb
mov
jne
xor
push
inc
gs
notb
pop
sub
sqrtps
pop
lea
in
fsubrl
mov
nop
inc
jae
jae
ljmp
in
out
ret
cmpsl
test
out
xor
sbb
bound
out
lods
shlb
pop
dec
jae
ret
cmpsb
ljmp
addr16
scas
mov
xor
xchg
lahf
jne
in
dec
mov
xchg
xor
aas
add
sbb
mov
clc
add
sub
cmpsl
sbb
and
dec
outsl
lock
cmpsl
popf
fnstcw
out
int
data16
cmpb
test
sbb
pop
xchg
dec
stos
insl
shlb
inc
movsb
adc
movsl
push
testb
inc
int3
add
add
jmp
iret
popa
cmpsb
inc
test
int
mov
mov
xchg
scas
shll
clc
les
or
ja
xlat
lds
jne
ss
mov
jne
std
roll
arpl
xor
lods
mov
push
pop
imulb
scas
xchg
sbb
push
aam
je
pop
shr
insl
push
xchg
pop
movsl
cmpl
dec
mov
jne
sbb
outsl
js
insl
bound
xor
or
clc
and
inc
add
jecxz
lret
hlt
inc
dec
xor
push
mov
or
push
cs
sub
xorl
inc
xor
cmp
fadd
xor
shrb
mov
gs
push
sub
movsb
in
movsb
addr16
add
mov
mov
jb
fs
pop
cmpsb
inc
ret
inc
cs
jl
inc
cmpsl
sub
add
push
sbb
xchg
dec
mov
push
pop
cwtl
pop
xor
xchg
inc
sbb
insb
dec
pop
fiadds
or
mov
popa
mov
and
push
and
pop
js
mulb
cmp
add
push
test
das
adc
scas
ss
daa
or
pop
and
adc
mov
xor
out
rorb
test
and
jle
out
jo
addr16
mov
nop
mov
leave
jb
jge
cmpsb
repnz
push
pop
imul
mov
imul
cwtl
push
cwtl
or
jle
in
mov
xchg
lods
stos
mov
xor
jp
in
shlb
repz
repnz
sbb
rcrl
nop
sarb
not
mov
lret
daa
and
cwtl
in
jb
not
mov
outsl
or
mov
xor
adc
aam
push
test
hlt
cvtps2pi
or
inc
push
dec
or
or
mov
inc
test
and
jne
call
or
enter
mov
sahf
cltd
js
mov
add
dec
inc
push
arpl
int
mov
mov
movsb
pop
ds
insl
mov
push
and
jnp
aad
enter
icebp
test
push
adc
push
inc
or
xlat
je
pop
mov
add
jb
push
mov
xor
imul
sub
loop
jns
lret
or
dec
mov
mov
sbb
fisubrl
sub
ljmp
jb
cmpsb
loope
clc
inc
jg
fsts
ja
cmp
icebp
insl
sub
xchg
ret
xchg
cmp
les
and
cltd
push
pop
nop
or
fcoml
das
mov
stc
dec
lods
cmp
sbb
mov
cmc
repnz
adc
loop
sub
xchg
out
xchg
push
ljmp
sub
loop
mov
cltd
cmpsl
fldcw
stos
test
gs
ljmp
cwtl
ja
out
inc
imulb
adc
dec
xlat
lret
dec
out
add
out
in
sub
mov
sbb
sbb
mov
int3
pop
outsb
jecxz
cmp
mov
outsl
mov
add
cmp
push
sbb
xchg
mov
adcl
mov
icebp
fnstsw
sbb
dec
adc
mov
ds
adc
shrb
adc
test
add
sub
clc
pop
pusha
xor
xor
test
popa
push
aas
pop
lret
icebp
cmc
inc
mov
pop
push
shlb
lahf
lret
xchg
es
lret
dec
mov
sub
jns
pop
sbb
add
dec
jmp
sbb
sub
flds
mov
cmp
inc
lods
flds
outsb
adc
mov
fistpll
int
int
out
shl
ja
xor
lock
cmp
pop
or
jecxz
mov
cmp
lahf
dec
mov
pop
push
inc
sbb
lcall
mov
push
or
out
addr16
bnd
bound
push
in
xor
sub
pop
pop
and
lahf
sbb
clc
push
push
aaa
in
xchg
rorb
sbb
repnz
rol
dec
ret
and
mov
popf
xor
cmp
loope
nop
cmp
xlat
call
arpl
adc
inc
xor
mov
pushf
bsr
mov
mov
adc
arpl
adc
ds
mov
inc
cmpsb
sub
enter
sarb
add
shl
xchg
shll
pop
in
cmp
cmpsb
sahf
ret
mov
adcl
lods
sub
dec
enter
sbb
sbb
dec
stos
adc
popa
xor
dec
stc
inc
mov
pop
sbb
cs
cmc
jmp
mov
dec
cmp
mov
adc
xlat
push
add
and
pop
push
rcrb
dec
xchg
insl
insb
mov
fdivrs
gs
arpl
mov
adc
mov
notl
clc
cmpb
orb
arpl
mov
aad
push
lock
inc
lret
stos
lods
dec
aaa
mull
ret
inc
in
into
inc
out
jl
cmp
mov
ficoms
mov
pop
int
sbb
cmpsb
xor
ret
jb
push
sbb
ja
ljmp
xchg
pop
popf
clc
cmp
lret
cmp
jg
mov
sbbl
inc
pop
call
shll
sub
jno
repnz
pop
cmpl
dec
xchg
pop
adc
cli
mov
popa
xchg
mov
daa
sub
mov
icebp
xlat
scas
mov
divl
aad
ss
imul
inc
push
mov
jmp
cmp
jmp
xchg
xchg
sbb
xor
pop
cld
enter
add
xor
jns
xchg
jno
fstpt
pop
adcl
ja
call
in
stos
inc
js
or
cmpl
scas
and
testb
fwait
and
push
sub
stc
and
lock
ds
je
ret
int
loope
iret
xchg
outsb
negl
cwtl
jno
push
in
jge
push
mov
insl
xor
ss
jae
push
insl
jmp
jno
sbb
inc
add
pop
aad
mov
cmp
sbb
repnz
hlt
lods
inc
ss
daa
cmpsb
orb
cmp
mov
xor
fdivl
and
jo
mov
aam
jbe
lret
pop
cs
fwait
push
in
fnstsw
jp
sbb
push
bound
fdiv
stc
rcrb
ret
pop
test
adc
or
add
lcall
stc
pop
and
cmp
push
pop
cld
in
add
fsubr
sbb
push
dec
mov
lods
out
mov
jns
cld
rcr
jle
xor
insb
dec
icebp
imul
ja
andb
and
mov
adc
sahf
jmp
push
pop
fnsave
mov
sub
stc
xor
push
fldenv
xchg
xor
dec
enter
shrl
cmp
jle
je
push
adc
xor
dec
mov
sti
adc
dec
daa
imul
ss
jmp
push
mov
xchg
sbb
mov
adc
xchg
inc
xchg
fisubrs
fnstenv
out
sub
jns
sti
jg
inc
mov
jmp
push
outsb
xchg
in
out
pop
adc
pop
iret
lods
out
mov
orl
mov
dec
adc
call
out
sbb
mov
fwait
cmc
sub
lea
movsb
mov
jno
popa
loopne
ficomps
add
lcall
jle
jecxz
gs
insl
out
insb
sub
loope
ds
mov
rcrl
inc
les
xchg
outsb
and
push
adc
dec
test
ret
push
mov
ds
repnz
aas
aam
mov
mov
pusha
mov
pop
fisubrs
inc
addr16
mov
push
cmc
mov
push
shrb
sti
rorb
push
lcall
adc
fdivp
xchg
xor
cmp
adc
in
ret
push
and
and
jge
and
mov
shrl
pop
outsl
mov
mov
add
pop
aam
fistpl
add
pop
and
jnp
mov
cltd
lret
std
jbe,pt
pop
loopne
dec
imul
dec
lds
mov
or
subps
sub
pusha
push
filds
aam
sub
popf
leave
xchg
xlat
cs
out
adc
or
lock
cmpsb
shrb
xchg
mov
jne
pop
ds
aad
and
xlat
push
pusha
mov
shl
aas
out
jbe
pop
xor
insb
cmp
arpl
arpl
std
ret
jp
sbb
pop
sti
sub
fs
jmp
addb
imul
xchg
test
jmp
in
test
lds
mov
out
mov
mov
lret
pop
mov
cmp
mov
jns
ljmp
mov
mov
movsl
outsl
les
mov
cmpsb
inc
xchg
sub
mov
xchg
dec
adc
loope
or
jl
inc
mov
push
sbbl
xor
mov
fs
mov
fcomps
add
cmp
insb
int
je
popf
adc
mov
ja
push
push
mov
sub
adc
out
out
xor
jge
inc
mov
inc
or
xchg
out
pop
and
push
jmp
nop
aaa
fldt
jecxz
adc
ret
repz
adc
push
call
int
sbb
fstpt
imull
js
std
test
out
test
clc
inc
mov
push
mov
cwtl
jge
mov
xchg
aad
sbb
mov
subb
int
jbe
or
xorb
mov
fs
fnstsw
mov
inc
mov
jg
ss
inc
or
xor
mov
jge
ss
scas
mov
test
shlb
loope
int
sbb
or
xchg
cmp
xchg
add
subb
hlt
out
jae
or
mov
sub
push
xlat
movsl
dec
int
cmp
xor
cmp
xor
adc
jl
or
xlat
int
and
test
popf
mov
dec
and
fimuls
int3
adc
push
pushf
adc
shlb
add
mov
jns
jbe
js
sub
jmp
repnz
jbe
mov
inc
adc
testb
out
scas
dec
jp
mov
sub
cmp
xchg
jp,pt
cld
push
push
out
xor
cmp
lcall
icebp
daa
aam
pop
stc
or
imul
push
lods
aas
sbb
pop
sbb
fs
xchg
pop
pop
subl
sarl
imul
lods
andl
sbb
sar
adc
mov
cwtl
leave
and
xchg
xor
es
jnp
jae
adc
mov
add
fidivrl
ja
lret
add
jbe
arpl
xchg
dec
jno
movsb
mov
inc
push
cld
adc
mov
xor
xchg
test
add
pop
out
push
and
add
push
mov
xor
pop
add
push
faddl
jno
repnz
cld
dec
cld
out
out
cmp
je
pop
lcall
xor
inc
movsl
sbb
pop
pusha
mov
fwait
sarb
jae
lcall
cltd
cld
push
jmp
adc
mov
sbb
push
gs
mov
lock
rolb
xchg
add
jbe
pop
inc
inc
xchg
ffree
or
dec
and
lods
movsl
push
ds
push
daa
jg
jno
aad
rcrl
xlat
mov
jb
rolb
add
lea
adc
mov
add
jns
jmp
test
addb
xor
cmc
mov
movntps
xchg
add
nop
ja
xchg
xchg
inc
cmpl
push
aaa
repnz
add
and
popf
sbb
inc
push
cmpsl
arpl
cmp
or
jmpw
cli
xor
xchg
sahf
test
pushf
inc
sbb
pop
cmp
xor
mov
adc
lea
pusha
push
lret
mov
mov
mov
mov
cmpsb
jmp
imul
lea
mov
jmp
cmp
and
pop
push
imulb
mov
fiadds
mov
inc
xchg
push
jmp
add
mov
in
loopne
lret
push
nopl
mov
inc
xor
mov
add
imul
int3
pop
pushf
dec
jecxz
insl
xor
dec
mov
lea
inc
sub
call
cmc
or
mov
mov
jmp
jne
loopne
in
cmpsb
cltd
lea
or
jecxz
gs
aad
or
cld
icebp
vdivsd
add
pop
push
jl
dec
mov
test
xchg
daa
mov
sub
insb
xchg
mov
addr16
arpl
and
stc
mov
stc
mov
outsb
cmp
shrl
jnp
push
mov
lock
mov
inc
jle
inc
aam
insb
lahf
aad
cmp
inc
inc
addb
pop
sbb
in
mov
fsubr
sub
xchg
aad
gs
push
lcall
mov
jge
roll
movsl
xchg
xor
arpl
dec
push
cmp
stc
cmpl
je
ss
push
loop
inc
jmp
xor
inc
je
or
lds
scas
jo
mov
mov
out
iret
subb
movsl
or
repz
test
xor
icebp
ret
xor
push
add
les
addb
add
sbb
jecxz
inc
sbb
and
stos
movsl
sbb
test
mov
cmp
push
add
shlb
outsl
xorl
mov
popf
push
mov
jl
bound
and
sub
pop
pop
sbb
lcall
inc
dec
imul
loope
stos
bound
sahf
jmp
dec
lahf
sarb
gs
iret
je
loop
outsb
mov
xor
push
jne
testl
pop
xor
jno
test
aad
mov
in
or
je
cmpsb
rclb
addr16
push
mov
divb
imul
sar
lods
clc
dec
mov
inc
and
xor
pop
rolb
stos
lcall
mov
arpl
dec
sbb
pop
push
mov
enter
or
aaa
adc
inc
push
rorb
lret
xlat
jmp
test
xchg
icebp
lods
pop
fildll
or
adc
adc
repnz
fsubp
mov
push
scas
fsubp
cmp
jbe
dec
fsts
jge
jbe
rol
pop
fbld
rol
out
lods
xchg
sti
and
scas
add
pop
sub
jns
js
test
push
mov
sahf
mov
adc
or
push
cwtl
add
loopne
ret
repnz
cld
fmuls
hlt
xchg
icebp
daa
mov
dec
mov
scas
jnp
and
cmp
mov
add
into
std
xchg
pop
sbb
or
cmpl
pop
ret
mov
lcall
aaa
iret
jo
mov
subl
mov
pop
push
lret
test
in
mov
sbb
mov
jae
cltd
call
cmp
push
add
fmul
lcall
les
int3
loop
sbb
aaa
pushf
add
cmp
ds
les
xor
jo
mov
mov
and
les
aam
call
repz
into
pop
ret
aam
scas
push
test
push
movsb
popf
sub
inc
je
lea
inc
mov
mov
xor
daa
cmp
insl
or
fwait
inc
mov
out
mov
add
sbb
xchg
rorb
pop
jge
mov
dec
push
adc
adc
enter
mov
pop
punpckhdq
push
pop
or
inc
mov
inc
mov
loop
xor
jno
enter
xor
mov
jnp
add
dec
cmp
mov
xchg
in
xchg
lret
jmp
ret
out
ss
and
xor
mov
add
jne
mov
test
dec
or
fidivl
sbb
pop
movsb
rcrl
inc
pop
aam
iret
xor
aad
popf
pop
outsb
aaa
addr16
cmp
xor
lret
add
dec
and
stos
fidivrs
sbb
cmp
mov
add
sbb
mov
test
clc
dec
cmp
push
adc
stos
pop
stc
adc
aad
sahf
clc
pop
into
pop
jbe
leave
test
xlat
lock
pop
aas
test
xor
repnz
dec
fimull
and
mov
xchg
fidivl
insb
inc
into
mov
cmpl
cmp
dec
push
add
dec
call
jg
mov
popf
sahf
mov
cmp
push
icebp
add
jmp
xorl
out
je
inc
inc
and
jmp
clc
adc
add
mov
jp
dec
cli
into
popa
scas
sub
cld
or
lods
jg
mov
mov
mov
ljmp
fdivrl
xchg
pushf
sbbb
and
mov
aad
inc
stos
mov
lcall
lret
push
mov
mov
sub
icebp
movsl
dec
mov
sti
cmc
jecxz
xlat
fidivl
cmp
fstpl
repnz
divb
or
negl
jmp
stc
push
scas
orl
sbb
xchg
xchg
lds
mov
or
dec
out
insl
or
notb
or
insb
rcll
mov
cmpsl
cmpsl
xacquire
pop
fsubrp
or
enter
repz
enter
flds
shrb
mov
sub
dec
out
repnz
jl
cmp
xchg
fbld
xor
pop
vpunpcklwd
data16
push
xchg
imul
shl
add
dec
pop
pop
shlb
xchg
jbe
ss
push
mov
cmp
cmpsb
in
idivb
dec
add
fldz
sub
adc
mov
lret
repnz
mov
rorl
pop
cmp
arpl
and
in
cmpsl
ficoml
and
out
sti
or
popf
out
mov
ds
dec
and
sub
xor
shrl
cmp
dec
repnz
inc
jne
jae
inc
jnp
xchg
popa
lds
adc
loop
jnp
sbb
cmpsb
inc
stc
cmp
scas
sub
gs
cmp
fidivl
fs
orb
or
stc
cmp
mov
xlat
xchg
xor
jg
jg
frstor
mov
jne
mov
stos
mov
mov
xlat
cmpsl
mov
mov
mov
pop
out
add
idiv
aas
fucom
xor
enter
mov
sahf
sub
mov
cmpb
mov
cmc
push
mov
dec
loop
and
pop
xlat
inc
add
xchg
leave
movsl
outsb
popa
loope
and
sahf
add
sbb
aaa
in
js
lods
jl
das
fildl
xor
sub
in
adc
stc
movsl
lahf
adc
insb
and
lods
mov
int
arpl
adc
add
add
pop
dec
mov
loope
out
imul
cmc
or
sub
inc
pushf
or
repnz
rcll
ret
in
inc
je
sti
or
lahf
fstl
mov
movsb
xor
pop
sub
xchg
push
adc
imul
inc
fiaddl
mov
loope
testl
aad
inc
xor
outsb
xchg
loopne
and
adc
jecxz
enter
jmp
loopne
shr
push
mov
sbb
xlat
rcll
add
int3
and
cmpsl
sub
rorl
dec
pop
pop
mov
adc
aas
ss
cmp
mov
mov
mov
push
push
jl
mov
imul
xorl
push
lret
xlat
je
out
out
pop
xadd
mov
dec
push
in
icebp
icebp
pop
push
sbb
mov
inc
mov
jnp
movsl
cwtl
mov
add
js
ja
fwait
xchg
roll
ret
push
jb
popa
imul
add
inc
add
jne
sub
in
enter
inc
cmp
test
lret
subl
adc
xchg
adc
adc
and
faddp
outsb
int3
sub
movsl
pushf
test
fwait
mov
and
in
fs
adc
outsb
and
pop
jl
outsb
shll
push
push
jne
pop
shr
popf
mov
add
pop
jge
mov
lcall
shrl
dec
hlt
out
mov
imul
or
pxor
sbbb
and
pop
or
sub
xchg
xchg
push
add
sub
into
in
and
rorb
pushf
sub
pop
dec
sub
inc
popf
insl
in
push
movsb
xlat
mov
xchg
cmp
out
dec
jecxz
rcrl
adc
pop
push
jns
out
das
mov
cmpsb
repz
scas
xor
cmp
mov
pop
fldcw
lret
rclb
xchg
jnp
xchg
shlb
test
outsb
mov
nopl
adc
jecxz
sbb
push
enter
push
lock
mov
iret
fsubp
js
cld
xchg
aaa
pop
lret
outsl
mov
mov
mov
in
sub
xor
mov
jl
pop
and
fbstp
pop
in
add
and
idivb
mov
xchg
mov
pop
cmp
je
push
sbb
pop
popa
sahf
dec
mov
div
inc
lds
cmpb
dec
mov
mov
test
sub
push
mov
pop
push
push
repz
and
out
aas
lcall
aad
dec
out
sub
mov
and
or
and
popa
mov
xor
xlat
push
int
xchg
mov
and
clc
divb
mov
ja
insl
push
push
lods
lea
imul
ss
fistps
xlat
mov
or
insb
cld
and
shrl
out
or
mov
pop
lahf
in
mulb
dec
inc
xchg
shrb
fstpt
xchg
jno
lods
int
arpl
sub
jae
cwtl
lods
andl
sbb
addb
inc
fldenv
jg
decb
mov
scas
pop
inc
in
pushf
xor
mov
lret
jmp
gs
shll
or
loopne
inc
in
pusha
arpl
pop
pop
push
rcr
outsb
dec
in
daa
testb
push
ljmp
in
mov
test
testb
xchg
lds
sub
mov
fldcw
xor
jb
pusha
or
mov
mov
ret
clc
sti
jnp
push
insb
mov
pop
addr16
mov
loope
test
mov
in
cmp
jb
lret
out
pop
and
mov
jmp
mov
dec
cmpsb
mov
ret
test
mov
mov
lcall
into
pusha
cld
sbb
imul
sbb
xchg
scas
pop
add
out
cwtl
xchg
lcall
ds
ss
mov
xchg
sub
jne
enter
int3
std
pop
fnstenv
or
pop
and
mov
fs
call
xchg
scas
dec
movl
cmp
test
mov
ret
cmp
mov
mov
enter
inc
das
fistl
xor
jg
pop
aam
push
inc
adc
inc
cmp
shll
test
lock
push
ret
rorl
xchg
sub
lcall
ja
ret
mov
test
cmp
leave
mov
mov
daa
mov
dec
pushf
icebp
scas
out
jo
push
lods
add
cmpb
cmpsb
adc
outsb
lods
add
inc
sarb
rorl
xchg
xlat
ljmp
or
int
adc
inc
push
push
cmpsl
idiv
lock
inc
mov
unpcklps
jmp
or
jl
mov
dec
loopne
inc
add
sbb
mov
dec
mov
bound
xchg
enter
inc
test
addr16
jmp
nop
jne
add
dec
push
mov
jecxz
jns
and
jno
mov
pop
sbb
inc
dec
gs
push
add
cmp
rcrb
test
scas
js
add
cs
jbe
adc
xlat
mov
shl
jnp
outsb
shl
iret
add
mov
lods
mov
icebp
add
cltd
mov
push
test
shlb
or
into
jg
jmp
mov
push
cwtl
ja
inc
adc
xor
sub
lds
pop
stos
adc
jecxz
pop
push
fsubrl
push
jbe
or
outsl
sbb
jbe
jecxz
cs
ret
loop
add
rcll
xchg
add
jge
clc
mov
cmpsb
sahf
fsts
pop
cmp
push
dec
sarb
or
add
pop
sub
fwait
lret
inc
jo
gs
iret
jmp
and
loop
negl
sbb
ljmp
mov
sub
data16
and
mov
repz
jmp
fstpl
xchg
mov
and
int3
scas
mov
xor
dec
call
push
and
cld
push
cmp
call
inc
xor
pop
sbb
push
andb
pop
cld
push
or
stos
ret
lret
jmp
fwait
mov
stc
dec
test
ss
cltd
sub
cmp
mov
mov
dec
xchg
int3
hlt
ss
aad
lret
mov
gs
jge
push
cmp
mov
inc
imul
pop
or
stos
popl
dec
cmpsl
adc
xchg
stos
mov
repz
xor
mov
inc
pushf
lea
adc
dec
jo
jne
mov
xor
int
aam
cmpb
inc
aad
mov
mov
sub
mov
mov
pushf
test
pop
in
hlt
dec
jb
xor
xor
adc
ja
hlt
xchg
lahf
mov
int
add
jge
pop
dec
inc
test
and
mov
sahf
shl
int
mov
add
in
dec
lea
mov
push
inc
and
mov
sub
or
push
mov
jle
fisttpl
mov
pop
sbb
cmpsb
fbld
xchg
pushf
outsb
arpl
subb
mov
xcrypt-ecb
cmpsl
mov
and
dec
lock
ret
or
test
iret
xor
lret
sbb
cwtl
fcom
jo
les
js
imul
xchg
movsl
dec
out
xor
push
adc
mov
xor
hlt
je,pt
sbb
mov
nop
and
js
stos
cmp
pop
in
add
nop
cmpsb
push
push
popf
sub
cmp
mov
stc
es
jae
sub
push
mov
jbe
clc
out
pop
push
test
ss
fcomps
testl
lahf
shl
mov
push
pop
xchg
stc
lcall
mov
push
les
mov
inc
aaa
stos
je
and
repz
jo
mov
jmp
pop
push
inc
icebp
cwtl
or
dec
mov
aaa
inc
outsb
xchg
xchg
adc
or
ret
mov
adc
scas
jb
sbb
fisubrs
adc
xchg
push
mov
shl
push
imul
push
cmc
mov
xor
cmp
pop
cmpsl
popf
pop
cmpsb
stc
movl
ss
in
mov
pop
lcall
pop
aam
mov
inc
xor
pop
inc
jb
mov
inc
lcall
aas
pop
test
inc
sub
or
pop
in
dec
hlt
das
cmp
addl
inc
xchg
mov
insb
pop
add
add
xchg
cmp
hlt
xor
shl
in
lock
cli
xchg
or
in
add
imul
call
pop
pop
inc
outsb
sub
outsb
out
cmpsb
cmp
adc
mov
xlat
jmp
inc
fildl
xor
arpl
test
das
in
rcll
lahf
cmp
mov
jae
sbb
inc
repz
fisubl
inc
lcall
jb
xchg
shll
loopne
xchg
inc
rcrb
push
push
xchg
jmp
orps
and
into
icebp
in
orb
ja
pop
in
gs
and
xor
push
sbb
push
in
or
lcall
xchg
cmp
clc
lret
test
xchg
push
xrelease
pop
shll
sbb
stos
xor
arpl
cltd
dec
mov
mov
inc
or
mov
sti
inc
sbb
insl
in
lret
pop
sarl
cmp
nop
add
sub
popf
pop
or
shlb
cmp
inc
cmpsb
sbb
adc
cmp
aas
or
les
das
test
nop
hlt
icebp
fs
jno
xchg
xlat
movsb
fmul
mov
adc
arpl
outsb
cmpsl
insb
pop
sbb
stos
xlat
mov
repnz
sbb
add
push
push
mov
jecxz
lods
mov
sub
imul
mov
inc
sahf
or
in
das
xor
repz
aad
push
cmp
adc
mov
lods
dec
clc
stos
dec
arpl
mov
adc
std
andl
pop
adc
mov
push
stc
ret
sbb
sbb
jge
xchg
ljmp
out
xlat
xchg
adc
sbb
dec
mov
sub
xchg
jmp
cmpsl
aas
push
add
subl
sub
mov
mov
pop
xchg
fimull
fcmove
push
add
aad
adc
push
add
xchg
call
and
inc
xor
push
imul
clc
mov
popf
jecxz
adc
push
cmc
imul
xchg
das
jmp
fdiv
in
jmp
stos
jg
cmp
mov
arpl
mov
outsl
out
mov
lock
cmp
add
pop
into
cld
inc
sub
test
popa
loop
sbb
adc
push
movsl
mov
ja
xchg
cwtl
sub
fmuls
nop
out
mov
enter
rcr
cmp
sub
fildl
sbb
daa
inc
aad
push
loop
jns
adcb
jae
subb
mov
std
jns
mov
cmpsb
or
pushl
rorl
sub
lods
sub
loop
jb
aad
dec
sub
sbb
cmp
testl
xchg
sub
divl
adc
xchg
cmp
pop
ds
add
cltd
int3
mov
stc
push
sub
cmp
add
js
mov
mov
jp
fdivl
adc
popf
movnti
cmp
stos
aaa
sarl
xchg
out
stos
sahf
or
addb
ret
sbb
lcall
cmc
inc
cmpsb
push
sub
or
jae
xor
setl
fsub
enter
aad
cs
mov
aaa
dec
icebp
aad
or
jge
das
popf
outsl
push
mov
xchg
ret
fisttps
mov
sbb
notb
scas
shl
es
push
cmp
hlt
mov
out
mov
in
and
mov
push
mov
cmc
push
push
mov
mov
mov
cmp
mov
outsb
out
fistl
cmp
add
imul
lret
and
dec
loop
dec
push
push
movsl
push
daa
add
bound
inc
pop
lahf
shll
cmp
mov
pop
mov
shll
pop
icebp
push
into
out
inc
scas
mov
adc
aam
loopne
mov
ret
push
inc
int3
add
lahf
xlat
stc
testb
or
lea
inc
je
in
jmp
xchg
enter
jl
aas
cltd
cmp
out
inc
iret
leave
push
xchg
jmp
dec
in
in
dec
push
sub
inc
cmpsb
loope
cmp
call
mov
sub
sahf
add
into
ret
jne
clc
sbb
xchg
mov
std
pop
dec
scas
rorl
mov
jle
out
gs
adc
sub
mov
adc
imull
lock
out
jne
lods
sub
outsb
jnp
dec
out
dec
dec
popf
jns
or
sub
push
xor
mov
sar
dec
in
arpl
fsubrl
or
pop
addr16
repz
mov
pusha
xor
adc
or
loop
mov
call
inc
add
imul
or
or
jge
and
xchg
xchg
mov
aam
loope
in
out
inc
arpl
loope
jp
xlat
stos
dec
dec
test
xchg
into
movl
int
push
sub
lds
sbb
sahf
sub
sti
lcall
ja
push
adc
sbb
or
mov
mov
and
fnstcw
push
mov
jne
lret
inc
pop
test
sub
das
stos
dec
sub
xchg
rolb
out
arpl
mov
into
push
aas
jb
mov
or
fwait
jp,pn
scas
dec
xor
xorb
pop
adc
jecxz
and
jb
add
dec
mull
andb
es
inc
mov
mov
ret
pop
add
jbe
pop
pop
lods
sub
or
push
daa
sbb
rcrb
jno
pop
shll
inc
add
nop
adc
fimull
jg
repz
roll
insl
int3
jmp
pop
bound
lcall
cmpsb
test
scas
mov
cmpsb
or
shll
add
nop
ret
cmpsl
adc
inc
pmullw
mov
push
fisubrl
cmpl
popa
mov
ds
in
adc
mov
push
jae
mov
clc
fdiv
mov
push
fstpl
stos
cli
sbb
mov
and
cmpsb
out
jns
cli
jmp
cmc
push
and
or
outsl
mov
jno
out
out
inc
mov
dec
jge
out
inc
jbe
add
hlt
or
mov
popf
pop
push
or
dec
stos
dec
sbb
test
jecxz
jns
call
xor
loop
or
or
xchg
or
add
push
mov
lea
ljmp
inc
sbb
jl
leave
jbe
aas
mov
dec
add
adc
dec
adc
mov
scas
inc
mull
ret
ret
pop
and
mov
jae
cmp
xchg
and
sub
xchg
jge
jl
push
aaa
mov
adc
adc
pushf
arpl
into
mov
add
push
jns
mov
outsl
movb
push
mov
jmp
rclb
inc
mov
pusha
aaa
mov
mov
je
repz
jmp
cld
int
imul
imul
jle
mov
and
lcall
mov
jo
pop
lds
mov
push
test
inc
orps
jg
rclb
in
fiaddl
sbb
loop
xor
or
nop
cmp
add
or
in
mov
clc
ljmp
cmp
sbb
or
xchg
add
movd
lods
mov
mov
out
xlat
mov
xor
push
xor
or
xor
cmp
push
xor
mov
arpl
mov
fidivs
scas
pop
pop
inc
push
or
hlt
sub
sub
xchg
push
lock
in
jne
stc
and
mov
lods
ret
enter
aas
lahf
arpl
mov
lea
mov
sub
shlb
or
add
sbb
int3
mov
lods
cmp
push
lods
subl
push
fs
lds
fcoms
in
rcll
clc
fnstsw
jno
fstpt
xchg
jo
fwait
dec
cmp
jl
push
in
inc
mov
shll
aas
scas
cld
cwtl
mov
popf
mov
adc
add
add
inc
loope
aas
lahf
jb
ja
xchg
xor
icebp
cs
xchg
leave
push
mov
push
sbb
xchg
add
mov
push
jno
jnp
pop
loope
sbb
and
mov
pop
mov
dec
out
or
and
mov
loop
pop
fsts
pop
fwait
dec
xorl
rcrl
xchg
cli
xchg
imul
dec
xchg
inc
adc
movsb
sbbb
sub
add
ljmp
cmpsb
sub
out
xor
lret
leave
or
sub
adc
in
xchg
jecxz
lret
mov
je
inc
lock
push
pop
test
push
add
enter
mov
rcrl
sbb
inc
or
loop
out
iret
or
xor
jmp
push
and
es
xor
jne
pop
pushf
cmp
scas
in
sbb
lock
pushl
ret
mov
adc
lret
mov
stos
cmp
sbb
pop
int
or
out
adc
push
cmpl
inc
fdivl
cmp
sti
jg
cmp
mov
roll
jl
imul
test
pop
ljmp
les
mov
pop
iret
fsubs
mov
bound
push
test
xchg
ficoms
xor
sbb
push
pusha
inc
inc
aaa
pop
sub
shll
jge
xchg
mov
shrl
fdivs
jnp
hlt
cmp
mov
lret
sahf
movsb
sbb
jae
pop
sti
scas
and
sbb
dec
jl
dec
xor
test
imul
adcb
in
call
dec
je
or
hlt
xchg
jle
sbb
cmp
iret
mov
xor
out
cmp
out
xchg
adc
mov
flds
lea
pop
or
test
insb
aad
pop
fstl
mov
enter
iret
mov
addb
or
fisttpl
mov
sub
outsb
je
push
jge
pop
jge
fdivs
mov
or
loope
cmpsl
loopne
cmp
jg
sbb
xor
pop
shr
fistps
sbb
mov
xor
idiv
arpl
cld
sti
inc
stos
mov
insl
inc
jg
dec
dec
pop
es
cmp
lret
fstpt
dec
sub
sarl
dec
and
and
push
enter
push
inc
cmp
pop
xchg
stos
fidivrl
rcll
sbb
out
mov
mov
mov
leave
sub
or
daa
cmp
andl
jne
sub
and
into
inc
mov
aaa
pop
inc
or
lods
jl
mov
shlb
roll
xchg
aad
stc
jg
orb
mov
cmp
xchg
or
ja
adc
and
lds
xchg
push
pusha
push
fimull
neg
sti
sbb
adc
push
dec
aam
and
mov
sbb
popa
cmp
sub
call
push
add
scas
cmpsl
xor
ficoms
sub
push
rcl
push
test
and
and
lcall
outsl
or
out
xchg
push
or
es
xchg
fmull
jnp
or
leave
cwtl
imulb
sbb
pop
out
mov
ja
fdivrl
or
test
and
and
in
nop
jp
push
das
sbb
push
sti
add
dec
dec
pop
or
xchg
xor
mov
pop
gs
mov
cmp
mov
shrl
sub
mov
jl
shrl
cltd
in
jo
jbe
leave
mov
jne
xchg
in
test
ja
inc
iret
or
loope
cmp
in
icebp
add
jb
pop
repnz
arpl
push
adc
push
push
popl
inc
xchg
call
mov
lds
sbb
cmp
cmp
enter
mov
cmp
or
addr16
jnp
cmp
ret
sbb
ret
in
rorb
jmp
mov
lock
xor
lret
addr16
mov
les
or
cltd
add
pop
inc
cmp
pop
push
jnp
pop
js
sbb
pop
sub
outsb
add
cltd
lret
mov
cmp
imull
ja
pop
in
movsb
xlat
push
push
mov
inc
cmp
dec
mov
mov
into
or
and
cmpl
enter
int
adc
in
stos
push
cmp
jle
leave
repz
mov
inc
sbb
sbb
js
dec
rcl
push
fwait
mov
xchg
jl
dec
outsb
mov
pop
nop
adc
pop
gs
push
mov
iret
lret
xor
fmul
jg
jmp
out
jle
and
jmp
adc
adc
cmp
les
and
add
loop
xchg
stos
fistpll
mov
cwtl
gs
jmp
repnz
lds
das
mov
pusha
lret
sbb
add
cli
or
push
mov
out
leave
mov
cld
xor
cmc
in
test
sbb
int
adc
inc
sbb
jge
adc
and
test
gs
dec
inc
ret
add
andl
adc
add
xchg
sbb
pop
dec
aas
pop
sub
xchg
sub
pop
out
pop
jmp
dec
fdiv
add
dec
and
jge
ret
inc
mov
cmp
inc
aas
cmp
in
pop
xchg
dec
adc
leave
repnz
inc
movsb
xchg
aas
xorl
pop
pop
iret
inc
popa
enter
jle
lock
cltd
aaa
sbb
add
mov
dec
scas
jbe
clc
aaa
gs
mov
mov
push
push
xor
inc
shrl
jbe
and
push
jg
daa
out
inc
mov
das
xchg
xlat
roll
hlt
adc
imul
inc
jns
icebp
cmp
mov
cmpxchg8b
into
mov
sub
xlat
ret
xorb
test
pop
test
mov
arpl
mov
dec
adc
cwtl
outsl
mov
mov
fstps
scas
daa
pop
pop
notl
sbb
dec
repz
xchg
xor
nop
in
cmpsb
pop
mov
inc
inc
add
pop
mov
xor
addr16
add
out
inc
loope
test
dec
mov
insl
loop
ds
lds
mov
adc
in
jnp
aad
jo
pop
sub
iret
xor
js
call
jle
add
imull
stos
out
lcall
clc
mov
into
clc
mov
imull
push
shrb
fcompl
jg
lret
js
and
jb
cwtl
and
inc
mov
enter
nop
add
wbinvd
add
xchg
pop
je
lods
pop
xchg
jl
loope
cld
js
push
jae
sbb
cld
dec
out
fbld
ljmp
push
enter
repz
ficoml
add
mov
js
lods
sub
arpl
cld
popa
insl
sub
les
out
push
ljmp
add
lods
pusha
cli
xor
lods
push
mov
scas
loopne
push
xor
outsb
popa
jmp
mov
lea
iret
lcall
sub
call
lcall
adc
fisttps
jl
xchg
jbe
pop
sbb
repnz
push
xor
cmc
out
mov
xor
adc
or
jbe
jle
jmp
js
xchg
js
cmp
filds
test
mov
lods
mov
sahf
in
or
lret
sahf
ret
add
mov
dec
mov
jno
and
mov
rcrl
mov
aad
hlt
mov
mov
stos
cltd
sub
adc
mov
movsl
cmp
sbb
loop
push
inc
cmp
dec
dec
ja
mov
adc
sub
add
push
jnp
daa
loope
mov
pop
xchg
lcall
insb
les
ljmp
xchg
jns
pop
jle
test
pop
xor
stc
lret
pop
in
add
iret
cmpsb
or
sub
loope
push
dec
gs
cmp
cmp
mov
dec
mov
push
add
das
jns
cwtl
jns
scas
test
lea
mov
out
mov
hlt
xor
enter
lds
and
or
add
dec
call
cmp
out
stos
xchg
jmp
push
rcrl
lahf
sbb
cmpb
mov
std
gs
sub
push
sahf
inc
jge
push
mov
int3
mov
adc
xor
or
and
movsl
adc
jmp
pop
add
lahf
jb
xlat
mov
mov
scas
or
das
outsl
dec
stc
push
out
push
ja
sbb
push
lock
sbb
aam
jo
int
dec
repnz
repz
cld
scas
cld
jp
test
int3
movsb
mov
dec
mov
ret
xchg
push
xchg
xchg
cmc
add
insl
imul
pop
adc
mov
or
test
std
ja
icebp
xor
cli
cmc
out
sbb
mov
mov
mov
enter
adc
mov
add
shlb
movsb
int3
and
cmc
sbb
and
fwait
or
and
test
test
mov
icebp
movsl
in
xchg
jp
in
sarl
sbb
int3
and
pop
push
cmp
mov
push
sbb
xor
lods
jb
pop
adc
nop
inc
xorb
aad
fs
negl
inc
mov
aad
jb
mov
aad
fisubl
mov
lahf
fwait
push
inc
shlb
sub
fiaddl
in
adc
in
push
xchg
add
xchg
adc
test
dec
adc
inc
arpl
jl
adc
dec
cmp
mov
jle
or
pusha
mov
ljmp
jnp
enter
jne
cmpsb
jne
mov
loopne
lds
lods
les
fistpll
mov
jnp
imul
push
jge
xor
in
imul
imul
ljmp
in
push
shll
cli
shrl
lock
into
pop
into
ljmp
testl
mov
loope
leave
adc
pop
adc
leave
mov
adc
push
ret
dec
test
pusha
mov
mov
lods
jle
and
insl
mov
popa
push
in
pop
dec
jno
fdivrs
mov
and
pushf
push
lss
fsubr
jecxz
scas
xchg
jae
ret
adc
and
mov
pop
cli
mov
push
dec
mov
push
rcrb
pop
ja
inc
fs
adc
add
sbb
mov
lret
xchg
inc
xchg
push
sbb
sub
ds
ss
jle
or
insl
pop
repz
jb
xchg
sbb
rcll
ds
cmpsl
repz
orl
pusha
lahf
cmp
adc
inc
lock
shlb
loop
fidivs
popf
mov
push
or
push
jle
fisubrs
movsl
mov
sbb
addr16
sbb
rcr
into
push
inc
sbb
mov
and
insl
sti
call
push
loop
jo
stos
add
fiaddl
mov
mov
iret
pop
pop
pop
cltd
clc
lcall
cs
das
or
arpl
out
fs
aas
lret
mov
cli
push
adcb
addr16
shrl
adc
xlat
mov
ja
sub
fwait
out
xor
test
lea
pushf
cmp
push
jl
adc
cmp
stos
xor
jno
ffreep
outsl
mov
lahf
inc
icebp
sub
fnsave
inc
inc
in
cmp
cmp
insl
pop
popf
test
mov
cmp
es
cmp
adc
mov
mov
dec
aas
fstpl
jb
dec
jo
add
mov
sbb
mov
sbb
or
adcb
hlt
inc
loop
push
repnz
mov
pop
lods
xlat
mov
pop
inc
sbb
xchg
in
lods
xor
jp
pop
cmp
adc
dec
and
inc
xchg
dec
sbb
dec
jo
jmp
push
enter
popa
push
add
stc
fs
cs
dec
push
dec
mov
dec
insb
xchg
xor
mov
jge
pushl
fbld
rorb
adc
enter
lret
sbb
cmp
lret
and
lods
mov
push
xor
sbb
push
outsl
and
push
mov
mov
scas
ret
xorl
xchg
xor
gs
jne
mov
mov
push
int
dec
movsb
sbbl
out
push
dec
movsb
xchg
sbbb
dec
repnz
cmp
daa
dec
adc
mov
iret
xchg
cmpsl
imul
rcr
leave
xor
je
jle
xor
mov
xchg
cs
sub
inc
movsl
jne
pop
jbe
mov
clc
mov
inc
cmpsl
cmp
or
shl
fidivl
test
aaa
ret
jo
sub
mov
cwtl
adc
fldln2
and
test
hlt
xor
ret
inc
cmp
loopne
daa
lea
mov
pop
fnstsw
xor
and
inc
adc
push
nop
enter
mov
lcall
push
rolb
incb
dec
cmc
idivl
call
pop
cmp
mov
cmp
cs
jno
mov
sahf
inc
lret
mov
sbb
repz
mov
out
jle
cli
std
xchg
lcall
pushf
mov
subl
adc
inc
or
jno
xchg
sarl
insb
xor
add
mov
aas
cmp
pop
jae
adc
fnstenv
dec
sti
jp
mov
push
movsl
fstpt
scas
and
popf
xor
mov
or
mov
test
push
push
cmp
sbb
nop
mov
mov
movsl
scas
mov
iret
xor
data16
test
movsb
mov
sarb
test
jno
mov
mov
and
out
fnstenv
jecxz
cs
adc
cltd
es
stos
stos
inc
xchg
lret
inc
or
or
and
cmp
pop
insb
push
jg
shrb
jp
mov
xchg
xchg
lock
out
insl
fsts
pop
sahf
xchg
ret
clc
xor
sub
pop
mov
mov
xchg
push
adc
and
rol
adc
arpl
inc
imul
loope
dec
mov
lock
jno
cmp
sahf
test
iret
test
mov
call
xlat
imul
xchg
lcall
cli
xor
sbb
mov
sbb
add
mov
fnsave
cmp
incb
call
or
gs
pop
cmovo
or
out
xchg
pop
out
in
mov
je
aas
pop
mov
cmp
out
inc
or
mov
rcr
pop
lods
mov
mov
push
cli
dec
or
aaa
in
push
ljmp
ret
test
push
repnz
sub
sub
jno
cmpsl
xchg
sub
pop
mov
mov
imul
daa
pusha
mov
loope
sbb
dec
jb
lret
das
aam
mov
rol
xchg
xor
xor
and
add
in
push
cmp
movsb
sbb
jmp
mov
aad
mov
test
test
pop
pop
fldl
mov
cmp
sbb
ljmp
imul
scas
mov
and
cmpsb
insb
rcl
mov
mov
adc
adcb
test
aad
popf
mov
push
leave
out
push
fdivrs
repnz
mov
push
test
test
bound
test
popl
lahf
fnstcw
cmp
or
lods
out
addr16
dec
fadds
jb
enter
mov
leave
es
xchg
imul
jb
cmpsb
stc
dec
add
mov
xor
cltd
rcrl
and
fstpt
lret
xchg
test
ret
or
aaa
pop
not
xabort
sbb
mov
cmp
push
inc
mov
jnp
fimuls
jmp
jno
jbe
rclb
inc
inc
std
fcoms
lea
repnz
xchg
add
inc
mov
xchg
sub
cmpsb
xchg
sbb
mulb
and
lahf
fistps
ljmp
aad
imulb
out
mov
ss
out
push
dec
add
pop
sbb
cmp
mov
stc
in
xchg
and
jnp
hlt
sti
aaa
pop
lcall
dec
pusha
test
gs
and
imul
test
ror
fnstsw
ds
mov
decb
sbb
in
lret
jbe
inc
popl
cltd
stc
out
pop
repnz
mov
sbb
inc
pop
hlt
sbb
add
or
sub
mov
mov
adc
lods
mov
pop
sbb
cmp
xor
test
adc
aaa
or
nop
xchg
mov
xchg
outsb
or
and
xor
push
mov
or
mov
js
add
sbb
mov
jg
sub
jg
jecxz
adc
xor
pop
adc
out
and
popl
xlat
or
mov
outsl
cmpsl
push
inc
dec
push
data16
addr16
lea
js
sub
add
mov
cmp
incb
inc
xchg
stc
pop
adc
outsb
aad
cmp
cmp
inc
in
or
inc
pushf
mov
xchg
int3
mov
jle
rcrl
pop
sbbl
shll
inc
les
inc
adc
xchg
cld
addr16
ficompl
mov
push
jb
pop
outsl
insl
cmp
jns
jae
icebp
adc
or
pusha
sbb
repz
js
mov
add
push
es
mov
in
in
mov
mov
or
mov
sub
cli
push
jb
fwait
or
adcb
xchg
test
mov
outsl
movl
mov
insb
cmpsb
mov
stc
cmc
jb
fwait
xor
push
mov
xchg
dec
mov
and
fisubl
sbb
outsb
add
adc
lods
loopne
nop
or
add
js
les
xor
add
cld
scas
js
mov
xchg
sbb
into
and
mov
or
les
popf
xorb
call
notl
inc
and
inc
pop
jo,pn
pop
mov
sahf
sbb
jne
jbe
dec
cmp
in
mov
add
ds
repz
mov
xchg
add
mov
add
xlat
xchg
arpl
mov
sbb
pop
notl
out
test
adc
pop
leave
dec
adc
sub
sbb
push
lcall
cmp
sbb
jnp
adc
mov
js
jne
adc
lds
inc
push
stc
int3
push
pop
push
int
das
dec
jp
or
aas
xor
lret
xchg
outsl
fs
sti
cmp
ret
aas
movsl
jp
cltd
pop
test
jne
pop
mov
push
pop
inc
mov
and
nop
jbe
sbb
stc
add
out
test
je
sub
and
inc
cld
and
frstpm(287
cli
mov
jmp
mov
mov
mov
call
push
cmp
je
mov
mov
stc
mov
fisttpll
test
jbe
ja
dec
adc
icebp
hlt
stos
mov
xlat
mov
sub
add
adc
xor
jne
cs
pop
pop
dec
cmpsb
std
lcall
cld
push
xor
jne
inc
lahf
and
push
lds
xchg
sub
ror
mov
mov
push
hlt
cli
fwait
imul
aad
cwtl
sbb
nop
sbb
or
test
aam
pop
pop
or
movsb
push
mov
add
int3
push
mov
loope
xchg
and
repz
test
xor
bound
push
sbb
adc
aad
dec
frstor
fcoms
jle
add
ret
inc
cmp
aam
jle
ds
aad
adcb
jle
mov
in
pop
dec
jmp
insb
inc
add
cmp
dec
xchg
sbb
push
lcall
fimull
orl
mov
mov
xchg
inc
mov
xlat
call
mov
test
mov
scas
jno
sub
jp
loope
gs
push
pop
xor
mov
insb
dec
jecxz
in
pop
repnz
xor
dec
je
mov
icebp
shlb
jg
vmwrite
jno
outsl
lahf
push
insb
es
movsb
inc
loopne
dec
out
add
cmp
scas
pop
arpl
inc
loope
lcall
je
mov
sub
std
dec
fsubr
sbbl
pop
and
loope
inc
in
mov
mov
cmc
movsb
mov
insb
mov
cmp
cwtl
arpl
jo
mov
cmp
xor
mov
xchg
adc
cld
pop
sbb
sbb
neg
cmp
and
cmp
dec
das
sti
movsb
rcl
mov
sub
imulb
out
into
cld
movsb
rcll
shll
jae
pusha
ror
cwtl
in
xchg
xor
jbe
repnz
pop
xchg
push
pop
repz
loope
ljmp
rolb
pop
lret
bound
xor
rorl
jle
mov
dec
flds
or
ss
addl
lods
push
mov
dec
jl
ror
and
xchg
imul
icebp
xchg
mov
inc
adc
jmp
andb
pop
pop
push
clc
mov
ficomps
je
fwait
add
mov
xor
rorb
sbb
fmull
rcll
push
fcomps
pop
outsb
mov
pop
mov
mov
aam
test
jne
loopne
or
and
flds
rcll
adcb
sub
push
inc
in
sbb
insb
inc
cmpsl
inc
aam
repz
mov
or
or
out
and
cmp
or
cld
int3
lahf
je
mov
cmc
adc
insb
les
cmp
add
loopne
in
mov
or
xor
fisubl
scas
ret
les
dec
mov
cmpl
push
fcompl
and
aas
call
ret
lea
dec
cli
lock
jl
and
sub
shrb
xlat
cli
dec
std
imul
inc
mov
test
in
cli
negb
test
mov
or
loop
or
scas
mov
repnz
or
pop
imul
mov
sti
mov
xchg
sarl
inc
push
out
pop
stc
sbb
and
jbe
push
pusha
aas
icebp
scas
fadd
mul
mov
mov
and
rcll
sub
stos
inc
xor
mov
mov
aas
ljmp
jle
and
jae
jmp
and
mulb
inc
pop
fildl
xorb
add
cmp
lds
and
clc
inc
push
push
es
enter
mov
dec
into
outsl
or
mov
add
xchg
pop
add
sbb
pop
push
leave
mov
add
pop
xchg
and
ret
jne
mov
mov
inc
lods
cmp
mov
jns
mov
popf
inc
enter
mov
add
mov
repnz
mov
xor
sub
shl
mov
push
push
mov
pop
adc
jp
les
insb
mov
mov
sbbl
sbb
fwait
cmp
xchg
scas
inc
out
or
mov
aad
cli
bound
das
dec
lock
cwtl
arpl
test
mov
and
js
dec
bound
mov
xchg
xor
insl
sbb
xor
pop
adc
cwtl
pop
jo
pop
push
imul
or
test
rcr
inc
stos
mov
xchg
pop
push
jae
xor
push
jne
add
lret
pop
inc
mov
out
int3
popf
mov
xor
lahf
addb
les
icebp
addr16
pop
cmpsb
dec
or
mov
dec
inc
je
divb
jmp
insl
or
div
stos
nop
xchg
xchg
popf
movsl
mov
cmpsl
shll
clc
jae
sub
and
inc
lret
pop
icebp
add
jle
mov
mov
jge
cmp
sahf
push
lcall
pop
lds
fadds
loop
mov
push
std
imul
pop
mov
cmc
stos
cmp
push
mov
xchg
adc
jge
jecxz
stc
add
mov
mov
sbb
jmp
jle
scas
insl
lcall
fisubrs
pop
bound
add
stc
dec
mov
insb
inc
mov
lods
stos
ljmp
shll
mov
frstor
pushf
xchg
sub
lock
addr16
add
shlb
inc
cld
les
sbb
out
mov
aad
sbbb
cmp
sahf
repz
push
pop
shll
cmp
jnp
cwtl
mov
cwtl
sbb
lds
fldenv
sub
addb
dec
dec
stos
jb
push
loopne
outsb
push
jecxz
sbb
ljmp
pusha
outsl
cli
cmp
mov
mov
lea
out
adc
int3
daa
dec
adc
ret
ljmp
push
inc
ss
sbb
or
and
jg
shrb
testl
inc
imul
mov
mov
cmp
sub
daa
adc
jle
repnz
cs
pop
cmpsb
jo
lds
or
add
push
ret
int
add
mov
mov
or
loope
mov
xchg
adc
cmp
push
pop
cli
das
cmc
int
cmp
mov
test
enter
push
jge
add
pushf
jl
and
rcrb
je
imul
xchg
lahf
pop
ret
add
stos
push
fdivp
mov
cld
jecxz
xlat
mov
jbe
mov
je
loopne
mov
out
and
mov
pop
or
xchg
mov
jnp,pt
sub
and
xchg
dec
jl
outsl
int3
cmpsl
addl
shlw
mov
and
shlb
mov
lock
repnz
inc
add
xlat
sub
lcall
xor
pop
cmc
pop
xor
scas
je
jnp
jo
xor
arpl
insb
or
vpminub
daa
scas
jecxz
in
outsl
pop
dec
inc
fwait
inc
negl
add
mov
clc
dec
mov
sbb
lret
inc
jne
icebp
shr
or
in
shrb
mov
out
ss
mov
pop
clc
cmp
or
jecxz
int
or
loope
mov
dec
adc
xchg
pusha
rorb
sti
mov
cmc
xchg
mov
pushl
lods
int3
add
mov
shlb
scas
push
imul
mov
mov
les
or
mul
cmpl
or
pop
sub
sbb
inc
cmp
inc
popa
mov
sub
pop
test
shl
or
js
scas
aam
out
out
and
jnp
cmp
call
idivb
jge
adc
imul
jbe
sbb
sub
mov
dec
pop
sbb
xor
and
cmp
adc
sub
ds
andl
pusha
and
mov
in
adc
and
jbe,pt
daa
cs
movsb
cmp
pop
pusha
or
inc
cmpsb
jno
subb
pop
cltd
and
into
fdiv
cmpsl
incl
ja
or
loop
dec
push
mov
into
out
xchg
sbb
imul
test
popl
into
jbe
dec
pop
bound
ss
sbb
or
mov
gs
mov
push
pusha
pop
add
add
enter
cs
rcll
push
push
inc
pop
clc
push
dec
mov
mov
gs
dec
add
negb
es
inc
mov
fmull
xlat
test
es
gs
in
mov
in
jns
andl
and
stos
movsb
sbb
jo
iret
and
lds
loope
jecxz
fldcw
loopne
and
sbb
adc
in
cld
sar
negb
sub
lds
pop
dec
aad
mov
rol
cmp
imul
jmp
insb
push
in
test
inc
lock
or
and
test
out
scas
jnp
xchg
rcr
cmpsl
mov
ret
hlt
ljmp
pop
das
out
notl
mov
loop
cmp
add
insl
test
mov
lret
inc
sub
add
call
mov
mov
jecxz
sahf
add
xchg
xchg
scas
mov
xchg
rorl
mov
test
je
lret
ret
sub
pop
dec
mov
mov
aam
push
cmp
repz
icebp
ret
loopne
xchg
neg
mov
cmpsb
lds
or
xlat
add
pop
ds
loopne
jmp
insb
insl
pop
or
aam
mov
lods
pop
jnp
and
insl
sbb
into
clc
and
stos
pop
mov
fistpll
pop
xchg
fwait
mov
and
fisubs
mov
arpl
jecxz
mov
fdivl
mov
stos
fadd
fwait
mov
imul
dec
mov
xor
sbb
mov
lods
pusha
cmpsl
xor
cmp
cmp
and
loop
aaa
ficompl
sbb
pop
stos
ret
inc
adc
xchg
jle
push
ja
js
into
je
sbb
sbb
mov
xchg
push
xchg
popa
das
push
cmp
inc
pop
inc
stos
mov
ret
dec
pop
lds
cmp
xchg
mov
jg
jmp
xchg
sub
jne
in
insb
inc
pop
sbb
ja
addr16
fdivs
bound
adc
xor
inc
das
gs
and
cwtl
aad
xor
rcrb
daa
in
mov
imul
addl
cmc
inc
dec
push
add
cltd
xor
fs
adc
outsl
mov
stos
add
lret
xor
xchg
push
jl
stos
sub
call
xchg
mov
sub
dec
mov
mov
bound
lea
pop
jb
mov
xchg
jecxz
cwtl
data16
adc
and
shlb
fimuls
push
push
push
pop
aad
lcall
jecxz
sti
popf
mov
test
cmp
add
and
pop
aam
ret
jbe
add
push
xchg
mov
jb
loopne
test
pop
push
pop
movsb
or
xor
in
jecxz
cmp
fwait
push
mov
in
lds
pop
or
inc
jle
push
push
push
xchg
sbb
jns
out
pop
aam
leave
dec
mov
ljmp
sarl
loope
test
dec
push
stc
inc
jns
adc
stos
scas
outsb
int
stos
sbb
or
and
and
cld
dec
in
aas
leave
sbb
hlt
dec
loop
pop
xchg
mov
testl
mov
pop
push
sbb
mov
add
popa
and
cltd
shrb
ds
mov
and
or
std
fs
ds
add
sahf
xor
clc
mov
fwait
repz
adc
mov
enter
clc
or
mov
jle
inc
dec
fsubrs
out
push
cmp
jecxz
lock
jecxz
sahf
in
pop
js
jno
popa
es
dec
mov
inc
jp
add
xchg
in
push
cmp
mov
cmpsb
notb
cltd
push
add
adc
cs
lds
lea
pop
pop
jnp
mov
faddl
lock
cmp
lods
mov
scas
test
in
mov
lods
jmp
dec
mov
in
fcmovnu
icebp
dec
mov
mov
sbb
rcr
mov
sub
leave
scas
inc
popa
imul
dec
movsl
ficoms
xchg
stos
push
aas
ret
dec
xchg
jl
or
push
jl
clc
movsl
lcall
out
pusha
xor
lock
dec
out
lea
xchg
and
lahf
xchg
icebp
test
xlat
test
or
and
in
cli
fs
leave
cltd
and
push
xchg
popf
sahf
in
xchg
xchg
fcmovnb
pop
popa
inc
cwtl
das
mov
les
ret
scas
aam
cwtl
pop
mov
push
leave
jge
jo
pop
jmp
cmc
std
or
cmp
pop
dec
dec
xchg
ja
hlt
in
orb
ret
loop
fistpl
cmpsl
xchg
enter
sbb
cmp
scas
xor
push
cld
mov
push
dec
notl
lds
adc
int3
sub
xchg
outsl
nop
and
lret
fisttpl
sub
data16
mov
push
icebp
out
jl
xchg
xor
pop
cmp
dec
mov
into
add
scas
int
push
cmc
or
adc
test
add
lods
js
mov
sti
xor
in
jge
ds
ds
roll
hlt
mov
pop
push
pop
roll
lods
sub
imul
call
pop
mov
ss
dec
push
push
js
inc
imul
push
mov
popa
and
lods
jle
jo
and
add
int3
jo
xchg
add
in
mov
inc
imul
stc
clc
mov
add
and
in
int
push
shl
sbb
sub
ds
dec
sub
int
pop
rorb
int3
xchg
in
sub
les
lcall
jle
call
arpl
cmp
gs
xor
loopne
pop
rorl
pop
imul
xor
xor
mov
cli
into
push
ss
lcall
push
fistps
add
inc
mov
fldl
mov
in
mov
fidivrs
addl
adc
push
stos
roll
jp
scas
call
push
inc
ss
lds
fidivrs
xchg
mov
cmpsb
sub
insl
cmp
out
sub
adc
addr16
cwtl
mov
flds
ljmp
ljmp
insl
popa
loopne
cmp
add
dec
sbb
mov
xchg
lock
icebp
ss
dec
inc
sbb
cmp
out
add
addr16
jge
inc
inc
push
in
stc
fildl
ret
sahf
xchg
scas
or
and
imull
insl
cmc
xor
lcall
neg
add
imul
jae
add
xor
hlt
xchg
rcl
mov
sahf
inc
flds
inc
xchg
cs
mov
int
sub
adc
cs
repnz
inc
sub
mov
mov
dec
clc
pop
aam
mov
sub
inc
mov
mov
hlt
roll
mov
mov
cltd
iret
jmp
jno
lcall
sub
dec
pop
push
ja
adc
ja
xor
push
jae
jne
dec
and
mov
or
pop
mov
lret
scas
push
testb
mov
call
sarb
fisttpl
les
dec
lock
xlat
push
jecxz
inc
add
cmpsb
loopne
lcall
dec
test
aas
std
std
ret
sbb
sbb
addb
jae
add
ret
fidivrl
cmp
pop
scas
int
aad
dec
and
jge
sbb
movsl
fldt
je
andb
iret
lods
sbb
imul
and
adc
testl
rcll
add
xchg
inc
out
scas
jmp
xchg
and
cmc
add
mov
jl
inc
mov
xor
cwtl
lahf
pop
mov
dec
and
push
imul
mov
or
mov
js
stos
daa
out
dec
xor
xor
jo
inc
ja
stos
or
mov
push
xor
mov
pop
addr16
call
in
ret
lcall
mov
pop
pop
mov
into
cmp
dec
mov
out
negb
sbb
fwait
xchg
int
shll
dec
das
fadd
mov
addr16
cltd
push
adc
mov
xor
ja
mov
dec
push
int
call
aas
pop
cmpsl
mov
icebp
add
cmp
sahf
xchg
enter
adc
xor
xchg
popf
sbb
inc
add
pushf
rcll
and
clc
fisttps
pop
sub
bound
pop
push
push
push
mov
sub
adc
shll
movsb
fcompl
adc
mov
je
push
mov
adc
mov
rclb
add
nop
jbe
sbb
xchg
inc
inc
jmp
jl
mov
mov
or
sbb
test
dec
jb
cmc
inc
movsl
ss
or
stc
and
stos
in
movsl
and
cmp
pop
hlt
dec
mov
daa
xchg
shrb
sub
rolb
pop
lods
cmp
jb
adc
mov
aaa
jge
adc
ret
add
out
lret
sub
xor
xchg
push
mov
sbb
xchg
imul
fcmovb
std
test
sub
push
or
inc
pop
adc
aad
push
inc
repz
inc
addr16
pop
and
popf
cmpsl
mov
lret
ja
lods
jl
sub
or
pop
lds
cmc
lahf
repz
xor
mov
rcl
dec
ret
aam
jb
out
loopne
and
add
addb
jl
mov
xlat
aas
push
adc
xchg
out
adc
add
shl
dec
subb
sub
pop
clc
add
cmp
lds
mulb
bound
sahf
movsl
inc
dec
and
xor
add
xchg
mov
std
mov
xor
scas
xchg
adcb
sub
mov
or
out
out
repz
xchg
bound
js
push
je
mov
xchg
leave
cmpsl
cli
push
and
stc
xchg
xchg
adc
add
push
rcrl
jae
and
dec
pop
cwtl
pushf
imul
les
cmp
sub
lret
inc
xor
test
icebp
das
cmc
mov
add
or
out
imul
fs
sahf
jns
ss
scas
cmpsb
add
sub
das
insb
jmp
mov
mov
cmp
adc
xor
lods
lods
inc
inc
or
push
in
mov
mov
in
mov
int
cltd
test
add
dec
into
add
test
xchg
cmp
dec
pop
sbb
dec
out
mov
or
sarb
jb
mov
bound
add
push
int
dec
mov
addr16
repz
scas
lock
mov
stc
inc
mov
pop
or
nop
mov
pop
or
mov
mov
inc
cmp
sub
add
pop
outsl
add
aas
sub
shl
ljmp
out
sub
popa
push
stc
neg
test
les
das
dec
fadd
cmp
inc
js
data16
std
ficoms
movsb
lea
jnp
loopne
aas
arpl
jmp
mov
cmp
lret
faddl
and
pop
push
mov
jg
xchg
xor
int3
loop
imulb
mov
push
pop
mov
mov
xor
push
push
and
sub
lods
in
pop
adc
mov
adc
pop
movsl
mov
incl
xorl
mov
xlat
in
in
icebp
fistps
aaa
imul
pop
movsl
xor
aad
jno
loopne
ret
in
lea
imul
and
jg
pop
imul
enter
and
inc
js
scas
arpl
in
mov
sub
and
sbb
pusha
test
imul
xchg
ds
frstor
daa
or
addr16
jno
inc
mov
std
testl
adc
pop
xchg
sarl
cwtl
pop
in
xchg
sbb
inc
loopne
test
pop
mov
xchg
mov
push
movsl
inc
mov
fimull
sub
test
shll
add
lods
jg
cmc
imul
les
cs
sahf
push
cmpsl
mov
in
or
push
push
mov
add
daa
out
pop
jecxz
cld
cltd
pop
inc
mov
arpl
imul
mov
or
adc
jns
out
xor
ret
add
push
cmp
jp
push
scas
jbe
inc
inc
mov
mov
fistps
data16
popf
aas
xorb
cmp
mov
or
mov
xor
sbb
mov
xchg
push
daa
ja
cwtl
dec
shlb
mov
repz
or
stc
jl
xchg
sbb
enter
jmp
cld
xchg
jg
mov
loopne
mov
xor
sub
fldlg2
mov
xor
jns
int
and
pop
iret
cs
xor
and
out
push
and
mov
xor
mov
dec
mov
lret
jmp
lods
rorb
pop
sbb
push
sahf
and
inc
inc
adc
lcall
xchg
xchg
xchg
lahf
xor
push
mov
mov
cmp
jmp
mov
into
or
out
sti
mov
pusha
int3
sbb
pop
cmc
push
fmuls
jo
fldenv
ja
mov
jecxz
cli
push
fistpl
icebp
jnp
int3
push
fwait
inc
cmpsl
push
nop
cld
sub
cmp
pushf
jae
sub
bound
xchg
mov
xchg
xchg
mov
or
cs
adc
insl
repz
test
cmp
imul
loopne
pop
aam
or
outsl
outsl
jmp
clc
jbe
leave
cmpsl
lods
xchg
sbb
aaa
mov
mov
mov
ror
dec
inc
ja
jp
fmuls
movsb
jbe
push
pop
loopne
sub
lahf
sahf
imul
mov
sub
cmp
add
insb
fldcw
inc
decl
lock
out
or
insb
test
xor
cmpsl
cmc
lods
mov
sub
repnz
inc
aas
jne
subl
xchg
dec
cmp
mov
inc
imul
adc
mov
cli
add
adcb
repnz
mov
inc
orb
in
add
aaa
mov
cwtl
jns
int
and
test
outsb
dec
jnp
adc
jnp
mov
pusha
jb
test
mov
mov
hlt
fisubrl
cmp
sar
loopne
int
jecxz
jg
mov
shl
loop
pop
xchg
loop
mov
loopne
pusha
push
jno
xor
dec
aaa
cmp
mov
mov
jae
adc
fs
rclb
xor
pop
mov
rcl
cmp
pop
mov
push
mov
popf
lock
outsb
popf
mov
jmp
add
sbb
push
inc
loopne
adc
shlb
xor
mov
jne
adc
pop
aaa
pop
loope
dec
and
test
flds
sub
scas
adc
dec
ja
mov
sub
sti
and
imul
push
rorl
lds
aad
data16
add
movsl
jg
mov
xor
adc
sub
testb
or
or
jecxz
add
mov
out
cltd
mov
add
out
sub
cli
add
mov
cmpsb
arpl
fiadds
sti
mov
dec
imul
aam
mov
mov
movsl
fdivl
dec
xor
pop
in
aam
aam
out
test
cmc
cld
roll
rcpps
cmp
outsb
sbb
fwait
xchg
inc
dec
xchg
sub
inc
push
pop
nop
mov
pop
jae
inc
call
or
pop
inc
xor
adc
jne
pop
out
mov
js
pop
cs
rol
call
ret
pop
fildl
jo
jb
jno
mov
xor
sarb
or
add
movsb
xor
fsubs
push
inc
adc
or
es
jl
fidivrl
jno
pop
ret
js
lret
mov
stos
pop
lret
sub
xlat
mov
cmpsb
cmp
and
or
mov
lea
xchg
mov
out
out
aaa
xor
aad
out
mov
cwtl
or
js
sahf
fiaddl
mov
adc
jnp
rcrl
jb
inc
push
xor
push
dec
lret
add
push
into
fwait
adc
inc
jne
movsb
dec
sbb
fldt
insl
leave
out
lret
mov
mov
icebp
mov
pop
xchg
xchg
outsb
fbstp
mull
jle
or
fucomi
inc
test
or
xchg
and
sbb
or
pop
movsl
sbb
ret
jge
cmp
lods
cmpb
hlt
mov
inc
cltd
push
inc
inc
jp
das
in
jecxz
dec
fs
sarl
mov
adc
lcall
or
mov
dec
lahf
adc
lcall
mov
mov
movsl
push
out
xchg
jmp
in
inc
xchg
mov
rolb
and
cmp
dec
scas
sub
xchg
adc
adc
xor
call
shrl
inc
fneni(8087
ja
pop
movzbl
int3
sbb
mov
inc
and
cmpsb
lods
into
stos
or
sbb
sub
adc
das
xchg
fstpl
mov
fwait
or
int3
adc
mov
in
xorl
xlat
mov
loopne
sbb
movsb
mov
push
push
mov
push
sbb
and
jae
lcall
mov
or
daa
fimull
sub
lock
test
in
add
fstps
mov
and
js
push
cli
fsub
in
xorb
jo
inc
dec
sub
pushf
or
pop
mov
adc
fsubl
es
mov
insl
xor
ret
sbb
or
mov
cld
fiadds
xchg
and
adc
incl
out
pushf
jne
adc
xchg
incb
fwait
pop
fwait
dec
dec
inc
cmpsb
les
test
jae
jno
adc
add
jl
mov
mov
push
sbb
sar
pop
lret
lea
mov
outsl
xor
fmuls
sub
ret
dec
xor
add
cli
push
and
cmpsb
out
fs
mov
mov
arpl
mov
jp
dec
faddp
and
or
xchg
mov
sub
scas
pop
fwait
mov
and
inc
out
mov
hlt
add
add
pop
ret
xchg
arpl
dec
pop
int3
jl
mov
mov
dec
in
xor
xchg
jge
pushf
mov
stos
sti
jb
das
andl
ss
cltd
insb
mov
and
out
mov
enter
decl
pusha
pop
sbb
xchg
scas
ljmp
push
pop
jg
cmc
push
mov
mov
hlt
out
loopne
mov
dec
xlat
pop
movsl
sarl
es
rorb
sub
shll
push
mov
les
mov
lret
pop
sbb
sub
mov
out
mov
mov
test
sahf
shll
jecxz
mov
int3
xor
stc
adc
mov
out
adc
jb
data16
mov
shlb
aam
cmc
inc
into
cmp
cltd
or
cmp
add
inc
push
inc
ds
dec
test
dec
arpl
stos
xchg
dec
cmp
push
jl
dec
andl
and
inc
adc
rorl
xchg
mov
xor
das
mov
nop
cmp
pusha
jle
test
inc
lods
test
sti
mov
andl
iret
pop
aas
mov
dec
push
xor
lods
dec
sahf
xor
lcall
push
xchg
pop
jecxz
loop
xchg
push
stos
jmp
cmovbe
dec
movzbl
xchg
sbb
stc
mov
push
sbb
popf
ljmp
mov
jno
dec
aam
lock
mov
fsubrs
notl
repz
jp
jmp
jae
jge
loopne
pushf
out
adc
popfw
mov
mov
popf
cmp
cmp
push
shr
mov
adc
jo
xor
xchg
ret
subb
stos
xlat
cltd
fiadds
jl
xchg
pushf
inc
pop
leave
add
lcall
and
and
test
sub
sbb
ds
push
in
cmp
or
lds
jl
je
aaa
idivl
mov
jle
bnd
sahf
imul
fs
fiaddl
fcmovnu
adc
hlt
adc
aas
sub
sti
insb
xor
xor
mov
xchg
insl
sbb
xchg
jno
xchg
cs
pusha
imul
mov
popa
dec
jns
lods
stos
inc
scas
push
ljmp
and
fwait
add
imul
sub
mov
jb
jecxz
push
adc
dec
in
sbb
popf
testb
mov
popf
add
leave
nop
xchg
or
sti
pavgw
mov
arpl
cmp
lods
cmpb
subl
mov
sub
test
sti
cmp
sbb
adc
or
out
jmp
adc
mov
push
mov
fwait
push
pop
in
jne
xor
aas
mov
cmp
dec
mov
pop
mov
enter
sub
outsb
or
ret
fisttpl
cmc
movsl
mov
ss
cmp
mov
cmpsb
xor
sbb
inc
cwtl
jbe
pusha
loopne
out
out
and
jns
lret
pop
add
xchg
inc
cmp
push
pop
lock
xchg
aam
inc
aam
setb
jecxz
xchg
icebp
cmp
faddl
add
mov
mov
movsl
mov
xchg
sahf
call
lret
jnp
testb
lea
fldcw
adc
jo
scas
lcall
test
iret
movsb
xor
imul
and
hlt
lcall
add
push
insb
inc
xor
sub
pusha
lock
dec
cmp
jo
jne
sarb
or
ljmp
fnsave
stos
sub
test
aas
cwtl
aam
dec
jg
iret
in
push
pushf
adc
aam
repnz
fnsave
pop
es
mov
and
or
mov
or
pop
out
out
inc
cmp
int3
push
dec
in
adc
sar
pop
dec
movsl
mov
mov
pusha
dec
pusha
adc
adc
inc
pop
pop
hlt
and
mov
push
sbb
push
repz
pop
ja
sbb
mov
out
mov
scas
js
lret
cmp
jae
out
mov
push
push
stc
test
stos
push
sub
xchg
xchg
sbb
ljmp
pop
lret
cli
push
xchg
shlb
cs
mov
in
sub
testl
cmp
outsl
in
push
adc
xor
inc
pushf
fmull
and
gs
push
dec
xor
mov
ljmp
jmp
cmp
pop
sub
cli
insb
or
mov
mov
and
mov
add
push
push
test
fdivs
cmp
push
pop
adc
cltd
ds
in
in
cmp
and
sub
pop
jecxz
divl
cmpsl
fnop
pop
mov
lds
add
stc
or
in
movsl
sti
imull
sarb
mov
sbb
xchg
mov
add
ljmp
mov
mov
fstpt
fs
xchg
mov
and
daa
mov
sbb
xor
popa
pushf
rorb
lods
cwtl
aad
negl
out
inc
pop
adc
neg
cmpsl
mov
pop
lcall
mov
dec
jp
sahf
int3
xchg
jecxz
ljmp
sbb
sbb
sub
sub
ljmp
cmp
mov
jle
add
mov
lret
add
inc
imul
xor
or
xchg
fistpll
jae
sti
mov
fimuls
mov
mov
jp
mov
jo
fs
mov
xchg
call
push
mov
xchg
pop
and
std
jb
std
inc
loopne
or
addps
pop
icebp
xor
inc
pop
jle
and
aas
add
movsb
clc
adc
cmc
test
cli
cmp
or
mov
jl
movsl
leave
xchg
cld
cmpsb
stos
sub
mov
xchg
test
pop
cmp
push
fistl
les
sti
and
adc
push
callw
mov
fidivl
or
or
sub
dec
scas
jle
ret
pop
mov
pmaxub
sub
add
sub
mov
xchg
repnz
mov
call
cmp
add
xor
fwait
lret
adc
daa
and
pusha
dec
mov
pop
lods
bound
loopne
xchg
mov
and
fsubrs
flds
fisttpll
test
mov
and
xchg
lcall
inc
ljmp
loop
mov
push
add
add
jb
aad
xchg
and
popa
cmp
les
not
pop
pushf
or
imul
and
daa
mov
fdivs
push
push
jns
std
push
clc
mov
enter
insl
in
push
and
add
mov
adc
dec
call
inc
hlt
add
shl
outsl
int3
call
fldt
inc
pusha
cltd
add
xor
movsb
mov
sbb
adc
add
ljmp
cmpsl
jns
clc
jae
push
fcoms
shl
push
push
hlt
gs
or
inc
mov
pop
stos
push
cs
pop
fsubp
pop
sbb
or
call
je
insb
aas
cmp
lods
pop
xchg
hlt
sti
lahf
xchg
or
cli
mov
adc
es
or
ss
cmp
leave
addr16
or
mov
mov
jmp
lds
lods
xor
sub
mov
jbe
pop
cwtl
or
cmpsl
lahf
out
pop
pop
push
mov
pushf
pop
insl
movsl
or
xor
mov
push
icebp
out
pusha
mov
sub
cli
or
dec
or
xchg
divl
mov
or
cwtl
aad
ret
repnz
jge
leave
add
mov
or
mov
push
ror
mov
xlat
leave
fwait
rcrb
out
sub
xchg
lods
xor
cwtl
enter
xchg
popf
inc
lods
cli
lods
mov
cld
push
adc
mov
pop
loop
imul
inc
mov
fdivrs
xrelease
or
cmp
mov
mov
dec
repnz
test
mov
in
lahf
push
add
cmp
cmc
pop
cmp
mov
mov
inc
cmpsl
push
outsb
xor
int
xor
push
push
xor
xor
xchg
stc
data16
outsb
pusha
mov
push
push
sub
aaa
fsubr
stc
add
push
push
cmpsb
dec
leave
and
test
arpl
cmpsl
push
mulb
stos
ficoms
insl
and
outsb
pop
out
dec
sub
sub
push
aam
dec
jns
mov
aam
pop
mov
mov
dec
xor
orl
pop
div
and
das
mov
je
popf
nop
in
stos
or
mov
xor
jbe
cld
mov
fldt
sub
jnp
loop
mov
fcmove
adc
int
decl
int
adc
or
fsubl
inc
sahf
mov
aaa
xchg
sbb
les
xchg
ja
in
push
and
push
imul
xor
es
popf
add
mov
add
cmovge
repnz
movsl
std
mov
inc
js
lods
mov
arpl
aaa
rorl
pusha
hlt
and
int
pop
jne
sbb
cmp
testb
cwtl
mov
xor
mov
ljmp
pop
dec
adc
je
cmc
xor
std
lea
inc
pushl
sub
rorb
shll
jne
popf
jge
cs
scas
or
mov
cmc
addr16
mov
rclb
shlb
jg
mov
mov
jge
mov
nop
sub
scas
gs
je
mov
sahf
call
ja
ret
ja
inc
iret
stc
cmp
inc
pop
sbb
adc
dec
lret
sub
add
loopne
inc
scas
leave
lret
popa
push
or
cld
cmpl
or
je
mov
inc
pop
xchg
xor
cld
adc
add
pop
shl
int
mov
xchg
or
mov
adc
xor
clc
imul
or
add
jge
mov
outsl
mov
and
fdiv
xor
js
pusha
pop
xchg
pop
mov
push
hlt
clc
push
ror
add
int3
rol
mov
dec
das
int
test
xor
pop
out
sarl
inc
xchg
test
insl
shll
aam
mov
adc
out
inc
call
cmp
jmp
divl
sbb
adc
or
loopne
das
lock
mov
fnstsw
xchg
jp
lahf
rolb
addl
sub
sysexit
rcll
sti
sub
jne
inc
cld
test
lods
adc
dec
testb
lds
lret
sbbb
ret
mov
pop
sub
bound
les
loopne
movsl
daa
adc
jno
ds
bound
or
movsl
or
mov
aad
lods
lock
mov
mov
and
test
movsb
mov
jb
in
out
and
rcll
mov
cli
or
outsl
pop
cmp
sub
icebp
stos
subb
mov
inc
mov
mov
scas
movsb
mov
test
cmp
out
cmp
jbe
inc
jge
fldl
push
loop
mov
nop
ja
std
push
xchg
outsb
mov
pop
adc
loopne
sbb
cmp
mov
test
repz
sub
cmp
jg
sub
pop
mov
stc
setae
in
data16
lcall
sub
and
push
sbb
cltd
cli
jl
mov
loopne
bound
mov
xor
dec
push
sub
add
fdivrp
xlat
imul
les
loop
imul
pop
aaa
and
lcall
mov
fdivl
daa
out
and
ljmp
mov
xor
dec
stc
dec
sub
lret
cmpsl
add
push
add
adc
in
and
sbb
xchg
ds
mov
mov
mov
scas
stos
xchg
nop
sbb
push
mov
int
ret
insl
adc
xchg
adc
rolb
xlat
sarb
cli
hlt
jmp
jge
daa
dec
arpl
inc
xor
je
mov
fdiv
dec
jp
dec
sub
dec
jnp
cmp
mov
push
mov
inc
jge
push
sbb
sub
push
mov
out
dec
cmp
push
and
insl
push
or
pushf
in
cmpsb
push
dec
cmp
mov
xchg
div
pop
test
pop
push
imul
adc
add
repnz
shl
mov
or
cwtl
data16
pop
xor
pop
mov
addr16
mov
in
pop
add
mov
xchg
xor
xchg
mov
cmpsl
adcl
pop
mov
loop
jns
mov
dec
jnp
mov
out
or
imul
dec
loopne
int
or
add
dec
ror
imul
jae
into
cmpsb
pusha
adc
push
hlt
pop
dec
sub
outsb
jnp
jo
sbb
xor
sbb
movsb
inc
add
sbb
push
cmp
repnz
jl
nop
mov
xor
jno
push
inc
fadds
sbb
std
mov
roll
add
bound
push
fwait
lock
xchg
movsl
gs
jns
int
dec
mov
push
arpl
icebp
cmp
xchg
mov
xchg
push
pop
or
inc
nop
jb
jno
push
adc
jbe
out
jo
xchg
cmpsl
dec
xlat
jmp
imul
xchg
or
bound
xor
xor
xchg
lret
mov
adc
add
push
dec
cmp
xor
or
negl
test
ret
cwtl
aas
repz
in
and
or
mov
bound
jg
ljmp
mov
mov
mov
fsubrl
xchg
mov
jo
in
pop
push
dec
and
or
loopne
cmpl
aas
into
add
roll
int
dec
push
cmpsl
imul
mov
xchg
push
cmp
dec
les
stos
rclb
lds
lahf
inc
pop
scas
adc
and
pop
push
jbe
or
lds
lock
jb
add
inc
push
imul
mov
lods
pop
gs
in
mov
fwait
repnz
bound
inc
loop
sbb
mov
dec
arpl
roll
mov
jp
sti
in
xchg
xchg
imul
adc
std
nop
xchg
in
adc
test
or
in
movsb
rorb
xchg
ficomps
int3
lahf
addb
movsb
arpl
mov
sahf
cmp
das
xchg
jge
inc
adc
fwait
js
lcall
mov
xlat
gs
adc
push
mov
sub
dec
mov
movsl
movsl
pop
sbb
and
clc
add
jb
or
cmpsl
jge
xor
das
push
lock
les
ret
xorb
push
cmc
sub
ss
xchg
jno
aam
push
add
jo
mov
inc
lcall
les
adc
jae
jl
je
nop
test
push
stc
cli
or
inc
cmp
inc
sbb
inc
in
out
pop
or
rclb
aas
lret
mov
outsl
inc
pusha
ljmp
pop
in
xor
sahf
mov
xor
fstpl
xor
shrl
outsl
cld
loop
sahf
mov
jb
push
out
lahf
add
xor
loope
jae
inc
cmpsb
fisubl
sub
jne
inc
test
stc
adc
lods
int
xchg
inc
sbbb
cmp
mov
stos
xchg
shll
aaa
jmp
or
je
stos
xchg
aam
dec
inc
jp
mov
lcall
cs
mov
inc
std
jl
in
inc
adc
in
imul
nop
xchg
mov
adc
pop
pop
rclb
sahf
xchg
pop
sbb
bound
es
sahf
rcrb
fldcw
sub
pop
xor
repnz
cwtl
fiaddl
mov
jne
lret
mov
out
push
pop
add
daa
inc
jb
lahf
repz
enter
or
jge
popa
dec
jl
inc
xchg
imul
mov
dec
pusha
dec
mov
push
rcll
into
gs
xchg
sub
stos
loopne
movsb
shlb
out
cld
jae
cmpsl
lds
rclb
enter
pusha
ret
pop
mov
loope
mov
sahf
fadd
or
ret
std
jle
pushf
das
xor
mov
into
lahf
pusha
inc
insl
out
pop
int3
and
repz
and
cmp
ret
mov
mov
nop
xchg
movsl
push
mov
push
xchg
inc
mov
daa
andl
cmp
jecxz
roll
scas
jmp
les
mov
xchg
mov
pop
lock
and
imul
xor
loope
insb
cltd
ja
sti
mov
push
insl
iret
cmp
jnp
nop
pop
retw
rcr
inc
add
inc
sahf
and
test
or
or
cmp
aaa
push
jbe
imul
pushf
push
jae
mov
mov
ds
xchg
int
scas
cmp
xchg
push
xchg
jae
fs
inc
popa
sbb
int
cld
cs
or
dec
mov
in
in
out
sbb
lds
test
lea
or
jnp
scas
cmp
mov
xlat
push
inc
push
jmp
xlat
xor
subb
loop
sahf
push
out
or
loope
movsb
in
push
call
aam
mov
sub
dec
dec
cld
xchg
push
jo
jp
mov
cmp
je
mov
lret
mov
mov
and
movsb
push
data16
or
repnz
int3
ljmp
hlt
cmp
inc
dec
ror
icebp
mov
lret
push
xor
popf
lods
jno
fldcw
or
popa
and
faddl
les
sbb
xchg
andb
lcall
ret
inc
movq
popa
lds
jne
dec
sub
mov
push
jp
push
inc
xor
adc
mov
sub
jmp
add
fbstp
jge
sbb
pop
inc
clc
lods
je
andb
fwait
push
scas
jb
loop
xor
int
add
fdivp
dec
out
pop
fcoms
iret
mov
push
jge
shrl
mov
in
jmp
and
sbb
add
sahf
sub
lret
push
cmc
sbb
cmp
xor
inc
push
inc
pop
in
mov
xor
jbe
cs
add
leave
and
xchg
mov
mov
push
pop
rorl
mov
aas
mov
and
fwait
mov
sbb
dec
and
or
imul
mov
stc
or
mov
pop
cltd
into
jns
mov
stos
adc
andl
fistl
cmp
pop
loop
aam
or
clc
dec
test
pop
add
cmp
addl
repnz
mov
and
popf
fsubrl
cs
icebp
mov
add
pop
adc
sub
repnz
test
mov
xchg
aas
mov
arpl
mov
fisubrs
inc
push
ss
addr16
jo
jbe
jle
mov
loope
push
pop
xchg
imul
mov
icebp
out
pusha
mov
cmc
repnz
notl
test
call
and
jns
aad
jp
repz
or
roll
push
dec
sub
xor
mov
pop
lods
cld
ja
push
dec
divl
mov
fcomp
lods
lahf
inc
fisubs
and
xchg
fs
or
dec
dec
add
mov
clc
sub
js
adc
addr16
icebp
ss
hlt
mov
dec
and
rcrl
shrl
cmp
pop
rcll
hlt
dec
xor
out
stos
and
add
loopne
in
in
pop
les
mov
xor
pop
xchg
mov
stc
add
ja
out
cmpsb
popf
jae
cmp
adc
xor
lcall
xor
sbbb
sub
adc
fidivl
add
sti
xchg
cmp
aaa
pushf
xchg
mov
xlat
push
ret
idivl
pop
jg
loope
cmp
xor
inc
xchg
movsl
lea
jb
daa
les
mov
das
mov
mov
repnz
cmp
addl
add
cmp
sbb
into
mov
push
sbb
rolb
and
in
xor
or
lret
push
loopne
cmp
jl
dec
dec
test
in
inc
mov
adc
movsl
in
lods
xor
pop
aam
mov
sub
pop
lahf
sub
shrb
data16
xlat
arpl
cltd
repnz
sahf
mov
rorb
dec
adc
fmull
js
addb
lea
sbb
aam
bound
xchg
jb
or
inc
enter
mov
sub
outsl
lds
movsb
in
push
mov
cwtl
lahf
xor
adc
lock
stos
fsubrl
arpl
in
mov
jecxz
lods
scas
arpl
mov
jecxz
cmp
int
lcall
xor
cmp
jl
xchg
cmp
push
push
mov
cs
cmpsb
sub
int
scas
es
and
sti
mov
jbe
nop
sub
pop
or
ret
arpl
repz
dec
sub
xchg
test
pop
dec
jne
mov
or
mov
or
add
adc
neg
daa
xchg
fldenv
lea
dec
jle
mov
int3
lret
xor
jnp
dec
movsl
cmpsl
push
xlat
shl
ss
xchg
cmp
mov
jmp
imul
inc
pop
xchg
mov
xor
addr16
add
xor
jp
mov
cltd
pop
lret
push
shl
popa
call
pop
jae
stos
mov
jp
and
push
inc
fimull
test
mov
lock
push
mov
jo
fwait
iret
jge
and
mov
mov
cmp
icebp
mov
int3
jecxz
cmp
movsb
mov
rcrl
mov
mov
shlb
mov
fmuls
mov
cmp
test
fmul
into
ret
add
jmp
imul
divl
rorl
mov
jl
in
in
call
mov
fidivrs
shl
mov
fdivr
sub
sub
xlat
imul
js
inc
lret
jae
mov
out
insl
popf
pop
leave
movsb
push
pop
shll
icebp
inc
push
lahf
out
outsl
out
nop
in
add
jbe
pop
add
in
mov
in
movsl
dec
or
sub
mov
cmp
arpl
cld
push
je
adc
repnz
xchg
mov
mov
in
gs
pop
jo
es
pop
js
aaa
sbbb
dec
mov
sarl
rcrl
movsl
mov
jmp
pop
sbb
test
jg
pushf
cltd
push
push
popf
decb
mov
stos
mov
stos
sahf
or
dec
frstor
sbb
xor
orl
push
cld
cmc
mov
ljmp
push
mov
cmp
mov
push
outsb
div
xchg
orl
fidivrs
dec
call
in
add
xchg
popf
sub
and
fucomp
scas
mov
in
ss
fldcw
pop
loop
adc
pop
mov
ljmp
scas
adc
in
mov
imul
xchg
pause
ss
jne
xchg
nopl
ds
mov
fcomp
scas
pop
mov
adc
xchg
or
fucom
push
dec
cmpsl
ja
mov
pop
call
cld
daa
pop
mov
repz
arpl
addr16
adc
int
lss
or
mov
dec
sbb
pop
ja
sbb
call
out
in
mov
and
lods
insb
xchg
push
out
jp
adc
les
rclb
inc
stos
fimuls
mov
std
xchg
inc
mov
sbb
ljmp
jp
mov
aam
test
mov
daa
mov
negl
dec
dec
incb
sbb
sbb
xchg
and
fcmovbe
add
rol
push
xchg
mov
push
gs
push
or
fiadds
jne
aam
and
into
jb
out
jg
pop
ret
sbb
push
jmp
cmc
sub
xorl
into
jbe
pop
or
xchg
add
in
pop
out
incl
dec
out
adc
jl
cmp
cmc
lret
insb
sti
sub
nop
stos
mov
cmp
xchg
cmp
add
inc
push
test
xor
add
pop
push
push
mov
jns
push
sbb
pushf
mov
sti
cmp
rcrl
xor
dec
insl
inc
or
mov
push
sub
popa
cli
cmp
in
call
dec
test
jns
fiaddl
xchg
pop
or
clc
outsl
bound
add
stos
inc
and
xchg
or
out
cwtl
stos
imul
nop
std
sbb
mov
xor
outsl
xor
mov
out
mov
xchg
ja
mov
ja
aad
mov
mov
addr16
dec
xchg
outsl
mov
stos
xchg
jo
mov
cltd
ret
lock
adc
sub
jecxz
or
jne
lahf
mov
sub
mov
je
add
mov
sbb
aad
dec
pop
sbb
lret
ret
cmp
test
out
out
sub
dec
loop
int3
pop
or
loop
xor
dec
lods
push
jmp
mov
push
adc
pop
pop
ret
ja
mov
pushf
dec
cld
cmp
jne
jnp
pushf
push
xor
jle
pop
xchg
lret
dec
cwtl
dec
jle
add
jp
fnstenv
xor
rorb
xor
cwtl
pop
mov
or
ds
stos
addb
xor
rorl
push
test
out
fs
test
mov
dec
jg
mov
adc
or
inc
adc
in
lcall
cmp
pop
cwtl
daa
hlt
test
push
bound
or
or
add
sbb
push
daa
shld
test
in
iret
imul
cs
jo
lods
into
xchg
test
mov
orl
imul
push
jne
out
inc
ret
outsl
push
mov
xchg
push
mov
sbb
mov
adc
mov
sbb
je
pop
and
stc
xor
add
nop
outsl
mov
pop
loope
mov
jb
lds
inc
push
in
xchg
xchg
fs
outsl
sbb
mov
loopne
and
cltd
arpl
out
mov
cs
jge,pt
mov
mov
xor
pop
das
mov
ror
jnp
push
int3
inc
or
loope
flds
sub
das
int
xchg
jnp
subl
pop
andb
stos
mov
ds
in
sub
dec
xor
in
push
scas
mov
dec
mov
pop
loope
addr16
mov
hlt
popa
repz
outsb
stos
stos
out
fwait
pop
aas
xchg
cmp
loopne
sub
or
adc
loopne
repnz
cmp
add
jbe
cmp
dec
inc
hlt
iret
sbbb
shrb
adc
out
push
iret
es
xor
in
ret
lods
pop
mov
jnp
jg
jl
rol
mov
adcb
dec
dec
std
pop
out
mov
mov
popf
mov
sub
xchg
sbb
jo
jecxz
and
lods
daa
push
add
in
ret
push
add
xor
jae
pusha
mov
rorl
jo
fdivr
lret
pop
ret
jle
lret
pop
test
dec
bound
xchg
cld
adc
stc
in
dec
movsb
movsb
xor
test
ret
ficompl
imul
movl
dec
mov
and
push
lock
push
in
sbb
jge
dec
mov
or
add
jp
cmp
xor
xor
loop
or
jl
test
andb
inc
sti
lods
inc
mov
xor
movsl
mov
mov
pop
mov
sub
push
popf
es
lret
adc
push
mov
xor
repnz
loop
sbb
inc
pushf
mov
inc
loopne
hlt
cmp
std
jl
mov
xchg
adc
adc
pop
ja
adc
rcr
push
pop
ja
imul
in
cmp
andl
call
or
mov
jp
cmc
mov
imul
bound
dec
inc
mov
repz
add
je
int3
inc
dec
call
push
jae
insl
psllw
sti
push
out
push
jmp
sub
pop
sbb
xchg
repnz
call
lock
mov
out
mov
arpl
or
dec
std
and
mov
lock
sbb
outsb
xor
mov
jecxz
push
and
push
out
test
jno
xor
ret
mov
enter
decb
clc
and
pop
push
mov
mov
mov
jnp
push
lock
rcrl
pop
mov
imulb
or
testb
pop
xchg
scas
imul
mov
rorb
push
dec
in
jmp
pop
sbb
pop
lock
pop
inc
lcall
ja
push
mov
dec
mov
stc
sbb
add
inc
popa
cmp
inc
inc
xchg
enter
or
cs
out
push
inc
lock
mov
dec
ror
sbb
imul
pop
and
push
in
shl
xlat
jne
daa
cmp
jb
or
fdivr
inc
jle
mov
dec
add
pop
push
mov
js
es
shrl
cltd
mov
fcompl
in
xchg
xchg
cmc
sbb
cmc
arpl
jns
adc
add
cltd
lret
jnp
dec
mov
les
scas
out
fistpl
lahf
push
mov
int3
fbstp
pushf
and
loope
mov
pop
out
adc
cmpsb
mov
pop
xchg
ja
fcomps
jle
lock
out
mov
scas
mov
imul
push
aad
movsl
imul
les
fcompl
outsb
fs
lahf
inc
push
into
sarb
or
lret
shll
or
sub
pop
popf
push
addr16
jbe
xchg
dec
cmc
sbbl
inc
inc
adc
xor
inc
xchg
cmc
mov
mov
cltd
xlat
lock
pop
xor
scas
test
daa
ficompl
xor
pop
stos
ffreep
adc
mov
inc
dec
mov
xlat
or
jb
enter
imulb
pop
xor
xchg
inc
cmpsl
cltd
aad
icebp
aad
test
push
test
rclb
mov
xor
cmpsl
push
mov
or
xchg
hlt
or
out
sub
outsb
aam
adc
and
test
stos
push
mov
sbb
mov
shrb
call
push
rcll
add
cmp
adcl
bound
or
or
mov
inc
in
sbb
test
repnz
jg
arpl
rorb
sub
call
in
shlb
or
pmaddwd
push
loope
push
loopne
test
pop
ljmp
mov
fcomip
gs
mov
mov
dec
cmp
inc
add
pop
jmp
dec
or
pop
lret
dec
or
pop
leave
mov
aam
inc
rclb
lahf
push
in
cmp
or
pusha
cmc
sbb
loop
imul
xlat
mov
sahf
xchg
sbb
pop
mov
xor
dec
mov
sahf
cli
aas
or
mov
push
fadds
and
inc
inc
lret
jne
push
cmpsb
pushf
mov
int3
outsb
mov
mov
das
imul
in
push
push
jmp
loope
lods
rcll
pop
xor
addr16
jns
fnstenv
mov
ret
popa
mov
nop
jmp
aaa
cs
dec
pop
pop
inc
sub
icebp
sub
inc
out
ds
lds
dec
in
xchg
decb
mov
sahf
adc
jno
jo
add
insl
jg
shrb
outsb
inc
xlat
in
lcall
push
sub
dec
pushw
outsb
outsl
mov
jb
in
xchg
inc
lret
sub
lahf
inc
push
ficompl
aam
test
int
jbe
getsec
int
out
insb
roll
push
add
sarb
leave
addl
cmpsb
push
stc
xor
inc
rolb
and
inc
or
lods
addl
mov
sbb
pusha
push
jb
mov
xlat
jg
xchg
mov
cs
insb
sub
or
mov
sub
and
cmpsl
enter
adc
mov
cmpsb
jbe
mov
loope
test
sti
sbb
ds
sub
jmp
push
cmpsb
sahf
mov
mov
outsb
mov
or
andb
sti
mov
xor
dec
cmp
daa
cmp
es
add
jge
loope
cmc
mov
mov
cs
aam
in
cmp
push
lods
aad
adc
fisttps
fnstsw
sub
and
shll
ret
pop
and
push
cmp
inc
xchg
stos
js
mov
mov
adc
jae
cld
pop
xor
dec
into
push
xor
mov
sbb
popa
adc
mov
stc
daa
add
test
in
adc
movsb
lods
or
shr
and
jecxz
ficoml
add
cld
pop
adc
add
xchg
inc
ret
dec
adc
test
movsl
add
int
add
cmp
cmp
push
cld
jne
stc
lods
pop
sub
xchg
or
jno
or
xlat
inc
xchg
testb
sub
ds
mov
lea
xchg
loope
aam
aaa
incl
or
aad
xchg
xor
mov
cs
cmpsb
fs
sub
test
js
jmp
insl
push
test
cmp
lahf
divb
gs
add
shll
pop
or
scas
jp
repz
inc
popf
fs
fcompl
cmpl
sbb
mov
jle
pop
dec
js
dec
mov
addr16
cmp
andb
pushf
popf
dec
xor
add
dec
adc
popa
mov
rol
jo
addl
xor
inc
inc
push
insl
xchg
cmc
movsb
hlt
cmp
mov
out
add
call
icebp
out
mov
popl
jp
shrb
out
cmp
cmp
mov
lahf
xor
mov
js
xor
mov
scas
cmp
inc
sub
incb
mulb
or
xor
jae
incb
in
pop
ljmp
hlt
test
js
lahf
lock
or
enter
dec
push
cmp
aad
pusha
lret
dec
push
setle
js
pop
xchg
adc
pop
inc
pop
mov
sahf
aaa
jb
pop
lods
popf
int
pop
sub
sbb
sub
hlt
test
mov
jl
rcr
roll
aaa
rcl
add
stc
lret
or
inc
dec
sub
mov
xchg
insb
xor
cmpsl
insl
xchg
outsl
inc
testl
scas
dec
jmp
das
sub
push
ss
fmull
cmp
pop
cmpl
fs
xchg
mov
pop
add
shlb
icebp
dec
mov
mov
fstpt
popf
ret
add
dec
mov
jne
or
or
push
sarl
mov
adc
push
out
jb
js
jl
gs
sbb
movsb
mov
xchg
imul
pop
push
shlb
not
data16
xor
into
imul
hlt
push
lock
jmp
sbb
cmp
pop
and
mov
out
les
ret
popf
repz
push
loope
sub
mov
sub
jge
movl
stc
outsl
and
jecxz
jne
test
arpl
cmp
mov
test
or
jmp
inc
jnp
pop
push
nop
push
ret
test
push
add
out
cmc
mov
inc
out
mov
sub
sbbb
mov
xor
sahf
cmp
xchg
xchg
fstpt
pop
dec
sbb
mov
int3
popf
xorl
push
dec
mov
sbb
pop
imul
call
pop
cmc
fdivrs
cmp
pop
mov
push
adc
push
dec
mov
out
dec
jno
jge
and
inc
pop
push
dec
add
test
bound
stc
xchg
add
sbb
sarb
adc
add
cmp
adc
in
test
xchg
mov
push
lods
inc
pop
dec
jbe
add
into
dec
loopne
test
add
ss
daa
xorb
mov
adc
jne
xchg
call
loopne
mov
test
stos
pop
inc
repz
jns
loopne
push
xchg
xchg
cld
dec
cmc
inc
pop
cmp
subl
iretw
gs
dec
jnp
iret
mov
rcl
lcall
fs
sub
cmp
mov
sahf
adc
mov
jbe
mov
push
andb
lahf
sti
push
leave
scas
lods
lret
stc
jg
adc
ja
lods
jns
loop
cmp
jmp
sub
mov
jmp
ret
int
mov
mov
leave
pop
data16
insb
call
ja
sbb
iret
or
repnz
push
push
frstor
pop
dec
inc
cs
sahf
test
aad
faddl
mov
sahf
sbb
xor
cs
and
jns
or
jno
adc
test
mov
jns
mov
loopne
xor
int
mov
add
mov
inc
movzbl
pop
ffreep
popf
cmp
push
cmp
scas
call
pop
addr16
mov
xchg
cs
arpl
ljmp
js
lock
in
sarl
ja
mov
pop
mov
push
jmp
mov
je
xor
mov
ljmp
sbb
xchg
xor
xlat
jne
mov
sub
mov
repz
je
pusha
enter
out
mov
repnz
addl
lds
and
dec
stos
push
and
xor
and
push
in
aaa
fidivs
mov
fnstcw
jp
fisubrs
add
fs
or
sbb
in
or
xchg
pop
sbb
sub
or
pusha
mov
dec
mov
loope
pop
negb
fmull
dec
dec
cld
xchg
mov
jbe
mov
icebp
lret
test
aad
inc
push
adc
jl
mov
je
xchg
xchg
fisttpll
je
xchg
pop
dec
xchg
insb
mov
fstpt
and
faddl
lret
in
adc
mov
shll
movsb
mov
sub
push
jo
das
add
fcompl
jg
mov
push
imul
inc
push
out
dec
lret
cmp
orl
sub
cmp
add
add
jno
mov
fists
into
jbe
call
xor
fmulp
insl
lret
add
inc
or
ljmp
mov
out
filds
add
enter
mov
outsb
or
cmpsb
xchg
scas
mov
sub
pusha
xor
pop
xchg
shll
repnz
or
imul
pop
mov
in
in
out
lret
call
or
push
stc
divb
and
or
outsl
sub
imul
jecxz
add
jl
bound
push
je
insb
inc
jmp
filds
call
pop
and
daa
or
addr16
lds
jns
xor
sub
xor
adc
in
rcrb
push
and
push
js
addr16
mov
adc
orb
mov
in
mov
subb
insb
rolb
out
dec
jge
xchg
mov
jae
push
mov
mov
leave
push
dec
nop
jbe
mov
mov
pop
fsubl
out
mov
aad
mov
daa
cld
lret
clc
leave
dec
jge
xchg
mov
negb
dec
ss
test
inc
push
inc
repnz
lret
xchg
sbb
lods
arpl
int3
xor
jp
pop
clc
mov
decl
push
movsb
pop
adc
pop
pop
inc
shlb
and
or
add
ficomps
dec
scas
loop
mov
jl
sub
pop
mov
ss
lds
stos
dec
push
push
jle
loope
sahf
repz
repnz
imul
mov
test
sub
cmp
add
or
cmp
sbb
inc
rcr
and
xor
xlat
fidivl
test
or
inc
addr16
cwtl
stos
aad
adc
lahf
sbb
outsb
cmpsb
call
push
pushf
les
lds
push
das
xacquire
pusha
dec
jbe
cli
in
lret
mov
xor
fnstcw
xor
jge
int
push
repz
xchg
cmp
sbb
arpl
cmp
je
das
adc
test
push
mov
popa
lock
cmp
cmp
mov
push
fcompl
sti
adc
cltd
jmp
jbe
lock
pop
sarl
sti
sub
push
jo
ret
mov
mov
fwait
bound
xchg
inc
imulb
and
push
leave
insb
iret
int
cmp
cmp
cmp
les
jl
dec
jo
cmp
push
xor
adc
popf
add
adc
pop
out
pusha
xor
insl
dec
push
cli
push
cli
pop
cwtl
out
pop
lock
daa
ljmp
inc
dec
aad
imul
adc
testl
jae
mov
jmp
dec
aas
leave
into
rcl
clc
xchg
cmp
mov
clc
mov
mov
add
mov
es
popa
push
inc
pop
in
mov
insb
std
loopne
int3
fstp
stc
cltd
add
iret
outsl
repnz
jne
mov
lods
scas
adc
cmp
add
pop
aam
fdivrl
adc
cli
shrl
pop
or
popf
addr16
adc
mov
push
lock
push
imul
nop
in
nopl
pop
in
cmpsl
push
push
push
ss
xor
adc
or
sbb
lods
clc
fsts
popf
mov
add
sub
adc
add
fiaddl
dec
out
push
lods
addr16
movsl
mov
add
ljmp
std
repnz
arpl
sub
fs
cs
xor
sub
mov
xor
shrb
aaa
aam
and
or
inc
pop
jnp
cld
repnz
insb
sub
daa
sub
adc
pop
push
ror
iret
shll
popa
and
sti
and
and
cwtl
mov
test
adc
fidivrl
repz
insl
cltd
push
stos
inc
imul
lock
fnstsw
pop
ret
cmp
mov
fs
cmp
scas
push
stc
test
inc
cmp
inc
movsb
xchg
or
jns
ret
lret
xchg
nop
das
cmpsl
jp
and
and
repz
stc
call
std
cmp
push
imul
mov
sbb
cs
aam
jecxz
rcll
and
push
sahf
mov
sub
jge
push
fstps
pop
gs
sub
in
mov
lock
push
rol
shll
mov
ljmp
and
xchg
lcall
jmp
adcb
ret
out
dec
loopne
xor
mov
lahf
pop
jg
ret
and
daa
mov
insl
fdivp
and
aad
sub
xor
adc
out
cld
push
jns
or
bound
sub
adcb
inc
iret
mov
cmpsb
fimuls
mov
out
sub
pushf
insl
dec
cmc
mov
out
sbb
xchg
ljmp
xchg
repz
mov
fsub
clc
push
outsl
xor
jae
sbb
mov
cmpsb
adc
and
adc
das
aas
daa
enter
inc
pushf
outsb
push
and
scas
adc
cmp
add
int
jmp
mov
push
insl
xchg
jecxz
ss
std
xchg
and
je
lcall
sbb
les
inc
stos
rcl
or
cld
imul
es
and
in
sbb
sti
outsb
mov
xchg
pop
add
and
push
cli
sub
int3
mov
popa
in
rdmsr
in
popf
iret
mov
and
inc
nop
jl
mov
add
jae
and
fwait
inc
xchg
std
shll
dec
out
pop
jge
or
mov
mov
jg
loop
cmpsb
and
jg
int
mov
pop
or
add
pop
sub
fcmove
inc
inc
fidivl
jne
pop
outsb
xchg
xor
das
mov
or
fildll
mov
nop
sahf
lods
adc
and
add
imul
or
pop
popf
leave
jp
xor
int
or
aaa
push
out
pop
sub
pop
push
iret
dec
xchg
adc
cmp
mov
fwait
les
nop
dec
scas
sbb
xchg
outsb
notb
mov
cwtl
aaa
add
test
stc
test
imul
in
or
lea
mov
int3
pusha
fprem
dec
lret
popa
push
dec
stos
insb
flds
out
mov
mov
add
repnz
loope
push
ror
ja
stc
idivb
pop
push
bound
jl
imull
cmp
fwait
ds
jmp
les
ljmp
es
pop
std
mov
and
jb
pop
add
mov
out
cli
fsubr
popf
adc
cwtl
and
push
dec
jle
cmc
js
scas
test
jl
and
out
bound
sub
stos
jae
push
jno
movsl
mov
ljmp
xor
push
push
jne
jp
push
xchg
cmp
jnp
mov
outsb
jnp
adc
and
and
stos
or
int3
jnp
psrld
xchg
repnz
mov
sub
movsb
arpl
movsb
jl
adc
fildll
jge
movsb
push
sti
ja
testl
inc
sarl
sbb
gs
mov
or
xchg
xchg
mov
call
je
addl
sub
cmpsl
mov
aas
cmp
mov
shrl
or
js
add
sub
or
dec
jecxz
cmp
pushf
xor
push
xchg
xchg
push
mov
mov
mov
adc
or
cmp
enter
movsb
dec
repz
fcoml
sub
scas
dec
sbb
in
imul
pop
aam
cs
movsl
jmp
xchg
inc
gs
test
inc
cmpsl
or
shlb
push
lods
fimuls
bound
push
or
jbe
pop
sti
jne
mov
repz
push
cmc
notl
jmp
sub
loop
pop
pushl
stc
push
or
push
sarb
cwtl
adc
add
cmp
subl
sub
scas
in
sbb
inc
and
inc
and
idiv
mov
jmp
xor
sbbl
add
rcll
pop
xchg
jns
xorb
std
ljmp
jno
sbb
lods
or
sub
pop
mov
dec
and
and
in
sub
dec
jbe
jl
sub
mov
mov
adc
fstps
dec
or
adc
dec
mov
sbb
add
xchg
mov
and
sbb
mov
aam
testb
dec
scas
stos
ljmp
or
fcmovu
gs
mov
shrl
pmullw
sbbl
mov
xor
cmp
sbbl
iret
aam
gs
mov
test
mov
cmp
lea
cwtl
sbb
pop
lods
mov
frstor
or
loope
stos
push
inc
jae
popf
pop
jns
dec
in
jle
mov
mov
or
jecxz
ljmp
cld
test
call
push
ljmp
jl
jmp
push
cld
or
cmc
outsb
and
pop
or
outsb
xchg
cmp
push
push
nop
dec
jnp
rclb
ret
dec
mov
in
xor
mov
jns
jb
imul
lahf
inc
ror
mov
sub
mov
mov
stos
jle
pop
lret
pop
xor
adc
sub
mov
pop
mov
xchg
loopw
mov
loop
jae
popf
jp
stc
sbb
inc
mov
movsb
mov
jb
xchg
adc
hlt
mov
pop
ds
lock
cmp
mov
xchg
xchg
push
fcoms
fsubl
insl
xor
sbb
add
pop
rcll
push
aas
lds
pop
pop
cmpsb
mov
stos
out
loope
sti
imul
fistpl
jbe
fstps
sub
mov
les
add
fcmovnbe
loopne
pushf
jg
lret
lds
in
cs
xor
jp
faddl
sahf
push
push
jle
mov
fbstp
dec
fcoms
fdivl
jge
mov
in
cmp
xchg
and
arpl
cld
mov
aam
lods
sbb
sbb
stos
pop
jb
push
push
mov
inc
rcrl
in
lds
pop
loope
adcl
push
or
fldl
lahf
cltd
jae
dec
popf
nop
out
sarl
adc
lods
mov
scas
mov
fidivl
and
inc
sbb
test
push
in
pushl
adc
in
xor
add
inc
out
mov
in
adc
sub
test
pop
mov
daa
out
loopne
push
hlt
pop
je
pop
mov
or
fisubrl
dec
jp
popaw
in
xchg
jno
dec
shl
jecxz
mov
and
lea
mov
pop
cmp
jae
rcrb
imul
mov
cli
push
and
pusha
adc
cmp
pop
or
in
mov
fsts
imul
je
cmc
mov
dec
dec
or
cmp
in
clc
jl
imul
pusha
mov
sti
mov
ja
cmp
mov
roll
or
xchg
sbb
cld
cmp
cmp
push
mov
mov
lea
outsl
cli
dec
jne
jg
mov
mov
and
cs
jne
jmp
fld
sbb
pop
dec
adc
mov
sbbb
push
push
or
lea
loopne
mov
nop
jne
fcoml
popa
mov
push
in
cmp
jecxz
sbb
ss
data16
jb
push
repz
xor
xchg
pop
in
mov
push
inc
add
in
out
cmpsl
mov
imul
aam
inc
movsl
mov
imul
stos
jle
mov
cli
cmp
jmp
out
repz
mov
xchg
cmp
or
jecxz
in
test
adc
inc
mov
movsl
sub
inc
repnz
sub
and
add
out
cmp
cmp
sub
mov
out
xor
add
lods
popf
xlat
daa
ja
jno
call
and
in
pop
lds
push
rclb
xor
sbb
inc
and
mov
push
pop
mov
and
inc
adc
outsl
aam
inc
and
int3
mull
mull
sub
jg
pop
cmpsl
js
mov
push
add
and
xor
or
out
dec
in
mov
gs
adc
jae
loop
data16
ret
mov
jl
lcall
sub
xchg
push
mov
in
orl
mov
inc
and
pop
push
add
int
icebp
mov
leave
jge
out
loope
fisubs
mov
out
int3
std
xchg
jne
stos
arpl
clc
adc
mov
test
sti
mov
mov
test
sub
inc
cmp
out
sahf
mov
or
pop
xchg
jnp
lcall
adc
mov
adcb
fcmovb
mov
xchg
push
adc
dec
in
mov
int
adc
int3
js
add
mov
jnp
enter
lahf
arpl
inc
adc
push
std
and
fcoms
out
mov
sub
ds
je
in
je
xor
movsb
out
sbb
outsl
xor
lcall
ds
xchg
cmp
or
push
ficoml
cmp
dec
ss
call
daa
mov
in
popf
dec
dec
jg
fsts
xor
mov
test
mov
mov
in
sahf
sbb
mov
data16
leave
cmp
lea
xor
xchg
inc
add
call
pop
lds
out
arpl
test
sbb
push
sahf
pushl
or
pop
xor
outsl
sub
cmp
outsl
mov
push
test
in
lea
push
xchg
fwait
je
cmc
add
mov
add
or
push
ds
cli
lea
aas
mov
cmc
sub
dec
xor
pop
push
movsb
inc
push
out
je
mov
js
movsl
lds
pop
inc
ficoms
xchg
and
mov
int
cmpsb
add
jge
hlt
mov
add
xor
pop
mov
aad
xor
lea
test
xchg
jno
jne
roll
jno
mov
add
lods
mov
pop
push
cli
or
leave
mov
sbb
dec
mov
data16
int
test
cmpsl
cli
imul
pushf
mov
jecxz
inc
or
pop
push
mov
mov
rclb
mov
mov
jno
scas
ljmp
mov
mov
popa
mov
notb
pop
ret
movsb
mov
mov
push
inc
jle
out
int3
leave
sub
mov
data16
stos
xor
inc
das
das
insl
mov
xor
stos
fadds
aas
popa
fldcw
adc
aas
xor
rolb
int
cmp
daa
push
xchg
insl
cmp
test
pop
sti
in
push
je
out
sub
cwtl
adc
mov
or
mov
pop
xor
pop
scas
adc
ret
hlt
or
dec
pop
cmpsl
xchg
or
ficompl
add
ss
dec
sahf
add
add
cmp
aad
test
add
or
test
xor
loopne
gs
sbb
push
clc
dec
mov
jns
cltd
push
insl
cld
mov
ret
shrl
cld
popf
lods
pop
push
adc
pop
inc
sti
mov
xchg
ss
in
pop
add
mov
inc
movb
sar
cltd
lret
ja
jb
ja
in
mov
loopne
push
stos
les
leave
testb
and
push
mov
ja
adc
push
sub
add
cmpsb
rcll
cli
fistpll
faddl
sbb
sbb
lods
loope
push
push
mov
mov
mov
stos
adc
and
add
and
sar
adc
dec
test
mov
xchg
xchg
mov
in
out
mov
add
adc
and
repz
inc
out
mov
push
fsubl
lahf
les
and
xchg
andb
ljmp
mov
lret
inc
or
lds
lock
jae
mov
cmc
insb
imul
movsl
dec
sbb
xchg
sbb
mov
sbb
pop
dec
adc
and
mov
jge
fcompl
rcr
jbe
mov
dec
faddl
xchg
push
sbb
inc
cli
fcmovnu
adc
or
es
fwait
cmc
cmp
sbb
xor
pop
fs
mov
mov
decl
cltd
dec
sbb
mov
je
pop
in
push
int3
ljmp
mov
dec
fsubp
push
lods
mov
cwtl
xor
pop
pushf
jg
add
pop
and
mov
and
adc
dec
pop
xchg
inc
inc
cmp
mov
push
and
dec
notl
ss
add
lods
cmp
int
roll
lock
add
push
mov
addl
aam
and
mov
dec
pop
stos
fcomp
inc
ret
cli
daa
in
outsl
dec
jg
rcr
sbb
adc
push
andb
dec
lret
test
lods
jle
cmp
adc
adc
scas
xchg
cwtl
lret
mov
inc
fsts
in
mov
test
in
pop
jns
sub
subl
rorb
mov
push
cs
vcmpps
jge
aad
sub
dec
dec
or
push
mov
mul
sub
xchg
repnz
bound
aas
mov
jne
loop
mov
andl
rcrl
in
or
popa
mov
push
aaa
in
dec
push
mov
lods
hlt
or
andl
jnp
cmp
add
test
sti
mov
stos
cmp
adc
pop
push
fldt
xlat
mov
cwtl
add
jb
ja
aas
dec
pop
fs
mov
and
das
aaa
clc
and
dec
dec
hlt
or
add
xchg
dec
mov
dec
stos
clc
insl
mov
or
mov
inc
into
add
cld
fistpl
xor
sbb
mov
pop
in
fdivrs
or
and
out
and
xor
adc
mov
push
cmp
adcl
jmp
sbb
test
lock
in
sbbb
xchg
mov
sub
cmp
sub
repz
loope
and
fisttps
es
pop
dec
cmpsb
pop
xlat
ffree
pop
dec
adc
test
mov
sbb
mov
add
sbb
lods
out
rcll
xchg
mov
cmp
cmp
mov
popl
fwait
lret
sub
inc
mov
sub
sbb
sbb
and
or
cwtl
stc
push
shrl
push
jno
mov
inc
cmp
mov
jp
jne
add
fs
sub
nop
sub
pop
pop
bound
xchg
mov
je
jnp
pop
xchg
call
pop
icebp
aas
mov
hlt
jbe
dec
pop
xchg
fidivs
pushf
xchg
pop
iret
xor
cs
nop
xor
and
les
dec
enter
pop
sbb
pop
and
out
clc
adc
inc
or
out
bound
popa
cmp
movsb
and
fnstsw
push
call
pop
mov
cmp
gs
shrl
nop
cmc
mov
mov
cmp
cli
inc
pop
dec
sub
in
je
pop
xchg
scas
xor
adc
cmpsb
jno
add
pushf
jl
les
enter
loopne
mov
into
in
lds
test
push
sbb
and
je
sbb
xor
inc
push
ljmp
xchg
push
add
out
xor
dec
sbb
cmp
inc
movsl
mov
jmp
insb
mov
arpl
aam
fbstp
cmpsb
jp
in
divl
dec
ss
or
in
push
inc
or
adc
sbb
aaa
std
adc
mov
in
adc
in
lahf
out
xchg
dec
add
sbb
xchg
ds
sub
movsb
cmp
test
mov
in
stos
cmp
cmp
and
test
mov
test
add
jg
add
dec
push
sub
mov
fiadds
ret
aaa
jae
mov
imul
aam
nop
pop
ret
pop
data16
stos
sub
les
mov
das
pop
notb
mov
in
ss
es
inc
fmulp
pop
dec
stc
mov
xchg
add
pusha
xchg
mov
lcall
aas
shl
bound
mov
cmp
sub
out
adc
fstp
push
pop
inc
sbb
int
pusha
inc
sbb
push
xchg
and
xchg
shll
stc
jbe
adc
adc
dec
mov
jl
mull
pop
push
lods
test
pop
ret
std
sub
sub
push
lock
mov
test
inc
push
mov
fcmove
in
dec
inc
shr
sbb
popa
mov
sub
dec
push
stos
out
sbb
jle
sti
mov
ja
push
cmp
cmp
mov
test
mov
cmp
out
sarl
in
xor
pop
int3
daa
cltd
mov
dec
and
pop
ret
idivb
mov
shr
std
push
jne
mov
xchg
adc
in
fnstcw
mov
xor
rorl
call
test
leave
std
push
daa
or
repz
scas
outsl
inc
dec
lock
ror
inc
mul
xchg
ja
int
jae
stc
sahf
shrl
and
out
pop
into
pop
sub
ret
fs
jne
mov
jbe
xor
enter
cmp
cld
pop
jp
movsl
dec
fsubrs
mov
test
arpl
mov
xor
popf
adc
fcmovb
adc
mov
dec
inc
lods
pop
xchg
sub
jg
mov
push
cmc
inc
out
push
lahf
outsb
sub
popf
pop
out
or
cld
push
lods
std
filds
ja
into
rcrb
sbb
jne
fldl
dec
aad
aaa
mov
xchg
jge
testl
mov
sbbl
jb
scas
add
xlat
stos
pop
inc
sbb
mov
movsb
mov
pushf
mov
test
sub
fmuls
mov
cltd
push
jne
test
mov
dec
test
pusha
jae
arpl
inc
imul
adc
inc
cs
imul
lahf
inc
xchg
xchg
outsl
leave
xchg
dec
adc
subl
sub
cmp
loop
adc
sar
dec
inc
adc
mov
xchg
or
pop
hlt
dec
mov
xor
cmp
std
pop
jg
test
int
xlat
pop
cwtl
push
iret
stos
ja
ljmp
jne
push
pop
les
mov
mov
les
mov
add
dec
xchg
fcoms
dec
sub
sub
inc
xorl
jbe
fcomip
shrb
cmp
orb
mov
mov
inc
dec
pop
mov
inc
and
in
data16
dec
in
xchg
and
sbb
lock
pushl
xlat
stos
fidivl
gs
iret
xlat
pop
aaa
rorb
or
fistl
xchg
sarb
mov
repz
clc
xchg
into
and
outsb
clc
cs
loopne
jnp
dec
sbb
sti
sbb
dec
xchg
mov
mov
sbb
dec
mov
ret
test
xchg
mov
aas
pop
ud2
aas
aad
pop
mov
mov
cmc
pusha
xchg
xor
add
jg
mov
lcall
es
repz
sbb
loop
fmul
jmp
adc
stc
and
or
movsb
mov
and
cmp
and
bound
mov
icebp
dec
adc
push
pusha
dec
dec
jge
aaa
inc
add
cmp
push
in
ja
das
andl
enter
test
or
lcall
adc
xchg
dec
or
jmp
ficompl
scas
jecxz
lods
dec
jo
jg
mov
dec
jnp
and
mov
pop
in
mov
aam
int
negl
test
dec
int
in
pop
out
mov
out
pop
ret
scas
add
push
dec
aad
mov
sbb
mov
xchg
cmp
pop
inc
jnp
mov
xor
in
daa
fwait
ds
mov
aaa
popa
mov
adc
mov
orb
bound
add
cwtl
int3
jnp
mov
aas
jbe
mov
push
mov
lretw
cmp
dec
xor
push
mov
push
mov
bts
xor
setg
sbb
adc
push
mov
xchg
mov
fnstsw
push
fcomi
cmp
in
cmpsb
repz
xchg
shll
inc
std
test
sbb
and
stos
cmp
cmp
fs
and
mov
xchg
in
insb
imulb
pop
pushf
mov
push
mov
inc
fwait
popf
mov
dec
or
dec
into
stos
push
das
ret
fildl
iret
insb
jno
xchg
fwait
adc
pop
or
xor
mov
shld
mov
push
mov
bound
jo
shll
xor
jo
mov
cwtl
mov
daa
jge
pop
or
movsb
ljmp
stos
out
mov
lret
inc
push
adc
fnsave
movsl
sub
outsb
dec
cmp
ret
pusha
mov
xchg
daa
xlat
rclb
aad
jecxz
jge
add
jmp
add
and
fs
out
sub
lret
mov
adc
insb
dec
or
outsb
xor
mov
repz
test
loop
out
xor
cmp
sbb
push
pop
hlt
fsts
int3
pop
inc
js
dec
stc
clc
push
xlat
jnp
lds
inc
mov
pop
dec
cmp
cmp
adc
push
and
jns
inc
in
pop
insl
rclb
dec
pop
es
sub
fs
jmp
out
mov
loop
or
fwait
jl
adc
xor
test
leave
or
aas
outsl
in
repz
lret
icebp
pop
cmp
dec
mov
sub
adc
sub
xor
mov
sbb
pop
stos
sub
lds
loop
xor
int
dec
push
jbe
mov
pop
in
and
adc
aaa
xchg
lods
dec
in
sbb
cmp
jg
cmp
dec
dec
mov
test
xchg
cmp
fdiv
and
int
movl
or
cs
dec
ss
test
fs
mov
sbb
push
out
mov
dec
jno
xlat
ja
into
dec
das
and
or
mov
fiaddl
aaa
daa
sub
rcr
cmpsl
cmc
sbb
fldenv
sub
or
shrl
cwtl
jae
jle
and
jnp
jp
inc
adc
jmp
add
add
mov
lret
test
mov
test
fdivrs
pop
cwtl
mov
mov
and
arpl
xchg
pop
ret
lods
rolb
outsl
aad
jmp
sbbl
movsl
mov
jg
mov
and
xchg
xor
mov
mov
repz
xchg
dec
push
xlat
dec
outsl
jae
adc
lret
inc
shrl
mov
out
shrb
and
jo
cmp
jecxz
sub
jae
test
xorl
js
or
mov
int3
call
mov
in
pop
fidivrl
ficompl
out
leave
lods
cltd
xlat
and
insl
js
cld
pop
mov
lods
insb
adc
cs
sub
xor
push
inc
jae
enter
rol
sarb
xchg
jae
jle
sub
addb
mov
sbb
div
push
push
mov
sbb
mov
jb
dec
jle
xor
cmp
shrb
jne
rorl
fwait
movsb
push
movsb
test
es
test
outsb
pop
xor
add
pop
call
xchg
mov
xchg
lock
or
insl
imul
pop
nop
xchg
fwait
call
xor
faddl
xchg
dec
ret
push
xchg
sbb
in
cmp
xchg
mov
push
push
js
insl
jg
jb
mull
xor
incb
pop
jge
cli
iret
push
pop
and
push
pop
pop
xlat
mov
pop
lret
push
popf
inc
in
int3
scas
lds
in
and
subb
xchg
mov
jne
adc
adc
mov
add
stos
cs
setle
or
iret
jb
out
mov
ljmp
pop
xor
lahf
inc
jmp
mov
mov
jge
push
mov
sbb
push
sbb
sub
mov
add
mov
cmpsb
xchg
inc
add
push
adc
repnz
pop
jbe
popa
mov
ficompl
hlt
mov
cli
add
lahf
xor
push
push
roll
lds
push
lret
out
mov
fwait
jecxz,pt
lods
iret
sub
in
fildl
stc
ja
test
fbstp
mov
and
shlb
rcll
jmp
push
pop
jmp
cltd
sbb
pushf
jnp
jmp
xchg
ja
xor
ds
pop
pop
test
sbb
movsb
ja
cmc
pusha
or
sbb
mov
out
test
fistl
and
scas
ja
xchg
mov
dec
call
fcomps
cltd
test
pop
mov
inc
fistpll
push
cltd
cmpb
incb
and
jbe
dec
xor
ret
adc
scas
cmpsl
xor
test
rol
xor
int3
jecxz
test
lods
arpl
addr16
jne
add
scas
push
add
insb
test
mov
outsl
rcrl
pop
int3
in
jns
loop
shrl
mov
pusha
push
insl
test
jg
jnp
jp
leave
repnz
or
mov
les
bound
push
popf
lods
fsub
lea
lds
popa
cmp
movsb
fs
mov
sbb
mov
xor
popf
push
pop
dec
out
outsb
mov
xor
repz
push
mov
cmp
arpl
arpl
imul
inc
jg
imul
pop
cmp
cmpsl
mov
data16
or
or
jns
xor
fmuls
lcall
sti
and
in
bound
lods
sub
aaa
or
fldt
adc
cmp
bound
cmp
ret
rclb
pop
add
sub
sbb
test
insb
or
dec
cli
jg
fimuls
mov
clc
lods
addr16
mov
cmp
mov
jle
mov
loope
cld
mov
scas
in
mull
cltd
or
sub
xor
fiaddl
aam
lods
or
sub
popf
or
out
push
sbb
xor
movsl
xor
or
cli
jnp
shlb
and
or
cmp
out
mov
adc
lods
cmpsb
cld
adcl
mov
movsb
lret
xchg
subb
fimull
andb
pop
adc
and
pop
push
in
in
jns
cld
adc
sahf
jb
or
imull
cmpsb
xor
out
movsb
sbb
ret
out
push
xchg
dec
jo
mov
lock
sbb
add
jg
mov
mov
add
mov
hlt
out
mov
jl
jae
push
test
mov
outsl
and
dec
cmp
lahf
mov
enter
inc
mov
cmp
pop
jo
jge
sub
pop
ret
popa
sbb
add
cli
pop
mov
fisttps
add
lds
mov
push
cmpsl
std
mov
adc
imul
mov
cs
lcall
pavgb
sbb
or
sbb
jg
xlat
popa
or
xor
lret
cmp
in
lret
adc
and
mov
insb
aaa
jle
rorb
adc
in
test
mov
inc
pause
int
sub
dec
sbb
push
sbb
inc
fisubl
jns
xchg
in
mov
jecxz
sbb
add
test
outsb
mov
lock
push
fs
iret
sahf
mov
sbb
fnstcw
xchg
mov
filds
lods
aas
ss
sbb
sbb
jecxz
pop
cs
xchg
ss
xor
sub
inc
in
jmp
les
xchg
cmp
cmp
push
xorb
mov
mov
iret
popa
jp
dec
push
daa
ftst
dec
mov
xor
imul
fsubr
bound
and
icebp
mov
xor
cmpsb
stos
or
pop
inc
sbb
or
or
std
gs
mov
popa
cld
hlt
mov
clc
adc
jmp
cs
popf
scas
add
sbb
sub
cmp
mov
push
pop
xor
cld
inc
cmp
sub
gs
sbb
or
les
jns
in
xchg
pushf
cmp
bound
rcrb
aaa
fiaddl
out
cmp
hlt
stc
movsl
xchg
inc
xchg
cli
dec
xchg
cmp
shlb
cli
je
les
push
cmp
inc
call
mov
movsb
mov
testb
int3
pop
or
out
push
stos
mov
test
fldenv
jo
out
imull
push
and
sbb
cmp
inc
and
sti
cmp
push
cld
clc
out
in
cmp
ljmp
pop
les
imull
mov
scas
jo
add
ja
pop
stc
scas
cmc
adc
adc
sub
xchg
and
dec
inc
shrb
xor
bound
jecxz
scas
subl
iret
lea
loope
cld
sti
lds
xchg
js
cmp
jb
ss
stos
inc
or
mov
push
loopne
sub
roll
adc
xchg
push
push
aaa
fisttps
push
dec
mov
movsb
loope
or
xchg
out
jl
stc
movsl
mov
add
xchg
push
add
out
pop
jo
clc
iret
int3
jo
orb
sbb
cmp
jnp
popf
shl
adc
lret
sahf
and
dec
xchg
push
push
pop
mov
fs
jnp
fisttpll
popf
hlt
pop
test
scas
mov
dec
inc
add
pop
or
pop
lods
xchg
movl
pop
mov
mov
push
outsl
in
cmpsl
stos
cs
mov
daa
dec
or
inc
mov
jecxz
xchg
jmp
scas
pop
mov
pop
dec
daa
dec
jae
xor
test
cli
insl
hlt
jmp
les
lahf
or
jne
add
sbb
inc
cmp
push
xchg
lds
flds
adc
rcll
loop
rcll
fwait
mov
jg
pushf
stos
arpl
je
mov
imul
dec
outsb
inc
movsl
jmp
inc
push
or
and
cmc
out
mov
imul
add
loopne
dec
mov
xor
cmpl
cmp
adc
sbb
sbb
push
cwtl
fs
ret
add
or
mov
xor
sub
clc
lret
and
jle
lahf
ret
out
das
xchg
faddl
pop
test
insl
ss
and
rcrb
int
insl
popf
ficoms
out
pop
es
mov
lret
pop
jno
rep
aad
push
repz
shrb
inc
js
loope
iret
pop
sbbb
fnsetpm(287
sbb
fsubl
imul
xchg
test
xchg
lock
cltd
clc
jno
iret
in
stos
push
jl
lock
fwait
inc
aad
inc
pop
xchg
inc
jp
nop
mov
mov
mov
pop
pop
adc
xor
jo
adc
sbb
jmp
ficoml
fwait
sub
xchg
andb
and
sbb
sbb
les
adc
enter
inc
addr16
mov
lea
cli
popa
fstpt
stos
push
cmp
push
dec
jns
push
mov
dec
cmp
neg
aam
dec
sub
inc
sub
std
aad
jnp
shll
inc
mov
sarb
lret
rorl
out
mov
and
lret
jo
dec
jl
rcr
adc
sbb
ss
xor
xchg
lds
testb
leave
and
sub
lods
xchg
cs
imul
out
enter
jmp
and
movsl
pop
pop
or
ror
cmc
xchg
sub
jne
pop
aam
mov
pop
lods
sbb
out
fcompl
ljmp
jmp
mov
mov
movsl
ljmp
bound
outsl
sub
mov
jecxz
lret
cs
lcall
cmp
adc
mov
adc
mov
aad
sahf
ret
push
mov
jne
hlt
xor
mov
sarb
xor
decl
push
enter
cltd
mov
cld
repnz
cmp
jecxz
pushf
sub
lds
leave
cmp
mov
mov
and
push
xchg
inc
aam
pop
mov
lret
nop
adc
push
lock
cmp
dec
sub
xchg
lcall
sbb
push
xchg
or
jge
and
adc
sub
loope
in
rolb
out
mov
xor
and
adc
data16
subb
fiaddl
sahf
sarb
loopne
lret
jl
ja
cmc
test
dec
jg
mov
jbe
sub
mov
sub
sbb
jbe
popa
neg
stc
cs
ret
inc
jnp
and
idivb
mov
mov
xchg
fldt
add
cmpsl
cwtl
neg
cmp
sarb
sti
jle
ljmp
aas
xor
leave
jb
add
jnp
mov
mov
cld
mov
dec
int3
inc
add
cli
adc
mov
das
jae
push
cmp
jecxz
mov
jg
bound
add
mov
inc
or
enter
lds
push
stc
ljmp
aam
mov
pusha
icebp
addr16
cs
xchg
sub
sub
inc
stos
cli
mov
mov
xor
jbe
test
sahf
or
inc
ret
aam
inc
ss
popa
push
ja
jno
std
cmc
daa
out
xchg
adc
and
iret
xor
sbb
dec
or
push
push
or
adc
adc
bound
fistpl
int3
inc
xchg
int3
dec
ja
xlat
shrb
enter
fadd
push
call
push
cmpsl
mov
jno
mov
adc
cli
mov
pop
xchg
dec
and
in
lret
notl
add
sbb
mov
mov
push
test
lods
jb
jnp
sti
repnz
call
push
dec
outsl
mov
fidivl
imul
lret
add
nop
stc
loope
test
loop
xchg
icebp
lahf
mov
out
ficoms
sub
sbb
pop
adc
mov
dec
scas
mov
cmp
fcomip
jmp
pop
cli
insl
das
mov
jnp
ds
int3
stos
lods
fsubrs
jns
fistpll
loope
or
ret
repnz
mov
sbb
repz
xchg
xchg
subb
scas
fs
ficoms
insl
push
xchg
or
add
scas
cmp
outsb
lea
jp
cwtl
mov
insl
push
popf
cmpsl
jecxz
adc
cld
and
add
scas
adc
fidivrs
and
dec
pop
inc
inc
dec
jne
push
pop
sar
stos
inc
ja
xchg
push
pushf
mov
jl
stos
jmp
repnz
out
in
outsl
xchg
jbe
xor
mov
hlt
xor
jge
mov
test
xor
mov
das
jecxz
dec
push
cli
js
inc
pop
in
xor
fnsave
pop
add
jns
rorl
xchg
fwait
xor
imul
or
jnp
mov
jl
inc
ljmp
mov
sbb
icebp
dec
cmc
push
test
out
stc
bound
stos
add
das
in
int
ja
sbb
repz
xor
cmpsl
push
addl
and
andl
pop
cmp
inc
std
fmull
add
jg
pop
inc
mov
sarb
mov
cwtl
jae
cmpsl
add
cltd
xor
mov
jmp
sub
mov
testb
sbb
out
mov
repz
cli
leave
sub
arpl
cmovge
xchg
jb
sub
dec
xchg
mov
movsb
jge
adc
lds
and
adc
dec
jp,pn
sub
fsubs
test
in
outsb
stos
cli
fnsave
subb
mov
lret
dec
pop
xor
inc
mov
test
repnz
sbb
fwait
int3
mov
mov
and
sub
mov
push
outsl
repnz
pop
scas
xchg
cli
rolb
dec
mov
mov
mov
pop
adc
jecxz
insl
or
sub
imul
fildll
sbb
mov
cli
arpl
je
addr16
imul
in
les
scas
mov
decb
sub
push
xchg
mov
ret
shll
pop
mov
dec
adc
iret
lods
inc
jnp
mov
cmp
sbb
jge
sbb
or
ds
mov
ror
les
adc
out
jo
call
ljmp
test
push
jp
stos
sub
cmp
add
imul
xchg
xor
sub
or
jecxz
movsl
adc
loopne
mov
mov
cmp
cmp
jnp
jb
pop
int
inc
push
or
or
cmpsl
push
add
adc
movsl
jp
mov
inc
aas
sarl
cmp
or
push
imul
icebp
and
hlt
movsl
xchg
stc
pop
inc
sub
xor
mov
repz
out
stos
sbb
clc
int3
loop
push
mov
dec
popa
push
sub
cmp
sbb
nop
xchg
call
notl
pop
test
cmc
sub
not
pop
lcall
jbe
push
jae
outsl
in
leave
push
fwait
leave
jae
xchg
int3
outsb
das
mov
call
sub
push
mov
ret
in
nop
decb
pop
mov
mov
dec
nop
adc
rolb
mov
or
imul
mov
test
sti
xorl
xchg
mov
mov
cltd
inc
pop
sbb
xor
repnz
inc
cmp
insl
xchg
popa
movsb
call
lret
stos
in
pop
cmpsl
lcall
test
aas
mov
stos
lds
adc
outsb
mov
add
das
mov
and
or
or
outsl
mov
mov
pop
xchg
loopne
jmp
sub
in
xchg
addl
in
rcrb
cmp
int
cli
sbb
adc
dec
or
cmp
lock
scas
add
cmc
fstpl
imul
mov
xor
add
adcl
es
mov
xchg
xchg
mov
mov
jae
lahf
add
mov
xchg
mov
dec
mov
testl
mov
fs
push
xchg
lods
decl
int3
int
sub
stc
inc
test
add
xchg
enter
fdivrl
mov
pop
push
sub
xor
add
cs
jl
adc
pushf
mov
ficomps
aam
pop
mov
cli
popf
in
shl
jns
adc
ljmp
fs
push
xor
push
dec
adc
repz
push
pusha
rol
xchg
loopne
xchg
cmp
mov
out
and
fisubrs
mov
sbb
sbb
std
movsl
push
iret
sbb
cltd
add
rcr
sti
stos
push
out
dec
lret
cwtl
fdivl
adc
sub
mov
xchg
cmp
jb
test
in
mov
movsb
mov
xchg
js
sbb
push
sti
adc
dec
pushf
xor
mov
adc
or
movsb
mov
cwtl
dec
lahf
adc
jmp
sahf
inc
jne
test
lret
or
pop
inc
pop
jg
sub
ret
fcomps
es
cwtl
xor
andl
lea
popa
xor
in
dec
push
xor
clc
mov
clc
hlt
xor
sbb
push
mov
push
aam
or
add
inc
push
adc
sahf
and
dec
pop
add
dec
cmp
repnz
xchg
es
call
mov
mov
cmp
jecxz
imul
mov
aaa
xchg
jp
push
dec
mov
orb
je
dec
inc
inc
sbb
iret
adc
jp
adc
je
or
lcall
push
aas
add
xor
dec
sbbb
push
adc
sub
and
dec
or
pop
and
inc
movsb
das
out
add
mov
pop
push
pop
mov
mov
pop
mov
arpl
and
inc
inc
cwtl
mov
mov
dec
lret
mov
dec
scas
movsb
xor
orb
popf
nop
gs
mov
cmpsb
pusha
mov
hlt
sbb
stos
hlt
inc
cwtl
sbb
jns
loopne
das
popa
sbb
or
lret
add
push
jl
add
and
ds
jo
jge
sbb
push
inc
out
in
sub
jl
adc
loopne
ror
mov
fwait
lret
adc
inc
jb
js
lsl
xchg
ret
xor
loopne
sub
jae
rcl
xlat
xlat
cwtl
xor
xor
push
push
in
adc
icebp
adc
mov
push
pop
inc
outsl
int
orb
jns
xchg
inc
scas
scas
mov
aad
push
shrb
ja
imul
mov
jae
loopne
add
and
insb
inc
jae
mov
adc
mov
rorb
jnp
pusha
sbb
cmpsb
lods
and
dec
in
xchg
xor
push
xor
adc
xor
jg
nop
sti
imul
xor
inc
loopne
addr16
cmp
push
mov
sbb
lret
popa
loop
sbb
jp
push
test
dec
sbbl
push
pusha
orl
sbb
mov
je
sbb
sahf
lods
ud2
in
sub
cltd
and
lahf
repnz
movsl
inc
sbb
negb
adc
push
push
pop
cmc
test
lahf
mov
mov
mov
sub
gs
jae
enter
popf
sbb
cmp
repz
add
in
jb
test
cmp
flds
scas
xchg
pushf
int3
in
and
pushf
jo
cmp
mov
mov
repz
mov
lods
fmuls
cmp
out
arpl
data16
mov
fdivl
aam
dec
adc
loop
frstor
shr
pop
cs
push
jns
fs
loop
out
sti
mov
inc
in
mov
pushf
shlb
les
lcall
int
pop
push
mov
ret
in
jecxz
adc
adc
add
push
mov
nop
lret
or
std
aaa
inc
jnp
in
lret
mov
sbb
imul
lret
and
out
sub
inc
dec
enter
subl
sbbl
aaa
pusha
inc
adc
loop
jne
sub
xchg
lcall
stc
out
and
adc
xchg
add
rclb
nop
cmp
clc
lret
rcll
xchg
cwtl
pop
into
inc
mov
jecxz
dec
mov
inc
xor
or
pop
ja
dec
out
fisubrs
dec
outsb
jecxz
cltd
xor
mov
jns
pop
int3
mov
imul
inc
adc
shll
and
jle
or
and
sub
or
clc
stos
jne
sbb
mov
insb
dec
fs
mov
pushf
jbe
ja
cmpsl
daa
int
mov
lret
push
sub
mov
dec
jg
loopne
outsl
push
xor
fiadds
inc
cltd
fxch
add
iret
pop
repnz
cltd
mov
rolb
and
pop
iret
movsb
pop
mov
jg
mov
daa
xchg
pusha
cmp
push
add
les
add
outsl
or
jnp
sbbl
in
aad
data16
nop
loop
cltd
push
dec
jg
pushf
pusha
cmp
loop
in
les
cld
mov
call
xor
sub
ffree
aam
outsb
sub
stc
add
sarl
orb
in
dec
mov
xor
sbb
or
jb
inc
fsubs
lds
aas
cmp
test
xchg
pop
pop
ds
xor
ljmp
pop
jp
xlat
jae
inc
dec
inc
movsb
cmp
rclb
mov
pop
or
inc
dec
xchg
push
aad
jl
mov
fstl
data16
fldl2t
gs
bound
mov
rclb
fsts
scas
and
out
pop
sbb
cmpsl
lods
das
repz
pop
sbb
in
push
dec
xchg
ja
mov
ljmp
jb
xor
sbb
lea
and
pop
jae
sub
lahf
out
or
xor
lock
push
dec
and
push
jp
adc
push
fwait
mov
bound
jp
mov
mov
rcr
inc
sbb
push
or
jbe
out
fisubs
fwait
addr16
mov
lret
repnz
test
ret
sub
mov
or
cmp
jo
mov
mov
mov
cmp
and
or
lahf
fstps
imul
push
subb
adc
mov
jmp
dec
test
call
js
into
inc
into
bound
int3
jae
mov
imul
pop
push
mov
call
xor
jnp
push
ds
enter
nop
push
sub
mov
sbb
je
dec
pop
and
ja
sbb
mov
nop
dec
sub
inc
scas
push
leave
out
rcrl
cmp
insl
mov
xchg
or
dec
insl
cltd
es
and
jmp
push
push
movsl
mov
sub
out
scas
and
mov
sti
lahf
in
mov
adc
push
or
hlt
lahf
jg
dec
mov
mov
lcall
push
fisubrl
cwtl
and
sub
lahf
rcr
imulb
daa
add
xlat
xchg
inc
sahf
stos
add
jne
in
cmpsl
dec
aas
gs
popa
out
ret
pop
daa
pop
jg
lret
sbb
lret
fistpll
imul
test
movsl
jg
add
pop
stos
in
mov
scas
sub
adc
jmp
or
push
inc
sub
and
xchg
inc
repnz
in
pop
jnp
pop
mov
jae
push
mov
pop
push
cmp
inc
xchg
push
pop
sub
mov
mov
inc
sbb
mov
fs
mov
out
cmpb
js
cmpsb
movsb
incb
inc
ficoml
pop
arpl
ja
popa
adc
mov
sbb
ret
mov
sub
mov
enter
or
cmp
jne
mov
cltd
gs
cmp
sub
clc
arpl
popf
lea
pop
dec
insb
call
mov
pop
aad
stc
lods
pusha
cli
sub
xchg
cmc
mov
add
sar
jecxz
hlt
jno
adc
dec
mov
or
outsl
int3
cmpsb
lods
inc
adc
lea
sbb
dec
stos
lahf
cmp
mov
loopne
cmpsb
mov
cltd
cltd
enter
jg
mov
std
pop
mov
dec
mov
sub
inc
insl
lds
in
push
jge
cmp
pop
dec
inc
xor
repnz
fsts
push
add
ds
cmp
fs
in
cwtl
mov
ljmp
push
add
and
push
mov
sahf
out
cmp
cld
into
or
ret
rcrl
xor
dec
add
lahf
lods
or
sub
or
inc
mul
and
or
lahf
cmpsb
push
out
jns
movsb
dec
add
cltd
int3
sub
pop
outsl
rcrl
arpl
mov
inc
idivb
jne
mov
add
out
leave
addr16
loopne
cmp
lods
mov
aad
adc
es
add
jmp
sbb
dec
into
or
iret
cmp
push
into
adc
or
push
loope
push
dec
inc
sbb
xor
adc
inc
push
aas
cmp
mov
xchg
cmp
test
test
jl
mov
sub
or
shrb
inc
idivl
mov
lret
arpl
push
in
sahf
test
jecxz
mov
sbb
and
outsl
hlt
mov
dec
mov
fdivp
sbb
inc
cmpsb
mov
icebp
cmpsl
arpl
dec
jge
inc
mov
mov
jne
add
fs
dec
pop
jne
push
inc
aaa
and
jge
jge
xor
ret
jns
lods
jae
shlb
jo
sbb
aaa
sbb
dec
push
push
loop
add
cld
push
push
or
lret
jg
in
xchg
lods
rcll
xor
loopne
push
mov
outsb
cmp
push
pop
sbbb
or
insb
sti
out
pop
ss
cmc
mov
shl
out
or
and
call
xchg
inc
iret
loopne
inc
das
and
sub
mov
jae
cmc
pop
pop
xchg
cmp
or
adc
jle
aas
loop
mov
fistpll
inc
arpl
add
inc
xchg
scas
jecxz
sti
jmp
dec
pop
cmp
push
mov
nop
pop
pop
mov
sbb
sbb
inc
jle
xor
hlt
outsb
mov
daa
loopne
xlat
mov
xchg
cwtl
sub
bound
mov
scas
lahf
xchg
fadds
sub
mov
mov
inc
movsl
aam
fcoml
or
adcb
inc
push
rcll
rorb
out
dec
or
push
iret
jecxz
add
addb
into
dec
push
cmp
or
outsl
nop
dec
fwait
inc
push
and
cmp
rcrb
repz
inc
aaa
das
bound
outsl
fisttpll
push
or
dec
and
adc
data16
cmc
cmp
lret
fbstp
sarb
notb
cli
and
xor
jp
mov
aad
dec
or
cli
jmp
dec
and
divl
push
or
mov
orb
and
pop
js
or
sub
std
sahf
insb
stc
cmp
add
xchg
iret
bound
jno
das
jb
jl
add
pusha
les
mov
pop
jle
add
cmp
push
and
shlb
pop
and
lea
shll
cmp
jecxz
push
mov
popa
gs
test
mov
or
test
mov
inc
cmp
push
gs
stos
cld
cmp
and
dec
fsubl
stos
push
and
sub
repz
xor
in
mov
xchg
inc
inc
pop
les
out
and
and
sbb
ret
sub
int
jmp
jo
mov
add
daa
flds
mov
cmp
cmp
aam
adc
jmp
in
aas
push
aam
mov
xorb
jmp
stos
clc
or
insb
dec
push
ja
mov
je
ja
loop
cmc
movsl
fldl
inc
fiaddl
int
or
cmp
insb
mov
loop
in
aas
rcrl
stos
cmp
add
inc
daa
mov
cmp
int3
mov
ret
jl
cmp
add
or
fwait
push
mov
adc
sub
mov
rorb
addr16
mov
xor
jnp
push
js
es
fcompl
fldcw
pusha
fs
push
test
lret
adc
test
cmpl
mov
mov
daa
data16
lret
push
jo
test
jno
pop
xor
rorl
scas
nop/reserved
adc
dec
xlat
stos
lcall
cmpl
and
sbb
xchg
dec
pushf
repz
pop
lea
les
clc
add
push
cmp
push
pop
push
xchg
enter
mov
movsl
mov
loopne
dec
pop
fcom
and
pop
pop
cwtl
sub
mov
repnz
pop
lods
cld
cmp
pop
inc
cmp
rol
sub
ret
push
dec
jns
ret
scas
das
loope
mov
aam
jb
test
push
dec
fsub
out
mov
xor
jecxz
je
in
mov
cmpsl
or
repnz
jle
outsb
push
ret
jl
icebp
mov
push
mov
or
loopne
std
mov
outsl
sub
stos
xor
add
sub
std
mov
inc
insb
inc
jmp
pop
das
inc
in
in
mov
push
testl
pusha
and
mov
fdivr
jb
xor
xchg
cwtl
lcall
pusha
scas
lds
cmpsl
inc
popa
mov
unpcklps
imul
add
sahf
xor
and
inc
mov
test
adc
cmp
pop
inc
stc
mov
mov
mov
xchg
in
in
dec
aad
std
sbb
push
pop
sbb
outsl
or
int
add
xchg
pop
into
popa
jno
and
mov
mov
and
mov
mov
push
and
push
and
sarl
pusha
jnp
jl
sbb
testb
ja
push
sub
cmp
scas
cmp
jae
test
jle
jecxz
dec
dec
ljmp
xchg
scas
sahf
mov
or
cmp
ds
mov
cmp
mov
in
jo
jo
mov
lods
lcall
mov
jl
orl
dec
sbb
dec
pushf
pop
mov
loope
jbe
rcrl
sbb
pop
pop
push
lcall
in
add
lods
push
ret
mov
clc
ds
or
lods
jns
test
int3
jmp
or
test
lret
lods
jo
in
lock
fmuls
pusha
sbb
mov
test
lods
shll
mov
test
and
jo
cmp
or
jp
mov
fisubl
sbb
dec
cmc
mov
scas
roll
sti
js
mov
adc
jmp
or
int
push
mov
pop
inc
repnz
inc
xor
xlat
lods
sub
jo
lods
nop
cmp
jp
jle
nopl
fs
enter
adc
dec
or
fildl
mov
pushl
mov
loopne
inc
xchg
pop
rolb
mov
rclb
outsl
lret
lock
push
inc
xchg
in
aad
xor
mov
scas
pop
incb
mov
lret
sub
cwtl
jl
aas
jl
movsl
push
mov
scas
nop
cmpxchg
dec
cli
neg
xor
or
aad
mov
jne,pt
ss
sbb
jmp
pusha
mov
iret
lret
dec
aas
subl
cmp
pop
inc
clc
sub
dec
sbb
mov
ljmp
jb
inc
lahf
rclb
movsl
or
arpl
sarl
xor
push
mov
fdivl
mov
stos
pop
jp
test
lret
dec
imul
push
dec
arpl
jg
movsb
mov
dec
fcoms
aam
add
mov
pop
mov
shrb
cwtl
idivl
jno
add
rolb
push
iret
xor
jge
cmpsl
leave
mov
or
shlb
int3
movsb
lods
mov
jg
jg
out
scas
and
inc
stc
sbb
or
mov
jo
inc
dec
rcrb
mov
xor
aaa
jb
mov
gs
fdivp
mov
xchg
adc
arpl
lods
lret
mov
outsb
xor
adc
push
xor
jne
movq
mov
sub
push
mov
cmp
jp
cmpl
add
jecxz
pop
dec
dec
pop
decb
test
roll
dec
dec
rclb
out
movsb
dec
dec
test
decl
daa
push
pop
sahf
mov
xor
pop
sarl
out
jp
aad
cs
repnz
jmp
inc
aas
xchg
sub
xor
and
lahf
inc
push
xlat
lret
popa
shrl
jno
lock
test
mov
ss
inc
out
and
adc
sub
pop
arpl
mov
in
pop
or
mov
pop
data16
jno
jb
push
xchg
cmp
cmc
ss
dec
xor
cwtl
lcall
das
popa
outsl
lret
jae
je
and
xor
push
cs
inc
in
sub
and
repnz
xchg
dec
arpl
mov
outsb
inc
adc
dec
and
cmpsb
mov
out
out
push
test
test
mov
mov
and
shrl
push
xor
call
mov
sbb
jb
test
imul
cmp
psubb
and
roll
dec
cmpsl
push
xorb
xchg
movhps
popf
lret
cmpsl
out
data16
stos
cmpsb
clc
out
fcoml
and
and
sbb
inc
inc
icebp
fabs
cmp
popa
scas
in
pop
outsl
inc
loopne
inc
adc
imul
mov
in
pop
jbe
test
test
mov
pop
mov
testl
nop
xchg
xchg
mov
mov
ss
pop
fsubr
mov
flds
pop
cmp
push
mov
cmpsl
sub
imulb
xchg
dec
data16
popa
sti
sahf
mov
mov
pop
adc
jecxz
mov
sub
jecxz
sahf
int
push
lcall
xlat
or
push
dec
and
sub
xchg
dec
rolb
pop
mov
cmp
push
insl
stc
push
sub
or
fwait
popl
pop
cmc
ljmp
add
xchg
out
movsl
jo
das
std
js
les
loopne
push
push
popf
incb
aad
ja
push
jbe
out
inc
mov
adc
data16
popa
jle
inc
jmp
stc
mov
lret
push
dec
lret
jae
popa
mov
jg
xor
pop
pop
jmp
insb
dec
mov
cmp
shl
outsb
and
push
pushf
int3
fbstp
scas
das
push
dec
call
cwtl
pusha
xchg
scas
out
jge
sub
xchg
mov
testb
jne
stos
xor
lea
mov
or
mov
lcall
push
addr16
popl
leave
cmp
iret
pop
xor
sbb
lret
loope
dec
push
adc
repz
cmp
jg
lahf
pusha
dec
sbb
ret
fiaddl
cwtl
es
sub
lea
insl
rclb
xchg
lods
daa
cltd
sbb
gs
faddl
jle
loope
sub
aas
loopne
addr16
les
nop
xchg
stos
hlt
rol
insb
lcall
mov
or
xor
shll
pop
mov
pop
cli
pop
pop
leave
jmp
xchg
test
mov
mov
pushf
cmp
lock
sub
popa
or
mov
fsubl
lahf
add
xorl
test
divl
sahf
or
stos
inc
leave
outsb
xchg
push
iret
cmpl
push
pop
pop
or
xchg
insl
jae
pop
pop
adc
xchg
lock
cld
addr16
daa
fcmovne
jmp
cmpsb
ficomps
xor
jmp
lcall
fdivrl
std
mov
fiadds
out
dec
mov
iret
xor
cmp
in
inc
push
xchg
add
pusha
adc
inc
jl
sub
lock
mov
repnz
addl
fimull
sub
pop
mov
xor
xchg
aad
cld
rcr
mov
xchg
popa
sti
add
and
outsb
mov
mov
clc
pop
lcall
push
subb
adc
xor
popf
dec
sbb
cvtps2pi
sub
cld
jbe
adc
sub
call
or
fsubrp
mov
lret
cmp
cmc
adc
hlt
das
pop
ds
mov
xor
sub
fisubrl
cwtl
xchg
add
push
jmp
sub
cltd
cmp
xchg
aaa
mov
cld
lahf
into
mov
ja
in
push
mov
les
push
test
cltd
ret
mov
shrl
sbb
pmaddwd
jp
clc
insb
or
insb
stc
fnstcw
pop
xor
sti
mov
fstpl
inc
ret
jmp
andl
iret
push
mov
stos
in
ret
gs
xchg
fsubl
jns
movsb
cmp
jne
fucomp
push
scas
lock
hlt
pop
pop
dec
cmpsb
aad
cmpsb
mov
pop
in
mov
pop
cmp
jnp
inc
pop
mov
cwtl
pop
lods
push
addr16
pop
mov
cwtl
pop
movsb
mov
pusha
sbbb
sti
sbb
loopne
mov
call
les
movl
or
lret
push
pop
inc
cmpl
push
dec
pop
leave
mov
jns
repnz
mov
sub
addr16
in
xchg
stc
inc
push
jecxz
mov
push
adc
inc
loop
into
cmc
inc
repz
dec
pop
hlt
movsb
aad
add
xor
xor
loop
pop
pushf
jmp
sub
nop
sbb
bound
dec
aad
insl
clc
mov
sbb
xchg
std
aad
sbb
jno
lret
sbb
loope
pop
aam
mov
or
test
outsl
cmpb
lcall
push
movsl
lcall
icebp
pop
dec
inc
ds
jmp
movsb
test
mov
pusha
adc
xchg
mov
mov
ret
fnstsw
sub
mov
idivl
stos
jg
scas
mov
jmp
pop
cmc
push
mov
xchg
data16
in
pusha
add
jle
std
mov
inc
mov
mov
fisubrl
fdivr
cwtl
sbb
mov
imul
push
mov
pusha
push
jg
cmp
je
inc
jne
push
idiv
dec
call
push
and
scas
jle
cs
add
aad
jb
adc
test
add
xchg
pushl
add
dec
repz
cmp
xor
arpl
or
aaa
xor
movsb
push
negb
repz
mov
push
mov
ss
in
out
pop
jmp
pop
jne
jmp
fwait
push
or
pusha
inc
cmp
cmp
les
es
jno
lcall
xor
fstps
mov
dec
fdivl
sbb
hlt
test
lcall
addr16
cmp
cmp
out
jae
roll
jae
push
cwtl
in
push
and
mov
jns
jae
adc
jae
lods
lods
imulb
pop
iret
mov
mov
lcall
jnp
mov
pop
ss
xor
sti
and
dec
mov
mov
fisttps
cmpsb
and
push
movsb
test
inc
pop
mov
mov
add
std
cmp
leave
xchg
out
inc
xchg
jp
jno
mov
or
inc
add
leave
mov
or
dec
ljmp
inc
cmp
popf
xor
mov
aaa
cli
aad
ret
aam
or
mov
mov
call
ja
ret
sbb
rclb
cmp
in
xor
sbb
testb
in
adc
xchg
fistps
lods
pop
jb
movsl
mov
push
gs
mov
popl
add
shr
mov
sub
mov
cmc
icebp
testb
dec
push
jbe
in
lret
adc
jp
cmp
in
xchg
or
pusha
jo
mov
rclb
loopne
insl
mov
ffree
in
jle
dec
sub
push
pop
sbb
pop
insb
xor
add
fsub
jbe
push
jbe
pushf
fcomi
fisubrs
loope
push
cli
hlt
push
pop
dec
mov
cmp
subl
lret
lcall
icebp
xchg
loopne
in
pop
sub
inc
jbe
fldenv
jmp
in
mov
addr16
push
xchg
xor
xlat
cmp
lahf
mov
xor
stc
cmp
in
rclb
push
icebp
push
stc
stc
mov
ljmp
pop
pop
adc
dec
fwait
sar
rcll
push
push
push
iret
push
jge
adc
in
ret
out
xchg
int3
pop
push
lea
aaa
jns
push
jmp
fdivrp
push
cmp
idivb
cmpl
cmp
pop
inc
ss
xor
pop
testb
cmp
das
jmp
lds
xor
cmpsl
push
in
insb
xchg
pushf
mov
mov
cmp
mov
loop
xchg
pushf
and
icebp
arpl
or
popf
lahf
inc
mov
lret
ss
or
add
js
sbb
dec
popf
aas
or
xchg
stos
lods
movsl
ljmp
mov
filds
in
cs
cltd
dec
ret
aad
das
aam
sbb
sub
js
mov
sbb
xlat
xor
push
loopne
imul
adc
sub
fstps
jbe
pusha
pop
js
dec
ret
and
xor
sub
clc
or
dec
mov
es
sbb
xchg
mull
icebp
loopne
inc
cld
js
pusha
pop
pop
sub
xchg
push
dec
mov
cmp
lret
inc
std
sub
cli
mov
cmp
popa
xchg
test
nop
aas
jl
fdivl
pop
cmpsb
sbbl
xor
inc
inc
push
iret
aaa
dec
push
and
fisubs
adc
sbb
loop
iret
cmp
in
inc
sbb
lahf
add
ror
mov
xchg
mov
and
sbb
cld
fnstcw
iret
rcrb
fcmovnb
inc
xor
xor
sbb
je
pop
lcall
sti
sbb
mov
fistl
dec
mov
xchg
repnz
lret
hlt
int
dec
cmp
and
adc
fsubr
in
or
jl
in
or
ror
lds
pop
test
sub
cmp
aas
push
sbb
aas
mov
jne
imul
pop
and
js
mov
std
test
adc
cltd
dec
addr16
les
call
push
icebp
xor
dec
aam
pop
icebp
mov
rol
jmp
ficompl
jbe
and
xlat
ret
pusha
add
cwtl
ret
ja
jle
xchg
daa
aad
arpl
fdivp
mov
scas
push
adc
lods
and
sub
dec
mov
ja
cmpsl
lods
es
out
test
or
inc
push
nop
shll
add
add
repz
dec
imul
shlb
stc
jb
ljmp
adc
dec
jo
cmpsl
or
testl
cmp
mov
test
inc
icebp
jle
pop
mov
clc
test
inc
and
inc
pop
jecxz
rorl
popa
jmp
shrl
push
adc
daa
out
ret
sub
mov
jecxz
movsb
sub
mov
dec
roll
mov
cmp
or
sbbl
gs
dec
push
sbb
imul
mov
shl
add
mov
and
mov
mov
jae
icebp
sbb
add
mov
add
or
jge
and
or
out
mov
mov
sub
push
pop
jmp
and
adc
gs
jge
fcomp
bound
inc
int3
xor
mov
fstps
imul
mov
loope
add
ljmp
imull
pop
test
mov
testl
cmp
notb
inc
daa
mov
orb
test
filds
addr16
sbb
insl
cmp
inc
or
add
cmp
testb
mov
dec
jmp
mov
xor
inc
jle
jle
enter
cmp
mov
jno
mov
rorl
into
out
in
int
mov
popa
sbb
sbb
mov
jae
pushf
popa
sub
jne
fldenv
mov
mov
cmp
scas
adc
sub
xor
adc
add
in
add
lea
xlat
xorb
aas
xor
aas
lods
fistpll
ficoml
lds
fsts
push
cmp
inc
ret
mov
push
out
arpl
test
clc
idivb
dec
arpl
aaa
or
test
fwait
sbb
cwtl
or
adc
outsl
inc
pop
scas
add
aam
ja
comiss
cmp
jns
mov
int3
jmp
push
mov
or
xchg
push
outsb
into
test
enter
lods
sub
xchg
lds
pop
and
lcall
adc
fxch
outsb
xchg
jo
push
lea
lods
out
lahf
mov
cwtl
mov
adc
sti
cli
pop
in
fcompl
add
lods
mov
fisubrs
dec
movsl
in
dec
cmc
cmp
or
fiadds
fcomps
out
scas
or
mov
loop
shr
push
xchg
call
in
jno
jne
xchg
mov
mov
add
imul
or
or
cwtl
fstps
xchg
xor
ljmp
sub
xor
daa
mov
push
mov
imul
sub
adc
sbb
or
mov
jmp
push
stos
dec
xlat
shlb
in
mov
push
enter
repnz
add
dec
out
adc
in
les
dec
adc
int3
lods
shl
add
mov
out
daa
aam
xchg
and
fstpl
inc
dec
jp
adc
ret
cmp
or
and
nop
mov
xor
aas
inc
icebp
bswap
adc
loop
jl
add
lahf
fs
sahf
imul
add
or
mov
add
inc
lret
fsts
push
adc
or
aaa
mov
mov
inc
add
adc
ret
jb
dec
clc
sbb
or
sub
cmp
sub
rolb
enter
fnstcw
xor
sbb
push
xchg
mov
stos
add
in
pop
pusha
jmp
sti
mov
cmpl
add
mov
push
push
cld
cs
lods
push
mov
lcall
inc
and
xor
imul
jmp
xor
sbb
out
add
cmp
cs
je
iret
scas
push
jp
dec
out
shll
mov
cmp
xchg
pushf
or
repnz
test
sbb
js
ret
cs
or
call
sub
and
and
and
jbe
out
add
cld
std
push
mov
mov
push
imul
jl
jecxz
inc
in
add
pop
jo
int3
push
mov
pop
inc
fcomps
popf
sbb
sub
mov
pop
sbb
outsb
jno
test
bound
jae
imulb
imul
jb
dec
js
outsb
push
add
adc
jl
cmpsb
dec
loop
push
addl
ljmp
mov
xbegin
pusha
dec
std
cmp
dec
insl
dec
or
pop
enter
fs
ljmp
dec
lret
push
in
xor
jge
sbb
out
sub
int3
adc
inc
xchg
fadd
sbb
fadd
mov
cmpsb
adc
test
insb
punpckhdq
add
pop
add
in
mov
pop
push
out
arpl
fadd
icebp
imul
std
push
int
insb
dec
loopne
pusha
lahf
negl
push
dec
sbbl
fwait
aam
pop
or
xchg
nop
dec
mov
add
xchg
xchg
mov
fs
aas
hlt
in
jne
push
test
jmp
xchg
xchg
jg
mov
xor
shll
adc
inc
sbb
add
mov
stc
and
pop
fidivl
fwait
test
sbb
pop
sub
sahf
cmpsb
fsubrs
mov
cmp
ljmp
adc
lcall
pop
fidivrs
aas
pop
mov
mov
inc
push
add
jae
cmp
pop
outsl
sbb
pop
repnz
out
iret
filds
mov
mov
jno
mov
xor
cmp
mov
imul
sbb
mov
add
psrad
notl
sarb
push
cmp
sbb
jp
test
aas
xchg
leave
jae
test
or
xchg
add
clc
xchg
jae
sbb
sbb
iret
out
and
xchg
sub
sub
jle
push
xchg
dec
mov
dec
das
in
sub
lds
mov
jg
mov
jle
shlb
inc
out
xlat
jl
dec
sti
or
aas
push
ss
into
sahf
leave
push
xor
inc
fdivrs
sub
in
shrl
pop
jge
decb
int3
out
add
shr
adcb
rclb
jle
mov
xor
in
cmp
fnsave
aad
imull
mov
xorl
inc
xor
jae
negl
mov
jg
mov
and
fdivrl
dec
dec
mov
jne
scas
add
mov
push
pop
xchg
fcoms
lcall
cmp
sbb
jl
shll
rorl
pusha
xchg
bound
and
cmp
xchg
fimuls
sarb
sub
inc
js
cmpsb
and
ss
lods
cmp
nop
popf
push
adc
cmp
xor
dec
xor
add
xchg
adc
xchg
daa
sar
xor
stc
inc
adc
repz
sbb
mov
rorl
loope
jl
lahf
in
in
sarl
mov
xchg
sub
ffreep
xchg
test
adc
imul
push
adc
inc
adc
scas
xchg
out
lret
jae
fildll
jmp
sub
xor
dec
or
lcall
cmp
mov
and
sbb
lods
or
and
shlb
or
cmp
xor
mov
shll
inc
or
sti
adc
pushl
movsl
andb
cli
js
insl
outsl
inc
pop
xor
mov
fsubl
cld
push
ja
mov
push
fiadds
sti
cmpsl
adc
or
inc
add
aaa
or
mov
dec
cmp
push
xor
or
out
jb
ret
pop
ret
jmp
sub
push
int3
insb
cld
insb
push
pop
add
cmp
test
push
jb
pusha
pop
out
xchg
sahf
rclb
pop
inc
mov
mov
inc
insb
rorb
cmp
ljmp
push
test
fimull
call
mov
mov
out
ljmp
push
or
push
into
mov
sbbb
pop
leave
inc
mov
ret
cmpsb
adc
jp
sub
out
inc
fwait
out
cwtl
je
xchg
and
xor
pop
movsb
or
inc
dec
je
ds
cwtl
dec
seta
or
test
lea
and
cs
xchg
outsb
jge
loopne
mov
mov
push
jg
push
jae
pop
filds
loope
sub
roll
stc
iret
ret
movsb
arpl
test
bound
lret
jl
cmp
bound
js
sub
push
scas
and
pop
inc
cmp
lret
sbb
dec
push
in
and
sbb
mov
movsb
xor
aas
xor
jl
mov
xchg
mov
lea
sbb
cmp
test
in
aad
in
cmpsl
mov
cmp
in
xor
mov
dec
insl
or
negl
je
push
sub
pop
icebp
stos
loopne
push
or
ds
jb
or
mov
jne
fimull
mov
cmc
push
pop
dec
fninit
inc
hlt
fcompl
xor
sub
adc
pavgb
jmp
pushf
out
scas
xchg
test
adcb
dec
and
js
scas
out
add
andl
push
faddl
adc
aad
pop
xor
mov
scas
cmp
out
xchg
sbb
inc
mov
fildl
hlt
call
push
cmp
inc
adc
push
icebp
pop
xchg
pop
orl
jge
adc
cmc
fisttpl
cmc
popa
rclb
push
cmpsl
lret
in
adc
adc
add
stos
jns
fyl2x
mov
or
sti
adc
or
sub
sbb
or
es
fwait
jnp
cmp
insl
cmp
aad
lcall
faddp
or
lret
roll
jno
rclb
repnz
cld
mov
shlb
or
divl
xchg
lea
hlt
ret
xchg
xchg
in
das
mov
inc
mov
sbb
insl
jge
mov
mov
lock
adc
cmp
sbb
in
or
add
andb
adc
jg
imul
mov
xor
std
or
imul
repnz
pop
jmp
push
loop
jmp
fldt
pop
fs
inc
mov
lods
add
mov
push
in
shl
adc
dec
imul
stos
mov
add
in
xchg
aaa
ja
xchg
or
adc
testl
fs
addr16
lods
jg,pt
jb
mov
mov
or
inc
add
std
mov
mov
xor
pop
pop
pop
adc
or
testb
mov
ljmp
iret
dec
lcall
in
sahf
mov
in
dec
xchg
sbbb
divl
add
mov
imul
mov
cmpsl
cmp
push
dec
sti
repnz
repnz
xlat
sbb
int3
inc
aam
push
pop
xor
xchg
push
xor
mov
cmpsb
decb
jne
sbb
mov
imul
pop
int3
xchg
lahf
or
pop
hlt
std
and
mov
xchg
pop
mov
subl
cmp
in
mov
out
xchg
xchg
cmp
in
mov
push
dec
pop
cmpsb
pop
push
movsl
std
fsubr
ss
stos
mov
insb
sub
adc
and
pop
lods
push
mov
push
mov
xchg
mov
sub
lods
dec
xchg
into
loop
ret
cld
jl
mov
out
lds
pop
xchg
movups
fsubs
aas
add
lods
pop
cmp
stos
pop
adc
scas
ficomps
push
mov
jmp
pop
mov
xor
inc
imul
js
lret
gs
cmp
push
mov
outsl
fcoms
pop
sub
add
mov
fnstenv
cmp
sub
scas
mov
fwait
out
das
movsb
sbb
mov
mov
stos
xor
aaa
and
loope
or
and
inc
push
cmp
dec
adc
outsb
sub
adc
xchg
jmp
jmp
iret
movb
es
out
rcrb
xor
jo
sub
cmp
fistpl
inc
cmp
cmc
sbb
jns
movsl
jle
adc
mov
jmp
inc
xor
test
mov
mov
cmp
fmull
pop
lods
lcall
xchg
mov
dec
pop
data16
add
mov
sbb
js
stc
test
fcoml
enter
lods
dec
mov
mov
stc
sub
inc
movsb
mov
dec
inc
fists
sub
scas
mov
xchg
sub
dec
loope
sahf
or
xchg
sub
cli
idivl
aaa
pop
add
cwtl
add
cmc
call
repnz
mov
mov
in
out
idiv
jae
pop
dec
incl
and
movsl
enter
mov
mov
sbb
fisttpl
ljmp
lods
push
inc
sarb
pop
stc
push
add
cld
std
notb
repz
std
pop
rorl
push
testl
adc
insl
xchg
xor
roll
mov
jne
dec
lea
push
mulb
mov
pushf
ficoms
add
movsl
sbb
rol
sub
sub
lea
bnd
adc
icebp
sub
repz
lret
push
mov
insl
ud0
mov
dec
fld
bound
lcall
mov
and
stos
bound
repz
cmp
pop
or
xchg
ficompl
icebp
jno
inc
cmp
adc
dec
mov
jne
data16
jae
jmp
es
ret
push
sub
mov
aaa
cmp
inc
mov
jg
aam
or
ret
and
imul
cmpsb
cmpsl
js
cmpb
pop
mov
push
dec
sub
in
and
xlat
xor
int
cltd
addb
mov
cmp
cwtl
stos
or
inc
je
xor
mov
sub
notb
add
aad
das
push
lret
rolb
push
ljmp
pop
jae
jmp
jmp
int3
stos
enter
lds
rorl
jg,pt
mov
cmpsb
mov
cwtl
sub
push
mov
adc
pusha
or
mov
divb
orl
movsl
mov
lret
inc
scas
daa
mov
pop
sub
ret
pop
fsubrs
rcll
icebp
lahf
movsb
sahf
dec
mov
cmp
movsb
sub
cmp
jp
push
movsb
mov
repz
push
cltd
jge
aaa
pop
mov
cmp
mov
push
jne
cli
ds
or
push
push
leave
jae
leave
xlat
or
loopne
dec
movsb
inc
addr16
mov
push
mov
jmp
mov
jae
or
in
dec
stos
xchg
popf
icebp
jb
mov
push
mov
adcb
dec
jo
arpl
pop
fwait
push
ret
push
fdivrl
mov
cmp
lods
iret
add
rorb
or
inc
ds
cmc
outsl
and
sarl
add
cld
cmp
cwtl
je
mov
or
mov
negl
aad
cmp
push
stc
xor
das
clc
push
lods
cmp
mov
stc
rorb
cmp
outsl
int3
sub
push
mov
jecxz
add
inc
sbb
pusha
mov
sub
in
jb
mov
lea
jmp
test
xor
divb
dec
cmp
mov
andl
scas
sub
out
push
andb
cmp
sub
test
pop
nop
cmp
mov
jge
dec
cmp
insl
mov
and
mov
push
push
cmp
loope
scas
inc
orl
cmp
xor
and
sbb
adc
mov
rcl
mov
or
mov
lcall
or
jb
mov
jge
js
xchg
shrb
xor
repz
mov
inc
push
xchg
aas
sbb
pop
dec
and
ror
stos
or
mov
push
jo
mov
nop
out
push
pop
inc
jns
lret
xchg
push
test
shr
mov
add
jo
loope
cmpb
xor
pop
fxch
push
mov
insb
dec
incl
cmp
jmp
pushf
cli
int
test
dec
adc
jl
jp
shrb
in
xchg
leave
cld
sub
lret
loop
cmp
inc
jae
push
sbb
aaa
rorl
xchg
mov
icebp
xor
repz
ret
dec
cmp
mov
aas
scas
ror
pop
pop
inc
orw
jns
ficoml
xor
imull
jae
gs
in
sub
inc
add
out
shl
xor
enter
cmovo
pop
push
loop
shl
sbb
mov
cmp
xchg
adcb
and
addr16
push
push
out
add
mov
lds
sbb
das
jl
add
repnz
mov
imul
push
xor
sub
repnz
pop
xor
jne
xchg
or
or
dec
movsb
aam
sub
push
xlat
lcall
ret
jae
ss
mov
add
ds
adc
sub
sub
daa
mov
imul
mov
dec
test
je
sbb
and
cmp
fisubl
into
jge
cld
xchg
test
or
fsubr
rcl
pushf
jbe
lods
sub
cmpsb
mov
add
pop
xchg
jge
test
sbb
inc
into
je
addl
neg
dec
jns
jns
je
mov
or
cmpsl
jae
lret
mov
dec
mov
mov
loope
dec
jb
cli
daa
inc
test
lret
cmp
aam
aaa
clc
add
sbb
adc
xchg
jmp
mov
pop
jno
nop
ds
popl
dec
and
mov
ret
mov
dec
or
mov
or
flds
bound
mov
xor
push
lret
sbb
out
push
mov
sub
pop
cmc
test
sub
int
jbe
mov
insl
call
mov
les
lahf
pusha
mov
add
in
push
les
or
hlt
loopne
cmpsb
dec
insb
mov
ds
pop
scas
test
dec
idiv
xor
cmpb
adc
xor
sub
in
xchg
xlat
mov
popf
mov
dec
dec
inc
arpl
mov
pop
outsb
jb
icebp
push
movsb
jecxz
outsb
not
inc
adc
adc
dec
or
mov
mov
or
dec
cmpsl
icebp
mov
int3
push
addr16
imulb
xchg
jae
fistps
ss
scas
lock
orb
sti
fs
lds
add
testl
imulb
xor
repz
inc
stos
mov
orl
cltd
and
cmp
mov
cwtl
and
xchg
inc
in
lods
jg
dec
nop
into
pop
cwtl
add
push
test
je
fiadds
lds
jle
movsb
loop
addb
add
pop
mov
popa
dec
cmp
stos
stos
iret
add
pushf
mov
jl
mov
or
push
dec
mov
mov
push
inc
adc
lds
mov
arpl
cmc
cmc
call
rcll
sbb
adc
sahf
and
dec
jae
or
insl
push
out
inc
adc
loope
pushl
in
or
ds
pop
mov
xor
je
xor
mov
and
inc
test
rcll
cmp
jle
xor
frstor
gs
pushf
repnz
aas
shlb
nop
inc
inc
hlt
sub
mov
add
xor
in
pop
add
mov
xchg
sub
lcall
mov
int3
sub
push
xor
sbb
sub
push
sarl
mull
pop
xor
and
mov
mov
pop
jae
mov
into
lods
add
loopne
jmp
popl
stc
and
and
mov
ret
adc
in
xlat
fnsave
icebp
xchg
xchg
push
or
sub
mov
frstor
push
adc
xor
jo
int
fdivl
outsl
mov
lret
or
les
xor
das
or
mov
dec
xchg
arpl
je
add
insl
jo
sarb
push
int
pop
enter
adc
call
ret
out
pop
fcomps
cmc
out
sub
in
adc
lret
pop
jae
dec
adc
sbb
xor
cwtl
sub
sarl
out
and
scas
out
pop
and
es
test
shll
sbb
loope
push
stos
pop
bound
or
rorb
aaa
lock
and
ljmp
in
pop
idivl
orl
inc
gs
sub
mov
gs
gs
clc
mov
cmc
es
cmp
out
mov
jb
bound
test
movsb
fldl
and
insl
lea
push
or
repz
xchg
scas
cmpsb
mov
jne
loope
jne
cmp
cmpsl
imull
repnz
sbb
rcll
mov
pop
mov
cmp
dec
dec
testl
outsb
adcl
mul
out
jmp
fsubs
out
or
jmp
sub
cltd
rorb
mov
lret
jb
sti
scas
lret
sub
and
pop
mov
ret
fcompl
fisubrl
aaa
lods
jnp
lds
push
ret
das
mov
loopne
sub
mov
add
mov
in
push
sub
xor
into
push
std
jbe
inc
xchg
mov
mov
mov
xchg
mov
pop
imul
sbb
sbb
jne
inc
mov
nop
mov
pop
xchg
sahf
xor
cmp
idivb
outsb
jge
mov
cli
and
xchg
lods
nop
mov
ljmp
in
adc
pop
add
jge
jmp
bound
jns
push
push
sbb
push
outsb
sbb
sbb
jg
das
or
lret
in
add
adc
pop
adc
mov
adc
nop
xchg
add
xor
mov
cmpsl
leave
or
jecxz
jl
loope
scas
fwait
loopne
jns
and
lcall
cmp
pop
cld
adc
pop
mov
mov
adc
push
jnp
xlat
lcall
mov
inc
jb
test
cmc
or
lock
mov
inc
lret
push
out
daa
push
or
or
sbb
iret
xor
ret
jge
dec
subb
scas
sti
and
hlt
pop
lahf
push
test
pop
jecxz
pusha
push
inc
daa
les
pop
dec
mov
sub
and
bound
andl
lock
cmp
push
jle
and
mov
add
fists
retw
mov
jbe
cmp
xor
adc
push
imul
xlat
movsb
or
pusha
sbb
inc
call
int3
push
pop
scas
pop
test
dec
iret
lods
xchg
inc
and
scas
xchg
sbb
inc
xchg
movsl
lea
jle
jp
mov
in
in
mov
inc
adc
ffreep
xor
cmpsl
xlat
cli
sub
push
mov
enter
inc
sti
test
es
rorb
cmovnp
inc
hlt
jo
mov
xlat
stos
out
and
jbe
fcom
add
ficomps
pop
sbb
clc
adc
mov
andb
lret
or
lret
inc
jp
adc
sub
test
cmp
mov
addr16
sbb
pop
and
cwtl
ret
out
push
mov
icebp
ja
push
fnstenv
xor
sahf
enter
subl
pushf
addb
mov
repnz
scas
popf
in
test
jns
cmp
pop
inc
add
jp
push
clc
out
lahf
gs
icebp
cwtl
shll
xor
mov
cmp
mov
mov
test
lods
lret
push
push
mov
push
and
test
fs
add
sub
dec
xor
push
push
rorb
jb
add
fs
xchg
fsubs
mov
imul
cmpsl
xchg
ljmp
call
ljmp
add
popf
pop
and
mov
or
in
in
mov
mov
jbe
jbe
sbb
les
xor
sub
dec
rorl
out
imul
loope
repnz
outsb
jge
clc
mov
out
iret
adc
mov
or
xor
and
xchg
dec
sub
jp
sub
and
in
daa
ret
das
shl
mov
mov
cmp
es
pop
sbb
dec
adc
shrl
jg
mov
lret
push
xchg
xlat
scas
xchg
cli
movsb
flds
or
movsb
lods
mov
and
cvtps2pi
sub
dec
unpcklps
inc
aad
je
add
mov
lods
mov
xchg
push
mov
addr16
imul
cmp
movsb
inc
pop
outsb
or
in
inc
mov
or
jnp
mov
cmp
jnp
outsl
push
lock
fwait
jo
das
pop
xorl
roll
iret
mov
push
jne
sti
aam
cmc
fs
xchg
int3
jnp
pop
xchg
andl
pop
ljmp
add
nopl
xchg
jge
ljmp
sbb
cmp
mov
sub
sbb
cs
xchg
testl
cltd
add
jmp
dec
ret
popf
jl
pop
dec
lcall
cmp
mov
mov
sub
sub
mov
daa
add
rcl
imul
sub
xchg
fistl
xor
daa
sub
cld
out
dec
xchg
mov
push
subl
xchg
popf
mov
xchg
lcall
lods
lret
and
cld
push
push
or
and
pop
pop
fisttps
ss
pusha
loopne
stos
lods
cli
test
jl
sbb
ftst
daa
jge
or
add
mov
out
rcll
scas
ret
int3
sub
pop
cld
jp
inc
mov
mov
andb
movsl
loop
sbb
lock
add
push
jno
pop
add
addr16
loopne
mov
jl
push
and
dec
and
rcrb
mov
shr
mov
es
bound
dec
lahf
icebp
rclb
and
inc
mov
inc
push
icebp
cmpsl
jns
out
xchg
lret
lods
fs
mov
cmp
sbb
lahf
push
mov
das
cs
and
mov
lock
clc
mov
dec
push
sub
lods
sbb
cmp
nop
cmpl
xchg
pop
xor
sub
fldenv
das
in
bnd
inc
pop
orl
dec
mov
pop
loopne
fs
mov
out
mov
cli
pop
aaa
jmp
testl
push
add
out
mulb
into
dec
or
mov
inc
aas
outsb
and
inc
jne
mov
push
and
jle
lret
loop
xchg
mov
clc
scas
adc
in
mov
fistpl
push
sar
push
int3
mov
pusha
mov
dec
cmpsl
in
xchg
xor
mov
cmp
dec
idivb
mov
push
mov
das
push
pop
cmp
cmpsl
test
mov
jg
mov
mov
imul
cmp
xor
insl
ret
pop
xchg
sbb
add
je
popf
cmc
xchg
jl
pop
cmc
inc
sbb
and
or
push
inc
int3
in
outsl
les
int3
sti
loop
popf
dec
add
mov
sub
sbb
enter
addb
sti
popa
jmp
sbb
das
in
popa
out
pop
sbb
cmp
fcmovnb
jo
mov
sbb
adc
sub
mov
sub
add
mov
add
iret
adc
or
jg
gs
or
mov
outsl
shl
mov
dec
dec
sbb
insl
repnz
or
dec
mov
push
add
and
movsl
ja
cmpsl
sub
mov
xlat
jg
das
ret
dec
pop
aad
lock
xor
adc
nop
ret
andl
push
mov
jns
inc
dec
repnz
xlat
sbb
inc
sbb
mov
push
fnstsw
stc
insb
pop
ss
out
xor
sahf
mov
pop
lds
lods
ret
icebp
test
inc
and
sbb
imul
ret
push
cmp
mov
imul
and
fmuls
adc
xor
ja
mov
push
xor
out
sub
mov
testl
and
mov
test
popa
jp
inc
ds
pop
mov
inc
dec
pop
push
ucomiss
iret
fidivrs
or
push
jnp
pushf
int3
movsb
call
adc
out
out
mov
pop
repz
loop
cltd
xor
mov
mov
add
js
shl
pop
mov
mov
cmc
mov
or
adc
dec
fisubs
test
fdivl
leave
test
ret
es
sub
in
push
sbb
cmp
mov
lock
shrl
roll
nop
test
fcoml
sub
into
and
imulb
repz
sbb
test
adc
in
mov
fs
xchg
sub
cmc
push
pop
cmp
aam
je
cmp
cs
mov
mov
pushf
jecxz
dec
lods
out
leave
icebp
push
xchg
mov
fdivl
ror
push
insb
push
xchg
lea
ja
inc
xchg
in
shll
mov
mov
out
sbb
or
dec
popa
adc
inc
push
cmp
bound
mov
call
call
push
mov
jbe
test
xchg
mov
dec
addr16
and
add
enter
daa
cmp
fsubrp
pop
xchg
cmp
push
inc
stos
ljmp
insl
mov
icebp
dec
lds
jle
scas
xor
sti
movsl
mov
cld
mov
addr16
int
sarl
gs
cmovns
into
mov
jbe
pop
inc
xchg
push
lock
push
push
cmpl
sub
pushf
xchg
mov
and
xchg
nop
pop
loopne
mov
ja
dec
or
dec
push
mov
fldt
fistpl
int3
cmp
cmp
out
xor
adc
fsubs
cltd
inc
adc
test
pop
test
mov
and
sbb
inc
dec
ret
ret
call
lods
pop
out
shrl
sub
lea
xchg
dec
outsb
js
stos
and
test
sbb
roll
test
jo
sbb
test
jle
add
push
aad
pop
push
xchg
loop
iret
inc
push
push
in
loop
mov
shrb
mov
or
sub
and
jle
or
dec
xor
mov
gs
mov
push
hlt
lret
xchg
xlat
cwtl
loope
pusha
test
mov
ret
sbb
cli
mov
rcrl
loope
call
mov
mov
gs
cmpsb
out
and
clc
inc
sbbl
dec
stc
or
mov
mov
pop
xor
loop
and
add
jp
jmp
hlt
cltd
cli
ftst
add
push
or
loope
xor
pop
xor
sbb
mov
jp
mov
xchg
test
xchg
mov
negb
xor
in
inc
xchg
sbb
insb
loopne
lea
inc
dec
jmp
mov
test
int
mov
xor
pop
icebp
jge
dec
shlb
mov
gs
or
jecxz
hlt
or
dec
in
xbegin
out
shlb
push
sbb
fmul
cwtl
fdivr
cmpsb
std
lret
cmp
push
clc
lahf
cld
addr16
stos
xchg
fwait
test
cltd
aam
push
mov
xchg
push
cwtl
dec
mov
jo
aaa
std
xchg
inc
fstps
lret
out
push
clc
adc
inc
pop
das
mov
cmpsl
xchg
lods
adc
repz
dec
or
aas
xor
cld
jmp
lcall
fmul
icebp
lret
aad
jmp
pop
pushf
into
mov
cld
adc
imul
bound
xchg
xor
dec
lahf
cmp
ret
loope
and
mov
cs
lret
in
data16
cmpsl
jg
add
xor
or
adcl
push
vpsubusw
lahf
data16
sti
add
mov
cmp
xlat
imul
jg
scas
sub
or
lds
push
xor
add
not
add
add
push
xchg
sbb
or
test
imul
sbbl
adc
pop
or
jns
and
xchg
les
jg
sbb
cmp
add
xchg
cmp
lahf
stos
in
das
jecxz
lock
jnp
lret
jmp
shl
push
in
subb
lock
jns
mov
lret
adc
inc
mov
ret
jmp
push
aad
dec
inc
xchg
test
xchg
lea
cmpl
inc
mov
sub
movsl
mov
es
sub
mov
jo
sub
sahf
sub
push
inc
dec
imul
mov
mov
fwait
jns
mov
stos
fmul
cmp
jns
adc
outsb
cmp
mov
idiv
mov
xchg
jl
das
pop
push
in
xor
push
jnp
mov
frstor
fidivl
push
cmp
pop
add
add
cmp
cwtl
mov
push
lret
arpl
xchg
stc
jg
jg
aas
push
loopne
push
ds
jl
cmp
jl
clc
sbb
add
mov
fldl
pop
mov
fcomp
lock
lcall
int3
dec
repz
mov
jge
test
les
sbb
mov
ret
data16
dec
jns
dec
imul
fbld
aas
pop
fsubl
lret
or
sti
dec
jp
xchg
sub
mov
jno
in
ljmp
and
loope
add
inc
cmpsl
mov
and
and
insb
xor
push
fstps
cmpsb
sub
arpl
pop
push
and
aas
cmpsb
cmp
pop
aas
lret
fs
repz
stos
add
xor
xchg
xor
jmp
dec
clc
es
push
pusha
imul
cli
mov
movsb
mov
cwtl
pop
fists
orb
sub
adc
fcoms
jl
fs
test
outsl
sarl
mov
add
pushf
sbb
cmpsb
loopne
sub
scas
enter
cwtl
dec
fsubrl
movsl
and
add
pop
cmp
mov
cs
lods
and
push
pop
inc
pop
jecxz
leave
fdivl
jl
mov
popa
mov
dec
jnp
dec
mov
add
stos
lods
push
ds
cmp
js
jecxz
stos
xchg
bound
mov
jb
xor
adc
cmp
add
sbb
dec
mov
adc
sub
adc
fadds
mov
stc
bound
cmpsb
cwtl
xchg
das
sbb
sbb
lahf
int3
andb
fmull
mov
inc
outsl
std
ds
pop
fwait
shlb
push
cmpsl
xor
out
outsb
push
int3
mov
sub
dec
xor
sbb
mov
icebp
push
cltd
je
lret
rolb
and
adc
loopne
test
aad
xchg
inc
or
dec
sarl
push
dec
rorb
mov
adc
xor
push
arpl
or
scas
je
and
out
pop
inc
bound
outsb
xchg
out
lock
pop
mov
stc
push
jno
xchg
daa
mov
jmp
jae
test
fwait
aam
pushf
arpl
adc
out
jle
in
mov
mov
adc
sbb
fdiv
cli
sub
or
std
imul
icebp
adc
test
hlt
outsb
sub
addb
negl
movsb
dec
shlb
xchg
pop
adcb
push
mov
fs
in
les
mov
fcomi
bound
xchg
push
sub
repnz
inc
sub
lahf
and
jno
push
and
and
mov
jb
mov
dec
pop
or
jns
in
lahf
outsb
pushf
out
mov
aaa
mov
mov
mov
xchg
xchg
mov
push
fcmovnb
lcall
loop
loopne
inc
cs
clc
imul
inc
jae
int
aaa
sbb
pop
inc
outsb
sub
adc
mov
sbb
mov
mov
mov
imul
stc
cwtl
cmp
push
shr
sbb
out
adc
movsl
mov
lock
adc
fdiv
push
aam
or
lock
mov
or
and
or
sti
jb
cmp
mov
push
dec
lcall
xchg
js
pop
add
xor
xchg
adc
dec
and
jb
jno
test
shlb
inc
pusha
inc
xchg
popf
loop
sbb
jge
xor
jne
inc
aaa
js
imul
test
jb
pop
mov
sbb
mov
sub
dec
loope
sub
or
shrb
push
pop
jbe
sbb
push
rolb
push
cmp
cltd
psrld
sarb
cmp
stos
xlat
sub
sbb
adc
lahf
xchg
scas
inc
jbe
xor
pop
push
add
xlat
xor
out
lock
movsl
dec
ljmp
jo
icebp
and
adc
fildll
leave
fcmovb
rcll
push
dec
sub
fstps
aaa
push
push
mov
lods
mov
insb
daa
fsubrl
dec
dec
test
adc
loope
cmpsb
inc
test
fwait
insb
stos
push
jg
push
inc
movsl
clc
or
popf
or
adc
jae
ja
jno
jg
xchg
add
test
ret
leave
pop
inc
enter
mov
shlb
inc
call
rcr
fidivl
testl
inc
adc
bound
pop
adc
xchg
dec
subb
sub
fs
fiadds
lds
ss
fs
andb
add
jp
adc
call
and
xchg
mov
add
cli
callw
or
pop
mov
push
test
xor
push
inc
ficoml
into
jmp
insb
jbe
pop
mov
push
adc
js
ja
add
or
sub
aaa
sbb
push
sbbb
sbb
and
mov
add
jge
scas
add
and
orl
bound
leave
or
andb
imul
mov
push
int
cmp
xchg
adc
xchg
push
int3
add
stc
int3
adc
adc
lock
pop
cli
inc
das
rclb
out
mov
in
int3
fistpl
inc
enter
inc
incl
push
pop
xchg
inc
sbb
jle
loop
and
stc
nop
loope
out
sbb
aas
dec
mov
popa
jg
cmpsb
xor
or
and
clc
in
bound
sub
adc
add
sub
fidivs
imul
das
xlat
fdivrs
xchg
xchg
mov
outsl
ficoml
fsubl
in
or
jge
jmp
and
jbe
pushf
mov
push
adc
dec
sbb
cmp
loop
mov
andl
test
fbstp
sahf
add
jo
shll
aad
and
lahf
lret
test
mov
mov
adc
ds
inc
adc
andl
inc
pop
loope
or
mov
jbe
xchg
sbb
xchg
test
loope
out
out
loope
enter
push
adc
mov
xchg
dec
jg
cltd
xor
sub
pop
xchg
inc
fmuls
shll
mov
aaa
adc
sbb
arpl
test
add
pop
xchg
or
dec
sbb
xchg
xlat
mov
and
lahf
pusha
lds
aaa
cmpsl
or
push
fistps
inc
neg
and
push
rcrb
jno
xor
push
imul
int
test
aad
mov
adc
out
mov
pop
test
xchg
add
pop
dec
and
nop
shlb
xlat
imul
and
fwait
notl
xchg
out
push
sub
sub
int
ficompl
cmp
in
jle
dec
in
xchg
adc
xchg
xor
or
sahf
mov
push
in
fwait
test
xchg
call
mov
int
push
pop
and
jno
pop
scas
or
jle
enter
sbb
cmp
mov
test
js
movsb
mov
notl
aam
mov
inc
sbb
clc
cli
mov
xchg
je
add
leave
cmp
mov
cmpb
orl
mov
pop
popf
or
aam
jp
jg
pop
push
inc
dec
cmpsb
sbb
or
dec
pop
daa
rcl
cmp
movsb
cmp
xlat
in
nop
dec
xor
iret
subb
pop
sub
add
xchg
xor
sub
fsts
add
neg
pop
lods
call
add
lcall
cli
add
mov
jle
pop
jp
int3
jl
cmp
loop
fs
test
lock
and
imul
xor
mov
aam
or
pop
jge
pop
jge
addr16
adc
ret
mov
xor
xchg
xlat
adc
or
repz
add
in
andl
popf
inc
imul
out
aad
scas
adc
iret
mov
sti
xor
push
das
insb
push
fimuls
xchg
and
inc
sub
int
sahf
sbb
sub
out
xor
and
lret
pushf
into
fisubl
insl
mov
adc
imul
sbbl
xchg
sub
or
jae
jo
sub
mov
push
out
xor
popa
cld
sub
xchg
xchg
mov
pop
lret
and
jne
ret
xchg
adc
xlat
adc
loopne
adc
sub
jmp
inc
and
mov
icebp
cmp
out
fcomps
xor
imull
ret
push
sub
xor
xchg
cld
xor
add
bound
stos
loopne
adc
stos
test
sbb
jmp
lds
xor
loope
mov
in
mov
xor
jb
insb
mov
into
imul
fldcw
mov
fs
movsl
bound
jnp
jbe
jge
xchg
js
daa
mov
in
arpl
pop
cltd
or
push
inc
hlt
mov
stc
fisubl
loop
fsubrs
mov
loopne
cmp
add
or
mov
ds
shlb
push
mov
lods
shlb
pop
mov
dec
cmpsl
dec
cmc
lea
add
or
scas
cld
sbb
mov
jmp
lahf
push
mov
mov
mov
gs
stc
addr16
xor
mov
ret
ja
add
dec
push
mov
adcb
add
sbb
sub
inc
enter
sbb
sti
or
pop
ret
mov
cmp
cmp
jae
daa
jbe
xor
pop
lds
sbb
add
pop
and
mov
and
lock
pop
mov
mov
loop
xchg
test
xchg
in
xchg
cld
xchg
jmp
push
or
lret
cwtl
dec
lds
outsb
repz
push
mov
and
in
dec
stc
mov
xor
ljmp
idivl
lods
stos
pop
mov
push
movsl
bound
xor
lods
repz
lds
fcmovnbe
pop
xor
sbb
iret
sahf
jecxz
loope
outsb
popf
jnp
jbe
popf
mov
fcoml
xlat
adc
jae
in
jl
stos
hlt
roll
mov
mov
and
mov
and
push
les
xchg
cmpsb
loop
cli
imul
mov
loopne
sub
cmc
js
out
outsb
adc
dec
aaa
sti
cmp
inc
add
xchg
mov
test
je
xchg
mov
mov
cltd
and
popf
push
lods
add
dec
ja
or
and
pop
lock
adc
or
sbb
data16
cmp
cs
xor
sbbb
int
mov
add
add
es
mov
lds
xchg
mov
adc
cli
ror
pop
shll
fidivs
jle
aam
sahf
push
jnp
jmp
aam
xchg
pushf
loop
insb
push
adc
jae
jno
je
jge
pop
or
sbb
jae
ret
mov
add
sbb
ds
or
std
testb
scas
or
inc
clc
cwtl
test
xchg
pushf
lret
out
fbld
push
fldcw
and
loopne
push
inc
int3
icebp
mov
mov
nop
inc
cmpsl
xlat
lahf
loop
loop,pt
dec
lock
xlat
mov
in
flds
lods
loop
in
les
inc
or
or
jb
je
ja
mov
add
mov
out
push
mov
sbb
lcall
mov
mov
inc
push
sub
xchg
add
sbb
fmuls
jns
mov
aad
inc
cmp
iret
in
out
int3
add
ficompl
sbb
push
movsl
movsb
pop
loope
fstl
inc
idivb
cwtl
push
push
mov
daa
out
mov
fs
stos
add
enter
lret
popf
repz
and
sbb
mov
dec
js
jnp
or
sub
mov
mov
out
inc
fcompl
in
jmp
pop
or
fisttps
push
cli
push
pop
int
add
mov
lcall
ret
mov
xchg
arpl
fwait
pop
lahf
mov
lret
mov
or
ss
jbe
pop
and
jns
js
sbb
mov
mov
mov
or
jno
gs
push
cmpsb
loop
aad
dec
scas
inc
bound
mov
fisubrl
xchg
fdivl
xchg
scas
adc
es
fnstcw
mov
mov
ja
or
mov
movl
leave
or
cltd
out
in
ss
ds
mov
push
lods
orl
jmp
jle
fwait
xlat
xchg
sbb
outsb
add
je
jne
adc
pop
xor
in
mov
jb
xchg
fwait
push
xchg
inc
or
and
insl
push
loope
push
xor
add
add
sbb
lock
out
sub
lods
mov
cmc
rcl
sbb
adc
pop
push
mov
pop
mov
dec
iret
pop
jmp
aaa
fistpll
mov
mov
lea
out
mov
inc
push
in
lds
scas
out
sti
pop
in
inc
pop
cltd
ficoms
jae
inc
scas
cmp
cmp
out
rolb
mov
lea
cs
jno
std
icebp
xchg
mov
adc
cmpsb
mov
adc
movsl
in
jp
repz
mov
mov
add
xor
fisubrs
inc
out
call
shr
xor
pop
lahf
dec
test
pop
roll
jle
popa
add
std
push
outsl
fsub
sub
cmpsb
rol
cmp
xorb
lock
or
lahf
dec
sqrtps
outsl
call
cwtl
in
dec
push
xor
xchg
imul
sub
fldl
cmp
ja
mov
mov
cmp
jae
and
out
sub
std
sbbl
nop
sub
dec
dec
jge
push
adc
ss
stos
sarl
adc
imul
add
out
jecxz
nop
out
and
test
into
outsb
adc
inc
mov
aad
mov
mov
dec
xchg
test
movsb
outsb
movnti
sub
mov
xor
pop
xor
sub
stc
push
adc
jnp
cmp
mov
or
push
pusha
les
sub
rol
leave
outsl
arpl
repz
mov
mov
lret
packsswb
xor
cmp
cwtl
shll
xadd
add
inc
mov
cmp
nop
pop
rolb
sbb
lret
cs
mov
ds
icebp
mov
or
cmpl
inc
push
lods
imul
add
xchg
and
test
adc
fbld
repnz
sti
mov
mov
dec
ss
xchg
pusha
icebp
lods
push
mov
das
repnz
mov
lock
xchg
leave
imul
and
and
dec
jecxz
out
notb
inc
imul
push
sbb
sahf
lods
dec
xchg
sub
inc
xchg
iret
jne
fstpt
mov
push
out
xor
cltd
mov
jnp
fdivrs
or
int
hlt
fiadds
test
push
mov
xor
and
mov
incb
push
mov
lahf
sub
ss
das
out
pop
imul
mov
jbe
pop
gs
pushf
popf
mov
js
sub
jb
scas
loop
jecxz
jnp
es
es
and
pop
lcall
dec
call
test
rolb
or
cwtl
push
clc
fnstenv
adc
int3
cmc
mov
loope
insl
outsb
movl
stos
push
pop
lcall
mov
mov
mov
adc
pop
adc
sbb
inc
mov
push
push
cwtl
add
sti
push
adc
mov
ds
fadd
or
hlt
jo
stos
push
sti
mov
insb
push
lahf
xchg
ja
shll
add
ret
xor
pop
lds
mov
outsl
shlb
pop
pop
insb
or
ds
mov
add
fdivl
cwtl
bound
cmp
lcall
and
les
test
pop
sti
mov
or
imul
sub
add
enter
mov
cwtl
into
insb
mov
sbb
dec
stc
pop
lret
ficoml
push
lods
adc
cmpsl
scas
mov
sub
adc
or
jge
stos
shr
inc
add
pop
int
test
mov
imul
test
sbb
cmpsl
inc
inc
cmpsb
mov
mov
and
test
cmp
aaa
push
movl
rcr
jecxz
test
cmpb
fisttps
jl
lcall
jbe
popa
jmp
pop
repnz
mov
vpackssdw
sbb
gs
repnz
and
stos
pop
xchg
int
mov
mov
stos
pop
mulb
jmp
test
rolb
insb
xchg
dec
pop
xlat
scas
imul
or
mov
sbb
pop
sub
lods
push
cmp
rcrb
xlat
fsubrp
aad
ljmp
inc
lods
andb
sbb
das
in
push
mov
cmpsl
loope
ss
mov
push
test
push
jnp
mov
imul
popa
sub
pushf
jecxz
and
bound
out
pop
or
dec
outsb
insb
or
test
and
xor
mov
adc
push
pushl
jno
aad
cwtl
sub
fnsave
data16
xchg
jg
imul
mov
adc
cmp
outsl
jle
push
fiaddl
adc
or
jle
mov
lcall
int3
dec
repnz
mov
mov
dec
bound
shll
daa
sbb
lret
jmp
add
mov
orb
cmp
leave
push
xchg
sbb
jbe
seto
cmpb
inc
pop
sarb
pusha
cmpb
pushf
sbb
test
xchg
lock
fld
nop
mov
sarl
scas
jmp
or
and
add
mov
int
arpl
mov
arpl
jbe
aam
dec
fisubl
divl
and
inc
ficompl
mov
xchg
fadds
pop
sub
dec
jp
pop
scas
sti
mov
test
cltd
sti
jo
xchg
or
shrb
fcoms
notb
test
pop
pop
lock
inc
jle
xchg
lock
jg
jmp
pop
dec
xor
sbb
push
adc
pop
and
pop
jnp
outsl
inc
lret
inc
lods
testl
hlt
xchg
repnz
sub
rcrb
pop
popa
jb
add
fisttps
scas
jle
xchg
in
push
mov
loopne
mov
aam
sbb
mov
test
jbe
adc
push
add
cwtl
cmp
add
out
jb
cmp
jg
outsb
insl
fldenv
xor
mov
adc
dec
in
dec
jne
mov
or
adc
ret
add
rorb
shrb
jno
inc
sub
sbb
fadds
test
sbb
push
cmc
cmpsb
not
cmp
dec
sub
sub
xchg
pushl
andl
pop
stc
cmp
sbb
cli
daa
movsl
sbb
pop
or
lcall
rcr
cmpsl
pop
jmp
sbbb
lds
and
popa
pop
fcoml
mov
pop
jno
fmuls
push
cld
cmc
inc
xlat
std
and
jne
fsubs
testb
or
xchg
movsb
test
imul
mov
test
and
in
stos
ret
mov
imul
les
pop
insl
push
mov
add
notb
sub
xchg
loope
adc
scas
push
xchg
inc
std
fisubrs
rorb
mul
add
rcrb
pop
into
push
inc
jge
es
fdiv
mov
je
stos
clc
aas
stos
out
add
ja
jg
mov
xor
pop
and
insl
vrsqrtss
mov
cmp
adc
jnp
das
mov
mov
cmp
jmp
adc
out
pop
add
ljmp
xchg
inc
rep
mov
sub
adc
sub
inc
sbb
and
mov
sahf
ret
int
dec
enter
stos
push
push
or
or
jp
pop
daa
adc
add
iret
lds
mov
ljmp
push
and
cmp
or
mov
sbb
call
jg
inc
addr16
nop
das
ret
inc
mov
adc
flds
and
data16
xorl
push
out
cmp
stc
push
rcrl
call
scas
iret
leave
movsl
xor
jl
rol
test
jle
lods
shl
adc
sub
out
add
out
adc
fs
mov
ret
pop
cli
leave
into
mov
ret
xor
rcrb
rcl
push
ficoml
into
jns
mov
cmpsl
mov
sub
cmp
lods
loopne
rcll
lahf
adc
xchg
scas
std
into
sbb
test
dec
mov
hlt
es
push
push
fwait
pop
mov
dec
rdtsc
stc
lahf
imul
push
shrl
mov
ret
inc
test
ljmp
inc
adc
push
stc
sti
inc
jmp
in
push
pop
icebp
pop
decl
xchg
aam
scas
xor
notb
mov
lea
pop
dec
into
push
test
push
mov
or
mov
cld
and
pop
sbb
mov
rcll
sti
mov
loope
cmp
or
std
jl
js
pop
sub
push
negl
lret
rorb
mov
jo
sub
enter
push
adc
cmp
mov
cmp
push
cli
push
mov
loopne
ror
xchg
aas
aas
inc
inc
and
inc
and
add
sub
push
xchg
inc
es
cmpl
enter
and
in
scas
fwait
push
dec
xlat
fisubrl
mov
fwait
mov
imul
xchg
stos
xlat
jno
add
in
in
shlb
pop
and
lods
adc
dec
adc
push
inc
dec
popa
pmulhw
mov
bnd
push
aas
es
scas
push
out
push
lea
scas
pop
push
mov
cli
push
out
or
cmp
pop
push
arpl
adc
or
int
push
mov
repnz
and
mov
pop
inc
adc
repnz
loop
mov
test
inc
xor
jns
fimuls
lret
adc
int3
adcb
aam
cltd
pop
sub
add
pop
dec
cmp
jne
dec
xorl
xchg
cs
insl
cmp
pop
test
imul
insl
sub
mov
ret
pop
test
add
jge
xchg
or
xor
pop
adc
push
test
cmp
lret
xchg
mov
jae
push
push
popa
int
mov
in
fwait
pushf
cmp
out
or
jb
lea
mov
xor
mov
and
popa
push
loop
in
jp
jmp
cmp
std
cmpb
out
mov
jne
idivb
scas
cmpsb
mov
out
aam
stc
popf
sub
loop
in
loopne
jp
mov
cmpsb
sbb
stos
mov
jns
inc
mov
push
sbb
dec
stos
xor
das
pop
adc
push
sbb
movsl
mov
out
push
out
mov
fdivs
dec
jg
inc
sbb
inc
in
xor
pushf
mov
dec
mov
pop
popf
bound
mov
xor
aas
fistps
jbe
xchg
mov
adc
outsl
call
lret
inc
inc
mov
mov
adc
jb
lea
cli
mov
std
insl
iret
ss
push
loope
mov
ljmp
xchg
xor
pop
and
and
out
cmp
cmp
hlt
jne
pop
lds
cmpsb
daa
lods
dec
addr16
push
jb
cs
and
adc
sbb
mov
dec
add
lods
jp
and
dec
xor
imul
push
xchg
lret
fnsave
sbb
stos
xlat
pop
sar
es
shrb
and
inc
sub
sub
pop
pop
jns
mov
out
lahf
shrb
dec
jbe
out
ja
pop
pop
mov
lretw
push
mov
sub
iret
fscale
xor
push
fcoml
mov
xchg
adc
cs
xor
out
or
mov
xor
out
sub
stc
test
sub
add
iret
xchg
mov
cmp
test
fisubrs
mov
daa
adc
stc
sbb
cld
aam
pop
mov
pop
jp
pop
xor
div
adc
repnz
pop
sbb
mov
adc
lock
pop
jl
jbe
in
clflush
jg
arpl
or
inc
lret
mov
jnp
cmp
movsb
sub
adc
stc
pop
mov
push
sahf
mov
xor
xchg
mov
outsb
dec
sub
les
pusha
scas
sbb
repz
mov
xchg
out
cmc
gs
mov
and
dec
or
mov
xchg
out
out
cmp
push
jb
ljmp
int
es
lcall
xor
rolb
push
add
adc
push
mov
jle
vpsubw
insb
divl
addl
xlat
ret
xor
or
cmpsb
idivl
push
sub
stos
mov
cmp
jmp
fisubs
mov
jae
sub
jne
gs
jmp
lahf
push
clc
js
jae
sti
adc
jo
xchg
test
add
mov
push
bound
pop
xorl
dec
xor
jp
pop
cmp
xor
daa
push
mov
push
ja
dec
pop
sbb
xor
inc
mov
movsl
movsb
xchg
cmp
or
decl
scas
dec
pop
aam
add
jo
fldenv
sbb
lahf
mov
xchg
jnp
insl
xor
inc
movsl
shlb
ret
pushf
jge
inc
cwtl
les
sub
ret
std
test
movsl
enter
js
mov
push
fldt
sub
push
sbb
mov
jns
xorl
aam
stc
cmpsb
or
inc
shl
inc
pop
mov
stc
add
push
lret
xchg
in
out
inc
dec
push
dec
cwtl
xchg
or
test
push
sub
xor
jle
ss
iret
mov
cld
mov
mov
or
scas
mov
jb
mov
dec
ss
inc
pop
jecxz
nop
arpl
push
sub
add
bound
add
mov
mov
or
adc
addr16
movsl
aaa
popf
in
adc
stc
pushl
inc
pop
xchg
push
and
and
push
pop
pop
stos
jne
xor
adc
sbbb
fsts
hlt
mov
lds
cltd
adc
test
clc
adc
pop
outsl
dec
xor
jns
lods
dec
outsl
mov
cpuid
mov
lcall
hlt
cld
push
hlt
nop
pop
mov
call
and
add
jae
mov
aad
mov
dec
inc
ljmp
mov
and
cmp
shl
and
mov
ljmp
inc
cmp
aaa
add
rcrl
iret
sbb
mov
add
push
jns
lods
sbb
aad
rol
or
xchg
dec
outsl
ja
jl
test
ret
daa
std
dec
inc
push
add
shl
mov
inc
sbb
or
repnz
imul
adc
adc
bound
xchg
test
sub
test
dec
and
stos
mov
outsb
adcb
mov
lods
insl
mov
push
orb
es
test
add
or
stos
mov
repz
push
mov
cwtl
jbe
out
or
cmc
xchg
add
ljmp
cmp
xor
inc
jecxz
mov
jle
das
pop
jb
push
pop
mov
mov
stos
mov
and
ds
sbb
pop
aad
incb
out
jecxz
jp
xchg
test
xor
and
rorb
adc
pop
xor
push
mov
mov
inc
xchg
jge
pop
push
ret
mov
push
adc
cmpsl
jne
repz
mov
es
pop
js
jne
movsb
or
dec
je
sub
xchg
jmp
lods
out
sahf
pop
mov
sbb
mov
push
mov
adc
pop
test
cltd
rorb
jne
fdivp
add
mov
add
stc
pop
mov
jp
sub
leave
mov
jns
popa
nop
xor
mov
ficomps
pushf
push
jne
hlt
pop
fmul
lock
je
js
inc
sbb
lcall
ret
nop
jl
sbb
nop
mov
mov
lock
les
shrl
ljmp
mov
scas
inc
cwtl
xlat
sbb
pop
dec
pop
movsl
adc
and
fidivl
int
add
sub
ret
leave
cs
sub
xchg
pop
inc
mov
test
ds
ret
mov
lock
sbb
pushf
das
sti
mov
pop
mov
pop
iret
andps
sub
xchg
xchg
jae
or
sbb
dec
jp
scas
mov
call
mov
xor
iret
ja
fs
adcl
jbe
fcompl
and
xor
jo
fsubr
mov
xlat
or
push
shl
mov
push
push
testb
fwait
mov
sti
xor
add
xlat
dec
adc
sbb
fsubs
push
mov
fmuls
mov
in
imull
pop
dec
outsb
rclb
dec
inc
jp
les
xchg
iret
dec
xor
sahf
push
int
inc
and
fnstcw
push
pop
jmp
and
inc
jno
aam
cmp
stos
lahf
aam
fildll
inc
jecxz
dec
fcoml
sarb
scas
sbb
mov
mov
movsb
mov
push
xlat
add
ljmp
ror
scas
lods
mov
scas
movsb
test
push
cmp
dec
push
popf
aas
sbb
inc
push
push
cmp
mov
add
xor
es
daa
cmp
fsubp
sbb
xchg
inc
pushf
lods
mov
sub
call
inc
mov
fs
mov
jmp
xor
lods
dec
sti
mov
fabs
pop
lret
xor
iret
cmp
push
push
add
mov
pusha
loop
jmp
add
push
adc
sti
popf
xchg
mov
insl
sbb
stos
lret
sbb
data16
push
jle
fmuls
sub
mov
lock
stos
aaa
mov
aaa
adc
out
lds
push
in
dec
arpl
sbb
es
in
test
sub
pop
scas
in
loope
sub
push
or
pop
scas
mov
int3
mov
in
gs
mov
cmpsl
pusha
jle
or
and
push
xor
int3
shl
bndstx
sub
mov
loopne
pop
fwait
or
sub
or
fisubrl
sub
daa
pop
dec
subb
movsb
mov
push
push
nop
push
aad
out
push
push
pushl
adc
aad
imul
nop
sub
adc
imul
imul
push
stc
cmp
popa
add
cltd
mov
cmp
gs
inc
and
aaa
pop
and
loopne
or
fsubrs
pop
ficompl
test
das
imul
mov
fwait
push
imul
add
mov
sbb
or
mov
push
bound
inc
push
fistps
dec
mov
out
sub
jo
mov
xor
and
scas
xlat
or
notl
xor
cmp
lock
push
call
jecxz
shll
lahf
in
insb
fdivrs
add
pop
mov
loope
mov
dec
outsb
xadd
sub
leave
and
xor
cmpsb
sub
orb
pop
out
inc
mov
adc
push
pushf
push
cmc
push
cmp
mov
mov
dec
jl
jle
aam
adc
out
adc
scas
je
pop
rcll
in
mov
fldenv
movlhps
or
jl
pushf
cld
dec
push
sub
mov
pop
xchg
out
outsl
xchg
sbb
mov
test
cltd
cmc
xchg
jl
dec
cmp
mov
sub
test
jmp
movsb
lahf
popf
fimull
or
mov
xchg
xorl
movsl
mov
rclb
pop
push
jmp
push
inc
daa
pop
hlt
ja
jmp
das
cwtl
mov
stc
ljmp
mov
lea
test
jne
sub
push
in
mov
inc
ret
pop
sbb
into
xchg
test
xchg
fstpl
std
lahf
shll
or
push
xchg
subb
and
mov
mov
sti
lock
xor
test
cmpsb
jg
test
jb
arpl
or
fisttps
mov
or
cmp
lret
mov
js
mov
push
shr
mov
out
mov
aas
shl
pop
stos
pop
into
xor
pop
and
fdivrs
insb
mov
in
jle
jb
and
sub
cltd
mov
mov
dec
jecxz
jl
ds
popa
pushf
push
pop
push
jp
mov
xor
pusha
or
xor
inc
cli
fiaddl
mov
push
add
jle
std
xchg
push
cs
cmpsl
adc
mov
adc
dec
fisttps
fs
sub
je
repz
ret
jg
in
mov
cmc
xor
cmp
ljmp
test
dec
inc
add
sub
into
push
or
jnp
mov
mov
lret
push
movzwl
test
mov
or
movsl
lahf
ja,pt
add
jge
outsl
adcb
sbb
xor
mov
jmp
cli
lds
je
pop
or
dec
adc
in
filds
mov
jecxz
lahf
push
andl
in
int
mov
inc
sti
stos
std
push
outsl
icebp
pop
pop
data16
in
xor
lods
in
and
es
das
lea
xchg
mov
test
mov
pop
add
lahf
cmc
icebp
mov
icebp
xchg
jns
jae
test
pop
in
xor
adc
dec
pop
xor
push
pop
lahf
ja
and
ja
xor
pop
xlat
pop
pusha
cmp
or
xor
or
divl
fwait
test
movsl
xchg
push
mov
dec
bound
cmp
mov
mov
loope
movsb
int3
stos
fdivrs
lret
repz
xchg
sbb
jg
jge
jge
mov
xor
mov
add
mov
push
sub
mov
inc
int
fwait
mov
push
xor
add
test
sub
sub
outsl
aam
mov
pop
fs
push
xorl
jle
sbb
mov
mov
rcl
mov
cmp
shlb
fsubrl
in
addr16
into
inc
in
arpl
mov
les
loopne
mov
jno
xchg
xchg
cmc
sub
lea
mov
iret
dec
fstpt
jl
hlt
jne
mov
scas
cmp
aaa
dec
shll
push
jge
xchg
cli
icebp
ret
std
xorl
pop
outsb
or
adc
sbb
fidivrs
icebp
inc
or
sbb
inc
outsb
push
maxps
in
inc
int
test
pop
xor
xchg
push
push
cs
mov
cmpb
fwait
punpckhdq
cmc
push
or
jmp
mov
push
inc
sti
xchg
fildl
add
stos
pop
xor
sbb
fimuls
fisubrl
and
mov
cmpl
push
cmpl
dec
movsl
xchg
in
pop
out
aam
fmull
in
fst
and
fs
cmp
and
dec
mov
push
push
xor
sub
ds
xchg
mov
mov
and
sub
popf
int3
mov
sbb
cmc
sbb
je
shll
mov
stos
data16
sbb
jle
decb
pusha
jbe
mov
sti
pop
mov
movsl
adc
xchg
shlb
push
sub
fistl
or
sbb
jae
xchg
inc
cmp
mov
push
add
push
sub
lods
or
push
cltd
xlat
mov
jmp
iret
in
fs
sti
bswap
xorb
xor
add
in
xchg
imul
sahf
push
mov
xchg
lock
mov
mov
fsubrs
stc
adc
inc
xor
cmpsl
adc
push
nop
push
or
cmp
outsb
jl
outsl
mov
mov
out
fsqrt
movl
shlb
scas
fisttps
push
sbb
push
and
xor
cmp
aaa
scas
add
in
stc
dec
imul
sub
pushl
xchg
lock
adc
mov
lds
lea
fisttpll
pop
popa
and
mov
daa
mov
lock
call
mov
int3
ret
jo
sub
sti
pop
mov
jl
lret
mov
rcrb
mov
aaa
push
sbb
ficoms
xor
rolb
mov
cmp
add
adc
mov
mov
int
cmc
and
ret
xchg
imul
iret
cmp
rorb
mov
mov
mov
inc
mov
clc
ss
adcb
subl
out
dec
sahf
cs
xor
fs
push
cmp
cmp
sub
mov
dec
adc
ds
or
adc
lods
add
pop
cli
je
mov
sti
in
jb
es
orl
in
outsb
inc
pop
mov
pop
xchg
xor
fcomp
test
pop
fstl
addr16
xor
subl
pop
test
div
jne
push
xchg
cwtl
xorl
xchg
mov
push
aaa
push
addr16
or
cli
dec
sti
jmp
xchg
mov
scas
ret
lods
jle
jno
cmc
or
cli
lods
pop
pop
xor
mov
data16
jg
jl,pn
sub
fdivrl
sarb
loop
xchg
imul
mov
mov
arpl
insb
xor
neg
jge
inc
shl
pop
int3
dec
mov
inc
mov
pop
jecxz
pop
lods
les
sub
lea
repz
dec
int
lea
xchg
mov
adc
push
xchg
mov
sar
in
inc
outsb
into
cs
xchg
lock
cld
cwtl
jo
cmc
push
pop
mov
or
pop
mov
push
popa
vmwrite
adc
imul
cmp
adc
mov
adc
inc
push
add
adc
jmp
cmc
and
out
lret
in
mov
jmp
push
sbb
pop
cmpxchg
mov
out
fildll
inc
jmp
and
sbb
imul
sub
add
cmp
and
scas
in
xchg
jae
dec
testb
sti
sahf
outsl
ja
stos
mov
and
mov
mov
add
cltd
insl
jg
bswap
adc
out
jg
mov
inc
bound
mov
jecxz
xor
sbb
push
adcb
lahf
std
cmp
xchg
and
fcmovne
sbb
or
mov
into
testl
adc
mov
or
fistps
fadds
sbb
shl
mov
mov
sar
js
jle
mov
test
mov
inc
sub
into
mov
and
mov
or
or
xchg
es
aas
lods
add
pop
sbb
push
scas
shlb
cmc
ds
fsubrl
in
xlat
push
jae
js
xchg
stos
ror
nop
push
pusha
pop
icebp
cld
imul
adc
scas
mov
mov
xchg
mov
js
jo
sbb
lods
and
test
lea
dec
adc
in
push
loop
repz
cmp
fldcw
mov
xchg
jmp
test
jno
cli
sti
jl
inc
lea
jecxz
lock
imul
sub
dec
in
mov
mov
cs
adcl
rorb
xlat
jo
and
or
imul
dec
push
and
jge
mov
push
jne
pop
test
jp
lds
xor
ljmp
xchg
adc
adc
sub
xor
add
cltd
sub
loop
iret
bound
or
pop
push
adc
js
inc
popf
movl
ja
fdivrp
adc
adc
ret
cs
test
sbb
sub
push
adc
mov
jae
pop
xor
int
in
in
dec
and
jns
ss
subl
mov
mov
mov
and
add
mov
divl
enter
or
push
adcl
test
sbb
inc
jp
cs
mov
mov
mov
jmp
test
mov
aam
sub
inc
les
adc
push
ffree
loope
xor
enter
aad
xor
push
out
lahf
dec
inc
imul
mov
lds
sub
push
add
xchg
add
lret
adc
ds
shr
jp
clc
jmp
push
push
xor
fsubs
and
inc
cmp
fmull
push
loop
dec
jecxz
xchg
movb
fmull
lods
mov
ds
rcll
ss
cmpsl
xchg
sbb
shrb
xor
ror
pop
es
xor
je
cmp
mov
sub
dec
test
mov
into
shrl
mov
mov
divl
pop
repnz
clc
iret
xchg
daa
in
daa
test
repnz
jge
or
cmp
mov
jp
lods
add
fstpl
adc
repnz
pop
xchg
push
ficomps
jp
cli
adc
dec
xor
sub
xchg
add
cmp
jmp
pop
jnp
pop
sub
adc
repnz
je
rorl
loopne
push
add
push
add
lcall
out
rcrb
mov
cld
aam
push
cli
and
xor
sub
sbb
mov
divb
and
mov
imul
jge
pop
add
adc
xchg
rcrb
mov
insb
mov
shl
clc
ret
inc
insl
mov
sti
mov
adcl
dec
nop
lcall
insl
dec
dec
sub
ss
std
mull
and
mov
lret
xchg
sub
stc
iret
jge
sub
push
out
adc
inc
out
mov
arpl
scas
adc
dec
mov
pop
aam
leave
sub
jns
in
mov
call
fnstenv
sti
les
ljmp
jno
lds
shrb
loopne
pop
inc
adc
jo
xor
and
add
push
push
lds
imul
inc
xor
xlat
adc
jle
sub
adc
cmp
cmp
adc
adc
pop
loop
jle
inc
loopne
cli
push
icebp
fadds
jns
into
sbb
stc
stos
or
inc
push
dec
lods
mov
xor
mov
test
scas
push
outsb
int
jb
insl
clc
call
jmp
fcoml
xchg
rolb
xchg
mov
and
xchg
cmpl
stos
negb
rorb
std
push
or
iret
push
add
mov
jp
inc
jge
sbb
movsl
sub
aad
push
test
loop
dec
lds
cli
add
scas
mov
xchg
ljmp
roll
xchg
outsb
repnz
jge
in
push
pushl
aaa
bound
bound
insb
pop
and
dec
pusha
xchg
cmpsl
ja
fptan
adc
pop
push
jmp
rcr
pop
scas
xchg
insl
inc
mov
push
inc
sbb
out
pop
data16
rcl
out
sub
repz
fsub
lds
mov
sbb
pop
mov
xchg
loop
jle
pop
mov
sti
mov
andl
push
imul
push
les
aas
xor
push
insl
jnp
xchg
or
mov
ljmp
int3
fadd
stc
jp
cltd
imul
mov
cmpsl
jae
clc
movsl
pushf
out
jnp
adc
add
pop
aam
daa
add
call
jmp
pop
xchg
add
pop
inc
adc
popf
xor
xchg
mov
push
ja
scas
std
sbb
aaa
jae
ja
mov
js
mov
stc
push
fwait
jae
lea
adc
mov
cmp
jb
in
mov
and
int3
push
inc
pop
addr16
fidivl
sub
hlt
icebp
incb
adc
or
adcl
in
inc
outsb
pop
lea
mov
mov
jle
mov
sbb
mov
sbb
lods
or
call
cmc
in
sbb
stos
in
sahf
xor
jae
cmp
aad
and
sbb
lods
jp
jle
ret
xor
int
scas
mov
sbb
inc
cmp
xchg
add
loop
dec
mov
out
xor
or
pop
jo
ds
push
arpl
incb
test
xchg
in
sbb
xchg
arpl
fists
out
mov
sbb
push
mov
mov
clc
pop
xchg
and
call
cs
jae
hlt
in
in
add
sbb
xchg
bound
mov
arpl
popa
es
pop
cmpsb
aad
pop
xchg
mov
push
stc
popa
push
stos
jns
pop
cmp
dec
int3
xor
xor
lock
xorl
cmpsb
jo
xor
push
mov
cs
mov
subl
xchg
xor
mov
lock
into
dec
aaa
fdivrs
or
pop
addl
outsb
jnp
out
in
add
loope
pop
xchg
xor
xchg
repz
lcall
lock
push
sub
push
xlat
sbb
clc
and
jb
orl
dec
clc
fadd
outsl
cs
push
jne
es
ret
pop
or
xor
xlat
out
je
pop
push
fsubs
lods
mov
xchg
xchg
xchg
xchg
add
xchg
jle
sbb
incb
shll
and
cmp
adc
out
xchg
pop
and
mov
or
leave
adc
inc
dec
sub
jo
ficoml
jns
xor
insb
testl
pushf
negb
ss
imul
and
lods
loop
push
mov
pusha
std
je
xor
adc
in
loop
sbb
mov
xchg
mov
int3
cmp
inc
insb
addr16
daa
push
mov
pop
pop
xchg
mov
cmp
cwtl
xchg
fwait
push
shll
popa
push
out
enter
ror
mov
mov
xchg
out
int3
dec
test
aas
sub
cmpsl
mov
push
add
je
push
out
mov
dec
repz
jns
push
inc
cmpsl
push
sar
mov
inc
outsl
fistpl
cli
mov
outsb
mov
cmpsl
stc
shlb
sahf
jl
adcl
mov
rorl
test
lret
mov
std
cli
jnp
push
sub
mov
jg
and
cmpsl
mov
adc
mov
and
xchg
cmp
ret
test
mov
imul
pop
pushf
jge
jl
push
pop
jno
xchg
shrl
inc
mov
test
outsb
dec
inc
dec
out
inc
pop
mov
mov
sub
pushf
pusha
pop
mov
pop
cmp
fisttps
push
jno
stos
dec
jae
mov
ljmp
lret
stc
push
dec
dec
inc
lds
dec
fnstcw
inc
daa
insl
or
mov
imul
cmp
testl
pop
popf
outsl
jl
cld
les
xor
rcrb
jge
adc
mov
push
test
scas
sbb
sbb
mov
mov
pop
or
mov
push
inc
enter
sbb
xor
or
push
cmp
stos
jmp
push
icebp
fwait
cmpsb
xor
push
xchg
sti
test
push
sbb
lcall
lds
insl
dec
mov
mov
ds
mov
mov
sub
mov
enter
mov
and
sbb
sbb
cmp
jno
lods
nop
xacquire
inc
stos
sub
add
xor
leave
cmp
dec
cmpsb
ljmp
test
aaa
insb
clc
jae
mov
pusha
rol
sbb
cmp
cmp
sub
sub
mov
icebp
cs
aas
jl
insb
enter
cs
xchg
mov
mov
ror
jge
mov
push
pop
mov
and
push
lods
cmpsl
cli
cltd
sub
xchg
movsb
sbb
adc
jecxz
mov
cmc
popf
mov
jo
shll
int3
dec
and
pop
imulb
dec
les
lret
outsb
in
jnp
mov
push
loop
mov
daa
jp
mov
repz
cmp
fstl
test
gs
je
pop
js
sbb
xor
les
add
xchg
orb
or
dec
mov
push
popa
insl
cs
lock
cmp
leave
xor
in
enter
lret
out
jns
dec
aas
shrl
scas
add
push
or
adc
sub
mov
into
popf
rcrl
ficompl
rorb
sbb
mov
inc
sbb
repz
les
push
cmp
lcall
sti
adc
scas
out
jnp
inc
push
insb
or
dec
jmp
add
add
mov
loope
lea
xor
insb
jb
jnp
cld
xor
xor
insl
adc
fildll
loope
sbb
dec
lcall
push
leave
les
sbb
outsb
fisubs
ljmp
decl
shll
and
lea
xchg
mov
push
push
imul
bound
pusha
lret
repz
rcll
lahf
in
mov
or
repnz
sbb
mov
movsb
hlt
cltd
mov
adc
test
xor
xor
pop
xchg
mov
mov
leave
scas
into
loop
outsb
jl
inc
stc
js
xchg
aam
lret
and
pop
stos
jg
divb
jecxz
leave
mov
sub
hlt
lcall
jmp
in
add
mov
roll
btc
dec
lods
in
mov
xchg
dec
cmpsb
out
mov
xlat
test
addb
test
xchg
cltd
stc
push
cmp
repz
test
fimuls
push
jle
dec
cmp
xchg
jge
and
jl
mov
xor
sub
imull
cmp
mov
mov
sbb
adc
imull
mov
in
repz
cmp
or
cmpsb
push
pop
adc
inc
mov
push
or
inc
push
in
icebp
sub
sub
pusha
cltd
jne
push
adc
inc
clc
dec
mov
imul
xor
mov
jmp
cltd
int3
and
dec
cmp
xor
lock
jge
jnp
or
xchg
shl
hlt
lea
in
push
ss
mov
icebp
and
or
or
or
mov
jg
xlat
mov
lock
inc
popa
sbbb
jmp
ja
adc
arpl
dec
rorb
jl
icebp
mov
into
popa
ret
jl
pop
ffree
mov
les
dec
gs
fisubrl
and
leave
ljmp
or
scas
out
dec
add
or
sbb
popf
mov
scas
dec
pop
int3
inc
push
lea
mov
and
sub
push
lock
mov
pop
jge
jg
fadds
fistpl
jo
fisttpll
aas
add
fisubs
push
mov
mov
sub
pop
and
arpl
fs
mov
add
push
push
jnp
shrl
ja
inc
xchg
mov
xchg
subb
sti
cmp
cwtl
out
addr16
insl
pop
mov
dec
jg
ja
loop
je
xchg
mov
dec
or
push
jo
add
loop
je
adc
fidivrs
pop
xchg
out
ss
incl
xor
adcb
xor
shl
dec
inc
scas
aad
jae
mov
jnp
aad
lahf
test
fnstsw
daa
push
add
dec
imul
xchg
repz
push
nop
ret
lret
jnp
sbb
mov
test
ljmp
andl
mov
insl
fnstcw
int3
push
jge
ss
sub
sbb
adc
imul
fidivl
in
or
sbb
cs
cmp
sbb
jecxz
fsubl
xchg
sbb
aam
fisubrs
jb
fsubs
inc
in
daa
out
inc
cmpsb
imul
int
jbe
mov
fbstp
mov
daa
sbb
clc
push
push
xchg
cmp
std
in
lcall
add
cmp
mov
lahf
cmc
outsl
jno
xchg
pop
mov
std
popf
jae
cmc
push
pop
or
mov
cmc
and
inc
mov
adc
pop
push
lcall
cmpsl
push
and
xor
mov
cld
pop
out
lahf
xchg
hlt
inc
andl
push
imul
inc
push
and
push
xor
cwtl
fnsave
lahf
inc
lahf
in
enter
dec
div
push
sti
sub
and
dec
add
jae
arpl
sub
jno
lock
lcall
loopne
mov
rcrl
xchg
pop
and
stos
int
push
jae
add
mov
add
mov
pop
add
aaa
arpl
mov
div
es
out
cli
xor
xor
jo
and
loop
daa
aad
xor
sbb
push
ljmp
dec
loope
or
out
scas
sub
in
mov
outsl
in
clc
mov
clc
decb
pop
lds
dec
shll
popf
cmpsl
aaa
mov
cld
imul
icebp
fsubrp
shlb
leavew
inc
in
push
xchg
fbld
test
add
push
cmp
sub
lods
jle
add
movsl
dec
iret
inc
jb
test
pop
enter
rolb
or
pop
rcrl
insb
ss
mov
xlat
push
xchg
sbb
inc
aad
or
lret
ret
bswap
push
dec
xchg
fcmovbe
or
jns
fmulp
and
xlat
dec
sbb
jp
hlt
mov
xchg
pop
xchg
and
or
adc
stc
lds
inc
sbbl
bnd
mov
pop
mov
mov
xchg
mov
cmp
and
test
or
mov
inc
pop
pushf
push
add
cs
sbb
add
jnp
outsb
cmp
in
or
imul
outsl
rcrl
shr
pushf
bound
and
xchg
mov
clc
lods
push
xor
sar
add
into
mov
js
pop
mov
aam
out
cmp
and
mov
push
pop
mov
pop
cs
in
push
loop
sti
add
mov
and
jp
dec
mov
xchg
mov
cmp
mov
adc
imul
icebp
testl
cmpsl
or
sub
insb
xchg
pop
mov
ret
inc
pop
movsb
push
pop
dec
popa
imul
stc
add
stos
mov
dec
nop
cld
leave
scas
mov
push
loopne
stc
jns
fdivl
mov
sarb
mov
adc
jno
xchg
add
adc
imul
push
sbb
mov
out
out
jmp
push
jg
js
in
enter
bound
xchg
pop
lock
jmp
test
cltd
sbb
xlat
mov
loope
cld
lock
push
xchg
mov
xor
and
fwait
add
push
adc
clc
stos
enter
push
outsb
aad
push
sub
inc
aas
aaa
xor
cmp
or
cmp
jecxz
lds
addr16
loop
cmpsb
lcall
icebp
push
pop
add
fsubs
xor
mov
test
dec
jne
xor
enter
xchg
pop
inc
test
dec
es
outsl
jb
fidivl
add
lea
xchg
xchg
ret
cwtl
dec
push
push
xchg
jns
inc
imul
push
xchg
mulb
imul
inc
jle
test
inc
and
jmp
sti
icebp
fimull
test
pop
cmpsb
xor
sbb
push
adcl
lods
lahf
dec
arpl
roll
sub
mov
dec
mov
adc
mov
sub
mov
jo
inc
call
xor
and
loop
and
ret
push
outsb
cli
xchg
notl
sbb
stos
outsl
aaa
sub
inc
cmpsl
mov
andb
xchg
jge
orb
pop
pop
lock
mov
xor
cmp
dec
cmpb
xchg
jecxz
das
sahf
jge
xchg
pusha
adc
lea
xor
or
push
or
imul
jbe
mov
mov
aaa
aad
jg
cmpsb
lds
int
arpl
dec
adc
mov
nop
pop
jae
pusha
in
ret
and
dec
xchg
inc
or
dec
inc
mov
xchg
push
shr
enter
pop
les
ja
push
std
lods
sti
jns
sub
jne
adc
xchg
in
mov
mov
lds
and
and
mov
lcall
scas
dec
lds
xor
xor
sbb
sbb
jae
mov
sbb
adc
pop
cld
add
add
dec
xor
rcll
push
jo
mov
cltd
jg
pop
stos
xchg
jl
mov
sub
cs
adc
scas
ja
dec
imulb
push
or
jae
pop
push
movsb
test
inc
pop
mov
mov
and
push
mov
cmp
sub
xchg
cmc
fcoms
js,pt
add
push
les
mov
jl
aas
in
xor
loopne
sbb
test
lret
push
gs
dec
lods
mov
aas
cli
hlt
dec
pop
jmp
add
movsl
mov
bound
fwait
test
out
mov
dec
es
or
notb
es
lahf
daa
ficoms
hlt
push
in
out
jb
mov
dec
into
nop
fwait
imul
stc
sbb
lret
mov
arpl
rol
jae
mov
faddl
rcr
pop
or
cltd
clc
mov
mov
cmc
adc
jmp
jnp
out
leave
xchg
add
ljmp
jns
loopne
xor
push
cmpsb
cmp
and
xchg
cli
out
outsb
jno
mov
xlat
pusha
aaa
cmp
fwait
and
outsl
aam
jne
jae
lret
push
pop
pop
pushf
inc
loopne
lods
add
mov
add
jb
xchg
orb
add
cmpsb
push
js
add
cmpsb
jno
in
jo
out
popf
cltd
stos
outsb
sub
imul
pop
mov
push
add
pushf
mov
inc
jmp
pushf
aam
xor
fwait
pop
jno
push
popf
xchg
mov
push
loopne
push
or
mov
lret
jno
mov
cmc
in
in
jne
mov
xchg
dec
adcb
in
or
adc
mov
sti
push
gs
in
xchg
jae
sarb
add
int
aaa
mov
sbb
shll
push
mov
adc
xchg
or
int3
or
xchg
mov
in
fwait
lock
popl
mov
addl
aas
adc
dec
cmp
inc
pop
call
xchg
fs
pop
clc
test
add
sub
into
pop
loop
cmc
mov
add
add
and
arpl
aad
adc
fiaddl
sub
jbe
push
jmp
adc
pop
adc
idivb
in
add
nop
cmpsb
ja
insl
xchg
push
imul
shrb
mov
rcrb
jge
and
xchg
and
cld
rorb
insl
call
scas
sub
dec
xor
mov
int3
cmpsb
jge
nop
outsl
sahf
je
adc
xchg
mov
test
inc
sbb
das
int3
loopne
loope
ds
mov
js
dec
into
push
sbb
pop
mov
out
ficoms
xlat
in
push
pop
xor
movl
dec
lods
out
ret
outsl
cmp
mov
cmpsl
lcall
stc
sbbb
fs
jbe
stos
sbb
mov
jb
std
xor
xchg
stos
lahf
inc
pushf
jge
xchg
inc
jo,pn
pop
jp
mov
push
push
mov
pushf
cmpsb
add
xor
xchg
test
jae
fistl
jbe
cmp
cmp
iret
fnstcw
adc
out
sbb
inc
loopne
rorl
push
imul
cmp
push
insl
jp
fs
mov
add
js
push
sbb
sub
cmp
les
or
aas
sarb
pop
mov
dec
int
cmc
inc
mov
xor
sbb
jns
cmpsb
xchg
sbbl
addr16
out
mov
cmp
pop
jno
inc
lods
stc
mov
adc
jmp
sbb
into
rcl
repz
push
adc
sarl
test
mov
flds
jl
adcl
pop
add
or
int
gs
push
ljmp
adc
ret
clc
push
mov
cmp
push
dec
dec
add
cli
cwtl
lcall
sbb
pop
sbb
fsubl
dec
popa
sbb
pop
out
mov
or
cmpsl
add
je
or
push
fdivl
fsubrl
adc
sbb
pop
aas
and
hlt
lret
ffree
sbb
xchg
sbb
pop
pop
mov
pop
cmp
scas
ret
push
sub
adc
lods
divl
adc
fcom
int3
sti
push
inc
outsl
push
dec
and
sbbb
jle
xor
faddl
mov
sub
sub
mov
fs
sbb
sub
nop
lods
cmp
add
bound
ds
popa
std
jno
cmp
mov
fdivrp
sbb
mov
divl
je
lret
adc
xchg
cmp
mov
sbb
jmp
sbb
pop
xor
pop
jecxz
inc
insb
or
lock
fnsave
push
xor
xor
pop
out
xchg
or
loop
xlat
push
bound
fistl
or
jnp
cwtl
mov
jnp
fisttps
insb
mov
fisttpll
mov
lods
shll
jge
xchg
pop
imull
mov
mov
movsb
aad
inc
mov
rclb
orl
movsl
sub
cld
pop
test
jg
mov
and
out
cwtl
and
push
lret
repnz
fdivr
decl
hlt
out
jecxz
movd
xchg
adc
pop
push
mov
test
sarl
sub
mov
fucomp
arpl
and
cmp
jecxz
sub
or
pop
inc
or
cmp
sbb
adc
fs
mov
mov
dec
scas
test
js
mov
fbstp
testl
dec
data16
fs
imul
outsl
jno
jle
out
push
inc
fsubp
jl
das
out
icebp
repz
scas
imul
movsl
mov
mov
push
jp
subl
out
pop
jns
mov
inc
out
ja
cmpsl
aad
mov
mov
adcb
adc
icebp
and
xchg
pop
fbstp
mov
or
popf
aaa
shll
out
and
dec
pop
xor
mov
clc
mov
cmp
mov
das
jmp
sub
jb
insl
mov
push
insl
test
insl
mov
lcall
movsl
outsb
sub
js
mov
add
cmp
adc
mov
xlat
xchg
test
cs
xchg
xchg
push
push
inc
push
sbb
add
xchg
inc
pop
jl
jbe
mov
popf
mov
adc
jo
pop
inc
lcall
lcall
push
pop
adc
mov
add
fmuls
imul
mov
pusha
outsb
cld
adc
addr16
mov
cld
ret
inc
inc
popa
fwait
jg
xor
adc
stos
repnz
rclb
mov
and
shrl
push
stos
add
pop
mov
out
xchg
push
xlat
and
movsl
pop
mov
loop
push
iret
xor
cmpsl
cwtl
xor
dec
xchg
addr16
sub
rolb
out
scas
push
jmp
ficomps
pop
hlt
cmp
sbb
mov
adc
roll
negl
mov
or
xchg
fstps
fs
adc
sbb
je
or
adc
movsb
sub
mov
repnz
repz
in
jecxz
addr16
inc
jmp
loope
jp
clc
aas
orb
aad
and
ret
mov
pop
pop
outsl
addl
inc
xchg
cmp
fists
aas
dec
lea
xchg
stc
fistpll
in
pop
gs
push
jl
loop
stos
sbb
jp
les
push
imul
jg
or
rcrl
jo
inc
mov
add
jmp
dec
and
sar
cld
pop
outsb
pop
mov
gs
dec
add
aaa
dec
mov
jg
cmc
cwtl
xlat
dec
and
dec
pop
bound
nop
jnp
xor
das
nop
sbb
mov
push
jg
pop
hlt
mov
or
ret
and
xor
ret
movsl
loopne
add
add
dec
sbb
sbb
lds
repz
cmp
jae
mov
faddl
dec
movhpd
mov
jle
dec
pop
dec
sub
jb
cwtl
fs
fstpt
stos
xchg
mov
decb
addw
scas
or
das
mov
cmp
test
or
add
and
fcmovu
push
cs
pop
jp
push
inc
cs
push
fisttps
add
lcall
icebp
mov
push
cltd
out
mov
in
ror
xlat
mov
out
lcall
fldt
jp
adc
stos
inc
push
shrb
jp
fwait
or
dec
jae
cmp
xor
ret
xchg
push
jae
or
in
and
movsl
xor
inc
fwait
hlt
pop
xchg
push
imull
mov
cmp
xchg
sbb
subb
xchg
push
leave
sbb
insl
push
dec
out
ret
push
xor
nop
icebp
adc
arpl
push
mov
orb
repnz
xor
dec
mov
shlb
push
xor
xor
cs
arpl
cmp
dec
pop
pop
nop
das
popa
lods
outsl
xchg
inc
push
andb
ficoms
sahf
jo
jecxz
xchg
mov
ret
push
push
mov
insb
movsb
loope
inc
movsl
mov
fdivrp
xor
mov
sbb
and
pop
mov
add
stc
aad
adc
movsb
shrl
mov
addb
add
mov
jl
inc
and
xchg
dec
add
es
gs
jb
or
or
mov
movsb
js
sub
mov
ds
lods
push
pop
flds
movsl
popa
mov
sbb
xchg
pop
push
mov
dec
xchg
lods
in
lcall
jle
daa
cmp
dec
push
enter
cs
pop
scas
sub
rcl
dec
orb
outsb
popa
push
sub
arpl
dec
adc
adc
dec
mov
sbb
add
and
int
rcll
test
lods
xchg
xor
lahf
js
in
cld
imul
and
lret
add
lret
push
andb
popf
xchg
daa
fwait
insb
fwait
xor
jg
xor
std
aam
imul
aas
enter
sub
push
adc
das
rcl
cltd
shrb
jmp
add
mov
sbb
cmp
nop
mov
arpl
pop
lret
cmp
clc
mov
xlat
and
add
arpl
mov
add
add
mov
cltd
push
cwtl
dec
mov
mov
sahf
addl
cmp
insb
mov
pop
lret
mov
rcll
test
leave
imul
out
sub
je
xor
add
adc
sbb
outsl
fsubs
adc
daa
sbb
inc
js
das
xor
jo
shlb
jmp
into
dec
outsb
and
out
scas
push
addb
sbb
ficompl
incb
pop
insl
mov
movb
into
add
xchg
push
cmp
jg
mov
sbb
add
pushf
stc
adc
push
inc
and
pop
xlat
fsubr
push
mov
add
popa
hlt
popa
movb
loop
js
jbe
les
in
dec
call
cmc
enter
xchg
in
enter
test
dec
and
add
aas
out
sarb
fcmovne
push
popa
sub
movsl
push
jmp
push
jge
push
in
into
add
lock
lods
cwtl
addr16
push
movsl
xchg
push
ljmp
pushl
out
jns
mov
dec
sub
dec
mov
sbb
fcmovb
rep
jg
cmc
lahf
fsubs
mov
dec
lods
ss
adc
sub
adc
and
aas
xor
enter
inc
mov
inc
into
ds
stc
add
in
sbb
insb
ret
and
sti
mov
jno
gs
adc
xchg
fisttpll
ja
shrl
push
cmp
lods
je
add
cmp
adc
ja
xchg
out
inc
jb
mov
out
mov
dec
jnp
repz
pusha
mov
dec
ds
fwait
push
popa
pop
push
xor
out
dec
insb
shl
inc
sbb
add
adc
dec
cmp
es
dec
popa
shrl
nop
sbb
out
add
pop
dec
addr16
mov
jbe
fistpl
cmp
pushf
loope
fs
push
xchg
mov
push
lahf
cwtl
mov
pop
stos
sub
std
cmp
fmull
sbb
shl
imul
pop
or
mov
clc
or
sbb
enter
add
xchg
mov
sub
lret
xor
xor
dec
cmpsb
inc
cmpsl
out
sbb
jb
and
cmpsl
dec
cmp
mov
inc
jmp
and
sub
fwait
hlt
sbb
sub
inc
sub
rcl
out
punpckhbw
fs
mov
andb
and
mov
testb
insb
add
cmp
xchg
sbb
and
enter
mov
daa
ljmp
ret
push
adc
insb
push
ds
sub
dec
pop
mov
fstpt
int3
movsl
mov
jno
inc
call
scas
cmpsb
inc
jle
sub
add
sti
push
xchg
std
call
sbb
push
mov
mov
imul
add
fs
lods
test
mov
fadds
loopne
dec
xchg
imul
sbb
push
xor
pop
rcrl
das
subl
push
orb
mov
int
movd
lock
sub
aam
mov
fists
jnp
or
sub
add
pop
ja
adc
shr
push
test
dec
sti
inc
orl
sub
inc
sti
dec
movsb
or
or
clc
jo
and
push
mov
sbb
jle
inc
std
aaa
push
add
roll
mov
mov
enter
or
sub
sahf
xor
jno
push
scas
lret
mov
aam
aas
sbb
push
orb
lods
mov
sub
dec
mov
jae
and
inc
ja
fsubl
mov
mov
repz
sub
mov
inc
adc
aad
push
pop
lret
mov
into
out
leave
rcr
movsb
mov
ja
mov
rcrb
lock
inc
xchg
and
mov
xchg
lds
inc
push
dec
xchg
cmp
inc
js
sbb
ja
push
dec
pop
test
push
and
test
bound
mov
push
jge
mov
pop
cmpsl
and
pusha
add
or
cld
into
mov
in
lock
push
enter
mov
leave
sub
sbb
out
fdivrs
jmp
lock
lea
ss
jge
outsb
sahf
ss
js
lea
mov
imul
mov
mov
jmp
adc
mov
pop
pusha
lret
inc
jl
adc
mov
fldenv
xor
push
push
and
jmp
sbb
dec
call
mov
cmpsb
dec
pop
xchg
mov
inc
cmp
mov
data16
jmp
stc
mov
push
orl
lret
xlat
or
sbb
mov
or
inc
jne
repnz
mov
jbe
pop
push
pop
clc
lret
enter
xchg
jb
loop
cmp
cmpsb
push
ss
lods
das
fmull
pop
fdivrl
mov
ficoml
push
sbb
add
repz
ret
cmpsb
push
addr16
imul
int3
dec
ret
mov
lret
loop
dec
dec
jns
sub
jo
xchg
mov
pop
add
std
fwait
mov
dec
lods
jmp
test
xchg
fldcw
inc
loop
sub
fcomi
ret
mov
aam
sti
xor
fsubrl
dec
es
pop
call
jmp
cli
or
xchg
js
lret
mov
outsb
js
push
jmp
movups
cmp
out
gs
fldcw
leave
mov
adcl
push
test
js
pop
ret
outsl
movsl
jmp
xor
hlt
stos
pop
lret
test
fwait
sub
sbb
cmp
sbb
mov
jg
mov
in
incl
out
or
ds
mov
test
dec
mov
sarl
inc
xchg
or
jns
in
cmp
push
or
sub
out
cmpsl
outsl
insl
and
popf
adc
mov
fnstenv
pop
cmp
cltd
adc
loope
dec
mov
add
pop
leave
xor
cmp
out
xchg
add
xlat
clc
jmp
repnz
sbb
adc
jo
fstl
loop
push
jmp
loop
shrl
mov
adc
inc
mov
int3
push
push
mov
das
jne
mov
xor
mov
mov
icebp
mov
iret
sub
xor
mov
sub
xchg
inc
mov
rclb
leave
xchg
out
jg
in
sub
aaa
dec
push
xor
adc
jnp
xor
test
jae
add
or
test
shl
dec
das
xchg
mov
push
arpl
mov
int3
lcall
scas
loope
mov
stos
jbe
stos
add
gs
mov
push
idivb
xchg
pop
ss
leave
cmp
xor
lock
cmc
push
mov
fs
and
out
add
cltd
mov
jne
sub
test
cmp
loope
adc
rcl
mov
mov
into
test
scas
pop
push
fbld
movsb
add
ss
push
icebp
xchg
cmpsl
push
push
push
int3
movsl
les
mov
jecxz
xchg
test
sub
push
xor
fnsave
rorb
pop
testb
mov
xor
sti
mov
push
xor
xchg
andb
mov
fldl
cld
or
cmp
inc
aad
lret
sub
xor
test
lcall
push
mov
fwait
add
movsl
ds
rcll
in
mov
xor
int
stos
outsb
ret
jl
imul
lea
in
push
addr16
mov
les
pop
fs
sti
dec
sbb
insl
aas
clc
mov
loop
dec
into
jae
bound
mov
pop
stos
shlb
inc
xor
and
xchg
dec
mov
pop
in
dec
ljmp
aaa
out
fldcw
and
inc
icebp
jae
addr16
in
xor
mov
sbb
in
cmc
push
call
adc
add
rolb
ss
dec
add
lods
add
in
test
xchg
inc
inc
and
mov
lock
lret
lret
ss
jmp
mov
arpl
xor
adc
lods
mov
jb
mov
sbb
out
mov
add
gs
je
push
cmp
ret
pop
fwait
mov
rcrl
or
mov
or
ja
sbb
int3
lods
fsts
fnstcw
push
add
jecxz
outsb
xchg
jp
push
les
sbb
jl
or
je
shrl
adc
push
xor
popa
jecxz
arpl
call
sbbl
jno
inc
in
nop
inc
test
in
cmc
jno
mov
or
pop
sti
sub
popa
arpl
mov
addb
repnz
fwait
test
and
or
mov
push
and
rcll
cwtl
jo
lret
mov
mov
pop
inc
test
aas
outsl
mov
jle
push
xor
mov
jp
pop
scas
ds
leave
xchg
dec
sub
fidivl
mov
fwait
push
xlat
adc
push
std
les
leave
inc
cld
int
ss
dec
add
cli
imul
adc
sar
push
jge
cmp
lahf
int
sbb
jns
ljmp
scas
and
jecxz,pn
testl
jae
shlb
sar
push
ror
xlat
orl
jne
orl
pop
pop
lds
push
test
xor
jecxz
stos
daa
sbb
incb
sub
cli
movb
fisttpl
pop
pusha
pop
fistl
push
es
cmp
stc
int
inc
xor
push
test
xor
lods
inc
cmc
rcll
jnp
and
shr
int3
or
dec
scas
pop
pop
cld
mov
bound
push
add
fcompl
sbb
sub
jo
xor
or
add
adc
gs
sub
into
mov
or
cmpsl
test
stos
jnp
mov
mov
std
sti
jl
pop
sub
movsl
mov
js
push
or
js
push
fyl2xp1
sub
jnp
inc
pop
mov
jecxz
hlt
js
movsb
mov
rorl
xchg
mov
shr
inc
mov
addr16
insb
cmpb
iret
je
mov
add
jge
daa
or
dec
aaa
and
sbb
cli
mov
push
test
xchg
unpckhps
xor
jl
sbb
cmp
shlb
and
int
inc
daa
and
loopne
xor
sub
pushf
xor
aam
or
fildl
fwait
gs
std
std
xor
gs
ja
scas
cmpsl
push
loope
int3
pop
ja
int
push
jg
mov
cmp
loopne
push
pop
test
pop
and
mov
push
mov
push
pop
xor
jmp
mov
aas
faddl
dec
sbb
xor
sbb
in
cmp
add
jne
negb
inc
call
cmp
xchg
sarl
cmc
jg
adc
pop
cs
stos
mov
add
adc
out
sahf
out
mov
inc
dec
test
jns
out
push
adc
adc
bnd
fnstcw
mov
nop
push
mov
pop
aam
ret
in
inc
loop
jnp
dec
push
or
mov
inc
mov
imull
cmpsl
add
mov
in
mov
add
xor
insl
mov
jo
mov
and
pop
and
lods
scas
and
bound
jne
ret
inc
mov
in
cmp
addr16
and
out
shl
rclb
ret
push
adc
iret
leave
test
and
call
subb
pop
pushf
dec
jbe
mov
cli
jle
push
or
lcall
inc
cmpsb
clc
adc
lcall
push
add
ret
fcomip
dec
incl
adc
dec
push
test
push
sbb
sbb
and
mov
push
repnz
adc
push
add
into
es
and
leave
xchg
jnp
adc
jbe
iret
and
sub
ss
nop
cs
andb
cltd
out
outsb
sahf
pop
movsb
sbb
xor
xchg
data16
call
xchg
mov
sbb
bound
outsb
pusha
ljmp
pop
push
sub
adc
aas
int
xchg
mov
cmc
mov
scas
cli
jne
xchg
xor
std
xchg
sbb
enter
fwait
sbb
enter
out
faddl
into
les
inc
or
je
daa
add
dec
into
xchg
and
mov
mov
fildll
mov
adc
jmp
repnz
mov
sarb
push
pop
fistpl
cltd
push
hlt
mov
out
mov
out
jle
leave
sbb
inc
jb
jbe
fmulp
jbe
outsl
add
or
pmuludq
push
jecxz
jo
pop
jl
xchg
fisubs
jo
mov
arpl
movb
push
in
inc
lret
adc
pop
xchg
mov
das
iret
shll
sbb
cs
sbb
scas
mov
fbld
mov
nop
xor
jge
lcall
das
and
xchg
in
mov
mov
dec
roll
cs
add
push
add
jmp
push
lock
cmp
jp
dec
lea
iret
stc
aas
adc
or
ja
push
sub
sbb
sbb
inc
rcrl
jo
or
sub
xchg
gs
lret
lods
pop
cmpsl
sbb
jne
pushf
sbb
enter
hlt
ljmp
mov
jmp
push
dec
push
loope
leave
pop
scas
cmp
hlt
inc
in
push
and
mov
cmp
std
jae
mov
lods
int
mov
adc
cmpsl
adc
dec
sub
or
idiv
jl
inc
subb
rcll
xchg
xor
inc
scas
or
xchg
xchg
lcall
add
cmp
push
mov
sub
imul
ss
gs
loop
stc
dec
ds
sub
cmp
mov
fcom
xchg
mov
fwait
sub
jae
pushf
arpl
fldcw
sub
jl
adc
inc
stos
aad
jne
mov
pop
jae
add
sbb
sbb
das
ss
leave
shrb
lret
jae
xlat
jl
add
and
mov
rol
mov
inc
out
or
bnd
pop
and
test
ficomps
cs
inc
mov
popf
xchg
aas
dec
rcll
popf
jmp
cmp
sub
xchg
or
aaa
mov
add
sbb
mov
jae
testb
gs
stc
ljmp
loop
stos
int
jo
ja
out
fdivr
cmc
or
sbb
mov
fs
push
notl
insl
rorl
shrb
and
sub
xchg
push
rorb
sbb
pop
jg
xor
pop
mov
dec
inc
or
lods
cltd
ss
out
push
clc
pop
cmp
mov
push
lods
ljmp
mov
push
lds
lcall
adc
pop
cmp
xchg
into
ret
pop
push
stos
push
mov
jle
test
mov
push
jle
jae
pop
xor
dec
aam
shl
icebp
clc
mov
inc
outsb
sub
les
and
and
or
inc
shll
rcl
adc
adc
scas
xchg
rcr
mov
dec
sti
xor
and
out
addr16
iret
jecxz
mov
popa
dec
pop
xor
mov
mov
jg
mov
lods
sub
mov
and
dec
mov
shrb
jnp
jne
fistps
adc
adc
lock
sbb
out
shl
push
adc
ljmp
and
pop
fdecstp
test
bound
int3
push
jne
fwait
cmp
or
ds
lock
repz
scas
into
pop
cmp
or
test
mov
or
xor
lcall
mov
add
sbb
jno
sub
adc
inc
cwtl
cmp
jl
seta
pop
idivb
frstor
aaa
popa
fisubs
ljmp
inc
mov
lods
jns
sbb
lret
popa
lret
jg
add
loop
sub
dec
xor
sub
xor
das
push
inc
cmc
mov
xchg
int3
outsl
xchg
fstl
mov
inc
mov
cmovs
cli
dec
dec
insl
sbb
std
iret
jae
cmp
jnp
jno
xor
lahf
mov
test
sti
test
cmpsb
aas
sbb
or
lock
pop
arpl
les
test
and
mov
pushf
insl
sar
leave
lea
dec
dec
std
xchg
jnp
sub
push
add
jns
cld
mov
inc
aaa
xchg
lock
and
add
enter
stos
outsb
clc
pop
push
pop
aad
loop
mov
clc
mov
loope
mov
icebp
cmp
cmp
test
cmc
jp
hlt
cmp
aas
add
push
test
pop
sbb
nop
jp
scas
sub
inc
jne
mov
mov
xor
mov
sub
inc
xchg
and
sbb
iret
push
dec
cmpl
imul
jl
fisttpll
je
pop
xor
lods
sub
das
mov
inc
lret
cmpsb
pop
repnz
iret
sub
aam
fwait
cltd
fnsave
xchg
outsb
inc
inc
pop
xchg
repnz
xchg
scas
add
inc
cld
jo
sub
jecxz
mov
jae
or
subl
xor
or
jl
popa
or
and
mov
lock
sub
push
fsubp
inc
add
sub
data16
shl
test
mov
repnz
add
arpl
jecxz
adc
pop
lock
pop
or
fnstcw
leave
push
mov
inc
repnz
dec
nop
inc
sahf
scas
add
std
fstpt
pandn
enter
add
pop
rcpps
shlb
jns
inc
cld
scas
xchg
setnp
mov
mov
sti
mov
mov
test
fwait
and
inc
mov
mov
aam
cli
sarb
mov
ljmp
hlt
pop
in
enter
sarb
fldt
movsb
lods
mov
jecxz
and
mov
push
imul
cmp
mov
sbb
addr16
nop
js
iret
in
sub
fstps
xchg
fidivl
cmpsl
nop
adc
pop
jmp
inc
cmp
cld
mov
cmp
jo
jmp
mov
cmp
cs
rolb
sti
pop
cltd
scas
jle
xchg
out
cmp
pop
ss
fs
adc
pusha
fildll
jnp
dec
mov
jle
leave
dec
mov
in
mov
icebp
dec
sar
push
xor
lds
repz
cwtl
scas
ds
repz
jb
xchg
adc
lcall
push
sbb
add
decl
das
mov
jmp
push
add
pop
lds
mov
xchg
out
cmpsl
and
or
mov
pop
sahf
sti
data16
out
mov
mov
and
jnp
pop
daa
dec
add
mov
dec
mov
mov
mov
xlat
lcall
push
dec
inc
mov
fistpl
dec
jo
leave
jle
insl
inc
sbb
iret
insl
mov
lcall
ja
insl
xchg
xchg
pop
xchg
or
jo
leave
mov
cmp
mov
roll
push
daa
icebp
clc
cs
enter
xor
or
idivb
fmuls
imul
mov
cmp
jl
lret
push
sub
mov
cmp
setge
sbb
xchg
test
out
movb
and
aad
inc
outsl
das
sbb
sub
mov
pop
jae
in
in
and
lods
adcb
lret
push
aas
enter
mov
cmc
in
out
cmpsb
inc
pop
adc
fimull
mov
xlat
testb
rcl
cmp
stos
mov
repz
lods
jbe
push
mov
mov
pop
push
cmc
aad
in
shll
add
lret
inc
movsb
push
ret
jb
adc
sti
xlat
scas
and
scas
mul
pop
dec
das
pop
pop
outsb
jb
pop
hlt
jae
add
push
adc
pop
lcall
fcomp
adc
xchg
fsub
repz
cmpsl
lcall
fs
popa
push
mov
xor
cmpsl
insl
pop
push
xchg
ss
popf
std
inc
out
ds
push
mov
cmp
mov
es
fists
hlt
adc
cli
pop
or
ss
xchg
sti
adc
cmc
movsl
inc
and
inc
sbb
sub
ja
icebp
xchg
daa
xor
jae
inc
jmp
addr16
les
rcr
dec
xor
inc
push
gs
cltd
and
push
ds
and
hlt
int3
cmp
test
lcall
in
add
adc
mov
push
repnz
push
xor
cmp
sub
loopne
inc
xlat
xchg
shl
scas
or
mov
into
or
loop
fadds
or
jne
arpl
jae
fs
lret
cmpsb
cmc
addr16
sbb
sub
inc
das
xlat
push
jno
mov
jmp
jecxz
repz
pop
pop
scas
iret
xor
mov
cmp
adc
pop
pop
add
shrl
xchg
adc
sub
add
dec
out
cli
rcrb
dec
adc
add
cli
xchg
into
and
jno
ja
mov
pop
lret
cmc
sbb
jmp
mov
les
push
add
or
xchg
ret
pop
mov
mov
aad
sub
daa
mov
cld
xchg
mov
roll
mov
mov
mov
shlb
jl
and
ss
fisttpl
or
movsl
mov
lcall
jecxz
pop
es
imul
xor
add
push
sub
dec
xor
out
add
fistps
cmp
adc
test
lahf
cltd
aad
push
push
movsl
push
pop
cmp
xor
idivb
mov
out
test
cmpsb
in
sahf
inc
jp,pt
and
leave
cmp
mov
mov
sar
mov
fld
lahf
mov
xchg
or
push
cmc
mov
cmpsb
push
lret
push
in
mov
cmp
subl
mov
sub
test
inc
and
mov
imul
ljmp
xor
hlt
lcall
arpl
mov
jle
std
test
iret
inc
shll
mov
inc
dec
dec
testb
adc
clc
add
adc
dec
dec
mov
add
fs
xor
lret
cltd
fcoml
fs
ss
mov
or
insb
or
xor
scas
add
je
sahf
loope
and
arpl
push
adc
inc
mov
shlb
inc
inc
gs
in
int
pop
xchg
loopne
es
scas
add
push
mov
jle
outsl
mov
data16
addb
mov
pop
pusha
in
fidivs
sbb
jne
add
adc
inc
gs
out
sub
push
rcl
mov
ljmp
lds
sub
idivw
jns
mov
leave
dec
addl
sub
push
cmp
mov
and
jo
test
dec
cmc
stos
sub
daa
adc
cli
test
push
es
sar
imulb
mov
scas
dec
xorb
insl
movsl
lds
xchg
lods
and
rorl
cmp
mov
mov
pop
adc
push
fstps
inc
fisttpll
mov
mov
sbbl
mov
mov
jb
roll
mov
push
xor
js
pushf
and
add
out
stc
test
cmpsb
cmp
xchg
xor
xor
adc
xchg
cwtl
dec
jg
sub
inc
sahf
sub
mov
enter
jl
jne
inc
lret
dec
inc
cmp
adc
pop
mov
aam
in
dec
dec
enter
add
add
mov
lahf
insb
scas
addr16
mov
xchg
pop
push
pop
cmp
mov
add
loope
jns
mov
jae
outsb
in
fs
mov
xchg
push
je
jmp
pop
mov
subl
adc
dec
add
xchg
pop
dec
mov
push
or
push
icebp
int3
out
and
cmp
cmp
idiv
scas
pusha
xor
cmpsb
inc
inc
addl
testb
daa
xchg
push
icebp
dec
xchg
mov
jae
xor
xorl
sub
or
inc
pop
jns
or
nop
xor
inc
push
xor
aad
das
mov
cli
push
out
cmp
add
sub
push
sahf
adc
adc
and
les
push
aaa
pop
push
outsl
inc
mov
cmp
adc
push
add
inc
into
imul
or
add
add
mov
pop
aas
data16
out
dec
dec
out
les
movsb
push
into
push
and
push
jb
push
stos
jmp
mov
mov
push
cmp
in
pop
std
test
test
xchg
mov
test
shrb
adc
pop
addl
push
or
mov
lahf
mov
push
adc
lock
ret
ja
hlt
sbb
mov
popa
rcl
and
loope
iret
or
sub
cli
movsl
or
cwtl
jp
cltd
and
mov
arpl
cltd
cmp
and
xor
jp
and
ret
shll
dec
dec
jle
rcrb
sub
pop
fdivrl
sti
cmp
aad
xchg
add
adc
insl
mov
data16
push
jmp
ja
in
pop
mov
out
xchg
sbb
or
fcmove
xchg
and
add
shl
lcall
movsl
pop
mov
sahf
addb
test
ja
mov
cmp
hlt
fcompl
pop
cmp
je
pop
or
rclb
push
fiadds
shlb
mov
cli
dec
icebp
cmp
mov
push
sbb
dec
out
pop
out
pop
mov
add
inc
fcoms
pop
lods
pop
jb
add
dec
aaa
dec
mov
inc
mov
lds
mov
adc
pop
jmp
stc
idiv
in
or
aas
inc
push
lods
or
mov
cmp
inc
scas
cmp
mov
mov
movsb
lret
mov
adc
dec
popa
addb
inc
push
and
clc
andb
jle
xchg
ljmp
test
mov
or
cld
ja
rorb
push
sarl
mov
dec
or
cld
sub
or
jge
lock
js
test
dec
iret
add
lods
je
out
lds
sub
mov
mov
jg
add
vcvtsd2ss
lret
sbb
adc
push
aaa
stc
pop
fldenv
daa
jp
pop
imul
push
pop
mov
inc
movsb
int3
sti
xor
pop
dec
mov
loope
mov
fcmovnb
jmp
test
add
cmpsb
pop
out
lea
dec
inc
add
jmp
dec
sti
cwtl
mov
lds
fistps
outsl
aas
stc
or
movsb
iret
mov
jno
test
shlb
leave
clc
sub
mov
sti
inc
shr
mov
lods
movsb
pop
jno
adc
lods
addr16
es
neg
movlps
ljmp
sbb
jecxz
push
xor
cmpsl
jbe
pop
adcb
movsl
clc
push
cmc
jg
incb
ret
lret
mov
xor
clc
jmp
js
fucomp
sub
push
xlat
mov
sub
ret
ret
cld
repz
popa
dec
mov
sahf
data16
repz
mov
push
jle
xor
add
daa
jg
andb
adc
jbe
mov
pop
mov
jmp
rclb
jne
mov
push
stos
xor
push
push
adcl
hlt
leave
jae
ret
loope
push
inc
inc
xchg
test
adc
xlat
jne
mov
pusha
test
jmp
repz
call
shlb
loope
adc
xor
mov
xor
jle
cmpsb
jle
push
sub
fldl
pop
adc
popf
inc
pop
stos
cmp
add
in
loopne
stos
push
cmp
xchg
fimull
lcall
adc
sub
push
xchg
cld
icebp
repnz
sbb
fisubrs
sahf
in
mov
sub
mov
daa
ffreep
mov
push
ret
fiaddl
mov
lods
stos
jo
or
push
xchg
test
xchg
push
movsl
bnd
jmp
mov
or
ss
mov
cmp
jp
mov
sub
mov
pop
incl
push
or
inc
jge
xchg
aaa
addb
mov
movsb
dec
mov
inc
fst
hlt
cld
mov
adc
inc
dec
adc
fistps
inc
dec
and
push
pop
nop
das
mov
cs
stc
call
inc
daa
adc
and
lcall
xchg
jmp
repz
cmp
push
sbb
mov
aas
cwtl
out
aam
lahf
sbb
mov
dec
in
and
mov
jne
ss
dec
mov
cs
movups
jnp
pusha
ds
xchg
pop
mov
sbb
cwtl
std
aad
outsl
xor
sub
push
addb
scas
xor
jmp
jo
adc
xchg
or
and
sub
outsb
cli
arpl
or
pop
inc
outsl
in
and
cmp
dec
pop
mov
pop
sbb
in
mov
jns
popf
mov
or
mov
cmp
cld
pop
inc
aad
imul
xor
mov
fistps
xlat
mov
cwtl
pop
add
fdivl
data16
cmc
in
movsb
xchg
sub
add
test
jle
ds
xchg
xchg
pop
mov
cltd
add
mov
and
or
scas
test
shll
jae
popf
add
or
inc
pop
xorb
clc
rcl
pop
pop
fildl
xchg
fwait
cmp
mov
mov
test
cmp
or
ss
test
cld
aad
dec
test
cmp
fwait
inc
sbb
lahf
xor
push
jae
in
stc
lock
addl
rorl
pop
dec
movsl
mov
push
test
inc
mov
push
push
sub
js
jnp
cs
adc
push
inc
jb
outsl
pop
in
jle
icebp
mov
in
iret
push
jmp
test
insl
xchg
or
add
inc
shll
out
push
aaa
imul
lahf
sti
mov
pop
out
stos
mov
mov
inc
popa
pop
stos
in
jne
ljmp
mov
and
cmp
leave
test
scas
adc
insb
test
jp
loopne,pn
scas
push
push
xchg
inc
rorl
mov
xor
jo
int
add
pop
sbb
out
push
pop
cmpb
cmp
mov
mov
mov
mov
int
push
je
in
dec
outsl
mov
inc
inc
push
xor
out
jnp
fnstenv
call
sub
mov
je
jns
ss
mov
pop
cli
add
mov
push
shll
aad
scas
adc
jge
daa
repz
mov
test
ror
fmul
pushf
jno
mov
mov
aad
fs
add
lea
and
mov
or
fdivr
aam
ds
lret
jns
xor
stos
xcrypt-ofb
cmpsl
out
mov
sub
std
ret
add
in
leave
push
cmp
insb
lods
loope
mov
add
rcr
sbb
sahf
fcoms
ret
stos
out
add
jmp
sub
pop
pusha
mov
lahf
mov
js
sub
mov
lds
lret
push
xchg
icebp
scas
ja
in
adc
inc
inc
or
mov
ds
enter
outsl
inc
xor
in
in
imul
call
insb
jl
mov
pop
int
fidivl
test
add
mov
out
shl
sbb
mov
xor
or
cmp
mov
fisubrl
outsl
fwait
push
cltd
add
enter
in
mov
push
aaa
scas
std
mov
sub
aad
cmpsb
aam
mov
mov
std
fidivrs
cwtl
adc
data16
fidivrs
mov
hlt
or
and
push
adc
mov
fistl
adc
sub
popa
stos
jg
movsl
rcrl
mov
dec
dec
scas
pop
mov
add
pop
icebp
xchg
sub
mov
sbbb
dec
mov
movsb
cld
mov
das
call
rcl
daa
or
ss
cmp
jmp
add
and
sub
push
xor
sahf
mov
test
fsubl
insl
or
aam
into
pushf
mov
dec
xor
mov
jne
mov
repnz
out
pushf
movsl
add
lahf
dec
fidivrs
lahf
stos
jnp
insb
scas
sub
sub
pop
andb
int3
shlb
or
mov
push
lods
and
fisubs
xor
cmpsb
jno
pushf
push
cmc
fildll
das
sbb
inc
fadds
aas
and
mov
inc
fdiv
or
nop
sbbl
mov
and
pushf
sbb
inc
xor
int3
in
ljmp
pop
rcrl
push
add
icebp
add
jmp
jbe
jnp
ja
and
pop
scas
loope
sub
aad
insb
fbstp
stos
jge
mov
fs
ret
mov
pop
scas
inc
mov
hlt
inc
adc
push
int3
movsb
int
xor
lods
aaa
out
mov
lahf
dec
in
loopne
sub
push
arpl
push
push
das
aas
jge
sbb
pop
mov
pushf
pop
mov
push
xor
sub
bound
pusha
jge
stc
rcll
js
xchg
push
xchg
mov
cltd
int
sbb
pop
xchg
and
dec
xor
fidivrs
clc
sub
xorb
inc
xchg
clc
mov
cmpl
ror
dec
cli
hlt
daa
jb
jae
push
aas
mov
jnp
loop
sbb
sub
test
mov
push
aas
in
ljmp
mov
inc
adc
mov
cmpsb
out
cwtl
pop
or
repnz
jmp
ja
add
push
in
adc
jmp
cmp
loopne
enter
lret
pop
mov
mov
jns
add
cmp
nop
movsl
into
adc
pop
pop
mov
inc
sbb
in
push
fldenv
xchg
add
add
lcall
inc
enter
jmp
and
loope,pn
xor
jmp
imul
enter
jmp
adc
and
ret
mov
shll
insl
mov
cmc
sbb
push
rorl
sbb
fisubs
cmpsb
in
jae
lds
fstps
sbbb
in
pop
push
jle
stc
adc
jl
shrb
sbb
mov
rclb
sahf
loopne
push
les
stos
lds
mov
mov
nop
js
push
loopne
add
mov
bound
cld
jge
popa
pop
mov
movsb
adc
aam
jle
lcall
jb
pop
sbb
adc
push
or
jae
js
or
push
fwait
lret
sahf
std
ss
outsl
pcmpeqb
push
repz
jb
jp,pn
xchg
xchg
inc
cmc
rorb
xlat
es
push
outsl
push
and
cmp
movaps
jns
fsubs
xchg
mov
pop
test
lods
pop
and
gs
push
xchg
mov
scas
mov
mov
loop
fcmovnbe
ss
out
data16
hlt
xchg
xchg
add
push
sarl
sbb
sbb
int3
insl
call
add
out
rolb
and
ret
sub
mov
repnz
lret
ret
lods
jl
into
cmc
sbb
mov
and
jmp
jle
inc
sbb
int3
or
stos
negb
loop
popf
inc
pop
popa
lahf
sbb
lods
push
add
push
mov
cmc
icebp
imul
inc
nop
stos
push
test
and
xchg
fisttpl
out
fistpl
fbld
xorl
scas
sub
xor
leave
loop
sbb
mov
nop
mov
fnstsw
push
insl
minps
add
fsub
test
test
insl
sbb
cltd
insl
call
inc
jbe
imul
mov
dec
leave
adc
sub
push
int
mov
in
jnp
cmp
std
shr
push
sub
mov
ret
notl
fidivl
lods
push
sbb
outsl
jmp
aas
out
outsl
pop
mov
push
adc
mov
sub
loop
or
push
jne
int
les
mov
clc
lret
pop
shlb
lahf
xchg
cltd
arpl
inc
inc
aam
mov
mov
sbb
adc
mov
ret
es
jecxz
data16
cmpb
add
jmp
mov
shrb
orb
push
iret
cmp
dec
pop
loop
mov
aam
push
mov
cld
inc
cmp
sub
mov
out
sub
insl
xchg
mov
lods
rol
adc
pop
mov
sbb
cmpsb
test
jg
shll
arpl
pop
icebp
lret
xor
rorb
aas
enter
dec
mov
cs
adc
mov
adc
jne
sub
adc
arpl
jg
mov
xor
dec
cld
mov
lahf
push
xchg
push
data16
sub
jge
xchg
and
les
adc
repz
shrl
inc
pop
addb
cmpsl
cmp
popa
in
stc
cs
out
std
lcall
ljmp
hlt
push
sahf
mov
lea
sbb
push
fidivrs
pop
out
mov
inc
adc
mov
add
push
or
subb
gs
xchg
pop
jmp
call
into
insb
xchg
paddsw
mov
xchg
jbe
call
stos
fs
or
adc
mov
jmp
xchg
or
fisubrs
jae
and
pop
or
sbb
pushf
outsb
and
in
push
dec
shl
jne
mov
pop
xchg
push
xor
cld
jmp
roll
mov
lret
mov
push
lods
icebp
sub
push
stos
rcl
fsubs
mov
mov
mov
add
scas
fsubrl
jmp
cmp
stc
push
xor
repnz
call
aam
fs
mov
popa
inc
cwtl
divl
pop
mov
scas
cs
fmull
enterw
or
ret
fimull
inc
push
add
and
pusha
and
stc
jg
dec
das
sbb
out
sub
mov
lock
call
push
xchg
xlat
mov
xchg
popa
inc
scas
xor
jne
daa
subb
sbb
scas
or
cmpsb
icebp
mov
ror
and
addr16
adc
pop
xor
out
int
cmc
or
cmp
mov
ljmp
adc
pop
minps
ljmp
sbb
cs
testb
je
aaa
add
mov
inc
jnp
and
pop
fsubrl
popa
out
lcall
adc
pop
fs
jp
orb
test
ds
loop
xor
add
sub
out
mov
push
adc
mov
mov
outsb
leave
sarl
movsl
fmull
and
mov
push
sbb
add
jl
movsl
push
add
lods
cmpsb
fdivl
mov
adc
push
mov
lahf
mov
lods
adcb
cmp
orl
out
push
stos
mov
bound
mov
cmp
adc
push
xor
inc
fwait
pop
jp
icebp
xchg
push
push
inc
mov
inc
ret
push
or
and
xor
ljmp
add
icebp
mulb
jns
lret
leave
scas
jnp
loopne
push
mov
jnp
aad
cltd
call
cmp
adc
inc
mov
mov
ficoms
or
jg
mov
sub
sbb
sbb
insl
and
or
insl
in
fsubrs
push
test
pop
lock
dec
jne
out
jno
rol
and
push
lahf
cmpsb
mov
add
es
and
jns
cmc
jbe
les
mov
adc
int3
daa
mov
outsl
push
push
fs
adc
sub
and
adc
pop
mov
insb
push
jnp
fistl
cltd
outsb
insb
popa
cmp
fidivrl
leave
loop
lret
inc
aas
lock
repnz
fdivrl
in
arpl
push
fcmove
push
rol
pop
aad
mov
mov
push
sub
jl
sub
cmpsb
jmp
repz
stos
adc
jne
ret
jp
mov
mov
xchg
std
cmpsb
jp
add
dec
mov
loop
rcll
lcall
pcmpgtd
lods
in
push
and
test
and
mov
and
dec
dec
inc
xchg
repnz
push
clc
jg
push
mov
and
lret
pop
sbb
popa
outsb
pop
lea
loopne
fidivrs
and
test
mov
arpl
push
mov
nop
jb
cmpsl
popf
sbb
bound
and
lods
xchg
mov
bound
rcll
cld
repz
mov
cmp
filds
imul
sub
mov
add
pushf
movsb
mov
xchg
jae
inc
jae
add
rolb
xlat
jnp
fs
add
push
decl
jle
ret
pop
cwtl
dec
repnz
pop
insw
adc
cmc
in
in
xor
cmp
sub
jecxz
or
dec
push
sbb
mov
mov
dec
insl
dec
sub
test
aad
dec
inc
adc
pop
sub
pop
fdivs
out
stos
cmpl
xchg
jb
push
jg
or
mov
imull
leave
xor
sbb
int
xor
sub
sbb
lret
jp
out
cwtl
mov
xchg
rorl
cmp
stos
test
movsb
jne
daa
xchg
xchg
pop
pop
les
ljmp
sbb
xchg
outsl
and
call
jo
loope
loope
xchg
lods
popa
add
pusha
mov
push
adc
es
push
rclb
mov
cmp
insb
xchg
ret
lcall
push
inc
or
xchg
out
pushf
xchg
lock
lahf
xchg
mov
repnz
mov
mov
jbe
jb
sbb
pop
sbb
mov
lea
xchg
and
out
loop
and
cmp
push
in
inc
dec
in
adc
mov
enter
insb
jge
gs
adc
and
add
sub
addr16
pop
add
pop
pop
xor
les
push
lods
jno
loopne
jne
adc
loope
jecxz
mov
jl
jg
xor
jp
shrl
test
out
jne
xchg
inc
lcall
cmp
loopne
inc
mov
loopne
fwait
dec
push
inc
cmp
jg
xor
push
add
adc
int3
sub
mov
in
lods
push
cmpb
stc
pusha
inc
dec
rol
pop
les
sub
nop
mov
subl
pop
stos
push
xorb
sarb
addl
movsl
push
rcrb
mov
adc
pop
mov
push
pop
int
popf
inc
dec
xor
add
cld
in
mov
adc
call
ds
xlat
in
pop
inc
cwtl
or
sbb
rclb
lods
inc
xor
int3
cmpsb
jns
and
sbb
sbb
insb
jge
movsb
addr16
lods
int
xchg
xor
jmp
cmp
jmp
pop
out
push
ret
test
push
sbb
insb
jns
les
mov
xchg
mov
mov
mov
sbb
sbbb
lock
mov
inc
sub
xchg
xchg
sub
aad
lock
push
xor
scas
sbbl
mov
ljmp
dec
pop
pop
mov
cmp
movsb
mov
movsl
loop
addr16
cmp
and
push
or
adc
sub
xchg
xor
icebp
call
scas
outsl
sub
insb
scas
ficompl
dec
lds
int3
int
call
adcb
xor
cld
mov
mov
leave
adc
dec
adc
ds
xchg
in
pop
dec
and
cmc
mov
addb
mov
jmp
push
push
mov
mov
mov
mov
sub
out
adc
repz
call
cmp
fsub
fwait
mov
mov
fbld
and
cmp
xchg
push
loopne
into
cmpsl
mov
pop
sub
roll
fisubrl
es
ja
and
cwtl
jae
enter
push
and
cmc
leave
or
in
rclb
jmp
dec
sub
sbb
jge
out
cmp
xor
dec
dec
xor
shll
mov
jge
outsl
mov
ret
mov
cli
mov
jmp
daa
mov
sahf
sub
cmc
addl
push
inc
repnz
add
or
push
mov
mov
xchg
and
mov
cmpsl
sub
sub
fnstsw
jmp
xchg
mov
fadd
jecxz
dec
gs
popa
sbb
mov
adc
inc
adc
aad
cmp
inc
or
adc
loop
hlt
or
lods
adc
clc
out
lock
sahf
xchg
fidivl
aad
cs
xchg
sub
sub
and
jo
mov
sar
sti
imul
mov
nop
push
leave
jmp
adc
test
add
dec
push
es
inc
push
mov
dec
cmp
xor
ds
cmp
push
jecxz
pop
repz
mov
sbb
fwait
loop
roll
or
sahf
loop
sub
lcall
int3
xchg
mov
rcrl
pop
cmp
cmp
xchg
rol
sbb
or
dec
jns
push
add
xor
addr16
mov
fistl
jno
fdivp
xchg
inc
aam
and
sub
jmp
arpl
jmp
dec
lods
mov
cltd
push
adc
pop
push
popa
sbb
push
sbb
cltd
pop
imul
or
xchg
mulb
pop
sub
jg
jmp
scas
fbld
scas
ficoms
xor
fcompl
or
push
cltd
sbb
push
inc
sbb
jae
dec
out
inc
std
add
and
or
pop
gs
add
test
dec
add
loop
out
xchg
xchg
and
in
idivb
jnp
jmp
lock
jmp
mov
and
xchg
mov
jns
cmp
testl
fs
rcl
stc
xchg
inc
fisttpll
sbb
add
test
je
mov
dec
clc
movsl
into
faddl
inc
es
push
mov
test
sbb
test
jb
jp
jecxz
push
dec
lret
sar
pop
jge
bnd
idivl
inc
int3
sti
sub
mov
inc
push
lea
xchg
and
cmp
add
mov
sbb
cmp
adc
cwtl
lret
jb
frndint
push
push
clc
mov
loop
or
fsub
leave
enter
pop
outsb
sbb
fists
jp
mov
lret
hlt
mov
xor
das
bound
cmc
fwait
and
out
mov
push
js
dec
pop
popa
aad
xor
scas
mov
mov
std
sbb
js
inc
das
stc
jge
ja
outsb
out
xor
std
xor
es
lods
inc
sub
xor
std
inc
lods
push
and
insb
punpckhbw
sbbl
lret
pushf
xor
enter
js
fisubrs
repz
in
loopne
lret
lea
jo
cltd
rorb
push
xor
and
push
orb
notl
dec
adc
and
int
and
out
sbb
cmp
add
negb
les
ret
ret
or
jo
mov
shlb
add
rcl
add
rolb
sub
mov
in
stos
scas
pop
pop
out
fmuls
push
xchg
mov
jae
loope
inc
loop
inc
rcrb
pushf
pop
sub
inc
rcrl
div
adc
push
into
outsb
in
loope
mov
insl
cld
xor
pop
jg
adc
mov
sbb
dec
cwtl
out
scas
mov
push
fldenv
cmc
dec
push
test
pop
add
inc
inc
xorb
fcompl
push
pop
ja
repz
inc
cmp
js
push
mov
sub
add
incb
int
pop
nop
inc
jmp
jl
fsubrl
cs
std
mov
cmpsb
add
add
add
cmpb
xchg
jnp
lods
add
jne
lcall
mov
call
mov
pop
jbe
xchg
xchg
adc
mov
xchg
movl
pop
pop
sbb
std
shl
icebp
dec
arpl
outsb
in
dec
in
xor
jne
dec
pusha
test
jbe
dec
xor
loop
inc
in
fisubs
lods
popa
inc
mov
loopne
cmp
and
fdivs
inc
leave
loope
add
mov
les
test
xor
popf
enter
sub
cs
dec
fidivrl
xchg
jp
pop
je
fidivs
std
pop
je
movsl
rol
mov
push
mov
ret
addr16
cmp
push
sub
out
rcrb
hlt
daa
lods
jb
int3
inc
adc
scas
repz
ret
and
icebp
es
cmp
push
loope
dec
int
call
jp
test
arpl
loopne
lods
bnd
pop
xor
lahf
nop
scas
xchg
and
add
std
adc
mov
in
subb
outsb
sbb
dec
add
imul
lock
scas
xor
xchg
xchg
mov
sti
insl
cmp
bound
dec
push
dec
fcmovnbe
outsl
jo
add
push
pusha
pop
stos
jp
stc
push
stc
cmp
out
sub
adc
lds
cs
xchg
sub
leave
scas
pop
and
into
lahf
fildl
pop
xor
ret
cli
inc
pop
jle
lods
and
or
lock
inc
jecxz
xchg
data16
popf
adc
adc
shr
ds
jbe
xchg
adc
xor
inc
in
shll
push
lds
stos
outsb
fimull
gs
add
cld
push
xchg
shrb
lods
or
cltd
outsl
jmp
das
pop
mov
insb
shlb
inc
outsl
mov
sarb
data16
or
dec
xchg
push
das
enter
fbld
dec
cmc
in
insb
xchg
leave
repz
pop
jno
push
test
dec
adc
addl
jns
jnp
and
xchg
pop
xchg
xchg
adc
scas
push
aaa
cmc
lahf
mov
pop
inc
pop
lods
pop
dec
cli
idivb
test
repz
shlb
and
sub
inc
pusha
jnp
scas
mov
enter
sbb
fisttpl
incb
pusha
sahf
mov
push
pop
jle
adc
loopne
sti
dec
insb
add
xchg
pusha
push
call
pop
jno
push
outsb
pop
fscale
xchg
cmc
mov
cmpsb
loope
popf
aad
scas
fdivrp
adc
jp
or
xchg
push
repnz
adc
sbb
shrl
addr16
adc
mov
mov
xor
jmp
nop
insl
lret
imul
lods
inc
cmp
mov
xchg
fldcw
and
rcr
cmpsl
add
dec
mov
adc
notl
aad
fldenv
pop
lock
inc
out
flds
xchg
mov
divl
push
inc
xor
daa
add
lcall
fwait
aas
icebp
popf
mov
push
xor
or
leave
dec
sahf
mov
insb
dec
fidivrl
mov
dec
insb
sub
pop
push
inc
lea
pop
fsubrs
sub
xchg
cmp
jbe
adc
out
cld
loopne
movsb
add
sub
shrw
loop
rolb
xchg
xor
jle
bound
enter
fcompl
xor
xor
jp
out
and
out
mov
pop
movsb
fsubrp
and
jge
loop
test
sub
push
mov
inc
iret
xchg
ss
xlat
mov
xor
pop
scas
arpl
mov
pop
popf
inc
xchg
sub
mov
inc
mov
dec
rol
add
inc
ljmp
jb
fcomps
insb
mov
fldl2t
xor
and
or
lahf
add
ljmp
lret
adc
lcall
ja
int
mov
add
and
scas
ja
stc
nop
push
inc
and
iret
jae
lock
fsubp
popf
mov
mov
pop
stc
subl
and
jecxz
cltd
test
jno
and
test
sub
vphadduwd
mov
add
in
outsl
mov
scas
cli
jo
and
add
lahf
cmp
scas
pop
fiadds
jns
xchg
shrb
add
icebp
fwait
repnz
sbb
in
cld
out
mov
add
aaa
or
cmpsl
sbb
outsb
jno,pn
xlat
repz
jecxz
xor
je
sub
mov
das
fucom
fldl
pop
xchg
xchg
push
sahf
addr16
jle
and
add
mov
xlat
xchg
les
inc
inc
jmp
clc
inc
sahf
cs
and
ror
mov
jnp
mull
cmp
outsl
mov
lret
pop
dec
es
les
mov
inc
add
push
adc
test
inc
lods
fs
in
vhaddps
fimuls
mov
clc
push
xor
inc
out
daa
jecxz
pop
adc
xor
fidivrl
xchg
xchg
cld
je
les
int3
mov
inc
lods
push
jp
jp
jle
or
adc
mov
cmp
lret
je
dec
or
push
cmpsl
cmp
mov
sub
mov
insl
stc
hlt
test
xchg
jbe
in
cld
stos
jl
mov
inc
add
push
std
adc
or
movsl
add
cmp
repz
in
mov
insb
fisubs
xchg
sub
or
cmp
test
add
lea
mov
popa
adc
das
adc
add
add
dec
cmpsb
mov
inc
popf
leave
add
cmp
inc
push
or
pushf
or
pop
xchg
sahf
or
inc
daa
mov
mov
ljmp
mov
xor
cmp
test
test
ss
decb
loop
mov
test
addb
les
pop
push
jmp
or
xchg
xchg
in
adc
out
or
cmc
in
xchg
jl
jnp
imul
pop
push
sbb
mov
and
push
adc
mov
hlt
pop
bound
in
dec
movsl
mov
sbb
or
ja
xchg
jnp
inc
push
push
dec
bound
sub
inc
aaa
fabs
add
sub
cld
pushf
sub
lods
loop
ja
lea
or
nop
pop
frstor
in
scas
lahf
fs
dec
lea
or
movsl
enter
push
popa
mov
mov
dec
icebp
xlat
xchg
push
popf
cmp
movsl
aas
pop
push
jnp
out
dec
mov
test
inc
movsb
cmc
nop
mov
in
lcall
dec
dec
pop
xor
inc
adc
sbb
mov
or
aaa
pop
jge
sarl
inc
stos
add
push
push
dec
aaa
jne
jns
rclb
iret
and
out
dec
dec
cld
mov
and
xor
test
lock
xor
aad
sahf
cmp
push
inc
cmc
sbb
mov
outsb
clc
mov
push
add
push
ret
xchg
test
and
fucomi
xchg
jmp
dec
cmp
test
pop
std
fs
dec
fidivl
and
loopne
dec
sub
xor
mov
mov
or
in
mov
or
cmp
add
or
xchg
mov
mov
add
pop
inc
cmp
hlt
jno
mov
or
sti
movsb
out
test
test
jg
push
leave
loopne
and
jnp
jo
icebp
cmc
movsl
add
test
push
dec
xchg
dec
rcrl
sbb
les
push
sbb
mov
sbb
mov
inc
test
mov
pop
in
and
cld
adc
fcomps
xor
xchg
outsl
push
xchg
and
lds
jne
cltd
xor
ret
cmp
popa
push
iret
and
mov
aas
ret
mov
push
test
lock
int3
push
inc
dec
push
lods
xor
pop
mov
outsl
loop
movsl
pop
or
mov
out
outsl
xchg
jl
mov
mov
arpl
jl
out
push
inc
fsubs
sbb
ret
out
idiv
fstps
push
lods
mov
cli
mov
add
fs
or
movsb
xor
scas
bound
jns
or
sub
and
das
xlat
adc
xor
repnz
inc
jp
xchg
std
xor
or
adc
inc
into
stc
sub
mov
and
imul
icebp
dec
pop
jecxz
jae
xchg
cmp
jb
or
jne
es
add
sub
ret
mov
mov
inc
and
aas
fbld
sahf
aas
loopne
or
mov
or
pop
cli
push
add
cld
test
lret
mov
popf
sub
sub
lret
ja
and
adc
cmp
sub
mov
sub
mov
sbb
mov
lods
in
lods
xlat
idivb
mov
lret
xor
iret
stc
std
cmp
xlat
cmp
loopne
movsb
repnz
lock
ret
mov
pop
fdivrp
lcall
fdivs
imul
subb
pop
xor
xchg
arpl
xor
xchg
ret
push
cld
lock
pop
pop
cltd
ds
fcomi
cld
cmp
lret
adc
lahf
hlt
pop
leave
call
xor
loopne
out
cmp
lcall
ret
dec
dec
jne
and
sbb
pop
jmp
jae
sub
push
int
and
testl
cmpsb
xchg
jp
push
xchg
stos
popf
ret
push
mov
jno
out
cmpsb
inc
popf
out
sarb
push
repnz
pushf
add
lret
imul
loope
loopne
scas
mov
aaa
ljmp
xchg
jg
aas
js
enter
sub
test
aad
inc
xchg
aas
js
pop
jp
out
fnsave
xor
or
mov
and
loope
sbb
ja
das
jno
call
pusha
or
pop
ljmp
xor
adc
outsb
and
and
adc
dec
popf
cmpsl
outsb
popa
mov
push
stos
aas
adc
ret
push
negb
nop
rorl
ljmp
jp
fnstcw
jnp
aas
push
es
and
and
or
or
ret
mov
movsl
mov
mov
adc
and
out
pop
add
jmp
dec
and
pop
rcrl
push
popa
pop
sbb
adc
sbb
inc
add
jae
mov
dec
pop
lds
out
loope
jle
mov
inc
sbb
mov
mov
mov
jno
fistpl
stos
jae
popf
dec
ror
repnz
ss
inc
push
ret
repz
xor
fdivrl
js
insb
lds
jb
xchg
jg
outsb
pop
aaa
sbb
xchg
sub
jns
cmp
sub
add
lea
sub
mov
inc
adc
xchg
mov
pop
repz
or
sub
or
sub
or
inc
mov
adc
pop
cmp
mov
mov
xchg
sbb
jg
push
fidivs
cmp
stos
idiv
out
jno
or
jnp
xchg
or
inc
movsbl
or
add
mov
push
fidivs
aad
and
popa
and
mov
insb
sub
cmpsb
mov
inc
inc
hlt
imul
lret
pop
test
pop
inc
mov
js
rolb
adc
cmp
aad
xor
sub
jno
or
push
daa
jnp
mov
mov
push
add
cmpsb
gs
or
pop
sub
repz
mov
sub
pop
jle
inc
pop
in
pop
jge
popa
movsl
add
add
rcll
adc
jmp
mov
pushf
push
test
cmp
stc
sti
cmpsb
lcall
mov
and
cmp
xchg
push
fcoml
call
pop
aad
je
roll
sbb
inc
pop
adc
pop
adc
jp
lods
aad
loop
mov
mov
loop
mov
pop
stc
js
lret
gs
test
xchg
cmp
pop
sbb
cmp
mov
jb
dec
push
mov
push
imul
adc
pop
jbe
pop
out
neg
mov
jae
test
cmp
push
fsubrl
pop
mov
insb
and
fisttpll
andb
pop
mov
dec
pop
ret
push
xchg
scas
dec
std
movsb
dec
jg
jbe
push
insl
push
sub
add
mov
adcl
stos
ss
lods
jmp
enter
mov
pop
repnz
inc
call
pop
xchg
jae
cmp
cmc
shll
mov
pop
sub
inc
shll
gs
jmp
insl
imul
and
inc
mov
mov
push
pushf
dec
orb
loopne
pop
push
cmp
lahf
in
lret
add
adc
mov
push
divb
rorb
fbstp
mov
add
jmp
sub
push
lcall
or
mov
loopne
roll
sub
das
add
push
sarb
mov
xor
repnz
cltd
addb
in
mov
jb
loop
push
pop
loopne
int3
jns
xor
outsl
lods
fidivrs
stos
cmp
jl
ja
sub
scas
stos
ret
mov
ss
test
add
call
push
pop
cwtl
push
adc
cs
cmp
clc
fisttps
into
mov
sbb
ret
sub
dec
iret
push
mov
mov
cmp
fstl
lods
add
clc
je
andl
sahf
pusha
cs
movsl
test
pop
lret
sub
or
cmp
mov
icebp
xor
jl
and
outsl
loop
mov
mov
outsb
icebp
push
daa
test
and
pop
sub
push
cli
in
dec
test
icebp
pop
inc
mov
ficomps
das
repnz
mov
pushl
xor
jo
ds
push
and
push
xchg
les
inc
rolb
movsl
xchg
insb
mov
xor
mov
xchg
mov
cvtpi2ps
fldl
popa
iret
nop
cld
in
push
push
fldcw
xor
sub
mov
mov
sti
lods
sti
mov
adc
pop
ss
inc
pop
cmp
imul
dec
inc
xlat
out
scas
add
mov
aas
cld
xchg
mov
push
in
stc
dec
inc
fstl
pop
mov
mov
pop
mov
fstpl
mov
xor
dec
mov
adc
fldl2t
adc
cmpsl
mov
in
sub
mov
loope
aaa
inc
out
je
sub
les
adc
push
test
pop
ficompl
mov
pop
inc
mov
cld
fcmovne
jbe
push
roll
dec
dec
xchg
or
jno
xchg
in
data16
adc
adc
loope
je
xor
adcl
test
sub
cmp
lret
xchg
dec
addr16
in
je
push
sub
jbe
and
sbb
je
out
loop
dec
add
dec
cld
xor
pop
cmc
sbb
adc
jecxz
insl
gs
mov
cs
nop
xor
mov
xchg
in
rorl
mov
das
dec
jno
pop
mov
gs
dec
hlt
mov
and
rcl
lahf
jge
in
mov
dec
pop
push
push
pop
stos
hlt
rcr
pop
push
or
mov
addr16
mov
push
xor
mov
and
push
sub
stos
mov
loope
lret
jns
testl
lea
scas
and
push
add
jno
jle
add
sbb
subl
xchg
jmp
loopne
fcos
mov
arpl
and
icebp
and
xchg
out
mov
jae
out
xchg
adc
inc
fwait
push
inc
fmuls
cmp
mov
lods
aaa
sbb
sbb
out
xchg
push
sub
mov
mov
inc
mov
fdivr
sub
pop
mov
mov
pop
ljmp
sahf
mov
addr16
lret
out
mov
adcl
or
pusha
sbb
dec
lods
mov
daa
sbbl
pop
mov
add
bound
call
mov
mov
push
push
rcl
adc
push
aam
pop
xchg
cmp
mov
mov
inc
adc
and
or
sub
aad
fsubrs
pop
mov
lods
data16
or
sub
cmp
add
mov
ljmp
es
popa
fcoms
jns
mov
adc
icebp
pop
rcrl
ds
std
and
sub
pop
movsl
xor
lcall
ret
shlb
mov
pop
xor
pop
push
das
xchg
cs
push
dec
push
inc
cmp
repz
loop
les
cli
mov
lock
insl
mov
and
inc
inc
aad
cmp
ja
data16
movb
das
mov
pop
int3
lock
xor
sahf
and
jo
inc
test
fwait
mov
mov
cmp
mov
ss
fwait
xchg
adc
mov
xchg
lret
fs
cwtl
pushf
cltd
and
stos
mov
xor
push
sub
cmp
jg
int3
nop
cmpl
push
out
loope
mov
fildl
lret
inc
pop
push
aas
repnz
cmpsl
inc
out
movsb
xchg
sbb
and
cmpb
insl
pop
fcomip
dec
js
rcrl
xchg
adc
sbb
pushl
jge
lret
xchg
pop
inc
lods
cmp
in
mov
xchg
mov
sti
sub
fucomp
cmp
fwait
mov
je
pop
or
out
fs
pop
sbb
lret
aas
scas
mov
fs
int
test
push
jmp
sub
xchg
mov
stc
jne
add
sbb
roll
inc
out
fdivl
icebp
test
xchg
sbb
sub
jge
inc
dec
inc
inc
test
xor
add
mov
cmpsb
pop
xchg
lods
nop
aas
aad
jne
mov
data16
push
cli
lahf
mov
cmc
jecxz
lock
push
outsl
inc
push
into
cwtl
cltd
xchg
jb
hlt
inc
xor
sarl
fisubl
test
mov
dec
shlb
stos
jge
push
or
push
cmovne
xor
out
jmp
sbb
adc
add
jnp
cwtl
mov
negl
insb
mov
and
pop
add
scas
mov
sub
xor
push
xchg
and
aas
push
xor
cld
jns
stc
jmp
push
pop
dec
fwait
jmp
ja
call
into
add
out
stos
inc
fisttps
sbb
cmpsb
add
mov
and
loopne
nop
and
jbe
jle
mov
shl
js
pop
mov
pop
nop
test
sbb
pop
mov
cmp
cmpsl
mov
inc
in
stos
lods
sub
jge
movsl
pop
xchg
insb
cmp
fnstsw
mov
ljmp
int3
loope
sahf
jbe
or
and
outsb
mov
add
arpl
fldcw
sub
push
inc
jb
mov
mov
mov
jecxz
xchg
and
icebp
mulb
lea
and
push
idivl
sbb
pushf
dec
mov
sbb
enter
stos
in
ret
int
cmp
sbb
lea
push
popf
lahf
loop
mov
loope
and
movsb
mov
xor
add
mov
in
add
jl
das
loop
push
push
push
jecxz
repnz
inc
jle
sbb
in
imul
lret
shl
push
xorl
in
lds
push
push
cmp
mov
xchg
or
rolb
inc
ljmp
sub
mov
mov
ficoms
xchg
mov
lods
mov
mov
cmp
pop
ja
rcll
aas
ss
pushf
dec
xor
test
cs
cwtl
sbb
cs
or
aam
das
pop
pop
jl
xchg
loop
outsl
mov
dec
xor
jo
push
sbb
push
jno
les
xchg
popf
clc
pop
stc
mov
push
call
cmc
add
cmpsb
sbb
mov
cmp
fdivs
test
icebp
cmpl
inc
sarb
sbb
outsl
sub
jns
sub
jb
xor
sbb
and
adc
outsb
movsb
add
dec
lret
pop
sbb
cmp
mov
or
push
pop
xchg
scas
and
add
nop
lahf
or
dec
sub
sbb
adc
sub
pop
cmp
les
mov
repz
bound
loopne
mov
in
sub
jo
add
mov
icebp
xchg
addb
or
shlb
out
sbb
or
push
adc
push
test
and
cmpb
cmp
pusha
enter
pop
xchg
adc
xchg
jl
cli
push
test
fwait
add
cmp
mov
outsl
dec
repz
aaa
movsb
lret
or
out
ja
push
xchg
sub
pusha
cli
push
ret
push
xor
adc
mov
mov
rol
add
and
ror
fwait
mov
pop
inc
stos
movsl
xor
mov
jo
jae
les
mov
and
mov
repz
in
int3
bound
mov
inc
outsb
sbb
xchg
push
sub
in
inc
pop
mov
std
fiadds
mov
jg
lock
lahf
ss
js
popf
mov
xor
sub
jno
xchg
mov
lcall
out
out
xchg
or
fst
clc
stos
jns
stc
insl
scas
xchg
mov
push
pusha
lods
mov
lahf
pushf
pop
add
or
mov
std
inc
je
inc
xchg
ljmp
pop
pop
incl
fucomi
test
cmp
adc
inc
sbb
test
xchg
fsubrs
jno
or
cmpsl
ret
std
test
xor
sbb
repz
neg
test
push
insb
insl
xor
cmp
xchg
jl
pop
xchg
int
cmpsl
jmp
pop
push
adc
repnz
aam
incb
mov
jnp
sahf
mov
xchg
out
dec
bound
xchg
orb
es
and
cld
wbinvd
pop
adc
cmp
or
ficoms
lret
pop
in
dec
ss
addr16
out
adc
adc
push
insl
xor
ljmp
mov
or
mov
shll
pop
xchg
int
mov
push
or
inc
mov
mov
adc
and
ret
add
insl
shlb
push
lods
add
stc
pop
mov
jl
nop
pop
mov
inc
js
ret
mov
lret
adc
mov
pop
rol
sbb
sub
das
xor
mov
mov
adc
jb
lcall
repnz
inc
mov
outsl
adc
test
pop
ficoml
bound
je
test
cli
scas
mov
outsl
xchg
aam
les
shll
dec
mov
gs
push
inc
stos
jle
dec
pop
rcll
pop
mov
sub
cmp
shll
sbb
out
inc
jle
cmc
out
jmp
xchg
xchg
fs
lret
mov
and
push
or
lcall
xor
sub
pop
jecxz
jle
cli
pop
inc
movsl
xchg
outsl
aam
cli
add
rorl
movsl
xchg
in
iret
aaa
gs
cmp
loope
adc
sbb
or
stos
jl
sbb
fstp
movsl
lea
mov
xor
cmpsl
rcll
aad
adc
and
pusha
push
mov
test
call
push
fstl
outsb
jmp
arpl
pop
gs
jnp
shll
and
in
ds
scas
fnstsw
adc
sub
sbb
adc
in
gs
test
ret
pop
shr
mov
repz
daa
jg
call
hlt
ljmp
fstpl
dec
mov
lahf
std
or
pop
sub
es
addr16
ret
and
mov
mov
fiadds
adc
aas
test
mov
lret
inc
push
pop
adcl
pop
jne
fisttpll
lret
and
repz
outsb
mov
or
add
inc
cmp
sub
loope
call
out
xor
fnstenv
call
jl
mov
xor
or
outsb
ret
dec
sub
lahf
pop
enter
movsl
cmp
mov
iret
xlat
jno
iret
pop
pop
test
xchg
and
cmp
xchg
shrb
or
jecxz
xlat
js
clc
dec
sbb
xor
pop
pushf
pop
sti
lcall
cs
in
loope
cmp
or
sti
bound
inc
xchg
lcall
or
xor
xchg
outsb
and
cmp
sti
in
jmp
faddl
stos
cltd
cmp
cld
ss
imul
imul
jns
repz
jns
push
fwait
repz
inc
jne
push
mov
dec
fmul
xchg
xchg
xchg
divl
into
lea
jns
in
lcall
adc
jbe
and
popa
adc
fnstenv
xchg
mov
cltd
mov
ret
cmovno
or
jmp
sub
cmp
mov
jno
inc
mov
mov
xor
and
jo
mov
push
std
push
cmpsl
movsb
std
in
mov
pop
xchg
ds
ljmp
std
add
dec
call
push
xchg
cmp
insb
lcall
jmp
shlb
mov
add
mov
es
pop
fwait
xchg
cmp
je
dec
je
mov
ja
popa
dec
ljmp
mov
xchg
popf
test
shrd
popf
aaa
jae
and
pop
pop
xchg
inc
pusha
pushf
pop
pop
dec
cmp
sbb
jnp
mov
lret
int3
scas
or
or
popa
push
cmpsb
sbb
sbb
std
mov
and
fisttps
bound
xchg
push
add
mov
pop
xor
and
sub
adc
inc
int3
pop
mov
xchg
mov
cmpsl
push
mov
les
lods
inc
xor
xor
pusha
mov
jg
inc
xor
std
and
sbb
arpl
in
lret
push
sbb
push
or
dec
aad
add
out
adc
rol
neg
test
ja
sbb
cmp
sub
inc
mov
enter
jo
pop
sahf
jns
mov
cwtl
neg
insl
mov
xchg
data16
mov
push
mov
pop
dec
rcrl
xchg
pop
push
shl
mov
cmc
sub
addr16
imul
inc
pop
sti
mov
add
push
and
mov
je
sarl
andb
sub
stos
sbbl
mov
jl
xor
mov
cltd
mov
and
push
add
mov
jae
lret
mov
ds
sub
cmc
popa
jo
cmp
or
lods
imul
mov
mov
mov
loop
pop
fstpt
pop
int
pusha
addl
frstor
sub
and
add
negl
addr16
sub
mov
adc
xchg
sub
iret
mov
and
subb
roll
loopne
xor
adc
sub
cmp
push
lds
mov
jl
ret
push
fldl
pop
sbb
imul
andl
cmp
sbb
or
std
adc
je
in
les
add
add
sub
negb
sub
stos
fsubl
xor
outsl
ret
xchg
xchg
pop
xor
sub
pop
cmp
mov
cmpsl
imul
jb
scas
jp
ret
push
or
inc
add
xchg
sbb
xchg
lcall
jae
adc
jmp
mov
lret
mov
xchg
or
sbb
in
iret
inc
inc
stc
ror
leave
mov
xor
addr16
jge
push
dec
jo
xchg
xchg
dec
mov
ljmp
jge
push
add
jae
out
pop
sbb
add
push
mov
pop
inc
push
stos
scas
mov
lods
sub
out
jecxz
adc
sbb
cmp
xor
cmp
testb
loop
jl
mov
cs
dec
je
cmp
fs
imul
negl
rcrb
sbb
jle
fwait
insb
std
mov
scas
adc
pop
xor
fimull
imul
xchg
and
lds
push
std
jbe
leave
push
ljmp
or
xor
lds
inc
sahf
and
push
mov
lock
pop
mov
xchg
leave
push
int3
sub
std
jno
ds
stos
add
repnz
out
shll
jne
or
mov
inc
inc
cmp
out
sub
lret
xor
or
cs
lock
pop
mov
incb
test
scas
adc
jmp
inc
mov
fs
out
lret
and
test
addl
idivl
mov
out
call
xchg
adc
add
jmp
push
in
movsl
fidivrs
popa
mov
cwtl
hlt
test
mov
je
mov
fildll
cmpsl
push
pop
test
mov
sub
xchg
or
and
adc
dec
movsb
adc
cmpsl
movsb
push
jbe
jg
dec
dec
lret
pusha
cmp
ds
cmpsl
leave
out
sbb
push
cmp
cli
pop
in
fiadds
dec
jo
sbb
xorb
in
or
push
cmp
nop
pop
adc
jmp
pop
jecxz
xchg
outsl
mov
and
scas
and
in
xchg
aaa
cld
lea
xor
inc
xchg
mov
adc
sub
repnz
ret
stos
sub
inc
negb
nop
out
push
dec
pop
iret
pop
sbb
icebp
pop
and
loope
jns
add
fisttps
ss
gs
push
xchg
pop
pop
fisubrs
loope
stos
repz
jg
fmulp
lret
sbb
fcmovbe
fmull
mov
sub
push
data16
sub
xchg
cld
push
daa
push
inc
out
jne
test
jno
push
xor
cmp
ljmp
mov
call
dec
mov
mov
jp
pushf
push
push
and
scas
ja
fsubr
mov
push
ret
push
loop
pop
dec
imul
add
mov
jo
mov
mov
pop
jle
push
ficoms
arpl
arpl
std
jnp
std
cmp
jge
shll
or
test
sub
sbb
cmp
dec
dec
movsl
orl
es
pop
jnp
insb
fsubrl
int3
adc
mov
mull
fcmove
xor
clc
and
jecxz
lret
sub
sbb
loopne
mov
ljmp
int
es
pop
pop
ds
fldcw
pop
ljmp
pop
out
sti
repnz
jle
call
inc
push
mov
fldt
mov
rolb
push
mov
int
inc
xlat
xchg
dec
lret
dec
mov
dec
addl
add
xor
popf
dec
push
pop
les
sbb
and
shll
lock
stos
jb
adc
arpl
mov
out
outsb
push
or
repz
sub
mov
and
sbb
loop
and
mov
ret
push
lahf
inc
out
dec
das
data16
lods
pop
jo
ss
popa
ror
mov
daa
daa
pop
mov
mov
in
mov
xchg
nop
jb
push
cmp
lock
inc
andb
test
jnp
loop
popf
aam
popf
mov
sbb
and
mov
sub
cmpl
xlat
loopne
mov
or
xor
jnp
loop
outsb
sahf
loope
cmp
lcall
fptan
cmp
add
out
dec
mov
dec
add
push
lcall
fmull
movsb
lret
bound
push
addb
mov
mov
test
loop
xor
xchg
mov
leave
push
xchg
cld
repz
pop
sub
jne
jae
adc
test
jo
push
js
xchg
sub
lods
scas
sub
dec
std
pop
stc
stc
xor
xorb
inc
cltd
jnp
mov
cld
sub
test
cltd
xlat
or
cmpsb
jb
jg
mov
xor
lds
adc
dec
mov
xchg
push
fs
or
out
orb
mov
icebp
fsubl
lret
mov
xchg
ret
dec
mov
pusha
jbe
out
or
sub
stos
push
les
movsl
test
and
loope
xchg
jp
jge
scas
filds
inc
push
daa
dec
mov
xchg
mov
cmpsb
add
ret
hlt
out
fmull
adc
mov
cmp
add
int
xor
xor
sub
pop
dec
shrl
lds
mov
xchg
inc
inc
inc
jae
cmpsb
cmp
cli
outsb
dec
dec
test
clc
cmc
mov
in
xchg
pushf
xchg
jnp
pop
cli
les
mov
and
pop
mov
push
loop
lcall
nop
xchg
add
sub
outsl
sbb
or
test
scas
stos
add
xchg
and
ret
sbb
imul
mov
cld
orl
and
jae
xor
push
ds
jno
inc
sub
cmp
cmp
dec
rol
in
inc
das
and
fdivs
mov
push
sbb
sbb
mov
fbstp
mov
add
fs
movsl
fs
mov
sub
gs
sub
cmp
dec
xor
mov
imul
or
js
sbb
fcmovb
lahf
addl
jbe
in
lcall
or
ret
imul
popa
dec
add
stos
pop
pop
dec
jbe
add
rcll
shrl
outsl
add
jns
lea
mov
pop
outsb
add
stos
bound
gs
repnz
test
fcomps
sub
sub
mov
mov
fisttps
mov
call
mov
push
ja
dec
stos
mov
xor
aam
sub
and
adc
out
add
push
aam
inc
cwtl
fsub
sbb
daa
dec
dec
push
aam
add
fdivs
add
out
pop
sub
jb
sub
add
adc
push
xchg
cmpsb
mov
jmp
fidivrl
je
out
pop
shll
ja
add
push
push
loope
cwtl
inc
cli
daa
fwait
xor
flds
sbb
mov
stc
in
ds
cmp
push
mov
xchg
cmp
nop
ficoms
dec
add
lods
cwtl
cmp
or
fidivrl
lahf
nop
push
jo
dec
int
addl
mov
repz
test
mov
out
jnp
dec
mov
push
repz
ss
and
arpl
lcall
fcmovb
rorb
insl
dec
adc
jne
mov
cmp
incl
inc
stos
pop
push
data16
mov
andb
rclb
movsb
adc
andb
mov
mov
jl
xchg
roll
lahf
cltd
push
outsl
push
dec
mov
pop
sbb
or
or
bnd
add
xor
mov
cmpsl
cmpsl
stos
and
je
add
js
shl
or
push
jg
imul
xor
mov
adc
or
jbe
mov
push
pop
add
xor
loope
psrlw
lds
ror
fsub
mov
loopne
dec
mov
sub
pop
jecxz
lock
push
dec
cmpsb
hlt
dec
imul
sahf
mov
xchg
xchg
daa
xchg
jne
in
fidivs
push
mov
outsl
aad
mov
pop
pushf
std
mov
cmp
cmc
shlb
repnz
cmpsl
aam
out
movsb
negb
lods
mov
sub
xchg
xor
dec
mov
mov
outsl
fidivs
sbb
out
stos
lea
shl
sub
adcb
adc
cmp
iret
sbb
dec
and
sbb
cmp
lret
mov
addr16
jo
out
cli
jl
dec
inc
pop
or
pop
mov
sub
inc
mov
aad
jns
mov
xchg
test
scas
cmp
imul
lock
sbb
push
push
clc
sbb
jmp
or
mov
sub
inc
lea
and
cmp
dec
invd
push
fdivs
pop
sbb
fs
lds
xor
fdivr
inc
push
cmpsl
sbb
jb
sbbb
mov
out
pop
mov
and
add
fiadds
pop
lea
jl
add
or
jb
sub
pop
push
sbb
push
das
sub
ja
mov
popa
shlb
mov
cmc
inc
inc
pop
and
lock
mov
stos
lods
mov
lret
cmp
add
jbe
popl
sbb
cmp
clc
insl
adc
push
les
pop
xchg
lds
call
mov
stc
cwtl
or
lds
mov
lret
ret
andl
imull
inc
cmc
arpl
shrl
mov
jle
xchg
adc
inc
jnp
fsub
mov
loope
push
mov
xchg
lods
sbb
sarb
shlb
mov
mov
mov
dec
mov
mov
out
mov
sbb
xchg
pop
pop
add
fmulp
fstpl
cmpsb
adc
xor
pop
pop
mov
jbe
inc
out
sub
call
mov
xchg
and
pop
ret
lock
jecxz
int3
pop
decl
addr16
cli
imul
mov
or
push
pop
cmp
jle
mov
dec
mov
dec
cld
testl
mov
in
add
mov
loopne
jmp
add
adc
dec
and
jmp
sarb
sbb
outsl
in
scas
or
in
sub
ret
jne
pop
push
shll
xlat
sub
mov
insb
lock
jp
jle
push
in
xchg
mov
mov
jle
cmp
out
mov
popa
push
inc
xchg
push
stc
je
xchg
shrb
je
lret
push
and
and
xchg
pushf
jo
inc
int
lea
jge
pop
daa
and
outsl
cmp
icebp
movsb
sahf
sbb
dec
int3
enter
aad
icebp
xchg
or
incb
fdiv
test
out
mov
push
stos
xchg
pop
sbb
in
cmp
and
jns
xor
and
jmp
sbb
push
push
mov
or
lds
jo
cltd
push
sarb
pop
rcrb
mov
sbbl
sbbl
xchg
icebp
les
cs
sub
push
inc
or
repnz
lods
out
pop
mov
mov
enter
pop
fcompl
sahf
data16
jg
cmp
inc
ret
push
faddp
pop
movsl
push
cwtl
in
lret
dec
mov
shlb
outsb
call
loope
jg
push
cmp
sti
in
mov
mov
icebp
imul
inc
cmp
cmc
push
pop
xchg
jns
jp
insl
mov
push
outsb
out
cmp
rcl
imul
popf
xchg
and
ret
lcall
or
push
negb
rcrb
mov
mov
stos
sahf
pop
lcall
out
or
add
push
aas
cmp
test
adc
popf
adc
mov
push
gs
leave
mov
test
inc
sbb
cmp
jle
aaa
mov
cmp
push
test
mov
mov
js
add
addb
popa
test
out
add
add
xchg
mov
imul
mov
adc
xor
out
mov
ds
mov
test
lods
test
stos
fnstsw
nop
inc
add
das
sub
or
inc
sahf
adc
sub
sbb
mov
adc
rolb
add
adc
jae
mov
lods
push
cmp
int3
enter
in
inc
mov
addr16
movsb
pusha
clc
dec
sub
sbb
push
andb
xor
ret
and
mov
jecxz
dec
iret
push
stc
mov
mov
mov
insl
das
dec
pop
test
cmp
adc
push
xor
sbb
aaa
inc
cli
and
mov
xor
mov
push
mov
push
or
inc
bound
dec
stos
sub
mov
shlb
inc
xor
lcall
out
jb
dec
sti
push
aad
das
xchg
stos
pop
inc
rorb
mov
hlt
push
push
lahf
in
shlb
pop
stc
cmp
and
imul
push
test
out
notb
add
pop
push
test
add
addr16
hlt
push
inc
lods
push
jno
adc
pushf
xchg
cli
pop
loope
push
das
push
test
or
fnstenv
inc
lds
lret
push
fmull
jae
mov
cltd
test
xchg
icebp
xchg
stc
insb
aas
mov
incl
cmp
lds
shr
cmp
dec
cmp
cmpb
movsb
mov
cmp
mov
lods
insb
sbb
jmp
sub
les
fs
lock
mov
mov
and
push
popf
pop
lea
int3
adc
add
out
mov
leave
stos
jne
leave
jl
mov
mov
pop
addr16
call
pop
mov
sub
pop
ret
imul
and
inc
cmpb
cmpsb
negl
xchg
ja
in
mov
xor
mov
addr16
cli
jne
jmp
into
int3
daa
ficoml
push
add
sbb
sarl
loop
mov
icebp
or
push
and
lret
aas
out
inc
xor
jbe
inc
jae
fcos
inc
jae
cmp
xlat
lock
addr16
mov
mov
adc
scas
push
outsl
in
lds
cs
xchg
xchg
xor
repz
fadd
outsb
inc
adc
mov
mov
push
jo
jns
aam
gs
sqrtps
fistl
push
jbe
xchg
negb
cmp
fsubrs
loopne
mov
cmp
insl
pop
add
addr16
mov
and
fstp
cmpsb
mov
xchg
subl
pop
aad
fstpt
stos
mov
scas
mov
mov
push
scas
lret
popa
xor
test
xor
pop
ljmp
lret
cmpsl
pop
into
xchg
xor
dec
sbb
je
cmpsl
rolb
pop
mov
dec
xchg
insl
mov
mov
adc
fnstsw
aam
jo
call
jno
adc
add
jge
xchg
sub
inc
mov
push
xchg
cmp
and
inc
shl
sub
pop
and
xor
mov
jbe
popf
sub
cltd
inc
dec
dec
testl
enter
lret
cmp
jnp
mov
cmp
mov
push
ret
les
daa
movsb
pop
adc
jo
sbbb
ja
dec
dec
outsb
loop
sarb
sbb
std
imul
xorl
xor
mov
or
ret
outsb
sub
or
push
ja
mov
je
jl
insb
fcmovbe
adc
stc
pop
test
mov
sarl
data16
mov
lds
and
aaa
sub
mov
xchg
push
mov
xchg
orl
add
pop
ret
mov
pop
push
cld
fbstp
in
inc
rcrb
push
je
idivb
add
push
xchg
mov
adc
cmpsl
pop
push
out
sub
sbb
mov
cmp
repz
outsl
add
lahf
ds
sub
pop
jg
ret
jno
bound
mov
stos
insl
outsb
pop
rolb
sti
out
movsb
insb
nop
repz
cwtl
xchg
jbe
sub
nop
xor
xor
mov
test
mov
xor
cltd
cmpsl
pushf
adc
ret
mov
mov
sahf
adc
fwait
into
inc
mov
test
ret
je
pop
fcmovnbe
or
int
inc
jmp
fmuls
into
addr16
sbb
outsl
xor
push
es
push
add
mov
add
scas
rolb
sub
pop
lret
call
aaa
inc
popf
push
jae
les
dec
mov
mov
push
jp
xor
loope
push
cld
push
lods
in
mov
dec
loope
cmp
sub
arpl
or
or
or
and
lock
mov
mov
fs
push
enter
repz
sti
pop
dec
mov
xchg
cmpsl
add
ror
psadbw
repnz
dec
xorb
subl
sbb
sahf
lret
test
pop
daa
popf
negl
jecxz
fnstenv
scas
fucom
fucomi
fisttpll
cli
mov
mov
jecxz
arpl
xchg
lcall
in
adc
test
adc
push
fimuls
movsb
mov
pop
popf
dec
ret
in
dec
push
mov
adc
xchg
out
scas
repz
xchg
out
inc
cmpsb
sub
mov
add
ds
jae
enter
lcall
divl
dec
movb
xor
inc
inc
adc
outsl
push
fldt
sbb
sub
and
inc
push
sarb
sub
pop
loopne
mov
cmpsb
sahf
lcall
in
push
cmp
outsb
mov
add
inc
pop
in
xchg
push
lret
add
or
popf
arpl
xlat
shrl
lret
cwtl
sub
xor
shlb
inc
mov
lret
push
icebp
in
dec
xor
loop
fsub
jne
in
pop
mov
stos
pop
lods
lahf
cwtl
addr16
inc
aaa
sbb
fcmove
mov
test
out
subl
pop
imul
adc
in
push
lods
out
and
pop
imul
add
xor
jb
insb
mov
pusha
fstpt
outsb
in
push
hlt
js
jnp
out
lahf
andb
lret
push
repnz
sahf
aas
jmp
add
sub
lret
ret
mov
adc
inc
fidivrs
sbb
sahf
aad
jb
in
sahf
imul
mov
sbb
movsl
ret
pop
imul
add
jnp
push
push
cli
es
lahf
mov
mov
cs
inc
adc
jl
cmp
jmp
lods
arpl
pop
js
sbb
loope
or
xorb
test
or
ret
dec
mov
outsl
jmp
jo
int
sbb
int
and
jmp
enter
jae
sub
push
xor
or
loopne
xor
clc
dec
mov
fbstp
lcall
mov
ljmp
lcall
clc
dec
xchg
jle
stc
rol
sbb
lods
in
inc
imul
or
clc
or
stos
outsb
arpl
jle
sub
rcrl
fstps
in
leave
ret
mov
les
inc
mov
imul
cli
mov
add
add
dec
cli
and
xchg
push
lret
or
inc
jns
test
sarb
sti
out
dec
push
xchg
mov
jp
jg
mov
iret
xor
mov
pop
inc
jae
jge
shlb
push
cld
bound
dec
adc
push
ss
add
gs
scas
sbb
push
sbb
jecxz
dec
xorb
sbb
fimull
icebp
mov
push
and
xchg
into
pop
xor
das
sahf
mov
loop
or
mov
fsub
cmp
xchg
sti
or
cmp
xchg
inc
add
mov
add
movsb
stos
out
xor
hlt
daa
xchg
push
sarb
adc
xchg
pop
ljmp
not
icebp
jns
mov
add
and
jecxz
push
xchg
gs
dec
mov
and
xlat
sbb
divl
je
mov
xchg
pop
pop
dec
stos
addr16
xchg
xor
call
ret
lcall
call
sahf
addr16
push
cmp
cld
cmp
outsl
or
adc
push
xor
inc
mov
and
and
mov
out
and
cmpsb
inc
outsb
sub
push
lret
add
lea
ret
jp
mov
lods
add
jns
test
loopne
ret
shl
aad
add
cmp
fnstcw
in
loope
adc
add
dec
jl
adc
pop
out
rol
adc
fcompl
inc
js
mov
shll
xchg
pop
mov
adc
mov
jg
cmp
inc
mov
adc
fisttpl
pop
jne
jno
dec
dec
xchg
push
fistpll
or
and
fiadds
jp
push
pop
jne
add
jno
cmc
adc
les
mov
cmp
pop
stc
cmp
jge
mov
inc
nop
xchg
mov
fwait
addr16
push
xchg
pop
icebp
push
push
or
push
jmp
adc
popf
pop
ret
stc
out
fimuls
lcall
aas
xor
add
and
dec
mov
ss
fsqrt
and
cmp
xchg
icebp
mov
test
insb
lods
idivl
mov
mov
cltd
ss
stos
inc
stos
or
mov
dec
in
insb
pop
and
sub
and
jnp
sbb
cld
xchg
in
fs
test
push
inc
ja
xor
hlt
repnz
aaa
in
lcall
sub
popf
add
xchg
jns
ss
arpl
icebp
inc
das
pop
test
sub
push
jnp
jno
mov
jbe
push
xor
sahf
add
rolb
fdivl
addl
imul
push
dec
lcall
pop
and
bound
mov
push
xchg
mov
fldl
jb
or
mov
jecxz
ja
out
hlt
add
lods
mov
mov
xchg
imul
pop
add
rcll
in
into
dec
mov
fistl
mov
jno
jns
dec
add
fwait
sub
dec
cmp
out
repz
imul
or
mov
or
repz
cmp
pop
xchg
sbb
loopne
pop
xor
pop
add
sbbl
inc
sti
adc
pop
rcll
adc
repnz
mov
sbbb
into
xorb
jne
mov
mov
ret
and
fimuls
and
lret
mov
loopne
shl
xor
lock
and
or
xchg
addr16
cwtl
adc
mov
push
xor
lea
add
fildll
ja
xor
xchg
fstl
cs
scas
adc
xor
pop
inc
inc
shl
push
mov
hlt
pop
scas
orb
pop
fwait
icebp
xchg
sbb
xchg
and
add
xchg
push
push
and
out
pop
ds
sti
pop
xor
repz
scas
mov
mov
sbb
sub
sbb
int
punpcklwd
pop
dec
jmp
int
pop
je
movl
adc
mov
cmp
cmpb
pop
lcall
loope
push
in
push
xchg
xor
cmp
and
repnz
sbb
cwtl
and
pop
or
pop
cmp
dec
pop
mov
enter
inc
orl
pop
loop
adc
shll
cmpsb
popa
jns
popa
jne
mov
fisttps
test
in
mov
push
mov
addr16
ljmp
pop
dec
xchg
xlat
f2xm1
fidivrl
fstps
jge
push
add
test
outsl
cmp
sub
enter
je
sbb
scas
mov
add
lods
out
dec
sbb
jbe
fisttps
sbb
jae
pusha
ret
cs
push
test
in
aaa
mov
les
dec
mov
repnz
push
sub
pop
insl
mov
sbb
mov
inc
pushf
cltd
call
sbb
aas
stos
mov
shr
mov
punpcklbw
push
push
lea
jmp
ret
add
daa
icebp
into
pop
enter
mov
mov
std
aas
cld
out
test
loopne
inc
adc
mov
pushf
hlt
push
data16
leave
add
lahf
mov
jg
push
testb
adc
fs
dec
cmpsl
in
aam
je
aad
dec
jbe
mov
std
xor
jo
rcrl
repnz
in
rorb
test
cmp
sbb
mov
xchg
idivl
push
xor
pop
fildl
aas
je
sub
sbb
test
cld
cli
popa
cwtl
mov
nop
push
adc
inc
in
mov
mov
mov
jno
insl
arpl
mov
subl
sub
insl
lods
sbbl
fnstcw
mov
lahf
scas
jge
dec
ret
sbb
xchg
sbb
aas
iret
inc
mov
mov
shrb
jmp
int
mov
fstpl
fs
mov
jns
inc
lcall
shlb
and
fwait
test
push
aaa
xchg
dec
and
jmp
mov
lock
test
push
cmp
cmp
sbb
stc
or
mov
push
push
xchg
nop
and
scas
mov
sub
jecxz
inc
or
mov
push
or
rcll
cltd
jns
loop
xor
and
adc
mov
mov
xor
xor
cmp
popf
lock
mov
notb
push
xchg
arpl
jbe
popf
nop
sti
jge
insb
mov
lcall
sbb
fwait
add
push
mov
mov
dec
adcb
test
mov
xchg
dec
outsb
sbb
mov
cmpsl
mov
cld
push
hlt
cmp
mov
aaa
cs
pop
cmp
jmpw
mov
jg
jmp
mov
dec
movsb
out
ds
xchg
pusha
xor
jae
mov
jmp
push
leave
test
add
pushl
out
sbb
scas
les
xchg
xor
pop
mov
lods
pop
ja
cmp
cwtl
call
stos
push
loope
lahf
ficomps
testb
stos
das
shl
ret
xchg
cld
or
rol
dec
xor
movsl
fdivp
stos
mov
jb
sbb
adc
stos
add
lret
sub
sub
cli
mov
xor
cli
in
xor
lahf
pop
mov
daa
inc
ds
dec
cmpsb
mov
outsb
jae
inc
fiadds
push
mov
push
movsl
mov
call
cs
stc
loop
dec
push
test
add
dec
jnp
int
cli
ljmp
mov
mov
cli
cmpsl
movsl
movsl
or
loop
jg
into
sahf
mov
xor
mov
ja
dec
scas
lret
out
lods
push
cmp
outsb
xorl
pop
sub
inc
test
jne
pop
mov
in
xchg
ljmp
or
mov
cmp
adc
hlt
push
xor
or
push
repz
mov
aaa
cld
add
scas
bound
mov
jno
mov
in
adc
lods
test
jmp
test
gs
xchg
mov
jo
lock
aam
mov
addr16
mov
cmp
jnp
dec
bound
hlt
lock
xchg
loopne
into
add
rclb
lds
cwtl
adc
inc
cmp
mov
call
out
shrb
xchg
adc
jge
inc
mov
xor
inc
andb
push
push
xor
int3
cs
dec
sbb
pop
ljmp
push
cmp
shlb
jbe
das
jecxz
and
decl
stos
inc
rcrl
xlat
add
cmp
dec
fistpl
fsts
push
sbb
mov
sahf
push
or
cmp
inc
lea
and
sti
div
test
daa
cmp
push
lock
mov
lret
fmull
xor
leave
cmp
aas
and
cmp
xorb
ljmp
imul
mov
mov
mov
js
sbb
mov
mov
mov
sub
test
pop
sub
daa
out
insb
sub
pop
icebp
jne
stc
push
xchg
jb
addr16
lss
mull
adc
out
movsl
push
inc
inc
xor
mov
jp
into
insl
dec
or
jl
jp
aas
scas
pop
add
cmc
push
jmp
nop
mov
enter
adc
pop
inc
pop
xchg
xlat
stc
push
out
ljmp
cwtl
or
lret
and
sti
mov
ffree
fidivrl
dec
mov
shl
das
jle
sahf
movntps
mov
int3
sbb
adc
and
lods
pop
adc
mov
xchg
push
xlat
shr
sbbb
outsb
cmp
adc
xchg
xor
fldl2t
push
icebp
movsl
lret
fs
adc
adc
not
lds
out
cmp
orl
popf
mov
adc
mov
test
popa
repz
jge
adc
clc
cmp
insb
ret
mov
mov
xor
ljmp
aam
loopne
pushf
lds
pop
test
in
sub
inc
cmp
inc
mov
add
xor
mov
push
cmpsb
cmc
push
jns
loopne
sbb
ja
rclb
jb
jmp
cmp
push
mov
ljmp
mov
inc
enter
loop
test
pop
popa
fmull
stos
enter
aas
sbb
lods
aaa
xchg
add
add
add
mov
ror
cmp
xchg
mov
icebp
and
jl
arpl
imul
arpl
mov
loopne
int3
dec
mov
pusha
mov
lret
test
push
mov
out
mov
in
push
pop
xor
mov
lds
and
mov
test
int
push
dec
sbb
pop
dec
mull
fstpl
xor
dec
in
mov
lahf
cmp
imulb
ficoml
add
push
ja,pt
int3
dec
jae
cmp
adc
jo
inc
jecxz
mov
fcoms
in
xchg
aam
test
xchg
mov
ljmp
cmp
scas
jo
sbb
adc
mov
test
ret
dec
pusha
add
push
pextrw
mov
dec
xchg
mov
jmp
notb
jmp
or
lret
pop
mov
push
xor
testb
push
xor
xchg
or
mov
or
jmp
sbb
es
test
arpl
push
sarb
clc
lret
js
inc
mov
xor
adc
loope
xor
mov
cmp
repz
xor
xor
push
jge
test
int3
cltd
popf
mov
sahf
das
inc
fbld
sub
pushf
in
or
dec
sub
mov
ja
icebp
fildll
popf
mov
mov
mov
insb
jae
mov
jge
mov
add
adc
filds
or
imulb
pushf
cmp
adc
mov
xor
push
jmp
xchg
or
insb
push
push
std
daa
in
jg
inc
or
add
pop
iret
div
shll
arpl
test
insl
push
mov
mov
inc
sbb
jb
xchg
mov
or
jecxz
inc
or
push
ja
popa
rcrb
ret
aaa
decb
add
or
repz
lock
adc
pop
adc
jne
xor
fcmovnb
lock
es
ljmp
test
lods
xchg
mov
lret
mov
lahf
shlb
lea
xor
mov
jo
stos
push
mov
loopne
dec
test
pop
pop
and
mov
mov
xchg
int
clc
jnp
xchg
xor
add
dec
jecxz
mov
movsl
jge
into
int
dec
xor
cmp
jns
enter
cmp
vmread
in
push
xchg
and
dec
push
ret
mov
arpl
sbb
push
jecxz
xchg
rclb
pop
fisubs
xchg
fwait
jb
iret
cmc
imul
jae
mov
jno
inc
cmp
jno
adc
sbb
xor
data16
inc
jg
jo
fdivrl
jno
idivl
fistl
push
xchg
adc
and
fiaddl
gs
sarl
inc
rolb
inc
cmp
out
loopne
mov
addb
pop
dec
int
sub
fs
fs
lock
mov
stos
mov
orl
or
int3
pop
popf
jp
fdivs
pop
push
sahf
jnp
jg
cmp
xchg
rorb
add
xor
pusha
and
stos
stc
cmp
or
movsb
daa
cmp
mov
cmp
stos
lcall
mov
test
and
cwtl
pop
sbb
and
rcll
ljmp
stos
mov
fmuls
int3
jle
rcl
push
push
aad
testb
cli
dec
mov
xchg
insl
and
loopne
aaa
ss
inc
in
mov
clc
push
lret
fiadds
xor
add
out
sub
jg
inc
or
cs
mov
push
mov
in
rcrl
shll
pop
leave
in
jp
mov
xlat
aaa
fld
popf
cmp
mov
xor
sub
xchg
sub
stc
xor
jns
inc
jge
sahf
ret
jae
adc
les
pop
scas
cli
mov
addr16
jae
loop
fwait
jb
shll
rcrl
es
in
add
fistpl
mov
dec
fisttpl
je
jne
dec
cmp
outsl
js
les
sbb
xchg
imul
stos
mov
pop
loop
hlt
mov
aad
add
mov
or
sbbl
ds
hlt
std
sub
into
into
iret
adc
out
cli
mov
xchg
out
mov
sbb
or
cmp
and
dec
aad
cmp
dec
adc
mov
popa
dec
pop
push
mov
mov
stos
inc
push
pop
xor
pop
add
sahf
push
xor
loopne
arpl
mov
push
sbb
repz
mov
cwtl
mov
add
pop
test
decl
mov
sub
sbb
push
rcll
xchg
inc
inc
out
cli
mov
cmc
xchg
and
inc
dec
lcall
mov
mov
lods
leave
cwtl
js
pushf
sbb
rcl
nop
dec
cld
push
pop
lcall
xor
push
ret
inc
mov
addr16
es
push
lds
je
or
sbb
mov
stc
outsl
mov
inc
mov
dec
dec
xor
scas
add
dec
xchg
ret
add
add
bound
rolb
or
addr16
xlat
enter
jmp
out
in
jbe
adc
cmp
sub
shrl
add
xor
sbb
into
cmp
inc
push
dec
mov
sub
into
adc
push
into
jge
imul
ss
cltd
fwait
popf
mov
loope
aas
mov
movsl
cmp
stos
and
insl
test
int
dec
mov
adc
mov
mov
inc
sub
push
rcl
xor
push
mov
cmp
push
scas
dec
jg
iret
xor
pushf
xchg
hlt
mov
aaa
xchg
mov
sub
dec
notb
jb
jne
mov
mov
and
or
pusha
hlt
mov
int
bnd
ja
fldenv
mov
sub
jne
hlt
mov
jmp
sub
outsb
out
aas
xlat
pop
pop
push
sub
loop
inc
popf
mov
stc
inc
mov
int
push
sub
mov
roll
daa
jg
push
cld
mov
movsl
dec
fsts
push
test
or
test
repz
mov
les
shlb
shll
imul
test
movsb
add
cmpsb
out
or
leave
adc
shr
mov
or
les
fcoms
sbb
and
jecxz
jge
into
bound
movb
repnz
xlat
shlb
push
mov
push
cwtl
sbb
in
push
adc
or
das
and
jbe
dec
mov
inc
dec
out
int
push
sbbl
mov
mov
icebp
pop
arpl
xchg
push
and
inc
inc
mov
xor
push
hlt
out
daa
int3
or
xor
push
ret
cmp
iret
xchg
mov
sbb
inc
xchg
leave
ss
mov
add
push
mov
and
pop
mov
int
sub
dec
roll
and
xchg
jmp
push
rorb
adc
icebp
insl
sub
adc
pop
mov
cmp
sbb
aad
add
pop
pusha
jno
pusha
ret
dec
stos
or
adc
sbb
sbb
pop
scas
adc
push
pushf
cmp
xchg
mov
out
movsb
cmp
mov
sbb
xchg
push
incb
imul
cmp
out
adc
lret
movsl
adc
movsb
fiadds
or
sbb
jge
stos
arpl
mov
fldcw
cwtl
add
and
adc
pop
push
jns
cltd
push
rorb
push
inc
roll
sbb
in
dec
mov
jle
sbb
div
sbb
ljmp
xor
mov
mov
stos
sub
imul
push
dec
scas
movsb
or
pop
mov
mov
loope
push
pop
and
sbb
xchg
add
push
f2xm1
pop
push
mov
jp,pn
and
repz
and
loop
aas
rep
pop
repz
or
adc
fsubrs
leave
outsb
rcll
in
pop
pop
stc
out
cmp
int3
insl
adc
stos
mov
loop
nop
and
in
push
pop
and
xchg
sar
dec
xor
push
imul
test
push
sbbb
sbb
rorl
cmp
in
shll
iret
outsb
cmpsb
ljmp
cs
adc
pop
out
sub
in
mov
dec
cs
jne
test
dec
lcall
inc
sub
push
imul
ljmp
cmp
or
cmp
push
jmp
push
push
push
lret
iret
xchg
adc
fnstcw
jp
les
aad
jle
lods
ljmp
adc
jns
incl
jno
push
repz
decl
xor
adc
aam
or
jmp
bound
push
jg
pop
adc
and
aaa
xchg
mov
ds
sub
push
cld
xchg
movsb
mov
mov
fildll
mov
lods
aaa
nop
mov
stos
movsl
push
jo
and
or
sarl
pop
lahf
sbb
mov
int
mov
mov
pop
loopne
hlt
ja
cmp
addr16
push
ret
movsl
or
pop
outsb
inc
pop
fildll
xchg
iret
or
jno
dec
mov
xchg
add
inc
and
or
js
test
insb
movsl
sub
mov
fwait
popf
dec
mul
xchg
movsb
jge
mov
lret
inc
imul
repz
mov
push
mov
add
pop
mov
lock
cmp
cmp
jbe
jb
out
cmpsl
ljmp
icebp
data16
jbe
movsl
mov
int
and
outsb
cld
push
popa
jns
arpl
vunpcklps
pop
loopne
shrl
punpckhbw
ljmp
add
icebp
lret
push
push
int
adc
jne
adc
jg
sub
mov
testl
jae
adc
sbb
add
popa
xchg
adc
jecxz
aaa
sbb
dec
aam
mov
cmp
jne
add
jge
xchg
sbb
cltd
repz
imul
clc
imul
xchg
xchg
push
pop
push
push
mov
fcoml
inc
in
lods
jp
icebp
pop
cwtl
dec
xor
loop
ficoms
ja
dec
movl
test
jmp
push
push
imul
mov
es
aas
repnz
pop
sub
data16
scas
imul
popa
lret
xchg
in
adc
push
inc
xor
xor
pushl
or
gs
in
mov
call
adc
jg
xchg
sub
cs
mov
pop
mov
pop
push
movsb
ljmp
shrl
sbb
fcoml
adc
xchg
std
lcall
push
jnp
mov
psubw
leave
out
or
and
inc
addl
scas
aaa
fnstenv
pop
push
mov
lcall
push
imul
pop
adc
xchg
cwtl
mov
inc
jbe
mov
outsb
pusha
lret
mov
mov
es
aad
iret
in
ret
sbb
inc
xchg
push
mov
xchg
notl
lahf
sbb
push
or
dec
sbb
jmp
aad
es
data16
mov
pushl
mov
dec
xchg
and
insb
jnp
or
mov
pop
push
pop
mov
xor
bound
pop
xor
push
jge
mov
push
cld
and
jmp
test
cmp
or
pop
jp
xor
mov
repnz
ss
ficompl
jmp
push
and
mov
sti
adc
stos
int
mov
dec
jbe
pop
pop
jae
inc
xchg
xchg
cmpsl
les
inc
call
ret
mov
outsb
mov
imul
jle
xor
addr16
outsl
mov
lds
push
add
out
adc
cmpsl
leave
cmp
test
pop
nop
inc
fistps
call
mov
pushf
pop
add
or
int
movsb
ret
jns
test
neg
lcall
inc
push
mov
lea
pop
mov
cmc
fisttps
lock
and
pop
adc
adc
int3
jbe
out
xchg
movsl
push
sahf
cwtl
rorb
inc
adc
dec
mov
fptan
jl
push
sbb
cmp
push
push
dec
lods
ret
and
inc
push
adcb
lcall
or
push
jb
xor
into
jmp
push
pushf
jbe
push
iret
or
add
lahf
mov
sub
pop
fbld
popa
in
movsl
pop
inc
fcmove
push
rol
pop
pop
mov
pop
mov
pop
decb
pop
xchg
inc
aad
or
aas
and
dec
fsubrs
jg
fistpl
ret
push
daa
sti
lock
jmp
out
mov
fmuls
insl
jle
in
inc
cmp
jle
ja
or
add
adc
inc
add
cmpb
iret
jecxz
xchg
xor
cmp
stc
insl
pop
fisubs
mov
inc
dec
fiaddl
loop
push
pop
repz
popa
fcompl
lods
jge
sbb
pushf
add
add
movsl
mov
inc
sub
into
aaa
jnp
mov
push
hlt
mov
decl
scas
lock
aad
jnp
neg
dec
pop
jnp
and
jns
es
into
movsl
test
out
jnp
mov
inc
jle
into
xchg
mov
dec
das
jnp
loope
xchg
out
fdivrl
push
pop
dec
xchg
xor
lahf
stos
cmp
gs
dec
adcl
dec
jmp
push
in
or
xchg
pop
loope
mov
mov
cmp
or
stc
adc
mov
lods
dec
testl
rorb
pusha
add
add
xor
outsb
and
test
xor
insl
int
ss
mov
mov
pop
jmp
stos
sahf
divb
clc
mov
xchg
mov
pop
and
data16
lock
cmp
lock
mov
push
test
cwtl
std
cmp
xchg
or
inc
cmp
mov
xchg
ja
cmp
cmp
ja
mov
xor
mov
sub
or
dec
int
jo
and
pop
add
les
imul
jle
sarb
push
or
xorb
cld
xchg
sarl
fwait
sub
das
pop
inc
cli
mov
daa
sbbb
xlat
and
jge
jp
outsb
sbb
cmp
mov
movsb
sbb
test
mov
cltd
nop
sbb
push
lret
mov
dec
mov
and
lret
dec
clc
dec
jbe
sbb
hlt
mov
dec
sti
adc
jno
pop
adc
push
in
in
mov
hlt
adc
dec
push
in
les
sbb
gs
enter
cli
pop
cmp
pop
aam
xchg
pop
pop
loope
imul
orl
rolb
xor
sbb
pop
xchg
pop
outsb
mov
sub
push
jne
std
xor
outsb
xor
iret
push
jae
popa
xchg
into
pop
push
xor
loope
adc
and
in
add
test
aad
sub
fwait
push
lds
fs
je
push
or
mov
jecxz
mov
das
clc
jnp
mov
pop
jl
push
ja
leave
mov
cmp
jle
mov
sar
jns
add
mov
dec
mov
adc
cmp
mov
cmp
or
loopne
imul
adc
jno
cmp
adc
fiadds
pop
dec
test
pop
dec
adc
sbb
test
add
inc
mov
push
pop
xor
in
popf
jl
and
or
pop
loopne
ds
push
cmpsl
adc
sbb
in
inc
and
in
mov
and
iret
xchg
push
mov
sub
pop
in
xor
or
adc
fwait
je
sub
xchg
sub
jns
mov
inc
push
xchg
lahf
xchg
xor
xchg
shl
and
aas
dec
cmp
adc
push
pop
adc
mov
add
mov
xor
push
push
arpl
add
sbb
xchg
cltd
sbb
movsl
xchg
ss
sbb
icebp
inc
dec
nop
sbb
sahf
add
dec
pop
fdiv
inc
push
stc
mov
or
sub
mov
aaa
mov
aas
out
add
adc
sub
add
cltd
mov
cltd
test
sub
aad
ljmp
and
lods
xorl
push
fsts
push
fcomip
and
popf
push
push
js
outsb
fsubrs
and
decl
ss
loopne
inc
adc
imul
mov
cltd
sahf
and
push
adc
and
cltd
fucom
outsb
jo
in
cwtl
adc
fisttpl
add
ret
pop
rcrb
push
sub
rclb
cmpsb
vcmpss
notl
sub
jns
js
movsb
jp
lds
mov
iret
rolb
into
inc
adc
repz
dec
out
mov
out
addb
mov
nop
or
cmpb
shrl
cmp
aam
and
mov
shlb
xor
xor
pushf
add
stos
arpl
pop
jns
mov
jge
sbb
pop
lods
push
gs
std
call
enter
cmpsl
test
mov
cmc
push
sub
dec
cmp
adc
dec
mov
inc
mov
in
mov
loope
dec
cmp
aad
out
xchg
mov
fisttpl
xchg
test
sahf
inc
xchg
lods
outsb
cltd
loopne
push
sbb
rolb
stos
or
mov
inc
jge
jl
jne
nop
push
lea
popa
mov
and
repz
enter
jmp
enter
fisttpll
lods
stos
enter
gs
pop
xor
aam
adc
loope
clc
ret
ds
adc
sub
aam
mov
and
stc
jne
mov
jp
xchg
fnstenv
jne
and
jge
jne
fstpl
insb
test
mov
scas
push
invd
dec
insb
xchg
or
push
out
leave
aam
shlb
sti
sub
rol
shlb
add
or
mov
mov
insb
addl
xchg
fwait
pop
test
sub
mov
pop
or
add
add
mov
xchg
test
push
xchg
das
push
outsb
stos
fwait
xor
cmp
pop
sbb
in
pop
mov
repz
out
fdivrl
and
mov
imul
lds
dec
out
jnp
lods
int3
mov
dec
push
push
mov
mov
xlat
dec
je
inc
ret
shl
mov
fbstp
xor
loop
cmp
in
dec
scas
mov
cmpsl
cs
imul
or
add
loopne
sub
imul
dec
cmc
lods
ljmp
es
frstor
or
sub
push
push
push
gs
pop
ljmp
test
inc
jo
fiaddl
pop
sti
cli
rorb
lock
lcall
pandn
cmpsl
add
loop
sub
out
pop
and
insl
out
out
ljmp
or
inc
cmc
pop
and
sbb
fsubl
outsb
xchg
stos
mov
mov
pop
leave
xlat
inc
dec
or
mov
movsb
jne
adc
cs
sub
in
mov
cmpsl
push
int
bound
js
rorb
cmp
jnp
imul
and
xchg
lret
pop
jge
push
out
add
xchg
and
jae
jno
inc
jle
add
imull
mov
sbb
shlb
xchg
nop
psrlw
lds
xchg
addr16
movb
out
ss
arpl
cmpsl
popf
jb
dec
ficoml
icebp
andb
and
pop
xlat
mov
es
jno
cmc
mov
jecxz
xor
cmpsl
add
push
and
xorb
sti
xchg
and
cld
out
bound
ret
outsb
sub
and
sbb
adc
sub
pop
lea
sub
mov
adc
bound
int3
cwtl
sub
imul
sub
lds
jne
loop
mov
popf
xchg
loop
pop
sub
xchg
or
cmp
dec
leave
lea
sbb
bound
imul
sub
dec
xchg
es
movsb
out
and
push
bound
loope
imul
fbstp
movsl
pop
mov
stc
dec
imul
pop
jnp
bt
gs
adc
test
xor
js
add
ret
arpl
fstps
add
sahf
push
outsb
push
and
mov
pop
mov
int3
sti
sarl
add
repnz
out
movsl
bound
mov
xlat
xor
or
jg
scas
lds
js
jo
xchg
das
je
sub
nop
add
jne
popa
aas
push
add
cmp
loop
push
imul
sub
ret
cs
leave
add
sub
or
add
mov
mov
cmp
movsb
mov
mov
ret
cmp
stos
cmp
inc
mov
and
popf
dec
sbbb
insl
data16
jb
clc
lea
mov
es
or
sbb
push
mov
loope
dec
push
fimuls
mov
inc
iret
sahf
mov
add
ffreep
adc
fwait
popa
clc
fiaddl
or
popf
sti
js
nop
stos
hlt
cmp
cli
xchg
push
xor
and
or
js
mov
mov
loop
and
ja
ss
pop
fwait
jne
mov
mov
dec
loopne
mov
xor
mov
and
pop
in
xchg
mov
jbe
gs
aam
imul
mov
nop
sbbb
pop
mov
push
or
outsb
adc
push
mov
repnz
mov
in
or
fdivrl
mov
pop
scas
add
lret
adc
out
fcomps
mov
out
xor
divl
cltd
das
xor
cs
in
mov
push
dec
cs
scas
ret
xor
and
shlb
mov
xchg
mov
push
rolb
and
and
loop
ret
ss
jge
ljmp
ss
pop
cmp
push
add
mov
inc
shll
jl
cmpsb
cmpsl
jmp
and
out
jae
and
dec
jo
mov
jl
gs
pusha
clc
movsl
jnp
pop
xor
mov
adc
loope
lar
cmpsb
xchg
xchg
add
loop
cltd
cmp
clc
lret
fdivrl
testl
push
mov
cs
loop
daa
fldl
mov
jge
cs
in
in
shlb
lods
cmc
push
fndisi(8087
jnp
mov
mov
mov
mov
pop
stos
xchg
push
aaa
fisubrl
mov
in
xor
icebp
leave
es
movsl
notl
xchg
into
dec
cmp
sub
mov
lock
stc
enter
push
sbb
cmp
jae
pop
inc
aaa
scas
int
adc
and
and
pop
icebp
int
mov
xchg
es
cmc
add
pop
shll
sub
outsb
pop
add
dec
scas
fsubs
or
into
clc
mov
sub
cmc
arpl
shl
mul
fs
mov
xorb
push
adc
enter
test
shrl
xchg
mov
test
sahf
jg
push
xlat
call
leave
jg
das
sti
mov
fidivrl
adc
pop
sub
ss
pop
pop
test
and
into
add
lahf
mov
cmp
cltd
push
inc
cmp
mov
mov
mov
or
adc
mov
add
jl
in
and
jns
push
fimull
cmp
sub
cld
fidivs
push
loop
lods
and
jns
popf
xor
sub
inc
insl
out
int3
xchg
arpl
jl
cmpsb
dec
mov
scas
fisubl
push
cmc
shll
sub
adc
std
cmp
cli
scas
adcb
push
jg
dec
sbb
push
dec
outsb
xor
xchg
jo
mov
mov
and
loope
cs
repnz
xlat
cmp
hlt
outsl
loope
sbb
fidivrs
cltd
pushf
jge
in
lds
popf
popa
dec
xor
xchg
sub
aam
and
stos
dec
and
xor
fnstenv
jmp
clc
popf
cmpsb
and
movsb
sub
mov
mov
push
sub
mov
cmp
js
fcompl
jnp
jl
cmp
roll
pop
lds
icebp
shr
mov
mov
add
mov
xchg
add
mov
mov
jno
loop
xchg
imul
sbb
xchg
sti
xor
nop
rolb
in
mul
or
daa
push
sbbl
sub
jb
xor
movsb
pop
jmp
pop
fstpl
sub
jg
or
aas
pop
dec
jge
jnp
in
add
fadds
xor
push
pop
push
pop
fs
pop
in
popa
dec
add
sub
lock
push
push
push
insl
add
push
jno
sahf
or
mov
add
inc
sub
and
mov
mov
pushf
int
cmpb
sub
sub
xor
mov
add
fnstenv
sahf
fs
aaa
jecxz
pop
cmp
sbb
in
cmpb
dec
jmp
dec
pop
cwtl
fucomi
mov
sbb
lcall
nop
call
loop
je
cwtl
enter
jp
fcompl
mov
fwait
ret
mov
outsl
mov
push
jmp
cmpb
fimuls
jg
aas
mov
pushf
push
mov
mov
hlt
add
jp
jne
imul
dec
xor
call
cld
sub
or
imul
push
lods
lods
ss
fdivrp
sub
sub
popa
subl
negb
loop
sub
cld
imul
mov
mov
enter
test
sbb
leave
inc
lcall
or
cwtl
pop
mov
filds
lcall
cli
stos
lock
cmc
aad
fldenv
mov
xchg
lods
rcr
mov
push
nop
or
xchg
pop
push
leave
stos
fadds
xlat
sbb
cld
jns
into
cmp
pop
or
rol
xchg
cmpb
les
and
adc
in
std
pop
mov
xchg
pop
cmp
cmpsl
rorl
mov
mov
or
fwait
das
xchg
pusha
fldt
sub
pop
sbb
fildl
pop
sbb
or
cmp
dec
and
sub
mov
shlb
pop
cs
xor
mov
lret
shlb
sub
pop
ds
in
test
dec
mov
imul
mov
and
lret
mov
mov
lcall
xchg
sbb
jb
rcl
out
lahf
loop
bound
sub
inc
out
sub
inc
lcall
mov
push
xchg
sbb
sbb
outsb
push
xlat
adc
sub
mov
add
mov
sub
icebp
ja
xchg
ja
push
repz
inc
popa
out
mov
jmp
int
mov
bound
sub
dec
push
jns
imul
inc
call
sbb
mul
pop
rol
jmp
in
and
cmpsl
mov
mov
popf
jmp
push
mov
mov
pop
add
sub
and
call
in
lcall
aad
sbb
cmpsb
popf
or
pop
mov
xchg
push
cmc
xorb
sbb
pop
sahf
ja
sbb
pop
push
sbb
rcll
push
xchg
mov
ljmp
push
mov
fadds
cmp
push
lret
ret
fstpl
sahf
mov
iret
aad
gs
lea
sbb
add
mov
sbb
outsl
popf
rcll
jae
mov
jbe
pop
jge
or
push
imul
dec
add
or
jb
jmp
mov
call
mov
sbb
inc
bound
push
mov
daa
mov
outsb
fwait
add
fistpll
popa
frstor
iret
mov
shrb
aam
out
pop
imul
in
push
mov
cli
movsb
jge
dec
fs
stos
lock
fisttps
pop
add
sti
stos
mov
mov
xchg
add
out
data16
orl
jl
mov
jno
xchg
pop
loopne
sbb
add
xlat
imul
cwtl
cld
fldl
adcl
push
test
mov
das
push
data16
das
and
loopne
lcall
jp
rcr
push
or
pcmpeqw
movsl
pop
lret
cs
mov
loop
or
cmpsl
call
inc
adc
jo
mov
imul
jecxz
enter
and
mov
or
push
aam
in
std
bswap
stos
negl
jo
mov
inc
inc
pop
inc
sub
ret
push
add
rclb
cwtl
add
push
scas
fucomp
jbe
jns
jg
push
cmp
push
and
mov
fucom
popa
mov
lret
popf
and
push
fildl
jge
insl
outsl
in
xchg
movsl
insl
sub
sbb
imul
call
movsl
cli
mov
mov
scas
fsub
sbb
stos
aam
mov
cmc
scas
mov
fildll
adc
cld
adc
mov
int
das
daa
cmp
push
push
cmc
xchg
mov
xchg
mov
popf
int
and
ss
imul
push
push
and
cli
pusha
or
je
insb
xor
cltd
mov
xchg
pop
out
mov
adc
or
sub
sub
in
mov
nop
push
lods
repz
adc
push
or
xor
adc
xchg
cli
inc
sbb
notl
add
sbb
repz
mov
das
adc
dec
mov
popa
mov
and
and
add
jbe
ljmp
lds
stos
inc
mov
leave
loopne
pop
adcl
push
leave
pop
fsubrs
adc
jg
xchg
ss
pusha
push
xchg
xor
jecxz
pop
lds
divb
pop
xor
cltd
jb
jnp
and
aaa
out
dec
push
cmpsl
push
ja
rorl
jmp
sub
mov
imul
xchg
inc
ds
push
ret
push
and
jg
popl
jp
ss
inc
push
adc
call
repz
jecxz
jl
add
lcall
cmp
aaa
sbb
std
sub
shl
cld
add
insb
pop
mov
icebp
adc
pop
sbb
push
das
and
adc
xchg
dec
cli
xchg
fwait
aaa
jae
lea
jp
mov
sub
fcoml
xor
push
iret
stos
sbb
shrl
lret
test
adc
xor
fcomp
sbb
sub
lcall
aam
out
insl
cmp
clc
hlt
lods
pop
loop
inc
stc
or
xchg
push
or
dec
mov
sub
inc
hlt
sbb
sub
xor
cli
ss
and
add
push
lods
jnp
and
ret
mov
mov
add
inc
jbe
sbb
jae
mov
ljmp
mov
enter
xchg
xchg
xchg
xchg
xchg
in
add
dec
cwtl
iret
popa
ss
cmp
rcr
push
pop
add
mov
hlt
mov
test
pushaw
xchg
shlb
add
mov
jo
adc
lods
shrl
inc
cmc
loopne
cmp
adc
adc
fdivl
mov
shrb
lea
pop
xor
mov
aaa
scas
push
jne
sbb
imul
in
pop
call
and
sbb
push
jmp
jp
mov
int
in
xchg
stos
jae
xor
adc
xlat
xchg
in
icebp
push
lock
cmp
xlat
insb
mov
test
xchg
lds
mov
mov
sbb
repnz
insb
mov
or
sbb
xor
inc
adc
pop
andb
pop
cmp
adc
xchg
cwtl
sbb
add
mov
pop
inc
mov
stc
mov
add
dec
mov
xorb
jb
aas
ljmp
add
pusha
out
fistl
movsb
xchg
out
adc
xor
lock
inc
fmull
xor
in
test
xlat
aam
scas
lret
sub
mov
lods
cmp
pop
mov
xchg
cli
insl
ficoml
xor
mov
sbb
xor
insb
mov
xchg
out
cmp
adc
jmp
push
xor
in
jg
mov
sbb
push
and
scas
mov
in
lret
ror
jecxz
inc
daa
je
jbe
jl
sbb
jg
push
sarl
lcall
pop
inc
pop
pop
mov
fmull
stc
push
mov
or
fdivrl
lock
mov
pop
cli
lcall
aad
dec
add
xchg
jnp
fcomps
mov
pop
mov
fidivl
out
pop
dec
xor
int3
call
push
stos
adc
push
leave
imul
lods
addr16
cmp
lret
loopne
loop
add
xor
push
lea
mov
adc
pop
in
push
mov
adc
mov
rorb
popf
pop
outsb
popf
inc
cmp
mov
cmp
xchg
xchg
mov
leave
fisubrl
mov
inc
or
or
sub
inc
sahf
or
sub
jns
insb
jp
fdivp
fisubs
mov
sti
cmp
imul
scas
int
jmp
test
mul
and
enter
cmpsl
xchg
or
mov
dec
or
and
add
or
fcomip
mov
jo
out
rorb
loope
testl
adc
in
cmp
sbb
loope
sub
adc
leave
sub
dec
and
lret
sub
jp
jo
push
lahf
push
daa
outsb
and
mov
sahf
mov
xor
sahf
mov
mov
inc
stos
stc
jne
mov
or
push
add
ds
mov
std
or
push
iret
pop
ret
lock
mov
pop
dec
loopne
pop
add
inc
sarl
or
add
and
or
dec
rclb
mov
sub
jnp
or
ficomps
xor
xchg
loope
xchg
popl
test
mov
into
mov
add
sub
sub
in
hlt
cmp
and
xor
loop
scas
push
lea
mov
sbb
aas
lods
fcmovnu
fcmove
jo
mov
out
leave
and
adc
mov
mov
jne
inc
pop
pop
ss
or
push
je
fstpl
dec
xor
das
outsb
shr
imul
mov
lds
dec
lret
push
pop
dec
jbe
xchg
shrb
movsb
cltd
xchg
cmp
addr16
adc
iret
dec
mov
out
inc
mov
and
outsl
js
mov
icebp
hlt
jns
mov
imul
xor
jg
popf
movsb
pop
scas
lret
xchg
mov
xchg
inc
sub
lods
je
xor
loopne
push
call
dec
add
dec
and
push
cmp
pop
ret
jo
add
cmp
xor
insb
add
fnstenv
inc
jbe
out
or
push
push
dec
lahf
sahf
cmp
in
jle
daa
into
inc
pop
fistps
sub
insl
in
std
das
fcoml
lea
mov
mov
jge
loop
rorb
push
jnp
pop
rcrl
lcall
scas
add
repz
js
jno
xchg
mov
pushf
shrb
xor
stos
inc
pop
mov
aad
test
addb
addr16
and
mov
add
jge
mov
lea
mov
adc
outsb
inc
mov
xchg
into
cmpsl
adc
dec
stos
mov
loope
roll
push
fwait
test
sub
xchg
mov
shll
shlb
fsubrl
lret
movsl
cwtl
hlt
std
shlb
push
cmp
push
mov
in
mov
jo
cmp
push
and
data16
pop
sbb
push
xlat
test
push
add
push
mov
lcall
dec
fcomip
mov
pop
lock
jg
bound
bound
std
aam
test
xchg
daa
enter
push
xchg
cmp
pop
or
inc
in
mov
int
aaa
js
cmp
rep
negb
dec
cmp
clc
and
mov
xchg
pop
pop
loop
jmp
push
js
int3
aam
out
loope
jns
sub
adc
sub
les
mov
lcall
stos
je
imull
cmpsb
xor
shlb
or
xor
adc
and
shlw
repnz
pop
out
outsl
pop
push
hlt
adc
mov
inc
inc
lcall
cmp
pop
push
js
add
pop
aaa
cmp
scas
add
dec
jge
sub
mov
shrb
pop
sahf
jg
cld
roll
insl
or
in
ret
pop
testl
jb
jle
cmp
roll
cmpb
in
jns,pt
pop
lods
xor
mov
adc
out
jl
mov
push
mov
mov
sub
and
fsubrs
fistl
out
add
cmp
xor
ret
leave
fildl
repz
inc
cmp
rclb
sub
into
js
fwait
push
jnp
lods
rolb
xor
jle
sbb
cmp
and
pop
add
adc
lret
and
nop
aaa
sbb
adc
and
sahf
cli
daa
cs
sbb
sbb
dec
pushf
lcall
lcall
mov
repz
mov
ds
sub
popa
sub
mov
rcrb
jp
inc
popw
mov
sarb
add
xlat
je
cmp
push
push
and
mov
cmp
hlt
xlat
das
cmp
arpl
add
ret
mov
lods
insl
dec
mov
xorl
aaa
cwtl
adc
imulb
mov
aad
cmp
sbb
ficomps
push
ds
rcr
jge
fwait
pop
fwait
add
ret
xchg
sub
ret
das
mov
test
and
cwtl
imul
dec
fisttpl
pop
inc
push
cmp
inc
filds
sub
push
insb
cmovae
adc
dec
es
shll
pop
sub
test
and
fsubs
inc
notb
lret
push
call
pop
sub
ja
add
mov
jge
cmp
test
xchg
ds
sbb
lret
icebp
mov
cmp
fbstp
arpl
push
dec
fstpl
xchg
in
mov
in
and
cli
enter
jno
call
bound
xchg
xchg
mov
mov
cmp
and
sbb
xor
iret
mov
js
ret
push
dec
inc
divl
shr
outsl
movsl
sbb
xlat
aaa
mov
push
dec
push
dec
mov
xlat
je
out
and
outsl
into
inc
add
stos
lret
jmp
jae
mov
xchg
insb
add
xor
bnd
test
pop
insb
mov
pop
addl
shlb
or
pop
in
lds
cmc
js
lret
mov
out
sub
add
mov
rcrl
icebp
rorl
add
je
out
mov
sbb
es
mov
mov
xchg
sub
bound
push
mov
xchg
in
lods
mov
arpl
movsb
sbb
das
daa
cmp
cs
scas
jmp
inc
ret
loop
xchg
jnp
adcl
jp
jns
push
push
incb
push
sbb
dec
dec
cmpsl
jnp
cwtl
jmp
push
push
adc
cs
fnstsw
rcrl
orb
sub
mov
push
outsb
repnz
mov
xchg
out
fwait
outsl
mov
and
jge
xchg
ret
sbb
mov
cmp
sub
dec
push
mov
mov
and
add
in
sub
pop
mov
dec
icebp
pop
hlt
out
mov
nop
rolb
stos
xchg
movsb
cmpb
adc
pop
and
shll
daa
test
adc
adc
enter
cmc
or
and
pop
or
popf
push
and
push
push
mov
cmp
xor
sub
pop
sbb
and
mov
call
adc
movsb
push
mov
mov
push
out
fs
jnp
addl
icebp
js
inc
add
lds
into
mov
int3
loop
cltd
insl
push
adcb
and
fildl
insb
add
pop
test
in
jl
xchg
xor
iret
and
or
orl
and
inc
jle
cmp
es
aam
adcl
jecxz
and
ret
push
ficompl
mov
insb
movsb
ja
pushw
add
adc
aad
lods
rolb
ret
xchg
inc
loope
dec
es
xlat
xorb
mov
push
outsl
and
mov
fs
jge
fdivrl
inc
lds
lods
cmp
sub
jnp
and
mov
sub
mov
out
or
fnstcw
adc
dec
pop
rcrl
std
and
add
rcll
or
std
cwtl
mov
xchg
push
cmpsb
xor
aam
add
cmpsb
pop
xchg
popf
xor
pop
je
add
inc
insb
jmp
out
pop
sub
or
jg
stos
xlat
int3
call
cmp
testb
mov
test
shrl
jmp
call
dec
jb
mov
sub
cmp
or
aaa
adc
nop
stos
ss
popf
inc
sbb
hlt
pop
xchg
aad
push
adc
ret
cmpsb
jl
clc
into
inc
sbb
out
pop
int3
xorb
shlb
jae
ljmp
pop
ret
pop
xchg
mov
sbb
push
cmp
outsb
sub
ds
mov
add
add
mov
xor
sub
jmp
push
or
rcr
dec
jne
jne
mov
pop
into
xchg
loopne
lret
in
fisubs
imul
sub
xchg
jg
push
loope
js
test
and
mov
ret
cwtl
stc
xchg
xor
and
mov
aam
movsl
sub
pop
xor
xlat
mov
push
and
pop
xor
enter
mov
loop
outsb
inc
test
push
jl
int3
or
jae
test
cld
in
xorb
xor
ds
inc
fldenv
mov
pop
add
incl
outsb
add
pop
or
jmp
mov
push
inc
sbb
cmovle
and
xchg
std
loope
mov
push
push
jnp
sti
xchg
fildll
sti
inc
insl
mov
cmp
cmpsl
xor
ss
cmp
add
push
mov
sbb
jne
sub
sub
rorl
lods
sbb
lods
sbb
add
in
rorb
mov
aaa
cmp
pop
into
or
jnp
pop
aaa
jo
ror
pop
std
popf
mov
pop
mov
mov
push
push
jne
rcrl
cmpsl
sbb
fdiv
sub
sbb
jne
jge
sub
xlat
cmp
adc
jne
pushf
dec
shrb
test
ret
arpl
pushf
mov
daa
push
xchg
dec
icebp
xor
dec
icebp
inc
adc
and
dec
mov
sarb
xor
and
cmp
xor
clc
push
into
pop
decb
pop
les
inc
cld
daa
dec
mov
mov
mov
shlb
cmp
das
addb
add
and
pusha
mov
sbb
lods
daa
mov
mov
div
cmc
sub
ret
xchg
xorl
push
fdivl
or
shlb
fs
cld
xor
jb
outsl
in
push
cwtl
out
pop
rol
imul
and
inc
cltd
outsl
les
popa
jbe
fisubl
rolb
adc
mov
adc
sbb
dec
xor
hlt
aas
xor
popa
fildl
sbb
test
mov
btc
xor
outsl
jb
js
cmpsl
xor
mov
add
cmp
sti
mov
jmp
pop
aam
and
cmpsl
xchg
fildl
lahf
add
lret
pop
insb
mov
lock
xor
and
push
arpl
in
lds
jl
xchg
push
and
cld
sbb
cmp
sub
mov
gs
xchg
adc
test
cmp
test
lahf
adc
mov
mov
add
popf
mov
jl
push
lock
iret
and
mov
jmp
ljmp
nop
adc
and
cltd
movsb
mov
mov
and
lret
jl
outsb
adc
pop
pop
xor
jge
cli
test
mov
or
fcmovb
jecxz
mov
out
push
sub
cmpl
pop
insl
mov
test
mov
mov
shll
repz
mov
mov
mov
cmp
mov
cs
in
into
pop
subb
jmp
mov
test
sti
fsubrl
jge
mov
loop
cmp
or
leave
test
sti
jp
fcompl
movsb
ja
jl
push
sub
dec
repz
jmp
inc
ds
int
jno
inc
lds
test
mov
dec
mov
inc
movsd
hlt
fnstcw
inc
leave
xlat
add
mov
cmpsb
loope
mov
mov
jbe
pusha
fistpl
mov
xor
jne
insl
not
inc
push
data16
das
or
push
pop
test
lahf
jb
cmp
sub
push
sbb
fidivl
mov
push
push
lret
dec
push
mov
and
loope
push
push
andb
out
sub
push
adc
test
adc
push
leave
mov
dec
mov
inc
sub
mov
or
rol
jp
xchg
jmp
in
sub
xor
test
xchg
sub
shrl
xor
push
inc
mov
cltd
shll
insb
sbb
jecxz
sub
cmp
xor
iret
push
cld
sahf
adc
dec
pop
sub
mov
mov
fcoml
push
mov
xchg
sbb
lahf
lcall
push
inc
jecxz
movsb
outsl
adc
roll
pop
sahf
mov
loop
in
aas
inc
xchg
xor
scas
pop
fs
sub
repz
dec
cs
adc
popa
es
mov
lds
xchg
push
jns
push
ret
mov
fcom
cwtl
cwtl
sub
fildl
lods
xlat
sub
xor
inc
ret
imul
scas
in
xchg
pop
adc
push
js
sbb
lods
fwait
sarb
sub
iret
xchg
in
jae
mov
fnstcw
push
pushl
dec
cld
pop
sti
icebp
mov
push
out
stos
add
dec
push
inc
xchg
mov
jbe
jb
pop
cmc
pushf
enter
lret
ds
sub
lock
inc
in
es
subb
cli
arpl
lock
js
cmp
lods
push
sub
dec
movsl
and
int
dec
add
sets
mov
adc
sub
pop
stos
xchg
aam
cmp
ret
sarl
jo
sbb
popf
fs
enter
dec
mov
out
mov
jno
in
scas
adc
xchg
sub
dec
cmpb
cmpsb
pop
lcall
out
sbb
xchg
inc
cmp
fisttpl
mov
mov
cwtl
stos
aam
mov
sub
mov
push
mov
push
jmp
popf
js
mov
xor
sub
testl
sbb
dec
inc
mov
aam
nop
aas
push
pop
xor
pop
pop
mov
adc
mov
lret
cld
or
idivl
lret
jne
and
sahf
pop
adc
test
xchg
xlat
aas
inc
xchg
fdivrs
sub
xlat
adc
ret
jns
sub
test
mov
push
cmp
fsubs
mov
stc
mov
popf
dec
pop
fcomps
xchg
pop
push
inc
ss
es
sub
rcll
cli
cli
popf
push
dec
xchg
icebp
sahf
std
aad
xor
insl
dec
xor
popf
push
mov
adcl
mov
imul
mov
mov
mov
daa
loopne
dec
fcompl
mov
sbb
inc
pop
test
cs
push
dec
push
pop
and
test
sub
out
fbstp
mov
jb
sub
lock
mov
jle
jno
and
jge
fwait
das
add
pop
clc
or
shl
jecxz
out
daa
outsb
in
mov
mov
sub
stos
push
stos
push
out
stc
dec
ljmp
inc
popf
out
push
loop
in
in
pop
call
cmc
pop
lahf
repz
popf
xchg
cmc
shlb
inc
popf
and
pop
js
aad
ret
xchg
out
inc
jl
std
aam
cmpsb
bound
xchg
push
fiadds
repnz
push
insl
dec
daa
mov
mov
jbe
dec
cmc
iret
mov
pop
js
addr16
push
adc
cli
mov
ret
lahf
mov
sbb
cmc
addr16
cs
adc
cmp
rcl
repz
xor
sti
fs
add
inc
dec
fisubrs
xchg
and
cmpl
int
lret
adc
or
scas
inc
mov
ljmp
inc
les
lcall
bound
dec
lods
imul
lret
addps
sub
cmp
inc
fisttpll
push
notl
or
push
out
push
outsb
rcll
cmpl
cltd
push
ss
sbb
sti
sub
in
cmp
lcall
pop
das
popf
testw
dec
in
jle
cmc
or
dec
or
inc
adc
mov
lds
dec
sub
fidivrl
repnz
push
movsl
adc
mov
jnp
fmuls
pop
aaa
sbb
jecxz
shll
rolw
shrl
pop
fistl
pushf
xchg
cmp
imulb
jbe
loopne
pop
int
pop
sbb
mov
outsb
push
rclb
xchg
cmpsb
mov
fs
repnz
mov
jbe
pop
adc
push
xchg
imul
inc
dec
jno
in
mov
lock
nop
hlt
frstor
lret
rorl
cwtl
push
push
lcall
sub
push
cltd
jecxz
mov
sbb
mov
jmp
sub
and
cmp
xor
or
inc
pop
popf
lea
pop
fldt
idivl
or
cmc
cmc
dec
enter
outsb
xchg
push
and
stos
sahf
inc
into
adc
leave
push
inc
ret
shlb
jno
mov
adc
stos
mov
or
mov
mov
mov
test
mov
fcoml
scas
jg
jmp
xor
test
sub
adc
mov
fcoms
xor
mov
mov
inc
mov
test
cmp
fcoml
stos
jmp
add
sbb
in
cmp
das
pop
rcll
mov
mov
add
test
xor
imul
cs
lock
mov
out
ja
push
les
movsb
xlat
in
dec
pushf
inc
or
daa
int3
jae
push
ficoms
sub
sbb
fisttpl
test
or
pop
data16
add
repz
inc
sbb
imul
sbb
xor
jbe
pop
pop
mov
sub
push
sub
lcall
mov
test
dec
mov
pop
loop
adc
nop
repnz
movsl
push
inc
shlb
ds
fs
inc
enter
push
push
mov
and
daa
mov
aam
outsb
cmp
nop
pop
std
push
out
rorl
pop
mov
mov
jg
adc
xor
scas
jle
mov
mov
das
sub
les
adc
mov
int3
mov
inc
xchg
jns
lods
cmp
idiv
ror
jecxz
gs
and
mov
loopne
sti
dec
lods
add
addr16
leave
jne
mull
and
mov
push
call
dec
push
mov
popa
and
mov
sub
dec
pop
out
testb
inc
mov
inc
arpl
xchg
fstpl
sub
and
cs
inc
sbb
cltd
es
out
xchg
getsec
and
pop
dec
or
ret
mov
dec
sbb
testb
mov
xor
int3
movups
xchg
push
aad
push
add
fcmovu
push
xchg
iret
test
dec
insl
hlt
cltd
in
dec
icebp
sbb
or
cld
lret
add
xchg
lea
mov
push
int
add
lds
jne
into
pop
ret
sub
push
xchg
in
rol
mov
insb
cmpsb
cmp
movsb
in
fstpl
xchg
dec
shlb
jbe
and
xor
and
jmpw
inc
incl
adc
imul
add
cmovnp
push
ret
ss
or
add
jbe
shlb
sbb
insb
cmp
stos
adc
mov
jbe
cld
push
test
xorl
loopne
mov
lods
xchg
mov
mov
sarb
ffree
mov
xchg
lods
add
test
jae
pop
fcmovnu
xor
pop
les
int3
movsl
stos
jno
or
mov
fwait
cmpsb
in
dec
push
pop
sbb
inc
push
xor
adc
shl
aad
stos
xchg
daa
loope
fildl
mov
inc
insb
cmpsb
dec
fs
sbb
in
jp
mov
sti
shl
rclb
cmp
out
jmp
add
mov
sar
and
and
cld
mov
cmp
and
movl
xchg
out
xor
insb
ljmp
xchg
inc
mov
and
in
mov
aaa
pop
imul
jecxz
stos
dec
cmc
fdivs
push
ret
stos
push
jnp
out
push
xchg
bnd
inc
scas
out
stc
xlat
xchg
lods
lea
fbld
mov
sti
mov
xchg
add
daa
fdivs
es
in
push
shlb
addl
stc
repnz
sub
leave
popa
inc
int3
pop
lahf
push
pop
nop
push
dec
cmp
inc
popf
lds
inc
ret
pop
xchg
insl
mov
xchg
mov
inc
orb
inc
ret
pop
ljmp
xor
jno
and
cld
js
adc
leave
xor
sbb
frstor
lock
push
or
sub
dec
jns
cmp
ror
cmpsb
aas
jne
rcr
dec
lcall
imul
addr16
adc
into
inc
dec
sarl
std
fldl
add
fs
cwtl
loopne
mov
sbb
cmp
fistps
int3
popf
out
pop
add
insl
sbb
and
out
cmc
xchg
pop
fcmovnb
popa
shrl
sbb
dec
mov
push
sbb
mov
rclb
add
mov
out
sub
dec
inc
or
dec
xchg
incb
lods
inc
fcomps
jmp
or
rclb
mov
shr
cmp
loop
mov
jne
andb
shl
xchg
xchg
lahf
stc
fnstsw
nop
ja
in
jl
dec
aad
xchg
cld
adc
lea
das
hlt
dec
sub
dec
fdivrs
or
pop
push
xchg
mov
mov
fdivs
lahf
push
das
inc
decl
cmp
fstps
ror
fwait
cmp
lods
jp
jp
and
jp
scas
enter
scas
cmp
leave
cltd
dec
mov
repz
mov
jns
bound
in
out
out
mov
mov
fsts
and
and
xor
imul
decl
icebp
add
and
lcall
dec
pop
ret
aas
aam
xchg
test
jbe
ficoms
popf
cmp
xchg
int3
xor
jns
xchg
adc
rorb
dec
pushf
iret
push
mov
out
leave
adc
shll
jae
std
and
push
xchg
jl
add
aad
jae
inc
ret
cmp
add
andb
mov
cmp
loope
rcrl
adc
rcr
repnz
call
fadds
lds
mov
mov
sub
in
leave
pusha
mov
pop
test
out
add
add
fs
sti
gs
cmc
enter
loop
sub
jo
out
pushf
arpl
push
jno
hlt
movsb
pop
inc
pop
shl
mov
jb
insb
ficompl
xchg
jnp
ss
into
out
cmc
or
orb
jg
xchg
cltd
xchg
in
sub
and
inc
std
movsb
mov
push
adc
icebp
stos
gs
lret
and
fmull
bound
ror
pop
ss
xchg
push
mov
bound
xchg
ret
fists
jge
cmp
adc
push
fisubrl
mov
xchg
xchg
sub
cs
jo
or
pop
mov
lds
test
scas
push
or
push
xor
clc
add
lahf
mov
cmp
shll
loop
cmp
xchg
subl
aad
mov
sbb
cmpsl
shrl
sbb
sub
in
cmc
sbb
inc
mov
scas
mov
sub
push
test
jno
pop
in
push
jne
cli
fcmovu
daa
inc
repnz
pop
pop
adc
jl
xlat
xchg
in
mov
pop
das
inc
add
loopne
pusha
pop
dec
lock
les
pusha
mov
loope
inc
push
cwtl
cs
repz
jns
sbb
loope
stos
insb
imul
cmp
aad
dec
inc
lds
movsl
aaa
xchg
and
addr16
lock
fisubrl
jle
cmpsb
inc
arpl
jl
fldl2t
movsl
push
adc
or
sub
xchg
inc
ljmp
xchg
push
fsubp
stos
and
fistpll
push
ljmp
mov
mov
out
mov
or
pop
cli
pop
and
ret
shrl
mov
ljmp
inc
pop
subl
nop
lret
in
sarl
xor
mov
int3
cmpsl
rorl
mov
loop
repnz
sub
push
and
sub
popf
outsl
clc
push
or
lods
js
fldcw
rcrl
lods
sub
jmp
adc
add
cmc
xor
js
pusha
sbb
sbb
sub
popa
pop
push
sub
lods
outsb
sub
stc
mov
rcr
add
fucomp
adc
aas
ret
mov
popa
test
adc
imull
inc
iret
add
inc
imul
or
ljmp
push
ja
pop
pop
lcall
movsl
push
jno
mov
mov
jne
int
lahf
popa
in
out
xchg
mov
aaa
adc
adc
xor
or
cmp
call
cmpsl
sbb
fwait
inc
iret
test
outsl
push
lods
in
push
aas
test
fistps
dec
xor
imul
aad
inc
xor
xor
fisttps
add
data16
xor
es
fwait
jg
repz
xchg
mov
mov
jl
xchg
das
testl
in
pop
fs
mov
jecxz
jle
pop
dec
aaa
jne
push
notb
and
mov
jb
jp
and
into
push
or
lahf
xor
add
push
xor
and
stos
mov
sub
gs
xchg
lods
cmp
ds
test
les
and
lret
cli
insl
in
xchg
enter
and
ret
dec
adc
outsb
cmc
jmp
mov
cmp
adc
sbb
repnz
push
scas
arpl
and
pop
clc
cmp
mov
mov
mov
je
daa
and
movsl
es
jnp
stos
mov
mov
sbb
aas
addb
mov
aaa
sbb
sub
insb
out
pop
jno
add
cli
insl
cmp
imul
rolb
jl
add
nop
cld
int3
adc
and
or
ja
adc
lret
mov
sub
mov
insb
pop
mov
mov
pusha
dec
adc
mov
scas
cld
cmp
xor
mov
je
clc
daa
ss
push
dec
imul
roll
outsb
shlb
sbb
sbb
inc
xchg
push
ret
push
sub
rcll
sub
xchg
mov
or
pop
and
dec
rcl
scas
pusha
lret
and
lret
jbe
sbb
push
bound
mov
lods
mov
sub
fsubrs
mov
jge
dec
push
cmp
loopne
les
lea
sub
and
cmp
out
leave
add
push
test
jl
dec
mov
jns
outsb
mov
dec
cs
addr16
sbb
push
ret
dec
pusha
mov
cltd
inc
sbb
inc
sbb
aas
dec
scas
adc
pushf
aad
dec
mov
pop
mov
xorb
daa
test
mov
in
cmp
mov
lcall
mov
adc
fildl
pushf
pop
jb
add
shlb
mov
pop
sti
jne
jno
aad
aas
ss
sub
mov
les
rcr
lds
xchg
mov
lahf
mov
int
mov
dec
mov
push
jno
popf
out
pop
push
cs
push
mov
test
les
aaa
enter
and
out
push
mov
int
push
and
cmp
xchg
pop
mov
loope
sub
dec
mov
call
xor
cmp
sti
hlt
pop
pushl
inc
cmpsl
popa
jns
insl
popa
rcl
lock
xchg
xor
incb
fptan
push
push
test
sbb
jg
add
test
adc
and
xchg
push
and
je
jns
mov
pop
ret
jge
mov
std
cmp
xchg
bound
cwtl
rclb
sub
xor
es
adc
fadds
xchg
and
inc
xchg
int3
xor
fs
and
out
filds
sub
adc
sub
lods
xor
mov
inc
push
ja
loop
rcll
and
dec
mov
push
adc
mov
mov
sahf
jmp
gs
adc
in
lea
xchg
push
pushf
in
arpl
mov
mov
mov
imul
mov
ret
pop
rcrb
pop
fmull
sbb
sbb
sbb
in
mov
lock
xor
fidivrs
popf
iret
jae
xchg
aaa
daa
push
les
push
sbb
daa
add
adc
inc
test
jbe
ret
inc
std
inc
xor
mov
arpl
jns
jecxz
sbb
jbe
fdivrl
cmpsl
sub
xchg
fnstcw
mov
mov
pop
and
cmp
movsb
and
adc
pop
mov
push
mov
xchg
jecxz
mov
mov
xor
xorl
out
inc
test
lahf
xchg
movsb
js
ret
jne
ja
test
loop
adc
pop
xchg
rolb
inc
sub
ds
fwait
xor
fs
pushf
je
stos
imul
sahf
mov
pop
insl
jp
adc
push
pushf
mov
sub
ret
fcmovu
and
imul
je
call
or
loop
fisubrs
mov
jmp
cmp
in
cmp
lods
and
insb
mov
out
xchg
adc
dec
add
sub
inc
push
xchg
xor
xor
cmp
lcall
add
adc
or
in
xorb
lods
loop
sub
dec
and
add
add
mov
cs
mov
cwtl
cmpsb
cmp
insl
sub
sbb
pop
int3
test
push
lahf
sar
dec
add
pop
addl
sub
lret
fcomip
pop
sub
lods
addr16
pop
into
jno
cmp
fs
xchg
sarb
popa
mov
out
sub
addr16
sbb
call
inc
leave
mov
int
mov
xor
ret
lods
fadds
inc
sub
nop
divl
mov
or
xlat
fnstcw
jno
sbb
add
xchg
arpl
outsl
cmc
inc
scas
xchg
repz
jae
mov
notb
cmpsl
sub
fstps
mov
icebp
or
ret
lods
std
sbb
xor
popa
inc
pushf
sbb
cmp
les
pop
fisubrl
mov
sub
xchg
jbe
loope
dec
popa
adc
dec
lea
mov
jl
mov
mov
and
jns
aad
or
out
xchg
js
repz
pusha
imul
sub
mov
jnp
pop
adc
int3
into
lret
lret
fcomi
xor
sbb
cmp
icebp
xor
cmpsb
inc
xchg
es
inc
aaa
or
and
fisttpll
test
cwtl
inc
fcmovbe
push
call
or
sbb
mov
jg
sub
andl
xor
bound
in
or
ljmp
dec
sub
or
or
int
repnz
pop
xor
sbb
and
loopne
enter
push
inc
sbb
pop
xor
test
test
add
fidivl
pop
jnp
insb
in
out
mov
cltd
rolb
test
test
inc
call
push
jl
xchg
xchg
pop
jbe
or
aam
shll
jne
ljmp
inc
and
repz
mov
sti
adc
mov
adc
push
cmpsb
nop
lret
xchg
and
or
push
lahf
mov
int
in
mov
popf
stc
push
shll
in
leave
dec
xchg
push
add
into
shrb
xor
test
cmp
mov
lods
fistl
add
aad
imul
stos
mov
mov
lahf
outsl
inc
push
inc
cmp
pop
mov
out
add
jmp
outsb
add
je
in
test
lret
adc
adc
sbb
xchg
das
dec
daa
lcall
sbb
repnz
mov
or
jnp
cmc
mov
cmp
add
dec
pop
test
clc
cmc
aaa
jecxz
ss
mov
movsl
push
mov
roll
mov
out
sarb
add
fldt
xlat
sub
sti
adc
js
clc
jnp
mov
mov
imul
fnstsw
outsb
mov
inc
scas
adc
mov
pop
and
jne
testl
pop
sbb
dec
repnz
fwait
jmp
inc
adc
mov
mov
and
sbb
fnstsw
cmpsb
fldt
jnp
idivb
add
lods
shlb
push
scas
cmp
and
sbb
mov
sub
jmp
pop
dec
outsb
sbb
fwait
or
jnp
cmpsl
lods
pusha
jb
insb
adc
mov
lds
inc
shrb
mov
mov
cmpl
xchg
xchg
pop
repnz
push
or
je
push
insb
imul
jb
xor
shlb
jns
adc
sbb
xchg
fcoml
pop
test
dec
imul
push
mov
mov
shlb
cmp
scas
cs
dec
mov
sbb
addr16
or
frstor
pop
shlb
aam
aam
mov
pop
or
adc
or
sbb
imul
divps
or
push
jecxz
mov
jg
cmc
inc
fnsetpm(287
adc
and
dec
dec
inc
int
lds
or
dec
lret
pop
mov
mov
and
cli
push
les
push
add
dec
pop
dec
leave
sbb
je
or
inc
clc
jo
ffree
mov
insb
cmp
in
lcall
lahf
std
fisubl
cmp
and
and
popa
stos
sbb
lods
in
int3
push
jne
aam
int
testl
fsubs
ret
sub
iret
cmpsl
aam
and
dec
mov
int3
mov
aas
pop
inc
test
mov
enter
mov
hlt
cmpsb
push
add
shrb
jp
xchg
rcll
inc
pop
pop
outsl
jl
sub
xlat
pop
add
imul
into
mov
ficompl
xor
push
outsb
or
loope
rcll
outsl
int
cli
and
test
js
inc
xchg
add
mov
push
stos
test
orl
rcl
cmc
pop
iret
xchg
jecxz
lods
pop
std
dec
stos
mov
out
dec
ljmp
pushf
jne
cmp
fiaddl
jno
out
test
add
pop
test
insb
inc
or
repz
ss
push
jl
popa
dec
lret
sub
pop
arpl
loope
loop
in
pop
add
adc
iret
mov
stos
scas
or
shll
pop
movsl
aam
vpcomd
xorb
mov
pop
add
push
adc
jno
push
inc
sub
cmp
aam
repz
insb
std
inc
mov
jmp
inc
mov
push
pop
mov
insl
add
pop
or
mov
je
fsubr
lret
push
repnz
test
mov
fisubrs
adc
int
test
imul
jl
inc
out
out
inc
xchg
adc
test
outsl
out
out
roll
mov
mov
fsubr
iret
push
push
out
in
jecxz
mov
mov
add
cmp
fs
ljmp
push
push
mov
mov
push
ret
xchg
pusha
dec
inc
pop
loope
sub
xor
push
decb
cmpl
test
out
cmp
enter
subb
or
daa
cmp
cli
mov
lds
test
pop
xchg
dec
mov
xchg
ja
arpl
cmp
jg
lret
movsl
mov
fstpl
cld
cs
leave
or
pop
scas
cmp
sbb
cs
jbe
enter
or
inc
fsubs
dec
in
in
in
gs
test
sub
insb
push
mov
inc
es
rolb
fwait
add
cld
mov
clc
push
adc
fcomip
fs
add
mov
jg
popa
rcr
mov
in
push
adc
inc
adc
out
mov
dec
dec
mov
lret
xor
sub
xchg
xchg
jg
fs
mov
cwtl
daa
ljmp
daa
nop
pop
clc
and
mov
int
mov
xchg
mov
je
ja
in
aam
stos
cmp
cmc
cs
rorl
inc
pop
xchg
jmp
fucomp
push
inc
fildl
loope
and
mov
clc
sub
lret
int
pop
jb
jle
or
mov
push
or
lret
movsl
mov
pusha
outsl
inc
xor
stos
cli
cwtl
fcomp
popw
inc
fcmovbe
pop
out
test
mov
daa
dec
jmp
nop
pop
adc
mov
scas
cmp
out
test
add
sti
push
jp
and
or
sbb
sbb
popa
jne
andl
stos
enter
sbb
cmpsb
imul
xchg
divl
xor
sub
cltd
iret
mov
and
lret
pushf
jge
mov
push
mov
pop
adc
into
mov
test
mov
out
jle
orb
ljmp
cld
cltd
fstl
enter
mov
insb
mov
stos
xor
push
mov
push
adc
movsl
in
mov
pop
mov
ljmp
cwtl
push
xchg
decl
bound
cmp
push
sbb
cs
pusha
push
inc
idivb
xchg
mov
add
jge
inc
lahf
daa
push
mov
int3
jle
pusha
test
cmp
cmp
aam
mov
and
aaa
in
xchg
pop
mov
mov
mov
or
lods
cmc
pop
dec
mov
cmp
pop
push
xor
jnp
jns
mov
pop
sub
pushf
aad
dec
sub
pop
fdivs
gs
ljmp
jmp
and
push
scas
mov
dec
imul
add
push
arpl
push
fstps
xor
fwait
pop
and
sti
mov
cmp
mov
mov
or
xchg
and
pop
imul
xor
jae
xchg
outsb
push
mov
test
sub
lock
pop
xchg
xor
and
arpl
adc
or
je
mov
cmpsl
xchg
jns
mov
cmp
xchg
shlb
xchg
mov
fstp
jns
call
or
mov
repnz
mov
movlps
fadds
fs
mov
aad
pusha
add
je
lea
xchg
xchg
pop
ret
loopne
mov
adc
cmpsb
pop
in
and
push
mov
test
xchg
outsl
mov
cwtl
loope
or
movsb
fwait
sbb
mov
push
sbb
ficoml
aad
scas
sbb
call
stos
into
adc
sub
mov
fcomps
jae
incb
add
add
add
xchg
aam
sahf
aam
cmp
pop
and
cltd
rep
pop
mov
repz
ret
repz
test
sti
mov
rcrb
mov
mov
cmpsl
push
dec
popa
out
repnz
pop
sub
sub
pop
ljmp
dec
movsl
fistl
sbb
add
mov
cmp
inc
jo
test
mov
sahf
and
in
aam
and
push
imul
xchg
loop
and
dec
shrb
jle
push
add
mov
mov
in
out
adc
adc
in
inc
push
add
int3
imul
pusha
das
cltd
mov
pop
cmc
adc
arpl
add
fiaddl
add
fucom
push
das
aas
xchg
je
adcb
lock
dec
movd
cmp
or
adc
iret
mov
dec
push
pop
data16
test
ss
repnz
iret
mov
xchg
sarb
push
sahf
jle
jg
or
inc
je
jb
adc
mov
add
jb
push
je
cld
fldenv
sbb
jae
cld
ficomps
or
aam
xor
cmp
dec
cmp
mov
mov
mov
adc
mov
and
leave
push
adc
loope
add
cmpsl
daa
test
pop
or
and
repz
outsb
mov
movsb
or
loop
sbb
xchg
xchg
jmp
fsubrs
imul
and
fistpll
mov
and
push
push
jb
ljmp
jmp
push
add
pop
and
jne
or
movsb
pop
xorb
pop
jne
fstl
mov
stos
repnz
lock
lods
aam
test
xchg
rclb
push
mov
test
clc
cli
inc
insl
pop
aam
testb
lea
scas
jle
call
xchg
xor
int
cmc
jle
repz
xchg
insb
jl
fs
rol
dec
pushf
push
pushf
and
movsb
add
inc
jnp
xchg
mov
repz
pop
push
cltd
mov
mov
cmp
and
loope
cwtl
pop
mov
pop
dec
jbe
fdiv
outsb
xchg
outsl
or
aam
movsb
fisubrs
pop
mov
enter
fimuls
cmp
sub
jecxz
xor
inc
jl
mov
pop
lret
les
mov
mov
mov
outsb
pop
sti
sub
test
mov
std
repz
xorb
sub
add
mov
cld
out
pop
ret
outsb
mov
icebp
mov
hlt
xor
cs
lcall
ljmp
mov
out
fsts
or
push
lea
lds
adc
stc
ds
aas
sub
arpl
int
xchg
inc
ffreep
out
fildl
inc
adc
in
sbb
pusha
sbb
fists
and
loope
stos
push
sub
push
fmull
cmpsl
xchg
cld
push
aam
xchg
insb
adcl
ret
cmp
mov
sbb
leave
cmp
loop
xor
cmp
push
xchg
je
lock
hlt
pop
and
out
add
xchg
jo
xor
dec
popf
inc
sub
pop
imul
adc
and
movsb
mov
and
push
pushl
fwait
jge
cmc
inc
inc
imul
cmp
sub
mov
mov
iret
pop
in
xrelease
mov
jns
jmp
cld
xorl
and
mov
aad
call
addl
imul
xor
rcrb
xchg
fisttpl
adc
out
xorb
maskmovq
notl
cwtl
lods
test
lahf
push
mov
pop
mov
aas
jmp
iret
adc
repz
pop
dec
and
mov
loope
inc
sub
jo
pop
std
mov
add
pop
and
test
push
xchg
pop
sub
ret
ret
or
pop
call
hlt
cmpsb
xor
mov
rol
mov
jo
xchg
mov
lret
sti
dec
cmp
xor
xchg
out
jmp
mov
jmp
lods
mov
popf
cmp
cmp
jecxz
scas
xor
inc
imul
and
inc
jmp
es
push
mov
enter
pop
popf
lret
call
jbe
into
push
add
call
into
popf
sbbb
cwtl
add
xcrypt-cbc
cmpsl
adc
insl
xor
adc
loopne
lock
std
ret
incb
push
jg
mov
ljmp
ljmp
rorl
test
cs
dec
xchg
inc
pop
scas
pop
cwtl
mov
stos
mov
cwtl
pop
popa
movsl
imul
xor
pop
repz
xchg
add
or
mov
pop
sub
cltd
aaa
shrb
rcll
xchg
cli
incl
pop
xchg
js
xchg
lods
lods
jp
std
jb
or
and
movsl
jmp
mov
cmp
aas
arpl
sbbb
gs
cmpsb
dec
loope
xchg
mov
pushf
sbb
movsl
and
fidivs
popf
subb
inc
jl
jne
std
mov
push
pop
or
outsb
lods
cmp
push
pop
mov
loop
loopne
rorb
faddp
and
outsl
imulb
in
pushf
iret
les
imul
insb
inc
mov
jb
adc
mov
cmpsl
dec
popf
sti
inc
or
ljmp
daa
lods
mov
movb
mov
sub
mov
pop
movsb
mov
jb
andl
test
mov
mov
jns
lret
jmp
imulb
dec
arpl
adc
mov
lods
das
sbb
lret
adc
mov
pop
push
jmp
test
jge
in
movsb
add
idivb
loop
iret
clc
mov
push
in
roll
lods
and
cltd
xchg
mov
out
clc
adc
cs
lods
rcll
in
xor
aas
dec
xor
movsl
aas
frstor
inc
out
cmc
push
lds
or
or
inc
add
sub
dec
call
jbe
nop
daa
xchg
mov
call
jmp
push
or
test
push
jns
mov
mov
ljmp
dec
test
jp
mov
push
pop
fisttpl
mov
cmpsl
pop
test
jo
pop
lcall
mov
adc
push
adc
lock
sahf
arpl
lods
cld
movsb
jl
inc
fstps
cmp
inc
int
clc
adc
in
rcl
push
push
pop
xlat
loope
leave
inc
ja
clc
inc
pushf
and
je
sbb
addr16
in
inc
ljmp
mov
gs
mov
out
clc
dec
clc
int
pop
rcrb
or
dec
and
sub
push
jg
and
data16
sub
mov
sub
xchg
insb
movsb
scas
roll
ficoms
fisttpll
stc
movsl
out
jne
xor
jnp
mov
mov
push
dec
rcrl
in
lods
lahf
sbb
test
sub
adcl
jb
data16
insl
sub
and
adc
mov
xchg
mov
addb
adc
pop
or
lahf
cmpsl
push
xchg
in
lahf
decl
push
mov
out
lods
js
imul
mov
cmp
clc
aad
and
outsl
sub
inc
push
dec
cmp
mov
outsb
outsl
mov
xchg
and
adc
icebp
rcrl
jne
mov
mov
sbb
cmp
scas
mov
push
test
jge
mov
sub
in
fnsave
mov
pop
adc
adc
mov
jp
push
inc
push
lock
mov
scas
cmp
cmp
rorb
aam
jne
mov
fld
testb
test
arpl
fimuls
jmp
test
fstpt
adc
int3
ljmp
lret
cmp
or
into
inc
cltd
dec
pop
add
mov
xchg
mov
sbb
icebp
cmp
pop
loop
dec
push
fiaddl
dec
mov
dec
leave
and
mov
pop
push
cmp
outsb
mov
xchg
pop
arpl
pop
sbb
mov
xor
pusha
mov
push
pusha
inc
push
adc
mov
sti
hlt
pop
js
pop
out
dec
int
add
xchg
fyl2xp1
adc
repnz
bound
dec
push
sbb
inc
sbb
add
mov
pusha
loopne
pushf
cmp
and
sahf
lret
mov
jle
aam
or
pop
mov
mov
mov
inc
jns
scas
out
das
test
cld
push
lea
data16
pop
movsl
push
jl
movsb
ljmp
or
out
jle
lea
scas
sub
popf
adc
mov
aaa
mov
mov
adc
cmp
push
xchg
mov
aaa
call
ljmp
fsub
mov
sub
nop
mov
mov
cmp
and
imul
ss
sbb
or
bound
loope
fstps
outsb
fimull
je
js
sbbl
inc
ss
ja
std
mov
call
hlt
jle
mov
test
mov
inc
stos
lret
pusha
pusha
sub
sbb
imul
adc
or
adc
ja
push
lods
dec
pop
aas
aad
out
add
clc
jno
ljmp
idivb
test
inc
int3
cmpsl
insb
lods
jbe
bound
and
mov
xchg
cmp
mov
sbb
cmp
mov
and
ss
in
push
je
mov
jb
stos
fst
loop
loopne
ficomps
bound
inc
sbb
aaa
nop
fistpl
out
lock
sarb
outsl
add
push
scas
lea
sbbl
fwait
mov
jb
lods
cmp
rorl
call
into
mov
ret
ljmp
add
push
mov
push
push
shrl
mov
pop
jns
aad
pop
popf
xchg
xlat
cmp
nop
push
jp
pushf
ljmp
gs
sub
inc
sti
mov
movsl
dec
and
xor
jnp
in
out
pop
xchg
mov
repnz
add
mov
pushf
jl
out
mov
jo
repnz
mov
in
ret
pop
or
imul
inc
aam
insb
lahf
or
loop
stc
xchg
dec
leave
mov
and
out
mov
fs
std
xchg
sbb
xchg
cmp
pushf
adc
mov
add
or
mov
mov
insb
inc
jae
cmp
pop
or
cmp
ljmp
xor
or
mov
loopne
icebp
add
push
mov
and
shrl
inc
fwait
xor
imul
mov
pop
dec
xorl
sub
mov
loope
mov
mov
adc
test
push
pusha
mov
sarb
imul
mov
add
lods
movsbl
call
incb
pop
not
sbb
repnz
mov
fistpll
jns
ljmp
outsl
push
or
call
xor
roll
cmp
les
out
pop
or
imul
jno
sahf
shr
call
movsl
repnz
leave
xchg
test
out
movsl
pop
mov
icebp
push
into
lret
ljmp
or
jl
shrl
das
add
ljmp
mov
adc
lods
lret
popf
xor
mov
and
jg
and
cs
or
jns
sbb
test
shlb
mov
jp
jge
pop
mov
shll
aad
mov
insl
imul
pop
inc
mov
repnz
mov
imul
out
in
insb
nop
popf
in
adc
sbb
xacquire
mov
rorl
xchg
xchg
ljmp
int
add
out
js
jbe
mov
stos
mov
out
sub
or
pop
outsl
mov
push
ret
xor
and
push
movsl
pop
cmp
fs
inc
mov
rcr
in
aaa
sub
lea
pop
mov
lock
add
and
adc
popa
xor
inc
mov
jl
iret
outsb
addr16
xchg
xor
xchg
test
aas
mov
int3
xchg
xor
dec
mov
inc
mov
out
fcomi
fdivl
pushf
and
aas
sbb
mov
add
add
mov
jmp
pusha
ret
inc
cwtl
or
pop
fs
gs
int3
sahf
ss
testb
iret
sub
pop
out
leave
fucompp
push
or
lret
fisttps
jbe
ret
cmpsb
popa
js
or
mov
sahf
adc
lcall
rcll
bound
mov
or
arpl
push
jns
rorb
add
adc
icebp
lcall
sbb
mov
jp
cmpsb
sti
lock
fsubrs
fiaddl
int
in
mov
mov
sbb
push
scas
scas
mov
push
mov
movb
mov
xchg
dec
fimuls
dec
or
stc
push
xor
or
mov
clc
xchg
add
dec
int
push
mov
scas
pushf
adc
adc
loopne
sti
cmpsl
sub
mov
pop
stos
mov
icebp
push
mov
rcrl
ret
mov
das
mov
mov
pop
imul
mov
mov
sahf
test
mov
and
test
ja
sub
jae
dec
cld
mov
jbe
hlt
mov
cmp
sub
lods
cli
inc
add
pushf
shlb
dec
lret
adc
and
leave
dec
ret
or
loopne
test
jb
outsb
pushf
aam
and
fwait
sbb
push
xor
out
push
inc
jg
in
cmpsl
stc
loop
cmc
mov
out
lret
xchg
lods
ret
pop
push
xor
inc
jne
sub
pop
mov
xor
push
ret
cld
jno
test
xor
or
xor
pop
xchg
inc
xchg
fnstcw
mov
ss
dec
add
mov
or
loope
fisttps
ror
sbb
insl
int3
jb
mov
xor
faddl
sbb
sbb
or
xchg
sub
lret
or
loop
test
add
mov
sar
mov
cmc
bound
in
cmp
jmp
out
inc
repnz
sahf
or
loopne
into
sub
pop
leave
cmpsl
xchg
insb
stc
les
push
pusha
mov
add
sbb
lcall
pop
xchg
inc
shlb
subl
hlt
aaa
stos
ljmp
inc
adc
xor
rcrb
jmp
or
bound
or
cmpsl
push
jbe
in
pop
dec
fcmove
sahf
mov
cmp
mov
adc
cmp
fwait
loop
jecxz
pop
fsubrs
insl
divb
rolb
pushf
mov
dec
jp
clc
xor
test
int3
inc
test
lds
xchg
in
xchg
sarl
cmc
inc
clc
hlt
add
out
lahf
and
js
jo
xchg
push
pop
dec
xchg
mov
push
inc
xor
popf
loopne
inc
or
mov
pop
test
or
adc
xchg
and
lea
xchg
jo
shlb
lea
leave
nop
or
lea
pop
lret
fsubrl
mov
jg
jb
bound
mov
mov
inc
das
dec
lahf
fimull
pop
andb
outsl
daa
mov
test
scas
iret
jae
sti
movsb
sbb
xchg
or
or
iret
aas
lahf
popa
push
cmp
push
popa
outsb
and
push
mov
scas
add
cmpsl
enter
jne
stos
fdivrs
cmp
mov
pop
mov
or
es
sbbl
sub
outsb
add
aaa
stos
push
stos
inc
jnp
in
lock
stos
mov
mov
leave
mov
xor
sti
fwait
arpl
into
xlat
arpl
inc
stos
mov
xor
jne
fwait
in
inc
mov
jle
inc
adc
mov
ss
or
pusha
fists
ljmp
clc
outsl
cwtl
enter
xor
scas
cmpsb
sbb
leave
xor
cmp
ss
cmpsb
and
mov
sub
add
icebp
xlat
fldln2
fs
aad
movsb
aam
sub
popa
bound
mov
mov
rcrl
mov
call
fbstp
or
enter
loope
lods
ljmp
dec
jle
ja
xchg
outsl
andb
loope
mov
fwait
dec
fistpl
stos
jne
or
cli
insb
mov
adc
imul
pushf
mov
adc
dec
lock
pop
push
mov
or
add
out
movsl
dec
sub
pop
int
shrl
sbb
scas
pop
idivl
inc
call
and
mov
mov
dec
aam
pop
jns
xor
xor
je
call
loop
inc
jl
ret
sub
xchg
pop
and
jo
jne
loopne
es
cwtl
rcll
or
je
insb
lods
mov
leave
shll
dec
pop
pop
shrb
xor
push
jmp
insl
out
jmp
jecxz
icebp
inc
cli
scas
aas
xor
aas
gs
jns
in
sub
fsubrl
jle
cmp
leave
dec
cltd
mov
cmp
sbb
nop
push
popa
push
mov
mov
movsb
nop
xor
loopne
dec
push
cli
jge
lret
int3
fwait
insl
dec
icebp
xor
mov
mov
mov
shr
mov
mov
xor
mov
popa
sub
lds
dec
jecxz
in
mov
shrl
cmp
gs
push
add
pop
and
js
testl
inc
ds
and
mov
push
divl
mov
loop
jns
stos
repz
and
int
les
push
sbb
push
pop
out
imul
xchg
addr16
and
mov
addr16
push
enter
int3
ljmp
cmp
aad
outsl
cmp
stos
sub
add
lahf
pop
repnz
and
lret
and
adc
or
and
decb
rcrl
clc
mov
inc
movsb
jo
hlt
ljmp
cmp
push
jne
add
ficoml
test
mov
jo
add
inc
stc
fs
sub
push
mov
dec
sbb
adc
jbe
je
mov
dec
xchg
daa
lret
fadd
jns
mov
jle
ds
sub
outsb
jg
adc
xchg
sub
in
jg
loope
xor
leave
loopne
xchg
out
fisubs
iret
lret
xor
imul
jp
ret
mov
cmpb
mov
stos
mov
ja
out
cmpb
adc
inc
nop
aas
addl
jb
icebp
push
jl
add
xchg
insb
cmpl
mov
mov
inc
test
and
repnz
and
inc
bound
test
mov
sbb
daa
rcll
xchg
sub
fcom
aad
pop
xchg
lret
mov
in
sbb
sarl
or
push
inc
mov
mov
mov
stc
dec
imul
loop
mov
push
insl
mov
xchg
es
rcr
ds
shrl
inc
mov
idivl
push
cli
add
add
pop
loope
nop
push
cmp
xlat
dec
xchg
pop
cli
add
imul
int
adc
cmp
or
mov
sbb
outsb
adc
aas
cltd
outsb
das
mov
enter
aas
add
shll
dec
inc
push
xor
cli
in
stc
clc
imul
pop
inc
test
psubusb
pop
xchg
jecxz
inc
scas
jl
divb
push
xor
dec
cmp
or
pop
fisubl
push
xor
cwtl
dec
pop
jecxz
hlt
add
mov
fcmovne
je
mov
xor
aad
jnp
lea
inc
aas
mov
aaa
mov
mov
nop
and
sub
test
fcoml
decb
dec
add
push
gs
lret
pop
push
sahf
mov
dec
out
addr16
add
inc
minps
jne
adc
insl
mov
les
mov
jecxz
sbb
jnp
push
mov
mov
jmp
inc
aam
mov
in
fmull
push
lds
sti
jnp
dec
test
clc
mov
and
xchg
jb
and
dec
push
jmp
sub
cmc
repnz
je
jmp
mov
jg
pop
cwtl
push
xor
xlat
fisubs
mov
xor
mov
jne
and
lds
outsb
push
mov
out
fsubrs
dec
clc
sarb
popf
mov
scas
cmp
pop
shrb
adc
inc
push
sub
stos
hlt
xor
sarb
mov
jns
or
sbb
cmpsb
rcl
cmc
push
std
mov
and
cs
pop
mov
or
dec
sbb
mov
ret
cmc
sbb
inc
push
movsb
push
sub
adc
fstl
cwtl
add
xchg
jge
jno
xchg
xor
adc
imul
lods
cmp
jbe
mov
cmp
int3
leave
fs
add
dec
cmp
or
lret
daa
cld
inc
outsl
add
push
cs
loop
jae
inc
lock
pusha
mov
dec
lea
cmc
iret
sbb
pusha
push
push
adc
inc
xchg
or
jl
add
lock
mov
es
add
push
inc
arpl
inc
std
xchg
aas
leave
insb
out
cmp
and
add
inc
sub
loop
mov
in
and
stos
int
mov
setp
sahf
xor
mov
mov
adcb
fcmovnb
stos
jle
pop
iret
rcll
in
sub
fs
hlt
sub
stos
icebp
xchg
mov
pop
mov
shll
jmp
fs
lods
push
pusha
jbe
shlb
ja
scas
movsb
out
sub
shlb
jne
lea
cmp
lcall
jnp
das
xchg
shl
lret
jne
bound
mov
or
jecxz
loop
mov
in
call
loope
fidivl
mov
stc
cmpl
or
and
cmp
mov
cmpsb
inc
cwtl
dec
mov
sub
je
imul
call
icebp
lods
mov
ret
add
mov
mov
je,pn
and
pop
ret
cmpb
pop
addl
add
and
rcll
call
out
ds
push
in
push
push
jns
push
lss
inc
mov
jmp
mov
cltd
rcll
das
sub
sar
jg
scas
idivl
pop
jecxz
cmpsb
movsb
idivl
andl
mov
mov
in
or
cmpsl
push
repnz
jp
push
lods
jecxz
mov
push
jmp
sub
in
add
add
aad
add
add
add
mov
xchg
mov
out
rcll
mov
inc
pop
mov
sbb
push
adc
mov
add
arpl
push
xchg
push
push
mov
mov
mov
out
push
and
or
mull
and
in
cmpsl
add
ja
jae
mov
fwait
subb
push
mov
sbb
inc
cmp
mov
imul
cmp
sbb
adc
add
xchg
and
inc
data16
sbb
jp
or
push
and
jno
push
pushf
adc
pop
repz
adc
xchg
inc
sti
fwait
jnp
movsb
dec
loopne
xor
jmp
mov
mov
clc
xchg
jo
cmp
cwtl
stos
xchg
psrlw
das
and
mov
dec
adc
sbb
aaa
mov
pop
pop
mov
fcoms
xor
dec
mov
pop
imul
arpl
ds
aad
mov
loopne
adc
mov
or
test
orl
js
pop
out
and
dec
cltd
icebp
and
addr16
jecxz
mov
stc
aaa
in
outsb
xchg
insb
lock
mov
clc
dec
dec
mov
shrb
add
inc
sahf
jmp
cmp
popa
ret
and
cmp
mov
inc
mov
push
inc
mov
jnp
mov
adc
into
loop
mov
pop
mov
ss
pop
inc
add
xchg
in
xchg
je
in
push
cmp
movsb
adc
pop
dec
pushf
dec
pop
inc
pop
jae
add
push
lods
xor
pushf
sbb
adc
popa
mov
or
push
mov
pusha
leave
daa
rorl
fwait
std
mov
push
cmp
mov
lock
cmp
aad
mov
xor
into
shlb
sahf
xchg
lea
dec
adc
jg
xlat
enter
mov
mov
sbb
outsb
inc
gs
cli
movsb
cmpsb
clc
lcall
mov
je
mov
mov
test
add
aam
stc
and
mov
fcompl
stos
mov
xor
icebp
mov
ud1
les
insl
ret
je
dec
enter
add
push
cld
cmp
xchg
mov
mov
jns
mov
pop
mov
out
call
int
cwtl
mov
cmc
jg
push
dec
mov
cmp
test
ficoms
ljmp
fstps
pusha
repnz
outsb
notl
jg
aam
inc
outsl
aam
jmp
cmp
insb
lret
mov
pop
and
pushf
dec
xor
add
push
jo
sub
pop
push
ret
pop
or
pop
out
scas
dec
cmc
cmp
sub
out
pcmpeqd
inc
mov
fadd
inc
pop
cmc
xchg
inc
std
loope
lea
lds
xor
pop
fcomip
dec
popf
pop
jecxz
adc
js
mov
pusha
in
int3
cmp
mov
pop
xor
jno
dec
ret
sbb
insl
lret
xor
mov
mov
sub
inc
stos
into
in
mov
cmp
mov
push
xor
jns
inc
sti
sub
icebp
mov
sbb
fs
mov
popf
cli
aas
push
adc
fistpl
mov
mov
stos
mov
test
loop
sahf
out
int3
push
out
lea
rclb
sbb
in
inc
mov
push
cltd
pop
cmp
jmp
mov
pop
jle
stc
add
sbb
je
fiadds
sub
dec
inc
inc
int
fimuls
aas
push
pusha
cmpsb
mov
cs
xor
loope
mov
pop
and
je,pn
dec
inc
arpl
sub
stos
dec
push
jno
push
add
test
mov
sbb
cmpb
je
ja
adc
ja
sbb
or
add
xchg
add
rolb
cli
xchg
jo
mov
iret
pop
push
fs
inc
and
mov
sbb
cltd
cmp
adc
pop
push
pusha
bound
fwait
and
xchg
and
out
hlt
and
cmpsb
cpuid
sahf
mov
jae
scas
mov
das
fdivs
inc
lret
stc
out
adc
pop
inc
mov
movsb
aam
adc
push
pop
in
test
imul
stc
sbb
add
push
xor
test
sahf
sti
aas
flds
and
and
lods
add
push
adcl
mov
stos
or
in
sarb
xchg
out
ja
jg
jge
clc
movsl
xor
inc
nop
nop
scas
aaa
repz
lcall
enter
jnp
into
popf
lcall
ret
add
jne
mov
xchg
inc
shrb
lret
fisubl
mov
pushf
cli
aam
mov
addr16
outsl
and
into
fiaddl
push
jns
test
jmp
push
das
repnz
insl
inc
dec
int
jo
xchg
fsubl
lods
aaa
inc
mov
inc
sub
add
mov
ss
ret
divl
push
insb
mov
mov
dec
mov
cmp
nop
jp
jg
dec
or
inc
insl
pop
lcall
sub
out
mov
mov
or
mov
call
aaa
jnp
loopne
push
lods
cmp
out
test
adc
lods
sub
fwait
push
cmp
cmpsb
mov
lret
add
daa
xchg
xchg
or
ss
cmpsb
in
gs
and
in
xlat
mov
daa
scas
jno
cmovb
pop
push
je
mov
loop
dec
add
mov
test
dec
loopne
pusha
rcr
or
inc
mov
sti
push
mov
addr16
add
pop
or
mov
jb
cmp
in
sub
cltd
mov
lods
in
pop
gs
rolb
lret
and
mov
mov
fisttpll
cmp
add
leave
push
mov
jne
je
mov
test
jae
push
jle
mov
iret
jne
pop
jge
movl
pushf
cltd
fcompl
aaa
jecxz
jmp
cmpsl
xchg
mov
fistps
sub
lahf
cs
lock
insb
lds
loope
push
xchg
sarl
iret
xor
cmp
dec
stos
aas
call
mov
mov
xchg
add
dec
and
sub
call
bound
xor
movhps
jno
pop
scas
leave
ficomps
in
bound
mov
lods
mov
lret
js
in
and
gs
sbb
add
mov
cs
in
push
int
mov
pop
inc
cld
idivl
lcall
mov
idivl
test
push
repnz
addr16
imul
pop
daa
lahf
fwait
imul
sti
sub
or
jno
xchg
or
or
dec
sub
icebp
jmp
sbb
jb
fldcw
mov
fldpi
and
push
negb
adc
stc
dec
testb
sbb
or
jmp
and
add
add
jnp
or
xor
push
push
adc
int3
or
and
shrl
jp
aad
aam
and
mull
and
push
cmp
sub
and
cmpb
mov
lret
pop
dec
aas
pop
jb
shl
mov
cmp
js
loopne
inc
int3
push
mov
fnstsw
dec
jle
mov
les
cli
jl,pn
mov
rcll
adc
add
lods
movsl
pop
aam
mov
sub
pop
clc
or
jl
mov
mov
inc
jo
decl
pushf
mov
dec
jp
xchg
or
sti
adc
pop
scas
mov
pop
rol
or
push
ds
ret
pop
mov
xchg
out
test
out
aaa
les
push
jmp
mov
jnp
lds
loopne
mov
pop
lds
push
jno
push
leave
xor
les
pusha
loop
mov
inc
fcmovne
xor
push
cltd
sub
je
push
and
mov
adc
lea
loop
xchg
jle
loopne
out
push
clc
push
inc
ja
mov
dec
add
push
out
mov
movsb
je
or
xor
andl
test
adc
aam
cs
les
aam
scas
adc
jp
out
sub
push
lret
adc
scas
hlt
mov
insb
or
std
icebp
xchg
test
or
or
lods
lock
ss
mov
jae
xchg
out
pop
test
add
inc
outsb
mov
loop
push
cmp
sbb
stos
mov
or
lret
push
fists
push
sub
mov
and
or
lods
jl
mov
lahf
jnp
icebp
rclb
adc
add
or
cmp
and
mov
mulb
adc
ud0
push
push
sub
mov
rcr
fcomps
dec
pop
aam
mov
or
aad
daa
push
or
mov
jmp
sbb
sar
lret
lret
mov
outsl
mov
lcall
lahf
jge
dec
add
adc
add
insl
or
mov
std
insb
mov
xchg
jnp
inc
xor
mov
mov
xchg
shrb
ja
in
dec
adc
jp
inc
cmp
jg
rclb
cmpsl
aaa
movsb
xchg
inc
daa
xchg
adc
cmp
out
mov
adc
mov
ljmp
mov
jl
fucomp
and
or
leave
mov
in
hlt
andb
lahf
mov
xor
add
xchg
sbb
nop
in
vmovntps
leave
mov
sub
or
jge
sub
jmp
sbb
pop
sbb
jle
add
jb
test
add
mov
cld
xchg
js
or
cmp
orl
int
mov
mov
ret
xchg
ficompl
into
push
rcrl
sahf
imul
or
outsb
out
inc
sub
add
sbb
and
shlb
xchg
cld
testb
push
in
ds
les
test
dec
sbb
je
mov
int
cs
adc
leave
outsb
dec
sub
lods
push
test
negl
cmp
xchg
jo
sbb
cld
xor
pop
mov
imul
inc
add
into
xchg
pop
cmp
pusha
cmp
jb
xor
cmpsb
inc
adc
jl
mov
subl
cmpsl
insl
push
sub
andl
pop
push
lret
icebp
jno
fcmove
fadds
pop
lret
sbb
cmp
clc
cmpsb
jg
inc
out
jbe
mov
inc
dec
adc
or
mov
ss
lods
mov
mov
mov
insb
push
mov
inc
ds
push
inc
imul
stos
inc
clc
mov
push
fs
movsl
fldl
shlb
dec
xor
das
lcall
mov
je
dec
xor
data16
sarb
push
fadds
je
cld
rclb
sbb
sub
clc
xor
sti
sahf
lcall
mov
lock
xor
dec
divl
dec
stos
jmp
adc
loope
imull
lahf
bnd
dec
testl
mov
mov
xchg
subl
adc
mov
stc
fsubrl
sub
or
fnstenv
fisttps
jp
inc
inc
sub
andb
and
iret
adc
repz
jb
sti
stos
and
popf
fdivl
test
inc
xor
jp
cvtdq2ps
adc
pop
jg
push
dec
pop
cmc
cmc
lds
out
xlat
cmp
mov
out
jb
andl
fsts
jb
addr16
aam
mov
bound
jne
movsb
lahf
push
inc
aad
xchg
rorl
lods
xor
mov
arpl
into
cmc
mov
adc
scas
and
sti
and
inc
pmaxub
dec
sbb
jg
dec
pop
daa
pusha
mov
icebp
sub
xchg
jmp
cli
xor
push
bts
add
aam
xchg
pop
pop
inc
and
add
pop
mov
mov
sub
sbb
dec
jb
add
je
stc
leave
pop
add
cs
cmp
pop
push
push
mov
jl
mov
adc
mov
addr16
icebp
add
out
pop
jle
pop
filds
xchg
out
and
aad
movsb
and
pop
sbb
stos
sbb
fs
cmp
and
pusha
popf
mov
mov
pop
in
mov
add
push
sbb
daa
add
int3
call
dec
dec
push
sbb
addr16
mov
inc
movsb
leave
fsts
add
pop
mov
or
cltd
ret
pop
xchg
sbb
xor
and
arpl
or
or
aas
pop
push
aam
je
adc
inc
or
leave
xor
mov
pop
push
adc
push
xchg
push
jp
lret
aaa
into
shl
push
cwtl
push
outsl
cltd
cmp
int3
sahf
mov
inc
and
gs
lret
inc
xchg
mov
repz
push
movsl
jo
test
int3
cwtl
sub
lea
push
or
divl
popf
mov
jecxz
in
test
stos
enter
mov
scas
popf
fisttps
lods
leave
inc
sarb
frstor
jecxz
ja
cld
adc
and
and
test
push
mov
xchg
mov
filds
dec
pop
movsl
pop
dec
test
daa
or
out
xchg
push
pop
push
adc
stc
xchg
jbe
adc
or
div
push
sbb
jo
sub
mov
fisubrl
in
push
push
gs
pop
cmp
loop
sbb
iret
ljmp
pop
iret
inc
adc
mov
leave
mov
ljmp
cli
bound
scas
lods
fnsave
mov
mov
jmp
dec
dec
div
inc
adc
icebp
sub
and
jns
cmp
or
or
gs
daa
adc
sbbb
je
mov
add
imul
stc
in
push
pushf
imul
mov
mov
and
fwait
xchg
ss
add
shrb
mov
xchg
push
shll
jb
xchg
xor
cmp
data16
aaa
jae
pop
loope
adc
lds
inc
lret
pop
pop
cmp
pop
add
and
pop
or
jmp
ss
mov
loopne
dec
or
loope
xchg
jb
cmp
adc
cli
lret
adc
dec
xchg
cmp
aaa
push
add
lods
push
cmp
or
lods
fcomps
mov
dec
pop
gs
test
iret
stos
sbb
js
cmc
add
cmp
mov
jp
cmp
add
lea
lret
jae
and
mov
scas
iret
xor
ficomps
std
dec
mov
mov
stc
xor
push
xor
jge
in
xchg
jmp
cmp
push
faddl
fisubrl
mov
fcoml
cli
xchg
push
sub
aas
in
inc
ficoml
fsts
ret
aam
or
add
repz
sbb
xlat
jge
cwtl
sub
mov
mov
clc
inc
inc
scas
mov
repnz
test
or
inc
in
pop
push
shlb
sahf
dec
gs
pop
or
hlt
or
daa
out
add
cltd
scas
xchg
or
xorl
dec
cmp
ret
inc
ror
mov
stc
inc
lock
popf
cmp
push
enter
lcall
movsl
nop
jno
mov
mov
lahf
cli
nop
dec
stos
push
sub
insb
clc
idivl
cmp
mov
sbb
dec
push
shll
mov
fs
out
push
faddp
or
pop
in
sahf
ds
addb
shr
gs
hlt
dec
jne
fcomi
pop
sbb
dec
bound
or
rorl
insl
sbb
adc
mov
dec
negb
add
mov
mov
inc
lcall
cld
jbe
or
mulb
jbe
pop
push
cmp
jl
fcomip
cmp
loopne
loopne
mov
shll
daa
out
insb
push
sahf
adc
inc
lods
mov
nop
ret
clc
pop
mov
jne
dec
mov
leave
mov
pushf
mov
inc
push
stos
andb
push
xor
js
and
popa
mov
cld
dec
inc
adc
pop
adc
or
or
scas
xor
adc
mov
and
inc
in
add
loope
sbb
les
ljmp
out
sbb
pushf
shll
adc
push
mov
cmovae
int
fistpll
pop
push
push
adcb
rolb
pop
aaa
popa
leave
pop
dec
je
test
jl
popa
sarl
lods
push
cmp
adc
rcl
add
xchg
stc
xchg
data16
cmpl
xchg
mov
cli
mov
fidivrl
mov
in
xchg
and
fs
in
mov
sub
fdivs
mov
inc
mov
es
adc
push
test
jle
add
stc
js
lret
in
loope
push
push
lcall
sbb
jns
sbb
mov
stos
setge
sti
xchg
xchg
inc
in
xchg
nop
in
sub
cmp
call
cli
je
movsb
out
or
lods
push
cld
push
xchg
fbstp
mov
pusha
and
adc
aas
out
call
hlt
mov
negb
xchg
mov
xlat
cwtl
addl
shlb
xor
mov
add
adc
pop
jb
out
inc
push
push
ss
sub
push
mov
repnz
cmpsb
fs
fs
push
jecxz
inc
jnp
sub
roll
outsl
movsb
and
je
ds
mov
scas
out
add
jo
mov
mov
in
mov
daa
push
mov
stos
xchg
loopne
jmp
or
jb
dec
sub
xchg
movsb
push
inc
in
icebp
and
mov
mov
or
arpl
nop
cmp
mov
out
into
jo,pn
sub
test
int3
and
sub
and
adc
fs
scas
repnz
mov
xchg
test
jbe
sbb
lds
sub
mov
xor
xor
je,pn
push
xchg
std
mov
sub
cmpsb
lcall
not
jmp
mov
xchg
cmpsb
jae
out
cmpsb
cli
in
aad
pusha
xor
les
sbb
pop
mov
push
lea
xor
gs
add
dec
in
inc
add
jnp
fsubl
pop
imul
mov
cmp
lea
pop
call
xchg
add
mov
mov
stos
lea
mov
dec
loopne
test
adc
or
popf
mov
adc
lds
in
movsl
fsubrl
pop
ljmp
rclb
or
es
mov
xchg
dec
adc
cmp
xor
arpl
xchg
inc
call
dec
cmp
lret
mov
sti
testl
out
cli
out
gs
mov
cld
jo
pop
loopne
mov
jne
sbb
mov
push
outsl
push
pop
pop
in
daa
xchg
jmp
lods
jmp
sahf
icebp
mov
add
sti
mov
pop
test
stos
iret
push
push
nop
jo
jmp
loope
in
mov
inc
dec
and
and
mov
notl
cmp
outsb
push
and
enter
push
into
inc
and
orl
xchg
sub
xchg
xchg
arpl
lods
inc
mov
jmp
jge
fcoms
jp
popa
xchg
mov
push
push
call
ficoms
addr16
dec
bound
out
int3
in
fwait
cmp
cmp
outsl
jns
repz
pop
adc
outsl
dec
mov
out
pusha
dec
sarb
mov
sub
pop
lret
movsb
xor
aaa
jnp
inc
jge
lar
sarl
div
repnz
or
and
cmp
ret
pop
dec
pop
sub
repz
fcomip
int
sbb
push
ja
mov
sub
cld
lods
int
outsb
or
out
cmpsb
cmp
aad
xchg
sbb
and
sub
jp
insl
shll
ret
sub
sbb
jbe
sub
add
in
fstps
lea
out
sbb
cmp
imul
movsb
jbe
adc
jnp
pop
xlat
lods
stc
ds
fcmovnbe
outsb
hlt
arpl
or
stos
test
mov
shlb
leave
inc
sub
lea
sahf
xchg
adc
out
pop
lds
dec
addb
data16
out
lock
cmp
or
mov
movsb
ja
lahf
sbb
sbb
xor
mov
push
xor
jne
hlt
nop
push
push
les
mov
fstpt
fstpl
mov
bound
addr16
and
mov
imul
push
cmp
test
add
fwait
xchg
aas
or
sub
mov
scas
lds
mov
rorb
pop
inc
sbb
lods
pop
daa
insb
ljmp
test
cmp
mov
mov
stos
xor
mov
jno
mov
pop
mov
xchg
fldenv
aaa
stos
scas
lret
jno
adc
inc
rorl
pusha
shlb
orl
mov
mov
sbb
xchg
mov
lods
sub
xchg
cmpsb
ret
jo
or
test
or
sub
loopne
xchg
mov
js
dec
inc
push
mov
in
xchg
dec
andl
lret
int3
lock
dec
pop
mov
sbb
sbb
sbb
mov
cld
adc
mov
mov
or
cmp
out
in
adc
pop
adc
je
mov
dec
movsb
sbb
mov
bound
and
subb
pop
ss
fstpt
test
fs
mov
enter
or
mov
popa
and
dec
mov
inc
push
mov
out
and
mov
cmp
cs
add
imul
ja
sti
jecxz
xchg
daa
jge
jle
push
mov
mov
mov
pop
xchg
mov
jle
pop
adc
cmp
dec
xlat
cwtl
ror
das
gs
pop
movsl
mov
bound
bound
sub
push
sbb
test
enter
push
inc
lcall
loop
mov
int3
xor
mov
cmpsb
in
push
in
pop
xor
enter
insl
nop
pop
xchg
push
mov
or
mov
and
xor
nop
das
cmpsb
das
xlat
je
cmpsl
add
mov
mov
call
lahf
jo
ret
popf
cmp
jns
into
mov
lds
daa
sub
add
push
stos
ds
jae
jecxz
cs
jno
outsb
aad
mov
push
lret
das
push
ds
popa
and
outsl
mov
add
inc
int
hlt
sbb
xor
pushf
out
mov
adc
pop
stc
ret
loop
mov
mov
sti
push
xchg
bound
jl
in
pop
dec
lock
loope
fmull
fistl
and
aad
push
fisttpll
jb
pop
lock
pop
aad
push
in
inc
fimuls
and
mov
adc
movsl
push
sbb
loope
fists
mov
jae
and
inc
sub
push
add
push
loope
shrb
or
aam
cli
scas
push
add
ljmp
jmp
daa
inc
push
and
and
xchg
xor
fnsave
mov
std
xlat
cwtl
cmp
out
mov
loop
add
outsb
or
sub
xchg
lock
sub
add
push
jb
xor
xchg
xlat
ja
dec
mov
mov
hlt
inc
in
mov
xor
fdivp
cli
idivb
stos
repnz
cli
movsb
insl
je
or
or
iret
pop
or
sub
lahf
jne
test
adc
lahf
adc
imull
xor
in
xor
xor
aaa
jb
hlt
xor
sbb
or
out
fstpt
sbb
push
push
int
aad
mov
cwtl
gs
sbb
jmp
lods
xchg
and
lret
outsl
std
pushf
and
xchg
sbb
jns
xor
sarl
ljmp
into
nop
mov
mov
adc
fs
pop
popa
push
andl
pop
dec
and
or
xor
rcrl
stos
gs
flds
pop
adcb
sub
lods
fbstp
test
mov
pop
push
sbb
lret
xchg
or
push
xor
mov
and
jb
xchg
push
dec
cs
cmp
loopne
int3
push
sub
pmullw
mov
cmp
out
mov
xor
aas
xchg
stos
add
and
and
inc
popf
test
push
mov
push
iret
popa
nopl
push
push
sbb
test
fdiv
sub
dec
mov
pop
or
jns
stos
pop
cmc
jo
jle
repz
je
rclb
pop
movsl
jo
aas
lahf
fildl
mov
mov
daa
mov
add
pusha
loope
jmp
fdiv
popf
mov
xchg
sub
mov
aad
imul
cmp
xor
push
pop
mov
andl
in
mov
mov
lock
mov
rcl
std
call
ds
cmpsl
test
pushf
push
stc
aas
test
addb
pop
sub
pop
xchg
icebp
ret
push
push
call
pop
add
xchg
pusha
jne
gs
cmp
xlat
xchg
pushf
mov
dec
push
nop
scas
mov
lret
or
mov
int3
aaa
call
sbbl
mov
or
sub
ss
out
frstpm(287
jno
xchg
cmp
pusha
loopne
xchg
leave
mov
out
push
pop
int
fs
mov
adc
fs
jecxz
sub
adc
lods
pop
ror
dec
sub
push
mov
loope
out
neg
aas
adc
sub
cmp
nop
cmp
mov
mov
push
pop
pop
add
sbb
es
shrb
movsb
xlat
cmp
mov
adc
push
adc
adc
data16
push
test
push
push
test
add
xlat
or
sbb
outsb
pop
mov
sub
xor
xchg
mov
sbb
add
lds
in
add
inc
lock
and
addl
xor
cs
cmpsb
dec
hlt
push
es
mov
mov
stos
test
jbe
push
add
int3
mov
in
into
jns
push
ljmp
push
cmp
inc
hlt
jnp
mov
shrb
inc
adc
pop
cmc
lea
dec
test
push
xor
fwait
lahf
pushf
sub
movsl
fdiv
pop
loope
push
xor
aam
xchg
inc
fcmovb
test
push
push
pushf
pxor
js
xor
into
sbb
insl
aad
xchg
jmp
aaa
roll
insb
jge
adc
insb
lret
push
mov
cli
cwtl
shlb
iret
mov
cld
jnp
xchg
inc
imul
jb
and
inc
jne
sub
lret
rcl
pop
xlat
inc
lods
stos
dec
cmpsb
add
fdivl
mov
or
lcall
add
imull
mov
pop
adc
cmp
cmp
ficomps
sub
adc
shrb
sub
mov
cld
and
sub
or
inc
sub
inc
jg
mov
push
out
clc
andl
call
pushf
jns
dec
icebp
fs
lcall
repnz
in
test
lcall
ds
shl
lret
fmuls
movsb
push
mov
mov
xchg
push
lret
lcall
dec
loope
out
push
call
rcr
mov
addr16
fldt
sbb
mov
mov
dec
mov
jno
out
repz
pop
lods
jno
pop
jge
incb
add
cli
scas
inc
js
pop
inc
negb
pushf
arpl
add
imull
mov
sbb
push
push
add
adcb
xor
fsubl
test
scas
lcall
inc
stc
and
mov
xchg
scas
push
sub
shrl
mov
add
xchg
mov
and
ss
mov
push
cs
and
fildl
jbe
and
mov
xchg
inc
and
popf
out
mov
lret
andl
jo
fs
gs
repz
pop
das
pop
push
sub
or
test
mov
inc
lds
mov
ds
scas
cmp
cs
movsb
push
mov
xor
divb
icebp
aaa
ja
shl
out
jg
cmp
mov
pushf
ds
add
andl
clc
mov
cmp
fs
push
dec
je
in
push
iret
jo
pop
gs
test
jl
out
jne
cwtl
aaa
mov
dec
inc
ljmp
jecxz
adc
xchg
dec
es
cmpsl
push
dec
test
and
and
mov
xchg
pop
add
mov
cmp
daa
mov
jp
in
sbb
adc
mov
pushw
lods
mov
aam
mov
stos
adc
xor
loope
mov
aam
push
rcll
jge
sub
xchg
push
call
sbb
inc
and
repz
and
mov
sbb
push
dec
mov
repnz
ljmp
nop
add
movsb
outsb
xor
das
mov
jp
pop
lods
adc
jl
fmuls
xchg
xchg
cmpb
aaa
fstl
and
xchg
in
repz
shll
arpl
mov
lret
ss
out
mov
pop
mov
mov
adc
rol
stos
inc
pop
sbb
xor
dec
mov
imul
adc
in
jle
sub
ss
rclb
jns
ret
nop
inc
sub
std
xor
fnstsw
mov
cmpsl
or
clc
les
mov
out
aaa
sub
je
incb
outsb
pushf
xchg
and
jb
pop
sub
mov
test
out
xor
sbb
and
pop
pop
fldenv
out
icebp
mov
iret
mov
shl
and
out
je
lods
std
cmp
outsb
imul
lods
in
pop
dec
xchg
xor
jge
push
data16
nop
sub
and
xor
enter
mov
mov
fs
mov
enter
mov
shl
mov
jmp
fwait
xor
mov
sarb
mov
pop
outsl
bound
arpl
lret
psubusb
dec
jmp
jae
scas
scas
dec
and
or
sbb
and
ret
dec
dec
outsb
in
dec
flds
dec
pusha
jecxz
mov
bound
test
pop
imul
sbb
cmpsb
sbb
sub
and
imul
pop
and
mov
jno
mov
lret
and
pop
lret
jnp
inc
movsl
push
out
rcrl
or
outsl
pop
loopne
scas
lahf
cmpsb
fcmovbe
mov
add
shrl
and
jmp
data16
mov
pop
mov
aaa
cmpb
inc
push
out
inc
dec
push
mov
ret
lock
sub
orl
into
inc
mov
mov
pop
sbb
and
jmp
lret
lods
adc
and
xlat
push
aam
test
movsl
fstpl
pop
inc
add
fmuls
nop
sub
call
inc
adc
pop
lret
popf
test
les
loop
daa
inc
ss
lahf
inc
push
in
test
sub
xorl
cli
iret
jns
scas
mov
popa
fs
mov
sub
mov
adc
shrb
or
dec
sarl
push
aas
jmp
pop
push
lret
mov
daa
xor
call
sahf
mov
out
in
nop
enter
lods
push
fucomp
nop
subb
push
enter
mov
sub
add
mov
je
push
mov
push
ss
add
out
fs
mov
cmpsb
cmpsb
mov
loope
inc
jbe
mov
push
or
cmp
xchg
adc
nop
push
xchg
sbb
mov
pop
jg
mov
ljmp
ljmp
movsl
cwtl
cmp
add
das
pop
jno
fcompl
hlt
ljmp
or
pop
lret
movsl
add
insb
ljmp
mov
sbb
and
lods
sub
call
pavgw
in
sbb
push
pop
adc
xor
addb
and
jne
or
xor
pop
mov
cmpb
fiaddl
mov
rcl
pushl
cmp
xchg
out
jl
lret
ror
mov
hlt
bts
mov
insb
scas
sbb
jae
add
dec
sarl
jb
shr
adc
dec
outsb
filds
mov
fcmovne
cmp
aas
xlat
ds
sbb
jne
dec
dec
bound
call
or
inc
pusha
dec
or
rorb
mov
notb
mov
cmp
in
mov
pop
cmp
xchg
shr
add
fnstcw
pop
inc
nop
mov
sub
int
add
cmp
enter
cltd
fildl
pop
or
mov
rorl
arpl
les
xchg
mov
mov
in
and
inc
lock
mov
mov
xor
or
out
dec
ljmp
adc
ficomps
pushf
shlb
fcompl
lret
call
inc
lock
ret
test
addl
popf
mov
jo
data16
sub
test
mov
cmp
lods
push
push
insl
or
cmc
pop
xchg
xchg
sub
push
mov
cmp
xor
inc
int3
push
push
inc
ljmp
cli
flds
push
xchg
cmp
pushf
in
or
pusha
cmpxchg
pop
std
mov
push
shrl
pop
push
repnz
sub
test
mov
and
push
and
ds
cmp
sub
sbb
pop
iret
add
mov
dec
or
mov
jnp
and
adc
iret
jnp
xchg
jbe
cld
iret
xchg
add
mov
mov
loope
inc
push
imul
mov
scas
aaa
dec
je
pop
jg
jo
std
pushf
lahf
mov
xor
jmp
mov
mov
push
jne
mov
dec
cmp
or
mov
je
push
insb
fldcw
or
mov
inc
add
or
insb
shlb
jmp
jl,pn
aad
in
jns
je
in
es
cwtl
xlat
in
inc
data16
gs
insb
stos
cmp
jecxz
xchg
movsl
rcrb
lret
fs
stos
pop
sbb
mov
pop
fidivrl
stc
fisttps
xor
xor
mov
pop
push
inc
stos
push
jg
test
sbb
fsubl
mov
arpl
push
push
mov
loope
dec
jge
xor
mov
adc
xchg
push
icebp
push
dec
insl
adc
pop
cmp
or
mov
pop
insb
int
or
cmp
push
adc
pop
mov
das
dec
add
pop
aam
or
dec
or
addr16
inc
mov
push
in
inc
ljmp
inc
xchg
lds
xor
nop
repz
or
mov
lds
pusha
jns
mov
cmpsb
inc
repnz
enter
jl
negl
ljmp
inc
xchg
loop
inc
adc
xchg
adc
scas
and
mov
insl
inc
enter
sbb
jbe
ret
stos
dec
cmp
ret
sbb
sar
mov
jns
jbe
fcompl
xor
sbb
push
adc
icebp
pop
xchg
add
or
lcall
cmp
sbb
mov
add
sub
mov
adcb
lods
cli
mov
popa
fwait
inc
stc
sub
lock
adc
pusha
push
push
pop
in
ljmp
test
ss
push
idivl
dec
jmp
ret
adc
clc
xchg
xor
out
not
test
add
fwait
in
nop
fwait
scas
or
add
pop
test
aam
cmpsl
leave
cmp
push
mov
fnstcw
hlt
inc
sahf
xchg
lods
jle
xor
and
pop
js
add
push
lret
mov
xor
add
movsl
repz
push
ret
lahf
aam
mov
jmp
rcrb
dec
and
mov
and
pop
mov
inc
xchg
test
jmp
dec
loope
subl
out
cmp
push
and
ret
pusha
jnp
bound
jle
inc
repnz
push
add
fidivs
lds
pop
jnp
and
popw
sbb
adc
jno
or
or
add
mov
mov
cmpsl
xor
mov
xlat
inc
cmp
ljmp
push
pop
sbb
loopne
pop
cmpsl
imul
mov
fbld
fldpi
sub
ja
and
pop
sub
adc
sbb
into
nop
adc
dec
arpl
das
mov
fs
test
adc
aam
aaa
pushf
ja
and
int
push
outsb
out
mov
call
icebp
cli
subl
repz
mov
mov
mov
out
and
insl
push
subb
fisttpll
call
shlb
mov
rolb
int3
mov
mov
push
sbb
ret
add
mov
fists
cmc
sub
pop
push
cmp
and
adc
in
sbb
inc
cmpsb
pop
cmp
or
in
je
out
fsub
fs
pop
mov
shl
insb
mov
xor
mov
sar
btrl
and
add
into
jae
ss
cmp
xchg
inc
pop
lds
sbb
xlat
stc
call
jno
lods
xchg
es
mov
out
xor
add
xor
xchg
movb
adc
jg
lahf
mov
and
int
jmp
push
push
or
int
jecxz
roll
jle
mov
jo
sub
into
roll
notb
xchg
ds
xchg
ja
je
dec
rclb
pop
cmc
jb
popa
mov
xchg
ficoml
sahf
sub
sbb
out
popa
lahf
inc
sub
loopne
inc
les
aad
push
imul
cs
jp
in
jmp
mov
outsl
int3
mov
pcmpgtb
ljmp
jmp
dec
sub
aaa
dec
movsl
imul
sbb
xor
inc
cwtl
jg
pop
aad
xchg
fisubs
sbb
pop
cli
ja
clc
test
call
push
idivl
inc
cmpsb
sbb
js
xchg
xlat
iret
hlt
inc
in
mov
pop
cmp
dec
popf
push
frstor
notl
nop
lea
and
sub
jp
lahf
scas
scas
nop
pop
loopne
mov
lcall
pop
stos
lods
loop
sbb
mov
and
sbb
mov
push
mov
stos
aas
mov
in
jb
inc
or
fs
loope
inc
push
inc
fisubl
fisttps
fists
mov
jnp
add
xor
xor
in
sbb
adc
loopne
push
add
sbb
cmc
add
mov
dec
nopl
scas
sbb
out
and
sub
adc
out
xchg
outsl
cwtl
test
push
icebp
lea
dec
jp
mov
fmull
fwait
negb
xchg
ror
int3
lea
iret
repz
dec
xor
fstl
xchg
cld
cwtl
std
adc
cli
inc
jne
mov
dec
rorb
sub
mov
pop
mov
push
neg
ljmp
and
lahf
push
lahf
mov
stos
xor
and
jl
dec
pushf
lock
pop
fistps
xchg
jmp
lods
jge
mov
dec
ret
mov
fldt
insb
inc
sub
push
add
pop
popa
xor
and
mulb
leave
jae
scas
pop
scas
cli
and
inc
mov
push
mov
push
bound
imul
dec
adc
push
or
arpl
push
mov
jns
mov
out
xchg
sub
inc
repz
iret
xchg
jge
add
jo
inc
and
dec
xchg
dec
push
or
xchg
mov
inc
inc
incb
mov
js
sub
out
push
shlb
mov
inc
sti
dec
sbb
pop
test
in
cwtl
rcrl
bound
lret
test
or
push
and
lds
add
mov
mov
and
ja
adc
mov
sbb
mov
xchg
jmp
push
aaa
shrl
in
scas
mov
inc
fwait
cmpsb
mov
cmp
iret
lea
cmp
xchg
ss
cli
cli
pop
xor
xchg
xlat
xchg
insb
or
movsb
adc
int
jnp
dec
mov
sub
jo
dec
jp
mov
push
shrb
inc
mov
cld
ljmp
in
in
movsb
mov
add
out
xor
mov
xchg
dec
pusha
xor
cmp
movsl
stos
loope
into
mov
jge
push
jecxz
fs
xchg
fsubrs
dec
test
jns
bound
aam
xor
popf
xchg
insl
cli
sahf
mov
cmp
jns
mulb
into
lcall
lock
xchg
adc
filds
push
push
xchg
dec
add
arpl
scas
mov
adc
lock
and
iret
cmpsl
movsb
mov
push
loopne
mov
outsl
pushf
pop
mov
sub
pop
pushl
in
xor
lcall
xchg
or
cmc
stc
push
jne
cld
fimuls
je
insb
push
popl
enter
inc
lods
clc
stos
fnsave
std
fidivrl
mov
mov
add
mov
xchg
scas
cwtl
pop
adc
mov
mov
xchg
ret
sub
inc
jl
lock
popf
aas
arpl
sub
fstps
int
in
jns
push
and
cltd
jmp
and
xchg
leave
outsb
add
stc
rclb
and
mov
dec
xor
fstl
add
fsubrs
xor
mov
push
data16
dec
test
push
and
push
xor
pusha
cmp
movsl
jbe
add
pop
adc
into
rcr
cmc
dec
inc
stc
fwait
xchg
sahf
ret
mov
pop
sahf
pop
je
adc
xchg
ret
es
inc
fwait
sub
jmp
xchg
xor
xor
inc
into
jg
push
mov
fldl
xchg
data16
aad
mov
xor
hlt
cmp
movsl
xchg
mov
add
xor
imul
in
fistps
xchg
mov
lcall
std
or
movsl
movsl
xor
pop
xchg
clc
dec
adc
nop
push
imull
movb
jge
fists
mov
leave
jae
mov
xchg
mov
push
inc
push
pushf
fdivrl
int3
jno
xchg
mov
sbb
add
dec
push
aas
lds
sbb
and
andb
mov
mov
imul
cli
sub
fcompl
stc
dec
dec
aas
mov
scas
sbb
or
cmc
test
outsl
aad
add
fadds
insb
std
mov
inc
andb
pop
aad
loopne
in
faddl
popa
and
jecxz
xchg
pop
and
fcmove
cwtl
mov
or
data16
cs
or
jmp
mov
xorb
mov
divl
xor
xchg
xchg
pop
xchg
and
minps
dec
mov
mov
sub
test
push
mov
or
in
ja
mov
lret
out
mov
inc
sub
test
xchg
pop
and
add
sbb
arpl
jae
pusha
stos
add
sbbb
xadd
inc
mov
stc
xchg
xchg
add
js
fwait
cmp
pop
gs
ljmp
cltd
lret
call
cmpsl
mov
mov
adc
xchg
loopne
ror
push
jbe
fiadds
stc
xchg
repz
hlt
adc
fidivs
dec
js
fwait
cmp
cmp
and
stos
lds
fcmovbe
sbb
sub
andb
mov
or
sbbl
jo
pushf
cwtl
in
cld
add
les
movsl
test
lret
std
adc
mov
sub
xorl
fisubs
sarb
and
rcrb
mov
cltd
cli
lret
push
into
lret
sahf
push
adc
push
ja
lret
inc
loop
lds
insl
cltd
sti
fs
sahf
loop
push
jl
repz
ret
adc
mov
pop
add
mov
fisttpll
sbbb
and
lret
imul
out
jl
jae
insb
cmpsl
mov
sbb
dec
add
push
rcrb
ret
jo
ss
mov
int3
adc
dec
inc
shrl
sbb
mov
add
pop
jne
adc
call
sbb
mov
outsb
or
lods
xchg
in
mov
jne
call
xor
pushf
cmpsb
test
sbb
aad
dec
inc
pushf
fldcw
dec
and
dec
jb
push
les
fcompl
mov
cld
dec
push
in
or
sahf
adc
cmp
jmp
hlt
pop
dec
shl
xor
dec
enter
in
inc
mov
add
imul
add
ds
jnp
aaa
xchg
jmp
jmp
adc
push
addb
adc
xchg
fwait
enter
arpl
or
cmp
adc
dec
fcoml
cmp
ljmp
ret
lret
ret
xor
cs
repz
inc
jecxz
call
xor
jb
mov
ret
inc
xchg
sarb
lea
pop
insl
mov
std
popf
leave
sbb
xlat
out
jo
fcompl
sub
ss
cmp
ss
jle
stos
pop
mov
lods
fs
sbb
cmc
xchg
add
sbb
loope
xchg
sub
push
ja
std
idivl
sbb
xchg
in
pop
add
faddl
aad
movl
bound
mov
cmp
scas
add
sbb
mov
es
jp
xchg
jg
mov
mov
leave
pop
imul
out
xchg
mov
lret
rclb
dec
fs
andl
addr16
movsl
jb
fldt
das
insl
mulps
xor
or
clc
jle
daa
ret
lds
add
xchg
and
inc
dec
cwtl
fisubl
sbb
mov
mov
sbb
cmp
sub
lock
in
push
dec
aaa
lahf
mov
loop
adc
out
shlb
data16
push
aaa
sti
adc
or
es
popfw
sti
pop
mov
inc
or
or
mov
xor
out
mov
outsb
gs
js
les
add
mov
leave
sub
notl
ret
pop
xchg
clc
lcall
out
sbb
push
shrb
mov
ret
fistps
adc
and
mov
int
or
jo
mov
in
or
lods
int
jecxz
shlb
mov
sbb
ret
mov
int
jns
rolb
icebp
lock
rdmsr
mov
push
mov
sub
ret
std
lret
iret
sahf
inc
fsub
leave
movsl
aad
roll
je
movsl
xchg
mov
loopne
addr16
imul
cwtl
icebp
dec
mov
adc
test
mov
addb
jle
or
idiv
cmp
rolb
mov
fwait
dec
das
xchg
into
les
sub
das
jle
fcoml
jnp
mov
loop
sub
jne
add
pop
addr16
jae
xchg
lret
dec
pop
lret
scas
lret
enter
cli
aaa
dec
shll
add
inc
aaa
cmpsl
cli
pop
divb
mov
cmp
jmp
jb
xor
incl
adc
cwtl
out
sbb
enter
aam
js
jb
push
sbb
adc
out
leave
stos
dec
lods
jnp
mov
sti
jb
cmp
jo
mov
aad
push
daa
pop
xor
sub
push
mov
lods
jmp
leave
mov
adc
inc
and
add
push
in
xor
mov
lret
push
add
aad
fnstenv
hlt
add
lcall
or
stc
pop
cltd
lods
and
xchg
arpl
lock
repz
js
in
mov
rorl
push
mov
mov
aam
xorb
insl
imul
or
push
ljmp
negb
out
mov
lret
cld
sbb
repz
pusha
es
sar
mov
cmp
fcmovnu
movsb
fldl
hlt
push
outsl
or
or
xor
out
sub
jo
psrad
jle
mov
out
xchg
push
es
or
jno
dec
idivb
cltd
xlat
push
sti
addb
adc
cmc
in
and
lcall
fisttps
orl
adcl
add
inc
idivb
pop
cld
mov
inc
or
scas
mul
pop
pushf
adc
dec
cmpsb
mov
loope
push
jp
addr16
mov
cmp
mov
bnd
inc
movb
jmp
push
mov
lret
stc
add
in
out
lds
je
sbb
fwait
orb
outsb
cmp
pop
mov
pop
mov
push
je
mov
pop
test
pop
stc
add
cmp
enter
sbb
cmp
lret
cmp
add
adc
push
pusha
or
aas
jle
test
cmp
and
push
fsubl
add
sub
call
fucompp
popa
add
in
xchg
mov
cmpsb
scas
lret
dec
vmovntpd
jle
xor
xchg
inc
cwtl
scas
ret
xchg
out
jg
jnp
sti
xchg
stc
lret
fldenv
push
aad
jmp
test
push
sub
inc
rol
stos
xor
dec
arpl
ror
js
ss
and
xor
jecxz
jae
sbb
insb
sarb
leave
sbb
pop
movsl
out
fwait
lods
jg
clc
mov
pop
mov
notl
aas
cs
mov
ds
mov
lock
jl
xchg
sbb
push
clc
cmp
enter
and
cmpsb
out
out
sahf
mov
push
adc
popa
mov
ljmp
mov
mov
pop
mov
jmp
and
mov
and
xor
popf
and
ret
int3
out
sbb
push
stos
inc
pop
fimuls
pop
enter
bound
adc
cmpsl
arpl
mov
cmp
sub
xchg
imul
cmc
xchg
test
jecxz
fs
jge
leave
out
pop
mov
scas
push
hlt
sbb
xrelease
mov
js
cltd
loop
les
cmpsl
movsl
ds
imul
inc
imul
pushf
lret
mov
and
mov
jb
loopne
or
jl
lret
xchg
pop
dec
cwtl
jmp
dec
xor
call
xor
and
les
cwtl
ja
xor
jmp
es
mov
lahf
ret
lret
and
pop
or
stos
sahf
sbb
ret
mov
scas
jae
and
jns
xchg
push
and
inc
cmp
cmpsl
xchg
insb
adc
mov
cwtl
jmp
inc
scas
push
xchg
ret
cmpsb
gs
mov
push
lcall
jb
sahf
inc
jnp
jnp
cmp
aaa
in
lcall
jbe
mov
xchg
imul
stc
jo
xor
inc
sub
push
cs
pop
outsb
jecxz
insb
in
cltd
cs
ret
pop
or
push
sub
sub
xor
imul
fildll
inc
cmp
push
cmp
repz
in
or
pusha
imul
add
fcomps
inc
push
div
dec
sub
add
ss
jo
xchg
inc
lods
sub
jnp
dec
adc
clc
sbb
adc
rorb
and
or
sti
insb
jmp
dec
cmp
xor
arpl
sub
jae
jmp
mov
leave
jns
mov
mov
inc
dec
lret
jl
mov
jp
test
jns
out
add
xor
sub
stc
cmpsb
lcall
enter
cmp
testl
imul
and
popa
in
ret
or
pop
sub
insl
stos
sbb
imul
xchg
es
stc
jle
std
dec
push
sub
pop
xchg
sbb
iret
sahf
leavew
jns
add
insb
enter
jl
sbb
scas
jmp
pop
pop
mov
add
imul
push
lods
je
xorl
call
cs
orb
mov
scas
xor
or
test
ret
sbb
cltd
add
xchg
pop
xchg
push
mov
mov
dec
sahf
xor
ficomps
jns
ja
test
stos
push
adc
add
jb
in
mov
sub
pop
jp
cmp
pop
movsb
mov
mov
jbe
dec
std
scas
daa
fildll
inc
inc
shll
mov
cmpsl
sub
inc
sbb
jecxz
mov
fdivl
lcall
push
mov
dec
hlt
dec
mov
test
jmp
xchg
stos
xor
cmpsb
jmp
cltd
or
add
mov
fcoms
or
sub
gs
hlt
lods
cmp
and
jns
mov
test
movsb
andb
pop
push
push
in
jl
lods
push
and
push
mov
cmpsl
outsl
leave
adcb
stos
jg
push
pop
mov
aam
ret
push
jae
xchg
shll
fstps
sbb
or
negb
mov
mov
cmp
ljmp
push
push
inc
in
lea
sub
out
aas
int3
iret
hlt
pop
pop
stos
xor
in
push
adc
test
xor
sbb
cmc
inc
adc
pop
insl
xor
add
add
test
jb
jge
inc
rorl
add
pop
aas
icebp
mov
lret
hlt
std
aas
pop
negb
test
pop
push
sti
mov
pop
pop
sbb
inc
sbb
dec
pop
xchg
mov
sub
cmp
dec
pop
rolb
dec
pop
jae
js
pop
jle
sarl
mov
pop
imul
cwtl
cmp
cwtl
xchg
scas
adc
insb
jl
pop
xor
rcl
das
cltd
dec
stc
nop
lret
bound
cmp
clc
dec
mov
and
cmpsl
cmpsl
xchg
pop
adc
pop
mov
cmp
test
fidivl
pop
mov
adc
mov
mov
insl
cld
xchg
negb
lret
mov
cmc
inc
lea
xchg
mov
repnz
sahf
adc
xlat
clc
jb
sbb
arpl
loop
mov
push
jnp
jns
add
dec
pusha
repnz
push
cmp
jecxz
xchg
imul
cmp
xor
push
inc
fldenv
fiadds
cmp
outsb
jae
js
xor
repnz
pop
mov
push
dec
stc
mov
or
and
pop
popf
inc
pop
dec
ja
lds
ja
sti
inc
and
lahf
inc
mov
xchg
in
clc
inc
mov
sbb
sub
mov
or
lcall
test
inc
jbe
inc
push
lahf
bound
inc
cmp
or
add
std
vminpd
sbb
jno
dec
inc
or
sub
mov
xlat
push
imulb
cmp
aam
test
pop
addb
push
jle
mov
mov
shrb
insl
dec
fistl
inc
ja
fcmovb
cli
decl
add
add
mov
sbbl
shlb
fimull
pop
mov
pop
shrl
in
cmpsl
adc
les
mov
adc
jns
ss
rolb
jge
test
adc
cmp
aad
dec
ja
mov
jne
push
in
xor
int
fs
sbb
rclb
jb
mov
mov
mov
icebp
shrl
xchg
sub
and
xchg
cs
mov
sub
mov
or
jl
jmp
inc
inc
fidivrl
xchg
pusha
addb
pop
dec
add
pop
jo
pop
je
push
mov
xor
sti
mov
adc
lea
decl
loop
jo
out
adc
mov
add
inc
cmpsl
orl
xlat
mov
push
dec
or
andl
scas
lahf
and
push
dec
adc
xchg
les
shrb
mov
sub
cld
push
mov
fcoml
cmc
pop
and
jb
outsl
pop
nop
adc
xor
jnp
xor
roll
in
movsb
outsl
jno
sbb
pop
mov
xchg
sbb
leave
loopne
cltd
repz
jmp
enter
jb
or
dec
cmpsb
leave
mov
mov
dec
xchg
sbb
jb
stc
push
insb
inc
sbb
adc
jg
mov
inc
xor
jno
insl
cmp
jns
loopne
in
jno
out
add
mov
and
adc
push
sarl
push
xchg
jmp
mov
mov
jecxz
ja
xchg
gs
iret
inc
je
lods
lea
mov
stos
pusha
push
cmp
insl
xor
cmp
mov
adc
cmp
rcr
dec
aad
mov
out
imul
es
jl
add
push
mov
jno
inc
out
add
sub
dec
fwait
xor
pop
jae
sbb
adc
lret
imul
mov
adc
mov
popa
jno
inc
sbb
mov
inc
hlt
sub
mov
push
jnp
inc
sub
mov
push
push
insb
hlt
aaa
jg
cli
aaa
mov
xchg
xor
or
jo,pt
ss
sub
cltd
stos
cmp
rcrl
pop
icebp
mov
pop
adc
sbb
xor
sub
fidivrl
cwtl
mov
aas
cmp
mov
dec
adc
insb
cmp
push
loop
jne
imul
jno
push
ror
jl
sub
sarl
das
and
imul
int3
shlb
mov
inc
in
ss
adc
stos
scas
inc
dec
push
ljmp
ljmp
adc
and
mov
fisttpll
aam
int3
orb
mov
leave
mov
adc
or
and
pop
xor
xor
jle
xorl
push
sbb
ja
xor
jo
rcrl
sbb
jl
nop
push
inc
test
add
mov
out
fwait
nop
xor
push
adc
push
fdivrl
adc
or
xor
pop
or
cmpl
xchg
mov
in
lods
mov
out
in
inc
lock
ss
or
stos
stos
lahf
mov
ja
push
cmp
fcoml
inc
xchg
xor
mov
test
xchg
jb
add
loop
add
mov
test
cmp
loop
test
jle
cmp
jmp
clc
cli
out
sub
jo
arpl
xor
push
sti
xchg
mov
push
in
fiadds
xchg
and
fwait
cmp
jnp
mov
mov
iret
sahf
push
test
repz
push
test
popf
cmpsl
mov
cmpl
jmp
gs
inc
inc
push
adc
movsb
adc
adc
loop
sahf
mov
hlt
lods
or
mov
mov
loope
adcb
scas
ja
or
mov
out
xor
test
stos
cltd
imul
jne
sbb
adc
test
fiaddl
jnp
mov
xor
cmp
and
fnstenv
ret
int
imul
cmp
test
jne
push
aam
adc
mov
pop
sub
mov
jp
insb
xor
dec
mov
xor
add
insl
mov
cwtl
fdivrs
push
fsubs
jl
and
inc
and
out
mov
sbbb
pusha
jp
inc
movsl
out
cmp
cld
pop
popf
mov
or
ljmp
ljmp
outsb
int3
sub
fs
aad
dec
cmp
pop
imul
xlat
fdiv
push
push
scas
mov
sahf
insb
mov
and
xchg
xor
push
xor
cmp
arpl
dec
mov
test
pop
pop
adc
ret
add
sbb
sub
daa
mov
inc
push
ljmp
pop
repz
and
dec
loop
lret
inc
xchg
or
movsl
out
sbb
arpl
mov
xchg
mov
mov
fdivr
sbb
pushf
push
xchg
fs
fbstp
sub
inc
enter
push
jae
inc
sub
cmpsl
push
stos
adc
fsubrs
or
and
loop
sahf
cmpsb
adc
adc
pop
mov
js
das
in
push
adc
ljmp
subl
rorb
xor
data16
loopne
xor
adcl
mov
inc
mov
cli
mov
cld
add
lcall
fucomi
dec
add
pop
cmpsl
stc
ret
rdpmc
rcrb
lods
pop
test
adc
push
xorb
scas
mov
sub
inc
and
push
mov
dec
dec
js
dec
sub
scas
cmp
and
fucom
daa
push
fsubl
inc
cmpsb
shrl
cmp
or
or
popa
jae
scas
outsl
inc
add
std
enter
sarl
bnd
jne
jmp
mov
add
jp
pushf
mov
sbb
xor
pop
aad
push
lods
filds
push
jmp
xchg
pop
popa
mov
pop
jl
xchg
sub
dec
int3
rorb
fdivrs
mov
fists
mov
lahf
sbb
test
xchg
stc
mov
repz
xchg
mov
pop
inc
jecxz
cmp
cmpsb
jbe
mov
mov
push
cmp
jp
and
mov
ficoml
cmp
imul
mov
adc
inc
fldcw
mov
mov
inc
or
jne
pop
fsts
xchg
aaa
xor
add
mov
or
jge
sub
ret
lahf
push
xchg
int3
es
cmp
cmpsb
shr
push
stos
faddl
outsb
dec
jle
pop
mov
inc
sub
addl
lahf
adc
lret
repz
adc
mov
mov
jp
pop
push
adc
xchg
jb
cltd
xchg
icebp
mov
pop
cmpsl
jnp
adc
xchg
push
scas
dec
scas
icebp
push
fmuls
orb
outsl
sbbb
cmpsl
inc
inc
and
popf
ss
mov
dec
dec
fdivr
xor
mov
adc
mov
lds
pop
in
stos
cmp
add
popa
dec
hlt
add
inc
fidivl
xor
inc
or
jmp
adc
push
fwait
cmc
mov
fcompl
push
je
fisttpll
adc
xor
movsb
push
jg
int3
aam
movsl
or
add
sbb
in
sub
jecxz,pn
dec
lret
mov
pop
cmpsb
sbbb
mov
movsb
sbb
inc
jnp
or
pop
pop
or
aad
mov
and
iret
sub
dec
aaa
mov
mov
and
push
lret
adc
addr16
mov
sub
cwtl
sbb
paddsw
shl
subl
cmp
stc
lods
scas
inc
sbb
in
fs
mov
je
pop
in
jo
fbld
jbe
in
stos
sub
pop
mov
cmc
cmp
adc
cwtl
pop
scas
fnstcw
sub
lret
cli
jp
loop
in
sub
adc
xchg
xor
rcll
mov
mov
loop
arpl
xchg
fwait
outsb
ss
imul
pop
push
adc
repnz
sub
xor
inc
out
lret
mov
std
nop
and
outsb
cmp
cmpsl
int3
sub
and
sub
cmpb
push
cwtl
rcrb
movsb
aaa
jb
dec
push
cmpsl
mov
and
mov
outsl
jbe
mov
fucomp
mov
call
lds
into
mov
lea
dec
imul
cld
inc
xchg
sbb
mov
sbb
lahf
xor
cld
scas
xor
dec
enter
mov
push
testl
cmc
mov
out
pop
xor
in
inc
pusha
in
testb
test
jle
mul
dec
rclb
jo
mov
xchg
pop
into
mov
push
sar
pop
xchg
pop
cltd
hlt
movsb
fisttps
rorl
mov
ret
mov
leave
mov
ret
stos
mov
cld
jle
sub
aam
movsb
popf
xchg
push
pop
fwait
mov
shr
dec
enter
mov
jmp
arpl
fnclex
int3
es
jnp
mov
or
ret
mov
mov
call
inc
push
mov
icebp
sub
jne
push
in
jbe
cmp
jb
aaa
aam
sub
jge
cmp
in
push
or
pop
outsl
adc
xchg
cmp
in
lds
mov
pop
das
cmpsb
sub
fwait
inc
scas
in
and
daa
or
push
mov
pop
dec
popf
scas
loop
lret
lcall
and
sbb
xchg
dec
out
aad
jp
push
shll
or
mov
test
push
xchg
ss
pop
and
lcall
ret
xchg
out
fstpt
adc
les
push
push
cmpsl
mov
popa
pop
call
pop
push
loope
pop
cmpsb
pop
test
sar
add
cmp
pop
xchg
adc
aaa
sarl
das
sub
add
jmp
and
ret
push
js
lds
sub
mov
in
push
shl
push
ds
in
into
xor
aad
dec
arpl
andl
mov
and
shrd
dec
mov
jge
sbb
mov
shlb
mov
mulb
test
adc
push
gs
inc
ss
ds
les
loope
rclb
dec
xchg
lds
lods
push
setge
nop
mov
and
fwait
dec
push
out
mov
hlt
movsb
movsl
adc
xor
ret
mov
xchg
fistps
dec
xor
aam
cmp
fmulp
test
daa
mov
loopne,pn
ds
aad
imul
adc
test
adc
pusha
push
and
mov
jp
sub
pusha
pop
adc
xor
cmp
or
xor
sbb
int
fsubrl
inc
mov
inc
out
scas
mov
push
jo
clc
clc
std
popa
scas
push
repnz
or
aad
lret
roll
sub
fsts
xchg
scas
jno
add
xlat
out
push
insb
adc
sub
repz
jp
mov
fisttpll
out
out
fwait
inc
jo
insl
jg
xchg
pop
add
push
movsl
mov
cmp
mov
mov
inc
xor
and
ret
push
pop
das
jecxz,pt
jo
enter
dec
js
pop
or
test
mov
sub
pop
dec
mov
mov
inc
lret
inc
push
mov
and
dec
enter
mov
rcrl
or
test
jb
scas
cmp
push
ss
push
mov
sub
mov
push
insb
xchg
hlt
inc
je
in
jp
pop
mov
stos
pop
cmpsb
add
jl
aad
jmp
inc
or
and
dec
popf
out
and
mov
hlt
lret
and
test
push
mov
push
xor
dec
roll
les
lret
cmp
jl
push
aas
jl
sub
mov
mov
pop
fldenv
nop
lahf
test
and
or
mov
aam
daa
dec
push
in
jg
or
xchg
push
out
cmpsb
imul
xlat
aad
bound
addr16
jb
fstpl
popf
add
insb
rol
lds
test
adc
pushf
pusha
stc
jecxz
stc
outsl
scas
xchg
fucomp
ret
mov
xlat
lahf
jmp
or
mov
or
mov
or
sbb
xchg
and
pusha
sbb
pop
jmp
jne
pop
jns
xorb
stos
enter
in
jp
sbb
rcll
imul
and
xor
jl
pushf
nop
movsb
aam
or
cli
mov
loopne
stos
loopne
lret
in
movsb
and
adc
dec
ja
jo
xchg
push
pop
push
xor
push
fcmovb
add
cwtl
enter
jg
ja
mov
xor
jle
and
lock
fdivs
scas
je
xchg
imull
mov
aam
cli
jmp
inc
scas
popa
movsl
xor
movsb
mov
sti
enter
jg
sbb
mov
mov
cmpsb
sbb
pop
gs
jl
incl
add
xchg
and
cltd
mov
inc
adcb
pop
mull
popf
jno
xor
test
aaa
or
test
inc
dec
xor
mov
pop
dec
or
iret
push
pushf
stos
loop
shll
les
add
gs
mov
mull
imul
push
xchg
rcl
jmp
ja
out
xor
inc
xor
ds
daa
add
xor
rcrb
mov
lret
push
scas
lret
mov
call
inc
filds
mov
dec
rol
jns
mov
mov
mov
cmpl
icebp
xchg
call
xchg
add
cmp
xor
jg
xor
jns
jle
call
push
int3
rorl
push
hlt
loop
adc
scas
jge
je
adc
stos
xchg
push
stc
in
in
dec
aaa
mov
sub
sub
fisttpl
lret
and
stos
dec
mov
loop
dec
cmp
sub
jae
cmp
sbb
nop
clc
jne
xchg
notl
testb
imul
imul
loopne
cmp
cmc
andb
xchg
lret
sbbb
addr16
add
or
sbb
leave
aas
cmpsl
add
lods
call
cmpsb
inc
jnp
jp
rcr
and
js
out
xchg
sub
cwtl
add
jo
pop
adc
sbb
mov
stos
gs
int3
jp
add
and
jecxz
or
les
mov
dec
jnp
push
les
sub
and
inc
pop
mov
clc
test
jns
int
cmp
sub
imull
mov
leave
ds
jne
int
sbb
in
pop
xchg
push
sbb
jl
pop
pushf
or
adc
push
pop
cli
cmp
das
inc
movsb
mov
push
mov
ss
aam
mov
jmp
stos
pushf
push
xchg
addr16
or
ret
gs
loop
out
push
sub
dec
mov
sahf
adc
in
insl
sahf
pop
cmp
add
rolb
ficompl
movsl
outsb
pop
fdivs
push
jnp
cmp
outsb
test
imul
lahf
jecxz
cmp
or
icebp
cmpsb
nop
int
xchg
fstl
mov
sarl
xor
mov
out
mov
test
or
mov
popf
repz
mov
cld
out
dec
pop
stos
cs
mov
mov
sub
or
inc
pop
xchg
cmp
sub
adc
lret
nop
call
cmp
mov
js
inc
loopne
pop
in
mov
push
xlat
movsl
pop
shrl
stos
mov
insb
or
mov
pusha
imul
inc
daa
inc
out
adc
jnp
or
jno
sbb
cmp
or
and
arpl
mov
insb
dec
adc
inc
clc
aad
xor
push
aaa
imul
inc
xchg
mov
mov
data16
in
jmp
push
mov
cmp
shl
ljmp
mov
inc
xchg
fmull
rorb
iret
push
movsb
imul
imul
sub
lock
cmp
pop
jl
jge
jo
fists
sub
clc
std
sbb
xor
hlt
cwtl
sub
and
ja
arpl
adc
add
into
lret
jl
xor
js
pop
scas
in
mov
fimuls
xlat
int
in
jno
ljmp
insl
jmp
pop
rcll
jb
outsb
les
jb
cs
loop
push
insl
add
push
rcrb
flds
je
xchg
sbbb
cmp
mov
cmpb
insl
lahf
pushf
pop
cmp
push
sti
test
loop
movsb
mov
cmp
and
stos
pop
xor
aam
mov
sub
rol
mov
ja
unpcklps
xlat
add
fsubp
lcall
arpl
repnz
movq
int
cmp
je
loop
loop
fcompl
push
cld
adc
jne
xor
push
lods
ja
test
test
and
dec
fcomip
jb
and
mov
lea
mov
mov
inc
shlb
je
stos
imulb
inc
cltd
adc
jno
mov
fwait
loope
enter
or
mov
ljmp
repnz
xorl
jb
fs
fxch
aaa
mov
sbb
push
mov
jp
jmp
scas
enter
pop
xchg
sahf
nop
das
test
iret
rorl
addr16
push
stc
mov
repnz
in
mov
lock
sub
std
outsb
jp
dec
or
mov
sahf
loopne
add
cli
sarb
pop
add
mov
daa
int
push
sub
xor
mov
jmp
dec
ss
dec
lods
in
dec
movsb
pushf
jno
cwtl
out
loope
int
and
pop
aaa
jp
or
loop
mov
mulb
jmp
mov
jns
in
or
clc
push
mov
xchg
in
mov
fldt
mov
cld
xchg
jbe
mov
ljmp
pop
nop
icebp
xchg
xor
push
dec
fsts
or
adc
push
or
add
rorb
adc
jl
or
mov
in
dec
ficompl
jp
jno
and
cmc
leave
jb
jp
and
cwtl
add
mov
ja
mov
inc
add
xchg
xchg
fsubrl
cwtl
adc
packssdw
and
dec
in
jmp
and
sahf
pop
cmp
cmp
outsl
inc
mov
fimuls
movsl
scas
ficoml
ficompl
add
repnz
mov
mov
inc
mov
gs
cmc
std
push
lods
jo
mov
sub
dec
aas
push
and
shlb
imul
imul
push
loope
repz
xor
into
or
repz
cmc
in
add
loope
xor
mov
cmp
xchg
push
fsubr
xchg
add
fildll
hlt
das
fwait
pop
nop
pop
fsubr
movq
or
insl
pop
lods
push
in
mov
ficoml
int
xchg
scas
mov
cltd
push
xchg
and
outsb
add
and
loopne
outsl
ljmp
push
stc
add
call
xchg
dec
mov
in
inc
push
cmp
mov
inc
movsl
and
inc
xchg
insl
or
jo
sub
mov
add
jns
int3
into
sbb
ror
xchg
cmpsl
arpl
addr16
sub
pop
push
xchg
cwtl
loopne
mov
mov
pop
dec
sub
iret
mov
outsb
xchg
push
mov
es
addr16
xchg
mull
out
jecxz
jno
shll
fpatan
mov
mov
enter
or
add
aam
pusha
pop
mul
push
fimuls
mov
cwtl
mov
insb
inc
iret
mov
outsb
push
cmc
dec
inc
add
sub
mov
xchg
xor
push
das
push
repz
pop
lods
push
mov
cmp
mul
cmp
add
adc
aaa
xchg
in
orb
jecxz,pt
jle
and
mov
or
test
pop
in
sbb
push
cltd
dec
or
sti
rolb
cmpsl
xchg
jmp
js
hlt
and
inc
arpl
pop
adc
les
xchg
push
out
mov
mov
push
sub
outsb
jbe
fsubl
adc
es
enter
nop
xchg
ss
sahf
ja
mov
ss
inc
mov
out
or
aad
mov
rolb
ss
cwtl
xor
mov
add
test
iret
mov
xor
les
push
lret
mov
xlat
mov
add
or
in
popf
inc
sub
mov
cmpsb
es
push
movsl
popf
inc
xchg
lret
jo
dec
aam
pop
xchg
add
iret
in
stos
call
test
icebp
outsb
movsl
ds
push
out
xor
mov
movsl
pop
push
adc
sarb
rsqrtps
push
or
into
pop
aad
mov
and
mov
push
aad
pop
cwtl
fisubrs
jge
jns
imul
out
test
loopne
or
dec
mov
xchg
in
push
lret
and
xchg
fdivrs
push
aad
loope
test
push
fsub
shlb
or
or
sub
jbe
sar
xor
int3
fdivrp
inc
sub
packuswb
mov
ret
and
inc
jae
inc
ficomps
incb
lret
das
mov
mov
ljmp
imul
xchg
lahf
cmc
push
mov
push
data16
xchg
push
mov
and
sbb
push
subl
lock
lret
fists
mov
push
pushf
mov
leave
pushf
rorb
hlt
call
cmpsb
mov
sbb
jnp
jno
call
xchg
shr
leave
push
jl
cmpb
ljmp
dec
xor
ret
in
fdivs
in
sbb
sbb
mov
jecxz
nop
leave
add
push
push
mov
mov
jne
int3
movsb
cmpsb
mov
cltd
inc
cmp
ret
ds
fcmovne
dec
mov
outsb
insb
and
ret
push
stc
mov
adc
adc
cmp
mov
sahf
push
push
sbb
mov
int3
orb
pusha
dec
push
mov
mov
push
out
cs
into
adc
push
in
scas
int3
dec
sub
push
or
scas
add
push
cmc
movsb
icebp
dec
stos
xorl
pop
and
xchg
outsb
sub
rcrb
lret
cmp
scas
or
add
jecxz
movsb
test
idivl
in
inc
pop
dec
or
repz
push
pop
adc
movsl
or
pop
dec
adc
int
shll
sub
test
aas
das
sub
push
pop
or
ds
daa
and
inc
ret
mov
jae
jae
xor
ficompl
cmc
sarl
push
js
je
enter
dec
mov
and
lds
and
call
cmp
inc
mov
mov
subl
mov
stos
sbbl
add
dec
and
cmpsl
push
add
scas
mov
add
adc
add
mov
in
and
jbe
jo
jns
loopne
mov
std
nop
aam
jns
lahf
outsl
pushf
xchg
cmp
jmp
inc
cmpsl
lods
pop
notl
dec
or
fcmovnb
xor
out
rol
xchg
stos
fcmove
shlb
in
shll
call
pop
adc
push
mov
pop
add
icebp
sub
mov
cli
aas
xchg
jecxz
sbb
popa
inc
out
push
jle
outsb
push
mov
into
scas
lret
jge
fbld
jl
adc
jge
pop
mov
in
sbb
xor
leave
pop
dec
addr16
les
testb
sbb
add
sub
out
push
sub
decl
lea
pop
mov
pop
mov
cmpl
lods
and
or
fsts
int
or
std
lds
cmp
rcl
adc
ss
mov
das
icebp
js
pop
lea
movl
movsb
sub
pushf
aam
dec
jmpw
ret
or
mov
sbb
jmp
test
and
jp
xchg
xchg
loopne
mov
ss
ja
mov
data16
imul
pop
xor
xor
inc
dec
and
jl
scas
xchg
xlat
mov
sbb
or
dec
das
int3
and
lret
pop
insb
addr16
mov
sub
insl
push
jae
in
fbld
pushf
ds
cmc
shrl
arpl
sub
push
popf
sub
mov
cmp
cs
dec
ja
fcmovnu
jmp
les
insb
cmp
push
add
notb
xchg
je
dec
sbb
cmpxchg
lret
bswap
into
jns
xchg
mov
xor
or
dec
mov
mov
cmpsl
sbb
sahf
mov
movsb
xor
andl
sahf
lret
and
leave
and
mov
rorl
sti
xor
inc
sub
lds
shll
jle
popf
xchg
mov
cltd
jno
fisttpl
mov
stc
dec
gs
jbe
jno
dec
mov
inc
push
cs
push
popf
aam
stos
stos
outsl
dec
sub
sbb
cs
addr16
xchg
jg
jge
out
sti
hlt
lcall
xor
sbb
rcrl
cmpsb
ja
pop
les
mov
pop
mov
adc
add
aam
cmp
mov
repz
adc
bound
xchg
mov
add
jno
aaa
sub
xchg
jb
xchg
lock
ret
dec
insl
or
mov
cmp
and
jns
xchg
stos
out
mov
adc
arpl
hlt
cmp
sub
rorl
xchg
mov
aad
xor
pop
fwait
vpmaddwd
inc
xor
xchg
mov
cmp
pop
xor
outsb
mov
xor
test
dec
cmp
ds
mov
lods
movsb
imul
or
or
roll
mov
xchg
fcmovu
dec
sub
stc
shrd
adc
jmp
test
pop
fisttpll
imul
mov
test
mov
jne
inc
sbb
iret
out
mov
jbe
mov
push
gs
sbb
dec
jns
out
jnp
jl
stc
jl
jbe
test
cwtl
mov
dec
jmp
flds
repnz
or
sbb
inc
jnp
dec
and
jbe
in
cmp
or
push
mov
test
cmp
lods
dec
jmp
mov
and
outsl
ljmp
repz
jae
xor
xchg
add
mov
lods
sbb
lods
fistpl
jg
xorl
stc
gs
sbb
mov
jg
fiadds
loope
shll
dec
sti
inc
movsb
out
inc
add
leave
sub
mov
jmp
dec
cltd
movsb
enter
lahf
and
jmp
out
cmc
xor
xchg
loop
nop
cmp
jl
mov
pop
sarb
es
sub
or
jae
icebp
dec
loopne
push
rorl
icebp
popw
adc
sar
insl
adc
insl
sahf
sub
ds
mov
inc
jb
sarb
iret
leave
std
sti
mov
outsb
or
push
add
inc
lcall
inc
push
cmpsl
cmp
clc
pusha
aam
in
inc
jno
data16
inc
in
repnz
out
sbb
shrb
hlt
adc
enter
scas
ljmp
lret
das
mov
xchg
mov
inc
mov
dec
mov
ljmp
shl
adc
je
adcb
sub
stc
pop
sbb
inc
pushf
outsl
xor
sub
and
iret
gs
or
jns
pop
push
mov
imul
pop
cltd
xor
sbb
lods
cmp
pop
or
arpl
jns
fstp
jne
push
jno
movsb
inc
mov
mov
inc
mov
dec
adc
inc
dec
dec
and
xchg
popf
add
or
mov
cwtl
xchg
insb
push
sub
xlat
lcall
imul
out
out
aam
jp
repnz
cs
shll
repnz
arpl
pop
add
sbb
jl
adc
push
xchg
addl
add
rorl
mov
mov
dec
adc
xchg
push
fcomi
xor
enter
mov
xchg
pop
jge
popf
jo,pn
pop
dec
test
data16
test
xchg
out
dec
sbb
add
inc
hlt
ret
imul
pop
sbb
insb
fscale
or
scas
test
test
mov
ret
xor
or
cmc
mov
sar
mov
push
scas
pop
inc
jle
pushf
aaa
aas
xor
testb
rorl
push
int3
dec
mov
xor
into
int3
fisubrl
movsl
cmpsb
mov
inc
adc
sbb
dec
aaa
addb
add
outsl
jb
jl
dec
push
std
xchg
hlt
insl
xor
cmp
xlat
cmp
and
push
mov
xlat
push
jmp
dec
lahf
sbb
add
push
das
jecxz
loopne
test
outsl
pop
arpl
push
adc
mov
xor
mov
sbb
inc
pop
jl
imul
inc
and
aad
push
in
pushl
int3
daa
jo
and
push
pop
stos
ret
mov
leave
outsb
and
push
scas
clc
dec
mov
popf
and
ret
cmp
ss
xor
cwtl
stc
pop
sub
lea
scas
subl
mov
dec
enter
sti
test
jbe
pop
mov
sub
outsb
movzwl
scas
fwait
daa
pop
sub
xchg
sub
sub
movsb
sbb
add
cmp
icebp
pop
daa
loop
and
jne
adc
icebp
imul
repz
fiadds
push
gs
xor
insl
xorl
fwait
add
dec
jne
add
or
fldenv
insl
pop
mov
in
jnp
cmp
inc
ds
mov
cmp
push
mov
inc
mov
leave
shll
push
rorb
push
out
xchg
sbb
push
add
mov
loop
in
push
cs
test
mov
les
lret
sbb
add
ds
mov
data16
iret
jecxz
loop
fcmovb
adc
insl
lahf
daa
cmp
cld
add
push
or
mov
inc
inc
jg
jb
lods
inc
sarl
fimuls
dec
or
pusha
scas
int3
pop
inc
mov
cmp
ret
ljmp
scas
repnz
pop
mov
inc
pop
js
xchg
insl
xor
xor
xorb
aad
rcrl
jmp
lods
dec
jns
mov
scas
imul
pop
mov
push
inc
ds
push
pop
mov
incb
or
jg
aas
in
movsl
and
adc
cmc
pop
dec
orb
out
sbb
push
shll
aas
pop
jecxz
fs
cwtl
pop
mov
rcrl
testl
dec
enter
xchg
sub
inc
movsl
mov
sub
jle
sahf
xchg
addl
enter
dec
xor
loopne
push
sub
ret
in
andb
into
mov
arpl
dec
fsts
and
negb
mov
and
jne
loope
aad
dec
clc
push
std
sbb
mov
nop
cmpsl
jne
cmp
xor
push
or
xor
add
xlat
pop
out
fisttpll
xor
pop
jbe
in
lahf
sbb
hlt
cmp
dec
stos
jl
cltd
dec
and
clc
lcall
and
data16
cmpsl
inc
scas
roll
xlat
xchg
in
jae
sbb
stc
lods
repz
lret
jno
xchg
arpl
divb
nop
test
hlt
or
xor
push
decb
pushl
push
push
out
xchg
shll
and
icebp
xchg
icebp
add
push
out
jmp
stos
fisubrl
inc
cmpsb
sbb
in
sahf
cmp
xor
out
ja
jge
add
fistpll
lock
enter
cmpsb
xor
dec
adc
or
jg
mov
fnstsw
dec
fidivrs
push
mov
insb
ret
fs
jo
sti
pop
fidivrl
decb
jns
lret
or
jp
lock
aaa
movsb
sbb
out
xor
dec
lods
mov
cmp
mov
push
jno
push
add
mov
lahf
es
pop
jg
mov
mov
mov
repnz
sbb
fdivp
pusha
scas
outsl
push
in
ljmp
mov
or
cld
pop
sub
inc
lods
mov
add
mov
mov
pop
imul
cmc
xchg
cwtl
cltd
pop
sbb
popa
loop
dec
fsubr
ret
pop
sbb
movsb
imul
xor
cltd
dec
xchg
xor
leave
es
dec
rcll
xorb
cmp
iret
inc
xchg
sti
in
js
jl
jl
popf
cmpsl
loope
or
ret
xchg
sbb
fs
cmpl
xor
mov
hlt
scas
nop
jecxz
mov
cmpsb
or
call
aam
pop
pop
mov
loope
xchg
cmpsl
cld
mov
aad
push
test
jecxz
sbb
in
test
fnstenv
jae
or
xchg
lret
pop
ds
inc
outsl
mov
insl
scas
in
enter
test
and
mov
les
mov
fldcw
or
cmp
out
jmp
test
mov
or
push
add
rol
popa
mov
das
lea
dec
and
mov
fcmovbe
push
fs
or
add
std
shll
or
cmpsb
mov
into
ret
sbbl
in
lods
iret
fstl
cwtl
sub
push
call
or
popa
test
jp
int
dec
lea
inc
jp
or
test
lea
cmp
pop
or
cwtl
sub
leave
pop
divb
sbb
test
sub
out
test
into
push
sub
push
and
adc
xchg
ss
push
mov
jb
push
pop
call
sbb
sbb
or
leave
adc
ret
mov
pop
cmp
or
xor
insb
and
jmp
pusha
aad
movsb
test
sbb
sbb
movsb
sarb
xor
out
inc
mov
inc
mov
stc
arpl
enter
jmp
cmp
lcall
push
cmp
xchg
dec
rcr
mov
in
in
xchg
mov
jge
scas
inc
xchg
call
push
orb
icebp
clc
xchg
test
jns
mov
lret
add
in
mov
out
cld
int
dec
push
in
push
cltd
cld
add
and
pop
xor
sub
aas
into
fiaddl
imul
add
mov
fcom
cs
sub
in
xor
sti
mov
push
lret
add
cwtl
scas
lods
dec
mov
push
scas
lds
cmpsl
push
lret
cli
mov
clc
or
movb
cltd
ret
stos
lods
das
popa
pushf
sub
or
in
xchg
add
lcall
sub
arpl
dec
lret
push
push
enter
addr16
sub
lods
mov
lods
cmp
andl
sbb
loope
mov
inc
aad
dec
jmp
fwait
and
pop
dec
test
mov
aaa
mov
shrl
xchg
popa
mov
cmp
cmp
xchg
xor
cmc
and
push
add
scas
xchg
cmc
xchg
jle
fcom
repz
inc
xchg
lahf
jp
mov
push
dec
mov
mov
sub
loope
lahf
fwait
leave
xchg
fucom
sbb
lds
loop
dec
dec
pop
pusha
mul
mov
mov
mov
arpl
fimull
mov
stos
lahf
sbb
rcrl
and
jno
push
enter
xor
mov
test
daa
loope
popf
or
jae
jmp
pop
aaa
or
pop
pop
popa
pop
sahf
pop
pop
cs
imul
adc
ja
xchg
lcall
add
dec
leave
addr16
imul
int3
insb
lret
lea
cmp
push
rorl
and
jb
aaa
mov
outsb
push
orl
aaa
add
xchg
adc
add
lret
sub
push
int3
fisubrs
or
mov
mov
shlb
cmp
ret
sub
push
add
add
fwait
and
jno
mov
popa
inc
xor
xchg
mov
xor
fstpt
stos
arpl
pushf
add
es
and
ja
mov
out
stc
loope
adc
xchg
test
mov
xchg
push
mov
lods
mov
xor
lock
enter
in
inc
sbb
push
jne
jge
xor
cmp
dec
daa
enter
les
insb
mov
sbb
add
xchg
aad
call
int
test
mov
xchg
push
aas
cmp
rcrl
mov
push
push
movsl
movsb
pop
add
idiv
iret
add
fisttpl
push
pop
cmp
cmpsl
je
aaa
cmpsl
push
fisubl
jl
fxch
mov
and
mov
sbb
loope
cmp
jmp
jno
sub
call
fnsave
fldcw
test
cmpsl
int3
aad
jle
mov
outsl
je,pn
lahf
dec
icebp
push
sarl
enter
popa
ret
and
imul
mov
sub
movsb
sahf
mov
xchg
fcomps
pushf
mov
cld
int
inc
insb
mov
xchg
shl
adc
inc
mov
dec
negb
sbb
jae
xor
pop
mov
leave
mov
pushf
mov
cltd
sbbb
pop
rcr
and
mov
imul
cmpsl
sub
cld
pop
push
jl
xchg
mov
or
jle
pop
insl
and
test
pop
sub
dec
into
fbld
movsl
leave
and
mov
pop
fidivrl
js
xchg
xchg
in
lock
dec
aad
mov
push
xchg
sub
out
push
sub
dec
fistpl
imul
ficoml
sti
xchg
pushf
mov
pop
sbb
push
cmpsl
mov
cmp
les
scas
mov
adc
push
xchg
insb
mov
jp
mov
cli
jmp
hlt
sub
cmpsl
enter
mov
pop
sahf
mov
mov
xchg
jnp
pop
fisubrl
mov
xchg
lods
pop
fsubrs
les
mov
imul
jno
ljmp
in
pop
or
jo,pt
jns
mov
lahf
push
dec
push
sbb
inc
lds
sub
aaa
cltd
loop
push
bound
mov
test
push
andl
daa
loopne
fstpl
arpl
jb
rclb
sbb
push
lahf
jnp
mov
jg
mov
fwait
xchg
loop
jne
std
sbb
scas
mov
lds
rorb
mov
cmp
aam
xor
inc
pop
rorl
aad
or
inc
fsubp
fisubl
push
cmc
outsb
jb
dec
push
sahf
inc
pop
add
scas
mov
push
aaa
arpl
fisttps
xchg
cmp
mov
mov
cs
pushf
bnd
dec
daa
pusha
dec
cmp
stos
xlat
jno
jp
lds
jecxz
mov
mov
cmp
leave
ret
cli
repnz
xor
or
sbb
inc
or
pop
xchg
jb
ficoml
lods
add
and
ljmp
mov
xor
loope
popf
repnz
add
add
jne
scas
dec
inc
jno
call
cld
push
jmp
mov
sub
pop
mov
nop
shr
je
mov
in
adc
testl
pop
mov
mov
cmc
push
sbbl
add
es
push
push
sbb
mov
and
jb
mov
stos
add
sbb
out
sbb
movsb
jg
aam
lret
mov
ret
sbbl
js
push
and
sub
frstor
mov
ljmp
je
jb
mov
push
dec
out
sub
xor
xor
xorb
dec
mov
push
push
lcall
dec
mov
repnz
push
fucomi
or
adc
daa
dec
dec
movsb
push
out
pop
dec
stos
inc
jge
mov
out
ljmp
enter
sbb
push
in
clc
cmpsb
cltd
mov
cli
pop
aaa
repnz
or
and
cmc
out
loop
xor
and
sti
jne
xor
inc
leave
stc
sub
out
es
hlt
test
dec
mov
int3
cmp
pop
adc
mov
mov
xor
cld
cmp
push
outsb
push
mov
cld
insl
psrlw
mov
scas
ljmp
jp
lock
in
mov
loope
test
imul
shlb
add
xor
in
fisubrl
push
in
lods
aam
in
add
inc
call
jmp
ret
and
cmp
arpl
aam
jl
es
xchg
mov
sbb
repnz
cmp
dec
ja
push
dec
test
xchg
loop
lds
into
repz
sub
int3
int
dec
mov
cmp
cld
xchg
sbb
dec
out
push
push
add
jo
mov
mov
lret
pop
outsl
subb
jbe
xor
test
repnz
xor
nop
mov
mov
data16
in
inc
push
fwait
or
loopne
push
cmpsl
test
adc
out
out
popa
xor
sbb
loope
xchg
inc
dec
inc
pop
jle
popa
gs
sbb
ss
push
icebp
shr
movsb
fisttps
jl
in
ficoms
xor
sub
aad
jae
popa
bound
xor
dec
push
sbb
jl
adc
std
fldt
add
repz
stc
mov
ss
mov
adc
push
push
inc
mov
test
out
out
add
sub
jmp
adc
sbb
dec
mov
add
outsb
jns
pop
and
je
lea
movsl
dec
and
incl
pop
jbe
push
add
fwait
or
mov
mov
push
movsl
hlt
pop
push
aas
in
or
xor
cmp
lods
pop
shll
adc
sub
mov
jecxz
mov
call
scas
leave
cmp
aas
lods
fcomip
aad
adc
insb
lods
loop
iret
or
cmpb
int3
or
mov
inc
stos
inc
mov
sbb
xchg
das
pop
mov
arpl
frstor
add
and
js
inc
and
xchg
ss
lods
xchg
mov
psubq
lret
or
lret
sahf
inc
xor
fdivrl
push
aad
imulb
call
inc
jne
push
sub
mov
jg
pop
cmp
in
sahf
addr16
clc
and
jmp
ret
in
lods
add
push
negb
sub
in
cwtl
mov
pop
xor
dec
mov
fldl
das
jmp
dec
cltd
or
outsb
call
xchg
xchg
inc
test
mov
js
mov
inc
adc
test
ret
inc
dec
movsb
psubsw
cs
and
jae
ds
and
aam
adc
xchg
call
addr16
popf
mov
sbb
sub
aad
cmc
fmull
xor
sbb
out
sbb
sbb
mov
jne
out
int3
push
mov
mov
into
add
cld
dec
xchg
or
jnp
push
cld
incl
mov
jb
pop
call
cld
ja
sbb
xor
cmpsl
and
xor
mov
or
lahf
pushf
mov
and
and
scas
cwtl
jmp
fimull
mov
push
sbb
cld
jns
mov
push
sbb
imul
xor
cmp
sbb
arpl
fisttps
pop
popf
xchg
les
fdivrl
in
jmp
loop
imul
lret
jne
iret
jbe
xor
mov
xchg
cltd
xor
adc
mov
arpl
inc
mov
pop
js
and
sub
gs
jb
cmc
jns
sbb
jo
pop
popf
pop
mov
test
lahf
and
cltd
nop
mov
mov
jmp
in
xchg
pop
or
ds
std
sar
pop
xor
fsubp
popa
push
rcl
mov
adc
dec
stc
mov
imul
lds
sbb
fsts
xlat
lods
jecxz
pop
icebp
stc
mov
xchg
test
mov
loop
les
lahf
jge
loop
sub
out
jae
inc
inc
test
push
push
rcll
lahf
mov
xor
mov
inc
test
mov
inc
sbb
dec
mov
cld
shr
xor
lock
and
cltd
lret
push
cmpsl
repnz
and
pusha
sub
leave
sub
sbb
xor
sub
cmp
dec
push
add
fisubrl
into
sbb
call
dec
out
jg
cmpsb
xchg
subb
or
sub
repz
repnz
pop
push
aam
xorps
loop
xor
push
sti
jnp
push
cmp
out
dec
aam
out
push
les
aam
test
enter
xchg
push
xlat
lds
test
pop
mov
cmp
clc
inc
xor
jb
mov
xor
es
fimuls
pusha
sub
shld
repz
pop
test
mov
sarb
and
inc
dec
push
in
loope
fisttpll
pop
cmp
lods
in
sahf
sub
ja
jbe,pt
setns
pop
lea
sbb
test
sbb
out
popa
sub
push
inc
sbb
xchg
inc
jl
inc
jmp
or
leave
pop
mov
jl
xchg
xchg
push
daa
dec
pop
push
mov
sub
pushf
inc
inc
pop
in
mov
dec
add
imul
sbb
push
mov
pop
addr16
sbb
arpl
add
cltd
add
jecxz
in
xor
dec
aas
mov
sbb
lock
jmp
push
testb
add
cmpsl
fstpl
inc
inc
fs
icebp
insl
cmp
sarl
jle
test
mov
mov
jnp
ljmp
jns
in
jmp
jle
and
lahf
dec
and
xchg
sbb
mov
xchg
lea
xor
mov
adc
jge
movsl
push
imul
push
jge
mov
rolb
cmp
or
jno
ja
dec
dec
ret
clc
lea
xchg
xor
dec
sub
bound
lret
or
outsb
lods
dec
pop
in
ret
cld
ret
loope
psubsb
mov
dec
xor
loopne
scas
inc
push
inc
jno
cmp
sub
and
xchg
in
mov
mov
sub
jmp
outsb
movsl
outsb
mov
and
pop
push
mov
fiaddl
xor
inc
xchg
lock
aam
sbb
lahf
outsb
add
or
sti
pop
push
icebp
dec
sub
push
push
sub
in
or
dec
mov
pop
dec
xor
cmp
rorl
sbb
clc
mov
cmpsb
ficompl
je
aaa
fucomip
jb
lock
push
sbb
negl
push
ljmp
test
shl
cmp
shrb
outsl
ljmp
pop
mov
jge
inc
js
cmp
pusha
lds
andb
adc
stc
das
or
fwait
push
adc
imull
testl
push
lret
lcall
dec
outsb
jb
adc
shrd
outsl
pop
sub
inc
enter
mov
dec
call
sbb
sub
sub
or
cmp
leave
push
lea
lods
mov
jl
in
add
push
hlt
jge
sbb
add
out
inc
push
sub
gs
cmp
xchg
add
les
mov
sarb
test
sar
mov
jge
inc
movsb
sti
sarb
pushf
lea
add
jne
sahf
fsubl
popf
mov
out
inc
mov
ret
fistl
or
lret
into
bound
push
std
pop
insl
out
mov
int3
in
add
xor
daa
push
out
fldenv
cmp
subb
sub
mov
cmpb
jg
ja
adc
in
ds
sub
inc
adcb
mov
sub
or
or
xor
roll
rol
std
call
cltd
pop
fmull
imull
pop
les
imul
lock
sbb
pop
cmp
lcall
mov
and
popa
xchg
adc
int
in
pop
lock
insl
loopne
and
inc
pop
add
fyl2x
push
orb
pop
test
aam
cmp
add
aaa
lret
mov
mov
fcoml
loope
je
and
lahf
int3
dec
jne
inc
adc
mov
or
stos
sahf
and
jo
mov
pusha
xchg
mov
pop
and
or
pop
fucomip
cmp
xchg
mov
insl
xchg
int3
orl
add
insl
cld
inc
test
xchg
sahf
arpl
lcall
xor
and
pop
in
popf
faddl
shl
push
xchg
std
mov
cld
mov
pop
xchg
out
push
lods
xchg
mov
loopne
push
andl
sbb
mov
in
jge
and
sbb
enter
add
pop
sub
punpckhdq
jg
cmp
jecxz
xchg
fmul
stos
cmp
addr16
or
cmpl
jmp
mov
lret
pop
push
movsb
push
scas
fildl
stos
dec
sub
pop
mov
js
lock
call
es
xchg
add
xchg
cmp
cld
sbb
out
outsl
nop
adc
mov
push
jp
sbb
fs
jbe
cmp
sti
gs
push
mov
sbb
mov
xchg
ud1
pop
loope
push
test
aas
lds
jne
mov
jns
stos
dec
pop
cld
pop
cltd
aaa
sub
popa
ljmp
mov
clc
nop
jns
negb
ljmp
add
fildll
push
jecxz
sub
mov
lahf
pop
repnz
xchg
rol
or
cmp
int3
sub
pop
fstpt
insb
out
int
sar
les
pop
out
out
jae
ljmp
clc
push
cmpsb
cmpsl
add
mov
jne
flds
fisttpl
inc
into
sub
ja
pop
push
xor
push
xchg
loop
mov
dec
and
inc
add
jae
or
fcoml
jno
int3
xchg
outsb
repz
movups
in
iret
cmp
push
cli
shlb
scas
sarl
mov
cmpsl
jae
mov
adc
add
sbb
mov
ja
rcrb
mov
mov
ja
out
mov
lods
jle
rcll
xchg
gs
lods
or
lods
mov
mov
fdivr
or
xchg
inc
push
push
adc
pop
arpl
int
sub
sub
cltd
mov
add
xchg
jge
xor
add
cmpsl
cmp
push
sbb
jecxz
mov
das
lret
imul
push
popf
add
lods
dec
push
push
aas
push
sbb
mov
orb
cmp
mov
rorl
dec
fmull
aas
lds
ret
sti
addl
jnp
lahf
jbe
push
jmp
mov
movsl
aad
movsl
and
and
lret
adc
lods
mov
and
jl
sub
sub
mov
and
pop
cmp
push
fidivl
rep
push
cwtl
icebp
addl
stos
gs
add
fnstcw
cltd
fldcw
mov
pop
adc
jl
mov
and
movsl
mov
leave
aaa
mov
ss
inc
jp
push
rolb
mov
push
pop
or
rolb
jl
rcl
arpl
ljmp
stos
adc
les
xchg
test
push
pusha
cmpsb
xor
inc
sub
sti
push
out
pop
aas
inc
ficoms
jb
in
mov
inc
dec
mov
sub
cmc
loopne
or
scas
sahf
sbb
pop
stos
cmovnp
dec
mov
out
ss
or
sub
jns
das
push
push
fnstcw
xor
daa
js
gs
pushf
mov
mov
inc
xor
fs
inc
lcall
fcomps
aas
push
mov
sub
in
clc
sbb
pusha
jp
mov
jle
adc
xchg
xchg
insb
and
and
lock
pusha
mov
mov
fdivs
icebp
ja
cmp
mov
gs
xlat
sbb
call
pop
in
mov
jle
mov
mov
push
sbb
aad
sub
sahf
xchg
out
popl
mov
jno
sub
mov
xlat
inc
push
pop
outsb
cmc
adc
pop
outsb
int3
cltd
mov
cmp
mov
adc
jbe
pushl
pop
xchg
pusha
cmp
mov
fnsave
push
fidivrs
xchg
orl
push
test
add
leave
test
jns
imulb
add
jl
jecxz
aas
cmp
push
adc
fistpll
inc
jb
aam
mov
dec
jl
scas
insl
pop
aaa
in
stos
mov
and
iret
xchg
mov
xor
sub
and
adc
xor
rcll
leave
lods
popf
fnstsw
imul
inc
xor
std
sbb
out
mov
dec
push
push
clc
push
inc
inc
sahf
je
test
pop
inc
or
mov
pop
loopne
lds
inc
mov
rol
xchg
jno
jl
jo
xor
push
add
mov
push
das
in
inc
scas
rorb
loope
aaa
fldl
lods
data16
cltd
mov
fisttpll
adc
sbb
mov
add
mov
inc
leave
lcall
push
in
leave
jb
loopne
fistpll
sahf
sar
mov
mov
popa
push
dec
jg
cmpsb
outsl
hlt
stos
push
je
and
sahf
cmp
stos
mov
mov
rolb
xchg
leave
outsl
adc
adc
xchg
sbb
cs
inc
xlat
pop
das
and
shll
jno
xchg
sbb
aam
sarb
scas
mov
xor
pop
outsl
mov
pop
and
shlb
pop
adc
mov
mov
lea
test
fmul
loop
cs
jl
mov
sub
pop
push
cs
mov
dec
popa
insl
call
and
cmc
test
xchg
into
and
mov
dec
adc
aaa
xchg
icebp
mov
adc
and
jecxz
xor
xchg
loop
pop
mov
in
fcomps
scas
inc
or
aad
jo
aad
inc
lret
orb
or
outsb
lock
mov
fiaddl
sbb
mov
lret
mov
inc
mov
sub
xlat
sub
add
cmp
pop
aad
push
nop
xchg
cmovp
fildll
stos
mov
fsubs
sub
jge
cmp
call
jo
fdivrs
call
mov
ds
inc
xchg
aaa
in
test
jge
adc
jecxz
pop
mov
add
fldt
hlt
ficomps
imul
xchg
inc
jle
add
adc
jnp
push
sub
imul
pop
sahf
cs
imul
xchg
or
mov
jb
mov
and
loopne
call
or
add
cmp
loopne
jb
sub
iret
sti
fisubl
inc
fsts
pusha
arpl
sub
xchg
lret
jbe
inc
xchg
jg
push
jbe
ss
pop
outsb
outsb
addr16
cltd
push
xlat
xchg
sub
test
ds
pop
adc
or
fnstcw
aas
inc
push
lret
jo
ljmp
test
adc
js
out
jle
je
mov
cmp
pop
push
mov
movsl
sub
push
vminsd
in
inc
add
xlat
jno
pop
xlat
sub
add
sti
test
or
pushf
sbb
repz
and
movsl
jne
rclb
imul
inc
fucomip
mov
jg
cmpsl
pop
and
pusha
mov
je
xor
xchg
ficoms
mov
sbb
or
xchg
inc
adc
sub
pop
lret
mov
aaa
insl
dec
cmp
lds
add
mov
ret
rclb
es
xor
jae
into
lcall
fldt
pop
daa
into
pop
sbb
mov
jge
loope
jb
lret
iret
sub
adc
xlat
add
jbe
xchg
pushf
inc
push
fistps
xor
test
add
mov
js
cmp
pop
mov
adc
mov
sarb
sbb
lret
push
sbb
fucom
mov
lods
cmpl
push
leave
lock
mov
pop
or
adc
push
rorl
add
fistpll
js
cwtl
pusha
lret
testl
jb
inc
adc
loop
sbb
fsubrl
insb
jnp
jge
test
adc
imul
adc
push
mov
das
aam
mov
adc
popa
dec
or
push
fcoms
pop
arpl
and
fcoml
and
dec
fisubrs
mov
lds
stos
mov
aad
xchg
pop
stos
xchg
jns
pop
outsl
and
gs
and
pusha
cs
aaa
and
xchg
inc
xchg
xor
out
cmp
fwait
and
adc
mov
insl
or
ljmp
fldt
jg
into
mov
aas
sbb
test
rolb
xor
xor
out
sbb
xor
jne
push
out
popa
cmp
rcrb
ds
hlt
mov
ds
loop
daa
data16
imulb
hlt
and
inc
das
cmp
fst
or
loope
filds
imul
mov
inc
nop
jle
and
fcomip
pop
pushf
mov
icebp
mov
repnz
mov
jbe
inc
sub
inc
mov
cmpl
push
repnz
dec
les
sti
das
xchg
fmuls
push
aaa
loop
pop
or
int3
adc
mov
aam
mov
cld
dec
idivl
pop
scas
inc
sahf
and
add
jb
push
dec
lea
mov
xchg
jns
push
out
sub
adc
pop
mul
dec
lret
stos
and
cli
inc
enter
adc
add
add
and
mov
out
leave
add
xor
inc
stos
jnp
mov
clc
mov
cltd
notl
cs
or
jmp
add
arpl
mov
add
stos
leave
adc
out
pop
xchg
daa
into
push
int3
rcrl
leave
scas
iret
jmp
nop
jno
jecxz
out
push
mov
arpl
in
cwtl
in
cmp
dec
insl
mov
cmp
sub
jmp
dec
dec
xchg
test
imul
daa
repz
scas
adc
mov
stos
and
bound
push
je
leave
sbb
lret
or
cmp
fists
sar
sahf
sbb
daa
pop
and
rcrl
push
xchg
stc
mov
inc
xchg
sti
shlb
inc
mov
ja
sub
sbb
lods
bnd
jae
mov
and
sahf
scas
movsb
or
bound
xlat
add
mov
ret
or
ljmp
es
sahf
inc
jno
aaa
cmp
jle
movsl
jns
inc
aaa
or
mov
dec
mov
das
cmp
or
bound
mov
sbb
adc
and
enter
outsb
mov
or
push
and
or
xor
push
out
or
cli
and
lahf
dec
lahf
shl
and
xchg
mulb
fmuls
fimull
cmp
add
aad
adc
fwait
dec
adc
lea
ret
fnstcw
add
inc
in
sub
stc
jmp
sub
mov
fs
mov
ret
jo
mov
cmp
fstl
push
lds
lahf
mov
jo
jae
xchg
cwtl
or
outsl
xor
xchg
jnp
jmp
lods
dec
iret
adc
push
fildll
mov
shlb
xchg
insb
pushf
test
leave
out
pop
fsubl
inc
sbb
pop
push
cwtl
xchg
stc
cld
mov
sahf
pop
mov
jge
mov
and
sub
sti
jmp
sub
fsubs
push
add
jbe
push
icebp
test
push
xor
xchg
sub
push
xor
fisubrl
lahf
inc
test
dec
repnz
xchg
fldt
ljmp
sahf
cltd
xor
ljmp
invd
in
in
incl
test
loop
roll
pop
xlat
cli
fwait
in
push
nop
xchg
in
das
mov
push
mov
inc
arpl
xor
stos
jle
mov
adc
subl
sub
jmp
cmp
rolb
xor
push
push
fildl
xchg
xor
mov
mov
xor
test
test
pop
xlat
jg
push
negb
mov
sub
dec
ljmp
pop
mov
ds
rcrl
add
clc
movsb
fisubrl
lahf
in
inc
ss
push
orb
jbe
inc
inc
jmp
daa
jmp
shrl
jge
int
aad
mov
mov
jno
aam
xor
lret
ss
clc
movsb
iret
mov
stos
shrl
call
and
pop
in
adc
mov
add
mov
ss
jb
addr16
xorb
rcrl
shl
and
mov
insb
or
lret
out
insb
cmpb
pop
loop
ja
fucomi
pop
push
jecxz
mov
sub
push
ss
mov
inc
cmc
fwait
js
iret
inc
cmp
xchg
xor
mov
or
mov
dec
popf
push
jl
subb
das
js
and
pop
les
sub
or
lea
add
mov
pop
shll
out
test
jno
add
iret
iret
dec
xor
leave
icebp
mov
movsl
xchg
and
add
xor
fstl
jl
and
add
loop
mov
shr
aas
mov
test
lret
xchg
pop
jo
call
or
xor
lahf
outsb
push
xchg
mov
stos
test
pop
popa
pop
cmp
mov
xor
adc
xchg
pshufw
jnp
pop
ljmp
loop
clc
stc
jnp
ja
outsl
int3
add
imul
mov
outsl
xor
popf
xor
or
mov
fidivs
in
pop
dec
push
in
ss
clc
xor
jne
imul
lods
mov
pop
sbb
mov
adc
xor
inc
jnp
subb
xor
fldcw
mov
cli
adc
dec
fnstsw
mov
xchg
cmpsl
cwtl
adc
stc
and
loope
int
sub
jb
jg
and
ret
fwait
and
jno
iret
mov
xchg
rcrl
adc
cmp
outsb
or
lcall
cmc
fnstcw
mov
xor
jne
xchg
dec
fisttpl
add
sub
jae
lret
lret
jae
mov
add
push
dec
inc
je
movsl
es
jno
push
test
int3
call
jae
cmp
scas
repz
cs
and
xlat
outsb
mov
incl
out
stos
ret
push
push
xor
cwtl
fmull
jo
test
cmpsl
push
pop
lods
sub
leave
fisubl
cmpsb
xor
ss
fstpt
or
cmp
inc
out
mov
sub
orb
push
push
push
lea
or
mov
int3
xor
aas
jns
loopne
mov
cwtl
sti
add
loop
cmpl
inc
inc
frstor
xchg
cmpb
fidivrs
shrl
xchg
clc
pop
xchg
in
loop
hlt
mov
mov
adc
fdiv
adc
jns
in
roll
loopne
cmp
sbb
mov
push
ss
adc
cwtl
and
push
pop
and
xchg
push
cmpsb
icebp
inc
bound
mov
loopne
ret
push
sti
ja
xchg
loop
shlb
jo
pop
jns
pop
mov
mov
dec
cmp
pop
add
inc
rorl
xchg
sub
in
sbb
pop
insb
adc
push
cmp
ss
inc
clc
lods
fnsave
xchg
adc
add
cmc
lods
hlt
cmpsl
cs
adc
dec
cmp
rcrl
mov
adc
xchg
sub
jo
insl
jmp
fxam
loopne
aad
std
stc
loop
sbb
dec
inc
mov
repz
adc
aad
movsb
mov
and
aad
mov
and
iret
mov
sbb
and
push
xlat
xchg
push
cld
popf
in
es
out
xor
call
stos
or
xor
mov
dec
lret
inc
imul
fadds
cwtl
xor
shl
cmp
leave
jmp
aam
push
loope
dec
mov
clc
dec
mov
movsl
mov
fdivl
adc
mov
cli
mov
popa
jmp
rcrl
sub
jecxz
imul
insb
mov
lds
dec
adc
lret
fdivrs
mov
cmc
imul
cmp
fnstenv
or
lods
push
and
jp
pop
xor
or
cmp
jge
iret
xchg
int3
mov
in
mov
repz
mov
jbe
sub
jl
sarl
adc
dec
mov
je
jle
add
mov
add
jae
jns
icebp
add
out
jnp
cli
cmp
fdivrs
aam
mov
jb
jge
sub
cmpsl
ret
mov
stos
xchg
jns
iret
push
or
loop
sbb
lcall
enter
or
xchg
xchg
and
das
xor
or
sbb
inc
lcall
xchg
mov
mov
arpl
lods
pop
sbb
out
mov
repz
sbb
pop
leave
jo
mov
or
pushf
push
mov
jp
mov
aad
stos
mov
push
rcrb
and
push
jl
pop
sub
daa
dec
xor
into
lret
or
pop
inc
scas
loope
mov
mov
jecxz
sbb
mov
pop
dec
dec
xor
dec
jp
mov
adc
mov
mov
mov
int3
add
cmp
jo
popa
cmp
pop
call
fadds
cmp
push
jl
sti
insb
xor
lahf
call
aam
add
lret
mov
mov
pusha
fldl
imul
pop
les
xchg
mov
in
pop
prefetch
pop
adc
rcrb
pop
sbb
gs
mov
ss
ljmp
cmp
add
pop
addb
xchg
cmp
pusha
push
mov
dec
aas
psubd
inc
push
std
xor
movsb
mov
xorps
jge
adc
sbb
fwait
stos
pop
lods
mov
mov
or
orb
jno
icebp
out
jmp
decl
xchg
mov
mov
aas
xchg
data16
lahf
xlat
fs
shll
sub
mov
dec
pop
mov
movsb
push
dec
sub
inc
rcr
mov
in
cmc
clc
cmp
repnz
push
jno
adc
jmp
mov
jmp
clc
pop
std
iret
push
inc
lods
xchg
cltd
shrb
xor
mov
mov
adc
sub
rorl
pop
rcrb
mov
mov
mov
inc
in
lods
fstpl
xor
jns
cwtl
mov
cmpsb
or
call
popa
push
or
jp
fmuls
mov
out
popf
das
xor
sbb
mov
mov
cmpsb
dec
push
push
ljmp
stc
mov
loopne
pop
outsb
cs
push
push
loope
mov
sahf
movsb
and
cmp
dec
cmp
mov
jne,pn
jns
mov
xchg
scas
jnp
inc
cltd
int3
jb
js
sub
pop
and
pop
jns
cltd
inc
mov
push
bsr
mov
mov
inc
inc
pop
das
cli
mov
push
inc
sahf
loope
out
insb
mov
push
sub
push
push
test
int3
adc
dec
push
shrl
js
dec
sub
pop
push
xor
testb
cmp
pop
mov
pop
in
insl
stos
mov
clc
adc
movsb
enter
sbb
adc
outsb
and
push
les
cmp
sbbl
jle
xchg
iret
and
adc
cs
test
push
mov
lea
mov
daa
sub
movsb
out
push
push
sbb
insl
mov
mov
jns
dec
dec
adcb
mov
cmp
sub
push
fdivp
and
jne
call
rcrl
out
pop
je
dec
mov
addl
jne
jae
movups
cmp
std
push
test
std
push
or
test
inc
ret
andb
jle
jbe
push
add
sbb
or
inc
mov
pusha
cmp
inc
mov
pop
mov
push
repnz
sbbb
popf
sarb
test
sub
dec
push
jl
ljmp
mov
push
push
push
sub
and
setno
mov
jle
cwtl
insl
adc
pop
gs
lock
xor
and
gs
fidivl
or
subl
jb
and
pop
ljmp
clc
imulb
xor
mov
stos
aam
add
int
lock
push
sub
ja
mov
es
divb
adc
push
jnp
shlb
frstor
xchg
into
fmull
mov
jge
xchg
xor
into
add
dec
pop
outsl
jg
test
movsl
out
addr16
push
stos
or
or
cmp
ficoms
cwtl
mov
xor
pushf
push
and
ret
push
hlt
pextrw
inc
inc
int
xor
inc
outsb
push
mov
mov
dec
dec
rorb
out
inc
shrl
add
outsb
ss
cmc
sbb
adc
xchg
iret
jbe
xlat
subb
sti
jecxz
test
fsqrt
scas
xchg
xchg
jge
mov
cli
sbb
fildl
inc
dec
cmp
mov
out
dec
mov
xchg
nop
mov
cltd
pop
aas
arpl
lds
loopne
addb
sbb
arpl
cmp
cltd
xor
aad
in
aam
insb
imul
stc
movsl
pop
stos
or
cmpsb
sbb
mov
ja
daa
imul
adc
xchg
sub
jmp
iret
mov
popf
std
call
add
loope
dec
std
mov
loope
hlt
cld
fimull
cmp
push
dec
mov
aad
das
mov
jmp
rorb
and
daa
mov
pop
mov
mov
sub
cmpsb
fiadds
outsb
jmp
add
fcomps
stc
jne
sbb
das
pop
xchg
movq
lret
and
inc
fs
imul
xchg
bt
mov
scas
xchg
ja,pn
mov
mov
lods
and
dec
cmp
pop
cli
popf
fldt
cmp
movsl
push
loop
in
sarl
mov
xchg
mov
add
jle
mov
outsb
lret
mov
mov
mov
jno
cmpsl
aas
and
test
aam
das
out
test
dec
jbe
mov
sbb
xchg
pop
cmpsl
push
inc
icebp
sub
lcall
insl
xor
jge
lods
inc
aam
mov
stos
jle
loop
cmpsl
mov
data16
adc
and
mov
outsl
jns
es
dec
jbe
popa
jge
out
pop
ficompl
push
jl
adc
dec
jge
jb
adc
dec
lret
sub
add
outsl
mov
dec
fisttpl
mov
shrb
fstl
imul
mov
roll
inc
xor
daa
dec
ud2
xor
cltd
out
repz
xchg
jge
cmp
adcl
mov
mov
or
lret
rcrb
cmp
cltd
shll
jl
sub
je,pn
xchg
mov
adc
in
cmp
pop
mov
jnp
mov
subl
xor
cs
mov
loope
clc
jecxz
mov
cmpsl
jne
cmp
pop
cmpsb
adc
lds
ds
inc
mov
xchg
psubb
jnp
cmpsl
fsts
les
inc
and
inc
xchg
adc
loopne
inc
add
lods
leave
mov
adc
imul
jmp
mov
mov
das
test
or
add
jbe
jmp
xchg
xor
mov
xchg
stc
mov
dec
cmp
xchg
jno
inc
leave
test
mov
jbe
push
xor
dec
sbb
out
inc
fwait
je
arpl
les
outsl
mov
and
jg
frstor
mov
adcb
push
push
in
int
xchg
std
sti
lahf
mov
dec
jle
iret
in
xchg
and
sub
mov
mov
xchg
loop
call
cltd
shrb
fld
or
pop
or
xchg
imul
sub
dec
dec
mov
xor
and
mov
jo
mov
loop
push
cld
mov
fisubrl
les
xor
mov
fnstsw
inc
sbb
mov
cld
inc
test
pop
jns
ror
inc
pusha
jl
fsubp
fstpt
add
imul
sbb
mov
gs
test
pop
or
shrb
push
sub
pop
pushf
popa
push
lods
incl
mov
enter
lahf
xor
xchg
es
cmp
jae
call
jo
sbb
icebp
sub
iret
ror
and
mov
out
fld
sbb
fsubp
adcb
dec
sbb
fs
mov
icebp
inc
cli
inc
xchg
repz
popl
push
add
push
ret
stos
loopne
fbld
ds
cmp
add
xor
mov
dec
add
sbb
jne
and
xchg
fdivs
add
lret
push
or
mov
pop
arpl
push
cmpsb
icebp
xor
dec
out
js
mov
xchg
fadds
stos
popa
mov
push
adc
pop
aad
or
enter
add
jmp
jmp
xchg
hlt
mov
test
or
push
mov
push
push
cmpsb
push
xchg
mov
xor
mov
push
imul
jmp
and
imul
clc
pop
push
push
gs
xor
push
mov
sbb
sbb
dec
and
sbb
or
scas
std
pop
jp
and
push
and
enter
adc
addb
push
jno
std
push
and
hlt
cmpsl
inc
fdivrs
xchg
addr16
lock
lock
idivb
fisubs
mov
sub
pop
vphsubbw
enter
and
fwait
das
and
mov
mov
mov
popa
xchg
push
pop
adc
scas
mov
ja
fs
rcrl
rorb
cmp
fcomi
lahf
jge
movsb
or
sahf
or
or
adc
jno
xlat
or
mov
cmp
pop
adc
dec
pop
mov
into
inc
rorb
add
ja
lock
insl
mov
or
xor
xchg
pop
add
sbb
hlt
clc
xchg
xor
repnz
daa
aas
jp
out
mov
std
jo
jb
dec
fiadds
ds
iret
fdivrl
jns
push
jg
pop
push
fsubrl
cmpsl
hlt
call
rcll
sbb
xchg
out
push
les
and
fidivrl
dec
repnz
pop
fcoml
insb
xor
adc
xchg
invd
jmp
adc
xor
sub
xchg
dec
inc
jg
arpl
xchg
repnz
sub
and
scas
cmp
inc
scas
ficoms
adcl
outsl
inc
or
ja
add
jne
add
mov
movsl
popf
mov
pop
mov
cltd
xlat
fucom
in
out
pushf
insl
ss
push
mov
shlb
stos
mov
cld
fsts
mov
repnz
int
repnz
sbb
push
sub
lock
stc
dec
mov
push
xchg
out
ljmp
pop
push
test
dec
push
loop
xchg
loope
lcall
in
push
cmc
in
icebp
mov
inc
xchg
pop
adc
and
popf
lret
push
pop
pushf
stc
cmp
test
adc
scas
inc
xor
ret
adc
ljmp
pmaxsw
inc
xlat
cmc
add
xchg
cmp
xor
fldcw
js
test
fs
jb
sbb
or
mov
jecxz
inc
adc
xor
outsb
or
mov
filds
cmp
jne
push
out
cmp
xchg
push
push
les
testl
pushf
push
push
xor
mov
das
sub
push
in
xor
and
or
daa
xchg
pop
xchg
mov
adc
movsl
sbb
addps
ret
bound
nop
push
cmc
adc
xor
lea
icebp
xchg
adc
ja
aam
pop
inc
scas
scas
xor
pop
iret
insl
scas
les
dec
orb
stos
jnp
adc
mov
and
mov
xchg
adcb
xchg
mov
roll
pop
inc
adc
rolb
lds
bound
inc
sbb
sbb
fucomp
inc
imull
cli
mov
arpl
mov
sahf
iret
mov
stc
rcr
jecxz
mov
fnstsw
xor
xchg
in
adc
inc
arpl
push
icebp
in
loope
inc
sub
ss
incl
xchg
sbb
stos
pop
scas
pop
dec
inc
addl
int3
pop
fimull
and
mov
sbb
xchg
popa
clc
shlb
addb
cli
nop
dec
inc
cmp
insb
loopne
aam
push
mov
and
dec
pushf
xchg
mov
inc
stos
sbb
or
loope
add
lahf
add
jo
insl
cmc
hlt
outsl
shrb
mov
mov
or
xchg
mov
jne
add
mov
movsb
cmp
fldt
mov
cltd
mov
mov
add
data16
cmp
fucomi
in
add
out
ret
inc
lret
aaa
testl
std
test
inc
sbbb
dec
fdivl
fstps
jb
xchg
repnz
adc
lds
les
dec
fucomp
mov
enter
shl
lret
xlat
cmpsb
inc
mov
cltd
pop
push
lods
test
and
ja
cwtl
adc
popa
and
mov
mov
xchg
popf
jns
stos
dec
stos
dec
mov
jb
pop
out
fistpl
cmp
add
add
jp
in
pop
mov
rol
jp
adc
cmp
popf
sub
push
mov
jo
sti
gs
push
xor
mov
push
push
cmpl
mov
addl
cmp
cs
hlt
jle
xchg
test
jae
idivl
mov
es
and
jle
jg
xor
loop
inc
dec
stc
gs
mov
add
or
pusha
aaa
mov
int
xchg
adc
inc
push
fisubl
imul
loop
or
push
mov
mov
aas
inc
mov
cmp
push
mov
gs
rcrl
lahf
adcl
jb
in
and
mov
call
add
das
lea
cmpsl
in
xor
or
dec
ret
icebp
into
fwait
inc
xchg
mov
das
adc
inc
mov
stos
cmpsl
in
xchg
inc
add
test
loop
cmp
or
rclb
push
in
sbb
inc
cwtl
inc
scas
and
mov
arpl
sbbb
add
lock
jmp
mov
mov
mov
enter
xor
sbb
push
sar
mov
pop
gs
insb
mov
lret
loope
sbb
dec
or
aam
push
repnz
xchg
ret
mov
push
sub
cmp
jno
xchg
aaa
push
aas
addr16
insl
lea
inc
pop
negl
scas
and
pop
inc
ret
xor
ds
or
aaa
mov
mov
cmpsb
mov
enter
or
shlb
dec
addb
cld
out
js
cmc
or
mov
sbb
pop
push
std
ds
hlt
cltd
add
movsl
cli
or
pop
sbb
and
mov
push
add
jle
add
add
fwait
cs
mov
mov
inc
rcll
imul
ljmp
repz
lods
int3
add
xchg
or
pop
lahf
push
lea
fcmovb
inc
and
mov
mov
out
push
sub
pop
sti
in
int3
loope
iret
dec
icebp
pop
dec
stc
sub
aam
repz
fnstcw
and
sbb
xlat
mov
cmp
daa
cmp
cmpsl
in
ret
mov
cmpsl
add
pop
jmp
adcb
adc
jae
xchg
sub
inc
sti
pop
mov
cld
or
dec
cmp
xchg
outsl
jbe
rcll
cmp
test
popl
enter
ljmp
in
add
inc
lock
cli
jnp
xlat
adc
xchg
stos
cmp
mov
and
daa
push
adc
mov
outsl
xchg
in
nop
std
mov
js
into
cmp
xchg
les
mov
adc
fcomps
mov
daa
mov
insl
xchg
lret
paddq
xor
pop
int
notl
aas
outsl
mov
clc
fs
xchg
dec
inc
cmp
or
adcb
or
fdivrs
cmpl
mov
dec
xchg
xchg
jb
lods
sbb
aaa
xor
inc
fdivrs
out
in
in
jmp
mov
and
xchg
mov
push
mov
lock
loopne
into
rcr
adc
stc
xor
fists
or
imul
jecxz
push
sbb
mov
mov
jns
mov
cmpsb
adc
movsl
dec
fucomi
mov
imul
xor
flds
int3
out
xchg
shll
outsl
push
addr16
mulb
mov
inc
xchg
arpl
popf
add
iret
jbe
xchg
out
sub
and
jecxz
fs
pop
fildl
lea
fwait
adc
cs
inc
sti
add
sub
xchg
jp
xor
or
pop
push
adc
cli
pop
imul
adc
out
movsl
mov
sarb
push
xchg
es
cli
sbb
out
roll
adc
xor
jg
in
movsb
mov
push
pop
rorb
inc
stc
push
or
and
jb
mov
int3
mov
repnz
fldt
ljmp
fs
jne
and
mov
repz
and
ret
mov
fs
xchg
add
rclb
dec
jo
xlat
cld
sub
roll
push
mov
pop
push
add
sbb
xchg
xchg
insl
adc
push
repnz
xchg
cmp
xor
mov
push
pop
loopne
aam
outsl
pop
aaa
repz
je
lods
gs
inc
stos
and
pushf
std
ret
mov
jmp
addr16
dec
jmp
filds
push
ds
adc
xor
xchg
and
loopne
mov
sub
pop
sub
mov
push
insl
fcmovnb
sbb
jae
jb
jns
repnz
add
mov
popf
arpl
int
adc
in
bound
movsl
cmp
repnz
and
and
mov
adcl
pushf
negb
pusha
mov
rorl
in
xchg
or
inc
pop
push
sbb
mov
fwait
dec
ds
cmc
por
xchg
dec
mov
mov
repz
call
push
test
shlb
add
adc
xlat
xchg
dec
ret
mov
lret
pop
jg
gs
lock
xchg
or
mov
sub
mov
inc
lods
and
adc
push
imul
xchg
sub
pop
cmp
xor
in
and
adc
mov
ds
dec
add
nop
jge
or
aam
scas
fildll
insl
cli
jg
jae
aaa
adc
mov
mov
mov
mov
push
inc
out
adc
repz
inc
pop
sbb
pop
adc
es
movsb
ss
or
stos
cmpb
xchg
pop
cmp
scas
inc
bound
out
lcall
orl
in
rclb
leave
push
fmuls
xor
imul
sti
roll
pushf
mov
xchg
loope
push
stos
or
in
jne
sbb
inc
xor
into
addl
and
dec
scas
inc
daa
add
mov
movsb
or
scas
sbb
dec
js
pop
mov
fisubrs
cmpsl
mov
adc
in
jecxz
stos
xchg
insb
popf
adc
iret
inc
ljmp
cmp
jp
or
movsl
arpl
mov
mov
stos
scas
incl
jns
push
sub
test
test
inc
jg
xchg
xchg
fists
xor
test
push
push
dec
lods
pop
xchg
pop
jge
push
popf
mov
sbb
loop
push
test
mov
add
in
and
aad
lods
icebp
cltd
filds
xchg
jge
sbb
movsbl
mov
add
push
dec
sarl
sbbb
cmp
push
xchg
shlb
mov
sub
mov
lahf
dec
mov
scas
mov
cld
cmp
dec
aad
lcall
rcl
inc
or
sbb
cmp
out
jo
mov
pop
out
mov
and
push
sub
push
andl
jno
sbb
dec
mov
mov
lods
or
enter
sbb
lahf
loope
xchg
dec
cmp
fwait
add
insw
dec
push
mov
insb
cmp
cmp
dec
fnstcw
insl
decb
out
cltd
lods
jno
mov
cltd
mov
movl
out
imul
mov
sub
add
dec
loop
push
xor
fmull
mov
lea
sub
adc
jns
je
aas
inc
lahf
jge
cwtl
dec
pop
sahf
cld
inc
xor
ds
test
inc
imul
adc
and
movsl
mov
mov
jno
hlt
pop
lds
pop
push
lds
scas
mov
jnp
enter
push
xchg
sbb
test
inc
sbb
clc
push
lret
sub
push
mov
lret
xlat
adc
shlb
mov
clc
mov
daa
cmp
in
push
ds
inc
adc
aaa
imul
xor
adc
nop
ja
cmpsb
xchg
and
and
hlt
adc
aas
mov
mov
and
call
into
loopne
ret
cmc
xor
push
cmc
ljmp
pop
insl
jbe
insb
fists
inc
insb
hlt
or
add
mov
adc
xor
lahf
cltd
movsl
dec
inc
mov
subl
mov
jecxz
xchg
sub
jne
imul
scas
jae
iret
xor
mov
loop
jp
popf
add
xor
push
xchg
cmc
lret
jnp
data16
daa
inc
or
push
or
stc
mov
insb
mov
in
repnz
adc
xchg
sbb
inc
outsb
in
je
test
repz
ret
scas
in
cmp
jge
ret
std
ret
and
lods
jp
data16
stos
lods
sbb
push
aaa
cli
cmp
hlt
movsl
mov
pop
jns
sbb
jns
fmull
push
pop
lds
pop
push
sub
xor
sbbb
test
sub
mov
pusha
dec
rorl
push
inc
hlt
add
ja
jnp
roll
pop
sub
cltd
or
cmp
shrl
pop
dec
lock
pop
inc
in
aas
sbb
out
xchg
aad
hlt
clc
in
xchg
fcompl
sar
add
sbb
push
sahf
data16
xor
add
retw
xor
pop
and
clc
cmp
lock
in
cltd
cld
mov
add
xchg
xchg
and
into
or
or
hlt
cmc
testl
push
jp
xchg
xchg
idivb
sarb
or
mov
pop
xlat
push
xor
arpl
shr
dec
iret
jp
mov
test
enter
movsl
iret
test
cmp
pop
mov
jl
inc
inc
cld
fists
femms
out
aaa
leave
mov
cmp
sbb
mov
daa
lcall
mov
mov
les
jo
std
scas
pop
pslld
into
push
cli
xchg
jle
jb
int
and
int3
lret
jge
loope
lock
nop
cmp
push
int3
jp
mov
aaa
test
test
mov
mov
add
dec
pop
aad
popa
test
mov
adc
pop
jbe
adc
fldl
cmp
icebp
test
push
lods
mov
mov
in
pushf
dec
xor
xor
sbb
in
out
call
test
mov
sbb
xor
andb
mov
iret
fs
jae
xor
clc
adc
dec
fsubs
loop
movsb
push
das
call
mov
fstl
xchg
insb
imul
xor
or
adc
rcrl
movsb
mov
xchg
call
data16
fimull
int
ret
inc
aas
sbb
cmp
and
push
and
mov
xchg
dec
xchg
cmp
fisttpll
jl
and
mov
subb
xor
jl
mov
mov
shrb
pop
mov
rol
les
push
sbb
dec
mov
test
cmp
mov
out
mov
lcall
adc
sahf
cmpsb
sahf
sbb
xchg
loopne
lods
cmp
jecxz
lock
das
mov
lods
dec
stos
imul
mov
adc
inc
push
jo
dec
std
mov
insl
dec
scas
push
lock
and
push
ljmp
repnz
inc
fsubrl
jle
inc
test
fidivl
subl
mov
stos
flds
xchg
mov
ds
scas
mov
mov
add
pop
mov
jg
div
cmp
scas
sbb
enter
rclb
cmpsb
cmp
call
lahf
lock
repz
lea
popf
xor
mov
xchg
jle
insl
imul
jne
std
mov
mov
lock
repz
imul
or
mov
pop
fs
or
xchg
pushf
int3
mov
mov
push
pop
test
xorb
mov
lods
popa
jno
sarl
cmp
clc
push
pop
in
dec
dec
inc
lods
mov
lock
jp
xchg
loope
pop
mov
mov
sub
testl
inc
dec
lea
adcl
repnz
jo
les
pushf
and
sub
je
test
mov
jecxz
add
xchg
inc
sbb
jne
pop
push
or
arpl
mov
ljmp
daa
das
pop
les
inc
sti
jb
enter
mov
ficoms
cld
jmp
popf
mov
in
add
sahf
sub
hlt
xchg
std
mov
sub
test
dec
inc
xchg
repz
mov
sbb
xchg
ret
loop
dec
rorb
lahf
ffree
jo
in
adc
fdivrs
loop
push
sarl
mov
jbe
imul
push
enter
jge
imul
mov
not
push
adc
sub
mov
mov
cltd
fwait
icebp
cmpsl
sbbb
mov
inc
push
test
mov
cs
sub
mov
repnz
arpl
mov
and
cmp
shll
mov
sbb
mov
adc
sbb
mov
mov
rep
test
xor
dec
xchg
push
add
mov
mov
out
adc
xchg
xchg
mov
mov
jecxz
mov
pop
xchg
add
decl
addr16
sbb
mov
cmp
xchg
add
ja
lock
push
add
jbe
dec
scas
aaa
mov
repnz
lock
popaw
popa
movsl
mov
addr16
addr16
enter
add
or
iret
jbe
insl
jp
iret
mov
loopne
pop
pop
std
out
stos
mov
jno
cmpsl
xchg
or
jp
lea
jecxz
fsub
arpl
xchg
movsl
fwait
mov
in
flds
push
sahf
push
pop
push
pop
sahf
lock
cltd
rorb
mov
sbb
adc
fcmovu
cwtl
dec
imul
pushf
int3
jp
jp
ss
popa
inc
dec
cwtl
stc
mov
mov
adc
repnz
inc
add
or
ds
xor
add
ss
xor
aaa
xchg
into
repnz
fisubs
daa
enter
inc
dec
ja
movsb
scas
adc
jo
xor
loop
iret
sub
scas
fwait
out
cmpb
orl
mov
loope
mov
out
push
push
xchg
out
repnz
fimuls
ja
loope
xchg
xchg
cli
sbb
shll
in
fwait
enter
mov
rcrl
mulb
jbe
out
mov
bound
mov
jle
cmp
adc
xchg
mov
and
cmp
icebp
fbld
sbb
xor
dec
add
std
repz
repnz
lds
ficoml
clc
ret
repnz
xchg
add
mov
movsl
cltd
and
pop
jg
dec
jae
ds
test
aaa
in
push
cmc
or
gs
test
jo
or
push
mov
lcall
ja
mov
iret
fwait
sbb
iret
clc
es
mov
xlat
xchg
cmp
loopne
scas
dec
lds
push
popa
xchg
outsl
fdivs
xor
scas
push
in
push
js
adc
lcall
pushf
cltd
cmpsb
hlt
ljmp
loope
mov
scas
jne
xchg
pusha
sbb
inc
mov
movl
imul
xchg
out
gs
repnz
in
xchg
sti
mov
lret
mov
inc
dec
mov
and
cmpb
sbb
jnp
and
jl
clc
repz
push
outsb
mov
push
test
adc
mov
and
mov
shrl
imul
int
or
imul
pop
scas
add
xorb
pushf
jno
in
fsubl
shrd
sbb
sub
pop
pop
inc
push
and
adc
stos
pusha
sbb
mov
test
xchg
push
jo
sti
popf
xlat
js
mov
and
mov
shlb
repz
dec
scas
xchg
fisttps
out
sbb
inc
shl
mov
push
out
xchg
cwtl
push
xchg
ss
frstor
push
cmp
lret
out
xor
cli
mov
movsb
mov
setl
lahf
cmpsb
scas
cltd
in
arpl
cmp
jp
nop
mov
jmp
pop
mov
imul
cmp
push
push
test
mov
imul
cld
add
dec
xchg
imul
insb
add
and
mov
jns
cltd
repnz
add
scas
inc
inc
cmpsl
jmp
pop
pop
and
pop
mov
les
insl
mov
ss
lock
inc
jnp
cmp
xchg
out
ja
xchg
leave
iret
jmp
cmp
lods
fiadds
idivl
sbb
add
push
cwtl
lds
sub
push
gs
icebp
adc
gs
aad
xor
shrb
cs
xchg
and
int
popf
jge
mov
jmp
pushf
mov
fcmovnu
sub
xchg
mov
inc
inc
fsubrs
jne
xorl
mov
test
aas
xchg
and
into
rorl
int
add
in
mov
aam
sub
es
and
sub
xchg
lock
dec
ficompl
std
adc
int
sbb
cmp
jne
xor
lods
cli
pop
out
jle
push
sub
and
mov
mov
aad
cmc
das
dec
cs
mov
push
mov
std
dec
xchg
popa
jnp
lret
sub
xor
xchg
js
push
aas
fimuls
dec
add
push
xchg
and
imul
mov
inc
mov
sbb
sbb
fcomps
es
insb
cmp
js
cli
je
insb
dec
xor
data16
addr16
inc
sbbb
and
test
outsl
push
pop
rol
pop
sbb
pushf
jg
mov
jae,pn
dec
vmread
xchg
mov
lods
fistpll
push
ljmp
mov
xor
pop
mov
shrl
push
idivl
xor
adc
jo
ss
inc
in
xor
int3
inc
dec
push
imul
xor
jmp
mov
shll
popa
add
push
rcr
mov
jno
insb
stos
popa
adc
mov
mov
lds
inc
loope
cmp
inc
cmp
movsl
lods
adc
jo
jne
testb
mov
dec
ja
xchg
cmc
loopne
mov
mov
cmp
cmp
adc
lock
fs
into
ljmp
mov
in
jge
nop
sahf
jne
insb
flds
aas
push
mov
push
lock
xor
push
jle
push
nop
lcall
jnp
aad
imul
es
mov
lcall
rcll
xlat
cmp
adcl
xchg
dec
fildll
shl
enter
leave
dec
les
or
rcrl
divl
sub
mov
xor
jg
jle
cwtl
neg
ret
or
adc
lret
imul
mov
lods
mov
or
imul
aas
sahf
jae
pop
cmp
jl
lock
jecxz
and
push
rorb
pop
push
xchg
out
push
aaa
sub
adc
mov
ss
shr
push
ja
cld
xor
lcall
sbb
out
shr
cmpsb
repz
sub
mov
jmp
movsl
inc
mov
jge
gs
fcom
jns
rorl
push
leave
dec
and
ficoml
adc
pop
pop
icebp
push
or
sbb
pop
je
test
inc
imul
mov
push
clc
inc
sub
iret
sub
adc
push
in
in
data16
cwtl
in
sbb
in
xchg
jmp
fdivp
xor
stos
lock
mov
loopne
mov
jle
mov
int
inc
adc
push
xchg
shll
sahf
das
test
dec
push
xchg
jl
rcr
adc
sbb
aas
sbb
cmp
dec
cmpb
fiadds
lock
fildl
mov
rol
mov
cmp
dec
rol
jne
inc
mov
lods
aas
outsl
cmpsb
inc
lahf
lcall
lock
in
adc
addr16
out
notb
out
jmp
mov
adc
jnp
dec
std
push
jae
lods
add
pusha
adc
sub
pop
cmp
xchg
test
xchg
pop
mov
xchg
add
movsl
cwtl
lods
xchg
jmp
xchg
jnp
lret
mov
sbb
xorb
repnz
sbb
push
jmp
pop
stc
call
outsl
pusha
shlw
or
push
mov
and
dec
dec
test
call
adc
xchg
arpl
fmul
data16
out
popa
lock
jmp
pusha
pop
or
in
jo
andl
out
subl
jp
mov
loopne
cmp
xor
xor
mov
outsl
cmpsb
sbb
or
nop
jo
out
rolb
push
add
cmpl
das
stc
sbb
xchg
lods
xorb
jbe,pt
inc
sarb
jp
inc
cwtl
mov
xchg
xlat
jg
mov
pop
sub
and
cmp
xor
add
cwtl
popf
clc
adc
dec
push
testl
ss
push
sbb
imull
push
fmull
fadds
mov
movsl
sbb
push
popa
stos
pop
int
aad
movsb
inc
mov
or
sahf
xchg
lods
es
xor
sub
imul
les
mov
xchg
sbb
pop
lea
mov
xor
cmp
test
daa
xorb
dec
shl
mov
jmp
ljmp
sub
inc
xor
fisttpl
cmp
in
out
cwtl
pand
cmp
and
sbb
shrl
ret
in
lods
in
pushf
cmp
pushf
lret
in
lock
aas
dec
dec
and
cmp
insl
daa
xchg
jns
test
sti
lcall
int3
dec
xchg
sub
pop
push
sub
icebp
mov
into
push
dec
or
mov
push
outsb
jmp
loopne
in
xchg
clc
dec
push
popa
xchg
pop
pop
add
imul
cli
scas
imul
scas
scas
xor
mov
int3
call
rolb
fisubl
cmpsl
shlb
xchg
add
push
into
rcrl
adc
pop
or
adc
jecxz
lahf
xor
fsub
aam
pushf
in
pop
xorl
sti
fnstsw
and
push
fisubl
xchg
push
and
and
mov
roll
xchg
pop
pop
in
cmp
add
mov
adc
mov
lock
inc
push
lahf
stos
jno
and
or
sub
and
xchg
pop
xchg
js
mov
mov
xchg
or
jp
sbb
into
iret
and
out
cmpsb
xlat
adc
or
xor
nop
xor
push
add
mov
or
add
dec
dec
push
outsl
leave
test
and
mov
add
mov
dec
xor
inc
sub
xchg
jg
jl
xchg
leave
rcrl
outsb
movsl
and
xchg
cmp
mov
loope
add
dec
mov
dec
mov
mov
xchg
adc
adc
fadd
call
les
fcom
dec
shlb
mov
mov
mov
push
out
cmp
rol
ss
dec
fmul
xor
decl
sbb
aam
push
mov
into
rolb
mov
shld
and
nop
or
xchg
out
jne
and
mov
mov
or
mov
mov
aad
adcl
cmp
pop
fnstenv
into
insl
rclb
cli
test
clc
icebp
fnsave
mov
sbb
jecxz
js
add
jecxz
jne
aas
mov
sbb
in
mov
dec
or
es
jecxz
out
out
das
cmpb
movsb
fstpt
outsb
xchg
cmp
push
sbb
testb
bound
dec
outsb
xchg
mov
push
fsts
lcall
cmpsl
in
adc
fildll
jle
inc
xorb
mull
inc
sub
mov
outsb
imul
adc
ljmp
mov
pop
jae
xchg
mull
mov
stos
mov
xchg
ret
enter
sub
or
cmp
jle
int
fs
cld
dec
icebp
mov
jbe
out
or
adc
ficoms
push
cmp
daa
lret
orl
movsl
insb
jecxz
and
push
sahf
inc
cmpsb
dec
shll
add
dec
add
mov
jmp
mov
pop
mov
testb
xchg
mov
out
push
movb
fsubr
ror
leave
cmp
xor
in
dec
adc
xchg
push
cmpsb
xor
shrb
lock
pop
fisubrl
mov
vmread
jg
or
pop
xchg
test
xchg
adc
cmp
cltd
icebp
pushf
dec
lock
ret
pop
pusha
loopne
lret
mov
lock
sbb
or
dec
adc
sub
sub
lcall
inc
or
mov
mov
dec
es
cli
aaa
dec
adc
es
ss
mov
fnstsw
and
js
mov
into
lret
sub
cmovb
jge
pop
cmp
outsl
sbb
xchg
in
or
cmp
and
or
int
adc
and
mov
subl
add
jp
ffreep
je
xor
sarl
inc
mov
lahf
xchg
insb
jp
and
xchg
je
cli
fidivs
pop
mov
das
jbe
dec
mov
insb
dec
push
aas
ds
or
inc
jbe
js
dec
jp
push
mov
ljmp
fidivs
xchg
test
pop
sahf
adc
lahf
cmp
xor
sub
mov
push
out
into
enter
in
push
mov
repnz
xchg
sbb
repnz
ljmp
data16
fstpl
mov
and
enter
and
stos
into
push
xchg
xchg
leave
out
gs
cmpsb
pop
mov
pop
leave
mov
add
push
xor
hlt
inc
cmp
lods
clc
adc
jl
dec
les
das
pop
bound
pop
in
and
sub
push
pop
movsb
add
pop
add
mov
test
fldl
mov
filds
mov
popa
fnstsw
daa
cmc
xchg
mov
inc
mov
outsb
addr16
arpl
adc
xchg
cwtl
or
mov
cmpsb
mov
out
ljmp
rcr
mov
xchg
mov
rcll
and
fbld
mov
bound
cmpb
pop
sub
iret
mov
inc
xchg
inc
mov
push
xchg
rorl
add
in
cmp
pop
pop
das
mov
bnd
xlat
repnz
out
mov
push
sahf
or
shrb
pop
dec
push
push
daa
push
ljmp
pop
jne
or
adc
and
sti
dec
rcl
mov
mov
push
pop
mov
in
loopne
das
mov
fs
xchg
pop
push
push
push
pushw
int
in
jno
mov
dec
lods
mov
cmpsl
syscall
out
or
jp
xor
or
cmp
sub
repnz
inc
jp
mov
imul
cmp
add
pusha
adc
aad
push
pushf
push
mov
test
jl
addb
dec
into
sbb
mov
adc
dec
inc
xchg
pop
pop
push
dec
xchg
xor
cmp
jmp
mov
outsl
push
notb
ljmp
xlat
shll
arpl
cmpsb
dec
pop
hlt
and
cmp
adc
xchg
mov
xor
jo
fnsave
push
push
adc
adcl
idiv
jnp
outsl
cwtl
shll
cltd
sub
dec
jae
add
dec
ds
cmp
hlt
jns
cmp
arpl
cmovo
add
iret
lahf
and
pop
aam
jg
lds
cmp
mov
cmp
int
inc
clc
out
push
icebp
xchg
aas
sbb
mov
test
push
hlt
xor
aaa
mov
fdivr
lret
xor
std
arpl
dec
mov
or
cwtl
push
mov
fsubl
jl
out
mov
inc
or
xor
lcall
pop
mov
ror
shlb
mov
popa
rcrb
test
fiaddl
push
xlat
sub
adc
int
or
imul
pop
fimull
lret
add
mov
push
or
mov
loopw
dec
sub
add
dec
fimull
sub
out
cmpb
aaa
ds
adc
mov
outsl
lcall
movsb
jge
cwtl
jns
stc
arpl
ret
sbb
fadd
and
jl
je
pushf
out
mulb
iret
and
jo
aad
push
into
jnp
cmp
jmp
push
adc
adc
les
jecxz
push
arpl
push
cs
sub
test
adc
cltd
out
mov
mov
push
int
fwait
sub
mov
std
movsb
ljmp
jo
or
mov
in
cltd
pop
mov
inc
fmulp
jnp
repz
stc
cli
cwtl
iret
daa
int3
cmp
outsl
dec
imul
mov
and
xchg
mov
add
sub
sti
mov
xchg
dec
jae
daa
add
shlb
loopne
sbb
lahf
or
lcall
negl
shrl
movsb
cmp
jl
sbb
sti
leave
sub
adc
mov
ret
dec
pop
ss
loope
shll
cmp
negb
push
dec
xchg
cmp
push
sub
jbe
push
mov
imul
pop
orb
clc
pop
ljmp
bound
sub
ficomps
lahf
mov
push
xchg
pushf
adc
xor
push
insb
aad
cmc
pop
fs
std
cmp
mov
mov
push
jne,pn
or
mov
lret
into
fucomi
jo
lahf
sbb
xchg
ret
ja
xlat
lock
adc
pushl
aas
cltd
and
out
stos
cmp
jle
mov
cmp
fcoms
xlat
mov
les
cmc
scas
mov
push
xor
out
add
cltd
adc
out
or
cltd
aam
pop
xchg
testb
inc
and
mov
loope
pusha
incl
push
sub
fisubs
add
fmul
push
sub
cmp
xchg
lods
cltd
mov
mov
xchg
or
add
ljmp
daa
rolb
mov
adc
and
out
in
pop
imul
push
sbb
inc
cmpsl
cltd
sbb
in
mov
mov
daa
push
jae
ljmp
movsl
or
scas
and
repz
push
jo
push
std
ficoms
repz
or
adc
cli
adcb
mov
outsb
pop
jns
test
add
push
xor
sbb
mov
add
mov
fildll
movsl
mov
cmpsl
and
sbb
push
gs
mov
cmovne
das
mov
aas
test
out
subl
les
ja
xor
inc
loop
push
xchg
sbb
jno
pusha
dec
and
xchg
add
push
test
jns
ud2
rep
leave
mov
outsl
movsl
cmpsb
xchg
pusha
cmp
cwtl
movsb
inc
movsl
cmpsl
fisubs
mov
mov
xor
shl
cld
cmp
pop
xchg
cmpsl
mov
fadds
dec
cli
jbe
fnstcw
adc
out
mov
mov
loopne
test
mov
mov
shll
mov
orl
jmp
sbb
shll
je
cld
int3
fsub
rcl
mov
mov
lods
leave
loopne
sbb
imul
imul
or
adc
xor
stc
xor
test
out
push
sbb
mov
jae
int
scas
fadd
push
and
cmpsb
and
push
adc
jno
jg
add
dec
sub
jge
idivb
xchg
push
add
js
fadds
push
mov
jl
push
sub
sbb
mov
ljmp
ret
sbb
cmc
add
xchg
xchg
inc
cmp
in
xor
aaa
add
xchg
aas
fcomps
pop
pop
cld
test
pop
sbb
mov
pusha
lahf
sahf
cmpsb
movsb
push
jnp
pop
ficoml
sbbb
int
lods
test
sbb
push
stos
movsb
mov
sbbb
insl
push
mov
sub
pop
out
mov
xchg
add
add
sbb
imull
jo
addr16
leave
lods
fcmovnu
sbb
lea
mov
pushf
enter
mov
xor
fsubl
loope
push
mov
shrb
ja
es
inc
sub
icebp
das
insb
mov
movsl
inc
mov
cmp
sbbb
jmp
pop
sub
test
add
in
cmp
in
jno
fadds
test
fwait
ror
mov
fstsw
lods
loope
xchg
mov
rolb
mov
add
fidivrl
push
mov
and
filds
stos
xor
in
add
push
sbb
sbb
out
adc
sub
jnp
add
pop
sbb
pop
into
call
aas
out
in
xorl
mov
std
stos
jge
stos
rcrb
out
in
das
and
mov
lds
xchg
jmp
push
stc
mov
lret
fistpl
or
imul
aad
fcompl
sbb
adc
rclb
or
jg
out
jge
in
jmp
movsl
scas
icebp
inc
js
fwait
jge
sub
fs
jnp
sbb
das
lret
and
leave
leave
loope
xchg
dec
mov
push
mov
xchg
or
test
jnp
push
out
adc
push
and
sub
jns
mov
push
xchg
or
sub
lcall
adc
jmp
push
lea
push
std
test
jecxz
mov
ss
ret
pushf
or
jae
inc
xor
pushf
mov
enter
xchg
mov
in
dec
push
xchg
mov
shrl
mov
movsl
lods
inc
mov
adc
lods
sbb
call
pop
cmp
xchg
mov
xor
cltd
jae
in
jmp
inc
mov
or
fbld
addr16
and
jne
push
pop
or
xor
into
jns
sahf
push
jmp
jl
fidivl
push
aad
cmp
pop
les
into
push
push
mov
mov
push
outsl
outsb
mov
mov
scas
cmpsb
ljmp
mov
mov
xchg
mov
popa
ficoml
mov
xchg
sbb
add
pop
popa
fidivs
push
xchg
cmp
xchg
push
dec
test
and
adc
mov
jnp
push
cmpsb
push
int3
jmp
and
push
sbb
popf
cmc
fbld
shlb
lcall
call
push
sbb
mov
jo
mov
jns
sub
xlat
mov
pop
enter
jbe
add
inc
sarb
shll
gs
call
xchg
mov
and
mov
fistl
arpl
bound
lods
fistl
iret
mov
test
clc
repz
mov
xchg
push
mov
mov
fildl
data16
enter
sub
js
sub
loop
daa
loop
jmp
subb
add
lods
ljmp
cmp
fsubp
pop
je
enter
inc
ret
push
cld
pop
incl
out
mov
ffreep
cli
push
pop
adc
andb
sub
mov
mov
and
int3
lods
sub
push
mov
int
call
push
sub
cmpsl
testb
pop
cwtl
cmp
aad
out
adc
shll
leave
dec
pop
cli
adc
cmp
and
arpl
repz
lcall
or
sti
cmp
in
rcrl
pop
sub
sub
imul
push
repnz
adc
push
dec
scas
test
inc
inc
adc
cwtl
dec
insb
dec
mov
ja
rclb
insl
movsb
xchg
xchg
inc
adc
and
out
mov
insl
in
lods
cmp
mov
in
xor
push
mov
and
pop
jb
push
jb
fstpl
adc
jae
xchg
decl
push
adcl
xchg
int3
cltd
js
idiv
sub
pop
dec
mov
mov
andb
cmp
stos
inc
sbb
jne
js
addl
jmp
pop
push
mov
pop
cs
push
cltd
out
sbb
mov
adc
adc
shl
cmc
pop
dec
shl
aad
lods
imul
add
ret
daa
jb
mov
sbbl
mov
mov
jno
bound
fnsave
push
inc
ret
fdivs
cmc
outsl
clc
jl
in
ss
jb
mov
mov
shlb
xor
int3
or
sub
pop
repz
sub
cmc
out
into
sbb
xor
mov
mov
xlat
loopne
iret
repnz
fiadds
push
inc
push
hlt
shll
rolb
inc
dec
mov
pusha
push
sar
push
xchg
lods
push
inc
rol
adc
movsl
jno
push
mov
mov
cmp
cli
mov
pushf
xor
xchg
out
dec
push
add
add
sub
fstps
bound
lret
or
sub
je
loop
out
cmp
jge
cmc
test
bound
loop
dec
mov
pusha
xlat
push
sub
insl
sub
inc
sbb
sbb
testb
dec
jo
mov
mov
pmulhuw
mov
je
popf
mov
xchg
stos
aas
stos
test
rol
enter
add
dec
cmp
pop
sbb
inc
pop
addb
and
jno
pop
ret
leave
xchg
cld
leave
jl
push
aam
test
lods
and
push
movsl
aad
jp
and
mov
mov
mov
xor
pop
xorb
bound
jbe
fstps
sti
les
xor
xor
push
pop
and
das
subl
mov
push
pop
fwait
push
push
icebp
subl
shlb
popf
sub
stc
cmp
lods
ljmp
xchg
dec
dec
outsb
cld
sub
cwtl
push
iret
or
xlat
sti
iret
jl
pusha
cmp
stc
sbb
int3
xchg
or
xchg
jle
push
insb
out
cmp
mov
inc
fsubrs
mov
popa
ss
cwtl
inc
sub
adc
or
add
sar
mov
gs
cmpsb
jnp
add
mov
push
sub
sub
aaa
mov
mov
fsubs
push
xor
shlb
dec
xchg
sub
adc
dec
mov
cmp
les
inc
out
adc
sahf
pop
cs
inc
add
jns
cld
mov
mov
mov
mov
mov
and
jb
fstps
xchg
stos
ret
jne
or
in
pop
mov
pop
or
or
cmpl
dec
fcoml
jmp
xlat
inc
leave
pop
xor
cmpsb
cmc
fmulp
push
jnp
movl
sahf
dec
in
xor
cmpsb
push
insl
jne
push
or
push
out
fisubrs
lods
inc
mov
lcall
mov
popf
or
or
pushl
or
xor
daa
mov
xchg
es
cmpsl
and
movsl
imul
les
aas
dec
setge
pop
jecxz
push
sbb
jbe
shlb
out
test
push
xchg
jl
mov
or
sbb
jmp
outsb
stc
mov
ds
jne
ljmp
arpl
mov
out
or
mov
sub
call
xchg
mov
push
xchg
mov
imul
push
jmp
inc
cmpsl
jo
sub
loope
andl
repz
cwtl
push
add
or
mov
sub
mov
lds
add
mov
sbb
inc
xor
fs
push
xor
rol
out
xor
push
adc
dec
push
fwait
pop
addr16
jno
enter
out
rcrb
add
xchg
clc
cmc
loope
pop
pop
jle
pop
adc
inc
scas
xchg
cld
daa
je
pop
and
add
cltd
ret
fldt
ret
fimull
nop
fbld
jmp
mov
add
loope
ja
mov
pop
sarb
xor
outsb
pop
leave
rorl
insl
cltd
jge
cs
push
inc
xchg
mov
popa
fidivrl
insb
int3
in
dec
mov
in
xlat
push
les
ss
and
aas
push
add
imull
jae
insl
cmp
sahf
push
clc
push
das
xchg
or
test
fisubl
dec
and
pop
add
jecxz
sahf
xchg
das
shll
push
fcmovnu
ret
jl
sbb
or
pop
in
nop
sub
add
iret
push
or
pop
adc
repnz
pusha
xchg
and
jl
add
in
fsub
inc
movl
out
and
test
sbb
ljmp
fldl
call
std
test
call
cmc
jbe
fimuls
imul
fucomip
fwait
jb
jle
test
rclb
xor
movl
sub
xor
icebp
jmp
xchg
jl
inc
ret
jmp
push
lods
push
clc
sub
add
sbb
frstor
outsb
cmpsl
clc
jg
and
in
or
xorb
inc
dec
cmp
scas
inc
fwait
andb
repnz
xchg
loopne
push
lea
in
out
and
adcl
lock
pop
jnp
aam
stos
stos
xchg
adc
jle
clc
or
pop
xorb
cld
sub
subl
dec
sub
popf
push
jl
out
loopne
or
and
add
bound
cld
dec
es
dec
aaa
lods
or
cmp
jl
cmp
out
add
insb
jbe,pn
jno
ljmp
mov
les
repnz
sbb
inc
mov
lods
aas
popa
jne
test
cltd
mov
lret
mov
xchg
push
add
leave
mov
out
in
cmp
sbb
fst
jo
mov
adc
loop
and
inc
ret
sbb
ficomps
lret
pop
int3
fdivl
dec
popf
or
sti
pop
sahf
push
jno
stos
repz
dec
mov
roll
movsl
and
push
jl
and
repz
out
repz
pop
pop
adc
push
and
rclb
push
mov
xor
and
sub
xchg
mov
mulb
or
mov
pop
addr16
cmp
dec
push
data16
negl
or
adc
dec
jns
push
cmp
int3
mov
pop
sbb
fisttpl
out
imul
or
and
loopew
leave
mov
inc
iret
inc
or
add
cmp
je
lods
sahf
xchg
movsl
xchg
pop
addr16
in
data16
mov
les
cmp
mov
jb
lock
stc
inc
pop
out
push
mov
sbb
popa
mov
loopne
cmp
add
push
jl
cltd
out
mov
mov
js
add
sbb
movsl
mov
xchg
push
imul
aas
call
xchg
aas
and
dec
in
fstpt
mov
mov
loopne
aam
jb
add
lods
push
lret
enter
mov
mov
out
in
mov
inc
test
sub
lds
int3
ljmp
daa
jno
pop
dec
cmp
pop
insl
clc
jg
imul
jno
xchg
xor
jge
inc
imul
out
xlat
push
xchg
pop
in
pop
or
in
sti
fbstp
push
adc
sub
xor
daa
stc
clc
mov
sti
xor
test
and
xchg
incb
pop
into
mov
js
mov
out
dec
aas
imul
sbb
pop
pop
add
cmpsl
bound
and
jne
mov
push
bound
sbb
clc
xlat
inc
jb
in
jno
xchg
jo
lcall
pop
or
sub
cmpsl
sub
bound
sub
outsb
dec
rep
into
arpl
call
lods
pop
call
gs
es
lret
dec
fs
mov
xlat
aas
sti
sbb
lea
adc
outsl
push
outsl
jnp
jb
lret
mov
adc
pop
ret
popf
cmp
mov
pop
cmpsl
pop
mov
add
aad
fldt
lods
andb
cld
jno
inc
fstl
mov
push
xchg
pop
mov
dec
das
cmpsl
movsb
pop
fimull
hlt
ret
push
and
push
iret
popf
das
cmpsb
mov
das
add
ljmp
dec
inc
and
repz
in
jge
or
dec
imul
mov
pop
jmp
cmc
aas
add
sahf
or
mov
sub
loopne
test
mov
aad
out
cltd
jne
mov
int
adc
jnp
push
loopne
bound
and
dec
bound
cmp
jno
addr16
dec
adc
pop
test
sbb
clc
cmp
push
mov
push
inc
add
or
packuswb
xchg
insb
test
adc
pop
push
adc
subb
mov
aam
mov
stos
xor
subb
mov
add
das
xchg
xor
shr
shlb
out
out
pop
cmp
sub
cmpsb
fisubl
xor
icebp
aas
idivb
aad
or
dec
cli
shlb
repz
mov
das
jnp
adc
sahf
inc
cmp
shlb
mov
ror
divl
or
lret
lcall
mov
jae
push
and
inc
cltd
or
cmp
adc
dec
fldl
sub
cwtl
test
pop
fsubrl
xor
pusha
jle
or
or
add
outsl
and
cmpsb
daa
sub
and
ret
ljmp
into
ja
push
push
pop
and
mov
fnstenv
movsl
push
mov
fidivrs
mov
dec
std
cmc
jle
decl
int
mov
sysexit
pop
lret
pop
push
dec
sbb
shlb
loop
xor
mov
jl
jp
lds
cmpsl
push
scas
mov
fsub
test
hlt
sbb
js
outsb
jns
clc
aas
add
jl
pop
outsl
add
jecxz
adc
mov
rclb
xor
sar
stos
push
out
xchg
dec
scas
dec
jmp
bound
push
out
and
push
xchg
leave
pop
xor
andb
aad
dec
jno
cmpsb
call
test
outsb
stos
sbb
jnp
adc
and
test
jne
and
mov
scas
ljmp
lea
outsb
adc
cmp
pop
out
sbb
flds
aas
inc
xor
lea
sbb
call
pop
es
mov
xchg
sarb
mov
inc
rolb
or
int3
dec
and
xchg
repz
push
popf
sub
pop
sbb
out
xor
adc
fadds
sbb
add
and
mov
push
iret
stos
dec
cmp
mov
movsb
aam
and
cmp
xchg
or
mov
pop
jp
push
pushf
dec
add
push
ds
push
cwtl
push
fistpll
mov
fsubrs
mov
jns
in
sbb
in
sbb
sbb
xorl
dec
adc
xchg
mov
sbb
push
or
cmp
inc
xor
pop
and
add
push
pop
pop
aas
mov
into
mov
xchg
inc
fbld
cmp
outsb
inc
ret
cwtl
mul
enter
adc
fcoms
mov
sub
out
icebp
imul
nop
iret
icebp
push
pop
lahf
or
pop
gs
icebp
add
pop
xchg
inc
sub
test
push
dec
jne
mov
cmp
fdivl
test
and
add
dec
je
pop
int3
push
pop
mov
xor
call
in
sbb
jp
mov
fists
xchg
xchg
mov
xlat
call
stos
inc
pop
add
fisttpll
decl
cld
stc
xor
sbbb
sub
ljmp
fsubrp
inc
aaa
fistl
cmp
sbb
out
ljmp
dec
lahf
and
and
shl
jo
in
adc
xchg
cmc
fs
repz
adc
test
out
enter
or
lcall
xchg
call
cmpsl
mov
jp
mov
pushf
mov
roll
sahf
adc
mov
push
out
mov
je
dec
lods
call
inc
inc
aam
sbb
stos
mov
add
ret
add
push
jne
rcrl
mov
movb
mov
inc
movsb
push
out
insl
add
shll
fildl
and
scas
fsubrl
and
xlat
cmp
rcrb
sbb
lock
in
jne
aam
and
dec
test
xor
jns
sub
outsl
inc
scas
int3
shrl
jg
lcall
mov
or
sahf
sbb
pop
push
cmpsb
cli
push
or
aam
adc
dec
gs
loope
inc
arpl
cld
adc
mull
or
xchg
aaa
sbb
arpl
and
movb
ret
add
xor
std
mov
adc
add
push
cmp
mov
pop
pop
adc
sbb
mov
aas
inc
loopne
inc
sbb
or
mov
sub
lods
mov
push
cld
cmp
mov
ljmp
out
xor
int3
outsl
inc
divb
stos
ret
sub
in
mov
adc
lcall
jb
sbb
jmp
xchg
out
les
adc
iret
or
out
lahf
sbb
push
jle
cli
mov
fimull
and
sub
leave
imul
js
dec
das
je
pop
xchg
sbb
aam
lods
je
aad
sbb
shll
andpd
shlb
jg
dec
test
clc
imul
test
push
arpl
scas
leave
dec
ss
and
xchg
bound
in
mov
mov
in
pop
jge
push
movsb
icebp
inc
jo
push
lock
or
fstpt
jp
mov
fnstsw
mov
pop
test
clc
cld
mov
xor
xor
lea
mov
mov
pusha
cmp
enter
push
sti
in
fs
insb
adc
ss
arpl
add
pop
pop
popf
jnp
cmpsb
js
or
mov
pop
push
lock
stc
sti
in
enter
mov
lcall
cmp
fs
or
dec
in
das
pop
ret
pop
out
out
fs
mov
xorl
fcomps
inc
mov
ret
sub
cmc
or
out
or
test
out
fs
push
pop
sbb
and
gs
dec
xor
loopne
shll
pop
shrb
in
das
test
jp
add
rcl
jmp
aam
jge
lret
sub
add
push
mov
mov
pop
dec
loopne
stos
sbb
out
or
loopne
ja
shrl
pop
xchg
and
or
out
jg
cmpsl
jmp
and
pop
scas
outsb
arpl
xchg
shlb
lahf
fwait
loopne
aas
jge
cmpl
inc
int
mov
iret
dec
rcll
xchg
pop
sti
mov
jge
call
xor
xchg
push
out
jns
popa
inc
sub
scas
pop
inc
pop
shrl
je
in
jo
fucomi
push
js
icebp
mov
jle
adc
movsb
or
out
ret
cltd
pop
in
leave
xor
sbbb
jno
movsl
sbb
inc
xor
inc
divb
mov
push
adc
test
enter
and
jae
ret
fstpl
test
leave
cld
test
jmp
lret
push
add
in
add
fdiv
insb
push
fsubrs
inc
jmp
and
out
inc
lret
jnp
repnz
jmp
mov
mov
dec
clc
or
sbb
mov
add
push
ljmp
vandnpd
xor
xchg
lods
xor
inc
push
fistl
pop
sbb
call
jmp
jg
sbb
or
int
jno
test
pop
imul
sub
mov
lods
dec
roll
stos
push
cmpsb
jns
add
aas
mov
xchg
push
cmp
dec
call
xor
pop
shll
roll
cmp
ret
jecxz
xchg
shll
sahf
push
push
cmp
aaa
jb
xchg
sbbb
out
mov
jno
xchg
dec
push
lds
loope
movsb
pop
scas
cmp
fstpt
rcrb
mov
adc
pop
pop
or
sbb
movsb
pop
das
nop
sbb
mov
push
loop
ja
ja
push
xchg
cwtl
add
stc
cmpsl
addb
xchg
sub
fsts
xorl
mov
sti
int
mov
faddl
and
xchg
loope
cmp
push
lods
shrb
rcrl
mov
or
sbbb
repnz
bound
sbb
lock
mov
test
adc
fs
mov
cmp
arpl
lds
popf
or
loope
lods
mov
les
andb
shlb
cmpl
sub
and
pushf
movsb
adc
enter
push
mov
mov
stc
mov
adc
sub
inc
pop
ds
shlb
call
fldl
sbb
add
push
xchg
and
mov
jecxz
mov
orb
add
dec
push
pop
lret
jmp
in
out
add
loop
ret
sub
repz
xor
jecxz
push
arpl
dec
scas
push
lds
mov
pop
out
fmull
das
loopne
lods
jmp
lret
inc
and
cs
mov
inc
pop
test
xchg
mov
fsubp
jo
push
push
add
dec
lock
mov
outsl
sti
cmp
add
sti
lret
add
add
sub
cli
push
sub
mov
imul
ss
inc
mov
cli
inc
push
test
ret
jg
fadds
push
fdivrs
lods
and
in
push
cltd
cld
insl
lods
fsubrp
stos
popa
clc
jae
leave
jbe
and
pop
xchg
loop
inc
lods
and
xchg
jno
aad
hlt
inc
lea
add
inc
in
repnz
sub
shrl
or
xchg
jp
gs
mov
imul
stos
sub
aaa
out
mov
das
insb
aas
inc
mov
aam
stc
scas
xor
cltd
ficomps
cli
test
sub
cmp
xor
mov
pop
mov
xor
fcompl
push
mov
cmp
lret
test
push
pop
sub
xchg
jecxz
mov
xor
flds
arpl
decl
hlt
push
and
mov
data16
and
cmp
stos
pop
add
std
mov
add
js
mov
inc
jae
or
cvtpi2ps
xchg
mov
test
inc
mov
mov
dec
xlat
dec
adc
lret
arpl
lret
mov
inc
in
inc
fdivrl
inc
mov
lock
ret
mov
push
mov
push
mov
or
push
mov
loope
dec
fcmovb
ret
lock
pushf
sbb
fcomip
cmp
jecxz
in
fidivrs
xlat
cli
or
out
sbb
and
enter
pop
add
mov
repz
in
je
mov
ss
sub
xor
mov
cmp
pop
add
and
mov
ret
jl
dec
rcl
dec
imul
adc
fsubl
sti
xchg
loopne
ret
ret
mov
sarl
outsb
add
lods
shlb
je
cmc
pusha
es
cwtl
pushf
or
adc
hlt
fcoms
jo
int3
cwtl
cmp
je
push
adc
into
inc
rcr
jge
xchg
imul
or
jl
sbb
clc
clc
dec
test
popf
xchg
arpl
pop
aam
add
xor
xchg
sub
std
jae
adc
push
int
mov
out
daa
sbb
dec
mov
shll
xadd
sub
fildl
jecxz
andl
es
into
stos
movsb
movsb
das
lahf
mov
jg
fwait
repz
jae
dec
push
mov
fdivrs
shlb
pop
xchg
mov
dec
cmp
int3
scas
pop
sub
push
lods
mov
scas
add
sbb
out
add
test
cmpsb
xchg
adc
mov
push
jl
adc
mov
sbb
and
push
push
mov
adc
jl
or
cld
test
jmp
and
mov
add
adc
orb
mov
iret
or
or
clc
add
shl
cld
inc
in
jle
and
pusha
inc
sub
data16
mov
pop
repz
push
xchg
xchg
shlb
push
jecxz
xor
mov
shl
cmp
daa
dec
bound
outsl
mov
lods
and
adc
lods
pop
lods
and
stc
ja
cmp
xchg
mov
inc
or
sarl
fistps
je
add
mov
movsb
xchg
dec
xchg
mov
sub
inc
sbb
aam
inc
inc
xchg
jno
popa
xorl
pop
repz
es
push
sub
cli
inc
dec
addl
and
mov
pop
mov
pop
pop
ja
loop
cmpsl
fildll
push
stos
rcrb
dec
aaa
ljmp
xorb
jae
cmc
adc
fcmovnu
insb
mov
jmp
shll
jae
arpl
fdivl
and
shrl
and
pop
and
popf
or
stos
sti
shll
xchg
xor
ds
or
data16
xor
pop
cmpb
int
scas
inc
loop
lea
mov
dec
xchg
repz
push
fwait
dec
pop
aas
pop
shrl
push
fidivrl
add
divl
inc
arpl
xchg
inc
leave
ss
sub
hlt
mov
test
orb
pop
jno
mov
and
imul
sarb
dec
mull
hlt
push
pop
jle
and
inc
std
cmpsl
and
lret
test
jns
pop
cli
mov
dec
pop
jecxz
pop
clc
push
cld
jnp
sub
movsl
insl
loop
dec
pop
pop
insl
pop
jmp
sub
and
addr16
aam
or
jne
icebp
in
xor
jl
pop
shll
jmp
stos
inc
jp
xchg
or
lcall
dec
sbb
sub
push
push
andb
movlps
popa
dec
and
xor
lock
cmp
stc
stos
mov
dec
xor
call
sub
xchg
in
cmp
rol
inc
jns
mov
sbb
andl
xchg
xor
std
cmpsb
ljmp
push
ds
rol
shr
add
shl
push
lods
test
aaa
inc
and
cmp
insb
cmpsb
jp
dec
mov
sbb
or
rclb
das
addb
shl
ret
ror
mov
fidivrl
aad
xor
andl
int3
push
insb
push
imul
dec
out
push
jnp
mov
repz
sub
clc
jae
xor
pop
rorb
cmp
dec
jae
ss
xchg
or
cmp
cmp
mov
fiaddl
icebp
adc
add
lea
xchg
jl
sub
and
cmp
aad
ljmp
jb
ljmp
cs
push
out
xor
cmp
pop
stos
adc
cs
add
test
sbb
or
jle
test
stc
mov
mov
push
outsl
loop
sti
pushf
xor
cld
clc
stos
jns
sub
mov
rolb
ret
jl,pt
xor
into
jmp
inc
aam
push
fisttps
mov
enter
add
sub
mov
in
lock
out
icebp
out
mov
sub
cld
and
mov
add
push
push
xchg
lret
xchg
clc
popa
jp
jae
push
dec
and
gs
mov
jnp
stos
loop
mov
ljmp
sbb
xchg
data16
ljmpw
or
xor
jmp
jle
stc
gs
xchg
pusha
out
dec
cltd
jne
outsl
mov
sti
je
out
jo
call
idivl
mov
mov
add
mov
aaa
mov
fcoml
mov
xor
scas
ds
shlb
pop
dec
inc
adcl
cmpsb
push
std
jge
aaa
sub
fistpll
pop
mov
js
dec
xor
dec
out
fisubs
iret
xchg
sarb
inc
lock
cmp
fwait
clc
mov
jp
mov
xchg
fimuls
xor
adc
cwtl
xchg
int3
and
sub
popa
imull
rolb
out
test
mov
popa
ja
mov
lret
mov
sub
into
cltd
lret
pushf
sbb
jl
or
int3
jp
cmc
push
add
aas
sbb
loopne
das
sub
pop
dec
adc
mov
jmp
test
es
mov
loope
jne
xorb
cmp
dec
movsb
cmpsb
and
push
pop
cmp
inc
fiadds
add
fldenv
mov
loope
xor
push
mov
mov
adc
mov
aas
jl
popf
fwait
xor
xchg
xchg
xchg
repnz
sub
cmp
hlt
xchg
mov
lea
mov
fdivs
shlb
xchg
pop
loopne
int
loope
popa
rcrl
push
adc
or
xchg
sub
outsb
in
push
dec
push
xchg
push
add
cmc
mov
mov
inc
push
scas
or
fmull
mov
inc
lods
subb
das
jb
pop
mov
xor
pushf
mov
mov
add
push
push
xor
fcom
jae
out
outsl
jo
hlt
pop
ja
stc
cmpsb
cmpsl
adc
and
loopne
mov
push
push
lret
nop
mov
xor
inc
pop
mov
mov
je
sbb
cltd
out
and
jle
adc
pop
pop
adc
addr16
test
and
lcall
jp
mov
sub
ss
aaa
jmp
mov
test
rcrb
ljmp
mov
add
inc
pop
aad
pushf
mov
pop
leave
xchg
or
cmp
adc
leave
xchg
gs
lods
popf
les
inc
mov
push
in
lea
and
insb
xor
sub
sbb
rclb
sub
out
mov
sub
cli
faddl
add
leave
std
fwait
cmp
popf
cmp
pop
ja
push
lret
sub
mov
mov
xchg
cltd
js
or
fcoms
xchg
data16
pop
pop
push
mov
jecxz
jns
pop
fwait
xor
jle
lcall
jnp
outsb
add
and
lcall
aam
sbb
ds
cmp
in
mov
jg
jae
jb
aaa
jnp
lods
mov
lret
jecxz
add
cmp
add
and
aas
push
in
push
pusha
dec
pop
sbbl
addr16
xor
sbb
in
cltd
lods
out
pop
xor
or
add
frstor
stc
add
inc
mov
jno
leave
inc
test
and
mov
pop
fildl
xor
dec
xchg
xor
loopne
out
aam
push
leave
adc
flds
jno
ret
das
jle
js
inc
movsl
sub
fdivrl
sahf
sub
in
sub
or
inc
sbb
adc
pop
xchg
aas
into
mull
or
and
movntps
pop
inc
scas
cld
push
mov
into
jae
or
pop
call
add
mov
mov
pop
cmpsl
in
push
pop
nop
mov
adc
out
iret
push
jp
jae
divl
sub
loopne
mov
sub
testl
inc
addb
dec
sbb
pop
das
push
mov
rcrl
xchg
ret
ja
ret
or
out
sbb
jbe
or
pop
jne
add
push
ret
out
jo
lcall
leave
cltd
dec
es
xor
scas
adc
add
push
aaa
call
adc
adc
mov
test
push
cwtl
jnp
pop
mov
es
pop
rcrl
sub
inc
xchg
lea
movsl
stc
fsubrl
add
sahf
es
shlb
shrd
sti
data16
in
xor
fs
xorb
cwtl
pop
js
mov
dec
dec
insl
andl
xor
cmp
mov
jnp
xor
xor
and
lds
mov
ja
jecxz
sbb
fimull
jbe
pop
stc
xchg
jg
push
mov
loopne
imul
mov
stc
pop
test
cmp
mov
cmp
sbb
cmp
pop
mov
mov
sub
xchg
jecxz
jbe
mov
pop
inc
cs
sub
add
pop
sub
mov
add
xchg
add
idivb
imul
mov
pop
add
in
daa
scas
cld
clc
or
daa
out
adc
ljmp
dec
sti
fwait
loope
mov
mov
xor
push
cmpsb
out
inc
test
jne
xor
sti
pop
push
sbb
dec
cmp
dec
lods
aas
push
jnp
xor
mov
mov
inc
jae
cli
fwait
cwtl
inc
mov
push
icebp
testl
sbb
add
ret
fwait
cmp
cmp
or
imul
sahf
sbb
std
imul
mov
cmp
cmp
fisubrl
cmc
fmull
xor
push
mov
ja
and
clc
subb
es
mov
repz
add
sahf
mov
lahf
mov
icebp
inc
orb
js
mov
cmp
loope
pop
lret
or
adc
das
ljmp
jle
push
test
leave
ds
cmpsl
fsubl
test
jmp
cmp
push
fbld
add
outsb
xor
clc
jge
xchg
fsubrl
mov
insl
stos
std
data16
jns
xor
dec
outsb
cmp
jge
pop
sbb
fldl
dec
mov
lret
mov
in
shll
loop
popa
std
cmp
scas
mov
jp
out
icebp
daa
gs
es
aad
xor
fidivl
insb
loop
inc
and
not
mov
add
mov
cmp
insb
insl
mov
mov
repz
sbb
pop
jns
movsl
imul
cmpsb
ret
jl
fldenv
inc
mov
mov
adc
ja
cmp
sub
enter
inc
subl
outsl
jne
fadds
or
mov
cmp
mov
xchg
aas
or
push
or
jo
ret
and
in
mov
mov
movsb
add
test
or
loopne
lret
and
pop
jnp
inc
adc
adc
mov
adc
notl
pop
std
push
or
inc
push
pop
xchg
stos
mov
inc
fistps
dec
stc
push
pop
cmp
mov
mov
push
adcb
hlt
out
mov
lods
sub
fcomps
pop
test
push
push
xlat
imul
xchg
aam
test
out
sub
andl
fnstsw
data16
push
jo
fcomps
cmpsl
outsb
mov
testb
ja
aaa
lods
push
jbe
stc
arpl
xor
sub
movb
pop
lds
sbb
pop
inc
lods
bound
mov
sbb
pusha
and
xor
sahf
ror
xchg
xor
push
xchg
mov
xor
test
jbe
mov
adc
cmp
mov
mov
outsl
scas
mov
xor
leave
add
rclb
xchg
mov
add
xchg
jecxz
enter
or
ljmp
jg
cmp
push
pshufw
xlat
mov
imul
xorl
imul
push
dec
add
pop
pop
or
add
das
sti
push
inc
cmp
stos
xchg
out
pop
es
and
fwait
dec
add
sbb
in
mov
inc
aaa
aas
add
das
lea
mov
xchg
dec
ja
bound
cmc
sub
je
xchg
fcmovbe
cltd
test
clc
xchg
xchg
jmp
test
sub
mov
xchg
ret
pop
popa
inc
arpl
mov
test
sbb
sub
add
cmp
dec
iret
lock
cmpsl
mov
mov
pop
fistl
es
sbb
aad
sbb
push
in
ret
pop
add
sti
ds
int3
cmovne
sub
xor
mov
pop
enter
mov
push
inc
dec
add
popf
jo
scas
fnstsw
in
or
pusha
cmp
sbb
inc
dec
inc
and
inc
idiv
aas
dec
mov
mov
mov
xchg
insl
mov
jle
fldcw
jbe
out
dec
mov
rcll
xchg
push
ds
mov
inc
outsb
cmc
sahf
dec
cli
leave
imul
clc
mov
int
mov
popf
lcall
dec
xor
ret
stos
stos
pop
icebp
mov
sti
incl
leave
xchg
sub
xor
out
xor
pop
sbb
cltd
and
cmp
out
xchg
shlb
dec
or
add
shlb
popf
xchg
movsb
scas
out
xor
cmp
lret
mov
out
fwait
scas
adcl
cmp
mov
clc
bswap
pop
scas
pop
add
lock
ficoml
cmp
mov
dec
scas
pop
out
pop
jp
mov
dec
shll
inc
jmp
rcrb
dec
lods
xor
mov
push
push
mov
mov
pop
mov
mov
leave
in
bound
and
add
pop
cmpsl
xchg
arpl
mov
outsl
out
and
and
cmp
aas
mov
mov
in
scas
jge
imul
mov
push
in
mov
out
jo
out
lahf
or
std
push
xor
pop
push
insl
es
in
jns
fucomip
fwait
add
mov
fwait
xchg
in
sbb
mov
outsb
test
stos
pusha
movb
gs
mov
sahf
mov
mov
in
jns
add
mov
mov
pop
add
mov
aad
imul
and
mov
scas
add
add
in
cmp
pop
jge
xchg
in
insb
sysenter
mov
or
shlb
xchg
cmp
push
mov
lcall
push
mov
pushf
push
xchg
and
push
outsl
out
addr16
aad
and
jbe
mov
xchg
xlat
mov
leave
les
outsl
data16
gs
into
mov
mov
or
gs
in
aas
mov
popa
inc
mov
test
and
jle
pcmpeqw
ljmp
cli
adc
jmp
jmp
scas
adc
pop
inc
and
lret
add
cli
pusha
in
sbb
lock
sbb
cmpl
loop
push
mov
sub
mov
test
cwtl
hlt
push
xchg
add
sbb
fistps
mov
int3
dec
cmp
sbb
xchg
mov
scas
ret
mov
rcll
cmp
lock
sbb
mul
movsl
test
leave
lcall
jbe
mov
cmpsb
mov
dec
push
cmp
xchg
enter
mov
stc
lret
mov
dec
lea
insl
out
loopne
mov
and
cmp
lret
push
mov
aam
pop
data16
repz
adc
add
mov
fildl
cmp
arpl
pop
test
push
lods
mov
and
clc
push
jp
add
out
adcb
xor
ret
push
adc
lahf
mov
sbb
and
mov
push
pop
scas
out
outsb
and
mov
ljmp
inc
pushf
mov
mov
aaa
mov
add
pop
mov
pop
iret
popf
rorl
jge
cs
pushf
aad
mov
mov
or
xor
daa
js
dec
fistl
cmp
sub
mov
les
insb
mov
loope
aam
adc
sub
cmp
pop
outsb
imul
std
imull
out
push
push
sub
sbb
xor
notb
xchg
sbb
loope
inc
insb
ficomps
adc
out
xchg
cmpsl
repnz
dec
das
aas
jl
ret
cmp
pop
sbb
xchg
mov
pop
rcr
sbb
xor
cmpsl
cmp
lahf
cltd
and
sbb
leave
mov
inc
insb
jecxz
or
mov
mov
add
sub
jno
cld
add
jo
int
xor
inc
das
call
insl
mov
dec
test
inc
movsb
mov
dec
xor
or
jecxz
adc
jmp
sub
xchg
adc
sub
xchg
das
stos
push
in
cld
fdivrs
sti
jb
xor
sub
cmp
repnz
pop
lods
sub
test
and
dec
cmp
arpl
lcall
jle
jg
loope
addr16
fcomip
push
loope
mov
push
scas
push
or
jmp
inc
jno
push
jns
and
jle
ss
push
sarl
or
add
icebp
inc
out
lahf
es
imul
mov
xor
mov
jae
xchg
insb
ljmp
int
add
or
loop
adc
scas
imul
lret
or
loop
sbb
outsl
push
or
jge
lods
jle
lock
rcrb
and
sbb
lahf
aad
imul
popa
addb
test
jecxz
cmc
lret
andl
es
fidivs
movb
inc
jp
fcoms
daa
aas
xchg
inc
dec
das
jns
add
push
repnz
sbbl
xor
imul
pop
movsb
in
loopne
repz
pop
xchg
insb
cld
mov
inc
cmp
push
das
lods
jnp
sub
pop
sub
scas
ret
pop
stos
fldenv
mov
mov
mov
sahf
cltd
lret
dec
ret
jnp
shll
test
ret
es
jge
ret
fbld
fldcw
insb
fsubs
sub
fidivrl
mov
lcall
int
xchg
cmp
ret
push
outsb
mov
pop
inc
movsl
ss
es
and
jp
mov
aam
xchg
sub
stos
das
mov
xchg
cmp
mulb
pushf
idivl
pop
in
xor
and
sbb
andl
loopne
lods
hlt
loope
jb
out
int
jnp
cmpsl
dec
sbb
mov
mov
jle
mov
jl
push
dec
sar
stc
sbb
mov
fldenv
mov
push
cld
and
dec
pop
popa
sub
pop
out
test
inc
or
xchg
sub
add
jb
out
shlb
jno
and
cmp
jmp
shr
xchg
jb
jns
cmp
les
arpl
clc
fstl
cld
sarb
jecxz
call
pop
inc
xor
ja
icebp
xchg
das
leave
fcmovu
add
push
adc
insl
sub
stc
pushf
jl
mov
dec
xchg
mov
fldcw
and
jmp
pminsw
xor
adc
xor
pop
in
data16
insb
xor
jo
test
imulb
pop
cld
fsubr
push
mov
enter
les
and
lds
das
xor
test
push
mov
push
sub
jns
xchg
xchg
sqrtps
mov
bound
mov
fdivl
repz
or
xchg
lahf
aas
jb
pop
and
mov
addr16
add
mov
and
push
lds
mov
push
loop
lret
jnp
mov
fldl2t
push
xor
xor
imul
cmp
pop
add
test
inc
sti
rcrl
pop
fs
repnz
push
fidivl
mov
pop
pop
popa
lret
daa
sub
int
addr16
push
aas
adc
lcall
ja
rcrl
sbb
in
je
loop
dec
push
sbb
xchg
dec
sbb
arpl
shr
or
in
pop
xchg
jmp
xor
jge
pop
fst
shlb
nop
repnz
and
outsl
add
lret
incb
xor
stos
int
sub
rcrl
arpl
mov
test
mov
or
jecxz
mov
les
mov
jb
jnp
in
lahf
sbb
pusha
pop
bound
mov
imul
js
xlat
pop
dec
add
inc
push
xor
xchg
or
mov
lahf
js
outsb
nop
lahf
add
popf
cs
lcall
lea
pop
or
fwait
ret
movsb
xor
push
sub
dec
adcb
gs
add
out
hlt
xchg
and
push
mov
jp
xor
adc
inc
aaa
and
cltd
pop
mov
aad
lret
pushf
hlt
orl
dec
and
icebp
loop
iret
nop
xchg
xchg
mov
cmpsb
mov
inc
addr16
mov
pop
test
push
popf
sub
xor
inc
jp
pop
clc
jbe
les
stc
scas
xchg
adc
fnstsw
paddq
inc
in
dec
pop
arpl
or
insl
sahf
push
mov
repnz
iret
repnz
xchg
js
mov
scas
fnsave
fists
mov
mov
mov
sub
es
push
nop
je
bound
push
cmp
mov
nop
sub
add
cmc
mov
mov
mov
js
ror
pop
sub
les
push
xorl
cmp
scas
cwtl
cmp
daa
movsl
notl
cmpsl
jl
push
adc
mov
or
pop
or
imul
mov
sbb
mov
xchg
push
xchg
pop
xor
push
int3
roll
mov
mov
scas
add
dec
rclb
shr
icebp
int
pop
or
pop
jmp
add
or
push
icebp
cwtl
scas
call
imul
pop
movsb
fwait
stos
test
jae
cmpsl
sbb
jmp
in
iret
imul
dec
int
or
cmc
jle
cld
popa
jne
aam
clc
outsl
int
js
lds
add
insb
mov
mov
mov
lcall
icebp
sbb
add
adc
mov
pop
adc
fdivrs
sub
sub
dec
cmc
xorb
rcrb
ss
js
cwtl
push
cmpsl
push
insb
fcmovnu
mov
dec
rorb
not
les
mov
loopne
stc
sbb
ret
or
test
mov
pop
mov
mov
lcall
idiv
mov
es
xchg
mov
cwtl
daa
push
lfs
or
outsb
pop
and
xchg
cmpl
mov
addr16
xchg
mov
movsl
jb
cltd
mov
sbb
lcall
xchg
and
sub
push
mov
pop
dec
push
and
repz
pop
sbb
bound
jns
stc
xor
cmp
stos
add
or
add
mov
cmpsl
xor
add
stc
gs
shr
bound
repnz
inc
popf
push
jbe
cld
cwtl
xchg
addr16
xchg
dec
mov
pop
sbb
inc
aad
imul
jns
out
pusha
in
push
mov
mov
cmpsb
and
loopne
jno
out
arpl
shll
sbb
add
mov
pop
sub
rol
insl
lods
std
out
jo
push
sbb
jmp
mov
inc
xlat
test
sbb
stos
mov
adc
cmp
or
test
fidivrl
pushf
sahf
xor
sub
push
and
mov
xor
sub
mov
push
imul
test
dec
mov
outsl
pop
ret
loop
insb
add
or
test
inc
mov
test
push
int3
jno
mov
mov
test
lret
cmc
test
ds
push
push
daa
std
mov
pop
ds
imul
push
fxch
sbb
lret
lock
and
sbb
adc
or
adc
loopne
sub
add
xchg
repz
cmp
out
pop
in
dec
testb
lahf
dec
cmp
push
lea
lds
ficompl
jle
mov
dec
andb
push
rcrb
xor
aaa
push
pop
xor
subb
cmpb
push
mov
push
out
movsl
dec
in
push
dec
dec
xor
jno
inc
and
in
jno
jno
push
fs
es
jb
push
popa
fdivrs
lods
shlb
es
int3
out
add
and
andb
pop
lahf
push
pop
adc
xor
test
cmpsl
sub
sbb
int
mov
das
nop
inc
ss
cmp
or
xor
sub
sbb
push
scas
jmp
dec
je
fisttpll
inc
cmp
dec
and
pop
inc
cmc
mov
mov
jmp
hlt
mov
sbb
push
push
pop
and
lods
and
cmp
dec
aam
js
rol
adc
xchg
in
pop
xchg
mov
sub
inc
sbb
mov
add
push
ret
mov
int
leave
jmp
pop
pop
dec
gs
rcrl
aaa
icebp
js
loopne
xchg
push
push
mov
ret
push
dec
lods
xor
imul
cwtl
adc
ja
data16
fistps
clc
scas
mov
out
cld
jmp
mov
repnz
xchg
mov
sbbb
aas
pop
jae
pop
ror
push
mov
mov
inc
inc
jae
and
or
pop
xor
xchg
push
icebp
lods
shrl
shrb
popa
arpl
mov
dec
and
int
cmp
fs
mov
cmpsb
sub
mov
lock
mov
mov
cmc
int3
in
cmp
hlt
loope
std
mov
adc
cmp
das
out
pop
xchg
sti
inc
hlt
iret
inc
inc
sub
or
mov
cmpsl
or
push
xchg
sbb
mov
movsb
sub
lret
cmp
int
inc
leave
adcb
es
xchg
loop
shll
mov
test
nop
lcall
dec
push
in
mov
sbb
lods
andb
sti
into
loopne
imul
fildll
xchg
adc
xchg
sbb
sub
push
hlt
sti
mov
in
jno
loopne
lock
inc
or
test
jge
out
adc
movsl
inc
mov
sub
aad
imul
gs
out
fwait
push
jae
ja
lahf
xor
lret
mov
lods
ds
jp
pop
mov
or
push
sub
sti
lret
mov
fsubs
and
sub
xchg
mov
add
xlat
bound
cmp
mov
mov
mov
xchg
sub
ja
pop
in
test
xchg
insb
loop
and
pop
lcall
push
xchg
std
adc
adc
and
inc
xchg
mov
call
push
dec
and
test
mov
pop
xlat
rcrb
sub
push
data16
dec
movsl
fwait
nop
mov
push
cmp
mov
cmpsl
cmp
lcall
sub
cwtl
pop
imul
std
lret
mov
sub
pop
xchg
into
pusha
jae
sarb
fildll
stos
movsb
mov
pop
and
hlt
in
cmpsl
push
repz
scas
rcrb
fcmovnb
or
mov
fsubrl
cmp
xchg
cli
jb
or
int
sbb
xorl
test
shl
dec
mov
pop
mov
pop
shrb
jl
xchg
das
ss
js
mov
push
jle
mov
cmp
fdiv
pop
and
cs
js
out
mov
pop
repnz
cmp
pushf
popa
mov
pop
dec
dec
push
sti
or
rorb
push
adc
xchg
sub
inc
sub
insb
insb
inc
subl
stc
cmovle
mov
and
int
xchg
ret
les
mov
mov
loope
add
pop
mov
mov
mov
push
sarl
in
addr16
stos
jecxz
mov
cli
xor
dec
ds
cld
shlb
cmc
repnz
fidivrs
out
iret
sub
loop
rorl
clc
jns
jl
jg
std
inc
gs
push
add
jl
pushaw
aaa
subl
loopne
scas
icebp
enter
xchg
dec
push
mov
shl
mov
cmp
xchg
lock
jnp
enter
push
mov
mov
cmpsb
pop
inc
xor
int
cmpsl
xchg
sub
pop
outsb
dec
mov
daa
and
mov
gs
cmp
mul
jmp
jne
outsb
jnp
push
dec
cli
pop
push
push
cltd
stc
fs
outsb
fnstsw
test
jl
mov
mov
mov
js
sbb
fwait
cltd
mov
push
sbb
cs
mov
mov
xchg
lods
into
mov
fstpl
xlat
icebp
pop
and
ja
dec
dec
dec
cmp
dec
sub
lcall
cmp
jo
jecxz
adc
int
imul
pop
and
popa
jns
adc
cwtl
sbb
iret
divb
lods
xchg
pop
les
xchg
xchg
fstps
pop
pushf
pop
add
mov
mov
mov
jnp
icebp
xchg
xchg
shll
repz
lcall
mov
sub
sub
sbb
test
ljmp
cmp
xor
or
adc
fwait
jl
dec
push
xchg
in
push
jbe
xchg
lea
and
jle
test
in
sub
adc
adc
add
insb
out
das
popf
mov
mov
ja
mov
fadd
jo
xlat
mov
je
jae
xchg
push
mov
or
insl
xchg
fwait
xor
lret
jp
jecxz
dec
add
pop
inc
mov
sub
inc
dec
mov
lods
lea
es
cmp
adc
pop
out
addb
mov
test
dec
dec
mov
cmpb
loope
mov
call
xchg
mov
jns
adc
and
inc
push
or
hlt
imul
fidivs
stos
mov
hlt
out
xchg
pop
ja
push
scas
gs
sbb
push
jl
test
in
dec
arpl
push
cwtl
jmp
rorl
test
sbb
lods
inc
imul
inc
xchg
loope
cmc
pop
adc
or
xchg
push
push
jns
pop
movsl
mov
mov
sti
mov
mov
popa
and
mov
sub
das
repz
pop
dec
sbbb
pop
adc
xchg
mov
mov
repz
mov
pop
clc
dec
loope
jns
addr16
xchg
out
or
and
sbb
push
add
clc
dec
pop
inc
int
scas
aas
arpl
aam
pushf
mov
lods
mov
jge
fs
aam
xor
add
sbb
add
jecxz
lods
jb
nop
iret
and
fiaddl
scas
sub
movsl
test
in
xchg
mov
addr16
mov
mov
test
sbb
out
adc
adc
mov
sub
cs
mov
and
fisubrs
fwait
es
push
out
pop
xor
jnp
cmp
dec
out
mov
mov
ds
jns
lahf
sub
jl
sarb
sub
insb
push
in
jge
cwtl
mov
sbbb
xor
seto
out
subb
ljmp
inc
mov
shlb
jp
xchg
xchg
cmp
out
add
mov
fisubrl
inc
pop
js
sbb
ret
rorb
xor
sbb
repnz
cmpb
into
movsb
jbe
xor
rclb
dec
xchg
jle
xor
aaa
pop
push
mov
movsl
decb
pushf
inc
pop
roll
cwtl
pop
push
call
pop
cli
call
nop
lret
mov
cmpsl
push
test
hlt
add
divl
lds
mov
jge
insl
ds
lock
rcrl
subb
lods
jmp
std
jo
and
inc
jecxz
and
ret
sub
aas
es
lock
push
ficoms
hlt
js
xlat
lcall
and
add
jge
or
add
hlt
fsts
icebp
jp
xor
pavgw
mov
jne
jb
pop
sbb
inc
mov
xchg
in
adc
fcomps
xorb
subb
mov
xlat
sub
imul
incb
adc
int
dec
out
aad
mov
fisubl
add
mov
call
mov
mov
lods
test
inc
addr16
pop
jns
adc
jecxz
pushf
mov
mov
sbb
aam
or
xchg
insb
stc
cmpsb
ss
pop
ret
xor
push
call
ss
mov
fst
int3
mov
mov
push
movsl
loop
lock
adc
pushf
or
out
pop
lods
add
js
cmp
pop
inc
xorl
into
lods
stos
mov
cs
or
xor
cmc
stc
mov
mov
inc
dec
outsb
imul
incl
sti
mov
push
in
cltd
loopne
pop
imul
les
mov
adc
mov
push
cmp
arpl
lea
xchg
add
out
push
and
pushf
mov
sbb
inc
mov
cmp
fcomps
andl
push
dec
inc
push
clc
add
mov
or
incb
lds
insl
push
xor
rclb
lods
push
pop
mov
and
mov
mov
imul
mov
jb
fists
push
sbb
addl
cmp
sbb
popf
xor
add
ja
in
jecxz
cmpsl
inc
dec
lahf
xor
jne
imul
fadds
cltd
sbb
adc
push
cs
ljmp
ds
or
dec
sub
sub
cmp
cli
aas
jecxz
arpl
clc
push
adc
ret
cmp
das
ss
flds
or
add
adc
fcomip
stos
ja
mov
imul
ja
movsl
pop
stos
adc
mov
push
mov
mov
aam
and
ljmp
fcomp
and
push
loope
enter
out
stc
dec
push
mov
into
out
jno
sub
mov
xor
xor
mov
in
imul
jmp
xchg
cmp
icebp
jecxz
xchg
cmp
negb
lret
addl
and
inc
outsl
pop
enter
int
cmp
out
sub
cld
mov
mov
fsts
out
dec
pop
imul
roll
adc
push
push
cmpsl
cmpsb
mov
aam
mov
mov
pop
jo
adc
xchg
pusha
andl
dec
jge
or
int3
mov
addr16
pop
pushf
ds
pop
mov
push
imul
mov
jo
icebp
lea
in
add
enter
fs
lcall
jae
out
inc
xor
mov
mov
movsb
mov
pop
push
and
pushl
scas
int3
aaa
cmp
test
dec
and
dec
sar
sub
ret
dec
jb
adc
mov
xor
shll
pop
add
ds
fwait
arpl
or
and
seta
xor
push
mov
jge
jle
lahf
neg
adc
jmp
add
xchg
cmp
daa
cmp
int3
ficoml
popf
adc
cmp
or
lea
pop
mov
xor
fistpll
or
sub
sbb
mov
sub
fwait
andl
sbb
push
fisttps
or
rcll
inc
nop
gs
lahf
mov
addr16
repnz
inc
das
pusha
repnz
addl
dec
jg
jg
jnp
fists
mov
mov
stos
xchg
add
mov
cmp
test
decb
aaa
daa
lods
addr16
xorb
push
sarb
sbb
repnz
je
or
in
int3
and
jae
mov
mov
enter
adc
add
movsl
xchg
sbb
or
mov
rcrb
jmp
divb
mov
mov
cltd
popa
lods
lods
xor
lea
xor
cmc
mov
mov
push
pop
cmovp
cmpsb
adc
push
pop
test
shl
mov
pop
sahf
mov
fs
leave
test
ds
xchg
inc
bound
adc
jns
add
fs
mov
fdivr
popa
rcll
push
sub
loopne
xchg
lds
inc
pop
add
jae
jge
inc
add
adc
in
or
cmp
mov
mov
mov
pop
pop
ret
cli
fcoml
sub
jb
sahf
bound
lret
cmpsb
mov
dec
xlat
sub
sbb
mov
cmp
xchg
mov
jle
fsubrp
and
inc
xor
mov
out
jno
jo
push
mov
into
sbb
scas
lahf
xor
pop
lahf
and
push
jg
enter
notl
je
mov
decb
mov
cmp
in
mov
mov
pop
lcall
aam
popa
mov
xor
aam
enter
push
push
jl
or
xor
mov
xchg
in
xor
out
or
cld
leave
enter
shrl
lahf
popa
xchg
add
cmp
mov
sbb
outsl
cmp
repnz
stos
leave
notb
pop
and
xlat
sbb
mov
cmp
mov
xchg
sub
xacquire
mov
lods
xor
je
fdivrs
adc
fwait
inc
adc
sbb
stos
bound
fcompl
jge
test
adc
mov
mov
mov
xor
xor
push
stos
movsl
jmp
or
aaa
into
jno
js
pusha
or
jecxz
adc
mov
js
xor
or
cmp
sbb
add
sbb
inc
push
xchg
lock
and
or
xor
mov
xchg
mov
mov
rolb
test
adc
outsl
test
mov
loop
adc
pop
into
sbb
jne
dec
push
xor
push
jle
jl
mov
jge
cmpsl
es
call
test
sbb
test
cmpsl
push
adc
call
xor
fcomip
incb
cmpsb
xchg
or
mov
mov
movsb
fbld
dec
dec
nop
or
xor
add
cmpsl
into
lea
xlat
popa
stos
xchg
mov
sbb
fidivrl
jecxz
mov
jbe
pop
repz
fisubs
out
lods
addb
add
in
xor
sub
addr16
or
stc
jle
test
ret
jbe
and
pop
mov
push
mov
push
cmp
dec
loopne
aam
add
daa
aam
inc
push
mov
inc
repnz
adc
or
xchg
add
push
shrl
jg
xchg
fstp
fisubs
xchg
popf
ret
add
rorb
sbb
lods
out
jecxz
loope
sbb
mov
orl
idiv
mov
mov
in
and
imul
sar
pop
push
or
mov
icebp
pusha
std
push
cmpl
or
lods
xlat
pusha
sbb
cmp
nop
jle
sahf
enter
shlb
in
mov
test
or
xchg
ja
xchg
mov
fldt
mov
sub
mov
cwtl
inc
faddl
mov
jb
stos
out
mov
mov
ljmp
loop
scas
popf
ss
adc
sbb
insl
int3
fwait
out
xchg
fcmove
push
popf
fisubrs
xlat
mov
xchg
or
sbb
push
fucomp
repnz
arpl
negl
shlb
jnp
inc
and
mov
inc
in
push
insb
pop
clc
cld
jge
jge
jno
mov
push
push
in
cli
repz
imul
cmp
mov
xchg
idivl
dec
dec
xchg
jbe
pop
ret
stc
mov
lea
repnz
shll
mov
inc
xlat
or
jmp
jbe
pop
mov
inc
faddl
loopne
ret
dec
sbb
sbb
mov
cmp
clc
sub
push
push
mov
dec
push
fldt
pop
pusha
mov
ss
add
ja
pop
test
mov
cmpsb
mov
in
scas
mov
movsb
or
pop
bound
mov
xchg
inc
and
fucom
sti
mov
mov
in
xchg
loop
int
shl
mov
adc
xchg
lock
add
sbb
rcr
xor
xchg
mov
adcl
mov
popa
cmpsb
and
shrb
xchg
lea
mov
xchg
pushf
int
pop
and
cmp
inc
dec
outsl
gs
es
xchg
pop
sahf
cmp
popa
jno
je
xor
cmp
daa
jbe
xchg
insb
adc
or
xor
ret
in
adc
mov
loope
lcall
mov
hlt
xchg
lods
pop
or
jae
xor
cld
das
fcmovnb
adc
clc
nop
fisttpl
les
cltd
jecxz
fsubrp
outsb
mov
lcall
lahf
mov
movsl
push
imul
in
in
mov
or
sbb
shlb
aad
inc
xor
jmp
rcrb
pop
imul
dec
ret
daa
xor
outsl
lock
mov
cmp
ljmp
insl
mov
outsl
lcall
cmp
xchg
lcall
xor
adc
pop
into
gs
sub
adc
shlb
or
call
and
and
xor
cmp
or
dec
les
sahf
cld
push
shl
cmp
sub
rcrb
adc
pop
cwtl
mov
roll
in
push
adc
xchg
pushf
adc
cmp
dec
xchg
sti
mov
inc
mov
sub
stc
std
adcb
arpl
clc
pop
test
or
mov
jecxz
or
inc
pop
cmp
test
mov
out
sub
aaa
das
clc
sub
popf
das
push
mov
out
jle
lret
mov
orl
test
fnsave
push
sub
adc
inc
jmp
adc
pop
sahf
rcll
mov
fiaddl
adc
movsl
dec
pop
jecxz
mov
sub
clc
push
int3
btrl
iret
mov
aam
leave
cmp
xchg
popf
add
mov
je
sarb
test
xchg
jecxz
cli
add
fdivs
fbstp
aam
lret
daa
xor
add
cmc
pop
and
push
pop
enter
sub
movsb
jle
or
inc
orl
scas
fisttpl
mov
loope
lods
sbb
lods
pop
ret
jbe
movsb
pop
xchg
inc
and
rolb
push
nop
imul
or
arpl
xchg
mov
mov
pop
add
dec
rcr
jge
or
sub
fildl
add
push
mov
mov
and
out
out
xor
add
gs
cwtl
push
cmp
shl
push
arpl
sub
and
pusha
pushf
lods
lcall
daa
cmpl
sti
ja
lods
dec
mov
pmuludq
push
and
adc
out
mov
shll
iret
mov
sbb
and
sub
sbb
inc
jbe
adc
int3
js
push
lods
xchg
mov
cli
lret
aad
mov
imul
sub
add
frstor
lret
push
sub
imul
movsb
data16
jb
es
inc
and
xor
sbb
test
xor
mov
enter
mov
mov
push
lcallw
out
mov
sbb
xchg
aad
mov
lods
stos
fnstenv
pop
dec
aas
hlt
shll
xor
cmc
aas
icebp
inc
fisubs
test
fdivr
or
push
dec
mov
out
add
iret
aad
jmp
jp
lds
sbb
out
in
pop
hlt
mov
insl
addb
arpl
mov
jne
pop
aam
jmp
push
pop
sti
push
sahf
es
gs
adc
enter
pushf
mov
popa
inc
ss
andl
loop
insb
lcall
popa
or
daa
jae
repnz
adc
leave
lods
lods
movsb
ret
out
mov
in
aaa
out
test
loop
js
xchg
and
test
sbb
dec
and
add
mov
iret
pop
sbb
mov
daa
mov
scas
lds
push
and
aam
in
sar
mov
and
lret
cld
sub
push
xchg
lods
sub
in
sub
test
fidivrl
mov
fs
cmp
or
inc
cmpsl
insl
pushf
and
mov
arpl
pop
sahf
xchg
rcrb
lock
je
mov
call
int3
cmpsb
aad
sub
scas
xor
ljmp
adc
popa
inc
mov
jo
push
loop
cmp
clc
shlb
filds
mov
dec
xchg
inc
jp
icebp
or
divl
dec
fsub
mov
xchg
xchg
imul
mov
adc
xchg
stc
xor
pushf
adcb
cltd
or
push
mov
nop
shr
loope
mov
aam
mov
jae
lock
dec
arpl
stc
stos
dec
and
push
lret
jnp
push
dec
add
dec
pop
fcmovbe
mov
bound
mov
dec
lods
or
sbb
mov
and
stos
mov
dec
cli
hlt
pushf
andl
xchg
sub
xchg
sub
cltd
leave
idivl
mov
std
test
push
ljmp
dec
sub
sbb
aas
jae
inc
notl
pop
adc
or
sub
es
pop
sbb
insb
xor
aam
lock
xchg
and
xchg
mov
inc
adc
stos
in
mov
xor
inc
clc
and
out
sahf
xchg
adc
adc
push
inc
xchg
in
inc
loop
adc
or
mov
lds
or
dec
mov
push
sbb
les
dec
cmpl
mov
int
and
aad
loope
rcrb
loop
ds
mov
xor
jge
lods
fstps
adc
sahf
xchg
leave
scas
sbb
movsl
and
add
push
fildl
bound
add
sbb
cmp
or
call
push
insb
push
daa
popl
jg
push
aad
lahf
pop
cli
mov
rcll
aam
popa
repz
mov
and
scas
lahf
mov
flds
call
fsubrs
cltd
jae
std
and
cs
push
insl
ss
shl
outsl
cld
xor
mov
jle
sub
popf
dec
js
and
push
fcomps
push
xor
lahf
mov
push
pop
hlt
sub
leave
xchg
pop
sahf
dec
jne
or
jne
add
mov
pushf
push
sub
lret
cmp
adc
ds
and
mov
mov
mov
jnp
jns
mov
bound
and
sub
jl
div
mov
dec
fstpl
cs
sub
fstl
in
test
cli
adc
inc
sub
stos
imul
cmp
mov
pop
sub
clc
mov
push
cmp
sti
inc
mov
adc
outsl
cwtl
cmp
mov
test
insw
pop
jmp
inc
dec
xchg
cmp
cld
hlt
mov
stos
dec
sub
sbb
inc
ret
sub
and
pop
js
addr16
sbb
jmp
pop
xchg
push
lahf
rclb
out
mov
sub
push
lahf
sub
sbb
xchg
pop
push
pop
adcl
or
rolb
dec
shlb
xchg
rolb
sub
add
mov
sub
jecxz
mov
sub
mov
in
in
fcmove
mov
sub
sbb
int
and
sbb
inc
scas
lea
ffree
pop
repnz
and
rorl
jp
aas
pop
pop
stos
jb
sti
mov
xlat
adc
fwait
xchg
cmpsb
mov
and
mov
jp
scas
outsl
dec
pop
inc
pop
in
mov
dec
push
push
in
nop
or
sub
inc
mov
out
mov
or
test
int3
sbb
adc
sbb
cmpb
icebp
add
lret
cld
movsb
cwtl
mov
adc
xchg
fiaddl
aam
scas
ss
mov
xor
cs
or
and
je
out
mov
fwait
xchg
ret
insl
loopw
nop
inc
push
sarb
pop
movsl
lods
loopne
cs
ror
xchg
daa
push
repz
push
jge
xchg
cmc
mov
fistps
xor
mov
popf
clc
pop
stc
in
test
xlat
dec
scas
inc
stos
mov
pop
lods
mov
clc
ja
adc
sub
out
mov
jl
fidivrl
lods
adc
mov
fdivr
ss
std
push
mov
inc
fsubrl
out
je
cmpb
fcomp
jnp
mov
mov
lret
mov
or
mov
sub
or
andb
mov
fldenv
sbb
dec
nop
dec
pop
ds
mov
and
sub
push
push
mov
cmpsl
jno
inc
mov
adc
add
fmulp
call
xor
dec
push
ret
fcmovbe
je
xchg
push
fs
mov
aam
je
or
dec
jb
mov
mov
pop
dec
iret
sub
and
xorb
repz
addb
xor
inc
pop
mov
mov
jecxz
push
add
icebp
mov
jecxz
imul
aam
out
jl
ss
icebp
adc
xchg
sub
sti
iret
cwtl
and
xchg
mov
push
out
jg
loope
jae
fs
jmp
jg
gs
adc
jg
je
jl
orb
lds
push
lcall
std
jb
out
es
test
les
sahf
and
or
sbb
rclb
call
in
push
div
ljmp
jno
jae
xchg
jecxz
fbstp
imulb
addr16
xor
mov
fs
xor
adc
scas
mov
dec
xchg
out
ds
xchg
push
cmpsb
mov
sbb
cmpsb
sbb
jmp
fucompp
outsb
xor
imul
sti
push
scas
stos
cmp
leave
ficoml
cmp
repz
cmp
mov
and
mov
dec
data16
cmc
push
test
push
mov
nop
or
pushf
sbb
shl
sub
lods
adc
and
fisttpl
mov
inc
dec
jne
out
nop
bound
adc
sbb
roll
cmc
mov
mov
stc
xchg
dec
jb
movsl
ficoml
test
lret
xor
jb
and
adc
inc
adc
adcl
jp
iret
adc
xlat
gs
sbb
sub
sbb
sub
fwait
pop
xchg
out
subb
fwait
popa
clc
arpl
ja
incl
inc
mov
ja
jecxz
xchg
js
hlt
bound
jecxz
cmp
test
and
inc
les
jge
sub
jb
or
movsb
add
cmpsl
jmp
push
xor
rclb
add
mov
mov
sbb
jmp
lds
stc
mov
loopne
fisubs
ret
test
fwait
dec
sub
repnz
popf
icebp
xchg
rcl
cld
pop
push
enter
sbb
insl
mov
pop
lock
in
pop
push
aaa
in
scas
mov
fldcw
clc
imul
jne
mov
mov
nop
and
out
xchg
js
repnz
mov
mov
rcrb
lock
mov
test
sub
ficoml
out
xchg
mov
mov
in
in
ljmp
adc
push
jmp
fdivs
sub
push
stos
cmc
sub
cmpsl
movsl
lahf
sub
pop
cmp
mov
cltd
dec
cli
ljmp
xor
rclb
mov
pop
push
ds
dec
mov
ss
push
out
adc
stos
or
js
rcrb
gs
pop
inc
imul
mov
test
dec
ret
mov
sub
stos
or
adc
adc
add
je
xchg
cmp
into
pop
mov
sub
jg
cmp
roll
sbbb
into
xor
cmpsb
test
xchg
ss
jo
jnp
and
ret
jb
enter
xchg
test
jle
rclb
out
aam
jb
fidivs
push
push
ljmp
shll
sub
mov
pop
push
lock
aaa
test
mov
sti
mov
mov
lret
pushf
adc
lret
inc
call
mov
cmp
jg
sub
sahf
push
adc
cltd
add
stos
stc
int3
pop
loopne
fwait
js
je
cmp
xchg
outsl
adc
pop
daa
pop
adc
jb
out
push
ljmp
adc
popf
xorl
inc
pop
mov
ja
dec
or
jo
dec
pop
push
pop
daa
sarl
push
pop
pop
xchg
mov
mov
pop
add
xchg
fisttpl
mov
dec
lret
iret
lret
shr
adc
scas
aas
loope
out
mov
fbld
lods
push
lcall
adc
cwtl
push
shrb
pop
test
jg
inc
fs
in
mov
in
sbb
pusha
push
xchg
mov
jae
cmpsb
xor
or
sti
mov
outsb
and
es
push
in
xchg
gs
cli
mov
repnz
cmp
sbb
mov
or
adc
mov
sub
int3
ljmp
cmp
mov
mov
fisttpl
shrb
jg
imul
scas
mov
lea
fldt
movsb
stos
sahf
lods
outsl
cs
sbb
cmp
pushf
fcmovu
dec
jmp
ljmp
aad
icebp
scas
inc
xor
faddp
mov
mov
push
and
fcomip
in
rolb
jne
mov
bound
bswap
arpl
fmull
push
mov
arpl
ds
dec
push
pop
es
aaa
xchg
adc
scas
mov
lret
push
bound
adc
test
daa
cmp
mov
mov
xor
sbb
popa
repz
and
mov
dec
insl
fnsave
adc
xchg
adc
jo
mov
popf
xor
cli
lods
or
idivl
pop
xchg
sbb
cmp
jne
and
or
popf
sub
push
xlat
popa
andl
jns
mov
sbb
pop
outsl
scas
lds
adc
pop
adc
lahf
sbb
mov
fildl
jo
pop
hlt
cli
aad
jbe
mov
jmp
movsl
mull
adc
mov
pop
shrl
jge
xor
xchg
mov
sbb
xor
and
repnz
scas
xchg
test
xorb
pop
js
dec
lret
adc
insb
inc
push
ds
and
aaa
fiadds
pushf
jb
fwait
sbb
and
jecxz
jecxz
push
jno
sbb
arpl
sahf
jo
outsl
nop
stos
sub
cltd
push
jb
shl
insl
loopne
xchg
inc
repz
aaa
je
cmc
sahf
pop
jmp
bound
add
out
cmc
fwait
mul
ss
xchg
notb
imul
repnz
mov
inc
cli
jns
repnz
lods
pop
pop
lds
xchg
xchg
sbb
pop
adc
jmp
or
xor
aad
adcl
pop
or
fstpl
ret
add
lahf
sub
test
jl
add
cwtl
jmp
shll
cld
inc
dec
rolb
stc
sbb
sbb
lret
xchg
jp
inc
and
cmp
xchg
ds
or
outsb
pop
int
int
or
jge
rorl
or
cmp
push
aam
pop
add
cwtl
addr16
jno
cli
test
adc
mov
xchg
insb
or
mov
lods
daa
mov
or
negb
mov
es
dec
xchg
ret
fdivs
pop
inc
or
mov
ret
cmp
andb
js
les
inc
push
xchg
mov
ret
cs
cli
movsl
dec
xchg
sub
bound
cmpsb
jmp
and
out
push
stos
or
jg
lds
or
call
lods
jecxz
mov
movsl
jb
cmpsl
mov
pop
xor
jnp
adc
add
popf
mov
xchg
lret
xchg
xchg
mov
cmp
scas
fs
popa
addl
pop
and
mov
mov
and
insl
mov
xchg
mov
mov
fcompl
gs
pop
pop
shrl
cli
stc
add
loop
std
loopne
jl
mov
cmp
mov
mov
fstl
add
arpl
mov
xchg
mov
push
pop
idivb
mov
jns
dec
add
int
rol
add
js
xor
add
mov
inc
in
jbe
jnp
inc
imul
rcrb
lret
fnstcw
rcrb
push
cmp
lods
mov
mov
mov
xor
jmp
pop
ret
pop
sti
test
jecxz
pushf
aam
daa
mov
push
mov
inc
jp
add
pop
xchg
xchg
dec
mov
std
fwait
out
sarl
stos
call
inc
mov
shll
pop
push
insl
scas
xchg
xlat
sbb
pop
hlt
push
lret
adc
or
push
jle
jns
or
dec
aad
mov
jge
add
in
push
pop
inc
jmp
push
jo
ds
outsb
lods
push
jo
mov
and
incb
mov
xor
mov
scas
sahf
int
insb
add
cmpsb
adc
sbb
adc
lds
pop
cmp
mov
fistpll
fdivr
or
cwtl
loope
fadds
add
cmpsl
cltd
out
mov
mov
adc
inc
ret
jb
pop
jmp
shll
lods
push
sbb
and
divl
mov
jnp
push
fs
pusha
das
add
das
adc
adc
lret
xchg
cmp
inc
fwait
mov
cmp
icebp
or
stos
jb
aam
lods
rolb
push
insl
inc
push
pop
cmp
cmpsb
cltd
push
jge
jns
out
push
inc
push
leave
pushf
aad
pop
jecxz
enter
mov
and
jnp
add
testb
inc
xor
adc
xor
xchg
shlb
add
cs
push
pusha
enter
nop
pop
xchg
cmpl
xchg
or
testb
cmp
sub
sbb
sub
aas
fisttpl
popf
arpl
sub
lds
movsl
lea
sbb
ret
adc
jmp
pop
test
aad
fcompl
enter
xor
stc
mov
ljmp
push
xchg
stos
mov
lcall
or
mov
xlat
ss
sub
aas
push
push
movsb
mov
aas
mov
cbtw
cmp
sub
out
cwtl
xchg
xor
mov
xlat
mov
pushf
clc
xchg
test
mov
push
repnz
push
ljmp
out
xchg
es
outsl
das
xor
sahf
mov
mov
mov
mov
jl
mov
add
jne
cmpsb
js
add
shl
iret
test
dec
stos
scas
enter
cmpsb
xchg
shlb
sarb
mov
ljmp
mov
cmp
sub
jns
jb
sub
jb
xor
lea
insb
mov
enter
cld
divb
mov
xchg
movsb
dec
insl
pop
dec
cld
faddp
cmp
jno
int
loop
push
cwtl
pushf
sbbb
not
shlb
gs
push
xchg
jae
mov
mov
fdivr
jle
pushf
outsl
sub
mov
popa
pop
pop
or
sub
adc
aam
in
push
mov
add
push
sbb
out
sub
sub
xchg
lods
xor
loopne
jecxz
sub
inc
mov
jle
leave
mov
and
ds
xchg
daa
push
adc
or
dec
pusha
in
push
rcll
stc
cmp
lret
push
mov
outsb
cld
sarl
jnp
fwait
dec
rcll
sbb
inc
shrl
mov
mov
jnp
or
loop
pop
jmp
pop
mov
in
filds
imul
jl
cmp
adc
or
icebp
mov
lret
movsb
mov
mov
aad
rcrl
mov
adc
push
mov
jmp
and
push
shll
into
jbe
dec
mov
negl
jle
scas
scas
call
xor
scas
jns
sbb
pop
jbe
xor
jl
jp
mov
jp
insl
pop
rep
lods
mov
shlb
fnsave
gs
pushf
or
fldenv
call
sbb
push
dec
lret
pop
and
js
adc
sub
hlt
sbb
fistpl
sub
xor
std
jbe
lods
mov
jecxz
sub
lcall
mov
push
push
out
mov
fimuls
pop
xchg
ret
ds
or
repnz
jmp
push
sub
push
pmuludq
mov
or
je
adc
xchg
outsl
dec
clc
xor
sub
inc
notb
and
pop
hlt
mov
push
mov
jge
sub
mov
fs
lock
or
aaa
pusha
and
shlb
cs
mov
das
daa
call
call
fisubs
pop
and
or
and
cmpsb
jae
addr16
cmp
xlat
test
lret
lock
aas
in
xor
add
xchg
xor
scas
lods
ss
cmp
dec
inc
aad
jl
xchg
inc
aad
pop
pop
sti
mov
add
push
sahf
xor
out
dec
les
and
jo
and
lock
fistps
xchg
pop
push
cwtl
adc
add
mov
in
push
jle
mov
adc
fcompl
xor
push
enter
push
and
iret
xor
mov
jb
mov
jo
es
cmp
mov
dec
pop
andl
push
stc
mov
aas
pop
je
jb
cwtl
cltd
xchg
sub
orl
inc
sti
mov
cmpb
fsubrl
adc
js
leave
adc
in
js
ss
outsl
outsl
cmp
das
or
lahf
loope
ret
sbb
fs
aam
lahf
cmp
std
lcall
add
bound
mov
add
outsb
mov
push
mov
cwtl
shl
loope
clc
jo
outsb
cmpsl
mov
jecxz
sub
xor
das
inc
loopne
lds
push
ss
dec
iret
sarl
pop
mov
adc
loope
enter
xchg
into
sub
and
sbb
addl
sti
sub
lret
addr16
fwait
push
lret
or
std
in
sbb
cwtl
enter
xchg
icebp
pusha
or
sbb
andb
ret
cmpb
mov
into
cmc
xchg
test
scas
pop
mov
and
mov
jae
movsb
test
aaa
and
xor
sub
les
sbb
stos
pusha
jne
push
lahf
adc
dec
outsl
mov
fisttpl
push
fs
mov
stc
jo
mov
ds
sub
xchg
inc
mov
leave
adc
ficomps
push
out
loop
cmp
and
ja
xor
jmp
ficompl
pop
dec
test
dec
shlb
adc
xor
dec
iret
push
xor
outsb
loope
dec
fsubl
outsl
fisttpl
jb
mov
cli
xor
sbb
sti
les
aaa
jb
sbb
jo
sbb
ljmp
hlt
into
pop
and
aas
ficoms
mov
mov
adc
subb
mov
test
roll
mov
and
int
sub
push
dec
mov
pop
inc
pop
lods
or
loopne
sub
pop
bound
cmp
dec
lret
or
fmuls
out
rcll
das
punpckhdq
test
or
ja
mov
mov
testb
lock
lret
mov
imulb
lret
repz
ficomps
cmpsl
shll
or
mov
sti
mov
test
mov
mov
xor
mov
pop
jmp
pop
outsl
shl
lcall
jge
pop
loop
push
out
int
mov
cmc
sbb
out
jnp
hlt
sarb
cmp
or
repnz
xor
mov
inc
fists
inc
cld
in
xchg
adc
mov
mov
out
sahf
ja
aam
aad
xor
icebp
or
mov
sub
or
mov
mov
or
dec
lock
lea
sarb
loope
bound
and
sbbl
test
imul
sbb
lds
push
jae
out
pop
cmc
push
dec
mov
push
repz
ds
cmp
add
cmp
xor
fidivrs
aas
push
stos
push
rcrb
dec
inc
or
jecxz
jb
hlt
mov
shll
in
jbe
imul
ret
pop
jae
push
repnz
inc
xchg
ret
sbb
dec
pop
mov
je
xchg
sub
push
mov
mov
push
pop
sub
mov
outsl
xor
faddp
cmp
loope
push
or
xchg
sub
sahf
fildl
or
cltd
mov
lods
sub
and
jae
push
lods
mov
xchg
push
imul
mov
ret
movsl
mov
out
jno
cld
inc
sbbb
jo
xor
push
sbb
inc
xchg
push
and
push
dec
xchg
mov
call
pop
add
fs
push
sbb
inc
fwait
rcrl
fdivs
scas
push
xchg
jge
cs
lea
clc
pop
movsb
and
sbb
das
pop
xchg
insb
daa
cltd
js
mov
xor
ret
movsb
sbb
or
ficomps
pop
adcb
jg
jmp
xchg
aas
or
call
aas
out
call
mov
in
mov
je
mov
xchg
sbb
out
insl
jnp
repnz
clc
lds
xchg
xchg
cmp
jg
sbb
arpl
push
sub
add
adc
cltd
scas
dec
pop
sub
sahf
cltd
aaa
lcall
clc
lods
sub
jl
daa
into
sbb
mov
mov
xor
stos
sbbb
add
xchg
in
add
mov
loop
aam
mov
mov
js
sub
push
lfence
sub
in
push
lds
lock
loope
cld
out
mov
xlat
mov
and
mov
in
or
xor
mov
adc
popf
scas
sbb
mov
sbb
dec
aas
xor
mov
hlt
mov
sarl
xchg
outsl
cwtl
je
stc
and
in
sbb
ficomps
push
aas
push
xor
bound
repz
les
cmpsl
mov
pusha
inc
fsubrp
adc
pushf
cmp
in
push
popa
and
scas
and
dec
mov
js
cli
push
jmp
jp
push
call
testb
cmpsl
sbb
daa
scas
or
jmp
xor
xor
jmp
stc
jp
in
sub
sub
inc
sub
jb
lret
in
cmpsb
lds
xchg
mov
daa
std
adc
inc
dec
adc
pushf
dec
mov
divb
jne
and
jne
xor
aad
stos
and
jge
outsb
imul
mov
scas
out
xor
xchg
push
shll
mov
or
inc
mov
sbb
pop
add
mov
push
pushl
repz
dec
out
pop
push
cs
ds
jl
in
xchg
jg
and
lahf
add
daa
adc
imul
pop
xor
xor
and
rcll
cwtl
push
je
mov
rcrb
test
or
aaa
fs
std
sub
jbe
pop
or
call
lcall
jmp
add
cmc
in
sbb
daa
imul
jecxz
push
and
nop
cwtl
xor
js
inc
jns
cmp
xchg
sub
je
mov
pop
sbb
loopne
out
repnz
xchg
aaa
repnz
je
ror
sbb
mov
jecxz
packuswb
out
lds
das
out
cmp
in
ja
mull
fstps
repz
sub
mov
aaa
push
stos
lret
jns
hlt
pop
inc
adc
push
xchg
test
adc
adc
arpl
push
ja
js
es
and
cmpsl
adc
jmp
mov
mov
inc
mov
dec
jb
mov
or
aam
jp
jae
push
cmp
pop
je
xor
scas
add
jmp
outsb
mov
xor
xorl
stc
cmp
mov
loopne
iret
and
jl
icebp
ret
test
mov
cmp
fstps
mov
jo
mov
sbb
roll
adc
mov
ja
push
je
shr
dec
mov
lcall
mov
lods
jo
inc
cmc
jo
or
lds
jnp
icebp
in
movl
jno
notl
outsb
pop
xor
idiv
or
cmp
cmpsl
in
xchg
or
arpl
push
stos
jmp
jp
mov
cmc
cmp
loop
dec
mov
pushf
jne
mov
push
in
lahf
lcall
sub
lret
flds
sbbb
push
aad
inc
iret
arpl
inc
push
xor
fstpt
sub
stc
ret
in
mov
cld
jb
jg
push
cmp
cs
and
jle
push
shl
mov
push
xchg
andl
pop
ja
jno
jo
cmp
cwtl
xor
cmp
or
push
xlat
jo
out
test
mov
adc
lret
int
dec
pop
mov
imul
inc
adc
dec
pop
push
sbb
into
mov
xchg
dec
repz
xor
cmp
js
orl
lock
in
pop
mov
xor
jne
jg
xchg
mov
or
stos
gs
mov
stos
sub
mov
je
test
jecxz
mov
mov
mov
hlt
push
push
shll
sub
xlat
push
pop
mov
scas
push
stos
cmp
pusha
je
dec
add
cmp
sub
mov
cmpsb
insl
pushf
fwait
orl
sub
add
lret
cld
mov
gs
enter
or
mov
inc
jb
xchg
into
cmpl
data16
jmp
pop
das
clc
jo
leave
test
orb
movsl
leave
and
fsubp
xor
sahf
sbb
push
and
pushf
mov
loope
test
in
cld
mov
leave
outsb
push
mov
push
or
inc
in
mov
mov
in
xor
fcoms
mov
jecxz
stos
out
lock
lcall
sbb
mov
ffreep
xchg
imul
push
out
data16
negb
sbb
imul
pop
and
leave
daa
cmpl
jg
add
iret
inc
pop
scas
hlt
test
xor
cltd
jmp
or
ja
pop
mov
orb
rolb
popf
in
test
push
vxorps
xor
dec
cli
test
lds
imul
out
aas
jmp
jl
sti
int3
loopne
ds
sub
sub
xchg
subl
hlt
sbb
pop
xor
lret
push
add
dec
sahf
lret
sti
lret
outsb
mov
dec
pop
dec
add
inc
mov
push
jo
stc
sbb
test
push
sbb
jb
idivb
int
mov
aaa
mov
jbe
gs
mov
push
pop
in
mov
mov
mov
lret
movsbl
hlt
or
fstpl
aam
sbbb
lahf
jb
imull
leave
iret
jbe
testl
mov
es
insl
mov
lret
inc
movsb
mov
and
mulb
mov
cltd
mov
shrb
mov
xor
jp
into
ret
xchg
xchg
inc
xlat
jp
fucomip
cltd
mov
fs
cmpsl
test
leave
mov
loop
mov
fnsave
dec
or
push
test
sbb
dec
into
test
stos
jle
xchg
xor
nop
sbb
cli
sbb
jnp
arpl
pop
dec
xchg
ror
dec
inc
rcr
out
mov
jne
mov
sti
and
cmpsb
test
jg
pop
cmp
xor
pop
imul
or
repnz
clc
lcall
in
imul
lcall
ret
mov
jmp
pop
pop
sub
hlt
std
and
mov
sub
mov
mov
lahf
push
cmp
nop
jp
cmp
mov
xor
xor
loope
inc
xor
mov
fistpll
ret
shl
jo,pt
fsts
addr16
mov
cmp
scas
xchg
jbe
out
or
aaa
xchg
xacquire
push
mov
pop
sbb
out
lds
int
inc
pop
imul
push
mov
jl
dec
jmp
xchg
inc
cltd
lret
pop
push
insl
out
popa
setbe
mov
xor
sbb
and
sarb
sbb
insl
adc
sub
repz
mov
cmp
pop
mov
mov
mov
stos
imul
enter
xor
ljmp
pop
cmp
stc
nop
push
mov
adc
arpl
mov
test
inc
xor
int3
jb
xorb
sysenter
push
out
cmpsb
scas
clc
push
add
lahf
leave
dec
add
repnz
cwtl
inc
sbb
push
push
aam
add
mov
inc
fdiv
cld
cmp
test
scas
dec
insb
jbe
add
push
mov
inc
or
jne
lret
outsl
mov
lods
lea
loop
popf
fs
cmp
pop
xchg
add
fsubrs
jle
rorl
out
das
cmp
pushf
and
push
mov
std
lds
xlat
or
xor
stos
jp
aam
inc
or
push
mov
jge
fnstcw
lock
push
mov
sbb
or
lea
mov
pop
inc
scas
dec
gs
mov
xor
lock
jmp
mov
cmp
xchg
out
movsb
movsb
mov
jecxz
lret
mov
test
adc
lods
jle
sbb
mov
int
jl
and
iret
das
dec
xchg
cli
vaddpd
cmp
fdivrs
mov
lock
jl
pop
or
cwtl
sub
cmp
pop
xchg
sub
test
dec
cwtl
lret
jl
sub
sbb
xchg
xchg
insl
add
push
leave
addr16
lock
addr16
or
xor
cli
xor
xchg
loope
jg
mov
or
xchg
push
das
test
sub
ret
and
xchg
pop
lret
push
repz
push
add
fs
mov
xorb
dec
pop
out
pop
inc
xchg
cs
cmp
fisubrl
in
push
push
sub
fwait
out
mov
iret
sbb
jmp
repnz
jbe
dec
jae
popf
out
pop
decl
or
jmp
dec
test
pop
cmp
mov
lea
sbb
jns
push
adc
dec
push
adc
jecxz
int3
nop
ljmp
pop
mov
stos
iret
push
stos
xlat
fmuls
adc
ficompl
add
sub
mov
add
jp
jecxz
xchg
jg
lret
push
rep
fnstsw
jbe
jle
mov
aad
roll
xor
mov
dec
sub
cmp
in
dec
pop
or
adc
out
xchg
inc
sub
cmp
xchg
pop
dec
mov
or
adcb
jo
pop
fmuls
or
mov
shlb
sbb
out
mov
mov
cmpsb
cli
xchg
imul
dec
push
subl
pop
xchg
andl
mov
cmpsl
and
sahf
cmc
push
lret
aas
out
lahf
leave
jl
mov
shlb
cmp
or
test
xchg
out
dec
xchg
mov
lret
xor
mov
or
cmp
aaa
cld
cmc
subl
mov
cli
movsb
stos
pop
push
xsave
enter
sti
dec
sub
add
fs
test
rcrb
and
jle
add
mov
sub
sub
push
dec
xchg
sbb
xor
icebp
push
sub
lcall
fisttps
sub
sbbb
inc
mov
cmpsb
fisttpl
mov
shl
cli
or
xchg
mov
fwait
aas
pusha
or
inc
mov
fstpl
in
out
xor
data16
and
push
cmp
sbb
or
push
xchg
pop
and
scas
mov
cli
push
lgs
mov
adc
and
cmc
test
push
jle
push
inc
int3
leave
lods
push
xor
in
cmpsb
dec
mov
sbb
ds
push
pop
and
push
movsb
xor
jo
xchg
shl
movsb
xor
xor
sub
sbb
inc
stc
jmp
ret
lods
mov
inc
inc
jecxz
pop
pcmpgtd
sbb
cmp
inc
loopne
daa
cmpsb
lcall
pushf
push
stos
mov
push
sbbl
icebp
jmp
inc
adc
push
or
jge
lcall
dec
add
xor
xchg
inc
or
insl
mov
and
cmp
mov
jo
outsl
loope
xorl
jbe
pop
xor
push
inc
mov
mov
jge
testl
or
leave
aad
push
or
sbb
pop
add
cmp
mov
and
sahf
das
cmpsb
lods
lea
addb
fcompl
in
push
cmp
insb
stc
jg
js
imul
test
std
ss
pop
cmp
cmp
jle
mov
dec
cmpsb
int3
xchg
ret
mov
insb
imull
mov
pop
nop
pop
and
bswap
arpl
or
jnp
sahf
jg
aad
add
gs
push
adc
mov
jae
pop
lret
mov
es
xchg
lcall
pop
mov
inc
xchg
call
movsb
lods
adcb
push
mov
int3
mov
xor
mov
mov
aas
xor
mov
or
cmc
add
mov
hlt
jns
xlat
mov
xor
divl
sub
adc
jmp
sub
sbbb
pop
push
push
pop
inc
inc
ds
and
mov
dec
adc
push
lds
jns
push
into
sbb
popf
data16
lds
aaa
sbb
adc
inc
ffreep
mov
sbb
ss
dec
fs
dec
push
cld
mov
or
stos
xchg
adc
push
mov
cmp
jbe
or
lcall
rorl
cmp
out
andb
cmp
pushf
cli
js
inc
pop
lret
push
push
sbb
fimull
subl
mov
inc
mov
cltd
js
dec
fsubp
mov
cmp
lahf
jmp
mov
jg
mov
addr16
xor
sbb
test
mov
dec
in
xor
dec
sbb
pop
dec
rcrb
sbbb
push
and
ret
xor
sub
and
leave
dec
fsubrl
sbb
loopne
push
push
in
mov
icebp
and
les
fld1
sub
push
mov
leave
dec
adc
and
sub
loopne
cs
adc
adc
test
sbb
sbb
ficoml
fbstp
push
jbe
dec
mulb
mov
fsts
fstl
orl
cmp
lods
jge
jle
out
test
xchg
and
pop
mov
inc
push
repnz
dec
push
xchg
xchg
aaa
sti
mov
xor
pop
cmp
fistl
cld
or
pop
xlat
sub
leave
sbb
adc
and
mov
add
mov
popf
mov
cld
mov
inc
orl
xorb
pop
pop
cmp
cmpsb
aaa
sbb
or
pushf
pusha
xor
ret
pop
insb
adc
ds
pop
or
pop
pop
xor
xchg
xor
not
lods
imul
xor
mov
test
or
stc
cld
inc
mov
loopne
inc
push
dec
mov
and
and
ret
cmpsb
pop
movsb
jno
pusha
xchg
pop
adc
ds
iret
movsb
les
add
dec
test
out
jmp
cmc
cmp
jg
mov
out
mov
addr16
inc
and
pop
lret
in
push
mov
sarl
push
sbb
imul
sbb
pushf
out
push
mov
adc
lds
sbb
cmp
cmp
and
ret
jne
shrl
xorb
repz
stos
cld
adc
sub
dec
out
mov
pop
jge
ljmp
test
xchg
lret
push
adc
mov
and
dec
mov
test
rclb
lods
into
push
jle
bnd
loop
ret
add
repz
lods
jg
sub
ret
sub
sub
jbe
sub
xor
lea
mov
inc
or
mov
jp
mov
lock
push
dec
sub
stos
cmp
cmpsl
and
test
push
mov
lret
add
gs
stos
xor
pop
mov
fs
mov
popa
test
cwtl
lods
fs
sbbb
jo
mov
xchg
push
push
jno
add
ds
sub
movsl
mov
or
pop
xchg
adc
push
xor
arpl
jbe
fsub
sbb
xor
scas
jno
jecxz
leave
loop
jb
loope
in
cwtl
dec
bound
pop
fisttps
ds
push
ss
enter
dec
cld
repz
sbb
pop
push
and
and
dec
mov
add
mov
xorb
push
cli
iret
popa
fbld
add
je
loop
test
cltd
repz
pmuludq
push
ret
scas
mov
xchg
inc
fdivr
popa
outsl
xor
mov
js
lock
stos
shlb
mov
xchg
ret
into
fstpt
test
pop
jae
bnd
adc
pop
loope
fsubl
xor
add
mov
jl
mov
push
push
and
scas
push
mov
movsl
adc
dec
int
scas
mov
adc
shlb
jmp
dec
aad
mov
xchg
cwtl
movsl
xchg
xor
add
push
ljmp
arpl
sub
add
fcoml
test
pushf
imul
aam
push
mov
mov
jbe
fwait
and
push
movsb
shll
fcoml
fwait
imul
into
insb
pop
leave
or
lahf
popf
lock
shrb
cmp
adc
insl
ja
scas
ror
mov
adc
or
xor
insl
aad
add
dec
imul
mov
sbb
mov
and
enter
loop
xor
and
sarl
sti
fs
sbb
adc
jle
and
out
cmpsb
add
hlt
out
xor
pop
test
mov
mov
rclb
push
xchg
enter
xor
or
mov
sbbb
and
lret
int3
insl
xchg
mov
js
mov
sbb
push
cmp
and
mov
loopne
imul
pop
lods
cmpsl
xchg
cltd
mov
xchg
bound
xor
ret
pop
adc
mov
sub
push
cmp
mov
cmp
sbb
xchg
adc
add
outsl
and
ja
add
enter
ds
and
sub
je
fistpl
mov
jbe
in
lcall
push
iret
repz
push
pop
loopne
call
sbbl
xchg
insl
lea
js
jnp
mov
and
cmp
fbstp
push
dec
lahf
neg
adc
pop
mov
pop
pushf
test
stos
xchg
cmpsb
stos
sub
mov
push
sbb
jg
stos
cmpsb
pop
shl
jnp
mov
test
popf
push
sbb
mov
mov
pushf
mov
outsb
pop
pop
jo
jo
fstl
cmpsb
fimuls
mov
xchg
ficoml
xor
and
int3
mov
clc
mov
pop
cli
pusha
call
repz
push
imul
cmpl
data16
iret
mov
loope
mov
adc
pop
jecxz
sub
mov
cmpl
inc
jae
mov
or
cmp
xor
lods
xchg
mov
imul
lret
fdivrs
stos
lock
mov
aam
cmp
pop
add
test
adc
dec
or
inc
imul
shll
push
shrb
arpl
fimuls
push
leave
fwait
repz
sbb
popf
dec
stos
xchg
mov
scas
cmpsl
test
ja
dec
bound
in
ja
jno
jne
mov
inc
sub
stos
xor
repnz
inc
jmp
inc
xor
mov
jg
mov
stos
into
cmpl
push
loope
pusha
cmp
cmp
shl
lahf
sahf
icebp
mov
in
addl
or
or
xor
inc
outsl
arpl
sti
sub
and
cs
clc
fbstp
imul
shll
pop
push
lret
call
push
jno
sub
stos
daa
ret
sbb
icebp
clc
mov
movl
cmp
or
lods
xor
push
pop
jno
stos
pushf
dec
push
popf
sbb
lods
roll
insb
mov
mov
pusha
int
aaa
pop
pop
into
sti
pop
xchg
fwait
rorl
push
pop
dec
xchg
xor
inc
mov
lret
or
inc
sarb
lds
movsb
adc
sbb
mov
and
xchg
sub
call
test
mov
rcrb
jae
rep
and
js
push
push
inc
movsb
arpl
add
sub
aas
push
push
xor
stos
or
sbb
jmp
aad
clc
adc
mov
jmp
push
cmp
popa
and
idivb
inc
xor
ds
dec
ret
flds
movsl
repz
mov
inc
ud1
shufps
int3
rep
add
mov
push
mov
mov
orb
pop
out
jb
lret
adc
adc
dec
pop
movsl
push
pop
jns
neg
in
out
xchg
aas
insb
xor
push
mov
sti
mov
and
jae
cmp
and
pop
mov
out
lahf
sarl
lea
scas
into
imul
mov
insl
xchg
out
jp
mov
loop
fchs
into
pop
mov
push
push
gs
shl
out
adc
or
ret
loope
inc
mov
inc
mov
sbbl
xchg
sub
inc
lods
repnz
les
sbb
adc
push
cltd
dec
inc
popf
xchg
out
pop
and
pop
mov
stc
pop
jecxz
mov
cmpsb
lea
pop
inc
mov
xor
pop
add
cmp
lock
inc
into
imulb
push
inc
pop
xor
rcll
in
jmp
jmp
mov
cmp
scas
mov
cmc
adc
dec
lcall
sarl
sbb
daa
mov
addl
or
xor
xchg
xchg
imul
pop
sbb
ror
jg
and
stos
les
mov
test
or
mov
or
leave
xchg
ss
test
movsl
adc
cmp
xchg
cmp
jns
jb
pop
jo
inc
dec
jg
outsl
xor
scas
cmc
mov
enter
push
or
xchg
inc
gs
out
push
cld
mov
in
dec
sbb
jg
int
and
fsubrl
daa
mov
push
jle
movsl
aas
adc
pop
and
and
lods
repz
stc
jb
inc
jo
rorl
dec
push
es
push
push
loop
std
jecxz
pushf
popf
lock
mov
or
call
jo
std
add
sbb
and
jecxz
fs
repnz
enter
inc
outsl
add
popf
xor
push
aad
aam
or
into
adc
rcrb
cmc
aas
stc
adc
in
sub
inc
icebp
gs
jp
jp
in
mov
xor
shr
jle
hlt
pop
les
push
subl
pop
dec
jns
lret
and
ja
fbstp
push
xchg
push
xchg
or
xchg
jge
pop
xor
pushf
mov
int
sub
inc
jmp
xchg
xlat
mov
test
or
push
sbbb
lcall
repz
or
orb
pop
lds
cmc
jne
mov
dec
icebp
test
dec
es
imul
je
test
dec
dec
mov
out
push
dec
sbb
cmc
cmpsb
fs
mov
ficompl
into
add
xor
fists
mov
xchg
jl
aaa
out
cwtl
push
push
mov
xor
das
xchg
pop
add
sbb
push
stos
dec
aam
adc
mov
xchg
jnp
or
test
pushf
mov
lods
rcrb
pcmpgtb
cmp
add
les
inc
repnz
and
mov
cmp
inc
imul
leave
out
dec
ret
mul
les
mov
jae
popl
idivl
inc
or
sub
push
sbb
adcb
mov
lret
into
sarb
xchg
push
xchg
shr
loopne
aam
enter
imul
or
dec
test
int3
mov
jae
addr16
addb
adc
test
aad
and
fimuls
lods
addr16
xchg
inc
movsl
sub
dec
pushf
xor
sbb
lcall
out
push
push
int3
or
lods
es
and
sahf
push
dec
sbb
iret
add
adc
sbb
sbb
loop
inc
insl
leave
stos
and
fsubr
mov
and
mov
and
faddl
cmp
pop
lock
mov
mov
js
adc
aad
popl
shrb
mov
arpl
fidivrs
lods
xchg
idiv
dec
pop
cli
ret
jecxz
out
mov
and
dec
rcr
cmp
sbbl
fnstcw
cmc
loop
bound
sub
sub
sub
mov
rol
inc
jg
cli
push
xlat
add
mov
ret
jge
jl
mov
cmpsl
lods
fdivl
adc
xchg
pop
lea
in
sub
hlt
pop
fstl
xor
xor
js
jg
sub
sahf
int
movsb
sbb
push
ret
or
xchg
mov
sbb
adc
push
mov
pmaxub
sbb
add
sahf
push
in
cltd
out
jo
clc
sbb
jne
dec
bound
test
lahf
out
mov
mov
test
sbb
test
inc
test
aaa
scas
mov
out
fsts
jl
xchg
ljmp
out
sub
jle
jecxz
js
data16
and
mov
sub
push
aas
and
mov
push
jae
lahf
sbb
gs
xchg
push
or
or
adc
xchg
xor
pop
pop
mov
pop
pop
cltd
inc
fstl
push
jl
test
push
pop
mov
stc
mov
outsl
out
or
shlb
pop
mov
push
lods
cmc
inc
test
test
jnp
adc
or
aaa
jno
xchg
aam
inc
xor
popa
xchg
pushf
dec
xchg
loope
or
loop
dec
cld
sbb
mov
jae
xor
das
leave
jno
leave
push
ds
dec
movsl
pusha
fistps
outsb
sbb
add
push
mov
dec
mov
loope
mov
je
sti
imul
out
dec
xchg
inc
pop
sbb
push
jg
push
add
mov
mov
cmpsl
xchg
push
pushf
sbb
leave
pop
sub
adc
add
adc
mov
pop
inc
iret
xchg
jns
xlat
lahf
sbb
ds
cmpsl
jg
pop
mov
or
cmp
push
jg
dec
popf
xchg
aaa
dec
pop
push
mov
pop
dec
loopne
xchg
ds
or
push
adcl
in
test
cmp
and
divl
fstps
cld
xchg
clc
ret
aas
push
jne
popa
sbb
out
adc
lret
aad
or
xchg
stos
pslld
inc
add
sahf
les
in
inc
popa
adc
mov
xchg
pop
aad
ss
hlt
jg
push
jnp
mov
cli
push
int3
out
or
das
aas
nop
mov
xchg
add
dec
inc
pop
dec
cmpsb
fldenv
lea
repz
aad
or
jno
loopne
mov
mov
inc
lea
jle
add
or
ljmp
sub
push
inc
gs
mov
aad
bound
stc
sub
xor
lods
push
or
and
lahf
sub
or
call
enter
in
pop
adc
sbbb
sub
mov
push
inc
pop
adc
xchg
inc
enter
fildll
sbb
je
pop
jns
fnstenv
in
mov
lret
call
pop
fstp
add
nop
rcll
mov
fldenv
mov
lods
or
xchg
lret
sbb
mov
and
jne
inc
mov
scas
lds
pop
dec
adc
or
dec
jl
push
scas
adc
cmp
popl
cmpsl
jae
ret
add
pop
sub
adc
popa
ror
push
repz
pop
lcall
mov
mov
sub
pop
push
cmp
dec
cltd
movsb
mov
and
and
fcomip
test
scas
push
mov
inc
push
mov
shlb
fmull
dec
mov
inc
sub
sub
mov
cmc
js
divb
ret
inc
pop
in
bound
filds
or
in
mov
mov
jb
lahf
xchg
nop
pop
iret
dec
xchg
cltd
cmp
push
mov
jp
icebp
jnp
mov
ds
aam
mov
movsl
sbb
jle
inc
test
adc
sahf
pop
xchg
imul
cmpsl
push
xlat
lods
out
pop
jo
cmpsl
dec
gs
lret
test
or
insb
enter
outsb
dec
mov
mov
cmp
mov
cmp
push
jge
fiadds
shll
fs
jmp
push
and
loope
inc
outsb
addr16
out
insb
mov
arpl
mov
jno
and
in
sbb
sub
xchg
xchg
das
decb
movsb
mov
lods
sub
mov
mov
jnp
xor
dec
popa
fistpl
gs
shl
push
mov
out
lret
out
jbe
jmp
xchg
or
sar
pop
mov
push
jmp
lds
or
and
jne
push
inc
popl
pop
dec
or
ja
jge
incl
pop
push
fsubrl
aam
adc
jp
inc
das
pop
sti
add
sahf
mov
clc
sbb
xor
add
mov
pop
add
divl
test
stos
and
push
pop
pop
or
fistl
ret
repz
es
insb
and
jle
stc
or
lcall
popa
lods
xchg
push
in
repnz
movb
out
repnz
and
push
add
dec
gs
jmp
int3
movsb
add
repnz
fbstp
imul
mov
jb
pop
jg
cmp
jns
pop
dec
xchg
in
cmc
aas
std
adc
cwtl
mov
lea
fnstenv
movsl
lahf
pop
lock
xchg
adc
pop
sub
mov
enter
jg
pop
pop
scas
enter
movsb
nop
xor
jbe
sub
repz
inc
dec
jle
jl
es
inc
mov
or
iret
xor
ds
push
xor
sub
vpermt2ps
fldenv
out
sbb
cmp
mov
mov
sar
xchg
jae
mov
lcall
sub
xchg
adc
stos
and
cltd
stos
sub
xchg
nop
mov
popf
int3
jae
into
push
ljmp
mov
pop
hlt
push
in
lods
mov
repz
iret
mov
test
push
outsl
jbe
or
shlb
jmp
pop
pop
add
xchg
sbb
jecxz
pusha
pop
scas
xor
scas
mov
test
pop
test
dec
sub
push
inc
mov
mov
icebp
cmpsb
pop
cmp
pop
stc
mov
jae
test
scas
mov
jbe
popa
jnp
cmp
test
leave
ror
jecxz
adcb
or
insb
test
jp
mov
jb
movsb
insb
jbe
mov
nop
mov
push
test
testb
pop
in
sbb
les
sbb
loopne
loop
mov
adcb
push
ds
adc
jl
jae
or
lea
lods
cwtl
mov
cli
xlat
repz
dec
xchg
andl
ljmp
in
mov
loopne
xor
out
cmp
in
fwait
jle
adc
shlb
sbb
imul
jnp
add
inc
pusha
xor
mov
stc
inc
xchg
pop
mov
add
aas
out
and
adc
rcl
inc
sub
jg
jo
mov
mov
je
jne
cmpsl
and
hlt
fstps
and
clc
jo
mov
cli
sahf
add
cli
roll
cltd
cmc
lcall
test
enter
xchg
je
stos
ja
filds
push
mov
dec
clc
dec
lcall
push
mov
lods
cmp
dec
pop
pop
je
xlat
cmp
sarb
outsl
inc
pop
cltd
sub
repnz
rclb
sub
xor
mov
inc
push
test
test
push
ljmp
xorb
outsb
mov
lret
inc
cmp
fisubrl
inc
loope
enter
fdivl
pop
cmpsb
fisttpll
or
mov
inc
jmp
dec
psubsw
xchg
and
test
xchg
rol
fcmovnbe
sahf
sub
or
sub
cltd
sahf
cld
iret
fstps
and
pop
and
arpl
dec
add
inc
add
inc
shll
sbb
js
add
mov
out
testb
dec
icebp
data16
mov
jmp
push
push
stos
jp
or
mov
lds
stos
shlb
test
xchg
push
in
add
xchg
mov
adc
mov
xor
cld
pop
outsl
aaa
stos
mov
fwait
test
jb
mov
xchg
jmp
scas
in
loopne
xchg
incb
push
sub
pop
or
lds
mov
ret
arpl
aam
fiadds
mov
adc
push
jo
or
jp
mov
mov
or
and
sbb
pop
xchg
pop
shll
pop
in
inc
andl
sub
cmpsb
cmp
out
pop
pusha
fldenv
in
inc
or
cltd
lods
lods
push
pushf
fcomps
fistl
mov
hlt
xor
mov
jg
fisttps
mov
dec
jb
jecxz
xor
mov
mov
test
lret
sub
inc
xor
out
cs
loopne
xchg
mov
sbb
sbb
mov
loop
gs
fs
dec
xor
shrb
inc
stc
dec
sub
out
inc
leave
add
jp
lea
fisttpll
leave
pop
sub
call
sti
fsub
pop
mov
push
adc
and
mov
mov
jp
shrb
mov
mov
mov
dec
and
dec
sarb
in
mov
pop
mov
lock
std
dec
xchg
xchg
enter
fmull
call
testb
into
push
cmpsl
mov
lret
mov
out
xchg
je
pop
sbb
addr16
aam
mov
in
pop
sbb
jnp
mov
fsubr
fisttps
mov
push
mov
push
aas
sahf
cmp
adc
xchg
les
sbb
mov
leave
arpl
mov
dec
push
into
lahf
imul
imul
test
negb
sbb
stos
test
push
adc
not
aam
leave
xchg
shl
imul
mov
jecxz
dec
iret
arpl
mov
or
test
sbb
lods
pop
jge
out
mov
and
in
not
jne
sbb
test
mov
mov
inc
insb
arpl
sub
add
jb
shlb
pusha
sub
cmp
mov
into
or
adc
dec
add
adc
movsb
mov
ds
je
or
aas
mov
push
in
add
jl
xor
popa
enter
push
cld
addr16
cmp
arpl
mov
cmc
inc
ficomps
mov
aaa
mov
in
xchg
clc
mov
iret
shl
adc
jns
xor
icebp
lods
dec
rcll
adc
shr
push
imul
sub
inc
push
rclb
out
or
cmc
mov
and
mull
addr16
cmpsb
iret
lret
dec
test
pop
mov
mov
stos
popf
lret
divl
adc
inc
incb
sub
test
test
pop
stc
lret
inc
cwtl
ret
dec
mov
cltd
es
outsl
and
fidivl
or
aam
mov
insb
lret
sbb
clc
cvtdq2ps
lea
and
push
mov
mov
cmp
and
lods
ss
add
in
jl
sti
sahf
and
xchg
xchg
dec
xor
xchg
or
jbe
push
or
insl
adc
out
cmp
jmp
sub
push
or
ret
clc
mov
imul
ds
cmp
inc
mov
sarb
xchg
test
xor
addb
fs
jno
mov
xor
out
xor
fwait
sbb
adc
sub
aaa
int
in
push
and
movsb
movsl
jae
fcompl
into
mov
clc
jge
int
into
int3
xorb
outsb
imul
lds
lods
je
jmp
adc
lret
cmp
hlt
ljmp
lret
je
xorb
mov
std
add
cld
xchg
push
mov
sbbl
mov
sbb
lea
xchg
xchg
ds
inc
fsts
mov
test
push
dec
insl
mov
cmp
mov
push
add
push
leave
nop
outsb
add
cmp
mov
inc
xchg
sub
in
test
jg
lods
in
push
pop
in
je
cmp
push
mov
mov
lcall
shl
pop
mov
fstl
sub
and
dec
repz
clc
int3
jo
pop
test
inc
xchg
inc
push
lret
aas
stos
imulb
out
ret
in
call
hlt
xchg
adc
pusha
cmp
cltd
pop
sbb
and
cmp
jp
out
cmpl
fisubrl
xor
jl
mov
push
pop
jge
sbb
popa
cld
or
fbld
jb
mov
insl
rcl
jns
test
ja
cld
cmp
and
adc
mov
adc
push
aam
inc
cmp
jmp
test
shlb
dec
ficoml
mov
jbe
cmc
push
xchg
push
shlb
push
or
repz
mov
and
sahf
and
lods
inc
mov
je
aad
add
sbb
or
mov
aaa
push
arpl
cmp
mov
cwtl
xchg
fwait
push
pop
ficoml
mov
mov
dec
mov
adc
inc
add
out
out
mov
jg
jl
and
cltd
push
mov
mov
mov
int
call
mov
in
mov
lock
xchg
and
inc
pop
adc
test
out
add
adc
sub
fidivrl
fs
mov
jp
jl
jp
and
add
and
dec
and
int3
sub
or
lcall
fcmovb
psubb
jns
lock
cmpsb
sub
mov
scas
stos
in
push
movl
sbb
icebp
jne
stos
or
push
fidivl
mov
push
fwait
mov
xor
add
add
in
negl
inc
mov
sub
sub
mov
sub
adc
fcmovnu
idivl
mov
scas
xor
xorl
into
xchg
into
mov
scas
cmp
mov
pop
outsl
mov
cmp
jecxz
out
popa
jno
iret
fcmovnbe
test
scas
scas
sbb
jle
cmp
ret
or
inc
mov
pop
stos
icebp
lea
rol
mov
and
sbb
insl
sbb
mov
loope
push
or
sahf
mov
iret
not
and
push
adc
sub
push
push
mov
pop
mov
stc
push
and
inc
out
dec
cmpsl
std
add
xlat
mov
stos
inc
push
inc
or
mov
cmp
xlat
sarl
pop
pop
cmp
hlt
xor
cmc
fs
or
adc
jae
jecxz
imul
mov
cmc
fstpl
shll
pop
lods
movl
mov
xor
add
add
insb
lock
xor
mov
cltd
loop
nop
xchg
dec
jmp
out
out
repz
jbe
cs
imul
jmp
push
mov
stc
int
or
adc
out
push
ret
mov
sub
or
cld
sti
loop
leave
int
push
jg
lcall
inc
pop
int3
push
push
and
fsubrl
pop
ret
aam
lahf
movsl
jmp
and
sub
inc
xchg
inc
loope
mov
in
in
test
jle
ds
fstl
inc
mov
adc
push
mov
stos
mov
push
jl
packuswb
test
jmp
imul
shll
fistpl
test
sub
out
lock
xor
aaa
sbb
cmpsl
je
inc
fldl
mov
pop
mov
lods
out
and
cli
mov
push
sub
sbb
dec
mov
jae
enter
ficoms
and
mov
cmpb
mov
jle
jnp
inc
pop
sub
inc
mov
das
lds
inc
sub
mov
cs
stos
push
sub
mov
fucom
xchg
and
test
mov
fcomip
fcoms
cs
lcall
add
pop
js
add
mov
dec
aam
pushl
jmp
add
imul
sub
lret
xchg
push
jl
sbb
jecxz
jmp
sahf
fimull
pop
gs
and
and
cwtl
neg
cli
mov
add
aaa
cmp
pop
jnp
stc
or
int
cltd
cmpsb
je
mov
popa
leave
dec
mov
in
fs
hlt
dec
bound
call
insb
daa
pushf
pop
lods
add
hlt
rol
jmp
add
aad
test
popf
sbb
icebp
pop
push
addr16
pop
outsl
ds
lock
test
aas
test
sub
scas
testb
bound
mov
pop
inc
roll
es
and
iret
out
ljmp
ja
add
xchg
out
mov
cmp
rolb
add
mov
popf
fdivp
shll
jnp
mov
cmp
dec
jae
dec
xor
addl
push
or
frstor
cmpsb
icebp
popa
inc
fnstcw
or
mov
inc
adc
outsl
out
cmp
cwtl
push
cmp
loopne
mov
push
inc
mov
pushf
shrl
pop
bound
mov
or
dec
js
xor
mov
ficomps
dec
iret
xor
jmp
push
sbb
mov
jae
std
out
outsl
dec
clc
and
ficomps
mull
mov
sbb
out
sahf
xchg
insb
shlb
and
inc
xchg
dec
insl
push
jnp
sbb
adc
and
sti
mov
adc
ret
xchg
fld
test
test
hlt
jo
dec
lock
in
mov
dec
jp
sub
lret
xchg
sbb
xchg
sbb
inc
out
and
outsl
mov
movsl
ja
pop
dec
movsb
jl
cmp
dec
dec
push
mov
mov
mov
ja
jo
jne
scas
ss
hlt
ret
sahf
sbb
fisubrs
aad
add
cwtl
mov
cmpsb
xchg
lret
cmp
je
nop
add
leave
jno
ror
push
mov
sbb
add
push
testb
sbb
mov
enter
into
inc
inc
gs
shrl
scas
mov
sbb
scas
xlat
int
or
ljmp
adc
jg
pop
jne
xor
pop
in
cmp
mov
jbe
lcall
cmp
jl
fstps
popa
mov
xchg
push
push
loope
popa
and
or
hlt
xchg
call
sub
int3
test
loop
xor
sub
xchg
jno
call
mov
push
adc
and
dec
sub
call
movsb
mov
out
push
fwait
jae
ret
xlat
incl
ljmp
mov
inc
or
cltd
out
inc
mov
aas
and
movsl
push
pop
jp
adc
adc
cmpsl
jbe
popa
jg
sti
cmc
dec
sbb
popa
adcl
and
je
jbe
xor
pop
cltd
xchg
jmp
add
xor
outsb
rol
neg
fistpll
rcll
fsts
fcoms
lret
push
setae
xchg
push
mov
mov
bound
movsl
rolb
gs
add
push
mov
xor
notl
ss
in
aas
je
push
inc
movsl
imul
jae
mov
loopne
fisttpl
pop
addr16
push
mov
stos
sub
mov
sbb
dec
and
icebp
add
ds
bound
aam
aam
fildll
out
sbb
cmpsl
ja
fimull
arpl
cld
sahf
dec
sub
loope
aaa
in
aam
iret
mov
sub
or
mov
sbb
icebp
mov
int
sbb
xchg
jbe
jo
sbb
and
jecxz
iret
ret
in
inc
and
test
mov
enter
fwait
rolb
xchg
push
push
popf
movsb
push
mov
sbb
sbb
mov
inc
jmp
sbb
pushf
sbb
inc
adc
pushf
js
pusha
fldenv
jp
xchg
sbb
daa
jmp
mov
xor
leave
sar
xchg
mov
dec
xchg
adc
hlt
pop
inc
push
push
mov
pop
push
ja
or
imul
adc
adc
fs
mov
dec
faddl
push
and
data16
ret
es
mov
cltd
mov
sbb
sbb
inc
fisubl
jmp
pop
mov
xchg
rorb
cmp
and
out
aad
lret
sub
in
dec
inc
fisubrs
stos
das
sahf
inc
divb
inc
mov
push
mov
inc
loope
rcrl
pop
inc
out
lods
and
push
mov
pop
add
inc
cmc
xchg
xchg
inc
push
test
sahf
adc
fisubrl
jg
scas
cmp
jmp
lret
add
clc
outsb
pop
jmp
jnp
adc
xor
xor
lcall
xlat
aam
cmpsl
lods
inc
mov
fwait
sub
aam
xchg
fldcw
enter
rcrl
orb
repz
int3
cvtps2pi
aam
lret
icebp
lock
mov
sarl
cmp
aas
mov
fiaddl
mov
lea
xchg
jg
enter
xchg
jmp
gs
lcall
xchg
js
scas
or
sub
ficomps
stc
xchg
cmp
gs
push
clc
mov
fmul
and
inc
cwtl
sbb
jl
imul
jnp
inc
jns
daa
cmp
loop
pop
pop
pop
pop
mov
mov
fdivrs
cmp
out
mov
test
push
jae
dec
jecxz
jne
lds
mov
imul
repz
cmp
add
notb
inc
iret
xor
sbb
test
inc
loop
mov
pop
lcall
push
movsl
lds
cld
test
jb
mov
add
ds
mov
out
cwtl
shlb
adc
out
outsl
lcall
mov
iret
xor
push
mov
sbb
dec
and
sub
mov
lcall
add
push
adc
outsl
xorb
cwtl
cmp
enter
sbb
sub
pop
mov
ret
fld
aas
out
adcb
xchg
dec
cld
mov
into
add
scas
mov
lret
inc
inc
fdivr
sub
repz
rorl
fisttpll
jb
imul
mov
push
jo
jl
sub
lods
repz
pop
iret
bound
or
mov
int
pushf
mov
pop
and
leave
inc
jg
xchg
push
pop
dec
or
pop
dec
inc
xor
add
xchg
jg
or
mov
cmpsl
mov
insb
mov
mov
sub
leave
add
mov
scas
pop
push
inc
insl
sub
mov
adc
mov
xchg
mov
add
in
mov
jae
push
mov
push
lods
dec
dec
movsl
dec
movsb
call
dec
pop
and
jge
adc
fcomps
pop
cmp
fs
pop
mov
cld
cmpsb
test
daa
mov
mov
aas
inc
in
jo
or
lret
inc
arpl
adc
test
fldt
dec
ljmp
jns
jmp
push
dec
ret
push
mov
sub
enter
inc
jbe
dec
cs
push
lock
hlt
fmull
push
outsl
push
movl
ds
lret
mov
sbb
sbb
dec
push
mov
and
outsl
dec
ljmp
insl
iret
ljmp
lods
and
pop
ret
iret
lret
repnz
aas
jbe
xorb
dec
bnd
subl
sub
pop
outsb
push
aam
out
pop
pop
shrb
cmc
lds
sahf
or
sahf
sub
xor
jns
rcrl
aaa
or
dec
and
jl
rclb
fisubrl
loopne
out
loop
adc
out
popf
ror
or
or
rcl
int
movsb
jo
icebp
pusha
xchg
test
dec
add
les
mov
dec
sub
hlt
dec
leave
cmpsb
dec
jge
mov
push
mov
fnstenv
movsl
mov
jne
dec
sub
mov
adc
mov
xchg
cmpsb
pop
sub
clc
mov
cmp
push
push
ret
mov
jp
push
cs
cmp
dec
pop
mull
push
xorb
push
pop
lock
cld
pusha
subl
fistpll
mov
dec
mov
js
jg
push
mov
pusha
and
xor
jp
mov
fidivl
sbb
add
mov
jns
stos
xor
push
call
or
popf
jo
and
pop
push
imul
xor
sbb
mov
and
xor
or
imul
cmpsb
sub
shlb
cs
aaa
jl
ss
adc
add
stos
icebp
fdivs
call
pop
pop
push
dec
punpckhbw
cld
lcall
prefetch
test
xor
sub
es
movsb
pop
popa
jge
sub
xor
enter
rcll
cmp
xchg
sub
ljmp
inc
xor
orb
lods
fists
std
xchg
ret
add
shlb
cmp
cld
pop
and
shlb
mov
and
pop
clc
addr16
xor
lret
lods
pop
ficompl
xchg
pop
out
sbb
aam
cltd
and
jecxz
roll
arpl
xor
movsb
clc
lods
dec
inc
mov
or
int
or
nop
pop
pop
mov
shrb
sub
shrl
inc
jp
push
fildll
cmp
xchg
xor
xlat
jl
adc
into
adc
fdivrl
test
repz
lcall
push
aad
cld
fdivl
test
lods
or
int
pop
sbb
lahf
mov
sub
xchg
or
sub
test
stos
xchg
test
leave
adc
mov
mov
mov
cmp
loop
mov
ss
daa
mov
es
jne
push
push
leave
loopne
add
mov
leave
xchg
test
stc
call
fdiv
loopne
add
mov
mov
cmp
std
movsl
pop
jp
xchg
mov
movsl
inc
aas
out
pop
sahf
fsubrs
and
hlt
jle
popa
mov
repz
stos
arpl
fcmovb
xchg
inc
sbb
inc
jg
andb
ror
inc
rcrb
cmc
jge
xor
sbb
xor
adc
imul
jnp
xlat
jns
nop
loope
stos
popf
cmp
cwtl
pop
inc
out
stc
js
mov
xchg
xchg
and
inc
pop
adc
xchg
push
cmp
adc
rorl
es
xchg
push
pop
lods
outsl
int3
sbb
loope
das
test
pop
pop
test
pop
fnstsw
repnz
movsb
cli
outsb
je
dec
sub
jno
push
jl
int3
sti
rcll
sub
push
into
and
mov
aaa
and
xchg
and
out
pop
cltd
movl
shrl
mov
push
and
jg
pop
mov
push
aaa
pop
dec
xchg
adc
xchg
imul
fldl
adc
pop
dec
sbb
cwtl
lahf
movsl
inc
out
jo
jmp
outsl
shll
imul
fmull
lods
or
ds
fwait
xchg
and
xchg
mov
add
pop
inc
fidivrl
sub
shll
and
sub
push
bound
divl
pop
cmp
aas
lret
fidivrs
inc
adc
inc
or
or
cmp
lock
hlt
jle
das
push
sbb
mov
ljmp
mov
nop
add
jp
inc
insl
stos
xor
imul
repnz
rcrb
push
sbb
push
add
xor
push
imul
mulb
jb
cld
push
aaa
add
shrl
add
jns
jnp
mov
pop
or
cmp
mov
xchg
bound
jmp
xchg
jnp
test
int3
pushf
test
icebp
mov
inc
mov
or
imul
xchg
jae
add
pop
pushf
xchg
fstl
in
mov
in
push
out
pop
push
inc
and
jo
es
sbb
lret
movsb
dec
jmp
out
fstps
shrl
andl
mov
mov
push
mov
aad
xchg
sub
add
sbb
pop
nop
and
jmp
flds
out
mov
sarl
jnp
push
jmp
add
in
jns
das
mov
cli
mov
add
clc
xchg
rorb
jns
aaa
xchg
lahf
or
dec
icebp
into
pop
mov
xor
mov
dec
mov
adc
adc
ret
enter
call
mov
push
repz
iret
push
sub
syscall
cmp
aas
cld
decl
decl
test
jbe
mov
push
cmpsb
leave
test
xor
add
or
idiv
leave
mov
sbb
pop
insb
lea
push
cld
xchg
mov
outsl
out
test
or
test
int
ret
add
inc
pop
xchg
aas
push
adc
dec
loopne
sahf
lcall
pushf
repnz
adc
pop
jecxz
xchg
negl
inc
cmp
mov
sarl
icebp
push
cwtl
xchg
sti
xchg
pop
ss
imul
sub
sbb
mov
loop
pop
adc
mov
adc
inc
ret
add
mov
mov
fdivs
dec
arpl
cwtl
mov
aam
aas
mov
jbe
test
dec
icebp
dec
xchg
dec
shll
xchg
je
xchg
in
ficoml
iret
lret
int
nop
rcl
mov
add
cmp
cmc
add
daa
mov
or
pop
mov
stc
inc
xor
imul
cltd
mov
fistps
insb
call
pusha
add
shlb
jno
sbb
inc
push
nop
ss
lods
adc
push
arpl
insb
test
cli
and
ds
push
mov
push
and
outsb
mov
xchg
jnp
fdivl
push
jle
cld
repnz
lcall
sti
adc
jp
or
push
fcmovbe
xor
dec
cmpl
jl
outsb
js
dec
sbb
mov
inc
stc
fmull
xchg
stc
int
imul
xor
jl
cmpl
lahf
xchg
cmp
rorb
jne
gs
push
ds
lock
aas
dec
loop
lods
mov
cli
mov
jl
mov
sarl
rcrl
addr16
enter
push
add
lret
xchg
subb
xchg
mov
and
cli
lods
inc
fcmovne
pop
mov
push
sbb
jae
or
jne
and
jmp
mov
dec
cmp
cs
outsl
mov
lret
xchg
or
mov
popf
mov
outsl
or
pop
xchg
lea
push
cmpsl
and
mov
mov
sub
push
arpl
and
ret
inc
call
pop
mov
and
adc
popa
rorb
pop
adc
sbb
xchg
jne
lock
xchg
push
push
cmp
push
mov
push
insb
arpl
ds
in
mov
xor
pop
rcrb
and
sub
fs
pop
subb
dec
stos
sbb
mov
mov
aas
out
stc
nop
xor
push
pop
pop
sub
scas
in
pop
and
sub
jae
gs
push
addb
xor
pop
in
clc
rorb
and
xchg
xor
xor
sub
mov
das
inc
out
arpl
les
mov
inc
push
pop
dec
imul
movsb
jbe
shr
lret
xlat
movsb
pop
sti
loopne
enter
jle
in
pop
adc
mov
jmp
push
mov
dec
jecxz
push
ret
lret
and
push
push
enter
pop
or
les
arpl
sbb
out
movsl
pop
dec
or
xor
adc
imul
dec
add
xor
mov
shll
pop
pop
mov
cmp
cltd
insl
je,pn
push
frstor
rep
pop
repnz
sbb
lock
js
scas
idiv
pop
mov
mov
es
add
repz
gs
data16
push
movsb
jecxz
addl
sub
arpl
or
shlb
das
daa
in
push
sub
adc
dec
push
dec
fsub
mov
fstl
mov
pop
add
bound
ret
lahf
sub
in
mov
popa
js,pn
dec
rclb
jecxz
shlb
loopne
dec
push
lret
mov
sahf
dec
jecxz
xor
jo
mull
inc
mov
loop
inc
or
dec
aam
jb
dec
lods
lret
pop
in
nop
loopne
adc
outsl
mov
sub
aam
mov
filds
bound
daa
dec
mov
les
repz
mov
out
jl
fsubrl
jns
scas
pop
dec
cmp
adc
jecxz
and
jl
adc
mov
push
mov
and
sarb
mov
cmp
push
sti
dec
fisubrs
fxch
scas
out
ss
daa
push
pop
ficoms
pushf
push
fsubl
rorl
add
xor
cmp
jns
fdivp
sub
sub
mov
and
sarb
or
dec
lea
push
jg
icebp
adc
jb
lods
push
gs
test
adc
or
sbbb
inc
sar
int
popf
jo
or
int
push
loop
sbb
or
pop
dec
jmp
xorb
cmp
sti
jae
sbb
dec
xchg
inc
sub
add
addr16
fs
inc
mov
jnp
add
ret
ret
push
xor
shl
pop
fdivrs
sbb
add
add
punpckhbw
lds
imul
stos
xchg
inc
lock
sarb
jecxz
lcall
inc
dec
fidivl
pushf
aaa
jge
icebp
adc
fsubrs
sbb
aad
les
int
dec
push
test
enter
push
mov
sbb
xor
ret
mov
pop
das
sbb
int
mov
in
pop
pushf
cmp
sub
xchg
ljmp
mov
push
add
xor
movsl
push
cmp
mov
fdivrl
mull
inc
gs
push
push
xchg
push
cmp
sub
hlt
push
push
sub
dec
cwtl
pop
ja
xchg
out
mov
lret
or
imul
mov
or
fldl
lods
andnps
sub
and
outsl
mov
inc
aaa
push
sub
jne
push
add
rcl
add
jp
xlat
bsr
push
pushf
mov
dec
stos
negl
hlt
mov
cmpb
cmp
cli
and
es
enter
lock
int3
jecxz
push
cltd
pop
push
pop
jb
or
sti
lods
jecxz
sub
inc
js
sbb
fistpll
mov
dec
mov
push
fisubl
pop
push
repnz
int
movsb
and
pop
into
scas
jg
insl
cmp
into
je
movsb
outsl
movsl
rcr
sub
lret
sarl
inc
lods
mov
push
jg
mov
iret
movsb
cs
sbb
mov
cmpsl
mov
mov
or
daa
fcmovnb
addb
outsb
dec
loopne
mov
push
and
sti
pop
mov
add
mov
push
jo
jnp
loopne
ljmp
jbe
xchg
stos
jns
adc
mov
ret
xor
inc
mov
js
push
jmp
lcall
aas
cmc
push
adc
jb
jmp
push
push
add
daa
mov
or
subl
sti
adc
stos
mov
push
insl
push
pop
mov
or
dec
xchg
cld
scas
and
push
mov
outsl
mov
adc
xchg
cmpsb
jmp
addr16
or
inc
cmp
adc
ret
push
xchg
mov
leave
dec
jmp
push
bound
int3
rorb
ficoml
pop
push
jae
cmp
pop
outsb
add
pop
cwtl
cmp
ljmp
fidivrs
and
adc
stc
xor
inc
push
xchg
repz
jl
outsb
ret
and
cld
shl
minps
and
cld
loopne
iret
jb
inc
mov
mov
jns
es
fbstp
cltd
jae
cmp
jmp
ret
aam
jl
fildl
hlt
adc
inc
idiv
mov
cmp
mov
aad
or
or
cmp
pop
movsb
shrb
mov
pop
push
xor
nop
aad
mov
cmpsb
shll
adc
add
pop
ret
in
and
hlt
sbb
das
xor
cmp
lods
scas
lds
adc
test
aam
mov
xchg
testb
pop
push
lcall
dec
lds
test
jl
push
ljmp
pushf
data16
xchg
insb
inc
xchg
inc
cmp
test
ja
arpl
ja
subb
insb
icebp
cmp
insb
arpl
and
xor
loop
ljmp
or
pop
arpl
pop
notl
push
sub
push
mov
inc
cmpb
sbb
stos
sub
daa
sub
adc
loopne
adcb
adcl
aas
fmul
roll
cmp
xchg
aad
xor
jno
aad
mov
xor
jmp
enter
aas
jg
cmc
push
adc
mov
out
cmpsl
dec
les
js
ljmp
push
push
das
sbb
xlat
out
push
imull
rorb
rol
aad
aas
or
mov
fcomi
dec
jnp
in
or
inc
xchg
rcrb
ror
adc
push
jns
adcb
and
repz
mov
push
dec
or
dec
loope
andb
or
xchg
gs
stos
addl
xchg
cs
pop
stc
push
push
and
pop
call
cmp
loop
dec
sbb
jecxz
mov
repz
fimuls
push
adc
cld
pop
scas
lret
add
and
lds
xchg
sbb
sbb
xchg
das
leave
addr16
dec
data16
pushf
mov
cld
pop
test
rolb
insb
in
xor
push
xchg
cs
bound
sub
nop
pop
ljmp
jae
sub
xor
add
fwait
xor
movsb
dec
lcall
and
xchg
ja
dec
lods
push
nop
icebp
out
adc
jg
push
jg
dec
aaa
pop
add
mov
push
jb
iret
push
jae
xchg
es
push
pop
in
lea
js
jg
and
xor
lea
out
jge
push
add
add
lea
movl
xlat
push
lcall
mov
stos
dec
js
popa
mov
adc
lret
dec
mov
sub
ss
mov
ret
call
mov
aad
push
add
lods
adc
stos
jg
pop
mov
bound
push
testb
or
js
dec
repnz
or
sub
movsl
add
adcl
addr16
ret
mov
sbb
cmp
xor
mov
cmp
mov
add
xor
jl
movsb
pushf
pop
dec
mov
jg
cmp
mov
ljmp
bound
lea
mov
cs
xor
xchg
das
aam
or
pusha
dec
or
sub
inc
stos
adc
mov
sbb
fldenv
pop
je
andb
lods
pop
push
push
cmp
jge
xor
mov
idiv
rorb
fstl
iret
sahf
adc
pop
test
pop
mov
pop
jae
jne
xchg
sub
js
pop
incl
int3
sub
jmp
mov
cmp
xchg
xor
adc
and
xchg
cmp
xchg
cmp
add
clc
cmp
cltd
loop
mov
mov
popw
xchg
in
sahf
aaa
mov
fmuls
jbe
dec
ficompl
push
gs
cmp
ds
and
sarb
xchg
xor
negl
aad
sub
fwait
add
cld
sbb
push
jl
pop
jecxz
adc
inc
pop
sbb
gs
ret
cmpl
sub
bound
ljmp
sub
xlat
and
roll
movsl
pushf
lods
sbb
push
imul
outsl
ds
sub
sbb
or
call
int3
sub
mov
orb
sahf
std
fs
and
outsb
fistpl
jne
cmp
out
aad
mov
jb
push
pop
fidivs
out
inc
mov
adc
xchg
int
add
pushf
andb
scas
test
cli
mov
or
imul
push
add
rorl
or
icebp
cmp
addr16
push
mull
jno
xchg
sbb
daa
dec
repnz
jns
push
adc
sub
cmpsb
bound
cmp
mov
mov
mov
out
cmp
xchg
iret
cmpl
inc
loop
fldt
movsb
xchg
int3
sbb
push
sub
popa
ret
cwtl
adc
mov
test
call
xor
sub
fisubl
mov
cmpsb
cli
call
mov
aad
xrelease
stos
push
fwait
mov
arpl
out
xchg
lret
pop
xchg
push
test
sbb
adc
sub
test
sub
mov
pop
push
hlt
xor
js
and
ret
jmp
arpl
jl
lock
lods
ss
dec
mov
push
sbb
lret
icebp
pop
loopne
sub
inc
mov
dec
dec
imul
pop
stc
xchg
frstor
dec
cmpsl
mov
and
pushf
test
pop
mov
bound
adc
mov
js
sti
mov
jbe
scas
stc
adc
popa
mov
fidivrl
pop
push
pop
inc
movsb
adc
dec
fwait
lcall
test
adcl
jns
adc
das
fistps
lds
outsl
shl
test
imul
fstpt
sub
in
sahf
mov
push
and
jge
lret
pop
or
mov
pop
xorl
jns
xchg
enter
fs
add
ss
lock
je
sub
add
lret
add
mov
mov
jbe
cmpsl
dec
shlb
adc
cmp
imul
lret
divb
loop
sbb
xchg
ret
fists
xor
das
dec
mov
add
stc
add
xchg
leave
mov
cmp
xchg
sahf
pop
cmp
mov
scas
inc
jmp
lds
out
das
cmp
lahf
xchg
fsubrs
add
ljmp
pop
shrb
sub
jle
mov
les
test
cmpsl
data16
pop
pop
shrl
mov
sub
bound
add
xor
rorb
ds
in
mov
cmp
ret
cmp
jb
mov
out
mov
mov
in
push
cmc
mov
aaa
rorb
lods
lock
dec
pop
scas
arpl
xchg
lret
jne
les
stos
xor
inc
int3
and
imul
xchg
dec
ret
lods
inc
cwtl
movsl
sub
insb
andl
mov
fbld
adc
popfw
sbb
cmp
jle
hlt
inc
or
pop
cmp
andl
mov
mov
jmp
lds
test
scas
les
xchg
mov
mov
jle
scas
sahf
out
loop
sbb
pop
pop
fidivl
push
pop
stos
xchg
sub
add
pop
fsubl
jmp
clc
ret
jge
sbbl
cmp
sbb
sbb
jge
sub
inc
dec
mov
fnsave
dec
add
jne
lods
jns
mov
ficompl
sbb
popf
and
pop
fwait
imul
js
loope
cmp
push
popa
insb
and
push
mov
pop
call
and
pop
lods
sti
sarl
lahf
mov
out
cld
rcrl
rcrb
and
push
xchg
inc
jns
sbb
fldl
mov
scas
sub
insb
mov
neg
enter
sti
inc
mov
mov
jnp
dec
sbb
popf
sbb
jmp
cli
add
adc
mull
shll
adc
mov
push
mov
ret
aaa
push
cmpsl
mov
outsl
daa
sub
push
sub
xchg
jb
icebp
or
mov
or
adcl
adc
je
std
pop
mov
dec
mov
push
inc
and
mov
lret
mov
xor
nop
push
rorb
pop
fsubrs
mov
mov
lock
mov
in
imul
xchg
inc
test
jecxz
fistpl
ret
scas
mov
inc
js
lret
adc
mov
aam
scas
pop
push
pop
jmp
fadds
scas
mov
pop
adc
icebp
pop
lods
pop
and
mov
in
test
sub
out
leave
aaa
rcl
rcr
dec
cmp
aaa
inc
xorb
dec
jmp
inc
je
pop
test
jp
add
inc
jne
lret
mov
dec
out
adc
andps
xchg
lds
xchg
xchg
mov
mov
add
cmp
inc
cwtl
pop
pop
or
pop
icebp
cs
stc
call
push
fisttps
add
jo
pop
cld
dec
xor
or
out
jge
test
adc
ret
inc
movsl
and
push
push
pop
sub
sub
loope
and
in
call
data16
lret
int3
cmp
cld
mov
mov
in
adc
cmp
jne
sbb
pushf
insb
mov
sbbl
ss
push
adc
jp
jmp
add
sbb
cmpb
xor
push
enter
pop
iret
loop
mov
test
std
pop
in
push
arpl
nop
aam
sub
out
or
mov
rcrl
lcall
lret
shrl
mov
jns
inc
pop
sub
inc
xchg
push
jle
and
inc
mov
jo
or
std
and
ljmp
lahf
shlb
enter
sahf
shlb
lret
rcrl
pop
add
fistps
repnz
cltd
arpl
stc
mov
inc
sub
popw
mov
add
xor
xchg
daa
lahf
jecxz
rcl
dec
jnp
cmp
mov
orb
cli
lcall
stc
mov
push
mov
jb
movsb
cs
rcrb
and
enter
adc
enter
pop
jae
push
loop
ljmp
ret
sub
mov
adc
hlt
loopne
lahf
sub
mov
in
mov
xchg
mov
ds
arpl
in
ljmp
mov
mov
ret
mov
movsb
xor
ret
jecxz
sub
stos
xor
lcall
mov
and
mov
xorb
aas
cmpb
inc
xchg
cmp
movsb
divl
addr16
ja
cwtl
into
push
imul
lret
pop
cmp
iret
mov
mov
ficoms
add
dec
cmp
mov
or
gs
xor
clc
mov
aam
popf
aaa
jg
sbb
lds
int3
mov
mov
push
and
xchg
mov
sub
xor
mov
movsl
jns
xor
push
xor
fidivl
adc
repnz
stc
das
mov
movsb
xor
mov
idiv
cmp
mov
scas
sti
inc
pusha
jnp
pushf
adc
aad
insl
mov
and
lock
jno
xchg
or
test
int3
sub
clc
xor
repz
adc
jnp
movsb
push
ljmp
and
mov
mov
fwait
out
mov
and
lods
outsl
inc
pusha
ljmp
scas
sub
cmp
lret
jno
mov
decl
adc
cltd
fnstsw
push
idiv
xchg
test
test
push
cwtl
and
fwait
pop
jp
aad
sbb
out
hlt
fidivl
sbb
outsb
aam
in
xlat
cmpsb
sub
sahf
sbb
insl
inc
js
test
push
adc
int3
lcall
push
fdiv
cmp
mov
es
jnp
std
popf
sbb
add
int3
lds
adcl
jp
pushf
ret
rcrb
mov
ljmp
and
or
cltd
cmp
ret
and
inc
push
sti
roll
jge
das
ret
pop
dec
in
add
stc
push
xchg
mov
and
iret
push
jmp
test
out
pop
and
jns
push
push
ret
mov
xchg
data16
out
stos
jne
mov
add
cmpl
mov
pop
out
xchg
inc
or
and
cmp
cmc
xor
outsl
sub
sub
sbb
or
repz
orb
mov
push
dec
aas
addr16
dec
scas
mov
sub
sub
sub
sbb
push
cli
add
dec
cmp
inc
push
xor
cli
mov
sbb
push
pop
or
mov
add
pop
stc
jno
ret
inc
scas
push
jbe
jp
mov
cmpsl
fisubl
dec
shll
xor
xor
xorl
shl
loop
fcomps
rsm
cmp
or
push
test
stos
js
push
xchg
fcmove
cld
shll
pusha
fcmovnb
sub
lret
mulps
cmpsb
inc
jle
addr16
sub
dec
lret
mov
subl
xchg
arpl
mov
stos
jne
adc
xor
sbb
push
stos
lods
jge
movsb
aas
xchg
in
aas
mov
cwtl
cli
add
jo,pt
push
or
pushf
mov
dec
cltd
dec
add
dec
adc
xor
mov
jae
add
fcoml
xchg
call
fildl
inc
mov
clc
shll
or
neg
popf
andb
aam
mov
xor
add
fbld
pop
inc
mov
xor
dec
cmc
xor
mov
lret
push
cli
enter
fnstcw
fpatan
in
jae
dec
jae
cmc
stos
aaa
and
xor
xor
into
lea
mov
add
ljmp
xorb
dec
cmpsb
leave
movsb
push
iret
jmp
leave
movsb
pop
pop
adc
scas
js
pop
sarb
orl
sbb
pop
out
jnp
aaa
insl
and
mov
clc
inc
push
loopne
cmp
push
mov
int
xor
add
arpl
addb
sub
jno
mov
lock
push
test
jo
icebp
xor
push
fs
das
aad
pushl
xor
cwtl
xor
ret
loope
cmp
jle
aad
mov
pop
add
pop
inc
int3
je
cwtl
mov
shr
ljmp
adc
insl
iret
ljmp
fsubrs
shll
jne
mov
inc
out
mov
das
inc
cld
daa
iret
or
xor
mov
xlat
jmp
or
cmpsl
xor
lea
test
jne
and
jp
in
out
inc
add
bound
pop
push
lock
imul
dec
fiaddl
outsl
xchg
ret
add
ret
jae
lock
push
hlt
xchg
or
or
testl
and
or
sub
and
cli
pop
sub
cmp
adc
cmpl
mov
outsl
xchg
sbb
inc
pop
arpl
stos
and
push
shlb
xchg
lcall
gs
dec
xchg
or
cmp
pop
fsubr
cmp
out
xchg
push
inc
mov
lea
sbb
dec
iret
pop
dec
fiadds
rclb
popa
in
imul
out
adc
sbb
sub
ficompl
push
je
popa
fiadds
leave
mov
shlb
dec
sub
push
and
jl
mov
mov
cmp
neg
je
mov
sbb
stos
stc
cwtl
loope
push
out
xor
shlb
outsl
sub
and
rcll
sub
mov
mov
arpl
lcall
inc
les
pop
add
cmpsl
cmp
ret
mov
cmpsl
enter
mov
in
jne
push
call
push
and
in
popa
add
sbb
dec
insb
gs
dec
adc
or
leave
pop
in
jp
cli
push
xor
push
pop
sbb
stos
mov
fsubrs
adc
into
sub
clc
jp
adc
inc
pop
fnstenv
dec
mull
pop
inc
or
mov
aaa
xchg
lcall
dec
xor
scas
mov
mov
pop
pop
jg
adc
push
lods
sbb
repz
nop
clc
push
filds
add
decl
xor
inc
mov
test
fiadds
cmpsl
nop
mov
inc
mov
ljmp
nop
xor
pushf
mov
cltd
push
push
out
mov
xchg
aad
stc
fdivs
imul
fwait
sbb
or
mov
mov
xchg
dec
data16
rolb
ret
test
addl
push
fwait
xchg
iret
pop
decl
xchg
dec
imul
jns
jno
mov
mov
xchg
daa
imul
and
jmp
push
add
sub
adc
loope
jo
sub
ret
fcomi
push
cmp
xchg
jecxz
mov
push
add
ljmp
or
das
das
inc
jl
jns
xor
stc
add
ret
push
or
in
xchg
or
pusha
jae
pop
stos
adc
or
loop
aaa
cmpl
flds
movb
ss
cwtl
lahf
sbb
sbb
xchg
jbe
cli
sub
in
mov
cwtl
out
outsl
or
mov
and
nop
xchg
mov
pop
xor
sbbb
pop
mov
mov
subl
cli
out
aam
or
out
sub
and
mov
xchg
inc
adc
sbb
mov
jecxz
cmp
jne
jne
in
fcompl
pop
ret
jns
lods
idivl
arpl
add
dec
push
push
lahf
call
lret
inc
mov
movsb
aad
cmpsl
xor
add
lods
enter
cmp
ffree
inc
fistpl
insl
sub
fwait
cli
push
jno
jmp
popa
dec
lret
dec
cwtl
fldenv
cmc
sub
or
mov
stos
dec
push
sbb
nop
mov
jmp
ljmp
xchg
icebp
popa
add
loope
pop
dec
cmc
mov
rcll
xchg
dec
cltd
push
cmp
push
add
xchg
sbb
inc
add
shlb
in
testb
add
enter
or
into
dec
xchg
jp
adc
out
or
fs
cmp
pop
cwtl
or
jecxz
orb
out
or
fwait
mov
in
call
std
pop
cmpsl
and
sub
push
test
out
out
mov
xor
and
xor
pop
pop
subl
jb
mov
inc
sti
inc
xor
leave
push
stos
xor
jge
cltd
scas
ret
rcrl
and
jbe
aaa
pusha
pop
xchg
fistpll
inc
sbb
dec
inc
xchg
sbb
add
xadd
add
jno
out
pop
mov
pop
pop
lock
pushf
mov
fsts
add
push
test
xor
in
sbb
or
cmp
jae
or
jo
adc
xor
xor
mov
mov
cmp
push
and
adc
in
std
testl
cmp
shrl
fwait
lcall
sbb
loopne
xor
mov
push
dec
leave
jo
imul
pop
push
lods
sarl
sub
push
cmc
movsl
sahf
lods
aas
stos
lods
mov
addr16
push
sub
dec
fcmovb
pop
adc
dec
mov
jo
rorb
sbb
fsub
dec
rorb
scas
cmc
fildl
out
leave
pop
pop
jmp
push
inc
sbb
cld
sub
iret
mov
push
insb
shl
adc
bound
mov
and
pop
mov
fiaddl
jl
andl
ret
bswap
add
cli
cmpsl
xchg
xchg
add
test
imul
testl
mov
mov
scas
inc
dec
mov
rcll
fsubs
lea
mov
jne
cmp
pushf
pusha
jle
push
test
aad
lea
dec
mov
fisttpll
sub
inc
push
add
sbb
lret
fimuls
stos
push
outsb
faddp
aam
mov
cs
ds
and
cwtl
mov
mov
jno
xchg
imul
lock
adc
jge
cmp
jb
add
xor
lds
daa
test
cld
lods
pop
xor
jbe
sbbb
and
lret
out
push
arpl
inc
mov
lods
bound
xor
in
and
addb
adc
fisttpl
dec
cmpb
test
test
mov
cmp
inc
dec
out
lods
xor
mov
xchg
data16
ss
lods
jle
movsl
pop
mov
sub
lea
fmuls
scas
scas
xchg
ficomps
aam
sti
sub
dec
push
out
mov
mov
cmpsb
inc
pop
cmp
inc
divl
push
enter
addr16
and
fldenv
ljmp
fidivl
and
imul
xchg
sub
or
lretw
pop
push
xor
sbb
jg
push
cwtl
int
pop
loope
gs
sub
nop
dec
pextrw
stos
adc
jg
add
scas
out
arpl
testb
into
sub
cmp
mov
sbb
aas
fcmove
and
addl
lret
fs
push
push
jge
add
mov
mov
inc
pop
inc
dec
or
inc
jno
push
push
xor
jnp
cmp
inc
fbld
js
mul
sbbb
movsb
sbb
inc
push
inc
inc
cmpsl
cmp
out
xchg
test
lods
sahf
sub
stos
cwtl
xchg
std
jg
fwait
imul
test
pusha
mov
and
push
cmp
lret
shll
stos
mov
in
dec
stos
es
mov
cmpsb
dec
movsl
jo
or
dec
repz
pop
add
mov
int
mov
cmp
ret
stc
sbb
das
push
pop
sbb
pop
fidivrl
push
add
lods
and
sarl
into
push
dec
push
in
xor
repz
jmpw
cmp
cs
adc
xchg
fs
cli
aaa
rol
adc
inc
pop
pop
idivl
aam
call
push
out
cmp
rdtsc
in
mov
xchg
outsl
fcoms
popa
mov
test
in
jp
adc
hlt
pop
xchg
dec
mov
lods
adc
xchg
or
and
fildll
mov
data16
bound
mov
sub
xchg
mov
push
movl
lods
and
jns
jmp
xchg
int
cld
add
enterw
mov
popa
in
sub
sbb
sub
int3
lds
test
enter
push
push
pop
push
movsl
pop
mov
pop
add
pop
rcl
mov
fmuls
push
pcmpgtw
mov
lods
or
int
pop
dec
rcrl
cwtl
or
int3
inc
push
pop
adcb
xchg
js
sbb
jo
mov
rolb
fdivr
adc
jl
fcompl
sbb
jmp
mov
sti
dec
mov
pop
mov
and
adc
jge
lods
aas
je
aad
and
and
mov
es
cld
mov
sub
fdivl
jle
adc
lds
sbb
xchg
in
mov
lock
addb
cmp
std
mov
pushl
jnp
hlt
mov
cmc
mov
push
xor
cmc
lods
mov
outsl
mov
scas
roll
stc
mov
movsb
fnstenv
jmp
es
push
hlt
cmp
or
jbe
and
cld
push
add
repnz
arpl
imul
nop
enter
orl
push
xor
mov
jmp
add
cmp
add
enter
mov
cmp
dec
imul
popf
mov
enter
xchg
ficompl
cmp
or
and
lcall
subl
jge
sbb
jnp
sbb
xchg
xorl
xchg
pop
and
sbb
loop
iret
add
ljmp
mov
push
xchg
cwtl
addl
sti
ret
cld
pop
dec
mov
adcb
jbe
add
notw
test
test
aam
pop
fsubp
subps
mov
jl
mov
std
push
sub
or
rorl
shr
fwait
sbb
popa
andb
dec
adc
pop
popf
test
dec
mov
les
stos
cltd
or
jl
cmp
aaa
xchg
sub
or
xchg
xchg
or
pop
arpl
and
inc
push
outsb
fdivr
sbb
scas
add
push
fiadds
mov
ljmp
lock
lods
arpl
or
sbb
sub
adc
inc
cmp
jne
sub
in
out
lahf
and
scas
push
stos
jle
inc
fnstcw
dec
test
es
pop
test
leave
clc
lret
loop
fdivrl
mov
xchg
mov
and
pop
out
inc
jbe
iret
push
jne
mov
dec
pop
xor
add
outsl
movsl
jle
lcall
js
cs
or
imulb
cld
sbb
sub
repz
adc
pushf
jle
jle
cmp
repz
xchg
push
push
pop
jge
cmp
mov
jo
inc
gs
insb
mov
loop
or
add
jae
xchg
hlt
call
push
jecxz
jbe
movsb
adc
lock
aaa
aas
sub
xchg
repz
inc
subb
mov
mov
adc
mov
mov
ficoms
mov
leave
fadds
add
bound
sahf
xchg
stos
nop
out
dec
push
gs
arpl
push
inc
mov
lods
imul
cmpsb
and
ds
jnp
aas
sub
rol
cltd
jae
push
add
fdivr
and
stc
lret
adc
xor
ret
mov
xchg
dec
dec
and
gs
sub
dec
mov
mov
test
es
adc
mov
or
iret
in
jno
and
cmp
fsubs
cmc
ret
roll
dec
icebp
lea
and
dec
adc
out
test
dec
pop
jg
cmp
push
mov
jmp
mov
add
mov
jecxz
icebp
sbb
insl
movb
imul
jbe
and
stos
jecxz
out
mov
jecxz
xlat
jbe
cmpsb
push
icebp
add
out
and
shlb
inc
xchg
lret
mov
push
cmpsb
mov
call
push
mov
lock
lock
divl
cmp
inc
loop
jl
adc
dec
stc
pop
or
jbe
and
insl
inc
cwtl
inc
sub
jne
adc
fdivp
mov
loopne
xor
pusha
push
add
inc
sbb
mov
or
je
adc
sub
cli
jne
dec
imul
cltd
mov
xchg
cmc
xchg
loop
xchg
xor
or
mov
cmp
push
xor
mov
inc
pusha
xchg
pushf
xor
push
cmp
daa
nop
popf
movsb
add
sbb
out
sahf
ret
shl
add
push
mov
rcrl
sub
scas
rcl
jp
popa
jns
ja
mov
sub
xlat
push
pop
cmp
iret
lods
les
fdivl
loop
inc
movsb
inc
mov
or
dec
lods
mov
or
ret
pop
test
xchg
push
loop
shll
lods
push
or
aas
cld
cwtl
out
int
cmp
sub
cs
inc
mov
popf
cmp
cmpsl
mov
roll
jae
sbb
loopne
push
pop
sbb
js
jb
and
test
int3
or
lods
jge
sbb
mov
ret
loope
ret
lods
add
mov
iret
dec
or
mov
sub
pop
loopne
bound
jl
scas
xorl
add
xor
ret
addr16
in
pushf
push
adc
fwait
sub
cmp
cmpsb
mov
cmpsb
xorb
cmc
sbbl
std
or
fcoms
push
and
outsb
stos
pop
sbb
jb
in
in
jmp
mov
addr16
sub
mov
mov
xchg
rorb
and
jbe
mov
insb
adcb
pop
mov
faddp
push
fisubrl
mov
fisubrl
out
fmul
clc
mov
mov
push
mov
or
mov
and
lock
xchg
je
pop
mov
push
movsl
idivb
jmp
and
xchg
jo
pop
inc
hlt
and
cwtl
movsl
lea
sahf
lahf
xchg
in
popa
shrl
call
mov
dec
dec
cmp
in
std
push
pushf
pusha
popa
pop
mov
inc
daa
rorl
or
or
sti
mov
fstpt
sahf
addr16
hlt
sub
add
fwait
js
sub
ds
imul
adc
bound
pminsw
nop
mov
ds
pop
scas
sub
xchg
jle
inc
lods
sbb
pop
and
in
adcl
das
pop
scas
fnstenv
jecxz
icebp
and
pushf
arpl
cld
pushf
sub
in
dec
pop
scas
fnstcw
shlb
aam
push
clc
fdivr
js
cld
mov
push
sub
mov
and
push
adc
lock
je
xor
adc
sbb
and
out
sti
xor
lea
sub
jle
testl
je
iret
cmp
lret
mov
mov
sbb
pusha
jle
xor
push
fistl
sub
mov
lods
jmp
mov
pop
and
cmp
mov
cld
jno
mov
inc
fbstp
lock
aam
test
and
idivl
inc
dec
movb
ss
inc
mov
insl
cmp
repz
mov
fucomp
popf
jp
sub
xchg
pop
jae
pop
cmp
sahf
push
jae
ffree
movsb
int3
subb
push
movsb
daa
pop
jno
push
ficoms
das
mov
add
mov
adc
lahf
push
lcall
les
shll
jmp
mov
fnstcw
adc
jne
lret
jae
dec
jmp
lret
sub
pop
gs
mov
test
in
pop
insl
adc
ficompl
inc
leave
push
fmull
cmpsl
and
aad
sbb
mov
xchg
add
shlb
jnp
push
and
repz
adc
ret
sbb
jecxz
add
sub
loop
push
mov
in
and
and
pop
lods
es
ret
push
lcall
jl
inc
sub
jbe
popf
pop
movsl
insl
push
arpl
pop
push
lods
ror
jp
sub
add
in
inc
mov
sbb
out
popl
int3
test
call
mov
je
cmp
stc
adc
fimuls
mov
jp
cmp
aaa
dec
test
or
sbb
cwtl
sbb
int3
sbb
xor
mov
and
adc
rcrl
setp
daa
dec
push
jg
into
push
mov
in
leave
jno
jns
mov
push
cwtl
adc
xchg
push
pop
or
jle
sub
aad
sbb
movsb
int3
or
inc
repnz
rcll
cmc
mov
int3
sti
cwtl
jnp
xchg
rcll
fidivs
pop
js
sbb
cs
in
cmp
cmpsl
insb
cmp
xor
ds
add
and
fwait
outsb
xor
cld
lret
scas
sbb
cmpsl
push
add
fdivrl
jno
data16
lret
push
fiadds
or
stos
and
inc
mov
dec
xor
lea
lock
dec
outsb
mov
pop
sbb
sbb
push
dec
mov
cwtl
ret
mov
push
push
push
popf
les
mov
icebp
pop
insb
lods
add
icebp
sahf
push
iret
and
push
inc
pop
mov
mov
push
mov
or
dec
cmc
lds
sbb
ror
loope
sti
ret
sti
lds
ret
enter
push
into
sbb
jle
les
pop
insl
popa
or
mov
push
xchg
and
jmp
fstl
cmp
mov
outsl
inc
stc
lret
mov
and
mov
push
xor
and
cmp
fists
stos
mov
xor
inc
xor
or
adc
lcall
inc
paddsb
addr16
jae
hlt
xor
mov
invd
je
or
pop
sub
scas
fistpll
jg
jae
and
aas
fcmovnu
push
lds
push
mov
pop
sub
mov
int3
fnstenv
insl
push
jbe
sbb
movsl
aam
mov
adc
xor
cmp
push
inc
les
sub
loopne
and
dec
xchg
fsubrl
fisubs
pushf
cmp
sbb
cmpsb
stc
push
fcom
cld
jae
jmp
ja
shlb
cmpsl
mov
xorl
addr16
push
xchg
adc
insl
loopne
in
add
enter
jge
dec
or
xorb
sqrtps
jmp
dec
je
lods
and
lds
lods
mov
or
clc
add
mov
data16
loopne
pop
mov
not
aaa
inc
mov
push
mov
frstor
stos
mov
mov
roll
adc
loopne
repz
push
adc
cmpsl
and
inc
mov
mov
push
stc
add
push
and
or
movsl
fdivs
sub
fstl
push
testb
or
daa
pusha
mov
xchg
iret
outsb
int3
pop
sbb
sbb
les
jl
fsub
mov
mov
addr16
fbstp
lods
decb
jge
add
jb
icebp
mov
pop
ja
ret
jns
mov
cmp
dec
cwtl
and
or
mov
in
ljmp
ja
xlat
out
pop
mov
flds
adc
sbb
adc
lea
test
sbbl
decl
mov
adc
or
int3
cmpsl
jbe
pusha
and
mov
loopne
nop
fs
fisubrs
neg
add
or
cmp
inc
xor
aam
sub
mov
cli
push
sbbl
div
shll
repz
jbe
dec
sbb
pop
jnp
xchg
mov
xlat
sbb
or
push
xchg
pop
dec
mov
fwait
jmp
andl
sub
jns
and
std
mov
cmp
cmp
sub
rcl
daa
add
xchg
dec
push
jl
and
lret
mov
ljmp
xchg
lret
outsb
mov
iret
sarb
js
lret
mov
or
dec
in
push
push
imul
cs
pop
into
pusha
in
fsubrs
push
cmpsb
das
mov
jecxz
fiadds
fs
loopne
sbb
dec
fwait
arpl
jge
jp
in
int
xchg
jbe
movsl
pop
mov
lods
stc
cmp
push
sub
or
dec
push
sbb
mov
data16
iret
sub
sbb
test
int
test
and
push
cltd
out
sahf
js
mov
push
inc
scas
aad
bound
xchg
xchg
mov
insl
arpl
nop
dec
test
mov
pop
inc
ljmp
fdivrl
xor
fs
insb
int
addr16
jbe
cltd
add
nop
dec
sub
loop
loop
dec
dec
inc
add
ljmp
mov
daa
lcall
ret
popf
inc
mov
sbb
in
cmp
cmp
xor
icebp
jg
jo
push
cmpsb
xchg
lods
das
mov
inc
sbb
xor
out
or
ret
ret
popa
ret
lret
xor
push
cmc
and
outsb
sbb
sub
push
mov
and
mov
in
std
es
add
loope
push
mov
lret
fldl
int3
stc
adc
arpl
adc
add
les
mov
daa
cld
push
pop
add
jbe
pop
mov
insl
loopne
sub
push
or
push
add
xchg
div
insl
les
pop
or
aaa
std
loope
xchg
or
aad
test
mov
dec
cmpsb
out
and
call
aad
jnp
mov
mov
leave
jle
mov
xor
in
cmpsb
call
in
and
das
movsl
repnz
fcoms
mov
rcll
mov
stos
and
jno
filds
pusha
icebp
jp
clc
and
cmp
fdivrs
fmull
sub
ret
lods
addl
lods
xchg
out
or
test
pop
and
test
adcb
sub
repnz
xlat
push
mov
filds
lods
mov
adc
xchg
out
std
mov
push
push
dec
add
sbb
dec
shr
add
icebp
lock
pop
mov
repz
popf
in
in
mov
jo
lods
sbbl
cmpsb
lret
sub
repnz
mov
popa
xchg
and
ja
gs
push
sbb
in
pop
or
repnz
dec
adc
flds
imul
fbstp
dec
add
gs
pop
push
push
push
adc
data16
mov
test
mov
xor
or
jp
in
and
adc
xchg
rcrl
into
adc
je
movsl
test
lods
ret
fs
lods
call
int
ret
std
mov
lahf
sbb
shll
pop
or
mov
jbe
fnstcw
xchg
sarb
mov
das
out
push
mov
in
mov
insl
leave
mov
or
rorb
in
push
data16
xchg
in
push
xor
testb
shlb
aaa
cmp
add
sarl
push
jle
scas
or
dec
push
outsl
mov
add
outsl
cmp
repz
sbb
inc
push
sub
xchg
ret
or
cmc
mov
adc
pop
push
lret
loope
push
idivl
mov
adc
dec
add
lods
aam
mov
jge
pusha
jl
xchg
daa
outsl
jae
add
fsubrs
adc
stos
sub
mov
sahf
iret
adc
fs
inc
push
mov
inc
iret
jecxz
jl
rclb
mov
mov
lock
or
pop
in
data16
into
testl
add
ja
sub
mov
sbb
cli
jp
int3
pop
aam
cltd
cmp
ja
jmp
cmpb
shr
adc
pop
inc
sub
dec
sahf
sub
pop
sub
enter
stos
cmp
sub
push
push
fidivrl
and
nop
shlb
fisubrs
ds
xchg
xchg
and
cmc
sub
add
push
outsb
lods
inc
stc
sub
mov
repnz
inc
jae
jae
jg
outsl
dec
pop
and
mov
out
psubq
js
inc
cs
jb
jo
imul
sbb
mov
mov
ds
dec
gs
adc
xchg
mov
fcmovu
inc
push
int
adc
pop
jmp
das
into
enter
addb
mov
out
mov
into
and
adc
dec
or
ret
lock
inc
xor
sbb
push
lea
ror
dec
sub
or
pop
std
loope
cmp
push
cmp
fstpl
jne
cmp
xor
and
dec
mull
imul
sbb
push
jg
sbb
pop
lods
std
jne
or
clc
popa
add
pushf
lcall
shll
sbb
sti
xchg
push
push
fcmove
fstp
mov
jp
mov
and
in
xor
pop
repz
inc
jecxz
push
ret
pop
daa
or
imul
movsl
dec
stos
testb
arpl
addb
xchg
or
sub
or
push
mov
jnp
test
sbb
ds
mov
lods
and
or
ror
ret
insl
mov
fs
outsb
jl
jae
push
sub
sbb
dec
daa
shlb
xchg
pop
mov
xorl
aaa
lret
xlat
mov
lods
bound
sbb
mov
mov
inc
push
mov
psadbw
dec
jg
inc
cmp
shl
frstor
fs
cltd
out
shr
test
inc
addr16
xchg
shll
arpl
or
orb
push
aaa
pop
ret
jne
loop
cltd
dec
and
fdivrl
push
dec
lods
adc
scas
inc
daa
mov
sahf
jle
mov
xor
xchg
sub
aas
adc
loope
lods
xchg
cmp
sbb
cwtl
mov
pushf
in
sbb
push
movsb
gs
add
mov
push
pop
mov
jle
and
sbb
xor
and
out
aaa
pop
push
xchg
push
inc
sbb
dec
fstpl
outsl
loopne
pop
push
xlat
cmp
rorb
add
imull
insb
mov
and
add
lea
sub
decl
dec
cli
and
inc
mov
shll
inc
add
inc
leave
jne
out
mov
sub
mov
pop
out
aaa
lea
jle
sub
cs
sbb
inc
jg
test
or
inc
enter
mov
and
shr
cmp
std
mov
mov
sbb
jle
popa
fsubs
add
movswl
test
lcall
sbb
cmpsl
jecxz
loope
aam
push
pop
popf
dec
xchg
pop
lock
mov
mov
jecxz
icebp
stos
mov
movsl
push
cmpsb
and
mov
xchg
in
adc
adc
es
xorb
xchg
jno
fdivrl
sbb
sub
ret
mov
nop
lahf
mov
fwait
sbb
dec
lds
and
ds
in
imul
push
cmp
daa
jno
out
or
sti
sti
xchg
in
loope
mov
loope
sub
sbb
push
jae
pusha
into
aaa
mov
add
dec
push
out
lcall
jecxz
fisubrl
sbb
mov
subb
mov
dec
push
push
sub
dec
ds
mov
es
inc
lcall
adc
adc
mov
stos
sbb
out
dec
jns
jns
out
enter
in
sbb
out
rcl
push
xor
js
inc
in
dec
lcall
lret
rclb
sub
jle
mov
in
add
pop
lret
and
cmc
iret
xchg
inc
jbe
jge
das
push
ret
negb
subl
dec
jl
xchg
testb
ljmp
in
mov
add
sbb
out
cmp
add
fwait
inc
icebp
dec
inc
out
icebp
clts
adc
add
ds
sbb
ds
xchg
jnp
mov
test
inc
jge
push
inc
leave
cwtl
sub
jle
xor
scas
adc
jecxz
push
xchg
cwtl
mov
jne
dec
test
mov
or
sbb
insb
cltd
inc
sbb
stos
clc
shll
sub
sub
push
add
lahf
pop
xorl
add
xor
sbb
fxch
jl
in
in
cmp
mov
pop
pop
sbb
cmc
xchg
insb
mov
dec
pop
add
cmp
sbbl
push
sbb
out
and
push
dec
fsubr
imul
or
lods
jecxz
push
test
lahf
movsb
push
daa
jmp
hlt
stc
xchg
jb
and
pop
jo
mov
add
push
jg
cld
clc
inc
sub
imul
movsb
js
shll
dec
mov
or
mov
add
movsb
inc
scas
hlt
dec
mov
jmp
push
js
cli
push
sub
or
jg
xlat
push
setae
dec
push
inc
inc
lods
ficoms
sbb
movsl
repz
push
push
pop
inc
ja
lock
fwait
pop
sbb
dec
aas
hlt
mov
negb
push
inc
jb
arpl
fcmovne
jp
mov
push
test
mov
dec
adc
mov
inc
cmp
inc
add
rorl
loop
jmp
rol
push
cmp
sub
shrl
push
mov
add
stos
push
lods
out
outsl
sub
icebp
sbb
xchg
std
in
inc
adc
adc
test
int3
cwtl
sbb
ffreep
and
xchg
cmp
shlb
decl
mov
add
lret
sbb
movsl
dec
imul
xor
in
cltd
pusha
and
popa
mov
pusha
sahf
xchg
lret
orb
pop
sub
mov
cmpsl
mov
rcr
jl
cmp
xchg
lods
xchg
loopne
xor
incb
inc
cltd
lfs
fcomps
pushf
sbb
popf
jo
xchg
fiadds
shll
lea
pop
push
cli
adc
shll
into
sub
xorb
orb
lcall
in
jmp
cwtl
in
aas
push
imul
bound
mov
mov
and
imul
pop
cmp
mov
and
jg
dec
xor
cmp
pop
mov
jp
jae
leave
mov
cltd
fs
lret
sub
jmp
andb
jae
cwtl
mov
jnp
add
stos
int3
pushf
roll
mov
mov
adc
ret
push
in
les
xchg
lea
mov
out
cwtl
shlb
jp
xor
mov
sbb
outsb
push
clc
call
es
xchg
add
or
jo
js
lods
mov
rclb
ret
ljmp
mov
and
jp
push
pop
mov
insb
pop
sbb
xchg
flds
movsb
orl
dec
sub
stos
xor
pop
iret
std
addl
cmp
ljmp
sub
cmp
in
dec
dec
adc
insl
bound
sbb
mov
mov
data16
nop
push
dec
jg
fs
insb
or
xlat
jno
push
mov
add
xor
gs
jnp
dec
push
lods
sarl
mov
dec
stc
dec
in
lret
lock
fsubl
pop
jbe
pop
mov
xchg
popa
xor
inc
mov
dec
daa
rep
repnz
add
push
data16
iret
fldt
xchg
push
ljmp
addr16
loopne
dec
push
std
stos
mov
shr
push
scas
fidivrl
cmp
inc
push
add
lret
pusha
divl
add
jbe
and
sub
push
stos
loop
data16
in
in
or
sub
cld
xor
add
scas
or
bound
shrb
jae
cmp
inc
mov
lahf
inc
jns
in
push
outsl
xchg
jg
pop
call
ret
int3
aaa
adc
or
into
int
das
mov
lahf
repz
jns
fcomi
xchg
insl
pop
adc
xchg
jne
cli
inc
push
out
cld
idiv
shrl
push
push
imul
outsb
iret
or
xchg
fnstcw
mov
gs
dec
dec
dec
pop
clc
in
dec
stos
fnsave
iret
sbb
xor
into
aam
sbb
ss
mov
loop
out
in
xor
sub
mov
xchg
and
mov
adc
test
or
fidivrs
xchg
mov
jb
inc
mov
insl
mov
push
pop
in
xor
or
xor
xchg
and
imul
and
cmp
pshufw
cmp
aam
xchg
pop
out
sahf
nop
jo
jno
mov
mov
out
out
push
ja
sbb
dec
and
jge
or
imul
fiadds
aam
dec
sbb
add
jae
pushf
push
cmpsb
xor
or
push
jp
dec
out
int3
lret
mov
add
sub
insb
xchg
dec
cwtl
fcmovnbe
fxch
lods
inc
lahf
outsb
adc
pop
or
enter
push
add
rolb
xor
pop
icebp
push
or
adc
jg
in
pop
outsl
xchg
sarb
jo
or
xor
mov
jne
in
mov
adc
mov
shll
push
cmpsl
in
or
loopne
stos
incl
repz
wrmsr
dec
cmp
adc
inc
outsl
loopne
mov
jno
or
cs
pusha
sbb
push
fiadds
add
mov
dec
mov
cmp
add
sbb
jg
out
adc
sbb
daa
xchg
out
xor
test
adcl
jo
enter
mov
push
bound
adc
or
fdiv
add
mov
cmpsb
push
pop
mov
stos
sbb
icebp
push
push
add
mov
mov
ljmp
dec
jae
xor
cmpsl
repnz
cmpsb
popf
mov
leave
popf
push
push
mov
mov
outsb
lahf
or
adc
into
stos
out
jne
cld
jns
movsb
mov
xor
pop
xchg
push
in
adc
cwtl
cmp
shl
add
xor
out
adc
fadd
and
sub
test
cmp
imul
aad
lods
mov
push
sti
std
nop
sti
xchg
lods
xchg
jle
fs
jae
cmpsb
cmpsb
jnp
repz
iret
and
mov
jne
sub
fistps
scas
jne
mov
loopne
dec
jnp
shlb
ljmp
mov
cmpsb
push
pop
jnp
mov
jo
lret
popf
mov
sub
pushf
loope
xchg
add
out
leave
push
xor
inc
push
rolb
xchg
lods
jecxz
leave
jbe
andl
sub
rolb
jmp
mov
mov
mov
or
or
fildll
xlat
jl
inc
xchg
and
mov
scas
popf
in
stc
push
push
mov
and
dec
dec
sti
mov
add
in
add
imul
inc
and
ds
lret
xor
jnp
in
sub
in
ss
mov
adc
adc
dec
cmpsl
ret
mov
push
scas
push
xor
test
test
jmp
jl
fiaddl
sbb
imul
mov
xor
inc
movsl
pop
imull
pop
int
mov
add
stos
jp
ljmp
int3
xchg
pop
inc
aas
mov
xchg
cwtl
and
out
push
adc
or
scas
jns
pop
adc
jb
mov
cmp
cmp
adc
in
mov
xor
fdiv
fpatan
lds
addl
pop
mov
cmpsl
xlat
adcl
je
push
out
insl
sti
rcrl
mov
stos
pusha
inc
je
fnstcw
andl
mov
fadd
push
lock
cmpl
add
push
fsubs
aas
mov
jno
sub
add
sub
int3
jmp
jmp
push
outsl
mov
pop
push
pop
aam
icebp
cmp
frstor
in
je
and
cmp
lret
pop
clc
or
mov
inc
or
xchg
popf
movsb
icebp
clc
movb
nop
adc
loope
mov
xchg
icebp
sti
rclb
addr16
popf
mov
insl
rep
and
dec
jne
xorl
push
push
jge
ja
inc
in
ret
mov
mov
stos
cld
ficoml
call
push
jnp
nop
xor
mov
in
add
sub
inc
fadds
pushf
sbb
rcrl
xor
mov
rol
mov
ds
call
je
js
hlt
adc
sbb
mov
add
cmp
in
sahf
cmp
or
dec
sub
clc
icebp
faddl
push
fs
inc
add
add
loopne
das
xor
xor
mov
cmpsl
std
adc
sbb
mov
dec
sub
repz
xor
pop
clc
scas
hlt
adc
and
mov
divb
les
fwait
xor
xchg
jae
dec
xchg
jg
jp
ja
imull
xchg
xorb
jne
repz
inc
stos
adc
aam
push
fstl
adc
adc
imul
cli
popa
in
dec
push
jae
sbb
jo
ja
lcall
pusha
gs
mov
imul
in
pop
and
pushw
stos
jmp
fisttpll
ror
or
pop
xchg
incl
adc
add
into
sarb
adc
jle
sbb
cmp
or
xor
push
inc
loope
es
jp
jnp
xor
mov
rol
add
push
or
arpl
mov
addr16
or
dec
mov
push
or
jmp
arpl
xchg
icebp
xchg
cmpsl
jg
daa
jl
xorl
inc
das
push
adc
es
jb
enter
mov
fstl
inc
nop
push
mov
repnz
test
jbe
jecxz
out
imul
or
subb
fs
jne
es
dec
xor
mov
adc
pop
mov
jmp
xchg
push
out
xchg
dec
fisubl
addb
js
add
leave
out
fs
jecxz
mov
push
mov
fmuls
scas
sbb
jne
cmp
mov
pop
stos
mov
mov
jge
rclb
pop
jno
cmp
lahf
out
dec
push
and
jge
into
push
outsb
and
sbbl
xor
jle
cmp
inc
xchg
pop
shrl
push
push
mov
add
cmp
cld
mov
pop
out
es
mov
scas
pop
std
int3
or
mov
outsl
jns
lret
xchg
push
repz
mov
xchg
stc
cmp
ss
aad
add
dec
add
jecxz
shr
pushf
pop
dec
adc
xchg
sti
mov
mov
out
aam
xor
pop
aaa
lcall
push
add
and
pop
insb
and
cmp
imul
inc
lods
pop
loope
das
xchg
sahf
ja
add
push
mov
out
mov
mov
test
daa
pop
mov
leave
aaa
loope
outsb
out
push
lahf
hlt
imul
push
sbb
pusha
hlt
mov
mov
faddl
enter
movsb
mov
push
call
scas
dec
xchg
push
mov
push
fimull
sbb
lahf
push
jns
mov
xchg
adcb
ljmp
jns
mov
shrl
xchg
in
sbb
adc
fnstsw
jl
mov
jl
inc
fsubs
scas
add
sbb
enter
push
pop
adc
sbb
jl
test
icebp
add
mov
cmp
jecxz
mov
push
fidivrl
xor
inc
clc
mov
pop
cmpsb
pushl
sbb
and
pop
negb
nop
insl
lods
arpl
ret
out
jns
jl
out
push
or
push
insl
jnp
fwait
insb
cmp
xchg
dec
pop
out
mov
push
js
inc
sub
pminsw
popa
push
jb
loop
jecxz
cwtl
jnp
es
vcvtpd2psy
cmp
and
aam
in
cmc
inc
dec
sbb
xchg
je
out
adc
inc
mov
or
stc
xchg
call
daa
mov
popa
ja
push
mov
data16
cmp
mov
iret
fwait
xchg
jo
popf
mov
cli
fidivs
jbe
jns
push
gs
fadds
jg
outsb
mov
mov
test
test
lea
push
test
pop
addr16
mov
jne
repnz
and
cmp
cmp
xor
adc
arpl
rcr
or
mov
push
jo
mulb
inc
aas
sbb
inc
xor
adc
add
mov
lods
or
and
mov
pop
inc
dec
xchg
imul
and
js
out
inc
fadd
mov
leave
push
es
sbbl
flds
mov
stos
sub
lock
jno
xchg
out
movsl
inc
call
es
clc
ret
loope
lretw
outsl
cmpb
mov
push
stos
adc
dec
adc
add
inc
xchg
pop
fwait
iret
arpl
pop
lods
ds
out
mov
aas
ret
imul
pop
lcall
stc
or
or
mov
jb
popf
xchg
sub
dec
test
mov
inc
sub
add
sbbl
pop
jecxz
lock
mov
mov
insl
cwtl
or
push
sub
cwtl
mov
add
lea
stos
jmp
jl
in
jl
add
cs
adc
lea
insl
pop
pop
popa
xor
pop
jae
jae
std
jno
push
fadds
or
jb
orl
mov
in
fcompl
fisubrl
lahf
outsl
cmpsb
adc
lahf
add
mov
cltd
jb
outsl
mov
or
leave
icebp
push
fimull
sti
dec
cmp
xor
adc
cmpsl
adc
std
and
xchg
or
lds
xchg
in
cmp
fnstenv
dec
movsl
dec
or
paddusb
or
xchg
push
aam
sahf
pop
je
lahf
mov
mov
mov
sub
cwtl
jne
scas
in
mov
mov
mov
or
cltd
dec
cmp
pusha
lds
sub
dec
scas
add
add
xchg
ror
stos
dec
iret
scas
push
jns
out
fldt
lods
rcrb
subb
xor
mov
lods
dec
dec
sub
dec
pop
movsl
add
mov
fsubs
test
dec
scas
mov
add
test
rcrl
roll
and
out
inc
test
dec
adc
jmp
inc
dec
jge
fninit
loopne
cmp
aad
cmp
adc
xchg
add
cmp
cmp
pop
in
pop
xor
sub
jl
clc
lahf
or
xor
lods
stos
int3
aas
jb
sbbb
outsb
sbb
push
imul
cmpl
jp
add
iret
arpl
lds
push
jl
lcall
dec
test
cli
xchg
rol
jg
cltd
int3
stos
cmp
jecxz
stc
mov
je
hlt
cmp
jbe
cld
add
test
popf
mov
mov
lds
das
mov
icebp
or
pop
bound
xor
lds
xchg
xchg
movsb
test
shl
insl
sqrtps
stos
data16
mov
aaa
jae
ret
aaa
or
scas
inc
add
fwait
mov
mov
inc
insb
push
iret
fbstp
push
imul
ss
int
imul
pop
inc
out
and
ljmp
sbb
popf
push
setg
or
or
cmp
repz
test
push
arpl
xchg
cmp
mov
fsubr
adc
shlb
pop
xchg
leave
scas
jle
or
push
xor
into
push
std
jle
pop
adc
in
lock
scas
rcrb
movsl
and
outsb
cmpsl
sarl
int3
push
or
and
mov
call
jo
testl
jmp
cmp
sub
popa
fs
pop
push
stos
inc
sbb
or
fdivl
ja
int
sub
dec
mov
ja
dec
sbb
lahf
ja
push
movsb
into
ret
ds
add
mov
mov
cs
mov
ret
js
mov
gs
iret
rep
dec
pop
add
xchg
pop
shll
iret
rorl
jns
hlt
and
aam
das
jl
jno
lds
jmp
inc
iret
xor
jg
pop
aad
ljmp
pop
jl
and
adc
inc
cs
idivb
mov
je
out
scas
jecxz
sub
rorl
arpl
test
jo
cmp
dec
jbe
cld
mov
ds
lcall
loopne
mov
xor
mov
adc
mov
inc
cmc
sti
mov
jbe
xchg
fimull
ja
rorl
leave
xchg
test
es
push
sub
mov
stos
xor
mov
or
data16
lods
movsb
mov
lret
std
push
shll
add
sbb
push
pop
loop
ljmp
push
ret
xlat
dec
mov
sarl
testb
jge
out
pop
sbb
flds
adc
pop
ret
fs
sub
adcb
sti
inc
add
lods
inc
xor
or
push
mov
cwtl
jmp
lock
or
xor
xor
xor
xchg
in
fildl
loope
add
add
pop
cmpsl
cmp
push
sbb
pop
add
cs
cwtl
andb
insb
es
cmp
push
push
ret
stc
xorl
pop
lods
mov
xor
stos
sbb
icebp
leave
ss
mov
lcall
int
sbb
or
dec
mov
popf
ljmp
inc
sti
xor
in
popfw
dec
aam
jp
outsb
rorb
fadd
stos
cmp
fisubrs
and
pop
inc
dec
adc
jmp
push
aad
les
cmc
test
jno
sbb
xor
in
lods
push
icebp
movsb
insl
cmp
or
fisubrs
sbb
jae
push
dec
dec
dec
mov
dec
iret
pop
cmp
jg
adc
mov
stc
mull
sbb
cltd
sbb
stc
mov
outsb
mov
scas
pop
mov
pop
xchg
mov
jno
mov
pop
dec
sahf
out
mov
sub
mov
scas
shrl
hlt
scas
pop
or
in
mov
fbld
push
mov
inc
cmpsl
xchg
push
or
daa
adc
loope
bound
dec
stc
addr16
imul
jmp
lret
ss
mov
cmc
subl
sbb
cltd
jae
sub
cmc
sbbl
adc
inc
fisubs
outsb
pop
add
gs
mov
push
pop
wrmsr
pop
and
lds
adc
std
sbb
or
aaa
mov
mov
xor
cld
rcr
dec
pop
jns
lahf
mov
je
jbe
out
cmp
lods
and
push
mov
and
faddl
sbb
add
mov
mov
dec
pop
inc
add
mov
cltd
call
mov
cmp
dec
data16
lahf
movsl
lret
pop
fcmovnu
inc
movsb
add
mov
mov
jle
add
jae
pop
dec
shll
push
shll
insb
data16
dec
lock
sub
in
pop
fisubl
into
loop
jne
adc
ss
cld
dec
jg
and
cwtl
cmp
push
mov
inc
jp
and
leave
xor
sub
add
divb
outsb
pop
test
xchg
adc
adc
add
or
test
cmp
add
das
mov
cmpsb
cs
sub
jp
pop
int3
cmpsl
sbb
mov
imul
adc
fucomi
je
ja
bound
cmp
dec
pushf
sub
push
inc
rolb
movsl
push
stos
inc
jbe
in
imul
xor
arpl
cmc
dec
push
sarl
shrl
push
pop
inc
es
adc
pop
dec
mov
push
std
xchg
add
inc
lock
js
pop
mov
jb
ja
inc
push
adc
jb
outsl
adc
sub
pushf
call
jbe
test
ss
das
enter
or
sub
mov
test
lock
or
or
adc
xchg
out
jl
dec
xor
cwtl
mov
inc
jecxz
jae
aad
icebp
mull
vpmaxub
mov
push
orb
lcall
sub
xchg
aas
clc
roll
xchg
cld
jecxz
fsts
daa
adcb
pop
aas
roll
add
mov
and
cmp
or
lods
sahf
sub
pusha
jle
andl
aaa
xchg
pop
sti
scas
test
es
mov
nop
xchg
cwtl
pop
xor
in
clc
mov
cli
test
sbbl
in
and
jae
mov
jo
push
daa
sub
stc
outsl
adc
dec
and
xor
cmp
out
aas
shrb
jecxz
mov
repnz
loope
stos
sub
inc
sub
jle
dec
push
lret
xlat
cmp
popa
sbb
jmp
test
test
jb
ljmp
xor
mov
fadds
or
xchg
rol
outsl
leave
add
pop
or
sbb
rolb
cwtl
mov
stc
push
lcall
fmuls
push
mov
cmp
int
mov
dec
dec
mov
mov
shl
out
pop
push
cmp
movsl
inc
adc
and
fadds
les
xor
or
unpckhps
rcrb
push
adc
inc
fstp
inc
pop
push
cld
sarb
sahf
in
lods
fstpl
js
or
adc
repz
fwait
sti
xor
jge
nop
test
lock
cmp
adc
js
mov
loopne
cs
mov
xorb
pop
inc
sbb
les
cmp
pop
mov
outsl
add
aaa
push
xchg
lods
sub
sub
les
adc
cmp
enter
pop
not
jg
loope
mov
add
incb
push
shrl
hlt
lock
sbb
adc
inc
or
mov
xchg
cld
cli
dec
mov
icebp
popf
fwait
pop
lock
and
mov
or
xor
mov
into
adc
pop
jne
push
push
fs
adc
outsl
mov
add
out
sbb
mov
jmp
mov
xor
mov
fnsave
rolb
sarl
add
mov
cmp
into
fisttpl
sub
sbb
mov
pop
adc
cld
mov
adc
js
pop
data16
pop
and
mov
dec
or
mov
ljmp
int
or
or
out
cmp
repnz
pop
jge
scas
aam
fwait
mov
arpl
pop
fs
and
push
pop
inc
mov
sete
mov
mov
add
pusha
xor
and
pop
clc
ss
jg
sbb
out
pop
push
loopne
add
enter
fs
xor
imul
test
pop
or
mov
cmp
cmpsb
aam
lret
sbb
in
cld
sub
sub
adc
testb
push
jb
dec
scas
dec
cli
clc
lods
pushl
mov
pop
leave
mov
test
inc
ret
and
cmp
inc
mov
jno
lods
test
mov
mov
push
add
imul
mov
ror
sbb
cmp
stc
mov
test
loop
and
add
pop
rcrl
nop
mov
cli
xor
lods
call
mov
sbb
pop
pop
adc
stos
add
xchg
xor
mov
gs
and
inc
vmovaps
xchg
xor
sub
inc
adc
push
inc
or
fstps
popf
out
or
or
sbb
nop
cltd
popa
mov
dec
incl
stos
xchg
dec
sub
clc
and
cld
or
lret
jmp
jmp
cmc
test
xor
mov
js
sahf
js
sub
pop
push
xor
popa
mov
mov
cmp
sbb
lock
insl
sbb
movsb
shlb
rclb
add
test
and
mov
iret
mov
int
in
ljmp
divb
sub
cmp
cmpsb
xor
out
add
xchg
jno
lret
aad
mov
mov
adc
inc
loope
pop
xor
pop
mov
fcmovne
inc
mov
and
jmp
movsl
inc
roll
pop
mov
mov
mov
shll
adc
sub
testl
add
pop
jecxz
xor
inc
push
or
mov
mov
cltd
cmp
dec
idivl
add
imul
cmp
loopne
xchg
jg
std
jns
mov
jae
mov
into
xchg
clc
adc
push
sub
mov
jmp
jg
xor
add
cwtl
shl
inc
loopne
cld
icebp
push
das
aaa
add
xor
int3
pop
push
pop
jle
cmp
push
jmp
out
loopne
add
fadds
in
out
pop
test
mov
mov
stc
stc
mov
loopne
repz
cmpsl
loopne
ficompl
ja
adc
sub
pop
negb
outsb
pop
pop
ret
xchg
jg
sub
outsb
push
test
lret
std
mov
jnp
sub
loopnew
mov
jp
push
push
bound
mov
hlt
adc
mov
cmp
xchg
insb
lcall
adc
pop
sub
inc
xchg
push
les
mov
sti
out
push
sbb
pop
sti
pop
add
stc
push
sub
rorl
les
dec
je
jnp
push
imul
mov
mov
ljmp
push
cmp
pop
xchg
aam
shrb
pop
rcl
leave
xchg
or
adc
sub
nop
stos
mov
adc
xor
xchg
xchg
dec
cli
jge
push
rorb
and
inc
mov
inc
jo
push
cmp
leave
push
iret
ret
in
add
inc
mov
adc
cmp
adc
in
xlat
es
sbb
push
leave
inc
dec
push
jle
lahf
testb
ret
pop
xlat
out
loopne
push
xchg
dec
aad
or
jo
mov
mov
notb
shlb
mov
movsb
ja
lea
aas
inc
in
movsb
mov
fprem1
imul
rorl
push
pop
xchg
in
add
mov
imul
movsl
cmp
fwait
pop
int3
lock
mov
sbb
stc
data16
xchg
sub
cltd
sub
or
dec
pop
fcomps
ficompl
std
out
imul
cmpsb
add
mov
push
orb
add
idivl
xchg
into
testl
aaa
imul
jge
aam
jmp
and
inc
sahf
jnp
and
xchg
stc
inc
cs
dec
mov
ljmp
in
loop
sub
and
xchg
inc
dec
or
pusha
mov
xchg
jl
lods
mov
shlb
xor
int3
sub
mov
dec
xchg
mov
jmp
lds
dec
and
sbb
jecxz
shrb
stos
push
sbb
fsubr
pusha
out
das
cwtl
outsl
sbb
mov
orl
xor
push
or
test
je
call
lahf
or
add
js
shlb
xchg
jge
mov
mov
mov
test
sub
xchg
repnz
xchg
out
pop
and
dec
rorb
scas
jae
sub
xchg
jb
sbb
pop
sub
daa
arpl
rclb
lock
lahf
iret
stc
fidivrs
dec
ror
xor
and
out
aaa
int
mov
lds
sbb
shl
jp
push
jge
inc
divb
mov
outsl
mov
call
out
stc
fwait
add
mov
push
out
gs
sub
shrb
jmp
fcmovb
add
push
sub
push
pop
sahf
sbb
aas
mov
mov
cmove
lea
daa
or
ja
sbb
adc
cmp
push
jl
sub
sbb
enter
jl
dec
inc
mov
loop
dec
mov
mov
mov
mov
and
mov
fcomi
fld
adc
andb
sbb
daa
aaa
shlb
leave
scas
addr16
ljmp
pop
outsb
mov
pop
pusha
mov
dec
les
push
cmp
out
pop
push
mov
jb
mov
jo
pop
out
mov
scas
and
mov
mov
mov
sbb
mov
sbb
inc
testb
movsl
rcrb
mov
adc
out
sub
enter
stc
jo
cmp
jb
inc
push
pop
pop
inc
xor
pop
out
aas
fwait
cmp
sti
cmpsb
add
popa
xchg
xor
test
fwait
hlt
cmc
aad
or
dec
sub
mov
mov
xlat
and
cwtl
mov
mov
scas
sbb
mov
pop
adc
iret
pop
in
sbb
sub
sbb
dec
hlt
repz
jmp
xchg
pop
fiaddl
push
pop
dec
sbb
dec
movsb
jae
jl
fsubr
enter
lret
lret
mov
shll
cmpsb
xchg
cld
pop
dec
push
shll
dec
cmc
xor
jg
jb
scas
cmp
xor
push
stos
dec
push
and
inc
lahf
jno
or
fldcw
rclb
and
insl
fsubrs
or
icebp
mov
and
add
cmp
dec
sub
xchg
ret
mov
or
xchg
xchg
dec
inc
jnp
hlt
in
xlat
cld
aad
xchg
nop
test
pusha
jg
dec
and
or
popa
enter
lock
ljmp
leave
mov
shll
sbb
pop
outsb
xor
movsl
or
or
inc
movsl
cmpsl
fistl
sbb
inc
cmp
adc
ds
rclb
jno
add
mov
mov
mov
insb
sub
jb
adc
pop
data16
enter
jno
mov
jle
addr16
inc
jo
mov
pop
and
outsb
cwtl
lret
sub
roll
pushf
push
roll
push
xchg
out
add
adc
jg
xchg
sbb
xchg
push
mov
mov
push
sub
stos
xor
rcr
gs
fs
fiaddl
xor
or
or
iret
mov
mov
fnstenv
cmp
inc
loopne
push
in
stc
jne
loope
cmp
jg
rorb
cs
movsl
push
movsl
fsubrp
mov
pop
sub
jae
ss
cmp
in
mov
jmp
insb
xchg
or
aad
sarl
or
roll
dec
mov
loop
dec
popw
jl
jnp
nop
mov
sub
xchg
rclb
insb
popf
fldt
dec
jle
add
fcmovne
daa
and
fnstcw
or
cmc
mov
xchg
jnp
fdivs
xor
jnp
lret
mov
mov
test
enter
jp
cmp
lret
aas
pushf
xor
sub
ljmp
popf
or
jno
lods
shl
add
outsl
adc
cmp
sub
pop
test
add
inc
hlt
fiaddl
mov
adc
and
test
std
in
and
push
push
push
in
sbb
fisttps
push
jne
jg
loope
add
pop
mov
or
fidivs
bound
data16
push
arpl
inc
add
pop
shlb
dec
sbb
repnz
jnp
or
fstpl
sbb
lock
fdivs
mov
adc
push
ficoml
shlb
repnz
jno
inc
es
add
in
and
or
dec
das
adc
gs
orb
mov
outsl
xor
sbb
out
and
dec
repnz
int
adc
sbb
jns
xchg
loopne
or
je
cmpsb
mov
mov
fwait
mov
cmpsb
arpl
pop
or
mov
mov
sub
adc
dec
dec
add
cmpl
add
movsl
dec
sbb
rcrb
xchg
mov
jns
stc
cmc
out
jge
hlt
pop
and
lea
pushf
popa
lea
push
pop
mov
out
pop
lds
xor
stc
inc
lea
aad
xchg
push
repnz
fidivrl
and
jne
sub
mov
stos
iret
mov
cltd
mov
in
jle
mov
das
loopne
je
fstps
inc
out
gs
jae
orb
rclb
stc
call
aaa
jae
cmpsb
lock
sub
cld
popa
popf
pop
dec
add
inc
das
and
in
or
shlb
jnp
add
jl
idivb
push
fimull
lcall
cmpsl
dec
daa
cs
cmpsl
xchg
mov
xchg
sbb
mov
mov
cmp
lret
iret
jns
cmpl
jne
add
sbb
adc
dec
jle
pushf
int3
movl
enter
stc
mov
pop
jno
lea
lcall
scas
add
add
test
enter
into
lea
ds
popa
cmp
xchg
data16
add
push
sub
aas
push
into
sbb
fldcw
and
cmp
push
xor
or
loop
mov
push
inc
js
mov
and
mov
aam
mov
xchg
stc
mov
out
xchg
std
fidivrs
cld
xchg
imul
mov
jecxz
dec
inc
mov
pop
arpl
clc
push
xchg
add
xor
jne
add
mov
dec
arpl
jo
popa
dec
outsl
add
jns
mov
nop
pop
test
push
pop
je
cli
pop
outsb
xchg
lods
popf
push
and
movzwl
rcl
pop
sbb
stos
daa
jnp
hlt
mov
sub
xorw
stos
mov
sub
mov
cmp
and
dec
sbb
imul
xchg
sbb
sub
mov
jno
ljmp
enter
pop
into
cmp
push
hlt
pop
mov
or
or
ja
pop
pop
shlb
int
adc
loopne
sbbl
xchg
push
mov
push
lods
pop
xchg
jno
ljmp
mov
cwtl
or
inc
fcom
movsb
push
and
out
adc
mov
inc
lds
das
sbb
xchg
fcompl
aaa
or
xchg
dec
outsb
nop
and
jecxz
outsb
inc
cmp
call
jle
lods
jbe
call
sbb
loope
pop
enter
jl
sbb
mov
daa
inc
cmpsl
stos
fsubs
jns
ret
sbb
cmp
xlat
sarb
leave
lret
cld
jne
dec
dec
popa
lret
jg
sbb
pop
das
sbb
ljmp
repz
mov
inc
lcall
std
lcall
pop
sbb
data16
cmp
mov
pop
push
popa
test
and
cmc
cs
mov
xlat
push
pop
xchg
je
or
out
pop
enter
lret
loop
pop
ja
mov
push
mov
iret
loope
pop
push
js
sbb
and
enter
jo
and
gs
or
xchg
add
fcomip
xor
negl
mov
sub
call
ljmp
fmuls
add
mov
push
lock
jae
int3
sti
and
push
aam
cwtl
mov
scas
lds
mov
or
outsl
pop
daa
mov
jb
xor
out
in
add
insl
push
push
cmp
xlat
jecxz
push
sarl
shll
nop
ret
xchg
inc
mov
lea
lock
cltd
js
mov
mov
mov
push
push
int
test
out
stos
dec
pop
jb
push
jg
sbb
outsl
gs
fcomi
mov
sbb
mov
xor
dec
js
in
jp
lret
mov
out
cmp
and
mov
fs
add
jne
popf
addr16
push
push
test
cmp
call
and
imul
sbb
in
mov
xchg
sahf
es
cmp
scas
sbb
push
test
aam
sbb
adc
mov
cmp
xchg
xchg
mov
inc
outsl
fisttps
or
xor
xor
jnp
fcoml
insb
movsl
adc
imul
xor
jmp
push
lahf
sbb
dec
mov
push
addr16
cmp
repz
repnz
push
in
outsl
decb
data16
stc
fdivr
xchg
movsl
leave
jae
out
pop
fnstsw
mov
jbe
jnp
lea
out
or
mov
mov
test
aam
hlt
in
std
and
stc
fwait
rclb
mov
mov
mov
jo
notl
lods
addr16
jae
pop
adcb
push
mov
data16
cld
pop
loope
mov
pop
adc
inc
add
shll
mov
data16
sub
call
adc
stc
or
aad
cmp
imul
int3
adc
jmp
cli
inc
sahf
es
jle
mov
lcall
movl
mov
pop
dec
pop
or
xor
cmpsl
xor
pop
loopne
cwtl
jbe
jo
pop
sbb
xchg
shr
and
jne
adc
fwait
mov
adc
add
es
leave
add
add
jg
in
sahf
jmp
std
insl
push
shll
inc
mov
xor
ss
mov
pop
nop
mov
icebp
inc
pop
fcoml
fs
test
aaa
stos
mov
cwtl
jo
jo
lahf
pop
pop
mov
inc
pusha
ficoml
pop
jmp
es
imul
xorb
adc
roll
xor
mov
cwtl
jns
insb
inc
add
and
ss
mov
xchg
jmp
fldl
ds
xchg
lahf
bound
ljmp
out
pusha
mov
sub
jmp
arpl
add
mov
aaa
mov
mov
push
pop
and
cld
xchg
out
je
jecxz
or
cmp
jb
xor
and
cmovb
pop
cmp
mov
sub
divl
adc
aaa
xchg
test
lret
adcl
dec
cmp
pushf
dec
shlb
in
jno
sbb
add
sub
test
fbstp
cmpsb
sbb
dec
icebp
hlt
out
lea
out
movsl
mov
push
cltd
sub
and
inc
adcb
pop
xorb
mov
mov
imul
iret
add
mov
pushf
sub
dec
jge
pop
movsl
ret
mov
ret
and
pushf
inc
hlt
addb
mov
insb
adc
dec
xchg
int
fimuls
jo
push
dec
dec
push
data16
inc
gs
or
cmp
divl
xor
or
mov
imul
push
ror
aad
dec
cli
lea
cld
into
fcoml
ds
lods
andl
add
lcall
int3
divl
xchg
sahf
push
jecxz
dec
jl
ss
popf
adc
adc
je
pop
mov
cmp
pop
cmp
outsb
push
mov
jnp
pop
xchg
vcvtsd2ss
xchg
jmp
jle
sub
int3
or
push
loop
popf
out
test
mov
lahf
cmp
push
popf
inc
outsl
cmp
aam
lods
pop
or
popf
cmp
insl
jb
test
or
repnz
out
lret
jmp
xchg
mulb
push
popa
ja
or
mov
loope
inc
arpl
stos
push
das
xchg
jmp
jo
cmpsw
int
cmp
add
ret
adc
mov
shr
pop
sbbb
leave
sbb
sbb
xchg
push
cmpsl
pop
or
scas
outsl
mov
pop
icebp
lods
pop
lret
jno
push
testb
iret
push
pop
nop
push
jmp
or
push
imul
aad
lock
adc
mov
sahf
and
loop
outsb
int
sahf
lea
xchg
clc
sbb
enter
mov
ss
cmc
lea
pop
mov
push
mov
jecxz,pt
sbb
jl
int3
jl
psubusb
mov
push
xchg
mov
xor
push
mov
and
dec
sti
rcrb
mov
pop
popf
popa
xchg
push
out
fwait
call
inc
rol
popa
ret
aaa
sti
shlb
in
mov
enter
leave
ljmp
test
inc
jne
adc
dec
cmpb
repnz
popa
push
sub
sub
inc
push
and
and
push
test
add
cwtl
adcb
into
dec
dec
mov
fwait
ficomps
push
test
jle
loopne
mov
arpl
fistpl
pop
cmp
sub
push
int
dec
enter
fisubs
movsl
adc
enter
nop
mov
inc
pop
loop
aaa
iret
xchg
roll
inc
cltd
jno
jle
sub
cmp
sbb
pushf
cmp
push
fidivl
inc
sub
mov
das
mov
sbb
out
mov
sub
mov
add
mulb
imul
mov
scas
lret
and
jge
fisttps
pop
add
dec
addl
std
pop
popf
mov
mov
pop
hlt
add
ret
orl
std
fstl
cmp
aaa
pop
cmp
rcr
dec
pop
mull
adc
dec
pop
das
push
sbb
lcall
lea
mov
mov
pop
andnps
neg
push
leave
mov
mov
test
repnz
out
sub
into
cwtl
pop
decl
data16
outsb
cmpsl
mov
rcrb
sub
mov
push
bound
mov
sbbb
fsubr
jge
mov
mov
sbb
dec
paddq
sarb
jmp
sahf
xchg
fcmove
mov
ds
and
int
sbb
dec
push
adc
xchg
sub
test
dec
mov
sbb
sarb
inc
lds
ret
cmp
jnp
nop
add
cmp
cmp
jg
push
and
loopne
lods
in
pop
aas
in
int
add
pop
and
out
ja
jle
not
push
jo
cmp
mov
mov
daa
xlat
outsb
insb
orb
repnz
mov
or
imul
imul
jno
lock
dec
outsl
mov
sub
sub
dec
adc
fs
imul
stc
pusha
std
fildl
ret
inc
push
or
lods
insl
ret
lea
lock
ja
xchg
pop
pop
cltd
leave
aaa
mov
mov
pusha
test
shll
je
movb
test
imul
cli
movswl
stos
mov
pop
jne
fdivp
lods
mov
pop
mov
xchg
add
adc
test
cli
sub
pop
xchg
cltd
dec
ja
jl
inc
cmp
sbb
cmp
dec
lock
mov
add
movsb
fs
mov
aam
aam
push
sbb
outsb
inc
jae
jle
aas
fidivrs
daa
and
repnz
icebp
fucomip
pop
pop
negb
sti
imul
aad
lea
mov
jge
mov
loopne
cmp
gs
sbb
iret
jo
insb
cmp
frstor
jp
or
jb
dec
adc
dec
sti
dec
inc
and
mov
repnz
push
mov
dec
ljmp
dec
stc
mov
xor
leave
outsl
mov
xor
roll
insb
outsb
inc
jae
data16
xchg
xchg
adc
cmpb
cltd
frndint
out
jno
inc
xchg
lret
shr
jmp
stos
fbld
jae
jno
aaa
add
sahf
push
jne
jns
xsaves
mov
pop
sbb
aaa
jl
add
sbb
loope
adcl
mov
popa
cmpsb
pop
jb
ss
jnp
ds
aas
cs
roll
fcompl
jno
fwait
int3
fistpl
sarl
out
mov
jp
jmp
or
scas
adc
arpl
add
xchg
push
lea
mov
xor
mov
insb
mov
loopne
cmp
jnp
data16
addr16
lock
aaa
adc
inc
in
lods
cs
sub
jg
aas
jae
mov
mov
push
and
aam
xor
cmp
iret
aam
mov
nop
push
add
mov
lret
mov
loop
pop
push
xchg
xchg
out
inc
imul
cmp
aaa
ret
add
test
rcrb
call
jb
fsubl
jg
les
in
mov
fisttpll
in
mov
rolb
out
stc
xor
cli
lret
sbb
xchg
imul
pop
mov
fildll
cmp
aam
in
inc
sahf
add
in
ja
das
out
pushf
push
push
mov
std
out
and
xchg
in
test
jmp
inc
scas
mov
les
add
mov
push
inc
cmpsl
sub
out
cld
fs
imul
jnp
cmc
mov
cmp
pop
sbb
sub
inc
repnz
bound
sbb
sub
roll
adc
jmp
ret
roll
pop
out
sahf
insb
jg
xor
ds
inc
popf
inc
and
xchg
dec
fcompp
inc
dec
inc
daa
pop
mov
push
sub
les
aad
clc
popa
popf
repz
inc
lgs
lods
and
pop
sub
jne
mov
mov
fnsave
jb
cmp
clc
inc
cwtl
mov
neg
adc
in
mov
xchg
or
mov
mulb
fistps
jp
stos
push
inc
shl
push
pop
jp
inc
mov
fs
pushf
xor
jo
adc
imul
or
inc
sbb
cmp
sbb
mov
stos
jge
xlat
add
out
or
pop
push
fsubrp
mov
mov
testl
rolb
add
ds
jno
enter
pop
test
mov
xor
jl
mov
in
bound
imul
push
lods
mov
xchg
push
sub
insl
mov
xchg
xchg
dec
inc
ljmp
faddp
adc
test
icebp
xchg
xor
out
in
mov
inc
mov
nop
pop
xor
imulb
inc
push
and
and
enter
std
jp
adc
fs
pop
test
lret
jns
jo
call
filds
push
hlt
sub
adc
dec
push
cmpl
mov
loop
test
cmp
mov
cltd
lcall
pop
jecxz
xor
pop
shll
icebp
dec
pushf
adc
mov
adc
dec
aad
mov
mov
push
ficomps
je
dec
ret
enter
das
fcomi
mov
sbb
mov
test
sbb
adcb
dec
push
popf
mov
lods
cmpl
into
mov
jg
push
stos
xor
or
xchg
mov
sub
lods
mov
loopne
xor
cli
inc
xchg
push
stc
mov
leave
dec
inc
aam
popa
pop
add
fnstsw
cmp
add
and
out
loop
out
mov
mov
int
mov
jg
cld
pop
lahf
fucomp
jl
dec
loopne
inc
mov
mov
shl
mov
loope
mov
mov
fdivl
inc
xchg
mov
pushf
out
xor
int
mov
mov
nop
in
push
popf
inc
ret
mov
or
xchg
xchg
inc
ja
cmp
cmovae
dec
sbbb
cmp
xchg
je
mov
mov
lret
push
cvttsd2si
dec
mov
lods
sbb
lds
adc
dec
sahf
in
push
out
mov
testb
inc
dec
pusha
cmpsb
jg
popa
loopne
inc
xor
lcall
mov
inc
mov
mov
mov
ja
mov
ljmp
cmpsl
mov
lock
outsl
xchg
push
xchg
insl
idivl
inc
mov
push
jl
scas
and
xorl
pop
mov
mov
cmp
test
int3
movsb
inc
pusha
xchg
ljmp
pop
aam
loopne
jg
add
jle
aad
adc
xor
sub
jae
out
and
add
out
jle
inc
adc
xor
movsl
nop
jo
je
jno
jle,pn
add
loope
xchg
inc
stc
and
popf
sbb
mov
add
xor
testl
mov
loope
jl
xlat
or
dec
pushl
loop
or
push
pop
outsl
decl
xchg
pop
idivb
jno
push
xor
dec
adc
pop
xchg
mov
pop
add
fbstp
push
add
add
loopne
add
fs
adc
test
negb
repnz
mov
sbb
pusha
xchg
inc
mov
adc
aad
and
cmp
xlat
xchg
aas
inc
adc
inc
add
in
mov
push
fidivrs
mov
insb
or
jo
cwtl
es
lock
dec
add
or
test
je
fadd
scas
out
cs
jl
ljmp
mov
push
sbb
pop
adc
adc
ret
rorl
fwait
mov
adc
mov
inc
and
aam
xchg
jl
stc
pop
ss
pop
test
incl
adc
pop
xor
movsl
mov
jns
popf
pop
rcrl
jle
xchg
enter
mov
and
jecxz
xchg
lret
and
outsl
cmp
cwtl
mov
out
insb
ffreep
xor
pop
ror
and
jl
or
shl
push
pop
add
std
or
jne
testb
mov
aam
lret
cltd
inc
gs
lods
orb
stc
popf
xchg
or
xor
subb
iret
fnstsw
cmp
mov
sub
push
fsubs
fstps
outsb
mov
addr16
xchg
outsl
push
mov
arpl
or
leave
pop
data16
and
inc
xchg
pop
fnstenv
sub
mov
xchg
ljmp
js
mov
cmp
pushf
jg
add
push
aaa
insl
pop
in
outsl
pop
push
dec
pop
push
mov
test
xor
mov
dec
stos
orl
jno
psadbw
xchg
pop
leave
mov
out
shlb
xor
test
sub
les
sub
int3
push
mov
adc
or
sub
xchg
loope
clc
push
sbb
in
or
sub
imul
out
push
stc
lret
push
adc
or
pop
das
xchg
dec
add
inc
fdivrs
gs
std
das
sbb
loope
jo
mov
dec
fists
xor
fwait
leave
mov
push
std
dec
cmpb
fucomip
ljmp
jge
or
in
cld
stc
fmull
mov
fwait
test
and
imul
ror
into
xor
fdivs
cmpsb
add
mov
pop
push
loop
sahf
insb
test
and
and
test
xchg
mov
and
repnz
lret
or
and
aas
outsb
mov
test
icebp
cmp
push
mov
jne
jle
out
push
xor
add
pushf
test
cmp
adc
movsb
std
pop
mov
inc
fstpt
mov
test
dec
xor
jecxz
jb
ret
pop
enter
push
adcb
lahf
insl
xor
inc
movsb
xor
clc
addr16
and
enter
movb
xchg
ficoml
mov
shll
push
cmp
into
xchg
sbb
pop
mov
mov
cli
pushf
scas
xor
insb
xor
xor
xor
inc
dec
out
jns
mov
pop
loopne
pop
decb
mov
inc
lock
pop
xchg
inc
sub
adc
pop
shr
cmc
and
out
nop
push
xchg
inc
pop
or
mov
pop
dec
mov
jg
mov
inc
lock
out
push
mov
rcl
dec
push
cld
add
and
add
mov
in
cs
push
mov
fwait
aad
loopne
xor
pop
divps
mov
inc
add
xchg
in
dec
icebp
pop
fs
push
clc
xor
pop
fst
enter
lea
mov
fbstp
inc
xor
jae
sarb
push
cmpsb
adc
pop
pushf
adc
lods
push
sub
ret
inc
cli
negl
pop
push
mov
jmp
out
in
jg
sub
outsb
sbb
xchg
mov
pop
js
add
pushf
and
xchg
jmp
or
fldcw
mov
xor
inc
mov
xlat
fsubrs
mov
int3
cwtl
in
pop
jmp
iret
jge
sti
dec
mov
movsl
fadd
mov
roll
rolb
push
sbb
dec
dec
js
idivl
xchg
cwtl
clc
in
ljmp
or
xor
cmp
add
mov
push
shl
or
adc
jecxz
insb
inc
subl
out
dec
xor
stos
jo
loopne
push
imul
push
mov
or
repnz
adc
mov
imul
std
icebp
adc
lods
and
inc
jns
imul
add
mov
inc
jl
lcall
mov
pop
cmp
lret
jnp
adc
pusha
cmpsb
cmp
inc
icebp
jg
mov
cs
cmpsl
into
xor
jno
mov
adc
cmp
xchg
xor
cld
cmp
je
ja
aam
imul
subl
or
adc
popf
and
cmp
xchg
pushf
push
enter
sarl
mov
sub
pop
push
push
fisubs
xchg
jo
mov
or
jle
sub
dec
add
rclb
imul
sti
loope
adc
mov
adc
mov
imul
jb
pop
popf
sbb
inc
sahf
cwtl
mov
dec
push
adc
stos
cmp
and
push
lods
cmp
dec
cmpsl
dec
test
fdiv
fsubrs
sub
fbstp
loopne
xor
stos
pop
orb
inc
stos
lock
adc
jnp
repz
push
hlt
or
icebp
mov
rol
cmp
jl
test
and
sarl
and
push
in
call
aam
mov
xlat
insb
jmp
imul
mov
arpl
cmp
pop
mov
repz
and
ds
push
icebp
xchg
mov
pop
or
and
lcall
push
mov
xchg
jecxz
add
sub
cli
mov
mov
test
jne
pop
or
push
insb
sbb
push
test
sbb
cmp
fld
push
cli
out
mov
or
push
mov
imul
xchg
push
and
pop
push
fcoms
jnp
xor
icebp
out
into
cmp
and
xlat
sar
mov
or
cmp
xor
sbb
sub
ficomps
cmp
inc
sbb
xchg
out
push
jns
cmp
pop
mov
vmovd
loope
lea
subb
sbb
inc
popf
and
push
push
sbb
adc
and
sub
cmp
pop
jbe
or
data16
and
rolb
test
or
and
std
jne
pop
mov
jl
inc
pop
mov
xchg
daa
in
int
pushl
jmp
adc
mov
movsb
mov
into
sbb
ss
dec
ret
mov
lahf
shrl
clc
push
dec
add
repnz
inc
jge
adc
adc
mov
in
push
dec
pop
xchg
cmp
sbb
imul
pushf
idivb
dec
std
cld
cmp
imul
loopne
arpl
mov
inc
xchg
mov
jae
and
pop
ds
lock
decb
sahf
mov
dec
movsl
test
cmp
nop
push
aas
push
cs
cmp
xor
and
adc
xor
pop
lcall
aam
aad
sub
std
mov
sub
sub
xchg
mov
clc
inc
mov
mov
and
push
int3
inc
add
pop
fcmovnb
imul
push
lret
popa
mov
and
pop
rolb
mov
mov
push
pop
aas
cmpsl
adc
loopne
int3
jl
shlb
sub
ss
mov
lock
subl
sbb
push
jnp
ficoms
push
dec
sbb
push
push
jae
das
adc
or
inc
jle
mov
xor
out
jne
test
stc
push
lahf
xor
sub
aam
pop
aam
orb
jg
xchg
out
test
xor
sbb
lea
xchg
inc
add
bound
rcr
xor
outsl
mov
mov
or
lods
mov
dec
adc
insl
xchg
bound
cld
loop
inc
mov
gs
push
scas
cmpb
mov
scas
mov
ret
jmp
jno
or
push
push
iret
outsl
mov
and
enter
aam
sub
fsubrs
test
enter
std
pusha
or
pop
add
xchg
fiadds
jne
leave
xchg
repz
mov
popa
inc
sahf
xlat
and
std
jp
lods
fnstcw
lods
xchg
inc
or
je
fs
imul
sub
sub
push
xchg
daa
loope
mov
push
xor
shlb
push
pop
inc
lods
rcrl
outsl
shll
mov
sub
xor
clc
sahf
sub
push
cmpsl
add
hlt
and
mov
sub
enter
or
js
xlat
hlt
jo
sbb
in
lods
mov
mov
cmpsl
sbb
mov
repz
add
jecxz
addl
ret
aam
cs
test
pop
stc
popf
sbb
shrl
xchg
je
sahf
fs
push
lahf
pop
mov
cwtl
aam
xchg
and
cmp
std
aaa
inc
negb
mov
lahf
cwtl
mov
xchg
mov
cwtl
js
add
mov
orb
push
aad
pop
lahf
lods
aad
inc
mov
dec
dec
mov
inc
andl
inc
and
int
and
or
popa
mov
dec
sbb
gs
mov
rcrb
or
mov
mov
dec
cwtl
fisttpll
mov
sub
cltd
xor
stos
xchg
mov
sbb
sahf
fcmovu
scas
mov
adc
xchg
fnstenv
jno
andb
fcomip
mov
jo
jl
and
fs
xchg
fidivrs
outsb
aam
in
fistl
enter
lds
pop
cmp
insl
enter
jle
imul
xchg
or
adc
mov
mov
rcrl
sub
ret
shrl
dec
inc
push
dec
dec
stos
insl
inc
sub
clc
sbb
xchg
push
dec
sti
dec
aad
cwtl
std
add
pop
stos
repnz
loopne
adc
loopne
into
lret
mov
iret
cltd
mov
in
adc
test
lock
lret
mov
push
or
ja
lods
push
test
inc
repnz
mov
lea
fimuls
in
mov
or
pop
push
mov
adc
mov
fcmovu
xor
or
out
repnz
xchg
mov
or
mov
clc
fmull
fsubs
pop
jo
fmull
ds
jg
pushf
adc
ss
shlb
mov
xor
loop
into
adc
testb
in
jb
cmp
push
subl
hlt
adc
insb
sbb
ja
xchg
lds
shl
cld
shlb
fwait
dec
scas
jae
push
cmc
in
cld
je
xchg
fstpt
out
mov
mov
push
sbb
push
inc
fimuls
jmp
popa
add
mov
inc
lock
jmp
imul
xor
dec
repz
sub
and
cmpsb
stc
and
dec
mov
push
out
orb
lahf
add
mov
repnz
popa
and
mov
mov
mov
in
popa
xchg
sbb
aam
pop
in
arpl
jb
dec
es
pop
mov
cld
test
pop
mov
ret
mov
out
aad
adc
in
scas
lea
hlt
mov
add
pop
cld
mov
rorb
out
or
cwtl
cmp
jne
lret
push
insb
xor
sbb
xchg
clc
cmpsl
out
inc
add
pop
test
mov
or
sub
loop
jl
cmpsl
test
dec
aad
addl
mov
imull
jl
xchg
sar
daa
and
insb
popf
sub
or
cmpsb
cmp
push
and
cmp
popf
and
xlat
add
nop
dec
in
pop
test
push
loopne
jl
and
jo
inc
nop
cmp
or
imull
cmp
push
mov
loope
pop
ret
push
pop
sbb
push
cmpsb
fwait
dec
sub
js
xchg
add
or
xchg
aad
jns
mov
or
aad
addr16
xchg
daa
dec
cltd
inc
pop
inc
inc
jno
mov
jmp
fsub
mov
sbb
lea
std
push
es
loopne
aaa
cmc
mov
out
inc
outsl
push
stc
insl
dec
cmp
std
fnsave
test
aas
push
mov
clc
xchg
add
shrb
clc
jmp
and
loop
sub
dec
addr16
repnz
mov
insb
xor
mov
or
jae
xchg
add
imul
xor
push
sbb
mov
push
sub
inc
sqrtps
lock
xor
push
or
insb
sbb
and
inc
inc
cli
add
in
ret
call
movsl
jecxz
aad
gs
sub
aaa
push
inc
outsl
js
mov
nop
inc
fldt
lret
lods
lahf
xchg
cld
loopne
xchg
mov
sub
jecxz
fsts
jmp
mov
sub
mov
cmp
push
aad
stc
sbbl
imul
arpl
add
sbb
sbb
mov
sbb
jo
imulb
cli
sbb
jecxz
mov
sub
in
sub
inc
cwtl
jle
gs
add
nop
mov
fwait
adc
jmp
ja
xchg
push
clc
inc
xchg
mov
into
lods
sbb
sub
jbe
adc
ficoml
push
or
das
movsl
dec
mov
lret
mov
xchg
data16
bound
lret
in
sub
push
sbb
xchg
lahf
jge
loope
sub
adc
xor
dec
pop
out
jg
or
push
es
push
fwait
and
movsb
xchg
cmpsb
push
stc
and
jmp
push
pop
popa
pop
es
add
stos
icebp
push
sahf
or
jo
or
push
mov
call
lods
leave
xor
sbb
dec
scas
sbb
pushf
arpl
clc
cmpsb
mov
fistpll
dec
sbb
push
cwtl
jbe
cmp
hlt
imul
mov
jg
int
lahf
negb
movsl
or
cmp
inc
ds
arpl
pop
mov
mov
insb
or
loope
aas
dec
loop
loop
xchg
ds
push
sbb
mov
jbe
mov
cwtl
mov
xchg
mov
sahf
inc
inc
xchg
icebp
and
xorb
add
xor
dec
faddl
loope
cltd
ds
ss
inc
mov
loopne
jne
aad
cmpsb
fbld
out
fmull
sub
pop
in
xor
pop
jae
cmc
lret
add
jbe
xor
loop
mov
es
shrl
mov
aad
in
xchg
cwtl
subb
outsb
mov
push
and
scas
push
xlat
push
test
dec
loop
repnz
pop
out
cmpsb
jg
adc
inc
xchg
adc
icebp
xlat
and
sahf
dec
fiadds
outsb
pop
xor
stos
push
add
out
repz
mov
daa
ss
push
call
and
call
lahf
aas
rorl
lahf
or
insb
dec
cs
xchg
aad
pop
add
stos
scas
roll
imul
or
dec
xchg
repz
cmp
push
push
scas
lcall
call
cs
xchg
negl
fwait
xchg
outsl
fwait
subb
mov
std
ja
fsubrs
stc
jecxz
mov
popf
aaa
sarl
mov
fdivl
inc
xor
and
pop
xchg
dec
hlt
and
lds
jo
lahf
xchg
fwait
add
cli
mov
xchg
pop
dec
out
adc
jne
xor
and
lret
lahf
mov
xchg
lds
jnp
cmp
sub
and
mov
sub
mov
xchg
xchg
pop
mov
cs
nop
mov
mov
add
ds
mov
sub
inc
mov
push
sbb
gs
aaa
jnp
test
mov
lds
jb
sbb
insl
push
sbb
cmp
jns
mov
jl
jo
and
lret
or
sbb
test
mov
jbe
fwait
les
scas
shlb
lods
mov
int
xor
and
testb
push
dec
outsb
int
loope
push
andl
pop
xor
jo
pop
inc
xor
adc
fwait
ret
in
shll
push
inc
out
xchg
imul
notl
or
xchg
idivl
rcrl
jae
mov
call
xor
mov
xchg
cmp
jno
ljmp
sub
xor
pop
out
shl
dec
aam
xchg
shr
push
arpl
mov
cmp
cmp
jle
jne
nop
lcall
cmp
xchg
push
mov
je
out
icebp
outsl
lods
push
push
xor
inc
fucomip
sbb
imul
xchg
pop
push
adc
in
add
inc
rolb
push
jle
les
mov
push
sub
dec
push
loop
inc
jp
cmp
fwait
jmp
mov
mov
sub
repnz
sbb
icebp
enter
inc
pusha
popa
insl
jp
into
dec
jne
jb
mov
outsb
sarl
xchg
dec
std
xor
sub
jmp
mov
hlt
test
js
lea
sahf
ss
ret
adc
into
push
jle
fcompl
xor
pop
sbb
pusha
sti
xchg
rcl
cmp
fs
mull
bound
sub
inc
dec
lret
test
pusha
xor
push
xchg
int3
push
push
jmp
mov
rolb
dec
scas
cmpsb
out
sub
in
mov
mov
xlat
xchg
lock
scas
fs
dec
es
xor
loope
jg
bound
xor
hlt
adc
push
adc
negb
mov
xorl
rcr
cmp
push
mov
pop
cltd
or
arpl
cmpsb
lods
sub
add
jl
mov
mov
sahf
mov
sbb
mov
test
aaa
das
lcall
jmp
out
sbb
jle
mov
mov
arpl
imul
nop
mov
jo
pop
cwtl
in
in
test
data16
stc
dec
mov
jp
cwtl
in
insl
cltd
sub
jne
popf
popa
cwtl
mov
mov
ret
ljmp
mov
xlat
in
jmp
pop
lahf
add
pop
add
xor
jp
fsubl
stc
pop
sbb
sub
imul
in
adc
sbb
inc
test
xchg
pushf
xor
dec
adc
roll
push
stos
fisubl
inc
adc
sbb
lcall
inc
adc
int3
lea
ljmp
pop
lock
mov
sti
cmpsb
js
ret
mov
cmp
or
inc
mov
xchg
or
cmp
dec
popa
mov
sub
dec
sbb
scas
cmc
movsl
and
fldcw
das
loop
mov
and
fbstp
int
les
jl
loopne
jne
mov
push
push
mov
push
push
pop
out
sbb
rorb
scas
testb
ljmp
inc
sti
pop
test
inc
sbb
pop
ss
nop
outsb
popa
push
mov
xorb
lret
adc
scas
add
aad
jo
fisubl
sti
std
mov
in
xchg
in
mov
mov
sbb
int3
xor
insb
frstor
mov
leave
adc
sbb
xor
lea
mov
dec
sahf
inc
out
mov
fldcw
outsl
mov
cmp
xchg
xorl
and
stc
push
pushf
mov
inc
in
into
sarb
repnz
lahf
adc
enter
cwtl
in
xchg
es
ljmp
scas
pop
xor
das
lds
bound
xchg
shrb
lcall
lret
imul
or
and
lret
lods
lods
push
outsb
stos
lahf
pop
je
sbb
jno
xchg
sub
xchg
test
pop
mov
add
cmp
aam
pop
pusha
out
jae
icebp
movsl
or
push
sub
inc
xchg
xor
mov
or
pop
mov
push
jmp
push
xchg
stos
rolb
cmpl
push
popa
dec
ficomps
cmp
sarl
aad
push
jecxz
nop
push
jmp
int
push
and
cs
int3
sbb
mov
sbb
mov
scas
iret
sub
fistl
push
mov
test
ds
cmp
jp
inc
mov
in
pop
xchg
lea
inc
jmp
leave
insb
repnz
sbb
pop
sbb
adc
int
sub
cmpsb
sub
push
xchg
pusha
inc
or
dec
jecxz
loopne
out
lret
or
fldenv
lfence
inc
mov
test
jle
push
dec
scas
iret
inc
inc
mov
cmp
lret
mov
daa
sub
std
mov
inc
pop
dec
stc
mov
dec
outsb
dec
filds
sahf
dec
fisubs
mulb
push
enter
sub
test
repz
cmp
je
out
dec
cli
push
or
out
inc
cwtl
imulb
mov
mov
mov
cmp
mov
fidivrs
lods
popa
cmp
sbb
stc
sub
lahf
sbb
add
mov
push
enter
rorb
in
gs
test
push
incl
jno
cld
cmc
sbb
push
andb
dec
outsb
xchg
mov
pop
xor
inc
mov
jp
stos
jne
mov
mov
lds
cmc
mov
icebp
xchg
xchg
cmp
push
daa
lret
loop
dec
jp
iret
icebp
and
sub
adc
mov
fmulp
adc
test
dec
pop
sbb
ss
sbb
pop
out
fsubrl
jg,pn
mov
mov
ret
jbe
cli
arpl
int
cmp
hlt
jge
test
bound
imul
or
outsl
dec
pop
adc
sbb
dec
dec
pop
mov
xor
loop
pop
fmuls
fiaddl
or
movsb
mov
loopne
lret
pop
or
bound
inc
pusha
mul
mov
test
cmpsb
and
sub
andb
cmpsl
repnz
mov
movsb
jae
xor
andb
stos
cli
mov
mov
test
pop
or
in
or
lcall
dec
sbb
outsb
jbe
rclb
xchg
ret
int3
xlat
adc
and
leave
aas
aas
adc
mov
fs
mov
sub
aas
xchg
test
cwtl
xlat
aam
add
cld
lcall
push
add
fstl
sub
ret
sub
popf
repnz
and
mov
addb
cs
ret
pop
cmp
jle
rcr
jmp
adc
das
aaa
js
js
ljmp
push
jnp
and
std
outsl
test
pop
dec
nop
movsl
or
int
in
nop
popf
movsb
ret
loope
dec
jge
cmp
movsl
add
and
addr16
cmc
lgs
ror
mov
mov
mov
ljmp
les
add
dec
popf
mov
dec
pop
xchg
in
scas
mov
pop
ja
iret
add
into
fwait
adc
push
lods
inc
imul
sub
push
ficompl
shll
sbb
pop
in
sub
std
sub
imul
addb
push
inc
inc
jl
xchg
data16
lods
jp
mov
clc
xor
pushf
js
cmc
mov
insb
add
mov
lea
iret
aaa
sbb
insb
ret
mov
cmp
je
ss
nop
jp
jl
scas
aam
jl
imul
stos
div
aas
xchg
lret
shr
leave
and
adcb
pushf
loopne
ja
loope
fwait
inc
inc
mov
js
inc
pusha
jne
jbe
sbb
cwtl
add
outsl
sub
mov
test
mov
andl
jnp
mov
gs
mov
fadds
icebp
jmpw
sub
cmp
loope
pop
dec
jmp
dec
sbb
push
movl
push
stos
inc
js
shr
and
mov
in
aad
das
std
fsubrs
jp
adc
sub
add
pop
and
add
mov
pop
jns
push
xor
mov
stos
popa
pop
xchg
xor
jmp
push
lods
cmp
xorl
dec
mov
mov
push
jne
mov
or
in
andl
push
mov
lret
inc
push
sub
push
les
xor
gs
scas
imul
xlat
loope
sbb
out
js
scas
lea
mov
and
hlt
jae
rcrb
xor
jbe
js
push
sub
ret
enter
mov
in
daa
dec
loopne
xor
jmp
adc
ljmp
sbb
fwait
cltd
push
lret
sbb
pop
jl
popf
inc
pusha
adc
repnz
je
fstpt
cmp
orl
aad
mov
test
lock
inc
push
push
add
cmp
fisttps
cmp
lods
sub
pop
in
and
sub
inc
xchg
xor
rdmsr
xchg
in
movsl
pop
mov
movsb
mov
jmp
or
shlb
push
outsb
add
mov
call
les
add
int3
and
shl
dec
inc
mov
ja
ljmp
insl
and
sahf
xor
sbb
aad
pop
xor
inc
movsb
xor
xor
fsubl
adc
cmpsl
outsl
mov
in
movsl
sub
notb
mov
es
jbe
mov
push
sub
fcmovu
jne
sub
mov
popa
pop
pop
sbb
adcb
incb
jmp
lea
xchg
in
xchg
fwait
mov
xlat
add
cltd
add
outsb
div
xor
aaa
clc
xchg
ds
ja
push
inc
cmp
das
xor
fldl
leave
xlat
mov
mov
xchg
pop
mov
or
das
test
xor
stos
jle
outsl
lea
cmp
push
sarl
scas
mov
xchg
mov
js
lods
iret
jae
leave
xor
out
pop
orb
dec
push
push
jecxz
and
lret
inc
xchg
push
in
dec
int3
ja
adc
outsl
cmc
shll
cmp
enter
pop
jnp
pop
scas
pop
push
fstcw
js
xchg
js
mov
lds
loope
lret
sbb
dec
sbb
add
inc
jp
xchg
dec
jcxz
outsl
mov
imul
fdivrs
fiaddl
mov
adc
ja
test
and
mov
icebp
stos
sti
pop
bswap
pop
adc
jnp
inc
push
add
mov
lcall
int3
sbb
es
mov
mov
cmpl
rcrl
pushf
jnp
pop
into
lock
jecxz
data16
lret
add
jle
adc
lcall
xchg
cmp
pusha
rorb
jae
adc
jne
pusha
xchg
push
inc
lock
loopne
cld
mov
fsubs
es
lret
add
sbb
call
xor
in
out
icebp
push
pop
sub
push
enterw
push
scas
cmp
sbb
jl
sub
sub
or
pop
out
rorb
fwait
xor
leave
mov
repnz
push
mov
mov
hlt
xor
and
fsts
jb
call
sub
pop
mov
mov
sbb
pop
dec
ja
cmp
lds
jmp
je
push
sbb
les
mov
mov
xchg
pop
add
jno
mov
add
stos
shlb
in
rclb
pop
incb
xchg
stc
daa
stc
ficoml
mov
push
cmpsb
lods
jne
cltd
pop
ja
lods
lahf
popf
fs
adc
pop
stos
das
xor
add
xchg
cmpsl
jo
push
aaa
adcl
lods
test
loopne
xor
adc
ljmp
loopne
sub
add
inc
out
int
jmp
rcr
setle
int3
ds
mov
add
add
inc
in
jo
mov
bound
inc
ret
je
mov
pop
cmp
push
call
repz
cmpsb
mov
dec
in
test
push
dec
pop
sbb
xchg
xor
cmp
outsb
pushf
xor
adc
mov
les
or
cmc
add
and
loop
ret
roll
and
scas
mov
adc
pop
or
xchg
mov
xchg
pop
rorb
iret
insl
insl
push
gs
fcom
cmp
je
sbb
and
inc
and
xchg
lock
push
mov
inc
fisubrs
mov
bound
jge
add
or
push
pop
push
push
xchg
pop
dec
lea
lock
test
imul
fldt
filds
inc
xor
jg
inc
ja
pop
imul
pop
insb
sar
scas
mov
ret
cltd
add
sbb
pop
test
aad
mov
loopne
mov
cmp
dec
mov
pop
out
mov
mov
pusha
jno
iret
jmp
aam
xchg
cwtl
stc
inc
push
mov
mov
add
out
cmpsb
clc
add
push
call
jmp
cmp
dec
inc
mov
ds
push
ljmp
jb
loope
clc
out
mov
jl
xor
dec
cmp
fs
xorl
loopne
test
pop
bound
test
xchg
cwtl
jmp
stos
inc
sti
pop
gs
inc
scas
shl
or
add
jnp
outsl
dec
rcrb
test
inc
mov
ss
dec
or
sbb
nop
stos
lcall
sbb
in
adc
lcall
leave
jae
mov
jg
jge
int3
and
jno
push
jnp
idiv
mov
testb
shrb
and
aaa
mov
cmpsb
jne
popf
js
das
in
or
add
sti
je
add
outsb
pop
icebp
das
mov
xor
lds
jo
and
int
cmp
jne
sub
mov
into
mull
pop
addr16
add
mov
ss
js
add
ja
push
jp
jnp
inc
jmp
jmp
jge
adc
ja
cmp
out
or
ljmp
out
jns
sbbl
cmp
add
fnstsw
and
mov
dec
in
jae
lret
outsl
sbb
es
loopne
mov
mov
cmpsb
add
mov
push
or
and
jno
sysenter
movsb
add
jb
movsl
pop
cmp
jno
mov
hlt
sbbb
mov
push
aaa
or
push
das
sub
fadds
pop
testb
int3
daa
dec
testb
mov
pop
add
push
add
inc
je
cmp
push
xchg
xor
lods
adc
add
in
or
push
cmp
cwtl
cwtl
dec
jbe
adc
add
loope
movsb
cmp
fadds
popa
cltd
pop
rol
pop
stc
orl
loope
xchg
aam
aas
cwtl
scas
enter
cmp
aaa
adc
push
or
sbb
push
in
xor
cmp
fistpll
jns
mov
sub
lret
inc
dec
and
or
jae
sbb
in
ds
cmp
mov
jnp
imul
dec
adc
repnz
jbe
movsb
bound
fnstenv
mov
xorb
pushf
leave
dec
ljmp
orl
cltd
pop
popa
rcr
and
pop
pop
pop
dec
jecxz
sub
mov
sub
pop
sbb
pusha
or
jmp
imul
jmp
pop
sbb
lret
iret
and
int
imul
sbb
lods
repz
inc
mov
fcomip
je
adc
dec
xor
mov
pop
dec
mov
int3
jl
imul
out
fnstsw
nop
test
gs
add
stc
and
lea
pop
inc
inc
cmp
popf
pop
pop
cwtl
jb
xchg
adc
rorb
lods
or
adc
adc
xchg
pop
clc
iret
lods
push
inc
add
hlt
mov
xor
insl
test
int3
or
ret
notl
repnz
inc
inc
je
popf
xor
cmp
aaa
cmp
mov
mov
imul
imul
roll
jge
fidivs
out
push
push
ljmp
xchg
or
sti
xor
jl
push
daa
sti
sti
movsb
mov
mov
popa
mov
dec
inc
lret
adc
sbb
or
mov
mov
dec
mov
cli
xor
mov
clc
sti
ds
ds
inc
sbb
fimuls
ret
or
push
pop
mov
cmp
in
or
or
data16
xor
mov
mov
popa
je
rcl
shll
xchg
ret
repnz
jno
dec
fld
jecxz
repz
mov
movsl
es
out
ss
scas
bound
ja
fmul
into
cltd
cli
dec
rcrb
mov
hlt
stos
cmp
push
push
ljmp
xchg
dec
imul
sbb
imul
shlb
mov
mov
out
lcall
and
fucompp
jecxz
adc
loop
xor
cwtl
aas
cmc
je
in
imul
mov
arpl
adc
stos
xchg
ficoml
shll
sub
pop
movsb
in
sub
idivb
and
scas
and
sahf
add
ljmp
repz
cs
push
and
push
out
fbstp
lret
test
inc
stc
xor
jl
jno
add
sbb
lahf
ss
aam
popf
movsb
jne
enter
mov
cli
int
or
add
or
enter
add
lock
push
test
and
lods
sbb
adc
int3
push
aas
lds
das
and
pop
sub
push
ja
in
aas
ror
push
push
fdivs
add
cmpsl
jmp
es
std
pop
cmp
cmp
push
ret
xorb
es
cmp
fiaddl
data16
shll
cld
cmpb
mov
mov
pop
sub
cmp
sub
lock
jo
jno
dec
fwait
sarl
lds
mov
dec
ret
fidivs
mov
imul
nop
jl
mov
add
ljmp
scas
dec
jmp
sub
fwait
inc
stos
std
mov
mov
fldl
or
fistpl
imul
fidivrs
mov
add
sub
js
icebp
movsb
xlat
pushf
adc
div
into
aas
sbb
mov
lds
fidivrl
dec
mov
cmp
sub
outsb
leave
add
repnz
jmp
aad
shlb
push
sbb
push
lahf
pop
lahf
dec
fwait
dec
push
fistpll
in
jbe
xor
in
dec
xchg
cmp
mov
adc
aaa
repnz
pop
push
das
jecxz
js
lods
mov
sub
popa
jne
and
stc
cmp
mov
loope
xchg
int
cmp
pop
push
inc
jbe
dec
mov
std
pop
dec
pop
sub
test
pop
mov
or
dec
rcr
in
js
psubsw
mov
ljmp
mov
in
fdivrl
add
mov
in
jb
ret
push
pop
stos
aad
hlt
jp
adc
outsl
movsb
out
jg
in
lods
xchg
pop
loop
mov
mov
push
lods
xchg
mov
xor
lret
sub
xchg
add
jl
adc
push
xchg
lret
imul
mov
repnz
sub
mov
xchg
in
xchg
sti
lods
std
clc
pushf
scas
decl
mov
add
aas
cmp
jle
pop
cmp
dec
jp
push
mov
or
cmpsl
repnz
xchg
lock
arpl
sbb
insb
sbb
out
mov
lods
jne
popf
add
dec
mov
faddl
push
push
sbb
popf
repz
dec
sti
mov
pop
insl
pop
std
aaa
dec
cmp
xorl
je
repz
mov
mov
stos
add
cmp
std
lds
repz
call
sub
push
jnp
jnp
dec
into
ljmp
mov
fsubrp
test
stc
hlt
imul
xor
cmc
stos
movsb
in
outsl
xor
mov
mov
aaa
cmc
andb
and
in
ds
test
fidivs
data16
push
lods
push
ds
xor
sub
fcomi
jo
in
pop
xchg
inc
lock
dec
or
or
xchg
imul
pushf
fnstsw
sbb
dec
ss
adc
repnz
xchg
pop
pop
nop
in
repnz
push
lods
cmpsl
pusha
jne
inc
add
adc
aaa
scas
dec
mov
js
cltd
enter
add
mov
scas
test
mov
aad
xchg
outsl
insl
aaa
add
push
arpl
mov
and
lret
dec
ret
jecxz
xlat
rclb
jmp
cmp
jb
or
xchg
jecxz
push
lds
ret
xchg
pmuludq
sub
mov
inc
out
lret
jnp
cmp
mov
mov
xor
rclb
and
test
out
das
ljmp
pop
dec
enter
cmpl
int3
inc
mov
push
add
mull
push
xchg
xchg
push
popf
ljmp
sub
insb
or
hlt
cmp
test
int
jb
clc
adc
cmp
loop
cmc
sub
insb
push
push
xlat
mov
cmpsl
call
std
lods
mov
pop
pop
test
mov
dec
fwait
scas
cmp
stos
cmp
int
push
sub
ret
dec
bound
mov
shll
pop
rorb
jb
mov
les
int
enter
sub
jo
pop
lods
push
jae
mov
xchg
mov
sub
in
pop
add
push
mov
xchg
jne
movsb
psubw
or
js
pop
ss
or
fsubs
jmp
in
pop
push
fsubp
mov
aas
into
pop
xchg
in
push
sbb
psubb
push
cmc
shl
test
sbb
jno
mov
push
xor
push
sbb
and
dec
inc
call
jmp
aaa
adc
jae
movl
les
adc
add
push
push
push
push
cld
xor
out
incb
xor
xor
mov
sti
lods
mov
sub
dec
xchg
in
or
mov
arpl
dec
test
loopne
addr16
xor
jne
repz
mov
xorl
pop
push
leave
hlt
out
dec
test
mov
movsb
sub
cmp
mov
and
fisubl
insb
fsubrp
sub
cmpsl
pop
jne
sbb
sbbl
mov
inc
xchg
push
add
xchg
add
clc
sbb
rcrl
sbb
jnp
pop
jge
lcall
push
inc
dec
cli
push
ror
jae
adc
push
or
pop
adc
jecxz
mov
idiv
fdivs
add
in
daa
mov
ss
daa
push
daa
orb
push
ljmp
popa
insb
sub
les
cltd
add
lret
es
pusha
push
mov
in
add
dec
add
xor
aaa
mov
add
in
mov
leave
lret
icebp
adc
sahf
add
dec
xor
jl
inc
xchg
test
mov
daa
jmp
mov
mov
stos
push
mov
xor
lcall
push
xchg
xor
lea
cli
sub
cmp
mov
push
lcall
testl
and
aas
repnz
push
or
fwait
fwait
inc
sbbl
adc
mov
dec
aas
jle
jno
inc
inc
jle
push
lret
xor
mov
xchg
mov
inc
add
bts
popa
mov
outsb
hlt
adc
pusha
xor
xchg
aaa
clc
bnd
cmpsl
stos
push
inc
cltd
sbb
ret
mov
lret
out
daa
insl
hlt
sar
lods
mov
sub
popf
sbb
movsb
or
mov
insb
sub
mov
add
testl
ja
iret
shlb
stos
mov
shrb
sahf
imul
or
mov
sbb
mov
pushf
push
repnz
mov
popa
mov
mov
aaa
fbstp
mov
sub
clc
cs
jg
lock
and
sbb
mov
mov
cli
mov
lea
or
pop
and
lods
push
frstor
es
fldl
adcl
mov
or
inc
ja
dec
andl
xchg
lods
mov
movsl
jb
add
xchg
add
jmp
and
dec
into
cli
mov
mov
mov
adc
dec
cwtl
scas
ljmp
pop
jbe
pop
movsl
jne
mov
sbb
inc
mov
and
aas
outsl
cli
mov
xor
add
icebp
push
sbbl
pop
inc
insl
add
fstp
insl
push
mov
dec
stc
add
pop
mov
push
lods
inc
mov
imul
fucomip
jne
les
cld
xor
loop
dec
adc
cld
xchg
xor
rorl
scas
and
mov
jns
push
mov
cmpsb
mov
sbb
sbbb
xchg
sub
aam
add
push
pop
jns
adc
cmpsl
add
pop
gs
dec
inc
icebp
add
sbb
and
aas
cmp
faddl
sbb
dec
dec
add
push
out
sahf
or
popa
cmp
repz
outsl
sarb
repnz
add
sbb
lods
xor
out
jno
add
dec
xchg
cmp
pop
insl
inc
add
outsl
ss
mov
rcl
lahf
dec
mov
sarl
in
jmp
adc
icebp
jle
outsb
negl
mov
fistpl
int
fs
and
stos
lret
test
addr16
scas
ret
xor
cmpsb
sub
xor
jo
add
into
or
jecxz
push
adc
jp
jg
sbb
test
aam
outsb
jno
inc
or
js
je
adc
xor
insl
sbb
aad
into
jbe
mov
push
sub
mov
inc
pop
mov
jne
stos
cmp
or
xlat
mov
stos
out
push
in
movsl
pop
rorl
add
jg
mov
stos
xchg
ja
call
mov
pop
jae
cmp
sub
insb
push
xor
cmpsl
sub
pop
iret
xchg
cmpsl
rcr
test
sbbl
pusha
xor
jns
jmp
inc
push
nop
mov
and
in
jle
dec
mov
add
enter
cld
cwtl
sub
add
ja
inc
jge
or
pop
and
xor
and
mov
in
adc
or
test
sbb
insl
xchg
xor
dec
xor
cld
aas
in
xor
fistps
dec
movsb
jbe
jp
gs
push
fs
insb
shrb
hlt
sbb
mov
imul
rorb
jle
int
xchg
imul
dec
addps
popf
dec
out
xor
sub
sti
add
or
fwait
sahf
sbb
cmc
mov
sti
pop
lods
lret
and
lret
fidivs
outsl
mov
lret
push
cmp
aaa
pop
sub
mov
adc
les
cmc
sub
adc
mov
add
ret
add
add
mov
icebp
ljmp
out
jae
mov
and
repnz
fdivrl
pop
lret
xor
inc
call
into
pop
inc
sbb
mov
cmc
pop
dec
shrd
xor
cmc
mov
daa
sub
add
leave
dec
xor
mov
mov
lock
mov
jns
dec
lock
jnp
dec
pop
jge
in
jmp
cli
lods
shl
mov
cmp
icebp
pop
or
sbb
lods
xchg
adc
fnsave
scas
lock
sub
xor
mov
push
push
and
cmp
repnz
mov
sub
fidivl
dec
jne
int3
xor
inc
mov
inc
sbb
mov
fsubp
shlb
sub
push
rclb
pop
dec
xor
in
test
psllw
xchg
in
push
mov
fsubr
lds
mov
inc
mov
dec
nop
xchg
push
mov
inc
mov
mov
jle
xchg
dec
sbb
std
add
push
push
or
loop
adc
test
or
insb
jmp
xchg
pop
xlat
fmuls
mov
aam
cwtl
fisttpl
xchg
xor
loope
or
xlat
push
inc
out
pop
aam
xchg
inc
jp
sbb
lea
pusha
adc
arpl
outsb
push
gs
push
fucomp
fcmovne
ljmp
int3
jmp
mov
adc
jge
jns
ficompl
mov
lret
adc
push
jae
or
push
call
sub
mov
mov
add
dec
jmp
sub
lds
popa
ds
scas
lods
test
mov
addb
mov
inc
arpl
loop
and
sti
rol
aaa
mov
xor
dec
daa
mov
jae
insb
inc
fmull
cmp
data16
loope
cmc
lods
fs
aas
mov
inc
or
lock
push
add
xchg
cltd
push
divl
je
sub
test
or
sbb
or
dec
je
imul
and
fmuls
and
pop
shlb
loop
lock
mov
dec
sub
or
sub
ss
xchg
outsl
popf
mov
movsl
dec
xchg
sub
push
lret
test
clc
jne
sbbb
aad
repz
lret
adc
adc
int3
jo
sub
mov
adc
in
ja
popa
xor
in
sbb
inc
out
pop
mov
xchg
mov
pop
jmp
adc
add
adc
das
lcall
jnp
and
push
mov
sbb
pop
std
add
mov
mov
int
arpl
add
cmp
outsl
cmp
pop
cmp
mov
pop
fcomps
fdivrs
mov
xchg
pop
loop
push
cmp
mov
mov
lods
nop
or
mov
jo
cmpsl
popf
sahf
cmp
jmp
jnp
push
ds
fistpll
or
and
int
jo
sbb
xor
jl
stos
imul
pop
mov
mov
mov
psubb
into
or
and
inc
cmp
fimuls
push
clc
adc
pop
mov
dec
lret
adc
js
out
xchg
test
pop
mov
adc
jle
int
jo
mov
jecxz
mov
leave
jae
gs
loop
cwtl
and
out
insb
enter
xchg
lock
jp,pt
adc
rorb
movsl
mov
adc
aam
or
mov
inc
and
jmp
insb
rcrb
or
xor
pushf
mov
sbb
or
test
cmp
push
pop
lret
or
mov
jnp
add
jge
adc
data16
lret
sbb
add
and
clc
mov
ja
unpcklps
int
mov
mov
shrl
jl
cmp
js
enter
sbb
rol
cmc
and
dec
pop
lods
sbb
shrl
mov
fisubs
adc
adc
addl
mov
xchg
sbb
or
xchg
mov
jmp
pop
xlat
jmp
jle
das
cld
jnp
movsb
scas
jae,pn
mov
jmp
fisttpll
lgs
jl
test
and
or
mov
add
fnstenv
shrb
sub
inc
fnstenv
leave
mov
pushf
jnp
mov
mov
in
lret
adc
or
cmp
push
cltd
add
xchg
sub
pop
pop
int
cmpsb
loop
test
and
sar
mov
xchg
nop
addl
popf
mov
movsl
insb
or
sbb
iret
test
inc
lret
add
popf
aad
test
jl
and
js
jl
cld
out
repnz
xorb
ss
aam
jecxz
mov
stos
and
jp
mov
iret
xor
push
enter
inc
cmc
add
fcoml
jecxz
mov
lods
pop
mov
lods
mov
xor
adc
sbb
cmp
pop
enter
mov
enter
lret
mov
shlb
sahf
data16
sub
andl
into
pop
adc
and
orb
push
dec
lcall
jp
ret
cmp
cmp
jo
bnd
xchg
adc
movsb
dec
pop
les
and
and
sbb
mov
xor
adc
pop
mov
inc
clc
ja
js
pop
stc
fisubl
imul
adc
mov
cli
xchg
adc
xlat
push
shrb
outsl
cmpsb
imul
test
sahf
dec
lods
rep
sub
lret
push
ja
inc
xor
outsb
mov
shl
fsubrs
inc
push
imul
inc
mov
fsubrl
adc
jp
pop
xor
lahf
push
insb
negl
pandn
fadds
push
enter
lea
mov
xchg
jp
data16
enter
sub
jp
loopne
mov
adc
or
ret
pop
faddl
dec
arpl
inc
shll
add
mov
pop
push
call
xor
lea
lds
lahf
add
aaa
ret
dec
mov
sbb
cld
in
daa
jb,pn
push
xchg
flds
cmp
test
fistpl
in
pop
dec
xchg
jae
lods
lock
jns
pusha
lcall
xchg
cli
jmp
lcall
pop
jo
ds
mov
fwait
aas
pop
loopne
jne
lcall
pop
inc
sahf
sbb
xor
add
pusha
gs
push
dec
or
in
pop
out
mov
pop
mov
xor
stos
cli
cld
dec
lret
lret
outsl
movsl
fstpl
les
add
into
ret
in
mov
mov
jb
insb
loopne
negl
fnstsw
mov
adcl
inc
sbb
pop
sub
repnz
xchg
and
or
imull
cmp
push
mov
lock
sub
cmp
movq
add
cmp
mov
call
xlat
iret
xchg
mov
movsl
int3
inc
cmpsl
jg,pt
into
les
out
fldenv
popa
push
xor
lods
adc
flds
scas
in
cmp
xchg
xchg
movsl
jg
mov
mov
arpl
mov
out
ds
stos
cmp
sarl
shll
and
sbb
js
or
xlat
fwait
movsl
clc
and
pop
decl
in
cmpsb
aas
leave
hlt
lret
in
pop
ljmp
lds
add
fcomps
add
popa
divl
cwtl
sub
and
xchg
nop
or
dec
lock
pop
add
push
cld
sbb
outsl
fidivrl
mov
push
or
sbb
loopne
ja
mov
sbb
push
int3
aaa
loopne
pop
xor
xchg
jge
decb
or
sahf
cmpsl
nop
jmp
jle
add
or
sahf
and
nop
ja
dec
jo
sub
rorl
int
test
sub
movsb
call
aaa
or
jg
or
out
in
enter
iret
inc
cld
sbb
or
shl
sbb
sub
xlat
pop
or
cmp
insl
shl
mov
add
aaa
bswap
mov
out
sub
inc
inc
pusha
jae
loop
sub
push
pop
adc
pusha
jge
out
scas
mov
mov
push
add
lahf
pop
adc
jp
in
rclb
xor
aas
sarb
std
insl
loope
outsb
dec
leave
xchg
loopne
aaa
scas
neg
xchg
fldl
jg
test
into
repnz
test
nop
push
add
or
pop
and
enter
sbb
negb
dec
or
mov
in
jne
jge
pop
inc
jns
fidivs
jnp
data16
test
xor
cmpsl
and
inc
aam
repnz
dec
into
loope
dec
push
cmp
std
dec
sahf
outsb
adc
std
cli
outsl
jns
out
adc
xor
mov
orb
mov
fcomps
ja
pop
cmp
pop
cmpsb
out
fwait
xor
pop
mov
mov
mov
and
fcompl
je
lahf
mov
sarb
xchg
adcl
and
jno
cwtl
mov
enter
in
mov
adc
sbb
jne
adc
jmp
xchg
mov
push
jmp
ss
sbb
mov
mov
xor
das
ret
xor
shl
cld
leave
mov
adc
hlt
jmp
pushf
inc
rclb
in
aam
test
lcall
and
ret
addr16
int
xchg
adc
pop
out
jmp
rcll
lock
sbb
jle
lret
or
mov
jne
aaa
shlb
xchg
int
iret
call
dec
fimull
cmp
fcmovnu
repz
in
jbe
mov
mov
scas
pop
mov
mov
sub
pop
in
xchg
adc
cmp
adc
mov
inc
push
outsl
scas
out
inc
flds
sahf
lcall
repnz
inc
mov
jg
cmp
jno
jl
outsl
inc
adc
sbb
sbb
push
imul
cwtl
gs
test
out
fwait
push
inc
push
dec
sbb
and
enter
mov
dec
sbb
test
ret
test
sbb
cmp
stos
mov
ret
cmp
pop
add
mov
or
adc
mov
push
ficompl
xchg
in
loopne
xor
sub
int
dec
sub
stc
arpl
mov
aam
mov
push
fcoms
add
cmp
out
jnp
dec
mov
xchg
aas
ret
jl
psllw
add
pushf
mov
push
sbb
fwait
andb
xor
cs
xchg
xlat
addr16
cmpsb
xchg
pop
fstps
cli
aas
sub
ljmp
test
loop
and
inc
into
push
cmp
lods
sub
in
ss
xor
xchg
mov
mov
call
xor
add
mov
daa
dec
push
ds
fildll
sbb
cmp
mov
xor
jl
popf
jle
push
sub
out
in
xchg
push
mov
gs
adc
inc
cmp
arpl
or
ficomps
mov
xor
aas
jl
add
mov
xor
aas
lret
jnp
add
sub
sbb
pop
adc
adc
pop
and
pop
hlt
inc
xchg
jl
popf
push
iret
push
ds
rcll
jo
and
jg
sbb
pop
fs
mov
or
mov
inc
pop
mov
or
mov
dec
sar
invd
sbb
icebp
fistl
mov
sbb
mov
sbb
pop
data16
jge
fwait
sahf
pushf
aas
push
pop
jae
rclb
jae
jl
repnz
cli
sub
lcall
rclb
mov
lods
decl
fs
xor
scas
cmpsl
shrl
and
incb
rcrb
addr16
jne
test
fstps
inc
hlt
leave
dec
sub
pop
mov
cli
mov
leave
inc
into
lods
and
jno
xchg
stc
inc
nop
xchg
sbb
test
je
xlat
lret
mov
fsubs
out
imul
dec
jbe
jle
xor
dec
ja
repz
in
add
pusha
fcoms
mov
iret
mov
in
movsl
cltd
mov
stos
pop
mov
jns
mov
int3
and
mov
roll
inc
xchg
ret
push
inc
stc
push
mov
in
cmp
call
stos
jmp
jns
add
add
stc
lret
movups
test
int
inc
into
das
les
pusha
mulb
cmp
sbb
loop
cmp
out
push
mov
je
aaa
and
sub
add
out
mov
mov
push
imul
hlt
mov
cs
orb
add
decb
out
lds
cmp
xchg
inc
xorl
jb
inc
pop
xor
movsb
pop
pop
cwtl
lds
cmp
push
cmp
lret
mov
dec
enter
add
mov
das
xlat
pop
out
push
lahf
fs
sub
sub
test
bound
jg
inc
inc
inc
data16
push
ret
mov
xor
push
xchg
mov
loop
push
lret
sub
orl
add
jecxz
pavgb
and
mov
sub
loop
adc
mov
cltd
or
rolb
inc
insb
jle
mov
jne
jne
push
ficoml
xchg
mov
and
scas
mov
jmp
mov
testb
push
addr16
mov
sub
subl
test
jl
xchg
clc
sar
insl
xchg
jnp
sti
inc
in
or
popf
jmp
or
mov
enter
xor
push
les
jno
pop
or
pop
ret
jns
ss
and
push
inc
insb
cmp
sub
mov
out
sbb
out
fisubs
adc
lods
and
mov
and
adc
vhsubps
jecxz
xchg
cmp
jmp
call
std
das
out
iret
shlb
div
jecxz
push
inc
push
scas
aam
push
mov
loop
gs
xchg
into
in
add
aaa
push
cmc
and
inc
nop
ljmp
sbb
xchg
ja
and
push
mov
push
mov
and
pop
mov
lcall
stc
sbb
mov
xor
cmp
nop
and
aad
lret
mov
fnop
bound
inc
gs
xchg
sbb
std
pushf
jmp
push
call
dec
dec
mov
sub
notb
scas
sub
and
leave
call
xchg
out
xchg
xchg
mov
outsb
fwait
inc
into
ret
cmp
bound
movsb
cli
or
inc
subb
mov
cli
jns
or
dec
mov
push
js
sub
in
je
jo
adc
xchg
mov
pop
lods
pushf
mov
jnp
mov
pop
mov
out
and
cmpsl
outsl
or
dec
test
dec
push
aad
pop
inc
sbb
loope
fsubl
pop
pop
aaa
push
jns
add
sbb
lods
cvtps2pd
inc
add
fwait
sub
gs
mov
lret
loope
aad
pop
mov
sti
add
mov
andl
inc
mov
lea
ss
fidivl
xor
pop
clc
ficomps
sbb
sub
pop
and
fsubr
pop
inc
pusha
out
rcrb
mov
icebp
mov
fsts
ds
out
loop
push
aad
sbb
inc
sbb
push
mov
or
jae
loopne
addb
cwtl
in
stc
jnp
dec
sbb
aas
ljmp
aad
push
inc
push
and
and
stc
mov
rclb
xchg
sbb
cmp
push
inc
cmp
dec
mov
inc
dec
les
pop
cli
mov
repnz
aas
mov
or
pop
shlb
clc
sti
repz
push
scas
movsl
cmpsl
das
shl
jp
leave
cmp
xor
adc
mov
add
and
in
cmc
notl
xorl
xlat
adc
mov
ret
loop
insb
rcrl
xor
or
negb
lret
pop
push
sbb
repnz
pop
mov
xor
roll
xor
mov
or
add
jne
stos
mov
shlb
je
push
adc
addl
and
je
test
sub
jnp
jns
jb
and
jo
call
mov
int3
cmp
mov
sbb
mov
push
orl
es
imul
shrl
lret
aad
xor
xor
pop
mov
jb
lock
fstp
jnp
pop
lahf
jbe
dec
jnp
jns
rolb
leave
loope
pusha
xor
stos
pop
ja
in
xchg
aad
mov
mov
xchg
divl
int3
mov
aam
and
dec
test
sbb
xchg
mov
shrl
add
add
push
fdivl
push
or
mov
out
cmp
xchg
leave
or
add
rol
sti
lcall
test
lcall
imul
dec
push
sbb
sub
inc
mov
data16
jmp
fcmovnbe
test
jae
cmp
xchg
rclb
aam
jnp
and
inc
in
aam
lods
mov
call
in
aaa
fsubrl
mov
xor
and
push
lcall
fisubl
rcl
cmpsb
xchg
push
arpl
mov
jl
ror
call
xor
add
dec
pop
or
xchg
dec
mov
ljmp
push
outsb
insl
aaa
push
stos
lock
popa
and
ja
fistps
test
or
xor
fsts
inc
dec
test
sub
out
jne
rcrl
push
imul
xor
mov
pop
jge
push
mov
int
add
iret
shrb
sbbb
orl
jp
xor
and
xlat
xor
push
or
in
fnstsw
divb
pop
and
ljmp
and
call
sbb
ljmp
into
sbb
xor
and
cmp
test
push
stos
nop
sbb
aad
push
repz
repnz
xchg
xlat
or
push
cmp
lods
push
or
push
mov
mov
push
mov
and
jmp
sub
insb
xor
mov
sub
pop
incb
jae
int3
idivl
pop
cmpsb
arpl
sub
pop
test
cwtl
arpl
ret
aad
mov
fs
sbb
xor
sub
inc
lahf
std
sub
je
cmpsb
mov
cmp
and
and
jle
test
das
xrelease
jbe
push
mov
lods
xchg
jecxz
pop
mov
cmc
mov
mov
std
push
push
movsb
dec
and
mov
popf
lea
jmp
clc
sbb
jecxz
xor
mov
mov
iret
cltd
xchg
jnp
lock
mov
cmpsl
xor
pop
adc
cmc
dec
subl
adc
xorb
mov
in
leave
jmp
leave
or
or
push
push
int3
outsb
rol
and
loop
mov
add
scas
popa
sub
dec
xchg
nop
dec
sbb
dec
inc
outsl
xor
pushf
pop
loope
jo
pop
inc
daa
mov
lret
es
sbb
in
das
push
jno
inc
and
add
inc
inc
fwait
arpl
lea
dec
cmp
mov
hlt
mov
fs
je
outsb
lahf
xor
or
mulb
and
out
xor
dec
stc
cli
push
in
sbb
lods
popa
shl
push
cmp
out
pop
and
aas
xchg
xlat
out
lds
lret
add
xchg
cmp
jb
or
roll
sbb
xor
xchg
sahf
inc
inc
aas
sub
aaa
ret
adc
fisttps
mov
push
sbbl
jb
mov
in
dec
add
pop
xchg
and
adc
lods
pop
outsl
mov
stc
gs
mov
pop
dec
leave
aas
cltd
cmp
fisubrs
outsb
or
insl
fdivrs
repnz
call
js
ret
pop
insb
out
in
sub
in
repz
loope
lret
sbb
dec
jmp
pop
fildll
hlt
hlt
mov
xchg
imul
sbb
push
js
sbb
scas
mov
xor
xchg
lcall
shl
push
call
jecxz
push
ljmp
fistl
fisttpl
or
shll
adcl
scas
sub
jle
lret
add
test
sbb
mov
jl
and
lea
out
push
xor
xchg
cmp
or
and
adc
push
push
adc
mov
or
dec
xchg
push
mov
mov
push
inc
lds
aam
leave
jns
out
push
mov
cld
scas
movsb
out
or
inc
xchg
mov
sub
lods
lods
addl
push
loopne
stos
push
add
mov
gs
in
xor
fwait
in
push
pop
jp
sub
or
mov
push
lea
mov
mov
ljmp
and
daa
scas
outsl
adc
sub
call
mov
mov
pusha
or
pusha
inc
enter
loop
cltd
lahf
sub
add
adc
sbb
push
cld
cmp
dec
mov
mov
ret
sbb
hlt
out
sbb
jo
jg
into
push
sbb
inc
dec
les
je
push
add
sub
or
jmp
jo
movsb
inc
and
jae
js
pop
popf
mov
shll
pushf
insb
stos
inc
adc
scas
xor
pop
xor
mov
xchg
out
cmpsl
cmp
sbb
cld
jecxz
inc
add
push
xchg
push
enter
sub
and
adc
cmp
cmp
or
call
adc
jnp
mov
testl
add
cld
lea
jle
std
push
addr16
sbb
dec
dec
jmp
lock
fldenv
xchg
sbb
adc
jns
iret
push
imul
mov
es
sbb
popa
les
gs
out
mov
jnp
push
inc
stos
push
pop
push
xchg
dec
xor
mov
mov
bound
add
cmp
lock
sbb
nop
adcb
pop
shrl
fldcw
xor
mov
mov
arpl
cltd
xchg
or
out
adc
fmulp
lds
sbb
xchg
fidivrl
push
push
out
push
adc
jge
push
iret
mov
mov
mov
inc
lret
outsl
jo
pop
sub
lcall
push
rolb
dec
pop
ficoml
inc
sbbb
stc
ret
jnp
adc
mov
mov
mov
mov
dec
mov
mov
inc
push
inc
and
mov
out
mov
or
stc
dec
jg
cwtl
add
in
inc
pop
in
enter
jmp
and
dec
in
das
cmp
loop
test
mov
popf
and
test
mov
into
shl
xlat
cmp
xor
sarl
fsubl
push
ret
mov
int3
daa
lret
mov
mov
sahf
addl
add
adc
movb
sbb
lahf
mov
mov
adc
pop
lret
not
mov
or
push
leave
xor
ret
ret
pushf
dec
or
mov
shr
movsb
xchg
rolb
sbb
iret
test
mov
push
mov
test
inc
in
dec
dec
bswap
dec
rcll
sbb
inc
gs
fistpll
sahf
mov
inc
dec
enter
mov
xchg
jmp
popl
pop
fldt
loop
in
push
xchg
pop
scas
fwait
in
pop
dec
inc
aas
repnz
jae
ja
dec
add
mov
ret
push
or
and
push
dec
fcomps
jns
movsb
in
bound
loopne
mov
mov
adc
pusha
int3
and
lret
mov
xchg
clc
sub
cmp
jl
and
cwtl
jmp
cmpb
xor
fwait
xlat
fldl
push
arpl
adc
mov
adc
movsb
sahf
in
jge
mov
pop
dec
ss
inc
xor
pop
and
shlb
dec
push
stos
fldl
jne
pop
fdivrl
orb
jl
push
xchg
fucomp
sub
sbb
pop
shlb
sub
xchg
addl
in
sub
repnz
nop
fnop
cmpsb
and
mov
pop
mov
jb
je
repnz
add
adc
xchg
sbb
pop
mov
pop
in
shlb
lea
test
sub
pop
sbb
sbb
xchg
out
fiadds
ds
mov
inc
in
bound
push
lcall
adc
jbe
push
ja
fisttpl
push
stc
pop
sti
xchg
movsl
inc
mov
cmp
jmp
xlat
jge
js
ljmp
mov
lret
sarb
out
clc
push
int
test
sbb
in
ret
arpl
daa
mov
rolb
sbb
inc
push
dec
test
sbbl
mov
jns
sarb
hlt
sti
sub
insl
stc
push
cmpl
mov
cld
loope
inc
push
push
xor
js
xor
cmp
adc
stos
jg
mov
sahf
in
fldenv
cs
scas
cmp
push
test
lods
fdivrl
fstps
jnp
mov
sub
icebp
push
xchg
or
or
cmp
gs
data16
xchg
jmp
shrl
js
nop
ret
out
sbb
xor
push
xchg
pop
lea
fcmovbe
rolb
stc
in
jmp
dec
inc
ret
or
mov
push
and
inc
dec
mov
sub
push
adc
cmp
or
dec
movsl
ja
scas
mov
addl
in
lahf
xchg
adc
xor
les
add
or
stos
cmp
shrb
mov
ret
dec
push
push
repz
cmp
sbb
repz
cmc
lret
adc
pop
pusha
aas
sub
and
hlt
pop
pop
push
jb
mov
push
loopne
xchg
cmc
aad
mov
or
out
mov
sub
sti
ret
jle
mov
mov
ljmp
pop
popf
out
mov
mov
jo
pushf
insb
jl
orl
pop
mov
sbb
adc
repnz
jnp
cmp
push
pop
sub
and
andl
je
aam
ja
lret
mov
mov
lea
stos
sub
inc
sbb
fmull
scas
adc
dec
orl
sbb
imul
flds
mov
xchg
pop
adc
mov
lcall
shrl
ficoms
and
fcmovnbe
es
mov
adc
out
daa
or
in
sub
or
jno
sub
sbb
or
pop
adc
mov
mull
mov
lret
mov
cwtl
pop
mov
nop
jbe
mov
pop
cmpsb
out
sarb
cmp
or
dec
addr16
popf
leave
ja
mov
shrl
ljmp
cmp
sbb
inc
cli
std
push
out
sub
adcl
pop
dec
js
pop
lret
xchg
inc
inc
cmpb
cmp
and
aaa
push
aam
jo
mov
testb
fisubrl
scas
xlat
mov
sub
push
nop
scas
negb
pop
mov
jl
sub
aas
scas
call
push
sub
xor
and
pushf
arpl
enter
leave
and
mov
pop
dec
sub
pop
mov
test
popl
push
hlt
aas
imul
jl
arpl
xchg
push
sti
rep
xchg
mov
aad
out
inc
mov
pop
push
flds
adc
sub
addr16
sbb
cmpsl
sti
xlat
cmc
adc
outsb
push
inc
dec
scas
lcall
xchg
pop
xlat
jno
loope
pop
dec
inc
sbbb
mov
cs
sahf
mov
cwtl
iret
dec
xor
or
fcoml
jp
iret
or
xlat
mov
jecxz
xlat
xchg
adc
mov
dec
popa
pop
mov
cmp
sti
mov
push
sub
jbe
stos
and
mov
cmc
jecxz
sub
call
lahf
out
xlat
sbb
xor
sbb
mov
clc
add
ret
insb
adc
data16
xchg
add
sub
ret
lds
sbbb
in
fmul
adcb
mov
icebp
shrb
cltd
and
andl
lret
ret
notl
inc
repnz
and
xchg
push
fs
xchg
pop
repz
in
enter
arpl
fnstcw
sbb
xchg
inc
out
xchg
icebp
das
repz
inc
rcrl
cwtl
and
mov
or
inc
subps
xlat
les
push
adc
adc
and
inc
xlat
das
les
xrelease
pusha
jo
add
test
icebp
repz
pop
mov
out
fstpt
xor
pop
dec
das
insb
into
test
pop
rol
and
popa
pushf
adc
pop
mov
inc
xchg
popa
int
lret
leave
clc
out
jae
cmp
fistpll
aam
jge
adc
sbb
push
inc
dec
lock
outsb
inc
mov
cmp
add
outsl
cwtl
jp
sub
xorb
inc
fcmovne
mov
add
inc
enter
adc
and
xor
push
push
jbe
stos
cmpsl
dec
ja
lods
popa
jmp
adc
pop
push
push
dec
scas
frstor
jns
pop
das
push
jecxz
loop
gs
cmp
sub
les
bound
add
call
mov
inc
lret
inc
xchg
sub
in
in
dec
lret
push
call
sub
pop
sbb
movsb
xor
shl
push
mov
in
and
cmpsb
cmovge
cmpsb
or
stos
shlb
cltd
xor
fmul
push
lods
xchg
or
xor
mov
xlat
sbb
cmp
mov
popf
push
and
inc
add
sub
xchg
cmc
loope
xorb
loop
dec
mov
test
push
jg
mov
sub
fimull
inc
ret
cmp
jg
test
adc
push
jbe
loope
cmp
jp
call
and
hlt
pop
dec
dec
iret
ljmp
xor
test
and
sbb
jb
mov
xlat
imul
cmp
cld
jo
out
cs
fcmovbe
xorb
xor
ja
decb
xchg
fmul
sbb
mov
pop
clc
xor
filds
rcrb
inc
pop
xor
mov
scas
or
testl
lcall
popf
gs
test
jmp
cwtl
sbbb
jmp
xchg
fs
int3
dec
ret
dec
sbb
inc
frstor
xchg
aad
add
ljmp
dec
xchg
orl
adc
mov
imul
mov
push
addl
iret
sbb
test
gs
adc
mov
inc
cmp
add
stos
subl
fildl
add
movsb
adc
and
inc
test
dec
adc
push
mov
sub
jbe
sbb
adc
testb
ret
push
shll
sbb
insl
jmp
pop
pop
ror
lods
pop
sti
and
jne
lahf
mov
rorl
inc
iret
jno
dec
jnp
in
cwtl
pop
push
in
cmp
push
sub
inc
inc
imul
jle
sbb
jecxz
mov
push
pop
xor
sti
xchg
hlt
lods
inc
sbb
mov
mov
dec
out
shl
dec
movsl
jg
mov
or
rolb
aam
loopw
rclb
lcall
repnz
xchg
leave
pop
or
push
mov
movsb
jnp
dec
cwtl
pop
mov
cld
inc
push
jb
inc
mov
test
and
jl
sub
push
out
inc
cmp
outsl
xor
cwtl
cld
out
push
or
adc
je,pn
or
cmp
sub
out
xchg
pop
push
inc
in
pop
and
lods
pop
sub
out
out
jo
insb
pop
jl
lret
jg
and
sarb
test
cmp
popfw
mov
xchg
imul
lds
rcl
pusha
insb
mov
btr
mov
fwait
shl
repnz
jmp
or
mov
int
ljmp
or
lock
dec
fwait
lcall
and
cmp
aas
adc
push
arpl
pop
sub
shl
cmp
notb
add
outsl
xor
sarb
sub
cmpsb
into
pop
mov
push
fstps
repnz
out
xchg
pushfw
lahf
sbb
into
subps
mov
sub
sbb
sbb
pop
cmc
repnz
mov
jg
ja
pop
icebp
mov
pop
dec
jae
divb
test
cpuid
push
mov
lock
scas
xlat
push
mov
insb
loop
sub
gs
or
xchg
sbb
into
ds
aaa
cmp
popa
fsubl
inc
pop
xor
out
lcall
sub
arpl
inc
scas
divb
arpl
cld
adc
cmp
dec
xor
lods
xor
sahf
js
shrb
xor
xor
xchg
and
pop
sbb
test
jl
mov
adc
loopne
aad
jl
xor
mov
stos
test
imul
xlat
hlt
test
daa
jl
inc
adc
dec
cmpsb
xor
aaa
cwtl
push
stos
je
iret
fstps
lahf
orl
cmp
adcb
sbb
sbb
and
or
mov
push
cmp
mov
movsl
inc
outsl
andl
sbb
cmp
pop
xchg
pop
cld
in
cmc
push
rorb
stos
mov
imull
arpl
inc
push
xor
dec
sbb
stos
sti
mov
sub
sbb
push
cwtl
ret
xchg
sbb
les
or
inc
icebp
mov
scas
dec
adc
mov
dec
pop
pushf
jnp
in
sarl
pop
loope
add
jl
push
add
rolb
icebp
cmp
call
les
ret
dec
xchg
pushf
sub
push
xlat
dec
xlat
or
and
pop
or
repnz
daa
test
out
loopne
into
lret
mov
aad
mov
pop
nop
jge
stc
filds
out
clc
iret
out
jo
daa
mov
adc
pop
and
lcall
divb
arpl
and
or
roll
popf
mov
lcall
in
ret
ljmp
mov
roll
adc
scas
inc
adc
push
cmp
xchg
pop
mov
cli
fnstenv
and
mov
fcmovu
daa
or
cs
and
push
inc
and
mov
xchg
or
cmp
sbb
push
add
push
pusha
xchg
out
es
or
repz
lea
pushf
icebp
dec
mov
or
sbb
mov
dec
ljmp
lret
notb
inc
jl
in
inc
pop
mov
loopne
push
add
jb,pt
mov
ret
sub
clc
sub
lret
dec
mov
or
xchg
dec
sbb
addr16
and
xchg
lock
nop
into
fwait
push
inc
shll
lret
cmp
stc
daa
daa
or
scas
mov
inc
xchg
dec
in
push
ljmp
mov
movsb
push
dec
sub
push
cld
decl
and
jns
cmp
sub
xor
cmp
mov
adc
lock
add
rcrl
xchg
add
inc
xor
inc
sahf
jb
mov
push
leave
mov
xor
push
lret
imul
adc
je
xchg
xadd
sbb
push
movsb
cmp
push
add
push
cmpsl
pop
mov
movsl
mulb
xor
jecxz
push
out
dec
aas
push
out
jae
clc
cmp
inc
ffreep
loopne
sub
daa
mov
sub
insb
mov
loopne
pop
dec
rorb
call
arpl
addr16
jmp
cmpsb
arpl
ss
movsb
mov
cmpsb
sbb
divb
inc
mov
push
aas
int3
mov
push
pop
lods
dec
or
ja
notb
pop
mov
aas
aam
testl
rclb
mov
cmpsb
enter
ss
jge
pop
imul
jl
cmc
cmpsb
or
fsubrl
xchg
xchg
add
sbbb
sbb
bound
or
mov
cld
xchg
mov
xorl
or
inc
pop
xor
popa
bound
adc
jns
cmp
pusha
popa
and
orl
repnz
add
fmulp
pop
mov
pop
mov
adc
lcall
loopne
dec
insl
xchg
ret
daa
outsl
cltd
adc
loop
push
cmp
jle
fstps
cmpsl
sbb
insb
scas
or
insl
stos
jle
subb
mov
sub
lods
fsubr
push
mov
shll
jecxz
jmp
das
and
outsb
xchg
out
iret
push
js
js
and
adc
repz
outsl
in
lcall
xchg
pop
filds
lret
insb
pop
je
pop
les
mov
jbe
gs
mov
pusha
stc
movsb
js
cmp
add
loopne
mov
mov
and
xor
jbe
hlt
ror
or
stos
sbb
ljmp
push
and
int3
fxch
jb
push
cmp
pop
push
out
inc
xchg
inc
ljmp
outsl
ss
pushf
outsl
mov
das
cld
add
fmuls
mov
imul
call
inc
pop
mov
cli
in
sbb
gs
adc
daa
iret
fidivrl
lea
cmp
jo
subl
mov
rcrl
and
test
imul
cmp
mov
xchg
adc
in
add
push
xchg
loop
aaa
mov
xchg
and
call
int3
jno
popa
aas
cmp
les
add
jnp
jne
ss
xor
fnsave
push
xor
pop
cmp
xchg
repnz
inc
mov
cmp
test
cmpb
mov
inc
test
mov
mov
jl
fldl
adc
inc
xor
int
add
push
sub
xchg
sahf
mov
xchg
jecxz
inc
mov
ljmp
pop
xchg
in
push
popf
mov
ret
sbb
xor
mov
cmc
adc
adc
fadds
jmp
mov
xchg
cmpsb
test
push
lds
aam
ss
iret
fidivs
lock
adc
fs
jecxz
cld
jmp
dec
mov
jle
std
pop
inc
decl
jp
js
push
xor
sub
data16
in
ljmp
mov
mov
insb
jns
cld
in
bswap
out
mov
ljmp
adc
sahf
cmp
sbb
inc
lock
inc
loope
dec
xchg
jmp
mull
cmp
popf
lcall
or
leave
les
movsl
cmp
push
mov
repnz
lret
sahf
dec
aad
and
iret
sub
mov
cmp
pushl
jne
mov
inc
out
or
cltd
cmp
stos
pop
je
in
pushf
movsb
push
sbb
ss
inc
je
adc
xchg
dec
sarb
insl
sbb
mov
add
mov
mov
out
in
ror
mov
sbb
dec
mov
pop
test
orl
fsubrs
push
stc
out
stc
rorl
mov
hlt
shll
test
inc
cmp
fimull
leave
out
mul
push
add
pop
ret
cld
lea
fs
add
or
cwtl
pop
dec
repz
std
fsubs
js
push
lock
jns
pop
rolb
inc
jge
in
or
push
lock
and
test
cmp
mov
call
pop
sub
jne
or
sbb
pop
pop
ja
push
lahf
lcall
pop
es
fidivrs
scas
int
add
sbb
or
pop
mov
add
or
and
mov
xchg
cmp
adc
nop
sbb
sub
xchg
cmc
jb
jg
shlb
arpl
adc
lret
xchg
xchg
push
sbb
imul
das
cmp
std
scas
aaa
and
mov
cmp
push
push
std
test
cmp
fdivs
or
in
mov
mov
pop
in
repnz
cmp
popa
xlat
push
push
popf
mov
jns
insb
je
movl
xor
fldl
enter
xor
or
fistpl
jle
stc
push
jecxz
dec
jbe
cmpb
mov
cmpsb
mov
sub
and
sub
movq
mov
cmp
nop
mov
lds
arpl
inc
mov
clc
inc
out
enter
fidivrl
mov
addl
inc
inc
call
sub
cmp
mov
cltd
orl
in
sbb
js
mov
call
sub
push
xchg
arpl
push
dec
fcmovb
and
push
fistpl
xchg
dec
popf
popf
negl
in
mov
push
push
xor
cltd
aam
sub
sbb
rclb
mov
inc
xor
mov
xchg
inc
xorb
hlt
cmc
mov
jecxz
in
dec
inc
in
pop
cmpsb
xor
mulb
jecxz
push
jae
mov
lock
mov
aam
push
cltd
xor
shrb
ss
bound
icebp
lahf
jne
push
xchg
out
xor
cwtl
sbb
js
and
test
jae
enter
or
jo
movsl
out
inc
sub
xor
jmp
test
mov
inc
mov
sub
pop
push
cld
out
pop
jle
enter
xchg
cmpsl
push
filds
dec
xchg
inc
out
aam
repnz
cwtl
fadd
arpl
dec
add
ljmp
stos
leave
ret
sbb
lret
out
pop
dec
jbe
out
stos
jp
sti
add
dec
icebp
sbb
in
lods
cltd
jns
sahf
cld
scas
pop
enter
mov
call
push
mov
scas
imul
scas
jne
scas
mov
mov
les
push
push
mov
in
pop
cli
loop
repz
daa
shlb
lret
ja
ds
in
adc
mov
cltd
mov
lret
push
orl
ds
or
rclb
jne
cmp
mov
xchg
push
lret
inc
js
cltd
stos
popf
pop
frstor
jl
lcall
sti
into
pop
test
scas
fnstsw
jg
lds
sbb
sti
stos
in
cwtl
sbb
mov
int
jmp
in
sbb
add
fsubrl
adc
lods
cmp
xchg
pop
mov
xchg
stc
jno
repz
add
std
sbbb
subb
jb
data16
fdivl
xor
mov
iret
mov
xor
add
xchg
cmp
push
sti
lock
daa
testb
dec
addr16
fidivrl
gs
pop
or
xchg
mov
dec
inc
fisttpl
je
fcoml
push
mov
movsl
test
cmovne
inc
push
dec
imul
sahf
inc
sub
cmp
out
nop
fidivrs
push
sbb
scas
out
sub
incb
mov
xor
push
adc
insb
pop
ret
and
test
cmp
mov
jg
sub
mov
cmc
popa
push
ret
stos
insb
stc
mov
push
xlat
xchg
mov
cs
call
outsb
mov
inc
icebp
inc
sbb
lock
or
ret
bound
add
pop
stc
pop
xor
fistps
sbb
add
fstl
repz
cmpl
xor
cltd
test
dec
shll
out
stc
jmp
int3
and
push
mov
jmp
bound
mov
stc
repz
ja
shlb
rcrl
add
push
dec
push
test
push
lahf
in
xchg
push
lahf
ja
push
add
cmp
inc
jno
mov
mov
push
popf
jbe
jo
cmp
fdiv
jb
mov
and
aad
fidivrl
push
pop
les
sub
cmp
imul
xchg
or
mov
fs
mov
in
fs
mov
inc
add
outsb
jns
std
inc
aam
lcall
adc
jno
icebp
push
add
add
pusha
adc
xchg
mov
xor
lcall
in
mov
xchg
mov
inc
movsl
adc
sub
and
mov
mov
xchg
gs
fsubrl
dec
fbld
shlb
inc
sub
mov
aas
roll
jmp
mov
jle
movsb
ss
and
pop
rolb
in
mov
outsl
mov
scas
jb
filds
mov
les
mov
mov
pop
fmulp
sub
xor
out
add
out
sub
clc
cld
sub
out
inc
mov
adc
xchg
mov
adc
lahf
add
cmp
push
aam
push
loop
xchg
pop
mov
sub
mov
fadd
je
daa
sbb
pop
gs
jmp
daa
jp
xchg
jbe
cmpsl
cld
mov
push
cmpsb
popa
dec
mov
loop
xchg
pop
loop
ljmp
mov
cvtpi2ps
movsb
dec
mov
fistps
mov
ljmp
test
sub
push
adc
arpl
jo
mov
xor
div
fcmovnu
bound
push
fists
lock
sub
sbb
sti
and
xor
lcall
jns
pop
into
mov
adc
jp
xchg
cltd
fistpll
lret
or
pusha
inc
les
incl
jnp
add
movsb
sahf
push
push
push
cltd
sar
test
lea
sbb
mov
mov
fcomps
pop
js,pn
adc
pop
xor
mov
pop
repz
jne
sti
mov
mov
xchg
cmc
in
mov
mov
ret
outsl
test
sbb
inc
popa
xor
je
jle
xchg
or
bound
mov
test
aaa
or
inc
test
and
iret
mov
out
insb
imul
dec
xchg
cmp
lea
arpl
sbb
push
push
imul
fadds
adc
nop
out
add
push
mov
insl
insb
pop
std
out
sarl
sub
fnstsw
test
add
mov
addb
push
pop
out
sub
outsb
outsb
rcr
rcll
int3
jae
mov
mov
xchg
sahf
sahf
mov
jb
adc
cmp
and
test
and
push
or
mulps
dec
pop
jg
sarb
xchg
ljmp
mov
scas
inc
addr16
orl
arpl
iret
mov
sbb
pop
js
xor
pop
aad
lock
mov
shlb
loope
sbb
jge
pop
fldcw
push
jno
cmp
add
sbb
cltd
rorb
fwait
xchg
fiadds
addr16
cltd
shll
daa
lock
imul
or
jmp
rolb
jl
sti
mov
test
cmp
jmp
roll
jnp
lea
inc
lds
imul
cmp
xor
lahf
xor
mov
inc
dec
xchg
or
and
lock
fdecstp
mov
cmp
iret
mov
inc
xchg
inc
insb
fwait
push
or
shll
push
xor
push
lret
out
mov
loope
mov
mov
and
cmpb
sub
bound
lods
ret
mov
in
sub
mov
das
sbb
xor
pushf
arpl
test
je
push
cmp
rcrl
in
aas
inc
into
ss
ret
pop
test
and
les
leave
sbb
mov
dec
mov
test
ljmp
mov
and
ficoml
cmp
push
mov
mov
sarb
out
stc
hlt
jnp
push
xor
jns
dec
loope
pop
mov
mov
jecxz
sub
lds
stc
scas
addr16
nop
xchg
pop
fstp
jl
cmpsb
mov
pop
lock
mov
aaa
xchg
sti
hlt
scas
pop
sbb
movsl
jbe
lods
cs
lods
add
or
xchg
xchg
cmpsl
mull
ja
push
mov
shrl
test
mov
or
pop
dec
insl
lahf
pop
or
outsb
fldl
or
cld
lret
dec
inc
push
test
mov
xchg
sarb
rclb
leave
xchg
out
lret
xchg
movsb
push
cmpsb
mov
sbb
in
scas
adc
ret
popa
shlb
in
aam
js
loop
ljmp
or
lret
ret
add
inc
inc
addr16
mov
or
mov
shll
aam
adc
add
repnz
mov
push
cmp
fistpll
stos
in
sbb
sbb
mov
push
sub
lahf
dec
sub
inc
xchg
xchg
and
push
pop
jg
pop
xchg
mov
cmpsl
sub
mov
daa
fnstcw
push
dec
fcmovu
sub
cmc
push
nop
shll
shrb
jecxz
shrb
rcr
test
and
adc
jecxz
fucomp
cld
cmpl
aaa
push
imul
pop
jno
jecxz
lods
clc
jl
dec
pop
xor
push
ficoml
pop
dec
fmull
pop
adc
and
sbb
jno
loope
jmp
fisubl
dec
incl
push
mov
dec
stos
xchg
repnz
sbb
mov
in
fstps
insb
adc
xor
sti
push
movsb
aad
push
cmp
shr
rolb
or
xchg
mov
push
sbb
stos
loop
fidivrs
in
test
jle
scas
xchg
pop
mov
sub
rclb
mov
mov
jno
repnz
pop
incl
push
shl
lret
and
orl
or
jge
int
and
push
push
jl
jle
mov
andl
aas
test
inc
or
fldt
hlt
mov
and
int
outsb
test
mov
movsl
pop
or
mov
imul
and
decl
shr
cwtl
mov
imul
cmp
adc
cmp
and
into
fidivrs
lret
push
adc
leave
fsubr
testl
push
das
and
cmp
popf
pop
out
add
cmp
mov
in
xchg
add
mov
mov
jecxz
push
add
cmp
pop
sub
add
fwait
or
nop
sbb
jbe
inc
dec
jo
push
out
fucomi
sbb
pop
cmpsl
ljmp
mov
data16
lcall
ret
lahf
dec
insb
idivl
pop
das
sub
cmc
fiaddl
sub
sti
lcall
cli
cmpsl
mov
cmc
cld
cwtl
cmp
or
aam
dec
pop
jo
mov
dec
jb
mov
push
adc
movsl
lret
jb
stos
gs
mov
paddd
std
mov
sti
xchg
inc
xor
cwtl
lcall
xor
ds
cmp
dec
das
jbe
int3
test
leave
ja
adc
outsl
push
pop
nop
test
sub
cmc
pushw
pop
icebp
lahf
inc
das
sarb
iret
std
push
aad
pusha
inc
aam
jl
repz
aam
orb
xor
add
pop
adc
jp
jl
mov
jns
mov
and
movsl
jg
addl
dec
aaa
mov
mov
push
cmp
stos
cwtl
cli
jo
mov
movsb
jl
add
add
cmpl
outsl
test
lock
dec
push
cmpsb
or
pop
push
into
cs
mov
cmp
sti
stos
test
jae
xor
or
jb
xor
push
push
aas
js
test
pop
out
leave
jae
push
dec
insl
lahf
mov
jo
and
sbb
cmpsl
dec
push
mov
sbb
jg
ds
or
jl
push
mov
jnp
sub
lock
cmc
push
icebp
outsb
cmp
add
pop
pop
sbb
adc
loop
rcll
mov
push
dec
or
sbb
out
cs
divb
and
lret
adc
lret
test
incl
in
lcall
aam
dec
cmp
das
xchg
in
popf
and
movsb
popa
adc
pop
sti
cmp
je
sti
adc
nop
insb
aad
pcmpeqd
inc
sbbl
and
jl
sub
lahf
xchg
fnstenv
imul
sbb
pop
and
std
fs
jmp
jae
xchg
dec
in
popf
int
dec
rclb
add
push
mov
je
mov
or
xor
pop
dec
xchg
out
mov
xor
mov
adc
pop
sarb
cmpsb
fisubrl
push
jae
sahf
out
mov
imul
lock
pop
xchg
je
out
mov
or
or
pop
ror
gs
cld
call
xor
fildll
leave
orl
push
bound
lods
loop
inc
jecxz
dec
insl
iret
adc
push
add
and
xorb
lds
les
and
pop
jg
into
or
bound
out
mov
adc
imul
mov
iret
sub
test
sbb
add
stos
add
and
std
xchg
pop
cmp
hlt
and
pop
sbb
pop
xor
add
pusha
push
je
xchg
stos
shrb
dec
inc
inc
inc
or
sbb
loope
outsl
pop
sbb
jle
cmp
lods
jns
pop
push
das
mov
dec
ss
rcll
cmpsb
ret
fsubr
js
sub
jbe
dec
adc
stos
xchg
or
dec
ret
push
fs
adc
pop
stc
outsl
mov
adcl
mov
cli
cmp
or
mov
mov
mov
push
jne
mov
sub
pop
or
stos
mov
orl
das
add
push
mov
inc
sub
pushf
xor
out
ja
loop
std
movsl
cmp
xor
jl
xchg
pop
mov
decb
fs
mov
std
add
aad
in
xchg
xchg
std
lret
dec
sub
sbb
and
mov
xlat
jne
dec
push
jp
stos
andl
repz
adc
dec
jb
adc
jg
test
cwtl
out
dec
enter
incb
sub
lods
sub
pushf
fwait
sbb
cmp
scas
and
push
incl
xlat
mov
or
mov
fldl
inc
inc
adcb
xchg
ljmp
movsl
out
incb
mov
divb
loop
jbe
mov
imul
int3
js
jns
push
pop
xchg
lds
sahf
xor
outsl
and
cmp
fcmovbe
testb
leave
cli
adc
loop
outsl
mov
dec
push
ljmp
pop
adc
fsubr
jl
sbbb
and
roll
xor
lods
add
jle
push
das
inc
mov
or
fmull
inc
sbb
jbe
jbe
jae
and
adc
in
insl
pop
sbb
add
hlt
mov
inc
aas
out
dec
jmp
xchg
push
out
pop
sbb
push
mov
add
mov
or
add
add
mov
push
dec
fsubrl
add
out
orl
pop
rcrb
std
inc
pop
pop
mov
repz
sbb
leave
lods
jge
fisttpl
pop
leave
or
ljmp
push
int
mov
je
jmp
mov
jne
outsb
insl
int
test
push
cmp
mov
daa
sti
jb
aas
rcl
jno
shr
pop
mov
out
push
mov
or
inc
sub
jb
mov
add
push
jae
cmp
xlat
xchg
inc
iret
pushl
cmc
pop
xor
loopne
push
sbb
and
and
fs
and
xchg
mov
lds
mov
push
out
int3
dec
jbe
popa
mov
test
pop
push
cmpsl
jns
and
add
pop
cwtl
mov
xchg
mov
cmp
loopne
add
xchg
jmp
mov
add
das
test
xor
push
or
mov
sbb
dec
jns
rcrl
stos
ret
mov
imul
cmp
mov
ss
and
xchg
fildl
mov
into
jg
fwait
pop
dec
daa
shlb
std
cmp
push
cmc
inc
inc
stc
mov
push
out
in
push
jo
and
mov
lock
cmpb
rcrl
cmc
std
xor
pusha
out
dec
mov
ror
cmp
jl
xchg
mov
mov
or
div
dec
int
pop
fsubrs
scas
lods
movsl
dec
clc
push
cmpsb
insl
sbb
dec
xchg
and
inc
daa
orl
xor
movsl
pop
fistpll
mov
iret
lret
or
imul
adc
cli
inc
jne
mov
cltd
push
mov
adc
je
pop
test
rorl
pop
cwtl
xchg
inc
dec
sbb
adc
inc
jecxz
ds
ss
lock
cmp
push
cmp
pop
mov
mov
arpl
add
fcompl
scas
jnp
adc
pop
call
scas
leave
mov
shlb
hlt
dec
adc
add
imul
xchg
out
xor
xlat
mov
pop
mov
mov
negb
rclb
or
std
out
dec
repz
xchg
inc
xchg
jg
int
jns
push
mov
aad
push
add
pop
cmp
lahf
pop
cmp
pop
fs
es
aas
mov
fbstp
das
out
ret
stc
enter
cmp
inc
mov
xchg
mov
sbb
nop
jmp
mov
mov
mov
fwait
inc
pushf
add
cmp
fstpt
inc
insl
sub
hlt
inc
inc
rorl
cltd
pop
adc
lock
inc
adc
jp
outsb
fistps
or
stos
jbe
push
add
aam
or
cmpsb
pop
insb
pusha
sti
cmp
dec
mov
xlat
pop
mov
fucomi
fwait
jmp
pop
arpl
out
pop
negl
sbb
or
xor
pusha
pop
xorb
sub
pop
rorb
data16
scas
adc
int
or
mov
scas
aad
pop
push
lds
mov
insb
stc
loop
test
pushf
lea
pop
rolb
rcrl
pop
mov
hlt
lock
lret
cmp
jne
pop
or
fs
mov
and
push
mov
mov
movsl
lea
mov
dec
loopne
sahf
das
mov
add
fcoms
xor
lods
add
into
mov
mov
loop
jp
cwtl
mov
jg
popf
mov
les
cmpsl
cmp
cmp
ret
inc
and
jo
outsb
dec
bound
daa
lods
in
inc
push
loop
mov
inc
in
cmp
push
test
push
mov
shll
dec
rorb
test
mov
imul
pop
push
in
mov
sub
inc
mov
lcall
mov
div
sub
fs
test
push
add
inc
in
orb
mov
add
push
ret
xchg
sub
popa
cmp
cld
stos
js
xchg
lods
sub
sbb
subl
out
pop
in
or
pop
es
imul
daa
movb
lcall
pop
xchg
pop
test
pop
push
imul
subb
out
das
add
cmp
mov
into
jl
ficoml
dec
mov
push
bound
movsb
jbe
aam
stc
mov
push
mov
loopne
arpl
lret
dec
adc
dec
pusha
test
shl
sbb
and
and
add
mov
cmp
insb
gs
pop
mov
aad
sarb
sbb
les
sbb
push
mov
fstpt
stos
or
sbb
lahf
cmp
sbbb
in
cmp
add
mov
mov
sahf
jge
jp
repz
dec
repnz
in
mov
cmp
xchg
push
cld
inc
push
jo
aas
dec
es
pop
xchg
dec
sbb
jecxz
lods
xchg
sahf
std
mov
and
orl
jo
ljmp
icebp
jno
dec
pop
in
sbb
pop
jne
mov
pop
je
mulb
xchg
sbb
shr
mov
inc
xchg
add
cmc
push
jo
or
adc
icebp
lret
insb
lock
dec
nop
pushf
cmpb
and
mov
jmp
xor
mov
jnp
sbb
xchg
inc
stc
hlt
xchg
bound
mov
mov
push
xor
insl
xor
lea
inc
and
das
adc
inc
mov
and
icebp
out
cltd
adc
pop
outsl
call
pushf
fisttps
fisubrl
dec
loope
test
ljmp
mov
cmp
jg
sub
mov
cs
xor
in
mov
dec
or
cmp
jne
scas
xchg
lods
ljmp
xchg
int
push
mov
jbe
pop
aaa
sbb
das
adcb
cmp
cmp
dec
jne
in
adc
pop
jmp
push
jno,pn
dec
not
jg
addb
lret
lcall
ja
sbb
fwait
js
jo
das
je
test
adc
leave
rorl
test
inc
loopne
in
mov
dec
std
cs
ret
aas
cmp
rclb
bnd
push
sub
push
xor
pusha
ret
cmp
mov
mov
fisttps
aam
jns
andb
lock
test
pusha
ficompl
and
ror
test
dec
cmp
retw
cmp
jnp
lahf
inc
add
sub
xor
cmc
cmp
jmp
jecxz
int
mov
or
add
sbb
cli
gs
mov
ljmp
call
outsl
lock
loopne
rorb
andb
and
lret
cmp
and
mov
xchg
imul
cmpsb
loope
mov
adc
xchg
mov
fistps
push
lea
out
fprem
test
mov
in
mov
in
push
or
je
lock
jbe
loope
in
or
pop
js
cmpsb
sub
icebp
ret
mov
add
aaa
scas
adc
sub
subb
js
sbb
inc
cmp
pop
clc
pushf
or
das
xchg
dec
bound
stos
ja
mov
sub
cmp
xchg
jg
fcomps
lcall
and
jo
stos
sbb
std
mov
push
push
push
xchg
sarl
addb
xchg
cli
cltd
inc
add
in
adc
xor
push
jnp
mov
xor
bound
pop
cmove
and
ss
push
lds
xor
aas
jbe
pop
mov
xorl
in
ficomps
aam
pop
push
pop
test
jle
pushf
add
and
mov
xchg
leave
push
popa
pop
mov
mov
out
add
pop
pop
sbb
jno
xor
insb
jmp
sbb
xchg
subl
enter
sub
mov
xchg
loope
push
sub
pop
cmpsb
hlt
jecxz
or
data16
mov
sbb
mov
das
cmp
jns
dec
cmpsl
insl
pop
mov
icebp
andnps
dec
fucomip
fbld
orl
mov
test
lods
pop
pop
pop
ljmp
sti
and
ds
cmp
push
lret
xchg
loope
pushf
xchg
into
inc
xor
neg
les
std
xor
loop
iret
add
out
sub
lret
mov
pop
xchg
xchg
cmp
dec
xchg
int3
xchg
pop
leave
faddl
ss
add
adc
lcall
xchg
xchg
xor
cmp
push
sbb
mov
push
adcb
or
repnz
and
mov
add
xchg
lret
sub
sbb
sbb
mov
or
sbb
inc
jnp
aad
xchg
dec
sub
mov
add
jne
jno
inc
and
mov
pop
aas
andb
sub
xor
iret
cmp
mov
adc
lock
mov
mov
aas
rclb
push
shrb
xor
les
hlt
sbb
mov
lcall
sbb
jno
aam
jne
cmp
scas
fwait
mov
fcmove
push
sbb
jg
adc
xor
iret
push
out
adc
and
pop
clc
repnz
jp
cld
cmp
mov
scas
cmp
repz
fcmovne
pop
stos
inc
cli
popf
cmp
movsb
sbb
or
test
das
mov
push
dec
fwait
push
in
add
cmp
adc
sub
loope
cmpsb
and
in
into
mov
dec
outsb
sub
cmp
inc
mov
push
dec
pusha
xchg
mov
sbb
xchg
or
decl
out
push
orl
and
lea
mov
xchg
shll
dec
and
rclb
xchg
or
imul
out
pop
jb
and
notl
fimuls
xchg
loop
mov
stos
mov
inc
subb
and
or
outsb
mov
mov
mov
addr16
or
pushf
xchg
cmp
cmp
shll
loope
mov
or
sub
ds
insl
ljmp
push
cmp
lcall
dec
mov
roll
outsb
lret
inc
hlt
jno
add
aaa
fs
and
popa
xchg
jp
lcall
jmp
or
imul
incb
push
sub
add
iret
enter
lret
push
int
insl
mov
movsb
mov
lahf
adc
outsl
mov
loop
out
push
stos
mov
cmpsb
cmp
adc
mov
xor
inc
lods
je
push
or
mov
jmp
mov
outsb
fldt
xchg
inc
mov
xor
jg
cmp
xlat
sub
adc
lret
sub
xchg
mov
shll
push
shrl
in
mov
aaa
pop
scas
in
push
and
xor
xchg
and
add
sbb
dec
fiadds
je
icebp
lods
aad
jle
ret
mov
mov
scas
jle
or
nop
lahf
inc
mov
mov
fldcw
pop
adc
xchg
mov
xchg
dec
out
push
dec
xchg
sbb
icebp
adc
add
nop
sub
test
insl
test
popa
jnp
cmc
lods
rorl
adc
pop
das
mov
rorb
xchg
cld
insb
sahf
sbb
inc
or
int
jo
dec
icebp
iret
sti
cmc
jb
sbb
cmp
sub
iret
xor
xchg
lea
mov
inc
stos
push
mov
xchg
fidivrl
daa
pusha
sbb
sub
xchg
sub
jb
adc
enter
int
mov
test
xchg
fsubrl
adc
arpl
shll
cmp
pop
test
imul
inc
jae
ret
jns
and
pusha
mov
imul
bound
mov
int
xchg
and
xchg
xchg
inc
pop
xor
jl
shl
sbb
fisubrs
jbe
mov
sbb
pushf
mov
jo
inc
js
iret
push
insb
mov
jae
dec
fwait
aas
shll
mov
pop
in
dec
sbb
inc
mov
das
sub
dec
clc
and
arpl
inc
stos
arpl
mov
mov
gs
arpl
into
ja
lret
add
xor
mov
mov
or
add
out
sub
sbb
or
fsts
xor
inc
and
or
sbbb
pushf
fstps
into
ret
xchg
sahf
bound
das
ss
push
dec
andl
icebp
adc
push
sub
jno
dec
jae
call
mov
iret
rcll
int3
les
clc
fidivl
std
xchg
dec
and
nop
incb
mov
ror
mov
shlb
cmp
divl
dec
mov
pop
xor
roll
pop
lahf
jbe
mov
dec
cmp
clc
dec
std
or
xchg
jl
cmp
mov
data16
test
test
fcomi
dec
dec
ljmp
xor
and
fmuls
orl
pop
addr16
dec
jne
mov
rcrb
mov
sbb
push
fs
lcall
mov
test
add
lods
fimuls
or
in
stos
or
in
scas
pushf
push
xchg
sbb
call
or
pop
mov
fisubrl
repnz
sbb
sarl
out
stc
out
jecxz
ja
mov
xor
mov
sbb
pop
cmp
mov
ljmp
popf
lahf
xchg
mov
add
sbb
sub
mov
aad
clc
ret
jae
push
lock
in
out
xchg
mov
inc
dec
popf
js
iret
jge
or
xor
cmp
gs
cmp
mov
pop
dec
pop
les
lods
and
xor
jge
mov
xchg
fcompl
push
cmp
imul
cmp
int
inc
mov
pop
lea
mov
insb
fistps
loopne
push
popa
scas
push
or
mov
mov
rol
jge
and
mov
jp
mov
outsl
sbb
cli
out
mov
imulb
jo
cmc
jb
sahf
xchg
sbb
push
jno
rcrb
push
push
movsb
sbb
ja
push
and
cmc
mov
sbb
and
aam
xor
or
es
js
or
in
sub
dec
mov
mov
fs
mov
cli
jl
popf
out
gs
ret
mov
cmpsl
frstor
pop
shrb
xchg
les
jmp
cmp
jne
push
mov
fistpl
loope
inc
push
ret
and
mov
cmp
lock
mov
xor
sub
ffree
inc
enter
cmp
push
les
ret
outsl
add
mov
jnp
ds
icebp
clc
xor
cli
sbb
sbb
push
call
mov
jbe
adcb
out
sub
in
mov
mov
popa
xchg
or
decb
mov
lret
xchg
push
jl
subl
jbe
test
jno
xchg
push
mov
movsb
ljmp
jno
xor
inc
dec
jmp
sbb
leave
mov
sub
fildl
xchg
fwait
dec
fisubrl
js
or
sub
jle
xchg
jg
push
arpl
enter
and
add
shll
xchg
gs
jmp
xor
xchg
icebp
push
pop
icebp
add
andl
xor
test
mov
push
xor
mov
pop
cld
dec
sbb
shlb
jge
shlb
aas
push
inc
jg
dec
pushf
xor
push
bound
fildl
fstps
decb
insl
insb
add
push
jp
or
in
test
loope
shl
repz
enter
and
dec
aas
sub
out
push
inc
jb
nop
pop
dec
dec
mov
fisubl
jne
aaa
mov
mov
cs
xchg
in
push
mov
sahf
fdivrs
xchg
push
push
outsl
out
fistps
or
mov
lods
pusha
mov
xor
in
push
lods
fadds
testb
insb
repz
mov
jne
std
xchg
icebp
inc
mov
jmp
sub
das
lahf
movsb
test
cmp
push
jnp
mov
gs
arpl
mov
adc
js
outsb
xor
push
pusha
les
das
xlat
std
mov
cli
xor
pushf
and
into
lods
mov
pop
sbb
lret
cs
ret
jnp
cmp
pushf
imul
sbb
push
dec
enter
in
xchg
mov
inc
iret
push
ficompl
std
cwtl
mov
outsl
scas
sbb
int3
jl
lods
movsl
inc
or
or
sarb
shrb
dec
xchg
imul
stos
jno
and
push
mov
aam
popa
and
mov
inc
sbb
cmp
sahf
mov
jns
xchg
das
jecxz
pop
push
jns
and
dec
jl
int3
jno
xor
lock
lret
pop
mov
sub
cmp
and
test
jle
push
mov
lret
fcmovnu
jae
clc
jg
and
flds
lea
outsb
mov
add
jno
mov
mov
push
push
cmpsb
pop
xchg
cmp
xchg
ss
inc
nop
enter
mov
cmp
lcall
or
out
jecxz
adc
out
cld
vxorpd
outsl
xchg
jl
lods
lcall
rcll
imul
mov
cld
push
sti
fs
test
dec
and
push
inc
sahf
mov
loop
or
fldcw
mov
sub
mov
adc
outsb
lret
jb
movsb
push
inc
and
sub
xchg
pop
mov
std
mov
loope
ret
mov
aaa
xor
xor
mov
fs
imul
cltd
fcmovne
adc
fdivrp
or
aad
mov
push
loope
cmp
popf
stos
cmp
mov
push
cmpsb
in
adc
cli
cmc
data16
sarl
push
pushf
pop
xor
std
and
sar
jmp
je
lahf
stos
in
or
jns
rclb
push
notb
ficomps
rcrb
loop
daa
push
outsb
sbb
loope
out
cmp
jg
scas
sbb
mov
xlat
mov
or
inc
jne
add
je
mov
push
ds
ja
and
into
enter
and
jnp
int
xor
les
fstl
jne
or
push
mov
jnp
xor
dec
jnp
pop
imul
inc
rorl
push
mov
scas
hlt
int
in
or
fcomps
in
js
jb
test
dec
mov
int3
je
xchg
or
int
lcall
popf
cmp
push
loop
les
outsl
xor
popf
mov
es
iret
sbb
push
mov
popf
cmp
fnstsw
adc
jg
dec
ds
out
add
fiadds
mov
pop
xchg
add
or
xchg
stos
jbe
rclb
out
adc
push
cmp
mov
mov
ficomps
pop
aaa
xchg
lcall
mov
jo
lds
jmp
leave
mov
dec
mov
mov
sub
xor
xchg
hlt
sbb
in
je
dec
sarb
inc
rcrb
or
mov
mov
adc
inc
out
push
pop
lods
mov
push
scas
aas
or
mov
fldenv
dec
sbb
ljmp
stos
rorb
scas
call
add
imul
push
mov
fcmovnbe
xor
cmp
and
enter
cmp
jle
mov
mov
jbe
test
xchg
adc
push
aam
xchg
es
inc
mov
fst
stos
or
and
add
mov
mov
lds
cmp
cmpsl
cli
add
outsl
lcall
push
cmp
adc
subl
push
cmp
cmp
dec
inc
adc
sbb
mov
inc
pop
cmpsb
xor
iret
es
pop
cltd
fstps
scas
ror
dec
sarb
pop
adc
test
mov
push
mov
shll
int3
pop
ljmp
dec
dec
cld
gs
add
aas
jp
cli
and
aam
push
testb
loop
pop
add
cli
mov
pop
dec
mov
std
js
pop
icebp
ffree
test
rclb
cmpsb
push
sbb
rolb
mov
jbe
jne
dec
inc
cltd
pusha
mov
pop
jno
cmp
inc
and
mov
imulb
push
test
arpl
fisttpll
inc
inc
repnz
jo
cmp
sub
adc
cmp
dec
or
ljmp
cmc
lret
out
repz
xor
fsubs
fnsave
repz
lock
data16
cwtl
xor
cmpsl
subl
pop
xor
sbb
fmull
shrb
mov
ffree
ret
roll
cltd
stc
mov
call
in
jp
or
sub
pop
push
lcall
mov
andl
insl
test
mov
out
push
pop
popa
push
into
xchg
mov
dec
into
dec
pop
and
and
icebp
dec
mov
jp
pop
mov
inc
or
and
imul
sbb
lcall
add
mov
mov
cmp
inc
test
dec
fwait
lret
jo
adc
push
xor
xor
add
sbb
scas
test
arpl
mov
imul
mov
data16
cwtl
push
jmp
pop
incl
mov
in
push
cmp
jae
xchg
int
push
sbb
dec
into
mov
fbstp
cmc
cmpsb
push
insb
es
or
nop
push
aaa
scas
cmp
addr16
mov
movsb
or
push
mov
pop
or
ficomps
inc
mov
or
jb
movsb
and
in
fimuls
xchg
fsts
test
adcb
out
icebp
and
in
pop
bound
jo
mov
sub
fldln2
test
add
hlt
or
iret
push
jl
sub
mov
sahf
and
ficompl
dec
cmpsl
push
xor
lods
cmpb
or
jne
cs
xchg
mov
shr
lret
sbb
popa
xor
lods
push
ds
sbb
je
sub
jb
addr16
cld
pusha
hlt
jb
stc
add
ds
xor
leave
push
dec
aas
push
das
mov
dec
push
iret
adc
sbb
nop
popf
int3
and
shl
dec
faddl
push
pop
cmpl
fsub
inc
push
outsl
sahf
js
mov
loop
adc
pushf
sti
rorl
sub
mov
jbe
in
mov
xor
inc
pop
mov
xchg
mov
adc
stos
mov
pop
and
inc
push
xchg
sbb
scas
loope
xchg
aaa
push
dec
xchg
mov
gs
cmp
push
loopne
cmc
iret
outsb
or
dec
outsb
in
add
xlat
fcoml
cmpsl
nop
dec
push
bound
xor
sbb
cwtl
mov
push
push
std
jge
clc
adc
ror
jl
std
rcll
and
inc
inc
loopne
ret
lods
lcall
in
sub
and
pop
pop
adc
mov
adc
or
outsl
inc
xor
int3
mov
test
enter
js
faddl
xchg
fxtract
xchg
loop
sbb
add
push
sbb
add
xor
xor
bound
ljmp
dec
sub
sbb
jp
mov
mov
mov
addr16
sahf
and
sub
jo
fmuls
bound
jmp
adc
jmp
mov
frstor
fs
jo
les
xlat
fdivs
outsb
push
push
cltd
xchg
js
dec
sti
call
cmpsl
ret
dec
adc
mov
and
jb
aaa
jns
flds
jmp
ds
scas
add
push
push
lret
mov
adc
sub
push
xor
in
stos
or
sti
mov
mov
scas
pusha
push
test
cmp
push
xchg
js
fists
and
mov
jmp
aaa
inc
mov
insl
push
jl
mov
cmpsl
pop
ja
mov
in
int3
sbb
test
xor
push
cmp
pop
xchg
jmp
adc
mov
and
or
aad
and
or
add
ljmp
movsb
cltd
subl
dec
jno
or
scas
adc
push
dec
test
push
lock
inc
xchg
inc
add
outsb
mov
mov
xor
cmpsl
jne
fdivrl
fldcw
dec
sbb
inc
call
sbb
shrl
xor
and
pop
cli
and
mov
xor
scas
xchg
xchg
or
call
into
inc
adc
lret
mov
inc
pop
and
arpl
sahf
lahf
les
cmp
into
add
xchg
lahf
jp
push
jmp
pusha
push
pusha
lds
ja
sbb
or
dec
push
or
cmp
aaa
dec
sub
adc
mov
lods
cmpsb
push
xchg
and
mov
pop
xor
leave
add
stc
xor
push
push
pop
testl
movsl
mov
cmc
outsb
jae
imul
cmp
es
xchg
rcrl
push
test
test
insl
push
mov
pushf
in
xor
imul
mov
inc
sbb
adc
sub
loop
in
adc
mov
in
inc
push
mov
fcmovnu
mov
push
sti
mov
xchg
stos
mov
mov
jns
adc
mov
sbb
mov
jne
sub
cmc
aas
filds
add
and
xchg
out
hlt
movsb
mov
pop
fs
fcomip
mov
call
pop
mov
movsl
mov
xor
lret
out
dec
mov
xchg
jbe
sbb
inc
pushf
outsb
cwtl
inc
mov
stc
push
add
xor
jmp
orb
adc
data16
jecxz
push
inc
adc
jbe
mul
or
cmpsl
lock
and
popf
popa
nop
cmp
dec
scas
add
cmp
imul
pop
xchg
mov
adc
mov
mov
pop
add
push
ucomiss
sub
repnz
call
adc
das
xchg
mov
and
xor
sbb
jmp
push
push
in
stos
sub
inc
or
sub
dec
sbb
and
xchg
dec
inc
mov
push
adc
or
sub
inc
inc
ret
and
shr
mov
shll
fwait
addr16
adc
out
push
sub
pop
inc
std
push
push
inc
popa
je
add
mov
movsb
jne
push
lret
lock
fdivrl
mov
fdivs
mov
jae
jnp
mov
hlt
mov
stos
fwait
lods
adc
mov
fstpl
dec
lret
cwtl
cmpsl
decl
ret
test
xlat
sub
add
les
rcr
lods
push
dec
pop
xchg
sbb
or
pop
out
and
xorb
xchg
add
imul
mov
out
data16
mov
inc
or
lods
mov
pop
insl
pusha
popa
mov
repnz
mov
and
in
test
out
mov
pop
jecxz
jno
out
pop
adc
xor
push
fstl
mov
or
cmc
or
subl
dec
fiaddl
rcl
or
cmp
adc
dec
fadd
cmp
xorl
adc
jne
leave
mov
pop
addr16
xor
jge
dec
push
aas
xor
cli
aam
push
jge
push
pop
mov
dec
call
daa
and
xor
mov
inc
rcll
cld
xor
and
push
mov
insl
mov
xor
mov
push
mov
mov
push
inc
rcrb
and
add
aam
jge
imul
sub
iret
lods
xchg
jnp
out
cmpsb
mov
cmp
addr16
pop
gs
dec
and
in
sbb
arpl
inc
nop
fmul
clc
outsb
imul
jle
mov
push
lock
sbb
sub
lea
mov
sbb
xor
add
leave
mov
outsl
cltd
adc
xor
and
rcrl
mov
clc
sbb
ja
movsl
dec
pop
push
mov
mov
iret
icebp
cmp
or
insl
mov
aad
jl
dec
push
and
pop
out
fldl
sbbb
sub
cmp
stc
aaa
mov
adc
sbb
pop
rcrb
jge
pop
repnz
mov
int
das
add
cmpsb
mov
imul
inc
rorb
mov
out
xchg
incl
pop
push
sbb
ss
add
fsubrs
loop
insb
ja
dec
mov
pop
jo
cmp
dec
addr16
js
dec
pop
add
mov
sub
cmp
jge
fisttpll
mov
fcomps
std
push
stc
lds
adc
ror
repz
mov
test
jmp
jbe
shll
loope
data16
mov
cmp
or
or
ljmp
inc
fdivp
sub
out
lahf
cmp
mov
mov
jle
sub
pop
fcmovnu
mov
out
sub
sbb
push
out
std
push
xchg
popl
shll
lds
popa
inc
xor
xor
filds
or
sub
iret
xchg
fmulp
mov
jae
xor
aad
sbb
shrl
mov
int3
call
pop
fldl
jnp
sahf
pusha
jmp
fucom
in
stos
fdivl
xchg
adc
jg
fildl
out
xchg
mov
rcr
iret
pop
sbb
out
push
pop
dec
scas
or
sub
and
inc
or
xchg
repz
out
jb
dec
adc
cmp
xor
and
fiaddl
aad
in
daa
jg
mov
adc
push
xchg
jb
js
imul
cmp
lock
sub
fdivl
add
cmc
or
fnstsw
das
shlb
cmpsb
stos
jecxz
cmpsl
mov
jg
add
int
inc
lods
mov
es
test
xorl
insl
outsl
and
addl
dec
fdivrs
mov
divb
cld
sbb
gs
jb
xchg
xchg
pop
lcall
and
sbb
adc
sub
push
jmp
mov
and
pop
xchg
jecxz
cmpb
movsl
jae
stos
ja
adc
movsw
aad
fcoml
dec
popf
lods
jbe
mov
and
or
inc
rclb
lods
push
sub
cmp
insl
cwtl
dec
orb
mov
mov
hlt
xlat
lds
fisttpll
push
push
inc
mov
mov
xchg
outsl
jp
jns
cmp
push
push
call
subl
and
inc
lock
xchg
movsb
sub
lahf
sti
outsl
inc
test
in
arpl
fidivs
xor
xchg
pop
sahf
mov
and
mov
shl
orb
cli
rcl
xor
mov
xchg
ljmp
scas
or
inc
repz
cld
sub
in
sahf
dec
aaa
cmc
fwait
xchg
sub
inc
outsl
cli
sub
mov
and
and
aaa
into
fdivl
add
movsb
adcb
cmp
sub
sbb
shlb
enter
jl
std
dec
adc
inc
jmp
mov
lds
sbb
jmp
mov
data16
clc
add
mov
mov
adc
aas
pop
pop
jmp
lds
mov
jge
inc
or
jle
lret
ljmp
scas
xor
cld
jl
lcall
dec
mov
js
bound
test
aaa
negl
xlat
int
test
iret
orb
in
movsb
and
sub
sti
push
xor
neg
icebp
inc
push
fldcw
add
pop
mov
inc
cmp
notl
xchg
sti
mov
xchg
mov
jns
pushf
mov
inc
push
cwtl
mov
mov
addr16
sbb
jmp
cmpsl
xor
inc
mov
fs
ja
or
outsb
push
neg
add
jb
sti
or
xor
in
push
lret
addl
mov
or
fisubrl
in
push
scas
lret
imul
popf
shrl
insb
mov
sbbl
repz
dec
rcrl
inc
sbb
ret
xchg
gs
xchg
lds
sbb
inc
pop
push
popf
lret
or
xor
mov
xchg
rolb
mov
sbb
sub
xchg
jl
sub
mov
mov
in
inc
es
sub
adc
xor
jns
clc
fsub
enter
iret
dec
sti
push
fsubr
jp
push
jp
ret
or
js
sahf
mov
push
daa
sbb
or
test
xchg
lea
sub
mov
sti
or
xchg
mov
cmp
imul
push
push
dec
cmp
fldl
lods
xchg
fcompl
enter
loop
mov
ret
into
sub
xorb
cli
xor
mov
pop
mov
pop
pop
testb
xchg
lea
js
outsb
and
dec
in
repnz
push
xor
fwait
sbb
ja
dec
xchg
rol
cmpsb
rorl
xor
add
lret
push
push
inc
adc
inc
icebp
popa
push
fsts
out
loope
nop
dec
mov
cmp
or
xlat
clc
jg
jge
push
mov
push
lods
cmp
inc
push
adc
adc
test
loope
outsl
xchg
mov
push
mov
adc
ja
fldt
ja
fiadds
mov
mov
int3
add
sti
and
in
adc
leave
add
pushf
mov
pop
cmc
gs
lods
fsubrs
insl
or
pushf
xor
mov
or
jne,pn
dec
push
mov
push
inc
bound
jp
and
clc
cmpsl
adc
or
mov
cmp
cmc
cld
scas
jne
pusha
data16
lcallw
pop
fwait
loop
cmp
jge
adc
add
imul
aad
loopne
fisttpll
add
mov
inc
out
je
dec
xchg
imul
or
ss
lahf
sub
lcall
icebp
roll
pop
inc
jp
test
div
cwtl
jno
adc
lock
push
xchg
popa
in
push
popf
pop
sub
dec
mov
loopne
fiadds
jb
sub
and
push
movsl
js
add
js
add
andl
jle
pop
cmp
dec
out
fs
pop
xlat
je
add
cwtl
or
xor
xchg
jmp
lret
push
mov
push
mov
sti
mov
push
add
pop
rcr
pop
lods
pop
subb
je
imull
aaa
push
xchg
iret
pop
jb
movsl
mov
aaa
mov
mov
mov
xchg
xlat
mov
das
cmp
inc
jle
adc
adc
or
cs
scas
and
sub
repz
pop
jbe
pusha
push
mov
es
mov
ja
dec
les
shl
jne
xchg
jp
add
into
jnp
jnp
sub
inc
xchg
sub
shl
push
into
xor
stos
ret
mov
in
arpl
mov
lock
shrl
sbb
insb
or
sbb
movsl
sahf
ret
xchg
mov
outsb
mov
dec
enter
xchg
mov
mov
sub
sarb
out
adc
xchg
sub
push
popa
mov
xchg
pop
jl
xchg
fisttpl
mov
dec
test
repnz
or
xor
gs
and
je
and
imul
test
or
jmp
ljmp
mov
ja
mov
mov
jge
fsubs
leave
ret
cmc
mov
cmpsl
mov
in
adc
imul
jnp
mov
movsb
sbb
std
xor
adc
cmc
and
enter
repnz
enter
mov
push
call
and
shrl
adc
rcrl
stos
aas
lock
mov
pop
imul
out
mov
les
pop
mov
and
test
das
aad
cmp
cmpb
pop
jl
mov
lea
sbb
jl
xchg
outsl
in
add
and
in
test
sbb
xor
movsl
mov
popa
or
and
xchg
mov
pusha
jp
dec
xchg
adc
xor
popf
loop
jns
jecxz
popa
test
cmp
mov
pop
xchg
call
jns
icebp
lret
pop
mov
iret
test
leave
dec
or
pop
flds
xor
lock
xorb
mov
lock
addb
bound
stc
bswap
jbe
inc
xor
ficoml
jns
cwtl
xchg
inc
pusha
call
cmpsl
lods
leave
outsb
jo
fs
push
sub
arpl
sub
xor
movsl
addr16
lcall
fdivrl
xor
xor
nop
scas
xchg
mov
push
fdivrl
ret
jae
popf
dec
mov
mov
adc
push
lods
dec
jbe
inc
out
sti
jl
in
aam
sub
push
fs
clc
or
test
out
test
push
cmp
jnp
adc
in
sbb
fs
mov
sub
jne
pop
rorl
inc
mov
fidivl
inc
push
mov
pop
mov
xchg
and
stos
aad
iret
push
or
std
cmpw
fcos
or
fadds
mov
repz
mov
arpl
push
inc
mov
adc
xchg
aam
adc
jmp
cmp
in
and
cmpb
adc
int
pusha
in
int
mov
sub
aas
xor
mov
jecxz
pop
xor
dec
ss
shll
jns
jle
mov
hlt
in
fisttpl
jo
adc
roll
lret
add
inc
push
cmp
add
mov
lcall
xor
xorb
sbb
add
ja
jb
sub
fdivr
and
pusha
das
pop
sub
sbb
inc
xchg
sbb
xchg
addl
les
repnz
popa
or
lret
xor
jge
icebp
std
in
daa
ficompl
in
movsl
ficoms
xchg
mov
pop
data16
and
or
ret
pop
mov
mov
lock
push
add
popa
inc
push
mov
fdivrs
imul
into
xchg
pop
out
shl
adc
das
jl
sbb
jp
and
mov
shlb
cmpsb
and
adc
cmp
fstps
lock
in
xchg
in
mov
mov
dec
mov
adc
push
xchg
jp
and
mov
lock
push
pop
or
and
shr
lret
nop
inc
jnp
dec
push
out
push
out
popf
ret
xchg
sbb
icebp
mov
cmp
stc
insb
cmp
into
int3
jae
pushf
jo
cmp
and
out
jo
fadd
fstpt
mov
push
ret
fcompl
lret
sarl
movsb
mov
inc
sti
imul
mov
sbb
dec
stos
pop
and
pop
adc
scas
mov
mov
dec
test
jbe
inc
dec
mov
xchg
stos
xlat
and
mov
xchg
cmp
gs
xor
and
pushf
data16
pop
xchg
sub
iret
mov
nop
repnz
cmpsl
shl
sbb
iret
leave
loop
adc
leave
mov
int
mov
mov
pop
out
out
mov
sahf
jp
sub
incl
and
in
push
int
xchg
or
push
mov
addr16
lea
adc
dec
cltd
cmpsb
mov
xorl
loopne
rclb
dec
sbb
push
cmp
push
add
pushf
and
rol
cmp
mov
cwtl
or
loopne
ljmp
cmp
lock
mov
mov
sub
iret
mov
popf
mov
pop
cmp
in
stos
xor
lret
icebp
inc
or
lret
iret
in
push
outsl
jo
sbb
lret
jecxz
lret
dec
js
loopne
inc
fcmovne
addr16
out
test
pop
iret
adc
loope
cltd
sub
lds
ret
bound
sub
sub
rcl
sar
cmp
in
and
arpl
sub
pop
jb
jmp
push
sbb
pushf
sahf
mov
jp
inc
lea
sbb
sub
adc
out
xchg
pop
push
dec
ljmp
dec
ret
pop
pop
inc
mov
mov
in
hlt
sbb
sub
aas
xchg
xor
insb
jbe
ds
shrl
inc
arpl
or
mov
xchg
sbb
push
cmp
jmp
out
push
mov
loopne
clc
popf
das
pop
inc
mov
es
imul
cmpsb
sub
aaa
cmc
jae
int
pop
les
xor
insb
cmp
fimuls
mov
jno
je
js
bound
ja
repz
jge
lods
mov
sbb
enter
cwtl
orl
sub
or
add
fstpt
add
imul
sbb
into
test
jb
sarb
sahf
adc
fstpt
inc
pop
out
mov
cmpsl
fcomps
xchg
cmp
jno
dec
in
testb
pop
test
addr16
cs
into
pop
sub
dec
hlt
icebp
mov
cltd
push
cmp
cmc
inc
lea
mov
pop
pusha
fdivrp
and
sbb
insb
cwtl
sbb
inc
jle
pop
mov
lret
xchg
dec
mov
loope
xlat
pop
lret
sbb
or
ljmp
clc
jo
xor
xchg
ror
int
ljmp
add
xchg
dec
es
into
xorl
push
insb
mov
push
adc
int
dec
pop
pusha
jmp
call
lea
push
or
mov
fdivr
adc
insb
mov
push
int3
push
fwait
es
iret
fiadds
cli
xchg
loope
xor
or
call
mov
gs
arpl
cmp
mov
pop
in
cli
dec
repz
cli
sub
pop
mov
xchg
mov
xchg
out
or
cmpl
sub
xchg
jno
adc
push
lods
pop
bound
push
add
jmp
inc
or
jbe
xchg
lds
popa
int
jbe
sub
leave
hlt
imul
push
inc
pop
xor
dec
loope
imul
cmp
mov
add
je
ss
cmp
and
cld
inc
jo
adc
inc
shlb
adc
xchg
xchg
cmpsl
in
push
lock
dec
in
jb
push
xor
inc
mov
jno
cmpsl
scas
adc
cmpsl
or
jae
inc
test
dec
inc
dec
or
aaa
xor
xlat
call
mov
cmp
fistps
add
enter
pop
adc
sbb
test
shrb
dec
jne
mov
dec
xor
aad
hlt
dec
jb
loopne
lock
das
add
mov
lock
gs
cs
dec
inc
fdivr
adc
imul
inc
nop
adcb
push
pop
in
js,pt
mov
addr16
jbe
lcall
aam
sub
inc
xor
inc
mov
out
int3
push
push
adc
scas
insl
jg
xchg
insl
adc
sarb
or
mov
sti
inc
stc
jns
mov
push
mov
repnz
das
fcoms
jmpw
daa
push
and
cmp
cvtdq2ps
jle
and
adc
test
push
fdivrl
test
outsl
std
in
mov
icebp
ds
dec
cmp
mov
mov
and
addr16
hlt
add
or
mov
mov
repnz
sti
jno
lcall
mov
ja
fwait
in
incl
icebp
sub
dec
pusha
dec
inc
test
popl
dec
and
je
or
ret
insl
xchg
data16
mov
out
mov
in
cmp
in
test
shl
xchg
les
cld
inc
dec
cmp
adc
je
dec
adc
mov
in
pop
cmpsl
jno
ja
mov
push
mov
iret
lcall
dec
repz
popf
sub
in
mov
cmp
dec
mov
xchg
jbe
xchg
cmp
pop
jmp
mov
daa
xlat
inc
cli
adc
out
xor
gs
jbe
push
fidivs
pop
mov
mov
cmc
add
cmpb
xchg
lods
push
jp
xchg
sub
ss
push
aas
or
cmp
popa
xlat
in
ftst
loop
or
lahf
and
adc
sub
push
es
iret
jmp
call
sub
leave
outsl
add
dec
mov
pop
cmp
stos
sub
sub
mov
and
lcall
jne
jmp
mov
pop
adc
xlat
cs
mov
sti
push
test
add
popa
dec
dec
es
gs
data16
outsb
mov
dec
arpl
cld
cmpl
loop
adcb
scas
and
sbb
cwtl
sub
movsl
and
mov
push
adc
das
and
lret
xchg
ds
pop
pop
mov
cmpsl
ret
ljmp
cmc
stos
addr16
adc
int3
jecxz
loop
es
aad
add
int
fxch
sbb
xchg
fcoms
dec
and
and
in
mov
movsl
lcall
add
push
xlat
cmp
push
popl
add
aad
in
push
imulb
and
insl
sbb
mov
movsb
jl
ljmp
mov
rcrb
push
sbb
sti
or
gs
or
fnstcw
pop
out
in
jne
scas
xchg
inc
scas
mov
cltd
push
jp
inc
add
int3
addr16
pop
cmp
sub
cmp
inc
adc
pop
inc
mov
adc
sub
jecxz
or
mov
jp
dec
aam
stc
mov
pop
cld
mov
cli
mov
inc
xlat
fstp
sbb
es
push
xchg
cmp
sbb
mov
lds
ret
popa
jns
mov
shrb
outsb
jns
int3
stos
mov
fldl
and
test
and
outsb
and
push
sbb
mov
mov
mov
cmp
or
xchg
fwait
push
movsb
adc
adc
push
add
push
addr16
jnp
fucomi
imul
add
and
lods
sti
sub
test
push
out
loop
outsb
xorb
jno
cmp
ljmp
cmp
stc
jge
mov
pop
xor
sbb
lods
jg
aas
sti
out
pop
dec
andb
sub
jge
adc
sub
mov
outsl
lret
cmp
cmc
push
cli
sub
fcoms
mov
jo
push
outsl
mov
jbe
imul
mov
mov
add
icebp
cmpsb
popf
lods
inc
dec
out
cli
mov
rcrl
int
or
xchg
mov
lds
aad
movsb
in
pop
mov
adc
leave
adc
sub
pop
mov
jl
and
stos
js
xchg
mov
mov
mov
hlt
std
push
inc
jne
mov
rcll
stc
test
popf
push
fldt
jecxz
mov
pop
and
shrl
dec
mov
mov
fiadds
cld
push
std
fdivrs
dec
add
iret
scas
xchg
clc
push
lock
cmp
data16
lea
in
shlb
cmovns
add
or
and
call
psubusw
mov
shlb
mov
insl
call
inc
pop
inc
push
cmpsb
pop
lret
sub
mov
xchg
xchg
and
gs
xchg
imul
mov
xor
pop
cltd
roll
lret
clc
inc
shll
pop
and
xchg
lock
std
inc
or
xchg
andb
push
mov
sub
mov
or
lea
test
jg
add
daa
sbb
hlt
cs
mov
scas
shl
shlb
mov
insl
xchg
add
add
cwtl
fidivrl
mov
test
scas
lock
push
and
sbb
mov
xor
aas
mov
cmp
gs
add
enter
sbb
lret
cmp
sub
cmp
cmp
cltd
cld
psubsb
or
mov
or
dec
aam
mov
push
jo
notl
add
fmull
dec
imul
cs
pop
addr16
sub
cs
jbe
in
xor
aaa
std
adc
pop
mov
adc
dec
or
add
or
pop
sti
int
stos
addr16
test
jl
mov
mov
sub
inc
cwtl
mov
inc
out
mov
int
cmp
lods
stos
addr16
mov
jge
das
popf
int3
test
xchg
mov
push
stos
cld
rclb
ss
inc
insb
add
ljmp
dec
jp
out
fiaddl
or
fiadds
loop
dec
jbe
add
push
mov
imul
pop
ret
inc
lret
or
insl
orb
jne
leave
divl
aas
xchg
push
mov
push
xorb
pop
pop
arpl
or
mov
push
icebp
lahf
and
aas
into
subl
push
loop
mov
dec
test
negl
jp
push
leave
ficoms
xchg
lcall
or
or
cmpsb
das
mov
xor
and
mov
or
sub
sub
popf
inc
ret
inc
add
fnstenv
jge
xor
push
or
mov
jecxz
stc
in
enter
and
sub
pop
and
jne
add
pop
jae
loop
mov
out
mov
cs
aaa
clc
jge
cmc
push
outsl
mov
fmulp
rorb
clc
mov
mov
test
mov
aad
adc
pop
je
adc
pop
orb
xchg
dec
imull
fnstcw
inc
dec
sub
jnp
and
int3
pop
aas
ret
sbbl
into
dec
repnz
ljmp
outsl
test
mov
aad
cmpsb
and
mov
fucomi
ret
and
push
or
jmp
sub
cld
xchg
cmc
je
add
cs
pop
and
xchg
adc
push
test
and
mov
mull
or
fwait
lcall
adc
test
into
in
sub
fwait
mov
imul
in
pop
pop
data16
jns
hlt
adcl
test
pop
dec
jns
cmpsl
cmpb
mov
outsl
std
lea
add
pop
jno
jecxz
mov
push
and
sbbb
sbb
xor
mov
lock
xchg
xor
push
push
adc
ljmp
add
dec
lods
sarb
push
or
orl
hlt
insb
pop
outsl
out
adc
dec
jne
cmp
inc
mov
hlt
xchg
xchg
push
sub
in
fisttps
mov
jo
cs
xor
cmp
pushf
mov
orps
mov
cmp
adc
sbb
lahf
sub
out
leave
push
out
jp
pusha
cmp
mov
aaa
in
adc
sbb
mov
dec
jae
add
push
push
enter
aas
dec
aad
repz
cwtl
pop
stc
in
push
shl
imul
pop
das
push
pop
enter
or
mov
push
inc
jp
je
xor
mov
or
rcll
outsb
and
aam
mov
jo
or
inc
add
mov
sub
int
pop
lcall
xlat
sub
mov
stos
push
cli
mov
sub
cmp
xchg
push
cmpsb
in
jp
cmc
jns
xor
insb
decb
aad
adc
inc
mov
push
sub
fistpll
nop
inc
jecxz
and
jns
xchg
sti
sub
mov
add
loopne
sub
add
mov
dec
mov
push
or
rclb
mov
cmc
pop
lahf
add
ja
jbe
daa
add
popf
movsb
pop
mov
sub
mov
ss
push
mov
or
mov
jmp
sub
rcll
clc
or
mov
rolb
inc
and
adc
in
cmpsl
subl
cmc
adc
js
xchg
sub
out
push
lds
subl
lcall
cmpsl
adc
or
stc
lcall
xchg
pop
fwait
add
js
xchg
cmp
xor
xchg
bnd
daa
or
lret
out
test
push
adc
cld
mov
bound
ja
fstpt
fucom
push
rolb
mov
dec
outsb
sub
movsl
ljmp
test
mov
or
cmp
jo
aam
mov
out
out
pop
daa
fisttpl
enter
cli
lcall
int3
xchg
lods
jnp
pop
addb
lret
call
je
testb
xchg
mov
adc
mov
cmp
inc
or
jno
mov
push
aam
call
jmp
pop
cld
push
pop
pushf
ficomps
imul
insb
lds
sbb
add
mov
and
mov
sbb
movsb
rcl
mov
inc
dec
dec
in
dec
sar
data16
ficoms
jge
dec
mov
loope
jl
out
and
xchg
rclb
pop
and
movsl
das
pop
outsl
iret
mov
mov
imul
cli
pushf
shlb
das
aad
in
cmp
cmp
std
sub
rcl
push
push
sub
mov
jg
insl
dec
or
cmp
xchg
ds
popa
into
cmp
mov
push
inc
cltd
push
cld
xor
inc
xorl
loop
jmp
insb
sub
rclb
icebp
xor
and
jbe
mov
and
in
out
ja
aam
icebp
out
mov
sub
mov
shlb
bswap
gs
dec
add
and
lds
dec
cmp
lcall
push
rorl
lods
jecxz
and
data16
mov
aam
and
incb
je
dec
call
loop
mov
mov
iret
sbb
call
loopne
int3
into
call
dec
mov
add
inc
out
xchg
xor
xor
sub
mov
push
sbb
in
adc
icebp
push
flds
or
jae
or
xor
or
imul
pop
adc
sti
pusha
push
cmp
xlat
lods
clc
fistpll
cmpb
mov
push
pop
add
fsubs
pushf
cmp
pop
pop
test
mov
adc
push
pop
pop
ret
sub
pop
jo
mov
cmp
lods
ja
shll
cmp
and
mov
hlt
add
in
or
dec
pop
sbbb
lret
mov
mov
jo
adc
sbb
mov
pop
aas
imul
jl
test
insb
xor
push
popa
test
loopne
vminpd
push
pushf
xchg
nop
cmp
loopne
loop
mov
std
push
xor
lret
cmp
pop
xor
sub
jl
fldcw
test
insb
mov
push
cld
push
idivl
sbb
pop
cmpsl
cmp
mov
jg
fwait
jo
js
cmc
jnp
push
pushf
xchg
ss
pushf
and
shl
repz
sbb
adc
inc
xchg
mov
jnp
sti
std
adc
iret
iret
fwait
rorl
popf
sub
or
sbb
jmp
loope
mov
sbb
mov
pop
dec
mov
xchg
sub
addr16
adc
imul
je
dec
fcoml
xchg
stc
inc
pop
mov
lret
inc
stc
jmp
aam
das
addr16
add
mov
mov
mov
pop
in
mov
mov
adc
clc
cmp
add
inc
xor
in
cwtl
xchg
push
mov
pop
das
stc
in
fildll
push
mov
sbb
orb
add
xor
jecxz
jae
icebp
dec
rorb
pop
push
loop
sarb
pop
mov
shrl
cltd
xor
and
dec
test
mov
sbb
daa
out
mov
je
mov
in
clc
fiadds
ljmp
clc
lock
add
xchg
sub
pop
mov
in
cmp
hlt
adc
adc
jb
add
push
cs
andb
aad
cld
pop
jno
repz
icebp
add
or
mov
sub
xchg
jp
test
adc
pop
pusha
sbb
dec
pusha
andb
push
test
nop
adc
andl
mov
mov
xchg
sahf
int
les
add
insl
lcall
pushaw
stos
sti
icebp
push
into
push
das
jmp
lret
icebp
xor
cmp
imul
add
push
lret
or
xor
add
sub
cltd
pushf
adc
cli
push
lods
cltd
pop
inc
dec
test
mov
add
in
jns
notb
xor
mov
enter
mov
lock
ja
fidivs
cmc
test
push
in
mov
fadd
cld
mov
push
cmp
push
imul
sub
pop
rclb
ss
cltd
push
es
rorb
mov
aaa
test
bound
movsb
jmp
xchg
in
mov
or
mov
mov
gs
nopl
popf
push
xor
push
jne
hlt
dec
or
hlt
rcll
jb
or
aad
js
mov
inc
push
movsb
repz
xlat
mov
add
in
mov
mov
xor
stc
mov
push
pop
imul
push
mov
fmull
pop
mov
push
cmpl
test
inc
mov
sbbb
jl
dec
iret
add
lds
add
sbb
cli
inc
jg
jge
mov
fucomip
cltd
cld
jne
lock
sub
inc
inc
outsb
icebp
test
adc
pop
imul
mov
mov
inc
jg
fistpll
pusha
push
mov
add
pop
shr
and
aam
mov
inc
mov
push
fildll
xor
shl
xor
iret
fwait
sub
inc
stos
jbe
mov
fwait
testl
js
shl
xorl
sbb
dec
mov
jecxz
outsb
xchg
lods
ja
cltd
mov
adc
mov
inc
cli
lods
xchg
pusha
insb
push
mov
rcrb
out
data16
mov
je
inc
sbb
and
mov
out
orl
jl
out
pushf
push
stos
or
xchg
rcll
icebp
xlat
icebp
xchg
push
nop
test
jge
movsl
dec
nop
cmp
push
roll
sahf
and
addr16
test
ret
leave
jl
fbld
sbb
iret
push
sbb
sub
dec
add
out
push
xchg
pop
enter
cmpb
push
arpl
dec
dec
mov
in
xchg
mov
nop
xchg
xor
aas
pop
loopne
pop
push
and
cmp
inc
mov
jmp
shll
mov
push
or
out
addr16
add
mov
aad
inc
adc
pop
push
out
sbb
adc
lods
or
sbb
dec
lods
mov
or
dec
add
jmp
rorl
stos
loop
and
psadbw
push
xor
dec
ds
push
sbb
xchg
mov
or
mov
cmp
push
aad
cmc
jno
mov
pop
pop
and
pop
mov
fstpt
sub
fwait
mov
pop
imul
stc
inc
je
sbb
add
repnz
inc
pop
sbb
push
inc
daa
shlb
test
xor
adc
push
cmp
inc
inc
loopne
int3
adc
jmp
sbb
xchg
addl
enter
add
lret
jge
cld
shll
inc
and
mov
into
pop
mov
mov
and
cmpsl
pop
mov
jns
inc
dec
cwtl
dec
out
sbb
cld
repnz
je
insb
pop
adc
xchg
dec
pushf
xchg
mov
test
ret
jnp
mov
addl
xchg
mov
mov
cmp
ror
mov
rolb
add
pop
mov
dec
or
jge
out
xor
lret
add
test
fld
fwait
lcall
popa
roll
pushf
push
std
ljmp
nop
mov
fisubs
call
test
add
sbb
pop
insl
mov
rcrl
loope
push
test
dec
add
lahf
aaa
xor
mov
push
dec
les
int3
enter
push
adc
mov
mulb
sti
jmp
sahf
push
jp
movsb
xor
lods
in
or
or
nop
notl
push
mov
stos
xchg
mov
test
mov
add
dec
adc
adc
xchg
repnz
jae
or
mov
fstps
xchg
jg
cmc
sub
mov
lock
popf
fisubrl
scas
aad
iret
pop
xchg
fstp
in
and
dec
cmp
test
cmc
test
bound
shr
xchg
xchg
mov
mov
inc
js
jno
xchg
loop
arpl
popa
movsl
push
sti
jge
xchg
xchg
ja
xchg
jge
inc
jae
arpl
mov
out
test
dec
add
notb
mov
aad
cltd
add
push
xorl
jl
adc
jns
pop
sbb
mov
movsb
xchg
mov
mov
jp
xchg
xchg
lret
pop
icebp
xlat
cld
xorl
cmpsb
dec
mov
addr16
mov
dec
arpl
leave
mov
sub
rcll
data16
int
aas
mov
addr16
push
mov
mov
shld
and
cmp
mov
in
inc
jbe
jo
enter
xchg
inc
popa
mov
xor
outsl
scas
and
inc
sbb
jge
adc
pushl
pop
push
mov
jle
xor
mov
dec
mov
jl
xchg
fdivs
jg
dec
pusha
jecxz
arpl
mov
and
mov
cmp
iret
add
gs
je
and
shrb
mov
negb
xchg
stc
mov
xchg
sbb
pop
xor
mov
pusha
imul
in
loope
adc
jno
xchg
shrl
ss
dec
sub
or
add
pop
in
dec
xchg
add
jo
out
xlat
mov
sub
sbb
je
ret
jle
lock
adc
mov
inc
js
pop
in
pop
sub
dec
adc
jecxz
and
pop
adc
add
in
adc
ljmp
or
stc
std
shll
test
jge
jns
ficomps
or
mov
pop
or
xor
loop
xchg
ja
js
das
pop
shll
pop
in
scas
pop
sub
out
gs
outsb
fiaddl
fwait
loop
pop
in
pop
shl
sbb
and
leave
inc
push
repz
out
sub
add
cmp
sbb
mov
or
incl
test
addr16
cmpsb
add
inc
loope
je
std
mov
lods
fs
sbb
xchg
mov
xor
lcall
out
sbb
dec
jp
xchg
call
inc
push
int3
loope
and
cmpsl
clc
nop
outsb
push
add
jnp
sbb
in
jecxz
dec
cmc
aad
shrl
sub
push
daa
and
cmp
rclb
adc
mov
insb
adc
bound
jne
scas
jb
xchg
mov
mov
sbb
das
dec
pop
xchg
cld
pop
push
mov
mov
xchg
repz
lret
push
and
mov
xchg
jae
and
pusha
sbb
sub
mov
push
xor
mov
jl
push
push
pop
in
fwait
jbe
ds
mov
xlat
cmp
pop
mov
mov
or
test
fimull
push
test
cmpsl
sub
lcall
movd
mov
ficompl
fstps
mov
rcrl
lcall
push
cs
repnz
xorb
mov
add
sbb
mov
or
imul
xor
fwait
mov
std
dec
and
iret
add
int
mov
enter
sbbb
scas
sub
jge
fstps
fisubl
fdivrs
hlt
sub
dec
ja
mov
add
jbe
mov
adc
jecxz
inc
out
pop
scas
sub
mov
scas
pop
pop
add
dec
dec
adc
adc
insl
lret
jno
xrelease
cs
push
lods
loopne
sahf
cltd
daa
xchg
scas
idivb
daa
cmpsb
dec
call
xor
sti
xor
xchg
mov
test
fidivrs
call
inc
adc
mov
push
push
shrl
cwtl
lahf
xor
fstp
addb
repnz
sbb
cmp
inc
push
mov
jg
push
pop
pop
lret
dec
cmp
add
push
mov
pop
sub
je
pop
hlt
dec
mov
dec
xchg
loopne
mov
aaa
mov
ja
or
pusha
sahf
dec
sub
ret
xchg
aad
adc
sub
sub
loop
hlt
ljmp
shll
xor
mov
outsl
cmp
adc
sbb
cs
test
sub
jae
push
popa
and
cmp
mov
mov
dec
sub
enter
repz
jp
and
call
adc
divl
mov
jo
dec
push
cmpsl
inc
add
pushf
mov
and
sub
push
test
dec
ja
int3
cmp
jle
shll
xor
mov
mov
mov
out
push
arpl
jle
das
insl
arpl
mov
pop
test
cmp
jnp
lock
cmpsb
mov
adc
and
imul
movsl
mov
stc
into
clc
xchg
insl
cs
repnz
out
loop
hlt
rorb
mov
dec
cmp
outsl
scas
aaa
insl
sti
shrb
shll
outsb
int
test
inc
mov
fnsave
imul
and
jns
inc
out
xor
clc
mov
sahf
mov
std
shl
cmp
pop
lods
push
sub
dec
sbb
fistpl
scas
push
inc
cwtl
sub
ret
inc
mov
dec
fdivrl
addr16
add
and
mov
fs
adc
dec
jg
test
xchg
xor
inc
pop
dec
jnp
add
imul
outsl
rorl
mov
roll
out
icebp
mov
lret
std
in
cmp
or
sub
stos
test
xlat
jp
pop
sub
insb
dec
shl
in
jns
sti
xor
push
xlat
push
rcrb
xchg
or
jmp
icebp
push
xchg
push
or
sub
out
pop
aad
std
fcomi
pop
sub
or
mov
dec
aas
iret
push
xchg
mov
xorl
lret
sahf
cmpsl
jecxz
jle
push
fisttps
push
mov
sub
add
xor
push
arpl
mov
fdivs
mov
sbb
movswl
dec
in
rclb
dec
mov
sti
push
ret
sbb
pop
push
adcb
jge
cmp
fisubrs
push
or
lcall
dec
cmp
fucom
fdivl
jb
or
lds
add
inc
cs
mov
xchg
imull
in
xchg
push
and
int
in
xchg
lock
mov
rcrl
in
mov
loopne
mov
mov
sub
jnp
dec
daa
aas
jl
ss
add
cmp
xor
add
dec
cwtl
xchg
popa
add
jb
fadds
mov
mov
sub
sub
stos
pop
adc
lret
cltd
test
bound
repnz
jl
popa
pop
mov
or
testl
add
push
mov
cli
fiadds
scas
sbb
aad
mov
adc
rcr
adc
bnd
daa
mov
sahf
xchg
pop
in
nop
sbb
xchg
xor
aam
shrl
cmc
decl
jl
xchg
outsb
jle
fnstcw
imul
aaa
addr16
aam
add
jl
xchg
loope
fadd
test
mov
lcall
mov
cld
mov
and
lret
rcrl
push
lahf
cld
mov
dec
jns
loopne
ljmp
fwait
push
cltd
cld
fcompl
scas
int3
sub
das
push
and
pusha
jbe
sbb
ja
inc
movb
jl
add
inc
mov
dec
mov
xchg
and
fcmovnbe
push
jnp
dec
pop
fisttps
shll
fsub
sbb
mov
adc
shr
mov
xchg
pop
out
xor
ljmp
jns
cmp
add
jmp
pop
stos
lahf
lret
notl
add
jecxz
adcb
hlt
stos
add
outsl
jae
js
push
or
lods
jg
jnp
and
jne
cmp
sbb
out
dec
outsl
lahf
push
mov
mov
imul
mov
fdivl
test
insb
leave
sbb
sbbl
cmp
into
fs
and
and
ret
movsb
xchg
pop
subb
daa
in
scas
mov
cmp
pop
sub
leave
cltd
jbe
and
push
clc
es
or
or
xor
adc
cli
push
or
push
mov
mov
arpl
mov
ret
or
rolb
sbb
mov
clc
ljmp
fnsave
or
es
outsb
cmp
popa
push
push
cmp
mov
insb
xor
mov
push
sub
add
cli
jecxz
andl
sub
jecxz
dec
inc
add
xchg
addr16
and
sarl
push
cmp
faddp
xor
ja
pop
jecxz
std
inc
push
insl
push
mov
jae
cmp
or
pop
dec
jmp
xlat
xorb
or
cmp
cmpsl
pushf
scas
mov
or
aad
mov
inc
aad
fsubrp
add
popf
mov
loop
push
aam
fstps
mov
pop
scas
cmpb
and
popa
inc
pop
ss
mov
sub
insl
adc
addl
mov
je
pop
push
movsl
adc
sub
nop
adc
push
xchg
andb
mov
cwtl
jmp
iret
roll
pop
xor
or
mov
xor
loop
cmp
lds
faddl
push
add
insb
lock
xor
pop
cmp
jnp
and
bound
dec
adc
arpl
repz
ret
mov
xor
jne
add
mov
les
mov
ss
cmp
sti
stc
int3
mov
std
xchg
cmpl
and
iret
les
sub
into
and
scas
rol
sub
daa
stos
push
mov
mov
mov
mov
push
out
enter
push
into
movsb
and
mov
push
mov
daa
jae
jns
scas
aaa
and
cmp
cld
mov
xchg
xor
lret
jbe
fwait
clts
aas
fsubs
pushf
inc
mov
adc
or
sub
xor
mov
inc
cltd
sbb
sub
xor
sar
int
test
lahf
cmp
mov
push
mov
jns
sti
push
mov
rcl
and
mov
xor
and
loopne
sub
or
xor
ret
cmpsb
sub
scas
fstpl
lds
dec
sub
pushf
jae
imul
cmp
mov
in
and
pop
jge
mov
add
ret
das
popa
jle
cli
push
fs
bound
sub
xchg
lds
pop
int
cmp
xchg
pusha
aaa
or
mov
orl
cli
push
arpl
cmpsl
rolb
insl
or
adc
sti
in
sbb
add
scas
xchg
or
arpl
xchg
test
xchg
insb
pop
dec
and
sbb
add
mov
icebp
inc
iret
jns
mov
mov
arpl
jne
pop
or
mov
loopne
and
xchg
cmpsb
subb
cmp
fsubr
sti
lahf
insl
xlat
xchg
cltd
and
inc
mov
sbb
or
push
ja
mov
jp
jo
negl
cltd
testl
imul
pop
sub
inc
insl
aad
lea
inc
push
jmp
xchg
push
and
sbb
int3
cmpsl
call
je
push
xor
xor
push
cwtl
pop
out
sbb
popw
push
addr16
scas
arpl
pop
dec
out
idiv
bound
outsb
iret
mov
ljmp
sub
jb
setle
lods
mov
pop
cmp
fwait
test
push
ss
mov
out
pop
xor
jmp
xchg
mov
pop
incb
rorl
arpl
outsb
pusha
mov
int3
popa
clc
ror
or
sbb
bound
jmp
addr16
push
jmp
data16
and
adc
loop
clc
mov
pusha
xor
shll
xlat
push
jbe
jns
repz
movsb
and
repz
push
imul
rcrl
popf
aam
jl,pn
jg
xchg
stc
xchg
jb
mov
xchg
test
jne
cwtl
popl
pop
fbld
or
repz
sbb
lods
jle
ret
jp
addr16
mov
test
adc
fisttpl
es
sub
negb
in
lret
sbb
pop
mov
dec
jecxz
lahf
pusha
sub
and
adc
cltd
loope
repnz
jl
test
jge
or
mov
imul
add
sub
inc
cmpsb
dec
pushf
lret
orb
push
pop
inc
out
lods
inc
jecxz
pop
fwait
pop
xchg
dec
or
movsl
jmp
sub
inc
mov
and
into
pop
pop
aas
hlt
and
add
sbb
sub
inc
cmpsl
or
sbb
push
mov
xchg
mov
cmpsb
mov
and
fcmovu
jae
xchg
decb
data16
les
dec
andl
stc
outsl
cltd
filds
add
and
pusha
and
mov
jge
lods
mov
adc
inc
mov
cmp
adc
imul
push
cwtl
mov
push
fidivrl
fsubrs
fiadds
in
inc
ja
mov
add
mov
dec
rclb
enter
repnz
mov
cmpsb
push
push
and
or
cmp
cmp
sub
dec
sbb
xchg
lcall
jecxz
jae
mov
sbb
mov
xchg
sub
xchg
xor
mov
out
nop
xor
hlt
sub
out
test
outsb
and
xor
int
les
add
mov
cltd
jp
sub
push
xchg
pop
pop
mov
jg
orb
cmpsb
rsqrtps
xor
and
jb
xor
cmp
mov
fidivs
dec
cs
test
mov
sub
mov
jo
sub
or
add
pop
xchg
insl
jno
gs
add
loop
mov
insb
icebp
inc
mov
pop
andb
xor
addr16
adc
add
mov
or
xchg
cld
push
jo
outsl
lds
daa
cmp
mov
mov
sub
mov
sbb
mov
jl
ja
test
ljmp
xchg
mov
in
stos
insb
or
sarl
decl
inc
test
insl
imul
xchg
jae
jns
fs
mov
aaa
sbb
sub
mov
out
dec
rolb
inc
jl
pop
stos
or
xor
adc
rolb
aaa
inc
pop
addr16
jns
jbe
adc
daa
jle
add
idiv
xchg
xor
mov
dec
bound
dec
adc
inc
repz
xor
and
lret
mov
test
lret
mov
push
mov
test
mov
or
insb
cmp
mov
lret
fldcw
xchg
test
sbbb
sbb
xchg
stos
fwait
std
mov
push
out
adc
cmp
sbb
mov
adc
xchg
data16
xchg
or
jle
xlat
xor
xor
arpl
std
sahf
or
mov
or
jno
push
stos
jmp
iret
addl
add
mov
loop
xchg
inc
test
mov
lods
xor
adcb
shll
ret
outsb
icebp
cli
stos
pop
inc
imul
xor
aas
and
push
inc
dec
cmp
mov
sbb
push
rep
sbbl
xchg
inc
jno
or
pop
fwait
aaa
fnstcw
xchg
imul
cmpsb
add
pop
loopne
sub
lods
aaa
stos
daa
adc
cmpsl
lods
lds
mov
mov
pop
cmp
rcrl
push
stc
pop
mov
pop
pop
jge
or
ficoms
xor
add
xchg
sub
movsb
add
je
stos
sbb
add
cld
jecxz
xor
int3
jg,pn
hlt
cld
aam
xchg
iret
shlb
jb
add
sbb
movsb
lret
jnp
loop
pusha
in
adc
xchg
std
xorb
push
add
iret
pop
sahf
movsl
shll
mov
leave
in
xchg
mov
mov
xchg
arpl
addr16
push
sub
icebp
je
jb
xor
mov
rcr
enter
add
shll
testb
rcrl
pop
mov
rcll
inc
jae
mov
add
mov
lcall
ret
stos
pop
jecxz
or
inc
adc
les
sub
sbb
das
dec
in
xchg
pop
xor
imul
outsb
pop
bound
mov
lahf
out
cmc
cld
xor
cs
jmp
sub
inc
lcall
pusha
in
fwait
testb
dec
cmpsl
mov
jge
hlt
cmp
and
out
imul
xor
insl
cmp
inc
lods
push
fiaddl
rorl
scas
repz
cwtl
lret
fnstcw
push
mov
iret
sub
inc
inc
jmp
fwait
scas
icebp
pop
inc
pop
adc
inc
subb
fwait
jo
aam
std
jmp
jg
out
mov
hlt
sbb
repnz
and
add
dec
sar
or
xchg
loopne
mov
push
rcl
aaa
stc
icebp
adcb
insl
nop
jns
dec
sbb
xchg
jb
aas
jmp
int
fiadds
dec
stos
cmpsb
sub
jnp
mov
add
mov
nop
lea
inc
je
sub
out
loope
scas
cmp
sub
je
cmp
and
sarl
aad
test
xchg
roll
test
dec
pushl
sbb
lods
movsb
dec
sahf
call
insb
and
repz
in
dec
or
popa
and
mov
inc
pop
rorb
int
fwait
push
inc
cmp
add
jns
out
je
jg
fincstp
cmc
add
sub
lcall
outsl
jp
cwtl
je
cli
scas
sub
mov
lock
add
jmp
cmp
pop
sarb
addl
jb
inc
enter
pop
add
or
xchg
mov
bound
lods
jbe
and
mov
lds
mov
or
inc
adc
fisttpll
cld
sbb
adc
aaa
jnp
stos
jg
adc
or
in
and
mov
scas
push
xchg
and
out
pop
mov
push
mov
mov
add
sub
mov
lods
movl
test
and
dec
push
xchg
sbb
lcall
cmp
mov
or
mov
mov
cmp
dec
movsl
es
adc
inc
loopne
lahf
pop
jl
xchg
insl
pop
subb
lret
pusha
dec
xorps
mov
jns
push
push
xor
test
add
mov
jp
jno
aas
int
pop
in
repz
test
fstps
mov
lods
xorl
gs
push
cwtl
xlat
mov
cmc
push
add
out
fsubs
xorl
cmp
mov
fstpl
lret
ds
cld
neg
outsl
inc
add
fisttps
mov
fmul
dec
jb
and
lods
repnz
dec
mulb
adc
fs
fs
test
jae
and
iret
sbb
add
das
scas
pop
loop
xchg
sbb
iret
aaa
std
add
out
cmp
sbb
aad
pushl
push
cltd
test
push
cld
ret
cmp
add
aaa
fcmovu
inc
add
mov
cmpl
out
fsts
jno
pop
mov
neg
push
or
iret
mov
scas
jge
sbb
dec
or
inc
std
loope
xchg
repz
mov
pop
fldenv
jb
in
mov
out
test
sub
or
inc
mov
sub
fdivrs
inc
jae
jg
shrl
xchg
mov
jg
xchg
test
mulb
sub
sahf
cmp
scas
push
loopne
roll
sbb
adc
or
iret
pop
sbbl
jae
push
ja
outsl
lods
sbb
jns
xchg
in
mov
mov
inc
outsl
pop
jns
adc
out
mov
daa
inc
jo
js
aam
mov
repnz
inc
and
jae
or
lret
xor
insl
push
mov
jbe
fdivs
inc
or
aad
nop
inc
fmuls
mov
inc
jne
inc
aas
pop
arpl
or
mov
into
inc
inc
jnp
sub
jp
stos
cmpb
mov
mov
cmc
nop
mov
cmp
stos
or
movsb
call
arpl
test
inc
ljmp
push
mov
jle
inc
sbb
in
in
push
cmp
dec
je
pop
das
sbb
lods
loop
das
pop
xor
test
outsl
loope
dec
jmp
mov
xchg
or
int
xor
and
inc
sbb
stos
out
pop
lds
inc
pop
cmpl
dec
aad
dec
xor
inc
adc
fs
and
adc
jp
mov
mov
outsl
shr
movsb
dec
sarl
out
pop
mov
out
icebp
push
arpl
cmp
xor
sbb
movsb
push
fisubs
sub
pop
pop
dec
push
xchg
jecxz
lret
push
gs
sub
lret
mov
jno
sbb
xchg
mov
test
aaa
rorb
xor
scas
push
adc
inc
mov
in
inc
pop
pop
mov
inc
or
add
in
sub
cmc
sahf
sub
addb
aaa
bound
daa
sub
adc
sub
sti
ret
test
outsl
pop
stos
iret
outsb
or
sar
cmc
stos
arpl
cld
cwtl
fstl
lcall
in
ss
sbb
iret
outsl
in
xchg
int
ret
sbb
cmp
sub
pop
jecxz
out
lea
hlt
add
test
shll
ficompl
push
adc
sbb
adc
fs
hlt
inc
jmp
cmp
xchg
imul
dec
in
lcall
shlb
push
stos
xchg
jge
icebp
fistl
sub
xor
xchg
iret
cmp
sub
xor
ljmp
adc
rorb
or
int3
out
movl
cmp
mov
lock
adcb
jbe
ret
imul
dec
fmul
and
and
xchg
das
int
mov
jp
mov
adc
adc
adc
xlat
xchg
mov
xchg
insl
enter
fldl
fidivl
mov
popf
cmp
mov
push
dec
addr16
xchg
cld
push
add
pop
les
and
cwtl
fcoms
addr16
jnp
cmpsb
sub
push
lret
in
add
mov
movsb
dec
loop
pop
orl
xor
mov
imul
adc
movsl
mov
push
xchg
dec
pop
in
enter
sub
repz
scas
fnsave
adc
cmp
rcll
push
jp
std
add
cmp
mov
mov
in
cli
mov
imul
pop
jge
fldcw
pop
loopne
call
lock
xchg
inc
das
outsl
loopne
add
rclb
stc
sub
push
inc
jle
out
dec
mov
dec
inc
dec
mov
or
xchg
sti
enter
imul
push
outsl
add
cmpsl
push
jo
sbb
out
or
xchg
mov
popf
push
clc
or
sahf
dec
xlat
shr
mov
mov
testl
mov
push
or
mov
scas
dec
pop
sahf
sti
push
out
jo
xchg
mov
sub
pushf
adc
jp
push
mov
fisubl
lret
nop
repz
sbb
sti
and
cwtl
nop
pop
pop
int3
outsb
xchg
out
mov
ljmp
mov
dec
add
lahf
jecxz
jo
repz
dec
push
dec
fimull
mov
sbb
inc
sbb
ss
inc
enter
std
xchg
test
fs
cmp
addb
pop
pop
xchg
bound
loopne
loopne
scas
mov
fs
je
mov
cmp
xor
cwtl
subl
sbb
sbb
cmpsb
mov
arpl
push
pop
mov
mov
mov
mov
cmp
sbb
dec
in
push
fcompl
jp
mov
cmp
lcall
jmp
in
test
hlt
and
movsb
jmp
mov
fistpll
inc
add
das
pop
mov
mov
lods
out
sti
mov
pop
test
aam
cmpsl
dec
push
dec
outsl
stos
rcrb
mov
sbb
mov
outsl
jae
outsl
push
mov
lods
mov
sbb
nop
shl
jb
jns
pusha
and
sahf
xor
hlt
imul
fistl
dec
lcall
xlat
daa
mov
out
scas
push
jnp
out
jnp
hlt
fidivl
imul
stc
imul
iret
sbb
fsubr
cwtl
sub
jp
inc
repnz
inc
clc
ficompl
cmp
stc
or
jb
fidivl
sarl
pusha
mov
pop
mov
jecxz
aaa
cwtl
mov
es
outsl
cltd
cmc
xchg
push
popa
jae
and
jne
addr16
pusha
jne
roll
sbb
sub
aaa
lret
loopne
insb
mov
mov
mov
pop
and
pusha
imul
pop
cmp
mov
add
lods
stos
ds
or
jecxz
mov
out
jb
int3
mulb
jne
ja
ret
push
out
lcall
ds
jnp
pop
xchg
leave
mov
xchg
and
test
loopne
in
push
mov
out
dec
cmp
mov
fsubrs
cmpl
jmp
and
adcb
gs
inc
xor
lcall
imul
inc
xchg
push
ljmp
setno
imul
dec
dec
adc
push
dec
inc
out
xor
push
std
mov
ret
pop
and
mov
ja
sbb
scas
sti
ja
adc
xor
push
xor
ds
dec
mov
popa
clc
dec
cmpsb
push
fcmovnbe
or
push
pop
fsts
pop
lock
inc
xor
movsb
mov
data16
es
jns
push
js
xchg
adc
sub
fwait
pop
call
add
xchg
add
mov
out
shlb
ficompl
subl
and
lret
sub
mov
cltd
mov
out
dec
inc
lahf
xor
scas
je
mov
push
sub
or
mov
mov
cmp
imul
push
pop
fsubl
test
pop
imul
outsb
sub
pop
mov
push
bound
xchg
push
dec
rcrl
imul
inc
aad
lret
fwait
sub
jge
lahf
mov
push
xchg
jae
adc
es
adc
js
mov
pmuludq
ret
mov
movsl
jnp
sbb
ss
dec
ficoms
dec
or
xchg
das
inc
sbb
jno
jg
jb
daa
pop
in
sub
sub
dec
mov
push
rcrl
lds
xchg
dec
push
rcrl
mov
movsl
ss
loope
and
ficoml
das
fcoml
in
dec
popa
push
cmc
cwtl
repnz
aaa
into
jp
xor
popa
inc
fiadds
lds
jb
mov
and
lahf
lret
into
push
mov
mov
cltd
sub
xchg
mov
xchg
inc
push
aad
inc
sub
daa
aam
in
in
mov
and
cltd
pushf
movsb
fsubrl
push
cmpsl
shrl
pop
ja
push
jb
and
popf
and
sbb
stos
sbb
jo
or
lods
pushf
loopne
inc
dec
pop
inc
into
ret
daa
mulb
repz
fcomi
mov
xlat
mov
fadds
or
in
or
repnz
mov
jae
incl
inc
xchg
aaa
popa
pop
aas
jb
scas
pusha
add
outsb
outsl
inc
stos
jge
stc
mov
xor
cwtl
cmp
mov
add
mov
mov
jmp
jle
fbld
cmp
inc
call
push
roll
ds
js
adcl
ret
push
bound
mov
push
xchg
inc
or
fwait
cmp
add
or
pop
mov
xchg
xlat
enter
xchg
push
arpl
inc
or
int
jle
cmpsb
mov
lcall
and
pop
sahf
fwait
ja
sbb
lcall
adc
inc
inc
popf
push
cli
gs
push
cmovs
xchg
aas
js
ja
movsb
and
ret
daa
mov
orl
lret
adc
xor
or
push
add
insb
and
jno
mov
lds
lret
inc
push
lret
adc
or
xor
cmp
mov
lcall
push
scas
mov
sbb
xor
adc
aaa
je
insl
fcomps
dec
dec
jp
loope
subl
js
mov
mov
stos
test
mov
adc
test
sbb
cli
pop
mov
sub
and
inc
mov
cmc
stos
in
lea
imul
push
mov
stc
pop
in
stc
dec
shlb
clc
sarb
and
sub
ret
lcall
and
xchg
int3
stos
jns
push
mov
movsl
dec
xor
pop
sbb
dec
shrb
mov
imulb
in
pop
pop
mov
or
dec
add
shrb
adc
jmp
mov
jo
xor
shlb
jp
mov
hlt
in
mov
dec
xchg
mul
test
sbb
xorl
push
rolb
icebp
lods
add
add
sub
cmp
dec
mov
push
sub
mov
mov
insl
stos
push
ret
and
jb
fistl
ss
mov
mov
xor
jo
ficoml
roll
jbe
jb
xchg
sbb
cld
mov
jne
cwtl
mov
jb
dec
test
xchg
roll
push
rcl
icebp
scas
ror
push
jecxz
jmp
icebp
shll
and
lahf
sub
insb
mov
jb
shlb
push
ja
and
mov
imul
insb
inc
sub
mov
in
push
imul
pushf
lret
jnp
and
adc
jg
lret
xchg
xchg
outsl
mov
add
fistpll
pop
jb
mull
int
xchg
adc
mov
popf
mov
sub
or
lea
rcll
or
arpl
cmp
xchg
sub
je
pushf
mov
call
dec
je
push
push
repnz
lea
fiaddl
daa
loopne
push
in
dec
inc
stc
cmc
mov
ficomps
jb
lret
out
cmpsl
xor
mov
or
pop
pop
jne
pop
sub
lcall
jo
lods
dec
mov
negl
out
dec
pop
add
lock
or
lock
dec
aas
mov
movsb
fcompl
mov
mov
jo
jp
imul
inc
jmp
sub
insb
cmp
and
pop
xchg
cmp
adc
xchg
into
test
cli
xlat
xlat
xor
cmpsl
adcb
adc
and
xchg
test
mov
mov
jg
mov
mov
push
xchg
or
xchg
jnp
test
mov
adc
lret
mov
xchg
addb
fcmovu
call
js
add
jge
inc
stos
jg
ds
sbb
out
adc
test
ja
pop
into
and
stos
mov
jae
cltd
ja
mov
mov
xchg
sti
pushf
movq
outsb
cmpsb
xchg
sarb
sub
jp
jbe
or
pop
jge
hlt
aad
int3
aad
adc
lahf
sub
add
or
lea
adc
ret
iret
sbb
and
push
mov
mov
ret
inc
sub
dec
pop
jno
xchg
sub
sahf
int3
les
repz
pushf
and
pop
fnstenv
fisubl
fldl
subb
jo
movsb
pop
je
sbb
add
leave
dec
sbb
and
lock
enter
ja
and
cmp
cmp
inc
mov
mov
mov
or
cmp
gs
sbb
icebp
test
shll
lcall
mov
fisttpl
xchg
inc
push
fwait
loop
pop
in
stos
lahf
cmp
arpl
fstl
pop
sbb
mul
cli
aas
push
loop
dec
push
xor
in
int3
insl
cmpsl
push
push
lea
or
iret
stc
popf
ljmp
xchg
sbb
xchg
dec
cli
xchg
cwtl
bound
xor
pop
rcrl
lods
das
or
lcall
push
orl
inc
loope
je
xchg
add
push
lock
int
lret
adc
pop
push
mov
pop
xor
out
mov
xor
jl
dec
xchg
imul
pop
jnp
jns
test
ret
mov
bound
xor
addr16
scas
cmp
xchg
lock
je
xor
mov
and
mov
insb
je
xor
cwtl
lret
in
mov
add
adcl
notb
mov
arpl
and
inc
cmpsl
enter
notl
sbb
inc
cli
add
popa
stos
rolb
lock
mov
outsl
cmp
push
ja
and
call
push
popf
rorb
dec
ljmp
lods
outsb
push
int3
xorb
push
fcomi
pop
cld
lcall
jmp
enter
push
cwtl
sbb
enter
jl
pop
mov
cli
cmp
adc
imul
test
fsubr
xor
jge
cli
jne
mov
and
push
push
cld
leave
aad
mov
add
pop
mov
frstor
gs
insb
push
and
or
adc
add
cli
xor
pop
popa
pushl
mov
in
test
mov
sbb
cltd
xchg
jnp
push
cld
and
outsl
pop
scas
ljmp
dec
dec
mov
mov
xchg
sub
lea
popf
lahf
ret
push
movsb
cltd
clc
cmpsl
fwait
xchg
sbb
roll
mov
movsb
pop
pop
mov
test
push
aad
xchg
outsb
mov
mov
adc
jns
fisubrl
xorb
rolb
int3
adc
mov
jnp
daa
adc
fdivp
andb
jle
js
imul
je
ds
loope
lea
out
je
test
xchg
stc
and
les
jecxz
inc
ret
mov
outsl
aad
inc
jbe
xchg
test
mov
push
push
sbb
out
mov
sbb
xchg
cmc
sub
imul
gs
ret
mov
jg
jae
pop
cmpsb
mov
jecxz
mov
test
mov
inc
arpl
or
sbb
fldcw
sbb
mov
or
sub
in
aam
or
stos
lret
and
and
loope
aam
call
dec
imul
ds
loop
jae
int
lahf
mov
cmpsl
test
call
push
jne
pop
inc
fs
xlat
xchg
insl
cmp
jecxz
cs
xor
lret
sahf
or
orb
aas
dec
fadds
fisubl
push
jns
into
out
lret
dec
dec
loope
lcall
or
inc
enter
les
out
xchg
out
jnp
mov
xor
or
cli
lds
add
adc
inc
sub
into
adc
test
rcrb
scas
jne
popa
lds
ret
scas
mov
ljmp
jg
dec
or
repz
cmpsl
sti
or
inc
jle
lahf
fldenv
cwtl
outsb
lock
fwait
mov
inc
push
inc
insl
int3
xchg
or
pop
addr16
or
xchg
or
mov
jno
ljmp
fs
adc
loope
and
decl
jge
out
xchg
or
mov
push
pop
insb
cmp
sub
inc
jg
jmp
dec
push
sbb
loop
jl
mov
mov
aaa
jecxz
ljmp
je
pop
hlt
in
adc
adc
mov
sub
jno
mov
insb
mov
in
lock
stc
mov
repz
dec
pop
mov
push
mov
xchg
or
inc
mov
mov
mov
add
mov
addr16
icebp
push
fwait
inc
shrl
icebp
adc
inc
pusha
shlb
jns
xchg
xor
xor
xchg
cwtl
stc
xor
mov
rcrb
loope
cwtl
cmpsl
inc
and
loopne
jbe
pop
pop
xchg
jno
add
std
cmp
and
jnp
inc
xchg
repnz
das
nop
pop
sti
cmp
jg
pushf
aad
test
in
pop
jg
stos
sub
mov
in
inc
add
mov
in
out
mov
cmp
cmp
out
inc
lret
add
testl
mov
jmp
das
push
xor
mov
xchg
or
or
push
stos
sbb
pop
setg
sbb
out
out
imul
sbb
sbb
je
cmp
adc
dec
idiv
mov
scas
loop
fs
loop
jnp
int3
mov
sti
mov
jb
dec
pop
fdivl
cltd
fst
xchg
jae
mov
inc
btr
ljmp
fbld
ret
mov
test
dec
push
inc
dec
sbb
out
xchg
shlb
das
repz
into
mov
pop
pop
rorl
push
outsl
sub
add
push
mov
xor
lds
nop
xchg
ja
cmp
testb
cmpsl
js
push
sub
jg
lock
and
xor
mov
sub
and
mov
lea
insb
andb
test
mulb
mov
insl
mov
xchg
cmpsb
push
sbb
xchg
fsubr
xor
mov
sti
xor
mov
cmp
cs
loope
push
mov
out
or
mov
stc
jle
add
ret
repz
orl
pop
push
fldl
jmp
lret
inc
mov
ljmp
mov
seto
testl
movsb
das
pop
pop
es
daa
ret
outsl
sub
inc
insl
xor
inc
adc
mov
or
aaa
cltd
add
popa
in
jle
sbb
enter
test
gs
pushf
es
push
out
sbb
fadds
nop
add
shll
scas
mov
xor
jp
std
xchg
pushf
rclb
pop
lcall
test
rcrl
faddl
scas
or
cmp
daa
insb
mov
adc
lea
push
shlb
sub
adc
xchg
mov
sub
sbb
push
js
sbb
mov
ja
mov
jb
and
int3
hlt
adc
or
cld
sub
js
int3
repz
shrb
adc
xchg
push
pop
mov
lret
pcmpeqb
mov
mov
js
lret
dec
jne
sub
lcall
lret
repnz
push
jo
mov
jne
sub
jge
ljmp
mov
addl
stos
sub
cmp
hlt
loopne
cmp
hlt
add
push
pop
sbb
imul
lds
dec
fidivrl
test
mov
cmp
je
add
jmp
jle
mov
movsl
pop
loope
pusha
adc
in
call
clc
cmpsb
fwait
rclb
adc
stos
pop
lret
inc
xchg
adcb
movsb
sub
sub
aas
dec
subb
xchg
pop
xlat
add
daa
sarb
push
lahf
sub
inc
fistpll
push
lret
dec
jecxz
sub
xchg
lea
xlat
push
jl
xchg
or
pop
lods
pop
mov
je
xor
jns
mov
outsb
ja
adc
mov
insb
insb
dec
xor
mov
ret
jl,pn
push
aaa
mov
adc
icebp
mov
ret
movsl
loopne
mov
jae
bound
xchg
jnp
mov
leave
jns
or
fwait
lods
xor
sub
jo
xchg
xor
out
dec
sub
cmp
jbe
dec
fildll
pop
in
jbe
xor
lcall
jle
sahf
inc
rcll
push
mov
jl
adc
outsl
shl
jnp
dec
bound
and
in
mov
sub
fwait
stc
pusha
fs
lods
sbbl
xor
aaa
sbb
dec
cwtl
xchg
sbb
push
iret
add
cwtl
in
cmpb
push
roll
pop
push
dec
and
add
xchg
jo
sub
pop
adc
or
add
and
xchg
adc
sbb
adc
dec
adc
mov
dec
mov
fistps
pop
xchg
lcall
push
mov
adc
mov
sub
push
mov
jmp
inc
and
mov
sbb
lret
mov
stos
mov
ss
xchg
mov
push
outsb
scas
inc
cmp
xchg
test
pop
adcb
lods
scas
imul
push
inc
xorl
mov
std
add
iret
fcmove
ret
push
xchg
shll
shrl
fcoms
hlt
hlt
stos
shrl
push
fdivrp
mov
push
pusha
push
iret
sti
xchg
or
idivl
sbb
sub
or
leave
pop
sti
mov
das
mov
or
cli
cwtl
and
sbb
mov
mov
add
pusha
insb
ljmp
repz
jne
test
gs
push
ja
sub
repz
inc
sti
mov
movsb
lock
pusha
dec
test
mov
pop
pop
into
ret
mov
in
and
std
std
pop
js
subl
add
test
rcl
cmp
dec
xor
push
stos
push
ret
pop
adc
mov
xor
das
dec
ss
repz
mov
mov
adc
pusha
test
cltd
push
or
cmp
loop
int
dec
cmpsl
pop
push
pop
aaa
push
cli
clc
inc
scas
std
into
imul
jecxz
in
dec
shlb
sbb
push
adc
mov
xor
pushf
ds
push
mov
lret
lret
popa
fisubl
sbb
test
hlt
movsb
mov
outsl
rol
xor
in
ret
push
pop
stc
mov
add
or
sub
xchg
inc
fisttpll
enter
outsl
lret
pop
sbb
fdivrp
into
and
sub
aad
pop
iret
insl
push
repz
je
ret
das
and
sub
fwait
cmp
outsb
mov
or
xorb
jge
aas
out
insb
xchg
lahf
sbb
xchg
push
mov
mulb
lcall
test
add
sub
or
in
push
lock
test
fs
dec
jo
jb
inc
or
stc
jmp
xchg
sub
add
adc
fs
stos
dec
lods
xor
fcmovnb
jae
mov
mov
shll
arpl
adc
mov
outsl
adc
jp
add
xor
test
jb
pop
sbb
jne
pop
sbb
ds
test
dec
sub
or
mov
inc
lret
sbb
loope
cmp
data16
jbe
insb
xchg
mov
imulb
ret
std
jae
cmp
enter
testb
mov
push
gs
lods
divb
jne
xchg
jle
mov
cmp
incb
test
cli
xor
xor
jbe
pop
stos
repnz
fwait
xlat
xor
ss
cmp
dec
scas
pop
jp
jle
imul
int
lods
or
shl
mov
insl
add
sbb
xor
outsl
cmp
jl
fs
pop
xchg
popl
xchg
inc
adc
mov
je
push
lods
jo
pop
sub
dec
mov
push
iret
bound
lock
mov
mov
adc
js
sahf
loope
addr16
hlt
push
clc
dec
xchg
sbb
repz
jb
cmp
or
push
jnp
jmp
xor
jg
repz
pop
pop
adc
lcall
cld
mov
ja
cltd
into
cmpl
mov
jmp
mov
ficoms
push
ret
mov
push
adcl
iret
mov
loopne
mov
cmc
add
xor
and
test
xor
or
lcall
push
jecxz
jecxz
insb
xchg
push
movsl
cmp
add
out
nop
rorl
lret
mov
add
es
dec
sahf
lahf
js
mov
and
xchg
add
pop
xchg
mov
cmp
xlat
cwtl
loop
in
xchg
jae
sbb
xchg
adc
sti
mov
or
mov
cltd
adc
cmp
outsl
dec
sahf
jbe
or
loopne
pop
js
pusha
sbb
push
push
pop
rol
sub
xor
sbb
insl
and
out
rcr
inc
es
cmp
mov
icebp
xchg
mov
push
mov
test
pushf
test
mov
outsl
das
pop
jae
sbb
pop
cs
popa
jecxz
jbe
jo
fdivrl
inc
xchg
jge
cld
iret
movsb
in
jecxz
cli
xor
xor
jne
inc
and
rcr
lcall
cmp
lret
jbe
adc
push
mov
clc
sub
lea
xor
or
lea
inc
in
jae
cmpsb
repz
dec
outsb
cld
push
mov
or
jae
fwait
sbbl
cmp
xor
push
push
dec
repz
push
or
dec
cmp
js
outsl
mov
outsl
jno
out
pop
pop
dec
push
pusha
add
aaa
rcrb
movsb
and
jmp
add
cmp
daa
inc
adc
cli
xor
lahf
inc
sahf
and
push
ret
stc
xchg
xchg
and
xor
rolb
test
pop
sbb
in
mov
pop
lock
xchg
inc
repz
ds
popa
inc
jle
dec
mov
adc
nop
mov
xchg
xchg
out
adc
imul
pop
orl
mov
mov
flds
ja
push
cmpsl
movsb
mov
inc
push
xor
insb
pop
jb
jge
xchg
bound
mov
fmull
aam
test
imul
test
mov
fdivrl
lahf
xchg
mov
mov
cwtl
inc
les
ret
inc
pop
inc
jns
sub
fs
mov
xchg
ljmp
enter
jge
sub
inc
icebp
sbb
movsl
mov
insl
mov
mov
scas
or
ja
jp
lahf
repnz
cmpsb
stos
sub
jge
test
lock
mov
dec
call
addl
and
call
xor
push
jmp
rclb
lahf
nop
xlat
dec
inc
xor
test
aaa
outsb
pop
jns
and
nop
cmp
dec
pop
push
and
loop
lds
mov
inc
clc
mov
mov
xchg
fbld
fstps
xor
mov
xchg
or
mov
pop
mov
nop
jno
cmp
cltd
outsb
divl
outsl
pop
cmp
mov
arpl
pop
dec
inc
pop
ret
mov
nop
fimuls
sahf
xchg
cmp
je
push
les
icebp
mov
dec
xchg
test
jo
imul
icebp
and
sbb
inc
sti
andb
fs
mov
mov
sti
int3
or
xchg
lcall
adc
push
mov
sar
push
fidivrl
mov
or
and
xchg
push
cmc
xchg
xor
les
hlt
push
mov
sub
mov
dec
inc
dec
loopne
xor
cs
dec
fdivrl
cmpb
and
xchg
pop
mov
push
push
aaa
jmp
fisttps
sbb
mov
mov
packuswb
into
cmp
mov
int
add
cmp
sub
cs
lods
gs
mov
pop
add
negl
xchg
sbb
xchg
imul
sbbb
cmp
sbb
hlt
in
fldl
mov
mov
test
cmpsl
arpl
pop
outsl
push
inc
std
xchg
add
xor
outsl
and
xlat
jg
cmpsb
push
adc
cmp
xor
pusha
scas
popf
mov
jp
mov
mov
test
in
aaa
cmpsl
pop
das
bound
add
bound
stc
ds
sahf
out
movsl
push
sub
mov
mov
pmaddwd
mov
jmp
inc
test
cmp
jmp
dec
inc
ss
adc
ss
xchg
push
push
add
xor
call
das
adc
aam
cwtl
daa
mov
xchg
cmpb
jmp
iret
xchg
out
insl
ljmp
stos
dec
imul
xchg
sub
push
hlt
inc
popf
int3
shlb
jae
mov
sbb
gs
dec
rclb
adc
xor
adc
call
mov
jmp
jbe
jl
int
es
fisttps
mov
bound
xchg
inc
pop
int3
repnz
add
mov
rorb
mov
sbb
les
dec
inc
and
sbb
aaa
mov
ret
loopne
in
imul
or
fimuls
sub
in
pop
mov
call
mov
enter
mov
pop
add
ud1
adc
repnz
cmc
shll
cmp
iret
ss
int3
bound
push
iret
add
jns
or
sbb
jno
jp
pushf
sahf
orl
inc
xor
and
mov
inc
pop
jp
sahf
icebp
test
daa
push
dec
cmpsl
cmp
out
ret
dec
fildl
jnp
and
cmp
push
in
push
sti
cmp
lds
dec
push
sarb
or
sahf
hlt
fisttpll
ret
mov
test
adc
jnp
mov
test
inc
and
mov
jmp
or
sub
pop
sarb
mov
pop
cmp
jle
mov
inc
push
or
mov
mov
jle
sub
mov
mov
pop
repz
mov
pop
push
das
lret
and
push
cmpb
sub
popa
fisttps
callw
push
push
pop
cmpsb
push
sub
lods
xchg
fbld
out
out
jnp
insb
mov
enter
mov
sbb
popa
sti
sub
inc
push
jmp
frstor
lret
mov
test
mov
call
cmp
push
cmp
sahf
add
add
bound
dec
mull
les
xor
mov
into
xlat
ljmp
leave
arpl
ss
dec
adc
cli
cltd
inc
js
xchg
into
xor
mov
in
aas
fnsave
cmp
sub
ljmp
jg
addl
push
sub
lods
xchg
std
add
sahf
mov
sbb
dec
sub
ja
lea
int3
aaa
ss
jge
sahf
dec
cmp
test
aam
xchg
adc
shrb
iret
pop
add
ret
xchg
sbb
xlat
movsl
das
mov
iret
cld
loopne
dec
push
cli
xor
shlb
adc
stos
es
xchg
adc
sub
rcr
in
add
jnp
cmpsb
mov
pop
sahf
dec
or
jmp
jno
movsl
and
clc
and
mov
xchg
rolb
adc
or
push
js
nop
mov
popf
pusha
enter
jle
push
jle
roll
xchg
popf
mov
adcb
idivb
xor
and
test
fnstenv
cmp
mov
faddp
and
xchg
aam
rcpps
lret
cmpsl
rolb
mov
sub
loope
xor
in
jae
xchg
cs
dec
ljmp
pop
add
test
adc
mov
jbe
dec
out
int
jno
into
sub
jp
pop
cmc
lret
js
push
mov
fimuls
clc
push
pop
insl
in
lods
dec
add
into
lods
pop
rorl
rcl
adcl
or
gs
enter
out
mov
add
xor
sbb
pop
dec
testl
or
inc
icebp
xchg
pop
cmpsb
stc
sub
cs
add
loop
movl
jmp
or
pop
push
lea
inc
stos
fistpll
andb
jg
or
leave
jge
jb
and
shr
jg
cmp
jmp
mov
or
lods
pop
xchg
loop
mov
push
lcall
sub
mov
das
sbb
lret
xchg
cmp
loope
test
lds
mov
add
and
ret
bnd
cli
leave
sbb
pushw
icebp
mov
mov
inc
add
push
xchg
loopne
pop
add
test
scas
mov
xor
dec
and
out
or
sbb
jae
add
fwait
adcl
mov
je
mov
fwait
rcrb
push
jo
inc
or
cmp
xor
in
dec
inc
inc
lret
and
xor
leave
mov
sub
notb
pop
mov
cmp
insl
xlat
dec
icebp
ljmp
cmp
out
xor
or
cmpsb
mov
fmull
jo
gs
test
popf
or
jb
push
andl
arpl
shl
cmp
out
mov
xor
repnz
push
and
adc
inc
push
xor
dec
mov
xchg
arpl
popf
ljmp
push
hlt
lea
jne
test
jno
inc
out
sub
cmpb
cld
sbb
jno
adc
stos
sbb
insb
jp
cmc
pop
movsl
std
in
fmuls
xorps
imul
pop
mov
leave
daa
iret
push
push
xchg
jnp
mov
aaa
cs
or
sbb
sub
ds
das
icebp
insb
pushf
add
add
subb
fildl
leave
xchg
out
aaa
inc
dec
dec
aas
jmp
mov
lret
jecxz
inc
jns
push
mov
add
push
int3
push
lods
movsb
lea
xchg
xchg
jo
mov
cmp
mov
addr16
xor
mov
cwtl
cmp
fnstcw
add
xor
rcrl
lods
arpl
mov
out
sub
js
les
sbb
push
ret
jae
lea
clc
ficoml
sub
shrb
mov
fiaddl
pop
fisttps
mov
and
rclb
mov
pop
rolb
ja
dec
push
and
adc
mov
ds
mov
fdivrl
dec
bound
aam
dec
adc
dec
mov
jge
scas
dec
cwtl
push
hlt
sahf
cmpsl
mov
lods
cmpsl
mov
fdivrs
jne
fs
sbb
xchg
sbb
or
jo
scas
xor
pop
fldt
cmp
int3
popl
jno
pop
clc
sub
stos
sarl
add
pop
dec
mov
or
fsubr
jecxz
inc
pop
out
xchg
inc
cwtl
sahf
add
test
and
cld
lea
daa
cld
cmovge
jg
stos
ds
jg
test
outsb
or
in
pop
outsb
int3
jo
mov
mov
xchg
scas
mov
cli
jecxz
mov
call
ja
adc
xor
divb
adc
arpl
xor
push
add
jae
dec
int
mov
mov
daa
jp
add
gs
or
jne
dec
fbstp
mov
faddl
sub
sti
pushf
fcomps
or
xchg
out
aaa
fists
mov
dec
outsl
roll
scas
sub
repnz
pop
cli
lods
pusha
mov
jge
sub
dec
test
jge
popf
les
mov
dec
pop
sub
leave
jbe
sbb
pop
xchg
in
into
and
mov
push
dec
mov
pop
push
jp
imul
dec
add
subl
pop
das
push
pop
mov
cmpsl
jge
movsl
imul
lret
fsubrs
aam
int3
or
aaa
repnz
push
mov
insl
sbb
pop
inc
mov
hlt
sub
mov
sbb
clc
or
pop
fs
aad
cmpl
sbb
xor
rcrb
adcb
in
push
mov
in
les
pop
icebp
push
int
or
ret
lret
and
gs
jle
int3
pop
push
mov
arpl
sbbb
ret
xchg
fsubrl
or
jo
js
leave
pop
dec
mov
mov
fdivrs
or
jge
fisttpll
fisttpll
aas
inc
ret
dec
lret
dec
fwait
pop
insb
fstpl
outsb
cwtl
dec
pop
das
sahf
enter
add
loopne
or
push
add
jae
in
mov
push
cmp
gs
hlt
sbb
mov
or
push
jmp
xchg
pop
fidivl
lcall
rol
sub
outsl
aad
adc
repnz
mov
mov
mov
ds
test
insl
std
xchg
xchg
cmp
adc
fsubl
ds
xor
lock
adc
inc
jmp
inc
fsubl
inc
mov
mov
out
inc
pop
xchg
sti
pop
mov
sub
lret
pusha
mov
xor
test
ds
inc
sub
xchg
jge
xor
pushf
lcall
iret
or
xchg
or
push
inc
mov
dec
outsl
test
mov
mov
aaa
cli
sbb
pop
jo,pt
and
jmp
pop
aad
sarl
xor
sub
aaa
pop
pop
icebp
in
das
xor
inc
xor
push
imul
pop
add
adc
enter
fstpl
lds
test
imul
call
bound
pop
sbb
jge
jge
pop
imul
ret
movups
mov
mov
pop
mov
mov
sahf
xchg
ds
inc
push
fs
pop
xchg
sbb
outsl
jmp
jno
jnp
or
shrl
lcall
dec
test
sar
scas
jl
pop
cltd
pop
rcrb
ss
inc
push
loope
pop
hlt
stos
xchg
jnp
or
arpl
int3
stos
mov
or
pop
rolb
sub
jl
lods
ja
sbb
aas
hlt
test
scas
fsts
cmc
xchg
dec
push
in
es
shrb
imul
push
loope
xchg
bound
xor
movsl
cltd
xchg
add
fmul
mov
mov
aad
pop
push
arpl
insb
cmc
and
cmpsb
mov
cmp
sub
inc
fs
sbb
pusha
lret
rclb
aam
imul
dec
xchg
stos
mov
stos
jb
adc
adc
sbb
push
in
test
adc
mov
in
pop
mov
lret
jl
jmp
es
pop
mov
pop
lods
nop
cmc
movsl
jmp
insl
mov
pop
outsl
push
shrb
lret
add
rolb
inc
adc
cltd
ljmp
fwait
and
dec
pop
jbe
cmpsb
mov
xor
mov
adc
cmp
push
es
pop
mov
fwait
in
jno
outsb
shll
fldenv
dec
mov
sbb
add
iret
sub
adc
dec
sbb
inc
fdivs
stos
pop
dec
arpl
repnz
jo
insb
cltd
mov
and
ds
xchg
addl
frndint
ja
out
dec
adc
not
idivl
js
or
imul
mov
jg
out
ret
sahf
js
bound
mov
mov
fwait
leave
sub
leave
cli
clc
sbb
mov
xlat
cli
fisttpll
pushf
ja
jnp
xchg
add
imul
lahf
xlat
mov
mov
or
inc
jns
sbb
push
inc
mov
call
mov
mov
fistpl
or
ds
mov
fwait
add
shl
lret
sbb
mov
and
shl
xorb
popf
cmp
cmp
out
mov
in
fisttps
jg
sbb
cmp
add
insl
out
mov
dec
je
inc
sbb
sub
and
dec
das
es
and
loopne
jo
fnstenv
sti
jnp
push
rcll
repz
mov
mov
test
cmp
aaa
mov
xor
mov
sbb
std
les
ret
sbb
shll
popf
add
xchg
icebp
in
mov
aas
xor
es
sbb
add
pop
mov
lock
pop
and
xchg
nop
jmp
ljmp
push
or
idiv
xlat
mov
push
dec
gs
hlt
stos
aam
xlat
gs
and
fcmove
jmp
add
pop
lea
mov
stc
push
icebp
test
xchg
sbb
push
sbb
adc
ret
fsubs
dec
xor
push
fwait
leave
daa
push
imul
pop
adcl
xchg
pop
mov
std
adc
fistpl
adc
mov
mov
testb
pushf
loop
push
ja
mov
test
clc
rorl
mov
xchg
inc
mov
lahf
repz
sahf
sarl
sub
mov
dec
push
mov
pop
dec
mov
lret
sub
pop
cltd
dec
and
test
outsb
lods
lods
in
xchg
les
mov
fisubrs
fsubs
outsb
arpl
fisubrl
dec
mov
int
pop
adc
xchg
loope
xchg
fcmovnbe
mov
aad
std
loope
lock
pop
fmuls
mov
push
mov
into
xchg
je
pop
xchg
add
xchg
lods
test
iret
inc
ficoms
cmpsb
leave
push
fstpl
inc
shll
push
jnp
sub
xchg
jg
imul
dec
test
sarl
lcall
dec
mov
mov
jnp
fmul
jo
jg
sbb
ret
clc
cmp
pop
lods
sbb
cmp
and
sahf
jno
mov
cmc
outsl
sti
cltd
jmp
adc
ljmp
pop
xchg
sbb
outsb
shrb
loopne
add
dec
push
cmp
or
push
aaa
outsl
mov
sub
scas
mov
jg
xchg
pop
pop
adc
mov
xor
or
cmc
mov
or
jno
fdivr
xchg
mov
cld
xchg
insl
ljmp
xor
pop
mov
pop
or
and
ljmp
int
xchg
roll
testb
imul
or
pop
jbe
int3
loopne
push
lds
inc
cltd
and
iret
add
inc
arpl
pusha
pop
fimull
cwtl
and
data16
fldt
mov
retw
sub
iret
adc
in
add
daa
testl
mov
or
dec
sub
sbb
aad
shl
inc
shll
das
xchg
test
shll
loope
push
jb
pop
push
or
lret
push
jo
aad
add
int3
xchg
or
mov
dec
cs
in
cli
or
push
ljmp
lret
clc
movsl
cs
les
fadd
mov
jge
fcmovb
in
jmp
test
dec
dec
mov
mov
insb
jne
pop
sbb
nop
rcrb
in
stos
gs
mov
rcrb
les
lds
and
call
mov
rorb
and
pushf
in
cmpb
sbb
jns
std
or
mov
idivb
movq
fiadds
adc
add
stos
xor
scas
xchg
cld
ret
cmp
and
add
jo
fidivrl
das
js
sbb
jp
lds
jecxz
push
scas
cmp
dec
mov
mov
mov
cli
sub
dec
and
lret
sbb
cld
es
mov
inc
pop
cld
and
das
inc
int
pop
push
push
sub
int
push
mov
popa
enter
adcb
scas
mov
dec
ja
sbb
adc
jne
mov
ja
adc
ret
sti
jns
mov
push
jle
push
mov
pop
iret
stc
ret
xchg
lahf
push
cli
cmpsl
popf
ja
cmp
out
cmp
mov
in
mov
dec
cmp
insb
mov
adc
in
jns
lcall
mov
cmp
int3
or
leave
jne
push
add
xor
filds
xchg
mov
mov
mov
fs
gs
js
cmc
psubsw
aaa
xor
mov
repnz
in
fwait
mov
or
stc
mov
popa
loopne
movups
or
dec
mov
sub
popf
dec
xchg
sub
cmp
mov
add
inc
adc
inc
xlat
in
xchg
xor
push
mov
sbb
xchg
pushf
mov
xchg
test
add
push
lea
fcmovbe
adc
call
cs
cld
outsb
sub
xchg
xor
in
loopne
push
xor
lea
push
and
pop
cltd
das
ljmp
enter
jle
jg
pushl
inc
lret
clc
add
rcl
xchg
lahf
les
leave
pop
jmp
cwtd
pop
cmpsl
leave
insb
and
jo
rcrl
enter
out
int3
lret
and
fdivr
jb
dec
test
mov
daa
clc
mov
iret
es
inc
mov
stos
jl
insb
ljmp
cmpl
xchg
mov
inc
inc
jne
cmpsl
add
xchg
xchg
push
rolb
out
repnz
jbe
xchg
imulb
bound
sbbl
sub
adc
loop
cmp
adc
ret
xor
push
les
ret
bound
nop
les
cwtl
cld
sbb
jmp
movsb
adc
pop
iret
xor
outsl
sub
pop
movsb
aas
or
in
inc
fwait
adc
cld
adc
inc
cmp
leave
push
aas
fdiv
push
jnp
pop
jae
mov
pop
stc
inc
xchg
or
dec
cmp
mov
mov
jnp
imul
push
jnp
sub
test
xchg
jge
or
fsubr
fcoms
inc
cmp
in
push
xchg
or
dec
xchg
and
cmp
jbe
outsl
fwait
stc
mov
cmpsb
call
pop
pop
xor
jecxz
ss
sub
xchg
pop
fs
leave
sub
fwait
or
mov
ljmp
je
mov
pop
cwtl
movsl
je
movsl
mov
dec
orb
test
jp
and
test
mov
mov
push
inc
cwtl
xchg
scas
ja
mov
into
jmp
dec
insl
push
xor
sar
lds
push
cld
cmp
mov
mov
daa
bound
pop
dec
push
cmp
sarb
test
push
std
cli
out
loopne
jne
xlat
fadds
enter
ja
dec
test
call
gs
jmp
xchg
push
jae
mov
cmp
sbb
pop
and
imul
mov
or
push
adcb
cltd
dec
test
ret
mov
ljmp
xor
rcll
xchg
loopne
iret
pop
push
stos
je
es
int
jbe
xlat
call
xor
cmp
sbb
cvtdq2ps
out
call
in
sbbb
stc
aas
pop
cmpsl
push
or
xor
stos
sbb
mov
test
out
xchg
stos
mov
pop
inc
xchg
inc
loope
push
add
push
jae
cltd
fimuls
pop
mov
std
mov
xor
push
mov
je
repz
loope
lock
bound
push
sbb
lods
or
push
xor
or
or
ret
pushf
jb
mov
mov
ret
jnp
cmpsb
test
or
out
stos
pop
in
xchg
call
cld
xchg
cmc
and
enter
pop
imul
out
and
dec
jno
jno
test
add
mov
dec
out
out
lock
ror
aas
mov
and
cmp
loopne,pn
cltd
add
repnz
pop
stos
int3
cmp
sbb
mov
xor
pop
jle
mov
fistpll
sbb
mov
push
in
call
out
fwait
dec
jne
mov
imul
into
add
test
add
pop
jo
jns
out
mov
stos
bound
and
push
enter
xchg
xchg
jl
push
into
setg
bound
add
sbb
dec
and
xchg
xchg
mov
test
mov
and
inc
rclb
pop
rcrb
mov
shll
mov
jmp
daa
lods
fstps
lcall
mov
push
add
add
daa
or
or
add
sub
mov
lret
data16
mulb
lret
lea
inc
cltd
bound
cmp
mov
sub
ja
dec
out
sti
jo
pop
test
cltd
mov
out
jl
loop
mov
loope
sahf
sub
in
sbb
cmpsl
rorb
xchg
jecxz
cli
push
lock
insl
out
mov
cmp
fisubrs
dec
ja
sarl
out
xchg
mov
and
mov
cmpsl
popf
in
or
jns
jns
lds
ds
out
mov
cmc
mov
xor
enter
arpl
int3
repz
fnstcw
and
sub
ja
bound
ds
cmc
push
cmp
lods
out
sub
iret
pop
inc
jb
fdivl
inc
and
add
ret
pop
cmp
push
fmuls
and
push
inc
dec
imul
fisttpll
in
jg
clc
stc
ficoms
sbb
cmp
or
stos
adc
test
cwtl
lret
inc
inc
and
sbb
sbb
adc
cmc
add
mov
pushf
sbb
xor
into
adc
cmpsl
dec
addl
xchg
cmc
das
xor
pop
js
nop
sub
sub
adc
adc
ret
pusha
mov
push
ret
adc
cmp
inc
sub
inc
sbb
cmpsl
pop
push
daa
cli
daa
pop
mov
call
mov
fwait
push
pop
mov
outsb
mov
pop
xorl
adc
dec
pop
dec
out
push
test
hlt
mov
xchg
adc
fisubrs
pop
test
dec
jmp
out
inc
and
arpl
xchg
aad
stos
cmpsb
jge
repnz
push
cs
repz
or
xchg
pusha
xchg
mov
pop
sti
mov
fisubrl
ja
sahf
fdivs
push
sbb
gs
push
movsl
insl
stc
negb
into
sbb
fisubs
sti
cmp
inc
pop
fwait
push
fcompl
clc
add
cmp
mov
repz
sahf
pop
cmc
fdivrs
lods
lahf
bound
sahf
lods
stc
mov
sbb
xchg
mov
xchg
sarl
mull
mov
jecxz
lock
leave
outsl
xchg
dec
loop
push
loopne
ds
push
dec
bound
imul
push
or
mov
stc
jg
or
imul
int
repz
test
mov
mov
jge
jbe
mov
jns
in
inc
dec
daa
daa
and
cmpsl
mov
insl
mov
and
mov
movsb
call
cltd
adc
fsubr
push
cmpsl
dec
imul
dec
in
dec
pop
mov
cmp
test
iret
test
outsl
push
out
jmp
jl
xchg
or
inc
out
mov
jg
or
out
loopne
and
dec
xchg
lock
aad
iret
mov
inc
mov
cmc
clc
dec
cmpsb
out
ljmp
jmp
and
cwtl
cli
fsubs
add
jb
xchg
dec
mov
testb
shlb
mov
inc
and
xor
or
insb
ret
cmp
movsb
cmpsb
xchg
cwtl
xor
out
jl
inc
cmp
test
xor
call
std
jmp
mul
fadds
push
push
add
mov
cwtl
ljmp
cld
pop
pusha
cmp
out
lods
and
rolb
and
cmpl
mov
fdivl
xchg
fadds
sub
sbb
popf
jae
daa
cld
adc
hlt
inc
flds
jnp
arpl
inc
cmp
js
cmc
cmp
or
mov
out
aas
inc
dec
pop
cmp
out
sbb
add
call
cmpsb
fwait
leave
mov
ror
aad
push
cli
and
jmp
mov
into
sbb
xchg
lods
push
xchg
popf
sbb
mov
shl
aad
pop
add
jne,pt
loopne
sbb
mov
test
adc
pop
inc
iret
cld
ret
dec
jne
dec
mov
push
scas
rol
mov
add
mov
call
mov
adc
stc
mov
inc
imul
sahf
pop
shrl
xchg
pop
jnp
outsb
xchg
xsha256
cmpsb
push
mov
cmpsb
jno
cmp
or
xor
xorb
lods
mov
std
and
std
lcall
lret
cmp
inc
jmp
xlat
cltd
imul
in
dec
push
add
sbb
dec
decl
cmpsb
sub
loope
fwait
div
push
sti
pop
lret
mov
cmpb
fnstcw
stos
xchg
cmp
dec
shl
push
add
cmp
enter
cmp
adc
xor
int
sbb
addr16
pop
out
xor
jl
mul
aam
mov
mov
dec
shlb
popf
popa
push
fsts
push
lds
repz
out
mov
or
std
nop
in
xchg
cld
int
xchg
or
inc
inc
into
ficoms
sbb
cmp
lock
and
fisubs
dec
dec
or
stos
cmp
je
or
xchg
in
add
mov
pop
divb
xchg
aaa
inc
push
pop
xchg
fisubl
ja
nop
cs
xlat
mov
and
sti
push
div
add
adc
loop
adc
iret
add
dec
xchg
mov
mov
popf
or
mov
cwtl
rcrb
pusha
enter
ficomps
adcb
jnp
jmp
mov
fcoms
mov
cmc
jg
test
push
nop
or
lret
repnz
mov
aaa
shlb
or
and
mov
js
std
mov
xor
daa
jns
pop
and
shrb
mov
xchg
sub
outsl
mov
sbb
pop
cmp
inc
out
in
imul
cmpsb
test
jbe
xchg
xchg
test
push
mov
mov
mov
inc
push
sub
mov
shll
xchg
dec
nop
mov
and
or
jbe
sub
or
jb
add
ds
cmc
lahf
lret
gs
out
test
dec
jle
cld
or
add
cld
or
cmc
sbb
imul
ret
das
xor
ja
fwait
mov
xchg
mov
inc
inc
adc
cmp
cwtl
pop
jmp
jmp
push
jge
jnp
jle
mov
push
fildl
rclb
dec
psllw
dec
push
out
test
fldl
sbb
mov
pop
inc
lret
mov
fistl
fnstenv
cwtl
out
pop
xor
jae
or
pop
jae
hlt
xchg
pop
pop
dec
rorl
jns
dec
mov
movsb
data16
mov
in
movsl
sub
cmp
insb
dec
xor
push
lret
lcall
inc
enter
pop
test
add
inc
bound
nop
add
inc
outsl
sbb
iret
stos
mov
sub
mov
xchg
movsl
push
add
push
xor
dec
fdivrs
daa
xchg
or
int
pop
cmpsl
ror
mov
repz
inc
or
lcall
out
fstpt
clc
ja
std
mov
push
mov
and
or
mov
fwait
call
lods
in
push
or
cltd
movsl
jb
cwtl
pushf
cmp
addr16
pop
jl
leave
mov
cwtl
jo
cmp
out
dec
jne,pn
push
cli
into
xchg
adc
movsb
out
add
xchg
push
orl
sahf
dec
clc
sahf
or
mov
sti
or
xor
sub
and
adc
jmp
into
divl
lret
aas
mov
cmpb
movsl
mov
pop
mov
inc
adcb
mov
sub
xor
mov
mov
xchg
pop
jae
stos
mov
sub
cmpl
sahf
in
test
push
inc
lea
mov
sub
or
jmp
pop
xor
adcb
and
xchg
add
and
push
add
das
pop
std
adc
addl
lret
mov
add
ljmp
push
xor
and
adc
scas
test
aas
pop
inc
mov
lods
test
pop
inc
jmp
inc
gs
fidivl
sbb
push
xchg
xor
out
dec
cmpsl
in
inc
repnz
mov
xchg
jnp
xor
fisttpl
je
in
adc
das
xor
gs
lret
repnz
pop
outsb
aam
fs
cmp
call
clc
mov
sub
cmc
cwtl
scas
add
xorl
and
xchg
ljmp
or
sub
js
and
dec
or
xor
mov
jecxz
jnp
insb
or
cwtl
dec
or
or
push
mov
sub
push
rcrb
sbbl
pushf
daa
incb
push
inc
call
cld
ja
sbb
out
movsb
cs
add
adc
xchg
push
ds
in
pop
shll
jecxz
xchg
movsl
loop
dec
push
out
inc
pop
sub
int3
sub
stos
insb
cmp
adc
and
or
insb
add
pop
jb
mov
jmp
jge
repnz
sbb
jnp
subl
push
sahf
cmpb
lds
xor
adc
dec
fnstenv
xchg
stos
lret
aas
dec
icebp
lods
test
mov
pop
push
clc
push
imulb
adc
mov
dec
pop
jl
dec
call
dec
inc
jns
and
orb
pop
adc
imul
sub
push
and
xor
xor
jge
inc
imul
fldl
mov
mov
out
in
push
mov
in
lahf
pop
imul
ja
jle
mov
dec
testl
xchg
test
aas
fistl
sub
xchg
popf
mov
mov
or
pop
gs
jne
adc
arpl
in
icebp
push
scas
daa
rcrb
les
lods
push
jns
xlat
push
dec
dec
js
insb
sbb
es
orb
jmp
pushf
dec
pop
mov
subb
ret
mov
mov
outsb
and
dec
cltd
into
shlb
xor
daa
or
add
or
cmp
fwait
mov
add
dec
loop
xchg
jns
repz
push
inc
push
ja
ja
imul
xchg
mov
sub
mov
fwait
dec
loope
in
mov
dec
pop
in
pop
call
adc
stc
out
jmp
inc
pop
lret
daa
pop
jp
cmp
push
testl
insl
jecxz
popa
into
add
add
ds
jnp
lds
es
das
mov
sbb
aaa
loop
mov
cs
sbb
stos
adc
sub
pop
and
js
adc
cmc
xor
ror
hlt
call
xchg
pop
jp
shl
sub
pop
or
orb
pop
jns
stc
xchg
sbb
loope
xchg
inc
inc
enter
xor
cmp
pop
jns
loopew
stos
stos
and
pop
adc
test
xchg
adc
lock
pop
popa
adc
popa
push
sar
iret
into
ror
movsb
out
jle
mov
xlat
adc
mov
enter
ljmp
fldcw
xchg
lds
mov
hlt
test
add
add
lods
add
cmp
push
sbb
jo
or
pop
arpl
or
cmp
xchg
insb
xchg
js
cwtl
adc
jle
jne
add
pop
push
mov
das
xchg
out
lahf
scas
xor
lret
xor
jg
pop
pop
xor
addr16
das
arpl
loope
pop
dec
ds
scas
les
scas
sub
adc
mov
mov
jle
jns
rcrb
push
jl
sub
cmpsl
dec
inc
bound
push
sbb
sub
xlat
inc
loop
cmp
int
lcall
mov
adcl
jbe
mov
ret
sahf
loop
xchg
xchg
jae
and
jns
or
mov
roll
and
in
into
movsb
lret
imul
xchg
mov
or
cltd
sbb
orb
pop
xchg
jle
lret
dec
dec
imul
mov
pop
cmp
nop
dec
mov
fisttpll
es
adc
insb
jo
push
sbb
in
lahf
pushf
loopne
test
jg
push
cld
es
xchg
mov
insl
fistpl
clc
jnp
sahf
add
pop
mov
adc
push
jge
and
xchg
in
mov
jge
iret
xor
cli
jmp
push
mov
addr16
lea
jnp
cmp
fsubrs
in
push
out
xor
int
and
les
lret
mov
clc
cmc
test
stos
pop
dec
popf
push
call
jge
lret
add
addr16
in
mov
sub
adc
adc
mov
pop
mov
lds
xchg
int3
jmp
jbe
push
in
movsl
call
fstpl
cmp
pushf
mov
insl
push
pushl
js
mov
jl
das
xchg
test
rcrb
xor
test
cmp
loope
xlat
mov
imul
and
bound
xchg
pop
cmpsl
sub
in
mov
add
jle
dec
and
out
adc
jl
sub
xchg
xor
inc
enter
mov
sbb
and
rcrl
mov
fnsave
push
pop
mov
xorl
lods
nop
call
inc
daa
sbb
xor
nop
dec
or
das
xlat
push
addr16
mov
in
push
rcll
aaa
pop
ret
xor
mov
mov
lock
pop
adc
dec
mov
int
insl
repnz
push
popa
dec
push
xchg
imulb
cwtl
xor
inc
fwait
mov
aad
push
lods
xchg
add
stos
dec
mov
das
insb
mov
ret
cmp
and
out
stos
xchg
dec
imul
cld
scas
int
and
mov
or
and
xor
inc
rep
testb
popa
cmp
add
loopne
mov
clc
pop
pop
xchg
add
fstl
pop
mov
mov
fisttps
loope
insb
pop
outsb
mov
fidivrl
lock
push
aas
jnp
adcl
xchg
insb
imul
add
push
xchg
lret
mov
popa
sub
movd
mov
jo
inc
pop
xchg
jp
out
jmp
push
cmp
in
or
dec
mov
dec
cld
pop
repnz
and
add
fwait
movsb
push
lods
dec
ja
cmc
mov
cmp
loopne
inc
sub
out
call
jmp
push
popf
sbb
adc
sub
jle
mov
xor
jmp
inc
insb
repnz
xlat
repnz
xor
xchg
sbb
lretw
pushf
cmp
imul
in
jae
fimull
xchg
mov
fs
push
push
mov
pop
imulb
jb
cmc
test
std
incb
cmp
enter
xchg
mov
mov
mov
in
js
inc
and
cmp
jmp
adcb
mov
hlt
std
push
push
je
adc
mov
loopne
cmpl
aaa
cmp
incl
adc
ss
sub
icebp
and
sub
or
jp
xor
insb
ret
xchg
xchg
call
cltd
cltd
lret
lods
adc
clc
cli
test
das
xchg
popa
scas
or
adc
faddl
pop
adc
rcrl
mov
dec
cmc
insl
mov
sbb
fstps
mov
cmp
insl
mov
cmc
xchg
into
mov
sbb
out
jae
lret
insb
out
jb
fsubs
and
call
jl
inc
pcmpeqw
shl
jmp
int
bound
sbb
das
add
fnstcw
iret
aaa
enter
inc
xor
pusha
lea
cmp
int3
xchg
fmuls
cwtl
cmp
xor
jl
shrb
jecxz
in
mov
mov
pop
call
jp
push
repz
jnp
inc
mov
jge
repnz
fistpll
add
or
add
inc
scas
dec
pop
pop
inc
mov
ret
js
adc
sub
clc
outsb
insb
cmpsl
pop
test
xor
mov
imul
pop
sub
jno
imul
jno
sbb
mov
ja
pushf
js
repz
mov
loope
fwait
inc
std
mov
xlat
lds
out
and
mov
lahf
in
aad
add
xchg
movsb
outsl
xchg
xor
insl
rep
or
xchg
push
mov
mov
test
cltd
sub
cmp
inc
sbb
sbb
cmp
jnp
and
push
mov
mov
sub
ja
inc
in
fsubl
int
pusha
or
gs
inc
mov
inc
cmp
outsl
adc
inc
mov
aam
clc
sahf
add
mov
xchg
dec
insb
in
ss
pop
or
stos
xlat
out
repnz
into
test
mov
adc
pushf
cmp
test
icebp
clc
mov
xchg
xor
cmp
mov
xchg
sbb
pop
jae
repnz
or
test
int
cs
xor
divl
ja
lock
popf
xchg
add
mov
clc
scas
add
stc
inc
or
or
push
jno
enter
inc
cli
scas
pop
enter
xchg
lods
pop
fs
sub
dec
repz
cld
jmp
add
js
inc
sahf
push
aad
enter
ljmp
push
ret
sbb
iret
pop
mulb
jo
adc
leave
repz
das
or
jg
pusha
adc
sub
mov
stc
out
add
aas
outsb
fs
sbb
inc
clc
sahf
std
cmp
push
jg
stc
cmpsb
out
mov
mov
jbe
xor
faddl
add
dec
push
xchg
lods
cltd
mov
cmp
and
lret
push
xor
call
jg
cmp
test
pop
fdivs
imul
add
push
insb
outsl
stc
lds
mov
mov
shll
or
cld
fwait
aaa
test
test
pop
imul
out
pusha
push
push
sub
js
loopne
es
add
inc
pop
pusha
push
leave
jne
in
inc
sbb
icebp
xabort
xchg
adc
xchg
in
adc
xchg
xchg
xor
cmp
inc
or
dec
dec
sub
cmpl
gs
sub
lods
nop
add
and
sub
pop
adc
sub
fbstp
mov
xor
vmread
iret
dec
xchg
jnp
rcll
dec
movsl
test
loope
mov
or
inc
mov
fimuls
jnp
shr
pop
aam
or
push
mov
and
mov
jnp
in
lea
mov
xor
int3
sub
xor
rcl
js
inc
icebp
or
add
and
sbb
in
aam
fcomi
ds
xor
xchg
xor
sbb
xlat
ficoml
sub
push
addr16
dec
call
sbb
xchg
and
jmp
cs
ret
xor
movsb
xor
push
ret
lahf
lcall
inc
into
mov
imul
adcb
cmp
mov
lahf
sbb
jae
xchg
inc
aam
and
or
xchg
jl
mov
sub
clc
fs
lcall
popf
push
add
mov
mov
xchg
pop
pop
out
dec
sti
int3
xor
xlat
fisttps
or
push
in
or
ret
pusha
jb
in
adc
jae
inc
jnp
xor
pop
mov
xchg
mov
add
pop
test
pushf
xchg
nop
jb
xchg
in
cltd
inc
js
test
push
nop
in
xor
fists
popf
test
dec
cltd
push
inc
cmpsl
dec
jge
push
jecxz
cli
js
adc
test
cmc
call
cmp
stos
jnp
lcall
gs
cltd
xlat
pop
sbb
je
adc
jecxz
lret
mov
xorb
jl,pt
add
cmpsl
pop
xchg
sbb
andl
aaa
dec
stos
push
sbb
xchg
les
lea
das
setns
pop
scas
movb
inc
mov
or
negb
ss
call
loope
fstpl
loop
push
inc
inc
fwait
shl
mov
test
test
fsts
scas
xor
push
je
insl
fadds
test
popa
test
sub
outsb
in
jae
orl
int3
pop
out
sub
int3
pusha
adc
enter
shrl
pop
mov
add
dec
xor
mov
fldt
xor
cltd
data16
pusha
sub
shr
jae
int3
dec
jo
fsubl
mov
pop
fcoml
imul
pusha
in
and
arpl
aam
ss
mov
ds
mov
push
adc
ret
add
call
mov
adc
inc
filds
int3
loop
pop
shrb
addr16
sarl
pop
into
das
add
jae
xor
loopne
cmp
inc
mull
xchg
dec
add
push
xor
jno
loopne
xor
mov
or
xchg
sti
and
sbb
imul
xor
icebp
loop
ret
pop
xor
fs
nop
stos
mov
lret
jns
cltd
mov
mov
dec
in
inc
jne
jae
in
push
adc
cmp
cmp
push
push
cmpsb
stos
insb
sub
loope
xchg
mov
clc
xor
leave
jnp
popf
lcall
fimull
lahf
divb
lahf
dec
dec
adc
push
movb
mov
ret
jo
cmpsl
in
mov
cmp
push
mov
gs
ds
and
in
inc
pop
daa
xlat
adc
bound
jl
out
fmuls
sbb
dec
and
fwait
mov
sbb
dec
repnz
cmp
mov
subb
daa
add
enter
mov
cmp
lcall
pusha
cmp
add
jecxz
sbb
jns,pn
mov
sub
fucom
xchg
std
popf
sbb
fcoms
adc
xchg
sbb
or
popa
lret
movsb
dec
push
pop
outsl
push
mov
ffree
dec
mov
and
clc
shrl
adc
xchg
call
lea
sahf
repz
jp
f2xm1
addr16
bound
sub
aaa
sbb
aad
cmp
and
ss
daa
sbb
xor
mov
sbb
pop
jae
andb
popa
fidivl
mov
cmpsb
mull
push
mov
in
sub
inc
hlt
xor
dec
clc
cmp
push
imul
fcmovnbe
pop
stos
outsl
cmpb
lret
stos
and
fmull
fbstp
cmp
sbb
bound
pusha
int
pop
adc
cmp
mov
or
push
cmp
adc
push
and
test
jae
xor
mov
mov
jo
arpl
pop
in
inc
dec
sub
cmpsb
iret
pop
scas
addr16
stos
adc
or
scas
filds
or
stos
inc
and
loop
imul
push
push
xchg
rcrl
jo
inc
sti
jne
test
inc
mov
or
jecxz
xchg
iret
or
nop
push
mov
cld
mov
shl
lods
jbe
jg
xor
and
sub
or
iret
or
jno
add
or
lods
scas
shll
dec
in
and
dec
and
into
push
cmpsl
loop
lea
insb
cmp
imul
idivl
mov
push
sbb
scas
daa
rcrb
cmc
dec
lcall
fcmovne
and
dec
xchg
mov
pop
xlat
aas
clc
xor
pusha
push
ret
pop
arpl
ret
and
stos
mov
stos
mov
popf
int3
jmp
push
std
xchg
mov
jnp
mov
stos
bound
fwait
cwtl
aam
cmp
cld
loop
in
idivb
fs
addr16
call
sub
sub
and
insl
xchg
and
push
jl
dec
je
aas
ljmp
xchg
and
and
lods
xchg
sti
out
mov
mov
out
mov
shrb
ljmp
addb
mov
push
add
pop
lahf
push
sbb
sub
ds
adc
loop
mov
gs
sub
ljmp
test
hlt
cmpsl
sub
jae
fldt
int
pop
jnp
pop
add
imul
add
loopne
lea
in
xlat
inc
pop
mov
push
jmp
sahf
jmp
sub
test
and
jge
out
les
inc
std
push
daa
lahf
mov
and
lret
fcmovbe
inc
sbb
test
add
sub
and
xor
mov
mov
daa
jb
lahf
and
pop
ds
loopne
xchg
js
sbb
xchg
sti
adc
dec
out
push
push
pop
enter
push
jbe
aaa
mov
sub
loope
pop
fsts
roll
cmp
stc
ret
lahf
rcr
addr16
sbb
fadds
cltd
sub
add
leave
les
mov
sub
xor
xchg
sarl
dec
mov
pop
adc
or
insl
and
xor
mov
mov
pop
jmp
adcb
movsb
or
pop
sub
xchg
int3
mov
push
into
fstl
std
cmp
add
popf
dec
in
mov
xor
mov
pop
les
inc
jg
aaa
xlat
xor
imul
aad
push
mov
stos
inc
out
push
int
and
mov
mov
test
sbb
inc
jl
cmpsl
aas
fstl
out
inc
push
push
popl
jle
adc
leave
cld
xchg
addr16
repz
lock
push
call
or
aaa
xor
xlat
cmp
aad
scas
jae
xchg
push
adc
sub
inc
popa
inc
pop
daa
dec
hlt
rol
lods
inc
lldt
mov
in
cmpsl
dec
push
cmpsb
test
or
stos
pop
je
daa
enter
cld
dec
enter
arpl
incl
jl
pop
jns
mov
dec
add
pop
inc
mov
das
jge
cmp
data16
outsl
or
and
js
je
dec
xor
jns
shl
mov
push
sub
cmp
test
stc
cmpsl
adc
sub
mov
addr16
psubsw
cli
movsb
stc
xchg
ffreep
jecxz
sbb
mov
push
daa
scas
daa
ljmp
stos
test
nop
lahf
scas
push
inc
cmc
shrb
in
cli
or
lods
sbb
pop
nop
jns
push
iret
jmp
adcl
ss
sti
jmp
jo
in
fnsave
push
mov
cmp
orb
cli
dec
cwtl
pop
mov
push
imul
and
xchg
mov
cld
xchg
jno
inc
mov
addr16
adc
lock
daa
cltd
cld
jl
push
lcall
adc
stc
push
fcmove
lcall
push
cmp
fistpll
mov
sub
repnz
cs
pop
repz
cmp
sbb
std
hlt
ss
cli
cmp
pop
push
adc
sub
jg
push
notb
in
ljmp
rorl
jmp
mov
adc
mov
add
jo
jb
movsl
insl
pop
lea
add
jnp
and
fcoml
xchg
out
xchg
push
mov
gs
daa
sbb
sub
imul
xchg
int3
mov
mov
mov
dec
xchg
in
cli
sub
insl
insb
enter
dec
out
sbb
inc
or
enter
inc
sub
imul
hlt
cmp
xchg
push
pop
inc
gs
pop
lcall
xchg
outsb
into
in
lods
jecxz
testl
sbb
mov
rolb
repnz
push
dec
add
adc
mov
mov
inc
xor
xor
je
jne
orb
push
imul
and
jne
sar
lcall
ret
lds
inc
gs
int3
fnstenv
jmp
call
movsb
inc
xchg
jge
js
cwtl
jno
in
jp
shll
mov
scas
fidivrs
dec
or
xchg
scas
cld
stc
arpl
popa
shlb
orb
lahf
ret
clc
sub
add
cmp
pop
dec
icebp
sbbb
pop
addr16
pusha
sbb
sub
and
push
lcall
dec
cmp
mov
fs
hlt
mov
inc
sbb
or
mov
xchg
daa
mov
adc
call
and
mov
gs
sbb
sub
scas
and
movsb
leave
cmc
in
in
loopne
xchg
rcll
lds
mov
out
mov
adc
jg
rcrb
repz
stos
ljmp
mov
or
call
mov
xor
and
outsl
lds
insl
in
jae
sbb
pop
imul
lahf
leave
mov
push
jo
enter
inc
lcall
push
and
jle
out
dec
and
imul
xchg
adc
jb
int
je
push
daa
push
pusha
les
popa
cmp
call
test
inc
xchg
mov
insb
adc
jge
lret
test
xor
mov
xor
fcom
inc
cmp
cs
ljmp
bound
add
sub
dec
clc
add
jle
push
sub
mov
push
cmp
push
pop
cmpsl
cld
or
out
adc
mov
xor
or
mov
or
sub
rcl
lods
push
das
mov
xchg
mov
mov
sbb
out
add
pop
jae
dec
jp
jecxz
sbb
mov
out
ret
insl
test
fsubl
ret
push
dec
add
cmp
outsl
pusha
ja
cli
hlt
stos
dec
ja
adc
mov
add
mov
xor
sub
lods
adc
mov
js
add
test
mov
xchg
push
sbb
push
mov
nop
add
cmp
das
es
xchg
jecxz
bound
pusha
out
pop
mov
pop
icebp
xor
xchg
lods
inc
in
ret
adc
cmp
adc
jnp
in
xchg
fsubl
jnp
repnz
lret
jle
decl
sti
test
sub
mov
data16
xchg
cs
bound
fstpl
cmp
xorb
sbb
outsl
mov
adc
or
ret
cmpb
mov
mov
repz
int
add
xchg
jns
pop
pop
jae
lods
insl
sub
push
xchg
xchg
cmpsl
fsubs
mov
add
ret
jae
dec
ja
out
scas
sub
mov
cmp
jmp
movsb
pop
adc
mov
test
fildl
mov
jbe
dec
mov
mov
imul
push
push
iret
pop
insl
add
jmp
sahf
int3
clc
push
insb
jmp
or
cmc
ret
fdivrs
lods
jbe
not
sti
cmp
cld
gs
in
jb
inc
outsb
dec
cmp
pop
js
push
and
xor
iret
jnp
add
pop
fbld
ret
popf
push
loop
push
jae
dec
xchg
aam
dec
add
pop
inc
fadd
push
test
push
icebp
shll
test
mov
or
mov
mov
and
adc
jle
xchg
cmp
int3
xchg
push
xchg
arpl
loope
push
push
repz
cmpsb
pushf
andb
test
js
loopne
into
inc
mov
vpcomuq
dec
jae
imul
mov
dec
nop
gs
andb
mov
jecxz
and
jns
fwait
lods
aad
xor
push
fldenv
jl
les
out
push
stc
mov
fists
mov
ja
xor
aam
xchg
dec
in
adc
jne
pop
or
mov
sbbb
loop
call
mov
mov
and
dec
in
push
inc
push
xchg
mov
jb
repnz
adc
inc
lods
lock
ret
add
jbe
inc
divb
ss
dec
rclb
enter
mov
jnp
sub
inc
adc
mov
push
xchg
mov
aam
mov
xchg
sbb
scas
cmp
add
std
adc
sub
ss
jns
push
fnstcw
lret
dec
daa
rcrl
test
lods
leave
fistl
cmpsl
aad
and
sbb
cld
jg
and
idiv
dec
loopne
sbb
mov
pop
outsl
js
push
pop
cltd
std
movsl
stos
andl
mov
inc
outsb
push
lock
inc
sbb
icebp
lret
cwtl
push
sti
push
mov
lods
rcrl
sbb
lahf
pop
leave
mov
push
xorb
xchg
mov
dec
inc
imul
popa
stos
lcall
adc
test
rolb
das
jp
std
jno
mov
push
xchg
fisubs
inc
lcall
push
popa
rorl
stc
adc
push
sub
cmpsl
rcrl
xchg
dec
mov
in
push
jno
mov
adc
jnp
mov
imul
fidivrs
and
cli
adc
lds
push
mov
sti
fwait
ja
das
mov
rcrl
pop
scas
or
cmp
xchg
mov
push
scas
fiaddl
movsl
lock
cmp
sbb
cld
daa
inc
inc
idivb
sub
aad
and
dec
sub
add
je
add
fiaddl
idivl
pusha
add
ret
clc
inc
or
inc
imul
insl
pop
pop
pop
xlat
push
cs
pop
xchg
les
mov
movsl
mov
fildl
daa
out
pop
push
sbb
lods
das
pop
in
aas
push
arpl
mov
shrb
loope
sarb
xor
shl
push
in
divb
fucomp
xchg
xchg
jecxz
pop
aam
mov
pop
fwait
inc
adc
pop
add
adc
fldl
mov
pop
mov
into
or
adc
inc
lret
sub
jae
mov
dec
dec
mov
xchg
jb
jmp
iret
lea
out
outsb
sbb
or
mov
mov
les
aas
popa
rolb
sbb
mov
outsb
das
push
movsb
out
jecxz
mov
std
dec
subl
sbb
pop
xchg
or
inc
scas
mov
pop
arpl
rcll
sbb
pop
lds
sbb
cli
loopne
xor
push
mov
xor
add
xchg
fs
dec
ljmp
les
xchg
cmp
jnp
push
xor
andl
stos
mov
or
or
subl
leave
xor
pushf
sbb
mov
push
xor
lods
ds
ljmp
add
jne
push
in
cmc
addl
decl
jecxz
xchg
jl
dec
imul
xchg
mov
imul
in
cmp
or
mov
sub
mov
inc
mov
je
jmp
xchg
inc
iret
dec
popa
mov
shlb
and
ds
push
cmpsl
scas
scas
andl
mov
in
js
in
xor
xlat
arpl
inc
xchg
scas
adc
sti
pop
cmp
mov
jg
aaa
lea
int3
fbstp
hlt
inc
jecxz
mov
pop
pop
dec
xor
dec
imul
mov
inc
and
adc
mov
pusha
jg
mov
out
not
sub
dec
mov
xor
insl
lcall
ss
xor
sbbb
cmp
mov
xchg
or
out
clc
call
jl
dec
sahf
int3
ret
sarl
inc
pop
cmp
add
jo
and
and
pop
cld
lods
cmc
add
ljmp
fldcw
push
lret
out
or
outsb
xchg
jge
je
add
in
xchg
mov
loope
rol
pop
mov
mov
loope
subb
push
rcll
bound
dec
jp
sub
loope
out
sti
inc
fs
or
jae
test
fs
push
in
test
negb
pushf
mov
mov
fiadds
adc
ds
jle
icebp
lret
stc
shlb
movsl
jne
sarb
jle
sbb
jo
lcall
cmpsl
cmp
cmp
or
stos
cli
or
fwait
push
mov
push
jae
mov
out
cwtl
hlt
loop
adc
shl
mov
test
pop
xchg
ja
pop
rsm
xchg
add
adc
add
js
pop
into
xor
cmp
lcall
lock
or
fwait
xor
add
add
xor
rcr
push
cmp
out
dec
mov
add
divb
push
adc
loope
or
mov
sbb
pop
test
fnstenv
gs
je
aas
sbb
sbb
test
jne
inc
xor
repz
lods
mov
in
stos
lock
loop
add
cmp
repnz
lds
stos
push
cltd
inc
insl
jl
mov
out
and
or
lret
iret
mov
inc
jne
and
xor
inc
jbe
sbb
lea
shrl
daa
xor
jno
lods
fs
repz
jecxz
xchg
fwait
lods
enter
gs
mov
in
mov
jnp
pop
fmull
mov
mov
sbb
push
and
cmp
int
es
rcll
mov
iret
xor
mov
and
xchg
xchg
and
mov
push
sbb
jb
mov
jb
pop
push
sbbb
cltd
js
test
nop
jge
std
pop
loopne
mov
and
xchg
mov
push
adc
mov
mov
loop
mov
or
cmpsb
aaa
cmpsl
call
adc
or
mov
cmp
sub
pop
inc
arpl
mov
dec
fimull
arpl
mov
mov
xchg
filds
dec
lahf
insl
and
stos
sti
inc
addr16
dec
ds
rcl
test
loope
sbb
leave
aad
push
pop
les
sbb
or
cld
push
std
push
aam
pop
adc
xchg
js
jbe
xlat
and
inc
das
push
mov
cmp
sbb
loopne
lock
insb
imul
xchg
xchg
fs
xlat
push
push
addl
fwait
std
pop
aam
or
sahf
jg
mov
adc
adc
cmp
fs
and
stos
mov
sub
push
add
cmp
pop
push
stos
imul
ror
mov
out
adc
fwait
cmc
push
cmp
out
cltd
js
push
mov
pop
sti
loope
jae
and
ja
or
in
test
out
popa
sti
dec
fsubs
jp
inc
cmpsl
nop
cmpsl
sarl
mov
mov
ret
inc
dec
bound
test
pop
dec
and
dec
add
insb
xchg
xor
mov
inc
es
dec
or
mov
out
loope
mov
mov
ret
mov
stos
dec
outsl
push
shlb
cmp
pop
int3
insb
pop
mov
out
bnd
mov
into
adc
jnp
push
aam
jge
and
mov
test
movsb
jmp
push
pop
out
outsl
aam
sbb
adc
jbe
mov
int3
dec
hlt
fdivrs
sub
push
out
jbe
dec
out
jne
push
pop
ret
mov
idivl
push
cmpsl
aaa
and
sti
mov
push
sub
xor
es
sub
bnd
push
mov
repz
jnp
popa
sub
sbbb
pop
sub
scas
into
and
inc
insb
int3
mov
data16
cld
mov
inc
dec
pop
inc
fiadds
andl
mov
jp
xor
push
and
repnz
mov
loopne
loopne
xchg
sarl
sbb
pop
test
push
hlt
xchg
fwait
inc
jnp
pop
loopne
xchg
mov
js
mov
sbb
rolb
push
repz
inc
cltd
jne,pt
jl
cmp
insb
lcall
sub
push
outsb
aad
insb
sahf
sub
stos
lds
dec
mov
cwtl
cmp
inc
fsin
iret
cmp
push
aaa
notl
push
and
cltd
out
ljmp
mov
ficomps
jle
jecxz
and
xorb
dec
mov
ja
push
std
pop
cmp
xor
or
out
jo
mov
jp
not
push
out
and
pop
adc
gs
popf
hlt
adc
mov
mov
mov
loopne
sar
daa
mov
add
cmp
ds
iret
sbb
mov
fdivl
push
movsl
mov
or
dec
stc
andb
sbb
sub
insb
mov
pop
mov
insl
push
jl
loope
xchg
mov
data16
idivb
rorb
mov
jl
mov
inc
add
push
push
fmull
inc
xchg
xchg
xchg
mov
mov
repnz
push
clc
data16
cmp
mov
btl
psubb
mov
lea
fs
movsl
cmp
mov
rorb
push
ja
in
jbe
jge
test
jne
cmp
xchg
iret
or
test
mov
pop
cmpsl
aas
out
push
faddl
cwtl
add
sub
push
add
loop
xor
cwtl
add
sbb
add
xchg
xchg
cmpsl
daa
stc
mov
add
and
inc
fwait
ljmp
inc
cmpl
xlat
dec
cmp
pop
stos
mov
pushf
add
cmc
mov
or
jns
jno
fistps
pop
stc
and
int3
pushf
mov
addr16
inc
decb
mov
and
lret
cwtl
popf
sahf
jnp
pextrw
push
sub
push
aas
movsl
xchg
jo
pusha
ja
and
push
imulb
into
bound
ret
lock
imul
imul
addl
insl
enter
mov
sbb
lds
ficomps
das
loop
jno
es
sub
out
jmp
aam
jne
push
subb
pop
daa
cmp
movsl
add
xorl
fcompl
mull
dec
mov
out
es
mov
out
pop
xchg
mov
mov
fldenv
add
in
jl
lods
push
int
xchg
xorb
pushf
push
dec
and
mov
out
mov
mov
stc
sbb
mov
mov
dec
jno
ljmp
out
in
and
xor
mov
or
enter
pop
mov
dec
rcrb
fdivrl
stos
push
insb
mov
dec
pop
mov
mov
iret
pop
scas
mov
jecxz
dec
mov
or
out
jge
mov
push
ss
or
subb
lock
je
dec
popa
add
xlat
gs
pop
jno
cmp
push
adc
push
iret
loop
scas
push
shrb
or
dec
jbe
mov
mov
xchg
fsubrp
mov
sahf
push
mov
xor
cmp
or
iret
xchg
inc
aas
in
in
jns
push
adc
mov
nop
push
insb
mov
jne
jg
ret
scas
dec
pop
sub
roll
mov
mov
xor
jecxz
lea
xchg
rcll
sbb
jae
jae
or
sbb
je
push
xchg
push
shlb
inc
out
sbb
adcb
or
push
movsb
es
in
pop
ljmp
mov
aaa
inc
push
xor
loope
push
leave
and
cmp
inc
cli
data16
jb
jg
enter
or
in
cmc
mov
mov
aad
andnps
pop
popa
fcoml
add
jne
inc
clc
lahf
and
add
addl
or
xor
inc
imul
sbb
push
ret
repz
cwtl
push
enter
mov
test
and
jl
sti
out
rcl
add
repnz
xchg
mov
inc
pop
push
std
dec
mov
mov
mov
inc
mov
or
jp
pop
xchg
mov
jge
movsl
mov
ret
mov
sub
xchg
shll
in
push
dec
pop
jp
sbb
roll
mov
push
push
jo
mov
add
lahf
fisttpll
je
sub
jmp
mov
stc
xchg
xor
adc
shll
mov
inc
xchg
dec
fsubrs
xchg
push
or
lahf
bound
xchg
xchg
mov
out
mov
jmp
rolb
mov
pop
arpl
stc
xchg
add
andl
lock
loopne
mov
int
fstl
mov
filds
mov
movsl
dec
push
push
lods
xlat
jle
cli
mov
inc
and
stc
xchg
mov
sbb
notl
jmp
and
dec
aaa
ret
jnp
ret
add
nop
and
cmp
add
call
shll
scas
mov
sbb
rolb
insl
xor
jns
mov
xor
movsl
add
add
mov
sti
add
add
std
std
xor
pop
int3
ss
inc
test
pop
aad
nop
dec
xchg
js
ds
popf
inc
cmp
aad
jecxz
inc
sbb
adc
xchg
subb
cmp
hlt
or
test
mov
inc
sub
aad
sbb
cmp
dec
imulb
dec
loop
repz
dec
inc
lret
pop
jp
push
loopne
lret
call
push
sub
pop
jne
rolb
es
xchg
movsl
dec
inc
jecxz
xlat
push
imul
sbb
or
inc
ljmp
in
aad
mov
iret
dec
cmp
ret
sbb
jecxz
cli
stos
xchg
push
mov
cmp
mov
or
pop
mov
pop
loope
cmp
aad
shll
lcall
adc
pop
xor
mov
fwait
push
fucomi
fidivrl
xchg
imul
push
shlb
cmc
out
xchg
ds
popa
xor
xchg
or
lcall
insb
mov
adc
and
arpl
icebp
pop
add
sbb
cmp
cs
fisubs
arpl
cmp
in
or
imulb
pop
dec
pop
sbb
push
xchg
loopne
mov
hlt
push
adc
aam
pop
mov
mov
dec
scas
cmp
jnp
pop
push
xchg
or
adc
iret
push
cmc
mov
pop
pop
in
cmp
pop
repnz
dec
mov
pusha
add
dec
cli
mov
xchg
imul
push
pushf
stc
sub
pop
sbb
fadds
fs
mov
lock
arpl
mov
adc
xchg
mov
in
pop
fwait
loope
jne
cmpsb
adc
sub
mov
or
aam
cmp
rclb
and
les
iret
stos
adc
pop
mov
mov
shll
xor
das
mov
gs
cs
and
lcall
pop
dec
fs
lea
jnp
movsl
xor
pushf
cld
pop
add
xor
push
das
loopne
xor
xchg
loope
mov
or
jo
jg
fiaddl
mov
pop
push
addr16
lret
bound
and
jge
xor
mov
and
cld
pop
mov
inc
pop
push
cmp
int3
int3
pop
scas
pop
movsb
aad
push
loope
adc
sbb
addl
cmp
jge
and
cld
push
les
lods
out
les
cltd
sub
jge
movsb
popf
movsb
movsl
mov
and
repz
aam
test
xorl
sarl
insb
xchg
ror
add
cmp
add
mov
loop
pop
or
dec
inc
mov
jg
pop
mov
adc
repnz
les
inc
xor
push
loope
stos
cmc
push
xor
pop
and
test
inc
in
daa
int3
sub
ja
mov
pop
push
jo
in
cmp
sub
xor
adc
jb
cs
jne
das
fisttpll
sub
ja
shl
aad
push
outsb
push
pop
cwtl
aam
or
stc
leave
ljmp
fsubr
adc
jle
dec
in
stos
dec
lods
sbb
xchg
subb
dec
lahf
jmp
test
mov
mov
loop
mov
lret
push
test
cmpsb
lods
cmp
cmc
and
cli
lods
jbe
adc
mov
call
cmp
enter
jno
adc
or
icebp
imul
inc
lret
sbb
imul
ror
xor
gs
lret
and
xor
sub
sbb
xlat
or
jbe
or
inc
notb
test
mov
mov
or
loopne
mov
repz
fldt
stos
movsb
outsb
mov
xchg
ljmp
pop
jmp
inc
adc
ret
fidivs
aad
mov
push
clc
adc
jp
add
loop
sub
dec
push
dec
jns
xchg
es
push
mov
icebp
mov
add
ljmp
popf
sbb
out
rorl
cmp
cmpsl
sarb
pop
cmpb
mov
cmp
imul
into
imul
adc
jne
fwait
imul
cmp
push
cmpsl
idiv
cmp
imul
ret
in
fisubrs
ret
loop
rcrl
push
sub
mov
xchg
pop
xchg
int
scas
adc
int3
iret
imul
lods
ds
shlb
and
and
cmpsl
int
xor
popf
rolb
fdiv
mov
adc
daa
inc
out
sarb
push
fwait
adc
lds
adc
and
outsl
insl
mov
in
loopne
xor
sbb
add
push
in
mov
add
pop
jb
dec
mov
leave
xor
aas
shrb
out
inc
push
cwtl
push
aaa
jne
pusha
nop
ds
sarl
adc
xchg
out
addr16
clc
add
icebp
push
loope
gs
adc
mov
mov
dec
inc
or
dec
test
mov
adc
outsb
lret
jns
movsl
push
mov
inc
xor
mov
addr16
bound
mov
push
scas
scas
mov
mov
cmp
add
out
sbb
hlt
push
inc
jmp
pop
push
dec
xchg
dec
mov
xchg
jge
jnp
xor
test
in
gs
repz
inc
jae
inc
sub
push
leave
ret
rcrl
daa
repz
adc
xchg
push
ret
js
out
mul
data16
into
or
addr16
aas
sub
scas
and
sahf
sub
test
ret
in
sbb
into
cmp
sub
imul
fildll
or
arpl
cltd
out
jns
inc
inc
int
scas
mov
xor
test
enter
je
cmp
cwtl
pushf
sbb
mov
dec
jo
ljmp
enter
fisttpll
push
add
mov
loope
xchg
jg
sahf
gs
hlt
sub
mov
push
cmp
cltd
xchg
push
in
flds
add
lock
rcrl
icebp
lods
mov
sbb
aam
jecxz
scas
divb
aam
jl
xchg
mov
sbb
rorb
out
add
aaa
mov
adc
sbb
mov
mov
push
mov
bound
cmp
jns
mov
repz
xchg
mov
imul
pop
sbb
into
mov
loop
pushf
es
sub
repz
jnp
add
jno
repnz
mov
push
test
sti
xor
scas
imul
push
cmp
data16
cld
and
rcll
idivl
sbb
mov
clc
mov
inc
fpatan
stos
add
mov
call
add
sub
jg
push
mov
mov
jle
dec
mov
mov
mov
push
pop
push
mov
insb
out
pop
jns
or
xor
daa
enter
pop
test
push
js
dec
je
adc
adc
aas
add
scas
inc
sub
push
insl
dec
mov
das
imul
mov
inc
mov
xor
rolb
pop
loopne
stos
fucomip
in
mov
js
scas
test
lods
add
inc
loopne
je
mov
fcoml
shr
cli
popa
lcall
movsb
enter
inc
jne
push
aad
stc
add
xor
insl
jo
jecxz
rcrl
mov
push
mov
adc
sub
sbb
xchg
mov
loope
mov
repz
out
xchg
insl
mov
jmp
mull
sti
clc
adc
ds
jg
out
add
push
cmp
sub
mov
push
fdivs
adc
repz
cmp
hlt
mov
filds
ljmp
nop
inc
pop
stos
popa
cwtl
stc
push
push
jge
mov
xor
add
jge
mov
out
mov
dec
and
rorb
mov
into
add
lahf
add
movl
fcmovnbe
dec
rclb
mov
xlat
in
add
jecxz
stos
dec
cwtl
popf
addr16
cltd
sbb
ja
leave
mov
imul
add
and
cmp
or
orl
fdivs
pop
jb
xchg
adc
push
and
icebp
push
es
test
sub
lock
dec
sti
xchg
gs
pop
and
call
aam
out
jmp
ss
scas
test
adc
daa
test
lds
loop
ret
add
loopne
ljmp
es
xor
sub
dec
int
lock
sbb
sbbl
mov
sarl
stos
orl
ds
dec
sub
lock
hlt
sbb
movsb
nop
pop
dec
fidivs
dec
inc
pop
leave
xchg
jb
fsts
xorl
outsb
lret
popf
push
fcmovnb
cmpsb
test
mov
inc
inc
decb
shll
imul
xchg
mov
nop
inc
inc
sub
insb
xor
dec
fisubs
jno
ret
jmp
popf
outsb
pop
lods
jl
lds
loopne
scas
cmp
or
pop
pusha
push
repz
pop
aas
lret
and
in
jnp
arpl
mov
loop
outsl
inc
sti
mov
jl
adcb
lcall
ljmp
and
xchg
iret
movsl
inc
adc
rolb
mov
push
xor
imul
jmp
ret
xchg
xor
fcmovb
call
xchg
push
adc
push
fiadds
mov
movsl
mov
pop
lret
movsb
push
push
pop
cli
xchg
mov
leave
stos
add
js
out
loope
mov
shll
push
scas
aad
adc
and
xor
add
lods
mov
cltd
or
fdivl
movsl
sub
pop
pop
fldl
cmp
mov
pop
movsl
in
addr16
mov
dec
mov
dec
xorl
mov
repnz
pop
insl
fs
out
or
jo,pn
ja
sub
cld
fwait
outsb
pop
loop
add
pop
or
xchg
jne
test
sub
scas
sbb
notb
inc
mov
popa
push
rcrb
sbb
fisttps
aas
pusha
mov
nop
imul
mov
into
pop
xor
mov
std
into
add
mov
jg
fs
jp
pop
das
dec
daa
out
mov
mov
mov
shlb
adcl
or
dec
out
lock
mov
aad
mov
mov
cs
es
mov
aaa
inc
add
shlb
rcll
xchg
int3
popa
add
or
xchg
or
push
mov
test
and
pusha
jp
iret
mov
test
adc
aad
test
sub
cs
or
mov
sub
pusha
add
aad
loop
push
je
outsb
adc
ret
sub
push
adc
aas
mov
pop
fstps
xlat
test
sub
int
outsl
mov
add
test
jp
clc
cmp
or
into
jnp
and
dec
sbb
in
cmc
inc
jbe
jge
mov
pop
out
leave
jbe
jnp
scas
les
cltd
sbb
lock
outsl
xlat
xchg
mov
dec
xchg
test
fistl
test
push
insb
push
ror
fmull
aas
lods
sbb
les
fstps
sbb
or
lret
mov
scas
or
or
sbb
pop
pusha
in
dec
fildll
pop
xor
jns
arpl
mov
ljmp
pop
loopne
rolb
int
and
and
add
ret
pop
ret
aad
cmp
inc
cli
aam
fldt
cmp
xchg
rcrb
push
sbbl
mov
cmpl
loope
jge
bound
jb
lcall
imul
ret
xchg
push
lock
inc
divl
jbe
mov
pop
sub
inc
enter
pop
cmc
cmc
iret
add
xor
test
xchg
aaa
fcoml
cmp
mov
invd
insb
and
outsl
xlat
jbe
xor
loopne
les
cli
orb
pop
movsl
decb
xchg
inc
shll
cmp
mov
int3
sub
repnz
outsw
loopne
stos
cwtl
sbb
inc
xchg
jne
and
dec
add
push
dec
sbb
in
dec
push
push
cwtl
mov
adc
and
iret
xorl
pop
aad
cmp
mov
dec
test
loopne
in
cli
or
iret
jns
xor
inc
xlat
ljmp
inc
popf
sub
cmp
lret
arpl
test
loope
lock
je
cwtl
push
mov
aaa
out
jnp
call
pop
xor
mov
aaa
aad
je
and
inc
push
cmp
or
push
jge
repz
sbb
adc
jns
or
add
mov
cmp
pusha
inc
mov
movsb
test
loope
add
stos
aas
push
pop
pop
ror
xor
mov
xor
dec
lods
push
or
idivl
mov
pop
pop
shll
xchg
xchg
stc
pop
xchg
pop
cmc
jno
pop
or
mov
pop
push
outsl
push
inc
loop
fucomi
ja
pop
dec
cs
scas
mov
outsl
icebp
movsb
or
inc
ja
subb
pop
jp
xchg
mov
ret
push
push
push
and
into
je
mov
push
mov
fldenv
sbb
outsl
ja
repnz
imul
fdivrl
jo
jp
ds
inc
cmpsl
stc
cmp
sub
or
fisttpl
mov
adc
stos
outsb
mov
outsl
movsl
mov
insb
pop
je
cwtl
jg
out
sbb
sbb
je
pushf
outsl
scas
outsb
pop
push
or
cld
adc
out
pop
leave
and
push
in
incb
fnstcw
xor
lea
lds
inc
jno
sub
loopne
gs
jne
sbb
loopne
in
and
xchg
mov
jns
das
inc
sub
test
adc
push
or
add
or
int3
mov
pop
sbb
ljmp
xor
mov
in
iret
mov
lods
add
mov
jns
push
lret
inc
mov
rolb
push
xchg
lds
out
jp
fs
in
nop
dec
dec
push
push
push
in
test
test
xchg
xchg
jne
push
idivl
fisubl
testb
fnstcw
mov
and
dec
sbb
inc
in
stos
push
leave
sbb
std
pop
data16
cmp
dec
js
push
enter
dec
adc
je
ja
test
or
add
jno
pushf
xor
add
fistl
mull
pushf
iret
inc
lods
aam
sub
imul
add
fiaddl
jae
xor
adc
leave
mov
ss
leave
dec
mov
subl
out
push
mov
mov
aad
cld
cmp
dec
mov
ja
and
xchg
nop
jmp
in
mov
dec
xchg
adc
dec
divl
inc
push
sbb
daa
nop
ret
mov
push
or
jbe
ljmp
dec
movsl
dec
mov
sarb
mov
or
mov
sete
jecxz
fcmovb
je
mov
sub
rclb
mov
adcl
sbb
jge
xchg
punpckhbw
cwtl
in
push
stos
push
test
push
sub
sbb
loope
mov
push
gs
jecxz
jmp
scas
ret
mov
enter
jno
jo
dec
repnz
subl
mov
jb
cmpsb
pop
ret
mov
aam
incb
inc
sbb
xor
lock
xorl
mov
inc
fwait
adc
pop
idivb
mov
mov
jns
subl
mov
mov
mov
jmp
ret
enter
inc
cmp
xchg
jl
add
sahf
int3
push
mov
imul
inc
xchg
out
ds
pop
mov
mov
je
dec
xchg
and
inc
outsl
jno
fildll
mov
outsl
orb
adc
lcall
arpl
pop
les
adc
or
push
and
testb
into
mov
fsubr
lock
bound
movsl
aas
pop
adc
jnp
push
cmp
and
in
add
sbb
sub
test
das
mov
xchg
fimull
cld
sbb
enter
adc
enter
sub
movsl
jo
inc
mov
lock
fldl
movb
xorl
sub
jl
dec
sti
cmp
jbe
push
dec
adc
in
sbb
test
test
adc
mov
pop
xchg
fisubrl
mov
bound
push
cld
pop
loope
jle
xor
aaa
dec
adc
cld
jp
xchg
xchg
and
sbb
movsl
clc
xchg
cltd
dec
cmc
pop
mov
nop
in
imull
stc
dec
daa
push
xchg
and
ror
jae
int3
cld
add
repnz
out
shlb
mov
fadd
cmpsb
sub
xchg
ja
or
nop
iret
lds
cmc
cmp
sub
jae
and
test
mov
dec
mov
mov
pop
or
xlat
mov
repnz
mov
lret
cmpsl
ds
shrl
cmp
jbe
lods
xchg
sbbl
sub
fwait
mov
sbb
pop
push
stc
xor
pusha
fstl
test
insl
int3
repz
xor
bound
or
fxch
stc
lret
push
mov
or
out
jle
sub
push
jp
push
loop
int3
loop
jmp
inc
loopne
cli
jp
mov
arpl
stos
inc
pop
cmpsb
pop
mov
jb
fiaddl
mov
sub
arpl
or
cwtl
lret
gs
stc
jg
sub
adc
pop
pop
mov
les
xor
xchg
loope
jl
jbe
sbb
scas
adc
and
xor
ficomps
fnsetpm(287
pop
or
rclb
xchg
nop
shll
pop
insb
dec
lret
shll
push
scas
inc
pop
sbb
inc
mov
lret
cwtl
pop
lret
xor
cmp
sub
cld
fwait
repnz
lahf
lock
mov
add
les
xchg
cmp
test
adc
daa
mov
mov
pop
xchg
and
enter
xchg
aaa
test
imul
or
insl
outsb
mov
loop
sahf
ret
sahf
in
out
add
mov
and
ja
fsubs
movsb
mov
mov
inc
jmp
xor
test
insb
adc
in
stc
jmp
aam
mov
mov
insb
out
ret
repnz
daa
jnp
adc
and
jle
inc
xchg
add
jns
and
xor
push
cld
popf
lock
or
mov
and
fwait
jne
mov
sti
push
lea
jmp
cld
or
sti
xchg
dec
fisubs
push
mov
aaa
mov
enter
and
adc
sub
pusha
testb
mov
adc
mov
xor
add
bnd
imul
xor
push
jbe
fdivrs
je
cmp
ret
cmp
jmp
mov
ret
dec
mov
sbb
fsubr
mov
std
fiadds
inc
mov
mov
cmp
jecxz
je
push
mov
pop
bound
sbb
cmp
adc
mov
cs
flds
popa
imul
jecxz
push
lahf
ds
dec
repnz
xor
sbb
fisubl
push
xor
dec
pop
mov
mov
pop
inc
mov
dec
popf
stc
cmp
pop
inc
or
idivb
bnd
ret
mov
cld
js
mov
inc
pop
push
pop
xchg
out
fisubrl
or
fildll
mov
push
dec
lea
insb
ljmp
push
test
pop
out
xchg
lcall
adc
and
jp
xor
sub
mov
sub
nop
pop
shrd
dec
jns
out
ja
shll
adc
orb
xor
adc
imul
pop
mov
pop
nop
or
ja
js
mov
lea
cmpsb
loop
dec
fdivrl
mov
jmp
add
and
push
jmp
mov
jl
cmp
rcr
add
outsl
push
sub
movsl
arpl
jno
cwtl
movsb
xchg
inc
fisttpll
push
mov
sbb
sbb
lds
call
pop
popf
xlat
and
stc
sub
std
lods
aam
push
repnz
cmp
mov
pop
inc
jo
jno
outsb
bnd
xor
or
mov
pop
fchs
inc
out
jb
in
sub
pop
pop
rol
hlt
imul
push
jbe
dec
push
xor
fs
outsl
mov
sbbl
andb
repz
sahf
push
cmp
mov
push
arpl
pop
fimull
push
loop
lret
push
repnz
add
mov
add
mov
aas
imul
rolb
mov
das
out
hlt
xchg
lods
cltd
mov
inc
or
sub
xor
fwait
out
imul
pop
cmpsb
jmp
lods
cmp
paddb
test
jns
aaa
push
jo
push
sbb
mov
repz
xchg
dec
pusha
repnz
cwtl
inc
lds
in
pop
shrb
addr16
icebp
dec
repnz
mov
dec
xor
xlat
add
or
and
nop
mov
xchg
rorl
inc
movsl
insb
add
push
in
insw
popf
push
inc
push
in
add
loope
cmpsl
out
pop
push
leave
sbb
cmpsb
jl
test
xchg
pop
popf
push
or
dec
and
fidivs
repnz
pop
out
lahf
aam
pop
dec
lahf
aas
rcrb
cmp
arpl
mov
inc
jns
dec
fistpl
outsl
inc
jecxz
in
inc
fldenv
lret
push
inc
leave
pop
adc
mov
icebp
lea
testb
sub
dec
rorb
cli
xor
ds
mov
push
cmp
dec
mov
xchg
adc
mov
inc
movsl
data16
mov
adc
call
lret
push
cmpb
fisubrl
xchg
dec
repnz
sub
or
mov
dec
cmp
cs
out
ret
testl
fldt
jecxz
lock
outsl
jnp
lahf
sbb
fwait
push
pop
xchg
jmp
cltd
and
sub
mov
aam
sbb
test
pop
loopne
fcmove
test
push
pop
ja
jl
imul
notl
test
sbb
fists
lcall
fs
cmp
sbbb
enter
cltd
inc
lahf
enter
push
sbb
sti
leave
inc
adc
inc
inc
dec
jle
out
cmpsl
into
insb
add
add
jo
mov
inc
xor
dec
jbe
aad
pop
insl
mov
and
and
jne
xor
adc
pop
cmpl
mov
in
int3
lret
cld
cmpsl
inc
xchg
hlt
adc
ljmp
mov
dec
xchg
mov
xchg
shlb
mov
enter
insb
mov
cwtl
xor
push
push
adc
movsl
mov
push
insb
dec
out
into
xor
mov
sub
insl
xchg
add
mov
xchg
pop
cmp
and
jb
pop
sbb
mov
adc
popf
adc
add
into
inc
fs
inc
std
aaa
outsl
push
scas
test
mov
daa
stc
fistpl
lods
and
sbb
js
adc
or
dec
dec
mov
int3
pusha
cmp
xchg
pop
xor
fistl
push
push
or
cmp
mov
add
iret
mov
outsb
ljmp
into
pop
sub
jns
mov
push
mov
push
pop
adc
cmp
inc
mov
imul
mov
fstl
xor
loopne
jo
shlb
dec
push
push
sbb
xchg
mov
mov
frstpm(287
add
out
jno
outsb
add
out
cli
dec
je
inc
jne
test
fisubrs
imulb
push
out
fistpll
dec
shl
lea
cmp
loop
imul
movsl
ja
shrl
das
inc
push
cmc
popf
pop
pop
cld
mov
xchg
daa
nop
sbb
cmp
daa
xchg
and
test
jle
pop
mov
xlat
mov
call
dec
cltd
pop
or
or
mov
jns
lds
mov
or
ret
les
sbb
push
movsb
and
jl
icebp
mov
les
loope
mov
mov
in
fsubrs
and
xchg
or
js
movsl
lods
rorb
lahf
mov
mov
sbb
inc
or
mov
hlt
inc
mov
in
idivl
fdivp
mov
adc
mov
rol
jge
mov
pop
in
adc
adc
pop
xor
outsb
out
scas
push
dec
data16
adc
sbb
ljmp
inc
outsb
ret
inc
in
enter
imul
adc
les
jo
pop
mov
sub
gs
popf
mov
push
mov
add
iret
dec
mov
push
adc
mov
add
push
loopne
loope
je
int
insb
clc
cmpsl
push
add
int
pop
fwait
adc
push
mov
pop
push
arpl
mov
push
cmp
ret
pop
stos
pushf
and
ljmp
jbe
loop
fsubr
icebp
or
in
xorb
dec
and
push
mov
jecxz
movsl
outsb
ficoms
mov
in
push
adc
jg
jbe
or
push
pop
call
mov
lret
sub
pop
mov
jp
movd
test
cmpsb
rclb
out
inc
xlat
call
or
sub
jns
js
rcl
cmp
mov
mov
loopne
sbb
ljmp
adc
out
jnp
test
ficoml
stos
fldenv
jo
fs
aam
test
mov
and
mov
mov
stc
repnz
ljmp
pop
fisubl
jo
aam
mov
cwtl
aaa
jnp
data16
or
mov
push
repnz
xchg
mov
pusha
sub
das
pop
mov
pop
mov
aad
pusha
or
lret
dec
inc
xchg
dec
shll
dec
push
jo
dec
iret
push
ljmp
icebp
repz
in
dec
lret
movsl
mov
cmp
inc
or
dec
dec
mov
mov
pop
stos
cmpsb
xor
sbb
in
fisubl
aas
pop
movsb
pop
dec
stc
cltd
rorl
data16
repnz
inc
or
sub
push
xlat
daa
push
fpatan
adc
push
das
and
outsb
fcmovnb
xor
cmpsb
mov
lock
dec
and
inc
mov
jns
jl
lret
insl
frstor
lds
add
ds
mov
push
ret
insb
lret
movsb
inc
aam
xchg
xchg
lods
xor
int
loopne
aas
ds
xchg
push
imul
sti
icebp
or
mov
ret
cmp
movsb
or
cs
sti
clc
loopne
stos
mov
cwtl
rolb
and
movsl
jnp
and
into
ds
cvtdq2ps
pop
pop
and
xor
dec
call
popa
or
insl
mov
push
add
ss
test
jae
adc
sbb
inc
orl
leave
test
and
gs
fwait
scas
cmp
pop
icebp
pop
clc
cwtl
mov
add
addr16
add
inc
add
sbb
mov
xchg
inc
es
mov
cmc
push
push
xor
and
loop
out
and
daa
std
cmp
and
imul
adc
lcall
cmp
pop
mov
push
clc
mov
push
dec
movsl
aad
sub
sub
in
xlat
repz
xor
std
dec
mov
xor
cmc
xor
sar
sarb
sub
cmp
push
mov
sbb
xchg
fiadds
inc
xorw
xor
sbb
mov
movsb
xchg
cmpsl
jg
adcb
imul
adc
inc
cmpsl
push
sub
test
cmp
push
mov
mov
mov
test
bound
inc
out
jae
jne
outsl
or
ficoms
add
xchg
subl
in
stos
add
adc
mov
gs
inc
pop
mov
lods
jle
jl
sahf
xor
mov
das
loope
je
call
jmp
sti
pop
out
js
insb
ret
aas
leave
jg
dec
xchg
jno
mov
test
ss
jno
adc
dec
scas
mov
dec
aad
aam
inc
jno
push
and
sub
arpl
jle
arpl
add
pop
mov
adc
jnp
mov
or
pop
inc
mov
test
daa
push
shlb
inc
and
pop
add
mov
or
sbb
adc
shrl
hlt
or
dec
mov
fistpll
dec
push
lods
cmp
ss
popa
outsl
lods
call
popa
out
push
mov
pop
dec
out
mov
sub
xor
aas
call
ljmp
mov
imul
jae
add
dec
push
aam
ret
sub
xchg
xor
mov
xor
adc
dec
ficoml
pop
add
aad
js
lcall
mov
lods
adc
dec
dec
xchg
mov
int
sub
pop
not
or
data16
subb
and
xchg
test
ficoml
dec
pushf
xlat
fisubs
loopne
popa
test
outsl
cwtl
pop
mov
out
sub
nop
add
mov
push
ds
roll
and
jo
jne
mov
push
stc
or
ss
fdivs
cmp
lret
jl
rcrb
add
cmpsl
push
mov
in
fisttpl
lods
jae
or
and
nop
pop
mov
in
ficompl
adc
xor
mov
aad
loope
inc
lahf
inc
sbb
andl
xlat
mov
xchg
sbb
into
push
jbe
stos
mov
jp
and
xor
loope
dec
xchg
in
pop
xchg
pop
mov
and
cmp
ficoml
call
mov
in
loope
lock
xor
test
loopne
jae
cmp
ret
cmp
icebp
lds
ss
sbb
out
dec
sbb
xchg
pop
inc
adc
lcall
mov
adc
xchg
sahf
dec
das
data16
jae
shlb
pop
xor
repnz
mov
stos
ljmp
and
shlb
mov
mov
movsb
cmp
pop
pop
popa
mov
les
scas
dec
movsl
xor
pop
jno
push
int
out
inc
mov
faddl
out
jae
subb
imul
push
gs
sbb
jbe
and
hlt
fwait
xchg
pop
int
movsl
mov
fmull
int3
jbe
add
iret
xor
mov
pop
or
push
fsubrp
add
push
jecxz
imul
out
insb
mov
enter
shrl
lahf
push
inc
mov
lds
lret
cmp
xor
js
fcomps
enter
fs
sub
mov
idiv
add
test
push
pop
cwtl
jle
xor
xchg
dec
mov
in
pop
or
add
cmc
adc
adc
mov
popa
sbb
das
test
cmp
lcall
mov
clc
sbb
lret
add
cld
add
push
inc
icebp
fwait
mov
iret
loopne
jno
in
ss
sbb
push
jae
aad
into
fldenv
mov
adc
mov
leave
ds
inc
dec
dec
xor
aam
xchg
jp
dec
xchg
fcmovnb
jmp
lds
mov
sbb
cmp
dec
lcall
or
pop
aas
xor
sub
or
test
dec
xchg
pop
add
ret
je
push
xor
fcomps
pop
jmp
inc
inc
fistpl
aam
pop
imul
ljmp
call
aaa
jp
ret
repnz
lret
or
cld
js
fmull
scas
xor
add
sub
js
movsb
ret
popf
dec
mov
sahf
movsb
stos
daa
sub
mov
xlat
push
mov
pop
xchg
rcll
and
adc
sbb
outsb
shrb
ljmp
ja
repnz
jo
stos
rclb
xchg
daa
xor
mov
hlt
xchg
dec
test
lods
loop
ljmp
cmp
xor
enter
lahf
in
mov
insl
cmp
popl
xchg
icebp
call
mov
data16
jb
mov
push
push
aad
in
scas
dec
inc
pcmpgtd
loopne
add
inc
or
fst
rcrb
hlt
sbb
push
push
push
mov
pop
xor
and
mov
pushf
and
push
es
adc
incb
or
inc
adc
clc
loop
imul
xchg
dec
nop
push
int3
insb
mov
das
jae
into
incl
inc
pop
or
xchg
psllw
mov
or
nop
add
rolb
add
jb
stos
dec
sub
add
xor
aas
ficoms
call
xor
or
push
dec
inc
or
shll
sbb
jae
negb
inc
mov
sub
rol
repnz
sahf
dec
add
in
arpl
in
mov
jle
xor
sub
or
jp
lcall
cwtl
test
jo
fwait
mov
mov
mov
and
or
das
shll
cmpsb
xchg
in
push
ljmp
xor
push
push
mov
dec
in
arpl
int3
sti
je
pop
push
mov
pusha
jo
add
dec
mov
stc
ds
movsb
sub
lcall
enter
aad
cld
or
sysenter
add
sbbl
cwtl
rcrb
lahf
pop
sub
push
xor
shll
lock
mov
push
inc
xor
dec
jmp
lcall
inc
push
jb
andl
xchg
rolb
bound
mov
scas
add
pop
pop
jae
aaa
jecxz
lret
dec
imul
sarl
jmp
fildl
in
dec
add
mov
dec
jnp
xor
dec
pusha
in
add
jmp
movsb
xchg
sub
sbb
orb
jecxz
test
aam
xchg
pop
lahf
leave
inc
mov
xchg
xlat
movsb
xchg
lcall
cmp
jae
int3
adc
repnz
push
mov
sbb
or
jb
loop
cmp
or
adc
aaa
push
fs
and
subl
mov
mov
xchg
sub
cwtl
xor
mov
inc
cmp
and
movsl
or
jbe
xchg
cmp
xor
cmc
mov
mov
iret
or
mov
sbb
jl
bswap
pop
in
jge
sbb
add
lcall
outsb
arpl
mov
sbb
jne
and
repnz
fidivl
mov
inc
sub
scas
hlt
sub
pop
ljmp
and
stc
ja
adc
and
enter
xchg
test
dec
xor
jge
push
in
lods
call
pusha
inc
pop
cmp
out
jne
in
jne
rcl
mov
adc
test
adcl
or
cld
jge
jge
notb
mov
inc
jge
clc
dec
fidivs
hlt
xchg
or
pushf
xchg
aaa
xchg
sub
xor
scas
adc
push
mov
dec
dec
cmp
das
aaa
fisttpl
loope
rcll
or
bound
cld
push
sub
in
mov
lea
test
jnp
leave
mulb
cmpb
iret
imul
xchg
jns
cmpb
fcmovbe
ret
dec
pushf
push
add
pusha
nop
popa
fldenv
gs
push
jp
das
jle
mov
and
xor
mov
xchg
jmp
adc
jnp
adc
lret
push
cld
movl
cmc
mov
out
push
rclb
insl
sbb
push
push
cmpsb
dec
cmpb
inc
fsubp
or
aas
inc
sbb
sub
filds
or
xor
ret
aam
outsl
popa
js
xor
in
lahf
lcall
es
lret
sahf
out
imul
inc
rcrl
mov
rcrb
jp
jmp
icebp
hlt
dec
jbe
std
shlb
cmp
movsl
rolb
bound
rcll
sbb
loopne
lds
mov
or
dec
xchg
lret
fstpt
lret
sub
iret
cld
push
push
sbb
sbb
xchg
pop
jmp
stos
cmpb
mov
shll
push
out
and
hlt
mov
movsb
pop
xchg
mov
xchg
push
sub
pop
sahf
jl
xor
fs
hlt
jns
daa
cmp
xchg
in
sub
xchg
inc
pop
movsl
jge
cmp
add
or
dec
outsb
loope
dec
ljmpw
jge
push
cmpsl
aas
rorl
adc
xor
sbb
fnstsw
fnstcw
mov
insl
xor
mov
sbb
dec
or
rol
loop,pt
ror
fisttpl
out
lahf
into
scas
pop
xor
pop
inc
sbb
push
add
push
adc
ret
cmpsb
roll
add
adc
jae
das
cmp
sub
std
push
add
shl
lods
shr
js
sub
enter
jmp
ja
imul
test
add
cli
movntps
fwait
adc
fcmovnu
notl
inc
mov
insl
push
fnstsw
inc
je
xchg
jmp
loop
sbb
repnz
loop
dec
sub
xchg
hlt
mov
in
int3
sub
mov
xchg
jbe
stos
mov
jp
enter
scas
cmc
mov
cmp
sbb
mov
sbb
jle
inc
dec
cmp
rcr
call
daa
ret
push
outsb
notb
sub
mov
or
xor
push
dec
rorl
pop
push
jmp
sub
or
xor
js
fcomps
pop
call
repz
inc
hlt
sub
pusha
mulb
lret
inc
roll
mov
sub
sub
pop
scas
mov
fnstcw
xchg
and
xor
mov
pop
xlat
aad
push
sub
fldl
js
mov
stos
cmc
lock
jmp
mov
or
sub
jb
push
jecxz
mov
mov
imul
hlt
roll
popf
fwait
enter
mov
add
ret
fucomip
sbb
pop
jg
cmc
inc
stos
or
sub
daa
andl
jno
loop
cmp
loope
lahf
scas
dec
mov
or
push
jmp
iret
pop
shlb
xchg
mov
jno
iret
push
or
sahf
xor
cpuid
mov
mov
jecxz
fs
lret
inc
jge
imul
shl
push
ret
mov
xor
cmp
push
lahf
xor
push
rclb
sti
testb
clc
aad
adc
cwtl
adc
inc
pop
in
lret
xchg
and
inc
into
push
xchg
fldenv
or
adc
cld
addr16
mov
mov
adc
adc
dec
xchg
adc
outsb
enter
rorb
lock
add
sub
in
pop
orb
sbb
xchg
add
int
adc
add
out
xchg
sbb
repnz
mov
xchg
leave
sbb
es
enter
add
cwtl
mov
adc
movsb
orl
xor
fs
stos
jg
mov
nop
cmpsl
addb
sahf
sbb
stc
pop
mov
sub
jns
in
pop
xchg
mov
push
mov
sbb
pop
shll
ds
cmpb
jp
sub
addr16
cmpps
stc
sbb
xchg
fdivrs
mov
das
mov
inc
sub
pusha
jo
rcrb
cmpsl
cmp
mov
or
out
test
daa
xor
pop
stos
xor
add
jo
add
loop
mov
xchg
jnp
push
xchg
jbe
dec
adc
cmp
sub
mov
pushf
mov
pop
dec
lods
subb
pusha
lahf
in
cmp
cwtl
insb
add
decb
xchg
sub
add
lcall
pop
xor
les
pop
test
mull
cmp
sub
test
fcomp
xor
je
xchg
cmp
push
add
or
pop
inc
or
mov
and
mov
push
mov
sbb
insb
iret
ror
sbb
pop
call
rcr
and
sbb
pusha
xor
out
fnstsw
stos
pop
xor
mov
add
cld
inc
or
jl
cmc
sub
add
sbb
adc
sub
inc
sarl
repnz
arpl
std
or
imul
imul
xchg
stos
mov
push
xabort
add
jo
push
outsb
mull
xchg
and
pop
je
out
jb
dec
adc
add
out
in
bound
inc
clc
push
push
out
pop
push
push
mov
inc
jne
sub
pop
push
pusha
and
sti
inc
jb
dec
mov
aam
pop
out
sub
fwait
out
inc
pop
mov
xorl
dec
sub
jbe,pt
stos
enter
fadds
test
testb
scas
push
aas
adc
int3
imul
mov
jno
add
lret
cmpsl
push
mov
stos
in
push
mov
sub
pop
xchg
clc
cmc
les
cmc
adc
xor
out
and
data16
hlt
jmp
scas
das
ret
pop
dec
jecxz
bound
jg
rcrb
cwtl
dec
mov
cmp
sbb
sti
mov
dec
xor
out
out
jle
and
enter
in
lcall
fsts
jge
ds
jge
xchg
cmp
cli
cmp
cmp
dec
jp
sti
aas
mull
das
add
jnp
ficomps
rorb
mov
cmp
sub
in
cmp
jg
sub
icebp
insb
push
rcll
push
fimull
outsl
repnz
pop
jge
push
lods
gs
out
dec
call
mov
mov
out
or
aam
mov
rorl
mov
mov
adc
sarb
push
cmpsb
add
fdivs
add
inc
addr16
rcll
push
lcall
xchg
and
dec
xchg
sarl
xchg
xorb
loope
int3
fsubrl
flds
lods
xchg
imull
pop
jae
pusha
add
movsl
aad
cmp
arpl
xchg
pop
cmpsb
aad
jge
cmp
in
sbb
inc
dec
outsb
inc
out
into
inc
mov
repnz
dec
inc
mov
mov
dec
push
cmp
and
lods
insb
in
mov
stos
xor
js
push
test
mov
push
dec
lods
pusha
mov
mov
out
or
ja
mov
rolb
jne
dec
lods
push
jno
cwtl
pop
dec
add
sub
jge
call
push
insb
in
jg,pn
jle
cs
cwtl
out
jecxz
clc
fs
loop
mov
dec
and
iret
cmp
mov
aaa
push
ret
or
imul
xchg
pop
test
pop
imul
jle
in
lea
adc
mov
in
push
fistps
popf
mov
fstps
jb
jno
and
jle
mov
or
out
or
sbb
dec
daa
mov
cmpsb
lods
add
int
daa
or
xor
mov
bound
xchg
insl
rcrl
and
xor
xchg
in
jp
addr16
mov
dec
imul
mov
rclb
sahf
out
sbbl
push
adc
inc
jge
push
cmp
loope
xor
mov
pop
sub
int
pop
mov
hlt
push
sbb
jnp
dec
pop
mov
ret
enter
mov
lahf
sub
pop
inc
adc
ljmp
test
jp
insl
test
test
cmp
xchg
adc
fiadds
insl
hlt
jp
fisubrs
dec
sub
ret
jo
shrb
mov
stos
push
push
xor
pop
push
jmp
icebp
test
or
cwtl
shr
lret
test
jo
cld
inc
jnp
push
inc
dec
adc
testl
mov
inc
dec
add
mov
flds
xchg
xor
pop
stos
push
sub
mov
dec
int
notl
test
dec
loopne
aad
push
lods
or
jnp
test
push
push
xor
pop
scas
cmpsb
mov
shrb
sahf
jge
shlb
mov
loope
pop
cmp
rcll
sub
xchg
mov
rsqrtps
mov
shll
or
fcmove
inc
pop
addr16
push
inc
imul
pop
mov
sub
mov
lret
or
inc
jnp
adc
lea
inc
in
jp
push
aam
js
inc
rcll
dec
jp
xor
lahf
mov
je
dec
imul
negb
int3
sahf
cmp
cld
mov
sti
fcmovne
push
mov
ret
push
mov
out
pop
lea
push
dec
and
ljmp
pop
xor
add
xchg
mov
aam
sub
fsubrs
aas
outsb
mov
dec
nop
add
in
inc
sbb
adc
mov
cmp
lret
arpl
push
icebp
lods
mov
or
xor
insb
mov
in
fnsave
enter
dec
hlt
mov
lods
cmp
cmp
call
mov
mov
outsl
add
inc
iret
ss
push
cmp
imul
test
ds
popf
cmp
sub
ja
cmp
inc
into
cmpl
and
nop
adc
movaps
jae
dec
test
aas
adc
cmpsb
add
dec
mov
or
stos
push
mov
cmp
adc
jb
push
iret
dec
sbb
and
pop
ss
cs
sub
nop
dec
sub
bound
into
js
cmp
nop
sub
mov
xor
dec
inc
mov
cwtl
inc
xchg
sbb
xor
cld
push
imulb
inc
sarl
xchg
cmp
lods
shlb
in
xchg
mov
mov
test
jle
les
push
xchg
bound
push
mov
lret
pop
jp
fldenv
test
mov
repz
xchg
daa
or
mov
adc
fnstenv
shrb
inc
cli
movl
add
cld
sbb
pop
sbbl
mov
push
mov
pop
pop
outsl
xor
and
inc
icebp
mov
jno
les
popf
daa
sahf
xchg
cmpsb
mov
cs
pop
push
call
outsl
push
jb
cmp
iret
scas
scas
jb
inc
mov
leave
fmuls
jns
sbb
lret
in
enter
fwait
pop
shr
orl
outsb
mov
ljmp
ret
stos
or
inc
inc
cmp
test
dec
mov
loope
mov
out
sahf
sub
les
inc
cld
jmp
mov
cli
popf
mov
das
sbb
in
mov
jae
xlat
inc
jle
inc
dec
addr16
mov
or
add
callw
jb
in
mov
int
dec
or
insb
or
add
mov
icebp
pushf
sub
adc
rcll
xor
lret
imull
daa
cmpsb
lods
dec
mov
pop
sbb
addr16
gs
cmpb
jecxz
inc
loop
xor
mov
adc
cmp
in
push
mov
rolb
out
das
jo
mov
aad
cmp
out
fs
push
push
movsb
xchg
sub
pop
fbstp
stos
fidivl
or
and
cld
pushf
mov
adc
push
cmp
mov
aas
push
outsl
mov
mov
add
mov
test
mul
pop
ds
xlat
mov
scas
and
push
int
push
lret
lods
xchg
lods
or
in
outsl
push
pop
lea
and
insb
mov
cmp
scas
sbb
mov
xchg
scas
pop
or
mov
mov
out
mov
xchg
in
lret
js
pop
lret
sbb
test
pop
and
iret
out
dec
mov
imul
add
mov
inc
bound
jg
rclb
popf
xchg
dec
inc
adc
lret
inc
jecxz
std
mov
jo
push
std
or
mov
dec
and
out
or
dec
and
fstpl
cltd
adc
shll
mov
xlat
jnp
cmp
mov
js
in
or
notl
cmc
shl
mov
xlat
add
mov
movsb
fistpll
std
sbb
dec
or
inc
pop
push
fidivl
sbb
in
shlb
movsb
xchg
xor
mov
mov
pop
adc
pusha
mov
xor
insb
cmp
mov
jo
jmp
ljmp
inc
imul
lret
mov
call
mov
add
fld
into
jo
push
xchg
test
jo
sbbl
in
std
movl
aaa
push
xlat
cmpsl
test
and
icebp
xor
push
pop
mov
dec
sarl
fidivs
and
xor
mov
adc
add
leave
test
and
mov
inc
movl
stos
out
stos
lods
into
add
sub
divb
sub
push
mov
rcll
lret
adc
mov
aaa
xor
jecxz
pop
and
add
and
les
jecxz
and
arpl
ds
push
idiv
push
jg
cmp
xchg
adc
inc
cmp
sub
xchg
ds
inc
xchg
nop
xor
xor
outsb
mov
add
mov
jo
sub
loope
pop
or
repnz
lods
loop
jbe
jle
ret
test
push
dec
mov
pop
adc
imul
xlat
dec
out
in
outsl
fadd
stos
sbb
pop
mov
movsb
mov
ljmp
pop
jnp
push
cmp
xor
pop
mov
shlb
rclb
clc
dec
add
pop
cmp
repz
and
mov
mov
cmp
push
push
lods
iret
mov
sub
das
sub
mov
pushf
pop
pop
nop
or
test
insl
insl
pop
xchg
mov
mov
lret
add
xchg
mov
xchg
jp
mov
dec
int3
sub
shr
pop
push
pop
test
pusha
jl
mov
push
stc
and
xor
add
inc
jg
mov
aad
dec
mov
add
pop
fisubrl
cmp
jecxz
movsl
rcll
dec
push
aas
out
pop
xor
call
jp
pop
or
dec
xor
jo
into
sub
push
mov
imull
outsl
mov
jo
sbb
data16
cs
addb
sbb
adc
dec
aas
jbe
out
sub
xchg
fstpl
fstps
xor
add
mov
xchg
mov
mov
lahf
frstor
inc
cmc
adc
jnp
movsb
mov
sti
lahf
cmp
cli
shl
or
out
and
jge
mov
push
sbb
aad
push
outsl
lods
and
push
lds
add
stos
ljmp
sbb
adc
xor
iret
jge
inc
arpl
mov
cmpsb
mov
out
mov
ret
mov
loope
rcrb
repz
frstor
jecxz
in
iret
cltd
std
mov
fstl
dec
ret
pop
cmp
popf
insb
into
or
scas
cld
shll
inc
aaa
adc
ret
jne
insl
test
clc
mov
cmpsl
push
add
and
call
rcr
scas
in
cmpsb
pop
jecxz
rcr
adc
push
lock
dec
dec
mov
divb
lds
mov
daa
negb
stos
movsb
ret
and
and
push
mov
xlat
test
pop
xor
in
js
sub
clc
xchg
inc
add
sub
dec
mov
add
jbe
loope
pop
insb
push
xchg
in
sahf
inc
or
movsl
das
pop
repz
mov
mov
movsl
dec
push
mov
popa
xchg
sbb
test
xor
outsb
inc
cmp
enter
pop
lds
shll
and
or
dec
fistps
adc
mov
movsb
lcall
shl
stc
iret
pop
ficoml
addl
sahf
jo
inc
fidivs
outsl
or
mov
arpl
lret
xchg
dec
fadds
mov
xor
subb
jecxz
in
pop
imul
jecxz
outsw
xorb
nop
pop
imul
pop
fimull
push
mov
outsb
fmul
adcb
cmp
xchg
xchg
test
jo
inc
popf
in
pop
dec
xlat
push
dec
rcrl
pop
or
int
jnp
jecxz
ja
pop
jmp
jmp
icebp
dec
mov
cmp
or
add
xchg
movl
lds
inc
loop
xor
enter
cmpsl
int3
jbe
push
sarb
hlt
pop
int
add
push
call
dec
mov
dec
dec
bswap
add
fadds
push
cmp
fdivs
inc
movsl
hlt
or
adc
fbstp
push
xchg
mov
lds
or
arpl
or
cwtl
jo
mov
out
sbb
mov
mov
lcallw
je
push
xor
add
jp
sbb
jmp
xor
fidivs
and
mov
sarb
adc
bound
in
inc
xchg
xlat
aas
cli
ffree
rcrl
cmp
ljmp
adc
loope
lahf
out
cmp
call
add
imul
daa
cmc
jo
addb
arpl
sbb
fwait
rcll
xor
data16
cmpsb
dec
xor
arpl
xchg
or
sub
ret
ja
icebp
incl
ret
xchg
lea
insl
inc
imul
repz
in
out
aaa
std
or
inc
adc
inc
add
das
out
mov
pop
inc
out
in
mov
inc
mov
ss
mov
mov
add
ja
iret
mov
jmp
jl
adc
cwtl
sub
fwait
and
shr
sbb
ss
sbb
leave
jge
add
lret
push
xorl
fsts
mov
mov
inc
inc
mov
rcrb
cs
sarl
enter
cmp
addr16
push
jecxz
mov
jns
inc
loop
or
mov
xor
xchg
daa
sbb
inc
nop
xchg
int
in
shl
xchg
lods
sbb
or
jg
xchg
jmp
xchg
jmp
call
pop
lret
addr16
jmp
sbb
inc
mov
inc
and
mov
mov
dec
shlb
insl
fs
lods
ret
jbe
sti
loope
push
xchg
inc
cmp
pop
repnz
lea
xchg
jbe
mov
sbb
loop
jae
mov
decb
or
sbb
loop
sarb
mov
in
add
ficoml
into
xor
cmpsl
push
hlt
mov
call
rolb
mulb
pop
or
daa
aas
mov
or
or
pop
unpcklps
mov
ret
xor
mov
sub
dec
out
pop
repz
jmp
mov
js
test
xchg
pop
mov
cmp
mov
pop
dec
rcll
popa
mov
inc
cmp
daa
mov
cs
fadds
add
jecxz
mov
jle
push
sub
xor
push
popf
push
insl
push
js
pop
inc
jp
jae
cwtl
inc
je
cmp
jne
mov
push
pop
mov
cwtl
enter
scas
ffree
cmc
js
mov
aam
xchg
sti
dec
sbb
arpl
cmp
hlt
cld
scas
mov
xchg
push
pop
jnp
jne
xchg
inc
sbb
push
lock
stos
out
pop
sbb
hlt
scas
sbb
xchg
sbb
push
push
and
in
push
cmc
cltd
outsb
xchg
jecxz
xchg
jne
sahf
and
in
dec
inc
and
notb
sbb
in
mov
mov
jp
jbe
bound
jmp
pop
push
fstpt
xor
flds
pop
shll
fdivrs
push
les
xchg
pop
inc
out
add
push
push
test
lods
shrb
or
jns
push
pop
stos
mov
adc
cmp
push
je
sbb
shlb
repnz
mov
push
dec
mov
movsw
jno
orb
mov
adc
sub
int3
repnz
push
bound
jns
insl
pop
fwait
lds
nop
pop
pop
ss
nop
cmp
cli
test
insl
addb
pop
js
adc
dec
and
stc
or
xor
xor
dec
jae
shlb
add
pop
lods
xchg
fnsave
int3
xor
pop
dec
adc
xor
fdivrs
and
and
mov
and
and
mov
mov
pusha
xor
jb
ds
xchg
jg
push
xchg
jg
cmpsb
andb
addr16
mov
ret
jno
dec
int3
xlat
jp
dec
dec
xchg
lret
ret
and
jne
enter
push
ror
jnp
and
loope
fwait
aas
scas
add
mov
push
outsl
cmpl
dec
sub
add
jae
lea
mov
dec
lret
jle
push
stc
jecxz
dec
sahf
dec
xor
out
mov
out
jg
pop
cli
or
sub
mov
std
inc
sub
push
jl
sub
fldcw
scas
std
adc
dec
cmp
xlat
adc
shlb
sbb
xor
pop
lret
or
stos
add
mov
cmpsb
cmp
decb
mov
loope
mov
out
adc
test
iret
mov
mov
je
scas
aaa
mov
cmp
adc
stos
add
mov
jne
xchg
testb
mov
dec
je
mov
pusha
mov
ret
jne
pop
xchg
xor
jbe
mov
xorb
repnz
sbbb
imul
bound
and
mov
adc
mov
cmp
mov
pushf
adc
sbb
cmp
jns
insl
xchg
cmpb
xor
or
lret
sub
mov
out
inc
sub
and
aaa
mov
cmp
xor
data16
push
jns
dec
adc
xor
sub
fstpl
dec
and
xchg
loope
aam
pop
ljmp
lret
push
adc
mov
adc
sbb
add
or
jmp
movsl
lea
add
scas
je
sarb
ss
push
xchg
xor
xchg
in
jge
lret
xchg
out
or
hlt
push
sar
jmp
dec
xchg
fs
and
xlat
jmp
inc
push
sub
cli
repz
clc
mov
sbb
into
ljmp
xorb
mov
movsb
jecxz
or
mov
xchg
shufps
out
enter
rep
dec
cld
clc
mov
inc
dec
imulb
adc
jbe
mov
xchg
inc
pop
enter
sub
or
rolb
xchg
daa
loop
mov
test
ud1
sbb
cmpsb
xchg
stc
mov
sarb
iret
fnstcw
jle,pt
cmp
pop
aam
ds
jmp
repz
push
dec
lods
jnp
inc
push
es
or
dec
out
xchg
mov
lcall
in
and
mov
push
mov
fldl
and
add
add
cmp
and
popa
lret
testb
jae
sbb
or
int
mov
rcl
outsb
jmp
pop
stc
inc
int3
add
mov
push
nop
lret
sub
and
bound
dec
movsl
idiv
xor
test
cmpsb
addr16
rcr
jns
and
xor
mov
leave
mov
inc
xchg
bound
and
add
push
dec
test
gs
mov
push
je
pop
shr
sub
jge
sub
mov
popf
mov
sbbb
call
out
inc
mov
sarb
shl
jae
jne
xor
in
cwtl
lret
data16
cwtl
ds
pushf
sub
rorb
sahf
fld
jb
in
mov
mov
gs
lods
fs
stos
adc
lods
ret
mov
pop
xchg
dec
cld
test
xchg
lret
clc
xchg
movsb
xchg
cmp
push
jg
dec
sbb
dec
aas
or
mov
js
lret
les
mov
inc
out
jle
mov
lods
pop
fdivrp
fnsave
scas
out
cltd
insb
and
add
mov
and
add
jnp
xor
aaa
das
add
pop
pop
nop
clc
iret
mov
push
push
inc
and
xor
pop
ficompl
cmc
jecxz
and
cld
mov
bound
add
int
xchg
ljmp
jno
mov
in
mov
lock
mov
sbb
and
mov
loope
or
push
push
dec
adc
popa
scas
mov
sbb
jg
cli
push
mov
lcall
stos
cmp
sub
lods
dec
ficoml
mov
push
fnstenv
out
jle
adc
clc
sbb
insl
jbe
xchg
push
scas
mov
fwait
shr
fsubr
and
xchg
and
bound
pop
sub
pusha
testl
mov
enter
xchg
pushl
mov
sahf
or
es
les
mov
xchg
out
arpl
cs
inc
imul
jmp
inc
loop
loop
ret
cmpsl
in
cmp
jno
xchg
jns
mov
stc
dec
stc
mov
scas
leave
sub
pop
push
lret
sbb
call
mov
bound
fiaddl
pushf
dec
outsl
adcl
scas
addr16
inc
jge
movsb
lods
push
leave
push
push
xchg
push
call
out
sub
fst
add
stos
xor
pop
idiv
mov
fiadds
ja
arpl
in
cmp
mov
jo
fistpl
xchg
std
es
push
rcrl
pusha
dec
pusha
inc
add
pop
ret
cltd
lcall
xor
dec
pop
cmp
aas
jne
pop
jmp
dec
test
test
movsb
in
push
rcrl
mov
sarl
or
out
cli
les
and
sub
mov
mov
in
pop
cmp
mov
mov
dec
insl
jae
popa
sub
sub
popa
stc
or
or
les
andb
fs
mov
inc
stos
sahf
xor
scas
sbb
pop
mov
jl
cmp
in
sub
pop
jns
cmp
cmp
cmpsl
sar
adc
mov
dec
lock
sbb
mov
inc
inc
cltd
leave
outsb
jne
out
dec
xor
push
je
loop
push
push
mov
jecxz
and
imul
jo
test
inc
xchg
jg
add
fstps
sbb
mov
sub
xchg
fadds
fstpl
rorl
xor
xchg
xor
push
and
stc
data16
xchg
jle
aam
mov
stc
and
inc
orb
jmp
sub
stos
cmpsl
sti
inc
or
es
pop
inc
or
sbb
cmp
imul
and
scas
cmp
in
sti
loop
fdivl
dec
pop
add
or
dec
out
xchg
jb
adc
jecxz
xchg
push
mov
imul
lahf
add
push
test
cmpsl
and
pushf
mov
subl
cwtl
and
sbb
cmp
xorb
scas
xor
cmp
inc
xchg
fnstcw
cmc
cwtl
pop
mov
mov
popf
mov
out
bound
adcl
push
fcmovu
icebp
xchg
aam
sub
add
repz
jb
daa
pop
and
sarl
int
pop
dec
mov
scas
icebp
add
pop
pop
mov
xchg
jle
cmc
xchg
imul
stos
or
mov
sbb
cmpsb
loopne
add
cmc
mov
idiv
daa
push
out
or
jns
xor
andl
call
jo
popa
pushf
jl
ljmp
popa
lcall
inc
and
sbb
sarl
ds
and
cld
lds
cmp
add
divl
xor
je
lock
xor
lea
fmuls
scas
push
xor
pop
mov
cmp
lods
jmp
into
sbb
clc
in
xchg
std
js
mov
aad
jns
or
mov
addr16
popf
adc
mov
cmp
mov
cmp
stos
movsl
and
cmp
xchg
pop
mov
jle
mov
fdivrp
call
subl
jae
cmp
testl
pushf
ds
lret
sub
repz
mov
clc
jg
push
and
mov
push
cld
fbld
mov
pop
pop
cmp
jns
imul
cmp
lret
mov
imul
aam
and
push
mov
sub
xchg
lea
xor
push
aad
test
and
pop
js
movsl
imul
sub
gs
js
cld
stc
pminsw
into
pushf
mov
xchg
cs
bound
push
cmp
or
jae
push
lea
push
dec
in
inc
push
push
add
and
subl
test
rcrb
xor
pop
dec
lea
and
cmp
jb
inc
into
ja
popf
ljmp
sbb
mov
sub
notl
pop
cmp
push
pushf
sub
outsl
mov
and
lret
aaa
add
ficomps
push
leave
push
mov
pop
xor
repz
pop
sub
aad
cltd
mov
aas
outsb
insl
hlt
or
pop
adc
mov
xchg
jp
in
inc
mov
out
jg
cli
add
fists
outsb
mov
clc
cmpsl
in
xchg
pushf
les
aam
imul
sbb
cmc
pushf
dec
adc
sub
lahf
dec
loope
push
sbb
inc
mov
dec
sub
mov
rclb
scas
div
mov
lds
sbb
mov
inc
imul
repz
or
nop
cmpsb
push
imul
ficompl
aaa
ja
data16
mov
cmp
outsl
icebp
xchg
inc
int
pop
scas
cld
or
shll
sub
ror
mov
xorl
inc
lret
or
jecxz
dec
fldl
sub
jns
lea
std
lods
pusha
mov
jbe
mov
out
testb
and
enter
ret
fs
jne
mov
mulb
jp
iret
adc
jb
sbb
mov
push
mov
js
dec
js
addr16
and
pop
pop
push
jne
or
cmp
arpl
out
and
sarl
aam
shr
xchg
sub
or
in
stos
fsubrl
ret
xchg
shr
dec
popa
jne
nop
insl
xchg
xor
lret
in
movsl
adc
cmc
jbe
xor
xor
andb
sbb
dec
sub
je
sti
push
divb
inc
sahf
push
lods
pop
mov
lcall
insl
adc
ficomps
pusha
scas
ds
aad
leave
push
inc
mov
jbe
call
iret
aaa
adc
les
adc
push
aaa
sub
lahf
sub
and
mov
jne
jmp
and
aaa
int3
clc
sti
outsl
sub
int
mov
jbe
stos
cmc
jge
lahf
decb
push
jg
xlat
mov
adc
test
in
sbb
jmp
fcmove
dec
sbb
cwtl
push
xor
call
mov
push
imul
xor
fwait
sub
mov
in
push
adc
push
cld
dec
mov
out
sti
mov
xchg
jnp
mov
ja
pop
imulb
mov
jmp
pop
sbb
sahf
mov
xor
std
pop
mov
mov
std
lcall
pop
sub
repnz
int
aad
or
out
call
cli
cmp
lods
roll
mov
cmp
popa
mov
in
mov
inc
subb
cld
je
mov
adcb
and
mov
dec
movsl
or
movsb
xchg
xor
pop
fldl
xchg
add
pop
lret
loop
inc
gs
aad
fs
or
mov
repz
sub
mov
fdivl
sbb
lods
or
mov
xchg
dec
lds
and
jae
mov
stc
push
lods
jl
fidivrs
sbb
mov
cmp
stos
das
cmc
or
push
lea
xchg
shll
clc
or
into
mov
lock
aam
jns
pop
adc
and
in
fwait
push
ret
mov
test
add
out
inc
pop
lds
sub
clc
mov
shll
sub
push
enter
xchg
rep
fdivl
jecxz
ss
cmc
mov
lcall
jne
sahf
mov
dec
out
loopne
stos
xchg
add
mov
loope
sbbb
push
mov
jbe
repnz
and
mov
mov
push
sbb
dec
stc
sarb
and
pop
fbstp
fdivrs
stos
mov
pop
push
shrb
aaa
fwait
dec
dec
fiaddl
cli
jl
sub
mov
cmpl
lds
lret
lret
jmp
mov
test
inc
dec
jo
add
inc
sahf
xchg
nop
jne
push
or
or
test
sti
push
fistpl
aas
adcb
out
pop
ss
pop
xor
gs
xchg
xchg
sub
push
mov
int3
loope
mov
jb
or
lock
out
data16
xor
imul
lahf
mov
cmc
test
out
dec
mov
push
inc
jmp
dec
sti
add
mov
add
inc
xchg
bound
je
repz
out
sub
jecxz
loope
add
pop
loop
cmc
push
loopne
hlt
pop
outsl
and
mov
xlat
pop
fs
sbb
dec
stos
xor
cmp
cli
rcrb
or
xchg
dec
rcrb
and
js
sbb
sbb
cmpb
cmp
cltd
lods
push
lret
adcb
or
fsubr
jo
sahf
mov
push
jbe
push
repz
cmp
sbb
sub
lcall
aam
stos
xchg
js
xchg
in
mov
pmulhuw
xchg
lret
xchg
insb
stc
dec
mov
and
aaa
mov
dec
in
pop
test
push
cs
mov
addr16
addr16
ret
addr16
cmp
aad
push
imul
cmp
jae
push
inc
dec
adc
jno
mov
aam
mov
imul
cmp
mov
dec
mov
or
in
push
add
out
push
jle
aam
inc
jo
dec
imul
dec
divb
stc
push
pop
fdivrl
fwait
icebp
pop
lcall
andl
and
xchg
rorb
int3
jl
xor
out
fwait
aaa
lds
imul
cmpsb
jp
and
in
push
cld
repz
fsubrs
into
cmc
andl
xor
in
pop
imulb
negb
leave
sbb
inc
pop
inc
xor
mov
adcl
adc
inc
jle
pop
dec
mov
hlt
pop
dec
xor
jb
repz
jbe
sub
xchg
addr16
pop
mov
mov
int3
into
pusha
jno
es
sub
and
mov
mov
pusha
mov
inc
lock
pushf
fldcw
mov
addr16
outsl
cmp
mov
fisubrs
movsb
cmpsl
sub
cmp
xchg
sti
and
int3
pop
xor
and
push
lahf
jge
notb
mov
popf
stos
aad
mov
rclb
call
adc
or
pop
nop
sub
xor
mov
mov
mov
push
daa
gs
cmp
inc
mov
bound
mov
int
nop
mov
jb
jl
add
inc
loopne
js
test
push
sbb
jnp
or
or
cmp
dec
sub
dec
sbb
push
ljmp
or
sbb
pop
repnz
or
fwait
mov
add
sbb
inc
lock
pop
xchg
and
mov
mov
les
and
sahf
cltd
add
sub
ljmp
in
cmp
pop
mov
sub
aad
lret
push
sbb
pop
mov
sub
sub
sbb
movb
in
cmp
mov
mov
dec
xor
inc
sub
fisttpl
imul
ret
sub
xor
cmp
loope
pop
ror
dec
sbb
sbb
or
cmpsl
cmp
int3
aas
xor
mov
mov
or
inc
mov
inc
popf
inc
out
adc
addl
cmpsl
sub
dec
xchg
push
cmp
out
or
movsl
jecxz
or
enter
out
scas
addr16
sub
sub
cli
cmp
sub
and
popa
insb
loopne
insl
inc
ljmp
mov
lock
fwait
insb
mov
lea
nop
xchg
cwtl
mov
adcl
inc
or
pop
pop
fdivrs
in
fdivrs
stos
fcomp
push
popl
pop
sub
push
mov
mov
scas
fldl
test
pop
and
adc
sub
fidivrl
adc
mov
and
aas
or
push
stc
cmpb
es
jnp
push
pop
sti
adc
and
xor
and
and
lods
nop
push
dec
fprem1
aam
jp
push
push
clc
mov
adc
xor
pushf
pop
xor
insl
cmp
xchg
and
xor
popa
inc
cmp
push
pushf
repnz
pusha
dec
lret
aas
fsubr
pop
and
add
xor
dec
push
adc
pop
add
sub
fs
adc
ret
mov
pop
lret
notb
stos
les
shrl
xor
inc
loope
cmp
outsb
sub
pop
int3
push
sti
inc
or
int
pop
shlb
clc
lret
sub
xchg
pushf
cmp
inc
test
test
push
cmp
lods
cmp
xor
mov
scas
data16
jle
pop
data16
je
or
cmpl
sub
sahf
jns
or
popf
push
pushf
inc
add
add
cmp
and
or
sub
and
lcall
ret
dec
pusha
mov
loope
popa
push
mov
push
dec
inc
jno
cltd
xor
xor
add
inc
aaa
mov
lock
cli
xchg
mov
pop
jmp
inc
ljmp
add
sub
and
jb
call
mov
xor
sti
fstpl
jns
ret
test
out
add
dec
adc
je
and
test
bound
inc
out
iret
int3
mov
scas
test
mov
mov
in
fucomip
leave
jno
mov
and
ror
inc
or
cli
xor
xchg
loope
roll
popa
out
dec
mov
outsb
mov
sub
jno
mov
sub
pop
imul
pop
add
in
pushf
popf
shr
inc
repnz
mov
sbb
stos
mov
push
out
cmpsb
xchg
and
fildll
push
test
es
adc
jo
out
cmpsb
ret
xchg
pop
mov
xchg
stc
sub
and
dec
push
adc
adc
mov
mov
out
in
mov
add
sbb
fisubrl
pop
and
sahf
fldl
mov
push
aad
xlat
adc
push
cmc
iret
cmp
int
xorl
daa
sub
or
xor
mov
dec
xor
mov
lea
inc
xor
gs
mov
mov
nop
fdiv
cmpb
scas
xchg
scas
pop
inc
nop
inc
ljmp
mov
sub
jle
jp
pop
imul
and
xchg
ret
cltd
mov
aam
dec
sarl
mov
and
and
xchg
xchg
rorb
sbb
mov
mov
and
push
mov
jl
fisttpl
adc
int
mov
push
gs
les
idiv
or
adcl
stos
cmp
scas
jo
cmp
lock
scas
and
sbb
inc
ror
je
xchg
out
sub
push
mov
loope
fstpt
test
fists
mov
loop
jno
movsb
call
dec
adc
xor
call
jmp
fs
and
jp
mov
repz
lahf
push
xor
sub
or
jns
sbb
testl
test
sbb
or
and
outsl
inc
or
mov
sub
adc
adc
repnz
cmp
rcrb
lds
pop
xor
cmpsl
int
dec
lods
scas
jb
scas
cmc
mov
imul
aad
inc
lods
xchg
jne
sub
sahf
mov
xor
dec
arpl
push
movl
fldcw
lret
pop
es
ficoms
inc
inc
add
mov
sub
fisubrs
sub
rcll
int
mov
aad
sbb
pushf
xchg
dec
xlat
push
push
pop
mov
mov
mov
jne
mov
mov
das
or
int3
jne
inc
jns
fbld
xchg
out
fcomip
sbb
xchg
enter
arpl
xchg
adc
xchg
es
mov
loopne
jo
ljmp
lods
lahf
mov
jno
cs
mov
lds
sub
cmp
rcrl
dec
jp
pop
cli
insb
and
ss
call
les
lods
iret
jg
adc
jle
push
ja
movsl
jmp
inc
push
rcl
xor
mov
in
jae
movsb
loop
inc
loopne
icebp
jns
cmp
mov
sub
push
clc
dec
es
mov
mov
mov
into
enter
mov
ja
sti
or
test
stc
rol
add
inc
iret
mov
dec
stos
ds
add
xor
mov
jp
dec
js
cmp
push
sbb
jmp
adc
adc
lods
adc
add
jl
je
mov
rcll
mov
push
add
cwtl
push
xor
jg
jle
fwait
push
mov
add
push
sbb
cmp
in
and
cmp
sub
cltd
sub
push
and
jp
jno
loope
dec
addr16
dec
or
rcll
add
arpl
outsb
cmpsb
jp
xchg
cwtl
mov
push
cltd
call
frstor
push
sahf
sbb
int
sar
sub
pushf
push
test
adc
ret
or
pop
dec
xor
sub
in
cmovbe
cmp
jp
mov
test
or
jb
and
pop
arpl
inc
ljmp
mov
jnp
cltd
fwait
jp
lods
stos
xchg
out
adc
movsb
sub
xchg
or
sub
jl
cli
es
or
mov
scas
inc
arpl
cmp
mov
mov
add
and
fnstsw
sbb
push
pop
dec
mov
push
push
test
lea
push
jge
out
sbb
lahf
jb
out
sbb
push
lds
leave
insl
mov
je
outsl
aam
jbe
into
jae
cmpsb
cmp
mov
push
push
daa
repnz
mov
imul
sub
add
fsubrs
ret
sbbl
push
cld
mov
sahf
lret
dec
adc
loopne
mov
lods
pop
add
mov
dec
mov
ds
mov
xor
ja
imul
inc
sub
and
sti
dec
mov
sub
sub
and
sub
xchg
ja
push
dec
and
sbb
push
xor
xor
sub
les
push
dec
iret
xchg
lds
mov
cmp
scas
sub
jo
je
outsl
or
out
sahf
rcrb
in
in
mov
or
leave
and
out
lret
push
xlat
xchg
inc
mov
les
push
mov
push
pop
rcll
imul
dec
fadd
dec
pop
fs
pop
pop
hlt
mov
xor
stos
enter
push
sti
pop
ror
or
and
push
xor
push
enter
dec
and
decb
jmpw
stos
arpl
pmaxsw
cli
mov
aad
pushf
inc
loop
push
sbb
movsl
push
xor
jg
jecxz
cli
stc
fs
mov
mov
es
lcall
lods
mov
lret
addb
mov
clc
lret
mov
inc
aad
fwait
dec
jo
inc
mov
or
adc
inc
xor
pop
pop
jl
mov
inc
ret
add
mov
addl
enter
mov
addr16
sub
aas
pushf
imul
int3
cmp
out
cltd
and
adc
int
mov
or
push
dec
jg
hlt
mov
enter
inc
cmp
adc
pop
mov
pop
std
mov
dec
cmpsb
sarl
pop
dec
in
nop
daa
push
jge
mov
imull
mov
cmp
sub
jp
in
rclb
push
inc
xor
jne
lcall
mov
mov
mov
push
adc
rol
pop
out
repnz
xchg
jmp
hlt
xchg
enter
out
shrb
clc
daa
mov
push
scas
mov
add
adc
cmpl
fwait
and
cmp
add
mov
sahf
popf
outsl
push
sarl
ja
test
adc
push
mov
out
outsb
jecxz
lcall
pop
and
int3
movsb
stc
and
xchg
mov
jnp
add
mov
add
fidivrs
mov
lret
jle
adc
mov
ljmp
cwtl
jmp
inc
dec
stos
jno
mov
xor
jl
inc
xchg
or
cmp
pop
pop
jle
int
leave
scas
in
inc
mov
add
inc
jne
push
sub
xchg
mov
dec
shrl
cs
mov
ret
lock
test
cmp
scas
les
popf
inc
dec
and
fildl
xor
add
mov
or
out
stos
pop
int
adc
adc
lret
mov
and
xchg
imul
lret
stos
movsl
ljmp
jb
jbe
mov
pop
test
imul
pmulhuw
dec
popf
into
sbb
inc
popa
push
pop
lret
pop
out
inc
sbb
xor
mov
cmp
addr16
adc
cmp
xor
sbb
xchg
cltd
shl
push
bound
rcr
and
rorb
iret
mov
jb
outsb
and
jo
dec
mov
adc
mov
sbb
and
pop
mov
jo
push
cmp
sbb
testl
clc
and
std
in
mov
dec
cli
mov
jle
ljmp
fdivrs
movsb
lcall
aad
lret
pop
popl
sub
adc
stos
add
and
cmp
cwtl
jmp
in
adc
inc
mov
add
adc
mov
sbb
jnp
arpl
lock
xchg
inc
daa
fnsave
jl
push
mov
mov
loope
sbb
pop
stc
aas
mov
ja
idivl
loope
inc
dec
jns
mov
cld
call
xchg
nop
out
vmread
lahf
pop
fs
push
shlb
jns
xchg
bound
or
aad
inc
mov
push
lret
xchg
lcall
mov
mov
mov
add
in
daa
mov
inc
dec
scas
cmp
mov
das
rclb
insb
xchg
cmp
push
or
daa
ret
out
mov
movsl
aas
cmp
adc
aaa
push
push
jecxz
out
stc
xchg
jge
pop
cmc
cli
dec
insb
xchg
lock
and
push
test
mov
add
stos
jmp
fs
aaa
enter
push
daa
dec
mov
sahf
test
push
mov
test
mov
xor
insl
jnp
nop
fisttpl
xchg
loope
push
rclb
adc
push
mov
idivb
mov
jmp
jle
xor
addl
push
and
js
and
pop
sbb
sub
inc
sbb
xchg
sti
or
jge
les
ljmp
add
xchg
loopne
pop
iret
jl
subl
cmpsb
int3
xchg
dec
push
push
popf
push
mov
lret
out
push
xorl
mov
xor
cmp
inc
sahf
push
push
test
enter
cmpsl
in
stc
dec
mov
sub
mov
or
xchg
add
push
aas
sbb
mov
dec
and
dec
cmc
pop
inc
jae
out
add
mov
pop
testl
das
pop
rcll
mov
sub
mov
jge
push
mov
jge
aad
int3
dec
mov
adc
sub
adc
lods
std
adc
mov
sub
add
mov
loopne
rep
hlt
add
es
inc
mov
add
push
repnz
mov
cwtl
scas
push
jp
jp
or
jl
popl
test
ja,pt
xor
xchg
or
leave
push
movsb
mov
fsts
push
push
mov
push
loope
clc
test
mov
rcr
push
rolb
fsubl
sub
adc
pop
pop
cmp
adc
mov
and
mov
pop
push
mov
lods
fs
push
or
out
outsl
sub
mov
cli
stos
cli
into
pop
test
idiv
push
mov
and
mov
cmp
imul
pop
and
insb
cmpsb
inc
icebp
enter
mov
adc
push
outsl
cmp
into
or
xchg
pop
rolb
mov
lret
mov
hlt
dec
sub
push
mov
push
jno
jbe
and
xchg
lods
repnz
inc
pop
mov
outsl
pop
or
cmp
insl
dec
or
call
xor
push
fs
add
imull
enter
mov
andb
popa
sahf
pop
leave
cmp
pop
push
dec
mov
test
aam
mov
push
mov
jmp
adc
ja
inc
and
dec
int
in
xchg
ret
bound
jmp
xchg
in
js
rolb
mov
push
inc
test
mov
shrl
test
sbb
cmp
repz
outsl
cmpsb
push
xlat
popa
pusha
arpl
push
loopne
pop
fisubl
xchg
out
inc
arpl
cmc
mov
mov
popa
cmc
sub
aam
mov
arpl
ljmp
std
xlat
jae
or
aaa
xchg
test
pop
or
push
pop
fs
les
xlat
addr16
dec
xor
jo
rcl
stos
inc
inc
push
push
fisttpl
jns
imul
add
sbb
xor
call
jl
js
int
push
out
out
push
outsb
adc
mov
aad
inc
sbb
mov
xchg
arpl
les
sub
xor
outsb
cmp
lret
out
xchg
sbb
add
sbb
and
inc
fimull
scas
jae
adc
out
mov
push
jo
js
orl
and
cmpl
sbb
inc
roll
je
cmp
push
add
fstpl
fsub
movl
cs
negl
rolb
pushf
xchg
cmp
inc
sub
sbb
jnp
lds
ret
mov
jne
sub
sub
test
xchg
push
loop
data16
dec
in
into
xor
mov
out
call
mov
imul
sahf
ss
into
mov
sub
add
jg
mov
bnd
popa
push
pop
pop
data16
sub
cltd
jmp
or
adc
dec
xor
dec
rcrb
insl
in
daa
xchg
adc
daa
inc
int3
stos
mov
insl
push
add
imulb
jl
fxam
push
lock
dec
jne
mov
das
addr16
xchg
into
sbb
mov
sarb
pop
cmpl
leave
scas
insb
stos
mov
dec
xchg
jge
sub
push
sub
fadd
ja
sahf
dec
mov
mov
cmpsl
nop
xchg
out
mull
inc
jno
ja
or
push
inc
and
push
ljmp
adc
xchg
jge
data16
fs
and
popf
in
stos
adc
push
addr16
xorb
loopne
out
mov
inc
lret
jo
movsb
and
pop
out
dec
arpl
enter
das
popa
xor
test
xchg
shl
in
xchg
call
xchg
int
dec
cltd
sbb
or
icebp
dec
adc
bound
xchg
out
into
mov
imul
push
cld
ja
adc
or
mov
push
push
imul
xchg
xlat
loope
add
jne
xor
andb
ret
inc
mov
jnp
adc
sarb
ss
or
dec
xor
adc
data16
jg
mov
xchg
sub
push
inc
movsl
sub
dec
pop
adc
jne
cmp
fnstcw
pop
mov
inc
cmp
mov
bound
or
sahf
fadds
lret
xchg
lcall
mov
int3
sbb
jae
cltd
lahf
rcrl
popa
or
test
je
ds
xchg
std
sbb
repz
inc
mov
int3
inc
hlt
aaa
outsb
sub
mov
fstl
popa
jnp
lock
xor
insl
inc
outsb
rcll
sahf
test
sub
or
pop
sub
push
je
fwait
in
cmp
in
dec
push
ficompl
xor
in
sub
daa
cld
mov
mov
jecxz
std
xchg
shlb
or
in
sti
sub
adc
push
loop
adc
jne
pop
mov
jo
pop
sub
pushf
push
fisttpll
orl
mov
jp
and
pop
push
cwtl
out
or
enter
mov
or
pop
push
inc
mov
in
pop
arpl
inc
xor
lcall
mov
sub
mov
call
xchg
fucomip
adc
mov
jecxz
and
jecxz
icebp
mov
out
sub
jnp
cld
js
lods
push
jno
pop
aas
movsl
popa
lods
mov
xor
into
fiadds
das
push
nopl
jge
mov
stos
pop
dec
int
cli
sub
pop
and
popf
movsl
or
rep
mov
popa
enter
add
stc
jno
mov
pop
out
sub
into
lcall
out
stc
inc
adc
mov
jo
mov
data16
es
idivl
push
push
pop
jecxz
xchg
repnz
je
jmp
dec
out
cld
mov
test
outsb
jnp
in
js
data16
dec
jmp
lret
faddl
aaa
cld
movsl
popf
dec
loope
std
push
mov
add
push
mov
mov
pusha
sub
mov
push
sub
ljmp
sbb
push
mov
aas
lret
test
adc
xor
lahf
std
movsl
xchg
imul
arpl
mov
insl
mov
xchg
or
sbb
sarb
add
fdivrs
xchg
sbbl
mov
sub
and
movsl
sub
test
icebp
xchg
test
lods
rolb
lods
es
adc
outsl
mov
mov
inc
scas
fldt
adc
adc
lea
outsl
mov
jmp
lods
test
lcall
stc
mov
lcall
xor
or
jno
jns
dec
push
sbb
jle
push
js
dec
cmc
repnz
xor
mov
jb
or
xchg
dec
movsl
adc
sub
sub
add
inc
sub
lods
mov
push
or
frstor
testb
push
daa
push
movsl
mov
mov
out
lods
stos
popa
jecxz
je
or
cmp
pushf
pop
push
popf
cmp
sbb
jge
lahf
je
enter
jne
push
inc
popf
sbbb
cs
pop
push
es
xchg
push
xor
cld
fsubl
sub
xor
sub
push
out
inc
mov
pop
or
inc
aas
movsb
fst
rcrl
test
add
push
aas
inc
push
stos
movsb
in
scas
dec
bound
xchg
lods
xor
mov
fmuls
or
adc
push
repnz
mull
shll
cmp
pop
loop
dec
mov
pop
cmp
dec
cs
mov
dec
insl
out
cmpsb
ret
jg
fdivrp
mov
fmull
in
and
and
sti
push
out
lods
push
call
iret
cmc
add
dec
ja
fisttpl
js
push
mov
dec
mov
sti
pop
inc
xchg
fsubs
ljmp
or
mov
lock
icebp
inc
push
int
add
pop
fwait
ss
pushf
cmp
mov
fistl
adc
mov
call
jno
push
out
rcrl
mov
lods
jno
fldt
pop
jmp
jmp
push
sbb
mov
push
cli
ja
fs
popa
and
aam
test
and
or
or
in
inc
aaa
sub
test
jle
push
stos
cmpsb
mov
loop
ret
push
flds
dec
mov
test
aaa
std
movsb
insb
arpl
mov
jo
push
xchg
divl
xchg
icebp
call
pop
testb
adc
je
adc
mov
rorb
dec
cmpsl
mov
call
into
repz
icebp
push
fnsave
mov
mov
aaa
jmp
repz
cltd
pop
adc
icebp
pop
cmp
and
cmc
cmp
ss
add
add
pop
pushf
out
jg
xorb
or
int3
js
sbb
jb
outsb
mov
jb
mov
data16
xor
inc
es
and
imul
pusha
mov
dec
cmpsb
xchg
sub
popf
cmp
out
cld
xor
add
add
pop
push
jbe
test
outsb
dec
pusha
imul
jge
ss
jno
add
sub
popa
jno
push
dec
sti
add
pop
subl
out
xchg
lret
dec
push
out
or
int3
sub
pop
test
xchg
adc
pop
out
sbb
adc
mov
sub
les
adc
lret
movb
and
adc
add
mov
movl
add
int3
push
out
lahf
ret
push
outsl
mov
and
inc
sbb
repnz
jecxz
ret
or
in
adc
rclb
pop
out
jge
cmpsb
gs
pop
dec
cmpl
iret
sub
cmp
inc
iret
jmp
jnp
or
rcl
cmp
out
mov
insb
out
mov
and
clc
mov
mov
lret
ret
jne
xchg
stos
nop
addr16
sbb
lea
cmpsb
gs
mov
sbb
pop
pop
sbb
add
or
out
data16
sarb
cmp
pop
mov
mov
adc
scas
addr16
or
mov
mov
adc
ret
rorl
mov
jbe
dec
mov
fnstenv
adcb
pop
sti
xor
push
lret
mov
lret
stos
xchg
inc
out
push
xor
popa
lahf
mov
and
push
scas
in
jge
insl
test
jg
push
and
out
xchg
dec
sub
pop
and
add
or
add
ss
fstpt
pop
popf
loope
fdivs
adc
stos
loopne
xchg
out
mov
stos
mov
xchg
add
imul
cmc
and
testl
loopne
and
xor
or
mov
les
xchg
add
loope
aaa
out
add
mov
rcl
mov
cmp
aad
cmp
je
push
cmpsl
inc
jmp
pop
into
out
mov
mov
test
fiaddl
fidivrl
xor
shrl
jae
push
mov
cld
or
es
rolb
lahf
adc
popa
std
aam
jl
pop
sbb
std
add
jg
fwait
icebp
or
mov
mov
cmp
data16
mov
imul
adc
xchg
gs
insl
imul
add
repz
cmp
enter
jnp
fldln2
into
loope
dec
mov
insl
mov
sub
cmpsl
shll
sub
push
cmp
push
in
inc
sub
xchg
adc
test
sahf
hlt
rcl
stos
imul
jmp
adc
arpl
jmp
mov
ds
push
push
loop
hlt
mov
dec
shr
xlat
loope
or
lods
mov
aas
xchg
xchg
push
enter
sbb
xchg
mov
das
push
imul
sbb
lods
adc
scas
dec
ja
imul
fsub
jmp
fs
stos
sub
mov
pop
and
mov
cmp
int3
pop
inc
dec
pop
sbb
leave
orl
pop
mov
addr16
fidivrs
repz
dec
add
div
inc
push
xor
mov
push
inc
mov
mov
sbb
inc
daa
adc
cwtl
mov
in
sar
cwtl
je
or
mov
cmp
lcall
stos
pop
int3
push
mov
xchg
jg
adc
loop,pt
push
push
in
cmpb
push
inc
mov
enter
ss
push
sbb
cmpsl
cs
cmp
stc
into
mov
mov
jg
pop
andl
in
sub
adc
pop
test
popa
jb
aad
cmp
fcompl
mov
xor
in
daa
out
push
mov
lret
xchg
movsl
cmp
aas
mov
xchg
fcmovne
out
and
adcb
pushf
test
cwtl
cmp
mov
in
dec
je
adc
cs
dec
sub
mov
push
test
movsb
xor
add
dec
fcomp
mov
cmp
fdivrs
add
bound
push
mov
stos
cmpsb
adc
pop
insl
imul
in
adc
out
hlt
cmc
mov
adc
jb
shlb
dec
xchg
popa
test
insl
dec
xchg
cmpsl
js
jmp
jge
push
int3
xchg
xchg
test
mov
mov
pop
mov
xor
aaa
jecxz
arpl
fcom
mov
adc
int
ja
pop
fbld
sbbl
cmp
jl
xchg
cmp
aad
pop
xchg
insb
jo
add
call
sar
inc
xchg
imul
push
pop
xchg
lods
push
js
jl
movsb
cmp
cmpsl
aam
push
mov
lahf
mov
imul
lahf
mov
inc
lea
inc
push
hlt
mov
xchg
and
ret
push
mov
adc
pop
xor
lods
fsubs
pop
push
fcmovne
cmp
mov
sbb
mov
jb
cmp
add
mov
test
popf
push
mov
jmp
add
cltd
sldt
add
lock
jns
pop
sarb
and
jns
mov
imulb
jg
cmp
jle
sbbb
outsb
decl
dec
xor
rorb
pop
rcrb
sub
test
mov
adc
push
int3
fsubl
add
sbb
pop
push
or
or
repz
jmp
mov
daa
cmp
fcoml
or
cmpsb
push
mov
jno
mov
pushf
inc
pop
dec
push
lea
std
inc
adc
sbb
sub
stos
xor
fcoms
sbb
fldcw
ror
fcomip
mov
test
loop
push
negb
fyl2xp1
das
add
aam
lods
add
in
mov
in
shl
iret
pop
cli
cwtl
push
and
xor
repz
cli
cmpsl
add
mov
sub
mov
mov
iret
and
jg
test
or
jo
push
push
dec
dec
sbb
test
idivb
mov
fmuls
mov
or
sub
nop
das
jbe
addb
inc
cmp
lods
xor
pop
dec
dec
add
out
inc
ss
pop
cmp
clc
inc
cli
push
jne
jo
outsl
filds
mov
and
jmp
data16
xor
jbe
inc
iret
inc
fistpl
dec
pushf
sub
repnz
mov
in
mov
sub
sahf
push
scas
lahf
js
fsts
iret
nop
stos
gs
pop
outsb
faddl
dec
imul
jle
push
cmp
into
cwtl
popa
leave
xchg
jecxz
push
cmp
aaa
mov
jp
outsl
repnz
aaa
jmp
pop
push
in
cmc
loope
int3
lahf
lahf
dec
push
pop
in
pop
jno
cld
jle
daa
push
icebp
lea
sbb
pop
ljmp
mov
loope
fdivs
cmpsl
stc
shrb
cld
xchg
dec
and
leave
cmp
out
cmp
jmp
sahf
and
cmpsl
aas
and
sub
xchg
dec
inc
pushf
orl
mov
xor
lret
or
pop
je
popf
dec
bound
jmp
jb
add
xchg
test
xchg
cmp
das
inc
and
movsb
dec
jmp
xlat
cld
xlat
movsb
ret
inc
stc
sub
in
cltd
sub
sbb
addr16
mov
mov
addb
inc
cld
cmp
js
clc
adc
ret
dec
into
push
ret
shlb
mov
in
mov
pop
mov
mov
popf
push
shll
xchg
sbb
mov
insb
xor
repz
pop
cmp
dec
shl
mov
push
push
dec
bound
scas
inc
fmull
inc
adc
mov
add
jne
jp
xchg
js
sub
adc
fs
scas
repnz
js
lcall
add
in
inc
and
mov
xchg
or
pop
mov
add
into
add
cmpsl
lret
adc
stos
roll
xor
jne
test
pop
test
in
sbb
iret
cltd
fdivrl
fmull
fists
gs
ss
shl
divb
jb
outsl
je
push
mov
aad
mov
push
mov
call
pop
adc
push
and
aaa
push
cwtl
adc
push
and
ret
or
stos
mov
jl
aaa
push
mov
lahf
aad
loopne
mov
nop
push
out
mov
orl
int
fistl
lock
loop
shll
mull
das
mov
xor
mulb
push
mov
nop
jbe
push
sbb
cmp
or
push
out
fnstenv
loopne
add
test
jnp
loopne
mov
inc
push
mov
cmc
sub
push
push
mov
sbb
mov
xchg
outsb
dec
inc
push
cmp
fcompl
sbb
ss
xor
shrl
add
jns
xor
xchg
fwait
out
fwait
into
shl
push
jle
sbb
int
pop
push
push
jmp
xor
cmp
jnp
jns
lea
in
out
icebp
stc
pop
or
sub
inc
inc
dec
dec
shlb
push
cli
pop
iret
or
xchg
adc
mov
push
and
test
cs
inc
add
outsl
iret
pusha
lahf
loop
sbb
iret
jno
lods
mov
mov
push
int
divb
mov
test
jns
iret
jge
daa
inc
sbb
inc
imul
and
xor
clc
ficoml
xor
test
mov
dec
push
popa
push
loopne
adc
or
rcll
sbb
pop
adc
mov
sub
stos
xor
ret
jae
cmp
ss
dec
movsb
jmp
das
cmp
filds
outsb
xor
sub
rorl
adc
jo
pop
outsb
dec
mov
dec
push
mov
sub
fsubrs
push
push
push
movsl
mov
hlt
imul
insb
xchg
mov
das
icebp
out
incl
mov
adc
mov
xor
mov
lds
movsl
adc
lahf
aad
or
fsubs
lret
stc
jp
jno
ds
in
sbb
leave
adc
and
shlb
cmp
loopne
testb
pop
shll
call
push
xchg
call
fbstp
repz
push
stos
fmuls
enter
adc
jl
lcall
imul
lret
mov
add
lret
in
cmpsl
ret
jp
jbe
shll
leave
mov
add
cmp
cmp
mov
mov
sub
nop
les
inc
push
adc
jae
addr16
ja
rorl
push
lods
je
jno
cmp
cmc
mov
mov
push
mov
pop
decb
mov
jmp
js
push
mov
ret
push
insb
jl
popa
mov
push
adc
ja
mov
pop
inc
fcompl
subl
inc
dec
add
in
push
rcrb
mov
inc
scas
sub
mov
in
adc
cmp
pusha
lahf
push
lret
test
lea
xchg
ror
mov
inc
xor
fcmovnu
outsb
cltd
pop
dec
pop
jecxz
mov
imul
add
cmc
mov
faddl
cmc
stos
sarb
adc
mov
dec
jmp
shl
sti
scas
fisubrs
in
repz
jecxz
addb
ss
test
mov
sahf
sbb
int
sbb
mov
cmp
push
and
xchg
lea
in
stos
xor
loope
mov
fldenv
enter
or
lcall
insl
mov
lods
incl
and
out
adc
jecxz
nop
std
mov
xor
decb
or
xor
inc
and
into
dec
xchg
xchg
movsb
cli
mov
lahf
lahf
inc
dec
div
test
add
xor
dec
sub
in
mov
mov
jno
mov
push
lcall
pop
sbb
adc
adc
or
sahf
pop
sbb
mov
leave
int3
pushf
dec
cmp
lock
sti
cwtl
add
adc
pop
jns
cmp
jecxz
out
mov
scas
inc
call
push
lcall
inc
jno
cmpsb
sahf
fildl
mov
sbb
stc
push
sar
cld
js
mov
pushf
daa
push
dec
loope
cmp
xor
mov
cmpsl
adc
push
loope
in
mov
xchg
cmp
mov
fisttps
repz
pop
xchg
dec
inc
sub
push
mov
daa
mov
imul
or
es
dec
fadds
inc
push
sub
sub
fdivrl
xchg
pop
mov
mov
sub
in
jl
and
adc
pop
scas
andl
or
test
mov
loopne
loop
mov
xchg
mull
inc
aad
add
add
std
mov
aas
mov
push
pushf
arpl
mov
mov
andl
daa
xor
pop
sub
and
mov
popf
loop
fs
addr16
movsl
push
jne
lea
fistps
stos
push
cmpsb
xor
cmp
or
xchg
pop
mov
rcrl
sbb
pop
outsl
sbb
pop
mov
adc
mov
test
icebp
ror
les
add
into
inc
ljmp
std
sub
sbb
jo,pt
sub
icebp
fs
sbb
mov
add
mov
jo
movsb
ret
cmpsb
cs
cmp
push
lock
sbb
jl
push
push
inc
aas
jnp
es
fistps
cld
pop
jns
pop
xlat
sub
out
psubsw
mov
xlat
xor
mov
ss
ja
sub
inc
fiadds
push
push
xor
dec
push
out
pop
loope
loope
push
mov
dec
jno
mov
inc
fstpt
and
scas
mov
mov
adc
cs
dec
cmp
out
imul
inc
adc
mov
outsb
scas
ror
cmp
and
bnd
mov
mov
bsr
and
adc
adc
hlt
jb
pop
shr
dec
mov
xchg
shlb
cmp
call
inc
cltd
adc
sbb
and
ljmp
lcall
xor
arpl
jns
adc
dec
sbbb
fbstp
loopne
sbb
dec
push
fimuls
stos
loope
out
loope
and
lret
and
push
push
ss
or
int
push
cmp
ljmp
sbb
dec
mov
mov
adc
test
cli
pop
cmp
lods
push
mov
sub
push
push
or
xchg
add
pop
or
and
loope
pop
sti
addr16
mov
call
stos
repnz
div
sahf
outsb
jecxz
sub
repz
sub
cltd
jb
mov
push
out
add
jl
data16
cltd
addr16
or
repz
pop
in
add
mov
fs
imul
aaa
outsb
dec
sarl
js
push
les
push
sub
or
fwait
je,pn
jbe
bound
and
mov
cld
jb
inc
inc
movsl
test
pop
lea
jnp
dec
sar
jno
mov
xorl
sbbb
out
xor
jbe
inc
pushf
mov
cmpl
hlt
bnd
push
shlb
cmp
mov
gs
mov
movsb
sarl
iret
jns
in
std
stc
in
jb
scas
fs
dec
iret
mov
ljmp
int
inc
xchg
push
push
or
sub
dec
push
iret
or
aas
mov
jle
aad
ret
mov
inc
add
dec
inc
sbb
pop
ret
mov
pop
mov
incl
je
fcos
inc
leave
sti
cmpsl
mov
dec
int3
movsl
jge
scas
push
xor
mov
push
dec
sahf
pop
inc
outsb
jno
adc
xchg
fstps
or
jbe
data16
daa
pop
call
hlt
jp
enter
je
rcl
mov
cmpsl
mov
mov
and
mov
inc
cmp
ss
ret
xchg
sbb
sbb
inc
ret
push
mov
sub
mov
dec
nop
lods
sbb
ds
sub
or
inc
rolb
jae
fidivrl
xchg
mov
push
mov
jl
divl
cmp
mov
js
repz
or
and
jmp
sbb
mov
sti
mov
bnd
jmp
movsb
aas
stc
cmp
enter
data16
cmp
dec
pop
cmc
mov
gs
aam
and
fdivrl
popa
add
sarb
mov
fs
pop
data16
add
mov
xor
shl
ds
idivb
xor
mov
test
pushf
ljmp
lds
pushf
push
jo
push
arpl
adc
dec
add
inc
decb
lret
lods
rcrb
and
pusha
adc
daa
je
movsl
out
shll
jmp
mov
outsb
push
rorl
or
adc
mov
roll
flds
mov
in
scas
sub
incb
inc
or
mov
add
xorb
int
mov
mov
xor
popf
adc
js
mov
xchg
mov
mov
inc
xor
mov
inc
leave
shl
mov
jnp
pusha
mov
js
testl
imul
insl
gs
scas
jae
adc
ret
add
mov
push
sub
jns
cmp
call
mov
jb
add
cld
sbb
push
into
icebp
sbb
xor
cli
scas
call
sbb
jo
or
cmp
push
mov
pop
jecxz
push
jns
push
mov
jl
adc
mov
jge
pop
adc
xchg
lea
insl
nop
imul
testl
mov
das
jge
mov
in
jmp
fstpl
or
sub
push
in
xor
mov
lock
in
mov
jbe
out
pop
push
jge
subb
or
das
insl
leave
xor
mov
loopne
shrb
jg
pop
dec
adc
les
leave
mov
imul
enter
rdpmc
push
cs
in
push
and
mov
into
sub
sahf
sub
loope
aad
or
mov
dec
out
out
mov
repz
or
or
mov
jns
xor
inc
dec
sahf
adc
scas
cmp
addr16
fs
cs
into
mov
jmp
add
fbstp
imul
fistl
pop
adc
add
lds
adc
dec
in
call
xchg
push
out
sbb
dec
repz
mov
ss
xor
mov
scas
and
shr
push
xlat
mov
jns
rcrl
stc
and
xor
mov
push
imull
mov
dec
cmpsb
nop
adc
pop
outsb
jecxz
xchg
mov
sbb
repz
int
sbb
push
movsb
cmp
inc
jmp
in
subl
popa
xlat
jae
ss
jbe
int
cmp
sbb
aas
inc
hlt
mov
das
and
jne
scas
inc
mov
decl
into
aam
mov
mov
and
int
cmpsb
into
jo
cmp
or
inc
cmp
and
sub
lcall
adc
dec
aaa
test
fisttps
mov
or
and
es
or
jo
lods
ss
popa
int3
ds
fldt
in
push
mov
aam
push
outsb
daa
or
sbb
xor
xor
push
xchg
adc
push
adc
data16
ret
jp
insl
enter
xor
lods
xor
cld
fnsave
push
push
mov
ja
mov
les
xor
xchg
mov
iret
cmp
lods
aaa
idivl
jge
and
dec
mov
sbb
sbb
aam
call
dec
test
sbb
fdiv
xorb
loop
stos
push
mov
scas
loop
sub
int3
test
mov
mov
test
test
adc
pop
fwait
mov
mov
cmp
sbb
in
pushf
aaa
xlat
in
or
sub
mov
lret
loopne
jge
sub
push
cmp
out
pop
adcl
imul
pop
loop
jge
sbb
mov
loopne
pop
popf
mov
out
aas
adc
or
cld
mov
fistps
mov
sbb
pushf
fsubs
or
ss
pop
sub
clc
mov
jg
sub
gs
stc
jge
xor
in
insb
fnstcw
sbb
into
jne
in
out
or
bound
push
test
daa
insb
ss
ret
jmp
addr16
dec
js
sub
cmp
pop
icebp
lock
xchg
push
filds
and
dec
out
clc
inc
jmp
or
adc
pop
adc
sub
add
inc
push
add
pop
out
lret
mov
ss
cltd
and
xchg
adc
xchg
aad
fcomip
lret
pusha
mov
xor
iret
out
ds
or
add
fcmovnb
mov
sub
xchg
mov
notb
js
lret
into
or
jb
fldt
jnp
xor
movsb
lea
inc
cmc
aas
inc
cli
xchg
ds
lcall
jb
jl
stos
pusha
aas
iret
outsl
stos
data16
cmp
mov
pusha
sti
mov
sub
adc
pop
adc
jno
lods
add
fnsave
mov
lea
fwait
xchg
into
sub
das
enter
inc
inc
sbb
jne
in
xchg
add
cli
dec
or
add
sar
cwtl
rorb
fisubrl
std
addb
sub
fidivl
push
inc
jne
inc
sbb
testb
pop
adc
loop
shrl
imul
jno
sarb
shll
je
xchg
cmpsl
ret
jnp
mov
mov
xor
outsl
jl
push
in
hlt
mov
les
roll
pop
lock
add
sbb
sbb
dec
outsb
mov
push
mov
mov
fnsave
mov
inc
test
pusha
insb
xchg
xchg
pop
es
addr16
add
cmc
or
sub
xor
push
push
out
or
shll
das
je
stos
mov
testb
mov
sub
in
push
insl
das
xor
push
adc
xchg
cmpb
pop
pop
add
cmpsl
mov
filds
leave
sbb
fsts
rcll
stos
or
mov
sbb
iret
add
popf
sbb
add
jns
xchg
jecxz
out
mov
mov
add
or
jge
lds
dec
adc
push
inc
aaa
ror
jb
mov
scas
adc
and
mov
pushf
std
ja
mov
out
push
pop
aad
popa
out
stc
xor
add
adc
loope
xchg
inc
push
inc
inc
cmp
and
pop
cmc
shl
and
hlt
jbe
aaa
xchg
lret
or
pop
das
add
mov
add
iret
xor
mov
mov
js
dec
mov
dec
int3
push
into
movsb
push
imul
das
or
jl
sub
stos
call
dec
mov
cmp
and
jp
xchg
and
je
and
jmp
shlb
sub
rcll
xor
aad
cmp
es
adc
imul
push
lock
and
inc
push
xor
repz
stos
decb
mov
cltd
pop
imul
adc
shl
sarb
sub
ds
sti
pop
pop
inc
sub
cmp
icebp
jmp
and
mov
js
mov
stos
push
fmul
shlb
push
cmp
imul
pusha
jb
mov
sub
enter
jno
mov
push
push
jp
add
jecxz
sub
pop
fsts
pop
mov
fstps
fiaddl
arpl
xchg
push
icebp
mov
bound
pop
arpl
xchg
leave
add
leave
dec
jge
cltd
xor
mov
in
rcll
pop
stos
leave
out
and
xchg
or
and
jl
sub
lock
adc
in
xchg
fisttps
mov
mov
ret
cmp
adc
push
mov
mov
xchg
testb
pop
push
in
and
out
add
xor
push
or
push
push
gs
push
icebp
adc
shlb
sub
addr16
mov
fsubp
inc
jb
ss
xchg
das
movsb
push
sbb
test
adc
dec
aam
rorb
sahf
push
xabort
mov
lods
dec
aam
mov
push
jle
cli
mov
adc
pop
mov
js
dec
jmp
in
add
fisttps
sbb
jecxz
dec
push
mov
mov
test
push
push
imull
mov
jns
jae
dec
xor
or
pop
add
mov
xchg
xchg
aam
sbb
or
xchg
xchg
ljmp
fmulp
xchg
popf
jae
out
xchg
imul
aaa
or
cltd
stos
int
xchg
push
iret
lret
out
mov
gs
xor
cld
jo
dec
xor
leave
negb
jmp
std
cmc
mov
or
fadds
fwait
and
movsl
sti
push
ss
fists
xor
inc
into
sub
fdivrs
xchg
es
lahf
sbb
add
das
push
push
dec
push
xchg
into
xchg
dec
sub
sub
aaa
into
sbb
sub
xchg
lods
mov
pop
cmp
je
fsubs
and
loope
ss
push
pop
enter
pop
popa
and
daa
lods
lcall
xor
iret
popf
mov
addl
and
add
outsl
ljmp
and
push
push
stc
inc
outsl
dec
sbb
cmpsl
pop
out
subb
pop
addr16
jno
xchg
mov
jl
adc
aam
cmp
mov
lods
mov
jmp
js
decl
cs
mov
loope
add
mov
or
mov
push
lret
mov
sbb
in
loope
cmp
jecxz
insb
pop
adc
jo
mov
mov
mov
shrl
sahf
in
jb
faddl
aaa
lds
and
aad
insb
cmp
mov
or
test
data16
jp
popf
pushw
lods
mov
sti
clc
test
dec
sub
cmpsb
xchg
jo
jb
cltd
mov
movsl
sti
scas
lret
and
cs
or
mov
lods
in
jb
pop
sti
sbb
icebp
lahf
xchg
mov
adc
hlt
mov
pushf
pop
and
push
decb
imul
divl
je
add
dec
repz
adc
rorb
mov
dec
cmpsl
mov
pop
and
aad
fwait
xlat
push
sbb
lods
in
sarb
fidivs
orb
mov
shlb
enter
gs
push
mov
jne
mov
imulb
and
sbb
sahf
xor
addb
or
outsb
mov
mov
cmp
cs
shl
mov
inc
in
shlb
sarb
jo
rclb
jl
mov
mov
pop
and
outsl
lea
shll
or
loopne
je
insb
push
mov
adc
xor
jg
jg
xorl
adcl
lock
and
push
and
xchg
out
outsb
mov
movsb
mov
ret
jno
mov
jg
mov
or
shl
mov
sbb
in
xchg
aaa
mov
cmp
xchg
inc
das
movb
mov
mov
dec
into
and
adc
mov
jg
outsl
test
adc
sbb
pusha
jg
call
inc
sub
les
addr16
mov
xchg
add
loope
add
cltd
test
mov
rorl
pop
out
ret
in
mov
push
pop
pop
mov
out
pop
sub
mov
rcr
mov
mov
xchg
cmp
jmp
xor
ret
cmp
adc
fwait
or
dec
push
dec
and
mov
mov
mov
je
inc
nop
push
mov
and
rcrl
pop
jb
aam
or
out
ljmp
mov
push
int
mov
repz
mov
lea
mov
mov
and
sbb
rorb
in
mov
dec
and
leave
mov
test
rcrb
adc
cmp
jbe
adc
and
fdivr
sbb
and
insb
mov
stos
xchg
add
push
ja
add
xor
jmp
xchg
aaa
nop
hlt
incl
cmpsl
mov
pmaxub
xor
cld
mov
es
cmp
loop
sub
cmp
outsl
repnz
or
dec
std
notl
jae
out
adc
testl
repnz
aam
fisubrl
push
xchg
ljmp
jge
push
fs
xor
in
movsb
adc
adc
ja
inc
gs
dec
adc
jns
out
cmp
imull
add
leave
jecxz
mov
inc
pop
cli
addr16
imul
fsubs
and
adc
push
mov
fisubrl
daa
loopne
lcall
loop
pop
ret
lahf
ret
push
cmpsb
cmpsl
in
jmp
fadds
or
mov
push
mov
dec
xlat
pop
mov
loope
loop
imul
or
mov
adc
lds
sbb
jg
mov
mov
pop
mov
dec
shrb
rcrb
jle
adc
cmc
mov
js
mov
pop
sbb
mov
add
dec
scas
sub
push
push
inc
dec
std
test
mov
mov
adc
fbld
dec
jp
lods
movsl
subb
repnz
xchg
test
pop
add
add
clc
jg
pusha
and
adc
jg
xchg
outsb
daa
das
test
flds
test
inc
popa
jo
lods
mov
cld
push
mov
mov
pop
xchg
pop
mov
jmp
add
jno
mov
sbb
and
movsb
movmskps
cmp
push
imul
les
xor
cmp
int
adc
stc
insl
push
fdivrl
sbb
mov
out
movsl
cmp
sub
sbb
sub
cltd
lcall
ds
ret
repnz
jno
aad
push
ret
add
mov
adc
cmp
lahf
hlt
loop
loop
in
cwtl
int3
and
js
or
into
push
jl
popf
adc
mov
or
ja
sahf
out
ljmp
jbe
add
cltd
ss
mov
push
mov
andl
jp
push
xchg
mov
push
dec
pop
mov
in
test
dec
mov
jbe
or
sub
xchg
fld
or
sbb
sub
sbb
fldl
ficoms
iret
mov
enter
push
add
lret
push
xor
arpl
jge
jl
pop
adc
aaa
inc
cwtl
stos
xor
movsl
fldcw
sbb
mov
cltd
mov
pop
sbb
push
sbb
cmpb
les
dec
repz
subl
clc
sbb
pop
fcomp
test
cmp
pop
mov
out
and
out
cmp
inc
push
cmc
adc
mov
fistl
pop
fidivrl
dec
iret
stos
sub
adc
addl
mov
add
int
jb
add
dec
es
xchg
cli
orl
lahf
aaa
mov
xchg
icebp
sbb
stc
inc
or
push
lret
dec
int
lret
dec
cmpsb
or
jge
pushf
xchg
frstor
repnz
sbb
lcall
mov
inc
cs
in
add
cmp
or
lahf
fidivrl
fwait
cmp
dec
xchg
or
adc
mov
outsb
fisttpl
mov
inc
sbb
addr16
call
repz
or
adc
inc
sbb
imul
jnp
loop
stos
adc
cli
lock
outsl
shlb
repz
sbb
fdivs
decl
in
or
cmpsl
leave
aad
into
and
xchg
hlt
cmpsl
data16
loope
jp
out
pop
pushf
or
cmc
push
scas
push
stc
sub
lods
loope
ret
jbe
xchg
outsb
or
sub
adc
or
adc
outsl
mov
mov
mov
inc
rcrl
loope
sbb
and
pop
jne
mov
sub
mov
fs
rcl
jl
mov
xor
out
pushf
xlat
test
bts
std
jle
push
xchg
xchg
mov
xor
pop
rcrl
in
or
push
fs
or
adc
dec
or
sub
bound
push
sahf
mov
popa
int3
pop
bound
inc
push
loopne
repnz
mov
add
fcompl
in
stos
dec
mov
ret
or
push
cmpl
dec
sahf
sub
xchg
push
mov
sub
inc
cli
stos
jge
cmp
std
and
sbb
cmpsl
inc
xchg
mov
idiv
das
adc
repnz
mov
dec
mov
jo
add
frstor
adc
sbb
aas
pop
mov
movsl
idivb
xor
xchg
dec
pop
rcrl
icebp
fstpl
mov
shll
pop
nop
cmp
push
jg
scas
xchg
les
hlt
adc
or
jmp
jb
out
in
insb
rcll
shrl
js
add
lods
shr
mull
loopne
sysexit
mov
in
mov
das
pop
mov
cld
adc
cmp
xlat
mov
int
test
xchg
rclb
popa
jne
fcmove
mov
cmpsl
mov
dec
cmpsl
scas
mov
daa
mov
push
cmpsl
leave
lret
lcall
mov
call
iret
mov
dec
arpl
xchg
je
xchg
jbe
repnz
cmpsl
nop
inc
sbb
mov
adc
jecxz
loope
shl
ret
mov
and
xor
fwait
and
adc
inc
mov
push
lock
xchg
stos
jns
sti
inc
pop
sub
dec
pushf
jp
into
loop
cltd
mov
sub
int3
fisttpl
shll
fbld
lods
jo
add
pop
rorb
xchg
inc
test
cmp
lock
mov
sahf
pop
pop
or
cmc
push
xchg
scas
sarb
nop
out
sub
dec
push
les
ja
dec
repnz
mov
in
mov
and
jno
cli
stos
dec
test
cmp
sbb
pop
push
jne
pop
xor
shrb
sbb
add
fiaddl
outsb
jl
mov
imul
xor
and
lgs
dec
inc
out
lock
insl
cmp
stos
mov
add
xlat
mov
pop
mov
jecxz
or
rcl
aaa
inc
into
jg
movsb
lods
push
movsl
adc
jmp
lcall
cmp
adc
clc
outsl
or
loop
xlat
mov
jp
xchg
push
je
pop
mov
into
out
mov
lret
xor
mov
add
cmp
mov
out
inc
ret
inc
xchg
fs
add
mov
mov
inc
rcrl
dec
shlb
lahf
pusha
add
arpl
test
mov
jbe
in
in
xchg
and
int
and
testb
aad
mov
dec
xor
int
mov
sub
movzwl
inc
dec
in
shrl
insl
es
setae
cmc
and
cwtl
sbb
cmpl
lods
xor
andl
pop
inc
imul
push
xchg
fnstsw
es
outsb
stos
jne
shl
pop
xor
jecxz
adc
in
jp
bound
clc
insl
cmp
dec
std
insb
subl
mov
leave
adc
or
fs
cltd
pop
movsl
jns
mov
mov
push
jmp
mov
jns
push
cltd
mov
inc
pop
in
pop
mov
inc
mov
cwtl
xchg
pop
mov
jne
mov
in
mov
jo
roll
test
int
jp
dec
frstor
cmp
dec
push
cmp
std
ljmp
popa
insb
addb
cmp
cmpsl
and
aad
fists
pop
aam
je
dec
sub
jns
lock
mov
std
jne
adc
repz
movsl
inc
idivb
mov
cli
mov
cld
inc
iret
push
mov
outsl
inc
cmc
idivl
pop
arpl
cmp
mov
cmpsl
fildll
push
in
sti
push
js
cmpb
in
inc
dec
push
cmp
mov
test
jno
idiv
pop
dec
xor
je
cwtl
or
lods
fstpl
lock
jo
jnp
shll
adc
jg
inc
mov
push
cltd
outsb
lods
adc
mov
mov
mov
add
popf
jb
hlt
and
xchg
subl
popf
out
dec
add
lods
mov
movsl
fs
sbbl
push
xchg
fstpt
testl
movsl
out
imulb
in
push
jns
push
test
mov
push
xorl
icebp
jns
and
nop
jbe
mov
testl
test
aaa
jne
mov
and
mov
dec
std
cmp
lret
mov
movsb
push
data16
or
xchg
jne
sti
popa
scas
mov
push
nop
decb
popf
xchg
fs
push
mov
xchg
cli
lret
push
out
or
or
push
pop
mov
and
mov
push
and
bnd
inc
mov
js
push
in
or
arpl
xor
shlb
mov
lahf
pop
test
pop
jae
mov
psubusb
dec
lret
dec
mov
push
shl
cmpsl
imul
push
xchg
test
jns
and
jg
cmp
loope
adc
mov
pop
ljmp
jne
ljmp
pushf
outsb
sbb
or
mov
pop
pushf
test
scas
pushf
loopne
inc
repz
sub
movsl
repnz
adc
aaa
fnstsw
sarl
fadd
xor
je
sub
lret
lret
cmpb
mov
and
clc
dec
adc
or
xor
or
mov
gs
insl
aas
xchg
add
push
jno
aaa
shl
idiv
cs
sti
mov
test
insl
jp
rolb
iret
push
mov
sbb
or
pop
leave
pop
inc
dec
mov
subl
leave
fisttpl
jbe
jle
pusha
movsl
idivl
lds
mov
icebp
jns
js
fidivrs
mov
fisubs
mov
xlat
mov
call
out
loopne
mov
cmpsl
sahf
add
mov
mov
lahf
lahf
xor
jns
inc
sub
mov
out
push
lahf
and
mov
mov
pop
test
cmc
gs
lret
mov
cmp
and
adc
lds
in
popa
mov
lahf
mov
shrl
inc
sbb
jg
pop
cwtl
mov
sbb
sbb
xor
dec
mov
popa
add
ljmp
in
xchg
mov
add
dec
fs
mov
lea
push
je
pop
je
lcall
fucomi
adcl
and
imul
mov
loop
mov
lods
cmp
cltd
pushf
bound
xchg
in
sbb
aad
push
xchg
push
in
xor
test
loope
push
jmp
andb
cltd
inc
inc
pop
pushf
ss
sub
cmp
pop
lahf
xor
mov
ss
push
lcall
movsb
xchg
in
xor
pop
jo
cltd
test
mov
mov
mov
and
ret
fldt
pop
mov
adc
enter
test
pop
ret
inc
adc
adc
pusha
popa
mov
sbb
sub
pop
lahf
lods
xchg
fcmovu
adc
jle
call
addb
mov
cmpsb
lret
adc
jnp
ljmp
dec
bound
jmp
enter
inc
ficomps
aad
and
test
les
out
out
mov
sbb
aad
mov
or
adc
inc
shlb
xchg
mov
lret
sahf
mov
cmp
xor
inc
or
movsl
lods
aam
in
or
mov
cmpsb
xor
pop
mov
mov
jno
arpl
ret
xor
mov
dec
inc
xlat
adc
fnstenv
push
fimuls
push
xor
hlt
sbb
mov
jmp
fs
cmc
add
mov
dec
dec
mov
test
fildl
pop
push
lahf
push
and
test
pop
pop
pop
mov
in
jne,pt
cmpsb
add
js
xchg
loop
cmp
xchg
mov
je
jmp
sti
mov
xchg
or
movsb
push
xchg
pop
js
int
fstpl
fldl
fwait
xor
outsb
fsubrp
jbe
mov
roll
into
into
leave
shl
in
pop
pop
dec
pushf
mov
add
fmul
jmp
imul
leave
shrb
jecxz
stc
es
sarb
and
sub
cmp
cmpsb
ja
int3
scas
xlat
cmp
xorl
fbld
cs
inc
rcr
loop
testb
leave
jecxz
sub
mov
imul
and
idiv
insl
les
aas
popa
push
testl
movsl
popa
mov
xlat
jb
insb
mov
sbb
nop
popf
aas
in
cmp
mov
movsb
leave
pop
pop
mov
adc
gs
js
adc
rcrl
mov
adc
push
or
hlt
cwtl
pop
pop
mov
xlat
mov
rclb
xchg
dec
push
jne
xor
jecxz
imul
lcall
movl
pusha
cmpsl
fisubs
fisubrl
dec
test
icebp
cltd
mov
out
leave
pop
inc
lock
in
xor
push
pusha
jp
mov
push
aad
lcall
frstor
es
cmpxchg
pop
xchg
cltd
cmc
in
adc
in
std
push
subb
jmp
or
inc
and
mov
popf
scas
mov
cs
mov
popl
outsb
inc
sub
mov
add
jp
jg
cmp
cmc
shlb
and
loope
dec
mov
lret
jnp,pn
jp
inc
add
ja
scas
push
call
add
or
pop
jb
sub
pop
add
mov
xor
mov
pop
mov
mov
stos
cmp
inc
xchg
fdiv
insb
pop
inc
imul
popf
xchg
jge
fs
fbld
sub
xchg
test
cmp
outsl
xor
mov
stc
in
outsl
int
mov
out
pop
jge
pop
roll
jns
jbe
movsb
push
mov
mov
push
movsb
xchg
dec
lcall
cmp
xchg
xor
shlb
jbe
mov
adc
movb
pusha
dec
fdivr
cmp
test
addr16
mov
cmp
xor
repz
pop
or
lret
mov
pop
inc
lock
adc
int3
stos
lods
push
notb
push
rcr
cmp
sarl
sub
imul
rclb
rorb
cmp
inc
dec
xchg
bound
daa
lods
dec
adc
push
dec
xor
dec
xor
sub
xor
bound
dec
jg
stc
fdivrp
call
jge
ss
hlt
ds
lea
aad
imul
adc
dec
leave
add
add
mov
dec
sub
fnsave
xor
pop
sti
scas
xchg
stc
insb
jg
add
cs
std
loopne
jecxz
lret
inc
mov
cmp
in
dec
mov
sub
sahf
pushf
loop
data16
divb
or
loopne
jnp
es
leave
fidivrs
sahf
push
dec
or
jp
ret
adc
xchg
jmp
or
rorb
and
adc
mov
fists
pusha
xchg
cwtl
add
lods
sbb
popf
bound
stos
cmp
mov
pop
mov
into
inc
push
mov
lods
rol
hlt
loop
stos
cmp
movsl
pop
mov
mov
pusha
and
enter
xchg
xchg
add
mov
mov
sbb
add
loop
pop
imul
push
jbe
inc
or
jle
fisttpl
push
xor
faddl
add
or
dec
xor
arpl
je
mov
xchg
pop
shlb
sub
scas
int3
lret
les
ss
inc
or
add
xchg
dec
xor
mov
jns
pop
push
dec
dec
inc
xchg
inc
movsl
sub
dec
popf
jnp
sahf
and
mov
ret
ja
stos
mov
shl
cmp
imulb
repnz
cmpsb
mov
dec
roll
push
or
sti
jg
test
push
scas
add
mov
fldt
je
push
popf
push
stc
and
sbb
dec
leave
bound
sbb
ret
mov
push
jmp
dec
mov
sarb
outsl
sbb
out
imul
lock
fsubp
inc
es
adc
test
inc
cmpsb
mov
mov
or
or
in
mov
int
cmpsl
dec
xor
jo
leave
xor
lahf
dec
stos
jp
shll
and
repz
jge
dec
mov
js
cli
repz
lea
push
outsl
jne
ficoml
test
inc
sub
loop
inc
jmp
pop
ret
xchg
das
jnp
mov
cld
mov
lret
imul
das
pusha
pop
push
jbe
mov
push
lods
mov
stc
mov
jl
into
stc
stos
sbb
push
xchg
inc
scas
dec
into
push
xchg
mov
negb
cwtl
cmp
pop
nop
dec
addr16
sti
rorb
lcall
pop
add
xor
lret
roll
dec
setle
xchg
or
pop
out
or
push
out
xchg
popf
insl
inc
popa
cmc
sub
jg
sbb
je
xor
decb
sbb
das
movsb
fs
jg
mov
enter
xchg
imul
ret
jne
or
into
mov
xchg
jp
nop
out
mov
stos
test
ret
rcl
mov
js
inc
movsl
xor
ret
fstpt
sbb
jne
dec
les
adc
pop
fbld
cs
sbb
lahf
std
cmp
jp
xchg
icebp
lods
mov
stc
jge
sbb
popa
mov
xchg
mov
xchg
pop
popa
xlat
xchg
sub
jae
test
pop
jmp
rcrl
dec
ljmp
testb
fnstenv
fldenv
bound
pop
fisubrl
insb
adc
inc
out
xchg
cmc
pop
xchg
sub
sarb
rorb
call
cli
jl
push
rcrl
bnd
xor
ss
out
in
inc
inc
xor
scas
insb
jns
sbb
and
pop
and
ljmp
into
bound
cmp
jno
jne
sbb
addl
cli
out
sbb
push
xchg
mov
loopne
mov
sbb
cmp
jg
pop
scas
inc
movsb
add
fdivrp
and
sub
jg
repnz
aaa
arpl
ret
cmp
cmp
add
addr16
and
loopne
stos
sti
sub
xor
js
scas
jecxz
jbe
or
arpl
pop
mov
dec
jecxz
jae
xchg
cmp
mov
push
es
cmp
loopnew
and
or
subb
or
xchg
sub
and
mov
ret
push
repz
aas
fsubs
jbe
xlat
add
outsl
inc
xlat
or
push
mov
insb
inc
test
mov
dec
gs
sbb
lds
sbb
fcmovb
push
stc
mov
mov
cmp
xor
ja
jbe
arpl
mov
cs
mov
shll
push
jne
jmp
push
jbe
xlat
mov
jne
add
stos
in
lea
adc
cli
outsb
jmp
add
pop
xor
sub
and
adc
lock
inc
pop
adc
mov
xor
cmp
add
adc
mov
cmp
sahf
adc
outsb
pop
and
nop
mov
nop
in
test
cmp
sbb
faddp
inc
fwait
in
imul
cmpsl
stos
fnsave
push
xchg
dec
sub
jmp
pop
cwtl
push
xchg
sub
xor
dec
cmp
mov
cld
sbb
repnz
popa
push
mov
scas
enter
pop
lret
fwait
dec
ss
in
aaa
xlat
cmp
scas
mov
popf
pop
xchg
out
lods
stc
push
shll
int
pop
jge
adc
ret
xchg
pop
sbb
cmc
mov
xor
inc
push
in
ss
adc
mov
loop
mov
test
sub
cmp
stos
arpl
imull
sub
jge
add
pop
aad
fldenv
pop
inc
and
push
stos
loopne
nop
mov
lcall
jl
pop
ja
lods
and
sub
addr16
fnstenv
mov
xchg
mov
pop
das
bnd
and
lret
mov
int
cmp
sahf
mov
mov
push
mov
xchg
jae
xchg
ficompl
pop
sub
fldenvs
je
sub
jmp
xor
les
shrb
jae
pop
fmul
mov
out
pop
pop
jge
dec
pop
push
mov
cmp
xor
es
mov
int
call
in
sub
inc
addl
fldcw
jge
mov
xor
fbld
mov
fdivl
lods
sub
lea
int3
popa
sub
ret
in
dec
mov
sub
mov
push
mov
xchg
mov
add
dec
scas
mov
sahf
cli
test
imulb
xchg
xor
orl
ljmp
idiv
fisttps
adc
add
and
jo
push
int3
je
addr16
mulb
sub
inc
in
aad
jle
fcomi
sub
jnp
pop
and
xchg
es
inc
popa
push
pushf
adc
pusha
jmp
jp
test
push
add
mov
pop
clc
insl
and
cmp
in
mov
inc
mov
pop
outsl
mov
push
repz
push
mov
add
mov
mov
mov
shrl
jno
sbb
pop
sub
clc
mov
cmp
fildl
push
sub
jo
jge
hlt
fs
mov
dec
aam
xor
or
cs
push
push
cmp
nop
inc
lods
bound
adc
gs
ds
jge
push
mov
dec
out
imul
add
dec
stos
sbbb
iret
pop
jl
out
adc
mov
jmp
fs
je
in
mov
dec
popf
push
into
cwtl
sub
push
xor
sbb
adc
and
iret
lods
fmull
inc
mov
pop
icebp
push
repnz
push
jle
cmpsl
insb
loope
cmpsb
cmp
push
inc
jle
pop
dec
cld
pop
cmp
movsb
or
outsl
jb
shrl
dec
jge
push
leave
pop
movsl
add
sub
out
or
and
les
cmc
inc
dec
inc
sahf
adc
cwtl
loop
les
push
or
es
mov
mov
or
das
lea
repz
pop
jp
divb
mov
or
in
pushf
push
pop
jno
jecxz
bound
scas
insb
std
dec
push
adc
out
decl
out
mov
pop
jns,pn
out
aas
cmp
push
outsl
push
dec
add
nop
push
mov
fwait
out
sbb
sub
xchg
inc
repz
inc
jae
and
add
shlb
mov
and
mov
jb
sub
mov
jnp
fistpl
and
popa
stc
mov
add
inc
mov
pusha
cmp
cwtl
shlb
int3
xlat
xlat
mov
lret
jb
adc
das
xchg
adc
inc
jl
push
adc
xor
test
aas
in
dec
adc
scas
scas
mov
xchg
mov
adc
testb
push
jns
outsl
cli
jb
lds
in
sub
fdivl
popa
sarb
and
sub
or
xor
les
xor
inc
xor
out
pop
in
rolb
int3
and
xor
shlb
sub
push
push
in
or
movsl
cmpl
enter
add
mov
fwait
and
adc
aad
loope
inc
cmp
dec
lret
pop
shl
or
addr16
push
in
dec
imul
fistpl
mov
shlb
in
clc
mov
mov
fwait
inc
je
scas
int
xor
sbb
and
stos
xchg
jg
mov
scas
xor
jo
push
or
and
ret
fstpl
push
pop
fisttps
rorb
mov
imull
pop
jle
and
subl
jle
popa
xchg
push
mov
shrl
xchg
jp
jmp
das
jnp
cltd
or
cmpsl
inc
popa
lods
xchg
ss
ljmp
arpl
mov
hlt
adc
outsl
js
es
cmp
in
shl
push
sub
fiadds
cltd
inc
stc
inc
lods
incb
pop
gs
outsb
mov
or
push
pop
into
sbb
inc
push
lret
pusha
jns
cmp
jl
les
mov
ret
int
out
xlat
insb
jecxz
add
dec
lods
pop
out
sub
jo
testl
and
fucom
xchg
sub
and
aas
out
icebp
rclb
bound
sbb
jmp
insl
mov
jb
inc
popa
or
dec
fcmovu
cmc
xchg
cmp
cmp
outsb
clc
in
dec
and
jmp
loopne
cmp
lds
inc
les
dec
inc
sar
xchg
negl
test
hlt
push
cmc
xor
mov
repnz
mov
jge
icebp
sub
dec
cltd
cli
movb
popl
mov
inc
or
adc
leave
push
pushf
push
add
xor
xchg
mov
push
inc
insl
xor
cmp
cld
jle
sub
daa
mov
sbb
inc
and
push
bound
aad
fcomip
sbb
test
mov
xor
mov
adc
mov
xor
cmpl
mov
movsl
add
cmp
stc
pop
jno
xor
cmp
shl
jmp
mov
mov
or
jno
lret
aas
inc
adc
pop
sahf
and
divb
shlb
aaa
add
test
cmpsb
repz
js
or
loopne
mov
in
sbb
dec
aaa
mov
xchg
repz
outsb
in
fstpt
dec
sub
add
cmpb
ret
int
sub
adc
sub
incb
gs
mov
mov
cmp
inc
popf
loopne
int3
bound
mov
pop
sti
stc
shll
lods
sub
pop
mov
push
mov
sub
fwait
out
sub
mov
fidivrs
out
hlt
das
pop
sti
clc
mov
xchg
add
test
push
das
call
je
mov
nop
mov
cwtl
adc
push
hlt
pop
or
xchg
pop
outsl
scas
std
xor
iret
arpl
lahf
mov
outsb
enter
and
test
jbe
lea
cmc
mov
push
adc
sbb
ret
mov
inc
jecxz
xchg
js
lods
ficoms
add
or
es
rcr
cmp
xchg
adc
aaa
cwtl
or
fnsave
icebp
loop
lss
jb
dec
insl
sub
jnp
hlt
dec
cmp
roll
xor
or
shr
mov
cmp
imul
mov
les
mov
data16
outsb
or
mov
jno
ds
shl
sub
mov
dec
pushf
add
fmuls
add
nop
test
in
adc
dec
fwait
lcall
jo
lock
jbe
rorl
mov
mov
inc
mov
lea
leave
xor
cmp
pop
push
xchg
lcall
into
cwtl
iret
sub
inc
movsl
adc
inc
xor
mov
jno
jno
mov
mov
pushf
shl
sub
imul
mov
cltd
test
sub
sub
or
out
or
jmp
pop
inc
mov
jbe
ss
add
repnz
test
loopne
leave
push
lahf
adc
mov
sub
jnp
inc
cmp
or
std
jmp
andb
push
repz
sub
out
aas
fisubs
lods
es
and
and
pop
loop
cmp
cmp
xor
hlt
movntq
sbb
pop
fcmovnu
stos
enter
or
sahf
int
ret
out
out
and
stc
fwait
pushf
ror
xor
int3
sbbb
push
fwait
push
out
push
jecxz
mov
jmp
cmp
pop
dec
inc
mov
push
push
dec
xchg
cmp
clc
inc
cld
gs
ficoms
lret
leave
inc
fcmovb
fsubrl
outsb
mov
into
or
sti
divb
leave
es
fsub
loop
scas
imul
sbb
idivl
das
ljmp
push
pop
popf
dec
sub
push
add
mov
mov
cmp
or
cmp
jle
mov
leave
add
fdivp
pop
sti
out
jno
jb
movl
scas
mov
ret
mov
ljmp
out
xor
add
push
ret
sahf
xlat
or
psrad
jl
out
fdiv
pop
sahf
daa
xchg
movsl
dec
mov
clc
enter
pop
popf
adc
aaa
mov
outsb
outsb
push
dec
xchg
mov
mov
xor
ret
loop
push
in
aaa
stc
mov
mov
loopne
aas
mov
shll
mov
ds
aad
sbb
xor
imul
fcomps
inc
xchg
push
dec
xchg
cmp
cmp
push
outsl
sub
adc
icebp
jb
je
xor
push
push
sub
insb
lock
in
cmp
and
or
or
cmp
xchg
sub
mov
fstpl
cmpsl
add
xor
lcall
inc
hlt
mov
sub
movsb
insl
and
stos
push
inc
mov
cmp
add
pop
leave
jle
sbb
rolb
pop
sahf
push
mov
add
test
xor
loope
inc
jnp
es
jo
mov
push
hlt
push
mov
lods
stos
test
xor
adc
dec
and
stc
int3
pop
add
pop
jp
pop
inc
add
push
cs
mov
mov
or
xchg
mov
inc
insb
call
mov
test
adc
insb
xchg
adc
mov
sub
fmull
add
jle
test
movsl
jae
push
cmp
bound
mov
or
movl
scas
push
mov
xchg
fwait
xchg
xor
dec
sarl
stos
out
jbe
cs
jmp
ret
int
jecxz
mov
dec
xor
pop
movl
dec
cmp
adc
shll
aas
outsb
mov
sub
mov
add
push
sbb
pushf
sbb
mov
fildll
fucomip
aas
andl
cmp
insl
xor
sub
push
mov
test
push
das
cmp
cmp
lds
fdivrl
xor
mov
loopne
inc
add
and
jae
mov
cli
xor
notl
inc
mov
sbb
mov
mov
dec
clc
out
cmpsl
arpl
add
mov
mov
inc
sub
mov
push
mov
sbb
pop
cmp
scas
pop
pop
out
daa
pop
pop
mov
xor
lock
xchg
shll
push
bound
cs
sub
call
push
icebp
add
out
insl
and
mov
ljmp
xor
js,pn
mov
push
iret
mov
dec
adc
or
les
pop
fstps
mov
cltd
lea
cmp
ljmp
mov
repz
inc
or
lock
cltd
or
cmpb
outsb
imul
popa
out
inc
pop
sbb
test
ss
shll
or
ja
aad
aas
inc
mov
pop
sbb
test
popf
sbb
push
mov
pushf
dec
mov
ds
or
jo
xchg
fsub
jle
lea
mov
lahf
mov
pop
pop
fadds
ss
and
jns
or
jge
test
shrb
movsb
test
stc
stc
jmp
scas
insb
dec
and
icebp
adc
orb
adc
jecxz
inc
pop
mov
ljmp
lods
and
in
jmp
mov
mov
pop
fdivs
jne
icebp
daa
inc
push
adc
or
sbb
mov
jle
inc
push
inc
push
inc
aas
lods
dec
lret
loop
clc
pop
or
xchg
les
jecxz
jae
dec
loope
sub
aam
cmp
lret
pop
dec
cmovp
mov
push
sbb
cmp
std
leave
or
and
in
fcoml
xchg
xchg
ja
cltd
test
xchg
and
out
sbb
aas
mov
outsb
aam
adc
addr16
int3
ret
mov
mov
push
sti
push
mov
dec
int
nop
nop
std
jno
jnp
mov
push
cli
mov
sub
hlt
in
clc
lea
cltd
mov
add
shr
stos
sbb
popa
int
or
add
addr16
test
cmp
dec
sub
sbb
mov
or
sub
pop
test
fwait
aas
cmp
cli
test
push
inc
jo
pushf
out
cltd
das
inc
jbe
cs
lea
xorl
mov
inc
mov
scas
out
orps
cmp
dec
pop
xor
fildl
outsl
mov
shr
repz
xchg
push
fwait
pop
aas
inc
movsb
push
jns
std
sbb
sbb
adc
cmp
jle,pt
xchg
mov
cwtl
in
int
sbb
cmp
sarl
adc
mov
push
cltd
fildll
iret
sbb
push
ret
and
fisubl
scas
jge
sti
sar
arpl
aad
push
ljmp
add
mov
arpl
sub
push
fildl
inc
mov
inc
std
inc
xor
push
push
lock
mov
mov
iret
push
jbe
xchg
loopne
xchg
int3
push
pushf
and
into
or
sbb
loop
mov
negl
jb
pushf
pop
pop
sbb
jle
sbb
fisttpll
jno
sub
add
jno
ret
sahf
mov
ret
nop
dec
ss
xchg
pop
lods
mov
fcmovb
out
fisubl
push
add
cmp
push
std
test
add
je
movsl
pop
outsl
dec
xor
add
inc
dec
xor
mov
sbb
out
bts
ds
dec
popf
std
inc
add
or
popa
movsb
mov
cmc
sub
dec
pusha
and
shl
or
out
push
mov
mov
and
jmp
jle
subb
nop
imul
sbb
call
push
pop
out
add
or
test
rol
mov
pop
add
cwtl
rorl
cmp
outsb
mov
xchg
ror
mov
cmp
or
xchg
fistl
jp
rolb
or
fcomps
jae
mov
jp
or
fwait
sub
popa
mov
std
and
inc
mov
fsubrs
inc
gs
sbb
ljmp
cltd
pop
add
pop
mov
out
out
and
jmp
dec
jle
popf
movsl
mov
push
enter
pusha
cmp
xor
xchg
movsb
mov
cmc
xor
jmp
lret
leave
mov
xor
out
sbb
gs
jns
dec
std
pop
movsl
leave
adc
mov
cmp
dec
out
ljmp
inc
loope
mov
sub
shrl
push
sbb
jae
fldcw
cmp
inc
sbb
rol
push
push
jns
inc
and
jge
jb
or
jge
in
fldenv
sbb
and
pop
xchg
and
push
incb
mov
mov
xchg
pop
cwtl
lret
inc
movsl
xchg
inc
lcall
mov
ja
sub
dec
mov
aaa
sahf
in
push
jge
and
xchg
mov
push
out
rclb
imul
shr
adc
cmc
pop
cld
sub
inc
aas
dec
loope
xor
leave
cmp
xchg
and
lds
inc
or
enter
jne
xchg
sbb
fadd
das
mov
bound
sub
push
push
cmpsb
mov
adc
rcr
dec
cmp
push
ds
xchg
rclb
ret
notb
pusha
sub
cmp
or
mov
ljmp
aas
pop
movsl
fs
mov
js
ja
outsl
dec
push
mov
inc
outsl
test
mov
jae
push
fdivs
jmp
or
lret
mov
out
roll
sbb
out
adcb
sub
inc
jmp
mov
jb
mov
xor
mov
sub
movsb
out
and
arpl
lcall
stos
and
cmp
dec
stos
xchg
icebp
push
dec
ds
push
rcll
and
aad
cmp
cmp
jecxz
mov
adc
inc
and
test
outsb
jp
mov
fwait
push
mov
push
lds
orl
pushf
inc
scas
fstpl
divb
xlat
lret
ret
sbb
dec
pop
and
xor
outsb
lcall
pop
int
dec
sbb
in
cmp
jmp
mov
faddl
push
out
jle
jp
jecxz
xchg
mov
mov
or
sbb
outsb
arpl
add
mov
and
push
xlat
aam
add
jne
sarb
idiv
sti
aam
xor
jge
in
mov
add
fcmovbe
and
inc
sub
inc
cld
ret
mov
daa
jecxz
cmc
jle
sbb
das
mov
dec
xchg
outsb
sub
aad
and
mov
push
fsubrl
ficomps
xor
xchg
cmpb
fldl
je,pt
mov
and
cmp
lret
inc
mov
inc
xchg
mov
cs
ja
cld
adc
sub
sti
adc
testw
jns
cmp
out
and
push
jne
pushf
or
cltd
xchg
data16
inc
outsb
bound
xor
or
es
sbb
push
cwtl
add
gs
fstpt
cli
out
xchg
add
pop
cwtl
addr16
cmp
mov
push
lea
xor
addl
xchg
pop
int
or
pop
add
popa
add
cs
cmp
pushf
dec
sbb
sub
jno
popa
arpl
dec
pop
adc
pushf
pushf
test
add
mov
movsb
pop
cmpsl
push
xchg
inc
adc
sub
push
and
cmpsb
sub
push
or
mov
psllq
ja
mov
sub
fs
or
cmp
ret
jl
cltd
and
xor
data16
sarl
dec
inc
cmc
add
enter
test
cs
sub
mov
dec
jmp
iret
xlat
jo
std
inc
mov
dec
dec
mulb
sub
xor
rol
stc
dec
xor
inc
adc
cmp
ror
and
rorb
add
out
or
jg
lods
cmpsb
pop
loopne
fsubs
add
jo
jno
call
sbb
das
scas
out
jmp
mov
cmp
sti
push
mov
fs
jnp
test
lods
fsubrl
xor
inc
and
ret
xchg
push
xchg
xor
mov
in
or
push
xchg
or
pop
subb
imul
push
mov
or
les
dec
add
mov
xchg
dec
push
inc
ficompl
sub
rolb
loope
aas
pop
sbb
xor
mov
lods
in
in
xlat
push
cmp
dec
out
std
dec
nop
shll
push
fmul
mov
divb
in
daa
scas
hlt
fnstenv
dec
dec
insl
xchg
cmp
mov
inc
mov
jnp
pop
or
push
arpl
jno
add
inc
adc
cmp
push
out
movsl
icebp
dec
mov
sub
dec
jle
mov
adc
push
lds
lds
jb
pop
mov
test
pop
stc
jo
loope
jl
mov
jnp
mov
jo
mov
jmp
fs
pop
icebp
sbb
iret
sbb
mov
dec
sub
jb
adc
push
scas
clc
stos
push
xchg
pop
inc
adc
sbb
lock
dec
out
lea
xchg
add
mov
leave
cmp
nop
sbb
popa
push
ret
ret
dec
or
dec
mov
and
repnz
cmp
aam
dec
repz
mov
gs
sub
movsb
add
loop
movsb
inc
push
shll
xchg
fs
jmp
div
imul
addr16
testb
or
and
sahf
and
xchg
push
cmpsl
and
adc
sarl
test
movsl
out
fmull
cmpsl
adc
mov
jge
dec
mov
fwait
mov
mov
mov
add
sub
inc
cmp
xor
push
mov
mov
add
mov
adc
mov
movsb
mov
jecxz
mov
push
lock
mov
clc
pop
inc
mov
popa
outsl
scas
pop
mov
xchg
mov
aam
mov
jbe
xlat
mov
cmp
fisubrs
repz
orl
inc
xchg
push
cmp
les
push
xchg
movsb
dec
fists
loop
pop
pop
xor
mov
xor
inc
lcall
les
xor
inc
mov
pop
fwait
lcall
mov
cltd
roll
lahf
repnz
sbbb
dec
push
shlb
xchg
add
cmpsl
jne
fsubl
lahf
repz
sbb
push
mov
ljmp
mov
movsl
and
push
lods
adc
lret
sbb
mov
sub
ja
push
adc
outsb
adc
imul
inc
fwait
jge
clc
sar
xlat
xchg
and
and
pop
mov
movsl
lods
jle
inc
mov
xchg
cwtl
xchg
popf
dec
pop
std
xchg
add
in
jne
scas
or
cmp
xor
icebp
lock
mov
pop
pop
sbb
cwtl
enter
clc
mov
fsub
mov
jge
loopne
xchg
pusha
dec
cltd
sub
mov
in
scas
push
cmc
addr16
cmp
into
imul
pusha
and
lahf
ljmpw
add
cmp
inc
loope
fs
xchg
dec
and
push
insl
ds
mov
fists
loop
scas
push
xorl
hlt
xchg
xor
and
jbe
fnstsw
xor
ss
xorl
popa
pusha
xchg
pop
out
xor
lcall
icebp
mov
aam
xor
mov
aam
loope
into
add
data16
and
jle
cmp
jg
lock
rcrb
repz
sbbb
xchg
outsl
mov
add
sarb
ja
test
stc
or
addr16
push
mov
decl
push
cmp
push
lret
jmp
jge
or
and
test
fnstcw
and
lret
dec
jae
push
push
add
pop
stc
arpl
jbe
push
fiadds
aam
inc
insb
int
inc
in
call
xchg
inc
loopne
ffree
xor
mov
xor
in
shll
dec
iret
inc
mov
sarb
rorb
pop
hlt
sub
mov
cld
testb
dec
jne
fnstenv
push
inc
mov
sar
lret
push
sti
int
popa
cmp
and
pop
sahf
and
push
hlt
sbb
ljmp
dec
mov
push
ror
cmc
cmp
inc
jno
es
push
shrl
jp
add
push
pop
fwait
mov
jmp
lds
jge
sbb
xchg
aad
sub
mov
or
mov
mov
xor
ret
adc
xor
cmp
in
and
dec
cltd
ret
pop
insl
out
outsb
add
xlat
fists
xchg
or
adc
fidivs
pop
jmp
out
mov
push
loopne
cmp
jl
dec
in
popa
dec
mov
pop
add
sub
pop
push
test
or
push
lea
daa
outsb
jno
xchg
and
pop
and
push
mov
icebp
sti
addr16
arpl
sub
roll
fdivl
mov
sbb
or
lods
mov
fildll
pop
loopne
incl
repz
lret
adc
pusha
push
mov
xchg
mov
xor
xor
lods
movsl
push
dec
daa
mov
iret
iret
shlb
and
cmc
into
jae
fiaddl
dec
lret
mov
or
inc
xchg
jno
mov
sub
jl
mov
int
mov
xor
stos
push
or
pusha
bound
sbb
mov
xchg
sbb
rorb
repnz
lcall
mov
cmpsl
mov
orl
and
scas
cwtl
shrb
xchg
mov
addr16
and
js
push
sub
or
popa
subl
mov
push
faddl
dec
loope
xchg
fsubrl
push
sahf
pop
and
ret
sbb
jl
test
ja
fldt
xchg
xchg
mov
push
and
mov
mov
aad
sbb
pop
jne
outsb
repnz
out
cli
icebp
ljmp
mov
loop
dec
ds
out
lcall
jecxz
outsb
out
fabs
frstor
inc
lock
xchg
inc
in
adcl
mov
int3
in
push
cmpsb
mov
or
pusha
jge
sarb
pop
shll
mov
mov
sbb
sbb
enter
jle
test
jbe
jp
movsl
dec
scas
aas
add
ja
xor
clc
adc
nop
imul
cld
cmp
std
xor
mov
or
push
mov
outsl
insb
jg
xchg
dec
shll
xor
addr16
repnz
pop
aam
imul
xchg
fidivl
fs
pushf
xor
js
mov
lret
enter
shll
scas
mov
mov
sub
inc
sti
xor
std
or
adc
push
jle
in
mov
call
lock
or
cmp
push
push
pushf
test
pushf
fldt
pop
dec
pop
leave
popf
pushf
inc
in
insb
sbb
repnz
push
insl
jne
xchg
or
fbld
inc
xor
inc
imul
lods
pop
stos
lock
movsl
dec
outsl
mov
mov
cli
iret
fst
mov
clc
adc
ret
mov
or
enter
fsts
mov
jp
xchg
in
push
neg
mov
dec
fsubp
pushf
sbb
fadds
sbbb
sub
ret
xchg
jne
and
sbb
cmp
nop
adc
rclb
cmpsb
pop
in
gs
sub
xor
out
inc
xchg
sarl
int3
adc
cmp
das
fcom
add
fcoml
sub
pushf
sbb
nop
add
mov
mov
aam
in
xchg
xchg
rorb
ljmp
jmp
inc
xor
mov
aas
dec
cmp
cs
lea
nop
xchg
std
lds
sti
pop
xor
les
mov
jnp
out
iret
out
dec
mov
ror
cmp
bound
jp
xchg
pushf
jnp
leave
je
pop
mov
lahf
je
mov
mov
call
iret
lcall
add
test
sbb
popf
pop
out
std
add
and
xor
scas
cmp
out
test
out
mov
fcmovnb
jo
lret
xchg
insl
outsb
jmp
sbb
cli
iret
dec
mov
push
in
mov
hlt
outsb
xchg
push
jb
movl
inc
mov
in
inc
cmp
and
mov
push
shr
jmp
call
xchg
sub
push
inc
xchg
clc
call
js
shl
mov
mov
ret
mov
mov
jmp
push
add
movsl
cmp
dec
insb
inc
xor
movsb
bound
add
repz
dec
pop
xor
cmp
popl
dec
sub
and
not
sti
mov
cmp
jnp
enter
mov
sub
ds
mov
addl
cmp
xchg
popf
inc
push
stos
js
mov
xor
iret
aaa
sub
cmc
out
jnp
inc
adc
push
sub
mov
mov
adc
fldl
arpl
lcall
jne
ja
ret
repz
aas
popa
out
inc
insl
daa
bound
cltd
jne
rcll
xor
arpl
xor
fildl
cmpb
mov
hlt
mov
inc
adc
pusha
cmp
fs
xor
jge
jmp
and
adc
mov
shrb
push
jecxz
push
xchg
andl
rclb
pop
imul
fnstcw
je
std
cmpsl
clc
jge
push
pop
nop
ja
and
mov
dec
cmpsl
sbb
push
loope
mov
fucomi
ficomps
lcall
adc
repnz
jg
in
and
lods
addr16
aad
mov
insl
arpl
popf
and
mov
mov
movsb
mov
pop
xadd
mov
daa
pop
jmp
cmp
nop
pop
divb
bnd
mov
add
int3
in
add
add
mov
add
hlt
test
pop
push
mov
lea
mov
sub
pop
cwtl
jp
dec
xchg
mov
popl
call
popf
je
daa
xor
inc
aas
jle
sbb
inc
shll
out
cmp
cmp
mov
outsb
jo
mov
sub
push
adc
pusha
cmp
rolb
sbb
out
push
push
insl
roll
jecxz
push
icebp
iret
and
mov
mov
arpl
xor
adc
filds
jnp
adc
popa
add
movsb
pop
daa
arpl
adc
pushf
fsubl
jmp
aad
flds
in
out
pop
xchg
inc
loopne
push
clc
je
sarl
mov
jge
pop
sarb
sti
cmpsl
add
arpl
outsb
hlt
scas
mov
into
xchg
sub
mov
jl
test
pop
adc
daa
pop
sub
pop
imull
sbb
es
out
jle
movsb
popa
cld
in
push
rcrl
into
jg
jg
mov
iret
fcoms
push
popa
rorl
xor
mov
stc
imul
inc
sub
or
cmp
sub
mov
loope
loop
repz
inc
push
fcmovnb
sbb
mov
mov
and
pop
pop
pop
mov
ret
mov
jp
sub
sub
call
stos
pop
xchg
xor
adc
inc
imul
out
and
adc
or
and
add
arpl
mov
xor
xchg
shrl
pusha
xor
jecxz
mov
in
xchg
push
andb
fistpll
lock
mov
adc
ds
scas
fmull
mov
adc
aad
mov
mov
mov
jl
cltd
fwait
sbb
xor
sub
sbb
test
xor
add
pop
fxch
shll
fwait
cmp
enter
popf
sbb
addb
mov
xor
xor
bound
mov
pop
lcall
mov
ss
push
pop
mov
lea
jne
cmp
inc
aad
push
and
sub
xor
inc
xchg
and
dec
std
lods
sub
xor
mov
data16
mov
xorl
sbb
add
adc
in
inc
in
fsubs
add
ds
pop
mov
pop
mov
jb
ret
inc
jns
add
jo
push
aad
int3
pop
inc
data16
inc
or
or
addr16
sbbl
jb
movntq
out
sbb
mov
fsubs
cld
sub
mov
and
inc
ret
cmp
ret
pop
mov
js
mov
xor
cmpl
test
adc
lahf
subl
cmp
push
imul
test
insl
sbb
in
mov
mov
pusha
jg
scas
mov
and
repz
daa
mov
jne
shl
xchg
lea
cld
push
repnz
pop
lods
mov
jge
dec
adc
rcrb
ret
adc
sbb
cmpsb
mov
decb
icebp
add
dec
or
jle
test
insb
xchg
jnp
xchg
inc
mov
pop
pop
test
clc
inc
adc
sbb
add
loope
push
cmp
mov
call
push
or
lret
pusha
cmpsb
push
mov
jge
in
in
adc
cmpsb
loop
aas
mov
cli
jb
shl
ljmp
stos
lret
in
adc
add
nop
lods
int
push
flds
mov
xlat
ja
pushf
pop
xlat
xchg
loop
jae
push
and
or
cmp
cmc
fisttps
cs
repz
sub
fwait
testb
mov
call
pop
dec
fimuls
adc
jl
mov
or
in
je
mov
cmp
adc
lock
sub
iret
in
lgs
cmp
sbb
adc
xrelease
adc
push
sub
xor
filds
pop
daa
cwtl
gs
testb
push
rolb
sbb
cs
jge
pusha
or
shl
sahf
inc
push
out
push
sub
inc
rcrb
bound
sti
aad
addl
mov
push
or
push
xor
mov
cli
mov
pop
imul
inc
cmc
jmp
aaa
in
fdiv
and
je
xor
sbb
mov
adc
xor
or
dec
in
adc
out
add
inc
mov
inc
dec
imul
or
repnz
out
out
dec
sahf
andb
push
pop
test
xchg
enter
popa
clc
cld
lret
cmp
cli
xchg
lods
push
mov
mov
pop
fucomip
fcoml
mov
cmpsl
pop
mov
pop
clc
loop
lcall
add
sbb
and
into
daa
xchg
lret
add
cmp
rcrl
ret
test
cltd
sub
and
repz
pop
and
outsb
stc
xor
lods
or
pop
lahf
int
mov
nop
loope
push
hlt
ss
lds
aaa
and
xor
into
les
inc
cmp
loope
stc
add
or
and
and
pop
lods
cltd
cli
xchg
jecxz
mov
out
mov
ljmp
fwait
lods
adcb
mov
jmp
pop
fs
lds
pop
sub
shll
xchg
cs
lock
div
pop
push
mov
arpl
bound
cmpb
push
dec
loop
idivb
mov
sahf
insl
es
add
sub
add
jns
fimuls
mov
add
push
jp
repz
js
push
mov
loope
fcoms
xchg
out
inc
mov
lock
inc
mov
dec
sahf
or
or
repnz
in
pusha
sbb
test
out
sub
test
pop
jg
cmpsb
push
ljmp
mov
jns
ja
pop
cmc
stos
daa
jne
adc
sbb
imul
pop
dec
jno
pop
cmp
pop
adc
fcoml
mov
push
movsl
push
mov
pop
aas
jno
bound
dec
ja
xlat
fucomp
out
or
xchg
call
fldt
pop
sbb
mov
es
jg
out
jge
es
and
adc
push
das
push
sbb
into
js
lods
test
inc
loope
xchg
std
mov
xor
mov
mov
mov
test
add
out
ret
cmp
push
and
xchg
push
cmc
jle
cmp
pop
scas
ror
inc
ror
adc
mov
repz
jle
lock
aad
std
sub
adc
jb
test
adc
mov
xchg
pop
pushf
cmp
mov
cmpsl
ja
mov
sub
jnp
movsb
fnsave
xchg
inc
jbe
rorb
xorb
or
pop
mov
test
mov
xchg
sub
and
dec
jmp
pop
aad
or
fcmove
sub
jno
daa
pop
jbe
daa
into
call
push
xor
fimuls
jge
jae
dec
xor
or
fimuls
imul
addr16
test
cmp
les
mov
aam
push
or
outsl
ret
dec
scas
divl
and
or
iret
push
sbb
cwtl
fcoms
ljmp
or
pop
jno
pop
stc
cwtl
xor
fnsave
adc
mov
or
ds
pop
lcall
push
xor
sub
jg
dec
cmp
xor
add
pop
push
push
movsl
xchg
movsb
outsl
pop
out
push
xchg
loopne
xchg
fdivrp
xchg
test
pop
arpl
fsubrs
sbb
or
outsl
adc
pop
cmp
adc
push
lahf
sbb
jns
cwtl
je
xchg
lahf
sub
inc
adc
mov
icebp
daa
addr16
inc
jnp
and
sahf
push
sahf
in
add
shrl
les
push
fs
scas
clc
inc
push
cltd
clc
ja
imull
scas
aam
ret
cmp
mov
subl
stos
pcmpeqb
pop
pop
or
xchg
push
es
call
out
sub
pop
loop
je
jb
inc
xchg
iret
js
jb
lods
insb
shlb
mov
bound
test
nop
dec
add
sti
inc
lods
leave
decl
pop
mov
pop
sub
push
push
push
mov
cmp
mov
mov
loope
pop
jnp
or
or
shlb
sub
sbb
fsub
das
sbb
fnstcw
outsl
call
sub
mov
fidivs
push
popa
xchg
push
lret
pop
or
inc
les
int
lret
ffree
popa
add
pusha
dec
aad
sbb
int3
hlt
sbb
push
add
pushl
jmp
jecxz
int3
js
cmp
stc
add
pop
lods
nop
imul
add
arpl
inc
dec
orb
repz
pop
pop
add
lods
jae
lea
pop
rcll
pop
fwait
inc
xchg
sbb
mov
dec
sarb
mov
mov
cmp
test
inc
and
and
inc
inc
fists
rorb
mov
ret
add
loopne
or
mov
jnp
adc
jp
js
pop
ret
mov
fdivs
lea
fistpll
enter
dec
shrb
add
imul
lahf
or
push
mov
jb
rcrb
inc
mov
pop
mov
divl
ds
insl
fnstenv
lret
jae
scas
pop
mov
lds
or
das
mov
scas
add
cmp
jae
push
nop
mov
dec
push
mov
fisubs
mov
xor
bound
adc
mov
or
adc
inc
jb
cmp
dec
and
jbe
sti
add
int
cmp
xchg
add
sahf
inc
jecxz
xorl
aad
jp
adc
sbb
mov
sub
sub
out
inc
seto
sbb
js
jns
xlat
adc
imul
mov
cwtl
inc
mov
xchg
and
pop
push
or
in
cld
bound
sbb
dec
ret
sbb
out
xchg
lods
and
mov
jnp
or
pop
jno
and
mov
fwait
inc
or
inc
jp
test
and
ret
xchg
mov
iret
dec
or
pop
daa
idivb
outsb
xor
jb
ror
adc
fadd
mov
mov
sbb
mov
int3
daa
mov
sarl
out
jns
mov
or
jmp
ret
xchg
push
in
dec
add
ja
pushf
cltd
hlt
pusha
push
pop
jmp
mov
sbb
mov
div
inc
lock
es
sub
cmpsb
jb
sub
das
lret
xor
xor
sbb
pause
xchg
mov
inc
mov
or
xchg
scas
push
add
sbb
push
pop
mov
cli
adc
push
cmp
filds
mov
out
ret
iret
xchg
fnstsw
popf
aas
movb
in
pop
xchg
cli
jp
cld
and
sub
sub
adc
mov
out
inc
movsl
cmp
fsubl
in
jmp
ljmp
dec
cltd
fldenv
xchg
cmc
rol
jo
jl
or
ja
xchg
cwtl
xor
xchg
aam
mov
cwtl
lahf
or
mov
jnp
sbb
or
inc
pop
ror
sbb
mov
xchg
cmp
jno
dec
jnp
inc
mov
inc
imul
mov
dec
mov
xchg
imul
cmpl
cs
sbb
xor
pop
add
popf
mov
loop
or
fnstcw
mov
sub
or
js
loopne
mov
xor
cmp
insl
or
jno
lahf
jge
aam
fldcw
jbe
mov
lea
imul
jp
rcr
xchg
sbb
sub
push
jb
dec
push
jns
xchg
lcall
xchg
jns
es
jecxz
inc
xchg
in
mov
lahf
xlat
lock
or
or
int
movsl
sbb
adc
xchg
ljmp
imul
orb
sbbl
cmp
push
xchg
mov
fwait
inc
arpl
fcoml
adc
xor
mov
test
imul
andb
xlat
cmpsl
loopne
or
icebp
bound
push
lret
xlat
out
outsb
inc
fimull
pop
push
mov
test
frstor
fldl
mov
popf
xchg
aam
fwait
push
jl
loopne
pushf
fimuls
jo
sbbb
cmp
jge
sbb
jle
jecxz
fildll
pop
loope
imul
cmp
aad
lahf
push
inc
cli
outsl
jp
je
xor
jns
xchg
mov
pop
sub
pop
ds
hlt
iret
in
cmpsb
and
sub
scas
sbb
sbb
lds
and
push
in
rorb
pop
jne
dec
and
dec
scas
jl
or
xchg
cmpsl
fiadds
sub
pop
shll
xor
push
add
out
pop
sbb
and
or
lock
xchg
outsl
inc
mov
test
in
jg
or
mov
sbb
test
xor
arpl
cld
mov
sti
xlat
sbb
jno
inc
dec
cltd
lcall
jnp
clc
fisubrs
sub
jb
test
roll
adc
in
and
aas
nop
fisttpl
mov
outsl
clc
adc
inc
jne
push
inc
and
add
xchg
and
js
sbb
mov
jp
leave
mov
mov
xor
pop
pop
repnz
repz
daa
nop
xlat
int
rcrl
shll
sbb
dec
inc
out
jb
roll
movsl
out
push
ljmp
mov
jbe
dec
pop
jg
dec
mov
sub
test
sbb
mov
and
mov
xchg
xchg
idivl
clc
icebp
push
jmp
mov
jl
and
std
add
adc
cmp
dec
or
dec
aas
or
fst
mov
mov
stc
jl
popf
pop
jnp
inc
sbb
jmp
shrl
jmp
add
or
jae
stos
sub
jo
add
cli
push
or
fldpi
rolb
mov
out
int3
ljmp
or
fidivrs
add
sub
or
orl
fchs
ret
sub
leave
daa
aad
scas
and
ret
push
rolb
in
icebp
jne
and
rcrb
lcall
jnp
iret
xchg
pop
push
out
jmp
mov
stc
and
or
sbb
push
std
int
fdivs
mov
data16
test
gs
cmp
fcompl
jmp
outsb
and
inc
adc
ret
push
adc
adc
mov
mov
inc
cmp
pop
and
xchg
mov
adc
xor
pop
movsl
cli
cld
into
xchg
jnp
arpl
push
je
enter
and
sysexit
mov
dec
mov
jl
nop
ja
arpl
sbb
stos
jl
mov
adc
mov
cmpsb
jle
mov
aaa
add
mov
jp
mov
dec
loopne
ret
fcompl
push
lea
inc
fstpl
popa
dec
mov
fwait
add
jmp
push
add
mov
shlb
jnp
test
ret
dec
shll
icebp
jbe
lahf
ficompl
dec
lods
into
subl
pushw
ret
pop
add
push
xchg
cwtl
andl
jo
iret
adc
insb
pop
jae
fildl
addr16
xor
mov
jae
sub
add
fcoms
sub
push
or
jl
into
js
xor
xor
dec
ja
push
inc
push
cmc
nop
add
push
push
cwtl
or
popf
roll
push
bound
stc
cmpsb
fisttps
sbb
mov
adc
or
and
fdivl
inc
negb
out
sti
push
sahf
inc
dec
ret
push
lahf
fcmove
mov
inc
fisttpl
and
out
jno
push
shll
jno
push
test
add
jb
pusha
fimull
out
out
outsb
daa
sti
outsl
push
in
add
xchg
and
inc
dec
mov
cltd
or
fidivs
aaa
jno
xor
push
insl
xchg
call
lods
and
aas
add
xchg
stc
xor
push
loope
xchg
mov
jbe
jno
xor
out
xor
add
das
xor
lods
mov
cs
xor
xor
mov
adc
lea
xchg
ja
push
repnz
mov
stos
mov
movsl
cmp
dec
popf
pop
sbb
xchg
inc
or
jnp
mov
lea
imulb
xchg
adc
cmp
xchg
aad
movsb
cmp
mov
push
mov
or
fmulp
hlt
mov
xor
push
fidivrl
fwait
and
add
cmpsb
push
pop
and
mov
xor
in
in
popf
stos
cmp
and
inc
xorl
xchg
sbb
add
dec
jp
inc
aaa
and
mov
pop
mov
xchg
pop
mov
movsb
int
mov
add
adc
sbb
inc
mov
cmp
scas
pop
xchg
lcall
out
ret
cmpsl
xor
mov
cmp
test
jle
xor
repz
rcl
mov
mov
adc
fdivrp
sub
gs
xchg
mov
aam
sbb
test
add
or
inc
movsl
xor
hlt
js
fisubrl
scas
xor
push
call
cwtl
pop
cmc
sub
fs
icebp
mov
lahf
push
dec
mov
jl
cmp
mov
out
in
dec
mov
cld
scas
into
rcr
xchg
clc
mov
cld
add
xor
pop
imulb
and
xchg
or
push
data16
ret
out
imul
data16
scas
dec
dec
mov
mov
or
mov
xchg
fs
inc
aam
jle
push
pop
xor
mov
and
add
es
scas
lret
in
and
rcl
jo
xchg
mov
pop
pop
popf
jge
mov
mov
pushf
jge
sub
enter
es
push
add
lcall
add
dec
cmp
push
mov
cmc
stos
imul
xchg
jl
shlb
push
loopne
imul
xlat
jl
jl
fs
and
xor
sbb
sahf
dec
dec
test
clc
and
test
xchg
aam
xchg
mov
movsl
ss
pop
jne
insl
xchg
stos
mov
insb
fldcw
cmpsb
add
mov
jno
xor
out
pop
or
or
mov
cmpsb
dec
inc
sbb
mov
bound
mov
pop
mov
lret
add
xlat
pop
cmpsb
ret
push
mov
push
or
xchg
and
in
push
jbe
mov
cmp
cmpsb
in
decb
pop
jge
mov
int3
int
push
xchg
xlat
insb
xchg
test
inc
es
pusha
aaa
out
xchg
mov
mov
movsl
and
dec
adc
or
xor
popa
xor
leave
fdivrs
pop
dec
xchg
fimuls
ljmp
fcmovne
xchg
fistpl
imul
ficoms
or
or
lods
sti
stos
jo
pop
lods
dec
pop
fists
and
xchg
mov
loope
popa
push
data16
popf
shlb
inc
ljmp
int
push
adc
aad
lods
pop
lods
pop
push
mov
fsub
sub
mov
cmpsl
add
faddl
lea
ljmp
ret
mov
and
mov
ret
jae
loope
fcom
mov
fsincos
and
insl
jg
push
shrl
jmp
cmp
xchg
add
lahf
sub
cwtl
xchg
push
lret
and
add
sub
nop
cmp
jbe
mov
fsubp
xchg
push
inc
inc
call
call
jne
pop
pop
test
pop
aad
xlat
mov
mov
and
mov
fidivs
jnp
mov
mov
fcomps
mov
stos
mov
sub
cld
mov
and
xchg
enter
aas
jecxz
cwtl
int
mov
bound
xchg
leave
test
mov
popf
nop
sub
negl
lret
stos
andb
pop
scas
inc
mov
xchg
dec
mov
mov
fcomps
fcomps
rcrl
mov
fadd
rclb
mov
sahf
mov
mov
divb
enter
or
cmp
cmp
lea
xchg
outsl
mov
inc
mov
addb
add
lahf
sahf
xchg
jg
mov
adc
xchg
ret
shr
cli
sbb
lret
cmp
lcall
inc
gs
mov
shl
add
ja
jo
or
decb
andb
ret
hlt
xor
test
and
in
cwtl
dec
sub
in
xchg
push
enter
dec
ss
stos
aaa
sub
es
mov
pusha
sbb
movsb
jp
out
push
popa
push
and
addr16
sub
jle
sub
xchg
scas
adc
out
paddusb
hlt
adc
xchg
xchg
cmp
sub
add
add
dec
fidivrl
inc
push
jo
xchg
mov
call
bound
jno
mov
popa
cli
xchg
jae
arpl
jmp
push
or
ss
out
pop
call
lret
xchg
or
inc
mov
popa
mov
xchg
and
lock
test
cmpsb
ficomps
js
mov
outsl
xor
stos
lret
mov
sub
fstps
or
fimull
lret
mov
inc
pop
std
xchg
jb
xor
fimull
or
jp
lret
imul
sub
sahf
mov
mov
and
ss
mov
pop
push
lea
pop
dec
and
cltd
mov
in
pop
adc
cmp
lret
stos
cmpsl
lds
movsb
fldt
out
lods
xor
pop
test
popf
xor
andl
sub
pop
xchg
out
cmc
dec
jmp
mov
sub
daa
and
jns
mov
mov
xchg
cld
in
ljmp
repnz
xor
dec
pop
je
sub
inc
scas
push
lret
dec
aad
fisttpll
iret
mov
adc
pop
hlt
divb
mov
ficoml
or
push
int
test
lret
testl
mov
mov
sbbl
outsl
push
shl
cs
rorl
lret
mov
xor
out
mov
imulb
rcrb
push
in
jg
jbe
sar
push
lods
pop
xchg
adcb
popl
mov
push
fcompl
push
sahf
or
fnstenv
inc
sub
movsl
jb
repnz
lret
pushf
iret
es
and
and
icebp
popf
jg
loop
jno
adc
add
jo
push
sbb
and
jecxz
sub
cs
xchg
mov
fidivrl
xor
cltd
cmp
leave
adc
push
sub
pop
and
idiv
test
test
lret
scas
out
push
dec
sti
pop
mull
in
out
pop
and
mov
push
mov
push
popf
sbb
ret
or
fildll
ss
dec
daa
call
push
xchg
sbb
mov
pusha
cmpsb
mov
insb
in
ret
and
cmovge
aaa
aad
loop
pop
je
pminub
int
lds
and
mov
insl
sbb
test
xor
adc
xchg
dec
mov
mov
mov
adc
mov
adc
gs
loopne
mov
sahf
mov
xchg
fistl
mov
ss
dec
mov
pushf
mov
pop
fidivs
repz
and
lock
mov
pop
mov
ret
cmp
xor
iret
cmc
dec
and
fdivl
push
inc
push
pop
call
adc
movsl
arpl
in
or
dec
fwait
cmpsb
adc
mov
enter
fwait
sub
xrelease
jecxz
mov
loopne
jp
inc
lret
sub
mov
inc
pop
dec
jno
xlat
lock
mov
dec
popf
sbb
int
mov
sub
ret
dec
push
add
lahf
xor
xchg
aad
cmc
sti
jmp
xchg
enter
in
sar
loopne
cs
sub
mov
push
movl
js
cmc
lcall
shl
pop
adc
test
push
fsubrs
jns
sti
jmp
leave
test
insl
pop
pop
fldl
xor
pop
mov
push
and
sbb
mov
pop
pop
sbb
pop
dec
hlt
loope
push
xchg
das
jge
out
rcl
inc
inc
mov
xchg
dec
cmp
xchg
xor
movsl
xor
sahf
sbb
sahf
mov
repz
pop
mov
movsb
mov
push
in
punpcklwd
dec
push
sub
sar
xchg
insb
jmp
sbb
push
sarl
lahf
aaa
add
jbe
dec
mov
movsb
mov
ror
or
push
push
jno
pop
test
sbb
adc
pop
dec
or
dec
rcll
into
fmulp
daa
pop
loopne
icebp
bound
loopne
icebp
mov
lods
dec
jnp
loope
test
jo
call
sub
outsl
push
loopne
dec
stc
mov
outsl
sbb
and
dec
xor
dec
inc
in
and
iret
enter
cmpsl
jnp
push
push
in
xor
xchg
or
aaa
fs
mov
inc
xchg
popa
rclb
es
jle
in
mov
push
cmp
cmpsl
cs
inc
out
shll
fisttpll
adc
inc
dec
in
test
icebp
push
pusha
mov
push
leave
pop
push
mov
fst
cmp
jecxz
movl
notl
lret
pop
mov
movsl
enter
jl
cmp
sbb
mov
add
mov
xlat
pop
jmp
das
int3
inc
nop
push
mov
je
sbbb
jle
mov
decl
mov
sbb
mov
lret
shll
xchg
sbb
mov
clc
iret
sub
mov
lcall
adc
fnsave
fistps
fisttpl
xor
xchg
int
clc
dec
mov
fsubrs
cmp
hlt
push
pusha
lahf
or
or
xor
cmc
and
dec
sbb
jmp
icebp
sbb
cmp
loope
movl
adc
or
sub
or
cmp
pop
aam
push
dec
jp
sbb
icebp
pop
test
jne
sub
hlt
aas
gs
xor
pusha
lds
sub
fbstp
icebp
in
xor
xchg
jns
cmp
mov
add
jbe
ds
repz
cmp
les
xchg
hlt
insb
push
push
jmp
pop
xchg
pop
xor
and
es
mov
call
pusha
fisubrs
mov
mov
lea
in
pop
sub
jnp
jl
es
cmpsb
push
push
push
jmp
mov
sarl
xor
xchg
sub
push
dec
xsaves
cmpb
mov
aad
pop
arpl
inc
ljmp
inc
insl
stos
repnz
inc
add
cmc
insl
fdivr
and
sub
cmp
popf
push
jg
and
adc
jmp
jmp
pushw
mov
sbb
sub
adc
std
jmp
int
and
loop
add
insb
pop
outsb
out
aaa
jnp
popa
lret
jmp
add
sbb
mov
mov
cmp
pop
sti
push
fistl
and
test
js
shll
xlat
xor
push
test
xor
adc
ss
scas
imul
mov
imul
aam
std
xor
sub
mov
shrb
jb
push
adc
sub
and
push
ret
cli
mov
cmp
or
ss
xchg
lret
jno
insl
lds
leave
or
dec
adc
jmp
sbb
mov
popf
and
movsb
sarl
push
pushf
pop
mov
ffreep
rcrb
lds
xor
subl
mov
pop
sbb
sbb
cmp
cwtl
mov
out
pop
daa
aad
mov
cltd
xchg
fdivrs
jb
dec
push
cmpsb
pop
icebp
sbb
or
imul
data16
adc
and
push
cmc
mov
adc
sub
xchg
dec
jae
out
or
mov
push
scas
hlt
lea
enter
cmp
inc
lcall
test
aas
lods
adc
repnz
pop
xor
int3
fs
sbb
push
into
cwtl
dec
cmp
fidivs
add
and
push
xor
push
push
movsb
pop
filds
mov
cli
push
stos
sti
repz
scas
push
ja
mov
sbb
fs
clc
add
in
xchg
push
repz
cwtl
test
pop
xchg
icebp
xchg
pusha
mov
xor
xor
lods
call
push
dec
mov
xor
imul
pusha
adc
push
jbe
pop
jnp
dec
cwtl
or
lds
xlat
sub
jnp
sahf
js
mov
fidivs
mov
addb
mov
stc
lds
xor
mov
aam
stos
jmp
mov
nopl
test
xchg
inc
lock
push
inc
add
adc
into
call
aaa
adc
sub
and
push
popa
out
inc
mov
pusha
mov
add
outsb
cmp
pusha
notl
cmp
repnz
dec
cmp
adc
dec
sti
shrb
imul
dec
jge
xchg
sub
scas
jb
lcall
sub
xor
push
ret
cmpsl
xchg
rclb
xor
and
bound
out
pop
push
add
pop
lcall
xor
pop
decb
push
mov
scas
fdivrl
ret
jbe
mov
dec
inc
xchg
jp
ljmp
push
insl
and
and
cs
fnstsw
push
nop
sub
testb
test
outsl
shrl
and
mov
test
inc
stos
aaa
dec
lock
ja
clc
ret
pop
jecxz
lahf
ret
inc
cs
mov
mov
icebp
dec
inc
jno
xor
fbstp
pop
pop
mov
icebp
lds
and
mov
out
xor
scas
aaa
jb
cmp
pop
mov
cld
push
rcrb
in
lock
xchg
mov
mov
cmp
popa
ret
inc
adc
cmp
fnstsw
cwtl
inc
popf
mov
in
pop
lcall
call
or
lea
mov
lcall
cmp
pop
fwait
sub
jo
movsl
test
in
pop
xchg
cmp
imul
movsl
or
mov
xchg
stos
hlt
xor
pop
cmp
cmpb
inc
popf
xchg
and
in
pop
sbb
fnstenv
stos
enter
addr16
and
lret
js
fadds
js,pn
addb
fistpll
sbb
push
test
rorl
jl
test
data16
nop
iret
and
dec
andb
into
xor
lahf
insl
out
in
insb
jo
cwtl
mov
aaa
clc
inc
inc
es
push
mov
add
fnsave
jns
lahf
mov
punpckhdq
xchg
adc
sub
test
aas
mov
mov
xchg
sti
pop
fisttpl
sbbb
adc
frstor
inc
inc
xchg
scas
mov
scas
sbb
mov
stos
jo
fnstsw
int
icebp
mov
mov
mov
dec
js
mov
mov
adc
lods
roll
or
test
pop
insl
sub
inc
test
adc
push
shll
and
stc
shll
call
fcmove
fimuls
inc
fimull
cmc
push
jnp
jbe
dec
pushf
xchg
or
xchg
mov
adc
outsl
std
push
jmp
sahf
movsb
dec
xchg
movsl
int
mov
popa
and
loope
arpl
repnz
jmp
xor
loope
xlat
add
mull
mov
cmp
xchg
jnp
mov
popa
nop
cmp
pop
add
cli
out
fmull
popf
mov
dec
xor
frstor
outsl
cmpsb
je
testb
inc
mov
jnp
outsl
mov
mov
mov
je
pop
lret
rcll
fiadds
call
xor
add
neg
and
icebp
push
dec
aas
faddl
lods
push
mov
or
cmp
inc
sub
call
inc
sub
insl
jge
mov
jecxz
aas
mov
fwait
mov
cmpb
dec
mov
mov
xchg
fisubrs
mov
jle
mov
mov
aaa
arpl
mov
cwtl
jbe
fisttps
std
cltd
jns
addl
aad
iret
hlt
add
mov
mov
mov
sbb
out
jbe
cld
cmp
push
and
xlat
outsl
mov
mov
adc
iret
out
jp
insl
mov
test
std
xchg
cmpsb
mov
lods
dec
or
mov
pusha
mov
pusha
xor
arpl
xor
into
sub
scas
push
std
pop
jns
pop
inc
pop
pop
movsl
adc
cmp
add
dec
xchg
add
cmpsb
jge
aas
dec
mov
and
dec
arpl
inc
mov
cltd
mov
pop
pop
push
or
push
xchg
xchg
es
and
loope
sbb
clc
arpl
in
push
movsl
icebp
pushf
mov
out
push
jmp
ja
cmp
adc
mov
in
shll
leave
cmp
add
dec
repz
mov
icebp
pop
out
repnz
xor
fidivl
and
push
push
mov
sbb
int3
mov
jnp
lahf
xchg
ds
repz
dec
inc
sti
insl
sbb
mov
mov
sbb
cmpsb
mov
fcoml
push
or
test
adcb
add
fwait
lods
adc
xorb
add
and
push
cmpsl
or
push
cmp
sysenter
sbb
pop
repnz
mov
or
jmp
cmp
mov
movsl
inc
jle
gs
xchg
xchg
ret
aaa
adc
lret
sbb
subb
ret
xor
or
aad
push
sbbb
call
loopne
and
flds
enter
mov
fisubl
dec
push
jecxz
nop
sti
mov
xor
in
jbe
push
xor
xchg
xor
xor
fwait
fwait
cmpsl
mov
aad
cmp
sub
ret
dec
cmp
add
pop
sub
jl
or
jns
test
xor
jne
adc
push
loopne
imul
xchg
mov
xchg
inc
mov
enter
add
insb
es
jl
pop
lea
mov
xor
bound
xchg
mov
mov
lock
mov
mov
out
das
fstps
scas
mov
adc
cmp
adc
daa
xchg
icebp
sub
and
cmp
mov
inc
xchg
sahf
sti
cltd
test
sub
dec
cmp
or
test
mov
aas
popf
add
sub
cld
dec
aad
pop
jns
sub
inc
sbb
jo
dec
mov
mov
inc
and
dec
jae
icebp
ds
xor
or
inc
adc
jecxz
in
ficoms
and
push
outsl
inc
leave
imul
push
dec
or
xchg
movsb
in
sbb
jl
sub
addr16
cmp
daa
icebp
xchg
cmpsl
pushf
xchg
xchg
cmp
fsts
cmc
add
lock
cmc
mov
in
in
mov
mov
fs
xchg
push
lods
adc
xlat
stos
movsl
into
rcrl
mov
fisttpll
test
std
leave
out
mov
push
xchg
inc
mov
jns
daa
in
es
inc
jo
pusha
icebp
xchg
inc
gs
xor
mov
mov
pop
mov
arpl
sub
movsb
int
or
aad
jle
push
cmp
cmp
call
nop
dec
cmp
mov
add
mov
sarb
xchg
cmp
cmpsb
jge
sub
insl
dec
ss
in
fwait
mov
jne
and
cs
inc
and
dec
lods
leave
jbe
fiadds
orl
cmp
mov
fwait
scas
jbe
sub
jp
cmpsl
or
or
inc
in
out
call
add
xor
aaa
mov
mov
mov
sbb
dec
xchg
mov
sub
pop
xorb
loop
sbb
aaa
pop
xor
dec
hlt
xchg
fistl
push
xlat
xor
push
das
add
jge,pt
sbb
testl
enter
das
imul
enter
mov
cmp
push
test
xchg
inc
sbb
pop
imul
in
pop
stos
push
push
popf
test
pushf
sub
js
out
fldl
lods
es
je
repz
out
repnz
insb
adc
mov
mov
jmp
js
mov
sbb
push
cmc
subb
icebp
insb
mov
adc
clc
fildl
or
mov
test
lods
push
inc
mov
rcr
std
lods
movsb
and
outsl
push
mov
inc
cmp
push
test
mov
add
mov
xor
sbb
pop
xchg
in
and
iret
ds
mov
lock
pop
lea
inc
mov
scas
cli
sbb
dec
in
mov
sub
xor
mov
pop
in
test
jnp
cltd
mov
lret
clc
push
push
es
fdivs
and
add
push
adc
fsub
call
pushf
and
mov
pusha
inc
arpl
push
mov
stos
out
add
and
lea
push
push
fsubrs
mov
orl
cmc
add
fwait
or
pop
jnp
mov
cwtl
pop
enter
je
xchg
sti
or
pop
movsb
dec
ret
mov
in
aad
xchg
das
xchg
ret
mov
xor
sbb
add
pop
les
dec
mov
dec
sub
ss
pop
mov
mov
jge
and
or
loopne
lret
pop
dec
lahf
jmp
cmpsl
adc
addl
pop
sbb
repnz
mov
xchg
sarb
lds
call
mov
push
test
jb
mov
inc
test
mov
fmull
cmpsb
pop
pop
sbb
lods
xlat
mov
push
sahf
and
hlt
insb
sahf
mov
movsl
repnz
sahf
fadds
jecxz
and
movsl
ror
xor
lods
or
xchg
mov
add
adc
fs
inc
sub
popf
cmc
xchg
xchg
add
sbb
dec
ss
sub
sub
xchg
pop
stos
popf
sbb
ss
addl
jno
arpl
dec
adc
or
lret
cmp
aam
sahf
fsubr
sbb
jge
cmc
hlt
mov
mov
sbb
fadd
out
mov
ljmp
sahf
or
add
pop
ljmp
sub
pop
jae,pt
cmp
dec
mov
jmp
adc
icebp
dec
aad
or
xlat
pop
dec
mov
push
push
xor
imul
xchg
pop
test
imulb
daa
mov
inc
stc
sbb
into
sti
lahf
jbe
pop
out
les
clc
add
push
dec
push
imul
mov
jae
lods
xor
mov
or
arpl
adc
cltd
jb
and
ja
enter
mov
push
out
mov
xchg
test
mov
xchg
mov
adc
stos
fidivl
sbb
mov
mov
cli
js
xlat
mov
jns
dec
and
push
mov
fstps
js
push
hlt
sbb
fistpll
mov
lods
cmp
mov
mov
mov
ror
data16
pop
xchg
cmp
fsubs
cmpsl
ljmpw
push
xchg
dec
cld
cmp
add
lret
dec
and
rol
push
cmp
push
pop
pop
out
or
push
mov
das
add
sbb
cwtl
jne
pop
inc
int3
push
pop
pushf
fiadds
jae
stos
arpl
pop
gs
and
ja
test
idiv
insb
push
repnz
dec
icebp
je
ret
icebp
aam
dec
popl
fdivs
shll
dec
lods
test
pop
jbe
fsub
je
es
dec
xorl
ljmp
add
ss
push
aam
push
scas
adc
int3
in
cmp
xchg
pop
test
rclb
add
and
push
push
in
lret
fistps
or
mov
mov
dec
sub
sahf
mov
lods
loope
push
fisubrl
ds
xor
js
push
stos
jp
cmpsl
cmpsb
in
daa
dec
bound
lods
int
in
ja
inc
fnstsw
cmpsl
xchg
js
jne
jne
push
aas
push
push
lahf
in
sbb
jmp
aam
or
lods
xor
add
insb
push
dec
fistpll
fidivl
cmpsb
imul
push
mov
dec
decl
int
clc
in
fcoms
lds
push
xor
or
shrb
in
outsb
lods
lods
inc
sahf
repz
inc
icebp
add
aas
or
push
sub
popf
mov
and
jle
ja
mov
cmc
imul
movl
in
nop
or
pusha
sbb
mov
addr16
cmp
loop
xchg
or
xchg
fcom
leave
pop
mov
xchg
dec
dec
in
or
stc
fwait
jo
mull
cmp
or
fwait
or
stos
jecxz
in
fcoml
xor
push
and
sub
inc
sub
into
flds
mov
scas
cs
mov
lods
jb
movzwl
aad
push
cmp
mov
xchg
enter
pop
mulb
nop
fwait
mov
in
pop
jbe
jbe
push
outsl
mov
cmp
mov
jp
pushf
js
mov
loope
roll
ja
xor
into
sub
les
sbb
imulb
fidivs
scas
cwtl
mov
mov
int3
ja
out
xchg
xor
lods
mov
fisubs
ret
cld
imul
lcall
into
in
dec
in
jne
inc
jmp
push
lods
adc
repz
and
cli
pop
aas
mov
ljmp
fwait
xorb
ja
xchg
cmpsb
test
mov
lcall
je
ljmp
jns
cmp
sti
movsb
pop
mov
sub
lahf
out
mov
in
inc
in
add
addl
xchg
jnp
rcll
add
mov
movsb
pop
cmp
mov
inc
push
and
mov
xchg
xchg
mov
out
mov
push
ljmp
and
fimull
repz
pop
jp
and
xchg
bound
push
repz
jge
jbe
fimuls
push
iret
and
inc
mov
sarb
cmp
dec
dec
bswap
cmpsl
rorl
push
mov
loope
and
mov
or
jne
sbb
cmova
or
push
lahf
fcmovb
adc
mov
addb
xor
ljmp
scas
inc
push
ljmp
rcl
das
push
out
dec
xchg
xor
sbb
ss
xchg
stos
fldenv
imul
aas
mov
lcall
test
ljmp
nop
sub
sbb
adc
cmpsl
push
push
inc
test
arpl
mov
dec
je
inc
push
xor
and
adc
fcoml
stos
out
push
insl
inc
fsubs
loopne
xor
lds
fisubs
add
lahf
mov
sbbb
lds
sub
iret
mov
pushf
push
pop
or
adc
adc
add
pop
fsubr
push
add
arpl
jge
aas
out
add
sub
outsl
and
cli
or
les
push
push
cmp
push
ja
jae
jb
mov
and
adc
loope
cmp
daa
flds
shl
repnz
xchg
or
dec
nop
xlat
roll
xorb
testb
xor
adc
jg
mov
movsl
pop
popf
mov
jl
mov
hlt
repnz
ja
mov
pop
adc
or
pop
push
das
flds
adc
aaa
xor
stos
pusha
ss
xor
cmp
jbe
mov
loope
cmp
cltd
pop
ret
pushf
movsb
push
loope
repnz
ret
je
stos
xor
or
std
pop
rorb
cli
insb
arpl
pop
adc
sub
mov
les
ret
mov
push
aas
jo
jg
pop
fbld
out
and
dec
cmpsb
test
add
cmp
loopne
aad
pop
popa
jmp
out
add
push
xor
insl
mov
mov
sbb
adc
imul
loopne
push
mov
fs
fldt
shrl
icebp
inc
stos
dec
ss
std
jge
xchg
jecxz
int3
imul
pop
mov
mov
enter
and
aas
cmp
imul
fcoms
test
jge
cmp
adc
push
adcl
mov
nop
xor
cmpsb
fbld
add
cli
jp
xor
push
les
mov
push
inc
je
cli
stos
push
sbb
xchg
push
mov
iret
push
jnp
lods
pop
vpaddusb
pop
pop
bound
cli
inc
stos
repz
sti
and
pop
mov
mov
jmp
sub
mov
xor
in
push
clc
jmp
sbb
adc
out
add
in
dec
add
je
aad
adc
pushf
in
mov
loop
sarl
push
pop
pop
cmp
int3
imulb
inc
xchg
cwtl
mov
lods
rcrb
xor
movsb
jmp
fld
test
lahf
xchg
call
inc
mov
leave
jae
adc
psrlq
sub
push
dec
sub
data16
add
int
adc
mov
movsl
jae
shrb
sub
sti
mov
movsb
roll
mov
jecxz
adc
mov
push
std
fs
push
mov
stc
insl
in
lahf
in
ss
lods
jmp
dec
add
fwait
mov
int
sub
jo
addr16
ret
rorl
ds
jns
xchg
jp
mov
jae
testb
subb
iret
inc
mov
dec
inc
jle,pt
xor
jecxz
xor
mov
stos
lds
sbb
scas
jnp
movsb
mov
aaa
jnp
roll
add
leave
es
sti
and
fstpt
push
pop
cmpsl
sbb
mov
mov
insl
xchg
mov
lret
lods
repnz
cltd
push
ret
cltd
test
dec
xchg
outsl
pop
es
icebp
loopne
imull
adc
in
cld
xlat
mov
shrl
sub
daa
out
mov
push
scas
js
xor
insl
adc
test
dec
push
pop
or
pop
xchg
sub
cmp
enter
sbb
sbb
inc
inc
mov
mov
adc
xchg
pushf
aas
dec
aas
mov
aad
xor
scas
sets
adc
decb
and
and
jge
sub
and
dec
sub
or
mov
test
push
imul
out
test
mull
hlt
or
mov
push
fldt
cwtl
dec
inc
fldcw
movsb
rcll
pusha
imul
jae
jnp
or
add
sbb
and
xor
fisubrs
popa
push
scas
fisttps
inc
and
test
fists
mov
lock
fsubs
test
rolb
mov
movsb
sbb
loopne
jg,pt
jb
pop
adc
imul
lahf
sbb
mov
dec
xlat
xchg
mov
scas
pusha
mov
sahf
cwtl
call
xadd
loopne
cmp
das
xor
jmp
push
and
xor
cltd
popa
sbb
lret
test
xor
daa
scas
mov
mov
xor
rorl
pmulhuw
cmp
pop
push
fisubrs
add
lods
push
xor
in
mov
mov
out
aas
sti
adc
xchg
mov
addr16
addr16
and
outsl
int3
loop
push
lods
iret
insb
jne
mov
hlt
inc
and
in
or
mov
sub
push
pop
pushf
inc
in
pop
lock
mov
mov
pop
add
and
jl
in
cmp
in
cmpl
cmp
fmul
rcrl
mov
or
jno
mov
pop
xchg
push
fidivrs
xchg
jle
and
pop
jl
imulb
shlb
add
lods
into
iret
sbb
daa
fdiv
sbb
or
mov
loope
adc
outsl
inc
or
fidivl
scas
push
pop
mov
jl
inc
pop
sub
jbe
and
sbb
lods
or
xor
cmp
or
dec
in
or
pop
outsb
les
mov
ret
mov
push
pop
xchg
pop
mov
cmp
add
push
dec
out
ljmp
mov
clc
stos
adc
aad
sbb
lahf
leave
jne
fwait
nop
jb
fwait
or
loop
xorb
lahf
fdivrl
imul
adc
or
jmp
fs
add
xchg
dec
jbe
daa
shrb
out
sti
popa
mov
mov
jg
cld
cwtl
inc
add
nop
shlb
shll
es
fadd
jno
loop
xor
sbb
cmp
xor
loop
rcll
xchg
inc
dec
cmc
out
add
les
insb
and
mulb
xchg
pop
shll
adc
push
rcrl
insb
ror
jp
es
and
xchg
push
into
lret
jmp
pop
js
cs
popa
or
sbb
pop
sbb
das
mov
rcrl
sub
ret
jle
xchg
push
int3
inc
pushf
add
int3
jmp
stos
mov
pop
jo
pop
xchg
scas
push
imul
mov
cmp
popa
dec
lods
lds
out
xor
ds
call
mov
mov
adc
mov
dec
and
insl
jmp
cmp
xchg
sti
cmp
pushf
lret
cli
lret
call
xchg
test
or
stos
insb
xchg
jno
jle
pushf
jmp
call
jmp
ja
push
loop,pt
cld
mov
jmp
xchg
jle
and
jns
dec
popf
outsb
and
mov
insb
mov
and
lods
add
sahf
shrb
adc
pop
into
cltd
or
inc
rorb
repnz
fiadds
cmpsb
cmpsb
rolb
xlat
mov
ret
rolb
mov
pushf
adc
cld
test
cmp
out
xchg
icebp
mov
das
sahf
cmp
add
push
lea
mov
jmp
sbb
inc
cs
xor
and
jle
clc
pop
mov
fistl
loope
pop
push
jg
xchg
add
add
gs
outsb
imull
incl
rolb
popa
leave
sarb
mov
stos
inc
fdivs
xchg
or
lds
mov
loope
jecxz
inc
mov
cltd
add
sti
jl
ss
lcall
mov
cld
ficoms
jl
and
xchg
xchg
inc
mov
adc
inc
jbe
push
jl
jmp
adc
fcomi
inc
and
push
movsl
sbb
in
mov
outsl
jnp
xchg
out
dec
in
sbb
adc
mov
sarb
pop
mov
jne
mov
sbb
sub
mov
gs
arpl
mov
cwtl
and
out
stos
inc
loopne
adc
add
cmp
cmp
sub
push
cs
ficomps
xor
cltd
cmp
inc
add
insl
sub
lea
dec
and
add
jae
inc
ds
fsubs
adc
push
rcrb
int
inc
lret
cmpsl
sbb
mov
or
shrb
pushf
outsl
push
fistps
aad
insb
xchg
ret
stos
hlt
sbbl
lods
data16
pusha
inc
xchg
out
pop
out
xchg
xor
ss
rep
les
outsl
pop
jg
stos
sbb
push
pop
in
xlat
lea
or
mov
pop
fcmovnu
dec
xor
in
popf
aas
pop
mov
sbb
and
push
lcall
jge
inc
stc
test
xchg
and
ljmp
jmp
pop
daa
adc
mov
jo
sub
xor
loop
or
test
ret
cmp
jno
mov
xor
mov
jmp
sub
jge
push
jb
pusha
scas
into
roll
ret
sahf
stos
ss
jmp
mov
sub
stos
inc
add
pop
pop
xchg
adc
out
xchg
xor
imul
and
sub
pop
test
mov
fwait
jne
push
xor
adc
stc
in
inc
mov
jbe
jge
js
lret
daa
mov
mov
mov
fldt
mov
jle
jno
sar
xchg
aaa
andl
sti
pusha
xchg
mov
adc
push
jne
sbb
mov
cld
push
adc
push
jne
xor
cmp
xchg
dec
mov
push
sbb
inc
inc
push
and
in
jmp
fcoml
leave
inc
sti
jp
int
or
mov
fildll
bound
std
inc
jmp
jno
pop
jns
xchg
jle
mov
add
int
xchg
adc
loopne
stos
and
data16
cltd
insl
std
cld
mov
fcmovnbe
and
jg
and
dec
popf
and
adc
clc
jge
gs
iret
push
pop
das
inc
rcll
das
fiaddl
jb
testl
aam
dec
rorl
mov
dec
and
and
jecxz
xor
jge
jbe
mov
bound
sbb
lcall
lcall
or
repz
xchg
inc
pusha
lcall
mov
jae
stos
fwait
cmp
cmp
rclb
mov
ds
mov
fisttps
add
das
pop
sub
jmp
fnstsw
popa
inc
sahf
jecxz
mov
jmp
test
mov
fwait
xchg
or
pusha
stc
mov
enter
mov
jle
imul
lods
or
push
adc
dec
mull
push
cmpsb
sbb
sbb
sub
xor
jmp
push
pop
or
pop
push
into
in
and
push
xor
clc
sub
push
push
out
nop
sub
iret
sub
jns
sub
je
xchg
popa
icebp
ret
push
push
lods
cmp
mov
pop
mov
fisubrs
lods
call
ret
mul
mov
lods
jp
push
fisttps
jno
pop
dec
dec
ss
pop
xchg
loope,pn
or
dec
sti
pop
push
out
popl
aad
adc
inc
jg
pop
and
sbb
movsl
mov
test
lods
data16
mov
push
imul
pop
inc
mov
jno
push
or
sar
inc
push
iret
imul
jne
js
inc
inc
aas
xchg
xchg
scas
stos
call
lret
xor
mov
xchg
xor
mov
cmp
pop
cs
mov
es
xchg
lea
jbe
loope
aam
or
dec
adc
pop
mov
mov
addr16
xchg
push
xor
fcmovb
test
fadds
pusha
mov
insl
ss
stos
lret
sarl
sti
in
cmp
data16
push
ljmp
scas
jno
insl
add
addr16
inc
mov
inc
imul
fsubp
test
clc
or
je
aaa
ret
sub
jo
lcall
inc
aaa
xchg
mov
cmp
repz
push
mov
pop
sbb
and
xchg
insl
bound
mov
cli
xlat
sbb
out
popa
testl
in
loop
jno
sbb
iret
adc
dec
fsubl
bswap
xor
push
inc
push
in
sub
xchg
pop
repnz
jae
imulb
je
repnz
in
stc
mov
faddl
mov
pop
testb
inc
pop
jge
jmp
mov
or
push
test
fnstenv
test
cmp
std
ss
xlat
lds
adc
xchg
lds
sbb
mov
sbb
movsb
dec
xor
xchg
outsl
or
pop
les
fstl
adc
test
lea
mov
dec
adc
mov
push
sahf
int
sub
test
addr16
pop
cmpsl
mov
enter
cmp
pop
fs
nop
in
push
and
xlat
xchg
sbbl
adc
adc
dec
sbb
mov
pop
ret
inc
test
jno
lods
dec
and
and
xchg
pusha
movsb
add
cmp
mov
aas
shrb
add
iret
cmp
insb
dec
or
jle
stc
sbb
shl
sbb
sbb
or
test
mov
jno
cmc
call
rorb
push
sub
loopne
out
cwtl
das
xchg
dec
jge
jae
xchg
cmp
xchg
push
imul
add
dec
and
inc
or
fidivl
xchg
jp
mov
dec
aam
mov
scas
cmp
movsl
cmp
mov
scas
xor
leave
int
cmp
mov
sub
push
out
cmp
or
mov
adc
leave
sbb
sbb
out
lods
add
push
fidivs
cltd
lret
push
js
lds
fcomps
stos
ret
movsl
dec
test
into
popa
shrb
fwait
rep
mov
mov
mov
push
mov
jno
aam
mov
sbb
out
ret
mulb
push
std
mov
pushf
and
dec
aad
cmc
jg
pop
dec
add
cs
inc
xor
cmp
jle
dec
aad
std
daa
cmp
or
add
movsb
sub
lea
test
push
lods
arpl
jns
xchg
cwtl
mov
xchg
jbe
test
xchg
and
mov
mov
dec
in
gs
mov
pop
mov
lahf
in
mov
or
js
dec
push
insb
cmp
fisttpll
mov
mov
jnp
mov
add
inc
jmp
sbb
push
sbb
es
repz
lods
push
test
sbbl
jbe
test
jp
adc
loopne
xlat
leave
imul
stos
pop
dec
pop
adc
inc
jmp
cld
mov
leave
in
sbb
sbb
loope
sbbl
out
popa
lcall
jb
adc
insl
js
outsl
xchg
shr
repnz
ljmp
dec
test
adc
shl
xchg
inc
cmp
or
loop
mov
jns
pusha
add
fwait
into
mov
jbe
mov
or
addr16
xchg
movsl
pop
jle
daa
dec
or
and
xor
popf
mov
push
mov
inc
add
ljmp
insl
lock
dec
mov
outsb
test
out
cli
repnz
js
push
daa
jno
enter
stc
or
bound
lds
and
out
movsb
xchg
jno
and
pop
push
repz
jl
aas
inc
andb
das
inc
lea
xor
xchg
hlt
ds
dec
mov
sbb
out
adc
outsl
push
scas
js
sub
gs
cltd
mov
mov
add
test
inc
sbb
popf
jbe
stos
cld
jecxz
xchg
lds
dec
sti
out
pop
dec
rolb
fnstsw
std
shll
xor
cmpl
add
push
push
cmp
push
aas
shlb
int3
fcoms
mov
movsl
cmpsl
mov
rcl
or
mov
xor
jle
clc
inc
push
sbb
faddl
pop
mov
add
push
add
xchg
add
fs
add
cmpsb
mov
mov
add
jecxz
stos
and
fldt
test
cmp
fildll
testb
add
lods
daa
dec
and
insb
das
mov
leave
out
push
rcl
xchg
jg
jp
mov
std
cmpsb
mov
push
push
xor
movsl
xchg
les
pop
push
adc
pop
jmp
fdivl
and
mov
inc
mov
shlb
push
aaa
into
and
mov
mov
incb
sahf
das
mov
jmp
ret
sub
jmp
pop
mov
popa
cmpsb
clc
nop
inc
push
shll
sub
jecxz
testb
leave
lret
adc
aaa
aam
pcmpgtd
bound
jbe
cmp
mov
shll
adc
xchg
cwtl
popf
mov
cli
mov
nop
push
push
add
arpl
daa
lahf
mov
jg
mov
fucomp
in
jp
mov
test
cltd
lods
je
and
sbb
hlt
cmp
iret
jmp
add
push
aam
or
in
mov
fisubl
sbb
mov
lods
cmc
ss
xor
outsb
outsb
sub
rorb
loope
call
sub
cmpsl
lret
nop
out
pop
adc
pop
dec
incb
adc
cmp
pop
or
ss
jmp
scas
pushf
outsl
int3
aas
mov
lahf
xchg
nop
daa
iret
in
ja
sub
pop
test
push
ds
push
jg
sbb
cs
sahf
mov
and
jo
push
dec
insl
xchg
mov
aaa
pop
out
jnp
jb
inc
jge
cmp
mov
mov
aam
adc
cltd
jl
outsb
sbb
push
daa
mov
mov
ja
icebp
add
outsb
adc
cmp
xchg
out
mov
mov
lds
sbb
sub
nop
les
mull
jmp
sub
pop
xor
dec
jo
push
push
rol
pop
sub
inc
divl
xchg
adc
push
int
add
ret
in
movsl
mov
mov
fwait
pop
les
lock
sub
push
pusha
push
imul
inc
and
stos
and
mov
cmpsl
jl
xchg
or
jg
jp
mov
sub
mov
pop
dec
outsl
mov
push
pusha
loopne
xor
adc
test
pushf
xchg
lea
pop
out
scas
mov
out
adcl
rorl
rcr
pop
adc
mov
mov
mov
adc
pop
test
xchg
sbb
jl
mov
notb
out
xchg
mov
mov
pop
jo
mov
leave
or
jge
jnp
lods
mov
into
loop
dec
decl
add
sahf
subl
fsts
xor
pop
lcall
xchg
outsb
pusha
mov
mov
xchg
and
dec
pop
sub
mov
das
push
cmp
out
orb
or
push
inc
js
cmp
inc
xchg
or
imul
icebp
mov
jae
fs
js
push
xchg
dec
xchg
mov
fwait
je
jl
fistpll
int
xchg
scas
icebp
pop
pusha
sbb
or
mov
repz
sub
mov
adc
or
mov
and
insw
push
xor
mov
inc
cmp
push
daa
leave
and
push
dec
push
insl
ss
bound
lea
pop
andb
lea
mov
add
sub
pop
mov
push
adc
xor
mov
test
xor
test
ss
out
scas
jo
cmp
or
ret
iret
sbbb
in
loop
adc
js
lret
inc
jbe
mov
addr16
or
fdivrs
or
and
pop
jle
dec
mov
inc
mov
inc
add
pop
jns
lods
add
leave
pop
lret
push
adc
push
daa
jmp
aaa
notl
inc
xchg
xor
push
xchg
jb
lret
add
rclb
mov
in
flds
pop
divl
jmp
popa
ret
mov
xchg
pop
adc
sbb
repz
xor
push
ljmp
je
das
aad
int
sub
adc
fcmovb
pop
sbb
shl
push
add
dec
cmp
push
dec
fstp
inc
in
mov
cld
std
xor
xor
jp
loope
push
imul
push
and
mov
call
mov
sub
pop
xchg
sahf
sbb
push
mov
pop
popf
ja
negb
cmp
cmc
jbe
mov
icebp
cmp
push
mov
mov
jmp
test
or
dec
daa
dec
loop
out
xchg
lock
repnz
xchg
jb
cmp
cmpsb
shrl
cmp
into
mov
dec
jnp
and
bound
pop
cmpsl
fdivp
mov
adc
adc
pop
cwtl
xchg
ss
push
shrl
filds
xor
mov
push
jae
shl
ja
xor
aam
mov
or
in
shlb
push
jns
sti
loopne
xchg
pop
or
int
or
jl
dec
pop
adc
stos
pop
arpl
pop
insb
push
lahf
leave
sub
loopne
mov
and
and
lea
lea
jno
push
clc
add
jae
js
in
pop
adc
cmp
int
into
jg
int
dec
fstps
idiv
mov
stos
fwait
stc
xor
cld
es
sub
jne
pop
pop
loope
push
push
push
cltd
inc
jge
lea
mov
hlt
mov
scas
dec
and
lret
pop
imul
loopne
xchg
outsb
ljmp
mov
mov
jg
hlt
cmpb
fiaddl
iret
cmp
cmpsl
mov
jb
in
dec
arpl
jecxz
jecxz
push
or
mov
lret
jo
mov
test
cli
pop
out
aad
dec
es
xor
jp
adc
xchg
adc
xchg
inc
sbb
push
or
cmp
jns
pop
cld
icebp
test
imul
daa
jns
fadd
or
lea
mov
cwtl
mov
mov
mov
sub
adc
jl
xor
cmp
cwtl
mov
sub
pop
dec
xchg
add
inc
or
pop
cmpl
in
lcall
nopl
or
sbb
call
fisttps
adc
or
push
dec
jle
cli
sub
jp
push
shrb
fbld
mov
test
cmp
ljmp
insl
cmp
cmp
popf
mov
shrl
push
push
push
lods
xchg
xchg
test
ret
mov
out
roll
fildl
cmp
jb
xlat
xorb
inc
push
or
inc
add
sub
aam
das
popf
sub
push
fdivr
mov
push
xor
mov
mov
iret
dec
cs
xor
lods
inc
push
and
mov
sbb
jp
jb
lret
and
xlat
dec
aas
push
adc
and
cmpsb
ret
push
jmp
js
pop
stos
sub
mov
ss
and
fmull
aaa
ds
sub
scas
out
push
jmp
in
xor
pop
mov
out
mov
dec
imull
push
into
outsb
sub
mov
cmp
xor
cltd
cmp
aas
xor
test
inc
cmp
insb
add
loope
or
adc
dec
shlb
out
sbb
loop
dec
xchg
inc
xchg
in
repnz
js
inc
inc
loope
dec
loope
pusha
enter
jmp
mov
cmpl
negl
ror
jb,pt
mov
out
cltd
push
push
mov
out
cld
jl
jbe
xchg
cld
jle
ret
xchg
lahf
pop
movsl
icebp
mov
pop
rorb
sarl
hlt
data16
mov
dec
cmp
push
insb
ja
sarb
insl
scas
or
ljmp
cmp
movl
jne
lret
xchg
aad
sbb
negl
cmp
xchg
cmp
and
dec
mov
mov
dec
jecxz
cmp
cli
loopne
inc
insl
jmp
lea
std
xchg
js
xchg
lret
iret
loopne
shll
pop
adc
rcll
and
std
sub
sbb
test
jae
mov
cs
sbb
adc
test
dec
sbb
stos
and
and
push
jge
lahf
dec
jge
testl
outsb
jae
stos
flds
inc
mov
sub
pop
movb
imul
mov
in
cmp
dec
mov
cmp
sub
or
sub
xchg
lret
inc
jb
mov
hlt
mov
push
or
enter
clc
push
sbb
outsl
aam
mov
int3
mov
push
push
pop
cmp
sarb
stc
cmpsl
or
and
or
sub
dec
mov
inc
fisttpl
in
add
rcrb
push
jae
add
call
ret
pop
jg
dec
scas
lcall
mov
rcl
fs
and
inc
cmpsl
sub
nop
xor
cmp
jo
and
sahf
xor
imul
lock
sub
mov
xlat
cli
out
jnp
outsl
cmc
sbb
jnp
in
nop
int3
loope
xor
xlat
cltd
pop
pop
dec
repz
out
mov
insb
inc
loop
or
filds
cmc
stos
in
aam
xor
push
cltd
loope
xchg
xlat
lcall
nop
or
into
sbb
sub
out
mov
mov
push
enter
cmp
gs
in
arpl
mov
dec
xchg
and
xlat
scas
jbe
push
aad
push
push
lea
aad
out
jle
mov
sub
push
div
rol
aas
popf
jg
repnz
cs
in
fs
jg
pop
nop
cmp
pop
les
mov
das
ja
xchg
in
popf
jb
inc
mov
mov
add
fistpll
cld
sbb
xor
xchg
in
shll
outsb
adc
dec
in
imul
fxch
jle
ret
add
inc
cmc
fildll
xchg
rorl
mov
daa
sti
fdivrl
pop
pop
fisubs
sbb
xchg
sub
insb
fildl
cmpb
sahf
das
push
mov
lahf
add
dec
insl
nop
inc
into
inc
mov
dec
xchg
aad
dec
push
sub
jnp
xchg
lea
negl
sbb
insl
sub
ror
fmuls
stos
pop
ds
movb
je
xchg
inc
add
in
push
lret
gs
addr16
in
faddl
or
add
repz
xor
call
data16
in
cs
push
out
mov
mov
ja
sub
aaa
clc
cltd
inc
xor
lret
sub
out
cmp
in
inc
ror
ds
add
add
sub
ljmp
add
je
jne
pop
add
cmp
cmpsb
leave
or
stos
outsb
pop
scas
ss
sbb
pop
addr16
fs
scas
push
scas
and
inc
jb
data16
and
inc
sti
add
stos
dec
sahf
test
stos
cld
out
pop
lods
cmp
xlat
sbb
pop
icebp
mov
or
lock
ret
je
inc
push
mov
frstor
push
sub
decl
xchg
fsubl
stc
push
js
in
cmp
or
test
or
pop
outsb
in
js
cmp
push
into
idivb
xchg
pop
mov
mov
data16
xchg
outsl
std
cwtl
cli
pop
outsb
xchg
xor
sahf
decl
sub
scas
pop
adc
cmpsb
imul
jae
dec
sbb
clc
mull
in
or
cmp
shrb
lds
inc
fistpll
aam
das
js
inc
pop
je
in
pop
loop
sub
test
and
fsubrs
bound
cmp
mov
cmpsl
mov
xlat
ljmp
in
pop
mov
sub
scas
xchg
mov
mov
adc
in
lahf
cwtl
es
or
js
push
jns
xchg
dec
inc
sbb
out
aad
cmp
bound
lcall
xor
fildl
fcompl
mov
or
mov
jne
iret
cmp
xchg
aam
jnp,pt
lret
add
addl
loopne
dec
sbb
decl
cmpsl
in
movsb
icebp
push
push
sbb
jo
mov
loope
ret
pop
inc
xor
add
or
dec
sbb
xchg
adc
xlat
js
rolb
cmpsb
sarb
dec
icebp
push
incb
nop
mov
cltd
sti
fdivl
pop
loopne
jo
test
popa
mov
movsl
mov
outsl
icebp
or
call
fsts
add
or
out
xchg
lods
stc
fs
sub
scas
shr
sbb
jae
and
mov
imul
outsl
jne
inc
push
test
int3
mov
jmp
jl
mov
mov
adc
add
popa
pop
or
cmp
pop
out
push
inc
mov
rcll
jae
pop
push
inc
std
aam
enter
mov
int
sbb
cmpl
or
ret
mov
ja
xchg
mov
jecxz
andb
stos
outsl
call
jo
inc
dec
mov
jecxz
xor
xchg
test
rcll
movlps
jmp
mov
add
or
sti
ret
loope
orl
ret
enter
add
jp
cmp
and
cmp
adc
dec
push
aaa
cltd
xor
sub
fisubl
lods
lret
pop
ret
rcll
lahf
push
movsb
inc
xorb
add
jmp
cmpsb
pop
stos
sti
pop
pop
push
movsb
jno
cmpsb
sbb
push
ud0
push
cmpsl
sbb
jae
lods
lcall
inc
es
in
in
xchg
rolb
loope
add
sub
std
gs
sti
push
dec
rep
jl
adc
insl
das
call
inc
icebp
dec
aas
nop
jmp
jge
cwtl
inc
gs
inc
mov
xor
aam
pop
fsubrs
add
pop
or
dec
jo
pause
aam
xor
bound
mov
mov
cmc
mov
leave
stos
rolb
mov
das
jno
push
dec
outsl
mov
jecxz
cltd
dec
cmp
scas
pop
ror
adc
hlt
mov
mov
call
dec
mov
and
shll
mov
inc
into
dec
or
sti
cltd
mov
movsl
rorb
rol
ds
adc
or
pop
sub
jns
mov
lods
pop
dec
lock
jmp
loopne
sbb
mov
adc
fwait
xchg
inc
mov
and
hlt
pop
adc
dec
lret
lock
xor
repz
aaa
hlt
and
ficoms
push
je
ds
testl
ret
push
dec
cmpsl
fidivs
shl
loop
test
mov
and
or
and
xorl
cmpsb
xor
rolb
add
xchg
jle
xchg
pop
pop
iret
cli
xchg
mov
cmp
call
pop
aam
mov
cwtl
lock
fiadds
xchg
lret
leave
stos
ja
cs
xchg
mov
fildll
lea
addr16
inc
cmpsl
data16
test
mov
jnp
xor
pop
inc
ds
sti
loopne
jecxz
ss
inc
insl
fcmovne
pop
scas
fcompl
mov
sbb
cmpsb
leave
mov
lods
outsb
bound
insl
lret
pop
cmp
jp
fs
pusha
mov
pop
pop
mov
mov
dec
pop
mov
mov
test
sub
inc
mov
add
aam
mov
scas
adc
mov
imul
cmpxchg
les
in
sub
movsl
jle
mov
jge
stos
sub
pop
sub
cltd
jnp
sbb
mov
in
insl
mov
jnp
sahf
les
pop
jae
test
pop
in
lea
push
movsb
dec
or
jno
into
sub
jne
mov
dec
daa
filds
add
loope
js
outsl
mov
xchg
inc
lahf
pop
mov
cmpsl
sti
out
pop
loop
mov
mov
pop
mov
popf
sub
inc
das
cmc
add
lds
xchg
xor
or
mov
aam
out
call
sti
inc
jb
jp
test
sbb
iret
gs
jnp
xchg
cmpsl
loopne
push
mov
pop
pop
pop
repz
mov
test
loopne
pop
inc
pop
xchg
push
xchg
pop
add
mov
pushf
and
in
stc
repz
xor
sbb
nop
inc
negb
mov
dec
and
mov
loope
push
or
scas
in
shlb
sbb
stos
or
fisttpll
or
ss
lcall
push
movl
jmp
mov
cmp
push
cli
or
push
mov
pop
int
pushf
insb
pushf
hlt
mov
xlat
mov
xlat
jecxz
mov
pop
dec
mov
rcrb
pop
loopne
and
repnz
sub
cmp
cmpsl
cmp
pop
out
inc
mov
mov
fcompl
ficomps
jge
and
pusha
shlb
cmp
repnz
lods
cmp
and
mov
stc
ja
mov
sub
in
xor
and
mov
cmpsl
mov
and
pop
lods
icebp
add
xchg
inc
mov
loop
les
or
mov
adc
adc
out
cmp
inc
mov
test
or
or
arpl
push
fistl
mov
lods
sub
in
scas
pop
fldt
lret
std
xchg
push
jl
inc
bound
cmpsl
addr16
jno
hlt
jno
loope
aaa
das
add
inc
pushf
stos
gs
mov
jbe
out
lock
enter
imul
pop
mov
push
imul
and
jb
push
dec
adc
jg
sarl
xor
orl
loopne
lret
imul
test
mov
int3
loope
emms
shl
add
mov
sbb
filds
lcall
or
stos
cmpsb
push
xchg
xchg
xchg
repz
mov
aaa
xchg
and
cmp
iret
int3
xorl
add
push
jbe
fcomp
adc
lods
mov
sbb
punpckhwd
sbbl
insb
shlb
lods
xchg
in
sbb
adc
add
mov
lahf
and
mov
mov
je
push
imul
testl
fists
push
inc
sbb
loope
in
pop
sarb
dec
dec
inc
xchg
mov
adc
push
dec
aad
mov
or
mov
stc
lret
fbld
sbb
mov
lods
pop
xlat
add
and
jne
push
or
add
aam
jnp
mov
arpl
cmp
jecxz
fdiv
js
int3
test
mov
push
test
in
mov
sub
add
iret
scas
pusha
test
imul
jl
mov
push
adc
test
cmp
and
fists
push
in
or
sti
cmp
in
xor
lcall
push
adc
repnz
sbb
enter
testb
enter
xor
cmpb
mov
dec
push
dec
and
mov
jmp
add
mov
icebp
sbb
mov
popa
xchg
jbe
stos
nop
out
int
cmpsl
xor
sbb
jne
les
cmp
inc
jmp
cmp
pop
mov
stc
lret
negb
movsb
xor
xchg
cmpsl
mov
nop
mov
arpl
shr
cmc
js
mov
je
ss
cmpsb
in
jg
sti
jne
xor
cmp
push
push
sub
popa
or
cmp
xchg
sub
icebp
jle
xchg
jbe
fwait
and
push
sub
pop
pusha
scas
push
xchg
xchg
jecxz
sahf
sub
movsl
push
aaa
jmp
or
cmpsb
xor
out
shrb
cmp
xchg
mov
or
movsl
mov
push
shrb
xchg
aam
sub
das
in
dec
leave
test
sub
nop
jno
orb
adc
lcall
int
xor
fsts
and
pop
shll
xor
aad
mov
mov
or
mov
adc
test
rclb
mov
shlb
loopne
cli
repnz
fwait
cmc
arpl
shll
cmp
jl
xor
es
ror
mov
push
jp
test
pop
sub
adc
pop
mov
xor
inc
dec
mov
jno
out
cmpsb
push
xchg
dec
or
out
test
or
push
cmp
pop
hlt
in
addr16
imul
insb
push
pop
pop
leave
cmp
xchg
push
pop
lcall
lret
xchg
xchg
and
hlt
fisttpl
jmp
and
ds
xor
cs
sub
pushf
mov
push
and
xlat
test
xchg
faddp
ror
mov
std
or
sbb
adc
sbb
inc
scas
jmp
mov
jl,pt
pushf
jmp
mov
mov
xchg
js
mov
inc
arpl
fsubrl
inc
dec
mull
ret
inc
icebp
xchg
shl
push
jno
pop
loop
aaa
pop
das
jmp
cltd
add
pushf
lret
nop
mov
mov
jb
fwait
xor
cmp
pop
xor
fcomps
mov
leave
pop
push
jl
fwait
mov
xchg
and
mov
and
jo
call
test
jae
icebp
add
jecxz
gs
mulb
pop
inc
and
jmp
inc
stos
mov
test
mov
xchg
jbe
xchg
sbb
shr
xor
pop
jno
ja
pop
out
test
mov
dec
hlt
jge
push
xchg
ljmp
push
add
sbb
adc
leave
test
pop
sti
push
inc
jecxz
icebp
push
sti
ja
cmp
sbb
jo
test
pop
std
addb
mov
push
push
subl
lock
sub
mov
sub
fnstenv
into
movsl
lcall
mov
cmpsb
jl
lods
das
int3
or
aad
je,pn
jbe
ljmp
and
test
int3
repnz
je
jns
lods
mov
sbb
test
pop
pop
outsb
jge
inc
inc
pop
daa
add
jle
sub
dec
add
xchg
pop
roll
mov
mov
ret
scas
xor
out
repnz
adc
push
les
iret
aas
push
sub
stos
cltd
jnp
mov
mov
xchg
push
mov
out
dec
push
cli
sbb
sub
xor
cmp
sub
lret
add
adc
and
insl
push
lret
es
in
lock
jne
mov
ljmp
loope
and
inc
jno
fnstenv
pop
int
rol
in
and
xchg
bound
lcall
sub
inc
mov
push
cmp
sbb
xchg
test
sbb
adc
xor
pushf
xor
jns
lahf
xchg
push
and
push
insl
addl
in
xchg
pop
insl
cmp
leave
xlat
and
inc
mov
or
mov
popf
add
sub
cmpsb
sub
loopne
sti
test
pop
repnz
mov
cld
jbe
in
sub
adc
push
sub
rcrb
adc
sbb
or
out
mov
ret
fcompl
push
cmp
lds
test
mov
cmp
ret
aad
sbb
cs
repnz
popf
push
pop
das
or
sbb
or
ja
addr16
pop
mov
mov
orb
sbb
stos
iret
and
adc
mov
jp
jne
cs
add
mov
xbegin
xchg
test
inc
negb
lahf
lods
ja
inc
js
test
imul
fidivrl
fcomi
xchg
std
fwait
gs
rol
sbb
pop
mov
lret
jecxz
sub
in
jae
sub
popa
out
add
jp
test
insl
popa
das
push
inc
cmpsl
mov
add
aaa
sbb
mov
cld
xchg
lret
jo
lcall
das
sbb
out
or
leave
les
mov
and
lret
lea
nop
rorl
mov
dec
aaa
mov
pop
add
in
data16
sahf
mov
inc
add
dec
outsb
bound
andb
sahf
push
adc
aaa
mov
fisubl
inc
insl
stc
dec
mov
xchg
scas
mov
pop
adc
repnz
stos
insb
push
dec
test
int
in
sbb
scas
fidivl
arpl
mov
mov
mov
leave
repz
cmp
out
insb
cmpsl
pop
adc
xor
mov
cltd
adc
repz
dec
roll
dec
loope
push
push
adc
jne
clc
and
outsl
mov
sbb
mov
pop
inc
jl
xor
mov
push
je
adc
loopne
push
test
xchg
jne
sub
sub
sub
aad
and
insl
fwait
aad
test
sub
mov
adc
pop
testb
fstl
cld
lret
push
pop
ret
mov
enter
jl
fimuls
mov
xor
cmp
sbb
imulb
adc
jp
mov
add
hlt
adc
cld
pop
jbe
aam
out
or
cltd
dec
xor
push
gs
dec
adc
jl
xor
inc
int
mov
xchg
imul
and
in
push
mov
sbb
add
mov
and
jnp
in
hlt
dec
cwtl
mov
idivb
mov
test
mov
mov
and
cs
adc
pop
mov
pop
pop
adc
push
pop
out
mov
push
xor
int
sub
xchg
out
and
jmp
xor
test
mov
xor
pop
jp
mov
aas
fnsave
dec
ss
fmuls
sub
out
popa
inc
xchg
jle
cltd
and
sub
jb
inc
sbb
mov
inc
adc
cmc
sub
je
add
repnz
pop
cmp
jle
pop
mov
movsb
mov
fs
mov
into
or
shrl
rcl
mov
lds
loop
loope
repz
add
aam
rcll
je
out
pop
push
lcall
iret
push
jae
dec
cmp
fsubrl
lret
push
cmpsl
cmp
loopne
dec
test
xor
dec
mov
push
gs
cs
sub
jg
xor
cmpsl
iret
xor
jns
loope
sbb
add
leave
jb
js
cld
push
ljmp
sub
jl
xchg
in
xchg
push
dec
int
jno
ds
popf
das
sub
pop
pop
mov
in
push
sbb
repz
cmp
loope
roll
sbb
mov
sbb
adc
test
sti
dec
inc
decl
daa
in
out
inc
xchg
pop
push
xchg
pop
adcb
test
mov
adc
or
scas
jmp
and
mov
dec
loopne
mov
mov
les
je
jo
jae
xorl
jno
jns
pop
pop
xchg
sub
xor
or
xor
add
rcr
out
idivb
xchg
mov
adc
jmp
dec
mov
ds
loope
adc
push
jne
mov
cmpsb
test
jnp
fwait
rcrl
jg
sbb
and
call
mov
jecxz
mov
mov
xchg
sub
iret
popf
jne
test
sbb
mov
jne
movb
jnp
pop
in
xchg
int
jp
frstor
sbb
add
and
dec
inc
fsubr
out
push
and
pop
lret
jecxz
add
fsubrl
cmc
call
pop
ret
fwait
and
cld
call
dec
stos
lea
and
jae
xchg
sbb
mov
xor
cmp
jae
das
popf
fs
pop
push
sbb
jno
test
mov
rcrb
jle
inc
mov
mov
int
into
outsl
and
scas
mov
xlat
lahf
sti
and
or
push
xchg
ror
mov
adc
pop
adc
mov
enter
xchg
testb
jle
adcb
repz
testb
in
xchg
test
jae
loopne
movsb
mov
je
ror
dec
nopl
adc
inc
mov
ljmp
mov
xor
nop
sbb
sub
dec
ss
jbe
enter
sub
icebp
jl
xorl
or
jnp
adc
adc
dec
shlb
test
mov
jecxz
cmp
movsb
sub
daa
das
out
mov
xchg
add
out
sub
and
aam
sub
pop
add
cmp
sbb
sti
insb
and
sub
push
nop
sti
into
jmp
leave
mov
push
push
mov
iret
adc
xchg
pop
and
cmpb
and
or
push
fldcw
adc
sub
jns
and
popa
cmpsb
and
push
mov
cltd
pop
adc
push
push
clc
ret
xor
push
sbb
cmp
test
dec
pop
and
mov
mov
insb
mov
adc
xor
cmp
mov
jp
aad
test
rorl
or
or
add
out
into
or
dec
shlb
ret
jnp
rcl
rep
dec
pop
xchg
fnsave
stos
jecxz
lret
xor
rcr
jge
pop
pop
jae
hlt
sbb
jbe
fwait
push
adc
jp
dec
sbb
or
hlt
mov
dec
dec
and
jg
and
mov
push
cmp
fldt
xchg
popa
loop
scas
cmc
loop
shlb
push
add
rolb
add
lods
xor
mov
test
mov
push
cmc
mov
sbb
movsl
mov
adc
mov
xor
fcom
push
jns
lock
dec
pop
push
cmpsl
push
jle
les
test
leave
fisttps
xchg
pop
pop
stc
dec
xor
hlt
mov
sub
xor
fnstenv
stos
shll
fprem1
mov
data16
sti
xchg
test
inc
inc
dec
addr16
xchg
and
mov
cmc
push
cwtl
pop
jg
add
nop
pop
icebp
jecxz
in
pushf
mov
decl
xchg
dec
xchg
xchg
xor
jnp
fstl
insl
clc
lds
rorl
pop
leave
and
sbb
xchg
and
xchg
pop
jne
mov
lahf
scas
cmp
test
mov
imul
inc
and
dec
fnstcw
popf
xor
and
or
jno
xor
inc
int
dec
cmp
test
mov
into
cli
pop
adcl
addb
add
jle
jle
lcall
inc
dec
xor
in
adc
in
sub
jmp
ja
das
jae
adc
roll
fnstenv
xchg
out
xlat
loopne
sti
add
add
insb
xor
mov
cmp
sub
test
out
inc
add
mov
mov
mov
push
cmpsb
leave
das
xor
ret
push
adc
inc
js
push
rolb
icebp
pop
inc
jp
les
add
jecxz
lcall
or
add
mov
mov
imul
mov
inc
into
or
lock
ljmp
lret
mov
rorl
repnz
jbe
mov
mull
jns
dec
pusha
push
loope
insb
xchg
stos
pop
push
adc
sarb
sbb
ss
inc
jmp
adc
sub
jae
fstpt
enter
int3
dec
iret
dec
icebp
repz
adcb
mov
pop
repz
xlat
dec
xchg
sub
cs
sub
js
fcoms
sub
mov
mov
mov
xor
test
or
xor
mov
pushf
faddp
pop
mov
mov
cmpsl
jmp
out
fcoms
testb
into
push
and
cmpsb
jl
sbb
call
sbb
loope
sahf
adc
push
inc
pop
mov
js
add
decl
add
jl
out
jo
fistpll
jl
and
ror
sti
mov
in
xor
movsl
imul
jmp
pop
in
jge
mov
mov
in
test
xlat
mov
ret
add
inc
stos
inc
mov
rcl
out
shl
xlat
and
movsb
dec
or
cmp
negb
icebp
mov
fwait
xor
imul
aad
pop
fs
pop
test
and
xlat
jmp
jae
bound
test
sub
ret
adc
xor
jmp
cmpsb
cmc
gs
inc
icebp
xor
inc
jge
nop
data16
fs
cmpsb
shlb
jecxz
push
xor
lcall
cmpl
mov
fidivrs
inc
mov
bound
imul
cltd
or
jae
popa
adc
pop
enter
fisubrl
inc
daa
je
jle
xlat
cmp
push
push
orl
mov
cltd
jl
jno
dec
dec
shll
hlt
lds
imul
in
ljmp
out
lds
stc
fwait
push
adc
cld
sub
aaa
fwait
iret
mov
dec
divl
push
out
ljmp
inc
pop
sar
inc
movsb
sub
lds
dec
mov
xchg
outsl
inc
divb
add
iret
jb
insl
imul
lods
outsb
cmpsb
gs
jg
mov
push
xchg
sub
cmc
xor
ljmp
dec
xor
and
jns
nop
cmp
ds
cwtl
dec
dec
sub
fsubs
mov
mov
inc
mov
test
xchg
imul
andl
stos
adc
test
pop
fiadds
pop
cmp
dec
jns
and
shll
sbb
in
cmc
mov
stc
xchg
ret
imul
das
or
movsl
adc
lods
or
lahf
pop
pop
es
xchg
ds
repz
xor
ss
insb
and
stc
mov
rcrl
sbb
out
mov
xchg
pop
popf
movsb
fiadds
mov
xor
lock
daa
es
mov
sub
jp
cmpb
callw
out
dec
inc
rol
cmpsb
js
pusha
pop
notl
movsb
jl
xor
inc
les
mov
add
fidivl
jno
mov
dec
jbe
icebp
daa
mov
ret
fs
cli
arpl
sub
cs
daa
stos
push
or
adc
scas
or
popa
sbb
addr16
aaa
and
aam
shl
rcll
xchg
iret
scas
int3
roll
sti
push
mov
add
sbb
sbb
xchg
lahf
js
lret
aas
arpl
insb
mov
sub
int3
fldl
adc
repz
xchg
aad
mov
mov
jle
les
sbb
jnp
sub
inc
push
mov
int3
call
cwtl
cmpsl
lock
or
adc
dec
lahf
lds
outsl
xchg
fdivrl
lret
popa
jno
jne
or
jl
outsl
cmp
mov
mov
add
xchg
sbb
fmuls
jno
sub
jl
sbb
or
fdivl
xchg
test
mov
cwtl
lods
ss
jecxz
scas
scas
cmp
jns
pusha
loopne
cld
push
lret
stos
out
and
std
mov
popf
and
sarl
adc
dec
or
add
pop
in
popf
jne
dec
scas
imul
adc
movnti
dec
ja
fwait
inc
or
add
sbb
add
fimuls
mov
sbb
cmp
cli
adcl
jl
les
xor
lods
imul
cld
xorb
mov
lods
pushf
movsb
push
jae
lret
jae
jle
mov
jns
push
out
addl
clc
bound
vmovdqu
hlt
rcl
test
test
push
call
cmp
push
repz
shrb
mov
pop
scas
call
cmp
int
lret
clc
dec
lahf
cmp
pop
std
cmpb
xor
sti
push
push
leave
dec
push
std
sahf
imul
sub
popa
outsb
xlat
int3
repnz
mov
mov
fwait
adc
sub
cmpsl
sbb
pop
mov
pop
jo
pusha
xor
mov
idivb
fistl
ficomps
push
push
ss
mov
and
pop
pop
and
jae
adc
sub
inc
jae
jp
mov
shll
or
shlb
clc
ficompl
mov
ja
pop
dec
int3
sbb
push
imull
push
jno
pusha
jecxz
mov
enter
testb
sbb
sarl
jge
test
test
faddl
adc
pop
cmp
call
xchg
test
je
xchg
xchg
pop
scas
inc
outsl
mov
pop
dec
sbb
lcall
mov
dec
mov
movsl
pop
arpl
xchg
imulb
lret
js
add
lds
fyl2xp1
jl
rcr
lret
sub
mov
cmpsb
mov
push
mov
pop
dec
into
enter
std
stos
mov
test
jo
cmc
popa
popl
ljmp
or
dec
and
inc
ds
add
aam
inc
loope
gs
or
push
mov
xor
hlt
ret
out
in
pop
cmpsb
jle
dec
jb
scas
vpmacswd
and
dec
stos
inc
add
stc
cmp
addr16
adc
or
add
xchg
xor
jnp
enter
out
mov
call
call
xchg
cs
xchg
or
add
inc
xchg
test
dec
mov
imull
dec
rcrl
push
in
arpl
mov
or
xor
mov
sbb
dec
fsubs
xchg
lds
adc
mov
dec
or
mov
aam
xor
sar
js
insl
inc
lret
insb
lea
hlt
and
lret
loop
popl
mov
aas
jne
in
mov
and
inc
mov
mov
xor
repnz
jl
add
test
pop
xor
xor
fldenvs
mov
test
jae
mov
lds
push
mov
xor
popw
adc
add
dec
jp
push
out
ss
jns
push
push
cmc
xor
cmp
adc
and
push
int3
loope
jne
call
mov
mov
push
add
fstpl
push
cmp
sub
cmp
pop
sub
pusha
mov
jecxz
out
xchg
push
ror
aam
cld
in
xor
in
cmp
fdivrl
les
andl
add
lds
enter
jecxz
and
xor
jne
icebp
mov
push
lret
lret
or
pop
push
dec
mov
loop
pushl
aas
cmp
jno
out
push
mov
int
and
dec
mov
stc
push
xor
cld
or
je
ret
cmc
hlt
fiadds
ret
movsb
gs
ss
adc
jmp
jp
push
icebp
hlt
jmp
arpl
or
xchg
fwait
sub
mov
repnz
dec
xchg
sbb
aaa
sbb
inc
xor
pusha
push
subl
inc
xor
push
int3
fwait
mov
jns
mov
xor
jns
loope
mov
popf
sub
out
adc
or
dec
repnz
ljmp
sub
sbbl
mov
or
insb
mov
sahf
and
mov
filds
ss
stos
adc
add
aad
cmp
xchg
jl
jne
push
lcall
dec
mov
mul
fs
adc
sbb
xor
mov
dec
ja
arpl
inc
cli
cmp
popf
fwait
mov
pop
pusha
in
cmp
adc
lds
xor
scas
out
or
pop
dec
and
xchg
bound
push
mov
dec
jb
adc
dec
and
cld
add
adc
dec
aas
xchg
imul
aad
loopne
fwait
bound
sub
jo
fsub
ljmp
xchg
sti
bnd
jmp
or
jns
lock
jg
in
mov
cmpsb
push
xor
inc
lods
stc
mov
les
jno
adc
icebp
dec
jecxz
push
shlb
sbb
into
out
popf
sti
out
dec
call
push
xor
add
rclb
jbe
dec
sbb
ds
movsb
fwait
pop
inc
test
loopne
jno
inc
xchg
mov
mov
inc
in
pop
sarl
ja
addb
fwait
lods
mov
mov
jo
push
push
shrl
aas
inc
sub
push
cmp
lahf
iret
arpl
shrb
jo
aaa
cmp
jnp
fdivrs
movl
pop
sub
dec
int3
sub
je
sbb
push
xchg
stos
in
xchg
cmpsl
movb
sbb
adc
lret
pop
arpl
pop
loopne
hlt
stc
sub
pop
pop
pusha
add
mov
cmc
lods
jne
xchg
push
rol
pop
rol
cld
push
mov
repz
jae
push
rol
jnp
mov
dec
xchg
push
je
jno
sub
sbb
adc
pop
jge
cmp
pop
pop
mov
mov
push
filds
push
jmp
push
pop
dec
outsl
xchg
push
cmpsl
inc
lcall
sti
adc
or
int3
aam
xchg
iret
sahf
stos
test
sahf
cld
data16
cmp
adc
repz
pop
imul
add
jb
mov
stc
arpl
and
lret
jns
dec
mov
test
adc
ss
int
dec
cltd
icebp
or
adc
adc
mov
mull
xchg
jbe
repnz
mov
out
leave
lahf
pushf
and
repnz
movsb
jmp
pop
dec
push
inc
js
add
xor
push
lea
hlt
adc
dec
pop
insl
outsb
scas
push
mov
xlat
jne
aam
fcomi
or
sub
je
add
cli
jae
ljmp
loopne
enter
xchg
push
add
add
aas
dec
mov
jp
push
cwtl
lods
mov
insl
aaa
pop
in
fsubrl
mov
pop
lret
in
add
clc
adc
test
jno
push
and
xchg
lds
cmc
ljmp
jg
mov
popf
inc
int
xor
xlat
jge
push
fsts
xbegin
pop
daa
xchg
pop
aas
xchg
or
std
call
out
sub
outsb
lds
mov
stos
addb
push
pop
shrb
xor
pop
dec
dec
out
mov
mov
sbb
test
mov
bound
sbb
fists
out
jnp
adc
xor
mov
mov
jns
push
add
mov
imul
out
cmpb
mov
fstpl
ljmp
push
xor
mov
pop
pop
fisubs
js
add
sub
push
push
std
dec
addl
mov
shlb
push
outsl
test
mov
outsl
in
mov
adc
shlb
inc
inc
scas
pop
jg
pop
clc
push
push
push
push
not
sub
pushf
lret
inc
fstps
aad
ret
mov
fstl
xor
inc
cld
xchg
sahf
das
inc
ret
nop
mov
mov
pop
loop
jmp
mov
mull
repz
ja
inc
shll
push
xor
scas
xorl
out
push
into
call
jnp
pop
mov
stc
cmpsl
pop
in
ss
popf
std
mov
test
add
imul
mov
mov
jae
jle
repz
fs
adc
mov
cmp
scas
out
jmp
ret
mov
or
jmp
xchg
cmp
mov
jp
push
cmp
xchg
jno
ss
xchg
ret
fcmovnb
mov
sbb
ljmp
cmp
ret
ljmp
fdiv
cmp
dec
xchg
sarl
pusha
test
ficoms
mov
in
mov
adc
ja
cmp
test
int3
mov
inc
push
cmp
jmp
adc
repz
jge
addr16
scas
sbb
push
aas
dec
sbb
ffreep
loop
dec
mov
mov
pop
in
push
fisubrl
cmp
xor
jae
push
sbb
notb
lods
xchg
test
fs
xor
int
mov
mov
xchg
push
clc
mov
jmp
cli
ret
jns
popf
fcomp
das
jo
adc
jns
pop
movsl
push
out
pusha
loope
call
das
sub
in
pop
push
mov
ret
jp
in
adc
test
push
mov
inc
sub
ljmp
fadds
cmpsb
sbb
outsb
fwait
call
cmc
inc
jae
add
into
xor
pop
mov
dec
fmuls
dec
cmp
int3
mov
jl
push
push
add
cwtl
jbe
pop
dec
xchg
ffree
bound
pop
inc
jl
fwait
dec
and
sub
mov
sub
push
jp
shlb
mov
out
psrad
es
push
adc
mov
add
pop
lea
int3
mov
insb
xor
add
xor
xor
hlt
push
or
cmp
fimull
movsl
inc
cmc
cwtl
arpl
sub
ret
jo
xor
ficoms
nop
pop
js
add
cmp
test
pop
leave
adc
out
ret
mov
push
lock
and
testb
lret
shr
fisubrl
decl
sbb
movsl
ret
int
xor
inc
mov
pop
ja
add
xchg
inc
jl
rol
das
xchg
add
enter
imul
int3
xor
sub
sub
lock
adc
cltd
loope
inc
jle
ljmp
sarl
es
jne
adc
jbe
pop
repz
xor
pop
jno
mov
cmp
fisttps
lods
pop
js
dec
gs
das
mov
push
ljmp
ljmp
mov
fbld
pusha
pop
inc
push
das
sub
sti
test
pushf
jmp
sbb
xlat
ret
pop
popa
repnz
gs
lods
cmp
enter
adcl
adc
imul
stos
jns
fsubrs
dec
pop
push
test
add
sub
sub
mov
or
test
cmp
in
push
adc
cmp
stos
test
mov
mov
loop
adc
lret
test
inc
loopne
imul
cmpsb
shr
mov
mov
aam
test
js
jnp
loop
mov
insl
repnz
pop
ffree
loop
dec
jg
sti
push
call
pop
and
push
cmc
cmpl
pop
push
cld
ret
fcmovbe
out
jg
data16
cwtl
and
imulb
fmuls
push
push
cltd
jmp
cmpsl
test
mov
pushf
jnp
or
dec
push
jp
jne
add
pushf
cld
jo
adc
fsubr
rol
inc
mov
mov
pop
imul
out
inc
fsubs
data16
stos
inc
fistpll
fidivl
and
das
mov
adc
and
inc
or
xor
ljmp
rorl
pop
dec
movsb
in
push
and
jg
ret
stc
pop
xor
add
iret
push
jae
adc
je
cmpsb
mov
sbb
xchg
xor
xchg
je
push
arpl
gs
pop
imul
stos
outsl
push
sub
imul
shlb
add
enter
mov
fsubl
xor
icebp
mov
push
mov
fcomi
cmp
adc
dec
jb
inc
jle
mov
gs
jge
dec
imul
nop
ss
mov
sbb
inc
dec
sub
add
push
fstpt
xchg
pop
aam
into
mov
pop
xlat
adc
shl
frstor
outsb
scas
jmp
cmovns
mov
fstp
jecxz
xchg
add
data16
push
push
push
jge
das
notb
cmp
and
loop
inc
int
mov
in
out
fsubrs
int3
dec
push
inc
out
push
je
cmp
mov
add
xchg
jns
mov
cli
xchg
dec
dec
push
and
int3
inc
mov
push
repnz
ss
into
add
aad
test
dec
aaa
push
mov
jp
pusha
xchg
jbe
inc
cmpl
adc
mov
jmp
adc
jmp
inc
mov
mov
cltd
sahf
push
adc
dec
imul
aad
pop
add
leave
jb
out
sbb
mov
cmp
mov
mov
jl
push
mov
repz
in
sub
dec
mov
pop
imul
cli
or
mov
xor
xchg
lret
test
jmp
cld
iret
xor
fsubr
sbb
out
xor
sub
movsb
jle
jbe
fwait
mov
mov
dec
aas
aas
rcr
cmp
inc
or
outsl
xchg
pop
clc
pusha
mov
mov
std
xchg
lcall
sub
sti
mov
mov
mov
xchg
test
pop
mov
push
lock
or
dec
jp
pop
jo
cmp
adc
add
lcall
pop
adc
ret
lods
shlb
dec
jb
sbb
push
add
and
cmp
popa
jbe
stos
loopne
xor
das
push
sti
cltd
faddp
pop
mov
mov
push
gs
cmp
dec
or
sub
sub
mov
mull
cmp
popa
lcall
dec
sub
mov
rclb
arpl
inc
mov
or
or
adc
pop
jp
jo
inc
adc
cmp
xchg
mov
int
mov
mov
test
push
mov
jg
adc
xchg
adc
pop
inc
roll
pop
cmp
push
and
inc
shll
mov
push
shll
leave
add
cli
sbb
inc
sbb
je
sti
cmpsb
fcmovnu
aam
cmp
inc
adcl
jae
je
sub
movsb
dec
dec
adc
std
out
ljmp
sub
arpl
mov
inc
jp
jecxz
cwtl
xlat
xchg
mov
xchg
inc
fisttpll
xchg
fidivl
shrb
push
fs
nop
fadd
jbe
or
dec
pop
into
sti
loopne
sub
jl
mov
xor
cli
xor
out
js
mov
test
insl
rolb
or
cmc
add
mov
dec
xchg
sub
adc
push
xchg
jp
sbb
test
ss
xchg
test
xor
sub
cli
scas
divl
mov
arpl
xchg
adc
xor
test
pop
fdivl
test
or
out
outsb
inc
in
xchg
jae
dec
mov
xor
aas
fcomp
daa
movsl
fidivl
mov
cmp
scas
cmpsl
push
in
inc
mov
mov
fisubs
push
int3
shlb
dec
mov
xchg
add
leave
or
dec
dec
or
into
out
and
sahf
pop
sub
dec
dec
call
and
test
enter
jle
jge
cmp
push
cmp
addl
aas
out
push
mov
mov
std
push
imul
inc
aas
pusha
mov
imul
lea
pop
and
mov
arpl
sbb
push
adc
jae
pusha
push
jecxz
or
mov
lret
jge
push
mov
sub
std
push
daa
or
insb
das
mov
subb
loopne
mov
je
rcrl
dec
sbb
sub
enter
adc
pop
push
cmp
repz
fwait
push
push
addr16
orb
and
gs
pop
dec
xchg
xor
fmuls
add
fisubrs
jmp
and
add
cwtl
roll
stos
out
sub
sub
sub
mov
push
sbb
jnp
fistpll
call
pop
lods
outsl
pushf
jg
or
test
stc
iret
sbb
outsl
repnz
adc
fcmovnu
scas
subl
movsb
and
cli
int3
test
sub
sub
adc
sti
outsl
or
out
mov
das
or
cmpsl
test
push
fstpt
out
lds
inc
add
push
pop
sub
push
arpl
dec
adc
xor
testb
fdivs
mov
jle
jbe
sbb
mov
xor
pop
insl
fimull
inc
or
in
jl
out
pop
push
sub
test
xor
lcall
call
out
inc
sahf
pop
pop
fcompl
xchg
pop
xchg
xchg
je
je
sar
shll
lods
push
lea
pop
cmp
jne
test
daa
rorb
lahf
xor
inc
into
into
mov
test
cmp
mov
gs
stos
xor
push
inc
mov
cmp
add
inc
std
jo
dec
shlb
pop
push
into
adc
pop
pop
cmc
pop
int3
xor
xchg
js
aad
add
dec
inc
jne
ja
push
into
mov
arpl
and
push
repz
mov
lods
fs
pop
mov
shrb
inc
sub
fistl
inc
cmp
xor
xchg
andb
add
in
xchg
movsl
lea
dec
mov
sbb
xchg
push
pop
fiaddl
movsl
clc
mov
inc
fsubl
sbb
xchg
clc
dec
pop
push
sbb
cwtl
enter
pop
jbe
cmpsl
stc
pop
sub
in
popf
popa
sbb
dec
mov
xchg
pop
imul
cmp
das
cmp
pop
aad
lahf
sub
inc
xchg
add
or
sbb
add
push
or
mov
test
mov
lods
inc
in
push
inc
mov
adc
sarb
xor
sub
lahf
out
cmp
lock
jmp
inc
sub
cmp
movsb
inc
dec
movl
jae
cmpsl
push
cmc
adc
push
mov
idivl
adcl
jbe
loopne
int
imul
divl
jno
rorl
mov
cmp
scas
xchg
dec
push
jno
sub
push
cmp
loopne
sub
sub
lret
addr16
push
daa
mov
sbb
or
lock
xlat
movsb
aas
push
pushaw
add
cmp
int3
outsl
or
jp
mov
repnz
pop
fisttpl
mov
add
and
and
loopne
in
pop
cmpsl
or
push
xor
ret
mov
dec
insl
mov
add
fnstsw
inc
xchg
mov
cmp
push
out
or
cld
pop
in
mov
xor
es
push
daa
scas
movsb
out
or
push
add
bound
mov
jge
scas
add
in
or
loope
sbb
stos
lods
push
mov
insb
and
enter
notl
sti
cmp
lret
fistl
in
pop
gs
addl
mov
fwait
out
cli
enter
add
mov
cmp
mov
aas
cmp
int3
push
jl
call
sbb
lret
out
mov
jg
scas
sub
into
orl
in
adc
outsl
lcall
inc
aam
and
adc
mov
lods
out
mov
cmp
mov
hlt
mov
xlat
adc
inc
cmpsb
out
cltd
and
loopne
xor
pop
adcb
mov
loope
xor
xchg
pusha
fidivl
outsl
add
out
dec
icebp
out
push
cmp
mov
push
cmpsb
xlat
scas
cmp
dec
ja
and
rclb
enter
or
push
in
pop
pop
stos
pop
inc
iret
in
mov
enter
cwtl
inc
mov
lcall
test
lcall
into
mov
mov
fs
outsl
lods
insb
inc
jecxz
int3
jecxz
arpl
jecxz
xor
js
icebp
mov
mov
xchg
cmp
dec
fldl
mov
mov
jge
jo
adcb
dec
sahf
dec
inc
loop
outsb
sbb
testl
cmp
cmpsb
push
jl
imul
gs
jge
into
popf
sbb
xor
pop
shrl
int3
xchg
pop
inc
subb
ret
fildll
dec
ljmp
lods
sbb
pop
dec
mov
pop
or
push
aas
cltd
ja
leave
mov
dec
pop
sub
xchg
mov
mov
inc
test
cmp
in
mov
stos
sarb
jnp
adc
mov
sbb
call
add
ja
insl
enter
xchg
push
xor
and
jae
popa
ds
out
inc
xlat
insb
pop
mov
lods
mov
fildll
les
push
mov
sub
cli
test
ja
xchg
sbb
jne
jae
test
nop
and
cmp
movsb
push
out
in
inc
xor
jno
inc
data16
popa
lods
outsl
pusha
and
lret
fcomps
adc
imul
cmpsl
scas
jnp
cltd
scas
inc
mov
or
cld
clc
je
push
push
or
or
fisttps
jmp
xor
aam
jo
fcomi
fildl
out
mov
into
add
cmp
jo
push
pop
mov
fstpl
fimuls
clc
and
ja
lret
mov
jno
stos
js
add
fisttps
rclb
ret
cmp
lret
jbe
pop
lret
cmpsb
xchg
ss
ja
jnp
or
mov
scas
mov
mov
inc
sbb
leave
inc
out
loopne
loopne
fsubp
movsl
sub
mov
xchg
jnp
lahf
pusha
dec
fs
out
sub
fstpt
jg
popa
fs
rcl
les
push
mov
dec
add
mov
leave
mov
aaa
cltd
push
outsb
jle
rorb
mov
jbe
imul
addr16
stos
sbb
ja
jo
mov
push
mov
mov
push
pop
xlat
or
pop
mov
and
add
pop
pop
iret
fnstcw
dec
insl
lods
fldt
sbb
addr16
or
arpl
cs
or
adc
pop
les
xchg
and
fstps
ljmp
outsl
sarl
or
and
or
sub
sti
jno
sahf
xlat
cmp
xchg
push
out
call
mov
pop
add
sbb
inc
or
adc
sub
pop
in
fmul
push
scas
aas
outsl
or
mov
stc
push
inc
shr
pop
xchg
loope
pop
cmpsl
jne
mov
call
sbb
cmp
mov
add
or
mov
ret
push
out
sub
pop
call
push
lahf
lods
adc
jg
or
or
sub
ljmp
cmp
ret
push
loope,pn
pop
stc
je
jl
outsl
enter
jno
push
jp
mov
stos
lea
xlat
mov
movsb
repnz
fcoms
fmul
and
jbe
cmp
ja
fadd
decl
mov
mov
adc
inc
out
mov
mov
cltd
push
shl
and
es
in
ja
add
into
in
call
mov
pop
inc
sub
shlb
mov
dec
mov
loope
repz
loopne
test
and
test
sahf
ss
xchg
fisttpl
pop
push
negb
jne
clc
sub
adcl
dec
shll
mov
xchg
dec
inc
arpl
loop
and
mov
aad
jle
push
sbb
mov
subb
push
stos
jbe
dec
testb
insb
aas
dec
mov
adc
loopne
and
dec
sbb
and
pop
sbbl
arpl
xchg
pop
jp
subl
or
mov
mov
lret
lock
adc
out
flds
xchg
mov
or
mov
cli
aaa
fimull
mov
mov
jb
insl
insl
jg
xchg
mov
xor
mov
sbb
xchg
mov
cmp
pop
jg
jbe
js
mov
sub
pusha
stos
inc
push
stos
push
and
push
push
cli
int
lea
sub
mov
stos
xor
add
gs
test
outsb
out
aas
jecxz
adc
mov
aas
mov
mov
in
xor
shll
mov
lahf
jle
sub
cs
xchg
scas
dec
and
jb
add
test
xchg
jmp
mov
dec
mov
jns
add
dec
adc
inc
xchg
in
icebp
in
adc
andl
cld
outsb
cltd
jge
out
mov
or
or
dec
fs
aam
jns
push
inc
mov
jbe
cmp
and
mov
sub
push
repz
mov
ss
repz
sbb
fbstp
mov
mov
mov
lods
jbe
dec
testb
shr
mov
pop
xor
sbb
addb
out
push
mov
lock
mov
sar
mov
inc
cmp
or
insl
stc
xchg
and
and
in
setno
lret
dec
lods
jmp
mov
inc
stos
push
aaa
int
push
call
sti
push
push
rol
leave
add
jne
ffreep
test
pop
hlt
scas
jge
cmp
addr16
out
sahf
cmp
jp
in
and
adc
fiaddl
adc
mov
xchg
pop
push
pop
cmp
pop
gs
add
mov
mov
rcl
das
pop
sti
gs
mov
fcoms
xor
xchg
sub
mov
sub
loopne
mov
ret
test
lock
loope
add
addr16
outsb
je
int3
pop
cmp
mov
dec
add
js
mov
adc
jl
xor
pop
lock
or
popa
hlt
pop
sarl
jge
mov
mull
into
mov
scas
and
push
cmp
adc
xchg
inc
sub
je
popa
movsb
cltd
lcall
pop
insl
cmp
cmp
adc
push
fsubr
jnp
lods
xor
push
sbb
pop
jno
mov
push
into
push
aad
test
aam
data16
pop
nop
push
lea
xor
xor
lods
jae
shl
test
jmp
outsb
mov
lcall
sub
sahf
pop
jl
mov
xchg
pop
pop
or
xchg
xor
pop
push
int
sub
idivb
mov
xchg
push
cmc
xor
pop
pop
icebp
les
rcrb
fidivs
std
jp
hlt
test
pop
inc
lret
push
stc
pushf
popa
xor
lret
mov
insl
mov
mov
inc
ja
inc
ds
scas
clc
arpl
test
popa
pop
jb
adc
jl
mov
push
mov
xor
lods
les
mov
orl
loope
lods
ss
pusha
mov
or
shll
jge
add
lcall
dec
out
inc
sub
add
adc
cli
mov
cmpsl
iret
mov
outsl
scas
adc
jbe
gs
push
rolb
imul
stos
aaa
dec
cmpsb
cbtw
lcall
and
dec
and
mov
lret
rcll
sub
daa
jle
xor
out
ljmp
and
mov
dec
bound
es
push
addr16
add
loop
fmuls
and
add
repz
jnp
sub
fsubs
std
fwait
lret
lea
or
mov
mov
ret
sbbl
xchg
repnz
push
lods
xchg
mov
stos
loopne
aas
nop
pop
push
pop
gs
sbb
push
in
mov
push
mov
xor
jbe
xchg
mov
sahf
xor
mov
push
sbb
pop
add
adc
or
mov
dec
in
xor
imul
js
insb
test
sahf
add
pop
dec
scas
sub
jg
cltd
pop
xchg
shlb
inc
addr16
push
lret
xor
dec
out
stos
mulb
test
lahf
mov
cmp
lahf
testl
and
shrb
sub
mov
loop
inc
out
or
push
pop
inc
dec
lcall
jo
push
inc
lds
gs
andl
addb
je
add
loope
adc
cmpsb
jbe
test
lahf
pop
addl
pop
mov
or
adc
push
pop
push
das
and
in
sahf
ljmp
mov
lea
and
xchg
in
and
jecxz
sub
xor
adc
inc
add
adc
shlb
shlb
push
int
aam
add
inc
out
loope
sbb
fadds
push
cld
mov
mov
sub
mov
dec
add
jo
sub
and
inc
mov
adc
add
inc
sbb
and
cmp
idivl
hlt
xchg
addr16
mov
sbb
dec
es
rolb
lea
and
rcrb
mov
or
mov
jge
outsb
cld
add
sub
fdivrl
popf
outsl
icebp
adc
inc
subl
mov
scas
mov
out
je
rorb
sahf
push
inc
test
xchg
xchg
fwait
inc
pop
xchg
outsl
pop
pop
fistl
je
out
xchg
mov
mull
test
lcall
loop
pop
repz
in
pop
gs
int3
out
shll
test
pop
xor
idivb
inc
and
loop
cmp
sbb
push
sbb
aaa
sub
aaa
je
mov
shrl
adc
mov
imul
fwait
or
mov
sub
lcall
dec
imul
jg
cs
mov
stc
mov
fincstp
mov
fldl
call
lea
movsb
lods
scas
and
int3
inc
rcrl
shl
fisubrl
rclb
add
idivl
xchg
ljmp
aad
push
xor
push
jmp
leave
and
popa
mov
push
lret
inc
cmp
xor
stc
in
rep
scas
rorl
lahf
xor
pusha
sbbl
repz
adc
repnz
pop
pushf
jae
inc
ljmp
popa
mov
iret
fsts
fldz
sub
bound
add
pop
mov
sub
or
cld
stc
jl
js
pop
cmp
pop
movsb
pushf
fcoml
lds
fnstenv
fsubp
jne
and
nop
addl
mov
cmp
jmp
outsb
test
data16
notl
fistpll
adc
cld
jmp
pop
sub
xchg
fimull
sub
lods
mov
push
orl
mov
stos
dec
inc
outsl
add
sub
icebp
out
xchg
jb
mov
and
adc
adcb
add
test
call
shlb
push
mov
jge
or
shl
push
mov
test
pushl
mov
sub
sbb
test
mov
cltd
aas
sarb
je
inc
jg
ret
adc
inc
mov
sbb
fbld
mov
int3
lock
sahf
iret
sbb
shrl
or
cmp
or
lods
push
enter
aam
fisttps
mov
xchg
fs
jnp
in
inc
fwait
mov
push
sub
cmp
pop
movsl
adc
das
lea
jae
jne
gs
movsl
push
sub
scas
gs
mov
mov
mov
xchg
imulb
mov
pusha
or
cmp
mov
jl
fnstenv
adc
fildl
stos
mov
mov
lds
xchg
push
pop
cli
mulb
xor
jo
mov
les
sub
inc
adc
scas
xor
ljmp
aas
add
dec
mov
decb
push
or
add
jno
mov
jl
sub
or
mov
fwait
int
cmpsb
and
repnz
inc
mov
push
mov
lahf
mov
lods
jmp
xor
add
inc
lods
fnstcw
add
adc
push
ret
sub
scas
ljmp
pop
cmp
jbe
stc
jmp
cli
rolb
icebp
and
rorl
sti
jl
jbe
call
xchg
testl
fucom
sti
mov
mov
inc
inc
cmpsl
or
fisttps
bound
pop
sub
adc
push
mov
cmc
jae
push
jne
xor
lret
cmp
xchg
push
shl
jno
mov
std
lods
dec
or
arpl
push
scas
cli
inc
cmp
and
pop
push
aaa
xor
xchg
sub
mov
and
notl
xchg
dec
mov
inc
repz
dec
test
pop
jecxz
mov
mov
ret
popf
add
xchg
pop
cmp
test
jo
lea
test
pusha
xlat
test
jle
pop
movsl
rol
je
fwait
adc
rolb
pop
push
aas
mov
jns
mov
jl
loope
jecxz
xor
ds
addb
jnp
lcall
cmc
inc
imul
jmp
test
mov
repnz
repnz
xchg
pop
ds
imul
sub
loopne
data16
xchg
aaa
mov
push
fbld
out
push
shlb
test
push
adc
and
orl
nop
cltd
aam
decb
push
arpl
or
test
pusha
test
mov
jl
jne
testl
shrl
and
mov
cmp
pop
std
sbb
inc
fsubrs
xchg
pop
jnp
xchg
ja
insl
scas
nop
xlat
in
sbb
out
adc
push
jno
test
mov
adc
popf
jb
inc
push
mov
call
cmp
lcall
pop
clc
jns
add
sarb
pusha
outsb
mov
lret
or
dec
cld
nop
and
adc
aad
leave
add
pop
pop
stc
adc
or
xor
push
sbb
and
xor
lret
add
pusha
push
pop
ficoml
bound
jae
sub
stc
rcl
clc
into
movsl
scas
sub
xchg
lahf
adc
repnz
cmp
sahf
imul
pop
movsb
cli
lds
incl
ficoml
and
sub
jb
imul
insb
in
mov
test
xchg
mov
dec
icebp
dec
sbb
addl
insb
push
push
addb
mov
xor
xchg
ljmp
loopne
push
les
or
mov
sbb
pop
jmp
inc
ficoms
pop
ljmp
push
out
mov
mov
cmc
addb
test
xor
push
jecxz
xor
inc
pop
roll
sbb
out
mov
mov
adc
adc
clc
jbe
cltd
sbb
jo
mov
sub
mov
setge
int3
sarl
jae
data16
loope
aas
cmpsl
add
out
sub
xor
or
lods
mov
mov
int
fdivrp
mov
mov
insl
addr16
sbb
loope
shll
and
arpl
cmp
mov
jge
testb
ret
mov
in
js
xor
and
jnp
out
inc
rcll
mov
sbb
push
xchg
mov
aaa
out
fisttpl
fisttpl
mov
xchg
sub
mov
addr16
xchg
stos
bound
pushl
push
ret
and
jge
push
mov
in
sub
ret
out
scas
icebp
insl
inc
dec
sbb
jmp
ds
pop
or
sub
pop
adc
jbe
jl
xchg
lods
xchg
sub
dec
es
mov
cmc
cmpb
pop
dec
jge
bound
pop
outsl
std
add
iret
fadds
mov
mov
cld
fidivs
push
lahf
int3
or
enter
fnstcw
mov
fs
or
cmp
jp
pop
and
mov
enter
lds
mov
inc
in
pop
std
cmpsb
or
and
test
mov
outsl
mov
leave
cmp
and
lods
dec
loopne
shll
dec
cmp
sub
jae
out
mov
pop
sarl
inc
dec
ja
mov
loope
insb
das
pop
xchg
loope
out
xor
movsb
lret
xchg
adc
int
sbb
pop
push
jne
je
cmp
movsl
out
jl
orl
push
inc
ret
jnp
arpl
test
mov
scas
aad
xchg
push
add
cld
xchg
xor
aaa
les
mov
ljmp
insl
and
sbbb
cld
push
ret
mov
mov
test
and
scas
inc
data16
mov
test
push
jae
add
mov
fwait
sub
xchg
push
loopne
lods
adc
ss
mov
pop
stc
aas
test
inc
mov
dec
ficoml
push
jl
fcoms
cs
int
popa
sbb
inc
fs
jge
sti
jae
xchg
xor
sarb
ret
sbb
sbb
add
xlat
jo
stos
fabs
cmp
sbb
or
and
nop
or
arpl
sti
test
cmpsb
jo
int
and
notl
icebp
mov
gs
mov
int3
pop
jbe
fwait
icebp
dec
mov
and
inc
rcr
cmp
negb
add
adc
out
push
sbb
jo
mov
ljmp
ja
mov
shlb
cmpsl
push
stos
pop
test
fs
sti
data16
dec
stos
and
push
jno
aam
imul
popa
jno
mov
xchg
cwtl
xor
mov
cmp
xchg
test
jl
imul
lret
aas
jb
mov
dec
fs
ret
repz
std
rclb
fidivrl
sub
in
or
jp
dec
add
lods
cltd
mov
sub
mov
in
lret
das
orl
scas
mov
mov
ja
sbbb
js
adc
in
cmp
fmuls
push
cmc
dec
loop
dec
mov
push
xlat
rclb
push
sbb
lods
outsb
fmuls
cmp
movsl
or
fcomps
cmp
push
xorb
incl
sbb
fs
xlat
ret
sub
or
jmp
cmpsb
dec
call
push
mov
mov
adc
cmp
repnz
lcall
and
push
jnp
scas
pop
adc
and
mov
bound
or
aas
lods
iret
pop
sbb
sbb
mov
xchg
or
push
ret
mov
lcall
sbb
cmc
xor
sub
in
sahf
std
cmp
and
movsl
in
jge
jno
repz
xchg
jp
data16
add
imulb
mov
add
mov
stos
hlt
jbe
mov
dec
fcomip
cmp
jp
fld
mov
leave
push
mov
imul
or
loope
cmp
sub
clc
test
aas
sbb
mov
push
scas
ljmp
arpl
addr16
fisubs
les
add
xchg
stos
xor
xchg
cmpsl
mov
pop
lods
jns
rcrl
sub
pop
pushf
stc
fdivr
mull
mov
push
cs
std
notl
in
gs
sub
hlt
jle
mov
aas
inc
jg
stos
sbb
rcl
insb
lea
push
and
gs
cmc
jge
test
das
jb
and
mov
mov
sub
or
ficompl
stos
in
ret
mov
out
icebp
test
js
dec
pop
in
jo
lods
dec
dec
jge
sbb
shrb
jge
dec
ret
jp
lods
loop
mov
mov
adc
xchg
mov
popf
jmp
bound
rorl
hlt
push
std
rol
mov
sub
jbe
jae
mov
cmp
outsl
hlt
or
mov
cmpsl
nop
fcmovbe
mov
dec
aad
and
and
add
adcb
xchg
push
xor
jno
lret
aas
mov
inc
push
xlat
sub
data16
fldcw
cltd
xchg
leave
xchg
pop
in
inc
stos
add
mov
test
push
test
sbb
out
inc
sub
and
shrb
testl
xchg
pop
leave
sbb
push
faddl
out
fmull
daa
lret
or
pop
dec
cwtl
cli
test
insl
and
sub
je
adc
arpl
jp
xor
inc
enter
je
mov
sub
mov
sub
lods
dec
pop
enter
adc
in
lret
sbb
add
hlt
sarb
in
inc
inc
movsb
sahf
mov
lds
das
ljmp
fcomps
push
xchg
mov
mov
rcrl
hlt
add
cmp
fs
mov
adc
or
adc
outsb
icebp
jmp
lea
cld
test
xchg
adc
xchg
dec
jne
mov
and
sub
add
push
sbb
aaa
push
in
rol
sbb
lret
pusha
jmp
mov
out
sbb
sub
sub
call
repnz
cmpsb
loop
push
out
mov
cmp
inc
xchg
push
outsl
add
jbe
shll
dec
push
fstpt
mov
jl
or
xor
decl
inc
into
fsubl
cmp
pop
sti
stos
jne
out
hlt
mov
mov
dec
nop
dec
lock
xchg
out
cmp
mov
push
rcrb
in
dec
stos
inc
dec
leave
cmc
jl
rcrb
stos
xchg
mulb
fisttps
ret
ficomps
mov
addr16
in
daa
data16
pop
jl
pop
rclb
cmp
mov
or
icebp
jge
xchg
pop
dec
jle
ficoml
xlat
mov
fldcw
add
fcoms
repnz
imul
call
popa
pop
fsts
cmp
idivb
lock
xchg
divl
pop
fcomps
stos
mov
mov
dec
outsl
mov
loopne
in
push
cmp
aam
lcall
fisubrs
mov
push
lods
mov
xchg
lret
jecxz
aas
lret
sub
ds
dec
test
jno
xchg
insb
aas
mov
daa
jns
xchg
pop
push
loop
mov
dec
jne
call
sti
xor
cltd
push
popa
lcall
fisubrl
or
cld
dec
sub
stos
sub
mov
push
push
orb
test
ret
in
or
or
mov
cmp
ja
scas
out
mov
sbb
lock
pushf
fsubs
sbb
test
adc
or
cmp
dec
dec
pop
int
jno
call
and
push
dec
loop
int3
jbe
inc
mov
push
push
test
loopne
push
pop
lods
aad
push
pop
mov
out
mov
jbe
jbe
adc
add
scas
xor
sti
mov
hlt
insl
movsb
inc
xor
push
pop
and
scas
or
outsb
test
rcl
adc
das
dec
out
or
lods
fnstcw
rcr
aas
cld
outsl
add
push
leave
ret
jmp
jle
test
and
pop
adc
aas
pop
mov
mov
jl
cmp
ljmp
fs
in
jl
cmp
out
add
cmpsl
in
in
aaa
push
js
push
mov
js
pop
xchg
insl
roll
inc
mov
insb
test
aaa
pusha
cmp
stc
adc
cmp
in
nop
inc
xor
mov
pop
pusha
lret
adc
mov
sbb
add
nop
pop
shll
fisttpll
dec
or
int3
fucomip
xor
sub
cltd
add
cmp
insb
ja
bound
jmp
adc
push
test
jmp
inc
cld
shll
xchg
fbld
stc
decb
jg
fstpt
pop
jg
fs
outsl
iret
rol
xchg
mov
addr16
mov
sbb
mov
and
push
sti
sbb
pop
call
es
pusha
xchg
in
pop
mov
adc
dec
lea
dec
and
mov
rcrl
dec
sub
std
call
pop
cltd
adc
fisubrs
rcrb
ret
mov
stos
jmp
inc
jp
jns
xor
in
aad
sub
leave
aas
lret
rcll
xor
push
jne
call
cli
popf
cmp
add
push
outsl
ljmp
mov
mov
jle
arpl
test
mov
pop
mov
xor
push
cmc
jmp
lret
xchg
leave
incl
mov
imul
in
lret
or
test
inc
mov
out
lds
repz
dec
cmp
mov
cmp
mov
mov
mov
aaa
mov
xchg
lahf
das
or
mov
das
mov
add
sbb
mov
je
jmp
out
scas
lahf
cmp
fisttpl
dec
loopne
shrl
sbb
xchg
repz
adc
mov
je
incb
gs
sub
fcompl
inc
gs
sub
push
subb
add
mov
stc
ljmp
test
lret
int
test
adc
jne
rclb
lret
mov
cmpsb
cld
adc
dec
addl
repz
push
or
lahf
mov
fs
call
cmp
pop
gs
hlt
icebp
adc
sbb
arpl
in
jb
jbe
outsb
xchg
lret
xchg
xor
jo
or
adc
sbb
stos
in
sbb
mov
jp
out
xchg
push
clc
test
in
in
lock
cmp
push
les
mov
dec
ljmp
push
push
lods
cmc
push
test
icebp
push
cltd
mov
test
mov
sub
data16
mov
pop
out
arpl
cmp
mov
cmp
ja
inc
mov
repnz
mov
aam
or
add
adc
jg
fstpl
fcomps
lcall
pop
fwait
in
movsb
repnz
xor
rorl
pop
sbb
loop
scas
mov
rclb
imul
xchg
test
or
mov
jecxz
mov
leave
pslld
push
pop
mov
pushf
push
mov
out
test
insl
testb
stc
mov
cmp
sub
mov
div
add
data16
pusha
add
outsl
mov
sti
in
dec
mov
adc
xor
mov
add
sbb
or
push
adc
push
xor
pop
cmp
sbb
hlt
push
imul
lar
xor
xor
loope
and
pop
ret
ret
lcall
push
jbe
mov
cmp
mov
sub
xor
lahf
push
xor
popf
lods
pop
into
cmp
lcall
sub
cvtpi2ps
into
jg
add
xchg
or
out
outsb
mov
xchg
inc
rcr
mov
dec
mov
mov
loop
or
adc
jb
jmp
sahf
inc
out
int3
test
insb
dec
addb
in
xchg
xlat
mov
inc
sbb
stos
loopne
ret
nop
sahf
lahf
insl
adc
mov
inc
mov
adc
lret
xchg
cmc
xor
jnp
paddusb
movsl
sub
mov
push
adc
sbb
popf
nopl
jmp
push
clc
loope
push
add
lods
test
lcall
add
mov
lock
push
jg
jmp
rcll
fwait
mov
por
ss
fistps
pop
shl
mov
sti
ljmp
or
sahf
rolb
pop
mov
movsb
test
mov
shlb
imul
add
in
lahf
and
enter
fbstp
and
add
mov
push
pop
lret
es
iret
mov
dec
lea
movl
rcr
cltd
int3
pop
sbb
cli
add
pop
cmc
in
mov
mov
lret
cmp
insl
jge
jb
add
out
movsb
add
insb
fwait
or
sub
ds
jns
aas
pop
les
in
out
dec
shlb
dec
push
fs
xchg
pusha
jno
test
aas
jns
adc
dec
je
jo
sub
push
xor
sub
sbb
jmp
ret
and
pop
hlt
push
cmp
test
adc
jbe
or
mov
outsb
pop
repz
and
std
loop
push
cmc
inc
jne
push
inc
xor
and
insl
inc
push
jmp
ffreep
loope
xrelease
xor
mov
out
movsb
add
sub
fildl
jns
stos
in
bound
adc
imul
ljmp
cmp
insb
repz
xor
outsl
shll
lret
pushf
test
imul
sbbb
mov
cmpsl
sub
lcall
popa
pushf
mov
mov
aas
inc
lret
fimuls
add
adc
xor
sbb
jge
pop
loopne
daa
mov
js
cwtl
and
stos
mov
dec
push
dec
jmp
loopne
add
mov
push
mov
mov
out
push
fnsetpm(287
cs
pushf
leave
sbb
imul
test
nop
stos
and
out
dec
add
push
add
push
xchg
mov
dec
mov
ss
test
ficoms
mov
faddp
test
lds
popa
dec
subl
flds
inc
lods
fbld
sub
cltd
push
sti
insb
mov
les
adc
stos
mov
mov
les
mov
push
jo
mov
leave
jbe
les
arpl
pop
jmp
mov
inc
notb
aas
sbb
mov
xlat
loope
dec
rcrb
mov
cmp
or
pop
je
aas
xor
data16
mov
es
push
rclb
sbb
add
movsb
add
adc
mov
iret
lret
adc
xchg
mov
das
decl
jecxz
fisttpl
jg
fwait
dec
sub
jl
adc
mov
mov
push
lret
out
fidivl
popf
jo
cmpsl
aad
out
inc
insl
mov
mov
cmp
inc
lds
aad
imul
ret
dec
leave
les
mov
addr16
pop
arpl
enter
scas
out
outsb
lods
mov
fiaddl
mov
shll
movsl
les
fistpll
push
xlat
dec
maskmovq
divl
ficoms
std
push
sub
je,pt
dec
aad
sub
push
inc
push
mov
fstps
rolb
mov
ss
or
adc
xchg
test
push
pop
cmpsb
xchg
out
mov
es
lcall
pop
inc
lock
jp
repnz
inc
jg
mov
mov
ljmp
cmp
ja
jl
and
aam
jecxz
ljmp
cmpsl
bnd
xchg
push
popf
cmp
fldt
insb
mov
add
pop
jl
je
cwtl
sub
push
xchg
int3
mov
push
mov
loope
out
push
adc
cltd
mov
roll
test
addr16
mov
cmpsl
xor
dec
and
dec
pop
lret
push
or
pop
and
sub
lret
pusha
rorb
pop
inc
sbb
inc
loopne
data16
aaa
inc
cmpsl
jecxz
out
mov
mov
xor
ficompl
loop
sbb
cltd
mov
orb
in
adc
bound
or
inc
sbb
adc
xchg
jle
xchg
xchg
cmpsb
lds
imul
cmpsl
adc
jg
sbb
loopne
gs
sbb
fxch
mov
enter
push
decb
lret
mov
sub
mov
pop
push
push
mov
jp
int
jae
adc
loop
add
out
pop
call
aam
stos
jns
out
add
cli
jne
andb
jb
ret
mov
xchg
jne
mov
cmp
add
jo
cs
adc
lock
shlb
into
stos
cli
xchg
inc
cmp
or
data16
out
lcall
add
mov
adc
and
lds
xchg
lods
pop
add
cmpsl
sub
aas
imul
mov
push
xchg
xrelease
mov
les
faddl
out
test
dec
out
pop
mov
push
jno
frstor
jp
mov
add
add
xor
sar
scas
outsb
xchg
popa
aam
rcrb
test
ss
mov
scas
add
xchg
loope
cmp
clc
test
push
adc
cltd
and
sbbb
into
negl
and
jae
shl
repnz
xor
push
notb
cmc
mov
rorb
adc
std
test
add
adc
test
xor
and
cmpl
cmp
cmp
mov
jo
addr16
inc
shll
add
add
daa
shl
mov
pop
jo
push
aam
xchg
jg
cmp
addr16
les
jmp
mov
loope
fnsave
ljmp
cmp
mov
mov
adc
cmpsl
pop
mov
leave
ja
dec
jbe
push
pushf
jecxz
inc
and
sbb
icebp
xor
and
insl
push
sub
dec
add
loopne
jecxz
loop
xorb
sub
sub
mov
add
push
repz
es
ljmp
cli
sub
stos
push
mov
cmc
xor
cmp
je
stc
sbb
fld
daa
sub
adc
dec
arpl
ja
nop
aad
cmp
fbld
test
push
stos
addr16
lret
dec
insl
xorb
sbb
inc
lcall
inc
sahf
jl
aas
test
inc
mov
cmp
movl
cs
movsw
push
sub
jl
mov
out
sbb
dec
lods
sbb
jae
push
scas
or
jae
push
or
adc
into
adc
dec
push
cld
test
into
pusha
mov
add
or
mov
jl
dec
pop
and
iret
mov
test
adc
fwait
hlt
or
add
cltd
dec
lock
fnstenv
loopne
inc
jbe
xchg
cmp
jp
adc
push
xchg
xchg
jb
repnz
jae
outsl
add
sbb
sbb
mov
push
pop
sub
xchg
dec
mov
fnstsw
fists
jecxz
cmpsb
or
mov
test
xchg
popa
push
movb
sbbb
adc
cmp
out
add
sub
push
inc
inc
rcrl
push
and
in
jmp
int
lock
fdivrs
xchg
test
inc
sbb
pop
xor
add
sub
jns
and
mov
sbb
or
ljmp
insb
scas
mov
sbb
fdivrl
lcall
adc
xor
call
or
popl
test
jmp
xor
cmc
jl
sub
inc
scas
out
jb
inc
cmp
xchg
iret
in
call
lcall
addr16
ficoms
stos
push
xor
xor
xor
test
popf
in
xor
or
ljmp
gs
dec
adc
adc
movsl
iret
and
test
fsubrl
cmp
js
into
imul
dec
cmp
cli
jns
ja
flds
ljmp
xchg
loop
adc
popf
std
jmp
or
sbbb
dec
fwait
in
xor
lods
push
jae
arpl
or
in
and
mov
add
test
fnstcw
cwtl
dec
push
ss
nop
dec
adc
std
cld
sub
sbb
push
hlt
cmpsb
test
lods
push
in
mov
fucomi
outsl
mov
lods
and
cmpb
push
out
and
dec
test
pop
push
cmp
mov
cmc
jg
or
stos
lds
test
or
popa
cmp
aaa
jecxz
movl
cmc
in
mov
cs
add
cltd
jle
jns
xor
fldcw
add
sub
shrl
rcrb
sub
xchg
push
ret
popf
scas
add
add
aam
xor
pop
cmpsb
push
sbb
in
test
jb
adc
mov
pusha
mov
xor
loope
mov
clc
leave
mov
cmp
cld
in
jmp
fmuls
into
sbb
in
lods
xor
inc
mov
jb
cmp
jb
add
jnp
jbe
clc
in
addr16
or
inc
jae
ss
cld
push
sub
cs
push
lret
in
or
mov
pop
jmp
mov
push
pop
ret
les
inc
or
mov
sub
mov
or
aaa
popa
pop
sub
jge
and
dec
outsb
push
insb
ljmp
push
or
in
add
popa
notl
sub
test
dec
pop
dec
je
stos
push
pushf
xorl
clc
mov
in
sub
cmp
sub
fisubrs
sbb
jns
faddp
jae
shrb
scas
ret
pop
es
subb
sbb
pop
shll
icebp
push
sub
sbb
adc
pop
pop
push
sbb
int
pop
mov
aam
xchg
imull
scas
mov
std
fisttpll
out
out
out
popa
icebp
sti
pop
movsl
xor
idivl
xchg
sbb
testl
pushf
and
inc
mov
dec
lcall
push
fcomps
mov
mov
clc
or
cwtl
roll
inc
cs
adcb
les
jne
test
mov
pop
ja
sub
sbbb
or
loopne
jb
mov
inc
movsl
movsb
push
popl
into
out
cli
cli
outsb
arpl
lea
xor
loop
jg
out
into
jl
adc
jns
cld
dec
xor
xor
roll
or
pushf
stc
mov
xchg
xchg
or
mov
xchg
imul
adc
pop
mov
push
xor
repz
jp
out
test
mov
inc
mov
dec
jle
mov
fsts
pop
ret
sbb
push
push
xchg
inc
sti
jp
ret
mov
outsl
js
add
ret
fwait
sbb
fwait
or
cmp
addr16
jo
mov
push
cmpsl
inc
fildl
enter
pop
xor
shrb
dec
add
in
stc
lcall
movsb
mov
push
add
mov
mov
mov
shll
push
outsb
pop
or
movsl
insl
mov
jg
xchg
mov
or
dec
push
xchg
xchg
mov
push
push
insb
gs
xchg
add
dec
inc
cmpsb
jle
mov
loopne
imul
repz
fwait
movsb
lds
pop
out
cmp
or
mov
int
test
mov
mov
into
outsl
inc
mov
fnstcw
stos
sub
repz
aad
jle
cltd
icebp
aas
in
jno
pop
pop
jle
outsl
fcoml
aad
adc
test
xchg
sbb
cmp
cltd
pop
dec
dec
imul
pop
mov
xor
test
scas
test
sbb
lock
jge
jb
and
mov
xorl
dec
xchg
mov
vpmaddwd
stc
or
add
negb
int3
nop
dec
xor
js
cmc
inc
dec
add
push
push
mov
pop
and
sub
jnp
push
scas
cmp
jo
sub
sub
int
movsl
fsubr
scas
imul
sbb
pop
push
cld
sar
or
dec
imul
sahf
push
mov
out
scas
lret
inc
orb
outsb
push
xchg
dec
imul
cli
arpl
scas
je
add
jmp
add
loopne
jbe
jg
add
lds
xchg
icebp
xlat
cmpsb
cmovl
push
pop
sub
mov
adc
daa
mov
xchg
push
xchg
jecxz
dec
dec
imul
mov
dec
sbb
adc
lret
ret
mov
aad
pushl
enter
mov
rdmsr
lcall
mov
shll
xor
jae
pushf
inc
cmp
loop
fistpll
or
push
sub
cmp
mov
xor
mov
scas
aad
inc
cli
jge
into
addb
inc
add
xor
test
mov
fsub
mov
cmp
xor
je,pt
sbb
and
mov
push
pop
pop
roll
adc
mov
std
fsts
pop
or
and
mov
xor
popa
jo
sub
mov
pop
jmp
inc
cmp
pop
dec
pop
and
mov
xlat
mov
pop
stos
mov
dec
cmp
stc
aaa
mov
cli
js
inc
fiadds
lret
loopne
sbb
stos
je
add
mov
ljmp
jle
xor
repz
xor
cwtl
cs
shlb
adc
lret
insl
lods
outsl
pushf
pop
and
subl
xor
xor
push
nop
cmp
movsl
push
jecxz
jb
push
nop
int3
mov
leave
xlat
filds
pop
popf
arpl
dec
pushl
repz
sarl
dec
cmp
inc
fisubrs
sbb
test
ret
pop
xchg
sbb
clc
imul
add
cmp
add
push
mov
push
ficoml
daa
je
sub
popf
dec
adc
clc
movsl
in
and
sbb
sub
lret
jno
fdivl
daa
cmc
je
shlb
mov
mov
sub
jl
imul
mov
ret
cli
dec
or
pop
flds
shll
pop
jns
int3
inc
cmpsl
xor
pop
aam
fdivrs
sahf
mov
xchg
ds
xchg
out
jnp
xor
testl
test
fiaddl
pop
dec
push
rcrb
add
repnz
xchg
in
push
dec
sbb
pop
in
mov
repnz
dec
jns
sbb
pushf
mov
outsb
popf
lods
push
mov
dec
jmp
mov
sbb
cltd
scas
xor
lods
or
sub
and
mov
jp
jbe
push
dec
fxch
cmpsl
loopne,pt
xchg
sahf
xor
andb
xchg
ss
push
test
inc
pop
xchg
mov
insl
adc
rcrb
push
add
aam
push
xchg
push
jae
popf
sti
in
js
insb
sub
cld
pop
mov
fstl
sbb
dec
lods
insl
mov
dec
pushf
mov
rcrb
jg
xchg
sub
add
in
out
cmpb
jns
data16
inc
add
pop
ret
mov
in
push
and
cmp
mov
push
nop
and
jae
sar
push
and
in
sbb
and
pop
xor
lock
or
sarb
fs
out
push
adc
add
cmp
dec
mov
shrl
movsl
js
cld
adc
lds
jno
addb
and
sub
inc
and
push
xchg
insb
mov
cmp
jg
das
dec
aaa
movsb
rorb
mov
fiadds
and
shll
fsts
dec
out
out
add
mov
aad
jg
jbe
mov
cmp
iret
aam
pushf
jno
daa
mov
dec
sahf
nop
dec
sahf
and
dec
jg
insb
mov
and
mov
shlb
int3
xor
cmpsl
addl
sbb
mov
sti
ljmp
mov
mov
test
in
mov
dec
nop
out
adc
push
pushf
stos
push
std
in
es
pop
xor
or
jb
cmp
mov
cmpsl
fwait
popf
test
xchg
xor
dec
mov
lods
pop
sbb
pop
xchg
ficoms
mov
mov
or
orb
aam
lock
mov
push
xchg
push
ds
repnz
pusha
clc
decb
or
test
testl
adc
cltd
xor
mov
ss
cmp
xchg
add
adc
fimull
mov
push
push
cli
mov
cmp
out
cli
pop
popa
mov
mov
fidivs
xchg
fs
adc
mov
mov
imul
jmp
dec
adc
cmp
cmpsb
gs
push
negl
push
imul
mov
xor
aas
mov
cmp
dec
xor
mov
and
in
out
cmp
popa
pusha
mov
cli
test
or
enter
fcomp
test
aaa
jl
xor
popf
xchg
mov
mov
out
dec
xchg
inc
aad
aam
insb
ret
xchg
pop
mov
push
push
adc
xor
jbe
ljmp
add
aam
xor
jae
roll
icebp
push
add
rcrl
push
dec
adc
fidivs
pop
inc
pop
gs
and
pushf
in
mov
cld
dec
xor
cmp
pop
sbb
and
clc
add
push
stc
mov
lods
mov
fsubrl
pop
nop
inc
xor
jae
cmc
mov
or
lods
pop
nop
and
dec
decb
mov
and
aam
into
sbb
sbb
mov
neg
cmpsb
jno
leave
jne
cwtd
add
pop
pusha
bound
loopne
test
sbb
sahf
jnp
inc
inc
and
mov
jne
aam
adcl
jo
int
mov
repz
popf
jle
repnz
loop
jp
mov
mul
es
pop
sbb
jmp
int3
imul
jno
test
pop
cs
sub
icebp
cmp
std
ja
mov
ss
ret
jecxz
jns
lods
mov
and
adc
jb
cmp
cmc
pop
mov
or
shrl
fisubrs
scas
pushf
gs
inc
das
xor
sbb
mov
stos
xchg
and
xor
loop
xor
in
arpl
push
dec
je
insl
jmp
repz
mov
pusha
andb
jge
aad
sub
call
cmp
lds
sti
inc
jae
sbb
mov
pop
xchg
mov
push
jno
aam
iret
pop
iret
lcall
fucomip
add
add
jp
push
mov
adc
pop
push
aas
lds
daa
jne
lds
inc
xor
popl
ss
cmp
cmp
std
ret
lret
cmp
data16
into
or
jmp
fs
dec
dec
out
popf
cltd
jae
int
xchg
jo
add
jbe
jecxz
imul
jge
adc
out
pop
lock
cmp
xor
sbb
sub
cltd
adc
cwtl
loop
loopne
xchg
dec
adcl
mov
adc
int
xchg
rorb
popa
repz
stos
jo
adc
fldt
dec
in
icebp
mov
sub
outsb
rcl
ljmp
xchg
sbb
lods
ret
leave
add
xor
and
sbb
in
shll
aaa
jo
lods
push
cmc
repnz
mov
roll
pop
dec
lcall
add
mov
outsb
lds
and
sub
dec
fsubp
dec
cmc
nop
dec
pop
popf
addb
gs
nop
fs
sub
loope
bound
mov
in
inc
imull
mov
scas
sub
jo
sbbb
js
mul
mov
jnp
aad
push
jecxz
fyl2xp1
cs
or
xor
jns
insb
test
nop
push
rolb
push
dec
add
push
cld
add
shll
jnp
out
pop
inc
int
cmp
and
push
mov
rorb
test
mov
mov
dec
jno
push
imul
jbe
pop
pop
imul
sub
mov
loope
outsl
sub
insb
fucomi
imul
or
push
ud0
push
mov
sub
dec
sub
int
dec
stos
mov
sub
ss
add
enter
xchg
mov
pop
push
fildl
xchg
add
scas
pop
das
inc
jnp
into
and
leave
mov
sub
daa
data16
mov
push
push
stos
and
inc
mov
xchg
mov
mov
sub
lods
call
insl
pusha
jb
in
fstl
and
mov
push
aaa
scas
add
out
xchg
mov
and
jne
mov
sub
test
xor
nop
std
lcall
stos
pop
sbb
jp
pop
pop
or
int
add
sub
xor
out
insb
mov
xor
ret
arpl
inc
ret
fdiv
mov
pop
shrl
xor
int3
sbb
lock
into
xchg
ret
std
roll
or
addb
push
into
lods
sub
pop
aam
ret
sub
es
dec
dec
outsb
hlt
jmp
push
and
outsl
mulb
add
cmp
imul
shll
into
and
adc
pop
cmp
or
mov
shrl
icebp
mov
stc
pop
xchg
shrb
mov
push
sarl
cmpsl
pop
aam
call
scas
push
xchg
and
bound
jge
mov
push
or
adc
in
jb
cmp
mov
movsl
rcrb
dec
mov
fwait
sub
jb
adc
push
pop
add
mov
aam
xor
xchg
lcall
mov
jne
mov
mov
jmp
bound
in
mov
call
mov
inc
repz
dec
outsl
add
shll
pop
pop
sbb
mov
scas
mov
ret
enter
add
adc
cli
cld
mov
push
mov
aas
fsubs
dec
fdivl
bt
dec
sub
pop
stos
sbbb
scas
mov
inc
daa
xor
xchg
and
or
and
xchg
stos
out
lock
in
xlat
xchg
mov
cmp
popf
lahf
push
cltd
cwtl
mov
cmp
mov
pop
dec
gs
or
pop
repnz
mov
push
stc
and
push
ljmp
xor
pop
lea
xor
inc
arpl
dec
inc
or
pushl
mov
mov
mov
and
ret
aaa
inc
jnp
imul
inc
push
mov
jecxz
add
push
xchg
stos
add
pushf
fmul
sarb
dec
in
int
xchg
mov
jno
fsts
out
in
sub
dec
jno
repnz
stc
in
pop
hlt
scas
in
xchg
test
inc
scas
cmp
inc
adc
push
add
xchg
fs
cmp
push
push
mov
adc
lahf
xchg
cmp
mov
pop
pop
icebp
mov
fsubrs
and
enter
ds
mov
push
jae
cmpsb
dec
or
test
pushf
and
loopne
jg
out
data16
cmp
in
push
test
jb
popf
push
adc
and
adc
xchg
cli
mov
inc
sub
mov
loopne
jmp
leave
xchg
dec
push
aaa
ja
pop
fwait
push
push
icebp
nop
xor
cmp
test
xor
mov
lea
repz
inc
and
addr16
jo
in
loopne
call
fs
cmp
shlb
ret
frstor
cltd
mov
stos
jmp
dec
fcoml
rorb
fsubs
pop
or
mov
sub
hlt
adc
xchg
or
imul
js
push
mov
aas
fdivs
and
mov
push
jnp
and
xchg
insb
jnp
ficomps
mov
pop
cltd
sahf
inc
into
insl
fsubr
push
lahf
push
iret
pop
push
mov
dec
jge
lahf
test
jmp
loopne
rorl
adc
or
jle
lds
mov
inc
ret
xor
add
adc
mov
sbb
mov
sbb
sbb
icebp
dec
mov
movsl
dec
xor
lret
xchg
sbb
cli
clc
push
push
clc
insl
cmpsb
aaa
mov
pop
scas
cmpsb
xchg
xor
jbe
lahf
mov
addb
loop
push
xchg
int
sbb
xchg
push
sub
mov
xlat
lods
and
push
data16
xor
movsb
out
into
jecxz
push
jnp
insl
pop
xchg
movsl
and
cmp
cmpsl
imul
cld
dec
aaa
orb
mov
mov
ret
out
pop
pop
and
sub
outsl
dec
mov
mov
imul
fdivp
ret
out
sahf
add
int
fwait
mov
cmp
mov
xchg
rcrl
sbb
arpl
cmc
nop
add
inc
xor
mov
cli
mov
sbb
cmp
enter
stos
loop
ja
imul
ljmp
xchg
scas
lock
and
push
xchg
leave
add
xor
push
sub
push
ret
scas
jno
add
and
cmpsl
sub
testl
push
and
add
xchg
add
or
mov
arpl
jnp
mov
pop
gs
fs
jge
mov
inc
sti
xor
mov
cmp
sbb
loop
into
push
lret
push
jmp
mov
in
or
mov
xchg
js
into
cld
mov
push
pop
adc
adc
or
push
add
fwait
sub
xchg
cs
ljmp
movntps
push
push
lock
mov
ss
lret
and
in
or
pop
mov
mov
xor
xchg
and
mov
leave
jle
or
mov
jno
sahf
into
outsb
jae
sbb
sub
xor
aad
add
push
sbb
mov
xchg
xor
inc
out
loop
test
push
sbb
sub
loope
mov
pop
shlb
cld
add
aam
push
or
push
jns
push
jae
adc
push
shrl
add
clc
int
pop
sbbl
das
roll
sbb
int
movsl
xchg
pusha
popf
mov
mov
inc
jmp
daa
shrb
popfw
lea
je
xchg
ds
or
rol
shrb
das
xor
mov
lods
bound
fcmovu
jno
test
fimuls
cmpsl
mov
and
jl
imul
mov
popl
jnp
into
or
jl
push
adc
dec
or
sahf
and
xchg
shlb
sbb
xor
rcrb
and
sub
imul
jns
lea
and
lahf
push
jl
addr16
pop
out
push
jecxz
add
sbb
in
mov
mov
fisubrs
xor
pop
push
cld
xchg
push
test
and
fsubrs
hlt
add
bound
out
cmp
gs
in
mov
xchg
sarl
scas
cs
fst
sbb
jge
hlt
adc
cmp
push
outsb
jmp
push
ret
sub
cld
into
jmp
fidivrs
rcrb
jmp
sbb
mov
sub
test
xor
outsb
leave
call
cwtl
ss
mov
fdivrs
aam
dec
aam
shl
xchg
sub
repz
pop
fcom
clc
mov
jne
cmp
cmp
int3
mov
mov
scas
repz
push
insl
sahf
sti
jae
jno
cmp
pop
lea
jp,pt
sub
sti
pop
push
mov
outsl
and
pop
por
cmp
jb
pop
mov
js
icebp
xchg
pop
repz
inc
mov
adcb
nop
sub
out
mov
and
insl
fildl
xchg
jecxz
xchg
hlt
loopne
push
xchg
cmp
sub
ljmp
adc
and
mov
push
dec
add
sbb
addb
pop
hlt
mov
dec
dec
xor
xchg
xor
dec
xor
out
aad
jbe
cmp
aam
dec
mov
lahf
fcomi
mov
lret
mov
jmp
mov
push
jb
mov
pop
jl
push
int3
and
sbb
cli
xchg
sbb
pop
cs
sar
fildll
dec
mov
nop
xor
cmpsb
sub
insb
xor
test
sub
push
dec
xchg
pop
sbbb
inc
jo
sbb
into
and
lret
sarl
push
and
sub
add
repz
push
fsubr
push
faddl
push
aam
jb
imul
sub
out
insb
push
out
andl
cs
sahf
lea
fwait
shlb
imul
add
out
jmp
push
es
addr16
xchg
push
push
jmp
mov
dec
sahf
pop
or
jge
cwtl
pop
hlt
mov
mov
test
lds
hlt
or
jl
cwtl
xor
xchg
mov
mov
lret
sub
push
int
xchg
sub
andl
dec
inc
in
mov
xchg
imul
dec
fdivl
xchg
lcall
pop
mov
inc
addr16
dec
repz
pop
ss
loope
bound
je
add
sti
loope
call
test
pop
jp
cmp
aaa
pushf
hlt
rolb
push
cmp
mov
xchg
loopne
dec
sub
cmpsl
xor
sbb
js
sub
xchg
popa
adc
insl
mov
mov
fstl
fistpll
and
lods
mov
mov
scas
add
inc
add
xor
pop
sbb
sbb
jle
push
inc
or
sbb
cmc
xor
jns
dec
mov
int
in
jbe
gs
mov
shlb
push
mov
adc
jo
rcrl
mov
sbb
aaa
rol
outsl
add
or
or
adc
divb
cs
xchg
mov
mov
out
inc
adc
movsl
sbb
cltd
dec
jns
les
jmp
xchg
subb
mov
cli
cs
dec
insl
add
es
dec
lret
push
push
stos
pushf
fistl
cmp
jbe
adcl
xchg
orl
sbb
out
or
cmpsl
cmpsb
frstor
jmp
adc
lea
clc
faddl
enter
loope
cld
mov
arpl
js
test
outsb
cmpsb
dec
ficompl
addr16
cltd
mov
arpl
ss
sahf
pop
pop
scas
int3
jmp
je
sub
shll
addb
pop
mov
mov
pop
lahf
push
sub
repnz
xlat
ret
or
js
rclb
mov
andl
cwtl
cmp
dec
jg
lret
inc
push
inc
daa
es
popf
clc
and
push
jne
pop
test
imul
cltd
in
push
cmpb
hlt
clc
imul
mov
adc
in
js
adc
mov
jmp
cmp
sahf
xor
sub
sti
loope
hlt
pop
fildll
fnstenv
adc
push
xor
insb
and
fwait
xor
cmp
add
ret
mov
fdivs
xchg
popa
or
dec
popf
test
jge
xlat
sahf
cmp
lret
shr
sub
xorb
pop
xchg
ret
pop
mov
pop
repz
adc
sbb
addl
fs
pop
test
mov
test
jmp
xchg
and
add
pop
adc
hlt
dec
cmp
shrl
aas
add
iret
mov
stc
loopne
sub
cld
add
mov
out
std
cmp
test
mov
test
xor
and
dec
roll
jo
jo
xchg
jle
sbb
mov
shll
add
repz
cli
aaa
sarb
xor
dec
or
push
jmp
xor
bound
xor
jmp
mov
mov
push
mov
xor
cmp
imul
sbb
mov
cmp
int
cmp
das
bound
jbe
push
jae
inc
shll
inc
orb
lcall
sub
nop
ret
xor
fistps
shrb
adc
xchg
call
pop
addl
push
test
cmp
pop
arpl
hlt
pop
pop
or
sub
jne
xchg
xor
or
adc
push
adc
in
jg
imulb
xor
sub
mov
adc
mov
sbb
icebp
dec
adc
xchg
movsl
rolb
ret
mov
arpl
cmp
inc
mov
fs
or
inc
mov
mov
push
or
test
sub
xor
outsl
xor
mov
ljmp
xchg
pushf
dec
adc
out
cmpsb
mov
arpl
inc
loope
mov
and
adc
aaa
sub
dec
dec
and
daa
imul
movsb
out
ret
in
push
shll
mov
mov
ret
adc
mov
lds
cmpsl
mov
adc
mov
into
loope
in
xor
aas
sub
out
int3
xchg
lahf
stos
push
and
and
adc
sbb
in
imul
das
stos
xchg
cmpsb
jae
add
mov
ja
cmp
daa
subl
mov
out
mov
pop
sti
adc
fiaddl
int
inc
push
xor
pusha
out
stc
pop
pop
push
in
cmp
xchg
rorl
sbb
sbb
xchg
inc
sub
bound
in
cmp
test
stc
js
add
stc
lcall
push
adc
mov
outsl
sbb
faddl
test
inc
rolb
in
pop
adc
pop
insl
adc
dec
xor
test
cmpb
push
sbb
ret
lret
mov
dec
sub
in
cmp
lea
jno
jg
jp
int
clc
xor
mov
mov
testl
jae
sub
adcb
xor
cmc
fsubr
inc
cmp
lods
pusha
in
dec
push
and
xor
xchg
clc
loopne
mov
add
inc
scas
adc
cltd
inc
out
cmpsl
jge
or
push
ret
jmp
mov
ja
imul
xchg
ret
sbb
sti
mov
jp
fmulp
dec
adc
lret
ss
out
in
cltd
cmc
test
inc
sub
cmp
daa
cwtl
addl
dec
sub
ds
insb
or
rorl
cld
xchg
shl
or
es
dec
das
pop
or
add
inc
in
js
ret
loope
shll
mov
movl
cmc
xchg
rorb
add
push
repz
and
add
mov
arpl
stos
inc
ficompl
xlat
imul
movsb
jecxz
adc
mov
mov
fs
push
scas
jo
insb
sbbl
fwait
jl
add
test
movsb
and
jl
xor
inc
cmp
pop
sbb
test
adc
mov
inc
ljmp
insl
push
and
inc
add
fdivrl
scas
fs
xchg
xor
adc
add
stos
jp
mov
mov
xchg
jmp
loopne
dec
jo
and
sub
fwait
inc
jg
mov
out
je
pop
outsl
add
adc
or
repnz
cmp
adc
jl
jg
cmp
shlb
jno
data16
cmp
stos
cmp
mov
cmp
sbb
in
dec
push
or
mov
pushf
repnz
xor
fsubs
pop
dec
pop
push
jle
push
and
sub
adc
jne
bound
xchg
negl
add
pop
mov
fbstp
dec
gs
data16
xchg
xchg
add
cli
cmp
and
shll
movsb
pop
inc
adc
popa
mov
lea
stos
je
jecxz
fnstsw
cli
mov
cmp
xchg
mov
dec
fld
stc
ret
imul
cmp
add
sub
mov
addl
mov
lds
jb
inc
dec
mov
cmp
push
in
pushw
mov
ss
sti
dec
and
cmp
repz
adc
dec
inc
loopne
loopne
mov
pushf
pusha
into
out
cmp
push
shrl
mov
xchg
cmc
mov
outsl
test
pop
lea
sahf
pusha
pop
into
ds
xchg
jb
jg
xlat
test
mov
lcall
xor
pop
les
jae
cmp
xchg
cld
inc
or
jb,pn
lahf
xor
addr16
xchg
cmpsb
stc
orb
sbb
and
jne
inc
loopne
pop
pop
mov
adc
inc
xor
neg
jmp
push
and
clc
xor
sub
repnz
sub
ljmp
pop
ret
sub
lds
lret
pop
jne
imul
jle
lods
mov
fldt
arpl
adc
cmp
mov
xchg
push
mov
lock
cld
mov
xor
mov
jp
and
daa
lret
or
bound
sub
lock
mov
cmp
jge
adc
adc
dec
mov
fidivs
loop
jp
in
int
sarl
outsb
and
stc
cwtl
mov
xchg
jns
dec
insl
cmp
cmp
mov
cmp
xchg
mov
jnp
int3
xor
lds
cmp
les
mov
fwait
mov
xor
cmpsb
sti
jno
arpl
xor
cs
je
std
movsl
mov
push
daa
sbb
loope
fcomps
stos
jp
adc
into
inc
mov
push
jg
cmp
mov
fnstenv
jnp
jge
xor
jle
mov
cli
sub
dec
add
imul
cmp
add
jge
test
cmp
das
xor
cmp
dec
xchg
mov
shl
sbb
loopne
ficomps
xor
pop
jae
push
inc
jnp
jg
pop
adc
mov
pop
mov
push
jne
adc
daa
int3
sub
xchg
xor
jge
enter
jns
sub
mov
mov
negb
or
icebp
jb
cmpsl
sbb
sti
je
adc
adc
xchg
fwait
xor
int3
cmpsb
test
sub
cs
sub
lret
dec
jmp
pop
sbb
in
xchg
aaa
push
cli
inc
mov
dec
dec
sbb
in
outsl
inc
aas
cmp
js
inc
rolb
add
xchg
jnp
jecxz
cmp
call
jl
dec
xchg
call
push
inc
or
int
cmpsl
imull
and
sahf
ret
fdivrl
test
sarb
adc
test
lret
cmp
xor
sti
repnz
repnz
data16
mov
outsl
push
push
fwait
xchg
push
add
hlt
daa
xchg
std
adc
push
in
mov
andb
mov
ret
stos
ret
sbbl
out
lret
xor
or
or
fimull
jmp
das
and
divl
or
test
xor
or
lock
mull
int3
add
jb
pop
sbb
sbb
fmuls
cwtl
jp
push
shlb
xor
pushf
popa
outsb
mov
shll
nop
dec
mov
inc
aas
stos
aas
mov
lret
or
and
out
and
cs
push
push
clc
subb
enter
in
aaa
inc
stos
push
xor
hlt
bound
call
push
imul
aas
xchg
jnp
bound
in
iret
xor
mov
call
sbb
lods
xchg
fidivrl
rcrb
ljmp
push
jg
xchg
iret
adc
loopne
pop
xor
ljmp
ss
and
mov
in
or
call
repz
pop
adc
xor
sbb
xchg
xchg
aas
or
std
imul
scas
js
addr16
idivb
xor
mov
fisubrl
xor
jmp
jae
ja
mov
out
cmp
cmpsb
cmp
js
rorl
hlt
es
mov
fmull
add
and
nop
outsb
repz
sub
sub
leave
ja
fisttpl
in
je
hlt
push
lret
pushf
lret
sbb
nop
pop
sub
adc
add
xlat
sbb
and
add
lods
lret
add
push
in
or
pop
popl
sub
ja
mov
dec
mov
xchg
sbb
and
pusha
rclb
inc
dec
push
in
cmpl
mov
sub
out
scas
and
push
push
loopne
fwait
lds
negb
push
pop
cmp
int
inc
dec
fldcw
and
ja
bound
shl
insb
add
shll
aam
nop
sahf
inc
iret
sti
add
sbb
push
hlt
cltd
sbb
push
mov
lret
xchg
sbb
pushf
dec
xchg
ret
push
cmp
daa
cwtl
out
dec
mov
insb
jns
mov
mov
and
mov
stos
mov
loope
out
xchg
adc
sub
sub
add
dec
or
icebp
outsb
mov
jnp
and
push
mov
cwtl
scas
divb
arpl
aas
movb
adc
mov
xchg
xor
adc
mov
and
push
or
cld
rolb
xor
fisubs
stos
inc
sbb
je
in
dec
pop
mov
and
shlb
adc
xor
pop
mov
mov
inc
push
mov
icebp
sbb
and
xor
inc
push
push
iret
push
mov
adc
mov
cmp
xchg
loopne
jecxz
pop
add
mov
fstpt
mov
ret
mov
xchg
inc
nop
cli
fsubp
aad
call
adc
popf
jecxz
std
out
mov
test
mov
and
mov
adc
les
xor
inc
jnp
mov
sahf
out
push
outsl
push
fidivrl
sub
repnz
mov
insl
fmuls
js
stos
sti
dec
add
mov
inc
or
shlb
cmp
cmp
xor
in
xor
insl
out
pusha
jl
adc
push
jl
in
sbbl
pop
inc
mov
ljmp
dec
sbb
and
rol
or
xor
iret
stos
xchg
or
push
sub
fstpt
loopne
cmpsl
dec
mov
adc
imul
add
add
pop
sti
jle
inc
jbe
lret
stc
mov
sbb
xchg
ds
nopl
and
jne
inc
popa
sub
xchg
rorb
and
xchg
loop
es
jl
jno
sub
cs
into
xor
dec
pushf
aad
mov
xchg
jmp
mov
cmpsl
cld
adc
out
fldt
cld
leave
rcrb
addr16
adc
shlb
push
cs
sbb
sbb
pop
sub
les
inc
jecxz
scas
loopne,pt
sbb
and
mov
jb
mov
pop
sti
test
nop
leave
add
verr
out
into
mov
pop
mov
sub
in
mov
mov
xor
fistpl
outsl
push
sub
mov
aad
sarb
add
push
mov
mov
cli
jns
pop
addr16
and
sarb
out
fistl
jns
stos
sub
cwtl
sub
and
lahf
pop
in
hlt
and
mov
in
notl
jnp
jno
or
cli
mov
mov
dec
sbb
cmp
pop
dec
lods
jbe
stos
testl
push
jne
fsubs
rcrb
bound
or
sbbb
and
pop
mov
daa
mov
xor
ss
lds
es
fisubrl
inc
pop
movsb
mov
out
xchg
les
pop
movsl
sub
xchg
jb
adc
lods
out
arpl
adc
jmp
insl
popa
and
cwtl
mov
dec
cmp
repz
pop
sub
xor
sub
int
xchg
dec
aaa
add
jmp
push
inc
shrl
ret
dec
mov
jmp
sbb
xchg
inc
js
repnz
add
das
xchg
pop
dec
inc
into
lret
jge
ja
out
push
sub
dec
or
jns
imul
cmpsl
loopne
xchg
xchg
dec
cmc
dec
xlat
in
mov
insb
int3
mov
mov
aad
pusha
in
adc
gs
imul
jmp
push
loop
inc
mov
in
xchg
aaa
or
jge
call
sub
and
imul
cmp
in
sub
ljmp
ds
cmp
ljmp
pop
pop
inc
addr16
inc
push
pop
jmp
lret
sub
lea
adc
data16
jp
xor
lea
int
cmp
dec
cmp
loopne
push
repz
mov
dec
inc
pop
adc
mov
aas
in
dec
ret
pusha
addb
sbb
out
and
loopne
cmp
sbb
mov
push
ljmp
shr
xchg
mov
loope
xchg
int
dec
push
fwait
pop
int
jo
sub
js
fsubl
push
mov
iret
inc
xor
xor
fcmovnu
ficomps
xor
jge
movsb
or
sub
mov
outsb
or
out
cmc
pop
sarb
inc
outsl
or
test
pop
dec
shll
or
out
sbbl
insl
xchg
mov
sbb
cmpsl
movsl
xchg
adcb
orb
cmp
xorl
ss
test
insl
push
sub
rcrb
dec
pop
jge
popa
clc
mov
repnz
xchg
dec
mov
loope
stc
cli
xor
push
out
inc
cmp
leave
mov
pop
pop
clc
xchg
in
dec
popa
xchg
pop
incb
out
sahf
add
dec
loop
push
arpl
movsbl
gs
xor
mov
sub
and
addr16
daa
xor
lds
andl
cmp
add
inc
std
ret
mov
adc
mov
jecxz
xchg
sub
xchg
mov
mov
mov
inc
xchg
ja
cmp
adc
push
mov
sub
xchg
jge
fdivrp
dec
dec
cmc
jl
dec
and
repnz
test
adc
scas
sbb
fildl
shll
mov
repnz
adc
sbb
stos
stos
popf
sahf
inc
mov
pusha
sub
inc
add
inc
xchg
dec
jae
add
daa
mov
jae
insb
out
push
movsl
out
fisttpll
xchg
inc
test
pop
push
lret
shrb
fcomip
ret
lahf
adc
adc
pop
cmc
adc
out
subl
mov
sub
adc
lods
jge
mov
pop
inc
mov
lea
sti
lods
sbb
out
inc
cs
and
jnp
sub
int3
jp
mov
jle
insl
push
inc
aaa
pusha
incl
in
xchg
into
test
sbb
fwait
xor
fdivp
repnz
lods
inc
mov
jmp
popa
adc
xchg
hlt
xor
push
lods
faddp
mov
cmp
ljmp
inc
js
mov
push
inc
cmpsb
in
bound
enter
pop
and
cltd
push
xchg
test
dec
repz
push
pop
xchg
jl
cmp
std
ja
xor
movsl
addr16
xchg
into
lret
mov
sbb
xor
and
push
and
pop
inc
push
pop
in
adc
fldenv
and
inc
sub
cmp
rol
push
addl
sub
mov
push
pop
push
adcl
pushf
insl
adc
inc
dec
xor
test
hlt
cld
sub
test
sahf
data16
ret
sbb
pusha
nop
inc
orb
pusha
jns
fnstcw
int3
mov
add
fnstcw
js
mulb
jae
mov
jmp
aaa
enter
push
xchg
sarl
leave
outsl
push
mov
addr16
sub
daa
mov
cli
mov
jnp
enter
inc
dec
pop
adc
push
push
ss
leave
mov
js
pop
mov
leave
xchg
daa
in
pop
dec
or
cmpsb
jne
jae
lret
cmc
call
mov
or
sbb
pop
sbb
mov
jo
xor
leave
imul
das
lahf
mov
inc
inc
xor
icebp
cld
jo
adcl
repz
ljmp
mov
push
push
loope
inc
insl
imul
in
xor
cmp
jl
popa
dec
aam
sbb
shr
xor
insb
ss
jmp
movsb
add
insl
xchg
lret
ffree
or
out
mov
popf
inc
pushf
sbb
mov
cmp
xchg
pop
fiadds
std
es
add
out
test
mov
sbb
sub
ds
pop
cmp
cmp
movsl
subl
xor
out
jne
pop
lods
leave
mov
jp
es
fsubrl
push
mov
push
inc
xchg
push
cmc
incl
cmpsl
into
int3
and
xchg
jl
add
nop
cmp
xor
fwait
repz
add
or
test
pop
nop
dec
jecxz
test
fwait
jno
mov
nop
mov
test
mov
jp
imul
lock
xor
cmp
adc
add
in
inc
push
cmc
es
adc
push
xor
or
xor
aam
ljmp
into
test
dec
inc
js
mov
les
cmp
dec
mov
xlat
popl
jmp
and
ss
leave
push
shll
mov
jno
hlt
leave
stc
pop
ret
dec
rcll
mov
pushf
rcrl
pop
std
mov
in
int
xchg
dec
jns
std
mov
insl
and
xchg
int3
fcmovu
fisubs
jae
sub
mov
sahf
lret
outsl
ret
jmp
push
shll
mov
out
rorl
cmpb
push
cmc
and
xchg
mov
daa
test
int3
mov
outsb
or
loope
movsl
push
hlt
jns
cmp
outsl
and
inc
xchg
pushl
mov
lods
mov
loope
shrl
jo
xchg
xchg
sarb
adc
test
jge
push
mov
cmp
enter
sbb
mov
repnz
cli
mov
ret
enter
test
std
cli
mov
sub
es
fnstenv
push
or
faddp
jg
ja
sub
add
jo
xchg
and
sbb
mov
or
test
xchg
or
mov
push
scas
mov
inc
sbb
sbb
add
fucom
inc
out
lahf
mov
lods
cs
arpl
push
les
mov
push
push
inc
push
js
mov
dec
hlt
sahf
shrl
adc
repz
cmp
pop
xchg
imulb
sub
dec
aad
xchg
test
inc
adc
pop
fimull
aad
dec
and
iret
dec
lcall
and
hlt
jp,pn
pop
pop
sub
push
pushl
add
or
cwtl
mov
xor
clc
out
gs
fwait
pop
xor
dec
push
outsb
push
mov
leave
nop
enter
fmuls
sbb
cmp
dec
mov
or
jo
sahf
sti
lea
mov
cltd
mov
loop
mov
mov
jle
ja
ffreep
das
mov
xchg
fxch
jg
mov
cs
stos
sarb
je
adc
xchg
fucom
inc
in
xor
outsl
jg
and
andb
push
add
pop
push
in
clc
jp
xor
out
scas
pop
adc
out
fadds
scas
ljmp
test
cmpsb
xchg
add
xchg
pop
mov
addb
jl
mov
jno
mov
pushf
dec
sbb
mov
nop
adc
xor
pop
fildll
xchg
xchg
cmp
es
jns
call
mov
lcall
lods
xor
loop
jne
sbbl
xchg
cmpsb
test
jmp
push
inc
dec
push
shlb
lret
sub
sbb
mov
mov
add
jno
mov
imul
arpl
pop
or
lahf
sbb
int
movsl
and
lahf
cmpsb
movsl
rcll
cs
out
and
out
fsubp
push
fdiv
insl
call
sbb
jnp
ds
jno
out
jbe
inc
add
cmp
jo
push
sbb
inc
int3
jmp
loop
mov
cltd
stos
push
jns
xlat
fdivrl
inc
jge
add
test
rcll
and
aaa
mov
ret
imul
mov
rolb
dec
pop
jb
fs
pop
mov
jno
in
cmp
pop
repz
xchg
and
mov
mov
lret
lods
mov
fidivl
push
jle
mov
inc
cs
lods
or
lahf
add
add
in
and
je
lods
cmp
cmc
xlat
fistps
mov
jnp
arpl
cmpsl
fstpl
mov
cmpsb
jno
movsl
mov
mov
adc
mov
mov
adcl
adc
or
mov
xchg
mov
mov
pushf
push
ret
repz
lock
rorb
gs
xor
xchg
pop
daa
shl
test
adc
lods
test
das
aas
sub
fldt
dec
push
jno
xchg
fucomp
imul
icebp
dec
sub
test
inc
call
mov
call
clc
in
mov
mov
push
xorb
adc
cs
mov
sarb
test
leave
mov
push
test
in
movsb
call
inc
scas
pop
fs
push
sub
inc
add
cmp
sub
jns
aas
shll
jp
cld
mov
add
adc
pop
adc
aad
ret
jecxz
pop
lcall
cs
adc
and
js
pop
inc
out
add
push
mov
les
or
xchg
ficomps
movsb
xchg
sub
pop
sub
inc
sahf
into
add
lret
inc
dec
pop
xor
xchg
in
dec
xor
inc
std
dec
push
sahf
in
push
jb
cmp
sbb
lahf
dec
pop
lea
cltd
les
inc
clc
or
daa
stos
cmpb
mov
push
loop
cmc
pop
adc
fdivrl
fucomi
push
cltd
add
jp
int
lcall
loopne
xchg
idiv
repnz
icebp
negb
mov
inc
inc
adc
icebp
sub
xchg
sti
xlat
push
xchg
inc
cltd
stos
cmp
test
dec
pop
sub
jmp
add
push
stos
lds
in
cmc
jge
cmp
xor
jbe
inc
outsl
icebp
repz
ficomps
mov
repz
adc
pop
xchg
mov
aas
scas
mov
nop
jp
inc
out
cmp
in
and
movsb
negl
dec
and
leave
gs
das
cmp
jne
sub
movsl
sbb
mov
jae
push
negb
sbb
cwtl
and
mov
lahf
push
sbb
adc
cltd
scas
pusha
test
ret
test
iret
or
in
jb
shlb
push
push
jg
mov
iret
xchg
pushf
inc
rcl
mov
addb
pop
mov
lods
jno
std
jp
sub
test
pop
popa
leave
cmc
xchg
mov
mov
and
xchg
daa
rclb
js
loopne
fstps
sub
inc
jmp
aas
add
jecxz
inc
std
xchg
loopne
xchg
lret
cmp
inc
cltd
xchg
sbb
in
mov
push
es
sub
sub
sbb
sub
or
das
xchg
enter
addr16
mov
inc
dec
hlt
pushf
jmp
cmp
xchg
push
pop
mov
adcl
cmpsb
fcoml
mov
xor
xchg
ja
mov
in
jo
rcr
adc
int3
or
dec
push
outsl
repnz
iret
insl
insl
or
and
pop
fbstp
scas
sub
fwait
dec
js
and
movsb
inc
dec
xor
mov
ffree
mov
addr16
frstor
mov
sub
sbb
imul
xor
adc
xchg
sub
inc
pop
cmp
jno
cwtl
icebp
sti
fisubl
pop
mov
push
ret
dec
adc
dec
cmp
movsl
jbe
test
lret
mov
std
pop
jp
sysenter
ror
out
test
shlb
dec
pop
adc
pusha
test
in
cld
fisubrs
lret
ds
sti
imul
add
or
mov
cmp
or
push
pop
cmp
or
pop
ds
lcall
xor
lock
sbb
mov
add
or
lds
add
repnz
mov
sbb
inc
add
repz
in
jb
lea
movsl
andl
stos
loope
outsb
movb
lahf
lcall
leave
js
xor
cld
in
pop
add
movsb
push
cmp
ret
fdiv
fs
push
test
inc
insb
imul
inc
mov
in
nop
or
insl
jo
sub
stos
mov
lret
fildll
sbb
lock
pop
inc
or
popa
bound
loop
xchg
fisttpll
test
nop
das
xchg
jbe
inc
bound
xchg
mov
decb
lahf
call
dec
mov
test
out
dec
enter
add
leave
or
push
push
jecxz
xchg
push
and
rcrb
aas
or
cmpsb
sbb
cli
imul
repz
adc
xor
pop
aas
add
mov
cmp
push
out
clc
xor
les
xchg
rcll
adc
pop
lea
cmc
adc
ja
xchg
pop
arpl
add
lods
loop
fwait
lods
aam
pop
icebp
popf
ss
hlt
push
cmp
dec
xlat
adc
insl
lahf
push
sbb
fistpl
sub
inc
mov
jae
idivb
mov
add
xchg
or
pop
pusha
xor
outsb
or
pop
push
mov
bound
pop
pop
inc
mov
mov
std
mov
inc
sub
xchg
xor
xor
xchg
outsb
mov
lods
into
pop
inc
imul
xchg
into
xor
in
xchg
mov
cmp
sti
neg
jno
addl
and
sbb
dec
mov
sbb
ds
shrb
jge
scas
icebp
mov
repnz
push
sub
cltd
sub
pop
jmp
aas
test
lcall
cmpb
xchg
pop
rcll
frstor
cmc
xchg
mov
lcall
shrl
xchg
lods
popf
push
jmp
jecxz
in
pop
pop
push
jo
arpl
adc
outsl
jae
add
pop
xchg
pop
pop
jae
mov
xor
dec
aam
mov
mov
pop
mov
and
aas
inc
movsb
mov
cmp
aad
push
dec
pop
or
mov
pop
pop
mov
sahf
xchg
cmp
negb
shrl
testl
mov
and
mov
shll
fidivrl
loopne
add
adc
sbb
adc
ja
mov
cmp
sbb
in
inc
pop
dec
shlb
aaa
xchg
xor
cs
repnz
mov
lea
sub
adc
inc
incl
pop
pop
pop
rcrb
movsb
sub
lods
fs
arpl
stos
lods
jns
je
add
xchg
push
xchg
add
out
negl
aad
jge
inc
adc
or
cmp
ds
pusha
mov
push
xor
mov
mov
fwait
mov
pop
out
jg
data16
inc
jecxz
and
dec
xor
inc
adc
jge
jbe
divl
in
jne
jae
mov
jg
test
mov
pop
xchg
leave
in
pop
xor
mov
dec
jp
adc
mov
outsb
or
dec
xlat
pop
pushf
fdivr
or
cwtl
and
lods
push
in
xor
and
aas
adc
in
bound
repz
rcl
shl
movsl
xor
ljmp
les
scas
loope
mov
sbb
iret
and
negb
cwtl
jo
sti
pop
inc
sub
icebp
xchg
pop
aad
jl
in
inc
lcall
add
inc
fs
cmp
jmp
loop
pop
jo
jl
shlb
outsl
add
inc
sub
inc
rclb
jmp
or
int
pop
or
fiaddl
pop
dec
nop
sti
addr16
aaa
aas
and
clc
push
fs
xchg
and
jg
lcall
std
cmp
inc
sbb
pop
nop
mov
cld
and
icebp
mov
out
mov
mov
inc
les
ds
adc
cmp
fidivrl
in
mov
adc
fdivr
hlt
lods
mov
out
inc
test
jle
jb
xchg
jp
mov
cwtl
outsb
xchg
xor
arpl
fwait
gs
xchg
push
mov
xor
mov
es
mov
mov
loope
push
outsl
xor
iret
mov
adc
lods
testb
movsl
jg
xor
inc
adc
rcr
mov
xor
mov
jl
push
xchg
bound
scas
xchg
inc
dec
inc
or
stc
mov
lret
and
dec
xchg
call
sbb
push
dec
lds
fucomi
adc
pusha
jns
aaa
add
incb
xor
ds
cmc
popa
mov
sarb
mov
popa
ljmp
sbb
loope
jmp
cmp
xor
stc
add
mov
inc
cmp
testb
inc
xor
sbb
mov
aam
pop
or
in
lods
in
loopne
sti
mov
hlt
mov
lods
mov
xchg
out
test
pop
lahf
stc
lods
pop
lea
jl
notl
xchg
cwtl
ret
push
cli
das
stos
mov
aaa
fisttpl
xchg
outsb
pop
shl
and
inc
mov
les
mov
icebp
adc
cmpsl
xchg
mov
jmp
mov
scas
arpl
notl
dec
fisubrl
dec
in
sti
pop
inc
leave
rcrl
movsl
push
addr16
pop
jns
mov
mov
sbb
sbb
fadd
sbb
sbb
scas
gs
cwtl
cwtl
push
arpl
inc
ror
cmc
ds
xchg
mov
ja
lea
daa
inc
aam
cmp
sub
push
push
ljmp
mov
test
cmp
mov
mov
sub
jecxz
add
xchg
inc
and
or
daa
jno
adc
sbb
inc
scas
adc
jge
out
xor
mov
sub
gs
insb
out
iret
rclb
and
lods
inc
pop
sbb
dec
push
shl
mov
and
jae
iret
cmp
pop
movsl
jnp
jg
mov
ljmp
cmp
fsubp
jmp
and
arpl
idiv
dec
xor
jns
jo
sub
cmpb
push
outsb
roll
inc
adc
xorl
shrl
add
insb
xchg
cmp
mov
inc
push
notl
adc
jle
jmp
cwtl
xchg
popa
ljmp
ljmp
in
out
xlat
gs
lods
cmp
xor
sub
mov
dec
sti
sub
leave
xchg
inc
shrb
lret
push
in
fnsave
insb
adc
xor
out
pop
and
cmp
loopne
pop
adc
imulb
jle
fsubp
testl
les
cmp
call
push
dec
cli
inc
pop
test
or
aad
jl
movsb
int3
add
mov
movsb
lea
mov
push
jb
mov
cmp
jle
out
pop
enter
jnp
imul
sub
push
xchg
push
movsl
shrb
pushf
dec
mov
cmpb
ds
cmpsl
in
stc
mov
call
mov
lret
push
cmp
jbe
mov
sbb
adc
cli
jl
outsl
pushf
aad
mov
cmc
mov
push
fsubl
sbb
mov
lret
fwait
xchg
je
adc
clc
mov
aaa
iret
add
div
insl
rclb
movsl
lods
and
and
cmpsl
jb
scas
push
push
or
mov
in
dec
insb
jne
pop
daa
xor
lret
mov
xchg
sbb
pop
cmp
adc
jmp
lods
fidivrs
pop
inc
sub
or
in
ja
ret
shrl
das
sbb
ret
icebp
cld
adc
enter
adc
mov
mov
out
sti
cmp
lret
mov
sbb
mov
iret
xor
sbb
jmp
popf
jae
xor
imul
lret
ret
dec
cwtl
sbb
jbe
and
lds
pop
push
stos
cltd
push
and
out
mov
adc
dec
push
addr16
mov
sub
cwtl
mov
sbb
loope
lock
data16
sub
addr16
out
inc
sbb
mov
pop
aaa
test
out
push
jp
sub
pop
jp
leave
cltd
mov
clc
in
subl
inc
les
jle
push
cmp
add
repz
fs
lahf
imul
aaa
lret
push
pop
and
in
pop
pop
or
cmc
xchg
or
rcrb
cwtl
mov
inc
fucom
or
test
popa
mov
sahf
push
mov
hlt
and
sbb
cmp
bsf
xor
add
in
xor
rcrb
mov
mov
ret
mov
cltd
lahf
inc
pushf
enter
sub
aam
enter
jb
sub
or
lret
jnp
dec
sarb
sbb
xchg
adc
lret
shll
adc
xchg
sub
lea
nop
outsl
cmp
and
stos
insb
and
stos
mov
jmp
xchg
push
lods
mov
lods
insl
les
outsb
dec
sbb
pushf
movsl
aaa
mov
dec
xor
jg
xchg
push
fldcw
xor
ficomps
mov
es
jnp
or
notb
jp
dec
lret
scas
xor
pop
push
in
or
jne
or
mov
test
dec
outsl
popf
or
call
imul
lds
dec
clc
or
mov
adc
in
stc
rcr
sbb
into
or
fmuls
xchg
clc
es
outsl
pop
adc
sub
push
xchg
sbb
mov
loope
cs
mov
adc
push
xchg
pusha
mov
sbb
lock
inc
fwait
inc
jecxz
inc
ds
sbb
sub
sbb
jo
jmp
insb
outsb
imul
cmpsb
adc
sbb
sbb
gs
adc
cmp
adc
xor
hlt
push
add
jge
xor
gs
sbb
mov
mov
scas
psubd
mov
ss
leave
jecxz
mov
xchg
and
aaa
out
pushf
out
sbb
cli
iret
std
addr16
pop
mov
in
add
cs
and
js
lret
ret
jmp
das
jne
xchg
test
in
mov
lcall
xchg
aam
lods
adc
cld
sub
stos
jne
lea
mov
jl
jo
cmpsl
loop
push
push
stos
jecxz
push
and
push
pop
lods
cmp
pop
sbb
mov
xorl
push
int3
cmc
jnp
fs
outsb
xor
and
imul
les
outsb
cmp
in
or
xchg
add
push
jo
push
xor
and
dec
sub
xor
jp
mov
fsubrs
inc
lret
inc
cli
xorb
xor
adc
add
mov
fs
pop
lret
ret
nop
je
es
or
rol
shll
leave
je
jg
mov
mov
push
jmp
pop
cmp
cld
inc
dec
cmp
repnz
ja
movsb
mov
call
ret
lods
imul
mov
mov
sbb
xchg
into
jbe
popf
rorb
int
pop
xchg
sub
repnz
xor
hlt
pop
adcb
cmp
iret
or
outsl
jmp
add
pop
and
inc
dec
mov
sahf
xor
inc
mov
xor
lds
data16
shll
pop
fcmovb
test
or
dec
or
ficoms
dec
lahf
addr16
xchg
sbb
dec
dec
sbb
and
pop
and
gs
pop
insb
sbb
sub
in
sti
cltd
cmpsl
pop
lds
bnd
sbb
sbbl
aaa
push
rclb
dec
pop
ret
inc
xor
dec
leave
lea
fcmovnbe
sub
stos
shrb
ljmp
jl
dec
ret
push
js
dec
dec
push
je
and
mov
add
inc
fiadds
push
xchg
jo
adc
inc
xchg
orb
popa
hlt
lds
sub
fisttpl
jge
and
push
testl
shlb
and
push
iret
movsl
notl
add
jmp
insb
push
subb
xchg
sub
pop
fnstsw
fs
das
push
cmp
cwtl
lock
inc
cltd
int3
xor
cld
xor
shll
lcall
sarb
clc
enter
pop
pop
movsl
sti
jbe
or
push
mov
outsl
imul
xchg
ftst
inc
sub
and
push
outsb
xor
sub
or
xor
jge
ror
and
addr16
push
and
mov
push
mov
into
jb
insl
dec
arpl
push
das
xchg
je
ficoml
iret
xor
jecxz
into
stos
nop
and
jg
movb
stos
push
das
sub
sub
ret
xchg
sub
pop
push
inc
xchg
xor
insb
inc
cld
les
jo
pop
stos
mov
fidivrs
sub
add
jmp
stos
ret
pusha
push
fisubrl
ss
cs
xlat
add
ss
pop
ror
xchg
out
adc
ret
and
lods
repz
test
xchg
sbb
adcb
sahf
mov
or
push
outsb
fisubrl
push
and
and
in
push
or
mov
jl
push
ret
popa
mov
xchg
or
dec
cmp
push
mulb
aaa
mov
sub
mov
adc
adcb
lret
imul
test
into
xchg
push
jnp
cmp
fs
movsb
shlb
orl
mov
je
cwtl
add
mov
dec
add
paddsb
jmp
rcrb
outsb
add
lret
leave
sbb
or
test
or
outsb
and
sbb
xchg
push
enter
out
and
inc
pop
mov
popf
push
or
adc
xchg
inc
mov
fbld
sbb
rcrb
add
and
imulb
pop
inc
jo
out
inc
mov
jecxz
jp
xchg
or
mov
addb
aad
mov
jmp
adc
xor
xor
sbb
push
adc
imul
and
icebp
and
movsb
outsb
sbb
js
jne
packssdw
mov
lods
add
fstpl
jb
pop
pop
pop
loope
dec
jp
int
enter
lds
cmp
lods
and
mov
test
mov
sbb
push
fwait
push
sbb
notl
mov
dec
push
jge
out
in
das
xchg
in
pushf
mov
mov
mov
or
jae
sub
xor
push
sbbb
pop
or
lds
mull
xchg
xor
rorl
scas
jp
add
and
das
jge
add
sarl
clc
imul
mov
movsb
jnp
scas
add
fidivs
xchg
test
push
mov
pmaxub
jns
add
adc
shr
adc
xchg
sbb
sub
jmp
inc
mov
xor
lea
fwait
sub
in
or
mov
sahf
jb
jo
pop
mov
jl
ja
idiv
jae
or
jno
out
ret
jmp
cmp
mov
mov
out
cwtl
cmpsl
inc
adc
dec
fistps
mov
fmul
push
dec
aam
in
test
js
stc
ja
in
xor
stos
xchg
icebp
pop
jl
jbe
mov
aam
repnz
jge
inc
push
pushf
lret
jns
test
test
pop
stc
or
pop
mov
sub
in
enter
aam
rolb
sbb
adc
adc
scas
inc
in
cmp
adc
sahf
fstps
add
pop
sub
adc
mov
cmpsb
repz
lcall
lods
insl
lods
sbb
dec
ds
cmp
loopne
cltd
call
lcall
orl
lods
std
pop
mov
movsb
mov
lds
fisubrl
xor
ret
movsl
dec
mov
inc
repnz
adc
insl
cmp
sbb
test
outsb
movsl
sub
cmovb
jg
js
bound
xchg
push
aas
cmp
ljmp
pusha
imul
jnp
pushf
dec
fs
mov
jb
loope
sti
aaa
notl
jb
out
sub
stos
and
cmp
dec
hlt
popf
sbb
jno
clc
mov
fstp
lock
icebp
push
fcoms
adc
fldenv
xchg
ljmp
enter
testl
iret
pushf
push
or
inc
repz
int
or
or
ret
test
int3
out
push
adc
sub
or
mov
mov
jp
mov
roll
gs
lds
insl
mov
mov
fdivs
sub
call
adc
jmp
push
loope
push
sbb
add
lock
add
xchg
mov
mov
add
pushf
mov
idivl
loopne
sub
mov
inc
repnz
lret
xchg
xlat
sti
insb
hlt
mov
dec
cmp
pop
cli
inc
imul
mov
adc
sub
sbbb
mov
pop
inc
push
mov
clc
testb
or
cmp
insl
lods
pop
mov
les
push
js
cltd
lock
pop
fldcw
cmp
cmpsl
call
cmp
inc
and
ficoms
jg
ljmp
addb
aad
jmp
repnz
adc
iret
popa
cmpb
sahf
ss
in
mov
sbb
std
mov
scas
dec
loope
popf
dec
jle
repz
inc
inc
mov
add
jecxz
or
gs
sub
mov
adc
pop
addr16
insl
xchg
inc
stc
mov
and
icebp
or
jne
mov
push
sbb
sbb
or
add
scas
out
pop
dec
mov
mov
jo
pop
mov
sbb
mov
xor
stos
test
adc
lret
pop
stos
mov
cmp
addr16
mov
jmp
insb
dec
cmpsb
mov
ds
cmpsb
scas
stos
adc
ja
subl
jae
cmp
pop
mov
mov
mov
fdivrl
jl
sbb
inc
shll
notb
call
in
mov
xchg
stc
movsb
adc
mull
push
cmp
jo
xor
sub
add
scas
fimull
dec
call
push
xlat
clc
test
pop
xchg
fidivs
push
push
iret
movsl
mov
mov
push
repnz
arpl
cmp
xor
lods
cli
movq
mov
sub
fnstenv
xchg
cwtl
les
mov
pop
mov
adc
xchg
and
stos
cmove
je
lret
cwtl
push
pop
pop
ja
push
and
lea
mov
and
pop
mov
stc
or
xchg
mov
cs
decb
dec
cltd
mov
dec
mov
mov
xor
mov
sub
push
push
mov
jle
data16
daa
jg
xchg
dec
xchg
in
xchg
rcl
pop
add
ret
sub
bound
outsl
jecxz
xor
outsw
out
sbb
or
imul
dec
cmp
xlat
or
xchg
fisttpll
punpckhbw
and
dec
jno
out
mov
mov
cmp
jge
mov
in
or
ret
rcrl
xchg
leave
cmp
sbb
iret
add
push
insb
ret
loopne
xchg
add
add
test
sub
inc
xchg
out
xchg
xlat
jo
cmc
icebp
mov
mov
cmpsb
cmp
cld
xchg
push
dec
adc
mov
std
mov
andb
xor
lock
and
mov
stc
mov
mov
add
and
or
push
aad
cli
je
outsl
cmp
fcmovne
loopne
add
lock
mov
adc
push
hlt
push
pop
in
cmpsb
jmp
test
adc
dec
fs
cmpsl
jae
jecxz
mov
add
decb
and
aas
scas
mov
push
push
mulb
push
repz
mov
or
aam
or
loopne
mov
aas
xchg
icebp
or
pop
movsb
xor
cmp
sub
daa
lea
and
aad
sbb
outsb
sbb
aam
mov
pop
lea
pop
shrl
mov
andb
pushf
bound
mov
incl
sub
mov
mov
mov
mov
adc
jge
xor
jbe
out
mov
adc
fbstp
mov
mov
leave
mov
in
mov
and
cs
xlat
addl
stos
pop
or
cmp
test
push
repz
js
mov
sarl
aaa
cli
aam
cltd
push
loop
in
stos
mov
cmpsb
jecxz
frstor
addr16
add
fdivr
adc
int3
xchg
jmp
lock
cmpsb
enter
cmpsl
cmp
or
sbb
dec
sub
push
adc
sbb
movsl
addr16
out
out
push
mov
movsb
mov
fwait
cmp
mov
sar
push
lock
mov
xor
arpl
mov
ljmp
nop
mov
mov
xchg
jns
icebp
in
pop
cmc
into
imul
add
xchg
leave
xchg
imul
pop
das
pushf
and
cmpsl
maskmovq
imull
repnz
or
inc
mov
popa
xor
inc
push
jno
cltd
push
fnstcw
jbe
outsl
cmp
dec
and
xor
xor
repz
fsubrl
lret
aam
fmull
cmp
in
nop
imul
mov
mov
ljmp
add
or
and
movb
or
inc
mov
in
xchg
and
inc
call
cmpsb
and
lds
std
mov
jae
jge
in
xchg
mov
add
jmp
in
add
in
shufps
test
icebp
scas
out
ja,pn
leave
mov
pusha
ja
xor
xor
outsb
push
dec
mov
push
push
inc
push
popl
jle
cwtl
lahf
inc
jmp
pop
into
pop
bound
pusha
test
fwait
loop,pn
jp
cmpsb
test
movsl
or
sub
dec
out
jns
sub
incb
inc
arpl
leave
ljmp
aas
lock
loope
mov
jb
enter
mov
xchg
lret
sahf
pop
js
int3
and
int3
adc
into
mov
cltd
cltd
mov
in
or
leave
jg
add
jb
hlt
out
icebp
fnsave
in
push
insb
xchg
rorb
push
loop
adc
popf
es
clc
jbe
int
aad
xchg
xor
fadds
and
ljmp
add
xor
fwait
leave
popa
cltd
scas
psrad
cmp
mov
int
test
lahf
mov
shlb
mov
inc
jbe
ret
mov
mov
dec
jne
daa
pop
push
xor
aas
iret
mov
jecxz
bound
and
pop
inc
jecxz
fs
cld
in
mov
mov
stos
stc
mov
lcall
inc
mov
sub
roll
repz
mov
adc
xor
mov
mov
rcl
sbb
mov
rcrl
in
push
es
cld
push
pusha
or
pop
aaa
xchg
mov
mov
repz
pop
fidivrs
pop
dec
fcmovne
xchg
mov
jbe
popa
outsl
xlat
out
divl
mov
pusha
cmc
test
imull
insb
sub
es
mov
int
mov
jecxz
movsl
mov
or
dec
mov
leave
ss
adc
sbb
push
arpl
sti
xor
sub
sbb
pop
ds
cmp
mov
arpl
xlat
xchg
add
repz
testb
pop
in
ss
mov
or
xlat
rcll
xchg
notb
test
hlt
jae
outsb
sbb
dec
lcall
jp
test
mov
ja
jle
loop
adc
fdivs
dec
push
inc
mov
push
adc
sahf
push
icebp
loop
mov
sub
adc
push
scas
mov
fcmovne
xor
xor
mov
adc
xor
inc
pop
pushf
adc
mov
movsb
xchg
dec
test
jecxz
dec
dec
pop
inc
mov
in
mov
jb
in
mov
jne
sbb
mov
xor
or
mov
aaa
mov
mov
pop
xor
xchg
or
and
mov
sub
pop
push
ss
push
std
mov
stos
std
xor
loop
dec
sahf
pop
je
and
fnstenv
cltd
out
shrl
mov
inc
dec
lods
jp
mov
mov
arpl
loopne
call
jge
inc
and
jecxz
iret
addr16
ljmp
add
mov
popa
test
lods
test
loope
mov
std
loopne
push
sbbb
mov
mov
loop
fimull
mov
in
jne
cmp
adc
mov
pop
das
imul
inc
jb
mov
inc
mov
pushf
mov
push
ljmp
push
mov
xchg
jmp
mov
inc
sbb
push
cmpsb
sub
imul
jne
jae
out
shr
in
inc
pop
adc
push
rolb
push
pop
add
or
out
lods
repnz
fnstcw
jno
push
xchg
pushf
dec
or
sarl
jns
inc
daa
outsl
jno
push
dec
jmp
in
lret
das
pop
clc
xorb
mov
sub
xor
inc
xor
xchg
lods
mov
pop
xchg
loop
push
xor
dec
imul
lcall
shlb
or
xchg
cmpsl
sti
mov
into
cmpsl
dec
jl
cltd
jge
pushl
cli
ljmp
dec
xchg
xorb
inc
stc
push
sbb
jo
aam
xchg
ret
popa
cli
in
inc
sbb
mov
clc
addr16
popf
js
int
cmp
jnp
mov
mov
push
mov
xchg
jns
xchg
mov
fnstcw
scas
lea
push
loopne
in
cmpsl
out
xchg
dec
int
sbb
mov
lods
popa
in
sbb
jb
mov
rcll
lcall
jno
das
ds
sti
test
pop
mov
xlat
inc
sbb
ss
jp
shrb
mov
daa
cwtl
movsl
mov
daa
dec
jecxz
mov
data16
dec
dec
inc
jae,pn
bound
and
jecxz
push
mov
je
insb
push
dec
lds
icebp
out
adc
aaa
xor
pop
jecxz
xchg
stos
jle
cmp
add
mov
ds
test
xchg
push
mov
icebp
or
in
ret
adc
or
leave
dec
in
xor
jg
jecxz
and
repz
sub
ja
test
jno
pop
mov
push
leave
sbb
mov
cmp
je
mov
testl
xor
cli
movsl
push
incb
ret
aas
loope
push
cmp
mov
aas
into
test
into
inc
add
xor
mov
adc
xchg
mov
push
jmp
fs
inc
inc
cld
pop
out
cmp
movsb
insl
inc
mov
lods
mov
mov
pop
out
pop
add
aam
mov
andl
xchg
shll
push
call
dec
push
jmp
mov
cmp
push
sub
adc
out
fisttpl
mov
xchg
sbb
adc
es
pop
push
sub
add
dec
bswap
ret
mov
iret
dec
mov
clc
mov
dec
aas
xor
lahf
incl
rep
ret
xlat
addr16
std
pop
iret
adc
mov
or
int3
lds
push
rol
mov
push
loopne
clc
pop
outsl
fwait
lods
pop
rorb
clc
stos
movsb
lods
out
add
jae
adc
push
shrb
and
mov
out
repz
dec
aam
mov
fldenv
push
mov
add
mov
add
add
add
lods
and
imul
sub
add
faddl
icebp
cmc
inc
jg
addb
mov
adc
push
mov
xor
in
mov
xchg
jecxz
je
ret
aaa
sub
or
push
bnd
push
sub
mov
jne
je
inc
xlat
scas
gs
stos
jne
ds
push
fstl
fidivrs
xchg
int
jecxz
inc
loope
ret
inc
stos
rcrb
jl
jne
imul
jne
fstpt
gs
aam
cmp
dec
inc
xchg
pop
mov
mov
movb
xchg
mov
fwait
jno
testb
push
cmpsl
xlat
adc
xchg
gs
js
les
fcoms
dec
cmp
inc
outsl
daa
test
add
mov
int3
aam
nop
lcall
enter
mov
sahf
shll
xchg
fdivr
push
aas
les
mov
push
mov
pop
cs
dec
repz
fidivrs
push
cmp
inc
jmp
sub
repnz
sub
leave
jle
pop
lret
bound
xor
cmp
fcmovbe
pushf
pop
mov
cmp
add
mov
cmp
sub
cmp
shl
out
les
in
xchg
adc
sub
inc
pop
xchg
cmp
inc
shll
fwait
mov
mov
js
repz
xor
and
push
mov
insb
imul
xchg
mov
mov
sbb
cli
je
or
js
aaa
test
or
imul
cmp
dec
out
insl
movb
pop
mov
pop
adc
andl
adc
faddp
xlat
jb
popf
mov
pop
loope
xchg
jg
xchg
cmp
lret
test
cmp
repz
addb
jns
shll
popa
mov
mov
dec
xorl
jno
adc
add
subb
loopne
mov
cmp
pop
ret
jle
adc
mov
shlb
test
inc
loopne
mov
xchg
adc
aaa
push
lods
sbb
push
inc
xchg
push
mov
arpl
lret
cmp
jns
test
bound
or
imulb
or
gs
or
into
pop
jo
std
mov
mov
and
iret
jo
fstpl
test
cmpsl
cmpsb
das
out
jmp
out
or
pop
int
out
add
pushf
pop
sub
test
pop
mov
dec
mov
cwtl
hlt
int
imul
jae
and
sbb
push
loop
cli
push
scas
push
xor
cmp
test
int3
inc
or
xor
sub
cmp
jge
cmp
pop
xor
fcoms
cmp
mov
pop
mov
lcall
scas
nop
mov
pop
adc
push
insl
dec
mov
and
sub
aad
cwtl
aaa
jo
jns
inc
mov
push
xor
adc
push
aas
xchg
pop
mov
pop
pushl
lahf
add
cmpsb
add
mov
or
xchg
adc
jl
stos
cmp
mov
rorb
inc
js
pop
pop
add
out
lods
xchg
movsb
mov
shlb
sub
mov
stos
fdivl
xor
movsl
and
cld
cld
push
dec
sbb
add
mov
lretw
pushf
aas
arpl
mov
pop
jl
push
add
test
jno
or
vunpckhps
xchg
hlt
xor
ljmp
stos
popf
fdivr
jo
inc
jl
adc
lret
mov
jno
push
mov
or
jae
mov
or
mov
mull
pop
pushf
aam
addr16
mov
jl
cmp
xchg
movsl
aam
cs
jno
inc
movsl
sbb
stos
subb
sbb
mov
leave
pop
or
ja
mov
mov
cmp
adc
les
ljmp
cmpsl
push
add
pushf
adc
push
ja
pop
mov
jb
mov
or
pop
mov
popa
pop
adc
mov
mov
scas
cltd
pusha
incl
stos
stos
jmp
sbb
xor
mov
cmp
in
popa
nop
out
mov
push
loope
push
cltd
sub
iret
mov
cli
push
jns
pop
incl
sub
adc
out
dec
cwtl
and
popf
inc
xchg
insl
ret
cld
xlat
cmp
cmp
rep
xor
and
pop
xchg
dec
mov
out
jg
cmpsb
sbb
jecxz
outsl
test
pop
out
push
les
gs
das
add
push
add
pop
sub
pop
xchg
cmpsl
ljmp
sub
push
popf
in
mov
jo
loope
xlat
sti
or
stc
lea
insl
dec
sub
ss
sub
pop
cs
inc
xchg
xor
xor
jp
sbb
js
enter
dec
es
pop
push
andb
stos
sbb
adc
mov
rcl
aam
dec
pop
mov
sarl
mov
jge
xorb
sub
jle
xchg
subl
mov
push
int
adc
mov
sbb
popa
xchg
inc
shll
xor
orb
inc
call
aas
lds
and
mov
std
stos
nop
and
adc
std
popa
iret
loop
fsubrs
jb
insb
and
and
jbe
lahf
xor
xorb
inc
imul
out
pop
pusha
mov
insb
adc
and
jo
repz
add
jecxz
mov
jl
adc
dec
call
shlb
xor
outsl
cltd
jl
push
pop
outsl
aas
int
andb
inc
or
cmp
ret
shll
sbb
jno
pop
mul
shll
jno
xor
mov
movb
loope
mov
not
or
dec
popa
jo
lcall
xor
inc
add
mov
iret
dec
jge
imul
inc
mov
scas
xchg
xor
adc
shll
decl
scas
cmpsl
imul
rcl
in
dec
or
dec
enter
stos
pop
out
daa
stc
mov
movq
or
addb
in
and
int3
sti
pop
or
push
insb
mov
cmpsl
test
mov
mov
sub
cmc
sbbb
xchg
xor
and
inc
mov
mov
loopne
push
adc
fincstp
cmpsl
data16
jl
js
orl
ds
out
in
insl
std
sub
xlat
jp
in
pop
adc
out
lock
enter
outsl
mov
jbe
out
rolb
bound
daa
xchg
es
jg
xor
movsb
lea
out
fisubrs
nop
pop
jp
cmp
insl
jmp
add
mov
and
ja
mov
ja
pop
jmp
ficomps
popa
ficomps
mov
sbb
cmpsb
jbe
loopne
movsl
sub
imul
fadd
push
mov
insl
int
cmp
push
es
or
mov
dec
aas
stos
adc
jmp
leave
cmp
add
pop
hlt
cmp
cld
scas
jecxz
jmp
jmp
dec
adc
cmp
in
adc
fldenv
repnz
xchg
pop
inc
xchg
hlt
shrl
mov
insl
pop
call
pop
frstor
cmp
push
sti
and
je
xchg
stos
lods
dec
mov
add
ja
or
lret
cmc
mov
dec
push
int3
jo
popf
cmpsl
aad
cmp
xor
xchg
in
dec
adc
imul
mov
lods
lock
xchg
jno
aam
test
mov
repnz
rclb
xor
pop
aas
fwait
cld
test
mov
or
pop
cmc
sbb
fwait
mov
lcall
push
xlat
sub
shll
sarl
insb
mov
test
outsb
xor
inc
cli
mov
ds
adc
add
xor
push
xchg
pop
add
push
mov
sub
push
xor
popf
stos
mov
mov
scas
fucomip
mov
sbb
cmpsb
xchg
jns
lock
dec
and
xor
out
imul
iret
shrb
add
and
jo
and
in
dec
not
jl
mov
xchg
lods
fisubl
lcall
mov
mov
add
dec
xor
mov
jle
or
xchg
fadd
loope
push
cmpl
rolb
cmpl
test
inc
inc
mov
in
pusha
jae
mov
add
add
pushf
out
xchg
add
fdivrl
lds
push
xor
jno
xlat
sbb
mov
add
jmp
lret
sbb
push
push
sahf
mov
xchg
pop
movsl
in
jl
test
xchg
in
and
dec
cmp
and
stc
jbe
push
or
adc
or
xchg
or
mov
imul
arpl
xchg
pop
out
or
jns
loop
jmp
and
and
hlt
mov
rolb
jnp
xchg
fs
scas
xlat
nop
xchg
dec
lods
sub
jbe
push
adc
repz
enterw
not
inc
mov
in
and
xchg
out
dec
std
mov
daa
mov
xchg
in
xchg
mov
mov
mov
mov
adc
mov
icebp
bound
fwait
ds
dec
xchg
jp
sbb
imul
out
sub
jg
out
xor
adc
out
lret
sbb
dec
aad
imul
rol
xor
dec
sti
rolb
inc
incl
frstor
push
xchg
inc
xchg
adc
filds
jg
mov
data16
jne
in
in
cmp
fisubl
fstl
pop
push
mov
lea
lea
mov
test
aaa
shll
pop
enter
movsb
jne
pushf
push
in
or
xchg
imul
in
scas
dec
outsl
adcl
mov
repz
mov
jl
dec
rolb
stos
imul
jecxz
push
bound
lea
repnz
mov
sub
sub
xchg
out
into
push
push
jbe
lods
add
adc
cli
ficompl
mov
mov
das
idivl
fdivrl
iret
daa
pop
add
imulb
dec
imul
loope
xor
jmp
insb
push
test
push
outsl
push
shll
pop
pop
ffree
insb
js
sub
sti
fcmovnb
and
xchg
data16
xor
fnstenv
out
mov
mov
mov
sbb
xchg
test
outsl
test
push
shr
mov
test
lock
inc
sbb
lds
add
inc
rclb
jne
sbb
int3
pop
scas
outsb
leave
xor
and
inc
fs
mov
sub
shrl
shr
int3
rcrl
push
jbe
bound
aam
rclb
xchg
dec
fsubrs
daa
sub
shr
addr16
in
push
dec
sbb
xchg
insb
adc
xor
mov
lea
lcall
inc
pop
pop
lret
and
jae
daa
aaa
mov
outsb
mov
jb
adc
push
mov
cmp
lds
mov
hlt
movb
mov
test
or
nop
in
es
imulb
notb
and
lahf
fsubrs
sbb
push
jge
xor
divb
mov
aam
dec
cld
or
jo
stos
in
or
xchg
lods
jbe
mov
push
adc
outsb
cmpsl
pop
das
test
lcall
jge
mov
cmp
lock
js
test
fwait
sub
out
adc
addl
lea
push
mov
test
stos
dec
mov
xchg
adc
lcall
sbb
cmp
int
push
xor
dec
popf
lcall
xlat
es
push
xchg
test
mov
sub
out
ss
mov
xlat
cmp
scas
in
aad
xor
stc
mov
jbe
xlat
jecxz
jecxz
dec
jle
fcomps
ficompl
pop
gs
inc
or
sub
sub
shrl
jge
sbb
mov
bound
mov
add
lods
cltd
jo
sbb
notb
sub
mov
mov
xor
push
mov
inc
test
call
pop
mov
pop
xor
data16
mov
popf
mov
arpl
idiv
out
daa
orl
cli
frstor
and
fsubrs
lds
ja
std
push
repnz
testl
xchg
pminub
test
sahf
jo
loope
movb
adcb
mov
xchg
mov
inc
dec
ljmp
mov
sub
clc
xlat
das
adc
pop
push
lods
push
xor
push
jns
lock
std
mov
popf
and
inc
dec
inc
and
mov
sbb
pop
adc
shlb
in
jmp
add
cmp
movsb
xor
movsb
repnz
cmp
mov
push
jns
rol
sbb
loop
mov
sub
ret
inc
xor
movsl
ljmp
movsl
arpl
sti
loopne
add
icebp
inc
dec
or
dec
pop
hlt
xchg
xchg
mov
xchg
shl
inc
mov
and
cmc
scas
icebp
es
add
ss
sbb
icebp
jnp
jne
les
lahf
aad
push
mov
pop
xchg
mov
fisubl
push
pop
jp
adc
push
xor
sub
or
push
scas
cltd
jo
dec
lahf
hlt
ds
imul
mov
xchg
pop
and
into
outsl
cmp
enter
jae
sub
test
and
cmp
mov
mov
roll
or
inc
xor
dec
jp
add
add
dec
or
in
hlt
icebp
shll
add
lahf
inc
dec
sub
pop
rolb
fldenv
pop
in
jp
icebp
ret
stos
pop
ficoms
cvtdq2ps
lds
push
pop
js
sti
mov
into
sbb
adc
pop
popf
cmp
push
cmp
cwtl
bound
xlat
push
sbb
mov
mov
or
insl
lds
inc
adc
inc
xor
xor
fwait
loope
test
inc
in
outsb
ret
dec
and
cmp
jecxz
add
mov
pop
int
pop
outsb
aas
fdivs
pop
lock
scas
adc
fsubrs
jg,pt
push
les
mov
sub
pushf
test
mov
pop
pop
ficompl
je
popa
mov
lcall
sub
push
imul
call
push
outsl
je
xor
sarb
rcrb
mov
pop
cli
jmp
imul
sub
or
call
sub
push
mov
mov
lock
mul
ljmp
xchg
subb
sub
sar
xchg
sbb
stc
jle
cmpsb
inc
push
lret
or
jmp
or
dec
imul
stos
shll
fdivl
movsl
push
pop
sub
arpl
jp
pop
lea
sti
fdivrs
cmpsb
mov
jb
xchg
test
sarb
pop
cmp
add
xlat
inc
cmp
or
or
mov
sahf
cwtl
inc
scas
lods
sbb
jge
adc
fistl
jbe
mov
push
cmp
sti
aam
mov
jl
push
xor
jl
push
push
xchg
test
sbbl
sti
xrelease
pop
aam
push
or
mov
sbb
pop
in
sub
sub
mov
aad
xchg
add
jmp
std
pop
pop
mov
mov
dec
roll
add
out
pop
imul
lahf
out
inc
lock
jle
in
imull
fcmovne
mov
sbb
leave
push
cs
mov
cmp
out
test
leave
cmp
jmp
test
jb
mov
mov
imul
jl
push
push
mov
shr
cmp
mov
and
and
xchg
and
cwtl
and
scas
loopne
lret
jbe
push
arpl
inc
pop
xor
adc
adc
dec
dec
test
scas
cs
dec
xor
in
lods
add
jnp
xor
sbb
das
pusha
fisttps
aas
test
ljmp
rcl
pop
movsb
addr16
xchg
lea
mov
mov
movsb
or
xchg
aas
xor
and
mov
jge
movsb
mov
ja
xor
fidivs
push
into
mov
or
mov
cmp
push
inc
pop
sbb
xchg
mov
xchg
push
sub
outsl
mov
mov
jle
scas
adc
jge
mov
adc
hlt
inc
push
push
adc
jnp
push
bound
lcall
inc
mov
je
mov
mov
clc
mov
xlat
mov
call
mov
fwait
cwtl
push
das
fsubrs
outsl
push
int
mov
cli
cld
push
out
lret
pop
lcall
dec
inc
inc
jno
enter
cs
outsb
icebp
jecxz
dec
mov
xchg
xchg
hlt
movsb
mov
pop
cmp
fidivrl
adc
rcrb
push
xchg
push
call
push
mov
bnd
es
je
inc
in
testl
jae
lret
out
dec
iret
ficoml
adc
add
jl
test
xor
rcll
mov
es
cmp
notb
push
sbb
into
shll
jo
inc
out
jp
ljmp
pop
emms
add
inc
xchg
add
cltd
je
iret
jge
dec
and
xchg
and
insb
or
xor
and
cmp
cmpsl
movb
movsb
les
sbb
xchg
add
test
add
cmpsl
fdivrs
mov
xchg
xchg
je
inc
xor
xor
hlt
fisubrs
and
jge
jne
daa
fs
pop
push
lock
repz
fcoms
and
jmp
add
test
lahf
mov
and
imul
mov
rcrl
fistpll
jge
wbinvd
jb
outsl
and
push
insl
xchg
mov
mov
xchg
add
and
xchg
jo
roll
lea
les
stc
mov
shll
jecxz
stc
mov
mov
add
xorl
xor
pop
sbb
data16
mov
mov
bound
xlat
insl
cmp
and
lahf
mov
test
and
fs
sub
push
cmp
cmp
push
mov
pop
jl
or
sub
cli
loop
ror
mov
jmp
and
outsl
adcl
mov
mov
cmpsb
mov
mov
dec
sahf
icebp
pop
inc
test
push
push
add
lds
cmpl
xor
add
pop
lods
pop
mov
push
ljmp
adc
pop
into
adc
enter
sub
mov
push
aas
je
mov
adc
add
mov
hlt
fwait
adc
imul
fimull
push
or
inc
jecxz
insl
adc
les
out
pop
popl
pop
mov
or
xor
mov
dec
testl
mov
les
js
jecxz
cmc
mov
mov
cwtl
je
push
mov
loope
cmpl
rcrl
test
es
and
sub
jge
push
push
inc
mov
push
push
mov
ds
lret
notl
loope
mov
push
out
adc
lret
xor
pop
xchg
pop
imul
mov
out
aaa
fcoml
inc
cmpsl
bound
xor
push
leave
or
jo
ret
mov
lods
incl
push
push
add
adc
roll
jo
out
jne
mov
icebp
add
mov
in
stc
lret
int3
push
xchg
dec
test
adc
insl
and
pushf
push
pop
sub
push
out
inc
out
fidivrl
push
fbstp
xchg
inc
jnp
ficoms
xchg
pop
xchg
xor
xchg
and
and
lods
je
fwait
ljmp
adc
inc
iret
and
imul
jae
push
fstl
mov
fdivl
xchg
shlb
mov
jmp
into
arpl
dec
add
jmp
aad
popa
bound
adc
adc
test
and
out
mov
mov
faddl
repnz
leave
adc
inc
and
andl
mov
push
hlt
popf
mov
xchg
imul
mov
test
arpl
xor
out
mov
mov
lods
jo
jg
in
add
xchg
test
mov
xlat
xchg
mov
loop
cmp
repz
push
push
adc
inc
call
insb
daa
jae
pop
hlt
pop
sbb
push
push
icebp
mov
push
outsl
and
pop
inc
add
sub
sbb
out
mov
jno
repnz
mov
or
push
xchg
rcrb
test
push
push
shl
inc
jmp
stc
ss
cmp
and
rcl
or
push
mov
popa
aad
ret
push
enter
mov
fistl
cmc
xor
add
cld
or
jne
nop
std
cmp
call
jle
mov
mov
fdivs
jae
xor
mov
loop
psrlq
cmp
mov
lret
out
cmp
addr16
or
fdivp
in
push
rolb
mov
cmp
mov
out
imul
push
fiaddl
sbb
and
cmpb
jnp
push
add
orb
imull
mov
or
fwait
sti
repnz
and
sub
stc
mov
push
sub
jmp
clc
mov
mov
lods
test
xchg
js
push
cmp
and
into
stos
push
outsb
fcmovnu
loope
jg
mov
adc
shll
mov
les
mov
dec
mov
inc
sarl
mov
pop
xchg
gs
test
sbb
fwait
rcr
push
adc
push
rcrl
push
and
pop
arpl
sbb
outsb
ljmp
loopne
pop
or
dec
dec
pavgb
push
sub
lcall
out
popa
xlat
in
cmc
dec
cmpsb
cmpsb
fisttps
mov
jnp
sub
psubd
mov
push
xor
cwtl
add
xor
sub
mov
inc
sub
cmp
loope
pop
xchg
cmp
jecxz
and
cltd
pop
mov
jnp
xchg
xorb
cmp
push
fdivrs
sub
push
out
pop
int
outsb
lods
adc
jp
lret
sti
jg
lods
xlat
xor
repz
lret
test
sub
mov
pop
mov
xchg
cmp
mov
fistpl
xchg
sbb
ljmp
fcomps
arpl
ret
xchg
xlat
jns
jb
pushf
push
pop
push
mov
adc
jb
aad
mov
and
jno
lods
mov
test
inc
push
push
push
jmp
in
xchg
pusha
lahf
cmp
cltd
jmp
inc
iret
jle
aaa
dec
mov
fadds
sbb
out
shr
pop
xchg
mov
jle
mov
mov
mov
jnp
int
sti
pop
pushf
push
clc
jp
outsb
jbe
add
popa
aas
cmp
cmp
aaa
mov
xchg
jo
popf
adc
xor
repnz
rorl
cmc
jno
sbb
mov
mov
imul
scas
inc
pusha
pop
fildll
jnp
and
or
stos
in
arpl
inc
test
sbbl
pop
push
fidivrl
daa
aaa
cltd
icebp
arpl
or
add
cmp
lods
push
outsb
pop
cmp
lock
dec
add
mov
push
inc
adc
mov
cld
out
jp
stos
lods
fstl
cmp
xor
adc
sbb
xchg
cmp
fistps
repz
inc
sti
fbld
ret
lea
mov
cltd
push
fbstp
pop
test
subl
mov
outsl
jo
lcall
mov
and
mov
ficoml
push
push
divb
mov
jb
sbb
mov
jns
jmp
inc
push
pop
sbb
stos
sbb
jbe
cmp
mov
sub
push
pop
mov
push
jns
dec
out
dec
mov
and
jne
hlt
jno
lock
iret
test
out
push
imul
mov
stos
std
xlat
mov
lods
es
stos
adc
dec
inc
sbb
hlt
xor
test
gs
inc
pop
mov
out
inc
sbb
push
pop
ret
pop
push
int3
dec
cs
mov
sub
call
sbb
and
mov
loopne
mov
dec
pop
adc
pop
fidivrs
sbb
test
mov
pop
lahf
push
pop
push
push
lea
lods
ljmp
outsl
lods
jno
dec
sbb
mov
enter
arpl
jg
dec
adc
xchg
xchg
cmp
cmp
and
rcrb
ss
addr16
push
xor
jae
cmp
icebp
push
scas
das
scas
enter
xor
inc
iret
jbe
fisubs
mov
stos
mov
mov
dec
cmp
jmp
ficomps
dec
das
fbld
sbb
jns
jb
call
mov
jmp
repnz
push
add
pop
out
fimull
pop
test
cltd
popf
int3
test
in
inc
aaa
cmp
mov
xchg
sub
dec
jo
pop
std
push
lar
js
xchg
shll
push
into
out
xchg
or
cvttps2pi
xchg
scas
xorb
inc
push
cmp
lahf
cli
adc
js
add
xchg
notl
adc
add
xor
xchg
mov
je
ja
mov
inc
push
faddl
jne
jp
mov
cwtl
push
scas
adc
push
jmp
jnp
jp
mov
add
stos
sub
mov
lret
sbbl
pop
int3
fnstenv
dec
mov
mov
in
mov
mov
aam
sbb
push
daa
sub
and
push
or
call
lds
stos
jno
adc
jns
and
daa
std
sarl
pop
mov
cmp
test
shll
jle,pn
sbb
test
dec
rclb
or
push
test
popf
sti
ficomps
push
inc
idivb
mov
hlt
pop
out
xor
inc
pop
lret
jns
lahf
addb
stc
xor
pop
xor
inc
push
aaa
mov
inc
test
xor
push
shlb
cmp
jp
enter
jo
cmp
je
sbb
sti
fs
imul
insb
in
fildl
jns
adc
xor
dec
xor
add
gs
adc
int
loop
mov
loope
lahf
cmp
cmp
mov
insl
adc
xchg
daa
es
mov
add
xlat
sahf
push
lock
xchg
xor
daa
dec
pop
and
orb
jns
cld
mov
aas
inc
xchg
cmpl
es
or
inc
aaa
cwtl
add
jno
rcl
mov
jns
ja
adc
xor
leave
mov
sbb
push
xchg
jmp
jae
inc
stos
mov
and
dec
repz
stc
pop
jp
jb,pt
push
js
add
push
push
push
out
sbb
cmpsl
and
xor
add
pop
lahf
push
jb
pop
or
insb
pushf
jmp
jbe
int
icebp
mov
xchg
ja
sarl
sahf
call
ds
cmp
frstor
mov
adc
pop
aad
rcrl
dec
into
push
icebp
pop
mov
call
jno
xor
ja
cmp
popa
out
cmp
sub
mov
test
jns
xor
or
out
xor
notl
sbb
mov
insl
xchg
pop
sub
add
and
sbb
data16
call
fcmovb
push
cmpsl
ret
cmp
cmpsb
inc
cmpsb
dec
add
fbld
cmc
aas
icebp
cmp
cmp
repnz
scas
mov
ja
push
js
outsb
push
jns
cwtl
jecxz,pn
addr16
stc
inc
enter
int3
fucomp
xor
rcrl
loop
into
fstps
inc
mov
fildll
sbb
pop
push
xchg
fs
sub
mov
mov
add
xchg
pop
adc
xor
pop
sarl
test
dec
loopne
out
dec
shrl
push
adc
mov
in
cmc
inc
pop
mov
and
fsubl
fdivl
or
cmp
ds
xor
cmp
lods
sub
mov
iret
leave
scas
stc
divl
jo
mov
sbb
aaa
fwait
dec
test
xchg
gs
jno
into
and
dec
loop
test
leave
pushf
fcompl
cmp
push
mov
loopne
test
or
mov
pop
sbb
mov
cwtl
imul
aad
lahf
popf
push
subl
push
jno
mov
jnp
adc
xor
pop
or
outsl
gs
xchg
int3
xchg
or
mov
in
cmp
fs
movl
jge
or
mov
add
mov
mov
push
cmpsl
add
mov
std
inc
sbb
jmp
cmpl
loope
repz
in
adc
cwtl
push
into
ljmp
sbb
dec
aad
loopne
xor
jg
sbbl
test
jnp
mov
movsb
call
mov
test
add
test
movsb
jmp
push
ds
cld
mov
stos
jnp
dec
jl
xor
insl
movsb
cmp
fdivrs
lret
jo
dec
jmp
pop
and
out
cmp
jp
pop
cli
inc
mov
lock
push
cmp
dec
shlb
iret
out
in
fwait
xchg
repz
dec
sbb
int
inc
lea
mov
fwait
mov
jecxz
ss
test
pop
mov
bound
ljmp
lods
sub
jae
xor
testb
cmp
adc
sub
xlat
cmp
jne
sarl
out
out
adc
mov
arpl
fimuls
dec
aad
scas
insl
cmp
out
ljmp
sub
cltd
in
mov
jae
call
aam
xchg
push
lahf
clc
dec
pop
lock
cmp
xor
or
xor
rcrb
sbb
jle
shrl
loop
xchg
in
sub
jo
xchg
cwtl
jb
aad
xchg
mov
cwtl
add
adc
jnp
pop
and
mov
lds
lods
outsl
sub
out
xchg
or
jg
inc
inc
xchg
cs
insl
sbb
mov
out
push
lock
or
and
hlt
mov
push
mov
cmp
add
leave
inc
add
loop
lds
fwait
iret
cltd
push
int
fnsave
test
jb
jb
inc
pop
insb
cmpsb
push
mov
jmp
mov
ds
call
xchg
sub
sub
lods
cmp
in
lcall
inc
fnstenv
mov
cmc
bnd
mov
cmpsb
cmp
inc
sbb
loope
shlb
test
cli
pop
in
sti
aaa
inc
sahf
jle
cmp
scas
loope
clc
push
pop
mov
add
or
mov
push
shlb
jp
add
out
push
mov
aaa
mov
pusha
xor
cmp
sbb
xchg
rorb
enter
divl
sti
sub
add
aam
fldt
pop
test
pop
scas
dec
addr16
pop
popw
sub
push
push
mov
bound
movsb
xchg
out
sub
dec
int
lds
push
dec
dec
incl
inc
rolb
push
xor
decl
jecxz
jne
jo
jo
cs
ss
pop
inc
inc
nop
mov
inc
icebp
dec
imul
mov
faddp
jmp
test
ja
jns
mov
sbbb
push
rclb
push
xor
cmp
and
bound
mov
mov
mov
push
ret
fbld
push
pushf
fsubl
pushf
bound
mov
inc
jge
mov
nopl
mov
rcrl
int
or
dec
xlat
sbb
cmc
lea
xchg
push
fstpt
shlb
cwtl
aam
aam
push
pop
test
andl
ljmp
imul
mov
icebp
dec
shlb
out
mov
jl
inc
subl
inc
jp
push
iret
lret
rclb
fimull
dec
ss
ret
insb
stos
aad
sti
int
jb
sbb
or
or
or
rolb
or
insb
adc
loopne
mov
lahf
xlat
dec
lock
shll
jbe
fucomip
xor
dec
inc
ja
shrl
into
sbb
sahf
shll
lret
icebp
ss
in
int
lods
pop
mov
data16
jae
pop
daa
fidivrl
push
mov
je
lcall
xchg
clc
jb
xor
nop
jnp
jae
fidivs
imul
flds
out
inc
pushf
inc
sbb
or
int
test
pop
pop
mov
fldenv
movsb
mov
in
jnp
pop
mov
lods
push
sti
mov
mov
shr
mov
pop
inc
mov
jp
pop
dec
mov
aad
mov
lods
and
stos
inc
out
mov
xor
ret
dec
pushf
inc
mov
sbb
dec
cld
jb
dec
push
lds
sub
and
xor
dec
xchg
test
sbb
movsb
lds
gs
cmp
shlb
inc
faddl
hlt
xchg
push
or
cli
mov
and
xchg
mov
xchg
xchg
push
cltd
jg
imul
aaa
cli
out
lods
sbb
andb
lcall
push
cmp
adcl
sbb
or
pop
mov
jo
push
jo
add
out
lret
out
xor
lcall
adc
test
and
push
jo
jnp
mov
imul
mov
aam
leave
jns
loopne
fisttps
lahf
sbb
xchg
lret
bound
stos
lret
mov
dec
fisubs
popf
mov
dec
and
inc
sub
lds
xchg
pusha
mov
jle
popf
cmpsl
loop
xchg
sub
sbb
and
in
dec
push
jnp
rcrl
int3
fcom
das
shll
push
ja
popf
popf
data16
movsl
push
add
fisubl
leave
cmp
lahf
push
pop
sbb
xor
mov
adc
mov
cmp
push
push
push
js
jge
sub
mov
push
mov
add
inc
inc
outsb
popa
cmp
lret
out
sub
stos
in
jmp
cmp
inc
dec
iret
into
aas
xchg
pop
aas
or
clc
sbb
clc
jnp
outsb
std
je
cmp
aas
xchg
jmp
inc
imul
and
add
cbtw
mov
nop
nop
mov
les
sbb
xor
jp
lods
pop
add
inc
lock
inc
div
and
fists
fmul
and
insl
daa
mov
lret
push
js
lods
and
push
inc
shlb
push
insb
inc
jp
sbb
dec
addr16
popa
rolb
mov
fadd
fwait
adc
and
jnp
pop
mov
inc
icebp
adc
sahf
call
xchg
cltd
and
inc
push
and
call
lds
inc
ret
adc
lods
jno
mov
movsl
aad
adc
jnp
repz
mov
or
inc
popa
out
dec
add
nop
inc
mov
dec
mov
pop
jge
cmp
cwtl
iret
ret
mov
pushf
sarb
arpl
push
inc
lret
lret
push
xor
fs
lret
push
dec
sbb
jecxz
scas
ja
add
popw
mov
les
ret
pop
xor
mov
in
mov
loope
mov
mov
dec
mov
movsl
jle
mov
andb
add
shll
sti
adc
movsb
loope
xor
stos
push
xor
ljmp
out
lock
in
sbb
xchg
daa
sbb
cmp
addr16
push
cs
xor
mov
push
lret
dec
sti
xchg
xchg
inc
ret
out
adc
ret
lds
or
adc
pop
jmp
push
adc
jge
fwait
movsb
leave
add
xchg
fldt
xchg
jb
mov
into
outsl
lahf
fstpt
inc
cmp
adc
ds
cmp
adc
pop
mov
add
lods
mov
xchg
push
mov
jbe
mov
sub
cmc
in
or
pop
mov
ss
xchg
and
pop
mov
mov
divl
test
mov
out
xor
push
test
push
jae
jle
sbb
xor
push
nop
dec
mov
dec
mov
pushw
sub
sub
pop
push
outsl
inc
jl
add
stc
xchg
int
pop
je
xchg
in
inc
xor
xchg
shrb
mov
int
aas
lock
loop
sbb
cmc
aas
mov
cmc
or
nop
adc
jp
dec
in
push
cmp
mov
mov
xor
std
cmc
std
mov
xor
sbbb
lods
int3
cli
sbb
push
sub
popf
xchg
shll
popw
mov
scas
jle
inc
jle
cmc
fsubrl
repnz
mov
push
nop
imul
dec
sbb
mov
stc
sbb
dec
lods
in
mov
lds
mov
xor
decb
or
cs
out
and
inc
or
out
or
mov
mov
sbb
sub
sbb
icebp
hlt
cmpsl
int3
aad
lock
jle
cs
xchg
js
or
push
dec
push
pop
sbb
in
and
jmp
dec
xchg
push
insb
push
lret
xchg
out
xor
push
dec
test
push
xchg
sbb
and
dec
das
sbb
ja
aam
les
cmpsl
mov
fnstsw
data16
es
and
or
push
cmp
sbb
sar
and
pusha
out
mov
test
cwtl
cmp
int
fcomps
clc
cltd
loopne
push
xlat
pusha
mov
es
jle
mov
les
pop
fmull
push
lahf
test
daa
jecxz
out
jb
lods
and
iret
or
push
sub
push
pop
mov
jbe
adc
jp
in
orl
xor
fcmovnu
xchg
jnp
mov
stos
inc
sub
testb
xchg
movsb
inc
mov
xchg
push
repnz
mov
cmp
mov
xor
stc
jbe
cmp
out
rcr
xchg
popf
test
loopne
ljmp
out
cmp
insb
and
mov
jle
cmpsl
andl
inc
cwtl
pop
idivl
xlat
divl
out
fsts
pop
cmpb
cmp
in
clc
or
adc
sbb
lcall
inc
stc
and
repz
movsl
and
jbe
mov
add
movsb
in
or
sbbl
out
call
icebp
add
repz
add
clc
jne
in
cmp
xchg
outsl
pop
dec
iret
or
pop
fldz
xor
push
pop
ja
sbb
xchg
mov
ds
fsubrp
push
or
sub
pop
push
iret
dec
mov
and
data16
sbb
mov
add
and
fdivrl
negl
sahf
add
jns
mov
mov
das
scas
jb
test
jo
mov
or
loopne
mov
mov
push
xchg
call
mov
in
jne
cmp
hlt
and
incb
jb
ret
lea
and
fcoml
cmp
mov
sub
rol
xchg
ljmp
out
pushf
inc
xchg
repz
jl
mov
pop
subb
cwtl
cmp
andl
aas
les
outsb
lods
cwtl
jl,pt
gs
movsb
adc
inc
loope
std
cltd
loopne
push
add
fisubs
out
enter
cmp
inc
pop
sub
rcll
adc
outsb
cmp
out
cwtl
sbb
mov
test
adc
jno
mov
mov
xor
loop
inc
stos
movsl
dec
mov
rcl
and
add
pop
jne
mov
loop
mov
aas
add
dec
mov
push
mov
xor
daa
xorl
call
lods
xchg
inc
movsl
pop
add
or
sub
push
mov
leave
xchg
in
shll
cld
mov
sub
bound
cmp
cmp
jb
dec
mov
es
pop
xor
mov
xchg
in
mov
jne
push
cmpsb
stos
rorl
loope
mull
cs
test
mov
inc
xor
xchg
cmovg
lods
sub
pop
insl
mov
scas
enter
addr16
or
jp
inc
mov
push
insb
out
unpcklps
ret
sub
mov
iret
sahf
lahf
pop
lret
sbb
mov
mov
dec
idivl
or
dec
fdiv
pushf
ds
adc
fildll
mov
adc
lret
imul
xchg
imul
dec
mov
icebp
jmp
lret
sub
jecxz
jl
aad
popf
dec
jno
sub
sub
mov
push
adc
jbe
adc
jne
adc
sbb
test
xor
loopne
cli
add
pushf
aas
mov
imul
lret
and
mov
inc
mov
jle
jnp
test
mov
adc
xchg
adc
test
outsl
cmp
add
in
mov
std
add
popa
mov
ds
mov
aas
xchg
mov
pusha
add
cltd
mov
push
push
push
adc
idivb
mov
mov
push
scas
inc
xchg
lret
and
mov
out
lret
cmpl
bnd
bound
dec
jb
mov
push
fistpll
inc
and
sub
cld
daa
xchg
mov
add
lea
push
fwait
jecxz
or
pop
sbb
lret
pop
movsl
push
mov
adc
push
popa
inc
mov
rcrb
or
in
cwtl
inc
lea
mov
lea
into
mov
mov
clc
inc
aas
scas
les
mov
pop
and
inc
iret
in
lret
sbb
testb
enter
adc
das
sbb
mov
mov
cmp
cmp
je
cmc
cmp
jg
dec
mov
mov
hlt
stc
lahf
push
pop
out
ds
cmp
lahf
xchg
stos
cwtl
test
mov
jb
aam
push
push
stc
dec
rcrb
outsl
mov
setns
xchg
inc
sarl
call
loopne
std
stos
imul
jecxz
sub
fwait
cmpsl
jge
xor
pop
and
or
add
and
pop
adc
jo
fmull
xlat
in
shlb
jge
sbb
push
cmp
or
mov
jg
sbb
mov
fldenv
leave
clc
fstpt
jl
ficomps
inc
scas
adcb
es
sub
enter
and
jne
pusha
mov
aas
sub
rol
testl
jae
jns
andb
jbe
add
jg
add
out
testb
pop
push
sbbl
fistpll
test
or
std
mov
adc
and
stos
sbb
into
aad
in
sbb
or
pop
lds
shlb
in
imul
push
pop
dec
jge
das
nop
lods
jl
gs
dec
xchg
imul
mov
and
rclb
mov
mov
cmc
lods
lret
bound
dec
mov
stos
push
push
xchg
or
negb
dec
aam
loop
scas
in
dec
popf
std
mov
xchg
fxtract
sahf
jmp
ss
dec
or
mov
fldcw
dec
and
mov
data16
dec
scas
rorb
andb
xorl
mov
mov
mov
jp
jns
repz
jge
sbb
jl
mov
mov
sbb
jmp
dec
ljmp
sub
rcrb
xlat
jg
add
pop
pop
test
es
out
inc
mov
push
jmp
lret
xor
mov
dec
jae
push
test
push
clc
getsec
fmull
jecxz
pop
add
xchg
xchg
out
push
push
xchg
mov
xor
fs
mov
pop
sub
sbb
and
scas
pop
cwtl
cmpsb
jmp
shll
mov
pop
dec
xor
rclb
cmp
movsb
xchg
push
push
xor
xchg
loop
mov
mov
in
scas
pop
pop
jbe
add
mov
out
mov
in
repz
push
dec
xchg
xor
fstpt
inc
pop
adcb
out
push
and
jnp
xchg
dec
lcall
enter
jmp
aam
inc
dec
bound
pop
or
add
pusha
inc
mov
cld
idiv
in
shll
fcoms
mov
aam
dec
fwait
daa
popf
call
bound
dec
enter
std
or
in
push
dec
and
push
js
or
rclb
lret
fisubrs
iret
shlb
repnz
std
addb
iret
aas
ljmp
out
insb
mov
and
and
adc
sub
cmp
adc
pop
push
xor
data16
xor
sahf
xchg
cld
mov
pop
scas
mov
dec
fmuls
stc
outsl
shll
jbe
xchg
xor
and
inc
and
dec
cmc
call
xchg
stc
sbb
imul
adc
mov
mov
xor
jle
lret
out
sub
sub
repnz
imul
or
call
add
sub
repnz
push
sub
push
rep
cmp
adc
jp
mov
daa
js
repnz
js
xor
out
or
out
in
xchg
push
xor
in
cmpsb
adc
sub
std
adc
inc
mov
mov
je
es
inc
inc
jge
jbe,pt
fidivrs
jle
mov
pop
add
rcrl
and
xlat
jae
push
insb
or
adc
or
out
push
cmp
add
int3
notl
mov
inc
and
cli
jp
push
leave
sahf
andb
lret
inc
pop
sti
or
mov
dec
pop
jmp
adc
jno
andl
int3
add
push
add
stos
dec
sti
aaa
fdiv
dec
push
add
mov
test
pop
push
push
loopne
cmpsl
jno
in
out
ret
sbb
jb
into
mov
mov
test
jp
mov
cs
mov
xchg
mov
dec
sti
sub
xor
pop
dec
add
int
movsl
xchg
mov
mov
add
not
cmpsb
inc
dec
mov
icebp
fcomps
es
sub
es
jecxz
xor
mov
fs
fsubr
daa
jl
dec
sub
insl
loopne
pop
sub
dec
push
xor
aas
arpl
xor
movsl
fistpll
bound
and
mov
adc
mov
xchg
les
and
sub
incl
dec
lds
adc
sub
dec
pop
call
jno
cmp
repz
lods
pushf
push
dec
xor
mov
xchg
dec
adc
lahf
sub
mov
leave
xor
mov
inc
imul
flds
pop
and
cli
mov
test
or
sbb
std
test
add
inc
imull
fstpl
test
lahf
jnp
xor
mov
loop
sub
sbb
adc
jnp
repz
sub
pop
testb
add
inc
arpl
negb
mov
popfw
outsl
stos
jo
push
cs
xor
xor
insl
out
adcb
and
or
inc
es
or
fidivrl
mov
sub
movsb
cmpsl
cld
shlb
test
add
call
ds
dec
and
mov
xchg
enter
in
push
xor
mov
test
outsb
pop
les
sub
mov
jp
pop
push
push
mov
push
je
mov
in
mov
mov
adc
dec
sbb
dec
mov
sub
push
out
stc
inc
out
out
dec
pop
or
sbb
cli
fdivrl
cmp
aaa
cwtl
add
xchg
stos
add
outsb
pop
lret
xchg
xor
xchg
add
cmpl
push
out
and
imul
push
pop
jl
sbb
dec
mov
cld
pushf
push
fidivrl
jo
std
lods
pop
sbb
popa
mov
push
in
mov
std
lret
pop
sub
insl
mov
lret
cmp
add
xchg
int
out
mov
movsb
sub
call
pop
or
sub
mov
into
arpl
aas
and
adc
or
hlt
fnstsw
cmp
add
jp
movsl
sub
stos
stos
push
mov
inc
sub
jnp
arpl
fsubs
ljmp
test
mov
es
orb
nop
jg
sti
out
movsl
adc
jns
push
outsl
lods
cs
mov
xor
pop
jbe
fdivrl
leave
inc
mov
sbb
int
ficomps
jecxz
ficoms
aam
jns
sbb
pop
arpl
adc
mov
outsb
inc
push
jbe
cmpsl
or
sti
inc
lcall
xorb
mov
push
mov
rolb
xchg
rclb
jnp
inc
push
sbb
daa
das
dec
sbb
fsubl
inc
daa
lds
inc
das
pop
into
sti
hlt
mov
push
ja
ret
jg
xor
push
scas
cmc
insl
fwait
pop
cmp
out
add
lds
std
xchg
jae
xor
aad
je
mov
testl
xchg
pop
out
insb
dec
jp
sti
insb
and
lea
roll
loope
nop
rcll
rorl
push
fidivrs
mov
push
pop
sbb
addb
jmp
jb
test
sahf
shlb
push
sbb
in
or
pop
subb
mov
add
call
mov
fwait
jo
lcall
mov
cmc
dec
punpcklbw
dec
adc
and
stos
adc
movsb
ret
adc
popa
xlat
lret
loopne
mov
roll
stc
xor
pop
movsl
loopne
movl
mov
jmp
fs
push
aam
pop
adc
movsb
data16
jne
js
jge
mov
popf
adc
ljmp
xor
std
shl
idivl
adc
std
add
testl
repnz
mov
gs
push
arpl
loop
sub
dec
int
or
pushf
fs
insb
push
sbb
sub
and
rorb
lods
cmp
push
lds
push
aas
push
out
stos
loop
es
addb
arpl
ret
test
repnz
sbb
cmp
jne
xchg
adc
sar
mov
cmpsb
insl
loope
je
jl
int
push
and
mov
sbb
ret
push
fs
xchg
xor
sbb
inc
inc
cmp
xchg
add
sub
shl
pop
call
cmp
lcall
xlat
pop
inc
mov
nop
lcall
jns
pop
test
mov
pop
cmp
outsl
test
xor
mov
jge
lahf
daa
cltd
nop
push
inc
push
int3
out
lahf
fwait
enter
lcall
xlat
pop
ret
add
mov
mov
mov
push
fucomi
outsb
inc
sti
cmpsl
mov
nop
lock
pushf
push
sub
in
jno
mov
imul
mov
sbb
push
add
mov
xchg
lods
mov
rorb
add
xor
outsl
mov
rclb
dec
xor
mov
shr
pop
push
dec
lods
cmp
test
shl
pop
ljmp
dec
repnz
adc
aad
cmp
mov
xchg
xor
mov
and
pusha
nop
jmp
xchg
sbb
stc
ss
adc
mov
js
push
ret
in
mov
loopne
addb
les
fadds
leave
sbb
xlat
pop
loopne
out
outsl
or
xchg
jno
movsl
jb
hlt
mov
cmp
cmp
shlb
mov
inc
add
jmp
clc
pop
jle
lret
add
into
jmp
xchg
in
ficompl
rorl
or
push
xchg
push
lret
in
sub
add
mov
xor
add
mov
cmp
add
adc
call
sti
fcoms
in
jge
jmp
xchg
sub
repnz
cmp
nop
bnd
xchg
insl
mov
loop
test
jbe
lcall
dec
pop
lret
cld
xchg
dec
loopne
jns
test
mov
push
cmc
jmp
lcall
cld
inc
sub
xchg
xchg
bound
dec
aad
and
jmp
jae
js
fisubrl
push
inc
jbe
sbb
mov
xchg
pusha
scas
mov
mov
sbb
jg
test
inc
mov
inc
mov
filds
ds
sub
rclb
mov
addr16
mov
lea
fnstcw
movsb
mov
fwait
push
or
cmpsl
lods
jnp
adc
or
mov
sub
rorb
mov
insb
lods
mov
stc
sub
rclb
nop
ds
cmp
inc
scas
daa
sub
mov
mov
hlt
hlt
movl
movsb
out
mov
push
xor
xchg
pop
dec
xor
add
mov
xlat
scas
adc
push
outsb
push
test
ds
push
fldl
push
movsl
push
movsb
cmpsl
out
aas
or
scas
xchg
cmp
call
push
fs
mov
push
mov
outsl
xchg
inc
xchg
clc
out
push
ds
getsec
pop
jae
imul
inc
xchg
std
int3
es
cmpsb
out
adc
fisttpll
les
push
addr16
inc
cli
cmp
mov
bound
das
mov
or
mov
push
sub
loope
loope
rcl
je
sub
pop
int
lret
mov
xchg
lret
adcl
sub
cmp
xor
jge
inc
vmovss
sbb
jo
pop
mov
add
sbb
rcrb
mov
add
mov
sub
cmpsl
xor
and
xor
jge
iret
xchg
mov
leave
adc
cmc
cmpb
and
sahf
adc
cmp
ja
leave
pop
add
orl
stc
fidivs
test
sbb
test
jne
aam
repz
cmp
popa
sub
dec
jae
out
lock
repz
or
fldlg2
pop
repz
mov
push
imul
xchg
cmp
pop
push
gs
daa
insl
push
ljmp
sbb
inc
mov
call
in
sarl
or
repz
inc
pop
or
xor
cltd
xchg
ja
or
stos
cli
js
push
sub
popa
mov
ss
mov
adc
imul
fidivs
insb
xchg
add
stos
aad
sbb
dec
push
rorl
dec
inc
loopne
cmp
sub
dec
mov
xor
xchg
push
dec
std
mov
test
repz
push
mov
mov
jp
gs
hlt
or
mov
cld
or
mov
pop
test
or
or
xchg
insb
stc
movsl
vroundsd
icebp
sub
xor
mov
sbb
iret
or
sub
inc
jecxz
pop
xlat
push
cwtl
bnd
pop
ret
popf
cmp
mov
in
sub
ret
push
add
movsb
xchg
jl
ja
cmpsl
cmp
cltd
rol
sahf
repz
sti
fstpt
mulb
add
mov
mov
push
add
mov
inc
jo
movsl
out
in
test
lret
or
xchg
push
sub
push
in
je
adc
cs
mov
pop
das
sbb
push
jne
mov
sub
pop
ja
ss
cltd
pop
and
push
push
leave
stc
outsl
scas
push
adc
mov
clc
pop
jo
push
mov
ljmp
test
mov
lods
in
bnd
out
arpl
mov
es
lret
pushl
in
lret
lods
mov
jne
mov
add
sub
jl
xchg
push
cltd
add
or
dec
xchg
inc
imul
pop
fwait
sbb
sbb
jmp
jbe,pt
xchg
cmp
push
jge
in
scas
lock
popa
lods
pop
push
cwtl
add
pop
cmpsb
mov
subb
rorl
lock
clc
xor
dec
dec
sti
cmp
jno
repz
jns
int
inc
adc
scas
inc
imul
xchg
icebp
adc
fs
dec
mov
cwtl
and
in
xchg
es
imul
adc
mov
add
add
mov
testl
cmpsl
leave
mov
jbe
jg
push
das
mov
lea
mov
mov
out
dec
push
xchg
cmp
rolb
data16
add
push
push
add
es
hlt
xor
mov
and
inc
xchg
xor
dec
lds
in
xlat
cmp
lods
data16
rol
icebp
pop
cmpsb
mov
int
inc
jle
fisubl
pop
mov
hlt
push
mov
jne
jle
ds
mov
pop
movsl
xlat
ja
xor
pop
push
and
ljmp
jae
insb
data16
sbb
test
jecxz
xor
inc
in
mov
icebp
or
arpl
or
and
jp
inc
dec
cmp
xor
xchg
mov
shll
cmp
xchg
adc
test
mov
das
cmp
out
xchg
cli
mov
add
pop
call
and
data16
nop
push
mov
cltd
in
es
xchg
sub
ret
cmp
cmp
mov
sub
movsl
xor
es
jbe
testl
mov
sub
jne
inc
fcmovne
fistps
cmp
sahf
and
jo
xor
and
push
dec
aaa
mov
lcall
jg
fidivrs
xlat
pop
inc
dec
das
out
xor
nop
mov
jb
fnstcw
leave
adc
add
adc
push
xchg
jmp
ret
dec
xchg
mov
pop
mov
push
pusha
or
jle
test
notl
les
dec
inc
lea
mov
pop
cmp
test
loopne
xor
push
adc
cmp
ret
clc
scas
je
decb
mov
call
dec
adc
jg
outsb
lock
sbb
xchg
cmp
add
push
dec
out
hlt
push
movsb
adc
ljmp
insb
out
sub
inc
push
and
pop
jl
ret
mov
sbb
cld
mov
sub
mov
jns
sbb
fists
pop
jle
pop
mov
test
lds
mov
adc
sbb
xchg
jg
lahf
test
sahf
es
fldcw
or
outsb
mov
jb
pop
mov
scas
sahf
and
cmp
adc
xor
insl
ljmp
loope
push
jb
leave
mov
cld
sbb
pop
dec
or
inc
scas
sub
mov
xchg
enter
and
sbb
sub
dec
clc
ficompl
pop
mov
jns
push
or
icebp
sub
push
pop
int
sbb
and
aaa
mov
out
sub
das
adc
clc
add
jmp
mov
addr16
inc
pop
sub
outsl
repz
cmpsb
mov
into
jbe
xchg
inc
or
into
push
inc
dec
push
das
scas
or
scas
insl
int3
fdivrp
or
push
cmpsl
adc
push
dec
push
movsb
pop
jg
das
push
pop
lret
aas
enter
je
inc
cmpsl
and
adc
cmpsb
pop
in
ficomps
xor
xchg
dec
test
mov
mov
shlb
mov
out
aad
popf
lea
pop
xchg
push
fwait
cmc
daa
popf
inc
add
out
lcall
xorb
hlt
jle
jne
stos
sbb
hlt
jle
dec
push
mov
iret
fdivs
fldcw
mov
xchg
adc
aaa
loop
lahf
or
sub
aam
call
xchg
or
rorl
push
popa
lret
popf
leave
cli
sbb
cs
add
jae
movsb
mov
add
xorl
push
das
loopne
movsl
mov
add
lcall
insl
fdivl
into
pop
push
jbe
imul
lock
lds
xchg
xlat
inc
imul
cmp
lret
xor
jo
aaa
mov
inc
fistpll
xor
adc
and
mov
push
lods
push
push
mov
mov
or
xor
test
int
nop
mov
mov
into
add
sub
aas
cmpsb
lcall
xchg
adc
cli
out
jg
outsb
push
outsl
insl
shrl
pop
dec
lds
lret
push
ljmp
and
jns
stc
mov
mov
cmp
jae
mov
int3
jmp
fnstenv
mov
test
mov
loop
pop
call
stc
dec
xlat
fadds
bnd
add
add
inc
mov
stc
mov
mov
jae
or
cltd
sub
jne
mov
das
shrb
cld
ficoms
int3
les
mov
add
pop
mov
test
divl
jl
cs
inc
addr16
xor
test
dec
mov
leave
in
cmpsl
adc
adc
mov
movsl
add
lock
or
mov
sub
lods
jb
mov
xlat
xlat
inc
dec
ds
push
mov
imull
sub
push
sub
rcrl
fildl
out
push
mov
xor
sbb
inc
scas
cmp
cltd
arpl
test
push
outsb
pop
jne
inc
ds
sti
outsl
xchg
rcrb
mov
out
mov
lcall
ds
out
pushf
push
xchg
mov
dec
mov
cltd
test
cmp
fwait
xchg
sub
push
jmp
jg
xchg
xchg
inc
cmp
cmp
lret
pop
icebp
jbe
inc
inc
lret
sarb
add
cmp
subl
es
repnz
ret
mov
sbbb
jmp
inc
ja
sub
stc
ljmp
add
loop
mov
fstl
xor
fiaddl
orb
adc
ficomps
cwtl
mov
lock
cmpsl
dec
push
pop
push
sub
inc
test
or
jb
enter
xchg
ljmp
nop
adc
nop
inc
sub
add
xchg
les
cltd
jno
xor
lret
jmp
jne
push
testb
leave
add
cld
jnp
mov
xchg
pop
or
lea
ljmp
jmp
xor
inc
mov
and
scas
pusha
fidivl
inc
ret
jecxz
adc
cmp
and
xchg
xchg
jne
aas
cwtl
cli
sub
mov
shll
cmp
xchg
das
cmp
jo
xor
div
repnz
jge
xor
sbb
inc
and
lds
lret
sbb
movsb
test
xor
jg
mov
mov
sti
insl
add
cmp
dec
imul
cmpsb
inc
add
sub
out
jmp
add
and
iret
xor
loop
int
jne
xor
cmove
sahf
repnz
iret
jmp
push
arpl
cs
push
push
sti
fisttpl
fisubrl
call
adc
inc
cmpsb
fldt
cmpsb
ror
mov
iret
mov
pop
jae
subl
inc
mov
addl
push
sub
fldt
lock
imul
stc
mov
sbb
push
ret
xor
cld
loop
cmp
repnz
dec
call
sub
push
or
mov
and
rorl
cs
or
mov
xchg
orl
push
imul
push
nop
mov
decl
mov
xor
xchg
das
jnp
iret
push
mov
psubusw
je
mov
push
xchg
xchg
std
or
popf
or
and
int3
inc
je
fnstcw
push
inc
test
pop
lret
xchg
fnstcw
cwtl
lret
cmp
shlb
jg
adc
lds
pop
cmp
push
push
jo
lret
cwtl
or
adc
push
mov
imul
jmp
xor
cmp
xor
test
add
ret
fiaddl
rorl
lret
out
push
jmp
push
xchg
adcl
jb
inc
jp
adc
movsl
adc
cmpsl
stos
xor
sbb
and
nop
push
adc
push
loopne
outsl
stc
push
inc
mov
rcr
xchg
sub
xor
dec
push
xchg
mov
test
leave
dec
push
leave
push
cld
mov
loopne
adc
push
fists
mov
cmp
movsl
rclb
xchg
xchg
add
pop
repz
jns
enter
hlt
cmpsb
inc
fcomp
cli
data16
jo
rcrb
int
lret
ficomps
imul
add
imul
popa
outsl
les
popa
push
push
cwtl
es
jbe
inc
test
shlb
mov
outsl
pushf
mov
xor
add
dec
mov
sbb
aas
jae
test
into
xchg
pop
aas
in
xor
sbb
in
mov
jno
shrl
cmp
movsb
xlat
sbb
cltd
xor
sbb
nop
mov
mov
test
pop
dec
test
pop
lret
lods
mov
clc
arpl
fistpl
sbb
add
pop
push
and
or
clc
inc
xchg
in
popa
addl
mov
jecxz
ss
lods
gs
jl
fcompl
dec
fnstcw
dec
stos
jmp
js
das
imul
adc
jge
fstps
hlt
scas
push
cmp
sub
mov
dec
mov
push
add
lahf
ret
sbb
fimull
pop
or
in
test
add
fsubl
addr16
pop
aaa
dec
or
fsub
mov
xchg
jmp
dec
jl
dec
push
aaa
cwtl
mov
jae
xlat
les
movsl
inc
ret
pusha
or
sub
incb
lret
sbb
or
fwait
jge
outsb
loopew
mov
adc
js
ss
mov
xchg
fistpl
dec
jbe
or
mov
mov
sar
stc
iret
fcmovb
mov
dec
subb
ret
repz
inc
mov
test
js
nop
out
iret
dec
push
dec
push
xchg
mov
or
rorb
clc
insb
inc
pop
js
xchg
cmp
fs
movsl
jg
xor
mov
fs
cs
lret
cmp
xchg
jb
cmp
add
xchg
imul
aad
aaa
dec
pop
lock
ja
adc
jne
mov
cmp
pop
frstor
and
nop
dec
popa
mov
std
repnz
push
data16
test
out
or
pop
jmp
bound
inc
adc
add
out
ss
push
stos
into
sub
cltd
sub
mov
aaa
and
dec
push
push
jg
and
jecxz
insl
loop
xor
cmp
in
jmp
push
movsl
pop
push
movsb
nop
xchg
ja
sarl
push
sahf
mov
stc
or
lret
loope
fmul
pop
mulb
jecxz
insb
sbb
mov
add
push
clc
sub
mov
iret
mov
and
loope
repz
mov
inc
adc
pushf
xor
add
jecxz
jns
jbe
insb
pop
mov
mov
sub
fistpl
clc
mov
fsubs
movsl
lods
add
repz
pop
outsb
adc
cmpsl
test
dec
popf
mov
sub
mov
out
shll
ljmp
sub
sbb
es
lcall
jne
jno
pop
adc
add
mov
addr16
sbb
nop
imul
mov
sbb
mov
jl
cmpsl
cmp
lfs
test
pop
cwtl
scas
pop
cmpsb
cs
insb
sbb
mov
inc
mov
pushf
fld
jl
test
lods
leave
jg
loope
adc
pop
int3
sahf
das
push
xchg
xchg
xor
out
jl
jb
movsb
push
enter
sub
pop
dec
insb
shlb
cmpsb
int3
fistpl
sahf
mov
dec
fs
mov
fnsave
jg
push
cs
mov
roll
xchg
sub
sub
aaa
mov
decb
pusha
xchg
clc
jne
outsb
push
push
mov
popa
cmc
dec
jp
es
arpl
jg
push
mov
lret
or
lea
pop
push
les
jne
imul
int3
lods
xchg
je
mov
fdivrs
sub
or
sbb
mov
add
pop
dec
dec
arpl
xchg
mov
in
or
clc
js
pop
pop
sub
jmp
cmp
push
push
dec
shrb
cld
dec
test
xchg
icebp
mov
inc
add
arpl
popa
sbbb
fidivs
inc
mov
bound
mov
sahf
aaa
jo
and
inc
jl
ret
adc
faddl
pop
sub
cli
imul
add
dec
and
popf
loopne
aas
leave
stc
jg
fisubs
xchg
shlb
xor
or
fadds
push
mov
scas
mov
cmc
sahf
loope
or
cli
ss
lret
fwait
sub
xor
jp
leave
dec
cld
cmp
mov
sti
pushf
inc
lods
shll
mov
mov
adc
or
imul
push
mov
cmp
ret
stc
lock
xchg
cmpsb
mov
iret
xor
adc
fildll
cmp
mov
xor
jmp
jb
sub
out
xor
nop
je
insb
sarl
xchg
dec
mov
pop
shll
push
sbb
jns
mov
mov
sbb
insb
mov
adcl
xchg
lods
and
push
mov
shll
hlt
dec
cltd
push
inc
adc
mov
pop
iret
cmp
xchg
sbb
sbb
mov
out
mov
mov
sub
gs
sub
xor
jg
or
test
int3
mov
adc
pop
mov
jmp
out
mov
xchg
pop
popa
cmp
dec
xor
cld
pop
lret
pop
jne
adc
dec
pop
xchg
push
pop
loope
cld
jae
arpl
iret
xchg
in
lcall
dec
push
xor
movsl
ret
add
push
lcall
fdivs
jnp
cwtl
push
pop
xor
out
ret
orb
jmp
jecxz
shll
mov
fmuls
inc
mov
fsub
pop
out
nop
insl
mov
stos
call
cwtl
les
inc
fdivl
xor
add
xchg
pop
cmc
mov
mov
adc
sub
ds
mov
les
popf
xor
jo
js
sbb
rcll
shll
faddl
push
in
sub
push
xchg
out
loopne
cmpsl
lahf
and
xorl
or
idivb
cmc
icebp
out
mov
rclb
mov
mov
mov
cmpsl
or
cmp
loopne
jo
cmp
scas
in
mov
pushf
inc
iret
jns,pn
push
sub
repnz
sbb
loop
scas
ret
adc
fcompl
push
stos
jbe
inc
pop
cs
adc
lock
jmp
fdivs
or
ret
in
repnz
xchg
xchg
jle
add
and
mov
das
inc
addr16
fwait
or
push
test
add
aaa
cmp
stc
mov
cld
jnp
iret
adc
int
xlat
adc
jbe
inc
xor
xor
je
mov
ja
or
neg
lcall
mov
imul
xchg
pop
mov
pop
mov
cmp
lds
mov
and
stos
cmp
test
outsl
movsl
fwait
jge
pusha
es
pop
lahf
mov
and
lcall
push
insw
cmp
fmuls
fidivrs
cmp
mov
add
sbb
or
pop
jno
add
and
add
mov
insb
add
xchg
loopne
test
xchg
cmpsl
cld
sahf
test
and
ds
movsb
or
jb
scas
pop
adc
nop
lcall
mov
rcrl
dec
addl
add
push
mul
xlat
pop
xor
and
jne
sbb
pop
call
loop
add
repnz
shlb
pcmpgtd
xor
adc
xchg
aaa
mov
sbb
xor
ds
push
or
lcall
inc
inc
je
mov
fistpl
lock
out
clts
or
mov
cmc
push
jno
jbe
xor
mov
mov
into
lcall
mov
dec
gs
add
popa
fdivrs
std
mov
push
sub
push
fidivrl
inc
push
or
dec
mov
mov
push
aad
xchg
or
mov
xchg
pop
adc
iret
or
sbb
mov
jo
ret
sbb
jl
and
push
mov
mov
pusha
pushf
cmpsb
inc
icebp
fnsave
push
int3
movsb
test
lods
mov
jns
les
fcmovne
movsb
repnz
in
js
jnp
xchg
cmpsb
nop
push
xlat
loopne
mov
lea
lods
or
and
xchg
movsbl
lock
loopne
and
sub
xor
fcmovbe
cld
xchg
or
adc
jmp
mov
dec
and
or
cmpsl
in
repnz
adc
pop
shll
jo
sbbl
out
mov
fdivrl
aam
mov
leave
out
enter
test
xchg
ja
push
ficoms
pop
pusha
ret
sbb
dec
fs
sub
shl
ret
sub
hlt
add
fisubrs
lahf
lods
mov
movsb
adc
push
dec
mov
mov
fs
adc
es
fcompl
jns
out
je
and
adc
pop
daa
in
or
sub
xchg
push
dec
test
ds
jge
sub
test
shrb
pop
inc
imul
mov
lret
push
mov
addr16
push
and
frstor
loop
push
xchg
sar
xor
dec
in
test
jle
mov
jg
push
es
scas
adc
insb
or
stos
dec
lods
jbe
push
ds
inc
sarb
movsl
into
cmpsb
cmp
leave
popf
sub
out
movsb
pop
mov
push
lods
roll
xchg
cmp
mov
addr16
mov
enter
push
push
shll
shrb
jne
fdivrl
inc
pop
mov
fcmovbe
stos
xor
mov
js
pop
imul
lcall
cmp
rcrb
mov
jno
dec
mov
mov
push
lods
sbb
mov
dec
fcmovnu
cld
and
pop
hlt
mov
call
pop
jns
xorb
out
xchg
push
dec
xchg
cmc
pop
movsb
push
loope
add
or
push
adc
or
rcr
push
daa
out
xorb
pop
add
pop
test
and
je
xor
push
xor
movsb
inc
int
stc
sub
cmpsb
mov
xchg
pop
ja
js
nop
xor
in
xchg
mov
outsb
or
sbb
or
and
sti
in
loop
dec
or
nop
cmp
mov
std
sub
aas
mov
or
mov
cli
mov
repz
push
cmpw
cmp
xchg
sbb
pop
nop
lock
inc
lahf
and
sbb
push
inc
loopne
cmp
hlt
sahf
sub
icebp
cmp
aam
sbb
cmp
stos
push
mov
sbb
gs
xor
cmp
in
shl
dec
pop
xlat
nop
fsts
mov
and
inc
mov
nop
ds
mov
int
rolb
test
cli
cltd
xchg
es
pop
jae
repnz
cmp
aaa
push
inc
xor
xor
clc
test
ficomps
mov
mov
adc
or
mov
lret
or
or
cli
xchg
sub
sub
mov
shll
out
jo
sub
mov
mov
or
mov
dec
repnz
add
add
mov
pop
xchg
or
xchg
adc
ss
test
leave
or
lock
xchg
mov
mov
cmp
add
addl
xorb
add
ljmp
add
in
inc
jb
xor
hlt
push
sbb
mov
nop
mov
dec
stc
idivb
mov
pslld
jecxz
inc
stos
arpl
shll
insl
call
iret
jnp
xchg
xor
mov
notb
or
jno
and
out
cmp
and
aaa
shrb
ror
sub
add
push
pop
jp
inc
sub
or
fstps
pusha
dec
fmull
in
int
pop
lea
sahf
dec
sub
sbb
inc
popa
lock
mov
sub
push
mov
lahf
cltd
cmpsb
imul
mov
insl
movsl
std
push
jne
mov
xchg
aaa
mov
insb
test
xchg
imul
mov
push
pop
mov
mov
inc
in
lcall
out
pop
mov
in
mov
lret
xlat
cmp
mov
popa
dec
and
int
sbb
or
or
daa
dec
stc
adc
or
cltd
je
gs
pop
loop
inc
aam
lock
adc
dec
fdiv
lods
test
movsb
inc
jno
rclb
mov
fsubrs
cltd
lea
imul
dec
outsb
stos
adcb
lret
and
xchg
lea
jo
sub
fstl
adc
mov
mov
pop
hlt
fwait
out
xor
push
movsb
imul
add
dec
dec
js
cmpsb
daa
sahf
mov
cmpsl
fs
mov
lods
xor
add
sbb
pushf
xchg
cltd
and
xchg
rorb
mov
pop
loope
or
dec
add
aaa
ljmp
fistpl
push
jmp
shll
inc
ret
mov
andl
jl
push
mov
or
pop
inc
frndint
add
icebp
pop
push
movsb
iret
test
int3
inc
jp
std
mov
dec
lods
cld
cltd
push
lcall
fisttpl
mov
popa
js
call
cli
fcoml
loopne
sub
insl
sbb
fimuls
out
pop
fst
mov
insl
mov
adc
int
repnz
repz
out
lods
int
jl
in
lods
sbb
enter
adc
lret
out
ret
sbb
cld
ljmp
lea
mov
add
or
stc
mov
mov
add
arpl
pop
scas
iret
jae
xor
push
mov
cmpsl
ss
jae
add
je
div
cwtl
pop
std
xor
fnsave
rcll
fists
and
daa
and
add
into
pop
jno
lahf
cmp
dec
fldenv
pop
or
imul
iret
inc
sbb
orl
fs
mov
in
stc
jp
xchg
pop
icebp
cmpsl
jbe
sub
orb
mov
xor
pop
jecxz
mov
sub
test
iret
sar
mov
cmp
dec
cmpsl
jecxz
add
cmpl
jno
movsl
lret
or
xor
or
push
mov
xchg
jno
pop
cwtl
lock
decb
enter
jae
cwtl
adc
loope
inc
cmc
mov
mov
cmpsl
jmp
gs
jle
jl
cmp
mov
xor
lods
jno
mov
cmc
insb
lahf
shll
ss
hlt
and
push
test
jae
in
sub
pmuludq
and
lret
adc
jno
jle
push
push
clc
bound
fcompl
xchg
xchg
inc
sub
push
rorb
dec
inc
dec
hlt
cmp
xchg
mov
mov
and
lods
push
int
inc
imul
pop
mov
sub
mov
pop
sbb
sbb
fs
pop
std
popf
addr16
xor
mov
mov
ljmp
push
push
ss
sbb
push
shrl
call
pop
ljmp
xchg
insl
test
arpl
hlt
add
aaa
test
or
push
pop
sub
xor
ss
ret
push
lea
pop
sbbl
inc
add
cmp
and
mov
addb
das
jb
dec
jbe
mov
adc
insb
aam
adc
mov
xlat
lret
sub
or
jb
pop
sarl
enter
insb
js
cmpsb
push
sti
mov
mov
mov
mov
lret
dec
sti
rcl
sti
fidivl
insb
sbb
jns
adc
shlb
adc
xchg
xor
cmp
in
jbe
into
add
lahf
and
xor
sbb
xchg
xorl
out
push
lods
dec
cltd
and
sub
outsl
lret
popa
dec
xor
push
leave
mov
in
cmp
push
inc
dec
sbb
push
aaa
or
sbb
orl
xor
scas
fimuls
lock
ds
hlt
subl
out
outsl
xchg
cmp
rolb
fisttpll
sbb
dec
int
dec
and
push
aad
sub
xlat
and
in
cmp
jb
test
fnstenv
into
addr16
cmp
jmp
lods
pop
in
ja
rcrl
dec
fwait
xchg
scas
sub
xor
rorl
dec
scas
inc
ds
fwait
inc
xchg
sub
lods
xchg
mov
ret
inc
loopne
aam
pop
test
push
scas
roll
cmp
or
sbb
mov
add
xchg
mov
popf
or
push
sub
push
out
sbb
sub
dec
lret
jb
gs
mov
movsb
loop
sbb
xchg
push
mov
aam
inc
cwtl
insb
shll
xchg
ljmp
sub
jp
cmp
fwait
mov
lahf
push
and
pop
pop
push
loop
adc
or
push
mov
jne
mov
std
cmp
data16
cmpsl
data16
cli
ljmp
das
push
and
dec
cli
sub
pop
fstps
adc
xor
adcb
dec
mov
fildl
js
sti
dec
push
loope
jb
lgs
inc
in
or
out
xchg
mov
addr16
push
popf
pop
movsb
fsubrs
movsb
imul
pushf
stc
rorb
push
ds
imul
enter
int3
mov
xorb
fldcw
and
or
clc
sbb
scas
out
ljmp
fistps
outsb
mov
into
mov
out
dec
dec
cli
mov
and
lret
add
adc
inc
add
pop
inc
jb
mov
imul
movsb
jne
mul
negb
cs
add
and
sub
stc
faddp
and
cmp
mov
pusha
xchg
push
in
pop
rep
shrl
cmp
jb
push
and
std
sub
andb
js
pop
adc
decb
lock
shufps
inc
jo
xchg
ljmp
cltd
repz
mov
lahf
int
mov
ret
jo
stos
xor
popa
cs
cmp
mov
push
fsubl
jp
cmp
dec
fdiv
pop
mov
test
fimull
inc
push
aaa
packsswb
mov
popa
cli
or
in
aam
rcrb
loop
insl
mov
dec
dec
pop
xor
add
mov
notb
dec
rol
inc
pusha
jecxz
or
lret
sub
pusha
call
push
ja
xorb
mov
rcl
dec
aas
outsb
repz
inc
adc
popf
dec
and
mov
xchg
mov
push
or
fnstenv
enter
mov
test
push
and
mov
rorb
aam
lock
inc
inc
sub
fsubp
and
scas
rcrb
or
push
and
pop
sbb
mov
inc
pop
test
xchg
imul
xchg
mov
aad
data16
mov
push
jbe
repnz
mov
and
dec
xchg
jb
jp
and
inc
cmpsb
jg
ss
xor
mov
mov
aas
pushf
pop
rcl
mov
mov
test
mov
fstps
or
mov
and
fidivl
adc
int
std
sahf
dec
xchg
sub
dec
mov
ret
pop
cmp
sub
in
out
mov
sbb
mov
jne
jg
mov
inc
lea
movaps
bound
cmp
aas
mov
scas
and
ss
sbb
push
xor
out
rclb
or
mov
ret
mov
mov
cmpsl
mov
xor
into
sbb
lret
inc
lock
loop
lret
sub
add
cmp
and
sbb
je
jnp
mov
leave
add
or
cmp
xchg
dec
fimuls
lret
pop
stos
add
cmp
cld
xchg
shlb
sbb
test
inc
sub
pop
jo
les
add
and
jmp
jbe
aam
aad
sub
popf
adc
stos
pushf
push
pop
mov
mov
aaa
mov
pop
jl
cmp
jge
out
movsl
pop
test
mov
jecxz
mov
fucom
dec
lods
sbb
cmp
stos
xor
call
popa
dec
push
mov
imul
xchg
loop
add
mov
mov
cmp
stos
push
int
scas
ret
mov
jmp
mov
mov
jmp
rorl
lds
ret
arpl
pop
jmp
adc
and
iret
int3
aad
add
imul
aad
pushf
pop
add
jecxz
out
fs
mov
pop
mov
jecxz
out
int
cli
mov
shr
sub
jnp
xor
sbb
aas
outsb
xor
xchg
mov
mov
lahf
inc
shl
out
fdivl
or
scas
out
pusha
lret
gs
lcall
xchg
xchg
es
lock
cmpb
insl
ljmp
mov
cmp
movsb
lods
xchg
out
shl
iret
pop
cwtl
xchg
or
pop
sbb
sub
daa
xchg
lcall
aam
mov
out
sbb
lods
outsb
imul
mov
push
fwait
push
int3
pushf
xor
mov
loop
mov
jae
xor
int3
std
xchg
or
or
inc
jle
add
int3
push
fstpt
xchg
sub
mov
sub
adc
pushf
xchg
pop
dec
repnz
jmp
cmp
push
cmp
xlat
dec
dec
inc
mov
dec
into
jge
ds
xor
add
sbb
faddl
sbb
mov
icebp
pop
cmp
pushf
mov
icebp
lods
push
or
add
xchg
loopne
push
sbb
test
push
push
add
in
xchg
xor
adc
mov
sbb
jnp
sbb
add
pop
shrl
add
fidivrs
leave
int3
insb
jp
lods
inc
inc
icebp
pushf
adcl
int
xchg
lods
hlt
cmp
ja
xor
ret
cmp
js
je
cmpsb
outsl
jl
push
scas
sub
movsl
dec
adc
jbe
push
xor
sbb
xlat
js
fs
or
rorb
rorb
pop
jecxz
iret
rol
jge
flds
lcall
lock
push
out
sbb
adc
xchg
cmp
jecxz
loop
hlt
je
mov
loop
cli
jl
jns
cli
sbb
add
cld
adcb
ret
jae
or
inc
or
or
les
pop
cmpsb
fisttps
scas
xchg
pop
add
aad
and
xor
icebp
xchg
out
loop
or
inc
xchg
sbb
hlt
mov
ljmp
fndisi(8087
cmpsl
fnstenv
sbbl
aad
pop
enter
rcl
push
lahf
outsb
mov
cs
inc
mov
repnz
iret
push
xor
jp
std
sub
push
jge
shll
push
jb
pop
adc
cmp
sbb
in
test
sub
jne
add
xor
sbb
in
inc
divb
push
insb
imul
dec
ja
sub
fstl
loop
lea
push
in
aas
mov
cmpsl
mov
aas
mov
into
dec
xlat
push
mov
idivb
jnp
out
ror
sub
repnz
inc
cmp
xor
mov
decb
pop
and
pop
pop
fdivr
lret
jge
add
mov
stos
in
xor
mov
dec
jl
push
xchg
add
pop
sbbb
aaa
hlt
bound
push
fdiv
sub
pop
in
jbe
das
fsubs
or
dec
mov
pop
stc
aaa
sub
lock
lods
scas
in
push
cmpl
out
mov
xchg
jb
mov
and
out
lret
dec
fcmovbe
dec
pop
xor
adc
add
xchg
push
or
inc
leave
pop
cmpsb
dec
lods
fidivrs
add
push
loop
shll
add
mov
repnz
mov
sub
int
jecxz
stc
das
mov
jns
clc
movsb
ljmp
push
sbb
js
sub
mov
das
sbb
aad
dec
and
mov
xchg
inc
adc
cmp
cmp
pushf
movb
xor
add
pop
leave
dec
divl
das
imull
inc
or
adc
cmp
not
sub
ljmp
and
mov
ret
roll
fwait
dec
movsb
repz
imul
ficoml
outsl
sbb
or
add
lea
data16
jns
add
dec
scas
in
sbb
mov
jl
frstor
fwait
dec
sbb
push
xchg
popf
inc
mov
shrl
adc
loopne
xor
and
add
dec
movsl
std
cmp
jge
or
inc
sbb
mov
mov
in
orl
stc
jmp
loop
push
cmp
ss
mov
loope
push
in
cwtl
lret
xchg
cmc
in
ficompl
jge
mov
icebp
sub
mov
imul
bound
push
scas
cld
dec
sub
add
incl
dec
mov
cld
sahf
inc
or
scas
cmpl
outsb
jl
mov
ret
jmp
inc
add
sbb
xchg
icebp
cmpsb
mov
jb
leave
movl
cmp
mov
push
cmpsl
jl
in
pop
gs
cmp
jbe
add
outsb
pusha
or
mov
out
iret
push
in
sbb
mov
pop
sbb
hlt
aam
es
sbb
jne
scas
es
je
test
fucomp
pop
xor
jne
idivl
jmp
lahf
pop
bound
call
hlt
push
jne
xchg
jbe,pn
sbb
movsb
pop
lea
cmc
fdivl
js
adc
sbb
bound
xlat
mov
add
in
test
in
mov
dec
jbe
loopne
push
loopne
dec
inc
cli
testb
stc
les
mov
add
inc
and
int
inc
adc
outsl
fnstcw
mov
cmpsl
add
aam
in
arpl
iret
lea
mov
cmpsl
ds
and
xchg
ja
or
mov
adc
out
push
cltd
test
std
outsl
and
pop
push
stos
push
push
sub
add
sub
movsb
cmp
sahf
dec
popa
mov
or
cmpl
mov
mov
cmp
push
ret
mov
fldcw
add
pop
cmpl
test
pusha
test
insb
dec
adc
fcomps
leave
fwait
mov
arpl
jge
insl
movsb
in
or
add
jge
roll
xor
imul
mul
inc
jbe
popf
inc
in
frstor
jo
mov
cmp
add
mov
jo
or
mov
pop
fnstcw
xor
sbb
dec
gs
xor
xchg
movntps
out
push
xor
mov
add
or
inc
lds
lods
mov
lahf
cmp
lret
jno
inc
add
fisubrl
jge
sub
inc
push
in
mov
std
sti
and
sub
test
fidivl
dec
fistpl
imul
test
arpl
lods
dec
comiss
cmpb
push
jae
mov
gs
jno
mov
les
xchg
cltd
scas
lods
shlb
jmp
gs
repnz
jno
in
mov
adcb
pop
enter
cmp
xchg
js
mov
adc
out
add
in
mov
cs
rcl
xchg
or
fldl
mov
jbe
ficomps
inc
clc
cmp
jb
pop
popa
int
add
sub
add
je
jno
cmp
icebp
push
inc
and
inc
add
lods
fcoms
mov
test
rclb
lahf
lcall
cmpb
dec
fwait
add
xchg
add
xchg
out
or
addl
adc
jge
and
bound
fnstcw
mov
ud0
pop
mov
sbb
shrb
pop
lods
jmp
jle
ds
mov
cmp
movsb
sub
mov
jl
cmpsl
je
je
xor
ja
aad
cmp
dec
divl
add
xchg
lods
cmp
jne
pushf
xor
cmp
xor
xor
loope
popa
add
in
je,pt
pop
rol
push
and
jg
arpl
and
add
dec
mov
data16
mov
stos
ret
ficoms
push
add
add
push
push
adc
pop
sub
test
test
fwait
gs
sbb
in
jb
jb
pop
jp
fimuls
sub
fistpl
fildl
jb
lcall
test
loop
adcb
pop
in
out
data16
jbe
out
xchg
xor
jne
daa
test
rorl
ret
lock
pop
xlat
aaa
push
fs
xor
push
cltd
leave
pop
enter
cmp
cmp
pop
cwtl
adc
or
mov
fnstenv
sub
push
es
pop
pop
ljmp
lock
insb
mov
lock
cmp
pop
pop
sbb
and
loopne
loopne
sbb
jno
mov
lods
add
add
jmp
stos
jmp
pushf
fsubs
sbb
adc
cmp
push
pushf
xchg
pushf
xchg
scas
popf
jne
imul
es
loop
fwait
or
xchg
lret
cmpsl
int
and
out
fimull
push
cli
push
int3
cli
jbe
mov
addr16
loopne
pop
adc
mov
mov
test
scas
and
push
or
mov
cmpsb
mov
add
cltd
mov
fistl
imul
push
loopne
pop
inc
pop
test
pop
out
lret
es
and
sahf
xor
or
cmp
add
insb
push
fdivr
lods
in
dec
mov
pop
leave
add
sti
pop
jge
mov
inc
add
pushf
loope
aas
clc
add
daa
dec
inc
mov
insl
jge
cmp
and
lret
fisttpl
push
mov
int
and
or
fs
cmp
pop
xor
adcl
xchg
pop
mov
test
cmc
movsb
lret
sahf
lods
movsb
or
push
loope
test
sarb
scas
pop
idivb
jecxz
sbb
pop
daa
loop
mov
mov
ret
popf
lods
sub
mov
xchg
bound
mov
fisubs
mov
test
je
sub
jnp
push
pop
fs
shrl
pop
in
imul
xor
les
mov
mov
sub
push
and
rcrb
push
pushf
push
and
lods
into
dec
adc
push
out
andl
add
adc
sarb
mov
roll
mov
pop
mov
xchg
add
leave
mov
adc
cmpsl
in
push
mov
inc
pop
loop
shrb
add
bound
sbb
enter
cmp
adc
sub
add
out
mov
jge,pt
es
rcll
sub
shlb
pop
incb
xchg
stc
out
dec
fcompl
mov
and
pcmpeqd
sub
aas
push
pop
cltd
sub
pop
mov
xor
push
xor
jae
fcmovnb
out
mov
fmuls
leave
mov
and
arpl
jecxz
lahf
test
mov
lods
sarl
ja
stos
mov
daa
jno
iret
insl
testl
lods
rorb
cmp
ljmp
fsubrs
pop
lcall
jb
cmc
lds
push
and
pop
push
jb
adc
adc
jl
mov
sbb
dec
movsl
push
in
sub
add
push
and
mov
lock
insb
mov
jecxz
movsb
push
jae
mov
data16
sbbb
call
adc
mov
xchg
push
add
shr
sub
cmp
lret
sbb
imul
cmp
fisubrl
cpuid
mov
ljmp
enter
sub
test
cmp
jle
imul
leave
jmp
sbb
jmp
mov
je
shrl
loopne
stos
inc
mov
cwtl
lds
out
cwtl
div
gs
inc
fwait
jo
sbbl
and
sti
and
int3
sub
in
lods
rol
add
push
adc
pop
or
xchg
pusha
pushf
mov
adc
sub
jmp
in
mov
xchg
mov
popa
push
add
add
or
fwait
aad
jmp
in
xlat
mov
mov
fnstcw
add
jno
out
mov
mov
add
addl
rcll
push
xchg
jbe
lret
add
mov
push
or
dec
inc
addr16
or
add
mov
jnp
adc
stos
fcomps
movsb
test
or
xor
insl
push
pop
xchg
test
jnp
test
xchg
jno
mov
push
xchg
aas
adc
test
jo
and
fwait
psrlw
rol
stos
sub
and
adc
mov
pop
sbb
jecxz
out
lds
jnp
lcall
push
xor
mov
push
and
push
idivb
jo
mov
lods
mov
add
mov
shlb
je
imul
inc
dec
inc
xor
xor
in
into
test
cld
ret
daa
enter
cmp
cmp
dec
sbb
lods
sahf
mov
add
lea
jp
int3
cmpsl
rcrl
mov
js
out
mov
insl
push
aas
pop
mov
mov
movsl
rcl
in
loopne
pop
adc
les
mov
push
insb
roll
xchg
xor
pop
cli
and
shrb
fucomp
addr16
adc
mov
xchg
inc
pop
in
xor
add
add
jno
or
orl
fwait
cmp
les
mulb
dec
sub
aaa
aam
call
dec
stos
inc
or
cmp
test
push
cmp
pop
shlb
out
add
rcrb
pusha
repnz
div
mov
pop
ljmp
inc
sub
repz
add
jge
push
xchg
pop
test
mov
scas
je
sahf
mov
int
mov
pop
daa
scas
mov
pop
scas
or
stos
repnz
outsl
fimuls
int
ss
cmp
test
xchg
idiv
mov
fisttpll
xor
enter
pop
sahf
pop
xchg
push
ja
sub
pop
xchg
repnz
out
fdivr
jbe
aam
fisubrl
pop
mov
cmp
push
push
pop
insl
xor
imul
push
fisttpll
add
sahf
out
loopne
or
js
ds
mov
jmp
mov
xlat
jle
cmp
mov
jb
push
and
lods
pop
cmp
dec
mov
jnp
pop
push
daa
ret
xchg
xor
stos
pushf
imul
mov
sub
dec
jg
or
adc
out
xor
aad
inc
inc
and
cmc
mov
push
mov
data16
movsl
clc
add
movsb
sbb
sahf
lret
jae
and
pop
mov
fsubr
add
ja
xor
ret
popaw
cmpsl
ds
adc
aas
jb
pop
jge
stos
addb
fistpll
pop
outsb
das
sarw
cmp
sub
xor
mov
inc
jl
adc
cld
mov
xchg
mov
ja
push
orb
jmp
and
out
and
sahf
jge
inc
pop
push
jge
loopne
and
adc
ret
repz
xor
sub
xchg
fstps
push
adc
jp
les
lcall
scas
arpl
push
lea
shrb
sahf
cmp
aaa
mov
mov
mull
mov
cmp
addr16
aam
aas
call
push
xchg
nop
cmp
ljmp
lcall
or
cmp
adc
dec
stos
push
mov
and
std
or
cmp
ss
sbb
inc
xor
fisttpll
jmp
roll
mov
fistpll
push
and
push
std
cmpsl
jmp
xlat
test
jns
push
dec
cmp
subb
and
rclb
hlt
pop
movsl
hlt
and
pop
sub
in
popf
jmp
sbb
jp
mov
adc
mov
dec
in
inc
in
jecxz
imul
inc
out
movsl
cmpsl
push
xchg
cmp
fldz
adc
cmp
je
jg
fbld
pop
das
or
aas
inc
pop
mov
or
cmp
sub
jb
lret
dec
test
pop
add
mov
fwait
mov
mov
inc
lcall
call
cli
sarl
fldcw
cmp
in
cltd
insb
mov
adc
lea
mov
or
fcmovnb
push
adc
add
xchg
les
lahf
cmpsb
jb
icebp
mov
xor
sbb
jp
xchg
test
push
int
cmpsb
out
push
mov
add
push
sub
mov
inc
mov
and
mov
in
or
fcoms
cmpsb
dec
insl
sbb
mov
clc
out
push
sbb
lods
and
or
inc
xchg
cmp
adc
ss
jno
loopne
or
mov
leave
mov
jge
imul
xchg
les
sbb
push
jae
cmpsb
loope
jns
mov
xor
push
bound
insl
mov
out
enter
out
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
insb
push
add
daa
fldcw
and
dec
scas
mov
jns
push
js
loop
cli
lods
stos
clc
cmp
add
xchg
inc
adcl
dec
fnstenv
outsb
mov
add
mov
insl
test
sbb
cld
fistps
pop
dec
sbb
add
ja
add
sub
pop
test
sub
sub
lret
rcrl
aaa
mov
mov
rsm
add
ffreep
mov
nop
imul
ja
and
inc
sub
mov
add
jmp
push
data16
or
mov
fdiv
pop
xor
cmpsb
push
fildll
cmp
in
hlt
jmp
cmc
addl
cmpsl
cmp
dec
popf
sub
testl
xor
jl
dec
pop
movsl
mov
mov
sbb
or
fistps
aad
inc
push
push
arpl
cmp
cmc
mov
jbe
aaa
xchg
in
out
lock
repnz
jl
mov
sub
int
cmpsl
mov
test
sbb
mov
cmp
imul
movsb
les
push
mov
xchg
inc
ljmp
inc
jne
sub
sarb
popl
push
push
or
xchg
pop
lods
sbb
test
xchg
ret
xor
shlb
jle
jne
sub
adc
pminub
or
arpl
loop
out
mov
jne
dec
lret
in
xlat
sub
ret
mov
sub
cmpsl
imul
test
ss
push
mov
sbb
xchg
xchg
add
or
cmpsl
mov
je
call
sub
sbb
cmp
test
repnz
mov
dec
loop
add
push
push
fisubrl
dec
sub
or
mov
xchg
and
out
xchg
lcall
lret
pop
pop
jbe
aam
fisubrs
inc
push
adc
rorb
sub
pop
mov
cmp
int
call
sti
inc
sub
xchg
ljmp
cmp
mov
lods
sub
add
push
test
test
pushf
xor
sbb
xchg
popf
int
bswap
mov
js
push
lret
jns
in
aas
push
ficompl
jp
fisttpl
mov
adc
or
cmp
loope
pop
aas
stc
aad
lahf
or
sbb
iret
add
adc
push
negl
mov
outsb
push
loop
adc
adc
iret
negl
pop
add
mov
jecxz
sti
cmp
pusha
pop
inc
xchg
leave
mov
or
jl
icebp
sub
xlat
xor
cltd
pop
mov
inc
cld
stc
test
and
pop
out
push
aam
test
loopne
xchg
xchg
movsl
pusha
mov
jecxz
pop
iret
pop
dec
adc
sub
jbe
jno
mov
cmp
cmp
stos
insl
mov
test
rcll
ljmp
xchg
jno
pop
or
cwtl
in
push
mov
stc
shr
setle
aaa
aad
hlt
jns
in
ljmp
faddp
mov
addr16
outsl
pop
add
idivl
bound
fwait
and
mov
push
out
mov
lds
lahf
or
pop
mov
sbb
cltd
ret
xorb
mov
push
ljmp
hlt
loopne
ljmp
rcrb
les
mov
and
pop
pop
leave
add
push
cltd
sub
fcmovnbe
jnp
sbb
aam
add
pop
mov
je
ljmp
mov
jb
nop
imul
repnz
xchg
cmp
cmp
push
add
or
adc
push
mov
insb
mov
imul
inc
dec
fsubl
loopne
sarb
xor
je
pusha
dec
popf
sub
inc
shr
dec
inc
jnp
xor
mov
addr16
pushf
into
sbb
pop
inc
je
push
lcall
xchg
sub
aad
daa
jl
dec
jecxz
out
rcl
add
jbe
mov
rcll
iret
jle
and
sub
nop
jg
rcrl
lahf
arpl
inc
in
xor
jl
jns
cmp
or
jl
nop
xchg
in
sti
call
rolb
mov
sbb
loopne
xchg
ficompl
push
mov
scas
jne
xchg
lahf
aas
xchg
lods
jp
sbb
and
xchg
loopne
adc
cmp
push
roll
imul
out
and
sub
dec
mov
cmp
jnp
divl
loopne
out
cmp
push
ss
ja
movb
xor
imulb
cld
xor
arpl
or
repz
sbb
inc
out
in
out
mov
mov
cld
outsb
pop
pop
in
xor
out
inc
mov
in
pop
mov
rclb
xor
push
or
sbb
push
and
in
andl
shlb
pusha
cmpsb
fwait
pusha
mov
dec
mov
xor
std
push
js
cltd
adc
lcall
mov
xchg
and
daa
mov
in
mov
insb
and
icebp
rclb
pop
test
mov
aam
adc
adc
outsb
lds
sbbb
jle
pop
add
inc
push
ret
nop
or
jb
lret
pop
mov
jb
mov
enter
xorl
mov
sarl
movsl
pop
rorb
out
sbb
jecxz
inc
test
dec
xchg
fnstsw
inc
ud2
scas
cli
fnsave
mov
or
cmp
push
into
js
pop
xchg
stos
jb
mov
dec
outsl
es
mov
pop
mov
insl
lds
ds
push
xchg
loope
stos
ljmpw
in
xchg
adc
nop
mov
ficoml
hlt
xchg
xchg
out
mov
cli
dec
in
xor
sti
outsb
call
and
call
mov
pop
je
out
xlat
negb
jnp,pt
aam
cmpsb
xchg
cmp
inc
mov
jns
mov
int
out
dec
mov
shlb
cmc
ja
lahf
cmp
mov
shlb
shll
repz
xchg
insl
inc
fucomip
push
mov
js
gs
pop
mov
cmp
cmp
xchg
fbld
shll
inc
sbb
push
xor
add
out
das
and
xor
add
in
jo
lcall
leave
inc
scas
jle
dec
jmp
xchg
in
dec
ljmp
mov
mov
pop
mov
jns
or
or
push
or
inc
mov
or
xchg
cmp
sti
pop
pop
out
mov
dec
mov
jecxz
or
sbbb
stos
out
mov
sub
scas
dec
test
ja
mov
jnp
cwtl
movsl
lds
fmul
push
mov
jmp
push
dec
lret
out
in
push
mov
and
cmc
mov
inc
fisttpll
test
sub
repz
jmp
mov
cmpsl
dec
push
jmp
mov
sbb
adc
mov
repz
inc
lahf
insl
or
push
inc
dec
fistps
fcos
mov
inc
push
pop
scas
dec
add
and
inc
add
pop
mov
push
sahf
pop
mov
mov
dec
pop
fnstenv
loop
cmpsl
fsts
jmp
dec
xchg
xchg
in
rol
jbe
in
sub
jae
dec
ljmp
jle
xlat
js
jp
rorb
push
clc
jg
int
xchg
clc
insl
std
mov
mov
push
mov
fistps
adc
jg
mov
add
es
aam
pop
pop
fldpi
or
je
jb
pop
repz
add
aaa
psubb
and
loop
and
mov
test
fldt
jns
flds
jnp
sbb
arpl
mov
or
pop
push
negl
fsub
jl
inc
leave
dec
fdivl
and
lock
js
adcl
int3
stos
int
nop
out
popa
sbb
push
or
out
aas
mov
cltd
in
mov
aas
inc
mov
pop
sti
lret
rcl
insl
xor
push
cld
aaa
out
lahf
add
test
push
adc
jno
adc
push
sub
add
jmp
push
fwait
loop
inc
mov
out
inc
pop
adc
cs
jp
mov
ss
adc
sti
pop
adc
jno
cmp
stos
xor
dec
arpl
adc
push
mov
insb
sub
mov
sbb
sub
movsb
cld
dec
ljmp
cli
add
or
notb
pop
es
push
dec
mov
insb
cld
lret
add
mov
cli
jo
popf
or
mov
pop
pop
push
cmp
xor
test
rorl
cmp
dec
sub
push
push
test
js
popf
xchg
or
mov
ss
aaa
xchg
sub
shlb
in
test
cmp
and
dec
dec
dec
dec
sbb
and
sbb
push
jae
xchg
icebp
movsb
call
xor
adc
pop
scas
cmp
xor
stos
popf
xchg
fs
jno
lahf
stc
out
fbstp
inc
sub
lret
sbb
xor
push
pop
je
gs
lcall
fdivrs
rolb
jns
bound
sub
rorb
mov
xchg
and
dec
add
sbbl
xchg
mov
push
addr16
gs
out
jno
mov
fbstp
xchg
xlat
ss
or
stos
inc
push
add
mov
dec
jge
jne
insb
or
jl
adc
outsb
mov
inc
rol
fistl
outsl
xchg
sub
and
or
and
ret
pushf
les
hlt
aas
sti
jno
js
sbb
test
dec
addr16
lock
psrad
aaa
xor
pop
mov
mov
add
inc
in
pop
add
sub
testl
enter
pushf
rcrl
in
jg
shlb
pushf
addl
push
js
mov
aam
fdivrs
and
je
inc
cmp
ja
stc
int3
int3
dec
cli
xchg
fstps
cs
fists
push
scas
lcall
cmp
dec
addr16
cli
sbb
shll
or
jns
mov
dec
or
adc
clc
pushf
push
or
in
les
adc
ljmp
pop
iret
enter
xchg
fistpll
rcrb
inc
jmp
inc
fdivl
shrb
inc
int
add
inc
gs
pusha
mov
std
mov
scas
xchg
jge
hlt
inc
imul
jmp
cltd
sub
or
ljmp
shlb
add
jbe
dec
lret
add
iret
fistpll
stos
add
xchg
jno
call
ja
loope
inc
je
push
xchg
lods
cmp
adc
inc
ja
in
enter
jecxz
notl
shll
cmovb
rcr
fistpll
movsl
push
lds
loop
or
sahf
mov
mov
gs
in
jmp
inc
xor
adcl
inc
stos
arpl
cmp
dec
jne
aam
sbb
ss
dec
cmpsb
mov
shll
leave
sbb
and
call
lret
and
dec
mov
mov
fdivp
inc
dec
jns
lock
jl
imul
test
inc
sbb
and
shl
mov
pop
je
dec
enter
inc
sbb
adc
adc
sarb
cmp
push
dec
inc
lods
dec
mov
adc
xor
insl
mov
sbb
mov
jp
mov
or
cmpsb
mov
aas
shlb
sbb
adc
or
push
clc
xor
call
cmp
nop
pop
sbb
pop
inc
cltd
adc
sbbb
pop
sbb
rorb
cmc
sub
lret
sub
xorb
ret
inc
or
cli
ret
adc
sbb
jbe
movsl
jbe
push
sub
subl
call
pop
add
add
fmulp
sbb
shll
ret
ffreep
and
out
sub
jbe
icebp
mov
bound
sub
pushf
sub
push
inc
and
movsb
pop
test
inc
pop
loopne
lea
adc
mov
mov
mov
in
lea
aaa
pop
clc
dec
das
xchg
je
inc
popf
push
xor
add
sub
cmp
outsb
xor
divb
xchg
cltd
add
js
cs
pop
data16
adcl
add
xor
jp
ljmp
add
and
lret
scas
xlat
sbb
jns
aam
out
add
popa
aam
test
out
enter
xchg
dec
jno
xor
out
or
in
fwait
sahf
and
fadds
mov
jl
xchg
push
repnz
repz
loope
mov
jg
nop
push
cmpb
mov
pop
mov
and
roll
jb
push
adc
ss
sbb
jp
push
push
mov
dec
lahf
inc
fmull
jle
inc
lods
negb
icebp
test
push
jne
rolb
aas
lcall
or
pop
fwait
rcll
xor
shr
je
pop
movl
daa
das
inc
out
xlat
scas
js
leave
je
ret
inc
repnz
xchg
cmpsb
adc
sub
or
mov
loopne
and
rolb
mov
test
dec
and
mov
lahf
push
enter
sbb
and
hlt
imul
inc
cs
dec
cmp
out
outsb
inc
ja
add
loope
ret
push
sbb
outsl
push
pop
js
adc
ret
xchg
cs
cmp
in
das
mov
lahf
ja
cmp
xchg
shl
repz
dec
cmp
push
jge
push
cmp
hlt
and
adc
out
pop
jno
test
push
jae
push
mov
jmp
mov
lcall
and
call
cwtl
sbb
dec
aam
and
inc
or
ljmp
xchg
movsl
mov
xchg
pop
push
incl
mov
lret
movmskps
jo
mov
sub
scas
mov
xchg
mov
inc
repnz
out
mov
xor
sub
mov
mov
jns
lcall
popa
sti
lret
jbe
rclb
loope
push
pushl
ret
test
je
outsb
jge
dec
jmp
adc
roll
jbe
and
jl
xlat
xor
lods
hlt
sbb
ret
push
inc
mov
fwait
adc
rcll
loope
hlt
popa
xorl
adc
aam
jmp
xlat
fmull
dec
imul
push
adc
cli
idivl
loopne
fnstenv
dec
mov
loop
movsl
cld
jg
cmpsl
repnz
test
leave
ja
xchg
popa
insb
xchg
loope
add
mov
imul
rcll
xlat
rcrl
rorb
push
lcall
pushf
adc
hlt
jge
enter
insb
orb
jb
call
and
lods
xchg
cmc
mov
sub
inc
into
pop
and
mov
inc
sti
das
mov
mov
imul
fldenv
push
push
inc
icebp
pop
insb
loop,pt
clc
icebp
jle
jne
and
es
fistps
mov
je
and
cwtl
dec
sbb
leave
pushf
sub
push
fldt
dec
out
push
or
sarb
roll
setl
je
cs
inc
out
jmp
inc
inc
inc
mov
fsubr
bound
into
ffreep
test
ss
add
cmp
xchg
fstpt
repz
ss
movsl
int
je
sahf
lahf
push
and
inc
adc
pop
cltd
mov
stos
lahf
and
xchg
jp
mov
cwtl
enter
popa
mov
mov
lcall
popf
push
insb
mov
ret
test
mov
repnz
sub
out
mov
jno
pop
lods
mov
dec
rcll
pop
or
mov
pop
leave
fisttps
adc
pop
pop
sub
mov
inc
push
xchg
pop
xor
push
push
into
sub
aaa
popa
lret
sbb
aad
ficomps
js
sub
sub
push
imul
cmc
and
push
cmpsl
frstor
sub
push
in
or
pushf
insl
pop
loop
add
push
mov
sub
push
pop
jge
sub
out
pop
xor
sti
out
inc
cmp
jge
pop
push
inc
mov
sub
mov
int3
ljmp
dec
adc
mov
jle
movups
jb
fisttpl
inc
les
fcoml
test
sbb
cmp
and
cli
sbb
jae
fucom
xchg
gs
jne
and
xchg
cmpsb
movsb
push
add
rcr
sub
fwait
mov
pop
iret
push
mov
pop
mov
call
push
dec
and
pusha
movsb
or
cmc
xchg
xchg
das
movsb
ljmp
loope
jecxz
pop
mov
dec
sub
add
inc
jae
and
sbb
mov
cmp
sti
adc
jmp
loop
out
sbbb
adc
mov
mov
jnp
and
icebp
test
sbb
cmc
add
inc
pop
xorl
and
notb
mov
add
push
xchg
lds
add
dec
and
arpl
sbb
je
iret
imul
shll
dec
add
scas
movb
sbbb
sbb
sbb
sub
dec
or
mov
in
fsubl
push
xchg
daa
mov
pop
outsb
mov
jle
les
das
std
loopne
sbbl
not
inc
fsubr
and
loop
dec
pushf
cmp
ja
or
into
and
cmp
or
das
push
dec
cli
push
cmp
mov
or
ja
mov
aad
cld
push
mov
xor
or
pop
sbb
sub
shrb
mov
mov
pop
mov
std
jb
fs
push
shr
dec
jb
ficoms
pop
outsl
push
add
or
xor
pop
fdivrl
pop
in
arpl
sarl
ds
dec
sbb
xchg
or
out
adc
mov
jg
aaa
jno
lcall
push
fcoms
and
mov
arpl
mov
add
gs
ja
jg
add
push
mov
dec
adc
pop
clc
lret
iret
je
pop
mov
pop
popf
sub
out
fcompl
scas
int
out
mov
test
mov
int3
sub
or
push
mov
dec
push
pop
adc
dec
inc
inc
aaa
mov
addb
aad
loop
mul
sbb
mov
inc
mov
sbb
imul
iret
and
mov
ret
mov
push
stos
lods
adc
gs
cld
or
mov
xchg
mov
or
in
ljmp
movsl
mov
or
test
ss
aas
stos
sbb
push
lcall
movsb
pop
xor
adc
cmp
mov
mov
fstpt
cmp
adc
sub
fidivrl
in
inc
int3
mov
mov
xor
dec
in
sub
pop
inc
sti
inc
rorl
je
sub
std
jb
mov
bts
std
fisttps
into
jp
movsb
popa
cmp
and
push
loop
cmp
imul
dec
cmp
jecxz
hlt
je
call
into
jecxz
mov
push
inc
insb
jo
rorl
icebp
jmp
mov
stos
dec
repz
adc
cmp
jo
out
int3
imul
cs
add
stos
cmp
inc
dec
xor
mov
les
aad
fisubl
mov
cmp
xchg
push
stos
arpl
nop
outsb
sub
xchg
nop
sbb
mov
inc
lret
xchg
and
sub
shl
mov
iret
pop
sub
arpl
adc
fadd
fisubrl
addr16
jae
lock
loopne
jnp
insl
add
mov
data16
mov
cwtl
and
jb
shr
pop
fs
test
cmp
xchg
jmp
sti
loope
popa
in
mov
roll
pop
pop
jge
popa
sbb
cs
push
xchg
lret
lcall
mov
popf
enter
inc
in
shl
jecxz
call
shl
dec
add
sbb
adc
dec
and
dec
pop
jle
mov
push
out
add
test
lea
mov
ret
push
and
in
push
enter
popa
clc
js
lret
sub
scas
negb
pop
das
dec
inc
pop
cs
or
insb
adc
add
sbb
pop
and
bound
das
mov
dec
mov
pop
aam
mov
and
and
repz
jno
inc
xchg
std
xor
push
mov
insb
xchg
lds
xchg
int
pushf
in
or
pop
mov
ss
add
add
inc
inc
out
pop
xchg
std
pop
mov
and
xor
popf
dec
test
ret
adc
fistpl
nop
push
sbb
and
xchg
test
ja
push
mov
dec
imul
in
sahf
lret
push
pop
xor
xchg
cmpsl
shll
sub
scas
sub
repnz
loopne
mov
push
sub
pushf
add
fdivrs
stos
cmp
shlb
cmp
test
std
jb
and
idivl
test
repz
dec
inc
fnstsw
push
and
pusha
mov
push
mov
test
and
and
xchg
ret
leave
jns
pop
gs
mov
jo
add
fistpl
jne
fisttpll
pop
mov
in
inc
push
in
mov
test
add
push
dec
add
test
out
call
in
clc
in
mov
jne
das
adc
mov
ret
or
fs
and
xor
stc
nop
dec
sbb
mov
dec
adc
fnstenv
push
insb
imul
outsl
xchg
push
add
movsl
daa
sub
idivb
js
xchg
or
iret
loopne
out
testl
cmpsl
lcall
shrl
or
mov
jnp
jle
or
pop
sub
fs
push
lahf
xchg
pop
dec
out
xchg
cmp
inc
fbld
int3
arpl
xor
into
mov
daa
jbe
lahf
es
rorb
aaa
xor
mov
shlb
imul
mov
adc
jg
lock
testb
lcall
sar
pusha
cmovp
mov
out
dec
stos
dec
sbb
in
out
loopne
das
mov
les
das
xchg
out
pop
jecxz
mov
xchg
outsl
or
mov
nop
dec
jg
out
cmpsl
adc
stc
add
mov
insb
jmp
sahf
inc
stos
mov
popf
clc
je
bnd
pop
js
dec
imul
jl
sub
jecxz
jmp
jno
sbb
dec
jg
test
out
jo
sbb
xchg
icebp
inc
je
insl
push
add
xchg
in
pop
out
cmpsb
sub
mov
sbb
jae
inc
lret
sub
dec
inc
jmp
pop
dec
neg
push
icebp
shr
sbb
movsl
lret
adc
jae
aas
outsb
jecxz
stc
or
dec
mov
sbb
dec
out
xchg
pushf
inc
xchg
fwait
mov
pop
arpl
lods
shr
sbb
mov
add
js
lods
or
aas
daa
xor
sti
jbe
popf
sti
pop
or
es
pop
jl
fimull
sub
shlb
lock
and
xor
adc
sub
inc
call
pusha
cmovp
jmp
clc
in
test
or
or
mov
cmp
jns
fildll
adcb
shll
lea
lret
aaa
lods
cmp
adc
pop
mov
inc
xor
fcmovnu
int3
in
and
rorb
outsl
into
xor
cli
add
iret
stos
dec
rorl
mov
popf
cwtl
es
ss
dec
jbe
ficoms
dec
mov
xchg
adc
push
add
sti
dec
sub
scas
inc
in
mov
ret
adc
in
scas
mov
flds
cmp
cltd
aad
stc
xchg
lods
pop
inc
add
imul
scas
dec
daa
xchg
xchg
movb
fs
and
mov
dec
arpl
xchg
scas
and
insb
repz
lods
lds
mov
out
mov
dec
lret
dec
mov
add
and
lods
das
pop
push
inc
pop
push
fbstp
jmp
xlat
dec
loopne
ljmp
pusha
mov
pop
ficoml
je
push
mov
out
push
in
scas
decl
loop
clc
add
test
xchg
mov
and
cltd
shlb
xor
push
mul
and
jno
xchg
testb
cmp
mov
out
hlt
mov
adc
imul
cmp
jmp
mov
pop
fsubrs
push
sbb
pop
push
mov
jp
mov
cwtl
stc
les
add
hlt
js
jl
popf
mov
pop
and
out
mov
les
addb
daa
sti
lds
out
xchg
push
icebp
push
jmp
sub
push
sbb
push
decl
loopne
adc
dec
sub
aam
xor
cmp
fwait
cmp
scas
xchg
clc
test
mov
faddl
fdivs
jmp
mov
mov
rcl
clc
xor
test
movsl
cmpsb
sbb
mov
loop
cltd
in
inc
call
dec
icebp
mov
pop
dec
push
fmull
fisubrs
jge
sbb
push
nop
mov
push
cmp
fs
jg
mov
lods
xor
cwtl
cs
mov
push
mov
fwait
mov
mov
xor
shr
jbe
add
or
mov
fisttpll
mov
jle
aas
mov
outsb
out
add
lods
imul
mov
sbb
xchg
mov
aad
cltd
cmp
pop
incb
or
imul
sbb
push
popa
repnz
sub
stc
jne
or
call
and
mov
add
jne
insl
hlt
call
xchg
push
bound
xlat
dec
or
jmp
jnp
inc
push
call
push
ficoms
mov
lea
add
fildl
stos
mov
aad
inc
je
sbb
mov
inc
lcall
fstpt
push
js
inc
das
in
subb
adc
xor
les
push
and
in
out
push
in
fisttps
add
addb
std
xchg
jns
test
sahf
pop
leave
lahf
ds
push
mov
ret
fidivrl
lods
or
subl
sub
mov
add
jns
scas
jb
xchg
xor
mov
lret
adc
push
pusha
decl
shlb
pusha
cmpl
sahf
ret
dec
les
dec
inc
cli
cltd
add
ret
xor
add
jle
movsb
insl
out
xor
jns
stos
xchg
cmp
inc
cmp
jae
pop
xchg
mov
dec
ss
inc
push
cmp
loope
out
inc
clc
or
jno
xchg
xchg
movsb
push
ret
xor
in
mov
jb
adc
or
mov
mov
xlat
iret
jbe
shl
dec
mov
sbb
xor
add
mov
cmp
mov
iret
mov
nop
adc
inc
movsb
mov
or
jmp
stos
xor
test
lahf
mov
mov
sub
shll
js
dec
pop
lea
testl
sbb
adc
pushf
jno
es
cmpsl
loope
imulb
in
push
mov
mov
movsl
pop
in
setnp
mov
sbb
jne
push
daa
add
jns
jp
out
and
dec
push
xchg
roll
cli
xchg
dec
xor
adc
xchg
sub
aad
mov
out
push
push
arpl
push
and
jp
insl
mov
lods
sbb
jecxz
ss
push
sub
add
pop
dec
imul
lret
cmp
mov
jns
daa
xor
push
test
or
jbe
data16
mov
dec
xlat
movsl
mov
mov
cmp
mov
jecxz
aam
mov
mov
sub
mov
xor
inc
cmp
inc
adc
mov
push
enter
imul
mov
add
jge
cpuid
aad
popf
and
fcomp
movb
clc
push
jle
jle
fdivrl
test
scas
iret
add
hlt
fcomp
aas
fwait
jecxz
es
inc
add
ret
and
and
push
xchg
into
test
jb
int
out
pusha
mov
or
scas
cmp
inc
jl
xchg
fstpl
add
xor
jno
mov
lods
pop
dec
popl
repz
rcll
pop
mov
xlat
imul
xchg
and
fs
aas
in
mov
inc
hlt
fldl
and
sub
jmp
inc
pushf
iret
jae
lods
ret
push
xlat
and
aam
bound
jl
cmp
stos
sbb
loop
mov
add
frstor
rcrb
inc
scas
orl
mov
sbb
das
dec
mov
xor
pop
mov
mov
shl
pop
iret
pop
outsb
gs
ret
dec
jl
and
sub
xchg
jmp
and
mov
outsl
mov
cld
pop
inc
mov
mov
sarb
imul
jle
fcom
iret
lcall
pop
cmp
andb
or
cmp
xchg
xchg
jl
dec
cwtl
xchg
lcall
in
outsb
xor
jbe
cld
insl
in
push
cmc
call
mov
out
jecxz
and
mov
add
push
push
dec
mov
test
mov
sub
mov
mov
dec
fwait
dec
push
sub
mov
mov
mov
sub
inc
mov
dec
sub
xor
out
loop
cs
cmp
stos
subl
sbb
cli
int3
xchg
mov
mov
mov
cmp
and
popf
rorl
cmpsl
mov
jne
pshufw
addb
lcall
pusha
mov
or
pop
outsb
fcompl
or
ds
sbb
cs
or
adc
imul
sahf
push
sub
cmp
stos
mov
pusha
jmp
std
nop
cli
push
les
sbb
dec
sub
add
or
dec
repz
decl
sub
xchg
dec
sahf
mov
xchg
cli
daa
adcl
les
pop
inc
rolb
pop
std
outsl
and
mov
int3
push
xchg
jnp
repnz
push
adc
repnz
call
incb
or
jmp
mov
sub
jb
cli
sar
sub
mov
shrb
aas
jmp
je
jae
cmp
push
sub
repz
in
adc
xchg
test
and
jmp
stos
or
divl
cmpsb
fwait
ja
cltd
stos
out
push
shrb
out
repz
hlt
xor
pop
pop
fisubs
sub
jl
mov
push
repnz
sub
mov
pusha
lea
jecxz
cmp
jle
pop
cwtl
xchg
xchg
inc
or
pop
lret
test
repnz
popf
xchg
fnsave
and
sbb
in
mov
sbb
cmp
mov
mov
fidivs
gs
movl
lock
lahf
cwtl
outsl
push
lahf
sbb
mov
fidivl
push
outsl
jp
pop
lock
cmp
pop
arpl
fnsave
sbb
xchg
nop
mov
push
pop
icebp
lods
scas
arpl
pop
push
into
retw
dec
lods
sub
loopne
popf
and
push
mov
shll
xchg
jb
addl
gs
jno
aad
xchg
daa
lods
rol
dec
popa
popf
xchg
mov
sub
ss
or
mov
mov
cld
inc
clc
data16
fs
mov
cmc
jmp
mov
push
dec
jno
sbb
push
test
ja
adc
clc
push
mov
loop
mov
dec
push
ret
mov
add
adc
fcompl
pop
fs
mov
aad
in
jg
ret
imul
sub
in
ficompl
imul
jl
aas
or
xchg
jae
or
sbb
sbb
sub
ds
mov
cmp
fwait
rolb
jp
add
sub
movsb
lahf
js
xchg
fidivrs
inc
movb
mov
inc
aam
cmp
pop
out
inc
lcall
rclb
in
adc
loope
in
shl
push
divb
pop
arpl
xlat
call
ficomps
in
inc
nop
inc
jle
cmpsl
das
adc
js
mov
sub
les
stos
cwtl
or
push
xor
xlat
xchg
data16
xor
adc
cmp
jmp
cmp
xchg
repnz
push
fs
cmp
cmpb
xor
jp
mov
adc
and
fstpt
dec
sbb
add
fildll
ficompl
add
orb
in
insb
addr16
lods
es
xchg
iret
push
roll
test
mov
inc
and
pushf
inc
jno
leave
outsb
xchg
or
sub
movsl
sub
pop
xchg
push
clc
data16
cmp
xor
and
cs
not
lock
add
mov
pop
repnz
push
into
aam
jge
fldenv
sbb
fnstsw
sbb
addr16
mov
xlat
dec
push
xor
inc
sbb
ss
pop
inc
loope
cs
push
das
cmc
repz
mov
inc
fucomp
aaa
jbe
xchg
test
xor
out
pop
test
outsl
push
arpl
pop
loopne
adc
test
aas
test
or
push
push
pop
dec
or
xlat
inc
enter
cmc
mov
insb
push
aam
sub
xchg
addb
jae
das
mov
add
pop
loop
sub
jp
push
push
xchg
mov
push
cmp
neg
js
divl
xchg
xor
fcmovbe
xchg
xchg
inc
stc
movb
jns
pop
out
loop
sbbl
push
pop
in
dec
test
mov
mov
mov
sahf
stos
dec
cmc
pop
movsb
std
push
std
nop
das
mov
xchg
pop
cmp
cmp
pop
leave
enter
adc
cmp
int
rcll
out
mov
mov
pop
ficoml
sub
addl
dec
test
mov
je
inc
pop
mov
lahf
testl
push
mov
inc
xlat
pop
in
xchg
fsubrl
outsb
mov
scas
push
pusha
mov
bound
push
and
sahf
add
sub
hlt
and
xchg
adc
xor
xor
xchg
in
add
xor
inc
addr16
mov
mov
out
and
add
dec
adc
mov
aas
mov
xor
push
and
pop
cltd
clc
jno
nop
leave
push
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
fsub
mov
add
add
