and
lea
xchg
mov
mov
mov
xor
lea
xchg
not
mov
lea
push
push
pushl
pushl
call
jmp
mov
not
mov
shl
and
rol
ret
not
xor
lea
lea
not
rol
adc
lea
mov
neg
lea
shr
xor
lea
mov
mov
ror
push
call
jmp
xor
rcr
rol
mov
mov
mov
shl
popl
rcl
jmp
mov
xor
rcr
and
xchg
shr
rol
mov
neg
ret
rol
jmp
mov
mov
not
not
mov
jmp
xchg
mov
rcr
shr
mov
xor
lea
and
xor
mov
mov
mov
neg
neg
jmp
lea
shl
mov
xor
lea
neg
mov
shr
mov
rcr
neg
addl
jmp
movl
mov
xor
rol
mov
mov
jmp
leave
call
call
rcl
adc
lea
adc
lea
mov
lea
sub
mov
xchg
jmp
movl
neg
xor
mov
rcl
jmp
and
mov
lea
xor
lea
not
shl
mov
adc
lea
lea
jmp
adc
decl
jne
rol
neg
xor
lea
mov
mov
pop
pop
pop
jmp
push
mov
sub
push
push
push
ror
mov
adc
xor
push
jmp
xor
not
mov
add
xor
and
mov
mov
shrl
not
rcl
jmp
adc
shl
mov
call
push
lea
xor
xor
xor
neg
lea
jmp
mov
xor
lea
mov
lea
xchg
lea
not
xor
push
jmp
lea
not
mov
lea
add
rcl
not
rcr
mov
xchg
jmp
dec
imul
outsl
outsl
xor
jb
adc
inc
mov
add
lds
add
dec
in
bound
mov
dec
dec
push
jns
jne
leave
aas
scas
ja
mov
shlb
inc
mov
adc
jno
lock
aaa
ss
mov
mov
fldenv
or
push
leave
sub
mov
add
inc
dec
push
push
leave
xchg
or
push
dec
jge
leave
mov
mov
and
stos
fs
add
mov
aaa
and
inc
xor
cmp
xor
daa
repnz
imul
jne
ret
mov
xor
inc
jge
insb
mov
cmpb
jne
leave
xchg
mov
test
orl
mov
out
mov
mov
jg
std
mov
push
push
adc
cmp
mov
shll
jb
ret
mov
dec
add
orl
inc
lds
scas
cmp
stos
sti
std
mov
inc
inc
es
push
push
mov
dec
jge
mov
popa
mov
stos
test
add
divb
mov
jae
jno
call
jno
jbe
inc
repnz
dec
inc
lds
adc
outsl
jmp
stos
mov
add
lret
ja
sub
jmp
out
adc
jbe
leave
jmp
mov
lds
add
jge
inc
mov
cmpb
jg
inc
test
leave
add
sub
dec
add
aaa
rorb
jno
inc
ljmp
call
jo
push
sub
in
mov
fldenv
or
push
leave
sub
inc
dec
loopne
repnz
mov
inc
jmp
lret
orb
inc
lds
add
jmp
add
jbe
add
mov
pop
test
mov
cmp
xor
inc
xchg
push
sub
hlt
cld
mov
dec
mov
pop
test
mov
cmp
sub
sbb
cmp
icebp
push
sbb
xor
add
std
std
mov
test
or
inc
cmp
push
mov
decl
dec
inc
sub
inc
lds
movsl
mov
lcall
inc
inc
lret
inc
lds
push
adc
cmp
cmpl
add
mov
dec
iret
mov
loope
inc
mov
mov
push
ds
mov
leave
xchg
fs
test
mov
xor
dec
jle
add
test
jae
cmp
sub
outsl
add
sub
pop
mov
int
ja
dec
into
add
mov
movsb
mov
int
pop
jle
mov
inc
lret
push
dec
je
pop
xchg
push
mov
int
jl
dec
dec
or
xchg
dec
inc
or
shr
test
jmp
mov
add
jge
mov
pop
pop
roll
loopne
cmp
sub
imul
cmp
add
lds
add
or
ss
add
xchg
push
ljmp
jne
adc
lea
mov
dec
jnp
leave
testb
aaa
mov
inc
mov
add
int
or
xor
inc
or
test
adc
call
pop
jmp
shr
mov
pop
int
pop
jle
push
ss
or
push
add
lea
add
aas
mov
int
mov
lds
add
sti
add
dec
dec
push
shrl
stos
es
scas
out
mov
xor
loopne
or
jp
out
mov
int
and
inc
movsb
add
cmp
xor
mov
mov
lds
add
or
roll
sub
jg
mov
mov
dec
dec
clc
lods
lret
std
mov
leave
xchg
or
inc
lds
add
ss
add
jne
leave
mov
or
je
inc
orb
sub
push
mov
movsb
jmp
es
inc
lds
push
leave
lea
mov
int
push
pop
mov
mov
dec
sbb
xor
or
popf
sbb
pop
shll
add
add
push
adc
stos
mov
cmp
std
add
roll
inc
cmp
cli
and
add
and
add
inc
jg
add
or
mov
xchg
push
xchg
push
jb
stos
xor
test
and
and
cltd
add
and
rcll
enter
repnz
adc
int
add
sbb
pop
push
mov
into
add
pop
sarb
mov
sbb
xor
jnp
add
xchg
int
push
loop
cmpsl
test
ja
inc
fmul
or
dec
out
inc
mov
aam
sub
lods
ret
mov
xor
inc
inc
dec
push
adcb
jnp
fadds
shrl
push
cld
inc
push
adc
enter
xor
lds
push
ffreep
add
or
not
ja
sub
push
movsb
je
adc
inc
incb
test
cs
push
pop
mov
bound
rclb
jb
pop
mov
lahf
push
xchg
or
stos
arpl
fcoml
shrb
sub
sub
xchg
mov
push
or
jmp
or
mov
ret
fsubs
pusha
lods
lea
popl
sbb
jne
mov
jge
scas
push
lods
xor
add
sub
imul
pop
mov
es
mov
mov
insl
and
cmpsb
pop
jb
jnp
sbb
int3
orb
ret
lret
js
ss
jo
cs
inc
push
mov
in
xor
mov
out
xchg
push
or
int3
cmp
ftst
mov
stc
enter
add
popf
mov
jae
inc
add
push
loope
add
lret
cmc
cltd
add
leave
push
jg
aaa
sahf
mov
xor
int
cs
in
xchg
es
in
xor
sbb
fnstsw
cmp
mov
cmp
addl
ljmp
ja
test
mov
mov
lret
dec
test
xor
add
loopne
lret
mov
add
clc
es
icebp
test
adc
push
pushf
jbe
test
cmp
mov
fsubr
fists
stc
push
mov
or
xchg
add
cmp
jnp
mov
push
add
les
or
gs
dec
shlb
xchg
jl
mov
push
pop
xchg
mov
mov
sub
icebp
inc
sub
cmp
adc
add
dec
aaa
ret
rcll
or
dec
add
add
adc
and
or
adc
aaa
pop
loop
les
call
popf
inc
inc
or
cwtl
pop
mov
mov
and
dec
lock
data16
add
ljmp
scas
ror
xor
mov
dec
in
movsb
cmpl
push
lds
pop
cs
pop
lcall
inc
mov
out
out
mov
sbb
xor
mov
ja
inc
dec
adc
push
test
inc
mov
jns
out
pop
xchg
pop
xchg
push
pop
or
ret
cmp
aas
ret
inc
jp
movsl
test
in
movsb
repz
sub
inc
mov
inc
cmp
popa
int3
sarl
cs
fs
popl
push
jbe
cmp
inc
nop
mov
shlb
lds
xchg
add
sub
push
push
sbb
add
push
aaa
ficompl
xor
dec
ret
cmpl
std
pop
and
or
push
mov
cld
push
push
adc
dec
lods
incl
dec
mov
sub
lods
lret
cmp
adc
pop
test
adc
repz
push
push
in
xor
lret
ja
out
out
ss
add
ss
jne
adc
out
and
or
imul
je
popa
rcll
popf
inc
sti
pop
pop
mov
mov
rorl
push
inc
or
pusha
adc
pop
in
lea
in
jge
mov
leave
lock
inc
sbb
pop
adcb
dec
bound
pop
loopne
dec
dec
jp
in
or
inc
xchg
lock
jle
pop
push
jle
or
mov
xor
fnstcw
enter
fistl
sub
xchg
push
ljmp
leave
push
je
daa
jns
test
imul
dec
inc
out
adc
sahf
jmp
jae
and
imul
cmp
dec
fldenv
popf
mov
test
inc
jnp
ret
test
mov
lea
ss
xchg
lret
xorb
aaa
addl
loopne
mov
pop
jno
cmp
push
mov
and
jg
nop
mov
mov
stc
xchg
cmp
sub
xchg
ja
or
test
sub
jle
sbb
mov
xor
pop
cmpsl
sbb
or
inc
sub
test
bsr
jge
xchg
fildl
bound
pop
pusha
push
aaa
xor
or
iret
loopne
add
out
loop
imul
stos
push
xchg
subb
push
xorb
push
sub
xchg
and
mov
push
dec
dec
in
push
sub
and
bound
push
andb
cmpsb
shrl
or
jecxz
loop
mov
jecxz
push
inc
xor
lret
mov
sbb
insb
xor
std
test
cmp
dec
inc
or
dec
adc
or
push
lds
push
and
cmp
iret
lea
add
fsubs
pop
std
xor
mov
cli
mov
jne
pop
iret
test
fidivl
dec
jnp
mov
add
int
push
push
aaa
nop
ds
jmp
int3
dec
dec
pop
ret
sub
sbb
and
sub
stc
sbbb
rclb
or
cs
and
pop
dec
mov
mov
aad
cli
dec
push
int3
inc
sahf
dec
or
callw
jg
test
cld
shlb
ret
hlt
inc
jg
shl
aaa
sub
mov
dec
rol
pop
xchg
mov
add
push
outsl
xchg
cmp
movsb
scas
mov
mov
jmp
pop
xchg
push
dec
lea
or
or
test
or
push
inc
push
stos
icebp
mov
movsb
lock
mov
xchg
ds
xor
in
or
inc
aad
cli
loope
aam
aaa
pop
adc
jbe
rorb
xor
xor
pop
adc
xchg
or
push
mov
fstps
and
adc
aaa
int3
pushf
adc
inc
dec
or
cmp
scas
push
mov
test
dec
mov
mov
inc
adc
dec
hlt
jmp
cwtl
enter
xor
jl
xor
sub
or
push
cwtl
mov
in
add
xor
push
rcll
cmpl
test
imul
dec
xchg
subl
mov
pop
xor
dec
shll
stos
jl
jmp
inc
sub
ds
inc
sbb
or
das
lret
int
or
movb
outsb
loop
fidivrl
mov
push
mov
push
insb
dec
mov
xchg
sub
out
inc
dec
inc
add
shl
xchg
dec
in
mov
and
mov
adc
out
add
sbb
push
inc
es
shrb
cltd
bound
mov
mov
jg
bound
push
sub
push
mov
sbb
bound
add
and
gs
loopne
pop
xchg
cmp
test
aaa
lret
icebp
in
pop
addr16
inc
jl
mov
xchg
mov
sub
les
mov
rcpps
ficoml
or
or
call
pop
jne
sar
push
aad
mov
add
dec
pushf
les
jbe
ds
outsb
adc
sbb
push
inc
dec
loope
and
sub
aam
add
out
pop
std
pop
xchg
bound
paddb
or
fimuls
hlt
pop
push
out
xchg
push
les
outsb
mov
mov
mov
push
inc
rol
subl
repnz
cli
outsb
es
and
xor
xchg
push
enter
mov
pop
sbb
js
sti
inc
push
sahf
adc
lahf
lcall
ds
das
inc
adc
mov
leave
sub
pop
cmp
add
push
dec
mov
or
jae
pop
adc
inc
enter
and
data16
inc
fwait
mov
test
and
push
shl
jle
jb
iret
stc
and
jge
cld
ljmp
mov
dec
aad
inc
je
push
addb
inc
jae
dec
sub
les
frstpm(287
add
mov
je
rorb
call
rcl
lea
es
shll
stos
out
aaa
les
mov
inc
cmp
xchg
and
mov
cmp
pop
pop
dec
leave
add
push
mov
cmpsl
and
pop
xchg
je
into
iret
std
push
icebp
cmpsw
xor
hlt
and
lcall
pop
aas
inc
inc
jg
loope
jbe
push
inc
stos
push
nop
mov
movsb
xor
ljmp
jp
cmp
jae
jbe
or
mov
pop
inc
sbb
cmp
or
xchg
hlt
ret
ljmp
pop
jbe
xor
jmp
xchg
mov
std
je
sbb
ficomps
pop
fadd
sub
or
sub
add
mov
int3
sbb
lcall
stc
in
movsl
popf
xor
cs
dec
mov
xchg
loop
add
mov
stos
adc
roll
xchg
push
and
push
inc
xchg
jmp
push
mov
out
clc
pop
cwtl
out
push
sbb
mov
pop
sbb
sub
or
push
stos
ds
mov
mov
in
sarb
in
stos
xchg
mov
push
sub
and
hlt
pop
mov
push
jae
cli
mov
add
test
rorl
das
int
xchg
out
fimuls
xchg
jns
xchg
add
rorl
inc
xchg
sbb
shlb
out
repnz
add
xor
add
orl
dec
sub
arpl
mov
mov
pop
addr16
and
lret
aam
xchg
sbb
sub
int
pop
dec
enter
notl
shrl
nop
and
notl
rolb
dec
fcoms
insl
in
decl
and
adc
and
inc
push
push
cli
daa
mov
sub
push
pusha
mov
movl
and
mov
mov
push
add
out
or
cmc
adc
or
or
sub
rolb
push
les
or
adc
xchg
test
imul
insb
sub
mov
lea
sarb
sbb
jmp
xchg
jne
daa
dec
popf
lret
cmp
xchg
xor
inc
pop
inc
mov
jl
sub
jo
dec
mov
mov
mov
add
mov
into
and
pop
in
mov
xchg
mov
jge
inc
rorl
push
fsub
push
adc
loopne
inc
adcb
mov
arpl
clc
pusha
rorb
adc
xchg
mov
in
in
cmp
mov
scas
push
fs
cmp
add
inc
or
rorb
rorl
dec
roll
rol
mov
pop
or
push
int3
mov
test
sub
xor
xor
hlt
inc
xchg
stos
push
sbb
loopne
push
stos
pop
enter
sbb
push
stc
mov
jl
or
add
js
fs
lds
test
and
out
push
cmpsl
sub
int
out
sbb
shrl
ja
jp
adc
int
add
loop
push
mov
jne
mov
sti
lock
push
fisttps
mov
test
lret
jns
lds
imul
ljmp
and
lretw
dec
movsb
nop
out
and
xor
mov
jmp
andl
push
lcall
int
add
inc
mov
psubq
jge
test
imul
push
adc
test
int
jnp
inc
insl
daa
jge
sbb
or
fildl
inc
dec
pop
test
dec
pushf
dec
push
push
pop
data16
popf
outsb
mov
inc
std
js
or
addb
jl
push
nop
adc
aas
pop
lahf
shlb
adc
add
xchg
push
ret
inc
sarb
adc
dec
mov
into
mov
lea
xor
ss
inc
pop
mov
add
inc
dec
inc
leave
jbe
testl
lret
inc
sbb
int3
sbb
sub
or
xor
xor
cs
movsl
add
push
inc
shlb
push
push
call
xorl
xorb
shll
xor
and
mov
mov
push
pop
cmp
fcomp
mov
add
stos
cwtl
lds
cmp
es
dec
data16
or
mov
push
xchg
xchg
and
ret
jne
or
shll
xor
push
or
stos
insb
jle
inc
xchg
push
push
stos
movsl
xor
sbb
sub
lcall
fildl
dec
push
pop
ds
sub
stos
in
nop
push
add
add
or
dec
ret
je
imul
ret
in
and
add
sarl
mov
repz
push
pop
and
or
out
lret
add
ljmp
mov
xor
in
aad
rolb
es
xlat
mov
divl
mov
sahf
push
js
mov
or
mov
dec
inc
jbe
cmp
jle
cld
mov
sbb
jbe
add
test
cmp
or
jp
sahf
mov
dec
add
xor
out
cmpb
cmp
mov
add
cs
scas
decb
sbb
push
pop
push
popf
pop
push
push
inc
int
or
add
jle
inc
ljmp
in
and
sub
cmc
add
lods
push
mov
imul
adc
xor
test
jns
jbe
enter
push
repnz
inc
push
shll
and
jmp
sarb
adc
mov
ret
cmp
es
shlb
xlat
xor
pop
lods
add
outsb
adc
sub
xchg
pop
lret
add
in
adc
xor
mov
ss
inc
sbb
dec
jmp
cmp
push
ljmp
add
shrl
jb
cltd
sbb
or
fimull
or
pop
pushf
sbb
fdivrp
ficoms
aas
repnz
je
jle
mov
orl
dec
orl
cwtl
dec
cltd
roll
mov
out
inc
cwtl
dec
cli
call
push
shrb
insb
test
movsb
pop
movsl
mov
cld
popf
fildl
lret
cmpsb
blsfill
add
lret
push
xchg
jb
mov
adc
mov
aam
or
mov
adc
cmp
fiaddl
pushf
xchg
je
mov
pop
xchg
das
adc
inc
and
ljmp
adc
or
fwait
sbb
push
movsl
xchg
arpl
fdivs
and
testl
or
mov
cmpsl
or
push
mov
mov
sar
or
in
add
sub
add
pop
dec
andb
and
inc
push
pop
mov
rclb
imul
es
xchg
sbb
sbb
sbbb
push
lods
and
adc
ret
shl
ror
cmp
and
cmpl
ret
dec
lds
dec
iret
adc
ss
out
outsl
inc
adc
xor
mov
and
adc
loopne
out
aam
sar
roll
movsb
stos
push
stos
add
xchg
mov
cmp
inc
pop
dec
movsl
pop
inc
test
mov
mov
sti
sbb
je
cs
lret
imul
fmul
loope
stos
je
adc
adc
xor
sub
jns
xchg
incb
mov
pushf
idivl
mov
int
je
adc
push
jnp
adc
push
ljmp
sbb
adc
scas
mov
test
or
push
lahf
pop
je
xor
mov
sbb
lea
push
mov
mov
and
out
inc
in
test
jb
les
xchg
adc
pop
inc
outsl
push
or
and
hlt
mov
inc
loope
cmp
pusha
sbb
dec
mov
add
out
pop
call
lock
adc
xchg
ja
scas
push
and
rcll
pop
clc
lcallw
jmp
sbb
add
mov
test
repz
or
dec
adcb
mov
arpl
fnstenv
arpl
or
inc
sub
outsl
clc
sti
xlat
in
cmpl
or
imul
jb
jne
int3
mov
in
inc
jne
sbb
shll
push
mov
push
dec
inc
in
dec
sub
insb
xchg
lods
push
jg
rorl
gs
cmpsb
ret
xchg
mov
lret
lret
loopne
sub
adc
adc
sbb
leave
stc
cwtl
subl
dec
inc
loop
ja
mov
rorl
scas
xor
xor
push
and
jg
cli
push
xor
pop
scas
push
xor
cmp
jecxz
mull
adc
iret
or
aas
mov
mov
or
push
nop
mov
test
push
inc
cli
add
shl
call
jge
or
xchg
and
xlat
dec
adc
mov
push
sarb
add
rorb
push
inc
loop
xor
add
push
movsb
pop
or
subl
fcompl
out
xlat
dec
dec
mov
enter
sbb
adc
or
inc
loope
add
pop
cmp
fst
and
jns
sbb
into
pop
out
stos
stos
jo
call
pop
sub
pop
cmpsl
in
pop
mov
mov
inc
cwtl
std
sbb
les
je
mov
adc
int
loopne
test
xor
xor
jmp
dec
or
add
push
dec
push
test
mov
mov
cmpb
into
jne
mov
pop
or
js
sbb
pop
ljmp
fs
inc
xchg
and
test
fstp
es
mov
daa
jnp
pop
and
shl
adcb
pop
icebp
jne
mov
adc
test
xor
add
js
sbb
fdivrp
add
and
into
mov
xchg
xchg
jb
test
mov
adc
add
dec
je
shlb
mov
xchg
ret
fadd
pop
xor
adc
push
lds
cli
out
dec
orb
and
pop
mov
sbb
cs
ljmp
dec
inc
fildl
hlt
jb
push
sbb
scas
clc
aaa
leave
mov
sarl
pop
pusha
cmp
lret
sub
mov
popa
cli
mov
mov
add
pop
jmp
fcmovnbe
jo
push
les
mov
mov
or
stc
sarb
mov
mov
mov
outsb
xchg
cmc
pusha
nop
sub
adc
or
bound
cvttps2pi
icebp
push
pop
sbb
push
hlt
mov
rorb
or
dec
das
push
inc
xchg
icebp
call
push
add
push
and
clc
cld
or
xchg
popa
lret
shrb
repnz
es
sbb
pop
int3
cli
sub
jecxz
std
rclb
add
adc
leave
gs
arpl
loopne
pushf
iret
rorb
and
fisttpl
out
xchg
adc
sbb
nop
mov
cmp
ja
adc
sbb
or
addb
movsb
imul
out
fldl
orb
mov
xor
mov
cmp
or
sbb
imul
add
add
inc
jge
iret
aas
mov
add
or
or
pop
or
adc
xor
mov
xchg
lcall
mov
push
out
push
mov
xchg
bound
jecxz
xchg
cmpsl
xchg
sub
test
mov
out
outsl
in
xor
aad
loope
inc
add
mov
mov
lds
addr16
push
adc
je
lret
push
inc
out
mov
scas
xchg
js
out
test
cmpb
mov
xchg
sbb
add
xchg
dec
cli
or
insb
dec
add
sub
int3
pop
pop
cmp
xchg
popa
push
sbb
rorb
jl
insl
jg
add
dec
in
and
sbb
test
cmp
sbbl
adc
lea
pop
add
or
out
xor
sarl
cld
addr16
pop
mov
inc
out
test
xchg
cli
xchg
arpl
bsr
push
inc
pop
lds
jbe
aas
add
loopne
stos
inc
leave
inc
clc
push
jp
inc
outsl
pop
in
out
mov
inc
sub
push
jb
mov
jecxz
aam
push
mov
pop
sti
jmp
add
push
fs
mov
lock
or
fisttpl
shrb
sbb
add
sbbl
mov
inc
adc
inc
mov
jmp
or
jp
lea
mov
jl
add
add
xchg
or
imul
push
leave
jne
les
jbe
inc
lea
in
cmp
ja
mov
pop
jg
out
leave
pop
add
bound
aaa
arpl
cwtl
mov
cltd
mov
mov
subb
push
and
pop
daa
aaa
xor
adc
in
lret
cmpl
bound
cltd
xor
cmp
ret
pop
les
loopne
loopne
decb
ret
xchg
add
push
adc
aaa
rolb
mov
mov
bound
lea
les
or
push
sub
inc
dec
subl
mov
cs
xchg
add
test
pusha
fistl
int
rclb
lods
mov
jne
sbb
divb
push
sahf
push
push
jmp
jmp
xor
jp
pop
push
mov
lret
test
adc
add
dec
inc
push
xchg
clc
push
inc
sbbb
insb
arpl
jb
lods
jecxz
push
mov
dec
and
jne
dec
push
or
fstps
mov
sub
repz
or
popf
xchg
inc
jo
jae
mov
test
cmpsb
leave
xchg
dec
addl
jne
or
out
ds
mov
out
sub
cmp
sub
call
dec
nop
inc
insl
subb
xor
ret
jge
or
adc
fs
test
mov
xor
dec
icebp
lret
pushf
in
jnp
shlb
mov
rolb
pop
mov
sar
dec
cs
cmp
into
add
call
push
ret
mov
and
and
or
dec
orb
cmp
shlb
mov
jmp
inc
roll
xor
or
adcl
shl
xchg
jecxz
rcr
dec
dec
adc
dec
cmp
and
cli
test
mov
xor
sbb
cld
aad
dec
shr
add
xchg
scas
repz
xchg
aad
sub
ret
add
lret
sti
sub
lahf
das
add
test
ljmp
lahf
push
sahf
loope
pop
pop
insb
mov
xchg
orl
sbb
mov
jl
mov
in
cmpb
jnp
cmp
aaa
or
jo,pt
adc
dec
mov
popf
sbb
xchg
xchg
jns
fistpl
add
fisttpll
mov
les
aam
add
and
or
addl
ret
sbbl
sbb
shrb
cmp
push
fdiv
cwtl
add
xchg
sub
outsb
add
cwtl
icebp
xchg
push
hlt
es
xchg
lcall
xchg
ret
mov
adc
rclb
ficoms
ljmp
and
sbb
cmp
popa
frstor
cmp
adc
ret
jae
fdivrs
inc
aad
mov
sbb
add
or
int3
ss
and
nop
and
popl
je
fsubrl
dec
les
inc
mov
adc
pop
and
mov
insl
add
orb
adc
or
enter
push
ljmp
cmpb
pop
inc
les
sub
sbb
dec
cmp
push
add
pop
mov
push
xchg
add
sub
adc
xchg
loop
ja
sbb
pop
fistl
ljmp
fisubs
sbb
leave
test
cmpb
push
pop
iret
jmp
add
sti
sub
mov
bound
pop
mov
xchg
pop
mov
jno
adc
out
loopne
nop
pop
fstps
adc
xor
xor
pop
in
or
ret
hlt
cmp
pop
dec
push
xor
lea
push
ss
cld
ljmp
popa
ret
test
popf
xchg
out
popa
lods
out
in
dec
cmc
mov
jnp
cli
in
inc
lret
je
stos
pop
push
loopne
sub
mov
dec
insl
fidivs
iret
adc
sub
cmpsl
and
xchg
cmp
mov
xor
int3
cmp
jmp
cmp
push
int
jg
sub
dec
mov
dec
push
inc
mov
pop
adc
pop
sub
lret
sbbl
cmp
shr
sbb
call
loopne
rorl
insl
inc
gs
push
test
ds
data16
jmp
cld
push
mov
gs
mov
int
inc
dec
sub
std
aam
xchg
inc
xor
xlat
dec
dec
cmc
jbe
adc
xchg
js
out
dec
loope
ljmp
adc
mov
fsubs
test
push
adc
enter
lret
add
xor
cmp
or
or
jne
inc
dec
int3
andl
xor
stos
cmc
mov
shll
or
adc
aam
jns
pusha
sbb
imul
jbe
mov
mov
int
loop
subl
pop
mov
add
pop
or
xchg
jno
mov
rcrb
addb
je
mov
or
push
das
inc
shll
in
lds
mov
jg
inc
dec
test
push
aas
subl
clc
xchg
sub
cmp
roll
adc
cs
mov
xchg
cmp
mov
subb
mov
sbb
fcompl
and
xlat
repz
xor
repz
aaa
jl
jl
fidivrl
sti
fnstcw
loopne
push
cmp
shl
rorb
dec
loop
loopne
mov
sahf
lret
in
inc
or
sub
je
loopne
inc
aam
sub
leave
out
inc
push
jle
dec
pop
and
je
pop
loop,pt
or
sbb
pop
cmpsb
inc
fdivrl
adc
dec
shll
mov
mov
push
stos
mov
mov
lret
xor
loopne
xchg
push
push
stos
in
push
cs
in
jnp
fwait
inc
and
into
rcrb
cmp
pushf
jp
dec
inc
stc
std
ss
aaa
xor
jbe
test
call
dec
lret
pop
addb
sti
cmp
jl
mov
xor
sbb
or
shlb
out
das
and
push
stos
rclb
popf
dec
lds
or
enter
xor
inc
mov
sub
push
sbb
push
adc
jle
pop
rcr
xchg
fadds
je
sub
pusha
sti
and
aad
mov
or
push
pop
out
jg
js
out
mov
xor
xor
sub
add
arpl
ret
cli
in
add
pop
ds
push
push
mov
lret
stos
je
inc
roll
or
xchg
cmp
xchg
js
jl
mov
scas
loope
jmp
dec
push
push
repz
sbb
jne
vmulpd
add
ret
mov
xlat
inc
bound
lcall
push
jecxz
test
xchg
xor
lods
adc
push
fstpt
xchg
mov
push
pop
push
xor
ficompl
inc
lods
sbbb
xor
repnz
cmpsl
sbb
mov
adc
adc
add
adc
mov
fcoml
inc
mov
mov
jbe
or
sbb
jle
jb
in
sarl
fiadds
add
popf
aas
inc
dec
inc
xchg
lahf
roll
aaa
dec
push
inc
adc
mov
test
add
aas
shrd
addr16
out
mov
ljmp
adc
cli
inc
mov
xchg
insl
xorl
jne
add
push
push
icebp
and
jmp
add
push
in
ss
inc
sti
pushl
call
call
add
rcrl
lret
xchg
mov
push
ja
jle
cmp
jns
stc
xor
iret
sub
jb
pop
or
cld
xor
mov
jbe
in
daa
mov
movsl
pop
ja
push
pop
mov
cmp
js
roll
imul
pop
jmp
mov
imul
push
mov
out
jno
loop
mov
hlt
jmp
fdivrl
clc
dec
ds
std
xchg
lret
mov
cmpsb
stos
idiv
mov
shll
adc
mov
sbb
inc
inc
nop
or
int
adc
push
or
fcmovbe
rorb
push
es
test
jge
inc
pop
inc
xorb
or
test
addr16
jmp
lds
pop
mov
dec
cmpb
in
and
mov
test
cld
rol
pusha
pop
imul
rorb
dec
push
inc
mov
mov
pushf
mov
sbb
bound
mov
int3
inc
mov
pop
pop
xchg
cmp
cmp
push
adc
or
add
addr16
sbb
add
scas
sbb
sub
add
xchg
lret
mov
pop
mov
and
or
ret
xor
push
stos
add
dec
mov
jmp
add
jecxz
mov
sbb
jmp
lahf
sbb
icebp
sub
add
jb
jge
jno
pop
lods
leave
std
sti
adc
jbe
or
dec
loop
dec
push
sti
dec
mov
nop
xor
decl
call
inc
add
or
inc
cmp
call
rcrl
in
out
or
data16
subl
mov
or
rorb
push
inc
icebp
or
test
sub
pop
jle
aas
or
insl
orb
and
scas
adc
add
add
pop
stos
lods
sbb
rclb
ss
add
sbb
in
addr16
push
jbe
jbe
xchg
test
imul
cld
into
inc
leave
sub
or
or
adc
dec
inc
out
mov
lds
push
rolb
movsb
mov
adc
jns
lcall
lcall
gs
stos
pop
bound
fcmove
cmpsl
dec
push
mov
and
push
pop
and
and
into
std
xchg
xor
stos
data16
cmp
iret
in
nop
ljmp
or
pop
inc
js
test
dec
sbb
int3
jae
or
in
int
out
fisubrl
sub
jle
repz
push
test
aaa
add
jmp
mov
add
es
xchg
or
xchg
add
stos
xchg
push
mov
mov
mov
dec
and
mov
call
xchg
sbb
js
mov
lret
push
cs
lret
pop
mov
pop
push
dec
pop
loop
add
mov
pop
sub
push
lcall
aam
scas
jecxz
int
cmpsl
xor
es
push
add
or
xchg
dec
mov
test
icebp
jae
jecxz
dec
dec
dec
push
test
add
orl
cmp
inc
out
push
dec
lret
jle
pop
sub
hlt
test
sbb
add
xchg
adc
shlb
or
fdivrs
and
aaa
fmuls
or
loopne
mov
pop
xchg
xchg
jl
aam
cmp
ds
jmp
xchg
adc
lods
adc
pop
dec
clc
push
int3
cmp
ds
xchg
xchg
in
stc
xor
push
nop
scas
mov
ja
push
mov
or
pop
lret
into
ficompl
or
push
pop
data16
mov
cmpl
shlb
pop
into
fwait
xor
adc
fwait
adc
adc
sbb
inc
out
inc
fwait
dec
dec
lock
arpl
lret
sub
cli
arpl
repz
mov
je
push
adc
dec
mov
pushf
dec
scas
ret
pop
lds
pop
inc
sbb
bound
cmp
test
jo
stc
popl
mov
popa
dec
and
orl
test
pusha
push
pop
xorl
and
adc
inc
push
push
daa
stos
ret
xchg
mov
sub
or
adc
inc
rclb
cmp
test
sti
add
rcrb
xorl
pop
jge
sbb
mov
pop
xchg
add
or
jbe
xchg
mov
call
xor
adc
out
pop
sarb
call
jns
sbb
inc
or
adc
fists
mov
decl
mov
loop
shlb
aam
pusha
ds
push
lahf
loope
rorb
mov
into
loope
faddl
jg
dec
notl
and
in
inc
push
nop
ds
out
and
lret
dec
dec
xor
dec
pop
mov
mov
mov
enter
or
push
mov
jmp
inc
int
push
fs
in
test
dec
adc
iret
pop
icebp
inc
cltd
push
pop
mov
insb
js
pop
jmp
sbb
jg
pop
shl
mov
flds
imul
xor
xchg
mov
in
call
dec
pop
xor
push
sub
stc
push
mov
daa
movsb
dec
mov
xchg
inc
pop
xor
jno
enter
leave
dec
jmp
add
movsb
not
loop
or
rorb
test
ljmp
jne
pop
xchg
sub
stos
push
mov
cmp
dec
bound
pushf
and
sub
shr
dec
or
push
ds
clc
mov
or
mov
ret
frstor
mov
fsubr
or
push
adc
cmp
push
aam
ja
dec
aad
inc
dec
inc
add
mov
cld
fistps
dec
cli
adc
or
imul
xchg
add
cmp
xor
sbb
sbb
xchg
shrb
sti
shr
push
dec
call
xor
enter
cmc
sbb
lret
out
push
adc
pusha
dec
adcb
sbb
jb
mov
cmp
inc
or
aas
aam
pushf
mov
pop
push
loopne
aad
pop
dec
pop
stc
daa
mov
loope
dec
or
or
add
aas
pop
sbb
cmp
daa
hlt
add
push
xchg
xor
mov
fstps
test
adc
ret
cmp
imul
pop
adc
or
rcr
sub
jge
and
dec
ucomiss
in
adc
or
adc
sub
and
jnp
dec
ja
sub
inc
pop
shlb
js
adc
sub
cmp
push
or
adc
dec
dec
add
mov
insl
mov
pop
and
leave
add
or
decl
push
xchg
je
cs
cmp
lcall
into
shll
mov
imul
jb
in
mov
int3
popa
mov
cmc
dec
xchg
adc
cmp
dec
mov
rcll
add
sub
push
clc
call
mov
add
movsb
aas
mov
rorl
sahf
push
in
dec
pop
and
bound
jns
cmpsl
push
add
mov
cmp
adc
repnz
ja
pop
subl
inc
es
inc
mov
push
or
xchg
mov
rclb
mov
sahf
cltd
adc
mov
cltd
repnz
idiv
fdivrp
jb
push
push
leave
test
dec
dec
sub
lods
xchg
ret
std
push
mov
cmc
inc
mov
int
add
jmp
mov
jbe
and
push
sub
and
cmp
push
ficoms
jb
sbb
loope
add
stos
nop
or
shl
lret
jge
shll
repz
add
call
mov
out
pop
in
mov
and
lods
cmc
test
xchg
in
or
push
lret
xor
subl
test
dec
fwait
push
in
subl
cmpsb
arpl
or
out
push
fincstp
pop
pop
int
push
stos
jl
add
neg
jmp
test
push
sub
in
jae
or
xor
pop
sub
adc
mov
inc
or
adc
or
sub
xchg
push
sub
inc
test
shl
xchg
jbe
mov
push
dec
add
add
fisubrs
cmp
xchg
mov
dec
push
inc
iret
sub
and
ficoml
dec
pusha
inc
sbb
mov
or
push
and
jae
clc
adc
push
dec
sti
loopne
daa
ljmp
js
jmp
lods
cmp
ja
add
xchg
push
cmp
std
test
cmp
ret
roll
xlat
add
cld
dec
aam
jno
imul
hlt
shll
and
inc
inc
rol
loop
xchg
mov
jo
call
lret
jle
aam
push
xor
daa
mov
call
cmp
and
mov
xorl
int
add
add
dec
cmp
pop
jge
rcr
mov
pop
pop
lret
dec
xlat
or
andb
or
jns
lea
cmp
mov
std
push
aam
cmp
sbb
or
jge
mov
mov
mov
xlat
ficoms
push
mov
mov
inc
pop
adc
adc
cmpsb
into
ljmp
enter
rorl
bound
dec
sbb
mov
out
pop
or
mov
dec
inc
nop
sub
nop
lock
inc
push
push
les
incl
jl
ret
inc
or
dec
or
cmpb
testb
push
fwait
mov
mov
leave
lret
fstl
lahf
dec
xchg
orl
adc
insl
dec
mov
xchg
xor
jne
mov
and
xchg
adc
orb
lahf
or
mov
adc
sahf
lods
lcall
pop
adc
or
adc
in
loope
stc
pop
sbb
cmp
jno
xchg
jns
bound
fbld
sub
leave
xchg
ljmp
add
imul
cmpsb
mov
cli
pop
push
scas
sub
lret
mov
pop
jbe
push
shr
mov
cmp
js
test
shrb
bswap
mov
in
mov
sbb
orb
cltd
jne
mov
sahf
push
cmp
cmp
sbb
mov
pop
rcrb
push
lahf
pop
sub
push
stos
or
and
push
dec
aam
push
push
fbld
pop
sbb
mov
sub
mov
pop
inc
cmp
cmp
mov
push
mov
cmp
ret
inc
mov
lea
xchg
mov
test
pop
pop
iret
xchg
push
pop
lods
iret
mov
inc
and
sub
rcl
xchg
roll
mov
pop
or
or
xor
dec
and
hlt
mov
mov
sbb
xchg
push
lcall
inc
adc
dec
jge
nop
movb
lret
orl
call
sub
adc
shlb
cltd
mov
cmp
jne
enter
jnp
outsb
subl
push
xchg
ret
jbe
ret
and
mov
push
cli
cmpsl
loopne
push
outsl
mov
cmpsl
es
insl
subl
in
mov
fsubr
rorb
iret
es
ret
aas
jmp
inc
sbb
movl
stc
adc
dec
or
movsl
insb
ljmp
nop
inc
push
cmp
mov
xor
sub
js
gs
in
push
adc
sbb
add
xchg
jo
xlat
andb
imul
jmp
and
xor
push
xchg
dec
arpl
shlb
mov
add
gs
incb
hlt
xchg
test
mov
aas
ss
es
out
mov
cmpl
push
pop
xchg
xchg
jmp
jns
or
inc
fidivl
xor
popf
push
add
sub
adc
in
xor
push
cs
dec
shlb
cmpb
xchg
sbb
inc
icebp
int3
dec
nop
insb
loopne
inc
or
popf
repnz
outsb
adc
je
push
movsb
jb
in
adcl
mov
sub
push
xor
and
lret
cmp
mov
cmp
inc
push
sub
loope
cli
enter
inc
aaa
adc
push
stos
in
mov
lods
cmp
pop
xchg
into
mov
icebp
add
mov
ja
iret
mov
in
out
inc
sub
sub
or
cmp
pushf
xor
pop
xlat
jmp
jecxz
adc
add
add
aaa
int3
sub
rorl
add
call
sub
addr16
fs
cmpsl
out
inc
aas
xchg
sbb
sbb
cmp
and
add
sti
int
add
pop
push
inc
xchg
lds
loop
test
adc
push
xchg
push
push
add
inc
loop
jne
jmp
jo
lcall
mov
xchg
mov
dec
iret
aas
mov
jge
sub
int3
mov
pop
sbb
and
sbb
mov
clc
mov
dec
adc
arpl
sbb
and
push
jle
jp
pusha
test
adcb
cmc
daa
adc
jmp
jnp
jp
loopne
mov
push
decb
xlat
data16
mov
cs
sahf
xchg
test
jns
mov
ficomps
stos
rolb
push
push
mov
xchg
dec
stc
lret
xchg
lods
iret
jbe
xchg
and
into
je
jge
add
cli
in
subl
xchg
or
test
lahf
dec
outsl
jnp
add
adc
mov
das
push
jb
adc
aas
push
les
xlat
adc
rorb
lret
mov
sti
push
adc
daa
mov
inc
pop
shrl
inc
call
mov
push
cmp
and
cmp
push
cs
adc
mov
mov
xchg
dec
clc
xchg
sbb
testb
out
lock
mov
das
stos
aaa
insb
fadds
cmpl
push
adc
cltd
ret
push
insl
jnp
dec
rolb
test
fsubrs
mov
push
dec
or
adc
inc
xadd
jb
xchg
fadds
rorb
insb
or
je
dec
fs
outsb
out
pop
push
fcmovnu
mov
lock
rcrb
mull
inc
sub
cltd
and
mov
fldcw
jns
dec
add
mov
pop
incl
pop
icebp
push
loope
inc
cmpsl
pushf
sbb
cs
xchg
out
sub
add
loopne
lret
roll
adc
push
sub
sbb
cmp
or
push
je
and
or
and
jb
jnp
sbb
int3
cmpb
push
jo
and
es
pusha
push
push
dec
inc
pop
popa
xchg
xchg
push
mov
cmp
stc
mov
out
xchg
jb
sub
push
and
fstps
add
aad
lcall
sbb
les
and
sahf
les
dec
inc
pop
push
das
fsubp
cmp
mov
jbe
les
lock
lds
or
mov
gs
popf
jae
inc
xchg
dec
dec
add
ljmp
or
lock
inc
scas
xor
fwait
dec
popa
sbb
int3
xchg
lret
fistpl
jp
cwtl
pop
mov
rcrl
xlat
cmpsl
mov
lahf
xor
icebp
jo
cld
repz
mov
inc
mull
xchg
cmc
mov
cmp
pop
cmp
mov
mov
mov
cmp
and
ljmp
jb
jnp
sbb
int3
sub
xchg
push
ror
nop
and
jo
cld
aad
lods
cld
xlat
push
lcall
sbb
fstpl
mov
out
xchg
orl
enter
and
rorl
enter
jb
jnp
sbb
int3
xorb
mulb
mov
hlt
cld
mov
cli
dec
inc
mov
mov
mov
pop
mov
out
xchg
loope
movsb
out
mov
cmp
rcrl
and
xchg
test
les
ds
pop
leave
add
int3
fsts
repz
dec
stos
dec
pop
repz
dec
lds
and
adc
scas
jns
test
adc
lods
pop
scas
sub
dec
pop
daa
movsb
jo
lea
pop
scas
mov
or
pop
mov
and
jo,pn
xchg
xchg
push
sub
cmpsl
cli
mov
inc
dec
sub
fnstenv
sarb
add
jbe
xchg
daa
arpl
mov
test
movsl
or
push
shll
out
cmpsb
inc
jns
addr16
or
jge
pusha
pop
inc
cmp
and
or
lods
jbe
cmp
xchg
mov
adc
addr16
sub
arpl
fimuls
int
dec
xor
scas
fs
ja
lea
movsb
test
dec
xchg
inc
mov
push
mov
and
mov
sbb
shlb
clc
jns
in
fsub
mov
mov
adc
mov
jne
test
insb
stos
cmp
or
xchg
fs
jp
js
add
mov
or
sub
cltd
pop
out
push
dec
or
jb
or
push
mov
sub
push
xor
dec
sbb
stos
mov
and
repz
add
out
pop
push
addb
dec
jae
adc
mov
jl
and
sub
mov
push
jo
dec
insb
addr16
and
into
lods
lds
inc
adc
addl
pop
inc
in
mov
imul
adc
sub
push
and
mov
push
xor
call
and
movb
lret
iret
add
pusha
mov
fwait
mov
jno
js
lcall
or
xor
mov
dec
adc
popa
fs
xor
or
inc
aam
sub
call
dec
dec
dec
int
jp
mov
add
cmp
incl
cmp
es
sub
shr
aad
cmc
mov
pop
or
push
fs
pop
mov
repz
adc
lock
cmp
call
pop
rcl
call
insl
sti
fldenv
push
dec
xor
iret
adc
xchg
adc
leave
lret
xor
sub
fwait
cmp
inc
pop
out
je
inc
pop
ret
rorl
fistpl
xchg
nop
cwtl
dec
pop
pop
mov
fimull
int
mov
push
lcall
xor
push
addw
jl
sub
stos
mov
or
jle
and
ss
ret
std
bound
or
dec
cs
dec
push
test
push
inc
nop
nop
movsb
les
call
adc
dec
xor
ljmp
dec
rolb
pop
push
push
jae
div
pop
inc
ret
aas
cmp
leave
adc
inc
das
pop
pop
imul
xor
add
jne
adcb
dec
aaa
aas
insl
push
lret
out
scas
aad
lret
adc
push
sub
and
add
les
sbb
insb
xor
lahf
stos
adc
ret
cmp
xor
loop
fldenv
rcll
ljmp
sub
popa
add
mov
pop
stc
pop
fs
leave
mov
lret
inc
mov
push
ret
test
push
push
mov
or
pushf
add
cmp
aas
sub
outsb
lds
clc
scas
pushf
sbb
sti
enter
jle
fdivs
lcall
jno
pushf
insb
add
fwait
add
and
rcrb
or
test
push
inc
pop
sub
add
lds
sbb
aad
xlat
in
rcr
test
xchg
or
or
adc
call
xchg
mov
jb
dec
adc
iret
adcb
fadds
stc
pop
flds
aam
repnz
sub
xlat
or
bound
frstor
cltd
and
mov
addr16
in
test
xlat
adc
arpl
pop
dec
or
jecxz
push
leave
insl
daa
xchg
push
cmp
inc
aaa
lds
xchg
outsb
dec
push
adc
sar
xor
shll
xor
sbb
inc
aad
dec
add
and
or
xchg
xor
xchg
lock
iret
idivb
cmpl
repz
subb
inc
clc
add
cwtl
mov
mov
mov
stos
push
push
sub
inc
in
fildll
push
nop
xchg
jp
xor
push
sbb
or
or
add
inc
lahf
dec
adc
xchg
sub
test
into
and
in
pop
mov
xchg
scas
and
xchg
ret
lods
inc
xchg
dec
add
lret
and
push
icebp
arpl
jmp
in
pop
push
lods
or
jb
rorb
inc
cs
push
push
bound
xlat
and
cmp
xchg
and
out
test
xchg
xchg
arpl
push
xchg
pop
es
cmp
ss
repnz
fldt
or
notl
jbe
xchg
and
es
dec
dec
mov
push
cmp
mov
sti
pop
inc
pusha
push
das
outsl
mov
xchg
sbb
or
ret
dec
cmp
mov
cld
into
mov
cmp
cmp
dec
xchg
inc
xchg
lea
mov
jle
push
outsb
xchg
add
push
jmp
xchg
lea
add
pop
movsb
fwait
adc
hlt
adc
jmp
mov
clc
insl
pop
into
and
dec
nop
in
push
mov
push
out
mov
pusha
filds
mov
inc
pop
cli
mov
lock
and
adc
imul
pop
out
push
sarb
or
test
imul
push
cli
cmp
sub
mov
push
addl
and
cmp
mov
adc
lret
mov
test
stc
mov
inc
incl
stos
repz
or
mov
or
fwait
pop
test
insl
push
mov
rorb
ljmp
mov
cmpsb
cli
arpl
mov
xor
clc
or
jg
add
test
sub
ss
inc
inc
lods
into
test
sbb
dec
add
cmp
rcl
aaa
pop
sarb
fisubrl
nop
pop
add
mov
insb
dec
into
out
imul
cmp
jbe
pop
dec
pop
std
jmp
lods
push
icebp
aam
lret
cmp
lcall
mov
bound
sbb
repnz
dec
fidivl
stc
push
and
xchg
adc
aaa
icebp
inc
mov
and
fistpll
cmpsl
sbb
or
push
adc
movsl
jb
out
cli
add
sti
sahf
mov
out
add
push
cld
xchg
aas
dec
insl
sbb
std
xchg
cmc
jmp
or
xchg
xchg
add
adc
adc
jbe
add
dec
mov
mov
dec
scas
xor
daa
jb
stos
add
mov
mov
out
push
sbb
xchg
cld
inc
dec
call
push
out
shrb
or
cmc
hlt
ret
popa
push
lods
jmp
stc
aad
ds
sbb
and
and
sbb
sbb
dec
dec
mov
cltd
inc
xor
push
or
mov
enter
lds
out
in
push
xchg
jge
inc
or
sahf
xor
lcall
jmp
ds
mov
add
stos
lods
mov
mov
test
cmpsb
adc
jg
call
test
dec
inc
jl
mov
push
push
call
jp
es
dec
sarl
dec
push
push
test
iret
icebp
jbe
and
pushf
push
inc
cmp
jb
jo
or
pop
int3
dec
dec
test
mov
mov
mov
ja
jg
dec
inc
xor
in
shl
mov
shll
jecxz
fneni(8087
in
addb
or
loopne
jle
mov
iret
xor
stc
inc
jmp
lock
jo
push
out
mov
icebp
jle
iret
fcompl
jl
cmp
sbb
mov
push
or
ret
or
sar
je
dec
ret
sub
xchg
pop
rolb
or
leave
xchg
arpl
adc
mov
into
jns
add
ja
insb
and
dec
popa
ja
pusha
adc
aam
sahf
jp
mov
or
scas
sbb
mov
fimull
cmp
sbb
addr16
or
sbb
or
xor
jecxz
push
mov
sti
xorl
sbb
fnstenv
inc
imulb
jb
pop
xor
gs
add
lret
ja
cmp
inc
add
adc
inc
inc
dec
stc
bound
dec
enter
cli
xlat
aad
outsl
cmp
xor
mov
ja
ror
shrb
and
out
fdivrp
mov
fdivs
adc
repnz
movsl
inc
cmp
aas
xchg
push
mul
mov
lock
fldl
add
stos
aaa
jo
pop
push
mov
xor
clc
shl
daa
rol
xor
xchg
mov
sbb
and
popf
rcl
xlat
ljmp
ds
scas
jge
mov
aas
mov
lds
sub
adc
inc
cli
pop
inc
or
lea
stc
push
sub
sub
cmp
mov
adc
lea
xor
out
jmp
jecxz
push
mov
inc
jle
cs
sub
fisttpl
seto
add
daa
lcall
fnstenv
pusha
cld
pop
jg
push
aas
nop
repnz
pop
jmp
sub
fstl
mov
xchg
xor
call
jo
sbb
mov
jg
ret
mov
mov
scas
dec
and
push
rclb
cs
lods
add
jae
pop
scas
vhsubpd
outsl
cmp
inc
cmp
pop
aam
mov
mov
dec
push
stc
push
dec
or
xchg
out
mov
push
iret
int
jns
mov
lret
xchg
lock
xchg
adc
add
lret
xchg
pusha
lods
mov
cwtl
sub
aad
jo
ljmp
mov
jg
lret
pop
call
add
cmc
pop
ljmp
les
cmp
ret
sub
sub
les
shll
jp
cmp
jae
add
fwait
adc
fbstp
pop
stc
sbb
addr16
es
cmp
pop
ja
aaa
test
pop
mov
xchg
int
or
xor
and
jge
xchg
cmpsl
je
outsl
outsl
popa
jo
shll
and
lds
mov
fcmovu
dec
test
cmpsl
ds
js
inc
sbb
ss
jmp
int
je
xchg
clc
add
mov
push
xchg
dec
testl
inc
inc
dec
pushf
std
pop
fstpt
or
gs
mov
sbb
lcall
or
inc
enter
std
rcll
sub
cltd
pop
or
add
jo
jg
push
mov
out
inc
pop
ss
mov
mov
mov
add
add
testb
arpl
sub
pop
je
call
shll
loope
mov
inc
ja
sub
es
adcl
fwait
push
int
push
mov
clts
dec
std
lret
lcall
pushf
cltd
jg
and
jl
dec
inc
test
fistl
scas
loope
out
adc
push
or
leave
cwtl
loopne
adc
xchg
cmova
rol
loope
mov
cmpsb
pop
clc
pop
mov
sub
cmpsb
and
and
out
jg
adc
sbb
neg
add
mov
inc
mov
std
inc
jp
fisubl
push
enter
aad
sub
pop
aaa
xchg
sub
xchg
mov
cmp
loop
and
jae
pushf
jmp
inc
lods
pop
sub
gs
or
ret
dec
or
jg
add
mov
fs
sub
or
jle
lret
inc
rcr
inc
hlt
test
cs
insb
jno
imul
dec
dec
add
out
add
pop
add
xchg
out
sbb
dec
out
sub
jl
jbe
fldt
in
mov
popf
lcall
mov
ss
fidivl
sbb
jne
stos
dec
jnp
clc
int3
add
dec
inc
sub
les
cmpsb
lret
jb
bound
ret
xor
xor
cmp
xor
ja
jge
lods
push
or
xlat
jae
jge
jl
cmp
orl
push
aam
es
mov
addr16
sarl
sbb
in
jbe
test
push
dec
mov
fiadds
inc
xor
dec
lods
push
ficompl
ret
addb
add
xchg
lret
out
dec
and
jne
popf
and
movsl
mov
dec
int3
call
inc
xlat
jl
std
in
inc
outsl
inc
jg
ret
pop
mov
mov
mov
es
or
cmpsb
sbb
mov
andl
inc
fidivl
mov
sbb
pop
jl
cmovp
sub
aaa
fneni(8087
int
lret
push
mov
lret
mov
and
lret
mov
add
mov
pop
subb
push
mov
adc
fsubl
lret
ljmp
sbb
xor
shlb
adc
fstps
outsl
inc
xchg
scas
subl
xchg
mov
xor
ror
ja
xor
scas
mov
cmp
mov
pop
mov
mov
es
stc
add
iret
inc
push
stos
sub
sbb
vpcmpeqq
and
testb
xlat
xor
cli
mov
xchg
sbb
fwait
and
fistpll
jge
mov
fs
in
ja
jne
add
dec
insl
mov
and
sbb
rcll
js,pn
or
lret
push
xchg
daa
mov
ret
inc
sub
lret
mov
repnz
or
scas
jbe
loop
cmp
xor
sbb
inc
jo
adc
and
jmp
fcompl
pop
lret
xor
inc
cmp
rcl
jecxz
lret
js
push
jmp
aaa
xor
mov
arpl
cmp
inc
cs
data16
imul
lds
adc
mov
dec
scas
mov
es
push
mov
push
push
data16
cltd
add
adc
imul
push
ss
sahf
add
sub
pop
jae
cwtl
loopne
sbb
push
inc
and
nop
or
adc
movsb
jbe
aaa
xchg
jmp
iret
add
cmp
aam
and
sahf
dec
pop
mov
in
sti
jle
ret
sbb
leave
cmp
jle
inc
inc
mov
pop
push
clc
js
lgs
xrelease
cmp
in
or
mov
rcrl
sbb
push
fidivl
jge
bound
leave
movsl
inc
mov
shrl
xchg
and
mov
jne
lret
push
pop
push
push
push
xor
push
cs
faddp
mov
mov
rol
leave
clc
mov
fcoms
xor
repnz
and
loop
pop
sbb
ljmp
fwait
loopne
jl
and
xorb
push
cmp
sahf
stc
or
nop
add
icebp
daa
ss
fcoms
aas
ret
outsl
add
mov
adc
lret
jg
inc
test
xchg
dec
inc
ret
cld
inc
lret
les
sbb
adc
es
mov
cmovle
mov
int
add
cmp
cmp
daa
cmpsl
adc
or
mov
dec
cld
add
add
or
fwait
loop
sti
fldt
xor
inc
inc
dec
shrl
out
lock
pop
je
inc
mov
iret
orl
lods
xchg
popa
pop
cmp
jg
fld
push
aad
in
rclb
hlt
movsb
fst
pop
or
call
dec
inc
sub
mov
stos
push
or
repz
out
jmp
aad
mov
loop
dec
jmp
push
cmp
sarl
add
mov
out
xorb
sub
xor
xchg
ljmp
cs
or
cli
pxor
imul
dec
adc
adc
push
jo
ljmp
sub
inc
fcmovne
adc
push
sbb
push
pop
das
enter
mov
sub
enter
scas
mov
mov
or
icebp
arpl
mov
cmp
rcr
sub
add
fists
inc
cmp
xor
xor
lret
mov
dec
push
mov
repnz
cmp
mov
imul
adc
xor
pop
and
outsb
sbb
and
sti
mov
mov
inc
dec
repnz
sub
scas
rorb
and
mov
fstpt
lds
jg
loope
pop
jmp
aas
shlb
or
dec
xchg
adc
pop
cmpsb
fwait
mov
pop
in
pushf
mov
push
mov
addr16
pop
xchg
test
movsl
pusha
repnz
xor
popa
xor
lret
in
mov
inc
loope
mov
mov
adc
inc
mov
fldl
ja
xor
cmp
scas
dec
or
mov
aam
mov
dec
inc
idivb
or
jp
in
adc
out
repnz
or
jb
ret
into
sbb
dec
in
inc
rclb
push
loope
ficoms
aad
test
cmp
mov
and
and
push
in
ds
lret
cltd
sbb
mov
push
iret
iret
loopne
inc
xor
out
xor
shrl
cmp
enter
in
or
xor
lock
dec
das
sub
mov
sbb
stos
shll
in
xchg
adc
imul
add
pop
loopne
xchg
ss
sub
repz
dec
xchg
fldl
imul
or
aaa
mov
arpl
lods
and
sbb
jle
pop
pop
inc
cmp
arpl
jmp
and
push
and
cmp
insl
jge
rolb
pop
pop
and
adc
imul
push
dec
jcxz
adc
bound
xor
dec
sub
test
stos
fimull
cmpsl
and
ficoms
adc
stos
cld
mov
and
mov
push
sahf
and
iret
push
pusha
jmp
ds
xchg
cmp
xorl
dec
lret
push
in
push
je
mov
or
xor
mov
adc
jb
xchg
ja
and
jp
mov
fstl
shll
jp
and
xchg
test
fidivrl
add
call
sbb
pop
and
fimull
ret
fdivl
popl
or
rolb
adc
sub
bnd
cld
loop
out
push
imul
mov
push
dec
sbb
dec
es
ret
add
lods
ret
xor
inc
ret
lret
jp
sahf
jno
in
repz
add
addr16
mov
movsl
stc
sbb
or
jns
xchg
fcmovnb
pushf
dec
push
push
pop
jle
lahf
sbb
mov
push
dec
leave
mov
ja
ret
or
mov
dec
sbb
mov
faddl
cmp
enter
roll
jmp
cmp
pop
inc
mov
xchg
lret
and
rolb
ror
add
push
les
dec
aam
xor
dec
cmc
and
pop
outsl
inc
lds
push
pop
insb
or
push
popa
mov
inc
imull
dec
andb
stos
dec
dec
jecxz
lret
scas
xchg
or
hlt
sub
and
out
mov
mov
loope
jmp
int
and
aas
mov
push
jns
and
jne
dec
out
iret
in
xchg
call
or
call
les
jle
test
inc
cmp
dec
frstor
xchg
inc
inc
hlt
dec
shr
jo
rcrb
jb
lea
xor
push
sbb
pop
sub
mov
mov
aas
in
mov
xchg
push
pop
xor
dec
cmp
out
mov
add
imul
sub
hlt
adc
dec
cmpb
or
push
xchg
fs
adc
leave
popa
mov
xchg
fwait
dec
std
inc
xcrypt-cbc
cmpsl
adc
push
sub
xchg
cld
lods
adc
aas
adc
xchg
and
dec
aaa
cmp
push
mov
aam
dec
and
xchg
test
ret
addl
cmp
cmp
jge
fmull
jmp
inc
jl
movsl
sbb
mov
mov
rcll
out
in
lds
mov
pop
pop
mov
push
jg
mov
lds
aaa
fsubl
jmp
loope
scas
dec
or
call
popa
std
roll
movsb
xchg
jb
xchg
push
cld
cli
mov
sub
lahf
dec
aaa
push
stos
xor
data16
adc
int
daa
xorl
mov
aad
push
aas
xor
jecxz
call
or
popa
xor
pop
dec
out
jno
fldl
dec
mov
rclb
jne
add
inc
stos
push
mov
xchg
pushf
xchg
out
inc
push
pop
push
insl
test
cltd
in
push
add
sbb
cmpsb
aad
cmc
lret
jae
mov
andl
fadd
stos
test
sub
inc
mov
test
push
inc
aas
mov
sub
arpl
pushf
lock
clc
mov
and
or
loop
jmp
jmp
movsb
or
in
cmp
add
out
testl
hlt
lock
mov
stos
cmpsl
mov
iret
push
mov
sub
mov
fsts
push
or
pop
les
jo
xor
cmp
mov
out
pop
mov
push
pop
sub
xor
repnz
into
dec
in
xchg
into
cmp
jge
stos
fimull
add
push
cmp
movsb
ja
ss
shl
imul
and
ja
or
push
inc
es
out
je
pusha
cmp
jle
jecxz
arpl
lods
sbb
sbb
das
sub
cs
subb
std
mov
sbb
dec
xor
push
test
repz
out
pop
mov
adc
dec
add
idivb
ds
stos
mov
and
repz
fidivl
test
jns
inc
dec
insl
mov
fdivrl
push
sbb
into
push
or
or
mov
dec
test
daa
jno
adc
add
call
jmp
insl
cwtl
lret
into
lea
mov
xor
mov
int
bound
push
pop
repz
inc
xor
stos
push
inc
pop
pop
jmp
cmpsb
pop
push
bound
loopne
pop
mov
scas
adc
jl
xlat
mov
adc
dec
pop
std
push
hlt
mov
notl
in
leave
gs
xbegin
push
fidivrs
pop
rorb
orb
or
cmc
xchg
addb
inc
or
aam
inc
ret
shrb
jae
aad
mov
negb
push
pop
lcall
mov
lret
sbb
xlat
lret
inc
mov
stc
rclb
arpl
dec
jbe
lock
hlt
mov
shrl
sub
adc
je
lods
sub
jns
cs
pop
jns
fcmovne
pop
push
lds
push
lea
mov
adc
out
leave
cli
mov
lcall
shl
cmpsb
outsl
mov
xor
jle
cmp
test
loope
in
cmp
xchg
bound
sub
ds
data16
ss
lret
icebp
sub
mov
jmp
push
jbe
sbb
push
cmpsb
adc
jp
lret
inc
adc
ja
push
mov
push
in
ljmpw
add
ret
stc
adc
mov
add
xor
cs
into
or
pop
push
popf
push
mov
sub
dec
xor
popf
mov
or
pop
sub
pop
in
jp
mov
xchg
inc
add
dec
push
sbb
nop
dec
push
mov
int
aas
mov
adc
aaa
incl
jb
xor
mov
test
cmpsb
mov
cmpl
cmp
ret
fdivrs
pop
inc
js
dec
mov
pop
xchg
pusha
ret
cmp
or
mov
mov
pop
mov
ja
insl
hlt
xchg
or
mov
cmp
sub
movhps
iret
adc
cmp
mov
divb
jo
ds
aaa
icebp
mov
push
hlt
or
push
pop
loopne
jno
inc
addr16
lcall
add
add
jo
mov
inc
jle
jecxz
dec
fstpt
jmp
dec
xor
mov
and
sahf
pop
inc
rorl
insl
arpl
pop
pushf
pop
call
pop
adc
sub
repnz
out
xchg
lock
jmp
and
and
mov
jecxz
inc
mov
ja
sbb
aaa
adc
test
aaa
enter
pop
mov
insl
out
push
lods
push
nop
mov
stos
loopne
cld
idiv
jmp
pop
ja
dec
push
out
sbb
mov
sub
popf
es
test
jns
push
xchg
jbe
jle
cmp
cmp
frstor
andl
jne
push
or
inc
mov
test
idivl
sarb
mov
shll
or
xchg
or
jno
rcrl
and
dec
test
loope
mov
cmp
cmp
jne
nop
or
shlb
mov
and
jo
repz
fbld
pop
push
test
or
or
rcr
mov
nop
fsubl
jns
ret
jl
cmp
movsb
sbb
cwtl
daa
inc
std
xlat
or
and
nop
out
shl
mov
shr
cmpsl
sbb
add
pop
imul
add
cmp
push
pop
mov
lret
mov
pop
popa
lock
fcomi
shlb
lods
push
push
fld
test
js
inc
mov
add
xorb
xor
popa
mov
mov
push
into
filds
inc
or
pop
outsb
dec
stc
pop
mov
aas
mov
xlat
fwait
sub
inc
push
test
push
inc
ret
push
iret
push
xchg
rcrl
pop
xchg
or
cmp
push
jmp
inc
lahf
and
jp
and
adc
or
add
sub
pop
fbld
jp
xchg
data16
lds
cmp
mov
dec
int
jne
pop
jne
push
icebp
add
rolb
push
push
fs
add
loop
lcall
leave
call
and
cmp
and
add
stc
push
lods
movsl
add
inc
loope
enter
or
push
add
pop
push
in
fdivrl
cmp
mov
lcall
pushf
sbb
nop
cmp
sbb
jle
pop
es
add
dec
icebp
push
je
mov
push
adc
pop
negl
cmp
pop
push
and
js
inc
sbb
pop
jae
mov
jb
dec
lret
out
pop
cltd
test
lock
pop
mov
jno
xor
fsubrs
mov
pop
xchg
mov
fiadds
dec
or
xor
and
iret
or
sub
daa
jmp
sahf
lahf
xor
xor
imul
repnz
inc
jl
mov
and
adc
dec
mov
in
in
sub
adc
sub
mov
ljmp
push
add
xchg
mov
jle
lcall
into
xor
fsubs
leave
aas
cmp
cli
popf
rcll
inc
add
or
xchg
add
aad
inc
push
or
adc
repnz
into
push
das
sub
je
lret
jl
inc
sti
sahf
dec
dec
xchg
fwait
inc
pop
ljmp
adc
add
push
adcl
inc
inc
roll
js
iret
sti
getsec
imul
adc
cs
push
pop
pop
sbb
rorl
add
sub
mov
sub
or
in
and
int
push
xor
call
movsw
xchg
push
push
in
xchg
push
sub
clc
mov
push
rcll
mov
jmp
ficoml
dec
pop
inc
daa
push
sbb
into
or
inc
stos
mov
sbb
mov
and
dec
dec
cmp
or
cmp
inc
call
lock
lret
rcrl
sbb
mov
jb
add
mov
aam
inc
xor
icebp
or
xor
shlb
inc
ja
dec
jl
sub
into
push
adc
mov
scas
jbe
ds
jle
add
pop
dec
popa
push
sub
ret
or
mov
sub
lds
std
pusha
push
inc
jne
jo
add
fadd
or
push
jns
cmpsl
pop
jno
cmp
sahf
add
enter
sbb
mov
push
mov
dec
jb
aaa
in
mov
sbb
mov
dec
in
xchg
shll
dec
inc
inc
pop
inc
or
movsb
mov
mov
dec
lahf
bound
sub
fcomps
hlt
insl
dec
popf
mov
jmp
jl
repz
pop
bound
cmpsb
mov
loope
cltd
pushf
popa
sub
push
adc
dec
shl
shlb
loop
sub
pop
jae
movsl
insl
clc
adc
mov
mov
jg
movsb
jno
and
pop
and
mov
push
loope
and
inc
cs
mov
pop
add
pop
xor
fidivl
pop
jbe
shll
repnz
aas
loope
nop
inc
sub
mov
inc
stc
adc
insl
sbb
xchg
jl
xchg
and
pusha
or
xor
sbb
loop
mov
sub
rorl
int
dec
sti
data16
pop
jae
icebp
movl
bound
add
pop
dec
test
xchg
leave
mov
cmp
mov
push
pushf
stc
ret
loop
ja
and
sbb
out
nop
in
jecxz
xor
loop
lahf
into
pop
stc
stos
arpl
jmp
imul
and
pop
imul
mov
and
add
gs
and
mov
jbe
inc
call
cmp
ss
cmp
imul
enter
sub
aaa
movsb
dec
mov
daa
mov
add
xchg
pop
stos
cmp
xlat
push
hlt
ja
jnp
fwait
arpl
test
lret
leave
ds
lods
cmovbe
and
mov
ret
sbb
push
shr
adcb
mov
iret
outsl
dec
fsubp
stc
cli
cmpsb
les
shr
jns
test
pop
test
jmp
push
add
insb
int3
or
and
fs
jecxz
mov
ljmp
push
cmpsl
mov
mov
or
or
push
dec
into
dec
ljmp
hlt
clc
std
xchg
mov
dec
mov
jmp
testb
repz
inc
or
cmpl
pop
mov
dec
mov
ds
popa
cmpsb
insb
mov
shlb
mov
aad
push
push
add
stos
movsb
lcall
sub
shrl
adc
mov
fdiv
lea
std
iret
push
leave
sub
lock
mov
int3
push
pushf
add
stos
dec
or
lahf
cld
lds
adc
or
inc
loopne
imul
cmp
lea
or
jnp
jns
loopne
lock
ss
sahf
adc
pop
nop
mov
or
inc
out
jle
xchg
sti
lahf
add
addb
fisubl
xchg
lahf
pop
daa
movb
pop
int
in
js
or
add
cli
xlat
mov
push
hlt
sbb
push
or
mov
test
xor
call
lahf
int
loopne
inc
mov
adcl
mov
sub
mov
push
mov
loopne
rorb
sbb
rorl
push
xchg
pop
mov
xor
pop
pop
pop
lods
aam
ret
notl
pop
adc
loope
xchg
cmp
mov
adc
or
adc
xlat
jmp
cli
xchg
pop
jnp
sub
or
aam
inc
popl
dec
inc
adc
loope
sbb
ljmp
in
mov
jecxz
outsb
push
pop
mov
inc
mov
xor
push
or
sti
adc
xchg
mov
mov
mov
jl
mov
in
dec
daa
mov
sub
or
int
notb
dec
fisubl
in
outsb
push
dec
idivl
adc
push
sbb
mov
popf
push
int
inc
in
jmp
cmpsl
jge
jmp
sbb
stc
mov
lods
shlb
mov
add
lock
push
cmp
pop
repz
jnp
pop
lret
push
and
push
dec
test
repnz
push
xorl
insl
cmpsl
and
mov
mov
inc
ret
add
adc
or
leave
orl
mov
scas
xor
mov
sub
jmp
xchg
cmpsb
xorl
adc
iret
fs
div
lods
sbb
int3
ds
inc
mov
pop
mov
mov
rclb
jno
cmpsb
push
in
cwtl
mov
fnstcw
and
xchg
mov
loopne
repnz
ja
popf
push
decb
or
jb
pop
push
mov
mov
jno
xchg
insb
sarl
mov
lret
jns
cmp
sarb
dec
or
push
or
xchg
popa
push
andb
xor
rorl
push
jecxz
mov
push
out
lret
mov
enter
and
arpl
mov
and
add
adc
dec
inc
xchg
or
and
es
iret
dec
sub
in
adc
adc
and
mov
movsb
push
xchg
psrld
pop
pushf
lret
test
lock
jb
dec
adc
and
fisubrl
cmp
push
int3
imul
xor
shl
lods
es
jecxz
xor
scas
mov
xor
cmp
loopne
push
jg
cmp
push
and
out
xor
inc
mov
lret
mov
pop
aas
fwait
cmpsb
mov
out
dec
sub
std
rolb
xchg
bound
les
sbbb
mov
mov
dec
std
pop
lds
mov
es
std
push
mov
mov
dec
xchg
cwtl
mov
add
xor
dec
cmp
or
adc
les
leave
add
jp
fldl
ss
add
mov
mov
mov
push
out
sub
cmp
inc
xchg
adc
xchg
push
push
add
cmp
loop
push
mov
call
jge
addr16
mov
rcl
xor
or
clc
sub
in
sbb
adc
dec
loopne
pop
sub
cld
popa
or
push
into
inc
rep
push
scas
clc
orb
jl
inc
call
xchg
mov
xor
rolb
pop
bound
push
jnp
or
mov
or
repz
dec
leave
xor
bound
sub
les
cmpb
add
rorl
test
xchg
popa
jb
cmp
pop
pop
pop
stos
popa
mov
insl
xor
adc
mov
int
push
push
jns
jno
bound
dec
mov
push
mov
lock
int3
pop
adc
aam
rcl
mov
inc
hlt
cmp
sub
push
ljmp
push
ljmp
dec
push
add
shl
pop
in
rolb
test
dec
cmp
and
stc
fwait
xchg
add
loopne
int3
arpl
inc
push
jl
icebp
xchg
icebp
push
ja
adc
inc
and
aas
rcl
mov
adc
or
dec
repnz
xchg
or
pop
adc
js
ja
jp
loopne
out
fcoms
cmp
rolb
lock
cmp
jne
inc
sub
sbb
push
xchg
in
xor
rorb
mov
fdiv
cwtl
fists
loopne
inc
jmp
inc
cmp
ror
xchg
pushaw
andl
fsubr
or
jno
stc
out
lods
inc
and
test
outsb
lret
xchg
cmpsb
and
jge
pop
dec
and
aas
jl
pop
ljmp
cmpsb
popf
call
add
and
push
mov
xor
bound
out
inc
jl
les
les
and
sbb
ret
jl
fistpl
js
sbbl
lods
push
adc
mov
pop
es
push
sbb
lahf
das
pop
xor
out
mov
xor
xchg
xor
icebp
call
lret
adcl
in
ljmp
pushf
xchg
inc
and
outsl
aam
test
imul
mov
cmp
mov
je
push
jne
push
sub
push
sbb
push
mov
mov
fwait
lock
mov
inc
cmp
jg
out
hlt
push
aaa
loope
sarb
jbe
mov
aad
push
xchg
sub
lock
mov
sbb
add
fs
scas
push
push
cmp
mul
adc
lret
inc
jne
fcoms
adc
inc
and
shlb
jne
jbe
cs
imulb
repz
stc
sub
mov
mov
out
into
jbe
inc
lcall
adc
sbb
adc
movsb
lea
fisttpl
imul
or
add
jl
dec
imul
mov
div
jmp
cltd
add
add
mov
cld
fnstcw
outsb
data16
pop
and
daa
aaa
das
shlb
sbb
push
dec
jmp
jmp
mov
sub
add
sahf
cmp
inc
scas
push
xchg
sbb
push
ret
add
xor
or
pusha
and
push
std
inc
and
addl
adc
mov
ja
rcl
add
jae
adc
subl
mov
or
std
dec
repz
add
or
dec
inc
cmpsl
dec
dec
test
mov
adc
inc
nop
pop
shll
push
stos
jl
push
gs
inc
ds
inc
inc
mov
sub
filds
gs
xchg
push
jp
mov
sub
xchg
lods
into
and
inc
add
dec
lods
aaa
shl
pop
aam
sub
pop
xchg
pop
dec
mov
cli
fcomps
or
fiaddl
lcall
decb
jne
jne
lea
test
sub
xchg
iret
loopne
sbb
dec
push
lret
lea
inc
ja
cmp
lods
sub
pop
mov
pop
jmp
add
cmpsb
pop
mov
imul
aad
jmp
and
or
mov
mov
mov
push
adc
xchg
dec
int3
adc
sbb
pop
mov
xchg
sub
clc
es
aam
aaa
loopne
push
stos
inc
xchg
pop
aad
fbld
dec
mov
outsb
jg
pop
lret
mov
clc
lret
cmp
dec
dec
dec
cmpsb
and
pusha
addr16
adc
aam
or
mov
xchg
jne
fsubl
pop
xchg
sub
push
cs
outsb
and
dec
rclb
dec
push
ret
outsl
adc
pusha
push
jge
xchg
inc
mov
jg
dec
and
rolb
adc
pop
inc
test
or
pusha
pusha
add
rolb
inc
nop
int3
mov
pusha
pop
clc
or
pop
movsl
or
call
clc
test
aas
out
out
dec
test
hlt
lods
inc
rdtsc
or
popa
in
movsb
int
mov
fnstsw
sub
lea
leave
es
hlt
mov
pop
cmp
rcl
pop
fcmove
jb
cmp
lcall
xchg
ds
sbb
xchg
sbb
movsl
in
xchg
xlat
pop
pop
mov
mov
or
notb
enter
push
mov
outsl
insl
mov
pop
sbb
and
jmp
add
test
mov
sub
mov
lock
fisubl
in
add
aad
or
jbe
into
das
jp
mov
stc
shll
mov
ljmp
es
shlb
mov
jmp
and
daa
inc
add
icebp
data16
push
cli
out
mov
pop
ret
pop
or
and
pop
pop
cmp
mov
sub
pop
jb
cmpsb
mov
setne
mov
ret
int3
negl
jecxz
inc
dec
mov
mov
les
mov
xor
adc
and
fwait
out
aam
adc
flds
inc
mov
lods
dec
movb
xlat
pushf
and
in
adc
adc
or
jle
gs
jbe
dec
insb
adc
loope
dec
rclb
sbb
dec
xchg
scas
out
data16
cmp
cmpsb
pop
mov
fsubs
data16
addl
out
inc
push
outsb
arpl
inc
pop
xor
push
ds
push
jbe
and
add
pop
and
stos
mov
addr16
xor
mov
leave
clc
adc
pop
and
rcr
inc
lret
or
scas
push
mov
mov
in
scas
pop
iret
loop
xchg
and
subb
mov
pusha
or
cmp
pushf
loopne
xor
add
mov
mov
mul
in
data16
push
jo
lods
daa
mov
lods
xor
out
les
dec
gs
sbb
cmc
fs
and
rorb
dec
stos
cmpsb
lods
dec
pop
dec
lods
fbstp
push
cmp
test
rclb
adc
sahf
cli
popa
les
push
add
mov
push
mov
adc
adc
xchg
sub
in
and
add
mov
inc
aad
stos
push
popf
pop
or
adc
ficompl
sahf
arpl
or
or
xchg
cs
fisubl
cmp
dec
daa
sub
repnz
pop
imul
stos
push
je
cmpsb
push
bound
mov
fcmovbe
xchg
mov
orl
ja
sub
icebp
push
mov
jnp
shll
inc
test
outsb
imul
addl
add
jge
out
in
rorb
lods
aad
aas
daa
pop
loope
mov
insl
ds
jp
daa
lods
into
and
mov
cli
adc
xor
arpl
cwtl
xor
mov
push
xor
cmpl
jge
add
inc
jmp
insl
add
sbb
push
or
clc
in
sub
or
popa
xor
pop
leave
or
arpl
sbb
outsl
aad
push
hlt
inc
xor
dec
hlt
mov
sub
mov
hlt
mov
test
pop
xchg
pushf
fisubrs
sub
sbb
popa
and
rorb
push
addl
xchg
push
repz
xchg
jne
pop
pop
int
mov
out
lcall
or
inc
lahf
xor
inc
lods
add
into
adc
xchg
or
dec
xchg
das
js
sbb
mov
and
add
lea
pushl
testb
jo
cmpb
add
pop
add
push
add
sub
addl
nop
jle
xchg
xor
adc
mov
and
sbb
mov
lock
jae
sbb
icebp
data16
iret
loope
xchg
into
adc
pop
sub
test
repz
sbb
pop
xlat
lds
or
movq
add
sbb
jbe
sbb
xchg
pop
aad
jb
loop
adc
fsubl
sub
daa
xchg
mov
mov
cmp
pop
or
popf
sub
jge
loope
sub
adcb
sub
push
pushf
push
nop
mov
ds
mov
inc
pushf
mov
cs
adcl
arpl
fs
movsl
adc
jno
adc
dec
pop
insl
shlb
jo
pop
enter
mov
loop
push
fmull
mov
enter
and
mov
cld
xor
add
mov
inc
stos
pusha
outsb
sbb
dec
cmp
xchg
xchg
sahf
add
add
sbb
dec
adc
imul
and
inc
loop
xchg
mov
repnz
out
jae
mov
and
push
aad
adc
xchg
adc
and
dec
ds
inc
mov
int
test
cmp
add
insb
and
outsl
imul
push
mov
jo
out
lret
repnz
mov
test
jne
lea
or
dec
dec
push
sbb
hlt
inc
insb
or
dec
testl
mov
dec
jbe
insl
adcl
cmp
adc
inc
inc
cwtl
sbb
and
aad
push
adc
rorb
aad
cmp
lret
jo
lcall
leave
push
mov
fidivl
roll
push
mov
add
cmp
cli
and
enter
lock
xor
ficompl
mov
add
mov
xor
sbb
sti
cmpsb
cs
mov
es
int
into
push
sub
xchg
and
aad
adc
or
arpl
sub
sbb
aad
push
add
daa
es
mov
pop
adc
mov
push
mov
call
fldt
mov
push
inc
sbb
sti
sub
mov
add
nop
xlat
shrl
sub
es
mov
or
or
mov
rclb
or
js
add
fs
icebp
or
sbb
inc
sahf
jns
test
push
out
or
jle
add
and
inc
mov
movsb
shrb
mov
push
inc
cwtl
mov
adc
int
adc
pop
add
xor
pop
das
mov
frstors
sub
xchg
sub
cld
add
mov
out
loope
sbb
loope
loopne
push
outsl
add
sub
es
sub
sbb
loopne
fadd
pusha
mov
call
stos
sbb
and
mov
sub
insb
ret
mov
or
sbb
repz
cmp
out
push
inc
fs
jle
dec
fmull
mov
xor
push
sub
loop
add
cli
push
cmp
ss
and
mov
rcl
mov
inc
movb
scas
xor
repz
fwait
jbe
lds
mov
loopne
adc
inc
or
cmc
pop
loopne
filds
repnz
mov
jo
xchg
sub
cltd
and
push
xor
xchg
xchg
popf
xchg
lcall
or
push
push
lock
rolb
xchg
push
out
ret
add
js
push
cld
ret
inc
mov
inc
js
sub
sbb
add
add
or
add
push
outsl
adc
sub
cmp
call
jmp
add
das
dec
mov
jge
fbld
scas
mov
pop
fidivrs
push
pop
sub
stos
sub
dec
inc
cmp
jmp
mov
std
cwtl
rclb
fmul
add
orb
xlat
mov
xor
mov
fs
or
cmc
aam
repz
insb
test
mul
xchg
lds
jle
in
pop
sub
test
int
mov
lcall
jno
daa
or
fs
inc
xor
enter
sahf
stos
xchg
mov
sub
pop
xchg
pop
and
in
mov
add
jp
sub
rcl
in
and
repnz
push
nop
and
mov
lods
gs
or
pop
adc
les
cmpsb
ja
xor
into
fmull
nop
aad
dec
cmpsb
add
das
test
int
add
cmp
movsl
cmp
pop
dec
sbb
mov
xor
fistpll
mov
xchg
pop
jmp
leave
cmp
cmp
imul
nop
xchg
leave
pop
stc
sub
test
les
mov
sub
jle
fcoms
pop
or
stc
jge
aam
xchg
mov
scas
cmp
adc
push
and
lret
jg
test
loope
addr16
js
inc
inc
in
pop
dec
adc
lock
pop
fwait
cmpsl
out
lret
fadd
mov
pop
mov
mov
mov
and
mov
pop
push
push
mov
sub
xlat
inc
int3
pop
jne
mov
std
test
push
xor
test
xchg
sbb
pop
dec
popf
and
add
pop
mov
push
sbb
mov
push
adc
aaa
xor
dec
pushf
push
xchg
test
jg
cmp
mov
lds
ret
mov
into
inc
aaa
ret
push
xchg
dec
ljmp
dec
pop
insb
jne
inc
push
stos
lds
testb
jp
push
xchg
or
push
add
push
imul
dec
nop
test
mov
xchg
stos
jb
inc
sub
and
xor
cmp
adc
push
cmp
dec
jb
inc
mov
popf
inc
inc
outsb
adcb
scas
inc
dec
jno
sub
stos
xchg
sub
jns
add
or
dec
jno
shr
repnz
dec
pop
xor
and
nop
adc
shll
push
pop
and
imul
or
in
jne
xor
sbb
dec
inc
pop
movsb
add
add
and
mov
xlat
cld
loopne
push
xlat
lahf
in
jbe
cmp
in
pop
js
pop
mov
jge
fwait
sub
sbb
jo
cltd
adc
ljmp
cmp
add
cmp
dec
cmp
push
es
mov
roll
dec
jp
or
int3
inc
or
push
sub
rclb
push
faddl
xor
mov
cli
and
stos
or
xor
jmp
out
mov
inc
in
shr
push
push
push
adc
or
xchg
and
retw
aas
or
mov
jge
stos
dec
jle
popl
stos
cmp
mov
or
fldcw
hlt
add
and
mov
lret
xchg
inc
dec
dec
inc
xor
in
sbb
push
adc
mov
sbb
scas
dec
add
adc
clc
es
lcall
lods
outsb
test
sub
dec
imul
pop
lock
dec
ret
mov
mov
in
or
mov
or
mov
jae
pop
mov
and
mov
sub
cli
mov
mov
movsb
xchg
rorb
or
adc
sub
pushf
movsl
in
sti
sub
je
in
sbb
sahf
leave
dec
mov
xlat
xchg
cltd
pop
pop
decl
push
dec
lret
push
shr
test
jmp
jmp
lds
mov
test
std
lods
jns
or
sbb
testl
and
addb
adc
flds
add
jno
push
ja
adc
out
dec
and
dec
adc
adc
push
dec
sbb
lret
in
jmp
pop
mov
ss
je
sbb
lret
push
dec
div
push
add
nop
dec
faddl
or
sti
leave
int
jo
inc
push
xor
mov
dec
sbb
mov
cmpsb
sub
imul
popa
dec
adc
sbb
inc
pop
iret
lods
or
cmp
inc
int
xchg
cmp
sbb
pop
cli
xchg
and
aam
pop
cmpsb
lods
push
push
cltd
mov
pop
xor
es
adc
dec
dec
arpl
sub
scas
or
stos
icebp
rorb
aaa
ss
jmp
fidivrl
sti
push
sahf
jo
aas
adc
cmp
xchg
ds
xchg
sbb
movb
xor
orb
enter
rorl
adc
sub
decl
fsqrt
or
xor
je
push
es
push
push
fs
fdivrp
pop
call
aas
add
test
dec
jae
outsb
add
push
and
and
fwait
jnp
xor
fwait
dec
call
dec
mov
or
repz
mov
add
clts
mov
repnz
je
push
test
xor
mov
data16
xchg
test
jne
mov
jmp
popf
add
jns
jne
jno
adc
mov
test
imul
shrb
adc
ss
fists
jg
adc
loop
sbb
push
or
mov
dec
out
and
add
xor
or
aam
and
inc
lret
xchg
adc
add
cmp
repz
not
jne
cli
call
insb
mov
cli
jp
adc
dec
inc
test
xchg
xchg
mov
mov
out
add
mov
pop
push
push
ret
fwait
mov
cltd
push
push
sub
pop
fists
cli
lahf
dec
pop
dec
in
adc
fistpll
pop
test
fmul
in
xchg
sbb
stos
push
inc
cmp
bswap
hlt
in
inc
sqrtps
add
mov
cmp
out
add
test
dec
inc
cli
pusha
lods
and
dec
push
cmp
xchg
adc
arpl
xchg
mov
nop
loope
dec
inc
ljmp
dec
mov
pop
in
push
and
fabs
push
popa
stos
adc
mov
insb
mov
cs
lahf
lods
fst
dec
scas
push
fcoms
cmp
jecxz
xchg
es
scas
and
xchg
lods
mov
or
mov
xor
insb
gs
aam
lods
mov
xchg
push
and
mov
outsb
cs
sti
push
mov
icebp
mov
push
decl
mov
xchg
rol
adc
cld
mov
and
scas
push
stos
shl
mov
add
les
cs
xchg
mov
or
repz
and
jmp
or
fdivrl
divb
dec
andb
loop
aas
adc
out
repz
out
xchg
jecxz
xchg
outsl
xchg
ficoml
std
mov
repnz
xchg
fdivl
jge
mov
outsl
mov
xor
adc
cmp
add
int
dec
test
dec
lods
stos
inc
jno
arpl
xchg
fmul
or
adc
or
xchg
pop
pusha
mov
xlat
inc
lret
jne
sbb
adc
jp
sub
add
or
adc
push
sbb
cli
js
inc
in
push
add
mov
adc
mov
fildl
fists
mov
cmp
sbbb
in
jmp
and
cmpsl
cld
pop
jae
sbb
inc
lods
or
ja
xchg
or
adc
je
jno
push
std
in
ljmp
sub
cld
out
xchg
hlt
dec
and
cmpsl
jae
arpl
test
cmp
mov
xor
enter
ljmp
sub
gs
nop
sbb
xlat
aaa
xchg
out
int
inc
cmc
cld
enter
jmp
into
in
testl
movsl
les
xchg
add
frstor
pop
xlat
add
xchg
push
mov
sbb
lcall
rorl
sbb
sbb
test
sub
dec
and
push
iret
fsts
xchg
push
inc
jb
dec
sub
daa
dec
xlat
push
in
data16
inc
mov
pop
pop
dec
sub
cmpsb
sbb
mov
mov
adc
push
add
fsubr
inc
sarl
push
dec
mov
movsb
and
add
push
dec
test
lcall
mov
jb
imul
andb
test
jp
mov
mov
sbb
rcl
test
imul
sbb
nop
jmp
les
mov
xchg
fsts
sbb
pop
push
cmp
stos
jmp
inc
mov
mov
int3
sbb
sbb
in
subl
jbe
cmp
rorb
test
mov
or
stos
ja
popa
aaa
test
mov
mov
mov
fdiv
add
mov
push
sub
mov
hlt
aaa
sbb
andl
or
stos
fidivrl
inc
shr
dec
cltd
and
bound
ret
loope
in
nop
mov
addb
lds
add
adc
dec
or
lods
stos
push
cltd
lahf
clc
in
js
vmovupd
add
inc
cmc
movl
adc
enter
fstl
add
fmull
inc
gs
das
push
int3
inc
dec
daa
dec
outsb
adc
sub
jecxz
mov
add
lret
mov
sub
aam
dec
out
mov
and
fstps
test
sbbb
xor
pushf
add
push
cmp
jge
lret
and
arpl
xor
adc
sbb
pop
loop
push
jb
add
and
das
aaa
dec
cmpl
addr16
xchg
jge
aaa
adc
pop
and
ficoms
xchg
pop
adc
pop
popf
inc
sahf
inc
cli
movsb
fistpll
in
loop
inc
stos
jmp
xor
adc
xchg
inc
xchg
and
mov
pop
fs
cmc
push
or
fdivs
mov
xchg
rolb
cmp
xor
int
rcl
movsl
in
adc
mov
arpl
pushf
push
les
pop
rclb
push
sbb
ljmp
mov
xor
les
or
cmp
or
sahf
adcb
push
and
mov
fstl
stos
cmp
rcr
jmp
xor
push
sub
das
test
adc
jno
lods
push
sbb
and
mov
mov
and
fbstp
xor
jmp
inc
sahf
hlt
xor
xchg
sbb
jge
das
gs
test
data16
imull
add
jne
mov
test
mov
lods
mov
repnz
jmp
ss
and
lods
lods
les
sbb
cmp
fsub
inc
outsb
out
xor
or
fiadds
push
out
in
xchg
lods
cmp
sub
aam
dec
popf
in
ljmp
push
fs
push
jmp
dec
repnz
cld
mov
push
jno
add
test
push
out
inc
cmp
out
pusha
mov
enter
ss
and
imul
cwtl
cmc
ljmp
bound
cli
lock
mov
lods
mov
push
xchg
lock
adc
loopne
cmc
aas
loop
push
xchg
or
out
inc
mov
inc
and
jle
push
dec
mov
add
pop
mov
inc
push
cmp
sbb
push
add
je
xor
jmp
push
pop
xor
sub
push
add
xchg
fmul
xlat
pop
sbb
add
leave
push
push
hlt
push
pop
jmp
lods
xchg
lret
in
mov
stos
aas
out
push
insb
push
add
ja
lods
adc
shll
push
push
adc
sub
push
pop
enter
and
dec
push
or
lret
rcll
mov
and
dec
sub
or
fs
push
xor
inc
in
jb
and
rol
lret
inc
xchg
test
popa
mov
fdivl
loop
cmp
or
pusha
and
sbb
into
dec
push
test
lret
inc
adc
roll
cmpsl
add
inc
int3
mov
int3
sub
mov
int
lock
mov
mov
sub
outsb
lret
xchg
enter
push
push
mov
daa
mov
int
or
jp
jne
adc
xlat
push
push
push
push
notl
mov
xor
jecxz
sub
sti
cs
mov
mov
pop
push
roll
inc
push
xor
xor
sub
stos
cmc
mov
xor
stos
mov
and
stos
ljmp
push
or
lock
cld
cmp
mov
mov
jae
out
sbb
enter
cmpsb
enter
ret
cld
dec
xchg
jecxz
dec
outsl
int
pop
repz
lret
in
mov
dec
inc
sbb
mov
lods
push
and
mov
pushf
not
pusha
shlb
jnp
std
popa
loop
push
dec
mov
mov
into
jge
sbbb
and
and
shlb
push
es
xchg
sbb
call
jne
xor
cmpsl
mov
adc
out
movsb
movsb
int
into
ds
xchg
lret
cmpsl
mov
in
jle
jmp
out
movsb
and
inc
mov
or
jl
int3
es
cli
lret
adc
out
inc
pop
mov
adc
roll
inc
adc
loope
push
cld
inc
dec
jmp
xchg
fistl
sbb
sbb
cmp
push
or
xchg
fmuls
inc
lahf
ret
cli
lods
adc
push
and
les
mov
adcb
loope
push
pop
sub
sub
arpl
adc
dec
pop
sub
push
and
dec
push
add
sub
mov
mov
pop
mov
fstl
jmp
into
xchg
xchg
sub
pop
xchg
andl
dec
inc
shlb
add
stos
inc
dec
adc
push
pushf
and
dec
and
adc
push
push
shll
sbb
std
push
xor
add
ret
std
gs
std
mov
mov
push
pop
fistps
sarl
jmp
xchg
bound
and
dec
push
stos
pop
jne,pn
ret
repz
out
test
imul
inc
or
stos
or
std
cmp
stos
das
cltd
jo
out
jecxz
pop
adc
mov
adc
mov
imul
push
lahf
push
shr
insl
cli
hlt
jae
popf
xlat
pusha
add
sub
pop
fdivr
xor
inc
mov
fldcw
pop
fstpl
cmpsl
cmp
jns
sbb
pop
jnp
xchg
popa
xchg
push
or
sahf
inc
push
adc
movsl
lret
and
xor
mov
add
dec
rcr
jmp
sbb
push
adc
lret
mov
ljmp
int3
cli
in
mov
sbb
dec
bnd
dec
mov
scas
or
sbb
or
or
in
dec
dec
aam
xchg
or
dec
dec
mov
or
xchg
ljmp
test
lret
fsts
xchg
aam
addl
push
lea
leave
in
gs
notl
pop
into
jne
cmp
and
mov
mov
cmc
int3
pop
rcr
push
mov
adc
leave
cmpsl
adc
enter
xor
daa
xlat
cmc
add
adc
adc
aas
push
xchg
arpl
mov
mov
push
lret
lock
arpl
inc
and
or
xor
dec
fildll
rcrl
sub
out
arpl
mulb
push
pushf
dec
xchg
and
xlat
and
addr16
cmp
ss
mov
in
add
sub
imul
dec
lods
push
and
xchg
loopne
adc
mov
jno
decb
push
negl
and
cli
sub
lcall
cmpsb
dec
addl
fdecstp
and
inc
leave
push
stos
adcl
jo
int3
or
leave
mov
push
loope
xor
push
pop
lret
jmp
jecxz
mov
arpl
pop
sbb
push
mov
test
push
xor
stos
jnp
andl
repz
push
pusha
into
push
cltd
pop
popf
es
push
sahf
cld
mulb
ja
push
fs
movsl
lods
add
add
leave
enter
cmp
or
adc
sub
test
outsl
mov
push
jns
movl
or
mov
mov
or
mov
jp
cli
mov
shll
mov
leave
out
inc
test
cld
adc
movsl
in
cmpsb
rcr
lock
out
pop
dec
or
mov
pop
gs
xor
dec
sub
dec
outsl
test
push
push
mov
push
ds
or
lea
repnz
adc
or
xchg
in
hlt
test
mov
leave
filds
cmp
pushf
and
or
or
out
mov
addb
adc
shr
jns
xor
sub
add
pop
inc
pusha
mov
inc
mov
scas
shlb
mov
int
jecxz
leave
and
sub
movsl
or
iret
vpsubusb
repnz
add
test
mov
in
jge
add
rorb
push
mov
add
out
pushf
xchg
mov
mov
arpl
and
add
sbb
insb
adc
int3
loop
inc
and
add
enter
ljmp
call
and
or
cmpsl
pusha
jp
xor
or
xor
mov
push
dec
into
repnz
mov
xchg
push
xchg
cmp
sbb
inc
pop
addr16
mov
jp
leave
rorl
add
xchg
dec
in
nop
mov
push
mov
add
dec
testb
add
sbb
int3
mov
dec
out
push
xor
ret
inc
pop
jae
inc
adc
gs
fidivrs
and
jbe
adc
cmp
fldl
repz
stc
daa
movsb
pop
iret
sub
sub
and
arpl
sti
xor
call
cmp
aas
dec
ret
mov
xlat
daa
pusha
hlt
jle
lret
or
cmpsb
ljmp
fcomip
pop
cli
scas
pop
xchg
xchg
ja
add
mov
and
or
xchg
aaa
or
cmpl
mov
repz
divl
xchg
insl
cmp
mov
xchg
mov
push
mov
jnp
jae
xor
aas
xor
cmc
pop
in
push
cmp
popf
test
adc
fsub
loop
xlat
push
xor
loope
cmp
pusha
int
inc
sub
mov
push
add
mov
fdivrl
jo
push
push
lods
in
inc
or
adc
out
xchg
inc
sbb
fwait
cmpsb
popa
ret
or
subb
pusha
fimull
sti
mov
jo
and
xor
repnz
or
out
ss
or
loope
pop
jo
xchg
mov
jg
rolb
nop
and
inc
pop
or
inc
fisubrs
xchg
mov
imul
or
les
out
push
in
hlt
repz
dec
jb
test
lcall
sahf
movl
add
add
push
mov
fnstcw
iret
xlat
popf
sub
lods
dec
adc
and
and
sub
add
fisttpl
aas
adc
icebp
mov
and
push
adc
enter
xchg
bound
scas
push
adc
mov
jnp
arpl
fcomps
push
test
xchg
cmc
jns
dec
sub
flds
adc
imul
out
addr16
fldl
ret
mov
stos
mov
adc
jmp
loope
out
mov
stos
mov
pop
pop
cmpl
and
mov
and
push
imul
adc
cld
cmp
push
jecxz
lds
or
gs
sub
call
add
shl
scas
jb
cli
leave
add
add
fcomps
mov
sub
test
mov
or
dec
inc
add
pushf
popa
rolb
and
sbb
loop
xchg
mov
in
imul
lahf
outsl
and
or
push
loopne
or
loopne
inc
fsub
dec
orb
enter
imul
sbb
out
and
stc
popa
jecxz
idivl
stos
push
addl
iret
call
add
pop
sbb
sti
dec
pusha
into
in
pushf
movsl
sar
into
mov
adc
pushf
cmp
outsb
cmp
insl
pop
mov
xor
loope
or
imulb
stos
lret
xchg
pop
adc
mov
push
cmp
loop
mov
adcl
push
notl
push
leave
push
fs
inc
hlt
cld
mov
sub
mov
and
adc
out
inc
imulb
cmp
pusha
mov
cmp
pop
inc
add
sahf
mov
data16
shll
aad
mov
mov
lret
in
inc
jg
mov
dec
and
pop
stc
aaa
cmp
aam
dec
inc
call
mov
aas
test
mov
jae
xchg
push
push
lcall
fimuls
mov
cli
ror
cltd
push
pop
jge
sub
out
push
jp
mov
push
cmc
lock
jle
or
movb
push
jge
loop
scas
test
pop
or
inc
int
push
pop
sti
fwait
aas
xchg
arpl
xchg
in
movsl
mov
xchg
test
push
add
inc
push
rcll
adc
adc
movl
pop
and
jge
fsubrs
adc
inc
dec
add
push
pop
stos
pop
sbb
lret
hlt
or
add
daa
shlb
call
and
mov
sub
adc
into
stos
mov
xor
enter
xor
adc
push
pop
dec
cmp
lea
js
sub
sub
stos
insb
pop
push
cmp
enter
pop
std
and
arpl
test
jmp
repnz
mov
bound
cmpsb
inc
mov
inc
fdivrs
cli
adc
insl
pop
sbbb
testb
es
inc
imul
mov
call
clc
pusha
and
and
xor
cmp
jl
cmp
fcoms
and
pop
imulb
inc
stos
jecxz
imul
inc
pop
mov
mov
or
push
aam
repnz
lods
ljmp
inc
mov
cs
mov
mov
pop
push
sub
test
repz
and
sub
divl
sahf
fcoms
sub
cmp
cmp
mov
xchg
xchg
sbb
fistpl
push
les
in
inc
loopne
std
dec
or
ljmp
dec
dec
adc
fcmovnu
ds
pop
lcall
and
push
addb
movsb
inc
fs
push
dec
dec
insb
sub
enter
test
mov
sub
jmp
fs
in
sbb
inc
dec
out
aam
aas
sbb
arpl
movsl
xor
xrelease
cs
add
pop
aam
mov
xchg
add
push
and
int3
bound
ret
pop
adc
dec
inc
mov
inc
and
mov
dec
shlb
fisttpl
stos
mov
pop
andl
fadds
ss
rorb
rclb
inc
je
bswap
sbb
sbb
fwait
inc
mov
mov
dec
rcrb
xchg
inc
push
dec
fs
mov
jns
out
nop
fnsave
pop
push
rolb
add
push
repz
and
xchg
and
xor
push
and
xlat
test
loop
lret
push
jae
lods
out
dec
aas
or
imul
popa
mov
int
adc
loope
dec
fstl
mov
ret
push
int
cmp
aam
adc
leave
add
pop
mov
or
push
stos
and
shll
inc
je
jo
in
mov
pop
stc
mov
dec
pusha
sbb
push
imul
popw
orl
cmpsl
add
inc
jne
adc
addr16
sahf
imul
and
repz
inc
insl
cmpsl
lret
mov
cmp
mov
mov
aam
cmp
lret
jnp
jle
push
sbb
sahf
hlt
fwait
popa
jnp
les
daa
sbb
lcall
movsl
jge
sbb
xchg
fs
fdivp
cmp
sbb
push
sub
sbb
pop
cmp
cmp
jno,pt
add
xor
mov
mov
add
sub
jg
imul
or
mov
hlt
lret
adc
pop
inc
cmp
and
mov
cmp
inc
add
loopne
cmp
xchg
pop
pop
xor
or
fldenv
mov
jp
out
aas
pop
flds
mov
jge
int3
aas
test
inc
mov
jle
sahf
jge
test
mov
loop
lock
jp
fcompp
push
or
sub
daa
pop
jle
sbb
pop
clc
fs
xor
sub
cmpsb
mov
push
and
outsl
movsb
into
cmp
sub
fimuls
adc
std
cmp
jle
sbb
dec
pop
call
out
pop
sbb
sub
cmp
fsts
and
cmp
movsb
cld
je
pusha
dec
dec
dec
push
dec
dec
jns
pop
add
into
and
or
xor
xchg
xor
mov
shll
out
les
jbe
movsl
sbb
and
cmp
add
das
daa
rcrb
mov
roll
push
inc
ret
imul
jne
psubq
cmp
xor
call
xor
leave
dec
fidivrl
mov
sarb
cs
in
adc
popf
inc
movsl
xor
dec
mov
cmp
inc
aas
jmp
sbb
push
cld
mov
sar
cs
xor
cmp
jno
movsb
fnstenv
pop
pushf
xor
daa
stos
adc
dec
ljmp
push
icebp
jle
ffree
pop
inc
sub
ljmp
jle
out
testl
sub
nop
add
mov
cmp
adc
jp
sub
addl
ror
mov
xchg
sbb
dec
leave
inc
mov
out
in
or
dec
dec
sbb
in
and
jnp
xchg
adc
bound
cld
loop
in
mov
cmp
push
jne
js
sti
push
add
inc
loopne
js
aad
into
inc
dec
bound
sbb
pusha
lret
aaa
push
lods
mov
adc
dec
sbb
adc
or
mov
push
adc
outsb
xchg
sbb
fs
lcall
cmp
mov
pop
push
pop
dec
into
push
mov
addr16
ret
push
mov
mov
mov
in
aaa
adc
sbb
push
xchg
les
or
add
ret
mov
stos
add
sub
lea
outsl
jmp
jno
cs
push
stos
fs
lods
jle
push
dec
out
sub
or
xor
inc
in
pop
imul
bound
mov
stos
mov
adc
int
sub
add
test
jbe
xor
mov
pop
rcll
lret
push
outsl
and
adc
mov
dec
sbb
mov
rolb
outsb
xor
outsl
ja
xchg
pop
inc
add
jb
cmpsl
stos
arpl
fsub
dec
ljmp
bound
addr16
in
push
push
inc
insl
daa
testl
mov
pop
out
fs
adc
mov
ret
mov
stos
mov
iret
and
add
jno
in
pop
mov
movsb
xchg
mov
and
es
dec
sub
mov
test
push
xchg
ret
dec
or
jne
sbb
add
fs
out
jle
adc
xor
jb
mov
xchg
lods
das
mov
ja
inc
mov
add
mov
adc
inc
test
inc
or
inc
inc
cmp
cmp
fiadds
cmp
pop
adc
xchg
fdivrl
int
and
adc
and
sub
xor
xlat
dec
sub
xchg
cmc
lahf
xchg
push
mov
rorb
pop
mov
mov
nop
pop
xor
and
std
and
push
inc
lret
xor
pusha
adc
push
in
test
cmc
cs
nop
sub
shl
push
test
fbstp
ljmp
dec
cli
pop
mov
fdivrp
mov
bound
mov
pop
pop
add
pop
xor
sar
xor
aam
test
lret
adc
mov
jp
jmp
xchg
cmp
test
push
sbb
cmp
addl
add
add
push
xor
and
jae
jne
outsb
xor
push
mov
out
bound
out
xchg
test
cli
adc
push
pop
push
cmpsb
hlt
out
sbb
add
imul
mov
mov
jnp
stos
pop
fnsave
dec
repz
cmp
mov
repz
dec
rolb
adc
dec
inc
inc
adc
fistps
cli
out
call
out
test
addb
add
mov
dec
or
addb
movl
rcl
xchg
insl
mov
or
or
mov
rol
xlat
sub
addb
stos
fsubl
pop
sub
stc
lret
dec
lods
xor
in
push
sub
ja
mov
push
sub
enter
sbb
mov
sarl
sub
mov
cld
inc
loop
cmp
in
xchg
or
inc
and
jecxz
sbb
dec
call
mov
push
push
sbb
push
lods
pop
mov
or
icebp
shr
cmp
lods
nop
setns
ds
testb
or
lods
aad
pop
mov
mov
and
or
mov
pop
cli
xchg
inc
push
sahf
cmp
inc
cmp
push
xor
loop
jo
lret
xor
negb
push
dec
inc
fnstsw
ror
hlt
stos
cli
push
rcll
jg
sub
jp
inc
stc
pop
scas
mov
jge
adc
sub
mov
jge
push
lret
ret
outsl
scas
dec
cli
or
sub
daa
popa
mov
jae
cmp
adc
jns
cmpsb
addr16
test
imul
add
or
leave
adc
and
lret
sbb
and
push
jl
mov
or
jo
and
pusha
sub
daa
inc
sarl
testl
and
in
adc
inc
mov
cmpsb
jns
sti
leave
popa
enter
adc
loope
les
push
fstl
mov
push
inc
mov
leave
ror
jmp
xor
out
adc
or
push
xchg
addb
lods
or
shl
push
jecxz
xchg
xchg
inc
or
fdivrl
test
pushf
leave
gs
jo
stos
cmp
cli
mov
cld
push
in
fisubl
out
add
xorl
movsb
test
or
pop
scas
jne
inc
sub
pop
popf
rolb
aad
xchg
test
xor
cmpsl
stos
imul
lods
lods
pushf
sahf
in
loop
sahf
jge
xchg
sbb
rol
dec
jbe
or
shr
fwait
pusha
sub
jno
sub
jbe
test
insb
gs
add
xchg
xchg
lods
push
sbb
gs
mov
outsb
cmp
sbb
stc
orl
dec
add
sbb
xchg
push
cmpsl
mov
jg
xchg
addr16
rcl
iret
add
xchg
gs
jno
ds
mov
clc
jge
mov
cmp
mov
inc
jno
dec
mov
dec
clc
pop
rcl
ljmp
xor
fisubrl
fnstcw
aad
sub
and
jg
sbb
addr16
mov
pop
std
pop
sub
shlb
scas
ljmp
lea
sbb
xor
inc
xor
and
ror
aas
pop
cmp
insl
aaa
gs
adc
jmp
mulb
mov
add
imul
test
outsb
xchg
popf
mov
addb
dec
into
adc
dec
adc
inc
loop
rcrb
sarl
add
pop
std
mov
adc
push
test
inc
sub
adc
fs
sbb
sbb
test
rclb
int
sub
mov
jns
sbb
fidivs
popa
push
push
ljmp
inc
lret
mov
adc
jne
bound
aam
sbb
aam
cmp
push
insl
adc
xchg
loop
ror
sbb
dec
and
sbbb
std
or
insb
adc
pop
xchg
mov
adc
push
jno
imul
cmp
imul
loope
adc
push
mov
sbb
sub
movsb
jle
pop
gs
aaa
jne
repnz
out
add
sbb
push
push
aaa
xchg
jo
push
mov
mov
push
shrl
xchg
xor
scas
add
sub
into
lcall
cmp
xchg
adc
scas
sbb
jle
sub
adc
out
push
adc
pop
shr
dec
fsts
xlat
or
jo
xchg
push
mov
xchg
movswl
bound
imul
cmpl
add
jmp
jnp
xor
loop
hlt
cmp
lock
dec
in
sub
es
jnp
inc
gs
loope
std
jle
andl
sbb
shlb
sbbl
or
es
xor
inc
mov
mov
inc
inc
cmpsl
inc
adc
mov
lret
xchg
int
cmpb
lcall
mov
test
xchg
lds
fnstcw
dec
test
fmulp
sbbl
loopne
mov
in
cmp
sbb
ja
iret
jne
or
sbb
xchg
cmp
enter
xchg
mov
dec
mov
adc
out
arpl
mov
add
cli
push
rorl
inc
inc
insl
dec
or
inc
stos
movsb
loope
jmp
mov
mov
outsb
adc
in
sub
jmp
loop
jmp
pusha
clc
test
test
imul
pop
xchg
ret
js
call
adc
inc
shr
mov
mov
in
xchg
and
inc
adc
xchg
add
mov
cmpsl
dec
cwtl
mov
and
xor
mov
dec
push
xor
add
jns
pop
int
mov
or
stc
repnz
cs
lret
scas
sub
shrl
adc
or
add
cld
inc
jns
sti
or
negb
stos
cmp
aam
aas
and
inc
and
push
fisubrs
sbbl
pop
push
aaa
in
in
push
out
out
or
lret
ror
pop
cli
pop
mov
and
add
xchg
roll
cs
sbb
outsl
mov
jo
je
inc
in
inc
sbb
jne
push
sbb
dec
adc
mov
cmp
jns
inc
dec
push
mov
fistpl
leave
cwtl
lock
in
cmpb
sub
dec
xor
adcb
stos
ds
leave
test
push
in
and
push
mov
adc
out
add
sbb
popf
mov
push
imul
inc
in
inc
inc
data16
and
daa
mov
in
sahf
clc
scas
or
sti
xor
ret
jge
shlb
and
es
pop
mov
cld
hlt
call
or
add
mov
shl
in
les
ljmp
lahf
cmp
pop
jb
push
bound
incl
add
add
loopne
jecxz
call
cld
jmp
cs
xchg
imul
push
push
shrb
js
popl
mov
sti
add
outsb
lret
pushf
cmpb
inc
mov
das
lods
into
call
cld
dec
mov
xchg
scas
xchg
pop
cmp
or
nop
lods
push
nop
cmp
out
clc
xor
or
fsubrl
cmpsl
cld
cld
push
int3
icebp
sub
lds
adc
jl
xor
sbb
mov
sub
push
shrl
mov
sub
fldl
aad
push
lds
mov
push
jecxz
push
xchg
xchg
xor
mov
mov
inc
push
stos
mov
adc
pop
dec
push
and
cld
in
or
sahf
lods
test
and
sub
clc
fiaddl
adc
call
jnp
xor
push
mov
xchg
and
cwtl
shlb
push
sti
mov
idivl
add
xchg
lds
adc
xor
mov
sub
cwtl
xchg
popf
inc
xchg
mov
sbb
add
in
xor
repnz
mov
lret
gs
inc
pop
stos
sbb
push
mov
xlat
call
push
clc
in
sub
iret
sub
xchg
adc
enter
sbb
or
inc
inc
leave
mov
pop
ret
cmpl
mov
inc
in
cmp
roll
xor
loopne
xor
jb
push
adc
mov
jp
jl
fidivrs
mov
mul
xorb
jg
lods
push
push
and
ss
aaa
jnp
mov
repnz
mov
test
push
ja
sar
aas
les
mov
out
icebp
sbb
adc
push
orl
mov
nop
sub
sti
hlt
insb
notb
mov
outsb
lock
mov
in
fisubrl
sub
dec
jle
or
sbb
add
repz
lock
jecxz
dec
and
stos
mov
add
add
loopne
aad
adc
mov
pop
leavew
jne
pop
cmp
and
roll
loope
jno
int3
inc
mov
jae
cmp
fs
push
and
in
adc
flds
fimull
pop
lahf
ret
add
popf
test
cmc
sti
out
xchg
xor
inc
in
jmp
push
les
dec
ror
and
in
inc
push
mov
sub
cwtl
dec
fwait
sbb
adc
push
test
sbb
mov
sbb
xchg
and
mov
inc
fimuls
inc
jecxz
and
testb
xor
popf
push
mov
testl
aas
shrd
data16
or
loopne
lds
js
sarl
mov
sub
dec
mov
mov
sub
call
daa
push
xchg
fwait
or
cmc
cmpsb
adc
cmp
mov
idivb
mov
sub
out
mov
add
out
rcr
push
stos
push
dec
gs
mov
lret
ja
arpl
insb
pop
sbb
sub
push
cli
popa
leave
ds
into
out
hlt
shll
test
dec
xor
cltd
das
mov
xor
xchg
mov
ss
sbb
xchg
arpl
scas
addr16
mov
jbe
mov
jl
xor
aam
pop
jmp
push
adc
inc
in
cld
mov
outsl
xor
cmp
jl
cmp
xchg
les
in
adc
jb
enter
or
sbb
jecxz
mov
lods
popa
movsb
loopne
loop
dec
push
dec
movsb
adc
lahf
push
push
daa
pop
sbb
adc
pusha
sbb
nop
sbb
push
adc
or
push
clc
mov
ljmp
je
inc
roll
mov
sbb
push
sbb
xchg
add
lock
inc
sbbl
cli
data16
sti
xlat
stc
pushf
xchg
push
add
pop
js
outsl
and
sahf
mov
sub
lret
insl
sbbl
into
cmc
fnstenv
outsb
das
jmp
jl
addr16
lock
pop
pop
cmp
stos
xor
stos
jae
or
rcr
cmpsl
mov
into
adc
mov
mov
xor
cmp
dec
pop
enter
dec
lret
dec
push
lea
sbb
addr16
xchg
lret
xchg
rcr
dec
subl
sub
lods
mov
lret
dec
mov
lods
xchg
xchg
rcrl
test
pop
rcl
add
push
sbb
pop
imul
fbld
sub
mov
jle
insl
inc
orb
mov
test
mov
mov
pop
sub
das
dec
scas
push
rorb
lahf
aaa
adc
in
jecxz,pn
int3
cwtl
test
movsl
push
in
in
push
aaa
mov
add
jbe
pop
aaa
fisttpl
push
xorl
pop
inc
pop
mov
cli
xchg
and
sub
pop
es
mov
and
sbb
push
jne
repz
ja
dec
push
add
lcall
mov
out
adc
jg
sbb
repnz
xor
and
mov
loopne
xor
cmp
lahf
adc
jmp
jne
ja
xor
bound
inc
cmp
ja
mov
pop
testl
loopne
adc
xchg
mov
sbb
xor
push
xchg
dec
xchg
and
insl
iret
and
adc
imul
xchg
jno
es
sub
add
xchg
xchg
mov
mulb
mov
and
leave
pop
adc
into
and
pop
int3
ficoml
jne
push
and
pop
adc
and
lret
push
push
lcall
xchg
jmp
les
divl
out
adc
push
test
push
test
or
inc
cmc
dec
xchg
test
sbb
in
jmpw
and
adc
mov
dec
or
push
pushf
aam
or
nop
repz
nop
mov
sub
cmpsb
mov
inc
imul
pop
shrb
aam
or
xchg
push
stos
mov
push
popf
sbb
xor
out
and
jb
outsl
and
mov
dec
xor
hlt
adc
or
dec
pusha
jae
adc
les
and
push
popa
mov
pop
push
or
pop
mov
xchg
insl
or
ja
mov
or
push
mov
inc
sbb
fs
loope
repnz
and
push
in
jnp
xor
push
leave
in
lret
inc
xchg
jmp
les
cmp
mov
add
and
into
and
rolb
data16
out
adc
xor
data16
adc
into
adc
cmp
leave
xor
lret
dec
xchg
ja
sbb
adc
ret
dec
add
mov
hlt
inc
push
and
inc
mov
inc
adc
dec
in
xchg
divb
mov
push
and
adc
dec
aad
test
mov
mov
mov
inc
push
outsb
or
mov
push
inc
cmpsb
in
pusha
xor
dec
in
xchg
inc
je
mov
inc
sub
rorl
mov
sub
inc
mov
orl
pop
int3
aam
or
inc
inc
jbe
push
adcb
xchg
push
and
push
xchg
push
rorl
and
push
add
or
testb
mov
and
add
sub
push
in
xchg
push
jno
push
aam
movsb
xchg
push
enter
xchg
xchg
inc
enter
sub
add
es
push
in
fwait
push
xorl
sbb
jl
push
shrl
pop
adc
gs
sbb
dec
aam
out
leave
les
imul
les
out
adc
sbb
xchg
iret
popa
add
aad
divb
push
and
adc
leave
mov
lcall
in
or
nop
push
repz
movsb
or
nop
lret
sub
xchg
xor
aad
mov
fdivl
out
adc
fisubs
test
xor
shll
inc
call
faddl
popf
stos
mov
in
inc
mov
adcl
xchg
and
imul
dec
sub
push
add
les
and
cmpsl
pop
mov
inc
or
xchg
ja
sbb
adc
into
jne
add
xor
add
es
mov
push
into
and
hlt
int
inc
dec
aam
cmpsb
jmp
aam
scas
test
adc
je
mov
rorb
test
or
xor
stc
in
data16
adc
mov
jbe
adc
pop
loope
mov
adc
arpl
or
lret
out
in
ret
fs
jo
push
and
adc
dec
aad
ror
pop
fimuls
mov
ds
roll
ja
dec
movsb
mov
stos
add
push
mov
cltd
iret
sub
jp
inc
bnd
mov
lret
push
push
lret
mov
dec
push
inc
loopne
push
dec
das
je
enter
in
out
xchg
push
clc
pop
popf
mov
std
push
add
lahf
data16
sub
icebp
loop
testb
adc
adc
scas
add
xor
dec
pop
imul
arpl
fildll
push
push
fbld
jno
sbb
jo
mov
cs
cmp
xchg
es
cmp
pop
pop
pop
stos
jo
pusha
xchg
shll
imul
sub
inc
and
mov
xchg
cmp
shll
mov
or
sub
lcall
movsl
jmp
movsl
lods
dec
lods
dec
aas
push
adc
or
sub
or
push
neg
cmp
and
ror
or
inc
cltd
cmp
dec
rcll
mov
sbb
sbbl
ljmp
jmp
popa
shlb
adc
out
adc
in
mov
jle
inc
add
push
in
cld
and
sbb
pop
rclb
jo
fists
sbb
test
inc
stos
pop
jle
pop
js
add
pop
pop
sbb
addb
adc
cmp
sub
xlat
pop
push
push
fdivl
and
and
xor
gs
pop
cmpsb
dec
xor
fnstsw
sbb
sbb
stc
sbb
test
aam
out
fdivl
outsl
scas
repz
and
pop
inc
jle
cwtl
jmp
dec
lea
xor
inc
ljmp
movsb
add
inc
add
dec
cld
jmp
mov
push
sahf
loope
dec
jb
sarl
aad
rorb
and
stc
loop
adc
xorl
stc
xor
pop
cs
stc
movb
sub
mov
cmp
jb
lret
inc
sbb
lods
xchg
int
mov
arpl
stc
daa
fiadds
and
inc
leave
into
lret
pop
je
cmc
mov
fstpt
test
mov
push
xor
das
jns
mov
addr16
stos
mov
loope
jmp
ljmp
aam
mov
aas
sub
pop
pop
jl
std
xor
xor
sbb
imul
subl
jg
imul
rol
xchg
jge,pt
cmpsb
cmp
fisttps
test
out
stos
xor
addr16
cmp
jns
inc
sbb
pushf
adc
jge
and
sbb
mov
addl
pop
arpl
les
jbe
popa
adc
jnp
shll
ja
mov
mov
and
mov
rorl
mov
mov
cmpsl
sbb
not
clc
adc
dec
pop
inc
std
mov
fldcw
adc
mov
loope
test
xchg
dec
fxch
es
cs
in
or
div
imul
fnstsw
pop
sub
adc
mov
pop
sarl
ss
sub
or
sub
test
adc
xor
xor
enter
test
stos
jecxz
xchg
push
jo
push
notl
sbb
push
dec
inc
pop
in
adc
and
out
pusha
cmp
xlat
add
loope
pop
dec
rolb
jmp
fstpt
aad
cmp
fs
jo
sbb
pop
aam
in
pusha
xchg
jo
jmp
shl
push
ja
scas
cld
and
adc
push
push
test
es
and
xchg
push
pusha
and
xor
mov
cli
jb
cmp
int
or
lods
jae
leave
movsb
je
xchg
call
daa
mov
testl
insb
and
and
insl
push
mov
dec
lods
data16
jno
xchg
and
pop
inc
adc
dec
outsb
sub
rclb
mov
push
jge
aad
sbb
mov
aad
xchg
loop
bswap
ret
movsl
and
xor
push
and
sbb
clc
and
int3
enter
push
inc
sbb
inc
test
mov
adcb
or
rolb
add
and
and
and
xor
xor
jns
mov
adc
sub
or
test
mov
lods
or
sub
roll
insb
test
push
jne
lret
or
ret
roll
mov
or
pop
or
inc
nop
pop
lock
into
iret
xchg
test
pusha
xlat
xor
push
sar
push
cmpsb
clc
jnp
das
adc
push
mov
orb
sub
adc
iret
mov
sub
mov
jge
jg
repz
clc
cmpsl
fildll
and
loop
mov
mov
fdivr
push
das
mov
dec
int3
cmpsb
data16
adc
out
adc
loop
lds
inc
or
lret
test
ja
fldcw
cwtl
mov
mov
iret
iret
cwtl
call
stos
push
xor
adc
xor
rsm
in
push
movsb
adc
dec
int
lret
push
fsts
sbb
add
push
out
xchg
fadds
lcall
pop
cmp
mov
std
js
sbb
sbb
faddl
adc
je
icebp
push
pop
cmc
or
mov
shll
out
aam
push
mov
cmpl
and
lcall
sub
adc
jo
popf
dec
push
into
imul
mov
inc
mov
pushf
hlt
xor
inc
mov
jge
add
inc
loop
cmp
adc
mov
ds
jmp
mov
pop
xlat
clc
pop
or
sti
or
xchg
push
je
or
dec
mov
sub
add
and
xor
arpl
mov
sbb
mov
movsl
jae
aaa
lods
cs
sub
xor
cld
pop
add
sub
in
dec
sub
data16
sbb
push
test
adc
xorb
add
jae
mov
int3
xor
xor
mov
add
pop
push
add
jns
xor
ljmp
clc
in
mov
push
add
inc
int
dec
mov
daa
je
jp
pop
test
in
sub
das
popa
cmp
loope
outsl
add
lret
cs
cmp
outsl
jl
mov
andb
cmp
pop
loope
lahf
je
jl
ja
xor
inc
out
fcoml
jg
xchg
arpl
js
daa
insb
and
sub
aad
loopne
xor
je
push
ss
push
pusha
iret
jae
mov
test
insl
cmp
push
out
pop
push
aad
push
xchg
or
push
pop
mov
je
lods
xorb
xor
pop
push
or
insb
shll
pop
inc
loop
dec
inc
cmpsl
pop
and
popf
call
or
sbb
test
mov
into
mov
int
or
flds
fcmovu
mov
fstp
popf
fchs
jecxz
leave
in
and
mov
arpl
sub
imul
test
ss
xor
in
push
scas
add
cmpl
inc
add
xor
ja
add
add
pop
sub
xor
sti
fimull
es
jbe
iret
sbb
popfw
imul
push
cmp
test
or
jge
pusha
lods
mov
inc
mov
insb
out
repnz
and
push
in
mov
cmp
adc
and
or
inc
xchg
fimull
ljmp
and
and
dec
cli
cli
in
inc
dec
aad
sbb
and
or
xlat
ss
das
cld
xor
sbb
int3
subb
cmpsl
jo
fcmovne
in
push
loop
arpl
mov
insl
jno
daa
fstl
and
je
push
ret
cmc
andb
fcompl
movb
mulb
inc
xchg
pop
std
icebp
adc
pop
pop
pop
imul
loop
xor
adc
data16
mov
popf
and
or
inc
cmpsb
cli
dec
enter
in
pop
mov
add
rcll
mov
pop
or
mov
inc
ror
call
dec
jecxz
rolb
lds
xchg
aad
je
mov
cmp
test
and
out
aaa
mov
jmp
mov
movsl
adc
ret
inc
dec
adc
cmp
push
or
hlt
xor
mov
cmpsb
mov
fisubrs
and
ficoms
sub
dec
dec
test
sub
mov
or
cmp
push
jo
dec
andl
mov
push
sub
gs
mov
call
mov
dec
jno
cmpsb
iret
lods
pop
rol
mov
imul
and
xor
or
outsb
mov
inc
push
push
leave
adc
nop
push
push
mov
cmp
out
ljmp
and
mov
and
pusha
js
xchg
mov
nop
or
inc
loopne
aad
fisttpll
call
dec
add
imul
in
cld
jo
xchg
inc
push
roll
add
sub
push
mov
addb
shr
xor
in
aaa
sbb
popf
pop
fisttpll
mov
jp
inc
and
addb
call
pop
bound
addl
decb
or
dec
lock
inc
flds
stos
inc
inc
adc
rcrl
mov
or
jmp
aam
push
arpl
sub
pop
cmp
jbe
xchg
add
cli
or
icebp
test
push
stos
add
xor
cmpb
fwait
mov
into
add
inc
xchg
push
roll
iret
mov
sti
inc
mov
divps
xor
push
xor
add
aad
cmp
sar
push
mov
sub
fbstp
loopne
mov
push
push
inc
add
push
xor
cmp
adc
or
xchg
sub
xor
jmp
pop
jne
xor
jns
and
cmp
dec
scas
xchg
shr
and
inc
jne
add
lcall
ficompl
int
inc
dec
out
popa
test
loope
cmp
dec
fstps
inc
movswl
ret
inc
inc
ret
ds
push
pop
ror
cmp
testl
in
ret
or
mov
jb
adc
mov
inc
jbe
popa
lcall
add
ret
inc
icebp
stos
rorb
addb
ljmp
inc
ds
pop
out
stos
mov
push
testb
mov
push
ss
xor
data16
dec
int
mov
xchg
test
ret
adc
and
mov
cld
mov
test
adc
mov
faddl
sbb
sbb
and
ret
jecxz
rcrb
fidivrl
jbe
test
inc
adc
cmp
jns
cmc
push
mov
movsl
shl
loope
xchg
stos
fidivl
pop
push
jmp
into
pop
out
add
loope
pop
in
pusha
test
or
inc
iret
testb
inc
pop
inc
loope
loopne
mov
push
xchg
jb
mov
push
xor
push
lock
push
lea
orl
jo
data16
pop
dec
lret
ss
loopne
sbb
and
xlat
testl
lock
xchg
aas
pusha
or
adc
test
push
and
or
sarl
inc
outsb
scas
inc
push
mov
and
adc
icebp
loop
je
lock
fs
jb
push
ljmp
push
jmp
inc
push
sub
into
dec
pop
addl
mov
pop
pop
lea
test
sub
add
adc
push
shrl
in
mov
xor
adc
sub
jo
shlb
or
push
mov
dec
mov
adcb
push
inc
pushf
push
push
pop
cld
test
aaa
std
push
mov
push
rolb
inc
cmp
or
add
test
sub
inc
pop
ss
push
mov
sahf
arpl
cmp
js
sub
pop
ret
and
inc
jb
sub
and
xchg
aam
les
arpl
mov
cmp
dec
movl
rcl
sbb
inc
pop
lock
loop
add
adcl
ficoml
in
icebp
repnz
add
bound
xchg
push
inc
into
inc
cmp
push
inc
sub
inc
sar
icebp
mov
ret
sub
lds
jecxz
dec
mov
gs
lret
xor
movsl
lret
lods
loopne
pushf
inc
into
mov
sub
cld
ret
inc
bswap
sbb
or
mov
mov
clc
test
adc
jecxz
fldl
or
ds
pop
jb
icebp
add
and
dec
sbbl
cmpl
ret
or
inc
xchg
and
dec
pop
call
mov
aad
addr16
jp
repz
scas
inc
jbe
xor
push
sbb
movsb
adc
in
lds
adc
test
jae
mov
addl
add
jbe
jle
in
cmp
cltd
add
mov
lahf
pop
push
push
pop
pop
loope
mov
sti
cmp
dec
sbb
sub
cmc
xchg
inc
loope
shlb
les
std
out
cmp
pop
test
add
adc
adcb
lcall
es
dec
inc
addr16
add
xchg
jp
sbb
dec
adc
cmpsl
shl
push
cmc
dec
jecxz,pt
popa
ret
repnz
lahf
push
stos
inc
add
ljmp
sarl
add
pop
lcall
bound
adc
mov
push
icebp
add
or
addr16
xor
add
leave
adc
subl
add
push
push
rorb
loop
add
inc
stc
adc
xor
sbb
nop
push
xchg
sub
cli
or
outsb
cmp
xchg
in
push
daa
pop
loopne
dec
outsb
mov
mov
clc
dec
aaa
jge
sub
push
lock
arpl
and
test
add
xchg
and
cmp
into
cltd
insl
pop
inc
test
and
in
orl
mov
int3
repz
or
lahf
pop
je
pop
dec
and
bound
xor
xchg
lret
sbb
jbe
rorb
dec
ljmp
mov
inc
xchg
popf
pop
inc
adc
ror
ret
cs
jl
mov
dec
cld
mov
inc
inc
pop
enter
testb
mov
sub
xor
js
push
or
pop
cmp
xor
lds
mov
faddl
ret
adc
mov
or
and
mov
pop
jp
push
inc
nop
or
sbb
mov
mov
subb
push
inc
sub
shll
lds
mov
add
pop
mov
inc
in
fscale
and
cmp
inc
movsb
scas
xchg
jg
sub
test
lret
xchg
aad
sbb
mov
pop
xchg
pop
mov
mov
and
push
data16
or
dec
add
xchg
push
and
dec
mov
or
cmp
shll
inc
fs
loope
and
loope
or
push
lcall
add
and
push
push
rolb
pop
push
cld
and
sti
aaa
add
sti
cmp
aad
inc
sbb
loopne
push
and
mov
mov
pusha
int
inc
inc
cltd
rcll
andl
shlb
mov
flds
sbb
fsts
push
rol
sub
sub
pop
enter
les
mov
sub
push
lahf
add
fmuls
jp
mov
mov
push
xor
push
pop
out
pop
dec
adc
push
add
mov
mov
aam
lock
push
mov
mov
lds
xchg
pop
add
mov
jo
push
loop
pushf
les
inc
sbb
inc
or
cltd
shll
pop
lahf
ja
pop
add
addb
sub
mov
pop
lret
mov
jp
dec
xor
add
pop
leave
cli
adc
jbe
int3
sub
shll
popa
sbb
lea
push
sbb
aaa
xchg
add
cmp
add
adc
leave
sub
fstl
daa
loopne
cmp
xchg
or
xchg
push
repz
mov
data16
ret
rol
pop
adc
dec
or
mov
xor
dec
int
pop
cmpsb
add
add
xchg
inc
push
mov
sbb
sub
mov
sub
jo
xchg
ss
mov
ficoml
arpl
into
inc
lds
inc
arpl
insl
adc
add
sub
adc
push
jb
popf
loopne
test
xor
xchg
pop
or
xor
rcrb
ret
jb
xor
add
pop
inc
rclb
push
adc
add
or
add
sbb
fs
nop
mov
adc
arpl
aad
mov
sbb
pusha
test
outsb
movl
inc
test
add
xchg
dec
pop
sbb
sahf
dec
int3
mov
sbb
jo
shr
dec
in
ret
inc
test
add
sub
add
je
bound
and
pushf
or
loope
bound
push
bound
pop
pusha
int3
or
add
add
rolb
sahf
daa
bound
jne
adc
les
mov
mov
aaa
or
pusha
sub
mov
push
lahf
xchg
mov
flds
xchg
mov
or
out
lcall
xchg
jb
sbb
dec
popf
je
shlb
jge
inc
stos
push
adc
lret
push
push
popf
mov
adc
addr16
add
xor
inc
les
mov
mov
nop
mov
loope
mov
or
das
mov
push
call
add
jle
out
bound
mov
jb
addl
jb
pop
mov
cmpsl
popf
adc
jmp
cwtl
testb
iret
mov
mov
call
daa
push
cmpl
add
adc
add
lcall
xchg
inc
aad
add
int
or
ljmp
mov
inc
enter
add
fistps
mov
add
xlat
inc
xchg
call
mov
add
in
and
mov
int
movsl
ret
ja
or
push
nop
fst
mov
jmp
dec
lds
adc
sub
in
out
pop
rol
subl
inc
add
cli
inc
out
inc
push
jmp
sub
sbb
sub
jl
dec
add
xchg
out
std
call
pop
les
jnp
mov
add
lds
idivl
sbb
and
dec
mov
pusha
xchg
mov
popa
roll
lret
inc
jmp
test
movsb
and
fisubs
xor
outsl
add
xchg
and
call
dec
jae
decb
xor
lret
xchg
mov
xor
dec
mov
inc
sbb
inc
ret
mov
cmp
repz
adc
in
fsubs
mov
stos
or
xor
and
jbe
push
gs
cwtl
pop
mov
int3
fdivl
dec
inc
add
int
and
shrl
inc
xor
xor
inc
sbb
sbb
rolb
mov
cld
jo
mov
and
dec
clc
add
stos
jl,pt
jae
push
and
stos
dec
inc
pop
pop
stos
jo
lret
push
orl
ret
test
adc
int3
test
mov
loop
mov
shlb
sarb
sbb
mov
mov
pop
mov
mov
push
inc
push
pop
loope
pop
cmpsb
inc
test
bound
sub
mov
jns
add
adcb
negl
cmp
add
sbb
inc
mov
add
pop
push
add
xor
mov
and
inc
mov
sbb
hlt
mov
in
addb
add
mov
mov
leave
dec
pop
fiaddl
cmp
sarl
leave
insb
sub
adc
push
cmp
add
jg
xor
incb
repz
dec
std
imul
mov
and
sbb
bound
or
inc
pop
sub
inc
xchg
mov
inc
test
mov
add
push
adc
add
inc
lea
inc
movsb
xor
les
inc
pop
xor
mov
flds
int3
mov
addl
add
aam
add
add
and
xchg
dec
roll
dec
dec
int3
add
aam
and
jp
mov
push
cmc
mov
or
incl
popl
dec
inc
aaa
int3
and
ljmp
cmp
cmpsl
adc
fsubl
cld
sbb
and
xchg
sbb
sbb
hlt
bound
repz
and
insb
xor
inc
jb
cmovb
and
addb
adc
filds
lret
xchg
fsub
xor
shlb
cmpsl
mov
mov
cmpb
cmc
or
mov
test
cld
mov
mov
rolb
ja
xchg
add
jns
add
ret
popf
inc
xchg
push
push
or
adc
leave
mov
and
std
pushf
add
or
lods
add
popf
mov
pop
shll
mov
test
ljmp
fmuls
push
mov
jge
inc
loope
add
adc
paddw
push
or
or
add
add
repz
inc
addl
fnstenv
mov
gs
push
jb
lret
or
push
aaa
filds
pop
rorl
xor
mov
pop
pop
inc
inc
or
sti
popa
ret
dec
add
shll
daa
and
jbe
xorb
jo
sbb
inc
imul
mov
ja
or
push
gs
addl
movsl
ret
fadd
ljmp
sbb
adc
or
mov
jl
ja
inc
and
mov
mov
leave
xchg
insl
or
jbe
sub
movsl
lret
mov
mov
add
or
cmp
mov
pop
mov
jne
sbb
dec
rolb
mov
adcb
repnz
loope
add
faddl
inc
loopne
add
shlb
xchg
jb
rcrl
pop
fs
shrb
push
adc
es
mov
xchg
sbb
inc
jg
cmp
sbb
loop
ljmp
ret
xchg
stos
push
xor
xchg
push
inc
fldcw
ret
bound
in
lea
sub
and
ds
or
incb
dec
inc
xor
add
mov
mov
push
test
loopne
inc
mov
dec
inc
cmp
sub
xorl
mov
iret
clc
add
dec
pushf
xor
popa
pusha
xchg
mov
jne
or
loope
sub
push
add
cmpb
sub
or
mov
push
inc
xchg
loope
xchg
inc
bound
nop
rolb
in
inc
in
pop
dec
int3
nopl
sti
andl
inc
add
adc
insb
test
movb
jb
sub
gs
sbb
repnz
ficoml
push
dec
fsubs
repz
ret
jecxz
repz
mov
mov
adc
xor
inc
movsb
push
adc
push
out
add
or
xchg
test
pushf
xchg
repz
xor
movsl
cmpl
push
scas
dec
fcmovu
add
jmp
mov
fwait
cltd
movsb
sarl
mov
dec
cli
jl
sbb
adc
xor
andb
add
mov
pop
leave
aam
mov
pop
pop
jmp
adcl
aad
adc
call
adc
aaa
ffree
inc
add
push
and
subb
push
arpl
lods
xor
or
repz
jnp
orl
pop
push
movsl
adc
into
mov
mov
or
or
mov
dec
rcl
sbb
loop
iret
add
and
daa
mov
cmp
popa
loop
lcall
mov
sub
enter
xchg
mov
inc
andl
ret
sbb
iret
in
cmp
add
pop
rorl
ret
or
ret
and
add
les
nop
push
dec
cwtl
sbb
mov
iret
popa
dec
rolb
movb
mov
add
loop
cmp
push
inc
dec
cs
xor
lret
out
cmp
dec
stc
loope
inc
scas
sbb
pop
xchg
into
in
sbb
xchg
cmpsb
cmpsb
fldl
hlt
adc
sbb
xorl
test
into
loopne
loope
int
jne
xor
gs
adc
add
clc
repz
add
mov
leave
je
imul
mov
cmp
jne
adc
ljmp
mov
pop
out
xchg
ret
ret
xchg
pusha
and
and
dec
movsb
push
xor
pop
notb
sub
jne
pop
or
int3
or
pop
pop
sbbb
sbb
or
sub
jg
mov
xor
dec
imulb
stos
push
pop
push
testb
dec
add
scas
aad
add
push
andb
icebp
out
mov
lds
call
int3
bsr
pushf
add
xor
jecxz
and
sub
loopne
and
cld
lret
xchg
add
and
and
jp
rclb
sbb
mov
mov
dec
xchg
adc
ret
movl
mov
xor
add
loop
ds
rorl
cmpsb
jbe
dec
imul
stos
test
mov
hlt
sbb
call
xchg
int
sbbl
push
je
add
add
adc
inc
ja
add
ss
test
js
mov
ret
pop
movsb
push
pop
xchg
push
fwait
and
push
add
or
shl
or
int3
xchg
add
jb
js
cmp
test
mov
jge
adc
xchg
pop
jb
test
mov
xor
xchg
sbb
jbe
adcl
add
push
inc
mov
push
mov
lea
rcl
push
push
jns
icebp
imul
sbb
inc
insb
subl
sbb
and
cld
dec
cmpsb
shll
ljmp
jl
rcll
push
lock
adc
push
dec
jne
dec
loope
and
xchg
or
inc
and
cs
inc
pop
dec
xor
cli
dec
mov
add
fs
int
add
push
adc
xchg
adc
mov
jb
mov
cld
addb
jmp
add
adcl
outsl
orl
rorl
test
push
pushf
lret
mov
out
sbb
loope
cli
jo
cmpl
stos
cmpsl
jb
popa
jge
insl
fcoml
pop
cli
int
jo
rorb
or
int
inc
rcrb
ret
sub
push
ficoml
aas
test
and
mov
pusha
add
sub
push
mov
or
push
push
add
inc
or
ret
out
push
ret
and
dec
jle
int3
xlat
mov
push
jno
sub
pop
dec
jb
bound
fldl
inc
mov
sub
andl
add
arpl
loop
cmc
mov
inc
repnz
jge
mov
mov
mov
cli
enter
inc
pop
mov
popl
cmp
pushf
adc
rclb
es
incb
ja
mov
lret
lock
icebp
or
stos
push
adc
int
pop
inc
inc
pop
loop
ret
daa
inc
loop
aad
sub
test
lcall
add
ret
or
mov
adc
popa
jmp
lods
inc
int3
add
jne
pop
dec
das
cmp
sub
inc
ret
push
mov
fadds
shl
adc
mov
insl
push
mov
mov
mov
xor
int
pop
xchg
xchg
mov
mov
inc
pop
popf
ret
lret
aas
xor
add
call
jle
fiaddl
xchg
into
les
jo,pn
adc
adc
insl
fs
aad
inc
cmc
add
cmp
adc
mov
adc
movl
sub
dec
adc
and
pusha
push
dec
inc
add
jmp
out
ficomps
stc
xchg
jle
mov
stos
or
pop
inc
fldcw
or
test
enter
fidivrl
movl
pop
xchg
rolb
xchg
and
icebp
sub
les
mov
jb
jl
xchg
test
jp
loopne
inc
notl
aad
or
jae
push
ret
ret
and
mov
jp
push
shrb
mov
sbbb
push
cmp
lcall
mov
repnz
lea
dec
pop
in
or
enter
adcl
lods
daa
lret
or
inc
roll
xchg
adc
hlt
in
push
adc
sub
or
add
mov
notl
dec
testl
outsb
shll
addb
push
jg
pop
inc
in
fdivrs
dec
jge
sub
add
dec
and
faddl
sbbl
mov
sub
and
sbb
pop
add
xchg
inc
cs
inc
icebp
xchg
pop
shlb
into
fidivrl
push
loope
mov
dec
add
imul
les
ret
xor
data16
xor
add
adc
repz
push
xor
stos
loopne
repnz
push
mov
jbe
cmp
stos
movsl
xor
ss
test
jle
sbb
stos
std
mov
push
or
stos
insb
mov
pushf
pop
sahf
pop
jle
lret
lret
adc
sub
loope
arpl
decl
inc
and
mov
jbe
or
psubd
stos
add
aaa
lahf
jle
cmpsl
stc
jle
xlat
add
xchg
inc
adc
ret
pop
sub
push
pop
jecxz
inc
dec
sbb
push
inc
cmpsl
dec
add
or
mov
inc
testb
push
stc
mov
add
shl
nop
les
xor
inc
loop
sbb
nop
ficompl
les
adc
inc
addb
nop
scas
int
subl
test
icebp
or
call
dec
lock
push
xchg
xor
xor
add
popf
xchg
popa
mov
dec
add
pop
xchg
pop
pop
cmpb
add
insb
fcmove
mov
andb
iret
and
rol
or
mov
inc
or
pop
pop
aas
pop
bound
shlb
sbb
sub
inc
in
jbe
rorb
loop
lret
pop
ret
inc
int
into
outsl
dec
sub
sarb
ret
cmp
fldenv
popa
mov
es
or
lods
cmp
fdivp
test
and
into
out
bound
cmc
cld
jo
rcrb
ret
add
xlat
xor
mov
mov
jbe
add
jne
es
mov
repz
mov
dec
popl
add
mov
mov
push
pop
cmpsl
fchs
add
lcall
push
nop
adc
shlb
add
dec
push
sti
dec
cmp
inc
bound
mov
xor
xor
popf
inc
xor
loop
icebp
or
ljmp
pop
xchg
dec
clc
pusha
xchg
or
add
adc
cmp
xchg
xor
lret
push
mov
sbb
pop
lret
sub
sar
sub
mov
inc
fsubl
xor
in
lret
or
add
ss
dec
add
cli
ret
mov
push
or
mov
cmp
adc
and
inc
sbb
adc
aas
push
push
icebp
ja
scas
push
jo
addr16
jo
gs
add
je
lods
mov
jne
xchg
jmp
in
pop
ljmp
lret
xchg
jp
add
xchg
call
orb
mov
jl
mov
addl
incl
sub
mov
and
and
cli
or
add
je
cli
loop
pop
sti
adc
movsl
add
add
ljmp
out
pop
mov
mov
clc
or
in
pop
inc
out
addb
push
jnp
push
pop
bound
repz
loopne
iret
and
into
ja
xchg
jbe
dec
inc
add
test
mov
shll
shrb
inc
add
xchg
xor
push
push
les
ret
xor
sbb
sub
fld
ljmp
jecxz
ret
add
test
out
sbb
cmp
add
rcl
dec
adc
testb
xor
add
dec
push
lds
push
in
add
stc
lcall
jae
add
mov
test
adc
adc
rcr
lds
mov
sub
dec
loop
push
out
mov
leave
cs
sub
pop
add
dec
dec
hlt
push
add
and
sbb
dec
sub
out
stc
adc
inc
pushf
imul
in
lds
mov
pop
mov
lcall
add
cmpsl
fiaddl
sub
cmpsb
ja
inc
stos
movsl
jns
and
cmpl
mov
imul
dec
add
pushf
jg
jle
xor
std
push
add
adc
cmpl
adc
ret
adc
ror
and
push
aad
mov
adc
jnp
xor
sahf
lock
push
pop
and
or
mov
jecxz
or
aam
dec
mov
push
flds
stos
pop
cmp
dec
movlps
cmpsl
test
loopne
inc
xor
rcrb
cli
pop
leave
cmp
push
out
cs
incl
sti
or
fwait
push
inc
jne
sbb
ret
add
rcl
pop
mov
sub
cmp
insl
jnp
nop
aam
jmp
or
orb
es
movsl
mov
dec
ljmp
cmp
scas
popf
and
dec
inc
es
fmuls
inc
mov
and
into
and
or
add
enter
adc
dec
pop
lret
jo
rorl
sarb
mov
pop
cmc
enter
or
pop
popa
sbb
dec
fdivs
int3
adc
hlt
mov
dec
jnp
fs
int3
inc
pop
or
and
or
or
jno
incl
outsb
push
and
lock
insl
and
jecxz
rorl
jne
cli
enter
jo
mov
push
jp
dec
cmpsl
dec
aam
and
rolb
xor
pop
push
bound
rol
add
in
add
xchg
leave
int
enter
orb
mov
add
xor
cmp
cmp
lock
mov
idivb
adc
pop
subb
xlat
test
lock
add
push
jmp
loopne
rol
add
ljmp
test
xchg
out
mov
mov
xchg
push
push
popf
les
and
adc
mov
and
xchg
aaa
or
push
cmp
bound
or
sarb
or
xor
js
mov
xor
repz
inc
xchg
push
dec
popf
mov
inc
cli
repz
sbb
and
test
mov
add
fidivl
mov
rorl
fsincos
iret
pusha
push
mov
fldcw
adc
or
outsb
loop
bound
push
out
dec
fs
mov
adc
in
jp
mov
rcr
or
fidivl
orl
cmp
mov
movsb
fidivrl
into
cmp
stos
and
ljmp
jge
movsl
xor
pusha
aaa
mov
test
stos
mov
or
dec
cmp
aaa
test
push
insl
jl
or
inc
jp
je
lds
adc
push
pop
xchg
push
sbb
bound
out
inc
add
cmp
in
pop
dec
xchg
jne
xchg
push
call
es
or
aam
cmp
xchg
xchg
push
or
icebp
push
push
pushf
push
in
xchg
cmp
inc
aas
std
or
mov
cltd
add
pop
lea
cwtl
sub
cli
pop
inc
add
fstps
lret
test
add
sbb
popa
loopne
cld
pop
movsl
pop
cmp
push
and
lea
adc
xor
jo
outsb
out
adc
incb
mull
adc
xor
xchg
pop
sbb
aad
les
push
jge
sbb
repz
inc
mov
or
scas
repz
pushf
and
cmp
push
push
in
jnp
xchg
roll
popf
inc
dec
inc
xchg
dec
push
adc
adc
cmc
xor
ja
and
or
rcll
shll
and
aam
jnp
jbe
push
push
bound
push
pop
js
inc
cltd
daa
mov
add
dec
adc
out
mov
lret
adc
dec
shll
mov
ja
dec
inc
xchg
lahf
pusha
push
or
mov
push
dec
mov
cld
or
shl
and
popf
mov
xor
sub
gs
dec
ds
stos
push
scas
nop
data16
adc
jecxz
rcl
dec
mov
xor
xor
pop
xlat
out
sub
arpl
push
subb
roll
mov
or
mov
fs
jmp
pop
inc
out
adc
aad
jecxz
shlb
pop
mov
dec
ret
and
fldenv
push
pop
xor
add
add
pop
push
mov
rolb
imul
push
push
mov
ljmp
xadd
aaa
dec
lock
and
push
fadds
cmp
test
xchg
mov
into
pop
fdivp
outsb
push
stos
loope
into
pop
leave
addb
test
or
cs
xchg
int
je
jle
popa
mov
popa
test
lret
cltd
add
imul
inc
adc
push
test
or
in
mov
mov
dec
add
rorl
inc
divb
inc
dec
mov
adc
leave
enter
cs
inc
sarl
push
xor
insb
and
sbb
mov
pushf
push
push
dec
call
inc
add
inc
test
adc
jecxz
adc
mov
jecxz
orb
cmp
rolb
lcall
jne
jg
cmp
loopne
cmpb
inc
cmpsb
data16
xlat
cwtl
jae
stc
stos
lret
andl
test
fldt
ljmp
ret
repz
addr16
lcall
gs
sbb
mov
fadd
xor
and
addb
test
xchg
test
lcall
dec
cmp
add
add
fcmovnb
xchg
out
fdivp
sbb
adc
shlb
in
repz
test
push
add
rcr
jg
test
sbb
ljmp
inc
adc
add
loope
inc
cmp
out
add
mov
roll
outsb
mov
pop
jns
inc
inc
dec
mov
hlt
xchg
xchg
adc
lds
call
sbb
add
lcall
mov
movl
add
data16
repnz
arpl
popa
inc
add
bswap
or
add
xchg
adc
jno
pop
aaa
je
inc
pop
xor
aad
popa
shlb
mov
loop
dec
sbb
daa
test
cmp
fxtract
in
pop
inc
push
popa
shll
lret
shll
add
push
and
mov
adc
mov
sbbl
jno
or
imul
mov
scas
or
ret
add
fnsave
mov
mov
pusha
push
dec
loope
aad
sbb
loopne
inc
lods
add
inc
sbb
inc
iret
inc
dec
loop
int3
or
out
stos
adc
test
or
mov
js
jb
loop
and
icebp
int3
movsb
sub
mov
and
les
sbb
sbb
scas
movlps
cli
lods
adc
popf
es
test
rolb
pusha
mov
mov
dec
dec
movb
arpl
mov
mov
insb
or
mov
mov
and
push
mov
pop
int
in
push
test
mov
xor
mov
add
push
cltd
add
les
add
insb
rcrb
adc
lret
sahf
xor
scas
or
rol
adc
adc
pop
cmp
dec
add
xor
je
ljmp
pop
bound
test
push
xlat
je
xorb
inc
mov
ss
pop
pushf
inc
add
xchg
add
das
test
inc
or
gs
xorb
roll
outsb
and
fcom
ret
jmp
mov
push
iret
ja
lds
clc
popa
enter
in
ret
inc
enter
add
push
inc
shll
mov
jp
jp
or
aam
mov
loope
mov
inc
orb
push
out
sub
add
addb
sub
push
lock
cmpsb
push
inc
add
iret
xor
ret
das
ss
fstpl
xor
rcrb
add
ror
adc
repnz
add
outsl
roll
push
out
je
pop
or
jle
movsl
loopne
cwtl
jecxz
inc
and
jno
pop
inc
shrb
in
shrl
inc
and
push
xchg
add
xor
insb
push
ficoms
out
pop
pop
sub
inc
dec
or
dec
push
mov
test
rcll
push
dec
and
jb
testb
jbe
inc
out
add
ja
loopne
test
pushf
lret
fcmove
mov
xor
hlt
mov
mov
xor
add
add
ret
lcall
andl
das
pushf
mov
icebp
and
cwtl
into
fcmovnbe
roll
mov
inc
dec
cltd
lret
inc
adc
lods
sbb
jb
pushf
adc
push
xchg
lea
js
outsl
mov
aam
fwait
push
les
pop
fsubs
rdtsc
test
dec
add
es
pop
and
out
stos
popa
and
inc
icebp
xchg
aaa
gs
int3
jne
movsl
filds
add
mov
ret
xor
push
dec
inc
and
xchg
pop
add
dec
cmp
nop
pop
testl
adc
lock
xchg
loope
fisubl
adc
jl
and
xor
std
pop
jno
sub
push
lret
dec
or
xchg
dec
fisubs
pop
outsb
iret
pop
aad
xchg
adc
subps
pop
std
pop
adc
add
cs
cmpb
mov
xor
dec
dec
cs
in
adc
out
inc
push
add
fcomip
lret
fmuls
or
sbb
push
ss
mov
ja
and
cmpsb
pop
hlt
sbbb
scas
fdivrl
sbb
adc
into
pop
dec
push
shlb
pop
add
and
adc
add
sbb
call
and
cwtl
addr16
sub
push
jb
or
in
testb
lds
inc
cltd
lock
movl
jl
push
icebp
in
fcoml
or
mov
add
in
repz
inc
cmp
data16
and
mov
dec
imul
ret
adc
inc
add
add
or
loopne,pn
popa
ret
out
pushf
xor
loopne
les
sarb
pop
add
enter
inc
xor
adc
inc
rcrl
lea
jmp
mov
xadd
popa
and
xchg
add
and
movsb
and
das
jnp
xchg
xchg
loop
int3
add
roll
or
xor
xchg
inc
inc
gs
add
ds
test
ret
jecxz
mov
int
roll
lock
popa
jb
in
xchg
sub
add
mov
adc
cld
les
pushf
push
mov
inc
lret
add
mov
bnd
inc
rcrl
sub
inc
pushf
loope
in
jbe
ret
cmp
inc
aam
in
loop
insl
outsb
aam
shll
into
and
fcomps
mov
dec
jl
and
rol
inc
test
jae
orb
insb
dec
imul
add
push
pop
inc
into
add
subb
pushf
sbb
out
fbld
int3
push
jnp
sub
inc
hlt
xor
repnz
and
adcb
les
lret
lret
add
push
inc
or
adc
mov
data16
mov
adc
shr
and
mov
cltd
xchg
fmull
dec
pop
rcl
rclb
adcl
inc
imull
adc
and
push
mov
xchg
repz
or
mov
out
pop
popa
dec
sub
xchg
sbb
jne
mov
inc
mov
cmp
int
ja
rolb
nop
cmpsb
mov
xchg
xchg
dec
pop
dec
pop
je
lock
shlb
mov
xlat
jecxz
ja
add
push
cmpsb
fdivs
or
cli
insb
js
pop
test
add
loop
sub
or
sub
scas
je
adc
out
mov
arpl
out
inc
inc
inc
pop
es
add
jne
sub
lea
xchg
inc
dec
dec
cmpl
pushf
dec
orl
and
cmp
out
fsubl
xor
and
mov
xor
gs
cs
add
xchg
fwait
add
sarl
push
arpl
sub
adc
and
add
dec
test
cwtl
push
loop
sbb
in
push
mov
arpl
mov
int3
sbb
adcb
js
ja
sbb
xchg
mov
push
inc
push
pop
push
xchg
mov
imul
mov
or
pop
in
lea
add
inc
xchg
push
mov
xchg
add
les
sub
jae
inc
ret
xchg
filds
or
mov
and
fisubrl
mov
xor
sbbl
jo
xor
jne
pop
in
cli
hlt
les
lret
adc
pop
push
adc
mov
sub
inc
pop
pop
bound
add
lods
adc
mov
divl
and
add
rorb
popf
orb
int
pop
xchg
lret
aam
add
xchg
in
frstor
jl
int3
imul
or
test
adc
add
mov
or
pop
mov
push
add
clc
adc
pop
xor
loop
faddp
mov
mov
jb
sti
rcrb
push
add
xor
pop
push
push
in
add
push
lds
outsb
add
push
sbb
inc
loope
ret
add
add
mov
into
pop
nop
outsb
clc
pop
xchg
outsl
lds
dec
pop
cwtl
jp
adcb
cwtl
shl
std
lds
ret
fyl2x
mov
lock
fucomip
push
xchg
repnz
aas
js
lds
dec
popl
loop
mov
sbb
fnstenv
mov
inc
cmc
push
jae
cs
sbb
mov
inc
mov
dec
out
pop
movsl
jnp
mov
sbb
dec
or
adcb
adc
sub
xchg
cmp
les
xor
push
sbb
jmp
mov
xchg
inc
cmpb
js
loop
xchg
lret
stc
stos
popf
pop
add
cwtl
jg
cmp
stos
aaa
pop
mov
inc
dec
and
add
mov
xchg
add
xchg
xor
cltd
arpl
fdivs
push
jne
dec
bound
insb
repnz
in
inc
lcall
lds
inc
je
inc
jle
add
adcb
sbb
xchg
add
xchg
inc
arpl
inc
jno
int3
jb
lds
or
out
jns
push
pop
je
fisttpll
cld
addl
cmp
sub
cmp
xchg
out
lds
loope
lods
divb
dec
outsl
pop
out
dec
mov
shlb
mov
push
std
pop
inc
int
adc
dec
scas
pop
add
aaa
or
pop
jle
in
mov
insb
xor
pop
sbb
cld
xor
add
cwtl
movsl
test
jecxz
xor
and
or
or
test
or
cmp
pop
sub
lret
lcall
pop
insl
or
xchg
add
pop
jmp
inc
add
imul
ljmp
loopne
and
mov
mov
xor
dec
inc
pop
pop
testb
mov
mov
fidivl
inc
add
xchg
in
jmp
dec
add
xor
js
mov
jge
mov
sbb
mov
insl
mov
mov
inc
cld
test
jns
lds
push
in
ret
add
test
push
xchg
push
cli
sub
pop
shl
leave
mov
push
in
shrl
add
mov
cmc
dec
scas
inc
clc
inc
lods
push
mov
mov
or
sub
ss
push
xchg
iret
cmpb
sbb
ds
sbb
pusha
cmc
xor
push
insb
inc
mov
cmp
rorb
sbb
mov
mov
inc
dec
test
hlt
into
dec
add
iret
mov
xlat
shlb
int3
add
lret
pop
add
stos
pop
push
mov
fidivrl
call
addr16
std
in
pop
mov
jg
and
aam
mov
jl
stos
sbb
and
push
add
aad
ret
pop
inc
repz
mov
sub
inc
or
lods
jns
dec
and
inc
loop
and
pop
daa
loopne
xor
adc
dec
daa
add
sub
push
icebp
push
into
setp
aas
shll
jp
or
mov
mov
int
cmp
ror
loop
inc
dec
mov
mov
jecxz
outsb
push
pop
dec
pop
and
outsl
xchg
or
xor
or
jmp
bound
and
arpl
data16
mov
push
inc
push
orl
xor
xchg
xor
mov
xor
mov
outsb
or
and
push
pop
lret
inc
data16
mov
add
hlt
enter
add
mov
mov
loopne
js
inc
xchg
inc
mov
mov
dec
call
loope
push
out
adc
sahf
not
aam
jbe
dec
xchg
push
adc
push
and
clc
in
mov
jp
inc
cmp
out
jb
nop
push
xor
jne
mov
sub
jb
xchg
les
pop
test
out
in
push
cmpsb
push
xchg
inc
je
sahf
add
stos
xchg
jne
es
cmp
in
test
ss
dec
fisubs
sbb
movsl
mov
fiadds
lock
jo
fcomps
xor
push
andl
lods
push
or
fsubrs
mov
sub
loope
lret
jae
mov
popf
mov
orb
or
ret
and
cmp
inc
lcall
nop
mov
pusha
xor
pop
push
pop
adc
in
call
sbb
sbb
and
inc
jp
test
sbb
push
xchg
mov
test
push
mov
pop
xchg
sub
inc
sbbl
insl
mov
jno
inc
jo
ss
outsl
push
iret
test
xor
cmp
ficoms
mov
sbb
push
dec
les
je
test
mov
hlt
es
xor
in
push
jg
and
lea
pop
or
or
add
push
dec
int3
xchg
mov
mov
dec
mov
sbbb
sub
popf
inc
dec
push
or
enter
imul
shl
xchg
xor
popf
mov
mov
jg
gs
sub
push
inc
ret
mov
mov
mov
movsb
add
das
jmp
mov
cmp
je
lods
inc
fidivl
frstor
sti
aaa
jecxz
push
daa
mov
popa
ffree
xor
dec
daa
jp
inc
mulb
mov
stos
lcall
imulb
out
sub
int
jg
cmp
jle
xchg
loope
in
divb
xor
ljmp
std
sahf
sbb
mov
mov
popf
mov
cltd
imul
add
dec
pop
add
jae
ds
ret
lea
pop
out
and
push
mov
adc
in
inc
out
or
incl
mov
mov
inc
pushf
add
dec
mov
and
cmpsl
movsb
add
mov
add
neg
sbb
out
add
sbb
mov
inc
jl
mov
mov
add
dec
mov
loop
sbb
xchg
inc
and
mov
dec
add
imul
mov
loopne
lret
and
into
xlat
sub
out
into
adc
push
iret
mov
sbb
mov
pop
mov
and
dec
test
sub
nop
adc
imul
out
daa
xchg
lret
repnz
lea
clc
pop
leave
addl
das
in
movsb
and
rol
fbstp
es
add
mov
insl
rcrb
mov
jae
std
lahf
loopne
and
mov
cmp
push
loop
jecxz
mov
pop
cwtl
push
inc
fldcw
lods
mov
mov
mov
and
cli
std
add
arpl
cs
out
jb
push
ds
cwtl
push
pop
and
xchg
xchg
sbb
mov
xor
popf
mov
popa
filds
scas
leave
inc
and
xchg
sbb
and
movsl
fsubp
jp
aaa
jbe
popf
pushf
icebp
je
xchg
test
pop
and
daa
aad
ret
inc
test
outsb
adc
movsb
dec
rcll
add
roll
push
or
inc
les
adc
fimuls
dec
fstps
xchg
dec
add
push
inc
and
ret
mov
les
sub
mov
jo
lods
or
mov
enter
pop
inc
adc
or
mov
loope
test
adc
add
mov
add
xchg
adc
dec
push
fildll
add
ljmp
in
xchg
int
sbbl
ret
inc
fldcw
rol
push
sbb
push
out
jb
inc
dec
lret
aaa
ds
adc
mov
mov
pusha
dec
dec
leave
nop
jb
aaa
add
inc
aad
and
xor
inc
xchg
lea
dec
sahf
lods
add
mov
and
sbb
add
out
inc
out
inc
cmp
xor
jle
jmp
ret
lds
lret
inc
push
pop
mov
add
add
jp
pop
or
les
push
sub
es
ds
dec
cmp
cli
jge
divl
ret
clc
cmp
test
divb
xor
mov
sbb
dec
out
lods
sub
xor
cmp
mov
aaa
cld
cmpl
repz
shrb
lock
sub
popa
mov
repnz
add
mov
mov
aam
push
loopne
jl
inc
cmp
pop
es
movsb
add
or
cmp
inc
test
inc
lods
pop
in
lods
je
lret
std
movsl
pusha
pusha
push
fistl
int3
jg
mov
iret
sarl
dec
in
mov
test
add
ret
mov
pop
jmp
into
cmp
je
mov
xor
imul
pop
jno
dec
test
aas
loope
lret
nop
push
xchg
push
add
push
push
push
outsb
or
cmp
xchg
jecxz
cmp
push
icebp
cwtl
inc
pusha
jecxz
daa
roll
add
test
call
xchg
push
repz
adc
sbb
xchg
dec
leave
pop
jg
xor
cmp
sbb
ret
dec
outsb
sbb
int3
xor
cmp
xchg
sub
hlt
adc
push
inc
daa
addb
dec
jmp
out
jge
cltd
add
cmp
fcmovu
ret
loope
or
roll
imul
leave
mov
push
subb
insb
xlat
pop
jno
mov
lret
ss
mov
mov
pop
add
jae
std
xchg
push
fidivrs
pop
xchg
sbbb
mov
push
stos
and
inc
cltd
shl
dec
scas
push
mov
stos
test
outsb
stos
mov
icebp
pop
jmp
xchg
test
jl
jle
push
outsl
cmc
pop
stos
push
or
and
push
dec
xchg
loop
and
cmp
insl
js
mov
cld
stos
outsb
daa
shll
std
mov
ret
or
scas
push
xchg
es
mov
sub
in
repnz
scas
cmp
xchg
fwait
inc
mov
arpl
inc
pop
jge
int
je
pop
outsb
push
push
jp
ret
mov
mov
loopne
mov
cmp
sbb
stos
lods
pop
pop
ss
dec
pop
int
loope
leave
and
mov
mov
dec
int3
arpl
mov
es
jae
push
sbbb
into
ljmp
lock
out
sub
stos
popf
pop
xchg
dec
int3
jg,pn
es
cmpsl
add
add
xchg
clc
jne
xor
or
dec
lret
les
insl
pop
mov
insl
lahf
ret
and
push
adc
lret
jge
mov
ja
mov
sti
cmp
fwait
sbb
std
mov
or
mov
movl
fcomps
cwtl
lods
jle
push
je
aas
jl
popf
push
jmp
cs
pop
arpl
mov
lret
insl
mov
xchg
stos
dec
je
and
inc
test
fnstenv
lods
cmp
int
cmpsl
adc
mov
test
and
rcrb
mov
cs
mov
add
in
daa
cmpsl
inc
ret
loopne
popf
cs
stos
je
mov
add
add
pop
fs
ror
arpl
aas
popa
mov
jmp
ljmp
push
scas
rorb
loopne
nop
adc
mov
scas
mov
inc
call
jae
push
inc
jg
shrl
cmpsb
aad
pop
dec
clc
addl
sub
push
or
or
lcall
add
adc
adc
je
pushf
mov
lds
nop
iret
cmc
andl
xor
push
fidivs
jno
shll
inc
or
movsl
add
add
push
int3
inc
cmpsb
mov
sbb
adcl
ret
pop
xchg
and
rorb
js
add
jp
jo
add
push
js
inc
jb
addr16
out
adc
dec
push
ret
jle
mov
and
add
cmpsl
mov
dec
in
lds
sahf
std
mov
mov
lahf
dec
add
insb
shll
add
pop
adc
mov
mov
sbb
std
fdiv
xor
add
fimull
inc
into
add
push
data16
test
aad
mov
and
pop
xchg
add
adc
repz
jmp
cmp
and
inc
mov
or
cvtpi2ps
xor
cmp
popa
imul
sahf
aad
inc
test
and
out
lds
shrb
add
mov
xor
ljmp
movsb
add
inc
lret
or
movsl
lds
mov
ja
das
jae
dec
movsb
cwtl
cmp
test
add
lods
adc
and
rorl
add
ret
dec
add
xchg
popl
rolb
ret
add
and
or
sub
push
pushf
leave
lret
pusha
lds
add
cld
orl
pop
loope
mov
orl
mov
sbb
sub
lds
inc
enter
dec
add
mov
aam
sub
mov
pop
ret
subb
or
rcl
outsl
hlt
loop
int3
cmp
repnz
roll
xor
mov
fstpt
cmp
mov
rolb
loope
std
xchg
in
sub
rsqrtps
pop
ds
shll
xor
cmp
xchg
jmp
push
jle
dec
xor
lods
mov
xchg
xchg
mov
jg
add
xchg
ljmp
push
bound
push
scas
cld
add
mov
js
inc
adc
lds
test
scas
add
push
jns
adcl
add
repz
jns
ljmp
inc
ret
cld
test
jge
rol
cmpsb
jb
or
inc
add
loop
lds
or
pop
lock
nop
mov
jb
and
push
sub
sbb
dec
fidivrs
sub
jae
ret
arpl
lret
insb
or
or
adc
and
scas
mov
movsb
sub
ret
repz
fdivrl
scas
ret
adc
insl
test
andb
lret
cmpl
sub
mov
push
push
pop
sbb
imul
filds
adc
dec
lret
popa
sbb
add
out
das
addl
sub
mov
mov
lcall
ja
inc
cmc
aam
add
push
int3
lock
or
rol
fldl
mov
es
sub
sahf
push
dec
sub
pop
jecxz
xor
ret
dec
stos
xchg
nop
pushf
add
gs
cmp
mov
cmp
shll
mov
lds
fs
jo
mov
rcrb
in
add
daa
xor
or
add
insb
add
inc
jo
inc
inc
and
xlat
loope
jecxz
xadd
adc
mov
jb
and
push
push
stos
pop
pop
dec
inc
repz
and
fidivs
jp
das
push
and
scas
mov
div
arpl
add
mov
sub
or
and
adc
lds
add
jno
icebp
orb
push
icebp
pop
inc
cmp
xchg
xor
fwait
mov
sub
and
fadds
inc
add
add
xchg
movsl
sub
pop
imul
add
int
mov
jo
and
xor
fsubrp
sub
divb
cmc
pusha
inc
inc
dec
subb
sbb
das
sub
shlb
movb
add
out
roll
cmp
adc
sub
out
pop
adc
test
mov
push
les
scas
data16
jbe
fildl
sbb
push
sti
pushf
push
ret
adc
mov
xor
add
or
sbbb
lcall
in
out
push
inc
inc
pop
push
push
movsl
cs
fistpll
push
push
leave
or
test
jp
int3
adc
popa
stos
enter
fwait
push
and
sbbl
cmpsb
push
sbb
fisubrl
jo
imul
pusha
inc
dec
insl
jae
inc
pushf
mov
dec
add
inc
insl
fldenv
mov
mov
ret
cli
push
incb
or
inc
rcr
xchg
mov
stos
cli
xchg
divb
inc
or
loop
aas
bound
ret
adcb
repz
dec
daa
mov
shlb
jmp
fdivrl
mov
cmp
inc
inc
push
cmp
mov
or
jmp
push
mov
shrl
mov
or
dec
movsb
mov
adc
inc
mov
adc
push
xchg
and
lret
mov
imul
inc
inc
push
mov
mov
and
add
inc
lods
dec
and
jb
add
ja
nop
testb
cmp
mov
ret
test
or
bound
cltd
mov
lds
insb
jae
and
and
add
adc
clc
movsb
add
push
inc
push
ret
add
testb
xor
cwtl
sar
mov
movsb
add
mov
lcall
pop
repnz
pop
std
mov
mov
sbb
test
push
jp
adcl
mov
or
cmpl
decb
push
mov
pusha
sub
pop
fcmove
and
cmp
add
push
in
push
in
out
sub
in
negl
int
pop
sbb
aas
sbb
inc
xor
inc
cmp
sub
int
inc
sbb
mov
sbb
clc
push
pop
neg
push
add
ret
jl
addb
stc
mov
sbb
mov
xor
test
je
lea
inc
or
push
xchg
jb
jne
push
pop
mov
pop
movl
dec
or
imul
orl
xor
mov
imul
push
aaa
add
adcb
std
stc
sbb
sub
mov
mov
int3
inc
push
mov
jb
les
inc
fiaddl
movups
add
pop
push
pop
adcb
les
lcall
mov
push
jle
cltd
mov
xchg
mov
add
sbb
mov
xor
les
negb
xchg
iret
cmp
add
add
testb
adc
rol
push
pop
cmp
lock
push
mov
lds
jnp
imul
add
dec
xor
add
xorl
cmp
jb
add
pop
int
and
lds
daa
lahf
and
or
std
fcmovnu
xorl
rorb
ret
hlt
lods
add
mov
adc
sub
sar
imul
je
outsb
rorb
cmc
imul
jb
add
sub
adc
jecxz
out
adc
repz
add
ljmp
mov
cmp
and
adc
inc
mov
push
out
mov
xchg
inc
inc
and
cmp
jae
jmp
mov
pop
mov
push
jg
mov
add
pop
ljmp
cmpsb
stos
add
stc
movsb
xor
push
jp
fsub
fwait
pushf
stos
xchg
pop
dec
pop
mov
or
and
push
insb
pop
adc
stos
nop
xchg
dec
mov
push
cwtl
pop
cld
jnp
adcl
in
cmp
inc
fnstcw
xchg
mov
js
lahf
adc
jl
add
jp
adcb
mov
and
pop
inc
push
add
jns
xor
cmp
jne
stc
imul
cmpsl
push
loope
add
and
mov
mov
out
lcall
and
lds
fmuls
and
pop
mov
mov
lock
dec
stos
or
mov
xor
add
push
leave
xchg
bound
or
jae
les
push
mov
addr16
rorl
nop
xlat
pop
fldenv
es
and
daa
fcomp
loopne
jp
add
lret
and
mov
cmp
cli
xchg
add
inc
sub
lret
rcrl
pop
insl
add
push
or
inc
xchg
clc
sbb
fs
ret
or
or
push
or
loop
gs
mov
push
mov
dec
or
cmp
fdivrl
xor
fidivrs
mov
and
divb
jp
inc
add
cmp
in
jb
lea
xchg
mov
ja
sbb
inc
push
or
mov
sbb
inc
cmp
fnstcw
mov
and
mov
add
xchg
imul
pop
inc
push
roll
sbb
in
sub
inc
insb
mov
xchg
xor
dec
mov
add
pusha
ret
or
pop
mov
mov
ret
push
aam
pop
ljmp
mov
out
push
pand
push
ljmp
add
ds
clc
inc
out
aaa
dec
ds
addr16
mov
lods
sub
es
inc
sbb
into
and
daa
cld
inc
xchg
fdivl
stos
dec
sbb
pusha
jns
and
push
adc
add
mov
jb
inc
adc
ds
mov
mov
mov
sbb
and
push
mov
xchg
mov
aad
push
pop
scas
push
cmp
fisttpll
daa
pusha
les
push
neg
popa
icebp
xchg
cmp
ja
cmp
test
add
subl
lret
adc
mov
sbb
inc
add
dec
xlat
shll
bound
sub
pop
mov
je
popf
cltd
sub
pop
inc
arpl
dec
adc
mov
jle
jmp
fdivs
shlb
scas
dec
and
push
mov
xchg
inc
adc
sbb
sarl
and
test
test
pusha
mov
sbbb
mov
jmp
pusha
es
add
sub
push
incb
cmp
mov
add
mov
push
lods
xor
add
add
mov
pop
or
pop
inc
xor
xor
loop
std
sub
pushl
mov
and
push
jnp
jge
xor
mov
sbb
in
fisttpll
popa
popa
sti
std
or
out
xchg
adc
jb
ret
fdivr
aam
jecxz
shrb
int
mov
mov
jne
xorl
test
bound
add
xor
aad
ds
mov
xchg
inc
fwait
adc
xchg
ret
mov
dec
adc
es
stos
add
cmp
pop
in
test
or
pushf
adcl
and
mov
xor
mov
loope
leave
add
jbe
shlb
cmpsb
or
dec
out
mov
rcll
xchg
and
inc
mov
cmp
sub
adc
mov
add
adc
mov
sbb
fists
add
pop
mov
pop
cwtl
lea
fstp
lret
mov
dec
hlt
ss
fwait
mov
lea
jne
fsubrl
dec
mov
jp
aad
cmpl
add
inc
inc
in
cmpsl
mov
rolb
enter
add
mov
cmp
pushf
mov
and
cmpsb
rorb
add
int
loope
or
dec
sbb
out
pop
push
test
fldcw
or
popl
jle
lock
lds
test
ds
mov
dec
pop
inc
or
int3
lret
loop
mov
push
inc
xchg
push
cmp
dec
push
rorb
jp
jecxz
dec
mov
adc
inc
sbb
imul
repnz
fcoml
xchg
xor
ret
jo
dec
movsl
sbb
and
hlt
add
test
repz
nop
xchg
xor
pop
ficompl
push
cmpsl
xor
push
enter
pop
ss
mov
sub
mov
inc
pushf
lock
shrb
fwait
jecxz
dec
jg
ljmp
add
xchg
out
andl
xor
mov
shr
movsl
cmpsl
je
cli
cmpsb
aam
lds
add
loope
add
and
pop
lods
and
pushf
push
sbbl
xchg
push
inc
inc
arpl
test
sbb
add
movsl
adc
add
test
pop
xor
jae
ljmp
add
pop
xchg
js
mov
and
sahf
inc
rorl
xchg
nop
enter
clc
data16
push
xchg
xchg
mov
push
loopne
lcall
sub
jecxz
mov
jb
repnz
mov
sub
jne
sub
xor
xchg
lret
mov
lea
sub
jg
out
mov
repnz
cmp
jns
cmp
loopne
jle
inc
orl
inc
inc
movsl
inc
mov
lock
pop
and
je
mov
out
and
add
jns
mov
push
leave
pop
cli
dec
jmp
fwait
inc
mov
jnp
int3
int
fucomip
in
jmp
sbb
dec
jno
mov
lret
or
aas
or
lea
and
ds
push
push
cmp
and
andb
int3
test
stc
push
leave
imul
fwait
jmp
xchg
xchg
dec
pop
aas
adc
pop
cmpb
inc
outsb
adc
mov
jle
cmp
sub
jno
push
add
fs
fldt
iret
stc
rcrb
push
push
sahf
pop
inc
int3
pop
pop
mov
out
jb
cmp
mov
iret
add
dec
mov
stos
xor
enter
cmpsb
cmp
lret
add
and
push
add
push
mov
mov
push
and
mov
das
in
std
repnz
loop
mov
dec
test
xchg
shl
std
jle
fiaddl
mov
push
xlat
and
push
call
ret
jb
data16
lret
and
xor
repz
std
vminss
outsl
add
outsl
xor
sbb
add
mov
cmpps
inc
imul
pop
outsb
cld
adc
sub
push
jae
nop
out
jle
push
jecxz
mov
rcrl
add
fldt
cli
mov
iret
push
jl
ret
add
or
sti
mov
stos
pop
sbb
inc
je
mov
scas
jo
arpl
sbb
call
inc
dec
jo
add
or
leave
jns
sub
xchg
lret
xor
fists
lahf
sbb
cmc
jp
ret
xchg
sub
popa
outsb
rcrl
pop
pop
inc
test
test
add
in
cmp
out
push
testl
inc
cmp
fldl
fwait
dec
mov
js
nop
cs
xlat
stc
and
xor
loope
and
arpl
xchg
jl
stos
xor
adc
sub
orl
movsl
xchg
lret
mov
cwtl
jb
cmp
pop
xchg
fcmovbe
fisttpll
movb
mov
cmc
and
test
inc
data16
insb
push
loop
inc
sbb
arpl
mov
add
mov
xlat
cmp
push
xorb
cmp
bound
lds
imul
push
mov
push
add
jge
jnp
xlat
or
pop
add
rorl
or
loop
adc
jns
dec
mov
xor
fiaddl
inc
mov
sub
andb
sbb
mov
out
or
insb
dec
jg
inc
pop
fdivs
xor
pop
ret
fists
inc
out
adc
push
cmp
in
inc
xchg
inc
cwtl
add
movb
jb
pop
pop
sahf
push
or
and
mov
mov
orl
pop
mov
inc
inc
jmp
jnp
push
stc
sbb
es
faddl
mov
and
add
imul
mov
and
mov
xchg
fisttpll
push
adc
in
dec
inc
adc
add
dec
add
push
fildl
and
push
popf
add
push
rolb
mov
xor
rcrl
jbe
popa
dec
fsubr
mov
inc
lret
nop
sahf
mov
pop
xlat
mov
push
adc
xor
imull
dec
clc
and
or
test
or
out
push
les
jnp
gs
fldenv
mov
sbb
divb
sub
dec
leave
sub
loop
aas
mov
sub
andb
add
insl
adc
gs
jecxz
sbb
add
add
ja
or
pop
push
fdivrl
shr
jnp
and
inc
je
sbb
mov
mov
adcl
add
dec
mov
inc
sbb
cmc
jmp
aad
stc
add
sub
or
mov
pop
xorb
sbb
js
mov
lods
mov
ljmp
pop
mov
or
mov
mov
dec
pop
cmp
xchg
leave
test
roll
sbb
lds
mov
sahf
pop
add
mov
es
jge
mov
mov
pop
xor
xchg
pop
push
int3
out
cmp
mov
aad
into
push
inc
cld
mov
add
mov
adc
jnp
xor
je
or
mov
and
adc
scas
add
xchg
scas
jo
mov
call
cmc
fs
std
ss
cmp
mov
popa
pop
mov
jae
movsb
testl
inc
sub
pop
push
sub
dec
ja
xchg
mov
mov
dec
mov
or
cmp
outsl
mov
push
pop
adc
fsts
cmp
aad
test
lahf
out
je
cmp
xor
push
les
fistps
add
jnp
clc
jecxz
push
jmp
adcb
dec
mov
lar
ret
fwait
mov
shl
xor
mov
jo
movsb
in
sub
loop
cli
sbb
and
ds
jecxz
inc
dec
lret
mov
roll
repz
int
adc
lret
add
or
inc
jge
test
jmp
cwtl
jg
sub
nop
out
push
xor
ficompl
fsts
inc
nop
mov
dec
fcomp
jne
xlat
xchg
xlat
enter
test
mov
mov
push
mov
mov
add
sbb
sub
push
sub
subb
cmp
lret
sbb
inc
cmc
adc
ja
dec
in
cs
sti
mov
shll
adc
cmpl
aas
cmp
mov
push
add
cmp
stos
jae
inc
hlt
ficoms
add
push
fisubs
xchg
inc
pop
add
shl
and
inc
inc
or
sub
add
jae
and
fwait
mov
or
xor
clc
inc
add
das
inc
inc
xor
adc
dec
adc
lcall
cwtl
xchg
ret
add
mov
cmc
in
stos
mov
aaa
rolb
mov
push
mov
outsl
adc
mov
adc
inc
test
repnz
add
insl
mov
xor
sbb
or
push
stos
bound
add
fucomip
mov
pop
pop
mov
ss
fwait
repz
pop
sub
or
ud0
or
mov
xchg
inc
adc
cltd
mov
outsl
add
and
cmp
inc
test
jno
adc
test
mov
nop
js
sbb
loope
xchg
cmp
or
lods
lods
add
ss
nop
aas
sbbb
pop
adc
mov
jge
es
roll
hlt
adc
jmp
movsb
cvtdq2ps
adc
dec
add
xchg
dec
add
pushf
xor
fdivl
jae
mov
xchg
inc
into
cmpsl
orl
jae
out
and
jne
inc
fstps
pusha
dec
adc
fiadds
push
cli
insl
xor
lds
mov
add
mov
loope
ret
dec
lcall
out
and
pop
fcomps
sub
mov
push
decb
outsb
das
lods
outsb
out
ss
mov
outsl
xlat
dec
sbb
xchg
add
push
inc
outsb
aad
ret
mov
xorb
inc
dec
scas
inc
inc
sbb
jle
ljmp
jbe
xor
ja
xchg
inc
int
push
jl
jl
or
adc
jns
bound
arpl
lods
je
fldl
push
dec
mov
ret
or
mov
fistpl
sbb
scas
out
push
cmp
pop
nop
test
into
or
sbb
cmp
jmp
adc
aad
xor
clc
daa
lcall
ret
or
mov
sbb
push
pop
or
mov
dec
mov
outsl
jb
pushf
cmp
stos
pop
jno
push
insl
dec
mov
hlt
sbb
bound
adc
jo
push
rcrl
cli
gs
push
dec
push
or
jno
and
mov
pusha
or
dec
lds
out
or
daa
aam
and
fsubl
fwait
pop
adc
leave
test
in
lcall
loop
and
adc
lea
loop
cld
cwtl
or
mov
pop
or
pop
fstpl
imul
mov
jbe
outsb
dec
xor
sbb
int
stos
push
xor
in
adc
xchg
ds
xor
lret
and
aam
mov
dec
pop
mov
scas
bnd
arpl
cltd
ficomps
cltd
fwait
push
clc
adc
out
fiaddl
xchg
jnp
out
mov
mov
dec
push
aad
out
jge
out
or
clc
movsb
inc
fcompl
mov
or
push
aad
sbb
mov
mov
shll
std
add
lret
adc
mov
jecxz
pop
int3
inc
xor
dec
push
cmp
mov
push
mov
fmulp
aaa
adc
pusha
iret
in
pop
lea
xchg
add
push
inc
and
mov
jnp
shlb
inc
call
ret
loope
test
rcrl
mov
lock
lret
xchg
loop
or
sbb
cmp
xchg
or
aad
adc
and
and
or
mov
sub
jp
inc
inc
adc
and
or
into
pusha
sbb
test
push
lret
in
adc
xchg
dec
push
lods
mov
xlat
enter
hlt
mov
jl
push
orl
mov
xchg
sub
aad
shrb
xchg
mov
push
call
orw
and
nop
dec
dec
outsl
mov
out
cli
jle
cmp
jmp
repnz
xor
pusha
jnp
test
cltd
mov
sbb
pop
ffreep
inc
daa
das
ja
dec
mov
cmovl
ret
sub
call
add
leave
in
inc
push
or
in
push
lds
insb
inc
daa
xchg
loopne
inc
xlat
movsl
mov
adc
and
cmp
or
push
outsl
push
xchg
jo
cmp
lods
sub
lds
push
lcall
sub
jge
cwtl
mov
adc
adc
pop
jae
loopne
cmpps
sub
sbb
jns
pop
fnstenv
cmp
adc
and
mov
mov
or
lret
jmp
jbe
ja
push
leave
pop
inc
pop
mov
mov
dec
dec
inc
adc
dec
lret
pop
push
lods
jbe
sub
dec
add
aaa
or
jo
xchg
and
xchg
inc
pushf
pusha
ret
imul
decl
jl
lcall
movsb
ljmp
xor
cltd
mov
in
sbb
pop
mov
pushl
mov
inc
and
xlat
loope
stc
movsb
inc
adc
scas
inc
push
sti
dec
mul
rorl
dec
push
inc
push
arpl
or
push
pop
ljmp
fs
jns
inc
mov
lcall
and
push
and
push
mov
cld
pop
lods
popa
mov
dec
inc
inc
mov
and
movsl
pushf
js
clc
pop
in
ss
lcall
sbb
lock
mov
adc
push
lods
insl
pop
ror
cmp
cmc
in
mov
mov
orb
cli
push
loop
das
lret
popa
push
add
inc
dec
pop
and
and
das
shrl
and
jne
add
adc
sti
arpl
in
sub
in
fwait
or
mov
jg
pop
js
loope
addl
in
out
stos
std
xchg
insl
dec
cwtl
imul
sahf
pop
cli
jb
and
mov
daa
addr16
imul
mov
fwait
push
daa
jne
cltd
test
fistpll
push
inc
adc
sub
fwait
lea
aad
aad
int3
jae
dec
dec
pushf
adcl
test
dec
fst
push
sub
ljmp
dec
int3
mov
inc
insl
mov
imul
push
clc
xor
pop
pop
or
adc
lcall
push
clc
mov
adc
push
test
sub
and
or
xchg
pop
add
xchg
mov
js
in
xchg
xor
lret
cli
hlt
cld
xchg
push
adc
decb
or
cmpsl
pop
mov
xor
loop
sbb
imul
add
inc
mov
mov
mov
gs
xchg
repnz
test
cmp
or
inc
les
lahf
pop
push
and
jb
in
jge
push
sti
and
enter
xor
inc
xor
lcall
test
jmp
jno
inc
or
jg
and
adcb
xor
mull
add
sbb
dec
mov
adc
mov
and
sbb
pop
inc
add
cs
mulps
sbb
inc
jno
push
bound
dec
nop
dec
gs
scas
push
add
cmp
jge
mov
jbe
jecxz
inc
ret
adc
inc
mov
dec
dec
lock
add
xchg
xchg
psraw
dec
push
in
cltd
lret
adc
in
sarl
cmp
test
scas
dec
mov
enter
mov
dec
pop
dec
inc
icebp
daa
lods
hlt
mov
movsl
or
cmp
lods
pop
mov
pop
push
mov
sbb
and
cmp
dec
sbb
add
xor
int
int3
and
stc
mov
int3
pop
xor
notb
fnstsw
jne
roll
sbb
bound
lea
lds
mov
iret
mov
divl
icebp
pop
hlt
or
mov
test
sub
stc
jmp
xor
int
cmp
mov
xlat
popf
and
sub
and
and
inc
xor
orl
cmc
inc
and
test
mov
cmpsb
shr
testb
test
stos
mov
jne
sub
nop
mov
xor
or
out
jae
add
test
rclb
sahf
divl
test
test
jecxz
dec
xchg
aaa
int3
lea
loop
lahf
ret
in
aas
popa
or
jmp
sub
lea
stos
addr16
addb
das
icebp
lret
ret
movsb
lods
cmp
add
add
insl
sub
lret
jle
add
lea
std
xor
fstpt
out
jl
out
pusha
lret
xor
sarb
cwtl
data16
mov
mov
mov
jl
mov
push
rcrl
gs
fwait
cmpsl
fxch
jmp
push
orb
ret
jmp
in
in
cmc
loop
xchg
daa
test
mov
cmp
sub
int3
jbe
xchg
in
sahf
xchg
ljmp
in
shl
jp
ja
stc
push
enter
nop
pusha
lods
andl
and
jbe
xor
push
loopne
push
mov
sbb
repz
cmp
mov
aam
xor
add
ljmp
xor
out
add
sub
lds
sub
inc
xchg
in
mov
faddl
pop
and
addl
add
push
rolb
sbb
enter
push
jbe
jno
ret
ja
into
mov
xor
pop
data16
out
mov
shlb
inc
jne
jle
inc
movsl
adc
push
mov
das
mov
pop
aad
lret
std
inc
scas
add
xor
xlat
pop
and
jns
bnd
imul
fistl
push
cs
loop
pop
pushf
mov
ficoml
sahf
mov
punpckhdq
in
repnz
aad
ret
jp
and
sub
loopne
mov
clc
out
icebp
or
addb
xor
inc
subb
paddb
mov
pop
lds
addr16
mov
xlat
inc
aas
xor
orb
dec
inc
or
or
add
push
xor
sbbl
push
aas
scas
and
sub
dec
mov
mov
imul
mov
cwtl
lock
xchg
mov
jl
jb
test
js
pop
sbb
mov
mov
ret
outsb
push
xor
xchg
cmp
dec
mov
es
notl
shrl
pop
add
inc
pushl
inc
test
je
inc
lcall
jb
ret
pop
test
jg
out
mov
inc
and
mov
inc
jbe
cld
in
int3
imul
in
xorb
mov
sub
cmc
and
dec
jl
imul
int
push
or
lods
je
imul
cs
mov
into
loop
xor
cwtl
lahf
addr16
add
packuswb
jno
pop
bound
paddb
jne
sub
pop
add
inc
data16
sahf
out
aas
cmp
inc
xchg
inc
lock
pop
loop
out
clc
jl
int
and
jge
cmc
scas
testb
pop
xor
pusha
add
cld
xor
cmp
aas
rol
rclb
sahf
sub
push
mov
adc
sub
cmp
test
jbe
lret
jae
xchg
push
jbe
gs
cmc
mov
loope
jp
jne
inc
cmp
iret
jae
push
loopne
cmpsb
js
and
push
bound
ret
out
inc
xor
out
lock
jl
mov
jl
mov
out
and
xor
push
add
arpl
jne
xchg
pop
sub
rol
dec
mov
sbb
shlb
roll
add
addr16
int
xor
les
pushf
inc
add
mov
pusha
or
cwtl
push
and
shlb
mov
add
add
dec
adc
and
jle
fmuls
xor
out
imul
inc
imul
les
fs
out
pusha
push
fidivl
dec
jno
insb
les
jo
insb
jecxz
jnp
in
mov
xor
js
gs
shll
mov
add
cmp
test
movsl
mov
bound
push
jg
jecxz
jle
xlat
mov
cmpl
xor
add
inc
cmp
fcmove
std
xchg
mov
iret
mov
push
ret
pop
popf
xchg
push
or
bound
mov
xchg
push
bound
mov
mov
inc
xchg
sub
lcall
inc
inc
mov
int3
dec
adc
rolb
in
jb
or
inc
inc
lea
fcmovb
dec
jo
mov
dec
cmp
int3
add
int
fdivs
lret
cmc
sbb
ljmp
into
jae
stos
mov
mov
mov
int
incl
shl
push
sbb
add
loopne
adc
or
pop
sub
cmc
pop
into
mov
jo
push
lcall
movsl
stos
movsl
adc
jo
and
xchg
and
movsb
lahf
and
cwtl
pop
shll
xchg
das
in
imul
inc
mov
test
addr16
sbb
jg
lods
jp
jp
icebp
imul
pop
test
hlt
cmpsb
inc
adc
fwait
adc
xchg
loopne
and
test
mov
cltd
gs
push
fadd
andl
xchg
fadd
mov
in
xchg
call
loopne
mov
inc
repz
loopne
loope
xchg
mov
push
in
push
inc
jmp
sbb
aad
mov
push
dec
jae
xchg
lcall
nop
icebp
adc
cltd
les
and
les
fbld
scas
jbe
outsl
lret
cmp
gs
jmp
inc
andl
sub
push
sub
adc
negl
fidivrl
stc
add
clc
in
lcall
shlb
pop
or
in
and
adc
xor
repnz
scas
mov
arpl
icebp
cmp
in
mov
ja
gs
int
lods
xor
lock
add
cli
clc
insl
loope
enter
xchg
fcom
push
into
ret
rol
neg
dec
aad
int3
rol
add
pop
imul
fcmove
int
call
adc
dec
ja
mov
shl
arpl
dec
and
sbb
fbstp
imul
jmp
outsb
inc
push
mov
pop
and
pop
or
mov
std
and
fisubrs
ret
pop
inc
data16
out
adc
mov
xor
arpl
adc
shll
xchg
and
jp
rcrl
sbb
inc
jecxz
popl
fucomip
jmp
add
testb
xchg
hlt
stc
hlt
jp
shl
gs
icebp
mov
int
jmp
jg
clc
mov
cmc
ljmp
repnz
nop
mov
push
inc
out
xchg
das
sbb
jb
std
sahf
mov
testb
ljmp
jbe
clc
cmp
insb
fcompp
aad
int
lds
push
pop
test
test
xchg
xchg
mov
clc
bound
sub
add
pop
aam
xor
inc
or
inc
and
jae
cwtl
fld
jb
push
fstpl
push
out
add
and
mov
jle
push
mov
sbb
or
dec
add
pop
mov
cwtl
repnz
les
push
int3
xchg
pop
cld
and
pop
testb
dec
mov
movsl
jnp
aam
xchg
push
xchg
test
and
jno
and
and
push
loopne
fstpt
pushf
xor
add
add
mov
fcomps
pop
repnz
clc
cmp
pop
push
inc
or
mov
out
cld
in
pop
mov
out
sbb
fs
flds
or
add
inc
pop
xchg
xchg
repz
mov
jmp
mov
mov
inc
in
xchg
add
inc
add
bound
push
inc
xor
mov
add
inc
and
sbb
repnz
loop
mov
push
pusha
mov
imul
dec
or
pusha
andl
dec
or
or
rolb
nop
popf
fmul
mov
mov
in
push
push
out
les
add
ret
add
jp
fbstp
in
pop
lret
call
inc
or
loop
rol
pusha
insl
add
jle
vcvtps2dq
jg
sub
push
push
add
imulb
adc
jae
out
add
sarl
add
popf
push
pop
push
mov
into
cmpl
rorb
xchg
inc
addl
mul
sar
cltd
mov
int3
inc
push
cmp
adc
jne
cmc
push
push
inc
push
mov
iret
jecxz
js
xor
bound
xchg
adc
sbb
popf
push
add
js
xchg
jae
and
sahf
pop
lds
mov
mov
rcll
sbb
push
push
mov
lods
add
sbb
pop
loope
dec
xlat
add
mov
dec
jg
dec
lret
adc
xlat
test
outsb
sti
xor
repz
lret
mov
add
cmpsl
stos
int3
mov
movsl
arpl
dec
loop
push
adc
lds
mov
shl
mov
adc
imul
or
test
sbb
push
inc
mov
imul
sbbl
sub
mov
cmp
xor
test
lds
cmp
xor
and
or
jge
incl
pop
sub
or
mov
pusha
movb
xor
xorb
mov
sahf
lods
fcmovnu
cmp
dec
push
sbb
or
pop
fidivrl
adc
add
mov
arpl
jb
sub
lods
mov
jmp
mov
xchg
in
xlat
add
test
int3
aam
xor
ficoms
int
jecxz
js
mov
lret
push
push
sbbw
mov
and
js
in
cs
push
mov
loop
cmp
cld
jge
sbb
add
lret
fcmovbe
xor
ficoms
pushf
add
mov
lret
movsb
xchg
cmp
lret
or
jmp
push
or
jbe
add
pop
and
pop
xchg
test
mov
xchg
jp
pop
push
fstps
repnz
in
loopne
push
cli
loop
mov
xchg
mov
shlb
xchg
fsubl
loope
aam
loopne
stos
inc
sub
enter
test
mov
or
sub
rorl
les
int
sbb
add
mov
cwtl
jp
push
rolb
pop
int
cmp
inc
jle
into
mov
mov
fstl
and
mov
outsb
rol
or
ret
out
cmc
mov
add
arpl
xor
popa
xchg
add
xchg
sub
mov
mov
fsubl
test
mov
mov
add
mov
or
int
movsl
repz
mov
lret
sbb
cmc
loopne
clc
dec
loopne
stos
dec
les
hlt
pop
xorl
fisttpll
leave
in
aad
mov
sbb
mov
adc
or
push
int3
sahf
inc
sub
sbbb
mov
mov
mov
push
outsb
push
loopne
jbe
jp
jge
out
sti
jne
sbb
adc
push
inc
inc
sbb
es
mov
adc
in
andl
push
jp
in
gs
mov
cmp
mov
mov
push
pop
fmull
inc
dec
lret
iret
inc
jge
xor
or
inc
into
adc
jmp
jae
in
test
inc
fcoms
inc
or
lds
movsb
shll
imul
sbb
ret
lods
jnp
inc
sub
repnz
and
xchg
cmp
pop
rorl
es
aad
mov
lret
mov
and
jmp
mov
mov
out
es
out
test
push
jae
pop
cld
jg
das
mov
maskmovq
add
iret
pop
pop
shlb
and
xor
mov
je
dec
adc
movb
mov
or
and
aam
xor
lea
gs
dec
daa
add
xor
lcall
dec
xor
js
cmp
sbb
sbbb
rcrl
mov
cmp
inc
xchg
add
inc
and
jp
in
movsl
lahf
rolb
in
out
add
or
inc
add
inc
notl
aad
or
jp
adc
xchg
fiaddl
push
sbbl
cs
dec
and
push
or
pop
push
dec
add
dec
fsts
and
ja
aaa
repz
xchg
mov
bound
mov
fisubl
loopne
hlt
test
inc
xchg
add
insl
jl
xor
sub
xchg
push
and
pop
mov
xchg
mov
xchg
add
jge
loopne
les
imul
and
aaa
in
scas
mov
aas
mov
mov
jg
xchg
dec
mov
jp
mov
and
cmp
adc
adc
lods
inc
sbb
mov
or
rorb
clc
xor
std
addb
sahf
jecxz
sahf
push
mov
int
or
push
ret
mov
jl
xchg
sub
cli
xchg
jno
dec
cltd
or
push
repz
enter
leave
lods
lock
adc
add
out
add
sbb
mov
adc
sub
pop
clc
test
orb
sbb
movsl
and
popf
movsb
sbb
inc
push
ret
stos
mov
mov
je
ficoml
retw
js
int
jmp
xchg
jae
imul
lret
add
les
push
adc
adc
icebp
loopne
push
rcl
int
rol
add
ljmp
push
mov
mov
dec
insl
enter
les
lds
loop
pop
add
movsl
daa
fcom
test
pop
out
jb
rorb
sub
mov
mov
cmpsl
clc
jno
inc
inc
or
lcall
xchg
push
cli
pop
xchg
dec
xor
inc
pusha
rolb
orl
add
filds
in
push
xor
enter
lret
hlt
mov
mov
in
ret
rcr
sbbl
stos
clc
cmp
js
les
inc
bnd
ret
mov
push
ficoms
adc
sub
stc
xchg
test
sub
lods
jbe
sub
push
popl
int
push
mov
fwait
addl
jl
mov
fdivrs
fidivl
push
lret
gs
pop
and
nop
leave
push
mov
dec
cmc
inc
adc
push
hlt
mov
add
loop
mov
add
clc
in
shll
movsb
xorb
movb
loopne
popf
cmp
push
rclb
repnz
es
hlt
aad
inc
addb
imul
mov
filds
sbb
inc
dec
mov
stos
jne
pop
popf
je
pop
orb
ds
push
dec
xchg
mov
inc
mov
mov
ret
jb
cmpb
mov
orl
jnp
bound
fnstsw
sub
pop
popf
pusha
pusha
ds
lods
popf
ds
mov
in
addl
aad
mov
mov
add
inc
inc
pop
loop
and
in
cmp
scas
cmp
rcll
bswap
idiv
aad
jmp
pop
pushf
mov
sub
sti
dec
addb
mov
push
outsb
lcall
inc
or
add
out
jp
sti
clc
mov
push
cwtl
push
int
movsb
lds
cmp
jae
sub
pop
aas
jno
jge
mov
loope
loopne
pop
adc
dec
mov
aas
dec
or
dec
mov
lds
and
cld
test
mov
mov
mov
mov
repz
ret
push
mov
fstpt
enter
int3
ret
iret
out
xor
les
push
enter
fcmovbe
nop
mov
sub
sbb
fisttpll
fcmovb
inc
push
aas
repnz
mov
dec
cwtl
mov
inc
loopne
push
xor
dec
addb
js
fs
jl
or
jge
push
inc
mov
mov
mov
fxch
cmp
adc
aam
in
scas
inc
xor
add
out
stos
or
insb
mov
lds
pop
inc
push
mov
jnp
sub
or
loope
cmp
fmuls
xchg
sub
dec
push
out
mov
in
test
rorb
push
jg
push
jl
inc
cltd
jle
pop
imul
ror
inc
jmp
repnz
adcl
and
jge
lds
dec
mov
jle
bound
xor
xorb
dec
xchg
mov
out
in
jge
xchg
add
gs
xchg
inc
mov
int
aam
jns
dec
dec
lea
icebp
icebp
mov
hlt
sbb
lods
jmp
arpl
mov
int
insb
push
enter
movsl
mov
inc
jge
int3
dec
fs
inc
and
in
ja
xchg
je
xor
jbe
cmpsl
and
xor
imul
cmpl
imul
mov
arpl
out
enter
leave
subb
mov
dec
mov
into
dec
sbb
rolb
orl
inc
subb
std
push
fldenv
and
dec
cmp
xchg
inc
push
movsb
mov
pop
add
jb
lock
sub
jo
mov
ret
outsl
cmpsb
mov
sarl
mov
pop
push
xchg
popl
pop
xchg
adc
push
lds
mov
aad
fwait
nop
pop
outsb
fnstenv
xor
popf
jae
dec
mov
addb
in
sub
dec
dec
test
mov
mov
push
ret
xorl
inc
inc
add
pop
sbb
ret
aas
cli
sbb
les
inc
fistps
fs
add
rcrl
inc
movsb
mov
das
and
and
mov
jp
insb
pop
jno
lods
jnp
stos
stos
into
inc
clc
lahf
popa
push
lea
mov
ret
stos
cltd
repz
fwait
dec
lret
out
pushf
xchg
pop
add
add
ja
cmp
je
bound
jge
xchg
ret
mov
adcb
ret
add
sub
and
int3
dec
bound
dec
push
inc
dec
rolb
xchg
js
push
ret
pop
or
rcrb
lret
sbb
cmp
xchg
jmp
cmp
fidivrs
inc
dec
lret
sub
dec
int3
cli
aad
xchg
cs
mov
es
or
insb
aas
mov
imul
fcomps
mov
adc
xchg
mov
aas
cs
pop
test
aas
dec
in
push
addl
xor
add
mov
aad
push
fcmovbe
dec
or
rorl
adc
xchg
nop
shlb
dec
sub
stc
cwtl
xchg
push
rolb
push
mov
pop
mov
jne
aam
out
adc
enter
aad
dec
add
push
cmpsb
iret
pop
push
fisubrl
into
xchg
xchg
jo
lock
ret
fisttpll
adc
mov
lahf
or
xor
stos
xchg
jecxz
cs
fildll
xchg
xchg
lcall
push
in
add
mov
mov
mov
add
inc
pop
mov
pop
pushf
dec
pop
xor
fimull
or
dec
and
ret
mov
es
cld
xor
ret
fistl
xchg
pop
test
cmp
iret
stc
in
ret
xchg
jl
dec
sub
add
ja
pop
adc
cs
cmp
repnz
mov
or
mov
sub
mov
arpl
out
scas
rolb
jno
jnp
imul
or
add
mov
stos
xor
jle
dec
dec
jge
cmpsb
faddl
ret
push
mov
xlat
int
lret
rclb
add
push
cmpsl
and
int3
lock
jmp
add
fcoms
mov
push
adc
dec
lcall
test
mov
mov
jno
push
fsts
mov
push
xor
cmp
popa
mov
inc
inc
mov
in
dec
inc
into
call
dec
test
bound
fscale
adc
enter
mov
icebp
ja
in
stc
fmull
es
lea
jnp
jne
jge
pusha
les
ret
and
push
inc
mov
rcr
enter
popl
mov
xor
jb
ds
jl
andl
add
cli
push
xchg
cmp
lret
les
mov
fistps
popf
arpl
cld
lea
push
hlt
pop
add
fistl
popf
xlat
and
mov
mov
pop
arpl
dec
icebp
fwait
xlat
adc
xchg
jno,pn
sbb
daa
mov
xchg
and
ss
inc
cltd
adc
int
jge
aad
xchg
xchg
mov
out
pop
mov
or
push
adc
gs
xchg
sbb
cwtl
leave
inc
xchg
adc
dec
sub
pop
push
mov
inc
add
inc
inc
outsb
or
rol
rcr
or
mov
inc
sbb
dec
imul
fwait
inc
pusha
daa
or
xchg
mov
mov
pop
mov
fdivr
dec
mov
ror
mov
jmp
mov
or
mov
push
adc
add
inc
push
jb
jge
and
lods
xchg
sarb
sbb
xchg
dec
xchg
stos
ljmp
fmull
or
add
es
dec
inc
pop
sbb
lcall
inc
aaa
add
outsb
jbe
cmp
cs
xor
cltd
sbb
mov
sub
and
pop
xor
clc
int
xor
sti
cmpsb
cld
push
std
shll
dec
jecxz
stc
rclb
dec
sub
addl
sbb
pop
mov
pop
xchg
pop
pop
test
outsl
popl
xchg
push
cli
jl
push
cli
int3
mov
inc
jo
add
pop
inc
mov
mov
adc
popl
fldcw
xor
gs
fistl
mov
and
jge
or
add
in
and
in
test
dec
outsl
lods
test
int
mov
dec
pop
xchg
or
mov
add
or
and
int3
rolb
in
push
test
xchg
fisubrs
pop
frstor
mov
xor
stc
aam
nop
mov
les
adc
bound
fmull
or
call
jo
xchg
insl
xchg
xchg
out
add
jo
shlb
pusha
scas
mov
inc
andb
xor
push
mov
idivl
ret
jge
popf
cmpl
xchg
and
les
fsubrs
sbb
mov
mov
imul
and
dec
push
rcl
dec
mov
shl
or
push
jp
mov
into
push
fwait
sbb
adc
iret
mov
clc
test
cmc
fcmovnb
dec
je
mov
cli
xor
cmpsb
sbbb
add
lret
inc
inc
xor
jno
out
int3
mov
mov
mov
xchg
pop
mov
sahf
rclb
sbb
xchg
enter
add
movsl
xchg
js
rcll
sbb
js,pn
cmpsb
incb
adc
shll
pusha
jl
mov
aad
sub
jns
stos
dec
fisubs
leave
push
lcall
jne
dec
add
sub
xchg
mov
and
inc
add
or
clc
sbb
loopne
cmp
or
stc
xor
inc
call
push
inc
lret
sbb
pop
mov
jbe
andl
cli
gs
sub
popa
add
xchg
and
inc
sahf
push
test
pop
xor
pop
or
sbb
je
and
call
mov
arpl
inc
or
push
pop
sbbb
mov
pop
jne
mov
push
jo
or
call
in
sbb
add
jmp
aam
paddd
jge
ret
loop
mov
cmpsb
test
add
and
mov
js
mov
xchg
pusha
add
cli
pop
dec
mov
xlat
mov
dec
pop
mov
ljmp
loope
fs
aas
test
subb
push
fsts
xchg
mov
mov
jmp
and
out
movb
test
dec
jl
add
mov
imul
xor
gs
roll
and
in
enter
mov
test
jl
dec
add
inc
or
outsb
cli
popa
inc
idiv
sarb
cwtl
dec
jo
and
mov
rol
push
addb
xor
mov
fwait
lds
rcr
xchg
and
mov
pop
mov
into
adc
inc
sar
lods
lds
outsb
inc
pop
test
pop
jge
bound
push
xchg
movsl
mov
shll
mov
xchg
xlat
lods
sarb
cmpb
add
pop
arpl
mov
shrd
dec
lret
mov
fdivs
je
add
rcrb
std
or
shll
test
xchg
nop
and
mov
loope
mov
mov
in
testl
pop
sbb
push
arpl
jecxz
xor
cmp
add
leave
movsb
dec
adc
inc
jmp
and
cli
jp
pop
push
arpl
into
in
aad
pop
pop
sub
sub
cwtl
bound
test
xchg
outsb
and
roll
movzbl
inc
pop
inc
inc
add
pushf
movsb
int3
lahf
jge
pop
cmp
lahf
shl
data16
mov
sarb
or
in
or
out
or
fmull
mov
add
sbb
sarb
inc
mov
lods
adc
pop
mov
sub
and
sbb
jns
mov
xchg
scas
push
jp
movsl
jo
cmc
arpl
add
inc
jle,pt
inc
shlb
rorl
dec
jns
test
xchg
or
ljmp
push
sub
adc
and
ret
pop
or
sub
push
sbb
test
inc
mov
inc
pop
ret
pusha
inc
jae
mov
add
push
add
call
movsl
or
lahf
add
les
mov
cmp
push
jl
sti
pop
shlb
fs
mov
add
xlat
mov
or
mov
or
mov
les
or
adcl
bound
hlt
dec
ret
mov
das
dec
in
mov
cmp
jnp
and
orb
roll
mov
subb
aas
testb
es
xchg
ds
sbb
roll
outsb
push
stc
lods
adc
pop
add
movb
bound
test
cmpsb
xor
cli
out
xchg
inc
insl
mov
movsl
and
loope
mov
dec
dec
outsb
adc
sub
aad
sub
in
inc
cmp
mov
cld
into
lods
cmp
inc
test
add
lret
sbb
mov
lds
push
mov
out
int3
je
pop
or
lea
sbb
test
adc
icebp
push
les
jmp
adc
andb
xchg
xor
xchg
int
call
dec
cmpsl
mov
shlb
movsb
daa
out
push
or
mov
aad
jb
push
mov
add
xchg
jl
movsb
cmpsb
loopne
and
in
push
ret
adc
mov
mov
xor
dec
cmp
lret
nop
jle
inc
nop
adc
mov
cltd
add
dec
fwait
inc
insl
mov
mov
out
into
xchg
add
mov
push
and
lret
jno
sbbl
pop
int3
stos
icebp
sbb
sahf
outsb
fs
or
pusha
jmp
scas
sub
shr
cli
ret
sub
mov
lock
mov
push
inc
mov
bound
stc
xor
pop
or
nop
adc
push
mov
repnz
xchg
out
mov
into
jae
push
icebp
xchg
xchg
scas
cltd
mov
pop
dec
ss
inc
or
inc
andb
rcrb
adc
jecxz
mov
outsl
inc
gs
jge
adc
dec
shlb
push
pop
inc
pusha
stc
les
sbb
jle
ror
movsb
arpl
movsb
jae
das
or
call
push
jecxz
mov
sti
test
shl
loope
sbb
repnz
scas
cli
lock
add
mov
ljmp
test
mov
add
or
mov
or
xchg
adc
in
and
loopne
addr16
sub
outsl
sub
adc
ds
mov
and
hlt
sarl
mov
mov
mov
icebp
push
scas
adc
inc
cmpsb
adc
add
mov
es
jp
xchg
xor
rcrl
out
daa
xlat
jb
pop
int
out
adc
out
jmp
lods
out
shlb
lahf
aad
inc
jp
adcb
push
push
ds
aad
xor
fiaddl
ds
mov
add
clc
mov
xchg
into
sub
test
inc
addr16
sarl
inc
mov
xchg
lods
xor
insl
shlb
add
mov
adc
push
cmp
inc
outsb
push
int3
adc
pop
add
mov
insb
and
pop
push
or
add
ret
inc
test
int3
push
inc
mov
adc
mov
arpl
add
add
dec
add
or
insl
scas
xchg
and
int
lcall
loop
data16
sbb
fists
ficompl
jmp
test
or
out
andb
or
sub
sbb
imul
rorb
mov
cli
test
add
dec
les
loopne
cmp
push
mov
out
aad
aaa
push
popa
sub
mov
insl
mov
inc
pop
inc
insb
addb
xchg
sahf
dec
in
stos
jno
scas
adc
cmp
in
das
mov
popl
dec
dec
fisubrl
add
jl
lahf
xchg
ret
sahf
pop
addl
add
add
bound
push
lods
lcall
push
cmp
cmpb
out
mov
ret
fbld
mov
push
mov
xor
fs
and
mov
arpl
dec
pop
push
ficomps
inc
or
mov
adc
cmp
xchg
pop
loope
inc
imul
shl
cltd
dec
push
call
rcl
fwait
sarb
adc
ret
pop
pushf
mov
sbb
jge
and
pop
sub
push
out
xchg
inc
add
mov
test
pop
dec
int3
jns
popa
cmp
mov
les
into
jmp
or
push
inc
ds
test
pusha
add
sub
cltd
sahf
and
insb
stos
inc
push
repnz
inc
repnz
faddl
adc
dec
jnp
jbe
push
push
mov
xor
add
arpl
fisttpl
add
push
xorb
mov
sbb
loop
xor
fidivl
ljmp
out
pop
jne
lds
mov
sti
pop
fcmovnb
notl
mov
mov
jb
pusha
add
sub
in
xchg
mov
inc
add
rclb
mov
popf
adc
or
sti
hlt
es
aam
ret
paddb
and
pop
sub
lock
xchg
lret
call
and
out
dec
add
vmsave
int
push
inc
inc
xchg
adc
aaa
sarb
f2xm1
mov
adc
jecxz
jmp
pop
adc
pop
cmp
jg
mov
movb
cli
lods
jle
adc
xlat
adc
mov
mov
mov
mov
imul
jb
xor
pop
dec
dec
cmpsl
mov
movl
dec
xor
pusha
loope
sbb
pop
dec
pop
mov
test
jno
mov
cmp
jp
lds
xchg
test
add
push
cmp
test
add
xor
jl
addr16
leave
push
jnp
or
inc
jmp
les
test
sbb
ret
fs
stos
ljmp
aaa
inc
add
out
stc
rclb
outsb
mov
inc
dec
loope
push
add
mov
and
sbb
sbb
mov
mov
pusha
mov
ret
leave
cmc
test
inc
ret
out
lret
nop
sub
cmp
xchg
or
and
mov
stos
mov
ret
push
xor
sub
insl
inc
jp
test
cltd
arpl
and
lock
dec
sub
iret
mov
gs
arpl
push
or
aad
iret
inc
jo
or
lods
stc
add
lret
sbb
test
imul
loope
xchg
jb
js
mov
push
adc
loope
fcomps
dec
fcomp
int
xchg
stos
sbb
call
cmpb
pop
jl
imul
arpl
push
add
out
mov
xor
cmp
jp
cmp
jle
outsb
cmp
dec
mov
rcl
inc
aaa
mov
in
aad
call
scas
mov
cmp
xchg
push
xor
cmpsl
fisubrs
in
jb
and
call
xchg
faddl
jo
xor
jo
sub
inc
adc
adc
jmp
ret
test
mov
add
mov
arpl
mov
mov
jns
cli
jnp
lret
pop
ret
cmp
sbb
les
int3
ret
ret
cmp
shrb
or
sbb
pop
inc
xorl
dec
pop
xchg
ss
in
fimuls
jg
iret
mov
xor
in
mov
jp
ljmp
lea
aaa
testl
loop
xor
inc
cmpsb
bound
pop
add
jp
mov
mov
cmp
xlat
clc
adc
mov
repnz
xchg
int3
ljmp
dec
xor
ret
push
popl
sbb
mov
mov
ret
mov
pop
mov
jbe
or
push
roll
addl
adc
dec
subl
mov
sub
lea
inc
into
test
push
ret
out
jp
cmp
repnz
mov
mov
pop
stos
mov
push
cld
xchg
rcrl
mov
icebp
movsb
push
inc
or
imul
inc
or
push
sbb
jle
insl
mov
fmull
and
mov
xchg
bound
push
pop
inc
test
ret
mov
movsl
dec
add
popa
sbbb
das
movsb
mov
sub
adc
cmpsl
fstpl
jo
push
add
ljmp
call
fists
lods
iret
and
xchg
les
dec
jg
or
adc
fldenv
test
dec
push
mov
adc
addb
xor
push
add
out
outsl
sbb
ret
or
xchg
stos
hlt
jo
dec
cmp
sub
je
je
outsl
jg
rol
add
outsb
dec
sbb
sarl
sbb
cmp
test
popf
sub
inc
lcall
or
mov
ret
fadd
sub
dec
lahf
scas
dec
inc
mov
adc
nop
scas
ret
mov
xchg
into
icebp
sbb
pop
push
adc
mov
les
push
inc
mov
xchg
inc
jl
fistl
repnz
add
lods
and
shrb
cli
fdivs
mov
imul
xchg
sarb
jge
jge
pusha
push
movsl
xchg
sub
fimull
xchg
cmp
in
cmpsl
subb
mov
out
and
or
jb
jecxz
xchg
enter
pushf
shlb
cli
jecxz
xlat
mov
call
sbb
out
xor
dec
cmpsb
push
adc
andl
lods
js
fldl
cli
repz
sbb
addl
aad
xchg
push
pop
lea
loop
add
in
scas
ret
movsl
rolb
add
imul
xor
add
lret
in
fcoml
jo
fisubrs
in
mov
adc
mov
add
arpl
mov
adcb
sub
cli
icebp
push
push
mov
adc
mov
push
mov
nop
roll
mov
out
mov
lret
inc
cmp
ljmp
pop
loop
inc
inc
jbe
pop
cmp
add
cmpsw
bound
xlat
clc
adc
cmp
loopne
xchg
sbb
cmp
add
out
es
jnp
mov
icebp
pop
or
loope
pop
ljmp
dec
and
orl
les
mov
xchg
add
cltd
stos
rolb
pop
lcall
push
dec
stc
sbb
add
ret
movsb
nop
ljmp
xchg
pop
mov
mov
push
and
bound
dec
push
cmp
cmpsb
loope
or
ja
out
add
cmpb
inc
xchg
push
iret
test
dec
das
mov
insl
sbbl
xchg
push
push
inc
add
or
out
aad
fcoms
mov
cmpsl
pop
rorl
andb
loop
mov
incb
xchg
sub
pop
fs
outsl
push
addl
cmc
rol
loop
xor
fcmove
dec
ret
sbb
lock
push
ficompl
insl
cmpsb
adc
cmpsb
ret
jns
inc
lods
in
inc
xchg
inc
inc
cmpsb
inc
or
lret
movsl
shlb
or
xor
add
cwtl
pop
inc
xchg
imul
sub
aam
push
dec
add
scas
mov
jmp
fwait
push
xchg
cld
jae
mov
pop
scas
loop
test
dec
movsb
dec
add
lock
inc
addb
fcmove
push
adc
int3
lods
jae
je
mov
in
pop
test
xchg
jp
sarl
inc
mov
push
pop
add
jmp
shll
daa
jge
sub
push
les
fcomip
push
xor
push
sbb
push
rorl
jge
adcb
sub
mov
je
popa
test
rorl
inc
ret
jne
add
adc
inc
cmp
sti
pop
xor
jb
xor
mov
xchg
jns
or
popf
imul
or
mov
fdivr
mov
rcl
fidivrs
jno
fidivrl
in
jae
ret
mov
aam
sub
mov
in
mov
cmp
pop
jns
enter
add
xchg
insb
cmpsl
xchg
or
ret
jge
jne
mov
rcr
jb
jle
daa
inc
or
push
lds
push
pop
test
stos
jnp
xor
push
mov
call
repnz
mov
cld
into
inc
leave
test
push
push
jns
push
clc
sbb
cmp
inc
inc
lods
push
insl
subb
aam
orb
out
xchg
lds
test
out
ret
mov
xor
daa
es
cmp
adc
aad
mov
jecxz
cmp
push
imul
subb
mov
lods
scas
xorb
inc
xor
iret
in
enter
add
mov
cmpsb
sbb
mov
loop
out
jmp
mov
aas
repz
mov
jle
in
xchg
mov
int
xlat
fcoml
push
inc
loope
pop
xor
arpl
mov
or
dec
adc
imul
jae
cmp
jmp
rcrl
imulb
fimuls
xorl
sbb
test
insb
loopne
inc
bound
xchg
push
adc
icebp
cli
sbb
in
lds
andl
xchg
int3
mov
out
flds
fsubs
mov
mov
bound
jge
push
pop
adc
ljmp
sub
into
mov
insl
xchg
or
lock
mov
xor
fwait
sti
mov
loop
ds
xchg
loopne
cs
pusha
ljmp
xor
test
rcrb
dec
pusha
or
add
xchg
sbb
add
popf
inc
sar
test
xchg
lahf
aad
push
scas
gs
xor
jl
sub
sbb
jle
jno
jbe
ljmp
das
loope
mov
and
mov
daa
enter
jecxz
add
into
xchg
shlb
sbb
or
lahf
or
adc
inc
dec
xor
dec
pop
mov
jle
bound
shlb
cmp
pop
sub
add
sub
mov
xlat
adc
xor
mov
dec
dec
je
lds
mov
ret
sbbb
addl
faddl
mov
dec
add
popf
and
adc
popa
mov
push
in
adc
shr
xorl
mov
lret
add
mov
mov
aaa
pop
stc
mov
rclb
test
add
sub
xlat
loopne
xchg
cli
out
pop
cmp
inc
and
pop
jmp
movsl
out
lret
scas
jns
std
mov
add
inc
mov
ss
aam
add
pop
mov
and
out
lcall
fidivl
xor
pop
mov
push
or
pop
in
stos
jecxz,pt
outsb
out
fcoms
push
sti
arpl
pop
fwait
push
inc
jns
or
dec
xchg
cmpl
add
mov
xlat
or
mull
ja
ljmp
lret
sub
mov
sub
inc
scas
pop
hlt
pop
ficoml
add
push
cld
ret
fldl
les
es
mov
and
jge
mov
pop
mov
adc
loopne
in
inc
mov
gs
nop
jmp
dec
mov
mov
or
mov
outsb
jp
xchg
or
out
adc
bound
lret
mov
pop
arpl
fs
sbb
cmp
popf
sahf
aaa
xor
sahf
loope
jb
mov
jle
es
mov
push
dec
rorb
mov
fisttpll
movsb
pop
movsb
ds
mov
sbb
xchg
jnp
das
ss
outsl
lods
jmp
inc
sbb
cs
lea
add
jns
add
mov
fnsave
jge
mov
pop
add
xor
repz
js
add
clc
std
dec
in
xor
test
setp
adc
push
lcall
dec
jge
inc
cli
stc
jge
dec
lea
fdivs
pushf
ljmp
mov
mov
test
mov
jno
adc
xchg
adc
pop
adc
add
dec
inc
xchg
add
stc
mov
mov
scas
test
mov
jbe
insl
and
xchg
das
fidivrl
add
dec
xchg
inc
cli
ljmp
xchg
add
mov
int
in
jge
std
lcall
clc
pop
jecxz
xor
aad
sarb
mov
std
enter
xor
xchg
mov
mov
mov
lods
cmpsb
pop
xchg
fs
scas
mov
icebp
and
mov
or
fidivl
shlb
adc
pop
push
inc
ss
mov
pop
xchg
rcrb
push
dec
mov
int
cmpb
cmp
sub
in
enter
dec
shll
fidivrs
lret
fidivrl
mov
inc
or
jp
pushf
push
ss
xchg
cmpb
inc
into
bound
shlb
pushw
fcomip
aam
push
inc
push
and
dec
inc
aad
lock
push
mov
or
subl
shrb
xchg
cmp
xor
sub
test
and
jmp
push
arpl
xor
jbe
add
outsb
or
cmp
dec
loope
push
push
test
int
xchg
pop
jo
mov
mov
rcr
jns
pmulhuw
inc
ret
push
cmp
mov
or
ror
or
lods
enter
xor
push
or
fcompl
pop
sub
jne
cmp
hlt
mov
ljmp
insl
xor
pop
out
sub
pop
jo
inc
std
and
mov
pusha
repz
ss
das
sub
bound
popa
imul
mov
sub
dec
sub
stos
into
mov
adc
insb
negl
test
outsb
push
hlt
pushf
jb
out
sub
jo
or
adc
inc
js
je
xor
push
jb
dec
adc
add
dec
xor
add
fwait
mov
fnstsw
aaa
dec
xor
cltd
or
out
xor
shlb
dec
mov
or
mov
cli
and
lock
sub
mov
je
out
es
fists
push
mov
push
push
mov
mov
xchg
fisttps
daa
outsb
inc
mov
test
ja
push
sbb
or
or
push
push
addr16
arpl
shlb
lret
cs
call
shll
loopne
jb
push
dec
insb
ss
mov
loopne
push
push
jo
data16
add
jb
xchg
popa
ljmp
stos
or
inc
xchg
xorb
daa
jl
push
js
or
adc
ret
aaa
xchg
push
sub
push
sbb
push
scas
je
inc
rcl
data16
xchg
dec
movsb
xchg
aad
fdivs
cli
or
cltd
jae
test
nop
sbb
mov
ja
mov
sub
jnp
sbb
cmp
jl
and
lock
sub
fs
imul
dec
push
lock
xor
and
test
mov
xlat
mov
sub
adc
pop
and
fs
insb
jne
int
jecxz
insb
jp
xor
dec
sub
ljmp
adc
xor
cmpsb
rorl
call
sbb
rcll
cmp
mov
inc
cmpsl
ljmp
movsb
mov
jle
and
xor
fiaddl
push
rcrb
jno
cli
and
jp
xchg
rclb
test
fstps
jecxz
insb
pop
mov
addr16
cmpsb
xchg
fsubp
stc
pop
push
icebp
aad
leave
jmp
jo
mov
arpl
push
adcb
add
xor
and
pop
out
xchg
mov
push
jb
cmp
sti
fistps
push
cmpsl
repz
xchg
and
lods
mov
aaa
push
jo
call
dec
and
shlb
jne
push
and
mov
lods
inc
sub
or
ret
add
cmp
lods
enter
int3
or
push
dec
fmulp
add
dec
popa
jbe
mov
inc
dec
push
insl
dec
xchg
dec
in
sub
inc
psrlq
popa
sbb
cmpsl
jb
xor
jne
sbb
jmp
sbb
cld
sbb
cmp
sbb
mov
loope
push
in
push
jo
mov
mov
adc
add
or
arpl
sub
push
int3
cmp
cs
cmp
nop
icebp
and
push
inc
dec
pop
cmpsl
cmp
es
dec
dec
loopne
in
stos
sbb
jne
into
dec
ja
imul
push
loop
push
out
call
mov
jmp
ret
inc
pop
mov
test
mov
or
and
insb
jno
ret
pop
arpl
imul
pop
inc
jnp
xor
adc
outsb
popf
or
mov
push
mov
in
in
xor
xor
mov
mov
or
imul
cmc
and
adcl
lds
lret
mov
popa
push
xor
rcr
or
dec
in
push
pusha
imul
fcmovb
inc
sbb
lret
cmp
add
mov
fnsave
repnz
jo
add
lds
xor
add
pop
cltd
js
add
or
out
push
pop
add
adc
dec
xchg
push
sahf
inc
out
inc
mov
jno
inc
stos
outsb
jno
into
jg
sbb
adc
jb
mov
aad
ja
pop
and
push
mov
fs
pop
push
cmp
fisttps
iret
push
pop
ret
imul
cmp
jbe
sbb
sub
out
mov
push
or
je
push
mov
and
adc
in
add
in
or
sub
mov
int3
in
mov
inc
cld
and
ljmp
push
rcrb
out
ds
shl
push
dec
push
pop
sub
pop
scas
inc
arpl
cmpsb
