sbb
add
mov
dec
test
les
dec
repz
sbb
pcmpgtw
mov
add
ds
pushf
rcr
add
jno
mov
push
enter
xorb
stos
dec
icebp
adc
test
and
addr16
push
sbb
out
pop
mov
lret
setge
movsb
push
popf
mov
inc
jmp
mov
loope
mov
dec
orl
xor
mul
stc
mov
pop
jae
jae
das
jl
test
insl
pop
pop
fsub
out
mov
xlat
insb
adcb
jae
sbbb
pop
jge
imul
ret
mov
fadds
xor
test
call
and
push
push
cmp
jno
jg
xlat
pop
test
mov
out
pop
stos
dec
inc
sub
aas
pop
jecxz
popf
sub
cltd
dec
jecxz
or
pop
sahf
xchg
xor
mov
dec
loopne
pusha
ds
xchg
jge
xchg
in
mov
test
fwait
mov
fucom
inc
pop
lahf
push
in
cld
out
dec
mov
test
push
jl
jbe
test
xchg
hlt
shll
jae
adc
push
pushl
sub
loope
push
aaa
push
clc
jbe
jp
repz
xchg
inc
out
lds
mov
cld
mov
mov
cltd
mov
loopne
cmpsb
stos
js
sub
xchg
xchg
jecxz
and
inc
or
adc
call
lods
push
mov
je
sbb
mov
fisttps
pop
xchg
fwait
inc
das
cmp
fcmove
mov
imul
lods
adc
and
fadds
in
xchg
and
xchg
lock
in
fs
lds
jmp
loopne
pop
mov
rorb
cmp
stos
sub
inc
arpl
cmpsb
sub
cmp
push
movsb
jne
push
cmpsl
pop
and
out
mov
in
mov
cmp
push
or
sahf
jns
cltd
outsb
js
or
xor
pop
mov
jnp
int3
into
jge
push
test
xchg
push
lret
bound
cs
cmp
je
sub
stos
or
xchg
out
hlt
leave
push
cmp
jle
and
and
out
mov
outsl
int3
inc
pop
frstor
dec
sarb
into
movlps
enter
push
mov
cmp
rolb
push
pushl
adc
bound
jae
xor
sub
std
lret
xlat
adc
mov
sbb
add
andl
pusha
lods
lret
jns
pop
pop
lcall
and
fcoms
fiadds
dec
test
movsl
mov
sti
adc
in
sbb
cld
in
int
pop
push
mov
lcall
dec
jecxz
fidivl
ljmp
pop
idiv
stos
pop
iret
cmp
dec
pop
pop
add
add
jg
outsl
xor
mov
jl
cmp
lods
pop
pop
out
pop
pop
adc
jb
pop
jp
push
and
iret
or
jmp
add
psrlq
or
fcoms
popf
and
mov
dec
cmp
mov
fwait
push
inc
fucomi
in
xchg
cmp
gs
add
jge
pop
or
pop
sub
das
insb
cwtl
lds
fldl
jae
inc
mov
dec
imul
xor
out
or
xor
std
mov
jo
jne
fsts
inc
aaa
mov
sub
jp
pop
sbb
sahf
mov
testb
dec
xchg
inc
rcr
rorl
leave
movsb
imul
jmp
push
fisubs
jge
sbb
and
jp
push
movsl
lcall
imul
jge
loopne
mov
test
pop
pop
dec
insl
push
test
lret
jge
mov
pusha
leave
jnp
mov
insl
push
inc
fisubrl
dec
in
orb
pop
and
daa
mov
stc
ds
pushf
fimull
xor
imul
mov
mov
lcall
cmp
cmp
push
push
in
adc
ljmp
cmp
into
xor
repnz
mov
jmp
sar
pop
ret
jbe
test
push
xor
inc
loopne
jle
icebp
sbb
sbb
lea
mov
cs
jge
push
ret
inc
fisubs
data16
aad
ret
pushf
in
mov
out
adc
xchg
lods
in
insb
ret
mov
jp
push
dec
mov
xchg
int
scas
dec
lods
ljmp
and
push
cmp
xchg
and
pop
das
jne
adc
fstl
movsb
pop
movsl
jl
popa
sub
lahf
mov
adc
cmpsb
out
pop
lock
adc
or
xchg
inc
in
addb
mov
je
lods
cli
lods
in
lret
add
dec
jbe
mov
cmc
mov
pop
outsb
dec
xchg
in
int3
sti
jmp
aaa
mov
loope
shlb
out
cli
xchg
sbb
insb
into
or
mov
daa
cmp
inc
inc
repz
lahf
jle
mov
pop
mov
dec
xor
mov
out
je
pushf
jp
sub
cmpsl
imul
fildl
mov
cld
mov
pop
or
lret
jae
xor
xor
adcl
addr16
es
loope
cmpsb
mov
mov
dec
lods
xor
push
sub
mov
lret
call
das
iret
add
sbb
sbb
iret
jecxz
movsb
icebp
repnz
ss
addl
mov
jecxz
sarl
ds
adc
inc
pop
mov
lret
or
xor
out
in
repnz
jl
cld
sbb
xchg
adc
xchg
sub
fdivrl
add
jne
and
pushf
mov
fs
pop
in
adc
jp
pop
fcmovnu
dec
and
add
adc
outsl
fidivrs
jl
ljmp
mov
xor
test
xchg
insl
mov
mov
clc
jbe
popa
add
roll
push
push
arpl
shl
repz
mov
sub
and
jae
test
out
mov
mov
xchg
pop
es
ret
je
mov
xchg
movb
and
dec
sub
mov
mov
adc
daa
pop
rcl
outsl
outsb
insl
jbe
out
inc
inc
push
push
jge,pn
xchg
adc
add
jmp
pop
dec
or
xchg
jae
inc
sub
les
jge
ret
shll
scas
test
mov
in
dec
xchg
lea
stc
pop
and
xchg
pop
subl
sbb
rep
orb
mov
in
dec
sbb
jns
sti
sub
mov
arpl
pop
pop
jl
mov
add
pusha
sub
popa
lret
repz
push
test
and
sub
daa
out
push
test
mov
xchg
les
push
mov
test
xchg
xorb
in
stos
sbb
push
imul
push
cmp
inc
push
jle
adc
adc
iret
push
xor
das
jns
inc
lcall
xchg
mov
in
test
sarb
mov
leave
shl
nop
mov
cmpl
cwtl
mov
jmp
inc
cmp
decb
mov
xchg
mov
or
imul
pop
test
les
jbe
adc
push
outsl
mov
push
js
js
sbbl
test
mov
aaa
add
xchg
jecxz
mov
aad
jbe
add
lods
sar
mov
jo
cmp
xchg
push
fadds
ret
lock
pop
stos
pop
xor
pop
addr16
cmp
dec
mov
mov
jl
js
lret
sbb
inc
outsl
inc
xchg
push
jecxz
adc
pop
mov
xor
dec
xchg
clc
xor
fwait
pop
enter
fisttpl
arpl
inc
xchg
dec
ljmp
push
and
jo
xchg
fisttpl
push
sbb
cs
pushf
or
xchg
incb
push
fs
jno
popf
popf
lret
sub
test
mov
pushl
jmp
rolb
stos
jns
clc
push
sub
or
or
adc
and
sub
std
cltd
mov
mov
xlat
insl
add
subb
andb
enter
jmp
and
std
ljmp
cmp
outsb
sbb
lret
in
mov
push
js
sahf
popf
or
xchg
xlat
inc
sub
cmp
cli
fbstp
dec
mov
adc
inc
mov
pop
push
lahf
jno
xor
leave
pop
pop
icebp
adc
hlt
cmp
rcrl
lods
xor
fcoml
pop
sar
xchg
cmp
and
or
adc
arpl
inc
xchg
xchg
mov
out
xchg
int3
dec
jmp
add
inc
xor
scas
hlt
xchg
ss
fdivl
push
cmpsb
push
dec
mov
sbb
shrb
mov
cltd
lock
outsl
pop
shlb
sarb
cltd
das
gs
stos
adc
inc
push
fiaddl
stc
sub
cmc
dec
and
out
dec
mov
lea
fsubrs
mov
insl
mov
popa
jl
sbb
dec
sub
push
lods
jp
pop
incl
fsts
xchg
and
or
xchg
cmp
cltd
pop
lahf
add
push
test
outsl
fdivrs
push
inc
push
psllw
cmp
dec
dec
fisubrs
jge
push
jbe
cli
jo
imul
cmp
aad
arpl
outsb
adc
imul
mov
loop
and
adc
sub
fs
and
jp
add
and
sbb
mov
add
arpl
je
mov
arpl
xchg
ret
push
push
dec
or
mov
aaa
jbe
xorl
shll
fcoml
fwait
and
ds
add
test
xchg
aas
movsl
gs
and
insl
xlat
push
push
sbb
iret
mov
pop
imul
in
add
lahf
push
sarb
push
and
pop
gs
outsl
cmp
pusha
subb
cmp
lret
test
xchg
xor
xor
pop
test
lds
imul
inc
or
fldenv
std
aaa
add
repnz
sub
mov
sbb
cmp
and
stc
mov
mov
insl
sub
nop
cltd
aas
repnz
mov
lret
add
xor
xchg
inc
push
adc
loopne
and
mov
inc
jecxz
lods
pushf
xor
fwait
sub
dec
sar
loopne
xchg
cli
push
in
mov
std
scas
pop
and
jg
xor
inc
mov
inc
jae
sbb
or
scas
mov
or
ja
mov
adc
pop
pop
out
fiadds
mov
inc
int3
sbbl
add
mov
out
out
scas
dec
aad
adc
or
inc
push
into
jmp
push
stos
hlt
out
pop
pushf
aas
jno
dec
out
bound
dec
cld
jmp
jp
mov
insl
inc
popf
loop
dec
xor
mov
repz
in
dec
popf
dec
out
rcl
add
mov
sbbb
jns
add
idivb
add
lahf
aam
imul
jne
loop
cmp
fsubl
xchg
daa
enter
popf
scas
cmp
sbb
rcll
push
xchg
sub
ret
nop
rcl
push
and
xchg
xor
xor
clc
mov
aam
pop
mov
fs
fldenv
cmp
dec
loopne
sarb
fildl
in
call
push
loope
enter
insb
push
in
mov
roll
cmp
ss
mov
imul
sbb
lods
cmp
inc
out
test
mov
xor
les
ficompl
imul
sbb
sarl
and
loopne
jmp
fwait
mov
scas
push
mov
in
pop
cmp
shl
negl
inc
in
sub
stos
call
xchg
dec
dec
nop
dec
jl
fwait
dec
and
mov
pop
cmp
cmpsb
cmp
iret
mov
pop
arpl
xlat
push
insb
dec
dec
mov
sbb
hlt
aas
call
arpl
sub
movsl
insl
push
pop
mov
mov
sar
or
addr16
add
jle
mov
mov
enter
daa
pop
and
jg
dec
mov
mov
mov
je
out
leave
inc
adc
sbb
cmp
cmpsb
leave
addr16
ret
jmp
lods
lret
pusha
push
test
lea
add
sbb
jl
jle
pop
addl
out
jo
sbb
in
dec
sub
jb
dec
scas
mov
out
mov
insl
scas
mov
mov
outsl
mov
mov
mov
cmp
xchg
imul
and
lahf
lret
cmc
push
jne
push
mov
jb
jnp
das
insl
lahf
lds
lods
into
mov
mov
inc
pop
aam
dec
mov
aas
or
scas
or
sbb
in
imul
leave
negb
pop
adc
loopnew
sar
add
enter
pop
cmp
or
aad
jb
scas
jle
enter
sahf
in
shrl
cmp
cmpsb
mov
sti
push
add
xchg
dec
push
xchg
outsl
xor
dec
fstps
xchg
xchg
cmp
scas
inc
lods
inc
sbb
lds
enter
or
cmpsb
test
adc
cmpsb
movsl
mov
add
lods
sub
out
cmp
gs
cmp
insb
add
daa
jecxz
cltd
cltd
testb
adc
testl
mov
inc
subl
test
push
movsb
pop
scas
bound
jp
pop
or
dec
cmp
jecxz
adc
jae
mov
or
fs
sub
xchg
sbb
aaa
ds
iret
aas
jecxz
push
cmpsb
xor
addb
int3
mov
mov
out
aaa
mov
stos
push
cltd
push
dec
pop
pop
xor
mov
hlt
xchg
cld
mov
add
scas
nop
cmpsb
lods
dec
pop
pop
das
call
dec
xor
cwtl
mov
sarb
popa
mov
or
inc
scas
outsb
or
rolb
push
in
sti
out
mov
insl
mov
les
ss
stc
lret
js
jb
pop
int
mov
add
inc
std
push
xor
or
add
cmp
push
ja
in
inc
fwait
jl
add
cmpsl
adcb
scas
cli
jns
sub
push
mov
jp
push
jmp
iret
push
ror
leave
push
test
xlat
xchg
test
jmp
pop
adc
out
mov
pushf
mov
lods
pop
iret
pop
inc
in
sbb
push
jnp
out
imul
and
js
xlat
jecxz
dec
lds
xor
sbb
lock
outsl
sub
test
test
cmpsb
pop
ret
mov
mov
and
or
pop
outsl
imul
dec
decl
lret
mov
sub
repz
dec
cmc
push
jns
cltd
movsb
outsl
test
cwtl
cwtl
dec
pushf
pop
adc
fcompl
arpl
dec
test
lahf
mov
push
sbb
push
lcall
pop
mov
inc
cmp
mov
fnstenv
leave
xor
mull
testl
jnp
fdivl
das
jbe
addb
mov
test
jns
sti
pop
mov
in
arpl
pop
xchg
pop
aas
jmp
push
addl
pusha
pop
cli
daa
lahf
pop
loope
mov
js
insl
add
xor
cmp
inc
add
stos
in
outsl
jp
add
popl
pop
sub
pshufw
xor
cmp
decb
mov
lods
jge
ret
pop
add
sahf
inc
cs
mov
dec
adc
mov
inc
lock
movups
shrl
and
push
or
push
push
xchg
dec
xor
ljmp
inc
mov
ret
out
fsubrs
jge
adc
outsl
stc
mulps
add
lahf
push
jp
pop
stos
push
push
xor
jecxz
push
xchg
dec
xchg
add
in
cmp
std
push
xchg
scas
sub
sub
in
dec
mov
loope
push
sub
push
inc
jmp
xchg
fists
sub
inc
mov
mul
jno
push
inc
push
rcrl
adc
inc
mov
ficomps
fwait
sub
out
bound
sbb
push
sbbb
fldt
adc
sub
call
mov
mov
sbb
pushf
outsl
cmp
fwait
shrl
cmp
clc
and
cmp
out
ds
test
xchg
popa
int
inc
cmpsl
xor
jl
mov
cmp
push
fisttpl
mov
idivb
inc
inc
shrl
sbb
push
fmuls
adc
jbe
jae
je
dec
out
dec
xor
add
jge
sbb
stos
or
repz
scas
sbb
and
scas
imul
xor
cltd
sub
jecxz
out
ds
or
xchg
jnp
mov
movsb
and
push
into
dec
adc
negl
ret
mov
pop
or
inc
sub
lcall
je
pop
jmp
icebp
fiadds
xor
ljmp
insl
jns
imul
add
test
fsub
mov
mov
fnstenv
push
fcoml
pop
pop
push
pop
xchg
or
inc
mov
test
data16
add
cmp
dec
pop
adc
cmp
xchg
cmp
out
ret
dec
imul
shrb
mov
push
xor
mov
mov
test
out
adc
lahf
pusha
enter
pop
mov
inc
iret
in
or
out
rol
cmp
jle
icebp
cli
pop
add
aaa
mov
jle
movsl
cltd
pop
cmp
dec
dec
or
fildll
cmp
jbe
in
jle
pop
std
lret
mov
aas
lds
mov
push
clc
sub
sbb
push
push
push
sbb
xchg
into
xor
mov
sub
cld
jb
and
jmp
pusha
lcall
mov
cmc
pop
pop
push
or
lock
adc
adc
dec
lcall
jnp
test
ja
es
fildl
sub
push
add
xlat
xchg
mov
cltd
xchg
out
jo
jmp
mov
sar
pop
xchg
or
js
sub
lahf
adc
clc
sub
fwait
xchg
sub
mov
push
testl
sbbb
ss
scas
jbe
jecxz
lods
jns
decb
or
test
divl
lods
fsubr
lret
pusha
das
sahf
inc
pop
lcall
mov
mov
xchg
or
mov
mov
inc
mov
mov
sbb
arpl
aaa
push
inc
ja
or
ret
or
outsb
iret
ror
fimull
dec
in
mov
gs
shl
sbb
inc
push
jg
fldt
jg
cmc
jge
outsl
fldt
ret
add
pushf
xchg
repnz
int
enter
sub
xchg
sahf
jge
push
sbb
lea
ja
mov
arpl
pusha
jne
fiadds
adc
scas
iret
adc
push
leave
test
mov
jns
sub
not
out
jmp
outsl
dec
push
in
popf
lods
fmul
xchg
and
adc
int3
ret
fnstenv
hlt
pop
leave
push
xor
mov
or
das
divl
jmp
dec
pop
popf
mov
pop
inc
aas
std
inc
mov
loopne
sub
jp
push
stc
inc
mov
xor
arpl
xchg
pop
test
add
aad
std
test
inc
inc
lods
jmp
in
fcoml
outsl
mov
mov
test
xchg
imul
jb
xchg
out
mov
sbb
andb
adc
pop
add
push
fsts
movsb
jle
adc
push
sub
sbb
fcompl
in
xchg
dec
xor
pop
dec
out
jmp
int
jecxz
and
mov
or
rclb
popf
mov
loop
aad
mov
out
iret
int
push
sbb
dec
andl
sbb
mov
rorl
add
cmp
push
mov
pop
repnz
fistl
jns
and
jbe
int3
xchg
rolb
mov
mov
sti
mov
shr
mov
outsb
sub
inc
dec
cmc
mov
fidivs
mov
push
jne
mov
sahf
and
xor
mov
loopne
ror
adc
cmp
add
inc
outsb
jb
std
ss
mov
dec
out
pop
adc
inc
mov
sbb
mov
call
xorb
fmul
out
and
pop
xchg
cmp
mov
enter
jns
and
sub
inc
cltd
cmp
mov
pushf
adc
mov
xchg
push
test
shl
mov
mov
aam
xchg
sbb
mov
sti
ror
adc
jns
sub
sub
es
popf
cmp
leave
mov
aam
adcl
ficoms
inc
shr
pop
dec
movsb
pusha
ja
rcrl
je
mov
dec
xor
outsl
cmp
cmp
ds
cmp
lods
enter
arpl
rcl
aas
movsb
jb
cs
sbb
xor
shlb
dec
pop
pop
and
mov
dec
cmp
xbegin
jg
pop
scas
shlb
jne
cmp
fcmovnbe
bnd
ss
jmp
dec
leave
icebp
loope
std
xchg
sub
inc
mov
mov
loopne
cli
xchg
inc
push
arpl
jns
daa
fwait
arpl
mov
loopne
sarb
mov
inc
scas
and
clc
jmp
pop
fimull
arpl
cwtl
mov
adc
addr16
mov
push
or
push
lret
ss
jp
dec
in
xchg
jae
pop
inc
xchg
sbb
sahf
cmp
jo
dec
icebp
pop
jg
xor
or
nop
jp
subb
fmuls
es
in
into
xchg
xlat
lods
mov
inc
mov
pusha
cmp
cmpsb
jle
fstpt
or
or
jnp
xor
jae
mov
add
pushf
pop
pop
mov
push
pop
adc
ret
mul
cmc
cmp
jge
sub
push
in
ja
mov
repz
outsb
pop
mov
xor
or
in
push
jmp
adc
xabort
gs
push
xchg
pushf
push
bound
inc
adc
mov
sbb
addb
jle
xor
jnp
adc
fidivrl
sahf
lcall
imul
int3
xor
cld
fdivrl
loopne
xchg
je
fsts
jbe
xchg
jl
xchg
inc
movaps
pop
cmp
add
nop
sub
jbe
call
or
pop
or
mov
cltd
data16
mov
repnz
pop
push
pop
jno
int3
mov
shl
cmp
shl
in
dec
inc
add
push
cwtl
ret
jle
nop
xorb
les
mov
les
iret
mov
mov
xchg
mov
mov
lahf
jecxz
ds
cmp
lods
fs
jno
aaa
cltd
imulb
xlat
pop
fwait
cmpb
or
add
or
aam
mov
mov
push
push
arpl
ja
sbb
and
ja
or
xchg
xchg
pop
fnstenv
inc
icebp
ds
inc
fcmovne
aas
lock
xor
xor
cmc
xchg
pop
and
push
push
xchg
call
icebp
mov
inc
shll
xor
jmp
repnz
mov
js
adc
pop
shll
push
xor
dec
pop
jb
out
adcl
pop
sar
jp
and
imul
xor
outsl
pop
aas
lods
adc
sub
ds
sbb
xor
rolb
scas
jp
xchg
nop
sti
add
ficomps
cmp
jno
lcall
fistps
push
test
fbld
fisttps
iret
outsl
inc
ja
into
adc
jl
mov
cmp
adc
rcll
lds
mov
roll
call
dec
jge
adc
cmpsb
mov
inc
hlt
jne
adc
call
daa
mov
pop
into
nop
imul
sti
dec
lret
and
imulb
cli
cmpsb
fsubrs
inc
xchg
pop
mov
pop
mov
inc
add
dec
cmp
pop
sbb
cld
cltd
clc
jo
dec
xor
sub
cmpsb
enter
pop
mov
or
out
xchg
mov
push
in
adc
mov
inc
cmp
lods
fcoml
or
dec
fidivrs
lods
mov
add
andl
sub
adc
js
dec
add
mov
outsb
aam
sbb
and
pop
stos
mov
popa
out
push
enter
testl
sub
scas
lock
jns
inc
movsl
inc
pushf
mov
icebp
pop
out
jle
xor
ds
mov
and
sbb
out
loopne
jne
cmp
mov
or
lcall
mov
and
lea
push
aad
push
mov
ss
jo
dec
cmp
mov
sub
es
sbb
mov
fisubs
sub
movsl
arpl
pop
cmc
aaa
fldcw
pop
add
rcrb
stc
pop
xor
pop
sbb
stos
jae
out
call
sub
movsb
mov
aaa
cmp
mov
pop
xchg
lods
testl
adc
rol
inc
and
scas
hlt
xchg
add
and
imul
cld
movsb
fistpl
pop
pop
test
mov
pusha
insl
pop
movsb
inc
jmp
in
dec
in
insb
adc
stos
xchg
pushf
add
aam
mov
inc
adc
cmc
dec
mov
mov
in
and
or
or
cmpsl
inc
cmp
fnstcw
jmp
pop
aad
mov
ja
adc
and
push
mov
fistpll
inc
into
stos
cmp
sub
outsb
jmp
push
sub
add
clc
loope
aam
adc
movups
hlt
rcrb
stos
jle
movsl
fadds
mov
jle
outsl
mov
pop
cmp
jns
popf
bound
inc
dec
cli
adcl
xchg
cmp
popa
xor
and
xor
mov
mov
or
je
cmpsb
sbb
inc
mov
and
call
into
cmp
pushf
std
out
mov
mov
fcmovnb
inc
add
bound
movsl
fadds
les
mov
addr16
xchg
imul
mov
push
xlat
push
xor
mov
leave
test
popa
idiv
lcall
cli
pop
sbbb
icebp
dec
icebp
mov
mov
and
xor
stos
rolb
pop
sarl
arpl
ficoms
and
sbb
push
shll
inc
enter
mov
lret
data16
xor
test
mov
out
push
and
stos
lds
hlt
mov
and
pop
push
or
bound
addr16
and
outsl
ss
or
jmp
mov
dec
fstpl
imul
inc
xchg
mov
andl
in
jns
xchg
sub
mov
pop
xchg
mov
mulb
xor
push
stos
or
xchg
xchg
scas
jns
cmpl
inc
test
inc
xchg
insb
rcll
cmp
daa
je
or
das
xchg
cmpsl
push
mov
inc
cmp
out
hlt
adc
cmp
push
sti
add
in
mov
arpl
sub
aam
stos
mov
xchg
cmp
fnsave
negb
xchg
ret
push
push
jmp
push
push
ret
inc
test
les
cmp
adc
ret
sub
clc
add
stos
mov
push
sbb
cmp
unpckhps
fcmovbe
add
loop
sarb
dec
push
sbb
ret
xor
inc
push
jae
pusha
mov
push
setge
fnstsw
xor
clc
and
mov
sbb
and
aaa
imul
repnz
pop
loop
jo
mov
dec
dec
push
cmpsb
int
or
aaa
leave
nop
dec
leave
fildll
xor
adc
or
mov
ret
fidivl
push
ljmp
pop
out
sub
pop
fsubr
sbb
mov
lcall
aad
rcll
mov
lock
mov
dec
ret
subb
lret
out
cmp
adc
and
xchg
sub
sarb
lcall
and
xor
mov
movsl
push
pop
ret
ret
jne
outsl
fidivrs
sbb
fs
sub
and
and
in
in
lret
adc
call
pop
adc
out
out
xchg
out
into
lods
add
hlt
je
pop
test
or
in
ja
push
sahf
in
mov
call
repnz
pop
fsts
lret
xchg
add
enter
xchg
je
cmc
arpl
sub
and
mov
lock
sub
xor
or
jae
lret
ret
andl
sub
and
add
stc
pusha
andb
leave
mov
scas
pop
in
mov
sub
insl
inc
icebp
shl
insl
int3
and
mov
pop
push
outsl
dec
mov
dec
xlat
cli
out
aam
inc
xor
loopne
fs
sbbb
stos
rcr
jne
mov
and
cwtl
loop
push
out
adc
nop
pop
dec
mov
mov
fdecstp
out
icebp
popa
divb
test
stc
push
or
cwtl
out
das
ljmp
jbe
jp
jmp
jo
mov
inc
cwtl
fmulp
fcomps
jo
and
mov
rclb
sti
adcb
xchg
sub
lahf
xchg
repnz
fcoms
das
push
jecxz
mov
mul
std
sbb
fmull
inc
cmp
lods
ds
arpl
sub
in
lods
pop
sub
in
push
ret
adc
jg
or
cmp
push
pop
inc
xor
or
cmp
stc
pop
lret
divl
clc
popf
jbe
pop
rorb
push
adc
sub
inc
xchg
adc
xchg
cmpsb
mov
sti
add
xchg
lods
jb
mov
fdivl
repz
clc
or
pusha
cmp
adc
rcll
add
jg
pop
stos
cltd
loop
aaa
xchg
and
push
and
insl
std
fmul
xchg
daa
cmpsl
pushf
ror
sub
mov
daa
pop
xor
pop
test
add
xor
adc
out
push
pop
adc
out
dec
int3
adc
pop
push
lret
stc
inc
in
sub
xor
xorb
mov
mov
aas
or
icebp
pushf
roll
cli
in
addr16
or
mov
fcomp
mov
ja
jle
cmp
movsl
mov
lcall
daa
pop
aad
testl
xchg
add
xchg
lret
inc
mov
xor
or
pushf
adc
mov
in
mov
sbb
shrl
out
test
lret
rcrl
push
or
rcrb
in
adc
dec
mov
mov
dec
lods
jmp
mov
hlt
sub
lods
mov
imul
stos
adcl
xorl
dec
inc
data16
inc
stc
in
mov
dec
sub
ds
mov
iret
jge
inc
ds
pop
jmp
out
popl
sub
aaa
jae
mov
jl
mov
ja
pushw
add
test
cmc
out
frstor
scas
je
sti
cmp
xor
fcoms
adc
jle
or
and
pop
lods
scas
mov
fcmovnb
jle
mov
jmp
fistps
push
out
daa
add
sbb
cmpb
inc
iret
bound
lret
pop
or
xor
xchg
int3
sarl
mov
stos
inc
rcrl
pushf
imul
out
enter
or
add
frstor
stc
addr16
sbb
pop
mov
mov
mov
imul
and
fwait
lds
mov
rolb
mov
pop
dec
pop
mov
push
adc
push
loopne
roll
fcomps
insl
fsubs
pop
adc
xchg
push
ret
lods
movsb
push
mov
icebp
mov
sarl
fwait
add
fisubrs
or
es
sub
test
cli
adc
popa
ds
dec
decb
movsl
je
lret
insl
inc
add
iret
fdivr
pop
xor
adc
pop
aam
loop
mov
xor
mov
push
mov
call
adc
sub
cwtl
mov
test
jg
negb
fwait
mov
fisubrl
bound
pop
inc
sub
movsb
popa
sarl
pop
frstor
pop
js
lock
repz
mov
leave
repnz
mov
stc
mov
aaa
xchg
outsb
add
adc
aaa
mov
sbb
ja
mov
aas
clc
gs
xor
sbb
addr16
xchg
movsl
test
push
imul
sbb
and
imul
pop
movsb
aad
ud0
hlt
mov
jl
or
mov
loop
fsubl
mov
cmp
shrb
cmpsb
int3
fnstcw
xchg
and
clc
push
jno
rclb
test
inc
aam
imul
fisttpll
push
add
loope
adc
fs
mov
jns
cld
mov
xor
jae
movsl
iret
pop
ret
stos
aad
sub
pop
fimull
ret
cmp
int
mov
into
js
add
into
mov
dec
mov
clc
daa
std
adc
mov
mov
outsb
mov
stc
fwait
xchg
or
das
jl
xchg
hlt
fcmovnbe
flds
add
aas
adc
and
cwtl
cs
mov
mov
mov
mov
inc
push
lock
pop
mov
stc
bound
ds
xchg
xor
es
dec
cld
inc
jbe
in
outsb
arpl
and
sub
clc
push
pop
pop
cmpsl
ss
cmp
mov
cmp
pop
outsl
cli
repz
sub
xor
les
std
ret
jae
mov
data16
xor
xchg
iret
out
mov
loope
pop
rorb
push
scas
jl
push
scas
loop
mov
fisubs
orl
adc
jg
lret
dec
out
lods
popa
mov
dec
iret
mov
jnp
sarl
add
cmp
daa
mov
push
cli
jg
adc
stos
push
dec
mov
pop
push
leave
pop
lods
xor
pusha
pop
push
sbbb
pop
sbb
dec
out
fwait
cmp
pop
xlat
mov
sbb
mov
jle
mov
xor
jnp
sarl
xchg
loope
pop
and
test
loope
xlat
in
movsl
aad
and
sbbb
mov
mov
mov
mull
dec
dec
xchg
pop
xor
cmp
or
jae
daa
xchg
add
cld
ja
clc
sarb
loope
push
mov
cmpsb
sahf
js
vxorps
cli
adc
sbb
sarl
add
pop
or
subb
jb
sub
fwait
adc
add
stos
dec
push
cli
in
movsl
push
int
lea
xor
inc
mov
lock
mov
fstpl
adc
loop
fcmovnb
sbb
mov
iret
mov
fucomp
xor
jo
orl
mov
and
sbb
inc
lcall
mov
pop
je
icebp
cmpsl
inc
cmpb
daa
sub
lea
xchg
insb
std
rcr
and
stc
adc
or
mov
jne
mov
data16
mov
daa
lods
adc
add
push
push
sahf
jbe
mov
adc
cmc
negb
xchg
pushl
mov
je
sbb
scas
sub
mov
lcall
push
pop
loope
dec
push
loop
pop
mov
insl
cmp
sbb
adc
push
sbb
mov
int3
lret
aas
dec
in
push
mov
fsubl
cmpsb
ret
sbb
cmpl
cmp
jnp
mov
mov
add
es
imul
sbb
cld
mov
push
scas
cli
das
call
mov
dec
in
xchg
out
lcall
pop
add
jno
add
sti
loop
xor
rcrb
pushl
fists
dec
fs
jmp
inc
or
js
jo
lret
mov
fcoml
pop
jecxz
sbb
aas
xlat
sub
push
dec
pushl
add
inc
pop
popf
inc
cmpsl
or
clc
test
lea
dec
out
js
out
add
mov
mov
cld
jecxz
jmp
mov
fistpl
jecxz
sub
or
outsb
ffreep
leave
mov
jo
inc
jns
push
ds
sar
push
scas
lahf
mov
movsb
test
mov
xchg
ljmp
jle
stos
push
pop
andl
mov
push
mov
xor
or
xlat
insb
outsl
inc
adcl
stos
pop
pop
xlat
sbb
sbb
adc
int
test
jbe
ss
xor
imul
jne
adc
mov
bound
insb
rol
iret
fld
pop
imul
pop
sub
mov
xor
mov
movb
xchg
mov
js
inc
ss
adc
mov
fdivrl
xchg
jle
and
les
ja
ret
jg
clc
aad
or
jge
or
scas
adc
pop
sbb
jb
jno
xchg
daa
sbb
push
mov
xchg
repz
bound
dec
jno
xor
insl
cld
sub
push
push
pop
imul
mov
loop
mov
ss
jnp
and
push
imul
adc
pushf
int3
fcmovnu
cmp
dec
xor
lret
test
sbb
pop
vmovhps
mov
dec
lods
or
sub
jle
ljmp
push
sbb
cltd
cld
inc
enter
sbb
in
adc
dec
repnz
sub
dec
xorb
xchg
mov
adc
test
pop
ja
js
mov
push
fidivrs
jmp
mov
insl
movsl
jge
testb
xchg
loopne
add
in
push
add
popa
sub
cmp
mov
std
push
int3
push
sbb
mov
out
sbb
push
adc
sub
inc
aas
and
push
fistpl
sbb
xor
xchg
out
andb
cmpsl
jge
xor
stc
or
mov
inc
in
push
dec
lock
addr16
fdivl
repz
mov
cmp
mov
aas
addr16
mov
adc
add
mov
loope
inc
fidivs
mov
movsb
sarl
andb
sub
and
xchg
mov
jg
daa
sbb
repz
shrl
mov
adcb
shll
cmpsb
or
push
adc
dec
test
xchg
ficompl
loope
mov
lods
dec
mov
rcll
fildll
push
pop
xchg
push
jae
mov
cmp
mov
in
push
outsb
add
sbb
cltd
jno
mov
cli
insl
adc
ljmp
in
je
and
iret
fs
out
arpl
cwtl
repz
fisubs
data16
mov
mov
dec
dec
sbb
dec
shl
pop
scas
jmp
pop
sub
or
fildll
int3
enter
push
imulb
lcall
cmp
mov
xchg
lods
cmp
mov
inc
or
dec
jo
mov
inc
sbb
xchg
and
movsl
cmp
push
xor
xchg
gs
and
les
xchg
aam
dec
leave
cltd
sti
sbb
mov
popa
mov
xchg
inc
dec
or
jg
int
sbb
orb
or
insl
daa
push
and
loopne
jge
xchg
test
push
stc
mov
adc
cmp
sarb
inc
pop
fcoms
adc
jp
sub
cmc
bswap
shll
stos
or
sub
xor
push
push
or
lock
andl
insl
push
outsl
cs
pusha
pop
inc
xchg
jge
ret
outsb
popa
mov
adc
xor
push
loop
test
hlt
pop
ljmp
das
in
enter
and
or
inc
ret
mov
hlt
pop
fs
or
lock
das
fsubrp
bound
inc
fwait
inc
int
jge
adc
push
adc
push
flds
sub
push
push
std
xchg
inc
lret
jmp
push
pusha
adc
out
leave
jbe
xor
ljmp
shrb
js
pop
dec
jb
incl
sub
int3
cmp
mov
arpl
cwtl
mov
and
pop
int
clc
out
popf
jle
pop
push
jecxz
jne
mov
lock
mov
rdpmc
int3
pop
lea
xor
iret
xor
imul
scas
pop
jmp
fwait
or
xchg
aad
and
rcrb
cmp
mov
xchg
stos
dec
fisubrs
addr16
test
and
xchg
mov
sbb
add
lcall
push
jge
sbb
std
clc
jbe
add
mov
pop
adc
mov
out
out
jl
xchg
pop
xor
leave
mov
jecxz
xchg
loope
in
scas
or
mov
xchg
push
jge
xchg
sbb
leave
and
sti
andl
aad
or
dec
daa
jnp
es
testb
clc
or
std
js,pt
mov
push
ss
xchg
out
fst
adc
adc
mov
xor
cmpsl
dec
push
push
and
xlat
ret
xchg
mov
push
mov
or
xchg
adc
imul
arpl
popf
push
lods
jb
sbb
jbe
mov
mov
push
leave
pop
add
mov
outsl
test
xlat
push
add
aas
out
scas
xor
xchg
imul
gs
sub
jnp
dec
or
push
xorl
adc
add
daa
inc
sub
dec
andl
inc
cmp
dec
or
shll
xchg
xor
insl
scas
jnp
popf
mov
outsl
movsl
add
pop
out
js
jnp
loop
mov
mov
shl
mov
leave
mov
and
pop
iret
lds
jae
adc
test
cmp
aas
xlat
hlt
mov
data16
push
xchg
repnz
or
out
lods
out
cltd
xor
scas
mov
clc
in
scas
loope
dec
les
xchg
out
cld
mov
lret
xchg
sarb
adc
call
aam
out
cmp
jg
rcrb
cmp
push
add
data16
into
lock
xchg
stos
cmp
fldt
jae
mov
popa
mov
cld
mov
cmp
xor
ret
in
out
add
in
incb
push
xlat
add
pop
jecxz
mov
lock
subl
rol
and
fnstcw
les
stc
out
xchg
negl
jle
adc
sub
mov
fsubs
cmp
cmpsb
cmpsb
mov
mov
push
xchg
mov
subb
fsubr
sbb
xchg
daa
jae
ja
mov
pusha
fstl
orl
xchg
lock
cltd
pop
xchg
mov
ds
push
mov
arpl
in
sti
xchg
sub
push
mov
sar
push
and
xor
adc
pop
nop
sub
repnz
int
jmp
outsl
cwtl
loope
sub
icebp
je
in
or
jge
negl
jno
scas
sarl
imul
fwait
push
aaa
fcomps
sbb
es
sbb
xchg
cmp
mov
divb
push
dec
adc
mov
dec
and
push
adc
sti
lods
stos
adc
pop
mov
xor
scas
mov
test
test
shl
cmp
lock
dec
mov
pop
jle
pop
mov
xchg
out
gs
lahf
jmp
lcall
or
sbb
sbb
mov
lods
clc
mov
cld
jg
dec
ja
mov
in
cmpsb
mov
sar
or
scas
stos
push
out
fidivrs
cmp
jns
inc
mov
or
call
push
dec
jg
mov
jo
jp
inc
notb
mov
aas
sub
in
rclb
pop
loop
fistl
mov
movsl
test
lods
jb
jne
shll
sbb
fwait
jl
push
dec
jg
jp
sahf
js
faddl
rcll
outsb
xchg
inc
push
nop
fdivs
jae
js
negb
sbb
pop
push
dec
fsubl
push
shll
sbb
dec
lcall
lret
into
ds
bound
je
int
dec
jne
pop
dec
je
or
add
or
mov
inc
scas
sbb
cs
aas
or
stos
lcall
push
xor
insb
cld
mov
and
xor
or
push
cmp
enter
divl
shlb
mov
ljmp
dec
xor
std
dec
jg
inc
mov
jnp
scas
push
sub
and
and
push
lahf
test
mov
sarb
inc
stos
icebp
jo
inc
adc
gs
imul
repnz
mov
in
xlat
push
fwait
inc
sbb
dec
xor
cmpsb
xchg
jp
sbb
inc
mov
cs
jmp
push
in
movsl
add
jle
sbb
movsb
ss
les
or
fidivrs
xorb
nop
push
iret
and
sbb
xchg
inc
and
aaa
gs
lods
pop
jge
in
or
sti
push
mov
scas
mov
pop
out
mov
test
pop
cmc
daa
in
adc
cmp
lret
into
data16
mov
xchg
shrb
in
nop
notb
loopne
ljmp
mov
mov
jge
jl
and
add
mov
in
xlat
ret
xchg
scas
loopne
dec
in
inc
jne
and
mov
fwait
jl
cmc
fdivrl
bound
lret
jmp
xor
xchg
cmpsl
cld
sbb
jae
fucomi
clc
dec
push
cld
mov
mov
xor
push
xor
out
iret
mov
mov
inc
jnp
push
dec
lcall
lret
int
sbb
mov
inc
bound
add
ljmp
in
lea
mov
push
subl
cmc
dec
inc
pop
push
mov
cmpsl
jbe
push
leave
jl
pop
ja
cld
jno
jge
in
pop
and
psrld
jge
pop
jp
icebp
and
mov
sbb
sub
rolb
inc
insl
scas
outsl
jle
pushf
xor
mov
mov
icebp
jne
aas
inc
js
or
insb
mov
xchg
in
push
sub
adc
mov
cmp
insl
outsb
aaa
repz
cld
add
mov
enter
jmp
mov
int
mov
les
push
xchg
sub
test
push
pop
addr16
cli
xchg
sahf
enter
add
pop
jl
xor
sbb
cmpl
lea
mov
loop
push
mov
mov
sbb
jle
in
scas
in
adc
ja
fildl
rcrb
mov
push
and
in
and
xor
sub
insl
out
subl
sahf
fsubs
jo
jnp
loopne
mov
xchg
or
loopne
fisubrl
das
ret
push
and
arpl
or
adc
mulb
mov
cwtl
andl
jb
inc
shrl
movsl
in
mov
ja
icebp
mov
jecxz
xchg
fwait
movsb
push
adc
jae
mov
jmp
lret
imul
xor
les
push
lock
inc
add
mov
xchg
xchg
imul
xchg
leave
pop
push
aad
inc
add
int
push
jnp
and
adc
aaa
cltd
int3
add
ficoms
cmp
dec
adc
pop
cmc
pop
int
inc
stc
and
faddl
mov
aaa
sub
inc
fnstcw
ret
insl
lods
cld
push
jae
mov
or
mov
inc
cli
fsubrp
jcxz
lods
push
mov
mov
loopne
mov
cmp
inc
cmpsb
mov
leave
cmpsb
sub
adc
scas
aaa
cltd
movsb
fldl
fadds
dec
mul
inc
pop
jg
and
shl
fcom
sar
fisttpll
mov
fldln2
mov
dec
jge
add
mov
push
adc
jo
cmp
push
jnp
shrl
adc
dec
mov
dec
push
into
mov
add
mov
insl
ret
call
imul
cmp
jae
xchg
dec
xchg
or
outsl
cltd
mov
pop
cld
lahf
sarb
adcb
bound
stos
cmp
xchg
popf
repz
sbb
fdivr
loopne
mov
repz
rolb
dec
cmp
mov
xor
adc
mov
add
lret
xor
sub
andb
sub
pop
pop
pushf
dec
loop
in
pusha
mov
or
in
rorl
rorl
mov
jno
adc
cmpsl
mov
pop
mov
push
push
xor
fs
sbb
push
lcall
shrl
mov
mov
out
jmp
jae
fldt
rorb
cmc
in
dec
add
fidivrs
jbe
push
add
ljmp
mov
fsts
inc
xchg
add
push
mov
sub
xchg
fidivrs
addr16
pop
cmp
les
fisubl
mov
inc
hlt
mov
icebp
jne
push
sbb
aaa
xor
xor
cmpsl
inc
adc
xor
dec
push
xchg
fbstp
mov
outsb
inc
sub
xchg
xchg
lret
scas
xlat
das
stos
call
jmp
push
imul
mov
inc
outsl
sbb
cmpsl
xor
xor
orb
pop
cltd
outsl
frstor
adc
insl
jne
lock
daa
inc
mov
stos
adc
cli
rcl
aas
xor
jmp
out
int
arpl
xor
inc
xor
sarb
aas
inc
and
adc
dec
xchg
jo
mov
inc
jae
adc
add
pop
inc
movl
enter
mov
sbb
or
or
mov
jge
es
clc
push
sti
out
loope
mov
adc
ret
insl
popf
add
pop
inc
inc
sbb
inc
sbb
lock
dec
adc
leave
mov
add
not
dec
mov
ds
gs
les
push
in
fmulp
sub
pop
mov
arpl
fstpt
xlat
sbbl
inc
movsl
mov
dec
xchg
nop
test
cmp
or
xchg
mov
xchg
sub
fisubs
aam
add
sbb
loop
mov
dec
cmp
mov
loop
sub
jp
jb
fsubp
pusha
mov
js
or
repnz
xlat
loopne
cli
dec
clc
std
fwait
adc
sub
jecxz
dec
pop
adcb
xor
cmpsb
sub
psubb
mov
jbe
jnp
cmp
mov
and
fnstcw
mov
mov
dec
xor
fcompl
pop
xor
outsl
mov
lock
pop
mov
push
and
inc
adc
rcr
aaa
stos
mov
movsl
xchg
ret
mov
mov
andb
nop
into
pop
rcrb
movsl
dec
in
cmp
push
xlat
cmp
negl
add
hlt
fs
bound
sub
das
aaa
daa
loope
cmpsl
dec
xchg
jno
loope
bound
loopne
mov
sbb
je
arpl
xor
cmp
shlb
test
cmpsb
jbe
dec
cmp
fmull
data16
adc
fists
adc
mov
sub
push
into
and
xchg
add
adc
fimuls
cwtl
sub
stc
mov
xchg
dec
adc
ja
push
sbb
icebp
push
int3
jae
push
dec
out
sahf
push
xor
movsl
xchg
iret
sbb
movsl
adc
xor
and
dec
fdivrp
adc
mov
mov
or
xchg
or
sub
into
ljmp
lock
pop
ljmp
xor
xchg
lds
or
sub
icebp
shrl
sub
cwtl
dec
loope
lret
es
dec
pop
jl
sar
addb
rcr
gs
enter
mov
cltd
mov
clc
jmp
pop
sbb
mov
sbb
outsl
or
sub
mov
sahf
xchg
push
mov
xchg
int
jmp
push
lea
sbb
jb
lods
test
or
js
push
jmp
xor
add
daa
fldcw
push
cld
mov
ss
cmp
sarl
jnp
mov
sbb
cmp
lods
icebp
xor
fs
add
mov
test
movsl
repz
idivb
ljmp
mov
enter
pop
xchg
ss
push
sub
in
sahf
dec
inc
jb
lds
jns
inc
pop
jne
sub
mov
adc
lds
xchg
dec
pop
or
sbb
dec
sbb
cmpsl
jnp
test
lcall
lock
repnz
adc
aaa
sub
pop
or
icebp
or
int3
test
stc
leave
divl
stos
decl
fucomp
iret
mov
out
mov
mov
fisttpll
add
popa
and
xlat
cmp
lods
shl
jmp
xor
inc
adc
mov
mov
jp
in
add
mov
lcall
sbb
gs
in
jecxz
fcomps
insl
sbb
fisubs
cmp
ret
cmp
mov
orb
jge
repz
js
mov
inc
movsl
sbb
sahf
jmp
cmpl
les
ret
outsl
sarb
lret
inc
mov
cmp
xchg
push
xchg
js
mov
xchg
mov
cld
adc
movsb
ss
enter
loopne
inc
cmpsb
mov
jg
add
enter
dec
fnsave
or
dec
mov
cmp
scas
cs
xchg
sbb
adc
imul
imul
adc
or
movsb
dec
xchg
dec
lods
inc
popf
push
cmc
jnp
sti
push
cs
inc
icebp
cltd
pop
mov
nop
test
mov
ffreep
lret
pushf
sub
cltd
inc
cmp
pushf
loop
arpl
ret
sbb
sti
fwait
in
sub
xor
sbb
pop
mov
inc
sahf
leave
push
adc
test
adc
bswap
pop
add
scas
lea
mov
insb
lods
push
inc
rcll
into
daa
daa
sbb
mov
lcall
fwait
or
leave
inc
push
lds
testb
icebp
fidivrs
test
cltd
adc
push
in
push
cwtl
add
test
outsb
cmpsl
aaa
add
out
dec
adc
mov
xor
jl
shll
xlat
add
sbb
fsub
sub
cmp
or
bound
daa
push
cmp
mov
sbb
pop
dec
push
cmp
mov
and
xchg
scas
mov
mov
mov
ds
dec
int3
sbb
daa
dec
jmp
lcall
test
jp
pop
loope
sahf
into
push
or
or
pop
push
outsl
stc
frstor
inc
lods
iret
cmp
dec
imul
or
xchg
scas
xchg
add
int3
test
add
sbb
inc
inc
in
or
mul
inc
pop
lret
fnstcw
add
mov
arpl
in
jmp
push
dec
inc
lock
std
ret
pop
sti
data16
ret
jle
sub
pop
mov
in
repnz
lcall
mov
jmp
loope
leave
push
or
jb
movsl
jns
mov
ja
iret
scas
fidivl
in
cmp
adc
add
dec
xor
mov
add
stos
call
xor
lods
or
xchg
pop
or
mov
add
fsubrs
mov
cltd
aad
pusha
push
push
test
rcll
cmc
imul
fldt
fwait
pop
and
jmp
add
insl
lahf
or
aad
imul
cmp
shll
push
jb
add
fs
sub
cs
cmp
stc
push
insl
pusha
push
adc
insb
sub
test
fimuls
jnp
and
add
jl
fs
pop
lods
test
lock
xchg
mov
and
xchg
and
in
mov
cmpsb
outsl
dec
xor
cmpsb
sbb
cli
popa
cltd
dec
xor
stos
popf
mov
mov
push
mov
popf
stos
cmp
into
mov
popf
push
mov
mov
cmp
xchg
jbe
push
nop
push
jb
dec
in
pop
dec
shl
xor
add
aaa
mov
fwait
cmp
jb
push
sbbb
or
mov
rcrl
xchg
lods
insb
lret
in
sbb
dec
xchg
mov
faddl
pop
xor
bound
push
mov
hlt
pushf
push
inc
scas
roll
and
xlat
lret
or
mov
or
out
insb
lods
push
or
mov
xchg
dec
sbb
lock
ss
shll
jae
push
sbb
xchg
bound
nop
ljmp
xor
jg
pushf
stos
in
cmp
inc
sti
pop
nop
xchg
xchg
cmc
iret
jge
add
jno
sub
jae
repz
pop
jbe
enter
mov
xchg
sub
lahf
insb
cld
dec
sahf
lret
enter
icebp
out
push
and
jb
push
addr16
cltd
lret
iret
mov
jecxz
adc
mov
jecxz
dec
je
adc
mov
jne
lahf
subl
nop
aam
int
std
dec
adc
repnz
jnp
mov
cmpsb
popf
in
dec
sbb
daa
cmc
xchg
sbb
ljmp
xchg
or
or
cli
mov
loope
in
int
mov
sbb
push
xchg
xchg
in
and
arpl
jo
sub
test
or
cmp
mov
movsb
mov
jl
call
mov
mov
aaa
or
adc
mov
aaa
int3
out
pop
xor
or
mov
or
cwtl
xor
into
jnp
mov
adc
fdivl
pop
sub
mov
push
pushf
icebp
mov
or
popa
cmc
lcall
jge
sub
pop
mov
lcall
rorb
stc
pop
xor
push
xchg
lret
cmpsl
sarl
inc
test
aaa
scas
mov
scas
add
and
push
movsl
sub
adc
pop
jmp
mov
mov
shll
push
insl
jg
shrl
cmp
loopne
xor
hlt
push
mov
or
fildll
xor
es
lcall
mov
cmp
lock
inc
test
inc
mov
aas
es
leave
jae
test
loopne
aad
rol
xor
pause
repnz
push
jge
aam
icebp
jg
mov
cmpl
stc
cmp
push
ja
jbe
push
stos
dec
inc
jl
outsl
insb
ss
xchg
out
sbb
fnstenv
data16
out
cmp
ljmp
mov
arpl
mov
adc
lcall
lods
jge
gs
std
mov
cmpsl
insb
or
mov
inc
jae
dec
sahf
sti
mov
dec
lret
das
outsl
data16
sub
xor
je
cmc
jbe
out
sahf
inc
jo
mov
push
das
jmp
jae
andb
or
or
push
dec
mov
push
call
stc
in
sub
or
inc
rcrb
jns
sbb
sub
sarb
add
dec
dec
sbb
stos
clc
addr16
insl
mov
cmpsb
out
xlat
push
shrb
inc
in
add
push
mov
mov
adc
mov
push
inc
push
data16
shl
je
cs
js
daa
insl
jp
jmp
adc
push
xor
add
loop
pop
mov
pop
mov
mov
fcmovbe
adc
sub
lock
daa
push
cltd
cwtl
mov
iret
fs
stos
sar
mov
hlt
das
testl
fildll
inc
scas
inc
xchg
popa
push
call
sub
pop
enter
and
mov
stos
stos
in
add
sub
repz
stc
mov
jl
and
dec
xchg
push
and
mov
sub
add
and
test
dec
push
fiadds
cs
jo
sti
push
jbe
push
stos
xor
frstor
adc
and
mov
mov
pop
xor
popa
jae
push
or
aas
cmc
jne
dec
ret
jb
std
clc
pusha
mov
movsl
test
shlb
je
dec
sbb
pop
mov
test
pop
push
fabs
in
rcll
cmc
popa
pop
mov
inc
sub
popf
fs
xor
js
sbb
xor
testb
popa
lea
xchg
sbb
shl
mov
jne
cltd
adc
mov
mov
and
xor
xchg
je
pushf
insl
xchg
cwtl
jmp
sti
andl
enter
pop
mov
dec
jb
pop
mov
mov
inc
jb
test
pop
push
int
inc
jbe
scas
jo
outsl
fnstsw
dec
xchg
pop
mov
pop
jbe
xor
fimuls
in
sub
xchg
adc
sahf
pop
ljmp
fisttpll
push
dec
fsubl
mov
push
into
xchg
dec
push
loopne
shrl
es
sub
mov
push
cmp
mov
pop
pop
pop
and
ret
call
or
jno
xchg
mov
and
out
jle
test
int3
xor
xlat
cmp
mov
insb
arpl
pushf
xor
in
in
inc
sub
mov
pop
push
mov
clc
push
xchg
add
xor
sub
add
mov
pop
xchg
xchg
jae
movsl
inc
das
sbb
lods
xchg
add
lds
fsts
push
push
popf
orb
cmpb
pop
lea
pop
xchg
jp
push
decl
cmp
mov
mov
add
stos
dec
daa
push
cs
mov
jo
cwtl
pushf
fwait
repz
mov
arpl
imul
fsubrp
cmpsl
and
icebp
cltd
iret
cmp
jp
dec
jge
stos
mov
out
or
jns
adc
mov
adc
sbb
in
clc
sbb
mov
int
pop
and
cmpsb
insl
inc
sub
loop
add
rcrl
mov
in
xchg
cmp
cli
dec
fdivrs
pop
ja
jb
arpl
arpl
mov
add
orb
mov
out
push
cmp
and
pavgb
sarl
xor
jg
gs
jo
and
popa
push
popa
jbe
mov
loopne
xchg
mov
jne
jne
inc
rorl
mov
ja
ret
sarb
cmpsb
leave
cmp
add
jbe
lea
and
mov
mov
and
addr16
push
push
outsb
pushf
arpl
cld
fcmovne
aaa
adc
inc
xor
mov
inc
cmp
push
mov
test
loope
pop
sbb
or
jb
in
or
pop
mov
loopne
insb
outsl
iret
fucom
arpl
fsubs
fldt
push
ret
push
mov
mov
int
xor
jae
mov
cld
fmull
add
dec
jmp
and
mov
scas
mov
ret
or
pushl
jbe
dec
and
loope
fidivrl
test
shll
hlt
jle
push
dec
xor
cmpb
add
mov
popf
xchg
jecxz
fs
test
and
push
xchg
call
jo
sbb
mov
out
mov
sahf
cwtl
mov
test
adc
push
pop
ja
push
in
out
into
inc
jne
jns
rcrl
and
or
insb
repz
push
leave
test
fwait
imul
fdivl
ret
int3
adc
scas
stos
inc
lods
outsl
in
jle
dec
in
sub
insl
xlat
lret
arpl
insl
scas
out
xchg
incl
cld
hlt
push
out
movsl
lds
imul
add
movsb
daa
lods
xlat
cli
sbb
adc
insb
imul
aas
push
out
sahf
cltd
sti
lods
ror
push
and
mov
mov
sub
push
and
inc
sti
cmpb
push
adc
xor
outsb
xor
es
xchg
pushf
iret
fsubrs
movsb
adc
lods
sub
push
outsl
out
mov
pushf
cli
cmp
add
subl
es
jae
je
jb
jecxz
push
sti
push
mov
jae
jle
or
push
mov
sbb
push
clc
mov
sub
jle
sbb
ret
mov
ret
sbb
iret
pop
dec
push
out
pop
cmp
lahf
out
dec
mov
xchg
add
bound
icebp
jae
xor
js
nop
adc
add
int
imul
in
aam
inc
pop
pop
mov
cld
adc
mov
lcall
cmc
ja
or
mov
fildl
xorb
lds
daa
dec
cwtl
xor
int3
jns
pusha
mov
mov
and
ja
push
js
js
cwtl
in
jno
push
push
dec
jnp
mov
xor
add
roll
fwait
dec
fimuls
pop
sbb
clc
sub
mov
scas
push
xchg
mov
cmpsl
pop
sbb
stos
js
out
cltd
icebp
es
push
outsb
push
nop
scas
mov
lret
daa
adc
aaa
or
cmp
and
dec
inc
mov
hlt
daa
test
in
jno
repnz
pop
push
pop
mov
push
xor
mov
push
adc
sub
pop
mov
rcrb
je
sbb
jmp
add
mov
rolb
mov
mov
and
mov
and
pop
push
mov
dec
lds
cmp
sub
in
incl
out
es
ss
add
repz
push
mov
fnstenv
int
add
jp
fcom
pop
insl
and
dec
out
push
inc
mov
mov
rcrb
mov
pop
push
mov
imul
int
sub
xchg
and
into
mov
mov
dec
fwait
pop
or
inc
sarl
out
clc
inc
lods
mov
fcoml
push
mov
rcr
mov
sub
and
pop
add
stos
psubusb
cs
mov
fdivrp
push
cmp
scas
cmpsb
inc
mov
add
repz
jle
rcll
dec
test
mov
addr16
inc
stos
cmpsb
int
sar
mov
xor
pop
fists
pop
movsl
call
lds
adc
mov
test
sbb
jno
fcmovu
cltd
xor
and
inc
inc
cmc
xor
aam
ret
stos
enter
rol
out
popa
xchg
dec
stos
sahf
out
mov
jae
popf
pop
mov
xor
shlb
push
fldt
or
int3
lds
repnz
push
imul
inc
repz
push
adc
subb
xchg
lock
dec
cmpsl
jle
xor
cmp
or
ja
push
pop
test
dec
mov
daa
jecxz
pop
movsb
rorb
mov
imul
pop
dec
sub
repz
mov
mov
lret
mov
imul
pop
sbb
push
int
insl
dec
pop
shll
mov
or
lcall
jo
inc
fists
push
mov
push
stos
inc
xor
mov
push
sub
dec
adc
loopne
arpl
cmpsl
push
jns
inc
mov
mov
movsl
rorb
sub
shlb
mov
cltd
shlb
dec
lock
test
pop
icebp
pop
pop
je
pop
pop
push
outsl
cwtl
ja
lods
cmpsl
xor
mov
jl
jle
stos
lds
cld
data16
jmp
cmpb
inc
adc
dec
push
das
cli
jle
loopne
lds
pop
sub
or
nop
push
xor
mov
and
or
and
push
lahf
test
sbb
fadd
stos
adc
and
pop
jge
stos
cmc
cmpsl
pop
loop
sub
or
mov
add
je
push
inc
icebp
call
je
es
jno
push
lea
imul
sub
cmp
ret
push
mov
pop
data16
mov
jl
dec
pop
sbb
int3
leave
push
int3
outsl
and
flds
scas
mov
into
out
adc
push
xchg
sbbb
cmp
lock
adc
call
add
push
push
push
lea
or
jnp
ss
mov
mov
outsl
add
jl
xchg
mov
mov
pop
fbld
lret
gs
ret
xchg
jnp
fdivrs
fdivr
lock
shll
sbb
sbb
pop
sub
orb
push
jmp
xchg
xor
fstpl
mov
add
pop
loop
xchg
mov
std
push
jecxz
and
jae
jnp
xor
rcr
arpl
dec
ds
xchg
jl
cmpsl
jp
sub
xorl
jb
xchg
jge
push
es
dec
pusha
jo
mov
int3
add
xorl
push
push
in
in
cmp
inc
sbb
cmp
sbb
add
jge
mov
dec
pop
jo
or
xchg
cmp
adc
xchg
in
lret
mov
push
insl
daa
dec
sbb
out
sub
cmp
mov
mov
adc
jg
into
jbe
xor
cmp
popa
inc
inc
call
xchg
lock
into
jns
jno
stos
or
in
push
mov
adc
and
movl
push
out
add
popf
pop
stos
out
dec
mov
xor
shll
push
mov
jecxz
aas
and
inc
jns
xor
sbb
lods
cltd
or
enter
or
cmp
lods
cmp
ja
xor
or
fimuls
cmp
dec
inc
sbb
jb
fldl
xchg
sub
jb
mov
mov
mov
lods
inc
outsl
leave
and
mov
lods
pop
stc
and
sahf
icebp
das
cltd
and
sbb
mov
ljmp
mov
cmovae
sub
jp
jb
roll
push
sbb
push
sbb
push
call
push
lret
loop
cli
mov
nop
pusha
fisubrs
mov
movsb
add
aaa
in
clc
jp
adc
popa
inc
dec
pushf
inc
addr16
ficoml
pop
cs
movl
xchg
aad
or
push
clc
sbb
movsb
sbb
fidivl
lds
ds
lods
jp
movsb
loope
in
ret
arpl
shll
xorb
xchg
and
push
jecxz
enter
sbb
stos
aaa
pop
fwait
cmpsl
sub
pop
fimuls
mov
adc
cmpsb
add
leave
or
outsb
mov
fidivrl
test
mov
and
in
incb
and
adc
stos
mov
enter
cltd
xor
sahf
sub
test
sub
clc
and
jae
inc
mov
mov
jle
push
enter
out
incl
mov
aam
test
outsb
push
lock
ret
sbb
in
xchg
jge
movsl
sbb
mov
sahf
loop
or
inc
and
xor
scas
fisubs
repz
test
pop
call
ret
leave
add
mov
testl
repz
in
push
iret
mov
in
stos
cltd
pop
fs
sub
insl
xchg
jl
mov
xchg
pusha
dec
and
mov
rcr
out
cs
jae
int
sarb
push
mov
mov
rorb
push
sub
adc
push
fdivrl
fstpt
mov
xchg
mov
sub
or
sub
cmp
aad
mov
clc
scas
xorb
subb
insb
mov
and
push
mov
and
pop
int3
fcomps
iret
iret
xchg
clc
mov
push
in
push
cmp
lahf
pop
cmpsb
xchg
ret
xor
sarb
sub
or
lahf
dec
shrb
dec
filds
xor
lds
pop
jb
je
mov
ds
ljmp
add
pop
imul
pop
push
push
sub
leave
pusha
test
mov
push
inc
adc
add
lock
nop
add
lea
add
les
in
inc
fldl
pop
pushf
call
pop
dec
in
mov
xchg
pop
sub
mov
jecxz
adc
pop
pop
xchg
cmp
aaa
es
mov
ret
push
mov
popa
and
ret
cmpsb
fbld
pop
sarl
xchg
pop
call
adc
inc
into
ss
flds
test
addr16
pop
movsb
loopne
shr
gs
xor
bound
xor
subb
repnz
mov
clc
das
idivb
pop
pop
lods
mov
mov
test
lods
stc
cmp
sub
shrb
mov
inc
cwtl
xchg
xor
fistpll
adc
loope
xor
sbbl
bound
cmp
mov
mov
ss
xor
inc
test
call
aam
xlat
pop
mov
leave
test
stc
xor
adc
rorl
push
jecxz
mov
stc
cmp
scas
nop
sbb
pop
mov
xchg
out
adc
xchg
dec
sbb
int
lods
clc
mov
pop
push
push
clc
cmp
pop
sub
out
mov
push
jb
and
stos
and
sub
daa
jmp
inc
cs
sub
fistpl
data16
lahf
and
les
scas
out
push
aam
dec
orb
push
xchg
inc
sub
or
push
lea
out
push
test
adcl
loope
roll
adc
into
and
sbb
mov
repnz
xor
add
push
inc
aam
shll
outsb
mov
add
clc
dec
cwtl
out
out
sti
loopne
in
jge
sbb
cltd
pop
sbb
mov
popl
ds
inc
and
cmpsb
bound
mov
sub
cmpsl
cwtl
xchg
push
popa
pop
inc
pusha
ret
and
fstpl
sub
aas
sub
lods
mov
pop
push
push
jg
iret
das
and
repz
xor
movsl
pop
dec
mov
dec
sub
imul
popf
jo
cld
hlt
stos
sub
insl
add
push
mov
in
jmp
pop
es
jge
in
mov
pop
pop
mov
sbb
jmp
sbb
pop
lret
insl
insb
inc
lea
jbe
or
xchg
inc
in
mov
xchg
xor
cmp
cmpsb
cmp
mov
ljmp
loop
pushf
test
inc
lds
dec
inc
das
mov
popf
icebp
movsb
into
lock
fwait
or
in
leave
negl
test
mov
and
add
arpl
sbb
xchg
dec
cmpsb
mull
jb
jle
push
cli
sbb
xchg
aam
imul
daa
stos
and
jno
in
hlt
sbb
in
dec
jns
icebp
sbb
sub
sub
push
push
outsb
idivb
arpl
stc
mov
fcmovnbe
sub
or
out
pop
add
mul
pusha
mov
cmp
and
dec
pop
stos
mov
ret
fcompl
mov
adc
push
sub
call
into
adc
jmp
out
test
pop
lahf
in
mov
sub
addl
dec
jmp
int3
add
int3
pop
cmp
jle
movsb
repnz
xchg
icebp
sbb
push
insb
cmp
cmp
scas
in
ret
shlb
scas
push
js
sub
fisttpl
lea
mov
sarb
xor
inc
cmp
add
call
sub
ljmp
orb
push
or
adc
clc
inc
cmp
ret
sbb
pop
jbe
outsb
cmp
jb
das
mov
stos
in
jecxz
fistps
push
cmp
movsb
xchg
andb
push
push
inc
push
mov
dec
pop
and
and
sahf
std
push
lea
in
mov
lret
stc
fwait
ret
jo
cmpsb
cmp
pop
push
and
shrl
pop
and
je
repnz
das
xchg
jnp
int3
divb
out
mov
and
mov
mov
adc
loope
popa
scas
cld
inc
cmp
xor
js
xor
icebp
sahf
scas
rcl
fxch
into
add
sti
cmpsl
stos
test
stos
loopne
jp
push
pop
stc
inc
add
roll
sarb
dec
mov
jb
lds
push
cmpsl
repz
icebp
outsl
iret
adc
mov
add
inc
call
ljmp
add
imul
aaa
pop
jae
lret
ret
jnp
js
jl
dec
inc
inc
jno
loop
in
arpl
inc
ds
fisubrl
push
pop
inc
xchg
jl
fmul
daa
cwtl
cs
push
cli
sbb
xchg
and
jmp
or
cmp
push
lock
inc
add
mov
xor
pop
pop
je
push
das
sbb
cli
ja
and
mov
mov
lcall
mov
cmp
pop
push
mov
bound
data16
push
pop
in
add
inc
int3
mov
inc
sahf
cmpsb
jno
cld
add
push
push
push
mov
jbe
mov
xchg
xor
cs
out
sbb
ss
sub
mov
stos
fisttpl
jmp
add
xor
sahf
xor
bnd
cs
sarb
push
jle
aas
mov
xchg
add
push
testb
insl
push
inc
movsb
bound
push
and
popf
movsl
lock
jecxz
push
rcll
sub
rcr
mov
mov
push
ficoml
int3
shll
aam
xchg
dec
incl
daa
imul
mov
cwtl
or
sbb
jge
test
js
sub
jne
sub
subb
jne
fmuls
cmp
sbb
sub
jp
mov
pop
dec
or
clc
std
or
jnp
jl
or
fcmovnu
repnz
and
lea
cmp
or
ror
pushf
jne
sarb
mov
xchg
push
fstpt
push
xchg
push
bound
daa
sahf
xchg
xchg
mov
mov
sti
leave
dec
mov
and
add
adc
xlat
lret
jmp
hlt
or
dec
lds
or
cmp
in
test
lea
xchg
repnz
adc
adc
mov
arpl
pop
cmp
adc
ret
mov
mov
leave
ss
cmp
idivl
sub
adc
enter
xchg
lods
xchg
sbb
imul
scas
sbb
mov
fwait
jae
mov
add
fs
cmp
push
jb
xlat
jb
into
cltd
test
fisubl
dec
jp
pop
lcall
int3
mov
iret
cmp
mov
rep
repz
je
sbbl
insb
xor
push
or
xlat
inc
int3
arpl
inc
push
sub
fyl2xp1
shrb
dec
jecxz
enter
push
sbb
xor
mov
stc
mov
cmp
xor
pop
sub
jns
add
xor
in
pop
sub
push
push
mov
out
dec
xchg
pop
xor
enter
xchg
out
jnp
in
push
fsts
xor
aam
rcl
or
ret
xor
hlt
dec
inc
lret
inc
leave
add
addr16
popf
mov
faddl
lock
jns
mov
xor
ds
xor
test
sbb
xchg
jb
mov
das
mov
cs
bound
inc
cmpb
lahf
push
in
jns
pop
or
or
push
cld
adc
pop
adc
pop
orb
icebp
popa
ljmp
pop
cmp
cmc
leave
cs
jl
mov
mov
or
sub
sarb
aad
mov
rcrl
jmp
andl
fidivrs
mov
push
xor
fs
jmp
mov
mov
jl
pop
cmp
mov
or
cmpsl
cwtl
addl
test
push
mov
or
jnp
and
inc
dec
cmc
xchg
cld
mov
call
lea
pop
inc
arpl
fisttpl
or
pop
outsb
dec
sub
icebp
scas
notb
xor
mov
pushf
sub
movl
push
in
in
or
push
or
sbb
pop
push
mov
xchg
fiaddl
mov
dec
rolb
testb
dec
cmpsb
shl
cmpsb
das
cltd
add
xchg
ja
insb
movl
scas
out
xchg
mov
aad
fcoml
mov
fsubl
mov
jg
std
aam
mov
fucom
xor
push
ret
mov
fisubrl
sub
inc
xchg
mov
pop
dec
adcb
pop
lea
xorl
dec
jmp
adc
es
in
sarb
movsl
out
add
imul
cmovns
mov
test
daa
imul
pop
or
mov
and
stos
movsb
ret
dec
pop
int
pop
push
jnp
push
ret
xchg
int3
cmpsb
jmp
test
adc
movsb
xor
popa
push
sbb
test
mov
pop
bound
jl
xchg
pavgb
imul
add
aaa
mov
jp
xchg
push
jl
movsb
add
pop
cli
pop
pop
or
mov
xor
xor
or
jb
sub
scas
aam
push
xchg
dec
cli
aad
mov
or
stos
sbb
rcr
iret
stos
jns
ds
ljmp
adc
dec
xchg
call
addr16
mov
fistps
or
mov
cmp
push
add
lock
push
push
cmpsl
fisubs
xchg
outsb
adc
in
dec
dec
and
push
push
aad
and
xchg
in
xchg
aas
aad
and
lds
sub
lret
int
cmpsb
aam
push
adc
pop
scas
xchg
lret
mov
inc
leave
or
xor
mov
sub
push
cwtl
rcrl
xchg
outsl
push
jl
rcrl
stc
mov
mov
or
or
movsl
orb
std
int
pop
cwtl
add
fbld
lret
test
movsb
aaa
mov
aam
ljmp
addl
sub
shll
cmp
int3
sti
fldl
push
mov
xchg
dec
cld
cmpl
xor
adc
out
dec
or
insl
inc
jmp
out
xchg
test
xlat
les
imul
insb
iret
call
mov
js
add
push
iret
leave
or
jge
into
ret
in
sub
js
outsl
jb
stc
push
in
adc
or
push
push
xchg
in
hlt
cmpsb
push
mov
ja
dec
popa
dec
scas
in
shlb
roll
leave
fptan
jle
insb
push
pop
ljmp
fldcw
ljmp
fisubs
call
int3
sbb
jnp
repz
sub
or
mov
loop
stos
and
iret
mov
dec
or
mov
pusha
ds
je
or
test
pushf
or
pop
mov
pop
and
push
jecxz
das
les
dec
xlat
jnp
sub
dec
and
pop
or
mov
jp
insb
insb
and
cli
xor
gs
or
mov
test
ret
pop
inc
gs
xchg
pushf
lret
fisttpll
xchg
repnz
shll
adc
pop
mov
je
inc
mov
pop
loope
bound
leave
aam
push
jge
mov
push
jae
jmp
arpl
sub
rcrb
rcrb
sub
jge
shll
cmc
out
loope
loope
xor
dec
dec
clc
loope
into
subl
jns
adc
rcrl
out
enter
pmulhw
push
dec
test
int
fisttpl
gs
fsubr
fldenv
dec
sub
dec
pop
test
mov
lods
insb
test
xchg
loop
and
xor
add
dec
jno
sti
jo
add
cli
cmp
xor
push
jp
dec
mov
inc
jmp
adc
jns
aad
das
fstps
lds
clc
and
jl
dec
xchg
adc
repz
sbb
repnz
mov
sub
test
jmp
insb
je
mov
lea
inc
cltd
cmpsb
ret
mov
xchg
sub
lds
cmp
jmp
or
lods
jo
xor
mov
test
ret
test
jg
fs
cld
fcomip
jns
mov
je
mov
scas
loope
mov
xchg
inc
dec
std
popf
rcrb
add
dec
cmc
xchg
lods
mov
iret
adc
mov
add
push
lds
pop
and
xor
leave
ret
mov
lock
sub
pop
out
sub
scas
clc
not
pop
pop
add
mov
daa
mov
fldt
jno
int3
movsb
addr16
or
scas
cmc
adc
xor
ja
shlb
out
clc
mov
and
pop
test
sbb
into
stos
fistpl
push
cmp
sub
testb
or
xchg
dec
in
test
aam
arpl
add
adc
out
dec
cmp
lea
sbb
and
pop
loope
xor
push
mov
popa
add
test
xchg
mov
mov
fcoms
aaa
sbb
inc
xor
icebp
es
mov
mov
pop
cmp
inc
out
xchg
xchg
mov
sub
addr16
cs
lahf
mov
or
mov
mov
jg
bnd
jmp
sub
mov
inc
push
or
push
insb
xlat
cmp
jl
sbb
jp
or
mov
and
xchg
push
mov
sub
dec
xor
adc
push
pop
inc
pop
push
mov
je
std
testl
test
andb
out
adc
ss
adc
in
js
pop
push
cltd
inc
nop
jno
adc
cmpsl
inc
les
adc
imul
jne
call
fstps
dec
movsl
mov
inc
shlb
imul
or
out
lock
pusha
add
cmp
gs
inc
push
mov
dec
es
lahf
out
hlt
aam
add
in
xchg
mov
iret
mov
or
mov
test
insl
sub
orl
call
lret
push
adc
and
les
loopne
or
xchg
inc
mov
push
lret
adc
test
clts
xor
mov
push
sbb
sub
movsb
sahf
nop
add
mov
dec
mov
rolb
mov
cwtl
scas
or
jno,pn
je
stos
test
inc
test
pop
in
daa
pop
mov
stos
pushf
xor
push
fcomps
loopne
cld
in
imul
dec
sar
ja
jo
lock
dec
mov
cli
sbb
mov
mov
dec
add
dec
cltd
les
xor
lcall
jge
push
js
sub
jns
jbe
xor
xor
dec
dec
loope
addb
mov
xchg
add
repnz
add
iret
push
and
dec
mov
dec
push
in
std
lahf
add
repz
jns
push
push
loop
mov
loopne
lock
lret
dec
push
push
mov
es
mov
fwait
stos
xor
pop
icebp
mov
sub
sbb
pop
idivb
shrb
jne
jo
lahf
mov
stc
jbe
mov
arpl
repnz
ds
or
orl
jl
sbb
lahf
adcb
pop
shll
mov
xchg
loope
mov
test
or
cmpsl
cld
in
xlat
xchg
ret
lock
push
xchg
push
ficoml
repz
dec
out
loopne
or
pop
bound
mov
jb
stos
je
call
mov
pushf
push
jmp
daa
mov
jmp
sub
or
scas
xchg
lods
cmpsb
pushf
movsl
data16
xchg
cwtl
xchg
and
xor
sbb
iret
or
jo
in
sbb
and
mov
and
and
xchg
dec
repnz
add
jnp
mov
rclb
sbb
popf
into
mov
test
cmc
loopne
jecxz
das
leave
pop
push
ja
les
stc
inc
xchg
sbb
xlat
cmp
mov
xor
gs
pop
add
notb
test
sbb
bound
xchg
sti
lock
fisubrl
cli
jecxz
movsl
nop
and
into
cmp
pop
out
icebp
loopne
push
push
out
xchg
inc
stos
xchg
sub
cmpsb
inc
cmc
jle
cmp
popf
jbe
jno
mov
shlb
aas
cmp
mov
ret
and
push
sarl
cmpsl
xchg
mov
or
jne
sti
jns
ds
jbe
pop
or
shll
jnp
imul
test
and
arpl
cltd
pop
xor
xchg
frstor
icebp
outsb
sub
mov
mov
pop
int3
add
xchg
and
pop
ss
jge
ret
aad
jno
adc
xchg
xchg
fcoms
inc
pop
js
repnz
out
pop
xlat
imul
dec
test
pusha
sub
pushf
xlat
in
in
add
imul
fs
xor
cmp
mov
loope
insb
or
sahf
cltd
jb
cmp
mov
jae,pn
lret
js
loope
lahf
addr16
jmp
cmp
lret
add
push
add
aam
dec
insb
inc
inc
mov
mov
adc
cmp
movsl
xchg
imull
popf
xor
loop
lahf
lock
sub
xchg
ret
xchg
cmp
mov
pushf
sbb
pop
lcall
push
adc
push
adc
add
out
outsb
jg
jl
out
icebp
sub
stos
scas
pop
out
repnz
sub
into
ret
mov
fstpt
pop
outsl
push
push
mov
mov
dec
xlat
mov
or
cmpl
jae
mov
push
icebp
jl
jae
mov
loopne
mov
jne
pop
scas
xrelease
lods
push
push
movsb
xor
push
add
dec
aas
pop
iret
fwait
mov
arpl
fidivrs
insl
dec
inc
ds
add
out
mov
je
inc
orb
jo
iret
cmpsb
cwtl
lahf
sti
repz
out
push
or
int3
mov
sahf
xor
js
lret
adc
imul
xor
xchg
loopne
lock
push
sbb
daa
pop
cld
dec
add
scas
and
aaa
inc
imul
clc
ret
mov
test
outsl
pop
add
xor
pop
dec
in
lahf
imul
push
out
cs
push
shrb
pop
gs
mov
xchg
pop
jb
fs
dec
repnz
jno
scas
cwtl
jl
sahf
lock
sbb
mov
sub
mov
jo
mov
aas
dec
and
sti
lds
rcrb
jae
add
daa
mov
in
dec
pushf
sub
mov
xchg
mov
and
inc
bound
jnp
mov
sbb
xor
sahf
xchg
out
fsubl
pop
in
sbb
adc
cmpsl
cs
dec
rcrb
and
outsl
fidivrl
xchg
popa
mov
and
add
mov
cmp
inc
les
adc
int
test
iret
sbb
fisubrl
pop
orb
adc
int
in
addr16
xor
imul
inc
pop
mov
pushf
into
dec
sbb
clc
dec
adc
mov
test
out
jb
enter
fildll
fnstenv
unpcklps
sbb
cmpsb
dec
dec
add
xchg
push
sub
xchg
nop
mov
xchg
cmc
int3
cli
pop
outsb
pop
bound
and
pop
adc
xor
xor
cwtl
and
mov
or
xchg
cmp
push
dec
fidivs
add
add
and
sbb
sti
scas
ss
into
icebp
inc
fadds
lods
mov
aad
pop
or
mov
mov
adc
sti
and
pop
hlt
lret
int
pop
pop
shl
adc
mov
xor
push
push
sub
xor
fdivr
enter
mov
inc
dec
ss
jecxz
pop
or
xor
jae
mov
imul
jl
xorl
out
pop
or
in
or
leave
sub
push
jbe
jne
mov
jmp
mov
pusha
pusha
xor
mov
das
frstor
xchg
ja
bound
cmp
mov
push
sub
xor
add
shr
mov
add
dec
push
xlat
ss
pop
imul
lock
in
mov
sbb
mov
mov
mov
jb
mov
push
adc
lods
shll
sub
add
jle
adc
push
iret
jbe
and
ret
pop
mov
popf
xchg
jb
xor
jge
aas
cmp
inc
dec
stos
jp
inc
addb
jecxz
cmp
add
lock
lds
insl
xchg
in
movsl
dec
jle
mov
gs
lods
inc
insb
push
sti
cmc
dec
add
faddl
pop
out
cmp
inc
dec
xor
jmp
scas
mov
fwait
mov
mov
sub
insb
pop
mov
sahf
dec
lods
push
push
sbb
xor
push
arpl
dec
jbe
mov
ret
and
mov
cmp
lret
dec
call
mov
adc
pop
and
pop
gs
add
adc
lahf
roll
mov
add
stc
inc
cmpb
mov
xchg
lods
pop
xchg
lea
mov
lods
jo
jnp
dec
in
nop
pop
jae
xlat
inc
inc
xor
xor
repnz
jmp
inc
mov
jecxz
adc
outsb
fs
iret
stos
add
inc
arpl
adc
idivl
jbe
xor
fwait
sbb
daa
dec
push
das
in
pop
inc
cmpb
or
sbb
inc
imul
das
and
pop
mov
test
addl
addr16
enter
aam
sub
jo
xor
xchg
out
or
pop
stos
and
lret
stos
mov
push
xchg
push
xchg
pop
jno
inc
adc
out
adc
pop
flds
cmp
pop
fcmovb
xor
push
in
outsb
fsub
outsl
fucomp
call
arpl
or
popa
adc
add
inc
xchg
xchg
sarb
movsl
jecxz
sub
repz
insb
mov
mov
push
pop
lahf
lods
jl
popa
xchg
xlat
dec
lret
out
insl
aaa
incl
sub
or
mov
or
rcrl
mov
adc
xchg
aam
aad
dec
pop
adc
inc
bound
jb
fstl
repnz
ja
pop
sub
dec
or
lock
jne
and
imul
xor
add
mov
nop
mov
into
cmp
push
ret
loop
pop
daa
cmp
movl
cli
mov
sub
and
insb
outsl
sbb
jno
and
and
out
push
arpl
lock
mov
jmp
fiaddl
lcall
stc
mov
and
jp
xorl
sub
dec
mov
dec
loop
dec
movsb
mov
xor
pop
adc
shr
mov
dec
push
mov
push
jne
sahf
faddl
xlat
call
and
mov
stc
jno
fcmovnu
sub
xchg
cmp
lahf
scas
cltd
pop
enter
jmp
daa
dec
cmp
out
mov
mov
fstps
xchg
bound
add
jecxz
pop
mov
lcall
dec
mov
je
xor
pop
int
mov
ja
nop
jbe
mov
int3
ret
pop
cli
xor
pusha
lahf
xchg
xor
cmp
adc
push
js
and
dec
sub
sahf
inc
cmp
pop
fnstsw
subb
test
xchg
inc
sub
lret
clc
xor
xchg
and
out
hlt
test
and
stos
imul
nop
cmp
iret
ret
or
jg
xor
xchg
fdivs
lcall
mov
cmp
cmp
sub
inc
popf
pop
inc
cs
iret
inc
push
cmp
sbbl
ja
cmovg
jno
sub
or
and
adc
sbb
call
addr16
pushf
mov
dec
mov
xor
fldl
cltd
std
mov
xor
push
pop
loopne
je
notb
sbb
pop
pop
fnstcw
mov
call
jge
cmpb
jg
cmp
arpl
insl
and
and
enter
lcall
pusha
xchg
lds
fdiv
imul
out
adc
xor
rorl
leave
lods
ss
cmp
dec
push
test
and
hlt
pop
xchg
lret
aam
jns
and
loop
jb
or
cmp
aaa
or
cmpsl
mov
push
jns
dec
jno
ds
loopne
pushf
add
repnz
mov
in
adc
push
shl
jmp
mov
aaa
dec
repz
mov
push
mov
jge,pn
inc
sub
test
hlt
movsb
lret
loope
cmp
mov
popa
jmp
sbb
fwait
push
mov
in
mov
pop
jl
ljmp
dec
clc
in
jle
dec
test
cmpsl
xor
sti
xchg
jmp
sarl
flds
sub
scas
out
leave
xor
aam
xchg
scas
aad
sti
push
fistpll
inc
les
js
repnz
mov
jae,pt
aad
test
jns
rorl
pop
add
inc
scas
xchg
lock
add
cmp
aad
adc
dec
jg
xchg
insb
into
jbe
pop
dec
js
ja
divl
out
cmp
mov
or
mov
mov
test
negl
push
and
out
mov
bnd
jno
push
std
int3
cmpsl
and
mov
xor
lds
sti
and
popf
jo,pn
lahf
inc
lret
push
cmpb
pop
mul
sbb
push
clc
mov
sub
scas
lea
or
inc
leave
in
xchg
movsl
push
orl
inc
test
shrb
ljmp
ljmp
add
jne
push
jmp
mov
std
push
test
inc
mov
push
xor
jp
cmp
inc
outsb
cmp
lock
incb
iret
arpl
jmp
cmp
test
fldt
and
psubusb
pop
bound
lods
stos
jb
xlat
and
mov
dec
std
add
xchg
pop
fscale
mov
pop
call
jg
inc
push
movsl
dec
iret
mov
mov
jl
repnz
cmp
lcall
cmp
stc
test
xor
lcall
out
addr16
loope
or
or
dec
flds
shll
inc
fs
sbb
loop
mov
shrb
and
divb
mulb
imul
dec
xor
push
cmove
shr
xchg
flds
aas
in
push
cmp
push
push
test
push
roll
mov
pop
xchg
test
fistl
and
repnz
sbb
pop
pop
mov
dec
dec
push
jl
jns
aaa
lods
pop
test
in
mov
add
sub
movsl
inc
aam
pop
mov
mov
shrb
and
out
das
sahf
or
sti
and
lret
add
adc
rclb
mov
xchg
loopne
fstpt
or
add
xchg
mov
lahf
mov
mov
stos
lods
ret
mov
aaa
icebp
and
in
lcall
nop
pop
add
stos
repz
mov
out
inc
mov
dec
test
nop
mov
mov
js
sbb
lock
and
inc
ss
jae
xchg
or
adc
cmc
shll
repnz
sub
sub
pop
daa
or
xor
ret
mov
fstl
imul
stos
mov
sbbl
pop
xlat
sub
jl
xchg
movsl
dec
xchg
ds
sbb
jae
mov
test
mov
mov
aas
adc
sti
sahf
decl
jp
jae
add
and
adc
xchg
jp
mov
fs
or
jno
aaa
mov
pop
mov
dec
andl
test
adc
cli
cltd
xchg
setge
ljmp
xchg
popf
jns
dec
cltd
inc
inc
mov
mov
jg
mov
or
xor
js
mov
inc
cmp
xchg
test
and
push
xchg
mov
jl
jno
push
aas
insb
jg
dec
push
fcoms
lcall
loope
aas
dec
push
jne
mov
sti
push
inc
pushf
test
repnz
adc
jg
xorb
sbb
add
enter
cmp
mov
mov
mov
or
jo
mov
push
cs
sub
cmpsb
into
roll
dec
shl
ljmp
or
pop
hlt
push
repz
in
inc
js
jg
out
or
xor
sub
sbb
clc
jl
icebp
repnz
dec
cmp
in
cmp
jle
add
mov
push
mov
arpl
rorl
cmpsb
fistl
mov
insb
mov
add
adc
jb
adc
cli
stos
stc
push
or
stos
in
movsl
sbb
bnd
lods
dec
mov
pop
push
adc
aaa
mov
inc
adc
test
pop
cmp
xor
out
mov
mov
inc
cs
sbb
stos
push
stos
xchg
push
and
jno
jnp
ljmp
cmp
lcall
push
nop
cld
enter
ja
sub
xor
and
bound
push
sub
or
inc
aaa
lret
mov
ja
xchg
aad
fisubrs
das
push
push
pop
inc
lds
cmpsl
roll
icebp
and
js
addr16
inc
sub
cmpsl
xchg
out
inc
jg
in
xor
pop
sahf
pop
ds
jle
aaa
and
aas
xchg
xor
mov
shll
outsl
je
add
add
insb
push
and
pop
js
loopne
cmp
jb
inc
pop
inc
push
mov
sbb
jmp
adc
push
xchg
jge
insb
jecxz
mov
jb
push
mov
rolb
lea
test
mov
dec
xor
cmc
cld
sbb
stc
dec
push
xchg
sub
push
sbb
shll
lahf
aas
pop
sbb
pop
shlb
xor
add
es
mov
adc
add
inc
xchg
cwtl
in
repz
adc
push
imul
lcall
xchg
dec
mov
addr16
push
nop
mov
insb
orb
out
or
sbb
cmp
sub
fnsave
pop
jmp
push
xor
fcoml
es
les
dec
xchg
repz
pop
sub
cmp
xchg
mov
cmp
or
adc
dec
add
cmpb
leave
pop
subb
push
cmp
repnz
lods
sahf
aaa
mov
shl
daa
mov
rorb
notl
in
push
sbb
mov
jbe
lahf
sbb
leave
leave
and
mov
data16
test
dec
outsl
push
ss
fdiv
adc
out
loope
rorb
fidivs
aas
adc
aaa
cmpsl
fsts
into
stos
andb
xchg
sub
fsts
in
inc
adc
inc
mov
cmpsb
push
lds
inc
sbb
mov
dec
data16
add
xor
out
pop
cltd
cld
stos
xor
and
jle
scas
lahf
push
negb
mov
jno
out
mov
ja
hlt
mov
or
lcall
fdivl
mov
clc
dec
dec
scas
add
add
out
addl
and
fldenv
call
xor
sub
xor
cmp
lds
xor
jecxz
jp
stos
add
xor
push
and
insb
leave
mov
cmp
fst
movsl
jae
xor
out
lea
xchg
outsb
es
mov
fiaddl
adc
xchg
inc
call
in
fs
int
lods
add
hlt
fwait
add
sub
adc
mov
sbb
push
int3
lcall
ficompl
fcoml
push
pop
xchg
popl
lret
add
adc
shrl
out
xchg
shr
hlt
pop
sub
es
cmc
pop
mov
pushf
lods
std
mov
je
pop
outsl
aad
dec
ret
adc
ret
jnp,pt
outsl
subb
lea
lock
pop
mov
out
jmp
inc
fs
adc
and
push
xor
stos
repnz
add
test
test
sub
mov
fsubrs
fsubrl
shlb
stos
mov
inc
push
jno
aam
add
fs
cmp
pop
mov
pop
sbb
adc
or
add
stos
insl
inc
movsl
fcmovne
ja
fbld
roll
adc
sti
ljmp
inc
jl
dec
mov
inc
bound
xor
cmpsb
out
adc
subb
and
cmp
adc
inc
fwait
jnp
aaa
add
xchg
xchg
addr16
pop
dec
xor
aad
mov
adc
add
sbb
dec
idivl
sub
out
ja
and
mov
pop
outsl
out
lods
in
or
sub
outsb
cmpsl
cmp
jae
pop
or
dec
ljmp
mov
xor
cli
shll
sbbb
add
mov
cmp
fsubrp
mov
add
in
je
out
xchg
pmaxub
outsl
stc
les
sahf
fisttpl
rcr
mov
adc
and
rcrl
in
stos
adc
lea
outsb
push
mov
sbb
push
sub
adc
je
ljmp
insl
push
jp
xchg
sti
sub
out
fldt
mov
out
push
pop
subb
and
adc
lcall
movsl
cmpsb
pop
pushl
pop
movsb
add
and
fs
pop
or
data16
xchg
ljmp
mov
ficompl
mov
jl
rol
lea
dec
adc
push
movl
scas
call
jo
push
aas
int
hlt
push
mov
or
dec
mov
inc
pop
push
jmp
push
mov
pop
pop
lds
pop
mov
imul
jbe
sub
pop
mov
sbbl
jg
jl
pop
fstpl
mov
and
add
sbb
push
add
int3
loop
aam
inc
rorb
clc
push
mov
xchg
jmp
push
and
test
rcpps
mov
sub
mov
push
inc
es
adc
sbb
sub
lods
into
outsb
clc
dec
xchg
shll
aas
pop
int
mov
fistpl
or
push
scas
aas
mov
mov
or
repnz
bound
aam
std
lea
das
outsb
xor
fs
out
ret
insl
xchg
sti
popa
xchg
mov
test
pop
pop
ja
dec
mov
jle
sbb
pop
pop
dec
pop
nop
push
jo
add
xchg
mov
and
adc
cmp
or
push
in
out
jnp
loopne
fst
rcr
pop
xor
xor
jl
xor
dec
movsl
pushf
outsb
icebp
xor
cmc
enter
jle
add
push
mov
push
mov
cwtl
xchg
and
adc
mov
push
push
notl
jmp
cmp
inc
bound
inc
repnz
ret
aaa
add
stc
or
xor
fdivr
cmp
dec
jecxz
cltd
iret
pop
sarl
or
lret
and
xor
sbb
andb
and
enter
popa
enter
xchg
xchg
xchg
pop
mov
push
or
mov
cmp
pop
lea
mov
call
cmp
sub
mov
pop
popa
cmp
and
sub
jl
lret
sub
mov
jae
dec
daa
sub
loope
pushf
sbb
mov
pushf
jns
iret
sbb
jb
mov
xlat
out
inc
xor
xchg
repz
fnstsw
mov
movb
inc
ret
jle
sbb
aam
xchg
rorb
scas
pop
lods
pushf
sbb
sbbb
jge
sti
sbb
cmp
sub
ja
mov
jb
dec
push
mov
add
out
push
sbb
pop
pop
jns
push
xchg
shl
sub
mov
mov
stc
lods
in
mov
loop
lods
fstpt
adc
mov
sti
fsubl
mov
repnz
jns
xlat
and
sbb
jge
adc
insb
enter
fstpl
pusha
movsl
jecxz
mov
scas
lock
std
shll
inc
push
shrb
imul
inc
xchg
mov
movsb
lret
mov
inc
adc
dec
pusha
pop
rcll
xor
push
cmpsl
mov
mov
mov
pop
adc
jnp
inc
jp
mov
shll
and
out
addr16
cmpsb
cmp
arpl
popf
or
lret
cld
mov
push
dec
add
cld
stc
gs
or
jmp
jne
insl
mov
movsb
cmp
mov
loope
pop
pop
pop
ret
ret
aas
adc
or
out
jp
stos
push
out
dec
pop
xlat
mov
loopne
push
jbe
dec
out
push
jecxz
je
icebp
popa
loop
es
call
add
shrb
pop
dec
lds
sbb
fdivr
dec
xor
sub
inc
fmuls
jns
mov
lcall
adc
cmp
in
cmp
xchg
or
testb
je
cmp
mov
bound
fidivrs
pop
ret
pop
xor
les
or
cs
cmp
hlt
lahf
or
mov
rcl
scas
cmc
sbb
pop
or
and
lods
or
rcl
adc
out
xchg
cmc
xor
add
lea
mov
ret
lock
mov
ljmp
leave
pop
test
jmp
jge
bnd
mov
sub
xor
fnstsw
cwtl
pop
xor
and
std
mov
dec
cmp
mov
scas
dec
enter
pushf
sbb
xor
aam
leave
pop
test
jmp
sbb
cwtl
scas
pop
add
pushf
imul
fnstsw
loope
add
movsl
out
fcoms
enter
aad
in
xor
add
sar
inc
xchg
sub
cmp
lret
inc
xchg
mov
pop
imul
cld
jno
cmp
and
bound
arpl
mov
add
pop
sub
xchg
inc
daa
lds
mov
pop
aaa
dec
push
test
push
cs
pop
jo
xor
mov
sbb
xchg
xchg
cmpsb
sub
lret
or
push
ja
jne
push
xchg
mov
fnsave
add
adc
fldpi
out
sbb
pop
xchg
iret
outsb
aad
push
and
jle
stos
add
outsl
sbb
mov
cmp
mov
js
out
into
in
mov
jge
cmp
ja
sbb
call
mov
movsl
cltd
insl
stos
mov
pop
pop
cli
xchg
add
nop
cmp
mov
xorl
fcoms
adc
leave
ds
or
repz
adc
mov
pop
test
dec
add
adc
adc
cmpb
clc
mov
mov
cmp
inc
and
add
adc
das
xchg
mov
xchg
lods
fstpl
aas
add
ret
cmpb
orb
xchg
mov
adc
xchg
inc
andl
arpl
sti
cmpsl
mov
mov
clc
xchg
pop
push
lret
push
adc
jno
int3
std
pushf
push
lret
or
xchg
loope
dec
push
insl
mov
dec
cmp
add
xor
add
cmc
incl
inc
jl
ljmp
dec
push
scas
cmp
sbb
es
jbe
shll
ja
scas
xor
adc
xlat
pusha
bound
lcall
inc
int
out
movsl
subl
jmp
int
pop
inc
xchg
scas
int3
sub
mov
repnz
adc
sub
jl
cli
inc
or
dec
mov
and
or
xor
lds
xchg
cltd
test
bound
sub
ja
xchg
aaa
cmp
mov
mov
jmp
xor
jo
dec
or
xchg
mov
mov
adcl
pop
nop
out
mov
rcr
and
testb
cmp
or
push
cmp
scas
daa
mov
aaa
insb
push
dec
cmpsb
mov
int3
add
jmp
xchg
jae
and
cld
mov
pop
bound
pop
jno
loop
std
std
hlt
pop
or
push
and
xlat
add
pop
mov
push
lret
popf
test
cmp
lea
adcl
rorb
add
xchg
and
stos
in
xchg
add
mov
inc
pop
test
jbe
inc
divl
xchg
pop
jmp
mov
pop
mov
pop
rorl
push
cmc
xor
mov
cli
rclb
sbb
stc
mov
cmpsb
scas
sub
ljmp
xor
cld
jb
adc
cltd
push
hlt
lods
mov
sarl
cmp
fmull
aaa
aaa
sar
sub
es
cmp
in
outsl
mov
inc
popf
dec
jo
sarl
aas
mov
jmp
sti
jmp
add
fcmovb
mov
out
mov
popf
cli
mov
aam
xchg
xchg
mov
movsl
xchg
jmp
cmpsb
mov
or
push
outsb
icebp
fiaddl
jae
jns
frstor
inc
mul
scas
repnz
fldcw
out
pop
cmp
adc
cmpsl
call
mov
fwait
loope
inc
cli
iret
mov
add
gs
inc
ficomps
add
out
pop
push
xchg
xor
fcom
fbld
adc
dec
iret
mov
cs
int3
push
sbb
mov
jb
rorb
sbb
or
js
daa
push
pop
mov
insb
xor
divb
int
jl
xlat
dec
pop
or
or
jl
lcall
xor
inc
and
mov
aas
movsb
mov
ds
ret
fs
push
pop
push
mov
mov
sbb
dec
add
push
sub
push
mov
xchg
repnz
mov
je
inc
push
pop
adc
or
xchg
sahf
jmp
mov
pop
adc
pop
jnp
jns
pop
dec
adc
push
dec
outsb
push
repnz
fisttpll
mov
in
sbb
cld
or
mov
mov
fldl
adc
sahf
fcmovbe
xchg
inc
mov
icebp
inc
dec
or
into
cmp
or
dec
xchg
daa
cmp
xorb
and
sbb
jo
mov
xchg
mov
xchg
mov
movsb
iret
inc
rcll
xor
and
bnd
and
lods
pop
dec
mov
std
push
mov
loopne
imul
lea
push
pop
sbb
inc
lds
ret
jmp
lret
imul
fucomip
outsl
sbb
mov
sub
lcall
cwtl
jo
inc
mov
outsl
cmp
dec
daa
dec
movsb
aad
cmp
mov
dec
adc
or
call
xchg
mov
xchg
loop
jecxz
decb
test
cmpsl
std
adc
inc
pop
outsl
push
cmp
add
add
or
cmc
sbb
out
xchg
ja
stos
ljmp
addr16
push
sahf
xchg
add
adc
mov
inc
or
je
orl
loop
xor
xor
out
ja
mov
test
push
push
pop
and
jae
outsb
iret
call
sbb
adc
inc
pop
insl
jge
movsb
cmp
sahf
nop
test
and
jno
loope
jne
loopne
sub
dec
hlt
sub
aam
adc
scas
fmull
sbb
insl
shll
mov
dec
cmp
fdivrs
pop
push
jecxz
inc
pop
dec
fstl
mov
ljmp
pusha
sbb
loopne
mov
movsl
jmp
scas
cmp
mov
loop,pt
cmp
sub
cmp
push
into
lods
mov
inc
ret
test
dec
jns
pop
insl
cld
inc
xchg
inc
xchg
mov
fsub
pop
sub
adc
loop
sysenter
jle
mov
test
add
int
jo
cs
or
push
xor
data16
aad
into
push
add
das
and
or
mov
fistl
int
mov
in
sbb
mov
mov
sbb
or
pop
inc
jns
in
iret
sbb
lds
rcl
pop
rcrb
and
mov
negb
or
fs
cmpsl
out
jg
sub
lea
mov
cmp
jb
fstl
loopne
bound
mov
cmp
mov
or
push
inc
mov
in
pop
or
and
push
xor
dec
push
int3
cmpsl
sbb
insb
icebp
repnz
adc
pop
jmp
sbb
mov
cmc
sbb
icebp
dec
test
push
fs
int3
stos
repnz
repnz
jne
mov
ret
out
pop
addr16
bound
sbb
mov
mov
testb
mov
in
jmp
pop
adcb
int
mov
aad
gs
push
adc
sbb
xlat
or
and
lahf
in
loopne
imul
out
imul
adc
cmp
out
or
movups
mov
sti
int
add
mov
add
imul
shrl
pusha
sti
add
test
imul
push
xchg
push
and
stos
adc
daa
pop
stos
movsb
xlat
mov
pop
cmp
je
gs
incb
cmp
bound
dec
lock
push
sub
inc
stos
push
out
jne
push
shl
jno
gs
insl
icebp
ffree
mov
sahf
lds
clc
cmpsl
sbb
imul
push
add
lahf
mov
jmp
insl
xor
int
push
aas
jg
cmp
fsts
outsb
mov
stc
add
and
mov
out
mov
adc
outsl
lock
test
dec
das
loop
xlat
fnstenv
push
adc
loopne
clc
sub
fistpl
inc
lock
xor
jp
add
cld
clc
or
xor
cmp
fisttpl
push
push
pop
inc
xchg
loop
test
mov
cmc
stos
arpl
into
push
fadd
push
jae
jg
xor
repz
mov
xor
push
inc
xor
xor
xchg
jmp
sub
xlat
test
or
fdivrs
fidivs
and
dec
in
mov
pop
cltd
pop
jae
sub
cmp
pop
test
push
imul
or
fisubrs
fsts
xor
or
mov
fiaddl
mov
lock
mov
dec
sbb
push
mov
lds
xor
or
add
dec
rcrb
shrl
add
jecxz
dec
movhps
insb
nop
dec
dec
or
pop
loope
fcoml
add
leave
jne
in
stos
loope
pop
pushl
adcl
push
jbe
lods
gs
mov
mov
xor
in
stc
mov
and
mov
push
or
mov
fs
in
pop
pop
test
mov
test
sub
dec
cmp
jp
jl
orb
pop
and
nop
adc
adc
pop
jb
mov
xchg
dec
xor
mov
jns
aam
cmpl
cli
mov
test
push
icebp
or
dec
jmp
inc
call
cmp
dec
rcll
je
cmp
inc
addr16
cwtl
cmpsb
add
shr
sub
cmp
push
shll
inc
sub
js
enter
xor
stc
pop
dec
and
push
and
hlt
mov
mov
mov
mov
insb
arpl
mov
in
jne
sarb
rcr
mov
mov
add
adc
mov
loop
out
les
push
dec
add
mov
sub
cmp
icebp
xchg
xlat
push
addr16
add
lods
lret
aad
addb
insb
popa
inc
jge
mov
and
mov
sbb
scas
cltd
cltd
or
and
in
shlb
incl
mov
jns
xchg
cmpsb
lret
outsb
cmp
aas
mov
xchg
repnz
adc
rcl
ret
sbb
divb
movsl
lret
jl
or
mov
idivb
sbb
fcompl
pop
lahf
cmp
mov
mov
jae
rol
outsb
sbb
xchg
mov
pop
jne
arpl
add
inc
flds
sbb
shrb
ss
or
mulb
pop
sbb
adc
pushf
pop
jge
in
xchg
nop
push
push
idivb
pop
icebp
stos
or
mov
mov
push
pop
sub
pop
cwtl
je
pop
cmc
jg
inc
imul
insl
xor
inc
jae
mov
pop
jns
call
gs
jecxz
pop
movsb
push
js
xor
cmc
sbb
ss
dec
out
adc
sbb
enter
std
rorl
push
lret
mov
outsb
lock
loop
fimull
les
xchg
jmp
bound
push
mov
dec
out
lcall
cmp
mov
jecxz
pop
adcb
mov
insb
rcrb
ror
jo
xchg
adc
cmp
xchg
lods
ja
mov
repnz
mov
aaa
lahf
xchg
mull
jns
mov
lods
pop
shlb
std
insl
add
xor
mov
xor
aad
in
cwtl
and
das
scas
mov
in
or
dec
aam
idivl
jp
cmp
shrb
movsb
scas
jp
cld
pop
mov
sub
sbb
sub
jp
push
add
dec
fcomp
faddl
scas
sbb
cld
cmpsb
mov
push
bnd
mov
xchg
cs
mov
xchg
mov
xchg
pop
mov
jno
cmp
inc
inc
lret
orl
cmpsl
cmp
and
mov
mov
cmp
lea
das
cmp
js
push
pop
cmc
pop
push
xor
jnp
jb
in
cmp
sarb
or
xchg
lea
push
pop
xor
fadds
push
cmpsl
pop
roll
out
xchg
xor
xor
push
imul
rcll
or
leave
in
mov
mov
mov
sub
xchg
xchg
int
jmp
jecxz
xchg
or
or
push
sbb
outsb
aas
fs
push
pop
add
call
mov
sub
jmp
mov
xor
mov
cli
arpl
xor
enter
xor
xor
or
sub
or
loope
push
stos
out
sub
add
pop
adc
jecxz
in
xchg
cwtl
sar
inc
pop
out
fcompl
je
and
sbb
mov
jae
push
iret
jge
frstor
lret
lods
sub
aaa
scas
cmp
or
push
lahf
lret
cmpsb
andl
pop
stos
sbb
loope
dec
push
jae
stc
hlt
clc
js
inc
call
adc
pop
in
pop
push
stos
mov
int
in
ret
mov
ja
mov
add
dec
loop
and
sub
sub
mov
xchg
cmp
xchg
mov
mov
stc
dec
outsb
mov
mov
and
jge
iret
in
sbb
shrb
pop
inc
dec
pop
not
cmpsb
lahf
push
mov
jo
loope
add
clc
pushf
leave
fsubs
leave
mov
mov
jnp
sub
cli
push
push
mov
mov
jmp
ficomps
iret
pop
movsb
or
lret
int3
icebp
inc
mov
fcoms
jbe
mov
fistpl
push
adc
xchg
ss
pusha
xchg
cmp
pop
xchg
fisubrl
pushf
int
push
add
imul
mov
or
nop
sub
inc
ja
pop
mov
lods
scas
sti
dec
mov
shlb
or
mov
inc
inc
xchg
out
mov
push
xor
adc
push
mov
lods
ror
loope
cs
push
jmp
bound
mov
push
xor
or
movsl
add
cwtl
cmp
cmc
movsl
cmp
mov
cli
lret
push
aam
sub
test
shl
ficomps
mov
jg
jl
jns
enter
inc
and
pop
stos
ret
pushf
nop
and
scas
sbb
loopne
pop
ljmp
pop
loopne
xchg
daa
jg
jae
mov
mov
cmpsb
pusha
insb
jmp
sahf
int
adcb
mov
sbb
xlat
sbb
sbb
stos
cld
dec
insb
testl
lahf
mull
test
ret
shl
pop
out
stos
mov
imul
out
and
bound
shll
add
mov
hlt
mov
mov
fisubl
out
leave
jecxz
movsl
dec
add
bound
mov
insb
inc
jl
jl
es
or
jne
ret
mov
mov
push
adc
mov
jecxz
ljmp
sub
iret
lock
fs
hlt
add
mov
cmc
inc
sbb
pop
mov
adc
or
push
aad
pop
jbe
or
leave
mov
sbb
sbb
call
push
jmp
out
dec
pop
in
into
adc
push
shld
js
add
push
imul
into
cmp
ja
scas
push
jnp
cmp
xchg
int3
and
outsl
dec
sbb
lds
stc
cmpsb
pop
push
pop
addb
dec
shlb
lret
pop
push
mov
scas
adc
and
sub
cmp
mov
insb
sbb
iretw
stos
outsl
and
int3
imul
int3
ljmp
push
jecxz
xchg
sub
add
rcrb
dec
inc
cmp
mov
cmp
das
mov
repnz
cs
push
mov
in
addr16
imul
add
cmp
fidivl
icebp
mov
xchg
mov
cmc
outsl
pop
adc
pusha
test
mov
mov
lds
mov
jge
enter
push
inc
test
push
pop
mov
rol
push
push
cmp
cmp
push
rorl
pusha
mov
pop
xor
add
adc
bswap
imul
jne
fucom
enter
xor
jne
dec
mov
int3
sbb
xchg
stos
dec
push
xor
inc
inc
or
arpl
cmp
xchg
imulb
es
and
js
fildll
mov
imul
icebp
data16
xchg
imul
jns
or
out
lds
ljmp
inc
jnp
xchg
mov
hlt
addps
movsl
xchg
cld
js
iret
mov
cmpsb
pop
aam
sub
inc
leave
pop
out
xor
mov
mov
adc
arpl
ds
test
adc
aam
xchg
movsb
movswl
adc
andb
insl
adc
outsb
ljmp
scas
ret
sbb
out
or
mov
jb
sub
and
daa
rcrl
cmp
jmp
push
shlb
adc
inc
pop
mov
cmpsb
xchg
fwait
and
and
xor
fs
int
sbb
or
fcomip
or
xor
mov
inc
jne
sub
sub
inc
loope
mov
test
sub
xorb
lret
jb
push
mov
push
sbb
xchg
stc
fldenv
scas
ror
dec
adc
pusha
mov
mov
inc
test
inc
sub
mov
cmp
cmp
xchg
xchg
mov
pop
mov
dec
mov
in
push
out
mov
mov
gs
orl
push
in
adc
mov
push
inc
int3
dec
mov
lea
jnp
and
rcll
and
jge
andb
movsb
push
rcrl
fdivs
mov
fmuls
clc
fistps
mov
xchg
jmp
lret
xor
sub
aaa
jmp
ficoml
loopne
fists
add
sub
sub
sub
and
cmp
dec
ss
out
test
leave
push
ficomps
push
cmp
mov
flds
xchg
sub
es
shlb
repz
inc
push
fildl
imul
lds
in
in
movsb
lods
hlt
dec
jle
out
fs
rorb
push
xorl
repz
or
scas
pop
lcall
inc
sub
mov
cmp
xor
sub
aam
les
push
adc
adc
push
pop
dec
adc
push
mov
addb
jle
adc
push
call
or
fcomps
add
int3
cltd
mov
xchg
ja
cli
addr16
addr16
fidivl
add
pusha
leave
jo
add
in
xor
dec
lds
mov
pop
fldl
jb
mov
inc
mov
mov
adc
lcall
arpl
xchg
lds
pushf
dec
nop
push
push
std
ss
jle
adc
or
mov
cmp
js
push
adc
sbb
adc
pusha
xor
push
xor
call
je
std
jg
outsl
sbb
cmp
xor
fldl
cld
out
xchg
sbb
test
push
pop
dec
lods
stos
push
sarl
dec
cmpsl
mov
mov
repnz
jmp
dec
and
jp
repnz
hlt
dec
sbb
arpl
inc
imul
or
pop
add
mov
add
mov
pop
xor
inc
fiaddl
and
imulb
jnp
loope
mov
jl
ret
pop
ds
push
cmp
pop
xchg
or
loopne
movsl
dec
and
shlb
and
inc
mov
lock
outsb
jmp
sbb
pop
mov
ljmp
les
loope
stos
or
aad
test
aaa
fdivl
adc
and
orb
pusha
mov
pop
sbb
jb
or
cmpb
cmp
aas
movsb
jp
xor
mov
jle
sbb
xchg
std
adc
pop
push
xchg
sub
pusha
xor
es
cmp
and
mov
inc
pop
jmp
sub
sarb
daa
dec
mov
fwait
mov
push
mov
dec
out
xor
sbb
rolb
es
test
dec
push
or
cs
mov
mov
nop
rclb
clc
pop
mov
inc
leave
jae
pop
std
aad
push
pop
mov
xor
insb
adc
fucomip
fdivs
push
inc
jmp
in
jle
pop
mov
ljmp
or
sahf
les
mov
or
add
fdivs
pop
add
fsubr
fcmovu
or
jle
jo
jne
mov
and
add
popf
xchg
mov
inc
insb
in
nop
push
xlat
lods
inc
mov
stos
cwtl
fwait
out
imul
in
ror
cltd
mov
push
fwait
sbbl
int
and
stos
xor
repnz
call
inc
dec
rcl
or
jae
loop
add
scas
add
jl
xchg
pop
fsubrl
jecxz
mov
adc
cmp
ret
sub
test
jmp
loopne
jb
outsl
sub
andl
leave
xchg
mov
xchg
in
xchg
in
xchg
jae
sbb
cld
mov
mov
ja
pop
adc
cmpsl
pop
cmp
push
inc
mov
scas
stos
and
mov
inc
adc
mov
test
add
jge
into
fwait
and
jmp
in
in
mov
jmp
fs
dec
fxch
add
popa
stc
and
lret
subl
aad
ffreep
inc
jp
lock
dec
lods
xchg
push
pop
das
and
mov
push
xorb
lcall
jne
jecxz
sti
and
sbb
mov
out
pop
cmp
test
popf
pusha
cmpsl
mov
and
fwait
loope
and
fisttps
jns
cmp
or
jle
mov
movb
sub
popf
lock
out
cltd
push
jnp
idivl
jno
mov
insl
in
pop
cltd
test
lahf
mov
das
movsl
push
stc
inc
out
es
icebp
imull
cltd
push
call
imul
ss
sub
add
xor
inc
or
mov
mov
hlt
add
ljmp
adc
cltd
add
and
lea
push
or
jmp
int
mov
stos
mov
push
xor
and
and
xchg
sbb
push
push
repnz
cmc
imul
lods
stc
ja
xchg
push
fbld
gs
cmp
daa
pop
dec
lahf
mov
in
clc
mov
mov
pop
xchg
jo
add
std
ret
dec
dec
insb
loop
xlat
jp
add
fcmovnb
out
adc
pop
enter
fdivs
lret
lcall
pop
dec
sti
ror
jge
sub
lds
add
stc
inc
xor
mov
dec
sarl
je
sub
lcall
mov
xor
xor
cmpsb
push
lods
out
outsl
cs
outsb
out
mov
ret
gs
out
cmpl
aaa
mov
pusha
or
xchg
inc
add
ret
test
out
push
mov
shl
pop
sbb
dec
das
inc
pop
mov
mov
adc
ja
lods
gs
mov
les
sub
fcom
xor
sti
xchg
lret
orb
xchg
push
xchg
xor
inc
scas
dec
fbstp
fistl
pop
mov
clc
xor
xchg
mov
inc
or
pop
in
mov
push
cmpsb
jbe
jne
sti
repnz
out
dec
nop
adc
hlt
cmp
es
dec
adc
ljmp
imul
pop
fcoml
jb
aas
dec
xchg
mov
xchg
out
test
mov
repnz
jle
add
in
iret
mov
mov
stos
inc
xchg
mov
addl
int3
and
dec
jne
stos
add
pop
mov
mov
repz
cmp
ret
out
xchg
subb
and
call
aad
fnsave
xor
test
movb
bound
mov
jbe
adc
or
pop
lds
wbinvd
popf
mull
adc
pop
jge
sbb
xchg
fnsave
ljmp
and
fs
addl
nop
dec
out
xor
test
test
js
and
mov
sbb
fwait
addr16
repz
shll
andb
arpl
popa
imul
in
cmc
adcb
jp
jecxz
mov
out
leave
es
xor
rcl
mov
hlt
xor
les
and
push
lock
les
add
ret
jne
faddl
sbb
cli
jmp
inc
out
test
xchg
add
movsb
daa
aaa
mov
push
aad
jnp
push
or
fs
out
jae
xchg
jmp
mov
sub
pop
xor
and
sahf
inc
stos
xor
pcmpeqd
loopne
mov
sub
xor
ret
aas
jg
js
xchg
movsb
rcl
mov
sub
sbb
xlat
fsub
xorl
xorl
xor
inc
ja
pop
cs
push
mov
add
xchg
lret
jne
and
jb
movsl
stos
adc
in
sti
mov
fdivrp
jno
xchg
ja
movsb
addb
test
mov
notb
xchg
push
mov
cmp
lcall
jp
cltd
fcom
nop
shlb
pop
sbb
js
std
pop
lods
ds
adc
negl
imul
mov
in
not
xchg
sbb
loope
sbb
rcrl
pop
insl
pop
cmp
jg
mov
int3
je
mov
xchg
mov
fnstcw
jge
test
cs
mov
rorb
test
imul
xor
data16
inc
pop
adc
cwtl
nop
cmp
and
mov
mov
sahf
popf
push
inc
pop
dec
mov
cmp
mov
aaa
inc
jl
jo
in
test
icebp
subl
jl
out
fldcw
out
daa
add
call
rolb
faddl
xor
shll
adc
pushf
xorl
cmp
lds
leave
jge
and
dec
insl
mov
adc
mov
shlb
das
arpl
clc
xorl
sahf
jle
addr16
insl
fnstsw
mov
cmp
fcompl
adc
cmp
mov
das
notl
xchg
dec
xchg
adc
sub
inc
add
jmp
andb
arpl
je,pt
test
adc
sub
cmpl
outsb
lcall
push
cmp
xorl
rcl
push
int3
cmp
shll
ljmp
imul
psubsw
and
std
pop
aas
jg
jp
pop
mov
icebp
lds
adc
mov
lock
pop
sub
xchg
pop
aas
sub
mov
stc
imul
xchg
and
out
pop
in
ds
loopne
mov
fbstp
xor
jne
sub
dec
loop
sbb
inc
mov
xchg
or
ucomiss
inc
push
outsb
push
jbe
mov
dec
cmc
jbe
mov
int
iret
jmp
scas
pop
pop
cmpsb
pop
insl
pusha
add
xchg
sbb
pusha
aas
outsb
dec
jmp
insb
mov
mov
pop
push
addb
mov
jp
out
jecxz
inc
in
inc
sub
mov
dec
mov
stos
push
andl
push
pop
inc
xor
mov
push
lods
jl
loop
rcrl
inc
push
cmpb
popa
fstpt
and
mov
shlb
mov
jne
into
in
sbb
flds
ret
cmc
lock
cmp
dec
xchg
xchg
mov
stos
popa
enter
lahf
mov
jnp
aam
push
inc
arpl
stos
das
not
out
dec
push
out
inc
rolb
xchg
push
enter
adcl
jno
insl
push
adc
ret
jle
sub
push
push
cmp
or
test
lret
pop
mov
dec
pop
jns
pushf
cmp
shll
loopne
xchg
cmpsl
loope
les
ja
daa
stos
ds
mov
sbb
jns
mov
mov
add
xchg
lds
pushf
adc
mov
add
lret
jl
inc
push
add
add
push
add
hlt
mov
push
sub
pop
addl
imul
push
stos
ror
cmp
popa
push
or
andl
pusha
out
or
jecxz
inc
cs
stos
lods
lock
pop
and
push
push
xchg
stos
push
jmp
outsl
xor
xchg
xchg
cmp
adc
loope
stc
jp
pop
mov
or
in
sbb
aas
dec
into
inc
cmp
or
jmp
dec
popf
push
movsb
jae
daa
out
mov
jmp
inc
das
arpl
inc
dec
sub
xchg
icebp
jnp
jns
mov
inc
xchg
lahf
sbb
cwtl
add
push
pop
mov
fmuls
adc
outsl
pop
push
push
mov
mov
adc
stos
mov
gs
sub
popa
call
mov
leave
jmp
and
lds
clc
pop
pop
push
sbb
mov
in
lret
inc
js
xchg
and
xchg
scas
rcrb
mov
fbstp
inc
popf
pop
in
aad
mov
imul
jp
mov
pop
add
pop
cli
roll
cmp
adc
addb
cli
cwtl
repnz
jg
pop
push
sahf
out
inc
sbb
loop
mov
push
mov
loop
addr16
mov
pusha
inc
adc
mov
pop
jno
mov
fwait
iret
out
push
insl
loopne
xchg
push
push
lods
rcrl
jge
pusha
add
imul
cmpsb
add
scas
aam
shrb
jne
and
xchg
push
or
pop
leave
jp
mov
xlat
sbb
jnp
push
cltd
int3
inc
movsb
imul
aam
enter
aad
dec
xor
dec
add
sub
inc
mov
xor
dec
mov
sbb
icebp
in
pusha
test
sub
mov
xchg
pop
add
scas
cltd
out
jo
repnz
cmp
add
xchg
subb
lds
mov
push
pop
mov
hlt
stos
das
mov
sti
or
inc
cmp
or
hlt
mov
rclb
lahf
mov
ret
mov
bound
xorl
roll
fbstp
jae
and
pop
push
dec
cmp
dec
xor
aad
sbb
les
mov
mov
lahf
cmpsl
add
shl
pushf
or
mov
xor
ret
clc
mov
ja,pt
lods
or
xchg
dec
dec
lcall
jle
gs
dec
pop
mov
out
aad
dec
cmc
aad
sahf
lods
pop
cmpsl
ja
sub
out
loope
aad
mov
sahf
aas
or
repz
lods
mov
scas
iret
pop
mov
and
stc
scas
xchg
das
sbb
jge
jb
icebp
imul
call
ficomps
mov
inc
mov
mov
adc
addr16
loopne
or
gs
xor
lds
or
lock
jge
dec
sub
movsb
pop
in
xor
stos
dec
out
push
cltd
push
adc
jp
adc
mov
and
pop
loop
scas
and
mov
xor
stos
mov
add
cmc
or
mov
out
jmp
incb
mov
addl
stos
insb
dec
jecxz
mov
jo
das
mov
push
cltd
leave
pop
xchg
pusha
pop
sarl
push
mov
int3
stos
push
stos
push
outsb
in
sbb
or
xchg
mov
xchg
mov
cmpsb
fucom
int3
push
mov
clc
int
push
nop
and
outsl
mov
jmp
pop
repnz
mov
in
pop
pushw
fdivrs
mov
jge
dec
gs
inc
push
jmp
xorb
mov
xor
jg
push
sub
outsl
push
push
mov
call
shl
in
lahf
jp
mov
lret
pop
fcompl
bswap
mov
xchg
sub
and
mov
mov
pusha
pop
jo
xlat
scas
push
loope
ds
scas
xchg
mov
popf
mov
and
pop
jecxz
add
daa
sub
das
lea
int
outsl
das
mov
pushf
sub
das
jmp
imul
add
int3
fldt
nop
adc
roll
rcrb
push
mov
mov
fs
unpckhps
xchg
sub
ret
mov
push
testb
and
or
ds
das
je
shll
repz
lds
dec
sbb
xchg
rol
ret
je
or
pop
mov
mov
adc
fwait
aad
vmovdqa
push
xchg
sti
dec
cmp
sarb
or
imul
mov
leave
jecxz
test
sub
jb
xchg
call
loopne
fdivl
test
movsl
out
mov
call
out
mov
sbb
es
xor
mov
push
dec
aad
mov
movb
je
sbb
aaa
fildl
shlb
hlt
push
idivl
cs
ficomps
ds
jb
loope
add
sbb
cmp
mov
inc
push
aas
push
stc
sub
loopne
push
cmp
loopne
shlb
add
jge
fcom
xlat
jp
out
add
jo
cwtl
inc
push
push
mov
add
stc
sbb
lahf
mov
mov
jg
aaa
and
dec
dec
or
js
cs
movsl
shl
inc
push
adc
push
push
aad
enter
out
cwtl
xsavec
xor
pusha
fucomip
arpl
jno
inc
cmp
sub
sub
out
addb
pop
push
mov
dec
adc
jge
cmp
jnp
imul
ljmp
cmpsb
sub
sahf
clc
jge
jmp
xor
repnz
loope
rorb
call
cld
pop
xor
adc
leave
test
sub
jmp
cmpsl
pop
test
mov
adc
mov
jecxz
in
clc
mov
lcall
cmp
movsb
pop
mov
adc
jge
outsb
ret
mov
push
fs
sbb
pop
cmp
adc
ljmp
mov
data16
mov
pop
daa
cmpsb
cld
mov
jl
loopne
push
or
pop
enter
mov
ficomps
sbb
sub
jmp
fwait
and
sbb
sub
pop
xor
push
push
pop
xchg
out
data16
nop
insb
les
std
inc
mov
adc
bound
and
mov
ret
in
xlat
stc
int3
jg
inc
mov
mov
mov
add
xor
repz
cld
stos
inc
sub
cwtl
es
or
dec
ret
popf
xchg
lret
loope
xchg
in
popf
in
in
pop
rcrl
mov
lods
mov
lods
push
cmp
inc
mov
cwtl
cmc
push
push
cmp
in
outsb
xchg
pop
jmp
mov
aas
ret
and
xchg
pop
and
insb
cmp
jp
es
or
outsb
jg
adc
mov
insl
cli
loopne
pushf
test
hlt
outsb
cmp
loope
add
lods
fiadds
cmc
jge
jg
sbbl
stos
in
inc
enter
mov
lods
stc
pop
fs
sbb
inc
sub
ss
pop
jge
xor
sbb
adc
std
movsb
stos
in
arpl
xor
xchg
call
push
or
stos
addl
mov
andb
jno
jge
pushf
mov
adc
inc
mov
or
add
fadds
jnp
xchg
jae
cld
adc
into
xchg
xor
sbb
lods
inc
lock
das
mov
iret
dec
jmp
sbb
pop
addr16
fistpl
mov
push
or
iret
dec
lcall
or
ja
add
ret
imul
nop
enter
jb
or
and
decb
adc
cltd
inc
insl
lods
xchg
mov
je
push
push
lods
mov
sbb
mov
aad
outsb
fcmove
adc
inc
cld
stc
adc
inc
xchg
mov
mov
int3
insl
or
dec
int
dec
lret
push
ret
cld
in
or
pop
in
popf
adc
andl
or
loope
inc
mov
daa
int
fsts
inc
daa
test
das
sbb
xchg
mov
xor
inc
xchg
jb
cmp
pop
mov
scas
xchg
das
and
sub
cmp
adc
mov
mov
les
ljmp
pop
mov
std
dec
push
inc
outsb
aad
ss
outsb
push
adc
jge
stos
jb
xchg
sub
xchg
out
jnp
das
addl
sub
pusha
mov
or
cmp
icebp
push
pop
cli
and
xor
cmp
dec
or
repnz
or
cmp
add
rcll
mov
ret
jns
pop
cwtl
inc
movb
sub
mov
out
lret
adc
aad
dec
in
outsl
cltd
pushf
sbb
or
iret
fimuls
pop
jno
inc
insb
mov
mov
popf
test
xor
xchg
nop
es
push
adc
jl
add
push
pop
push
lret
and
xchg
js
sbb
out
aad
cwtl
sub
pop
jb
xor
jmp
ret
and
mov
decb
fwait
xorl
pop
pusha
xchg
inc
add
sarb
out
adc
int3
int
test
negb
aaa
mov
jmp
push
mov
push
lock
jae
jmp
lds
or
std
pusha
cmpsb
adc
pop
push
pop
push
js
out
arpl
pop
inc
adc
add
sub
xchg
push
or
scas
cmpsb
sub
pop
mov
pop
xchg
mov
fld
adc
lock
mov
jl
and
bound
xchg
cmp
sti
test
push
out
scas
mov
arpl
mov
inc
and
cmp
je
lea
jp
in
lods
test
inc
fstps
cmp
adc
cld
iret
insl
fbstp
insl
out
push
daa
mov
pand
inc
push
sub
into
mov
add
cmp
inc
int
dec
dec
incb
ret
sbb
cmpsb
jecxz
inc
sahf
mov
mov
mov
cmc
dec
fidivs
xchg
imul
scas
out
jnp
xchg
test
push
mov
out
push
push
add
mov
ss
idivl
rorb
mov
sub
jbe
add
inc
mov
xchg
add
pop
in
mov
push
cmp
insb
jg
gs
fists
mov
push
sub
scas
jle
call
sbb
sub
jnp
shlb
loop
mov
mov
xor
rol
or
mov
gs
pop
sbb
sub
sbb
shl
jmp
ret
push
and
mov
rcrb
or
mov
mov
fdivs
adc
or
repnz
std
rorl
jg
cmp
sbb
in
xor
inc
xor
xchg
push
jecxz
mov
jnp
push
or
lock
xlat
notb
xchg
movsb
fld
add
xor
or
fs
mov
loop
cmp
test
jne
lcall
inc
cmp
mov
ret
cs
das
or
push
xlat
lret
out
sub
rorl
enter
cmpsl
pop
lods
mov
push
jnp
in
xor
mov
cmp
jge
inc
decb
leave
cmp
and
out
mov
in
push
fadds
cmc
add
mov
add
sbb
call
sbb
cmp
xlat
cmp
dec
data16
imul
test
fs
vmulss
jl
push
icebp
add
cmp
pop
addl
mov
cmp
addr16
shll
cwtl
inc
push
sub
and
loopne
xchg
sti
lret
jb
jmp
inc
mov
pop
ljmp
arpl
dec
insl
sbb
pushf
gs
xlat
or
imul
hlt
cltd
movsl
push
test
push
cmp
or
pusha
pop
jns
cmpsl
or
or
xchg
mov
lea
bound
adc
sub
or
push
into
mov
jns
or
bound
push
add
in
add
mov
ss
pop
mov
pushf
lcall
add
or
imul
pop
pop
sbb
ljmp
pop
jecxz
sub
pop
xlat
mov
adc
fimuls
jle
or
pop
fcomps
outsb
push
lahf
pushf
and
seta
push
xchg
outsb
add
sbb
out
sti
lcall
pusha
xchg
sub
fsubr
jno
inc
push
jbe
mov
nop
lahf
add
cmp
sbb
scas
mov
frstor
cmp
sbb
mov
rcll
leave
lret
mov
mov
jmp
fiadds
mov
or
pop
stos
aaa
nop
cwtl
inc
insl
push
xchg
scas
xchg
jns
jl
cmpsl
adc
mov
push
xchg
push
ret
mov
sbbb
mov
call
sub
jae
fisttpll
or
sub
inc
stc
or
xor
mov
mov
or
lock
in
repnz
sub
ret
mov
push
and
fcompl
enter
dec
mov
pusha
jmp
sbb
and
std
xchg
sub
int3
mov
pop
jmp
int
push
ret
xor
and
or
sbb
cmp
inc
jecxz
pop
stos
mov
xchg
jno
cmpsb
mov
and
out
jns
push
cmp
rorl
or
pushf
push
fidivl
mov
pop
mov
dec
mov
dec
addr16
mov
ljmp
adc
inc
out
out
fsts
jg
ja
dec
cmpl
adc
icebp
xor
clc
mov
mov
dec
sbb
fdivl
xor
push
aas
or
push
mov
mov
sub
test
addr16
mov
inc
pop
xchg
push
rcr
lock
push
fbld
cld
jmp
dec
jbe
ja
mov
dec
dec
aam
ret
sub
adc
pop
mov
aaa
mov
xchg
test
mov
scas
fsts
push
adc
stos
or
ds
divb
and
lods
test
lret
fucomp
cmp
fsubrl
cmp
daa
dec
test
and
int
mov
dec
or
fdivl
and
pusha
lods
sbb
loopne
lret
fsubr
xor
mov
mov
shrl
jmp
jg,pn
aam
sbb
ret
cli
pushf
in
xchg
iret
jge
imul
sbb
mov
mov
and
in
das
mov
xchg
aam
xchg
dec
mov
cmp
movsl
push
push
mov
sub
lock
into
popa
nop
dec
fmull
mov
inc
pop
sub
mulb
in
adc
mov
cmpsb
push
jmp
les
push
sbb
xchg
jmp
dec
hlt
push
pop
dec
loopne
dec
pop
iret
mov
mov
xchg
test
shrb
push
pop
movsl
out
push
xor
sbb
jp
push
jp
into
fsubr
das
loop
dec
push
xor
pop
movsb
ret
dec
sbb
mov
in
fstl
clc
sti
aas
movsb
mov
inc
in
push
inc
mov
lahf
sub
imul
lock
add
pop
addr16
add
inc
xchg
cmp
rcr
jbe
popf
outsl
cmc
nop
or
adc
mov
push
xor
and
xchg
xor
mov
ud2
push
ret
adc
je
test
test
cmpsb
xor
xor
out
shl
pop
cmp
dec
cmp
push
mov
xchg
popa
loopne
adc
add
mov
in
adc
fs
dec
sbb
cmp
lods
mov
mulb
lret
gs
or
adcb
push
push
push
movsb
pop
movsl
sarl
gs
mov
stos
jecxz
sbbl
cmp
lcall
pop
jb
andb
push
fwait
push
hlt
adc
xor
ret
jae
pop
mov
int
out
imul
int
cs
mov
mov
cwtl
jp
cltd
pusha
jne
pop
inc
pusha
cmp
mov
shll
movsb
pop
dec
popa
repz
mov
std
hlt
or
and
inc
mov
imul
inc
mov
notb
jno
fldenv
or
adc
ljmp
push
lock
std
loop
jp
lock
inc
mov
and
stos
jb
shl
push
inc
icebp
mov
out
adc
cmpsl
pushf
out
pop
xor
or
and
xchg
call
mov
sub
pushf
adc
lret
jno
sbb
sbb
xor
loop
ss
push
lcall
sub
sbb
sub
mov
mov
out
movsl
xchg
mov
data16
and
roll
les
fs
pop
push
out
cmp
jecxz
adc
incb
or
sbb
sub
ret
cmc
cmpb
cmp
xor
adc
imul
mov
push
in
inc
stc
jp
test
sub
pop
cs
les
fbld
imul
mov
mov
push
jl
inc
divl
std
movsl
lret
leave
sub
sbb
sbb
adc
addr16
push
jbe
add
pop
pop
adc
adc
mov
std
mov
pop
mov
int
and
out
pop
add
stos
push
adc
les
mov
sub
mov
lahf
fsubs
add
es
inc
insl
cs
xchg
nop
xlat
jp
xlat
sbb
cli
stc
fnstenv
jmp
push
dec
lahf
ffree
cmp
cltd
fwait
lret
out
out
mov
cwtl
lret
jecxz
mov
es
jge
pop
and
lret
sub
lods
add
fwait
xchg
mov
fst
fistps
jno
ss
lea
cwtl
mov
jae
mov
or
adc
jmp
adc
xchg
dec
incb
mov
or
or
add
dec
repz
jae
adc
call
inc
sbb
ror
jae
and
inc
add
sbb
shll
jne
dec
xor
sbb
and
inc
ficomps
push
leave
adc
xlat
sub
ret
outsl
jb
loope
push
ret
mov
jbe
test
sbb
cwtl
lret
dec
xchg
push
push
cmc
jecxz
mov
cmp
fiaddl
test
ret
ljmp
mov
pop
mov
xchg
rcrl
add
scas
jne
pop
push
cmp
movsl
aaa
lahf
mov
mov
push
xchg
clc
sti
loopne
lods
xchg
shrl
les
repnz
aam
outsb
cmc
cmpsb
pop
mov
enter
xchg
fcomp
std
mov
out
ja
push
pop
adc
dec
jle
ss
xor
xor
lahf
cld
rcrb
sbb
pop
insl
pop
mov
lds
mov
sbb
fstpt
in
mov
add
repnz
inc
add
pop
mov
and
xor
loop
mov
push
mov
pushf
pop
fcoml
mov
xchg
loope
das
xor
dec
jb
push
fdivr
mov
add
xchg
cmp
push
test
pop
adc
popf
or
adc
jge
sti
dec
push
cmp
je
jl
mov
xchg
cmp
or
dec
fwait
mov
pop
xlat
xchg
xor
mov
dec
and
cmp
push
mov
pop
stos
dec
fcmovb
ja
in
fiaddl
push
test
lods
call
cmp
pushf
mov
cwtl
adc
fbstp
loope
sbb
sbb
insl
iret
mov
nop
pusha
xor
or
leave
hlt
xchg
ror
push
jge
mov
mov
mov
cmc
inc
jns
jge
add
pop
and
leave
sub
pop
xchg
and
test
ss
sbb
dec
dec
lret
pop
inc
or
mov
rcrl
movsl
adc
xchg
aaa
xorb
add
pop
enter
dec
ss
icebp
inc
push
aad
jbe
test
ja
loopne
cmp
mov
mov
aam
repz
and
or
lds
sub
leave
jns
js
stos
pop
cld
dec
cmp
jmp
add
pop
pushf
stc
cmc
mov
mov
and
cmp
int
inc
roll
dec
movl
imulb
int
cwtl
out
sub
jg
add
imul
cmpsl
add
push
in
rorb
mov
aas
mov
mov
mov
adc
mov
cs
inc
jne
stc
dec
push
cmp
addr16
xlat
insb
xor
in
jmp
push
loopne
int3
lods
adc
push
std
mov
adc
lcall
mov
sub
loopne
in
mov
je
xor
loope
stos
cwtl
xor
xchg
xor
jmp
jbe
sbb
outsb
dec
push
bound
comiss
mov
pop
jp
out
insl
inc
subl
cmc
adc
and
cld
rcl
add
pop
es
dec
test
std
clc
inc
jnp
test
popf
jp
mov
orb
push
mov
rolb
push
cmp
xor
shrb
dec
adcb
add
push
dec
or
push
xlat
dec
push
test
je
in
pop
pop
or
pop
pop
mov
mov
push
mov
xchg
outsb
scas
imul
sub
inc
addr16
outsb
insl
insl
arpl
mov
push
jno
movl
mov
jne
loopne
push
pop
shr
adc
cmc
repnz
inc
shll
aad
fisubl
dec
push
jle
clc
insl
mov
popa
pop
dec
repz
shr
cmc
adc
mov
xchg
inc
sub
mov
dec
adc
adc
sub
push
std
mov
scas
popl
outsb
das
arpl
repz
test
lret
das
inc
bound
test
push
jl
sub
cmpsl
imul
js
fs
pop
or
push
or
adc
xchg
add
push
repnz
add
fsubs
jecxz
jge
imull
sub
mov
jo
out
pop
xor
or
in
mov
addr16
nop
push
push
xor
push
stos
cmp
nop
mov
ret
lahf
jo,pt
mov
mov
adc
sub
fstl
cmp
xchg
imul
jb
repz
mov
addr16
cltd
dec
rorb
and
or
mov
hlt
mov
push
dec
cmc
sub
clc
aad
das
es
sub
dec
int
leave
fs
mov
mov
mov
imul
in
add
pushf
mov
push
lcall
sbb
addr16
call
ljmp
mov
mov
jno
mov
data16
xchg
stos
lods
dec
mov
outsb
xchg
fstps
xchg
in
push
ret
xchg
in
and
sbb
xchg
push
cmpsb
and
add
adc
pop
jg
in
sbb
and
and
clc
cmp
adc
lods
jns
fadds
enter
sbb
sub
or
jae
jae
pop
mov
push
xchg
mov
aam
ja
repz
out
es
mov
pop
push
or
sub
push
pop
dec
pop
repz
add
lods
lret
push
xor
cmp
dec
je
repz
aas
outsl
jle
stos
int3
adc
mov
bound
nop
int
dec
or
popa
addr16
mov
sbb
sbb
call
ficoml
dec
pop
fistps
xchg
pop
jno
pop
xor
frstor
inc
mov
mov
scas
shlb
and
call
jbe
dec
jae
iret
pop
popa
adc
jmp
lahf
push
mov
cmp
and
sarl
fistpll
inc
sbb
adc
xchg
lcall
xlat
ficompl
insl
ja
mov
jae
rorl
push
sub
daa
dec
popf
sbb
insb
cmp
std
inc
jnp
sub
adc
aas
jb
stos
push
cmp
sub
jp
mov
mov
imul
cs
test
xchg
leave
sub
lcall
and
iret
or
jnp
jp
gs
insl
arpl
pushf
or
adc
aas
fwait
imul
xor
enter
iret
cltd
pop
inc
rcll
sar
ss
mov
xor
stos
faddl
sti
mov
inc
mov
mov
sub
lds
sbb
arpl
xchg
xchg
out
fisubrs
push
aam
pop
fdivs
dec
xchg
cmc
ret
inc
adc
pop
sub
push
push
lea
xor
fwait
out
sub
fdiv
jnp
das
jecxz
stc
inc
in
lock
mov
cltd
dec
inc
sub
dec
popa
sarl
and
lea
pop
pushf
fisttpll
enter
dec
jle
and
xchg
imul
xchg
pop
int3
jge
adc
enter
jnp
mov
or
sbb
imul
nop
pusha
cmpsb
sbb
push
and
inc
mov
ret
rcrb
nop
pop
cld
jle
call
rep
adc
cmp
aaa
pop
jbe
lret
sbb
sbb
dec
leave
sbb
test
jne
jmp
cwtl
and
mov
mov
push
gs
testb
adc
aam
les
out
lahf
pop
pop
call
xlat
add
outsb
add
push
sbb
pop
outsb
pop
mov
popa
mov
or
imul
pop
shl
scas
fldenv
mov
fistl
fisttpl
mov
pop
cwtl
dec
mov
push
add
mov
addr16
inc
xor
and
aad
push
inc
daa
repz
jecxz
ret
daa
les
into
aas
push
xchg
in
pop
cmp
pop
jbe
xchg
das
lahf
pop
leave
or
clc
sub
inc
pushf
xchg
fdiv
ss
cmpb
xchg
rcrb
dec
inc
jne
jns
stos
mov
mov
inc
jb
mov
scas
xchg
cld
push
mov
jge
mov
mov
gs
sub
test
xor
pushf
aaa
scas
prefetch
or
call
test
and
sbb
xor
pop
fwait
add
test
pop
idivb
in
inc
sbb
pop
push
jge
sbb
xor
test
popf
mov
pop
pop
dec
adc
shlb
inc
stos
adcl
lret
inc
arpl
popf
xor
cmc
fcoms
call
adc
lock
into
fcomps
pop
lds
and
ja
lret
inc
mov
xchg
movsl
jge
sbb
out
sub
stc
pop
pop
mov
mov
xchg
and
sti
out
adc
jno
imul
in
sub
mov
int3
cwtl
in
pop
bound
sahf
mov
add
ljmp
icebp
sbb
gs
sbb
shll
loopne
movsb
push
out
cmp
aaa
push
pop
jmp
in
cmp
subb
cmp
mov
pop
call
push
mov
and
jno
mov
add
rcll
mov
mov
sub
push
flds
cs
js
mov
daa
aas
ret
xchg
jmp
imul
add
or
cmp
lea
mov
dec
xchg
loopne
cli
adc
mov
xchg
xor
loope
cmpsl
cmpl
pop
mov
pop
xor
cltd
mov
sti
pushf
mov
add
cs
outsl
fldt
loopne
mov
ja
lds
in
cmp
idivl
sbb
adc
cmp
dec
push
imul
xor
out
cwtl
fbld
pop
iret
adc
loope
and
cmp
cmpsl
inc
mov
mov
sbb
xor
jnp
mov
add
add
mov
jnp
imul
xchg
mov
test
enter
inc
out
adc
xor
sbbb
pop
sti
in
out
mov
pop
in
lods
test
lock
jecxz
adc
mov
aas
leave
mov
in
mov
enter
scas
int3
inc
insb
hlt
aad
js
mov
leave
mov
xchg
and
mov
jno
shrb
jge
sub
pop
sbb
push
test
sub
xor
or
imul
sbb
jnp
data16
jmp
push
ljmp
into
sbbl
jle
fsubrl
insl
sar
into
sti
lcall
push
cmp
mov
jle
and
sub
sbb
fists
mov
lahf
pop
bound
cwtl
lods
pop
imul
push
popf
daa
iret
jns
imul
nop
mov
outsb
push
jmp
mov
mov
scas
pop
int
fwait
insl
adc
lods
into
xchg
dec
inc
push
cmp
push
imul
das
jbe
mov
jle
loopne
negb
in
into
jbe
imul
cltd
int
add
stos
sbb
fildll
cld
xor
loop
push
out
sub
jl
cmp
popa
pop
dec
mov
mov
dec
mov
loop
sbb
sub
push
or
cmp
pop
cs
push
shrb
push
or
insb
ss
orl
xchg
xchg
je
enter
mov
cmc
mov
jno
and
movsb
loopne
pop
add
pop
xchg
into
cmp
push
ret
shr
cwtl
dec
loope
mov
mov
jecxz
hlt
sub
push
in
leave
add
jle
mov
addl
sahf
xchg
test
xor
cwtl
loopne
pop
scas
adc
add
dec
imul
add
adc
mov
scas
loope
pop
movsl
xchg
sub
inc
xchg
dec
scas
push
and
sub
fwait
out
inc
cmp
xor
icebp
lods
mov
loopne
sub
icebp
sub
pop
mov
jmp
mov
cmp
popa
mov
hlt
sbb
sub
mov
ret
rcrl
loopne
jns
push
sub
idivb
repnz
sub
sub
cltd
decl
loop
sbb
xlat
pop
add
cwtl
adc
add
xor
int
flds
or
mov
mov
fstpl
leave
xchg
pop
mov
movsb
das
sti
aaa
cmp
xchg
mov
jmp
add
push
and
jmp
push
or
fdivrp
xchg
scas
setle
adc
mov
adc
mov
pop
mov
call
pushf
cltd
and
mov
data16
add
jbe
loope
add
mov
rorl
fwait
cmp
fstpt
sbb
mov
and
movsl
fwait
pop
xor
fs
je
or
in
xchg
cmpsb
dec
dec
sar
idivb
into
push
sub
jl
push
idivb
mov
mov
mov
stos
lods
mov
cmp
push
mov
in
and
data16
inc
pop
es
mov
jo
outsb
push
repz
mov
dec
sbb
jl
gs
inc
out
pop
fildll
add
inc
and
loopne
shll
loopne
fwait
mov
dec
arpl
adc
js
mov
xor
outsl
dec
lret
pop
loope
scas
pop
int3
dec
pop
insb
adc
or
shrl
adc
dec
fmuls
aad
sub
lea
jb
in
xor
sub
in
test
jp
dec
add
xor
mov
sub
jecxz
dec
icebp
cmp
push
push
mov
jecxz
in
inc
push
bound
jmp
add
xor
cli
sub
mov
cli
cmp
arpl
mov
adc
push
stos
scas
int
pop
jge
mov
and
mov
scas
pop
aad
mov
ja
dec
mov
hlt
popa
mov
shlb
mov
std
cmp
push
cmp
mov
arpl
add
cmp
mov
test
mov
inc
out
cmp
fs
cmc
int3
das
sbbl
js
movsb
mov
inc
ds
xor
xor
test
cltd
sbb
add
movsb
sbb
jns
imul
nop
push
enter
jecxz
dec
add
dec
xchg
mov
popf
ret
sub
cmpsl
cmp
lret
push
vpslld
ret
ret
push
daa
pop
mov
cmpb
add
stos
mov
adc
dec
cmpsl
test
pop
lock
rcrl
dec
xor
and
cmp
adc
mov
nop
shrl
sub
int3
cmc
popa
leave
jge
call
jno
scas
sbb
mov
cmc
sahf
add
cmp
cmpsb
dec
js
mov
imul
sub
jge
out
jbe
ds
pop
shlb
jb
inc
frstor
xor
lods
fcoms
in
push
cmc
popf
xlat
lods
push
xchg
divl
lea
outsw
lcall
inc
pushf
enter
pop
push
in
sbb
iret
xor
xchg
xchg
test
sub
push
iret
popf
out
jne
pop
dec
sub
xor
lods
test
in
add
xor
icebp
mov
sub
or
and
adc
xchg
mov
jl
roll
adc
mov
xor
adc
and
add
out
out
movsb
push
daa
adc
ret
mov
in
or
icebp
loop
rcrb
ret
shl
sbb
movsb
cmpsb
fldt
pop
dec
pop
popf
sti
add
mov
sbb
jge
cmp
ror
cmp
jge
push
lods
mov
out
orl
testb
add
sar
mov
jb
ljmp
adc
fmuls
les
insl
repnz
sbb
fdivrl
or
popf
add
in
jle
adc
stos
insb
out
jge
pusha
adc
xchg
sub
mov
or
inc
sti
mov
dec
pop
dec
mov
fsubl
test
fcmovu
pop
sbb
jp
cmp
push
cs
imul
pop
jmp
cltd
xchg
cltd
pop
jbe
ret
add
aaa
xor
aas
out
lea
jne
cli
rep
xchg
ds
test
dec
jae
add
out
imul
mov
aam
and
repz
test
add
adc
mov
sti
fwait
pop
sub
ror
enter
gs
dec
push
and
push
mov
xchg
xorb
sub
imul
cwtl
and
dec
popa
lret
fst
cmp
cltd
inc
orb
xchg
push
sarb
ss
push
arpl
outsl
testb
jl
enter
sbb
std
sub
clc
mov
testl
push
out
cmp
bound
add
xchg
cmpsb
lret
out
xchg
stos
jl
daa
dec
fsubrs
rcrl
jb
xchg
imul
test
jns
xor
push
jge
mov
test
add
or
adcl
pusha
ljmp
aas
inc
cltd
mov
test
dec
js
sub
and
or
adc
sbb
rcl
xchg
jae
call
mov
mov
push
mov
sbb
ret
scas
mov
mov
xchg
mov
popa
lock
dec
xchg
add
jmp
lods
dec
xchg
movsb
out
int3
or
add
sbb
cmp
jns
rolb
subl
or
flds
inc
rcrb
movsb
mov
adc
out
std
pop
nop
mov
hlt
int3
rcrb
clc
dec
cmp
xchg
mov
scas
addr16
add
adc
sahf
or
jno
clc
push
lret
add
mov
mov
insl
cmc
shl
int3
sbb
mov
mov
loopne
lds
aam
dec
jmp
addr16
or
fld
mov
push
enter
xor
daa
and
ds
xchg
adc
rcl
ss
jbe
imul
in
mov
jb
fcomp
int3
mov
sbb
mov
sbb
ljmp
and
cmp
dec
ljmp
adcl
rol
aas
xchg
sub
aaa
push
lods
rcrl
sbb
notl
loop
inc
mov
repz
mov
repz
adc
xor
sbb
mov
pop
orb
mov
in
aas
jle
pop
cld
sub
pop
xchg
lret
mov
repz
cmp
test
or
cmp
cltd
sti
fnstsw
bound
leave
jecxz
movsb
ds
pop
lods
mov
push
leave
lods
inc
mov
dec
andb
jp
data16
mov
imul
push
test
mov
shll
test
pop
dec
jb
pop
mov
jg
or
jp
rorb
pop
adc
dec
out
or
push
cld
hlt
fidivrs
mov
lds
add
and
xchg
cmp
adc
add
lcall
mov
inc
fs
inc
pop
subb
stos
movsl
das
fnstcw
xchg
rolb
in
mov
subb
sbb
lock
in
ror
mov
jno
cmpl
imul
and
scas
jns
ds
daa
inc
dec
pop
push
cmc
push
xchg
repnz
adc
sbb
cmc
movsb
scas
lods
inc
pop
sub
rol
mov
jle
out
out
dec
mov
xorb
fcomi
std
jb
call
mov
jg
mov
cmpsb
adc
outsl
lret
cs
arpl
jl
cmp
lea
dec
xor
inc
push
or
outsl
popa
dec
rol
sbb
inc
mov
add
outsl
bound
ds
and
jns
testl
fldcw
arpl
pop
xor
push
xchg
xlat
rcll
xchg
shrb
xor
push
cld
nop
mov
dec
push
subl
sarl
test
or
js
sti
movsl
jge
xchg
icebp
pusha
decb
pop
into
pop
xchg
jne
mov
nop
pop
ss
mov
lret
xor
and
pop
inc
lret
stos
xor
push
pushf
ret
or
mov
outsl
mov
stos
jb
pop
in
lods
push
mov
pop
loopne
mov
mov
inc
out
adc
cmp
jmp
enter
xchg
lods
push
cs
ljmp
cmp
mov
xor
cltd
add
repz
cmp
xchg
cs
sub
je
add
orb
test
adcl
jl
push
movsl
int
dec
popf
loope
pop
sahf
cmp
add
mov
cmp
mov
scas
jno
subb
call
and
pop
mov
push
inc
jle
scas
jge
cli
imul
xchg
sbb
orb
lahf
or
mov
sar
in
addl
shlb
scas
shl
sti
arpl
and
and
push
xchg
push
dec
popa
mov
inc
adc
adc
or
out
std
cmp
lea
add
pop
mov
jge
pushf
cmp
mov
dec
and
out
notl
nop
xor
or
lods
jbe
push
lds
xchg
xor
mov
adc
pop
add
rcrl
mov
ds
mov
ret
out
aad
lret
popf
adc
lods
push
daa
mov
pop
inc
push
pushf
testb
cmpsb
pop
push
and
xlat
lock
mov
inc
iret
sar
xor
aam
jecxz
arpl
xor
jbe
push
dec
xor
outsl
addl
mov
enter
cmpsl
imul
and
pop
and
rorb
in
pop
inc
cmc
into
mov
xchg
in
ja
add
adc
add
out
adc
repz
in
inc
addr16
sub
ss
fsubp
lcall
fistpl
cld
sbb
xor
lret
jp
idivb
dec
movsl
push
mov
inc
mov
xchg
sti
leave
push
cli
fwait
andl
sbb
and
sbbl
je
fwait
jl
lds
jp
test
mov
xchg
pop
xor
lock
mov
pop
add
jg
mov
push
cmp
pop
sbb
adc
sbb
adc
adc
mov
push
fistps
sbb
pop
mov
out
imul
xor
iret
jno
call
xchg
je
jg
call
xchg
scas
cmpsl
sbb
aaa
test
sbb
or
call
mov
ss
cmp
adc
out
shrl
jge
jg
xlat
cs
popa
subl
xchg
cmp
or
push
xchg
insl
sbb
cmp
mov
cmp
sub
stc
iret
cmp
iret
jnp
stos
push
cmpsl
scas
mov
daa
sub
test
inc
mov
imul
iret
pushf
pusha
adc
jg
mov
pop
push
jbe
lds
or
pop
frstor
pop
mov
out
xor
push
pavgb
cmp
xchg
cmp
popf
mov
cmp
cld
xchg
in
movsb
inc
sub
test
sub
xorl
shll
scas
mov
mov
push
scas
scas
loopne
jns
int
call
sbb
add
bound
nop
ss
inc
or
repnz
jl
xlat
push
xlat
jbe
mov
or
push
mov
fistpl
mov
adc
push
xchg
mov
dec
or
xor
or
rcll
lret
push
or
sub
cmp
lods
inc
fucomip
jbe
int3
shll
dec
adc
mov
sub
fldl
sti
into
xchg
pop
aaa
inc
sbb
cs
xor
loopne
js
dec
sub
sub
add
push
inc
push
data16
aad
adc
scas
or
pop
lret
xor
jl
dec
jns
ret
pop
jb
mov
ret
loope
mov
addr16
js
cmc
xchg
js
sbb
pop
insb
mov
sbb
in
dec
das
inc
repz
data16
pop
ds
and
jle
mov
test
int
ret
adcl
in
scas
push
stos
dec
jg
je
repz
jge
sbb
add
test
sbb
lods
xchg
stos
das
fiaddl
sahf
pop
push
jae
adc
leave
outsb
out
shll
scas
daa
addr16
sbb
adc
inc
dec
lret
aam
fidivrl
sti
js
je
lret
cs
lret
shlb
fs
insl
pop
pop
lahf
shlb
dec
cld
cli
int
fnstsw
jmp
jle
push
jecxz
cltd
in
cmc
and
mov
les
lahf
push
mov
faddl
and
inc
repnz
lock
arpl
cmp
jle
out
notb
scas
dec
mov
int
mov
gs
lahf
int
subb
outsl
cmp
push
daa
scas
je
mov
rclb
mov
movb
push
out
out
or
ret
sbb
out
pop
lcall
mov
fstps
sub
jl
dec
push
add
addr16
int3
cli
loopne,pn
pop
lds
inc
or
ss
je
imul
cmpsb
rorl
pop
jne
clc
andl
and
mov
dec
and
jg
cmp
stos
and
jne
mov
repz
xor
xchg
test
xor
insb
cmpsb
cli
mov
cs
cmpsl
and
mov
dec
call
mov
fcompl
dec
or
popf
loopne
mov
dec
es
sbbl
loopne
rcll
mov
mov
insl
and
es
js
pusha
popf
cmpsb
aaa
fwait
dec
jl
add
rcll
inc
js
mov
fwait
jp
ss
mov
sub
movsl
lret
lods
push
cmp
iret
pop
hlt
jg
inc
add
rolb
push
mov
sbb
or
cmp
jp
cmpsl
cmp
inc
and
lcall
dec
ja
dec
adc
sbbl
dec
rol
jns
push
cmp
rorl
notb
jle
sub
sar
cmp
jns
xor
jge
inc
std
popa
fldenv
cmp
mov
je
xor
dec
pop
cmp
scas
mov
adc
adcb
les
call
sub
or
cmp
mov
cmp
xchg
aaa
pop
cmpsl
xor
inc
cmpb
iret
ss
int3
incl
inc
jg
int
xlat
and
stos
aad
pop
adc
into
imul
fwait
cmp
dec
pop
test
mov
in
mov
dec
scas
outsl
push
pslld
mov
or
fiaddl
adc
jle
in
shlb
test
inc
and
icebp
nop
lods
cmp
rcr
cmp
repz
ror
jbe
outsb
mov
xchg
sbb
inc
mov
sti
test
mov
sarb
sbb
inc
clc
mov
ret
int
mov
in
int
jg
xlat
adc
xchg
push
fmuls
jg
mov
insb
ficomps
das
cwtl
cmp
inc
outsl
popa
enter
xor
lds
add
inc
cmp
movsb
adc
pop
inc
jecxz
int3
ret
sbb
cltd
rcrl
jo
xor
cli
in
adc
or
popa
popa
cmp
mov
dec
lret
jecxz
pop
movsl
in
xchg
push
movsb
push
aaa
mov
scas
inc
and
pushf
cmp
push
jg
subb
decl
lret
dec
lods
pop
xor
lret
sub
mov
stc
rcrl
in
sbb
pop
mov
aaa
xchg
pop
aas
push
imul
cmc
push
jge
fistpl
jne
jle
clc
mov
pop
add
subl
or
pop
iret
push
or
jle
arpl
push
mov
frstor
mov
loope
cli
lcall
packsswb
lods
push
inc
loop
rcll
xor
sub
fisubl
xlat
mov
inc
lret
lret
ret
sahf
iret
adc
cmc
jnp
mov
daa
and
inc
lret
scas
xor
int3
hlt
cmc
insb
sbb
fildl
cmp
pusha
adc
repz
addr16
cs
dec
jb
mov
adc
mov
subb
dec
mov
xchg
ljmp
aad
jg
jp
testl
mov
stc
pop
mov
push
dec
jmp
mov
repz
sub
sti
in
xchg
mov
push
mov
aaa
add
push
fdivs
imul
test
jno
xchg
cmp
bound
xchg
in
pop
arpl
mov
jl
hlt
xor
sub
sub
push
sahf
sbb
push
push
ret
pop
pcmpeqw
dec
and
dec
and
les
inc
push
mov
syscall
stos
fidivl
xchg
movsl
sarb
int
mov
dec
popa
dec
int3
and
mov
dec
mov
cmp
lret
inc
cs
lods
push
mov
popa
icebp
les
xorl
dec
call
or
in
test
sbb
rcrb
mov
xchg
sub
imul
fprem
cltd
les
repnz
enter
ret
push
inc
lret
sub
pop
sti
jne
push
jbe
lahf
jae
xor
js
lods
xlat
call
xchg
xchg
and
pop
test
adc
mov
pop
inc
xchg
and
xchg
testl
ret
or
jp
mov
les
imulb
inc
jle
out
sti
in
inc
lcall
push
and
dec
mov
repnz
std
leave
loopne
sahf
adc
adc
cmp
adc
pop
cmp
clc
pop
cmp
mov
or
sub
cmp
lret
xor
jle
orb
into
pop
jecxz
add
or
dec
mov
outsb
dec
and
or
xchg
add
mov
mov
jmp
mov
push
das
push
aad
ret
mov
test
or
insb
pop
sub
mov
dec
fsubr
mov
insl
jp
adc
popa
cmp
jnp
sbb
iret
in
daa
push
mov
push
mov
sub
lret
dec
pop
inc
mov
and
ljmp
cs
mov
shlb
mov
push
mov
dec
cltd
fistps
lods
and
jge
inc
cmp
sub
cmpsb
loop
lret
test
cld
mov
push
shll
shl
dec
test
jl
rcll
mov
je
scas
testb
cmpsb
shll
int3
lds
push
int
movsl
popa
test
outsl
adc
rolb
test
dec
inc
imulb
negl
xor
cmp
fstps
adc
cmpsl
gs
or
pop
pop
mov
mov
adc
inc
mov
testl
sbb
lret
mov
add
lods
popa
or
das
push
inc
fsubrs
push
cmp
dec
jge
outsl
or
push
push
stos
lret
jo
aas
and
push
add
cmc
jae
push
std
sbb
push
popf
and
lahf
dec
push
loop
pushf
repz
mov
and
or
ud1
test
add
pop
jge
xlat
loopne
ja
enter
xor
fsubs
aas
or
cltd
xor
jb
popf
pushf
adc
cli
aad
and
mov
add
xor
mov
inc
pop
loope
repnz
in
clc
inc
and
ret
cmc
xchg
jo
mov
xor
xlat
jp
mov
inc
daa
xchg
rorb
jmp
ds
mov
lcall
scas
test
stc
fwait
test
les
mov
adc
sbb
jmp
jg
pop
mov
test
out
add
and
iret
aam
pop
mov
pop
pop
or
and
jl
stc
mov
test
add
add
dec
adc
lret
cmc
xchg
repz
lret
shl
out
mov
and
movsl
mov
jmp
cwtl
mov
inc
rcrl
mov
or
mov
dec
stos
dec
int3
push
ds
mov
inc
jno
imul
or
pop
add
dec
add
ljmp
cmp
ss
and
jns
dec
jno
and
jnp
jo
pop
cwtl
clc
and
mov
push
bound
das
fs
enter
mov
pop
lea
hlt
sti
mov
jbe
lock
stos
fcmovnu
stc
jmp
push
jle
pushf
fwait
cmc
test
xchg
add
or
je
in
or
adc
adc
mov
adc
pop
lods
mov
dec
mov
sub
pop
popf
mov
and
cld
xor
ds
mov
cld
pop
notl
pop
dec
pop
int
xchg
or
ror
cmp
test
inc
xchg
fildll
repz
cmp
cmp
sbb
jmp
popf
mov
adc
nop
scas
jg
jns
sub
pop
cs
and
push
rorb
or
aad
jo
notb
push
call
mov
das
out
sub
push
mov
sarb
aam
sarb
ret
jbe
mov
add
sbb
pop
sub
mov
rcll
mov
add
orl
dec
pop
jnp
or
int
pop
jnp
add
mov
sbb
jns
adc
sbb
inc
ficoms
dec
xchg
aas
fidivs
push
and
mov
inc
sub
ds
jmp
pushf
xlat
insb
movsb
ds
in
scas
in
arpl
inc
and
or
adc
xchg
xchg
jge
sbb
inc
push
lods
push
das
dec
fstpl
or
pusha
mov
ret
daa
inc
sbb
fstl
mov
imul
pusha
and
loop
xchg
fisttps
cmpsl
mov
adc
mov
enter
jae
divb
cltd
sub
cmpl
popa
lahf
enter
sbb
enter
or
ja
nop
add
mov
mov
dec
pop
push
mov
inc
ret
adc
xchg
insb
mov
cmp
je
sbb
in
in
xchg
ret
cmpsl
ja
dec
push
push
ret
inc
mov
lret
lea
into
sub
in
inc
ljmp
mov
mov
mov
es
push
and
ss
lods
fld
aaa
bound
aas
add
aaa
push
stos
daa
lock
enter
and
bound
cmp
enter
in
outsb
rcrb
movsb
lods
fnsave
repz
inc
xchg
fs
jo
xor
sbb
xor
ljmp
mov
or
jp
jae
repnz
sahf
test
lcall
cmpsb
add
outsb
lahf
fucom
and
ds
mov
lods
imul
and
pop
mov
js
jl
sarb
jo
sti
mov
dec
sbb
out
sbb
push
addr16
ljmp
aad
pop
dec
rcrl
cld
lds
insl
mov
pusha
xchg
jno
jg
daa
adc
aaa
xchg
pop
inc
adc
add
push
push
cmc
adc
hlt
lahf
cwtl
cli
in
pop
enter
add
das
or
or
insl
cmc
mov
jge
rcll
sahf
lds
cmpsl
dec
sti
cld
pop
shrl
cmpl
int
cmp
mov
mov
lcall
loopne
adc
clc
xor
adcb
scas
xor
ret
add
xor
rcrb
sub
test
cmp
sbb
mov
lods
mov
sbb
ret
mov
int3
pop
inc
mov
add
mov
bound
sub
cld
xchg
cld
xchg
ds
subb
imul
ja
jge
les
popa
cmp
push
inc
rcrl
call
test
mov
or
mulb
imul
jmp
in
lcall
push
mov
repnz
sub
std
xchg
mov
repnz
push
cmp
xchg
int
dec
xchg
cld
add
xchg
cs
pop
mov
mov
push
out
popf
sub
mov
cwtl
cs
push
or
add
mov
ret
and
xor
mov
or
sbb
xchg
incl
cmpsl
push
nop
mov
adc
faddl
jne
fwait
ja
push
jmp
add
jl
jns
test
ror
and
icebp
loop
out
fisubrs
lock
dec
fs
cs
cwtd
aad
pop
aam
call
js
popa
cmp
push
rcr
call
adcb
bound
nop
iret
lcall
inc
fidivrs
xorb
enter
add
xchg
jecxz
and
lret
fisttps
xchg
add
mov
xor
pusha
nop
imul
shlb
repnz
xor
pusha
pop
or
sub
jg
inc
std
mov
outsb
mov
dec
jmp
sub
lret
cmp
sub
jecxz
mov
sbb
or
call
fdivrl
sbbl
test
sbb
mov
pop
adc
dec
sub
mov
aas
movsb
inc
pop
cmp
mov
mov
add
negb
push
fisubrs
inc
add
xchg
repnz
sub
imul
ss
insb
out
cmp
pop
outsl
push
jecxz
sub
jmp
or
xor
das
inc
rclb
and
xchg
daa
mov
fstpt
hlt
insb
lock
ljmp
out
inc
std
add
xlat
push
cmc
vhaddpd
sub
or
pusha
pop
imull
add
mov
aad
std
mov
inc
xchg
inc
fs
push
lret
and
into
hlt
hlt
and
jo
pop
js
xchg
cmp
adc
and
ja
sbb
add
mov
rcl
lret
insl
push
pop
and
ljmp
aas
cltd
mulb
sbb
insb
push
push
xchg
cmp
or
insb
add
xor
push
nop
sub
xchg
and
imul
imul
jbe
push
sbb
daa
mov
xchg
popa
ljmp
and
lods
bound
sysenter
mov
lea
cmp
add
je
jo
mov
adc
and
cmp
adc
leave
rcll
aaa
shr
ret
pop
xor
xlat
xchg
adc
filds
push
arpl
in
inc
sbbb
in
mov
pushf
and
mov
pop
mov
dec
filds
sbb
mov
ret
add
mov
push
push
dec
push
xor
cmpsb
pop
push
xor
xchg
movsb
shrb
movsb
lcall
pop
in
bound
mov
aas
stos
sub
mov
pop
xor
jge
jp
push
outsl
lock
stc
mov
je
js
jge
jbe
ret
xchg
mulb
and
insl
jl
jle
adc
xchg
sbb
inc
je
jmp
xchg
rcrl
in
add
popf
fbld
mov
fcomi
fnstenv
cmp
repnz
jg
pop
dec
inc
pop
nop
sbbl
mov
and
mov
push
adc
cmpsb
xor
mov
xor
jmp
iret
fnstsw
jnp
dec
dec
ficoms
dec
jnp
pop
cltd
repnz
out
sub
stos
into
or
cmp
rorl
fadd
mov
ds
add
inc
mov
xor
jno
loop
pop
jmp
adc
dec
cmp
testl
mov
sub
pop
jl
and
lock
push
jmp
fimull
push
mov
orl
lret
outsb
and
xchg
mov
pop
xor
lahf
mov
in
dec
push
aam
test
sub
out
sub
repz
mov
add
dec
pop
pop
jl
xchg
std
adc
mov
adc
pop
test
pop
lods
inc
jmp
int3
popa
inc
xchg
repz
cmpsl
xor
repz
mov
hlt
jg
mov
mov
xchg
nop
out
push
cmp
in
pop
cmp
sahf
xor
xor
jbe
movsl
jecxz
and
mov
push
test
xchg
stos
shll
push
arpl
ret
inc
jle
das
sbb
adcb
or
sub
sti
rorb
repz
addr16
sbb
xor
inc
xor
inc
dec
dec
add
pop
aas
mov
push
push
inc
inc
mov
imul
std
imul
add
outsl
sub
mov
fsubr
rorb
aas
xor
pop
dec
fcom
sub
lret
loop
stos
sti
mov
test
xchg
sub
and
adc
sub
pop
arpl
mov
inc
mov
pusha
pop
insl
xor
rorl
lcall
sub
add
add
lea
lods
xchg
or
rcrb
mov
lret
sbb
inc
sub
xor
xor
and
out
sub
mov
dec
loope
int
orl
mov
mov
sbb
ret
orb
or
in
fsubrl
mov
shll
mov
xchg
jg
mov
daa
mov
xchg
cmp
iret
jae
push
std
xor
out
ds
insl
scas
pushf
push
cmp
lret
xor
inc
loopne
cmp
ret
dec
push
js
aaa
lods
popa
lock
lods
cld
or
dec
add
out
dec
jg
lods
and
pop
movsb
sbb
ds
dec
mov
push
jns
sub
sub
jle
ficoml
outsb
push
pop
scas
push
inc
dec
xor
int
and
int3
les
aad
es
cmp
daa
in
cmpsl
out
dec
pushf
loop
dec
fisubl
and
push
xchg
dec
cmpsl
sbb
sub
cwtl
jg
push
lret
shll
pop
in
jno
jns
sarb
push
sub
mov
sub
xor
das
jecxz
cmp
mov
jnp
aad
pop
and
cmc
push
scas
lahf
repnz
jmp
arpl
mov
cmp
mov
mov
fnstsw
cltd
aam
int3
insb
sbb
xchg
mov
outsb
jp
add
rcrb
mov
jmp
dec
adc
mov
lds
dec
cmp
ret
call
pop
cltd
push
pushl
stos
xlat
jnp
jg
and
enter
in
sub
rclb
clc
inc
movsl
shl
sub
xchg
push
dec
shrd
cld
and
dec
jle
iret
pop
sub
es
pop
or
mov
test
inc
aaa
out
push
imul
adcb
sub
hlt
jecxz
sbb
jo
pop
movsb
pop
mov
sbb
mov
loopne
out
outsl
xchg
nop
mov
push
inc
xchg
adcl
mov
adcb
sahf
pushf
ds
insl
cwtl
fsts
or
or
cs
fldt
lock
mov
sub
sbb
mov
icebp
mov
pop
cmpsl
sbb
test
mov
cwtl
aas
outsl
adc
repnz
orl
stos
lods
lahf
dec
add
sarb
jge
mov
mov
out
jo
imul
cmpsb
inc
xchg
sbb
add
jns
pop
call
rol
outsb
pushf
dec
add
adc
test
lret
mov
jns
xor
dec
sbb
fsts
push
je
add
mov
xchg
add
pop
adc
lcall
iret
pusha
shl
xchg
and
xor
roll
outsl
jae
scas
test
lods
pop
or
out
add
add
sti
sub
scas
insb
addl
add
xchg
lcall
cs
hlt
pop
mov
gs
cli
cmp
pop
add
fiadds
sub
cs
stos
xor
andl
mov
cmp
push
push
adc
push
sbb
adc
cmpb
mov
jl
data16
mov
adc
add
popaw
push
xchg
test
add
and
pop
mov
mov
jle
lods
addr16
lock
mov
fwait
ja
add
or
and
mov
in
fldenv
jg
xchg
fwait
in
imul
aaa
dec
jg
and
xor
cmp
jbe
or
mov
addr16
cmpsb
xchg
adc
adc
add
or
mov
addl
jecxz
cmp
add
in
mov
mov
out
pop
dec
mov
ds
pop
pop
mov
add
lcall
test
xor
inc
dec
pushf
cmpsl
sbb
mov
and
popf
push
je
xor
xor
adc
lahf
pop
shll
maskmovq
sbb
ud1
sub
sbb
sarl
xchg
hlt
dec
mov
inc
sbb
in
mov
imulb
push
outsl
xchg
js
inc
std
xchg
bound
jg
inc
outsb
lret
xchg
or
jb
ja
mov
dec
lods
lock
mov
or
int3
imulb
adc
cmpsl
cmpsl
rorb
push
out
lds
insl
and
xchg
mov
rcll
in
lahf
in
jmp
lcall
cmp
xlat
jo
in
dec
int
aam
sbb
outsb
xchg
iret
fs
loop
sub
mov
inc
pop
cmp
mov
mov
stos
jp
mov
test
scas
sti
rol
rolb
mov
dec
cmp
xor
loope
jno
cmp
out
test
sbbb
xor
or
mov
cmpsb
es
xchg
add
das
mov
mov
sub
jecxz
xchg
mov
mov
stos
fidivs
mov
cmpb
dec
dec
xchg
push
test
or
mov
pop
ja
mov
mov
inc
push
pop
divb
mov
push
call
scas
outsl
ds
sub
fadds
dec
sub
sbb
mov
out
add
popa
cmpsb
adc
mov
jp
mov
repz
or
in
adc
inc
dec
jecxz
dec
cltd
xchg
shll
in
cmpsb
lret
jns
adcl
jecxz
pop
push
test
loopne
jae
dec
aas
loopne
outsl
mov
lahf
cmp
negl
repnz
and
lcall
popa
repnz
mov
imul
mov
push
rorb
mov
in
or
cmovle
xchg
jecxz
lock
stc
cmp
push
out
leave
pop
int
test
xchg
dec
pop
out
mov
lret
dec
jge
jmp
cmc
push
add
dec
fmul
pop
jg
aam
or
test
push
inc
test
fdivr
iret
not
lret
outsb
mov
dec
jo
cmp
sarl
dec
jmp
fisubs
or
movsl
mov
aam
mov
cwtl
or
psrlq
cli
pop
fmul
call
fdivrs
add
push
xchg
std
lods
dec
scas
and
loop
pushf
mov
js
mov
mov
aaa
and
mov
sbb
push
imul
add
into
sub
imul
fdiv
dec
lods
or
and
loop
inc
mov
jae
jle
loope
in
shl
xchg
mov
mov
sarl
aas
test
arpl
xchg
pop
paddb
push
mov
aam
stos
mov
clc
inc
jb
movsb
push
rolb
dec
mov
and
fcoml
jnp
adc
mov
scas
leave
cmp
and
and
and
mov
dec
mov
pusha
sub
cmpsl
scas
push
int
pop
scas
sub
xchg
mov
outsl
xchg
jno
mov
std
mov
pop
push
shll
pushf
push
leave
adc
fnsave
sbb
ds
outsb
pop
test
dec
insl
std
popa
fsub
mov
movsl
push
pop
fwait
bound
pop
adc
xor
jmp
push
aas
in
pusha
out
repz
jns
mov
jg
pop
mov
inc
aas
cmp
repz
dec
ja
lcall
out
fstpl
addr16
lea
es
push
cld
sbb
es
fwait
xchg
mov
mov
sti
sbb
lods
inc
imul
xchg
adc
pop
ficoms
jle
push
pusha
cmp
cmpsb
cld
pop
jae
and
push
or
clc
xor
dec
pop
movsb
mov
iret
imul
sbb
dec
jle
mov
xchg
out
pop
jbe
sbb
push
or
inc
int
fbstp
out
jns
aam
in
fwait
leave
repnz
push
or
mov
rcl
ljmp
push
jle
adc
stos
pushf
or
jb
adc
jg
inc
inc
mov
pushl
std
cmp
mov
push
jle
adc
bound
scas
mov
jmp
icebp
pop
adc
lods
fstpt
idivl
jns
adc
and
cmc
gs
push
xchg
adc
adc
and
daa
gs
cmp
push
in
xchg
mov
mov
mov
rcrb
filds
adc
movsl
or
jle
pop
in
out
outsb
mov
mov
push
insl
add
into
dec
add
dec
xchg
pop
mov
lods
decb
in
mov
jo
out
mov
jns
movsb
lret
xchg
add
push
cmp
lods
xor
mov
mov
pop
sbb
cmc
mov
mov
popf
and
fistl
arpl
mov
addr16
jg
lds
inc
js
data16
pop
jae
lahf
xor
icebp
pushf
in
dec
push
dec
xor
inc
mov
or
out
mov
sbb
adc
mov
and
jge
inc
push
mov
leave
mov
or
add
adcl
fldenv
decl
pop
jo
mov
hlt
push
neg
jle
jne
jae
adc
ret
xorl
lods
xchg
push
test
roll
sbb
int
xchg
adc
out
ror
xlat
adc
lret
clc
and
xchg
push
mov
enter
mov
inc
test
decl
or
out
cmp
into
adc
daa
in
dec
test
sub
push
xchg
fsubl
insl
sbb
loop
inc
nop
fs
xchg
mov
js
jb
xchg
lea
fcoms
loop
nop
movsb
test
inc
or
dec
mov
in
xlat
mov
or
adc
out
outsl
imul
clc
ja
sub
adc
sbb
shlb
ret
mov
aas
cmpsb
sbb
mov
in
sbb
std
int3
leave
or
and
xor
jle
pop
dec
stos
mov
movsl
repz
decb
into
dec
or
mov
xorl
pop
pop
dec
sbb
call
nop
test
jbe
mov
andl
xchg
fisttpl
and
mov
lods
jmp
rorb
push
and
sahf
movsl
cmpsl
dec
lcall
pop
stos
orl
pop
lea
jmp
sub
jmp
xchg
jne
mov
mov
subl
ja
sbbb
inc
insl
dec
inc
scas
scas
dec
mov
mov
daa
xor
sub
and
arpl
pop
mov
ds
pop
jl
jno
adc
xchg
cmp
mov
ljmp
push
push
xchg
dec
adc
arpl
lret
or
mov
stos
add
push
lock
enter
sbb
dec
xor
out
mov
cmp
scas
jae
pop
mov
inc
int
xlat
and
shll
stc
mov
leave
xchg
leave
dec
scas
ss
fstpl
xor
xor
jp
push
das
mov
cmpsl
jbe
dec
out
rcrl
cmp
iret
sbbb
push
subl
scas
or
jl
dec
xchg
ljmp
add
inc
orb
inc
testb
fiaddl
xchg
xor
test
mull
xor
add
add
fsubrp
sub
jnp
or
lret
outsl
aaa
xor
ret
adc
xchg
out
jge
shrb
lds
mov
ret
xor
push
les
popa
sbb
push
adcb
into
dec
out
ret
subb
or
mov
test
insb
out
or
pop
stos
add
push
add
and
mov
and
fisubl
int
scas
in
fisttpl
adc
stc
ja
inc
mov
stos
xchg
das
push
mov
enter
cs
add
and
pop
arpl
lret
adc
mov
aam
ljmp
outsl
jge
xor
cs
push
fwait
cmp
and
or
loop
ss
cmp
or
out
jnp
mov
dec
push
and
mov
fldt
gs
pop
push
jle
lods
sub
jmp
pop
iret
andl
fs
imul
out
mov
aaa
out
gs
std
pop
gs
jae
dec
ljmp
jnp
cmp
icebp
push
fcmovnbe
lret
fdivr
test
in
cmp
js
icebp
xlat
jmp
xor
test
fmull
shlb
xor
clc
aas
cmpsb
rolb
cltd
icebp
inc
jl
push
loop
mov
pusha
mov
mov
sub
xchg
js
push
jnp
arpl
aad
sub
xor
popa
int3
dec
divl
movsl
pop
pop
pop
sub
or
pop
xchg
add
data16
daa
push
leave
push
into
outsl
inc
xor
adc
sbb
add
pop
test
pop
jb
lret
orl
fcompl
jecxz
cmpsb
sub
pop
mov
in
pop
mov
push
fcoml
cmc
xor
fsts
xorl
icebp
mov
addr16
sub
test
pop
lret
adc
xchg
into
cmc
mov
sbb
cltd
out
xor
adc
lcall
sub
scas
lret
bound
js
jp
les
or
mov
gs
add
jo
and
or
xchg
dec
pop
mov
pushf
out
and
gs
mov
movsb
testl
stos
and
xor
push
inc
adc
icebp
incb
scas
mov
fldenv
pop
add
push
mov
lahf
sub
jns
leave
add
adc
test
pop
or
popf
and
ja
xor
lds
fcomps
mov
mov
mov
or
ret
in
xchg
insb
enter
pop
fcomps
push
rol
jmp
add
mov
xchg
mov
pop
mov
mov
cmc
addr16
push
fwait
rolb
xor
je
pushf
jb
pop
mov
mov
pop
adc
stos
and
sub
repz
fldenv
sub
push
out
push
mov
pusha
div
inc
out
inc
fistl
add
mov
bound
fildll
jp
aad
push
ret
inc
jmp
mov
ficomps
adc
mov
movsl
pop
call
sub
push
push
scas
pop
inc
and
mov
subl
sub
adc
jb
push
cmc
mov
and
adc
or
and
int3
pop
add
xchg
push
dec
push
mov
push
jg
mov
cld
sbb
push
adcb
mov
cwtl
push
sub
mov
enter
or
popf
fcoml
imul
mov
adc
inc
nop
ret
repz
xchg
jne
or
lahf
cwtl
pmulhw
inc
mov
xchg
cmp
pusha
or
cmp
popf
ret
fs
aam
sbb
ret
sub
out
or
push
je
mov
scas
fwait
andl
aaa
mov
sarb
or
fucomi
hlt
xor
fnstsw
inc
push
lods
push
out
lds
pop
dec
add
sbb
insl
sub
mov
enter
ret
out
sub
ss
jo
push
cli
adc
into
cmp
cld
add
stos
fucomp
mov
or
jmp
cmp
sub
lock
arpl
jmp
lcall
outsb
test
dec
mov
jp
repnz
fdivrs
pop
push
popf
or
inc
xlat
or
leave
sbb
or
cmp
movsl
les
or
jnp
and
xchg
fwait
jne
xchg
imul
fsts
or
dec
fstpl
adc
and
and
in
repnz
pop
aas
stc
push
add
lea
push
mov
popf
inc
rcrl
mov
shll
pop
adc
imull
xchg
pop
fcmovnu
or
add
mov
pop
in
fstl
stc
subb
shlb
pusha
lods
pusha
jg
mov
pop
inc
movsb
mov
xor
inc
jl
call
cmp
jle
cmpsl
cmpsl
fs
in
sbb
lock
cltd
jno
mov
rorl
jecxz
dec
cmp
repnz
and
push
insb
jmp
xchg
mov
dec
mov
push
lea
jecxz
insl
xchg
fsubrs
aad
out
mov
fdivp
fwait
inc
sarb
push
sub
fsts
lret
push
and
xchg
push
lret
test
mov
bound
das
mov
adc
and
pop
sub
mov
mov
pop
orb
xchg
dec
push
ja
icebp
inc
mov
sub
nop
mov
push
imul
inc
mov
adc
or
call
inc
or
fcompl
sbb
out
cmp
hlt
mov
movsb
jp
mov
xlat
data16
xchg
nop
test
lods
icebp
pop
mov
mov
jo
fs
and
inc
sbb
in
int
stos
inc
jecxz
ficompl
add
stos
lret
sub
fcoml
lret
mov
mov
inc
jno
mul
nop
cmp
lods
xchg
iret
mov
inc
roll
sub
pop
cmc
mov
mov
cltd
into
call
mov
cmp
pop
test
mov
mov
xor
lret
mov
pop
loop
dec
dec
lcall
and
movsl
jnp
mov
jle
int
sub
xchg
ja
cmp
jecxz
bound
mov
sahf
int
hlt
test
push
jle
mov
mov
addr16
enter
ljmp
xchg
shll
xchg
insl
testb
adcb
pop
sbb
mov
lret
xchg
push
inc
inc
xchg
add
in
jne
sti
int3
insb
pop
je
ja
outsb
inc
or
out
push
aaa
ret
add
cmp
jnp
test
mov
jge
sub
jbe
fsubl
arpl
data16
dec
and
inc
sbb
inc
push
out
sub
push
rcl
inc
leave
mov
adc
lods
add
xchg
inc
mov
int
pop
les
loopne
pop
push
mov
in
imul
xor
adc
jns
inc
sbb
xor
jbe
xlat
dec
jo
jns
cmp
add
add
std
loope
lret
fdivrl
jno
cwtl
lahf
pop
lods
jne
scas
mov
cwtl
stc
mov
int3
insl
sbb
push
imulb
fwait
inc
adc
pop
hlt
jbe
mov
mov
ss
rolb
mov
adc
lods
mov
mov
cmpsl
cmc
ficoml
das
sub
loop
jecxz
cmpsb
xor
mov
addr16
mov
inc
insl
add
sbb
sub
push
ret
xor
mov
cmp
sub
dec
lcall
movsl
stc
fistl
mov
xor
nop
cmp
incb
jl
mov
jb
pop
cld
jmp
shlb
xlat
xchg
mov
mov
sbb
dec
jno
jp
mov
xchg
frstor
adc
loop
xchg
adc
mov
jmp
and
in
pop
imul
sub
lea
test
pop
pop
inc
scas
fists
ds
lret
lret
push
mov
fmull
push
movsb
rcrl
mov
sbb
sub
mov
xor
mov
ja
mov
jno
xor
push
arpl
mov
les
adc
fwait
rolb
xor
pop
cmpsb
cmpb
push
sub
jg
add
sub
into
loop
popf
imull
and
stc
pop
cmp
sub
or
add
sbb
ret
ret
xlat
and
out
test
xchg
sub
lretw
jb
adc
mov
mov
jg
test
sbb
mov
clc
mov
mov
leave
dec
pop
mov
scas
movsb
jne
jb
insl
sarb
enter
inc
jnp
out
mov
test
mov
stos
aaa
gs
dec
mov
movsb
adc
das
loop
popa
lock
inc
ss
sbb
add
pushf
aas
xchg
cmpsb
push
inc
fcoms
lret
ljmp
pop
in
cli
pusha
pop
mov
loopne
adc
sarl
dec
mov
jle
sahf
pushf
push
addb
inc
jmp
in
test
push
stos
jmp
sbb
mov
mov
popa
sahf
and
lods
scas
and
sbb
ja
push
test
movsl
cmpxchg
push
jle
lock
lahf
mov
aas
ljmp
push
xchg
adc
sbb
xchg
xor
cltd
vpmulhw
clc
sbb
sahf
xchg
dec
pop
lahf
lahf
push
push
les
loop
xor
clc
inc
stc
and
fcomi
fcoml
and
cmc
jno
insb
aad
add
arpl
xchg
movsb
dec
xchg
popl
pop
jbe
and
movsl
pop
js
push
jne
sub
call
popa
adc
into
sub
mov
push
notl
xchg
mov
rclb
int
push
clc
inc
inc
out
mov
inc
test
dec
aas
xchg
jbe
ja
lods
inc
sub
pop
push
stc
ja
andb
cmc
mov
shll
in
or
aam
xchg
hlt
fildl
test
outsl
outsl
cmp
fwait
lret
mull
std
and
mov
push
mov
and
mov
jl
sub
cmp
test
xchg
push
mov
pop
fisttpl
cmp
inc
cli
mov
sub
aas
mov
pop
dec
shlb
outsb
pop
cmc
mov
push
jmp
out
stc
jge
testl
fisttpl
pop
xor
in
fwait
xor
loope
and
mov
insl
sbb
cmpsl
cs
mov
pop
mov
mov
mov
inc
fcoms
adc
xlat
rcrb
outsb
adc
cmc
inc
daa
pop
mov
sbb
pop
xchg
jns
jb
add
sbb
cmp
jb
fwait
mov
xchg
xchg
mov
jmp
enter
adc
sub
xchg
sahf
xchg
popl
jle
add
out
dec
loopne
sub
lahf
dec
and
dec
std
inc
ficoml
rorl
lods
sbb
sbb
jns
enter
shlb
mov
push
mov
dec
sbb
ss
mov
mov
cmp
inc
push
fsubrl
jge
mov
rcrb
cmp
repz
add
pusha
pop
pop
fsub
nop
fnsave
jp
cwtl
call
cmp
xchg
jg
cmp
repnz
jae
ds
add
xor
cmp
pusha
int
mov
dec
mov
push
mov
mov
pop
mov
testl
inc
aas
lret
add
je
orl
daa
push
stos
sti
leave
cmp
cltd
mov
das
mov
jle
outsb
fdiv
jb
outsl
xchg
sub
xchg
cmp
adc
mov
icebp
ss
test
scas
pop
popf
xchg
roll
adc
dec
jl
mov
mov
mov
sti
fmuls
sub
fnsave
inc
je
popf
shlb
bnd
jmp
pop
lods
ss
mov
sbb
sub
xchg
push
mov
leave
push
xchg
mov
or
adc
push
aam
filds
add
arpl
and
adc
daa
sbb
push
mov
mov
dec
mov
outsl
mov
movsl
or
mov
mov
dec
lfs
shrl
repnz
hlt
out
dec
movsb
test
xor
cli
dec
insl
mov
orl
insl
inc
xchg
xchg
in
push
and
stos
push
hlt
xor
push
dec
gs
dec
icebp
mov
in
mov
lds
test
sub
outsb
cmc
xchg
push
xor
xchg
cmpsl
mov
pop
jbe
push
push
jle
xchg
mov
adc
insl
leave
test
push
sbb
addl
cmc
fidivrl
xchg
mov
xor
pusha
adc
arpl
push
les
ja
fcoml
pushf
pop
add
fwait
bound
fmul
mov
jle
rorb
fisubrl
mov
pop
aas
dec
out
cmpsb
cli
idiv
lret
sar
xor
sub
jnp
push
jne
mov
repnz
inc
mov
adc
push
lcall
repnz
inc
or
movsl
push
filds
mov
rsqrtps
enter
dec
push
fsubs
pop
push
and
and
jg
fcomps
in
adc
jge
in
mov
pusha
imul
cmpb
lock
in
mov
pop
lea
dec
adc
or
push
xchg
leave
adc
movsb
and
jae
shrb
call
add
xchg
rol
cmp
lods
jecxz
adc
mov
jnp
addb
bound
cmp
mov
dec
pop
dec
push
jge
cltd
mov
bound
mov
mov
decl
dec
inc
test
imul
or
pop
xchg
or
cmp
rcrl
pop
lea
pop
mov
out
and
cmpsl
pop
pop
mov
add
adc
adc
daa
mov
mov
sub
sub
test
sub
scas
out
add
jo
push
fsubp
cmpsl
or
jge
loopne
add
sbbl
mov
lods
push
test
adcl
scas
jmp
mov
lea
mov
jne
inc
jg
int
inc
sub
movsl
mov
in
cmpb
xor
pop
or
fucom
or
cmc
cmc
movsb
dec
mov
sub
nop
ljmp
push
cmp
in
push
sti
ret
idiv
push
gs
xor
or
push
mov
cltd
in
pop
roll
js
push
jns
adcl
nop
clc
and
pop
stos
jb
cmp
push
adc
dec
mov
jecxz
mov
inc
xchg
outsb
push
ret
popa
xchg
rcrl
dec
inc
fnstenv
movsb
pop
in
push
hlt
int3
sbb
sbb
xchg
adc
jbe
loop
mov
ja
add
mov
popa
pop
ss
hlt
stc
mov
pop
into
jmp
cmp
mov
mov
lret
sbb
orb
in
pop
push
xchg
jno
cmpsb
sti
pop
mov
add
dec
mov
ds
xchg
je
jp
jmp
cld
xor
jge
jmp
leave
mov
sub
add
lds
lock
xchg
lods
insb
neg
mov
dec
sub
js
inc
mov
xor
adc
add
into
jge
int
jnp
mov
push
push
bound
push
insb
rclb
mov
mov
jp
add
push
mov
mov
flds
xchg
and
sarl
outsl
sbb
xchg
pop
adc
pop
xchg
push
adc
out
fistps
je
jp
hlt
sbb
xor
push
sbb
stos
movl
cmp
mov
xor
out
dec
cmpsb
fldenv
and
cmp
lret
cmp
sbb
sahf
mov
push
inc
dec
enter
jo
lret
jp
movl
pop
pusha
xchg
or
jno
cld
or
mov
lcall
stos
jno
call
sar
lahf
pop
jge
data16
in
mov
push
inc
negl
jns
out
mov
lds
stos
mov
cmp
adc
cs
sbb
ret
scas
shll
cmp
inc
mov
cmpsb
cmpw
push
ficoml
es
ds
into
ja
outsb
xor
inc
lock
push
dec
int
popa
xor
lods
in
adc
rol
fucomi
push
fcom
test
lods
cli
jmp
daa
fdivrp
sub
cmp
scas
cmpsl
add
and
mov
and
add
lods
shr
mov
pop
inc
inc
mov
addr16
insl
mov
add
push
mov
lock
pusha
push
xor
int3
jp
into
pop
lods
idivb
cmc
adcb
mov
aam
and
sbb
pop
mov
iret
out
sub
add
repz
test
pop
loopne
jl
cltd
ret
das
pop
clc
mov
pop
push
xor
cmpsl
icebp
mov
dec
enter
mov
xor
leave
jns
pop
cmp
pop
fidivrs
xchg
jae
bound
sbb
mov
and
iret
repnz
stos
mov
xchg
cli
add
adc
shrb
xchg
push
cmp
loope
push
push
pop
inc
mov
jp
jecxz
cmp
cmp
jno
jae
pop
add
adc
inc
or
mov
mov
add
mov
insl
or
pop
xchg
sbb
or
mov
repnz
jge
sahf
add
hlt
pop
rclb
adcl
pusha
cmp
inc
pop
adc
loop
push
gs
ljmp
mov
xlat
sbb
stos
push
sub
mov
test
hlt
pop
dec
dec
js
jmp
repnz
push
vmovd
and
imul
in
add
or
rcr
stos
jge
mov
sub
mov
mov
mov
pop
jo
jmp
shl
sub
and
push
rcl
jae
push
mov
dec
hlt
in
mov
sbb
lods
cmp
into
cmp
xchg
pushf
dec
mov
fiadds
xor
sbb
lea
mov
or
cwtl
fbstp
out
xor
jl
dec
sub
xchg
inc
in
cld
xor
ss
call
xor
movb
stos
inc
psrld
std
adc
outsl
add
in
cwtl
fcmovne
int3
and
jb
shrl
lret
mov
movsl
push
xorb
sar
lcall
jbe
pop
addr16
dec
dec
mov
mov
sub
pusha
fnstcw
insl
and
subl
ds
scas
mov
inc
imul
jp
popf
cli
inc
jmp
and
mull
push
mov
push
inc
jae
dec
xchg
bound
xor
testl
lock
dec
cs
jae
and
nop
dec
xchg
adc
jle
ja
int
sbb
dec
mov
xchg
mov
out
sub
bnd
pop
fs
jge
xor
sub
jmp
sbb
adc
mov
adcl
cmpsb
inc
ret
jl
sub
pop
push
add
adc
repz
inc
jge
sbb
sbb
cmp
jge
add
mov
ja
ss
test
jmp
sbb
inc
outsb
mov
inc
sbb
js
or
pop
out
ret
xchg
cmpsl
fnstsw
loope
ror
out
sub
mov
ss
xchg
pusha
push
mov
sbb
xor
int3
push
test
mov
xor
lret
cld
or
xchg
fwait
out
popa
inc
push
mov
jo
lea
xchg
sub
mov
dec
pop
cmp
stos
add
add
and
pushf
hlt
cmp
mov
out
aaa
push
sbb
out
testb
out
test
fwait
mov
lods
push
inc
cltd
sub
xchg
lock
mov
jae
mov
jnp
in
mov
mov
dec
and
mov
fisubs
xor
push
fwait
pop
aad
sahf
fwait
adc
or
mov
xchg
jmp
xor
sti
push
test
aas
sbb
xor
jno
add
add
and
mov
cmp
in
sbb
ss
clc
stos
mov
leave
pop
xchg
das
mov
daa
xchg
or
in
add
sahf
xor
sub
mov
mov
or
xchg
push
adc
leave
cmp
popf
or
shlb
and
rclb
imul
mov
jmp
adc
push
pop
cli
arpl
lods
dec
repz
push
ljmp
xor
inc
jns
addr16
mov
sti
cmp
lret
inc
test
mov
filds
mov
fildl
mov
mov
lods
xor
dec
out
xchg
sub
adc
xor
jl
andl
dec
push
stos
push
pop
int3
cmc
not
aaa
pop
and
lret
add
sti
xor
push
sub
push
fsub
mov
xorb
cmp
subb
cwtl
xor
lret
dec
mov
sar
in
jl
data16
sti
call
jae
pop
push
sbb
mov
std
and
mov
lcall
pop
popa
jno
or
ljmp
jno
pop
sub
insb
ljmp
scas
fistl
sti
into
rorl
lods
std
test
les
aad
std
or
rorl
ficompl
ss
lock
inc
andb
div
or
adc
ja
xor
xlat
xchg
push
pop
or
and
xchg
aaa
jl
push
mov
add
jmp
test
popf
jb
frstor
das
sub
es
popf
mov
scas
les
dec
pop
jge
dec
push
dec
lods
sub
add
cmp
lods
cwtl
in
pusha
mov
mov
sub
sub
pushf
mov
mov
int3
mov
mov
roll
ja
lcall
lret
or
fsubs
push
sbb
nop
jnp
pop
gs
push
addr16
add
data16
shl
dec
cmpsb
imul
push
sub
cltd
cmp
inc
push
cmp
dec
or
or
sub
aaa
jne
mov
or
pushf
adc
fsts
inc
mov
or
inc
testb
jg
xchg
xlat
and
jbe
popf
je
xlat
aad
lea
mov
push
lea
fmull
push
fldl
movsl
sub
cmp
into
mov
out
int3
adc
imul
mov
ret
push
je
or
push
stos
fidivs
inc
outsb
lret
jge
or
inc
aam
pop
sub
dec
sub
inc
loopne
jb
in
stos
mov
xchg
sub
aas
mov
test
sbb
adc
sbb
fimuls
jbe
xor
out
repz
dec
inc
dec
and
dec
popa
mov
jb
cmpsb
pop
push
xchg
sub
sahf
jbe
aam
idivb
pop
insb
stos
mov
outsb
fdivr
cmp
dec
and
xchg
into
dec
pop
int
adc
mov
stos
xor
mulb
decb
je
xchg
add
jbe
cli
ret
dec
outsl
add
lock
fistps
dec
mov
jnp
jb
or
divl
iret
xchg
adc
pop
add
ja
std
push
mov
mov
sbb
leave
enter
xchg
movsb
mov
inc
pushf
ljmp
xchg
adc
movsb
and
insl
pop
out
test
jl
stc
and
scas
pop
mov
xlat
pusha
test
clc
es
outsl
dec
cs
ss
std
inc
loop
loopne
int3
popf
push
test
insb
cltd
push
fcmovnu
je
pop
mov
sub
rcrl
xlat
popa
pushf
stos
cld
aas
cltd
out
push
out
push
xchg
push
cwtl
icebp
ss
jb
lret
and
mov
out
jecxz
cli
sti
push
cmp
sub
insb
fnstsw
push
fmul
aad
add
adc
lret
jns
mov
ja
cmp
adc
pop
hlt
mov
pushf
or
cmp
jne
push
cwtl
fmul
cmp
sub
das
sbb
sub
in
nop
pop
cmp
scas
out
stos
pop
mov
dec
mov
enter
dec
movsb
fsubrs
xchg
testl
repnz
or
pop
inc
cmp
je
mov
nop
aas
subb
iret
adc
dec
rcrl
push
sub
push
inc
add
xchg
nop
sbb
cmp
mov
mov
in
pop
jge
call
fyl2xp1
pop
ds
call
or
push
inc
scas
inc
out
pusha
fimuls
adc
inc
dec
in
fwait
push
shlb
push
adc
cmp
roll
sub
push
adc
inc
loop
jecxz
mov
out
xchg
sub
dec
or
pop
outsl
outsb
nop
xlat
sar
cld
loop
push
xchg
lods
add
jg,pt
syscall
std
aad
pop
in
in
sbbb
hlt
inc
xor
and
mov
or
or
std
scas
or
push
outsl
loop
lods
inc
add
pop
dec
std
mov
sarl
xchg
lret
fildll
pop
add
sub
jge
mov
js
xor
xor
or
insb
push
stos
test
nop
cwtl
outsl
aaa
mov
negl
jp
mull
mov
fnstsw
add
add
divb
push
sbb
sub
sahf
rorl
jecxz
pop
imul
lea
ss
pop
cmp
scas
push
and
jno
out
add
outsb
cmc
shrl
cmovl
adc
adc
jl
cmc
ss
sub
dec
mov
icebp
lahf
mov
pop
repnz
das
repnz
jl
and
mov
jle
mov
sahf
add
lcall
and
and
xchg
bound
pusha
je
ret
loop
bound
cwtl
xchg
jb
lods
sar
jo
mov
ret
push
xchg
xchg
test
lret
and
lock
xchg
fnsave
cmc
pop
adc
js
pushf
mov
lock
dec
add
push
sub
cmp
repz
xchg
movsl
jmp
mov
lea
dec
cmc
dec
dec
xchg
loope
jle
lea
xorl
cwtl
and
add
hlt
std
sub
xchg
sub
push
clc
jo
lods
sbb
adc
push
mov
fsub
jl
test
cmpsl
push
lods
sub
mov
add
clc
imul
jo
je
add
xlat
jns
adc
ljmp
sbb
sub
arpl
lock
mov
loop
pop
jbe
cli
repnz
aaa
bound
add
mov
std
arpl
xor
fmul
sbb
cmp
cmpb
add
insl
out
adc
ss
jns
xorb
test
cmc
add
push
mov
fistpl
ljmp
pushl
aad
movsb
add
popa
push
mov
mov
js
add
push
ss
aas
sbb
ljmp
pop
xchg
iret
addb
inc
std
xor
loope
push
lea
popf
mov
push
adc
inc
scas
xchg
mov
cltd
pop
cmp
or
call
mov
jns
adc
mov
mov
orl
out
sti
inc
adc
mov
insb
fucomip
outsl
clc
shll
mov
dec
jns
out
and
in
or
das
mov
enter
sahf
inc
mov
test
pop
xor
jo
aaa
dec
fwait
outsl
add
data16
cmpsl
ret
in
repnz
mov
mov
or
int3
jnp
loope
les
stos
sbb
pop
jg
adc
mov
cmpl
test
ja
mov
xor
lods
mov
push
lods
jmp
and
in
mov
pop
fisubrl
ficomps
in
xor
inc
xchg
dec
cmp
lods
jle
inc
xor
jmp
sarl
loop
jb
dec
insl
sub
aam
movsl
aas
sahf
rclb
or
inc
sbb
sbb
iret
and
xor
fistpl
aaa
dec
and
add
mov
and
out
xor
sub
insl
fists
test
pop
xchg
cltd
xor
aam
mov
inc
adc
int3
jg
mov
fistl
je
fwait
adc
inc
push
insb
sbb
shlb
pop
mov
fistps
mov
jg
or
jmp
lahf
mov
ret
sahf
cmp
lret
sub
subl
jge
add
loope
jo
loope
fldt
add
inc
idivl
xor
mov
inc
not
pop
cld
pop
jp
neg
shrb
lret
xchg
loop
ret
mov
sbb
jmp
in
test
mov
mov
scas
xor
bound
fbld
mov
add
outsl
test
push
enter
inc
jne
and
push
adc
lea
shll
push
ret
inc
jge
fldenv
jnp
xchg
mov
inc
cmp
add
aaa
push
or
pop
mov
fadds
lods
inc
or
cwtl
xor
out
fsubs
inc
mov
cmp
and
test
scas
dec
adc
mov
and
or
test
repnz
and
sar
xor
xor
fbstp
cmp
add
pusha
inc
xchg
inc
fstl
or
jnp
cmpsl
clc
cmp
testl
test
sbbl
pusha
adc
pop
movsl
xchg
mov
mov
adc
js
sbb
dec
lret
cli
shrb
jb
in
and
push
cld
in
jmp
leave
xor
fmull
add
ds
ror
adc
out
xchg
dec
roll
mov
scas
push
xchg
mov
jmp
inc
es
jns
push
cwtl
rclb
sub
jmp
repz
dec
sbb
xor
push
inc
lahf
lock
stos
test
xorb
daa
jg
inc
aas
push
mov
inc
lret
adc
and
fwait
icebp
out
outsl
in
pop
repnz
adcl
jo
push
fcmovne
pop
je
jnp
int3
jae
xor
rclb
nop
adc
jecxz
jecxz
xchg
in
jbe
jno
cmp
loop
fadds
sub
movsb
adc
cli
daa
cmp
jg
icebp
out
outsl
stc
loopne
leave
fcoml
lret
callw
sbb
popf
jmp
aaa
shll
movsb
sbb
movb
mov
push
mov
fisttpll
fmulp
push
mov
into
push
adc
xor
sub
loop
hlt
out
sti
pusha
ljmp
sbb
loop
mov
or
aad
or
xlat
mov
sub
cmp
in
dec
add
fcoml
addl
stos
mov
dec
dec
xor
jo
sub
insl
push
movsb
fwait
jp
add
push
imul
jecxz
mov
lret
loopne
sub
test
push
ja
cmp
fldl
jnp
mov
lds
notl
sub
es
push
adc
or
aas
ljmp
cmpsl
xor
fstpt
out
inc
jecxz
and
pop
adc
pop
and
popf
adc
lahf
adc
hlt
sub
movsb
lods
in
int
cmp
inc
ret
push
ds
xchg
add
cmpsb
mov
xor
xlat
dec
out
xchg
cmp
fdivrs
dec
int3
test
jae
icebp
in
fiaddl
out
lods
mov
in
and
xchg
out
loopne
lret
rcr
xor
fsqrt
mov
pop
add
leave
cmpb
sbb
inc
mov
push
jle
adc
push
data16
cld
dec
pop
xor
adc
in
or
lods
mov
repnz
mov
push
inc
imul
push
cli
xlat
jbe
mov
sbb
repnz
sbb
test
mov
addr16
and
cmp
je
dec
cmpsl
js
sub
cmovl
fs
cmp
test
inc
aaa
or
fs
das
and
pushf
jbe
sub
loopne
sti
cmp
aas
mov
sub
mov
jbe
push
sub
ffree
cmpb
inc
pop
adc
ljmp
xchg
jo
mov
addr16
scas
push
dec
aam
outsl
mov
inc
scas
popa
jge
imull
inc
jp
sahf
dec
xchg
test
push
and
jo
mov
std
adc
add
cmp
pop
stos
jecxz
jp
out
or
pop
cmp
popf
adc
lock
cmpb
lret
sbb
cld
pop
jle
sarb
pushf
sbb
shrb
jbe
sti
jmp
sbb
push
lret
jle
and
lock
mov
imul
sbb
or
mov
add
daa
or
inc
mov
cli
adc
aad
sub
add
mov
sarb
lret
nop
ret
push
lds
sub
mov
jmp
adc
cwtl
rcll
cltd
mov
sbb
or
imul
cmpsb
sub
fidivs
jae
jnp
mov
cmp
sub
or
pop
xor
sub
das
add
iret
lods
jecxz
jo
mov
rdpmc
hlt
pop
pop
ret
jmp
mov
arpl
sbb
rorl
or
in
add
imul
rolb
sarl
pop
in
cli
negl
ficoms
mov
dec
sbb
pop
fstpt
xor
push
ret
inc
jno
and
adc
xchg
sbb
fsubrs
pop
sub
cwtl
mov
nop
pop
pop
out
pop
push
popa
out
mov
sbb
mov
outsb
or
jp
cmp
rcrl
test
ficoms
cmp
in
sbb
dec
fsts
adc
adc
mov
mov
xchg
into
mov
out
sbb
stos
and
lock
mov
jno
je
cmp
cmc
aas
sub
pusha
imul
dec
in
dec
daa
stos
std
movsl
adc
mov
or
pop
lds
xor
outsb
mov
mov
sub
mov
movsl
loope
sarl
imul
outsb
jg
adc
adc
mov
das
sub
fisttps
nop
in
std
roll
dec
es
jnp
inc
sbb
jecxz
insb
cli
adc
bound
or
push
callw
int3
mov
iret
lods
xor
or
push
push
pop
js
and
ss
imul
outsb
xor
leave
loop
sahf
jbe
insl
sbb
test
adc
das
mov
add
test
mov
push
jle
lret
insl
pop
cmp
mov
push
mov
sbb
jne
loop
les
mulb
push
imul
test
mov
mov
inc
xor
fcomip
jp
jnp
jmp
sub
mov
add
fisubl
dec
and
fwait
loop
cltd
mov
dec
cs
outsl
sbb
inc
jno
sub
insb
repnz
pop
push
push
adc
sub
lret
js
hlt
adc
fadds
xchg
shrl
aas
enter
hlt
dec
dec
aaa
out
imul
fmuls
push
call
insl
incl
sub
lock
sbb
push
enter
test
jo
push
aam
dec
push
sahf
jg
dec
mov
pop
jg
mov
stos
shl
incb
test
jg
frstor
ret
jns
mov
das
leave
jmp
jne
lock
nop
pop
mov
cmc
inc
pop
les
arpl
lods
dec
dec
push
imul
inc
dec
fimull
bound
insb
fildl
sti
push
mov
dec
sub
fidivrl
js
aam
scas
addl
mov
xor
sub
push
xchg
jnp
mov
sub
test
adc
or
dec
mov
xchg
mov
sub
rcl
push
mov
popa
push
andb
cmp
fsub
jne
adc
push
add
push
sarb
pop
inc
and
jnp
mov
mov
pop
mov
call
mov
pop
out
addr16
aaa
aas
lret
mov
xchg
in
dec
lret
dec
dec
push
jecxz
ficomps
ss
mov
jle
das
arpl
jecxz
sbb
adc
jns
dec
neg
xchg
or
inc
pop
adc
pop
outsl
popa
pop
nop
push
inc
mov
repz
repz
adc
mov
add
add
mov
aaa
inc
stc
lea
dec
mov
lock
es
push
or
jle
dec
push
sbb
in
das
mov
cmc
and
dec
push
in
leave
movsl
inc
data16
jns
addb
ss
lock
aaa
xlat
into
into
lcall
pminub
sub
mov
je
stos
mov
fcmovnb
inc
xchg
dec
dec
adc
dec
ret
addr16
fisubs
sbbl
xchg
movsb
adc
test
inc
sub
icebp
pop
and
test
xor
jmp
ja
mov
mov
icebp
out
pop
mov
pop
pushl
loope
dec
push
push
imul
mov
in
test
mov
or
sub
mov
xor
gs
cmpsl
mov
arpl
arpl
dec
cld
pop
cmc
out
mov
pop
cmpsl
addr16
mov
mov
and
pop
filds
xlat
xchg
jl
cmpl
jns
mov
ds
inc
call
jmp
rorl
pop
xor
inc
sbb
popa
aam
ljmp
sbb
lock
push
mov
pop
out
sahf
repnz
sti
pop
test
dec
sahf
add
adc
dec
xlat
addr16
xchg
mov
push
loop
add
mov
jp
pushf
jae
mov
pushf
rcrb
jno
nop
mov
pop
aam
inc
xchg
mov
loopne
orb
pop
mov
mov
lret
lods
test
cmc
mov
mov
arpl
cmp
ret
movsl
arpl
dec
pop
cld
stos
sub
fcmovb
insb
add
xchg
jecxz
lret
repz
addr16
into
sub
and
std
jecxz
mov
popf
or
push
and
sub
sbb
pop
pop
pop
divb
sarb
push
xor
sarl
fsts
pop
jge
mov
jbe
js
ror
cld
call
lahf
mov
sti
popa
rcll
sbb
jbe
xor
add
mov
pop
inc
scas
mov
out
xor
push
xor
sbb
imulb
lahf
mov
fsub
jns
sub
jp
call
arpl
mov
inc
inc
movsl
xchg
xchg
mov
mov
mov
clc
jb
mov
mov
rorb
mov
sub
les
in
adc
adc
and
aad
and
dec
mov
push
imul
cmp
xchg
andl
gs
pop
cmpsb
sbb
shll
lock
loop
pop
jb
stos
sub
xchg
push
cli
inc
adc
shlb
arpl
push
xchg
les
leave
and
cmpsb
rcrl
aaa
test
sub
stc
xor
ss
push
leave
inc
inc
int
xchg
cmp
xor
out
pop
push
push
sbb
cmp
or
ret
out
jno
ljmp
ret
xchg
push
aam
mov
xchg
mov
xchg
inc
stos
out
inc
loop
sar
stc
movl
push
popf
pop
icebp
mov
and
mov
shll
push
xorl
lods
or
mov
pop
or
rorl
hlt
mov
xlat
scas
xchg
inc
inc
and
fdiv
out
xchg
pushf
pop
sub
sbb
ds
ja
or
outsl
xchg
jl
divb
mov
fwait
or
out
in
int
ret
insl
push
jl
sub
inc
sbb
test
loop
dec
andb
lods
pusha
shr
dec
test
ss
xor
in
mov
add
cmp
push
xchg
mov
and
fbstp
repnz
lret
add
mov
jno
cmc
pop
rcrb
jmp
repz
cmpb
mov
push
dec
mov
mov
sbb
leave
push
mov
jns
movsb
cmc
fmuls
mov
sub
adc
xchg
cli
dec
lds
adc
test
inc
or
aas
push
dec
add
xchg
jl
repz
mov
out
scas
aas
mov
xchg
push
cltd
dec
subb
xorb
push
xor
addl
into
and
sub
lahf
adc
and
and
mov
daa
nop
aaa
mov
dec
xor
rcrb
fldcw
inc
sbb
cmpsb
into
aad
call
aas
fwait
insb
aaa
daa
scas
push
and
stc
add
mov
mov
adc
rolb
mov
mov
jb
shll
pop
rclb
add
adc
jg
jge
popa
xchg
add
pop
pop
insb
push
adc
inc
fwait
jnp
push
iret
push
xor
sti
jne
das
ret
push
je
pop
popf
ret
sub
aad
repz
stc
rolb
test
cmpb
xor
and
sahf
gs
arpl
mov
mov
pop
xchg
xlat
imul
int3
adc
inc
js
mov
mov
sub
jbe
cli
gs
pop
push
sbb
fsubrl
icebp
adc
mov
sbb
and
mov
loop
dec
add
call
cmp
xlat
add
xchg
adc
xchg
cmp
and
jl
mov
stos
mov
jnp
add
outsb
movsl
sahf
mov
pop
and
pushw
mov
int3
incl
cmp
lods
dec
test
adc
ret
pop
in
notl
fstpl
cmpl
shrb
or
or
mov
pop
enter
jmp
iret
int
insl
lods
pop
test
sti
cwtl
nop
pusha
test
pop
inc
repz
call
sbb
fstl
bound
mov
out
or
lock
repnz
mov
jp
inc
div
add
xchg
xor
jmp
lahf
xor
push
pusha
inc
and
lock
cltd
add
xor
shlb
and
into
sbb
cmc
cli
cld
pop
cld
aas
loope
dec
xor
aad
inc
jmp
push
out
jae
or
ds
fsubr
inc
push
lcall
and
or
int
add
jnp
jb
int3
pop
gs
cmp
je
outsl
jg
mov
jne
lret
mov
mov
pushf
push
in
mov
jne
adc
cmpsb
lret
lea
push
mov
inc
mov
rcll
or
and
repz
mov
lods
out
lods
mov
xor
adc
jg
mov
inc
xor
add
loopne
into
gs
mov
cmp
inc
imul
addr16
add
nop
gs
or
sbb
push
cwtl
pushl
sbb
lret
and
lcall
xchg
cmc
mov
cwtl
adc
inc
pusha
enter
cmp
add
mov
rorb
andl
mov
dec
dec
lea
adc
cmp
cwtl
mov
mov
in
pop
pop
and
xor
imul
and
fmuls
fsubp
fmull
icebp
out
pop
mov
movsb
into
test
xor
gs
popa
hlt
pop
sub
or
jne
rclb
test
aad
jbe
arpl
je
ja
dec
mov
outsb
inc
jne
repz
cmp
arpl
pusha
sub
jno
pop
dec
push
out
nop
pushf
mov
push
adc
iret
mov
aaa
xor
inc
ljmp
dec
pop
push
mov
fcmovbe
arpl
sbb
pop
test
fwait
gs
pop
test
xor
dec
inc
push
push
xor
sbb
push
cmp
mov
lea
ds
or
aas
lods
aaa
xor
cmp
mov
into
pop
mov
add
adc
hlt
fsubl
mov
mov
mov
loopne
pop
dec
imul
and
js
add
xlat
sarb
stos
mov
push
mov
pop
icebp
fs
out
sub
sub
and
and
shlb
and
test
sti
mov
mov
lahf
mov
mov
lcall
pop
aam
out
add
stos
and
inc
pop
fcoms
or
repnz
lea
outsl
mov
jbe
les
out
xchg
ds
scas
xor
or
mov
ret
hlt
adcl
ja
mov
jne
aad
cmc
cmc
popf
mov
lock
ficompl
push
fistps
movsl
fisubrs
pop
dec
xor
call
outsb
jnp
cmp
lods
scas
push
pusha
mov
mov
test
ljmp
popa
dec
jnp
and
bswap
xlat
jne
enter
sbb
push
lods
push
andb
xlat
aas
cltd
fldenv
xchg
aam
mov
jmp
bound
fidivl
jle
cmp
std
lods
fcmovnu
bound
sbb
std
cmc
negb
xchg
aad
mov
into
mov
jnp
xchg
cmc
adc
lods
push
dec
loopne
imul
bound
outsl
pop
or
and
jae
pop
lret
adc
jae
cs
hlt
jp
mov
push
fisubl
pop
fstps
je
pop
adc
icebp
inc
pop
movsb
sub
push
std
sub
imul
pop
sub
mov
mov
mov
xchg
cmpsb
sub
mulb
push
mov
sti
jne
inc
xlat
loopne
xor
inc
insl
outsb
lret
and
fimull
mov
ds
mov
adc
pop
lcall
jp
push
cwtl
push
stos
and
iret
out
mov
jg
in
cmp
cmp
les
push
xor
or
add
aam
sub
popa
je
cmpsl
mov
fistl
cmp
cmp
std
je
leave
sbb
decb
jae
popf
mov
repnz
fsubrl
mov
pop
cmp
fiaddl
mov
cmc
cltd
mov
fidivrl
cwtl
mov
push
ret
cmp
jo
rcrl
jle
add
mov
mov
xor
sbb
in
mov
lds
test
insl
xchg
inc
ret
shr
xchg
shll
or
testb
lods
ja
push
addl
push
fmulp
jp
lds
xor
mov
sbb
xchg
and
mov
sub
sbb
test
mov
dec
dec
jo
xchg
cmp
lods
mov
call
xchg
jo
ret
push
inc
mov
push
push
xlat
popa
push
imul
jle
add
insb
jl
je
add
sahf
and
out
pushf
xor
push
jnp
into
loope
push
notb
cmpsl
pop
pop
out
fnstsw
push
gs
addl
aam
movsb
mov
in
add
inc
cltd
icebp
sbb
insl
fs
inc
cmpsl
leave
imul
cmpsl
add
push
xor
aas
sub
push
mov
adc
mov
pushf
fstl
outsl
inc
mov
mov
je
xor
cltd
ss
in
icebp
leave
mul
out
jno
test
into
cmpsb
push
adc
xorb
mov
pop
enter
add
mov
loopne
or
mov
xchg
lods
jge
mov
in
fwait
cwtl
jge
xchg
mov
pmaxsw
xor
ss
aad
es
mov
int
adc
jae
mov
stos
mov
in
enter
test
xchg
ja
cmpsl
pop
movsb
fidivrs
lret
adc
pop
ja
cmpsl
mov
and
push
arpl
into
int3
dec
xchg
dec
jmp
or
lock
cli
mov
sbb
mov
pop
lods
sub
push
cli
in
leave
mov
int
out
rorl
cwtl
push
repz
out
push
ja
arpl
add
iret
and
cli
xor
xlat
pop
ficomps
mov
push
cli
pusha
div
sbb
dec
cmp
inc
repz
fwait
cmpsl
out
lret
mov
addl
mov
pusha
enter
xchg
sahf
push
or
jne
pushf
ret
dec
daa
bound
cmp
mov
lret
shrl
shlb
mov
cmp
adc
insl
mov
roll
mov
jp
sub
das
stos
fwait
xor
js
pushl
scas
cmp
jmp
fmuls
mov
loope,pn
pop
pop
mov
mov
jnp
fsts
cmp
dec
mov
or
cmp
sbb
outsb
sbb
pop
cmp
jno
subl
add
outsl
cs
inc
out
arpl
cs
fsubrs
hlt
addb
imul
fimull
push
scas
add
mov
mov
testb
cmc
rcrb
push
outsl
xor
in
bound
enter
xchg
adc
xor
fisttpl
mov
and
cltd
mov
inc
mov
sbb
jl
inc
data16
jnp
js
jmp
and
sar
inc
fnsave
cmpsl
test
or
push
mov
jp
dec
xchg
pop
jle
aaa
fnstsw
in
jle
lret
xchg
out
sbb
clc
push
repnz
cmpsb
orb
cmpsl
popa
pop
shll
xchg
cmp
push
pop
sbb
les
orl
outsb
addl
leave
dec
hlt
out
pop
test
xor
mov
jbe
mov
push
loop
xchg
xorb
or
xor
pusha
add
jg
das
repz
push
out
inc
dec
movsl
sub
xchg
xor
xor
mov
cli
xchg
lds
cwtl
or
adc
cmpb
or
sti
cld
test
and
push
pop
or
emms
push
hlt
jae
or
mov
cmp
lods
shrl
in
test
mov
scas
dec
stos
in
dec
into
loope
arpl
or
popa
or
xchg
in
push
stos
dec
out
in
add
repz
sbb
scas
mov
pop
cs
pop
xlat
dec
xor
push
pusha
cmp
sub
fs
xor
xor
or
ficoml
cmp
es
xor
out
imul
aaa
fadd
adc
or
adc
lret
xchg
add
lock
test
test
xchg
imulb
add
pop
sbb
fxch
std
push
movsb
mov
or
loop
dec
xor
dec
in
push
enter
push
incb
es
scas
testl
ret
push
and
pop
fisttpll
cltd
or
or
shlb
jle
imul
je
daa
fstps
int3
add
fisubs
sub
imul
sub
and
hlt
sti
lods
inc
dec
or
bound
mov
cltd
push
and
add
rcll
adc
mov
ds
sti
xchg
aad
push
mov
jno
cmpsl
mov
and
jmp
cltd
cmpsb
inc
mov
lods
or
mov
addl
sahf
cltd
adc
adc
push
pusha
xor
mov
les
test
shll
xor
pop
stos
cmc
gs
sub
sbb
jne
adc
jno
mov
imul
insb
pop
or
out
jg
aas
call
mov
fldt
jns
mov
xchg
dec
out
in
imul
and
out
into
dec
jp
and
test
push
cmp
mov
fcmovnb
push
xchg
inc
nop
sbb
pushf
sub
movsl
dec
push
mov
sbb
lcall
push
mov
cmp
or
add
movsl
pop
js
lea
push
mov
addr16
dec
mov
loop
inc
pop
out
pop
sub
std
pushl
jnp
push
cs
pop
stos
cmpsl
lcall
cmpb
sbb
outsb
std
push
rolb
jl
push
fcomps
out
fwait
lcall
stos
or
fisttpl
cmpsl
mov
cmpsl
dec
std
inc
push
repz
fldcw
xor
lea
pusha
cmpsb
mov
es
lret
out
xchg
test
pusha
lahf
mov
mov
jecxz
std
clc
sbb
jns
or
dec
fdivrs
imulb
pop
ss
xchg
arpl
stos
divb
arpl
push
icebp
pop
mov
mov
leave
loopne
dec
out
mov
idivb
mov
jp
into
pushf
mov
lcall
out
cmp
xchg
inc
roll
pop
add
or
mov
stc
push
addb
dec
imul
mov
test
mov
jns
movsb
addb
cld
xchg
testl
inc
cs
pop
nop
loope
das
mov
mov
dec
sahf
repz
call
in
inc
xchg
fmul
mov
aam
hlt
dec
xchg
push
mov
push
jle
rcrb
dec
out
add
cmc
addb
mov
mov
jb
push
fucomp
mov
mov
insl
push
rorl
inc
cmc
mov
mov
sahf
enter
cmp
gs
stos
insb
pop
clc
ret
mov
mov
mov
popa
pop
pop
mov
sub
lea
mov
mov
scas
stos
hlt
sbb
push
stc
rolb
js
movsl
sub
xor
lock
test
lahf
cmpsb
dec
fs
xchg
xor
add
pusha
into
das
out
nop
stos
sub
cmc
pop
sbb
imul
imul
dec
xor
repz
dec
mov
sbbb
mov
sahf
dec
sahf
fldcw
cwtl
adc
and
jecxz
not
sbb
sub
call
add
lock
jno
adc
mov
add
add
inc
mov
sbb
mov
aad
dec
sub
or
enter
lods
adc
fwait
addl
jo
orb
xchg
insl
jne
test
pop
sti
mov
xchg
cmc
inc
dec
inc
push
pop
mov
mov
push
and
cs
add
inc
fnstenv
add
adc
enter
rol
movsl
aam
cmpsb
mov
push
jae
es
mov
sbb
adc
cmp
roll
xor
inc
sub
inc
mov
insl
das
iret
inc
sar
out
dec
sbb
mov
push
cmp
push
sarb
push
jle
outsl
mov
scas
cld
pusha
push
adc
aad
lds
gs
mov
int3
vfnmsub213ps
test
jmp
scas
push
clc
mov
cmpsl
or
and
or
test
pop
or
insl
aam
adc
add
je
dec
xchg
and
call
add
xchg
pop
pop
mov
fwait
test
test
fcmovne
loope
xchg
popl
addl
mov
pop
es
pop
gs
incb
rcrl
sbb
mov
repnz
imul
mov
adc
xchg
ficomps
adc
roll
mov
xor
fcmovne
xlat
jl
xor
mov
adc
cmc
enter
inc
fcoms
sbb
add
mov
aas
ja
fs
push
imul
scas
idivb
or
rcr
xchg
pop
ljmp
loop
scas
jecxz
mov
fs
std
shl
decb
lods
orb
xchg
cmpsl
pop
and
dec
mov
add
mov
pop
test
lcall
pop
add
cltd
ficoms
bound
cs
pusha
popa
push
fs
roll
add
lret
imul
sbb
inc
scas
cli
fwait
outsl
jne
into
dec
or
loop
pop
push
lret
jb
add
iret
adc
shrd
push
xor
xchg
inc
fs
loopne
inc
aad
bound
stc
jle
popa
add
fstps
movsl
adc
add
push
ja
gs
sub
pop
testl
pop
lahf
pop
xchg
push
lods
repz
push
aad
sub
mov
sbbl
aad
addr16
flds
mov
mov
daa
rolb
mov
push
shlb
pop
jns
adc
imul
cmp
pop
fs
mov
insl
call
mov
out
pop
das
xor
jno
ret
out
mov
das
out
gs
xchg
adc
and
les
in
std
lock
sub
subl
icebp
mov
in
ds
shrb
cmp
fwait
cmp
jnp
sarl
int3
jecxz
mov
jo
inc
loope
leave
dec
cltd
inc
bound
xchg
pop
in
mov
dec
fists
pop
ss
add
jbe
mov
adc
inc
push
push
mov
out
aas
scas
mov
popf
sub
out
int
sbb
imul
stc
test
or
fsub
pop
ficoms
adc
cmp
fimuls
sub
or
pop
pop
xchg
movsb
adc
stos
lods
std
pop
out
inc
fwait
pop
insl
sti
or
sbb
ret
es
cwtl
loopne
push
dec
push
icebp
call
rclb
mov
or
rcr
mov
lods
and
lahf
mov
add
inc
pop
aam
cltd
ds
jge
addr16
faddp
push
sti
mov
stc
mov
mov
adc
int
lcall
fisubrl
jecxz
adc
ltr
data16
dec
jl
lret
jge
stc
mov
jp
fsubs
cmp
sbb
fisubs
scas
pop
or
add
xchg
jecxz
push
loop
fidivrl
out
popa
pusha
ret
dec
xchg
xchg
out
or
lret
loopne
out
mov
jecxz
mov
add
daa
lods
lds
xor
idivl
jmp
mov
mov
mov
mov
xor
add
add
or
cli
pop
ja
divl
pop
add
jbe,pt
lock
shll
dec
ja
sti
mov
jnp
push
mov
mov
inc
xor
aas
pop
mov
lcall
cwtl
dec
cmpb
push
lods
cli
lahf
shl
jbe
pusha
imul
rcr
das
loop
in
add
mov
jmp
and
push
cmp
mov
cmp
lods
fwait
in
mov
ret
and
jle
mov
or
mov
popf
mov
rcll
pop
jg
and
es
lcall
loope
mov
jns
jne
fildl
test
push
lcall
sbb
pushf
aad
sub
iret
add
outsb
roll
pushf
xor
inc
pop
dec
scas
call
fistl
sbb
mov
or
cmp
pop
popf
fldcw
sub
stc
sbbl
scas
xchg
or
pop
fs
jmp
repz
jae
jp
movsl
cmp
rcll
test
es
std
sub
pop
jge
adc
lods
in
aaa
push
xor
mov
xlat
sub
ds
scas
cmc
stos
arpl
out
ret
pushf
cli
loop
jb
push
cmp
stc
neg
cmc
add
test
shrb
icebp
loopne
shlb
sbb
in
mov
pusha
push
sub
mov
int
lock
push
add
sub
mov
xor
cmpsb
push
out
inc
scas
xchg
xchg
xchg
inc
jnp
mov
pusha
sub
stos
push
out
jno
pop
and
push
sbb
jle
cwtl
jmp
or
mov
dec
into
pop
and
cmp
adc
stos
repz
push
sti
push
data16
rcrl
or
lret
negl
sarl
fwait
push
sub
lret
push
aad
das
std
pop
jae
xor
sahf
inc
push
inc
movb
subb
mov
ja
cmp
mov
sub
stos
xor
imull
add
loop
mov
sub
inc
xor
pop
std
mov
or
mov
mov
lods
lahf
push
bnd
cwtl
mov
pushfw
aad
cmp
or
sub
pop
xor
xchg
adc
jg
ljmp
andb
pop
inc
fcomip
shl
out
shl
pushf
les
adc
imul
or
out
test
in
xchg
std
inc
mov
sbb
push
pop
leave
sbb
in
jne
pop
inc
cwtl
or
imul
test
mov
xchg
insb
or
mov
xchg
cld
mov
lods
xor
mov
loopne
mov
push
adcl
hlt
push
pop
cltd
mov
das
add
cld
sbb
out
iret
and
cli
and
sbb
outsb
jmp
jae
cmp
std
mov
cld
mov
dec
mov
xor
mov
pop
out
xor
dec
out
push
inc
pop
mov
dec
leave
mov
add
pop
rcrb
pop
xor
sub
jno
add
loop
push
mul
shl
shlb
jecxz
loope
cs
cmp
or
jnp
mov
cmpl
jmp
lods
iret
lock
mov
js
adc
jno
loopne
les
adc
jns
add
fwait
int
enter
dec
test
sbb
mov
repnz
dec
ss
loopne
test
jge
sbb
ret
xorl
sbb
int3
push
mov
jg
pop
repz
push
mov
cwtl
jl
cmc
test
imul
push
mov
aad
out
xchg
gs
movsl
pop
shll
adc
cmpsl
or
and
clc
cmp
bound
push
xchg
pop
lea
ret
push
xor
mov
add
daa
into
dec
fwait
xchg
pop
jae
add
inc
xchg
es
jns
inc
jae
mov
pop
dec
pop
mov
xchg
push
fwait
mov
sbb
add
or
jno
push
mov
repnz
dec
sub
jmp
sbb
fdivr
fstpl
sub
flds
bound
mov
into
js
push
je
xor
rcrl
add
xchg
call
int3
mov
xor
out
and
cmc
mov
idivl
xchg
repz
lcall
or
mov
xlat
cmp
and
inc
fistpll
fiaddl
dec
pushf
cli
lods
out
popf
pop
mov
les
aas
fcmovb
and
cwtl
fistpl
jecxz
mov
out
xlat
sbb
or
jb
lahf
data16
dec
adcl
push
inc
xor
loop
push
repnz
mov
mov
leave
push
sbb
push
jmp
shl
test
das
pushf
xchg
popf
clc
pop
insl
xchg
xor
inc
adc
jle
jmp
and
mov
or
cmpsl
xchg
xor
cli
test
add
mov
jo
jge
cmpsb
inc
or
mov
xchg
jmp
and
jae
ja
inc
push
out
cmpsb
mov
imul
pop
jne
pop
mov
in
or
in
call
cmp
xchg
sub
mov
popa
inc
push
sbb
adc
cltd
loope
fistps
push
mov
xchg
repnz
mov
add
cmpsb
jo
imul
sub
add
dec
test
outsb
or
test
in
movsb
push
inc
mov
clc
inc
je
mov
aam
fmulp
mov
and
incl
and
add
jg
xor
je
mov
or
or
jnp
mov
xchg
fisttpll
xchg
movsl
stos
cmp
pop
ljmp
aam
loop
jecxz
cli
cmpsb
cld
mov
xchg
cmp
mov
sarl
and
add
sbb
xchg
inc
inc
incb
xchg
jmp
adc
dec
fisubs
call
std
push
push
inc
inc
xchg
sub
add
arpl
adc
stc
add
push
add
adc
cmpsl
mov
xor
inc
ljmp
and
scas
mov
ja
aas
xlat
add
jl
lahf
xchg
stc
mov
inc
je
jp
bound
jmp
xchg
in
in
pop
test
in
push
xlat
jge
add
jecxz
bound
int3
mov
popf
lret
sub
dec
dec
dec
pop
xor
push
mov
add
dec
clc
cld
sbb
cmpsl
or
mov
sub
mov
lods
push
mov
xor
cmpsb
adc
clc
scas
add
loop
adcl
rol
jno
fldl
jp
dec
mov
cmp
sbb
mov
push
imul
or
insl
mov
fdivrs
jno
aaa
jge
jg
cmp
dec
shrl
std
add
leave
add
xchg
dec
push
and
cmp
nop
push
or
int3
add
xchg
shlb
mov
test
adc
push
shll
mov
inc
add
pop
in
adc
push
sub
pusha
hlt
xchg
dec
or
or
xchg
in
jo
popf
shll
lods
dec
jae
sbb
ss
insl
nop
sub
xchg
add
mov
imul
decb
xchg
adc
dec
test
adc
sbb
movsb
mov
sbb
ds
mov
mov
mov
and
sub
repnz
xor
inc
xchg
pop
lahf
xchg
adc
dec
mov
rol
dec
xor
adc
daa
mov
jb
repnz
xchg
mov
mov
jl
cld
sbb
icebp
mov
ljmp
pop
stos
in
inc
cld
and
adc
test
pop
gs
mov
or
popf
lret
ja
sbb
in
add
push
test
inc
sbb
imulb
mov
add
adc
pop
dec
or
leave
xor
push
rcll
in
ret
xorl
fldt
sub
jns
call
or
and
pop
or
in
cs
xchg
cmp
mov
sti
lea
xchg
xchg
aas
bound
std
mov
outsl
lods
lock
loope
mov
pop
shll
cli
xchg
mov
cmp
stos
ljmp
lret
imul
std
xlat
push
sbb
outsl
cmpsl
inc
xor
pop
jmp
sub
add
stc
and
out
xchg
into
mov
adc
jns
outsb
lds
dec
es
popf
daa
push
xor
arpl
lds
ljmp
pop
stos
and
xor
add
imul
arpl
loopne
fnsave
mov
xor
fs
lds
ds
and
jl
pop
cmpsb
data16
lods
mov
add
xchg
or
xor
jp
push
test
insb
dec
sub
int
enter
std
mov
rorl
or
ficompl
stos
pop
das
or
addl
jnp
mov
js
sbb
and
in
push
pop
or
cmpsb
fs
daa
jmp
outsb
xlat
in
add
adc
adc
popa
push
clc
push
loopne
xor
iret
push
shlb
push
xchg
sti
shrb
mov
sbb
insb
xchg
push
push
movsl
adc
je
and
popf
cwtl
adc
cmp
fdivrl
loope
inc
mov
outsl
xchg
lret
popf
sbb
jle
or
mov
test
imul
enter
popa
pop
xor
or
mov
aas
popa
ret
add
icebp
adc
dec
xor
dec
xlat
push
stos
push
jle
mov
dec
aas
and
mov
xor
lods
pop
push
and
dec
pop
fcoml
movb
jae
add
xor
loop
and
xchg
test
rcl
dec
and
js
into
hlt
push
pop
mov
mov
dec
push
loop
test
xor
mov
xor
adc
push
inc
repz
mov
dec
negb
add
cmc
cmp
out
call
mov
inc
and
or
lret
pop
mov
int3
xchg
adc
mov
cltd
fcoml
mov
dec
xchg
movsb
movsl
ret
mov
pop
sbb
shl
mov
fsubl
aad
pushf
inc
stos
pop
adc
movsb
loopne
jb
sub
adc
xor
pop
clc
scas
lea
cmp
aaa
pusha
sti
pop
add
pushf
cmp
popf
sub
mov
pop
xor
es
push
pop
notl
jle
and
xchg
in
in
stos
mov
mov
add
addb
xchg
add
stos
sbb
gs
push
jg
leave
mov
stos
mov
nop
push
insl
repz
add
lahf
addr16
cmp
xchg
fmull
push
pop
xor
iret
or
lea
in
mov
daa
pusha
rclb
and
ret
cld
imul
xor
jecxz
push
insl
and
pusha
push
push
dec
out
push
jge
repz
or
xor
scas
and
lods
imul
fnstcw
lods
gs
mov
scas
mov
lods
lret
xchg
movsb
dec
repnz
gs
lret
test
push
inc
mov
in
mov
mov
jg
add
clc
cmp
test
or
mov
out
cmp
sub
movsl
cmc
and
daa
orl
and
push
xchg
outsl
pop
mov
and
and
cmp
addr16
imul
popa
xchg
jbe
mov
cmp
in
insl
inc
mov
les
mov
dec
cmpsb
add
daa
add
aaa
inc
push
inc
cld
mov
out
movsl
inc
sbb
pop
frstor
lods
push
mov
jecxz
mov
ds
sub
pop
sbb
imul
or
pop
test
sub
adc
mov
jp
ret
cld
push
jae
xchg
adc
ss
add
ds
dec
mov
push
shl
push
inc
cld
add
lods
adc
mov
aaa
insl
mov
scas
out
lea
dec
jne
adc
push
xlat
ds
inc
mov
test
loope
sbb
imul
lods
xchg
das
cli
outsb
lcall
cmp
jae
icebp
rorb
loop
adc
jmp
mov
jecxz
lea
dec
out
xorb
dec
xor
shll
fucomip
ljmp
add
cmc
rcrb
in
sbb
dec
mov
mov
or
mov
sub
or
or
out
loopne
orb
aad
sub
push
pop
jg
in
in
or
lret
aam
bound
repz
arpl
das
xchg
pusha
or
lods
and
cltd
add
dec
int
jmp
enter
sub
dec
cli
jl
inc
push
test
push
inc
in
xor
sahf
add
loope
mov
mull
aam
push
int3
push
fdivrp
pop
aad
rol
xchg
pop
llwpcb
push
push
out
sbb
pushl
dec
enter
cmpsb
push
and
hlt
push
js
rorb
xchg
push
clc
imul
imul
int
lds
or
xchg
cld
mov
xchg
ficoms
pop
and
or
sub
mov
sub
out
dec
pop
outsl
in
sahf
sub
sub
outsb
push
fdivrp
cltd
add
adcl
lret
call
inc
cmp
or
nop
call
dec
inc
incb
pop
loop
das
push
lods
test
inc
mov
or
jae
push
and
mov
jmp
jg
xor
xchg
sahf
xor
out
lea
fcomip
xor
push
mov
fcmovu
dec
pop
std
lea
fbld
adc
rcrb
dec
ljmp
add
test
into
shrl
cmpsb
mov
push
fs
sub
xorb
mov
leave
push
xor
pmaddwd
jnp
jge
fmulp
inc
je
sbb
jbe
or
outsb
cmp
sub
cltd
adc
mov
xor
mov
icebp
loope
jge
or
xchg
out
mov
jne
pushw
lds
jae
push
daa
cmpsb
xorb
cmp
cmp
mov
xchg
les
push
inc
sbb
addr16
stc
add
cmp
adc
rcl
int3
call
sub
mov
adc
dec
add
popf
adc
adc
jl
inc
inc
cmpsl
aad
ret
fwait
add
push
pop
xor
sbb
cmc
jecxz
addr16
daa
sbb
jno
scas
sub
ljmp
data16
sub
pusha
repz
cmp
cmpsl
cmpb
adc
ljmp
xchg
bound
loope
adc
jp
flds
pmaxsw
mov
repnz
jnp
jle
inc
pop
xchg
addb
inc
pop
andl
mov
insl
lds
mov
pop
pushf
fbld
mov
and
lods
and
mov
or
loop
andl
xor
mov
sub
jle
lret
push
adc
push
mov
enter
hlt
out
sbb
inc
jmp
dec
add
imul
push
push
bound
faddl
jno
das
sub
adc
inc
ret
lahf
xchg
cmpsl
pusha
sub
bound
adc
cmp
rcl
mov
jmp
icebp
push
fwait
xor
pop
inc
push
or
mov
in
aam
adc
test
ret
clc
cmpsb
or
jmp
psubsw
fistpll
pop
jnp
sarb
adc
ds
pop
outsb
inc
fwait
sbbl
std
clc
in
loope
adc
ja
arpl
lahf
adc
iret
adc
shrb
lea
xor
lods
aam
sbb
pop
dec
repz
or
mov
cwtl
cmc
addl
or
xor
mov
push
in
je
lea
pop
mulb
add
fxam
inc
dec
jo
jmp
icebp
mov
push
mov
ret
jbe
push
jbe
xchg
pop
xchg
mov
lods
mov
or
mov
cmc
pop
or
negb
xchg
hlt
mov
or
jno
cmpsb
mov
inc
jg
outsl
inc
dec
xchg
pop
fstpt
mov
mov
fmuls
hlt
xchg
aaa
xchg
adc
xchg
xor
test
lock
xor
mov
lret
add
xor
ss
mov
adc
dec
inc
add
fiadds
dec
imul
clc
or
xor
pop
xchg
les
and
inc
adc
pusha
push
and
add
push
cmp
loop
adc
jl
imulb
int3
cmp
test
push
test
pop
ret
scas
in
in
and
fadds
notl
popf
int
fs
push
push
cmpsb
fsubrs
shll
cltd
lds
push
mov
pop
aad
push
adc
bound
lods
and
mov
cmp
rcll
and
jb
popa
loopne
ds
inc
bnd
push
je
insb
jecxz
popf
nop
lock
fcomps
pop
sbb
cmp
xchg
xchg
jno
dec
rclb
lea
mov
inc
pop
popa
adc
cltd
sub
frstor
gs
mov
fadds
mov
inc
add
sub
mov
les
adc
sub
lock
leave
jge
push
xchg
loop
gs
filds
idivb
push
fwait
mov
mov
repz
popf
imul
je
jno
xorl
decl
xlat
or
or
xchg
push
cmp
dec
lds
inc
push
aam
enter
jns
popf
roll
and
rclb
int3
iret
mov
gs
nop
cltd
jecxz
test
cmp
cmpb
shlb
jo
dec
pop
xchg
xchg
out
imul
scas
aam
xor
adc
cmpsb
sub
rorl
int3
rcrl
fs
xchg
or
inc
scas
hlt
nop
adc
adc
mov
and
mov
inc
inc
orl
repz
movsl
pop
push
sbb
xchg
or
scas
or
cmp
bound
pop
push
cld
lods
xchg
out
push
cmp
adc
insb
mov
mov
inc
pop
mov
cmpsl
cli
jns
xchg
out
cld
popa
outsb
jg
jmp
ja
stos
int
lahf
pop
sub
add
jb
pop
push
imul
out
iret
add
not
repnz
das
sub
jle
aaa
bound
mov
out
dec
inc
flds
adc
xchg
xchg
pop
leave
xor
addb
fists
add
dec
call
in
jecxz
push
fstpl
push
stos
sub
or
out
sbb
in
lret
cmp
xor
hlt
fnstsw
adc
sub
cmp
outsl
mov
sbb
loopne
inc
fisubl
add
jne
inc
enter
aam
es
cmp
mov
mov
push
cltd
inc
in
or
xchg
ret
call
loope
jp
xchg
fmul
cmp
fwait
jns
pop
outsb
lret
and
mov
mov
xor
xchg
dec
fs
pcmpgtw
mov
dec
pop
add
sub
push
iret
dec
comiss
lret
inc
dec
adc
xor
pmaddwd
enter
test
inc
cmp
out
or
lea
mov
pusha
push
xorl
or
cmp
fnstenv
sbb
push
ret
xor
arpl
int3
pop
inc
mov
xchg
adc
ja
insb
or
hlt
push
cmp
pop
ljmp
mov
xorl
int3
arpl
ret
push
loope
or
roll
iret
pop
ret
std
fs
movsl
xor
lods
push
jo
sti
push
out
add
sub
fs
sub
loop
mov
sahf
iret
and
cmpsl
cmp
xor
inc
je,pn
lods
sti
mov
mov
lods
or
mov
or
enter
pop
cmp
test
cmpsb
int3
mov
insb
jecxz
shll
pop
sub
aam
or
lds
fstps
jnp
mov
or
cmpsl
or
mov
cmpsb
cmp
in
dec
xor
pop
clc
ret
adc
mov
mov
mov
in
outsb
enter
jl
xchg
mov
out
xlat
outsb
lret
inc
ret
int
sti
xor
jno
sbb
jp
in
lock
and
xchg
cli
sbb
ja
bound
adc
fdivrl
shll
xchg
jbe
lret
cmp
push
inc
sbb
loop
mov
or
rclb
and
ret
mov
repz
sub
iret
xor
mov
shlb
sarb
jmp
hlt
hlt
xor
fmuls
mov
xchg
icebp
insb
mov
pushl
xor
loop
or
mov
or
mov
pop
hlt
sbb
mov
aad
push
addr16
sub
mov
test
icebp
xchg
lret
xchg
das
push
mov
or
daa
inc
test
std
jmp
call
mov
lds
xor
int3
mov
dec
sbb
sbb
pop
das
ret
sbbb
aad
icebp
cmp
mov
aaa
pop
mov
rclb
out
movsl
jg
mov
lret
inc
jp
pop
fxch
push
aam
pop
dec
mov
mov
ja
or
sbb
mov
insb
icebp
flds
adc
lcall
pop
jns
push
cld
dec
or
imul
cld
xchg
sub
out
fisttpl
inc
lods
addl
mov
push
loopne
sub
pop
mov
add
dec
sbb
mov
jecxz
xor
scas
cmpsl
mov
pop
rcrb
clc
xor
and
mov
les
sbb
jne
mulb
enter
imul
lea
sahf
pop
cmpsb
cs
inc
and
sub
fbld
jl
and
in
jns
js
mov
testb
and
or
lock
mov
xor
stos
mov
jge
test
int
mov
add
dec
stc
je
das
lods
dec
or
mov
addb
pop
sahf
fwait
sub
push
xchg
mov
test
sbb
insl
pop
nop
xchg
rclb
sti
inc
out
rcrb
dec
jnp
xchg
cmpsl
js
cli
mov
or
mov
call
mov
popa
jno
ret
int3
push
xor
outsl
outsl
xlat
fmuls
sub
dec
cmp
cli
cs
pushf
js
out
mov
cmp
mov
sub
pusha
clc
icebp
ret
cmpsl
or
rorb
lea
pop
or
aad
shlb
movsl
insl
jae
xchg
gs
inc
cltd
dec
stos
loopne
sub
outsl
jmp
cmpb
out
ja
call
cmpsb
nop
and
dec
jb
mov
dec
arpl
add
int3
jecxz
cmp
sbb
fisttpl
jmp
jnp
pop
jp
xchg
push
adc
scas
rcrb
lcall
gs
mov
dec
push
sub
jno
adc
xchg
scas
jns
fsubs
in
sbb
add
imul
dec
cmp
push
or
sub
outsb
mov
jle
fimuls
xlat
in
cmp
cwtl
inc
sub
add
insl
jb
add
in
push
push
in
lea
cld
pusha
stos
pusha
mov
cmp
add
xchg
cmp
clc
test
inc
xchg
fiadds
jmp
das
mov
inc
mov
push
xor
jo
push
mov
cmp
in
dec
cmp
je
mov
stos
popa
or
sub
popa
cltd
ret
sub
pop
inc
aad
jmp
shlb
or
fmul
ljmp
cmp
nop
xor
sub
outsb
add
xchg
push
es
mov
pop
imul
aas
sub
icebp
xchg
jmp
add
jne
add
mov
scas
adc
jae
sub
mov
push
xchg
mov
pop
or
cmc
push
fisttpll
cmp
mov
inc
mov
icebp
aas
mov
jl
test
dec
out
push
jno
add
or
mov
mov
fldl
hlt
cmpsb
es
or
stos
cld
sub
int
pop
dec
push
out
shrl
push
pop
push
test
add
mov
daa
mov
jge
insb
push
xchg
sbb
outsb
jg
and
test
cmpsb
push
fisubl
mov
inc
xchg
mov
outsb
or
sbb
push
js
out
or
mov
or
enter
add
hlt
test
inc
in
mov
adc
dec
sbb
and
fisttpl
or
mov
push
jb
pusha
pop
adc
xor
cmp
push
shrb
std
addb
mov
addr16
in
bound
in
pop
incl
mov
aaa
sbb
das
ret
dec
and
cmpl
pop
xor
rcl
jno
int
inc
add
mov
sub
inc
adc
and
fcoml
add
insl
xlat
aad
mov
inc
push
xlat
faddl
adc
js
test
mov
xchg
in
jae
out
sti
jg
mov
inc
sti
xor
lahf
imul
fistl
repnz
pop
dec
add
test
pop
xor
adc
jecxz
sbb
test
mov
cmp
and
inc
movsl
fsubrl
popa
scas
jg
arpl
fidivrl
mull
cmp
pop
sub
pop
shrb
mov
imul
cmp
sbb
pop
push
mov
iret
pop
dec
pop
jno
jno
add
inc
or
cld
mov
pop
push
add
add
in
stos
sub
xor
cwtl
xchg
lahf
and
clc
lret
jnp
jns,pn
mov
cmp
cmpsl
add
sbb
ja
jbe
loop
adc
sbb
cwtl
xchg
jbe
cli
xchg
shr
pop
loope
cmpsb
xchg
out
je
pop
mov
mov
in
pop
pop
lds
mov
fdivp
cmp
cmp
push
jne
inc
xchg
scas
cmp
jl
insb
inc
loop
push
mov
nop
cli
dec
sti
rcrl
xor
popa
rorb
push
sub
in
js
repz
xor
ja
cmp
test
dec
sub
jge
cmp
adc
and
out
sti
jge
ss
fstpl
add
mov
test
fimull
push
cmovae
int
rorb
sti
fisubrs
repz
negl
mov
mov
lret
mov
mov
sbb
mov
popf
ficompl
xchg
test
inc
es
mov
mov
or
imul
dec
in
jns
arpl
push
sub
jne
mov
lcall
dec
push
scas
push
push
adc
flds
ljmp
or
mov
mov
jle
mov
mov
xor
dec
aam
add
mov
out
popa
stos
cmp
shlb
add
repnz
gs
adc
out
cmp
loope
sbb
adc
out
out
and
testl
cmp
push
clc
cmp
sarl
mov
orl
popa
or
sahf
mov
shll
in
push
pop
addb
adc
call
mov
add
aam
adc
popa
or
sub
fwait
popf
sbb
dec
add
lret
push
push
daa
xchg
out
popa
stos
fdivr
mov
es
lcall
cmp
int
in
xchg
xchg
andl
leave
push
stos
jo
inc
je
outsl
adcb
and
inc
jb
bound
pop
xchg
push
adc
out
lods
cltd
add
stc
lock
cld
mov
stc
andl
cmp
pusha
fs
dec
sbb
push
mov
stos
jmp
orb
in
cmp
pop
mov
lcall
mov
out
into
or
jg
je
lcall
loope
pop
mov
mov
xchg
repz
mov
cmc
jne
loopne
and
cmpsb
xchg
mov
loope
push
movsl
lret
cli
ret
pop
mov
mov
lret
loop
pushf
jns
sti
rcl
daa
mov
scas
xor
pop
inc
push
adc
ljmp
scas
roll
xor
movsl
iret
div
pop
mov
jge
mov
cmpsb
mov
gs
dec
sti
xchg
icebp
bound
mov
pop
repz
mov
enter
mov
jo
pop
jp
xor
stos
push
pop
jge
mov
out
sub
cmp
cltd
aas
and
cmp
in
jle
lea
adc
or
inc
dec
loop
ds
push
cmpsl
sub
jge
dec
add
loop
ja
sub
out
dec
das
push
push
scas
push
les
push
rclb
mov
and
repnz
nop
add
or
or
in
loop
push
faddp
rcr
out
inc
aam
enter
fstl
ficomps
aam
push
mov
out
jns
pop
aam
or
sarb
jbe
test
test
dec
rcrb
xchg
pop
xor
inc
insb
ss
push
out
divl
mov
lret
adc
pushf
jle
fistl
and
add
cmp
and
les
jo
ljmp
dec
add
mov
push
in
mov
push
mov
pop
outsl
fidivs
sub
data16
inc
mov
arpl
mov
test
mov
lcall
inc
ret
aaa
xchg
pop
loop
cmc
lea
fs
xorb
bound
xchg
cmpsb
lock
repz
xchg
cld
sti
loop
jno
jmp
inc
adc
jae
cmp
fwait
jmp
xlat
mov
ficoml
push
pop
out
cmp
inc
pusha
xchg
fimull
and
fs
hlt
enter
mov
mov
fadds
mov
cmc
imul
daa
js
mov
nop
fdivr
stc
test
sbb
mov
mov
enter
loope
add
filds
or
add
daa
mov
dec
sub
pop
clc
insb
scas
cld
pop
cltd
int
in
dec
jge
jne
add
ljmp
fistps
loopne
or
data16
mov
mov
mov
sbb
fistl
add
or
jmp
jp
popf
or
push
inc
mov
jmp
rcrb
test
das
fstpl
pop
mov
rorl
dec
scas
out
sub
push
push
xchg
dec
das
popl
loope
fdivrs
pop
aad
inc
leave
mov
mov
mov
add
mov
add
xchg
xor
fbld
pop
loopne
fstpl
loopne
call
das
icebp
scas
xchg
fwait
ret
pop
aam
jnp
xor
sub
popa
xor
adc
cmp
add
loope
mov
stos
ds
push
loopne
xor
jbe
in
int
inc
scas
sbb
pop
aas
cmp
jne
or
jecxz
xlat
fxch
fsubp
jno
negb
jl
dec
cmp
xor
mov
sub
cwtl
inc
mov
fwait
xlat
push
sbb
mov
dec
inc
xor
sbb
movsl
lahf
or
jne
aad
sbb
ret
lods
xor
pxor
int
fsubrl
dec
sub
xchg
fldt
push
dec
pop
sbb
mov
sbb
ficomps
inc
push
sbb
sbb
jmp
add
push
leave
test
test
push
xor
fcompl
pop
push
aad
inc
jmp
and
ss
ss
pusha
lods
sub
xchg
mov
rcl
inc
call
mov
icebp
sub
cmp
jae
push
lods
xchg
movsb
cmp
dec
mov
mov
pop
inc
mov
gs
add
cmc
adc
xchg
mov
xor
fcoml
ret
ja
xchg
or
dec
test
xchg
xchg
mov
adc
pushf
mov
in
xlat
xchg
sub
or
aad
fwait
mov
sahf
mov
pushf
cmp
sarl
pop
inc
ljmp
loope
imul
cwtl
je
nop
mov
out
cmp
pop
dec
out
mov
lea
in
rclb
loope
xchg
lret
das
jp
orb
insl
xor
call
stos
adc
inc
outsb
leave
movb
mov
add
pushf
testb
inc
loop
mov
push
adc
aad
pop
push
jg
out
hlt
mov
inc
lcall
pop
sbb
jl
jecxz
inc
jnp
imul
and
in
mov
nop
cmp
adc
or
neg
jae
rcll
and
ret
mov
cmp
movsl
mov
popa
cltd
pusha
jp
jo
addr16
sub
mov
pop
add
mov
dec
std
out
xchg
ret
or
movsb
testl
ficoml
repz
pop
push
fwait
test
and
mov
mov
or
lea
inc
xor
ret
dec
in
mov
dec
inc
shll
sbb
xchg
aas
incl
out
pusha
int
dec
push
mov
stos
jo
adc
mov
dec
push
jae
xchg
push
push
push
push
out
push
incl
sub
lds
aad
jae
int
jle
cld
jns
pop
bound
adc
mov
fcompl
std
cmp
push
sbb
cltd
xchg
fiadds
mov
arpl
movsl
les
testb
shll
mov
xchg
dec
pusha
movsb
dec
jb
mov
mov
xor
std
sub
adc
jbe
aam
dec
xor
outsl
int
loopne
sbb
cmp
aas
add
add
push
mov
push
dec
andb
push
adc
pop
aaa
not
mov
sub
adc
ret
pop
sub
into
loope
repz
xchg
shlb
and
cmp
fbld
pop
jge
push
cld
jle
inc
xor
xor
jp
jp
popa
jns
ja
cli
iret
pusha
roll
add
jae
mov
lds
or
cmp
bound
sbb
cmpsb
call
lcall
jl
inc
pop
mov
mov
cmp
xchg
fstpl
lcall
and
cwtl
leave
jns
orl
and
pop
sbb
xchg
fsubp
js
mov
mov
sub
and
addr16
and
xor
into
mov
jp
stos
xor
lret
pop
fistps
je
and
cs
cltd
push
daa
fst
repnz
int3
lock
sub
mov
lret
icebp
lock
mov
jns
loope
out
pop
jge
lock
push
jp
ret
sbb
add
mov
lret
and
jno
ret
rclb
testb
inc
hlt
test
in
push
adc
mov
outsb
push
andb
iret
cmp
xchg
insl
pop
add
fbld
fistpl
jge
jp
mov
dec
pop
fs
imul
push
inc
jo
cli
cltd
push
and
inc
rorb
mov
and
mov
imulb
mov
jbe
xor
movsl
pop
push
adc
jae
test
cmc
mov
or
inc
pop
mov
cwtl
repz
cmpsl
divb
push
inc
push
mov
lret
mov
stc
fldcw
sbb
scas
or
into
cmp
or
bound
in
xlat
cmp
or
xchg
or
dec
push
push
leave
xchg
adc
sub
push
jno
add
stos
sbb
sub
cwtl
mov
in
push
mov
push
movsl
jns
cmp
test
repnz
fcmovu
pop
adc
hlt
in
in
leave
cmp
rcrl
mov
add
and
and
xor
fs
mov
or
or
mov
addr16
adc
mov
push
and
mov
stos
ret
sbb
mov
xlat
inc
cmpsb
dec
mov
add
xor
sub
lcall
and
andb
andl
dec
sbb
pop
push
fs
notb
lea
inc
xchg
add
pop
insl
in
lcall
js
mov
fnstenv
xor
lock
lods
xchg
fcmovb
and
sahf
jmp
inc
stc
xchg
jae
or
ret
jle
jb
xor
cmp
rcll
sahf
jns
push
xchg
sbb
mull
cmp
sub
imull
inc
push
das
pop
out
imul
push
loope
add
pop
adc
ret
imulb
jbe
mov
jns
out
push
and
cmpsl
mov
mov
fsub
push
sub
inc
fndisi(8087
mov
gs
cld
mov
mov
adc
ret
push
call
mov
dec
mov
or
dec
cmp
or
jo
dec
out
jno
shrb
mov
mov
add
mov
sub
addr16
add
jp
fisttpl
jecxz
out
cld
or
out
imul
fcoms
fsubl
mov
add
sti
scas
rcrl
mov
jnp
inc
sub
add
sub
mov
jle
dec
dec
out
movsb
ret
push
cmp
add
jb
imul
lret
jp
rorb
test
lret
inc
mov
movsl
push
jecxz
dec
and
push
xchg
daa
dec
xlat
hlt
ss
cmpb
jne
xor
jno
cltd
jle
sbb
rclb
push
out
ret
popa
ret
repnz
in
and
jo
es
xchg
jae
mov
xor
dec
jl
pop
dec
push
scas
adc
shrl
sarl
lret
movsb
int
repnz
fxch
push
xor
mov
rcll
into
lret
test
xor
stc
ljmp
bound
stos
mov
stos
pop
sti
adc
sub
imul
cld
leave
aam
push
or
or
mov
divl
mov
leave
and
jp
cs
jae
scas
cltd
mov
jl
lods
cmc
add
stos
sbb
les
repz
jg
cltd
lds
pop
mov
cmp
sbb
out
inc
and
cld
mov
inc
stc
out
mov
addb
lcall
hlt
mov
ficompl
push
mov
mov
adc
jae
add
in
mov
inc
test
xor
loope
loop
lret
cmp
cmpb
shlb
testb
push
rcrb
adc
cmp
insl
ja
sub
xor
pop
dec
mov
xor
dec
jbe
lds
pop
cmpxchg
cmp
lds
pop
mov
lcall
popa
push
lcall
adc
or
pop
mov
or
cmp
jecxz
shll
mov
daa
cmp
dec
loop
in
mov
jmp
mov
jb
adc
rcl
add
outsb
inc
sbb
icebp
fs
sbb
inc
and
inc
or
xchg
aad
fldl
lahf
aas
sub
in
dec
xor
xchg
fldl
out
scas
mov
mov
mov
dec
sub
in
xchg
lods
hlt
and
stc
mov
xor
fwait
mov
dec
icebp
pop
sub
pop
adc
lds
outsl
sbb
nop
push
adc
mov
enter
lods
inc
mov
lods
jle
fcompl
ret
mov
test
mov
repz
shll
shl
xchg
mov
mov
rcrb
cltd
daa
push
or
addr16
sbb
inc
enter
dec
mov
jns
icebp
mov
pop
inc
push
adc
cmp
fldl
mov
mov
sbb
jg
daa
xchg
pop
add
das
test
pop
sahf
into
loope
das
xor
push
mov
arpl
jecxz
add
dec
je
decb
stos
aaa
sub
or
mov
xor
jp
stc
jnp
mov
mov
sub
lahf
cmp
pop
mov
aad
xor
ret
mov
push
jnp
nop
mov
jge
pusha
mov
cmp
dec
xchg
fdivrs
sbb
xlat
xchg
es
sub
adc
das
mov
mov
gs
data16
or
mov
mov
gs
pcmpeqb
test
cltd
in
iret
in
int
add
jnp
iret
sbb
add
jo
adc
jno
jecxz
mov
mov
popf
pop
and
jle
mov
hlt
roll
imul
lret
xchg
out
das
and
aad
lock
xchg
mov
rcll
jb
adc
xchg
repz
adc
mov
outsb
out
jb
call
imul
push
mov
adc
sbb
cld
popa
cli
out
inc
adc
add
and
push
pop
jp
jb
sub
mov
hlt
outsb
adc
jl
gs
push
jbe
add
mov
fcmovnu
and
push
jle
and
test
aas
call
scas
movsl
mov
jmp
les
dec
and
gs
sub
pop
fsts
sbb
mov
movsl
xlat
negl
jnp
adc
test
push
mov
xor
fsubrl
imul
mov
cmpsb
mov
clts
scas
hlt
add
cmp
jne
adc
pop
push
lahf
sub
aaa
and
xchg
xchg
aam
fbld
mov
jns
gs
add
dec
idiv
rcr
mov
pop
xchg
adc
in
aam
rcr
sub
jecxz
cs
sbb
xor
cvtps2pi
inc
add
sbb
repz
and
hlt
jmp
in
pushl
add
lahf
stos
aam
test
aas
in
mov
jne
xchg
repz
ret
pop
xchg
sub
lcall
shll
jne
out
or
push
jge
imul
pop
mov
adc
out
dec
pop
xchg
arpl
inc
xor
out
add
into
lea
mov
adc
insb
dec
stos
jns
scas
scas
iret
es
stos
sub
mov
lods
nop
es
and
dec
idivl
jl
mov
aam
enter
mov
daa
pop
xor
mov
pusha
repz
add
dec
or
push
mov
js
jecxz
scas
int
fdivrl
lret
lret
lea
adc
test
sbb
repz
cmp
dec
outsb
dec
lods
cmp
mov
movsl
subl
les
add
jno
dec
jb
movsl
mov
xchg
imul
test
xor
popa
mov
mov
and
or
in
and
adc
fwait
into
push
push
dec
jns
popf
xor
jmp
jmp
repz
lock
adc
mov
xor
add
push
imul
xchg
insl
xor
xchg
rclb
xchg
es
fdivs
test
sub
arpl
push
aas
or
sub
addr16
and
nop
push
inc
jmp
rolb
push
pop
mov
sbb
in
push
mov
push
and
xchg
xlat
dec
loope
xor
and
push
outsl
or
aam
mov
mov
lahf
add
fwait
cmp
sub
cmpsl
push
enter
inc
mov
inc
testb
add
lcall
or
mov
iret
test
cmovns
int
dec
sub
divb
pop
mov
ja
cmp
aam
cmp
outsb
xchg
cmpsb
xor
or
mov
cmpsb
fucom
fidivl
adc
or
mov
add
xchg
adc
sbb
mov
and
shl
mov
adc
dec
mov
push
or
cmp
dec
xchg
lret
push
mov
fildll
lret
xlat
cltd
lahf
xchg
cmp
fistl
int3
popa
add
pop
fwait
jnp
cmp
mov
fsub
inc
pop
fs
xchg
cmp
pusha
outsl
push
fs
xchg
int3
aaa
out
adc
scas
int3
xchg
outsb
pop
adc
mov
repz
cmp
push
jo
leave
adc
pop
add
rorb
mov
add
popa
cmp
rclb
dec
adc
aaa
in
mov
push
insl
xchg
or
fisttpl
fiaddl
cmpsb
pop
mov
ret
inc
xchg
aas
je
sub
cs
out
adc
add
push
dec
add
incb
lods
jne
outsl
cmp
inc
dec
movsb
pusha
nop
fisttpl
adc
mov
rorl
mov
fwait
jo
std
sbb
adc
cmp
imul
in
les
dec
pop
xchg
mov
lcall
aam
jg
jecxz
mov
iret
jnp
pop
mov
sbb
je
iret
cmp
in
pop
cld
add
pop
lcall
data16
xchg
loop
push
repz
sti
mov
fsubrl
push
aam
push
or
sub
fsubrs
or
aas
pusha
push
arpl
jo
inc
inc
dec
fstl
jl
mov
dec
nop
int
mov
push
addr16
sbb
rcl
ja
push
xor
mov
pop
push
lcallw
jle
rcrl
cmp
in
and
test
cwtl
into
js
es
mov
movsb
out
inc
loope
les
into
xor
xor
pop
mov
push
fdivrl
dec
cmpsb
std
loopne
mov
mov
fidivrs
cmp
or
and
push
aas
jle
in
sahf
mov
cld
test
cmp
rclb
ret
cmp
inc
sub
jbe
inc
outsb
sbb
fbld
and
cld
cli
sub
out
cli
es
adc
insb
adc
adcl
pop
pop
mov
xchg
in
jg
js
xchg
jno
mov
jae
dec
push
inc
or
mov
inc
mov
or
xchg
pop
pop
fcoml
add
lret
and
sti
push
push
inc
mov
insl
movsl
add
xchg
popa
out
and
dec
dec
je
aam
dec
and
iret
outsl
mov
jbe
fmull
sbb
addr16
je
in
movsb
fsubs
adc
push
pop
cltd
cli
adc
imul
sbb
mov
fstpt
adc
mov
sbb
jae
leave
arpl
daa
sub
mov
or
cmp
lea
jb
mov
push
scas
sbb
repnz
pop
daa
sbb
xor
mov
inc
hlt
and
call
jo
cld
out
call
sbb
iret
sahf
not
movsb
mov
mov
jl
cmp
loopne
xorl
and
jg
lock
add
push
cmp
xchg
add
mov
imul
mov
repz
loope
xorl
gs
ja
dec
xor
ja
arpl
stos
mov
mov
mov
dec
cli
sbb
popa
mov
mov
mov
mov
and
ret
sar
sub
frstor
aas
popa
insl
mov
pop
jge
lock
movsb
push
pop
push
fdivp
dec
mov
jg
fwait
iret
gs
movb
inc
push
jmp
inc
mov
push
push
orb
xchg
xor
or
xchg
mov
mov
ds
arpl
xor
lods
mov
push
push
fwait
stos
outsb
es
dec
mov
mov
in
xchg
scas
cltd
pop
aad
ret
dec
and
test
mov
popa
loope
inc
sarb
inc
push
fsubr
loop
jmp
adc
pop
ja
mov
std
dec
daa
sahf
fdivp
pop
xor
cmp
dec
cltd
orl
xor
xchg
js
cs
xchg
std
mov
push
pusha
mov
xchg
adc
fadd
shlb
sbb
cmpb
shrl
icebp
pop
stos
aam
lret
scas
sub
sub
rcrl
dec
jmp
xlat
gs
sub
mov
mov
pop
or
lret
scas
mov
push
xchg
lret
lods
test
mov
lahf
mul
xchg
fidivs
inc
adc
and
outsl
xchg
das
shll
mov
push
sub
and
push
jne
stos
push
pop
xchg
sahf
outsb
and
arpl
jno
mov
mov
mov
enter
push
repz
out
aas
push
js
fstpt
fisttpl
fcoml
jmp
movsl
ror
and
lahf
imul
inc
mov
cmpsb
cmpsb
sbb
cmp
jae
dec
xlat
clc
push
jae
pusha
std
loop
sub
jp
xchg
mov
jnp
cs
scas
sbb
sub
adc
rcr
inc
jne
jge
adc
sub
jae
or
cld
or
test
test
fisubrl
jge
out
mov
shl
nop
push
pusha
pop
xchg
dec
out
pop
arpl
rclb
dec
scas
cmp
dec
inc
push
fucomp
out
jne
fstl
add
out
clc
in
jno
or
or
and
cli
inc
fiadds
push
mov
mov
inc
xchg
mov
cmp
jg
cwtl
popa
aad
jo
jle
fwait
sbb
in
sbb
jle
mov
xor
mov
out
std
imul
mov
xor
jbe
push
add
ficoml
setp
roll
pop
adc
mov
sbb
push
mov
pusha
push
push
cmp
xchg
movb
aaa
mov
cmp
outsl
cmp
sub
pop
pusha
pushfw
enter
sahf
sbb
fs
loope
push
dec
mov
mov
shll
add
testb
and
cli
xchg
mov
jge
std
leave
xchg
fimull
mov
test
push
push
sahf
push
xor
cmp
xor
xor
cltd
int
ljmp
sti
imull
jp
je
xor
sbb
xchg
or
arpl
adc
out
jbe
fimull
icebp
add
cmpsb
push
pop
add
fldcw
cmp
sub
into
sbb
cmpsl
dec
xchg
xor
mov
mov
lahf
sbb
cmp
jl
out
add
pop
push
shll
xchg
ds
and
pop
imul
sbb
mov
ds
push
stos
test
int3
push
mov
popf
pushf
adc
lds
ja
pop
stos
adc
icebp
ss
mov
repnz
mov
test
mov
icebp
fdivrs
pop
aaa
orb
mov
icebp
popa
bound
mov
mov
enter
dec
pop
imul
ret
sti
dec
mov
faddl
bound
pop
lock
jmp
imul
xor
sbb
push
and
and
test
push
into
fs
test
xor
outsl
leave
stos
in
xchg
shll
jle
imul
rcl
aam
imul
lahf
xchg
in
add
arpl
mov
cmpl
cmp
iret
fdivp
in
icebp
mov
xchg
push
mov
dec
pop
dec
inc
mov
rcll
aam
jae
stc
xchg
and
xchg
jno
rcll
addr16
mov
cmpsb
pop
cmp
xchg
lret
xor
rcrb
jne
cwtl
pop
pop
sbb
ret
mov
pop
mov
and
and
pushf
jmp
push
or
ret
jmp
shrl
inc
fisubl
orb
jno
push
lahf
pop
push
cmp
subl
repnz
enter
or
push
imul
js
ja
imul
push
inc
inc
cmp
out
rolb
popf
lahf
pop
inc
pop
test
nop
out
stos
and
dec
mov
push
and
mov
or
lret
js
mull
jp
sbb
and
mov
cmpsb
fildll
cmp
ret
mov
imul
sub
out
pop
push
call
sub
jbe
stos
jl
fld
xor
add
add
scas
sbb
neg
cmovle
sahf
xchg
dec
push
in
xor
daa
es
cmp
or
or
fnstenv
mov
aaa
in
enter
sbb
notl
pop
leave
lods
mov
mov
pop
inc
mov
ljmp
or
xchg
gs
ret
mov
inc
push
out
push
insb
pop
sbb
fisttpll
lods
xorl
dec
mov
xor
popf
subl
inc
jb
decb
cmp
mov
sub
divl
fidivs
jo
int
push
inc
push
mov
lret
loopne
rcrl
cmpsb
cmpsl
sahf
test
jo
iret
mov
mov
or
xor
dec
push
xor
mov
add
in
inc
pop
or
push
or
dec
mov
int
jbe
and
dec
inc
lret
sub
lret
xlat
inc
mov
push
jne
repnz
or
mov
jae
popa
mov
cmpsl
mov
test
cmpsl
push
mov
pop
sti
jecxz
loopne
mov
pop
pusha
inc
jno
inc
jb
mov
push
fistps
mov
and
pop
mov
push
aad
inc
push
mov
mov
or
fnstsw
sub
jle
fcoml
mov
add
lahf
outsl
push
xchg
or
cmp
mov
int3
ja
push
mov
cmpsb
scas
loope
outsb
loopne
dec
and
add
lahf
fucom
ds
cltd
push
push
jno
shl
roll
push
imul
call
mulb
adc
int
mov
pop
bound
jg
sub
into
lods
and
xchg
jae
fidivrs
ds
idivl
pusha
sub
fiadds
jne
and
sub
lods
mov
cmovb
pop
push
cmc
mov
popf
or
xor
pop
movsb
shrb
add
push
sub
cli
sti
clc
pop
aam
out
mov
jns
push
adc
xorl
rcll
pop
test
les
inc
xchg
push
cli
pop
and
jge
mov
jl
jnp
clc
enter
sbb
ret
lret
push
jmp
mov
or
xchg
push
sarb
sub
in
leave
dec
in
addb
mov
mov
jnp
jmp
das
xchg
fwait
imul
inc
sub
insb
test
add
arpl
lcall
adc
cmp
enter
enter
loopne
fucomp
insl
in
jmp
xchg
jmp
mov
jno
in
xor
cmpsb
inc
mov
or
mov
or
mov
loop
sub
sub
loop
sbb
jecxz
dec
adc
sbb
push
push
stc
xchg
pop
sub
jg
sub
fs
daa
jle
mov
movl
cmp
sarb
stos
test
movsl
verw
clc
pop
cmpb
sbb
mov
or
gs
dec
jns
and
xchg
jmp
ljmp
test
movsl
or
jne
push
cmpsb
jmp
mov
xor
mov
cmc
mov
test
and
and
xchg
rcll
add
sahf
mov
sbb
loop
xchg
sti
iret
fucom
xor
mov
cmovns
shrb
cmp
pop
aad
inc
ljmp
shl
daa
push
stos
lea
mov
out
lahf
cmc
scas
fwait
call
dec
into
mov
fs
or
mov
mov
jae
out
les
push
outsl
sbb
jno
cmpb
xor
sahf
dec
inc
xchg
ret
mov
mov
lock
stc
out
loop
mov
xor
mov
sub
xor
lret
pusha
adc
adcb
lods
pushl
movsb
mov
in
push
push
lcall
add
call
cltd
mov
push
and
sub
cwtl
xor
rolb
push
sbb
fwait
inc
push
and
ds
inc
ljmp
dec
mov
add
rorl
std
enter
enter
cmp
int
fst
xchg
ljmp
mov
pop
inc
test
ss
dec
mov
or
and
lods
sahf
xorb
cmpsb
subl
ds
mov
inc
sar
xchg
mov
mov
xchg
mov
dec
icebp
jnp
cmpsb
and
cmpsb
and
cmp
or
enter
and
inc
pusha
sub
xor
int3
lcall
fdivr
fistpl
adc
cld
cmp
mov
push
jbe
jecxz
push
lock
fwait
jo
test
sub
pop
out
cmp
mov
push
mov
adc
cld
adc
xchg
mov
popa
stc
push
push
or
ret
lock
cmp
cmp
add
outsb
lods
inc
bound
dec
movsb
out
call
add
add
adc
sub
test
jmp
jb
cmpsb
sub
push
dec
scas
es
vshufps
insl
lret
mov
imul
jl
cmp
outsl
dec
sbb
cmc
out
jle
pop
sub
into
sbb
add
cmp
xchg
enter
or
sti
adc
sbb
pusha
pushf
clc
imul
or
and
stos
mov
insl
cmp
pop
leave
sub
insb
inc
scas
cmp
cmpsb
jge
andb
in
repz
mov
pop
into
sub
popf
mov
enter
and
lock
push
dec
repnz
sbb
cmp
loopne
add
xchg
stos
push
jno
cmpsb
shll
and
jle
and
fisubs
xchg
jecxz
insb
in
xchg
outsb
les
mov
cmp
pop
fstps
out
xorb
std
aaa
aad
roll
add
sub
cmp
leave
mov
stc
pop
lret
jae
xchg
test
or
and
dec
test
and
and
push
lahf
imulb
es
jns
ret
mov
fstps
and
sbb
mov
dec
push
aam
jmp
sub
xchg
xor
aas
and
aas
popa
js
aad
or
lret
adc
stos
bound
mov
in
or
rorb
int3
sub
xchg
sub
push
rolb
clc
add
xchg
adc
mov
dec
fistpl
cmc
pop
into
fimuls
jmp
xchg
add
sahf
xor
push
mov
xor
push
xchg
and
jg
gs
incb
lock
cmp
xchg
lret
sub
xor
mov
dec
fwait
xorl
mov
sbb
mov
and
jl
ret
pop
push
or
push
mov
xchg
sub
aas
mov
lds
pushf
adc
and
ja
stos
inc
jg
inc
repz
shll
dec
fstpt
mov
daa
sub
hlt
loopne
cmc
insl
js
fildll
lds
xor
push
jno
push
test
cltd
cmpsl
repnz
mov
jmp
std
pop
mov
bound
or
xlat
hlt
inc
dec
sti
shl
dec
jle
ljmp
sub
adc
or
shrb
mov
pop
mov
in
mov
imul
ss
lret
icebp
test
les
stos
rcrl
xchg
push
hlt
push
dec
hlt
cmp
push
mov
js
cs
imul
es
jb
iret
lods
add
xchg
nop
cmp
or
add
aad
xlat
mov
mov
xor
or
pop
in
pop
je
sbb
and
cld
adcb
and
jge
xchg
pop
cmp
dec
fidivl
mov
jp
or
dec
xchg
xor
push
add
inc
shrl
cmpsl
insb
or
int3
lahf
int
test
or
ja
jecxz
aaa
sbb
mov
insl
mov
je
dec
jp
inc
les
sub
mov
or
inc
lods
loopne
add
xchg
sbb
pushf
fcoml
in
into
push
pop
xorb
jl
movsl
imul
jl
push
movsb
fisubl
loop
pop
je
repz
pop
lods
dec
or
pcmpeqd
and
mov
or
out
jmp
sbb
push
fbstp
repz
sysret
mov
xlat
mov
or
stos
inc
in
arpl
cld
fdivr
dec
ret
push
dec
mov
mov
and
aas
mov
in
lret
mov
xchg
pop
and
cmp
roll
out
add
or
fcoms
loopne
rcll
pop
pop
adc
xor
jge
adc
ds
loopne
stos
sub
push
jp
imul
ljmp
add
test
mov
ljmp
pop
ret
sbb
mov
xchg
out
mov
lahf
repnz
mov
xchg
dec
incl
xlat
cli
out
mov
push
les
pop
xchg
lret
jns
lcall
xchg
or
repnz
inc
clc
jmp
testb
pop
pop
out
ss
mov
addr16
mov
ret
in
cmpsb
pop
inc
sbb
jns
icebp
imul
xor
inc
mov
mov
mov
push
jnp
scas
insb
or
mov
scas
shrb
inc
dec
ljmp
fnsave
add
jmp
push
xchg
pop
push
mov
rcll
enter
or
push
fidivrl
push
xchg
scas
pusha
gs
scas
loope
adc
std
arpl
hlt
sbb
inc
add
sbb
pop
xlat
adc
pop
rclb
aaa
and
das
lahf
xchg
jle
bound
jecxz
push
mov
pusha
cltd
out
lahf
ja
xor
fwait
jmp
int3
ss
jmp
jb
jb
xor
xchg
outsb
mov
sbb
xchg
mov
stos
sahf
add
sarl
fwait
in
js
pop
xor
dec
test
push
or
add
movsl
ret
out
lods
jecxz
xor
sbb
addr16
cwtl
sbb
data16
dec
jo
addb
adc
rcrb
lcall
repnz
xlat
ficompl
loop
lcall
cmpsl
lods
push
xchg
jg
imul
lods
pushl
scas
mov
shl
out
dec
pop
mov
shrb
movsb
xchg
imul
decl
mov
in
in
jmp
iret
mov
call
xchg
in
pop
imul
mov
adcl
xchg
sbb
in
mov
lea
mov
sbb
imul
cmp
push
rorl
inc
int
pop
push
lock
mov
pushf
sahf
push
adc
adc
les
xchg
add
ret
push
jp
stos
sahf
pusha
ljmp
push
push
cmp
iret
mov
mov
mov
into
and
xchg
call
in
popf
cmp
shll
arpl
push
insb
add
mulb
inc
insb
inc
lds
sbb
fsubp
enter
xchg
xor
leave
cmp
or
add
lret
gs
test
add
lcall
sbb
sbb
cs
in
fisubrs
test
push
hlt
mov
or
inc
sub
fisubrl
push
xor
lds
pop
stos
cmp
dec
mov
es
cmp
or
call
jno
shl
mov
imul
jp
outsl
adc
push
push
inc
adc
inc
fmull
in
push
ret
and
ds
ljmp
jg
ret
xchg
cmpsb
cli
push
repz
fcompl
inc
push
dec
jns
popl
mov
cmp
lea
mov
push
ret
enter
mov
fnstsw
fwait
xor
outsb
shll
pop
andl
push
or
ret
xor
shr
fucom
mov
pop
fisttpll
subl
sbb
xchg
into
add
movsb
sbb
call
jbe
inc
pop
adc
jo
jecxz
mov
rcr
scas
adc
std
aad
mov
adc
jo
and
sahf
aad
inc
pop
mov
pop
ljmp
jae
or
sti
push
dec
add
sub
dec
dec
mov
push
mov
out
adc
stos
sbb
decb
cmp
cmpsl
push
and
pop
icebp
mov
mov
dec
hlt
push
ret
shr
cs
sub
lret
pop
inc
stos
cs
out
in
cld
xchg
mov
xchg
jecxz
and
lcall
inc
imul
sahf
ret
lods
shrb
out
dec
lock
adc
outsb
sbbl
hlt
jbe
pop
mov
in
xchg
xchg
mov
frstor
mov
cmpsl
xchg
fstps
ss
out
xor
fs
data16
repnz
pop
pop
inc
jns
sub
ja
lock
inc
cmpsb
dec
or
mov
popf
lods
xchg
push
mov
jnp
sbb
int
inc
je
lods
mov
daa
ss
nop
push
inc
subb
int
push
imul
xchg
gs
add
push
in
push
cmpb
inc
lret
daa
sbb
jae
cmpsb
push
push
ss
das
sbbb
nop
xchg
shrb
dec
jno
inc
mov
out
lds
clc
jl
lea
insb
popa
scas
jp
sub
shl
adc
xor
push
scas
movsl
mov
dec
pusha
in
lods
add
bound
xor
mov
push
std
dec
dec
addr16
sbb
shrb
adc
and
and
gs
adc
xchg
out
adc
or
dec
dec
call
cmp
ret
insl
roll
xor
iret
icebp
xchg
cmp
bound
in
mov
xor
roll
test
pop
adc
xchg
stc
std
filds
mov
mov
sbb
out
mov
jle
pop
mov
mov
jnp
push
daa
cmp
test
je
iret
jnp
cmpsb
push
inc
rcrl
ret
inc
in
add
xchg
stos
jne
sbb
pop
mov
sbb
nop
push
xor
repnz
dec
xor
ljmp
in
lods
or
sub
push
out
push
mov
pop
mov
dec
lret
mov
pusha
mov
jp
shr
mov
hlt
xchg
cmp
push
xor
dec
in
dec
bound
pop
push
jno
jae
sahf
cmpl
lret
mov
test
out
pusha
adc
into
or
push
xchg
pop
mov
push
jo
or
sbb
sub
jmp
xchg
adc
mov
daa
xor
mov
mov
xchg
add
mov
scas
xchg
pop
dec
repnz
mov
icebp
jno
inc
mov
cmp
dec
insb
push
popf
xchg
push
stos
out
xchg
mov
xor
and
sub
push
push
cmpb
scas
jp
lahf
icebp
lret
pop
stos
push
shll
xchg
mov
pop
dec
pop
ss
xor
addr16
movsb
push
sub
and
pop
iret
cmp
jle
sbb
testw
or
push
inc
movsl
cld
jg
sub
mov
outsb
lods
lret
fwait
jl
jmp
mov
pop
pusha
jmp
scas
or
push
xchg
push
mov
cmc
sbb
jo
mov
pop
mov
and
addr16
orb
pop
mov
adc
push
push
xchg
sbbb
dec
arpl
repnz
mov
in
ja
pop
cmp
divl
pop
imul
je
xchg
jecxz
fsub
test
xor
add
das
imul
frstor
scas
mov
mov
inc
or
js
fisttpll
lods
leave
outsb
inc
push
js
mov
pop
push
nop
lahf
cld
dec
or
and
movsl
sbb
pop
sub
pop
mov
aas
xor
pop
cmp
stos
mov
push
push
jmp
and
nop
jns
sbb
mov
pop
adc
dec
in
mov
sbb
jae
cmp
xor
dec
fnsave
push
call
sub
push
mov
xchg
mov
and
repnz
push
xorl
mov
push
pop
dec
incb
jecxz
ds
pop
add
repnz
inc
loopne
insl
mov
inc
ret
mov
ss
popa
lcall
or
pop
repnz
push
jns
xorb
stos
lods
ret
in
loope
shlb
aad
or
movsb
add
jnp
loopne
inc
push
push
cmpsl
mov
dec
loopne
xchg
sti
add
icebp
xchg
sub
xor
cld
mov
mov
icebp
fmul
jl
xor
jl
pop
cli
push
test
cmp
push
insl
add
adc
jnp
imul
mov
push
cli
loope
push
std
in
jns
stos
add
cs
jae
push
push
jno
pushf
push
arpl
mov
int
mov
pushf
in
jp
jge
cs
mov
notb
adc
and
clc
int3
pop
sar
and
out
fsubs
fsubp
inc
xchg
cwtl
nop
lahf
das
xchg
out
fdivrl
xor
movsb
mov
push
dec
inc
push
pop
aam
mov
ja
or
std
pushl
lcall
jl
or
test
inc
jmp
faddl
xchg
cmp
sub
inc
sbb
pushf
pushl
stc
adc
mov
pusha
in
leave
and
pop
jbe
insl
cmp
jle
mov
fwait
cmp
sub
ja
mov
dec
mov
orl
jno
fbstp
and
cmpsb
js
scas
stos
jmp
add
push
add
into
ret
out
fdivrp
xchg
cmp
and
das
scas
sub
ret
lea
into
fdivs
dec
and
repz
and
scas
leave
xchg
clc
mov
sahf
out
bswap
dec
jmp
decl
mov
mov
adc
ret
fmull
repnz
dec
adc
sti
xor
pop
and
fldl
test
mov
jne
out
fdivrl
add
or
fs
xchg
mov
pop
jp
xor
cmp
ret
addl
pushf
lock
rcr
fisttpll
insb
and
call
and
lea
push
push
sub
cs
aad
xor
inc
ret
push
shlb
aad
pop
ss
fiadds
sub
adc
shll
rorl
cmp
dec
mov
xor
mov
fisubs
cmc
jns
pop
or
ss
or
jne
xchg
cmpsb
les
ss
dec
ja
cmc
scas
clc
pop
or
mov
inc
sbb
stos
test
bts
mov
mov
xchg
popa
inc
hlt
call
and
outsb
and
negb
xchg
jb
mov
aad
jb
or
call
lock
mov
xor
xor
xchg
mov
fiaddl
rorb
sbb
xchg
dec
mov
repnz
dec
fidivs
sti
dec
mov
pop
lret
rclb
out
xchg
dec
rorl
test
ja
dec
push
in
inc
fldenv
imul
adc
std
xor
gs
inc
loope
inc
ficoms
xchg
cwtl
mov
pop
hlt
leave
push
push
push
push
jno
movsb
dec
sub
mov
mov
lds
sarb
and
sub
add
je
push
outsl
xor
jp
inc
adc
or
or
bnd
add
in
dec
and
inc
pop
push
jno
stos
push
mov
sbb
aad
xchg
jmp
mov
aaa
and
dec
and
flds
cmp
fidivs
mov
inc
sub
outsb
mov
push
icebp
mov
xchg
ret
inc
xchg
jns
inc
ret
add
ljmp
xor
insb
xorb
cmp
test
mov
fnstsw
xor
and
mov
das
fldt
push
outsb
scas
add
mov
jge
jno
dec
push
ljmp
inc
or
out
xchg
sub
in
pop
in
mov
jmp
ds
inc
fdivs
xchg
push
cwtl
pop
add
into
xchg
je
lahf
out
das
pop
out
inc
adc
repz
adc
jnp
sub
push
push
pop
xlat
pop
scas
int3
sbb
cmp
shlb
dec
imul
rcl
jo
sbb
xchg
ss
pop
aad
js
mov
fwait
popa
pop
push
sub
in
ret
aas
out
cmp
scas
js
test
xchg
ret
pop
adc
pop
imull
lahf
pop
mov
push
push
sbb
stos
mov
imul
mov
shll
cltd
jmp
lods
pop
mov
and
in
mov
and
fidivrs
push
fwait
clc
xor
cli
in
imulb
sub
or
jae
repz
mov
pop
inc
fdivrs
and
lods
dec
mov
cmp
jl
cwtl
mov
cmp
ljmp
jl
ds
fld
cli
sbb
mov
popa
fstps
xchg
les
push
mov
imul
testl
ljmp
shlb
xchg
or
lahf
lock
clc
pop
adcl
add
push
iret
loope
pop
out
cli
push
stos
sub
mov
je
repz
je
cld
jbe
sbb
pop
inc
cltd
std
aaa
jnp
dec
jmp
insl
mov
aas
std
sahf
loopne
iret
mov
push
and
std
dec
mov
dec
aad
or
cmpsb
cmp
outsl
and
mov
dec
cmpsb
lahf
dec
mov
insb
lahf
mov
stos
jns
jnp
xor
xlat
and
adc
sbb
inc
imul
mov
xchg
scas
mov
popa
pop
mov
mov
jl
jg
jae
stos
out
ss
lret
lea
lret
pop
ja
cltd
xor
adc
sub
add
frstor
cmc
xlat
leave
mov
imul
std
in
mov
imul
outsl
test
adc
dec
test
jecxz
pusha
imul
popa
ja
dec
lret
test
mov
mov
xchg
clc
pop
mov
xor
or
add
call
cmpsb
add
repnz
or
dec
ret
gs
sbb
cmp
add
cmp
mov
fistpll
pop
or
or
lods
sahf
mov
mov
jecxz
outsb
movsb
mov
lods
xchg
in
dec
subb
sub
mov
cmp
daa
popf
push
lea
push
xor
ss
les
dec
in
dec
xchg
sbb
iret
cmp
fnstsw
xor
repz
jnp
cmp
cmc
push
cltd
loope
xor
mov
in
inc
cmp
andb
lcall
mov
orl
int3
mov
xchg
pop
sbb
ret
subb
jmp
xchg
sahf
out
lea
pop
jecxz
into
mov
ficomps
adc
jo
fmul
loop
and
lahf
pop
xor
jecxz
test
movsb
notl
xchg
xorl
clc
mov
cld
aaa
mov
ret
scas
loopne
cld
aad
popl
xchg
test
mov
leave
aaa
push
pop
jg
pop
push
movsb
jne
clc
xor
xchg
xchg
fiaddl
iret
inc
xchg
decb
dec
mov
lds
and
or
jecxz
pop
inc
pusha
rolb
mov
sbbb
mov
loop
xchg
mov
imul
es
stos
mov
leave
iret
and
cmpsl
add
sub
sbb
fimuls
mov
movsl
pop
jp
insl
dec
rcrl
hlt
mov
cmp
sbb
inc
cmp
scas
add
or
fcoml
push
imul
push
mov
clc
icebp
sbb
cmc
mov
popf
cwtl
sub
movsb
popa
push
aas
pusha
add
sarl
dec
fnstsw
sub
jge
or
rorl
cmp
lods
les
gs
test
adc
data16
les
popa
adcl
popf
and
out
push
lea
popf
ja
push
fstps
jg
icebp
push
imulb
das
imul
push
nop
and
add
xchg
arpl
cwtl
scas
int
cmp
je
xor
pop
push
sub
arpl
add
mov
lods
fisttpll
mov
or
xchg
cmp
sub
xor
out
les
icebp
lahf
je
sub
ds
daa
lret
movb
xchg
ljmp
cmp
mov
mov
hlt
mov
nop
out
fnstsw
fimuls
es
xchg
cwtl
mov
in
dec
fs
fisttpll
add
fbstp
imul
mov
lea
outsl
fmull
outsb
inc
add
pop
mov
pusha
push
lret
pop
xchg
cmp
mov
inc
mov
push
pushf
xchg
jg
sbb
aam
sbb
push
bound
or
xchg
xchg
ret
sar
sti
lods
pop
mov
pop
pop
repz
add
mov
mov
push
fstl
mov
in
sub
mov
adc
mov
std
adc
das
cmpsl
jbe
lock
hlt
xor
add
push
jle
nop
in
cmp
lods
push
int
jbe
add
mov
in
jns
enter
or
and
jp
fbld
cltd
sbb
and
int
gs
xor
inc
add
sahf
lret
shll
mov
add
or
cmp
imul
or
leave
xchg
jae
das
cmc
sub
jge
and
sbb
call
push
jae
inc
mov
xchg
ja
out
inc
add
dec
sub
jge
sub
sbb
adc
cwtl
in
pop
and
bound
push
js
ficoms
dec
ljmp
mov
lahf
xor
inc
jl
push
adc
cmp
pusha
cmp
fistps
and
repnz
xchg
in
popf
cltd
cli
lret
jno
or
fiaddl
scas
into
xlat
mov
mov
jo
insl
or
mov
pop
sbb
aad
add
or
aaa
adc
xor
cmp
and
lds
sub
adc
push
int3
sbb
sub
insl
and
in
add
pop
repz
add
imul
sar
xchg
sbb
lds
test
pop
out
movsb
add
push
aaa
outsb
addl
push
dec
loope
lahf
jp
fdivrs
mov
cli
ljmp
int
adc
cmc
jecxz
in
andb
popf
outsl
inc
popa
fdiv
sbb
test
test
out
and
push
rcrl
push
pop
cmp
xchg
cmp
mov
lds
fistpl
dec
cmp
xchg
std
pop
ds
into
call
inc
out
jle
push
inc
arpl
inc
shrl
mov
fs
cmp
std
inc
mov
imul
dec
ljmp
adc
jmp
jbe
loopne
push
shrb
in
pop
subl
xor
jmp
push
mov
out
addl
adc
cmp
or
push
nop
test
inc
pop
and
add
inc
ja
inc
jmp
mov
cltd
test
xlat
int
fld
repnz
enter
je
and
xor
dec
inc
jecxz
xor
xchg
push
aaa
push
xchg
daa
bound
into
imul
shlb
jae
mov
mov
pushf
or
pusha
arpl
add
int
test
pop
lahf
aam
clc
loopne
stc
sub
out
mov
or
and
aam
sub
push
push
jg
lods
mov
insl
out
pushf
lcall
mov
jle
xorl
mulb
repz
movb
aaa
xor
loop
cmp
stos
loopne
jecxz
adc
ds
fwait
out
pop
push
stos
sbb
mov
pop
xchg
push
mov
in
sbb
flds
lcall
loope
mov
inc
repnz
adc
pusha
push
pushf
add
dec
inc
loop
sub
arpl
dec
loope
call
cs
add
flds
cmp
xchg
push
add
aad
stos
popf
cmp
pushl
sbb
lahf
out
xlat
jmp
lds
data16
gs
mov
jmp
out
out
dec
nop
push
or
mov
adc
ss
call
dec
inc
cmp
call
into
or
dec
out
cmpsb
test
jo
jg
es
repz
mov
pop
mov
sti
inc
loope
sub
mov
xor
pop
sbb
and
mov
lret
into
mov
push
sub
mov
cmp
out
pop
ja
jnp
sbbl
sub
lock
mov
in
cmp
scas
int
pusha
sub
mov
movsb
imul
ljmp
push
cs
mov
imul
push
lds
shrd
stos
fmuls
repnz
dec
outsb
nop
popa
pop
mov
sub
mov
fwait
imul
push
dec
jge
iret
xchg
cmp
adc
adc
jl
bound
in
jle
lea
or
aas
or
and
cs
dec
rol
pop
dec
and
jmp
adc
repz
jno
mov
or
fs
fnstsw
pop
pop
jns
lock
add
push
jno
lret
iret
push
adc
jp
jle
and
dec
out
movsl
jns
mov
les
jb
xchg
push
push
ja
jg
xor
push
adc
mov
sti
cmpsb
jl
push
mov
out
stos
add
push
lret
or
bound
jo
and
xchg
add
inc
mov
sbb
fcompl
pop
in
xor
addl
inc
gs
lret
ja
movsl
pop
pop
sbb
mov
pop
mov
cmp
inc
insl
dec
add
xchg
sbb
or
sub
jb
pusha
sbb
pop
sbb
jnp
test
mov
mov
out
jmp
mov
or
xor
lea
sub
push
mov
fsub
jp
aad
inc
xlat
cmp
xchg
das
data16
cmc
ret
mov
xor
repz
dec
mov
push
lea
or
std
jge
cmp
mov
scas
jb
dec
les
cmp
out
ds
cmc
and
aas
clc
cmp
jmp
mov
stos
adc
scas
lcall
adc
mov
ss
mov
out
in
js
ss
call
xchg
jb
pop
mov
test
mov
push
mov
cmp
lock
cmp
lods
jmp
sub
pushf
jbe
shll
out
inc
lcall
sub
mov
mov
lock
cmp
push
or
mov
and
fistpll
sbb
cltd
jnp
xor
jb
adc
leave
out
xchg
mov
and
cwtl
jl
or
pop
rolb
cmpsl
xor
mov
xchg
push
repz
xor
sub
gs
lock
test
and
bound
jno
or
addr16
adc
pop
gs
push
loopne
faddl
pop
aas
aam
push
xchg
aaa
cmp
mov
enter
dec
imul
mov
dec
test
lock
jno
lods
cmp
cwtl
fcoml
das
shll
dec
xorb
insl
cmp
cmp
nop
push
mov
mov
ffreep
insl
fistps
sti
adc
lret
cmp
adc
sub
adc
aas
jmp
sbb
xchg
mov
mov
add
adc
rcrb
cmovs
xchg
xlat
popf
cmpsb
xchg
cwtl
shrl
pop
pop
or
push
push
fisttpll
sbb
cs
lds
inc
fildl
imul
pop
mov
dec
shrl
jae
mov
cmp
adc
mov
outsb
lods
pop
mov
in
xor
cs
cmp
sub
dec
sbb
jmp
mov
jmp
outsl
orl
sub
inc
sbb
mov
daa
daa
push
inc
mov
int
movsl
inc
dec
or
xlat
inc
pushf
int
push
popf
mov
xchg
adc
std
push
push
das
xlat
dec
push
fnstenv
inc
movsb
hlt
out
fadds
in
jno
sarl
dec
xor
int
push
repz
adc
mov
and
in
inc
in
outsb
or
fnstenv
pop
in
dec
add
iret
mov
outsb
add
cmp
push
fidivrs
mov
stc
add
add
sbb
ljmp
jae
xchg
pop
sti
lea
pop
xchg
add
andl
out
inc
pusha
xchg
mov
sahf
push
je
stc
xchg
fs
iret
test
cmp
vmovmskps
mov
jmp
fisttpll
add
cld
rol
clc
jp
fldenv
jmp
sahf
aaa
dec
jge
inc
push
lds
leave
mov
cltd
or
cmp
add
js
in
mov
cltd
mov
sti
aaa
into
sarb
ds
stc
xorl
adc
lea
jecxz
jnp
and
lods
push
shl
fsubs
fs
arpl
add
dec
iret
xor
xor
cmp
int
js
push
sbb
shll
and
into
addl
pop
idivl
adc
mov
push
test
sub
or
xchg
sbb
or
aad
mov
inc
and
cltd
xchg
add
dec
test
adc
ds
add
lea
inc
inc
int3
movsl
out
push
test
add
enter
sub
in
cmp
add
sub
negb
mov
dec
ja
sti
mov
cmp
sti
dec
js
mov
push
adcb
scas
push
sub
nop
add
push
cmpb
cmp
fisttpl
xchg
es
mov
jecxz
js
inc
popa
xor
xchg
test
mov
shrl
add
add
lock
push
push
pushf
pop
in
jg
repz
dec
cmp
jnp
sub
cmpl
inc
out
test
fstpt
dec
mov
or
out
xor
mov
aad
adc
cwtl
iret
jne
lret
ja
sbbb
inc
jnp
xchg
pusha
aam
add
xlat
or
daa
push
or
inc
out
push
js
or
cmp
lahf
aaa
xor
jecxz
jle
and
xchg
or
fldl
sub
inc
mov
out
sbb
xchg
js
push
imul
pop
jb
mov
push
xor
aas
mov
jecxz
fs
sub
fsubr
push
mov
ja
xor
push
lods
in
or
sub
pop
xor
or
popa
jno
and
and
arpl
into
mov
out
or
mov
mov
jmp
sbb
jne
cmpsl
push
hlt
ret
outsl
ror
xor
pop
sbb
jle
jmp
pop
adc
repnz
mov
lret
push
jb
les
mov
inc
rclb
add
sbb
cmp
xor
mull
std
sub
xchg
push
imul
insl
adcl
arpl
dec
andb
cmp
fisttps
call
cwtl
jnp
je
out
sbb
clc
imul
adc
imul
add
call
ljmp
in
add
leave
mov
xchg
ljmp
in
xor
test
inc
incl
and
dec
mov
jnp
or
enter
fs
dec
in
adc
mov
andl
arpl
adc
and
sbb
adc
outsb
call
mov
jae
into
dec
xchg
xchg
popa
pop
dec
scas
out
push
lds
adc
aam
lcall
aad
add
xor
movl
fcoms
call
sarl
lcall
inc
jp
cmp
ror
pop
in
xchg
dec
scas
xchg
lods
xchg
je
rcll
mov
xorl
or
mov
xlat
aad
jne
adc
jle
test
push
cmpsl
in
in
loope
push
sub
xchg
mov
mov
dec
mov
add
xchg
fimull
movsl
mov
mov
push
pop
mov
pushl
dec
dec
sub
xor
lock
mov
in
xor
push
aad
sahf
adc
or
leave
mov
inc
jecxz
or
dec
add
jp
arpl
push
flds
data16
ja
jno
pop
adc
pushf
push
inc
sbb
mov
push
inc
cld
orb
inc
lret
sub
rcll
pop
sub
inc
jg
out
movsl
outsl
cld
push
jmp
add
hlt
ja
sbb
dec
fistpll
xchg
shrb
int3
imul
pop
push
insb
adc
sahf
xchg
test
js
cmp
in
cwtl
mov
int3
xchg
xchg
pop
pop
lock
emms
xchg
sarl
mov
sbb
add
daa
sub
dec
test
jb
xorb
sti
dec
or
or
adc
insb
mov
ret
cmp
push
xor
ficoms
xor
push
jle
push
cmpsb
daa
sub
lret
and
xor
push
mov
sarb
loop
sub
std
std
cmpsl
test
ds
sbb
les
andl
aad
jne
mov
pop
mov
xchg
ret
cmp
adc
dec
jnp
cmp
loop
mov
iret
sarl
cli
or
stc
jmp
and
clc
dec
cld
or
cmc
cld
add
lods
loope
dec
xchg
mov
jne
mov
je
add
or
mov
xor
insb
inc
push
jp
ja
jns
out
std
aam
stos
out
inc
sbb
push
repz
push
xor
movsb
dec
jle
ds
lods
push
cmp
fs
mov
inc
push
scas
adc
or
pusha
xchg
loopne
movsb
daa
adc
jg,pt
popa
repnz
shl
xchg
push
sarb
stc
cwtl
lock
xor
nop
bnd
test
pop
and
mov
jae
dec
xchg
push
inc
jmp
dec
daa
lcall
mov
ljmp
jne
arpl
test
push
adc
cmpsb
imulb
pop
adc
sub
lret
insb
add
out
js
ret
mov
xchg
outsl
movl
fcmovnu
adc
imul
ret
xchg
movsb
mov
push
ds
out
xor
sub
andl
sub
lods
lahf
xorb
xchg
test
aas
inc
push
pop
loop
and
test
mov
xchg
repz
adc
jbe
daa
rol
jae
cmpsb
add
inc
stos
pop
cmp
pushl
lret
bound
dec
dec
xchg
movsb
in
push
push
mov
mov
add
rcr
push
dec
aam
test
aaa
mov
sarb
fmul
jp
inc
xchg
scas
adc
add
fcmovnbe
loop
sbb
mov
sbb
pop
cmpsl
push
stos
xchg
adc
into
jne
jno
andb
decb
jecxz
out
sbb
mov
mov
subb
jbe
add
lret
mov
insl
or
cmp
stc
cli
mov
es
call
out
std
int3
dec
repz
add
push
fisubrl
push
pop
xorb
jecxz
adc
xor
xor
xchg
sti
aam
test
xor
pop
in
push
inc
mov
sti
mov
fisubrl
pusha
mov
testl
dec
leave
push
test
sbb
sbb
fisubrl
xchg
jbe
nop
xor
fs
and
push
mov
pushf
jne
stos
xor
push
xor
scas
in
iret
inc
jle
inc
paddb
roll
pop
fldt
test
sbb
les
into
dec
cmp
mov
pushf
lret
inc
xor
popf
jae
add
das
sbb
mov
repnz
ja
adc
xchg
xor
jge
jl
inc
push
outsl
movsb
scas
clc
cmp
xchg
in
lcall
fbstp
jae
mov
out
add
rcll
into
fmuls
mov
sbb
mov
push
mov
pushf
cld
arpl
add
mov
leave
stos
insl
mov
adc
lock
sbb
iret
and
cmpb
cmp
pop
jbe
jb
inc
scas
dec
push
cmp
xor
mov
jmp
mov
pop
push
and
lahf
mov
pop
repz
fmuls
xor
and
popaw
mov
jne
pushf
mov
iret
mov
lahf
fiaddl
sub
xlat
dec
fadds
cmp
test
pop
pop
fldenv
popa
xor
or
test
ljmp
les
dec
mov
push
adc
sbb
orl
pusha
addr16
push
cwtl
rcrl
clc
mov
pop
outsb
cmp
pop
cld
push
add
out
jle
and
dec
xchg
sub
fstpt
dec
iret
imul
or
xchg
ret
ret
scas
pop
setnp
aad
pop
jo
lea
fisttpl
out
mov
jg
sub
data16
sub
lret
lea
daa
fidivrl
movsl
sbb
dec
xor
mov
and
call
cs
cmpsl
inc
xor
xor
xlat
cmpsl
decb
or
jbe
pop
sbb
gs
daa
mov
ret
sub
ret
adc
jp
imul
ja
cwtl
testl
add
push
xchg
out
sbb
lods
icebp
or
inc
sbb
and
pop
xchg
lcall
aam
cli
scas
or
in
insl
jmp
push
lea
lds
sti
in
add
movups
cmpsb
mov
sbb
fwait
xor
aam
cltd
jno
push
stos
ficoml
cpuid
add
imul
fisttps
mov
fisttpl
pop
rcrb
xchg
sub
negb
mov
aaa
insb
out
jne
sti
inc
push
xor
sbb
mov
dec
scas
std
mov
hlt
fs
ljmp
stc
in
xchg
fisubl
shlb
push
imul
test
cld
mov
sbbb
loopne
dec
sub
movsb
add
popa
and
shl
xor
push
dec
xorb
mov
pop
rorb
cli
fnstsw
mov
mov
outsl
xchg
pop
and
cmp
rcrl
jp
dec
lahf
cltd
cld
jl
sbb
iret
insl
out
sub
jno
xor
adc
repnz
inc
stc
xchg
fs
adcl
xor
int
out
mov
test
pop
enter
outsl
inc
jg
imulb
push
push
rorb
cwtl
hlt
lret
mov
or
popa
in
pop
in
xorl
sbb
dec
push
jl
stos
out
xor
cmc
sti
or
add
fnsave
gs
sti
push
std
sub
adc
inc
ljmp
inc
cltd
add
inc
mov
pop
adc
xchg
insb
dec
mov
mov
repz
push
push
aas
pop
scas
sub
push
dec
sbb
cmp
push
push
sub
fsubr
cmpsl
cld
lahf
lcall
adc
push
loop
cmpsb
mov
pushf
mov
sbb
sub
push
cmp
sti
push
push
mov
sbb
sub
fldt
push
dec
xchg
jae
dec
gs
ds
jmp
popa
cmp
fisttps
pop
ja
add
xchg
mov
les
daa
andb
orl
cli
xorb
mov
in
xchg
pop
bswap
xor
int
cs
fwait
pop
xchg
es
xor
jecxz
inc
add
sbb
imul
xchg
sub
cmp
stc
sahf
cmp
in
xchg
mov
pop
incl
aam
ror
arpl
xchg
ffree
pop
aaa
mov
jae
sbb
push
dec
xchg
inc
addr16
and
nop
test
dec
cmp
arpl
out
cmpl
popaw
xchg
cmp
es
pop
xor
mov
test
imul
mov
mov
lods
in
jno
loope
shll
pushf
pop
jp
out
popa
mov
repz
in
scas
test
hlt
int
loopne
imul
insl
cwtl
lods
cmp
inc
mov
pushf
jle
lods
push
testl
mov
out
insb
sbb
out
and
push
sub
daa
adc
movsb
hlt
cmp
in
pop
or
jl
rcrl
int
popf
push
leave
pop
add
gs
or
push
mulb
ljmp
lret
add
arpl
push
cmp
jnp
bound
pop
mov
inc
mov
out
add
fsubrs
out
pop
subb
xchg
inc
cmp
xor
sbbl
adc
adc
test
ds
adc
cld
movl
into
inc
cld
nop
cltd
pushl
sbb
imul
data16
adc
jo
daa
sub
stc
mov
cltd
fiadds
xchg
xchg
push
push
fidivs
daa
aad
push
in
jbe
and
popf
mov
pusha
stos
out
cltd
pop
xchg
xor
and
sub
clc
out
xor
mov
cmp
out
loope
sti
adc
cli
dec
lods
cmp
fbld
movsb
fbld
and
nop
fildl
mov
push
mov
fldt
aam
sub
push
jg
add
sti
sub
sbb
scas
shr
insb
jns
jmp
xor
rorb
lea
aaa
insl
mov
xchg
mov
mov
push
jecxz
mov
push
cwtl
imul
inc
inc
mul
inc
loop
int3
push
mov
adc
call
scas
fsubrl
fnsave
std
adc
inc
popf
pop
punpckldq
loope
pop
jge
into
insb
xor
out
sbb
jl
mov
fsts
sub
or
cmc
mov
xor
leave
and
and
mov
and
ret
lret
add
jecxz
daa
mov
arpl
mov
inc
ret
mov
jp
sahf
inc
sbb
and
sbb
stc
test
lods
unpcklps
lock
dec
jb
ja
jnp
jno
fwait
mov
fcompl
leave
je
add
cmc
lahf
pop
mov
inc
gs
rol
scas
fs
out
adc
sti
mov
fisttps
pop
push
sbb
sub
jnp
enter
fs
jne
pop
shlb
dec
imul
orl
xor
jge,pn
shlb
pop
subl
lods
call
mov
shrb
inc
mov
in
or
cmpsb
inc
push
nop
int
and
out
rcrl
orb
dec
inc
decl
sti
xor
es
mov
dec
pop
dec
push
pop
jecxz
jge
stc
stos
das
xchg
repz
dec
int
dec
add
rorb
mov
fcoms
inc
cmp
cld
and
std
sbb
dec
lret
jmp
adc
cltd
test
jns
or
or
movsb
sub
xor
jno
push
fisubrs
les
mov
cmp
or
jno
dec
and
mov
lock
pushl
xor
jle
add
jg
cmp
fbstp
xchg
mov
adcl
cwtl
pop
leave
mov
shr
imul
fistps
or
and
pop
push
push
in
add
xor
add
out
xchg
loope
aad
mov
ljmp
jne
popf
lock
push
shl
loope
dec
jge
in
cli
push
testb
shrl
xchg
pop
test
dec
loop
mov
leave
rcll
and
cmp
push
and
les
inc
and
inc
mov
dec
push
lods
int
inc
shrb
popa
aad
stos
jg
andl
sbb
adc
push
daa
xchg
adc
mov
xchg
jae
push
daa
cwtl
loope
mov
adc
negb
inc
sub
pop
in
stos
jo
jns
repz
pop
mov
sub
pop
cmp
popf
daa
daa
clc
imul
cmpl
clc
ficoml
adc
pusha
and
adc
nopl
rcrb
jecxz
shlb
inc
lcall
mov
inc
pushf
fmull
imul
xor
lods
cmpsb
int
sti
cmc
lcall
movsl
mov
dec
pop
cmp
insl
ds
jne
icebp
movsl
sub
paddw
mov
mov
jp
xor
or
and
rcll
jmp
ret
and
test
call
or
movsb
cmc
xchg
jno
decb
dec
int3
call
adc
lds
popa
xor
loop
mov
push
mov
dec
fcom
test
daa
and
xchg
and
loopne
mov
addr16
loope
mov
inc
mov
lret
xchg
jg
inc
fdivl
pop
lock
and
cltd
mov
shll
mov
movb
mov
int3
or
push
pop
in
enter
dec
push
mov
cmp
cld
xor
xchg
aaa
lret
nop
push
addr16
fisttps
mov
gs
in
test
call
fs
test
gs
stos
push
mov
or
scas
lods
add
lock
xchg
xor
ret
xor
ss
or
mov
push
push
pusha
pop
loop
insb
sti
adc
iret
lds
or
dec
fs
mov
mov
es
mov
xor
dec
mov
mov
ss
xchg
sub
xchg
repz
sbb
cmp
jne
idivl
ret
mov
add
ret
cld
dec
imull
outsl
fimull
sahf
cmp
outsl
jle
fcmovnbe
sub
cli
or
call
lahf
stos
loop
push
add
pop
push
shlb
adc
daa
pop
aaa
mov
fwait
movsl
cs
lds
push
aas
push
test
jp
cmp
loopne
stos
mov
adc
bound
cltd
xor
jmp
jle
jnp
push
cmp
stc
mov
cmp
fnclex
aas
or
cmp
push
xorl
push
xchg
cmp
rcl
out
adc
pop
and
lock
ss
cmp
imul
into
mov
mov
fcomps
pop
mov
fs
mov
mov
test
mov
dec
negl
rcll
pusha
push
cmpsb
mov
addb
push
incb
pop
popa
mov
sub
jnp
push
push
icebp
push
rolb
out
xchg
lahf
daa
sbb
adc
xchg
cmp
imul
frstor
out
and
inc
cmp
cmp
jecxz
dec
rclb
mov
aaa
fwait
cmpsb
dec
je
rorb
aam
add
mov
orl
rorb
fbstp
mov
pop
out
mov
dec
iret
add
outsl
mov
sub
out
push
and
leave
cmp
inc
stos
sbb
adc
pop
shl
sub
stos
pop
test
jl
xchg
fadd
sarl
fcoms
pop
shl
and
pop
fsubrs
sub
mov
xchg
nop
imul
mov
jmp
popa
mov
jns
rolb
and
xchg
out
in
adc
push
scas
fmuls
sbb
cmp
sub
fiadds
pop
addr16
push
or
add
ret
rol
xchg
push
sbb
xor
fmuls
hlt
insb
sbb
push
xor
fmuls
xchg
sub
jp
jo
out
leave
scas
es
mov
data16
cmp
movsl
jp
hlt
mov
fisttps
scas
fwait
mov
notb
or
ret
adc
dec
mov
mov
cmpsl
jp
test
sti
cmp
pop
jno
in
xor
fimull
mov
cld
cmp
mov
dec
scas
cmpsb
xchg
pop
out
jl
das
inc
mov
sub
add
mov
or
mov
test
aam
jmp
decb
jle
bound
jle
dec
aad
push
daa
dec
out
jge
dec
dec
xor
inc
ss
lods
in
push
mov
xorl
cmp
sub
mov
sahf
arpl
or
enter
xchg
mov
in
and
scas
fstl
and
xchg
jmp
mov
iret
fsubs
cmp
push
jp
call
lock
push
jecxz
cmpsb
in
test
cmp
data16
rcrl
push
inc
add
pop
pop
fstl
sti
lods
stos
outsl
mov
mov
sub
mov
loope
mov
scas
mov
and
insl
dec
mov
out
inc
push
test
cmp
in
dec
mov
imul
imul
lret
mov
cmp
repz
cmp
sbb
xor
shll
ja
bound
push
xchg
xlat
sbb
shll
mov
insl
or
das
sub
inc
cmpb
frstor
push
cmp
dec
fucomip
movsb
stos
ja
jae
pop
nop
push
mov
pushf
es
mov
lcall
push
jnp
mov
cmpsb
ja
cltd
pop
push
push
in
pop
dec
xchg
sbb
popf
xor
sbb
stos
int3
lods
in
jge
sub
cmp
push
repnz
fcoml
mov
push
inc
int
push
repz
mov
and
push
ss
xchg
dec
repnz
jnp
enter
xor
xor
loope
test
push
dec
pop
popf
jns
sub
or
sub
pop
add
repnz
and
jmp
dec
dec
xor
push
outsb
outsl
pop
rclb
inc
dec
jl
pop
lds
in
xchg
lds
popa
push
bound
test
orl
lahf
xchg
push
sets
push
mov
addr16
push
aas
dec
in
push
popf
je
xchg
dec
std
bound
jmp
sub
je
xor
jno
fidivrl
sub
and
adc
cmp
out
pop
cmp
out
jae
hlt
test
stos
jae
add
out
loopne
and
fldcw
dec
repnz
jmp
xchg
xor
cwtl
cmp
push
push
mov
ficoml
cld
inc
mov
pushf
ret
sub
sbb
and
push
sbb
mov
sub
shrl
mov
adc
les
mov
jecxz
out
jae
aad
push
sbb
fstpt
cmp
and
loope
gs
add
outsb
out
addr16
jle
jno
fmull
cs
mov
lea
lods
push
mov
std
adcb
test
push
test
or
aad
xchg
add
rorb
xchg
sub
add
sti
xchg
push
jnp
jp
push
mov
shrl
andb
lahf
push
fwait
pop
xor
or
cwtl
mov
mov
xor
div
ljmp
lods
xchg
sub
inc
mov
not
adc
fwait
mov
test
push
lock
pop
xchg
mov
lds
push
push
mov
arpl
dec
mov
out
sub
cli
push
call
cmp
sub
movsl
mov
sbb
in
push
cmp
adc
test
cltd
test
push
xchg
cli
popa
je
mov
jae
stc
push
push
ljmp
or
test
fwait
subb
xor
cltd
sub
ret
cmp
jne
jo
pushf
out
insl
push
stos
lods
sti
jg
leave
aam
mov
sti
fwait
or
cmp
xchg
mov
je
mov
ljmp
lods
push
pop
inc
lds
iret
in
fwait
push
subl
adc
jge
lret
jnp
and
jg
lods
outsb
pop
adc
imul
mov
fwait
jno
mov
pop
pop
rol
les
lret
jg
cli
or
out
push
mov
clc
cmp
cmpsb
scas
repnz
mov
dec
inc
jns
das
notb
push
inc
add
mov
test
jl
stos
enter
iret
aaa
pushf
sub
lods
rcrl
ss
test
and
sub
and
xchg
mov
add
divb
scas
xlat
fs
cltd
jecxz
lret
pop
push
mov
hlt
or
mov
sti
jmp
cmp
mov
cs
outsb
jae
cmp
fmull
lods
mov
jb
mov
aam
pop
pusha
addl
out
xchg
nop
dec
jbe
xchg
into
cld
pop
cmp
lret
sbb
jno
mov
or
cmpsb
rolb
cltd
jecxz
scas
mov
ret
fwait
jb
cmc
xchg
test
loop
xchg
cli
cmpsl
push
add
push
dec
push
mov
outsl
mov
sbb
push
fsubrl
inc
inc
cmpsb
add
and
xchg
or
ja
mov
sahf
addb
push
cmpl
xchg
sbb
or
jo
mov
adc
aad
pop
cmc
rcrb
bound
imul
jg
shrb
pop
aas
jge
mov
scas
lcall
scas
xchg
cwtl
mov
mov
cmp
sub
adc
aad
cmpsb
or
inc
mov
ret
jne
cwtl
jnp
adc
xlat
jle
xchg
sbb
xor
scas
xorb
pop
dec
popa
add
sti
lahf
or
xor
test
cmp
cmpsl
sub
inc
in
dec
add
in
daa
xchg
lcall
rorl
pop
cvtdq2ps
hlt
and
jbe
aaa
jge
sub
and
sub
pop
mov
xlat
pushl
jg
push
stc
xor
lcall
decl
in
cld
test
ret
inc
arpl
dec
iret
pop
mov
shll
int3
dec
addb
xor
ja
subb
ret
jo
cmp
scas
push
mov
das
insb
adc
and
filds
sbb
aam
stos
pop
sbb
int3
fnstsw
xor
push
mov
adc
lahf
iret
sbb
and
js
and
fst
icebp
pop
filds
push
loop
mov
push
das
vpsrld
enter
sub
cmc
push
lss
fistpll
push
daa
arpl
and
jns
test
cmp
imul
cmp
dec
repnz
push
add
cmc
nop
mov
mov
cld
add
jge
pop
lret
imul
jbe
sbb
outsb
fldenv
inc
mov
mov
lds
xchg
cwtl
cmp
dec
push
cwtl
xchg
adc
pop
pop
xor
mov
ds
out
or
daa
inc
ret
jae
sub
aas
sbb
adc
clc
mov
mov
lds
aaa
iret
xor
jae
ja
cmp
or
mov
push
jl
fs
mov
ror
dec
adc
fcoml
xchg
scas
jle
and
fcom
loopne
mov
stos
sti
lahf
xchg
lock
inc
outsl
inc
jge
jl
mov
aam
addb
adc
fdiv
stos
insb
sbb
sub
push
sbb
push
loope
add
imul
out
jle
add
cmp
cltd
xchg
pop
push
mov
sbbb
jle
testb
arpl
sarb
mov
pop
dec
pop
stc
dec
pop
enter
out
adc
enter
and
shrb
aas
jo
addb
rclb
jo
mov
add
push
jmp
and
pushw
mov
inc
cli
mov
push
fisttpll
scas
test
inc
xor
jmp
mov
jns
fidivl
cmp
sbbl
jo
pop
fsubr
mov
adc
mov
rclb
out
pop
xchg
ds
stos
xchg
mov
add
pop
mov
es
push
push
icebp
adc
jmp
cld
fs
clc
or
pop
lds
call
fisttps
cmpsl
mov
fisubl
notb
push
cli
nop
stos
xchg
loop
lea
push
fs
dec
pop
icebp
push
loopew
sbb
leave
jno
dec
clc
aas
adc
sub
es
fadd
adc
subb
mov
sub
mov
fcomps
dec
cmp
aas
jge
sbb
bound
test
push
adcl
cmp
mov
addr16
and
mov
jecxz
add
mov
push
push
sbb
scas
xchg
or
dec
popf
shr
and
xchg
in
or
mov
add
fsubp
cs
dec
loop
scas
mov
loop
js
fmul
insb
sbb
adc
stos
and
add
push
sub
jge
fstps
xor
aad
icebp
inc
aad
xor
mov
lock
ficoml
lcall
jmp
adc
fidivl
rorb
out
mov
gs
lods
mov
test
mov
dec
mov
stos
xchg
pop
mov
mov
ficomps
repz
and
addr16
shl
jp
scas
sub
mov
dec
in
out
and
push
pop
addb
inc
sub
in
cmc
loope
cmc
ja
sbb
pusha
push
aam
mov
push
ficoms
leave
test
daa
or
xor
imul
andl
ja
mov
and
xor
pop
add
es
pop
add
inc
shr
xchg
mov
mov
repz
imul
ret
cmp
sub
out
sub
xor
add
gs
loope
push
pop
or
and
cmpsl
push
cmp
movsl
lahf
or
js
stos
inc
jae
cmp
or
ds
mov
dec
cmc
mov
mov
inc
cmp
jg
inc
mov
icebp
dec
push
cmpsb
les
sbb
dec
cmp
mov
adc
mov
js
inc
pop
das
jno
test
test
push
sbb
push
divb
inc
lock
and
push
sbb
lock
std
mov
pusha
les
mov
cmpxchg
pop
in
sbb
fwait
jg
dec
rcr
push
ss
jecxz
iret
and
movsl
cmp
push
adc
mov
jl
pop
xor
dec
mov
jbe
dec
cmpsb
mov
je
sub
pop
lods
dec
cmpsl
arpl
in
mov
xor
xor
outsb
pop
jo
xor
mov
test
pop
lock
or
stos
push
inc
fstpt
adc
out
shrl
jae
push
clc
test
dec
mov
dec
cmpsb
jg
mov
sub
arpl
out
int3
lea
imul
test
mov
push
outsb
in
hlt
push
fdivl
fsts
rcrb
pusha
mov
push
inc
daa
push
data16
cli
xchg
cmp
xor
sahf
lret
jo
xchg
fnsave
sub
cmc
insl
test
dec
out
loopne
enter
mov
fimuls
and
movsl
push
cmp
gs
mov
loop
push
mov
movb
and
cmp
cli
add
and
lret
mov
enter
dec
jbe
jge
imul
sahf
pop
mov
xor
rcll
or
and
add
jecxz
or
sub
jno
fidivrl
pop
call
jo
jo
dec
out
sbbb
push
cmp
mov
fcoml
adc
mov
or
add
xor
pop
out
nop
mov
push
ljmp
mov
jl
dec
in
xor
pop
bound
cmp
push
inc
xchg
js
mov
sti
pop
xchg
adc
hlt
insl
jb
sarl
aas
or
jbe
adc
sub
jle
das
mov
lea
enter
dec
fsubrl
in
jb
into
cltd
inc
inc
test
jmp
pop
mov
cli
pop
cmc
ja
dec
xchg
test
stos
loope
pop
sub
negl
pop
or
loop
xchg
adc
mov
je
repnz
push
sub
subb
xchg
lock
pop
loop
push
ljmp
pop
icebp
popa
fwait
sub
leave
or
aaa
jbe
lods
orb
mov
mov
mov
and
loop
loopne
int
imull
add
lcall
inc
mov
pop
sub
dec
sbb
adc
sarl
js
jns
addr16
pop
lret
jae
mov
mov
pushf
js
cmp
ffreep
icebp
xor
cmp
pop
pop
sbb
sub
lods
pop
inc
outsb
adc
loopne
xor
ficomps
movsb
adc
and
pop
cmc
jnp
pop
jg
xchg
rcll
test
xor
cmpsb
or
pop
mov
mov
xor
call
out
cmp
and
cmp
jl
outsb
or
add
ja
push
sarb
and
flds
adc
imull
dec
stos
add
jmp
pop
insb
outsb
mov
cmpsb
push
mov
insb
fwait
add
pop
mov
push
dec
mov
jne
movsb
in
lods
push
xchg
data16
jb
xor
int3
pop
pushf
xorl
mov
xlat
repnz
sahf
sarl
jne
jmp
dec
lds
add
ljmp
jmp
shlb
mov
lret
lea
xor
maxps
xchg
jmp
je
add
inc
or
rcl
shrb
in
and
push
xchg
xchg
pop
pop
jl
jbe
jo
mov
or
mov
cs
cmpsb
movsl
push
cmp
dec
jecxz
xlat
ret
test
mov
mov
lahf
mov
cld
ret
out
adc
cltd
insl
repz
clc
add
movsb
ja
test
cli
bound
jl
enter
jb
cld
add
dec
adc
mov
pop
out
xchg
stos
push
in
aam
out
out
dec
sbb
cmp
mov
or
inc
es
arpl
jno
sub
cmp
ds
push
dec
inc
inc
aam
mov
jb
out
xchg
int
mov
fwait
mov
push
hlt
adc
and
mov
mov
push
addb
cld
push
andl
inc
in
lret
inc
decl
xchg
add
inc
or
pop
js
pushf
push
mov
sar
dec
xor
pop
pop
pop
leave
aad
sub
popf
add
dec
cmc
push
xor
call
jge
push
xlat
mov
and
into
aam
dec
xchg
imulb
rorl
pop
je
mov
hlt
and
push
pop
jp
outsb
scas
push
into
popf
es
sub
mov
sbb
lods
stos
dec
mov
cmpsl
xor
jnp
sbb
bnd
sub
inc
or
jnp
subl
ja
pop
cmp
sub
jle
mov
das
inc
mov
nop
sbb
scas
dec
call
xchg
sbb
testb
and
daa
insl
jle
in
arpl
and
repnz
mov
addr16
xor
out
clc
or
cmpps
pop
imul
cmp
call
xchg
xchg
sbb
shrl
jb
push
ret
repz
test
std
inc
jge
xchg
mov
pop
mov
mov
cmc
sarb
xchg
jp
insl
iret
jo
insl
and
lcall
add
mov
fildl
mov
repnz
cwtl
xor
mov
push
pop
daa
loopne
imul
sub
xchg
loope
mov
push
stc
mov
lods
mov
sub
mov
lret
fwait
aaa
test
push
or
fucomip
and
shll
xor
mov
call
fs
mov
push
xchg
push
xchg
mov
ja
std
cmpsb
push
imul
divl
xrelease
aam
outsb
clc
push
dec
les
and
push
lds
in
movsb
outsb
jge
repz
out
adc
sbb
stc
je
rcr
xor
subl
orl
add
add
fidivl
repnz
test
stos
fsubrl
mov
adc
bnd
cmp
pop
and
mov
insl
jp
scas
add
add
adc
jmp
roll
mov
outsb
sar
scas
cs
inc
test
inc
stc
vpshlq
sub
add
sbb
cli
mov
jmp
sbb
cmpsb
in
loopne
push
add
xor
xlat
enter
cs
dec
mov
hlt
mov
sub
sub
cld
inc
popa
dec
push
mov
dec
pcmpgtd
jns
gs
push
ja
xor
dec
jge
push
outsb
stc
popa
push
outsb
rcll
pushf
inc
mov
pop
jb
sbb
adc
jle
push
fdivl
mov
fdivl
mov
pusha
out
mov
inc
inc
xchg
stos
arpl
cmp
dec
mov
mov
ljmp
mov
mov
add
adcb
push
xchg
or
fcmovbe
mov
jp
out
push
popa
or
out
xchg
mov
popf
aam
cmp
xor
jecxz
sbb
cmp
add
sarl
aas
xchg
js
jno
iret
clc
test
mov
sub
or
fs
repnz
mov
xchg
xor
enter
adc
xchg
call
adc
jmp
mov
cltd
mov
mov
xor
jnp
dec
ficompl
ror
pop
inc
mov
movsb
bound
subl
outsl
in
inc
testb
push
in
cmpsb
adc
iret
jo
icebp
stos
cld
std
std
movsl
dec
mov
fadds
ficoml
nop
xor
inc
push
repnz
mov
lret
rcll
mov
jnp
rclb
cmpsl
stos
cmp
push
fmul
lods
adc
inc
out
insl
out
hlt
arpl
leave
jl
jne
mov
int
das
inc
fmull
xor
mov
push
int
sbb
pusha
adc
aaa
in
jle
in
jne
push
adc
sub
xchg
ret
dec
inc
mov
int
add
jge
dec
jmp
pop
lock
aad
add
mov
rorb
cmc
int3
cmp
xchg
insl
lods
rclb
xchg
jae
xchg
xchg
inc
ret
cmp
mov
mov
ja
jb
fistpl
cmp
in
jnp
dec
mov
pop
mov
jbe
xor
adc
subl
fwait
jp
mov
movsb
shlb
mov
icebp
pop
pop
in
and
lock
in
dec
mov
insb
sarl
xchg
add
rcrl
lret
mov
clc
adc
imul
sbb
dec
push
or
repz
scas
mov
repz
xor
jo
stc
int
sbb
jge
push
aas
iret
xlat
adc
lret
mov
aaa
pop
lods
mov
and
sbb
xor
mov
daa
and
fs
stc
test
scas
loop
mov
and
rorb
pop
test
jg
in
repnz
jge
in
cmp
and
test
data16
je
and
cltd
inc
or
or
and
in
shlb
mov
mov
loope
dec
cmpsb
loope
cmpsb
cmp
sbb
pop
sub
or
push
push
ss
xor
in
ja
xor
repz
cmp
mov
mov
mov
arpl
adc
fsubrs
dec
xor
pushf
mov
push
xchg
and
mov
into
push
aad
pop
push
lock
shlb
hlt
push
sti
push
ret
mov
push
movsb
sub
jmp
mov
sub
xchg
filds
cmpsb
fists
and
mov
mov
dec
jae
pop
gs
cmp
test
or
jo
or
cmp
fwait
popa
pop
test
adc
sub
xchg
insl
xchg
dec
jae
mov
xor
pop
pop
arpl
xchg
repnz
aaa
insb
rorl
jo
cmp
pop
lods
sbb
xchg
mov
aam
push
dec
pop
psubb
push
fnstcw
add
sbb
sbb
xchg
aad
jg
sub
out
in
dec
jmp
enter
jle
hlt
pop
ja
pop
mov
movsl
xchg
in
test
loope
jg
in
ss
rcrb
pop
je
jg
cmp
stos
xchg
std
mov
jmp
jno
mov
std
mov
mov
push
mov
mov
push
cmp
cmp
push
jno
pop
inc
add
aas
jne
hlt
sbb
sbb
inc
jno
loop
add
loope
push
ljmp
or
sti
pop
cmpsl
inc
in
pop
gs
shlb
cwtl
movsb
out
mov
mov
mov
dec
adc
loopne
cmp
je
orb
cmp
push
jb
out
test
imul
out
adc
hlt
push
out
or
dec
mov
sahf
push
add
or
stos
push
std
test
movsb
and
inc
iret
bound
mov
clc
jl
movsl
fsubrp
daa
fstl
xchg
arpl
sbb
inc
fcmovnu
inc
mov
mov
or
mov
lcall
loopne
sub
add
cmp
outsb
aas
imul
pop
and
and
mov
sbb
test
sbb
fs
mov
jb
jnp
pop
jmp
out
aam
ret
stos
lods
pop
dec
jp
and
xchg
mov
jns
mov
ljmp
outsb
xor
xchg
std
insl
sub
adc
jge
shl
sub
mov
mov
push
xlat
sbb
xor
mov
pop
popf
dec
fstpt
or
in
enter
int3
sbb
pop
cmp
repz
movsb
mov
sub
js
insb
pop
lods
inc
push
enter
mov
call
loop
sbb
push
or
adc
std
stc
daa
dec
mov
and
sbb
add
push
ret
add
cs
push
cmp
stos
hlt
adcb
iret
mov
push
inc
dec
pop
addr16
xlat
cs
sbb
xor
imull
sub
mov
sub
sub
sbb
sahf
jl
jl
or
sar
mov
dec
sub
xchg
mov
sub
cmc
lret
push
push
lock
pop
std
ss
mov
xor
in
pop
jne
push
dec
stos
push
xor
jmp
inc
mov
mov
xlat
push
std
imul
int3
pop
mov
mov
mov
fbstp
lds
xchg
loop
inc
mov
cmp
add
cmp
pop
movsb
mov
mov
lcall
aas
push
push
pop
js
push
in
xor
shll
mov
fldcw
sbb
shl
sti
divl
lahf
adc
mov
in
adc
mov
ja
lock
mov
cmc
clc
ljmpw
push
jp
sub
push
ja
xchg
cmp
adc
pop
pop
dec
and
int
xchg
call
and
push
cmp
sub
loop
sub
mov
cltd
je
xor
xchg
ja
lods
repnz
push
bound
leave
pop
aaa
lds
push
push
cmp
fldt
lock
sbb
inc
sbb
xor
adc
add
or
pusha
push
andl
int3
popa
js
sbb
rcll
mov
push
loop
push
mov
je
jne
lock
mov
jnp
fsubrp
xchg
add
out
movsb
rcr
mov
jbe
jmp
mov
mov
jmp
icebp
mov
out
loop
pop
in
cmp
sub
pop
push
scas
fcmovnb
jl
into
xchg
or
sub
addr16
push
ret
insl
in
sub
in
lea
rorb
mov
jle
and
jbe
or
clc
popf
in
into
dec
leave
xor
dec
xchg
shrl
out
mov
mov
xchg
int3
mov
andl
xchg
push
cmp
adc
jge
add
xor
leave
jbe
cmp
movsb
scas
in
lcall
out
sub
jp
jp
cmp
or
inc
in
jne
add
pop
add
mov
std
add
loop
jne
jo
add
test
pop
pop
leave
push
cmp
inc
lret
sbb
test
add
sbb
pop
pop
and
icebp
mov
mov
lods
shll
sti
mov
jns
lock
xlat
outsb
iret
icebp
lods
xchg
adc
push
cli
mov
xchg
icebp
or
push
mov
imul
insl
xor
jo
in
imul
scas
pop
sbb
xor
jne
xchg
fidivrs
std
mov
sub
jp
xchg
fisubl
sbb
push
or
xchg
jp
jp
dec
hlt
cmp
dec
pop
mov
in
push
fstp
adc
sbb
mov
cmpsb
adc
roll
leave
bound
jb
cwtl
aad
xchg
leave
cmp
cmova
xor
add
mov
sbb
xchg
push
lahf
es
movsl
out
mov
mov
scas
and
test
inc
push
jp
loopne
cmp
mov
ja
push
fmuls
shll
add
mov
adc
cmpsb
lds
js
or
bound
sbb
iret
xchg
lds
sub
mov
cmc
mov
xchg
shrl
add
cmp
addr16
jg
test
jmp
dec
and
out
xor
mov
scas
adc
inc
ret
fwait
lods
add
mov
xor
mov
pusha
cmp
push
imul
jbe
lods
cmp
or
xor
movsb
push
inc
popa
daa
imul
xchg
das
jle
in
mov
popf
scas
mov
sub
aam
ds
stc
jne
mov
add
mov
cmp
out
mov
mov
hlt
mov
inc
imul
pushf
ds
pop
nop
sbb
xchg
out
inc
inc
xor
pop
out
imul
xlat
cld
lret
jl
sub
or
fstl
xchg
out
cltd
mov
shll
in
popf
lret
inc
jle
mov
jle
sbb
mov
sbb
lods
jle
dec
adc
cs
xor
xchg
scas
sbb
cmc
cwtl
loop
push
or
push
xchg
stos
imul
aaa
inc
xor
mov
or
loop
adc
in
xchg
pop
mov
jo
clc
adc
mov
rorl
xchg
test
popa
lret
stos
inc
daa
add
pop
sbbb
fsub
dec
ljmp
nop
mov
jecxz
xchg
les
push
aam
aad
insl
jno
jl
mov
sahf
outsl
or
flds
add
inc
jecxz
movsl
rcll
jo
insb
icebp
les
cs
mov
lahf
xor
mov
cmp
add
jno
jmp
sbb
dec
mov
fbld
cmp
jecxz
jne
and
mov
out
xor
adc
lds
fwait
mov
cmpsl
cmp
leave
add
adc
pop
cmp
imul
xchg
lods
and
cwtl
nop
pop
call
cs
mov
adc
or
rcrb
push
call
and
ret
sbb
cmp
ret
cwtl
shr
xor
or
ds
roll
repnz
xor
scas
lret
jo
jno
loop
rcrb
mov
pop
jmp
xor
adc
sbb
ret
adc
addl
xchg
andl
xchg
xor
add
mov
inc
push
stc
dec
sub
repz
lcall
jmp
sub
push
test
lcall
rorl
pop
jnp
inc
xchg
pop
mov
xchg
stos
out
adc
hlt
mov
dec
mov
ret
inc
data16
cmc
fisttpl
ret
adcb
les
push
insb
lret
mov
xor
cli
mov
xor
lds
and
mov
xchg
out
dec
mov
cmp
or
mov
movsb
pop
dec
mov
popa
mov
inc
in
push
test
jge
xchg
push
shl
shl
jg
stos
sbb
ja
sub
push
jge
andl
ljmp
mov
pop
push
jne
int
dec
jmp
dec
xchg
dec
sbb
outsl
cwtl
push
test
add
divl
or
cs
sub
xchg
outsl
popa
xchg
inc
sub
std
shrb
inc
or
clc
inc
ret
aaa
popf
cmc
fnstsw
push
fs
sub
data16
jmp
adc
daa
add
bound
mov
sbb
adc
rol
cltd
lcall
fadds
dec
dec
mov
and
xor
mov
and
das
mov
mov
cltd
dec
sbb
adc
and
mov
mov
push
xchg
sbb
sub
cs
enter
rolb
mov
enter
pushf
fiaddl
das
sub
mov
and
outsl
nop
xchg
ret
sbb
iret
das
loopne
sbb
inc
ret
hlt
test
fmulp
scas
mov
xor
sbb
test
sbb
out
push
dec
mov
cmc
pop
adc
pop
jl
or
out
mov
fisttpll
rcrl
fsubrp
pop
std
add
push
xchg
jge
bound
mov
lret
cltd
mov
dec
push
and
mov
outsb
push
rol
mov
inc
cli
dec
movd
push
push
addr16
mov
jae
dec
xor
xlat
adc
popa
xchg
xlat
cmp
sub
sub
loopne
push
out
sbb
sub
imul
nop
or
pop
mov
mov
xor
dec
mov
lahf
xor
inc
pop
orl
in
bound
popf
out
cmp
cwtl
mov
scas
xorb
cld
inc
sub
scas
xchg
pusha
aas
and
iret
lret
xor
es
pop
out
outsb
and
out
push
fnsave
inc
dec
cmpl
mov
inc
mov
sub
dec
pop
push
push
xlat
das
mov
cwtl
cmpsl
fs
lcall
sahf
adc
sub
mov
push
cmp
std
sbb
jg
push
mov
inc
mov
pushw
adc
dec
les
mov
lods
cli
pop
pop
xor
jns
adc
dec
mov
add
nop
arpl
cltd
outsl
ss
lahf
test
adc
sub
xchg
jb
in
es
push
xchg
es
and
ss
iret
adc
xor
and
lret
repz
dec
cld
mov
dec
mov
push
cltd
xchg
jno
sub
mov
jle
inc
std
mov
lret
ror
imul
es
sub
adc
insb
add
mov
jae
call
pushf
pop
mov
repz
and
mov
cmp
sub
cmp
mov
add
dec
mov
sarl
and
inc
jno
pop
mov
cmp
std
pop
popf
and
push
and
sub
push
push
jle
fucomi
mov
mov
ret
dec
jl
jge
cli
push
jmp
clc
or
loope
cltd
mov
popa
push
xlat
insl
and
aas
sub
lcall
dec
fbld
shll
add
pop
cmpsb
aad
pop
adc
out
dec
mov
les
aas
jbe
inc
jecxz
pop
addl
adc
ds
push
ja
mov
push
insb
rorb
pop
aas
adc
push
pop
inc
add
rcrb
aam
push
aam
xchg
push
push
or
stos
xchg
add
ds
lods
mov
sbb
insl
push
mov
mov
movsl
mov
add
lret
xchg
adc
cmpsl
cmp
and
fstpl
int
add
movsb
cmp
es
xchg
jb
mov
ds
add
xchg
cmp
adc
cmp
and
cli
clc
xchg
test
cmp
pop
or
jo
aam
push
pop
dec
cmp
rolb
fwait
xor
jmp
xchg
clc
sbb
rol
sub
and
add
or
daa
mov
sbb
adc
xlat
or
inc
fistpl
sti
ja
int
ss
fnstcw
add
ret
and
xchg
call
je
xchg
lcall
mov
jns
cmp
gs
pusha
xchg
push
mov
leave
lret
sbb
mov
repnz
inc
fnstsw
call
call
mov
sub
fbstp
and
push
dec
mov
xor
jle
jge
fcoms
jp
cmp
ja
jno
ret
addl
mov
adc
fcmovbe
popa
in
fistl
inc
bound
mov
pop
adc
cltd
mov
xchg
adc
dec
xor
push
dec
xchg
xor
xor
push
xchg
push
jmp
and
lret
sub
inc
js
xor
pushf
cwtl
inc
aaa
dec
int3
movsl
sbb
fwait
mov
int3
push
aam
mov
mov
mov
mov
and
mov
inc
or
cmp
or
mov
xor
dec
xchg
scas
mov
scas
adcl
cmp
fcomps
imul
int3
shrb
dec
lret
mov
push
cmp
inc
adc
aas
arpl
scas
jns
loop
jb
mov
xlat
pop
movsb
pop
adc
dec
lods
fisttpl
lods
adc
push
rorb
insl
aam
cltd
js
sub
dec
dec
adc
dec
cld
testb
testl
xor
mov
shrl
and
lock
mov
ficoml
in
mov
cs
loop
loop
pop
movsb
lret
adc
mov
sbb
pop
jb
and
xor
sbb
adc
cmpsb
adc
loop
mov
popf
out
push
mov
movsl
mov
imul
xor
sub
sub
in
push
adc
mov
aad
sbb
orl
inc
jae
cmp
mov
mov
outsl
dec
dec
dec
repnz
dec
int
push
clc
cmc
pop
sbb
mov
out
or
xlat
dec
orb
cwtl
add
ljmp
push
sbb
sbb
sub
divb
jb
push
lcall
sbb
sub
sub
or
aas
dec
sarl
fistpl
cmp
or
inc
pusha
jp
cmp
adc
xor
jno
call
stos
jp
pop
jmp
add
jb
push
inc
pushf
xchg
jo
stos
incl
mov
rorl
mov
xor
pop
mov
ret
add
push
sbb
mov
push
xchg
je
test
sub
jb
add
jmp
pop
pop
xchg
les
pop
cwtl
cld
into
mov
sbbb
sbb
lahf
lcall
lods
mov
or
enter
xor
mov
mov
xlat
pop
dec
cmp
aaa
mov
lcall
jl
sti
insl
notl
lds
cltd
xchg
int
scas
adc
test
mov
xchg
aaa
and
aam
pop
stos
dec
loopne
lcall
adc
inc
xchg
mov
xchg
je
xchg
jae
or
xchg
and
pop
push
xchg
add
insb
aaa
pushf
mov
repnz
push
dec
and
xchg
ja
sbb
adc
mov
pop
xchg
or
xlat
int
or
dec
cmp
inc
repnz
jmp
mov
sub
jnp
iret
lcall
jecxz
sarb
push
push
sahf
and
lods
shl
les
pop
jns
fisubs
push
sbb
clc
push
insb
out
outsb
mov
jns
leave
stos
xor
lcall
mov
jne
int3
sbb
dec
mov
mov
out
outsb
mov
in
pushf
fcoms
sub
mov
xor
push
nop
iret
imul
fwait
jnp
xchg
mov
add
xchg
pop
cmp
cmp
nop
cmp
sbb
push
pushf
cmp
fimull
mov
addr16
scas
sbb
sbb
dec
xor
mov
outsl
jmp
hlt
push
insl
fldenv
push
ss
stc
iret
movsl
pushf
mov
outsl
out
fidivl
outsb
repnz
cmp
fstpt
jle
jno
cmp
dec
out
stos
fsubl
jb
dec
ljmp
xchg
data16
lock
jnp
lock
pop
sbb
and
dec
fwait
jle
lret
cwtl
and
aam
pop
xchg
mov
mov
enter
xchg
xchg
test
fsubs
mov
jno
fsubp
bound
or
popl
xchg
sbb
jb
int3
mov
jecxz
pop
inc
insl
mov
icebp
pop
fcomps
pop
ror
dec
lock
sbbl
jge
cld
xor
sbb
push
arpl
sub
mov
out
inc
cmp
int3
or
cltd
push
fmuls
ret
push
fwait
push
fwait
test
lods
lret
arpl
sti
dec
fisttps
sub
push
mov
mov
mov
xchg
std
lahf
cmp
jns
std
push
dec
mov
nop
mov
xor
movsb
inc
cmp
sub
sarl
cmp
sarl
inc
add
xchg
mov
mov
insb
ljmp
hlt
stc
lds
or
mov
iret
fwait
inc
mov
data16
in
test
lea
fstl
cli
sbb
push
dec
stos
jle
adc
jmp
xchg
lea
in
mov
rcll
dec
mov
pushf
testb
bnd
sub
ss
sahf
mov
int
aas
xor
sub
orl
and
mov
mov
push
add
and
idivb
je
and
ret
xor
incl
stos
push
hlt
insl
push
or
fmull
ljmp
cwtl
out
fisubs
leave
inc
popa
lcall
adc
fidivrs
out
mov
push
dec
dec
pop
mov
add
push
cmpsb
cmp
iret
pop
ljmp
jno
and
dec
push
pusha
mov
inc
stos
incb
add
insl
hlt
jecxz
loopne
sub
out
shl
sbb
cltd
jne
xchg
sub
lock
repz
or
test
jmp
mov
dec
dec
push
mov
mov
pop
inc
cmpb
cli
mov
jns
and
out
test
hlt
xor
stos
sub
bound
xor
imul
sbb
pop
add
sahf
inc
clc
sub
subl
iret
out
aaa
das
xor
mov
cmpsb
pushf
ljmp
sub
testb
jo
bound
cwtl
cmp
sbb
nop
insl
mov
aad
pop
mov
lcall
mov
insl
mov
xor
xchg
shrl
hlt
mov
sbb
push
icebp
adc
inc
rcrl
cmp
jnp
mov
test
inc
inc
setbe
sub
or
aaa
lcall
add
out
sbb
outsl
scas
jle
stos
pop
cld
sbb
aad
jl
jo
cmpsl
dec
mov
pop
decl
and
jnp
scas
push
outsl
inc
xorl
cmp
jo
ror
stos
cmp
mov
dec
sbb
int
cmpsb
push
ja
xorb
inc
mov
adc
ds
xchg
cmp
stos
jp
push
jmp
jmp
pop
pop
xor
xchg
pop
dec
or
mov
lret
aaa
lret
push
cmp
lods
or
xchg
jne
or
pop
cmpsb
push
dec
rclb
nop
lds
sub
mov
xorb
fstl
mov
cwtl
mov
mov
add
nop
dec
stos
in
push
push
sub
add
push
dec
sub
pmullw
add
jne
xchg
je
jge
loopne
dec
in
addr16
add
xor
movsl
add
fisttpl
mov
es
mov
mov
mov
mov
mov
push
dec
subl
inc
lret
mov
daa
add
mov
movsl
out
mov
ljmp
shlb
cld
pushw
pop
pop
out
and
dec
stos
push
sbb
add
fsubs
jo
ss
mov
mov
pop
pop
test
mov
jmp
loopne
scas
push
fldenv
jle
sub
pop
fisubrl
mov
out
imul
mov
add
jae
sbb
insb
js
test
out
jne
push
mov
inc
adc
shl
cmp
je
jne
sbb
orb
inc
movsl
cwtl
and
test
jne
loop
outsb
stc
adc
mov
cmp
leave
stc
sbb
xlat
push
sub
xchg
mov
pop
pop
out
fists
sub
xchg
mov
pop
ss
or
mov
and
shll
push
jno
ss
stos
lret
jl
out
push
insl
lock
out
and
bound
mov
mov
push
es
std
mov
test
xchg
lds
ds
pop
cmp
jne
pop
frndint
into
lret
filds
xchg
jecxz
adc
jl
sub
pusha
lret
arpl
jmp
sbb
mov
mov
sarl
pop
pop
jae
jo
adc
jle
push
sti
lds
sbb
outsl
add
adc
cmpsb
movsl
or
push
xchg
cmp
loopne
loopne
enter
or
adc
sub
mov
dec
push
inc
arpl
mov
fwait
jmp
int3
hlt
loope
ja
sub
mov
je
push
aaa
cmp
xlat
push
pop
adcb
pop
and
mov
adc
and
popf
dec
call
push
aas
mov
push
or
adc
gs
pushf
jns
or
fs
lods
add
sbb
addb
loop
inc
aaa
out
mov
cmpsb
xor
pop
xor
arpl
xor
fucomip
cmp
push
test
mov
shrl
shlb
insl
mov
and
movsb
cmpsb
mov
jecxz
shl
arpl
movsb
and
push
stos
push
loope
fidivl
xchg
mov
mov
push
aad
loopne
xchg
jecxz
in
cmp
mov
decb
ljmp
loopne
mov
add
iret
scas
orb
mov
repnz
test
xchg
dec
sbb
stos
or
sub
jns
mov
test
jno
insb
inc
lods
xchg
push
cmp
lods
cwtl
add
pushf
jae
jmp
je
pop
dec
repz
inc
pop
pop
mov
inc
rcrl
call
push
inc
or
cmc
mov
add
fstpt
pop
fmulp
clc
stos
test
lea
jne
roll
notl
cltd
enter
lods
outsl
sbb
xchg
jne
and
test
push
out
xchg
mov
mov
test
addr16
outsb
jae
inc
enter
lods
xor
ret
xor
std
aam
xor
sti
popa
xchg
das
jo
loop
stos
and
int
dec
sub
lahf
adc
or
push
jl
mov
and
dec
push
out
in
sub
scas
push
flds
dec
pusha
sub
out
push
jb
data16
lods
jo
inc
mov
jae
mov
jecxz
imul
pop
stos
movsl
and
in
xor
jmp
sbb
fisubs
mov
rclb
rcrl
sbb
stos
lahf
inc
xchg
pop
les
repz
sti
xchg
cltd
lret
xor
pusha
testl
shlb
pop
push
sbb
loope
rcrb
ret
xchg
dec
out
sbb
loope
sub
notl
and
aas
jp
cmpsl
loope
cld
decl
jg
dec
shll
dec
dec
pop
addr16
push
loop
lahf
jb
divl
xor
xor
arpl
mov
push
dec
lss
inc
pop
lea
push
pop
into
cmpb
push
mov
mov
enter
cmp
jno
imul
mov
mov
lcall
mov
push
sub
test
mov
cmp
out
insl
add
mov
cmp
xor
arpl
pusha
insl
mov
add
je
jg
movsb
test
ss
out
jle
jg
lcall
cmc
inc
int3
clc
mov
ljmp
shrb
decl
mov
mov
push
dec
add
insb
cltd
push
and
push
push
push
cs
mov
or
daa
lods
jno
xor
add
ljmp
mov
outsb
sbb
lods
les
mov
mov
push
mov
mov
and
add
jmp
cmc
xlat
mov
sbb
jg
pop
dec
pusha
popa
pop
jg
xor
or
cmp
mov
aam
and
aam
cmp
mov
enter
lret
xchg
adcl
repnz
sub
cld
fnstcw
and
arpl
je
stos
mov
xchg
xchg
lods
push
pop
fnsave
lods
cli
stos
dec
call
lods
cli
pusha
aaa
xor
xchg
cmp
outsl
scas
cwtl
push
sbb
inc
mov
lret
xor
add
cmc
sbb
orb
jb
sub
mov
and
push
bound
lcall
pop
jnp
push
add
xchg
pop
cli
movsl
add
fimuls
es
or
in
xchg
xchg
sub
push
out
fsubrl
mov
int
jg
repnz
or
data16
outsl
sti
movsb
xchg
mov
xchg
jl
adc
leave
cmpsl
out
xchg
fsub
mov
mov
pop
in
int3
dec
repnz
xor
xchg
idiv
iret
cmpsb
jge
cmp
je
push
in
out
pop
out
xchg
jmp
mov
and
cmpsl
addr16
lahf
stc
cmp
sahf
xchg
addr16
cwtl
imul
cmp
stc
xorl
mov
sub
sbb
cmpsb
or
lds
mov
push
add
scas
cmp
cmp
nop
sub
roll
sbb
cmpsl
test
pop
sub
jl
and
adc
sarl
mov
mov
out
js
das
or
xchg
aas
rcrl
pushf
pop
mov
aas
add
pop
mov
pop
push
inc
xchg
cs
mov
sbb
push
inc
jns
pushf
lods
push
andl
jmp
xchg
mov
mov
push
pop
cmp
add
and
push
cld
adc
sbb
fdivl
jnp
sbb
int3
mov
icebp
cmc
bound
mov
adc
sarl
aam
or
pop
cmp
mov
inc
iret
nop
movsb
fs
shlb
clc
mov
pop
mov
pop
pop
das
pop
push
mov
std
mov
or
jo
test
insb
rcrl
xchg
in
test
ffree
adc
call
rorb
mov
mov
sub
leave
ret
sbb
xor
xchg
popf
jle
fisttpl
cmpsb
fwait
xchg
push
push
mov
fldl
jg
push
sbb
leave
jecxz
ljmp
sub
pop
int3
adc
mov
lds
jg
push
dec
in
mov
and
cmp
mov
repnz
in
xor
jns
pushf
jbe
pop
mov
sti
hlt
testl
inc
lods
jne
add
insb
movsl
mov
push
leave
push
outsb
in
push
mov
insb
sbbl
and
xor
fistl
pop
in
cmpb
bound
addr16
fists
jge
sarb
hlt
ret
rolb
xchg
cmpsb
xchg
int
push
stos
aad
sub
addr16
scas
pusha
lods
mov
popa
std
int3
pop
dec
mov
cld
jg
xchg
mov
pop
cmpsb
cmc
or
scas
std
xchg
addr16
mov
dec
xor
adc
mov
subl
inc
stos
les
repz
lcall
ja
pop
xor
js
dec
cwtl
add
sbb
lcall
out
and
comiss
in
sbb
shll
shrb
shl
xsha1
cmpsb
dec
adc
cmpsb
test
inc
mov
lock
bound
jae
mov
jb
and
flds
and
inc
sbb
push
push
rorb
xor
jb
mov
iret
inc
nop
jnp
dec
xchg
mov
or
dec
out
xchg
movsl
cmp
mov
mov
popf
in
out
popl
adc
lret
cli
or
aaa
cmp
cmp
das
mov
scas
jle
je
ja
jae
inc
test
jge
cwtl
inc
inc
mov
rorl
clc
sbb
adc
and
lcall
iret
in
lcall
out
or
js
inc
lret
out
test
insl
icebp
xor
add
stc
cmp
sub
iret
cmp
jle
shrl
push
xchg
out
scas
sbb
add
add
add
adc
and
fists
daa
mov
dec
dec
jge
fwait
daa
cmp
mov
out
xchg
bound
push
in
pop
addl
call
add
and
xor
enter
mov
sbb
mov
ror
pop
and
mov
xor
int3
inc
cmc
sti
call
ret
subl
in
mov
fwait
or
and
mov
add
pop
insb
scas
jecxz
leave
jecxz
fsubp
mov
int
lcall
std
adc
mov
repz
cmp
pop
out
aam
push
adc
jbe
xlat
pop
lock
arpl
mov
lods
lahf
pop
nop
mov
pop
pop
pop
cmpsl
call
jae
lods
ljmp
or
out
decl
fsubs
mov
lahf
mov
pop
gs
std
pop
mov
cmpsl
add
in
into
sti
mov
scas
pop
mov
mov
es
test
ret
and
cmpb
jb
jp
insb
inc
lret
push
test
sbbl
pop
dec
mov
in
scas
ljmp
inc
imul
inc
out
cmpsl
idiv
inc
les
xor
jge
int3
out
test
cmpsb
mov
data16
stos
xchg
push
ret
mov
imul
mov
mov
xchg
daa
lret
sub
cmp
int3
add
or
dec
pop
faddl
sub
adc
adc
mov
ficoml
mov
lds
pusha
les
in
adc
sarb
and
ja
xchg
sub
cmp
and
sar
xchg
nop
ss
out
inc
fdivr
cld
scas
mov
pop
add
dec
push
and
loopne
xchg
lea
fnsave
and
enter
mov
add
push
or
xchg
and
inc
adc
and
jle
inc
stc
lods
hlt
adc
pusha
adc
fisubrs
loop
or
fildl
das
stos
fistps
icebp
loopne
loope
imul
mov
jo
nop
dec
ret
cmp
loop
xchg
imul
xor
push
scas
mov
pmullw
ret
jp
jae
popl
int3
add
mov
push
rcrb
jle
push
cmp
ja
test
xchg
mov
ss
xchg
or
aam
lret
addb
cmp
insb
fadd
mov
out
dec
adc
mov
mov
jbe
loope
mov
mov
aad
mov
mov
push
jle
adc
sbb
stos
shlb
add
mov
movsl
sub
int3
xchg
ljmp
xchg
decl
push
in
jo
cmp
inc
xchg
jge
into
inc
ljmp
call
cmpsl
aas
into
mov
ja
rorl
cmpb
jae
orl
jge
and
movsb
jp
gs
sub
lds
js
jecxz
ss
in
pushf
scas
adc
mov
enter
or
push
mov
popf
data16
jl
push
xor
popa
push
in
ret
in
xchg
daa
sub
aaa
sbb
in
mov
dec
xchg
add
arpl
xchg
fs
xchg
and
and
push
cmp
cmc
movsb
pop
divb
adcb
pop
push
xor
push
jmp
fwait
xchg
add
jnp
or
out
push
mov
sbb
push
lods
testl
insb
fs
loop
es
cmpsb
lret
idivb
add
pop
mov
jmp
shrb
sub
pusha
xor
mov
lahf
sahf
sbb
hlt
dec
rolb
call
loopne
add
mov
adc
ja
adc
cmpsb
mov
jb
or
mov
movsl
push
inc
xchg
sarb
loop
ror
shrb
mov
mov
cli
mov
lock
push
lea
mov
add
fiadds
cmp
rorl
sub
pushf
push
jb
push
dec
cmpsl
rcrl
inc
inc
imul
daa
sub
sbbb
hlt
adc
mov
data16
mov
outsl
lret
ja
or
inc
enter
mov
test
stos
dec
je
lret
std
mov
push
sbb
cmp
adc
inc
les
outsb
inc
mov
mov
and
out
mov
pop
fwait
xchg
xchg
lahf
pushf
adc
push
subb
inc
es
iret
shrl
cmp
add
pop
dec
aas
mov
out
adc
popa
pushw
jge
xchg
inc
enter
mov
bound
pop
jmp
sbb
movhps
nop
les
fwait
and
cmp
or
scas
call
push
xor
aam
sbb
inc
mov
mov
test
sub
out
jb
dec
mov
cmpsb
fdivr
pusha
loope
nop
out
xchg
jle
cmp
or
insl
into
xor
das
dec
mov
push
xchg
gs
lret
pushf
out
inc
and
dec
sub
jl
or
cmp
jbe
roll
pop
je
jl
mov
cs
je
dec
sub
lret
loopne
push
outsb
mov
and
mov
mov
mov
mov
sub
fiaddl
sub
leave
push
jne
pop
dec
ljmp
in
dec
outsb
cmp
push
adc
test
jge
push
inc
popa
mov
mov
cmp
mov
mov
decb
and
cmp
imul
imul
adc
lods
js
inc
aad
adc
and
inc
cmpsl
and
aad
or
test
mov
inc
clc
gs
jp
mov
cmp
ret
icebp
flds
movsb
push
in
lea
lret
cmp
ss
cwtl
lret
loop
loopne
xor
push
into
adc
jns
or
push
repz
jl
lods
ja
cwtl
outsl
movl
jge
pop
dec
fstl
ret
add
lret
adc
push
std
pop
icebp
or
std
loopne
data16
imul
test
int
inc
adc
inc
sbb
clc
jle
rcrb
and
jp
adc
aaa
pop
pushf
daa
inc
cwtl
hlt
in
adc
add
mov
aad
scas
cmp
jecxz
mov
jle
xchg
push
lods
pop
push
cmc
sbb
jns
adc
push
cmpb
mov
jb
test
lods
xadd
pop
jnp
push
bnd
mov
stos
push
rorb
cltd
leave
das
mov
faddl
mov
and
cmp
push
cmp
xchg
bound
bound
sahf
mov
js
adc
or
cmpsb
xchg
mov
out
dec
add
add
fnstsw
aam
or
lea
scas
int3
adc
jmp
xchg
mov
lea
mov
bound
sbb
push
push
sub
in
sub
and
push
or
push
add
pop
xchg
add
jge
in
les
cmp
arpl
fmuls
jecxz
shrl
pop
imulb
fcomip
arpl
and
mov
xor
stos
fsubl
loop
sbb
ds
mov
pop
dec
sub
push
mov
sarb
mov
push
sub
adc
xor
jns
std
cwtl
fisubrl
cld
push
mov
sub
int
cmpsb
add
stos
ss
bound
dec
pop
adc
fistl
aas
cmp
mov
jae
mov
outsl
mov
xor
dec
loopne
xchg
popf
push
mov
movaps
ret
lcall
xchg
mov
adc
loop
mov
xchg
jo
pushf
imul
daa
lods
jnp
loopne
xor
fisubrl
add
pop
fs
faddl
inc
inc
ja
push
jne
push
xchg
cli
inc
mov
mov
sbb
movb
cmp
push
cmp
fs
sahf
mov
xor
jno
mov
push
mov
fdivrp
sbb
add
sbb
mov
inc
sti
fwait
lahf
jbe
test
jge
dec
or
adc
xor
outsl
into
push
xchg
cmp
enter
sbbl
sub
dec
shr
cmp
inc
push
daa
jns
aad
ret
lcall
pop
mov
fimuls
lock
xor
xchg
not
lea
sar
or
adc
sbb
clc
outsl
mov
data16
outsl
cltd
jp
mov
and
arpl
inc
pop
mov
adc
sahf
adc
sub
jns
test
addr16
adcb
mov
emms
xchg
adc
in
out
mov
arpl
jns
arpl
mov
adc
add
shl
daa
push
out
pop
xchg
and
cmp
mov
test
jle
dec
mov
dec
pop
jne
and
xor
cld
in
mov
pop
fstl
dec
pushf
in
jno
addr16
mov
mov
jmp
or
mov
mov
sarl
mov
icebp
sbb
les
and
jbe
mov
insb
pop
mov
dec
mov
add
nop
rcll
rorl
ret
mov
push
je
mov
pop
ret
rol
or
in
out
pop
mov
mov
add
fsts
in
push
sbbb
lds
insl
dec
int
push
cmp
inc
and
rolb
icebp
stos
xor
lds
lret
pusha
pop
test
ror
sub
add
jg
or
mov
fidivs
sub
mov
mov
pop
sbb
jne
pop
hlt
add
sbb
xor
mov
xchg
inc
mov
cwtl
orl
push
cltd
mov
js
outsl
cwtl
lds
jb
fnstcw
or
xchg
jg
dec
imul
jle
fnsave
rcll
xor
cltd
cmpsb
outsb
loopne
mov
jp
cmp
inc
loop
mov
inc
cmpsb
nop
xchg
xor
in
adc
mov
popf
popa
lock
fistpll
test
inc
leave
jo
dec
in
ja
mov
sahf
jmp
sbb
rorb
and
add
aaa
out
sti
add
add
pop
mov
ret
dec
mov
pushl
cmp
scas
insb
pop
in
stos
add
loop
mov
xchg
rorl
stos
adc
xor
mov
push
addr16
pop
pop
xor
lcall
in
inc
adc
dec
and
dec
cmp
sub
sar
mov
dec
imul
lret
sub
stos
lods
xor
movsl
cmpsl
pop
pop
pop
add
test
add
adc
jno
test
jle
cmc
mov
mov
into
xor
xor
cmp
daa
cmpsl
jecxz
xor
xchg
lock
ss
or
xchg
jg
mov
aam
inc
arpl
adc
dec
test
xchg
addb
lods
push
mov
lods
les
lret
xchg
psllw
rcr
popf
mov
mulb
inc
mov
movsb
or
push
fcomi
inc
xor
or
or
out
lahf
je
fsubrl
jnp
shll
pand
xchg
ja
daa
mov
fs
das
and
pop
push
mov
xor
pop
inc
bound
adc
scas
mov
js
jmp
push
and
scas
hlt
nop
in
arpl
outsl
cmp
xchg
cmp
sbb
jg
pop
fidivs
push
jns
in
int
popf
adc
and
cmp
fs
sub
jns
pop
pop
xor
mov
or
scas
xchg
xlat
mov
lcall
sub
cmp
subb
imul
lods
shlb
cmp
and
lea
and
xor
fcmovnb
int3
cltd
mov
add
fiaddl
lcall
std
cmp
in
mov
push
iret
stos
cmp
inc
arpl
xchg
add
icebp
jb
xchg
icebp
or
popf
add
in
mov
enter
add
dec
jmp
call
mov
jnp
adc
push
jae
bound
inc
push
ljmp
mov
out
out
dec
mov
sbb
movsl
mov
lret
xor
sarb
ljmp
pop
pusha
cli
push
je
cltd
jbe
jecxz
out
fstpl
aad
out
add
jp
jle
mov
ja
outsb
cld
xor
imul
out
push
js
movsb
pop
mov
jns
cltd
loope
dec
std
lods
popa
mov
adc
and
leave
out
or
ljmp
jne
jg
mov
imul
loope
push
stos
push
out
mov
ds
into
orl
and
cmp
pop
sbb
jae
ja
lock
cmp
fcompl
pop
dec
loope
pop
fbld
pop
addr16
xor
outsb
lret
dec
xchg
inc
mov
xchg
and
adc
mov
es
iret
and
xor
mov
push
push
push
jge
push
dec
xchg
mov
sbb
push
push
flds
push
data16
mov
jle
jle
inc
jno
repnz
adc
cmpsl
adc
pop
cld
or
pop
mov
inc
ss
loopne
sbb
adcb
jne
rcrl
or
xlat
movsb
fiadds
inc
xor
push
leave
xor
inc
dec
out
mov
push
xor
jge
mov
and
cmp
mov
lods
and
pop
dec
imul
pop
lret
fadd
sti
cmp
cwtl
aas
sbb
insb
fisubs
add
je
stos
or
fstp
pop
fsubl
pop
fbld
in
lods
xor
push
nop
addr16
stos
mov
scas
mov
stos
mov
adc
mov
stos
mov
push
das
insb
pop
pop
cs
jg
pop
aam
xor
mov
sbb
sub
mov
shll
xor
xchg
sub
mov
es
mov
jnp
test
loope
lods
cmpsl
pop
insl
dec
push
lret
add
mov
pop
and
test
cmc
mov
ljmp
shlb
outsl
testb
fstps
dec
xchg
orb
jb
adc
ret
out
shlb
push
jp
subb
stos
pop
cmp
sbb
sub
mov
jo
movsb
push
mov
push
scas
lods
fwait
inc
inc
imul
or
cmp
std
pop
outsb
jecxz
imul
int3
je
jnp
repz
inc
lcall
outsb
and
cmp
pop
cmpxchg
jno
out
inc
sub
mov
mov
fimuls
dec
mov
xchg
dec
add
xorb
lahf
clc
xchg
xchg
ret
ja
push
fdivrs
add
aaa
pushf
ds
mulps
in
push
adc
rcll
cmpsb
ss
sbb
fcompl
into
sub
clc
dec
in
pop
lods
out
inc
fsubs
imul
imul
orb
rorl
in
push
ja
push
out
add
push
jp
mov
test
fstpl
mov
xchg
mov
and
enter
xor
xchg
sbb
add
pop
add
imul
aas
sbb
in
test
mov
daa
and
dec
leave
mov
mov
movsb
or
fcmovnb
adc
ret
les
push
fisubs
orl
scas
xor
push
and
adc
pop
xchg
push
cmpsb
call
pop
fcomp
jmp
adc
sbb
cltd
cmpsl
iret
mov
xor
cmp
imul
ljmp
stos
dec
sub
or
les
xchg
jbe
fwait
pop
sbb
fistps
sbbb
fsubrs
mov
movsl
bound
pop
or
cltd
jnp
stos
in
test
cmp
lea
sub
ljmp
xchg
jecxz
dec
movsl
pushl
mov
or
daa
add
test
and
add
inc
aaa
xor
lds
inc
mov
loop
movsl
enter
cmp
mull
or
mov
scas
out
fwait
mov
sarl
mov
arpl
add
sbb
xchg
sbbl
jl
idivb
aam
shlb
pop
mov
ja
stos
sub
ret
xchg
inc
in
push
add
pop
and
mov
rcr
add
mov
lcall
xchg
mov
push
es
aas
aas
out
jbe
add
faddl
shl
dec
hlt
lret
aas
add
pavgb
js
std
ss
add
pop
mov
lret
shrl
insl
lock
mov
lahf
or
sahf
sbb
or
mov
push
fstps
aad
mov
xchg
sbb
es
push
and
orb
mov
pusha
pop
or
or
mov
stc
jl
mov
in
cmp
repnz
xchg
dec
pop
daa
mov
jle
icebp
and
adc
jl
adc
cmpb
inc
xchg
lcall
dec
cli
mov
jp
arpl
and
sar
sub
jno
ljmp
testb
mov
or
je
sub
pop
and
cmp
adc
pop
in
dec
xor
lcall
sub
ret
es
inc
bound
sub
pop
sub
push
das
xor
shr
andb
pop
xor
nop
ds
nop
inc
or
push
sbb
iret
xchg
repnz
inc
lcall
repnz
stos
rcrl
inc
cmp
test
mov
cmp
stos
test
mov
cwtl
jne
popf
pop
mov
xchg
je
not
jmp
push
jmp
fidivl
and
jecxz
ret
push
dec
imul
jle
and
imulb
stos
dec
xchg
loop
xor
adc
or
jae
xor
mov
and
fcomp
xor
cmpl
iret
add
les
inc
push
je
rcrl
pop
loop
lea
mov
mov
pop
stc
cmc
push
adc
cmc
cmc
cwtl
push
icebp
adc
pop
dec
or
out
js,pn
ljmp
daa
adc
rolb
test
mov
test
jp
sub
ljmp
test
sar
mov
mov
push
pusha
and
jo
mov
imul
mov
push
mov
jno
cmp
mov
aas
movsl
inc
ja
xor
sub
cmc
into
mov
fimull
sub
cmp
out
push
adc
or
jmp
pusha
das
sti
push
mov
xlat
sbb
xchg
das
rclb
sarb
repnz
icebp
add
add
dec
jbe
test
pop
outsl
or
icebp
in
mov
inc
inc
in
imul
leave
in
jae
inc
aad
xor
test
pop
js
shr
outsb
aam
arpl
in
xchg
sub
jb
lcall
inc
divl
xchg
popa
jo
stos
xchg
inc
movsb
fwait
or
jo
repnz
pop
loopne
push
inc
in
popa
aam
repz
jmp
ljmp
cli
imul
or
cltd
fisttps
das
popa
inc
cmp
test
int
loop
adc
out
adc
dec
fisubrs
int
insl
mov
or
out
call
mov
fsqrt
testl
nop
mov
cmp
in
fucom
test
dec
fwait
cld
pop
pop
jecxz
mov
adcb
adc
ret
push
and
xchg
mov
jo
rcl
jne
hlt
or
out
stos
mov
outsb
jb
lret
push
clc
push
nop
xor
lock
mov
jnp
mov
xchg
dec
mov
arpl
lret
dec
adc
inc
dec
in
and
cmp
hlt
cs
decb
inc
popa
xchg
mov
adc
shrl
cltd
sub
pop
gs
add
fildll
xor
pop
or
mov
enter
cld
repnz
mov
fdivrs
arpl
jns
or
frstor
mov
inc
mov
and
fistl
push
mov
sub
loopne
dec
pop
xor
cmp
inc
dec
push
adc
popa
rcll
loopne
or
rcl
jb
daa
cltd
jmp
icebp
xchg
pushf
lahf
push
inc
inc
sbb
pop
mov
lcall
sub
xchg
sbb
adc
xchg
mov
sbb
sbb
mov
mov
fsubrs
xchg
aad
push
xchg
fldt
in
or
out
fstpt
mov
mov
rcll
xchg
and
push
data16
jnp
in
add
pop
int3
js
jbe
xor
enter
jp
pusha
bound
mov
test
mov
mov
or
jge
gs
mull
jno
fstpt
loop
cmp
cltd
mov
sbb
inc
iret
je
xchg
cmp
pushl
ljmp
jbe
or
cwtl
sbb
mov
dec
adc
xor
pushf
hlt
xor
in
insb
add
mov
pop
out
out
add
lock
lods
add
cmpsb
dec
add
dec
mov
xor
mov
out
pop
xor
add
sub
in
fimuls
lahf
pop
jge
sub
xchg
cmp
fadds
int3
push
add
jl
jecxz
push
pop
sub
int
xchg
hlt
leave
jg
jo
sub
popf
and
mov
test
xchg
push
fwait
adc
aam
cmp
sub
sahf
int3
std
dec
push
pushf
inc
jns
adc
loopne
sbb
sti
pop
sbb
shrl
pop
push
inc
pop
hlt
sub
lcall
fwait
lret
icebp
jbe
sub
in
inc
loope
lods
rcrb
lods
pop
push
test
pop
fwait
lret
and
addb
xchg
mov
mov
xor
mov
jmp
mov
xor
fstpl
add
mov
imul
adc
sub
mov
add
push
idivb
popf
inc
cmp
xchg
insl
mov
pusha
stos
out
out
sbb
push
jmp
inc
push
mov
imul
pop
inc
mov
push
call
in
and
ret
frstor
or
sub
jb
dec
jb
orl
lea
andb
movb
or
int3
stos
mov
and
std
nop
push
or
jmp
xor
fwait
and
fwait
pop
repz
sbb
adc
push
nop
addr16
out
ds
shr
ss
mov
shl
pop
fbstp
cmpsb
shr
out
adc
mov
push
in
dec
fstl
aas
fcmovne
xchg
fwait
pop
aaa
insb
inc
dec
sub
out
pop
xor
fsts
aas
stos
push
push
les
shl
jmp
mov
cmp
scas
movsl
push
xchg
mov
mov
xchg
mov
sub
push
jnp
int
lahf
in
cmpsb
sub
std
cmpsl
push
dec
cmp
insl
je
pop
rcrb
ja
jbe
mov
mov
clc
pop
mov
push
cmpsb
stc
fiaddl
das
pop
aaa
bound
aad
dec
std
inc
jmp
pop
dec
inc
jns
mov
lret
stc
mov
inc
hlt
repnz
add
aas
inc
jecxz
fcoml
mov
mov
repnz
cli
subl
pop
popf
xchg
adc
dec
daa
enter
cmp
mov
add
jge
loope
imul
pop
xor
dec
fcmovne
into
sub
cmp
xchg
ljmp
cmp
pop
daa
pusha
ss
jns
mov
mov
ret
sbb
sub
incl
pop
mov
xorps
sub
mov
or
fsubr
nop
and
sbb
in
sbb
cwtl
add
and
fists
mov
jno
and
orb
lods
loopne
xchg
bound
cmpsb
or
roll
jo
xchg
cmp
cli
push
repnz
push
xor
imul
arpl
ja
sti
mov
or
imul
mov
ds
mov
je
fwait
stc
xlat
jo
sti
aad
mov
loopne
jge
loopne
jne
or
inc
xchg
sub
jmp
adc
outsb
jge
and
ret
add
cmpsb
divl
xor
ss
mov
push
push
js
cmp
jae
pop
mov
fcoms
aas
inc
cmp
mov
popa
clc
movl
and
mov
fmul
in
dec
in
or
inc
outsb
hlt
icebp
mov
pop
mov
and
mov
mov
repz
xchg
std
clc
sbb
pop
pop
sahf
call
adc
push
inc
cmpsb
mov
sbb
in
cltd
rcrl
clc
sbb
test
push
sub
test
aam
mov
dec
lods
mov
xor
dec
repz
dec
pop
out
inc
push
xchg
lock
mov
loopne
inc
fldt
mov
enter
adc
rcrl
insb
xchg
aad
cmp
aam
cmp
nop
add
int3
push
fs
cmp
dec
in
loop
les
push
jnp
data16
sub
pushf
cmp
jl
ret
loopne
out
jle
xor
stc
push
pop
jns
imul
movsl
imul
leave
stos
xorl
fwait
xor
pushf
mov
push
ja
repnz
add
lcall
mov
mov
fbld
push
pop
andl
xor
lock
rol
aad
xchg
stc
ficompl
repnz
jecxz
out
sub
lret
adc
mov
dec
push
sbb
out
cmp
xchg
sub
pop
pop
sub
aaa
shlb
inc
pop
cltd
mov
push
icebp
pop
push
shrl
mov
popf
es
adc
out
popl
push
rcrb
popa
nop
sub
pop
int3
mov
dec
xchg
push
jle
lret
cld
scas
aam
pop
and
iret
lds
mov
inc
xor
jp
out
pop
xchg
popf
int3
es
std
jl
mov
test
dec
pop
shll
push
imull
outsb
mov
xchg
and
sbb
movsl
into
sbb
add
insb
js
fnstenv
stos
adc
add
sub
and
andnps
daa
add
aad
data16
popw
cltd
addb
or
xlat
int3
pushf
std
mov
mov
jge
cmp
xor
cs
or
push
xlat
fwait
xchg
sub
push
dec
loopne
int3
std
mov
adc
jle
bound
jns
sahf
call
mov
enter
sub
jae
lahf
pushl
test
xlat
lahf
inc
xchg
sub
stos
iret
add
cld
in
in
mov
jge
adc
mov
sbb
push
aaa
inc
icebp
mov
outsl
cli
sbb
fstps
bound
in
int
pop
and
gs
mov
pop
and
div
hlt
adc
hlt
je
xchg
cmc
cmp
add
loop
mov
cmp
mov
mov
pusha
in
lea
orl
xchg
shll
mov
aam
ljmp
mov
lahf
fcompl
add
lods
lods
sub
sbb
ret
pop
xor
dec
and
jno
adc
cli
jle
test
sbb
cmp
lret
pusha
jnp
mov
push
loope
adc
fldenv
adc
sbb
jo
std
cmp
push
call
inc
or
xchg
sbb
ds
adc
outsb
xchg
jp
std
xor
cld
test
mov
pop
lahf
pop
bound
push
xor
mov
insb
fmuls
in
fcomip
mov
mov
push
es
xchg
xchg
or
adc
sbb
dec
add
sbb
orb
xchg
pop
clc
mov
mov
lds
in
or
in
sub
and
lret
in
xchg
fnstenv
cmp
test
out
xchg
xchg
lods
insb
jmp
inc
fldenv
mov
cmp
lea
ret
fcomps
scas
mov
adc
xchg
stos
imul
mov
sahf
loope
sbb
xlat
jmp
or
ss
orl
pop
imul
and
jl
lahf
ret
dec
mov
or
mov
xlat
xchg
push
push
cwtl
cwtl
fidivrl
jge
sbb
mov
icebp
pusha
js
sub
insl
sub
mov
mov
ljmp
leave
das
cmp
rcrb
fxch
sub
xchg
dec
test
xchg
adc
jne
sahf
jmp
test
add
push
adc
or
je
pop
xchg
jecxz
cwtl
or
inc
xchg
fisttps
cmc
dec
mov
xor
pop
xor
jns
cmp
pop
or
loop
inc
cmp
shrb
idivl
popa
pop
mov
pusha
adc
loop
rolb
add
xchg
and
nop
negb
dec
test
scas
inc
jp
jb
pop
stos
test
outsl
adc
sub
sti
outsb
sbb
lock
mov
add
sub
mov
pop
mov
jl
out
outsl
sbb
mov
sbb
aad
repz
pop
sub
mov
inc
pop
jl
sbb
mov
xor
pop
jno
ja
ljmp
cmp
jb
add
pop
imul
lea
push
add
jb,pn
sti
xchg
leave
int3
pop
fstpt
pop
aad
clc
fstpl
cmpl
lods
sub
mov
loope
fistpl
xor
ja
test
repnz
ja
sub
or
insb
and
mov
into
pop
add
movsb
or
push
shll
sbb
or
in
jb
pop
push
cltd
or
imul
sub
loopne
add
mov
push
aam
cs
in
ret
mov
mov
pop
mov
add
pop
daa
mov
cmpb
pop
xchg
adc
popa
mov
or
test
cmp
xchg
adc
stos
ljmp
jnp
dec
imul
xchg
leave
shlb
jp
sub
icebp
ds
inc
add
sbb
xchg
or
divl
cmp
jo
jmp
mov
inc
test
fldenv
roll
sbb
mov
xchg
fwait
or
dec
xchg
gs
add
xor
adc
jb
dec
repnz
cmpsl
adc
or
pop
xor
lcall
into
mov
mov
mov
loop
insb
sbb
or
push
arpl
xor
lods
insb
xchg
cmp
mov
xor
jecxz
push
arpl
and
movsl
scas
stos
xor
shlb
sub
mov
repz
dec
dec
xchg
dec
stos
lcall
and
mov
les
movsl
mov
lods
pop
push
xor
fldl
mov
sahf
fimuls
fsts
aas
sbb
hlt
lret
inc
jmp
nop
xchg
mov
outsb
mov
pop
jp
push
test
add
std
add
push
cli
lock
adc
ja
das
ja
arpl
in
dec
adc
paddsw
clc
push
inc
inc
cmp
mov
lock
mov
ds
loopne
push
repnz
shrl
call
or
mov
dec
out
repz
and
daa
xor
imul
in
dec
cmp
and
inc
jl
xchg
clc
add
fnstsw
cmpsl
mov
cmp
cmp
data16
sbb
rcrl
pop
jle
aad
mov
mov
push
xor
or
or
ret
std
loopne
aam
in
out
std
cmpsb
das
jnp
fwait
pop
xor
mov
imul
out
or
mov
popa
dec
lods
lahf
inc
dec
out
shlb
cmp
push
push
sbb
mov
jp
or
mov
pop
daa
xor
push
imul
xchg
hlt
mov
outsl
pop
sbb
sbb
mov
imul
les
int
subb
pop
jo
clc
mov
inc
mov
into
bound
loope
ffree
mov
xor
add
add
sbb
cmp
aas
push
cmp
adc
adc
mov
mov
repz
sbb
push
mov
imul
fstps
nop
mov
dec
imul
lods
dec
inc
lods
inc
pop
jmp
pop
inc
cmp
push
bound
lcall
shlb
mov
jb
jg
jbe
sub
add
push
int
mov
mov
mov
out
inc
mov
aad
in
pop
fstps
es
add
loopne
scas
imul
sahf
ss
mov
jge
push
cmp
xchg
fsubrp
dec
dec
mov
shll
flds
xchg
mov
imul
pop
adc
popf
lods
das
xorb
call
insb
dec
cmp
aas
in
sub
outsl
test
outsb
mov
aad
out
shr
cmp
mov
mov
lcall
dec
fldt
jp
inc
or
sbb
pop
xor
loope
cltd
pop
pop
gs
les
xchg
mov
xchg
dec
repnz
ljmp
iret
mov
push
pusha
push
mov
xchg
add
push
cmp
mov
and
icebp
pop
sbb
fadd
sbb
adc
mov
pop
jo
cmp
scas
add
cmp
test
fwait
outsb
mov
sub
mov
pushf
rcrb
sub
movsb
push
test
pop
push
inc
mov
push
test
iret
fwait
jmp
out
fsub
cmp
xor
mov
sbb
add
rorl
ficomps
lock
pop
rorb
dec
fldl
cli
mov
xor
mov
and
repnz
add
sbb
push
lock
adc
inc
jno
adc
xchg
adc
iret
sub
xchg
mov
fdivl
dec
push
lcall
aam
push
test
cmc
xor
scas
jo
jecxz
add
jecxz
xchg
and
adc
xor
les
sub
xchg
inc
mov
mov
sub
inc
jbe
jae
xchg
inc
and
in
cli
std
push
ljmp
icebp
idivb
and
inc
testl
lods
leave
pop
pusha
inc
es
xchg
aad
shl
xchg
mov
movsl
dec
int3
aas
jmp
push
loop
out
cs
clc
es
enter
imul
cmp
mov
inc
xor
xor
push
lods
and
daa
mov
xchg
imul
ds
cltd
mov
into
mov
lret
punpckldq
inc
mov
mov
test
mov
shll
sbb
and
and
pop
andl
jp
adc
cmp
sarl
movsb
add
or
enter
adc
sub
aad
adc
ja
rcrl
cltd
or
jae
and
mov
cmpsb
outsb
faddl
xchg
xor
je
movsl
in
aam
sbb
dec
ds
addb
jae
xor
push
mov
pop
out
add
pop
cmp
jmp
jno
and
aaa
shrb
jno
pop
loop
outsl
das
ret
xor
inc
push
sub
cmp
cmp
dec
sbb
test
jb
push
je
int3
lock
test
inc
aas
mov
adc
rep
jmp
xchg
mov
jecxz
add
add
push
sub
or
mov
fdivs
enter
pop
pop
or
sub
xchg
xor
adc
lods
rorb
jp
hlt
jge
test
pop
xchg
je
mov
pop
dec
or
dec
mov
aad
sub
pop
fldl
cmp
outsl
imul
loope
xchg
lds
sub
jmp
jl
xchg
aad
adc
pusha
icebp
js
dec
dec
push
mov
mov
dec
push
or
mov
push
ds
jecxz
pop
mov
aam
sub
or
loop
inc
pop
sub
push
stos
mov
pushf
jb
mov
jae
shl
sbb
push
cli
cmpb
and
sub
iret
in
lods
or
inc
repz
cmp
lret
pop
std
cmc
sahf
jbe
push
insb
call
sbb
rcrb
or
fsubr
or
or
test
or
inc
clc
push
int3
int
call
das
shlb
js
orl
out
mov
ret
sub
inc
jmp
in
or
loopne
adc
jb
cs
out
add
lret
xchg
cmp
mov
lcall
mov
mov
lret
mov
pop
stos
mov
out
std
je
fstpl
xchg
out
pop
xor
xchg
int3
mov
and
push
xchg
sub
cwtl
dec
or
mov
add
sub
jo
stos
mov
push
fcompl
vpshufd
cwtl
add
pop
sub
cmc
lret
and
stos
lds
mov
jns
int
pop
lock
mov
or
add
xor
cli
ljmp
test
push
mov
sti
sub
outsb
lods
xor
div
fisubrl
mov
mov
pop
hlt
repz
cli
ss
popa
lea
lahf
pusha
das
pop
sbb
sbb
xor
mov
mov
mov
push
cli
mov
mov
pop
mov
dec
adc
int3
sbb
movsl
cmpb
inc
subl
push
pusha
dec
sbb
subb
in
sbbb
sub
push
lock
inc
inc
jae
ja
mov
mov
mov
test
in
xchg
xor
mov
or
mov
adc
loop
push
pop
cmpb
repz
or
ror
jo
sbb
xor
push
cltd
push
inc
std
jge
scas
pop
popa
loopne
jns
insb
jecxz
inc
pop
sub
or
insl
jg
inc
mov
outsl
aas
lret
loop
sbb
push
ss
jl
imul
je
mov
fstpl
clc
and
test
xchg
psraw
enter
popa
add
push
jle
std
lea
sbb
in
pusha
jecxz
icebp
jnp
lea
bound
lods
add
mov
push
loopne
add
stc
inc
lds
scas
jbe
clc
mov
popa
sub
jbe
dec
xor
jae
xor
mov
out
jns
push
cmp
adc
adc
aaa
and
hlt
clc
mov
mov
mov
ja
jg
xchg
mov
mov
outsl
cli
into
xchg
popf
aaa
scas
adc
pop
push
test
jl
xchg
adc
jnp
fnstsw
jnp
lock
inc
adc
push
dec
push
xchg
inc
popf
jbe
xchg
jae
adc
push
and
lcall
sub
or
mov
push
ds
jnp
xchg
loop
pop
add
jmp
vpsrld
ficoms
fisubs
jnp
push
mov
push
push
xchg
sub
or
mov
pop
lret
aad
push
dec
popa
shll
xor
or
and
inc
and
mov
mov
out
mov
aaa
arpl
inc
and
mov
sub
mov
testl
sub
aaa
notb
mulb
sbb
and
mov
mov
push
call
pop
call
mov
dec
jne
pushf
xchg
xor
push
gs
xor
cmc
xor
das
jnp
cmc
mov
mov
inc
jg
lret
jbe
ja
xor
push
xchg
sbb
xchg
adc
and
daa
xchg
jb
pop
and
iret
xchg
scas
fcoml
push
mov
mov
inc
adc
xlat
popa
repnz
ficoms
cmp
push
cli
xor
add
mov
adc
mov
mov
pop
fisttps
mov
es
iret
sarl
rclb
pushf
add
jne
fnstcw
jb
inc
imul
sub
push
ret
cwtl
cli
sub
sar
inc
outsl
divl
and
stc
clc
lods
dec
and
sahf
sbb
sub
fidivrl
xchg
ljmp
leave
pushf
or
sub
add
fidivs
scas
sbb
adc
xchg
loop
dec
adcb
imul
out
lahf
fdivrl
lahf
sub
mov
aam
test
movsl
lcall
mov
mov
loop
xchg
iret
xor
pushf
ret
cld
jns
nop
fbstp
cmp
cmc
lcall
pop
cmc
jecxz
sbb
jne
push
cld
pop
jecxz
or
ret
mov
rcl
mov
xlat
push
fidivs
jl
inc
lods
mov
stos
inc
jmp
aas
icebp
cld
cltd
je
lea
jecxz
cli
push
cwtl
outsb
push
mov
push
and
xchg
or
inc
repz
ljmp
add
and
add
cltd
loopne
mov
xchg
mov
jbe,pn
into
sub
lahf
daa
pop
mov
imul
inc
cwtl
sbb
jne
lahf
fdivrs
cld
jp
jl
sbb
aas
and
fcomip
dec
out
jp
ljmp
mov
or
cmp
jo
lret
jbe
jae
jns
decl
mov
dec
mov
jne
cmp
shlb
es
adcl
push
imul
hlt
or
pushf
jno
mov
sbb
div
fnsave
add
fnsave
shrb
ds
test
mov
cld
fiadds
scas
aam
cmp
icebp
mov
adc
pop
sbb
movsb
push
jb
inc
mov
fs
jne
test
pop
insb
cld
mov
shlb
cmp
pop
sub
testb
mov
hlt
bnd
ficoms
dec
movsb
add
ja
add
inc
sahf
inc
and
rclb
decb
inc
push
cmpl
div
mov
sub
xor
lods
icebp
pop
pop
push
imul
mov
pop
xchg
jmp
shrl
xchg
in
inc
sbb
dec
es
subl
aam
xor
dec
bnd
mov
sub
mov
addr16
cli
dec
mov
xor
push
aaa
lea
fisubs
cmpsl
inc
add
out
outsl
loop
dec
cmp
pop
inc
push
leave
stc
enter
aas
notl
cmc
mov
scas
adcb
bound
imul
popa
gs
lock
mul
pop
jp
pop
out
dec
sbb
inc
adc
cmpsb
push
aas
pop
jl
loope
or
insl
hlt
push
cmp
daa
clc
out
fnstcw
loop
mov
mov
adc
gs
mov
loope
sbb
cmp
ret
cmp
xlat
push
loopne,pn
inc
and
imul
jne
mov
adc
xchg
xor
rorb
jo
jae
jmp
add
sub
sbb
aad
outsl
cmp
xchg
sbb
and
dec
addr16
add
mov
xor
jle
mov
inc
pop
fwait
fs
cld
arpl
push
dec
xchg
out
or
jb
daa
sub
outsb
jno
sbb
xchg
cmp
daa
and
call
cmp
divb
clc
aaa
xor
out
fsubs
stos
add
mov
jp
push
pusha
mov
dec
xor
or
mov
and
out
xchg
cmp
jmp
fstps
jp
mov
mov
sbb
jnp
sub
inc
daa
jmp
mov
lods
sub
adc
adc
clc
mov
add
lahf
cmpsb
xchg
sub
xchg
jae
repz
cmp
ret
addl
push
push
jbe
sub
sub
push
aaa
sti
mov
and
mov
and
insl
es
dec
mov
add
pop
push
pop
mov
int
nop
roll
dec
lock
popf
in
adc
xor
push
xor
pop
xor
jmp
pushf
shll
fdiv
fisttpl
push
xchg
shlb
out
mov
les
pop
test
jns
and
insb
loopne
mov
insl
gs
add
jmp
cltd
dec
mov
aam
cmp
and
or
xchg
dec
xrelease
test
movsb
mov
stos
dec
lcall
mov
prefetchw
std
ja
xchg
or
mov
dec
rol
mov
movsb
daa
push
pop
push
sub
sub
jl
push
out
loopne
bound
mov
jp
xor
sbbl
insb
push
les
xchg
jne
stos
mov
adc
mov
ds
push
insl
push
rorb
fidivs
in
pop
ja
mov
jg
xchg
mov
leave
ljmp
clc
mov
aaa
mov
adcl
dec
mov
and
stos
lods
adc
movsl
inc
xchg
ss
sub
mov
ficoml
icebp
repz
jns
sti
push
rclb
in
mov
mov
jmp
dec
sub
dec
fwait
std
rcrl
add
xor
call
adc
pusha
out
lea
scas
loope
call
mov
bound
test
add
and
mov
add
lret
jle
fwait
cmpsb
pop
into
arpl
repnz
sub
outsb
or
cmp
aas
and
jmp
stos
cld
inc
sub
clc
sar
xchg
adc
sbb
test
es
roll
and
imul
sub
roll
insl
and
jmp
or
add
aaa
or
out
ret
push
adc
cmpsl
pop
clc
sub
movl
iret
popa
loope
xchg
aaa
mov
add
mov
cmp
and
xchg
in
xchg
add
nop
daa
pop
mov
mov
mov
das
jg
into
pop
fs
sahf
fildl
or
sarl
movsb
cmp
xchg
pop
movsl
aam
lock
jle
cltd
jno
cmp
cs
pop
xchg
das
stc
out
mov
or
pop
xchg
sbb
dec
mov
or
pusha
pusha
jg
pop
cli
enter
xchg
jbe
mov
mov
dec
cmpb
aaa
jae
movsl
mov
xchg
add
in
out
add
jne
leave
mov
insl
ficomps
sbb
into
mov
cld
mov
pop
je
xor
adc
int
mov
pop
pop
in
in
push
xor
push
mov
cmp
and
or
lods
and
jle
mov
add
int3
insl
aas
add
in
pop
cmp
fisubrl
movsl
add
jne
dec
inc
int3
and
mov
das
cmp
dec
cmp
jo
xchg
lea
jnp
outsl
ljmp
sbb
in
cmp
jl
sbb
dec
pop
mov
inc
addr16
imul
jg
sub
testb
add
subl
mov
mov
push
sbb
shll
xchg
sub
sti
mov
jnp
arpl
and
test
xor
ljmp
in
cmp
bound
sbb
and
jae
pop
hlt
stos
xchg
inc
push
fisttpl
mov
adc
push
test
pop
or
not
out
js
fsubrl
int3
push
dec
mov
adc
in
pop
ret
mov
xor
sub
and
scas
aam
inc
sub
sub
pop
sbb
dec
iret
cmpsl
cmpsb
inc
jp
sbb
lds
mov
out
push
lock
push
in
or
adcb
dec
sub
into
int3
push
in
xchg
xchg
mov
fidivrl
out
jb
xor
jns
mov
pushf
xor
aad
loopne,pt
stc
jb
sbb
aaa
mov
sbbl
xchg
imul
dec
lds
repz
stc
fs
xchg
in
fucom
sub
rclb
sub
inc
repnz
das
mov
lret
mov
mov
es
in
fwait
gs
sarb
mov
inc
addr16
cli
push
mov
jmp
push
ret
pop
mov
fisttpl
xchg
enter
mov
rcrl
stc
ret
and
inc
iret
aas
icebp
ljmp
lret
icebp
pop
and
rolb
fistps
fs
fcos
dec
dec
mov
insb
sarl
cmpsl
or
mov
adc
cmp
and
and
add
jecxz
jge
enter
jns
out
pusha
and
jnp
cltd
xor
add
cwtl
arpl
out
dec
jbe
push
sub
adc
movsb
das
pop
imul
cmp
push
sub
stc
in
sti
mov
nop
pusha
pop
ja
std
aaa
jg
addl
xchg
or
gs
or
sbbl
stos
lret
imul
lea
test
cwtl
xchg
jae
jg
mov
das
jmp
mov
jle
adc
clc
orb
jg
pop
movsl
popa
fsubl
arpl
popfw
cmpsb
cmp
cmpsb
jp
fcoms
cs
push
cli
push
jmp
imul
or
mov
insl
int
xorb
push
adc
andb
xor
les
jno
sbb
mov
jbe
imul
xchg
dec
aaa
inc
jp
jae
jo
mov
and
nop
adc
inc
es
mov
fistps
push
fstpl
pop
jg
imul
jne
xor
cmp
adc
add
outsl
es
lret
push
incb
into
call
out
lcall
xchg
sti
gs
mov
stos
popf
lds
orl
addr16
and
sub
cmc
mov
ret
xor
pop
pop
ljmp
out
jmp
movsb
xor
pop
mov
das
enter
add
aam
in
lret
mov
subb
xchg
jge
loope
shll
mov
je
mov
out
pop
or
add
sub
mov
cmp
lcall
jmp
aam
subb
push
jno
jb
imul
dec
inc
mov
mov
xchg
jl
mov
jns
push
mov
xchg
xor
push
xchg
loope
xchg
jnp
dec
adc
pop
fcmovnbe
aas
adc
lret
mov
or
adc
sub
js
add
jg
sti
out
xchg
cwtl
divps
test
and
xchg
cld
add
mov
and
pusha
sub
shlb
dec
cmp
mov
mov
jo
inc
std
jmp
in
or
xor
jns
cmpsl
fs
jmp
xor
aam
aad
icebp
or
push
push
lret
repnz
out
and
push
aaa
pop
iret
jnp
std
fstpt
add
test
fdivrl
pop
or
dec
jg
std
sbb
scas
dec
pop
int3
adc
mov
cli
add
dec
andl
cmp
mov
and
sarl
mov
mov
lods
popf
cli
fcmovb
and
notb
stos
test
pop
rorl
dec
add
std
push
loope
pop
ja
pop
or
adc
bound
and
stc
cmp
cli
data16
cmc
and
sti
roll
and
movsb
aad
daa
jbe
stos
mov
mov
popf
mov
and
add
jae
je
xlat
lgdtl
idivl
sub
movsl
dec
nop
pop
test
xor
mov
cwtl
mov
icebp
jmp
jne
inc
decb
lock
test
mov
push
dec
out
sbb
mov
add
addr16
aad
dec
out
shll
and
mov
xchg
mov
xor
jae
add
push
pusha
mov
cmpb
adc
aas
sbb
jecxz
mov
xor
aam
cwtl
aas
movsl
mov
outsl
test
inc
negl
add
cli
repnz
cmp
dec
fs
xor
adc
xchg
popf
sahf
addr16
adc
fistpl
cltd
test
test
push
pop
outsb
idiv
adc
inc
mov
mov
sbbl
mov
xor
jo
sub
cltd
xchg
push
rcl
pop
adc
test
lock
mov
lcall
mov
xlat
xchg
or
loope
clc
sub
sarl
fiaddl
mov
or
sahf
or
adc
pop
out
and
dec
jg
scas
inc
lea
ljmp
inc
or
stc
sbb
push
rcll
mov
addr16
xorb
pusha
movsl
jl
push
mov
bound
int
cld
leave
or
icebp
cmp
dec
push
add
insl
push
fists
push
xchg
mov
add
jmp
inc
push
lea
pop
lds
xchg
mov
aas
cs
sub
mov
leave
jb
lea
or
cli
pop
icebp
adc
mov
mov
xchg
js
imul
push
mov
stos
insb
push
nop
out
leave
in
test
shrb
jne
xchg
stos
out
cmp
call
push
mov
icebp
lea
jl
insb
push
sub
jne
mov
inc
or
jno
insb
sbb
cli
dec
aaa
jns
mov
pop
add
fimull
sub
dec
insb
clc
dec
xor
add
jle
icebp
in
pop
fmull
sbbl
movsb
addr16
lock
jns
test
loop
cmp
mov
mov
jnp
ret
ret
std
or
inc
sbbl
aaa
cltd
cmp
jl
xor
sub
test
insb
xor
jnp
ja
inc
sub
fiadds
fcoms
fistpll
jnp
into
cmp
adc
inc
cmp
stc
pop
jecxz
jbe
jb
jne
xchg
sub
pop
xor
sahf
enter
sub
xchg
cmpsb
dec
push
lods
rcrl
outsb
fdivl
int
pushf
xchg
sbb
je
pop
out
push
or
or
xchg
mov
jecxz
adc
mov
push
repz
dec
nop
or
mov
rcl
in
or
testb
loopne
jnp
sbb
sub
lds
jl
xor
cmpsl
push
and
fnstenv
aas
cmp
fisubrs
dec
je
fadds
rorb
pusha
sub
add
notb
mov
adc
adc
ljmp
lea
idivl
out
test
or
push
shll
dec
pop
or
cmp
in
or
pop
jg
push
ret
cli
mov
cld
cs
mov
dec
inc
jnp
inc
jmp
push
mov
dec
xchg
and
ljmp
hlt
insb
xor
lret
scas
inc
loop
ljmp
fistps
or
imul
fwait
mov
pop
lock
mov
rol
sub
test
pop
dec
ret
outsl
mov
mov
jmp
xchg
nop
inc
or
xor
pop
rorl
or
rorb
sbb
data16
insl
sub
push
fbstp
fs
andl
xchg
xchg
outsb
fld
inc
sub
push
pop
add
cltd
int3
xchg
testl
inc
stos
outsl
dec
add
call
int3
push
std
sbb
mov
lock
jg
lahf
sub
fisttpl
std
push
mov
adc
js
add
cmc
push
add
add
fs
sbb
pop
data16
xor
in
xchg
adc
cmp
sub
dec
jne
cmpsb
mov
mov
sbb
or
pop
scas
push
loopne
in
add
outsl
in
xchg
out
xchg
pop
lds
fcompl
hlt
scas
leave
dec
xor
mov
push
sub
and
sub
lock
inc
jge
pop
sub
jnp
inc
and
cmp
or
cmpsl
pop
outsl
cmpsb
mov
xchg
jmp
push
ficoms
xchg
sbb
or
pop
clc
repnz
shl
push
movsl
mov
jne
and
stos
mov
loope
xor
out
or
inc
cs
aas
bound
leave
into
push
lods
cmp
fldcw
imul
jle
jge
arpl
mov
push
sti
xchg
std
jecxz
dec
jmp
sbb
out
dec
pop
push
inc
js
inc
lds
inc
mov
mov
sbb
jae
adc
test
jns
push
sub
cmpsb
xchg
lahf
adc
xor
xchg
xchg
xorb
sub
test
jnp
mov
je
insl
pop
pop
or
xchg
and
push
push
shr
lds
mov
mov
andl
push
adc
clc
and
mov
push
adc
or
sbb
inc
inc
dec
mov
mov
xchg
mov
in
mov
pushl
cmp
dec
fcoml
adc
out
aad
xchg
int
aad
jnp
ljmp
inc
jno
aad
mov
lock
sub
aas
pop
push
pop
push
mov
mov
stos
cld
xlat
lds
int3
pop
or
ror
shr
fs
cmp
or
xchg
mov
roll
pop
pop
popa
sbb
mov
cmc
fld
ja
in
or
leave
cli
cmp
data16
sbb
mov
ret
mov
repnz
dec
jecxz
mov
bound
inc
test
sub
pop
add
fbstp
imul
push
scas
and
ret
loope
mov
jo
fsubl
xchg
ds
loopne
dec
pushf
push
mov
add
push
cmp
or
sub
sbb
xorl
push
jecxz
pop
cmpsl
jl
out
pop
cli
pop
push
xchg
outsl
lcall
stos
add
mov
dec
inc
stos
aam
out
inc
jge
clc
mov
or
jge
dec
cmpsl
lock
jae
sub
shll
stc
lds
repz
in
sub
mov
cmp
xchg
or
orl
aam
jge
and
popa
or
gs
jle
jb
jl
xchg
mov
popl
push
and
or
mov
dec
add
fstl
sahf
pop
sbb
sub
pop
pushf
aaa
dec
add
sbb
ret
dec
push
inc
roll
movsl
pop
jecxz
rcll
inc
sbb
divb
popf
xor
inc
repnz
adcb
leave
outsb
testb
lock
clc
mov
xchg
test
inc
push
pusha
fld
lahf
xchg
mov
adc
scas
xchg
jne
sub
or
push
std
aad
sar
ret
cli
ret
or
mov
push
rcrl
hlt
cmp
inc
adc
fisubl
or
and
or
clc
movhps
xchg
mov
mov
in
dec
aas
jle
or
clc
ret
aaa
mov
mov
js
jle
add
cmp
mov
cld
or
jo
push
adc
lcall
sub
jns
inc
jb
cmc
lret
mov
mov
jnp
jb
dec
cld
arpl
fistpl
pop
pop
push
xchg
outsb
mov
cmp
xlat
pop
and
das
test
lahf
cmpsl
sbb
insb
cmp
mov
dec
stos
cwtl
lcall
push
js
push
ljmp
cld
daa
fiaddl
inc
sbbb
jno
xor
or
xchg
mov
aam
jmp
lds
mov
pushf
push
sti
xchg
cmpb
repz
and
mov
dec
pop
xchg
inc
mov
fcmovnb
fbld
std
jge
jecxz
xchg
pop
stos
sbb
lds
loop
dec
test
and
shlb
add
or
adc
sahf
pop
push
aam
jmp
shll
jae
loope
std
adc
add
clc
xlat
das
jmp
fs
sbb
sub
or
popf
pop
or
sti
aas
adc
sub
shll
repnz
incb
icebp
pop
and
xchg
cwtl
mov
pop
fmull
inc
ficoml
lret
or
pop
xor
outsb
stc
sbbl
cmp
aad
xor
ficoms
aas
ds
ret
repnz
xorb
into
fsubl
gs
mov
mov
dec
pusha
jmp
push
inc
outsl
insb
xchg
mov
mov
and
mov
sub
out
imul
mov
punpcklbw
rcrb
push
sub
dec
shr
inc
es
sub
dec
add
fistps
add
lcall
xchg
out
lret
or
lds
lods
dec
outsl
xchg
test
gs
jle
fcomi
shlb
pop
or
xor
out
adc
push
adc
sub
xor
pop
gs
js
hlt
cmc
shl
aas
mulb
mov
adc
arpl
pop
adc
fsubrl
outsl
dec
lahf
sbbl
mov
lods
sub
push
scas
repnz
mov
popf
inc
fcompl
enter
out
sub
gs
pop
fdivp
sti
mov
testl
imul
daa
mov
mov
pop
aam
jns
lea
ret
pop
out
push
adc
subb
xlat
lcall
sub
adc
sbb
adc
pop
add
adc
movsl
enter
into
add
in
xor
sbb
outsl
fs
fstpt
mov
inc
shl
imul
clc
xlat
adc
push
jmp
or
add
mov
fwait
cld
jae
test
outsl
fmull
sbb
inc
in
cld
add
pusha
aam
dec
lret
or
xchg
push
icebp
out
cmp
sub
into
mov
jbe
push
iret
cmp
sbb
nop
lock
bound
push
sbb
pusha
es
mov
in
dec
add
mov
adc
faddl
inc
jo
push
decb
cli
add
icebp
data16
pop
jmp
xor
mov
fisttpl
dec
mov
dec
xor
mov
pop
cmp
cmpsb
jl
add
xchg
and
icebp
fwait
popf
loopne
insb
test
js
movl
and
lds
cltd
push
and
jns
rcll
out
pop
xor
xor
adc
test
add
sbbl
or
push
mov
adc
cli
mov
adc
imul
jbe
into
dec
out
sbb
pop
xor
fcomp
orb
sbb
out
jl
add
es
into
outsb
pop
sub
hlt
xchg
or
jae
notl
mov
test
in
inc
cmpsl
jmp
mov
lahf
cs
ds
mov
jmp
cmp
push
mov
sbb
sahf
cwtl
mov
fdivp
mov
inc
std
ds
pop
pop
and
test
lahf
jmp
dec
push
mov
xchg
sub
ljmp
bound
enter
cmpsl
push
sub
inc
push
movsl
xchg
fadds
imul
cli
pmuludq
xchg
bound
movsl
cltd
add
inc
out
adc
sbb
inc
xchg
out
in
mov
mov
push
or
leave
adc
inc
xchg
sbb
push
mov
jg
jp
adc
cmp
pop
jl
scas
pop
push
mov
stc
inc
cmp
mov
hlt
dec
aam
jg
arpl
sbb
mov
icebp
and
outsb
ret
push
adc
fsubrs
or
test
sub
das
shll
sub
hlt
fldcw
pop
sub
in
mov
fnsave
add
loope
pop
mov
loop
int
ljmp
movsb
or
aam
and
and
iret
lods
jae
or
mov
sbb
mov
enter
mov
pop
into
xchg
push
insb
push
and
icebp
push
xor
and
pop
mov
add
adc
sub
les
lea
shr
test
mov
jbe
leave
mov
loopne
in
cmp
inc
sub
mov
xchg
pop
add
jg
out
pushf
es
xchg
or
push
flds
jg
cs
or
mov
test
dec
mov
pop
jmp
cmp
lahf
fimull
sbb
leave
mov
mov
pusha
mov
cmpsb
adc
or
addr16
js
ja
pop
loopne
adc
dec
cwtl
das
cmp
cmp
lock
fisubl
aam
clc
pop
push
call
sbb
mov
mov
iret
jmp
xchg
push
cmp
jno
es
mov
lds
leave
sbb
xchg
bound
ret
mov
pop
ret
loope
fcomp
pop
data16
ret
fnstsw
insl
lret
dec
out
cmpl
and
jp
xchg
loop
sbb
pushf
or
jbe
rolb
mov
push
movaps
jge
add
movsl
clc
adc
stos
mov
xchg
push
xchg
mull
out
outsl
pusha
insl
add
jl
xchg
leave
push
rolb
pop
incw
xor
mov
scas
outsl
jae
and
xor
sbb
mov
ror
xchg
fiaddl
scas
arpl
popf
cmp
gs
flds
adc
mov
orl
lgs
clc
cmp
or
cli
lcall
or
xchg
pop
psllq
fisubrs
inc
xlat
pusha
jae
pop
add
test
push
imul
add
xchg
xor
lret
enter
dec
into
push
push
lcall
lret
pop
js
cmc
mov
repz
mov
mov
stc
or
ds
cmp
sahf
ja
lcall
imul
loopne
sbb
inc
pop
mov
sbb
add
ret
cmp
push
invd
xchg
jne
negb
scas
jle
jns
repnz
cwtl
pop
sbb
pop
call
cli
mov
jge
push
aas
shr
add
cmpb
jmp
inc
add
push
jecxz
xor
sub
push
adc
inc
jo
int3
push
pop
inc
aas
push
xchg
adc
dec
ds
lods
add
cmp
mov
add
add
aad
or
aaa
or
xchg
outsl
out
xor
push
sarl
movsb
mov
xor
add
testl
test
out
shl
mov
pusha
cwtl
sub
testl
pop
test
mov
rolb
aad
aas
mov
adc
cmpsb
adc
movsb
aas
stos
call
rol
js
push
fs
mov
pop
jo
mov
mov
xchg
mov
movsb
inc
stc
outsb
mov
sbb
mov
add
sbb
insl
xchg
imulb
xor
dec
mov
enter
inc
out
fidivl
dec
jo
xchg
push
dec
ret
xor
fdiv
adc
movsb
mov
sahf
movsl
adc
orl
mov
xor
lods
cmpsl
sti
ljmp
inc
cmp
gs
movsb
push
or
or
mov
dec
xchg
cs
ficoms
jp
pop
sub
push
clc
mov
adc
xchg
and
add
leave
pop
fwait
xor
and
outsl
or
mov
sbb
push
sbb
xchg
dec
fs
xlat
outsb
dec
popf
dec
dec
ret
loope
cwtl
xor
cmp
dec
xchg
repz
xlat
xor
leave
sub
mov
inc
stos
imul
jns
mov
and
add
rcr
shrl
lds
cwtl
mov
jmp
js
ficoms
cwtl
sub
cmp
mov
pop
add
mov
and
stos
add
int3
gs
push
jmp
sarb
loop
sub
cmp
push
stc
pop
sub
testl
test
xchg
jb
repz
sub
ret
dec
mov
jmp
xor
mov
fcmovnb
fbld
jg
into
cmp
jp
jg
push
sub
jmp
sbb
dec
push
fstpl
popf
insb
mov
scas
addr16
popa
cwtl
lahf
dec
xlat
popa
mov
ja
lcall
sub
xlat
xchg
test
daa
or
cs
sbb
adc
fbstp
jns
adc
jo
in
pop
push
sub
push
jae
mov
jne
or
pop
push
pop
pop
loopne
pop
lcall
test
mov
mov
mov
xor
dec
femms
mov
fisttpl
xchg
mov
mov
cmc
adc
adc
dec
jle
inc
mov
xchg
jbe
inc
ja
adc
sbb
pop
and
inc
out
bound
push
push
lldt
repnz
mov
movl
rol
lret
xchg
and
push
in
xchg
into
xor
xlat
pop
mov
mov
rorl
jecxz
jb
push
push
add
sbb
lods
shll
push
data16
test
adc
add
ret
adc
jae
xor
incl
pusha
or
xor
mov
shl
xor
imul
nop
and
mov
data16
rcrl
jo
cmp
gs
out
ret
jo
pop
jne
dec
pop
in
pop
les
leave
out
aas
cmp
or
xor
les
loopne
add
xchg
cli
fisttpll
mov
and
cmpl
mov
lock
aad
lahf
and
push
mov
insb
or
adc
fcomps
dec
test
addl
pop
insl
jmp
jmp
cmc
and
cmp
shl
cmpsl
insl
xor
iret
movsb
lock
pop
xchg
out
jns
and
xchg
sar
add
pop
iret
pop
mov
pop
out
setl
lcall
push
push
xor
cltd
fidivrs
addl
aaa
mov
test
inc
popf
or
lods
mov
repnz
in
in
xchg
jne
hlt
sbb
cltd
int
ja
stc
shl
dec
jmp
rorl
pop
mov
iret
loopne
jg
mov
in
fisubrl
imul
lods
push
dec
cmpsl
pop
loopne
push
repnz
mov
adc
out
jmp
adc
lret
fcomps
or
xor
clc
test
or
add
push
sarb
jl
mov
sbb
and
add
dec
out
xchg
cwtl
and
mov
inc
aad
jl
fistps
mov
mov
inc
ret
sti
rcll
notb
xor
daa
cmpsl
outsl
pushf
inc
push
and
test
and
cmp
mov
sbbb
cmc
test
ret
mov
push
adcl
addr16
insl
repnz
daa
lcall
inc
push
xchg
mov
enter
test
in
push
sar
sbb
sbb
xchg
bound
std
xchg
aam
mov
inc
scas
cltd
inc
dec
mov
xor
sbb
das
pop
fldcw
push
repz
mov
pop
rcrl
fdivl
cmp
aam
mov
push
push
rcrl
push
push
sub
sub
sbb
fbld
or
xor
insb
cmp
cs
mov
bndldx
repnz
mov
loope
jp
xlat
xor
fs
sbbb
push
inc
lock
push
cltd
xchg
jb
leave
lret
into
shrl
sbb
inc
mov
sbb
sub
jns
mov
pop
mov
sbb
sahf
cli
repz
mov
ljmp
mov
xchg
push
cltd
sub
cltd
lods
lds
mov
popf
pop
aas
pop
cwtl
repz
lock
jge
cltd
pop
push
push
por
insl
mov
xor
xchg
lcall
mov
popa
mov
xchg
std
push
mov
jl
inc
out
jbe
or
jae
ret
sbb
lods
mov
rorb
test
lahf
imul
jno
cmpsl
enter
test
mov
stos
out
dec
pop
dec
jmp
lods
jl
mov
and
push
push
shl
sbb
sub
in
sub
and
movsb
fsubl
lods
es
and
sub
cmp
mov
jmp
xor
inc
mov
shll
pop
rol
xor
mov
xorl
mov
sub
mov
je
pop
popa
scas
mov
popf
les
mov
xlat
and
pop
sub
arpl
lock
bound
push
xor
cmpsl
fcmovne
sub
pushf
dec
stos
xchg
test
das
stc
cmpsl
mov
inc
fmull
xor
mov
or
loopne
lods
cmpsl
das
in
sub
fdiv
in
push
out
shrb
mov
xchg
rclb
push
mov
jbe,pn
stc
or
jns
inc
lock
mov
push
jl
adc
shl
mov
adc
sub
shll
cmpb
add
cmp
cmp
test
cltd
aad
in
aaa
mov
mov
repnz
aam
push
out
into
into
subl
test
pop
data16
sbb
jae
test
stc
aas
fnsave
cltd
pop
sahf
mov
fwait
sub
lahf
jae
lret
or
adc
fsubrl
jg
cmpsb
hlt
mov
inc
add
testl
pop
mov
enter
lret
aas
sub
lea
and
fstpt
iret
xchg
mov
pop
adc
xor
add
sbb
aad
and
loopne
shl
shlb
jg
xor
push
mov
mov
sub
push
sub
cmp
ret
in
cmp
inc
mov
add
cmpsb
test
mov
jmp
adc
push
das
pop
push
test
mov
punpckhdq
insb
push
push
divl
push
lods
pop
rclb
push
int
push
push
inc
out
scas
push
ljmp
movb
xorb
test
jp
xor
inc
std
jl
add
pop
push
xchg
inc
jg,pt
icebp
dec
xchg
push
jbe
inc
push
inc
mov
or
mov
addr16
fnstsw
mov
dec
dec
fdivs
enter
inc
ret
andl
jb
dec
mov
mov
and
mov
adc
shlb
jno
test
cmp
cmp
sub
inc
mov
cmp
xchg
enter
pop
pop
jb
push
dec
inc
mov
cld
imul
pop
or
je
xlat
mov
pop
push
rcl
dec
lock
ljmp
ja
mov
pop
and
sub
dec
dec
xor
push
lcall
fldt
cmc
xchg
mov
mov
cwtl
in
test
adc
xlat
ret
stc
mov
add
lahf
mov
push
lret
cs
mov
outsb
add
sub
dec
fs
xchg
scas
jl
mov
cltd
je
dec
or
scas
cmp
dec
dec
pop
cmp
add
xchg
sbb
sbb
out
stc
mov
daa
cltd
stc
ss
xlat
sub
jne
jg
jns
out
inc
sub
int3
popa
pop
mov
mov
fwait
out
out
sub
xchg
dec
mov
in
sbb
mov
xorl
iret
fcmovb
out
es
popa
sar
dec
inc
fisttpll
mov
xor
ficoms
std
inc
push
mov
inc
add
sub
repz
xor
std
mov
testl
push
and
dec
orb
loopne
xor
out
std
frstor
bound
fisubrs
imul
sub
clc
xchg
and
lods
cmp
aam
insl
aas
push
fs
pop
in
hlt
dec
xor
test
popa
gs
jno
aad
mov
in
cltd
mov
mov
jnp
frstor
mov
adc
aam
sti
xor
leave
xlat
pop
lahf
mov
stos
jnp
loope
pop
je
cmp
add
mov
imul
stos
push
push
adc
lret
inc
pop
inc
movsb
xchg
inc
lods
jmp
sahf
add
inc
iret
loopne
sub
push
in
pop
jecxz
jg
imul
ss
pop
rorl
outsb
mov
and
or
pop
test
adc
sahf
lock
loopne
rolb
mulb
jmp
std
sub
ret
mov
sub
or
and
jecxz
dec
lods
inc
rclb
pop
jg
test
push
xchg
xchg
jae
hlt
adc
in
mov
fildl
fistps
mov
das
ss
xor
mov
aaa
mov
and
xor
enter
divb
push
outsl
test
inc
inc
imulb
xor
sub
push
push
push
jbe
lea
jo
popa
add
mov
mov
cli
popf
out
xlat
ljmp
mov
jmp
jo,pt
pushl
adc
dec
mov
and
subl
pushf
aaa
xor
mov
push
incl
or
addr16
sbb
pop
jg
popf
xchg
daa
jg
adc
pop
or
xchg
push
pop
xchg
pop
inc
mov
jae
in
add
jmp
and
inc
cltd
jmp
ss
sub
xor
rclb
cmpsl
movsb
out
add
xchg
sahf
add
mov
pop
xor
push
xor
pop
xchg
mov
pop
add
movsb
test
sbb
adc
repnz
stos
push
mov
pushf
mov
stc
sub
test
sbbb
call
push
loope
fdivl
test
cmp
ret
cmc
ss
pop
jmp
sub
divb
outsb
jae
iret
cmp
mov
inc
hlt
lret
push
xor
cmp
mov
cltd
jnp
bound
iret
subl
inc
jae
adc
sbb
push
hlt
loope
int
mov
push
push
mov
jmp
div
xchg
lods
xor
test
xchg
outsl
cmp
dec
cld
inc
jnp
outsb
xor
pop
das
sti
xchg
mov
call
mov
mov
adc
popf
push
es
std
jle
insl
in
mov
push
js
inc
mov
jge
mov
or
into
fs
xchg
mov
adc
inc
dec
mov
in
fsubs
sti
mov
jmp
jns
xchg
mov
stos
cmp
inc
xchg
sbb
xchg
xchg
and
loopne
rcrl
hlt
imull
int
lods
mov
ja
rcll
pop
jae
sbb
cmpsl
testl
lret
jbe
cmp
outsb
dec
jl
ret
nop
rolb
lds
popf
and
movsl
pop
jmp
es
faddp
mov
and
enter
aaa
shrb
in
jns
divb
je
mov
xlat
sub
data16
into
inc
sbb
in
stos
or
mov
popa
in
das
cwtl
mov
push
test
xor
rcl
lock
lods
mov
fcmovnb
loope
xlat
gs
dec
negb
push
add
sarl
add
or
adc
dec
push
enterw
cmpsl
and
scas
inc
cmc
sub
mov
xor
js
push
mov
or
add
xchg
pxor
sub
fdivs
sbb
xor
push
aam
cwtl
push
cmpsl
xchg
ljmp
out
and
mov
in
fdivrs
repz
ret
and
sbb
leave
decl
hlt
cltd
ja
push
mov
xchg
scas
and
sub
movsb
ret
fsubl
loop
adc
sbb
mov
arpl
xchg
mov
add
mov
mov
imul
add
sub
adc
pop
xchg
jecxz
lea
je
rorb
or
pop
test
push
add
mov
sub
jnp
jne
pop
push
movsb
add
test
add
incb
ss
and
stos
add
fsubr
jnp
movsb
sub
loopne
into
or
jo
push
clc
sbb
add
leave
adc
adcl
jge
ljmp
rorl
mov
and
adc
mov
dec
jb
mov
out
xchg
jl
sub
inc
dec
aaa
fidivl
jnp
mov
xchg
xchg
xchg
rcll
xor
xchg
fcompl
cmpsb
fcmovu
into
popw
mov
xchg
xchg
test
pop
fwait
pop
sbb
imul
jl
rcl
dec
sub
jmp
mov
jecxz
pop
xor
mov
add
fldcw
pop
xor
cmpl
jge
sub
stc
and
push
sbb
test
and
stos
mov
mov
lret
pop
cmpsl
lods
clc
imul
stos
cli
or
inc
mov
xor
dec
push
call
repz
jne
mov
mov
mov
fbld
xlat
ret
aam
lock
test
dec
mov
inc
shrl
push
jl
inc
int3
fbstp
out
clc
pop
popa
xor
xchg
scas
mov
pushf
push
in
std
mov
mov
sub
xchg
mov
sub
add
or
mov
daa
push
nop
sbb
or
popa
cs
jmp
iret
and
pop
push
push
frstor
mov
je
inc
in
pop
cmpsl
js
ficompl
js
mov
imul
sub
pop
aaa
push
insl
push
xor
mov
xor
iret
and
mov
lret
push
in
dec
popf
cmp
dec
dec
jb
jge
cmp
add
dec
imul
cld
fildll
mov
out
or
aam
xchg
lcall
inc
push
ss
push
pop
push
fwait
mov
lcall
mov
or
stos
inc
test
stos
sub
fildll
sahf
test
out
mov
lds
stos
leave
pop
push
jl
jbe
test
addr16
mov
int3
push
push
cwtl
jnp
sub
jb
in
test
pop
sbb
pusha
loopne
xchg
and
cmpb
cmp
or
push
pushf
xchg
fsubl
xchg
movsb
push
push
dec
aas
push
in
mov
fistl
inc
sub
loopne
and
pop
xor
filds
mov
les
or
fildll
mov
mov
sub
loopne
mov
and
cltd
imul
js
pop
and
mov
jae
sbb
pop
push
inc
or
dec
jo
sarb
fiaddl
add
xor
scas
pushf
lcall
jno
ss
sbb
mov
push
les
jg
cmp
xor
out
je
add
cmp
sbb
outsb
cmpsb
push
jae
and
push
sti
rcl
cmc
sahf
stc
jno
push
movsl
rcll
cmpsl
push
jnp
aad
das
inc
fcom
pop
push
mov
sahf
mov
jne
fucomip
hlt
sahf
sub
scas
mov
adc
movsl
mov
xor
movsb
and
stos
jmp
shll
fisttpl
fs
pop
mov
xchg
cli
lods
or
fwait
push
arpl
mov
push
sub
mov
xor
pop
inc
cltd
aas
push
jnp
add
loope
pop
shlb
scas
insb
push
push
mov
inc
in
and
js
dec
movsl
fimuls
xor
lcall
sbbw
dec
xchg
out
push
add
xor
add
lds
sub
popa
dec
or
out
fldt
adcb
sub
cvtps2pi
xchg
lea
fistpl
ss
jnp
pop
mov
push
loopne
fcoml
push
inc
fbstp
in
hlt
pop
lret
jecxz
inc
jo
push
iret
xchg
add
pop
xchg
mov
cmp
sub
pusha
sar
outsb
aas
push
insb
and
out
pop
and
and
cmpsl
ret
scas
mov
lret
cmc
inc
lock
adc
jmp
cwtl
inc
sub
pop
mov
add
jns
popa
std
lea
pop
pop
mov
cmp
insl
clc
sub
test
add
outsb
push
add
aad
sub
outsl
lods
and
or
fsts
pop
cmc
enter
ret
adc
bswap
mov
addb
dec
fcmovu
dec
xchg
setb
xchg
mov
pop
jg
mov
mov
mull
aam
mov
stos
cmp
inc
cmp
insb
mov
xchg
or
ficompl
mov
shl
inc
mov
add
fisubrs
add
mov
shlb
fcmovu
gs
dec
inc
cmpsb
jno
into
pushf
cmp
mov
int3
jbe
ljmp
add
dec
test
mov
sbb
stc
outsb
sbb
xlat
out
xchg
fldl
pop
ss
jmp
cmpsb
sub
pushf
mov
andb
push
repz
std
std
xor
popa
mov
add
jp
daa
lret
js
lods
or
frstor
filds
cli
xchg
cmp
or
mov
insl
mov
or
out
movsl
arpl
cmp
jle
mov
and
ret
inc
call
cld
push
stos
inc
jge
ja
sbb
int3
sub
adc
imul
jb
scas
loope
bound
sarb
movsl
out
ds
loopne
adc
imul
mov
leave
or
leave
popa
ret
lret
jo
cmp
addb
test
shl
push
call
lods
sbb
sub
stc
add
enter
aaa
inc
test
outsb
jg
mov
shlb
imul
or
pop
aaa
fcomp
jp
pop
rorl
lods
xor
pop
loope
in
sbb
and
mov
jno
mov
ret
loopne
bound
ss
inc
stos
int3
mov
xlat
inc
mov
cs
fcmovnbe
pop
daa
jg
mov
push
mov
leave
sbb
repnz
sub
adc
xor
jo
or
into
lock
cld
orl
out
mov
cs
or
push
test
pop
sbb
fwait
inc
dec
pop
fadds
das
leave
shlb
mov
loop
jbe
test
addl
pop
xor
ss
out
fnstsw
arpl
or
sub
cmp
rorb
push
push
out
rorl
bound
repz
cmp
fldt
shl
call
xor
in
ret
mov
fcmove
dec
jp
sbb
dec
js
dec
imul
dec
fnstcw
fldenv
dec
xlat
aad
pusha
cmp
dec
add
jno
cmp
lret
into
sbb
lret
sub
xchg
aaa
xchg
pop
xchg
pop
jge
data16
into
repnz
ja
and
pop
cmp
sbb
or
jno
xlat
xor
call
cld
rcll
mov
cmp
jno
jb
popa
sahf
jge
push
stos
jbe
addr16
aaa
add
add
call
jmp
sub
inc
or
xor
ja
test
lcall
or
sbb
or
lahf
sub
stos
fidivl
insb
out
push
dec
aam
push
mov
push
mov
ljmp
dec
ljmp
mov
push
aas
clc
cli
loope
inc
jae
sbb
or
xchg
test
xchg
pop
mov
jecxz
clc
and
or
pushf
adc
fwait
addb
mov
mov
hlt
icebp
and
xchg
adc
lret
pop
loope
xor
insl
imul
cmp
sbb
jmp
pop
pop
xlat
dec
cmpsl
stos
dec
cmp
fisttpll
dec
adc
lea
mov
sbb
dec
ss
out
mov
sub
push
lret
mov
push
test
movsb
pop
je
imul
inc
std
sti
or
loope
wrmsr
andb
push
stc
loopne
jmp
in
aaa
add
lods
pop
into
dec
push
and
and
push
mov
rol
scas
mov
test
cwtl
insb
mov
dec
das
xor
mov
mov
and
enter
loop
cwtl
leave
stos
sbb
mov
loope
adc
shrb
aam
sahf
cli
fbstp
lret
sahf
mov
push
sbb
fdivl
inc
test
movsb
std
push
xor
dec
mov
lret
repnz
sbb
or
stos
fildll
popf
push
cltd
scas
push
jmp
add
or
add
jecxz
enter
daa
cmp
sti
mov
addb
adc
cmpsl
subb
adcl
loop
mov
cmp
out
clc
and
add
es
std
mov
lcall
stc
dec
cmp
jo
inc
adc
cwtl
sub
push
pusha
jle
and
jg
fistpll
ret
mov
mov
xchg
loope
insl
cltd
lahf
xchg
xchg
add
xorl
jecxz
aad
ljmp
and
daa
hlt
lock
adc
movsl
push
mov
mov
mov
dec
mov
mov
or
loopne
clc
and
jmp
sbb
insb
fwait
insb
aam
mov
mov
in
cmp
rclb
rcl
and
ret
js
cmp
inc
scas
push
adc
inc
test
sti
jmp
test
xchg
push
mov
cmp
push
fidivrs
pop
out
push
rorl
andl
lret
pop
pop
mov
lods
sub
jl
and
xor
xlat
adc
jp
js
push
xor
popa
jge
cmp
or
mov
repz
mov
dec
call
fdivr
push
adc
adc
insb
dec
or
mov
insl
mov
popf
sbb
or
pop
adc
fwait
adc
fisubl
adc
mov
xor
xchg
pop
pusha
add
dec
jnp
or
lds
and
xor
bnd
in
daa
push
push
stc
das
les
jne
leave
push
xor
push
jno
cmp
sbb
add
les
push
mov
out
nop
add
in
lret
flds
push
es
mov
nop
cmp
sub
je
push
push
pop
push
jbe
ljmp
push
adc
xchg
out
sub
push
mov
fldcw
sbb
int
pop
shrl
cmp
pop
mov
push
movsb
mov
jo
aad
aas
ja
movsl
sbb
sub
mov
push
pop
popa
xchg
push
jae
and
mov
test
jge
or
std
sti
int
test
or
lahf
inc
sub
fwait
jae
ficomps
popf
mulb
aad
mov
scas
jbe
lea
negl
cmp
pop
jge
inc
in
cltd
loopne
inc
add
icebp
fyl2xp1
in
dec
adc
cmp
sti
scas
out
stos
inc
repnz
sahf
inc
mov
ret
in
fdivs
cmp
dec
xchg
mov
mov
jns
icebp
dec
std
pop
jo
pop
inc
lret
mov
clc
nop
fucomi
jo
pop
outsb
push
shl
mov
les
mov
dec
int3
das
sub
jge
sub
mov
dec
into
push
pop
gs
jo
icebp
inc
std
cld
cmp
jmp
jae
cli
es
inc
cmpsl
jle
mov
stos
or
lahf
xadd
in
dec
out
and
leave
data16
xchg
enter
jle
into
cld
imul
mov
cld
lods
sub
mov
lods
stos
inc
sub
jo
or
mov
je
mov
enter
dec
sbb
xchg
push
fsts
hlt
int
out
fldcw
int3
and
ljmp
sbb
fdivrs
sbb
test
out
dec
xchg
cmpsl
in
push
rcl
mov
test
divl
cmp
lret
aas
adc
cmp
push
sbb
pushf
test
out
lahf
xchg
or
and
add
sub
sub
mov
adc
jle
push
jg
lret
fsubr
test
pop
fs
icebp
sbb
mov
outsb
jne
loope
stos
cmp
sbb
fcomip
popa
fsubrl
shll
dec
ss
aam
jg
loope
xor
mov
cwtl
mov
cmp
push
aad
jne
imul
imul
sub
imul
add
es
jns
jno
enter
mov
jbe
cmpsl
std
inc
in
xor
lea
sub
xor
adc
dec
lea
leave
loopne
clc
inc
pushl
mov
ret
pop
popf
jmp
imul
lcall
jge
cmp
lock
add
adc
incl
movsl
stos
mov
dec
ds
xchg
mov
adc
jnp
aaa
jecxz
xor
and
mov
movl
test
mov
add
pop
in
sub
push
aam
lret
fcomi
test
sbb
repz
repnz
pop
or
lock
mov
jmp
push
mov
pusha
mov
icebp
pop
and
mov
cmp
push
push
add
add
cmpsb
inc
out
push
pop
jo
jl
lahf
mov
ds
dec
or
and
push
dec
scas
out
sub
or
lret
adc
mov
adc
cmp
sub
push
mov
dec
cli
pop
sbb
inc
outsl
out
sub
inc
cmp
dec
jns
add
inc
push
xlat
sub
gs
sbb
pop
loopne
add
inc
loope
das
addb
shlb
adc
xor
in
out
fcomp
pushf
divl
sub
cmp
add
sub
mov
shll
out
cmp
jae
xchg
xchg
and
inc
int
mov
cmp
and
mov
scas
addr16
or
loop
std
mov
fisubrl
ds
cmpsb
sbb
jg
mov
popa
jns
loopne
jbe
subb
mov
sbb
lahf
movl
mov
dec
repnz
push
jbe
aad
push
lcall
mov
and
call
inc
test
popf
in
mov
rcrb
stc
je
pop
inc
sbb
frstor
jle
aad
into
push
popl
adc
pop
gs
push
push
movsb
bound
nop
shll
mov
ret
popf
inc
repnz
gs
lret
scas
stos
and
daa
lcall
sub
xchg
cmpsb
pop
mov
mull
push
invd
xchg
cmpsl
add
pop
lock
in
cmp
cld
imul
xchg
movsb
sub
inc
push
lret
lcall
push
cmp
clc
pop
popf
cmp
sub
xor
orb
sub
insl
xchg
mov
add
imul
cmp
das
insl
fstpl
mov
mov
fimull
lret
mov
adc
cmp
cmp
cmp
add
lods
push
pop
cmc
add
jmp
cmp
ss
jmp
icebp
adc
inc
fstpl
test
ja
xchg
push
jle
loopne
and
aaa
dec
es
mov
dec
mull
mov
rclb
sbb
mov
jne
dec
jnp
in
iret
roll
dec
xchg
mov
mov
push
scas
mov
test
xor
int3
xchg
adc
or
mov
les
icebp
jge
jns
mov
and
aas
mov
shrl
lret
test
push
pop
sti
mov
js
sub
push
into
pop
sarb
push
dec
jno
daa
adc
inc
and
mov
outsb
in
pop
iret
fstpt
lea
aad
pop
add
std
mov
mov
mov
sbb
sbb
inc
mov
sbb
lret
fdivrs
cs
jbe
imul
dec
ret
add
cltd
cmp
stos
cmp
lret
adc
in
out
lods
sbb
cmp
into
add
repnz
jp
mov
cli
xchg
add
test
popfw
orl
sub
mov
mov
cltd
inc
int
jns
inc
inc
test
cwtl
nop
les
in
or
cmp
adcl
dec
ds
add
mov
or
xor
fidivs
jp
call
fwait
test
pop
push
icebp
lret
pop
adc
mov
stos
xor
fstpl
and
or
in
outsb
mov
xchg
in
sbb
hlt
or
aad
stc
mov
push
jecxz
xor
cmp
mov
mov
cmp
arpl
pop
or
sti
pusha
dec
xor
add
out
xchg
gs
sbb
jnp
xchg
mov
mov
das
aaa
insl
pop
xor
mov
mov
mov
pop
push
js
shll
in
gs
cmp
bound
lret
xor
xor
arpl
pushf
sub
leave
cwtl
cld
inc
fs
repz
movsl
xlat
test
ljmp
xchg
and
cmpsl
bnd
and
pop
popa
sahf
xchg
mov
adc
xorb
jne
jo
pop
mov
and
data16
jge
rcrl
cmp
jae
xchg
jo
aaa
popf
leave
sub
stc
std
xor
lcall
mov
fdiv
imul
loopne
addl
push
dec
jne
mov
stc
pop
shrl
adc
cmpsb
lods
push
mov
sbb
fidivrl
cmp
cs
and
je
inc
jle
jge
jns
mov
je
aam
add
mov
les
jmp
aad
adc
dec
inc
jb
into
insl
or
xchg
in
xor
sbb
cs
dec
jae
or
sti
movsl
push
or
insb
lock
pop
jo
cmpsl
clc
jo
in
mov
add
push
cmp
loope
add
push
xchg
test
stc
mov
jne
xchg
repnz
aas
out
cs
jbe
mov
and
shl
fadds
cld
cmp
pop
mov
mov
into
pop
inc
xor
fimuls
add
aas
fs
mov
and
ret
enter
sbb
pop
push
sub
ficomps
in
cli
mov
cli
out
clc
lret
and
add
fs
inc
adc
add
push
rol
sub
pop
sub
inc
pop
or
mov
xchg
sub
lret
in
mov
cmp
insb
jne
sbbl
ja
test
lret
aaa
mov
out
push
ds
pop
or
fldcw
daa
or
out
in
aaa
out
pop
xor
adcb
cmp
fsubrs
imul
mov
lods
out
insl
mov
aas
orb
jns
or
dec
daa
dec
out
xchg
mov
mov
xchg
insb
inc
cmp
xchg
mov
repz
jnp
mov
out
mov
push
xchg
aad
xorb
out
les
xchg
mov
fdivs
fnstenv
popf
sub
mov
mov
lahf
loope
stos
cmp
xchg
push
mov
jns
pop
stos
leave
hlt
loope
cmp
jg
repnz
scas
out
lods
jo
mov
xchg
loopne
rcrl
stc
push
mov
mov
pop
movsl
sub
and
jno
negl
or
ret
popl
push
mov
sub
movsl
lock
andb
cmp
pop
cmc
sub
sbb
test
dec
scas
mov
lock
nop
cmp
addb
rcrl
and
pushl
or
cmpsl
jecxz
xor
leave
inc
mov
les
gs
cmp
pop
mov
mov
imul
repz
jnp
xchg
mov
add
mov
mov
lock
es
pop
xchg
mov
mov
mov
out
dec
out
int
addr16
adc
mov
icebp
outsb
cli
mov
xchg
xor
cmp
aas
cmp
mov
lea
fwait
sti
sbb
mov
aam
inc
mov
or
mov
mov
pusha
adc
push
add
icebp
fstpl
mov
dec
roll
inc
rclb
jb
dec
jge
cs
or
add
inc
xchg
mov
leave
outsl
test
fsubr
mov
sahf
push
out
into
push
subb
fiaddl
xor
ja
push
je
mov
inc
or
xchg
out
lret
inc
jae
mov
jl
insl
aas
daa
adc
rorl
pop
shrb
xchg
push
jg
jae
out
dec
mov
xor
push
push
mov
jge
mov
dec
out
inc
fs
xor
and
fists
sbb
add
push
jbe
pop
sbb
inc
test
or
in
outsl
cmpsb
mov
imul
pop
xchg
ret
inc
testb
movsb
sub
mov
lods
mov
add
cmpsb
mov
cwtl
inc
adc
pop
or
push
mov
ds
xchg
mov
mov
mov
idivb
push
mov
in
pop
jp
das
cmp
mov
stc
addl
mov
pop
nop
xor
add
call
and
mov
push
pop
xor
in
mov
pop
mov
sub
movsl
aas
mov
add
lcall
dec
sub
xor
outsl
fnsave
xchg
inc
pusha
adc
shrl
movsb
adc
cmp
daa
cwtl
mov
nop
movsb
and
movsl
push
out
dec
clc
sub
xlat
ljmp
cmpsb
arpl
lock
out
out
lahf
dec
cltd
jae
das
add
adc
cmpb
cwtl
les
inc
fwait
xor
andb
or
mov
jle
daa
leave
mov
sahf
pop
xchg
repnz
xchg
cmp
xchg
test
xor
std
cmpsb
adc
push
pusha
mov
jb
mov
fistl
stos
push
aam
xchg
sbbb
cmpsb
mov
fstpl
fsts
mov
iret
jb
lahf
cli
xor
cmp
mov
xchg
mov
aad
aam
out
in
sbb
js
push
xchg
ljmp
jle
mov
mov
push
jns
sbb
test
adc
mov
xor
rolb
rcrl
out
or
out
xchg
jle
das
mov
aas
jo
ljmp
repz
or
dec
adc
outsl
orb
cwtl
fs
dec
cmpsb
xchg
push
mov
mov
xchg
int
outsb
into
pop
pop
add
inc
xchg
mov
xlat
mov
jle
cwtl
scas
out
xor
cmp
push
movsb
xor
shrb
pop
enter
jg
xchg
leave
xor
cltd
mov
std
mov
test
sub
sub
or
movl
cmp
add
nop
fwait
push
pop
push
ljmp
cmp
sbb
mov
inc
cwtl
scas
adcl
jecxz
dec
int
fcoms
int3
xchg
jp
push
fwait
pop
cli
stos
stos
ss
fsubrl
imul
mov
insb
dec
xor
mov
add
xor
cld
addl
roll
mov
lods
loopne
sarb
adc
inc
nop
bound
imul
fsubr
in
pusha
adc
pop
push
jl
insb
pop
or
out
dec
icebp
push
aad
rorb
mov
out
and
ds
nop
nop
sub
sub
sub
lahf
bound
mov
int
stos
addr16
lret
je
je
jecxz
jmp
and
hlt
pop
mov
lahf
pop
fnstcw
and
mov
rcll
ljmp
leave
xor
adcl
and
popf
cli
xlat
out
stc
pop
jb
pop
adc
mov
hlt
fs
lret
xor
std
sub
or
std
stos
cmp
int3
sarb
sarl
xchg
mov
xchg
in
inc
push
pushf
lcall
cli
push
or
shll
dec
movsl
push
cmp
rcrl
mov
cmpsl
dec
or
mov
ds
stos
and
add
mov
dec
lods
repz
push
fldt
mov
sbbl
cmpsb
call
mov
jecxz
je
xor
dec
adc
or
sbb
inc
jg
xor
mov
loope
ss
mov
xchg
mov
les
xchg
xchg
adc
or
punpckhbw
cld
in
test
adc
mov
rcr
dec
mov
mov
inc
data16
imul
cmp
stos
and
xchg
aas
imul
fnstenv
lret
push
xchg
leave
mov
mov
pop
xchg
cmp
lcall
pop
jo
xor
push
rclb
je
xlat
out
je
lret
lods
jb
mull
push
jo
inc
jmp
cmp
mov
outsl
ljmp
xchg
stc
and
aam
mov
adc
fistps
mov
andb
lock
pop
xchg
jnp
fdivrl
inc
jmp
popf
iret
cli
addr16
scas
mov
mov
xor
or
pop
movsb
aaa
fsubs
es
xchg
cmp
xor
lock
int3
in
push
das
mov
inc
lods
pusha
add
adc
xlat
xor
testl
sarb
mov
fcmovnu
outsl
ret
and
js
mov
sub
insb
fldt
js
nop
movsl
pop
repz
sbb
ja
mov
testl
ljmp
or
xor
dec
mov
xchg
fstps
pop
adc
push
mov
adc
xchg
jle
fnsave
icebp
rcr
mov
cmp
mov
adc
lods
aaa
sbbl
sbb
inc
jbe
xchg
cmpl
mov
fdiv
or
loop
sti
les
adc
add
sub
push
sbb
or
insl
pop
sub
push
push
stos
dec
in
fdivrs
ret
add
adc
in
cmp
mov
rorl
test
cwtl
dec
mov
mov
push
or
jnp
xor
add
push
arpl
leave
dec
repz
imul
adc
sbb
ficoml
inc
aam
outsl
fwait
call
shll
lods
loope
pop
push
or
add
hlt
ror
push
int3
push
xchg
mov
sbb
decb
aam
fucompp
cmc
add
xchg
ret
lock
lock
scas
cmc
cmp
push
cli
or
out
dec
sbb
mov
push
push
dec
imul
cmc
sti
stos
jl
lods
sbb
dec
gs
cmp
sub
shll
push
imul
icebp
loopne
push
fbstp
or
xchg
dec
arpl
sbb
in
lods
pop
sbb
aaa
jo
mov
adc
jle
outsb
test
jno
rep
xor
arpl
leave
jnp
sti
mov
les
inc
mov
imul
mov
lret
rol
xor
mov
push
lea
mov
adc
jbe
ljmp
cmp
ds
push
xor
mov
mov
and
pusha
xchg
enter
outsl
dec
dec
adc
jno
pop
gs
add
cmp
testl
push
mov
ret
js
loopne
adc
mov
and
sbb
daa
mov
or
arpl
movsb
pop
insb
rcrb
xor
ss
movzwl
mov
fldt
push
and
or
lret
or
xor
fistpll
push
or
jno
shrl
aad
jne
loopne
mov
cmp
lods
cmp
push
or
jae
mov
iret
push
mov
fdivr
cmp
adc
xchg
sbb
xor
jecxz
add
lods
jge
xor
lds
call
repz
or
dec
gs
ret
xchg
mov
jne
ljmp
pop
lea
das
mov
into
scas
mov
push
fsts
sbb
dec
sub
pmaxub
lahf
cmc
arpl
imul
and
xor
push
repz
enter
aaa
jecxz
mov
xor
cmp
shlb
mov
xchg
enter
push
imulb
cmc
lahf
push
xchg
cltd
inc
dec
sub
inc
test
hlt
jbe
xor
out
sbb
mov
add
push
outsl
ret
xlat
push
mov
daa
ljmp
jo
hlt
in
lcall
sbb
sbb
test
or
jo
xchg
pushf
sbb
popf
je
jb
push
or
mov
jmp
xchg
es
ret
stc
inc
hlt
pop
mov
fwait
cs
repnz
cmpsl
adc
add
cmp
adc
push
pop
inc
repz
adcl
sbb
aas
push
ss
cwtl
daa
jmp
das
jg
pop
out
insl
pop
imul
mov
lock
sub
mov
imul
push
repnz
icebp
xchg
icebp
or
repz
call
or
out
cmp
adc
cmp
icebp
pop
mov
stc
sbb
loope
stos
jecxz
pop
mov
add
cmp
mov
imul
movsb
je
mov
inc
inc
pop
loopne
cmp
sbb
adc
push
dec
lahf
mov
push
push
jecxz
repz
ret
mov
scas
xchg
andb
jg
jnp
mov
aaa
sub
adc
aam
jg
notb
jno
pop
mov
add
jg
das
imul
cmp
js
movsb
lods
adc
scas
mov
pusha
dec
bound
clc
mov
ljmp
push
push
sbb
sub
dec
sbb
mov
pop
fmul
cli
push
and
pop
mov
out
push
mov
in
loopne
fisubrl
pop
push
loopne
jp
iret
ss
jnp
dec
imul
clc
add
outsb
fcomps
push
mov
mov
xlat
or
or
out
lahf
xchg
cmc
xor
pop
ds
lods
es
mov
pop
mov
jl
int3
cld
stos
pop
mov
in
lods
jg
sbb
mov
leave
scas
xchg
lock
pop
arpl
scas
mov
inc
std
mov
dec
or
mov
loope
cmc
ljmp
jecxz
or
rorl
push
filds
xchg
xchg
push
push
or
lahf
mov
mov
xchg
xchg
shlb
negl
lods
or
xchg
xor
push
add
xor
lret
das
add
adc
in
cli
sahf
jne
shll
and
cmpsl
cmp
sbb
insl
lret
imull
mov
popa
push
or
rorb
js
jb
sahf
movsb
inc
mov
and
sub
xchg
dec
xor
xchg
icebp
mov
mov
jb
int
clc
and
gs
shlb
outsl
js
hlt
mov
fdivp
ja
addr16
jb
iret
cmp
lods
shll
add
sub
and
divl
or
outsl
inc
push
mov
jae
and
negl
xchg
dec
int3
sub
cmc
and
daa
cmovs
jb
cld
or
dec
imul
gs
je
call
shlb
push
inc
inc
js
stc
loop
test
je
jae
sbb
test
cmp
std
mov
bound
add
arpl
fwait
lea
inc
xchg
fs
stos
ljmp
sahf
dec
fiaddl
outsb
pop
lds
mov
lcall
ja
aaa
das
and
add
xor
clc
aad
mov
mov
xor
jge
mov
cmpsl
or
xchg
test
test
xchg
and
fadd
cmc
mov
stos
push
fstpt
and
les
push
mov
push
or
lock
ja
mov
fdivs
add
aas
push
dec
push
jmp
pop
dec
xchg
rolb
sahf
or
adc
cmp
pushf
xchg
fs
repz
inc
mov
or
in
push
cs
push
ds
fisubl
adc
negl
les
inc
js
push
pop
push
push
add
in
divl
into
clc
mov
test
insl
mov
dec
addr16
xor
jbe
shlb
push
lods
jne
or
icebp
add
fwait
popf
aaa
xorl
cmp
loope
inc
or
sub
lahf
testl
pusha
xchg
lods
lods
repz
ljmp
iret
mov
pop
add
inc
ss
cmp
sbb
sub
jbe
repnz
mov
mov
cmp
mov
test
sti
add
cltd
mov
push
js
jecxz
test
popf
insb
jo
dec
pop
mov
or
negb
ds
cli
lods
xchg
dec
cmp
push
xchg
stos
movsl
roll
jmp
add
popf
fisubl
jle
pusha
call
and
cmp
cwtl
fmull
mov
shl
mov
sbb
cmc
lret
iret
push
movsl
dec
sub
and
cltd
mov
out
lods
and
out
in
cmp
rol
xor
bound
add
cs
mov
loope
cmpsb
leave
hlt
or
mov
popa
addr16
pop
push
int
jns
sbb
fiadds
imul
rcrb
out
fisttpll
outsb
pop
mov
out
movsb
push
in
mov
sar
cmc
iret
adc
gs
cltd
leave
fwait
out
xor
and
fisttps
jbe
shrl
xchg
xchg
pop
inc
rclb
loope
mov
mov
add
out
aas
xor
push
mov
cld
in
add
sti
xchg
xlat
sub
cmp
arpl
sub
movsl
push
icebp
add
lret
frstor
xchg
xchg
pushf
shlb
popa
insl
in
mov
jmp
mov
add
push
push
insb
dec
cli
push
mov
jle
fdivs
das
jge
roll
stos
mov
jb
jne
mov
sbb
push
jmp
in
mov
sahf
testl
dec
popf
imulb
mov
mov
into
cs
sbbl
mov
dec
jno
dec
pop
clc
or
add
ss
mov
cmp
insl
movsb
pushf
cwtl
xchg
shll
or
pop
mov
push
dec
mov
inc
pushf
movsl
stc
jns
stc
cmp
xchg
in
sahf
xchg
fcmovb
ret
mov
andb
adc
pop
cmp
mov
in
test
cmpsb
ja
xorb
loope
pop
lahf
lock
scas
inc
sub
test
inc
lcall
stos
pop
mov
mov
loopne
xchg
jbe
pop
jbe
pop
xchg
xchg
dec
leave
aad
or
lahf
sub
repz
push
jmp
add
mov
daa
aad
sub
nop
cltd
shlb
or
loopne
sahf
add
mov
dec
leave
ja
pop
cmc
outsl
push
adc
out
adc
and
or
jns
xchg
xor
fcoml
mov
xchg
adc
int3
sub
shll
enter
pop
cmpb
sub
mov
mov
fstl
inc
xor
mov
mov
pop
mov
lret
and
cmp
adc
lret
mov
cld
mov
push
adcl
pop
sbb
insl
cmp
ret
fcomp
jge
jo
sar
dec
fstpl
nop
jp
sub
inc
je
sub
xchg
je
xor
pop
daa
mov
mov
dec
sub
or
pop
mov
jne
mov
adc
mov
cmp
or
fadds
pop
cmp
pop
es
mov
jle
push
mulps
jns
fcmovnb
jmp
dec
lret
mov
inc
iretw
aam
outsl
mov
jns
push
jmp
mov
loop
jb
or
mov
inc
rcrl
dec
inc
aaa
icebp
mov
and
movsb
inc
sub
push
sub
in
cmp
ret
dec
xorb
push
rol
sub
mulb
sub
cmp
insb
loop
mov
jae
sub
adc
pop
scas
test
and
mov
push
xchg
dec
sub
fistl
movsl
sub
loopne
and
hlt
xchg
das
mov
dec
xchg
mov
lds
dec
sbb
jnp
into
rol
adc
aaa
sub
jle
pcmpeqb
mov
and
cmp
ds
lret
lds
xor
sub
xor
mov
inc
sbb
or
int3
je
or
push
outsl
notl
mov
push
add
int3
mov
test
movsl
and
dec
stos
ds
and
imul
out
xor
xor
out
cli
mov
mov
push
sbb
xchg
sahf
outsb
stos
pushl
pop
enter
push
dec
test
fcomip
out
int3
pop
mov
into
lods
xchg
ja
rol
outsl
push
sbb
and
push
outsb
xchg
mov
dec
icebp
cld
mov
jle
push
sub
pushf
lea
mov
inc
push
push
fwait
push
mov
mov
sub
sbb
jae
ret
nop
xchg
and
jl
mov
out
or
sbbl
and
pop
jns
sbb
imul
jno
sti
imul
add
sub
mov
lock
inc
pop
les
movsb
push
cmpsl
lock
adc
bound
ss
shlb
or
and
and
test
pop
adcb
decl
out
stos
xchg
lret
jno
subb
sarb
xchg
or
xchg
jne
icebp
ret
dec
scas
mov
je
les
lods
jle
xchg
cmc
sbb
xor
mov
ret
lods
repz
lcall
ljmp
popf
adcb
sub
stc
inc
les
addb
adc
or
cmp
divb
dec
mov
out
aad
shll
test
icebp
mov
int3
sbb
test
mov
xchg
inc
ja
sub
jbe
out
sbb
xor
add
aad
sbb
std
xchg
mov
movsb
in
adc
and
test
push
scas
jmp
test
dec
adc
fwait
int3
out
loopne
xchg
pop
inc
test
hlt
cmp
popf
jl
out
test
cmc
mov
fdivl
push
mov
pushf
adc
push
inc
subl
orb
arpl
jp
sti
jo
add
leave
xor
cmp
add
fisttps
fs
mov
cmp
pop
iret
les
lock
cmpsl
cs
call
call
in
cs
stos
imul
jb
push
ljmp
sbb
xchg
popf
mov
pop
gs
cli
dec
sub
mov
jnp
add
pop
mov
lahf
xor
pop
and
push
clc
sub
jnp
loope
shrl
leave
cmp
jo
cli
stos
lret
add
push
enter
loope
add
cltd
jmp
add
cwtl
loope
ficomps
and
xor
and
or
inc
cmp
cmp
xlat
fildll
push
inc
mov
or
mov
pop
cwtl
mov
pop
sbb
or
les
jg
dec
scas
insl
push
mov
stos
cmc
neg
out
mov
int
mov
mov
scas
xchg
aam
in
mov
cltd
mov
fcomps
aaa
jae
cli
add
jmp
sbb
inc
sub
xor
mov
in
add
or
stos
clc
mov
lret
push
pop
push
int3
pop
mov
mov
mov
sbb
mov
adc
jae
negl
jmp
sbb
dec
jge
daa
dec
hlt
pop
cli
push
ss
mov
cltd
push
sbb
adc
test
mov
add
out
leave
cmp
fdivrl
jmp
xchg
cmpb
lods
daa
in
xchg
jo
mov
and
xchg
das
mov
cltd
jae
les
pop
icebp
ljmp
out
daa
sbb
hlt
cs
mov
sub
dec
sub
ljmp
jbe
inc
mov
or
dec
xchg
jg
stos
aad
out
scas
jg
jnp
stos
cmp
mov
mov
stc
xchg
inc
cmpsb
lret
leave
push
push
pop
sbb
rorb
adc
mov
imul
stos
jb
incb
or
rorb
adc
lock
sbb
inc
sbb
cmpsl
ljmp
dec
fxam
jp
movsl
in
call
imul
or
mov
push
outsb
mov
jp
mov
sahf
stc
push
inc
daa
es
push
icebp
pop
in
inc
push
mov
sbb
adc
dec
lret
movsl
cli
mov
adc
jns
push
xor
loop
lret
mov
test
out
sub
xor
cwtl
add
dec
inc
lods
jge
outsl
in
sub
xchg
mov
jge
lods
jmp
jns
jae,pn
xbegin
lods
daa
jbe
fsubrl
mov
push
cmpsb
cwtl
je
push
leave
lods
lods
ficompl
push
adc
cmc
insl
inc
and
sub
dec
mov
movsl
cmc
ret
aad
jno
lahf
aaa
push
jae
shlb
sbb
xlat
popa
mov
xchg
or
aad
inc
clts
shll
sub
pop
push
outsb
pop
mov
lods
dec
push
nop
testb
mov
cmp
out
sbb
mov
jl
pop
and
jne
pushl
add
stos
or
push
call
mov
mov
bound
mov
xchg
sbb
fwait
cmc
xor
inc
jno
call
ficomps
lea
js
mov
das
or
cmp
xchg
dec
jnp
fidivrs
out
sub
jecxz
push
sub
cmp
adc
jae
or
lret
push
sbb
push
jns
push
cwtl
cli
jmp
jmp
mov
movsl
push
fidivrl
fwait
xor
movsl
hlt
cltd
shrb
lods
ret
cmp
mov
test
iret
or
fists
inc
jae
jge
jbe
sarb
nop
dec
push
in
push
arpl
bound
shl
leave
push
in
or
push
jne
adc
test
cmp
jecxz
mulb
in
iret
xor
aaa
insl
test
jmp
pop
cmp
lahf
jmp
gs
popf
leave
sbb
cltd
add
nop
push
inc
xchg
aad
mov
in
test
add
test
pop
fstpl
std
inc
xchg
out
cld
sub
js
out
loopne
pop
stos
xor
push
cltd
js
add
and
out
in
jae
ja
lods
push
lock
sbb
mov
jmp
insb
das
sahf
cmp
int
dec
jmp
in
mov
adc
flds
xor
jp
pop
jns
aad
or
push
mov
rol
push
adc
negl
push
hlt
jns
add
adc
sarb
lahf
adc
inc
cmp
cwtl
setb
insl
adc
in
push
out
fwait
mov
jb
lds
ljmp
mov
jne
stc
inc
enter
push
mov
jle
xchg
fs
push
aam
cmpsb
mov
cwtl
pop
call
js
nop
xor
es
inc
loopne
push
jge
xchg
std
ret
xor
mov
inc
push
xchg
aas
push
fsubr
push
and
or
dec
push
stos
stos
hlt
dec
jl
lret
xchg
sti
or
ljmp
sub
add
sbb
mov
dec
pushf
js
mov
insl
add
fwait
lods
mov
inc
cmp
hlt
add
jae
in
dec
mov
fmuls
and
stc
shl
or
mov
push
lods
jns
sub
imul
and
aas
into
push
add
inc
jbe
inc
rcrl
xor
jecxz
jae
imul
cmpb
push
sbb
sub
jno
arpl
cmp
xor
stos
dec
adc
xor
cli
mov
xchg
shrb
int
cltd
adc
fisubs
mov
fdivrs
lcall
das
outsb
popa
mov
mov
loope
cli
jne
inc
ljmp
lock
mov
pop
fistl
add
mov
in
cld
lods
aaa
test
pop
fs
mov
xchg
in
jno
out
clc
aam
sbb
ret
jo
loope
jns
sbb
ljmp
add
sbb
loop
xorl
xchg
jae
icebp
outsl
adc
sub
rclb
icebp
repz
jge
sub
mov
jl
xor
inc
mov
mov
pop
jge
bound
mov
and
add
cli
in
outsb
jns
repz
sarb
scas
les
mov
aas
scas
cli
xor
mov
out
aam
push
sbb
pop
xchg
jnp
test
jge
bound
jo
repnz
lds
int
stos
fwait
ljmp
out
cmc
jnp
add
xchg
rorl
neg
mov
cs
add
in
push
int3
or
ja
push
cmpsl
inc
xor
sar
add
sbb
add
mov
js
pop
adc
mov
push
mov
mov
xchg
les
mov
push
lock
mov
fs
xchg
cmp
jmp
cmpsl
sbb
lahf
aaa
sbb
cltd
nop
bound
lahf
cmpsb
movsb
mov
mov
mov
adc
divl
in
hlt
add
mov
push
push
mov
xor
aaa
ds
xchg
roll
push
ror
sbbb
push
loopne
ja
mov
scas
ss
and
pop
xchg
inc
pop
sbb
sbb
jle
jl
mov
lret
sub
sarb
in
jns
add
fsubs
push
leave
cmp
loope
aam
shll
lahf
int
jge
pop
jno
je
pusha
fistps
or
xchg
push
or
jge
test
aaa
pop
stc
stos
addr16
lret
jns
daa
fstl
cmp
loope
lret
lcall
cmpsb
std
clc
dec
mov
mov
pop
mov
icebp
push
inc
jne
and
into
mov
cs
mov
inc
add
js
sub
fisubrs
mov
jbe
add
mov
ds
xorl
xchg
push
inc
or
sbb
orl
in
ret
insl
loopne
or
lods
jecxz
or
int
pusha
push
mov
and
popf
pusha
arpl
mov
pop
clc
stos
cmp
fwait
xchg
pushf
push
jbe
data16
mov
outsl
mov
sbb
push
mov
mov
loopne
aaa
aaa
add
test
mov
out
sbb
inc
ja
repz
fimuls
adc
xlat
mov
rorl
out
jo
fnstsw
enter
xchg
xchg
rolb
cld
sbb
dec
movsl
test
mov
adc
or
xor
sahf
jecxz
repz
jnp
repnz
idivl
add
sbb
in
push
andb
outsb
pop
bound
lods
add
fwait
rcrl
leave
push
pop
out
cmp
xchg
push
movsb
push
popl
shl
mov
sbb
cmp
out
cli
mov
sbb
dec
repz
mov
sti
adc
cmc
xchg
jmp
mov
in
inc
jmp
cmp
xchg
roll
repnz
jecxz
cmovp
test
sahf
movsl
jne
push
scas
scas
add
outsl
push
mov
sub
mov
xchg
jp
mov
dec
sub
or
and
andl
aas
cmp
push
fcompl
xlat
aam
pop
add
mov
cltd
pop
pushf
xchg
andb
jmp
jp
roll
adc
loop
inc
pop
mov
inc
mov
fimuls
adc
fistpll
sbb
imul
mov
cmp
add
or
xlat
mov
sbb
adc
push
xchg
jo
jno
loope
xor
shl
xor
int
in
mov
inc
bnd
stos
pop
repnz
xchg
adc
icebp
in
xchg
lods
sbb
mov
mov
jns
cli
mov
hlt
mov
outsl
jecxz
lods
push
fucom
cwtl
or
dec
mov
push
and
mov
dec
adc
sub
mov
mov
mov
outsl
mov
mov
cmpsb
and
inc
popf
pop
fidivrl
cld
dec
int
cmp
mov
aaa
adc
stos
dec
sub
sub
jge
movsl
jbe
mov
mov
cmpsl
mov
insb
xor
mov
mov
aaa
xor
xor
mov
add
out
popf
dec
inc
dec
or
cmp
cmpsb
jge
mov
mov
mov
jl
into
pop
sarb
xchg
inc
mov
xor
push
jno
add
sbb
sbb
imul
push
inc
out
xor
cs
outsb
sbb
lret
mov
js
adc
divb
pusha
fwait
out
cmc
fisubl
cmp
xor
and
jae
push
adc
inc
pop
stos
dec
stc
cmp
xchg
data16
mov
shlb
jne
ja
dec
jmp
in
pop
das
mov
mov
inc
ja
xchg
cmp
xchg
scas
outsb
jl
ret
jno
lock
push
jns
adc
mov
or
lods
xor
pop
loopne
inc
inc
jns
fistps
loop
cs
lods
jmp
aam
pop
adc
out
push
dec
fmull
dec
repnz
jns
push
dec
dec
scas
jb
jne
clc
dec
daa
ds
gs
leave
fcomps
jns
aad
mov
jg
pop
adc
gs
inc
and
test
add
pushf
rorl
adc
add
flds
test
test
pop
jl
ret
sbb
xor
sub
lods
pop
rolb
jmp
dec
mov
push
in
das
xchg
test
mov
add
or
pushf
and
push
daa
imul
js
lods
and
cld
pop
sub
adc
jg
cmpsb
insl
cbtw
int
jbe
std
cwtl
push
cld
push
mov
stos
sahf
rcrl
pop
or
rclb
mov
repz
test
push
add
test
add
loop
scas
ja
out
pop
xlat
rcr
mov
or
inc
and
in
orb
cmpb
fistpll
jecxz
aas
fbld
cmp
fcom
mov
scas
sbb
mov
mov
inc
arpl
in
xchg
mov
or
jae
jns
xlat
stos
mov
decl
outsl
stc
inc
push
rcl
jae
cli
data16
lods
addl
roll
push
clc
sbb
imul
leave
aad
mov
jbe
mov
ret
sub
pop
xchg
xor
andl
paddq
mov
pop
xor
dec
mov
ja
adc
inc
fiaddl
jb
xchg
fistpll
mov
inc
adc
mov
add
xorb
mov
test
pop
jmp
add
xor
lcall
cltd
add
in
xor
sub
sub
inc
xor
fisubs
cld
shll
int
mov
outsb
cmp
jge
mov
daa
jae
dec
gs
xor
insl
fcmovnu
mov
jae
mov
sbb
inc
outsl
jbe
mov
mov
add
cmc
pop
sub
adc
fists
and
add
out
mov
int3
clc
and
std
pop
pop
inc
and
in
loope
sti
jne
stos
sbb
pop
xor
xor
dec
mov
mov
pop
and
lods
fsin
mov
adc
test
xor
fstpt
mov
jl
shl
cmp
adc
sub
sbb
mov
push
mov
mov
cltd
or
push
sarb
dec
rcrb
ja
xchg
jecxz
cmp
ret
cmp
cmp
jb
jnp
pop
add
inc
push
loop
cmp
cmc
pop
or
and
push
pushf
and
mov
push
xor
fcmove
aaa
dec
outsb
push
popa
jno
inc
sub
mov
lea
lahf
inc
and
mov
std
xchg
mov
sub
or
push
cs
push
lea
push
xchg
and
cmp
push
push
cmc
hlt
sbb
or
orl
xor
data16
push
fwait
addl
sbb
fstp
mov
faddl
fwait
lea
dec
test
push
icebp
out
mov
jg
xor
out
popl
xor
sub
sub
push
sub
sub
cmp
lods
test
mov
pop
ljmp
add
outsl
dec
or
sti
out
cmp
imul
mov
out
outsl
movsb
inc
aas
stc
mov
inc
cli
cmc
shlb
xor
and
mov
je
add
push
xchg
addr16
inc
cli
mov
leave
sbb
jmp
and
scas
inc
fidivrl
jmp
add
mov
outsl
loop
aas
hlt
xchg
and
stc
mov
iret
lods
adc
ljmp
xchg
push
mov
inc
push
or
fcomi
fsubl
inc
jb
sbbb
daa
inc
push
xorb
push
imul
push
sub
test
es
sbb
jne
and
testl
out
arpl
jne
das
fwait
lods
pushf
jecxz
and
outsb
mov
pushf
imul
xchg
rcr
cmp
xor
mov
and
pushf
pop
sub
push
push
push
ror
dec
xchg
sub
add
pop
movsl
andl
cmp
out
movsb
cmp
sbb
push
xor
sbb
mov
jbe
adc
or
sbb
fbstp
das
add
mov
fisttpll
pop
xchg
in
insl
lods
push
push
push
cmpsb
cmp
inc
jns
std
mov
lock
mov
iret
fcmovb
sbb
andl
adc
inc
movsb
lret
sub
push
dec
lcall
and
movsb
cmp
mov
jge
pop
hlt
xchg
jno
test
dec
es
popf
cmpsb
push
test
jno
mov
xchg
rcl
pop
jae
adc
sub
jg
pop
xchg
inc
lods
aaa
or
pop
mov
add
inc
adc
mov
cmp
pop
dec
cmpsb
rorl
mov
mov
rcrl
pushf
call
mov
xor
push
push
push
cmc
pop
add
shrw
push
adc
inc
sbb
mull
nop
test
cli
jg
pop
pop
and
iret
dec
and
mov
mov
shll
push
xchg
inc
jns
pcmpeqd
add
and
lock
addb
cmp
and
popf
jle
sti
xor
mov
stos
and
aad
jle
aas
mov
sbb
ss
loop
stos
daa
nop
cwtl
pop
push
cmc
push
popa
arpl
or
and
pop
push
cmp
popf
movmskps
jns
push
popf
mov
jle
sub
add
push
jbe
lea
sahf
add
loopne
ss
lgs
lret
jp
dec
js
movsl
loop
iret
pop
jae
int3
push
or
mov
aaa
adc
jne
aad
push
fidivs
xor
mov
repz
mov
sub
adc
xchg
out
and
cmc
mov
fstl
lahf
dec
lret
sbb
inc
pop
sub
lock
jns
scas
pop
or
loopne
jae
mov
add
jne
sub
inc
out
jmp
stc
mov
sbb
call
lret
push
cmp
outsl
xchg
ret
inc
jne
mov
negb
in
dec
mov
lock
in
pop
clc
movsb
sbb
jp
in
dec
sarb
popf
inc
movsl
push
ds
push
mov
push
scas
pop
sub
roll
test
inc
mov
cmp
rcrb
int3
adc
lret
int3
addr16
ja
out
pushf
mov
or
cs
sbb
cwtl
sti
inc
fcomi
aas
addr16
pushf
loopne
push
in
cli
cmpb
out
fnstcw
xor
sbb
cld
inc
outsb
sbb
add
sub
test
jno
fistpl
lea
mov
adc
adcb
and
pop
mov
enter
out
cmpsl
cwtl
int
and
mov
pushf
fpatan
loope
dec
dec
fimull
jge
jg
and
int
std
lods
mov
sbb
rcrb
jg
jle
aad
mov
ljmp
out
stos
popf
xor
leave
jne
fiadds
repz
fistpll
mov
mov
rolb
push
lahf
inc
inc
push
stos
shrl
out
ds
leave
and
mov
repnz
mov
push
test
pop
cmp
hlt
cmpsl
lds
jge
aad
or
popf
rcr
cli
fwait
push
xchg
xchg
enter
vaesenc
cmp
xor
jmp
xchg
sbb
fnstenv
sbb
mov
out
add
sbb
adc
xchg
cmp
inc
xlat
js
xchg
in
orl
jo
jl
add
inc
gs
lock
lock
sbb
xor
dec
adc
call
icebp
in
xchg
dec
addl
fadds
xchg
add
leave
outsb
lods
fbld
movb
int
outsl
jno
pop
sbb
loopne
add
rcrb
leave
xchg
mov
in
js
ja
sti
test
or
aas
ja
imul
push
xchg
int3
lret
jp
daa
add
jg
lret
clc
scas
ss
out
mov
push
inc
lret
push
repz
adc
lret
addr16
lahf
fstps
jns
fisttps
jnp
lods
notb
repz
cmc
mov
jbe
xchg
jmp
div
or
push
enter
pushl
xchg
leave
mov
es
mov
out
jb
lahf
es
mov
sbb
in
in
push
aaa
in
xor
jno
mov
dec
dec
sbb
daa
or
xchg
add
inc
imul
icebp
or
jno
cld
lret
xor
add
movsb
sbb
cmp
stos
ret
xchg
mov
mov
mov
fwait
cld
outsl
cld
clc
push
je
lods
fwait
and
mov
std
ljmp
outsb
fidivrs
add
fiadds
fistpl
fmull
in
mov
hlt
rorb
push
cmpsb
imul
cmp
jns
pushf
sub
ja
imul
push
inc
or
shl
adc
movsb
lock
mov
sbb
orb
movsl
cmp
movsb
mov
out
adcl
cli
pop
inc
push
rcll
push
imul
pop
pop
inc
pop
dec
dec
rorb
mov
inc
jg
cmpsl
push
mov
in
js
inc
imul
outsl
jle
aad
mov
into
inc
mov
hlt
aad
lahf
outsl
out
pushf
xchg
pop
std
lock
repnz
mov
fwait
rcrb
adc
pop
xor
inc
mov
negb
push
popf
jbe
enter
xchg
sti
popf
imul
ret
inc
jne
dec
mov
gs
adc
iret
lds
and
or
enter
pop
rclb
sbb
xor
js
pop
or
in
je
or
pop
test
adc
push
popf
pop
fsubp
jl
orl
or
xor
mov
paddq
jl
dec
adc
xor
aad
xchg
call
mov
mov
cmc
inc
lret
outsl
or
aam
jecxz
and
nop
push
xor
mov
push
inc
test
inc
icebp
mov
jg
xor
shll
in
or
pop
cli
subb
or
add
xor
out
xchg
adc
cwtl
dec
sub
xor
add
mov
cmpl
jnp
mov
and
xchg
push
inc
adcl
push
mov
fwait
sub
int
cld
es
lcall
fildl
push
mov
ret
test
cltd
test
adc
cmp
iret
imul
add
pop
jnp
clc
mov
andb
out
into
mov
hlt
iret
push
push
push
push
lret
icebp
xlat
lret
mov
test
push
cmc
pop
iret
xor
and
adc
mov
mov
jl
jg
inc
cltd
inc
adc
pop
cmp
fimull
rclb
ljmp
dec
push
adc
xchg
cld
aad
test
fs
aad
cmpsl
fildll
push
repnz
xchg
subl
push
in
xchg
lret
sbb
sub
xlat
add
dec
jl
movsb
mov
adc
call
test
jb
xor
adc
sbb
mov
sbb
pushl
xchg
jp
and
and
mov
cmp
and
cmp
xor
fsubr
les
mov
in
addb
ss
lret
sub
sahf
sub
sub
or
mov
cs
mov
mov
std
decb
jmp
dec
sbb
aad
mov
mov
movsl
add
pop
mov
push
jne
cmp
cmp
sbb
dec
xor
enter
cmp
or
push
xchg
int3
popa
xchg
jl
and
je
fnstsw
ret
pop
dec
mov
les
mov
out
dec
test
dec
daa
jne
fcompl
cmpsb
pusha
adc
mov
fwait
das
repnz
lret
imul
hlt
cmp
xor
mov
imul
push
addr16
inc
cmpsb
aam
movsb
cmp
sub
dec
push
dec
inc
fidivrs
sub
shlb
jo
arpl
enter
leave
pushf
mov
hlt
fwait
iret
in
mov
push
insb
jg
push
mov
rol
push
outsb
xchg
nop
xor
xchg
xor
jno
ljmp
push
loop
mov
dec
cwtl
pop
flds
mov
test
rolb
xchg
sbb
xor
xchg
ss
and
dec
cmp
inc
das
inc
stos
xchg
mov
repnz
jne
inc
movsl
xlat
test
pop
mov
out
gs
ljmp
sahf
adc
test
add
push
add
add
inc
in
mov
pusha
lahf
fwait
mov
sbb
repnz
mov
fdivp
in
and
or
add
ret
mov
aaa
adc
or
jo
pop
lods
or
leave
lea
sub
test
out
lcall
stc
xchg
arpl
mov
popf
adc
icebp
and
or
filds
sub
or
cmpsl
adc
aam
and
push
jne
xchg
jmp
sub
mov
and
popa
imul
bound
push
xchg
into
or
inc
mov
push
jns
into
fsubr
test
sbb
jne
xchg
jl
lea
cltd
bnd
mov
icebp
outsl
mov
mov
cmp
imul
xchg
cmp
popa
push
jp
cmp
jno
rorl
addb
pop
xchg
sarb
inc
rcll
mov
hlt
sub
jge
cmp
fildll
xchg
mov
scas
lahf
fimuls
enter
or
les
jno
or
or
imul
ljmp
pop
ds
mov
sub
push
push
sbb
repz
xlat
push
cmp
xchg
aam
mov
in
xchg
jno
fs
add
jbe
cmp
or
push
in
add
xchg
shlb
mov
leave
cmp
fistps
and
sbb
mov
xor
push
push
add
dec
repnz
inc
xor
lods
fldt
repz
sub
aaa
cmp
rol
call
mov
sti
jp
pop
inc
lods
jae
sti
lds
push
mov
xlat
out
insb
out
push
stos
out
jg
xchg
pop
popa
jge
mov
pop
adc
jo
sub
das
lret
mov
mov
aad
or
lahf
cmp
mov
xchg
loopne
mov
imul
fndisi(8087
jnp
or
pop
insb
fcmovnb
mov
inc
std
add
cltd
or
push
push
cmp
inc
dec
inc
cmpsb
and
aas
sbbl
mov
cwtl
inc
lock
aam
test
nop
fisubrl
cli
mov
shlb
add
xchg
mov
push
sbb
mov
cmc
stos
cmp
jl
push
imul
roll
std
and
cltd
aas
lret
in
dec
sbb
cmpsl
mov
add
jno
int
xchg
scas
mov
cld
mov
imul
ret
mov
jg
lock
push
lea
mov
roll
adc
sbb
test
xchg
push
insl
and
or
test
pop
pusha
outsl
cmc
and
iret
lcall
loope
dec
std
pop
fwait
addl
out
shrl
push
adc
xchg
sbb
das
scas
mov
mov
push
mov
inc
addr16
test
jns
bound
loope
xor
mov
inc
mov
xor
mov
cmp
mov
sbb
push
pop
mov
sub
out
mov
rcrl
scas
pop
xlat
dec
arpl
lcall
jne
cmp
inc
out
call
sbb
mov
inc
mov
push
pop
test
adc
fs
scas
mov
popa
xor
out
test
xor
mov
or
xor
bound
dec
and
push
or
inc
inc
mov
xchg
mov
inc
mov
sbb
jno
out
mov
daa
out
mov
mov
aaa
add
int
test
jmp
lods
jmp
dec
aam
adc
xor
into
imul
cltd
mov
mov
add
lcall
inc
popl
xchg
pop
xchg
push
dec
gs
inc
cmpsl
cld
repnz
cmpsl
cmp
add
mov
fxch
xchg
inc
cmp
adc
and
ret
aas
int
add
inc
clc
nopl
mov
sbb
in
xor
aam
pop
or
xchg
fstl
mov
inc
cmp
test
lods
js
imul
int3
jne
sub
mov
sbb
jmp
popa
movsb
push
xor
mov
aam
mov
or
stc
inc
in
add
and
xchg
lret
ja
pop
loope
cld
repz
shlb
jg
push
lods
push
or
mov
inc
cmpsb
pushf
imul
cs
js
pop
inc
mov
addr16
div
lock
pop
inc
pop
and
pop
and
imul
subb
dec
sbb
lret
addr16
imul
loope
sub
lret
outsb
jae
aam
xchg
mov
pop
je
sbb
aas
xchg
arpl
ja
in
xor
xor
or
sbb
push
cmp
insl
sub
inc
sbb
stc
int3
adc
in
pop
pop
loopne
mov
dec
cmp
mov
int3
imul
add
jge
ljmp
cld
ret
mov
inc
dec
mov
gs
test
inc
mov
xchg
mov
movsl
in
pop
int3
enter
in
jl
movsl
pop
push
sub
dec
call
pop
dec
jge
add
push
je
insb
daa
dec
jle
enter
dec
mov
adc
cmp
mov
insb
xlat
outsb
cmp
cmc
insl
xchg
loop
mov
sbb
mov
sahf
addr16
ss
dec
cmp
mov
nop
push
rcl
xchg
adc
sbb
nop
test
into
cmp
mov
sub
mov
daa
or
pop
and
mov
inc
xchg
sub
jl
scas
aaa
das
jbe
lcall
shll
xor
add
out
test
pop
jb
cmpsl
addr16
xor
ljmp
aaa
xor
adc
jp
cmp
push
fisubl
ret
and
das
sub
add
into
inc
gs
xlat
in
mov
mov
scas
lods
inc
xchg
es
insl
xchg
mov
mov
fimuls
mov
pop
pop
mov
lret
xchg
aas
lock
mov
int3
mov
xor
pop
loop
fiadds
popa
fsubrl
movsb
sub
jg
iret
add
mov
xchg
nop
mov
mov
jo
lock
fs
lods
pop
push
cwtl
cli
adc
cmp
lret
jmp
dec
int3
dec
jae
repz
cmp
pushf
cmp
sar
mov
pop
xlat
cmc
out
and
imul
xchg
push
lock
je
adc
xor
jl
movsb
and
and
pop
ljmp
cli
cmp
bnd
push
pop
inc
add
cmc
int
mov
inc
das
scas
sbb
repz
fldt
out
int3
or
sub
jno
pop
xlat
xchg
pushf
fdivs
add
cmp
pop
shrb
sbb
pop
addr16
dec
aam
mov
xor
popf
fwait
dec
aam
adc
add
test
mov
es
mov
mov
xor
hlt
mov
mov
fnstsw
cwtl
mov
insb
jns
pop
mov
shl
es
add
sbb
cs
out
add
mov
dec
mov
push
and
cmp
loop
dec
lret
add
adc
fisttpll
scas
xor
aas
add
mov
xor
dec
bound
lret
imul
jbe
shlb
lcall
fdivs
push
sbb
pop
pop
push
push
mov
or
je
xor
in
mov
and
sub
push
popf
jecxz
sahf
imul
sarl
imul
scas
lcall
adc
pop
adc
rcrb
dec
aad
cltd
test
adc
xchg
mov
sub
je
ss
xor
bound
mov
mov
push
dec
cld
mov
mov
loopne
inc
sub
int
lods
fsubs
or
cmp
adc
push
sub
and
in
and
clc
mov
iret
bound
aad
mov
rcrl
adc
cli
in
insl
notb
data16
lcall
bound
dec
cmc
pop
cwtl
filds
sbb
push
jge
jle
cmpsl
and
inc
jno
and
lock
shll
mov
mov
stc
sarl
or
in
clc
lcall
in
shlb
imul
or
mov
nop
popa
mov
sbb
je
or
je
je
cld
jl
xchg
xlat
lea
dec
pop
inc
xchg
sub
mov
repz
or
out
test
sbb
pushf
ja
pop
fsubp
int
aad
add
add
iret
jmp
mov
lock
popa
adc
pop
pop
and
lock
sub
dec
mov
rorb
add
jl
in
jns
test
and
dec
das
push
sbb
iret
cmp
jnp
sub
arpl
dec
sarb
jnp
adc
in
lret
out
sub
jb
mov
das
mov
stos
mov
push
and
dec
cmpl
out
jb
push
stos
push
gs
inc
addr16
shlb
je
aaa
push
add
pop
mov
out
xchg
dec
jo
loop
pop
jmp
cld
adc
cmc
leave
pop
fyl2xp1
leave
pop
scas
shl
sbb
cwtl
sbb
or
add
or
rclb
xchg
scas
scas
jb
adc
outsb
loope
push
and
movsl
or
mov
pop
xchg
shr
lea
xor
dec
insl
bound
sbb
in
adc
xchg
dec
dec
xchg
test
clc
orl
shl
icebp
jbe
imul
xor
jne
or
cmc
push
add
cld
mov
lahf
ret
jg
js
mov
push
sbb
loop
push
mov
fcomp
fidivrl
push
dec
pop
push
lods
xchg
mov
mov
push
jae
add
adc
daa
dec
outsb
mov
inc
jno
cmpsb
adc
ljmp
orl
or
sbb
scas
call
mov
inc
decl
push
mov
sti
fisubrs
ds
cwtl
and
mov
jbe
push
pop
rcll
cmp
lods
out
mov
cs
or
repz
repnz
daa
ljmp
lock
rcr
out
inc
push
in
pusha
pop
jae
lods
fs
pusha
scas
nop
mov
in
mov
or
stc
xchg
divb
popa
cmpsl
cld
inc
and
jae
sbb
test
jle
mov
ja
push
fwait
stos
jbe
jge
add
into
addl
ffreep
pop
inc
cmp
inc
push
out
ljmp
jp
sub
arpl
int3
sti
mov
fiadds
lret
adc
sbb
jp
stos
aas
mov
scas
fdivl
enter
cmc
sbb
sub
dec
mov
push
mov
vmread
and
pop
out
fidivrs
sub
ss
pop
push
inc
push
adc
mov
or
pop
push
out
xlat
test
out
scas
fisubrl
test
stos
fisttpl
xchg
stos
insb
push
pop
idiv
xor
call
mov
movb
test
or
jbe
or
lret
sbb
push
mov
dec
movsb
notl
push
jge
insb
mov
ljmp
xor
outsb
insb
pushl
mov
xor
xchg
outsl
loope
pop
dec
mov
pushf
adc
and
cmp
mov
cltd
icebp
loop
inc
or
xchg
ss
pop
and
jno
sub
inc
fdivl
adc
in
aam
mov
mov
jecxz
jo
xor
cmp
nop
test
bound
dec
push
jg
inc
outsl
add
and
fisttpll
stos
inc
daa
outsb
add
leave
andl
push
das
sarb
inc
dec
xchg
repz
and
lret
in
adc
cmc
push
cli
adc
and
inc
imul
shrl
stos
fs
ficomps
jmp
scas
pop
or
pop
daa
sub
sub
lahf
clc
xor
fsub
and
inc
mov
mov
ret
xchg
add
cwtl
rcrl
inc
mov
inc
sbbl
mov
repnz
in
lcall
sbb
xor
or
mov
pushl
gs
loop
es
ficompl
sub
sbb
cmc
imul
popf
test
jmp
xor
sti
xchg
add
xchg
inc
stos
jne
rcll
lcall
aam
stos
jns
call
cmpsb
scas
mov
jecxz
pop
loopne
nop
call
rcrl
ja
xchg
push
stos
test
adcb
sub
test
push
test
mov
lahf
out
in
push
mov
cwtl
jnp
pop
fcoms
push
popl
sub
clc
movsb
push
sahf
int3
and
repnz
aad
cmc
outsb
ds
jp
dec
dec
mov
cld
adc
imul
push
std
mov
cmp
cmp
loop
pop
out
inc
fcomps
lock
into
repz
pop
sbb
adc
push
pop
xchg
mov
imul
add
mov
jns
pop
mov
shl
clc
mov
mov
jp
pop
cs
shll
jnp
or
xor
mov
mov
xchg
out
dec
xchg
jae
aam
sub
lret
pop
mov
lcall
fiadds
mov
cltd
loope
push
mov
cmp
sub
inc
rol
es
cmc
les
scas
sbb
iret
adc
jbe
imull
int
lcall
sbb
sbb
cmc
out
xchg
in
lock
pop
data16
jle
dec
cs
cltd
fnstenv
loope
scas
xor
adc
fs
xor
xchg
fimull
and
inc
repnz
loope
adc
stos
loopne
hlt
test
cmpsb
fcom
pop
ror
sbb
adc
jl
call
aam
push
sbb
mov
fiadds
lcall
push
mov
add
test
les
popf
aas
lcall
stos
out
out
mov
frstor
mov
xor
out
enter
outsl
imulb
test
loopne
and
rcll
and
fnstenv
inc
sti
mov
repnz
and
andps
out
outsl
xchg
enter
fwait
pop
sub
out
insb
std
rolb
dec
in
xor
mov
push
add
mov
cmpsl
sbb
es
mov
cmp
testb
add
dec
stc
push
and
mov
aaa
std
testl
ljmp
mov
pop
pop
jno
sub
aad
sbb
push
pop
ss
dec
mov
aaa
outsl
insl
popa
xor
jmp
fmulp
jge
std
jno
pop
repnz
cmc
lds
fidivrl
hlt
jno
dec
dec
loope
pop
daa
popf
jbe
add
and
inc
loop
inc
jecxz
mov
xchg
xchg
dec
pop
lcall
sbb
push
fucomip
mov
jmp
rorb
outsl
leavew
sub
pop
cmp
fldt
sub
fs
enterw
fdivrs
dec
pop
cli
aaa
jnp
stos
nop
mov
faddl
rcr
dec
dec
xor
nop
imul
xchg
jbe
adc
jns
rorb
nop
jmp
cwtl
outsb
and
scas
sbb
sub
mov
push
jo
mov
inc
scas
sahf
in
dec
mov
aam
mov
sub
in
mov
add
das
push
jb
sub
dec
pop
pop
std
mov
jno
sbb
ret
xchg
into
not
mov
sub
sub
xchg
xchg
std
jl
sahf
sub
iret
movsl
rolb
icebp
loopne,pt
negb
dec
les
aaa
test
sub
or
cli
adc
rcrl
pushf
inc
rcll
scas
xchg
in
call
push
repz
mov
mov
test
sub
cli
lret
xchg
cli
popf
cmp
jns
pop
inc
xchg
mov
fcomp
jne
jg
adc
add
inc
iret
inc
mov
and
rcll
jl
scas
pusha
out
cmp
cmc
xor
fmuls
push
lret
adc
mov
inc
push
ret
mov
mov
pushf
scas
push
popa
fisttps
loope
dec
mov
fmul
cmpsl
orl
enter
rcrb
sub
push
inc
jg
xchg
cs
aaa
into
cmp
dec
push
xchg
inc
add
cmovbe
add
pushf
adc
lcall
mov
and
pop
rol
xchg
punpcklwd
push
mov
es
dec
nop
loopne
lahf
nop
add
mov
pop
loopne
inc
rol
inc
pop
xor
fisubrl
movsl
adc
out
cmp
idivb
mov
cld
pushf
xchg
or
adc
adc
call
jb
mov
pop
ja
pop
lahf
xor
inc
xor
call
pop
adc
test
aas
mov
jmp
std
call
movsl
sarl
pop
hlt
xchg
bound
int
push
or
ret
and
aas
rep
jge
or
insl
and
das
inc
mov
insb
lahf
add
push
sub
cmp
jge
and
adc
jge
stc
int
xchg
mov
xchg
jno
jp
jmp
adc
fisubrs
mov
ja
adc
and
xor
pusha
adc
cli
aam
cmpsl
aas
es
push
subb
in
ja
dec
mov
sbb
mov
sub
mov
in
popf
push
sbb
out
popa
pop
pusha
fwait
sbb
movsb
ja
loope
lcall
jle
loop
into
adc
js
mov
pushf
add
int
fwait
adc
mov
or
addl
jle
mov
sub
mov
out
add
test
mov
ds
mov
mov
pop
repnz
mov
fwait
cmp
cmp
fdivs
inc
lcall
cmpsl
inc
xor
xor
stos
ret
out
pop
lock
ret
xchg
sbb
sub
xchg
insb
push
inc
jp
and
sub
pop
outsb
orb
arpl
ficompl
jp
fs
inc
adc
out
clc
in
adc
fwait
mov
fs
in
add
push
pop
sahf
pop
pop
mov
and
scas
push
adc
cld
or
push
pop
mov
rcll
ljmp
xor
and
jmp
lods
adc
adc
inc
or
jge
push
lcall
pop
or
shr
je
ljmp
cld
mov
pop
in
ret
mov
sub
sub
cld
xchg
mov
push
mov
jmp
clc
dec
iret
and
in
mov
dec
mov
rcrl
pop
mov
scas
jg
or
and
and
cmp
adc
jb
stc
mov
enter
xor
push
inc
lcall
push
mov
mov
mov
mov
xor
mov
sub
sarb
mov
lret
and
cld
cli
mov
mov
inc
cmpsb
loope,pt
jmp
inc
cmpsl
sub
mov
xchg
sbb
dec
in
jno
out
jns
add
psrlq
test
adc
iret
ret
mov
out
int
add
mov
jmp
insb
push
pop
add
push
sbb
stc
push
mov
cmp
push
sub
out
cmp
movb
mov
xchg
adc
scas
outsb
clc
jbe
enter
in
mov
test
sub
call
mov
jle
sbb
xchg
gs
repz
mov
mov
out
dec
outsb
cli
and
ror
psubq
mov
test
pushf
movsb
popa
nop
das
push
xor
xor
jno
incb
stos
push
adc
sbb
or
cmp
push
movsl
rorl
insb
filds
cmp
lcall
sahf
mov
add
inc
pop
pusha
mov
pop
push
bound
jmp
mov
or
dec
mov
mov
divl
outsb
fisubl
and
push
xchg
mov
adc
orl
cmp
cmpsb
ss
mov
xor
es
dec
aam
fstpl
xchg
lret
dec
xor
lods
sbb
jmp
xchg
fildll
push
push
push
or
aad
mov
push
pop
sahf
mov
imul
ss
jno
push
enter
push
push
xchg
fdiv
das
daa
jle
lods
sub
idivw
push
insb
ljmp
movsl
and
mov
or
pop
jg
mov
fcompl
sarl
mov
inc
push
iretw
scas
mov
jl
mov
hlt
and
out
mov
icebp
test
push
inc
daa
sub
pop
mov
imul
in
pop
les
test
jmp
enter
push
shrb
jne
sub
pop
scas
or
stos
insb
je
outsl
notb
mov
push
push
testb
add
repnz
or
rclb
mov
or
insb
dec
sub
out
movsl
xor
lea
les
inc
mov
lea
clc
xlat
imul
cmp
or
sbb
sbb
int
push
fists
dec
mov
pop
scas
push
add
hlt
ret
mov
icebp
test
xlat
loop
mov
xchg
mov
popf
test
pop
push
nop
out
test
inc
test
ud2
xor
loopne
add
inc
adc
sbb
ja
xor
in
and
cmp
out
cmp
dec
xor
xor
filds
repnz
xchg
mov
sbb
into
andb
sahf
xor
lods
jno
loope
sub
sbb
ja
jnp
and
sbb
icebp
fcomps
clc
sub
xor
into
dec
push
adc
test
fisttpl
jno
jnp
inc
add
addl
ds
into
pop
add
cmc
mov
mov
shl
jne
lret
jne
push
and
jl
mov
add
sarb
cli
push
push
xor
adc
scas
xchg
jecxz
inc
rolb
notb
xor
imul
xor
mov
int3
imull
pop
or
daa
and
arpl
sbb
loope
add
jo
repz
test
mov
mov
scas
sbb
sti
inc
hlt
into
inc
into
mov
lods
cmp
scas
push
xchg
and
sub
jne
mov
stc
sub
hlt
aaa
and
mov
push
repnz
out
in
mov
and
sub
xchg
jmp
cmp
outsl
push
adc
and
dec
popf
stos
sahf
mov
sbb
lcall
pop
cs
sbb
jmp
sbb
xchg
pop
add
or
loopne
enter
hlt
mov
xlat
das
push
mov
dec
fsub
mov
xor
sub
out
popf
push
cwtl
adc
add
sub
leave
push
insb
xorl
les
sub
jg
cmp
xor
jnp
pop
cmp
or
ret
mov
xor
aas
in
scas
jb
xchg
or
mov
repz
sbb
cli
aaa
xorl
cmp
push
mov
jne
sbb
mov
inc
fsub
jmp
fbld
repnz
mov
jno
xchg
out
lahf
movsl
ljmp
lret
inc
repz
ljmp
lods
inc
dec
xchg
clc
jle
fstpt
divb
xor
adc
loop
sahf
sti
out
fs
test
adc
push
sar
ror
mov
test
mov
mov
fstpl
jmp
xchg
out
xlat
aad
lds
push
mov
pop
lea
movsb
jp
pop
jle
mov
jmp
pop
pop
xchg
mov
sub
mov
mov
lods
ss
adc
filds
push
pop
in
push
xchg
lcall
cwtl
xchg
addr16
mull
shll
mov
cmp
jns
daa
stc
clc
pop
pop
dec
and
push
ret
sub
push
sub
roll
loopne
lods
stos
in
mov
mov
loop
sub
sbb
cmp
lcall
cmp
dec
mov
in
jmp
mov
loop
dec
arpl
ret
out
jge
nop
push
call
fs
ljmp
addr16
fisubrs
dec
sbb
xor
sub
loop
add
nop
xchg
lea
out
gs
gs
scas
dec
adc
jno
push
xor
sub
and
rcrl
sub
js
in
mov
shr
adc
out
outsl
int
sub
xlat
inc
inc
lahf
cs
cmpsb
insl
mov
jge
sub
mov
or
inc
cs
cmp
je
popa
pop
sti
xor
popa
adc
sub
cmc
fcoml
and
xchg
stos
dec
xchg
icebp
xor
xchg
jb
adc
push
mov
imul
test
call
leave
xor
sub
sahf
pop
enter
cs
out
je
sbb
scas
mov
fcomps
or
jmp
adc
hlt
das
inc
mov
mov
pushf
icebp
sbb
jbe
dec
cmc
in
nop
aam
xor
in
mov
cmp
fldt
jns
std
pusha
jno
ret
int
and
adc
inc
jno
loope
push
and
or
ds
add
movsb
lds
std
pop
dec
mov
call
scas
sahf
add
aas
cmc
mov
jmp
scas
aad
popa
in
inc
lahf
fisubs
leave
mov
sbb
mov
xchg
mov
adc
lea
mov
adc
push
push
sub
daa
and
jg
movsl
mov
sarb
dec
mov
mov
stos
cli
lret
scas
nop
scas
cld
pop
pop
out
xchg
inc
mov
jmp
icebp
imul
push
fst
sub
std
stc
loope
mov
mov
ret
mov
xor
mov
mov
add
push
xchg
jl
dec
stos
mov
cld
stos
pop
imul
xchg
lahf
int3
cli
sbb
xor
inc
jne
dec
popa
in
pushf
enter
pop
fwait
aad
mov
cmc
pusha
mov
dec
ret
subl
cwtl
jne
call
cmp
lahf
push
dec
adc
orl
sub
dec
popa
mov
fs
in
cmc
sub
mov
push
repnz
bound
sub
stos
in
push
mov
test
jno
idivl
or
movsb
mov
test
ss
sbb
adc
enter
jb
bound
daa
jle
mov
and
mov
mov
sti
dec
les
xchg
inc
xor
leave
cli
adc
push
inc
lret
inc
push
jl
dec
popf
adc
lret
cltd
loope
xchg
sti
pop
xchg
es
cli
nop
fldcw
jmp
inc
lods
sub
in
mov
sub
pop
sbb
xlat
mov
dec
das
mov
hlt
lds
xchg
push
out
jnp
stos
jmp
cmp
push
cmc
sbb
or
mov
or
cltd
mov
pusha
cwtl
into
cwtl
les
inc
shl
dec
outsl
and
fwait
dec
xor
test
les
neg
shrl
fwait
and
xchg
fcoml
lods
add
mov
sub
jo
push
mov
in
sbb
jbe
out
insb
lahf
mov
sub
dec
out
shlb
test
jo
shl
pop
lock
ret
adc
mov
aad
fwait
dec
fbstp
loopne
mov
and
insl
lret
and
pop
ja
je
push
mov
push
dec
pop
pop
sub
jecxz
test
xchg
jbe
leave
push
xor
jg
sub
dec
xor
adc
xchg
mov
clc
mov
jnp
xor
hlt
pop
shl
outsb
mov
sbb
xchg
inc
pop
pop
sub
in
adc
mov
push
imul
sub
push
cmpsb
je
mov
jne
jmp
psubw
xchg
test
pop
cs
mov
sub
or
pop
inc
pushf
mov
xor
mov
mov
jo
push
popf
jecxz
addr16
xor
pop
iret
stc
jp
sbb
call
iret
ljmp
jns
cld
aad
sbb
jmp
int
arpl
aas
int
sbb
push
adc
sbb
dec
adc
xor
xchg
int
mov
lret
push
push
rorb
das
jno
lret
jnp
rcrl
popf
mov
sbb
lret
mov
cli
dec
sub
push
out
fcompl
cmpsl
pop
pop
sbbl
mov
adc
jle
out
xchg
scas
insb
jg
inc
inc
ret
jp
loope
push
mov
bound
scas
sbbb
shlb
push
lret
shll
lods
insb
jg
sahf
jno
jne
nop
inc
cmp
je
fstpl
xchg
lret
pop
cmp
cwtl
aam
adc
aam
shl
and
mov
cmp
jae
rcrb
push
cwtl
gs
imul
mov
sub
lret
xor
or
pop
out
insb
std
jmp
daa
lock
lock
sbb
cs
addb
mov
adc
inc
aad
mov
test
adc
mov
cltd
mov
je
out
mov
push
cli
out
scas
inc
pushl
int3
loope
lret
mov
xchg
pop
jae
sbb
xor
mov
or
dec
pop
hlt
rorl
sbb
icebp
rol
ja
pcmpgtw
sarb
scas
jne
test
or
rcrb
int
and
and
jl
ljmp
pop
jo
shrl
lret
or
fs
sti
cltd
cwtl
fs
cmc
mov
mov
sbb
scas
cmc
subb
pushl
xchg
sahf
retw
mov
icebp
stos
mov
mov
lds
mov
imul
das
jg
fsubrs
pusha
leave
pop
mov
add
adc
jmp
and
mov
pop
fld
dec
xchg
lods
lret
pop
lock
clc
push
mov
dec
and
sbbl
jo
push
popf
xchg
mov
daa
xchg
in
pop
push
lods
fiadds
sub
xchg
jb
das
lods
dec
in
or
imul
aaa
lret
lock
pop
cmpl
xlat
mov
add
jle
jecxz
shlb
pop
adc
dec
cli
cwtl
repnz
pop
fldt
mov
mov
stc
jne
lahf
loope
dec
jge
sbb
clc
pop
xchg
fistps
mov
repz
daa
rcr
sub
jb,pt
inc
in
and
out
mov
xor
test
sahf
inc
lret
cs
testl
mov
jne
adc
cmpsb
les
sbb
jno
fildll
pop
orb
fnstsw
pop
cld
xor
push
hlt
imul
bound
fstl
negl
push
add
loopne
mov
xchg
in
xchg
in
adc
ret
push
cmp
and
sbb
xchg
mov
lahf
mov
or
xor
xor
sub
fmuls
hlt
sbb
push
pop
inc
test
xchg
and
mov
popf
dec
jb
rcrb
push
push
imul
cmp
and
fwait
std
fildll
pushf
into
sbbb
mov
inc
pop
mov
adc
mov
ret
jae
mov
in
sbb
jl
push
fadds
mov
jb
push
sti
fs
inc
cwtl
or
insb
pop
decl
leave
popf
enter
scas
sbb
mov
cltd
sub
mov
and
and
inc
push
les
das
jg
repnz
pop
push
mov
popf
jne
sbb
in
and
or
mov
stos
leave
xchg
xchg
cwtl
and
test
or
push
fcoms
mov
dec
add
out
pushf
cltd
gs
clc
push
push
sbb
mull
push
pushw
rolb
scas
inc
xchg
clc
punpcklbw
adc
loope
and
shrl
ret
rolb
dec
inc
ds
scas
gs
insl
rclb
jg
sbb
pop
or
outsb
adc
ss
mov
rcrb
idivl
sbb
ret
loope
mov
xchg
inc
lods
adc
add
hlt
mov
shlb
xchg
mov
and
bts
add
jecxz
cmpl
lock
fs
repz
cwtl
dec
mov
and
cli
adc
testl
mov
test
and
das
or
fistl
ja
add
loopne
into
cwtl
fistpl
mov
inc
stc
mov
addb
and
fldl2e
push
leave
pusha
jns
loopne
mov
iret
stos
cli
or
xor
cmp
cmp
pop
add
in
bound
push
push
pop
adc
ja
test
push
sbb
gs
movsl
sbb
mov
push
xchg
stos
int
sti
mov
push
imul
mov
cmc
sti
jmp
cmp
rcrl
or
je
mov
inc
cmp
lar
iret
or
call
cltd
and
mov
ljmp
mov
setbe
out
inc
add
outsb
push
fisttpl
lret
mov
testb
icebp
mov
or
sub
mov
ljmp
roll
adcl
sbbb
or
jmp
adc
and
adc
cmp
lret
jecxz
mov
add
jmp
mov
mov
jle
rorb
pop
sub
sub
xor
fs
sub
mov
cmp
mov
push
andl
mov
xlat
mov
and
sub
cwtl
hlt
or
fucomip
outsb
pop
test
xchg
pop
mov
adc
mov
dec
push
aas
push
fstl
stos
into
xchg
mov
adcb
repnz
pop
out
jbe
xchg
outsl
loop
sbb
ljmp
or
test
mov
lret
pop
mov
lods
sub
pop
cmp
jp
ret
jnp
adc
mov
aad
mov
cmp
mov
mov
and
daa
xor
mov
sub
xor
sbb
or
jnp
js
mov
jecxz
sub
push
fwait
mov
sti
push
add
cld
lcall
shlb
xchg
shll
push
dec
push
bound
jmp
cmp
cmp
lret
dec
cmpsb
and
loope
dec
push
aam
lcall
enter
xor
adc
ja
xchg
jecxz
sbb
cmc
pop
int
popa
ficompl
inc
scas
daa
clc
xor
push
std
and
or
subl
sub
sbb
xchg
mov
stos
xor
test
mov
insb
std
adc
lds
bnd
stos
shlb
jnp
sbb
cwtl
lea
lds
rcrl
sub
mov
test
fmull
jae
mov
fwait
repz
xchg
or
out
inc
cwtl
cmp
loope
negl
mov
xchg
sbb
out
xor
jne
ret
test
std
cmp
pop
ljmp
jbe
fnstsw
lcall
push
jbe
iret
mov
ss
mov
push
clc
cmpsb
ljmp
inc
mov
push
int3
ror
scas
movsl
sub
push
test
mov
or
test
xor
in
in
xor
inc
imul
popa
mov
cmp
add
ljmp
dec
or
punpckhdq
xor
pop
mov
inc
int3
xorb
push
mov
add
hlt
push
les
or
pop
xchg
inc
fiadds
mov
xor
push
lcall
dec
ret
pop
mov
pop
dec
ret
call
jge
ret
jno
mov
test
or
jnp
sbb
adc
popa
sub
test
ss
cmc
push
inc
popa
pop
sub
icebp
test
subb
test
push
push
xchg
or
and
cld
inc
xchg
mov
xlat
call
leave
cmp
call
es
fnstcw
cli
sbb
dec
xchg
jle
cmp
movsl
sbb
mov
loop
les
sub
mov
stos
add
xchg
dec
pop
jne
cli
xchg
aad
lahf
daa
test
jle
xor
mov
mov
push
pop
adc
in
int3
mov
jno
mov
dec
mov
jne
int3
fisubl
push
jecxz
loop
sub
sub
adc
jnp
mov
push
push
sub
testl
adc
and
ret
cmp
dec
xor
mov
fidivrs
stc
ds
sub
ja
jb
mov
add
xchg
inc
loopne
xor
sahf
mov
pop
mov
jl
jmp
out
xchg
adc
fwait
sbb
push
adc
push
sub
mov
pusha
xchg
subl
jno
call
add
mov
daa
and
test
xchg
ljmp
mov
notb
shlb
cmp
lret
pop
clc
test
lock
notl
daa
and
pop
sbb
and
test
dec
and
popa
js
pop
shll
jg
cmp
xchg
loopne
mov
in
inc
mov
xchg
push
jae
xor
push
movsb
ljmp
and
mov
cmpsb
aad
repnz
push
mov
dec
lahf
out
or
cmp
nop
inc
aaa
cmp
cwtl
jl
repz
int
inc
in
push
xlat
push
xchg
push
sub
jb
fisubrl
push
adc
dec
idivl
inc
sti
or
mov
mov
out
sub
sub
mov
inc
int
nop
xchg
ret
je
enter
adc
outsb
ljmp
mov
xchg
pop
add
lea
inc
jbe
push
notb
ret
sub
mov
jo
rcr
sub
lcall
xchg
dec
and
jae
pop
jmp
enter
xor
ss
inc
loope
xchg
inc
aaa
js
inc
int3
mov
enter
xchg
cs
mov
xchg
imul
shrb
mov
stc
xchg
dec
sbb
push
out
xchg
mov
jl
sbb
cmpsb
lret
xchg
mov
popf
sbb
in
sub
jl
stos
lods
int
cmpb
jp
jge
xlat
pop
cmpsb
mov
jo
pop
movsb
push
pop
xorb
repz
dec
data16
cmpsb
and
mov
dec
and
mov
cmp
in
jge
or
dec
sti
pop
out
xchg
push
lea
and
adc
ss
ja
jne
shll
xchg
in
inc
sbbl
ja
xchg
pushf
addr16
jb
xchg
lcall
aam
jg
mov
fisttpl
stos
pop
std
inc
repnz
push
lods
cmpsb
mov
pop
sbb
dec
cwtl
sbb
inc
jb
mov
push
mov
movsl
leave
stc
xlat
jle
xorl
mov
push
rorb
cwtl
or
sub
lea
sbb
das
cmc
dec
pop
div
es
xchg
loopne,pt
jle
sub
cmpsb
shrl
aad
mov
sub
iret
mov
int
negl
cmc
xchg
adc
rorb
xor
rdpmc
and
cmpsb
pop
sub
jg
fdecstp
mov
iret
inc
nop
aas
mov
sti
in
mov
bound
add
scas
mov
pop
mov
mov
push
cmp
in
out
inc
clc
mov
adc
aas
dec
shrb
sub
and
test
dec
rolb
repz
cwtl
push
ja
mov
adc
mov
dec
or
inc
lret
mov
adc
mov
ljmp
cltd
cmp
scas
clc
ds
daa
and
mov
xor
push
add
cmp
fcompl
aas
pop
mov
adc
idivl
in
dec
testb
dec
fisubs
sub
and
xchg
adcb
mov
push
jmp
add
ja
push
and
cld
dec
fmul
icebp
mov
and
imul
loopne
js
jge
xchg
inc
pop
dec
movsl
sbb
inc
mov
dec
pop
inc
les
push
or
mov
dec
and
or
inc
nop
push
jns
lods
sbb
lcall
pop
pop
call
jae
inc
sahf
xchg
cmpsb
push
test
and
pop
enter
clc
fisttpl
lahf
insb
push
push
xor
xor
pop
imull
repz
das
push
iret
stos
into
adc
stc
and
adc
icebp
sub
loop
sbb
cmpsb
push
cmpb
pop
cmp
cmp
sbb
xor
cwtl
sub
xchg
inc
in
mov
jmp
push
sti
mov
push
sbb
inc
jbe
pop
loop
xchg
pop
mov
aad
jno
divl
mov
iret
pop
inc
mov
fldl
stos
mov
es
clc
enter
mov
jbe,pn
mov
add
dec
mov
jge
mov
cltd
pop
mov
sbb
sub
or
outsl
adc
lea
sbb
xor
pop
std
test
or
mov
sbb
push
gs
subl
cli
mov
int3
sbb
in
jle
xchg
test
mov
jnp
scas
aam
jo
xlat
push
jl
sub
scas
and
fimull
aam
adc
bound
ljmp
adc
jge
cmp
mov
jns
cmp
hlt
shl
adc
xchg
sub
into
xor
ss
pop
push
in
movsl
test
ja
icebp
lock
rolb
sti
mov
or
inc
sti
push
mov
rcrb
pop
in
js
mov
and
imul
mov
mov
cwtl
hlt
gs
inc
sub
jmp
or
xor
xchg
insb
jno
test
push
pop
insb
in
faddp
jl
scas
popf
fcoml
xor
repnz
push
gs
push
ljmp
adc
mov
mov
mov
cmp
pop
mov
adc
pusha
pushf
stc
inc
xor
inc
cmpsl
lret
mov
cmpsb
mov
push
mov
hlt
movsb
in
pmaddwd
cmc
dec
xor
cltd
dec
or
mov
loop
fiaddl
imul
stos
pop
cwtl
imull
fwait
xor
fbld
cmp
movsl
ror
mov
cmpsl
mov
add
xor
add
fsubs
add
mov
iret
sbb
dec
mov
sub
popf
lret
sub
xor
xchg
call
jno
aas
inc
lcall
arpl
fs
mov
add
stos
ljmp
jle
mov
ret
push
fnsave
enter
xor
outsl
loope
jp
push
cmpsb
cltd
xchg
mov
lea
iret
lret
cmp
mov
cmp
clc
sbb
pop
shll
not
cwtl
mov
cwtl
jmp
aas
div
add
jg
xchg
push
mov
popf
push
mov
pop
pop
mov
xchg
xchg
fxch
loope
jg
jmp
in
cwtl
xchg
loopne
lds
fcmovnb
sbb
mov
mov
movsb
and
mov
jle
dec
dec
je
mov
lods
cmp
pop
call
push
pop
mov
cmpsb
mov
sbb
push
pop
scas
sbb
call
or
dec
mov
cmp
dec
cmc
in
test
push
movsb
repz
jp
stos
mov
mov
cld
sbbb
and
mov
test
cmp
fidivrs
loopne
test
ljmp
sbb
div
ja
adc
mov
push
stos
mov
adc
add
and
ret
xor
mov
std
jb
mov
or
jp
mov
mov
mov
cwtl
and
stos
test
and
aam
repz
jmp
mov
xor
leave
push
repnz
lret
jnp
lock
or
pop
lods
icebp
sahf
icebp
jno
rolb
in
xchg
imul
or
cmp
sbb
mov
mov
test
rorb
lahf
pop
int
jg
dec
mov
movsb
aam
aaa
dec
dec
xchg
cwtl
mov
jp
mov
add
and
imul
ret
das
or
pop
inc
jns
sbb
rcr
imul
mov
or
dec
jae
sub
mov
mov
cmp
push
clc
or
aad
xchg
adc
add
xchg
into
inc
mov
test
mov
push
add
push
or
std
jno
or
sub
js
data16
push
inc
fs
and
je
mov
cmp
jle
xor
adc
pop
mov
xchg
bound
ljmp
cmp
lahf
dec
jecxz
js
sbb
jmp
movsb
shll
ds
ljmp
add
test
and
cmp
mov
repz
fwait
push
scas
outsl
jnp
adc
scas
ljmp
cltd
adc
lods
xlat
cmp
movsl
mov
test
push
xchg
adc
dec
ss
or
dec
jae
or
and
movlps
cld
add
or
ficomps
das
push
push
cmc
fsts
into
pusha
adc
ret
fildl
mulps
add
cmp
clc
cmp
into
cmpsl
inc
cmp
addr16
jecxz
imul
cmp
mov
mov
lahf
mov
pop
push
into
pop
xchg
cltd
pop
fiadds
in
std
mov
mov
fcoms
daa
xchg
mov
mull
popa
fistpl
xchg
cmc
inc
push
js
sub
push
cli
sbb
push
push
pop
stos
out
pop
fimuls
cltd
int
les
test
push
and
shlb
mov
xor
stos
fsubl
push
pextrw
inc
inc
roll
jnp
mov
repnz
mov
insl
push
js
outsl
cwtl
xchg
mov
add
pop
mov
push
je
lods
mov
lds
mov
addr16
jge
or
pop
in
xlat
cmp
jmp
or
ret
pop
call
ss
push
push
or
add
iret
xchg
mov
jae
push
out
cli
popa
jae
arpl
cli
jne
mov
test
rolb
jae
add
nop
cmp
mov
xchg
push
adc
fdivr
ret
test
add
scas
dec
cmp
xor
push
fsubrs
lea
pusha
stos
push
or
xchg
mov
test
add
mov
inc
pop
xchg
sub
frstor
and
shll
aam
iret
into
xchg
push
mov
lock
xchg
inc
pop
icebp
stos
push
faddl
mov
sub
dec
int
adc
repz
in
daa
mov
les
mov
testb
js
push
push
xchg
dec
aaa
cmp
sbb
add
xchg
in
lods
xchg
and
imul
adc
ljmp
inc
in
jb
dec
pushf
dec
dec
fs
push
pop
cmp
imul
or
mov
inc
mov
popf
ficomps
enter
je
jo
push
inc
cmp
mov
test
dec
shll
arpl
lahf
mov
es
xchg
mov
arpl
aas
sub
pop
jmp
ljmp
xor
jmp
imul
mov
daa
roll
stos
push
adc
jne
jne
add
inc
xor
stos
mov
inc
xchg
mov
dec
or
daa
arpl
cmp
push
stos
popa
push
add
cmpsl
aam
jmp
fisubs
pop
jp
sbb
ss
pop
jb
js
call
mov
movsb
push
push
ja
mov
lret
push
ljmp
arpl
jl
hlt
xorl
add
aam
mov
icebp
pop
inc
stos
inc
or
mov
mov
sub
adc
xor
outsl
pop
test
or
fwait
jmp
daa
aam
cmp
cmpsb
add
loop
jno
push
out
push
jmp
gs
popa
pusha
mov
or
in
stc
cld
xchg
inc
adc
jecxz
cmp
mov
mov
or
mov
out
out
int3
cwtl
xchg
bnd
fs
dec
xchg
imul
sub
xchg
adc
loopne
fiadds
ret
or
dec
repz
sub
fmull
ret
mov
or
gs
adc
fstpt
mul
mov
sahf
imul
xor
enter
sahf
out
xor
ljmp
inc
sub
dec
notl
xor
or
xor
adc
adc
pop
popa
dec
fwait
and
sbb
orl
push
out
int
ret
mov
fnstcw
mov
lcall
dec
aaa
xchg
pop
ss
or
imul
sbb
std
mov
push
mov
lds
jae
and
out
into
push
sbb
xchg
push
lcall
rclb
jne
cli
jmp
push
mov
xor
sahf
cmp
jl
mov
test
dec
adc
mov
add
lods
sbb
mov
les
mov
push
negb
push
movsb
mov
inc
mov
in
mov
fwait
xchg
mov
push
mov
pop
adc
roll
mov
icebp
mov
adc
sub
mov
stc
orb
mov
clc
fs
iret
pushf
pop
jb
mov
shll
pop
xor
clc
lds
gs
xchg
fdivp
scas
jecxz
cmp
dec
mov
data16
out
fwait
movl
mov
sub
pusha
mov
cli
xchg
jnp
adc
in
imul
push
mov
cmc
insl
sbb
sbb
fiaddl
shrb
js
push
negb
clc
leave
sbb
decb
test
gs
or
into
and
pop
jns
or
sahf
fidivrl
adc
or
subl
lcall
dec
outsb
cmp
std
sub
jmp
push
dec
fwait
test
sub
push
iret
rolb
pop
stos
sbb
add
jnp
cltd
daa
shlb
dec
call
ret
icebp
mov
xchg
sbb
int
sbb
xor
negb
sub
mov
ficomps
iret
movsb
sahf
mov
inc
sub
insl
movsl
cmp
push
inc
sub
sub
jae
or
dec
xor
cmpsb
xchg
or
cs
sub
jo
mov
dec
sbb
push
dec
je
bound
flds
pop
cwtl
dec
mov
stc
jae
cmpsl
hlt
mov
mov
pop
mov
dec
repz
fcmove
dec
inc
popf
repnz
push
xchg
jge
outsl
pushl
and
cmp
cli
pushf
pop
mov
sub
out
ret
cld
ret
jns
movsb
xchg
fmul
push
popa
daa
pop
fimull
and
cmpsb
mov
and
repz
or
or
push
and
inc
movd
adc
outsb
inc
aad
clc
mov
js
mov
xchg
add
or
mov
lock
dec
pop
mov
hlt
xchg
int3
or
pusha
leave
push
rclb
sbb
and
js
dec
leave
and
push
adc
jno
xor
ficomps
xchg
jmp
cltd
mov
xor
jl
xor
ljmp
add
mov
lret
mov
xor
cli
scas
mov
push
jg
mov
dec
cmc
mov
pop
and
push
fmull
jne
mov
jne
mov
mov
stc
adc
fwait
cmp
mov
mov
aas
cmc
sahf
mov
mov
push
cmp
push
push
push
stc
daa
mov
xchg
js
adc
aad
push
incb
xor
setae
enter
xchg
movsl
or
xor
in
leave
fs
test
loop
je
add
pop
xor
mov
mov
loope
cmp
imull
mov
inc
lahf
test
mov
loop
sub
cmpxchg
fwait
mov
stc
in
pushf
add
jns
sbb
push
mov
cmp
jns
movsl
adc
or
rol
insl
push
out
add
sub
fsubrl
ret
cld
outsb
inc
dec
in
inc
scas
repnz
sub
cmp
jo
imul
bound
into
xchg
aad
fistps
sub
adc
or
outsl
dec
cld
pusha
cli
push
stos
adc
xchg
into
pop
cmp
loopne
xor
xchg
cltd
jmp
fldl
pop
sbb
dec
mov
xchg
cmp
inc
outsl
movsb
testb
pop
aad
jp
nop
xor
dec
and
mov
pop
daa
mov
ja
jecxz
push
lock
sub
stos
jg
out
rorb
sub
inc
add
push
fidivl
data16
sub
inc
dec
outsl
pop
pop
sbb
or
scas
pop
mov
cmp
std
stos
shl
dec
sti
aas
add
fucomip
xchg
xor
xchg
mov
nop
subl
ret
inc
add
cmp
cmp
sbb
push
inc
mov
daa
testb
imul
rcrl
mov
fcmovnb
xchg
pop
lret
cltd
test
sbb
sbb
push
jno
pop
jp
outsl
fwait
adc
aam
repnz
in
out
mov
or
je
jne
push
mov
adc
outsb
mov
cmpsb
ret
out
icebp
mov
cmp
lea
enter
dec
adc
jae
and
adc
jl
cwtl
jg
xlat
nop
lods
in
xchg
mov
push
jle
jne
call
adc
jecxz
push
ljmp
arpl
mulb
jb
adc
pop
inc
xchg
adc
lcall
or
das
push
test
and
push
in
sub
pop
out
iret
pop
xchg
sub
pop
fildl
dec
fs
sub
mov
movb
les
jecxz
insl
rorb
push
rcll
inc
xchg
aaa
dec
fcmovnb
testl
add
nop
daa
adc
lea
aaa
in
push
arpl
scas
sbb
xlat
cmc
xchg
es
dec
mov
aas
popa
cmpsb
lea
daa
xor
pop
dec
hlt
jle
ret
repz
and
sub
cmpsl
jmp
pop
movsb
loope
jge
aaa
cltd
and
lea
addl
pop
lret
int3
fcoml
cmp
and
lds
sbbl
int
jg
and
and
xchg
adc
cmp
out
sub
test
rorb
push
jno
or
insb
mov
jno
cmp
jne
loopne
imul
add
jp
aad
test
xchg
out
fs
inc
pushf
jl
fldt
jmp
orl
pop
push
cs
jbe
frstor
sub
addr16
xor
scas
test
ss
xchg
imul
mov
fcomi
jne
hlt
or
pushf
pop
and
mov
popf
cmpsl
dec
xchg
lods
pop
or
push
inc
out
outsb
repnz
cli
shrl
pop
in
mov
dec
out
lahf
popa
cmpsb
out
inc
add
xchg
jecxz
adc
stos
jl
cwtl
rcrb
mov
mov
adc
rsm
iret
mov
jo
out
xor
sub
outsb
fsubrl
fdivs
push
js
push
cmpsl
mov
jle
dec
insl
scas
sbb
push
bound
fisttpl
cmp
je
fimuls
and
sub
adc
loop
add
push
mov
dec
arpl
sub
mov
popa
dec
dec
adc
mov
adcl
mov
fwait
mov
pusha
mov
mov
lret
xchg
mov
popa
and
xor
lds
xchg
xor
mov
pop
pop
in
inc
or
dec
adc
mov
pop
dec
into
sbb
test
outsb
sbb
cmp
sbb
dec
sub
and
bound
xchg
in
mov
addr16
aad
mov
lret
pop
jno
pushf
sub
pop
std
adc
jnp
lea
bound
jge
and
in
popf
dec
scas
and
xlat
and
jmp
aas
mov
stos
mov
and
adc
in
mov
or
fs
call
add
xor
nop
jge
insb
out
push
xor
in
mov
outsl
add
out
adc
bound
cmp
mov
dec
xor
xor
test
mov
pop
fisttpll
mov
pop
cwtl
mov
sub
inc
mov
adc
sbbl
fldt
lods
sbb
xchg
mov
push
aam
push
or
sub
push
inc
lods
sub
cmc
lock
cmp
arpl
aam
xchg
getsec
mov
repnz
jle
pop
flds
popa
es
pop
out
push
mov
ffree
mov
push
insl
inc
stc
bound
shll
sub
fucomi
push
cld
push
addb
push
orb
dec
sbb
fistps
cltd
pop
mov
icebp
mov
inc
inc
arpl
mov
into
and
push
lock
xchg
arpl
sbb
test
mov
rcll
in
xchg
test
test
xlat
cmp
cltd
sbb
xchg
lods
lcall
imul
fsubrl
lcall
push
mov
push
addr16
mov
push
inc
lret
cs
lcall
pusha
jp
add
fwait
in
pushf
mov
lock
lcall
mov
int
ja
insb
jl
add
rolb
push
push
ds
loope
add
cmp
cld
insl
push
clc
std
jge
mov
fs
xchg
scas
inc
jne
ret
push
push
jg
subb
movsb
xchg
and
incb
test
daa
inc
mov
or
jmp
xlat
scas
jno
pop
aam
ljmp
lock
or
mov
push
call
push
ret
rcrl
std
stos
jg
sbb
clc
ljmp
lods
cld
dec
push
push
lret
mov
xchg
popa
js
jns
jno
aaa
xlat
aas
mov
inc
add
cltd
test
mov
push
test
in
jecxz
fmull
ljmp
rcrl
sbb
adc
xchg
cmp
stos
out
std
dec
pop
inc
imul
mov
cmc
xchg
in
sbb
loopne
jnp
imul
fildl
adc
pop
cmp
sub
sti
mov
lea
bswap
sbb
fnstcw
mov
push
cmpsb
imulb
inc
inc
ret
ficomps
dec
pop
mulb
mov
dec
js
imul
filds
push
push
add
loope
mov
leave
jnp
lods
sub
ja
imul
stos
jl
cld
mov
xchg
jnp
xchg
add
mov
cmp
adc
pop
movsb
out
repnz
and
push
mov
xchg
or
and
mov
mov
jns
cld
mov
test
idivb
sub
icebp
mov
fwait
mov
xor
push
data16
enter
xchg
js
jle
nop
lret
mov
and
lret
popa
add
ljmp
push
in
and
push
mov
xchg
out
xchg
or
inc
cltd
inc
or
push
les
cwtl
mov
xor
mov
lock
pop
ret
dec
mov
cmpl
out
shl
lcall
iret
and
mov
pop
jb
sarl
fistpl
imul
ja
fstpt
sub
pushf
lcall
dec
adc
xchg
dec
ds
adc
rolb
push
test
push
arpl
stos
xchg
stos
dec
sub
xor
xor
mov
aad
outsb
lret
in
mov
ds
or
push
mov
fs
stc
adc
jg
rcr
mov
into
cli
mov
pop
push
out
enter
pop
test
dec
mov
repz
push
iret
push
mov
mov
fcomps
and
or
add
ja
pushf
adc
cmpsb
push
orb
sti
jp
dec
idivl
es
push
adc
mul
inc
or
js
jg
pop
cltd
lods
int
cmp
int
mov
sub
sti
cwtl
and
add
jmp
fildl
outsl
aad
push
adc
aaa
pop
sbb
fsubrp
in
pusha
fadds
inc
jbe
jle
icebp
nop
xchg
cld
mov
mov
int3
pop
cmp
adc
das
and
into
fadd
inc
jnp
jmp
mov
and
fs
shlb
jb
clc
loopne
and
es
jmp
cmp
xor
add
sbb
push
lcall
packsswb
xchg
mov
repnz
push
add
sbb
loop
mov
imul
xchg
hlt
lret
les
arpl
bound
jge
outsl
cltd
push
pop
loop
push
sarl
sub
pop
sub
movsl
push
pop
ds
inc
addb
out
or
out
mov
stc
inc
idiv
popa
jmp
sbb
adcl
dec
push
aaa
xchg
mov
and
imul
xor
mov
or
push
ficoml
xor
test
mov
imul
sahf
mov
pusha
adc
push
lock
cltd
rcl
lahf
sub
mov
jecxz
dec
push
leave
es
cmp
int3
outsl
xor
std
sub
test
add
and
mov
insb
or
add
das
aad
cmp
cmp
lods
mov
popf
inc
jg
out
enter
sub
or
sbb
cmpsb
and
cld
fmull
fstp
pop
mov
mov
movl
out
mov
dec
mov
aam
push
inc
imul
push
pop
lods
xor
jbe
inc
sub
aaa
mov
cmp
inc
ret
or
jmp
pop
pop
ds
cmp
adc
inc
cmpsl
aaa
mov
out
push
inc
out
pushf
pop
ret
stc
fs
mov
inc
bound
sbb
mov
movsl
inc
leave
stos
in
or
mov
dec
sub
xor
pop
inc
pop
inc
lret
mov
repnz
rcll
push
adc
push
loop
xorps
dec
mov
pusha
aas
sbb
jnp
mov
xor
or
lea
sbb
gs
mov
lret
add
iret
ret
xchg
in
add
popf
je
adc
mov
pop
xor
testb
pop
je
dec
mov
fmuls
ja
cwtl
jbe
fs
mov
sbb
mov
in
popa
pop
sub
jae
xor
faddl
popa
aad
push
sbb
pop
aaa
int3
push
xlat
test
test
jmp
rolb
xor
inc
movsl
pushf
mov
je
pcmpgtb
inc
in
xchg
into
les
cmp
iret
mov
gs
and
std
stc
push
xlat
aas
cmp
pop
cs
add
push
psubsb
jp
dec
jnp
add
inc
pop
cmpsb
dec
add
cmp
inc
clc
mov
sbb
push
mov
daa
sahf
xor
popf
in
ljmp
push
fdivs
adc
enter
adc
es
sub
inc
jmp
xchg
push
ljmp
clc
clc
push
mov
and
pop
pop
add
sub
hlt
inc
pop
adc
hlt
dec
sbb
jno
mov
ja
sbb
pop
jmp
cmp
pop
popa
sti
ljmp
insb
sbb
inc
hlt
jg
mov
adc
insl
push
pop
mov
fmul
int3
pop
mov
mov
push
sub
mov
lahf
push
pop
jnp
xchg
pop
jae
or
xbegin
rol
or
sarl
loopne
loope
mov
cmc
mov
scas
in
ficompl
hlt
cmp
pop
xorb
lcall
dec
xor
cwtl
push
in
xchg
xchg
mov
bound
fwait
add
mov
in
cwtl
pop
int3
in
dec
std
fstpl
pop
xor
fs
inc
cmpb
push
shrb
jle
push
ss
sbb
xor
fdiv
jecxz
lods
icebp
inc
out
inc
mov
add
xchg
add
push
jmp
dec
fwait
xor
cmp
cmc
and
pop
dec
push
xchg
outsb
fwait
mov
sbb
cli
xchg
add
nop
iret
pop
push
scas
mov
sbb
js
cwtl
imul
mov
pop
dec
xchg
lock
inc
xchg
cmp
mov
iret
mov
daa
xor
fisubrs
lock
mov
sbb
and
rcrb
std
mov
xor
cmp
loop
into
stos
sub
sub
scas
pop
stc
mulw
pop
int3
dec
and
out
sub
lret
stos
jmp
shll
sbb
inc
push
adc
ret
cmpsb
adc
sarl
xor
xor
jmp
mov
inc
mov
and
mov
repnz
repnz
ror
int3
adc
imul
inc
dec
mov
sti
or
adc
adc
enter
js
nop
js
cmp
dec
dec
in
test
sub
xchg
sarb
mov
sahf
sub
and
pusha
mov
js
fistpll
pop
out
int3
sbb
insb
mov
popa
push
sub
jns
rolb
lock
mov
dec
jnp
mov
xchg
xchg
mov
cltd
push
and
idivl
adc
cmpsl
lods
jg
je
pusha
movsb
jns
enter
test
mov
push
dec
add
inc
dec
dec
rol
sbb
dec
out
xor
test
loop
fnsave
xchg
sahf
adc
test
sti
or
leave
xchg
outsl
dec
add
in
ss
cmp
lahf
movsb
addl
xchg
add
mov
in
loop
stc
cmp
mov
repnz
fs
sti
dec
xchg
cmp
xchg
rol
les
xchg
insl
ret
mov
lcall
xchg
ja
adc
add
popf
jle
push
loop,pn
push
cltd
test
mov
pop
mov
dec
inc
push
xchg
cltd
xor
jno
es
insl
fldenv
pop
mov
mov
and
ljmp
jmp
or
fstpl
mov
aad
fcmovbe
loope
scas
int3
push
or
inc
daa
xchg
mov
sbb
aaa
pop
inc
and
imull
lods
icebp
jne
dec
xchg
stos
loopne
loop
dec
pop
pushf
stos
inc
cmp
sub
cmpb
sub
push
adc
and
xor
cmc
aas
and
mov
imul
dec
push
mov
adc
mov
push
mov
xchg
neg
xchg
jns
adc
daa
or
ja
aas
ljmp
xor
jae
test
jno
jle
cmp
aam
lods
stc
or
sti
mov
mov
jle
fsubs
stos
adc
stos
das
aas
sbb
xchg
sub
ret
ret
or
test
jb
jge
xlat
int3
mov
lds
add
into
cmp
add
push
pop
leave
push
dec
dec
pop
pop
sbb
loopne
loope
jecxz
add
sbb
add
daa
enter
push
mov
mov
xchg
fs
dec
adc
fistps
mov
pop
stos
sub
push
test
cmp
nop
pop
mov
ret
imul
cmpsb
push
cli
or
jnp
inc
test
cmp
cwtl
test
xor
test
inc
mov
repnz
dec
inc
mov
mov
notl
ss
or
lock
jle
out
xchg
lods
ja
lods
test
push
test
mov
add
fldcw
pop
sub
cmp
stc
lret
or
rolb
sbb
out
shlb
sbb
or
out
loopne
aas
mov
lods
iret
xor
pop
sub
cmp
ja
fs
mov
popa
cmpsl
fidivl
pmaddwd
mov
dec
add
lahf
out
outsb
int
jle
xor
js,pt
lods
cmpsl
and
mov
outsb
pop
mov
ja
mov
lcall
mov
fisubrl
and
xchg
adc
out
inc
cmp
xor
xor
movsl
inc
mov
jb
data16
fsts
and
jp
fisubl
jmp
adc
cmp
sti
in
push
xor
je
roll
add
sahf
rcrl
in
mov
push
cs
addr16
pusha
cmp
sub
pop
inc
enter
add
test
pop
mov
mov
lahf
pop
or
push
push
jle
js
xchg
js
push
xchg
cmpsl
cli
jg
int3
sbb
leave
jne
inc
cmp
pop
xchg
dec
out
xchg
xchg
and
incb
movsl
into
adc
fistl
imul
ret
push
mov
pop
cli
hlt
fstp
mov
mov
iret
add
mov
sub
mov
sub
in
test
cmp
or
xor
out
in
popa
popa
xchg
es
push
loope
add
push
cmpsl
sbb
pop
es
mov
icebp
int
cwtl
pop
xchg
and
cltd
mov
add
cmp
add
jmp
xor
in
scas
fs
jb
xchg
popa
popf
cmp
push
sbb
gs
push
shrb
sub
int3
xchg
movsl
sbb
push
xor
data16
inc
mov
lret
mov
ficoms
subb
mov
bound
jmp
mov
je
mov
mov
mov
popa
hlt
outsb
test
cmc
ret
adc
pop
sub
or
cwtl
cmp
in
jmp
cld
lret
cwtl
push
or
pop
popf
pop
ficompl
fadds
popf
mov
ds
push
mov
cmp
sarl
sbbl
imul
add
imul
xchg
xor
ror
cmpl
into
stos
cld
push
pop
hlt
shll
imul
pop
enter
loope
movsl
jnp
cmpsl
jl
xchg
js
test
andl
out
test
xchg
push
add
shrl
popf
jle
adc
aad
jle
sub
push
push
fs
or
sub
pop
vpsubusw
xchg
sbb
sub
jg
mov
xor
jns
push
jmp
xor
cwtl
test
ret
ss
sub
hlt
mov
mov
or
pop
mov
mov
imul
and
cmp
in
mov
psubw
into
push
lret
sub
mov
subl
test
mov
mov
inc
repnz
lods
arpl
pop
cmpsl
xchg
mov
sahf
gs
xchg
jmp
mov
mov
jns
and
shlb
lock
pop
cmp
pop
xchg
test
in
into
lock
imul
sub
mov
in
mov
mov
inc
mov
hlt
add
pop
test
fisubl
lods
cli
pop
push
xor
mov
adc
cmc
xchg
xor
sub
add
rorl
in
das
test
pop
dec
mov
cmp
insl
push
decb
add
pop
popf
push
ja
cld
xchg
imul
ficompl
and
ret
int
pop
adc
adc
xor
xchg
repz
dec
in
or
ja
xor
adc
push
imul
xor
mov
adc
push
loop
jno
fldt
fisttps
out
je
sahf
clc
xchg
decl
jecxz
pop
cs
xor
into
mov
fmull
add
xchg
mov
dec
repz
sbb
scas
hlt
push
loop
fists
loope
mov
mov
xor
test
aas
shll
mov
and
in
push
stc
push
mov
aam
rcrl
mov
ljmp
adcb
leave
orl
rcrb
ljmp
inc
gs
je
in
fcompl
lock
mov
sti
stc
adc
add
lret
subb
push
and
repnz
push
jne
cli
mov
jae
call
add
xlat
stos
and
or
fwait
in
mov
cmpsb
sbb
pusha
shll
mov
cmc
jmp
in
push
add
dec
jg
mov
jne
push
sbb
fsubp
rorb
jns
ja
and
in
outsl
jle
mov
stc
adc
fmuls
shlb
dec
xlat
test
lret
mov
add
sub
movsl
out
jae
add
sbb
shlb
mov
imul
in
lahf
mov
inc
jne
mov
testb
out
mov
mov
mov
sbb
scas
add
xor
inc
stos
movl
aad
adc
les
out
lds
and
mov
jo
xor
and
pop
mov
sti
std
cmp
or
push
sti
fbstp
xchg
out
iret
adc
mov
fbstp
mov
in
cmp
jne
mov
xchg
jle
nop
xchg
lds
gs
hlt
and
test
incl
test
sub
jl
std
xchg
push
push
int3
mov
cmc
rcrb
xor
pop
and
lcall
pop
ljmp
push
dec
push
loopne
jecxz
loop
or
jnp
cmpsl
ret
fildl
jg
mov
inc
imul
pop
xor
punpckhwd
and
adc
add
stos
jecxz
data16
sub
cmpsb
jge
mov
popf
adc
pop
or
push
lret
mov
pslld
hlt
sub
push
jmp
jae
cwtl
lods
xor
jge
sbb
sar
push
lea
and
shlb
popa
jp
or
fdivs
data16
sar
mov
jae
in
enter
mov
testb
pop
push
shrb
ret
enter
mov
xchg
push
aas
cli
add
insb
cs
shrl
mov
insb
fcompl
add
xchg
push
sub
sbb
hlt
stos
lret
push
loope
mov
push
cmp
mov
out
js
xchg
sarl
into
mov
ret
adc
jmp
push
xor
aam
shrl
mov
adc
mov
push
ret
loope
xor
int
xchg
xchg
out
mov
movsl
add
shll
fs
xor
mov
fwait
jl
adc
fildll
push
int
fdivrl
or
jmp
cmpsl
jne
adc
adc
mov
sub
pop
bound
or
outsl
leave
adc
inc
hlt
or
add
mov
jmp
out
movsb
add
or
jg
leave
call
mov
ljmp
stos
int
mov
out
or
mov
push
mov
adc
icebp
push
mov
divb
outsl
xor
mov
push
and
sbb
mov
xorl
cli
xorb
ficoms
out
cli
xchg
mov
out
in
dec
inc
fidivrl
and
loop
or
mov
rep
lahf
std
hlt
mov
and
call
lcall
xor
stc
test
imul
js
or
inc
jne
insb
sub
inc
shrb
dec
add
jne
repz
ds
xor
xchg
jo
xchg
loope
popa
inc
test
lea
lret
sar
mov
in
iret
int
and
jns
sarl
pop
outsb
fsubl
jl
aad
out
and
mov
add
lcall
cmpl
adc
bound
xor
and
hlt
xor
fldl
std
out
cli
xor
adc
sub
call
scas
decl
mov
add
ficomps
sub
add
xchg
sbb
mov
mov
or
and
ds
fcoml
fnstcw
and
es
fcoms
rcr
lea
mov
xor
sbb
add
or
cmp
repz
xor
cmc
pop
cmpsb
lahf
stc
xor
inc
cli
stc
pop
inc
in
push
pop
dec
into
pop
mov
imul
test
jo
or
fidivrl
lods
jp
outsb
faddp
pop
ljmp
hlt
mov
iret
push
repnz
in
lret
cmp
sahf
rcr
push
or
pop
ljmp
mov
hlt
adc
mov
cltd
ja
cmp
cmp
xor
mov
cwtl
jae
push
mov
cmpsl
gs
scas
arpl
add
clc
call
push
adc
xchg
pop
sti
mov
sbb
mov
jns
hlt
insl
adc
sbb
addb
sub
jne
mov
jmp
mov
mov
sti
adcl
stos
push
data16
adc
jge
and
cmpl
push
dec
sub
outsl
shrl
xchg
push
adc
cmpl
shlb
nop
sub
addr16
jp
es
xchg
mov
cmpsw
scas
mov
adc
outsb
iret
mov
mov
js
inc
or
hlt
xlat
and
xchg
in
and
mov
xchg
sbb
test
or
and
movsb
pop
das
ja
pop
repnz
mov
pop
std
dec
mov
lret
add
jp
lahf
out
cwtl
xor
rolb
mov
pop
imul
mov
push
leave
push
clc
push
ljmp
dec
fisttpl
in
jl
pop
or
sbbb
sub
out
mov
mov
add
xchg
lods
jp
divb
mov
insl
idivl
loop
mov
int3
outsb
mov
test
push
mov
out
xor
je
and
test
in
mov
mov
cmp
pop
fwait
jl
call
push
insl
popf
mov
das
sub
mov
dec
cmpsb
jb
inc
popf
inc
mov
cmp
cmp
push
push
mov
pop
push
test
hlt
lea
lret
and
repnz
push
mov
push
cmc
std
pop
test
cwtl
rcrl
insl
and
or
mov
ret
push
xchg
cmpb
pop
test
cmp
and
arpl
xchg
cmp
xchg
jecxz
jno
loopne
mov
xor
stos
insb
out
stc
and
sub
scas
jmp
sub
push
lcall
or
clc
in
jmp
mov
sbb
dec
in
imul
mov
push
push
mov
rorl
xchg
pop
outsb
mov
or
pop
and
mov
das
sbb
lods
dec
test
lock
cmp
fistps
or
in
scas
pop
inc
mov
repz
push
fucom
sub
mov
sbb
ret
xor
int
cld
jae
std
lock
jne
xchg
xor
lret
cmpsl
mov
mov
and
xchg
xchg
pop
lods
mov
inc
in
adc
pop
daa
imul
enter
call
mov
fs
xchg
movsb
pusha
imul
je
xchg
fwait
cmp
jb
pop
cmp
loopne
adc
cmpl
adc
mov
mov
sub
mov
gs
add
cs
cmp
or
push
xchg
lock
adc
movsl
cltd
or
or
testl
cltd
fldt
mov
loopne
inc
imul
dec
cmc
xchg
lret
lods
sub
pushf
scas
adc
mov
pusha
insl
lret
fdivrl
mov
fwait
mov
xchg
sahf
and
movl
sbb
sub
adc
mov
or
out
cs
sbb
call
mov
inc
outsb
dec
adc
mov
lahf
call
pop
imul
cmp
out
mov
cmpl
lret
xchg
mov
jb
lock
pop
jge
cmpsl
movsb
pop
pop
mov
dec
insl
push
xchg
into
fisttpl
jo
pop
lea
scas
push
inc
mov
mov
lock
jg
sbb
mov
push
push
xorps
mov
or
in
inc
inc
dec
adc
into
jae
xor
xchg
cmpsb
jnp
push
enter
cmp
in
xchg
add
test
ljmp
mov
sbb
int3
add
ds
pop
xor
test
addr16
add
cmpb
jno
pop
mov
out
pop
mov
mov
lahf
push
adc
arpl
push
mov
or
popf
clc
lcall
xor
push
test
rcrl
negl
shl
pop
dec
pop
lods
or
loopne
jo
mov
addr16
into
mov
stos
repz
xchg
adc
int3
and
stc
loope
or
into
cwtl
ficompl
call
mov
add
in
leave
mov
inc
jecxz
repnz
jns
xchg
mov
dec
jne
push
filds
mov
xor
mov
leave
sub
sbb
xchg
lahf
outsb
andl
aad
aam
sbb
insl
mov
mov
sti
xorb
aas
add
dec
call
sbb
shlb
ss
pop
test
sahf
xchg
orl
mov
inc
inc
rclb
xchg
cmp
pushf
fidivrl
data16
adc
lods
add
aam
pop
shrl
or
notl
sub
movsb
dec
out
mov
push
outsb
pop
fldt
lods
sub
call
cld
xor
add
fwait
xor
or
push
ljmp
push
cmpsl
sub
jmp
lea
pop
in
ljmp
cli
outsl
nop
into
addl
jg
xchg
jp
mov
test
cltd
cltd
insl
add
in
cmp
hlt
mov
sbb
int3
xlat
mov
lea
notb
movsl
in
insb
lods
roll
stos
rorl
popf
xor
leave
mov
adc
mov
pushf
out
scas
sub
sarb
fwait
scas
jno
sub
movsb
bndstx
jg
jmp
jno
jp
imul
inc
in
das
fstl
push
daa
cld
mov
fucom
adcl
clc
in
xchg
ss
out
cmp
pop
or
cmp
mov
mov
xchg
xor
dec
ljmp
test
sbb
cmpsb
call
adc
fnstsw
sbb
and
jae
and
cs
mov
cltd
je
fisubrs
test
jnp
adc
dec
nop
out
add
mov
add
dec
or
and
das
dec
imul
and
arpl
fwait
cmc
cld
adc
lret
aad
out
pop
jo
or
pop
fistpl
mov
in
test
in
fldenv
inc
adc
jnp
insb
jnp
mov
cmc
roll
inc
sbb
mov
push
mov
inc
and
xchg
dec
outsb
mov
cmp
or
xor
mov
sbb
push
popa
fcomi
push
bound
mov
js
or
movb
dec
cmp
push
inc
ret
cmpsl
push
lahf
jmp
cmp
mov
sub
ljmp
push
lds
movsb
popa
mov
mov
hlt
cli
dec
rorl
fbstp
nop
lds
and
add
mov
aaa
pop
push
push
dec
sub
fcomi
flds
add
or
push
jae
and
dec
ficomps
filds
cmp
mov
mov
push
outsl
je
inc
or
mov
mov
inc
scas
cmp
mov
sahf
imul
mov
or
pop
fdivrl
mov
jmp
jo
jnp
arpl
sub
cmovbe
xlat
mov
stc
xchg
out
mov
cmp
subl
aam
mov
fwait
outsb
mov
lea
push
sbb
cmpsb
mov
aad
lret
rolb
xor
mov
fs
pop
jmp
inc
int
mov
jmp
out
jle
ljmp
ja
lods
rcr
insl
pop
lahf
mov
xlat
cmc
dec
pushf
pop
aaa
dec
pop
xlat
mov
bound
sbb
push
push
or
insb
cmp
icebp
xchg
push
aaa
lcall
pop
enter
mov
popa
jmp
divl
add
in
js
pop
stos
xchg
lret
std
repnz
rcrb
or
adc
test
fs
adc
movsb
fsts
mov
stc
and
xchg
push
icebp
pop
jo
stc
mov
leave
jne
pop
sbbb
jae
fidivrl
inc
inc
sbb
inc
pop
xchg
push
push
mov
cmpsl
lods
addr16
imul
xor
roll
aam
jae
call
xchg
push
xor
gs
aad
jge
stos
push
sti
inc
inc
shrl
mov
fildl
mov
imull
test
add
rolb
push
add
test
jecxz
jl
scas
adc
dec
into
les
arpl
xchg
pop
bound
or
sub
sarl
jnp
scas
mov
fdivp
sbb
loope
fwait
popf
ss
push
loope
or
loop
sbb
in
orl
mov
incl
hlt
sub
add
or
push
sub
loop
push
ss
sarb
roll
out
sti
or
xchg
mov
push
ljmp
mov
lods
popf
xchg
xor
and
dec
icebp
jns
repz
pop
adc
jne
sub
pop
xchg
jne
push
loop
fs
sbb
sub
mov
testl
loopne
pop
xchg
mov
push
mov
add
jno
jo
lods
or
dec
pop
cmpsb
jbe
jp
or
mov
xorb
pop
rorb
lahf
stc
mov
and
jge
sub
and
cmpl
inc
xor
add
iret
orb
or
inc
cmp
test
fcmovnbe
outsl
and
aas
popa
mov
lret
stc
jge
push
popa
test
int
cli
aaa
mov
pushf
cli
xchg
dec
jp
ret
adc
in
xor
dec
sbb
inc
cli
jnp
mov
data16
inc
fisubrs
into
adc
cmp
imul
ja
clc
leave
repz
jecxz
push
jo
jno
sbb
or
dec
mov
fcmovb
in
inc
xchg
sbb
push
scas
and
lcall
icebp
scas
add
xchg
sbb
or
ror
adc
and
testb
mov
xchg
clc
pop
push
push
je,pt
inc
xor
dec
xchg
add
shl
lds
out
pop
out
bound
push
fstp
dec
fisubrs
jo
pop
imul
mov
mov
lret
out
lret
add
pop
into
cmp
mov
jo
jl
add
and
cli
int3
or
leavew
push
popa
push
mov
dec
mov
xorl
inc
scas
fs
adc
orb
pop
cmc
das
cwtl
cmp
xor
icebp
or
and
lahf
xor
push
lea
popa
push
mov
xchg
or
xor
inc
outsl
jle
std
sub
scas
xor
int
scas
stos
pop
mov
and
mov
je
and
pop
xchg
ljmp
xor
pop
jbe
adc
sbb
inc
pop
out
mov
lea
faddl
xorb
das
sbb
jbe
inc
es
xchg
cld
sahf
sub
or
xchg
push
test
inc
icebp
push
and
movsl
lock
lret
jnp
pop
jne
jne
dec
fcompl
lret
xchg
xor
stos
mov
notb
mov
xor
jge
ret
aam
in
in
outsl
fdiv
mull
out
ret
cmp
add
mov
ret
jmp
sub
adc
sub
cmp
pop
mov
mov
adc
pop
test
cmp
shlb
xchg
test
push
inc
mov
ljmp
add
clc
fiadds
xchg
pop
repnz
add
xor
sub
push
into
mov
cmp
sahf
aaa
pop
inc
int3
in
xor
js
jl
add
inc
mov
sub
je
mov
and
pop
push
pushf
lods
adc
movups
push
cltd
gs
and
mov
jne
out
dec
or
dec
mov
or
shll
scas
add
mov
shlb
adcl
mov
and
and
or
add
inc
sbb
mov
push
jle
mov
xchg
fists
adcl
inc
clc
popl
cwtl
cmp
out
mov
bnd
xor
push
es
add
outsb
cmp
cmpsl
rclb
mov
adc
call
xor
sti
mov
sbb
ret
popa
test
push
sbb
pop
bound
test
repnz
fcoms
aam
testb
xor
or
sub
mov
or
sti
in
iret
push
out
inc
add
adc
loop
or
scas
in
ret
hlt
sub
pop
fsts
into
pop
cli
aad
dec
cld
les
lret
cmpsl
pop
stos
cmp
lock
sbb
dec
inc
je
xor
imul
pushf
mov
xor
adcl
out
pop
pushf
lds
mov
ret
or
sub
ja
dec
or
cmp
or
xor
push
mov
pop
sbb
xor
lcall
adc
dec
cmpb
pop
std
adc
lret
fchs
sbb
xor
in
push
or
ds
movsb
bound
push
cld
fiadds
pusha
mov
in
jb
pop
jl
sub
and
pop
lret
rep
fisubl
gs
or
fisttpll
inc
mov
insl
mov
sub
shlb
in
das
lcall
pop
xor
push
pop
mov
push
out
ds
das
divb
xorb
sahf
xor
lds
cmp
insl
daa
pop
int3
adc
cmpsb
pushf
icebp
nop
in
daa
mov
jae
and
pop
das
daa
cmp
mov
mov
xchg
mov
test
mov
dec
jecxz
cmpsb
inc
cltd
inc
in
jle
push
repz
ds
sbb
mov
xor
xor
dec
fidivl
mov
fwait
sarl
inc
jbe
jl
in
push
jo
scas
xchg
cmp
jmp
ds
mov
mov
dec
push
add
jns
or
push
xadd
cmp
scas
xorl
insb
fnsave
mov
shll
pop
jo
scas
les
ja
adc
mov
pusha
mov
ficompl
push
jns
mov
push
sahf
jle
hlt
or
cmp
dec
pop
mov
sub
xlat
mov
out
or
popf
or
sbbl
mov
sarb
mov
push
out
mov
and
mov
jl
dec
test
dec
xor
xor
sub
xchg
jae
push
adc
lret
sbb
xor
jns
push
cmpsl
mov
mov
lock
jns
pop
jp
cmp
inc
xchg
cs
cmp
out
adc
and
cmp
and
or
cli
lock
ss
cmp
aad
in
and
pop
ja
cli
stos
mov
and
and
adc
scas
pop
ljmp
iret
jg
mov
xor
lahf
pop
cmpsl
out
mov
int
jne
shl
lods
mov
mov
cld
hlt
push
sbb
push
pusha
in
xor
rorb
rcll
fnsave
sbb
sbb
pop
xchg
inc
test
test
xor
cltd
fwait
xchg
jo
and
in
mov
int3
mov
or
lock
inc
mov
outsb
xchg
xlat
repnz
sahf
and
das
inc
inc
sbb
xchg
les
out
cli
cmp
sbb
inc
loopne
cvttps2pi
sbb
fmuls
jne
inc
movsl
add
cmpb
adc
xchg
cmp
pop
je
pop
imull
shrl
mov
jns
mov
mov
sub
add
cmpsb
push
fs
or
aaa
mov
xor
insb
xchg
enter
mov
int3
xor
push
xchg
mov
cmpsw
dec
push
stc
sub
fcmovb
sahf
push
pop
mov
stc
mov
clc
ljmp
add
mov
mov
xor
sbb
in
inc
ret
fdivl
rclb
iret
inc
hlt
jmp
fs
jp
mov
add
mov
or
jmp
inc
push
jns
mov
adcb
mov
mov
les
xor
lret
adc
xchg
jb
les
in
movsb
push
icebp
or
pop
test
add
add
test
rorl
push
inc
cs
jo
orb
movsl
lods
add
xor
bound
clc
js
ljmp
mov
mov
mov
jne
notb
xchg
les
xor
sub
rolb
adc
lcall
comiss
push
scas
add
call
pop
mov
add
lds
dec
lahf
test
mov
mov
cmp
lock
cmp
xchg
mov
in
lds
out
push
mov
jle
add
cmp
pop
les
fistps
sub
fs
fwait
add
or
xor
insb
sti
sbb
fdivl
xchg
push
movsl
or
mov
shl
into
mov
xchg
cs
inc
mov
packuswb
lret
and
and
jb
addr16
dec
inc
in
ffree
jns
push
push
fisubl
ficomps
addr16
adc
or
inc
lea
pop
ret
mov
pop
rcl
add
push
push
dec
inc
cs
insb
sbb
cli
jmp
push
inc
mov
xor
ret
aaa
call
insl
jnp
outsl
jp
adc
in
adc
dec
rcrb
lds
mov
dec
aam
cltd
mov
movsb
lods
shrb
xor
ret
inc
ret
sub
mov
xlat
mov
lahf
sar
pop
xchg
iret
jno
shr
je
dec
call
sub
dec
and
mov
pop
jle
add
cmpsb
dec
lcall
push
inc
stos
fadds
adc
dec
sbb
push
inc
hlt
inc
roll
mov
mov
adc
pop
mov
mov
push
jb
and
inc
mov
cwtl
add
xchg
xchg
mov
fs
in
adc
sub
xor
push
jne
repnz
xor
push
sbb
mov
mov
insl
and
sarb
shll
loopne
push
jle
mov
inc
sub
mov
lock
push
adc
sbb
inc
je
adc
ss
jge
sub
fs
inc
mov
in
shl
jge
fs
in
xchg
xchg
fisubs
mov
outsb
arpl
jp
divb
mov
loopne
or
lods
lret
mov
out
push
rcll
in
mov
mov
mov
pop
pop
pop
xchg
fcompl
or
xor
jno
mov
mov
cmp
xchg
faddl
adc
ljmp
cmp
ret
mulb
inc
sub
adc
cmp
hlt
or
ret
gs
mov
aas
add
in
pop
rcrb
sub
into
sbb
mov
cmpsl
fldl2e
push
popf
icebp
sub
paddusb
imul
lahf
xchg
xchg
orb
fstpt
jne
stos
in
lcall
xchg
add
dec
xchg
movsb
add
xchg
dec
imul
cmp
cs
mov
mov
xchg
xchg
sti
push
jecxz
mov
lea
mov
cmp
aam
inc
mov
loop
adc
xor
aad
jecxz
jno
rorl
arpl
into
lds
outsb
or
je
push
fnstcw
cmp
fdivl
pushf
fcompl
cmpsl
pop
loopne
insb
sub
and
inc
adc
std
mov
sub
adc
sbb
pusha
int3
pop
pop
das
aad
fisubl
mov
pop
jp
fiadds
popa
in
pop
cmc
scas
xchg
lret
lret
bound
stos
pop
dec
push
mov
jne
jle
or
in
std
pop
leave
lcall
imul
das
test
lret
aaa
push
dec
lods
jae
cmpsl
scas
popf
shld
mov
push
call
xchg
cmp
mov
std
lret
xchg
dec
jbe
test
loop
pop
out
or
and
insb
pop
adc
or
scas
popl
scas
inc
ffreep
cmp
lret
pusha
jo
ja
in
push
pusha
add
inc
fdivrp
and
and
loop
cmc
andb
movsb
imul
lret
push
jno
or
pmaxsw
sub
pop
inc
sub
sub
inc
mov
lods
das
xchg
cmp
add
int3
push
jno
mov
inc
push
push
jae
into
in
xchg
mov
cli
lds
sub
mov
out
xchg
test
mov
sbb
mov
xchg
sbbb
shll
mov
jnp
sub
jnp
sti
movsb
sub
xchg
xchg
jg
adc
fs
push
inc
fs
ret
push
push
rcr
mov
bound
inc
lret
inc
push
cld
xlat
icebp
fwait
dec
insb
rolb
sarb
mov
dec
movsb
sarl
mov
movsb
iret
dec
sar
pushf
cmp
lock
sbb
sarl
sub
jb
nop
add
data16
pop
mov
cmp
mov
stos
daa
sbb
mov
loop
sub
mov
jno
lcall
dec
outsb
sub
movsb
jg
loop
mov
cwtl
std
dec
add
ds
mov
fdivrl
and
daa
out
push
mov
jg
in
out
lahf
cmpsl
add
dec
jno
jnp
cmp
xchg
and
repnz
push
lea
hlt
add
iret
insl
jg
das
in
inc
aam
clc
scas
andb
and
loopne
dec
sbb
fcoml
leave
jl
iret
fdivrs
mov
insb
push
jp
xor
jno
and
mov
jo
mov
sbb
int
cwtl
aad
jns
repz
sbb
loopne
or
shrl
sub
sbb
adc
adc
pusha
mov
add
cltd
add
call
push
aaa
mov
ret
push
pop
roll
mov
ja
into
mov
popa
not
jno
jne
shll
je
inc
cmc
dec
jp
scas
out
push
sub
mov
pop
out
in
inc
outsl
inc
jne
sbb
cmp
cmp
xchg
gs
div
sub
sub
pop
mov
inc
push
in
pop
loope
add
sbb
daa
lea
inc
fs
push
sti
test
mov
mov
shlb
test
sub
pop
add
push
add
ljmp
nop
roll
jecxz
and
lahf
test
roll
sahf
mov
or
lods
adc
out
push
les
aam
dec
pop
insl
or
loope
adc
or
es
push
inc
daa
cltd
jle
std
or
pop
cmp
and
popa
xor
ja
add
dec
dec
rorl
mov
imul
pop
jo
inc
imul
movsl
push
iret
jno
lds
push
sbb
js
push
xor
imul
data16
or
and
je
mov
adc
adc
jmp
or
cltd
adc
mov
sub
rorl
cmp
idiv
insb
push
movsl
call
mov
lret
xor
rorb
pusha
push
sub
inc
jp,pt
ss
xorl
loope
in
pop
jl
xor
sub
mov
mov
xor
mov
inc
xor
sbb
arpl
xor
mov
mov
adc
or
xchg
je
inc
inc
jb
int
cmp
mov
pushf
jb
xchg
in
mov
movsb
cltd
jmp
ret
test
jp
lods
loope
imulb
mov
nop
mov
push
into
mov
cmpb
clc
adc
add
in
loope
mov
popa
popf
dec
lret
out
xor
ds
mov
mov
push
call
cmp
xor
sub
enter
aaa
sbb
jns
repz
xchg
and
sbb
js
aas
mov
pop
push
or
dec
lcall
in
stos
pushf
or
cmpl
scas
outsb
arpl
aad
jp
in
add
mov
add
mov
ja
addb
adc
pop
bnd
addb
hlt
add
sub
pop
push
and
xchg
stos
add
add
push
lahf
aad
ret
icebp
lods
insb
xchg
popf
adc
mov
cmc
mov
pusha
adc
aad
xchg
out
or
dec
lcall
xor
es
adc
adc
mov
pop
and
push
jp
jo
and
sbb
nop
xor
std
addr16
lock
mov
and
mov
adc
lret
jle
or
xor
cmp
in
sbb
push
inc
push
bound
mov
mov
lahf
and
jb,pt
push
fbstp
and
es
scas
sbb
and
lret
fisttps
mov
xchg
xchg
push
pop
xchg
jb
sbb
test
cmc
lods
inc
fucom
add
mov
movsl
mov
cwtl
push
jae
sub
or
stos
iret
xlat
loop
imul
xchg
repz
test
dec
orb
xor
fs
pop
mov
pop
outsb
mov
push
andl
pusha
fcoml
pop
outsb
jbe
addr16
ret
dec
inc
jp
sarl
or
dec
mov
in
jbe
xchg
xlat
pusha
cmp
loopne
inc
fldl
sbb
sbb
pop
or
enter
jecxz
dec
das
adc
addr16
xchg
jecxz
inc
xor
int3
adc
adcb
sbb
cmp
inc
scas
cmp
loop
or
jb
test
sbb
add
mov
dec
les
mov
lds
dec
mov
mov
test
fstps
lds
in
pop
mov
in
and
in
xchg
loop
jl
sub
mov
popf
es
add
add
iret
pop
ficompl
cld
pop
addr16
lret
jl
pop
lock
dec
sub
xor
push
mov
into
pop
mov
lods
jbe
sub
cmp
fnstsw
mov
xchg
loopne
out
hlt
imul
mov
sub
imul
fcom
mov
cli
test
mov
pop
pop
push
sbb
das
int3
mov
push
push
push
aaa
rorb
icebp
pop
jl
imul
test
sti
xor
push
mov
cmp
dec
push
dec
cmpl
jae
xor
imul
push
pop
jbe
pusha
push
repnz
mov
inc
or
ljmp
sbb
mov
insl
lds
test
mov
call
fcomps
or
scas
sbb
stc
fldenv
inc
js
cmp
mov
lods
popf
in
or
push
ds
cmp
xchg
push
mov
xchg
rorl
sub
inc
scas
push
add
xchg
ja
pop
cmp
and
xchg
cmp
loopne
adc
mov
add
cmp
or
gs
cld
mov
jmp
xchg
lea
sub
das
or
sbb
jmp
lahf
out
imul
imul
cmpsl
inc
xchg
and
js
lahf
inc
stos
mov
xchg
lods
xor
inc
add
pop
arpl
xchg
es
mov
stos
jmp
mov
popf
and
cwtl
fdivrl
in
mov
dec
push
inc
cmc
xchg
push
pop
mov
pop
daa
push
mov
test
aam
and
dec
cmp
pop
and
jle
push
arpl
test
into
sub
repz
xor
dec
es
or
or
negb
out
mov
mov
push
mov
mov
mov
xor
fdivr
mov
lods
pop
mov
push
dec
push
in
push
pop
mov
cmpsb
jg
pop
push
mov
nop
mov
icebp
aaa
xor
insl
aas
mov
rorb
mov
or
lods
inc
fnsave
std
dec
sub
jno
inc
bound
cwtl
jbe
ss
lcall
mov
lods
arpl
fsubr
ja
push
insl
popf
dec
ret
shrl
jb
and
imul
dec
push
jge
ret
push
and
ljmp
mov
sbb
push
jne
add
rcr
adc
inc
add
cmp
jne
mov
sub
xlat
fimull
xchg
mov
xor
mov
test
lsl
push
clc
push
aad
dec
aas
fiadds
cwtl
cmp
arpl
dec
mov
pop
enter
test
adc
sbb
push
mov
cmpsb
mov
leave
xlat
movsl
dec
push
jl
sahf
dec
bound
incl
mov
repnz
mov
je
sahf
cmpsb
mov
stos
mov
insb
movb
mov
cmp
aaa
data16
mov
hlt
jbe
adc
imul
cmp
xor
shl
lock
push
adc
push
fistl
addr16
inc
loope
add
in
cld
xchg
mov
or
js
rclb
or
lcall
and
add
pop
mov
xor
dec
cmpsb
dec
xor
icebp
sar
pop
xchg
cmpsl
push
dec
leave
and
lea
aaa
add
jns
or
xor
incw
inc
es
add
push
in
inc
xchg
sbb
pop
pop
popf
loop
fistl
push
aaa
push
ficompl
xchg
sub
jnp
fdivrs
sub
push
xchg
sbb
inc
fldcw
mov
mov
int3
aas
lock
out
push
fs
test
pop
lock
mov
jo
and
jle
bound
push
insl
jbe
insb
jecxz
add
rorl
pop
stos
test
mov
jns
xchg
xor
andl
push
push
sub
int
cmpsl
mov
lds
jnp
loope
sub
sbb
sub
pushf
lods
mov
rcrl
add
adc
xchg
jne
dec
lret
les
in
xor
outsb
jmp
mov
je
inc
ds
dec
xchg
pop
mov
mov
xor
and
mov
mov
inc
nop
test
xor
adc
sbb
mov
xlat
sbb
fdivs
xchg
mov
je
shrb
push
mov
mov
sub
lea
xchg
movsl
pop
push
lock
bound
ss
pop
sbb
push
and
icebp
mov
push
std
and
and
mov
gs
repz
jp
push
nop
mov
aaa
pop
mov
fwait
lods
push
mull
subb
lods
push
sbb
mov
mov
fidivrs
jp
cmp
ljmp
fdivs
pop
xorb
and
addr16
ds
or
lock
jnp
cmc
rcl
mov
nop
or
inc
jg
jne
xchg
int
insl
sub
aam
xlat
cmp
sub
jl
hlt
out
jne
xchg
and
dec
out
dec
sarl
out
mov
faddl
dec
cmc
sbb
mov
sbb
xchg
loopne
cld
cmp
xor
fldcw
jns
push
add
outsl
or
or
or
push
mov
aaa
adc
xlat
xchg
push
call
imul
arpl
ret
rcr
mov
cmp
pop
in
popa
nop
inc
js
aas
cli
es
mov
inc
pop
mov
dec
fwait
imul
cltd
adcl
pop
out
sub
mov
mov
popa
xor
and
imul
jg
jae
xchg
adc
scas
mov
std
orb
insl
iret
aas
jnp
pop
jmp
mov
dec
mov
adc
cmp
or
xchg
lds
paddsw
push
cmovns
cld
mov
sbb
lea
fidivrs
lcall
sub
jbe
inc
test
sub
adc
adc
sbbl
push
test
js
cmpsb
les
dec
lret
xlat
imul
ret
popf
stc
orl
stos
adc
iret
das
and
mov
sbb
lahf
pop
mov
fs
ret
mov
mov
icebp
and
test
shl
sar
xchg
cmpsl
push
jecxz
or
cld
call
jns
outsb
dec
mov
jecxz
mov
adc
jp
stos
and
mov
ja
iret
mov
xlat
hlt
pop
repnz
push
lods
sub
jp
dec
pop
sub
and
add
inc
fiadds
sub
xor
sbbl
xchg
outsb
pop
ret
std
imul
mov
sub
repnz
jb
test
ds
dec
add
add
into
test
adc
lea
push
in
sti
subb
lods
sbb
in
iret
push
loopne
xor
jmp
lock
mov
js
imul
ret
mov
pop
or
hlt
sbb
clc
dec
cmp
sahf
aad
insl
push
jb
pushf
outsb
nop
orl
jl
dec
iret
xchg
mov
lock
cmp
mov
pop
daa
jmp
daa
mov
inc
lcall
adc
xchg
cmp
repnz
fst
cli
pop
ja
lea
lods
push
mov
cmp
repnz
inc
lret
fidivrl
cmp
xchg
xchg
or
jecxz
mov
jmp
xchg
or
pop
push
push
sbbl
mov
jge
sub
cmpsb
out
mov
cld
repnz
sti
add
popf
xlat
rcr
xchg
aam
mov
inc
scas
jl
into
movsb
cs
aaa
mov
lcall
or
xchg
ret
pop
pop
scas
clc
es
movq
aam
shrl
mov
inc
sub
test
push
popf
imul
out
cmp
adc
cmp
aam
add
ret
xchg
aad
lea
or
adc
sub
out
jge
jp
mov
les
test
dec
dec
pop
pusha
or
in
mov
test
mov
mov
jmp
mov
mov
pop
pop
adc
xchg
roll
pusha
scas
arpl
decb
lods
rorb
cli
fdivl
xchg
mov
mov
shrl
mov
adc
mov
add
stc
lcall
fdivs
inc
aas
sub
sti
adc
hlt
cli
add
shll
mov
icebp
aas
in
lret
aad
jmp
mov
and
mov
push
jmp
js
nop
and
fpatan
adc
mov
mov
pop
adc
cltd
jecxz
mov
mov
neg
and
inc
sub
negb
leave
fidivrs
insl
mov
xorl
inc
mov
push
in
or
sub
sbb
clc
clc
iret
adc
je
test
and
imulb
call
jae
xchg
mov
and
cmp
or
or
les
lret
push
pop
out
sbb
add
dec
add
sub
enterw
push
fimull
push
bound
mov
cmp
orps
inc
inc
jmp
push
jns
lcall
in
daa
lods
scas
jns
outsb
xchg
xchg
xchg
rcrl
mov
nop
pop
in
xor
dec
scas
int
jo
or
or
dec
shrb
ss
int
mov
ja
aaa
mov
aas
outsl
mov
cmp
out
sub
jmp
sti
loop
jnp
pop
ljmp
mov
fsubrl
lods
cld
lds
cmpsl
add
mov
or
add
ror
mov
cld
add
fidivrs
push
cmp
adc
jge
stc
cmpsb
xor
dec
repnz
sub
movsb
jno
adc
sti
dec
mov
outsl
daa
out
jge
nop
fstpt
adc
or
inc
fdivs
push
jle
sub
int3
xchg
shll
fisttpl
std
stc
inc
cwtl
mov
aas
pop
mov
sahf
arpl
dec
push
vmread
cmp
xor
and
stc
or
xlat
and
test
mov
sub
cmc
mov
xchg
fiaddl
inc
add
rcll
pop
es
cmp
imul
aas
nop
adc
xchg
pushf
inc
xchg
stos
push
push
sub
or
insb
into
mov
test
pop
jns
lods
lret
ret
mov
inc
mov
jl
cltd
push
mov
jb
mov
addr16
adc
popf
and
push
mov
xor
fistl
movsl
fiaddl
imul
leave
scas
notl
sub
mov
xor
dec
and
leave
negl
sarl
mov
pushf
int3
ror
cmp
add
xor
and
jb
subb
push
sti
push
in
dec
xor
data16
push
lret
dec
test
push
sahf
iret
add
jbe
or
hlt
inc
xchg
in
push
sarb
sub
lahf
inc
xchg
dec
add
in
cld
lods
push
mov
sbb
pop
stos
sub
inc
dec
fwait
dec
ret
sub
test
lea
call
lret
xchg
ret
leave
std
adc
jae
jmp
fcoms
push
mov
add
jecxz
scas
or
push
lahf
adc
testl
xchg
lahf
add
or
cld
sub
aad
adc
dec
sbb
jnp
ror
mov
dec
arpl
stos
mov
cltd
test
int3
shll
clc
movsb
inc
and
flds
pop
xchg
sub
hlt
mov
into
adc
jmp
push
jmp
push
xchg
int
and
mov
inc
jg
dec
sahf
stc
cmp
xorb
push
add
outsb
movsl
push
pop
lock
nop
pop
or
jmp
mov
cmp
mov
push
imull
repnz
cmpsb
shrl
fistl
je
lcall
and
xchg
scas
out
mov
mov
dec
add
lds
or
mov
mov
adc
addr16
loop
clc
dec
sub
div
pop
ret
lea
hlt
sbb
xorl
mov
mov
nop
and
xchg
scas
adc
xor
xor
loope
pop
enter
push
adc
pop
sub
negl
movsb
ret
ja
sbbl
jnp
add
jp
lods
or
int3
shlb
xor
add
sub
outsl
sti
loop
pop
jb
jo
mov
sti
cmp
mov
or
mov
dec
leave
movsb
iret
enter
sub
or
sbbl
jb
subl
push
imul
fbstp
pop
jns
adc
push
mov
icebp
loopne
cmp
and
lcall
mov
lea
dec
loopne
out
mov
jnp
int
sti
or
jecxz
xchg
lock
insl
mov
lret
push
data16
in
into
in
mov
jb
popa
mov
add
and
jb
into
cmpsl
cmc
arpl
pop
push
movsb
push
in
jo
push
xor
push
pusha
aam
cmp
enter
sti
nop
shll
mov
js
pop
lods
inc
pop
fistpll
fisttpll
fs
in
iret
pop
cmp
fcoml
inc
mov
test
add
push
xor
aam
push
pop
mov
inc
cwtl
dec
setl
ljmp
iret
orl
add
xchg
dec
cmc
loopne
inc
rcrb
mov
cmp
fildl
lahf
aas
cmp
inc
jl
cmpsb
dec
add
fwait
jge
cld
push
xchg
in
add
test
loop
in
int3
ret
stos
adc
arpl
nop
cwtl
scas
pop
movsb
addr16
pop
xchg
jnp
cmovno
loopne
cltd
fwait
scas
add
and
mov
jl
pushf
in
pop
notl
in
fs
sbb
push
aam
in
and
cmp
scas
pop
xchg
xor
or
stos
xchg
ja
mov
pushf
mov
xor
or
mov
mov
mov
jo
popf
push
push
cmovs
jg
out
jmp
mov
xlat
enter
cmp
cs
or
mulb
cs
jg
rorl
pop
mov
push
scas
test
sub
dec
push
push
dec
cmp
or
shl
clc
dec
add
dec
test
test
xchg
inc
and
cmp
xlat
xchg
rclb
outsl
rcl
call
dec
adc
lea
sbb
enter
dec
in
fisttpl
rorb
shlb
loop
or
and
pop
add
mov
mov
mov
fcompl
push
lock
in
inc
mov
js
jbe
sub
adc
mov
lds
adc
and
aas
cmpsb
push
mov
add
mov
fyl2xp1
stos
xchg
push
enter
lods
mov
cld
jae
pop
jns
cmp
xlat
ja
test
xor
adc
ja
lods
lfs
lods
ss
push
xor
cmp
repnz
cmp
aaa
pop
mov
ss
daa
push
pop
sub
and
int3
test
or
jb
ficomps
call
dec
mov
adc
lea
dec
nop
sbb
rol
or
xor
aam
pop
daa
sub
les
inc
pop
pop
push
jno
cli
scas
ljmp
sbb
push
xchg
pushf
je
adc
cmp
push
lds
xchg
jle
test
mov
dec
lock
shlb
mov
pop
cs
je,pt
push
mov
sub
jg
dec
pushl
out
jmp
push
fcoml
shrb
lods
or
cltd
aad
or
xlat
dec
add
call
add
sub
in
jb
pop
jns
add
test
push
sbb
stos
and
mov
push
loope
and
sbbb
inc
mov
xor
cltd
mov
pop
inc
jns
pop
or
in
push
sub
adc
sub
mov
adcb
stos
inc
pop
mov
jl
pop
test
aam
sbb
inc
popa
xor
jae
ret
xor
inc
add
scas
inc
stos
jge
lods
lret
or
xor
push
stc
mov
cltd
loop
xchg
shrb
ficoms
stos
mov
cmp
xchg
adc
gs
pushf
mov
fscale
movsb
mov
and
gs
shrl
mov
mov
adc
cmp
loope
xchg
into
jp
cltd
mov
aaa
mov
or
and
es
shlb
insb
enter
xor
push
fldenv
xor
in
std
xchg
sub
adc
cli
push
jne
iret
mov
gs
jmp
stos
xchg
mov
test
ljmp
pop
jp
or
in
repnz
shll
insl
and
push
jnp
jle
bound
sub
daa
jno
xchg
jp
lds
mov
fistpll
aas
pushf
dec
jp
fcomi
cmp
rol
push
out
pop
in
ds
xchg
push
js
cmpsl
cmp
in
shl
xchg
mov
mov
push
in
jmp
and
sbb
push
imul
adc
mov
pop
cmpsl
inc
jle
stos
mov
push
dec
pop
jae
or
scas
mov
loop
sbb
dec
das
push
imul
negb
mov
pop
rcr
dec
gs
push
je
iret
sub
cmp
nop
dec
sbb
xchg
sbb
dec
sti
mov
dec
dec
scas
in
xchg
xchg
xchg
jo
stc
stc
or
sub
cwtl
out
in
hlt
cmp
xor
jp
add
fsubrs
and
rcl
in
icebp
in
fimull
fidivrl
xchg
lahf
imull
push
out
mov
je
int
and
pop
sub
arpl
or
mov
dec
negb
pop
loope
xor
sbb
int3
aaa
mov
aam
fdivrl
aas
int
insl
int3
out
inc
mov
orl
movsl
adc
pop
pop
mov
cmp
jge
inc
gs
xor
inc
rcll
jne
je
pop
jno
inc
sbb
jo
add
jmp
fstl
in
add
cmovnp
push
jge
lds
imul
lds
or
inc
cli
xor
sbb
jg
cmp
or
sbb
or
jo
int
arpl
movsb
lahf
test
sbb
adc
pop
rcrl
bound
insl
fisttpl
js
xor
mov
mov
jbe
repnz
inc
xor
insl
cmpsb
and
sub
mov
test
ja
and
mull
cmp
xchg
or
mov
and
les
pop
mov
mov
aaa
add
mov
out
call
mov
mov
xor
sub
jge
mov
aam
cmp
test
sbb
jmp
xchg
movsl
mov
jno
scas
aas
inc
xchg
sub
in
jbe
bound
sub
sahf
push
sbb
adc
hlt
cwtl
sbb
pop
jle
xchg
hlt
lret
jg
sbb
outsl
add
sahf
jecxz
mov
cmp
clc
movsl
arpl
out
hlt
jne
or
adc
mov
out
mov
push
sub
lret
jp
mov
sbb
or
xchg
mov
adc
mov
divb
lea
test
ss
out
mov
inc
jno
pusha
mov
sahf
lds
or
and
fdivrs
inc
sub
icebp
cwtl
jg
shrl
sbb
pop
lods
push
cmp
movsl
mov
sub
mov
insb
call
repnz
out
fs
or
sbb
and
int3
out
mov
xor
fwait
push
ljmp
fmull
cmp
jbe
mov
and
push
push
incl
subl
orb
popf
adc
lcall
ljmp
add
xor
in
pop
xor
pop
add
sub
pushw
cmp
xor
in
inc
js
xor
push
jp
lcall
dec
xor
push
sub
incb
adc
fs
ret
in
jo
das
fsubl
je
inc
sbb
clc
js
shrb
test
loopne
pop
roll
fidivl
push
shlb
sub
mov
iret
pop
fstpl
sbb
shll
mov
cmp
jnp
insb
inc
loop
loopne
arpl
ret
dec
pop
jecxz
subl
rol
lahf
pop
mov
sub
and
xor
cld
lret
inc
push
pop
negl
loopne
daa
or
dec
pop
cmp
outsb
sti
pop
sub
dec
push
cmp
sub
jl
mov
ja
sub
call
push
inc
push
push
mov
cmp
arpl
jg
xor
adc
fdivl
mov
adc
enter
push
shll
pusha
mov
dec
das
mov
int
pusha
js
mov
pop
aad
mov
sbbl
pop
call
push
pop
sbb
test
mov
jp
add
push
mov
jae
mov
scas
push
daa
cmp
lret
jbe
mov
out
rcr
std
mov
cli
add
into
aaa
mov
in
js
jb
mov
mov
imul
icebp
sbb
mov
add
or
shrb
mov
jmp
xor
adcb
mov
in
pop
out
mov
test
and
mov
movsl
xlat
push
pop
fcmovb
fs
out
xor
clc
imul
divl
sub
ret
xchg
sub
xchg
fmull
dec
adcb
imul
fadds
xchg
dec
xchg
jne
jb
adc
aam
loope
mov
mov
lds
dec
ds
push
outsb
in
clc
cmpsl
enter
dec
cmp
mov
imul
lahf
dec
pushl
jb
lahf
cmp
sbb
cmp
sbb
cmpsb
jo
cld
scas
out
add
jg
std
inc
cli
inc
loopne
or
rcrl
mov
sarl
jns
mov
stos
lods
subl
mov
nop
bound
shll
xchg
xor
xchg
cmp
jge
shl
jns
lock
mov
or
pusha
popa
test
jbe
dec
add
mov
std
mov
roll
adc
xchg
arpl
lods
out
shl
sub
mov
sbb
xlat
jge
repz
fwait
dec
inc
lret
lret
shll
test
ja
xor
sub
mov
and
out
testl
cld
or
stos
mov
lret
jnp
sbb
sbb
enter
push
leave
aas
popf
push
test
pop
and
mov
add
int3
cmc
cwtl
dec
test
and
dec
aam
pop
and
out
mov
pop
sbb
lahf
rorb
mov
inc
mov
pop
dec
and
lret
or
and
mov
int
inc
loop
jno
sbb
lds
sub
stos
mov
jo
mov
or
xor
pushf
cmp
bnd
xchg
lret
or
and
xlat
les
pop
mov
arpl
je
jb
sub
xchg
negb
push
sbb
data16
lds
mov
ror
into
out
jae
sub
push
jb
scas
pusha
inc
sbb
inc
sub
mov
or
pop
mov
loopne
sub
jmp
arpl
movsb
mov
xor
outsb
call
lds
mov
scas
dec
adc
mov
push
dec
es
repnz
add
mov
mov
rolb
fnstsw
xchg
dec
mov
divb
add
data16
popa
cld
scas
insl
xor
fiadds
pop
xchg
mov
dec
mov
xchg
adc
in
dec
sahf
cwtl
call
or
fwait
xchg
ljmp
adc
push
push
xchg
repnz
jg
fsubs
jne
cs
sub
jbe
sub
xchg
xor
or
add
jl
jmp
aam
aad
pop
cmp
cmp
mov
add
ret
add
adc
pop
xchg
das
xchg
cmp
jo
leave
je
shl
lds
lret
repz
push
mov
pop
roll
aaa
jnp
mov
mov
or
call
movsb
xor
or
jno
pop
lods
pop
in
sub
or
lret
in
add
dec
or
testl
ss
add
pop
jns
dec
lcall
push
xchg
lods
pop
mov
adc
jbe
popa
inc
and
inc
push
and
xor
mov
movsb
pop
ja
out
hlt
and
sahf
outsl
push
orb
mov
inc
pop
jecxz
dec
mov
xchg
fisttpll
test
daa
push
inc
lea
inc
sub
outsb
dec
je
dec
sub
pop
bound
cmp
xor
and
mov
les
iret
movsb
movsl
in
sbb
inc
outsl
add
bound
test
inc
lret
mov
loopne
lcall
xor
cmp
xchg
nop
jae
aam
dec
cmpsb
outsl
insb
push
and
iret
inc
iret
jb
hlt
lods
push
movsb
mov
sub
add
cmp
jmp
rclb
jne
aad
lock
cmpsb
popf
aas
jnp
int
jg
in
imul
mov
xor
fwait
cld
imul
xor
dec
pusha
cmp
aad
stc
push
repz
nop
push
mov
push
fidivs
fisttps
cltd
shll
pop
sub
push
pushf
mov
sub
in
mov
cld
call
cmp
ds
push
inc
inc
lahf
int
fxtract
iret
fs
shll
std
out
lds
jge
sub
repz
push
pop
lcall
addr16
in
int3
pop
mov
xchg
pop
jb
in
inc
xor
xchg
ret
lret
mov
out
stc
xor
add
xchg
addb
aam
leave
pop
push
mull
outsb
or
adc
dec
lea
xchg
xchg
adc
jb
aaa
sub
decb
out
inc
test
xor
lods
dec
xlat
nop
ljmp
xchg
push
lds
add
mov
out
sbb
stos
cmp
or
xor
aad
mov
mov
aaa
pop
mov
mov
mov
out
sbb
mov
aas
lock
shll
addr16
mov
js
sub
adc
or
aam
es
adc
cltd
mov
fwait
jae
inc
mov
jg
cmp
cmp
sub
adc
outsb
ds
es
jno
dec
test
jns
in
ret
sbb
inc
test
push
or
aam
ret
adcb
test
mov
adc
lcall
fwait
cmpl
mov
test
movsb
rcl
mov
repz
enter
repz
outsl
in
add
bound
fildl
sub
xor
ljmp
dec
mov
imull
mov
out
mov
adc
jecxz
rcll
daa
add
or
cmp
les
push
jp
movsl
out
dec
dec
std
negb
ss
and
sbb
fsubs
pop
js
dec
mov
jmp
repnz
test
xchg
jo
sub
mov
or
cwtl
lods
xor
movsl
and
shll
xor
filds
sub
add
sarb
pop
add
fcomps
dec
loope
into
loop
sahf
or
push
xchg
subb
bound
filds
xor
jmp
sub
movsb
mul
mov
mov
imul
push
ret
hlt
cmc
data16
ljmp
repnz
xor
jne
jb
ja
scas
pop
int3
pop
inc
int3
sub
sbb
push
das
icebp
aaa
cmp
pop
cmpl
mov
aam
sub
lcall
gs
in
xor
rclb
mov
dec
gs
push
scas
xor
jns
xor
mov
pop
mov
insl
pop
jb
call
les
add
roll
shr
hlt
adc
push
aas
dec
das
test
aaa
pop
pop
nop
pop
sub
pop
dec
mov
jae
call
xor
sub
or
aas
inc
dec
adc
int
mov
mov
fwait
jnp
mov
push
in
push
sbb
dec
pushf
sahf
sbb
mov
aad
jl
outsl
enter
hlt
xchg
gs
push
push
lods
out
aam
shll
shll
hlt
ljmp
xlat
pusha
stc
repnz
mov
filds
sbb
sti
jmp
fimuls
push
out
xlat
inc
aaa
mov
aaa
sbb
add
loopne
arpl
sub
test
mov
nop
imul
push
call
dec
sarb
mov
stos
jp
test
in
sub
and
mov
sub
daa
test
mov
in
cmp
sbb
push
popf
mov
cmp
nop
sbb
icebp
sahf
int3
cmp
xchg
or
ljmp
rclb
test
mov
mov
sub
cltd
std
xchg
jle
jecxz
pop
movsl
fs
imul
mov
fstl
loope
mov
mov
jae
ror
test
xchg
out
cwtl
fcmovnu
pushf
insl
rcrb
mov
nop
push
inc
cmpsb
or
repz
jno
sub
push
sbb
fimuls
xorb
ljmpw
inc
mov
mov
cmpsb
repnz
mov
xor
outsb
cmp
lds
mull
mov
insb
pop
push
or
mov
icebp
clc
and
mov
jne
popa
mov
push
movsl
adc
rol
and
mov
jl
mov
lods
pop
lfs
in
lods
imul
mov
and
xor
flds
push
sub
or
and
leave
popa
add
test
xor
pushf
jp
adc
cmp
mov
jge
inc
dec
jo
adc
push
sbb
std
pusha
inc
icebp
pop
imul
sub
dec
or
mov
sbb
and
js
je
adcl
scas
pop
jg
aad
lods
mov
mov
mov
fiadds
or
xchg
ljmp
unpckhps
fwait
inc
std
mov
and
repz
mov
pop
jmp
xor
xchg
mov
mov
sahf
or
xchg
loop
jle,pt
push
mov
adc
dec
insl
inc
scas
inc
in
mov
add
xor
push
in
jecxz
jmp
xor
cmpsl
insl
nop
divl
inc
insb
in
cmp
out
dec
sub
aam
mov
movsb
jns
jno
pop
jnp
es
mov
pop
mov
mov
outsl
movsl
scas
std
push
inc
ret
cld
gs
jo
push
loop
fwait
movsb
cmp
js
adc
fdivrp
loop
and
xor
adc
jno
mov
jge
mov
jno
in
loopne
lcall
xchg
adc
icebp
dec
ds
dec
jg
push
xchg
sub
inc
cli
and
loope
jno
in
or
mov
or
mov
mov
call
push
mov
jbe
push
and
ss
ss
lock
dec
lret
stos
mov
fs
push
mov
lahf
push
mov
add
or
iret
jge
push
lahf
adc
dec
lahf
daa
jbe
lret
cmc
fnstenv
je
movsl
jmp
addr16
mov
mov
repnz
hlt
movsb
xchg
ret
leave
int
inc
ds
adc
loopne
dec
or
pop
adc
pop
mov
xor
xor
aam
popf
addl
jbe
sub
insl
push
push
mov
add
mov
iret
mov
mov
ds
hlt
lret
out
push
lods
fcmovnb
cmpsb
scas
mov
hlt
cli
sbb
outsl
cltd
adc
xlat
pop
xchg
push
push
mov
sbb
and
fadds
xchg
xor
addr16
jge
shlb
pusha
mov
rcrb
fcomps
mov
mov
call
xchg
enter
pusha
dec
test
int3
jmp
in
push
cs
mov
dec
in
mov
sahf
dec
shll
aas
flds
fcmove
jnp
add
adc
push
scas
fdiv
cmc
scas
jp,pt
and
out
arpl
imul
test
adc
mov
vpsubb
repnz
jl
fildll
adc
push
loope
mov
xchg
mov
jb
int
call
mov
std
je
mov
push
rclb
sub
das
add
xchg
repnz
cmp
je
aas
pop
orb
and
lock
aad
repz
inc
adc
xchg
xchg
mov
jns
add
mov
xor
icebp
das
inc
pop
push
mov
sbb
std
add
dec
sub
mov
sbb
clc
shrl
push
cld
call
iret
mov
lds
addb
push
or
stos
imul
incb
cmpsb
xor
iret
push
lret
push
dec
inc
mov
js,pt
fadds
addr16
xor
das
or
mov
cmp
loop,pt
rclb
push
sub
dec
jg
mov
xor
in
daa
mov
push
mov
inc
xor
test
popa
orl
mov
mov
xor
dec
lock
add
adc
pop
push
into
jle
loopne
dec
and
mov
sysret
cwtl
mov
ret
mov
and
in
adc
mov
sub
xor
sarb
into
or
xchg
inc
inc
sti
dec
std
ret
shrl
hlt
dec
loopne
rol
rcll
mov
sub
inc
roll
iret
das
lret
mov
jle
pop
xchg
mov
fmuls
push
sarb
fldcw
lahf
push
dec
pusha
leave
mov
sub
dec
or
adc
aad
adc
or
push
dec
jg
jo
addb
and
sbb
or
mov
cmp
ret
adc
lock
dec
lret
cli
aad
gs
fs
xor
sub
and
or
je
icebp
add
fwait
xchg
repz
pop
mov
push
cmp
rol
pop
lret
mov
test
pop
jg
std
rolb
rol
and
inc
or
jg
cmpsl
loop
fmul
pop
sbb
lds
jmp
jno
scas
loope
push
or
fwait
mov
mov
mov
add
push
fmull
push
sbb
jne
and
mov
xor
out
lods
or
jecxz
mov
mov
cwtl
call
sbb
sti
addl
hlt
mov
cwtl
push
fisubl
out
and
or
and
jle
sbbl
ss
insl
or
pop
mov
insl
xchg
daa
lea
sub
dec
in
imul
add
out
lahf
ror
mov
lea
cwtl
mov
xchg
pop
adc
fnstcw
add
pop
fists
mov
pushf
dec
arpl
int3
aam
push
sub
or
mov
out
loope
sub
sbb
aad
cwtl
cld
or
jnp
dec
je
jecxz
sbb
ss
rol
sbb
inc
lcall
push
mov
loope
mov
and
repz
mov
cmp
xchg
lcall
loopne
cmp
xor
fsubrl
dec
std
outsb
dec
stc
add
sahf
mov
or
inc
leave
repnz
sub
aam
push
sarl
cli
xor
and
xor
sbb
adc
jno
dec
iret
outsb
sbb
int3
ja
xchg
inc
sub
in
xor
fwait
repz
sub
ret
loopne
outsb
jl
jnp
or
adc
cltd
lcall
stc
jnp
test
loopne
lcall
and
dec
je
xlat
imul
mov
fwait
in
test
cmp
in
mov
xchg
mov
xchg
push
or
dec
dec
dec
mov
push
aas
testb
xor
ja
or
cmpsl
and
push
xor
int3
outsb
fcomp
xchg
dec
xor
mov
jmp
gs
sbb
mov
shlb
adc
ljmp
dec
push
dec
outsl
repz
jl
shrb
mov
shrb
call
push
sti
or
fidivrs
xchg
mov
xchg
fdivrl
les
pop
jbe
cli
dec
std
pop
ret
clc
in
dec
inc
sub
xor
sbb
mov
in
leave
ljmp
mov
mov
sbbb
jbe
int3
sbb
sbb
push
push
insl
mov
and
and
fnstenv
fbstp
lds
push
clc
js
sbb
insl
pop
mov
jae
lods
xchg
dec
ficomps
scas
xorps
pop
jecxz
xor
daa
pop
iret
and
popa
sbb
dec
mov
jmp
sub
fldl2e
stos
jle
push
mov
sub
sub
adc
adc
xor
movsl
clc
inc
mov
jp
lret
adc
es
add
in
mov
adc
sub
xchg
cmp
cli
jge
les
cld
lahf
rcrl
mov
inc
aam
fnstcw
sub
popf
inc
push
insl
ret
lods
cmp
mov
mov
stc
and
jmp
sub
push
xchg
mov
push
lret
dec
or
cld
pop
pop
aad
or
shrl
shrb
xchg
xchg
mov
int3
mov
ds
adc
add
cmpsb
cld
scas
cmp
push
fwait
in
xchg
or
dec
icebp
jnp
stc
fsts
imul
or
ds
and
fidivs
mov
jae
cmp
leave
xchg
dec
in
in
cmp
out
xor
enter
shlb
bound
jge
lret
adc
movsb
push
and
mov
loopne
dec
jns
pusha
fcmove
es
ret
int
scas
mov
jmp
xchg
iret
jge
adc
jno
mov
add
cltd
cmp
mov
mov
imul
sub
fwait
repz
ret
xchg
lods
in
mov
and
pop
pop
jno
insl
sbb
jbe
mov
and
pop
jg
cld
pop
inc
and
jle
push
lods
inc
mov
push
cwtl
dec
pop
mov
mov
imul
sub
cli
stc
scas
mov
xlat
mov
mov
arpl
sbb
out
test
cmpsl
jno
das
movsl
mov
call
stos
and
dec
mov
or
mov
dec
aas
gs
hlt
ret
fstpt
aas
stos
mov
lahf
jmp
cmp
xchg
push
test
fisttpl
fildl
xor
fstps
fdivs
pop
addb
sub
ds
outsl
mov
dec
mov
add
cld
mov
lea
cld
sub
push
ja
ret
mov
lds
dec
int
push
rcll
rcrl
inc
loop
sub
cmc
aaa
cmp
mov
mov
out
push
mov
mov
inc
push
push
int
pop
jne
xchg
pushf
out
inc
loop
sub
pop
ret
dec
out
pop
loopne
and
mov
adc
stos
mov
out
mov
es
sahf
or
cli
cs
mov
test
cmp
shl
icebp
imul
mov
pop
ret
inc
popf
xor
adc
pusha
sbb
movsb
icebp
xchg
ja
enter
lahf
sahf
adc
sub
push
dec
imul
xor
jo
mov
ret
movsl
sbb
pop
mov
or
mov
jl
outsb
sbb
jbe
mov
adc
xor
imul
sub
fistpll
jbe
icebp
repnz
inc
pop
daa
js
lret
sub
jge
jbe
jbe
js
pusha
xor
gs
pop
movsb
cwtl
fmuls
ds
rcrl
scas
out
mov
fimull
leave
mov
roll
cmp
ss
in
pop
imul
inc
mov
mov
adcb
lahf
int3
cwtl
jle
bound
xor
push
add
sub
or
xchg
dec
jecxz
xor
gs
or
out
in
es
mov
lock
push
mov
mov
mov
fimuls
lods
adc
in
mov
xchg
adc
mov
and
cmp
add
imul
test
aas
jg
arpl
fldt
mov
pop
push
pop
sti
lcall
and
mov
and
aam
sub
xor
lcall
jbe
xchg
lea
shlb
sub
xor
cmpsl
scas
sbb
push
adc
dec
enter
xor
xchg
rolb
or
jmp
je
push
jle
fdivrs
mov
jns
out
cld
icebp
fs
inc
test
adc
jg
cmpsb
xchg
mov
push
push
cmp
arpl
jo
xchg
aad
cmpsb
je
mov
stos
enter
adc
loope
int
adc
or
rclb
mov
sbb
rcl
repnz
mov
icebp
mov
sbb
push
pop
push
rolb
popf
and
subb
mov
xor
cmp
mov
push
mov
cmpsl
dec
adc
push
jecxz
insb
aas
cmp
sbb
sub
xorl
rolb
mov
cwtl
mov
clc
aam
add
push
dec
fs
xchg
or
imul
inc
jne
sbb
inc
lods
ja
sub
jmp
or
test
pop
lret
jmp
xchg
xchg
mov
test
lods
out
push
push
xlat
xchg
cmp
rcr
xor
push
jns
xlat
cmp
xchg
ljmp
aam
loopne
jbe
or
lahf
mov
scas
arpl
sub
push
xor
jns
mov
inc
lods
movsb
push
jg
xor
and
xor
xor
or
fstpl
cltd
gs
push
push
xchg
jo
jmp
aaa
inc
push
adc
sbb
cmp
bound
sub
in
lret
push
and
lods
sahf
or
bound
in
cwtl
ds
mov
sub
test
sbb
adc
js
xchg
sub
fstl
pop
repnz
fistl
in
jae
inc
scas
das
xchg
mov
and
insb
stos
lods
icebp
cmp
push
pushf
aaa
fs
sbb
inc
mov
pop
pop
jle
fmuls
sub
pop
xchg
xor
clc
pop
xor
ja
xlat
and
pop
xchg
xor
mov
loop
or
mov
xor
jo
arpl
int3
adc
call
and
mov
or
xlat
or
pop
cmp
lods
es
jp
pop
outsb
lods
xchg
sbb
daa
orb
fucomi
mov
jp
mov
xchg
movsl
push
xchg
fdivrp
adc
daa
flds
and
push
jns
test
mov
clc
pop
cmp
xchg
and
jmp
fnstsw
in
faddl
das
jmp
sub
adc
xchg
test
mov
int
xor
imul
add
loop
mov
int3
push
adcl
or
out
adc
outsl
mov
mov
jbe
push
adc
hlt
stos
dec
pop
cltd
sbb
jg
test
or
inc
int3
hlt
ja
dec
pop
cmp
cmpsl
and
pop
je
mov
arpl
ret
insl
hlt
mov
mov
pop
sarl
mov
lret
fnstenv
outsl
mov
cmc
outsb
pmaxsw
testl
pop
aaa
cmp
insb
insb
mov
in
and
shrl
add
sbb
mov
dec
lds
adcb
fwait
jecxz
gs
mov
fisubrl
cltd
movsl
pop
jbe
cli
mov
jle
sbb
in
jns,pt
ja
in
add
loop
mov
mov
cmp
icebp
daa
pop
sub
ss
rcrb
test
int3
mov
clc
ficoml
popf
lock
mov
popf
inc
out
jecxz
mov
rorb
mov
xor
add
js
sbb
push
leave
mov
repz
lret
xchg
imul
xchg
cwtl
push
mov
ret
rcrb
stc
mov
mov
sub
out
outsb
sbb
xor
jnp
rclb
aas
aas
mov
inc
or
test
test
fistpll
sahf
xor
xchg
das
lods
jl
pop
push
pause
cmp
addr16
nop
push
in
pop
aam
jg
lods
xchg
or
jae
aam
push
xchg
popa
std
mov
mov
ret
nop
and
sbb
mov
pop
inc
test
lea
mov
push
stc
xchg
xrelease
sub
add
xchg
test
mov
sbb
repz
subb
dec
gs
std
daa
divl
adc
xchg
adc
mov
adc
mov
mov
dec
movsl
xchg
lds
cmp
fisttpl
int3
daa
mov
pop
xor
sub
xchg
dec
lcall
ljmp
movb
dec
dec
push
cs
stos
loopne
mov
jp
mov
cli
dec
mov
mov
jnp
inc
jo
dec
rcll
aad
add
ficompl
adc
or
mov
add
cwtl
push
icebp
dec
sub
js
cwtl
ret
or
js
jp
mov
or
sub
arpl
hlt
pop
aam
call
inc
icebp
ret
push
loop
aam
imul
add
and
push
sbb
dec
andl
xor
push
ja
lea
pusha
rorb
inc
pusha
cmp
ret
lret
mov
xchg
xchg
movsb
iret
or
out
push
push
inc
push
xchg
rcl
into
push
mov
icebp
out
fdivs
imul
push
test
adc
fidivl
adcb
push
mov
mov
gs
out
lea
sub
xchg
scas
push
popf
dec
mul
mov
pop
push
push
fisubs
addr16
or
dec
scas
je
push
mov
mov
mov
or
pop
insb
lahf
sahf
inc
jo
jg
xor
insl
adc
sub
sbb
into
pop
xor
cmp
cwtl
cwtl
inc
ja
dec
loope
mov
xchg
xchg
mov
push
mov
mov
push
dec
cmp
dec
fstps
xor
xchg
inc
push
fmuls
lock
mov
aas
lods
cmp
jle
fwait
cmc
lods
sbb
cmp
es
je
std
jns
push
pop
cmpsb
sub
fbstp
sbb
arpl
mov
call
xchg
aad
lcall
aad
mov
mov
imul
xlat
xlat
arpl
stos
mov
sbb
pop
push
fdiv
lea
test
and
scas
sub
addr16
stc
mov
push
cli
test
lret
push
clc
out
xchg
sub
fwait
lret
call
or
call
or
and
popw
pop
or
imul
jnp
adc
xor
cmp
stos
push
sbb
pop
jne
out
arpl
or
dec
jno
addr16
std
sub
pusha
nop
jns
jecxz
sbb
push
jp
std
mov
sbb
mov
sbb
roll
and
sbb
add
clc
fisubl
pop
fsts
scas
cmpsb
dec
in
dec
roll
movsb
xor
mov
sti
cmp
adc
stc
xchg
dec
insl
aaa
jecxz
jp
pop
test
in
fbstp
adc
icebp
cmp
in
lods
push
lret
cltd
fwait
call
imul
mov
imul
sbb
mov
popf
fucomi
mov
xor
lret
divb
push
sbb
pop
in
adc
lods
enter
movsb
loopne
outsl
mov
bound
sbb
repz
sub
mov
mov
mov
gs
mov
je
ret
adc
dec
jg
ljmp
imul
fnstenv
pop
push
lods
cmp
mov
pusha
cmpsb
mov
rolb
push
subb
add
fidivrs
dec
sahf
sub
mov
sub
movsb
ret
je
movsb
sub
aam
fmull
loopne
xchg
pop
mov
mov
push
dec
mov
dec
xlat
cmc
cmpsw
and
movl
insl
pop
jl
pop
in
xlat
or
jno
sahf
andb
ss
and
cwtl
test
pusha
and
pop
pop
daa
push
adc
cs
enter
add
dec
sbb
sbbl
mov
dec
cmp
stc
dec
aad
adc
adc
aad
hlt
repz
dec
push
scas
fwait
mov
adc
std
pop
pop
push
jne
mov
hlt
das
jl
lahf
jns
pop
rcll
mov
pop
sbb
outsl
stos
cmpsl
push
mov
jmp
repz
cs
je
cmp
or
stos
lahf
sahf
fcomp
out
ss
jmp
imul
mov
mov
cmpsl
inc
or
inc
call
and
fisubrl
je
push
mov
xor
pop
shll
cli
insl
push
pop
mov
idivl
push
ja
aas
sti
call
mov
out
xchg
out
push
clc
popf
loope
mov
test
jmp
scas
in
cmp
push
bound
xor
sbb
into
subl
daa
jle
jmp
outsb
pop
popa
mov
test
ljmp
mov
out
jns
cmp
je
xchg
inc
and
dec
xchg
jle
cmp
or
sbb
inc
rcll
mov
insl
in
jg
pcmpgtw
jp
xor
cwtl
jb
jbe
sarl
xchg
loopne
push
ss
sbb
mov
jle
mov
jno
sub
shlb
pop
sub
jnp
xor
lcall
mov
adc
dec
outsl
add
subb
rcrl
adc
mov
pop
scas
pusha
pop
test
adc
cli
test
jecxz
mov
jne
add
xorl
mov
icebp
or
sub
insb
imul
in
inc
stos
adc
dec
cmp
push
imul
frstpm(287
mov
int
cmp
adc
dec
xor
lds
inc
test
add
inc
cmpsl
sahf
shr
add
mov
daa
pop
pushf
sub
pop
or
call
out
out
lock
mov
shr
lds
out
cmovno
xor
or
cmpsb
cli
pop
pop
mov
test
cmpl
fnstenv
test
rclb
lock
in
fs
test
add
mov
push
lret
jge
clc
jno
cmp
and
in
stos
movsl
sub
mov
mov
push
fbstp
and
adc
bound
mov
add
sti
addl
xlat
xchg
mov
inc
ss
loop
pop
inc
fiaddl
stos
lret
fcompl
mov
jbe
out
pop
xchg
sbb
push
in
ja
adcb
jecxz
push
adc
out
xor
adc
pop
int
jge
ficompl
mov
daa
xor
jecxz
jns
std
sbb
push
dec
mov
imull
dec
jno
ficoml
divl
mov
inc
out
sbb
sbb
pop
ss
fiaddl
sbb
jle
mov
pop
je
xchg
mov
pusha
pop
adc
push
push
or
and
mov
mov
pop
popf
or
and
xchg
jmp
mov
mov
jmp
mov
sbb
xor
icebp
adc
sbb
aam
xchg
int3
test
aam
inc
cmc
popf
subl
loope
mov
mov
fidivs
int
sub
incb
add
fldl
mov
adcb
inc
test
jae
sarb
and
mov
or
pop
xchg
dec
outsb
bound
cmp
rorl
stos
inc
inc
inc
ja
mov
xchg
shrl
push
cs
sub
xchg
xchg
jnp
add
inc
je
sbb
rclb
rcll
addr16
push
inc
push
adc
push
rorb
popa
roll
insb
fs
out
add
out
cs
lods
jp
mov
popa
add
push
jge
push
incb
xchg
cmp
mov
dec
xchg
cmp
loope
scas
test
adc
repnz
cmp
test
popa
xchg
mov
push
addl
loop
sahf
pop
xlat
aam
arpl
cmp
rcrb
lods
and
es
adc
loope
iret
dec
jp
shl
xlat
movsl
push
mov
cmp
aaa
jns
mov
mov
out
call
lahf
fidivs
or
sbb
movsb
outsb
adc
mov
test
push
mov
push
mov
stc
and
fnstenv
dec
push
mov
imul
jg
adc
enter
pop
fisubs
clc
xchg
fstl
mov
pop
dec
jl
xor
jno
adc
cmp
mov
cld
jmp
sbb
dec
xchg
outsl
clc
mov
out
xchg
mov
cmpl
js
and
adcb
cmp
or
xchg
repnz
cmp
imul
xor
out
mov
jo
stos
lahf
mov
cmpsl
int3
or
movsb
push
cmp
iret
mov
test
push
popa
pusha
add
jl
mov
sbb
pop
cli
jge
push
pop
and
jecxz
jp,pt
pop
into
ucomiss
jb
sbb
in
repz
cmp
and
xchg
mov
lods
add
lea
cmpl
insl
aam
xor
and
nop
add
jp
mov
pop
mov
pop
xchg
xchg
and
push
mov
fwait
into
mov
imul
int3
mov
fldcw
sub
or
pop
nop
inc
or
inc
sub
inc
movsl
add
adc
mov
stc
adcb
xor
in
ljmp
das
hlt
mov
xor
xchg
adc
out
mov
xchg
aas
sub
or
ret
dec
mov
aas
out
jle
fisubrs
popa
jae
jge
xor
jbe
jmp
imull
mov
and
mov
mov
out
push
mov
scas
and
ficoms
aas
loope
push
ret
mov
outsb
fsubl
jo
xor
jbe
fwait
sbb
push
mov
ret
outsb
fidivrs
push
pop
sahf
inc
rclb
push
push
inc
ja
add
adc
cs
je
hlt
jmp
fimuls
movsb
inc
mov
and
sub
out
mov
mov
pusha
mov
push
jg
add
das
out
stc
shll
neg
mov
rclb
leave
and
or
pop
pop
or
in
xor
jle
movsl
push
adcl
nop
out
scas
xchg
lods
xchg
gs
xor
xor
stos
jnp
xchg
sbb
lods
mov
jae
or
cmp
lret
enter
clc
push
popa
gs
loop
adc
in
and
jmp
jecxz
fstl
add
movsl
or
pushf
push
sbb
jae
addr16
jp
cltd
mov
sub
fisttpl
inc
dec
lods
fbstp
ror
add
inc
or
rclb
addr16
or
add
imul
fbld
call
pop
sti
test
lret
and
push
xchg
adc
cmp
add
jg
mov
ss
pop
inc
add
imul
jns
push
int3
push
mov
adc
ljmp
aas
adc
addr16
cmp
pop
xchg
cltd
adc
jne
fimull
cmpsb
ret
lea
nop
paddb
sub
gs
clc
sbb
call
fdivl
or
outsl
jle
shlb
jbe
scas
enter
mov
adc
cmp
ror
cmpsb
out
or
jbe
xor
cs
das
loop
push
sbbb
test
shll
insb
rcr
cmpsl
pop
mov
pop
cli
shr
lret
jp
cmp
or
mov
and
sbb
mov
fsubs
jne
fidivrs
gs
loope
aam
mov
push
in
push
mov
outsl
xor
cmp
and
mov
or
shlb
ja
cmp
mov
dec
scas
loop
dec
gs
inc
pusha
pop
aam
mov
xor
push
fisttps
push
jnp
mov
pop
or
shlb
inc
ljmp
dec
pop
sub
push
scas
pop
push
or
push
daa
int
push
sub
cwtl
rcl
orl
scas
enter
jmp
cmp
or
out
xchg
and
aaa
mov
dec
cmpb
add
pop
xor
dec
xchg
outsb
xor
mov
loop
stos
inc
cmpsl
xor
in
mov
jg
sbb
out
pop
push
push
mov
jp
xorl
xchg
dec
and
scas
enter
mov
jo
cli
inc
test
fcos
sub
icebp
jbe
repnz
dec
testb
nop
outsl
mov
push
push
jns
mov
cmp
xor
pop
out
pop
lods
loope
push
adc
cmp
std
or
iret
and
add
xchg
push
cmp
mov
mov
adc
xorb
mov
jno
pushf
push
sbb
ret
test
jno
out
enter
xchg
das
test
dec
jl
push
add
sahf
icebp
xor
pop
xchg
es
add
icebp
aaa
enterw
pop
decb
pop
ja
loopne
iret
jp
leave
cmpsb
out
js
test
and
jns
mov
cmpsl
ljmp
cli
add
repz
push
imulb
imul
and
add
xchg
push
incb
xchg
cmp
pop
jno
inc
add
adc
sbb
mov
adc
loop
scas
int
inc
loop
les
negl
dec
mov
mov
mov
push
jmp
sbb
adc
xchg
pop
adc
lock
pop
push
icebp
or
push
mov
daa
shll
in
push
aaa
adc
xchg
jne
sub
out
mov
stos
mov
cmpsl
jp
aad
fwait
cmp
cmp
push
jp
lods
sbb
sbb
pop
sub
pop
lret
adc
add
adc
mov
stos
cmp
push
or
hlt
xor
cltd
addl
call
repz
push
or
jno
lods
rcll
pop
mov
jl
leave
inc
sbb
jmp
cld
xchg
sbb
mov
fwait
push
shlb
xor
aaa
inc
or
repnz
xchg
insb
push
or
shlb
sbb
jecxz
sbb
sbb
pop
enter
lret
ficompl
or
sub
mov
jge
ljmp
call
lock
std
mov
cmp
je
movb
addb
or
sahf
scas
lret
jmp
jno
lahf
aad
cmp
jp
mov
movsb
mov
pusha
fcmovnb
xchg
and
and
rcrl
jbe
mov
sub
stos
insl
insl
mov
xor
es
movsb
data16
inc
push
xchg
cmpsl
sbb
ja
sarl
lea
cmp
popa
enter
scas
mov
bound
inc
leave
sub
jnp
enter
mov
sub
jbe
adc
add
or
mov
cmc
popf
icebp
in
lcall
fmul
or
pop
in
xor
pop
push
xor
insb
in
into
lret
hlt
sbb
ljmp
mov
ja
icebp
and
mov
or
ret
xchg
imul
dec
dec
imul
jl
add
stc
jb
mull
xor
lret
daa
mov
nop
adc
addr16
dec
mov
push
xor
repnz
or
add
rorl
cld
test
rclb
adc
jmp
jns
xchg
shrb
cwtl
shl
jns
mov
or
in
mov
or
sbb
in
test
mov
and
jl
push
cmc
push
xchg
mov
hlt
sub
aas
repnz
mov
je
fistps
stos
mov
popf
pop
xchg
ret
xchg
shlb
pop
pusha
les
jno
jae
test
out
dec
cmp
jns
push
bts
adc
in
pop
push
mul
xchg
push
int
or
xchg
lods
mov
add
ja
das
out
mov
xchg
push
cmc
add
cmp
incb
imul
cmp
cld
pop
and
jmp
push
and
cmp
aad
test
mov
lahf
in
lea
push
xchg
and
in
fstl
xchg
push
cltd
in
mov
ret
mov
xor
insb
mov
sbb
pusha
sbb
mov
adc
cltd
iret
cmc
cmp
pop
mov
cli
push
adc
rolb
jg
into
hlt
ret
xor
test
mov
inc
stos
gs
adcb
xchg
insl
addr16
enter
inc
cmpl
lock
mov
cmpsb
mov
negl
loop
mov
inc
xor
orb
fdivs
adc
cmp
ficomps
and
imul
push
mov
mov
aaa
fdiv
pop
mov
pop
jl
popl
xor
sahf
rcrl
hlt
pop
mov
outsl
add
je
pop
inc
sbb
lahf
aam
push
cmp
mov
sbb
sti
pop
cmp
lret
aad
xorl
daa
mov
sub
cmp
pop
popf
xor
add
fcomps
scas
jp
cmpl
push
repz
push
stos
xor
scas
das
aad
jle
mov
movsl
cmc
xlat
xchg
dec
aad
pop
jle
xchg
push
pop
and
push
movsl
inc
je
insl
add
mov
xchg
stos
ret
mov
ds
stos
sbb
pusha
mov
mov
inc
ds
xor
push
int
outsl
std
mov
fmuls
mov
mov
push
stos
xchg
mov
and
shrl
lock
sbb
or
outsb
cmp
je
fsubs
adc
sbb
xor
daa
jbe
ljmp
mov
push
dec
test
dec
out
pop
iret
shlb
jecxz
cmp
les
cld
loope
mov
negl
pushf
mov
pop
shrl
movsb
fildl
rcll
cwtl
sbb
dec
adc
imul
mov
lret
add
pop
add
pop
xorl
or
into
jne
xlat
imul
int
sbb
imul
mov
xlat
outsl
pop
dec
test
int3
adc
sub
loopne
in
rorl
test
sahf
sbb
outsl
mov
mov
js
outsb
or
mov
daa
xchg
jo
xchg
rolb
push
fbstp
popa
jg
loop
dec
mov
pop
push
cmpsl
shl
outsl
in
out
dec
dec
rclb
xchg
adc
les
nop
or
rorl
jle
push
mov
mov
inc
ljmp
pop
loope
rol
pop
in
ss
repz
inc
pop
push
dec
ret
fdivs
sarl
jg
jne
push
cs
lret
jb
aaa
les
add
popa
and
insl
loopne
test
pop
xor
inc
add
xor
or
fs
cli
add
mov
shl
out
mov
mov
mov
fcmovne
jae
stos
dec
cltd
cmc
pop
cmp
xchg
int3
push
pop
sti
jnp
insb
adc
outsb
cmpsl
rcll
loopne
push
adc
pop
push
aam
outsl
jns
xchg
out
mov
out
pop
je
outsl
js
stos
fwait
loope
sub
mov
fdiv
out
sub
jb
aam
push
push
xchg
aam
das
test
mov
add
fucom
sub
cmc
mov
jg
cli
xor
movb
jo,pt
adc
leave
nop
lds
bound
mov
or
push
cmp
xchg
xchg
mov
mov
roll
mov
fdivs
sbb
fbstp
adc
jg
enter
sub
inc
or
test
inc
iret
imul
mov
sarl
xor
dec
sbb
stos
lods
movsl
out
jae
mov
dec
outsl
or
push
push
add
out
add
add
addr16
sub
push
add
mov
test
push
sti
in
cmpsl
sarl
jecxz
mov
rorb
and
ret
std
jg
add
pop
mov
mov
or
or
gs
mov
lods
icebp
mov
push
dec
cmp
sarb
popa
inc
shlb
sub
xor
outsl
repnz
notl
test
arpl
xor
push
sar
add
jmp
ja
or
dec
push
adc
repz
call
mov
mov
arpl
jecxz
imul
je
xchg
mov
cmc
jbe
jge
hlt
ret
pop
pop
jb
inc
sahf
iret
sarl
sub
movsl
arpl
dec
in
sbb
into
pop
push
sbb
sbb
jns
rolb
aam
push
icebp
call
adc
lahf
pop
mov
aad
add
adc
xchg
aas
lods
xchg
jmp
or
je
push
lock
stc
adc
xor
push
mov
daa
mov
xchg
lahf
adc
leave
sub
jns
pop
test
nop
cmpsb
or
daa
lret
lahf
mov
push
cmpb
aaa
int
das
pop
and
add
push
mov
add
stos
xor
loopne
inc
mov
xchg
inc
or
pop
mov
out
pushf
sub
inc
cmp
jne
sbb
add
xorl
fs
or
push
roll
daa
lods
popf
loop
shl
mov
icebp
cs
adc
sbb
nop
pusha
ds
add
jno
jbe
mov
pop
xchg
faddp
insl
lock
aad
dec
imul
iret
cmp
popa
pop
jmp
fs
sbb
sub
ljmp
jg
mov
scas
in
shll
push
shl
pop
xor
out
xchg
cwtl
or
ljmp
cmp
sbb
push
jge
stos
call
ret
pop
mov
andb
movsl
bound
push
mov
ret
jo
mov
mov
inc
out
jae
pop
mov
mov
push
pop
xor
pop
mov
inc
ds
push
adc
jne
lods
nop
scas
into
andb
int3
movsl
xchg
inc
lea
push
jns
aad
cmp
lret
adcb
loopne
add
popa
fsubrl
jae
jns
push
enter
mov
repnz
into
dec
jnp
xchg
clc
jbe
arpl
mov
or
daa
shr
jnp
pop
scas
test
scas
pusha
mov
pop
out
movl
mov
and
mov
sbb
movsb
dec
or
mov
mov
cld
cmpsb
add
cs
mov
inc
sbb
push
out
xor
adc
es
outsb
nop
sub
leave
jne
and
lods
cmpl
xlat
aas
andb
movsb
mov
adc
insb
dec
scas
add
xor
fsub
cli
inc
fisttpll
add
decb
arpl
daa
xchg
add
mov
hlt
lret
fdivl
push
shrl
ljmp
cmp
mov
loopne
cmp
mov
xchg
or
mov
sub
icebp
mov
xchg
cmp
repz
mov
lods
or
movsl
out
movsl
xchg
cli
add
stos
imul
mov
xchg
mov
lahf
jnp
cmp
pop
mov
cmp
jge
add
xchg
orb
pop
in
mov
inc
xor
mov
mov
hlt
pop
sbb
int3
aas
inc
mov
inc
cmp
or
iret
ss
push
test
xor
out
pop
enter
dec
dec
xchg
dec
inc
inc
aas
ljmp
arpl
pop
push
stos
cmp
jge
fldcw
mov
jmp
test
ljmp
dec
lcall
xor
lcall
sti
js
cmpsl
mov
mov
dec
pushf
test
cmpsb
cmpsl
fwait
scas
xchg
mov
jno
shlb
jl
adc
pop
push
sarl
sti
push
stos
push
inc
lds
or
gs
dec
scas
push
outsl
int
sub
out
cmp
cwtl
loopne
and
mov
jno
push
mov
xor
popa
icebp
mov
mov
out
cmpsl
push
es
test
hlt
leave
xchg
push
add
jne
inc
sti
add
dec
cli
push
cld
arpl
popf
push
lea
dec
sbb
pop
xchg
sbb
xor
mov
xorl
pop
push
fwait
out
imul
ja
sbb
jecxz
lret
dec
test
and
movq
in
jecxz
js
mov
mov
scas
jl
mov
outsb
popa
dec
dec
add
mov
mov
mov
aaa
pop
subb
xchg
fadds
dec
push
pusha
jmp
sub
and
jmp
ret
sti
fisubl
inc
adc
hlt
in
cmpsb
jp
ret
and
mov
add
into
xor
cmp
jp
ja
cmc
cmp
cmpsl
add
into
xor
jl
mov
aad
xor
jp
pop
out
push
add
and
mulb
and
nop
mov
lcall
hlt
cmp
adc
insl
enter
xor
push
iret
inc
sbb
sbb
jmp
lods
les
and
add
mov
pop
jl
inc
pop
outsb
xchg
jns
imulb
or
clc
fidivs
int3
pop
mov
sbb
data16
lret
lods
jmp
rclb
cmp
int
in
sbb
xor
push
adc
sub
lret
dec
xor
cmp
push
adc
lds
sti
dec
orl
jge
scas
inc
pop
jle
in
popa
loope
ds
out
jle
ror
pop
or
pop
jge
push
adc
pop
rclb
cmp
mov
xchg
pop
sub
jl
jo
aas
stc
xchg
subl
inc
jo
xor
cmp
aas
int
ret
mov
in
addb
shl
xchg
insl
mov
mov
dec
out
sbb
jl
dec
push
int3
popf
jne
push
push
pusha
jno
pop
add
push
adc
push
cmp
adc
fidivs
fistpl
fsubp
pop
imul
jge
lock
xchg
movsl
dec
stc
and
or
cmp
insl
dec
mov
jne
cltd
mov
pusha
cmc
pop
jbe
sub
pop
cltd
ss
cltd
mov
sub
mov
dec
mov
mov
shlb
and
repnz
aam
shll
sub
popf
sbb
and
or
lds
neg
jmp
sbb
hlt
and
into
dec
jo
and
call
test
xor
mov
push
lods
scas
test
js
mov
lods
fldcw
mov
inc
out
js
xchg
fstpl
sub
adc
lret
push
hlt
icebp
aaa
mov
and
sbb
lcall
into
iret
inc
lock
lahf
mov
iret
xchg
jo
dec
rcl
mov
pushf
popf
cmp
mov
xchg
fs
into
movsb
leave
adc
dec
into
mov
ljmp
into
aaa
cltd
test
pop
pop
push
rclb
lods
inc
mov
test
xchg
cld
dec
xchg
gs
pop
lahf
daa
cmpsb
cmp
test
jg
shlb
cmp
mov
stc
inc
shr
xor
pop
sbb
pusha
cmc
jno
dec
stos
int3
push
daa
nop
push
loop
push
push
inc
js
pop
push
sbb
jb
out
in
clc
fdivs
adc
test
pop
outsb
aam
daa
or
mov
xchg
mov
sbb
lods
or
adc
lods
dec
or
xchg
pop
inc
imul
jl
aas
jle
cmp
push
cmpsl
sti
inc
sub
push
xor
fstpt
adc
xor
xor
loope
pop
add
push
add
shlb
imul
xchg
aaa
mov
pop
int3
scas
pop
mov
bnd
cltd
pop
or
push
or
or
mov
jmp
mov
adcl
lock
fbld
fsub
sub
leave
or
xchg
adc
out
aaa
mov
sbb
into
add
or
sbb
jg
andl
sahf
mov
iret
push
dec
lcall
inc
scas
fmuls
push
scas
dec
movsl
inc
int3
aas
enter
cmp
add
stos
mov
inc
mov
jns
mov
mov
jmp
aad
mov
jnp
pop
mov
push
jns
mov
shlb
sbb
imul
sbb
mov
insl
mov
ret
sbb
pop
xor
stos
adc
sub
adcb
sbb
hlt
js
cmpl
fisubrl
subb
push
mov
out
push
cs
pop
cld
inc
push
pop
cmp
adc
int
mov
xchg
mov
mov
orb
add
jmp
mov
inc
mov
jecxz
in
rcr
rcr
idivb
jp
pop
adc
addr16
arpl
ret
push
shlb
popa
and
in
push
xor
movsl
add
dec
sbb
mov
call
je
hlt
fwait
push
jae
shll
scas
lahf
add
ja
add
scas
cmp
testb
mov
mov
or
loope
fcmovnu
and
sub
lret
loop
sbb
icebp
inc
and
inc
and
jbe
cltd
arpl
xor
sub
add
imul
stos
lret
shll
out
lahf
mov
shl
and
sbb
dec
sbb
je
mov
lahf
stc
pop
cmpsb
and
pushf
pop
lock
fsts
push
test
je
push
lods
xor
lret
jns
divl
inc
inc
outsw
movsb
popf
pop
mov
pop
sub
lock
push
shll
stc
cs
inc
mov
cmp
das
cli
add
stos
fwait
xor
xchg
push
jbe
xor
rcl
ds
sub
fstp
push
bound
lcall
popf
jmp
mov
pop
inc
ljmp
jbe
sbb
lret
and
cmp
loop
popf
or
popa
mov
xor
mov
push
fcmove
mov
cmp
in
ss
test
inc
fidivs
mov
shlb
js
nop
jmp
out
adc
mov
inc
mov
insl
clc
jne
fcmovnbe
mov
mov
mov
sahf
dec
xor
cmp
fcoml
orl
test
orl
loop
inc
mov
adc
push
dec
pop
movsl
inc
xchg
inc
lock
sbb
sub
jne
push
dec
stc
fistpl
jbe
fcoml
movb
popf
xchg
andl
jge
subl
xchg
add
lods
lahf
mov
subb
mov
cmpsb
jno
xchg
push
mov
cmp
push
cltd
mov
nop/reserved
je
mov
lcall
fists
popa
in
fchs
xor
or
pop
addr16
push
mov
push
cmp
pop
lds
push
or
nop
loop
fwait
into
mov
inc
xor
stos
bound
mov
jae
out
lcall
lea
icebp
and
fmull
inc
and
sub
cmp
xchg
subb
js
std
cmp
dec
jns
inc
int
pusha
enter
imul
adc
aam
pop
jle
les
jno
clc
addr16
test
sahf
mov
mov
es
adc
fiadds
pushf
pop
inc
mov
cmp
loop
jl
sub
cmp
xchg
stos
sbb
pop
ljmp
lahf
push
push
lods
or
out
mov
pop
inc
int
ret
xchg
icebp
stc
adc
xchg
aas
sti
sbb
jmp
stos
mov
push
sub
push
mov
repz
jg
and
mov
xlat
pop
mov
push
sub
add
push
mov
xchg
and
aad
xlat
nop
popa
ja
mov
lret
inc
in
mov
inc
in
test
pushf
call
cmp
dec
in
shll
test
mov
dec
scas
jmp
stos
shrl
or
rorl
xor
cmp
or
lret
ret
inc
xor
add
jns
xor
inc
popa
jbe
jl
push
adc
mov
gs
test
inc
mov
fdecstp
xchg
cmc
jnp
add
icebp
add
enter
in
aam
sub
adc
iret
push
xchg
jecxz
xor
xor
sbb
or
xor
xchg
sub
fs
mov
fisubrs
adc
pop
les
fs
or
xor
shrl
int3
imul
jno
and
and
sbb
or
rcll
fisubrl
icebp
lcall
lret
xor
fs
pop
adc
push
imul
sbb
outsl
push
pusha
push
cmpsb
sbb
jnp
pushf
imul
jle
gs
lods
mov
mov
daa
inc
mov
push
mul
jmp
mov
out
idivb
mov
push
je
bnd
xor
repz
faddl
out
dec
push
and
cmp
call
shrb
ss
sub
aaa
xchg
cmp
lods
xor
daa
add
cmpsl
mov
out
mov
jae
loop
gs
mov
push
outsl
push
loop
div
sub
inc
pop
out
loop
cmp
inc
shlb
loope
call
mov
adc
in
out
subb
jg
add
arpl
adc
mov
hlt
mov
mov
aaa
and
cli
inc
mov
inc
aad
and
in
jb
cmp
into
mov
outsl
add
and
pushf
and
inc
or
inc
jno
test
mov
das
sub
sub
pop
xor
jl
xchg
xlat
inc
insl
jbe
sti
adc
lret
int3
fisubs
repz
add
and
jge
cld
xchg
xchg
inc
in
andb
push
mov
mov
out
add
scas
jg
in
pop
imul
loope
imul
cmpsl
aad
mov
inc
pop
aam
cmc
fwait
jb
add
mov
pop
aas
out
adc
jmp
xor
add
mov
inc
xor
mov
xchg
sub
cmc
in
mov
push
les
xchg
sub
popa
std
pop
std
dec
xchg
shrb
mov
push
cmpsb
stc
mov
xor
push
jecxz
data16
lds
jmp
ja
out
jae
cmpsb
aad
xchg
cs
or
pop
loopne
shrb
dec
cmp
sub
jne
add
add
loopne
adc
mov
pusha
sbb
loope
cmp
mov
pop
jne
addr16
or
insb
stos
adc
push
stos
jmp
cmpsl
call
stos
jp
mov
pop
dec
sbb
xor
adc
mov
and
sbb
das
adc
add
push
sub
mov
mov
std
inc
lret
test
sbb
add
in
dec
rep
shl
or
xor
notb
les
sub
dec
mov
andb
or
jno
xor
mov
insb
test
cmp
jmp
push
pusha
jmp
mov
dec
rcrl
or
test
mov
sbb
fstps
cmp
or
xchg
ret
add
push
mov
xchg
mov
inc
jae
add
push
outsb
test
les
cmpsl
xchg
or
jl
and
mov
lret
mov
stos
jnp
mov
cmp
repz
xchg
push
xchg
mov
daa
sub
push
sbb
fcoml
or
daa
add
xor
daa
int
push
push
add
fbld
mov
add
cs
addl
dec
jns
or
mov
xchg
imulb
insb
icebp
push
mov
movsb
insl
addr16
add
test
daa
call
ret
xchg
idivl
xchg
mov
popf
xchg
rcrl
sub
cmp
jno
push
jmp
fiadds
lcall
repnz
imul
push
mov
and
or
lock
pop
hlt
dec
jge
xchg
xlat
and
xor
inc
jmp
jbe
sub
test
loopne
cmpl
push
push
or
mov
imul
test
push
push
shll
jnp
and
daa
clc
fdivr
pop
adc
in
bound
cld
pop
inc
fisubs
fidivrl
push
mov
sbb
sbb
int
aam
ds
jae
jne
outsb
shlb
test
dec
aas
loopne
jge
sbb
test
sbb
dec
pop
add
jg
out
dec
mov
pop
jo
jmp
and
inc
mov
push
xor
dec
or
jno
cmp
cmpsw
cmc
xor
stc
test
scas
mov
pop
arpl
pop
xlat
push
es
cmp
cs
in
xchg
add
sti
sub
das
mov
mov
sub
stc
mov
dec
fwait
fs
jmp
out
iret
leave
rcl
mov
inc
loope
or
pop
andl
mov
data16
clc
cmovno
pushf
insb
loop
call
jp
mov
dec
xchg
test
adc
pushf
lret
push
aas
es
imul
test
in
jecxz
add
imul
add
add
jo
scas
mov
stc
dec
repnz
ljmp
sbb
or
jnp
jnp
outsb
aad
push
mov
xor
and
jle
cmp
fisubrl
inc
or
mov
pop
dec
insl
mov
movb
pop
mov
in
or
sbb
inc
sub
mul
arpl
dec
add
sbb
jno
sub
dec
mov
das
inc
fldcw
nop
dec
push
cmpsl
repnz
and
jb
lds
inc
cmp
aas
jb
jne
adc
dec
pop
adc
mov
mov
xor
or
inc
xor
push
leave
inc
aam
hlt
push
lcall
repz
jmp
filds
cs
pop
push
test
sub
inc
mov
adc
mov
jmp
push
mov
repz
sub
aas
mov
adc
aas
jno
adc
lea
int
bound
xchg
jle
lcall
pop
cs
out
mov
je
jle
or
jae
push
popl
inc
sarb
sti
insl
into
lds
cmp
scas
lret
xor
aad
testb
mov
inc
inc
std
sub
sti
imul
mov
xor
mov
movsl
push
push
xchg
xchg
negl
and
push
cs
pushf
cmp
cltd
jb
imul
mov
dec
clc
bound
shlb
out
stos
inc
aaa
xchg
mov
or
cmpsb
xchg
sarl
add
jecxz
sub
xchg
cli
test
cmp
mov
jae
rcrl
jl
aam
and
push
jecxz
popf
lret
sbb
mov
xchg
jg
cld
scas
sbb
sub
jle
push
lea
test
adc
inc
lahf
add
mov
dec
es
xchg
pop
xor
inc
std
push
xchg
xchg
mov
ja
inc
fisubrl
dec
dec
lods
lahf
jle
xchg
add
jb
cmp
loopne
and
gs
lock
inc
jo
mov
shl
shl
rcrl
sahf
sbb
cwtl
outsb
push
inc
jl
cmp
das
gs
fs
popf
notl
xor
sbb
push
hlt
push
es
lret
fwait
sar
js
mov
add
cld
leave
adc
sub
inc
in
mov
and
push
mov
xchg
mov
jmp
jmp
mov
cmovp
or
lahf
mov
jle
lds
ja
mov
jns
mov
shll
int
push
dec
lahf
pcmpgtw
pop
xor
hlt
or
push
dec
js
pop
jp
sub
jne
mov
xchg
daa
dec
dec
faddl
fs
ja
aas
mov
outsb
push
mov
push
xchg
inc
cmc
dec
xchg
jo
in
lahf
xchg
not
sub
dec
jge
lods
sbb
stos
aam
dec
sbb
dec
shrb
les
fmuls
mov
and
or
mov
adc
xlat
test
push
aas
dec
scas
xor
daa
and
or
stc
movsl
gs
push
mov
iret
lret
pushf
dec
and
push
sbb
inc
aas
xchg
gs
inc
pop
push
add
je
inc
idivb
mov
pop
fwait
insb
ds
cmpsb
std
dec
in
push
lret
xor
iret
sub
ret
clc
data16
xor
jge
mov
adc
sbb
jo
popf
loope
cmpsb
or
fimull
sub
into
sub
pop
dec
add
add
pop
stos
sbbb
scas
cmpsl
xor
xchg
dec
fisttps
ja
push
pushf
stos
pop
fistpll
push
mov
sub
or
mov
das
bound
xor
stc
mov
lds
pop
rol
or
aas
cmp
mov
rorb
dec
jp
movsl
loopne
dec
repz
incb
loop
sub
jle
divl
js
pop
aas
out
add
rcr
mov
dec
pop
scas
jns,pt
out
fs
jnp
jl
xor
mov
push
cmp
pop
sub
lock
in
rcrl
push
movsl
dec
ljmp
fs
push
incl
push
ja
jns
int
mov
movsl
adc
add
adc
rol
dec
rcrl
xor
cmp
in
pop
cwtl
and
mov
xor
cmpsl
inc
push
fldcw
out
daa
push
idivb
int3
dec
sbb
and
mov
mov
and
xchg
xchg
pop
mov
enter
jnp
or
xchg
pop
push
cmc
incb
xor
jg
aam
cmpsl
cs
and
loopne
cli
mov
into
cmpsl
push
ja
mov
pop
ret
cmpsb
loope
in
ds
fiadds
out
mov
mov
xor
mov
push
aaa
sbb
lea
xchg
inc
mov
dec
mov
add
dec
mov
ficomps
loope
xchg
and
les
push
mov
pop
adc
jo
push
dec
lds
push
mov
sub
sub
dec
lds
adc
push
sub
xor
ficomps
or
in
jg
mov
jbe
shrl
cltd
sub
mov
daa
test
lret
push
cli
test
jae
adcl
enter
sub
jg
cltd
mov
addr16
in
fstl
cmp
sbb
les
insl
xchg
dec
fdivrs
insb
mov
pop
sar
jp
add
sub
aas
stc
push
loope
sbb
push
mov
cmp
and
add
js
and
or
push
pop
call
and
rcrl
mov
ss
in
dec
negb
les
loopne
loopne
dec
adc
repnz
xchg
in
and
lcall
jp
in
stos
sbb
cmc
and
sbb
and
cmp
in
push
icebp
sbbb
mov
enter
mov
dec
lahf
movsl
dec
loop
jmp
mov
adc
push
bnd
mov
mov
out
in
fdivs
xchg
cwtl
test
push
movsb
scas
in
ret
mov
sahf
mov
dec
inc
loopne
cmp
lods
push
fbld
aad
cmp
nop
mov
cmp
jae
nop
cmpsb
inc
pop
call
cltd
js
add
fadds
push
dec
cmc
jmp
add
mov
lret
movsb
jns
cmpsl
jp
rep
xchg
jae
je
mov
test
out
push
push
les
fs
mov
adcb
pop
addb
rcrb
cmp
loop
jp
repnz
mov
or
cwtl
in
test
fists
addr16
pop
and
inc
adc
fsubrs
mov
mov
hlt
fwait
mov
testl
or
add
inc
push
xchg
xchg
jecxz
hlt
pop
mov
into
lods
stos
push
cmp
mov
mov
mov
jns
sub
scas
add
jae
xchg
movsb
push
pop
cli
jo
mov
and
std
dec
xor
jmp
andb
dec
pop
fsts
mov
cmp
addb
push
popf
ds
dec
sbb
xchg
pusha
fwait
call
into
or
jecxz
pop
nop
xchg
lods
dec
fsubr
outsb
jnp
xchg
dec
xor
scas
jge
and
xchg
scas
lahf
sub
mov
pushf
jecxz
cld
test
xlat
mov
jae
mov
je
or
pop
fwait
bound
pop
dec
inc
pop
jne
push
cs
xor
add
adc
pushf
inc
sahf
mov
add
fsubs
fstps
repz
in
mov
xchg
mov
jne
sti
cmp
cwtl
push
loop
push
ds
testb
adc
xlat
xchg
rcrb
sub
push
fisubrl
pop
xor
addb
das
cmp
lahf
inc
cltd
lock
mov
ss
push
sub
hlt
lret
je
push
adc
test
cltd
jno
shll
sbb
scas
jb
adc
cs
xchg
mov
mov
fcoml
jae
ret
mov
inc
fcmove
push
shll
adc
sbb
mov
js
push
out
mulb
lahf
repnz
fwait
jecxz
sub
dec
scas
notb
in
movsb
push
xor
jne
xchg
leave
fcompl
pop
popf
add
stos
adc
sbb
fdivrl
xchg
fs
jns
in
sub
cltd
dec
aaa
cmpsl
mov
pop
sub
out
jmp
xchg
or
lock
jge
bound
mov
fs
fs
ret
adc
push
mov
mov
ss
lahf
rcl
cld
and
call
xchg
mov
rclb
xchg
cwtl
cmpsb
aam
mov
mov
js
jne
sahf
push
loopne
xchg
and
xchg
inc
into
inc
xor
cmp
test
cmpsl
rorb
inc
insb
mov
and
ss
mov
int3
mov
sub
ret
sbb
divl
cmp
pop
sbb
jmp
fsqrt
cwtl
mov
data16
data16
push
push
push
fidivrl
pop
ret
sub
orl
pop
jmp
lret
mov
clc
xchg
pop
loopne
add
das
filds
lret
cli
xchg
orl
pop
jno
int3
mov
mov
loopne
int
repz
iret
ja
or
imul
fldt
sub
outsb
je
xchg
in
movsb
in
xchg
sub
aad
pop
mov
scas
sub
std
adc
and
pop
dec
bound
imul
mov
adc
push
jecxz
push
mov
mov
jne
pop
jne
out
mov
loop
xchg
inc
cmp
pop
ret
ret
mov
add
mov
ss
mov
test
fwait
bswap
sbb
decl
ljmp
out
xchg
lea
dec
aas
sub
or
xor
imul
outsb
add
adc
xor
ljmp
imul
ja
xchg
cmp
lods
cmp
mov
lds
push
iret
jmp
loopne
xor
xor
test
and
cli
xorb
rcr
adc
mov
clc
iret
sbb
aas
movsb
adc
jmp
scas
jbe
cmp
mov
stos
pop
xchg
jb
sub
sbb
mov
sbb
adc
jl
mov
out
sbb
cld
xor
int3
and
test
mov
loope
xchg
lock
pushf
enter
sub
ret
xchg
push
jecxz
mov
sub
sub
rol
rcll
arpl
daa
hlt
fs
ljmp
aaa
ds
testl
xor
fnstcw
mov
test
push
cmp
push
cmp
push
mov
mov
or
mov
insl
jmp
or
jg
ljmp
test
cmc
jg
in
adc
cmp
xchg
test
repz
adc
lret
adcl
jo
lock
and
pop
push
xlat
orb
pop
lret
sbb
dec
in
loope
pop
pushf
or
dec
mov
sub
sbb
lcall
imul
in
xchg
mov
dec
test
or
outsb
out
aam
xchg
or
shl
pop
jno
iret
xorl
arpl
std
push
roll
lds
in
mov
jbe
int
fidivrs
cmc
neg
jo
ja
mov
sbb
lods
adc
dec
pop
add
leave
mov
push
lret
stos
push
add
mov
rclb
inc
sbb
sub
sub
call
jb
pop
jb
mov
push
and
dec
xor
jp
sub
cmp
mov
push
outsl
cmp
or
addr16
xchg
add
add
fnstsw
leave
fs
mov
or
inc
xor
fmull
or
push
orb
out
cmpsl
and
insb
int
adc
addr16
inc
jecxz
fmull
test
xor
adc
shlb
inc
dec
sbb
or
inc
sub
inc
or
lret
xlat
movsl
pop
or
xor
cmp
xchg
xchg
mov
push
mov
push
push
sub
xor
mov
dec
jl
ja
loopne
push
cli
xchg
mov
and
ss
push
in
mov
mov
dec
adc
and
out
stos
jmp
pop
cmc
add
jp
pushf
aaa
xor
fbstp
sub
loopne
jo
es
jg
ret
sbb
addr16
idivb
cs
push
dec
push
aas
jl
add
jl
lock
cmpsl
sub
jge
cmc
mov
jecxz
push
inc
shl
out
xchg
cmp
mov
cmp
fists
mov
repnz
push
popa
insl
std
push
movhlps
nop
sub
push
or
lock
and
stos
inc
jne
and
xchg
inc
je
jne
jb
fists
pop
add
aad
mov
les
cld
xor
dec
xchg
fbld
iret
shll
psadbw
repz
lret
shlb
rorb
test
in
cld
mov
push
lret
ficoml
repnz
xchg
nop
or
adcb
jno
jbe
orl
fs
insl
sub
push
add
mov
inc
xchg
add
xchg
std
pop
xor
cmpsb
rclb
repz
pop
lahf
mov
das
mov
adc
mov
mov
lfs
mov
xor
dec
testb
movsl
ret
cmp
cltd
shrl
imul
psrad
ljmp
incb
out
cmc
inc
add
dec
mov
and
mov
mov
jg
lcall
sbb
sub
mov
fwait
jle
cmpsl
pop
ljmp
lods
cmpsl
mov
fwait
outsl
jmp
das
mov
xor
mov
or
mov
jg
pop
jmp
and
cld
push
inc
xor
frstor
or
aaa
mov
mov
insb
push
mov
push
sub
bound
jae
dec
xchg
xor
pop
test
cmc
cmpb
stos
pop
xchg
fmull
sbb
push
mov
out
mov
lock
dec
jmp
sti
add
lods
add
pop
pop
xchg
into
push
or
jnp
call
add
std
add
sub
jns
sub
mov
inc
arpl
fidivs
jbe
mov
jae
rorb
daa
inc
sub
shl
dec
sbb
sbb
xchg
adc
mov
sub
test
push
loop
sub
and
dec
shlb
mov
cmpsl
xlat
xchg
mov
push
mov
repnz
sub
aam
mov
mov
or
dec
subl
ljmp
lods
mov
stos
iret
mov
xlat
insl
jle
add
adc
push
popf
in
sbbb
jnp
or
cmp
inc
cmc
push
mov
lcall
std
in
push
xor
adc
dec
in
xchg
add
filds
and
and
nop
dec
and
cmp
aas
xor
in
mov
out
scas
xor
movsb
pop
cs
adc
cs
jp
cmp
in
xchg
dec
push
mov
sbb
cmpsb
sub
mov
dec
les
and
mov
sti
push
push
xchg
fistpll
inc
add
shll
clc
or
xor
push
dec
mov
xor
inc
xor
adc
adc
test
jp
fnstsw
cmp
sbb
cmc
insb
movsb
fdivr
add
fstp
pop
adc
lahf
or
call
jmp
adc
loopne
inc
jnp
sub
push
cmc
adc
ret
jle
int
xor
mov
movsb
add
movlps
test
imul
sti
out
lret
adc
add
sti
fdivrs
lea
mov
jnp
repnz
mov
adc
es
adc
loope
cwtl
xor
ss
sub
rolb
sbb
sbb
aam
enter
repz
push
sbb
jg
fadds
sub
js
call
lret
gs
imul
adc
cld
mov
and
aas
sub
mov
fsubrl
les
adcl
pop
jl
adc
jecxz
jge
push
in
mov
gs
movsl
mov
cmp
jmp
jb
push
and
imul
sub
sbb
cwtl
jmp
out
lods
ds
stc
jb
outsl
dec
cmpsl
arpl
xorl
jge
clc
xor
xor
rcrl
lds
test
mov
negl
notl
and
stos
je
mov
pop
cmp
xchg
roll
dec
inc
fisubrs
cs
mov
jo
push
or
data16
mov
in
inc
adcb
jle
pop
stos
cmp
or
jbe
mov
pop
popf
mov
ss
loop
out
mov
pop
popa
mov
lahf
lret
addl
inc
ficompl
lcall
into
and
data16
push
jae
lcall
sarl
pop
icebp
enter
fwait
gs
out
mov
scas
lret
stc
clc
pop
mov
inc
out
pop
movb
mov
xchg
bound
divl
adcl
cltd
xor
fistl
rcll
mov
dec
add
sbb
inc
nop
mov
jg
call
movsb
bound
adc
ss
cmpsb
pop
jge
mov
cwtl
adc
add
mov
test
hlt
movsb
sub
mov
pop
or
cmp
and
test
pushf
leave
dec
jg
out
aam
mov
cwtl
aaa
fdivs
mov
push
and
enter
roll
es
sahf
adc
movl
mov
mov
lahf
std
cwtl
sbb
fisttps
pop
shll
lcall
xchg
roll
and
xchg
jns
ffree
jl
jno
adc
and
xor
lods
sub
xor
mov
inc
cmp
imul
mov
ljmp
xchg
lret
lods
or
out
push
popa
or
mov
in
cmp
pop
xor
inc
push
sbb
cwtl
inc
jo
es
dec
iret
int
jg
loopne
mov
arpl
or
aad
lods
push
fisubs
pop
in
data16
sub
cli
mov
xor
outsb
jb
std
pop
arpl
inc
inc
cmp
dec
stos
sbb
and
mov
sub
test
popf
adc
hlt
repnz
xlat
push
popa
add
ret
adc
sub
sti
mov
sti
inc
and
das
jmp
test
ds
cmp
mov
mov
ja
imul
lods
fwait
jae
sbb
mov
lea
mov
mov
mov
sbb
inc
sbb
xchg
ds
push
imul
cltd
xor
xchg
test
mov
push
lds
add
leave
xchg
psubw
ljmp
cmpb
scas
xchg
nop
xchg
lret
pop
inc
mov
and
pushf
or
pop
xor
jbe
mov
gs
or
and
add
out
jge
pop
pusha
or
stc
outsl
cmp
xchg
dec
icebp
or
mov
pop
scas
pushf
inc
and
cmp
rcrl
leave
push
sbb
xchg
adc
xorb
dec
pop
das
mov
and
pop
int
sbb
imul
and
fmuls
addr16
into
shll
push
jl
cmp
enter
add
or
mov
int3
out
jp
adc
sub
fisubrl
out
shll
shlb
jmp
jl,pn
in
jmp
push
add
and
or
aam
shlb
xor
aad
lods
lds
add
js
sar
gs
push
popf
jge
out
lcall
sub
repz
mov
lds
jo
in
jnp
inc
mov
loope
and
daa
pop
test
push
femms
leave
sub
in
sbb
sti
ss
dec
inc
jle
ja
adc
std
xorb
xor
dec
int3
cld
insl
sbb
stc
mov
call
int
pop
call
stos
xlat
loop
xlat
popa
popf
ja
jge
mov
jb
je
xor
push
and
mov
test
pop
push
iret
mov
jae
jle
xchg
cltd
je
push
mov
insb
xor
pop
mov
push
rol
jbe
mov
mov
cmp
mov
fisubrl
xorl
ret
and
sbb
inc
lret
add
mov
cmp
loopne
test
popf
je
push
jns
fldcw
push
add
mov
and
movsl
fwait
loopne
lret
inc
and
jp
and
pop
mov
cli
or
push
jecxz
into
or
mov
in
mov
pop
fneni(8087
je
jp
int3
cmpl
in
es
push
ljmp
imull
cli
into
jmp
xchg
neg
aas
add
push
xor
data16
cs
and
or
arpl
xchg
sub
mov
mov
sahf
das
ficoms
pop
sub
loopne
add
push
insl
loope
push
cmpsl
lods
cmp
mov
inc
out
push
jns
ja
ss
pop
imul
aad
push
push
mov
add
and
aas
cmp
inc
pop
mov
lcall
movsb
sbb
fimull
xchg
iret
daa
out
pushf
pusha
out
mov
jnp
xchg
notb
out
lods
aaa
fnstcw
scas
add
addr16
cli
in
adc
rol
xchg
pop
pop
mov
lock
cwtl
adc
icebp
ret
imul
or
jo
sub
sbb
sub
clc
dec
cmp
xchg
scas
adc
dec
fiaddl
adc
cld
or
daa
jnp
push
or
add
ffree
or
xor
divl
sbb
icebp
cmp
jns
aam
mov
dec
outsl
insb
imul
mov
stos
int3
shlb
mov
ret
ds
jle
in
movsb
sub
xor
test
je
leave
sahf
xchg
dec
mov
lcall
mov
sbb
aad
addr16
cli
add
add
loope
test
pcmpeqd
scas
inc
call
sub
mov
repnz
loop
inc
sbb
sub
cmp
imul
xor
ja
pcmpgtb
or
adc
aas
xor
or
mov
adc
rorl
dec
xchg
dec
mov
outsb
test
int3
inc
jno
call
add
jo
in
in
add
lahf
cmp
sub
mov
ss
sub
jno
pop
shlb
cmp
cmp
fcom
jp
scas
fisttpll
mov
push
jge
aam
int
xor
cld
shl
sub
mov
xor
pop
or
test
andl
push
lcall
mov
mov
lret
dec
sbb
addr16
add
sbb
xor
out
jnp
push
dec
fmull
mov
xor
fildl
sbb
loopne
or
stos
push
inc
fstp
adc
xorb
mov
sub
dec
mov
cmp
pop
movsb
mov
scas
movl
cmp
fiaddl
add
aas
cmp
into
mov
pop
xchg
ja
cmpsl
scas
lods
icebp
sbb
shlb
subl
aaa
sar
adc
mov
sub
enter
push
fs
lea
mov
adc
add
aas
xor
decl
or
loop
fidivrs
testl
lds
stos
pop
mov
je
mov
or
flds
mov
jae
movsl
in
push
ds
lea
inc
test
mov
inc
pop
fcmovbe
pushf
and
jg
sbb
push
jbe
push
sti
int
pop
or
xlat
pop
and
pop
jl
sbb
nop
ror
add
dec
int3
iret
and
mov
jno
int
cmp
shll
movsl
push
imul
iret
sub
int
rorl
push
test
sub
int3
fnsave
sub
cmp
push
test
call
jns
mov
cld
pop
xchg
dec
dec
leave
int3
shr
outsb
hlt
icebp
mov
arpl
add
mov
mov
das
aam
jle
jle
lds
xchg
imul
imul
sub
push
rolb
add
push
scas
pop
or
inc
popa
out
sahf
in
int
fldl
pop
dec
fnsetpm(287
addl
inc
mov
cli
xchg
jle
push
push
mov
out
mov
lret
sub
notb
dec
push
xor
jp
xchg
data16
in
stc
or
or
cmc
leave
aad
mov
imul
out
dec
in
mov
xor
and
scas
push
or
push
push
pop
xchg
jno
test
arpl
cmp
lods
aam
adc
int3
lahf
movsb
push
and
xor
scas
jle
sbb
and
mov
aas
add
cmp
xchg
mov
rcll
or
in
lret
lea
pushl
and
cwtl
es
cwtl
ja
mov
xor
xchg
mov
fs
in
adc
jecxz
out
pop
nop
inc
mov
aas
and
and
sahf
push
mov
push
xor
jne
in
add
lcall
pop
cs
mov
cmpsb
lds
dec
mov
lret
jecxz
out
scas
aaa
mov
jno
js
fdivrs
push
push
mov
cltd
int3
adc
add
jbe
lods
filds
xchg
sub
repz
fscale
fistps
movsb
mov
hlt
sub
in
mov
popl
outsl
jle
les
push
into
inc
adc
xlat
adc
aad
into
sub
jg
mov
cwtl
imul
ret
insl
out
loope
ret
sbb
mov
mov
pop
push
pop
dec
push
xor
adc
push
push
movntq
xor
imull
cmc
les
mov
arpl
xchg
cmp
lret
inc
jge
cmpsl
ds
or
int
mov
lds
push
nop
rclb
shrl
test
mov
mov
lds
and
xchg
mov
insl
es
mov
adc
adc
gs
sub
sub
and
push
cld
stc
push
cmp
and
repz
js
mov
ja
push
test
mov
push
mov
js
and
out
dec
dec
cmc
mov
add
inc
insb
xchg
mov
adc
jo
out
push
ja
pop
add
dec
leave
jg
cmp
inc
push
imul
sarl
dec
jns
out
or
lods
mov
fnstcw
sub
in
ljmp
adc
mov
hlt
push
outsb
and
mov
pop
xor
push
fsubs
adc
cltd
shll
out
cmpsl
flds
xchg
out
push
cld
xchg
and
lods
sti
dec
jg
sbb
pop
dec
sbb
mov
push
scas
call
push
lods
xchg
stos
ja
je
mov
mov
loopne
sbb
ret
int
xor
mov
xor
push
cltd
imul
mov
push
imul
mov
jl
and
fbld
sub
aaa
ret
mov
jbe
cmpsl
mov
scas
in
div
dec
lcall
dec
fildl
inc
scas
jnp
and
or
dec
in
popa
std
dec
clc
inc
loopne
sbb
inc
loope
test
repz
icebp
pop
or
test
pop
cmp
outsb
ret
sub
mov
popf
dec
cld
mov
pop
dec
data16
fstl
pushf
or
cmp
jp
lea
sbb
mov
xchg
int3
fwait
gs
loop
sub
mov
mov
pusha
inc
jg
fadds
pop
xchg
or
mov
push
outsb
xchg
enter
daa
mov
inc
mov
xor
test
data16
and
sti
mov
inc
outsb
sub
inc
test
jne
outsl
mov
mov
shrb
mov
mov
scas
stos
pop
cmp
scas
fst
ret
inc
mov
and
ss
in
sub
cmpsl
cs
int
jp
mov
dec
in
or
aas
add
or
ss
lret
push
int3
test
fwait
mov
adc
mov
add
ss
pop
pop
jb
ret
pop
cmp
or
arpl
inc
mov
cmc
cmp
loop
or
pop
insl
sbb
push
cmp
hlt
sti
loop
inc
mov
pop
clc
and
inc
into
rcll
adc
adc
out
gs
pop
push
xchg
xchg
imul
mov
out
pop
lock
adc
mov
and
mov
push
out
jnp
popa
and
cmc
dec
sbb
int
imul
push
mov
inc
cmp
jge
cli
and
aam
jno
mov
xlat
movsb
rcl
xchg
int
inc
and
int3
xor
pop
stos
jle
xor
cmp
test
enter
jo
sbb
mov
xor
dec
inc
and
cmp
jge
cmp
or
cltd
xchg
data16
dec
dec
jbe
sub
push
mov
imul
pop
fucom
sub
hlt
idivb
shrb
filds
mov
das
leavew
arpl
jbe
inc
iret
sub
pusha
push
in
imul
mov
and
cmp
fcompl
das
outsl
cmp
xlat
push
cmp
dec
pop
xor
mov
and
or
clc
repnz
pushf
sarb
repz
sub
cmp
xlat
andb
mov
lods
pop
or
xchg
xlat
mov
mov
mov
and
repnz
push
inc
cmp
and
jns
jns
add
xor
mov
out
adc
or
push
outsb
loopne
and
test
xor
mov
pop
push
rorb
roll
add
in
sub
cmpsl
mov
pop
js
pusha
xchg
pop
inc
pop
fcoml
outsb
ja
sbb
sub
bound
fcoms
ret
aad
dec
ficompl
pop
loopne
ljmp
add
mov
icebp
mov
pop
xchg
out
cmpsl
subb
adc
mov
leave
subb
xchg
dec
add
mov
jne
fimuls
mov
cli
sub
push
mov
shl
pop
push
int
mov
cli
ficoms
adc
gs
and
outsb
sub
lret
xchg
inc
or
loope
stos
loope
lcall
imul
jnp
aas
loopne
inc
sub
sbb
pop
arpl
daa
icebp
sub
sub
repnz
shrl
fld
jne
inc
test
shl
bound
adc
push
xor
push
inc
or
xchg
shrl
out
jb,pt
scas
hlt
out
shll
and
fstpl
xchg
es
mov
jnp
lret
aaa
jge
fldl
call
into
adc
pop
push
je
dec
xchg
sbb
mov
mov
xchg
les
pop
out
jge
pop
shl
pop
loopne
nop
pop
push
xchg
jl
dec
jno
faddl
cwtl
sbb
sbb
es
data16
cmpsb
sub
jge
inc
ss
and
lcall
xor
and
inc
xchg
fwait
cmp
sbb
jp
xor
data16
inc
les
out
sbbl
test
add
loopne
out
dec
add
ljmp
nop
pop
xchg
mov
mov
cltd
inc
pushf
mov
arpl
cs
cmp
leave
fbstp
dec
in
test
mov
out
aas
in
lods
xchg
or
fisubrs
into
test
inc
stos
out
sti
cmpsl
enter
movzwl
sub
lock
and
inc
mov
ret
fcoml
cltd
dec
hlt
ljmp
nop
lcall
movb
mov
lret
cmc
scas
jecxz
popa
pop
jp
ja
hlt
pop
mov
outsb
jecxz
lret
push
ds
popa
je
mov
adc
insb
aad
das
sbb
push
fs
jbe
int3
stos
sbb
pop
arpl
xchg
xlat
outsb
out
jne
inc
enter
cmp
gs
push
mov
jb
cmp
test
cmp
jbe
sub
xchg
ret
push
jmp
andb
xor
stos
push
inc
push
cmp
out
fcomps
lahf
lea
push
adc
push
or
out
enter
rcl
dec
shrl
bound
push
cltd
call
push
pushf
pop
jecxz
adc
sti
push
or
mov
dec
push
mov
xchg
mov
cmp
xlat
cmc
ret
icebp
or
mov
mov
shrl
jge
rolb
and
pushf
aaa
xchg
andl
jp
mov
or
push
pop
sub
cmp
sbb
pop
fstp
push
pushf
xor
adc
mov
push
and
pop
sub
cld
mov
and
inc
repz
in
jle
int
rcl
mov
inc
jb
jb
sub
xchg
cmp
lods
mov
inc
rcll
testb
movsl
pop
jmp
and
sub
aam
icebp
pop
sbb
push
sub
pop
push
cmp
movsl
adc
xchg
sahf
orl
pop
fwait
or
scas
sti
mov
mov
mov
dec
cltd
enter
fwait
or
jnp
or
pop
cltd
add
dec
aaa
ds
and
push
scas
mov
push
popf
sbb
div
negl
push
lret
je
aaa
sub
cmp
adc
fimull
loopne
jecxz
imul
aas
cmp
adc
mov
dec
pop
test
mov
xchg
movsl
je
fisttpl
sahf
clc
je
pextrw
icebp
mov
inc
sub
enter
iret
vpmacssdql
imul
xor
pop
push
fstpt
add
adc
data16
jnp
into
mov
push
in
std
out
inc
addr16
sub
mov
pop
or
lds
leave
dec
popf
xchg
inc
push
mov
inc
push
xchg
jecxz
ret
sbb
add
sbb
in
xchg
stc
cmpb
clc
push
mov
sarb
fldl
es
lahf
clc
pop
push
shll
push
xor
loope
jne
jne
mov
movsl
insb
lahf
fdivs
loopne
cli
mov
dec
idiv
mov
bound
dec
int3
mov
lcall
cmp
filds
mov
mov
push
xlat
fdivr
push
or
faddp
inc
add
pop
notl
pop
aaa
pop
bound
sub
in
sub
not
sub
cmp
scas
lcall
sub
pop
cs
pop
rcl
pop
pusha
lret
adc
lock
adc
adc
clc
cld
jle
ret
cmp
mov
movl
outsl
mov
jno
fmull
bound
xchg
sarb
pop
sti
test
popf
daa
cmp
cwtl
leave
xchg
xchg
inc
andl
cwtl
adc
mov
outsl
mov
fstps
xchg
pop
pusha
insl
movsl
xchg
inc
iret
dec
xchg
iret
out
iret
mov
repnz
fwait
mov
add
jge
jb
add
inc
mov
sbb
shlb
scas
jmp
imul
iret
movsl
repnz
adcb
int3
xor
mov
jae
shl
call
dec
lds
cmp
pushl
insl
dec
arpl
data16
push
lods
in
pop
xor
pop
push
push
lcall
mov
cmp
push
insl
mov
mov
rcrb
lret
jnp
loopne
ljmp
fstpt
push
sub
sub
jns
cmpsl
or
in
dec
inc
cmp
or
into
xchg
addr16
mov
inc
inc
inc
cld
shrl
pop
test
and
bound
ret
add
aad
jmp
fstps
or
pop
cmc
mov
outsl
mov
popf
jo
jecxz
and
inc
daa
jb
or
jnp
xchg
pop
xorb
clc
subb
sti
push
xchg
cltd
mov
lds
add
sub
lods
mov
or
lret
add
das
mov
mov
xor
fstps
pop
dec
mov
push
mov
adc
xchg
push
xchg
push
pop
scas
fiaddl
dec
xchg
in
cli
adc
ja
pop
xchg
pop
mov
lods
lods
adcl
test
xchg
xor
stc
inc
sub
adc
jge
addr16
enter
jb
push
js
lds
jp
pop
add
shll
and
push
out
sub
popa
xor
std
into
seta
mov
outsb
lea
or
dec
outsb
sub
rorl
xor
cmp
xchg
lret
push
sbb
pop
scas
inc
lods
add
outsl
fs
data16
xor
adc
xor
inc
sbb
ljmp
cli
sarb
cmc
dec
inc
and
xor
repnz
pop
fucomi
add
into
lret
cmp
popf
daa
push
popf
sbb
push
or
std
jbe
pop
and
xor
xchg
inc
cmc
ljmp
daa
loop
sbb
cmp
mov
dec
loop
les
jp
jae
inc
inc
cmpsb
inc
mov
addr16
add
mov
and
bound
sbb
sub
loopne
cmp
push
or
stos
add
sub
ficoml
cmp
std
cltd
movsb
hlt
les
ret
pop
mov
add
inc
pop
out
adc
cmc
out
out
andb
jmp
mov
popf
mov
jecxz
xor
xor
movsl
push
aad
stos
test
lahf
movsl
pop
adc
xchg
and
dec
mov
fsubl
sarb
in
dec
scas
add
dec
push
mov
jno
in
das
xor
lods
cld
dec
jns
fs
mov
mov
jae
scas
and
jbe
push
shll
dec
mov
shlb
adc
sbb
nop
fdivl
sbb
int
push
test
in
cmpb
pop
insl
bound
jp
shrb
rcr
sub
aaa
or
push
cmpb
xchg
push
pop
sub
pop
stos
xor
outsb
cmp
pushf
pop
and
loop
popf
ds
pop
push
add
jb
iret
dec
sub
mov
cmp
fstpl
add
sbb
and
add
mov
xchg
cmpsl
or
sub
ljmp
lret
push
inc
sub
mov
int
xlat
dec
xorb
jg
mov
mov
int3
sub
sbb
cwtl
push
in
push
sbb
cmp
mov
push
xchg
shll
in
imul
mov
mov
out
adc
sbb
mov
sub
pusha
xchg
rolb
pop
loop
jb
push
add
call
aaa
fcomps
push
adc
scas
sbb
imul
lods
adc
pop
or
xchg
mov
dec
pop
dec
xorb
lods
and
aas
fs
and
or
js
leave
or
addr16
and
cmp
sub
mov
out
addr16
lea
mov
imul
cmp
loopne
xor
and
xor
ljmp
xchg
add
pop
mov
fiaddl
lret
pop
adc
gs
adc
scas
xchg
popa
sub
inc
adc
push
stos
dec
mov
dec
shrb
imul
mov
rorb
mov
insb
pop
and
sub
or
push
clc
sbb
push
and
outsb
mov
sar
xor
std
pop
and
cmp
orb
roll
add
xchg
data16
iret
imul
xor
jmp
adc
cltd
xchg
out
int3
iret
mov
imul
adc
pop
pop
and
push
cmp
fidivrl
add
add
inc
cmp
xchg
ret
aaa
dec
push
clc
repz
jecxz
in
jo
fiadds
fildll
xor
repz
jo
dec
cmpsb
mov
ret
test
jbe
push
cs
in
push
fidivs
cld
subb
mov
adc
cwtl
das
mov
xchg
push
test
mov
mov
cmp
nop
add
or
int3
out
sbb
xchg
jae
call
adc
aas
push
in
insb
sbb
or
cmpsb
mov
cli
lods
test
out
add
out
adc
jo
mov
daa
aam
cli
cwtl
add
imul
movlps
mov
ficoml
shufps
jbe
pushf
es
imul
add
stc
sub
mov
fisubrl
in
addr16
dec
push
jmp
and
dec
adc
add
imul
jb
int
cmp
std
das
aaa
rorb
ret
ja
leave
ds
stos
clc
xor
scas
pop
outsb
pop
repz
mov
rcrl
mov
test
sti
in
jo
push
cmp
add
ja
ljmp
sbb
xchg
sub
pop
icebp
inc
pushf
mov
mov
sub
scas
lods
mov
wrmsr
call
dec
xor
adc
ss
mov
xor
or
in
loop
dec
stc
jne
jae
cs
ds
mov
fidivl
lcall
divw
cmpl
out
jl
or
std
push
push
add
pop
jg
cmpsb
and
cmp
cmp
enter
movsb
add
dec
test
popf
lods
addb
cmp
loopne
mov
sbb
sbb
cmpsb
push
adc
sbb
push
cmp
mov
mov
ss
popa
and
adc
mov
sub
or
and
mov
cwtl
jle
add
push
xor
mov
ljmp
mov
or
sarb
inc
or
cmp
pop
mov
test
sti
repnz
mov
jmp
lret
mov
push
fildl
nop
decb
sbb
pop
adc
cmpl
dec
sub
add
jle
cli
pop
stos
aam
out
jae
cmpsb
mov
or
fidivs
arpl
icebp
inc
outsb
and
aad
jl
iret
ljmp
loop
jmp
dec
stc
xchg
jl
movsl
mov
fldl
sbb
pop
push
pop
dec
dec
sbb
fadd
andb
add
test
je
lret
into
lahf
push
cmp
ljmp
cltd
xor
shr
mov
push
xchg
cs
lock
jne
inc
xchg
jg
sbb
pop
ljmp
cmc
das
cmc
in
jb
scas
push
test
sbb
add
xchg
mov
add
stos
or
pop
adc
sbb
pop
flds
mov
insb
repnz
dec
cli
lods
dec
lcall
bnd
in
sub
mov
js
push
xor
repz
xchg
add
sti
enter
aad
lcall
or
roll
or
and
out
ret
lret
push
enter
fmuls
pop
adc
and
in
lods
pop
arpl
pop
push
inc
or
jle
sbb
test
or
int3
pop
sub
rolb
in
or
stc
insb
jle
pop
xor
iret
dec
inc
mov
jno
adcl
adc
adc
outsb
clc
jne
mov
sub
adc
add
mov
inc
popa
pop
dec
rol
js
mov
push
cmp
mov
aad
or
mov
fs
jl
outsl
fwait
mov
scas
pop
ret
dec
fcmovu
xor
adc
out
nop
lahf
push
ljmp
shll
shrb
and
std
in
inc
std
outsl
jbe
or
mov
jnp
xor
inc
push
xchg
leave
je
or
faddl
pop
stos
in
jmp
cs
hlt
and
icebp
push
aad
push
sub
es
mov
repnz
or
pop
cli
jp
or
subl
into
lcall
icebp
dec
mov
cs
cmpsb
idivl
push
ret
xor
aas
outsl
inc
jmp
cmp
mov
jb
rcll
out
mov
add
dec
xor
xor
jecxz
mov
sbb
inc
scas
fildl
or
push
sbb
inc
lahf
and
enter
iret
inc
xchg
dec
cltd
mov
dec
and
mov
pop
orb
adc
fdivrl
or
mov
inc
adc
fwait
std
test
inc
stc
push
sbb
imul
test
pop
mov
mov
mov
fmull
aad
cmpsb
mov
push
add
mov
int3
cmp
adc
dec
fcoms
xchg
jg
cmc
mov
shll
mov
lret
cmp
and
das
fbstp
pop
sub
fs
cmp
adc
or
cmp
mov
mov
xchg
xor
xor
stos
pop
loop
push
cld
dec
movsl
xchg
inc
sub
jge
mul
arpl
std
xor
lcall
and
inc
call
ss
pop
ds
sbb
push
loop
mov
push
shll
adc
mov
mov
inc
outsl
jo
adc
aad
scas
stc
cmp
sbb
lahf
movsb
mov
cmp
mov
in
mov
sahf
outsl
mov
cmp
or
push
dec
aaa
pop
pop
mov
nop
add
sub
leave
repz
orb
push
add
icebp
clc
or
shll
fnstcw
js
mov
cmp
xor
adc
lret
subb
mov
arpl
add
rcr
outsl
sbb
pop
aam
out
push
sub
ret
or
outsb
sub
sti
sbb
pop
gs
jae
mov
inc
lods
inc
sti
ret
inc
mov
mov
test
add
mov
jge
mov
mov
pop
sar
dec
pop
dec
lret
jle
inc
dec
and
jnp
dec
ss
add
aam
mov
popa
push
mov
cld
ss
ja
into
ds
add
outsl
sub
sbb
fstpl
cli
lds
insl
rorl
cmp
imul
sbb
aaa
pop
xchg
imul
lods
sbb
mov
stos
sub
lret
add
cmp
sbb
dec
sbb
insl
sub
lret
cltd
jecxz
lea
push
or
es
insb
mov
inc
jno
lods
js
scas
adcl
adc
insb
and
xchg
jno
shll
insb
add
adc
insb
les
mov
cmp
fucomip
sbb
test
neg
xchg
pop
push
popa
in
shll
faddp
pop
in
cmp
ja
lahf
sbb
push
xchg
orb
cmc
ljmp
aas
outsl
mov
insl
mov
das
pop
mov
dec
pop
lods
cs
add
pop
ss
cs
cmp
mov
add
xchg
pop
jo
cld
lret
dec
in
mov
mov
pop
in
rorb
in
mov
add
xchg
xchg
nop
fwait
sub
movsb
sbb
cmpsl
std
ficoms
pop
mov
mov
sbb
cmp
rcrb
dec
out
sbbb
jno
push
imul
cs
stos
push
test
stos
cs
inc
fadds
das
sbb
sahf
sub
jl
mov
testb
cli
mov
push
xchg
sbb
mov
data16
inc
testl
cwtl
inc
lret
dec
enter
inc
sti
inc
xchg
jns
adcb
and
sbb
push
fcoms
mov
or
mov
add
sub
in
fistpll
jno
ss
loop
add
sbb
mov
bound
fisttps
je
pop
in
call
ret
xchg
stos
sub
arpl
add
xchg
jb
cmp
fistpl
bound
testl
lcall
roll
and
or
fwait
je
bound
loop
cltd
pushf
sub
fwait
mov
mov
or
push
es
outsb
add
jno
outsl
ja
sub
insb
icebp
jmp
cmp
cmp
pop
push
fsubrs
sbb
mov
loop
pop
xchg
insl
dec
mov
outsb
add
xchg
aas
addl
and
mov
mov
adc
mov
xchg
add
dec
xorb
lahf
jbe
xor
jp
popf
hlt
leave
cltd
xchg
push
inc
or
jmp
pop
jl
out
push
gs
xor
inc
in
push
xchg
xor
and
and
nop
dec
xchg
xor
mov
dec
in
pop
mov
push
repnz
outsl
jge
push
mov
dec
imul
sbb
pusha
je
xchg
jae
out
aad
fildll
out
xor
cmpsb
adc
jno
xchg
xor
xchg
mov
sbb
mov
cltd
scas
outsl
mov
stc
xchg
js
mov
cmp
out
sti
pop
paddsw
push
inc
cmpsb
sarb
in
inc
xchg
mov
push
pop
add
stc
xchg
sub
mov
add
jne
sbb
jp
push
insl
rcrb
sbb
pop
popf
enter
xchg
fnsave
sub
scas
sbb
lret
test
fucomi
pushf
jns
mov
out
iret
jmp
das
xlat
pop
rol
stos
shll
adc
mov
jno
and
nop
pop
dec
js
mov
xor
test
push
jbe
sbb
cmpsb
and
pushf
test
inc
pop
addb
out
test
sbb
jge
addr16
iret
add
popa
mov
cmp
inc
movb
and
lods
mov
add
rcrl
cltd
mov
idivb
int
int
inc
xchg
insb
jae
stos
cmp
adc
jbe
iret
mov
out
adc
aad
out
test
mov
mov
jl
or
in
loope
jbe
sub
mov
cmpsl
ja
mov
stc
mov
js
xor
jns
or
push
cmp
sbb
ss
fisttps
jns
sbb
pusha
xchg
push
inc
pop
push
imul
je
xchg
jne
mov
jnp
call
dec
adc
push
aas
push
sub
push
dec
xlat
ror
or
scas
fmul
xchg
inc
pop
stc
in
repz
nop
iret
into
xchg
popa
pushf
xchg
imul
int3
mov
outsl
sbb
movsb
lods
roll
sub
call
repnz
and
push
orl
xor
icebp
pop
out
cltd
sarb
test
inc
or
js
push
repz
cwtl
xor
stos
cmpsb
mov
cmp
arpl
push
das
add
test
movsl
lock
mov
sub
imul
add
mov
cmp
dec
out
sbb
inc
jg
aaa
sub
push
in
mov
cmpsl
push
mov
adc
mov
movsl
mov
sbb
cmc
add
aas
dec
cmp
adc
mov
sbb
xchg
sarl
fxch
jne
sub
cmpsb
push
arpl
sbbb
and
and
xor
pushf
inc
dec
mov
dec
stc
jl
or
dec
dec
sarl
xor
xchg
aad
pop
icebp
jae
jl
outsb
inc
or
xchg
ds
cmp
and
test
lahf
push
cmp
xchg
pop
test
addr16
je
mov
inc
add
mov
fstl
jno
and
adc
jno
icebp
add
test
jb
jno
mov
adc
jle
jmp
or
iret
stos
lods
sbb
imul
sub
jne
mov
fs
adc
jge
ret
arpl
les
test
insl
xchg
stos
fwait
lea
sub
ljmp
adc
sbb
pop
enter
scas
push
rcrl
inc
sbb
mov
stos
inc
in
xor
push
mov
test
jle
rcll
in
dec
lret
loopne
jecxz
mov
or
and
sarl
push
xchg
sti
mov
cmc
cmpsl
mov
sub
in
fldln2
in
xor
js
push
hlt
mov
jo
imul
addl
xor
fmuls
mov
lods
popa
dec
test
jmp
jge
sub
push
loope
inc
cli
add
dec
pop
stc
js
inc
or
stc
adc
stos
or
sub
leave
in
mov
movsl
add
cmp
and
push
sub
inc
lcall
js
ret
adc
test
mov
out
cltd
fcomps
cmc
stos
ljmp
insl
test
cmp
nop
fcmovne
inc
xchg
mov
add
sbb
pop
mov
mov
or
inc
mov
lods
cmp
push
lea
in
sbb
xchg
pop
dec
aas
std
and
sti
in
push
jae
das
adc
clc
insl
enter
jg
cwtl
cwtl
test
jb
add
push
xor
daa
xor
sub
push
cmpl
dec
push
bnd
dec
sub
lods
ljmp
adc
jo
jae
jnp
aam
jle
loope
sbb
int
push
out
leave
cld
push
adc
mov
xchg
ljmp
push
out
sbb
lock
dec
and
inc
pop
test
push
xchg
add
aas
stos
adc
mov
ficomps
xchg
ror
lret
push
cltd
rolb
pop
popf
lret
jbe
mov
push
adc
data16
addr16
xor
out
nop
push
inc
les
cmp
xchg
repnz
add
mov
xchg
ja
adc
push
sbb
or
xchg
inc
in
push
pop
fwait
xchg
mov
ret
aad
xor
mov
mov
mov
pop
pop
stos
cmp
call
ljmp
ds
sbb
cs
xchg
sarl
adc
cmc
add
jge
jo
cmp
lret
lret
stos
mov
loop
push
inc
test
cmp
fists
push
je
xchg
in
or
test
inc
push
loopne
insb
push
lcall
mov
nop
stos
cmc
fiadds
rcrb
cmp
loope
xor
adc
inc
jae
in
push
in
divl
sbb
and
mov
test
mov
in
add
inc
shll
in
xor
add
mov
lods
ljmp
lds
divl
lcall
sub
movsb
loop
pop
cs
in
lret
scas
cmc
rolb
jge
mov
mov
xor
dec
and
jle
push
cmpsl
in
or
and
test
lock
in
fcomps
popa
inc
xor
jb
lret
ret
add
call
and
mov
pushf
arpl
mov
fildl
jne,pn
push
clc
dec
mov
push
scas
or
adc
mov
mov
dec
jecxz
loope
orl
shl
aas
ljmp
iret
js
and
inc
pushf
sub
int3
mov
adc
out
mov
scas
lods
test
xorb
jbe
jge
cli
ja
or
mov
fs
add
shlb
dec
mov
fildll
fs
cmp
dec
ja
mov
int
jne
mov
je
rol
add
jnp
aaa
shrb
idivb
fistps
dec
lea
rorl
xor
lret
add
cmpsl
les
xor
inc
push
ss
or
cld
jo
adc
imul
cmpsb
and
jp
enter
jge
jl
cmp
test
repnz
in
outsb
ljmp
cmp
xchg
inc
mov
decb
es
jge
jecxz
rorb
or
mov
jbe
sbb
mov
addr16
mov
aam
testl
and
test
loope
pop
aad
mov
in
fcmovu
pop
sbb
xchg
lds
jnp
clc
movsb
lret
dec
int
add
mov
sbb
fdivrl
xorl
xchg
sub
inc
cmp
dec
cmp
mov
imul
stos
mov
mov
in
aaa
push
pop
push
mov
mov
pop
sbb
mov
mov
and
popf
std
xchg
fbstp
push
jno
loope
daa
fistps
cmpsb
xor
jmp
aad
mov
popa
orl
das
sbb
testb
sbb
pop
add
cmp
inc
das
cltd
fs
and
cmp
push
nop
pusha
adc
popf
or
pop
mov
sarb
mov
jp
mov
and
mov
nop
cmp
or
xchg
sub
ljmp
mov
mov
sahf
add
cmp
nop
cli
push
mov
sub
fiaddl
sub
push
iret
data16
pusha
dec
cmp
movl
iret
cmpsl
and
imul
ret
mov
iret
das
xor
into
jno
dec
insl
ljmp
sub
xor
daa
jmp
lods
inc
jge
je
loope
loop
xchg
in
jne
mov
fisttpl
cli
sbb
dec
sub
xchg
repz
das
and
xor
jb
inc
inc
dec
iret
jg
adc
cmpsb
addl
inc
stos
stc
aad
out
inc
in
sub
xor
mov
enter
pop
lods
jne
cmc
fsts
or
jae,pn
jbe
test
mov
pop
inc
dec
adc
jge
inc
mov
inc
jns
scas
adc
cli
and
idivb
sub
sub
xchg
gs
jns
pop
pop
mov
adc
jo
popa
adc
aas
pop
sub
stc
add
imul
xchg
in
mov
xchg
xchg
add
test
sub
ret
jo
xchg
cld
cmpsb
movsb
mov
pop
aam
outsl
xor
cmp
xor
out
ror
addl
mov
pop
shrb
push
push
mov
mov
add
add
pop
std
fisubrl
cmp
bnd
cmp
inc
inc
xchg
insl
call
fmuls
in
xor
adc
lcall
hlt
popa
sbb
mov
mov
adc
cmp
pop
mov
subb
push
dec
mov
jns
dec
jle
add
xchg
aas
stos
loop
xor
xchg
adc
push
xor
dec
stos
push
lcall
enter
clc
ret
mov
and
add
pop
rolb
mov
mov
js
cmp
mov
or
xchg
enter
in
int
mov
cwtl
int
pusha
add
push
add
jecxz
jno
xlat
or
das
and
jge
xchg
or
sbb
push
repz
iret
push
xor
mov
push
rcr
or
fnstenv
decl
mov
and
arpl
mov
or
xchg
movsl
enter
xchg
int
add
or
and
imul
lock
clc
or
cmp
cmp
test
pushf
push
rolb
push
dec
jns
sbb
fcoml
test
push
mov
xor
and
lds
jae
iret
and
or
mov
aas
mov
mov
imul
in
push
dec
pop
sti
inc
sbb
pop
fldcw
xchg
mov
nop
sbb
cmp
sahf
mov
ljmp
xlat
pop
or
stc
xchg
jg
xchg
sahf
stos
mov
mov
sbb
mov
sbb
addl
das
outsb
add
xor
lods
cld
mov
pop
sub
loop
mov
jne
imul
clc
adc
or
loop
pushf
mov
test
loopne,pn
pusha
cmpsl
cli
mov
popa
cltd
mov
push
lret
inc
scas
mov
cli
push
mov
sbb
or
xchg
aad
mov
movsb
stos
inc
lahf
inc
pop
lcall
movsb
mov
mov
pop
mov
jo
das
and
in
arpl
xor
sbb
inc
call
and
mov
int3
mov
and
or
mov
xchg
pop
test
or
arpl
lods
rcrl
add
add
pop
xchg
mov
fdivp
ret
jecxz
popf
adc
add
jmp
ret
mov
lods
mov
js
sbb
in
jge
cs
iret
mov
loop
mov
lock
mov
cmp
hlt
lret
add
adc
test
lret
popf
jo
xchg
insl
ficoml
and
jb
adc
push
gs
xchg
sbb
js
add
test
and
cmp
inc
sbb
in
call
repnz
cmpsb
movsb
lahf
dec
mov
add
sub
js
mov
inc
mov
add
mov
jae
push
jge
sub
dec
jmp
mov
add
pushf
jmp
and
stos
and
cmpsb
jne
dec
or
mov
outsb
xor
mov
into
fwait
into
popf
test
pushf
popf
xor
jmp
inc
in
push
pop
or
dec
inc
ss
insb
xchg
mov
xor
dec
cmp
cmp
pop
aas
sbb
repz
sub
pushf
leave
mov
sub
aaa
or
inc
xlat
lret
xor
imul
cmp
jae
addl
or
mov
sbb
xchg
stos
dec
jge
loop
mov
push
jl
dec
ds
sbb
and
cmp
mov
loop
adc
je
ret
fwait
lea
leave
cmp
sbb
cmp
popa
pop
addr16
lret
sub
iret
shrl
push
outsl
mov
sub
sub
push
sub
mov
gs
test
push
and
add
cmc
std
mov
push
loop
in
inc
out
lret
int3
push
add
inc
nop
and
jne
lods
repnz
add
sbb
fstpl
mov
data16
mov
jbe
push
outsb
or
test
push
bound
jb
inc
sbb
adc
sbb
push
data16
mov
jnp
enter
imul
pop
cwtl
sub
and
popa
push
mov
addr16
and
mov
dec
cmp
mov
push
or
xlat
repnz
push
push
repz
imul
or
mov
mov
loopne
fiadds
int3
adc
pop
les
mov
mov
jae
add
int
mov
data16
and
adc
sub
push
mov
out
loop
cmc
pop
andb
pop
mov
adc
in
addr16
bound
xchg
add
cmp
repnz
jb
cmp
mov
push
inc
jne
push
push
bound
jle
fcmovnb
mov
imul
nop
mov
mov
push
push
mov
pop
out
push
aad
leave
fistpll
in
loop
int
dec
and
out
inc
push
push
shlb
sbb
sub
imul
pop
aad
dec
scas
es
iret
xor
loope
lock
dec
rcrb
insl
cld
daa
sub
dec
pop
sbb
movsl
lods
sbb
addr16
ja
cs
fs
cmpsb
lsl
adc
incl
mov
lock
lods
add
enter
jo
arpl
dec
in
clc
int
adcb
adcl
xchg
cmp
dec
xor
add
add
pusha
cmp
mov
lret
mov
enter
aad
adc
cmp
xchg
mov
fldt
clc
in
cld
adc
jp
mov
lcall
mov
push
into
jp
cmpsl
mov
icebp
add
shl
xchg
stc
repz
dec
hlt
jmp
aam
adc
or
inc
pop
lret
stos
in
cs
xchg
cwtl
rcrl
testb
dec
lock
push
and
or
enter
aas
sbbl
pop
adcl
adc
iret
jnp
dec
pop
push
or
mov
gs
jbe
jge
movsb
and
nopl
leave
inc
push
cmp
sbb
cmpb
notl
mov
push
jo
rcrb
into
mov
hlt
mov
sbb
jno
or
out
test
js
adc
jbe
mov
mov
dec
out
in
hlt
jae
jb
int
and
fstl
fdivl
dec
popa
and
or
mov
lret
xchg
mov
je
jp
stos
cmpsb
movsl
imul
push
lea
xor
mov
sbbb
aad
sti
jns
dec
jbe
fisttpl
xchg
pop
jmp
or
jnp
push
fdivs
test
mov
xchg
sar
mov
pop
nop
mov
ljmp
lea
mov
shll
mov
daa
out
ss
adc
sbb
ret
idivl
daa
or
push
rcrb
ficoml
push
and
loope
add
mov
shrl
dec
mov
rsqrtps
rcr
xor
cld
jnp
xchg
pop
pop
inc
cmpps
cmp
or
call
adc
push
fisttps
push
mov
add
mov
or
or
int
sub
sub
ljmp
negl
cmpsl
in
popa
ljmp
jbe
cmpl
dec
push
mov
adc
mov
jae
push
test
sbb
stos
sbbl
push
cld
popa
out
fists
mov
lcall
repnz
sbb
xor
inc
lahf
mov
sbb
fnstsw
leave
insl
cltd
ret
pop
xchg
push
arpl
add
xchg
pop
pop
push
pop
movsb
mov
shlb
or
hlt
jg
inc
push
adc
push
faddl
out
pop
in
cmp
ret
adc
mov
lret
outsb
xchg
iret
push
and
mov
push
pusha
sarb
add
int
or
inc
mov
mov
add
incl
pop
dec
inc
cld
ss
loope
sub
mov
inc
outsb
fsts
sti
jb
push
push
dec
dec
inc
roll
mov
xor
scas
sub
arpl
nop
outsb
mov
dec
lods
dec
mov
inc
dec
rorb
cmpsb
mov
addb
mov
rol
pop
lods
and
or
cmp
fcomps
daa
mov
mov
cwtl
xor
cmp
inc
mov
cwtl
orb
aaa
mov
hlt
xchg
pop
out
mov
inc
and
daa
imul
lods
add
pop
fildl
fimull
ret
xchg
sbb
cld
mov
push
dec
or
cmpl
dec
sahf
out
test
addl
fwait
ljmp
xor
mov
movsl
in
mov
bound
sub
fs
jno
adc
stos
ficompl
jae
jbe
lea
mov
mov
movsl
push
das
imul
out
aad
loope,pt
mov
mov
adcl
jg,pt
ret
dec
pop
jecxz
orb
xor
add
mov
adc
dec
mov
leave
into
mov
xchg
int
inc
xor
mov
xlat
push
cli
into
pop
call
mov
dec
or
dec
xor
popfw
xor
fnstcw
lock
in
mov
pop
lret
mov
es
jle
fldl
lock
cwtl
test
mov
mov
gs
dec
and
push
inc
scas
xlat
fs
fcmovne
fmul
sahf
mov
or
xchg
dec
mov
cmp
je
fst
or
jo
fcmovbe
arpl
call
push
lcall
mov
leave
adc
push
inc
sub
nop
iret
sbb
or
xor
lahf
cltd
sbb
push
js
or
paddusb
xchg
sub
cmc
xchg
vmovaps
adc
mov
xchg
lret
mov
divl
sarl
xor
xchg
and
and
inc
ss
mov
mov
adc
xchg
addr16
and
adc
faddp
dec
mov
add
das
fsubrl
std
lods
lea
inc
test
addr16
fstpl
xor
push
cltd
das
pop
fildl
test
scas
fldenv
sbb
or
dec
aas
shl
stos
jne
sbb
fneni(8087
inc
sub
cmpsb
mov
dec
insb
sti
mov
jnp
add
loope
ljmp
pop
movsl
mov
inc
roll
in
push
lcall
sahf
push
pop
les
js
pop
insl
dec
dec
dec
sbb
mov
sub
cli
shlb
xchg
sahf
jae
cmp
mov
xchg
test
jmp
xchg
jns
pop
mov
gs
lds
mov
pop
mov
insb
mov
cmpb
mov
les
push
movsl
ret
pop
out
dec
adc
pop
inc
in
sbb
out
pop
outsl
pop
shl
sbb
lcall
cmpb
xchg
ficomps
shlb
inc
and
mov
jmp
xor
lea
int
sbb
adcb
and
ficoml
and
push
adc
imul
iret
out
aas
int3
out
jns
sbb
fidivrs
inc
sub
pop
ror
push
inc
clc
fcoml
jbe
aaa
addr16
iret
xor
rcl
jnp
adc
jae
shl
pop
sarb
mov
lcall
inc
dec
cmp
sbb
sub
cmp
jb
arpl
push
loope
orb
nop
into
or
or
add
out
sbbl
add
out
mov
pop
pop
sub
mov
adc
ret
sbb
and
push
pop
lret
cmp
mov
mov
mov
xchg
leave
mov
movsl
push
cmpsb
mov
lret
adc
mov
cmp
push
push
in
gs
and
mov
mov
add
push
scas
xchg
mov
in
xchg
xchg
pushf
imul
inc
dec
adc
xchg
inc
add
mov
lret
shrl
mov
movsl
rclb
sub
push
pop
xlat
inc
sbb
add
shr
dec
rolb
mov
mov
test
inc
mov
mov
adc
inc
add
jae
xor
add
popa
enter
xchg
addr16
push
fcom
leave
xchg
pop
xor
fisttps
aam
or
int3
xor
cmp
mov
fsubrl
rcrl
add
pop
jmp
adc
leave
add
fpatan
pushf
in
xchg
sarl
insl
xchg
inc
imul
xlat
xor
inc
pop
out
popf
stc
popf
test
rcr
add
int3
out
jl
outsl
mov
mov
xor
mov
cltd
fnsave
rorl
scas
je
out
iret
push
add
mov
lret
jmp
aaa
ljmp
mov
mov
sahf
push
mov
xor
fs
and
mov
xor
inc
sarl
aad
cli
je
fisubl
cmp
jns
xchg
in
inc
jl
fwait
pop
xor
mov
call
movb
mov
leave
ds
imul
push
imul
stc
fucomip
push
xor
repnz
enter
mov
push
ficomps
stos
jg
sbb
lods
adc
rorb
mov
sti
daa
jo
outsb
mov
mov
clc
mov
dec
and
popa
jg
mov
scas
mov
lret
stc
and
inc
inc
sbb
xchg
dec
mov
dec
inc
xor
mov
add
mov
push
or
fdivs
mov
pusha
inc
cmp
out
pop
xor
aad
clc
cmp
lcall
mov
test
mov
and
ljmp
stos
push
aaa
xchg
and
dec
and
xor
lea
jecxz
daa
jmp
push
aam
push
mov
fdivp
push
insb
pop
lret
ret
lock
dec
jno
lcall
mov
loopne
js
push
out
std
fldl
cmc
sub
cli
add
add
in
aad
adc
sbb
decl
mov
pop
pop
add
jae
pop
dec
clc
add
mov
dec
orb
cmp
imul
sub
sbb
add
pop
push
shlb
jb
xor
cltd
aaa
ja
std
xor
and
jo
dec
cmpb
aam
mov
xchg
cld
add
inc
xchg
test
int3
jno
out
and
js
dec
cmp
cmpsb
inc
sbb
lea
inc
sbb
jbe
cld
jmp
pushl
push
add
imul
clc
shrl
out
xchg
push
sti
dec
fs
rorl
and
subl
adc
push
cmp
rcl
sbbl
ds
mov
cld
loope
movsb
jl
mov
push
pop
jmp
mov
je
aad
rcrl
sub
gs
pop
push
jl
inc
into
adc
jo
jne
push
cmpsl
cmp
or
pop
inc
xchg
push
lock
in
dec
movsl
mov
int
inc
stos
imul
xor
xor
cmp
inc
lret
js
xlat
lock
and
in
mov
inc
movsb
pusha
imulb
pop
xchg
sub
and
fmull
std
xlat
push
aad
or
xor
or
sub
mov
std
popa
ss
shll
das
ret
fsubrl
loopne
pop
dec
out
ds
dec
lock
test
cmp
push
lea
jle
clc
je
andl
inc
xchg
sub
adc
mov
push
in
cmp
or
lea
cmpsb
data16
cltd
mov
in
stos
cli
rcr
insb
pop
loope
out
std
sahf
mov
and
xor
push
mov
dec
sbb
inc
xchg
imulb
jbe
aaa
sbb
mov
or
lcall
testb
loope
xor
xor
add
pushf
jne
add
shlb
test
imul
fwait
popa
mov
arpl
out
mov
pop
push
arpl
out
test
xchg
in
test
fmull
popf
jmp
dec
cmp
push
mov
imulb
sub
push
stos
fisttps
out
hlt
cmp
int
pop
jmp
fldenv
leave
in
inc
xor
xchg
lea
arpl
addr16
test
sbb
repnz
inc
and
cltd
out
in
mov
pusha
leave
leave
aam
dec
mov
imul
jmp
lea
bound
cs
cli
adcb
cmpsb
rorl
pusha
sbb
fistl
clc
repz
xchg
xor
es
and
pusha
sbb
sub
add
aaa
xor
dec
lcall
jmp
add
cmp
fcmovnb
xchg
push
gs
mov
dec
shr
int3
movsl
cmpb
mov
dec
fwait
mov
lahf
add
xor
addb
lcall
sbb
push
xchg
sti
pop
inc
mov
in
inc
add
movb
and
ja
cmc
je
add
shrl
and
roll
jnp
adc
and
into
mov
sub
aaa
xor
push
jae
mov
shll
xor
push
mov
jecxz
fstp
clc
sub
leave
shll
cwtl
lret
mov
sarb
imul
idivb
dec
pop
lret
addr16
mov
sub
sbb
jnp
pop
cmp
cmpsl
rclb
lret
test
int3
loopne
out
lds
jl
outsl
lret
pop
arpl
out
adc
xor
sub
jl
int
in
pop
data16
popa
push
xchg
sbb
aad
inc
cmp
jg
and
sub
add
inc
std
hlt
outsb
xlat
and
in
fcmove
in
xchg
lods
popa
out
or
int3
fsubl
imul
lock
cli
rorb
push
fldl
negl
push
rcl
or
cmpsb
daa
adc
and
ret
imull
jl
out
imul
fcoms
or
lods
or
jb
rcrb
and
icebp
jbe
jns
loop
xchg
imul
dec
sbb
jne
rclb
mov
movsl
xchg
jl
ret
clc
add
sbb
push
cmpsb
cmpsb
fwait
xor
mov
leave
sub
sub
fstpl
aaa
push
dec
or
nop
mov
aad
aas
and
or
pop
push
xchg
call
imul
je
or
mov
shrl
sti
cld
mov
push
xchg
insb
add
das
mov
or
movsl
imul
mov
stos
sub
mov
sahf
sub
sbb
dec
hlt
mov
xchg
jae
addr16
mov
clc
mov
push
insl
notl
stos
movsl
lds
popa
and
stos
out
and
inc
xor
lock
push
mov
sbb
enter
push
sub
lods
jbe
sbb
insb
insl
mov
les
sub
mov
xchg
leave
mov
std
sbb
pop
or
xchg
sub
xor
cmp
repz
adc
lods
cmp
in
push
xchg
lods
inc
out
pop
scas
mov
xchg
inc
xchg
in
add
push
popf
dec
cwtl
xchg
fcmovnu
imul
rol
dec
push
roll
es
shlb
push
jb
cmp
and
dec
push
notl
lcall
sahf
dec
sub
ja
push
loopne
sbb
jge
mov
gs
sub
fldln2
cmpxchg
xchg
jl
jo
pop
in
push
das
into
dec
out
or
sub
sbb
push
mov
add
dec
aam
adc
ret
mov
mov
lods
push
xchg
push
leave
pop
push
repnz
ja
push
or
push
dec
out
or
adc
in
enter
lret
adc
lcall
add
lea
aaa
adcl
std
rorb
out
nop
ds
jno
or
out
adc
xor
cmp
or
in
push
inc
adc
push
xchg
jnp
pop
lods
push
scas
sbb
in
mov
add
dec
aad
sub
xchg
cmpb
dec
push
jecxz
call
xchg
into
jmp
mov
mov
fsubrp
repnz
xchg
lock
repz
sub
out
sarb
xor
adc
and
push
inc
fisttpl
push
jns
cmpsl
dec
pop
int3
push
push
test
movsl
test
fiaddl
dec
dec
fidivrl
fidivl
mov
dec
aam
jmp
inc
inc
out
insb
adc
arpl
xchg
cmc
out
cmp
jnp
cmovns
stos
add
xchg
and
jl
inc
rcll
imul
dec
call
jns
jbe
push
pushf
jno
push
jb
je
add
adc
in
sbb
mov
jb
arpl
in
sahf
add
xor
xchg
lcall
lds
jecxz
add
cmp
xor
mov
fcomps
fs
xor
jbe
in
push
and
adc
jns
test
das
je
out
scas
cmc
lds
and
sbb
xor
mov
jo
insb
mov
ja
mov
or
jbe
out
ljmp
lcall
cmp
lock
dec
push
sub
sbb
sbb
stc
push
xchg
and
and
cs
jmp
add
add
add
inc
testl
sub
jmp
or
mov
add
or
xchg
aad
cmpsb
mov
movsl
es
daa
bound
sti
mov
adc
incb
xchg
sub
xor
push
cmp
mov
jo
dec
xchg
lahf
ds
and
mov
test
cmp
xchg
cmpb
lret
xor
rolb
pop
rorl
mov
or
jp
pushf
scas
add
imul
cmpsb
xor
sub
jno
dec
hlt
lea
inc
xor
lret
push
mov
push
loope
add
aad
fstl
adc
mov
adc
cs
mov
sub
xchg
out
fcom
cmpb
mov
dec
push
mov
out
js
leave
faddl
or
ficompl
dec
loop
push
pop
inc
jl
lcall
js
lock
and
mov
nop
cmp
mov
sbb
lods
cmp
fwait
jns
iret
xchg
sbb
push
ja
fsubrl
mov
out
pop
out
aam
or
in
test
pusha
mov
lret
mov
clc
mov
jne
jo
mov
out
jb
daa
mov
push
leave
adc
pushf
pop
push
xor
xor
sbb
popa
adc
stos
loop
pop
jl
mov
push
inc
mov
je
in
adcl
and
shrl
dec
or
push
mov
jb
cli
fstpl
mov
push
and
cmp
shrb
popa
mov
mov
stc
repnz
mov
lds
or
jbe
dec
jnp
aas
cli
aas
jecxz
popa
xor
mov
or
sbb
push
pop
fldt
stos
mulb
scas
and
push
fmuls
xor
mov
into
int
cmp
adc
aaa
inc
lcall
loopne
ljmp
mov
dec
rclb
inc
stos
jle
inc
sbb
mov
sahf
adc
cmp
adc
pop
repz
pop
jae
mov
sub
nop
cmp
loope
cmpsl
mov
pop
fmull
inc
popa
mov
push
mov
sub
pop
xor
inc
in
addr16
loop
mov
cmp
insb
fwait
sahf
pusha
jae
aaa
stos
shll
push
pop
daa
hlt
loope
ret
mov
mov
cli
jbe
call
cmpsl
jne
fs
jl
fbld
lds
rcl
jnp
jmp
int3
test
xchg
inc
mov
mov
cmp
or
mov
popf
mov
and
mov
sti
jl
xor
push
dec
xor
jmp
andl
mov
add
xor
aaa
xchg
sbb
mov
inc
xor
or
fsub
rolb
cs
or
sar
scas
or
in
add
cli
test
pop
rorb
pop
insl
pop
cmp
sbb
inc
adc
adc
jns
repz
adc
mov
out
and
or
mov
test
ljmp
outsb
sarl
jns
jns
mov
cmpsb
mov
xor
pop
mov
scas
test
divl
pushf
sbb
lcall
in
mov
in
jmp
pop
add
cwtl
inc
lods
cmpb
jecxz
add
pop
imul
lods
ret
jmp
imul
imul
cli
or
fisubrl
lods
movsl
ffreep
dec
ss
loop
jge
and
or
sbbb
inc
js
daa
mov
jns
pop
cmp
pushf
mov
sub
aam
mov
adc
xchg
icebp
xor
push
stos
ljmp
pop
xchg
jp
cmp
jbe
mov
imul
sbb
xchg
push
cmpsl
or
jae
sbb
push
aas
in
xchg
mov
cmp
fmull
arpl
mov
cwtl
cmpsl
ja
je
in
cli
mov
int
mov
or
ja
fbld
dec
mov
adc
test
jnp
idivl
push
inc
les
or
jae
sub
mov
or
call
xchg
out
mov
fs
or
mov
jge
mov
call
das
repnz
ret
dec
ss
push
push
shl
inc
dec
adc
jne
mov
mov
or
daa
js
ja
cli
sub
outsb
or
cmp
xor
pop
push
into
sbb
setbe
lods
jmp
push
add
and
mov
hlt
in
or
sub
ficomps
es
leave
rolb
insb
fadd
out
scas
xchg
lcall
adc
sbb
sahf
pop
pop
aaa
jno
popa
cld
and
cmp
mov
decl
movsb
bound
pushf
cmp
and
ja
dec
pop
mov
mov
addr16
adc
sti
mov
movsl
sub
cmp
jle
sub
push
jecxz
jge
jp
arpl
loope
enter
mov
pop
sbb
xor
outsl
mov
icebp
xor
sub
mov
pop
pop
scas
inc
sbb
push
setge
int
int
dec
in
push
movsl
movsl
and
sbb
push
fwait
xor
data16
jns
mov
ret
ja
outsl
stc
jae
xor
lds
movsl
leave
das
cli
pop
pusha
push
pop
lret
jae
stos
or
jle
aam
inc
mov
xchg
outsb
xor
mov
adc
stos
mov
jecxz
jp
insl
pop
sbbl
jge
sbb
rcl
or
outsl
mov
lcall
das
dec
leave
jae
push
mov
mov
sub
pushf
fs
xor
outsb
xchg
push
xchg
push
adc
pop
and
jmp
fwait
scas
jns
sbb
or
repnz
sahf
cmp
add
mov
mov
sahf
dec
sbb
pop
addr16
inc
sub
dec
shrl
pop
fldl
jecxz
imul
and
inc
push
aam
pop
push
mov
mov
bound
mov
pop
cmp
add
push
ds
jmp
or
scas
cli
dec
cmp
and
jns
sahf
rcrl
pop
pop
out
mov
push
xchg
ds
mov
cli
lahf
inc
mov
or
aam
jns
es
mov
jmp
mov
xor
mov
jne
insl
cmp
push
stos
ret
hlt
jno
loope
into
and
xchg
push
push
emms
popf
sahf
sbb
xor
mov
cmp
jo
push
les
loopne
rcrl
test
out
mov
mov
cmc
push
jno
jnp
repz
out
movsb
jle
jb
dec
mov
cld
mov
fmuls
mov
pop
int
outsb
fistpll
inc
cmc
pusha
imul
mov
push
cmpsb
cmp
rcll
jns
mov
add
mov
dec
loopne
xchg
fs
js
punpcklbw
imul
pop
xchg
aad
add
or
lret
pop
push
sbb
icebp
rcll
mov
or
pop
inc
test
jbe
inc
xchg
into
push
arpl
aam
addl
subl
mov
mov
jp
das
cmpsl
cli
pushf
inc
bound
cs
pushw
loop
std
aaa
adc
ss
mov
dec
notb
enter
jle
cli
xchg
mov
cmp
stc
adc
mov
repnz
icebp
inc
push
xor
test
cmp
mov
insl
pop
or
mov
aas
nop
mov
push
adc
ficomps
xor
loop
jno
and
xchg
sub
outsb
xchg
sbb
popf
pop
push
add
test
das
xchg
pop
pop
shlb
push
mov
and
or
sbb
cmpsb
inc
lds
lret
or
cwtl
outsb
mov
push
int
mov
sbb
sarb
outsb
cld
jecxz
mov
in
xchg
jge
sbb
dec
pop
pop
mov
pop
popf
sub
daa
hlt
mov
std
mov
aad
add
jo
add
in
dec
sbb
jp
sub
daa
and
lock
pusha
mov
push
sbb
mov
in
jle
or
call
mov
dec
fwait
stos
cli
mov
lds
ljmp
or
add
cmp
pop
or
lret
sub
int3
lea
and
ss
rcl
pop
aaa
add
movsl
xor
mov
fdivs
jb
imul
xchg
in
mov
cmp
jno
push
popa
sub
adc
and
test
nop
sub
loopne
push
jnp
or
pop
xchg
aam
jo
and
jno
je
add
mov
lret
and
mov
fisttpl
mov
jmp
mov
jbe
fwait
loope
jl
mov
jecxz
shll
or
test
sub
xchg
mov
repnz
pop
adc
xor
jnp
push
sbb
pop
sbb
ljmp
stos
xlat
xor
outsl
dec
sub
xchg
fldt
loope
cmp
popa
mov
pop
mov
adc
imul
xor
int
fdivr
sbb
test
fsubrs
or
cmc
mov
xor
xor
dec
jecxz
sbb
or
adc
push
sub
mov
mov
mov
or
out
nop
pop
ficoml
stos
xor
pusha
adc
out
repnz
adc
aad
les
int
mov
cli
or
nop
pop
jmp
mov
jnp
gs
push
xchg
dec
ret
pop
jns
test
repnz
mov
adc
push
ljmp
ds
adc
mov
mov
ds
cmpsl
mov
xor
and
les
pop
mov
aad
lret
xor
push
xchg
in
outsb
sbb
cld
out
push
aad
sbb
fsqrt
dec
adc
nop
insb
addr16
outsl
pop
push
lahf
add
in
add
jne
sub
aam
sub
sbb
mov
push
xchg
or
cmp
sbb
outsb
shrl
mov
cltd
inc
mov
repnz
data16
in
push
mov
inc
jle
mov
dec
pop
rorb
cmpsb
test
xor
stos
xor
iret
sbbb
adc
add
jmp
in
mov
mov
or
sarb
in
std
mov
pusha
lahf
add
movsl
pop
xor
int3
cmp
imul
add
mov
xchg
shll
inc
jge
mov
and
mov
or
mov
inc
sbb
lret
mov
imulb
pop
inc
mov
push
xchg
testl
sub
mov
cmp
test
adc
or
shlb
xchg
xchg
lds
fs
cmp
xor
xor
xchg
jmp
add
loope
sbb
lock
push
push
sub
inc
cli
inc
sbb
lds
or
jno
sahf
pushl
jo
lcall
mov
scas
dec
rcl
jle
pop
push
xor
ljmp
cli
adc
cmp
ds
movsb
repnz
fistpl
mov
push
adc
fistps
cld
orb
xchg
clc
stos
out
mov
aam
sbb
rcr
xchg
pop
xor
jge
aaa
enter
test
adc
not
lcall
or
or
scas
push
push
daa
mov
mov
jmp
push
dec
jo
fisubl
jno
dec
je
ret
es
dec
adc
mov
iret
inc
rcrb
jae
les
pop
adc
stos
xor
add
cmp
or
push
add
dec
adc
dec
lea
mov
loopne
xor
stc
or
cld
cmp
leave
clc
sub
sub
sub
loop
xchg
push
add
notb
lret
sub
jge
data16
dec
xor
hlt
cs
mov
mov
stos
mov
in
je
jl
mov
push
mov
daa
sub
inc
ljmp
test
pusha
lea
lds
xchg
int3
pop
mov
pop
adc
sbb
pop
or
jno
dec
jmp
mov
call
inc
dec
pushf
mov
mov
or
inc
dec
pop
xor
jl
push
into
popl
mov
push
insl
sbb
or
xor
imul
fs
mov
xor
lret
dec
dec
call
xor
je
ljmp
jnp
and
decl
insb
or
ja
lds
jg
xchg
into
push
imul
mov
sbb
cmpsl
pop
rorl
mov
mov
push
rclb
adc
sub
es
mov
in
repz
movq
dec
or
pop
mov
pop
push
outsb
es
cld
push
pop
mov
into
insb
std
push
mov
adc
js
inc
inc
inc
push
popa
dec
jle
add
inc
mov
arpl
cmp
mov
cltd
loopne
insb
into
cmc
mov
out
cmp
outsb
sti
cmp
dec
arpl
out
andb
push
pusha
xor
jae
jp
negb
ds
repz
test
test
push
repz
inc
cltd
dec
mov
inc
inc
imul
shl
and
push
clc
enter
add
addr16
adc
mov
mov
lea
adc
xor
dec
out
movsb
sbb
aas
imul
push
pop
shll
sbb
inc
cltd
xor
cmc
mov
mov
push
xor
pop
jbe
fcmovbe
or
daa
popa
popf
sbb
rclb
enter
fildll
into
addr16
cmc
call
mov
push
js
pop
inc
pop
mov
sub
fldenv
push
cld
jge
orl
popf
jns
push
in
insl
inc
push
pushf
jns
daa
sub
aam
and
pushf
and
mov
sub
sbb
out
inc
shr
cmp
leave
cld
das
adc
arpl
jnp
ficomps
fisubs
lea
pop
int
sub
and
lods
push
data16
push
sahf
push
mov
clc
or
jp
push
fld
xchg
dec
std
adc
push
enter
in
xor
mov
or
sbb
cmp
and
popa
jo
arpl
mov
cmp
inc
aad
mov
fwait
pop
mov
addps
imul
test
lock
in
lods
xor
cmp
je
xor
adc
cmp
and
adc
sub
js
adc
mov
mov
mov
push
ljmp
jecxz
out
movsb
stc
bound
mov
xor
stos
cli
sub
dec
sub
xchg
loopne
out
sub
cmp
shll
fwait
mov
xchg
out
sarl
aaa
cmp
movsl
jl
andl
push
aam
sub
negl
daa
daa
xor
mov
xchg
xor
fs
ljmp
stos
pop
negb
sahf
inc
push
pop
mov
mov
cmc
in
or
mov
mov
jp
lret
pop
call
dec
cld
cmp
xchg
test
inc
ds
cmp
pop
ficomps
push
pop
lret
dec
scas
sbb
ficoml
jg
mov
lods
mov
out
out
cli
jp
aas
cmp
push
in
adc
xor
das
mov
jae
jo
xor
cmpsl
add
arpl
test
or
enter
test
rorb
mov
fisubl
cmp
lods
adc
mov
sub
mov
xchg
adc
clc
mov
add
and
jg
ljmp
xchg
push
mov
loop
and
in
push
jbe
pusha
nop
and
cli
ja
push
jp
lods
loopne
push
cli
imul
not
ret
cmp
sub
pop
std
push
push
dec
pusha
and
sbb
mov
lcall
cmpsl
and
cmc
je
cmp
arpl
out
pop
mov
mov
lret
inc
add
push
pop
and
mov
inc
add
pop
pop
shll
outsb
icebp
or
rclb
mov
xchg
jno
pushf
pop
stos
into
rclb
push
jecxz
dec
sbb
loopne
movsb
stc
mov
mov
ljmp
add
test
sub
fidivrl
loopne
push
ret
mov
mov
fsubrl
push
cltd
lcall
or
cmp
sub
lret
cmp
dec
push
fsubl
leave
pop
mov
dec
test
sub
sbb
lret
dec
inc
inc
sub
fcoms
jmp
and
ficompl
ds
and
iret
loop
shlb
cwtl
pop
inc
scas
lock
fidivrl
inc
arpl
imul
cmpsb
sbb
mov
cmp
fldt
inc
adc
jle
mov
fsubr
pop
cmp
mov
cli
sysenter
jge
lods
jg
pusha
ss
subl
jl
sbb
xlat
jmp
pop
cmpsl
push
orb
pushf
mov
add
xor
popa
pop
inc
add
jecxz
adc
lock
nop
adc
push
jne
and
ds
and
enter
popf
outsl
push
out
out
sahf
ds
inc
aam
xor
cs
mov
xchg
inc
jae
pop
push
add
sarb
flds
lea
jle
insb
or
pop
sbb
lret
jae
clc
insb
repnz
inc
mov
mov
lods
pop
in
imul
xchg
enter
push
mov
movsl
jl
je
loop
jp
jns
movl
cmp
push
sbb
pop
sbb
dec
testb
data16
repz
or
push
jo
mov
xor
or
lods
faddp
add
cmp
adc
jmp
fldl
sbb
orb
out
mov
pop
xchg
push
cs
inc
push
cmp
push
ja
adc
xor
mov
add
push
xor
rcrl
cmc
push
dec
sub
fs
mov
adc
lcall
jp
jae
ljmp
push
inc
and
mov
pop
jae
pop
jns
adc
jle
in
icebp
aad
push
mov
stos
inc
cmpsl
rcrl
test
or
repnz
je
and
lods
shrb
xchg
aad
fisttpll
gs
daa
mov
dec
xchg
mov
mov
sahf
sbb
jns
mov
leave
in
mov
xorb
or
je
pop
je
adc
fnstsw
movl
int
in
aam
loop
inc
pop
inc
jno
inc
mov
adc
cmp
add
mov
insl
clc
ljmp
mov
xor
mov
push
out
adc
fimull
mov
int3
xchg
dec
cmp
adc
dec
fld
int
sub
add
push
jns
bswap
scas
push
push
push
sti
sub
scas
loop
movsb
or
xchg
dec
cmp
or
stos
nop
push
mov
mov
in
sbb
add
mov
cmp
scas
popl
je
adc
icebp
fyl2xp1
ja
push
negb
jae
sub
or
jle
fsubr
ss
fnstenv
and
call
in
stc
jge,pt
enter
mov
mov
lcall
adc
xchg
jge
add
mov
pop
sub
push
cmp
sbb
sub
incb
ret
xchg
lret
jno
mov
cwtl
ljmp
jp
shrb
das
imul
jle
leave
add
add
movsb
shrb
jmp
push
fwait
ret
dec
mov
fdivl
stc
ds
push
imul
xchg
arpl
loope,pn
mov
mov
int3
cld
test
loope
cmp
add
pop
push
decb
scas
pop
jae
mov
js
jno
pop
push
mov
adc
aas
or
nop
push
jp
int3
add
adc
push
and
cmpb
sub
xor
fistl
test
jbe
pop
dec
add
js
fistpll
push
cli
mov
adc
insb
lahf
in
push
inc
dec
xchg
dec
inc
fstps
and
test
outsl
psubusb
sub
or
adc
ror
dec
pusha
mov
testb
mov
mov
aad
adc
movl
pop
divl
or
cltd
mov
mov
testl
jo
imul
cld
inc
call
out
jge
add
pushf
outsb
scas
xchg
xor
or
arpl
or
inc
adcb
les
ss
movsb
sub
aas
adc
aaa
rcr
xchg
xchg
sub
mov
cmp
jecxz
fldt
in
sub
add
jae
mov
jb
push
lahf
jnp
push
sub
xchg
xchg
mov
rcll
fidivs
xor
mov
pusha
mov
mov
lock
fwait
push
lret
call
mov
push
mov
daa
hlt
loope
mov
fidivrl
lahf
xor
jge
inc
ret
xlat
lods
adc
or
shll
sub
xchg
clc
imul
cwtl
mov
es
dec
cld
pop
mov
cmp
push
movsl
pop
les
cwtl
test
mov
inc
xchg
addr16
push
pop
mov
lret
aad
jo
imul
sti
dec
sti
adc
movsl
fstps
sbb
imul
jg
mov
pushf
mov
cmp
mov
pop
xchg
mov
and
mov
add
stos
mov
mov
push
int3
scas
lret
mov
mov
nop
inc
xlat
push
cmp
sahf
cmp
push
rcrb
movsl
filds
pop
push
dec
shlb
xchg
nop
inc
mov
negb
hlt
xlat
std
mov
pop
daa
popa
test
mov
mov
mov
xchg
mov
sub
out
dec
xchg
mov
mov
pop
push
int3
aam
mov
sbb
and
outsb
bnd
or
icebp
mov
pop
aaa
sbb
add
movsb
inc
lods
jp
dec
icebp
add
mov
into
cltd
xor
jmp
imul
adc
or
fucom
idiv
mov
div
leave
fs
daa
push
add
sub
aaa
adc
repz
popa
jle
pop
jb
xchg
mov
sbb
jnp
adc
jnp
loope
xor
sbb
jl
clc
add
dec
roll
mov
mov
cmp
sub
sbb
scas
mov
scas
sbb
nop
xchg
dec
ret
xor
xlat
pop
jno
scas
and
dec
push
loope
fbstp
pop
lea
orl
fwait
push
xor
loope
mov
inc
push
je
popf
adc
cmp
pusha
movsl
roll
mov
mov
adc
stos
jbe
push
and
bound
mov
adc
clc
mov
lods
pop
jns
mov
or
popa
push
nop
jmp
xchg
xchg
stos
icebp
jg
cmpsb
insb
inc
popa
jg
dec
jecxz
outsl
pop
jb
ja
dec
lds
aas
pop
and
push
pop
fnstsw
lods
jnp
cmpb
pushf
cmp
out
imul
xchg
mov
je
pop
loopne
in
ss
cmpsl
frstor
cmc
push
pop
loop
mov
sbb
fstpl
das
push
adcb
and
sub
nop
pop
mov
push
pop
or
jb
mov
repnz
addr16
or
rorb
dec
mulb
and
loop
js
inc
adc
dec
lcall
ljmp
jp
sbb
adc
mov
inc
xchg
out
adc
mov
mov
pushf
cld
xchg
inc
stos
aam
ja
sbb
mov
or
sub
or
fcmovnu
shll
imul
call
fwait
inc
mov
adc
xchg
stos
out
movsl
clc
mov
pop
sub
pop
add
jmp
and
inc
jmp
in
mov
std
mov
dec
jae
xchg
xor
in
and
fmuls
sub
es
and
cmp
mov
inc
pop
jge
jb
or
add
mov
push
in
movsb
shr
scas
and
in
inc
xchg
movsl
sub
push
stc
dec
jnp
sub
cmp
lret
pop
xchg
mov
xchg
push
cmp
mov
lock
sbb
fs
push
push
cmp
mov
xchg
mov
subl
sub
test
jmp
es
or
dec
pop
loop
mov
fisubrs
testb
aaa
cs
push
push
or
fiaddl
mov
mov
mov
dec
push
jns
addr16
nop
inc
xchg
and
pop
fadds
sub
in
xchg
lock
sbb
faddl
xchg
pop
movsl
cli
leave
jo
sub
in
sbb
ljmp
mov
cld
lcall
aam
jmp
lock
and
dec
popa
lret
pop
xor
enter
test
lea
lcall
pop
pop
icebp
int3
cwtl
jg
jb
aam
ljmp
mov
dec
cmp
sahf
push
outsl
push
pushf
fs
idiv
ret
movsb
fldenv
sahf
xor
jns
xchg
add
pushf
int
mov
inc
mov
xchg
int3
in
add
bnd
and
subb
cmc
ja
pop
sub
les
pop
push
mov
loopne
test
push
cltd
fcoml
mov
mov
add
sub
insl
cld
fldl
jne
aad
mov
inc
insl
insb
mov
or
xlat
cmp
filds
je
xchg
lea
lods
push
dec
cmp
sbb
mov
pop
and
xor
mov
mov
adc
or
cmp
test
dec
mov
popf
cmp
test
adc
fst
rcr
jne
dec
aas
cwtl
lret
mov
js
and
sti
test
sbb
or
rorl
and
inc
std
mov
mov
mov
or
stos
xchg
jge
imul
fdivs
pop
cmpl
and
xor
shlb
aam
xor
adc
loopne
and
incl
mov
inc
add
std
loopne
in
leave
nop
push
pop
insl
rorl
js
pushf
jle
lods
xor
in
int3
xor
icebp
icebp
rcr
inc
cli
xor
scas
mov
int3
cmp
outsl
or
popa
sub
jmp
mov
mov
test
cmp
iret
sub
sbb
jbe
or
pop
arpl
insl
insl
push
add
sbb
pushf
mov
in
pop
nop
into
jmp
jb
inc
and
popf
push
adc
in
xchg
call
lods
xor
rol
add
add
xor
inc
adc
subl
out
inc
dec
movswl
decb
iret
add
lds
adc
ljmp
sub
xor
test
sub
add
pusha
ljmp
hlt
push
jae
sub
movsl
scas
orb
icebp
cmpsl
add
sub
les
iret
in
or
in
sub
or
data16
imul
call
jg
add
and
aad
or
rclb
pop
jp
ljmp
in
cld
or
and
movsl
subb
dec
mov
mov
int3
in
jge
sub
bound
insl
movsl
add
dec
jle
and
adc
xchg
jecxz
mov
and
orb
push
mov
in
push
cmp
roll
pop
jbe
push
call
dec
xor
aas
jle
mov
imul
fistps
lea
hlt
jns
cmpsl
movsl
insb
jp
leave
mov
dec
or
push
lds
imul
test
xlat
ficomps
movsb
in
mov
in
dec
cmp
xor
stos
cli
push
test
das
and
pop
or
je
push
and
int
cmpsb
mov
jo
dec
adcb
pop
pop
lods
mov
jp
dec
nop
cmp
mov
push
pop
inc
lcall
sub
inc
adc
or
push
icebp
mov
xchg
cltd
jmp
sbb
mov
je
lods
add
or
dec
jb
enter
xor
fsubp
sub
scas
mov
loopne
leave
test
sub
pop
cmp
aaa
xchg
dec
in
cld
fisubrl
jg
cmp
in
jae
push
ljmp
je
mov
stos
inc
into
shr
push
adc
jle
arpl
lds
dec
movsb
sarl
cmp
adc
dec
mov
in
sub
rcll
hlt
sbb
icebp
cltd
aad
ljmp
add
xorl
add
and
add
cld
repnz
sbb
push
pop
rcrl
xor
dec
jno
cmp
jno
inc
imul
push
dec
lods
sub
inc
dec
pop
jmp
test
inc
pushf
mov
xor
or
lods
jno
xor
iret
mov
clc
pop
dec
mov
into
je
fcomps
mov
sbbl
hlt
mov
mov
cmp
sar
lods
mov
push
imul
pushaw
or
ret
jl
inc
sub
jnp
mov
sarl
cwtl
add
jecxz
pop
out
inc
ds
push
sub
in
jae
adc
das
in
push
dec
jnp
les
movsl
pop
sahf
xchg
pop
in
and
fnsave
mov
leave
xchg
cmp
test
sub
xchg
je
dec
mov
pop
test
inc
icebp
jnp,pt
or
dec
lods
lcall
xchg
shlb
test
mov
pop
hlt
repz
or
inc
cs
cmp
fmul
mov
subl
xor
lds
orl
inc
jl
inc
xchg
dec
icebp
xor
push
push
push
push
popf
and
aam
out
xor
pop
pmulhuw
mov
arpl
lahf
ret
push
insb
js
out
mov
dec
rclb
and
sub
stc
add
insb
iret
xchg
pop
imul
aas
or
lods
cmp
jno
insb
ret
in
jno
sub
and
dec
xchg
xchg
or
mov
or
ss
dec
cmc
or
loopne
cltd
pop
in
cmpsl
jecxz
fcomp
and
lods
xor
lret
pop
icebp
sahf
popa
out
gs
andl
imul
fwait
lcall
jno
pushf
dec
jg
int3
jmp
sub
stos
enter
cmpsl
and
sub
cmpl
aam
mov
cmp
stc
pop
sub
add
stos
sub
rolb
add
lret
cmp
in
add
sub
cmp
test
xchg
mov
push
les
xlat
jnp
leave
adc
mov
sarb
push
push
repnz
mov
daa
in
mov
and
mov
bound
outsb
xchg
pushf
sbb
mov
in
push
inc
adc
xchg
pop
cmc
xor
pop
pop
loope
stc
jmp
sub
xchg
mov
lods
cmp
rcrb
dec
jns
mov
mov
sahf
repnz
stc
jmp
mov
pop
pushf
insb
cltd
sbb
sar
push
mov
dec
xor
add
xchg
xchg
mov
pushf
ret
repnz
imul
adc
clc
pop
xor
jno
jg
mov
jl
jb
cmpsl
jb
dec
xchg
jmp
inc
push
dec
aam
call
inc
fiaddl
cmp
push
inc
cmpsb
imul
outsb
xchg
imull
xchg
jne
mov
mov
add
sub
js
clc
hlt
push
mov
and
jo
es
dec
or
repz
jg
ds
adc
lea
stos
leave
repz
pop
or
out
xchg
fs
rcl
out
dec
jb
cs
jmp
dec
add
leave
std
xor
in
dec
nop
insl
outsl
loopne
loopne
push
subb
iret
sub
ds
data16
cltd
push
cmp
insl
lods
jbe
mov
mov
es
cmpsb
inc
sub
jbe
js
mov
push
inc
xchg
add
mov
push
test
xor
int
jge
xor
mov
nop
jno
movsb
nop
ret
test
jae
lea
jns
fwait
loopne
jmp
adc
sub
or
add
push
subl
movsl
xchg
fimuls
xchg
gs
lahf
hlt
test
fldenv
lahf
cmp
in
fists
and
mov
into
popa
inc
push
test
lea
andl
inc
xor
fidivrl
cmp
xchg
lahf
sub
adc
test
ljmp
mov
cmc
pusha
xchg
addr16
and
sarl
xor
pop
lret
dec
adc
int3
lahf
mov
movsl
jp
roll
inc
add
and
lds
out
dec
movsl
mov
in
pop
sbb
shll
mov
fsubrp
cmp
clc
shlb
pop
lods
rcrl
cwtl
aaa
pop
loopne
mov
push
repnz
fildll
repnz
out
js
and
xchg
or
mov
fisttpll
mov
rorb
mov
sub
outsl
mov
aam
das
sbb
cli
mov
jnp
ljmp
mov
arpl
pusha
mov
dec
pop
sbb
aam
lds
lret
stos
sti
repnz
mov
jge
add
repz
cs
int
in
mov
pushf
daa
int3
mov
mov
jmp
int
gs
repz
pop
test
mov
sbb
dec
pop
mov
xor
rolb
cmp
gs
cmp
les
test
in
xchg
push
mov
movsb
cwtl
das
push
sub
addr16
cmp
clc
fcmovb
nop
mov
int3
mov
xchg
mov
leave
outsl
fldt
mov
inc
addl
jae
adc
jae
pop
xor
add
je
mov
or
push
hlt
push
jmp
ja
cmp
fistps
cmpb
dec
loopne
sbb
sbb
shl
insl
dec
loopne
jmp
xchg
lods
or
xlat
insb
fnstsw
push
xchg
xor
xor
push
jge
mov
mov
hlt
xchg
aad
jnp
sub
xchg
jne
add
or
xlat
pop
shlb
mov
add
mov
or
mov
sbb
mov
xor
dec
fidivrs
push
imul
mov
add
dec
fsubrs
mov
xchg
lods
xchg
push
or
jb
inc
jno
fisubrs
imul
xchg
or
push
adc
movsl
ds
pushf
scas
adcl
add
sub
jge
cmp
sahf
mov
enter
lcall
imul
sbb
outsl
dec
mov
test
nop
cmp
xchg
arpl
insb
dec
inc
or
mov
loop
sub
pop
mov
fnstsw
js
add
or
or
out
pop
push
ficompl
lods
cmp
add
xor
sub
lods
sub
jg
popa
cmp
mov
push
cmp
sbb
mov
divl
lods
aas
daa
mov
stos
inc
dec
insb
jle
aaa
inc
pop
add
jb
dec
jns
bound
pop
ret
js
cmp
mov
cmpsl
mov
push
pushf
cmc
inc
loope
ss
aas
push
fwait
or
call
negl
pusha
lret
mov
xchg
cmp
mov
in
cs
fistpl
pop
pop
es
or
adcb
mov
xchg
pop
mov
adc
xor
mov
inc
add
adc
mov
cmpsl
clc
rcll
scas
fistps
das
loopne
cs
insl
fwait
mov
cmp
xor
push
or
lock
push
in
out
mov
repnz
insl
scas
imul
repnz
sbb
add
xor
push
sbb
mov
arpl
pop
mov
jnp
xlat
fisubrs
ds
repz
daa
or
pop
in
stos
iret
ljmp
push
and
addr16
test
jmp
scas
adc
xor
subl
clc
stos
cld
push
xor
inc
int
daa
roll
cwtl
pop
bound
pop
addr16
inc
repz
decb
sub
sbb
mov
out
ds
ret
movsb
ja
cld
je
in
sub
movsb
rcr
mov
xchg
cltd
lds
adcl
xor
imul
add
push
sbb
sub
dec
pop
push
xchg
rorb
psubusb
outsl
cmp
clc
test
cmp
repz
or
shlb
test
sub
inc
jp
movsl
cmpsb
mov
cmp
fadds
int3
lods
cmp
divb
sbb
inc
inc
xchg
stos
aaa
and
jg
aaa
mov
lcall
aam
lret
sbb
jg
rcrl
mov
lret
pusha
mov
sbb
scas
sbbb
aaa
out
mov
push
cltd
int3
lret
sbb
hlt
insb
dec
inc
add
lcall
sbb
mov
pop
dec
cmp
inc
insb
lods
into
mov
int
cmp
popf
cmpsb
stos
out
inc
call
inc
mov
jno
jbe
orb
pop
sbb
inc
popf
xor
das
leave
in
scas
cmpsb
sub
das
rclb
int3
cld
cli
aas
xor
push
dec
mov
xlat
xor
jmp
in
jle
inc
int
sbb
lock
xchg
shl
shlb
rcrl
sub
jp
call
sub
mov
js
je
sbb
xchg
sarb
in
nop
cmp
leave
sub
xor
mov
sti
stc
outsb
sbb
int
cmc
xor
or
pop
lds
and
lea
sar
pop
jnp
adc
cmc
mov
adc
sub
inc
arpl
adc
cltd
push
adc
xorl
and
xchg
pop
cmp
mov
out
pop
jne
mov
fbstp
cmpsb
shll
adc
lahf
sub
int
mov
popf
add
sbb
pushl
mov
xchg
add
lcall
sub
repnz
xchg
inc
cmpsl
mov
cli
sub
cmp
scas
pushf
push
movsb
xchg
imul
push
in
mov
or
cmpsb
out
xacquire
ss
xor
jg
out
push
inc
lret
dec
sti
cmc
jb
or
sbb
dec
jns
aaa
mov
inc
mov
insb
jge
nop
xor
and
stc
nop
mov
push
sbb
loop
imulb
movsl
adc
mov
bnd
lret
pop
adc
movsl
push
inc
mov
int
jge
and
mov
sti
mov
test
xor
test
dec
dec
dec
mov
adcl
fwait
push
mov
dec
sub
movsl
sbb
jmp
and
mov
jmp
sbb
jecxz
push
sbb
mov
sub
sbb
mov
xchg
psraw
negb
stos
iret
sub
lods
das
and
lret
mov
and
cmc
cwtl
adc
xchg
mov
dec
lret
mov
xchg
fistl
inc
mov
xchg
lods
test
in
lock
daa
jle
xchg
lret
mov
pop
inc
test
enter
push
stos
insl
shrl
out
arpl
mov
push
outsb
dec
ror
test
subl
xor
js
jne
mov
das
pop
push
outsl
mov
shll
sub
xor
xchg
lock
jnp
cmp
in
cli
andl
lret
fisubrl
adc
jg
imul
sbb
iret
cwtl
outsl
and
dec
int
enter
dec
orl
outsb
lods
and
adc
mov
adc
std
std
in
mov
pop
daa
out
adc
mov
xchg
sub
push
call
mov
or
out
arpl
pushw
mov
add
movsl
iret
push
faddl
adc
adc
xchg
add
mov
lods
ja
cmpsb
stos
je
movsb
inc
imul
cwtl
jg
and
mov
pop
dec
cwtl
jno
and
enter
sub
cmpb
cmp
aam
in
lahf
cmp
sub
inc
loopne
ljmp
xchg
xchg
adc
xor
ljmp
xchg
and
or
loop
dec
insb
dec
iret
or
arpl
push
push
mov
cli
pop
bound
stc
mov
cmc
ficomps
mov
jbe
adc
lds
lds
std
adc
or
pop
ljmp
sbb
cmp
cmp
out
pop
je
add
mov
lods
fistpll
adc
add
xor
xchg
cmp
mov
repnz
mov
paddsw
cmpl
ljmp
cmp
jo
lret
cmpsl
mov
sbb
dec
in
out
and
lea
in
sbb
push
fstl
fdivs
jle
sbb
daa
mov
cwtl
clc
pop
sub
dec
les
cltd
xor
out
push
add
rclb
cmc
mov
mov
in
lret
sbb
mov
pop
or
cld
inc
repz
sub
mov
stos
scas
add
inc
repz
add
pop
and
add
mov
aad
call
jg
jb
xor
lret
inc
adcb
mov
xor
and
pop
mov
cs
add
cmp
xchg
scas
jle
add
fldt
adc
pop
loop
lcall
jg
inc
jmp
xor
jl
lcall
xchg
aam
insl
xor
pushf
xchg
sahf
in
data16
add
adc
jne
push
jp
xchg
dec
lea
xchg
ret
test
inc
pop
push
inc
sbb
es
ja
add
xor
cmpsb
xor
pop
shll
fnstcw
fnstenv
stos
cmpsl
mov
dec
clc
mov
cmpsb
sbb
sti
pop
je
push
push
call
pop
jb
add
inc
rclb
mov
es
jo
call
sahf
xchg
lret
jbe
jne
dec
xchg
or
and
sbb
mov
mov
or
enter
fsub
pop
loopne
jne
or
ret
inc
mov
aas
scas
mov
sbb
ss
scas
sbb
call
inc
xor
sbb
fsubs
enter
sbb
pop
dec
test
jle
dec
aad
sub
pop
enter
and
add
cmp
pop
addl
push
jo
insb
lahf
pop
js
movsb
cld
in
test
pop
ja
sbb
gs
inc
int3
cmp
add
add
sbb
pop
int3
in
inc
sub
mov
addl
sub
movsl
cmp
jae
inc
sahf
xor
andb
sbb
scas
repz
ficoms
jl
jl
icebp
lret
mov
push
mov
mov
adc
inc
fcomip
pop
mov
inc
jae
rolb
sub
out
daa
shr
sub
popa
pop
aad
sub
ret
arpl
mov
or
xchg
jbe
pushf
lret
leave
ds
push
dec
mov
mov
popf
addr16
adcb
pop
lods
mov
pop
enter
fdivrs
pop
cmp
cmp
hlt
adc
xor
push
jb
push
cmp
pop
or
sahf
xchg
cli
loop
jns
dec
loope
or
sahf
jb
icebp
in
cmp
insb
out
push
mov
rcll
mov
test
xor
mov
jmp
xchg
adc
xchg
mov
popa
outsl
sub
gs
and
fmull
out
lds
pop
not
mov
mov
decb
loopne
ljmp
and
xchg
dec
mov
jae
jne
mov
inc
cmc
mov
lret
dec
xchg
sub
faddl
and
fidivs
add
xchg
jecxz
je
push
dec
repz
fiaddl
aad
vpunpckhqdq
data16
sbb
test
cltd
sbb
sbb
das
mov
mov
sahf
jl
test
or
loopne
cmp
addr16
pop
stos
pop
pop
dec
push
jmp
mov
sbb
xchg
pop
sbb
stos
pop
pop
pop
cmpsl
cmp
jmp
and
idivb
adc
mov
xor
es
lods
loope
out
lahf
or
outsb
sbb
orl
fnstcw
mov
jge
xor
or
mov
xor
xor
hlt
xchg
popa
pop
call
cld
xor
cmpb
or
inc
dec
or
xchg
clc
imul
fmuls
fcom
insl
cltd
andb
outsb
pop
jae
cmp
imul
cmc
lock
mov
sbb
add
les
and
adc
gs
mov
fidivrs
xlat
or
aam
sbb
loop
and
cli
cltd
fstps
loope
aad
push
subb
mov
mov
push
test
imull
pop
addr16
ljmp
cmp
fcomps
jl
movsl
dec
rcrl
movsb
insl
or
faddl
fists
shrb
pop
out
in
inc
fidivrl
fisubl
jl
cmpsl
adc
or
inc
sbb
mov
xchg
jecxz
pop
jmp
mov
inc
dec
mov
dec
push
mov
aad
pop
or
repnz
or
clc
jle
mov
push
pop
dec
cmp
stos
das
into
leave
xchg
iret
lods
push
movsl
xor
inc
xor
push
or
sahf
lock
pop
out
fsubl
lss
daa
sbb
jno
mov
xchg
xorb
or
sbb
mov
xor
loop
dec
rcr
pop
mov
jns
or
mov
rcrl
in
push
scas
mov
test
test
mov
pop
fwait
loopne
dec
xchg
pusha
les
sbb
call
out
sub
and
mov
xor
outsb
mov
shl
push
xchg
cmpsb
dec
cmpsb
aaa
mov
hlt
mov
pushl
in
mov
rcrb
mov
xchg
daa
cmp
sub
dec
add
xor
test
jmp
xchg
jnp
or
test
into
sub
das
push
movsl
insl
dec
jb
jns
sbb
decl
add
adc
add
or
and
lret
addr16
sub
pusha
sti
ret
jne
aaa
pop
jmp
fstps
sti
lret
loopne
movsb
les
ss
add
lret
testl
xlat
or
xchg
arpl
sbb
mov
cmpl
xor
movsb
dec
cwtl
or
dec
xchg
jmp
mov
into
cmc
lea
push
sbb
pop
mov
je
fisttpl
mov
push
mov
sub
sahf
cmp
cli
add
mov
push
mov
or
loope
test
push
fs
out
out
nop
sbb
lods
adc
sub
enter
jo
sbb
nop
mov
add
jmp
lahf
dec
xor
mov
jle
hlt
jp
rorb
daa
fwait
pop
mov
mov
xchg
shll
lcall
push
mov
decb
xor
scas
push
imul
mov
adc
lret
lahf
shll
or
dec
add
jg
dec
stos
lcall
jnp
sub
imul
push
outsl
icebp
and
xchg
aaa
mov
cmp
or
lods
cmp
insl
pop
pop
pop
lods
and
mov
and
lods
mov
cmp
and
mov
push
sub
cld
movsl
push
test
lret
xchg
data16
xchg
lds
rcrb
or
int
movsl
mov
sub
pop
pop
addr16
leave
outsb
adc
stos
push
sbb
aam
xchg
jle
dec
rorl
call
imul
inc
inc
int
push
pop
ret
mov
outsb
inc
ret
rorl
sarb
xor
gs
dec
leave
mov
sub
fmuls
into
or
fcompl
lret
nop
popa
adc
lret
mov
xchg
xlat
sbb
out
cmp
popa
js
out
int3
jne
pop
movsl
scas
in
mov
stc
dec
in
inc
jl
jp
mov
adc
sbbb
and
je
mov
xchg
int3
testb
fstp
loop
insl
and
or
push
sub
ds
ljmp
into
push
and
pop
inc
add
pop
dec
stos
jns
rorb
xor
xchg
xchg
hlt
movsl
movsb
scas
mov
cmp
cld
xor
push
cmp
mov
leave
inc
insl
subl
and
mov
fildl
mov
fs
jno
mov
xchg
adc
sub
aaa
punpcklbw
mov
xchg
aas
pop
mov
push
jle
popa
xchg
lret
pop
xor
jns
push
or
call
andb
je
push
xor
jmp
dec
test
into
bnd
ret
xchg
sti
arpl
mov
leave
xchg
call
call
fisttpll
mov
dec
scas
pop
dec
stc
mov
or
pop
mov
cltd
jns
sub
pop
xchg
inc
mov
or
jae
ljmp
add
xchg
mov
xor
add
lods
mov
cmpb
test
mov
imul
das
lods
sub
sub
mov
push
mov
pop
push
sbbl
xlat
rcr
fsts
push
mov
sbb
push
or
je
fcmovnu
jl
fsub
test
mov
nop
jne
gs
pushf
clc
xchg
jo
mov
dec
mov
sahf
in
addl
movsb
xchg
sbb
mov
cltd
clc
and
mov
xchg
shl
popa
int3
cli
gs
xchg
dec
pop
mov
ljmp
jae
sbb
sub
or
mov
ret
push
lds
push
aas
adc
pushf
or
fdivp
push
outsl
fisttpll
push
adc
xchg
pop
in
inc
jle
out
pop
and
test
mov
and
lret
jbe
xchg
fidivrs
pusha
insb
enter
insl
in
inc
lahf
inc
fwait
data16
ss
push
scas
mov
inc
shrl
clc
cltd
jnp
dec
imul
push
mov
add
jbe
push
push
pop
movsl
or
mov
out
enter
nop
push
sub
or
mov
arpl
mov
sbb
sub
mov
xor
xchg
xchg
xchg
daa
lea
cmp
pop
out
pop
jns
or
inc
int3
es
dec
arpl
mov
seto
inc
xor
mov
subb
mov
mov
jnp
mov
repnz
leave
mov
aad
imul
xor
scas
subl
mov
push
shl
pop
js
xlat
dec
insl
inc
daa
mov
mov
inc
int3
and
inc
mov
xor
dec
dec
sbb
and
pop
jns
xor
mov
test
je
sub
in
fldt
cmp
pop
out
mov
xchg
in
into
shl
mov
stos
cmp
fildll
outsl
sub
mov
in
cmp
pop
mov
lcall
add
stos
push
inc
std
add
shrb
mov
dec
mov
lea
cmpsl
out
mov
insl
and
pop
sahf
sbb
fsubs
ficompl
out
mov
out
mov
xchg
popa
mov
xchg
sbbb
cmp
push
or
stos
cmpsl
rorl
mov
push
test
hlt
xchg
testb
pop
ret
gs
divb
pop
ljmp
adc
sub
adc
inc
pop
xor
jae
xchg
or
stc
data16
rcr
arpl
mov
and
push
xor
xchg
mov
pop
sub
out
mov
sbb
and
mov
dec
mov
xor
pop
pop
xchg
call
loop
push
and
jno
add
add
sub
and
loop
lahf
or
xorl
lret
xor
nop
xor
in
jg
data16
mov
adc
mov
out
fwait
mov
cs
sbb
inc
icebp
and
fisubs
fwait
popa
test
aam
cmpsb
cmpsb
add
ss
push
lods
iret
ss
stos
cmp
mov
push
ret
mov
andb
ljmp
mov
add
adc
sub
xchg
scas
jg
xor
dec
mov
out
sub
sub
fsubr
mov
std
shl
lea
dec
sub
in
sub
lods
ror
rcr
jmp
fwait
or
data16
jbe
out
push
leave
dec
mov
fldl
mov
out
xor
js
push
les
test
pop
mov
daa
xchg
mov
popa
push
fimuls
aam
mov
cld
stos
jge
test
enter
xor
popf
push
add
jo
pop
shl
dec
mov
in
mov
mov
ja
rorl
dec
lds
mov
popf
decb
subl
dec
mov
lods
push
leave
inc
stos
mov
mov
fdivp
ret
into
in
adc
adc
dec
leave
imul
jl
cmp
mov
cmp
and
xor
cmpb
or
sbb
push
fsubs
adc
int3
outsb
cld
int
and
push
stc
inc
cs
ficoml
int
push
jge
jl
cwtl
nop
rcrb
icebp
sbb
dec
xchg
cmp
mov
sbb
adc
jmp
pop
add
enter
adc
and
cmp
or
mov
add
imul
fs
in
fcomi
mov
mov
in
ja
or
bound
mov
mov
cli
fwait
pop
jno
shll
xor
lret
fsts
cmp
testl
add
sbb
rorl
inc
pop
sbb
jae
sbb
jne
outsb
mov
subl
je
shrb
insb
lret
pop
sub
les
jno
push
mov
in
insl
sbb
dec
push
fs
inc
mov
fiaddl
pop
addb
int3
mov
xchg
or
das
pop
xor
scas
cli
xchg
stos
andb
jle
xchg
das
and
jne
les
xchg
bound
inc
lea
dec
fbld
sub
gs
mov
divb
xor
sub
das
mov
xchg
mov
pop
xchg
jno
fildll
push
sub
ja
pop
ret
nop
mov
scas
flds
sub
fdivrp
lea
cmp
imul
jno
lods
ret
fs
mov
sbb
pop
push
outsl
iret
ljmp
in
fldcw
jecxz
mulb
cmp
xor
sub
test
mov
jle
cli
sub
push
add
sbb
mov
pop
xchg
lea
xor
or
mov
test
cmp
js
xor
cli
fimuls
inc
hlt
sbb
push
lahf
ds
and
mov
int3
and
out
icebp
test
xor
out
xchg
xor
inc
rcrb
push
mov
sub
imul
loop
imul
mov
push
add
loope
cmc
call
in
jecxz
clc
mov
cli
movsb
cmpsl
into
pop
mov
mov
mov
and
pop
test
and
shll
jo
scas
jp
movsb
and
inc
iret
ljmp
stc
jecxz
subl
add
mov
sub
outsb
fiaddl
outsl
sbb
mov
push
out
outsl
jp
pop
push
scas
jns
or
sub
ss
inc
dec
mov
or
xchg
cmp
inc
fstpt
jg
insl
mov
in
les
xor
or
shlb
pop
mov
jp
xor
test
xchg
daa
dec
insb
into
jae
imul
test
cmc
pop
pop
or
fimull
or
nop
and
xchg
clc
inc
or
shlb
add
shlb
or
inc
sub
test
adc
inc
pop
mov
test
jb
adc
cmpb
sub
jecxz
scas
jb
jl
ds
loop
mov
mov
fidivl
mov
lods
jl,pt
popa
jae
into
or
aaa
xchg
ljmp
nop
ret
lods
iret
popf
and
or
hlt
int
test
cmpsl
xor
cmpsb
enter
add
jns
mov
jb
cmp
or
mov
xchg
dec
mov
jns
cmp
std
orb
aas
cmp
lods
lret
scas
pushl
dec
add
mov
cld
in
imul
iret
push
ret
or
aas
insb
test
ds
push
cwtl
pop
mov
sar
aas
sahf
fs
test
sbb
das
or
ret
arpl
xlat
out
adc
xchg
and
es
lods
repnz
sbb
jle
and
fsts
xchg
out
dec
movsb
push
in
dec
push
pop
inc
testb
adc
ficoms
leave
mov
icebp
jmp
and
lock
push
inc
dec
or
mov
int
push
and
test
sbb
mov
pop
aam
adc
out
dec
idivb
std
out
daa
mov
inc
push
sub
das
pushf
push
lret
cmc
out
lds
stos
test
out
push
inc
fs
sub
loop
dec
jp
lret
arpl
pusha
stos
dec
cmpsb
scas
xchg
repnz
cmp
repz
stos
lds
xchg
into
lcall
dec
pusha
xchg
push
test
pop
movsl
cld
pop
sbb
and
inc
and
jp
out
dec
sub
dec
or
pop
aas
sbb
cmc
mov
xchg
adc
lret
ret
mov
ret
popa
adc
push
test
ds
xchg
push
dec
leave
out
mov
add
mov
mov
or
icebp
mov
std
push
into
cmpsb
push
or
xor
xor
movsb
xchg
and
es
fwait
pusha
imul
add
mov
test
xchg
lret
cmc
movsb
cmp
inc
jb
bound
jge
out
adc
movb
int
sbb
cmpsb
mov
adc
les
sbb
sbb
sub
int3
sti
xlat
stc
dec
dec
in
xor
popl
arpl
pop
sub
fwait
pusha
fnstsw
lret
add
xchg
and
jp
push
sbb
cmp
out
loope
push
fwait
repnz
mov
mov
push
inc
dec
pop
jecxz
cmpsl
push
out
pop
mov
sub
in
popa
mov
mov
push
daa
sbb
scas
cmp
dec
scas
dec
jg
rcl
xor
xchg
pop
lret
cli
push
xchg
pop
lret
mov
add
xor
scas
sbb
aaa
std
cmp
das
push
aad
into
inc
fisubrs
cmc
addr16
jo
mov
adc
mov
jmp
fs
cmc
pop
add
mov
scas
rolb
adc
xchg
add
cmp
mov
int
mov
mov
push
clc
stos
pop
iret
adc
lock
aam
in
or
or
mov
mov
out
popf
arpl
mov
std
fcompl
aad
xchg
mov
movsb
jecxz
and
lret
mov
loopne
mov
sub
adc
and
mov
rcl
sub
and
adc
xor
jge
dec
sbb
pop
mov
das
inc
out
push
shlb
movsl
push
jg
orl
insl
ret
cmp
or
ljmp
add
inc
insl
jle
mov
out
push
cltd
nop
mov
mov
ror
xchg
add
adc
or
pusha
rorl
rcrl
inc
or
push
xor
fisubl
push
xchg
inc
test
xor
cwtl
mov
shrb
incb
jmp
jecxz
notl
sub
mov
push
sub
enter
cltd
jns
enter
cmpsl
push
and
cwtl
inc
lret
dec
jne
xchg
push
pop
sub
popl
pop
pop
imul
mov
jbe
cmc
xchg
mov
inc
jns
scas
pop
les
xchg
push
sub
jbe
pop
jg
loopne
nop
int
les
loope
and
sbb
mov
jb
inc
test
lock
sub
loop
js
mov
push
push
adc
test
xlat
push
outsl
scas
testb
adc
xchg
test
and
push
aad
jmp
outsl
and
pop
push
and
mov
or
mov
pop
lds
cs
cmp
test
shrb
xor
or
adc
push
lret
jnp
into
add
bound
out
jo
aam
lret
jns
pop
mov
xor
and
adc
out
loope
adc
orl
cs
out
rorb
out
in
test
mov
enter
addb
ror
inc
jl
inc
insb
push
cs
cmp
sarb
loopne
shl
ret
repz
pop
insl
mov
jp
imul
or
push
sti
push
dec
inc
popa
ljmp
rclb
pop
aaa
in
mov
adc
sbb
stos
mov
push
sbb
xchg
mov
int3
test
lds
mov
or
aas
mov
sbb
test
push
mov
mov
bound
lds
sub
cmp
outsl
sub
xchg
or
repz
jo
xchg
dec
popf
adc
sbb
mov
jb
fwait
pusha
mov
pop
cmp
pop
or
shll
mov
rcrb
aas
push
dec
sbb
xchg
in
lods
test
lds
xchg
dec
adc
push
push
sti
mov
inc
dec
xchg
out
and
insl
icebp
cmp
mov
inc
cmp
inc
and
xchg
pop
outsl
stos
out
and
ds
testb
inc
mov
ret
mov
xchg
aad
test
or
mov
mov
inc
mov
xchg
rcrl
test
lcall
fmull
shl
mov
jmp
loopne
add
pmullw
sub
jmp
or
cmpl
push
dec
aaa
xor
je
dec
ljmp
pop
add
push
icebp
mov
mov
push
or
mov
out
mov
mov
mov
jbe
pop
mov
rcrb
jl
test
inc
adc
imul
stos
roll
loope
sub
cltd
lds
jecxz
lock
subl
mov
in
pop
cmp
mov
add
pop
mov
xchg
orl
loope
insb
or
and
scas
and
js
popf
aaa
dec
add
sub
movsl
fildll
inc
add
das
or
pop
jmp
cmp
popa
xchg
mov
pop
dec
pop
pop
rcrb
mov
and
push
bound
imul
dec
inc
fs
gs
xchg
ret
dec
inc
clc
pusha
lock
loop
pop
xlat
cltd
jge
fs
pop
and
ljmp
shlw
xor
dec
cs
int3
xchg
xchg
test
mov
ficoml
and
mov
data16
jle
popa
ja
movsl
daa
adc
bound
sbb
xlat
inc
push
out
repz
outsb
mov
enter
xor
orl
outsb
cmpsl
aad
into
jle
pop
mov
in
inc
dec
or
xor
jg
daa
lahf
cltd
push
dec
movsb
and
cltd
movsb
adc
mov
pop
popa
fcoml
addr16
add
inc
push
loop
pop
ret
enter
and
dec
js
ret
or
mov
popa
fdivrp
les
mov
jecxz
aaa
push
add
lods
cmp
jge,pn
push
shl
std
jle
push
push
in
aas
jne
mov
dec
mov
test
cmp
mov
add
das
adc
cld
push
ja
jg
adcb
push
adc
cmp
ds
shll
inc
mov
sbb
inc
jmp
pop
pop
icebp
fmuls
nop
and
mov
addb
subb
lods
rcrl
push
push
sarl
fistps
or
mov
dec
add
ror
pop
pop
jle
push
stos
imul
out
cmp
loop
jb
jnp
jmp
sbb
cli
mov
push
js
sbb
rorl
and
scas
mov
mov
lds
sarb
sub
push
push
or
push
add
inc
inc
clc
outsl
jg
jp
dec
add
mov
aam
jno
out
enter
xor
inc
and
js
lds
dec
pushl
mov
mov
push
aad
adc
xchg
sti
jnp
mov
dec
push
push
cltd
dec
and
icebp
mov
rorl
gs
pop
nop
fucom
xchg
les
inc
jmp
rcrl
fucom
and
inc
pop
and
aad
mov
xchg
push
ja
mov
ret
cmp
pop
mov
outsl
push
and
mov
dec
js
aam
lods
inc
mov
sarl
inc
scas
js
movsb
push
insl
test
lret
mov
fcmovne
inc
sub
sbb
bound
xchg
das
xlat
and
ja
or
test
lcall
or
mov
cli
xchg
jnp
in
shrb
xchg
mov
add
add
jno
mov
dec
cs
and
cli
or
test
jbe
mov
shll
dec
std
cmc
and
js
cmp
jmp
and
leave
imul
or
in
dec
inc
pop
xor
cmp
sbb
fists
inc
xor
sbb
shll
vrsqrt28sd
ret
int
mov
xchg
or
dec
mov
fildl
mov
cmp
push
jns
loop
test
and
and
shll
mov
roll
cmc
dec
cs
add
push
push
jae
mov
inc
sub
xor
mov
scas
lret
push
int
pop
jae
lea
lods
shlb
scas
push
push
push
mov
fildll
inc
adc
mov
cs
outsl
dec
inc
adc
push
popa
mov
jnp
mov
pop
jmp
cmp
or
lea
enter
or
aaa
daa
cmpsb
xlat
push
adc
fsubrs
and
dec
add
shlb
ret
mov
jnp
sbb
movq
adc
mov
sbb
add
lret
pop
push
mov
mov
sub
andl
sbb
mov
mov
ja
ds
jl
bound
lcall
cmp
out
lock
dec
shlb
shlb
xchg
aad
ja
imul
pop
daa
addl
mov
ljmp
call
xchg
jno
cmp
ja
mov
aam
and
cmp
clc
jbe
hlt
mov
in
dec
jecxz
dec
movl
loop
lock
or
stos
mov
adc
mov
dec
iret
rcrl
and
imul
add
popf
cli
xchg
int
in
push
push
out
pop
or
sbb
xchg
dec
test
repnz
jp
cmp
push
es
in
pop
out
aas
insb
dec
jge
add
das
scas
sub
mov
mov
repnz
scas
pop
arpl
mov
jae
in
pop
xchg
jbe
xor
xchg
mov
and
nop
sbb
imul
jb
sub
mov
movsb
into
push
and
pop
adc
in
jno
inc
push
hlt
ret
cwtl
push
xor
int
inc
in
rcll
pop
test
cmpb
inc
jecxz
loopne
les
mov
imul
add
lahf
mov
rcl
jle
loop
imul
stos
cld
jns
je
cld
sub
fidivrs
inc
in
enter
lret
jl
jno
shrb
jg
imul
lret
add
push
fimuls
and
in
pop
daa
int
repnz
sub
jg
bound
mov
pop
jne
lret
add
out
pop
outsb
and
xchg
push
pop
sub
fwait
lret
shrb
push
add
adc
pop
arpl
lret
xor
adc
pop
in
popa
lret
xor
xor
leave
leave
cmp
push
and
aaa
scas
cmpsb
adc
mov
add
movsb
gs
sub
rolb
mov
mov
mov
adc
out
adcl
test
fcoms
sbb
test
loopne
sbb
repnz
orl
in
inc
insb
orb
xor
mov
inc
and
fcmove
addr16
and
inc
xor
fdivs
in
fadd
inc
sbb
push
inc
repnz
mov
xchg
call
sub
mov
stc
xlat
pop
test
cltd
pop
xor
add
or
sub
ret
mov
enter
cmc
sarb
push
in
push
imul
fistpl
jne
divb
or
adc
inc
xchg
add
fs
subl
hlt
ret
ja
mov
scas
push
or
jl
add
jecxz
dec
pop
xchg
out
push
or
xlat
add
sub
pop
cmc
cmc
xor
cwtl
jmp
push
bound
pop
dec
lret
mov
in
popa
jne
xor
mov
dec
jb
cs
mov
aas
std
or
adc
sub
lods
and
mov
das
mov
adcl
push
adc
gs
or
call
enter
rcr
and
pusha
in
out
ljmp
icebp
int
rcrb
xor
mov
xlat
add
std
daa
dec
hlt
push
and
push
stos
push
sbb
subl
rcr
in
daa
icebp
stc
ficomps
mov
inc
and
xchg
xchg
or
adc
xor
dec
and
rorl
les
mov
push
mov
jl
cli
or
or
lock
mov
iret
adc
mov
and
adc
out
int
xchg
and
adc
pop
fbstp
test
out
sbb
add
mov
stos
xor
cmp
mov
xchg
lock
dec
dec
popf
dec
mov
out
iret
bound
cmp
addl
inc
inc
add
iret
pop
xchg
sub
or
loop
shll
stos
std
ds
aaa
syscall
adc
das
jne
sbb
dec
adc
inc
push
adc
sbb
or
mov
jge
pop
mov
call
das
imul
xchg
sub
call
hlt
dec
sti
add
ret
and
inc
xor
mov
mov
sub
push
lds
cltd
xchg
mov
outsl
js
jno
xor
or
inc
sub
xchg
loopne
push
notl
mov
pushl
xchg
sbb
add
inc
and
pextrw
test
pop
icebp
cwtl
cmp
push
mov
ljmp
push
mov
push
dec
xchg
xchg
push
scas
adc
pop
dec
out
mov
cmpl
leave
add
push
sti
imul
stos
add
mov
scas
dec
xor
testb
cmc
fldenv
repz
pop
pop
je
orb
sub
jmp
loopne
mov
gs
sub
add
pop
mov
icebp
fwait
sub
gs
add
and
rcr
jge
sbb
mov
vcvtsd2si
fdivl
scas
sbb
mov
in
call
pushfw
pusha
mov
aaa
subb
test
sbb
jnp
and
push
in
cmpb
in
mov
mov
and
out
int3
sub
adc
imulb
mov
push
adc
dec
sbb
cmp
xchg
lea
aas
mov
in
mov
icebp
pop
popa
pop
mulb
jns
or
mov
add
loop
pusha
dec
mov
enter
stos
cmp
cmp
add
jno
push
and
adc
in
mov
fildll
enter
bound
xor
fcmovnbe
mov
jp
cli
ds
into
je
ficoml
inc
push
pusha
loope
push
lret
fdivl
out
jmp
ror
pop
gs
fidivs
addr16
add
lret
scas
rorb
mov
jle
xchg
cmpsb
icebp
lods
or
mov
sub
mov
ret
cltd
lods
push
dec
ret
in
push
aam
xlat
push
outsb
mov
insb
daa
pushf
mov
push
addr16
ja
testb
xchg
cli
lock
pop
jp
icebp
js
jnp
pop
dec
or
lock
into
das
sbb
adc
xor
sti
loope
jl
dec
cld
shlb
sbb
and
int
jns
sbb
and
pop
loope
dec
insb
xlat
pop
xchg
call
push
out
jecxz
and
sbb
or
jmp
inc
mov
ret
mov
out
daa
mov
jo
fsubl
xor
shll
or
jge
int3
lgs
adc
out
jge
push
cmp
add
out
mov
mov
out
cs
daa
rorl
pop
pop
jp
mov
and
mov
and
out
test
adc
push
orl
mov
xor
xor
cmpsb
jp
sbb
fs
jmp
jne
cmpsb
mov
xchg
fimuls
pushf
mov
mov
imul
daa
push
stos
js
cmp
xor
filds
rorb
icebp
imul
xchg
scas
in
mov
cmp
jmp
sub
sbb
cltd
fisttps
jo
xor
jno
or
jnp
adc
shrl
adc
rolb
push
es
cmp
dec
dec
cwtl
clc
dec
dec
fcompl
pop
sub
pop
cs
lods
stc
push
outsl
xor
dec
push
sub
fsubrl
lds
inc
or
cmp
jl
jp
dec
inc
hlt
xlat
pop
fwait
test
in
in
dec
sub
sub
cmpsl
sub
jno
inc
fidivl
sbb
push
das
cmp
add
pop
in
and
out
pop
sub
out
cmp
xor
jne
daa
mov
in
test
jnp
inc
daa
mov
and
push
sti
jecxz
inc
adc
inc
enter
mov
sub
pop
pop
jb
mov
aaa
inc
cli
adc
pop
dec
rorb
push
inc
xchg
mov
les
stos
sbb
loope
test
adc
adc
cwtl
arpl
in
mov
dec
enter
addr16
mov
jg
movsl
adc
fnstcw
pushf
cs
pop
mov
cmpsb
in
mov
jmp
push
out
sub
fst
call
pop
sub
imul
movsl
clc
pop
arpl
addr16
hlt
jnp
sbbb
and
dec
cmp
fs
lret
sti
jb
ds
add
inc
or
push
jnp
xchg
pop
add
mov
mov
adc
mov
test
push
iret
popa
push
mov
cmp
lahf
push
imul
add
mulb
xchg
sub
cmpsb
cmpsl
in
pop
xor
xchg
and
mov
lahf
cwtl
iret
xlat
adc
cs
dec
into
sbb
adc
xor
pop
dec
js
jl
ja
mov
fidivrs
cltd
fidivrs
mov
jo
lods
jnp
addr16
jp
loope
insl
jae
ret
and
addr16
loop
mov
iret
stc
dec
sbb
sbb
scas
adc
adc
xor
bound
push
add
mov
xchg
popa
bound
and
es
jns
rolb
lahf
call
dec
pop
dec
or
sbb
jl
adc
cmp
scas
in
scas
xchg
divl
lds
xor
mov
jmp
pop
int3
ja
dec
leave
ret
sbb
sbb
jl
push
add
xchg
or
add
rorl
mov
repnz
xchg
jle
sub
jns
mov
jae
hlt
dec
xchg
test
pop
push
adc
addr16
mov
cmpxchg8b
adc
pop
sbb
arpl
test
cs
aad
push
fcompl
es
loop
loopne
or
or
sti
les
cwtl
mov
jae
xor
lret
inc
adc
mov
inc
js
sbb
sbb
testl
inc
mov
and
insl
mov
jl
cs
pop
push
push
push
insb
out
sub
cmp
mov
pop
mov
adc
inc
les
lods
mov
arpl
xor
jecxz
stc
cmc
pop
scas
jmp
shr
or
xor
test
fiadds
rcrl
cmpsb
test
pop
cmp
or
es
inc
popa
stos
div
test
push
push
test
inc
mov
insl
sbb
rorb
mov
sbb
insl
jg
mov
push
inc
sub
mov
push
mov
loopne
xor
lock
and
xchg
pop
pop
fcoml
cmp
sbb
xchg
out
jns
mov
lock
loopne
lods
xor
int3
lock
sub
jp
stos
xchg
dec
out
jbe
or
mov
xchg
imul
out
inc
lret
xor
gs
loop
pop
leave
loop
sbb
in
cli
cmc
fdiv
sti
pop
push
addr16
mov
cltd
xchg
andb
mov
enter
add
cltd
mov
xchg
or
jmp
add
dec
rcll
jnp
jp
pop
xchg
fldenv
fcmovbe
jmp
sub
orb
or
mov
adc
mov
sub
or
cmp
cs
mov
aam
jne
bnd
push
mov
arpl
xlat
push
lods
or
jb
shll
mov
and
out
fidivrl
test
roll
xchg
mov
pop
jns
test
std
lds
inc
lret
mov
add
xor
in
jne
sub
jbe
mov
inc
mov
mov
xchg
push
jle
add
jge
add
rorb
int3
jge
pushf
mov
sub
pop
xchg
pop
jbe
sbb
adc
mov
xor
inc
adc
divl
sbb
xchg
fists
filds
mov
add
std
dec
jge
mov
mov
imul
movsb
ffree
push
fs
and
daa
rorb
and
in
xchg
or
hlt
sbb
aaa
insl
fmull
inc
in
rclb
cmp
push
push
popa
aad
test
xchg
jno
pop
mov
lock
popf
add
sub
pop
sub
mov
mov
adc
xor
mov
fwait
sub
sub
inc
adc
pop
mov
icebp
mov
adcl
aaa
subb
mov
out
andl
es
gs
xchg
cmp
call
jb
dec
in
push
ss
iret
std
jmp
mov
sub
xor
mov
loop
inc
sub
imul
pop
push
loope
call
loope
pop
inc
adc
cwtl
pop
mov
lods
xchg
idivb
push
cmpsl
leave
sbb
mov
cli
add
mov
in
mov
jns
inc
aas
arpl
cmp
xchg
imul
es
fistpl
lds
loop
sbb
mov
lret
ss
mov
outsb
dec
aad
sarl
xor
cmp
cmp
jecxz
mov
roll
xor
adc
mov
imul
push
xorl
xor
sbb
lret
gs
pop
push
es
fisubs
out
push
sub
dec
lret
or
xlat
adc
cmpsb
jne
inc
mov
mov
loop
lahf
sub
pop
cmp
xchg
cld
inc
and
dec
rcr
adc
daa
cmp
incl
add
js
shll
fdivr
es
add
inc
arpl
arpl
adc
fcmovbe
fdivrs
and
push
fistpl
ret
sub
loopne
mov
push
push
js
mov
or
fimuls
fiadds
inc
ret
adc
outsb
stc
and
pop
test
negl
add
mov
add
jae
lret
add
fs
add
les
jb
cmp
pop
xor
fisttpll
cli
ffreep
mov
push
sub
fwait
mov
add
xchg
xorl
push
cmp
mov
dec
add
push
cwtl
pop
push
push
js
mov
mov
dec
jg
dec
fwait
mov
in
notb
sbbb
jb
leave
je
movsl
out
add
jg
outsl
lock
mov
movsl
cmpl
cmp
sub
imull
sahf
dec
push
leave
arpl
xchg
mov
adc
sub
loop
ret
pushw
icebp
fiaddl
lock
add
xchg
fwait
out
add
sub
add
sub
data16
xchg
mov
std
pop
sbb
pop
out
adc
mov
insl
pushf
mov
cwtl
icebp
orb
xchg
adcb
movsb
outsb
push
mov
ds
arpl
pop
push
and
lret
sahf
loope
inc
or
mov
cmp
dec
xor
or
cmc
int
lcall
stc
repz
or
sub
adc
jge
stc
cltd
fs
mov
inc
psrad
pushf
xor
cmp
inc
out
fs
mov
lcall
adc
stos
nop
mov
xchg
sbb
mov
pop
fnstsw
pop
loope
mov
or
movsl
push
xchg
sbb
cwtl
add
mov
inc
xchg
cli
push
je
sbb
arpl
inc
or
xchg
fwait
jp
mov
in
xor
jnp
xor
cmp
fcmove
mov
pop
dec
xchg
scas
inc
cmc
lcall
aaa
repz
das
sbb
popa
jmp
mov
dec
jbe
jle
mov
fsubl
sbb
in
push
and
dec
aad
mov
je
rol
inc
pop
push
add
adc
out
repz
jns
fnsave
scas
cmpsl
sahf
out
mov
xlat
jns
jl
adc
push
push
add
inc
inc
lcall
mulb
aaa
jge
pusha
out
int
sbb
popa
jae
xchg
cli
enter
xchg
mov
dec
mov
js
push
xor
mov
data16
push
test
pusha
xchg
aaa
out
sti
mov
pop
rdpmc
push
inc
push
cmp
cs
outsb
push
cltd
scas
arpl
mov
jge
push
add
repnz
test
mov
out
nop
imul
andl
mov
push
shrl
xchg
cmp
or
adc
push
jbe
jp
mov
sub
mov
imul
insl
movsb
cmp
insl
pop
cmc
mov
cmp
ds
insb
xchg
out
mov
test
and
or
pop
enter
jae
adc
pusha
in
js
insb
jge
jns
fiaddl
mov
add
inc
fsubl
jbe
cld
imul
ja
out
mov
int3
out
dec
push
xor
dec
insb
in
mov
loope
cld
popf
and
into
out
dec
call
dec
xor
stc
cmp
loop
push
mov
mov
jmp
cltd
push
adc
or
ja
in
scas
test
add
test
cld
inc
push
push
add
out
int
outsl
push
nop
and
jnp
cmc
xchg
cmpsb
aaa
ret
and
xchg
jae
push
push
jne
sub
and
dec
in
lcall
add
imul
lods
inc
jb
jne
pop
and
imul
jge
xadd
lret
ret
mov
pusha
clc
jo
es
out
mull
adc
cs
jae
mov
cmpsl
sub
loope
scas
cwtl
push
sbb
in
xor
sbb
xchg
lock
mov
clc
push
cmp
aad
lods
stos
mov
push
ret
loopne
pand
lds
aas
sub
dec
xchg
cmpsb
mov
fimuls
jle
sub
adc
add
inc
rorl
mov
dec
repz
jle
stc
mov
adc
test
xchg
sbb
xor
or
inc
sub
hlt
jae
push
cli
mov
enter
sbb
mov
xor
test
hlt
pop
mov
push
jb
pop
out
out
xor
mov
clc
cmc
aam
lahf
popa
jnp
mov
int
in
mov
pop
jmp
jg
test
xor
jg
xor
rol
out
addr16
mov
insl
sub
add
push
int3
jne
and
mov
cwtl
js
cmpsl
inc
test
ret
pop
xor
sub
call
out
jns
insb
out
cmp
dec
and
int3
sbb
nop
xchg
jbe
icebp
lahf
sbb
ret
push
cs
clc
mov
adcl
lret
or
or
adcl
lcall
cwtl
pop
mov
dec
imul
xlat
jnp
dec
add
xchg
inc
sbb
or
xchg
mov
xchg
or
test
inc
das
inc
inc
push
sbb
lods
pop
jnp
adc
pusha
fwait
shl
adc
out
ret
aaa
rorl
lock
pop
add
cmpsb
fisubl
aam
cli
xchg
inc
lock
mov
ljmp
dec
dec
pop
and
aaa
xchg
and
ss
test
fistps
fs
xchg
mov
jle
xchg
mov
xchg
lahf
andl
loop
daa
and
mov
mov
hlt
dec
insb
aad
jecxz
mov
mov
jns
gs
sub
rcrb
nop
push
inc
mov
mov
imul
aas
mov
stc
push
sub
mov
jmp
pop
lahf
sub
pop
scas
fdivrs
pop
scas
movsl
in
jb
repz
pop
push
mov
enter
add
jae
xchg
std
mov
push
ret
in
and
push
insb
sub
and
fcomi
xchg
shlb
cmp
sbbl
subb
leave
mov
xchg
loopne
stos
movsb
in
in
fstpt
fwait
stos
xor
jge
repz
sarl
loope
btc
cmpsb
pop
pop
and
ja
std
stc
movb
lds
in
push
xor
xchg
pop
push
xchg
hlt
adc
int
in
addr16
cmp
cld
xor
int3
call
sub
in
int3
xor
aaa
fimuls
sbb
jns
cwtl
outsl
cmp
addr16
mov
add
sbb
jmp
clc
gs
mov
jmp
mov
add
int3
xchg
loopne
cmp
negb
inc
test
lods
insl
pop
xor
xchg
std
fisubs
fwait
xor
movsl
push
call
stos
fcomps
lds
popf
add
enter
nop
idivb
fistl
pop
jo
sahf
pop
popf
imul
pop
loopne
adc
jno
sub
in
mov
xor
hlt
adc
fildll
cli
out
pop
pop
jl
mov
int3
push
lea
scas
inc
push
clc
cli
push
lea
xchg
dec
push
cmp
sbb
dec
icebp
pop
cmpsb
mov
repz
add
pop
mov
push
lods
xor
mov
cmp
cmpsb
pop
jmp
in
adc
les
dec
inc
iret
add
mov
fs
jg
add
xor
push
lret
fisubrl
push
inc
js
xor
rcrb
fs
and
push
loopne
clc
push
or
stos
mov
mov
in
mov
lahf
incb
fisttpll
add
adc
insl
hlt
jne
imul
push
data16
mov
sub
mov
xchg
bswap
mov
jg
cmp
xchg
into
cmp
pop
popf
sub
in
add
scas
add
or
cwtl
and
scas
in
fisttps
mov
xor
and
ljmp
mov
test
cs
or
adc
lret
popf
insl
cmp
sbb
loop
aaa
pushf
and
fs
push
xadd
test
push
sbb
mov
mov
imul
or
stos
cmp
mov
ret
sbb
stos
clc
pop
test
popa
mov
movsb
loopne
xchg
repnz
scas
aad
xor
ucomiss
mov
push
ret
inc
clc
jl
fisttpll
loopne
and
pop
jg
lds
cmpsb
fdivrp
inc
sub
adc
lea
dec
mov
pop
dec
imul
cmp
xchg
popa
inc
dec
mov
dec
adc
or
mov
rol
jo
outsl
pop
ficoms
rorb
xor
orl
sbb
cmp
in
jb
inc
loop
out
mov
stc
pop
pop
push
subl
mov
ret
fistpll
cltd
imul
sub
movsb
xchg
popa
dec
out
mov
jo
push
popa
cmpsb
push
in
sub
push
scas
sbb
fwait
and
scas
lock
push
loopne
pusha
sahf
inc
mulb
xor
cltd
cmpsb
mov
jae
arpl
out
dec
mov
xchg
ret
shl
divl
inc
or
iret
sbb
pop
xchg
fidivl
mov
add
aaa
fldenv
sub
ljmp
cli
je
jae
or
jg
icebp
mov
push
xchg
inc
imul
push
xchg
ja
cmc
pushf
sbb
clc
mov
pushf
repnz
mov
and
icebp
or
imul
pop
sub
aaa
adc
addl
data16
test
mov
ret
sbb
mov
xor
scas
in
inc
repnz
pop
imul
xchg
imul
pop
loopne
fistl
stos
jns
sub
aad
push
mov
sbb
xchg
and
mov
push
push
lret
jle
cmp
pop
cmp
inc
stos
dec
xor
jnp
push
sbb
data16
sbb
cmp
lret
mov
jo
pop
pop
call
push
push
xchg
cli
xchg
popa
stos
xor
popf
mov
jg
push
mov
icebp
leave
into
mov
cmp
int
pop
pop
push
mov
lds
psubd
les
pop
xor
mov
jae
fisubs
pop
ret
mov
enter
pop
mov
test
mov
mov
xlat
adc
loopne
jge
mov
cld
jo
inc
lcall
aaa
cs
js
or
add
decb
mov
push
add
or
ljmp
sbb
sbb
daa
jp
in
add
lock
mov
mov
mov
mov
mov
mov
sarb
mov
mov
dec
data16
add
divl
add
loop
pop
cld
mov
fisttpl
rcl
scas
push
stos
ffreep
dec
shlb
adc
jns
jne
sbb
dec
push
lds
divb
xor
pop
sbb
sbb
push
sbb
movsl
insb
pop
rcl
mov
test
pop
pop
push
repnz
xorb
jg
or
icebp
fs
jecxz
mov
inc
sub
inc
push
lods
and
adc
shl
lock
mov
mov
lret
outsl
imul
fcoml
inc
xor
jae
mov
bound
mov
fs
or
cli
int
jns
cmp
cltd
hlt
pop
xchg
mov
clc
xchg
cmp
mov
sub
aaa
sub
fld
jns
cmp
and
lcall
outsl
sub
adc
add
mov
fldenv
iret
ror
push
sub
jl
test
and
js
add
mov
dec
lcall
xorl
push
std
test
mov
aaa
mov
bound
adc
iret
faddp
out
ret
ss
mov
add
adc
xor
mov
out
or
add
mov
cmp
das
in
fwait
jl
frstor
cwtl
mov
je
in
leave
pop
adc
fnstenv
fmull
and
mov
filds
flds
mov
jnp
inc
push
mov
scas
inc
mov
out
xchg
popf
or
in
add
lret
and
push
dec
mov
scas
popa
scas
dec
mov
in
add
lret
mov
pop
dec
mov
jg
cmpsl
mov
push
jb
push
nop
ss
jb
lock
cli
fbstp
cld
xchg
inc
inc
ljmp
pop
das
fdivs
test
test
movsb
daa
lcall
rorb
mov
push
sub
sbb
push
push
insb
in
sub
push
cld
mov
fldcw
pop
imul
push
sub
mov
scas
bnd
pop
add
leave
inc
les
push
or
je
xchg
test
addb
test
jecxz
push
nop
adc
in
jl
jae
xchg
loopne
adc
jns
cmp
stos
sbb
fmull
ffreep
popa
mov
push
xchg
dec
pop
data16
lock
or
pop
and
push
mov
adc
cltd
xchg
jl
subl
jns
mov
cli
add
loop
inc
mov
mov
sbb
out
jp
out
in
out
push
dec
mov
insl
int3
dec
push
xchg
cwtl
mov
cltd
repz
popa
scas
int3
and
xor
out
stos
sbb
xchg
push
lcall
test
pop
jmp
cld
hlt
fwait
cmpsl
adc
mov
jae
jg
pusha
dec
divl
movsl
add
sbb
pop
sub
lock
fisubrl
data16
hlt
call
inc
loopne
push
jne
pusha
stc
mov
add
mov
dec
jbe
cmp
jge
pop
fsts
es
orb
hlt
test
jg
jle
xor
enter
sbb
push
xchg
loopne
or
mov
pop
push
test
add
sbb
cmp
lret
dec
xor
test
xorl
dec
add
hlt
sub
cmp
adc
into
mov
sbb
jno
dec
mov
bound
pop
push
mov
int3
into
out
hlt
in
xchg
ljmp
jne
dec
jnp
lods
fwait
jl
sub
fiadds
xchg
xlat
imul
fildl
adc
and
test
sbb
test
inc
add
loope
mov
mov
xor
and
out
dec
push
push
mov
cmp
je
mov
jle
sti
shrb
xchg
inc
xor
call
mov
push
pusha
icebp
adc
xor
dec
pop
scas
or
inc
cmpsl
cwtl
jle
jno
test
pop
xchg
repnz
sti
pop
jl
xor
inc
adc
pop
dec
popa
xchg
xchg
jle
sbb
in
fwait
mov
inc
gs
mov
fistl
movsb
pushf
or
outsb
lock
push
inc
sarl
xchg
fstl
push
push
dec
jg
jge
and
pop
ljmp
imulb
mov
aad
push
xchg
movsb
xchg
std
js
fnstsw
jns
out
adcl
push
mov
add
dec
jge
sub
lahf
ja
dec
add
dec
and
mov
stc
in
push
addr16
fisttpl
xchg
cmc
ljmp
pop
lret
xlat
add
ljmp
mov
jbe
jmp
dec
mov
std
das
mov
push
jp
jb
mov
sahf
js
sub
repnz
sbb
lea
adcb
daa
lea
mov
aam
jno
aam
mov
jp
jbe
cs
push
jle
mov
vshufps
and
pop
dec
in
xor
out
inc
in
fcoml
mov
mov
add
data16
push
pushf
jb
es
pusha
push
rol
mov
loopne
mov
jb
dec
popa
cmp
in
sti
int3
push
push
das
add
inc
orw
fwait
sub
cld
jle
dec
leave
ret
mov
xor
sub
and
sub
xor
xor
jnp
js
jle
jmp
jp
int
rorl
mov
sub
jecxz
scas
mov
leave
mov
adc
and
mov
push
mov
add
xor
dec
mov
mov
dec
jp
in
add
std
jno
adc
or
adc
dec
into
cmp
jge
iret
icebp
repz
mov
jns
adc
xchg
lods
push
repnz
es
sarb
mov
mov
data16
rorl
data16
lea
repz
cmp
mov
sbb
sbbl
ja
outsl
cmp
sbb
adc
jne
add
push
add
pop
push
cmp
cmp
xchg
and
std
mov
repz
sbb
jo
movsb
mov
cmp
pop
cmpsl
mov
out
cmp
inc
popa
test
and
fsubrl
or
test
jae
pop
lds
xchg
jecxz
jecxz
movsl
popa
mov
imul
pop
adc
and
jne
mov
fldt
inc
sahf
mov
jmp
push
or
add
es
out
and
sbb
lret
dec
and
mov
ja
shrl
jne
mov
loopne
mov
fucomip
push
movsl
mov
leave
int3
movsb
jmp
aaa
imul
stos
stos
lcall
lock
cmp
xor
pusha
shlb
and
add
inc
icebp
jecxz,pn
push
add
sub
mov
xor
in
push
cmpsl
dec
cmpsl
mov
xchg
outsl
push
leave
or
sub
leave
div
into
inc
mov
aam
outsb
flds
fmuls
stc
into
sbb
or
das
jmp
imul
std
jecxz
and
cltd
cmc
add
inc
or
inc
fstpl
aad
pop
loope
add
rcll
fs
repz
out
sbb
mov
mov
cmp
mov
loope
mov
mov
sub
pop
leave
and
inc
xchg
loopne
aas
or
sub
ds
rol
cmp
cmp
jle
adc
pushf
fwait
lods
cmp
sbb
ja
mov
pop
jbe
fdivrl
lret
push
popa
add
mov
cs
shlb
inc
jle
jge
push
popa
call
pushf
pop
cmpsb
es
loopne
adc
mov
sbb
pop
sub
jl
jl
or
sbb
cmp
test
nop
mov
add
add
xchg
mov
mov
stos
lret
loopne
push
adc
loope
sub
pop
pusha
pop
mov
fstps
xchg
pop
loopne
aaa
and
add
mov
push
and
out
mov
xor
jge
mov
push
jo
sub
mov
arpl
cmp
dec
leave
sbbb
jl
fsubr
das
leave
jl
outsl
call
jmp
pusha
inc
rclb
mov
mov
jnp
mov
pop
xor
movd
lea
inc
pop
movsb
cmp
flds
popf
stos
lods
jo
mov
sbb
inc
dec
inc
jb
jne
jmp
cwtl
arpl
sbb
xchg
adc
bound
insb
mov
mov
mov
jns
push
inc
cld
sub
enter
fcoms
and
pop
mov
dec
jae
mov
jecxz
bound
movsb
dec
orb
cmp
xchg
outsb
dec
pushf
cmp
call
adc
ja
inc
shll
popf
sahf
jmp
pop
repnz
mov
fwait
xchg
sbbl
test
rolb
into
jle
mov
cvtdq2ps
dec
pop
dec
pop
mov
xor
push
sub
movsb
cwtl
and
sti
insl
out
mov
imul
cmpsb
adc
dec
rcll
les
dec
rcrl
loop
test
mov
cmp
push
xor
pop
ja
push
pop
push
xchg
inc
jo
sub
rcr
jne
outsb
jecxz
xchg
cli
subb
mov
stos
cmp
xor
xor
and
pop
stos
rcll
push
xor
sub
int
jae
or
lock
lods
fucomp
dec
pop
movsb
pusha
hlt
cmp
call
cmp
ret
and
in
push
dec
add
repz
lret
stos
jo
mov
cmp
imul
add
xor
daa
jae
add
scas
push
xchg
dec
mov
out
sbb
push
pop
and
into
push
mov
ret
mov
movsb
lods
fists
xlat
es
adc
gs
std
sar
outsb
stos
pop
imul
test
call
arpl
js
or
loopne
and
ss
and
mov
icebp
xchg
lods
in
mov
xchg
stc
ja
sub
or
jbe
out
cmp
out
sub
pop
mov
xchg
xor
imul
mov
cli
mov
sbb
aad
hlt
jno
hlt
xchg
inc
mov
sahf
or
in
add
cmp
pop
shrb
or
jg
clc
and
pop
jnp
aaa
addr16
imul
xchg
daa
lret
popl
push
jg,pn
ud1
lcallw
push
es
jecxz
jge
sub
dec
gs
add
push
push
ds
loopne
enter
sarb
pop
jb
sbb
ret
jns
mov
fsubrl
mov
mov
mov
sub
repnz
daa
push
mov
jle
mov
dec
fildll
imul
or
mov
les
cmp
cs
sub
popa
lcall
data16
jbe
xchg
daa
xorb
mov
mov
mov
lock
bound
pop
xchg
sub
mov
outsl
ljmp
mov
pop
sub
arpl
inc
jbe
sbb
icebp
adc
outsl
repz
sti
adc
js
sbb
arpl
xor
pop
cmpsb
dec
or
add
shlb
jl
inc
sbbl
movsl
pop
push
push
mov
dec
shrb
loope
arpl
xor
xchg
add
xchg
mov
xchg
cmp
mov
cmp
inc
xchg
add
sti
and
shl
cmp
fisttpll
push
out
xorb
jb
mov
push
scas
adc
out
push
xchg
faddp
or
hlt
sbb
test
push
frndint
push
in
movsb
sti
adc
mov
jp
xor
mov
movsl
repnz
cmp
pop
or
into
jo
jmp
mov
iret
movsl
rcr
pop
jo
adc
sub
inc
out
jns
inc
aad
jmp
mov
pop
inc
dec
jnp
lods
push
mov
ret
cmp
pop
jp
movsl
aas
imull
scas
inc
adcl
fistpll
fisubrs
rorb
repz
mov
xchg
dec
ss
int3
inc
mov
lods
aad
enter
ljmp
xor
adc
enter
icebp
cmc
hlt
xorb
jmp
repnz
test
jecxz,pt
popf
xchg
fnstenv
mov
inc
push
cmpsb
adc
sbb
xchg
dec
scas
les
repnz
mov
mov
pop
lcall
jnp
lahf
add
jecxz
ss
sub
xchg
lds
push
aad
icebp
jmp
push
adc
push
add
outsb
sahf
fisubl
pop
lcall
arpl
dec
popf
pop
std
jl
gs
enter
lock
xchg
ret
leave
jle
jecxz
and
pushf
and
loop
cmp
or
out
insl
mov
cmp
push
jno
mov
xchg
aam
push
pop
sti
push
jns
mov
sub
mov
jae
push
mov
ret
push
add
outsl
popf
jecxz
ds
arpl
clc
xor
inc
jo
jg
adc
push
sub
jbe
push
mov
mov
cmp
lcall
pop
loopne
add
stc
lods
outsl
gs
and
push
or
inc
ss
adc
sbb
jmp
es
arpl
ret
loop
and
imul
jle
inc
inc
int3
push
call
push
clc
out
mov
and
cmp
pop
int
test
adc
xchg
lret
xchg
mov
cmp
sbb
in
mov
push
mov
insl
int
hlt
jns
jbe
xchg
add
sbb
cmpsb
xor
mov
push
gs
pushf
aaa
cmpsb
mov
cmc
imul
jae
neg
ret
ficoml
sub
mov
cmpsb
push
pusha
mov
dec
cmp
std
push
cmp
jmp
ret
xor
movaps
lock
cmp
addl
fisttpl
out
mov
imul
dec
mov
xlat
sub
pop
push
mov
adc
jge
pop
aad
out
jecxz
dec
push
and
clc
jb
loop
jp
mov
sub
fwait
xchg
cmpsl
adc
int
sbb
cmpsl
jp
sub
xchg
xchg
je
popf
mov
cmp
pop
arpl
lahf
adc
out
mov
inc
push
cmpsl
je
inc
pop
and
stc
mov
or
pop
pop
and
mov
sub
or
inc
xchg
cmpsl
fwait
sbb
rcrb
sub
inc
push
sbb
push
gs
ljmp
mov
loop
cmp
xchg
jg
dec
sub
lds
or
adc
sub
push
cli
rorb
jp
ljmp
test
jns
test
mov
aad
xchg
xchg
dec
mov
ja,pn
adc
int3
and
fstpt
add
iret
pop
push
adc
outsl
je
inc
pop
int
mov
cmp
cmp
ja
inc
das
xor
lahf
dec
push
insl
mov
jno
sahf
cmc
sub
fstps
insl
inc
pop
fbstp
lods
rcll
lds
pop
into
enter
push
push
sbb
ret
lds
mov
movsl
dec
mov
and
rcrl
mov
addl
jo
pop
mov
fiadds
into
jnp
popa
dec
shlb
pop
cmpsl
inc
pushf
call
sbb
sub
nop
int3
add
jo
movsl
cmp
fwait
daa
push
xor
cmp
sbb
hlt
ret
imul
inc
ds
mov
xor
aas
ret
mov
xchg
push
xlat
stos
dec
fmull
xadd
xchg
mov
rcrl
and
or
jo
aam
pop
pushf
and
lret
inc
sbb
sub
pop
das
mov
jl
xchg
jne
mov
cmp
inc
rol
dec
shl
push
fists
in
sub
cmp
mov
dec
xchg
gs
and
sbb
or
push
das
xchg
xor
orl
pop
xchg
int3
sbb
mov
das
int3
mov
mov
inc
fmuls
push
pop
mov
xchg
cmp
jbe
cmp
inc
ss
outsl
cltd
int
jge
divl
mov
mov
je
dec
dec
rol
fimuls
lcall
lds
cli
popa
shlb
mov
mov
dec
pop
jl
cmc
in
jne
xchg
push
scas
das
push
mov
push
adc
push
call
dec
imul
int3
adc
mov
adc
inc
mov
in
or
out
ret
pop
sub
adc
imul
scas
mov
out
pushf
jno
mov
cld
adcb
mov
rcrl
stos
push
fdivl
or
mov
aad
or
cmp
push
pop
pop
test
dec
push
adc
lret
xor
add
mov
mov
inc
int
cmp
sbb
cmp
sti
ret
call
sbb
nop
popa
lahf
mov
cmp
sub
mov
clc
jp
dec
and
movsb
dec
add
sbb
scas
lahf
je
and
imul
xor
int3
repz
jmp
xor
push
aaa
xlat
movsb
push
sahf
pushf
add
stos
dec
or
or
arpl
daa
pop
mov
jge
int
push
pop
adc
outsb
in
pop
inc
xchg
lahf
sahf
negl
or
fmull
adc
jo
inc
dec
sbb
testb
into
cmp
sub
mov
mov
push
jae
das
cmp
pop
mov
test
outsl
mov
adc
xor
add
insl
lock
xchg
sahf
push
fsub
mov
les
push
xchg
mull
push
mov
ret
hlt
sub
mov
fwait
ret
gs
push
and
bound
lods
imul
fldenv
mov
sub
push
add
add
outsb
lock
test
notl
lea
and
xor
subb
jne
xor
xor
lea
pop
fisubrl
js
aas
arpl
insb
add
pop
sbb
cmp
mov
jnp
pushf
sti
cli
adc
dec
push
pop
dec
shrl
insl
add
xchg
sub
std
and
sub
add
std
and
pop
mov
mov
out
cs
insb
mov
mov
imul
aas
icebp
ljmp
jbe
dec
push
pop
jge
lods
add
fdivrs
lahf
fidivl
pop
xor
pop
push
push
adc
loopne
insb
data16
in
jb
cmp
scas
stos
cmp
adc
dec
pop
jl
push
mov
pop
or
inc
insb
aas
data16
push
imul
pushf
dec
js
cmc
jns
xchg
cmc
out
lock
push
orb
popa
and
sbb
xor
adc
ficoms
sub
lret
pop
pop
xlat
xlat
fwait
dec
addr16
das
inc
fisttpll
xchg
rorb
addr16
mov
adc
adc
mov
icebp
jb
test
test
popf
pop
inc
lea
sub
xor
pop
mov
xchg
and
flds
push
xlat
sub
xor
insl
jne
arpl
arpl
xchg
les
arpl
jbe
xlat
mov
roll
cmp
cmp
add
mov
insb
inc
push
mov
loope
inc
sarb
stos
test
aas
mov
stc
push
stos
pop
adc
stos
push
add
push
and
xchg
call
test
insl
xor
call
inc
mov
in
mov
flds
mov
sub
push
sub
sti
push
sub
xchg
inc
pop
adc
cltd
sbbl
push
lcall
xchg
or
fcoms
fsubs
test
xchg
dec
inc
aas
sub
loope
fs
mov
sub
cli
inc
jb
xchg
test
test
and
stos
fildll
movsl
dec
push
mov
pop
dec
push
inc
adc
pop
xchg
cltd
or
dec
lcall
and
inc
mov
js
or
scas
lods
inc
xlat
sbb
xor
sahf
ud2
repnz
pop
test
incb
jnp
xor
ficomps
add
mov
jmp
adc
push
sbb
or
push
fs
pusha
jo
cmp
cwtd
fdivr
or
xchg
mov
mov
ljmp
test
adc
dec
adc
ret
out
xor
mov
push
and
mov
aad
lret
popl
popa
jmp
or
xor
push
scas
fldl
or
xor
rcrb
xchg
add
movsb
cmp
mov
mov
or
sbb
test
ret
pop
inc
adcb
adc
movsl
andl
movb
xor
test
and
mov
pop
push
xlat
out
clc
out
or
in
cmp
xchg
sbb
sahf
dec
out
aaa
xlat
je
data16
and
pop
pop
mov
out
leave
and
das
xor
add
cmpsb
jge
sub
xor
stos
loop
mov
xor
repz
inc
nop
inc
aad
jno
pop
enter
mov
pop
mov
iret
repnz
pop
ljmp
test
dec
jb
lds
insl
test
test
mov
pop
stos
scas
mov
pusha
jbe
hlt
adc
in
test
mov
or
and
sarb
fsubr
adc
stos
or
insb
das
test
jle
movsb
jecxz
xchg
xchg
and
rcrl
or
dec
mov
push
sbb
faddl
and
mov
cltd
jmp
test
pop
sbb
sub
arpl
in
int
inc
cld
out
mov
sub
mov
adc
dec
js
ljmp
jae
sti
fmul
or
push
adc
mov
pop
add
out
repnz
cmp
pop
cs
dec
xchg
add
inc
mov
repnz
push
fmull
mov
roll
scas
inc
out
xor
push
or
addr16
shr
dec
pop
xor
add
pushf
jecxz,pt
data16
sub
ss
xor
sbb
fsubrp
pop
cltd
dec
jnp
and
insl
fbld
rcll
mov
jge
aaa
lds
or
sti
popa
fldcw
in
xchg
pop
inc
orl
cmp
and
test
push
mov
fistl
loop
lret
cld
mov
cmp
into
jne
andl
and
mov
loop
mov
sub
cmp
daa
negb
lcall
call
pop
dec
sbb
adc
mull
je
and
jg
fs
jle
pop
test
sbbb
pop
mov
cmpsl
lahf
add
idiv
or
lret
dec
leave
push
mull
insb
mov
or
mov
cmp
inc
lock
xor
into
inc
mov
int3
dec
test
sub
push
outsl
add
outsb
in
pop
and
xchg
push
imul
mov
jp
pop
jmp
iret
imul
mov
daa
mov
stos
pop
push
mov
mov
or
ljmp
and
jne
xor
or
pop
sahf
mov
lret
or
jmp
xchg
add
leave
ds
movsb
mov
jno
xor
inc
mov
mov
inc
pop
test
mov
in
movsb
ljmp
int3
out
xchg
dec
jecxz
stc
lds
mov
xchg
lret
cmp
mov
inc
xor
dec
pop
pusha
xchg
inc
adc
fnstcw
add
fistps
out
fdivrs
mov
lea
test
xchg
inc
outsl
shlb
out
outsl
popa
es
lods
mov
stos
dec
jmp
dec
mov
mov
or
or
xchg
sbb
idivl
xor
addr16
subl
add
rorl
test
insl
push
cmp
fstpt
in
arpl
jb
push
call
inc
jmp
cli
push
dec
iret
cmpl
adc
cmc
sar
rcr
push
mov
subb
cld
int3
pop
mov
pop
js
ret
aam
cmc
icebp
stc
dec
sbb
pop
or
in
sbb
pop
cs
shll
push
push
repnz
fwait
test
loope
rcrb
jge
test
dec
in
ds
pop
loop
dec
cmp
and
outsl
out
jmp
imul
push
aad
out
bound
push
test
test
jnp
outsb
fsubrl
push
fldt
sub
aas
loopne
lcall
outsb
mov
int
ljmp
jne
call
fcoms
imul
sub
or
cmp
push
lret
insb
clc
push
mov
dec
cmpsb
test
pop
ret
insb
push
inc
sbb
adc
fs
into
mov
inc
adc
adc
pop
jmp
push
mov
scas
and
sub
and
jmp
xor
idiv
fldl
xchg
das
dec
test
jge
nop
inc
sub
rol
push
inc
ret
mov
mov
test
cmp
fucomip
pop
movsl
mov
insl
movsb
addl
xchg
outsl
shrb
mov
cmp
xchg
xor
outsb
data16
jge
mov
aaa
test
fnstsw
sub
rcll
data16
lock
outsb
push
mov
inc
xorl
push
xor
dec
sarb
popf
dec
push
jmp
push
cmc
pop
pop
out
sbb
lahf
pop
das
adc
loope
dec
lea
xor
or
fsubrs
sarl
push
stos
lods
addr16
xchg
cmp
xor
pop
iret
lahf
xchg
pushf
std
out
cmp
add
addr16
mov
xchg
jge
inc
adc
scas
xchg
sub
and
je
pop
and
sub
xor
jnp
repnz
push
stos
push
in
loop
or
push
inc
lahf
add
rcl
aad
pop
and
or
mov
in
adc
lcall
rolb
fstl
sub
mov
stos
mov
lcall
push
hlt
pop
cwtl
and
pop
sub
fisttpll
dec
xlat
push
jp
mov
cmp
pop
dec
lret
shl
lcall
adc
outsb
mov
jle
push
pop
sbb
call
mov
cmp
mov
sub
cmp
or
xchg
das
flds
pop
loop
mov
xor
sarb
and
jno
pop
fsubr
cmp
push
sbb
xor
mov
mov
mov
mov
cmpsl
sbb
push
sub
out
jmp
and
aas
push
cmpsb
int3
sbb
arpl
cmp
jecxz
outsl
idivl
rcll
imul
mov
jb
sbb
call
inc
mov
jecxz
jge
xor
fiadds
push
cmpsl
clc
sub
inc
xchg
xchg
lds
stc
repz
insl
rcll
out
nop
and
scas
jp
repnz
idivl
xchg
test
push
lods
adc
repnz
mov
or
les
bswap
repz
insb
xlat
mov
push
icebp
test
bound
and
inc
cmp
popf
xor
arpl
std
imull
int
or
xchg
adc
inc
jbe
lret
imul
push
arpl
push
jecxz
xor
dec
sub
and
adc
fcomps
mov
xchg
push
fcmovu
add
sbb
movsb
stc
adc
outsl
sub
repz
pop
sub
pop
out
inc
sbb
lods
push
mov
test
sti
outsb
xchg
dec
call
sub
leave
rorl
movl
mov
push
push
jg
push
je
mov
pop
shl
leave
add
push
or
out
subl
popa
adc
ret
sahf
mov
inc
adc
add
arpl
leave
ja
mov
xchg
lcall
loope
sbb
shr
les
push
add
dec
pop
push
xchg
sub
push
sbb
dec
jge
push
leave
stos
cli
dec
sub
ds
mov
popa
arpl
jecxz
adc
shll
cmc
fwait
or
jns
mov
rcrl
dec
fwait
cltd
and
mov
xor
xor
jecxz
mov
mulb
imul
sti
pop
sbb
ror
ljmp
aad
divb
add
jo
pandn
mov
imul
stc
cmpsb
add
cmp
adc
cmp
adc
mov
out
xchg
bound
les
or
push
rorb
in
jno
mov
mov
sbb
push
inc
fsubrl
mov
fbstp
mov
sub
imul
test
push
outsb
sbb
jle
arpl
test
sub
popf
in
rol
fdivs
fcoml
mov
jge
imulb
stos
mov
sarb
adc
sahf
dec
les
inc
xchg
inc
jo
xchg
inc
adc
push
adc
mov
push
scas
pop
lcall
cmp
popf
lock
daa
cltd
cmpl
fsubs
or
pop
sub
or
xchg
aam
mov
mov
mov
subb
sub
rcll
imul
mov
cmp
lcall
inc
dec
pop
push
mov
add
cli
leave
cli
fs
pop
lahf
mov
cmpl
cli
dec
popa
pushf
aas
pop
sahf
lods
out
cmp
xor
dec
sub
jb
or
loope
test
dec
decb
cmp
scas
xor
inc
dec
mov
fwait
jecxz
jb
or
push
pop
in
sbb
cli
xor
popf
call
sbb
loopne
mov
add
push
add
adc
xor
addr16
dec
into
mov
idivb
push
push
adc
cs
push
lock
adc
sti
jg
outsb
flds
leave
aam
pop
sub
orb
into
add
dec
ret
and
cmpsl
nop
cwtl
das
push
adc
test
dec
mov
push
ss
ljmp
and
pop
mov
mov
jg
push
lret
dec
pushf
push
int
jnp
loop
sub
testb
mov
jp
aaa
pushf
aaa
mov
imul
pop
dec
in
cltd
gs
lock
inc
cwtl
ffree
cwtl
xchg
out
rorl
loopne
inc
imul
sub
pop
dec
dec
jne
rcrb
loop
cmpsl
jmp
cmpb
mov
rolw
dec
xor
pop
jbe
fwait
xchg
hlt
add
pop
scas
xor
stos
push
xor
xor
mov
in
out
aaa
dec
and
jns
push
out
xor
cmp
add
inc
enter
mov
jp
xchg
les
mov
lods
sbb
dec
rol
xchg
les
cs
dec
lea
xor
mov
mov
repz
out
cld
outsl
xchg
dec
pop
lcall
jnp
jmp
xchg
xor
mov
jbe
sub
nop
lcall
out
ljmp
dec
sub
sub
outsl
mov
jecxz
inc
stos
pop
mov
mov
sub
das
in
xor
xor
roll
cmp
adc
aaa
jne
mov
dec
push
mov
pop
pop
mov
or
dec
and
je
or
decl
xor
xor
out
cmp
pop
push
adc
rcll
test
stos
sub
or
fsubrs
mov
jo
rclb
sbb
insl
lods
fmul
dec
lcall
pop
call
mov
dec
jg
popf
cs
xchg
pop
les
push
inc
xchg
jns
mov
pusha
push
inc
cmp
xchg
and
xor
lds
inc
push
sarb
mov
sbb
icebp
push
or
sub
cmp
dec
cli
push
addr16
jbe
fwait
cmp
leave
push
int
out
fwait
je
dec
mov
cmpsb
repz
mov
sbb
fstpt
xor
add
stos
sub
cwtl
jmp
cltd
sbb
lods
enter
xor
iret
dec
lcall
repz
or
aam
push
and
push
pop
jbe
cmp
xor
add
into
mov
nop
flds
adc
adcb
pop
movsb
mov
mov
pop
je
adc
cwtl
mov
dec
mov
imul
pinsrw
out
imul
xor
in
push
dec
mov
icebp
mov
inc
sub
popf
cmp
cmp
ss
sub
pusha
in
nop
fs
clc
addr16
mov
mov
or
sbb
mov
lcall
cmpsb
test
ja
pusha
hlt
es
or
movsb
jge
ret
scas
jmp
jnp
mov
push
mov
cwtl
mov
cmc
stos
xor
ret
decl
popa
mov
push
aas
push
outsl
jle
xlat
sar
mov
mov
mov
mov
js
or
push
sbb
int3
jl
cmpsb
jno
and
mov
shlb
add
fiaddl
dec
cmp
mov
and
loop
movb
push
hlt
lcall
nop
or
test
mov
shrb
mov
repz
idiv
fcmovne
aas
cmp
fisubrl
rcr
adc
pop
iret
lret
sbb
subl
push
add
mov
ficompl
fcomps
neg
lahf
rcrb
push
pop
xor
js
out
dec
adc
lret
push
jno
sbb
ffree
or
mov
mov
xchg
negb
mov
ss
cld
lods
int3
jbe
je
and
ljmp
jl
mov
sub
sub
mov
xor
jb
les
jmp
mov
or
int
loope
inc
ret
out
xchg
test
daa
mov
aad
notl
cltd
movsb
or
test
cld
jg
lret
mov
or
loope
xchg
test
sbb
add
xor
mov
inc
mov
call
pusha
sub
pushf
mov
or
daa
inc
xchg
mov
out
inc
sbb
into
mov
sbb
dec
push
adc
movsl
cmp
pusha
or
xor
test
pop
mov
mov
mov
mov
addr16
and
fs
andb
push
out
xor
mov
sbb
pop
xor
and
popw
xchg
mov
lahf
mov
or
mov
stos
push
xchg
adcl
scas
add
subb
mov
adc
jae
inc
sub
gs
lods
aad
cmp
fwait
jnp
popa
pushf
shl
shll
call
stc
jecxz
lret
jp
or
jbe
out
test
test
mov
pop
lods
out
push
jne
test
xchg
aam
mov
pop
add
aaa
repz
test
cmp
mov
cmc
loopne
push
or
scas
sahf
mov
mov
sbb
xor
add
mov
fs
shrl
fldl
mov
pushf
cmp
sub
mov
cmpsb
jno
leave
cmp
loop
mov
pop
sub
rorb
dec
flds
xchg
imul
das
in
push
jge
push
push
jae
push
arpl
jmp
cmp
mov
addl
pop
push
fsubr
and
jmp
pop
add
xchg
out
or
sbbb
fwait
pop
cmpsl
xchg
mov
mov
sbb
test
rolb
mov
push
jne
repnz
pop
mov
mov
addr16
fcoms
pop
in
inc
add
jmp
rorb
in
stc
clc
mov
jbe
fisttpl
add
fistpl
popf
push
in
push
aaa
sub
movntps
push
repz
xor
pusha
das
xchg
pop
ja
test
add
mull
xor
add
pop
xchg
hlt
ss
xchg
int
sub
mov
sbb
outsb
inc
lcall
lahf
sbb
cmc
or
sbb
test
jl
cli
pop
cmp
mov
cmp
and
dec
movb
and
jbe
insb
mov
cmovb
mov
dec
sbb
cmc
jb
shrl
dec
sub
mov
xor
shlb
pop
push
pop
sbb
pusha
dec
jp
mov
pop
xchg
or
clc
mov
and
movsl
mov
out
sbbb
loopne
jg
sub
popa
insb
push
inc
gs
out
jne
jnp
dec
es
stos
cmp
stc
xor
test
nop
pop
gs
pop
lcall
mov
fs
cmp
ret
cwtl
lahf
sbb
ror
inc
shrb
cwtl
mov
cmpsl
daa
pop
daa
mov
sbb
negl
and
xchg
cld
cmp
enter
jmp
xor
jecxz
cmpsl
jne
fs
xlat
push
lods
push
stc
inc
push
dec
and
mov
ss
ljmp
dec
inc
inc
xor
scas
jp
outsb
int3
bound
iret
xchg
mov
fidivs
fldt
out
das
mov
in
add
cmp
outsl
or
je
pusha
cmpsl
sub
daa
jno
xchg
pop
aad
setle
loop
xor
clc
fs
xor
imul
push
outsb
aaa
imul
or
push
test
sbb
or
negb
sbb
sub
mov
adc
icebp
ja
push
loope
jne
jae
inc
ljmp
push
sub
out
adc
fstl
sbb
lea
push
lea
mov
jg
inc
in
fwait
and
fsubr
mov
push
or
fistl
in
leave
mov
and
aad
in
xchg
and
lret
call
imul
xsave
outsl
pop
in
add
subl
ds
sbb
aaa
add
ljmp
test
pop
jnp
jbe
xchg
xor
sti
lods
aad
loop
dec
mov
pop
jb
popf
js
push
pop
sbb
stos
or
cmp
inc
xchg
jp
push
jno
dec
mov
cmpsl
mov
pop
cmpsl
movb
pusha
add
adc
rcl
addr16
pop
repz
push
repz
fisubrl
and
or
daa
mov
sub
popa
fxch
movsl
out
jo
or
aaa
std
rcll
int
push
repz
js
xchg
outsl
sbb
call
nop
dec
aad
in
and
pop
jmp
loopne
lret
xlat
or
test
pusha
movb
pop
aad
push
lods
nop
imulb
cmp
into
dec
add
lahf
and
test
ficoms
mov
mov
sub
cltd
and
shlb
mov
jle
cmp
xchg
test
add
das
xchg
or
imul
repz
icebp
push
fsubl
pop
mov
sbb
xor
cmp
pop
inc
adc
mov
xchg
idivb
call
ds
and
movsb
jae,pn
pop
sbb
xchg
sti
repnz
pop
mov
and
rcrb
pop
dec
or
out
cmp
fldt
add
add
pop
ret
fsubrl
xchg
pushf
jbe
add
adc
std
faddl
sbb
adc
mov
repnz
int
loop
jbe
push
pop
adc
inc
push
sbb
mov
inc
jbe
jmp
cmp
in
test
stos
or
shl
fbstp
loope
inc
aaa
sub
js
idiv
lods
adc
cmp
cli
inc
xchg
dec
push
fadds
cs
sti
or
dec
mov
nop
bound
idivb
xor
icebp
lods
jecxz
adc
dec
popa
insb
xchg
sbb
push
and
fwait
mov
nop
mov
shrb
cmp
loopne
leave
cmpsb
xchg
js
dec
dec
cmp
lods
dec
scas
jb
mov
or
cmp
daa
dec
aad
js
xor
push
loopne
hlt
pushf
xor
dec
into
aas
adc
call
imul
xlat
adc
or
mov
scas
cmpsl
xor
lahf
mov
cli
fsubrs
add
push
adcb
fmuls
cmpsb
or
xchg
notb
xchg
jo
sub
mov
and
jg
cmp
mov
shrb
xor
jne
sub
incl
pop
add
mov
pop
inc
out
sub
or
sub
shl
outsb
pop
jnp
push
dec
and
scas
inc
add
jl
and
jl
mov
test
sbb
push
leave
sbb
test
add
aam
or
xchg
sti
enter
aam
rorl
mov
mov
lds
adc
dec
and
xchg
xchg
cmp
cltd
push
mov
test
mov
fldcw
inc
leave
sub
lods
push
push
push
cltd
xor
cltd
xorl
mov
and
test
mov
scas
test
and
inc
in
inc
pop
fstl
lret
sbb
test
out
das
inc
addr16
pop
inc
pop
stos
mov
mov
pop
mov
pushf
orb
inc
sub
lea
jbe
xchg
int
sbb
pop
outsl
ja
sbb
mov
mov
jae
outsl
sbb
enter
call
and
mov
sti
iret
roll
cmp
js
call
fnstsw
sbb
fnstenv
movsb
nopl
add
add
or
imul
and
mov
mov
incb
pop
jo
enter
addr16
mov
xchg
mov
pop
addr16
mov
add
popf
lds
enter
ret
test
adc
xchg
adc
js
jge
rorl
aam
nop
sarl
in
adc
out
push
notl
dec
mov
or
dec
mov
jae
sub
je
push
jae
enter
hlt
out
in
sar
scas
aam
pop
mov
xchg
and
in
decl
xchg
shr
popa
pop
add
sub
in
js
jnp
push
adc
xchg
cmc
or
or
std
jg
xor
mov
jmp
cli
scas
xchg
cmpsb
pushf
in
iret
jl
push
lods
mov
xchg
sbb
mov
and
dec
fsubs
xchg
sbb
rol
outsl
pusha
xchg
inc
sahf
push
xchg
sub
sub
xor
je
adc
lock
bound
pop
add
outsb
jns
ds
out
cmpb
cmpsl
fwait
cmp
rolb
lahf
or
notb
mov
mov
inc
mov
inc
icebp
mov
dec
fs
xor
and
pop
test
or
pop
sbb
sub
adcl
imul
xor
mov
data16
test
inc
dec
xchg
inc
jg
mov
add
mov
js
push
out
mov
sub
sbb
pop
loopne
in
in
into
xlat
icebp
jge
pusha
in
inc
dec
fidivrl
cmc
dec
mov
jle
mov
aad
lods
xor
leave
out
lea
mov
dec
mov
inc
rcr
sub
sti
in
sub
arpl
mov
cmp
sbb
xchg
je
in
icebp
mov
lahf
add
popl
add
jle
sbb
arpl
ffreep
add
test
pop
aad
add
sbb
aad
nop
andl
lret
pop
sub
aam
mov
enter
lods
ret
jns
stos
ss
add
xor
pop
and
cwtl
xchg
mov
fs
or
pop
incl
jp
jne
inc
sahf
stos
icebp
sbb
push
sub
lock
in
lods
pop
test
mov
push
mov
xchg
cmp
lahf
add
pop
jno
xchg
xor
in
and
add
je
cmp
test
rcll
icebp
scas
dec
fnstenv
rorb
jecxz
cld
xchg
inc
xchg
pop
sub
aam
ret
clc
sub
sbb
cltd
stc
lcall
pop
push
aaa
lret
ret
and
inc
int
sbb
pop
aaa
pop
mov
bound
pop
lods
leave
test
xor
dec
iret
push
repz
pop
stos
gs
sti
repnz
add
and
jb
shlb
xlat
mov
add
mov
jae,pt
sub
inc
pop
xchg
loopne
icebp
gs
xchg
push
jb
sub
cli
repz
daa
bnd
cmpsb
mov
in
rol
mov
adc
mov
ret
outsb
divl
inc
mov
add
int3
imull
jge
cmc
jmp
mov
aaa
and
test
out
push
fucomi
push
aas
hlt
mov
sub
pushf
push
arpl
mov
shrl
push
or
leave
je
aaa
popf
mov
sarl
push
xchg
jle
negb
in
sub
mov
add
sahf
lar
add
test
ret
mov
dec
adc
movsb
mov
test
xchg
mov
inc
push
mov
aad
mov
shr
sarb
cmp
call
clc
sub
out
push
loope
stos
cmpsl
jl
jge
addr16
and
pusha
sarb
push
xor
jae
ret
jns
xchg
popa
sti
mov
pusha
pop
and
shll
xchg
sub
mov
mov
adc
imull
pop
xchg
xor
test
aas
fisubrl
movsb
icebp
movl
sbbb
mov
xor
call
push
gs
es
xor
or
ret
jmp
xchg
inc
mov
pusha
loopne
test
jae
sub
lret
inc
pop
inc
pop
jle
idivb
or
adc
mov
js
leave
in
inc
mov
inc
aad
xchg
jecxz
test
and
idivl
mov
in
mov
push
dec
js
sbbb
cmp
ds
dec
ret
adc
movsl
mov
adc
pop
cmpsl
mov
stc
push
stos
add
lcall
sub
nop
adc
sub
fcoms
not
xchg
sbb
or
roll
or
mov
or
ds
dec
fstpt
cmp
adcb
or
or
ret
cmpsb
xor
mov
sub
sub
or
in
repz
cmp
clc
leave
pop
cmp
mov
loop
sub
mov
add
orl
fstpt
mov
popa
mov
push
mov
int3
scas
popl
pop
xchg
pushf
fwait
xor
fwait
or
daa
cltd
dec
jne
inc
mov
bound
mov
sub
pop
adc
add
pop
mov
ljmp
push
pop
imul
sbb
addr16
out
lods
and
mov
push
rolb
out
mov
fldl
xchg
lahf
shrl
xor
jmp
xor
fsubrl
jo
loope
test
jecxz
fnstsw
xor
inc
rcrl
lcall
xchg
loop
cmpsb
push
xor
cltd
test
xchg
faddl
pop
push
xor
cld
xor
repnz
jecxz
cltd
sar
leave
fdivl
scas
jne
and
daa
cmpsl
sbb
fwait
and
adc
cld
push
mov
movsl
dec
jg
inc
in
cwtl
in
xor
push
xchg
push
aas
xchg
fucomip
jb
pop
push
mov
andl
repnz
stos
xor
insl
xchg
xorb
cli
mov
and
cmp
pop
pop
lods
cmc
dec
nop
mov
adcb
aas
ret
mov
mov
lret
clc
xchg
and
cmc
jns
sub
cmp
adc
sbb
add
pop
pop
int
cmpl
xor
popf
out
mov
gs
xchg
jecxz
aam
mov
and
pop
std
or
pop
add
inc
rcrl
xlat
dec
scas
mov
pop
fs
mov
mov
sub
push
inc
ret
sbb
pop
in
scas
mov
sbb
fidivrs
xchg
es
jmp
lock
push
add
stos
ret
xchg
sbb
sbb
test
cmp
decb
je
mov
shll
push
ret
inc
pushl
fdivl
mov
inc
or
cld
mov
mov
stos
addr16
into
cld
cmp
cs
pop
and
dec
in
push
push
push
and
mov
inc
shll
jmp
jmp
mov
jp
js
cmp
shlb
cltd
lret
pushf
or
xor
aaa
xchg
and
stc
out
push
push
inc
pop
push
cmpsb
push
pop
rorl
fsubs
mov
pop
cs
inc
in
shrb
or
jl
in
outsl
enter
cmp
je
dec
push
subl
mov
jmp
jo
xchg
les
es
and
sub
pop
xor
popa
iret
int3
sti
cmp
jne
lods
inc
sbb
xchg
jmp
push
fsubp
lods
cmp
out
push
inc
and
sbb
or
roll
fidivrs
dec
pop
mov
rcl
jae
stos
lods
add
mov
nop
movsb
xchg
iret
push
or
les
mov
pop
jo
xchg
sub
test
inc
ret
add
fmull
sub
jae
sub
cmp
pop
mov
pop
lea
mov
pushw
testb
sub
rolb
pop
lds
xor
imul
inc
lret
enter
in
mov
mov
mov
jle
jge
sbb
mov
xchg
jl
xchg
mov
adc
call
sbb
cmp
lock
dec
pslld
outsl
xor
daa
mov
jmp
push
out
addl
cli
enter
adc
roll
roll
sti
and
sahf
aaa
mov
jmp
leave
adc
cmp
enter
shlb
cmp
cld
movsb
mov
push
insb
mov
adc
fsubl
and
addr16
imul
fcmovb
mov
mov
and
aad
and
cmp
mov
sbb
mov
in
add
bswap
sub
cmp
adc
scas
adc
adc
cmp
add
sub
add
and
push
loope
ja
push
cmp
scas
lods
or
pop
add
jnp
push
push
movsl
sbb
ljmp
mov
jns
popf
push
rcrb
fbstp
push
jecxz
dec
pop
sbbl
les
addr16
cmp
cmp
int3
mov
lret
icebp
mov
rcrb
or
and
incl
push
gs
cmp
adc
mov
out
xor
gs
mov
hlt
or
mov
fldenv
lock
xchg
mov
leave
xor
and
jno
jmp
xchg
ljmp
arpl
jo
jo
sbb
ljmp
add
pop
gs
push
xchg
and
subl
aas
imul
xor
push
mov
adc
push
icebp
cmp
pop
jae
les
push
test
adc
xchg
aam
mov
fwait
pop
cmp
jns
cmp
out
or
dec
push
inc
popf
mov
dec
adc
sarb
je
outsb
fstl
inc
jg
push
fwait
xchg
subl
cmp
xchg
and
sbb
or
in
xchg
in
xchg
sub
fidivrl
sbb
lret
loopne
add
xor
ret
sub
loop
test
jg
xchg
mov
int
xor
cmp
mov
movsl
icebp
or
test
leave
loopw
insb
scas
mov
ror
push
gs
in
xchg
clc
popf
jb
jp
jns
pop
cmp
jne
xchg
lea
stos
mov
lcall
mov
mov
test
mov
xchg
or
pop
xor
test
jo
movsb
or
lods
in
mov
int3
inc
pop
adc
jg
stos
push
cmp
aam
loop
nop
gs
sbb
fidivs
push
cmpl
push
jnp
inc
sub
js
xchg
sbb
popf
push
outsb
popa
push
ss
cmp
adc
pop
add
mov
cs
bound
imul
icebp
imul
cmc
fidivs
scas
aas
push
mov
jno
xorl
mov
or
insl
push
jne
xchg
stos
and
enter
outsl
pop
mov
pusha
pop
daa
sbbb
pop
cmp
pop
enter
jo
mov
jb
call
lret
push
sub
mov
sub
lock
mov
mov
dec
sahf
jns
in
daa
unpcklps
jle
in
mov
inc
dec
mov
mov
jge
jmp
dec
push
add
push
push
mov
mov
mov
into
stc
out
lea
int3
xchg
push
adc
jl
js
jbe
je
orb
mov
stos
push
jle
mov
ds
fstpt
cmpsb
enter
pop
jno
imul
mov
mov
mov
mov
xchg
std
popa
dec
xchg
sbb
cld
daa
mov
pushf
popf
lret
or
jmp
sub
inc
lds
mov
aas
orl
cmp
das
popa
mov
push
andb
fcoms
mov
fmul
imul
hlt
mov
loopne
mov
fxch
shlb
and
sbb
pusha
lods
out
jecxz
mov
rcrb
hlt
aas
jo
push
fwait
shll
lods
repnz
and
imul
jmp
push
push
shrb
imull
fmull
rclb
loop
in
add
fsubs
adc
push
sbb
mov
test
add
adc
pop
cwtl
pop
xor
pusha
outsl
lock
cmpsl
pop
mov
cmc
enter
push
dec
pop
fwait
stos
int3
add
adc
lea
sbb
adc
push
clc
enter
mov
mov
sub
test
movsl
mov
cmp
xchg
jne
sbb
jbe
pop
test
sbb
xacquire
pushf
add
out
jecxz
jne
jne
loope
pushf
in
jnp
out
lahf
mov
push
or
or
inc
xor
shlb
icebp
jae
stos
jnp
pushf
dec
daa
push
or
ret
xlat
call
out
push
insb
or
mov
hlt
sub
iret
mov
in
aam
loopne
call
dec
cmc
xchg
ja
mov
xchg
dec
aas
pushf
push
lcall
jbe
mov
fisttps
mov
or
inc
rorb
movsl
cwtl
cmpsl
push
jnp
jl
test
pop
mov
jge
jmp
lahf
into
pop
loopne
dec
push
push
stos
push
mov
inc
stos
pop
jl
sub
jns
or
sahf
mov
push
mov
cmc
andb
outsl
pop
add
fdivr
adc
push
and
adc
sub
sbb
dec
xlat
popf
test
es
xor
pushf
imul
fsubrl
xchg
mov
test
adc
pushf
fs
aaa
mov
xor
and
pop
outsl
movb
jo
pusha
push
sub
dec
mov
cltd
inc
cwtl
aaa
inc
sbb
pop
xchg
add
repnz
xchg
lea
or
hlt
jg
fwait
mov
dec
lods
jl
je
stos
stc
mov
ficoml
push
out
insl
pop
or
aaa
jmp
dec
fwait
sub
xchg
leave
jmp
les
maxps
pusha
jl
les
filds
fmul
ss
lods
mov
enter
icebp
adc
aam
sbb
and
outsb
xor
imul
pop
pop
mov
movl
jo
add
xchg
cmove
mov
push
rep
and
stos
rclb
stos
aas
in
sub
in
push
gs
scas
xchg
add
cwtl
inc
cmpsl
repnz
inc
scas
movsb
xor
xlat
or
in
jge
and
icebp
mov
jae
add
mov
lret
jmp
pop
aaa
mov
push
or
fsubrl
or
out
jecxz
rolb
fwait
jnp
aad
mov
fs
or
xor
jp
mov
lods
jl
sub
faddp
inc
fdivs
push
decb
faddp
xlat
setb
mov
in
test
mov
repz
cmp
pop
daa
cmp
mov
jb
fs
data16
and
cmpsb
cld
je
popf
icebp
jne
lret
lret
cli
and
push
or
in
andl
pop
test
adc
push
int3
jmp
dec
movsl
pop
mov
xlat
fadds
push
idivb
push
mov
adc
fldenv
adc
xchg
jle
add
fidivrl
test
subl
sbb
setne
rorb
int3
test
or
jle
into
xor
ljmp
lahf
and
stos
xchg
sub
inc
sarb
ficoml
xlat
push
test
mov
lret
cwtl
add
ficoms
adc
push
loop
pop
sbb
lds
push
aaa
dec
xor
mov
jmp
mov
je
cli
jge
pushf
xor
or
xor
lods
inc
inc
pusha
xor
cmp
unpcklps
ret
rcll
fdivl
mov
or
inc
scas
add
dec
bound
mov
adc
insl
movsl
rolb
lods
cmc
dec
cmc
pop
imul
pop
xor
inc
rclb
movsb
push
dec
lret
not
out
push
cmp
cmpl
dec
je
addb
shlb
stos
xor
popf
daa
jb
sti
mov
mov
jo
addl
xchg
mov
repnz
jo
xor
push
xchg
inc
jae
insb
pop
popf
test
pop
lods
mov
gs
mov
push
jecxz
mov
clc
shrl
xchg
out
lock
pop
push
je
scas
lahf
out
iret
out
mov
data16
stos
lret
rorb
lea
sbb
mov
into
sub
pop
repnz
loop
loopne
idivl
dec
mov
mov
push
push
adc
fcoms
jle
adc
in
stc
mov
jmp
repnz
loope
xchg
js
adc
mov
jl
or
pop
inc
fsubl
dec
in
cmpsb
iret
subl
mov
in
flds
pop
push
xchg
mov
add
push
jmp
mov
loop
push
les
ja
fs
cmp
dec
std
jbe
fnsave
out
or
dec
sbb
mov
aaa
fdivrl
xchg
fwait
lcall
into
or
adc
mov
cmp
add
push
movb
sti
jmp
mov
scas
xor
repnz
aas
inc
stos
sbb
xchg
dec
and
mov
scas
adc
andl
ret
pop
cmpsb
inc
xor
popf
push
pushf
jnp
sub
mov
add
xlat
push
rolb
je
xrelease
in
repz
repnz
xchg
inc
xchg
push
sub
jmp
ds
push
push
ret
nop
lock
aad
int3
jge
repz
sbb
int
push
sbb
add
ja
dec
jp
xor
sub
and
mov
les
dec
jb
popaw
mov
rcll
aad
xlat
iret
push
cltd
mov
lret
lcall
mov
sbb
jle
mov
push
dec
inc
int3
jne
fildl
mov
push
xchg
sub
lods
in
aad
pop
ss
xchg
mov
xchg
testl
mov
ja
icebp
jo
pushl
dec
inc
jbe
sti
jae
xchg
in
punpcklwd
xor
dec
loop
push
mov
mov
cwtl
dec
jbe
pop
sbb
mov
outsl
inc
out
decl
pushf
jbe
jno
jl
aad
add
popa
popf
mov
add
lcall
into
jmp
inc
stc
aas
shlb
cmp
push
sub
fcmove
sub
jbe
cld
inc
add
dec
inc
dec
xchg
mov
lcall
mov
and
cld
add
lret
pop
loope
jb
or
lods
jge
jnp
push
mov
jbe
lds
enter
out
and
imulb
ret
sub
shll
lret
dec
push
xchg
out
sahf
test
lcall
dec
into
popf
repnz
or
out
push
aaa
test
insl
cltd
andl
imul
jp
pusha
ljmp
jecxz
loopne
ljmp
das
repnz
or
mov
lods
aam
push
dec
rorb
cmpsl
test
mov
push
cmc
imul
scas
stos
pop
hlt
push
and
jl
jecxz
outsb
incb
mov
and
aas
inc
cs
and
lret
shr
or
adc
out
push
sbb
xchg
mov
or
pop
ror
cwtl
out
inc
repz
in
repnz
nop
push
ds
and
cmp
mov
cltd
mov
add
ja
decb
jae
sbb
jp
lret
pop
sbb
sahf
ja
or
outsb
mov
push
loopne
mov
sbb
sahf
xchg
mov
test
push
rorl
xchg
js
push
push
inc
and
sub
jmp
add
aam
sti
add
mov
arpl
pop
sub
ror
cmp
enter
jo
sahf
xor
iret
pop
sbb
lock
sbb
movsl
inc
es
dec
xchg
int3
xor
fcoms
mov
cmp
add
imul
jp
lock
jns
pop
stos
mov
sbb
push
dec
int
and
inc
xor
inc
lea
fisttpl
cmp
js
pop
fwait
cmpb
pusha
jnp
js
gs
invd
prefetch
andl
icebp
pop
int
xlat
idivl
loop
inc
mov
xor
cmp
mov
push
pop
out
jg
sbb
add
adc
adc
push
pop
test
and
inc
addr16
cmp
jecxz
cld
jns
xchg
mov
popf
jmp
push
lods
repz
nop
xor
mov
ja
aam
in
push
dec
ja
mov
xchg
insl
or
std
sahf
test
dec
movsb
es
data16
mov
pop
ljmp
mov
sbb
mov
mov
int3
pop
loope
and
ss
les
cld
orl
or
test
lcall
inc
jp
popf
pushf
pmulhuw
call
or
in
dec
push
add
push
xor
mov
daa
xor
inc
es
fistpll
inc
cmc
adc
pop
push
lret
add
addl
icebp
sbb
aad
aas
data16
xor
add
stc
xor
bound
or
mov
mov
ret
pusha
in
shll
jno
pop
jbe
dec
stos
cmp
mov
jge
lds
mov
mov
lcall
andl
insb
lea
es
mov
mov
add
cld
ja
cmpl
ljmp
xor
fcmovnu
pop
ja
stos
adc
aas
adc
aaa
xor
cli
xor
jae
flds
loop
ja
xchg
aaa
push
mov
lahf
jecxz
imul
psrlq
movb
cld
cwtl
jno
and
and
push
push
xor
inc
adc
pop
mov
xchg
jne
fs
xchg
xchg
sbb
stos
std
stc
arpl
dec
shlb
mov
mov
push
adc
push
lcall
mov
loop
aam
xor
mov
cld
int
icebp
sbb
rolb
jne
adc
fdivs
cmc
mov
in
loop
sub
mov
dec
fisubrl
sahf
decb
add
mov
lods
shll
push
cmp
and
xchg
cwtl
fdivr
add
mov
mov
pop
mov
and
sbb
stos
pop
mov
pushf
or
out
popa
xor
xor
push
jno
pop
push
sub
push
aaa
xlat
fwait
xchg
xor
lcall
and
sbb
mov
inc
in
lretw
fidivrl
cli
mov
mov
fwait
leave
jmp
adc
adc
sub
sbb
add
test
pop
cld
jecxz
icebp
jo
sbb
scas
pop
cmc
xchg
mov
sub
lock
test
movsb
sbb
dec
jle
mov
and
adc
pop
adc
sub
mov
mov
mov
jl
and
cltd
mov
adc
scas
lods
imul
mov
pop
add
arpl
pop
les
dec
dec
mov
push
paddw
or
dec
jl
sahf
ror
daa
xchg
sbb
jae
cmp
and
imul
lock
fdivl
sahf
fwait
in
xchg
mov
les
sbb
dec
into
das
xchg
mov
push
imull
xchg
nop
sub
jmp
sub
mov
sbb
mov
xchg
jle
mov
daa
out
inc
or
inc
bound
dec
or
mov
sbbb
xor
add
mov
enter
mov
or
jmp
orb
inc
xchg
popa
rcrl
out
pop
dec
out
lcall
and
popa
xlat
lret
dec
data16
std
inc
scas
mov
std
rorb
test
push
pushf
call
gs
xor
jl
pop
dec
cmp
dec
fistl
mov
leave
icebp
cmp
pop
mov
nop
xchg
std
dec
popf
push
pop
lods
mov
fs
dec
movsl
xor
or
nop
and
mov
sbb
cltd
scas
pop
push
test
cwtl
xchg
cmp
pop
divb
repnz
clc
inc
xchg
inc
daa
scas
xchg
inc
int
int
mov
push
inc
sub
inc
adc
fiadds
into
adc
ja
inc
fs
adc
insb
mov
inc
adc
in
mov
adc
dec
hlt
js
jb
and
jb
inc
cs
sbb
xchg
sbb
popa
mov
outsl
sti
pusha
xor
fucomi
gs
xchg
dec
hlt
mov
or
ret
cmpsl
or
push
and
mov
mov
std
pop
nop
push
int
mov
aas
adcl
mov
aad
mov
cwtl
mov
sub
jb
pop
fldcw
insb
fcomps
or
int3
cmp
cs
js
rcll
sub
xchg
je
test
push
shll
add
test
lods
push
fcompl
sub
mov
push
sbb
je
jns
and
push
cmp
dec
inc
mov
push
mov
and
mov
sbb
stos
cmp
mov
jbe
jne
popa
xchg
stos
xchg
jo
movsb
push
sbb
incb
dec
enter
daa
fidivl
push
mov
jb
jne
push
in
repnz
hlt
xchg
mov
arpl
xor
iret
push
and
xchg
adc
enter
jl
sbb
andl
nop
daa
jmp
mov
xor
sahf
mov
add
mov
movsb
lods
push
imul
lahf
push
lods
mov
fnstenv
push
pusha
jmp
adc
test
lahf
outsb
dec
or
mov
loop
out
dec
inc
jp
xor
xchg
andl
sti
jmp
andb
sbb
insb
aad
push
sahf
divb
mov
xchg
dec
and
cs
lock
lahf
xor
jns
shlb
sub
dec
adc
add
bswap
imull
jne
adc
repnz
sbb
cmpsb
test
push
xchg
adc
push
fucomi
lahf
ja
aam
inc
loop
mov
adc
je
add
arpl
mov
lods
mov
sarb
xor
xchg
clc
xlat
add
mov
adc
les
xchg
ror
push
aas
sub
or
sbb
or
dec
cmpsb
mov
xchg
or
mov
mov
and
cmp
int3
mov
idivl
jae
mov
out
mov
adc
lock
div
notl
sub
push
jnp
push
aad
stos
jecxz
pop
ret
mov
jno
insb
mov
pop
scas
aaa
xor
cmp
rep
and
adc
sub
nop
xchg
push
pop
mov
jno
jge
mov
pusha
popf
pop
andl
xchg
mov
rol
cmp
js
aaa
shrb
sti
test
push
lret
xor
mulb
push
sbb
pusha
mov
mov
push
imul
outsl
cmpsl
dec
fisttpl
push
push
repz
rcll
xchg
push
sub
jmp
add
jnp
lods
adc
stos
xchg
push
out
and
push
aam
adc
mov
std
or
cs
sbb
xchg
push
push
in
fcoml
cli
in
add
sbb
lods
call
mov
inc
cli
mov
jnp
daa
sub
fisttps
mov
adc
mov
jecxz,pn
inc
in
inc
sbb
add
cmp
addl
sti
lods
sub
cmp
movsl
iret
sarl
aam
jle
push
icebp
mov
sub
ja
jge
sub
mov
xchg
and
inc
dec
push
mov
inc
div
imul
sarl
pop
je
xor
mov
inc
lods
mov
outsl
in
inc
fwait
xchg
iret
movb
mov
cmp
fdivrl
mov
jg
dec
cli
or
and
enter
int3
rorb
into
add
inc
cmp
fsubrs
xor
int3
lret
mov
arpl
jne
sbb
dec
jmp
sbb
daa
mov
mov
fisubrs
arpl
out
mov
mov
mov
jmp
pop
inc
jno
popa
pop
into
lock
inc
fstpt
mov
in
mov
mov
rcrl
imul
orl
nop
xchg
xchg
add
jmp
cmp
dec
or
sahf
test
cltd
aaa
insb
rorb
adc
sbb
mov
push
adc
ret
cli
jno
push
leave
inc
xchg
ljmp
mov
sub
sti
sbb
or
sarb
cmpl
fbstp
inc
test
add
xor
cwtl
test
add
pop
mov
into
aam
push
sub
push
lret
imul
sub
push
fmuls
sub
outsl
push
loop
add
sbb
arpl
mov
jp
pop
inc
or
lcall
sub
sbb
rcl
pop
dec
xor
fs
xchg
jbe
in
and
mov
xchg
adc
xchg
ret
push
push
jb
xor
or
std
insb
mov
push
loop
mov
jnp
mov
adc
jp
es
jae
xor
lahf
bound
pushf
js
push
jecxz
cmpsb
pop
inc
push
xchg
add
mov
add
negb
jmp
or
out
icebp
and
aam
mov
jb
popf
addr16
test
gs
mov
mov
into
cmp
dec
lar
inc
and
pop
movl
adc
into
push
sbb
in
push
xor
aad
idivl
insb
add
aas
inc
roll
imul
cwtl
inc
jae
or
repz
pop
lds
mov
mov
sahf
jb
jmp
jbe
pop
or
cmp
xlat
adc
inc
fildll
inc
sbb
test
cltd
ret
imul
push
data16
nop
cmp
sub
rorb
das
xor
pusha
jbe
pop
out
xchg
movsl
ret
sub
push
mov
lret
xorb
xor
adcb
mov
ds
notl
xchg
jns
pop
adc
jle
adc
mov
pop
adc
mov
mov
enter
push
test
arpl
adc
nop
cs
rorl
push
clc
pusha
mov
lds
adcl
and
cmc
mov
cmp
pusha
or
aad
mov
fsub
in
and
mov
mov
jnp
push
test
push
out
ret
sub
and
jo
xchg
aaa
insl
mov
in
jmp
fwait
out
scas
push
ja
fnstenv
lret
cmp
mov
mov
das
mov
jno
insl
shll
movl
and
sbb
rorb
adc
das
lret
pop
out
pop
sub
add
icebp
adc
popa
or
or
clc
push
inc
mov
cmc
sbb
ret
xchg
jge
aad
stos
pusha
aaa
sub
xchg
les
stos
out
push
and
loope
sbb
test
addr16
std
fdivrp
int
dec
lcall
jno
repz
in
xchg
jae
addr16
fs
pop
in
pusha
lds
loop
cmpsl
cs
loope
or
cltd
mov
int3
adc
inc
inc
lock
cmp
mov
mov
mov
js
and
cmpsb
movsb
clc
fwait
cmc
pop
xchg
enter
enter
adc
movb
addr16
mov
cli
add
adc
insb
cmp
int3
fldt
cld
mov
cmp
sub
xor
vmwrite
repnz
jbe
enter
xor
jnp
xchg
xor
std
xor
stos
sub
add
decb
push
xor
das
inc
dec
repnz
push
add
out
fildll
sahf
sti
xchg
cmp
xor
cmp
mov
mov
shlb
stc
push
ljmp
push
sbb
ljmp
adc
pop
out
ja
je
jp
or
test
aas
call
fisttps
or
loop
mov
push
clc
xchg
inc
fwait
dec
xchg
outsb
rcll
aad
shrl
gs
jne
aad
int3
xor
or
lods
notl
cli
mov
cld
iret
rorl
aad
inc
jo
lahf
sti
pop
mov
mov
xor
mov
scas
nop
mov
sub
and
fbstp
add
xor
dec
jae
mov
mov
and
xor
inc
cli
call
push
sar
cs
adc
xor
dec
aad
insl
int3
mov
shll
out
mov
add
fisubl
cwtl
mov
add
mov
fdivl
cwtl
pop
xor
inc
mov
cmp
cmp
inc
rorb
into
or
popa
das
push
push
mov
testl
out
lods
mov
xlat
out
stos
inc
ret
push
scas
lods
nop
cmc
lea
and
fdivp
inc
fcomi
jno
push
or
jb
adc
jmp
fdivs
or
jb
lds
add
stos
or
mov
or
push
add
aam
push
sahf
loop
xchg
mov
mov
push
fwait
cmp
cltd
xchg
xor
das
test
in
clc
scas
das
mov
jmp
push
dec
ret
sub
shrb
and
add
notb
enter
mov
sub
pushf
push
icebp
fdivr
dec
cld
add
test
mov
cmp
lret
jno
stc
cmp
cmpsb
mov
mov
adcl
adcl
sbb
or
daa
or
sbb
push
inc
mov
ret
subb
data16
sbb
outsl
int3
adcb
sbb
mov
icebp
inc
aaa
jl
fimull
lret
xor
sarb
jg
scas
test
ja
sub
mov
cwtl
call
mov
loopne
xchg
jns
push
in
pop
add
lock
sbb
push
fnstcw
add
int3
mov
inc
inc
nop
push
in
jmp
jns
mov
jg
xlat
pop
xchg
push
mov
clc
loop
aad
pop
pop
push
mov
xchg
test
dec
mov
mov
xchg
leave
dec
cmc
push
lret
sbb
or
in
std
lcall
or
dec
xlat
outsb
xchg
insl
jo
jo
fstps
ja
cmp
xor
cltd
xchg
sub
into
lods
dec
jecxz
mov
negb
jg
cmpsb
lods
lds
loope
out
push
out
and
pop
in
fstp
in
std
loope
mov
outsl
add
xorb
sub
sub
movl
iret
mov
nop
addr16
xor
sub
andb
and
mov
mov
push
mov
repnz
cwtl
movb
jns
nop
or
and
pop
and
sub
rcr
adc
addb
movsb
mov
push
pop
cmpsl
mov
in
and
cmp
insl
push
lcall
scas
adc
and
mov
cmp
ds
xchg
ret
lret
popf
out
pusha
jp
out
fwait
add
insl
pop
sti
insl
fbstp
mov
std
add
lret
adc
ja
and
cmp
cwtl
aad
out
shr
mov
push
filds
xorb
xchg
pop
mov
sbb
rcr
xor
sub
xchg
shlb
mov
shl
into
adc
in
pop
mov
mov
fbstp
adc
mov
adc
inc
dec
inc
ret
fwait
xlat
sbb
mov
bound
test
adc
pop
xor
scas
mov
mov
sub
add
fimull
sbb
sahf
pop
mov
ret
sbb
mov
pusha
icebp
xor
repnz
movl
sarb
mov
jns
inc
faddl
stc
sub
mov
arpl
f2xm1
fidivs
idivl
mov
mov
adc
cmpsb
popa
insl
pop
lahf
pop
push
loopne
nop
je
ja
xor
jbe
sub
lods
sub
and
pop
fcmove
bound
inc
sub
stc
mov
stos
jbe
scas
and
pop
andl
pop
inc
fmull
and
repz
push
jl
adc
or
push
loopne
loope
xchg
ret
mov
iret
repnz
outsb
ret
cmp
dec
inc
pop
cmpsb
cs
shrl
adc
iret
movsl
hlt
add
cmp
cmp
fs
popf
or
and
push
movsl
dec
xchg
jge
ss
popf
sub
cmp
mov
lcall
xchg
test
xchg
pop
pop
inc
daa
insb
cmc
pop
cmpsb
sbb
xchg
jnp
in
pop
jno
add
push
decb
or
pop
outsb
in
cwtl
jg
bound
fnstcw
xor
add
dec
adc
shrb
push
iret
sub
dec
adc
gs
pop
add
push
xchg
subb
mov
push
loope
jg
pop
shll
mov
dec
sbb
add
adc
sar
inc
test
pop
jge,pt
mov
push
bound
int
sahf
mov
sbb
in
dec
xor
mov
jnp
jns
int3
mov
push
nop
stos
dec
mov
xchg
enter
push
aad
popa
loopne
push
dec
xchg
sub
test
jno
and
cmp
decl
loop
movsl
lret
adc
cwtl
fwait
cld
faddl
int3
in
adc
xor
xor
xchg
push
scas
mov
loopne
ss
push
sbb
inc
movsl
mov
cwtl
divb
mov
cmc
push
mov
push
cli
xchg
xchg
push
lds
push
push
hlt
pushf
movsl
xor
mov
mov
fistpll
ljmp
lcall
iret
cmpsb
or
push
push
clc
add
xchg
xor
cmp
dec
inc
push
adc
in
mov
movsb
sub
xchg
inc
sbb
clc
outsb
and
bound
xchg
jg
int
rcrb
cmp
or
sbb
or
xchg
sub
les
ret
pop
jae
cli
cmpsl
xchg
push
jb
or
ficoml
jns
fnstcw
stos
imul
fisttpll
test
daa
in
xchg
add
pushf
testl
loopne
mov
add
xchg
push
mov
lahf
loopne
ds
pop
aaa
rcr
cmp
jno
push
add
mov
rorb
lea
daa
mov
xchg
test
mov
fneni(8087
gs
insl
xor
and
shll
sbb
sub
fadd
inc
mov
cmpb
in
pop
and
mov
mov
xchg
jne
dec
inc
or
and
in
fcmovnb
cmpb
jecxz
inc
rcll
push
in
pop
mov
negb
sub
jb
flds
jb
pusha
add
pop
mov
cwtl
cmpsb
mov
jne
sbb
push
lret
xlat
pop
daa
aas
push
aaa
sbb
cmp
push
sarb
rorb
mov
jbe
outsl
cld
jle
lods
mov
stos
pop
add
cmpsb
inc
ret
fists
movsb
pop
sub
adc
or
pop
cmpsl
cmp
pop
stos
mov
das
add
cwtl
je
sub
jne
pop
mov
movsl
and
xchg
les
leave
xor
jle
les
fwait
jg
sub
inc
mov
lea
insl
push
mov
adc
std
inc
pop
xchg
xchg
cmp
and
dec
mov
insl
scas
int3
xchg
jg
lock
jmp
mov
icebp
jbe
lea
popa
lds
sbb
aaa
mov
bnd
aam
into
add
adc
lods
mov
mov
adcb
cmpsl
inc
mov
jo
clc
stos
daa
pop
add
sbb
test
cmp
dec
jg
loop
out
dec
enter
les
dec
ja
cltd
scas
ret
ficomps
out
add
jne
mov
mov
lods
jo
jae
mov
call
pusha
ljmp
jo
push
bound
testb
je
inc
ljmp
mov
loope
pop
xor
lahf
std
jbe
ret
cli
xlat
push
icebp
mov
fldt
insl
jmp
add
int
sub
xor
push
pop
adc
push
in
andl
loop
cld
jge
cs
push
testb
icebp
dec
shll
xor
out
sbb
inc
adc
mov
ficomps
sti
stc
add
xchg
sub
and
sti
adc
in
add
into
push
push
nop
mov
push
xchg
int
outsl
jg
cs
out
add
test
xchg
and
call
mov
enter
lea
mov
add
or
out
movsl
sub
loop
out
aaa
mov
ret
sahf
icebp
js
call
inc
xchg
dec
or
scas
jo
ds
repnz
mov
mov
pop
loopne
and
mov
pop
xor
xor
xchg
adc
cltd
popf
mov
stc
movsl
mov
jb
cmc
pop
insl
adc
push
add
mov
into
sub
dec
test
push
or
repz
loop
jecxz
divl
nop
adc
scas
push
mov
nop
adc
es
loop
xchg
out
mov
pushf
imul
stc
inc
cmp
data16
inc
jnp
mov
inc
mov
xor
pop
xor
sbb
and
fnsave
insb
mov
test
mov
setle
sbb
push
jl
pop
outsl
cmp
push
push
jb
jge
aas
je
inc
or
sub
mov
test
into
int
hlt
xchg
cmpsl
xchg
sbb
or
pusha
call
lock
pop
cld
sarl
mov
shll
inc
lret
mov
add
cmp
aam
scas
out
addr16
enter
push
in
js
mov
lea
jg
stos
popa
loopne
test
mov
test
cmp
add
out
adc
mov
add
sbb
ds
outsl
call
scas
pop
vminss
sub
push
test
adc
fiadds
in
jecxz
pop
loop
cmp
dec
adc
scas
xor
cmp
cmc
gs
cli
push
mov
scas
sub
xor
xchg
dec
movsb
gs
int
mov
mov
loope
mov
stc
xchg
out
add
movsb
int
int
mov
sbb
jno
lock
cmp
and
and
and
lret
inc
adc
sbb
jbe
jecxz
mov
mov
or
push
xchg
or
push
mov
mov
aaa
mov
cmp
mov
lock
mov
push
imul
mov
out
jb
int
lea
sub
sub
dec
dec
je
push
pop
dec
insb
pop
aam
call
jns
cwtl
aaa
mov
or
dec
fwait
sub
icebp
inc
mov
iret
xor
jg
xor
mov
dec
xor
mov
cwtl
xor
mov
inc
sar
and
and
push
jl
pop
pop
jge
pop
fists
cwtl
xchg
clc
fistl
jp
mov
out
stc
lds
inc
mov
sub
gs
or
gs
jo
jge
scas
sahf
mov
das
push
popf
aad
xorl
rorb
rorb
outsb
pop
push
leave
test
nop
int
cltd
out
mov
mov
loope
sbbb
push
mov
nop
dec
loopne
dec
fdivrl
imul
out
out
jl
leave
stc
xchg
jbe
imul
adc
jg
mov
repz
pop
cmc
in
mov
pop
test
rcrb
push
cmpl
push
testb
xchg
test
lahf
mov
push
xor
mov
push
enter
enter
add
rorb
sahf
test
xchg
cmp
mov
pop
shll
mov
lcall
jno
bnd
cmp
or
in
push
imull
fldt
mov
dec
add
xor
stos
arpl
push
lcall
sbb
sub
xlat
inc
jno
out
pop
lock
stos
add
sub
xchg
sbb
xor
mov
clc
out
xchg
pop
rorb
pop
les
add
mov
inc
jmp
mov
xor
and
cs
sub
insb
roll
ret
cmp
popf
xlat
testb
mov
daa
adc
mov
xor
ret
ds
popf
nop
sarl
inc
cmp
aam
xor
adc
and
insb
sbb
push
enter
inc
xchg
sbb
and
sub
std
mov
test
stc
push
inc
pop
mov
dec
xor
xchg
pop
mov
fcmove
cmp
mov
pop
pop
jo
add
cld
stc
xchg
or
aad
add
xchg
stos
or
mov
pop
mov
inc
push
test
pop
inc
adc
xor
cmp
push
addr16
push
mov
mov
mov
push
mov
mov
push
data16
imul
mov
sbb
scas
imul
xlat
dec
mov
jl
push
or
jl
dec
pop
and
xchg
sbb
mov
and
sbb
xchg
call
ss
leave
mov
jp
jnp
arpl
int3
fsubr
rorb
ror
xor
pop
dec
hlt
pop
xchg
bound
mov
outsb
lret
sbb
scas
pop
and
mov
pop
out
scas
push
fcmovnbe
jg
jmp
fnstsw
pop
pushf
push
mov
pop
loopne
mov
inc
inc
ror
mov
rorl
dec
xor
dec
pop
jmp
mov
in
sbb
outsb
mov
xchg
outsb
jo
mov
popf
add
int
jmp
es
in
ja
fs
push
repnz
push
shll
jae
cltd
pop
xchg
fcmovnu
xchg
mov
leave
ja
stos
les
fmul
and
jae
push
fstl
xor
mov
fcoms
xchg
add
add
jmpw
loope
out
cli
es
cmp
add
mov
aam
outsb
imul
inc
sub
sbb
pop
out
mov
lds
bnd
pop
out
incb
shlb
int3
into
cmp
jbe
fisttps
pop
std
scas
add
cmp
jge
xchg
mov
daa
mov
aad
fadds
outsb
push
cwtl
enter
dec
jecxz
inc
add
sbb
push
mov
cmpsb
dec
jo
icebp
lea
out
mov
push
add
xchg
iret
inc
cmpl
cltd
fisubrl
lds
mov
fstpl
or
clc
imul
loopne
jg
outsb
je,pn
bound
and
ja
test
jne
int3
mov
pop
dec
cmp
inc
dec
lcall
fisubrl
pop
and
nop
jbe
lret
nop
adc
sub
inc
popw
push
sbb
pop
jns
inc
jge
mov
pop
mov
mov
je
cmpsb
in
ljmp
mov
push
push
mov
insb
cmc
fisttpll
push
push
and
fidivrl
jle
movsl
dec
push
jns
out
xchg
js
cmpb
jg
mov
adc
movsl
fdivs
push
jle
cs
pop
lcall
inc
in
lds
into
adc
mov
inc
insb
mov
inc
jl
xor
push
cmp
fnstenv
jmp
icebp
adc
sub
mov
xchg
mov
mov
mov
enter
push
xchg
cltd
jmp
xchg
mov
pop
and
jnp
dec
pop
add
add
dec
pop
in
dec
xchg
gs
sbb
xchg
fs
arpl
jae
rcl
mov
mov
fnstenv
test
xor
xorl
ret
std
jo
fimull
add
fisubrl
xor
sbb
out
scas
fldt
sbb
sub
lret
sub
sub
and
insb
shl
sbb
js
fdiv
xor
fucomi
xor
jl
fldt
pusha
and
cmp
xrelease
mov
sahf
lahf
daa
push
rclb
mov
add
cmp
outsb
icebp
push
daa
add
jmp
and
test
inc
out
adc
pushf
mov
dec
repnz
shl
add
fdivl
add
cmp
incl
push
in
jns
sbb
xor
ret
cld
out
in
mov
aas
mov
sub
mov
std
mov
hlt
iret
inc
jl
daa
and
arpl
in
ret
cmp
imul
mov
movsb
adc
rorb
mov
adc
jne
mov
push
jge
and
out
rorl
cmp
or
fs
cli
dec
std
sub
xor
das
mov
pop
mov
mov
scas
xor
xchg
mov
pop
xchg
mov
sbb
loope
or
lea
xchg
nop
sub
and
sbb
and
stos
mov
or
xor
dec
mov
adc
dec
mov
int
aad
mov
test
fbld
lret
cmp
addr16
inc
add
in
push
push
push
mul
cmp
xchg
divb
jne
out
dec
in
xor
fimull
inc
gs
add
lds
stos
xchg
jo
loopne
and
inc
sub
dec
add
stos
cmc
and
push
cmp
push
sbb
test
ss
pop
pop
xorb
jecxz
xlat
inc
aaa
fucomip
adc
call
shll
mov
sahf
or
insb
dec
inc
mov
in
lea
outsb
adcb
xor
inc
fdivr
hlt
jb
or
jmp
inc
rol
lret
pop
pop
dec
fs
pop
orb
sub
pop
pop
mov
icebp
xchg
push
fs
sub
or
lea
in
outsb
xchg
or
lea
call
pop
daa
mulb
mov
mov
bound
ja
inc
inc
lcall
cmp
cmpsl
jmp
sbb
je
mov
add
ds
cmpsb
or
lret
or
bound
fstps
stos
mov
or
dec
repz
cmc
mov
jmp
stos
push
mov
pop
pop
les
xlat
jp
fdiv
iret
enter
inc
pusha
push
xchg
pop
jbe
pop
or
add
mov
leave
mov
mov
ret
push
fiadds
test
lds
and
lahf
adc
or
inc
out
mov
jno
add
add
mov
push
mov
dec
push
and
sahf
out
insb
mov
adc
icebp
insb
imul
pop
mov
pushf
dec
push
dec
add
sbb
int3
and
adc
pusha
xor
and
movsl
shrb
stc
push
ror
sbb
add
xorb
xchg
adc
fistps
stc
imul
mov
jmp
fisttpll
sub
jl
xor
inc
or
xchg
icebp
dec
push
lret
mov
int
add
jmp
xorb
fcompl
inc
mov
dec
in
ljmp
test
rclb
fstps
pop
sub
lods
sbb
push
pushf
loope
imul
jle
pop
mull
dec
sbb
or
std
mov
push
test
mov
fs
inc
lods
push
mov
jns
sbb
andb
aad
cltd
insl
rep
fs
push
add
movsb
popf
jo
lea
inc
sub
lret
nop
loop
jle
jmp
movb
sti
popf
fisttpl
mov
add
mov
sbb
dec
imul
or
jno
lahf
fwait
push
sub
fcomps
mov
jns
repnz
mov
rcrl
addl
aas
mov
insb
out
push
pusha
stc
bound
cmc
fst
xchg
repz
or
sbb
in
sub
or
xchg
ja
sbb
repnz
mov
les
jp
out
js
sti
out
sub
imul
sub
adc
pusha
mov
sub
mov
mov
bnd
pusha
and
call
mov
daa
dec
mov
push
inc
inc
test
and
cwtl
jecxz
and
shrl
xchg
ja
rorl
mov
mov
jo
sbb
outsb
xlat
xchg
jae
jae
jo
imul
idivl
lods
ds
call
pop
sbb
data16
aam
xchg
popa
outsl
xor
push
mov
fxch
xchg
lds
out
movsb
pop
stos
sbb
inc
pop
push
mov
or
cltd
sbb
jle
xorl
lcall
jno
fldl
xchg
cmc
inc
ret
sub
fstl
jne
jnp
xchg
cmpl
mov
mov
mov
mov
push
int3
adc
and
dec
xchg
inc
jecxz
and
aaa
xor
lahf
into
sbb
xchg
sti
mov
xchg
inc
scas
add
push
cwtl
into
jae
sbbb
sbb
jno
jae
mov
and
sub
add
xor
push
out
clc
sti
pop
mov
iret
popa
adc
cwtl
movsb
test
nop
push
add
and
push
mov
adc
in
inc
cmp
out
jne
add
cld
out
and
xor
cmp
push
dec
jle
imul
jae
push
iret
xor
add
mov
mov
pop
std
cmp
sbb
fistpl
imul
pusha
call
movsb
cmpsl
mov
sbb
and
push
and
mov
in
lods
scas
dec
cwtl
in
xchg
in
subb
gs
sahf
out
mov
mov
dec
test
cltd
rclb
or
test
test
inc
xchg
ret
loopne
subb
mov
bound
test
mov
and
push
sbb
adc
push
pop
lods
pop
or
mov
push
rcll
or
or
aas
ss
arpl
mov
jp
subb
xchg
cmp
push
fcoms
mov
sub
xor
in
add
or
rorl
sahf
mov
mov
pop
outsb
xchg
add
lret
jp
sbb
pop
insl
xchg
loopne
xchg
xchg
out
xor
popa
cltd
push
enter
or
xchg
push
sbb
inc
fs
pop
addr16
adc
popa
cmp
fbstp
cmp
in
xorl
int3
leave
insl
mov
jg
jns
test
cltd
addr16
xor
ficoms
sbb
fadds
pop
jne
movsl
mov
daa
xor
sbb
and
push
stos
adc
ljmp
int
pop
add
or
scas
sbb
mov
test
pop
movsb
mov
mov
ficoms
ret
test
xchg
mov
lahf
loop
test
xorb
sub
popa
pop
mov
inc
sub
insb
mov
cmpsl
and
push
inc
pusha
push
mov
jno
iret
inc
ja
sahf
andb
inc
fwait
sarb
imul
inc
loope
xor
dec
rcl
int3
add
xchg
clc
jbe
cmp
push
xor
xchg
push
and
sbb
sub
fmull
daa
xchg
dec
loope
jecxz
or
enter
mov
sbb
jnp
xchg
hlt
sarb
cmp
and
mov
sub
adc
sahf
inc
push
call
es
xchg
push
inc
sbb
xchg
mov
pop
in
jnp
dec
fildll
mov
imul
xor
inc
decb
loopne
jge
cltd
cmpsl
xor
xchg
insb
inc
jge
xchg
lock
imul
mov
add
add
ret
dec
jecxz
jle
aaa
imul
cld
jp
sarl
pop
inc
cld
popf
or
jne
pop
push
cmpsl
pop
das
pop
bound
out
jmp
shr
push
mov
jp
repnz
adc
cmp
mov
xchg
dec
xchg
int
jmp
jae
mov
cld
pop
scas
pushf
mov
fs
and
sub
iret
mov
in
js
js
mov
lret
pop
subl
lea
repz
out
dec
cld
xor
fstl
je
mov
je
push
into
add
mov
lahf
out
imul
xor
cltd
sbbb
xchg
jmp
jne
dec
sub
mov
enter
sbbl
sahf
shll
mov
sti
jno
ljmp
adc
sbb
loop
and
cmp
mov
sub
shrb
jge
mov
lcall
jbe
mov
sbb
mov
insl
ljmp
mov
sahf
xchg
xchg
adc
or
repz
inc
in
adc
fisttpl
test
pop
fwait
cld
clc
fiaddl
xor
and
pop
scas
mov
outsb
clts
sahf
push
mov
sbb
xor
xchg
mov
pusha
aas
rorl
ficoml
pop
push
int3
stc
dec
cwtl
scas
adc
push
nop
lcall
push
call
sub
dec
sar
xchg
stc
jns
sub
test
sarb
into
int3
or
jnp
cs
sti
test
loop
mov
inc
out
jl
scas
aad
jb
xchg
pop
fstpt
pop
adc
cs
arpl
ret
mov
and
pop
data16
mov
xor
lea
jo
fstps
cli
jno
mov
ss
shlb
in
mov
lret
pop
mov
movsl
inc
mov
jp
das
mov
mov
fists
out
sti
sbb
js
xor
mov
imul
push
push
or
mov
sub
sbb
dec
call
les
adc
jno
xorl
scas
mov
cmpsb
fst
add
dec
cmp
mov
xor
cmpsl
sbb
pop
jns
or
cmp
dec
xlat
mov
mov
call
or
in
inc
ja
jecxz
sub
lods
push
sub
loopne
sub
rep
jbe
cs
sbb
mov
loopne
fcoml
test
dec
mov
fcmove
dec
jnp
sbb
xchg
idivb
inc
and
test
fistps
sti
mov
cmp
out
dec
insb
icebp
mov
sub
mov
sbb
and
cwtl
decb
mov
int
and
xchg
and
ja
adc
notl
cmp
inc
jae
sub
push
enter
sarb
sub
pop
cmp
and
js
pop
dec
pusha
nop
cmp
mov
xchg
mov
mov
shrb
rcl
add
xchg
repnz
and
sbb
sahf
call
lret
pop
jns
arpl
jb
and
push
es
xor
sbb
push
cmpsl
clc
cld
lock
xorl
fchs
jmp
and
movsb
or
and
into
sbb
fstpl
shll
inc
movsb
cwtl
jl
je
cmp
add
div
mov
or
scas
sub
pop
pop
shl
bound
jno
jmp
cmp
xlat
xor
push
adcb
or
hlt
sbb
lahf
inc
inc
push
testl
int3
cmc
mov
sahf
push
mov
lea
pop
dec
mov
arpl
jmp
mov
mov
mov
jae
push
shrb
adc
mov
sahf
rolb
popf
push
movl
cmp
adc
hlt
outsl
mov
lods
xchg
stc
iret
insb
int3
gs
fdivr
jge
fdivl
adc
cmp
aas
aam
daa
sbb
scas
sub
sbb
int
adc
in
mov
push
stc
js
leave
or
jp
stos
movsl
sbb
ret
sbbl
fstpt
ret
in
imul
in
lea
sub
mov
push
xor
adc
inc
lock
bound
js
and
mov
addl
fucomip
in
mov
scas
roll
jle
insb
sub
pop
xchg
aas
cmpsl
insb
or
cld
orb
push
imul
int3
or
and
jp
mov
movsl
fmull
add
pop
cmp
jp
jecxz
mov
mov
int
mov
inc
dec
ds
jmp
test
sbb
in
adc
or
adc
jae
lret
mov
mov
jecxz
inc
add
negb
testb
in
cli
xorl
in
iret
sub
pop
ret
or
xchg
fsubp
insb
nop
out
daa
imul
and
int
cli
sbb
dec
lret
adc
jae
xchg
sbb
imulb
iret
ss
inc
fs
imul
das
lea
in
stos
das
pusha
add
sub
add
xchg
mov
arpl
and
dec
mov
mov
sbb
dec
sub
dec
gs
xchg
daa
cli
lock
xor
and
stos
lds
and
mov
dec
movsb
or
pop
sub
inc
bound
neg
xchg
xchg
cmpsb
std
inc
pop
test
mov
push
mov
sbb
int
jae
inc
sub
in
std
xchg
shl
xchg
xchg
lods
out
mov
lds
push
pop
test
ret
cld
iret
test
inc
insb
push
movsl
into
rol
push
movsb
jecxz
jno
shll
rorb
ljmp
leave
outsl
jne
addr16
test
imul
lcall
cwtl
shr
dec
pop
push
sub
icebp
inc
xchg
jnp
sbb
call
fists
notl
leave
sahf
xchg
inc
mov
push
es
in
xchg
fwait
sbb
sub
aam
jbe
push
icebp
mov
loopne
or
ja
aas
stos
in
cmp
outsb
out
out
ds
lods
adc
push
add
imul
in
mov
xchg
pop
clc
test
xchg
mov
lea
hlt
pop
nop
or
js
pop
jmp
add
mov
sub
sub
push
xor
in
mov
data16
es
fcmovnbe
sub
movsl
sahf
lods
adc
cmp
inc
xchg
sbb
sbb
mov
xchg
dec
push
or
or
fdivrs
das
push
adc
stos
cmp
xchg
sbb
and
mul
mov
das
mov
ret
std
cmp
int3
mov
push
je
adc
cmp
call
cmpsb
mov
mov
cmp
sbb
xor
inc
test
cmp
fucomp
movsl
dec
les
enter
insl
pop
test
ret
popa
jns
std
inc
idivl
test
frstor
shll
mov
rorb
xor
mov
inc
adc
jle
mov
jecxz
insl
add
mov
jbe
icebp
insl
outsl
test
ficompl
xchg
dec
jle
xchg
and
mov
fdivs
cmc
and
xor
sub
icebp
adc
pop
mov
pushf
addr16
outsl
ucomiss
in
jne
imul
pop
mov
arpl
and
and
cmp
or
adc
mov
pop
inc
sub
out
add
movsb
push
xchg
mov
jns
rolb
mov
je
sub
movsl
xor
and
or
movb
jno
orl
fwait
sahf
mov
jl
dec
mov
mov
sbb
adc
fdivs
jl
cmp
inc
jle
add
loope
jle
js
or
cld
adc
mov
incb
dec
inc
xchg
mov
jbe
push
fdiv
vmptrst
ret
mov
addr16
push
int3
xchg
push
adc
cli
les
lret
pop
mov
notrack
add
inc
jo
lods
adc
loope
sbb
lea
mov
aas
cmp
imul
pushf
add
pop
cwtl
pop
cmp
mov
mov
mov
imul
mov
mov
push
ja
dec
bound
push
addr16
ljmp
lret
pop
insb
adc
xchg
adcl
fsubrl
lea
push
add
xchg
dec
out
cld
cmpl
adc
xor
sbb
mov
scas
xor
adc
daa
xor
xor
stc
sub
add
jno
sub
icebp
pop
cmc
push
sarl
cmp
cld
iret
pop
mov
jecxz
repnz
clc
xchg
fisttps
mov
xor
lds
stc
sbb
dec
pop
shll
aas
and
loope
repnz
xchg
mov
sbbl
loopne
add
in
ss
and
lret
cs
lahf
sub
jnp
xor
roll
aam
and
rcrb
insl
push
mov
adc
cmpsl
imul
and
int3
or
or
or
dec
sbb
fs
imul
adc
loopne
jmp
in
jge
movsl
cwtl
xchg
aam
jb
cmpsl
stc
inc
pushf
xchg
pop
pop
jbe
jnp
in
sub
sbb
pop
push
mov
movsb
out
hlt
adc
sti
mov
inc
and
loope
pop
rol
lds
inc
int
pop
outsl
sbb
cmpsl
dec
jp
jbe
fcmovnbe
inc
jmp
rclb
mov
dec
imul
std
sahf
int3
adc
push
int
imul
into
imul
out
dec
ret
mov
push
xchg
and
in
cmp
jno
push
out
jge
pop
jecxz
mov
cmp
sub
xor
fs
ret
test
and
xlat
ret
fistpll
jp
jno
add
jmp
dec
in
ja
loopne
test
imul
and
fadds
jno
sti
sbb
lods
popf
aas
rcrb
add
lea
mov
or
mov
xchg
xchg
sub
andl
push
jmp
mov
jno
jns
sarb
push
call
iret
ljmp
in
and
sbb
add
add
mov
dec
fcoml
mov
nop
negl
and
dec
mov
insb
adc
pop
sti
xlat
cli
push
and
or
leave
lret
movsb
inc
mov
push
lods
mov
pushf
pop
xchg
pop
test
xchg
xor
push
adc
mov
adc
mov
push
adc
fwait
loopne
mov
sbb
test
imul
mov
cmp
push
or
cmp
dec
inc
xchg
push
negb
sbb
xor
push
out
test
and
sub
push
and
negb
loop
jne
mov
shr
jge
pop
movb
das
jbe
jle
lahf
ret
sub
push
lds
adc
sbb
push
in
pop
push
ljmp
add
fsubs
mov
fcompl
imul
jecxz
xor
and
data16
mov
pop
push
adc
jns
mov
je
hlt
repnz
pop
shll
lahf
repnz
enter
xchg
jge
bound
push
fcmovbe
test
pushf
xor
aaa
and
sbb
lds
lahf
sub
aad
pusha
repnz
cmp
cmp
dec
add
mov
fidivrs
cmpsb
arpl
cltd
jb
ss
jb
inc
push
sbb
ds
test
adc
int
out
mov
ffree
and
xor
sbb
xchg
jae
inc
repz
adc
ficomps
xor
mov
xchg
push
fwait
sbb
sbb
inc
xchg
mov
mov
xchg
lods
sbb
mov
sti
out
dec
stos
outsl
and
cltd
iret
xchg
inc
mov
add
adc
jo
call
and
cmc
mov
jae
test
shlb
mov
dec
or
mov
pop
pusha
mov
cmpsl
cmpsb
sub
lods
push
lods
stos
push
lds
arpl
push
xchg
cmp
or
jno
sbb
jecxz
jbe
fnstcw
addr16
sbbl
movb
pusha
es
and
xchg
add
mov
bound
sub
in
idivb
mov
in
mov
jge
cmp
add
fs
jge
ret
sbb
push
push
sub
xorl
push
jno
inc
andl
and
push
inc
test
inc
popa
fwait
ljmp
inc
mov
jb
scas
jne
add
xchg
dec
sub
inc
inc
xor
les
push
cmp
fisubrl
rorl
out
xor
and
mov
jg
scas
mov
hlt
pusha
inc
aad
mov
push
push
jle
je
test
xchg
adc
and
push
ds
aad
je
enter
ret
mov
fldl
fldcw
pop
mov
pop
es
out
minps
in
pop
inc
pop
push
test
inc
push
inc
lret
jne
mov
lds
add
adcl
pop
mov
lock
mov
inc
test
mov
dec
push
inc
fists
insb
gs
les
and
xchg
fcompl
out
jo
jbe
xchg
lcall
ficoml
xor
add
outsb
iret
xchg
or
inc
push
insl
mov
xchg
pusha
adc
sub
xchg
mov
js,pt
sub
add
inc
mov
loop
push
sbb
test
out
adc
mov
sub
ficompl
into
push
mov
xchg
jnp
add
and
pop
mov
cs
fbstp
lds
js
sbb
je
daa
les
cwtl
push
fisubs
sbb
sub
aad
mov
sti
cmpsl
sbb
test
addl
mov
movsb
mov
dec
out
test
adc
cmpsb
inc
xchg
cmpsb
adc
inc
mov
jo
fildll
xchg
psrlw
es
mov
mov
push
cwtl
into
jne
in
lods
mov
jecxz
ja
aam
or
sbb
dec
cmp
outsl
xor
mov
test
and
add
fld
pusha
in
nop
aad
and
fisubl
rcl
in
scas
lahf
dec
push
cmp
adc
sahf
hlt
or
inc
adc
in
dec
xchg
xchg
dec
es
xor
mov
dec
adc
mov
sbb
and
cmpsb
push
mov
sbb
jl
sbb
lcall
cmp
mov
loopne
xlat
add
ret
das
cmp
lock
push
dec
jle
sbb
fwait
lods
popw
mov
mov
jle
mov
pop
add
sub
cmp
outsb
xchg
sar
mov
movsb
mov
inc
lods
inc
fimuls
loopne
sbb
mov
frstor
es
mov
jl
dec
loopne
js
xchg
push
cmp
and
inc
mov
push
rcrb
push
loope
inc
mov
fistl
rdmsr
addr16
fstpl
mov
ret
sub
mov
insb
ja
push
jns
xchg
mov
fsubs
mov
jne
ret
pop
add
lock
add
into
jbe
dec
pop
loopne
in
dec
cwtl
sub
push
pop
icebp
mov
adc
enter
or
mov
cltd
insb
xor
fisubrl
mov
out
and
sbb
and
and
and
imul
mov
push
stos
stos
loopne
or
mov
mov
sub
data16
arpl
and
mov
jne
pusha
mov
imul
cmpsl
iret
rcrb
int3
inc
jge
stos
xor
iret
leave
jmp
or
popf
dec
xchg
lds
std
fstpt
cwtl
jle
mov
push
stc
inc
mov
gs
inc
out
mov
add
push
lret
or
xchg
mov
push
imull
mov
and
loopne
out
mov
idivl
pop
cmc
ja
ret
mov
in
in
rcll
mov
xorl
pop
add
jecxz
mov
xor
jo
stc
xor
test
pop
sbb
pusha
icebp
jnp
xchg
pop
mov
aas
pop
adc
mov
mov
adc
mov
ret
and
xchg
imul
xchg
pushf
push
andb
inc
mov
jno
repz
pop
jbe
jne
outsb
adc
lahf
mov
push
andb
mov
aaa
push
jb
mov
or
adc
push
insl
mov
and
insb
push
movsb
rorb
inc
xor
cmp
sti
and
cmpsb
sarl
sub
jl
pop
jg
pop
lcall
popa
push
pop
cmpsl
jg
popf
lock
cli
test
pusha
push
adc
je
mov
repnz
xlat
add
cld
adc
cmp
or
push
rcrb
std
fdiv
jbe
fdivs
mov
jbe
cmpsl
dec
test
notb
adc
cmc
xchg
sahf
subb
std
adc
cmpsl
pop
lret
lock
lret
jecxz
in
daa
cmpb
aas
rclb
lcall
into
adc
sbbl
xchg
hlt
add
mov
mov
insb
add
insb
push
out
test
lahf
jae
in
js
push
xchg
aas
pop
sbb
mov
gs
lret
out
pop
or
pop
negb
pop
into
mov
movl
and
ret
jns
sub
jmp
sub
mov
arpl
push
int3
sahf
scas
std
enter
jmp
mov
mov
jae
jle
lahf
or
das
cltd
xor
sbb
xlat
adc
xchg
dec
xor
inc
mov
inc
sub
clc
aad
fisubs
ret
or
ljmp
xchg
mov
notl
mov
pop
out
adc
dec
adc
xlat
lods
ds
nop
test
rol
dec
push
xchg
xor
mov
cmp
pop
sub
pop
sbb
scas
mov
gs
or
mov
out
or
push
call
sbb
out
call
ja
or
mov
jp
xchg
xor
aas
jmp
test
data16
mov
imul
shrb
pop
gs
sbb
sub
ret
sub
add
orb
mov
cmp
lock
rol
int
xor
jb
add
pop
inc
flds
test
xchg
incl
jnp
icebp
jbe
sbb
sbb
lcall
mov
jnp
jle
out
lock
push
mov
lds
push
xchg
cmpsb
xchg
cld
dec
adc
in
fwait
push
push
sub
or
icebp
stos
lahf
addr16
scas
shufps
iret
ja
add
stos
jns
sbb
das
int3
loopne
arpl
xchg
cmp
sahf
xchg
test
sahf
pop
lcall
cs
sub
sbb
mov
xor
or
mov
jg
stc
jl
std
xchg
aam
test
cld
inc
sub
mov
ret
pop
and
ret
aam
pop
fadd
inc
sbb
ss
mov
addb
pop
push
repnz
xchg
xor
dec
js
xor
push
adc
cmp
aad
cmpsl
dec
sub
das
pop
sbb
fldl
jge
or
aaa
xchg
cli
push
adc
leave
cmc
push
int3
in
push
push
loope
test
add
mov
mov
inc
mov
xchg
sahf
out
inc
dec
divb
rolb
jmp
mov
das
cwtl
mov
shlb
gs
mov
sub
out
adc
lds
mulb
dec
loopne
pop
es
or
dec
repnz
das
ficompl
inc
jl
xor
pop
push
fcmovnbe
cs
push
pusha
popf
mov
jo
pusha
cmpsl
mov
hlt
push
int
push
repz
popl
mov
and
pop
xor
lock
rolb
aad
adc
sbb
xchg
mov
fadds
out
or
sbb
and
aaa
cwtl
lods
call
scas
xor
inc
sub
nop
es
xchg
mov
sub
iret
sub
push
imul
inc
xor
jbe
fmul
sub
loopne
sbb
call
mov
leave
mov
repz
mov
xor
mov
and
mov
into
fisubl
dec
add
fsts
and
jg
cwtl
cmp
push
cmp
cld
sbb
movsl
adc
repz
adcl
das
addr16
cltd
out
popf
jne
pop
and
std
sbb
mov
scas
lret
inc
aam
push
jl
and
into
fistpll
cmp
pop
add
das
cltd
out
jnp
mov
idiv
xchg
popa
ror
nop
adc
push
in
movsl
subb
fucom
mov
jg
int
mov
sti
leave
nop
jge
shrb
mov
sub
stc
dec
lock
xchg
pop
or
adc
or
aam
push
stos
mov
lds
pop
roll
mov
push
inc
cmp
pop
pop
or
dec
jae
in
sub
mov
insb
push
push
shrl
dec
add
or
in
pop
rcrl
mov
sbb
adcl
std
xor
mov
sub
pop
icebp
jge
test
cmp
ret
or
jmp
sbb
test
xchg
aas
push
movsb
jg
lret
addps
sti
inc
repz
fnstenv
mov
lock
and
rcl
imul
inc
and
out
cmp
mov
push
out
dec
or
xchg
pop
push
add
fldcw
add
xor
mov
or
loopne
in
loope
dec
into
jg
add
push
pop
loop
xchg
jns
mov
rclb
inc
sbb
add
fildl
out
cwtl
push
jle
je
mov
xchg
shl
pop
or
je
push
ret
inc
loope
mov
int3
jno
insb
and
mov
outsl
imul
sub
adc
add
push
jnp
test
dec
lcall
aam
subb
mov
faddl
xchg
das
movsl
inc
push
cltd
or
or
mov
inc
dec
inc
xchg
aam
adc
xor
ljmp
call
jno
xor
jno
or
mov
jle
add
jnp
cltd
lcall
in
dec
jg
mov
sar
lret
xchg
xchg
lds
es
jge
out
jbe
js
pop
int
adc
xchg
ja
dec
dec
nop
pop
lret
adc
xorb
rclb
into
push
or
mov
cmp
notb
outsl
inc
fnsave
sbb
repz
ss
jne
addr16
jl
dec
mov
mov
subb
cmp
mov
push
ret
lret
push
cli
sbb
scas
sbb
cmpsb
stc
adc
xchg
xorl
adc
cmc
adc
cltd
dec
arpl
cltd
and
loope
test
cmpb
test
mov
pop
sbb
movsb
lds
out
lods
movsb
inc
jno
sub
sbb
loope
lods
shrl
shrl
jg
mov
aam
ret
xchg
pop
mov
cmpsl
jmp
dec
imul
jne
pop
cli
testl
fcom
stc
jno
jae
nop
leave
imul
in
fisubrl
mov
xchg
xchg
xchg
xchg
jae
add
jl
push
lea
mul
mov
in
push
cltd
loope
popf
sbbb
xlat
fmul
sub
cmp
rcrl
push
sahf
insb
and
mov
stos
xchg
inc
mov
xchg
mov
cmpsl
pop
lea
imul
cmpsb
or
aad
daa
nop
ljmp
fldenv
dec
scas
sub
sub
clc
outsb
pop
add
and
lret
icebp
sarl
dec
popa
test
inc
dec
adc
mov
xor
aas
cld
inc
cltd
repnz
lods
test
xchg
lds
xchg
je
xchg
cli
out
faddl
ret
add
mov
pop
mov
jo
push
stos
or
sub
int3
addr16
xor
jge
push
addr16
lods
ds
pop
inc
rclb
push
lods
cld
cmp
lahf
in
sub
fdivp
jo
imul
adc
xchg
fcomp
pop
dec
cmp
jns
jmp
js
mov
test
dec
fisubrs
sub
stc
cwtl
shll
jg
or
or
pop
data16
enter
mull
xchg
dec
jb
leave
sub
pop
dec
lods
sbb
nop
fsub
cmp
cmp
cmc
rcll
dec
cwtl
jae
aad
pop
fmull
jecxz
pop
jns
sbb
cmp
fcomps
jg
and
test
add
roll
xchg
das
popl
sti
push
leave
sub
jle
mov
jno
iret
gs
sbb
push
mov
popa
outsb
mov
sub
insl
inc
mov
push
xlat
incl
dec
in
stos
lods
add
test
jae
insl
je
jb
sbb
shl
jecxz
push
mov
ss
mov
add
cwtl
lahf
test
scas
out
fildll
in
leave
lret
adcb
dec
mov
rcll
pop
mov
sub
adc
ds
xchg
xlat
add
jg
imul
adc
jecxz
cmp
loopne
test
and
es
add
pop
insb
ds
jecxz
mov
cmp
loopne
enter
sbb
test
cmpsb
in
aad
hlt
mov
fadd
or
out
rcrb
fwait
rcll
xchg
fpatan
mov
cmc
adc
pop
or
add
xchg
orl
push
cmp
mov
adc
sbb
data16
out
pop
fistps
sbb
stos
ja
jle
xor
pop
mov
fisubl
jo
and
push
cli
cmpsl
xchg
dec
and
ss
mov
mov
sub
repnz
push
xorb
push
das
and
hlt
push
or
enter
lock
pop
aam
jg
xor
pusha
lock
stc
shlb
cwtl
ret
mov
gs
inc
mov
into
or
pop
pop
add
test
in
clc
sbbl
call
xor
adc
movsb
cmpsb
ss
mov
clc
rcrb
pushf
jl
ficoml
int3
scas
dec
insl
fsub
cmpsb
cmp
or
mulb
lods
repz
jmp
xorl
pop
ret
sbb
pop
jmp
push
dec
jb
out
pop
loope
xlat
and
lahf
int
mov
subl
pop
jle
cmpsl
lods
jae
mov
mov
jns
repz
xchg
nop
fs
pop
lahf
aaa
mov
in
xor
repnz
jp
pop
jg
out
lods
enter
test
jg
mov
ja
add
cld
mov
push
cmp
aas
imul
or
xor
jb
fwait
cmp
or
dec
cwtl
mov
mov
arpl
and
cmp
rcrl
mov
sub
sub
je
imul
push
mov
xchg
in
lcall
cmp
outsb
dec
sbb
inc
loope,pt
loop
cwtl
adc
push
pop
stc
mov
jmp
adc
ret
mov
data16
add
sti
jbe
mov
cs
adc
loop
ss
mov
inc
out
or
dec
mov
sldt
repnz
cmpxchg
jae
adc
out
test
sub
ss
jp
xchg
xchg
fcomps
mov
cmp
pop
stos
mov
sub
sbb
sub
stos
decl
xor
aas
cmp
subl
mov
xor
adc
lds
mov
cmpsb
in
and
dec
push
fs
pop
loopne
ret
jecxz
adc
imul
lret
mov
mov
mov
ficoml
mov
stc
mov
or
icebp
adc
sar
mov
out
push
inc
mov
push
cmc
sub
notl
fwait
clc
push
rcrb
ja
in
xor
push
pop
add
pop
cli
mov
push
rcrb
pop
jno
pop
xchg
mov
cmpsl
sub
pop
mov
mov
xor
xor
dec
int
xor
mov
xlat
lea
mov
sbb
fcoml
push
pop
orb
jg
cmp
mov
in
jb
stc
imul
xchg
movsl
sti
loop
lock
in
mov
inc
lahf
push
push
roll
cli
sti
cwtl
icebp
out
leave
and
push
inc
inc
lock
sub
pop
fimull
bound
fcoml
cmpsb
mov
lahf
punpckhwd
aad
inc
stc
pop
je
and
or
insb
jp
mov
cmp
pop
bound
jns
and
test
jge
lahf
int
and
addl
xchg
jno
cwtl
vmptrld
aam
add
scas
mov
add
jne
or
sub
popa
fildl
pushl
cld
or
mov
jle
inc
xchg
ret
ja
imul
imul
add
mov
push
push
aaa
push
jbe
xor
xlat
mov
lret
push
pop
ficomps
fildll
pushf
jne
aaa
lret
xchg
and
jl
aas
pop
stos
mov
mov
and
imul
sub
sbb
inc
sahf
mov
inc
jle
ret
jns,pt
out
push
sahf
push
add
stc
mov
jb
dec
addr16
inc
stc
xchg
and
lods
fdivrl
rclb
pop
cmp
mov
add
loop
aad
nop
int
in
sbb
xor
jb
push
movsb
jp
mov
popf
insb
sbb
mov
flds
mov
movsl
ds
adc
out
sbb
loopne
cmp
cmpsb
jno
xlat
push
xchg
rclb
cs
insl
push
lock
xchg
xor
loope
xor
dec
out
xchg
scas
popf
imul
lds
inc
dec
jb
mov
mov
scas
in
popa
jecxz
sub
sbb
imul
or
je
mulb
and
adc
dec
pop
pop
xchg
bound
aaa
adc
aam
mov
and
js
dec
jnp
aas
pusha
les
and
sub
push
call
jmp
pop
or
movl
movsl
dec
std
or
loope
sti
out
push
std
lock
inc
mov
das
sarl
dec
xlat
push
pop
inc
shrl
jne
es
inc
imul
adc
cmp
sbb
shll
imul
sub
in
ljmp
mov
push
int3
ds
popa
xchg
je
fcomi
or
popa
in
mov
push
aas
xor
and
dec
inc
xchg
jp
push
xchg
push
push
dec
or
fildl
push
insl
cltd
inc
mov
mov
push
ret
pop
js
aas
push
add
cmpsl
xchg
xchg
popf
dec
fwait
xor
jp
push
xor
push
sbb
das
mov
adc
sbb
insb
es
xchg
xchg
rolb
jge
pop
add
mov
int
inc
or
xorb
adc
pop
int3
fidivl
add
cwtl
loope
js
push
pop
ljmp
neg
cmpsb
test
pop
cmp
js
sti
lcall
and
or
int3
mov
aam
mov
lods
push
nop
std
xor
mov
adc
sti
sti
and
test
push
jno
scas
jo
and
out
subl
out
pop
loopne
stc
dec
lcall
jl
xor
xor
mov
xor
and
xorb
fisttpll
leave
xchg
fdivs
sbb
or
mov
xchg
movsb
sti
fldt
int3
mov
cmp
imul
sbb
jg
stos
adc
sbb
dec
mov
test
outsb
cs
and
scas
pop
cwtl
xor
mov
je
sbb
scas
idivb
dec
loope
sub
and
hlt
gs
mov
mov
cltd
mov
or
imul
stos
rolb
mov
sbb
sub
enter
ljmp
sub
inc
cmpsl
push
add
test
cmp
scas
fsubs
lods
xor
ret
movsb
and
fld
xchg
and
aad
jns
pop
pop
xor
mov
push
push
shlb
hlt
jmp
call
adc
pop
pop
popa
mov
inc
lea
clc
sbb
xor
push
cmp
hlt
repnz
mov
sbb
mov
scas
fwait
jge
push
stos
ds
lret
xor
xor
daa
pop
pop
mov
dec
sbb
out
dec
mov
push
popf
xor
ret
mov
mov
xchg
movsl
jae
jmp
imul
sub
cmpb
scas
push
dec
and
push
mov
inc
mov
pusha
hlt
add
imul
jne
shll
inc
xchg
into
sub
in
inc
jle
hlt
xchg
sahf
inc
shl
or
outsl
scas
xchg
dec
push
inc
cltd
jl
pop
jecxz
in
je
movsl
shlb
mov
out
cmp
sarl
movd
test
jmp
jns
aad
and
mov
xchg
cmp
scas
pop
and
xor
sub
mov
imul
pop
dec
add
inc
pop
or
shlb
divl
into
push
jnp
inc
sbbl
add
dec
test
out
jecxz
sbb
cmp
clc
fstps
mov
popa
shll
pop
inc
inc
iret
xchg
inc
pop
negl
jns
jl
or
mov
inc
mov
out
out
into
fisubrs
sub
loopne
xchg
aam
xchg
add
cli
cltd
jle,pn
pusha
mov
push
mov
push
push
shr
rorl
and
aam
and
stc
in
inc
clc
imul
insl
jno
adc
mov
enter
enter
jno
cmp
xchg
cmp
pop
dec
loopne
das
pop
bound
std
mov
inc
jnp
adc
cmpsb
in
iret
mov
mov
pushf
outsl
xchg
mov
cmp
icebp
cmp
std
xchg
mov
pop
sub
jno
mov
fildll
add
adc
out
mov
jg
in
icebp
dec
ret
xor
mov
inc
xchg
inc
lods
leave
inc
lahf
arpl
jno
lret
jp
test
test
add
jge
dec
and
int3
fstpl
inc
fiaddl
out
dec
mov
and
cld
cmc
clc
cmp
rcl
pusha
popa
out
hlt
adc
ret
cld
push
movsl
negb
mov
gs
mov
lods
push
pop
mov
xadd
repnz
pop
inc
adc
fs
rclb
int3
jmp
aam
repnz
xor
pop
mov
dec
movsb
imul
call
mov
xchg
fadds
jne
xorl
cli
jnp
popf
xchg
and
xor
sub
dec
lods
lods
xor
mov
in
xchg
cmc
pop
cmp
pushf
mov
or
cmp
fmul
mov
ds
xchg
xorb
cmp
inc
adc
notb
or
movsl
xchg
cmpsl
insb
push
mov
sarb
imul
cld
xchg
mov
push
mov
insb
jmp
add
adc
cs
mov
movsb
pusha
cmp
jno
ret
push
ret
mov
ficomps
dec
adc
insl
outsl
push
push
xor
xchg
test
push
push
cmp
dec
cmpb
adc
or
ljmp
mov
cmc
adc
subl
xorb
inc
mov
pop
mov
push
xchg
pop
add
xchg
push
mov
movsl
sub
test
movsb
pop
aad
pop
or
pop
out
test
push
fstps
push
outsl
data16
test
nop
test
dec
xchg
cmp
mov
call
and
imul
cwtl
jge
les
cmp
sbb
ss
mov
outsl
jge
and
jae
push
push
js
mov
mov
adc
sbb
xor
ja
add
xor
stc
mov
and
fucom
cmp
sbb
fnsave
shrb
mov
call
dec
loopw
mov
mov
xchg
vmwrite
mov
ja
ret
inc
cmpsb
mov
sbb
popa
add
loop
pop
aad
xchg
jmp
pop
lret
test
bound
dec
xchg
push
cltd
fnsave
pop
leave
mov
xchg
jl
pusha
push
sbb
scas
pushf
sub
cmc
pop
jge
fldl
sub
inc
mov
sub
pop
loopne
rclb
push
aas
pop
xor
xor
adc
test
and
cltd
das
lcall
and
cmp
ljmp
cwtl
and
and
sub
xor
sub
fidivrl
sbb
insl
loope
adc
in
inc
push
clc
mov
fidivs
daa
data16
push
mov
jl
xor
pusha
mov
xchg
movq
xchg
sbb
fxch
xchg
lahf
add
sahf
por
pop
sub
inc
xor
push
cld
or
popa
push
jns
jno
push
pop
push
mov
jp
std
or
fstpl
ljmp
jg
aam
int
ja
push
ja
add
add
push
and
popa
out
inc
movaps
dec
and
push
and
xor
push
aad
js
insb
pop
outsb
mov
out
xor
cli
dec
roll
sahf
mov
pop
sbb
pushl
cmp
cld
lods
lret
popa
inc
aas
push
inc
testb
notl
xor
mov
ss
sbb
xchg
or
inc
lds
test
jge
pop
scas
sub
lret
insb
popf
jb
push
xchg
or
les
add
leave
cs
dec
add
jmp
jl
out
out
push
add
xchg
icebp
xchg
sar
iret
rcrl
inc
fldenv
mov
shll
mov
inc
pop
mov
mov
out
lcall
lcall
and
dec
ss
xchg
fidivrl
into
jmp
lods
dec
xor
cmp
inc
aad
pop
std
inc
push
cmp
fs
pop
jl
mov
fnsave
mov
adcl
mov
cli
adc
push
lods
jne
xchg
ss
popa
or
jnp
mov
call
sbbl
into
pusha
fidivrs
scas
inc
inc
adc
push
mov
adc
xchg
and
xchg
lods
loop
lret
test
sahf
jg
mov
sbb
sub
sbb
std
jno
ss
call
cld
negb
adc
mov
xchg
lea
jo
lods
test
xchg
push
ds
sahf
orl
xchg
cltd
int
add
mov
imul
mov
xchg
out
sbb
loopne
insb
pop
jae
xorb
jo
sbb
cltd
cmp
xor
cmp
xor
lea
jmp
jno
and
xchg
mov
add
add
popf
aaa
dec
adc
xchg
scas
pop
js
push
add
in
add
mov
mov
inc
add
add
lcall
out
test
loope
pop
sbb
cmc
dec
popf
aas
pop
mov
jne
in
iret
and
subb
mov
push
dec
adc
push
call
jmp
mov
xor
lods
ss
enter
inc
and
faddp
adcl
daa
pop
in
or
dec
stc
es
data16
lock
popa
ss
aas
cmpsl
xor
fbld
sbb
jmp
ljmp
mov
mov
mov
push
cmp
std
jmp
ret
ss
aad
das
push
xor
js
sbb
cltd
mov
add
or
inc
jo
push
jecxz
sub
pop
call
movsl
arpl
inc
es
aam
dec
adc
fs
dec
cmpsb
sbb
rolb
fbstp
inc
cmp
dec
lret
mov
dec
repnz
cmp
rcr
xor
mov
jns
dec
push
gs
insl
cli
jae
jae
icebp
mov
cmc
outsb
in
mov
addr16
jb
rcll
fsubrs
pop
notb
pop
rcl
fidivs
xor
aas
dec
adc
adc
cvtps2pi
cmp
scas
xchg
pop
mov
in
or
subb
cwtl
pop
pushf
pop
imul
xchg
cmpb
inc
add
icebp
push
enter
movsb
dec
sbb
pop
jp
test
sub
pop
or
out
adc
lock
movsl
xchg
test
test
or
mov
add
push
lods
subb
leave
cwtl
inc
in
out
adc
pop
imul
jne
cld
mov
ret
ja
push
fwait
or
push
jae
mov
mov
call
push
sub
sbb
or
pop
repz
rolb
imul
adc
fistl
insl
push
in
cs
adc
inc
ret
ret
adc
cli
test
or
repz
insb
cld
test
push
mov
int3
sub
lcall
loopne
sbb
inc
sbb
outsl
repz
pop
fs
in
lds
inc
mov
push
mov
xchg
bound
and
adc
jle
aad
and
fidivrs
ret
sbb
jmp
cmpsb
and
daa
jecxz
or
loop
mov
insb
test
xchg
mov
pop
mov
xchg
lods
xor
push
movsb
or
mov
adc
jno
fsts
push
xor
cmp
stos
cld
sub
mov
mov
xor
dec
sub
sub
adc
mov
pop
nop
loop
je
inc
stos
sbb
or
gs
dec
inc
repnz
aas
xor
loop
or
roll
cmp
cmp
mov
mov
cmpsl
ljmp
cmc
out
call
cmp
repnz
sahf
or
sub
aam
and
fistpl
sub
sbb
jmp
repnz
pop
mov
stc
add
stos
popa
imul
cmp
jne
out
test
movb
repz
pushl
mov
lcall
insl
xchg
ret
outsb
push
stc
data16
push
jns
adc
push
and
xchg
rcr
cmp
test
add
sub
add
test
divl
fs
leave
imul
cmp
cmpsl
dec
adc
call
pop
mov
inc
test
mov
imul
push
pop
push
add
hlt
push
and
int3
sub
or
dec
paddq
pop
std
sbb
cmp
jg
test
mov
hlt
out
cmp
cmp
fidivs
rdmsr
mov
jae
call
negl
lods
mov
jo
outsl
xchg
push
jl
ficomps
sbbl
push
jecxz
xchg
repnz
sbbl
sbb
mov
jnp
cmp
sar
imul
test
test
bswap
jo
mov
adcl
xchg
mov
pop
ss
ljmp
popa
xor
in
loope
mov
and
and
xchg
sub
mov
inc
roll
pushf
push
and
inc
add
adc
bound
sub
jns
hlt
or
and
aam
pslld
mov
lahf
sbb
lock
in
in
cmpsb
aas
cmc
out
and
test
cmpsb
dec
inc
mov
in
and
or
inc
push
ret
cmp
ja
pop
daa
sub
pop
fldl2e
push
enter
std
and
aaa
fidivrl
das
int3
fidivrl
push
push
jne
aaa
add
jle
jns
dec
gs
rol
movsl
sbb
jae
loope
xchg
cmp
jne
inc
lds
add
lcall
jbe
insb
imul
aam
add
outsl
xchg
lea
or
jno
test
sarb
mov
push
jno
xchg
scas
and
jbe
sarb
jge
cwtl
orb
in
test
and
repz
xchg
inc
or
mov
mov
pop
dec
xor
aad
sub
mov
iret
loop
pop
mov
mov
es
shlb
mov
push
cwtl
push
arpl
or
data16
mov
call
mov
cltd
sbb
jmp
popa
lret
ret
stos
adc
test
push
js
pop
xor
mov
dec
cs
out
cli
push
cs
or
fsubl
icebp
jbe
imul
cmp
leave
mov
push
in
add
push
jge
pusha
inc
xlat
in
insl
popf
sar
jnp
or
xor
jle
outsb
aaa
insb
sub
repz
fisubl
je
mov
pop
cs
push
xor
loope
adc
jne
stc
and
mov
imul
negb
scas
dec
sbb
inc
stc
jle
fs
dec
jns
lds
add
lret
jle
sub
push
mov
shlb
lock
sar
xor
popf
scas
addb
cs
xchg
pop
popf
cwtl
mov
out
pop
repnz
je
cmc
sub
rcr
insl
xlat
movb
scas
ret
aas
jmp
mov
inc
add
or
in
inc
lock
mov
pushf
cld
pop
fldl
jmp
jmp
cmp
outsb
lods
outsb
jmp
push
bound
and
sub
daa
sbbl
xor
andl
xorl
jge
rcr
push
xor
pop
pop
dec
out
pusha
jle
push
sub
sbb
add
rcl
cmp
or
imul
clc
lods
loopne
jl
push
test
insb
xchg
clc
sbb
cmp
xorl
cld
fdivrs
sub
jp
add
xadd
sub
fbld
imul
call
jle
addb
cmp
ficompl
test
jno
jns
inc
loopne
dec
pop
dec
stc
js
dec
or
adc
cmp
and
rorb
inc
ret
and
ja
dec
clc
lea
sti
ja
xchg
xor
xor
push
test
ja
lea
out
or
mov
iret
push
mov
adc
adc
mov
loop
imul
out
outsb
movsl
in
movsl
or
mov
addb
mov
adc
or
mov
sbb
rorl
adc
push
ret
lods
lods
mov
sub
shlb
jg
fistl
sahf
add
insl
clc
adc
psubusw
and
rorl
icebp
sbbl
adc
cs
popa
cmp
test
dec
repnz
xchg
fsubrs
les
lods
cmc
adc
jo
fldt
inc
nop
xor
into
repnz
and
icebp
xchg
div
push
cmp
inc
cli
lea
mov
testb
add
add
cmp
faddl
adc
dec
jp
and
rorb
popa
lods
cmp
fcmovbe
push
test
pop
pop
jge
xchg
xor
outsb
insl
xchg
sbb
out
jno
pop
dec
xor
aas
in
xor
sub
xchg
mov
jcxz
xchg
mov
in
cmc
push
push
add
cmp
test
lret
cltd
loopne
gs
fistpll
inc
sbb
gs
fdivr
ja
mov
push
and
sbb
sarb
rcr
imul
dec
imul
adc
lret
pusha
cmpsb
cmp
mov
repz
mov
std
push
ljmp
sub
out
mov
insb
pushf
pop
es
push
imul
lcall
pop
cmp
jb
or
sti
cltd
mov
inc
cmc
and
stos
dec
sbb
stos
mov
lds
mull
inc
mov
addb
cmp
fstl
add
rcll
mov
xchg
adc
in
ret
scas
and
andb
dec
jecxz
cmp
mov
arpl
decl
xor
pop
adc
ds
jbe
loop
outsl
sbb
mov
outsb
pop
adc
mov
mov
sti
mov
xor
jns
adc
xchg
pop
hlt
mov
add
mov
add
repnz
in
imul
je
test
pop
dec
loopne
sub
in
mov
sub
mov
sbb
loop
lods
mov
cmp
push
push
divl
dec
sahf
call
repnz
jbe
xchg
test
arpl
test
es
fnsave
and
aaa
lock
jno
xchg
push
pop
inc
repz
xor
aad
in
sub
fildl
sbb
inc
ds
jno
pop
mov
jae
xchg
outsl
push
mov
xchg
lret
cmp
or
out
idivb
into
push
sub
sub
sbb
sbb
pop
daa
dec
rol
mov
jecxz
outsl
xchg
mov
cld
add
jg
dec
jns
cmc
rorb
arpl
mov
mov
hlt
sbb
jne
test
pushf
and
aam
addr16
es
lea
push
test
jo
pop
and
xchg
push
pop
sbb
lods
enter
or
sub
add
push
pop
inc
cmpsl
dec
dec
inc
repz
jmp
jae
pop
jge
adc
in
or
sbb
mov
in
fstl
mov
call
mov
mov
popa
xchg
xchg
sbb
movsl
in
stc
popf
mov
cwtl
cltd
mov
xchg
pusha
fs
call
xor
loopne
adc
sti
dec
sub
inc
mov
pusha
out
ficoms
ret
xchg
lds
fmul
pop
lods
cmp
jno
ja
outsl
push
cmp
pop
fsubp
clc
mov
decb
sbb
sbbl
push
pop
push
cs
dec
pop
push
push
lods
cmp
ret
push
xchg
pusha
movsb
stos
cmpb
push
inc
jmp
shrl
es
ret
nop
imul
lods
fbstp
test
pop
xchg
ljmp
rclb
rcrl
or
arpl
mov
mov
jb
jp
add
fisubs
in
js
sub
xor
add
jle
sbb
leave
jp
mov
aad
push
in
mov
sbb
xor
adc
sub
push
aam
std
cmpsl
lahf
addr16
pop
fisubs
mov
mov
mov
jne
insb
data16
dec
add
pushf
lea
mov
jnp
adc
ds
sbb
pop
mov
inc
dec
add
or
pop
ljmp
jp
aaa
or
mov
xchg
xchg
sub
test
pop
add
xchg
aas
rcrb
push
xchg
ret
and
xor
adc
fcmovnb
or
das
pslld
xor
nopl
cs
pop
add
faddl
cmpsb
cmpsl
jns
daa
xchg
mov
add
sub
ja
or
cmpsb
jbe
adc
in
ret
mov
pop
xlat
pop
je
sub
fstpl
push
mov
lret
lcall
inc
mov
filds
je
pop
sub
xlat
adc
mov
jecxz
and
fmul
push
adc
roll
sbb
sub
movsl
arpl
fdivr
push
inc
inc
mov
mov
popa
mov
mov
cs
je
out
adc
jb
xchg
pop
movsb
dec
xchg
xor
mov
addr16
pop
test
ficoml
sub
mov
leave
jae
cltd
dec
push
sub
out
iret
add
xlat
mov
or
shll
mov
fcomip
mov
xor
xchg
mov
xorb
and
xchg
movsb
fdivl
out
out
gs
loope
mov
pop
add
roll
push
dec
les
push
pusha
sub
mov
add
jo
xchg
jne
int3
rolb
dec
push
lock
cmp
sub
aas
add
pop
in
xchg
sbb
jecxz
sbb
jo
mov
xchg
cmp
dec
fs
data16
test
clc
and
sbb
mov
cmp
adc
test
jne
and
pushf
dec
lahf
xor
mov
mov
ret
xchg
xorb
adcb
ss
stos
inc
sbb
in
dec
cltd
sub
cmpsl
lcall
and
inc
jmp
add
xchg
arpl
leave
aad
addr16
push
inc
push
out
jns
dec
sub
in
and
lcall
aas
cmc
pop
pushf
movsb
push
cmpsb
jnp
jecxz
gs
fsubrs
push
cltd
pop
leave
paddusw
into
repz
inc
add
leave
or
insb
dec
repz
aas
jg
pop
xor
cwtl
rcrb
jbe
lea
lcall
mov
leave
fcmove
or
push
xor
and
push
popa
push
stos
xor
mov
pop
dec
or
pop
jg
fmul
sub
es
mov
loope
push
jecxz
pusha
movsl
aaa
in
cmp
lock
cmpsb
or
ljmp
xor
outsb
dec
sbbb
push
xchg
shrb
or
push
icebp
fidivs
mov
shlb
clc
xchg
sub
and
test
sub
mov
or
add
aas
push
jl
sub
shlb
outsb
out
outsb
js
mov
cld
repnz
and
xor
xchg
cli
mov
jmp
out
mov
scas
pop
dec
sub
outsl
test
outsb
xor
scas
push
jmp
fisttpll
movsb
in
push
out
cmp
divb
rcll
jbe
pop
add
rorl
rorb
arpl
push
popf
ret
dec
cmp
mov
cld
sarb
or
shlb
push
mov
mov
jb
or
pop
xchg
ljmp
xchg
cmp
jae
push
mov
sub
sbb
fistps
jecxz
dec
jno
push
push
jb
pop
insb
pop
or
sahf
in
enter
out
insb
mov
cmp
cs
xchg
push
lods
push
jmp
jnp
sbb
mov
jne
mov
les
lds
loopne
xor
jmp
rol
je
leave
adc
xchg
jg
pop
adc
je
or
stc
or
mov
addr16
xchg
inc
adc
add
sbb
and
push
dec
lds
mov
and
aaa
es
dec
lret
les
and
mov
add
loop
adcl
addb
mov
test
orps
mov
inc
mov
cmp
loope
add
jmp
fldenv
pop
cld
or
cmpsb
std
xor
or
fchs
popf
push
add
loope
mov
inc
xor
mov
fidivrl
std
mov
scas
dec
std
fnsave
int3
or
jmp
cwtl
jge
xor
scas
pushf
fidivrl
nop
inc
jnp
or
cmp
popa
jae
in
pop
mov
daa
adc
lea
rcll
push
mulb
sbb
leave
jl
adc
inc
int3
aad
add
fs
jb
hlt
xor
adc
jp
sub
test
in
lds
fs
xor
fmull
lahf
test
mov
fsubrs
adc
call
lret
mov
ss
and
clc
jl
mov
pop
adc
aad
in
lds
mov
std
lods
je
and
iret
dec
mov
jle
jmp
testb
dec
pop
jle
shll
rolb
rorl
jmp
mov
lcall
dec
jb
jp
int3
repnz
arpl
sbb
jle
pop
pop
outsb
out
xor
cmp
xor
aaa
testb
rolb
test
inc
mov
leave
inc
sub
mov
adc
test
sub
fisubrl
stc
adc
and
cmp
pushf
pop
sbb
leave
jl
or
ljmp
addr16
movsb
loop
jb
mov
fcmovu
sahf
ja
shll
push
aam
add
push
sahf
mov
test
adc
ds
shlb
add
unpckhps
cmpsl
into
push
aas
inc
add
in
pop
pop
inc
dec
movsb
nop
sti
loope
lds
add
lret
call
adc
rorl
jmp
inc
fcomps
jne
dec
lret
mov
mov
lock
adc
xchg
mov
insb
adc
xchg
mov
in
lock
ljmp
aad
push
scas
aas
or
test
mov
pop
push
adc
cwtl
inc
push
out
cmp
je
push
popa
enter
pop
bound
insl
jb
cmp
jb
dec
pushf
jne
pop
jb
repnz
mov
rcrb
cmp
xchg
adc
push
push
cld
popf
cmp
test
sbb
pop
call
rorl
fdivrl
out
pop
cltd
pushw
sub
mov
in
in
mov
sbb
repz
ret
aam
fsubr
cltd
lcall
dec
into
push
and
inc
adc
cli
mov
les
arpl
testb
lcall
and
out
mov
inc
stos
sub
sahf
in
icebp
add
les
scas
cmpsl
clc
repz
jle
stos
inc
das
or
xor
push
outsb
test
jp
jb
je
fimull
push
mov
daa
adc
sub
pop
fs
iret
vpunpckldq
push
xchg
ficomps
and
pop
mov
lods
mov
cld
inc
and
mov
test
push
jl
js
rcll
fadds
mov
out
pop
add
xchg
sbb
lock
mov
or
or
mov
jb
pop
sbb
mov
ja
inc
xchg
test
add
mov
and
cwtl
outsb
or
mov
or
sbb
mov
aaa
cmp
jns
orb
scas
ret
sub
lods
lret
jb
and
iret
cmp
add
addb
xchg
je
test
xlat
jmp
push
repnz
dec
xor
out
mov
pop
imul
push
fwait
dec
xor
add
out
sahf
cmp
inc
jns
fimuls
mov
or
inc
divb
adc
fisttpl
into
fisubrs
xor
mov
or
jnp
outsb
fisubl
push
movsb
dec
gs
inc
ret
jecxz
es
and
pushf
fstl
pop
js
movsb
mov
mov
mov
repnz
or
mov
aam
or
mov
divb
cmpsl
xchg
lods
jmp
xlat
xchg
xchg
and
stos
sub
xchg
repz
xchg
scas
pop
arpl
fdivs
xor
rorl
stos
xchg
lods
xchg
ljmp
jge
andb
pop
stc
es
pop
xor
daa
inc
lods
arpl
xchg
push
arpl
push
std
sbb
pushl
xchg
push
lock
and
shlb
movsl
test
cmpsl
dec
cmc
mov
das
inc
in
lock
fucom
sub
sahf
or
cltd
mov
inc
cmp
dec
push
call
sar
movsl
arpl
nop
mov
rcl
stos
out
insl
ror
push
cmp
jl
adc
and
xchg
sub
adc
lock
scas
push
inc
or
jnp
pop
or
fdivs
rol
add
fistpl
mov
mov
jnp
std
das
pop
mull
in
je
test
jmp
push
push
push
add
or
fimuls
push
enter
adc
inc
xchg
mov
cmp
lods
pop
jle
in
out
dec
pushf
andl
cmp
mov
mov
adc
and
mov
fs
sbb
es
cmp
pop
sbb
mov
jae
dec
ds
movsl
add
adc
fcomps
pop
into
ret
fstpl
negl
mov
xor
jo
dec
dec
adc
nop
dec
fistl
mov
ja
insb
mov
pushf
jne
inc
imul
inc
push
xchg
movl
movsl
in
icebp
rorb
aas
xorb
repnz
jg
and
out
fildll
jae
inc
xchg
mov
pop
sub
gs
pop
cmp
or
popf
inc
adcl
int3
lret
shlb
jno
adc
sar
lret
inc
pop
aaa
das
loopne
push
xchg
test
test
mov
test
dec
nop
mov
ljmp
sub
call
in
cmp
cmc
in
inc
mov
fisubrs
pop
jnp
push
loop
xor
mov
jae
insb
xor
shlb
sbb
jbe
mov
or
gs
dec
enter
cltd
pop
enter
sub
xchg
fnstcw
xor
lret
stos
ja
pop
je
add
mov
dec
and
adc
push
jno
es
adc
call
shl
inc
repnz
loop
pop
xor
ss
xor
jl
or
je
adc
mov
lods
pop
xchg
dec
sbb
scas
sbb
sbb
aam
cmova
insl
movsl
adc
rolb
xchg
lcall
mov
dec
adc
lret
sarl
push
orb
jl
fbstp
or
pop
scas
inc
push
push
ljmp
icebp
push
filds
jmp
sti
roll
pmulhuw
inc
push
cmp
or
lcall
push
mov
xchg
sbb
fucomi
pop
dec
cmpsb
mov
cmpsb
add
mov
mov
addr16
push
cmp
std
out
pop
stc
xor
pop
shll
jae
pop
cwtl
mov
insb
adc
push
mov
jl
sub
push
sbb
mov
pushf
jno
in
js
ficoms
iret
sahf
stc
int3
add
scas
pop
ja
rcrb
pop
test
sub
je
cmp
addb
xchg
fsubrl
orb
out
dec
cmpsl
aam
jbe
rorb
push
lahf
xchg
mov
in
lds
add
pop
into
jb
jbe
ss
aad
cmp
dec
loope
fcmovu
outsl
fs
mov
mov
pop
movsb
shlb
pop
dec
dec
int
es
mov
sbb
scas
mov
pop
adcb
je
sub
push
aam
xor
dec
fildll
cmp
sub
sbb
outsl
bsf
imul
mov
cmp
sbb
inc
add
ds
sub
ljmp
leave
jno
sbb
in
xchg
mov
inc
test
arpl
test
cld
jnp
lods
mov
inc
cmp
add
lahf
inc
aam
or
mov
in
push
andl
scas
sahf
xlat
xor
insl
je
lods
and
jle
test
mov
fs
ret
rclb
jns
push
mov
sbb
push
andl
rorl
imul
gs
push
sub
mov
popa
call
andb
mov
mov
jbe
and
push
cmp
lea
jp
push
into
jo
xchg
cmp
add
js
mov
pop
jo
dec
cmc
movsb
dec
sbb
xor
xchg
add
repz
mov
jle
sahf
scas
push
mov
inc
cmp
es
xor
add
mov
fnstsw
cmpxchg
loop
pop
adc
and
push
dec
imull
loope
pop
mov
and
jle
push
lea
push
mov
push
mov
push
loop
adc
jp
inc
and
mov
and
xchg
shlb
adc
sar
lret
or
insl
popa
ja
mov
pop
pushf
sub
dec
pop
sbb
sub
js
push
ror
std
jmp
jo
test
pop
xlat
xor
dec
sahf
jnp
sub
aaa
shrb
mov
mov
shlb
loop
pop
jl
into
fs
push
mov
not
jae
rcr
enter
imull
mov
scas
push
pushf
fistps
cmp
mov
lahf
js
stos
sahf
ret
lret
mov
inc
sahf
daa
cltd
mov
and
popa
insb
imul
sbb
out
xchg
push
push
gs
cwtl
mov
lds
jno
fmuls
neg
and
sub
mov
or
loope
pop
test
xor
movsb
pushf
lock
xor
mov
mov
cmpsl
sbb
or
pop
push
pop
shrl
xor
push
lret
mov
push
or
dec
and
mov
xor
mov
ja
mov
notl
pushw
sub
inc
arpl
jbe
aad
js
cs
dec
jns
mov
pop
pushf
adc
mul
ret
or
js
inc
test
jbe
popf
divb
adc
xor
dec
sbbb
mov
aam
pop
cmc
les
dec
pop
or
ljmp
lret
sbb
jo
out
add
cli
enter
lea
adc
and
int
cmp
jp
xchg
jbe
scas
pusha
test
cwtl
mov
insl
mov
negb
aad
aad
arpl
push
dec
xor
or
rorl
jno
xor
lock
push
aaa
out
sub
cwtl
sbb
outsb
aam
in
jnp
jno
pushf
nop
fs
dec
outsl
xlat
test
outsl
fdivrl
adc
dec
popa
push
daa
ja
mov
add
lcall
sar
push
xchg
lds
in
jg
cmp
cli
out
jmp
add
sti
mov
hlt
aam
mov
cmp
jge
icebp
push
jne
sti
pop
insl
push
shr
or
sub
pushf
daa
inc
stos
cmpsb
pop
ljmp
cmp
push
cmc
sbb
cli
or
cmpsb
test
cmpl
fsubrs
insl
cmp
push
pushf
std
loopne
fldenv
pop
mov
inc
rcll
insb
ja
lret
pop
out
stc
stc
sbb
xor
fdivr
aas
daa
cmp
sub
cli
xchg
push
or
iret
mov
loop
or
cmp
mov
lret
or
in
addr16
test
fidivrs
mov
lret
scas
push
mov
aas
popa
ror
clc
lock
cmpsb
pop
mov
lods
lret
jo
outsl
xor
xor
push
fisubrl
jp
mov
mov
int3
and
ret
in
mov
inc
xchg
and
mov
push
xor
mov
xchg
stos
andl
arpl
lret
push
xchg
stos
aas
add
add
out
fcmovbe
sbb
testb
push
mov
inc
out
dec
mov
or
faddl
mov
mov
out
pop
xchg
mov
lahf
sarb
push
jecxz
xchg
add
cmpsl
outsb
sbb
cmp
mov
in
xchg
aaa
pop
push
xchg
inc
add
push
setae
int
adc
icebp
repnz
out
dec
mov
dec
add
or
fcompl
cmpsl
sub
adc
aas
mov
arpl
xor
imul
jae
je
and
push
inc
js
flds
imul
paddsw
jno
mov
sbb
pushf
dec
cs
shlb
jae
push
decl
data16
add
mov
cmpsb
or
mov
and
jg
hlt
xor
jmp
arpl
in
in
xor
push
add
push
sub
lods
js
mov
pop
imul
scas
xchg
xor
ljmp
test
lds
aad
add
jle
mov
shll
dec
decl
pop
pop
pop
xor
lret
mov
push
ss
push
push
xchg
inc
cld
xor
int3
jnp
sarb
mov
and
fcomps
sub
sahf
filds
add
shll
jae
test
adc
add
test
jmp
popa
or
stos
sub
out
sub
mov
rclb
loop
or
xchg
je
jae
arpl
mov
jmp
nop
sti
jbe
or
fsubrs
xlat
orl
sarl
outsb
sub
stos
in
or
aad
packssdw
xor
push
xchg
arpl
pop
ljmp
mov
inc
vfnmsub231pd
or
sub
rorl
ja
xchg
mov
mov
cmpb
movsl
in
pop
sahf
add
ljmp
jne
imulb
popa
test
mov
xor
lods
xor
mov
adc
rorb
std
mov
nop
dec
push
mov
xlat
decl
lods
iret
out
xchg
scas
mov
std
jo
in
mov
enter
aaa
mov
std
xchg
ds
inc
hlt
xor
fsubr
out
mov
push
add
jmp
aas
popa
imul
jecxz
add
out
inc
mov
jbe
push
stos
testl
inc
jmp
push
pop
adc
insl
xor
int3
mov
mov
rcll
pop
lret
std
mov
push
idivb
pop
mov
dec
lods
jno
xchg
push
shl
lods
les
jo
or
lods
mov
in
push
std
add
fs
push
xchg
test
loope
out
lock
andl
sbb
adc
xor
jp
lods
subl
es
pop
fwait
sub
pop
scas
adcl
fs
js
xchg
fcmovu
add
inc
pop
push
xchg
cmp
sbb
xor
data16
out
adc
or
sbb
int
mov
jns
cmpb
xchg
add
or
test
xor
daa
push
mov
fsubs
mov
insb
repnz
mov
jb
mov
ret
mov
mov
aam
mov
lret
sbb
rclb
cmp
mov
call
and
pop
lahf
fidivrs
insb
jmp
mov
push
aaa
repz
enter
xor
add
xchg
jg
xor
arpl
arpl
xor
and
fildll
pop
sbb
dec
push
ret
test
es
sub
cltd
xor
lds
jb
cmp
mov
fstp
aaa
inc
or
mov
fwait
shlb
repz
cmp
mov
dec
xchg
ret
push
add
aad
mov
push
mov
sbb
lcall
mov
mov
push
xchg
pop
jge
into
xlat
je
lret
dec
adc
xchg
insl
ficompl
unpcklps
sbb
jae
and
testb
cli
stc
inc
rcrl
jbe
mulb
adc
adc
or
dec
mov
xor
xor
jbe
iret
xchg
cwtl
mov
loope
mov
rcll
mov
ss
das
mov
mov
inc
repz
nop
shll
fcoms
cmp
idivb
test
sub
mov
adc
inc
jle
xchg
mov
push
jecxz
xor
daa
xor
sbb
push
loopne
stos
push
leave
sub
jbe
sbb
push
inc
cli
xor
js
xchg
lret
arpl
dec
mov
outsb
fimull
jnp
into
add
sub
lret
icebp
mov
cmc
js
mov
insb
and
popa
mov
push
movsl
cli
sub
enter
into
mov
outsb
jle
loop
jmp
decb
inc
enter
dec
pop
in
pop
icebp
movsb
loope
pop
and
and
and
imul
int3
mov
in
js
loope
jns
adc
mov
xlat
add
icebp
inc
and
out
dec
mov
movsl
add
inc
out
inc
push
loop
mov
rclb
xchg
and
leave
cmpsb
or
ret
sbb
sti
jne
stos
popa
xor
dec
ret
jecxz
loop
inc
jno
add
sub
scas
mov
leave
cmp
daa
mov
call
xchg
xor
mov
cmp
clts
scas
cltd
subl
pop
sbb
jnp
cmp
sbb
adc
aaa
and
jge
pop
and
int3
sub
and
lods
test
test
cli
hlt
dec
jmp
test
cs
jmp
jb
fisttpll
aaa
xlat
mov
jecxz
mov
dec
inc
dec
push
roll
pop
addr16
jmp
mov
inc
add
fisttps
rep
pushf
dec
in
scas
icebp
mov
arpl
jo
xchg
push
dec
sti
loopne
ficompl
jp
push
pop
sbb
mov
lcall
in
ret
in
mov
pop
add
mov
mov
jp
popa
out
scas
ja
mov
movsl
mov
inc
mov
inc
aam
mov
jno
sahf
out
lds
cli
xchg
dec
mov
xchg
mov
jno
sahf
pop
daa
ja
dec
data16
int
les
arpl
inc
movsl
dec
mov
cmp
mov
push
xor
clc
push
loop
dec
cli
fidivrl
push
gs
into
popa
sbb
enter
inc
loop
push
loopne
call
repnz
add
stc
add
pop
xor
lret
dec
shl
add
ljmp
xor
decb
mov
or
push
addl
push
push
or
adc
and
sbb
mov
mov
jae
sbb
scas
cmp
cltd
adcl
mov
std
aad
sbb
aas
sub
jmp
adc
mov
cmp
pop
test
push
lea
and
das
cmp
pop
jnp
aas
inc
xchg
push
je
shl
mov
push
mov
add
mov
ret
cltd
in
ja
mov
mov
sbb
lock
mov
push
inc
dec
rolb
jmp
test
outsb
adc
pop
xchg
repz
xor
xchg
sub
adc
js
jecxz
cmc
fistpl
aad
test
pop
sub
in
outsb
push
mov
adc
clc
test
repnz
lods
andl
shlb
fisubrl
pop
das
jp
mov
imul
sub
sbb
int3
sub
and
push
inc
pop
and
addr16
cmp
mov
pop
iret
mov
into
loope
mov
outsb
inc
fsubs
mov
cwtl
test
or
test
fistpl
mov
call
mov
adc
fidivs
andb
add
stos
rol
mov
add
stc
imul
jae
push
cmp
mov
aam
sar
leave
std
fistl
lods
call
inc
dec
sarl
and
jo
sbb
add
int3
pop
orl
movsl
adc
pop
xor
loopne
pop
fistpl
outsb
dec
push
or
mov
mov
xchg
rorb
add
xchg
mov
add
dec
adc
mov
nop
clc
jae
pop
cs
popf
jbe
repz
dec
xchg
fistps
movsl
movsl
stc
dec
aad
mov
jecxz
into
adc
pop
arpl
xor
icebp
out
int
lea
dec
loop
insb
aas
jbe
lds
sbb
mov
mov
roll
push
filds
gs
dec
daa
inc
xor
pop
ret
roll
int3
pop
mov
outsl
dec
mov
imul
icebp
pop
pop
dec
ficoml
mov
jb
nop
adc
dec
inc
shrb
fidivs
in
adc
add
xor
adc
ss
jns
sbb
adc
loopne
cmp
aad
sarl
je
add
add
js
orl
into
pop
popa
sbb
push
aad
mov
out
mov
subl
jno
and
xor
mov
out
xchg
mov
adc
loop
push
out
jo
aaa
or
adc
jmp
mov
icebp
rclb
lods
call
sbb
cmc
lods
lret
loope
lcall
clc
add
jne
fucomip
test
aam
push
mov
repz
xor
mov
popf
jno
movsl
xor
shl
ficoml
repnz
jae
movsb
xchg
xor
dec
xlat
shlb
push
or
xor
sub
rcrb
inc
int3
shll
cwtl
jmp
xchg
adc
je
xor
jl
fwait
or
push
xlat
call
push
sub
or
xchg
add
loopne
fists
mov
and
or
pop
rcl
xchg
ljmp
es
arpl
ror
mov
push
mov
rcll
sbb
and
call
stos
mov
xor
rcr
push
push
dec
push
movsl
lret
fldenv
jmp
leave
cmp
adc
push
cmp
xor
xchg
mov
mov
out
ficoml
pop
mov
into
pop
adc
ror
cmc
cmp
int3
jecxz
pop
jns
aas
cltd
test
mov
adc
mov
fdivrl
pop
or
sbb
pop
xor
jmp
or
or
fidivl
testl
jle
aad
mov
mov
sti
pusha
mov
mov
shl
or
aad
sub
fidivl
loopne
ret
mov
testl
mov
add
cmp
dec
popa
sub
mov
adc
or
testl
daa
testb
call
jno
push
in
or
lea
aas
pop
mov
popf
hlt
lds
fisttpll
cmp
stc
nop
int
adc
sub
cwtl
mov
adc
push
dec
outsl
cltd
cmp
pop
xor
mov
scas
int3
mov
adc
cltd
arpl
arpl
mov
jbe
pop
js
push
cmpsb
xchg
test
adc
xchg
xchg
push
cmp
icebp
sbb
psubsb
mov
push
mov
xor
ss
mov
sahf
ret
xchg
das
sub
add
loop
loop
push
mov
gs
incb
adc
push
push
pop
lret
gs
rcl
push
aad
push
movsb
xor
loope
fiadds
push
js
fwait
inc
test
xchg
inc
inc
sahf
iret
add
icebp
fcoms
das
jg
in
je
push
js
mov
mov
daa
inc
sahf
sbb
adc
movsb
lcall
mov
leave
fisttpll
cld
fldenv
or
mov
arpl
test
mov
jo
icebp
mov
lret
lods
pop
fisubl
scas
jmp
pop
iret
xchg
imul
test
xchg
clc
lret
or
ss
outsb
out
imul
mov
jne
adc
imul
inc
mov
mov
cmpsb
fnstcw
insb
inc
addr16
cmp
xchg
into
pop
aam
dec
call
cmp
loope
mov
inc
push
test
push
lahf
or
cltd
sub
aaa
int3
dec
xchg
sbb
into
adc
mov
test
mov
pop
ja
adc
sbb
jns
test
pop
divl
and
mov
outsb
ljmp
mov
rcll
iret
xor
addr16
lahf
out
test
leave
pop
xchg
sub
and
pop
or
jnp
repnz
and
cld
sub
and
imul
cltd
or
insb
lds
sbb
mov
aad
shll
xor
inc
in
pushf
js
in
xor
into
js
cmp
jnp
inc
mov
in
xchg
dec
fcompl
mov
data16
mov
mov
pop
imul
jae
dec
fisttpll
and
xchg
scas
or
pusha
pop
cmp
cmp
es
lods
and
mov
shl
aaa
mov
xor
bound
xchg
xor
mov
pusha
dec
mulb
jecxz
xor
sub
imul
sbb
cli
subb
aam
adc
mov
test
xchg
je
lret
pop
out
jmp
mov
dec
jb
inc
pop
mov
lahf
ljmp
add
or
sbb
shrl
xchg
aaa
jae
push
dec
rorl
std
es
cmp
aam
rorl
xor
sahf
shll
mul
mov
xchg
mov
movsb
xchg
xor
jo
mov
jle
pop
cmp
movl
movsb
cld
pop
inc
fistpll
push
addr16
in
xchg
repnz
lea
scas
fisttpll
adc
lds
in
test
adc
inc
adc
stos
loop
or
push
js
ret
adcl
scas
scas
fdivrs
sub
fistl
imul
cmp
jne
andb
subl
inc
stos
test
les
inc
ret
cmp
test
shlb
mov
jp
mov
add
je
and
jl
cmpsb
and
adc
push
inc
jnp
xchg
add
sahf
fadds
lahf
in
and
sub
inc
outsb
sub
imul
cmp
pop
inc
into
jmp
and
push
cltd
aaa
loopne
jl
inc
adc
cmpsb
inc
sti
and
inc
nop
mov
sub
dec
inc
cltd
je
cmp
pusha
inc
inc
icebp
add
fldenv
enter
jg
lahf
and
xor
call
cltd
subl
mov
xchg
xor
rol
scas
aam
xchg
or
out
cmc
mov
incb
inc
xchg
mov
xchg
mov
ja
out
shr
jnp
ss
scas
mov
mov
test
jb
out
mov
in
lahf
adcb
or
inc
mov
add
mov
mov
push
scas
loop
mov
push
in
repz
lret
test
adcl
cli
pop
test
les
add
cmp
loope
sahf
push
pop
add
cmpsb
adcl
dec
mov
addb
cmp
jo
jne
sbb
pop
lret
mov
push
je
mov
mov
out
enter
enter
add
adc
xchg
mov
cmp
ret
lock
push
out
repnz
out
ja
sbb
stc
std
ret
es
scas
jg
push
fwait
jne
or
iret
pop
rcll
cld
xchg
adc
sub
mov
jmp
addl
jae
sahf
cmp
daa
loop
and
daa
repnz
mov
pop
call
out
adcl
xchg
mov
and
in
sub
adc
rorb
cmc
cmpb
gs
aaa
xor
sub
fsubrl
in
ljmp
cli
cmp
les
sbb
data16
rcrb
in
pop
orl
xchg
adc
call
roll
pop
gs
cli
fldpi
cmp
clc
jbe
stos
mov
push
scas
jecxz
mov
shl
inc
mov
jecxz
imul
shl
ljmp
push
mov
into
popf
aas
adc
xchg
stos
loop
inc
je
rcrl
xor
cmp
stc
stc
add
xchg
inc
test
inc
in
ret
pop
lods
test
inc
arpl
insl
repz
jl
enter
xor
add
push
outsb
inc
lock
xchg
mov
jne
out
push
or
cmp
shrb
pop
inc
jecxz
je
pop
fs
lcall
sahf
adc
jg
or
pop
sbb
dec
mov
movsb
cmp
mov
mov
or
loop
mov
adcb
shrl
inc
mov
jecxz
mov
fs
cmp
cmpl
xchg
je
add
adc
repnz
jp
xor
mov
push
loopne
push
inc
aaa
shrb
and
mov
sbb
xchg
mov
adc
jnp
jae
sbb
push
inc
jnp
push
pushf
pop
dec
xchg
ss
dec
cmc
pop
fistpll
pop
adcb
cld
divps
insb
push
inc
xchg
subl
xor
arpl
pop
adc
xrelease
iret
sub
loope
mov
int
pop
push
adc
flds
aad
std
lret
icebp
cwtl
sbb
jo
js
movsb
lahf
ficoms
or
lret
xor
xchg
mov
push
mov
mov
cmp
sahf
adc
daa
push
pusha
test
das
jge
pop
pop
add
mov
stc
inc
push
sub
cmp
fimuls
les
dec
aad
or
lds
fistps
jg
movb
mov
sbb
mov
mov
cmp
xchg
aam
cli
pop
mov
arpl
les
addl
push
dec
mov
insb
pop
aaa
fucomp
popa
xadd
cmp
jae
xchg
gs
inc
push
cwtl
sub
mov
out
shlb
ret
push
nop
fsubrl
jnp
jne
ja
lret
mov
mov
enter
ret
cwtl
out
pop
jmp
imul
mov
xor
test
dec
mov
mov
mov
cmpsl
adc
dec
sub
xchg
sbb
jle
sarl
push
xchg
test
mov
dec
frstor
rorl
test
sub
lods
es
mov
into
jae
mov
mov
ds
mov
mov
sub
lahf
dec
mov
ret
pop
ljmp
sahf
sahf
dec
jl
pusha
cld
repz
inc
aam
adc
mov
or
std
inc
pusha
cs
pop
addr16
sbb
pop
xor
or
mov
xor
jp
orl
push
scas
bswap
enter
push
imul
in
loop
outsb
dec
repnz
sti
loop
mov
mov
aam
int
inc
xchg
mov
cmp
mov
rol
pop
push
pop
or
stos
movsl
mov
stos
int
negb
cld
add
ljmp
sbbl
inc
pop
push
sub
aam
push
mov
je
cmp
adc
and
mov
push
mov
or
popf
filds
xchg
mov
or
mov
pop
mov
jl
jmp
mov
ja
dec
mov
or
out
push
test
add
js
inc
jl
xor
sub
ret
es
jl
rcll
out
in
cwtl
mov
push
sbb
lds
jmp
aad
or
sub
clc
adc
xchg
daa
inc
and
push
rcll
sub
sub
inc
das
add
or
mov
vucomiss
fsubrs
mov
test
pop
mov
xchg
leave
fnsave
movsl
dec
and
mov
push
inc
mov
hlt
pop
lds
rolb
cmp
addr16
xchg
mov
out
ja
sahf
mov
sub
rclb
sti
pop
loop
pop
std
clc
imul
fwait
ja
cmp
decl
jns
popf
aas
cmc
sahf
sub
add
push
or
test
ss
icebp
and
dec
stos
mov
int
shr
add
sub
adc
xor
imul
inc
jl
xlat
sahf
push
xor
pop
mov
aam
and
rdtsc
fldl
je
in
ss
jmp
fcoms
inc
jbe
dec
ja
lods
jle
enter
and
inc
popa
mov
jne
int3
in
fistpll
cmp
push
mov
mov
push
push
xor
in
and
in
nop
cmp
xor
daa
inc
or
push
in
sub
out
xlat
jne
inc
out
xchg
dec
clc
xor
data16
lret
mov
lds
sarl
jbe
sbb
mov
and
lahf
add
iret
fistpl
hlt
int3
xor
dec
loop
test
insb
add
xchg
aaa
fwait
pop
sub
push
or
je
dec
xchg
push
insl
mov
push
push
test
sahf
bound
stc
loopne
je
loop
dec
jns
mov
sub
jbe
fidivrs
push
aam
fsubl
cmp
jg
test
jl
jl
push
add
and
add
movb
jbe
sub
aas
jo
cs
shrb
lods
bound
mov
iret
adc
or
loope
in
and
cltd
mov
mov
adc
arpl
xor
ffree
daa
cmp
mov
cli
sbb
mull
mov
and
lret
push
outsb
xchg
sub
out
rcrb
aad
jecxz
bound
dec
push
cltd
fdivrl
in
mov
fisubs
push
mov
in
ja
inc
aad
xchg
out
insb
push
ljmp
aam
pushf
hlt
push
xor
adc
call
jb
stos
ja
clc
hlt
sbb
push
lock
nop
adc
add
and
lcall
dec
repnz
pop
in
mov
pusha
push
inc
mov
movsl
cmpsb
or
aam
pop
add
mov
jb
push
mov
pushf
inc
lret
mov
cmpsb
leave
in
call
sbb
push
stos
dec
call
pop
xchg
sar
mov
lds
repnz
les
loope
ljmp
push
add
nop
push
stc
cmc
xor
mov
js
rcr
xor
push
mov
jle
push
aad
mov
mov
jo
jo
push
ss
adc
fidivl
ret
subb
dec
ret
push
cmp
sbb
test
sbb
or
cli
cwtd
popa
out
or
outsl
aaa
mov
and
in
xchg
sub
jno
iret
fcomip
dec
sti
rcrb
mov
subl
xchg
dec
xchg
sti
add
lods
adc
push
pop
loope
addr16
jle
cmpsl
jg
and
addr16
cld
mov
shrb
jb
pop
jo
mov
pop
sbb
adc
hlt
enter
out
xchg
stos
push
fcomp
dec
imul
jp
mov
jecxz
aad
xlat
andb
jp
outsl
xchg
stos
inc
lock
inc
pop
sub
and
negl
nop
mov
xor
mov
pop
jno
test
pop
mov
adc
add
add
mov
jg
mov
decb
mov
outsb
adc
inc
jmp
mov
and
lods
aaa
cmp
in
sarb
shl
cmp
idivl
shrb
imul
cwtl
push
xor
mov
daa
stos
mov
cli
out
pop
sbb
mov
pop
lea
jl
lock
jmp
test
add
repz
pop
mov
das
jnp
daa
fimuls
test
jmp
inc
repnz
inc
iret
push
sub
decl
and
mov
scas
jnp
insl
cmpsb
inc
cli
fdivrl
icebp
test
and
fsubrl
fcoml
and
jae
push
jo
out
xchg
pop
mov
out
dec
jns
push
popf
pop
insb
push
mov
fsubs
leave
adc
mov
jno
out
test
jp
sbb
nopl
fidivrs
iret
fimull
in
fstpl
out
jne
fdivs
in
adc
jnp
xchg
pop
jo
and
test
rorb
fdivs
loopne
xchg
mull
sub
daa
dec
xchg
fists
dec
add
sahf
pop
jnp
arpl
sbb
loop
scas
loope
and
mov
jne
lock
push
cmp
push
mov
cmp
std
loop
cmp
inc
js
pop
lcall
jl
stos
insb
or
imul
punpckhwd
xlat
fisttps
inc
xchg
scas
lods
test
insb
add
inc
pop
pop
adc
inc
imul
js
adc
je
fsubrs
push
xchg
mov
mov
or
ficompl
test
xlat
testb
cmp
push
cmp
dec
jg
xchg
mov
sbb
inc
and
addb
mov
in
mov
in
pop
dec
dec
mov
jbe
xlat
dec
fldt
addr16
data16
mov
pop
movsb
mov
sub
jle
sub
dec
dec
add
insl
call
xchg
jmp
add
rclb
xchg
fcmovne
shr
mov
inc
test
add
and
xchg
cs
inc
int
xchg
in
xlat
push
pop
icebp
movsl
fsub
cwtl
and
aaa
or
mov
dec
int
pop
mov
cmp
mov
and
aam
sub
jae
jae
adc
clc
loop
stos
cmp
and
pop
pop
mov
adc
lret
mov
jle
shl
pop
mov
add
shlb
xor
ret
in
pop
add
and
jmp
sti
add
imul
push
adc
dec
dec
dec
jo
fsub
imul
lock
testl
hlt
cs
xor
lods
mov
data16
pop
xchg
xor
xor
adc
cli
fldenv
cmc
je
cmpsb
sbb
dec
je
cmc
insl
mov
inc
sbb
inc
stos
outsl
pop
adc
popf
pop
mov
or
pop
arpl
add
cmp
cmp
xor
cmp
dec
mov
and
xchg
in
es
test
loopne
mov
pushf
mov
cmpsl
leave
shlb
sbb
scas
out
push
xchg
pop
movsl
ja
jns
movsb
cmpsb
shll
cmpsb
cmp
ret
je
imul
jb
mov
cmp
or
sub
jg
mov
xchg
filds
sbb
lock
pop
jo
and
xchg
lcall
sbb
loop
shlb
mov
loope
pop
hlt
pop
cmp
xchg
jae
mov
jg
jae
rorl
scas
lahf
dec
or
pop
in
pop
js
inc
ret
inc
push
mov
dec
mov
cltd
pop
mov
int
jb
call
cmpsl
inc
cmp
jmp
xor
std
xor
pop
mov
adc
or
dec
daa
pop
mov
arpl
dec
clc
out
mov
daa
cli
sbb
or
push
cmp
into
scas
pop
arpl
mov
xchg
loop
and
loope
jecxz
es
inc
out
lea
sbb
int3
mov
or
adc
lret
mov
xor
pop
out
leave
test
fstpt
out
add
cmp
jp
pushf
add
mov
fst
mov
inc
test
lock
stos
or
clc
xorb
cld
add
mov
xchg
data16
and
in
or
cmpsl
inc
cmpsb
add
lds
and
xor
add
xchg
rclb
mov
cmp
sarb
in
das
xchg
out
ffree
dec
push
outsb
inc
sub
jge
push
adc
loopne
mov
hlt
jnp
mov
fnstenv
dec
les
iret
in
iret
dec
out
mov
test
fcom
ja
dec
mov
mov
inc
ror
mov
aam
adc
and
pop
push
jae
mov
notb
pushl
popa
insb
aad
out
popa
jge
mov
mov
and
jge
outsb
les
cmp
hlt
push
add
cltd
sbb
mov
lret
ret
into
cmp
ret
lahf
jno
rolb
sti
mov
ljmp
lahf
pushf
fcoml
push
lea
aas
pop
sub
inc
xchg
test
inc
es
mov
movsl
iret
ljmp
inc
lret
cli
add
cmp
dec
push
mov
pop
sbb
jbe
movsl
stos
out
mov
iret
push
movsl
or
int3
or
mov
or
push
sub
cmp
dec
sti
lcall
sbb
stc
lods
sub
jmp
dec
sti
mov
push
sub
mov
fstps
push
cmp
ret
movsl
add
dec
mov
aas
push
into
repnz
lcall
push
mull
cmp
data16
jbe
imul
ret
cmp
mov
and
enter
xchg
cmp
pop
mov
neg
dec
ja
ret
sti
dec
push
ret
inc
mov
xor
push
sbb
cmp
sub
dec
jo
xorb
shr
xor
jle
orl
jmp
and
pop
inc
loop
in
add
lret
rcrl
psubsw
add
mov
cmp
dec
lret
sub
push
fsts
repz
pushw
push
icebp
addr16
dec
aas
mov
outsl
popa
pop
or
outsl
cmpsb
fcompl
and
lret
fwait
push
aas
bound
jne
jmp
inc
jp
push
mov
cmp
jp
jl
adc
add
jae
jne
enter
out
pop
das
rcr
jecxz
lret
xor
xchg
pop
gs
out
dec
ret
jno
cmp
test
clc
mov
add
add
xchg
in
sti
cmpsl
and
push
inc
mov
and
mov
mov
xchg
subb
gs
lahf
daa
xchg
icebp
mov
xor
flds
jbe
movsb
cwtl
mov
mov
loop
icebp
xchg
imul
int3
pop
pop
ja
clc
and
lods
mov
gs
insb
cmp
dec
push
cmp
rcrb
scas
inc
mov
lea
outsl
into
sbb
popl
imul
lret
stc
adc
out
popf
sbb
push
dec
adcb
imul
and
daa
loop
adc
fimuls
mov
cli
add
adc
dec
mov
mov
cmpsb
mov
push
stos
mov
fadd
push
std
cmp
jmp
or
cltd
push
or
inc
fdivp
xor
mov
jb
aaa
fstl
mov
lret
rorl
insl
out
and
xchg
stos
push
mov
adc
sbb
push
sbb
inc
xchg
push
cmp
lods
hlt
push
fwait
popf
leave
loop
je
cmp
push
enter
into
insb
lcall
andb
and
jne
sbb
push
cs
iret
cmpsb
pushf
xchg
dec
js
popa
jge
imul
dec
ljmp
cli
aas
inc
lret
mov
test
push
dec
xchg
adc
mov
jmp
mov
mov
push
push
inc
lods
orl
or
inc
add
addr16
pusha
data16
inc
outsb
cwtl
cmc
out
inc
imul
out
enter
shlb
add
add
cmp
es
stos
imul
adcb
jge
xor
dec
and
pushf
pop
lret
sbb
aas
xchg
stos
das
ds
or
movsl
and
sbb
loopne
test
fsubp
dec
lea
cli
aaa
xchg
mov
xchg
sub
movsl
addr16
out
cmp
lret
or
pop
push
sbb
movsl
leave
or
sub
jmp
cmp
icebp
push
push
xor
in
pop
mov
ds
push
mov
addr16
jg
fistpll
xor
int
das
jle
nop
in
add
sub
xor
adc
adc
add
int3
adc
and
jb
dec
push
js
mov
inc
dec
mov
add
insl
inc
and
push
sarl
and
pop
mov
push
stos
es
add
sbb
faddl
jno
adc
cltd
imul
shll
pop
cmp
push
xchg
lahf
adc
and
dec
shl
lea
add
pop
xor
cmp
inc
pop
lret
or
sub
in
sub
nop
icebp
cmpsb
popa
mov
jnp
outsb
mov
mov
insl
mov
jns
xorl
pop
dec
cmp
cmp
xor
rorl
or
mov
shr
lods
lods
mov
xchg
leave
xchg
lods
xchg
or
xlat
xor
cmp
jnp
addr16
jge
in
repz
fsubrl
push
mov
xlat
cld
ss
xor
aaa
xor
scas
lea
test
movsb
add
lret
je
pop
shlb
pushf
push
jecxz
add
xchg
stc
addr16
jb
pop
xchg
pop
sbb
punpckhdq
test
popf
icebp
sti
cmp
mov
mov
adc
jae
cs
adc
in
jmp
leave
cmp
add
jmp
iret
aaa
xchg
inc
and
mov
mov
mov
fcoml
test
movsb
inc
pop
enter
xchg
or
sbb
repnz
push
xor
inc
ljmp
sarb
xor
pop
pushf
jbe
push
data16
sbb
bound
and
push
sub
sub
mov
sub
loop
lock
and
mov
xchg
dec
adc
test
and
repnz
outsb
cmp
jl
sbb
and
add
dec
leave
jmp
push
jo
loop
jb
and
rol
popf
push
aaa
and
or
add
mov
mov
lret
mov
dec
jns
daa
mov
ja
jbe
ss
jge
shrl
add
test
and
test
lret
jnp
pop
je
jns
out
and
and
or
add
jmp
mov
test
popf
les
stos
xchg
push
add
sbb
sbb
rorb
inc
adc
repnz
mov
out
push
sub
mov
xor
mov
cmp
sub
push
lahf
adc
xchg
pushf
scas
stc
dec
ret
and
inc
adcl
test
or
jg
pop
inc
pop
bnd
out
pop
add
pop
aaa
out
in
mov
push
dec
and
aaa
je
and
daa
xchg
push
push
adc
or
inc
or
and
cmp
rcrl
aad
and
push
mov
in
jnp
mov
jge
insb
cmp
cld
sbb
es
decb
imul
mov
add
notb
xchg
fiadds
dec
mov
loop
out
and
jns
xchg
pop
std
sbb
pushf
or
mov
inc
bound
outsb
and
adc
bound
test
stos
in
jb
mov
jecxz
xchg
mov
popa
jmp
dec
cltd
popa
or
nop
out
xchg
adc
cmp
lods
sub
scas
gs
xor
mov
out
pop
mov
pop
cs
and
push
shrl
xchg
lret
repnz
mov
out
inc
fwait
dec
mov
test
inc
bound
mov
push
cmp
push
in
sbb
inc
divb
add
push
mov
sub
pop
faddl
push
cmp
push
jo
aaa
sahf
jp
test
push
fcomip
sbb
or
imul
adc
jp
add
addl
jmp
sub
mov
jns
jns
das
inc
sbbb
test
mov
shrb
adc
mov
or
clc
push
mov
mov
cld
imul
cmc
sbb
clc
fsubs
movsl
jl
out
dec
testb
adc
in
in
lcall
icebp
cs
mov
ret
out
jbe
sub
mov
push
cmc
in
std
push
or
icebp
and
lret
stos
outsb
dec
pop
adcl
ret
loope
fcomps
push
shlb
mov
jp
dec
xchg
daa
dec
or
sub
rcll
je
inc
sahf
or
jecxz
scas
sbbl
outsl
rclb
mov
jl
jbe
imul
pop
sets
mov
pop
cld
ret
or
mov
jecxz
pop
sarb
dec
aam
push
out
mov
mov
adc
xchg
sub
push
inc
in
cmp
pop
push
add
mov
cmp
mov
mov
dec
dec
cmp
lea
adc
sbb
dec
inc
pop
inc
mov
sahf
out
shll
iret
and
push
xchg
data16
addl
and
iret
out
jle
mov
and
cwtl
sbb
jecxz
cmp
jb
dec
mov
inc
xor
and
xor
dec
mov
pop
jmp
push
push
test
sbb
cwtl
out
les
push
int
je
cmp
movsl
sub
imul
ds
add
xor
mov
es
jno
in
adc
loopne
shl
sbb
pop
cmp
xor
lods
jmp
mov
mov
arpl
inc
ret
or
enter
clc
sub
mov
pusha
mov
out
mov
add
stos
adc
xchg
or
test
in
mov
ss
mov
mov
inc
aas
add
sbb
jae
sbb
shr
rolb
mov
push
mov
cmp
ret
into
and
lcall
fwait
xchg
fwait
lods
xchg
adc
pop
jg
jp
xor
pusha
repz
mov
sub
inc
hlt
and
add
loopne
or
ja
push
xlat
and
inc
outsl
sbb
sub
sarl
sbb
dec
test
jne
push
and
aam
call
data16
addl
xchg
jmp
pop
neg
pop
ret
rcll
mov
psubusb
mov
push
cmpsb
mov
add
mov
add
addl
xlat
mov
repz
maxps
sbb
stos
dec
jmp
adc
cmp
mov
lea
add
pusha
test
in
jge
loope
fisubs
fbstp
push
add
push
rep
xlat
mov
jae
xchg
lods
dec
stos
lods
push
add
ljmp
mov
xor
rcrl
mov
adc
arpl
push
roll
mov
cld
int3
jle
stos
push
movsb
xor
mov
cmp
and
push
shll
shrl
lea
sbb
mov
in
out
ret
add
addr16
jns
jl
imul
add
mov
mov
and
adc
xchg
in
popf
mov
popa
sub
inc
sbb
mov
push
into
arpl
popa
mov
sbb
or
xlat
ja
dec
fs
xor
or
lods
push
sub
inc
xor
xchg
push
lods
push
out
mov
repnz
je
std
inc
lods
arpl
dec
int
imul
inc
popf
insb
pushf
adc
pop
push
lock
push
push
jecxz
mov
cmpb
mov
mov
ja
cmp
shl
jp
push
mov
push
lcall
pop
pushf
int
std
xor
in
cltd
aaa
jecxz
iret
sub
jl
xlat
mov
sbb
xor
xchg
push
rcll
loopne
jle
out
lret
jg
lods
bound
mov
jle
xor
cmp
imul
addr16
cmp
or
lods
cli
subl
mov
pop
in
xchg
lret
stc
jmp
sub
push
addr16
jbe
xor
push
dec
icebp
jge
mov
mov
int3
inc
outsl
sub
test
enter
addr16
push
sbb
gs
ds
subb
dec
movsb
pop
fildl
les
mov
ret
loopne
leave
xchg
jo
std
cmpsl
pusha
pop
dec
shlb
sbb
push
leave
dec
xchg
mov
enter
xor
sbb
jecxz
adc
add
dec
lahf
mov
jno
lahf
jae
mov
je
out
adc
bound
ret
iret
dec
pusha
inc
add
jp
push
mov
cmp
fimull
call
push
lock
mov
aad
push
jo
jns
es
push
push
lds
adc
jb
adc
cmp
imul
mov
or
dec
push
loope
popa
mov
cwtl
inc
pop
aam
dec
out
mov
push
cli
stc
popf
jno
cmp
pop
insl
jo
sub
dec
sub
sti
cwtl
fs
mov
loop
push
sbb
dec
mov
cwtl
mov
shll
lahf
fwait
mov
adc
sbb
push
inc
sub
or
out
push
xorl
mov
pop
jb
test
out
push
cmp
imul
jl
fnclex
mov
mov
cmp
push
data16
shrb
cmp
andb
add
call
in
cmp
push
insb
and
lea
dec
xor
dec
imul
mov
shrl
cmc
mov
lcall
xchg
je
inc
pusha
lods
jno
mov
jl
mulb
adc
nop
cmp
add
lcall
imul
inc
and
adc
enter
repz
xchg
movsb
lods
imul
cli
lods
mov
push
jl
mov
shl
pop
mov
and
fdivrl
insb
mov
push
out
daa
xchg
cmp
mov
in
movsb
add
inc
pop
mov
rcr
pop
test
jle
lret
test
push
mov
fwait
or
jnp
fucomip
pop
cmc
xchg
cmp
je
xorl
popf
mov
cmpsl
or
xor
pop
lock
adc
js
lods
movsb
or
xlat
sub
mov
inc
inc
push
mov
mov
sub
sbb
lahf
push
cmp
cmpsb
std
or
mov
fsubrp
icebp
xchg
xchg
xchg
xchg
loope
pop
pusha
fadds
dec
ljmp
in
pop
xchg
loop
loop
aas
or
jle
pop
cmp
sbb
das
push
jle
fisttpl
mov
cwtl
stos
sbb
pop
dec
mov
adc
mov
dec
sbb
push
cmp
mov
fisubrs
sub
mov
push
cmp
insl
into
mov
mov
inc
fsubs
pop
in
in
icebp
sahf
cmc
mov
ret
std
iret
les
or
scas
sub
sub
js
testl
sbb
cmpb
pusha
push
js
jb
incb
dec
inc
mov
sub
test
jne
scas
les
mov
jl
pop
lret
or
add
fdivr
sub
ret
sbb
sub
or
jae
pop
fisubrs
imul
push
popa
call
inc
ret
test
sbb
lea
inc
xor
mov
push
aam
negb
adcl
rolb
add
ret
adc
sbb
pop
iret
or
in
jp
lock
mov
mov
pop
into
xchg
out
push
pusha
fucomip
mov
gs
hlt
cs
dec
pop
xchg
pop
dec
cwtl
inc
je
xchg
out
inc
daa
fistpl
xor
cli
pop
cmp
je
scas
ja
stos
shl
scas
rcl
out
or
cmc
push
inc
pushf
addr16
jl
adc
mov
pop
fsubl
stc
and
out
mov
subl
ret
addr16
adc
add
pop
mov
rcll
inc
xchg
xor
mov
and
sahf
in
xor
loopne
xor
jg
cltd
add
xchg
xchg
ret
incl
test
cmp
push
push
or
aas
cltd
cmp
mov
mov
xchg
fsubrl
sahf
scas
stc
dec
in
and
movsb
mov
repnz
dec
jns
fwait
xchg
cmp
xchg
subl
jo
ret
mull
into
pusha
fs
inc
aad
int3
sbb
jle
addl
push
sbb
jle
dec
insl
in
adc
mov
pop
cmp
sub
jb
js
fsubp
out
dec
or
in
sub
sbb
into
pop
cmp
sub
pop
adc
lods
lock
jmp
pop
pop
iret
xchg
fisubrs
sbb
in
or
fsubp
pushf
clc
xorb
and
mov
lea
fists
and
xchg
pop
aas
dec
adc
out
cmp
xchg
sub
mov
and
sbb
cmp
int
or
fidivrs
aas
popa
sbb
push
sbb
mov
outsl
xor
sahf
repnz
sub
dec
add
inc
inc
mov
fwait
shll
cmpsl
xchg
inc
loop
bnd
add
push
dec
outsl
ret
je
idivl
stc
pop
jno
in
adc
or
loope
or
sbb
sbb
adc
sub
sub
dec
les
cmp
pop
push
xor
jbe
scas
std
iretw
sub
xchg
inc
jl
and
lds
jg
out
push
or
inc
xchg
mov
sub
mov
mov
loop
push
push
push
cwtl
xchg
movsb
call
xor
sub
daa
xchg
and
sbb
mov
jle
mov
daa
mov
xor
dec
data16
imul
frstor
in
xor
sub
adc
stos
cld
fistpl
dec
and
add
mov
fistpll
xchg
cmp
pop
es
adc
jnp
push
lock
pop
adc
addr16
imull
pop
das
sbb
pop
sti
rolb
rorb
imul
mov
in
jp
loope
repnz
daa
and
scas
hlt
in
subb
rcl
movsb
dec
or
jg
xor
jne
pop
or
enter
movsb
sbb
adc
retw
mov
jns
mov
cmp
mov
addb
loop
loop
dec
popa
out
aaa
xchg
in
movsl
and
mov
lret
pop
popa
add
roll
mov
pop
mov
shl
or
xchg
femms
adc
jmp
xchg
loope
cli
loope
loop
inc
xor
sbb
and
lock
sbb
jns
ss
add
mov
sub
loopne
ljmp
inc
jg
lods
pop
xchg
pusha
and
mov
xchg
adcl
ret
ja
stos
mov
mov
das
xchg
push
mov
jns
mov
popa
sti
push
and
sub
xchg
int
inc
add
jns
testl
or
jg
outsb
jae
xchg
subl
outsl
int
int3
aam
sub
push
bound
sbb
pop
lret
std
testl
and
jmp
pop
jno
ljmp
sti
addb
fsubrs
mov
lods
leave
adc
adc
or
movsb
mov
push
dec
inc
cmp
shrb
push
notl
arpl
loop
es
mov
sbb
push
pop
push
xor
in
push
lock
jl
push
clc
inc
pop
jg
pop
mov
adc
fwait
aam
out
sub
pop
scas
aam
sbb
jle
mov
push
adc
rcrl
mov
xor
or
sti
mov
inc
mov
fwait
mov
movsb
add
gs
cmp
adc
lcall
cli
negl
cli
loopne
mov
cmp
dec
rcl
aas
stc
js
xchg
repz
mov
stc
mov
sbb
sub
rol
sbb
ror
lock
mov
movsb
push
xor
lods
mov
jecxz
mov
sub
sub
or
ret
push
push
mov
mov
in
pop
cmp
mov
push
mov
jecxz
dec
fsub
adc
jne
mov
pop
push
loop
sbb
stos
and
fisubrl
loope
xor
call
sub
jbe
and
cmp
test
aam
inc
leave
push
push
push
mov
inc
aad
or
xor
or
dec
xor
jmp
sar
fisubl
xchg
nop
jno
arpl
popa
mov
xchg
xchg
sbb
push
clc
pushf
pop
enter
ror
mov
add
sahf
jl
mov
xor
mov
fwait
xor
jl
cmp
dec
mov
pop
mov
adc
inc
adc
mov
or
cmc
xchg
lea
ret
loopne
jecxz
inc
mov
aam
test
fsubrl
mov
ljmp
les
jp
push
je
mov
pop
popa
inc
loop
xchg
push
mov
loopne
jecxz
jne
pop
adc
sub
sbb
or
lods
adcb
xor
std
test
inc
jl
dec
or
js
push
js
sbb
pop
mov
pop
divb
xchg
iret
insl
push
pop
or
icebp
and
aas
nop
cld
movsb
mov
push
pop
loop
loope
push
je
popf
push
call
aaa
shrb
mov
sti
inc
pusha
cs
rcrl
jo
jg
addl
sub
cmp
push
rcrb
pop
shll
scas
lods
or
int
pop
mov
fldcw
mov
test
cmp
mov
inc
aas
jo
jb
fsts
addb
int
lea
outsb
xchg
out
or
adc
or
mov
nop
pushf
fists
mov
add
cld
mov
and
push
repnz
shll
adc
ja
and
pop
cli
xchg
sarl
and
in
cltd
push
mov
inc
in
push
div
mov
je
test
test
cmpb
fldl
ja
mov
dec
dec
jno
push
shlb
inc
lcall
push
mov
pop
and
jmp
jmp
dec
push
subb
aad
mov
sub
insl
lds
pop
mov
push
mov
inc
mov
jo
push
inc
adc
mov
cwtl
cwtl
repz
js
sti
xor
jp
push
jmp
cltd
lock
nop
jmp
hlt
lds
in
insb
sub
and
loope
and
sub
cld
mov
mov
lods
adc
sub
stos
lahf
push
xchg
mov
daa
mov
or
in
andl
rcr
mov
lret
aas
and
inc
lret
fsubrl
ds
xchg
sub
in
movsb
cs
fisubl
mov
mov
push
or
gs
mov
out
fmull
imul
adcb
insl
sbb
xorl
jmp
outsl
rol
adc
enter
or
movsl
std
nop
das
clc
jp
in
mov
pop
mov
lods
inc
sub
fldenv
adcb
and
loopne
movsl
popa
or
pop
mov
mov
lock
or
mov
adc
inc
cmpsl
ja
push
mov
jl
pop
imul
test
aad
fmulp
sbb
rclb
fnstenv
stos
iret
add
aad
inc
mov
shrl
inc
jb
jno
inc
das
sub
cwtl
jo
stc
push
push
dec
push
mov
lds
inc
stos
add
mov
cmp
sbb
ret
cmpsb
push
push
pop
in
sarl
sbbb
xchg
lods
dec
inc
inc
int3
xor
int3
push
xchg
push
iret
addr16
xorl
xchg
jmp
pop
sbb
or
lahf
addb
scas
mov
aad
test
popf
jnp
mov
and
rclb
out
test
cmpsb
adc
add
jp
fwait
adc
adc
sti
pop
lods
aaa
das
mov
popf
ret
push
movsl
imul
add
pop
daa
lods
adcl
pop
dec
cmp
push
adc
ds
xrelease
daa
cli
int3
push
cs
pop
outsb
iret
jle
rcl
mov
aas
dec
sbb
and
jg
cmp
pop
cmp
add
xchg
inc
mov
sub
mov
in
push
insl
aad
testb
mov
xchg
fcoml
sub
pop
test
test
xchg
hlt
hlt
inc
push
jb
imul
ljmp
or
sbb
repz
out
orl
push
ja
push
lods
notb
dec
loopne
jno
lahf
xor
xor
cmp
icebp
int3
mov
cmc
pop
rcr
inc
je
mov
sub
sub
cmp
add
add
movsl
fisttps
out
sub
outsl
jne
cld
popa
fs
jl
vsubss
push
sub
xorb
inc
out
mov
pop
or
flds
rcll
mov
xlat
xchg
fs
mov
or
daa
xor
add
cmp
ja
lods
es
mov
cld
dec
ficoms
jmp
sarl
add
xchg
ret
insl
scas
notl
and
jo
and
xor
inc
jns
sub
dec
inc
fcoml
jp
cmp
insl
adc
dec
add
gs
dec
sub
inc
jb
inc
insb
aas
pop
movsb
lods
rorl
arpl
imul
add
mov
push
push
mov
lahf
and
and
test
cmpsl
mov
outsl
insl
ds
fs
adc
fwait
mov
push
pushl
jns
xchg
dec
call
sbb
push
dec
inc
cld
call
pop
in
lcall
mov
add
ror
xor
ja
clc
icebp
jle
push
jno
fwait
outsl
popa
pop
test
pop
or
icebp
enter
mov
cmp
dec
xor
pop
mov
add
fcoms
xor
add
or
or
scas
imul
popf
je
inc
lahf
push
out
daa
int3
sub
insl
adc
out
int
sub
add
test
add
jne
mov
mov
pcmpeqw
sub
dec
add
mov
ss
movsl
push
sbb
xor
mov
mov
lret
or
int
hlt
dec
shll
xchg
mov
pusha
sub
js
into
mov
pop
repz
push
inc
jae
and
push
push
insl
jecxz
inc
fisttpll
ret
mov
mov
jmp
mov
or
cld
orl
inc
test
and
pop
adc
jne
xchg
xchg
loopne
pop
icebp
pop
push
push
mov
out
adc
push
aas
cmp
xor
stos
xor
pop
pop
lcall
inc
push
push
mov
sub
mov
repnz
and
aad
xchg
repz
sub
mov
jl
ds
xor
push
and
fnsave
sub
lcall
mov
stc
jb
adc
xor
adc
into
sbb
push
add
mov
mov
clc
jo
cwtl
ret
jo
shll
das
xchg
pop
inc
mov
imul
pop
sub
and
fidivrl
repnz
ret
mov
sbb
mov
sub
outsl
xchg
adc
sub
sub
sti
sub
cli
xchg
lock
push
movsl
push
insl
adc
mov
pop
fsts
dec
mov
outsl
sbb
push
push
xorb
rcrl
in
mov
dec
mov
push
int
jae
xchg
into
jbe
test
dec
jo
nop
inc
inc
lea
inc
xlat
xchg
mov
stc
xchg
mov
pop
in
jmp
or
jp
mov
push
sub
sarb
int
push
inc
add
insb
aam
in
stos
es
addr16
mov
loopne
xchg
and
pop
cli
dec
lods
ficoml
pop
and
adc
mov
sbb
int3
xchg
adc
je
add
and
fnstenv
mov
jo
xchg
rolb
fs
dec
mov
xchg
shrl
mov
push
or
les
push
sbb
scas
notl
mov
or
popw
test
lds
lret
ss
jb
out
int3
les
xor
mov
out
mov
ja
cmc
cld
sub
cmp
mov
jb
movl
inc
faddl
cs
out
add
sbb
repnz
adc
jo
push
and
cs
sahf
mov
fisttpl
fwait
cmp
js
les
sub
pop
mov
outsb
mov
mov
mov
decb
mov
jno
xchg
mov
sub
insl
pop
daa
test
addr16
mov
jmp
cld
dec
scas
fimuls
pop
cmp
sub
call
std
jnp
or
xchg
rcrl
movsl
add
push
clc
push
bound
mov
pop
lahf
pop
dec
clc
cmp
mov
das
mov
inc
xchg
inc
sbb
lret
cmp
push
das
inc
fwait
loopne
addr16
mov
mov
add
jbe
jae
arpl
lret
dec
aam
and
test
push
add
mov
mov
push
pusha
mov
popw
push
push
pusha
scas
and
xchg
sub
pop
or
xor
lea
outsl
clc
add
in
and
and
push
pop
scas
loope
push
or
pushf
fbstp
mov
push
mov
xorl
out
sub
movl
or
ds
xchg
add
repnz
jb
les
shl
les
add
jb
xchg
dec
mov
push
std
push
xor
je
je
dec
sub
dec
pushf
pop
mov
dec
movsl
sbb
pop
negb
xchg
jp
sbb
call
xchg
clc
cltd
inc
cmp
sti
mov
xchg
push
inc
or
enter
pop
or
sub
inc
cmpsl
test
sbb
pop
cmpsl
inc
mov
pop
outsb
dec
stos
mov
inc
lods
sub
sahf
lock
jae
decb
dec
sub
std
test
stc
jl
push
mov
dec
cwtl
test
repz
mov
mov
inc
xchg
mov
repnz
mov
mov
aaa
gs
pop
pop
adc
shrl
scas
sub
lahf
lock
jmp
push
push
stos
adc
xchg
js
xor
mov
mov
jecxz
add
jne
jecxz
lret
scas
push
scas
mov
mov
xor
fistl
sub
adc
daa
cmpsb
imul
sbb
imul
cs
and
jb
pop
and
lcall
ret
call
test
add
movsl
or
inc
mov
push
xchg
jge
fnstsw
mov
dec
push
add
sub
mov
test
push
xor
or
pushf
orl
sub
mov
les
mov
hlt
arpl
das
adc
vminss
adc
mov
imul
dec
cmp
and
or
jg
xor
mov
test
outsb
add
mov
dec
pop
adc
and
lret
pop
lods
ficompl
xchg
enter
loope
mov
int
add
xchg
es
jne
in
hlt
mov
mov
loope
add
int3
push
sub
daa
jns
sbb
inc
stc
mov
or
insb
lahf
sub
les
pop
idivl
xor
or
ss
mov
inc
push
adc
push
jg
stos
xor
flds
out
jmp
rclb
je
addb
sbb
mov
jle
dec
push
imul
fsub
dec
pusha
mov
mov
dec
inc
loope
gs
jb
sub
fsubs
in
mov
lods
lahf
mov
enter
mov
fsub
arpl
add
or
pop
cmp
popf
inc
addb
fmul
dec
ret
xchg
mov
dec
jne
loop
pop
xor
or
int3
jecxz
stc
inc
repz
aad
adc
dec
mov
sbb
jg
fidivrs
xor
shll
mov
outsb
dec
adc
cpuid
iret
xchg
cmp
dec
ret
sub
rolb
jmp
inc
jl
shlb
inc
std
movl
aad
aas
jnp
inc
and
fisubrs
pusha
jl
cmpsb
dec
adc
fs
call
ss
popf
dec
xor
jg
movsb
add
aaa
je
in
loopne
cltd
xchg
mov
mov
add
mov
mov
pop
cli
and
pop
push
mov
popf
mov
dec
sbb
cs
pop
test
ljmp
cmp
sub
mov
mov
ds
mov
in
cmp
fcmovu
leave
jl
cltd
jno
mov
lcall
push
stos
push
jmp
addb
mov
aaa
orl
scas
mov
jge
add
push
mov
loop
mov
inc
add
pop
mov
mov
cmp
sub
idivb
mov
cmp
lds
jle
sahf
rolb
in
std
sbb
add
mov
jno
cmpl
repnz
xlat
fdivrl
jg
jecxz
es
ds
clc
cmc
sti
add
cmp
xor
inc
pusha
test
arpl
add
mov
sub
adc
mov
fwait
dec
xor
mov
movsb
call
cmp
or
repnz
fwait
mov
imul
adc
ja
divb
jb
and
jle
jp
jo
arpl
in
sarl
cmp
outsb
je
jno
xchg
aaa
jg
xchg
in
lcall
adc
mov
dec
cltd
sbb
mov
repnz
xor
add
inc
xchg
or
scas
fisubrl
xchg
cmpsl
mov
xor
std
enter
dec
inc
sbb
sbb
lret
add
xchg
xor
adc
mov
inc
ret
jnp
push
dec
test
movsl
sbb
cmpsb
lea
mov
push
int3
mov
hlt
adc
xchg
jle
aaa
clc
dec
pop
mov
mov
lret
popf
xor
lds
sub
inc
test
cltd
dec
and
or
mov
mov
or
pop
lock
or
out
xor
mov
cmp
cmpsl
inc
cmp
lret
pop
bound
jge
mov
in
test
rcr
push
xchg
ljmp
mov
mov
ljmp
sarb
mov
das
push
cld
dec
outsb
out
sbb
jns
and
sbb
sub
jbe
in
daa
loop
push
es
pusha
and
cli
cmp
dec
and
lret
jge
mov
sbb
cmpsl
sub
push
lock
bound
lea
lahf
gs
push
adc
pop
fdiv
xchg
cld
je
cmp
push
dec
jmp
dec
cld
out
sub
fcoms
std
scas
stos
test
push
sbb
mov
jnp
loop
scas
loop
cld
jns
and
imul
rcrb
mov
cmp
xor
hlt
loopne
push
inc
jp
cld
mov
cli
lods
pusha
stc
pop
mov
mov
rcll
cld
iret
mov
fldenv
mov
aas
add
lods
pop
add
or
js
sub
cmc
out
xor
jmp
movsb
cmp
add
loop
dec
mov
repz
lcall
stos
insb
sbb
je
xor
loope
xor
out
fcomip
adc
add
push
fstps
mov
dec
mov
mov
icebp
xchg
lds
repz
call
repz
mov
sar
stc
imul
ljmp
fsubs
inc
stc
fs
xor
enter
jle
push
cs
shrb
add
mov
xchg
ds
divb
mov
scas
mov
aad
xchg
lcall
das
in
sub
mov
ret
mov
dec
pushl
mov
in
mov
aaa
shl
js
jnp
out
decb
test
cmpsb
inc
in
sti
int
cmp
xor
sub
dec
in
sbb
mov
out
cld
xchg
out
mov
and
sbb
repz
and
lods
iret
mov
xor
jno
push
pusha
pop
pop
mov
push
mov
inc
or
jo
mov
mov
shr
push
shrb
push
rol
push
ficoml
clc
jg
pop
movb
out
xor
std
nop
xlat
cmp
mov
lods
sbb
pop
mov
jnp
rolb
sbb
insl
sub
cltd
mov
push
adc
enter
shlb
adc
sbb
jbe
jmp
xor
inc
cmpsb
push
loop
enter
daa
fwait
xor
aas
cmc
add
out
jmp
fst
xor
inc
xor
leave
dec
xchg
data16
cmp
inc
add
lahf
mov
out
addr16
inc
enter
fldcw
cmc
int3
add
xor
cwtl
loop
testb
stc
int
push
push
rcl
add
mov
out
pop
push
mov
div
fdivrp
sbb
pushf
adcb
jne
adcl
imul
mov
dec
jle
xchg
dec
push
cmp
mov
pop
fwait
bound
lahf
mov
movsb
mov
mov
xchg
xchg
xor
and
popf
pop
ljmp
mov
mov
fsubrp
adc
sbb
xor
xchg
mov
and
jnp
imul
insb
mov
inc
imul
mov
push
pop
pusha
xor
lret
loopne
lods
or
push
bound
xchg
mov
ret
mov
pop
fs
pop
sbb
lret
sbb
adc
jecxz
andps
mov
test
enter
add
mov
mov
xor
and
or
cmp
fmuls
lahf
xor
scas
cmp
jmp
and
sub
mov
jns
dec
mov
sahf
shlb
mov
fcmovb
pusha
xchg
inc
inc
inc
push
in
inc
inc
rolb
mov
dec
test
rcrb
sbb
int3
adc
stos
hlt
mov
mov
jo
in
xor
cs
pop
add
insb
or
mov
sbb
and
push
and
lret
ret
ljmp
aam
adc
dec
ror
pop
mov
jns
cli
jno
cmp
cmp
ljmp
push
xchg
or
test
sub
xchg
sbb
fadds
outsb
xchg
in
movsl
in
xchg
add
test
insl
jp
push
ret
stc
push
in
movsb
fcomps
dec
sbb
cli
dec
ss
mov
lahf
inc
add
ja,pn
mov
mov
xor
inc
mov
add
jbe
cmp
jno
repnz
jmp
fidivl
sbbb
cmp
jbe
sub
iret
pop
adc
mov
addb
jl
or
aad
jae
test
inc
mov
cmp
or
push
fidivs
cmp
ret
gs
shll
push
push
hlt
hlt
sbb
aad
cld
int
inc
mov
movsl
inc
xor
aas
push
js
pop
inc
mov
mov
mov
sub
mov
sub
mov
cmp
enter
inc
insl
pushf
lds
das
jo
inc
push
out
adc
shl
cs
dec
or
pop
cli
movsl
push
loop
push
stos
fucom
mov
fsub
mov
cmp
pop
push
in
inc
push
cmp
xchg
xchg
mov
cld
mov
mov
and
jnp
leave
pushf
dec
jne
jmp
lahf
add
dec
pop
aam
ds
cmc
flds
inc
mov
xchg
clc
mov
aaa
pop
test
push
inc
or
or
in
mov
cli
or
aad
xchg
xlat
push
out
aad
loop
pop
xchg
xor
mov
xchg
iret
pusha
shlb
out
aaa
push
jno
dec
mov
sahf
jmp
xchg
cmc
adc
fstpt
xchg
add
or
jp
mov
sbb
ja
adc
mov
jle
mov
pusha
inc
adc
sbb
sub
sahf
fdivrl
loope
jmp
sbb
xchg
lods
movsl
xchg
out
cmp
mov
push
cmpsl
adc
clc
mov
jmp
mov
aas
or
repz
in
pop
cwtl
or
or
daa
and
daa
mov
out
jge
stc
cmpsb
addb
notl
adc
push
mov
rep
dec
jg
mov
xor
std
xlat
adc
and
pop
pop
loope
mov
jg
ret
pusha
dec
cmp
mov
lcall
mov
fistl
jecxz
sub
es
xor
mov
mov
or
mov
add
cmp
lret
daa
and
push
jbe
pop
hlt
das
cmp
jg
mov
mov
mov
sub
addl
mov
add
or
flds
jge
pop
or
out
lret
fwait
and
push
pop
lahf
rorl
pushf
jo
xlat
push
mov
negb
je,pn
inc
aaa
sti
mov
xchg
pop
test
mov
jnp
cli
sti
addb
sub
sbb
xor
rcll
in
cmpsl
adc
sarb
loop
mov
cmp
mov
aas
push
xchg
loope
std
lcall
in
bound
cli
xor
in
ds
jne
pop
or
and
das
xor
int
or
test
pop
inc
jmp
mov
add
sub
test
jae
adc
sbb
sbb
push
movsl
xchg
icebp
leave
xchg
arpl
rcrl
pop
sbb
cwtl
inc
ror
xor
imul
ret
xor
mov
testl
cmp
jl
push
pshufw
fwait
push
mov
xchg
sub
push
aam
mov
xchg
mov
cmp
stos
jbe
mov
adc
cmc
pop
xor
out
fisubl
sub
push
aad
lcall
adc
lcall
mov
js
or
inc
mov
loope
stc
loopne
stos
adc
outsl
andb
jbe
ret
sbb
push
pop
pop
fidivrs
inc
xchg
cmp
adc
xor
mov
aad
cld
jnp
pop
imul
cmp
inc
mov
popf
mov
mov
jp
inc
adc
mov
push
mov
mov
push
shll
sahf
sbb
and
movsb
push
mov
mov
lods
mov
std
xor
add
fnstcw
mov
mov
jb
jp
mov
fcmovne
sbb
outsb
test
sti
lcall
test
cli
and
mov
js
bound
sbb
jne
orl
jp
xlat
ror
sahf
xor
sti
pop
test
adc
test
sbb
insl
scas
dec
xchg
ja
jns
into
sbb
jnp
pop
iret
fisubrs
sub
in
jnp
and
mov
pop
inc
lcall
scas
xlat
je
mov
shll
stc
add
clc
cmp
and
and
loop
pop
jecxz
cmpsl
mov
and
movsb
rcrb
mov
inc
jb
mov
hlt
les
loope
sub
mov
pop
daa
loope
pop
mov
pop
push
adc
push
adc
fsubs
sub
cmp
push
int
pop
dec
pop
cmpsb
orl
imul
inc
fstl
adc
inc
inc
jno
cmp
out
mov
xchg
scas
mov
outsb
jo
mov
xchg
cmp
inc
sbb
clc
mov
mov
jns
sbb
adc
mov
mov
mov
repz
adc
mov
adc
loopne
jmp
pop
inc
xchg
mov
mov
xchg
insl
sbb
adc
or
out
leave
sbb
movsl
push
ret
out
test
cld
ret
data16
fists
mov
jge
ss
adc
or
or
add
xor
scas
iret
rcrl
jmp
fsubrs
mov
pop
push
mov
in
ret
cmc
xchg
movl
and
popa
cmpsb
cmc
xor
jge
ds
scas
pop
cmp
testb
and
rcll
jl
add
xor
add
bound
mov
push
pop
in
jb
lcall
adc
and
dec
mov
popa
fwait
push
cli
pop
arpl
mov
xor
mov
stos
jg
sub
push
scas
inc
aaa
push
push
or
mov
addb
sub
pop
xchg
xchg
sbb
psrld
xchg
jp
ss
push
lock
sbb
mov
imul
sbb
cli
cmp
out
rcrl
fmul
mov
stc
cmpsl
mov
out
mov
jmp
cmp
icebp
push
xchg
pop
cmpl
jno
dec
insl
divl
popl
ficoms
test
inc
mov
popf
adc
xlat
in
mov
inc
sbb
push
daa
xchg
sub
and
add
dec
jbe
sahf
sbb
and
stc
lahf
je
push
in
rcr
jb
cmp
fsubrl
aad
mov
ret
aad
dec
mov
or
loope
test
xor
icebp
insb
nop
mov
ret
push
lock
repnz
nop
test
jno
movsb
ljmp
mov
sbb
xchg
adc
mov
fldenv
loope
sub
xlat
mov
push
icebp
xchg
mov
or
lret
daa
popf
pop
inc
fstps
lret
out
ljmp
cmp
inc
and
pop
pop
fwait
into
cmp
je
sbb
call
ljmp
popa
cmp
inc
das
sti
xor
pop
jb
sub
cwtl
imul
in
sub
pop
mov
leave
and
pop
mov
xchg
mov
lods
test
lods
push
push
in
out
adc
cmp
ljmp
push
adc
mov
and
add
xchg
dec
lock
sbb
mov
sbb
cmp
xorl
loope
inc
sub
int
sbb
pop
aam
scas
cmpsb
adc
andl
cwtl
insl
pop
xlat
inc
daa
jbe
adc
cli
outsl
push
mov
stos
push
lock
sub
mov
arpl
aam
lret
xchg
push
sbb
je
shlb
pop
mov
cmp
pop
mov
fs
imul
or
fwait
imul
stc
loopne
into
inc
pop
inc
sahf
jns
xchg
or
addl
mov
out
cltd
lea
mov
add
sbb
sbb
xor
jecxz
mov
scas
or
stc
je
mov
push
xor
scas
push
fimull
jmp
fs
fidivrl
fnsave
xchg
insl
movsl
orb
adc
das
hlt
sbb
pop
popf
lock
pop
mov
pop
cwtl
nop
leave
in
outsl
popa
cwtl
stc
mov
aas
subl
icebp
add
mov
sbb
adc
scas
insl
push
inc
push
inc
sbb
sub
in
jp
or
jns
sub
mov
pop
cmp
and
adc
stos
mov
mov
ret
aad
inc
jge
outsb
sub
sbb
jnp
mov
mov
fcomps
adc
jbe
daa
xchg
and
out
sub
outsl
pop
jg
jg
xor
dec
aas
or
stos
lock
test
xor
fcmovbe
aad
test
xlat
or
mov
es
sahf
loope
sbb
mov
es
dec
mov
sbb
popf
cltd
pop
jo
xor
aas
out
lahf
jbe
jge
or
push
outsl
stos
xchg
mov
insl
push
iret
mov
sbb
mov
ret
hlt
iret
jl
mov
push
push
hlt
push
fistl
jno
hlt
sub
lcall
data16
mov
push
sub
hlt
es
or
test
cmpsb
xor
in
aaa
fcmovne
test
add
rorb
lods
ret
das
out
call
popf
push
aaa
mov
cmp
jg
dec
inc
ret
mov
inc
dec
sbb
fdivp
mov
jne
in
lds
fdivs
jns
push
fistpl
cmp
sub
idivl
shrl
roll
mov
addr16
xchg
and
or
and
mov
push
pusha
add
sub
aam
cmp
stos
idiv
jge
dec
negl
adc
sub
mov
stos
shrl
add
inc
lock
mov
dec
insl
mov
jl
repnz
push
in
push
movl
mov
mov
mov
jecxz
notb
test
inc
mov
enter
adc
or
mov
ret
test
mov
xchg
xchg
add
push
mov
dec
sub
jne
test
stos
mov
xor
adc
in
in
andb
cmpsb
adc
in
mov
mov
adc
ss
add
fs
add
add
fimuls
rcrl
out
sti
jmp
sub
or
xlat
push
lcall
les
decb
icebp
and
cli
das
push
dec
mov
lds
cli
arpl
pushf
lods
cmpsl
sub
dec
rcrb
stc
adc
test
push
mov
iret
sbb
push
adc
or
imul
xor
xor
pop
lahf
cmp
cs
ds
jmp
shrb
aas
aas
movsl
fs
mov
cmp
jo
push
mov
divps
icebp
xor
fsubrl
shufps
mov
push
xchg
hlt
hlt
mov
outsb
push
dec
fidivrl
out
add
scas
shll
movsl
xor
cmp
rcrl
jge
call
pop
loop
mov
movb
cmp
pop
add
and
and
mov
inc
fsubrl
push
pop
cmp
adc
inc
movsb
mov
push
fisttpl
mov
pop
or
ret
js
sbb
mov
in
sahf
adc
andb
mov
scas
pop
cmpsl
pop
mov
push
mov
mov
mov
xor
and
popf
push
flds
or
ficompl
sbb
dec
shll
lods
and
adc
xor
sti
sub
outsl
xrelease
outsb
aaa
mov
push
adc
inc
std
in
stos
push
add
in
jg
mov
cmp
xchg
or
fldt
sbb
movl
dec
adcb
xchg
das
add
mov
ret
loopne
dec
jg
mov
mov
lock
mov
or
xor
cmp
xchg
dec
aad
sbb
lods
adc
divb
rcr
fcoms
bound
sub
xchg
pop
sub
ret
and
cmpsl
aaa
cli
mov
dec
jno
popf
xchg
cs
dec
addl
sbb
test
les
popa
into
and
push
cmpsb
pop
cltd
jno
pop
sti
add
insl
mov
mov
push
lret
les
jae
ss
nop
inc
ja
leave
xchg
cltd
popf
stos
popf
xor
or
test
pop
fidivrs
push
movsb
fdivl
sub
out
xor
inc
adc
int
xchg
scas
cmpsb
xchg
daa
lods
mov
jl
xchg
xchg
hlt
lret
jp
and
aad
out
push
mov
sbb
cmpsl
dec
or
dec
js
ret
push
push
push
int3
inc
scas
aaa
inc
jmp
mov
out
ss
andb
scas
or
je
fildl
out
fs
jecxz
and
and
stos
xchg
movsb
loopne
sub
cmpsb
lods
sub
fcmovne
daa
cmc
or
mov
mov
mov
mov
mov
jmp
add
jp
pop
out
movsl
rcrb
or
inc
pop
push
insl
cwtl
dec
mov
jl
sbb
orb
imul
fnstcw
add
das
gs
dec
sub
jns
mov
xchg
mov
inc
jb
aam
jno
sti
in
lea
nop
adc
mov
rcll
sbb
jne
mov
das
repz
mov
pop
cmp
arpl
mov
js
dec
inc
xor
ret
cmp
addr16
aaa
inc
or
sti
stc
inc
test
fwait
test
sub
xor
push
xchg
stos
scas
push
aam
mov
push
jecxz
sbb
and
mov
sub
imul
subb
xchg
adc
push
dec
add
pop
xor
imull
adc
mov
or
mov
arpl
adcl
loope
mov
iret
xlat
push
les
and
mov
dec
pusha
pop
subl
mov
adc
stc
jno
and
add
xchg
jge
jmp
jbe
jg
cmc
out
out
or
and
jnp
ret
pop
pop
cld
lods
pop
mov
push
pop
lods
pop
lahf
daa
inc
cmc
adc
cld
arpl
setge
or
jo
rorl
sub
jecxz
out
dec
add
out
je
jmp
fs
push
push
cmp
or
test
stc
or
xor
les
mov
mov
lods
addl
mov
push
fcmovnbe
cmp
push
mov
mov
or
fdivrs
fs
and
mov
mov
icebp
adc
mov
xchg
xchg
repz
jg
pop
mov
or
sub
or
xor
ljmp
mov
shrl
lods
or
jns
or
mov
ret
movsb
xchg
scas
hlt
xchg
cld
insb
dec
dec
sbb
jbe
pop
stos
icebp
jmp
js
out
es
movsl
in
insl
xlat
fwait
push
push
ret
pop
sbb
icebp
sti
lahf
lea
pop
test
shrb
gs
rorb
pop
add
inc
mov
jbe
add
sub
xchg
xor
loop
cmp
in
cmp
out
inc
mov
test
ja
add
dec
adc
inc
cmpsb
aaa
std
out
lock
lds
pop
test
into
mov
mov
std
pop
es
shrb
push
dec
imul
les
nop
cmp
jl
clc
imul
gs
push
orb
icebp
push
dec
sub
mov
cmpl
dec
mov
cmp
jb
cwtl
std
fcoml
popa
fnstcw
outsl
nop
mov
add
push
xorb
add
push
ss
mov
or
repnz
inc
sahf
adc
iret
mov
mov
into
ret
out
in
in
stc
cmpsl
push
clc
inc
push
lock
sbb
push
mov
cmp
sub
lret
cs
lock
dec
pop
imul
test
insb
and
push
lahf
outsb
mov
popa
lock
xchg
adc
js
mov
jnp
push
xchg
or
stc
push
aad
sub
pop
sbb
push
loop
push
je
adc
push
aad
repnz
es
jbe
loop
mov
mov
xor
dec
cli
hlt
mov
cmpsl
addb
push
int
sbb
insl
iret
pop
fisttpl
jmp
cmp
sub
movsb
inc
cmpb
xchg
dec
fwait
data16
and
jno
or
pop
je
jmp
imul
jecxz
sbb
sbb
ret
xlat
push
mov
mov
push
mov
sub
mov
cli
rcll
cmp
repnz
std
cmc
fistps
mov
into
popa
stos
sbb
repnz
mov
fisubrl
inc
int
xor
lea
insb
and
loop
dec
std
fcomps
ja
or
ljmp
inc
pop
jmp
adc
cmovbe
sbb
jmp
mov
and
xchg
and
cli
sbb
dec
and
loop
pusha
daa
shrb
adc
dec
mov
dec
in
xor
fsubl
cmpsl
jbe
inc
mov
pop
adc
push
xor
push
lret
psrlq
mov
jbe
xor
es
push
cwtl
lret
xchg
adc
imul
repnz
ret
testb
test
add
mov
fcmovbe
mov
cli
pop
xchg
es
adc
lcall
arpl
mov
hlt
xorb
call
jg
add
bnd
repnz
out
push
dec
jg
js
icebp
add
loop
mov
xor
popa
mov
jae
xchg
adc
jmp
movsb
cmp
push
xchg
in
inc
add
xor
fsts
push
in
lret
dec
aas
push
cmp
push
dec
add
mov
sti
and
or
arpl
mov
mov
mov
lret
pushf
mov
pop
mov
imul
rcrb
outsl
fs
pop
xchg
mov
lcall
add
enter
mov
sbb
int3
cmc
mov
sub
repnz
sub
mov
push
jle
lods
inc
add
and
daa
pop
rolb
sbb
fidivs
inc
mov
add
jno
pop
incb
gs
ljmp
ret
out
push
lcall
pop
les
ljmp
add
cmp
scas
or
gs
sbb
pop
pop
mov
scas
xor
sahf
je
adc
in
mov
ret
xchg
in
mov
cmpb
pop
jo
shll
xor
or
dec
mov
cmp
xchg
test
gs
loop
and
mov
push
pusha
fisttpll
fists
pop
adc
jno
clc
or
mov
pusha
pop
cmpw
cwtl
data16
sbb
in
pop
in
xchg
inc
jl
loope
adc
mov
adc
add
in
pushf
dec
cmp
cmpsb
stc
xorl
adc
mov
clc
and
mov
aas
lock
repz
jno
sbb
mov
fwait
clc
ret
xchg
cmp
or
test
xor
pop
mov
je
ret
inc
adc
in
jns
adc
subb
xchg
frstor
aaa
dec
mov
lret
push
sub
pop
rclb
js
mov
and
movsb
add
pusha
lahf
mov
sub
scas
and
mov
ret
call
mov
push
fbstp
push
xor
sub
lahf
les
shll
inc
adc
jl
mov
mov
jns
cmpsb
dec
or
dec
mov
lcall
adc
mov
lock
fdivrl
es
xchg
pop
int
idivb
movsb
insl
das
push
loope
push
stos
jns
sbb
push
ljmp
push
or
push
mov
sbb
sbb
sbb
and
dec
mov
aaa
negb
sahf
inc
and
ret
cmp
adc
test
fcmovb
jae
scas
outsb
mov
ret
popa
xlat
jb
jne
mov
and
xchg
shll
add
jp
punpckhbw
aam
cmp
das
adc
out
daa
icebp
jb
push
push
jp
loope
push
jo
push
jns
mov
jge
add
inc
adc
incb
cmp
rorl
test
insl
dec
jg
cmp
aam
repz
push
test
cmpsb
loope
aad
and
rorl
pop
loope
xor
repnz
dec
cmovns
imul
insb
xchg
repz
ss
push
inc
jle
nop
xor
jg
dec
fwait
cmp
cmp
arpl
sbb
push
stos
dec
jne
sub
jbe
stos
fidivs
gs
fisubs
or
jmp
add
xor
icebp
sahf
or
xchg
cmp
call
push
mov
faddl
popa
push
jg
cmp
or
in
sbb
jecxz
das
pushl
in
aaa
cmc
loopne
outsl
dec
adc
push
cltd
or
faddl
out
test
hlt
scas
cltd
xor
into
mov
xor
adc
and
outsl
pop
loop
xchg
inc
push
dec
mov
sbb
xor
and
mov
aam
fcmovnu
xlat
or
sarb
ss
dec
fcmovbe
xor
xchg
jae
fstps
sbb
inc
mov
inc
inc
jmp
mov
pusha
std
les
rcr
pop
in
sbb
push
mov
ljmp
adc
lods
xor
stc
xlat
jg
lock
lods
or
xor
movsl
test
jge
hlt
push
inc
fmulp
adc
xor
loop
inc
and
push
xor
and
push
inc
push
or
xor
xchg
jg
and
and
cmp
popf
lock
mov
out
and
cmp
test
pop
cmp
imul
aam
fnsave
rorb
cmp
xchg
xor
aam
inc
xor
pop
andl
lock
add
push
lods
hlt
imul
jmp
xor
adc
lea
dec
out
mov
add
les
shlb
mov
cmp
mov
inc
adc
push
negl
jo
pop
fs
call
lods
aam
push
push
jecxz
add
push
adc
dec
aaa
and
adc
dec
rorl
push
stos
inc
inc
xlat
ret
adc
mov
sub
int
xor
aam
dec
sub
jmp
mov
sub
mov
cltd
jno
enter
or
cmp
xor
push
insl
pop
pusha
insb
and
popa
sbb
sbb
cmp
inc
sbb
aaa
mov
mov
lcall
bound
arpl
stos
sbb
adc
aad
andps
push
pop
cwtl
mov
hlt
xlat
aaa
les
sub
mov
std
jl,pt
ret
es
lock
mov
push
leave
scas
pop
imul
clc
mov
loopne
aas
dec
aaa
or
data16
popl
add
loopne
dec
pop
aad
dec
dec
pop
clc
outsb
test
iret
daa
add
int
mov
cmp
or
xor
or
sub
mov
fs
sub
insl
inc
mov
sbb
ja
mov
pop
jb
loope
add
inc
or
xor
pop
repz
pop
dec
add
add
aad
mov
sub
icebp
xlat
test
gs
clc
pop
mov
push
mov
nop
jb
or
xchg
mov
loope
sbb
pop
pushf
out
test
mov
aas
idivb
and
or
xchg
pop
pop
dec
sub
push
rcrl
mov
mov
cmp
in
ret
adc
or
shrl
push
pusha
push
mov
xor
sub
lds
in
decl
jnp
icebp
add
xlat
rcrl
les
pop
adc
hlt
ret
outsl
cltd
mov
cmp
or
lahf
fimull
leave
and
das
repnz
call
shlb
mov
mov
sbbl
out
ror
mov
vldmxcsr
movsb
xor
jp
notb
ret
cmp
dec
push
add
test
mov
mov
shll
rorl
mov
in
ret
or
fwait
or
push
lret
jge
xor
push
mov
fidivl
jecxz
sbb
xlat
push
xlat
repz
cmp
dec
mov
icebp
jae
and
out
aaa
mov
sub
out
lret
add
imul
rorb
dec
ret
dec
in
fs
xlat
sub
mov
jge
mov
mov
sbb
insb
push
cmp
pop
test
adc
in
rcrl
scas
sar
and
aaa
lret
out
out
in
loope
mov
mov
lock
cltd
test
or
rorb
addr16
dec
xchg
loop
xorl
dec
fldcw
dec
mov
jb
enter
jcxz
jp
xchg
mov
fstpl
call
outsb
cmp
insl
sbb
in
mov
xchg
loopne
bnd
test
add
sahf
cmc
mov
pusha
nop
cmp
shll
ret
jbe
jmp
adc
rolb
xchg
push
xor
icebp
push
and
pushl
fistl
cmc
and
scas
xor
sbb
aad
mov
xor
xchg
mov
and
fstl
shlb
rcll
sbb
lahf
cmp
push
pop
and
mov
push
mov
out
icebp
cltd
mov
shlb
fidivrs
cmc
stos
push
insl
int
cmp
lods
fwait
sbb
out
mov
mov
xor
dec
and
push
sbb
lret
lods
push
cs
jbe
add
and
jns
cmp
fmul
pop
sbb
xor
insl
faddl
pop
lret
pop
xchg
ficoms
in
add
sub
movsb
xchg
sub
xchg
adc
mov
lret
xchg
jnp
sub
popf
mov
into
testl
lods
outsl
xor
mov
xchg
ret
pop
xchg
push
mov
insb
mov
dec
arpl
dec
jnp
mov
rcrl
mov
cmp
adc
push
loopne
inc
aad
fwait
popa
sbb
or
jle
sbb
pop
xor
std
mov
cmp
xor
mulb
fsubrs
mov
dec
and
dec
push
movsl
adcl
in
push
scas
cmp
dec
adc
pop
mov
jp
aaa
stos
call
inc
sahf
xor
or
mov
or
sub
neg
mov
sti
mov
sbb
and
xor
ret
daa
jp
xor
fsubs
push
add
mov
push
push
push
test
addl
pop
mov
rclb
pop
jg
push
fistl
stos
mov
aad
push
dec
xchg
stos
xor
pop
fildl
js
mov
and
or
cmpsl
scas
jb
xchg
mov
mov
jbe
pop
sub
xor
xor
inc
push
xchg
push
cmc
sbb
cli
sub
aas
sarl
lock
ret
stc
dec
cmp
fisubs
add
and
test
out
inc
daa
jb
add
hlt
sbb
push
fidivs
add
out
sub
jge
popf
imul
dec
fldenv
mov
mov
icebp
test
pop
lret
out
add
xchg
push
adc
xchg
loope
xchg
mov
sarl
or
push
leave
xor
pop
fbld
repz
jae
pop
push
sarb
cmp
insb
cmp
jmp
pop
and
jmp
fiaddl
loop
inc
stc
mov
std
hlt
movsb
lret
and
mov
mov
cs
cmp
jnp
ljmp
push
repz
dec
rolb
cltd
mov
in
pop
cmpb
xchg
inc
lahf
jb
xor
push
jne
mov
add
dec
fldl
inc
jns
add
add
in
mov
or
daa
jl
xor
clc
push
mov
or
ret
adc
bound
orl
test
test
jns
mov
add
pusha
xchg
pop
shlb
rolb
pop
faddl
stc
push
push
ss
mov
dec
popl
ljmp
mov
push
pop
mov
lea
and
inc
cld
push
xchg
inc
and
mov
mov
aas
sub
das
jno
and
lods
xor
inc
push
push
sbb
fisttpll
xor
loop
and
ljmp
xchg
pop
and
and
bound
pop
js
xchg
int3
dec
insb
lret
mov
repz
scas
imul
pop
jns
push
daa
ret
push
leave
and
dec
in
loopne
xchg
je
mov
sub
push
adc
inc
loopne
xchg
dec
push
inc
bound
out
insl
add
push
roll
cli
cmp
sbb
repz
fcompl
in
sahf
mov
ja
cmpl
icebp
pop
add
cmp
inc
and
and
adc
mov
mov
dec
outsb
inc
mov
shl
fstl
push
push
iret
push
push
cmp
adc
sub
sub
aad
push
scas
pop
negb
cld
inc
aad
inc
loop
stos
and
dec
pop
gs
scas
mov
push
cld
dec
adc
and
dec
cmp
and
and
push
mov
push
dec
push
adc
or
inc
daa
ljmp
dec
xor
add
xchg
mov
aad
aam
sahf
and
orb
jbe
xchg
pop
push
xchg
sahf
xchg
subb
jo
push
xchg
ljmp
es
call
adc
fwait
mov
mov
sbb
gs
sbb
lret
loope
xchg
js
ds
xor
mov
xor
roll
lret
adc
sbb
cwtl
dec
push
sbb
cli
stc
cs
xlat
mov
add
aam
setl
xrelease
xchg
pop
cmp
call
aam
pop
sar
negb
test
fcomip
push
jno
push
push
hlt
jbe
arpl
dec
pmaxsw
in
push
fs
sbb
into
jle
xor
xchg
aaa
and
adc
xchg
bound
lock
les
adcb
loope
mov
push
mov
push
and
idivb
insb
sbb
and
add
mov
jecxz
clc
popa
movsl
sub
sbb
xchg
data16
fiadds
mov
inc
aam
cmp
mov
hlt
adc
loop
xor
pop
push
xchg
jmp
lock
test
add
sub
ljmp
sub
int
sub
xor
outsb
stc
repnz
sub
cld
loopne
test
push
xchg
jnp
lods
xor
mov
int
mov
ja
std
test
push
hlt
jmp
add
and
fisubrl
pop
adc
pop
nop
mov
imul
jb
repnz
cmp
dec
jge
ja
mov
inc
adc
or
rorb
sbb
or
aas
pop
cmp
addr16
movsl
cmp
adc
push
fiaddl
outsb
add
stos
and
pop
and
cmp
jmp
sub
mov
pop
call
rcll
test
dec
mov
frstor
mov
sub
pop
popf
cmpsb
jns
outsl
sarb
inc
or
cmp
sub
call
or
inc
out
sti
inc
mov
test
push
cmp
das
test
movsb
ds
or
icebp
xchg
adc
push
dec
add
pop
xchg
mov
imul
imul
pop
sub
adc
cli
push
jo
test
xchg
ret
xchg
jne
dec
add
in
pop
loop
push
fildll
ljmp
sbb
adc
cwtl
in
dec
cmpsb
popa
jae
int
popa
imul
cmp
adc
mov
sbb
in
push
mov
xor
adc
xchg
sahf
scas
aaa
pop
lds
or
test
adc
mov
pop
push
adc
ljmp
lds
enter
fs
push
shlb
mov
inc
fucomip
bound
cmpl
lods
lods
mov
sub
ljmp
cmpsb
push
push
mov
jg
mov
daa
div
push
dec
shl
xchg
sti
pop
outsb
jbe
push
mov
jmp
int
push
fcmovne
inc
mov
adc
in
and
adc
push
mov
jnp
shl
or
ret
pop
jno
mov
mov
jg
pop
iret
sub
arpl
xor
repz
jns
mov
aad
xor
cmc
test
pushf
aaa
pop
cmpsl
clc
aaa
push
fld
xor
out
in
pop
test
jecxz
sbb
fwait
or
mov
neg
test
sti
mov
push
leave
iret
mov
inc
popf
cwtl
push
or
loopne
daa
and
xor
mov
and
into
mov
mov
jecxz
icebp
sub
mov
test
pop
mov
mov
in
idivl
gs
int3
jg
mov
lcall
repz
sbb
lret
sub
mov
and
cs
jne
out
adc
xor
and
mov
or
xor
in
popf
in
jge
dec
mov
mov
je
rcll
rcrb
out
dec
sbbl
sbb
fwait
mov
cmp
mov
ret
jge
in
cmp
les
aas
sub
sbbl
andb
pop
cmp
pop
adc
ja
rcrb
out
jo
lret
stc
xchg
movsb
mov
std
pop
jecxz
aas
pop
nop
sahf
jge
adc
loop
movsl
mov
mov
lea
mov
out
pop
sbbl
mov
in
call
fiadds
into
xor
adc
jmp
stc
jl
push
je
add
data16
inc
or
fstpl
mov
movsl
cltd
std
xchg
mov
mov
ljmp
mov
push
and
adc
sar
pop
add
inc
mov
add
enter
and
jmp
mov
imul
pop
pop
jbe
inc
mov
cmp
cld
in
push
ror
inc
mov
mov
inc
inc
and
add
push
mov
andb
and
out
sbb
mov
xor
mov
adc
push
sub
sub
push
fucom
and
mov
enter
cmpxchg
mov
jb
xchg
negb
xchg
adc
xchg
mov
enter
shrl
rcr
lret
fnstcw
pop
inc
push
fwait
rolb
jno
les
xchg
adc
icebp
ret
mov
add
rclb
mov
test
repz
insl
sub
bnd
jmp
jnp
movsl
cld
add
das
sub
push
std
gs
adc
add
inc
sahf
insl
insl
arpl
cmp
in
pop
jecxz
nop
inc
and
aaa
cmp
pop
js
nop
lret
insb
gs
fcmovbe
in
sbb
scas
sub
push
popa
ja
dec
mov
push
adc
sarl
out
mov
lods
pop
dec
or
mov
pop
popf
decb
scas
dec
jp
or
insb
stc
or
sub
jb
mov
cmp
or
pop
vcomisd
pop
push
push
nop
mov
cmpsl
in
loop
fwait
stos
nop
sub
jns
adc
pop
sub
es
push
mov
ljmp
xchg
xchg
inc
insb
jae
std
adc
sbb
jb
pop
stos
dec
iret
out
push
push
sub
enter
push
push
cmp
adc
cmp
ss
mov
xchg
mov
dec
in
push
cmp
mov
repz
jecxz
enter
and
mov
cld
inc
push
add
shlb
ljmp
scas
ljmp
mov
movsl
fstl
pop
es
shr
xchg
adcb
cmp
or
ret
cmp
jns
push
orl
daa
in
xchg
and
popf
dec
mov
xchg
test
pushf
fwait
push
data16
jbe
dec
xor
divb
jns
xchg
cmp
shll
pop
add
fidivrl
cmp
pop
ficompl
cld
and
mov
adc
fcmovbe
leave
or
shrb
jle
leave
mov
lcall
mov
nop
jno
mov
test
mov
or
lret
xchg
mulb
jbe
fiaddl
push
push
dec
shr
dec
testb
dec
les
btc
xor
sarl
xchg
push
pop
or
nop
out
in
hlt
and
js
dec
push
dec
test
fisubl
mov
scas
push
fnstcw
fcompl
insl
dec
xor
pop
xchg
push
mov
and
call
test
jb
out
push
adc
adc
xor
sbb
les
mov
sub
sbb
sub
and
cmp
es
xchg
add
or
cmp
xchg
xor
iret
inc
inc
leave
in
fists
pusha
out
decl
push
aad
or
xchg
cwtl
dec
mov
cltd
adc
xor
jge
dec
inc
inc
add
out
push
fstp
jno
icebp
repnz
fbstp
pop
mov
xchg
mov
loope
mov
and
pop
fisttpl
dec
movsl
cmpsb
rolb
fisttpl
xor
data16
cmp
dec
sbb
repz
leave
ljmp
cmp
enter
decl
pop
jg
and
dec
xchg
or
lret
lcall
pusha
dec
fsubrs
imul
scas
push
cld
outsl
and
ja
jb
stos
inc
movsb
sbb
imull
jg
sub
xchg
add
mov
push
add
hlt
cmc
es
test
ljmp
sarb
or
adc
stos
fsubp
fcomps
or
loop
mov
pop
clc
dec
scas
fidivrs
add
or
popa
data16
rcrb
movsb
testb
icebp
inc
inc
push
mov
and
stos
loope
add
movsb
shrl
xor
sub
rcl
mov
sbb
cmc
fldl
rcrl
xor
test
and
pusha
fiadds
mov
mov
outsb
enter
xor
outsb
dec
push
pop
sub
lods
rcr
pop
inc
dec
stc
jb
push
inc
pop
pusha
movsl
mov
mov
push
push
dec
xor
test
xchg
loopne
mov
pop
repz
push
or
and
push
out
inc
outsb
mov
xchg
dec
cmp
push
xchg
push
int
fistpll
pop
ss
popa
hlt
push
lods
inc
stos
arpl
inc
cmpsb
aad
push
xor
aas
sbb
cmpl
out
cli
bound
sub
add
adc
std
fsts
pop
rcll
push
pusha
hlt
jns
mov
sarl
lods
mov
test
scas
cmp
cmc
andl
loope
cmp
cmp
cmp
repz
mov
aad
arpl
inc
pusha
stos
shr
or
ljmp
clc
cmp
sub
out
xor
sti
pop
insb
sub
cmc
dec
cld
leave
cmp
fnstenv
ror
fdivl
dec
int3
cmp
sbb
aad
or
cltd
dec
loope
clc
fiadds
iret
dec
icebp
inc
xchg
notb
loop
jbe
jle
shl
and
stc
scas
aaa
push
ds
lahf
cmpsl
jge
xlat
je
je
jle
push
lret
add
cmp
pop
ret
loop
cmc
enter
xor
adc
aaa
dec
jns
mov
ret
popf
shlb
mov
rorl
xor
fisubrl
inc
and
rorl
mov
xlat
xchg
cs
sub
add
stos
xchg
xor
int
push
popa
call
cmp
filds
cmp
shll
inc
cmp
or
inc
pop
and
add
push
andb
sub
sahf
cmp
jecxz
dec
push
inc
sub
out
jb
mov
clc
loopne
cmpl
lret
sub
cwtl
jge
sbb
mull
and
mov
outsb
push
jmp
adc
cli
lea
cmp
fnstenv
aad
sti
push
xor
adc
push
inc
xchg
xchg
stos
popf
and
or
mov
push
gs
inc
push
add
xor
xchg
xlat
or
cmp
jp
imul
mov
gs
push
and
sbb
mov
add
je
daa
outsl
in
movsl
ljmp
stc
cmp
jno
stc
push
push
mov
sbbb
jns
and
sub
aas
push
bound
lcall
repnz
mov
ljmp
inc
adc
bound
cmpsb
loop
ret
mov
xor
pop
out
dec
add
cmc
inc
andl
shrb
int3
mov
mov
jl
les
stos
popf
mov
call
adc
add
sbb
pop
pop
roll
cld
js
cld
inc
adc
shlb
fistpl
inc
pushf
gs
jle
ds
aad
ret
bound
popa
insb
std
jno
hlt
lret
xor
xchg
shll
xor
adc
es
icebp
pusha
loopne
mov
out
ds
es
mov
iret
nop
jmp
dec
cwtl
incl
aas
mov
aaa
mov
shrl
push
mov
cltd
cs
jmp
or
or
dec
insl
sti
or
inc
push
aam
clc
xchg
cmp
fwait
or
cld
sahf
stos
icebp
outsb
test
outsl
int3
or
ret
fwait
test
scas
cld
push
add
or
xchg
jae
insl
dec
aad
jne
mov
inc
fisttps
data16
sub
aam
cltd
cmp
sahf
sbb
add
stos
push
mov
mov
out
jns
notb
mov
and
scas
push
in
inc
and
jg
sbb
xor
loopne
inc
rcr
sub
sarl
rcrb
add
cltd
imul
or
das
imul
xor
loop
push
push
call
cmp
cmp
outsl
pushf
mov
movsb
bound
enter
std
and
xchg
adc
popl
xchg
fmul
ljmp
jmp
pushf
dec
aaa
pop
test
int3
push
into
cmp
mov
rcl
push
mov
pop
insl
dec
add
add
inc
add
int3
sbb
iret
pop
repz
stc
insb
cmpb
enter
aas
sbb
fwait
testb
in
adc
jp
cmpsl
imul
inc
fidivs
sbbb
fstl
adcb
sub
add
fcompl
push
mov
pop
sbb
inc
orl
mov
ljmp
push
gs
into
and
int
sti
daa
cmp
repnz
cmp
and
js
mov
dec
outsl
or
mov
ficomps
nop
sbb
ljmp
cmpsb
sub
loop
loope
call
inc
cli
pop
sub
aaa
mov
or
cmp
int3
lods
inc
int
cmp
in
jns
vprotw
jecxz
sbb
mov
int
jbe
or
push
into
daa
cwtl
ret
in
popa
es
and
cmp
mov
push
sahf
push
out
lcall
out
fistpl
push
loope
or
gs
fwait
dec
fiadds
inc
push
call
jne
or
mov
xchg
arpl
inc
push
or
adc
xchg
and
addr16
int3
pop
jb
adc
mov
push
jns
sub
in
xorl
insb
pop
cltd
repz
sub
xlat
push
lods
cmpsb
ss
decb
popa
or
xchg
push
hlt
or
fisubs
jnp
adc
mov
mov
inc
gs
push
scas
nop
and
hlt
loope
inc
sbb
jne
jecxz
adc
dec
mov
push
xchg
push
lock
mov
jne
push
cmc
rcrl
cld
dec
push
jnp
pop
fcomps
mov
daa
and
inc
pop
enter
fisubl
notb
cmp
ds
sahf
and
xchg
sub
inc
jge
ffreep
xor
std
lds
and
cmp
flds
xor
jle
and
ret
int3
or
dec
sbb
movsl
cmp
js
pop
hlt
or
and
mov
sbb
xor
in
mov
insb
mov
adc
movsb
xor
sbb
arpl
cld
push
dec
push
iret
mov
pop
shlb
adc
push
push
mov
getsec
dec
push
pop
mov
pop
mov
mov
fs
jbe
mov
and
ret
neg
cmp
dec
rcrl
sbb
bound
xor
repnz
inc
lret
repz
test
dec
lods
test
mov
cmp
test
cmp
fcom
aas
jbe
fnstenv
inc
add
sbb
out
out
push
or
aam
out
or
out
gs
jp
jmp
lahf
add
test
or
and
xor
inc
shlb
int3
pop
mov
xor
inc
ja
cwtl
fldt
mov
lea
sbb
out
int3
or
adc
or
cs
cmp
adc
jo
insl
out
pop
imul
jno
popf
xchg
mov
mov
lods
leave
adc
outsb
nop
mov
mov
cmp
fcmove
inc
in
jne
mov
mov
cmpsl
in
adc
pusha
les
mov
jae
xchg
pushf
cmp
pop
popa
ljmp
xor
lea
xchg
jbe
rolb
push
std
xorl
test
xchg
movsl
out
pop
sbb
daa
outsb
cmp
pop
flds
std
mov
int3
push
jne
shl
mov
jae,pn
push
cld
adc
inc
movb
sbb
div
addl
mov
sahf
adc
scas
in
jp
cmpl
cmp
das
push
add
sbb
adc
stos
gs
cltd
mov
dec
and
dec
arpl
outsb
repz
lcall
mov
mov
mov
or
dec
js
mov
or
aas
lds
cmpsb
mov
ret
leave
mov
out
sub
mov
int
xchg
orl
xor
movsb
je
xor
test
in
pop
movsl
pop
mov
test
pop
out
xor
dec
dec
jne
in
inc
adc
mov
mov
sarl
inc
scas
subb
sbb
out
adc
aaa
pop
xchg
out
fmull
sarb
int
jp
lret
aas
jg
in
insb
mov
les
sbb
xchg
mov
ss
fwait
js
or
fstps
or
mov
sti
sbb
into
push
loop
or
out
in
in
shr
sbb
shl
xor
std
pop
push
dec
push
xorl
int3
subps
lock
inc
or
scas
test
or
adc
sbb
mov
mov
lcall
xorl
outsb
mov
push
pop
je
xlat
xor
sub
jecxz
sarl
xor
lcall
stos
fiadds
jb
and
addr16
lea
xchg
mov
leave
test
mov
imul
das
ss
jecxz
xchg
lahf
sub
xchg
push
push
enter
fdivrl
push
cmp
out
ret
ds
push
mov
idivl
lret
add
out
in
add
js
xor
cli
xchg
pop
push
mov
out
cmp
cmpl
mov
xchg
jae
xor
in
mov
sbb
or
xchg
ret
daa
aam
cmc
imul
inc
mov
inc
push
or
dec
out
mov
sbb
sub
pop
push
xchg
pushf
cld
je
lahf
and
outsb
dec
push
adc
cli
mov
cltd
pop
mov
repnz
dec
adc
cld
mov
inc
je
push
bound
sarl
ljmp
mov
lods
xchg
out
push
jns
stc
call
mov
or
cmp
movsl
push
outsb
arpl
pop
or
fldenv
cmc
mov
jbe
fimuls
cwtl
mov
pop
addr16
shrb
dec
adc
ljmp
jle
cmpsb
cmp
cltd
adc
neg
dec
rcll
sub
and
roll
push
ljmp
nop
test
decl
adc
clc
mov
adcl
fnstcw
push
sub
xor
xchg
jnp
cli
fbstp
dec
lock
pop
or
and
xlat
int
rcll
adc
test
pushf
mov
sbb
stos
and
mov
xlat
mov
mov
jno
sub
push
inc
and
lods
xchg
mov
insb
insb
or
bound
filds
lret
jmp
and
xchg
jg
repz
mov
es
dec
cmp
aaa
adc
mov
test
outsl
daa
loope
or
jnp
out
mov
sub
jle
mov
add
stc
xchg
push
pop
hlt
fcmovnbe
sbb
and
and
adc
popa
mov
idivb
imulb
push
mov
int
adc
fwait
in
cltd
add
mov
dec
out
push
cltd
mov
jo
mov
rclb
arpl
js
fwait
ljmp
out
in
cmp
adc
sbb
add
dec
loopne
push
mov
sbb
inc
rcl
cli
fs
lret
lea
clc
xor
sbb
int
sub
pop
dec
test
lock
push
js
push
and
push
cld
test
push
add
or
xchg
or
aam
enter
test
xchg
inc
jg
mov
pop
push
popa
dec
push
jmp
mov
xor
pop
mov
jno
pxor
ret
mov
lea
adc
aad
bound
adc
cmpsl
jbe
cmp
mov
pop
sub
jmp
in
xchg
lahf
or
flds
add
mov
ja
cwtl
mov
and
leave
pop
cmpsl
adc
call
sbb
jmp
shll
mov
jo
dec
inc
jecxz
hlt
shrb
xchg
loope
xor
popa
mov
add
xor
mov
out
andb
pop
inc
jno
inc
in
ret
mov
mov
inc
add
fstpl
and
je
sbbl
notl
push
jns
fcoms
out
or
cwtl
cmp
cwtl
or
inc
mov
add
movb
jp
fs
sbb
cmc
scas
and
and
inc
fisttpll
xor
push
pop
bound
ret
push
scas
and
hlt
push
into
iret
int3
sahf
adc
das
clc
xchg
sub
push
mov
les
in
test
pop
inc
jp
call
dec
jle
repnz
cwtl
xchg
mov
ds
xchg
int
ss
adc
jle
lret
xchg
xchg
cld
es
das
mov
pop
ret
aaa
scas
lret
leave
push
pushf
inc
mov
insb
fildl
push
popf
xchg
push
lcall
arpl
mov
fs
cltd
mov
rcl
xor
mov
insl
movsl
lcall
arpl
lret
and
pop
mov
xor
scas
pusha
cltd
pop
out
and
mov
rorb
cwtl
in
lods
jae
pop
outsl
xor
jg,pn
sbb
or
xchg
out
xorb
push
insb
and
int
int3
add
mov
mov
and
or
vaddsd
test
push
xorb
add
enter
shll
pop
xchg
mov
fldenv
test
or
pop
int
inc
dec
pop
sub
movsb
push
sti
or
add
call
xorb
mov
test
icebp
dec
shlb
or
insb
stc
rorl
pop
scas
daa
mov
mov
icebp
ucomiss
jmp
lea
push
and
jbe
test
xchg
neg
dec
int
ret
mov
mov
repz
xor
in
xor
fs
sub
sub
fimull
dec
xchg
aam
push
mov
insl
mov
test
mov
sbb
jo
incl
mov
inc
xchg
jg
dec
jle
mov
dec
das
adcb
cmp
aas
cmp
test
push
or
add
scas
ret
std
jns
xchg
dec
cmpb
rcll
sub
push
and
adc
rcl
addr16
xchg
jp
sahf
fwait
jae,pn
loope
lock
pushf
sub
push
cs
inc
mov
push
lret
lods
pop
repnz
adc
ds
loop
repnz
rolb
mov
ficoms
push
out
or
test
pop
out
adc
xchg
mov
nop
loope
addl
hlt
lock
jmp
cli
bound
xor
daa
pop
jae
pop
jmp
mov
cmc
sbb
or
inc
and
imul
les
fmul
sbb
xchg
loope
jb
into
hlt
adc
mov
push
outsb
mov
rorl
aaa
out
mov
call
pop
loopne
push
jge
lea
cs
pusha
aaa
fstpt
lret
dec
jbe
xorl
xor
sahf
int
sahf
pop
pushf
sub
cmp
rorb
mov
mov
cmp
cwtl
or
inc
add
scas
in
cmp
cmpsl
int
jmp
jb
cltd
inc
iret
les
or
out
cmp
mov
fwait
sub
aad
xlat
lcall
addb
fwait
daa
cmp
or
lods
push
notl
fsubrl
push
mov
cmp
ljmp
dec
das
cmp
iret
enter
pop
cli
sti
das
xlat
movsl
mov
stos
or
and
cmpb
xor
cwtl
or
inc
popa
sbb
push
enter
outsl
jp
sub
sbb
xor
jl
xorb
push
adc
ss
shl
and
inc
ljmp
sti
movsl
push
pop
test
and
ds
movsl
lea
cld
sbb
push
daa
std
dec
xor
inc
jl
fwait
cltd
sahf
sub
imul
call
mov
stos
push
push
xor
iret
fildll
dec
notb
inc
pop
mov
xchg
bound
mov
dec
dec
inc
lret
lcall
pop
xor
adc
and
dec
adc
popa
sub
jne
pop
xor
clc
jno
xchg
icebp
sbb
subl
cmpsb
jb
repz
sbb
das
sub
lds
dec
and
arpl
js
xchg
icebp
cwtl
add
xchg
lds
ljmp
testl
loop
cld
nop
cmc
jle
adc
pop
inc
pop
mov
xchg
inc
mov
xchg
jno
jg
insb
popf
xchg
cli
loopne
adc
test
out
sbb
adc
mov
cmp
je
mov
outsb
outsl
push
lcall
sub
or
out
hlt
mov
clc
ret
mov
adc
js
mov
xor
sbb
xor
adc
dec
cmp
sti
cmovae
rorl
scas
int
push
jmp
es
into
into
push
aam
or
and
add
stos
std
sarb
test
cltd
jns
loopne
xchg
push
lea
sbb
dec
movsb
aad
and
arpl
lods
cmpb
sbb
cmp
xchg
xor
addr16
pop
or
cmp
stc
sbb
cld
mov
insl
popa
adc
std
and
mov
addr16
das
inc
scas
enter
xchg
sub
outsb
cltd
and
adc
push
repnz
jl
jmp
test
cmp
bound
in
int3
push
js
or
jp
and
push
lea
aaa
out
mov
nop
fldcw
cmpb
es
adc
aaa
fs
stos
mov
pop
arpl
xchg
or
outsb
das
jae
mov
fists
cmp
ja
xchg
out
and
add
int
push
mov
pop
rcr
pop
push
fildll
adc
pop
sbb
leave
inc
insb
mov
and
sub
js
or
mov
aam
js
and
pop
pop
jnp
adc
jb
clc
dec
lea
sti
xlat
call
in
inc
xor
arpl
and
fsubrl
cld
jae
scas
lcall
in
push
insl
aad
sti
mov
pop
cmp
inc
sbb
cld
iret
aam
add
rclb
shlb
flds
push
pusha
xchg
scas
xchg
sbb
pop
loope
sub
add
jg
sub
mov
push
xor
lahf
xchg
js
ret
cmc
or
mov
mov
scas
notb
or
pop
shr
lds
cld
add
sbb
jg
mov
mov
icebp
add
subb
bound
subl
cmc
insb
out
imul
mov
inc
inc
or
and
hlt
aad
adc
mov
iret
xlat
sbb
mov
or
dec
imul
sti
sbb
push
gs
lea
pop
movsb
mov
lret
adc
jns
adc
mov
xlat
fstpt
lahf
insl
iret
sahf
mov
jo
and
in
pop
mov
idivb
inc
cmp
add
cmpsl
clc
fisttps
hlt
arpl
adcl
mov
cmp
pop
and
adc
push
jbe
es
test
outsb
push
rcll
dec
mov
mov
push
mov
xchg
or
movsl
shl
jmp
shrb
shrl
mov
adc
mov
adc
cmp
cmpl
dec
mov
aad
mov
jle
pusha
xor
ja
andl
addb
push
movsl
mov
lods
mov
insl
jbe
outsl
scas
push
inc
fwait
cmp
push
lods
and
mov
xlat
add
mov
mov
sbb
fiadds
aad
adc
mov
ja
jg
xchg
test
mov
andb
popa
gs
idiv
pop
push
xlat
loop
lcall
pushf
cmp
fsub
lds
fimull
daa
mov
pop
xchg
mov
xchg
fwait
xchg
dec
pop
mov
mov
outsl
push
test
xchg
dec
adc
rorl
repnz
bswap
push
cld
push
in
mov
repz
mov
xor
test
insb
rcr
xchg
push
int3
int3
gs
in
xchg
sbb
jnp
scas
adc
loop
pop
leave
jae
pop
daa
xor
cwtl
push
jge
mov
push
ficompl
cmpsb
cmpsl
push
rcll
pop
mov
adc
fisttpl
xor
daa
sahf
arpl
or
push
jb
into
xorl
std
dec
nop
jp
loop
push
int3
mov
dec
lcall
mov
inc
negl
pushf
mov
call
les
call
xor
xor
push
cmp
scas
sbb
add
movl
push
sub
mov
mov
mov
sbb
rcrl
mov
cmp
cltd
mov
stos
jns
add
pop
pop
jp
jmp
mov
lret
fwait
xor
dec
pop
add
clc
mov
testl
insb
jecxz
mov
mov
aam
dec
aam
mov
bswap
add
daa
and
fldenv
rorl
das
pop
stos
xor
and
aas
gs
and
cmpsl
add
mov
pop
jl
push
inc
repnz
dec
sub
jmp
xor
lods
and
inc
xchg
pop
cmp
movsb
aad
sti
cmpsl
adc
sub
and
icebp
pushf
mov
pushl
xchg
insl
leave
frstor
je
clc
dec
test
sbb
cs
je
push
ret
out
ljmp
addr16
adcl
lret
mov
sbb
xor
mov
sbb
movsb
lret
pop
push
sti
cmpsl
mov
ds
popf
pop
dec
and
mov
fdivr
add
xor
jno
fyl2x
loop
and
mov
mov
cmpsl
cli
or
sub
lahf
in
mov
sbb
repz
mov
cmp
enter
in
aam
addr16
pop
mov
mov
fidivrl
mov
lods
and
clc
mov
cmpl
cld
jge
stos
xlat
jb
into
cmpsb
sub
daa
xor
adc
sti
add
mov
lahf
fisubrl
mov
sbb
testl
loop
sahf
lds
sbb
stos
inc
inc
jne
imul
pushf
inc
loope
addr16
lret
adc
dec
sbb
pusha
xchg
je
jecxz
in
fcompl
testl
push
jno
push
fwait
mov
lds
negl
mov
xor
fs
jmp
add
mov
ss
pop
and
test
int3
cmc
cwtl
adc
push
and
adc
cmp
test
fdiv
fsubrl
lret
dec
pusha
pop
rcrb
add
mov
scas
sub
jecxz
inc
jne
or
xor
sahf
sahf
push
adc
test
mov
lods
push
cmpsb
std
cmc
xorb
outsb
sbb
mov
cmp
cmpsb
push
add
movsl
and
in
or
and
loopne
xchg
add
repz
sbb
sbb
nop
lds
aas
fisubs
cmp
fwait
pop
mov
ficompl
and
mov
cld
addr16
js
mov
sarl
adc
movsb
inc
test
fcmovb
aas
push
push
fisttpll
jp
xchg
filds
inc
fwait
jge
and
jecxz
insl
add
pusha
cwtl
rclb
imul
leave
repnz
pop
scas
sub
or
mov
adc
jp
ficomps
mov
xor
clc
jle
sub
inc
imul
cli
into
lret
fwait
dec
loope
pop
iret
cmpsb
jg
and
roll
fldl
in
flds
sarl
sti
xchg
rorb
fsubs
add
push
lcall
les
cs
sbb
pop
mov
mov
cmpb
dec
andb
inc
jecxz
add
js
test
pusha
fistpll
lods
outsb
dec
shl
insb
and
jecxz
test
jbe
and
cwtl
ficomps
sbb
xchg
jbe
lret
jge
rcrl
jle
dec
lahf
pop
std
jno
mov
pop
push
or
sub
pop
mov
mov
test
addl
movsl
dec
mov
inc
ds
leave
add
mov
sbb
add
inc
inc
push
jge
xchg
inc
ret
pop
push
xor
mov
out
inc
jge
arpl
mov
repz
hlt
add
scas
xchg
cwtl
pop
ljmp
jbe
adc
ljmp
push
mov
arpl
adc
cmp
adc
fdivrs
rclb
sbb
fnstsw
adc
jo
repnz
out
cmpsl
add
xchg
sbb
cmc
cmp
rolb
idiv
dec
mov
cmpsb
sahf
nop
or
nop
or
add
ret
andb
stc
mov
mov
push
add
mov
imul
push
ret
adc
mov
mov
fsubp
mov
jle
xchg
pop
jnp
jg
add
push
pop
repnz
mov
bound
scas
pop
mov
movsl
xlat
std
bound
jo
test
xor
mov
pop
lea
out
jle
rorl
adc
ret
mov
or
outsb
ret
out
std
inc
fwait
addb
scas
imulb
testl
dec
jmp
mov
and
push
sbb
jecxz
scas
pop
mov
or
push
sti
cltd
push
adc
sub
push
loope
pusha
jecxz
pop
loopne
cli
sti
inc
jg
sarl
xlat
xchg
pop
sbb
add
dec
mov
hlt
xchg
outsl
sbb
add
stos
out
in
dec
mul
cmp
out
cli
cmc
inc
push
das
lret
or
mov
enter
cmp
mov
adc
inc
je
scas
fsts
fstpl
cmp
aas
jbe
shl
insb
sub
mov
cwtl
push
xor
in
movsb
clc
aaa
mov
push
add
cmp
pop
sbb
mov
mov
sub
push
inc
pop
std
push
inc
dec
or
jl
or
jp
aaa
pushf
or
push
and
je
mov
mov
into
fwait
mov
or
loop
movsb
js
lahf
jns
pop
mov
into
aaa
adc
adc
or
sahf
inc
cmp
imulb
loop
in
cmc
lcall
jae
mov
pop
mov
imul
inc
mov
in
mov
pop
out
jecxz
or
fwait
add
divb
jae
mov
sbb
jmp
cs
push
aam
cmp
sub
rcll
dec
aam
dec
cmpsl
pop
insb
jecxz
xchg
sub
fwait
mov
call
fwait
mov
dec
adc
lds
mov
cmpsl
inc
sbb
cld
sbb
or
sbb
jo
or
xchg
cmp
out
fincstp
push
loope
mov
lds
pop
in
nop
sbb
aaa
jg
int3
xchg
push
jge
fdivrs
xor
jecxz
jle
lods
pop
in
push
pop
jmp
stos
jmp
test
add
nop
jnp
inc
js
addr16
in
xor
mov
jl
and
mov
cli
sub
loope
cmp
or
lods
and
xchg
xchg
rorl
leave
adc
xor
out
imul
fwait
cmc
in
stos
cmc
mov
jae
mov
mov
les
sbb
sub
mov
pop
jae
lahf
and
das
fmul
nop
outsl
push
insb
inc
add
mov
jae
push
mov
shrl
jno
pop
outsl
dec
pop
ret
jb
icebp
xchg
jbe
lcall
mov
pop
insl
int
lods
mov
std
lods
scas
and
cmp
add
fcmovu
cmc
push
popa
adc
cld
xor
int3
push
pop
mov
ljmp
aam
mov
push
cmp
jp
aas
bound
cwtl
adc
cmp
adc
leave
and
jle
cmp
je
xlat
pop
stos
mov
icebp
pop
push
sbb
xchg
adc
or
loop
or
loopne
push
xchg
and
mov
lea
mov
fs
push
jmp
lahf
push
mov
dec
arpl
lret
adc
and
lods
jbe,pn
aaa
jl
scas
xchg
test
fstpl
xor
sahf
mov
xor
push
mov
cmp
add
cmp
cs
and
in
mov
and
adc
pushf
jo
pop
jns
mov
sub
cli
sub
sub
sub
xchg
mov
dec
sub
dec
in
int
or
jmp
cli
or
arpl
mov
jae
mov
jmp
inc
adc
insb
mov
push
jge
xor
or
call
xchg
cmc
sarl
cmp
cmpsb
arpl
lods
ret
inc
popf
jnp
inc
sub
aaa
in
das
adc
mov
inc
mov
scas
sti
or
add
loopne
adc
movl
movsl
fldl
push
lods
out
sbb
xlat
cs
rorl
sub
push
lds
xchg
cmp
add
add
xor
pop
push
cmpsl
cli
movsl
imul
jp
lahf
cld
cmp
lahf
xchg
mov
mull
call
leave
or
loope
clc
fwait
fwait
xchg
push
sbb
sub
sub
stos
mov
pop
ficomps
sahf
cmp
ficoml
inc
push
mov
loop
subl
popa
adc
pop
hlt
sbb
cld
and
and
cmp
lods
push
sub
and
jmp
rorl
sbb
cmp
imul
pop
scas
dec
rolb
cmp
pop
mov
mov
popf
outsb
packsswb
cmc
imul
mov
test
sub
lret
int
cltd
fidivl
nop
repz
loopne
mov
sbb
pop
int3
xchg
fcoms
test
insb
push
add
cmp
loopne
jmp
aaa
jb
cs
jg
sub
jns
sub
pop
push
fstps
dec
mov
or
pop
push
out
shl
outsl
jb
xor
arpl
movl
aad
xchg
fs
mov
outsb
jne
mov
rcll
mov
imul
push
jge
mov
mov
xor
inc
das
mov
jo
pusha
dec
inc
call
xor
pop
dec
shrb
jg
cli
icebp
in
adc
jmp
pusha
loope
and
push
ljmp
dec
push
imul
imul
in
ja
std
jp
insl
leave
testl
add
ret
mov
dec
jp
out
and
push
daa
ret
loopne
sbb
adc
jb,pn
mov
inc
dec
xchg
sub
icebp
sarl
test
sti
movsl
mov
loope
adc
xchg
sub
xor
mov
push
and
and
daa
inc
loope
dec
rorl
sub
in
cmp
sub
add
nop
mov
ja
lock
outsl
sub
mov
xchg
hlt
xchg
enter
and
enter
loop
stos
movsl
aam
imul
dec
push
inc
out
loop
cmp
xchg
gs
adc
lahf
or
add
fsubs
outsb
mov
xlat
out
mov
mov
xchg
or
dec
fwait
inc
imul
push
lahf
fdivr
mov
in
jge
rcr
sahf
xor
cmp
lret
mov
sti
jno
icebp
ret
mov
xor
loope
stos
outsl
sbb
pop
xchg
mov
mov
repnz
xor
jle
stos
and
lods
daa
dec
jg
dec
push
cld
cs
sahf
dec
or
or
pop
mov
movsb
inc
xor
test
jge
pop
js
insl
mov
and
imul
pop
add
pop
and
sbb
es
add
sub
inc
lea
xor
insb
sbb
ja
xchg
and
outsb
xchg
roll
test
pop
push
xlat
rcrb
lahf
cmp
orl
jg
mov
cmp
int
scas
outsb
loope
roll
xor
js
jne
movsb
les
imul
sbb
xchg
xchg
insl
cmc
mov
call
inc
movsl
xchg
xchg
mov
or
test
or
xchg
test
and
inc
ja
xchg
dec
iret
pop
enter
pop
dec
test
pop
adc
js
or
inc
jl
inc
xchg
push
mov
jle
rcrl
jmp
ja
and
fldt
cwtl
pop
xor
push
pop
cmp
les
push
outsl
mov
pop
jnp
pop
ficoml
inc
fnstenv
jae
mov
test
les
xchg
cmp
jg
mov
jge
dec
mov
aam
mov
mov
sbb
fs
and
push
sub
insl
jne
out
inc
sub
mov
jmp
jg
mov
xchg
sti
mov
inc
insl
mov
adc
jnp
das
cli
in
pushf
mov
out
cwtl
lret
pop
loope
insl
cmp
fldl
test
insb
adc
imul
out
mov
cld
aas
push
and
imul
gs
lcall
int
adc
mov
mov
cld
mov
cmp
push
arpl
in
jb
fldt
gs
imul
mov
sbb
fidivrl
inc
add
cltd
loopne
or
push
bound
mov
cmp
pop
cmp
add
ret
repnz
mov
movsl
and
test
push
pop
fwait
in
xor
leave
mov
adc
fnstcw
xchg
mov
int3
pop
ja
pop
je
dec
mov
mov
add
out
cmpsb
scas
add
fsts
jnp
hlt
xchg
and
inc
push
fadd
cli
cmpsb
fstpl
fildll
jmp
dec
mov
fsubs
lock
jp
in
inc
mov
push
roll
cmp
mov
jg
mov
call
in
fdivrs
sahf
js
add
scas
sub
and
inc
jl
lret
jno
mov
xchg
sbb
jg
xchg
in
pop
dec
fimull
mov
imulb
and
adc
inc
or
negb
stc
bound
cltd
cmp
pop
add
push
or
ds
into
sbb
popf
cltd
cmp
mov
outsl
mov
ja
cmp
je
xchg
loop
push
lods
bound
jo
int
bound
inc
shrl
fadds
ds
out
jp
shlb
test
into
and
stc
icebp
add
and
sub
cmp
out
lahf
inc
jne
imul
enter
cli
xchg
pop
mov
push
pop
inc
xchg
mov
push
push
inc
mov
adc
bound
add
rcll
je
push
dec
mov
lret
outsb
imul
inc
gs
push
mov
rdtsc
repnz
int3
jbe
pop
pop
pop
mulb
repz
and
test
adc
adc
add
mov
nop
outsl
jp
xchg
and
fsts
test
aad
xor
xor
movsl
mov
dec
adcb
pushf
pop
xchg
push
pop
push
mov
sbb
cmc
inc
xlat
and
sbb
mov
lea
jl
add
test
and
mov
mov
jmp
mov
imul
pusha
imul
cwtl
in
jmp
icebp
mov
xchg
scas
aaa
repz
mov
add
mul
je
shlb
inc
or
into
add
lea
or
or
cmpsb
xor
mov
mov
add
fidivl
and
mov
iret
les
stos
out
mov
sbb
pinsrw
insl
pop
sub
push
mov
ret
push
lret
stos
repnz
mov
pop
mov
add
ss
xchg
loopne
mov
jne
aaa
iret
push
inc
sub
mov
rcll
xchg
addl
fmulp
xchg
push
cmp
test
push
jo,pt
mov
fs
jg
push
fstpl
push
xor
js
rcrl
jecxz
pop
add
and
mov
cld
notl
mov
daa
mov
xlat
repz
in
mov
cld
scas
mov
cmp
push
insb
cmp
or
push
push
ja
xchg
hlt
cmpsl
sti
mov
adc
fnstsw
repz
adc
neg
cli
mov
mov
sbb
imul
roll
loop
int3
mov
cs
addr16
or
fcmovne
testl
mov
test
imul
mov
dec
ljmp
push
mov
lods
popf
inc
cmc
xchg
into
popf
cs
push
rcr
scas
xor
mov
sub
ss
xchg
jp
sbb
or
sub
mov
lahf
cmpsb
mov
mov
in
and
fisttpl
inc
xor
test
inc
aad
cmp
sysexit
shrb
pop
je
or
and
inc
xchg
lock
ljmp
xchg
xlat
dec
je
xchg
pop
jl
mov
lods
aas
imul
mov
push
pop
test
sbb
add
dec
sub
adcl
jnp
or
sbb
jg
adc
adc
out
imul
dec
push
icebp
lods
mov
sub
pop
adc
clc
xchg
into
lret
rol
addl
mov
mov
int
sub
jle
adc
jmp
pusha
inc
and
lcall
xchg
popf
fs
loope
adcl
stos
sub
mov
addr16
fscale
cmpsb
lea
js
sahf
lea
jmp
rclb
or
movsb
in
pop
dec
sbb
in
pusha
xchg
lock
leave
push
mov
jns
pop
out
dec
adc
sti
test
sub
in
shl
pop
out
mov
mov
mov
push
fisubrs
in
adc
or
aam
out
mov
mov
lods
jnp
js
push
out
or
add
cmpsl
aaa
test
xchg
push
cmpsl
das
scas
jno
cmpsb
cltd
push
movsb
shlb
aad
icebp
and
les
xchg
insl
enter
dec
hlt
push
inc
sub
movsl
jne
mov
mov
into
sbb
shlb
push
xor
mov
inc
adc
leave
sti
mov
fwait
adc
jp
xchg
jle
in
mov
icebp
fstp
shll
aas
push
ds
pusha
push
push
sub
scas
lahf
pop
jmp
mov
pop
popa
adc
out
mov
or
fwait
sbb
mov
mov
push
lahf
and
stos
popf
rorb
jl
std
fildl
and
push
lcall
dec
stos
xchg
push
mov
pop
adc
and
xchg
xchg
mov
popa
jnp
out
mov
enter
fsubr
je
mov
clc
cmc
adc
aas
scas
filds
setge
test
mov
pushw
test
and
xchg
js
inc
xor
mov
popa
loopne
loope
fsubs
icebp
mov
cmp
xchg
pop
push
lcall
into
ds
sub
enter
test
cmp
and
mov
pop
ret
lret
hlt
and
or
xchg
push
jge
notb
and
aam
mov
in
mov
jmp
iret
xchg
les
nop
sarl
push
push
jmp
mov
jg
cmp
jge
dec
in
lods
pop
rcl
jb
aas
jnp
in
movsl
mov
fnstenv
mov
mov
xchg
les
stos
dec
aas
xor
sbb
sub
fisubl
cmpsl
pminsw
mov
sub
sbb
cwtl
insb
out
cmc
push
mov
and
popa
nop
mov
mov
add
dec
or
sti
stos
jae
aam
mov
xor
shlb
mov
jecxz
push
jmp
in
xor
add
sti
out
push
xchg
arpl
out
push
lahf
out
out
outsl
inc
dec
test
adc
pop
fidivs
mov
inc
idivl
cwtl
lret
xchg
imul
jg
mov
insb
int3
mov
ds
leave
push
push
icebp
sbb
mull
outsl
pop
in
adc
js
lea
dec
pusha
pop
push
mov
sbb
das
or
ficoml
lcall
xchg
test
or
cmp
ljmp
in
inc
push
inc
and
cmp
or
and
or
xchg
filds
jnp
jno
out
jbe
jg
jle
dec
jae
mov
fucom
popa
adc
leave
sub
into
mov
adc
jno
mov
pop
mov
mov
mov
and
push
ss
fimull
xchg
rclb
jbe
pop
push
ss
jle
fdivrl
pushf
data16
xchg
cmp
jno
rcr
movsl
jp
ret
cmp
push
sub
cmc
fs
sbb
or
cmp
mov
fistps
stos
mov
cmpsl
mov
popa
mov
push
lcall
loop
out
cld
mov
into
push
jg
cwtl
xadd
adc
mov
pop
repnz
xchg
mov
sub
popa
mov
dec
pop
mov
les
pusha
push
pushf
movsb
adc
push
sub
lea
adc
xchg
scas
adcl
test
arpl
std
jbe
xchg
hlt
push
mov
push
mov
jb
inc
mov
sub
insl
xchg
in
aam
ss
repnz
lea
fstl
xchg
mov
and
test
jbe
rcrb
mov
and
ret
rorb
adc
fwait
mov
jb
adc
adc
mov
pop
xor
ret
arpl
pop
sbb
lret
js
stc
scas
and
mov
bound
int
movb
xchg
push
ljmp
mov
test
mov
int3
and
inc
pushf
repz
adc
movsb
loope
adcb
inc
pop
aam
mov
fwait
cmp
dec
pop
cmp
jb
xor
cmp
jp
loop
sbb
das
mov
add
ficompl
dec
lea
fnstcw
sbb
mov
xor
mov
inc
shlb
scas
push
leave
add
push
cli
xchg
sub
test
inc
mov
sub
je
mov
mov
movsb
lods
sbb
stos
hlt
insb
inc
sarl
push
add
cmp
pushf
jo
cmp
add
xlat
sub
aam
push
loopne
cmp
fdivl
mov
js
jae
add
and
mov
lret
lds
test
pop
adc
loop
lcall
jl
xor
xchg
mov
xchg
jns
mov
test
imulb
mov
pop
mov
addb
adc
xchg
movsl
or
mov
mov
and
mov
or
in
iret
mov
scas
adc
and
xchg
dec
lock
cltd
rolb
fmull
push
mov
jmp
sub
lret
clc
ret
or
pop
popf
loopne
jmp
inc
and
xlat
call
push
cs
out
icebp
cmc
popa
sahf
ljmp
insb
lret
repz
inc
push
jnp
les
rorl
sub
cltd
mov
stc
adc
pushf
and
cs
aas
mov
les
fld
out
lock
pushf
lcall
jl
das
mov
lahf
mov
or
aam
int
dec
add
pop
mov
mov
xchg
xchg
xor
test
sub
inc
enter
dec
faddl
lods
adc
mov
mov
cs
clc
pop
sbbl
xchg
repz
inc
dec
outsl
mov
ds
cmp
mov
push
in
filds
and
xor
jle
mov
in
rcr
mov
dec
pop
repz
or
dec
test
dec
adc
or
js
mov
fldcw
std
and
arpl
sub
cmp
xorb
call
jnp
fwait
mov
lahf
push
pop
in
pop
sub
rolb
jb
jmp
pop
sub
mov
or
arpl
jge
jne
jbe
dec
popf
push
pop
inc
cmpsl
jl
jp
or
mov
int
in
loop
mov
cld
inc
fisubs
and
and
std
ljmp
mov
pusha
mov
lds
roll
pop
pop
rol
adc
mov
test
jg
js
les
lods
mov
xor
aaa
fiaddl
out
daa
arpl
adc
jge
dec
fstps
ljmp
aaa
push
mov
jae
subl
adc
xchg
dec
mov
sbb
xchg
rol
mov
fisubs
add
stos
sub
outsb
in
daa
and
or
mov
mov
orb
lahf
test
sub
jns
insl
push
jbe
mov
test
jns
xor
mov
dec
test
cli
test
ss
idivb
push
shll
push
fs
mov
push
es
fnstsw
clc
xor
ficoml
es
out
xchg
pushf
sub
dec
mov
xor
js
xlat
into
shr
rcr
es
lock
dec
imul
test
mov
xlat
nop
mov
in
xchg
push
dec
xor
in
adc
leave
loop
dec
lea
pop
aad
dec
sahf
aad
push
stc
out
mov
pop
in
out
cmp
pop
mov
xor
push
out
inc
and
idivb
scas
ja
pop
and
sub
xchg
and
or
pop
dec
adc
orps
aas
mov
xlat
mov
movsb
xor
jl
jae
cmpsl
fsub
scas
arpl
das
xchg
in
in
std
mov
popf
jle
aam
mulps
arpl
jmp
fs
test
or
out
and
scas
sbb
leave
adc
xchg
ss
orb
fdivp
jo
sub
shlb
add
push
sub
push
js
out
adc
adc
bound
add
add
dec
ja
cwtl
adc
xor
jmp
ret
mov
mov
adc
lea
and
xor
lret
jns
jae
xor
cmpsl
push
addr16
rorl
in
loop
cli
push
sahf
iret
jmp
dec
in
sbb
dec
adcb
xchg
ret
mov
add
mov
and
mov
imul
roll
out
sbb
out
add
inc
fmull
call
cli
xor
pop
lret
lock
cmp
mov
pop
lds
push
jbe
aas
std
mov
push
mov
xor
shlb
and
xor
loope
dec
pop
mov
jnp
mov
shrl
or
push
push
push
fldcw
or
leave
call
fstl
and
push
add
push
push
scas
les
fidivs
aaa
mov
sbb
daa
mov
cwtl
push
shlb
jae
lahf
mov
cmp
add
aas
dec
icebp
lods
mov
mov
and
jge
fsubrp
pop
scas
leave
mov
fidivrs
pushf
test
imul
mov
ja
mov
aad
cmpsl
cmp
sahf
insb
out
cmp
aas
jecxz
push
sbb
shl
stos
inc
adc
cmp
aam
xor
ret
dec
mov
sarl
mov
es
ds
sub
xor
push
shrb
sbb
inc
push
dec
mov
ret
or
pop
je
inc
or
push
pop
jo
adc
jg
inc
push
sbb
fisubrl
arpl
xor
jb
adc
fnstenv
mov
xor
loope
mov
and
mov
dec
xchg
outsl
jno
mov
ds
imul
or
adc
push
incb
lods
fdivs
test
xchg
jge
mov
fstpl
movsl
testb
loop
pop
cmpsl
mov
add
jno
test
repz
fsubrs
imul
xchg
mov
scas
adc
mov
or
or
insl
insl
lahf
pop
cmpsb
push
add
push
in
mov
and
xchg
jl
sahf
jae
fistpl
mov
test
cwtl
mov
inc
add
insl
xchg
aad
aaa
mov
gs
daa
lods
push
push
out
data16
dec
xor
int
iret
repz
std
sbb
stos
pusha
push
adc
pop
sub
pop
inc
cmp
repz
or
fsubrl
js
sbb
sbb
adc
icebp
adc
aas
fisubs
fadd
cmp
mov
xchg
insl
mov
hlt
inc
icebp
jle
call
cmp
mov
iret
sub
in
xor
xor
scas
cmpsl
pop
jb
es
aaa
inc
movsb
int3
push
push
fwait
mov
hlt
fnsave
fidivs
jmp
cld
movsl
aaa
dec
cmp
test
stc
popf
adc
inc
sub
mov
pop
xchg
lea
cmp
lods
nop
in
pusha
test
push
adc
jbe
mov
mov
lret
add
sbb
adc
add
icebp
and
icebp
int
sbb
mov
pop
cwtl
xchg
dec
cmpsb
out
mov
xchg
xchg
fisttpll
xchg
sbb
das
mov
fisubrs
mov
loope
push
cmc
add
and
stos
add
adc
out
les
jge
xchg
adc
int
fldcw
xlat
push
or
fsubrs
add
mov
add
dec
cmp
jb
adc
mov
daa
add
inc
or
adc
out
add
andl
insl
mov
mov
sti
add
xchg
mov
jae
mov
sti
nop
xlat
cmp
mov
xchg
or
xor
les
clts
mov
jp
repz
add
xchg
je
repnz
mov
psubusw
bound
sarl
jne
pop
call
push
cmp
pop
sbb
leave
dec
xchg
mov
dec
xchg
imul
inc
or
test
lods
insb
leave
ret
pop
cmp
cmp
inc
mov
xor
lahf
out
add
dec
cmp
push
lret
cwtl
imul
lods
scas
xor
push
push
insl
mov
in
or
scas
push
jno
xor
jbe
mov
ja
call
stos
mov
movb
hlt
push
xor
lcall
sbb
ret
adc
ret
pusha
xchg
lods
inc
mov
ds
jo
pop
pop
xchg
xor
loope
in
pop
pop
and
sbb
inc
icebp
adcl
dec
dec
bound
f2xm1
push
jmp
cli
sub
daa
cs
inc
outsl
gs
or
mov
loop
add
mov
pop
push
jns
and
ficoms
sbb
add
sbb
push
out
push
adc
add
mov
scas
or
cmpsl
scas
mov
xor
pop
aad
fdiv
pop
popf
dec
sti
push
ret
jne
cmpsb
popa
adc
mov
sarl
lods
divl
push
ljmp
nop
jle
gs
mov
add
pop
cmpsl
mov
pop
sub
aaa
push
cmp
movsl
ret
icebp
andb
mov
adc
stos
loopne
inc
push
nop
or
and
jno
sahf
sbb
inc
push
lcall
push
in
daa
iret
mov
loopne,pn
ds
or
in
sbb
ds
mov
mov
mov
jnp
mov
mov
mov
push
stos
inc
inc
fsubrp
nop
mov
scas
ljmp
xor
pop
ljmp
mov
dec
lods
arpl
insb
cmp
sub
pusha
mov
jmp
popf
mov
xor
lret
testl
dec
fisttps
les
or
icebp
xchg
mov
sub
push
cmp
mov
into
dec
sub
jecxz
mov
daa
jbe
out
ja
lret
out
lahf
sahf
loope
repz
sbb
mov
pop
cmp
in
fsubp
std
scas
xor
mov
cmp
incl
inc
std
mov
mov
jg
pop
fwait
dec
sbb
setnp
test
mov
lret
or
sbb
pushf
xor
faddl
xchg
cmp
push
stos
lds
jle
fidivl
int3
mov
pop
jo
and
shr
jns
rolb
inc
and
les
mov
jnp
dec
and
movsl
mov
pop
cwtl
stos
xchg
pop
or
nop
xchg
xchg
xor
jmp
je
cmc
and
out
fs
pop
sub
xchg
adc
dec
mov
pop
rorl
mul
scas
mov
xchg
push
je
and
dec
sbb
cmp
lods
push
adc
adcb
dec
repnz
dec
dec
ljmp
scas
sub
mov
push
in
scas
adc
sub
out
dec
nop
cmc
test
inc
enter
or
add
mov
push
sub
loop
test
movsl
bound
cmp
mov
sub
aaa
inc
xor
add
jns
mov
dec
ljmp
xchg
aad
pop
jo
pop
fdivs
sti
punpckhwd
and
jecxz
lods
ret
mov
in
ret
push
sbb
jnp
rcrl
je
test
lret
push
mov
lea
in
xchg
mov
icebp
jb
push
adc
and
insb
sbb
fsubl
mov
in
xchg
cmpsl
mov
cli
scas
pop
outsl
push
cmp
stos
inc
scas
dec
aam
rcrl
sub
pop
and
mov
arpl
in
mov
rep
and
push
cmp
cmpl
lods
adc
orl
daa
jo
jmp
mov
enter
cmpsb
sub
xchg
sub
mov
int
stos
outsl
xchg
stos
ja
sahf
jg
pop
xchg
push
xlat
clts
mov
in
adc
clc
into
adc
mov
or
add
sbb
inc
rolb
adc
lahf
jg
scas
jl
jbe
cwtl
arpl
mov
mov
imul
push
mov
mov
shll
mov
dec
or
pop
pop
mov
pop
mov
dec
dec
inc
adcb
and
push
movsb
add
int
out
icebp
in
in
lret
dec
inc
imul
xchg
push
mov
in
cmpsl
pop
loop
fstps
mov
sub
ds
add
xor
ss
push
mov
test
ja
sbb
mov
rcrl
call
iret
dec
ret
push
jl
cmc
imul
fildl
and
sbb
and
and
enter
sub
adc
std
insl
vpaddsb
arpl
ficoms
adc
sbb
lret
xchg
inc
push
aas
dec
push
jnp
mov
js
mov
repnz
inc
mov
test
outsl
es
fnstsw
shr
xorl
or
test
inc
rcr
popa
mov
mov
notl
lods
mov
mov
arpl
shlb
or
push
cwtl
mov
xchg
mov
or
pop
int
pop
lds
outsl
dec
jp
mov
inc
add
pop
jle
xor
adc
inc
cmpsl
jmp
movsb
sub
mov
mov
or
test
movsl
fisttpll
out
sbb
lahf
arpl
adc
jmp
jmp
xchg
adc
cmpsl
repz
int
data16
aad
fidivrl
cmpsb
out
mov
cmp
mov
pop
inc
imul
mov
jne
xchg
js
rol
pop
inc
adc
sbb
xchg
lods
stos
mov
int
rcrl
or
sub
aad
jecxz
mov
jecxz
arpl
adc
jmp
stos
popa
xor
ja
addr16
inc
mov
sbb
lds
dec
xchg
lods
insb
mov
xor
arpl
sub
data16
repz
cmp
mov
xor
xchg
push
and
out
inc
sbb
jbe
lods
out
jb
inc
test
ljmp
outsl
jmp
push
ss
pop
fisubl
jecxz
addl
into
mov
icebp
ss
ja
mov
cs
mov
js
cld
aaa
repz
adc
mov
cld
pop
and
xor
cmovl
pop
popa
lret
inc
fiaddl
cld
and
adc
sbb
adc
pop
add
mov
pop
add
mov
xor
int
imul
inc
or
in
jne
mov
rcl
repz
adc
pop
inc
je
adc
fcoml
mov
jg
xor
mov
pop
or
pop
in
mov
roll
aad
jecxz
add
cmpsb
sbb
sbb
stc
ljmp
icebp
or
dec
cld
rcrb
int
mov
scas
adc
adc
je
add
test
gs
stos
pop
xchg
lds
xlat
mov
shrb
dec
or
or
xor
in
cs
push
ljmp
test
inc
fstl
scas
in
mov
es
sbb
incl
mov
push
in
repz
ss
loopne
movsb
pop
cmp
loopne
jecxz
fbstp
jns
jp
in
add
daa
xchg
push
mov
out
cmp
mov
xchg
xchg
ja
sub
pop
imul
jg
pop
mov
xchg
insb
arpl
xchg
mov
lea
inc
sub
jno
test
adc
lret
sub
clc
dec
aad
in
dec
xlat
insb
sub
mov
pop
jge
out
in
fmuls
sbbb
jle
and
jae
jmp
popa
mov
sub
stos
rcrl
inc
std
imul
pushf
mov
mov
cmp
dec
dec
and
push
cmp
add
inc
sti
sbb
insl
sub
imul
loope
in
in
adcl
mov
and
xchg
cmc
jno
test
adcb
imul
sbb
xorb
push
out
sub
rol
je
lcall
ret
out
out
sbb
ss
jae
jae
insb
and
mov
or
mulb
data16
mov
jl
daa
push
dec
push
loope
das
add
pop
sahf
jp
addr16
mov
mov
mov
fwait
add
out
and
lods
popa
pop
xlat
test
dec
pop
xchg
enter
sbb
jmp
andb
push
loopne
cmp
aad
add
jne
rol
std
dec
mov
xor
sarl
addb
mov
inc
fsubrl
cwtl
addr16
test
sar
sub
subl
pop
sub
cmpsl
mov
mov
loope
xor
push
push
inc
push
pop
mov
rcrb
pop
add
scas
jno
adc
pop
adc
pop
push
out
cwtl
push
xchg
out
rclb
and
cmpsl
or
call
xor
test
das
mov
pop
cmpsb
pop
pop
pusha
inc
lock
ret
pop
and
mov
shll
mov
add
or
daa
arpl
or
inc
jb
xchg
adc
sbb
fcomps
mov
repz
inc
pop
xchg
fwait
xor
jl
lcall
mov
sbb
jmp
pop
lods
mov
adc
xchg
mov
je
inc
mov
in
es
sub
pop
js
adc
push
nop
jbe
jecxz
xor
push
push
push
lods
daa
call
fcmovnb
ficoms
mov
sarb
or
rcl
mov
lahf
shlb
mov
loopne
mov
mov
or
or
outsl
mov
das
inc
fs
mov
fldenv
pop
sbb
cmp
addr16
pop
xchg
push
adc
repz
daa
cmpsl
call
and
shl
pop
xchg
mov
cmp
xor
xor
or
cmp
ljmp
lds
lds
out
shl
decb
imul
cld
xchg
aas
scas
lock
add
push
jbe
popf
add
popa
mull
jg
flds
ret
ljmp
inc
cmc
movsl
jae
mov
xor
xchg
adc
push
pop
aas
mov
pop
xlat
pusha
xor
enter
mov
pop
pusha
dec
jns
setl
mov
mov
ficomps
cmp
mov
mov
dec
jge
inc
or
shrb
pop
jg
jae
lcall
out
movsb
test
int3
aaa
loopne
cmpl
pop
sbb
std
jge
dec
out
aad
jns
loope
insl
push
out
loop
stos
add
adc
aas
cmc
mov
pop
dec
fiadds
mov
add
mov
mov
loope
stos
jae
pop
adc
sub
sbb
jb
sbb
in
divb
mov
rcl
dec
lds
imul
push
call
and
das
loopne
lret
out
push
adc
add
add
fs
mov
mov
adc
bnd
push
pop
cs
inc
imul
clc
push
sub
sbb
sub
dec
stos
pop
mov
iret
les
mov
mov
push
es
inc
xor
daa
je
outsl
out
divb
js
insl
mov
je
push
outsb
fiaddl
fs
int3
dec
sar
or
aam
insl
mov
and
push
jb
mov
and
icebp
xchg
and
cmovge
mov
in
jae
popl
adc
stc
shrl
mov
into
pop
cmp
mov
data16
in
add
mov
mov
das
pop
jecxz
mov
bound
cltd
shl
pop
or
fisubl
cmc
adc
adc
pushf
je
dec
push
or
mov
lahf
jle
pop
mov
pop
or
pop
push
or
xchg
adc
repnz
cmp
push
jbe
push
pushf
sbb
sbb
dec
out
test
mov
jmp
xor
popa
pusha
lods
xchg
popa
shrb
jg
sub
mov
mov
jo,pn
push
xchg
or
jbe
cmc
add
adc
das
adc
jge
xchg
out
das
lds
stos
mov
aas
sbb
lcall
repz
sub
cmpsl
xor
mov
or
mov
sbb
rcl
or
dec
mov
or
and
inc
sub
pop
fcoml
dec
test
jmp
xchg
add
xchg
scas
dec
fwait
dec
jbe
ret
mov
push
out
gs
js
test
pop
mov
sub
pop
scas
mov
scas
and
lds
xor
test
sub
aam
mov
bound
inc
cli
jecxz
addr16
inc
scas
les
push
pop
out
cmp
pop
rcll
and
lods
dec
mov
sub
pop
sub
sub
pop
in
rol
jns
ljmp
test
mov
cltd
jle
icebp
inc
jle
dec
call
scas
pusha
out
dec
jae
imul
int
insb
jmp
pop
push
loope
cld
mov
inc
mov
lret
jno
xor
leave
test
outsb
adc
dec
xchg
js
mov
pop
aad
insb
shlb
inc
pop
sub
or
int
stc
jnp
sub
mov
adc
xor
and
xlat
xchg
mov
push
mov
out
adc
call
cs
test
adc
push
in
pusha
mov
sahf
std
int
and
popa
or
movsl
test
adc
cmp
mov
or
loope
stc
dec
pop
push
xchg
sbb
mov
ret
sbb
xchg
ret
aaa
sahf
lods
adc
and
repnz
cmpsb
lahf
std
push
mov
sub
inc
repnz
xor
push
addl
ja
sbb
pop
sbb
jne
faddl
lahf
pushl
in
and
push
ret
push
pop
inc
loope
pop
sbb
mov
pop
and
clc
pushf
inc
mov
lds
mov
scas
adc
cmpsb
loope
mov
mov
test
mov
test
lcall
push
std
cmc
jp
jecxz
and
sbb
dec
adc
das
scas
aas
jle
or
jo
aad
jp
jmp
scas
imul
sub
jecxz
adc
das
pop
push
jnp
pop
mov
pop
mov
dec
xor
cmp
mov
inc
lcall
cs
sub
mov
jno
pop
inc
fs
and
adc
xchg
dec
inc
jne
and
mov
inc
sbb
pop
subb
daa
test
mov
ret
jae
or
ds
sahf
pop
xor
push
fsubl
mov
jnp
mov
sti
punpckldq
push
enter
xlat
int
mov
mov
dec
mov
sahf
jp
mov
stc
les
inc
cmpsl
cltd
ret
add
fbstp
mov
cli
jmp
lods
les
bound
jp
pop
ret
sub
sbb
ds
add
inc
out
pop
test
jp
and
jecxz
movsb
and
pop
pop
add
sub
push
in
push
scas
push
fbstp
push
mov
cwtl
mov
xor
xchg
addr16
xchg
and
or
push
aaa
fildll
imul
mov
out
push
aas
ret
xchg
repz
mov
scas
aad
sbb
in
inc
cld
fidivrl
lock
sbb
outsl
mov
loope
mov
mov
sarl
xchg
or
push
sub
clc
out
movsb
cltd
jmp
lret
faddp
add
lods
add
adc
movsl
fdivr
popa
cmc
mov
xchg
xchg
dec
inc
lahf
sbb
out
ljmp
inc
sub
pop
add
push
in
add
cmpsl
or
rcrb
xor
scas
mov
and
lods
ss
or
clc
pop
cli
dec
push
mov
mov
mov
scas
out
cwtl
jbe
les
aam
jmp
xor
fidivrl
enter
cmc
aam
std
aas
in
adc
aaa
jp
jo
pop
dec
mov
push
sbb
xor
out
sub
mov
loopne
sarb
xor
js
movsb
pop
mov
push
adc
add
lods
cmp
popf
cmp
mov
jnp
push
push
aaa
mov
gs
ret
sub
rclb
jbe
xor
pop
xchg
xor
icebp
aas
loope
add
imul
mov
pop
push
sbb
mov
add
push
xor
xchg
add
xor
mov
sbbb
frstor
pop
repz
mov
shlb
cmp
out
nop
loop
fwait
mov
cltd
movsb
lods
push
cmp
mov
jl
push
imul
pop
daa
rclb
cmpsl
daa
add
mov
rclb
aam
imull
pushl
fisubl
pop
hlt
out
rorb
ret
clc
jns
cld
lahf
add
sbb
lods
jno
sub
sti
jbe
add
sbb
shufps
jge
movsl
cmp
stc
xchg
push
adc
in
sahf
push
mov
shl
call
and
into
imul
jl
xchg
or
addl
pop
andb
mov
lods
out
in
cmp
rcll
ret
mov
jo
mov
outsl
ret
xchg
enter
in
scas
shll
ret
pusha
lds
adc
and
jge
dec
add
add
insl
pop
adc
lcall
mov
jmp
mov
inc
dec
outsb
ljmp
sbb
addr16
negl
lock
fwait
je
xchg
jnp
jl
ficoml
in
not
scas
add
sbb
enter
jno
movsb
negb
pop
jge
xor
ret
subl
sub
and
jg
lret
xchg
add
ret
cltd
loope
cmp
mov
in
xor
add
int
or
loop
cmp
fimuls
add
pop
aaa
add
aam
sarl
mov
fistpll
cld
int3
mov
rcll
lods
lahf
in
mov
les
repnz
inc
inc
sub
xchg
addb
fwait
popa
inc
push
stc
add
jnp
mov
dec
pop
jnp
mov
or
arpl
lret
les
jmp
sub
sbb
mov
or
in
aad
pop
jb
xchg
sub
movsl
inc
fcomps
sub
push
in
sbb
int3
xlat
or
add
icebp
loop
dec
dec
test
loope
jbe
insl
lock
mov
jle
test
mov
mov
aaa
push
cmp
clc
dec
pusha
push
jbe
mov
stos
pop
je
push
call
out
das
add
xorb
icebp
aaa
sbb
pop
inc
jnp
movsb
xor
dec
mov
mov
roll
aas
pop
push
scas
xchg
hlt
mov
sub
xchg
sub
jo
bound
rcr
jae
xor
mov
sbb
cld
aaa
outsb
add
cmpl
adc
push
mov
ror
and
adc
es
clc
out
int3
jmp
ret
daa
insb
fimuls
dec
lds
out
or
call
or
shr
fildl
mov
add
pop
insl
sbb
inc
je
in
cltd
stos
inc
stc
mov
mov
fcmove
icebp
int
mov
xchg
fs
out
in
rcrl
std
pop
jmp
cmpsl
xchg
jle
lret
sub
loopne
sti
push
mov
andb
cwtl
sub
insb
and
fsubl
sbb
add
dec
sbb
ret
sbb
daa
add
cwtl
adc
adcb
les
mov
sbb
dec
cmpsb
stc
stos
orl
mov
icebp
push
lods
and
jl
or
dec
pushf
insl
popf
fidivs
std
or
fnsave
in
aaa
inc
gs
xchg
add
es
adc
push
adc
iret
mov
xor
adc
rcr
push
fdivrl
adc
movsl
repnz
sbb
fcomp
ficompl
mov
jecxz
test
out
sbb
inc
test
and
mov
sbb
sbb
in
pop
stos
insb
xchg
add
or
mov
loopne
jp
mov
lretw
cmp
cmp
or
jge
divl
loopne
sub
loope
adc
outsb
add
xor
cltd
push
movsl
imul
jne
std
les
fs
imull
stc
sbb
mov
arpl
mov
rorl
cli
adc
sbb
add
jne
ficompl
fidivs
xor
jecxz
cmp
xchg
lahf
mov
test
xor
nop
ds
mov
mov
pop
ss
repnz
std
or
sub
pop
add
loop
sbb
sub
gs
jecxz
test
pusha
jb
mov
mov
mov
insb
movsb
xchg
aas
sub
inc
xchg
dec
ja
mov
je
in
ja
stos
mov
lock
cld
inc
dec
js
outsl
xlat
xchg
or
cmpsb
xchg
push
pusha
icebp
les
push
mov
leave
movsl
andl
movsb
shll
cmp
sbb
std
jns
pop
and
aaa
mov
sbb
fmul
fdivr
rcl
jns
jle
or
insb
cmp
icebp
dec
jle
xchg
sbb
lods
test
enter
ja
lods
mov
dec
movsl
jae
fwait
push
ljmp
sub
cs
pusha
mov
loop
xchg
int3
cmp
mov
rcr
and
pop
imul
incb
push
loope
xchg
xchg
shl
xor
bound
rorb
lcall
xchg
int3
pop
into
mov
dec
jg
pop
scas
fcoms
aam
movsl
jge
push
ret
scas
je
nop
ret
rorl
out
scas
stos
outsb
sbb
fnstenv
sub
xchg
sti
and
inc
dec
icebp
stos
in
test
or
testb
in
in
xor
nop
inc
sarl
ss
dec
out
jo
lods
mov
pop
cld
dec
cmp
fisttpll
aaa
rclb
iret
mulb
jmp
push
fs
sbbl
lds
and
out
cs
mov
jne
cmpsl
in
xchg
and
sbb
inc
or
xor
ljmp
in
cwtl
push
imul
mov
sti
cmp
mov
sub
push
mov
mov
fcoms
in
nop
add
add
daa
loope
movsl
andl
dec
outsb
jnp
pop
sbb
clc
or
sti
mov
add
fs
xor
nop
lret
les
loop
aam
fldenv
cmp
cmp
jl
fidivs
imul
aad
fisttpll
and
mov
sbb
pop
stc
sub
mov
mov
lret
inc
sahf
mov
push
out
jno
in
sbb
inc
push
stc
and
push
mov
xchg
lea
mov
std
mov
stc
cmc
aaa
mov
cmp
cli
inc
push
hlt
popa
add
xchg
and
inc
aam
sti
push
pop
adc
les
jne
fcmovbe
into
pop
or
enter
pop
cmp
mov
mov
jae
negl
sub
fcoml
dec
cwtl
pop
into
stc
aas
cmc
test
inc
mov
aad
ret
out
dec
sub
scas
imul
and
sti
cmp
sub
roll
sti
sbb
add
cli
mov
pop
pop
cs
std
popaw
fcoml
sub
test
sbb
jo
push
stc
adc
adc
outsl
sbb
movsb
cmpsl
repz
enter
leave
add
fsubl
aas
leave
sbb
jae
outsb
xchg
jl
adc
xor
imul
sahf
mov
sbb
test
shl
and
sti
mov
out
out
mov
push
pop
insl
or
arpl
movsl
jno
cmp
mov
aam
iret
into
mov
mov
daa
fisttpll
mov
push
inc
out
out
pop
add
xchg
adc
clc
imulb
loope
cld
mov
xchg
or
ss
aas
sub
jge
adc
mov
int3
fwait
inc
fs
mov
and
sub
push
sbb
aas
pop
cmp
add
mov
jne
cmp
lock
cmp
jne
cli
bound
sbb
test
test
hlt
cld
hlt
inc
mov
inc
cwtl
adc
mov
imul
add
stc
ljmp
out
inc
std
lahf
dec
hlt
pop
cmp
sbb
icebp
shll
mov
lock
jae
stc
arpl
out
ja
jne
repnz
jae
inc
lds
mov
stc
jge
mov
push
cmpl
outsb
adc
sbb
xchg
mov
adc
leave
fbld
xor
das
sbb
xchg
in
outsl
jg
das
jnp
fwait
add
mov
fmull
add
imul
sub
or
lea
and
jl
xchg
test
mov
adc
cmpsb
leave
xor
cmp
cli
cmp
dec
jo
imul
lcall
adc
dec
lock
outsb
insl
sbbb
insl
aas
lret
mov
jmp
mov
and
mov
scas
mov
ret
xchg
and
icebp
int
push
inc
cs
mov
loop
xchg
sahf
adc
jecxz
push
sub
sub
out
mov
out
lret
cmp
andl
xor
push
loopne
cmp
stos
data16
lcall
out
fadd
adc
and
lcall
mov
xor
mov
sti
das
aad
sbb
jl
call
cmp
popa
or
adc
add
mov
inc
mov
stc
sbb
clc
cmc
jle
scas
mov
sub
mov
dec
pop
push
push
sbb
cmp
and
aas
xchg
inc
dec
insb
xchg
outsl
test
mov
mov
mov
add
daa
outsb
addb
pop
lcall
pop
js
fildll
sub
xchg
mov
xor
scas
jecxz
adc
mov
lcall
and
xor
xor
sub
mov
call
and
inc
movsb
dec
and
mov
push
call
arpl
add
mul
idivb
or
cs
testl
and
lods
jns
pusha
mov
mov
std
dec
xlat
add
popa
and
testl
sahf
jmp
jns
dec
jl
adc
sub
jge
into
xchg
cmp
mov
xor
push
xchg
and
push
dec
mov
pusha
lcall
outsl
mov
jbe
int3
cmc
lock
adc
pop
mov
mov
push
jl
and
in
lret
test
or
or
fisttpl
sub
mov
jp
andb
pushf
mov
in
das
data16
inc
jne
mov
sub
cmpsl
mov
les
adc
or
int3
jg
and
orl
jnp
cld
cmp
arpl
bound
shll
xchg
pop
push
mov
nop
je
dec
cs
data16
js
imul
insb
pusha
pop
push
bound
mov
dec
std
addr16
arpl
add
mov
xchg
fs
xchg
test
in
jle
and
or
in
sub
jle
pop
mov
jg
and
mov
inc
push
mov
lods
sub
dec
jae
iret
sti
jne
cld
sbb
adc
sbb
jge
dec
mov
cs
fisubrl
es
dec
sub
lret
test
mov
inc
mov
mov
jb
add
add
push
jae
movsb
xchg
mov
ret
pop
lock
xchg
mov
adc
and
sbb
daa
pop
or
mov
sbb
jo
jae
and
cmpsl
scas
lcall
aas
push
fldenv
lock
jg
test
pop
push
jns
and
inc
dec
sbb
sti
std
mov
loope
scas
testl
inc
mov
xchg
cmp
iret
jns
js
daa
mov
add
rorl
jge
orl
ds
mov
cld
xor
fists
mov
pop
and
insl
pop
arpl
push
mov
mov
cli
or
jp
lret
jno
enter
cmp
fdivrl
jo
add
pop
sub
je
outsl
add
fwait
mov
push
xchg
sub
lret
pop
jl
push
mov
daa
pop
and
addr16
int
pop
das
pop
or
mov
int
insl
dec
adc
or
setbe
jno
ficoms
pop
fstp
outsl
or
mov
ss
rcrl
lock
sub
out
xor
jae
adc
test
int3
pop
aas
pop
inc
fldenv
mov
sub
sahf
jae
lret
sbb
and
cwtl
hlt
cmc
nop
rcrb
sbb
xchg
xlat
adc
pop
push
in
push
popf
mov
fnstsw
mov
icebp
lcall
into
orl
jl
or
inc
fdiv
jns
pop
mov
outsb
mov
or
add
pop
pop
xchg
movsb
and
int3
mov
aam
popf
cmp
push
sub
aad
mov
mov
push
push
das
enter
stos
lods
into
inc
dec
xchg
rclb
or
push
ret
stos
push
mov
fwait
aaa
xchg
xchg
loope
mov
mov
repnz
xchg
mov
jbe
dec
mov
std
or
sbb
leave
push
sbb
mov
inc
pop
inc
push
jae
lock
and
cmc
add
sahf
ss
js
push
sti
mov
sbb
cmc
cmp
add
je
add
xchg
sub
sub
push
mov
ja
mov
cmp
xchg
jle
jg
mov
ret
inc
test
aam
cmp
mov
dec
sbb
in
lock
mov
mov
iret
stos
mov
jnp
sti
sub
test
xor
sbb
mov
xchg
mov
fimull
repnz
ss
add
xchg
cs
push
lret
insb
jg
cli
outsl
sbb
imul
filds
lods
mov
mov
adc
jbe
xchg
addl
jp
pop
cmp
xchg
dec
push
xor
mov
movsl
add
out
mov
lret
sbb
out
push
ss
or
mov
sahf
ficomps
cli
mov
sbb
lods
mov
insb
cld
xchg
in
sti
test
xchg
dec
xor
test
add
stc
test
rcrl
push
insb
pop
mov
mov
clc
nop
insb
cli
xor
and
mov
es
jmp
or
sub
repz
xchg
inc
sbb
push
mov
jns
cmp
xor
push
stos
cwtl
xchg
mov
or
mov
sbb
mov
mov
push
test
decb
add
mov
pusha
movsl
jmp
jecxz
cs
add
fwait
test
mov
je
dec
cmp
std
outsl
cmp
sub
loope
push
lock
data16
hlt
lahf
mov
aam
push
and
nop
mov
mov
sub
bound
inc
jae
jbe
lret
inc
sub
loopne
icebp
clc
xchg
jp
cmp
call
cli
fmulp
push
add
loope
mov
inc
and
jo
cli
loope
inc
adcl
xchg
mov
inc
daa
inc
xchg
inc
cwtl
inc
or
mov
aas
lea
xchg
jns,pt
into
mov
ss
sbb
mov
inc
test
rep
xchg
lds
mov
sti
dec
jb
pop
xchg
sbb
push
adc
out
scas
popf
adc
sub
push
shl
scas
dec
jecxz
lahf
popa
pop
add
lods
js
push
inc
push
dec
je
popa
fisttpl
jmp
or
inc
outsl
test
div
jae
push
rclb
pop
pop
or
out
les
in
or
xchg
sub
mov
jns
loope
xchg
jl
outsl
jecxz
aas
xchg
std
lods
xchg
mov
jmp
cmpsb
adcl
mov
pop
loope
and
push
jnp
cs
sub
mov
popf
cmp
add
mov
outsb
je
push
mov
and
add
enter
sbb
in
test
ss
in
mov
insb
test
es
dec
rorl
jge
aas
xchg
out
ja
sub
test
ds
sarl
cltd
cmp
test
xchg
insb
sub
imul
sbb
and
std
mov
pop
outsb
cli
lcall
insl
inc
outsl
dec
xchg
adc
or
mov
rcl
or
cli
in
pop
sub
repz
rcll
mov
jae
into
sti
mov
jge
xchg
jbe
aas
lret
pop
push
or
into
sbb
mov
mov
stos
pop
loopne
push
pop
add
icebp
push
in
cltd
ljmp
adc
mov
pop
jmp
repz
mov
push
sbb
mulb
loop
adc
sahf
xchg
add
sbbb
call
lods
aaa
lods
je
xorb
inc
jl
imul
or
imul
dec
and
sub
mov
cwtl
aad
mov
idiv
pop
and
adc
loopne
dec
int
cmp
adc
xchg
mov
mov
mov
mov
xchg
cmp
fldl
dec
out
adc
or
sbb
movsl
aaa
mov
mov
int3
xlat
inc
sbb
xor
data16
scas
and
andb
dec
shll
or
shlb
leave
push
sbb
in
pop
movsb
sbbl
adc
add
shl
loopne
stc
cmp
dec
xchg
out
out
cld
pop
add
xchg
addr16
cmp
push
mov
sub
xchg
clc
aad
mov
cmpsb
xchg
inc
data16
fisttps
adc
mov
and
dec
in
mov
bound
or
out
adc
inc
or
mov
adc
movsl
fldt
sub
xchg
sti
addr16
xchg
mov
jg
push
jecxz
sbb
xor
jg
push
stos
xor
stc
mov
pop
mov
jecxz
push
stc
adc
subl
jnp
addl
adc
jne
out
and
adc
jbe
ficompl
stos
out
pusha
sahf
push
ljmp
cmp
sub
push
ret
mov
add
xor
pop
push
in
ss
adc
xor
outsl
push
cmp
subl
cmp
insl
mov
xchg
sbb
test
lods
mov
xor
arpl
fdivl
mov
aas
test
push
push
shr
cmp
cwtl
pop
subl
cmp
repnz
imul
push
fucomi
inc
mov
xchg
push
ret
pop
push
mov
adc
outsl
cwtl
pop
mov
mov
dec
xchg
mov
stc
sub
sti
loop
rcll
xchg
fdivrs
mov
movsb
add
repz
shlb
orl
push
lods
testl
enter
inc
movsb
aaa
push
les
jbe
mov
push
arpl
les
call
repnz
pop
out
arpl
push
leave
sti
jne
inc
fmul
jb
leave
lret
push
js
subb
mov
sbb
dec
and
lcall
mov
bound
jnp
sbb
mov
mov
dec
xchg
pop
jl
in
adc
leave
push
cmc
dec
out
and
js
adc
sub
repz
mov
fwait
pop
push
clc
lods
int
dec
test
mov
pop
jno
loopne
or
idivb
or
aas
and
ret
pop
push
adc
in
das
sub
shlb
mov
or
movb
sbbb
or
and
ljmp
cmp
xchg
or
dec
ss
idivb
sbb
dec
adc
sahf
jmp
lcall
xor
sbb
int
adcl
mov
in
das
sub
cmp
loop
sub
lds
sbb
lods
ret
add
test
pusha
in
lds
adc
test
loop
addr16
xchg
add
cmp
out
cmp
fdiv
inc
shl
xchg
pop
lahf
pop
mov
adcb
fidivrl
dec
sub
add
sub
jle
icebp
jne
inc
fcom
pop
mov
mov
aaa
push
in
es
xor
add
jl
jp
inc
es
es
xchg
and
dec
push
xchg
fbstp
cmpsb
push
icebp
pushf
add
pop
loopne
push
cmpsb
mov
adc
call
shlb
jle
out
popa
fcomps
sbb
and
sub
mov
movsb
xor
cmp
mov
xor
je
cld
dec
out
popa
cs
pop
dec
test
sub
mov
dec
mov
jae
movsl
iret
add
test
xchg
mov
mov
mov
xor
cmpsl
scas
mov
clc
mov
fwait
push
ret
sahf
mov
adc
dec
mov
sbb
fwait
jae
adc
je
cmpsb
mov
mov
push
rcrl
push
push
and
push
xor
insl
mov
lods
mov
push
inc
loop
adc
adc
or
mov
test
jno
loopne
imul
lcall
add
shl
daa
std
cmp
scas
clc
mov
xchg
xor
lret
lret
push
mov
test
fsubs
or
imul
pop
mov
adc
mov
inc
fists
ja
shlb
adc
mov
shll
xchg
xlat
mov
mov
pusha
jbe
ficomps
in
xchg
sub
int
es
loop
ss
leave
push
dec
sub
aad
and
lds
sti
out
mov
cmp
and
xchg
jg
sahf
mov
call
out
inc
cmpsl
xchg
scas
add
arpl
test
call
jo
mov
mov
mov
jecxz
outsb
cmp
out
mov
mov
push
inc
sbbl
pop
lea
inc
dec
arpl
mov
outsl
outsb
mov
fidivs
aad
pop
and
jl
out
mov
pop
cli
aaa
dec
mov
xchg
cmp
hlt
xor
push
icebp
repz
pop
mov
lahf
cs
cmp
push
hlt
pop
xor
dec
aad
sbb
jmp
int3
outsb
aas
shr
cltd
data16
and
xchg
sahf
adc
mov
leave
lret
shrb
nop
pushf
pop
pop
dec
cmc
cld
test
pop
lahf
push
cmpsl
xor
in
stos
repnz
or
and
mov
pushl
aam
add
fnstsw
or
xor
xlat
sub
mov
repz
imul
sbb
jbe
pop
ja
iret
or
pop
dec
push
dec
sbb
mov
loopne
xchg
daa
mov
dec
ljmp
cld
sbb
push
cmp
or
fimull
push
rorb
into
hlt
scas
cmpsl
leave
cmpsl
mov
shlb
xor
dec
adc
aaa
shrb
add
mov
sub
jle
adc
bound
push
fldt
cmp
sahf
mov
fbstp
mov
sbb
outsb
lret
cmp
and
push
aaa
dec
xchg
add
cli
faddl
dec
mov
pop
arpl
out
xor
int3
in
jl
jbe
ja
leave
std
repz
fnsave
cltd
in
pop
pop
sub
adc
adc
xchg
or
cltd
xlat
jl
cld
mov
iret
dec
popa
push
ss
jns
cmp
or
pushf
dec
fs
cmc
mov
subb
pop
lds
add
xor
and
dec
push
lret
lret
push
jg
lret
orb
and
cltd
pmuludq
or
dec
insb
mov
lds
popa
or
dec
dec
push
mov
push
ss
insl
mov
test
fisttpll
iret
inc
into
sub
leave
and
bound
fistpll
outsb
push
mov
clc
inc
pop
jae
hlt
stos
arpl
add
bnd
loope
movsb
mov
test
inc
push
imul
or
lahf
aas
or
cmp
or
xor
jno
lods
fstpt
rorl
lret
xchg
test
jo
pop
xchg
adc
mov
xchg
inc
dec
out
int3
cli
lds
adc
pop
adc
push
add
mov
fldenv
xchg
add
ljmp
sub
sar
popl
xlat
mov
movsl
mov
in
xor
xchg
mov
lods
movb
in
aad
xchg
cltd
lea
cmp
xchg
dec
imul
or
adcb
les
or
push
push
cs
push
mov
jb
sahf
push
bound
aam
or
sub
jmp
mov
nop
inc
testl
sub
jp
iret
push
cmp
jp
push
jne
push
xchg
repnz
or
int3
adc
scas
mov
cltd
sbb
adc
bndldx
jge
and
pushf
loop
inc
xchg
call
out
and
inc
imul
xor
mov
or
int3
fstpl
sub
push
sub
dec
das
fisubl
iret
mov
lret
inc
lret
or
dec
int
loopne
push
shll
fcomp
test
sbb
jmp
fcompl
les
xchg
pop
xlat
sbb
popf
std
jo
push
call
adc
cmpsl
int3
push
dec
jo
pusha
xchg
outsl
and
jmp
sbb
push
push
out
sub
loopne
push
aad
xchg
cmpsb
jne
dec
adc
jmp
sub
jecxz
gs
sbb
lock
dec
mov
cs
add
or
fistpll
jo
push
loope
cld
push
pushf
adc
jne
bound
and
pop
lret
xchg
xchg
jo
pop
add
cmp
gs
fucom
mov
dec
jge
test
fmulp
add
lret
ss
mov
stos
dec
inc
dec
cmpsl
sub
lret
mov
inc
ret
xor
call
push
add
mov
sahf
rol
mov
adc
add
push
repnz
test
xor
fucomi
repnz
cmp
sbb
adc
sub
sbb
fdivl
mov
push
lahf
sbb
mov
enter
ret
dec
or
dec
repnz
fmul
xchg
aas
jo
test
mov
sbb
sbb
adc
dec
mov
pop
and
jl
push
xchg
aad
loop
iret
fisttpll
dec
mov
jnp
jge
jle
test
xchg
icebp
out
sub
mov
int
in
insb
loope
adc
inc
sbb
xchg
pop
in
cli
xor
push
mov
dec
or
pop
pop
mov
mov
mov
pushf
push
enter
lea
fistps
js
or
testl
add
mov
push
inc
xorb
scas
into
adc
in
xchg
inc
sbb
xor
cltd
cmc
iret
lss
push
add
xchg
and
mov
dec
sub
sub
pop
lahf
stos
pop
or
loop
inc
loopne
dec
push
scas
sbb
cmp
callw
inc
xor
arpl
pop
dec
sub
cmp
lds
mov
in
loope
out
sub
lret
cmp
jbe
loope
add
fninit
arpl
pop
sbb
mov
nop
ror
xor
mov
jb
pop
and
inc
adc
adc
mov
repnz
pop
sub
int
cmp
mov
push
js
fcom
cltd
mov
sub
sub
movsl
imul
fsubl
or
fstpt
and
or
mov
push
psubusw
jae
arpl
sub
xchg
test
aad
lcall
out
dec
pop
jl
adc
ss
mov
cld
std
daa
mov
mov
dec
lods
add
xor
ja
fdiv
fistpl
pop
inc
loop
clc
and
loop
mov
lahf
push
jno
inc
or
xor
ja
sarl
mov
pop
loopne
push
in
cli
imul
test
pop
mov
sbb
push
dec
inc
out
jo
lock
pushf
cmpsb
mov
cli
shrb
test
arpl
in
mov
lret
inc
xlat
mov
nop
mov
xchg
add
jle
jmp
pop
pop
addr16
inc
out
out
lods
jno
flds
inc
stos
xor
adc
inc
add
push
cld
sbb
mov
out
dec
sbb
nop
mov
cwtl
adc
cmpsb
aam
pop
add
and
lds
mov
or
push
dec
stos
popf
mov
mov
in
jns
icebp
rcrl
repnz
mov
lcall
iret
leave
sti
out
mov
add
test
ret
mov
nop
mov
xchg
jb
cli
jo
dec
push
push
jle
mov
add
std
mov
sub
dec
in
dec
pop
pop
icebp
test
das
xbegin
or
std
call
mov
pop
dec
sub
rcl
mov
jle
push
arpl
push
aas
mov
stos
cwtl
or
adc
in
icebp
mov
inc
scas
xor
sub
fcmovb
fbstp
lods
jno
and
fnsave
stos
ret
int
daa
imul
jecxz
jp
xor
push
xchg
dec
aad
mov
or
dec
out
loope
jg
pop
in
das
cmp
adc
dec
aaa
pop
push
mov
fnstcw
das
mov
xchg
fs
mov
pop
mov
adc
mov
insl
mov
mov
out
fs
and
and
cmp
inc
sahf
mov
sbb
add
dec
adc
xor
xchg
in
mov
jbe
not
or
xor
test
out
dec
mov
ret
jae
jnp
loopne
xchg
pop
dec
shl
mov
push
cmpsl
fwait
cmp
and
push
or
adc
in
adc
sahf
sbb
fcoml
sbb
ja
sub
sbb
mov
fdivp
inc
pop
lea
and
daa
jp
xor
xchg
repnz
xchg
movb
mov
bound
push
test
push
jbe
rcr
cld
mov
sub
and
xor
cld
mov
daa
mov
and
jecxz
and
es
dec
call
sbb
cld
cmp
jge
push
shll
pop
aad
leave
cltd
adc
pop
imul
inc
mov
pop
rorl
xchg
jae
mov
inc
stos
out
dec
mov
adc
mov
stos
addr16
mov
int
insl
fmuls
inc
lahf
mull
into
mov
sbb
popa
jle
out
sbb
jb
xlat
add
sub
mov
xchg
in
push
fwait
jb
pop
jnp
idivb
daa
bound
mov
sub
dec
dec
jmp
push
shl
ss
inc
into
mov
adc
aaa
push
lods
pop
outsl
insl
adc
lret
add
mov
pushf
sub
xchg
movsl
cmp
in
add
out
pop
fwait
inc
add
and
dec
in
xor
gs
scas
sbb
dec
dec
ja
lahf
mov
adc
xlat
fld
scas
push
out
or
fildll
lret
pushf
cld
jae
add
mov
stos
ljmp
lods
in
inc
sub
or
testb
out
mov
add
fs
popa
jmp
or
jbe
imul
xor
jae
out
sub
lods
mov
adc
mov
in
andb
cld
xorb
out
add
outsl
hlt
add
stos
mov
adc
test
fildl
icebp
jae
push
mov
nop
add
cld
add
jle
xor
lds
loopne
fnstsw
add
test
nop
jle
clc
lock
jns
fucom
mov
icebp
push
int
adc
movsl
fucompp
xlat
jno
xchg
out
testb
test
push
daa
cmp
shll
out
push
xchg
lock
lods
aas
int
pop
in
push
test
in
jle
jne
loop
mov
mov
push
sbb
jbe
iret
mov
push
aas
cmpb
xor
cmp
fidivrl
scas
mov
mov
or
push
adc
fbld
dec
jge
hlt
push
je
xor
jg
sbb
or
mov
jb,pn
fsub
pop
int3
fdivr
inc
cmp
mov
test
testl
adc
xor
and
mov
mov
dec
or
adc
mov
cmp
xor
dec
inc
mov
jo
sub
iret
cltd
fs
das
dec
mov
and
insl
sbb
or
call
lret
and
ret
cmp
mov
jge
jle
push
fldl
xchg
fcmovnb
nop
lods
inc
dec
push
aas
adc
je
iret
cwtl
xchg
dec
fistl
aas
into
sbb
pop
jl
into
pop
fstl
repz
fdivl
push
pop
loope
in
jbe
xchg
xor
lret
xchg
into
adc
hlt
rcl
sti
ret
mov
sbb
out
test
daa
outsb
push
pop
loop
scas
arpl
les
std
cmp
xchg
dec
dec
jecxz
sbb
cvtps2pi
scas
repnz
mov
lea
sub
xor
iret
or
pop
jnp
jb
fsubrl
iret
clc
push
les
enter
mov
xchg
ss
ljmp
pop
fwait
fs
push
mov
test
add
addl
adc
xlat
jno
test
sarb
movsb
jl
daa
mov
loop
shl
fst
mov
mov
jp
insb
xchg
and
fwait
xchg
jns
ret
push
jl
mov
nop
paddsw
popf
scas
cmpsl
and
aaa
mov
jns
and
fisubl
xor
add
hlt
pop
pusha
adc
outsl
jmp
push
outsl
jl
cltd
or
stos
xchg
cmc
loope
push
mov
mov
xor
mov
adc
daa
push
mov
dec
nop
aad
in
cmp
in
xchg
jmp
xor
unpckhps
and
push
loope
mov
mov
je
jnp
popa
push
sub
or
daa
rcrl
mov
push
sub
mov
mov
lret
inc
cmp
lret
lret
mov
mov
mov
push
sub
in
mov
xchg
dec
lcall
das
nop
or
sub
ljmp
out
shlb
mov
popa
push
and
xchg
push
jge
ret
dec
or
ljmp
adc
fisubs
push
pushf
jns
popf
pop
xchg
sbb
jle
shlb
pushf
sub
xchg
push
push
xchg
stos
leave
inc
inc
ds
es
adc
mov
imull
push
and
fbld
add
call
pop
mov
divl
mov
outsb
dec
lods
movsl
insl
sub
and
and
push
xchg
push
cmp
xor
shll
push
xchg
xor
ret
addr16
xlat
cmp
popf
push
in
sarb
adc
jge
mov
dec
adc
scas
test
and
pop
sbb
pop
rcll
mov
mov
ljmp
movsb
inc
insb
mov
jo
cmp
sti
sbb
addl
fdivl
jb
jbe
pop
fmuls
inc
push
dec
pop
call
fcomp
inc
push
jge
dec
sub
test
inc
popf
xor
pop
stos
lock
adc
mov
mov
xchg
xchg
ret
cmp
lods
xchg
mov
lock
stos
les
pusha
incl
popa
jb
stc
cli
jmp
out
int
sub
cmpsb
cwtl
or
fidivrl
cmp
cmpb
test
movsl
outsl
es
lcall
mov
in
mov
out
or
sbb
mov
adc
lock
sub
xor
mul
cli
sub
lcall
cli
subl
inc
jb
cli
add
inc
loop
in
ret
jo
aam
repz
jbe
pop
movsl
or
xlat
and
nop
fisttpl
leave
lods
add
je
push
movsl
mov
outsb
add
fistps
mov
lahf
lods
cmc
clc
fisubrs
pop
cmp
shl
int3
or
dec
jno
sti
mov
or
sbb
clc
mov
js
cmp
imul
sbb
sbb
inc
out
push
inc
test
pop
jl
mov
push
xchg
mov
out
rorb
jne
mov
mov
and
xchg
rcrb
xchg
fwait
dec
iret
pop
xchg
iret
xchg
in
icebp
repz
xchg
pop
sub
fdivrs
mov
adcb
add
lahf
mov
aaa
outsb
js
or
shl
out
dec
pop
aam
mov
xor
add
daa
cmp
mov
pop
push
jns
sahf
lahf
std
push
push
and
lret
mov
stos
jle
add
jp
test
cld
ret
and
sbb
xor
adc
lret
jns
fsubrs
xor
scas
std
push
stos
jne
xchg
sbb
push
cmp
and
daa
negb
cmp
aaa
inc
xor
pop
cmp
daa
out
andb
sti
je
ret
xor
jmp
and
jmp
mov
jne
xor
cld
sub
inc
gs
dec
push
repnz
xor
pop
js
mov
add
mov
xchg
add
dec
adc
xor
scas
xlat
outsl
push
jnp
mov
shrb
dec
sbb
ljmp
dec
jno
mov
cmp
daa
call
inc
cs
aas
mul
jecxz
cltd
adc
sub
ret
xor
cs
xchg
inc
imul
lock
dec
bound
dec
in
arpl
add
cmp
stos
push
pop
jbe
inc
sahf
lret
push
cmp
cmp
clc
xor
mov
adc
mov
mov
push
mov
pop
es
addr16
mov
push
add
cmpl
mov
dec
scas
das
test
or
and
jns
push
movl
xchg
adc
push
adc
xchg
sbb
xor
insl
cli
sub
mov
into
movsl
nop
mov
xchg
inc
mov
testb
mov
jmp
test
repnz
mov
sbb
inc
xor
xchg
outsb
xchg
insb
sub
add
movsl
mov
movsb
bound
decb
xor
negl
cltd
loopne
push
xor
dec
das
test
xchg
pop
fcmovbe
lret
sub
lea
insb
push
push
or
dec
adc
pop
lea
mov
cmc
je
mov
aad
out
jmp
rorl
ret
arpl
pop
cmp
mov
loope
xor
xchg
sub
std
push
dec
lcall
jae
push
movsl
leave
ja
rorl
and
xchg
xor
int3
lds
aad
dec
std
jle
jp
sbb
adc
dec
xchg
mov
xchg
push
rcr
test
fisubl
sub
stc
inc
test
leave
je
sbb
dec
inc
push
jne
push
inc
lock
or
sub
popf
dec
mov
fldcw
out
adc
xor
hlt
les
arpl
mov
sbbb
xchg
jnp
or
add
dec
lret
xchg
aaa
jo
pop
popa
imul
xlat
pop
sub
cmp
xorb
push
mov
data16
dec
cmpsl
mov
in
xor
xor
bound
dec
je
dec
scas
mov
aaa
pushf
add
cld
jle
push
pop
dec
xor
into
mov
mov
repz
and
jge
in
xchg
xchg
ja
dec
lahf
cmpsl
xchg
dec
aad
cwtl
aas
adc
jg
test
jnp
inc
xor
sarb
andl
out
sbb
cmpb
lcall
xchg
js
rcr
outsl
lahf
jl
pop
mov
pop
dec
lock
sub
xor
repnz
std
or
sbb
addr16
dec
fsubrs
cmc
adc
pop
shll
lahf
sbb
rolb
imul
xchg
jno
popf
dec
mov
jp
adc
fcomps
jle
or
rolb
cwtl
jb
aam
insl
fwait
jle
shlb
shlb
mov
nop
cmp
push
mov
jle
mov
jns
stos
sbb
xor
jge
push
dec
add
and
lods
mov
stos
add
sbb
cmp
imul
mov
add
mov
mov
adc
fisubl
xor
sbb
xchg
xchg
mov
in
testb
cmp
cmpsb
in
sbb
pop
cmp
cmp
xchg
aas
mov
shr
xor
push
clc
add
and
insb
jp
add
ljmp
jl
and
sbb
inc
stos
jle
xchg
pop
mov
push
es
repz
jnp
adc
stc
sbb
scas
push
sahf
push
shlb
imul
mov
lds
lock
add
and
push
leave
cmpsb
adc
je
icebp
or
dec
xchg
mov
addl
subl
mov
loope
aas
aad
pop
das
push
inc
xchg
jbe
inc
dec
adc
dec
arpl
punpckhbw
int3
pop
xlat
pop
push
imul
sbb
cmp
push
lret
jle
mov
les
je
ret
pop
mov
xchg
mov
arpl
push
add
jge
push
push
dec
lahf
jp
sbb
stos
cmp
jg
in
mov
sub
les
jg
data16
bound
push
inc
mov
stos
shlb
inc
sbb
dec
lods
cmpsl
jg
mov
mov
mov
iret
lret
gs
fwait
xor
scas
and
hlt
inc
adc
daa
scas
add
in
mov
pop
add
mov
mov
xorl
imul
je
mov
push
pop
mov
pop
out
das
arpl
pushf
and
lock
dec
push
or
pop
pop
nop
aam
mov
cmp
mov
xor
stos
scas
mov
pop
jne
and
jmp
pusha
add
loopne
push
out
pusha
outsl
mov
pop
xchg
inc
xor
rorl
push
xor
push
aas
negb
or
push
push
adc
pop
jnp
shlb
cli
jne
sub
mov
xchg
jl
lock
dec
xor
out
fmull
fisttpl
cmp
inc
hlt
jnp
jb
data16
mov
push
cmp
mov
sub
jae
jmp
mov
adc
jne
mov
scas
xor
and
push
daa
xor
maxps
and
fwait
cmp
shrl
push
call
dec
jecxz
mov
xchg
int
xchg
mov
leave
leave
pushf
mov
push
xor
pushf
andb
xchg
std
mov
xor
pusha
mov
push
aad
lea
lret
xchg
shlb
aaa
das
ror
jmp
and
lods
fidivs
arpl
or
and
mov
out
ret
ficoml
test
imul
jae
ja
dec
push
aam
jmp
lock
jnp
ffreep
mov
adc
testb
inc
lods
mov
cmp
add
add
sbbb
sub
negl
mov
cmp
jo
add
push
dec
and
mov
inc
js
push
popl
scas
push
aam
push
jns
cmpsl
mov
mov
or
jb
jnp
adc
out
mov
stc
xor
orb
loop
ljmp
inc
jg
mov
cmp
xchg
lahf
add
inc
jno
xor
xor
push
dec
or
pop
dec
mov
lret
sub
aad
daa
outsl
and
mov
bound
mov
sbb
in
xchg
add
mov
xor
inc
xchg
cltd
add
iret
push
out
scas
popf
mulb
cmp
mov
movb
cmp
inc
stos
inc
pop
sbb
or
mov
add
out
xchg
jmp
ret
xor
xor
stc
aas
clc
push
aaa
call
push
add
sub
ret
push
add
cmp
mov
dec
imul
out
inc
jg
push
imul
xor
xlat
inc
sti
rorb
dec
mov
mov
mul
fnstsw
in
enter
jbe
dec
ss
and
cmp
mov
mov
fyl2xp1
push
lahf
mov
outsl
xchg
adcl
jne
xchg
rcll
aas
ret
ss
pop
cmp
jno
test
call
pop
cmp
fistpll
lahf
mov
sbb
les
sbb
xchg
ja
int3
xchg
mov
bound
push
cmpsl
lods
insl
in
xchg
lock
lock
dec
call
add
inc
repz
sub
lret
xchg
mov
add
pop
mov
out
sbb
pusha
jbe
cltd
mov
icebp
aas
lock
mov
or
pusha
lods
int
outsb
out
lods
dec
mov
mov
inc
add
ljmp
daa
sbb
xor
xor
push
int3
in
cmp
xchg
inc
mov
cmp
or
adc
and
and
insl
mov
jle
and
das
nop
push
imul
push
xor
ror
dec
out
cmp
pop
inc
fmull
into
fst
and
fldcw
iret
pushl
lods
test
es
or
sub
stos
push
jp
and
out
adc
lods
lahf
mov
lret
faddp
or
inc
out
insl
clc
daa
daa
imul
icebp
sbb
out
lcall
or
cld
mov
ds
inc
push
out
sbb
lea
dec
xor
enter
rolb
test
call
mov
push
shrl
prefetcht1
dec
jnp
popf
repz
jae
mov
jns
xchg
mov
pop
int3
and
aad
nop
dec
icebp
dec
roll
call
dec
loopne
jae
pusha
ljmp
push
push
xchg
mov
loopne
int3
sbb
arpl
in
ljmp
or
imul
jge
lret
inc
addl
xchg
mov
ficoml
fwait
mov
cmp
inc
cmp
xor
out
fidivrl
ret
rorb
sbb
sar
inc
dec
and
xchg
inc
sbb
imul
js
push
or
and
sahf
jns
imul
add
outsb
sti
je
push
clc
pop
jecxz
and
repnz
leave
cmpl
std
cs
out
pop
ret
push
sbb
lret
jnp
jns
ret
xchg
sti
lcall
testb
xor
xchg
cmp
jmp
insb
mov
jno
fcmovnb
jmp
push
add
leave
lds
cld
ljmp
cld
into
ret
pop
in
mov
fdiv
mov
xor
fisubs
or
pop
ja
cmp
outsl
mov
or
jb
xchg
movsl
mov
mov
inc
je
test
ja
mov
test
mov
and
jns
fldcw
lock
cltd
out
hlt
mov
mov
lcall
sarb
test
jmp
fucomip
leave
ret
adc
leave
add
cld
mov
add
xchg
add
xchg
adc
mov
std
sarl
pop
pop
add
pop
sti
data16
popl
pusha
scas
das
inc
xchg
in
mov
jge
packsswb
push
ljmp
cld
xchg
jbe
popa
inc
push
mov
cs
or
insb
inc
jge
das
push
push
jp
push
pop
pop
fcmovnu
cmp
shll
ljmp
in
je
xorl
stc
and
jne
sahf
inc
iret
subl
mov
sbb
mov
xor
inc
fidivrs
fldt
adc
enter
cmc
div
adc
sbb
pop
cltd
bound
and
test
mov
cmp
and
mov
adc
idivl
das
inc
push
push
aaa
pop
push
outsb
cmp
jo
test
add
js
push
sbb
mov
sti
pcmpeqb
mov
loop
xchg
sbb
out
pop
popa
dec
aam
inc
ds
or
mov
inc
push
or
or
lret
adc
lret
push
fiaddl
xchg
mov
inc
test
mov
xor
sbb
imul
fidivrs
in
leave
pop
ret
out
xor
iret
ror
hlt
add
ljmp
xorb
cmp
enter
push
jbe
adc
es
faddp
cmpb
dec
push
addr16
hlt
or
sti
and
shrb
cmpsl
pop
jg
and
dec
xlat
mov
push
sti
xchg
push
add
movsl
loop
and
add
adc
cwtl
ja
test
outsb
xor
out
and
sbbb
push
in
addb
and
popf
mov
xchg
xchg
adc
sahf
addb
std
sub
jns
pop
loop,pn
pop
adc
or
xor
xor
lock
into
mov
push
mov
in
push
jnp
pop
fiadds
xchg
fcmovbe
mov
daa
sub
je
dec
fstl
dec
int
cmp
mov
jnp
into
pop
dec
js
fnstsw
jl
iret
add
mov
lods
jne
rclb
inc
adc
fs
sahf
int
inc
js
mov
add
and
cmpsb
mov
int
xor
ja
outsl
insl
daa
or
imul
test
adc
cmp
cld
xlat
dec
dec
add
xchg
dec
fs
mov
push
ss
push
or
xchg
cmp
ljmp
roll
pop
xchg
lret
push
test
xchg
adc
and
inc
les
movsl
into
lea
or
inc
int
mov
insl
mov
xchg
mov
and
idivl
arpl
jns
add
sbbl
pop
stc
movsl
sti
mov
pushf
insb
cmpsb
scas
pop
mov
inc
into
xorl
pop
in
fs
jl
insb
and
push
inc
add
jne
xchg
dec
xchg
mov
inc
jb
ficoml
mov
mov
and
imul
sahf
lea
cwtl
dec
lret
ret
xchg
pop
mov
adc
out
lret
sub
jne
imul
movsb
wrmsr
and
stc
mov
pusha
dec
imul
or
hlt
loope
shrl
push
sub
push
aam
xchg
xor
repz
notl
cwtl
not
mov
out
call
sub
aam
push
dec
inc
shlb
or
fmull
sbb
push
sub
test
jo
cmp
mov
testb
movsb
std
mov
clc
cmp
fstpt
xor
std
xor
add
loope
int
addr16
mov
adcl
xor
inc
add
outsb
cli
lahf
stos
push
pmulhuw
lods
xlat
lock
inc
notb
cmp
ds
repz
test
jle
imul
jle
lret
lock
inc
mov
shrb
mov
jge
cmp
xchg
xor
xchg
insl
inc
mull
sub
loope
inc
into
dec
test
and
sub
xorl
jne
cmp
ror
loopne
or
xor
hlt
mov
add
jbe
fnstsw
add
pop
sbb
push
jg
adc
loope
push
mov
fsubrs
icebp
lods
cwtl
mov
ret
cld
mov
xchg
mov
jecxz
lret
fwait
pop
jmp
lea
cmp
fcmovu
out
xchg
cmpsl
lea
xchg
mov
mov
cmp
inc
or
ficoms
cltd
js
lods
xchg
sbb
jecxz
imul
stc
loop
ja
mov
adc
mov
push
adc
out
pop
adc
fwait
or
inc
stos
xchg
iret
push
popf
and
and
add
xchg
pop
push
xchg
adc
cltd
dec
sbb
and
cmp
mov
and
stos
adc
or
out
out
dec
inc
inc
dec
cmp
stc
loop
inc
sub
dec
add
push
and
cmpsl
popa
or
dec
mov
push
int3
in
js
pop
call
dec
push
andb
sahf
or
and
xchg
ljmp
sub
int3
fistl
out
jno
fsts
mov
adc
push
adc
dec
loop
call
arpl
loope
inc
pushf
insl
hlt
aaa
cmpsb
cmpl
pop
cmp
xor
out
mov
popa
idiv
test
fcoms
push
aaa
inc
ljmp
sbb
out
jge
lea
dec
lds
and
sub
xchg
xchg
movsl
mov
loop
shll
test
lods
movsb
adc
push
and
xor
lahf
dec
mov
cmp
outsb
push
jbe
fdivr
xchg
add
sbb
lret
xchg
lahf
mov
jno
in
or
adc
add
adc
mul
pop
push
jns
sub
inc
xchg
ret
mov
push
fistpll
repnz
cmp
inc
sbb
mov
jae
push
inc
adc
mov
shl
cmpsl
push
fdivp
mov
and
jmp
jbe
xlat
clc
push
cli
clc
jae
icebp
lret
inc
sub
aas
bound
add
ss
test
out
lods
add
xor
sahf
mov
and
xlat
daa
aaa
pop
cld
sti
or
cmp
inc
jns
sub
pop
je
push
movsb
addb
cmpsl
xor
cmp
mov
popa
outsl
pusha
push
mov
roll
rol
aas
cmpsb
push
pop
add
or
mov
sar
inc
cmp
dec
mov
cmpb
fistps
or
arpl
xor
icebp
pop
mov
ret
int3
scas
adc
test
sbb
je
push
outsl
icebp
push
or
mov
lret
mov
iret
call
jns
test
sbb
repnz
in
es
mov
loop
popa
mov
pop
jp
xchg
movsb
and
xor
cmc
pop
sbb
cmp
jne
dec
jo
push
or
push
test
pushf
mov
cmpsl
ret
mov
xchg
cwtl
add
jno
cmp
icebp
data16
xor
dec
jbe
fistl
ljmp
mov
xchg
dec
cltd
xlat
shrb
les
pmaxsw
pop
sbb
mov
mov
mov
das
clc
shr
mov
mov
enter
sbb
mov
push
and
cmc
icebp
out
sub
orb
ja
dec
into
inc
pop
add
stos
imul
add
push
xor
outsl
mov
mov
arpl
mov
out
and
or
add
adc
dec
and
outsb
lahf
jae
push
push
mov
or
cmp
sub
out
in
mov
inc
dec
sub
mov
mov
scas
shll
xchg
out
cli
mov
test
inc
aad
ficomps
testl
clc
add
pop
adc
sarl
ret
mov
sub
rorl
movsb
fsubl
clc
in
ret
call
inc
xchg
mov
sub
sub
pushf
adc
ds
stc
imul
jmp
mov
xorb
add
aad
cmp
jecxz
cmp
push
xlat
dec
fwait
mov
or
jp
pop
xor
jns
jmp
ret
movb
into
mov
and
mov
or
add
into
arpl
cmp
xchg
out
mov
inc
out
cmpsb
dec
mov
xor
idivb
mov
ds
loopne
loopne
and
add
jp
sub
lret
xchg
add
lret
or
hlt
lret
xchg
rclb
cmp
mov
jp
and
jle
cmp
imul
lds
push
xor
test
stc
xchg
mov
dec
sub
or
jmp
mov
jl
roll
loope
sbb
mov
shr
pop
stc
mov
dec
fcmovnu
sub
in
clc
mov
jl
inc
std
add
add
jge
pop
jecxz
mov
rcrl
scas
mov
dec
inc
int
add
push
cmp
add
jne
cmc
mov
cli
aam
cmpsb
adc
test
or
adc
frstor
xchg
push
andl
cmp
push
add
cmp
mov
loop
pop
adc
cmpsl
js
mov
push
mov
fisubrl
lea
mov
iret
xchg
mov
aaa
addr16
pushf
bound
jns
pusha
add
js
jl
mov
lods
xchg
pushf
sahf
push
aas
jmp
sub
lret
test
mov
mov
sub
mov
sbb
jae
cld
mov
mov
aam
out
fwait
or
sbb
test
dec
add
stos
xchg
xchg
inc
dec
sub
push
sti
cmp
push
rorl
out
xchg
xchg
out
subl
das
lea
scas
and
push
cmp
hlt
lahf
cmp
pop
ficoml
pop
push
ret
xor
cmpsb
jns
fprem
pop
lods
rorb
les
dec
push
shr
ljmp
test
out
adc
mov
or
icebp
xor
cltd
mov
pop
and
and
fsubs
push
imul
or
aad
call
adcl
pop
ss
cmp
lcall
mov
push
in
adc
fmul
call
mov
lds
inc
insb
add
push
stos
mov
mov
xor
test
mov
dec
push
into
or
data16
lods
mov
dec
daa
loopne
xorl
mov
add
pop
pop
sbb
push
pop
add
movsl
cwtl
test
jns
push
lea
ss
add
and
scas
inc
dec
sub
sbb
outsl
mov
jbe
mov
jne
inc
cmc
les
add
fisttps
push
iret
jl
adc
dec
cmpsl
fs
xchg
movsl
rorb
std
xor
dec
cmp
sub
call
std
xor
cmpsb
out
or
fs
or
imul
bound
push
or
test
or
hlt
cmp
leave
and
pop
pushf
jl
mov
dec
pop
mov
adc
mov
mov
add
int
mov
sub
jbe
push
loopne
jae
les
jp
fmull
push
outsb
ds
cmpsb
mov
jecxz
aaa
and
xchg
mov
cmp
pop
adc
out
aaa
ja
dec
insl
or
push
in
inc
pop
add
mov
pop
mov
loop
cli
sub
pushf
add
mov
das
push
mov
xor
in
clc
jecxz
ja
clc
dec
jecxz
cmp
and
lock
mov
loop
and
sub
push
lock
push
divb
inc
or
xchg
test
add
push
and
test
sbb
sbb
mov
addr16
stos
imul
dec
aas
jo
out
in
es
les
sbb
inc
and
shlb
inc
mov
sub
inc
ret
cs
add
shll
mov
push
jg
xchg
xchg
inc
lods
loope
insl
dec
sahf
sbb
inc
mov
inc
xor
cmp
aas
lods
mov
in
addr16
jo
dec
stc
push
out
je
xor
jo
add
mov
out
stos
adc
stos
add
cmp
imul
mov
dec
push
lock
dec
push
rolb
fsubrs
sbb
and
test
pop
sahf
leave
stos
xchg
popf
ret
xbegin
push
inc
out
or
push
movsb
decl
xchg
mov
hlt
push
pop
mov
sbb
xchg
insb
ss
and
push
mov
data16
into
push
jne
int3
cmp
leave
lods
or
or
xchg
inc
xchg
out
mov
leave
fwait
pop
pushf
es
fistpl
cmp
and
jmp
push
sub
jno
cmpl
sub
jne
xlat
pop
sbb
jecxz
pop
xlat
mov
pop
loopne
fs
mov
lds
aas
js
or
addr16
fcom
xchg
mov
mov
sahf
pop
dec
adc
sahf
mov
xorl
scas
jne
mov
mov
sarb
jp
jmp
inc
mov
xor
test
imul
fidivrs
mov
fdivrs
stos
insb
sbb
ljmp
xor
roll
pop
ret
dec
xchg
test
mov
mov
lret
push
push
movsl
lods
cmovl
or
sbb
int
cmp
cmpsb
mov
je
nop
sbbl
in
xchg
aad
fisubl
int3
lds
mov
jge
cwtl
loope
push
pop
imul
sbb
inc
cwtl
enter
jbe
mov
sbb
mov
rorl
inc
lcall
push
jns
cmp
pop
js
lcall
adcb
push
daa
dec
in
mov
loop
addr16
iret
sahf
mov
rorb
pop
jmp
inc
cmp
fldl
imull
jmp
mov
ljmp
push
insb
and
outsb
push
popa
sbb
sub
jg
pop
stos
and
jb
fcmovnbe
and
js
inc
mov
shrl
pop
jnp
sub
or
fstps
cmpb
mov
dec
inc
xchg
inc
int3
divb
xchg
hlt
lea
push
and
and
jmp
push
sti
xchg
and
test
ficoml
sbb
psrlq
pusha
mov
movsb
sub
inc
mov
in
inc
scas
pop
jae
enter
aas
inc
lret
mov
and
je
mov
mov
pop
outsl
in
mov
outsb
xorb
mov
xchg
mov
or
jle
fwait
test
lods
iret
inc
and
addr16
cmc
stos
into
push
imul
push
ret
fnstenv
jg
xor
add
leave
imul
loope
ret
cmp
scas
nopl
out
cmp
cmp
fucom
lahf
clc
push
mov
fnstsw
xchg
roll
idiv
popa
cmp
mov
aam
popa
scas
cmp
jo
pop
dec
out
mov
js
xchg
jno
inc
cmpsb
add
xchg
mov
shrl
ret
daa
lret
fs
icebp
sbb
mov
dec
push
ja
pop
icebp
std
cmpsb
add
mov
adc
and
std
mov
sub
mov
fstpl
cwtl
or
in
iret
dec
inc
mov
dec
out
jge
mov
movsb
js
sub
stos
mov
repnz
pop
adc
add
mov
push
mov
outsl
lcall
loope
aam
adc
cmpsb
jo
pop
sub
aam
lea
mov
je
mov
lcall
sub
popa
inc
in
test
cld
scas
adc
fnstcw
jge
jmp
sub
loop
xchg
cmp
dec
or
das
xchg
int
add
xor
push
mov
mov
repnz
push
ror
lods
sti
es
stc
pop
push
sub
ss
loop
xchg
shrl
xchg
cwtl
xchg
pop
mov
jl
cmp
inc
inc
pop
xor
fstp
jb
sti
cmpl
add
jecxz
stos
ljmp
xchg
and
insb
clc
hlt
ljmp
push
mov
mov
jne
mov
cmpsl
dec
ss
aas
test
sahf
inc
insb
out
lods
xchg
das
es
stc
jno
mov
mov
loop
sbb
cltd
cmp
test
add
lcall
inc
pop
lods
add
das
dec
xchg
fidivrl
loopne
dec
xchg
jb
cmpb
dec
xlat
cli
cmpsl
jb
push
fiaddl
addr16
rorl
xorb
mov
pop
push
lds
test
and
or
clc
popa
test
add
icebp
or
jmp
xor
dec
push
lds
ljmp
sub
clc
or
scas
mov
adc
cs
scas
xor
jle
fdivr
lods
movsb
mov
xor
cmovnp
pop
xchg
sbb
scas
insl
stc
ds
cmp
repz
mov
xchg
adc
lcall
loopne
notl
dec
mov
push
shl
xchg
and
sub
or
jmp
cmp
sub
aad
andl
fs
fwait
cs
pop
push
and
les
fisubrl
push
sti
test
popf
and
inc
out
lock
inc
lcall
sbb
jp
add
sub
in
stos
sub
add
ret
mov
andb
push
mov
into
loop
push
cwtl
and
sarl
pop
mov
or
jo
popa
and
mov
das
cmp
sbb
push
je
aam
daa
sub
lea
out
add
jp
mov
jns
mov
repz
adc
push
loop
jmp
mov
dec
mov
push
jle
scas
mov
push
mov
gs
fdivl
or
xor
mov
repnz
pop
and
lret
pop
call
jecxz
cmc
push
imul
jp
sbb
mov
gs
jno
mov
data16
sub
mov
outsb
fld
sbb
lods
mov
mov
adc
call
add
out
in
pop
lahf
jge
xchg
cli
inc
andl
cmp
xchg
rcrb
iret
jp
fimull
fsubr
dec
mov
loop
and
fiaddl
out
xlat
jae
hlt
fildl
cwtl
mov
mov
stos
or
jg
push
stos
or
imul
mov
jb
xor
arpl
jl
mov
scas
movsl
pop
aaa
and
adc
aam
cmp
xchg
call
push
fcoml
pop
lahf
fs
jo
and
add
mov
pop
push
and
mov
daa
iret
sub
es
mov
mov
mov
cmp
xchg
bound
or
jmp
sahf
stos
addb
mov
inc
mov
pop
sub
cmp
xchg
sub
addb
cmp
pop
mov
bound
mov
xchg
fldcw
outsl
dec
repz
jmp
push
xchg
cmpb
das
sub
inc
jne
ja
dec
pusha
mov
fcompl
adc
push
lahf
inc
mov
lds
pop
mov
pop
xor
movsb
sub
std
push
movsb
icebp
std
rol
or
cltd
mov
icebp
inc
jb
lods
cmp
nop
adc
sahf
add
add
fwait
lcall
sbb
mov
rolb
cmp
xor
stos
pop
xchg
outsb
sbb
call
out
push
inc
enter
imul
sti
ret
int
mov
fs
mov
movsb
xchg
andb
push
pop
xchg
outsb
mov
sub
lahf
fidivrl
pop
sub
pop
jle
pop
jp
int
sub
or
jmp
mov
mov
ret
dec
outsl
inc
pxor
jmp
or
sub
jge
sahf
jae
lods
out
add
push
repnz
insl
loopne
xor
bound
js
pop
push
cmp
jg
or
rorb
js
pop
xchg
adc
iret
push
inc
pop
push
push
pushf
insb
lds
pop
xchg
xlat
sub
mov
adc
pop
jmp
arpl
mov
sub
popa
push
test
mov
test
adc
push
pushf
push
es
cli
lret
hlt
or
adc
mov
dec
rcrl
arpl
lock
inc
mov
xor
xchg
ss
adc
jg
clc
push
cmc
in
jns,pn
adc
das
xchg
add
push
in
push
test
sahf
jne
adc
out
mov
les
sub
pop
sub
adc
test
jge
mov
test
ret
adc
inc
xchg
sub
jge
repz
cs
icebp
je
mov
sahf
sbb
push
fdivrl
push
mov
lret
jne
int3
xor
adc
xchg
push
daa
add
mov
push
subb
addr16
cld
aad
insb
sub
out
addr16
xchg
adc
fs
sbb
xor
jb,pt
lahf
push
loope
xor
xchg
jne
sbb
dec
push
mov
push
out
adc
ds
mov
cmp
and
lcall
gs
ss
lods
stos
int
fcoml
xchg
cmp
pmulhuw
push
lret
ja
push
mov
scas
jge
sbbl
sub
daa
and
and
nop
and
mov
call
mov
lods
popa
mov
add
subb
push
sub
sti
sbb
rolb
dec
ret
sub
push
add
ret
loop
lods
int3
xor
add
arpl
cltd
insl
std
jp
lahf
das
adc
dec
dec
cmp
or
testb
or
xor
js
sub
push
leave
inc
in
jbe
cli
xchg
stc
cs
cwtl
fistpl
hlt
test
rcrb
test
pop
das
xchg
jnp
push
jnp
jle
mov
je
and
or
shr
in
or
popa
fisttps
repz
gs
inc
lret
lea
and
xchg
cs
adc
and
jg
add
pop
cmp
jmp
je
dec
lret
push
xchg
mov
outsl
nop
push
push
popf
arpl
sbb
or
test
mov
aam
jl
daa
sbb
out
shr
stc
das
scas
and
jbe
sti
loope
sub
ja
dec
fdivs
mov
loope
adc
sub
mov
sbb
orl
fildll
sub
inc
int
idivl
jp
ljmp
pop
mov
mov
out
inc
mov
push
xchg
shlb
pop
xchg
leave
popa
lods
repnz
pop
nop
out
std
pushf
or
adc
xchg
pop
xchg
test
or
mov
inc
leave
push
mov
mov
sub
or
lret
mov
inc
popf
and
mov
adc
in
xchg
xchg
dec
push
sub
lock
push
push
adc
xor
out
out
out
sub
bound
fadd
in
sahf
bound
jge
scas
xor
cmp
out
fisttpl
cli
outsb
push
js
out
stos
lea
aam
lods
jl
jae
fcoms
sub
mov
lcall
test
mov
jno
mov
jo
div
push
mov
pop
xlat
imul
cmpsb
popf
cmp
inc
clc
xor
lock
das
sub
mov
pushf
mov
lahf
sub
fwait
pop
call
lock
adc
mov
je
dec
sti
sub
add
sub
push
or
fdivrl
push
mov
inc
out
pop
lahf
iret
insb
fsubrs
icebp
fdivp
push
rcll
stc
mov
dec
xchg
nop
mov
shlb
adc
pop
inc
out
imul
push
push
fsubs
pop
xorl
push
mov
sbb
in
xor
test
jle
addb
pushl
test
or
sti
cld
outsb
mov
adc
push
pusha
xchg
push
jnp
jbe
mov
add
jnp
fstpl
cltd
mov
mov
xor
sub
lret
and
movb
push
mov
mov
insb
cltd
ret
pop
pop
lahf
mov
fnstenv
std
subb
sar
inc
ret
data16
or
mov
fisubrl
jno
add
stos
xchg
add
jecxz
addr16
cli
lods
les
pop
cli
gs
stos
bound
xchg
leave
dec
aaa
cli
mov
leave
xlat
add
inc
mov
fstps
imul
pop
arpl
add
mov
xchg
jnp
lret
arpl
fdivrs
push
cmp
js
scas
addl
fldenv
movsb
arpl
pushf
jo
push
lahf
or
cmp
sub
stos
lcall
adc
inc
movsb
outsb
jb
mov
mov
mov
cld
ror
mov
ret
outsb
cwtl
xchg
or
mov
push
fwait
push
mov
jo
stos
les
push
or
jno
push
int3
push
shrb
ljmp
pop
clc
lock
xchg
mov
mov
xchg
outsl
or
lcall
add
js
ljmp
repnz
int
mov
jl
sbb
add
mov
mov
leave
sbb
jp
scas
inc
pop
mov
fsubr
inc
out
fidivs
push
add
push
stc
mov
sti
int
imul
ljmp
ret
jns
repnz
cmp
clc
lcall
push
mov
xchg
pop
and
rcrl
adc
lahf
repz
sti
and
js
inc
mov
fs
arpl
jno
cmp
lods
nop
testb
ds
xor
daa
cmp
lret
popf
jp
push
jns
stos
rcll
loop
int3
clc
aas
inc
xlat
xor
mov
bound
mov
lahf
adc
insb
and
sbb
mov
loop
sarb
into
js
in
and
mov
negl
and
fs
movsb
in
mov
adc
int3
jae
inc
int3
xor
into
ret
mov
popf
jge
shll
in
in
dec
stos
dec
addr16
pop
loopne
xchg
mov
jp
faddl
loop
shrb
xchg
adc
ret
push
add
sbb
mov
ret
mov
roll
mov
movsb
roll
sbb
sti
dec
jmp
movsl
xchg
pop
ret
or
jnp
pushl
mov
jnp
stos
lret
inc
aam
lock
add
mov
push
mov
lods
pop
in
push
xor
cs
pop
pop
repnz
dec
cltd
lret
mov
push
movsb
cmp
aad
add
dec
inc
or
bound
add
fs
adc
in
test
jo
mov
stos
fcomps
and
dec
xor
cmp
jle
imul
js
ja
adc
repz
or
jne
dec
scas
jecxz
xor
mov
pop
jp
ljmp
aaa
jnp
mov
dec
jmp
push
mov
lret
cmp
pop
cmp
lods
mov
sub
and
outsb
dec
cmp
mov
fwait
mov
es
mov
xlat
mov
push
jmp
aam
push
sbb
movsl
shufps
fistl
int
sbb
pop
pop
movsl
mov
xor
push
or
adc
enter
pushf
push
fcompl
sub
lds
mov
xchg
push
ret
mov
in
popa
xchg
pop
cltd
lret
mov
or
mov
fistpl
xor
outsb
xor
das
sub
sbb
imul
jp
arpl
dec
or
cs
jmp
aas
scas
jmp
fcomip
mov
cli
pop
pop
mov
shrb
inc
cwtl
mov
adc
sbb
cmpsl
nop
xor
mov
nop
cld
inc
cmp
sub
pop
jb
push
jecxz
sub
xor
adc
leave
xor
push
mov
ja
jl
call
shl
mov
test
test
subb
jmp
pusha
mov
dec
in
call
mov
aad
jb
js
push
sub
orb
nop
xchg
mov
cld
aaa
out
aaa
aaa
ss
sbb
push
repz
lret
push
or
inc
je
lds
jecxz
or
inc
jle
lea
sbb
xor
sbb
iret
sbb
adc
nop
lock
cmp
jp
jae
jo
mov
mov
not
pop
mov
adc
loopne
xor
int
pusha
int3
jo
inc
out
or
gs
cs
cwtl
dec
xchg
pop
inc
xchg
gs
mov
scas
in
pop
stos
xor
xchg
andb
ss
ljmp
mov
notb
fwait
loop
rol
push
push
mov
aam
outsb
xor
jb
in
xor
movsl
xor
int3
in
xchg
push
ss
inc
mulb
jb
add
and
lret
lods
mov
push
int
and
arpl
sbb
aaa
mov
adc
and
xchg
fs
inc
add
or
cs
test
test
cli
aam
insb
add
lods
pop
sbb
mov
push
sbb
mov
mov
imul
rcrb
mov
sub
push
mov
cmc
or
cwtl
sbb
push
enter
adc
dec
push
push
sub
push
xchg
aam
xor
dec
popf
pusha
ss
jp
fnstsw
cmpsl
sub
scas
sub
pushf
add
cmp
repz
rcrl
or
int
mov
gs
mov
aam
sbb
es
or
push
dec
cmp
mov
icebp
sub
ja
mov
sbb
sub
gs
cli
cld
inc
pop
lret
loopne
aad
iret
imul
cs
aaa
outsb
inc
dec
xchg
lock
sub
es
mov
jnp
paddb
mov
push
sub
int3
hlt
pop
in
mov
push
hlt
jle
xchg
add
insb
test
jg
andl
roll
sarl
push
push
mov
ret
cmp
adc
push
dec
push
xchg
int3
push
xchg
mov
pop
outsb
dec
jg
ja
dec
push
push
sbb
divb
or
pop
jno
push
cmpsl
sbb
lock
mov
jne
icebp
gs
arpl
iret
loop
jno
mov
jl
mov
out
push
jo
lahf
fcoml
aaa
push
sbb
or
ret
lock
es
sarl
pop
loop
jae
inc
ret
or
setp
idivl
mov
xor
fimull
pop
js
shlb
cmc
jae
jnp
push
ret
in
ja
inc
shr
inc
and
fs
fstp
push
aam
and
and
and
pusha
fidivl
push
pop
out
pop
jo
fadds
pop
lret
mov
lea
dec
push
out
mov
cmp
mov
cmp
adc
cmp
lods
lret
push
icebp
fsubl
fisubrs
das
cmp
out
dec
jns
lock
and
dec
xlat
in
sbb
ja
rorl
test
std
rorl
mov
jb
cltd
int3
leave
andb
cltd
in
js
les
add
mov
mov
inc
in
pop
in
jno
dec
xchg
adc
pop
sbb
xor
mov
mov
or
insb
aad
into
clc
cmpsl
mov
mov
cmp
dec
pusha
cmpb
mov
iret
inc
inc
fdivr
xchg
xchg
call
xor
pop
inc
aam
pop
pop
and
inc
mov
lret
jl
adc
fs
aaa
lods
hlt
ret
or
adc
jecxz
in
shll
cmp
and
stc
ja
call
push
add
aas
mov
push
pop
lret
cmpsl
arpl
decl
xchg
mov
pop
xor
fstps
jbe
loop
add
testb
cltd
adc
stc
xor
pusha
popf
mov
and
adc
faddp
test
outsl
xor
bound
out
pusha
push
lret
mov
pushf
fcom
mov
xor
stc
rorl
adc
mov
inc
cmpsl
movsl
int
push
and
stc
mov
int
jae
dec
orb
sub
inc
adc
sti
mov
aam
cltd
pop
dec
pop
cs
leave
andl
cmc
dec
stos
sub
aaa
into
pop
xor
mov
std
cwtl
and
inc
add
mov
stc
fwait
mov
insl
lahf
push
jne
mov
cli
div
repnz
imulb
fiadds
lcall
ljmp
insl
and
andl
out
mov
scas
push
xchg
arpl
out
and
adc
sbb
test
pop
mov
cltd
and
mov
mov
int3
bound
insl
aad
in
adc
mov
sub
push
xor
mov
push
out
adc
inc
test
rcrb
jg
mov
mov
and
out
jns
or
jmp
lods
adc
sub
fnstenv
mov
mov
jg
or
and
icebp
popa
push
sbb
fsubrs
mov
adc
sub
cmpsl
outsl
jg
xchg
sbb
imul
les
xchg
aam
pop
movsb
jl
mov
pop
push
jp
nop
lods
sbbl
loopne
into
mov
and
fdivrs
testl
push
xchg
cli
mov
fists
sbb
sbb
sub
mov
xchg
mov
xchg
push
pop
mov
js
cmp
lods
dec
add
jmp
xchg
cltd
mov
add
mov
xchg
addr16
gs
outsl
push
inc
adc
leave
push
cmp
pop
xchg
in
adc
xor
int
dec
rorb
fadd
mov
outsl
scas
mov
lea
mov
add
jp
and
sti
cmpsb
and
sbb
cld
cmp
xlat
adc
outsl
int
loop
aaa
jecxz
shrl
cmp
rorb
stc
mov
xor
rolb
cmp
jne
mov
pop
out
xchg
dec
push
call
ss
jl
inc
cmp
add
ljmp
push
sub
xchg
xchg
sarb
jg
fbstp
inc
push
imul
xor
dec
icebp
mov
xor
add
cmp
jmp
xorl
mov
addr16
adcl
test
rcl
es
sti
cmc
das
push
imul
test
nop
and
mov
je
push
loopne
das
bound
loop
bnd
inc
jnp
loop
ds
or
lahf
dec
inc
addl
and
aaa
cmpb
xor
popf
hlt
fdivr
sti
dec
lret
fildl
xchg
add
or
xchg
xchg
lea
cmp
push
and
ss
cmp
data16
jg
mov
mov
out
data16
shrb
leave
cmpl
arpl
loop
repz
stc
test
stc
pop
sbb
out
rorb
cmpl
push
xor
pop
push
cmp
pop
adc
adc
xor
jb
inc
sub
add
std
ds
lods
inc
xor
inc
xor
mov
scas
in
int3
stc
icebp
rcrl
xor
dec
out
adc
pop
fsub
shll
pop
bound
popa
mov
shll
sbb
xor
stos
mov
ret
scas
icebp
popf
iret
pusha
jo
outsl
dec
mov
jnp
xchg
inc
nop
fmuls
ss
imul
pushl
cmp
inc
sarb
mov
push
mov
in
call
mov
cltd
pop
inc
outsl
stos
imull
mov
mov
pop
xor
sub
outsb
pop
or
icebp
pop
lcall
mov
inc
shll
mov
insl
es
mov
mov
sub
lret
push
bound
sbbb
sub
andb
std
adc
pop
inc
daa
hlt
adc
sub
aas
add
mov
ljmp
adc
fsubrs
sbb
lea
push
and
cmp
in
jb
adc
movb
addr16
je
cmpsb
sete
jns
dec
lahf
or
jnp
or
pop
add
sahf
mov
xchg
xchg
mov
fistpll
dec
sub
data16
ret
mov
test
out
mov
mov
pop
add
mov
push
push
xor
cmpsb
inc
mov
loopne
sbb
inc
jo
pop
dec
adc
out
or
lods
ficoms
push
xor
add
pop
mull
imul
stc
xchg
iret
das
imul
xchg
add
sub
mov
mov
or
mov
xchg
pop
adc
mov
xor
dec
and
lcall
jae
out
cli
mov
mov
inc
lcall
hlt
or
push
fwait
jmp
test
test
pusha
and
jp
scas
mov
sbb
sbb
shl
xchg
xorl
in
or
fistl
test
ret
dec
inc
push
hlt
out
push
lret
dec
cmp
mov
ljmp
in
mov
fnsave
mov
imulb
pop
cmp
and
ljmp
inc
mov
insl
test
fs
notb
push
imul
xor
shll
pop
jne
cmpb
outsl
or
or
jge
fabs
pop
ret
sub
xor
pusha
and
inc
popa
mov
lock
mov
cmp
sub
adcl
mov
je
inc
mov
mov
mov
add
pop
xchg
or
scas
rcl
mov
popa
add
pop
mov
push
xchg
sbb
test
add
mov
lea
fxtract
xchg
jmp
dec
mov
popf
add
mov
cli
clc
jbe
pop
xchg
shlb
cltd
mov
mov
lods
jno
dec
out
hlt
add
sbb
push
pop
pop
int
dec
lods
inc
or
mov
pop
out
in
mov
imul
push
sbb
sub
hlt
jge
inc
cmpsl
cmp
inc
sarl
jo
insl
or
call
mov
cmpl
clc
lds
jge
xchg
cmp
lods
xor
xchg
insl
mov
dec
dec
jecxz
inc
hlt
imul
push
leave
adc
cmp
xlat
mov
aaa
dec
ss
call
mov
out
add
lds
sahf
sub
pushf
shrl
pop
rcr
orl
mov
xor
decb
xor
inc
fstps
mov
xchg
out
mulb
nop
out
test
pop
add
jmp
mov
test
je
jae
push
and
push
pop
sbb
mov
pusha
nop
jbe
repz
jle
ret
add
or
js
insb
es
aam
lcall
hlt
sbb
cli
xor
cltd
ja
jmp
cmp
xor
je
mov
and
and
inc
mov
mov
gs
js
sbb
decl
lcall
sbb
mov
pop
dec
sub
ja
lcall
pusha
pop
sub
iret
jle
cmpsb
mov
pop
jmp
jl
jae
adc
outsb
arpl
xor
ret
push
push
xchg
push
xor
jnp
adc
dec
dec
sti
lahf
pop
clc
in
notl
imul
scas
or
sbb
sbb
inc
lcall
cmpsl
xchg
ljmp
aad
adc
loopne
incb
pop
mov
aas
mov
mov
rorb
push
push
add
dec
jo
and
adc
loop
dec
xor
xchg
repz
or
icebp
shl
sbb
or
push
pop
ss
stos
mov
fxtract
or
aas
in
dec
icebp
mov
dec
in
fcomi
orb
ss
and
test
mov
xor
outsb
sub
mov
rcl
stos
mul
cmp
mov
shll
ret
hlt
jmp
pop
rcrl
movsl
aam
sbb
cmp
fsubrl
dec
mov
jnp
std
lret
aaa
lret
mov
shrb
std
xchg
cmp
scas
and
pushl
jns
scas
jns
enter
push
sub
js
sub
ljmp
pop
leave
hlt
jecxz
adc
cli
addr16
lods
mov
mov
scas
mov
adc
pcmpeqw
jae
dec
jp
push
ds
jae
mov
jge
push
or
popa
std
and
inc
inc
jo
jmp
dec
sub
aad
mov
rclb
mov
push
cwtl
int3
jae
in
dec
pop
sti
lods
add
xor
xlat
xor
clc
in
insl
popa
movsb
jge
mov
mov
stos
push
cli
mov
sbb
test
in
test
cld
sbb
jae
xchg
jl
adc
out
test
xlat
push
sbb
pop
push
leave
int3
adc
pop
js
hlt
jmp
or
pop
lahf
xorb
jmp
in
aad
sarb
sub
add
xchg
ret
sub
shrl
or
sub
icebp
cld
aaa
push
mov
and
mov
fcmovu
repnz
cmp
inc
bound
test
lods
push
insl
mov
and
out
cld
mov
out
inc
out
lock
repz
inc
adc
data16
xchg
int
adc
mov
inc
sbb
dec
xlat
rcll
inc
or
movsb
pusha
lods
or
xchg
jp
cmp
sbb
das
jl
rorl
out
xor
pusha
xchg
popf
mov
hlt
dec
adc
adc
dec
pop
out
das
data16
arpl
fcmovne
ja
xor
add
jge
jns
pop
cltd
mov
add
xor
push
mov
sub
nop
add
cld
or
mov
and
in
adc
jmp
add
adc
or
xchg
and
dec
add
jns
adc
jl
jp
add
aaa
mov
inc
pop
pop
sbb
pop
pushf
jle
popf
aad
lock
fsubr
lods
xchg
addr16
test
outsb
inc
cmp
sbb
enter
lock
les
aas
pop
test
in
repnz
jns
cs
xlat
mov
pusha
mov
cmp
call
jp
loope
icebp
mov
adc
xchg
mov
xor
faddl
sarl
aad
fmuls
fwait
push
push
arpl
adcb
mov
lahf
or
nop
mov
jle
imul
int3
push
dec
icebp
clc
mov
gs
cmp
inc
fcomps
je
clc
in
xor
xchg
in
lret
call
xchg
jp
cltd
aam
fisubs
cmpsl
test
scas
adc
cmp
sbb
push
mov
mov
and
pop
jecxz
test
negb
pushf
divl
mov
jne
sub
out
xor
fwait
xchg
arpl
mov
sub
aad
or
mov
idivb
inc
jle
loop
mov
cs
rolb
sub
gs
jecxz
inc
sub
adc
mov
xlat
inc
or
mov
sub
mov
xchg
add
mov
pop
and
int3
shlb
mov
pushf
outsb
es
mov
and
ss
int
mov
or
cmpsb
idivb
jb
mov
and
mov
xchg
add
push
cmp
mov
fisubs
push
pop
out
sbb
push
or
aaa
int
or
aaa
es
mov
mov
pop
in
ret
push
pop
mov
cwtl
sbb
adcb
push
pop
hlt
jns
enter
out
sub
jmp
into
jge
stos
push
dec
adc
stos
mov
jno
cmp
ds
ds
out
pop
xor
out
lods
or
mov
mov
mov
inc
daa
cmp
sbb
dec
xchg
das
mov
popf
mov
jmp
dec
jle
ret
sbb
jmp
test
mov
das
inc
in
push
in
adc
fs
xor
mov
pushl
enter
mov
movsb
inc
sub
repz
ja
xchg
orb
push
rcll
and
daa
xchg
in
and
jnp
cmp
out
test
in
movsb
stos
jnp
fstl
into
pushf
mov
xchg
add
fwait
out
sahf
rclb
xchg
cmp
ret
or
inc
in
push
js
xchg
mov
test
jne
jne
jmp
ss
jne
cmc
aas
sub
popf
into
out
popa
or
xchg
out
mov
mov
inc
mov
sbb
mov
int
push
push
push
pop
data16
mov
inc
inc
jnp
enter
popa
cli
scas
jbe
jge
mov
ja
adc
sub
mov
jae
fnstcw
es
xchg
ret
jne
in
jbe
mov
lds
push
inc
repnz
flds
cmc
add
cltd
mov
and
daa
fstps
lret
push
cmpsb
adc
outsl
insb
arpl
pusha
mov
fs
xlat
dec
lods
enter
and
cmp
daa
pop
jp
adc
push
test
cmp
lock
scas
ds
fdivrl
dec
ds
sbb
cmpsl
and
pop
inc
inc
adc
sub
mov
test
mov
mov
mov
push
pop
xlat
or
push
ss
popf
inc
mov
lahf
push
popf
nop
add
cmp
xor
pop
xlat
and
jg
das
sub
or
das
adc
mov
jae
mov
dec
cmp
cmp
sub
and
xlat
insb
enter
mov
jle
mov
popa
sub
cltd
sub
jae
popa
mov
xchg
lahf
cli
sub
jb
loope
sti
sub
sahf
fs
lods
jb
mov
add
mov
jnp
popa
and
add
clc
mov
sbbb
scas
repnz
rolb
xchg
dec
sbb
arpl
fwait
xor
or
test
vmread
out
ljmp
ficompl
pop
xrelease
leave
mov
test
aaa
sbb
xchg
fists
dec
adc
mov
mov
imul
into
dec
xchg
cmp
sbb
fistpl
sub
sub
movsb
push
fcmovnu
cmp
or
pushf
out
addr16
jle
adc
ljmpw
adc
cmp
cmp
xchg
mov
jecxz
mov
xlat
mov
in
mov
scas
fdivrp
pop
and
mov
mov
push
inc
sbb
lret
test
pop
or
data16
inc
movsb
into
mov
dec
or
rolb
xchg
movsb
lcall
flds
into
cmp
and
jle
mov
pop
pop
aaa
inc
lock
and
adcl
fisubrs
jb,pt
int3
cmp
cld
flds
xlat
mov
movsl
stos
ja
aad
clc
xchg
mov
js
cmp
pop
mov
pop
sbb
mov
rorl
pop
cmpsb
mov
dec
mov
imul
int
sti
idivb
xchg
repnz
mov
lret
bound
sbb
sub
adc
mov
mov
stos
push
outsb
add
push
dec
stos
aam
mov
in
jg
aam
pushf
roll
mov
and
cmpsl
xchg
icebp
lret
mov
cltd
cmpsl
add
cwtl
imul
adc
push
leave
in
jecxz
ja
xchg
in
and
pop
popa
and
hlt
sub
stos
in
and
xchg
mov
push
sti
pop
and
add
lods
cmp
pop
mov
mov
test
ficoms
inc
sbb
jle
lret
mov
or
cmp
sbb
jmp
mov
out
and
lea
mov
adcl
int3
cs
jp
add
mov
mov
ret
push
mov
xchg
jae
mov
out
xchg
cmpsl
loope
push
shrb
xor
ja
lret
pop
lods
and
hlt
xor
repnz
mov
in
sbb
inc
fsts
pop
repnz
gs
sbb
test
xor
adc
arpl
jge
fstps
cli
jge
jno
push
jns
sarl
inc
adc
outsb
jecxz
add
fadd
adc
cmp
les
shlb
stc
je
dec
sub
outsb
fistpll
jnp
mov
jl
xchg
jbe
push
int
movsl
xor
sarb
adc
aam
je
inc
sub
in
xchg
xchg
movsb
xchg
add
dec
addr16
pop
mov
or
xor
out
movsl
sbb
xchg
mov
jmp
mov
mov
sbbb
les
sbb
imul
cs
jecxz
dec
pop
pop
push
sbb
cmp
arpl
cmp
push
out
adc
cmp
jecxz
insb
mov
and
filds
mov
fmuls
cmpsb
xor
pop
mov
pop
test
fwait
push
subl
outsl
or
add
dec
inc
pop
mov
cltd
test
repz
out
pop
lods
cltd
stc
push
fmuls
sbb
data16
sbb
in
or
ss
xchg
jns
cmp
adc
cli
xchg
stc
or
and
js
mov
jo
xor
jecxz
popa
mov
push
inc
cli
insb
xchg
out
or
repnz
mov
mov
pop
aad
mov
dec
js
adc
jo
lahf
cli
xor
sbb
adc
bound
jnp
cli
and
sbb
inc
xor
js
jecxz
test
adc
pop
jne
sub
andb
pop
notb
adc
sbb
adc
clc
das
repnz
and
jb
rol
ss
mov
dec
xchg
bnd
push
in
lea
aam
xor
nop
push
jo
addr16
cltd
push
jb
loop
aaa
cs
adc
add
ret
fs
pop
or
xchg
push
mov
dec
ss
pop
inc
rclb
lods
repz
xor
ja
cwtl
ret
pop
rcll
addb
loope
addr16
inc
aas
faddl
enter
pop
jl
adc
inc
mov
push
loopne
push
xor
xchg
xchg
mov
icebp
lcall
sbb
xchg
int3
dec
mov
mov
inc
mov
cltd
sub
push
pop
jne
jge
jne
sbb
cmc
add
xchg
xor
lcall
sbbb
xlat
pop
xchg
sub
mov
enter
insl
inc
or
flds
lret
out
dec
cmc
dec
jge
dec
pop
movl
push
mov
out
gs
repz
daa
xorb
cld
das
popa
stos
shll
arpl
jp
loop
pushf
enter
pop
xchg
movsl
dec
ret
or
mov
lds
adc
or
add
das
insl
movsb
test
mov
icebp
cmp
pop
inc
mov
lods
dec
push
out
les
out
mov
cmc
orb
inc
rorl
je
push
loopne
pop
scas
cmp
es
mov
mov
cwtl
fmull
and
shl
push
adc
xchg
sub
js
test
popa
adc
daa
arpl
js
adc
daa
rcl
rcrl
xor
push
frstor
xchg
inc
mov
lcall
cmc
loopne
fstl
jge
stos
test
sbb
mov
jle
fs
pop
pop
enter
pop
dec
rorb
pop
mov
jge
out
repnz
repnz
stc
popw
or
insl
adc
cmp
sbb
out
fmull
lcall
repz
and
jp
xchg
mov
lret
sub
cmpsb
push
int
ja
test
sub
add
lea
faddl
ja
mov
push
xlat
add
jb
insb
sub
enter
test
dec
dec
fidivs
push
xchg
imul
xor
mov
mov
lahf
hlt
inc
add
adc
scas
into
dec
pop
jge
sbb
sbb
lods
out
and
test
push
stos
cmp
clc
xchg
leave
imul
xor
lea
inc
les
icebp
rorb
sub
mov
scas
sbbl
or
dec
jle
cmp
lea
stos
mov
push
xchg
pop
ljmp
mov
jb
scas
pop
xchg
push
push
ljmp
aad
cmp
pop
cmp
and
pop
popf
dec
xchg
das
mov
outsl
xlat
out
sahf
imul
ret
les
xor
add
sub
add
fimull
lock
fiadds
push
xor
js
jbe
lahf
mov
xor
mov
test
inc
adc
mov
add
dec
cmp
out
arpl
popa
movsb
sbb
adc
sub
mov
int
sar
add
lds
mov
dec
pop
jns
adc
das
mov
test
cmp
rcrb
cmp
out
cli
add
lods
cltd
aad
stc
into
dec
fiaddl
jecxz
scas
fdivrs
xor
jo
add
jl
lahf
out
jmp
outsl
pop
pusha
sub
push
movsl
cmp
leave
aaa
popa
fucom
sub
cli
sub
jg
cwtl
loop
loopne
jl
pop
mov
outsb
mov
arpl
mov
jae
repz
aas
out
or
mov
pop
add
loop
push
scas
pop
xor
xchg
loopne
gs
or
sbb
shrl
js
xchg
dec
xlat
call
and
sarb
xor
loop
push
hlt
stc
out
push
jno
lret
arpl
mov
das
lahf
and
movsb
cwtl
out
fsubl
aam
cs
jge
into
cld
lcall
pop
popf
xor
mov
pop
lods
outsl
mov
sbb
xlat
sub
lods
loope
inc
ret
jle
lods
mov
icebp
adc
jmp
rorl
test
hlt
outsb
mov
inc
rep
sbb
fisubl
cmpsb
popa
test
mov
xlat
pushf
aaa
xor
movaps
lods
aas
mov
cmp
add
movsb
aas
mov
fdiv
xorb
shll
out
ja
fiadds
cmp
mov
lret
push
cmp
mov
sarl
iret
subl
loopne
hlt
jns
es
dec
xchg
sbb
loope
cli
fdivrs
aaa
mov
test
stos
shl
sahf
jb
loopne
lahf
aad
adc
ss
out
enter
je
inc
aad
aam
adc
xchg
xchg
jp
cmpsb
add
gs
inc
rolb
loop
test
dec
aaa
cmp
dec
xor
inc
push
mov
cmp
cmpsb
dec
jnp
push
shlb
in
lret
push
adc
and
mov
xlat
jmp
cld
loope
jne
int
jle
push
std
shlb
push
jmp
iret
jge
xor
mov
adc
push
das
sub
xchg
push
sub
mov
push
push
lods
ljmp
add
adc
and
xchg
cmpsb
ljmp
jg
sub
in
jp
test
pop
pop
jg
repnz
sbb
jle
fucomip
inc
rorl
test
sub
pusha
or
shl
sbb
mov
adc
sbb
mov
inc
test
mov
aam
out
into
nop
xlat
xchg
cld
sbb
int3
pop
cli
push
push
cmpsb
inc
mov
jbe
dec
or
mov
and
sub
jp
sbb
inc
lods
stc
ja
out
pop
mov
push
add
add
fidivrl
xchg
add
addb
xor
nop
enter
in
lods
mov
cmp
adc
xchg
adc
jmp
sbb
insl
scas
outsb
mov
lods
pop
or
sbb
cmp
and
pop
xor
xchg
sub
and
cwtl
std
push
dec
out
pop
xchg
fidivrs
or
add
movsb
loope
jbe
push
lock
jae
shlb
cmp
dec
sub
popa
lahf
xor
andl
sub
andb
mov
icebp
rorl
les
in
mov
push
in
adc
xchg
sub
gs
std
ja
ficomps
out
imulb
out
pop
mov
mov
cmp
in
pop
push
popaw
mov
insb
lret
xor
in
or
mov
cld
mov
inc
notl
mov
ljmp
sub
insl
stc
adc
in
lret
sub
cmp
into
cmpsl
cmc
adc
sbb
mov
cltd
rcll
pop
add
sbb
push
sbb
push
sub
les
push
fmul
aaa
cmpsl
test
rorb
pop
rep
xor
and
dec
cli
leave
sub
xlat
add
fbld
dec
iret
aaa
cmc
jbe
fnstsw
cmp
mov
xor
mov
cmc
push
and
cmp
cmp
ds
push
mov
cmpl
jnp
jle
insb
or
lret
in
movsb
cmpl
add
fs
dec
movsb
push
loop
lcall
push
rorl
js
pop
fistps
push
cmpsb
movsl
inc
xor
cmp
mov
mov
shrl
and
dec
mov
call
in
push
lods
or
mov
lods
pop
lret
xor
mov
es
sub
nop
lods
jo
mov
jne
ds
in
das
stos
andb
mov
push
cwtl
lret
sbb
ret
fstpl
xor
mov
inc
pop
pop
arpl
es
dec
add
out
jmp
jae
hlt
lret
adc
pop
inc
lcall
sbb
and
adc
aaa
sbb
das
inc
pop
call
addr16
ret
inc
jbe
xchg
pop
loope
hlt
hlt
shlb
jae
dec
orb
inc
inc
sbb
cwtl
in
push
push
pop
pop
sarl
mov
push
push
push
shll
pop
cmp
ja
mov
test
xchg
data16
ss
xor
in
dec
cmpsb
and
test
xor
int
cmp
pop
mov
in
xchg
jmp
mov
adc
ret
jmp
daa
frstor
mov
hlt
adc
xor
pop
add
aas
arpl
cwtl
mov
dec
in
inc
push
pop
imul
push
jb
mov
xchg
aas
fistpll
mov
sbb
dec
add
lds
mov
loopne
mov
dec
mov
scas
int3
lahf
xchg
inc
xchg
and
jg
rcrb
ret
dec
test
pop
imul
mov
mov
push
testl
mov
and
fidivs
add
mov
negb
jle
push
cltd
jecxz
jb
push
iret
movsl
fildll
cmc
ja
ja
sahf
cmp
inc
cld
popa
add
scas
js
add
les
aas
orb
mov
xchg
int
sub
mov
cmp
pop
sub
arpl
jmp
fs
pop
sub
push
add
stos
in
adc
roll
sbb
xor
mov
pop
mov
adcb
xchg
jle
fcmovu
mov
imul
mov
jae
and
stos
push
data16
js
adc
sar
adc
sub
add
mov
jmp
dec
push
dec
sbb
mov
lods
adc
push
dec
imul
sub
setp
fnstsw
push
addr16
mov
lcall
sbb
sbb
cmc
jns
divl
data16
jbe
lods
adc
bound
xchg
test
mov
cmp
and
fldl
xor
inc
insb
fdivrl
fwait
mov
dec
push
shll
ret
sub
pop
fidivs
loope
cli
mov
daa
or
pop
movsl
jl
clc
pop
int3
into
jmp
jg
dec
push
das
lods
gs
adc
shlb
fdivs
mov
lods
shrl
and
fucomip
and
ret
pop
movsb
sbb
mov
push
cmpsb
loopne
shrl
push
or
loop
pop
sarb
int
mov
test
mov
jbe
pop
xor
pop
inc
nop
sub
es
movsl
pop
ret
sarb
outsb
push
mov
sbb
sti
pop
cmpl
fdivs
iret
pop
mov
stc
mov
cmp
and
sbb
mov
cmp
or
xor
xor
or
push
outsb
idivb
xor
shll
mov
aaa
inc
pop
push
dec
jle
mov
je
inc
in
in
push
or
xor
push
jmp
cmc
xchg
popf
fwait
dec
cli
push
add
jno
scas
movsb
or
dec
fildll
jnp
mov
fidivl
inc
and
mov
fsubs
push
or
addr16
pusha
push
call
inc
daa
sbbb
out
iret
sahf
mov
faddl
js
xchg
cmp
xlat
in
ss
test
adc
mov
imulb
push
and
mov
xor
mov
xchg
jmp
repz
mov
mov
jo
insb
pusha
xchg
or
mov
mov
cli
add
sub
mov
dec
cli
sub
dec
rclb
adc
imul
lea
insl
rcrb
and
or
jge
and
arpl
int
cmc
dec
fists
out
ror
rorl
das
inc
mov
pop
mov
mov
push
adc
repnz
mov
lods
sbb
fdiv
mov
in
sub
push
rclb
outsl
push
adc
inc
addr16
dec
rclb
adc
or
loopne
push
int
ret
enter
inc
aam
leave
jnp,pt
outsb
push
je
jp
stos
add
add
mov
pop
std
lret
imul
adc
sahf
hlt
add
add
and
sub
mov
outsl
cwtl
movsb
add
and
xor
adc
fistpll
ja
mov
mov
pop
mov
loop
inc
clc
loope,pn
xchg
mov
js
jne
vpmuludq
fcoml
inc
push
push
sbb
hlt
stos
or
mov
pop
clc
iret
repz
jmp
mov
adc
jbe
insb
xchg
mov
inc
adc
nop
mov
mov
xlat
and
xchg
or
push
cmp
fwait
ret
dec
xor
and
or
jno
or
rorl
test
mov
mov
pusha
insl
es
push
lahf
cs
adc
out
fbstp
inc
das
dec
jecxz
cmp
jnp
add
mov
pop
ds
or
aam
mov
jo
jmp
bound
addl
sub
mov
or
int3
or
lret
push
add
mov
cmpsl
stos
xor
mov
add
jnp
xchg
es
or
test
pushf
mov
adc
push
dec
repz
jle
push
ret
pop
orl
pop
pop
lock
das
test
xor
movsl
fmull
fstp
int
int3
das
or
test
sub
push
in
cmpsl
push
pusha
hlt
inc
adc
aam
mov
test
repnz
mov
jne
inc
in
xchg
fisubl
mov
fcomps
in
mov
out
jae
cmpsb
pop
or
out
loop
aam
push
sbb
mov
mov
inc
cmp
daa
jecxz
sbb
test
push
mov
jnp
dec
movsl
andb
adc
xor
divps
adc
ss
stos
leave
decl
in
imull
jno
stos
inc
mov
js
gs
jnp
icebp
adc
xor
add
pop
shlb
je
or
lods
sbb
xchg
dec
mov
fwait
stc
add
loope
xor
push
push
lret
sub
les
sbb
shlb
test
mov
mov
cs
add
cwtl
loop
arpl
sbb
imul
adc
in
ret
insb
shrb
ret
mov
cs
popa
les
add
mov
mov
mov
xor
test
cld
fs
cwtl
loop
inc
shlb
test
vprotd
scas
popf
ss
shrb
out
sbb
pop
cwtl
aaa
pop
xchg
jecxz
sbbb
inc
dec
mov
dec
lahf
rcrb
pop
std
and
rcrl
add
push
hlt
dec
xlat
pop
fisubl
and
cmp
imul
mov
sub
or
lds
sub
cltd
or
loopne
mov
cmp
xchg
mov
ja
mov
std
cmp
add
jne
lock
scas
dec
loop
andb
enter
test
add
pop
into
imul
scas
push
jge
pop
pop
xchg
lods
sbb
mov
leave
mov
dec
in
xor
cmc
hlt
and
imul
dec
mov
lcall
stos
out
lods
aam
lds
sub
aaa
imulb
jmp
dec
or
cmc
sbb
movsl
arpl
xchg
test
mov
lock
mov
hlt
jae
out
pop
imul
lock
xchg
mov
aas
sbb
or
testl
jl
lret
push
adc
dec
mov
sub
push
aam
dec
jns
not
add
inc
xor
pop
pop
cmp
and
mov
xor
loop
jl
outsl
shrb
fidivrl
getsec
sub
fmuls
xchg
mov
std
or
add
lret
stc
std
movsb
insl
call
dec
outsl
mov
or
inc
addr16
fistps
sbb
sbb
jo
mov
shll
lret
cmp
int3
bound
sub
adc
shl
insb
pop
xor
add
cld
add
sub
and
mov
xchg
js
pusha
xorl
dec
rcrl
mov
mov
je
iret
cmpsb
add
cmpsl
rcrb
fcmovbe
ret
lock
pop
xchg
lods
xchg
xor
xchg
xchg
popa
out
push
jb
aam
push
ret
xor
outsb
lahf
and
pop
sbb
and
sbb
cmpsl
push
jp
push
ss
push
lock
ds
pop
dec
xor
js
lock
mov
mov
xchg
cmp
mov
mov
cmp
lods
inc
sahf
cmp
mov
cmc
sub
mov
cmp
popa
sub
push
fbld
out
cmpsl
in
cwtl
dec
or
add
stos
cwtl
enter
sbb
pop
push
stc
les
icebp
sahf
sub
sbb
xor
xor
imul
xchg
es
stos
js
scas
sti
inc
sbb
scas
adcl
jbe
inc
mov
or
lahf
idivl
sbb
nop
sub
xor
rorl
dec
and
mov
xchg
jl
sbb
imul
sbb
nop
ret
cltd
mov
and
das
xchg
nop
inc
push
or
xor
fcomps
scas
pop
sub
adc
and
or
xchg
pop
mov
lock
dec
repz
adc
lods
add
lds
cmpl
pushf
ret
inc
jg
add
notb
jns
cmp
inc
lret
jbe
sub
stos
loopne
int
fmull
out
pushf
ds
xor
test
add
cmp
popa
mov
scas
dec
lods
int
adc
mov
xchg
push
add
popl
jmp
or
jbe
lods
cmp
or
je
insl
xor
divl
mov
xor
aas
test
cwtl
in
lea
jmp
lods
lcall
je,pn
inc
mov
outsb
mov
sub
xlat
sbb
and
int3
popa
mov
cmpb
shl
pop
inc
adc
mov
int3
inc
mov
mov
jno
xor
adc
mov
cmp
ffree
xlat
loop
lcall
pop
inc
scas
push
dec
jae
dec
lret
cmc
aaa
fcomps
xor
les
mov
xchg
mov
pop
repz
mov
pop
pop
hlt
pop
adc
sbb
push
lea
mov
clc
pop
icebp
jne
push
out
std
push
sbb
push
addr16
imul
mov
out
xchg
sbbl
test
push
lea
fcmovu
pop
inc
test
sub
add
mov
dec
sbb
add
dec
sbbb
dec
cmp
push
inc
arpl
jp
fwait
push
insb
loop
aam
rdtsc
repz
mov
dec
xchg
hlt
mov
sub
ja
test
loope
das
pop
xor
adc
sti
repz
test
movsl
push
dec
ja
add
mov
mov
loop
xchg
mov
mov
mov
dec
loope
mov
mov
arpl
jo,pn
mov
sti
dec
ja
sahf
adc
jo
xchg
pop
pop
in
movsb
mov
pop
dec
cmp
xor
pop
sbb
adc
repz
or
enter
sbb
lods
stc
push
xor
mov
sub
mov
enter
jo
mov
mov
scas
dec
pop
jge
xor
adc
pop
sbb
adc
lods
int
push
add
outsb
lret
icebp
mov
mov
jno
rcl
fisubrl
roll
loope
insl
test
outsl
sub
and
in
movsb
push
stos
fistl
loopne
repnz
xchg
and
sub
sub
xlat
pop
fildl
out
pushf
nop
andb
imull
push
mov
and
lock
in
sbb
and
jle
movsl
movsb
dec
in
push
mov
push
fnsave
mov
adc
push
mov
xacquire
mov
adc
push
and
push
lods
std
negl
cmpsb
mov
and
adc
or
xor
pop
in
cmp
lds
les
aad
orl
mov
fstpl
fadds
jb
ss
shr
xchg
ror
cmp
jne
lods
sbb
inc
mov
mov
icebp
sbb
ljmp
out
adc
je
sbb
xor
imul
loopne
adc
jo
in
fcompl
jmp
pop
push
cmp
outsl
cld
mov
mov
cmpsb
out
outsl
sub
xchg
or
dec
push
and
test
loop
int
popa
movsb
cmp
outsb
fsubl
pop
mov
pop
jecxz
jns
add
mov
xchg
dec
loope
sub
or
sbb
je
fildl
mov
sub
mov
xor
ss
cltd
call
roll
add
out
inc
fcoml
push
mov
xchg
cmp
mov
jp
enter
cmp
je
repz
mov
ret
mov
inc
cmpb
insb
cmp
js
pop
inc
pop
adc
mov
and
test
cmp
mov
fwait
cmp
push
xchg
push
or
mov
cmp
inc
xchg
sbb
jae
sub
stos
loopne
dec
xor
xchg
std
jmp
xchg
push
out
js
inc
outsb
adc
mov
ror
bound
dec
mov
mov
in
xor
adc
xchg
cmp
adc
cs
gs
and
pop
sbb
cmp
sub
test
and
jnp
cwtl
mov
rcll
arpl
xchg
sarl
sbb
cmpxchg
aas
dec
push
add
mov
dec
sub
ljmp
and
dec
les
mov
lahf
xor
jno
sbb
insb
call
xchg
add
jnp
sub
mov
adc
cmp
movsb
mov
push
cmpsb
das
in
data16
pop
es
adc
xor
jmp
jge
pusha
sub
mov
push
movsb
jg
shrb
xchg
push
in
inc
jle
mov
fldt
jb
or
stc
jmp
inc
repz
lds
jae
xor
dec
cmp
jmp
sahf
dec
imul
mov
lcall
iret
in
pop
lcall
fmull
adc
add
sbb
sub
mov
cltd
addr16
mov
stos
repz
and
cld
cmpsl
aam
sbbl
lcall
mov
fdiv
dec
lea
hlt
xor
repz
stos
inc
je
jp
push
and
jnp
out
sub
pop
add
jnp
push
cltd
dec
subl
push
xchg
aas
outsl
cmp
lahf
outsb
clc
jae
shlb
hlt
enter
ret
test
add
mov
out
xchg
nop
xor
pop
jmp
push
popa
sub
or
movsb
cmp
test
inc
lret
les
rcll
xchg
push
cmp
or
repz
fimuls
or
adc
xor
in
xorb
imul
arpl
fstps
andb
in
cmc
mov
jae
mov
sub
icebp
jbe
cmp
pop
xchg
test
addr16
mov
ds
mov
xchg
mov
ljmp
aas
ret
and
sti
xor
lcall
lods
outsl
mov
pusha
jl
cmp
add
pusha
leave
sbb
add
jecxz
mov
lods
movsl
pop
addr16
and
fldl
mov
cmp
scas
inc
pop
out
int
xor
or
adc
pusha
imul
nop
sbb
out
xor
test
jo
xor
jge
xor
jo
ja
int3
mov
inc
and
bswap
or
push
inc
sub
cmc
cmp
dec
sahf
xor
push
jbe
fadd
jmp
add
sbbb
jmp
outsl
popf
mov
stos
jg
mov
mov
jo
mov
es
mov
lret
mov
cli
cld
cld
or
int
cmpsl
push
sar
dec
and
mov
ret
roll
xchg
cmp
xchg
push
pop
nop
into
push
adc
data16
mov
and
jae
je
ss
sti
sarb
mov
xlat
mov
xchg
mov
inc
cli
test
jns
icebp
ja
lods
fimuls
jmp
xchg
sbb
adc
jecxz
mov
inc
lcall
pop
and
cmp
inc
pop
xchg
jle
stc
xor
mov
mov
xor
lcall
aam
push
jmp
push
dec
cld
test
adc
xchg
add
test
and
lret
ds
insb
mov
addr16
mov
cld
pusha
mov
sub
push
cli
data16
stos
and
xchg
shrl
mov
or
inc
jmp
loopne
push
xchg
or
test
rcrl
fcomip
pop
cwtl
jg
fmull
es
xchg
adcl
leave
shll
mov
bound
pusha
loopne
jmp
fisubs
inc
or
inc
lahf
jnp
out
xchg
repz
jnp
int
add
jmp
in
arpl
inc
sub
pop
pop
or
in
or
in
adc
aam
dec
cmpsb
mov
inc
out
data16
aam
mov
outsb
decb
adc
adc
pop
push
ficompl
and
sbb
cwtl
test
pusha
in
aaa
push
pushf
xor
or
call
lods
dec
fs
mov
test
cmpsl
mov
sbb
add
xorl
std
lahf
imul
das
xchg
pop
cmp
ss
stos
mov
mov
ret
pop
and
add
mov
in
test
mov
mov
jno
rcrl
fmull
ljmp
lods
pop
xor
adc
mov
gs
mov
jl
imul
out
or
push
inc
push
daa
lret
lret
adc
dec
scas
mov
cmpsb
aam
xchg
dec
sahf
loopne
adc
or
neg
or
mov
fnsave
jl
stos
aas
enter
jne
jp
stc
or
mov
xchg
imul
dec
sarb
sti
jnp
je
dec
fsubrl
imul
fisubs
jbe
jae
sub
xor
mov
add
push
mov
insb
dec
jp
inc
sub
sub
fldenv
scas
add
shll
out
and
inc
cltd
xlat
jl
push
loopne
pop
jne
or
fucom
fstpl
jg
mov
outsl
cwtl
jmp
pop
enter
xor
adc
mov
and
or
fldt
pop
ja
push
or
fistl
fists
notb
pop
mov
jo
insl
and
movsb
iret
push
xchg
out
jecxz
push
loopne
or
mov
dec
inc
adc
scas
sub
jecxz
sub
mov
dec
mov
ja
jl
mov
mov
mov
imul
dec
fistps
jnp
pop
adc
repnz
xchg
dec
sti
hlt
cltd
sahf
cli
dec
addr16
pop
add
pop
pop
jmp
or
pop
xor
sti
js
sbb
jns
out
outsb
adc
cmp
fdivl
add
lcall
pop
fdiv
pop
cwtl
das
sub
fmul
sahf
enter
adc
in
mov
add
loop
xorb
gs
push
push
das
sbb
ds
xorb
push
mov
jno
out
xchg
outsl
sbb
push
imul
add
andl
bound
cmp
or
mov
add
inc
inc
cmp
shrl
out
mov
inc
and
lret
loope
aad
loope
push
push
rcrb
loop
in
in
inc
mov
repz
pop
add
cmp
jmp
or
push
sbb
dec
mov
nop
xor
mov
mov
pop
mov
iret
fldcw
lock
out
stos
lahf
pop
lods
pop
stos
xchg
stos
lcall
scas
and
dec
int3
inc
lahf
xchg
mov
icebp
push
in
fidivrs
clc
cmp
clc
push
shlb
and
and
lods
xchg
enter
pop
xchg
enter
mov
leave
push
and
inc
cmp
push
cmp
pushf
data16
sbb
xor
mov
xor
cld
mov
pop
ljmp
ljmp
cltd
and
rorb
ds
xor
cli
mov
sbb
icebp
and
pop
mov
dec
dec
fadds
mov
push
cmp
cltd
adc
iret
xor
outsb
fstps
and
jno
xchg
bound
jmp
xchg
arpl
push
imul
push
jmp
add
xor
mov
dec
aas
push
mov
jb
sbb
rorl
push
mov
repz
push
ss
test
xchg
rol
test
add
cld
xchg
dec
or
popa
daa
adcl
cmpsb
xor
clc
rolb
bound
dec
test
jns
xchg
mov
dec
lods
fisubrs
bound
or
addb
test
lods
lret
fsub
push
and
sub
dec
aas
aas
push
cmpb
inc
nop
out
dec
leave
pop
mov
lret
lods
rorb
jl
mov
sub
mov
add
and
or
pop
mov
test
mov
cwtl
mov
das
aaa
sbb
jg
fcomps
clc
mov
mov
adc
xor
mov
pop
mov
stos
lods
frstor
movsl
pusha
adc
cmpsl
pop
adc
movsb
repnz
sbb
cmp
lds
idiv
pop
jp
gs
mov
and
jle
jbe
jbe
cs
repnz
mov
clc
repnz
lret
rorl
inc
add
sbb
cld
idiv
clc
xor
xchg
dec
mov
divb
push
and
inc
vpcomub
jne
inc
jb
mov
mov
pusha
jb
xor
add
sti
adc
and
cmp
jno
adc
aam
push
mov
adc
test
inc
fisubrs
js
outsl
dec
outsl
sub
leave
shlb
add
push
pop
mov
dec
ret
fsubs
adc
arpl
stc
cmp
les
inc
fcoms
mov
adc
bound
rorl
mov
fwait
mov
sub
xor
mov
mov
lods
outsb
push
and
add
pop
leave
mov
das
mov
es
dec
and
aas
xor
inc
lea
push
sarl
aad
test
push
mov
sbb
lahf
pushf
fildl
xchg
or
rsm
loope
inc
xor
rclb
pop
lods
dec
inc
lret
shrl
jb
aas
fisttpl
adc
push
sbb
jno
jp
mov
fnstenv
pusha
dec
cmc
mov
negl
push
loop
loop
push
pop
mov
cld
int3
xchg
fs
pop
push
push
es
lds
xor
mov
js
sti
lods
pusha
mov
es
jb
sub
inc
ja
inc
push
mov
jmp
ret
imul
ret
shll
jle
lret
mov
sub
sbb
cmp
aam
jae
mov
mov
xor
or
scas
add
ja
pop
fcompl
mov
adc
jae
jge
fcompl
push
sahf
mov
jp
cmp
add
lea
out
roll
dec
decb
mov
scas
pop
in
or
mov
push
cwtl
push
jne
jnp
push
pop
jne
leave
adcb
or
fnstcw
xchg
pop
inc
push
sbb
icebp
mov
pop
adc
jge
push
xor
shlb
and
xchg
out
pop
and
xor
fsubrl
and
call
ret
adc
imul
mov
adc
add
push
xor
test
loop
gs
je
push
jb
jmp
sbb
pop
mov
mov
repnz
loop
js
test
in
rcrl
outsl
adc
sbb
jo
stc
mov
sarb
aam
mov
into
out
and
push
fsub
cmp
push
pop
in
mov
mov
lret
ja
sub
out
imul
and
cmp
push
hlt
shlb
orb
inc
int
test
xchg
rol
cwtl
ss
add
and
inc
jle
pop
rclb
inc
jns
sbb
inc
or
popf
mov
daa
adc
xor
adc
jb
addb
push
lods
xlat
dec
fiadds
push
sbb
adc
repnz
les
mov
xchg
mov
call
aad
outsl
inc
jnp
mov
cld
fiadds
sub
in
bnd
aas
shrl
adc
or
or
aam
in
lock
cs
and
lea
pop
xchg
jno
mov
push
cwtl
xchg
jmp
loop
or
or
rolb
enter
push
jns
pop
pop
subl
ficoml
subb
js
mov
sub
fdivr
xchg
mov
stos
xchg
dec
cmp
push
and
and
out
cmpsl
adc
jmp
fwait
push
pop
insl
jns
mov
adc
add
jl
mov
fsubl
int
in
repnz
lea
mov
pop
mov
jecxz,pt
mov
xor
cwtl
jo
std
arpl
inc
cmp
xor
jge
movsl
loopne
jecxz
dec
push
lods
jne
xchg
jnp
inc
movsb
push
inc
ja
mov
mov
mov
xlat
xchg
adc
inc
ljmp
in
cmp
dec
push
shrb
out
inc
xchg
sub
lret
cmp
daa
jnp
out
int
mov
test
daa
gs
test
sti
push
sbb
or
jns
js
outsb
xchg
pop
xchg
mov
cmp
repnz
or
in
int3
adc
sub
xchg
mov
or
xchg
or
adc
clc
addb
stos
popf
adc
sbb
push
test
or
aaa
cltd
push
jecxz
testl
pxor
or
movsb
test
pop
xor
jge
enter
mov
addl
fmuls
popa
pushf
stc
nop
lret
inc
notb
lahf
mov
push
adcl
lret
movsl
leave
mov
lret
clc
loope
adc
popa
mov
insl
jnp
rolb
mov
sti
cmp
push
jecxz
push
inc
push
adcb
cs
fldenv
lods
cmp
enter
negl
dec
repnz
mov
jns
stos
adc
mov
fmul
jae
jb
int
sbb
jle
adc
call
rcll
lds
adc
mov
movsb
cmp
mov
shll
or
mov
inc
lahf
or
das
or
stc
mov
mov
scas
jnp
divb
adc
mov
inc
mov
ret
cmpsl
clc
insl
dec
xor
orb
sbb
jmp
cwtl
dec
adc
sarb
js
push
stos
popf
leave
sbb
int3
xor
adc
inc
inc
lret
sbb
cltd
loope
push
scas
bound
mov
lahf
pop
imul
cwtl
sbb
popf
cltd
jmp
imul
sahf
cmp
mov
std
dec
hlt
int3
insb
lahf
mov
call
jo
and
xorb
jp
xchg
inc
fimuls
mov
repnz
or
clc
or
pop
xchg
mov
xor
bound
jae
or
je
mov
fisubrs
test
mov
enter
stos
lds
or
fucomip
gs
roll
pop
push
xor
clc
stc
sahf
adc
xor
add
push
xchg
or
je
nop
fsts
loope
les
mov
mov
cmp
cmpsl
ret
in
sub
xor
cld
sbb
stc
mov
adc
push
inc
jne
dec
lahf
add
stc
add
add
or
cmpsb
stos
cld
popf
mov
xor
inc
subps
stos
ret
mov
pop
lock
notb
jge
ljmp
mov
pop
cmp
outsl
push
fnstcw
jnp
stos
jl
jp
jmp
mov
mov
lock
push
ljmp
cld
mov
popf
adc
leave
mov
adc
imul
aas
sub
scas
sub
push
xchg
clc
test
sti
stos
sub
in
std
xchg
inc
in
icebp
cmp
in
cmpsl
out
mov
ss
sub
adc
mov
ret
xlat
pop
in
fidivl
out
mov
rcl
outsb
xchg
jne
enter
iret
mov
cld
xor
and
lock
sub
extrq
jns
xor
xchg
jg
mov
rcrl
or
jbe
or
out
jl
rep
jae
cmpsl
loopne
mov
in
sbb
popf
lcall
push
jg
imul
lret
setae
pop
adc
and
inc
outsl
jmp
xor
and
xor
in
pop
cmp
jp
arpl
scas
mov
xchg
fcomps
cltd
dec
pop
rcl
xor
and
pop
jecxz
aas
decl
cwtl
shll
or
notl
in
mov
aad
and
leave
sbb
imul
out
pop
jb
sahf
add
push
cmp
push
test
lahf
pop
jbe
push
cld
stc
ds
repnz
fnstenv
adc
sbb
mov
lock
xchg
xchg
js
jae
sbb
pop
and
dec
outsb
pusha
imul
xor
mov
aaa
xor
lret
cmp
out
insb
ret
dec
sub
mov
sbb
mov
stos
test
mov
loope
push
sub
ror
lret
xchg
mov
addb
add
pushf
fimuls
orb
stc
push
lret
xorl
push
push
loope
fisttps
cmp
les
loop
icebp
sub
iret
stos
lcall
movsb
push
fstps
stos
or
neg
push
addr16
pop
pop
cld
out
insl
mov
insl
mov
push
call
scas
xor
and
sbb
xchg
filds
adc
xchg
dec
add
add
outsb
test
xor
cmp
dec
fildll
addr16
into
stc
mov
xor
push
cltd
into
packsswb
scas
inc
jl
xchg
fnstsw
push
es
stos
pop
xor
nop
fmull
loopne
jo
je
ja
mov
pop
push
adc
mov
ror
jb
xor
xchg
sbb
inc
mov
fidivrl
mov
out
cmpsb
xchg
mov
arpl
and
dec
ret
mov
lcall
shr
jl
push
or
fistpl
subb
lret
inc
sarl
out
mov
pop
inc
xor
sahf
add
or
adc
lcall
dec
xchg
sti
mov
add
fs
sbb
aaa
lock
cmp
cs
mov
mov
sub
mov
or
pop
ds
dec
push
xlat
and
adc
ss
or
or
jmp
add
repnz
std
add
mov
mov
jno
xor
add
ret
adc
xchg
sbb
or
mov
rorb
push
xor
cwtl
ficoms
sub
push
int3
xchg
dec
add
xchg
sarl
shr
lcall
and
iret
mov
push
dec
js
jnp
sub
clc
cmp
into
mov
inc
sbb
inc
lods
in
and
inc
bound
inc
stos
mov
popa
icebp
push
mov
inc
pushf
sub
adc
or
orb
pop
sti
dec
inc
lods
push
push
loopne
sub
jno
ret
jge
ja
cli
lcall
out
arpl
lea
out
xlat
dec
adc
aaa
jbe
xchg
pop
push
xchg
sbb
dec
ds
lods
shrl
sti
mov
mov
xchg
lcall
mov
push
clc
mov
xor
mov
cmp
mov
insb
ret
jbe
int3
out
lods
stos
test
pop
dec
inc
dec
sbb
push
sbb
push
mov
shlb
cmp
xlat
push
stos
jae
jb
sbb
adc
cltd
pop
pop
outsb
pop
mov
fisttps
jge
or
aaa
lahf
pop
in
je
into
sbb
push
jnp
inc
mov
andl
cs
lock
scas
sub
ja
roll
sbb
iret
pop
jp
jp
push
cs
sub
inc
push
ja
inc
pop
hlt
cmp
ja
aaa
add
dec
out
insb
test
jno
mov
cmp
clc
sbb
sub
mov
xor
je
adc
lock
dec
in
lahf
pop
les
sti
mov
stos
cmp
scas
stc
mov
jne
jno
xchg
mov
add
or
popa
cmp
sub
les
sub
sub
movb
cmp
or
cli
inc
cmpsl
jnp
jns
jge,pn
hlt
fdivl
xorl
sbb
loopne
jl
xor
stos
iret
lahf
push
add
fidivrl
ds
mov
nop
dec
loope
out
fimuls
aam
adc
inc
out
sbb
inc
loope
sahf
fidivs
dec
lods
iret
jno
xor
cwtl
cmp
jbe
or
rcrb
mov
out
pushl
cwtl
dec
mov
cmp
adc
fs
out
hlt
push
ret
adc
bound
push
mov
dec
mov
add
push
repz
imul
cmp
mov
xor
and
shlb
or
jno
ret
das
fisubs
jle
mov
cmp
mov
outsl
xor
fldl
sub
push
ljmp
xor
fldl
xchg
pop
or
rol
popa
std
jp
adc
stc
xchg
jg
aas
loop
sbb
outsl
popa
into
adc
sub
outsl
rcll
add
xchg
decl
movsl
inc
out
das
jecxz
jo
lock
roll
fcomp
test
adc
mov
add
mov
xchg
xor
hlt
jecxz
mov
out
aad
sbb
test
add
push
dec
andb
test
js
in
notb
mov
add
sbb
movsb
lret
aaa
jmp
pmulhw
jbe
cld
mov
ljmp
test
inc
mov
pop
cmp
inc
out
push
test
sahf
stos
pop
and
jno
pop
sbb
mov
cwtl
out
fisubl
mov
roll
xchg
rolb
mov
cld
pop
or
lcall
ret
rcrl
pop
test
call
in
cmp
test
dec
lea
cmp
mov
sub
mov
loop
out
ljmp
push
into
add
push
jg
ret
jl
rolb
rcrb
call
inc
flds
jge
ja
sbb
aad
xorb
push
movsw
cmp
jae
cs
push
icebp
std
arpl
adc
push
jg
repz
in
pop
or
xchg
popa
scas
ja
lock
mov
inc
sbb
fcmovne
mov
mov
lock
jmp
push
test
outsl
in
js
pop
or
xor
shl
out
xor
data16
and
mov
xchg
xchg
int3
leave
iret
cmpsb
mov
sub
or
in
loopne
fwait
lods
sbbl
jp
imul
and
cs
lods
bound
inc
rorl
out
cltd
int3
add
cmp
mov
fwait
xor
sub
or
scas
pop
jnp
filds
lea
jbe
stc
push
imul
or
shrl
shrl
mov
les
je
lret
cmp
adc
jno
sub
add
into
ret
fcomip
into
inc
xlat
adc
aam
jnp
leave
ja
push
rcpps
addr16
aaa
in
ja
int
cmp
test
dec
adc
adc
stc
int
aas
inc
std
adc
jb
gs
insb
repz
jle
jg
roll
mov
fidivs
sti
testl
fistpl
xchg
push
xchg
xlat
push
fisubrs
insb
lret
xchg
pop
outsb
data16
stc
nop
in
and
dec
imul
aas
pop
adc
ret
imul
push
xchg
mov
xor
adc
pop
cmp
pop
sub
int3
pop
into
cltd
addr16
ss
cltd
fs
sahf
push
mov
push
xchg
push
xor
jl
sbb
fwait
shrl
out
out
test
addr16
clc
es
aas
cltd
mov
add
in
stc
push
iret
lahf
xchg
fs
jmp
fidivrs
and
ror
pop
dec
xor
dec
sub
loop,pt
xchg
fyl2xp1
push
sbb
pop
xchg
loopne
xchg
xchg
adc
imul
adc
mov
xlat
jo
inc
imul
mov
fwait
subb
dec
push
hlt
xorb
sbb
js
adc
jbe
or
popa
sub
lret
pusha
jmp
popa
hlt
and
in
add
js
mov
jns
ficompl
repnz
adc
test
adc
aam
aad
in
mov
jp
push
cmpsb
out
xor
push
jne
popf
add
out
dec
ljmp
jns
lock
or
fsts
sbb
inc
mov
xor
inc
dec
sub
in
jg
stos
mov
cmp
inc
insb
notb
cmpsb
or
xchg
inc
gs
stc
dec
and
pop
lcall
pop
inc
sbb
xor
dec
push
repnz
inc
insb
dec
lahf
movsb
dec
jp
push
test
pop
in
jbe
adc
aaa
out
lret
fucomp
flds
push
jno
pop
ret
xchg
or
pop
popa
in
adc
push
clc
fnstcw
mov
fdiv
ficoms
mov
jno
stos
lcall
lds
ljmp
in
fistpll
add
dec
pusha
clc
push
mov
cmp
inc
addr16
jne
sbb
jb
dec
add
lret
fmul
aas
shlb
push
xchg
fimuls
orl
shlb
jno
lahf
push
adc
pop
xor
in
pushf
inc
rorl
cmp
loope
or
and
test
pop
dec
pop
pop
jno
mov
fldl2t
mov
roll
iret
repz
clc
aas
adc
int3
mov
sbb
push
jb
mov
mov
lea
cld
xchg
jb
dec
pop
lret
jne
xchg
inc
push
adc
cmp
bound
mov
mov
bound
cmp
pop
dec
or
push
test
sub
dec
loop
mov
sub
jno
jg
and
rcr
scas
lahf
shr
adc
stos
mov
imul
push
ss
out
lock
arpl
aam
das
and
ret
inc
std
mov
adc
push
adc
and
jmp
pop
mov
xlat
fwait
inc
negl
lods
movsb
jnp
mov
das
sahf
or
aad
xchg
in
js
inc
jns
sbb
fisubrl
arpl
adc
cli
add
insb
outsl
push
or
rol
cmp
int3
push
push
lret
push
inc
push
xor
mov
mov
dec
dec
cmc
push
add
enter
xchg
adc
iret
pop
repz
pop
jo
jl
mov
pusha
push
xchg
dec
xchg
repz
cmp
mov
fwait
rorb
ret
mov
int
pop
xchg
xchg
lds
aam
sub
aas
sub
mov
push
push
add
push
idiv
ret
inc
pop
jl
inc
mov
xor
dec
push
push
lds
in
xchg
movsl
outsl
sub
jne
ljmp
mov
mov
popf
dec
leave
or
jae
insb
fs
jb
decb
and
lods
ficomps
movsl
push
jns
divb
push
test
pop
fwait
dec
stos
jge
jne
sbb
scas
sub
out
add
ss
xchg
xor
mov
pop
cmc
out
push
imul
add
adc
jg
scas
mov
push
dec
or
xorb
dec
cli
iret
or
sbb
or
pop
sbb
xchg
in
ret
push
push
push
pop
pusha
inc
and
stos
insb
xchg
sbb
in
test
pop
out
cmc
sbb
sbbb
ja
scas
call
scas
push
cltd
mov
jb
jno
dec
push
adc
pop
push
pop
shlb
jns
adcl
dec
popf
sub
cmp
fists
lock
outsb
fsts
jecxz
fcoms
and
mov
repz
repz
cmp
mov
cmp
insb
js
ret
sub
xchg
fsubrs
sbb
cmp
inc
dec
jbe
scas
jae
add
or
out
aam
fadds
ret
mov
daa
filds
add
int
les
sbb
notl
jmp
repnz
xchg
sarb
mov
fnstcw
ljmp
mov
mov
add
inc
inc
mov
or
subb
inc
pavgw
or
daa
mov
cmp
fistpll
adc
inc
xor
bound
dec
push
push
mov
xchg
sbb
outsb
push
xchg
daa
xor
gs
push
rol
cmc
test
jno
jns
jnp
mov
adc
aam
movsb
mov
cld
sbb
push
cmpsl
mov
ljmp
push
push
xor
add
and
incb
fidivl
mov
and
push
mov
mov
xchg
push
pop
jp
mov
cli
xchg
cld
sarb
stos
adc
faddl
je
and
mov
or
or
lock
mov
sub
sub
jmp
or
mov
das
daa
sub
loop
fs
mov
and
mov
mov
insb
xchg
mov
insb
push
mov
aaa
xchg
push
icebp
ficoms
adc
dec
xor
cmp
xchg
lods
cmp
add
sarb
and
cmp
add
js
fwait
cmpsb
dec
pop
imul
rorb
fprem1
fcomp
test
xor
fimull
sub
inc
xchg
sbb
cmp
mov
scas
popf
jno
jmp
jp
pop
xor
push
fs
mul
xchg
cmp
sbb
jle
push
call
enter
mov
outsb
mov
fucomp
push
cltd
add
inc
lcall
nop
loope
pop
mov
xor
or
lret
test
out
ja
mov
and
add
pop
gs
mov
mov
stc
xorb
sbbb
pop
push
jbe
ss
imul
jmp
enter
enter
mov
mov
mov
js
pop
inc
sbb
pusha
dec
pop
loope
movsl
icebp
xor
jecxz
and
jle
rcll
xchg
or
inc
popf
lods
pop
sbb
aas
sarb
add
dec
ds
mov
sbb
pop
lret
push
cmp
push
mov
fistpll
and
xchg
pop
rcll
pmullw
push
adc
inc
sbb
ret
ret
mov
ja
imul
ret
mov
aam
xchg
jbe
aas
cmp
mov
jns
lret
pop
daa
push
testl
mov
ljmp
cmp
nop
sub
mov
adc
sbb
pop
and
or
cmpb
loope
repnz
jns
sub
xlat
cli
jp
xchg
aas
aam
in
jns
add
mov
test
xor
sbb
push
ret
pop
push
loope
adc
and
or
push
push
aam
sbb
nop
jbe
add
nop
push
sbb
test
jne
xchg
and
xor
add
xchg
mov
je
xchg
jnp
sub
das
mov
mov
mov
gs
sti
stos
xchg
add
add
cmp
inc
inc
push
bound
stos
sti
mov
aas
fstl
fildl
mov
sub
int3
ret
sub
in
inc
push
xor
cli
sub
out
roll
pop
xor
pop
push
rcr
mulb
loope
adc
pop
add
add
and
subb
inc
dec
movsl
movsb
and
xchg
pop
ret
pminub
repz
bound
mov
popf
mov
arpl
inc
mov
pop
lret
mov
dec
add
mov
pop
adc
xor
ficomps
outsb
push
sub
mov
pop
into
lea
popa
push
push
mov
mov
push
mov
mov
test
repnz
andl
jle
orb
xchg
pushf
cwtl
cmp
and
arpl
in
test
dec
push
ljmp
cmpb
ficoml
mov
outsb
mov
dec
lret
loope
shll
mov
arpl
mov
scas
inc
push
push
loope
mov
arpl
enter
add
push
lods
lea
push
sub
cmp
data16
lock
mov
jle
mov
lret
pop
adc
inc
test
lret
mov
js
and
aad
push
lea
add
mov
cmp
mov
dec
ret
repz
out
lea
scas
and
imul
lret
cmc
bnd
push
sti
aaa
cmpsb
sub
fstpt
cmp
fisubrs
stos
iret
scas
jno
cmc
cmpsb
insl
jnp
mov
inc
cmpsb
jl
sbb
sub
cmp
xor
hlt
je
in
rclb
cli
xchg
les
mov
jmp
xchg
mov
roll
jb
mov
or
mov
or
xor
and
jecxz
inc
cwtl
add
jbe
sbb
pop
subl
addr16
mov
loop
adc
ror
push
dec
movsl
dec
xor
fcmovb
mov
jb
jae
clc
jle
xor
or
add
xchg
mov
cmp
idiv
dec
pop
mov
mov
add
adc
jo
jno
stc
and
push
and
mov
pop
xchg
loopne
pop
pop
dec
and
push
stos
out
push
sbb
pop
jnp
cmp
push
sbb
stos
pop
adc
shl
and
clc
adc
adc
lock
test
inc
dec
mov
std
inc
jg
mov
jl
and
adc
sbbb
or
cwtl
and
mov
dec
bswap
pop
addr16
mov
cmp
shl
lock
stos
notl
inc
stos
mov
xor
enter
add
dec
jbe
jecxz
sub
mov
pusha
sbb
loop
in
je
ret
xchg
jae
inc
and
stos
cltd
jecxz
push
adc
test
aad
pushf
push
aad
mov
add
sahf
ret
push
push
mov
push
add
repz
ret
or
shlb
inc
ds
jb
daa
dec
or
aaa
mov
loope
xchg
mov
out
add
scas
pop
popa
xor
sahf
ret
shlb
mov
jb
or
lods
pop
lock
data16
in
in
fimuls
sub
shrb
movsb
daa
push
dec
aas
test
inc
aas
test
fmull
sbb
ja
bound
iret
mov
cmp
pop
int
sub
push
or
jecxz
int3
loope
stc
testl
xor
jg
cmp
ret
fisubs
cmp
repnz
xchg
iret
sarl
push
cmp
adc
mov
mov
int
clc
nop
cmc
add
ficompl
or
ret
add
gs
cmp
pop
int3
and
mov
fisubl
nop
fidivrs
lahf
ret
add
divl
dec
push
into
push
pop
out
lods
push
popf
out
or
mov
orb
xchg
les
mov
pop
loope
pop
xor
push
pop
push
cwtl
int3
mov
fdivl
lds
inc
inc
dec
jb
les
shl
add
lret
test
sbb
pusha
out
push
adc
or
lret
lret
hlt
push
dec
fnsave
xor
jnp
call
pop
and
scas
aaa
aam
push
in
ja
fcompl
repz
out
dec
dec
sahf
cmp
push
mov
cmp
sub
inc
xchg
das
or
jnp
scas
add
pop
jno
imul
call
cli
lock
arpl
aad
stos
pop
sub
pop
mov
fwait
push
mov
int3
mov
mov
sarb
aas
ror
sar
pop
insb
adc
sbb
mov
jmp
xchg
jle
mov
arpl
ds
adc
cltd
enter
sbb
in
xchg
pop
adc
adc
test
repnz
or
jle
jmp
fucomip
hlt
das
fcmovbe
testb
data16
mov
mov
push
and
insl
popa
sarl
cmpb
leave
xor
data16
xor
jne
mov
mov
cwtl
inc
inc
out
mov
ja
jg
mov
lcall
cmp
decl
sbb
push
repnz
adc
sbb
xor
outsb
hlt
sub
mov
rcrl
xor
mov
sub
sahf
cltd
aas
sbb
lock
testb
jnp
imul
cmp
mov
push
mov
gs
adc
das
pop
adc
pop
inc
fldl
insb
add
sub
popf
mov
dec
daa
lahf
sbbb
inc
jge
xchg
lds
imul
xchg
sub
clc
sbb
pop
sbb
scas
dec
or
jmp
mov
push
insl
jg
mov
loop
jecxz
ss
cmp
mov
notl
aad
test
lahf
pop
push
sarb
adc
cmp
mov
or
cmp
out
sbb
sbb
out
loope
stc
ror
aas
adc
push
lret
in
shlb
jp
mov
loope
test
add
scas
cs
scas
cwtl
jle
out
movsb
push
sub
mov
mov
adc
and
data16
or
jno
gs
jmp
cmpsl
push
int3
shrb
inc
xlat
jnp
adc
enter
jne
add
sub
out
or
jmp
clc
scas
loopne
sbb
add
push
int
roll
mov
xor
enter
test
inc
sbb
sarl
pop
cs
sub
push
jb
xchg
jmp
xchg
aas
xchg
inc
cmpsb
hlt
sub
xchg
mov
pop
test
insl
loop
jnp
fcmovu
xchg
ljmp
cmc
mov
pop
lds
in
pop
mov
repz
push
popa
pop
ret
jge
gs
adc
inc
jbe,pn
and
lret
imul
mov
fisttpll
or
lahf
cmp
mov
cli
divb
cmp
and
lahf
inc
aas
shlb
xchg
pop
sub
je
stos
pop
mov
je
mov
cwtl
xchg
xchg
dec
mov
aas
rol
cltd
mov
addb
fildll
xor
xchg
push
icebp
daa
notb
movl
lods
sub
inc
enter
xchg
rol
or
mov
add
and
inc
movsl
outsb
and
enter
aad
ljmp
stc
pop
add
out
ss
xor
lds
sbb
fbld
repz
movsl
sbb
aas
jmp
pop
mov
bnd
cs
loopne
pop
jne
cmc
push
arpl
xor
mov
fwait
loope
jnp
xor
pop
clc
mov
ficoms
shlb
pop
push
stos
lods
insb
shr
fadds
gs
fdivp
into
lcall
xor
cmpsl
ss
or
add
sbb
sbb
ds
pop
cwtl
mov
cmp
sbb
adc
push
mov
pop
lret
push
sbbb
jmp
cmp
pop
das
lods
mov
imul
fnstsw
push
jl
sarb
jp
mov
and
sub
jmp
or
jbe
pop
adc
pop
lahf
or
xor
xor
sub
lods
imul
int
xchg
insl
xlat
mov
shlb
sbb
aad
or
faddl
lret
and
xchg
mov
aad
jne,pn
push
mov
fadds
repz
push
cmp
movsb
test
xchg
fldt
jo
inc
cld
mov
clc
or
mov
clc
into
je
fadd
dec
cli
stc
mov
pop
mov
test
test
movsl
dec
jl
xchg
stc
loope
add
or
sar
xchg
mov
or
mov
out
inc
roll
rcrb
push
push
mov
out
inc
sbbl
sub
cmp
repz
jbe
enter
xchg
dec
mov
fildl
xor
jb
hlt
xchg
ss
inc
mov
push
mov
lcall
xor
movsl
pop
shlb
and
mov
dec
mov
jecxz
pop
mov
push
push
imul
popf
dec
iret
sub
dec
incl
test
inc
add
sub
add
pop
pop
stos
xchg
sub
push
mov
xor
sub
movb
and
pop
sub
fs
and
and
lds
addb
mov
adc
hlt
xchg
mov
es
fisttpll
xorb
xchg
pusha
test
ss
clc
xchg
sbb
repz
or
and
dec
mov
push
jmp
cmc
mov
inc
rclb
call
dec
fsts
les
mov
jl
testb
insb
cmp
mov
add
mov
or
push
enter
in
push
add
adc
gs
icebp
xlat
pop
jnp
inc
pop
imul
add
clc
es
mov
sarl
mov
mov
mov
out
jge
lret
jae
je
jle
fucomi
adc
mov
mov
jecxz
decl
test
add
insb
xor
loop
mov
jl
dec
jp
dec
pop
dec
out
mov
add
dec
mov
repnz
mov
jno
sarl
mov
mov
test
push
push
cld
mov
adc
jmp
es
jmp
cwtl
xor
iret
cmpsl
dec
shlb
stos
mov
data16
sarb
shll
mov
mov
fucomip
sub
cmp
mov
mov
xor
mov
stc
sub
stos
dec
andb
rol
scas
fwait
aam
psubw
xchg
je
adc
cltd
mov
in
imul
mov
xchg
or
in
es
shlb
rorb
rorl
cs
ljmp
lods
imul
sub
adc
scas
dec
nop
pop
adc
movsl
out
push
repz
mov
cmc
push
dec
adc
loopne
loopne
cmp
aam
mov
sub
in
arpl
aas
jns
inc
inc
add
clc
jae
test
out
add
roll
and
aas
xor
repz
cmp
sbb
iret
pop
jle
xlat
push
jae
sub
sub
xchg
mov
sbb
test
mov
pop
jmp
xlat
lret
dec
sub
cmpsb
xor
jmp
je
jle
loopne
pop
and
adc
push
test
dec
push
inc
test
jg
pusha
roll
outsl
roll
jmp
aam
aaa
jl
mov
pusha
test
add
sarb
out
test
inc
lods
loope
push
fildll
jecxz
pop
call
fcompl
mov
filds
mov
in
lods
dec
dec
sti
lods
adc
testl
sbb
movsl
insl
xor
cmp
ret
mov
adc
add
push
cmp
sub
mov
xor
pop
ljmp
sub
xchg
imull
xchg
xor
xchg
repz
mov
pop
mov
pop
mov
cld
jae
jg
mov
pop
sahf
mov
push
jb
test
sub
mov
lcall
aam
jp
shl
dec
cmpsb
loopne
fisttps
dec
pop
aad
test
bound
jmp
in
mov
mov
in
pop
inc
mov
push
mov
sbb
or
jnp
sti
out
shrl
stc
pop
subl
daa
lret
and
frstor
cmpsl
push
test
cmp
int
dec
fisttps
inc
js
stc
xchg
mov
or
jns
or
aaa
jg
repnz
push
outsl
mov
in
fisubrl
out
aad
xor
fiaddl
lcall
or
lcall
jmp
int
dec
jecxz
lock
mov
dec
test
movsl
pop
es
pop
js
js
scas
fsubp
imul
or
xchg
loopne
cmc
mov
push
mov
dec
push
nop
xchg
push
test
scas
fidivrs
adc
int
jno
push
out
lret
pop
test
and
ss
jmp
jecxz
pop
jnp
mov
pushf
add
jbe
push
insl
push
notl
inc
lret
lret
xor
push
fnstsw
aas
fcoml
roll
xchg
sti
pop
cmp
inc
leave
incb
pop
xchg
dec
lods
jl
fmuls
xchg
adcb
xchg
fbld
seta
jmp
adc
sub
cltd
cmpsl
xchg
int3
out
inc
mov
lds
aaa
je
sbb
sbb
cmpsl
mov
movsb
push
jne
in
jg
xchg
dec
mov
dec
mov
ds
sbb
test
scas
adc
dec
pop
dec
test
mov
push
into
je
jg
xor
sbb
jns
push
sbb
test
dec
cmp
loopne
lret
int
jne
dec
popf
int
or
imul
add
xchg
pop
out
icebp
daa
jle
js,pn
xchg
fwait
test
and
repz
xchg
outsb
out
cs
xchg
popa
sbb
out
fs
xlat
pop
loope
dec
mov
jno
xchg
jmp
sahf
and
jmp
orb
gs
std
dec
mov
cs
outsb
pop
add
inc
insb
ja
sbb
jae
xor
xchg
rcrb
cmpsl
push
stos
inc
leave
hlt
or
dec
or
mov
or
out
add
inc
icebp
push
mov
cmpsl
mov
cld
sbb
sub
ret
fnstenv
stos
cs
jb
jb
add
mov
push
mov
bound
cltd
pop
outsl
dec
gs
mov
daa
aas
test
ret
mov
xchg
notl
mov
inc
es
addl
mov
adc
pop
in
mov
cmp
test
xchg
sub
push
sub
mov
xor
shll
test
push
and
cmp
enter
rorb
outsl
sbb
fadds
mov
add
loopne
jl
in
test
iret
or
repnz
pusha
sub
jb
mov
mov
adc
rol
jbe
std
mov
cmp
nop
jecxz
mov
adc
ja
ret
jb
jecxz,pn
inc
inc
or
hlt
imul
jnp
fwait
test
sets
adc
mov
push
cli
mov
jb
xchg
push
scas
xchg
rcll
test
aaa
xor
mov
jb
sti
test
jl
mov
push
icebp
ret
aad
inc
push
sbb
add
mov
aam
jecxz
dec
outsl
insl
lods
and
das
loope
xchg
sub
js
arpl
cld
call
aaa
mov
idivb
js
jmp
cmc
add
sub
sbb
fsubs
adc
pop
mov
rcr
mov
in
cmpsb
lods
adc
dec
push
outsl
test
push
shll
cwtl
rorb
push
xor
fcoml
call
clc
dec
mov
imul
fadds
dec
mov
and
mov
mov
fwait
sbb
mov
inc
popf
jmp
cmp
imul
dec
pop
or
jne
repz
out
jmp
cli
inc
and
cli
add
jb
pop
push
and
ja
in
sbb
loope
data16
fptan
xchg
imull
hlt
lret
pop
test
test
push
jp
call
push
cmp
lahf
lods
push
push
and
repnz
mov
jmp
jge
movsb
pop
fiaddl
outsb
push
fsubrs
fldcw
insl
aas
and
je
push
push
mov
ret
mov
mov
pop
lock
clc
rcl
xchg
cmp
cmp
cmp
inc
lds
pop
xchg
stos
or
pusha
add
add
out
std
cli
or
fs
out
inc
sub
fiadds
loop
pusha
fxch
pop
lock
cmp
dec
xor
cli
arpl
nop
mov
scas
xor
mov
lods
pop
mov
inc
or
call
cmp
mov
mov
mov
dec
cld
pushf
call
sbb
int
mov
adc
test
jae
shl
or
in
daa
or
lods
xchg
sbb
movsb
mov
cwtl
xchg
fs
scas
xor
jecxz
sar
inc
pop
cwtl
jge
pop
fisttpl
shrb
pop
jmp
mov
sti
pushf
out
bound
jle
fnstenv
lods
xchg
mov
add
push
xor
dec
ljmp
jmp
sbb
lods
out
xchg
lods
or
jnp
mov
fstpt
xchg
mov
add
add
xchg
insl
nop
sub
xor
xor
add
push
es
stos
jns
xchg
in
xlat
rep
cmp
add
or
or
mov
push
dec
sub
cld
xchg
sbb
insb
icebp
cmp
fdivrl
stos
adc
and
movsb
mov
clc
cmpsl
negl
lock
fnstcw
imulb
jle
and
adc
mov
add
sbb
xchg
cli
mov
or
sti
jo
sti
lcall
leave
mov
into
xor
ret
xor
jp
insb
es
push
fsts
mov
cmpsl
in
push
adc
mov
mov
lds
or
lret
sub
pop
aaa
sbbl
xlat
dec
add
call
mov
inc
mov
cmp
test
loope
aam
pusha
cwtl
int
push
fwait
pop
mov
xor
mov
push
fwait
sub
outsb
mov
sub
nop
dec
cs
sbb
xor
andb
sbb
out
dec
xchg
nop
or
popf
std
lods
mov
pop
pop
mov
scas
and
les
fldl
mov
aad
xor
mov
inc
cmp
jg
cmp
iret
fildl
add
xchg
mov
mov
dec
in
js
imul
aam
or
test
fimull
mov
mov
sti
rolb
sarb
testl
ret
jmp
dec
popa
fs
mov
xchg
test
aam
mov
inc
popl
jmp
mov
outsl
inc
mov
and
sti
mov
inc
sub
dec
mov
sbb
mov
popf
inc
xchg
or
push
cltd
xor
and
mov
fidivrl
or
faddl
dec
mov
rcrl
loop
decb
sahf
sahf
stc
xor
inc
and
in
cwtl
and
inc
sub
ja
iret
xchg
sbb
jge
mov
ja
insl
test
jmp
push
push
pop
jnp
insl
dec
hlt
jnp
pop
subl
adc
std
fcomps
dec
movsl
jbe
mov
rcrb
mov
add
xchg
gs
je
or
jge
push
sbb
dec
and
jmp
mov
test
pop
testb
sbb
sub
loop
dec
push
lret
in
and
fisubs
sub
rorl
or
lahf
rorl
pop
jns
lea
in
push
cmp
hlt
insl
push
pop
sub
sbb
ret
cmp
fdivs
xor
iret
neg
xchg
fdivrl
fbstp
sahf
pusha
fists
clc
sub
lds
jl
jp
xor
push
stos
xlat
add
inc
cwtl
xchg
xchg
push
dec
cld
ret
inc
xor
or
sbb
lods
ja
test
cmp
dec
shrb
notl
mov
xchg
pop
mov
movsl
lods
push
push
sbb
dec
js
sarl
pop
std
loope
jbe
shll
in
sub
or
pop
lods
xor
mov
mov
mov
cs
mov
mov
pop
in
fwait
jb
hlt
jns
rorl
out
push
je
jo
push
push
ret
mov
mov
and
dec
ja
data16
scas
jo
jo
push
cmpsl
iret
inc
push
adc
imul
movsl
push
repz
cmp
inc
pushl
adc
mov
sub
mov
cmc
and
cmp
into
scas
cltd
and
fstl
rcrl
dec
sbb
push
outsb
rcll
pop
fidivrs
aaa
mov
adc
mov
call
pop
xchg
lcall
xchg
cmp
stos
adcb
push
xchg
rcrl
int
repz
insb
loope
fsubs
fidivrs
jl
lods
das
das
loopne
mov
xchg
es
xchg
jnp
pop
syscall
faddl
pop
pop
lahf
bound
xchg
rolb
and
jno
jo
out
cmp
test
adc
imul
xor
lret
psubd
leave
add
enter
gs
and
inc
sbb
add
add
xor
mov
sbb
mov
push
adc
cmp
xchg
rcrl
fidivs
fadd
mov
in
mov
out
dec
cmp
cmp
fs
mov
movsl
stos
rcrb
pop
xor
mov
inc
xchg
dec
mov
sub
inc
add
or
fwait
xchg
fdivrs
aam
mov
cmp
cmp
cmc
out
add
dec
sbb
or
jne
push
and
sbb
rclb
inc
pop
rorl
pop
pop
sahf
or
push
sub
movb
shll
add
or
cmp
int
pop
pop
jne
aas
sbb
lods
pop
outsl
clc
or
xor
mov
sbb
xor
xchg
add
cmp
dec
sub
adc
inc
mov
das
negb
mov
lret
les
push
fldl
lcall
test
test
xchg
out
lret
push
out
loopne
xchg
pop
dec
dec
mov
arpl
orb
ja
sahf
scas
test
or
movsl
adc
cmp
xor
dec
xor
bound
loopne
aam
inc
cmp
les
inc
stos
mov
mov
sbb
hlt
cmp
and
sbbb
sbb
push
xor
cmp
aad
push
cmpsb
pop
rorb
cmp
cmp
test
cmp
xor
lret
and
imul
sbb
xor
cs
or
imul
push
xlat
es
pop
fiaddl
out
je
or
std
pop
stc
out
mov
push
ret
ja
push
jo
or
loope
addb
jle
push
cmp
push
lock
leave
push
dec
cmpsb
scas
add
in
and
cmp
and
inc
xor
push
or
jnp
movsl
sub
jecxz
push
cwtl
sbb
subb
mov
mov
jmp
jp
les
les
bound
mov
mov
mov
jb
mov
ss
ret
push
add
shlb
sbb
cltd
aaa
insb
xchg
std
dec
jecxz
sub
jo
out
xchg
jno
sbb
inc
xchg
popa
add
cmp
out
mov
add
pop
cmc
sbb
orl
inc
xor
scas
pusha
xchg
fcoml
pushf
adc
or
jge
movsl
jecxz
stc
adc
jo
out
loope
nop
pop
lds
fistpl
xor
rcr
arpl
adc
jae
cwtl
inc
in
inc
fsubrs
cs
jne
jae
sbb
fwait
pop
sbb
fldt
dec
push
inc
test
mov
or
xor
imul
and
jmp
push
cmp
loopne
sub
add
repz
outsl
mov
xchg
les
fbld
mov
xor
in
cmpsl
or
repz
pop
adcb
xlat
stc
jnp
insl
lret
cmp
stc
pop
mov
imul
pop
pop
mov
dec
rcll
mov
outsb
loope
loope
push
push
pop
arpl
mov
add
insl
dec
mov
lret
push
scas
stc
or
inc
mov
daa
mov
xchg
sbb
mov
adc
or
lcall
int
int
nop
dec
not
xchg
stos
mov
daa
lret
stos
pop
cmp
imul
imul
popf
add
add
push
nop
clc
or
jbe
xor
cmp
mov
aam
sahf
push
call
pop
mov
add
pop
jo
mov
xchg
in
add
adc
inc
dec
divb
inc
imul
mov
pop
sbb
jo
or
add
addb
mov
adc
push
incb
daa
imul
mov
enter
lahf
cwtl
push
cmp
out
inc
dec
lcall
outsb
xchg
ret
andb
ljmp
repnz
xchg
imul
icebp
pusha
div
test
and
lret
aad
pop
or
dec
add
push
add
xchg
gs
mov
pop
decb
xchg
int
xchg
cmp
or
lahf
sbb
stos
cmc
ljmp
xlat
inc
fbstp
into
jmp
daa
inc
not
xchg
inc
in
cmp
stos
or
leave
pop
and
dec
cmp
cmp
or
jecxz
xlat
adc
dec
lock
xchg
mov
push
scas
lea
jne
mov
and
adc
push
lret
out
insl
std
addr16
mov
sbb
dec
xchg
aas
shlb
repz
xchg
mov
mov
mov
and
lcall
scas
ds
mov
lds
aad
and
mov
adc
sarl
shlb
inc
js
mov
cltd
in
sub
mov
pop
pop
push
mov
call
and
xor
inc
in
jbe
clc
dec
inc
inc
movsb
icebp
xor
nop
add
lods
and
jno
int3
int
or
push
mov
cmc
sbb
cli
clc
or
sbb
les
jo
mov
and
inc
aaa
ds
jae
or
cltd
lods
aas
dec
add
repz
xlat
js
js
sbb
insb
pop
sahf
mov
fadd
int
ss
jae
fdiv
mov
push
mov
pop
fmuls
xchg
icebp
fs
add
insl
mov
shlb
inc
push
shrl
jbe
imul
dec
popaw
lods
dec
in
out
pop
hlt
dec
addl
jns
faddl
sbb
lock
lods
xor
cmp
out
shrl
add
sahf
jg
dec
add
dec
js
mov
adc
scas
aaa
cmp
scas
jecxz
cs
or
repnz
dec
xchg
cmp
adc
popf
dec
xchg
push
push
jle
jno
nop
mov
fnsave
push
out
pop
jle
push
jnp
cwtl
int
pop
xor
ss
xchg
xorb
andb
inc
jp
jmp
xchg
and
cmc
je
inc
imull
mov
jno
jne
cmpsb
or
clc
push
enter
jns
insb
pop
push
fists
int
jl
js
jns
inc
ud0
cltd
fdiv
add
mov
push
repz
fcmovnu
add
mov
pop
out
lcall
jnp
lahf
out
rcr
and
mov
pop
push
gs
push
push
rcll
sti
cmp
sbb
push
or
lods
cwtl
pop
aam
push
jno
mov
loopne
stos
sbb
sub
sbb
fists
scas
jno
inc
insb
inc
pop
push
loop
out
movsl
in
xchg
ds
mov
out
dec
add
add
movsb
pop
je
das
sub
sbb
enter
xorb
mov
fs
and
adc
mov
cmp
pop
xchg
adc
mov
add
jp
dec
inc
mov
lea
lock
pop
push
mov
and
dec
sub
sbb
gs
xchg
movsb
test
dec
cmc
push
jge
insb
pop
and
fwait
ret
jb
shll
or
dec
sub
test
adc
fiadds
dec
pop
jns
mov
pop
loopne
sets
testb
pop
cmp
and
xchg
sbb
xchg
scas
mov
rcr
add
in
sub
pushf
ss
aad
jns
test
out
shrb
sbb
mov
scas
push
scas
out
pop
dec
inc
and
popa
pop
jle
movb
xchg
shr
divb
cmpl
inc
int3
pop
mull
xchg
inc
xchg
ljmp
sahf
and
mov
inc
rorl
pop
insl
and
popl
pause
inc
mov
or
bound
inc
and
xor
loopne
hlt
out
mov
cmpsb
mov
push
pop
pop
mov
outsb
xor
fnstcw
aaa
mov
xor
or
pop
xor
test
jbe
imul
in
pop
inc
loope
enter
xchg
cld
imul
lock
mov
pop
pop
negl
fldenv
cld
leave
arpl
sub
pop
and
pop
xlat
sti
mov
leave
push
pop
daa
mov
inc
mov
pop
fcompl
fidivrl
cmp
mov
adc
and
lock
rol
sub
mov
fdivrs
xchg
push
ds
insl
pusha
or
cld
leave
xor
fnsave
test
aam
in
mov
adc
xor
or
xchg
lahf
gs
and
sbb
sub
xor
mov
and
gs
loop
push
fdiv
sbb
cmpsb
arpl
cld
pop
scas
nop
pop
das
rcl
mov
mov
inc
xchg
add
dec
push
in
lods
mov
inc
imul
out
inc
dec
mov
mov
aam
mov
mov
cmp
jecxz,pt
cli
adc
and
pop
stos
sub
or
adc
mov
push
cmpsb
jp
xor
loope
inc
mov
lods
notb
adc
arpl
pop
out
stc
add
cmp
lods
ret
call
int
cmpsl
cli
cmp
lea
push
mov
mov
dec
xchg
cmpsb
in
notb
sub
sbb
outsb
mov
xor
loop
sti
or
arpl
sar
adc
xor
sub
jmp
imul
inc
jge
add
cs
into
test
icebp
test
xor
cmp
mov
pop
push
sub
xor
xchg
imul
repz
sub
ja
or
push
adc
fisubs
adc
jae
jmp
adc
hlt
sub
clc
pop
fistl
hlt
inc
enter
enter
rcrl
jbe
add
push
imul
out
cwtl
xor
jg
test
into
or
cmp
das
jne
mov
xchg
xchg
xchg
test
adc
stc
cmp
iret
pop
and
xchg
or
pop
mov
cli
mov
jns
xor
pop
jle
mov
inc
dec
mov
stos
and
out
jbe
xor
cmc
subb
xchg
jo
mov
lret
cwtl
insl
xlat
mov
cltd
or
cld
fsubs
cmp
pop
push
xor
sbb
loop
mov
jb
faddl
push
mov
stos
outsl
test
lods
loop
cmp
xor
out
push
cmp
sub
addb
sbb
cmpsl
repz
mov
mov
push
jecxz
lret
aam
cmp
notb
cmp
sub
sub
pop
mov
add
scas
loope
sbb
xchg
daa
insb
adc
dec
in
cmpsl
or
add
jge
inc
test
outsl
xor
add
or
fcompl
pop
xor
lods
icebp
loop
je
pop
jns
xchg
mov
cmp
lods
mov
or
mov
mov
jns
fstps
sbb
imul
mov
pop
jp
xor
es
imul
sub
out
repnz
xlat
inc
sbb
push
rclb
je
mov
aaa
les
rcrl
xchg
sbb
xchg
lds
xchg
ss
nop
jge
add
outsb
outsl
add
mov
cmp
jge
jb
sbb
add
jno
lcall
test
sbb
arpl
sbb
or
sbb
jecxz
lods
out
jg
popf
mov
fsubs
loope
es
mov
mov
fidivrs
jg
mov
ljmp
push
pushf
mov
inc
cmpsb
and
jnp
mov
stos
ret
dec
insb
mov
mov
mov
shlb
add
jo
inc
aaa
inc
xlat
push
xor
push
and
js
push
mov
mov
pop
out
aas
push
test
push
mov
rorb
insl
lret
push
jp
xchg
outsb
icebp
dec
jns
cmp
sbb
xlat
fs
pop
cmp
lods
sub
and
mov
andb
dec
cmpl
pop
ret
mov
and
sbb
pop
or
pop
pop
lret
jnp
sbb
jnp
or
es
or
out
lock
or
push
ss
xchg
loopne
cwtl
cmp
das
mov
into
into
inc
pop
add
fisubl
imul
mov
hlt
dec
cld
js
out
pop
test
adc
mov
and
arpl
lods
sub
inc
stc
and
sub
outsb
xchg
mov
push
mov
mov
fprem1
repz
sub
inc
dec
std
ss
push
push
jno
push
mov
loop
xor
mov
ret
cmp
sti
inc
stos
adc
adc
movsb
push
push
dec
rcll
mov
fwait
cmp
inc
enter
fisubrs
shlb
jno
mov
xchg
movsl
pop
mov
in
lret
or
out
sub
pop
loope
js
andl
lock
inc
cmp
adc
rcrl
js
gs
cs
rcll
cmp
mov
mov
insb
add
cs
inc
outsb
xlat
add
es
push
mov
pop
cmp
lds
sub
insb
outsl
pop
outsl
out
loop
std
sbb
adc
dec
pop
pop
sub
xor
sbb
and
cli
mov
repz
mov
rcrl
mov
ret
repz
ljmp
stos
mov
xchg
inc
inc
push
call
xchg
cmpsl
mov
mov
rorl
ret
xlat
pop
aas
push
cmovne
inc
xor
lretw
mov
cmp
movsl
push
es
jae
scas
icebp
adc
out
and
sti
cmp
xchg
rcrb
in
ljmp
scas
xchg
pusha
dec
mov
xor
mov
mov
add
jmp
or
outsb
decb
shll
call
cltd
xchg
idivb
sub
ret
mov
fs
icebp
adc
xor
test
adc
fs
or
aas
pop
or
stos
inc
mov
xchg
lcall
and
loopne
mov
rorb
repz
sbb
mov
push
fwait
mov
jge
and
test
lods
pop
xor
push
imul
lods
into
dec
aam
adc
pop
xchg
push
in
sbb
je
inc
loop
mov
lahf
icebp
xchg
xor
mov
jnp
repnz
sub
mov
rcrl
add
sbb
fs
cmp
addr16
mov
iret
xlat
mov
mov
lahf
mov
gs
leave
test
cmc
shll
push
cmp
sbb
mov
mov
mov
lods
test
data16
test
cmp
pop
nop
pop
neg
pop
lret
dec
sti
sbb
outsl
cmpsb
mov
into
sbb
aad
jo
pop
inc
or
icebp
and
lahf
stos
push
adc
xchg
xchg
jno
and
scas
dec
roll
push
enter
lret
xchg
inc
jge
mov
sub
mov
call
pop
mov
iret
in
fs
sub
inc
dec
pop
cwtl
test
mov
fadds
pushf
and
icebp
sbb
pop
dec
out
nop
sub
loopne
and
push
mov
adc
jp
push
in
ds
pop
dec
xor
mov
js
jge
mov
cld
mov
jp
sbb
mov
arpl
and
fnstcw
and
movsb
lea
jo
gs
dec
mov
and
jo
mov
add
mov
ror
insb
shr
add
mov
sbb
jmp
lods
add
add
lods
add
jnp
mov
leave
and
inc
jge
sbb
loop
shrb
push
in
push
jae
cmp
mov
cmp
insl
lea
jmp
inc
mov
shlb
shlb
int
insl
gs
je
push
lods
movsb
xchg
and
stc
jl
outsb
mov
inc
outsb
jne
sbb
pop
push
add
ljmp
sub
in
orb
xor
cli
push
test
dec
mov
jge
xchg
sub
out
sbb
insl
or
push
or
and
lahf
cmc
test
leave
sbb
enter
imul
gs
or
add
insl
adc
je
or
and
lds
cld
mov
cli
sbb
add
int3
test
inc
test
fistl
or
mov
push
and
mov
sahf
jne
cli
xor
movsb
jne
sbb
movsb
push
mov
sub
ds
xor
loope
aam
jae
add
cmpsl
mov
mov
adc
adcb
mov
lcall
sub
decl
nop
gs
jge
andl
or
adc
push
dec
jno
scas
std
stos
mov
es
lea
lods
jno
out
or
dec
addb
nop
pop
add
pushf
ret
mov
lahf
or
aam
sahf
xchg
outsb
and
scas
push
mov
insl
outsb
jecxz
insb
je
pusha
and
or
negl
xchg
adc
sbb
jne
in
jg
dec
sbb
cwtl
leave
outsl
rcrl
xchg
add
mov
ljmp
and
lahf
adc
hlt
aad
xchg
jae
dec
push
push
jmp
ss
jne
jge
xor
je
gs
or
popl
sbb
mov
mov
xor
xchg
cmp
shll
sbb
repnz
fbstp
sub
xor
and
ret
jg
cmp
cmpsl
mov
arpl
sub
push
and
shll
sub
in
imul
sar
adc
dec
mov
sbb
pop
clc
mov
mov
add
or
jo
inc
mov
sbb
and
cltd
or
jns
mov
cmp
pusha
mov
mov
xchg
mov
fcmovb
jp
mov
mov
lea
cmp
inc
mov
imul
js
aad
xchg
inc
int3
ss
dec
pusha
std
outsl
mov
test
es
mov
adc
mov
outsl
loop
xchg
add
and
lcall
lcall
mov
jmp
inc
or
lret
negl
dec
push
cmp
rcl
cmp
mov
add
xchg
adc
mov
cmpsb
jle
adc
pop
or
stc
shlb
inc
mov
xor
jg
push
repz
adc
add
aad
jp
inc
cwtl
in
je
xchg
fwait
push
sarl
lret
fidivl
dec
jns
divl
aaa
xlat
or
sbb
lret
mov
into
push
cs
dec
push
xchg
adcl
xchg
orb
outsl
fdivs
push
sub
jno
stos
popa
xchg
loopne
cld
lea
loop
test
stc
inc
jne
cmp
cmp
lret
lods
mov
movsl
cltd
js
in
jae
mov
ja
lock
sbb
pop
popa
mov
xchg
inc
pop
stos
shll
negb
mov
or
pop
and
push
sub
fidivl
sbb
shll
scas
loope
jbe
xchg
dec
shlb
add
or
and
sbb
and
sub
stos
sbb
dec
cmc
push
pop
arpl
xchg
fwait
lods
pop
out
sub
mov
leave
out
pushf
pop
adc
dec
dec
ret
into
outsb
push
jge
xlat
pop
adc
jo
fcomps
mov
add
cli
adc
in
arpl
andb
outsb
push
cltd
jo
jne
popf
lcall
arpl
xchg
stos
ds
test
test
lock
sbb
fildl
sti
push
in
mov
adc
jns
mov
mov
adc
int
andb
lahf
jmp
jmp
adc
sarl
cmp
stc
in
cmp
je
adc
xchg
sar
mov
mov
gs
mov
or
pop
dec
jae
jae
adc
leave
xchg
or
rcrl
sub
pop
mov
adc
inc
fwait
xchg
mov
or
fwait
and
mov
call
xchg
in
xchg
push
fs
aam
jl
call
mov
vdivsd
shlb
pop
push
mov
stc
in
sub
mov
jmp
xchg
pushf
iret
add
dec
jo
negb
dec
mov
loope
pop
fmulp
lea
add
and
inc
lret
mov
cmp
cld
push
cld
mov
and
das
out
repz
push
mov
mov
or
xchg
xor
mov
dec
jmp
test
dec
aam
xor
lods
pop
les
mov
xchg
insl
stos
xchg
aaa
pop
arpl
xchg
sbb
or
add
outsl
push
stos
pop
test
into
jno
loope
mov
pop
daa
outsl
daa
notl
or
fstp
stos
inc
jno
test
sub
insl
pop
pusha
lock
test
aam
push
int3
stos
test
mov
cwtl
rorb
or
int3
loopne
andb
add
pop
and
or
lods
mov
jbe
loope
std
mov
out
sub
jle
or
js
sub
inc
adc
xchg
imul
xor
dec
xor
mov
jg
ja
rol
xor
sub
test
adc
cmp
les
addr16
push
cwtl
in
in
mov
iret
icebp
pop
outsl
push
roll
pop
lcall
in
les
and
shrl
mov
ss
or
inc
and
addr16
scas
mov
stos
mov
push
lcall
xchg
pop
pushw
out
neg
je
sub
jns
jbe
mov
jno
fimuls
and
sub
mov
repz
pop
add
and
cmpsb
test
pop
xchg
rcrb
sub
or
test
xchg
in
rolb
xor
int3
inc
jne
dec
push
push
mov
inc
js
jmp
loopne
dec
jb
loop
xchg
add
ja
lahf
mov
cld
fs
mov
and
sarb
push
mov
inc
in
inc
sbb
and
aaa
pop
or
xor
arpl
ficoml
dec
inc
xlat
dec
je
push
test
push
xor
in
das
mov
mov
fsubl
ds
fmull
sbb
push
stos
and
and
pop
ret
xchg
jnp
mov
arpl
aas
jmp
cs
mov
add
or
dec
sub
hlt
jb
pop
and
or
mov
in
subb
xchg
jecxz
sub
or
or
xchg
xor
and
jno
fbld
fdivr
add
sub
testl
insl
pop
test
ljmp
movsb
mov
movsb
pop
add
orl
push
lods
imul
cmp
xchg
orb
lret
sub
push
dec
mov
xchg
xor
adc
ds
adc
sbb
jnp
je
outsl
jne
mov
scas
xor
push
es
push
sub
push
push
lock
and
cmp
sbb
jnp
sahf
cmp
adc
xor
fs
xor
dec
data16
dec
inc
fsubrl
sub
loopne
inc
and
inc
iret
jle
dec
sbb
mov
pop
test
movsb
lock
int
pop
hlt
dec
lcall
push
dec
xor
mov
imul
sti
add
arpl
out
mov
adc
pop
add
and
push
adc
cmp
call
pop
enter
push
decb
or
cmp
out
shlb
and
dec
add
outsb
pop
insl
cmc
or
je
sbbb
out
pushf
mov
out
shll
call
pop
pop
inc
inc
mov
xor
add
mov
and
adc
jge
popf
int3
push
fsts
adc
add
mov
scas
sbb
mov
lds
mov
cmc
pusha
lods
loopne
push
bound
sbb
loope
ret
xchg
mov
das
add
xchg
ret
out
dec
mov
and
subb
loopne
pushf
fisubrl
test
ljmp
xchg
cld
fadds
test
cmp
and
sarb
add
sub
aaa
popa
mov
fcoms
dec
xor
hlt
adc
shrl
xchg
cmp
xchg
ds
push
js
ljmp
addr16
inc
insb
push
std
cli
xor
ljmp
mov
sub
cmc
pop
int
das
fdivrs
push
in
rclb
loop
jbe
rorb
pop
outsl
test
adc
fistpl
add
sar
mov
and
adcb
idivb
into
sbb
fnstcw
mov
jmp
loopne
adc
ss
or
in
int3
cmpsl
dec
test
mov
cmp
into
dec
cld
into
mov
out
sbb
jne
cmp
cld
fisubs
in
cmp
pop
and
xor
in
sub
aad
or
call
sub
and
les
ss
loop
cmpsb
or
sub
mov
mov
jne
xor
mov
pop
mov
int
inc
sub
adc
jne
cmp
cmp
push
sahf
jno
jecxz
test
fstpt
mov
lahf
xchg
adc
in
enter
mull
jecxz
jnp
fcoml
mov
xor
and
mov
sub
xor
dec
bound
xor
call
aam
das
mov
pop
nop
adc
test
push
data16
or
stos
dec
push
or
loope
mov
xor
and
jbe
stos
loope
stos
mov
imul
sub
add
mov
push
pop
push
shlb
push
imul
stos
divb
lcall
xchg
adcl
shr
xchg
stc
test
xchg
mov
cld
jno
sub
ficomps
dec
int
xchg
cmc
mov
push
mov
or
mov
repnz
es
loopne
insb
sbb
out
xchg
fimuls
adc
xchg
mov
inc
sbbl
cs
inc
xor
sub
mov
adc
outsb
movsb
dec
and
mov
mov
sub
popa
movsl
sbb
leave
in
int3
jno
mov
in
pop
cmp
cltd
ja
push
sahf
xchg
adc
adc
and
js
sti
cmp
xchg
jge
icebp
jp
mov
fistl
xor
enter
jno
mull
cmc
push
or
push
flds
xor
je
dec
je
mov
cmp
push
lahf
bound
outsl
or
aad
sub
mov
inc
cmp
or
clc
mov
xor
loop
sub
movaps
mov
imul
pop
lods
sub
inc
sbb
push
enter
iret
dec
dec
add
push
mov
popf
dec
adc
dec
ss
lcall
mov
fisttpll
dec
xor
cmp
pop
push
loopne
sbb
into
out
and
sub
data16
cmc
cmpb
mov
mov
aas
out
adc
lods
mov
insl
iret
ja
pushl
inc
jmp
iret
push
jmp
das
sbb
aad
push
mov
ljmp
inc
in
add
jg
and
jg
xor
jnp
stc
push
and
adcb
xchg
repz
out
insb
popa
jge
outsl
dec
ja
ja
and
loop
and
notb
pop
rol
in
out
dec
jo
dec
push
bnd
or
fs
out
mov
push
xor
and
pop
sub
jle
and
movsl
dec
jbe
out
pop
je
sbb
pop
jno
test
xor
cmp
sub
in
mov
sti
insb
outsb
bound
mov
xor
sub
push
fs
in
jp
push
fildl
pop
cltd
scas
inc
iret
ja
fiaddl
jle
arpl
frstor
pop
inc
test
loope
jl
dec
outsl
and
testl
pop
jo
adc
scas
jno
cmpsb
push
xchg
push
mov
mov
jnp
cltd
push
in
mov
movsb
mov
pop
jmp
mov
cmp
push
push
mov
roll
inc
aas
imull
popf
imul
cmpsb
popa
shlb
sbb
xchg
and
shll
lret
js
or
clc
in
or
test
pop
popa
push
movsl
fmuls
repnz
mov
cmpsb
repz
aam
mov
mov
cmpsb
mov
push
dec
and
and
std
in
les
filds
sbb
notb
push
pop
shll
jmp
mov
jns
cli
and
push
cmp
shlb
sub
dec
icebp
push
loopne
jge
mov
ss
movsl
mov
test
push
inc
pop
int
movsl
xchg
fnsave
sbb
mov
cmp
std
adc
in
xor
cltd
in
push
mov
fcoms
es
sbb
push
dec
sbb
cmpb
xor
enter
stc
cmp
jno
cmc
pop
test
xchg
stc
jle
sbb
or
sbb
aam
notl
xchg
out
je
out
dec
cmpsb
fidivs
mov
mov
in
je
add
call
sbb
mov
mov
push
ficoms
and
jo
fs
loopne
cmp
cs
sarb
fwait
sti
pop
in
push
and
and
shll
insl
test
mov
ret
cltd
lds
mov
jmp
shll
enter
jecxz
imul
into
imul
jp
push
lds
pusha
into
push
inc
pushf
cmp
or
push
sub
adc
dec
out
into
xchg
ret
inc
orb
out
in
jo
or
in
data16
outsl
mov
mov
fcomps
jecxz
or
jbe
pop
jae
cmpsb
scas
mov
je
cld
jp
xchg
gs
pushf
sub
fwait
mov
cwtl
sub
add
sbb
stc
push
cld
mov
icebp
lds
push
mov
repnz
xchg
or
sbb
or
sub
add
es
cmp
mov
sub
sti
cmp
sub
lea
adc
pop
mov
mov
pop
mov
jne
clc
iret
mov
push
cmp
sarl
jge
push
aam
push
push
cmp
cwtl
lea
push
mov
sahf
enter
cmp
scas
test
mov
dec
out
insb
call
dec
fwait
hlt
dec
inc
pusha
lods
lahf
jne
cmc
pop
pop
inc
jg
aas
mov
addr16
inc
ja
setg
ss
xchg
loope
adc
sbb
dec
test
xor
adc
push
sbb
popa
sub
fdivr
pop
mov
sarl
mov
fwait
or
gs
sub
movsl
jmp
imulb
in
push
iret
lahf
mov
out
orb
dec
shrl
cltd
adc
ds
mov
aad
or
jb
shll
sbb
dec
test
pop
and
ja
les
leave
sbb
xchg
dec
push
sub
sub
nop
dec
test
sti
aad
xchg
pop
mov
cwtl
rorb
or
aam
mov
icebp
jmp
mov
out
fwait
inc
sahf
nop
dec
inc
in
popf
lods
jmp
mov
shlb
lea
imul
enter
jae
xor
inc
daa
jo
decb
mov
data16
into
inc
cwtl
movl
std
sbb
xchg
dec
and
sub
sbb
sbb
pushf
fs
jno
jg
icebp
xor
xchg
andl
ss
scas
push
adc
loopne
outsb
mov
mov
loop
mov
inc
add
pop
jge
shlb
jp
cmp
fsub
notl
cwtl
fisubrs
into
pop
mov
aas
nop
fwait
cmp
lock
addr16
cmc
jnp,pt
mov
aad
sub
cli
mov
mov
adc
orl
sbb
sub
sbb
dec
fsubl
xlat
and
xchg
jnp
int3
jmp
ds
inc
push
mov
pop
notb
sti
inc
mov
adc
repz
or
imul
inc
fucom
out
adc
xchg
inc
mov
jns
mov
in
idiv
movl
das
addr16
or
fsubrl
add
mov
bound
aaa
pop
jge
cvtdq2ps
aas
stos
add
xchg
inc
pusha
xor
push
mov
loopne
jl
push
lods
lods
enter
jl
push
add
mov
ss
mov
hlt
xchg
mov
push
pop
add
dec
int3
fisubrs
cltd
lods
nopl
ror
iret
xchg
or
lds
xchg
jmp
jnp
jno
or
decl
jne
jne
hlt
push
gs
inc
jb
cmc
mov
add
cli
test
in
insb
sbbb
mov
int3
add
test
dec
push
inc
lods
inc
shlb
jb
cmpb
aam
add
mov
aam
movsl
lahf
mov
xchg
and
xchg
std
int3
jne
aaa
shrb
cmp
out
mov
nop
in
pop
push
jge
nop
jne
sub
ja
das
mov
dec
fbstp
pop
aam
jl
mov
mov
ret
pop
add
mov
pop
mov
sbb
push
sub
or
ret
lods
push
roll
jo
mov
stos
and
out
fcompl
mov
scas
inc
daa
div
loopne
test
mov
push
rcll
adc
out
add
pop
or
push
cmp
adc
shll
lret
cmp
xor
xchg
bound
into
lret
jne
add
cmp
pop
rolb
lods
xchg
sahf
scas
xchg
jnp
into
push
sbb
fmulp
int
mov
push
mov
jge
mov
mov
push
fdivr
sbb
and
lcall
in
and
sub
pop
add
dec
mov
xchg
dec
icebp
jl
mov
fyl2x
data16
mov
adc
pop
iret
jbe
jbe
and
subl
insl
test
outsb
mov
xchg
push
xor
cmp
xlat
addr16
inc
in
fsts
ljmp
mov
test
fistl
je
mov
and
stc
pop
in
vmsave
fcmovb
std
out
inc
clc
xchg
xor
add
lods
pop
pop
jp
icebp
fists
in
aas
popa
xchg
xchg
sub
sub
fsubl
out
dec
jnp
hlt
and
bound
pusha
popf
loop
cli
xor
add
mov
repnz
test
mov
or
das
fbstp
push
inc
dec
dec
pop
inc
imul
jno
dec
stc
push
gs
sahf
ja
jle
imul
or
lcall
insl
int3
test
jns
push
xor
scas
fiaddl
jae
idiv
pop
cmc
movsl
mov
mov
loop
out
sbb
lea
roll
inc
rolb
push
pop
mov
inc
cmp
push
adc
push
xlat
mov
orb
push
repnz
bound
lcall
cmp
mov
loope
rolb
nop
sbb
int
mov
icebp
jb
sahf
cmp
or
mov
jle
cmpsb
andl
int
loope
xor
lds
pop
hlt
xor
hlt
fs
xchg
and
jl
dec
cmp
xchg
mov
in
addr16
push
shll
cmc
sub
add
lahf
xor
inc
or
or
jl
fidivl
jae
push
sbb
fstl
adc
push
popa
mov
cmp
bound
xor
cld
sub
fcoml
sub
pop
repnz
testb
fildl
movsl
movsb
sbb
xchg
inc
imul
mov
push
inc
add
mov
fs
xor
mov
sub
lcall
sub
sbb
fiadds
cmp
lahf
dec
cmp
sbb
pop
lcall
cmp
cmpsl
cli
inc
ffreep
pop
sub
cmp
into
sahf
out
lea
stos
adc
cmc
mov
sub
mov
mov
push
lds
cltd
mov
sti
sahf
popa
mov
subb
mov
adc
cmp
cmp
lret
push
or
xchg
and
arpl
inc
stos
cmp
adc
cmpsl
imul
sbb
out
ja
mov
mov
inc
movsb
outsb
or
xchg
cmpsb
push
cld
out
sub
xor
xchg
gs
repz
pop
rcrb
cmpsl
arpl
adc
add
mov
imulb
or
scas
lods
add
frstor
test
inc
popf
mov
and
lcall
or
into
hlt
mov
xchg
mov
inc
rcll
lcall
xor
cmp
and
hlt
mov
mov
sbb
and
fwait
out
xor
mov
push
inc
lret
push
inc
pop
sub
fisubrl
fnsave
dec
dec
mov
push
lods
ret
jo
adcb
gs
xor
pop
int
and
cmp
xor
xor
push
loopne
jge
sbb
fsubrs
and
fistpll
inc
les
aam
push
pop
jbe
jno
arpl
jb
ret
sub
hlt
data16
fs
xor
inc
in
fmuls
push
push
imul
sar
jmp
fwait
sub
jb
push
cmp
inc
lret
pusha
rcrb
sti
adc
add
aas
push
lods
test
jns
jge
jae
xor
inc
sub
das
sarl
cmpb
insl
aam
pop
or
jbe
add
stos
and
and
sub
lcall
das
ret
loope
inc
cmp
xchg
dec
rorb
jae
inc
and
imul
jp
gs
and
jmp
or
or
int3
inc
pop
les
or
sbb
iret
push
mov
fistps
inc
repz
jbe
or
sub
cmpsb
mov
lds
data16
iret
cs
aam
pop
dec
inc
mov
jg
adc
mov
mov
sub
jb
inc
jle
in
sti
dec
mov
fidivrl
inc
pop
test
add
add
mulb
cmp
out
mov
addb
dec
mov
aad
pop
in
mov
xor
pop
inc
mov
sbb
pop
jmp
jge
xor
negb
cmp
xchg
jbe
mov
lcall
dec
repnz
and
movl
loopne
push
jo
stos
mov
cli
cs
leave
mov
jmp
lock
icebp
in
test
rcrl
lods
push
mov
inc
imul
push
xchg
mov
jle
xor
xor
push
out
movsb
lods
xor
ljmp
ljmp
sbb
and
outsl
push
nop
das
and
neg
into
sbb
out
or
pop
xchg
fwait
mov
leave
push
mov
ljmp
mov
mov
fcoms
sbb
out
jo
imul
jae
ljmp
std
mov
cmp
cmp
imul
pop
les
dec
mov
and
dec
imul
push
cmp
fs
cmp
jo
pop
arpl
out
lea
jne
loopne
ss
jnp
pop
nop
cs
das
aas
add
stos
loope
movsb
mov
sub
ja
loop
daa
loope
ret
push
sbb
push
and
aam
popa
jae
lcall
mov
into
enter
mov
adc
lret
sti
push
adc
push
into
cmp
inc
xchg
sub
shlb
sbb
mov
jae
sub
dec
adc
loope
mov
mov
inc
cld
int3
mov
cmpb
insl
add
loope
out
jns
push
mov
and
jecxz
cmp
inc
or
test
dec
int3
repnz
movsl
rolb
and
test
jl
test
popf
push
stc
dec
lods
add
pushl
popf
aad
into
mov
inc
or
mov
and
cmc
cld
addl
movsl
xchg
jl
pop
sub
sub
jno
mov
inc
test
cli
mov
sar
mov
mov
ds
xorl
mov
mov
imul
pop
cs
data16
lret
ret
mov
outsl
out
or
push
insl
popa
in
sub
cwtl
jno
push
xchg
dec
repnz
fwait
push
lods
mov
mov
cmp
mov
das
pop
inc
ja
mov
jmp
lcall
mov
mov
sbb
push
test
xor
stc
xorb
mov
inc
adc
mov
dec
mov
mov
enter
fisttps
pop
icebp
inc
cwtl
mov
mov
pop
fadds
or
adc
add
psubusb
aas
mov
fidivrl
aaa
icebp
xchg
cmp
es
out
in
cld
fmuls
jnp
icebp
ja
stc
mov
fadds
dec
or
insl
sub
cmc
lods
jle
negl
out
movsb
dec
push
sub
les
and
push
std
js
mov
test
gs
call
stc
sbb
fdivl
or
stos
lret
xchg
insb
or
pop
xor
out
cli
subb
loop
aaa
sub
stc
jbe
mov
inc
out
and
movb
xchg
mov
mov
stos
in
sahf
aaa
arpl
pop
push
cmp
or
testb
sbb
jmp
dec
fwait
dec
arpl
mov
push
sub
jmp
nop
push
stc
mov
xchg
push
jb
or
add
pop
and
xchg
and
idivb
jnp
ss
pop
pop
xor
arpl
jo
sbb
cmp
mov
gs
addr16
cmp
jb
dec
scas
mov
jo
orb
inc
push
inc
xchg
sahf
shll
aam
mulb
scas
adc
cmp
jne
push
pop
mov
outsl
ficomps
scas
enter
jmp
insl
mov
movsb
fsts
and
shl
ds
movsl
scas
outsb
leave
arpl
adc
dec
add
cmpl
dec
adc
test
outsb
or
pop
adc
clc
fnstcw
or
lret
lcall
xchg
lods
imul
inc
push
cmc
lcall
notb
movl
popl
pop
pop
cld
pusha
push
push
leave
lds
lea
jno
jg
pop
movsl
aad
cmp
mov
ds
rol
add
and
filds
jbe
cli
xor
cld
int
fsubrp
leave
push
ja
sbb
sti
test
dec
dec
and
or
xchg
jge
insl
lods
mov
cmpsl
stos
and
inc
daa
cmpsl
std
je
push
stos
loop
cmc
xchg
in
stos
dec
sub
push
jns
mov
call
stos
xchg
sub
push
and
push
sbb
cld
push
mov
data16
testl
loop
mov
rolb
dec
sub
or
test
dec
cmp
insl
out
mov
fucom
testb
xchg
fnclex
leave
mov
ljmp
xor
mov
jl
pop
dec
and
into
adcb
dec
cmpsl
adc
insb
xor
fs
aas
into
out
ss
arpl
std
stc
xlat
loop
inc
xchg
mov
mov
jp
outsl
lods
scas
in
mov
or
clc
cmp
xchg
lea
popf
out
mov
mov
and
cltd
leave
mov
leave
fiadds
jle
push
out
push
notl
nop
inc
cwtl
push
div
mov
or
and
call
lret
push
xchg
mov
cmp
mov
fs
mov
mov
loope
lret
fstp
pushf
stc
jne
add
and
out
cmpsb
inc
adc
cmpsl
adc
xchg
in
or
int
sbb
xor
or
mov
adc
mov
pop
fst
ja
inc
add
insb
adc
sub
and
cltd
fists
sahf
sahf
aaa
inc
imul
testb
test
bound
xorb
hlt
icebp
mov
fisubrs
imul
fsincos
loope
lods
rorl
inc
sub
inc
ret
stos
mov
shlb
inc
push
add
dec
dec
cwtl
sub
icebp
cmpsl
add
daa
es
dec
lock
sub
xor
faddl
mov
in
or
testl
mov
jle
nop
push
repz
inc
stos
push
or
push
aas
mov
in
adc
stc
stos
xchg
test
cltd
pop
jge
add
xchg
ret
push
sub
adc
and
in
sbb
sarl
cmp
sub
xchg
pop
sbb
lcall
sub
mov
jnp
pop
jge
xchg
cli
dec
loop
cmp
shl
sbb
jecxz
pop
cmpsb
mov
sub
mov
jb
sbb
ja
mov
lock
inc
jae
cmpsl
mov
xchg
jo
jne
dec
push
push
xchg
fildl
cmp
inc
and
inc
fdivrs
dec
inc
dec
filds
insl
lods
es
out
je
dec
fstpt
lock
mov
dec
fdivrl
shlb
negb
cmp
sbb
jb
adc
sub
mov
jle
movsb
lock
adc
inc
leave
mov
adc
andb
insb
aaa
dec
mov
sahf
and
mov
mov
loope
adc
xchg
mov
push
jle
arpl
cmp
sahf
xor
sbb
pop
mov
sbb
jo
test
jle
add
inc
enter
sbb
inc
sahf
xchg
add
sahf
push
call
adc
jno
nop
mov
cmp
mov
sbb
mov
scas
jecxz
mov
pop
cmc
insl
shll
or
cmp
rcr
enter
pushf
inc
jge
push
inc
xor
mov
xchg
outsb
loopne
lods
rolb
scas
int3
pop
or
dec
push
mov
dec
sbb
orb
mov
repz
stos
jecxz
adc
mov
pop
fistpll
mov
mov
adc
add
sub
cmp
daa
clc
jae
stos
std
addb
jge
pop
push
push
sbbb
lods
rorl
call
jge
cmp
in
push
fwait
dec
aad
mov
neg
sbb
inc
leave
or
lock
ds
cmp
mov
mov
cmp
jg
lods
lahf
das
imul
outsl
into
jg
inc
neg
jo
jecxz
mov
shl
jmp
leave
ds
lret
jne
dec
xchg
fs
xor
movsb
mov
shlb
test
xor
int
adc
sbb
fidivs
bound
adc
push
data16
push
vdivpd
les
add
cwtl
cmp
jge
popa
pushw
jmp
mov
mov
notb
test
cld
repz
imul
fmull
push
shl
mov
shl
xchg
out
push
loop
repz
or
jmp
mov
dec
outsb
adc
jns
jno
cmpb
es
loope
and
test
xor
pop
adc
js
scas
shr
adc
stos
rcll
xchg
and
push
stos
fisttpll
xor
gs
leave
pop
mov
push
std
aaa
fidivrs
cmc
mov
cwtl
xor
xlat
ss
lret
add
ljmp
dec
ret
dec
insl
ror
push
stc
andl
pusha
ret
test
repnz
add
sub
shlb
xor
movsb
pop
inc
mov
rorl
xchg
add
inc
fldenv
push
push
icebp
or
cmp
stos
test
lock
fwait
ror
sub
rcrb
insl
xchg
adc
xor
cld
loopne
sarb
adc
pushf
je
cmc
int3
dec
hlt
mov
lcall
push
lcall
xchg
and
inc
shlb
sbb
jecxz
adc
mov
stc
rcll
jae
movsl
stos
sbb
dec
push
push
jnp
movsl
lds
inc
scas
loop
or
add
fxch
aam
adc
and
lock
imul
clc
jg
imul
adc
jnp
push
push
lret
mov
ljmp
cmp
or
mov
cmpsl
and
jnp
int
push
mov
loop
and
pop
mov
and
fldenv
add
jl
xchg
loopne
sub
lods
into
not
push
shlb
mov
jle
or
cmp
mov
imul
frstor
sti
rorl
cltd
or
mov
pushaw
xlat
inc
lret
testb
dec
por
xor
cmp
mov
mov
inc
mov
mov
mov
push
xor
jl
adc
xor
push
mov
movups
lea
push
in
add
sub
test
ja
cmp
push
out
or
mov
jno
or
ss
xor
sbb
push
jo
mov
sub
and
push
inc
das
inc
cltd
push
arpl
je
xor
jnp
and
or
sub
imul
test
cmpsb
ficomps
imul
cltd
cmp
insl
pop
xchg
xor
push
ss
cmp
lahf
jnp
popa
cld
push
xor
mov
sub
cwtl
sub
push
pop
cmp
gs
dec
xchg
xchg
dec
adcl
mov
orl
dec
sbb
dec
pop
insl
pop
flds
test
mov
xorl
bound
movsl
xchg
clc
negb
mov
cli
mov
ds
bound
ds
pusha
inc
mov
in
aad
pop
adc
imul
mov
idivb
int3
nop
cltd
push
cs
sbb
sbb
jnp
int
adcl
lret
mov
gs
ja
xchg
mov
test
pusha
push
add
in
push
sbb
or
sbb
sbb
test
pop
das
push
push
sub
sub
cmp
ret
inc
push
xor
mov
out
repnz
push
sub
aaa
sbb
and
add
cli
inc
das
mov
dec
enter
dec
inc
mov
or
cmp
or
cltd
sysret
sarl
fstl
mov
fnstsw
adc
and
test
push
das
mov
push
nop
xor
rol
jnp
and
lds
sub
jb
add
sub
cmp
into
mov
adc
xchg
outsl
xor
inc
out
push
stos
cwtl
add
adc
icebp
xor
xchg
dec
adc
ss
mov
mov
mov
test
lea
cmp
mov
xchg
fsubrp
cli
lcall
out
wbinvd
cmpsb
sub
mov
aad
repz
lret
jge
iret
shlb
scas
movsb
push
pop
sbb
mov
in
pop
add
into
jecxz
jnp
cmp
shll
mov
pop
lcall
sbb
test
sti
sub
int3
ds
fcomps
ja
sub
gs
mov
rcll
cld
cmp
xchg
out
inc
mov
push
and
mov
mov
xchg
pusha
into
or
cmc
ljmp
rclb
les
pop
cmp
pop
inc
mov
les
outsl
add
adc
ljmp
into
push
pop
adc
loopne
push
test
sahf
xchg
pop
cmpsb
and
xchg
inc
lock
cltd
repz
dec
lahf
xchg
mov
pop
lock
rorl
mov
add
aas
iret
mov
pushf
adc
pop
mov
mov
and
lods
fcomp
mov
cltd
and
sbb
das
cmc
mov
mov
fnstcw
test
fistpl
lcall
lods
inc
les
gs
testb
sbb
lret
insb
jbe
dec
aam
push
stos
mov
addr16
push
repz
mov
dec
xchg
dec
test
adc
jnp
movsl
xchg
and
int
loop
ss
add
and
and
cli
mov
inc
xchg
ljmp
jp
pop
inc
inc
mov
ds
in
and
sarl
mov
test
push
or
sets
push
daa
or
xor
push
inc
loop
cld
adc
jl,pn
adc
push
aas
daa
push
mov
jle
sub
stc
dec
xor
xchg
sub
pop
adc
mov
sbb
test
pop
jns
test
mov
adc
pop
and
mov
cmp
sti
push
xor
stos
push
dec
rclb
mov
cmp
sti
filds
shrl
jbe
ret
jl
fwait
stos
push
push
fwait
cld
cmp
sbb
push
jns
frstor
xchg
imul
sbb
mov
sti
jmp
bound
stc
shrl
dec
mov
or
mov
xor
lods
jg
repz
xlat
lret
inc
movsl
pop
repnz
cmp
inc
sqrtps
arpl
xchg
mov
fsubl
pop
sub
mov
lods
fnsave
mov
cmp
pushf
in
or
jnp
push
adc
inc
pop
in
push
sarl
pop
in
jbe
xor
push
stos
in
add
test
and
and
dec
xlat
fwait
xor
insl
push
hlt
dec
ret
adc
sub
out
xor
sbb
xor
add
mov
push
cld
in
inc
orl
ret
ds
xchg
roll
inc
jbe
adc
and
imul
in
stos
mull
lret
pop
sahf
mov
gs
xchg
cmp
pushf
mov
fstpl
lcall
push
hlt
pusha
add
cmp
inc
mov
repz
xor
xchg
movsl
rcl
sbb
mov
jmp
pop
movsl
loop
xor
mov
inc
jmp
xor
cmp
push
sub
inc
leave
add
das
pop
jge
cmpsl
arpl
pop
inc
pop
mov
dec
cmp
push
loop
das
mov
or
push
jno
inc
incl
subl
lahf
sub
xchg
lds
cmp
movsb
roll
loopne
pop
mov
push
adc
cltd
jo
mov
mov
sti
cld
scas
inc
out
or
mov
adc
fisubl
loope
or
and
sub
out
mov
cmp
pop
jge
fnstenv
rorl
jne
cmp
push
out
dec
adc
popa
xchg
cmp
pop
jge
jb
pop
outsb
fs
pop
sub
cmp
sub
stos
out
jne
xor
inc
iret
add
in
fwait
mov
ja
pop
add
jbe
test
sbb
int
xor
lret
sbb
mov
pop
cmpsb
jnp
mov
jne
leave
aaa
xor
shll
lock
add
adc
sbb
inc
adc
mov
jns
mov
cld
fs
jmp
cs
lods
or
int
fwait
cmpsb
stos
xchg
int3
adc
ja
xchg
mov
mov
std
mov
cmp
mov
add
call
jns
popa
push
cmp
lret
fcoml
mov
mov
push
jnp
clc
sarl
push
mov
fidivs
pop
push
and
pop
jle
xchg
dec
in
stc
mov
insl
repz
ficoms
lcall
cmp
imul
sub
pop
cmp
mov
shll
and
jl
rolb
add
ss
paddusw
adc
xchg
xchg
adc
icebp
test
stc
xor
outsl
lods
test
lods
cmpb
in
rcrl
sbb
testb
pop
fs
add
mov
les
jb
cmp
mov
xchg
pop
xchg
arpl
pushf
mov
in
dec
cli
mov
pusha
inc
test
add
sub
or
gs
insl
inc
jle
mov
mov
push
jge
or
lds
rorl
fcomp
cmp
out
sahf
xchg
imul
jmp
outsb
add
shlb
and
cmpsb
mov
xorb
ja
lahf
shrl
xchg
loopne
int3
sub
sbb
push
pop
pop
daa
mov
sbb
icebp
sar
fidivl
mov
aam
in
nop
nop
out
add
jle
and
xor
xor
cmpb
je
in
sbb
ss
mov
push
sbb
repnz
icebp
rcrb
xor
pop
fs
inc
sbb
sbb
mov
add
scas
sbb
cmp
mov
aaa
jo
jns
adc
jg
das
aad
std
shrl
cmc
pop
ret
daa
mov
in
shrb
imul
mov
fcmovne
nop
cmpl
dec
dec
bnd
enter
popa
sar
xchg
lods
and
rdpmc
mov
flds
sbb
shr
pop
or
out
data16
xor
mov
push
push
js
jb
out
cmpb
sbb
add
inc
cli
lds
xor
xor
adc
mov
outsb
jb
stos
mov
jno
pop
popl
imul
aad
add
aas
jns
or
insl
jae
mov
xchg
fsts
xchg
popf
and
fdiv
mov
cmc
hlt
sti
fwait
jb
and
dec
popa
lock
movsb
movb
adc
and
push
mov
lret
push
lret
das
push
rorb
mov
inc
and
icebp
stos
mov
mov
addr16
mov
add
mov
push
dec
mov
mov
push
lods
ss
test
mov
int
sbb
add
shr
or
movsb
jne
pop
xchg
mov
adc
and
pop
xchg
xorl
xor
ljmp
mov
push
insl
lret
xchg
add
and
push
xchg
or
pop
sbb
pop
jmp
es
cs
sub
fmulp
xor
test
loop
aas
aam
andb
aaa
xorl
and
ret
xchg
xor
popa
or
clc
mov
sub
int
pop
mov
andb
aaa
push
xchg
xchg
and
test
sbb
cmp
stos
cld
lods
jnp
xchg
outsb
fisttpl
pop
sub
popa
iret
sbbb
dec
inc
cltd
in
sbb
loope
dec
cmpsb
loopne
fdivl
scas
and
push
or
sbbl
pushf
in
outsb
sub
imul
add
clc
mov
sub
gs
test
fisttpll
pop
faddp
testb
cwtl
jne
mov
ja
in
lds
loopne
mov
jmp
outsb
in
adc
stc
and
movsb
jns,pn
sub
xlat
jne
pop
scas
enter
add
sarl
xchg
push
mov
pushl
cli
imul
ja
sub
mov
cmp
sub
add
insl
jbe
push
cmp
pop
mov
pusha
fcmovne
aas
out
cwtl
sti
mov
mov
mov
push
push
jno
add
inc
pop
lret
leave
push
out
mov
enter
jb
push
dec
loopne
jg
adc
movhps
mov
xchg
mov
xchg
pop
cmp
sub
pop
imul
xor
sbb
ja
pop
push
adc
je
movsb
fcomps
rcrl
hlt
pop
jmp
out
adc
stos
test
addr16
sub
add
pop
jo
test
loope
jae
leave
stc
popl
aaa
lcall
call
pop
repnz
ljmp
and
mov
sbb
andl
xchg
add
rcrl
sub
data16
ficomps
adc
pop
outsl
inc
daa
imul
inc
push
movsl
add
rorb
adc
push
fnstenv
or
mov
stc
int
loope
sbb
add
adc
and
rcll
mov
bound
js
addb
dec
xor
lods
fwait
pop
dec
push
dec
fidivrl
or
or
push
cmpsl
lods
outsl
dec
push
inc
xor
lret
mov
mov
ret
pusha
sub
pop
out
movsb
sub
fldpi
jge
int3
aam
addr16
stos
xchg
lea
jb
push
mov
adcl
and
ss
push
mov
xchg
shll
or
sub
pop
dec
mov
jp
jo
cltd
xor
mov
scas
sbb
xchg
loopne
mov
in
push
xchg
inc
sarl
pushf
cld
cmpb
push
add
mov
push
xchg
loope
int3
mov
ljmp
clc
lods
add
dec
inc
das
inc
mov
cli
jb
or
mov
mov
lea
jecxz,pn
mov
outsb
jo
fmuls
jl
push
cld
xchg
inc
add
xor
adc
jnp
mov
out
sub
push
mov
movsb
mov
fmul
mov
insb
sbb
jb
repnz
dec
sbb
push
insl
mov
mov
mov
sub
mov
int3
cli
sub
loopne
jge
ja
pop
rolb
xchg
jge
pop
or
inc
pusha
ret
or
jmp
cmp
mov
mov
iret
cld
outsl
loopne
pop
sbb
cmp
addr16
jne
ss
fs
nop
and
outsb
jae
ja
lcall
insl
bound
testl
fstpt
sub
ss
cmp
pop
mov
jns
xor
call
push
sub
pop
and
cwtl
jo
cmpsb
mov
lea
push
or
pop
mov
lds
sub
dec
or
inc
pop
sub
dec
inc
jp
pop
xchg
repnz
cld
int
lahf
sbb
sbb
dec
insl
jge
sub
push
pop
mov
test
mov
inc
lret
sub
and
mov
ds
js
bound
add
sahf
pushf
cltd
cmp
cli
clc
jno
test
enter
pop
jmp
movsb
jno
pop
loop
pop
outsl
add
lods
inc
sbb
lret
outsl
enter
sbb
gs
xchg
mov
icebp
adc
xchg
inc
push
push
dec
stos
leave
scas
leave
lock
adc
inc
fbstp
push
inc
pcmpeqd
lret
jle
push
or
cli
je
popa
loope
fldl
sbb
xor
loop
sti
push
adc
sub
jae
addr16
cmp
push
jns
pop
lret
jae
dec
mov
andb
mov
mov
sbb
push
mov
js
stos
pop
fdivrl
xchg
pushf
mov
mov
jb
cmp
outsl
add
frstor
in
aas
jge
fwait
pop
push
or
leave
loop
and
mov
out
decl
mov
in
stc
lret
divb
mov
and
and
push
xchg
dec
lods
push
jg
in
jno
or
ror
cmp
ja
sub
or
add
sub
popa
inc
js
inc
jbe
in
cmp
mov
jnp
sub
add
fsubs
lods
je
push
outsb
cmp
mov
mov
push
mov
test
lret
fstpl
leave
add
fstps
scas
pusha
insl
rcll
imul
cmpsb
orl
mov
push
and
adc
fsubrs
aad
jge
into
xlat
shrb
mov
and
les
push
push
dec
xlat
sbb
xchg
rcrl
inc
sbb
pop
sbb
xchg
popa
or
aad
xor
or
mov
or
and
rcr
xor
insb
inc
inc
and
fstpl
scas
nop
add
pop
or
insb
stos
push
pop
sub
aad
lods
push
and
push
jecxz
loopne
ss
xor
fisubs
mov
mov
fincstp
jmp
sub
mov
mov
test
push
mov
sub
stos
mov
pop
xor
cli
loop
jns
dec
stos
je
lods
dec
inc
xlat
and
xchg
ret
adc
notb
inc
daa
mov
daa
pusha
lahf
hlt
popf
push
dec
sbb
mov
mov
xchg
es
ljmp
movsl
jecxz
loopne
mov
addr16
outsl
inc
arpl
push
xor
sahf
outsl
pop
push
xchg
inc
lods
aaa
or
push
add
adc
xor
sub
add
xchg
stc
std
cmpsl
in
inc
push
push
cmp
in
sbb
aad
lods
and
cmp
pusha
insb
jge
vcvtpd2ps
cmpsb
ret
pop
jae
testb
test
gs
and
mov
movsl
aam
loop
push
call
int
lds
xchg
mov
push
insb
bnd
lret
ret
in
sbb
shl
mov
cwtl
xor
xchg
mov
cli
popf
or
pop
add
fs
push
mov
jle
insb
cmp
not
mov
mov
pop
mov
push
fdivr
dec
xor
lahf
hlt
mov
sbb
or
aaa
adc
dec
sbb
pop
js
lods
test
mov
adcl
clc
and
jg
rorl
or
mov
repz
stos
in
movsl
test
insl
jne
sub
adc
imul
cmp
stos
push
pushf
adc
cmp
jb
mov
cltd
lds
popa
movl
jb
sti
subl
push
cmp
outsb
adcb
fidivrs
outsl
pop
add
inc
mov
add
xorl
sti
sahf
das
aam
ret
and
stos
pop
mov
lahf
dec
sub
and
mov
jno
mov
movsb
shlb
cmpsb
outsl
sub
insl
int
pop
sub
fucomip
adc
fcompl
loop
sub
pop
pushl
pusha
jbe
sti
jle
andl
shll
test
mov
mov
scas
sub
loop
rolb
jge
stc
mov
inc
repnz
push
bound
lock
in
lock
sub
addb
add
pop
pop
pop
jbe
and
cld
ret
ss
loopne
jp
mov
cld
test
dec
arpl
mov
pop
out
fsubs
pop
add
cld
rorb
pusha
psrlq
cmp
ss
pusha
push
ja
and
inc
fldt
enter
xor
xlat
mov
in
inc
popf
das
cmpsl
in
push
rorl
test
or
addr16
push
mov
pop
and
in
sbb
and
ljmp
add
test
ljmp
inc
or
cwtl
lcall
rorb
jmp
mov
xchg
andb
scas
pop
addr16
movsl
inc
xchg
mov
bound
addl
test
lock
popl
fwait
in
jb
sti
add
xor
movsl
rorl
dec
pop
mov
ss
mov
or
push
or
enter
or
add
mov
jb
addl
xchg
lea
loope
or
add
fwait
xchg
sbb
outsl
inc
loope
shlb
outsl
icebp
push
inc
or
mov
mulb
pop
mov
xor
fcom
pop
lret
loopne
xor
das
mov
lds
or
int3
xor
je
xorb
je
push
cld
mul
loopne
aad
or
int
iret
dec
ja
lret
test
pop
xor
mov
stos
movsl
cmp
sub
xor
cmp
out
xchg
sub
into
adc
fistpl
cltd
jnp
out
lea
addr16
out
fdivs
outsb
repnz
sub
adc
dec
add
mov
xorl
xor
mov
push
cmpl
arpl
and
mov
and
push
bound
rcll
movsb
das
pop
fbld
sbb
fisttpl
add
ljmp
mov
icebp
inc
dec
mov
out
popa
sbbl
mov
push
mov
dec
jp
cmpsl
push
fadds
sbb
push
mov
xchg
jp
dec
data16
rcrb
pop
orl
rcll
xor
sub
mov
imul
pop
xlat
xchg
fcom
and
pop
rcrb
sbb
mov
adc
pop
mov
pop
dec
clc
pushf
adc
rol
rorb
lret
mov
and
sub
inc
js
scas
jge
and
inc
mov
enter
cli
movsl
push
test
enter
add
stos
mov
mov
push
rorb
pop
int3
movsl
icebp
mov
cmp
pop
repnz
and
rcr
dec
iret
pushf
xchg
jecxz
push
ret
sarl
jnp
mov
out
jae
addr16
idivl
sub
jb
xchg
inc
pop
lret
loopne
fs
mov
jmp
ja
fdivs
out
jmp
out
leave
adc
addr16
jo
mov
stc
bound
shrb
sarl
and
pop
adc
push
sbb
jb
xchg
and
cld
cwtl
dec
xchg
and
jmp
or
mov
dec
add
popa
pop
addr16
xchg
cmp
xchg
xchg
popf
stos
out
mov
sub
jl
mov
cmpsl
sbb
ret
cmp
xchg
mov
aas
pop
xchg
mov
je
fwait
scas
add
jle
inc
sbb
dec
mov
inc
dec
sub
nop
and
inc
incb
cmp
or
sub
jmp
add
mov
jne
inc
lea
mov
pop
adc
lahf
push
loopne
dec
sbb
lds
repz
xlat
mov
cwtl
and
dec
cli
jl
inc
mov
insb
mov
and
or
es
push
test
cmp
jno
jle
mov
xor
dec
lds
repz
mov
xor
ljmp
mov
push
pop
outsl
cmp
daa
mov
icebp
push
movsl
dec
cmp
movsb
jnp
nop
pusha
stc
outsb
pop
rorl
orb
push
clc
xor
js
icebp
sub
sbb
ret
sahf
out
neg
jbe
mov
pop
jo
fwait
xchg
xchg
xchg
loopne
push
inc
fimull
inc
test
scas
add
or
and
les
dec
mov
and
hlt
jne
jecxz
repz
and
inc
add
daa
mov
mov
inc
lahf
and
pushf
inc
aam
stc
daa
roll
enter
jbe
xor
pop
adc
pop
xstore-rng
mov
lret
xor
sti
xchg
or
jo
popa
sbb
pop
lods
push
call
cmp
xor
idiv
push
mov
or
hlt
push
mov
jbe
out
clc
ret
pop
cmp
mov
xchg
mov
add
sti
movsb
pusha
or
mov
push
pop
movl
lods
sbb
jge
mov
sbb
scas
and
inc
pop
cwtl
rcrl
lahf
mov
mov
add
mov
mov
lcall
mov
sahf
mov
test
out
dec
sub
nop
cmpsl
cmp
mov
mov
addr16
push
int3
or
das
jbe
js
mov
pusha
int3
xchg
pop
sub
cmp
data16
inc
sub
ljmp
sti
test
cmpsb
adc
out
fs
pop
sbb
or
daa
or
and
push
xlat
mov
stc
stos
lcall
mov
rcrl
cmp
add
lods
lret
jecxz
sub
mov
fsubrs
movsb
clc
shlb
insb
dec
jmp
and
pop
pop
cmp
mov
jns
sti
cmp
jl
pop
xor
sub
testb
imul
adc
xchg
lds
je
jo
mov
sub
xlat
sub
stos
mov
pop
mov
xchg
orl
push
xchg
in
cmp
fimuls
negb
mov
xchg
repz
dec
sbbl
cld
mov
cli
mov
adc
ffree
iret
inc
push
leave
and
lock
je
add
inc
cmpsl
jmp
or
aaa
rcrl
pop
or
cmpl
imul
cmp
jne
sti
sub
je
xor
hlt
xchg
add
popl
push
shll
lret
sbb
test
xchg
inc
movsb
pop
or
sbb
xor
loope
lock
sbb
push
or
sub
int
addr16
sti
dec
iret
xchg
mov
xchg
out
mov
repz
data16
pop
lsl
push
repnz
mov
nop
push
outsb
mov
sub
adc
mov
cmpsl
jl
mov
push
jmp
add
negl
std
mov
lea
inc
aas
xor
pop
jae
adc
jg
das
lds
mov
sub
stos
fsubs
mov
xchg
dec
ret
or
or
mov
pop
mov
and
fidivrl
mov
insb
in
and
push
mov
std
jp
cmp
mov
sbb
lock
imul
mov
lods
ret
mov
xchg
inc
and
sbb
cwtl
or
mov
and
push
add
cmpsl
int3
jno
test
inc
xorl
mov
mov
movsl
jle
call
dec
inc
adc
lahf
cwtl
int3
cmp
mov
mov
add
outsl
dec
aad
mov
nop
xor
lahf
shrb
pop
sbbl
pop
cmpsl
decl
cmp
xlat
add
pop
mov
pop
lods
jae
ficompl
jnp
cmp
xor
pushf
inc
popa
bnd
xchg
jnp
jne
fdivs
push
sbb
cmp
jb
aad
inc
inc
jp
pop
clc
leave
inc
clc
dec
mov
mov
cs
jmp
xchg
cmpsb
pop
int3
mov
add
bound
and
or
dec
loope
or
inc
mov
inc
cmpl
add
mov
push
cmp
ljmp
pop
decb
sub
mov
cmpsl
or
shrw
inc
movsb
dec
in
shlb
jle
mov
xchg
mov
and
movsb
or
cmp
adc
push
or
int3
pop
cld
addb
cmp
idivl
popa
inc
add
or
cli
cmpsb
jge
pop
dec
std
shlb
add
mov
or
aas
lcall
xor
jb
xchg
sub
sbb
xor
imul
ret
dec
insl
cmpsl
cmp
mov
rcrl
out
push
test
mov
das
sbb
cli
in
scas
repnz
orl
out
fstpl
sub
push
pop
fsubrl
push
imul
xlat
ret
call
insw
fs
dec
bound
das
xchg
or
mov
inc
mov
negl
push
sub
arpl
out
add
loop
ret
mov
mov
adc
test
pop
cli
jecxz
xchg
fstps
cmpsb
xchg
jmp
push
movsl
sbb
data16
in
adc
lods
cltd
scas
xchg
push
xor
dec
shll
scas
icebp
out
adc
clc
aad
scas
fsubrs
cmp
in
loope
adc
test
ljmp
shll
sub
dec
shll
shll
imul
fs
mov
or
pop
sbb
mov
loopne
jne
cmp
mov
adc
sub
sti
in
push
adc
xchg
cmpsl
aaa
sub
pushf
scas
adc
movsb
adc
ja
mov
xchg
inc
pop
adc
movsb
jae
sti
push
mov
int
sub
arpl
scas
int
inc
xchg
xchg
or
sahf
xor
aad
pop
jl
push
mov
pop
pop
jecxz
push
mov
mov
xchg
cmc
rorl
rolb
aad
sti
loop
inc
out
sub
shlb
daa
push
sub
test
stc
sub
out
cmp
xchg
pop
ja
add
xor
adc
adc
xor
mov
mov
das
scas
sub
or
push
std
pop
test
and
dec
ds
mov
add
mov
push
or
icebp
and
inc
push
nop
adc
pop
jg
adc
adc
mov
cmp
xchg
decb
ss
mov
jl
cwtl
xchg
sarl
adc
mov
lret
popf
fdivrs
sar
mov
xchg
jle
mov
in
and
in
mov
repnz
and
mov
inc
fbld
cmp
insb
cmp
xor
mov
push
or
ja
jg
mov
fstpt
es
out
jbe
bound
xchg
cli
lret
movsl
or
xchg
adc
pop
cld
mov
xor
add
sub
cmp
testl
mov
scas
stc
add
jecxz
pop
or
pop
in
scas
and
dec
push
mov
inc
outsl
adc
mov
sub
insb
inc
lahf
fs
pop
xchg
cmp
ror
jg
push
hlt
leave
flds
cmp
xchg
nop
inc
cltd
pop
adc
nop
ja
lock
adc
push
fsubrl
add
inc
stos
popa
sti
mov
out
icebp
outsb
push
stos
jns
fcoms
jmp
imul
stos
jae
push
sbb
pusha
xorb
mov
scas
repz
and
pushf
mov
loope
pop
push
xchg
adc
out
movsl
sbb
sub
loope
movsl
inc
inc
push
xchg
mov
add
xor
pop
adc
sub
jbe
fcoms
push
stos
sahf
cltd
xor
ds
jp
inc
out
decb
aad
leave
push
sub
inc
mov
sub
pushf
arpl
push
lret
in
bound
mov
dec
add
and
dec
subl
ljmp
stos
cmp
jo
loopne
out
xor
add
cltd
ss
dec
cmp
xlat
lods
and
push
pop
cltd
ret
icebp
pop
dec
adc
stos
leave
jmp
je
xchg
mov
adc
cmp
push
cs
rcrl
insb
and
xchg
jns
xchg
mov
and
sub
xchg
inc
cmpb
sarb
shll
sub
or
jae
jb
cmc
bound
mov
ret
add
fstps
rorb
fildl
jno
or
pop
jo
xor
sub
fistpll
ljmp
ljmp
fidivrl
or
pusha
add
pop
sti
fisubs
pop
out
dec
repnz
xorb
in
jne
mov
test
mov
std
and
push
lds
mov
sbb
repz
insl
filds
push
pop
mov
aam
cmp
push
push
cmc
loopne
pop
stc
inc
xchg
fdivs
sbb
cwtl
stos
sbb
out
sbb
sub
into
jne
in
push
dec
add
pushf
popf
das
test
lods
cltd
cli
adc
push
mov
add
mov
into
aaa
std
popf
mov
sbb
mov
push
repz
pushf
push
mov
gs
test
cld
jne
inc
leave
dec
outsb
divl
dec
int3
pop
sarl
iret
int3
add
ja
icebp
jle
lret
xor
and
out
mov
test
dec
xlat
lcall
xlat
and
test
sub
add
flds
js
xor
dec
dec
jo
and
dec
xor
scas
int3
arpl
mov
mov
scas
test
pop
inc
addr16
dec
jbe
call
cmc
cli
int3
cmpsl
cmp
push
cmp
stos
jo
cs
and
leave
jle
mov
loope
ja
mov
loope
sbb
and
lcall
and
shlb
adc
pop
xor
sahf
mov
dec
gs
sub
lods
mov
xchg
sar
mov
cmp
xor
xor
dec
loop
cmp
bound
or
add
leave
pushf
divb
adc
fcomps
mov
outsl
fistps
add
push
adc
ljmp
negl
push
leave
push
imul
ja
arpl
cmp
fnstcw
cmpsl
adc
inc
jecxz
data16
mov
mov
inc
cmp
xchg
mov
mov
jle
iret
push
inc
call
leave
cmpsl
xchg
cli
in
cmpl
mov
xor
xchg
bound
icebp
std
outsb
das
push
xchg
clc
mov
scas
cmp
mov
pop
movl
sbb
xchg
out
mov
cmpsb
data16
fidivs
call
sub
push
and
cmp
pop
cld
mov
xorb
inc
test
insb
sbb
xchg
sub
adc
icebp
repnz
adcb
fwait
loopne
clc
popa
or
fcmovne
mov
mov
sub
aaa
add
fistps
mov
dec
adc
push
adc
sub
stc
loopew
leave
clc
xor
dec
out
pop
pop
mov
std
lods
enter
push
xor
addb
imul
mov
and
pushf
frstor
add
out
inc
lret
lods
mov
cmpsb
mov
insl
mov
pop
testl
mov
test
call
lcall
cmpsl
sbbl
scas
add
dec
rcrb
cmp
sbb
jge
fidivrl
xchg
pop
loope
fidivs
push
cmc
pop
ja
out
mov
scas
jge
or
insl
jbe
mov
jmp
jmp
enter
lock
cmpsl
mov
mov
lahf
xchg
cmp
and
sahf
decb
cmp
jge
sub
or
fbstp
js
xchg
in
aam
cmp
jle
mov
mov
jnp
mov
cmp
popf
inc
push
xchg
mov
inc
adc
xchg
push
xor
or
jge
push
jp
andps
test
or
inc
mov
push
and
cmp
test
lahf
loop
in
fwait
sub
xchg
xchg
sbb
mov
adc
jp
sub
mov
pushw
sub
int
fldcw
jp
shll
jmp
aas
add
xchg
adc
jge
lock
andb
int3
orb
out
jno
push
push
push
stos
mov
sbb
mov
bound
cli
cwtl
cmc
test
xchg
in
ss
rorl
push
frstor
stc
sub
fcmove
jle
adc
pop
sbb
sbb
fmuls
insb
aaa
gs
jns
sub
mov
stos
leave
aad
push
push
jl
pushf
cli
or
jb
and
aas
es
stos
ja
scas
dec
mov
pop
xor
loop
xchg
enter
lea
xchg
mov
mov
les
dec
stos
nop
mov
arpl
push
aam
jge
fsubrs
aas
xchg
popa
mov
sub
jp
pop
roll
gs
cmp
xchg
outsl
rcr
dec
ret
pop
cmp
stos
push
fdiv
or
lea
sub
outsb
pop
andb
pushf
add
sar
xchg
dec
pop
push
es
push
data16
ljmp
mov
imul
push
popf
jae
lock
pop
sbb
lahf
outsl
inc
adc
addl
les
ljmp
fstpl
lahf
mov
out
xor
mov
add
dec
mov
xor
imul
ret
loopne
xchg
fisttps
in
pop
aam
mov
rorl
aad
dec
pop
sub
lea
ds
mov
xor
cmp
jecxz
or
int
mov
sti
pusha
mov
mov
mov
test
and
gs
pop
outsl
out
push
push
add
jmp
jns
cmp
lods
add
lret
mov
call
je
jne
pop
adc
xchg
push
xchg
outsb
mov
push
xor
test
leave
imul
stos
out
jne
push
push
leave
test
mov
mov
mov
es
adc
cmp
arpl
push
or
sbb
jnp
mov
enter
ds
les
addr16
adc
sti
loope
adc
xor
xor
jae
ja
adc
sub
adc
sbb
and
mov
mov
mov
ja
lock
mov
sbb
clc
pop
xchg
push
sti
cmp
int3
iret
stos
lods
add
int3
imul
clc
mov
stos
pop
sub
jg
aam
add
aas
stos
fsubrl
cmp
fldenv
mov
int
ret
rclb
pop
adc
fiaddl
pop
xor
cld
out
sbb
iret
xchg
xchg
fnstsw
mov
mov
dec
sub
out
testl
adc
shrb
inc
push
sub
cli
jecxz
jns
mov
sbb
adc
cld
rcll
sub
mov
push
sub
fidivrl
sub
mov
sarl
push
adcb
lods
stc
xor
inc
add
fsubrs
xchg
adc
xchg
dec
shlb
call
dec
jmp
fs
adc
dec
or
or
fucomip
popa
cmpsb
clc
add
fmuls
sbb
mov
push
mov
fsubrl
cmpsl
ljmp
fs
jecxz
adcb
or
orl
xchg
test
aam
xlat
xor
insl
cmp
push
lea
lret
lods
outsl
data16
mov
pop
fsubp
mov
aaa
shrl
fdivl
lret
push
sarb
push
xchg
xchg
add
sbb
sbb
lret
jecxz
mov
cmp
xchg
jmp
mov
push
cmp
mov
dec
js
test
mov
mov
dec
sti
ljmp
lcall
jae
fs
test
dec
add
mov
pop
mov
loopne
adc
ja
test
gs
adc
xchg
cmpsb
test
repnz
and
leave
daa
add
movsb
pushf
sti
stos
outsl
sbb
aad
in
jge
push
cmp
sub
xchg
inc
push
jg
shlb
daa
push
mov
out
imul
scas
xchg
xlat
xor
jge
in
pushf
and
dec
xchg
dec
cs
push
sub
ds
fcmovne
mov
push
or
add
mov
divb
adc
push
xor
call
add
mov
or
sbb
mov
test
pop
push
or
fucomp
in
sbb
inc
sbb
add
adc
cltd
das
cwtl
cmp
adc
out
mov
push
push
test
mov
arpl
push
cwtl
mov
xor
sti
jno
cld
sub
imul
push
mov
push
sti
add
xchg
adc
inc
dec
adc
cmp
pop
add
pop
outsl
movsb
fcmovu
movsl
push
movsb
xor
push
out
fcomps
or
sbb
sub
mov
in
imull
adc
cli
dec
push
ficoml
sbb
cmp
jg
inc
pop
movsl
imul
sub
xorb
dec
loop
mov
add
adc
cmp
jbe
iret
imul
jbe
cmp
outsl
aaa
inc
rorb
sub
mov
insl
inc
nop
mov
sarl
jbe
in
push
js
ror
insb
dec
push
shrl
shll
sbb
inc
out
add
inc
add
push
jb
movsl
xchg
xchg
and
repz
xchg
gs
lret
into
cmpsl
xor
fs
xor
lahf
cwtl
jp
mov
pop
movsl
mov
arpl
jbe
lock
xorl
cmp
sub
mov
idivl
mov
cmpsl
mov
pop
jmp
cmpsb
lock
adc
sbb
movq
or
cmpb
mov
pop
pop
jg
dec
clc
lret
push
fwait
pop
jnp
test
jb
push
push
fsubs
dec
mov
lcall
mov
lds
or
fwait
int
lret
adc
jecxz
repnz
lcall
stc
ljmp
mov
frstor
add
popa
or
dec
push
sti
push
sbb
sbb
sub
mov
leave
xor
sbb
lds
jecxz
xchg
cwtl
pop
in
jecxz
mov
test
rcrl
ljmp
inc
mov
pop
movsb
lret
fisttpll
cmp
lock
leave
aas
sbb
xchg
insl
pop
mov
jae
or
jae
add
ret
outsb
ljmp
inc
sbb
mov
add
lret
popf
fbstp
sbb
push
mov
das
sub
mov
daa
movb
xor
cmp
cmc
add
imul
out
mov
into
adc
int
lods
push
mov
rorb
fsubrs
ret
xchg
mov
lds
pop
mov
sub
sbb
in
shlb
cwtl
or
mov
xor
sbb
sbb
aam
fldcw
shl
or
dec
call
and
and
cmp
mov
jo
test
cltd
shlb
int3
paddusw
stc
mov
sub
idivb
or
aam
out
lret
daa
insb
dec
adc
in
lret
adc
add
mov
mov
roll
mov
pop
loop
scas
mov
push
jae
dec
dec
or
scas
xor
xchg
mov
es
sub
inc
ss
outsb
xor
loopne
nop
xor
xor
fldcw
hlt
ss
adc
push
mov
std
icebp
sub
inc
adc
sub
jno
and
mov
pusha
push
rorl
pop
loope
inc
pop
inc
pop
sbb
mov
add
xor
ss
lret
fsts
push
sub
cmp
int3
mov
xor
outsb
ficoms
cmp
sbb
jg
or
js
arpl
dec
in
ja
icebp
sti
sub
inc
lret
push
js
and
xorb
gs
in
push
pop
mov
pminub
xchg
popa
cmp
rolb
lods
hlt
inc
add
pop
pop
filds
and
adc
dec
sub
push
mov
mov
jb
and
rorb
repz
les
orl
les
jmp
cmp
std
cmp
fnstsw
gs
sbb
aam
push
pop
mov
inc
insb
xor
repz
adc
sub
mov
cmp
cmp
mov
add
sub
pop
xchg
adc
push
enter
xor
bound
addb
out
lahf
stos
jo
mov
xor
mov
mov
mov
rclb
lock
insb
jg
mov
mov
jl
push
scas
adc
sub
push
mov
je
sbb
inc
gs
jb
dec
out
jb
movsl
orb
jne
push
cmpsb
sahf
or
adc
cli
js
jns
inc
xchg
mov
add
ficomps
testb
roll
loopne
stc
repz
pop
xor
out
mov
ja
adc
lret
jl
and
dec
rcrb
dec
scas
jmp
test
out
and
lret
jo
mov
dec
cmp
dec
inc
int
push
jl
add
in
lret
aaa
clc
in
pop
jnp
pop
pop
cltd
icebp
das
rcl
mov
jp
sub
and
fsubrs
lods
sub
inc
lcall
adc
add
cmpsl
and
pushf
cmc
outsl
les
das
sub
xor
xor
or
dec
imul
push
xchg
dec
js
jge
pop
jb
and
adc
in
je
jnp
mov
js
aaa
dec
lea
and
outsl
nop
and
out
insl
add
shll
es
push
dec
adc
ret
push
pop
stos
xchg
int3
int3
jbe
mov
outsl
xor
cmp
gs
push
xchg
adc
xor
push
dec
xor
mov
aaa
fwait
inc
out
inc
or
inc
lods
mov
mov
add
pop
sbb
movsl
lahf
push
jge
push
push
mov
mov
jge
sbb
push
sarl
iret
rcrb
fistps
jno
pop
dec
aas
das
imul
push
enter
int3
or
push
fnsave
sar
sub
mov
sub
pop
ret
jae
aaa
dec
ret
xchg
jge
xchg
xor
mov
mov
pop
jnp
pop
and
jbe
mov
xor
cmp
inc
inc
xor
rcl
mov
nop
outsl
stos
sbb
and
xchg
mov
loop
mov
in
insl
push
sub
jge
pop
jg
sub
dec
insb
inc
inc
lea
mov
dec
push
stos
scas
mov
or
cmp
inc
or
orl
cltd
idivb
jnp
std
mov
bound
mov
subb
hlt
jle
push
lret
mov
inc
mov
add
mov
paddsb
ja
mov
push
xorl
xchg
adc
dec
add
iret
and
fbstp
js
sub
xor
and
push
push
mov
pop
mov
mov
ret
cmp
sub
pop
adc
adc
btc
stc
je
mov
cmp
dec
es
int
rol
call
je
or
add
mov
jp
in
xchg
out
mov
xchg
pop
jmp
pop
fistl
mov
stc
lods
dec
and
mov
ja
sbb
adcl
inc
cmp
mov
cmp
in
pop
jg
lret
in
jg
adc
test
pop
cltd
xor
pop
scas
jecxz
cmpl
or
dec
cmpsb
in
call
dec
mulb
mov
jae
inc
xchg
or
stos
inc
sti
out
adc
sbb
fldt
inc
insb
inc
cwtl
push
or
cld
and
mov
xor
mov
scas
outsb
dec
inc
xchg
xor
push
cltd
inc
xor
jns
test
in
dec
cltd
sub
dec
mov
sarb
xor
sti
add
jmp
sbb
sbb
idivl
mov
mov
pop
pop
xor
es
sbb
jnp
xchg
adc
out
sti
push
lret
ds
inc
lock
jg
cmp
mov
sub
jg
mov
enter
lcall
pop
lds
sub
loope
sub
js
mov
pop
imul
stos
lahf
xor
xchg
add
xlat
xor
jge
shr
jne
pop
fwait
sub
lock
lret
cli
arpl
inc
mov
jns
xorb
dec
aad
xor
sub
inc
outsl
adc
lds
push
rep
into
cmpsb
pop
in
cwtl
mov
arpl
adc
inc
into
loopne
xchg
sub
mov
test
xchg
adc
sub
jmp
fistpl
sbb
stos
cmp
test
adc
insb
add
jecxz
int
in
add
pushf
xor
cmp
dec
lcall
pop
aam
lea
aas
cltd
andl
stos
add
mov
mov
cmp
xlat
out
enter
jecxz
pusha
inc
inc
lret
pop
mov
mov
and
ljmp
mov
les
mov
mov
in
in
or
repz
or
jns
pop
das
xchg
or
cltd
dec
mov
ja
jle
neg
xor
in
adc
xorl
and
stos
cmc
in
xor
ret
es
sbb
cwtl
repnz
scas
frstor
notl
stc
fwait
inc
icebp
mov
ds
push
stc
xlat
adc
dec
cmp
fstpl
add
mov
aaa
mov
pushl
jle
inc
dec
sbb
or
inc
mov
imul
fsubrs
jmp
cmp
xchg
movsb
js
imul
pushf
push
lock
adc
dec
scas
inc
lods
lahf
lahf
jnp
call
lcall
out
mov
ljmp
sbb
or
mov
subl
loop
adc
jmp
mov
pop
or
push
jl
icebp
cmc
xchg
sub
add
orb
in
roll
mov
int3
mov
iret
sarl
into
mov
xchg
dec
sbb
mov
or
mov
xor
loope
mov
jae
pusha
xchg
pushf
and
imul
lcall
std
insb
dec
jg
mov
push
fs
mov
into
push
ficoms
in
loopne
inc
fstpt
pop
adc
lds
into
lock
cs
jnp
mov
in
in
scas
pop
inc
test
inc
in
ret
and
inc
insb
imul
cmp
jne
dec
jns
rcll
sbb
inc
daa
ss
jmp
jns
aad
mov
inc
dec
mov
jle
aam
aam
aad
xor
sbb
sbb
push
mov
mov
lea
cmpb
xor
jecxz
xchg
sti
loope
out
fisttpl
fidivl
cmove
sti
push
jecxz
and
or
lea
jns
movsb
inc
bound
push
pushf
sub
or
test
lods
cld
call
sbb
pop
xorl
addl
aas
adc
daa
bound
pop
adc
cmp
dec
lret
push
mov
flds
testl
stos
xor
ficompl
js
add
xchg
imul
mov
aaa
mov
insl
lret
push
pop
cli
vmovaps
jecxz
fisubrs
scas
pop
push
imul
das
sarl
add
or
push
jne
or
mov
ficoms
scas
push
lret
mov
jg
je
fildl
data16
mov
mov
jp
pop
xchg
xlat
les
addb
jg
jnp
mov
andl
jno
scas
jl
lret
cli
cmp
mov
and
imul
cmpsl
data16
mov
jno
shl
fidivrs
int
adc
push
pop
push
adc
xor
out
jecxz
xchg
cmp
ljmp
jecxz
or
ret
jne
mov
mov
sbb
xor
mov
dec
stos
xchg
mov
cmp
dec
push
test
mov
pop
cmp
mov
mov
insb
xchg
inc
pop
mov
push
jmp
jp
mov
xchg
pop
call
adc
mov
push
neg
mov
mov
dec
mov
lea
and
pop
js
repnz
push
lods
mov
add
lret
add
adc
sahf
xchg
pushf
push
push
push
sbb
sub
cld
xchg
push
test
insl
mov
inc
push
addl
scas
fidivl
mov
mov
in
aad
stc
push
mov
adc
ret
sub
ret
fdivr
pop
ds
shll
in
push
pusha
or
dec
cmc
das
cmpsb
cld
icebp
inc
les
jle
mov
add
inc
rep
imul
cs
sub
inc
test
xor
insb
sub
roll
divl
loope
xor
xchg
stc
inc
leave
sbb
bswap
mov
dec
test
in
test
sbb
pop
or
cli
or
cmp
aam
jecxz
mov
repz
mov
pop
mov
mov
cltd
push
push
loop
dec
je
adc
outsl
vsqrtsd
js
arpl
repz
fsubl
repz
mov
aam
out
arpl
mov
push
sub
mov
lock
sbb
fistpl
mov
setne
int3
cmp
mov
dec
xor
leave
pop
int
cmp
loopne
lds
mov
out
adc
aad
roll
lcall
ds
mov
imul
roll
push
and
in
fdivr
movsl
js
in
or
sar
loop
icebp
mov
dec
pusha
sbb
cmp
cmp
mov
pop
push
test
xchg
xor
lcall
mov
push
pop
add
jmp
movsb
jno
adc
and
mov
adc
jne
pop
or
lahf
mov
lret
jl
insb
aam
jmp
xor
popa
jne
hlt
and
push
orl
andb
stos
in
lods
adcl
lock
mov
cwtl
cmp
inc
mov
inc
mov
jmp
pop
jg
xchg
arpl
or
mov
inc
pushf
add
gs
nop
das
mov
insl
cmp
sbb
sub
jle
neg
add
jle
sarb
adc
sbb
mov
jg
lods
mov
mov
lds
push
ljmp
adc
push
cmp
cld
ss
ret
mov
xor
mov
xchg
ja
push
add
mov
jns
fnstsw
cs
xchg
xchg
cmpsl
sbb
adc
stos
jae
jge
sbb
in
imul
aad
in
out
cli
into
xorb
pushf
rol
aas
dec
je
ret
fsts
mov
out
loopne
jl
xor
jecxz
loop
repz
mov
jo
push
adc
ss
fcoml
test
repz
in
bound
sub
fmuls
xor
icebp
dec
inc
gs
inc
xchg
test
int
test
cmp
pop
mov
outsb
test
aas
lea
std
and
dec
pushf
negl
cmp
mov
xorb
and
dec
insl
inc
movsb
out
add
mov
fisttpl
or
pop
add
pushf
lret
je
pusha
ss
out
dec
hlt
jp
in
jmp
movsb
daa
mov
or
popa
jae
jge
out
mov
mov
push
xor
jae
and
loopne
sbb
out
nop
mov
xchg
in
mov
rcrl
stc
jns
cmp
sti
clc
xor
xorl
xchg
inc
jne
fwait
xchg
scas
add
jle
ficoml
mov
repz
xchg
jnp
add
sub
xchg
mov
jnp
cwtl
fs
cltd
jne
inc
pop
fs
lret
repz
in
jne
mov
pop
inc
or
jbe
pop
scas
dec
dec
in
jno
sbb
leave
hlt
mov
aaa
fsubrp
daa
xchg
jp
arpl
jle
hlt
or
cmp
add
and
mov
stc
and
xchg
jecxz
add
les
inc
push
pop
mov
and
sbb
popa
cli
sub
std
repnz
aad
dec
mov
call
push
cs
inc
shr
js
xor
mov
xor
adc
out
sbb
shl
xor
mov
push
xchg
in
out
or
sbb
icebp
icebp
jae
add
in
sub
mov
sbb
push
and
and
aaa
push
and
mov
sub
repnz
mov
sbb
push
inc
sahf
in
cmp
out
jnp
pop
mov
add
outsb
xchg
sub
add
xchg
jmp
pop
cmp
adc
cmpsb
add
out
aaa
mov
push
les
and
aaa
pop
mov
popf
add
and
sbb
test
jmp
cmp
mov
cmova
cmp
mulb
jmp
sub
sub
pop
mov
mov
mov
fmul
bswap
xchg
sti
lock
jp
ljmp
ror
pop
sbb
into
and
push
pop
sub
out
mov
in
cmpsb
jnp
add
xor
and
notl
jae
ret
insl
cs
mov
out
notl
xor
cmp
jne
enter
test
cltd
repnz
mov
das
cli
xchg
mov
lods
xchg
jno
add
mov
mov
movsl
insb
incl
pop
ds
jo
rolb
mov
xchg
push
sbb
js
addb
cmp
inc
pop
and
cltd
ret
inc
pop
pop
test
add
jo
addr16
xchg
in
test
stos
popa
and
leave
dec
stos
or
or
leave
aas
cs
outsb
pop
mov
sbb
ret
cmp
icebp
leave
sbb
testl
dec
jle
mov
pop
push
repz
mov
jo
adc
int
es
and
scas
mov
out
mov
popa
test
icebp
sti
sub
push
ja
fldt
in
mov
lret
loopne
jno
loop
dec
and
jp
jecxz
es
or
mov
cmpl
xor
je
mov
or
dec
loop
sbb
mov
stos
roll
fwait
dec
aas
sub
mov
pop
sub
scas
dec
pop
sub
mov
push
clc
mulb
testb
jg
mov
test
inc
les
or
push
movsl
jns
xchg
jne
mov
xchg
ljmp
add
and
xor
jne
icebp
cli
test
ja
insl
into
pop
popf
sbb
dec
and
sub
or
sarb
mov
in
pop
sub
inc
xor
out
xchg
ljmp
in
in
inc
imul
int3
shrl
inc
and
mov
jno
je
jbe
add
les
int
in
call
loop
mov
push
push
fists
mov
into
adc
in
insl
out
mov
mov
jmp
sbb
adc
iret
iret
lret
or
test
sub
cs
lret
andb
out
fisttps
pop
mov
imul
cld
cmp
pop
loop
xchg
mov
mov
leave
out
sbb
in
movsl
mov
mov
addb
push
push
xor
ret
or
insl
pop
sub
push
cld
int
mov
in
dec
mov
clc
fstpl
xchg
shrl
cmpsl
js
add
std
arpl
dec
and
rcll
cmpsl
xlat
xchg
mov
mov
dec
push
hlt
cmc
enter
in
js
or
cmp
push
cwtl
mov
popa
jns
leave
mov
pop
rcr
test
das
testb
scas
fists
aas
inc
ret
test
pmullw
add
push
xor
in
jecxz
scas
push
jge
push
ret
pop
gs
das
shl
xchg
or
mov
add
cli
jno
imull
ficoml
adc
pop
lret
loop
mul
orb
shll
dec
fcomps
adc
or
jge
lds
push
test
mov
pop
mov
xor
jae
sbb
mov
lods
inc
lds
push
pop
pop
sub
les
fcmovnb
sbb
inc
in
fcomp
dec
xor
aaa
fnstsw
adc
cmp
dec
cmpl
dec
cmp
add
popa
arpl
movl
cmp
sbb
xchg
push
or
fidivl
jb
adc
xchg
arpl
out
mov
adc
int3
or
or
shll
call
vpsubw
pusha
fisttpll
fs
adc
jl
shrb
mov
js
mov
jg
sbbl
sub
mov
fimuls
pop
int
mov
jecxz
or
and
mov
sbb
mov
aas
pop
sub
lods
dec
jno
pop
in
mov
ret
sub
in
leave
imul
xchg
adc
icebp
out
bound
into
mov
lret
add
movsl
push
or
or
dec
lret
push
sub
push
adc
xchg
into
call
dec
jo
jecxz
mov
gs
push
mov
or
add
hlt
lcall
inc
enter
push
sub
and
dec
aas
lds
lret
add
jne
xor
add
push
adc
in
cmc
fisubs
movsl
rcrl
bound
jo
pop
mov
jg
mov
loop
fnstsw
sbb
xchg
jg
aad
dec
and
and
scas
pop
push
xor
mov
int
sbb
in
and
mov
lahf
fisttpl
sub
lret
inc
sbbl
xchg
dec
or
jp
in
in
xor
movsl
or
scas
test
jb
mov
jo
mov
jge
mov
sti
scas
jb
push
or
pop
xor
add
cmpl
mov
adc
call
sbb
xorl
adc
mov
or
mov
in
inc
outsb
push
testl
ljmp
in
sub
outsb
sti
push
jae
mov
jno
aaa
lods
adcl
cs
pushl
cmpb
mov
sbb
pop
inc
mov
mov
xchg
aam
inc
pop
cs
popa
jmp
aam
push
lds
push
mov
jle
sub
jle
test
enter
pusha
cmp
popl
xor
jl
repz
pop
mull
pushf
jl
cli
jmp
pop
and
cli
stos
std
movsl
or
aas
cmp
cmpsl
cmc
push
das
cmp
or
cmc
jbe
movsl
mov
stc
mov
push
movsl
cwtl
jle
or
add
dec
sub
xchg
aas
jnp
cmc
imul
adc
adc
insl
shr
xchg
jno
jecxz
and
push
test
gs
xor
mov
roll
add
dec
stos
fs
fdivrl
aam
mov
clc
fistpll
push
jmp
push
or
jle
fnstenv
insb
push
inc
push
scas
jle
dec
xchg
fwait
dec
xchg
sarb
dec
aas
dec
neg
out
mov
adc
ljmp
fdivl
lock
jl
movsb
sahf
and
clc
int
or
jp
arpl
dec
outsl
and
std
in
push
mov
and
incb
popf
inc
test
repnz
pop
test
clc
insl
popa
push
adc
add
cmp
or
leave
in
cwtl
scas
jmp
adc
pop
pop
pop
enter
test
xor
adc
bound
push
xor
cmp
aam
lcall
xchg
push
fldenv
or
or
push
cbtw
imul
mov
and
cmp
loope
cmp
or
mov
lock
movsb
lcall
pop
cmp
mov
idiv
insl
push
daa
pop
pop
mov
lret
andb
and
or
outsl
sub
out
xor
xorb
jne
push
push
sahf
les
dec
ds
xchg
das
lods
hlt
inc
mov
sar
fmulp
push
js
scas
das
cmp
push
push
xchg
mov
cmp
hlt
ss
jg
bound
lds
repnz
aam
int
and
movsb
pop
ret
stc
fcompl
cli
cmpsb
dec
decl
ds
aaa
mov
cld
mov
pop
clc
jge
mov
arpl
outsl
pop
dec
adc
addl
pusha
mov
pushf
rclb
addr16
aaa
xchg
cmp
pop
xor
cwtl
pop
stos
fs
arpl
jmp
lock
js
xor
xchg
xchg
push
mov
testl
dec
jo
adc
xchg
push
les
mov
sbb
mov
mov
jae
cltd
lock
cld
js
adc
fcmovu
int
nop
dec
out
nop
test
popa
cmp
push
mov
jmp
in
imul
and
lcall
sbb
int3
push
fld
sahf
pop
imul
leave
out
std
cld
inc
hlt
stc
mov
rolb
test
ror
mov
mov
mov
movsl
sbb
popf
insb
xchg
jl
sub
gs
mov
inc
mov
lret
in
dec
or
mov
leave
sub
push
sub
imul
scas
bound
jmp
inc
xor
arpl
dec
push
test
add
iret
je
add
std
insl
in
ret
aas
and
or
adc
jmp
jo
mov
into
mov
inc
arpl
mov
out
fdecstp
outsl
sbb
aam
mov
fsubrl
sti
inc
pop
shll
jo
test
js
pop
ja
call
jns
rorl
cwtl
insb
or
ds
lcall
mov
mov
push
scas
push
std
dec
adc
or
into
pop
movl
pop
out
jnp
insb
es
jne
out
inc
push
xor
icebp
dec
jo
mov
push
aad
xor
or
int3
add
pop
loope
mov
loop
push
iret
int3
pop
mov
cmp
xor
in
mov
inc
pop
je
xor
sbb
in
mov
imul
and
jne
push
lahf
iret
sbb
ret
in
push
ret
add
in
push
test
or
cmp
std
notl
jg
cmp
xchg
push
mov
xchg
xor
lret
or
mov
mov
add
pop
hlt
push
pop
mov
push
sbbb
jmp
mov
mov
inc
push
inc
pop
mov
cmpsl
add
xchg
inc
adc
into
add
xchg
fidivl
push
mov
push
adc
push
mov
pop
sub
scas
fcompl
in
jl
or
mov
popf
push
and
mov
aas
je
shl
xchg
add
sbb
gs
lds
or
dec
sbb
enter
pop
add
push
cmp
mov
imul
shlb
cld
out
movsl
sahf
lds
mov
or
pop
sbb
mov
repnz
addr16
fistpll
dec
jbe
pushf
ljmp
sbb
mov
scas
pusha
jg
push
jb
insb
out
mov
cmp
jp
sub
int3
sti
jns
jne
xor
lret
mov
adc
sbb
dec
in
leave
movsb
ss
ret
std
aas
cmp
jl
dec
mov
das
ficompl
dec
es
int3
inc
lret
std
push
mov
adc
and
loop
cmp
and
lock
imul
jnp
enter
adc
push
and
in
pop
repnz
xor
add
loopne
xchg
push
inc
xor
cltd
std
gs
repz
jns
mov
adc
imul
cmp
stos
inc
cli
xchg
inc
out
dec
cmp
imul
push
jae
addr16
aam
sbb
or
pop
xlat
testb
xchg
jno
divb
pusha
xor
fistps
pop
dec
lods
mov
clc
mov
mov
push
insb
mov
adc
adc
shl
nop
inc
sarl
or
or
jle
pop
ljmp
jne
and
push
test
jl
clc
nop
fsub
fsubrl
loope
cwtl
pop
loope
shll
sbb
dec
sti
cmp
cli
sar
jns
stos
sub
jo
or
xlat
add
lahf
icebp
push
mov
sahf
lret
jecxz
mov
fcompl
cmp
pop
inc
jnp
pop
jns
scas
mov
mov
insl
xor
fnstsw
add
mov
shll
xor
sbb
xchg
and
xchg
dec
xor
push
jg
xor
out
stos
dec
xchg
cmpl
sahf
xor
popf
jle
mov
notl
test
jle
pop
cltd
es
lahf
jge
dec
mov
int
popf
mov
mov
popf
push
xlat
test
dec
push
mov
fimuls
dec
out
add
fists
mov
mov
inc
in
gs
sub
pusha
sahf
inc
lock
insl
cltd
aad
mov
out
cmpsb
sub
mov
jno
or
lcall
dec
idivl
ljmp
push
test
repnz
adc
add
or
dec
dec
push
mov
ss
pop
adc
push
lods
outsl
inc
leave
pop
xlat
xor
inc
fucomi
mov
insl
and
add
xchg
pop
xchg
in
aam
mov
sbb
daa
sbb
in
ljmp
nop
scas
and
loope
pop
jno
orb
push
insl
insl
in
sub
pushaw
repz
and
hlt
jp
insl
aam
sbb
stos
scas
jns
repnz
push
push
in
or
xor
insb
scas
sbb
mov
mov
xor
fnstenv
mov
test
lret
and
andb
xchg
cli
jg
cmp
and
cmp
pop
lcall
dec
jns
lret
push
rcl
shll
stos
pop
add
jmp
push
xchg
inc
dec
cmc
xor
fwait
out
stc
int
mov
mov
cmp
cmp
mov
cmc
cmpsl
jno
xchg
xchg
outsl
jnp
and
in
and
sbb
iret
pop
and
mov
mov
dec
fildll
lahf
shll
orl
int3
jle
sub
andb
xchg
ret
stc
or
mov
lock
ja
push
lds
cmp
sbb
ja
xchg
repz
clc
dec
adc
jecxz
inc
jns
bound
mov
pop
dec
fisttpll
mov
sbb
mov
adc
lahf
mov
jp
lcall
mov
mov
push
nop
hlt
mov
test
mov
jo
xor
sub
or
sbb
popa
and
iret
pop
cmpsb
inc
lcall
inc
scas
scas
mov
fwait
test
cs
or
dec
inc
fsubs
and
les
dec
popa
ja
js
jns
loopne
int3
pop
dec
add
xor
fisubrl
inc
nop
jo
bound
into
push
sbb
addl
sbb
les
ret
xchg
mov
xorl
adc
push
cli
add
ret
sub
jb
xor
add
sub
dec
das
repz
ror
pop
xchg
push
xor
add
nop
enter
mov
or
out
sarb
pop
cmp
fadds
int
push
shll
adc
and
adc
pop
lret
dec
pusha
mov
mov
pop
dec
lret
mov
out
xchg
mov
mov
enter
int3
iret
push
adc
ja
lea
jbe
mov
jne
clc
sbb
add
lret
mov
cmp
cmpsl
adc
movsl
inc
mov
cmp
lcall
lods
popf
sbb
fdivr
and
lea
pop
test
data16
cmpsl
cmp
ficomps
or
ret
add
mov
lock
fcompl
xchg
fwait
xor
and
notb
xchg
mov
adc
out
je
insb
ret
mov
test
push
jnp
add
sub
xchg
adc
nop
jg
push
sub
fstp
daa
sub
adc
fs
add
lcall
pushf
scas
lea
adc
ja
stos
imul
adc
or
xor
mov
pop
stos
push
sub
sbb
and
sbb
sbb
push
dec
mov
lret
push
clc
nop
xchg
mov
lcall
inc
mov
inc
mov
ret
pop
lret
cmc
shrb
into
lea
mull
mov
or
xchg
imul
sub
sbb
jmp
pop
outsb
inc
cld
popa
sbb
dec
jns
mov
int
jle
out
lea
cltd
js
out
inc
sti
ja
cs
jo
lods
fcmovnu
jnp
push
outsl
adc
inc
aaa
inc
aaa
dec
cmp
add
jo
int
cmp
mov
mov
das
adcl
lds
shrb
sbbl
into
xchg
les
cltd
dec
pusha
mov
push
mul
xor
in
imulb
ds
lds
mov
mov
push
insl
mov
iret
ss
and
mov
mov
sbb
mov
or
ljmp
jg
shll
out
sbb
notb
out
int
pop
pop
fs
ja
stos
mov
ffreep
popf
fildl
cs
jecxz
jbe
adc
lock
xchg
jmp
cmpsb
outsl
xlat
out
popa
inc
jns
out
or
fcomps
add
cmp
mov
pop
pop
or
xchg
in
jb
sub
scas
imull
in
jno
mov
cmpl
std
push
in
movl
jle
xchg
test
fildl
outsb
adc
fxch
jl
jne
xchg
sbb
sub
pop
ret
or
cmp
shll
stc
cs
jo
xor
mov
out
bound
push
mov
les
outsb
js
mov
xlat
shlb
jns
and
add
sbb
push
mov
and
mov
xlat
movsb
std
lods
add
loopne
mov
jp
ljmp
or
loopne
ljmp
mov
pop
xor
test
mov
xor
mov
mov
inc
push
aam
inc
and
or
mov
or
mov
je
loope
xchg
mov
test
rcll
and
ljmp
lret
mov
cmc
add
lds
les
imul
fimuls
stc
add
add
inc
repnz
cli
and
jns
in
insb
sub
xchg
xor
xchg
pop
iret
jge
add
dec
fs
dec
movsb
mov
test
sbb
xor
pushf
rclb
ljmp
in
sbb
imul
sub
or
popf
inc
inc
cmp
fmull
push
sti
int
xchg
and
data16
shl
sbb
mov
stc
loopne
mov
inc
cmp
cmpb
fists
xor
test
pop
hlt
int3
mov
push
clc
inc
daa
xor
xchg
outsb
idivl
lret
sbb
shlb
daa
inc
out
push
ljmp
fisubl
shll
add
pop
jmp
faddl
out
push
out
sub
dec
sub
pushf
add
loope
xlat
mov
les
inc
xchg
inc
gs
cmp
mov
addr16
jb
cwtl
popa
xor
and
jl
sbb
shrl
imull
adc
pop
popf
ljmp
pop
pop
call
inc
mov
repnz
sti
call
jg
mov
cmp
mov
lods
add
xchg
addr16
push
mov
add
cwtl
or
fisttpll
mov
mov
loope
xchg
enter
pop
adc
xchg
adc
clc
cmpsl
stc
xor
in
leave
sub
leave
sysret
aad
add
pop
ds
imul
cld
and
dec
add
pop
daa
test
lds
test
fwait
loop
ja
sub
mov
inc
adc
lcall
adc
popa
js
fisttps
cmp
icebp
pop
in
hlt
popa
js
inc
test
mov
lret
mov
jns
out
jo
mov
sbb
jecxz
xor
mov
mov
popa
out
cmp
mov
mov
fs
jo
inc
adc
jns
int3
lahf
lret
decb
sbb
mov
into
dec
icebp
inc
jns
jg
push
cmp
jns
sub
inc
sbbl
imul
jg
add
inc
loopne
dec
out
lret
and
in
mov
and
mov
cmp
jns
sarb
inc
jmp
or
loop
mov
dec
gs
mov
cmp
and
jb
mov
pop
test
adc
adc
lret
test
push
ror
fisubrl
mov
movsl
pop
mov
out
nop
pop
jg
mov
dec
ret
adc
dec
testl
sahf
testl
push
test
mov
dec
std
jae
xchg
mov
leave
push
pusha
loopne
es
push
push
mov
das
mov
push
aad
mov
out
mov
rolb
ret
or
out
mov
dec
inc
pop
int3
sbb
stc
mov
jge
aad
cli
mov
mov
daa
add
rolb
test
test
add
icebp
cmpl
jecxz
ret
jae
push
jae
add
jae
jns
xlat
cmp
inc
es
jmp
mov
rolb
pop
jecxz
sbb
cmp
gs
sub
out
or
out
pop
call
ss
adc
mov
adc
ds
cmp
push
loopne
dec
pop
push
and
jmp
sbb
pop
pop
dec
repz
dec
stos
xchg
jnp
cmp
sub
or
mov
into
adc
outsb
jae
je
pop
mov
int
and
out
mov
inc
je
vunpckhpd
xchg
fimuls
mov
jb
in
cld
scas
lods
inc
popa
mov
mov
test
enter
mov
adc
fsubs
and
sub
and
loope
push
data16
shlb
add
es
pop
and
sbbl
int
arpl
push
push
xchg
jno
std
fldt
or
imul
mov
test
xor
andb
cmp
roll
cmc
icebp
cmp
xchg
shr
mov
xchg
jbe
push
aaa
mov
addr16
test
lcall
pop
imulb
push
in
sbb
addb
sub
sahf
mov
cmp
scas
test
mov
sahf
fsubl
lea
jno
xchg
and
xlat
iret
jle
mov
in
and
arpl
adc
pusha
and
iret
push
jle
xor
mov
arpl
sbb
outsb
int
xor
pop
fs
sub
or
negl
pop
xchg
sub
sub
push
clc
adc
loope
in
jbe
insl
cmpsl
dec
test
inc
lahf
or
or
adc
push
pushf
out
xor
pop
mov
pop
and
fldt
test
or
in
fdivs
jo
fisttps
dec
mov
stos
enter
fsubr
cmpsl
jmp
int
addr16
fsubrl
decl
mov
lods
test
xor
cvttps2pi
or
lock
push
mov
sub
js
sbb
pop
lret
sub
pop
cmovb
imul
push
xchg
mov
pop
xor
jae,pt
fwait
pushf
xor
aad
xor
icebp
mov
and
inc
pusha
xchg
mov
mov
fisubrl
pusha
cmp
mov
les
in
inc
mov
mov
lahf
sarb
sub
push
call
lods
test
push
inc
out
push
xor
pop
xchg
decb
pop
addr16
cmpsb
mov
lds
mov
push
mov
xchg
sbbl
rclb
mov
or
mov
popf
mov
jb
add
sbb
rcrl
movd
mov
fwait
push
lds
fprem
adc
nop
jmp
mov
in
xlat
jae
jg
sbb
sub
push
push
lret
gs
inc
pop
and
or
sahf
and
insl
dec
ficoms
leave
sbb
cmpsl
jecxz
jae
cltd
das
les
jnp
mov
shrl
sbb
jecxz
dec
cmpsb
mov
push
andl
xor
das
loopne
stos
jecxz
xchg
aas
dec
adc
sbb
in
push
sbb
pop
scas
mov
pop
add
pop
fst
push
cmc
cs
jno
sub
cmp
sbb
mov
sub
ret
xchg
xchg
fsubrs
insl
mov
loopne
push
stos
loop
clc
lcall
ja
xchg
push
sbbl
add
push
jne
cli
mov
orl
inc
popa
jnp
popa
jno
jb
insb
sub
lea
loopne
add
cmp
fimuls
add
stos
mov
cmp
fimull
dec
mov
xor
ret
cmpsl
fcomi
push
mov
jns
dec
mov
clc
insb
and
stc
movd
pop
fcmovbe
inc
in
xchg
fiaddl
shr
mov
jbe
push
dec
jo
in
jne
sbb
pop
cmp
lcall
push
jl
jg
mov
rclb
or
xor
cmp
ret
add
pop
xor
dec
call
adc
cwtl
adc
movsb
pop
pushf
sbb
pop
push
sbb
mov
dec
mov
lahf
xor
sub
fidivrl
int3
and
addr16
jl
jle
dec
and
push
rcrl
std
addr16
mov
cmp
and
cli
in
imul
inc
rclb
popf
arpl
cmc
pop
and
xorb
adc
pop
shlb
test
sarb
into
loop
ficoml
pop
test
and
inc
jle
sub
sbb
shlb
add
mov
ret
adc
adcl
call
lods
jae
je
aam
inc
and
test
ret
dec
cmp
icebp
clc
test
mov
mov
adc
add
inc
xchg
jb
inc
push
pop
mov
gs
inc
sbb
jg
mov
dec
xchg
sub
inc
pop
cmc
cwtl
out
jns
out
mov
add
sub
fdivs
push
xor
cmp
adcl
repnz
mov
lock
mov
lds
xor
xor
pop
ror
jecxz
pop
rcrb
pop
lret
mov
loope
sbb
lahf
pop
cmpb
rcll
sahf
mov
push
lret
xor
or
push
jbe
repz
xor
sbb
imul
inc
bound
jo
inc
push
dec
and
into
add
pop
mov
jo
and
loope
mov
inc
xlat
lret
pop
ror
adc
pop
lea
outsl
imul
pop
adc
xchg
inc
sbb
mov
inc
mov
mov
jmp
and
push
es
sub
push
xchg
shrl
pop
mov
ret
mov
not
pop
sbb
fstl
js
in
mov
imul
rclb
lahf
das
sarb
shll
push
out
jg
pop
jbe
xor
lret
bt
and
fwait
inc
inc
mov
jns
sbb
adc
les
js
lea
stos
xchg
dec
or
bound
fstl
lock
fwait
lret
gs
jmp
inc
sub
xchg
dec
or
mov
jo
xchg
clc
or
hlt
cmpsb
sbb
adc
cmp
fs
cmc
hlt
cwtl
sbb
insl
lods
int
jne
lock
popa
nop
xor
adcl
daa
in
pushf
mov
cld
add
jne
imul
adc
ljmp
inc
adc
rcrl
push
dec
jae
shrl
add
push
insb
insl
rcrl
xchg
xor
sub
xor
les
imul
scas
lret
jle
dec
pop
add
pop
shlb
cmpsl
mov
jp
cmpsb
adc
fidivrl
mov
mov
lret
loopne
movsl
or
mov
adc
insb
xor
and
push
movb
pop
lret
subb
inc
insb
cmp
mov
and
loopne
das
aaa
pusha
jecxz
dec
ret
cld
adc
inc
fbstp
mov
lock
dec
sub
pushf
xlat
cmp
and
ret
popf
xchg
popf
jge
mov
lret
repz
mov
shl
scas
lahf
clc
in
jo
xchg
nop
mov
pusha
add
outsl
sbb
sub
clc
arpl
cmp
mov
ljmp
jge
push
icebp
push
mov
push
dec
stc
mov
jg
rcr
adc
data16
fnstenv
test
xor
mov
cltd
cmpsl
jnp
sub
lcall
push
adc
insl
mov
aas
scas
add
mov
pop
dec
mov
fnsave
scas
rolb
sbb
sbb
or
jae
cmpsb
push
mov
inc
jle
js
xlat
cli
mov
adc
jle
add
push
dec
sbb
push
cmp
sti
lahf
jo
gs
and
or
jne
stc
fistpll
mov
test
shll
fcomps
mov
xchg
movsl
push
mov
cs
addr16
test
cli
fstpt
stos
mov
es
or
xchg
mov
mov
cmc
xor
mov
pop
aam
cmc
cli
or
sub
cmpsb
push
adc
in
out
mov
imul
imul
out
adc
push
pop
xor
cmp
sbb
cmpsb
addb
ja
bound
push
or
sub
lock
jl
inc
xchg
jmp
jge
mov
xchg
test
or
repnz
rcrl
cltd
xchg
pushf
lods
enter
aas
mov
ljmp
pushf
sub
xor
adc
daa
and
jp
jp
lahf
fisttps
repnz
sub
cmc
shl
pop
add
xchg
xchg
mov
ja
cmp
inc
and
pop
icebp
push
repnz
cmc
sub
push
push
pop
incb
aad
leave
jle
dec
pop
and
sti
sbb
dec
fstps
call
add
sbb
out
adc
out
add
push
cs
iret
cmp
inc
clc
xor
adc
pop
jl
inc
punpckldq
scas
aaa
andb
push
xchg
jbe
loope
jle
xchg
call
mov
arpl
push
cmp
cmp
xlat
pop
imul
jg
jle
pop
ret
inc
xor
inc
mov
xor
xor
mov
dec
push
sar
dec
sub
xor
adc
shl
pusha
cmp
pop
outsl
jne
sbb
leave
mov
push
mov
cmpsl
bound
test
cmp
call
movsl
cmp
popl
jg
arpl
std
xchg
lcall
rol
jle
dec
xorb
cld
and
imul
clc
add
test
aaa
xor
xchg
les
pop
lret
leave
sub
or
js,pn
aaa
das
in
repz
clc
ja
ds
stos
enter
daa
dec
push
popa
jns
cmpsl
mov
pop
or
rcll
sbb
subb
loopne
mov
sub
lcall
or
mov
mov
xchg
jle
mov
inc
xor
push
push
mov
icebp
push
lock
cwtl
arpl
or
enter
jecxz
jns
aad
in
cmp
jl
repz
lock
imull
or
pusha
iret
mov
test
mov
out
in
or
loop
inc
lret
xor
jo
insb
xlat
aam
hlt
shll
jo
push
mov
shll
push
xor
mov
sub
fildl
dec
in
shll
orb
and
xchg
mov
and
testb
mov
in
mov
or
dec
jno
popa
bound
mov
jbe
inc
add
add
popf
dec
repz
shrb
orl
push
jo
insl
mov
mov
mov
inc
mov
xchg
fnstsw
loope
mov
jno
pop
ds
inc
push
cmpsb
stos
lock
movsb
jmp
lret
lods
dec
push
aad
jo
lock
jle
xchg
push
aaa
fs
xor
mov
insb
pop
repz
out
js
sahf
cmp
xchg
mov
push
or
or
outsb
loope
xchg
daa
movsl
clc
mov
iret
lret
movb
mov
sub
pop
pop
cwtl
into
fimuls
mov
in
sbb
cmc
push
mov
push
outsb
push
xor
rcrb
adc
fdivl
adcl
je
inc
push
mov
push
mov
fsubrl
pop
xchg
sbb
cmpsl
adc
addl
loop,pn
sub
fsubr
and
mov
xchg
push
jecxz
push
sbb
add
lahf
mov
pop
adc
mov
es
mov
xlat
popf
mov
cmp
xchg
push
xor
mov
add
cli
fwait
in
loope
les
jae
pop
pusha
je
fstp
or
es
sub
mov
adc
insb
aam
jnp
mov
add
cs
pusha
int
jge
xchg
xchg
popf
mov
int3
pop
out
sbb
push
pop
fimuls
push
repnz
rorb
inc
lock
mov
xor
push
clc
aad
loopne
fwait
out
insb
arpl
dec
in
pop
je
xlat
orl
sub
orl
aam
xor
aaa
lret
mov
push
mov
es
xor
mov
rcr
inc
enter
jg
mov
jbe
add
js
adc
into
xchg
fstps
dec
push
mov
or
or
je
fmuls
add
dec
daa
mov
outsl
stos
sub
loope
xor
out
add
mov
jmp
jb
dec
pushf
cld
or
push
lods
or
cmp
cmpl
and
xchg
xchg
mov
dec
out
adc
addb
popf
mov
inc
popf
inc
push
mov
in
inc
pop
adc
xor
test
mov
inc
lods
sbbb
jge
add
pusha
test
dec
sub
aas
fld
mov
leave
sub
pop
adc
into
mov
pop
or
into
out
inc
addr16
mov
xchg
bound
sbb
sbb
push
rol
loope
push
cwtl
les
or
mov
add
or
shl
cs
push
pop
and
jmp
ja
pop
andl
adc
jmp
add
int
movsl
imul
sti
mov
cmc
lods
mov
push
adc
jb
cmpsb
arpl
push
pop
jge
xor
or
fsubs
inc
mov
add
and
test
cmp
cmpsb
jne
ds
jns
adc
xor
aam
hlt
mov
inc
cmp
mov
inc
mov
fldcw
cmc
cli
sar
repz
faddl
add
loopne
and
cmpsb
add
clc
ret
in
jno
enter
cld
cmc
repz
sbb
into
xchg
cmp
clc
inc
mov
int
dec
xlat
cmp
shlb
ds
pushf
add
in
hlt
push
lods
std
jne
jns
sub
xchg
pop
addr16
inc
stc
movsl
enter
jnp
into
add
cld
cmp
mov
add
and
cmp
xchg
imul
and
jne
xor
jno
or
je
int
ja
pop
add
sub
jno
pop
bound
or
mov
dec
loope
push
xchg
mov
mov
pop
xchg
movsl
sbb
or
jo
xchg
xor
sub
insl
pop
cmp
or
and
mov
cld
call
mov
enter
jmp
ja
mov
pop
sbb
inc
sbb
sbb
rolb
outsb
cmp
jb
mov
sbb
in
and
and
fldenv
add
stc
and
xchg
aad
jbe
pop
sbb
mov
jne
cmpsl
loopne
sbb
lock
cmpl
outsl
faddl
sub
dec
and
mov
ljmp
sub
test
pop
jb
sarl
and
pop
mov
mov
cmp
ss
bound
xor
cwtl
inc
stos
or
pop
push
leave
cltd
sar
fucomi
scas
sbb
movl
sbb
xor
test
bound
push
fstps
inc
lcall
imul
sahf
lahf
inc
inc
test
add
fstl
and
daa
sbb
sub
sahf
testl
and
push
decl
push
jbe
jae
push
js
sub
xchg
xchg
fcomps
cmp
addr16
cmp
imul
sbb
jl
fidivrs
les
cwtl
lea
mov
out
test
pop
lahf
xchg
clc
fs
pop
jg
cmpsw
shl
mov
bswap
sahf
filds
rcr
cmp
mov
arpl
repnz
es
xchg
add
mov
pusha
and
icebp
fsubr
xchg
sub
adc
push
push
in
jge
cmp
push
cmpsl
ljmp
lock
rcll
insb
outsb
loop
and
shrb
aaa
scas
mov
lahf
aas
bound
pop
lret
xor
sahf
xlat
data16
sti
cmp
sub
dec
add
adc
sbb
pop
pop
adc
dec
in
sub
inc
jae
inc
out
shrb
dec
push
lds
ljmp
or
test
xor
sbb
sbbb
movsb
aad
cmc
icebp
ljmp
push
jle
inc
cli
jno
dec
mov
xchg
jne
mov
sbb
loopne
lods
jge
xchg
cld
insb
push
popf
mov
sub
aam
cltd
repnz
pop
fisubl
xlat
push
clc
pushf
dec
mov
pushf
adc
fildl
les
add
pushf
cmp
cmp
and
adc
cmp
adc
add
rcl
pop
gs
imul
ja
mov
mov
fwait
pop
dec
inc
in
and
pop
jp
dec
hlt
incb
lahf
jl
ficomps
pop
jge
aad
lahf
pop
ret
sbbb
scas
mov
add
int
addr16
ret
adc
sub
outsl
or
lcall
fistpl
mov
pop
xchg
stc
cmpsb
stc
xchg
ret
push
adc
loope
dec
mov
push
shl
cmpb
add
dec
push
xchg
mov
sbb
pop
jle
lock
inc
aam
xchg
sbb
lcall
aas
fmul
in
pop
or
xor
push
data16
pushf
out
mov
sub
and
add
movsb
pop
and
sbb
mov
xor
sbb
popa
rorb
adc
push
rclb
push
ss
subl
xchg
pop
ficoml
pop
xchg
lods
and
es
cld
icebp
fwait
mov
sti
sbb
push
mov
sbb
lahf
cmp
shrb
mov
dec
jecxz
fsubs
imul
push
lods
cltd
int3
add
jle
and
adc
aad
mov
scas
cwtl
movsb
movsl
inc
push
mov
or
pop
fbstp
jg
jns
in
mov
rcll
dec
pop
adc
fisttps
rorl
imul
or
arpl
dec
pop
xchg
in
pop
testl
jp
inc
fcmove
inc
push
pop
outsb
je
or
push
scas
roll
sti
sbb
cmp
cmpsb
pushf
mov
ja
pop
insb
insl
lea
or
lahf
test
je
fsubrs
and
push
mov
out
mov
push
stc
repz
mov
icebp
add
xlat
insl
add
jp
imul
inc
insl
loopne
mov
push
popa
inc
mov
insl
pushf
sub
or
mov
gs
cwtl
int3
adc
shr
mov
cmpsl
xchg
adc
pop
repz
scas
pop
fs
fwait
jmp
fcmovne
test
std
mov
cld
shrl
adc
sbb
aaa
dec
sub
pop
add
out
in
cs
fs
mov
mov
xchg
sbb
pop
movsb
adc
cltd
rolb
dec
gs
inc
test
je
pop
push
jg
xchg
sbb
or
adc
movsb
cmp
hlt
mov
and
push
cmp
add
imul
xor
test
or
sbb
dec
mov
push
xchg
orl
xchg
xadd
aas
inc
mov
dec
adc
negb
aad
shrb
xchg
iret
in
jne
scas
pop
test
mov
sub
into
sub
dec
push
jo
adc
dec
sbb
cmpsl
clc
lcall
sbb
std
push
pop
dec
mov
test
push
jge
int
sbb
sbb
sub
adc
sub
or
std
jp
jnp
push
std
sub
pop
mov
and
or
shr
popa
xchg
in
sub
adc
sbb
std
inc
inc
pop
xchg
movl
xlat
add
and
shll
xchg
mov
fisttps
es
jl
sub
in
mov
stc
popa
mov
push
lcall
mov
pop
mov
aas
pop
dec
hlt
fistpll
jle
and
lea
fwait
jmp
fisttpl
sbb
push
int
out
mov
inc
sbb
mov
adc
dec
shl
jp
pop
sbb
inc
sub
call
aam
adc
mov
enter
add
add
xchg
xchg
out
ljmp
jns
adc
push
mov
loopne
popf
lcall
cwtl
sbb
enter
push
insb
sbb
pop
cltd
mov
aas
les
pushf
arpl
or
outsb
dec
push
mov
sub
ficompl
dec
jo
mov
enter
push
xchg
shr
jge
pop
add
cmp
hlt
aas
mov
repnz
aam
adc
jnp
xchg
mov
adc
pushf
jb
je
push
mov
js
push
pop
mov
or
cmc
sbb
dec
mov
inc
rcll
aaa
and
mov
mov
or
pmulhw
inc
cmc
insl
adc
cmp
lret
pop
mov
cwtl
inc
xor
mov
mov
outsb
dec
orb
fiaddl
call
in
cltd
arpl
lods
rcrb
or
push
jbe
mov
push
jno
jl
or
out
rclb
or
mov
lea
xchg
ja
push
dec
cmp
push
adc
lock
int3
decl
cli
sti
cmp
xor
les
movsl
push
mov
cmpsl
fiaddl
js
stos
push
inc
mov
dec
mov
inc
mul
insl
dec
cltd
mov
sub
js
mov
and
push
lret
jnp
fadd
lock
and
push
cmpsl
sbb
mov
cmp
fimuls
stos
out
sub
and
out
inc
pop
in
out
push
ret
cmp
pop
std
sbb
mov
sbb
mov
mov
stos
inc
sub
lods
mov
lcall
cltd
xchg
xor
push
sti
rcr
insl
push
sbb
ficoms
sub
jge
cmpsb
mov
aam
pop
ja
ja
or
push
pop
dec
cmp
push
loop
jb
jg
test
insb
xlat
lods
sti
and
or
push
adc
adc
sbb
cmp
mov
push
in
idiv
iret
pop
test
pop
test
sub
jo
sbb
test
dec
lock
lock
in
adc
stc
lret
imul
and
ss
cwtl
loope
pop
xchg
mov
jge
jl
push
testb
test
fwait
cwtl
out
stos
sbb
imulb
ja
sub
roll
pop
fwait
int3
fiadds
dec
mov
mov
pop
jmp
mov
pop
aaa
sub
inc
jl
lahf
insl
push
xchg
push
shll
fsubrs
cmp
mov
imulb
and
pop
sbb
pusha
push
or
mov
add
lahf
stos
cmp
lock
ret
insb
cmpsb
into
jmp
push
aaa
sbb
dec
adc
inc
push
sbb
pusha
or
pushf
push
popf
sub
nop
jno
jne
sbb
int3
icebp
rorb
sbb
out
in
jmp
mov
lock
add
push
mov
dec
sti
sahf
pop
stos
adc
jl
pop
nop
nop
int
jne
xchg
sbb
aam
pushf
arpl
xchg
cwtl
or
cwtl
push
pop
and
adc
xchg
inc
fcmovu
in
dec
imulb
outsl
lds
pop
jecxz
cmpsl
mov
lock
sub
bound
or
leave
pop
sbb
cmovle
aam
and
lret
sub
in
jae
repz
in
sub
aam
hlt
sub
xor
dec
out
pop
mov
loop
pop
xchg
scas
jg
sbb
jge
sar
mov
or
xchg
jg
arpl
push
ja
cmpsl
cltd
insl
fs
fistps
loop
cmc
xor
mov
add
testb
ficompl
and
adc
jmp
cmp
jb
das
negl
stc
js
insb
dec
inc
jge
pop
stos
adc
jge
push
insl
data16
pushf
insl
lret
cltd
pop
add
lahf
outsb
mov
mov
push
and
mov
popf
inc
vmovups
cli
push
fsts
fwait
and
iret
jno
sti
add
stos
lds
pop
cld
xlat
es
mov
mov
cmpsb
or
cmp
xchg
adc
js
jnp
popf
clc
call
imul
xchg
lea
in
jge
and
cvtpi2ps
stc
or
xor
lret
pop
icebp
iret
iret
or
adc
dec
imul
test
ljmp
mov
push
cmpsl
stc
adc
jle
test
psubq
and
jge
cmp
bound
push
xor
jp
inc
add
in
daa
jecxz
add
leave
mov
popa
cwtl
cli
or
sti
daa
rorl
mov
repnz
mov
mov
push
leave
push
inc
push
int
and
jae
jl
cmp
lea
add
jle
lret
icebp
push
rorb
fldt
sbb
test
pop
push
add
scas
xchg
cld
pop
mov
and
jbe
pop
jnp
lods
lods
sbb
sahf
jae
mov
inc
xchg
push
sbb
xchg
fists
punpckldq
and
push
mov
sahf
mov
stos
cld
sbb
imul
mov
fimull
cmpsb
icebp
or
cmp
adc
mov
add
push
call
cltd
or
hlt
outsb
xor
rcr
mov
lcall
int
xor
testb
dec
mov
pop
xor
int
adc
push
mov
stos
or
adc
insl
sbb
leave
lds
jge
push
arpl
cmp
mov
pop
dec
arpl
and
dec
mov
pop
or
mov
cs
sarb
pop
jl
jae
sbb
je
in
sub
jmp
mov
jne
mov
out
jbe
setnp
stos
sbb
jle
jecxz
lret
lcall
fs
and
lock
xchg
sub
and
sbb
jb
shll
icebp
add
dec
mov
add
mov
lret
dec
push
and
popa
movsl
addb
inc
and
adc
std
enter
leave
mov
cmp
movsl
lds
fcmovne
lcall
jle
addr16
daa
add
lods
inc
dec
add
push
loopne
nop
movups
mov
adc
sub
jle
push
stos
lcall
mov
pop
and
lods
inc
enter
aam
jge
or
lock
mov
fildll
mov
cwtl
mov
pop
sti
lock
fnstsw
sub
es
pop
jbe
sbb
push
fcom
mov
and
out
sub
arpl
inc
out
nop
adc
fimuls
inc
push
and
out
ja
imul
lods
out
inc
push
jecxz
xor
in
lea
pop
loope
jp
xorb
loopne
or
xor
sub
loop
push
outsb
test
jge
sub
nop
and
enter
je
inc
mov
sti
add
jae
add
pop
push
or
out
pop
xchg
int
xlat
and
fdivr
push
xchg
mov
imul
mov
lahf
movsl
cmp
cld
popa
in
notb
dec
aaa
xchg
push
mov
adc
adc
adc
arpl
mov
pop
and
push
mull
testb
popf
ds
sbb
lods
vmwrite
dec
shlb
fmuls
frstor
jle
xchg
fimull
ja
mov
cwtl
sti
pop
cmp
scas
xorl
cmp
sbb
pop
flds
aam
repz
push
cmp
popf
orb
pop
inc
inc
mov
bound
fisttpll
mov
in
and
cmc
outsl
or
decl
xchg
bound
out
xchg
mov
add
jg
in
pushf
int
lcall
pusha
dec
cmpsb
nop
fiadds
xchg
sti
pop
outsb
pop
push
push
inc
int
clc
ror
jecxz
mov
fwait
dec
mov
mov
insb
or
ret
nop
add
add
pop
int
mov
pop
fidivrs
dec
cmp
mov
out
in
inc
mov
fnsave
jns
or
bound
sbb
arpl
fstpt
outsb
nop
rolb
lods
pop
pop
inc
clc
imul
inc
push
add
adc
jno
fildll
xor
mov
enter
lods
popa
or
lcall
mov
out
fmulp
clc
push
adc
sub
push
divl
add
cwtl
and
fistpl
cmp
test
xchg
mov
js
cmc
ficomps
pop
sbb
inc
cltd
ja
xchg
pop
cmp
push
mov
dec
push
fidivrs
test
jmp
cmc
or
mov
and
jmp
add
arpl
mov
test
dec
xchg
ja
cs
xchg
call
push
xchg
push
or
xor
jne
repnz
dec
sbb
movsb
adc
xchg
and
lods
xchg
test
mov
or
in
xchg
cmpsb
lcall
imul
data16
lret
nop
scas
mov
mov
out
mov
je
mov
sbb
clc
sub
jmp
or
bound
data16
pop
inc
iret
cmpl
sarl
outsl
enter
mov
push
leave
into
pop
lds
jecxz
push
hlt
ds
ljmp
loopne
popa
sbb
dec
das
inc
and
aam
testb
lcall
or
ret
rorb
or
push
std
lea
mov
jp
fcmove
xchg
sub
in
fmuls
xchg
out
push
add
ret
and
push
cwtl
jp
pop
jg
push
ret
popa
mov
xor
or
jb
cmp
xor
add
mov
mov
and
mov
cld
pop
push
ret
xor
sbb
push
and
out
inc
or
decl
pusha
jmp
daa
sahf
and
jns
cld
pavgb
pop
adc
cmp
mov
aam
jae
jecxz
mov
subl
test
pop
inc
jmp
mov
pop
fsubl
out
iret
mov
push
lock
in
lods
pop
sti
or
mov
cmp
movsb
inc
rcl
mov
mov
loope
ds
addr16
stos
jle
imul
ja
bound
mov
dec
jg
sbb
inc
mov
lahf
mov
stc
cmp
xchg
adc
imul
xchg
mov
outsb
cmp
out
insl
mov
fisttpl
xchg
faddl
fistpl
stos
leave
xchg
stos
and
jecxz
ljmp
xlat
lcall
xchg
movsb
or
push
dec
subl
lea
sti
cs
and
xchg
xchg
xchg
sbbb
add
xor
sbb
and
xchg
js
xchg
lods
jg
sbb
jecxz
sbb
push
adcl
int3
les
xor
sub
icebp
dec
xor
es
mov
and
and
in
pop
inc
lahf
inc
bound
scas
out
sub
add
aas
les
mov
and
inc
orl
mov
jg
clc
jmp
test
enter
imull
mov
cmp
or
insl
test
adc
inc
xchg
cmp
jnp
cltd
loopne
jmp
mov
dec
pop
addr16
adc
cmp
out
lock
and
lcall
xor
loopne
outsl
stos
into
stos
dec
out
nop
or
add
sahf
inc
xor
add
insb
lret
dec
in
adc
aad
in
dec
je
fnstcw
jmp
cmp
dec
push
in
jne
push
loope
andl
push
div
mov
xchg
lds
aam
push
pop
es
in
je
cmp
add
ret
dec
insl
hlt
dec
in
cmp
xor
pusha
jo
add
dec
xchg
jge
je
xchg
das
mov
sub
inc
cwtl
cmp
mov
repnz
fdivrs
insl
xchg
or
scas
pop
js
pop
xor
xchg
dec
jmp
addr16
dec
test
in
mov
jp
pop
insb
test
out
outsb
adc
push
out
cs
lcall
jo
jno
pop
sar
lcall
sub
adcl
je
fsubs
add
mov
or
cmp
push
dec
and
pop
imul
rcll
xor
sub
js
push
subb
cmp
jnp
add
rorl
cmp
rolb
fwait
rcrl
loope
in
inc
sbb
das
mov
ret
mulps
loop
push
or
pop
test
lret
mov
push
add
lods
fistl
inc
push
outsl
inc
test
scas
jbe
int
dec
lahf
jmp
popa
loopne
and
jne
test
adc
inc
shlb
les
daa
dec
cmp
and
pop
negb
sbb
xor
sub
cmp
mov
faddl
dec
aam
add
cld
pop
mov
mov
jbe
mov
mov
push
notl
popa
cli
mov
out
in
sbb
xchg
aaa
jns
and
loop
add
xchg
cmp
dec
inc
or
dec
mov
loop
fcom
mov
push
sti
popf
imul
insb
int
mov
mov
popf
jge
mov
loop
fiaddl
cmpsl
les
xor
js
or
notb
jnp
or
cmp
fidivs
mov
std
and
mov
xchg
mov
test
test
gs
incb
lcall
and
lret
sahf
inc
mov
decb
pop
xchg
jnp
mov
push
imul
xchg
rcrl
mov
cmpsl
jbe
mov
shlb
nop
mov
sarb
adc
pop
shll
stos
cmpsl
lcall
test
jo
fwait
out
push
lock
lea
movsb
rorl
in
push
aam
hlt
lret
dec
jle
lods
pop
pop
mov
movlps
dec
push
in
push
lock
out
gs
mov
mov
test
ljmp
repnz
add
inc
pop
xor
sub
daa
pop
inc
nop
mov
jle
enter
mov
mov
pop
mov
andl
scas
stc
and
mov
scas
adc
add
cmp
push
lea
movsl
adc
lahf
repz
xchg
scas
add
mov
add
test
or
das
out
lahf
int
out
adc
addb
jle
push
add
push
mov
push
lcall
cmp
mov
addr16
adc
scas
in
cmp
or
int
shrb
jbe
call
shll
loop
leave
loopne
push
push
xchg
imull
jmp
and
pop
cmp
mov
jne
adc
push
sti
out
jp
mov
jae
jle
aaa
pop
test
call
daa
mov
rorl
int
jo
nop
sahf
pop
adc
adc
pop
jns
adc
jns
les
cltd
shrb
inc
mov
inc
jno
aas
ret
outsl
mov
insl
in
inc
stos
mov
enter
cmp
addr16
out
add
pop
loop
gs
mov
add
pop
xorb
inc
into
push
fidivs
xchg
rcrb
leave
loopne
inc
cmp
into
test
aaa
jae
stc
dec
sub
inc
fistpll
je
repnz
lret
add
inc
cmp
jbe
divl
jbe
dec
pop
jecxz
adc
sti
push
mov
cwtl
popf
test
sub
jl
cmpsb
mov
sbb
xor
xor
cld
push
pop
cmc
xchg
inc
dec
jnp
leave
mov
push
sub
into
fimull
pusha
sub
clc
cmp
cltd
adc
idiv
mov
fwait
mov
test
jg
mov
out
ja
mov
and
mov
ret
notl
push
stos
ror
push
xor
in
test
jno
sbb
xchg
cmpsl
cmpsl
divb
fidivs
in
sbb
mov
lds
sbb
sar
jmp
adc
cwtl
xor
jno
lods
mov
loopne
lods
clc
mov
cltd
xorb
icebp
sub
pop
lea
lea
and
loope
movsb
outsl
pop
push
test
divl
pop
imul
cld
lret
ja
jp
jno
imul
in
jno
movsl
push
lcall
mov
ljmp
mov
test
sub
shll
or
cmp
xor
and
pusha
cmp
pushf
add
mov
xchg
xor
pop
dec
sbb
add
xor
fwait
jnp
add
xor
fldl
or
and
sub
jg
mov
icebp
dec
std
les
adc
ja
push
cli
aam
push
loopne
inc
js
fdivrl
xor
cli
mov
repnz
jb
js
xchg
int
sub
cmpl
data16
mov
loope
cmp
pop
inc
lds
or
pop
divl
inc
pop
stos
int3
and
sub
pop
sbb
pop
or
ds
xchg
mov
or
in
xor
in
dec
mov
and
outsb
mov
lea
stc
repz
das
dec
iret
sbb
aam
int
and
mov
inc
ret
arpl
jmp
dec
mov
add
nop
movsb
sub
aas
loop
pop
xor
mov
cld
sarb
or
mov
fdivrl
mov
std
pop
insl
aas
fwait
into
add
mov
mov
jb
jmp
adc
dec
mov
lret
pop
scas
addb
xlat
lret
aad
mov
pushf
enter
cmp
inc
je
mov
adc
add
add
cmpsl
mov
push
ret
lods
dec
ficompl
mov
lcall
mov
nop
cmpsl
xchg
mov
fstpl
mov
xor
jmp
pop
outsb
inc
cmp
and
and
mov
mov
xor
push
push
lea
add
cmc
mov
push
adc
xchg
sub
add
hlt
add
repz
mov
out
cmp
jmp
insb
mov
out
and
mov
testl
daa
xor
ds
orl
jne
sbb
xchg
mov
mov
pop
test
movl
dec
push
shl
cmp
lcall
jl
add
movsl
push
mov
xor
sarb
fs
cmp
ja
out
test
in
sub
add
add
jnp
lahf
aad
or
push
sbb
repnz
xlat
or
fcoml
dec
mov
hlt
xchg
or
clc
dec
fs
dec
mov
xchg
test
jge
icebp
cli
sub
jae
and
scas
out
imul
cmp
jge
bound
xor
inc
push
push
mov
mov
movsb
sub
lock
and
mov
and
mov
out
sar
adc
imul
lcall
xor
mov
out
mov
mov
jne
mov
cwtl
sub
jge
dec
inc
addl
inc
sbbl
and
inc
or
insb
xor
push
loopne
in
movsl
jnp
aam
inc
inc
imul
jo
dec
push
jmp
add
shr
pop
or
xlat
or
popa
loopne
add
decl
push
mov
lock
das
push
test
pop
pop
push
pop
mov
add
cmpb
push
xlat
dec
mov
mov
lods
push
push
pop
mov
data16
pusha
push
popf
bound
int3
inc
and
jne
addb
sti
inc
add
mov
stos
push
stos
ror
cli
fisubrl
scas
adc
push
les
dec
jb
adc
fiadds
jmp
dec
mov
scas
mov
ja
add
cmc
xor
mov
mov
roll
in
outsl
sti
sbb
cs
pop
mov
das
test
jo
and
stc
jge
inc
pop
mov
leave
shl
sbb
xchg
loopne
sti
aaa
xchg
adc
cmpsb
fstpl
ja
xchg
and
adc
shlb
idivl
jo
jbe
das
int3
lcall
iret
inc
mov
bound
es
es
jno
icebp
out
cs
into
shl
lock
sarl
int3
fcoms
test
xlat
add
xor
stc
inc
xchg
pop
lcall
sbb
stos
cmpsl
inc
stos
in
sub
dec
push
xchg
dec
xlat
pusha
pop
rcrl
enter
pop
xchg
sub
or
negb
cmp
dec
in
jmp
bound
aam
adc
sahf
cld
add
ss
mov
jecxz
fdiv
in
les
stos
inc
cli
jns
mov
mov
sub
push
and
adc
test
cmpsl
je
jae
adcb
adc
icebp
bound
push
xchg
sbb
lock
ljmp
or
adc
mov
pusha
adc
enter
bound
cmp
and
out
pusha
ja
sub
jecxz,pt
mov
mov
xor
or
sbb
test
mov
in
jne
sub
inc
xchg
insb
dec
mov
jecxz
lret
push
add
fldl
cmp
mov
and
adc
mov
addl
dec
sub
jne
cmpsb
stos
sub
mov
jne
loopne
xlat
mov
sti
ljmp
sbb
cmpsb
add
fstpt
out
inc
push
xchg
cli
push
outsb
shr
mov
mov
adc
es
in
adc
in
inc
mov
idivl
mov
cmp
push
scas
sahf
lcall
inc
stos
js
mov
test
lock
or
sbb
adc
in
lret
in
popf
mov
and
mov
mov
stc
shll
out
lcall
daa
adc
mov
adc
loop
ret
inc
dec
loopne
push
mov
enter
push
out
ljmp
xor
popa
mov
iret
stos
push
cwtl
es
ja
fwait
or
inc
enter
sahf
std
and
pusha
mov
or
out
ljmp
dec
lahf
sub
sub
mov
cmpsb
mov
inc
rcrl
push
sub
inc
pop
shl
sti
cmc
out
jmp
mov
lods
sub
aam
adc
cmp
pop
test
add
mov
pop
shrl
dec
xor
mov
adc
out
je
mov
in
bound
out
mov
and
pop
cmp
negb
mov
sbbl
rol
test
xchg
mov
in
mov
scas
jb
iret
mov
cmp
pusha
mov
lcall
and
jl
mov
adc
out
pusha
dec
adc
orb
lret
and
in
cmp
sub
scas
fdivrs
xor
jbe
jae
push
lods
shl
stc
jle
bound
subl
aas
pop
int
fsubs
or
call
pop
rcrl
test
xlat
push
int3
loop
arpl
test
push
xchg
lods
ljmp
inc
ret
mov
mov
ficompl
les
mov
add
js
fld1
sub
and
in
in
dec
in
lods
and
int
ss
cmp
pop
push
hlt
adc
jb
std
jg
and
or
fildll
jl
js
ss
cld
test
pop
sub
mov
stc
rorb
sub
dec
hlt
movsb
jp
ret
ret
pop
mov
jno
nop
and
roll
inc
test
xchg
and
push
push
add
lods
scas
ja
cld
xlat
arpl
mov
fisubrl
inc
test
shrl
aas
shll
sbb
repnz
push
fwait
fprem
dec
out
fmuls
call
xor
ljmp
outsl
pop
jp
xor
sub
xor
cmpsl
sbb
in
mov
out
movsb
jbe
ja
scas
rcl
daa
std
shlb
cmp
sub
xchg
lcall
push
jnp
push
cld
mov
add
icebp
imul
mov
imul
sub
repz
xor
push
cmp
xchg
and
int3
mov
ret
mov
ret
out
dec
sahf
sub
mov
push
xor
pushf
popa
stos
mov
cmp
dec
dec
cltd
cmpl
sub
loopne
enter
stc
xlat
dec
iret
fdivr
xor
fdivrs
repnz
cwtl
es
lahf
dec
jmp
push
pop
aam
data16
outsb
xor
imul
cmp
and
mov
lods
ret
mov
fisttpll
push
mov
fs
ds
jno
adc
add
jmp
fimuls
push
xchg
push
or
dec
fdivrl
das
push
dec
cwtl
add
cmp
fdivrl
shlb
pop
lods
mov
iret
mov
fnstcw
js
mov
xchg
and
sub
push
ret
pop
jbe
int3
jmp
jnp
sahf
outsb
push
push
cmp
add
or
xchg
pop
lcall
mov
fldenv
insb
jbe
add
leave
imulb
in
sub
sub
ret
hlt
cmovp
shll
cmpsl
lock
dec
add
lret
int3
sbb
mov
jecxz
and
out
xor
cs
xchg
sub
or
idivb
orb
mov
inc
dec
dec
sub
adc
push
les
btr
add
cmp
xchg
mov
mov
ljmp
cmp
push
ss
fsubs
bt
jecxz
mov
iret
xchg
mov
push
cli
sbb
mov
out
lahf
dec
xchg
arpl
mov
push
orl
cmpsb
les
add
les
insl
out
test
mov
orl
jae
test
scas
and
call
jmp
jecxz
lahf
jg
ja
cmp
jmp
lret
push
and
or
cld
lock
shll
and
popa
test
push
es
out
adc
xchg
orl
sbbb
fnstenv
out
mov
sub
push
mov
mov
pop
js
cwtl
xchg
mov
sti
sub
mov
roll
mov
pop
in
jne
add
xchg
fdivrs
mov
add
mov
jl
inc
les
mov
daa
pushf
rcll
sub
and
mov
cmp
incl
jno
fcmovb
push
jmp
mov
jmp
cmp
sub
jb
xchg
add
push
cmp
out
call
arpl
inc
jmp
sub
add
fbld
nop
lea
inc
retw
into
je
imul
jb
inc
loop
dec
mov
addl
scas
and
xor
pop
adc
ljmp
movsb
push
jge
int
xchg
pop
and
das
or
xchg
call
data16
out
inc
mov
cs
jbe
mov
pop
pusha
js
mov
fld
jmp
xor
mov
mov
daa
mov
jno
inc
cld
js
or
lret
mov
jmp
mov
adc
cmp
and
push
scas
clc
lcall
xor
or
pop
or
jb
bound
xlat
mov
jbe,pn
fnstcw
int3
arpl
scas
mov
idivb
sbb
sbb
rorl
fs
push
push
sti
mov
mov
jl
jle
push
nop
mov
lret
mov
and
adc
push
pop
cmp
jns
or
or
imul
dec
in
xor
xchg
push
push
lret
sbb
addl
inc
mov
enter
push
adc
lods
jnp
jle
in
push
cwtl
loop
xlat
lret
shll
pop
das
or
dec
sub
lahf
mov
push
mov
ljmp
lahf
jae
ds
xchg
stos
loop
mov
iret
daa
jnp
xchg
out
mov
ss
cli
inc
lcall
pop
inc
sbb
or
in
xor
loopne
mov
mov
push
mov
or
aaa
jle
xchg
hlt
or
mov
int3
pushf
inc
xor
add
jg
push
fistpl
pop
dec
insb
in
and
stc
nop
jecxz
sbb
or
pop
jle
or
idivl
repz
test
cmp
inc
lret
mov
push
fsub
call
xchg
popl
mov
scas
and
jmp
sbb
jmp
outsb
dec
imul
xor
orl
dec
js
sub
out
adc
insb
cmp
mov
xor
sub
pop
lods
jp
scas
negl
lods
imul
imul
fisubl
loop
jb
pop
mov
addr16
repz
iret
sbb
xchg
sub
fldl
cmp
lret
sarl
cmp
loope
pop
addr16
pushf
outsl
fdivrs
in
sub
das
and
push
jg
cmp
push
mov
sti
and
mov
pop
add
ja
mov
adc
inc
or
pop
xchg
mov
arpl
rorb
inc
cmpsl
hlt
imul
jb
adc
imul
lods
push
js
imul
mov
dec
jno
cs
in
push
fbstp
lret
shll
leave
push
lock
imul
mov
pop
test
and
std
sbbb
aam
push
insl
cmp
xchg
dec
imul
loopne
push
push
nop
inc
sub
cld
rol
xchg
inc
shrb
cld
sub
sbb
cmp
push
jne
and
mov
aam
jg
mov
pushf
push
icebp
xchg
dec
xor
mov
dec
pop
inc
adcl
jp
call
lods
jb
cmpsb
inc
lods
push
cmp
xlat
ja
in
xchg
repz
aas
insb
leave
fwait
xchg
test
les
pop
or
rolb
out
hlt
lea
mov
inc
mov
repnz
jbe
add
jmp
out
jno
xor
mov
call
sti
ret
out
test
sub
dec
movsb
sbb
inc
shll
and
stos
or
hlt
push
iret
mov
lret
aaa
cmp
sbb
add
iret
stc
adc
xchg
and
push
mov
aam
or
in
inc
cltd
jl
dec
inc
fsubs
jg
mov
or
pop
adc
rorl
xor
xor
xchg
or
es
pop
stos
je
in
and
mov
cs
mov
xor
je
cmpsb
xlat
cmp
pusha
in
inc
sbb
sbb
mov
mov
jbe
pop
jp
jge
cmpsb
aas
pushf
cmp
jne
or
xchg
pop
or
sub
pop
mov
xor
imul
jne
lods
push
test
adc
int3
jo
add
pushf
out
sbb
jmp
loop
andl
pusha
cmp
inc
out
jns
int3
mov
fildll
scas
fbld
mov
sbb
jo
ljmp
cmpsl
fnstsw
cmp
adc
into
xchg
int3
dec
mov
jns
pop
adc
sub
pop
push
jo
dec
pop
jecxz
and
loopne
repnz
incb
popf
dec
add
mov
xchg
bound
out
inc
repnz
insb
mov
inc
xor
mov
out
or
sbbb
add
pop
fs
cmp
jge
bound
addr16
pop
push
jbe
pop
cmc
or
shlb
inc
scas
mov
and
push
imul
xchg
cmp
ja
mov
pushl
enter
cmp
and
cmp
sbb
out
fcmovnb
xor
jl
xchg
jo
scas
push
push
ljmp
scas
dec
ficoms
cmp
mov
inc
rorl
bound
mov
cwtl
xchg
inc
xor
push
and
fs
push
inc
pop
pop
mov
push
and
icebp
jmp
iret
xchg
icebp
aad
stos
xorb
cmpsb
ds
fmuls
mov
scas
imul
xor
daa
sqrtps
rcrl
push
std
test
jl
mov
imul
mov
add
sub
pop
push
imul
ficomps
pop
ret
pop
mov
cmp
xchg
fnstenv
lahf
push
mov
pop
sub
dec
sbb
movsl
sahf
out
aaa
mov
js
push
cmpb
cwtl
xor
jle
hlt
lods
fiaddl
cmpsb
mov
push
insl
sbb
push
dec
aas
cmc
into
mov
push
sbb
xchg
hlt
lods
mov
mov
cld
fisttpl
mov
and
dec
jmp
jnp
fcomi
jae
jecxz
inc
adc
sbb
mov
outsl
jmp
push
push
jb
fs
gs
sub
dec
xor
mov
mov
stos
mov
xorl
sub
jecxz
and
mov
fcompl
je
inc
push
xchg
and
mov
or
ret
xchg
fiaddl
daa
mov
adc
xlat
cwtl
jns
cmpsb
int
clc
and
pop
jp
adc
jbe
test
aad
xchg
lahf
dec
out
ss
popf
push
in
mov
cmpb
mov
and
scas
pop
lock
ss
out
les
loopne
xlat
inc
lcall
int3
jge
and
add
movsl
mov
pop
mov
in
add
fmulp
or
sub
lds
les
leave
bound
adc
cltd
cltd
in
jns
lock
data16
aam
les
cli
jbe
adc
jle
out
cli
int3
nop
stc
mov
push
ds
add
mov
pop
ss
ret
sbb
mov
push
scas
inc
imul
push
add
sbb
bound
inc
mov
cmp
jbe
xor
jbe
and
jae
aaa
movsb
sbb
mov
xor
xor
dec
mov
mov
sub
aam
loop
or
sbb
in
sub
fdivl
jmp
or
mov
adc
push
sub
fmulp
pop
pusha
ds
sub
fabs
pushf
and
std
add
js
repnz
mov
fstpt
bound
mov
jmp
stc
je
in
neg
adc
push
movsl
iret
cltd
mov
inc
mov
adc
rclb
lahf
sbb
fisttps
pop
dec
leave
or
mov
mov
xchg
imul
pushf
xchg
dec
adc
lahf
and
lea
sahf
stc
out
fistpl
jns
or
stos
aas
or
loop
lret
inc
loop
sahf
hlt
addr16
or
stc
push
jae
mov
cltd
fstpt
loope
mov
jg
arpl
mov
or
andb
in
scas
stos
cwtl
sbb
sub
fisubl
movsl
pop
push
mov
pop
push
test
stos
mov
and
sub
mov
adc
add
xchg
xor
inc
push
sub
xchg
fdivrs
daa
sbbl
cld
out
repz
mov
add
xchg
cmc
scas
push
mov
aad
xor
dec
idivb
mov
xlat
in
pop
das
in
pop
mov
sub
mov
insb
mov
in
bound
sar
push
jg
dec
mov
dec
addr16
scas
fistpl
push
lret
loopne
fnstcw
stc
xchg
xlat
adc
add
stos
movsb
mov
lods
test
outsb
adc
or
movb
pop
jnp
sub
or
in
loop
mov
mov
nop
mov
cld
in
adc
ja
inc
fcomps
inc
jmp
insl
xor
mov
sub
mov
push
sti
cmp
imul
ds
and
jmp
daa
add
jne
pusha
inc
add
popa
fbld
movsb
add
rcl
add
mov
and
lea
xchg
in
dec
rolb
insb
adc
pop
out
das
xor
pusha
jbe
push
jne
mov
inc
repz
mov
mov
shr
test
leave
test
cld
das
jo
sub
sahf
rorl
popf
mov
nopl
orb
jne
xchg
mov
or
mov
lods
aad
jp
dec
das
mov
pop
add
lods
push
mov
insl
or
shlb
jmp
jne
nop
addr16
movsl
adcl
cli
sbb
inc
movsb
daa
jns
xor
xor
testb
sub
mov
cs
cmp
scas
sti
sub
push
cwtl
pop
xor
cmp
dec
or
xor
cmp
les
xchg
jecxz
inc
inc
add
sub
dec
test
jp
mov
repnz
jno
jl
out
idivb
leave
aad
mov
or
bnd
cmc
in
movsb
fisubrl
adc
fsubrl
iret
pop
aas
sub
xor
into
in
in
negl
sti
fwait
bound
into
sahf
jns
es
filds
loop
xchg
sar
fwait
push
sub
popf
lcall
sbb
mulb
dec
je
lods
into
sub
cmp
andl
cltd
pop
in
in
nop
sbb
adc
fs
mov
iret
cld
sbb
pop
pop
xchg
push
ud2
test
inc
scas
js
rcl
loop
scas
sub
cmp
enter
mov
sti
or
cld
mov
jl
jns
mov
not
out
ja
test
mov
in
outsl
jnp
xor
rolb
stos
sub
and
push
out
xchg
pusha
out
lods
cli
mov
push
dec
xchg
insl
mov
push
mov
dec
mov
cmp
mov
std
adc
bound
fcmovb
dec
test
fbstp
sbb
jne
xor
push
lea
cmp
jo
xchg
sti
aam
repz
jae
rorl
mov
ja
sahf
jne
pop
push
in
mov
nop
or
mov
mov
xchg
pop
xor
test
int
ss
repnz
adc
ficomps
ret
rorb
pop
xor
jp
dec
mov
dec
outsb
scas
mov
cmc
cmpsb
pop
add
adc
stos
shl
jnp
daa
dec
inc
or
xchg
dec
cmc
dec
test
cli
inc
in
cmp
out
stc
ja
jecxz
add
dec
outsl
mov
daa
invd
in
dec
sbb
xor
pop
cld
and
or
fwait
lar
mov
sub
pop
nop
andb
rorb
pop
orb
in
dec
mov
jl
pop
add
mov
cmp
test
pop
xchg
fisubs
or
xchg
repz
and
push
sahf
xor
popf
mov
ret
mov
push
push
in
dec
ret
das
cwtl
jecxz
push
cmp
stos
orb
mov
rol
mov
out
pusha
std
add
jns
fmul
popa
mov
sub
outsb
and
inc
or
je
adc
dec
dec
jge
lods
lods
adc
sub
or
sub
aas
fsubr
jns
insb
inc
cmp
fstl
decl
cmp
dec
fdivrl
fisubrl
je
sbb
fistps
jae
mov
and
aad
mov
stos
test
flds
addr16
notb
mov
pop
mov
mov
push
scas
dec
mov
add
ja
jecxz
orl
fwait
ss
jle
stc
inc
jg
cmpsl
sub
and
jge
inc
outsl
jmp
shrb
aam
sub
mov
repz
out
sbb
iret
rcr
push
and
jne
jb
js
pop
js
mov
jecxz
stc
call
sbb
mov
inc
fs
scas
stos
adc
clc
stos
call
es
jbe
dec
push
jns
sbb
out
push
mov
test
lahf
mov
jnp
in
stos
lret
mov
push
ja
and
and
dec
inc
push
fidivs
adc
sub
cld
adc
sub
ficomps
test
dec
add
mov
out
inc
nop
loopne
mulb
xor
fdivl
repz
test
add
cmc
cmp
inc
mov
ficompl
inc
scas
push
cmp
sahf
dec
jmp
jmp
mov
lds
into
mov
dec
cmp
das
xor
lcall
in
mov
inc
inc
jg
aaa
es
ljmp
push
jbe
jne
and
adc
add
insb
sub
mov
sub
ljmp
dec
aam
and
cmpsl
nop
or
mov
jg
cmp
test
lods
fldt
sbb
mov
or
xchg
pop
out
stc
or
ret
push
push
scas
loope
adc
mov
sbb
into
out
inc
sub
adc
fistl
cli
jp
lret
jl
sbb
stos
out
mov
mov
pop
dec
push
sub
pop
lds
mov
or
lods
mov
cltd
push
xorb
push
inc
and
push
stc
add
sarl
mov
or
jne
ds
lods
sbb
insl
jp
mov
adc
inc
movl
movsb
negb
xchg
pusha
ror
jae
test
push
int
data16
push
and
js
dec
popa
add
mov
push
jl
cmpl
out
xor
add
daa
or
std
lcall
daa
jbe
sub
ficomps
sbb
or
dec
in
aas
and
dec
sub
clc
or
ret
push
imulb
push
mov
inc
push
out
leave
imul
or
xchg
or
push
sbb
cmp
jbe
icebp
pop
stc
lret
mov
push
mov
call
les
xchg
jmp
shll
lods
mov
jb
lea
mov
xlat
cli
mov
das
push
lcall
sarb
xor
add
pop
mov
adc
scas
or
or
jne
push
add
lret
lret
jo
push
icebp
cmpsl
mov
cmp
lods
mov
pop
xchg
push
pop
sub
jge
nop
jl
mov
mov
pop
cmp
pusha
push
scas
negl
jno
je
mov
jbe
mov
push
xchg
mov
test
popa
sti
jecxz
xchg
out
lea
aas
mov
loop
lret
push
jle
jge
ret
loopne
mov
and
pusha
repz
rcrb
jbe
sub
xchg
and
cmc
add
cld
pop
dec
push
cmp
enter
in
mov
fdivp
fldl
xchg
fs
jno
adc
or
sub
arpl
fdivl
sbb
adc
ret
testl
stos
dec
les
ret
jno
mov
jb
dec
ljmp
pushf
repnz
mov
scas
jbe
into
jo
icebp
mov
push
out
mov
mov
pop
leave
jmp
and
shl
rcl
pop
and
dec
in
adc
sbb
addr16
push
shrl
jg
cmpsb
or
lret
dec
out
cmpsb
dec
dec
and
cmp
jl
dec
shll
xor
hlt
push
fisttps
ja
jno
les
sbb
aas
inc
je
add
movsl
repnz
stos
sahf
pop
cmpsl
cli
ficoml
addr16
jno
aas
sub
loop
inc
xchg
in
push
js
sbb
jae
mov
add
sbb
jb
lods
push
addr16
jns
shll
xchg
sbb
adc
push
aas
sub
stos
mov
repz
jle
xor
popf
mov
loop
stc
mov
pop
addb
movsl
mov
dec
popa
xor
aam
into
leave
inc
insl
mov
int
addr16
fs
dec
inc
rol
jg
push
mov
dec
xchg
mov
cmc
inc
stos
xorb
or
pusha
jns
popf
inc
fdivl
xchg
orl
or
das
mov
sub
mov
mov
xchg
aam
cmp
cmp
jp
ret
push
mov
jl
jl
mov
mov
or
cmp
jmp
movsb
leave
cmpb
les
je
stos
loopne
sub
mov
ljmp
in
aas
adc
pop
lods
fisubs
fcmovb
lods
adc
pop
cltd
filds
and
adc
scas
or
or
out
jg,pt
cmc
pop
pop
scas
mov
mov
js
data16
jecxz
out
xchg
add
pop
push
jecxz
fcom
jl
test
mov
mov
jg
fld
inc
mov
cmp
jns
mov
andb
js
gs
cwtl
adc
xor
xchg
cmp
stos
iret
sbb
rorb
leave
fists
pop
or
dec
push
pop
mov
push
and
das
push
lcall
dec
hlt
xor
xchg
leave
scas
loope
and
pop
aas
test
push
sbb
inc
stos
imul
push
fldt
dec
iret
loope
cmp
xchg
xchg
jb
outsl
scas
push
jle
sbb
loope
push
push
jbe
pop
mov
lods
out
xchg
std
inc
mov
push
das
leave
adc
mov
jmp
push
les
repz
jle
jmp
sbb
lcall
or
scas
outsb
and
pushf
pop
pop
or
repnz
fadds
test
xchg
lret
fwait
sbb
imul
loop
jo
in
pushf
loopne
sbb
sub
and
int
xchg
sahf
jle
fldenv
add
ss
scas
mov
mov
lods
addr16
loop
out
sbb
enter
imul
push
dec
je
sub
and
add
in
pop
lds
mov
popl
out
mov
push
mov
add
xchg
xchg
mov
jb
das
movsb
int
int
pop
mov
in
mov
idiv
cmp
xlat
jo
xlat
call
sahf
add
xor
rcrb
mov
fsubrp
aad
cmp
scas
or
out
pop
stos
movsb
aaa
xor
push
scas
loop
mov
mov
loope
leave
cli
ja
add
mov
pusha
out
daa
xchg
adc
mov
lahf
adc
int
lcall
mov
inc
cli
inc
pop
out
scas
insb
cmpsb
dec
movsb
enter
test
pop
test
sub
andl
mov
enter
xchg
mov
mov
loope
and
xchg
jp
pop
aaa
cli
jo
in
and
icebp
inc
insl
lea
insl
mov
scas
sahf
pop
and
inc
and
jl
addb
ja
outsb
sub
push
xchg
pop
mov
sbb
aaa
ret
xor
sahf
xchg
mov
enter
into
cmpsl
mov
jne
mov
subb
adc
lret
xor
or
mov
pop
ret
je
hlt
push
push
and
mov
inc
xchg
xor
in
inc
mov
dec
sub
cmc
sbb
inc
cmpsb
lods
dec
pop
and
mov
push
pop
in
in
iret
stos
push
int
cmc
and
pop
in
loop
cmc
and
cmp
dec
out
bound
inc
add
push
stos
sti
pusha
imul
cmc
ss
mov
cwtl
fmuls
mov
sub
and
cmp
fbstp
jecxz
inc
test
push
inc
out
jnp
out
dec
fcomps
cltd
out
ficomps
aaa
jg
pop
inc
mov
cmp
xchg
hlt
cmpl
dec
sbb
jl
push
cli
xchg
ljmp
xchg
adc
cmp
out
daa
inc
pop
xchg
mov
into
fcmovb
mov
mov
or
les
push
loope
push
add
jbe
pop
aas
jb
sub
and
shlb
xorb
dec
add
mov
push
fs
and
push
mov
mov
pop
fs
inc
decl
push
xor
pop
adc
fs
cs
mov
fisubl
scas
stc
jmp
xchg
sub
and
in
jecxz
ret
inc
shl
std
dec
xchg
adc
outsb
cwtl
lock
fs
push
lods
fcompl
bound
out
cld
aam
sub
mov
adc
or
lods
sbb
addb
pusha
loop
jno
xchg
punpckhdq
in
aam
icebp
hlt
add
jecxz
mov
push
cltd
cmpsl
xchg
in
outsb
jo
mov
mov
stos
imul
xor
push
loope
and
mov
adc
in
out
cmp
hlt
loopne
lahf
xor
mov
adc
leave
sbb
imul
call
sub
stos
fbld
je
fnstsw
rep
imul
std
adc
mov
push
sbb
mov
push
sbb
add
push
and
sbb
push
lret
imul
aas
lods
mov
xor
push
shrb
pop
push
inc
mov
xchg
pop
dec
nop
imul
jle
cmpsl
pushf
movsb
xor
pop
or
out
mov
xor
inc
adc
mov
jle
fwait
pop
adc
inc
cmc
adcl
loop
in
dec
mov
push
fs
dec
jge
mov
imul
xchg
mov
ror
fdivl
and
sbb
adcb
sti
fdivs
add
addl
jg
inc
or
and
inc
and
aad
dec
fdivrs
sub
scas
sbb
daa
xchg
push
lds
or
jae
stc
sub
nop
and
xor
into
les
insb
std
add
jecxz
sbb
call
adc
movsl
pushf
aad
pop
or
xchg
roll
mov
mov
sub
sahf
orl
mov
xchg
cmp
clc
inc
mov
inc
add
and
ds
push
ret
mov
mov
push
cs
in
dec
mov
and
and
pop
sub
add
mov
push
xlat
mov
cvtdq2ps
out
push
insl
sub
sbb
mov
movsb
push
sti
cmpsl
lods
and
outsb
outsb
xchg
sar
mulb
fisttpl
push
ljmp
lock
popa
cltd
push
xchg
jl
lods
test
adc
push
pop
add
nop
into
xchg
aas
pushf
gs
pop
adc
negb
xor
aaa
push
aas
xor
jno
xlat
pop
or
jae
scas
test
mov
outsb
pushf
aas
and
fwait
repnz
cs
xchg
or
imul
gs
lret
aaa
adc
push
dec
jle
pop
xor
mov
xor
dec
setae
xor
fsubl
out
xchg
ret
sarl
fisubs
cs
xor
push
pop
xchg
cmp
cltd
cli
mov
adc
aaa
push
jo
int
jl
fiaddl
out
xchg
push
data16
in
lock
adc
pop
add
mov
stos
imul
cmp
insb
stos
pop
push
pop
insb
enter
pop
cmpsl
and
pop
pushf
pop
sbb
mov
scas
pop
mov
ss
mov
inc
pushf
shlb
dec
lcall
test
xor
mov
out
test
lock
mov
sbb
popa
cltd
fwait
stc
sahf
add
push
cmpsl
hlt
pop
loope
jg
pop
dec
and
sar
jno
adc
mov
cmc
push
notl
aam
mov
sbb
stos
rolb
mul
or
in
adc
jns
arpl
fstl
cs
dec
adc
mov
mov
movsb
addr16
jbe
pop
mov
lods
outsl
cltd
pop
jl
and
mov
adc
aas
and
jl
pop
mov
push
xor
xorb
xchg
push
scas
jmp
fistps
hlt
add
dec
js
arpl
jns
xchg
dec
ja
arpl
and
std
or
fsubl
or
and
je
sar
ja
push
into
inc
stc
jno
lcall
out
cmp
jb
jle
test
push
gs
mov
nop
mov
lods
cld
adc
and
xchg
mov
scas
popl
call
das
mov
mov
mov
cmc
xchg
popf
mov
cmp
adc
adc
das
ss
push
xor
scas
repnz
xchg
xchg
push
in
ja
movsb
xchg
ja
loopne
pop
out
fdivr
add
dec
pop
test
sub
rcll
stc
lret
addb
es
stc
movsb
push
fldt
fisttpl
lds
fcoms
or
cld
xor
popf
fbstp
test
mov
in
pop
mov
mov
xchg
inc
mov
sbbb
popf
push
out
inc
push
or
mov
dec
pop
sub
push
inc
rcrb
lods
and
loopne
dec
ja
lock
dec
mov
aaa
and
mov
push
inc
cmp
movsb
pop
or
mov
sub
cmp
test
jp
insl
dec
adc
pop
xchg
dec
fmull
aam
pusha
pop
sub
xchg
daa
inc
xchg
xor
stc
mov
arpl
push
pop
fwait
cltd
mov
ret
fdivp
std
mov
jnp
xor
adc
xchg
lods
mov
push
frstor
pop
cwtl
add
jo
outsb
vhsubpd
stc
in
loop
dec
int3
mov
out
int
loope
and
popa
sub
dec
pop
fs
test
inc
subl
and
xchg
jl
pop
or
push
lret
ja
jl
sbb
shlb
inc
sbb
jl
ja
stos
fsubrl
cmpsl
adc
fsubl
pop
adc
bswap
call
push
mov
pop
jne
sbb
pushf
pop
jbe
cmc
mov
addr16
cmc
mov
mov
jb
lret
adc
fimuls
roll
loope
inc
jl
notl
test
dec
inc
cmpsl
mov
xchg
and
and
dec
jnp
inc
call
mov
adc
pushf
add
lods
pushf
mov
repnz
inc
adc
add
mov
add
or
jbe
cmpl
ror
rclb
dec
insl
cltd
ret
out
imul
nop
and
out
leave
dec
jle
or
push
mov
lock
fistps
mov
fisttpl
sti
mov
push
lds
icebp
ficompl
sbb
mov
rorb
xor
pop
ret
scas
cltd
or
loope
mov
iret
fwait
xchg
shrl
out
ror
push
ds
loope
dec
and
icebp
add
xchg
mov
ret
or
cmp
add
mov
negl
xor
in
pushl
and
div
or
sbb
sub
inc
mov
sahf
push
pop
inc
lods
imulb
jnp
sbbl
xchg
scas
insl
loope
in
jle
cmpsl
mov
xchg
sbb
je
xor
insb
sbb
or
cld
ss
lahf
pop
loop
dec
lods
push
js
bound
nop
dec
sahf
sysexit
int3
insl
cmp
jbe
test
xchg
lds
jo
pushf
mov
fmuls
cmpsb
jp
jns
jo
mov
sub
sbb
xchg
pusha
jecxz
mov
xor
mov
enter
cwtl
or
roll
pop
stos
mov
arpl
push
push
aaa
mov
cltd
add
stos
sub
ret
push
jmp
fidivrs
insb
std
push
sub
rcl
pop
cli
adc
sbb
pop
cmp
mov
sub
push
mov
mov
into
mov
xchg
mov
and
jmp
jp
aas
sbb
jo
sahf
jle
mov
mov
add
hlt
push
sub
fldcw
dec
loopne
enter
cmp
mov
ficomps
fwait
jmp
stc
scas
stos
add
pop
andl
jmp
jg,pn
popf
clc
xchg
push
mov
dec
nop
and
xchg
rcrb
stos
imul
stos
mov
daa
cmp
mov
cli
xchg
shlb
insl
imul
cmpsl
jl
rcll
ja
test
push
or
pusha
mov
stc
jb
popa
inc
or
cli
in
pop
hlt
pop
and
sbb
and
cli
adc
stc
mov
add
in
lods
fldcw
adc
mov
ficoms
xchg
cmp
in
mov
or
sub
scas
js
inc
add
sub
mov
lcall
out
mov
or
into
fs
fwait
shll
adc
push
pop
aaa
xchg
stc
add
xchg
sbb
xchg
xor
pop
popf
jl
xor
rol
ljmp
push
sbb
mov
ss
xlat
jae
ror
outsb
shll
ljmp
push
aas
jg
andb
push
out
inc
xor
fs
mov
sub
cmp
inc
shlb
push
faddl
add
testl
repz
sub
inc
add
push
or
xchg
push
negl
cmp
sub
ficoml
mov
jbe
test
lret
sub
jg
push
sbb
cltd
mov
pop
sub
test
jecxz
scas
cmp
sbb
lcall
push
cmp
pop
push
loopne
popa
mov
push
mov
xchg
pop
cltd
shll
idivb
mov
addr16
push
add
imul
inc
icebp
rcll
pop
repz
xchg
mov
sahf
push
lret
sbb
stc
daa
adc
push
mov
mov
out
xchg
mov
cmp
xor
xor
xchg
xchg
lds
mov
icebp
jo
pop
cmpb
loop
loope
push
sbb
aam
and
pop
pop
ss
dec
sub
pop
cld
notl
idivl
sbb
outsb
jne
and
or
inc
inc
jmp
mov
dec
loope
mov
pop
push
mov
dec
or
cmp
or
aas
xor
add
and
sub
subb
xchg
pop
xchg
test
pop
sbb
scas
mov
lret
xorl
popa
les
dec
push
or
inc
push
hlt
std
js
lahf
mov
hlt
adc
repnz
mov
pushf
add
iret
outsb
clc
sbb
test
jge
dec
adc
mov
nop
lea
loop
js
push
orb
ret
movsb
hlt
xchg
mov
and
fcomi
mov
dec
xchg
lods
lret
dec
stos
fs
das
loopne
lds
pusha
daa
mov
cmpsb
data16
jns
lahf
mov
jg
fwait
fsubrs
aaa
mov
xchg
pop
jmp
jecxz
or
jecxz,pn
repz
lods
pusha
int3
mov
movsl
push
push
lea
mov
dec
xchg
cmp
loope
loop
lahf
mov
fs
in
int
sahf
add
mov
mov
push
xchg
adc
or
mov
jmp
pop
adc
inc
rdpmc
lret
jne
adc
aas
adc
sub
or
rorl
arpl
sbb
dec
jecxz
mov
popf
mov
fdiv
sub
lods
sub
push
jmp
nop
stos
ljmp
push
mov
or
or
fstpt
cwtl
jae
adc
and
test
jbe
mov
fnsave
push
adc
sub
sub
lret
xchg
sti
mov
bound
cmp
imul
mov
push
add
fisttpl
sbb
and
pop
push
mov
sti
nop
es
test
rolb
pop
paddq
mov
pop
outsl
pop
cmc
jecxz
jg
lds
outsl
int3
mov
dec
jno
push
jno
imull
test
xchg
jmp
xchg
sbbb
or
jne
in
push
cmp
icebp
inc
cmpsl
mov
cmp
std
cmp
cmpsb
hlt
dec
dec
fisubl
jne
dec
sbb
outsb
xchg
imul
in
cmp
jmp
jbe
xor
loop
cmpsb
push
inc
mov
lcall
daa
movsl
mov
sub
imul
adc
movsl
imul
mov
daa
lret
loope
stc
mov
cli
add
mov
lods
jle
ss
aad
inc
lcall
aad
das
push
lcall
mov
cmp
push
cmpsl
fucomp
xor
mov
inc
push
popf
pushf
daa
jecxz
outsl
mov
ret
addr16
jne
jbe
repz
movb
mov
shrl
xchg
sahf
out
cmc
mov
rorl
fdivl
pop
xchg
sbb
xor
dec
dec
movsb
sub
les
je
mov
imul
cli
xchg
clc
inc
rcll
sahf
in
sbb
lock
cmpsb
cmp
out
pop
pop
sub
aaa
punpcklbw
cwtl
mov
pop
push
mov
icebp
mov
jecxz
jae
xchg
jg
in
cld
loopne
jae
sub
or
movsb
jo
sub
dec
lahf
adc
adc
lret
mov
sub
mov
mov
mov
sbb
ret
or
xchg
xchg
cmpsl
pushf
fisubs
sub
aas
mov
idivl
and
mov
bound
dec
lea
pop
dec
mov
jp
in
xchg
fisubrl
push
add
int
mov
sar
lock
lret
dec
fucomi
push
imul
lea
cwtl
iret
sbb
mov
call
ret
lret
jp
hlt
add
xor
enter
cli
pop
sbb
lcall
cmp
xor
jecxz
rcrb
stos
int
mov
aas
out
dec
push
or
sarb
pusha
fcoml
rolb
cmp
je
aam
stos
mov
ja
into
in
out
ds
std
or
pop
arpl
ljmp
and
stos
push
pop
aad
out
cmp
fcoms
in
sbb
cli
pop
mov
sub
data16
jecxz
mov
mov
out
dec
push
adc
addr16
pop
iret
cmp
jb
cmp
inc
inc
fcoms
sub
shr
mov
pslld
add
fstps
push
pushf
xchg
les
push
mov
fsubr
or
cli
out
dec
cli
sbb
rcll
stc
mov
aam
movhps
sub
xchg
fistpl
push
jg
cmp
dec
jbe
add
in
inc
addr16
popf
or
rorb
cwtl
pop
xorb
sti
dec
gs
movsl
jge
rcrl
jbe
test
pop
inc
xor
push
pop
loope
inc
mov
cltd
cltd
insb
loope
sarb
cs
jmp
jbe
leave
f2xm1
addb
push
mov
sbb
or
lds
adc
ja
xchg
ficomps
xchg
mov
or
xor
sub
push
dec
xor
rcll
aaa
aaa
mov
xchg
jno
lock
leave
aam
inc
push
push
xlat
dec
lcall
adc
xlat
mov
pusha
stc
lds
cmp
xchg
jl
daa
aas
popf
test
aaa
loopne
and
dec
and
mov
lahf
jp
int3
or
in
inc
jno
bound
sahf
out
jmp
xor
xchg
push
pop
and
mov
pop
add
pusha
mov
inc
movsl
aad
daa
cmpl
out
rcrl
mull
in
arpl
xor
push
inc
pop
xor
loop
lea
dec
mov
xchg
cld
add
leave
and
shlb
insl
cld
iret
loop
adc
data16
imul
jne
jae
addr16
popf
insl
add
or
pop
cwtl
pop
cmp
mov
mov
call
out
fwait
mov
imul
pop
pop
push
xchg
mov
lret
int3
filds
in
dec
call
dec
sbb
movsl
or
adc
fucomi
repnz
xor
cmp
loopne
roll
sub
sbb
test
js
add
mov
mov
mov
push
and
es
in
xchg
jmp
inc
scas
lock
xor
je
gs
shlb
dec
jecxz
xrelease
sbb
and
cmp
mov
mov
cmp
ret
popa
popfw
sahf
bound
ret
stos
scas
ljmpw
pop
or
sbbl
sbb
cmpsl
or
or
movsl
and
movsb
sbb
pop
push
dec
push
aad
scas
clc
mov
dec
pop
dec
icebp
lret
jo
mov
imul
dec
pop
outsl
repnz
cmc
inc
push
jnp
push
bound
jns
mov
push
imul
adc
fs
push
orb
shr
dec
adc
mov
sub
insl
mov
or
xorl
das
loope
sti
mov
je
jne
mov
fstl
jae
xor
xlat
sub
lret
sahf
scas
xor
imul
nop
pop
pop
js
jae
rolb
hlt
in
mov
movsl
jne
push
mov
cwtl
stos
into
jle
xchg
xor
adc
std
dec
push
pop
mov
shrb
jmp
clc
dec
leave
adc
push
mov
or
rorb
addr16
pushf
js
xchg
sbb
dec
out
in
add
xor
cmpsb
movl
xchg
loopne
dec
data16
push
mov
and
xchg
lea
xchg
sbb
mov
cli
ja
mov
push
out
xlat
inc
push
xacquire
sbb
ljmp
lea
enter
lret
push
ficomps
pop
ss
mov
pushf
nop
and
mov
cltd
fcomps
sbb
sahf
mov
xchg
popa
lock
push
testb
mov
push
outsb
popf
mov
cmpb
mov
adc
dec
mov
fisubl
mov
mov
ljmp
imul
adcl
mov
std
sub
testl
sbb
inc
lods
les
pop
and
sbbb
jg
dec
xchg
sbbb
jl
lods
mov
in
das
popf
shrl
in
loop
sbb
pop
scas
sub
inc
pop
bound
icebp
xchg
sti
add
aad
stos
sti
repz
mov
sub
mov
gs
push
mov
sahf
mov
ret
push
clc
lods
push
xlat
push
and
xchg
stos
int3
popf
mov
pop
outsb
pop
das
addb
cwtl
test
add
dec
mov
enter
mov
mov
push
cmp
inc
pushf
popf
lods
push
or
in
jp
cltd
cmpsl
mov
fidivl
add
enter
or
cld
inc
adc
mov
fiaddl
xor
lahf
gs
lahf
dec
add
ljmp
and
loopne
mov
xchg
pop
out
mov
cmp
gs
icebp
or
stos
cwtl
addr16
xchg
adc
or
or
inc
add
push
jbe
xchg
js
inc
insl
ret
nop
adc
push
imul
adc
xor
cmpsb
std
ret
mov
dec
adc
js
or
add
pop
into
and
lea
or
std
lcall
push
sub
jge
or
inc
call
out
aam
push
fwait
mov
mov
sbb
loope
into
mov
xor
mov
push
jae
pop
js
sar
cmp
lcall
in
sub
pop
popf
jmp
sbb
cmpsb
jge
jecxz
inc
addr16
add
fucom
lahf
sti
mov
rcr
int3
add
mov
mov
pop
add
mov
add
or
icebp
imul
jmp
pop
push
adc
loop
jbe
xor
ret
je
and
cmp
xor
jle
loope
icebp
mov
pop
fcoms
or
cmp
aaa
inc
repz
lret
les
add
les
sub
push
fdivrs
nop
jle
out
les
adc
sahf
pop
daa
jmp
subl
mov
add
pop
fisttpl
lods
es
cld
fidivl
int3
or
sbb
dec
push
repz
fcompl
ret
inc
lret
out
mov
or
jle
sub
inc
xorl
insl
mov
data16
pop
mov
mov
mov
mov
sti
into
jl
leave
lahf
inc
jns
fsts
inc
or
push
cld
push
test
std
cmp
sbb
xor
fcoms
test
rclb
mov
mov
jne
mov
lods
sbb
pop
imul
sbb
xchg
or
mov
add
insl
push
insb
bound
in
sub
sbb
xchg
pop
pushf
movsb
das
dec
mov
andb
sbb
sti
in
cltd
pop
push
cmp
dec
inc
xchg
mov
movl
pushl
pop
cmc
and
pop
mov
sub
test
popf
mov
and
test
jo
mov
inc
jp
out
adc
std
out
lods
test
mov
pop
or
rol
test
addr16
or
xchg
sbb
pop
out
sub
adc
push
decl
ficomps
imul
jns
sub
mov
and
mov
fwait
cmp
pop
push
pop
xor
mov
xlat
fcmovb
fistps
mov
and
sti
pop
aam
pop
xchg
nop
mov
pop
aaa
adc
out
mov
mov
lock
mov
mov
xor
scas
bound
mov
jg
es
js
inc
adc
stc
inc
jmp
dec
or
lahf
fisubrs
sub
popf
sub
repz
aam
lret
sarb
mov
cmp
cmp
xlat
sbb
out
sbb
out
adc
repz
jge
cwtl
in
pop
scas
cmp
pop
test
rorb
mov
testw
shll
movsb
jl
jae
sub
dec
dec
and
repz
addr16
push
test
mov
out
aas
fdivl
mov
addr16
nop
outsb
or
test
repnz
jb
jg
push
mov
xchg
jb
repz
mov
andb
arpl
fs
lret
imul
out
inc
pop
pop
aaa
cmc
sbb
clc
dec
mov
xchg
pushf
sub
push
and
cmp
divl
mov
fcompl
pusha
inc
into
mov
sub
add
lods
mov
xchg
sub
sbb
inc
je
adc
mov
jns
cld
xchg
or
jae
pop
mov
stos
sbb
repnz
lea
inc
scas
xor
push
repz
push
dec
loopne
xchg
rcr
sub
pop
mov
enter
mov
sub
sbb
xor
add
out
aaa
cmp
add
out
repnz
pop
aad
lret
push
dec
test
scas
fsubrs
scas
mov
in
insb
xor
pusha
or
fmulp
pop
sbb
mov
repnz
movsb
cmp
notb
lea
fildll
push
sar
ret
mov
pushf
ds
std
xchg
sti
xchg
cli
adc
popf
cmc
mov
sub
mov
lret
sub
call
pop
mov
mov
ds
push
xchg
add
mov
mov
sub
mov
push
clc
push
sbbb
pushf
cmpsl
das
mov
cltd
add
rolb
sub
pop
rolb
jle
addl
das
fldenv
mov
push
loope
loop
adc
shll
int3
or
pop
jno
data16
fwait
ror
inc
je
xorl
out
dec
test
lret
add
push
imulb
mov
stc
dec
and
leave
nop
fwait
or
es
push
push
lret
push
xor
and
lcall
add
adc
or
call
les
lds
adcb
cwtl
rcrl
fnsave
outsb
dec
inc
mov
inc
insl
addl
addr16
xor
rorb
shr
inc
mov
mov
cs
sub
pop
test
adc
popf
cltd
pop
roll
pop
loope
popa
cmp
dec
in
sub
in
mov
fwait
mov
int
lret
mov
push
mov
insb
dec
push
int
sbb
sub
sub
aas
fistpll
sub
adc
mov
imul
push
adc
mov
stos
es
cmpsb
jnp
or
mov
push
sub
ja
lahf
dec
adc
xchg
inc
jns
jg
mov
fiadds
addr16
frstor
add
and
mov
loop
int3
fidivs
in
imul
adc
adc
mov
movsb
jle
dec
mov
dec
xor
fwait
pop
add
push
stos
in
xor
ja
int
push
ljmp
inc
icebp
test
mov
xor
add
int3
movsl
mov
adc
adc
mov
jg
shl
fs
dec
or
stos
prefetchwt1
sbb
pop
sarl
cltd
jns
ljmp
fnsave
pop
ds
insb
cmp
xchg
orl
mov
push
stos
add
into
dec
fwait
es
inc
nop
sub
and
call
jb
test
cltd
sbb
enter
ret
test
mov
scas
mov
ljmp
scas
sub
int3
and
aad
mov
das
fidivl
test
testl
out
imul
xor
outsb
jo
push
int
ret
jle
adc
out
mov
sbb
addr16
mov
es
in
inc
xlat
dec
pop
cmp
add
jae
or
push
pushf
sbbb
divb
mov
dec
pop
dec
push
loope
out
pop
lcall
pop
mov
xchg
push
scas
adc
jbe
jbe
pop
popf
dec
jne
pop
incb
dec
dec
jno
mov
or
pop
ret
dec
dec
jo
les
out
repnz
leave
test
push
pop
mov
test
add
xor
incb
lret
into
mov
sahf
outsl
hlt
mov
out
dec
sbb
insb
jmp
jmp
pop
xchg
clc
sbb
mov
xchg
aaa
dec
mov
sub
pop
test
outsl
jp
stc
imul
pop
loop
sbb
push
aaa
or
cmovp
sub
jge
sbb
and
dec
addr16
adc
and
dec
cmpsl
jo
movsl
jo
mov
andb
fsubrs
jl
cmc
loop
stos
das
ficompl
pop
push
test
popa
pop
js
pop
repz
pop
int3
mov
push
jle
mov
mov
stc
cltd
lods
ret
stos
xchg
or
imull
enter
in
inc
fisubl
sub
mov
add
mov
cmp
aaa
push
xor
sarb
cmp
enter
xchg
add
jle
add
repnz
sti
xor
loope
cmp
lods
out
loopne
add
mov
icebp
jmp
divb
daa
jno
jo
xor
jl
add
clc
hlt
mov
fwait
aad
arpl
jecxz
mov
xor
mov
popa
subb
rcr
mov
mov
jnp
push
adc
lods
mov
sbb
dec
arpl
aas
mov
push
sub
add
inc
fwait
push
out
sub
push
adc
in
or
jmp
aaa
add
pop
movsl
jle
outsl
xor
imul
les
fildll
xchg
jecxz
adc
adc
inc
sub
enter
dec
jl
mov
jg
dec
loopne
dec
dec
std
clc
mov
rorb
add
mov
pop
push
mov
mov
stos
rorb
addb
pop
xadd
jg
scas
pusha
adc
fisubl
cmp
adc
in
out
inc
ja
loop
mov
push
and
adc
mov
fs
rep
mov
adc
imul
out
fiaddl
cmpsb
push
pop
dec
adc
fdivrl
mov
notb
push
push
insl
shll
setne
rcll
loopne
sbb
sub
shl
cmpsl
add
in
pop
push
pop
inc
bound
dec
scas
mov
sarl
adc
out
jl
clc
loopne
cmp
icebp
jg
adc
fidivl
loopne
cmp
leave
sub
popf
cmp
dec
inc
cld
inc
mov
pop
mov
xchg
add
addr16
loope
sbb
cmp
mov
xor
lahf
push
lcall
cmp
push
sbb
loopne
mov
test
xor
sub
cli
push
sti
xchg
push
jge
jge
mov
ficoms
scas
adc
mov
repz
adc
outsl
lret
mov
add
in
cmp
test
daa
repnz
insl
mov
push
lret
inc
dec
pop
jbe
add
into
mov
jmp
int3
stos
jo
sbb
xor
inc
push
inc
out
in
mov
add
push
inc
test
arpl
mov
mov
stc
inc
sbb
inc
frstor
ret
push
bound
daa
sbb
bswap
dec
fimull
je
rorl
pop
or
jnp
jbe
jbe
jne
lods
ret
loopne
xchg
pushf
cli
lret
pop
cmpl
insb
loope
add
add
pop
repnz
lahf
jnp
sti
push
fildl
ja
mov
test
pushf
mov
add
mov
jae
xchg
sarl
push
cmp
std
in
ror
mov
pop
pop
aam
mov
add
fnsave
dec
pusha
or
mov
mov
adc
ret
jmp
test
icebp
mov
jmp
call
fcoms
sub
lret
push
xchg
xor
jne,pn
rorb
xchg
test
sbb
test
test
rcll
test
mov
leave
push
xchg
mov
popf
leave
fwait
cmpsl
cmp
fnsave
loope
es
sbb
pusha
add
jmp
lods
dec
test
sub
add
mov
add
mov
jecxz
pop
test
fcmovu
movsb
jl
in
lods
add
sub
xor
pop
mov
pop
leave
push
lret
jecxz
cmc
sub
outsb
sbb
mov
icebp
xor
dec
mov
sbb
mov
mov
pop
add
jne
fs
push
push
or
jne
or
in
dec
jmp
or
jb
addb
call
outsb
cli
or
hlt
ret
lret
jg
sbb
jae
xchg
or
inc
mov
out
push
push
ficomps
xchg
js
or
lods
fisubs
push
jl
test
lret
rcrb
inc
xchg
pop
test
test
je
xchg
rcr
xor
push
aas
mov
cmc
jnp
jg
int3
stc
cmpsb
and
outsl
pusha
add
mov
aam
dec
ljmp
mov
test
movsb
ljmp
jmp
test
lds
enter
scas
jo
and
inc
push
mov
xchg
cmp
sub
pop
repnz
rcrb
es
mov
or
add
xchg
xor
je
insl
xor
jns
cmpsb
bound
rolb
jnp
sbb
pop
add
pop
jbe
xor
cli
filds
pop
test
std
xchg
sub
inc
cmp
push
stc
out
dec
arpl
jp
cmp
call
out
mov
stc
sti
fwait
xchg
jg
lea
stos
icebp
pop
cmc
dec
je
mov
rclb
das
scas
and
clc
and
add
jnp
aaa
pusha
ret
repz
rcll
jno
fadds
cltd
outsb
lret
dec
int3
inc
mov
jmp
or
rclb
jge
lds
fistl
shll
movsb
ret
aam
int3
dec
push
xor
adc
ficoms
mov
inc
mov
int3
stc
inc
cs
scas
and
sub
jl
popf
test
sub
call
dec
xchg
pop
sbb
adc
out
je
dec
fiadds
inc
mov
dec
sbb
lcall
or
dec
xorl
xor
out
les
adc
bound
push
nop
sbb
in
sub
popf
cltd
pop
push
jl
and
sbb
mov
out
dec
ds
and
jl
cmpsb
cli
and
sbb
insl
aam
leave
arpl
rorl
das
sbb
adc
mov
out
adc
pop
jnp
cld
cmp
pop
leave
lea
je
cmp
aad
inc
inc
sub
mov
and
inc
repnz
and
out
fwait
push
aas
cli
xchg
mov
iret
in
aas
and
iret
mov
les
outsl
clc
ficoml
iret
jge
icebp
and
sbb
lahf
shl
sbb
int
fnstsw
test
mov
iret
arpl
adc
testl
int3
fdivrs
shr
adc
stos
and
sar
push
in
sti
cmpsl
jo
push
jecxz
mov
push
cli
andl
int3
fistpl
jmp
jle
lcall
jecxz
push
int3
hlt
cli
lahf
inc
pop
pop
std
xchg
cmp
loop
push
adc
out
push
push
jl
arpl
add
cmp
sahf
pushf
adc
int3
shr
imul
call
fadds
dec
rolb
mov
inc
sbb
xchg
and
fsubrl
shrl
fnstcw
pop
iret
cmp
pop
add
bound
ljmp
jnp
les
pop
ficompl
adcb
pop
ss
ficompl
mov
sbb
mov
aas
js
hlt
push
mov
out
push
and
daa
movsb
inc
pusha
pop
inc
lahf
aas
popa
in
cmp
outsl
add
push
iret
dec
mov
call
push
pushf
inc
xchg
mov
insb
sbb
mov
push
push
repnz
add
jmp
filds
int
lock
popf
insb
inc
dec
iret
jbe
ja
pop
dec
ret
pop
lds
sbb
pop
ljmp
fdivl
add
pop
xchg
dec
pusha
fnstsw
test
or
push
xchg
movsl
cmpsl
cli
insb
hlt
jnp
test
mov
or
loop
xor
mov
les
repnz
jp
into
in
into
push
push
and
xchg
movsl
in
sahf
fs
in
adc
sbb
adc
ja
push
xchg
sbb
mov
test
fucomp
mov
push
xchg
dec
xor
jge
inc
sbb
cmp
jp
pushf
out
movsb
fisubs
sub
jno
mov
and
xchg
gs
int3
push
dec
insl
xchg
cmp
out
jge
mov
fsts
fidivs
push
sahf
ret
in
xchg
sbb
mov
faddl
fcomps
ds
sub
rcrb
mov
test
push
repnz
clc
insb
dec
sbb
inc
stos
lea
xchg
dec
fildll
cli
adc
jmp
fidivrs
mov
aad
cwtl
lea
sbb
sub
in
aaa
lds
inc
int3
sub
inc
fldcw
std
test
rcl
cmp
cmpsb
pusha
pop
mov
in
or
mov
xor
mov
arpl
imul
arpl
sbb
les
icebp
cltd
jmp
adc
outsl
stc
jle
mov
fiaddl
add
loop
sub
js
xchg
imul
xchg
scas
negl
lahf
lods
sub
sbb
iret
xchg
cmpsb
pushf
iret
movsl
and
bound
jmp
inc
mov
push
jae
mov
add
dec
enter
pop
or
fsubrs
or
xchg
xor
mov
orl
xlat
out
insb
cld
movsl
jae
movsl
lock
cld
repz
imul
scas
lods
scas
jecxz
rclb
push
arpl
inc
lods
adc
out
sti
movsb
push
sbb
dec
pop
push
out
xchg
jbe
jns
mov
sub
pop
es
push
mov
cmpsl
in
stos
cmpsl
loope
int3
ds
sbb
mov
aas
add
sti
mov
pop
pop
ja
enter
movsl
dec
jle
fstpl
sbb
dec
push
push
lcall
in
movb
inc
add
mov
sbb
test
sti
xchg
hlt
mov
or
mov
mov
cmp
shl
inc
sahf
dec
mov
lret
sub
mov
js
xlat
in
in
dec
lret
pop
adc
notl
cmc
aas
addl
scas
push
lea
arpl
in
xchg
pop
mov
mov
jae
insl
mov
imull
popa
xchg
ds
jae
push
in
xchg
clc
push
and
pop
lods
cmp
dec
add
add
xor
data16
dec
mov
mov
jo
loopne
jp
addb
idivb
pushf
push
popa
pop
add
add
xchg
pop
aam
out
hlt
sarb
jle
scas
fdivl
push
repnz
iret
push
push
ror
pop
lock
adc
jbe
adc
jbe
sbb
sbb
cwtl
pop
stos
jbe
mov
mov
das
pop
ss
and
xchg
fsubrl
mov
and
test
or
mov
loop
xor
push
aas
imul
arpl
popl
sub
mov
enter
rcll
push
dec
outsl
mov
in
xchg
jge
ds
add
loop
cmpl
mov
into
out
fistl
xchg
lea
mov
xchg
or
push
pop
cltd
cmp
dec
push
mov
sahf
mov
mov
stc
mov
push
mov
pusha
and
insb
insl
dec
imul
fisttpll
mov
xchg
call
bound
ss
xchg
mov
inc
ljmp
and
test
xchg
inc
call
imul
cmp
scas
imul
dec
imul
or
adc
sub
adc
mov
or
fadds
xor
cmp
fisubl
mov
jo
jne
stc
das
dec
or
mov
mov
jns
out
push
sarb
lods
inc
sbbb
or
jb
dec
xchg
sbb
jg
mov
mov
dec
in
sahf
xchg
push
or
lcall
ja
or
ret
pop
adc
xchg
in
fistpll
adc
dec
sbb
fwait
xchg
mov
xor
ror
or
pop
mov
add
pusha
pop
repnz
and
mov
insb
addb
cmovge
repz
xor
xchg
arpl
jg
inc
sub
jbe
add
xchg
xor
icebp
aas
dec
dec
popf
sahf
inc
xchg
daa
pop
mov
outsl
jecxz
clc
cmp
push
sar
sub
int
adc
xchg
jo
and
das
xchg
out
xchg
stos
jns
mov
pusha
popf
and
sbb
inc
pop
aam
scas
int3
je
jp
jp
dec
cs
mov
imul
dec
mov
sub
arpl
les
add
sbb
or
fsubrs
adc
push
lods
lock
sub
out
popa
push
orb
fiaddl
mov
pop
mov
and
jne
inc
mull
pop
adc
push
pusha
xor
lds
adc
fisubrs
outsl
outsl
mov
mov
cli
sti
jno
cmp
shl
inc
mov
push
lods
mov
pop
or
mov
xchg
leave
dec
rcrb
negl
xchg
fst
push
push
pop
mov
jp
mov
xchg
jl
sbb
jnp
push
mov
pushf
data16
stos
dec
cmp
jne
movsl
sub
jg
je
xor
xchg
sbb
pop
movsl
fwait
rcll
cmpsb
push
rcrb
xor
dec
dec
mov
out
bound
pop
add
scas
cmp
lret
inc
push
aad
xchg
sbb
jle
jl
lds
jl
mov
mov
mov
movb
das
jbe
mov
mov
sub
aas
jle
imul
out
mov
dec
or
pusha
sub
sbb
jecxz
jae
repnz
test
cmp
lds
mov
iret
and
in
pop
stos
pop
push
sub
adc
insb
fisubrs
rcl
jle
adc
aam
fimull
add
jbe
sbb
adc
xchg
push
filds
and
fistps
lods
jnp
dec
mov
jp
cmp
pop
mov
mov
fstp
and
sub
push
out
mov
pushf
test
pop
enter
cmp
insb
mov
push
outsl
outsl
mov
sub
jp
push
mov
std
out
and
push
mov
sub
cmp
fsub
scas
mov
xchg
push
cld
inc
add
mov
cmp
jmp
imull
xchg
dec
inc
repnz
xor
xlat
ljmp
inc
add
imul
inc
stc
pop
cmc
push
mov
adc
push
xor
stc
push
dec
xorl
ret
mov
adc
sbbb
idivb
add
das
push
adc
adc
outsl
xor
cwtl
pop
cmp
inc
mov
adc
xchg
pusha
lods
xlat
lcall
nop
inc
cmp
xchg
cmp
mov
cli
aam
out
cmp
sar
jecxz
dec
pxor
mov
movsb
popa
or
out
sbb
pop
iret
pop
dec
sti
fsubrl
push
repnz
mov
aad
inc
dec
pop
mov
push
push
sub
xor
or
inc
or
test
inc
jnp
adc
mov
xchg
into
inc
movsl
repnz
std
sub
or
enter
inc
xchg
decb
mov
callw
or
lahf
inc
xchg
jp
xchg
dec
bndldx
clc
xor
adc
cltd
mov
int
leave
pop
inc
dec
xlat
push
in
push
push
dec
ja
cmp
fisttpl
mov
jno
jecxz
ds
sbb
mov
pop
movsb
fmul
jg
sbb
insl
adc
fcmovne
add
lods
sahf
dec
xchg
inc
cwtl
lret
push
push
push
ret
adcb
clc
xor
insl
inc
dec
jne
push
shll
cmpb
mov
out
leave
and
lahf
into
into
jmp
push
mov
or
dec
nop
cld
mov
cwtl
cwtl
sbb
mov
js
and
call
dec
xor
jae
mov
mov
mov
adc
xchg
jmp
add
mov
jbe
mov
push
clc
cmp
sbb
and
and
int
aam
cmp
and
cmp
loop
or
and
add
dec
xchg
pushf
sbb
jge
out
cmp
xor
das
das
nopl
lock
sbb
lods
inc
cmp
pop
rorl
int3
inc
sub
adc
xor
cmp
and
fwait
inc
jno
sub
jg
rorb
mov
js
jg
pop
loope
ds
insl
in
lret
or
xchg
xchg
cmp
incb
pcmpgtd
popa
rcl
lret
fs
pop
dec
sub
push
shrb
dec
pop
push
pop
int3
pop
push
pop
pop
cltd
arpl
fwait
repz
gs
sub
jl
je
cmp
outsb
push
aad
insb
and
cmc
repnz
jns
std
out
xchg
sbb
ret
in
adc
cmpsl
repz
xor
ror
fdivrl
jae
aad
sti
ret
subl
out
mov
out
testb
push
out
or
or
mov
pop
sarl
popf
sbb
lea
sub
test
lret
jo
dec
leave
pop
and
fs
mov
ret
mov
or
sub
rcl
int3
out
popa
outsb
sbb
ds
mov
mov
icebp
les
fsubrl
xchg
cmp
and
rcrb
mov
scas
pop
push
push
push
je
xchg
in
fiadds
mov
mov
lock
iret
loope
and
ret
push
mov
sub
add
mov
xor
add
mov
push
pop
aad
inc
ja
xor
xchg
out
and
push
xor
mov
sbb
add
lcall
add
and
loopne
dec
dec
mov
cmc
jp
sub
addl
push
or
jnp
xchg
xor
and
popf
mov
pop
cmpsl
push
or
pop
xor
cmp
ret
lahf
stc
sbb
call
les
inc
jge
loopne
add
xor
inc
add
iret
mov
jg
lods
fsubs
add
or
pop
xchg
jns
movsl
mov
xchg
xlat
clc
add
imul
add
pop
or
xor
lock
cs
cli
xor
pop
and
mov
pop
mov
push
dec
cmpsl
into
sbb
rorl
mov
mov
ret
add
adc
lods
or
shll
xchg
ud0
mov
pushf
test
lods
pop
stos
jo
dec
mov
pusha
enter
sub
or
ret
rcrl
add
inc
dec
pop
inc
arpl
xchg
lods
jp
mov
test
or
push
idivl
or
xor
cmp
sbb
xor
push
push
aam
aaa
das
jo
xchg
mov
mov
clc
clc
inc
jge
das
rorb
jno
xchg
jbe
cld
xchg
add
test
or
pushf
or
and
pop
adc
pushf
sub
fcomps
test
orl
sbb
scas
sub
inc
push
je
sbb
leave
loop
cltd
int3
inc
inc
mov
leave
jmp
and
adc
adc
addl
cmp
push
test
shrl
sahf
aam
add
jae
or
pusha
jmp
push
int3
sbb
hlt
lods
xchg
mov
inc
inc
mov
and
cmp
lret
sub
mov
xchg
loop
xlat
mov
or
xchg
orb
mov
loope
pop
cli
imul
jmp
jle
add
jb
mov
jns
cmpsl
repnz
pushf
mov
xchg
mov
fistl
bound
ds
mov
es
rcrl
sbb
jmp
out
jge
add
adc
inc
mov
idiv
leave
dec
lret
inc
lock
fidivrl
pushf
jmp
rcrb
push
addr16
dec
mov
pop
repz
cmp
into
scas
sbb
loopne
sub
imul
lds
movsl
or
and
js
cmp
mov
fbld
mov
sbb
xor
rorb
pop
mov
hlt
mov
lret
add
inc
mov
xchg
mov
ret
repnz
jp
jo
add
outsb
add
sub
add
xor
push
add
lret
icebp
or
push
ss
js
mov
mov
inc
push
lods
ficompl
jb
or
cmp
ss
jmp
popa
loop
cmpsl
xor
add
pop
pop
lret
adc
mov
pop
xchg
lds
adc
jl
xchg
mov
jno
dec
push
int3
inc
mov
data16
add
cwtl
adc
test
adc
rorb
inc
xor
sub
pop
jns
push
inc
inc
mov
sbb
mov
cmp
xchg
test
xchg
or
and
out
test
jl
push
dec
lret
mov
dec
mov
or
push
add
adc
and
ljmp
sub
inc
stos
push
dec
fsts
mov
outsb
cwtl
inc
aam
ja
mov
inc
lods
daa
jp
sbb
call
pop
jl
mov
cmp
push
mov
add
jne
dec
cwtl
les
stos
aam
pop
mov
sti
mov
inc
push
pop
movsb
and
inc
lcall
and
outsl
fistpll
mov
mov
inc
adcl
fcmovb
push
ljmp
sub
fstps
cmpsb
pop
popf
xchg
or
loopne
and
and
andb
and
dec
jns
mov
cmp
dec
push
inc
into
jg
addr16
jne
imul
inc
test
cmpsl
mov
aam
int3
test
and
mov
addr16
fsts
fs
pop
jno
cmc
shrb
sub
push
cs
xchg
dec
pop
fs
jle
imul
fcoml
sbb
mov
push
insb
mov
pop
cmpl
movups
inc
fmull
mov
add
sbb
pop
dec
mov
mov
cmp
in
gs
aas
push
mov
sarb
xchg
pop
sub
out
jbe
dec
je
inc
xchg
mov
dec
pop
mov
pop
fbstp
mov
aas
add
cmp
add
cmp
negb
or
ret
in
cli
arpl
lret
pop
and
sbb
arpl
push
push
mov
sub
outsb
das
push
xchg
fiaddl
cwtl
jle
mov
pop
roll
dec
mov
adc
mov
xor
loopne
and
jge
fbld
pop
add
lret
movsb
mov
in
inc
stos
sbb
push
popf
cmpsl
sbb
lock
daa
add
sti
lods
xor
mov
repz
aaa
add
fildll
out
stc
and
add
pop
and
mov
pop
mov
scas
mov
mov
scas
and
jns
cmp
leave
mov
mov
mov
jl
in
sarl
repz
cmp
and
cmp
and
adc
out
or
cli
test
xchg
sbb
or
dec
outsb
add
shlb
roll
xchg
mov
dec
mov
shrl
mov
cmp
test
xchg
adc
adc
pusha
cmc
loop
xchg
and
pop
and
shlb
call
les
push
or
and
jge
inc
scas
and
testb
jne
jl
test
in
arpl
push
dec
inc
sub
dec
ret
mov
push
enter
inc
out
pushf
mov
or
aam
lods
fiadds
stos
add
ret
or
out
pop
cmc
xchg
cmp
jo
jnp
mov
adc
insl
xor
lods
inc
js
in
dec
pop
xchg
in
add
divb
mov
xlat
int
fwait
inc
or
and
bound
sub
addl
pop
repnz
loopne
mov
pop
add
fidivrl
lret
cmp
mov
jnp
xor
jo
rol
aaa
sarl
or
sbb
ret
pop
sub
mov
or
cmp
mov
mov
jns
mov
jge
fimuls
mov
push
mov
xchg
icebp
cmp
jecxz
pop
sahf
mov
cld
ja
shr
scas
leave
lock
mov
inc
aaa
loopne
stos
jb
arpl
scas
dec
jmp
and
int
jle
mov
sub
in
mov
loope
leave
loop
js
cmp
sbb
cmpsb
aad
dec
sub
fcompl
xor
pop
cmp
mov
jg
and
cs
test
sbb
call
dec
stc
out
push
pushf
icebp
push
sub
add
lahf
aam
mov
jmp
dec
push
sbbb
stos
mov
inc
sub
cmp
add
fs
and
stc
addr16
stos
fcoms
inc
dec
xor
pop
cs
and
adc
test
loope
jmp
cltd
dec
push
ret
and
dec
xchg
insl
js
dec
lods
mov
mov
pushl
jg
xchg
adcb
adc
sub
xor
and
lock
outsl
or
cmpb
outsl
pop
loopne
jnp
adc
movsb
hlt
ja
test
sub
push
pusha
pop
xchg
sub
popa
add
adc
xorl
pop
sub
and
mov
inc
push
ret
push
lods
push
cwtl
lahf
enter
pop
or
add
mov
imul
dec
repnz
push
dec
pop
dec
jmp
in
insb
xor
iret
aas
stos
xchg
sahf
push
nop
mov
lea
sahf
cltd
das
cld
dec
adc
icebp
add
and
push
cmp
fcoml
adc
xchg
mov
shl
push
push
out
pusha
es
mov
push
cmc
in
cli
int3
js
mov
fidivrs
xchg
sbb
jno
push
ret
mov
adc
add
stos
jle
and
iret
sarb
in
jo
mov
out
mov
mov
xchg
xchg
mov
adc
lods
sub
jnp
daa
rolb
jne
mov
pop
push
pop
mov
adc
js
pop
sbb
xchg
mov
sahf
xchg
xor
mov
lods
mov
sub
jb
xchg
cmp
pop
ja
xchg
and
lods
push
mov
or
insb
sub
sub
addb
jae
call
ret
fistl
sbb
inc
push
push
push
push
orb
xor
clc
pusha
gs
sub
mov
sbb
or
cmp
sbb
inc
imul
pop
mov
xor
lret
das
add
sbb
xchg
pop
jl
je
push
push
fistl
adc
dec
mov
mov
xchg
je
ror
imul
fildll
pop
fincstp
sub
or
lcall
lods
stos
into
mov
add
push
xchg
xor
jbe
add
jb
pop
aam
cmp
vminps
sub
in
sbb
mov
jns
aaa
dec
cmp
add
aaa
stc
push
popf
xchg
adc
adc
test
inc
bound
push
inc
jecxz
adc
lods
add
inc
hlt
sbb
push
stos
xchg
pop
roll
jbe
lret
push
adc
sub
mov
sub
mov
push
gs
dec
jno
aam
fsave
inc
sub
punpckldq
adc
push
lods
inc
stc
mov
ljmp
imulb
cmp
lcall
lret
daa
push
mov
dec
scas
mov
fmuls
xor
dec
adc
and
adc
daa
popa
mov
cmp
inc
shr
cmp
jno
xchg
gs
test
sbb
push
aaa
mov
ss
sahf
inc
fistl
addr16
jl
enter
fs
scas
ret
in
jo
scas
es
out
push
stos
imul
dec
ss
out
aas
andb
jns
rcrl
insl
outsl
daa
jle
pop
push
rclb
popa
xchg
out
cwtl
movsl
xor
mov
jnp
and
stc
dec
and
push
insb
push
and
push
enter
popa
in
or
dec
sbb
mov
or
popf
dec
adc
jo
fnsave
jg
xchg
subb
call
jmp
jne
jnp
loopne
repz
and
pminub
cmc
fs
repnz
cwtl
loop
enter
xor
imul
insb
mov
push
cmp
dec
adc
cmp
inc
rclb
adc
jae
sub
rclb
cmp
jb
out
or
cmove
std
mov
push
mov
fsubrl
leave
fstl
shll
jmp
adc
jbe
mov
cmp
mov
test
stos
sub
dec
jge
mov
sub
fisubs
sbb
out
lds
roll
inc
cmpl
dec
lods
repnz
pop
adc
cmpsl
mov
and
int
arpl
xchg
inc
jmp
pop
cmp
mull
mov
shrl
test
sbbl
aam
int
cs
dec
out
sbb
inc
pop
and
xor
xchg
adc
js
test
adc
xor
jnp
push
outsb
push
ds
mov
test
inc
lea
lret
lods
inc
icebp
inc
outsb
leave
test
out
mov
loop
imul
aad
aaa
mov
jno
fsubs
or
jns
or
push
call
dec
xchg
mov
pop
ja
xchg
cltd
in
mov
inc
cmpsb
adc
lcall
fcoml
ljmp
ds
and
dec
or
inc
xchg
cld
test
shrl
mov
das
sub
inc
push
cmp
out
aaa
pop
mov
cmpsl
sub
int
mov
inc
fcompl
shrb
mov
jb
pusha
push
in
cmp
ret
sub
sbb
cwtl
inc
clc
xor
cmp
pop
pop
loop
mov
es
dec
lret
or
push
mov
aad
inc
push
pop
imul
out
iret
and
fmuls
lret
aaa
push
xor
add
xchg
es
mov
jle
aas
adc
adc
dec
sbb
xchg
cmpsb
pop
push
bound
mov
pushl
dec
xchg
adc
xchg
dec
add
fldl
pop
pusha
or
mov
jecxz
fsubr
add
cmp
clc
insb
mov
das
enter
push
mov
in
mov
mov
gs
cltd
dec
mov
jne
mov
pop
mov
stc
lods
mov
fucom
mov
out
sub
loopne
inc
mov
jno
mov
add
jne
add
loope
mov
mov
into
xchg
scas
inc
jl
mov
fwait
call
xchg
enter
push
mov
or
mov
push
sbb
xchg
mov
popf
inc
xor
cmp
dec
pop
inc
push
add
pop
shlb
adc
push
shlb
in
push
dec
fdiv
and
add
dec
repz
sbb
dec
mov
mov
adc
push
push
inc
and
push
sub
cmpl
out
out
outsl
mov
es
imul
push
inc
and
fsts
fstl
test
in
push
or
sbb
mov
xlat
pop
mov
pushl
in
and
int
movsb
fisubrl
mov
out
or
cmp
inc
pop
jae
xorb
push
pusha
mov
sbb
icebp
inc
jmp
add
lock
or
std
jmp
cmc
movsb
sub
pop
shll
ja
xorl
push
dec
stos
sbb
es
fmull
repz
js
push
sbb
popa
jl
jbe
xchg
faddl
les
cld
in
outsl
idiv
cmp
rorb
jns
mov
inc
add
mov
lea
outsb
scas
jbe
or
and
add
xor
lret
xor
icebp
inc
movsl
lods
sub
roll
adc
cli
imul
stos
nop
xchg
cmp
std
xchg
adc
int
jge
mov
adc
xchg
mov
testl
add
mov
test
push
pop
sub
in
push
dec
mov
frstor
fildl
es
decb
orb
pop
cmpsb
lcall
and
ljmp
inc
xchg
xchg
pop
mov
cmp
decl
nop
sbb
shll
insl
pop
sbb
sbb
xor
jo
xor
nop
bound
scas
and
out
pushf
xor
adc
shrl
sub
jne
repz
cmp
jae
mov
cltd
test
mov
out
jns
xor
jns
jo
insl
sbb
cmp
ret
and
outsb
cwtl
pop
mov
mov
fsts
hlt
das
vmread
ret
fsubrs
push
dec
or
inc
test
push
icebp
mov
or
fsubs
xchg
jns
push
cmpsl
cld
lret
mov
leave
push
push
fcoml
push
jmp
xor
inc
lea
movsl
mulb
lds
mov
inc
mov
in
xchg
shlb
push
pop
imul
push
jle
rcr
lret
jbe
ljmp
loopne
mov
dec
sub
negl
shll
aam
jle
add
inc
aaa
test
icebp
ret
jg
push
inc
inc
aas
mov
in
jl
cmp
mov
call
pop
dec
nop
sbb
xor
sbb
cmc
jns
movsb
xor
jae
das
pop
mov
insb
cmp
mov
adc
jns
arpl
mov
int3
pop
shll
add
adc
pop
or
mov
sub
fnstsw
leave
cmpsb
dec
dec
lret
unpckhps
adc
pop
cmp
int3
jge
xor
aad
xor
andb
adc
pop
pop
mov
lods
inc
xor
shl
sbb
int3
nop
cmc
jbe
cmp
es
push
or
jo
xor
aaa
mov
add
jl
enter
adc
jae
mov
fisubrs
cmp
sarb
aas
rcl
fimull
fsts
mov
cmp
add
popa
push
enter
cmp
or
mov
mov
pop
push
sbb
gs
vunpckhps
out
dec
fisttpll
xchg
mov
cmp
jecxz
mov
xor
jecxz
xor
add
lahf
fsubr
and
scas
sbb
ss
push
out
jl
mov
mov
lock
or
lahf
lods
imul
out
out
int3
mov
inc
stos
xchg
mov
and
push
push
cmp
js
xchg
mov
mov
add
add
cwtl
push
xor
stos
add
fs
or
mov
cmp
or
sub
into
push
mov
ss
cltd
mov
out
das
jp
or
jne
aaa
inc
imul
lods
shlb
dec
sahf
sbb
mov
fsubrs
mov
inc
cmp
je
aaa
adc
ss
cltd
ss
das
or
outsb
insb
aad
mov
xor
adc
and
xchg
cmp
leave
sbb
in
pusha
shrl
adc
mov
pusha
add
pop
fdivrl
inc
mov
xchg
lods
iret
pop
mov
inc
jle
push
cmp
rolb
iret
and
or
adc
cmp
shll
cmp
adc
test
mov
mov
addr16
sub
mov
pop
lods
cwtl
push
pop
daa
sbb
cmp
mov
loopne
pop
mov
push
out
sbb
xchg
daa
lock
pop
and
in
mov
movsl
sbb
scas
and
test
aaa
fsub
ljmp
inc
jne
xlat
mov
lea
jmp
jo
sub
add
imul
pusha
adcl
ds
ret
xorl
push
ret
jmp
mov
fcomp
mov
fwait
dec
or
lds
sub
std
test
cli
lret
sub
inc
sub
jle
stos
std
push
test
mov
push
adc
mov
mov
inc
adc
adc
lock
imul
mov
add
and
mov
pop
icebp
mov
int3
inc
sbb
les
fisubl
inc
rcr
push
jp
pop
and
push
iret
ljmp
scas
lods
push
andb
add
fbld
cli
dec
mov
cmovbe
jl
fisubrs
mov
movsl
fcmovnu
mov
and
int3
and
mov
pop
scas
sub
jge
sub
add
mov
repz
lock
xor
push
sub
movsl
icebp
mov
stos
je
dec
cmp
repnz
aam
fmull
imul
push
pop
adc
inc
dec
popa
mov
inc
pop
mov
push
lret
popa
add
add
shrl
adc
in
pusha
call
out
adc
pop
fidivs
das
mov
dec
adc
push
mov
pop
mov
adc
mov
imul
adc
lahf
fmulp
mov
popa
mov
xchg
mov
daa
pop
xor
cli
in
lea
jle
or
xlat
sbb
jge
mov
rcr
adc
push
cli
test
lock
mov
cmpsl
mov
or
movups
into
and
push
test
imul
test
and
test
push
xlat
push
insb
lret
movsb
das
shll
call
jno
inc
ja
mov
leave
movsl
and
popf
repz
sbb
pushf
loop
and
cmp
inc
mov
shl
add
inc
cmpsb
imul
push
cli
daa
jns
popa
pop
jg
mov
pop
addl
adc
fs
mov
repnz
loopne
jg
insl
cs
sbb
loope
outsb
icebp
insb
pusha
adc
dec
mov
push
lret
pop
fsubl
lea
xor
scas
out
pop
push
cmc
sbb
clc
push
in
in
pushf
push
ds
xor
mov
addl
jmp
adc
push
mov
mov
cmpsl
sub
or
mov
pop
in
stos
and
aaa
push
mov
ds
mov
shll
cmpb
out
pop
mov
or
pop
xchg
add
jno
dec
addr16
sub
push
mov
dec
dec
std
mov
jo
shlb
inc
xchg
sbb
adc
fdivs
jne
leave
enter
popf
arpl
cmc
mov
pop
cmp
in
insl
mov
mov
mov
cmp
mov
cmpsl
pop
in
lcall
xchg
lea
movl
jns
pushf
mov
lahf
arpl
cmpb
add
mov
out
add
leave
mov
mov
mov
in
cmp
cmc
cmp
push
ljmp
fimull
movsb
jle
negb
push
int3
enter
jno
iret
pop
xchg
cmpsb
subb
jno,pt
imul
inc
mov
out
push
jb
mov
mov
or
xor
jae
mov
push
dec
cmpsb
sbb
jb
inc
lods
adc
mov
nop
adc
int
push
adc
stos
into
stos
add
adc
mov
cs
fs
jb
xor
jg
mov
and
subl
mov
or
mov
pusha
addl
xchg
dec
push
mov
push
push
mov
out
mov
pop
aam
cmp
pop
shrb
pop
and
xlat
mov
xor
in
mov
repz
mov
inc
xchg
sub
and
xor
and
jne
orb
call
and
cltd
cmpsl
jb
ret
insb
pop
pop
mov
cltd
jp
cmp
out
and
outsb
mov
sbb
adcl
xchg
adc
ficompl
cmp
call
sub
sbb
sub
das
lret
pusha
sub
sahf
rcll
enter
xor
mov
mov
out
or
adc
and
ja
aaa
add
fs
test
jmp
call
mov
cmp
mov
pop
jbe
lahf
jmp
pcmpgtd
add
xchg
or
push
or
call
cmp
mov
loop
int3
dec
and
cmc
cmp
mov
stc
jg
jle
inc
es
stos
push
decl
xor
mov
pop
pop
or
push
xchg
push
pop
aad
std
loop
out
lcall
cmpsb
push
mov
stos
inc
and
pop
mov
sub
push
mov
mov
add
push
push
mov
lock
sahf
mov
fidivrl
ljmp
jge
push
mov
lahf
or
mov
push
sbb
lock
jmp
fs
stc
xchg
in
das
nop
xchg
out
int
icebp
adc
out
and
xchg
sar
inc
add
mov
push
out
adc
push
sub
shl
and
mov
cmp
mov
mov
shlb
loope
in
mov
mov
jnp
push
push
mov
or
stc
cltd
xchg
cwtl
or
lds
or
call
stc
in
pushf
data16
xchg
fst
stos
pop
out
lods
jbe
xor
aad
insb
hlt
stos
pop
push
jge
push
sub
pop
movsb
mov
mov
hlt
and
testl
gs
scas
or
shl
jecxz
mov
loopne
jle
or
bound
mov
faddl
mov
sub
and
data16
xor
out
cmp
insb
sub
push
insb
and
inc
icebp
lods
or
subl
roll
lahf
mov
mov
mov
push
or
lahf
or
adc
mov
in
cli
pop
or
mov
jns
sbb
jle
outsb
movsb
mov
cmc
jb
je
push
push
jle
cmp
dec
sub
das
lahf
pop
sbb
filds
jle
call
popf
addr16
inc
rolb
mov
cmpsb
test
jno
fcompl
in
xlat
pop
aas
pop
cmc
sub
shl
mov
adc
add
cmpsl
cmp
dec
stos
mov
fnstenv
pop
fwait
xorb
ret
mov
std
add
iret
jne
stc
aad
fcmove
inc
ret
add
lret
push
or
sbb
mov
or
cli
lret
xchg
lock
fnstenv
pop
xor
pop
mov
or
setp
cmpb
mov
and
and
stos
and
sbb
xor
insb
push
and
lcall
push
addb
pushf
cmp
or
iret
mov
es
mov
sbb
sar
push
xchg
or
cwtl
jo
loope
cmp
mov
sbb
addr16
push
hlt
mov
xchg
subb
outsb
div
sbb
sbb
test
fsubl
scas
cmp
loopne
idivb
ss
jl
popa
adc
cld
std
pop
stos
xchg
sub
scas
std
clc
cmp
loopne
dec
lret
lock
addb
cmp
lock
inc
cmp
lahf
xor
inc
or
jb
push
adc
lods
pop
fildl
jb
ja
pop
pop
jbe
and
shll
mov
fiadds
mov
je
sub
loopne
jge
icebp
rcrl
pop
fdivs
sbb
sbb
mov
pop
push
movsb
negl
outsb
lret
xchg
fsubs
xchg
into
out
in
fs
pop
inc
stos
mov
data16
push
mov
je
or
push
dec
dec
orb
mov
cld
lret
jnp
es
mov
mov
lcall
cmp
sub
pop
orl
cmp
repz
and
or
pop
roll
fnstsw
cwtl
test
popa
nop
aad
lods
sbb
mov
mov
push
imul
mov
mov
adc
mov
cmp
into
mov
pop
or
out
sub
repz
fistpl
push
xor
dec
mov
xor
js
push
inc
add
rcr
adc
fisubl
jge
and
into
mov
test
cmc
cmp
jmp
ja
sbb
hlt
and
and
sbb
or
in
les
aad
adc
cmpl
or
adc
sub
add
sub
cmp
out
adc
roll
mov
mov
jmp
xchg
dec
out
lods
adc
xor
fnstsw
cmp
rol
cmpsl
loop
mov
cwtl
pop
stos
into
xchg
mov
dec
add
xor
pop
mov
jp
movsb
mov
cs
pop
imul
pop
xor
push
rolb
les
lret
pop
filds
cwtl
in
fstpt
mov
sbb
call
int3
mov
adc
xchg
jo
push
sub
cli
ljmp
popf
xor
jmp
sub
inc
inc
test
mov
dec
fmuls
adcb
lret
adc
lret
mov
mov
test
daa
shll
xchg
pop
mov
sub
adc
xchg
in
scas
cmpsl
lods
movsl
call
mov
jmp
or
jmp
and
cmp
in
fistpll
and
int
dec
pop
or
test
push
in
fmul
std
mov
lret
mov
jns
push
add
gs
mov
out
mov
enter
push
loopne
xor
movsb
and
xor
pop
mov
sub
cli
mov
cmpl
mov
ret
mov
cwtl
lds
in
imul
xchg
push
sub
mov
cmp
int
cmp
jl
inc
cmc
or
loopne
cmpsl
inc
dec
imul
out
outsl
push
mov
in
mov
xor
adc
das
stos
lods
data16
jmp
mov
inc
dec
lcall
ds
cltd
insl
das
cmpsl
mov
rorl
or
dec
add
pop
js
insb
ret
icebp
lea
jg
mov
hlt
call
mov
insb
and
imul
enter
insb
push
stc
outsb
hlt
inc
fwait
cwtl
mov
cmp
sbb
cmp
es
or
sahf
pop
mov
jg
sarb
jp
sahf
sub
mov
push
in
stc
dec
call
mov
adc
pop
and
add
nop
push
add
push
fmul
cld
mov
das
pop
daa
inc
mov
imul
jno
mov
sahf
test
push
fistpl
lcall
lahf
scas
cmp
out
imul
aad
mov
jmp
in
mov
mov
dec
iret
push
outsb
pop
cmp
mov
fbstp
jmp
xchg
push
in
mov
subb
xchg
pusha
dec
hlt
add
jns
cmc
inc
cmpb
cmp
call
pop
aad
and
fisubl
sub
mov
pop
adcl
jmp
sub
ficompl
or
inc
and
mov
pushf
mov
push
insl
xchg
inc
cmc
sub
pop
sbb
cmc
int
call
cld
testb
imul
fidivrl
std
mov
das
push
jb
mov
scas
mov
cmp
cmpsl
lahf
int
xchg
pop
repnz
popf
aad
dec
fsubs
or
push
test
out
push
jae
dec
movsl
pop
xchg
and
add
stc
test
jbe
pop
jnp
rcr
xchg
pop
sbb
ss
fnstcw
push
cmp
or
lock
mov
testl
xor
mov
sbb
push
xor
mov
je
orb
or
jo
xor
dec
pop
sbb
cmp
sub
mov
test
shll
xchg
and
stc
fsubrs
push
xlat
dec
fwait
push
lcall
jg
or
xchg
sub
mov
mov
add
mov
cmpsb
adc
xchg
push
movsl
add
sbb
dec
outsl
aam
mov
jge
pop
fistpl
aaa
int
std
fisttpll
add
popa
seta
push
popa
mov
xor
jne
jge
sub
xchg
daa
test
mov
push
xchg
pop
sahf
adc
and
push
jg
enter
mov
adc
cmp
cmp
repnz
stc
enter
pusha
movsb
or
xchg
sbb
xorb
pop
inc
loop
dec
addb
cld
je
loopne
adc
mov
push
insb
mov
xor
shrb
adc
mov
or
stc
push
cmpsb
inc
mov
jbe
mov
sbb
xor
cmpsb
and
sbb
shrl
xor
ret
mov
push
divl
test
fmull
pop
dec
jb
dec
iret
mov
aas
out
loope
and
aaa
jae
sbb
and
insb
xor
es
add
adc
test
jp
mov
add
jge
dec
imulb
pop
mov
shlb
aam
in
xor
int3
repnz
pop
fbld
fstpl
pop
loopne
sub
outsb
xor
inc
jae
movsl
mov
xor
popa
lods
leave
iret
daa
sbb
adc
cmpsl
imul
jne
inc
mov
out
mov
mov
xchg
pop
inc
jle
in
fmulp
sbb
cld
or
scas
push
call
pop
add
xchg
mov
xor
stc
jmp
mov
xor
pop
fdivs
jns
push
subb
popa
ficomps
int
mov
cs
push
mov
push
or
dec
sub
pop
aas
adc
adc
cmc
or
push
ret
sub
pop
into
rol
pusha
xchg
negl
movsb
arpl
pop
sbbl
and
js
imul
mov
je
and
dec
jno
xchg
push
callw
cmpsb
mov
ds
repnz
jle
into
xchg
or
lock
inc
sub
adc
jle
ret
mov
lea
inc
pop
cmp
stos
sbb
mov
cmp
add
jmp
dec
pop
dec
xchg
imul
adc
jge
cld
push
add
xor
into
lea
mov
pop
dec
out
mov
shrb
mov
fidivl
add
or
dec
gs
fneni(8087
das
icebp
dec
cmpsl
mov
sub
hlt
inc
sub
mov
xor
mov
xor
sbb
imul
pusha
lcall
cli
inc
and
mov
cltd
stc
mov
or
aad
pop
push
test
mov
push
pop
pop
push
mov
mov
or
push
popa
lods
pop
out
in
insb
pushf
sbb
pop
push
iret
jmp
dec
pop
mov
bound
jecxz
stc
push
sub
jns
rclb
in
loop
mov
push
adc
insb
cli
ss
repz
push
add
ret
sbbl
jb
shlb
cmp
fsubs
fwait
insl
int
xor
pop
aam
mov
testl
sub
add
adcb
mov
out
and
mov
repz
fisttps
test
cmp
jge
mov
cmp
cmpsl
dec
ds
jmp
pop
mov
sub
adc
xchg
sbb
or
sbb
xchg
scas
movsl
lods
jg
pop
mov
or
sub
scas
jp
adc
lods
int3
lock
mov
mov
aaa
and
movsb
jne
fidivrl
mov
or
das
adc
push
rcl
adc
push
int
dec
xchg
cmp
scas
popf
push
push
lahf
push
cmp
push
pop
outsl
or
repnz
out
jb
push
lods
mov
dec
cmp
mov
lea
mov
out
and
ret
xor
mov
xor
pop
xchg
clc
sti
sub
dec
int3
pusha
dec
or
mov
addr16
sub
sub
jle
sahf
jae
lea
out
mov
ds
sbb
push
jne
std
dec
das
loop
or
add
mov
cwtl
rcrb
xchg
lods
rcr
das
lcall
mov
push
xchg
jbe
mov
push
cmp
sub
sbb
fistpl
and
mov
jp
fidivl
sbb
mov
outsl
call
in
xor
imul
and
je
insl
loop
mov
pop
sti
xchg
pop
push
cmp
andl
aam
stos
pop
sbb
loope
push
in
shlb
out
popf
cltd
mov
stc
out
setl
call
jne
out
mov
push
add
arpl
pushf
xor
mov
adc
xchg
loop
inc
add
jmp
cmp
mov
or
pop
mov
mov
aam
and
ss
in
sbb
adc
mov
cld
dec
arpl
scas
rorl
jg
in
xchg
lret
mull
xchg
push
sti
xor
mov
push
out
into
jmp
add
mov
dec
push
mov
lret
xchg
adc
loop
leave
jge
ja
jnp
sub
add
dec
jmp
adc
into
aad
xor
jg
pop
mov
add
inc
bswap
nop
push
sbb
mov
int
jp
loopne
lods
pop
jl
lcall
push
cmp
mov
gs
lahf
add
mov
add
mov
jp
cmp
pusha
call
xor
inc
sub
mov
addr16
clc
js
or
mov
pop
adc
inc
dec
je
jae
test
cld
scas
push
test
jecxz
pop
rorl
and
and
push
sti
jmp
jo
xchg
test
in
aas
insl
xor
leave
adc
rcrb
scas
cmpsb
xor
adc
outsb
shlb
enter
lods
in
sarl
mov
aam
ja
lret
pop
mov
pop
xlat
jb
lret
xchg
arpl
push
push
cmc
jne
mov
mov
shlb
loop
rolb
lahf
orb
adc
xor
ficomps
int
dec
jl
hlt
rclb
mov
xchg
pusha
dec
jge
daa
sbb
inc
cwtl
pop
and
mov
movsb
push
push
movsb
hlt
or
push
fmul
daa
add
in
mov
je
xchg
in
mov
hlt
clc
dec
xor
xchg
or
mov
or
inc
idivb
jle
adc
stos
bound
loopne
aad
and
or
je
das
xchg
mov
loopne
repz
enter
loope
gs
mov
dec
or
addr16
movsb
push
pop
and
test
sub
outsl
fcomps
xlat
je
mov
cmp
nop
cmp
inc
rolb
xorb
and
push
push
inc
jae
ds
cmp
push
push
dec
xlat
ret
xchg
pop
mov
mov
xor
cld
testl
pop
and
call
mov
lods
inc
and
mov
push
sbb
pop
shr
add
inc
sub
lock
jecxz
mov
and
xor
arpl
mov
sbb
mov
add
push
cmp
loope
sahf
incb
xchg
pop
loopne
insb
sbb
dec
lret
mov
mov
mov
xchg
gs
daa
cs
sub
sub
sti
xchg
pop
adc
out
lods
xor
xor
and
add
mov
clc
mov
sub
push
mov
data16
cmp
fucom
insb
movsl
cmpsb
pusha
mov
repz
gs
xchg
inc
pop
cmp
repnz
dec
jmp
cwtl
in
aad
xchg
test
ret
adc
xchg
adc
fstps
push
xor
mov
sbb
and
lock
fdivrl
fwait
ja
sub
rcll
mov
and
and
mov
mov
cmp
jb
out
pop
addr16
jecxz
xchg
inc
sbb
out
outsb
push
into
lods
lea
cmp
inc
mov
movsb
ret
and
out
dec
push
or
xchg
mov
mov
add
lret
sti
mov
sbbb
daa
stc
sahf
adc
stc
cmp
mov
testb
mov
xchg
pop
ja
out
enter
int
cwtl
fsubrl
lods
rcrb
into
xchg
dec
ds
jnp
mov
adc
cwtl
pop
fldl
test
jg
repz
cmp
das
jp
and
jmp
lret
dec
add
push
roll
pop
mov
popf
push
add
or
cmp
jno
popf
ljmp
sub
jbe
xchg
sbb
cmp
test
dec
adc
sub
std
sbb
xor
push
lea
mov
popa
xchg
pop
inc
std
cmp
dec
add
xor
pop
aam
testl
clc
popf
cmpsl
and
rolb
sub
push
sbb
aam
push
movsb
xchg
mov
pop
js
por
cmc
incb
xchg
jmp
lock
sbb
addr16
lret
out
js
mov
out
add
fimuls
or
inc
jbe
sbb
jge
cld
das
test
movl
into
shll
adc
cwtl
xor
pop
mov
mov
lahf
adc
xchg
xchg
sbb
mov
imul
scas
add
rorl
das
inc
or
imul
gs
clc
jle
push
das
xchg
or
mov
data16
fbstp
push
in
adc
dec
and
lods
loop
les
int
pop
xor
xchg
mov
sti
adc
sahf
jle
shl
ret
stos
xor
gs
outsb
push
jo
popf
lret
sbb
shlb
mov
jae
stc
mov
mov
dec
stos
push
xor
adc
add
inc
lcall
pop
push
adc
adc
test
andb
pop
cltd
pop
add
fbld
push
fdivrs
or
sub
pop
mov
xor
xchg
stos
cmc
or
push
sbb
jmp
enter
cmp
push
pop
repz
push
cmpsl
xor
and
xorb
nop
xchg
fwait
mov
and
pop
and
mov
adc
stos
xchg
sbb
jmp
cmpsb
dec
jno
mov
dec
add
arpl
mov
mov
shlb
mov
popa
push
xor
dec
push
adc
mov
pop
xchg
adc
adc
inc
adc
data16
inc
pop
leave
fwait
mov
gs
mov
add
jns
pop
sub
lock
scas
jle
ds
jns
dec
rcrb
adc
mov
inc
inc
cmp
push
fdivs
add
jg
sub
mov
sbb
adc
sbb
fldt
or
mov
mov
push
jnp
push
shll
and
mov
fnstsw
mov
rol
popf
loop
out
push
inc
insl
ja
lock
mov
pushf
xchg
jno
mov
push
aaa
les
mov
mov
jmp
mov
aad
push
enter
stc
cmpsl
out
jae
fs
orl
cwtl
inc
add
xchg
mov
cwtl
sti
lods
dec
repz
adc
leave
adc
jo
and
add
movsb
adc
dec
pop
pop
inc
ficoms
mov
and
xchg
frstor
stc
fs
nop
inc
mov
pop
cmp
sbb
insl
insb
push
lods
lods
rorl
inc
or
out
xlat
xor
mov
insb
push
rorb
jmp
push
jbe
jno,pn
pop
addr16
push
test
addl
out
xchg
xchg
and
jmp
stc
push
data16
addr16
out
lea
andl
hlt
sti
cvtps2pi
lods
rcrb
or
sub
test
sbb
fmull
mov
cld
cltd
sub
ret
scas
shrb
mov
sub
mov
xchg
rclb
aaa
es
mov
popf
or
movsl
mov
subb
lcall
pop
inc
xchg
cli
in
fldl2t
sbb
adc
and
xor
mov
xchg
sti
enter
movsb
aaa
or
inc
lea
imul
out
insl
mov
into
mov
xor
mov
imul
sbb
mov
cwtl
test
dec
push
aas
xchg
sbb
test
add
sti
icebp
cmp
insl
mov
notl
jne
mov
shll
les
jg
mulb
out
movsb
shrl
inc
dec
mov
out
mov
ja
cmp
fs
inc
cmp
xchg
dec
push
repnz
leave
sub
inc
mov
outsl
mov
mov
mov
out
pop
mov
lret
sub
mulb
adc
dec
lahf
or
icebp
inc
pop
roll
push
lock
ret
or
lock
mov
lret
aaa
xchg
mov
push
mov
inc
cmp
jg
aas
mov
push
call
push
jecxz
and
push
stc
and
push
iret
dec
sub
xchg
divb
pushf
ljmp
xor
gs
xchg
adc
or
push
test
in
push
xchg
icebp
and
and
xchg
lcall
int3
mov
mov
push
jge
add
push
imul
shr
pop
or
jmp
mov
loope
lock
test
xorb
xor
dec
js
mov
std
push
jae
xor
inc
test
or
xchg
daa
lods
and
leave
into
loopne
pop
add
add
test
cmpsb
cmp
mov
loope
mov
pop
mov
xchg
rcrb
popf
push
insb
mov
ljmp
sahf
rcrb
or
inc
xchg
repnz
pop
sub
fimuls
xchg
adc
daa
lds
pop
and
hlt
xchg
or
pop
repz
mov
jbe
mov
inc
loope
pusha
outsb
ficoml
or
mov
dec
test
push
xor
xor
push
mov
cmp
mov
scas
add
push
int
cmpsl
push
rol
adc
jg
shll
insl
pop
fwait
sarb
popf
js
ljmp
leave
pop
cmp
pop
dec
mov
and
stos
pop
mov
dec
into
inc
lock
xor
popa
pop
or
inc
mov
test
cli
cmc
xchg
push
push
sbb
lcall
dec
mov
mov
stc
mov
rorl
or
add
notl
xchg
dec
je
ss
insb
test
movsl
and
mov
gs
rclb
mov
jae
lret
int
iret
stc
mov
mov
sub
adc
in
cmpsb
pop
mov
lcall
or
std
sbb
sub
xchg
mov
pop
in
mov
mov
jb
scas
cmc
xchg
cmpsb
mov
in
push
fisttps
mov
hlt
dec
scas
ljmp
lods
jmp
adc
mov
mov
mov
mov
jecxz
fmul
data16
cmpsb
arpl
push
sub
add
mov
xor
mov
mov
push
and
jl
lock
scas
mov
sub
movsl
into
lahf
add
pop
cmp
mov
mov
add
fdiv
cmp
loopne
adc
cmp
fisttps
push
dec
lahf
jmp
xor
push
fwait
scas
outsl
jecxz
xorl
inc
outsl
out
adc
dec
cmp
pop
pop
jle
clc
push
scas
jbe
fdivrs
je
jns
cmc
cmp
jmp
mov
mov
mov
cli
sub
and
inc
adc
std
push
aad
icebp
add
mov
push
sub
in
movsb
mov
outsl
mov
popa
dec
repnz
popa
sbb
js
adc
loope
lahf
adc
sub
push
mov
mov
sahf
lret
rdpmc
add
mov
add
stos
int3
div
test
ja
mov
dec
hlt
or
addr16
add
adc
fdivl
and
adc
adc
inc
xor
mov
xchg
pop
cwtl
lods
pop
cmpsb
dec
inc
sbb
xor
jo
pop
mov
and
jle
out
or
jb
mov
arpl
into
cmp
enter
dec
stos
xchg
xchg
ss
icebp
inc
push
loope
mov
mov
mov
cmp
test
enter
push
push
push
outsb
jl
sbbb
jo
sub
ja
cmp
cmpsl
and
repz
cld
push
push
adc
sbb
xchg
push
ret
mov
lods
sub
mov
pop
jb
adc
push
sub
cltd
imul
fs
out
mov
fidivs
cld
rclb
int3
inc
jp
pop
outsl
pop
mov
flds
stc
out
mov
andb
test
roll
imul
and
push
in
std
rclb
daa
xor
pop
sahf
jle
sar
out
mov
jg
cltd
call
sahf
test
xor
fs
dec
pop
in
push
ficoms
add
mov
dec
pop
lds
out
or
hlt
xor
pop
and
lds
arpl
aas
mov
pop
fnstcw
in
fidivrl
jo
and
outsb
pop
mov
dec
outsb
js
jl
mov
test
xor
movsb
lahf
outsb
aaa
or
adc
push
rcrb
mov
add
jle
or
push
pop
pop
push
pop
pop
movsb
sbb
out
mov
lahf
xchg
ror
push
mov
decb
mov
push
and
inc
popa
or
dec
out
xor
sbb
ja
xor
cmp
pop
jmp
xor
xor
imul
jns
add
sbb
mov
frstor
into
sub
inc
in
lods
inc
iret
xchg
cld
aas
call
adc
orb
push
inc
mov
and
lret
out
push
arpl
inc
lea
lods
fstpt
push
in
sarb
dec
and
lret
push
mov
cmp
cltd
into
xchg
cmp
jne
insb
lods
jnp
ret
addr16
cli
das
fst
lds
sbb
xchg
cwtl
pop
out
outsl
divl
es
dec
jg
adc
lea
xor
aam
ja
xlat
inc
cmpsb
xchg
adc
repz
loope
sub
cltd
inc
push
clc
aas
mov
jl
fisttpl
add
cli
push
and
push
out
jbe
dec
cmp
pushf
stos
int
push
add
je
sub
mov
inc
mov
jo
adc
xor
jne
lds
inc
mov
xchg
and
test
cmp
stos
stos
jb
adc
push
or
pop
adc
cltd
xor
out
mov
call
push
jle
pop
leave
mov
int3
shr
xor
out
in
inc
loope
or
jns
repnz
ss
psllq
test
cmp
xor
lcall
push
repz
repnz
mov
mov
ret
mov
sbb
mov
je
movsl
loop
mov
daa
clc
and
es
or
mov
movsl
push
mov
jno
rol
andl
pop
shlb
push
mov
outsl
scas
or
mov
aad
lods
xchg
and
stos
int
loopne
mov
repnz
and
xchg
pushf
add
sub
aam
add
jbe
mov
add
adc
mov
testl
fnstsw
into
lods
fs
lock
jb
stos
xorl
push
pop
pop
xchg
fxch
lods
pop
fs
cmc
xchg
int3
cmp
xor
sub
xor
fidivs
mov
dec
imul
ljmp
push
xor
inc
pop
pop
dec
sti
inc
cltd
cmp
inc
cmc
out
aam
test
xchg
xchg
xor
outsb
or
das
icebp
adc
or
mov
dec
enter
push
push
pop
ret
mov
cmp
bound
and
mov
push
push
lods
sub
mov
stos
iret
and
clc
ror
bound
addr16
inc
xchg
into
fstp
icebp
out
or
fistpll
fstl
int
fstl
ror
push
inc
adc
push
cmp
inc
jecxz
dec
pusha
lods
shr
mov
cs
inc
sub
ret
pop
addl
nop
je
cltd
jae
dec
imul
pop
daa
imul
or
jmp
fs
add
sbb
adc
mov
sbb
inc
mov
mov
mov
jmp
mov
sbb
xchg
pop
push
test
leave
ljmp
mov
call
dec
int
call
push
pop
sti
jno
push
imul
add
hlt
int
pop
ljmp
dec
js
lret
jb
mov
bound
inc
mov
movsb
xchg
cmp
mov
jp
and
aad
inc
imul
clc
mov
cmp
andl
push
push
jecxz
mov
into
popf
cmpsl
gs
mov
arpl
jmp
dec
jg
lock
popa
insl
push
bound
stc
push
das
insb
stos
push
or
mov
testb
or
xchg
mov
into
cwtl
divl
dec
push
fistpl
mov
xchg
nop
sbb
adc
mov
pushf
lret
mov
aas
adc
stc
jnp
std
arpl
test
stos
push
cmp
ja
js
loope
jge
inc
aad
fnstsw
jne
cs
inc
pop
mov
mov
inc
decb
jle
xor
lcall
push
cwtl
cld
iret
cltd
test
loopne
movsl
sub
cli
aaa
mov
les
div
daa
jb
sub
aad
fcomip
ret
stos
push
das
fwait
imul
inc
test
out
push
inc
cwtl
xor
sub
push
fcoml
mov
cmpsl
xor
scas
cltd
arpl
pop
aas
xchg
mov
jp
test
xchg
cmpsb
lock
aam
cld
dec
cltd
std
or
test
cs
add
in
mov
fs
rorl
iret
into
jp
mov
insb
or
imul
xchg
decb
sub
sahf
lods
xchg
mov
sbb
into
mov
dec
add
mov
add
mov
jmp
and
xor
dec
aad
dec
sub
popa
lock
sbbb
xchg
incb
mov
sub
mov
cli
jmp
packssdw
fsubs
lods
push
jne
ja
and
cmp
sbb
lret
insb
or
mov
mov
addb
push
flds
int3
push
push
mov
cmp
pop
fadds
mov
mov
lods
push
push
hlt
sbb
adc
jecxz
jg
and
dec
mov
jl
mov
push
push
icebp
pop
jg
adc
fiaddl
std
outsl
leave
pop
xchg
ret
cltd
or
and
loopne
fs
sti
mov
xor
pushf
ret
dec
loopne
fisttps
xchg
mov
aaa
pop
lahf
xor
fidivrs
mov
mull
lds
mov
or
fsts
fiaddl
dec
jg
das
in
xor
and
mov
mov
mov
cmp
scas
dec
and
or
or
push
das
jb
popa
jmp
dec
push
lret
pop
stc
add
mov
mov
sub
pop
iret
std
test
add
aam
shlb
stos
daa
cld
mov
mov
rcr
mov
jp
js
inc
mov
mov
leave
jp
jl
gs
adc
cmc
ds
add
jae
movsl
jecxz
sbb
pop
jne
xor
sti
sbb
test
stos
jmp
adc
lcall
sbb
lea
scas
aad
dec
ljmp
sbb
outsl
outsl
sbb
insl
sub
data16
cmpsb
and
add
fs
imul
mov
pop
pop
and
push
push
adc
test
mov
lret
adc
js
xchg
pushf
pop
xchg
outsb
dec
pop
add
dec
mov
addr16
push
outsl
bound
loope
add
xchg
xchg
aam
and
adc
mov
sahf
addl
or
loope
repz
fdivs
jno
add
push
sbb
dec
clc
mov
fistpl
fcomps
sbb
int
mov
xlat
lods
inc
sti
sahf
push
jmp
push
inc
fsts
mov
sub
imul
dec
es
cltd
push
xchg
inc
nop
insl
daa
or
add
lods
pop
ds
add
hlt
push
pop
lahf
fbld
jne
gs
jbe
cmc
out
icebp
inc
insb
ret
jge
ss
lret
adc
into
push
mov
or
or
aaa
lds
loope
loope
int3
sbb
pop
scas
add
inc
popa
mov
xchg
pop
mov
hlt
mov
fldcw
jl
incb
dec
dec
jmp
shlb
push
xor
dec
dec
add
xor
push
or
or
dec
punpckhbw
mov
dec
sahf
or
icebp
hlt
stos
pop
frstor
add
pop
inc
inc
fildl
push
cmp
adc
xor
adc
lret
jge
mov
inc
mov
xor
push
sbb
jecxz
cmp
inc
xchg
shlb
into
rol
and
sahf
dec
jne
pusha
adc
fs
icebp
lea
addr16
repz
or
pop
outsb
xor
cmp
repz
dec
cmp
jo
pop
pop
or
roll
jle
repz
add
adc
aad
inc
gs
jne
mov
xor
stos
adc
jae
and
leave
and
or
push
inc
pop
in
lret
jmp
mov
xchg
int
repnz
or
xchg
lods
fldenv
es
xor
dec
cmp
iret
adc
out
fdivrs
addr16
fimull
mov
and
je
pop
jl
scas
cmp
mov
cmc
lret
adcb
sbb
lock
push
or
pop
lock
fcomps
cmpsb
adc
fcoms
mov
mov
mov
add
enter
xchg
repz
mov
out
cltd
jg
aam
mov
dec
jb
pop
inc
shr
imul
aaa
outsb
cmp
lea
outsl
cmpsl
mov
fstl
ds
add
xor
pop
pop
xchg
aad
fadds
inc
pop
adc
dec
in
sub
aad
pop
fcmovbe
shrb
stos
rcrb
add
push
mov
pop
je
mov
inc
and
cmp
scas
mul
mov
mov
lcall
xor
mov
cmp
dec
dec
mov
es
int
mov
leave
push
lock
subb
popa
sub
cmp
jno
or
mov
fcompp
sahf
and
adcl
and
test
add
call
imul
fs
pop
xor
push
daa
pusha
cmp
adc
xor
fwait
pop
jmp
in
mov
xor
aad
fcmovbe
ljmp
inc
int3
push
data16
rclb
ret
or
mov
push
jb
pop
int3
int3
test
ds
jecxz
fiaddl
lret
cmc
sub
xor
push
scas
cmp
test
inc
ds
movsb
movsl
sub
jb
lock
es
pop
push
jmp
int3
sub
pushf
scas
in
pushf
das
mov
push
xor
add
mov
push
insl
adc
popa
pop
leave
inc
iret
inc
lods
jp
inc
shrb
cwtl
ja
or
dec
jp
pop
lock
dec
ret
and
jg
fidivl
xchg
rclb
out
lret
test
or
xchg
sub
dec
mov
inc
stos
jge
int
roll
stos
test
ljmp
cmp
sbb
stc
add
push
jp
cwtl
sbb
aaa
ret
jmp
mov
dec
add
inc
mov
xchg
pushf
in
data16
idivb
int3
cmp
sbb
hlt
lret
fsubrl
xor
jp
cmpsl
mov
out
insb
cli
sbb
outsl
dec
sbb
jbe
pop
push
imul
xchg
mov
dec
cmpl
faddl
sub
clc
sub
push
push
mov
sub
cmpsl
cmp
lods
mov
xchg
hlt
sub
scas
sub
je
sbb
add
out
outsb
stc
lahf
ljmp
or
mov
jnp
leave
mov
fisttpll
xlat
pop
pop
sti
gs
xchg
cmc
xor
popa
mov
popa
sbbb
add
add
xlat
sub
pushf
mov
into
jge
cld
or
jmp
jle
fwait
sbb
pop
insl
lods
lods
insl
adc
fcoml
aaa
movsl
pop
and
repnz
mov
aaa
cmc
imul
jle
clc
mov
movl
insb
push
notb
ss
fdivs
cmpsl
jecxz
pop
aas
jge
test
loopne
mov
ret
sub
jle
push
out
fnstenv
cltd
and
dec
mov
es
lret
lret
ds
or
jl
adc
jmp
sub
mov
mov
jg
xchg
rolb
sub
outsl
push
int3
insb
jno
fsubl
xor
push
cmpsl
aam
cmp
js
mov
outsl
test
rolb
rorl
insl
fadd
ds
sub
scas
inc
repnz
or
mov
mov
and
shrl
mov
sbb
sub
jbe
dec
fstps
aas
sbb
rclb
movb
cmp
out
loope
push
mov
jne
outsb
push
test
shrl
pop
add
inc
aam
aaa
cltd
xlat
mov
push
imul
ret
sub
cmpsb
lret
xor
cs
sarl
dec
push
int
mov
sbbl
sub
enter
lret
and
shrl
scas
cmpsb
xor
arpl
xor
sbb
sbb
mov
mov
mov
mov
push
test
lods
stos
and
popa
fimuls
mov
fabs
cmp
add
mov
icebp
mov
mov
adc
ds
insl
sahf
pop
xlat
sti
xor
cli
adcb
out
in
mov
xchg
mov
and
adc
fcoml
out
sub
dec
pop
stos
ret
or
inc
les
cmpsb
xchg
fidivrs
pop
adc
xchg
out
and
scas
mov
movsl
and
push
mov
mov
jmp
or
jmp
into
test
push
lods
add
mov
negl
sub
dec
xchg
data16
pop
cli
xchg
out
xorl
jno
jno
pop
lret
outsl
or
test
aam
pop
lcall
add
aas
push
inc
mov
pop
mov
outsb
scas
or
cmp
dec
jne
mov
std
out
or
mov
sbb
test
mov
scas
dec
stos
scas
andl
ljmp
xchg
inc
in
lock
ljmp
cs
outsl
xchg
adc
xlat
mov
mov
mov
sbb
adc
fidivrs
push
inc
jne
mov
push
jbe
mov
hlt
test
in
sbb
sbb
pop
and
push
or
outsl
cmpsb
negb
je
jns
push
mov
jae
jns
stos
outsb
das
jne
inc
data16
scas
sbb
or
push
cmpsb
outsb
jnp
mov
int
lods
sub
test
dec
cli
bound
lods
or
and
imulb
jg
lea
bound
lret
cmp
cltd
jno
adc
cmp
js
add
jmp
sub
addr16
xor
ja
and
outsb
mov
mov
mov
cmp
mov
fstps
dec
jecxz
movb
lds
pop
imul
adc
jle
xlat
loopne
outsb
mov
jbe
sub
mov
dec
cmp
mov
out
xor
scas
dec
imul
cmpsb
mov
lahf
in
daa
dec
into
cwtl
lret
pop
rorb
sub
sub
fisubl
ja
loop,pn
rcll
pop
cmp
and
jmp
ja
mov
mov
lds
jp
inc
in
jge
fs
and
inc
lret
mov
pop
jecxz
or
aad
jmp
lea
stc
cmc
add
push
lods
mov
shll
inc
mov
jecxz
lods
dec
hlt
mov
and
push
inc
and
sbb
xor
dec
fwait
popa
sbb
loope
test
lret
popa
inc
subl
jne
dec
jns
pop
lret
dec
mov
cmp
icebp
mov
push
push
push
lods
fistpl
imul
or
adc
adc
ljmp
loope
shll
test
push
push
mov
enter
inc
inc
dec
enter
adc
test
test
rep
insb
lds
adc
push
lret
inc
mov
xchg
call
and
fucomp
cs
xchg
in
xor
decb
xchg
mov
icebp
xchg
xchg
int
or
sahf
es
pop
insb
scas
add
mov
or
jl
push
push
cmp
stos
je
mov
sub
mov
and
int
dec
jno
jae
repz
in
pop
jp
mov
rorl
xchg
inc
adc
xlat
pop
sub
mov
adc
jl,pn
std
lds
popf
mov
insb
mov
fsubl
adc
jg
and
mov
lods
aad
xchg
rol
and
mov
pop
push
mov
xor
jp
fnstcw
aam
cmpsb
ds
leave
xchg
and
xor
test
test
imul
xchg
pop
push
or
jb
jae
xchg
push
cmp
arpl
clc
pop
cmp
pop
cmc
shll
data16
outsl
inc
shrw
mov
mov
cmp
xlat
push
iret
movsl
pop
bound
in
pusha
incl
inc
in
xor
in
cli
mov
hlt
push
or
nop
subb
mov
and
fdivrp
ss
mov
push
inc
or
fldl
movsl
and
lahf
xchg
xor
or
sti
jno
mov
call
nop
in
es
fidivs
movb
imul
daa
lahf
sahf
jg
sahf
outsl
mov
push
cmp
mov
bound
mov
rol
push
jnp
adc
xor
cmp
xchg
add
stc
lods
outsb
ret
mull
sbb
out
addr16
sub
pop
fldl
lea
fsubs
jge
jecxz
mov
mov
jp
negb
push
inc
or
mov
test
scas
imul
ss
loop
in
add
pushf
fimuls
scas
in
ret
jmp
push
aas
rcrl
iret
dec
xchg
or
cwtl
out
mov
cwtl
aad
and
sbb
or
ficomps
and
push
adc
dec
add
sti
and
mov
xor
dec
or
push
insl
add
push
mov
pop
dec
inc
push
out
sbb
sub
sub
pop
xchg
les
rcrb
or
xor
add
inc
lds
pop
ljmp
add
fucomp
imul
test
scas
lcall
call
aaa
ret
push
loop
mov
adc
shr
push
pop
pop
cmp
dec
dec
test
push
ficomps
cmp
pop
pop
fcos
je
mov
and
int
push
push
outsl
roll
call
in
pop
out
and
out
subl
sbb
fistpl
lret
jg
xor
in
ljmp
das
pusha
fxch
div
loope
inc
push
mov
push
adc
mov
and
cmp
or
sti
movsb
pop
adc
mov
les
pop
pop
pop
push
aaa
sarb
adc
mov
arpl
and
jle
pop
ficomps
jmp
inc
scas
push
sub
mov
cmp
arpl
data16
pop
decl
cmp
aam
pop
mov
push
xor
lods
ds
mov
popf
cmp
sbb
mov
cmpsb
insb
fldt
push
lods
pop
out
aad
idivb
cld
jg
shll
mov
rcl
pop
insb
in
and
loopne
adc
jmp
jnp,pt
lods
or
adc
or
pop
xchg
jmp
xchg
xchg
repz
and
jnp
dec
sbb
je
pop
loope
stc
rorl
iret
sbb
pop
imul
or
adc
cmpsl
sub
ds
lret
sub
xchg
xchg
and
jge
push
push
inc
inc
push
lods
dec
xchg
jns
pop
mov
mov
mov
mov
ljmp
mov
in
lea
rolb
mov
inc
or
xchg
sti
fsubl
inc
mov
sbb
inc
pop
adc
mov
movsl
lods
gs
cmp
outsb
pop
xchg
inc
pop
inc
jge
mov
cs
fs
pop
pop
cmc
aam
xlat
nop
popa
sub
xchg
push
je
stos
sti
adc
dec
fcompl
pop
cltd
xlat
fcomps
cmp
movb
or
jecxz
fsts
xor
vdivsd
sbb
fsts
aas
push
inc
adc
adc
jb
sbb
sub
mov
ljmp
push
icebp
dec
add
rol
lret
test
std
ror
add
sub
adc
xor
mov
add
push
rcll
jns
in
lret
mov
movsb
xchg
adc
je
in
shll
lret
inc
in
push
sub
sbb
mov
sub
loop
xchg
pop
aam
int
mov
lods
mov
repz
and
rcrb
jmp
mov
aam
es
pop
mov
lcall
xor
ret
lcall
adc
pop
ret
jg
pop
jnp
fmuls
sti
xchg
outsl
mov
mov
test
and
push
xchg
sub
stos
xor
sub
add
pop
mov
jg
jo
js
mov
bound
shl
shll
pop
es
adc
cmc
xor
je
cmp
out
fimull
int
in
cltd
jnp
sbb
adc
rclb
sahf
xlat
mov
sbb
imul
xchg
inc
movsb
loop
int
movsb
lret
inc
stos
outsl
cld
inc
mov
inc
jo
xor
rcrb
dec
fwait
adc
rorl
test
roll
sbb
xchg
pushf
dec
sbb
fcompl
mov
ret
outsl
inc
daa
filds
cmp
mov
mov
inc
jmp
dec
lret
dec
out
cs
xor
lods
mov
push
jge
outsb
insb
push
push
jo
add
push
popa
xchg
divb
imul
out
pop
insl
inc
scas
out
movsl
sbb
mov
and
repz
mov
gs
xchg
xchg
adc
fdivl
hlt
or
mov
mov
push
scas
aad
sub
push
mov
sbb
clc
jmp
fcomps
add
xchg
sbb
jmp
in
push
sub
cmp
or
pop
cmp
cmp
mov
aaa
daa
jo
xor
gs
jge
mov
call
leave
arpl
das
inc
push
ds
aam
testl
lcall
mov
push
imul
andb
aam
stos
fnsetpm(287
aam
mov
sti
mov
movb
mov
stos
fwait
data16
cmp
or
push
and
push
ds
cmpsl
cwtl
loope
jbe
dec
pop
pop
pop
cmp
and
xchg
mov
jne
das
lock
xor
add
mov
xor
mov
push
cmp
imulb
add
pop
jg
nop
clc
scas
lock
xchg
aaa
sahf
xchg
fs
dec
test
lahf
ss
hlt
sbb
push
cld
and
sbb
pop
push
pop
pop
push
push
lds
into
dec
orb
mov
jl
mov
outsl
pop
dec
fs
ss
mov
mov
inc
or
in
cmp
and
adc
push
cltd
add
lret
and
or
testb
jne
je
insb
jo
ss
jmp
test
lods
gs
in
pop
rcrb
jae
pop
icebp
rcl
data16
inc
inc
adcb
mov
hlt
loopne
add
loop
ret
inc
xchg
movb
lret
add
lahf
out
gs
fimull
punpcklbw
xchg
fldt
ja
in
fnstenv
in
shrb
and
popf
push
dec
leave
std
or
in
std
ljmp
roll
dec
sub
aaa
jae
or
testb
pusha
adcl
sbb
add
lret
fsubrs
add
addr16
js
sbb
fsts
xor
lahf
notb
jo
sbb
dec
push
jmp
stos
mov
sub
xor
push
jmp
jle
cli
jae
subl
inc
gs
out
add
mov
and
xchg
jb
cmp
repnz
flds
inc
out
iret
pop
lret
out
adc
movsb
xor
sbb
mov
xchg
mov
sbb
push
or
pop
jmp
popf
ja
aad
stos
cmp
sub
loopne
xchg
sahf
dec
xor
mov
and
pop
adc
les
jo
jnp
subl
clc
fsubrp
xchg
and
es
pop
jae
adc
mov
or
xor
add
je
ds
dec
add
jmp
mov
push
scas
scas
lds
fisubrs
mov
rolb
out
cmp
test
ss
fiaddl
popa
jb
pop
mov
xor
mov
xor
push
push
or
mov
test
daa
push
cltd
ret
insl
lock
stos
push
cwtl
mov
cmpl
jmp
js
dec
ja
xchg
cmpsb
sahf
mov
sub
dec
jg
jle
add
xchg
fidivrs
fincstp
and
cltd
dec
mov
fistpll
sbb
mov
repz
xorb
cwtl
repz
add
pop
jle
mov
call
push
xchg
mov
xchg
xor
sub
mov
jae
xchg
popa
cli
cli
cltd
out
push
xchg
pop
lret
hlt
cltd
js
gs
sbb
xchg
mov
xlat
aam
mov
ror
xchg
lock
push
adc
rorb
arpl
cmp
adc
icebp
adc
sub
int3
es
ret
lcall
mov
ret
adc
and
mov
lock
out
xlat
in
pushf
jle
xor
in
dec
mov
rclb
rcll
add
mov
sbb
mov
mov
fcomps
mov
aaa
subb
mov
in
aas
inc
movb
mov
push
es
js
mov
xchg
pop
add
shrl
pop
test
pushf
and
js
lret
fs
fs
push
push
fs
mov
andl
sbb
cld
mov
cltd
dec
pop
jbe
add
int
inc
add
aam
call
cli
sahf
pop
aaa
mov
sbb
mov
add
frstor
std
push
mov
or
sub
decb
push
hlt
aaa
add
iret
mov
or
push
or
movl
mov
mov
jecxz
cmp
jmp
pop
inc
repz
je
pop
xchg
cwtl
push
fistpll
mov
sbb
pop
cltd
mov
add
ror
and
lret
das
test
clc
mov
push
iret
out
xchg
addr16
popf
inc
inc
test
jae
and
fsubs
aas
jp
or
xchg
flds
jb
pop
lods
push
ds
lods
or
sub
shll
fidivs
sub
bound
dec
loope
mov
jmp
insl
stos
dec
pop
xchg
xchg
fimull
adc
das
icebp
mov
pop
js
mov
sahf
pop
add
push
mov
dec
scas
stos
and
repz
adc
repnz
sarl
jmp
cmpsb
aam
pushf
divl
sub
enter
imull
out
inc
out
push
jno
insl
lods
mov
jmp
iret
pop
push
int
fcmovu
fwait
inc
or
dec
arpl
sbb
fmuls
lods
pop
rclb
mov
test
xor
imul
dec
sub
lret
add
ss
add
fadd
daa
sbb
sbb
mov
mov
inc
mov
push
jmp
mov
jg
ss
mov
leave
jb
cs
xor
dec
xor
scas
push
push
das
inc
imul
fildl
jge
jae
inc
adc
jb
add
cmp
ljmp
call
fmuls
sub
enter
lret
loop
mov
push
mov
in
adc
insb
sub
sub
clc
xchg
fnsave
outsl
jae
or
roll
les
movsb
in
inc
sbb
lret
test
shr
ja
cmp
fs
inc
popf
mov
inc
adc
ljmp
nop
movsl
fs
fists
test
and
pop
fcomip
call
xlat
adc
mov
aaa
xor
fcomp
cmpsb
scas
outsb
shll
mov
sbb
shlb
adc
stc
sub
mov
pop
cmp
fnstsw
popa
push
mov
cmc
int
jl
cmp
push
jl
das
jbe
in
outsb
xor
insl
cld
testl
in
jns
std
or
popa
pop
mov
mov
out
out
push
xchg
movsl
xor
rcrb
or
scas
jl
push
sub
sub
mov
frstor
mov
les
xchg
add
push
adc
push
dec
and
pop
mov
je
int
roll
jo
sbb
daa
cmp
cld
push
jle
fs
cmc
sbb
lahf
rcrl
jnp
fcomip
data16
sbb
xorl
push
sub
or
adc
mov
cmp
mov
sbb
push
call
xor
and
cmp
fidivs
call
mov
leave
jns
pop
roll
jne
and
mov
inc
jp
and
add
ja
icebp
fidivl
js
dec
nop
js
pop
mov
or
cmpsl
daa
xchg
dec
push
mov
les
idivb
or
ljmp
cmpsl
ds
leave
ljmp
mov
shr
jmp
cli
add
enter
mov
push
adc
sub
das
push
mov
sbb
jbe
or
hlt
lahf
test
xacquire
adc
lods
lock
es
and
sub
xor
lds
jbe
push
outsb
fdiv
and
ret
inc
cmp
shl
dec
jle
pop
inc
js
push
int3
and
outsb
mov
in
testl
jb
aam
je
ja
loopne
aaa
loope,pn
xchg
lret
xchg
jmp
loope
sub
inc
jns
mov
in
jbe
clc
dec
mov
out
cmp
mov
stos
jp
cmpsb
pushf
xor
mov
sbb
mov
mov
popa
or
fld
adc
cmp
or
lret
mov
jno
mov
leave
adcl
arpl
incl
imul
mov
or
push
mov
into
and
push
das
mov
push
jp
inc
jnp
adc
fs
mov
xlat
iret
mov
icebp
fucomi
cwtl
xchg
or
push
jns
xor
mov
in
adcl
jecxz
push
pop
in
pop
outsl
test
stc
pop
sbb
stc
push
jl
mov
out
pusha
and
inc
add
je
loope
add
jo
or
jl
dec
test
push
fmul
push
nop
xor
adc
rol
mov
mov
jbe
out
push
pop
test
jecxz
gs
mov
fidivl
sbb
and
jb
xchg
xor
push
mov
pop
and
pushf
pusha
fcompp
xor
mov
cmpsl
inc
ja
mov
inc
lahf
mov
jb
jmp
arpl
mov
in
pop
fidivs
popa
sbb
aas
outsb
in
stos
or
dec
enter
adc
mov
push
neg
or
sub
mov
mov
jb
out
jno
in
in
push
dec
fcmovnb
ja
pop
mov
arpl
enter
daa
popa
jbe
dec
mov
pop
outsl
add
sbb
jbe
mov
insl
adc
mov
addr16
push
sahf
in
and
lcall
imulb
sbb
or
test
mov
fnstsw
jnp
mov
mov
std
pop
mov
in
mov
cltd
jne
fsubl
movsl
dec
decb
pop
push
cltd
jmp
clc
xchg
pop
xchg
or
pop
jmp
add
gs
lcall
pop
push
daa
decb
sub
sub
sbb
pop
ss
and
xor
dec
dec
bound
pushf
push
or
add
scas
cwtl
dec
pusha
iret
mov
clc
fimuls
arpl
cmp
fcom
cmp
iret
mov
fldl
test
mov
adc
aad
shlb
xchg
repnz
decb
sbb
clc
in
data16
movsl
call
sbb
jno
adc
test
out
sbb
cmp
cltd
sbbl
sub
aad
ret
mov
rol
arpl
pop
dec
mov
stos
in
dec
mov
mov
xchg
movsl
xchg
mov
and
movsl
fwait
ja
lcall
cmp
pop
sub
outsb
xchg
stos
xchg
push
ds
lret
xor
push
or
mov
lods
push
mov
repz
lcall
jnp
sbb
test
ss
jl
inc
xchg
mov
cli
pop
mov
jp
push
inc
lods
or
lcall
fisubs
dec
cmp
test
mov
dec
inc
stc
push
testb
popf
ret
sub
mov
loope
movb
loopne
inc
fcom
loopne
push
push
mov
fs
pop
push
popf
das
sbb
xchg
mov
inc
mov
add
dec
fcmovnbe
aas
test
jb
orl
mov
and
jge
icebp
mov
mov
hlt
lock
lret
push
repz
mov
gs
push
cs
mov
jle
jg
ss
aaa
sbb
pop
iret
xor
push
mov
cmp
inc
adc
ds
push
adc
mov
scas
aaa
insb
nop
cmpsl
adcb
mov
lock
adc
lods
mov
mov
cli
lods
dec
push
sbb
movsb
imul
popa
enter
pop
mov
movsl
pop
mov
iret
mov
mov
pop
hlt
mov
in
shrb
loopne
cld
shlb
mov
sbb
inc
enter
cltd
icebp
jmp
mov
pop
adc
mov
cmp
push
inc
xchg
and
xchg
je
lods
mov
dec
sub
loope
mov
out
cmp
sub
mov
nop
push
je
pop
daa
in
je
jg
pop
das
pop
leave
in
pop
cltd
sub
xlat
aam
je
mov
mov
and
out
mov
shrb
jmp
jo
adcl
movsb
repz
or
push
inc
dec
neg
lret
loop
lret
sub
iret
arpl
cmp
and
or
fdivr
shl
lock
add
jge
pop
push
je
int
mov
jb
ljmp
pop
int
jno
in
mov
push
popf
sbb
ja
pop
popf
jae
pusha
jo
out
jg
cmp
out
fmuls
dec
sub
in
xlat
cmp
cmp
push
pop
inc
movsl
xchg
loop
push
adc
js
mov
in
in
enter
sbb
ds
lock
inc
in
adc
add
out
test
repz
xchg
int3
pop
lods
add
loopne
jb
sbb
push
mov
sub
ds
and
int3
or
mov
inc
sub
jge
cs
popa
sti
jp
sub
div
shll
insb
orl
cmpsl
add
mov
sbb
neg
or
rcll
inc
call
adc
mov
in
and
xchg
and
mov
mov
mov
outsl
push
adcl
xor
out
ret
ljmp
mov
cltd
pusha
mov
fldcw
inc
sahf
std
clc
testb
jne
mov
push
lods
and
or
leave
xor
lods
nop
xor
xchg
xor
sbb
inc
test
rorb
test
push
jno
mov
adcb
test
add
sub
cmp
comiss
xor
ss
or
int
adc
in
in
ds
or
sbb
push
fsubrs
mov
and
mov
xchg
dec
push
inc
gs
xchg
and
mov
ja
scas
test
roll
into
xchg
pop
add
mov
push
dec
mov
and
les
imulb
push
jnp
fs
push
jae
ja
dec
int
xor
sub
pushl
pop
js
mov
sub
out
clc
jl
push
xor
dec
in
add
mov
sbb
dec
movsl
xor
dec
popf
sahf
test
pop
cmp
mov
ret
lcall
cmc
lret
cwtl
test
scas
bound
clc
stos
pop
xor
mov
xor
xchg
lock
jbe
adc
mul
enter
sbb
dec
xchg
dec
sub
jno
add
mov
aam
daa
lret
clc
xchg
or
loop
and
subl
stos
enter
loopne
in
mov
push
adc
pop
sub
and
das
testb
jnp
cmpsb
sbb
rcrl
std
cmpsb
nop
mov
rclb
and
repnz
and
cltd
aad
popa
int3
add
xchg
ljmp
mov
pop
xlat
mov
push
scas
sbb
loop
inc
lods
mov
cwtl
shrl
add
xchg
xchg
lret
out
dec
pop
fs
xchg
loop
jns
sbb
lds
movsb
movb
cmp
les
cmp
enter
sub
fs
or
fnsave
incl
fucomi
ljmp
or
dec
fmul
in
lock
push
pop
cmpsl
xchg
dec
arpl
out
insb
dec
xor
ss
mov
jns
add
sub
aad
xchg
mov
cmp
imul
cmpsb
test
loopne
add
xchg
icebp
cwtl
popf
cmp
and
add
inc
cmp
sbb
fldcw
loop
dec
sub
jo
dec
test
push
xor
or
jge
stos
xor
mov
sbb
in
adc
mov
and
dec
xor
cmc
imul
xchg
and
mov
inc
jle
cmpsb
xor
shrl
push
push
in
enter
mul
mov
gs
fiadds
mov
sub
and
in
adc
sub
push
jge
jmp
mov
pop
push
sahf
imul
xchg
out
or
js
les
jg
test
mov
xchg
adcl
lods
pop
inc
xor
mov
xchg
adc
scas
or
xor
fcoms
xchg
insl
pop
dec
test
icebp
push
and
or
push
cmp
xor
mov
fst
lahf
mov
sub
js
jmp
xlat
and
lods
inc
xchg
sbb
xchg
out
add
gs
xchg
in
leave
push
jp
or
mov
and
dec
insb
sbb
out
inc
pop
push
outsl
out
sbb
aad
pop
pop
pop
dec
or
subb
rclb
xlat
adc
xchg
movsl
or
sahf
fptan
movsl
mov
aam
addr16
ret
sub
push
das
xchg
cmpl
jp
pop
cs
hlt
lret
mov
cmp
ret
mov
aad
int3
adc
scas
sti
sub
add
inc
sti
ss
and
xorl
jle
cwtl
lret
fists
adc
xor
sarb
sub
test
pushw
mov
mov
mov
rcr
xlat
pushf
repnz
jp
inc
push
push
sub
or
loopne
sbb
push
push
out
out
addl
icebp
stc
scas
cld
mov
aaa
imul
notl
cwtl
test
ja
xchg
sbb
mov
fnstcw
sahf
jae
fwait
dec
xor
hlt
es
loopne
add
add
mov
in
cld
mov
mov
jmp
mov
cs
jl
or
lahf
daa
jmp
xor
mov
fsin
dec
mov
out
sbb
arpl
stos
aaa
or
mov
cmp
rol
sti
daa
add
aas
mov
pop
in
loopne
dec
in
pop
cwtl
out
lahf
jns
push
jbe
push
mov
xor
pushf
cmp
pop
lea
add
push
rcr
das
popa
dec
jne
not
jecxz
rcl
mov
and
lds
fs
bsf
subb
xchg
inc
aaa
popf
repz
lods
lret
sbb
in
insb
mov
mov
push
mull
lods
inc
xlat
mov
dec
loop
lds
inc
iret
std
fsubr
sub
mov
aam
clc
cmc
movsl
cltd
xchg
xchg
cwtl
and
inc
xchg
lret
cmp
iret
into
mov
bound
dec
xorb
imul
xchg
sbb
divb
mov
andl
cltd
lret
repnz
mov
fidivrl
shr
mov
ss
js
hlt
pusha
mov
push
repz
insl
pushf
adc
or
inc
dec
daa
insb
xchg
sub
xchg
mov
aas
and
loope
push
cwtl
push
sbb
incb
orb
xchg
xor
insb
adcb
xchg
int3
or
xchg
mov
cmp
and
sub
cmp
adcb
popf
cmp
mov
cmp
mov
mov
ss
cmp
rcl
cld
cmp
lret
outsl
push
daa
in
imul
xlat
js
mov
dec
and
pop
cwtl
add
sub
jns
decb
rol
fsubrs
xchg
je
negl
pop
out
cmp
fstpt
and
ret
icebp
mov
aad
jbe
jecxz
push
out
outsb
sub
int3
pusha
lock
js
add
adc
push
add
out
adc
out
push
pop
jl
inc
mov
lds
test
testl
arpl
fstps
xlat
inc
sbb
adc
call
mov
cltd
fs
and
lods
jbe
cmp
fbstp
mov
test
mov
pushf
imul
test
push
nop
in
mov
and
ja
and
rcrl
dec
sti
notb
pop
pusha
call
into
lds
mov
hlt
jae
je
int
cld
bound
mov
iret
xor
sub
adc
or
test
mov
cltd
sbb
bound
push
imul
jb
xor
xchg
xor
pop
stos
sub
jecxz
shll
sub
inc
fadd
pop
xor
mov
ljmp
or
call
lret
pusha
lods
daa
repnz
jnp
subl
adc
mov
pop
repz
sti
cmp
lret
mov
pop
lds
mov
enter
outsb
mov
jbe
scas
lahf
and
pusha
mov
flds
mov
sub
outsb
mov
xchg
rorl
dec
ret
xchg
shll
mov
cld
ret
sarb
out
imul
xor
fldl
nop
xchg
xor
cld
xchg
push
cmpl
rcrl
out
mov
sub
adc
test
lea
es
sbb
lcall
bound
mov
inc
testb
mov
fists
ss
out
jbe
xor
int
rcrb
loope
inc
pop
ss
rcrl
pop
add
cmp
in
xchg
mov
mov
sti
idivb
add
ds
call
pop
inc
ljmp
ret
inc
sahf
push
adc
lahf
loopne
sbb
inc
xor
push
inc
mov
int
fdivl
lods
xchg
xor
mov
mov
or
fldl
mov
cmpsb
fcomps
repz
test
jo
loope
dec
mov
mov
xchg
or
scas
adc
fsubrl
cmp
mov
cmc
mov
in
pop
outsb
imul
arpl
xor
mov
jle
insb
jnp
xor
mov
inc
jnp
mov
mov
aaa
dec
jae
rcll
inc
inc
fstpt
sbb
mov
ljmp
clc
cltd
es
adc
mov
pop
lea
jae
pop
dec
fstpl
ret
xor
ss
pop
dec
ret
clc
xor
xchg
movsl
mov
mov
movsb
outsl
push
arpl
jle
mov
mov
enter
cmc
push
xchg
dec
jne
ficomps
sbbb
pop
or
sahf
mov
mov
dec
mov
push
inc
movsl
mov
lods
cmc
aad
mov
enter
lods
add
cltd
in
xchg
ljmp
arpl
mov
xorl
mov
or
lcall
sbb
dec
in
rolb
adc
mov
mov
lahf
fcmovbe
xchg
stos
nop
push
cmp
jae
lret
inc
inc
jnp
mov
add
add
inc
xor
jle
push
push
jmp
cmp
movsb
sbb
inc
mov
jnp
fistps
push
mov
and
fsub
jbe
adc
ds
icebp
or
ljmp
cmp
lret
shr
loopne
adc
jbe
inc
scas
das
push
mov
ds
cmpsb
lea
inc
shrl
jo
inc
adc
cmpsl
mov
fcoml
ret
mov
loopne
add
aaa
lret
xchg
mov
sub
xchg
and
inc
fiadds
jbe
pop
mov
push
or
cld
aad
out
and
mov
xchg
adc
icebp
insb
ss
loopne
jne
cmp
push
xor
add
dec
cmp
sbb
cmp
lcall
ja
push
add
or
gs
lret
adc
push
push
in
rol
mov
mov
mov
xor
pop
pop
push
fstl
inc
mov
cmc
roll
cld
in
and
fcoms
push
cs
adc
daa
sbb
js
in
in
aam
sbb
push
inc
xchg
mov
pushf
jl
mov
mov
mov
out
or
nop
imul
xor
mov
sub
or
pop
lea
push
jns
sub
loope
lds
or
xor
in
mov
lcall
sbbl
sub
into
repnz
loopne
xchg
mov
es
mov
cld
push
stos
fldt
ret
ret
mov
adc
dec
scas
into
sbb
loope
xchg
arpl
push
push
or
push
jle
sub
outsl
in
aaa
fnstenv
movsl
pop
lods
mov
aas
movsb
push
mov
cmp
lock
imul
or
scas
add
je
inc
insl
inc
stos
in
iret
scas
sub
sbb
cld
ss
repz
rolb
bound
adc
testl
cmpsb
push
fwait
je
scas
pop
dec
popa
enter
xchg
push
in
inc
loope
arpl
push
sbb
loopne
jns
xchg
ficomps
push
or
bound
dec
dec
ljmp
movsl
sub
into
jb
adc
aaa
xor
xchg
fwait
sarb
fists
push
js
test
dec
jo
insb
mov
pop
xchg
mov
mov
xchg
aad
pop
fsubr
sarl
rorl
testb
aas
scas
movsb
test
lods
int3
and
js
jp
aaa
fwait
hlt
inc
in
popf
jp
clc
or
fiadds
fmuls
ljmp
ret
loope
les
sbb
sbb
das
sbb
or
movb
or
mov
cmp
and
ret
add
sub
jnp
orl
xlat
je
lea
in
push
xchg
and
inc
psubb
and
xchg
adc
xchg
jae
cmp
rclb
cmp
jno
call
fs
dec
sti
adc
fldt
cmp
adc
xor
jo
sbb
inc
mov
mov
xlat
and
iret
push
inc
gs
inc
pop
and
jnp
cmp
popf
cltd
mov
cmpsb
dec
lahf
test
subb
aaa
inc
dec
inc
push
push
adc
cmp
xchg
cmpsb
sub
xor
cmpsl
add
push
shrb
or
loopne
jne
mov
clc
mov
data16
inc
mov
xor
or
ret
fcomip
out
mov
cmp
or
and
push
adc
mov
mov
mov
frstor
imul
xchg
cli
fdivrl
and
add
dec
mov
and
iret
dec
sti
stc
lods
mov
jno
js
push
mov
cld
adc
fnstcw
cmp
outsl
adc
or
fcmovb
shll
jae
roll
repnz
xchg
sub
out
xchg
cmp
inc
dec
mov
push
into
adc
das
mov
sahf
aas
aaa
clc
xlat
int
mov
inc
inc
inc
enter
dec
or
stc
movsl
pusha
cmpsb
scas
jb
and
out
pop
jge
xlat
ds
daa
and
sbb
xorl
cmp
loope
push
jns
sbb
cmp
cwtl
mov
and
aaa
hlt
mov
xchg
imul
jle
pushf
fidivl
and
cmpsl
test
or
mov
dec
pop
or
push
xor
aam
into
dec
jo
aam
inc
adcb
dec
lcall
ds
ficoms
add
add
push
cmp
shrb
outsl
inc
and
xchg
scas
xor
or
stc
xor
sarl
dec
and
jle
mov
fldt
push
cmp
sub
pop
mov
loope
into
fwait
fnstenv
cwtl
adc
idivl
mov
add
fcmovnu
jne
stos
movsb
bound
call
popf
mov
jecxz
fists
mov
and
lret
dec
adc
pop
sbb
nop
push
imul
cltd
cmc
incb
pop
loope
cmp
pop
pusha
jecxz
inc
jns
mov
sahf
dec
movsl
movsb
popa
adcl
or
sbb
ss
mov
fbstp
pusha
xor
cmpsl
jle
xchg
sarb
push
jp
cltd
test
xchg
cwtl
dec
and
cmp
jnp
adc
xor
xchg
imul
popa
jg
adc
adc
out
and
or
lahf
push
neg
inc
sub
xor
and
repz
les
popf
dec
inc
jb
pop
fsubs
dec
lods
push
mov
or
mov
inc
push
and
cmp
xchg
pop
inc
cltd
and
mov
pop
insb
outsl
pop
pop
nop
push
inc
or
inc
stos
mov
in
cmp
xor
pop
sub
xor
push
repnz
cld
cmp
faddl
push
jnp
movsb
insl
cmp
dec
cmpl
pushf
frstor
rdmsr
fmulp
sti
call
mov
out
loopne
jecxz
sub
adc
add
cld
xor
mov
add
jmp
aam
shrl
pop
enter
sbb
dec
imul
ja
jmp
cmpsl
jae
inc
mov
fstl
fxtract
shrb
rol
fstp
shrl
lea
and
cmpsb
dec
cld
inc
sti
mov
cmpsl
pop
loopne
push
jns
leave
jp
shl
xchg
push
clc
popf
inc
xchg
mov
add
jns
pop
adc
sub
jl
xchg
cmc
pop
mov
push
push
addr16
mov
mov
inc
dec
xor
mov
or
mov
out
xchg
xchg
mov
cltd
cwtl
inc
and
inc
push
jne
adc
jl
into
clc
in
test
and
jnp
sub
pop
out
dec
sub
or
out
repz
hlt
aas
mov
and
js
adc
or
mov
jl
rcrb
xor
lock
push
lss
movsl
xchg
mov
xor
jne
cld
cmpsl
jmp
push
gs
movsb
sbb
push
mov
sub
loope
scas
iret
aas
cli
add
divl
add
push
or
add
push
dec
mov
stos
adc
xchg
dec
fcmovnu
mov
icebp
add
repnz
stc
test
rolb
add
test
xor
lret
nop
js
adc
and
out
int
jle
sahf
cltd
mov
sbb
scas
mov
test
jecxz
jae
js
mov
mov
es
pop
lods
jl
lock
pushf
stos
inc
movsb
jne
push
loopne
gs
jae
jo
movntq
out
aas
hlt
js
xorl
jae
xchg
out
movsb
inc
test
push
mov
and
mov
mov
inc
mov
sub
mov
mov
bnd
lcall
pop
push
out
fdivl
loope
dec
stc
jg
frstor
inc
jg
test
push
aas
clc
jns
bound
std
movb
push
xor
in
and
mov
push
add
clc
lea
fldt
adc
ds
xchg
lock
int3
arpl
add
xor
sub
cmpsl
ja
cmp
pop
add
insb
lock
mov
xor
dec
mov
jg
push
adc
xchg
dec
fsubr
pop
or
pop
cmp
dec
jle
movb
out
mull
arpl
lret
movsl
sbb
xor
test
add
cli
out
insb
jg
movsb
fadd
inc
push
xchg
push
test
xchg
mov
mov
add
and
pop
dec
xor
movl
add
bound
cltd
xor
or
sub
or
sbb
push
jno
stc
sub
sbb
mov
cmp
ja
negl
pop
idivb
add
xchg
cmp
fs
jge
scas
mov
outsl
xchg
or
addr16
jmp
jge
ror
adc
jl
aas
xchg
sar
ds
and
out
ja
xchg
inc
inc
adc
loop
scas
push
and
in
clc
pop
sbb
xor
cli
xor
xlat
push
xor
pop
cmp
mov
test
sahf
xchg
out
into
adc
ds
and
mov
adc
and
jg
ss
mov
addr16
mov
and
jecxz
hlt
stos
mov
insb
xor
pop
test
popa
rorl
dec
adc
mov
shll
pop
add
push
dec
setl
in
jg
pop
imul
pop
fisubrl
add
lods
in
outsl
cltd
insb
sbb
repnz
cltd
jb
sub
ljmp
aam
mulb
push
push
mov
add
pop
inc
cltd
insb
inc
test
cld
dec
ret
mov
movsb
or
repz
push
jg
mov
aaa
sbbl
jb
jle
je
ljmp
mov
cmp
ds
ffreep
push
lock
adc
mov
fldcw
sub
xor
jecxz
cmp
sarb
dec
outsl
xchg
xchg
lcall
fcoml
subl
test
cmpsb
int
das
scas
cld
cmpsl
movsl
push
jge
es
scas
dec
push
iret
outsl
pop
rcrl
or
movsl
bound
bound
push
scas
dec
cmp
pushf
mov
in
and
out
je
sahf
add
int3
loopne
pop
jecxz
imul
cmp
movsb
shl
cmp
adc
ficoml
push
cli
cltd
test
mov
fdivrs
mov
lahf
imul
lds
inc
jae
and
or
test
jns
lret
xchg
mov
mov
jb
ss
add
call
dec
fcomi
stc
and
dec
push
push
mov
sub
dec
push
and
and
sub
lahf
jbe
rol
cs
inc
mov
inc
outsl
jecxz
lret
xchg
mov
outsl
mov
pop
push
mov
cld
inc
pop
pop
cmp
lds
dec
dec
fs
pop
mov
and
cmp
push
jge
stos
scas
pop
repz
cwtl
jmp
inc
jle
loop
test
cld
mov
push
movsl
scas
mov
cmp
fdiv
bound
stos
andl
inc
sbbl
je
jp
cli
fists
imul
cmpsb
cmp
or
jmp
ljmp
stc
sub
sbb
orb
lods
movsb
icebp
cmpsb
call
sub
adc
cmpsl
nop
jno
mov
mov
mov
mov
ja,pn
or
aas
inc
push
sbb
in
in
push
add
hlt
sahf
and
inc
mov
stos
jmp
pop
or
and
lcall
sub
or
loope
addb
incb
xchg
into
les
xor
pop
hlt
repnz
fst
jp
ret
mov
imul
mov
divl
mov
gs
and
mov
inc
aam
nop
pop
sar
in
inc
shll
negb
test
mov
fldenv
daa
mov
xor
imul
pop
mov
push
cld
mov
clc
rolb
mov
fdivs
jb
stos
xchg
inc
xchg
cltd
repnz
imul
out
cmp
pop
mov
dec
inc
packssdw
add
fsubl
in
jae
push
xchg
inc
xor
mov
movsl
pop
inc
pop
xchg
adc
hlt
sub
imul
fsubrl
xchg
cmp
mov
cs
insl
cltd
dec
xchg
out
adc
out
outsb
frstor
jnp
add
lock
sarb
jo
sub
inc
fildll
jmp
adc
ds
dec
adc
adc
pop
fstl
decb
mov
jns
arpl
or
and
mov
pop
sbb
lret
add
mov
stos
add
scas
push
dec
mov
mov
dec
inc
and
dec
xchg
leave
dec
push
jecxz
stos
mov
cmpsl
fcomps
mov
cmp
and
jl
mov
pop
jg
inc
ret
mov
scas
lds
push
mov
aas
jl
sub
leave
out
or
call
xchg
in
sub
cmpsl
push
dec
pushf
scas
jp
mov
cs
sbb
sbb
cld
adc
mov
lcall
es
jl
hlt
cltd
mov
adc
cmp
inc
mov
and
inc
xor
xchg
test
loope
idivb
aaa
shr
pushf
movsl
push
dec
pop
cwtl
insl
int3
pop
mov
and
out
jns
sbb
inc
out
push
sub
and
cmpsb
xchg
push
and
mov
iret
ljmp
pop
mov
cmp
in
add
pop
pop
sbb
ret
mov
sbb
stos
cmpsb
test
xorl
test
or
fstl
dec
aam
push
pop
cltd
jne
fidivrl
lods
sti
push
leave
adc
popa
ror
jnp
jnp
xor
ss
mov
adc
sahf
mov
ror
mov
jg
cmp
jno
jmp
inc
call
pop
shll
in
subb
sti
push
jae
out
push
cmp
jge
push
dec
cli
dec
mov
adc
add
sahf
ss
xchg
sub
movsl
loop
test
mov
popa
repz
cmc
iret
shll
inc
add
adc
xor
out
daa
mov
std
push
outsb
jg
inc
jbe
popa
sti
lcall
or
add
rcrl
andb
mov
xor
out
les
jno
push
push
bound
movsb
lods
push
jge
rcll
data16
mov
cmp
sbb
adc
cmp
jg
sbbl
outsl
mov
cmp
out
and
faddp
rorl
aas
fsubrp
mov
xor
dec
sbb
push
sbb
mov
arpl
fimull
or
push
repz
movsb
loope
in
adc
cwtl
jge
lahf
dec
add
mov
lds
jmp
test
aaa
fnsave
adc
xchg
mov
dec
movsw
fildl
lods
xchg
shll
and
popa
addl
out
jnp
shrb
stos
data16
xor
aam
mov
adc
mov
adc
jg
sbb
inc
mov
push
dec
xchg
rorb
xor
sbb
sbb
pop
mov
lcall
inc
movsl
jle
mov
jmp
fistpl
adc
lock
and
mov
cmp
mov
jl
sub
fildl
dec
and
or
fmulp
in
sbb
push
adc
sbb
push
cmp
cmpl
mov
into
sub
sub
sti
pop
hlt
int3
or
std
jno
xchg
and
xor
pop
mov
mov
call
and
fnstcw
pop
add
in
xchg
push
jnp
test
test
ret
adc
xlat
ret
flds
movl
xchg
cmp
xor
std
cld
cmpb
xchg
inc
psraw
sub
outsb
mov
lods
cmp
xchg
sbb
gs
or
les
mov
add
cmp
adc
jmp
pop
sbb
clc
rclb
imul
out
stc
movsd
xlat
adc
std
js
int
xchg
aaa
enter
lret
stc
jecxz
or
arpl
leave
add
and
xlat
sbb
dec
pop
flds
popf
testl
mov
lea
clc
insl
in
stc
xor
out
push
xchg
fdivs
pop
dec
lods
cmp
mov
out
cld
xor
sbb
imul
xor
sbb
test
inc
jb
jno
and
mov
repz
cld
sbb
and
shll
dec
stos
sbb
fidivl
lret
sbb
adc
pop
and
rclb
cmp
cmc
mov
adc
orb
scas
lock
addl
xchg
vmovapd
iret
mov
xlat
mov
cld
xorb
lods
inc
clc
jnp
push
jp
xchg
sbb
in
fimuls
addr16
jb
dec
xchg
arpl
mov
push
sub
cmp
mov
ljmpw
aaa
popf
pop
and
js
lret
daa
xor
rorb
in
jge
mov
jne
fwait
add
ficompl
inc
js
adc
sub
ja
nop
jae
fdivr
icebp
js
scas
or
jp
in
scas
ret
xchg
add
daa
mov
scas
loop
es
push
sub
xchg
xchg
pop
ret
inc
enter
adcl
and
cld
sbb
dec
ljmp
sti
stos
xchg
xchg
mov
lods
xchg
jno
sub
cmp
sarl
mov
repnz
push
push
sahf
fildl
mov
jle
xchg
mov
push
and
push
ficoml
or
add
je
pop
enter
xor
sbb
cmp
dec
insb
mov
and
adc
pop
or
mov
sub
addr16
es
push
cmp
inc
jge
out
adc
cmpsb
pop
mov
sub
xchg
or
dec
or
fisubs
sbb
jo
addr16
mov
out
dec
dec
lahf
mov
jno
and
push
fdivrs
stos
pop
jg
fldl
sbb
mov
cmp
stc
pop
xchg
js
shrl
adc
aad
gs
xor
out
xor
sbb
ret
xchg
push
push
dec
gs
rclb
clc
inc
je
ja
jne
ss
and
fwait
push
push
sahf
mov
jl
dec
sahf
adc
inc
into
cmp
mov
inc
add
jae
scas
fisttpll
jle
lret
dec
push
popa
ds
pop
test
aas
pop
sarb
stos
into
call
inc
pop
mov
and
iret
and
xorb
sub
inc
dec
inc
push
in
inc
jl
lods
push
sbb
hlt
inc
mov
outsl
hlt
aam
adc
loop
sbb
std
mov
pop
into
mov
pushf
hlt
jns
call
or
sti
sub
mov
sbb
xor
sbb
mov
aas
call
adcl
or
inc
repnz
jns
sub
jl
fisubrl
jns
cli
lds
xor
cltd
and
pop
aad
mov
lods
pop
das
out
inc
inc
jnp
mov
sbb
shlb
sbbl
ss
leave
push
or
push
lcall
pop
ds
inc
sub
or
and
pop
mov
scas
push
add
mov
xchg
lret
clc
dec
mov
cli
fs
lods
xchg
lret
mov
shll
scas
mov
pop
dec
jecxz
pop
xchg
lods
cmp
pop
icebp
dec
sub
jae
xchg
mov
xor
adc
jno
inc
xor
push
lcall
add
or
sti
loop
jge
cli
lret
xlat
pop
stos
dec
iret
add
mov
mov
mov
sbb
lds
pop
addr16
int
aaa
outsl
das
add
or
fldcw
push
popf
jns
imul
jbe
in
mov
dec
imulb
push
jbe
mov
dec
inc
inc
mov
jmp
jo
mov
into
lahf
les
stos
xchg
loop
aad
pop
jmp
jb
xchg
cltd
dec
fwait
mov
mov
rolb
pop
adc
push
popa
loope
push
movsb
mov
xor
cmpb
or
shrl
sbb
adc
and
sbb
imul
pop
rorl
sub
loop
xor
bound
rorb
jno
std
xor
das
loopne
js
push
sarb
sbb
adc
mov
and
lcall
adc
and
pop
lcall
clc
add
xchg
adc
mov
mov
daa
sbb
movsb
fwait
lock
cmp
fwait
scas
mov
lcall
cmp
fdiv
cmpsb
and
hlt
scas
in
stc
popa
adc
jmp
int
fs
addl
cwtl
xchg
dec
outsb
cwtl
in
sti
push
push
das
mov
jnp
fidivrs
xor
cmp
addr16
fcmovnb
movsl
or
mov
inc
add
insl
test
popa
test
xchg
inc
cmpsl
je
hlt
mov
cmp
jecxz
mov
shll
mov
mov
or
inc
test
dec
dec
lret
fmuls
add
cmp
or
xor
inc
sub
movsb
insl
shrb
or
std
inc
clc
pop
call
jns
xor
stos
pop
dec
mov
popf
xor
dec
push
outsl
jmp
mov
xchg
xchg
mov
xchg
push
test
sbb
sti
jne
adc
jecxz
in
inc
xor
adc
jl
pushf
lret
cld
and
mov
jmp
imul
push
es
or
push
pop
sbb
xchg
lahf
mov
mov
fistps
or
mov
sti
cmpsl
jmp
and
push
inc
hlt
and
jle
pop
movsl
cltd
and
dec
cmp
adc
into
lock
sub
repz
loopne
int
pop
and
mov
lods
xorl
lcall
das
rorl
cld
mov
loope
outsb
xchg
jnp
movsb
add
and
movsb
cmpsl
sub
xor
and
dec
hlt
aam
test
or
lock
adc
pop
dec
scas
imul
loopne
cmp
lods
int
pop
fisubl
sahf
push
repnz
cmp
inc
outsb
inc
daa
jle
cli
loope
jecxz
dec
push
inc
daa
mov
test
and
mov
mov
movsb
popf
enter
into
popa
or
rorb
scas
jmp
pop
sbb
negb
mov
dec
and
jnp
sbb
dec
add
or
lds
mov
sbb
xor
imul
insb
push
das
ficomps
cmp
rcrl
dec
iret
popa
sbb
sarl
sub
cmc
into
icebp
sbb
outsb
mov
lret
push
mov
xchg
xchg
sbb
sub
mov
mov
adcb
test
xchg
int
loope
mov
pop
jmp
icebp
ficompl
add
lret
push
cwtl
sbb
shlb
insb
jnp
jmp
mov
jae
call
cmp
into
call
inc
sbb
gs
loopne
mov
fcompl
sbb
dec
push
stos
pop
jb
sbbl
mov
pusha
push
test
fs
mov
rcrb
inc
into
add
pop
mov
icebp
mov
in
pushl
mov
imul
repnz
shll
jle
xor
pop
repnz
lsl
mov
movsl
sbb
mov
test
inc
ret
add
cmp
call
jnp
and
ret
lret
cltd
loopne
cs
rcrl
push
xchg
mov
or
xor
into
xchg
and
sub
add
in
cmp
mov
push
repnz
daa
cmp
out
inc
sbbl
sbb
bound
pop
repz
pop
inc
ffree
dec
pusha
daa
fldcw
popf
mov
test
and
inc
or
scas
dec
gs
and
push
mov
push
in
and
dec
sahf
sbb
jp
sub
pop
add
xchg
mov
cmp
shlb
inc
fwait
mov
cmp
add
outsb
cmp
repz
inc
scas
idivb
push
pop
cmovae
dec
and
dec
aaa
mov
mov
into
push
lods
sar
sbb
jecxz
cld
inc
inc
insb
sub
int
fidivs
lea
push
test
inc
shlb
jmp
sahf
test
cli
in
and
std
cmp
jb
mov
mov
dec
jae
data16
xchg
ret
adc
ds
jecxz
stos
cmp
test
mov
std
nop
test
cmp
dec
mov
lcall
and
lahf
xchg
lods
aas
std
mov
cli
xor
xchg
xchg
cmpsl
or
xchg
jns
shrl
jns
mov
pushf
movsl
mov
cmp
das
loope
arpl
nop
negb
xor
jl
mov
mov
adc
mov
lret
pop
or
add
pop
rol
inc
mov
push
mov
mov
add
arpl
or
jae
jg
loop
shl
sbb
cli
fs
lea
std
dec
dec
imul
mov
dec
xchg
inc
sub
inc
push
fcom
push
clc
xorl
mov
add
rcr
adc
xor
out
outsb
sbb
cmp
jnp,pt
subl
add
leave
daa
cmp
mov
mov
push
mov
lcall
stos
jmp
push
ljmp
lods
clc
mov
push
sbb
dec
shlb
fucomip
mov
sub
sbb
push
jp
inc
fisubl
mov
push
dec
test
add
and
cmc
dec
mov
aad
jecxz
and
dec
mov
push
xchg
test
pop
sarl
lea
rol
sar
inc
cwtl
pop
push
pop
xor
ret
lahf
dec
xor
mov
jg
fs
jg
add
mov
dec
lret
in
inc
cmp
or
adc
mov
dec
cmc
test
jg
jb
into
sahf
lea
cmpsb
ds
std
sbb
cld
or
pop
mov
clc
daa
ds
cltd
dec
icebp
dec
rolb
hlt
mov
pusha
or
ret
sbb
dec
lods
rcll
daa
mov
pusha
stc
adc
rolb
fisttpl
inc
mov
mov
push
rcrb
fistl
dec
pop
aas
lret
stos
push
mov
cmpsb
mov
xor
ja
shlb
cmp
push
outsl
sbb
lret
inc
dec
stc
fdivr
je
jle
xchg
mov
xor
nop
or
or
cmpsl
dec
and
dec
xor
mov
xchg
clc
xchg
adc
pushf
pop
repnz
sti
sub
push
gs
mov
fnstenv
iret
mov
xchg
mov
dec
stc
stos
ret
jno
bswap
mov
dec
ret
loope
aaa
push
pusha
pop
int
mov
fisubrl
ss
xchg
das
test
adc
inc
movups
inc
inc
in
sbb
or
xor
aaa
and
push
push
hlt
jmp
iret
dec
jge
and
cvtpi2ps
xchg
ficompl
mov
repz
leave
sbb
or
mov
mov
xchg
sub
call
add
mov
loop
cmp
and
cltd
loop
inc
popa
mov
pop
leave
mov
add
adc
outsb
add
inc
push
dec
mov
cmpsb
into
pop
inc
cmp
pop
int3
or
popf
rcll
enter
test
imul
aad
insl
mov
xchg
lods
aam
int
dec
sti
das
sub
adc
sahf
inc
push
pop
mov
aaa
lcall
subl
mov
frstor
or
xor
stos
add
leave
jle
mov
aaa
cmp
aaa
sub
je
push
jne
inc
and
test
mov
in
or
and
xchg
loop
pushf
cltd
dec
das
add
cli
ja
dec
shl
call
test
mov
in
adc
jmp
mov
push
mov
cmpsb
dec
in
repnz
enter
es
enter
sub
sbb
cltd
movsb
das
jg
mov
or
popa
xchg
jno
data16
pop
fidivs
stos
cs
push
in
pop
jbe
sub
mov
add
sub
out
fwait
shlb
sub
dec
sub
andnps
fsts
pop
mov
jecxz
inc
imul
mov
pop
jmp
cmc
cwtl
jne
rorl
mov
and
incl
jns
adc
sarb
mov
es
push
repz
xor
sub
adc
pop
test
pop
push
cmp
pusha
data16
jb
mov
cmova
mov
or
int
sub
shlb
push
push
andl
dec
cmpl
cmp
les
movsb
adc
pop
push
stos
cmp
xor
jno
in
fildl
fwait
nop
aam
lock
sti
por
outsb
scas
dec
out
mov
cltd
adc
cld
lods
lahf
subl
mov
xor
inc
mov
pop
lret
cmpsb
aam
cwtl
scas
inc
xor
test
add
imul
fsts
nop
and
push
mov
or
sbb
cmp
jmp
add
push
jecxz
sti
xchg
cwtl
inc
dec
shll
clc
push
fwait
subb
mov
mov
dec
scas
cmc
pusha
movsl
dec
adc
mov
fdivs
cmp
dec
lcall
and
movsb
ret
scas
or
mov
lods
ret
int
out
ds
cld
lret
outsl
fnstsw
and
les
mov
mov
fmull
mov
xor
cs
pop
idivb
xlat
adc
outsb
mov
ds
xchg
sub
pop
pop
in
pop
mov
cmpsl
xor
outsl
jb
cld
xchg
xor
mov
loop
pop
out
push
pusha
mov
sub
dec
ret
dec
arpl
cmp
aam
fisubrl
mov
jge
mov
jmp
and
xor
sbb
les
pop
fmul
sbb
xorb
xchg
xchg
and
lock
or
dec
dec
xchg
dec
jle
mov
mov
dec
into
push
mov
int
jne
aad
shll
in
mov
sub
jb
loop
jnp
sbb
inc
popl
or
pop
lods
aam
out
inc
and
add
mov
scas
fstl
sbb
fwait
bound
xor
adc
and
fdivrl
or
cld
and
mov
xchg
jmp
mov
fbstp
imull
lahf
insl
insb
push
sub
xchg
inc
mov
iret
inc
jl
push
adc
aas
in
fcoms
jne
divl
jo
and
mov
xor
xchg
cmpl
fldl
jae
sub
jge
sti
clc
jne
xor
and
add
nop
dec
data16
sub
in
xor
add
dec
clc
leave
lea
xchg
test
jne,pt
lcall
cmp
lcall
cmpsl
xchg
out
jmp
call
dec
adc
enter
fadds
lock
lods
xchg
pop
mov
or
das
iret
push
pop
sub
mov
stc
outsb
call
scas
jo
insl
cmp
adc
sahf
sub
adc
scas
scas
les
pusha
cmp
cmc
sub
addr16
cli
mov
in
fadds
pop
inc
movsl
shlb
xor
mov
pop
pop
pusha
and
inc
leave
mov
mov
stos
mov
adc
je
testb
cmp
pop
pushl
ficoml
mov
or
out
pop
js
stos
std
pop
xchg
inc
or
mov
out
mov
add
jnp
mov
inc
rcll
cwtl
insl
or
mov
cmp
xchg
add
sti
sahf
mov
in
xchg
push
arpl
fmull
sub
mov
push
and
fsub
xchg
xor
cmp
xlat
xlat
fcmovne
xchg
jbe
mov
push
mov
incb
fstl
jns
jnp
adc
arpl
jne
push
das
imul
mull
push
inc
cmp
push
call
fucomi
scas
jbe
mov
adc
iret
pop
movsb
fsub
and
or
mov
push
push
paddd
xor
mov
sahf
mov
jns
lods
mov
int
add
das
jb
dec
mov
aas
test
push
cmc
rcrl
jmp
movsb
out
push
inc
sub
jmp
jb
jo
sahf
movsl
adc
scas
sahf
dec
imul
aaa
jne
inc
mov
repz
xchg
jae
or
loope
push
sbb
mov
lret
mov
stos
mov
push
and
ret
xor
les
lcall
sbb
mov
cld
cmp
dec
mov
pushf
lods
lret
lret
fcoml
xor
ljmp
mov
cs
js
push
js
mov
filds
inc
cmpsl
push
mov
cmp
test
or
pop
lret
mov
push
jne
lds
cmp
fst
pop
insl
and
mov
adc
test
xchg
mov
das
sub
sub
xchg
and
inc
push
and
ss
sbb
sbb
mov
rclb
es
loopne,pt
mov
shll
adc
iret
pop
incb
jo
leave
xchg
or
xor
dec
dec
cmc
pop
addl
push
je
sti
and
lret
or
cwtl
mov
pop
mov
pop
add
hlt
inc
or
loop
mov
std
jnp
push
jo
push
lock
xchg
stos
push
rolb
mulb
and
add
cmp
sbb
push
out
cmp
call
dec
mov
fistpl
aas
push
add
cmp
int
lock
aam
mov
js
adc
mov
out
rcrl
stos
mov
sub
or
adc
sbb
xor
ret
int
dec
cmp
jg
popf
jp
mov
cmpsl
pop
iret
and
iret
fnstcw
xchg
int3
inc
jge
aas
xlat
jae
pop
xchg
sbb
dec
adcb
sub
out
aad
jne
inc
xor
mov
ljmp
call
sti
orl
cltd
je
and
adc
ret
lds
jge
ss
ja
push
cs
sarl
sbb
jmp
int
dec
cmc
dec
pop
loop
xchg
or
bound
pop
pop
idivb
dec
xor
sbb
shrl
hlt
mov
xor
sbb
sub
cmp
lods
rcl
mov
dec
ret
aad
ret
icebp
cli
push
out
pop
cli
imul
jae
inc
mov
inc
mov
out
pop
ja
sti
js
aaa
in
repnz
and
rcll
xchg
mov
xor
mov
fdivrs
sub
inc
add
lret
pop
sub
xor
push
jns
pop
imul
jae
cmc
pop
sub
fdivrp
mov
movsb
adc
clc
inc
xor
xchg
rcrl
sub
sbb
aas
mov
les
xchg
push
inc
add
jno
insb
fcomps
jb
jg
push
and
hlt
jae
call
fcmovbe
in
and
fadd
inc
adc
jb
iret
test
iret
jb
adc
aam
jno
or
push
and
leave
fwait
push
inc
imul
cmp
loope
sub
enter
lret
shrb
icebp
adc
inc
push
xor
test
lahf
je
andl
lret
scas
or
push
ljmp
sbb
inc
ds
jns
push
xchg
lods
cmp
mov
mov
pop
fadds
push
jo
in
nop
push
popa
lahf
ret
out
insb
push
mov
or
jl
sub
jecxz
jmp
lods
jnp
mov
pop
imul
std
out
cltd
iret
push
cwtl
lea
push
mov
mov
jmp
les
sahf
js
pop
fs
jns
mov
mov
in
dec
push
in
cltd
push
xor
movsl
inc
add
loopne
mov
ja
inc
movsl
xchg
pop
and
mov
loop
popf
push
xor
sbb
hlt
lret
scas
inc
adc
mov
mov
cli
xchg
lahf
mov
ja
jnp
xchg
into
repnz
in
sub
cmp
lret
push
lock
cmp
into
cmp
fnstenv
rcll
cmc
jo
jp
adc
lods
movsl
mov
cmp
and
mov
sub
in
cmpsb
outsl
outsl
xchg
fstpt
add
lods
enter
and
mov
jno
mov
pop
fsubl
sbb
fidivrl
dec
fsubrl
pop
pop
sbb
and
pop
insb
adc
andl
cltd
sbb
mov
add
cmp
jno
xchg
fdivp
add
and
andl
or
jle
mov
adc
mov
lahf
push
sub
lahf
mov
movsl
cmp
dec
push
dec
loope
enter
sbb
sub
push
pusha
cli
rcrl
outsb
insl
int3
push
mov
jno
test
imul
sub
jle
jmp
mov
push
loopne
or
addr16
lock
outsb
addr16
mov
adc
fwait
imul
mov
aad
outsl
dec
je
imul
push
daa
push
daa
repnz
and
xchg
adc
and
xor
mov
popf
cmc
int
inc
fstp
xchg
fsubs
test
sbb
and
iret
incb
dec
sub
xor
and
sub
repnz
mov
pushf
xor
add
add
imul
into
sbb
mov
clc
cmpsl
mov
push
hlt
ret
std
jmp
arpl
jo
int
test
adc
pop
push
pop
mov
fstpl
and
cmp
mov
xchg
xchg
insb
dec
ret
jl
mov
cmp
push
gs
int
xor
xchg
pop
pop
je
ret
and
push
rol
jmp
je
dec
adc
inc
iret
sbb
int3
pop
mov
pop
sbb
jmp
faddl
jo
clc
loopne
scas
addr16
hlt
sbb
and
adc
scas
stc
in
orb
sub
ficomps
repz
les
enter
std
test
test
jmp
fxch
jnp
push
jl
and
xlat
insb
inc
push
jmp
mov
lock
rol
js
dec
jmp
mov
pop
into
sub
rorb
notb
xlat
pop
inc
vucomisd
fsubl
mov
mov
jne
jmp
test
enter
cwtl
push
jecxz
nop
xor
mov
mov
idivb
sub
xchg
outsl
mov
fsubrs
mov
rep
and
lods
mov
rol
mov
sub
mov
jg
jbe
sbb
mov
int
push
pop
mov
mov
outsb
push
dec
xlat
mov
ljmp
je
nop
in
mov
cli
cmp
pop
popf
sub
test
mov
or
or
pop
lcall
mov
mov
out
std
cltd
cmp
lcall
sub
inc
fiaddl
adc
ljmp
pop
cld
mulb
shll
jnp
pop
lret
fsub
xchg
mov
push
and
bound
popf
dec
add
cmp
dec
roll
add
jae
out
jbe
inc
shrl
lret
lahf
mov
jae
or
inc
lods
das
rcrl
pop
jns
outsl
adc
cmp
mov
jg
xchg
subl
outsl
hlt
and
mov
movsl
xorl
mov
imul
subb
mov
jae
push
fbstp
scas
pusha
sub
cmpsb
xlat
ficoml
pop
sbb
mov
mov
mov
xlat
push
out
cmpsb
outsl
adc
sbb
mov
ljmp
test
or
mov
fmuls
inc
xchg
sarb
add
xor
inc
lds
fisubrl
dec
popa
sub
clc
mov
out
dec
inc
bound
js
cs
js
cld
into
loope
xor
add
sub
and
jmp
xor
loope
ds
cs
dec
push
ret
xchg
dec
out
mov
ret
xchg
dec
incb
and
xchg
cmpsl
xor
div
or
bound
divl
jmp
int3
xor
rorl
loop
inc
sub
jns
push
cmp
dec
mov
fcoms
in
lcall
pop
push
loope
and
hlt
push
into
arpl
rorl
inc
xor
mov
pop
in
in
lahf
test
or
lods
xor
cmp
push
mov
adc
bound
jae
loop
adc
and
jne
fwait
in
pop
or
gs
ja
or
xchg
iret
mov
fwait
pusha
cmpsl
lods
aaa
nop
push
jl
jns
dec
std
and
outsl
inc
adc
jmp
cmpb
adc
mov
sbb
pop
push
outsl
ffreep
in
popa
popa
xchg
mov
push
idivl
lods
sti
lods
in
xor
int3
lahf
in
jge
fldt
push
int
push
push
jb
xchg
adc
sahf
push
dec
xor
add
cmpsl
test
add
sub
sbb
fistps
divl
mov
rolb
scas
sbb
jp
cld
xchg
in
inc
mov
stos
xchg
inc
pushf
loope
mov
ja
insl
cwtl
xor
sbb
aam
rcl
cld
out
mov
jbe
xchg
and
inc
ds
cwtl
vmread
push
push
pushf
dec
rcrl
mov
jne
xor
inc
movsl
pop
nop
jp
or
repnz
in
mov
insl
mov
xchg
hlt
xor
shrb
or
cmp
push
jmp
sub
cmpsl
mov
mov
je
out
mov
xchg
lret
les
cli
inc
xor
aad
sub
cmc
pushl
shl
jb
cmpsb
sahf
cmp
pop
dec
cmova
add
push
jnp
xchg
imul
in
lods
pop
insl
ror
lods
cwtl
loop
inc
jl
rorl
shr
fsubs
ja
push
mov
lret
repnz
orb
ljmp
mov
cs
pop
js
lret
xor
jns
into
daa
dec
les
fmulp
or
push
sub
add
shll
jge
movsl
cmp
mov
divl
mov
js
test
leave
mov
xchg
out
arpl
xorb
jge
test
call
mov
inc
pop
add
or
sub
pop
js
js
adc
or
mov
mov
or
lcall
mov
jl
push
jl
lret
int3
int3
outsb
push
mov
adc
mov
mov
bound
repnz
jno
add
popa
jle
mov
and
mov
aaa
and
xchg
adc
push
jne
mov
cmp
pop
mov
mov
pop
push
aad
iret
lds
pop
jae
scas
cmpsb
ret
lock
addr16
mov
repnz
shr
in
mov
jbe
mov
data16
daa
sahf
cmp
jnp
push
add
arpl
out
out
jmp
mov
repz
jno
mov
mov
call
jae
xorl
inc
cld
sub
add
orb
repnz
call
cmp
daa
aad
aaa
shl
cmp
aaa
xor
sbb
rclb
inc
hlt
push
insb
shr
cmp
mov
fs
xor
ljmp
jmp
or
fwait
add
push
jle
mov
sti
fdivrp
mov
mov
mov
or
or
and
xor
loope
add
iret
and
ljmp
fcmovne
mov
fyl2xp1
cmpsb
cmpsb
shll
fs
xor
sbb
mov
mov
ret
lret
lods
ret
outsb
call
lds
jb
cwtl
jnp
mov
fiadds
loopne
dec
jle
imul
jmp
inc
xor
mov
push
ret
inc
loopne
or
mov
xor
xlat
loopne
inc
stos
jnp
or
inc
out
mov
add
jg
dec
movsl
xchg
push
aad
sub
enter
sbb
nop
call
js
jmp
jno
bound
or
adc
cmp
and
push
jnp
add
fnstsw
sbbl
mov
jb
ss
mov
iret
jbe
scas
es
pushf
mov
cmp
mov
addb
jno
cmp
jbe
in
cs
js
cld
fadd
icebp
iret
icebp
aad
test
call
in
sub
push
aam
ja
jne
push
sbb
push
aam
mov
push
cltd
sbbb
push
inc
sbb
enter
test
mov
icebp
popa
ror
mov
push
ret
inc
insl
js
lret
in
call
dec
jmp
test
inc
cmovb
and
inc
add
sbb
popf
rorb
adc
es
js
xchg
leave
sti
mov
push
xor
orb
fbstp
arpl
sbb
repz
lods
xor
sbb
sub
sub
and
icebp
cmp
sub
leave
mov
pxor
mov
xchg
stos
jmp
pusha
popa
dec
and
mov
rorb
push
jns
loope
call
outsl
adc
arpl
popa
add
out
mov
mov
fistl
and
push
in
insb
sti
push
sub
test
outsb
sarb
rorb
es
push
nop
dec
sahf
ret
mov
push
dec
nop
rcrl
push
xchg
subb
je
jle
repnz
xor
in
xor
fcmovu
fldenv
dec
jge
xor
dec
in
dec
jns
pop
xor
cmp
pop
addr16
push
xor
xchg
sbb
or
dec
fs
jle
lahf
repz
or
adc
dec
popa
je
or
shl
mov
fstps
adc
mov
push
cmp
inc
cli
in
and
cmp
bound
int
notl
sub
es
insl
push
subl
fidivl
into
int
inc
dec
mulb
push
jo
test
add
cmpsl
inc
fnsave
push
inc
test
dec
jp
jmp
xchg
and
adc
pop
push
repz
jmp
fiaddl
data16
aaa
pop
rcll
insb
cwtl
outsb
sti
push
sub
cmp
ret
lods
pop
ret
mov
or
mov
pop
fwait
xor
lcall
sbb
divl
hlt
mov
je
add
fmulp
loop
ret
pop
dec
xchg
inc
ficomps
mov
xchg
mov
in
xor
mov
mov
fimull
je
cmp
mov
clc
fs
mov
jmp
nop
inc
stos
push
pop
sbb
inc
cmp
rcll
nop
not
pop
cmpsl
and
lock
orl
ret
aaa
xchg
shlb
lods
sbb
cmpsb
and
leave
adc
jbe
movsl
outsb
pusha
jg
pop
cmpsb
cmpsl
xchg
fchs
sbb
jle
add
adc
das
int
mov
fldl
popa
add
xlat
xchg
lock
push
arpl
movsl
fs
cmp
movsb
pop
push
inc
fstpt
pop
adc
jl
xor
mov
mov
out
movsb
lret
or
test
js
add
sbb
mov
ds
mov
jle
adc
sbb
cwtl
popf
nop
popa
test
aaa
cmp
lods
test
fnstsw
in
clc
fwait
aas
insl
lds
push
add
pop
dec
fimuls
lock
packssdw
out
inc
add
jbe
add
movntq
out
mov
xchg
sahf
mov
scas
dec
cmpsb
mov
jp
add
lock
jb
add
push
cld
inc
call
lods
xor
push
xorb
pop
out
gs
cmc
out
inc
flds
xor
xor
lret
ds
xchg
jge
mov
mov
ss
inc
dec
push
inc
aam
imul
ss
lods
jge
lock
pop
out
jg
es
cmpsb
push
loop,pn
loop
test
subl
sub
or
xchg
mov
push
inc
fdivr
xchg
cmp
jecxz
mov
jno
fstpl
xchg
fadds
fdivr
mov
push
cmc
mov
adc
jns
mov
call
nop
repnz
lods
dec
or
imul
xchg
mov
adc
mov
dec
lcall
std
ret
out
jmp
movsl
lods
add
pop
aam
lret
pop
or
mov
cld
sbb
mov
mov
mov
jae
inc
push
add
aas
cmp
mov
xchg
dec
repnz
add
fisubrs
adc
aas
repz
in
movsb
push
cmc
dec
mov
mov
push
ss
pop
lcall
sti
loopne
cmc
pop
xlat
pop
ss
rorb
shr
sub
and
into
pop
push
out
repnz
fdivp
add
test
sbbb
call
jne
and
sbb
imul
lcall
sub
xchg
shlb
xchg
mov
jno
sahf
lahf
lret
mov
lock
jo
push
scas
inc
xchg
ja
jge
mov
aas
movsb
add
ffree
jg
xchg
repnz
lea
adc
bound
neg
lods
jge
and
stc
push
test
add
and
out
int
inc
bound
adcl
fstpl
ja
add
jb
jecxz
push
jmp
fldt
add
sti
pop
test
jbe
jno
addb
hlt
add
adc
out
rclb
mov
in
sbb
dec
mov
jne
sbb
jno
inc
test
dec
aas
ret
inc
pop
call
nop
flds
repz
jg
sti
lock
in
or
test
xor
xchg
out
cmc
or
lcall
das
or
sbbl
repnz
test
pop
orl
xchg
repz
in
lcall
imul
xor
js
cmp
add
inc
lcall
inc
mov
js
pop
icebp
xchg
dec
add
pop
sub
push
and
mov
xchg
xchg
stc
popa
xchg
pop
inc
jo
dec
push
fwait
xor
dec
test
inc
pop
mov
inc
icebp
clc
mov
js
leave
push
sub
std
mov
adc
cmpsb
xchg
nop
cmp
iret
mov
leave
cmp
lock
jne
sti
mov
mov
cld
jg
jp
mov
dec
fisttps
sub
int
lcall
add
push
jb
leave
outsb
cmp
xor
xchg
mov
bound
cs
push
cmp
je
aas
xchg
fdivrp
fbstp
scas
xchg
jmp
pop
push
bound
aam
push
xor
out
mov
xchg
jbe
add
hlt
imul
or
cmp
ficoms
push
push
mov
dec
mov
pop
pop
nop
faddl
xorb
out
leave
ljmp
test
pop
inc
loop
xchg
out
mov
outsl
adc
cmpsl
int
popf
mov
cmp
xor
je
inc
jmp
lds
lds
mov
xchg
inc
arpl
aas
push
loope
xor
or
lret
dec
aas
mov
xchg
and
xchg
jg
push
mov
sahf
lock
pusha
cmpsl
test
push
lahf
mov
repnz
xchg
xchg
testb
aaa
xor
in
loop
lods
fisttpll
cmp
mov
push
pop
rclb
int3
fldl
and
mov
xor
dec
imul
add
dec
stos
sbb
dec
and
adc
iret
ficoml
lea
out
or
inc
insl
sub
mov
loopne
lret
xchg
mov
xchg
push
sbb
push
int3
jle
mov
jo
jle
jl
test
adc
lcall
mov
xor
sbb
in
mov
pop
lahf
mov
sub
push
mov
hlt
repz
in
sbb
sub
sub
adc
shrl
test
mov
sub
xchg
leave
int
push
outsl
push
lods
mov
add
fsubs
notb
lods
or
gs
les
mov
sub
push
lods
imul
stos
jl
dec
mov
push
pop
adc
stos
pop
sub
test
imul
dec
xchg
stos
popf
inc
sub
sahf
test
adc
jno
cli
daa
xor
rcrb
inc
stc
hlt
push
xor
outsb
popa
aas
stos
pop
jl
fidivl
mov
pop
xor
mov
pop
inc
das
lcall
add
adc
cmp
insl
into
push
int
aad
jg
jecxz
inc
pop
jecxz
push
mov
fdivs
mov
xchg
adc
xor
iret
sti
sbb
sub
sbbb
fimuls
lahf
pushf
repz
jmp
mov
add
sub
scas
xor
adc
fs
mov
in
cld
inc
mov
sbb
pop
sub
sub
call
dec
sub
mov
es
loopne
in
push
mov
adc
jge
loope
mov
dec
cmp
or
testb
push
fcomps
dec
test
jecxz
sbb
cmp
xor
sub
pop
in
adc
mov
pop
les
subb
jle
daa
inc
rol
enter
lds
sub
cs
mov
jno
imul
je
insb
push
dec
pusha
mov
xor
sub
xchg
movsb
into
xchg
addl
pop
push
sbb
pusha
int
push
addr16
scas
push
gs
cmp
inc
dec
mov
cmovg
lods
cwtl
int3
push
fdivr
sub
jg
jae
mov
jo
repnz
dec
ret
into
outsb
cwtl
daa
and
pop
xchg
in
sbb
or
test
push
cwtl
dec
and
xor
jl
leave
lret
add
xchg
mov
mov
jl
insl
xor
pop
outsb
inc
mov
jecxz
cmp
pop
daa
movups
imul
jge
pop
mov
roll
cmp
fimull
jo
push
add
push
mov
pop
add
jp
loop
jae
mov
nop
inc
cli
imul
in
std
dec
push
or
fidivrl
and
loopne
loope
mov
pop
cmp
loope
adc
lea
jns
add
jnp
lahf
pusha
sub
lock
mov
arpl
pushf
in
sub
xor
ss
sbb
pop
push
mov
sub
sbb
in
inc
cmp
int3
push
cmpsl
mov
pop
add
call
scas
rcrb
xchg
and
lret
mov
push
dec
aam
add
mov
pop
adc
mov
imul
cmp
arpl
xchg
and
jo
xor
cmpsl
cltd
outsw
xlat
and
lcall
pop
cmc
and
stc
ds
mov
jbe
addr16
shrl
cltd
xchg
pop
pop
std
cli
xchg
inc
jp
jno
iret
mov
mov
mov
jo
xchg
pop
adc
xor
xlat
xchg
xchg
popf
pop
out
jns
ja
jge
rcll
add
daa
xchg
mov
sti
cld
in
test
adcl
push
pop
push
and
push
inc
sahf
repnz
pop
imul
jae
push
fs
test
xchg
sahf
fisubs
sub
jp
movsl
lds
fwait
pop
pusha
add
in
faddp
roll
loope
jg
mov
lds
cmpsb
cld
bound
ret
testb
xor
mov
mov
mov
jle
popf
add
xor
jle
ret
mov
or
adc
mov
xor
sbb
daa
pop
and
xlat
xor
push
ss
or
mov
addr16
lds
jp
sahf
mov
adc
mov
sub
sbb
mov
mov
jmp
mov
dec
push
inc
pop
mov
mov
shlb
push
cmpl
in
mov
xchg
and
mov
pop
stos
mov
jo
push
hlt
je
aas
rcrb
push
add
cmp
bound
xor
jnp
pop
je
push
add
test
xchg
pop
scas
mov
mov
std
insl
pop
push
inc
dec
adc
xchg
adc
push
cltd
or
pop
xchg
inc
mov
insb
or
mov
ds
dec
pushf
in
push
sbb
addr16
mov
and
sbb
das
es
lcall
adc
sub
jo
repz
testb
loop
push
sbb
jmp
add
pop
int
jmp
lahf
jbe
ret
mov
aad
mov
iret
icebp
arpl
test
in
fstpl
fcomps
daa
cwtl
out
lahf
stc
jge
leave
bound
adc
fwait
cmp
adc
popf
mov
data16
ja
das
ljmp
in
xchg
aas
cmp
mov
or
loope
xor
mov
fnstenv
rorl
scas
es
inc
or
jge
dec
loopne
push
push
subb
aad
adc
imul
in
xor
imul
cs
add
adcb
out
sub
push
xor
shlb
insl
jno
or
repnz
loopne
cmpsl
sbb
ss
jg
mov
subb
jne
aas
xor
mov
iret
pop
int
out
aaa
orl
jb
xor
mov
or
in
and
jbe
addb
jge
mov
scas
push
pop
jge
jl
ss
mov
mov
js
lcall
add
sub
ljmp
ret
pop
sub
sbb
cmpl
subb
sahf
inc
sbb
daa
xchg
jne
in
lods
jne
aad
add
ffree
stc
mov
cmp
push
xchg
pop
sub
xor
ss
test
daa
nop
push
mov
or
repnz
xor
mov
gs
dec
xchg
mov
into
popf
repz
push
das
inc
dec
orb
mov
inc
shll
mov
inc
call
roll
push
test
out
jb
lret
bound
jnp
push
in
fsub
pop
jno
pushf
pop
ss
fst
or
push
insl
das
push
dec
or
mov
aaa
loopne
pop
xor
insb
inc
push
xchg
sub
mov
js
lock
dec
leave
cmpsl
mov
jmp
insb
mov
scas
ss
cmp
cmp
xchg
mov
mov
dec
mov
aas
push
push
push
inc
xchg
pop
scas
stos
jns
push
in
inc
push
add
fcmovnu
mov
cmp
pop
mov
xchg
add
xchg
pop
lds
iret
ret
pushf
push
inc
jbe
push
xor
fiadds
call
or
stos
into
icebp
imul
push
imul
adc
test
enter
push
dec
std
fs
enter
mov
sbb
or
insl
sbb
pushf
sub
pushf
mov
cmpsl
fwait
pop
les
xchg
jle
lret
cmpsb
push
push
xlat
cmp
and
insb
loop
dec
fists
loopne
shr
popa
jmp
jl
lea
rolb
push
sbb
and
mov
push
cli
push
lods
loop
xor
scas
in
mov
ljmp
inc
lods
in
fimuls
push
in
mov
lock
mov
out
xchg
cmpsb
sub
into
jle
sub
scas
add
scas
add
mov
sti
cmp
in
pushf
mov
bnd
and
jp
in
repnz
nop
or
outsl
cmp
pop
pop
pop
xor
outsl
faddl
fwait
jnp
fwait
push
jae
fcom
movsb
out
or
cld
fbstp
fiadds
movhps
push
cmp
cmp
popa
dec
adc
repnz
mov
cmp
xor
xor
xor
test
nop
sbb
mov
pop
lahf
mov
adcb
cmpsl
push
jg
int
cld
adc
lea
aam
cmc
cmp
push
xchg
imul
ror
or
adc
lock
cltd
pop
mov
aaa
loope
stos
dec
cs
leave
jmp
xor
lods
faddp
aad
pop
subl
xor
xchg
idivb
or
mov
sbb
cmpsb
stc
and
add
ficoms
mov
popf
and
adc
les
xchg
loop
cmpsb
pop
add
andl
push
std
add
outsl
push
cmp
jle
inc
jp
dec
push
cmc
leave
add
int
inc
cwtl
jg
or
scas
inc
stos
pop
cmp
and
in
js
leave
xchg
or
jg
in
fists
sbb
jecxz
add
stos
out
mov
and
pushl
mov
stos
mov
cltd
sbb
lret
cmp
or
loopne
xor
add
mov
fdivrl
inc
sub
test
loope
inc
jg
imul
xchg
rcll
xorb
mov
test
adc
jns
lock
jae
out
xchg
mov
popa
mov
sbb
sbb
mov
xchg
pop
jne
push
push
outsb
out
test
enter
xor
pop
js
jo
daa
push
or
push
adc
xchg
fnstenv
and
mov
aad
add
adc
adc
cwtl
fildll
push
shlb
and
jne
les
notl
dec
adc
out
or
sbbl
push
mov
sub
je
mov
sbb
js
pop
jecxz
icebp
dec
data16
mov
inc
sbb
mov
gs
jecxz
jp
dec
int3
cmc
negl
testb
add
sbb
cmp
aad
mov
sub
es
push
fld
add
mov
js
lret
andl
and
cmp
adc
out
outsb
sub
xchg
in
hlt
jge
out
fldl
in
imul
pushf
stos
test
sbb
lahf
push
ja
daa
or
push
mov
or
lods
rcrl
push
clc
imul
mov
std
add
dec
imul
push
test
cmp
mov
inc
lcall
cmp
cld
mov
and
mov
xor
aas
push
cs
shlb
dec
out
pushf
mov
xchg
ficomps
sbb
push
cmp
imul
test
jl
lahf
mov
subl
lret
test
in
pop
punpckhwd
xor
fisubrl
lret
icebp
outsb
lret
loop
adc
jo
cltd
push
insb
ret
and
fwait
movsl
push
cwtl
popa
xchg
addr16
sbb
add
add
ja
mov
xlat
enter
scas
int3
cmp
rorb
out
pop
hlt
outsb
mov
sbb
push
jg
xchg
inc
cmp
add
adc
gs
cmp
aas
push
fsubrs
pushf
push
daa
and
ljmp
xor
in
inc
out
divb
nop
adc
xor
test
mov
aad
jl
cltd
test
sub
mov
push
inc
push
push
xor
mov
insb
mov
pop
push
in
sbb
mov
sbb
sub
xchg
and
dec
std
shll
push
fisubrl
bound
mov
inc
xor
xchg
das
cmp
lret
xor
or
push
movsl
mov
lea
sub
imul
test
ljmp
push
sbb
ret
push
jmp
or
aas
inc
pusha
pop
cmc
pusha
or
orb
inc
fisttps
in
insl
cmp
cli
xchg
and
pushf
cmpsl
jne
out
mov
scas
imul
mov
sub
pop
dec
test
mov
subb
ds
shrb
movsb
ret
outsl
ret
cs
faddp
nop
je
aas
and
mov
jnp
pop
push
push
push
int3
xor
dec
sbb
mov
stos
inc
cmp
push
rcr
sbb
cmc
xor
dec
idivb
scas
dec
lahf
test
scas
jmp
test
xlat
mov
adc
cmp
dec
shrl
inc
ds
adc
js
pushf
push
subl
imul
push
hlt
arpl
decb
jae
adc
ss
and
popl
mov
mov
mov
in
shll
fildl
int
mov
gs
stc
jno
pop
repz
jbe
cmp
and
dec
imul
movsl
mov
inc
cmp
xchg
hlt
inc
fidivs
inc
adc
sub
cmp
and
loope
inc
jno
push
das
push
fcoml
xchg
xor
add
test
push
test
sub
imull
xor
fxtract
imulb
sub
xchg
xchg
xchg
xchg
call
aam
pop
mov
sbb
int3
dec
in
adc
movsb
jo
jp
pop
lock
into
jge
lock
mov
pop
xor
fucom
mov
pop
xchg
ja
mov
lcall
ret
sub
and
rcr
sub
out
pop
scas
rclb
test
sbb
movd
mov
sub
cld
cltd
jbe
and
pop
cmpsb
mov
in
aaa
adc
push
xchg
xchg
jns
mov
rolb
and
loop
addr16
loop
jo
fstps
push
inc
push
cmc
or
add
adc
add
sbb
mov
pop
ss
shr
sbb
sar
inc
mov
aad
cmp
scas
test
adc
js
loopne
inc
push
les
sub
fcom
cmp
dec
loop
cmp
add
cmp
jne
sub
mov
in
lret
cmc
dec
sti
ficoml
out
xor
cli
xchg
jne
inc
ficompl
test
or
addb
int3
sbb
outsl
insl
mov
andb
mov
sbb
sahf
sbb
stos
xchg
fadds
add
jo
out
leave
ficomps
testb
in
loope
inc
icebp
sbb
push
xchg
fs
inc
popf
mov
xchg
sbb
mov
ret
into
mov
pop
xchg
dec
ljmp
mov
movsb
rcll
cmpsb
imull
dec
sub
ret
lods
sbbl
dec
outsb
cmp
or
mov
clc
sbb
inc
cs
jae
mov
mov
aaa
in
mov
xchg
mov
data16
push
push
fildll
test
imul
mov
inc
and
sbb
push
pop
imul
inc
push
sub
cmp
call
inc
xchg
idivl
xor
adc
mov
jmp
orl
scas
jp
loop
dec
sti
jno
or
fisubrs
dec
stos
mov
and
mov
mov
pusha
lahf
inc
call
sbb
stos
into
fildl
out
rcrb
add
xor
adc
sub
aaa
push
outsb
mov
rcr
pop
fidivrl
cmc
lea
fdivrs
xor
pop
insl
mov
inc
mov
sbb
xor
pop
aaa
xchg
scas
sub
outsb
imul
jl
hlt
xor
ficomps
in
inc
sub
mov
and
adc
leave
inc
movsl
pop
insl
mov
pushf
addb
mov
movsb
add
out
and
call
jmp
ficompl
xchg
mov
adc
dec
divl
or
lods
into
jecxz
mov
pop
sahf
fiaddl
scas
or
fs
xchg
les
jl,pt
xchg
push
or
aaa
xor
scas
and
mov
and
ss
fldt
inc
roll
lret
dec
and
sbb
shrb
lods
cmp
push
and
or
paddw
adc
mov
lds
inc
or
mov
adc
out
hlt
dec
fmull
xor
in
cmp
stos
es
and
push
shl
pop
aam
mov
jle
out
bound
das
mov
jl
jns
mov
add
jne
lock
and
fprem1
incb
mov
xlat
push
sbb
lods
xor
daa
jnp
cmpsl
mov
sub
ljmp
stos
aam
jg
inc
mov
push
jno
imul
push
jb
arpl
cmp
js
and
sbb
or
sbb
loopne
dec
rorb
pop
jb
inc
pushf
das
mov
movsl
bts
enter
adc
lahf
sub
jnp
cld
dec
push
mov
push
insb
and
mov
cmp
adc
jns
rcll
mov
mov
add
lds
lcall
jg
add
lods
jge
pop
data16
jnp
sbb
lahf
adc
mov
xchg
jne
out
dec
cmpsl
outsb
jl
imul
scas
hlt
inc
pop
mov
in
jo
ljmp
icebp
xor
gs
push
sub
jne
cmp
push
clc
adc
jl
mov
cmp
ja
push
push
jp
or
xor
push
and
je
sahf
outsb
xchg
sahf
loopne
in
hlt
rclb
jl
jp
xchg
xor
mov
pop
inc
popf
adc
pusha
roll
sbb
adc
movsl
push
loop
inc
and
mov
insl
rclb
pop
pop
sti
xchg
addl
push
popf
mov
xchg
call
subb
add
popf
data16
lcall
popf
fildll
fiaddl
sbb
imull
mov
fs
loope
cld
xchg
lcall
jg
cmp
xor
mov
jecxz
xlat
xor
xchg
jp
jmp
loopne
mov
adc
jp
popf
push
xchg
mov
jmp
mov
mov
sub
fdivl
push
pop
enter
adc
sub
test
clc
ja
dec
ret
dec
mov
repz
push
jns
cltd
sbb
dec
jmp
pusha
inc
jmp
xchg
dec
js
and
xor
loopne
sbb
test
xor
xor
ja
into
fwait
xor
push
add
std
insb
movsb
mov
pushf
inc
lahf
scas
inc
adc
and
inc
std
loopne
ljmp
popf
stos
not
cmpsb
sahf
test
mov
mov
in
add
cli
imul
jno
dec
das
sub
lea
lods
xor
fsubrp
lock
loop
pusha
mov
mov
sti
mov
cli
lods
arpl
lcall
pop
dec
hlt
inc
and
inc
jmp
hlt
inc
pop
stos
int3
push
dec
je
data16
das
outsb
mov
insl
xchg
imul
jecxz
inc
add
sub
shrb
jge
mov
sub
pop
lds
popl
outsl
pop
repz
neg
into
in
test
cs
xor
xchg
or
jb
mov
les
lahf
ljmp
mov
pop
mov
adc
add
js
add
mov
ja
lods
add
nop
call
sbb
addr16
fists
xchg
shrb
push
mov
jecxz
mov
int3
jecxz
push
pop
leave
xchg
mov
mov
adc
sub
sub
ret
rcrl
sub
out
lock
xchg
mov
mov
add
idivb
scas
sahf
iret
jbe
xor
mov
cmp
inc
inc
fadds
js
mov
push
mov
dec
rorl
bound
inc
insl
jg
push
lods
push
stos
mov
imul
fstp
sbb
in
and
repz
aam
std
shrb
fistpll
addb
push
mov
push
dec
hlt
add
into
movsb
cmpsb
incb
mov
insl
clc
or
sbb
mov
ljmp
xchg
jge
notb
sar
jns
adc
fs
cltd
add
mov
shlb
je
push
xlat
nop
xor
dec
pop
int
mov
icebp
mov
test
outsb
cld
aam
add
insl
addl
inc
pop
lret
cltd
roll
lods
cltd
jne
fildll
pop
pop
incl
dec
mov
pop
jmp
jge
and
fdivl
push
adc
dec
pop
jecxz
cmpsl
jl
outsb
icebp
nop
jb
pop
jg
fs
pushf
adc
andl
mov
add
mov
jmp
mov
pop
enter
push
cmp
test
in
cltd
cmp
push
push
and
gs
fs
std
cmc
fsts
and
in
mov
test
stc
mov
mov
push
xchg
push
adc
adc
inc
cli
and
add
xchg
xchg
iret
adc
into
daa
andl
mov
mov
push
adc
pop
xchg
sti
lods
push
cmc
lcall
lcall
sti
pop
mov
js
mov
xor
xor
jecxz
aas
scas
stos
cld
dec
mov
push
xchg
movsb
xchg
subb
mov
movsl
aaa
and
xor
or
sub
xchg
js
inc
adc
or
push
fwait
int3
ss
cmc
addb
test
xchg
xchg
imul
out
mov
out
xchg
xchg
xor
push
leave
mov
inc
pop
and
sahf
cmpsl
gs
push
sub
out
mov
in
mov
adc
jge
xchg
ret
sbb
xchg
in
je
inc
popa
mov
lcall
cltd
dec
fimuls
cli
out
xor
subb
jmp
out
xchg
push
sub
rclb
adc
popa
jae
outsb
push
movups
cmp
clc
sub
push
test
into
dec
jo
scas
jmp
sbb
or
inc
xchg
mov
nop
push
push
call
test
add
push
sub
fucom
cmpb
leave
xchg
ss
leave
fs
mov
sbb
jae
push
int
dec
js
sbb
outsl
shrb
sbb
and
lods
dec
ret
cmp
in
daa
push
imul
fiaddl
jge
sbb
cwtl
loope
mov
enter
mov
jp
adc
mov
jl
dec
sbb
mov
mov
fcomps
ljmp
adc
fmull
mov
test
jnp
and
xchg
jbe
push
cmp
and
adc
xlat
lahf
call
jmp
aad
stc
cmpsl
mov
mov
jnp
sub
into
cli
push
loope
and
into
mov
es
mov
jp
cmpsb
jmp
cmp
fstl
leave
call
ds
cmp
ror
cmp
xor
pop
sub
sbb
out
orl
sbb
push
mov
pushf
push
sub
mov
mov
pushf
jo
inc
sub
cmp
mov
fstl
or
dec
pop
xlat
cmp
ret
in
sar
jo
shrb
push
ret
push
jle
add
push
xchg
push
aas
cwtl
mov
xlat
and
mov
fwait
cwtl
lock
jmp
jp
decl
fwait
or
xchg
shll
push
lahf
hlt
mov
insl
testl
add
ret
mov
cmp
les
and
into
and
cld
mov
add
push
mov
add
push
push
lahf
cmp
fstps
inc
inc
cmc
outsb
xor
adc
mov
ret
jbe
hlt
or
or
mov
add
gs
into
xchg
jb
cmpb
sub
mov
js
int
jle
cmp
mov
or
mov
mov
or
mov
mov
add
cmp
sarl
adc
inc
pop
dec
es
and
lcall
stos
push
insb
xor
sbb
je
icebp
cmp
andl
mov
icebp
cwtl
and
aam
add
xchg
subb
xor
inc
jno
insb
dec
out
daa
cmpsb
scas
cmpsb
fsubl
xchg
push
ds
test
out
stos
sbb
popf
push
inc
mov
das
push
stos
xor
arpl
mov
jge
cwtl
aaa
imul
in
aad
fists
xchg
insl
lahf
decb
pop
mov
xchg
fmull
nop
mov
pop
pop
pop
xor
and
sbb
rorb
mov
push
aam
int
inc
xchg
addr16
mov
inc
repnz
call
jbe
into
ljmp
mov
mov
das
and
test
push
out
roll
add
push
cmpsl
sbb
int3
pop
test
ss
sbb
ss
jmp
shl
int
cmp
sbb
lods
incb
loopne
jg
xchg
pop
stc
dec
adc
sti
mov
aaa
jle
lea
repz
insb
enter
mov
sub
xlat
mov
cs
notb
movsl
int3
orl
lret
cmpsl
aam
xchg
add
stos
push
in
mov
pop
sub
testb
jg
and
push
inc
iret
jne
add
add
shl
jmp
rol
push
js
inc
test
mov
mov
adc
xor
in
cs
mov
push
rol
aas
pop
pop
mov
mov
sahf
xchg
insl
sub
dec
cwtl
subb
or
inc
fs
xor
lock
jo
mov
mov
add
fwait
jg
out
imul
sbb
dec
jmp
mov
sub
mov
addr16
dec
cmpsb
jnp
ja
push
sub
es
out
outsb
pushf
in
cmpsb
inc
or
and
pop
rcl
and
sub
fs
pop
mov
es
adc
xlat
lcall
or
decb
pop
push
cli
ja
xor
test
cltd
out
leave
mov
sub
pop
push
test
test
xchg
clc
mov
loopne
out
test
add
dec
movsb
add
jg
add
and
mov
lahf
xor
mov
push
popa
pop
cld
mov
and
jae
push
movsl
mov
sub
lds
mov
mov
and
add
jns
dec
mov
stc
pusha
adc
fstps
jge
movsl
pop
sub
imul
or
sub
mov
jg
push
pop
adc
xchg
pusha
lds
out
jp
loopne
es
mov
jp
and
push
jecxz
rorl
jns
push
jg
cmp
xchg
inc
hlt
fstpt
push
mov
repz
xor
daa
cmp
push
ffree
or
inc
sub
mov
push
sub
push
adc
mov
push
call
mov
pop
shlb
and
mov
icebp
inc
or
jmp
pusha
aad
xlat
hlt
cmp
xchg
jmp
push
sub
mov
lods
in
xchg
mov
sbb
ss
call
sbb
lahf
push
fsubl
je
mov
sahf
les
sbb
mov
es
movsl
mov
cmp
jo
daa
aam
push
lods
adc
xor
fnstsw
and
jg
icebp
mov
pop
and
incb
fstps
dec
ds
mov
push
push
jecxz
sarb
loop
mov
lods
add
mov
xchg
in
jmp
xchg
and
inc
or
cld
dec
test
popa
fyl2xp1
call
stc
outsl
cmp
jl
ret
lret
call
es
and
imul
jecxz
sti
stc
xor
adc
les
or
test
push
sbb
je
test
add
bswap
inc
adc
icebp
jl
adc
xchg
xor
cltd
or
scas
jge
dec
xchg
xchg
int3
in
cmp
mov
cmpsl
push
ret
pop
movsl
ret
adc
pop
dec
or
dec
and
ljmp
popa
cmp
fidivs
dec
jns
ret
jge
jnp
cmp
sbb
aad
stos
mov
xor
scas
outsb
sub
fucomip
shl
test
push
xor
mov
in
mov
inc
les
jno
inc
push
jnp
aam
sub
pop
popf
lea
mov
movsb
leave
push
add
cs
inc
mov
mov
lds
jl
into
cwtl
ss
mov
nop
mov
push
scas
cmp
and
lods
pop
js
mov
vunpcklps
pop
mov
loop
or
repz
subb
lret
enter
cs
mov
aad
sti
cmpsl
xor
loope
push
dec
call
daa
and
and
sti
push
mov
mov
inc
test
clc
jecxz
mov
adc
data16
inc
pop
mov
add
jge
mov
dec
jb
stos
pop
xlat
xchg
testl
loop
xlat
sbb
movsb
sub
add
adc
and
jo
cmp
in
pop
popa
push
movsl
jge
cmp
testl
loope
inc
pop
pushf
outsl
dec
mov
jecxz
test
lds
mov
dec
ss
in
and
sub
push
or
sub
inc
aam
xchg
adc
lea
push
outsb
sub
rolb
testb
xor
mov
jle
xchg
mov
cwtl
jl
pop
mov
pop
mov
mov
pop
jno
insb
jnp
lods
lods
outsb
push
or
mov
int
mov
jge
and
push
mov
adc
xor
ret
push
mov
fs
push
shlb
push
add
mov
inc
mov
jbe
push
inc
inc
das
dec
mov
scas
cbtw
repz
mov
dec
out
je
dec
cmp
iret
in
in
xor
pop
inc
test
nop
sub
push
xchg
dec
aas
xchg
negb
call
dec
gs
rcrl
xor
nop
cmp
outsb
mov
loop
jae
std
idivl
or
cli
inc
jae
idiv
fs
arpl
lock
hlt
mov
mov
push
pop
leave
mov
pop
mov
loopne
call
mov
dec
stc
lds
inc
lock
das
ficoml
andl
add
cmp
iret
imul
xchg
dec
sub
jle
jae
or
jecxz
decl
pushf
mov
cmp
pop
pop
aad
out
cmp
xor
mov
pop
hlt
mov
sub
bound
sbb
mov
or
or
mov
pop
inc
fwait
adcl
cmp
sbb
in
and
nop
test
bound
lds
cmp
push
icebp
add
xor
loope
rcrb
iret
pop
mov
mov
pop
mov
cmpsl
sub
aad
cwtl
out
inc
or
mov
and
stos
movsb
or
subb
faddl
popf
sarb
in
inc
ficompl
out
iret
and
test
or
popf
xchg
jge
and
jp
in
or
jp
stos
pop
ss
outsl
inc
cs
insb
or
pop
inc
int3
into
ja
or
outsl
cmp
loopne
and
dec
js
cmp
add
push
call
imul
add
inc
iret
addr16
dec
sbb
xchg
jmp
popa
rcl
adc
loopne
imul
in
inc
push
cwtl
sbb
pop
stos
inc
and
out
cmpb
and
jl
push
stos
inc
lahf
loopne
ss
cli
pop
sbb
icebp
inc
and
mov
mov
lea
sub
ret
inc
sub
push
pop
add
leave
stos
cmpsl
inc
out
cmp
push
lods
xchg
and
inc
add
pop
mov
sahf
lahf
mov
or
mulb
test
pop
inc
popf
aad
pop
clc
or
adc
jbe
shlb
cmp
outsl
lret
dec
loopne
dec
mov
pusha
dec
and
push
jmp
sti
addr16
fcoms
sbb
mov
and
cmc
in
pop
scas
jae
repnz
inc
popa
xor
xchg
cmp
inc
jne
pop
add
stos
cwtl
cltd
movsl
repz
ficompl
push
inc
mov
inc
out
xchg
pop
std
cmc
push
xchg
inc
pop
push
pushf
enter
cmp
pushf
adc
lret
jae
and
mov
add
mov
js
and
mov
mov
pop
sahf
jae
dec
push
enter
and
imull
cmp
scas
xchg
pushf
pop
and
sub
push
sub
pop
bound
sub
jp
xchg
daa
push
push
or
xchg
xchg
gs
push
insb
xor
cmp
mov
pop
std
mov
imul
les
int3
inc
test
ret
aaa
pop
mov
and
pusha
mov
aaa
or
neg
push
cs
cltd
cs
mov
fdivrl
mov
sbb
add
push
icebp
adc
mov
xchg
add
push
icebp
lock
xor
mov
adc
out
xchg
ret
xor
adc
fldcw
fbstp
cwtl
cmp
pop
pop
in
xor
lods
push
int
mov
fs
inc
shlb
shlb
inc
scas
lods
imul
xor
jmp
cli
or
shl
mov
int3
rolb
jnp
repnz
cmp
outsb
xchg
insb
pop
push
les
and
mov
mov
lods
jle
leave
test
sub
neg
fisttpl
mov
lahf
dec
ljmp
jle
outsb
pusha
adc
pop
adc
flds
data16
mov
test
andb
int3
jl
xchg
test
ds
push
test
or
push
lds
fnstenv
out
call
mov
js
inc
mov
mov
es
sub
pop
sbb
xchg
ss
push
pop
ficompl
sbb
fmull
test
cmpsl
dec
dec
test
ljmp
and
insb
or
xchg
fbld
fisubrs
int
xlat
push
jle
or
mov
cmp
xor
test
inc
mov
mov
cmpsb
jmp
nop
jl
std
pop
aam
fadds
mov
lret
mov
and
out
std
jge
shll
pop
scas
hlt
xchg
jmp
lcall
jno
lcall
sub
lea
push
js
adc
sarl
ja
int3
imul
dec
jno
adc
jns
add
sbb
cwtl
lahf
shll
testl
into
je
xor
daa
dec
nop
adc
cmp
es
push
lods
jnp
xor
and
adc
loope
sbb
mov
cmp
cmp
push
movsl
icebp
clc
push
out
mov
pop
inc
inc
in
or
pop
dec
jg
adc
pop
push
icebp
ljmp
sbb
sub
repnz
sahf
inc
mov
daa
dec
add
push
dec
cld
test
test
mov
xlat
clc
jno
inc
cmp
fistps
arpl
xchg
test
xchg
out
or
aas
jo
add
in
in
push
loopne
ret
rorl
lret
sbb
inc
xor
and
mov
mov
adc
sub
pop
int
int3
in
xor
cmp
or
jge
mov
and
std
inc
lahf
cmpb
scas
xchg
inc
in
pop
gs
xor
sub
mov
push
loopne
sbb
stos
lret
dec
cs
inc
je
call
pop
jb
lret
pop
dec
sbb
mov
cmp
mov
mov
add
push
lahf
lea
mov
cmpsl
ss
push
xchg
push
and
mov
push
add
sbb
adcl
icebp
imul
jae
sbb
mov
fs
loop
mov
cvtpi2ps
gs
push
mulb
cmp
jg
dec
hlt
xchg
jne
push
nop
fwait
roll
shll
dec
ret
push
push
fistpll
scas
icebp
dec
mov
insb
inc
movsl
sti
jo
xlat
pushf
ret
lret
lret
arpl
lea
pop
jl
icebp
inc
int3
xor
mov
mov
mov
mov
rclb
rcll
or
xor
pop
mov
sbb
xchg
dec
sbb
sub
mov
in
push
or
mov
and
cmp
and
scas
mov
add
fcmovnu
fildll
mov
cmp
pop
inc
in
outsb
into
dec
popf
jne
mov
cld
imul
aam
mov
mov
mov
int
and
aas
xchg
sbb
add
fsub
mov
xor
mov
clc
sti
cs
lods
lret
and
pop
cmp
mov
push
out
das
pop
cmpsl
sub
mov
aam
xchg
and
test
inc
ret
lret
push
dec
or
jecxz
imulb
divl
out
cmp
mov
jne
bound
insl
in
push
sub
es
hlt
out
sub
sbb
add
sub
mov
inc
ja
cwtl
jecxz
cmpsb
inc
mov
jae
lcall
cld
jnp
push
repnz
imul
jge
mov
in
lret
mov
sub
lods
xlat
mov
sub
fnsave
dec
and
xchg
sub
cltd
jl
and
inc
jnp
fs
lret
insb
jge
arpl
mov
mov
scas
popa
mov
out
outsb
fs
xchg
pop
mov
or
add
or
push
aam
leave
pop
std
mov
jne
jno
jno
push
out
sahf
mov
xlat
push
add
cmp
insb
aam
leave
mov
mov
ss
mov
push
divb
inc
andb
fidivl
dec
shll
ficompl
jne
gs
cld
cmp
pop
adc
je
mov
ficoml
add
fwait
xchg
lods
testl
aas
inc
gs
push
inc
jle
push
jb
fs
cmpsl
faddl
sub
nop
lods
cmp
je
pushf
cmp
leave
sti
xchg
ror
xchg
int3
mov
mov
adc
add
pushf
movsb
xchg
scas
pop
ret
out
mov
inc
leave
stc
or
xchg
dec
push
sub
sub
add
pop
in
pop
clc
push
cmpsb
rolb
xchg
jnp
imul
fwait
les
add
cmp
jb
sub
push
mov
mov
pop
push
push
xor
and
cmp
fistps
pusha
or
pusha
xchg
push
mov
lret
xchg
dec
mov
in
sbb
and
outsl
or
stos
jb
lods
je
out
cmp
pusha
int
jbe
mov
dec
outsb
lods
mov
add
out
or
adc
aad
pop
push
lcall
xorb
imull
mov
dec
dec
xchg
adc
stos
aam
mov
mov
or
shll
lcall
jnp
mov
aas
xchg
data16
inc
test
jb
sar
inc
cwtl
pop
test
mov
mov
outsb
jno
pop
push
fisttpll
pop
hlt
test
dec
cmpb
dec
ljmp
insb
xchg
outsl
test
jp
sub
jmp
andb
lods
xor
xchg
cli
cmovp
fidivrs
aad
test
pop
movsb
imul
jo
decb
jns
loope
jg
push
call
out
int
sti
mov
movsb
idivl
imul
es
icebp
push
fmul
hlt
adc
inc
push
xchg
nop
addr16
mov
inc
mov
or
sahf
das
mov
clc
pop
xor
aad
jle
cmp
cmpsl
dec
and
ja
mov
xchg
dec
or
sub
mov
mov
dec
imul
imul
in
popf
das
push
movsl
call
call
insb
jg
xchg
aad
dec
aad
cmp
and
aad
pop
jp
pop
rcl
outsb
cmpl
into
pop
popf
out
and
mov
ljmp
xchg
rol
out
mov
into
push
ficoml
jecxz
pusha
jecxz
fucom
pop
mov
roll
ss
adc
mov
test
adc
inc
mov
gs
jg
sar
adc
jp
insl
jb
inc
and
andl
push
inc
data16
call
add
fbstp
mov
sub
mov
pop
mov
outsb
jo
iret
cmp
mov
xor
jp
jecxz
cmp
inc
mov
fadd
xchg
xor
add
jbe
xor
leave
or
dec
jg
cwtl
stos
sbb
or
fldl
mov
pop
xor
in
stc
lods
mov
cs
add
mov
roll
rorl
cmp
mov
jb
mov
aad
in
stc
ret
enter
lods
ljmp
mov
mov
popa
daa
sbb
add
ljmp
icebp
inc
es
push
js
out
rclb
lea
roll
or
or
test
icebp
icebp
rcrl
out
adc
cmpsl
fcoms
mov
out
outsl
mov
sub
clc
mov
out
fiadds
and
cld
jge
rorl
leave
cmp
xchg
xchg
ds
xchg
mov
insl
add
cmp
movsb
bound
push
push
shr
insl
and
add
dec
push
out
daa
je
shlb
jbe
fnstsw
or
test
dec
add
jne
outsb
inc
movl
dec
aam
sub
inc
mov
xchg
bound
cwtl
dec
and
lods
dec
inc
into
adc
insl
mov
sbb
jecxz
in
jb
shl
data16
cltd
jnp
sbb
icebp
int
icebp
inc
push
repnz
push
adc
adc
fstpl
addr16
ja
popf
mov
add
stos
insb
leave
loopne
orl
lret
sbb
es
pop
xlat
sub
sbb
xchg
fadd
pushf
lods
roll
shlb
pop
jno
into
lcall
pop
cmp
loope
test
push
add
pop
out
mov
inc
cmp
in
fistl
in
pop
cltd
inc
cs
ja
sbbl
or
dec
notl
xchg
out
push
mov
mov
imul
lods
jp
or
mov
pop
adc
nop
or
jecxz
aad
or
mov
xor
inc
fcmovb
or
jecxz
mov
out
lods
and
and
fcomps
lock
movsl
call
xchg
inc
into
jo
adc
push
inc
mov
lods
inc
xchg
shlb
mov
cltd
mov
cmp
cmp
xchg
out
add
jno
adc
popa
mov
push
dec
aas
xor
mov
mov
movzwl
jg
xor
fnstcw
lea
pusha
lcall
jmp
mov
or
cmp
outsl
in
pop
sub
cmp
adc
inc
pop
icebp
jnp
mov
scas
rcrl
cld
repnz
fnstcw
repnz
outsb
aaa
or
adc
cmp
rclb
dec
mov
add
mov
shlw
adc
xchg
pop
repz
mov
mov
popa
js
adc
mov
push
addr16
pop
push
sub
or
add
insb
or
dec
add
clc
jge
insl
cltd
outsb
rep
ljmp
shll
cmc
mov
lds
add
push
xchg
jl
loop
sbb
int3
mov
les
xchg
and
pop
inc
push
mov
xor
call
das
jno
lock
jne
pop
adc
mov
fs
stos
jecxz
sub
loop
mov
jo
mov
or
xchg
les
dec
xchg
cli
clc
pop
mov
repz
or
add
scas
out
sbb
xchg
sbb
xor
mov
adc
int
sub
testb
ds
pusha
mov
std
leave
aaa
mov
mov
aam
loop
bound
leave
sbb
data16
jl
gs
adc
xchg
fdivp
xchg
sahf
sbb
decl
mov
xor
jb
test
mov
pop
scas
fildl
xchg
testl
fs
sbb
inc
cmpsb
stc
leave
cld
adc
mov
leave
aas
and
lods
sti
ret
nop
ret
arpl
pop
adcl
iret
jb
fwait
sbbb
out
adc
pop
sbb
mov
mov
fldl
lahf
xchg
jp
cli
push
test
dec
test
inc
mov
mov
jns
jl
pop
add
or
fsubr
xchg
gs
mov
inc
push
imul
outsl
mov
or
jge
push
jae
xor
pop
dec
loop
fisubrs
dec
lea
mov
repnz
outsb
dec
inc
in
mov
xchg
cmp
mov
loopne,pt
adc
cmp
mov
adc
mov
cmc
or
dec
clc
jne,pt
or
mov
sub
and
cltd
xor
mov
dec
mov
les
loope
mov
jnp
push
loop
jnp
fdivl
cmp
jge
clc
pop
xor
aad
dec
jns
data16
xchg
mov
xchg
imul
mov
aam
mov
sub
mov
fldcw
xchg
cli
test
lock
jg
loopne
xchg
sub
imul
mov
aaa
fwait
mov
dec
rol
pop
mov
in
mov
popf
cld
jbe
pop
mov
mov
popa
rcll
or
cmpsl
inc
inc
push
and
jae
mov
mov
sbb
mov
vpmulhw
idivb
pop
push
lea
sbb
jl
mov
mov
add
adc
mov
pop
sub
fadd
cmp
arpl
and
cmp
stos
or
jl
sbb
fwait
and
mov
pop
jae
fldcw
sub
ret
movsb
cli
pop
bound
jb
pop
dec
push
jmp
fimuls
inc
mov
nop
dec
mov
enter
mov
aad
cmpsl
jl
jg
rorl
or
out
std
lds
in
add
loope
jmp
insl
mov
pop
int3
jae
sbbl
xchg
push
xor
dec
push
jb
lods
push
cmp
xchg
arpl
cmp
inc
popa
lods
ffree
divl
scas
cli
or
cltd
cmp
lods
repz
cmp
sub
mov
ret
mov
pusha
out
andl
stc
xor
call
xchg
dec
xor
pop
and
leave
loope
cmpsb
mov
mov
int
mov
out
movsl
insl
movsb
clc
fucomp
inc
mov
imul
and
aaa
jo
push
enter
dec
mov
adcb
cmp
add
test
cli
icebp
mov
push
cmc
mov
std
test
mov
cmp
sub
in
or
inc
pop
and
adc
add
pop
xchg
stos
sahf
test
lock
inc
loope
stos
or
lret
mov
popa
xchg
ret
aad
add
imul
xchg
mov
push
pop
jne
push
movb
xchg
jmp
aas
pop
fdivrs
or
cmp
rorl
and
mov
scas
pop
cwtl
push
lea
aas
jecxz
cmpsl
xchg
add
rcrb
lea
xchg
mov
push
in
rclb
les
imul
fstl
dec
leave
cwtl
cmpsl
dec
pop
dec
fldenv
push
scas
add
shrl
call
mov
arpl
xchg
fnstcw
adc
sti
add
cmp
or
cmpsl
add
andl
sti
sub
jo
outsb
pop
mov
gs
xchg
inc
push
sbb
pop
repnz
into
sub
nop
pop
arpl
adc
movsb
aam
rcl
movsl
xchg
test
rorb
addr16
sub
aas
fdivr
std
int
adc
push
inc
adc
mov
out
es
push
sarl
push
mov
inc
mov
sbbb
sub
clc
dec
fcompl
sub
cmp
push
push
inc
dec
icebp
ror
mov
and
pop
xchg
fcmovbe
push
or
pop
out
pop
push
sahf
pop
filds
inc
jo
jb
ds
imul
into
pop
xor
arpl
pop
sub
sbb
mov
mov
arpl
popf
aad
mov
shll
inc
std
scas
rorb
add
xchg
insb
jae
xor
xchg
xchg
outsb
out
adc
test
cmpsl
enter
inc
jae
push
push
xlat
pop
mov
enter
push
dec
inc
das
inc
les
das
cs
arpl
dec
sub
dec
test
jg
pop
sbb
pop
insl
and
movsb
xchg
lret
into
mov
sub
rorl
imul
xor
and
das
sarl
mov
sub
arpl
call
sub
lea
ja,pn
lahf
mov
pop
push
call
sbb
jp
stos
leave
sbb
in
dec
mov
pop
pop
fs
or
fcompl
push
scas
testb
mov
out
push
add
push
ficoml
pushf
xchg
sbb
inc
mov
xor
ficomps
cmp
pop
mov
cmp
xchg
xchg
cwtl
std
call
imull
fs
int
xchg
mov
popf
sub
scas
into
scas
mov
adcb
mov
and
push
lock
inc
lret
imul
sbb
lahf
in
or
inc
outsl
add
sbb
or
sub
cltd
cltd
addr16
scas
insl
mov
or
add
mov
pushf
add
movsl
sbb
pop
ja
pop
lods
test
add
les
inc
into
popf
mov
loopne
inc
out
ljmp
pushf
mov
xchg
pop
clc
push
jg
sahf
jns
clc
icebp
inc
push
icebp
sbb
sbb
lea
mov
ficompl
mov
mov
lock
int
ljmp
and
clc
add
mov
or
loopne
sbb
pop
lods
xor
sub
lock
mov
lods
xor
push
cmp
add
stos
adc
aad
jg
outsl
add
and
mov
add
inc
push
addr16
dec
push
and
jns
rolb
lods
xchg
mov
and
pop
sti
loopne
in
cmp
mov
into
jno
lret
mov
mov
faddl
xorb
std
pop
das
mov
pop
adc
rcr
shll
mov
shlb
es
ss
cmp
int
add
or
mov
and
cltd
pop
dec
shlb
insb
mov
fstpt
xchg
fst
ja
pop
jge
dec
mov
lods
fld
in
pop
movsl
push
mov
jnp
scas
sub
shr
push
ret
sub
sti
fldcw
xchg
lahf
ja
xor
dec
cmc
clc
or
pop
repz
cmp
mov
cmc
jo
stos
inc
popl
push
jae
addr16
xchg
aad
and
shl
test
cmp
xchg
subl
enter
andl
jmp
inc
adc
call
xor
xor
call
mov
push
daa
cs
sbb
ja
and
or
and
repnz
aaa
mov
sarl
cmc
jg
divl
pop
mov
jecxz
std
xor
arpl
aam
addb
add
and
xchg
xchg
iret
ret
cmpsl
shlb
add
mov
lods
adc
inc
lods
ret
sbb
mov
jo
fsubs
xorb
ja
or
cmp
ljmp
pop
inc
sbb
scas
jl
sub
or
push
mov
or
test
bound
pop
lahf
clc
add
mov
sbb
push
mov
dec
mov
xor
jecxz
out
fs
xor
cmp
push
fstpt
aas
jl
sbb
and
xor
mov
lock
xchg
adc
mov
inc
cmp
push
imul
cmpsb
enter
add
fmulp
in
sbb
jb
fildll
shl
xorl
cltd
imul
subb
mov
xchg
shrb
data16
std
pop
imul
lret
push
adc
orl
or
pop
cmc
push
xor
sti
jbe
push
movsl
dec
pop
jle
pop
sub
out
lods
repnz
mov
mov
dec
cwtl
xchg
sub
sub
cmpsb
loope
decb
xlat
jmp
stos
js
rorl
push
test
enter
shl
push
dec
mov
cmp
in
dec
outsl
jmp
popa
mov
sbb
je
rcrl
or
cmpsb
in
arpl
sbb
pop
pop
pop
dec
inc
jae
push
dec
cmpl
ret
rorl
cld
mov
out
cmp
lret
das
adc
mov
push
push
pushf
mov
inc
stos
sub
pusha
jae
dec
nop
adc
popf
shlb
test
mov
jg
sti
mov
dec
call
aas
rcr
aas
adc
lret
or
outsl
sti
add
rorl
mov
or
mov
movsl
add
xlat
fisubl
adc
movsl
cbtw
xor
push
imul
imul
or
xor
pop
daa
popa
ss
insl
movsl
sbb
and
rdmsr
adc
pop
flds
mulb
xchg
xchg
xchg
jb
call
shll
mov
xor
popa
and
out
add
mov
test
lret
cmc
jne
out
aaa
icebp
push
xor
lods
add
imul
sbb
jnp
adc
lods
in
sahf
or
mov
dec
sub
inc
fisttps
adc
push
dec
jp
lret
sub
gs
pop
daa
scas
xorl
imul
jnp
popa
in
xchg
cmp
inc
loope
sbb
push
mov
fldl
mov
mov
into
decl
test
sub
xchg
lahf
mov
sbb
sub
inc
pop
stos
cmpsl
inc
pop
and
cmpsb
test
or
cwtl
in
test
leave
inc
scas
loope
ret
jne
data16
add
push
test
subb
push
test
insb
mov
mov
call
mov
in
xchg
dec
or
mov
test
mov
cmp
repnz
fldl
xchg
cmp
cld
xchg
push
ficoml
lods
lods
lods
loopne
stc
and
push
out
mov
inc
ss
rcrl
dec
mov
orl
lcall
or
repz
pop
loopne
pop
sti
idivb
icebp
ja
ds
mov
or
push
bnd
xor
daa
mov
sar
cmp
movsb
sbb
adc
add
repnz
xchg
std
inc
add
dec
or
mov
into
in
cmp
fadds
shll
or
pop
push
adc
sbb
cltd
jg
repnz
aaa
mov
gs
mov
dec
in
cmp
mov
sarw
or
push
xor
or
fldl
lret
jle
push
sub
test
sahf
fstps
cmp
push
pop
and
mov
fsubl
lea
std
mov
xor
imul
pop
loopne,pn
mov
mov
mov
inc
test
enter
aam
xor
cmp
adc
outsl
lahf
push
mov
mov
mov
rclb
push
shrl
or
xor
xchg
cmpsl
cmp
aas
xchg
icebp
mov
pop
mov
out
adc
loope
xor
ret
xchg
mov
insb
pop
inc
out
xchg
push
jnp
pop
movsl
enter
push
cmp
sbb
out
mov
pop
mov
out
sub
jne
ljmp
sbb
xchg
sbb
int
cmp
mov
ljmp
lahf
add
xchg
push
jno
enter
sete
jg
inc
mov
jb
xchg
jnp
sub
jmp
sbb
sub
iret
mov
inc
push
add
inc
push
sbb
cmp
sbb
adc
mov
ja
std
inc
pop
mov
cmc
mov
push
in
or
push
flds
pushf
out
push
pop
or
push
add
and
fucom
inc
clc
mov
push
ja
rolb
fcomp
and
inc
mov
jbe
ror
jp
mov
cltd
orl
cli
inc
imul
shlb
xchg
stos
icebp
dec
fidivrs
pop
and
mov
xchg
xor
mov
call
sub
pop
fisubrl
cmp
xchg
mov
adc
stc
mov
ja
fnsave
fdiv
addr16
lods
pop
daa
outsb
and
ret
repnz
fidivl
call
into
cmp
data16
push
jl
or
call
pop
test
cmp
jo
mov
pop
pop
sub
pop
enter
nop
jns
jg
stos
mov
mull
fwait
fst
dec
test
popf
stc
cs
push
insl
mov
pop
leave
movsb
push
pusha
into
cmpl
xchg
imulb
jmp
lahf
mov
lahf
faddl
fisubrl
lret
dec
jno
jnp
outsb
shl
outsb
or
mov
icebp
pop
ret
or
stos
imul
ds
aas
or
mulb
push
lock
pop
mov
cmp
dec
and
aam
push
lret
in
dec
in
dec
and
call
arpl
sub
lcall
pop
adc
dec
xor
mov
lods
andb
notb
in
xchg
add
or
ljmp
mov
roll
push
stc
bound
push
cmpsb
mov
pop
adc
jge
jno
push
push
jae
adc
ljmp
lods
adc
mov
divb
cltd
dec
dec
jno
iret
rorb
xchg
push
push
fadds
insl
add
test
xchg
pop
aad
addb
mov
dec
loop
cmp
lock
pop
pop
sbb
mov
push
sbb
test
repnz
pop
cmp
jl
ret
mov
pop
lret
mov
and
inc
adc
or
cmp
sub
xchg
icebp
fisttps
jbe
xor
mov
rcrl
pushf
cmpsl
push
sub
addr16
and
stos
cmovo
adc
subl
lea
fsubp
je
out
jbe
xor
cmpl
addl
mov
dec
mov
aaa
add
xchg
shlb
fsub
jbe
cmp
mov
aaa
pusha
mov
sub
inc
pop
xchg
push
push
adc
sbb
mov
in
mov
lret
pop
and
repnz
cld
in
add
cmp
leave
notb
mov
pop
scas
repnz
jge
int3
xchg
mov
xor
xchg
cwtl
xchg
dec
ret
and
and
or
lret
push
mov
and
jo
insb
movsb
stos
xor
mov
sub
pop
dec
inc
in
and
mov
adc
xchg
mov
cmc
int3
je
xlat
ret
out
lds
addr16
es
ljmp
outsb
or
inc
loopne
add
xor
jl
sub
int3
sbb
add
lea
jae
dec
cwtl
sbb
idivl
lret
inc
adc
fs
imul
xchg
xor
jnp
and
or
jns
pop
jp
jb
xchg
bound
jne
jle
add
int3
sub
add
cwtl
or
lods
sbb
roll
aad
or
and
adc
icebp
push
sbb
ret
addr16
mov
mov
ret
push
outsb
mov
inc
mov
dec
lea
sub
cmp
bound
imul
xchg
dec
fwait
sub
into
leave
fldenv
out
or
aam
mov
xchg
dec
xor
imul
sahf
push
inc
and
adcb
popf
sbb
stc
mov
daa
out
push
mov
or
addr16
in
or
es
pop
adc
rcll
out
adc
aas
repnz
xchg
stos
stos
bound
nop
pop
dec
rorb
xchg
cmp
ret
mov
mov
mov
xorb
pop
cmpsb
out
ficompl
mov
int3
sbb
imul
push
push
lcall
fiaddl
jne
leave
mov
xor
mov
push
xor
jmp
ss
fwait
rorl
xchg
mov
in
inc
mov
xchg
sbb
push
insl
mov
pop
dec
pop
arpl
rolb
fdiv
in
dec
sbb
inc
dec
pop
xorb
mov
mov
in
lds
rcr
pavgb
cwtl
push
xchg
insl
enter
stos
sub
adc
fcmovne
xchg
push
cmc
xor
sub
sbb
mov
inc
push
negl
rep
es
scas
cmc
cmp
cmp
mov
pushf
pusha
jle
sub
in
ret
or
mov
inc
inc
insb
popf
popa
mov
push
sub
or
pop
es
rorb
js
jo
scas
mov
scas
pop
rol
scas
mov
push
mov
imul
cmpsb
cmp
push
cwtl
sarb
jbe
and
jg
sbb
sub
jecxz
outsb
inc
sub
aas
aaa
xor
mov
cmp
add
pop
sbb
sbbb
pop
lret
adc
addb
lods
dec
lahf
jg
or
jle
imul
lea
sub
aad
sbb
cmp
test
dec
scas
inc
fdivp
shrl
inc
scas
push
repz
inc
xchg
lock
jnp
add
pop
in
xor
shll
fsubr
test
add
push
xor
jp
lahf
xchg
rcrl
lcall
in
jns
stos
and
addr16
testb
jbe
iret
jb
test
cmpsl
inc
dec
mov
adc
mov
loopne
fldcw
in
add
cld
mov
test
push
pop
test
mov
loop
add
xchg
lcall
leave
mov
xor
xchg
imul
mov
xlat
js
mov
push
movsb
push
sub
fnsave
test
out
xchg
jle
and
iret
lds
xchg
sbb
cmpsb
mov
test
int
pop
sub
movsb
xor
out
ljmp
loopne
stc
jg
adc
arpl
or
mov
mov
pop
cmp
test
cli
dec
jne
inc
pop
aaa
xchg
push
mov
lods
test
test
mov
stc
inc
push
fldenv
inc
test
incl
lret
mul
sti
push
jg
out
mov
cmpsl
orl
roll
insb
lahf
call
sbbb
push
in
ds
stc
sbb
mov
xor
aam
and
clc
mov
loope
mov
cmp
repz
cmpsb
stos
test
pop
mov
lahf
insb
add
pop
jecxz
into
or
pusha
and
xor
rcrb
in
push
mov
mov
jp
jle
push
pop
loope
repz
push
xchg
xor
adcb
jmp
xchg
mov
insl
sbb
inc
mov
xchg
pop
bound
sub
mov
pushf
jbe
int3
xchg
movsb
js
sub
es
mov
mov
mov
orl
mov
dec
cltd
out
and
pop
sub
sbb
jge
pushf
pop
lds
pusha
ret
movsl
pop
and
ret
arpl
gs
mov
xchg
sarb
test
cmpsl
mov
push
fwait
mov
jecxz
cmpsb
enter
xchg
shll
scas
addb
inc
loop
lret
roll
mov
and
xchg
or
and
stos
shlb
jbe
jg
mov
xchg
lea
sub
mov
push
push
dec
pop
shl
push
mov
push
std
fsub
incl
in
mov
jge
out
dec
dec
mov
push
sbb
sahf
ds
lahf
stos
jmp
lret
shll
icebp
lods
lds
mov
fldt
mov
pushf
xchg
push
sahf
data16
push
mov
xor
movsb
fs
pop
adc
dec
adc
mov
ficoml
mov
repz
cmpsb
mov
mov
and
iret
loop
sub
stos
fucom
outsb
or
push
mov
sub
sti
mov
inc
outsl
add
movb
hlt
adc
insl
pop
add
stos
or
test
aad
xor
cmp
jp
mov
or
mov
jo
push
fsubr
xchg
test
sub
xor
pop
sbb
sub
xchg
clc
cwtl
fwait
adc
mov
movswl
add
push
and
shl
push
sbb
add
fs
xchg
negb
push
movsl
fistps
jg
push
push
stc
in
bound
sarb
popa
dec
push
mov
stos
scas
aaa
pop
dec
hlt
ret
add
out
fiaddl
mov
push
lahf
repnz
fsubr
push
jnp
mov
push
pop
xchg
xor
pushl
or
mov
pop
es
outsb
movsb
sar
mov
out
ret
cmp
inc
xor
xorb
pusha
dec
insb
cld
inc
jp
cmp
xchg
xchg
test
jno
jp
imul
lods
xchg
xor
mov
outsb
out
lret
push
sahf
not
mov
push
ja
insb
xor
ret
scas
lods
xor
cmpsl
insb
inc
sbb
int
call
dec
and
sub
push
adc
fs
dec
js
popa
pop
cltd
inc
and
lock
xor
add
dec
inc
push
push
sub
stc
add
mov
pop
jne,pt
lret
mov
mov
cmp
lahf
stc
mov
jno
jmp
sbb
push
cld
mov
test
addr16
mov
gs
sub
movsb
pop
enter
outsl
out
jnp
pop
cmp
aaa
xchg
mov
and
jb
and
push
loop
lds
les
lret
mov
movsl
inc
jb
mov
arpl
bnd
jl
ljmp
das
std
push
mov
sub
test
popa
daa
daa
push
jnp
mov
jge
inc
cmp
lret
xchg
and
xor
pop
das
xchg
stos
cmp
push
or
das
shll
sub
adc
jl
inc
lds
in
in
xchg
cmp
bswap
data16
cmp
dec
jae
out
push
loopne
test
push
lret
outsb
push
hlt
xlat
out
pop
mov
cmp
lret
fimull
mov
mov
push
sub
and
in
and
sbb
mov
icebp
enter
cwtl
inc
fnsave
pushf
fidivrs
test
jmp
out
sbb
hlt
popf
test
push
mov
cmp
imul
sarl
arpl
mov
pop
test
rcll
inc
xor
das
into
fldt
jg
hlt
icebp
mov
push
cmp
cli
inc
sub
call
in
mov
and
or
jp
inc
or
sub
pop
movsl
mov
insl
repz
pop
adc
sbb
jecxz
pop
sub
pushf
mov
sub
aam
leave
addb
pop
repz
sbb
and
mov
cmpsl
xchg
out
fidivrl
mov
in
fiadds
sub
loopne
jnp
xchg
ss
inc
push
leave
xchg
js
sub
rorl
pop
pushf
push
or
fstl
fadds
jp
psllq
stc
jnp
cmpsb
dec
jns
es
cmp
push
mov
out
xor
cli
shrb
aam
scas
mov
dec
loopne
fcomip
sub
loopne
in
adc
xchg
sbb
inc
lds
add
jne
mov
lcall
decb
mov
or
jge
sti
out
into
call
dec
lods
inc
xorl
mov
fld
jmp
into
ret
dec
dec
addr16
fs
xchg
xor
bound
frstor
test
popa
cmp
pop
xor
cmp
jmp
into
and
mov
stc
ja
jb
sahf
cmp
cmpb
pop
dec
in
xor
movsl
sahf
dec
loopne
and
fildl
movsl
xchg
push
pop
push
add
adc
or
shll
xchg
roll
dec
mov
mov
inc
out
xchg
or
pop
mov
and
fistpl
sahf
scas
aas
mov
stos
fisubl
and
jl
popf
insl
mov
jbe
in
scas
push
add
imul
lods
jb
stos
js
fcompl
inc
enter
xchg
sbbl
dec
scas
xor
out
mov
push
sub
ja
add
fstpl
imul
mov
pop
fnsave
stos
cmp
andb
mov
mov
inc
sbb
dec
push
mov
fcmovnbe
fnstcw
cmp
scas
push
sbb
xchg
inc
sbb
mov
scas
mov
mov
mov
dec
xchg
popf
xchg
out
mov
iret
xor
subb
loop
icebp
cmp
mov
xor
in
loop
pop
pop
pop
mov
stc
fiaddl
lcall
pop
sub
push
shll
dec
sub
out
sarl
mov
jbe
add
pop
xchg
loopne
jne
repz
fs
dec
inc
mov
pop
loop
std
int
sbb
int
inc
lods
pushf
inc
xor
ret
pop
ljmp
lcall
mov
xchg
xchg
jle
outsb
dec
int
mov
incb
aad
xchg
cmpsb
imul
or
mov
xor
fptan
test
dec
insb
xor
push
into
scas
cwtl
lahf
jecxz
mov
sti
inc
fcompl
cld
ja
and
sub
mov
ds
filds
in
repz
cmp
iret
adc
push
pop
int
bound
inc
adc
pusha
fisubrs
cs
xchg
cld
sti
dec
mov
movsl
cmp
sub
add
sbb
filds
jecxz
and
enter
xchg
stos
and
xor
pop
ja
shrl
push
mov
jmp
pop
push
lcall
clc
mov
and
out
push
filds
arpl
sbb
mov
in
fucomi
cmpsl
adc
cmp
idivb
repz
hlt
cltd
cmp
les
movsl
jo
std
arpl
shlb
push
add
fidivrs
aas
out
mov
sarb
push
cmp
cmc
imul
inc
xor
addl
insl
or
pop
lock
jns
sub
pushf
jnp
cli
add
push
int
xor
call
pop
mov
loop
push
ja
cmp
jns
divb
and
mov
in
mov
mov
ljmp
jbe
loopne
pop
xor
and
inc
aam
lahf
inc
aaa
stos
pop
xchg
push
push
sar
pop
imul
cmpsb
dec
mov
or
inc
enter
push
into
out
jnp
std
test
in
sarb
jbe
ja
inc
leave
push
loop
push
daa
pop
sub
adc
xchg
cmpsl
inc
rorl
lea
popf
mov
sbb
lret
cmp
jmp
cmp
jg
js
pop
add
sbb
loop
mov
lea
push
sub
movsl
push
jp
leave
movsb
fwait
test
cmp
mov
push
mov
xchg
incb
stos
sbb
in
mov
int3
jl
imul
jnp
push
std
aam
lret
mov
popf
or
ja
out
repnz
jo
push
add
or
mov
test
shrl
stos
ret
jl
and
mov
in
jb
mov
clc
dec
inc
push
pop
cmp
rcl
push
out
cli
or
test
mov
negl
cmc
add
xchg
add
mov
lret
jmp
lahf
jecxz
popa
pop
xchg
insl
sbb
aad
sti
rolb
mov
jle
sbb
aam
enter
stos
fimull
gs
mov
xchg
push
iret
cwtl
cmp
cmp
push
add
xchg
mov
jns
sbb
adc
cli
or
rcll
xor
out
sahf
add
pop
es
fs
jae
mov
jl
xchg
mov
sbb
xchg
loopw
not
fnstenv
push
dec
mov
mov
mov
mulb
jmp
pop
inc
jbe
cltd
rorl
fsub
stos
pusha
push
pop
inc
repz
push
int3
pop
insl
mov
cmc
in
fistps
ds
push
sahf
adc
ret
sbb
bnd
sbb
iret
mov
xor
and
sahf
pop
adc
pop
lret
pop
mov
aam
or
and
fildl
mov
test
jg
xchg
push
addr16
push
out
addr16
pop
add
add
scas
or
or
xchg
fwait
inc
mov
add
push
das
aad
push
ret
fsts
pop
ja
test
les
add
insl
pop
adc
xchg
gs
es
xchg
mov
push
cmp
sbb
jle
cmpsl
push
fs
pusha
xchg
or
rcr
sahf
mov
pop
out
push
xchg
out
hlt
push
mov
or
popf
in
add
repnz
int3
mov
push
add
push
adc
pop
xchg
xchg
xchg
push
sbb
sbb
or
push
int
pop
out
popa
cmp
and
pusha
movsb
mov
aam
ljmp
sbb
xor
jg
roll
inc
int3
and
sub
rcr
orl
loope
call
mov
mov
xor
cmp
ret
mov
mov
ja
movsb
ret
mov
fldt
sarb
adc
mov
sub
pop
repz
aam
jb
pusha
inc
xchg
mov
shll
mov
push
jmp
lods
insl
xchg
ficoml
aam
popf
test
or
cmpsl
mov
cmp
xchg
and
ljmp
cmc
pop
repz
cmp
cmpsl
je
adc
sahf
in
das
leave
rcrl
pop
and
mov
cmpsb
push
pushf
loopew
iret
mov
mov
dec
out
adc
mov
push
mov
insl
stos
and
sub
stos
icebp
imul
shll
xor
shl
mov
vfnmadd231ps
sbb
sbb
lret
cltd
or
sarb
cltd
inc
xchg
pop
loopne
stc
push
mov
cmp
jl
pusha
fwait
lods
xor
lea
xchg
ja
mov
leave
stos
sbb
pusha
adc
or
pop
std
lcall
inc
mov
sti
fbld
aam
pop
jo
inc
mov
imul
cs
fsub
shlb
popa
lds
aas
ds
mov
lock
mov
mov
imul
daa
xchg
cmp
mov
dec
push
daa
call
push
cmpsb
adc
push
push
addl
out
or
nop
pop
adcb
dec
mov
jge
mov
ss
mov
inc
inc
out
cltd
ja
pop
mov
adc
add
xor
cltd
inc
insl
fldt
dec
mov
mov
mov
jmp
in
pop
pop
mov
stc
lahf
jmp
sbb
incl
adc
addr16
out
pop
icebp
loop
pop
fisttpl
pop
pop
xchg
and
icebp
cmp
enter
aad
mov
fwait
xor
pop
cmp
cmp
scas
jo
mov
test
pushf
les
repz
lods
xchg
int
scas
sub
xchg
mov
push
jnp
mov
scas
outsb
jne
sub
xchg
jne
add
inc
pop
fwait
popf
or
cmp
inc
scas
push
sahf
xor
out
pop
dec
jmp
jmp
mov
sbb
lret
lret
push
rcrl
cs
popa
mov
jnp
and
ret
aas
xchg
mov
or
mov
mov
lcall
inc
ret
mov
pushf
inc
mov
pop
out
into
movsb
xor
lea
jne
loop
push
push
xlat
or
sub
daa
mov
inc
out
int
mov
push
add
hlt
pop
hlt
push
ss
addb
shrb
mov
xchg
pop
lods
pop
push
pop
inc
jo
pop
xchg
pop
dec
and
notl
xchg
out
test
stos
lret
sbb
shrb
fisubrl
jg
lret
push
jge
cli
inc
test
nop
pushf
add
ds
sti
int3
icebp
sbb
out
xor
fidivrl
mov
or
stos
imul
outsb
pop
pusha
aad
inc
adc
rcr
mov
pop
jns
xor
repz
jne
loop
jno
jp
lods
push
stos
lods
dec
xchg
push
pusha
fisttpl
ret
push
imul
in
mov
test
adc
lock
inc
addr16
push
pop
sub
jno
shlb
xlat
pop
inc
dec
push
fs
or
xlat
lret
xchg
xchg
sbb
into
dec
nop
mov
jb
inc
push
mov
mov
es
lret
push
lds
cmp
add
popf
stos
or
cld
adc
jecxz
mov
xchg
mov
mov
cmpb
dec
fwait
outsl
cmp
inc
xchg
sarb
addb
fimull
inc
out
gs
loop
fsubp
mov
out
in
inc
or
jge
lret
xchg
mov
cmc
fwait
xchg
jge
mov
outsb
sbb
loope
dec
sbbb
mov
mov
mov
in
xor
jne
imul
dec
das
inc
mov
lcall
shll
shufps
sbb
xchg
inc
jle
push
add
sbb
loop
inc
cld
sbb
xchg
fisttpll
cmp
xor
or
and
sbb
push
cmpsl
outsb
mov
fdivl
in
push
aas
or
sub
or
test
push
stos
mov
adc
push
or
add
lds
and
and
mov
incb
nop
adc
mov
scas
push
daa
imul
inc
xchg
sbb
out
call
cs
daa
aad
xchg
mov
notb
aas
inc
and
push
fildl
pop
jp
push
xchg
insl
cmp
ror
test
push
sbb
sbb
cmp
dec
fcomps
int3
imul
xlat
add
jl
stos
int3
or
lea
xor
repnz
cmp
add
sub
xchg
and
inc
sbb
xchg
lods
sbb
std
or
scas
cmp
cmp
adc
or
out
sarb
addr16
cmc
lods
enter
jno
sub
dec
shll
inc
addl
pop
es
adc
xchg
mov
iret
sub
adc
sub
or
mov
cmc
dec
gs
pop
vpsubd
pop
xor
add
jmp
push
test
fdivrl
cmpsl
xchg
pop
xchg
sbbb
pop
decl
pop
cmp
mov
scas
lea
xchg
pop
jb
cmp
inc
shlb
imul
jmp
jb
adc
dec
inc
jp
sub
jae
or
cmp
insb
mull
outsl
sahf
sub
xchg
cmpsl
ret
daa
xchg
lahf
push
sbb
push
inc
js
mov
mov
das
jle
pop
sahf
nop
sub
imul
push
daa
xchg
cld
in
push
stc
out
testb
pop
mov
xor
sub
aas
or
cs
fldenv
pop
mov
and
stc
mov
push
dec
popa
lds
adc
pop
sbb
sti
or
stc
shll
inc
or
adc
pop
hlt
or
mov
cmc
and
repz
pushf
mov
filds
shrb
ret
loop
aam
jnp
loope
xor
mov
pop
cmp
int
cmp
mov
test
gs
pop
fcmovb
sub
lea
fildl
aad
das
imul
pop
cli
bound
stos
push
mov
cmc
push
ja
jbe
insl
ldmxcsr
in
mov
pop
xor
add
and
adcl
loopne
repnz
rolb
add
pop
xor
pop
xor
dec
int3
sti
push
mov
andl
ret
or
mov
mov
pop
scas
mov
jo
jae
jns
mov
adc
jns
pop
jle
jge
sbb
std
clc
inc
cli
test
add
div
mov
push
cmp
sub
cmc
cmp
imul
dec
adc
ss
sub
test
loopne
inc
roll
sbb
mov
sub
mov
jb
cmp
or
lahf
in
es
or
lods
std
jp
mov
add
jmp
jno
rclb
sub
cmp
fisubrs
and
rcl
jno
mov
cmp
mov
pop
push
rorl
callw
das
sub
push
repnz
out
enter
xor
enter
jmp
or
add
mov
cmpsb
xor
negb
dec
inc
hlt
imull
push
sbb
mov
aas
jb
popa
sub
out
add
cmp
xchg
scas
xchg
outsb
out
fstpl
mov
jns
popa
sbbl
rcl
fisttpll
pop
repnz
xor
mov
loope
mov
clc
daa
fmull
es
xchg
jp
push
push
mov
sub
fwait
nop
cwtl
inc
iret
lea
pop
sti
xor
dec
xor
popf
mov
leave
or
in
negb
cs
out
pop
inc
aam
sahf
cmp
jge
mov
mov
mov
xchg
mov
push
cmp
into
pop
push
in
xchg
outsb
leave
inc
test
pop
lret
stos
inc
lret
lahf
rcll
in
data16
mov
sub
iret
cmpsl
mov
jno
enter
test
or
out
jnp
xchg
inc
xchg
std
mov
test
enter
inc
and
int
push
insb
popa
gs
cltd
xchg
adc
hlt
push
push
mov
out
enter
ljmp
fistpl
inc
hlt
fwait
and
jmp
jge
and
cmp
incl
xor
cli
sbbb
xchg
js
push
ffree
cmp
push
push
jg
mov
scas
or
dec
cmpsl
into
lret
sbbb
rcrb
jb
ljmp
mov
sarb
loope
jp
jecxz
mov
inc
lods
inc
jo
shll
mov
cli
loope
loope
cmc
div
or
mov
add
add
addr16
imul
fnstenv
sbb
mov
loopne
dec
insb
or
loope
add
cs
mov
mov
ror
pop
data16
arpl
cmpsb
scas
in
mov
mov
fwait
xlat
jnp
mov
mov
rcr
mov
pop
das
cwtl
mov
aaa
or
cld
and
xchg
and
outsl
sbb
pusha
rclb
aas
lds
xchg
push
sub
sub
add
dec
cmp
outsb
rclb
xor
sahf
es
adc
jae
int3
shrl
clc
push
xlat
sub
mov
inc
mov
xchg
add
leave
mov
je
pop
mov
sub
incb
scas
mov
lcall
push
push
les
add
shl
and
dec
cwtl
xor
daa
lods
jmp
fidivrs
jae
and
sub
xor
mov
and
mov
mov
inc
or
mov
and
fnstcw
lahf
and
push
mov
das
sbb
mov
inc
adc
pushl
inc
push
int3
lcall
cmpsb
lock
bound
or
jne
sbb
mov
adc
sub
and
pop
push
mov
dec
add
sbb
push
je
shlb
testb
out
int3
cli
or
sbb
testb
xchg
out
cwtl
movsl
xchg
xorl
sbb
inc
or
insb
adc
add
mov
inc
xor
scas
inc
or
xchg
xchg
idivl
xchg
pop
fsts
xor
insl
movsb
cmpsb
cmp
cli
sub
xor
inc
mov
into
mov
or
daa
mov
sub
clc
decb
mov
aaa
mov
pop
loop
dec
cwtl
jmp
push
loope
push
cmp
std
shrb
fiaddl
jp
mov
xchg
lods
in
jbe
inc
xor
lahf
add
mov
add
mov
je
ljmp
sub
sbb
sti
jp
orb
aad
outsb
jne
cmp
adc
dec
jnp
in
loopne
sbb
pop
out
xor
nop
jb
ret
lods
mov
jno
and
lods
cmpsb
loope
mov
sbbb
movsl
sub
push
adc
mov
test
push
inc
fstp
pop
xchg
mov
cmp
mov
ja
and
xchg
inc
lret
dec
dec
stc
and
and
mov
sbb
out
movsb
mov
ljmp
mov
insl
jae
add
xor
sub
in
std
in
xchg
and
outsb
jge
dec
stc
fidivs
xor
fmull
insb
test
adc
std
pop
pop
mov
push
imul
xchg
cmpsl
xchg
adc
sarb
jecxz
xchg
leave
xor
add
sbb
call
mov
push
scas
out
sahf
adc
lret
das
adc
mull
or
dec
jno
push
les
jb
sahf
stos
ss
insb
pop
add
xor
loop
cltd
sub
ds
mov
push
and
ds
cmp
xor
adc
outsb
adc
pop
xchg
adc
sbb
jmp
inc
mov
push
in
and
pop
pop
fdivrp
dec
idiv
jns
mov
push
mov
clc
xor
sub
xchg
in
adc
xchg
mov
add
lds
sub
cmpsb
aas
mov
popf
jae
outsl
insb
mov
mov
shr
in
xor
lods
xor
rorl
outsl
adc
mov
fisttps
out
or
test
psrad
clc
fisubs
push
ljmp
das
lret
adc
mov
loope
pop
inc
push
push
insl
mov
stc
add
jp
jbe
gs
or
mov
sub
lea
sub
push
cwtl
or
sub
xor
in
stc
or
loop
mov
or
je
pop
mov
cmp
pop
sbb
loope
lahf
data16
in
push
rol
dec
or
repz
push
xchg
push
cld
inc
sub
mov
stos
add
cwtl
adc
lcall
hlt
int3
inc
addb
adc
int3
shrb
pusha
arpl
mov
cwtl
xor
mov
jb
cld
in
sbb
shll
shlb
ret
stos
aas
mov
sbb
shl
xor
aas
pop
test
dec
push
lock
inc
sbb
cmp
jne
fdivr
enter
aam
pushf
xor
sub
mov
jno
cmpsl
sub
into
ss
jge
push
mov
sub
dec
cmpsb
xchg
mov
pop
inc
dec
adc
or
scas
filds
insb
cmp
imul
pop
mov
mov
cs
or
pop
clc
adc
loope
mov
lock
lret
repnz
rcrb
das
stos
dec
pop
out
cwtl
pop
dec
arpl
adc
filds
adc
div
scas
shlb
cmc
ret
push
inc
test
shrb
xor
push
fs
push
imul
push
sbb
inc
in
xor
testl
mov
xor
add
js
bound
stos
dec
ret
mov
js
aam
push
cmp
jle
loopne
pop
inc
cmp
test
scas
pop
sbb
mov
adc
call
cmp
test
inc
leave
sbb
and
popa
inc
iret
xchg
mov
fsubs
out
movsb
movsl
xor
je
fstpt
mov
sub
mov
rolb
mov
push
popf
adcl
cmc
inc
pop
ja
test
dec
lods
popa
mov
sahf
xchg
xlat
fldcw
lret
gs
mov
jecxz
loop
or
push
inc
in
lret
mov
mov
sbbb
mov
fcmovnu
xor
sti
mov
fcom
xor
mov
fists
in
pusha
inc
push
int3
mov
movb
pop
lea
gs
add
xor
outsl
sahf
push
sub
add
cwtl
cmp
mov
and
negb
icebp
gs
mov
lea
fsubrs
xchg
pop
mov
adc
ret
outsb
dec
test
sub
sti
push
repnz
jle
hlt
andb
mov
push
xchg
sub
pop
mov
dec
mov
push
xchg
dec
or
sbb
cmp
in
fists
mov
jno
push
pop
dec
add
adc
fidivrs
xchg
dec
out
add
sbb
stos
lahf
mov
fisttpll
push
mov
loop
je
pop
iret
adc
sub
inc
xchg
add
rorb
int
push
sbb
cwtl
xchg
xor
sbb
jl
inc
lret
mov
dec
push
lahf
sub
lahf
mov
xor
fnsave
scas
movsl
pushf
xchg
cmp
in
fcmovbe
adc
mov
xchg
sub
sbb
xor
mov
pop
fildl
loop
or
scas
jbe
sub
mov
enter
leave
push
push
adc
mov
imul
or
sub
jo
sbb
lea
stc
in
push
cli
or
lock
imul
mov
jo
dec
je
out
sub
dec
and
data16
ds
or
mov
gs
xchg
adc
jne
divb
leave
push
scas
fsubrs
or
pop
int3
inc
das
jbe
dec
es
fwait
iret
stc
out
dec
or
fcmovnu
adc
push
adc
add
cmpsl
xor
cmp
lds
xchg
mov
rol
mov
in
mov
repnz
test
call
pop
notl
ret
or
cmpsb
popf
mov
cmpsl
sbb
rorb
fndisi(8087
mov
and
push
lret
out
push
cmp
mov
pusha
dec
push
jl
or
cltd
or
mov
xor
and
imul
jge
xchg
dec
in
inc
je
test
mov
mov
loop
cld
and
xor
shrl
fld
ret
push
lea
mov
or
in
push
push
ja
inc
fsubl
sub
fimuls
adc
cmpsb
aam
roll
arpl
shll
dec
sarb
mov
adc
lret
inc
sahf
lret
cmp
fnstsw
test
sub
dec
sbb
icebp
jbe
ficoml
mov
sub
jl
dec
shlb
sbbl
arpl
mov
cmp
jb
cmp
inc
clc
adc
hlt
icebp
in
rorb
pop
sub
mov
xchg
adc
jge
mov
movl
mov
push
mov
in
mov
mov
ljmp
daa
es
lock
mov
btr
insl
popf
xor
imul
inc
movsl
mov
aad
mov
jno
push
mov
mov
daa
aaa
push
ss
incl
insb
sub
sub
xor
fstpl
xchg
dec
mov
lahf
aam
jnp
rolb
int
cs
rcrb
xchg
jge
scas
dec
push
sub
cmp
dec
hlt
push
leave
arpl
arpl
movsb
bound
into
push
mov
cli
loope
cli
xor
daa
xor
scas
cmc
adc
sbb
test
xchg
jbe
ffree
jb
pop
sbb
sbb
sti
roll
faddl
lea
lock
sub
out
repnz
sbb
mov
lea
in
xchg
dec
jne
push
push
lea
test
xchg
or
jb
sub
fstps
adc
stos
std
adcb
cltd
loop
xchg
dec
inc
cmpb
pushf
dec
cmc
jno
nop
lea
call
cmpsl
test
push
lahf
rcrl
icebp
cld
faddl
insb
xchg
and
inc
lods
dec
test
xchg
aas
stos
scas
stc
pop
hlt
rclb
testb
pusha
mov
daa
insl
push
nop
jmp
bnd
test
add
dec
out
xor
add
adc
pop
stc
into
loop
sarb
hlt
imul
das
rcl
cwtl
push
mov
das
xor
inc
test
into
lcall
or
in
shufps
cmpsb
scas
neg
mov
mov
inc
xor
sbb
dec
mov
lret
ret
pop
je
cmpsl
ret
jp
dec
pushf
jb
cld
rorb
roll
add
pusha
push
lock
frndint
aad
ljmp
mov
shrb
mov
mov
sbb
jo
dec
rclb
ljmp
push
push
mov
jle
sub
jbe
pop
in
cwtl
scas
inc
loope
mov
mov
lea
popf
shrb
push
push
inc
jg
rcl
je
call
daa
mov
out
inc
sarl
add
mulps
push
lods
pop
xchg
insl
mov
loopne
mov
out
cmpsb
cmpsl
xchg
fucomip
pop
jp
or
ss
cmc
or
and
int3
in
ss
fstpt
sbb
pop
mov
std
clc
jge
enter
xchg
lahf
jp
ja
jne
je
push
inc
jmp
push
ja
mov
jnp
xlat
addr16
decb
adc
aas
test
mov
xor
stc
divb
push
test
arpl
cmpsl
lods
in
nop
arpl
pop
xchg
mov
repnz
sub
mov
repnz
sbb
fistpl
cmp
out
cmp
loop
ds
out
and
jp
or
cmpsb
xchg
sub
jb
lods
push
pop
xchg
inc
xor
outsb
js
lods
call
cmpsl
cmp
insb
fidivrl
cltd
loop
cmp
lea
stc
in
lock
jecxz
mov
mov
dec
icebp
mov
jp
imul
bnd
jge
fsts
shrb
test
mov
dec
test
add
jne
cmc
xchg
dec
sarb
pop
lcall
jle
in
cmp
testb
push
sbb
xor
push
mov
push
fcomip
xchg
add
sbbl
xchg
enter
lcall
pushf
sub
fisttps
mov
jnp
andl
pop
insl
popl
stc
fiaddl
and
cmc
movsl
xchg
inc
data16
and
lahf
popf
jecxz
cmp
ficompl
movsb
jecxz
daa
shll
adc
add
xchg
mov
lret
add
cmpsb
shrl
std
xchg
js
jl
das
cmp
repnz
adc
pop
xor
test
add
mov
imul
test
mov
je
add
adc
jo
movsl
jle
mov
jmp
adc
push
cwtl
sub
sbb
comiss
push
dec
loop
cmp
inc
adcb
sbb
mov
xor
ljmp
je
test
mov
ds
dec
pop
add
mov
lret
adc
stc
je
or
loop
ljmp
les
nop
fldt
fadds
xchg
ds
push
ljmp
pop
pop
lods
xchg
rorb
cmc
call
rol
dec
jo
test
out
lret
sub
xchg
std
add
es
mov
xor
imul
sarl
xor
fstpt
movl
sub
pusha
je
jnp
jg
mov
fxch
test
mov
mov
subb
adc
mov
in
lret
test
fs
push
cmp
movsb
ljmp
lahf
jno
xchg
lret
ss
add
xchg
lret
push
mov
dec
sub
add
jno
sbb
clc
sbb
mov
addl
cmpsb
jp
lcall
aam
mov
adc
jnp
outsl
stos
add
mov
cmpsl
call
xor
dec
pop
enter
sub
ljmp
adcb
mov
les
inc
cmp
int3
cli
jle
jno
popf
push
xor
cli
or
test
mov
mov
cmp
cwtl
jmp
test
jecxz
push
icebp
cmp
or
es
lods
push
stos
fcmovbe
popa
aas
lods
lods
data16
sbb
xorl
xchg
xchg
xchg
or
lods
fistpll
push
adc
or
pop
ds
xor
fmuls
test
jl
js
loop
insb
xchg
out
push
xchg
and
mov
cmpsl
loop
ja
mov
ss
adcb
les
pushf
dec
sub
in
add
cmp
rcrb
mov
jmp
cwtl
sbb
outsl
insb
or
hlt
outsb
rorl
or
adc
ljmp
ret
dec
lods
push
mov
lods
push
jo
mov
xorl
stc
cwtl
scas
lds
jge
sahf
push
imul
orl
inc
cli
or
mov
popf
push
xchg
js
mov
stos
movsl
add
mov
mov
push
mov
cld
clc
sahf
in
outsb
shll
and
int
das
mov
xlat
mov
popfw
inc
ficoml
test
adc
mov
mov
dec
cs
jmp
in
daa
mov
inc
and
add
jge
dec
inc
fwait
mov
and
ja
jo
scas
lods
inc
hlt
imul
jecxz
and
xor
xor
mov
inc
shlb
add
add
add
std
pop
push
aaa
movsl
adc
mov
dec
mov
fists
stc
add
add
push
sahf
jg
iret
push
jae
jbe
adc
and
enter
sbb
xor
jle
stos
jne
in
mov
test
sub
notl
gs
bound
popl
and
cld
mov
daa
in
sbb
jg
xchg
clc
out
sub
ss
bound
lods
sbb
cwtl
xchg
sbb
xor
repnz
out
push
imul
in
cmp
int
push
or
mov
push
pop
test
xchg
mov
and
and
add
icebp
mov
and
xor
pop
xchg
push
mov
cld
sub
push
or
jl
lods
jg
jb
enter
mov
icebp
dec
dec
cltd
cmp
xor
popa
xchg
mov
dec
pop
adc
enter
insl
jo
or
outsl
movsb
cmp
xor
outsl
addl
or
hlt
icebp
icebp
xor
bnd
test
xor
mov
cmp
icebp
xchg
fildl
or
and
add
ret
sub
lret
rolb
mov
add
cmp
xor
push
mov
adc
add
and
aas
repnz
jmp
lret
pop
jl
adc
pusha
icebp
mov
test
xlat
mov
out
mov
jbe
and
loop
movsl
add
and
push
ds
int3
mov
jecxz
sbb
xchg
xchg
setg
mov
dec
jge
xor
push
mov
cmpsl
lahf
pop
ror
dec
pop
push
jb
sti
jp
mov
mov
sub
and
lahf
shl
or
pushf
cmp
into
jae
movsb
fildll
ss
mov
xchg
sti
rolb
pop
dec
rolb
sub
in
mov
insb
loop
inc
xchg
leave
test
das
dec
mov
mov
int3
scas
pop
xchg
icebp
call
dec
fdivrs
dec
xchg
push
lods
sub
lock
dec
nop
push
mov
cmp
xchg
dec
call
test
decb
aas
or
addr16
cwtl
ljmp
movsl
jecxz
bound
jp
mov
pop
es
pop
and
cmp
inc
mov
cmpsb
fcomps
lock
outsb
jns
and
sub
push
add
into
mov
sub
jo
push
negl
out
out
mov
call
nop
test
mov
add
dec
ljmp
sbb
and
jl
popl
fs
jmp
xchg
xor
push
xor
aaa
add
xor
arpl
mov
cs
adc
in
lods
test
cld
xchg
push
movsl
inc
in
sbb
or
push
cmp
ds
test
mov
adc
xchg
xor
ret
add
clc
setge
lret
mov
jb
stos
and
xorb
cmpsl
xor
lret
mov
fcomps
mov
ret
push
data16
dec
int3
add
addr16
icebp
rorb
mov
and
dec
sub
ficoml
decb
in
in
xchg
cmp
mov
jp
mov
jbe
dec
push
push
mov
clc
xchg
pop
xor
push
sar
cmpsb
movsb
mov
shrb
mov
mov
addr16
pop
shlb
sbb
xchg
popa
in
stc
in
mov
inc
rclb
mov
jae
lret
data16
pop
stos
repnz
push
dec
dec
movzbl
and
shll
nop
enter
xor
aas
mov
cmp
adc
add
push
add
out
fwait
and
in
and
push
sbb
pusha
sarl
jae
cli
add
subb
add
lret
push
ret
jo
and
mov
aad
or
inc
fbstp
adc
test
imul
ljmp
mov
mov
jecxz
pop
repz
pop
inc
and
jbe
push
xchg
pop
jbe
inc
push
enter
arpl
pushf
test
pop
sarb
arpl
lea
test
inc
push
adc
mov
iret
out
leave
xor
mov
pushf
negl
xor
stos
imul
in
adc
sahf
xchg
ret
int3
inc
in
and
into
add
and
add
or
aaa
or
add
fs
into
mov
lahf
fs
ljmp
push
fdivr
and
sbb
je
adc
js
or
ds
cwtl
or
out
bnd
leave
jmp
add
sub
jbe
sbb
xchg
sub
sbb
push
movb
ret
xchg
adc
xor
add
int
js
popf
out
dec
inc
das
xchg
add
cwtl
mov
cs
push
insb
push
stc
dec
out
mov
cmp
lods
mov
in
or
cmp
xchg
fildl
sub
std
cmpsb
insl
xchg
jns
shrd
push
je
inc
and
in
sub
add
dec
bound
mov
xor
inc
sbb
mov
lods
mov
mov
xchg
mov
dec
cmp
pushf
sub
jp
dec
fnstsw
inc
fldl
mov
idiv
xchg
orb
int
lret
in
jnp
shll
mov
dec
push
mov
cmp
jb
iret
clc
incl
fdivrl
pop
dec
adc
decl
pop
cwtl
enter
fbld
das
add
sbb
add
dec
outsl
sti
dec
inc
mov
mov
daa
add
jg
sub
sub
adc
loop
mov
jno
je
cli
jmp
push
push
sbb
mov
add
or
cmp
lcall
scas
jne
fnsave
pushf
xor
subl
sbb
ret
mov
in
mov
inc
sahf
push
popf
sahf
rcl
xchg
push
dec
sbb
mov
inc
add
jae
dec
sub
and
push
cmp
shlb
push
adc
mov
mov
test
lea
pusha
sbb
enter
mov
orb
ljmp
mov
daa
xchg
int
mov
xor
or
pop
xor
mov
pop
jne
jns
xor
nop
or
aam
xlat
fdivl
stos
andl
aad
lcall
xorl
loope
les
sbb
mov
in
sub
push
fmul
inc
pop
clc
scas
loop
in
pushl
rolb
imul
mov
jecxz
jl
inc
adc
fcmovnu
push
daa
lods
fwait
shll
aad
and
fwait
pop
mov
sbb
testl
ljmp
enter
mov
outsb
sub
outsb
js
inc
outsb
nop
pusha
je
repz
or
adc
push
push
outsl
push
and
icebp
imul
std
jnp
adc
xchg
scas
push
sub
push
inc
add
or
or
rcrb
cmc
cmp
ja
pop
mov
in
cltd
push
les
movsl
xchg
pop
inc
mov
outsl
xchg
or
xor
pusha
cltd
cmpl
or
cmpsb
ljmp
pop
xor
push
scas
pop
lcall
and
adc
ret
les
push
pop
mov
mov
jge
mov
fwait
xchg
adc
in
imul
movl
push
mov
cmp
mov
mov
xor
adc
cs
cld
call
mov
cmpl
in
pop
pop
adc
mov
addb
xor
fucomp
xlat
or
les
pusha
ja
cli
cli
lods
leave
popf
icebp
imul
mov
jl
xor
aam
cmp
andb
std
jmp
test
test
xor
ja
xchg
pop
jnp
ja
shrb
stos
testb
and
repz
adc
xlat
or
ljmp
mov
and
add
cmc
sete
insb
mov
repnz
mov
insb
or
adc
mull
fwait
addr16
lret
mov
sbb
xchg
and
out
mov
sbb
icebp
jns
push
fists
out
hlt
push
jo
je
pushf
push
pop
push
fstps
add
mov
mov
lcall
sub
xor
mov
sbb
out
pop
mov
pop
sub
adc
movsl
call
pusha
push
push
pushf
repz
je
jle
jp
sbb
dec
pop
and
hlt
cmp
pop
pop
cmpl
push
add
subl
lret
shll
addr16
not
cmp
add
jnp
pop
add
mov
movsb
jge
lcall
daa
mov
xchg
jne
std
mov
movsl
dec
bswap
loop
aam
cmp
push
dec
or
pop
leave
cmp
jle
lret
bound
out
out
iret
ret
cmc
jb
xchg
repnz
cmp
testl
ss
mov
adcl
and
fisttpl
imul
sbb
add
je
push
sub
clc
jg
and
outsb
sub
test
cmpsl
add
jl
fadd
mov
fistps
xor
cmpsl
sarb
push
xchg
das
lahf
subb
test
xlat
jo
mov
xchg
fs
add
cmp
sub
rol
es
sub
push
insl
repnz
xchg
xchg
iret
loop
push
push
cmp
xchg
mov
fwait
mov
sbb
mov
cmpsl
sub
or
ja
mov
ret
inc
push
jle
xor
rcl
dec
in
cwtl
stc
push
icebp
cmp
adc
inc
adc
mov
xor
scas
leave
sbb
lods
cltd
mov
shll
sub
adc
cmpsl
mov
ljmp
ss
xor
push
jmp
scas
jne
hlt
mov
repnz
gs
mov
andl
push
mov
movsl
ss
lret
int
dec
insl
xor
or
arpl
insl
pop
mov
dec
and
loopne
nop
stos
imul
mull
stc
xchg
push
idivb
mov
dec
repz
fcmove
ja
cli
mov
push
push
xlat
lahf
dec
aas
loopne
fwait
jno
dec
daa
repnz
mov
js
xlat
pop
jmp
push
pop
lcall
inc
mov
cmpl
jae
int3
push
or
and
into
inc
sahf
xchg
xor
push
pop
push
mov
decb
jno
out
insl
rcrb
cmc
notb
xor
out
push
adc
das
clts
fwait
jbe
mov
test
dec
aaa
invd
leave
mov
xchg
pop
pop
mov
push
inc
leave
mov
mov
sub
push
imul
ds
pusha
and
test
cmpsb
in
jnp
hlt
fnstenv
shrl
or
test
mov
xchg
scas
cmpb
lods
jmp
cs
or
inc
xchg
hlt
mov
xchg
cli
jp
cmp
enter
sub
lcall
xchg
outsb
mov
mov
sti
mov
call
daa
fbld
out
dec
lods
pop
scas
add
fldcw
sarb
insb
rcrb
xchg
test
inc
dec
adcl
adc
int
aas
ja
cmpsl
pop
push
push
lret
lahf
adc
mov
pushf
out
ret
mov
mov
adc
xor
clc
aas
add
sbb
jmp
xchg
xchg
test
ret
cmp
add
dec
loope
push
into
dec
in
dec
push
mov
cmc
cld
mov
and
and
ljmp
jo
xor
jns
leave
inc
addr16
insb
or
dec
or
mov
inc
or
and
lret
push
jnp
dec
fmuls
ret
loope
push
mov
popf
add
icebp
hlt
or
fistpl
inc
mov
lret
call
mov
xor
or
dec
mov
sub
cld
push
add
jl
out
cmc
iret
inc
pcmpeqd
adc
gs
mov
mul
add
jmp
scas
xchg
cmp
sbb
mov
mov
leave
repnz
push
inc
mov
fcompl
sbb
jle
data16
sahf
or
decl
das
cmpsb
cmpb
daa
enter
inc
xor
xor
adc
cmpsl
js
push
ss
out
and
push
mov
sbb
out
xor
xor
inc
popl
cmp
aaa
fisubrl
inc
out
add
pop
dec
jae
stc
lock
mov
inc
add
subb
cld
cmc
mov
push
xor
jns
les
in
mov
inc
out
aad
daa
test
leave
pop
mov
adcl
sub
pop
mov
fmull
shlb
cs
push
fdivrp
jmp
add
jge
fldl
movsb
ja
shll
push
cmpsl
bound
mov
imul
rdmsr
lret
push
and
push
loop
mov
movsl
xchg
mov
in
cli
jbe
xchg
int
cmp
les
add
into
xor
ljmp
sbb
jnp
or
xchg
xchg
notb
sti
adcl
imul
add
das
dec
mov
cmp
xchg
pop
sbb
enter
pop
sbbb
push
outsl
jle
fwait
mov
inc
sti
stos
hlt
gs
pop
xchg
xchg
adc
sbb
es
jno
dec
fs
outsb
in
bound
or
je
sbb
sub
inc
pop
jns
sub
inc
xchg
dec
ja
or
pop
push
mov
and
jbe
adc
test
in
push
cmpsb
push
xor
stos
bound
mov
ja
es
pop
cs
std
push
out
add
add
xor
loop
test
in
fldt
xor
sbb
test
sub
sub
mov
jns
mov
xchg
or
jecxz
xlat
xor
pop
inc
lea
cmpsl
rolb
xchg
out
or
sbb
cmp
inc
out
and
pushf
mov
mov
cli
outsl
fcmovnb
xchg
xchg
enter
aas
imul
lods
je
add
sub
nop
dec
mov
je
xor
inc
icebp
mov
push
pusha
test
fstpt
inc
lds
inc
mov
je
mov
addr16
lea
push
or
popa
xchg
mov
xchg
inc
ds
stos
lret
inc
fiadds
cmp
xchg
cmp
call
sub
cmp
icebp
enter
sub
daa
cmpl
cltd
mov
popa
add
jae
xor
ljmp
movsb
aas
imulb
jo
lock
pushf
inc
inc
push
pop
test
rcr
cmpsl
pop
lock
in
push
sbb
ror
or
inc
outsl
in
ret
js
loopne
mov
addl
das
lcall
insb
sbb
cmovo
testb
jns
repz
stos
pop
movsl
fs
outsl
fstps
cltd
in
sti
pop
or
popa
imul
les
inc
repnz
cmp
lock
mov
imul
fsubs
pop
jg
inc
add
mov
xor
lods
push
iret
lcall
enter
adc
inc
cmc
data16
push
jo
rcll
int3
cmp
and
shrb
daa
cmpsl
pop
int
push
ret
and
push
inc
xor
repnz
outsl
xlat
mov
push
push
lods
push
push
das
push
daa
jbe
inc
aas
ds
iret
arpl
mov
sbb
xor
mov
adc
and
lret
ss
add
sbb
and
mov
push
rcrl
and
fisttpl
pop
sub
jl
push
mov
pusha
dec
cli
jmp
mov
fisubrs
mov
repnz
xor
dec
jg
lods
cmpsb
mov
cmp
xorl
xor
push
add
iret
inc
adc
out
fs
inc
pop
imul
sbb
xchg
nop
outsb
jg
and
cwtl
dec
cs
adc
push
jle
dec
pop
or
imul
notl
das
or
out
rcl
enter
mov
sbb
push
js
or
int
dec
notb
iret
repnz
xor
mov
mov
mov
dec
add
addb
clc
lea
mov
sub
xchg
adc
mov
and
aaa
inc
mov
orl
in
adc
mov
rol
pop
mov
or
outsl
arpl
ljmp
mov
cmpsb
xor
and
outsb
jl
push
int
in
in
add
ss
and
adc
xchg
pop
cmp
ljmp
xor
adc
jo
mov
jmp
cmp
xchg
sbb
or
xlat
ret
push
mov
and
cmp
test
inc
jbe
sub
data16
mov
xchg
mov
xchg
outsb
sbb
pop
fldcw
mov
mov
scas
leave
pop
adc
ret
or
cmpsl
jecxz
dec
push
pusha
std
mov
mov
and
out
imul
xchg
lock
add
mov
arpl
ljmp
mov
cmp
cmp
clc
ljmp
sub
enter
xchg
add
dec
aaa
mov
xchg
jg
in
or
mov
out
push
xor
int
aam
daa
mov
adc
js
xchg
mov
mov
mov
mov
adc
add
aad
mov
cmc
mov
jbe
rolb
cmp
addb
adc
xlat
sub
inc
test
in
jns
inc
mov
lods
inc
sbb
aas
loope
imul
jecxz
ss
mov
cmp
pop
cltd
das
outsb
rorb
icebp
mov
scas
mov
inc
rorb
int
gs
mov
mov
jmp
xchg
out
nop
cmp
jns
incl
popa
cmp
sbb
ret
icebp
hlt
test
sbb
iret
cmp
push
call
add
cmpsb
std
or
rcrb
mov
jns
pusha
cmc
fs
push
mov
mov
mov
imul
clc
test
jge
pop
roll
jle
std
pop
cmpsb
loop
clc
sub
dec
cmpsl
jecxz
xchg
mov
into
jle
xor
push
aaa
sbb
pop
cmpsb
addr16
sub
push
cmc
shrb
cmp
push
insl
cs
addl
and
jns
fisubrs
js
jne
jns
sbb
push
cld
pop
and
outsb
pop
test
out
addr16
dec
cmp
fs
cld
test
xor
mov
adc
push
mov
dec
les
test
dec
lock
test
scas
pop
je
mov
jb
mov
add
sbb
xor
sbb
sbb
ljmp
xchg
adc
shrl
mov
cltd
js
push
or
adc
enter
push
scas
sub
jne
push
insl
lea
cli
cli
insb
cltd
sbb
aad
xchg
mov
cmp
add
mov
iret
jb
cmp
pmullw
ljmp
cmp
xchg
push
mov
inc
xor
cltd
mov
pop
add
mov
int3
xchg
pop
pop
cli
outsl
ja
es
ja
popf
inc
dec
enter
lds
in
push
dec
and
iret
jb
ljmp
sub
mov
push
dec
lods
scas
test
stc
push
push
das
adc
dec
movsb
dec
cmp
sub
adc
add
rcll
xor
loope
imul
nop
mov
sub
xor
fsubrs
lods
and
push
loope
mov
ss
push
movsb
xchg
lods
dec
add
add
in
ss
call
shll
jno
dec
inc
inc
nop
popa
pushf
imul
push
cmpl
outsl
out
and
outsb
ja
data16
mov
popf
or
lahf
fiaddl
das
movq
notb
mov
jnp
loopne
push
cwtl
rolb
das
xchg
or
lret
fdivrp
and
fnsave
or
or
jecxz
test
jno
or
push
call
inc
clc
int
dec
loope
jb
add
mov
imul
adc
aad
nop
rclb
repz
ljmp
sbb
fistpl
sub
inc
fdivl
and
mov
pop
push
mov
mov
popf
pop
jns
mov
add
je
lret
lea
xor
mov
dec
je
and
adc
mov
arpl
stc
lcall
and
jmp
xor
sub
movsb
loope
dec
push
int
add
xor
in
movsb
in
sub
ljmp
cwtl
add
jne
push
xchg
ficoml
add
jmp
ret
test
je
por
shrl
jae
hlt
push
lods
cmp
mov
push
in
lods
loopne
stc
mov
dec
cmpl
and
fidivl
iret
push
cmpsl
mov
and
dec
scas
mov
bound
ror
dec
jge
fnsave
add
leave
pop
daa
xor
ret
jne
loope
imul
std
xchg
mov
ds
scas
pop
pop
cmpsl
or
scas
push
or
adc
lods
mov
pop
fwait
lahf
das
stc
pop
push
les
pop
or
adc
mov
pop
aaa
add
push
pop
iret
inc
pop
push
pushf
test
call
cwtl
push
mov
cmpsb
fucom
or
mov
cmpsb
adc
mov
push
iret
inc
sbb
push
lods
sub
push
xor
outsb
jb
test
inc
dec
shlb
call
push
sti
gs
or
push
dec
clc
fistl
push
pop
dec
sbb
pop
lods
sti
dec
jne
or
loopne
dec
jb
fmull
xor
mov
mov
inc
add
cmp
dec
and
xor
mov
lahf
out
flds
add
adc
inc
cmp
nop
out
pop
cld
fdivs
in
lds
out
jmp
data16
aam
negl
sbb
cmp
xor
jmp
mov
test
test
movsl
xchg
mov
jns
dec
jecxz
pop
lcall
inc
mov
faddp
mov
cmpsb
sub
pop
and
loope
push
ret
mov
jno
adc
dec
xlat
mov
xor
clc
pop
mov
movsl
aam
stc
mov
jb
inc
and
pop
sub
dec
dec
pop
jo
jnp
fcomps
je
iret
insl
sub
cmp
cs
lahf
pushf
xchg
inc
adc
add
cmp
mov
cmp
cmc
adc
aad
add
dec
push
pop
sub
pop
ret
sarb
jecxz
push
cs
ja
and
xchg
ret
mov
call
add
xchg
mov
fcomps
cmp
imul
jecxz
inc
mov
sub
lret
push
imul
cmp
in
daa
jg
popl
sbb
popa
iret
shrl
dec
adc
push
mov
mov
cltd
test
cmp
xor
jge
sub
mov
sbb
adc
push
mov
test
movsl
push
mov
xchg
add
and
jp
and
ljmp
xlat
dec
cmpsl
sbb
add
or
fnstcw
adc
sbb
lret
cmp
pushf
sub
repz
sub
dec
int3
in
pop
mov
imul
in
push
xchg
je
loopne
sub
jns
sub
cmp
shlb
aaa
pop
mov
xor
jg
in
imul
mov
push
repnz
lret
das
xchg
mov
dec
mov
sub
data16
jmp
push
xchg
fs
and
popf
jl
sbb
xchg
out
jmp
push
mov
mov
hlt
aas
lods
and
push
les
loopne
loop
int3
and
stos
outsb
movl
mov
insb
out
jno
sbb
data16
push
int3
pop
in
xor
jmp
and
gs
push
inc
fistpll
sbb
cmc
loop
xor
jb
clc
jb
test
xor
xchg
repnz
cmp
mov
dec
sub
rorl
adc
ret
movsb
cmc
hlt
cmp
mov
mov
lds
pop
and
mov
pop
imul
push
clc
inc
enter
mov
aad
test
add
cltd
sub
xchg
fildl
stos
mov
cmc
cli
push
daa
sbb
xchg
dec
mov
push
and
fistps
lea
test
dec
cmp
sahf
cmpsb
pusha
push
inc
stos
insl
ds
or
mov
rolb
mov
iret
in
push
mov
sub
cmp
jmp
subl
gs
inc
adc
push
xchg
outsl
stc
stc
icebp
dec
ret
orl
sub
xchg
sub
mov
std
xor
xlat
pop
out
mov
nop
mov
aam
mov
and
int3
mov
jmp
mov
and
sbb
mov
mov
je
jnp
pop
hlt
sbb
mov
and
xchg
cld
test
jp
repz
mov
pop
cltd
cmpsb
fdivr
cmpsl
aam
cli
jno
cwtl
fistpll
add
adc
mov
mov
fs
pushf
cltd
xchg
pop
sub
xchg
jns,pn
je
addb
push
pusha
cmpsb
sbb
cmp
adc
aaa
stos
sbb
sbb
mov
pusha
cmp
addr16
fwait
push
cli
shll
dec
pusha
out
jp
cli
adc
cs
shlb
pop
push
mov
push
repz
addb
add
outsl
fucomp
xchg
bound
repz
hlt
or
das
mov
cmpsl
in
dec
scas
out
sbb
adc
test
js
pop
xchg
loop
jp
push
or
xchg
test
cmp
cwtl
cmp
push
je
sbbb
xchg
movsl
jns
leave
es
popf
xchg
idiv
push
sbb
or
and
decb
jns
insl
xchg
scas
ficoms
or
adcl
cmpsl
lret
jb
mov
mov
mov
aas
popf
adc
loope
mulb
sub
jno
sub
test
adc
mov
flds
pop
pop
mov
std
mov
sbb
mov
dec
mov
inc
mov
out
popf
pop
jnp
or
mov
xchg
mov
imul
jae
scas
xchg
icebp
popl
lods
jle
fisubrl
lret
add
jb
iret
repz
lds
loopne
mov
cli
cli
fwait
aad
sti
test
sbb
push
xchg
scas
stos
call
je
jge
and
mov
mov
daa
sbb
lock
add
mov
fistps
mov
lea
lds
fs
fcomp
cmp
out
jecxz
mov
fstl
jmp
xchg
or
add
call
mov
shll
push
icebp
cmp
xchg
sbb
test
push
popa
pop
cmp
addr16
jo
and
mov
int
lahf
mov
mov
xor
mov
scas
movsl
dec
or
push
push
push
mov
and
call
fiaddl
bound
inc
pop
call
cmp
or
fwait
cmpb
dec
dec
outsl
xchg
lock
call
cli
jle
clc
int
sbb
xor
adc
xor
cltd
popa
xor
dec
jb
xchg
add
sbb
mov
loop
cli
gs
fcomps
push
mov
mov
mov
out
sbb
pop
pop
add
fisttpl
aad
add
xor
mov
jp
repnz
jmp
xor
push
mov
mov
loopne
mov
jno
in
fidivs
call
aam
rcl
adc
imull
popa
in
imulb
rclb
imul
int
cli
fimuls
stos
test
scas
xchg
push
jl
xor
fs
rcll
cmpsl
pop
add
nop
ss
mov
cmp
cmpsb
xor
jl
and
push
in
pop
jg
jo
sti
pop
dec
mov
or
mov
lea
enter
adc
test
push
inc
lcall
out
add
push
push
cmp
or
adc
adc
mov
mov
aas
fisttpll
pusha
sbb
mov
dec
mov
pop
shrb
jbe
jae
dec
dec
sub
xchg
stos
movsl
aad
bound
jae
dec
mov
xlat
xor
cmp
add
sbb
jnp
stos
out
js
jbe
add
iret
out
cmp
push
mov
cmpsl
cwtl
mov
push
sti
in
mov
push
sub
xor
mov
lods
stos
mov
in
sub
add
xor
push
lret
xchg
sub
mov
scas
div
adc
cmp
sbb
fcomps
mov
lds
adc
mov
outsb
jne
clc
or
insb
mov
imul
jg
fwait
mov
sbb
insl
jmp
xchg
cmpsl
push
push
js
xor
pop
sbbl
iret
jg
in
pushf
mov
mov
lods
mov
lds
div
ljmp
adc
sbb
fimuls
pop
mov
xor
push
jno
lock
js
call
jp
shll
lods
mov
cltd
xchg
arpl
push
shlb
adc
div
add
jae
aad
inc
adc
in
movsl
or
cmp
repnz
and
or
aaa
rcpps
mov
or
fadd
add
mov
xor
adc
les
or
or
jg
into
sti
cld
xchg
jae
in
jmp
inc
sbb
repnz
hlt
stc
movsb
adc
aad
daa
aam
lea
flds
das
pusha
cli
mov
leave
dec
xchg
cs
inc
int
repz
xchg
inc
stos
sahf
in
jg
loope
push
add
mov
and
mov
push
scas
movnti
jecxz
jbe
lret
ljmp
jne
leave
xor
pop
push
fnstenv
icebp
and
daa
jno
sub
sbb
mov
xchg
into
imul
fldcw
push
push
sub
xor
cmp
cmp
pop
jge
sub
add
push
aaa
popf
lret
sti
mov
loopne
sbb
or
stos
repz
pop
insl
push
test
jno
popa
pop
push
fistl
in
ret
sub
jbe
and
dec
cld
mov
sahf
sbb
sub
out
jp
fdivs
rep
lret
pusha
mov
pop
xchg
cld
sar
lds
inc
cs
mov
jnp
jle
pushl
sbb
icebp
stos
mov
push
adc
jg
xchg
les
sbb
dec
adc
add
mov
pop
es
in
bound
inc
push
out
lahf
pop
movsb
in
jl
addl
lods
cmp
or
mov
inc
in
pop
cmp
dec
xadd
dec
loope
pop
mov
jae
fwait
push
dec
pop
stos
fildll
add
ljmp
inc
js
mov
add
jg
ss
cmc
jns
mov
sbb
negl
hlt
dec
dec
jmp
fcoms
and
xor
js
jae
shl
icebp
test
out
push
or
cmp
test
cmp
call
inc
mov
inc
in
mov
inc
mulb
jnp
out
dec
cmp
imul
cmpsb
and
sub
mov
loope
insl
inc
scas
fcmovnbe
jmp
xor
mov
hlt
out
inc
mov
xchg
lret
dec
inc
xlat
jne
pop
mov
nop
xor
jno
dec
stc
lea
arpl
scas
pop
mov
test
cpuid
push
dec
shl
jno
jmp
pop
jne
imul
ja
jl
mov
inc
add
imul
jnp
ret
stc
pop
and
inc
xor
sbb
filds
xchg
xor
jg
aaa
in
push
xchg
andl
mov
test
test
call
or
repnz
mov
cmpsl
sbb
sbb
jb
frstor
arpl
inc
jl
push
inc
xorl
stc
mov
jb
vpmaxub
hlt
lcall
pop
es
jbe
arpl
fldcw
das
mov
dec
jb
scas
xchg
jl
js
ljmp
cmc
sahf
ret
fiaddl
jecxz
clc
out
stc
iret
xchg
arpl
push
shlb
sahf
sbb
loopne
daa
cwtl
loopne
ds
outsl
lods
jecxz
mov
sub
fists
xorl
sbb
dec
jne
cmp
xor
adc
andb
adc
sbb
aaa
xlat
and
test
jmp
and
and
ret
das
movsl
inc
push
jle
sub
push
push
or
pusha
pop
jae
cmp
js
add
fisttpl
inc
mov
mov
fs
xchg
aad
popf
lods
imul
dec
fidivrl
mov
mov
jnp
jg
out
sub
scas
sahf
cwtl
test
push
adc
xchg
sahf
dec
pusha
push
jmp
pop
xlat
daa
pop
xchg
xchg
dec
sub
outsb
inc
ljmp
in
mov
sarl
jl
daa
sub
in
jmp
cs
clc
push
sub
insl
js
cli
iret
mov
fucomip
mov
enter
js
sub
sub
lcall
ljmp
or
xchg
mov
call
pop
in
stos
pop
jne
sti
dec
cli
sahf
and
adc
test
pop
jo
mov
arpl
jbe
pop
or
je
out
mov
cmpsb
scas
icebp
leave
rolb
hlt
xchg
adc
das
gs
loop
aam
dec
jb
xor
fcoms
pushf
mov
jo
hlt
shr
into
mov
push
push
xor
jo
push
xor
mov
sti
sub
adcb
testl
test
gs
cld
xchg
jecxz
cmpl
dec
cmp
ja
xor
adc
ljmp
popf
mov
jge
fs
mov
push
push
or
movsb
mov
movsl
adc
xchg
es
fisttpll
test
or
aaa
fs
jmp
pop
jnp
mov
mov
inc
pop
mov
es
fistps
jg
jo
mov
cmp
mov
ud0
jo
movsl
and
mov
jl
and
cmp
sub
cltd
add
fildll
push
inc
push
dec
mov
jb
lods
cmp
and
jp
ljmp
test
xchg
out
test
inc
mov
inc
push
pop
fsubp
lahf
inc
rcrb
adc
mov
push
or
call
lret
mov
pop
fisttpll
xchg
jmp
repz
addb
ds
sbb
fwait
jbe
sbb
dec
xor
inc
int3
popa
dec
inc
inc
add
dec
adc
xchg
pusha
cmp
pop
ds
adcl
add
in
jle
popa
lret
jle
and
ja
jnp
fmuls
and
or
dec
dec
sarl
fcompl
rcrl
arpl
insb
cmp
jecxz
daa
dec
push
sarl
cmp
xchg
cs
out
jl
pmuludq
pop
int
dec
out
fwait
test
pop
imul
push
sbb
mov
filds
in
clc
xchg
sbb
mov
xorb
andb
or
test
lea
sbb
jno
add
es
or
es
outsl
negb
jl
or
dec
aas
lock
mov
jnp
rcrl
sbb
addb
xchg
aad
push
mov
dec
sub
inc
ret
cmp
dec
inc
iret
movsb
movsb
cwtl
div
ljmp
pop
mov
sub
mov
push
xchg
inc
dec
out
les
dec
xor
repz
lods
pop
sti
or
ss
scas
test
push
or
push
mov
and
vpshufhw
inc
into
in
int
add
aam
mov
pop
cmp
aad
fcomps
iret
dec
inc
push
dec
je
out
imul
cmp
int3
pop
mov
outsb
xchg
mov
std
lods
push
or
fdivr
cld
lcall
jg
pop
fnstsw
adc
jecxz
jae
cli
std
daa
aad
adc
loopne
and
xlat
or
adcb
std
dec
jbe
shl
xor
jnp
stos
xor
mov
add
push
or
fs
ja
xor
add
test
sbb
pop
adc
adc
sub
push
inc
iret
jo
sub
adc
xchg
je
jno
adc
loopne
sahf
pop
pop
pop
and
lods
mov
jl
jg
mov
inc
sub
xchg
stc
cli
insl
gs
lock
iret
out
ja
mov
adcb
push
and
lea
sahf
xchg
js
pop
addr16
and
push
and
decb
repz
sti
or
and
mov
rclb
or
pop
cmovns
sti
faddl
loope
xchg
pop
add
pop
push
jle
into
dec
dec
movsl
movsl
xchg
xor
lods
sub
push
les
pushf
imul
rcll
mov
jmp
and
mov
push
mov
cmp
shr
dec
jmp
addl
dec
xlat
out
add
jnp
push
loopne
mov
repz
insl
fdivrl
dec
fdivl
xchg
mov
iret
and
and
lods
lock
ljmp
mov
push
testb
xchg
repz
mov
fisubs
popf
jl
xor
sub
xchg
push
lret
jge
aaa
sbb
daa
pusha
or
inc
pusha
pop
std
shlb
fwait
add
test
xchg
hlt
and
jmp
je
inc
sub
mov
cmp
jnp
lods
push
out
outsb
fucomp
cmpb
jbe
outsl
jmp
out
dec
shll
mov
sub
mov
in
test
pop
inc
fsubl
mov
inc
jb
mov
xchg
sbb
pop
popa
and
push
js
xchg
lods
fistl
addr16
icebp
in
inc
push
or
xor
fadd
enter
repz
sti
repnz
popf
lcall
ljmp
or
push
dec
movsb
out
or
cmp
push
mov
dec
clc
jmp
bound
xchg
dec
jae
lock
cmp
pop
push
inc
push
fbld
push
lret
sti
pop
test
fs
adc
cmpsl
cwtl
data16
mov
out
or
jo
pop
inc
dec
punpckhbw
fdivs
xor
popf
inc
shrb
notb
fdivrs
icebp
or
jle
mov
enter
pusha
test
and
in
adc
mov
cmp
cmc
push
and
mov
sub
or
inc
mov
lahf
mov
sbb
pop
lods
shrb
test
inc
roll
subb
adc
jo
icebp
pop
dec
xchg
sub
lods
and
repnz
add
imul
test
fcmovne
push
mov
call
jnp
les
icebp
sbb
xor
in
stos
xlat
add
push
std
scas
xchg
push
lahf
pop
or
je,pt
hlt
cmp
dec
scas
int
mulb
inc
data16
adc
iret
jg
xchg
in
cld
sbb
test
stos
pop
in
add
mov
test
mov
mov
pop
or
fmull
mov
pop
loopne
dec
out
xchg
push
dec
lret
inc
mov
or
sbb
fidivrs
sub
mov
jnp
cmpb
xchg
sahf
push
outsl
mov
jns
xor
sub
xchg
mov
and
xchg
popf
sub
out
mov
mov
mov
and
mov
jae
bound
mov
and
xor
inc
enter
popf
stc
xorl
mov
out
into
shrb
or
jne
dec
sahf
imul
adc
std
jge
in
loop
cmp
mov
mov
mov
cmp
cld
mov
sbb
sub
lahf
js
xchg
cmp
dec
cltd
pop
xlat
fcoms
shrl
mov
inc
jbe
sub
call
sub
pop
sahf
jecxz
mov
pavgb
pop
ja,pn
pop
cmp
or
adcl
pop
and
aam
subl
xchg
scas
ret
lods
inc
mov
fcmovnbe
repnz
jl
dec
div
outsl
mov
mov
sbb
cmpsl
mov
mov
out
mull
cwtl
mov
pop
stc
jmp
jl
mov
roll
mov
in
and
out
dec
push
mov
out
dec
xchg
jge
sbbl
ss
sbb
dec
fsts
pop
repnz
scas
enter
lsl
leave
fucomp
jnp
or
inc
daa
fisttpl
ja
ja
insb
ja
push
and
and
in
addr16
inc
aaa
fistpl
mov
repnz
imul
sbb
push
xlat
loope
pop
mov
notb
aad
push
movsb
mov
cs
iret
je
jle
dec
jecxz
jle
ds
push
cmpsl
adc
into
adc
enter
sahf
adc
mov
hlt
shlb
out
push
popf
shrl
or
inc
push
adc
test
mov
sarl
cmp
shrb
sub
cli
mov
lret
pop
sub
mov
inc
mov
pop
int3
stc
mov
and
cwtl
push
inc
bound
outsl
xchg
lret
xor
mov
loopne
repnz
out
mov
xor
jmp
mov
xchg
ret
loop
incb
push
aam
clc
jb
dec
lret
gs
add
lahf
and
mov
pop
out
xchg
hlt
repnz
jnp
fstpl
pop
mov
gs
dec
push
cmp
je
les
int
push
lahf
dec
or
sbb
enter
pusha
jnp
test
lret
jp
xchg
cmp
fdivrs
cmpb
push
cmpsl
xor
xchg
cltd
dec
in
cmpsl
cmpsb
les
add
hlt
pop
or
pushf
incl
or
mov
mov
imul
sbb
testb
mov
ja
subl
rorb
ljmp
lods
and
or
call
sahf
jnp
xor
orl
and
rcll
lods
mov
and
es
mov
notb
sbb
jnp
sub
or
popa
icebp
jg
or
je
daa
mov
aam
shlb
mov
insb
out
xor
mov
add
cld
scas
into
cs
mov
inc
jecxz
in
sub
dec
pop
mov
pop
hlt
add
test
popf
inc
inc
out
push
fs
dec
scas
dec
jle
xchg
sub
cltd
cmovge
loopne
pusha
into
push
scas
inc
cmc
and
mov
xlat
lods
cmpsb
mov
sub
sub
sub
ret
mov
dec
mov
lods
cmp
jne
inc
sbbb
xorl
mov
fcmovu
jb
pop
stc
push
clc
adc
dec
xchg
setge
js
and
mov
lea
push
and
mov
lahf
mov
andb
fs
push
cmp
sti
test
jae
and
mov
cmp
pusha
adc
shlb
aam
dec
stc
lods
add
dec
mov
arpl
jg
fstps
mov
int
push
xchg
or
sbbl
mov
arpl
pop
sti
mov
enter
mov
out
and
jo
sub
stos
orl
sbbb
call
stos
int
push
nop
in
push
pop
mov
lods
or
mov
mov
pop
popf
sub
adc
stos
psrlw
dec
mov
repz
add
jne
mov
fiaddl
xor
arpl
jae
in
xchg
cmpsl
push
mov
pop
jmp
adc
mov
sbb
scas
xor
sahf
push
ljmp
cmp
pop
bound
pop
push
ret
ljmp
xchg
jne
jb
xchg
jmp
mov
inc
pop
jnp
and
xchg
pusha
adc
mov
aaa
pop
mov
call
push
dec
xchg
mov
xchg
push
sti
scas
daa
sbb
cmp
std
cmp
into
out
or
xor
dec
xor
jmp
cmc
mov
push
jno
jnp
cs
lea
icebp
je
fs
in
jge
aas
pop
stos
nop
mov
lret
xchg
cmp
pop
pop
sub
lahf
mov
std
xchg
cwtl
cmpsl
cld
pusha
sbb
scas
pop
sub
cld
stc
push
and
jp
popa
or
xchg
pushf
sbb
popf
iret
ljmp
std
push
adc
fisttps
or
push
fs
jmp
sub
inc
movsl
arpl
testl
adc
adc
das
push
jl
repz
and
aaa
mov
aaa
jae
cmp
dec
adc
mov
scas
fs
lret
in
pushf
jb
xchg
sbb
shl
js
jo
inc
sbb
pop
jecxz
lret
mov
adc
mov
mov
sar
mov
addr16
mov
pop
lea
jl
cmp
push
jmp
insb
aad
lods
pop
xchg
mov
dec
int
and
push
or
add
push
out
sbb
pop
dec
mov
movzwl
add
mov
inc
adc
xor
or
out
int3
clc
mov
pop
add
xor
jecxz
jbe
stos
lcall
push
es
sbb
shlb
ffreep
clts
mov
js
testl
jb
mov
jae
pop
mov
dec
and
test
add
lods
lret
inc
push
push
push
cmp
xor
pusha
push
inc
push
in
cli
jmp
dec
push
outsb
inc
sub
jmp
dec
ret
xchg
inc
lods
pushl
xor
cmp
mov
mov
jno
ficomps
xchg
aam
inc
add
and
jnp
inc
dec
out
adc
inc
xchg
lahf
dec
dec
std
fs
push
test
and
clc
xchg
cmpb
and
sahf
mov
add
sub
jae
das
push
jecxz
inc
cmp
add
mov
jno
insl
mov
sbb
add
sub
xchg
mov
xchg
mov
data16
pop
iret
jl
iret
adc
int
push
out
push
fnstenv
add
adc
aas
lds
or
jmp
sbb
and
sbb
dec
inc
sbb
lret
mov
add
mov
xchg
xor
pop
fiaddl
sub
out
mov
push
cmp
filds
mov
hlt
adc
mov
add
lahf
jle
or
sub
sub
xchg
cli
or
inc
sub
sub
in
adc
jle
lcall
inc
sbb
test
mov
push
push
and
lret
push
inc
cmp
cld
mov
rclb
int
xor
jle
jno
mov
and
and
scas
xor
mov
mov
outsl
mov
das
and
outsl
out
xchg
xchg
ljmp
ret
lock
mov
xor
lock
jmp
fldt
mov
ror
jo
test
out
sub
jmp
pop
sbb
rolb
push
pushf
jge
test
sti
mov
mov
or
mov
fsubrp
int3
outsb
or
adc
test
adc
mov
and
add
pop
pop
sub
lahf
and
mov
ds
jl
pop
mov
pop
jnp
lret
sub
out
mov
xorb
pop
fiaddl
xor
or
or
shrl
sub
mov
add
enter
or
dec
and
jno
in
dec
std
test
lods
cmp
mov
leave
outsl
mov
lcall
les
adc
and
jecxz
jle
sti
cltd
aas
adc
andl
inc
js
loope
add
mov
movsl
xor
cwtl
pop
stos
pop
iretw
and
xchg
pusha
xchg
popa
pop
clc
outsl
arpl
cmp
test
sbb
jbe
lcall
rcll
mov
movsl
inc
int3
bound
popa
sbb
xor
mov
mov
btc
negb
jb
add
sbb
pushf
mov
and
fmulp
rorl
sbb
nopl
data16
out
lret
push
xchg
fdivs
popa
ja
and
pop
pop
push
jmp
jg
pop
or
test
mov
mov
mov
test
xchg
lods
mov
fidivs
lds
mov
lods
test
pop
stos
xchg
push
xor
ret
mov
dec
fmulp
mov
sub
addr16
cmp
pop
mov
pop
jmp
cmp
sub
or
ud0
push
test
inc
xor
mov
or
inc
mov
icebp
jne
or
push
adc
inc
fucomp
xor
xor
pushl
stos
or
xchg
test
mov
cld
sahf
ror
inc
movl
leave
or
call
lods
mov
dec
call
test
sbb
icebp
sub
inc
gs
iret
cltd
loope
xchg
and
xor
adc
mov
test
jg
or
test
test
dec
push
sbb
fdivl
dec
shll
cltd
je
jnp
imul
sub
sarb
mov
adc
out
mov
inc
imul
das
je
jl
in
imul
pop
jmp
pop
jns
mov
xchg
push
pop
ror
sub
xor
cmpsb
scas
pop
daa
xchg
xlat
in
cld
lds
cmp
aas
mov
popf
push
add
test
rclb
popa
subb
and
mov
cmp
out
popa
push
arpl
jnp
sub
inc
out
movq
xor
test
ret
pushf
dec
jle
in
cmp
je
or
pop
jne
mov
mov
fisubrs
les
cwtl
nop
mov
push
insl
dec
xor
sub
stos
stos
rcl
shrb
mov
jge
mov
mov
aam
mov
jge
orb
pop
and
sbb
xchg
push
mov
ss
xchg
stos
dec
xchg
dec
lcall
imul
mov
push
rclb
xorl
movsb
repz
xchg
inc
in
stos
jle
fcmovne
cltd
cmp
insb
fisubrl
mov
xchg
xchg
xchg
lods
cli
cmpsl
and
sub
clc
repnz
rolb
sti
imul
add
fcom
inc
inc
inc
xor
pop
adc
jnp
cwtl
jne
inc
mov
int3
mov
fwait
decl
mov
aam
xor
mov
cmp
mov
outsb
lahf
inc
mov
mov
stos
rclb
push
frstor
decl
jo
or
and
repnz
or
mov
icebp
pop
stos
mov
inc
les
pop
mov
out
popa
rcll
mov
sub
nop
jl
mov
loopne
mov
and
dec
rorl
lcall
enter
pop
lods
sti
lret
iret
ret
rorl
pop
mov
stc
mov
and
mov
mov
sbb
iret
pusha
mov
adc
jb
pop
aad
pop
jle
and
dec
aad
or
hlt
enter
adc
das
sub
mov
mov
rol
stc
lahf
adc
dec
inc
jg
and
xchg
mov
sub
xchg
nop
dec
inc
mov
cmpsb
mov
mov
ret
loopne
sbb
popf
mov
jmp
mov
icebp
mov
lock
test
out
sub
xor
push
sub
arpl
call
sbb
loopne
or
mov
mov
fistpll
pop
push
call
out
int3
pop
mov
cmpsb
mov
popf
ja
cltd
cmpsb
mov
adc
loop
dec
lods
sbb
fs
iret
movsl
shlb
mov
call
xchg
pop
stc
aam
imul
xchg
dec
data16
iret
insb
std
dec
sbb
mov
neg
je
arpl
shll
notb
mov
adc
and
jne
pop
daa
call
fsubs
enter
mov
lahf
rclb
cld
addr16
or
push
lea
push
test
mov
repnz
pop
jl
scas
lds
push
in
xchg
movb
dec
push
fidivs
das
inc
xchg
or
cmpsb
fdivrl
adc
out
mov
and
adc
lock
outsl
aas
inc
push
loope
and
aaa
mov
test
inc
repz
fisttpll
mov
daa
mov
push
sub
pop
push
push
sbb
inc
mov
lcall
rolb
inc
and
lock
and
ja
dec
xlat
in
insb
or
push
iret
pop
mov
ret
inc
dec
loop
and
add
adc
mov
mov
es
mov
arpl
xchg
mov
mov
hlt
sbb
out
loopne
pop
out
int
add
scas
adc
imulb
inc
cmp
mov
cs
lods
mov
dec
scas
call
mov
mov
aas
and
lret
sub
xchg
mov
cmovg
shr
xchg
mov
jecxz
loopne
cmc
mov
and
adc
add
sbb
idiv
inc
ds
ret
in
fwait
arpl
or
enter
hlt
mov
add
in
mov
add
loopne
and
clc
es
lcall
jg
mov
push
jle
imul
or
lock
jne
movsl
orb
lea
mov
mov
mov
cmpl
cmpsb
lret
inc
cmpsb
xor
inc
mov
shr
and
inc
inc
bound
inc
add
scas
orl
and
jge
jo
jmp
cld
add
cmp
addr16
and
sbb
cmp
fs
mov
fsubs
into
into
push
int3
xor
xchg
out
cwtl
xchg
imul
ljmp
push
popf
xchg
sbb
loope
test
add
inc
loop
iret
popa
mov
lea
js
aaa
xlat
or
adc
and
int3
sub
lret
loop
mov
mov
lcall
dec
in
cmc
aad
fcmovb
sub
pop
xor
cmp
and
and
mov
lock
push
les
imul
pop
fsts
scas
cmovno
or
xchg
mov
and
pop
cmp
jge
int
mov
xchg
adc
in
xchg
popa
mov
sahf
mov
pop
xchg
push
clc
push
rcrb
cmp
push
aam
xchg
fsubrs
xchg
inc
in
mov
mov
cli
std
dec
pop
aas
mov
mov
sbb
inc
inc
xor
push
cwtl
lea
int
inc
or
test
mov
xor
mov
push
or
pop
outsb
adc
scas
pop
jo
or
out
push
dec
jg
in
iret
add
mov
dec
push
cmpsl
cltd
xor
or
fmuls
mov
dec
mov
add
test
jl
lahf
pop
inc
rcrb
mov
xchg
pop
jno
sbb
rorb
jnp
clc
cmp
pop
xor
ror
mov
addr16
ja
leave
adc
call
fld
sub
adc
test
xlat
test
fsub
inc
repnz
cmc
xor
popa
xchg
jbe
mov
imul
nop/reserved
jg
rolb
cmp
pop
test
mov
int
jg
jae
stc
shl
hlt
mov
bound
mov
lods
mov
adc
inc
cmc
push
sbb
cmpsl
mov
aad
aas
test
lcall
mov
cmpsb
loopne,pn
push
adc
jnp
xchg
jae
and
addl
enter
dec
in
cmp
xchg
cmp
outsb
jns
or
std
popf
pop
jbe
ss
sbb
push
bound
pop
add
aaa
fs
cmpsl
imul
mov
movsb
sti
repnz
mov
test
xchg
hlt
sub
mov
andb
jge
add
xchg
inc
pop
xchg
sti
dec
test
into
test
cltd
cmp
dec
add
inc
mov
xor
adc
ret
call
inc
xchg
and
js
dec
xchg
sbb
and
icebp
imulb
movsb
add
dec
mov
insb
jg
sub
loopne
jno
xchg
sar
pop
xchg
sub
xchg
fnsave
das
mov
loopne
wbinvd
or
movsb
ds
sub
das
test
pop
mov
shll
inc
push
cmpsl
inc
or
jns
int
fistpl
lcall
das
sub
xchg
dec
dec
test
inc
mov
jmp
inc
mov
ret
dec
stos
xchg
mov
inc
xor
cli
cs
sub
and
mov
outsb
adc
inc
and
cltd
pop
test
cmp
pop
fistl
sbb
inc
push
jmp
int
out
shlb
test
or
out
dec
xchg
mov
clc
dec
sbb
sarb
add
outsl
mov
xchg
test
mov
dec
inc
dec
setge
gs
push
mov
push
sub
shl
mov
subb
add
inc
neg
jns
test
fsubrp
dec
insb
sub
jmp
sub
je
mov
inc
cmp
in
ja
cwtl
mov
or
hlt
sbbl
xor
xor
cmc
ret
movsl
icebp
das
pop
out
adc
mov
xor
cmp
loop
loopne
mov
xor
sub
sub
mov
aam
xor
cmp
je
gs
dec
out
inc
or
leave
jmp
push
jo
out
pop
sub
sbbb
arpl
test
cmc
and
mov
mov
loopne
xchg
scas
aam
mov
mov
push
jns
dec
and
xchg
decb
popl
and
outsb
mov
addr16
or
mov
pop
mov
dec
out
das
test
insl
imul
mulb
mov
rorb
mov
or
insb
pop
sahf
mov
fxrstor
or
mov
popa
add
xor
out
lock
push
lock
jbe
mov
xor
sbb
sub
sub
push
std
lds
cld
cmpsb
pushf
neg
xor
sbb
mov
fwait
ret
shrb
pop
inc
mov
mov
rclb
loopne
or
cli
aaa
shlb
aad
lret
test
lock
lock
test
icebp
popl
sbb
aad
inc
mov
xchg
sbb
adc
jmp
outsl
outsl
das
jne
rcrb
cld
jmp
xchg
fildll
dec
push
push
sbb
jno
in
fcoms
adc
mov
mov
imul
aas
pushl
lock
xchg
int
lcall
adc
add
sub
addr16
and
xor
xchg
mov
cmp
out
adc
pop
sarl
add
mov
or
outsb
fisttpll
pushf
rcrl
lods
fldt
or
repnz
popa
loop
test
idivl
add
and
cmp
cmp
enter
mov
cmp
jg
adc
xchg
ds
out
insb
cmp
or
cli
mov
cmp
jbe
nop
xchg
dec
sti
mov
sub
jns
lods
add
jl
or
xchg
adc
pop
clc
xchg
xchg
je
mov
cmpsl
outsb
test
xor
in
enter
js
or
pop
inc
outsb
inc
cmp
cli
pop
out
and
mov
and
mov
movntq
sub
inc
leave
jg
jnp
push
xchg
ja
jne
and
push
mov
aaa
sbb
icebp
jge
test
mov
daa
mov
mov
jae
xorb
lret
mov
test
pop
rcll
outsl
sbb
mov
jl
dec
lret
xchg
sbb
cmp
out
sub
out
pop
sbb
fs
aaa
and
pop
jb
scas
sbb
fisttpll
aaa
inc
lcall
xor
test
xchg
outsb
into
shrb
mov
out
and
ret
sub
lods
int
add
or
add
pusha
xchg
mov
std
inc
lods
pop
mov
ja
mov
mov
push
or
mov
jmp
loope
aas
das
sbb
cmc
shrb
scas
aam
imul
xor
xchg
inc
das
lcall
mov
andl
hlt
jle
aaa
data16
popa
sbb
dec
xor
sbb
adc
push
or
pop
insb
test
pop
leave
jmp
loope
mov
mov
scas
push
cli
imul
cmpb
stc
shlb
dec
aam
mov
mov
dec
int
pop
inc
stos
fldz
outsb
mov
mov
daa
or
repz
fisubs
outsb
push
pop
lods
scas
dec
leave
sbb
mov
mov
push
push
xor
mov
push
inc
lock
in
cmp
xor
js
mov
sbb
je
push
sar
jl
jno
movb
repnz
xchg
jecxz
popa
jecxz
mov
cmp
jb
fisttpl
ror
push
rcrl
enter
in
nop
popf
outsb
add
cmpb
mov
xlat
jae
adc
push
xor
mov
sbb
push
mov
mov
inc
ret
outsb
das
int
mov
je
lret
inc
lods
jmp
push
js
mov
stos
jae
stc
pop
jo
imul
dec
cmp
mov
pusha
adc
shll
push
ret
xchg
sub
test
mov
push
pcmpgtd
pop
xchg
jb
fsub
xchg
daa
add
stc
pop
dec
daa
pop
adcl
jp
jb
scas
mov
sti
outsl
mov
sub
push
orl
leave
test
sub
jns
xchg
test
ss
adc
shll
xchg
xor
jecxz
cmp
mov
in
and
adc
pop
jnp
lds
jo
adc
inc
inc
adc
fcmovu
push
int
inc
cmc
adc
mov
mov
arpl
loop
or
xor
pop
je
push
mov
arpl
iret
push
mov
xor
psubusb
dec
popa
push
repz
int3
xorl
mov
xor
aaa
cmp
rep
repz
cwtl
inc
sbb
jae
jmp
mov
mov
test
roll
inc
dec
push
ret
sub
notl
dec
mov
add
ret
bound
imul
xlat
push
sub
push
inc
sarl
roll
or
int3
mov
cwtl
pop
ror
sbb
push
scas
pop
jge
xchg
dec
mov
arpl
out
dec
mov
mov
jl
sarb
cmp
inc
shll
lds
mov
push
sbb
sarl
scas
push
mov
ds
je
pop
cmp
adcl
mov
jb
jb
adc
int3
jb
add
arpl
sbb
lds
cmp
push
repnz
dec
or
jg
js
jl
pushw
iret
stos
scas
sti
out
mov
bound
mov
and
popa
add
mov
sub
sbb
dec
sarb
push
aad
adc
sti
mov
jnp
sub
test
inc
inc
orb
adc
xor
mov
dec
comiss
jecxz
imul
fcomp
js
xchg
mov
mov
jl
shrb
mov
or
xchg
andl
mov
and
cwtl
mov
into
cmp
outsl
repz
les
aad
scas
cmp
mov
movsb
lret
inc
mov
aas
jae
dec
push
ss
ret
dec
push
sbb
cmp
ja
outsl
add
aad
out
mov
mov
lret
int3
int3
xchg
mov
jle
fs
test
xor
inc
jo
mov
dec
or
mov
jns
fisubl
sub
fstpt
int3
xchg
insl
mov
pop
adc
inc
in
das
pop
mov
clc
inc
test
and
mov
and
out
lods
daa
push
lahf
sbb
or
scas
dec
leave
dec
nop
mov
aad
imul
out
push
or
rcll
stos
popf
ret
inc
mov
push
push
xchg
lret
mov
jo
das
sahf
xor
push
add
jb
cmp
scas
nop
call
lret
mov
sbb
insl
sbb
js
clc
pop
add
shlb
popa
add
push
ss
xor
pop
xor
enter
fcomi
das
push
lcall
mov
or
mov
popf
leave
adc
adc
dec
pop
imul
add
pop
xor
jle
xchg
adc
jle
jl
pop
int3
push
pop
and
idivb
sti
mov
jno
outsl
jle
add
in
mov
ret
jp
mov
pop
iret
jbe
mov
fsubl
cmp
in
push
sbb
cmp
or
movsl
mov
dec
fsts
scas
sbbb
out
pop
sbb
repnz
inc
cmp
sarl
lret
lahf
pop
add
lcall
xor
pop
pop
or
pop
das
or
ret
sub
test
in
dec
cs
sarl
sub
push
icebp
into
inc
jg
push
sbb
push
jecxz
mov
popf
dec
lea
inc
movsb
pop
inc
insl
mov
xchg
aad
mov
cmp
jb
pop
xchg
daa
scas
sub
adc
imul
mov
call
mov
dec
int
leave
hlt
scas
or
inc
scas
imul
divl
xor
out
dec
xorl
xorl
push
or
xchg
sbb
stc
pop
jle
insb
push
lea
push
xor
cmpsl
jle
sahf
xor
cli
and
test
mov
xorl
and
sbb
xchg
push
test
je
or
inc
xchg
rorb
imull
dec
scas
dec
or
je
std
cmp
leave
aas
addb
push
mov
jg
iret
pop
adc
pmuludq
push
dec
sbb
xchg
cmp
cli
add
or
lods
dec
pushf
add
mov
and
adc
xchg
xchg
add
fbstp
and
push
push
jbe
sbb
mov
or
xor
ljmp
dec
mov
idiv
xchg
or
loope
cmpsb
stc
mov
add
fwait
ss
das
loop
or
int3
std
call
adc
cs
mov
xor
js
add
dec
lds
and
xchg
push
out
shrl
push
dec
xchg
mov
xchg
fldt
int3
dec
mov
jl
jg
or
into
jg
jne
fidivrs
shll
or
gs
jge
xor
outsb
shlb
scas
add
adc
popf
stc
es
adc
add
mov
outsb
xchg
mov
ljmp
sbb
xor
mov
dec
movsl
inc
pop
icebp
sbb
mov
adc
test
clc
in
fwait
jmp
cmp
sub
sub
adc
addr16
push
adc
lret
std
mov
pop
push
mov
or
pop
cmpsb
cmp
pop
pop
stc
dec
xchg
push
arpl
pop
sub
or
scas
in
fs
dec
jno
sub
jnp
out
inc
shll
mov
dec
push
andl
xchg
stos
in
or
stos
pop
xor
outsb
push
js
mov
or
cmp
xchg
ljmp
pop
test
mov
push
ss
mov
mov
fwait
pusha
pop
scas
inc
and
and
add
xor
loope
mul
mov
dec
sbb
push
icebp
bound
fstpl
mov
adcb
sti
xor
mov
and
out
enter
push
pop
jl
adc
jbe
mov
fucomi
cli
shl
clc
mov
pop
xlat
and
in
dec
das
loopne
xor
outsl
in
cmp
inc
test
outsb
lds
push
stos
push
jg
testb
leave
mov
in
insb
mov
mov
and
mov
dec
inc
pop
lret
subb
in
stos
sbb
sbb
inc
aaa
dec
mov
fs
enter
pop
xor
pop
jp
pushf
repz
sti
sub
xchg
pop
xor
fcoml
xor
shll
mov
cmc
stc
in
iret
cwtl
pop
sbb
mov
mov
dec
test
sub
push
lds
lret
loope
inc
cld
lods
not
outsl
jbe
push
mov
dec
adc
jp,pt
jge
adc
jp
and
dec
mov
add
mov
and
sti
in
dec
js
imul
add
or
ret
lret
aas
pusha
and
out
pop
dec
ficoml
mov
cld
lds
pop
adc
inc
cmc
cmp
pushf
sub
xchg
test
mov
pop
loope
out
das
fisubrl
arpl
outsl
dec
and
xchg
arpl
ljmp
add
cmpsb
push
adc
dec
sti
dec
inc
pop
lret
popf
popa
or
push
or
dec
loopne
jne
add
push
adc
mov
jg
mov
sbb
dec
les
fistl
xchg
lods
mov
adc
and
push
mov
fucomi
push
repz
mov
gs
add
add
inc
xchg
add
add
and
icebp
cmpsl
repz
mov
repnz
shlb
idivl
inc
dec
xor
dec
lret
mov
xchg
sub
shlb
fwait
imul
cmpsb
or
pop
adc
lahf
lods
lret
adc
iret
cmpsb
mov
push
testb
inc
jne
imul
hlt
jp
pop
xor
push
and
push
pop
test
dec
aas
lret
out
xchg
inc
inc
xor
sub
or
push
into
arpl
aas
loop
sub
test
push
jae
mov
jnp
insl
fs
xor
cmpsb
mov
andb
jp
sbb
sub
sub
popf
jnp
pushf
mov
cwtl
sub
mov
sbb
in
dec
stc
imul
inc
xchg
and
sub
jl
lret
int3
out
scas
or
push
mov
mov
jb
enter
popf
insb
fmuls
fisubs
or
imul
lock
mov
data16
das
fcomp
imul
loope
jmp
in
fdivrs
pushf
andb
or
push
insl
insb
es
pop
int
arpl
imul
and
or
fcom
sbb
dec
das
add
mov
repnz
jno
and
shlb
lock
les
and
xchg
add
leave
pusha
or
xchg
add
mov
orb
into
fisttpll
adc
aad
insl
mov
je
popa
mov
xor
fcmovnu
daa
andb
xor
xor
inc
enter
scas
test
mov
out
sbb
push
mov
mov
jne
jp
scas
incb
dec
mov
pushf
pusha
inc
dec
mov
mov
jmp
iret
xor
sbb
xor
mov
push
mov
or
cmp
fstpl
out
outsl
sub
adc
subl
aaa
push
sub
in
daa
out
pop
jnp
or
pusha
xor
fnstsw
jmp
aam
mulb
push
loop
arpl
inc
test
adc
rclb
xor
std
sbb
xor
jecxz
push
push
jno
ds
jg
outsl
mulb
inc
dec
mov
dec
stc
inc
das
cmp
add
sub
out
jl
sub
sbb
hlt
mov
lret
mov
mov
jbe
stc
imul
jbe
mov
mov
int
mov
into
fstpl
push
icebp
inc
out
xor
test
and
out
out
xor
or
cmpsl
pop
push
imul
dec
cltd
jl
sbb
dec
and
push
sub
xchg
push
xor
in
and
jle
icebp
jne
repz
or
test
loop
and
jne
popf
cmp
cmp
cmp
mov
inc
outsb
push
ja
adc
loop
out
pop
out
jno
in
adc
fwait
out
push
inc
sbb
lcall
nopl
dec
xor
inc
scas
push
adcb
frstor
insl
js
xchg
mov
nop
mov
lea
xor
adc
add
pop
dec
mov
dec
pop
shrb
js
movb
xor
jno
repz
xor
jle
aas
sub
repnz
rcrl
rorl
or
fs
leave
fisttps
sbb
pop
ret
rcr
lcall
aam
pop
inc
adc
and
lcall
adc
mov
popa
ret
loopne
dec
fisubrl
dec
std
mov
arpl
insl
lret
movsl
shlb
inc
dec
dec
xchg
inc
xchg
cmp
xchg
inc
jae
pop
add
xor
cs
mov
fidivl
push
shr
daa
fcoml
dec
mov
sbb
aaa
pop
icebp
mov
mov
sub
jno
std
idiv
in
popa
sbb
fsubs
add
rcr
pop
out
aam
cmp
mov
ror
mov
xchg
fmull
arpl
or
dec
cld
mov
or
fstpt
pop
insb
sbb
lret
inc
ficoml
test
pop
fpatan
popa
ret
xchg
mov
xchg
and
or
call
loope
rcl
cmp
shll
test
cmc
pop
cmp
adc
sub
loop
aam
push
inc
mov
negl
xchg
xchg
dec
xchg
sbb
inc
popf
test
stos
xor
mov
enter
and
pushf
sti
mov
cli
or
inc
sti
sbb
inc
pop
cmp
pop
fnstcw
mov
leave
shl
mov
xor
hlt
in
sarb
negb
pop
in
xchg
iret
jae
jns
fdivrs
lcall
fldl2e
cmp
adc
rol
aaa
test
sub
sub
mov
rorl
mov
adc
push
cwtl
bound
sbbb
and
push
pushf
and
push
daa
mov
xor
xchg
jbe
lock
inc
inc
and
testl
in
push
adc
arpl
loop
sbb
push
sub
imul
pop
pusha
aam
fldt
shlb
pop
jecxz
push
pop
push
out
cmp
testb
add
nop
sub
std
mov
xlat
inc
mov
clc
push
sub
xchg
mov
push
fstpt
adcb
mov
pushf
insl
cmpsb
ret
cmp
jge
mov
or
in
add
outsb
cmp
add
idivb
cmpsb
stc
imul
int
pop
jbe
mov
pop
mov
add
sub
xchg
bound
fwait
jno
push
rcrl
sub
fnstcw
js
int
mov
lods
cltd
pop
xchg
leave
push
fmuls
dec
sub
data16
ljmp
or
lods
dec
in
out
mov
js
inc
cmpsl
scas
addb
inc
xchg
add
int3
test
push
loopne
cmc
subb
and
and
jecxz
push
sti
inc
in
cltd
xor
push
pusha
pop
mov
stc
xchg
enter
int3
mov
inc
mov
inc
mov
loop
lods
xor
in
sbb
das
jns
cmp
outsb
lret
icebp
into
mov
faddl
inc
mov
inc
std
iret
lret
shlb
xchg
or
jo
jbe
mov
jno
push
cmc
das
test
or
mov
and
sub
inc
int3
mov
push
cmp
stc
sbb
mov
cld
jne
pop
loope
sub
cmpb
add
xchg
loope
mov
dec
xchg
in
jbe
dec
jp
jo
hlt
pop
pop
mov
cmpsb
pop
push
xlat
mov
js
adc
push
insb
subl
leave
out
or
mov
data16
jns
and
in
mov
int
pop
jno
cli
or
jp
push
jl
xor
inc
nop
and
mov
inc
cmp
push
sub
inc
loope
lea
sub
movsb
daa
fwait
in
xchg
stos
je
sub
imul
push
xor
out
cmpsb
dec
out
insl
mov
dec
mov
mov
jbe
sbb
sbb
or
adc
cmpsl
fs
mov
inc
sti
mov
popa
xor
add
push
in
pop
mov
lret
mov
in
movsb
inc
xchg
mov
inc
daa
aas
add
js
sbb
bound
les
mov
adcb
and
ja
cmp
sbb
jbe
xchg
xchg
sbb
sarb
in
mov
adc
fcos
cltd
jp
or
je
dec
jle
sbb
stos
gs
adc
fs
cmp
xchg
adc
bound
pushf
mov
clc
insl
pop
and
iret
inc
xor
xor
push
lcall
xchg
cmpsl
fwait
outsl
dec
subl
dec
sbb
adc
rorl
mov
add
cmp
sub
icebp
mov
ficomps
jbe
adc
or
aas
xchg
les
sub
mov
adc
das
imul
out
cmpsl
mov
out
add
push
fisttpll
cmp
insb
sub
inc
sub
cmpl
int
add
cmpsw
popa
push
adc
inc
ja
mov
insb
les
loopne
jae
popf
stc
mov
pop
lods
mov
adc
leave
jmp
rclb
mov
xchg
lret
dec
jg
pop
enter
in
insl
pop
sti
fsubs
adc
xor
out
and
addr16
add
pop
and
push
dec
leave
jmp
adc
insl
dec
lock
inc
orl
xorl
arpl
cmp
inc
push
fmull
adc
jg
cmpsb
es
addl
push
dec
outsl
fidivs
stos
mov
add
shr
repz
pop
loop
ja
sbb
idivb
fwait
xchg
call
dec
mov
xchg
ja
pop
sbb
pusha
fcomps
loopne
lea
clc
adc
je
shlb
jo
fcomp
insl
aad
mov
aaa
test
out
sub
xchg
call
jo
ret
push
inc
push
std
xor
dec
cmpsb
call
dec
ret
mov
mov
sub
insl
or
ja
pop
jnp
sub
pop
aaa
push
jbe
movsl
lods
mov
add
sbb
popf
dec
pop
out
int
sub
ljmp
push
fsubrs
push
mov
mov
and
and
add
fdivrs
mov
xor
xor
test
xor
es
add
inc
outsl
inc
mov
xlat
and
ret
int3
mov
xlat
push
aam
push
negb
dec
nop
push
add
cmp
hlt
adc
imul
mov
mov
push
and
cmc
sbb
add
cwtl
push
popa
aas
or
fidivrs
fsubrs
adc
fldenv
jl
pushf
xor
xchg
or
mov
push
lahf
sbb
jbe
jmp
mov
negb
imul
xchg
arpl
stos
movsl
fs
jo
dec
cli
xchg
mov
and
or
pop
gs
push
insb
pop
mov
in
jg
inc
outsl
bound
mov
mov
xchg
out
xchg
fwait
pop
adcb
xchg
push
push
fdivrs
inc
fisubrl
add
rol
and
cmp
xor
push
xchg
xlat
and
andb
xor
ja
cmp
inc
jge
jae
cmp
cmp
fsubl
mov
daa
cs
or
mov
push
xchg
jns
cwtl
inc
push
aad
pop
cmc
aaa
pop
iret
pop
cmpsl
mov
lds
and
dec
add
pop
xor
pusha
dec
iret
out
mov
jl
into
lea
das
push
fldenv
icebp
sti
fucomip
scas
mov
loop
or
hlt
imul
stos
jmp
dec
iret
xchg
ret
add
arpl
movsl
sbb
xor
idiv
stc
in
cli
notb
xor
pop
xor
xchg
pushl
mov
push
shr
ret
mov
mov
mov
dec
arpl
cmp
push
outsb
sbb
pop
das
in
push
scas
sbb
in
jle
cmpsb
loop
push
bound
int3
mov
sbb
inc
or
xor
das
cmpsl
aas
sbb
cld
hlt
fisubs
push
stc
and
mov
repz
jb
dec
pushf
popf
push
bound
push
jmp
mov
popw
fs
pop
loope
clc
aad
orl
out
or
xchg
dec
mov
out
jns
lret
jp
dec
mov
stos
cs
jbe
mov
and
and
lods
addr16
or
stc
ljmp
aaa
jg
sbb
push
icebp
sahf
in
testb
jb,pt
xor
push
popa
cmp
pop
arpl
mov
cmpl
add
mov
fwait
mov
adc
sub
ror
dec
mov
call
nop
xchg
adc
lods
mov
adc
lret
test
push
dec
cwtl
popf
fsubr
push
ret
enter
dec
cmpsl
das
inc
lock
xchg
loop
pop
inc
packuswb
cmp
fsubrs
sarb
int3
dec
adc
mov
es
mov
stos
sti
xlat
popf
inc
nop
repz
addr16
insb
insb
ja
adc
ror
add
out
inc
xchg
movsl
in
pop
das
push
inc
test
mov
aam
les
jne
in
or
in
rdtsc
mov
repz
jecxz
sbb
sub
mov
rolb
dec
adc
rcrb
test
cs
frstor
jecxz
adc
push
adc
inc
mov
jmp
dec
hlt
das
movsl
xor
lret
rcl
lret
iret
cmpsb
push
pop
loopne
push
lret
jnp
push
cmp
jae
mov
pop
lock
arpl
or
cld
lods
xlat
loope
test
adc
lock
jle
scas
push
inc
xchg
and
loopne
std
push
mov
xchg
in
scas
out
in
stos
jge
add
ret
add
mov
sub
pusha
mov
imul
jmp
mov
hlt
bound
sub
movsl
test
jp
mov
xor
adc
pusha
movsl
push
pop
xorl
das
or
mov
mov
cmp
out
cmp
inc
filds
mov
xchg
mov
mov
push
aad
ret
stc
cmp
rcl
push
loope
and
arpl
jno
push
mov
dec
icebp
mov
fsubrs
cmp
or
dec
imul
adc
in
mov
lea
jg
sub
stc
mov
dec
inc
push
mov
push
popf
inc
es
test
jbe
outsb
shrl
jle
adc
adc
adc
or
mov
es
and
cltd
xchg
test
ja
jl
and
mov
pop
repnz
add
das
sbb
fwait
ljmp
push
push
imul
ret
int
out
data16
pop
lds
ds
idivb
jmp
or
mov
mov
adc
xchg
dec
mov
or
sbb
mov
jg
cmc
add
lret
and
or
clc
out
mov
jmp
sbb
jmp
iret
sbb
adc
imul
cwtl
shrb
das
or
aaa
sub
outsl
mov
jo
inc
lds
mov
xor
sbb
pop
sub
push
mov
pop
push
test
and
xor
mov
xor
iret
jl
stc
xor
les
fdivrl
ret
jne
das
sbb
cld
clc
adc
push
add
and
sbb
pop
shll
pop
mov
mov
aad
xchg
das
jae
sarl
push
mov
orl
pop
sahf
mov
push
stc
mov
pop
sbb
lcall
mov
sbb
into
adc
mov
out
jmp
mov
les
mov
out
mov
mov
mov
mov
mov
popf
xlat
inc
xor
inc
xor
daa
dec
addr16
sub
ffreep
bound
or
out
pop
and
sti
inc
mov
mov
xor
mov
mov
cmp
insb
xchg
mov
and
clc
aaa
jb
and
sub
xor
fstpl
mov
loop
ja
push
sub
mov
jb
insb
pop
scas
and
in
pop
push
pop
xchg
cwtl
xchg
mov
dec
aam
mov
cmpsl
pusha
std
mov
xor
movsb
cmp
and
mov
hlt
test
cmp
mov
push
pop
mov
scas
ds
add
lcall
arpl
fiaddl
out
adc
pusha
pop
fwait
aad
or
cmp
xchg
mov
pop
mov
xor
lea
and
gs
jg
inc
mov
lds
in
mov
out
in
mov
mov
scas
mov
jle
ret
test
pop
jbe
pop
mov
out
mov
or
ja
mov
sub
rolb
sub
or
sbb
stc
out
mov
xor
leave
int
imul
cmp
pop
fcoms
or
negl
adc
mov
or
loope
pop
xchg
push
inc
dec
gs
nop
fisttpll
xor
push
data16
hlt
mov
idivb
mov
sbb
scas
out
das
leave
mov
dec
and
jb
lret
in
inc
and
sarb
sbb
lock
bound
mov
cli
fsubrs
pop
xchg
mov
fdivrl
xchg
loopew
cwtl
push
rcr
fstps
xchg
cli
sub
pop
shr
mov
mov
jmp
xor
arpl
sbb
push
xchg
add
sbb
rcr
stos
or
enter
enter
inc
aaa
push
push
loopne
insl
xchg
pop
sti
push
fidivrl
add
push
push
mov
pop
aam
les
mov
push
pop
movsl
psrlw
outsb
fstpl
inc
xchg
dec
aas
add
cmp
xchg
fstpt
sub
js
pop
lods
mov
or
mov
imul
outsl
jmp
adc
mov
ret
scas
loopne
xchg
jno
inc
aad
loop
pop
mov
decl
js
cld
stc
gs
insb
mov
adc
cltd
inc
xor
call
fiadds
out
in
test
push
push
lahf
jne
jp
pop
dec
out
xchg
push
sub
pop
sbb
and
shlb
sbb
push
outsb
cmpsl
ret
mov
lret
adc
ret
filds
sub
sbb
repnz
aas
mov
xchg
cmp
loope
ja
jnp
lret
aad
lahf
imul
cmc
iret
addb
cmpsb
xchg
js
cmpb
xchg
cld
cli
lret
pop
xchg
mov
dec
cmpsl
mov
mov
arpl
push
xor
insb
mov
loop
mov
lret
cmp
scas
into
xchg
scas
iret
sub
and
scas
movsl
cmpsb
shrl
icebp
adc
cmp
mov
ljmp
div
sti
cli
jno
andb
dec
pop
outsl
pop
movb
sub
jmp
adc
movsb
popf
sub
out
movsl
inc
jnp
fdivr
adc
lret
out
js
xor
jo
inc
cmp
push
pop
es
push
mov
inc
mov
jns
fistl
and
int
sub
std
lea
mov
inc
lret
mov
cmp
cmp
popf
popf
loop
shrl
andb
mov
clc
in
jp
repz
sbb
test
push
cmpsl
cwtl
stos
lods
cs
jnp
xchg
mov
hlt
pushf
inc
mov
jl
mov
xor
sbb
enter
aam
popf
add
xor
into
cltd
jns
lret
and
sahf
mov
stc
enter
inc
push
and
inc
test
sti
int
jmp
sbb
mov
pushf
adc
jno
in
pop
fmull
mov
mov
hlt
jo
add
add
cmp
jne
rcrb
aas
sub
dec
mov
shr
scas
out
mov
pop
jle
cmp
iret
rcrb
icebp
lods
cmpsb
add
repz
push
scas
mov
push
scas
iret
sbb
lret
adc
mov
inc
jecxz
or
out
stos
jbe,pt
pop
dec
mov
inc
jl
sbb
stc
arpl
out
or
je
roll
enter
test
cltd
and
or
std
adc
std
ficomps
movsb
adc
inc
mov
inc
out
sbbl
fcoms
subl
mov
push
or
pop
das
pop
mov
pop
stos
sbb
daa
fstpt
addl
aad
and
addr16
xchg
jbe
pop
xlat
sbb
xchg
out
jge
xlat
xchg
inc
adc
test
mov
call
xor
cmp
cmp
leave
pushf
xchg
mov
leave
push
loop
jno
push
add
fisubrl
xchg
or
scas
lods
pop
dec
or
mul
cs
push
xor
and
jg
mov
fcmovnb
cmp
rolb
inc
and
inc
and
add
jmp
ja
clc
mov
xchg
dec
test
xchg
lret
cltd
mov
mov
cli
repnz
shl
sbb
out
data16
jge
mov
pop
repz
ret
xor
rcl
xor
repz
aas
imul
pop
ds
push
cmpsl
jmp
adc
adc
in
shl
xor
cld
stos
pop
mov
dec
jnp
or
push
inc
or
xchg
popf
add
mov
pop
sbb
cltd
not
outsb
inc
lcall
test
mov
sub
lock
daa
xchg
cmp
push
test
mov
mov
addr16
xchg
rcrb
xor
inc
iret
ss
mov
outsb
push
mov
jmp
inc
xor
movsl
jmp
lock
jns
dec
jmp
jnp
cltd
pop
xor
push
lds
push
mov
sbb
sub
mov
out
arpl
jl
and
mov
add
out
js,pt
shlb
push
adc
dec
loopne
fwait
and
sbb
rcrl
scas
pop
lea
in
stos
dec
adc
lea
mov
mov
insb
mov
psubq
cmp
pushf
mov
repz
out
loopne
fidivs
jecxz
add
push
push
das
xchg
adc
xor
dec
lods
orl
dec
inc
in
repnz
dec
adc
popf
mov
adc
add
pop
jns
xor
std
jmp
sub
pushf
xor
es
fiaddl
aad
mov
addl
mov
cmpl
repnz
adc
sbb
cld
or
jle
cmp
test
sbb
leave
stos
nop
jge
mov
sti
not
and
in
negb
cmp
fistpll
fsubrs
push
testb
fadds
adc
test
jo
lea
stos
xchg
scas
dec
dec
cmp
dec
mov
dec
enter
pop
dec
jg
ret
pop
pop
cs
cmp
push
cmp
ret
dec
inc
add
cmp
jnp
imulb
inc
scas
push
push
pop
cmp
sti
lock
lcall
adc
lds
xchg
xchg
test
dec
lock
scas
jecxz
lds
shl
fwait
lahf
dec
jle
test
je
cmp
add
lods
pop
pop
mov
fldcw
aas
iret
push
inc
lds
fucom
pop
add
fwait
mov
movsl
adc
xor
xchg
aas
rorl
jo
fmull
xor
sbb
mov
inc
ffreep
jmp
ret
outsl
sbb
filds
mov
imul
jae
leave
mov
push
mov
pop
int3
aad
je
cltd
faddl
lea
adc
adc
lods
in
add
repz
js
inc
movsl
insl
enter
imul
les
ret
add
lret
mov
xchg
fsts
inc
aam
pop
mov
icebp
adc
and
into
adc
aaa
lahf
push
cld
add
mov
xor
xchg
fucomip
ss
stos
movsb
adc
std
mov
rorl
movsl
mov
imul
rolb
aas
mov
lds
inc
int
orl
jno
jg
outsl
xor
push
loopne
scas
add
insb
aaa
inc
out
jbe
jp
enter
imul
es
adcl
mov
xchg
leave
push
xchg
cltd
je
fwait
pop
aaa
cmc
sub
mov
push
cmp
and
mov
movsb
testl
inc
mov
and
push
mov
or
out
mov
inc
adc
mov
push
lock
push
pop
jns
sub
daa
adc
icebp
mov
mov
adc
jp
jge
pop
pop
xchg
add
std
push
push
lds
repz
popa
aad
lods
push
enter
movsl
xchg
fiadds
ret
fidivrl
dec
decb
cmpsl
xor
ss
mov
fnstenv
lret
scas
jmp
repnz
shrw
shr
and
push
popf
jae
lods
xchg
sti
lods
push
dec
add
hlt
xorb
out
lods
jl
cmpsl
sub
sub
ds
fsubs
sbb
bound
xchg
loopne
fsubrl
lods
in
and
push
fs
pop
loope
sub
mov
add
insb
in
stc
loopne
pop
lods
xor
test
cmp
pop
add
push
fldl
data16
mov
pop
icebp
xchg
jmp
inc
pop
add
ds
or
or
jle
cmp
xchg
jmp
inc
mov
add
mov
sub
pop
cmpsb
mov
fistpll
pop
leave
mov
fst
cmpb
pop
dec
loopne
pop
out
mov
cmp
fwait
in
inc
or
std
mov
arpl
test
inc
test
loop
fsts
enter
fstp
adc
repnz
jecxz
and
adc
mov
data16
or
and
mov
mov
ljmp
add
lret
stc
xor
inc
lret
fistps
and
mov
adc
cmc
out
sub
adc
adc
ret
jne
add
dec
pushf
test
push
lds
test
icebp
icebp
scas
jmp
ss
imul
pushf
fs
sahf
rcr
repnz
outsb
push
aas
into
adc
fiadds
sub
inc
cmp
pushl
cmp
jle
add
insl
adc
pop
jns
and
js
movsb
jmp
inc
mov
test
pop
gs
pop
pop
push
push
mov
mov
xor
mov
dec
hlt
or
mov
mov
test
mov
push
int3
sub
or
adc
aam
push
cmc
sub
in
out
cwtl
andl
jbe
jle
rclb
popa
adc
push
faddl
enter
in
add
pusha
jmp
add
mov
jne
jbe
cmp
daa
mov
push
push
sbb
pop
nop
insl
xchg
mov
and
add
pop
jne
idivl
popl
fs
xor
add
dec
test
xchg
pop
test
lods
inc
cmp
mov
pop
sarb
mov
cmc
push
aam
xor
jmp
cld
push
in
ds
mov
test
lcall
out
cmp
sub
mov
sbbl
xor
cmc
mov
pop
mov
jg
dec
sub
out
xchg
or
sbb
add
and
std
scas
push
inc
push
fstpl
inc
int3
inc
or
mov
mov
sbb
hlt
inc
enter
stos
xlat
in
insb
cmpsl
lods
push
inc
cld
jmp
mov
shrb
or
cmp
xchg
dec
mov
ljmp
stc
xlat
imul
and
push
cmp
mov
in
pop
pop
lods
in
int3
lret
mov
and
xchg
mull
mov
lahf
nop
es
js
mov
pop
out
and
sbb
stos
in
xchg
repz
imul
fadd
sub
sbb
mov
mov
addr16
xchg
inc
ljmp
movsb
test
popa
in
inc
lcall
adc
and
pop
dec
setnp
mov
dec
inc
int
xchg
iret
test
inc
push
mov
xchg
movsb
push
pop
xor
cmova
ljmp
cmpsl
mov
mov
add
jge
mov
dec
cmp
lods
jae
add
cmp
adc
aad
insl
or
aas
lock
sbb
insl
scas
cmp
jnp
push
in
push
sbb
pusha
sbb
in
int3
or
hlt
pop
add
sbb
cmp
aas
sbb
addr16
push
mov
push
insb
divb
mov
addb
stos
leave
pusha
or
rclb
cmp
out
popf
loopne
add
add
xchg
outsl
cli
add
shrb
fst
sub
inc
add
pop
xchg
lcall
xor
fwait
xchg
and
jbe
loope
mov
sub
adc
push
inc
int
fists
gs
fs
insl
and
pop
aaa
xlat
sbb
push
or
sub
inc
cwtl
adc
cmc
jp
push
xor
cmpsl
repnz
ret
xchg
sti
pop
inc
add
adc
ret
xlat
jl
out
xor
mov
es
stos
pop
lahf
push
stc
les
insb
cmp
sti
or
orl
jl
pop
rcll
outsl
icebp
int3
inc
out
test
jmp
mov
int
out
pop
ja
test
inc
testb
les
or
or
xor
xor
int
pop
mov
mov
push
xchg
dec
insl
xchg
repz
adc
insb
jle,pn
std
jbe
pop
cmp
mov
adc
arpl
ss
popa
test
dec
jnp
pop
mov
mov
out
loopne
out
mov
mov
into
pop
push
lret
in
push
xchg
xor
movsl
hlt
ja
push
insl
fnstcw
and
xchg
mov
inc
cmp
frstor
push
fmull
stos
mov
cs
movl
dec
outsl
pusha
mov
push
pop
push
inc
xor
sub
xor
push
push
inc
dec
clc
daa
lret
or
fisttpl
inc
or
xlat
loop
jbe
stos
xor
clc
lds
imul
ret
mov
mov
jmp
xchg
cmp
test
sahf
adc
push
push
notl
inc
pop
jp
mov
out
scas
push
sbb
sbb
mov
leave
das
lds
sub
lret
in
pop
lea
sahf
imul
xlat
mov
rcrl
nop
jns
push
sbb
in
xchg
inc
cmpb
loopne,pt
aas
xchg
add
call
xor
sti
adc
test
cmp
inc
or
sub
and
push
sbb
xchg
gs
mov
pop
pop
mov
jae
add
ja
push
shrl
orl
cmc
sbb
fcmovu
hlt
mov
ficoms
mov
add
xchg
pop
pop
in
jns
xlat
xchg
inc
jae
mov
inc
xor
xchg
aad
test
out
flds
mov
stos
mov
xchg
and
fs
mov
vpunpcklbw
jne
jp
loope
jle
dec
out
rcr
sub
pop
mov
int3
inc
xchg
jo
js
scas
and
aam
ret
mov
scas
das
pop
xor
lahf
ror
out
movsl
enter
or
sub
xchg
xchg
cwtl
pop
inc
shlb
mov
icebp
fmulp
insb
div
adc
js
dec
pop
jle
or
mov
mov
xor
call
dec
hlt
jno
cmpsl
xchg
xchg
pop
jmp
icebp
pop
ret
lahf
push
cmp
clc
ljmp
jae
aaa
push
neg
stos
in
test
cmp
test
lret
cwtl
inc
inc
cmp
jecxz
xchg
in
cltd
pop
popf
mov
mov
cmp
xchg
mov
sub
sarb
lods
shl
mov
bound
insb
test
xor
sarb
sub
out
mov
rcl
mov
xchg
sub
and
mov
movsb
sbb
stos
mov
xchg
aaa
gs
mov
adc
push
out
pop
sbb
ja
cmp
fisubs
add
and
jno
inc
or
and
mov
mov
jmp
sub
and
xchg
xchg
mov
sbb
stos
push
insb
leave
aas
add
fldl
leave
aaa
popf
xchg
dec
aaa
mov
test
out
fiadds
hlt
xchg
lock
outsl
frstor
pop
inc
dec
add
adc
mov
dec
pop
mov
gs
in
pop
rclb
call
or
cmp
jne
xor
mov
fbstp
dec
and
and
mov
jmp
sub
jne
adc
mov
inc
fmull
fldenv
mov
addr16
sub
pop
sub
imulb
int
mov
fiaddl
popl
fsubrp
and
dec
imul
shlb
inc
fcomps
movsbl
mov
rclb
int
ljmp
sub
adc
sbb
stos
inc
or
fimuls
into
jb
mov
jmp
inc
jns
out
mov
les
std
sahf
xor
mov
imul
jb
push
jge
js
mov
loope
insb
add
vpshlq
out
inc
jns
repnz
pushf
ficoms
shlb
mov
jbe
sub
pusha
cld
stos
jge
movb
add
or
into
ret
sbb
cmp
xchg
push
stos
ror
sub
les
jp
lret
in
or
test
mov
imul
fstl
mov
pop
and
xor
mov
lds
int3
imul
cli
mov
lcall
mov
das
ret
or
aas
or
mov
or
cmpsl
inc
adc
pop
idivl
mov
aad
lret
aam
xchg
in
push
jmp
lret
or
push
sahf
jo
sbb
je
xchg
movsb
mov
mov
xchg
movsl
adc
jle
pop
inc
pushl
and
pop
fs
and
mov
or
enter
cmp
icebp
lock
sub
mov
popa
jg
push
cmp
or
pop
outsl
cmp
aas
shlb
mov
shll
dec
ljmp
push
test
rcll
cli
adcl
ja
and
cmpb
add
pop
mov
lods
push
and
inc
stos
lock
pop
fstp
movsb
adc
push
aad
insb
hlt
xchg
push
xchg
mov
lahf
jmp
xchg
mov
sarb
cmp
mov
lock
jmp
sbb
je
xchg
ljmp
sbb
mov
popf
leave
popf
aam
add
dec
mov
dec
in
sub
outsl
push
or
cwtl
push
in
xchg
movsb
scas
sub
adc
and
add
in
rcr
push
pop
or
sbb
pop
pop
lods
mov
stc
xchg
imul
mov
gs
sbb
mov
or
fistpll
cmp
cmp
lret
movsb
in
pop
push
xchg
adc
loope
pop
push
cmc
je
xchg
cmp
popf
les
push
test
mov
or
in
call
loopne
xchg
xchg
and
adc
push
add
stos
cltd
daa
daa
cwtl
in
sahf
push
aam
popa
push
sub
int
shrb
push
xchg
jne
mov
inc
js
sub
or
mov
hlt
into
xchg
xchg
push
jae
push
std
stos
ficoml
and
mov
loop
xchg
inc
mov
cli
hlt
mov
adc
pop
and
lea
sub
cmp
popf
xor
clc
adc
and
orl
aaa
leave
ficoms
inc
sbb
daa
and
cmpsl
mov
dec
test
cwtl
sbb
xchg
gs
jl
inc
inc
popf
inc
fistpll
aaa
mov
dec
xor
lea
les
rclb
jbe
push
fimuls
into
cld
popa
sub
jo
mov
sar
leave
fisubrs
mov
xchg
push
and
aas
loopne
imul
mov
cs
mov
add
mov
sbb
sahf
jo
adc
iret
imul
aam
fsubr
cmpsb
ss
addr16
add
scas
jo
ret
repz
shrl
aas
mov
mov
das
cld
rclb
leave
jle
mov
and
push
fwait
in
and
pop
mov
ret
mov
mov
test
into
mov
sarb
inc
push
lods
daa
arpl
sbb
mov
fsubrl
shll
and
push
jp
pop
mov
insl
jne
aam
or
dec
cltd
dec
sbb
push
rorl
cmp
xor
mov
or
push
xchg
das
insl
inc
sbb
loop
sbb
fdivrs
hlt
xchg
int
pusha
dec
mov
xor
lea
pop
test
mov
pop
hlt
pop
rcrl
clc
mov
or
rclb
pop
nop
out
les
test
xchg
xlat
fidivrs
lea
outsl
ds
mov
ficomps
adc
dec
dec
push
sbb
add
scas
imul
insl
xor
xor
mov
pop
inc
and
xchg
je,pn
adc
test
push
aam
jbe
test
mov
cmp
enter
jmp
pop
cmovs
popa
ret
hlt
fdivp
repnz
jmp
add
add
loop
jno
mov
add
mov
push
sub
pop
cmpsb
call
sub
in
mov
cmp
push
mov
xchg
test
mov
mov
mov
sbb
mov
push
jl
jbe
inc
outsb
xor
js
mov
sbb
pop
shll
clc
add
icebp
xor
int
or
repz
sahf
or
xor
mov
scas
dec
mov
stc
push
cli
scas
sub
push
xchg
imul
sarl
stc
mov
mov
aam
jo
mov
adc
mov
dec
xchg
or
mov
rorb
pop
add
pop
inc
xor
imul
rcrb
pop
sub
lret
jbe
addl
jge
aam
jno
dec
xchg
loopne
inc
jecxz
mov
pop
push
jb
fdivr
cmpsl
mov
decl
fidivl
xorl
push
add
cmp
mov
xor
ljmp
imul
or
xchg
test
rorb
dec
and
cmp
and
and
pushf
sbb
hlt
xchg
flds
lahf
in
icebp
pop
lcall
mov
sahf
jo
pop
xchg
xchg
cmpsb
rcrl
mov
mov
hlt
sbb
sub
add
add
sbb
inc
sub
fisttpll
ret
xchg
inc
jmp
loopne
xor
mov
cli
jp
mov
mov
jno
push
mov
adc
jb
push
outsl
and
mov
popa
pop
xor
stos
mov
jne
cltd
arpl
mov
inc
jns
fcmovnu
add
sbb
mov
dec
sub
cwtl
jo
jno
jg
lahf
loope
daa
idiv
out
inc
jnp
inc
mov
push
mov
xchg
xor
lea
xchg
push
mov
jp
fidivs
ret
mov
cld
push
inc
addb
and
lret
cmp
cmpsb
or
fidivrs
fmull
mov
jne
push
dec
mov
pop
fs
cltd
pop
and
outsl
jae
mov
fcomps
fisubl
cld
lahf
test
imul
mov
arpl
in
decl
inc
mov
in
push
pop
fldt
inc
insl
test
lea
fnstcw
cli
mov
jge
stos
cmp
adc
clc
lcall
sub
pop
inc
push
stc
pop
jle
pop
lods
mov
mov
add
data16
jns
sbb
inc
dec
std
dec
mov
xorb
sbb
jg
ds
mov
sub
popa
into
mov
inc
sbb
pop
xchg
les
ss
mov
inc
sbb
add
dec
and
mov
xchg
sbb
dec
fdivl
jp
dec
lock
fxch
fmulp
jge
or
negb
adc
pusha
jl
add
inc
adc
cmp
fsub
jae
mov
xor
xorb
lods
push
pop
shlb
iret
arpl
xchg
sbb
and
jbe
rcl
inc
ss
mov
xchg
cmp
inc
ret
test
xor
cmp
dec
dec
xorb
cmp
mov
sbb
xchg
jg
pop
mov
jp
add
inc
sbb
pusha
mov
pop
arpl
sub
bound
adc
and
cmp
sub
test
cs
jg
jmp
ja
movsb
mov
xlat
xor
xchg
xor
out
sbb
sar
inc
addr16
dec
mov
stos
pop
cmp
std
mov
sbb
inc
loope
add
std
pop
scas
jno
sbb
addb
rclb
xchg
mov
lahf
movsb
mov
iret
ret
mov
and
clc
push
mov
pusha
xor
fmuls
cli
xor
mov
mov
jge
mov
pusha
mov
loopne
out
pop
mov
stos
cmp
dec
inc
in
inc
xchg
in
pusha
push
pop
imul
lret
pop
loope
lcall
aaa
inc
adc
inc
aas
das
lahf
nop
cmpsb
mov
insl
les
test
and
and
add
xor
inc
jbe
sbb
pop
pop
jge
push
jne
jp
mov
into
mov
js
insl
sahf
push
adc
or
outsl
push
sub
popa
jno
inc
pop
clc
aam
dec
cmp
stos
push
mov
pop
lret
push
retw
push
mov
mov
jmp
cmp
out
rorl
imul
je
jmp
mov
lcall
jl
mov
rorl
je
pusha
outsl
les
fstl
mov
call
or
xchg
mov
in
hlt
out
pusha
push
pop
insb
add
das
ficoml
pop
xor
jp
sub
adc
fimuls
pop
cmpsb
cld
sub
adc
mov
xlat
insl
out
adc
mov
stos
jns
pop
testb
fdivrl
xchg
jmp
rol
aad
inc
jl
cmp
lret
and
mov
jl
cmpsl
dec
sub
lcall
pop
pop
movsl
fwait
jo
push
adc
rorl
out
aas
pop
lret
sub
lods
fldenv
mov
and
cmpsl
int
sub
adc
dec
movq
sub
hlt
and
fidivs
mov
iret
mov
xchg
call
mov
fs
sarb
or
mov
push
add
nop
fisubl
xchg
xor
mov
sbb
xchg
mov
nop
cli
loopne
scas
xor
popf
rcl
inc
ficompl
out
in
mov
mov
std
mov
std
insb
adc
rcrb
mov
fdivrs
aaa
xchg
sti
cmp
add
lea
inc
xlat
cmp
incl
push
icebp
movsb
mov
pop
and
or
pop
cli
jno
sub
jae
jg
iret
xchg
jle
push
mov
in
pop
cmp
lret
in
xor
inc
mov
popf
dec
sub
push
mov
test
xchg
test
xor
cmp
roll
clc
mov
or
mov
ds
and
adc
fstpl
iret
jp
imul
xchg
push
enter
scas
outsl
sbb
shlb
xor
movsl
rcll
add
cmc
and
sub
shrl
fsubr
test
mov
aas
jmp
insl
scas
pop
pop
les
fildl
or
mov
in
adc
fwait
xlat
es
ror
pusha
pop
sub
push
inc
and
cmpsb
leave
in
lcall
pop
in
pop
push
dec
je
sub
push
das
pop
fldt
fs
test
inc
cmp
andb
mov
jae
hlt
ds
dec
cmpsl
cmp
sub
xchg
inc
jp
scas
cmpsl
cmpsb
dec
xor
push
xor
sbb
push
jb
pop
hlt
fcmovb
jo
adc
dec
add
in
jb
pop
stos
inc
pushf
sbb
jnp
and
pop
test
add
push
dec
mov
xchg
in
sub
popf
js
icebp
dec
push
mov
xor
mov
lret
lahf
not
mov
lcall
aas
pop
and
mov
push
pusha
pushf
cwtl
mov
rcrb
adc
lods
xchg
mov
mov
adc
mov
jg
mov
pop
push
add
loop
faddl
mov
sbb
sbb
jno
add
test
call
mov
in
xchg
dec
mov
and
cmpb
ljmp
lcall
mov
loopne
xor
push
cmp
push
or
mov
or
mov
mov
push
aas
sbb
das
imul
pop
adc
scas
daa
xchg
aas
sub
fucom
outsb
mov
sbb
andl
aas
inc
mov
std
pminsw
sbb
mov
lods
jmp
xor
or
push
jmp
cmc
mov
in
fstps
mov
rolb
clc
adc
push
pushl
inc
sub
ljmp
daa
xchg
scas
dec
jecxz
inc
mov
mov
inc
in
jno
inc
and
push
ffreep
lods
jle
xlat
sub
scas
iret
xchg
and
inc
in
jg
sbb
xchg
mov
fcos
scas
xchg
lods
arpl
cwtl
scas
xchg
jge
mov
push
fcompl
ja,pt
add
pop
push
mov
push
add
addl
movsb
mov
and
daa
popa
xchg
xchg
add
data16
push
mov
lds
lea
or
or
std
mov
mov
scas
push
jle
in
test
inc
cmp
setp
mov
iret
pusha
test
cmp
inc
loope
shll
out
sti
roll
push
ret
mov
pop
dec
push
cmpsl
cltd
mov
dec
fldcw
test
and
arpl
cmp
dec
test
pop
add
aas
mov
fisttps
or
or
outsb
pop
inc
sbb
adc
mov
int3
push
lods
lret
cmp
dec
jne
cmp
xchg
lds
and
lods
cmp
in
pop
cmpsb
cltd
int3
shl
mov
push
movsl
cmp
jns
dec
push
sbb
cmp
lock
sti
rcrl
xchg
mov
push
movsb
xchg
icebp
adc
scas
ds
inc
pop
repnz
sub
pop
lock
sbb
insb
or
into
or
or
push
movsb
lahf
or
mov
fisttpll
mov
sub
popa
sbb
int3
insb
jp
push
out
scas
adc
lret
mov
mov
mov
mov
xor
cmp
add
mov
jae
xor
jge
fcoml
stos
repnz
cmpsl
test
inc
lahf
movsb
mov
mov
lcall
pushf
mov
mov
dec
lods
jle
in
push
fmuls
xor
xor
call
mov
inc
sbb
loope
pop
xor
push
mov
popl
xlat
fwait
rcr
sub
mov
stos
cltd
mov
inc
icebp
jl
inc
jne
faddl
mov
add
popa
sbb
inc
ljmp
jecxz
nop
push
xchg
cmp
push
or
fsubr
movsb
push
cmp
inc
in
int3
dec
pop
or
mov
add
out
cmpsb
mov
ret
mov
int3
stos
sti
cs
sbb
enter
inc
inc
jmp
lahf
pop
mov
fsubs
mov
fwait
rcr
aaa
pop
ja
sbb
lods
testb
and
lea
xchg
arpl
test
or
ds
in
nop
test
int3
inc
stos
jb
cmp
adc
and
cmpsl
fiaddl
in
cltd
jo
xchg
fimuls
enter
xchg
add
push
fcos
mov
movsb
cltd
push
sti
xor
jne
adc
or
cmp
adc
shlb
iret
jne
jmp
addr16
cmp
dec
and
mov
sub
add
in
fstps
rcrl
insb
add
repz
mov
push
arpl
repnz
sar
xchg
cwtl
mov
jo
mov
pop
pop
lods
jnp
in
dec
dec
add
fistps
stos
cmp
fildl
sbb
or
push
xor
sbb
das
pop
popf
pop
xor
add
mov
xor
lcall
ret
ret
jmp
add
mov
imul
ljmp
mov
pop
shl
dec
inc
xor
sbb
or
mov
xor
je
mov
ret
scas
cmp
cli
jne
fucom
sub
mov
sar
mov
dec
clts
sbb
mov
pusha
fdivs
xor
fdivl
or
inc
pop
cmp
in
xor
fs
test
mov
pop
push
sahf
sbb
cmp
stos
movsb
sbb
jns
sub
mov
mov
mov
cmp
jg
jb
dec
addb
xchg
jp
fwait
dec
outsl
lret
mov
mov
cmpsl
popf
cmp
pop
lock
sub
cltd
das
jl
mov
xor
jp
popa
pop
and
dec
arpl
fnstenv
ljmp
lret
push
add
call
fdivrl
jmp
into
push
sbb
out
test
inc
xor
pop
cmpsb
dec
adc
and
loopne
push
loope
jno
jle
dec
out
add
xor
sub
loop
push
and
jecxz
mov
loopne
jnp
es
paddb
cltd
int3
test
fsubs
js
ficoml
sub
in
inc
into
arpl
loope
cmp
pop
adc
inc
lea
fcomps
imul
add
mov
pop
mov
cld
ja
pop
inc
lea
lock
ljmp
icebp
packssdw
cmp
ja
ds
adc
test
fisttpll
lds
aas
cmp
mov
movsb
dec
loope
dec
enter
jb
and
int3
sbb
add
pop
sub
repz
inc
mov
pusha
enter
icebp
push
jp
cmc
addr16
into
aas
mov
negb
outsl
xchg
jmp
pop
push
xor
ret
jo
lret
ja
sub
rcrl
push
ljmp
and
xchg
mov
imul
popf
pop
and
sub
or
sub
xlat
adc
stos
mov
popa
sub
fwait
lods
jne
ds
std
addr16
push
sbb
shll
mov
push
or
dec
nop
ret
dec
mov
adc
in
pop
jnp
das
stc
lock
out
dec
test
xchg
nop
mov
xchg
xor
add
sbb
xchg
adc
jb
jle
test
jnp
sbb
stos
int
in
push
push
push
add
xchg
loope
lahf
icebp
loop
mov
xchg
bndmov
mov
sub
enter
push
sub
jne
xchg
mov
push
aam
movsl
ret
mov
in
stos
adc
push
dec
ljmp
and
fcomps
mov
and
adc
mov
mov
cli
pop
pop
in
mov
mov
push
std
test
adc
popf
movsl
adc
out
push
data16
dec
cld
cmpsb
aaa
test
aam
inc
repnz
out
push
push
sbb
movsb
outsl
xchg
std
pop
adc
adcl
lock
adcb
int
push
fdivl
xlat
sbb
adc
ljmp
mov
daa
mov
mov
xchg
test
leave
inc
repz
iret
jne
add
out
ret
lea
gs
dec
std
into
enter
shrb
sbb
cmp
xchg
movl
jae
pushf
cmpl
test
lahf
pop
mov
es
pop
mov
adc
push
pop
push
add
cmp
mov
add
and
clc
and
push
push
xchg
cmp
mov
in
mov
xor
push
push
or
pop
xchg
dec
addr16
mov
in
ret
lcall
or
sbb
add
mov
cld
imul
jb
jb
xlat
out
pushf
mov
insl
in
pop
call
lock
xor
cmp
into
scas
pop
cmovg
push
jnp
into
mov
movsl
les
std
daa
sahf
test
or
scas
dec
jnp
mov
jb
or
mov
mulb
cmp
cmc
inc
and
idivb
mov
push
imulb
push
aad
mov
les
jbe
addl
or
outsl
push
psllw
arpl
mov
cmc
sbb
mov
test
mov
jmp
xchg
shr
cwtl
stos
and
cs
xor
pop
push
ret
cli
jbe
cs
shlb
cmp
pop
push
add
lods
lret
pop
pop
push
ljmp
test
out
jb
out
pusha
rorl
loop
sub
cmp
jle
pop
pop
jno
aad
in
xchg
cld
into
out
push
int
pop
pop
loope
cwtl
push
and
jmp
popa
loope
cli
push
pop
pop
add
fldt
inc
dec
xchg
imul
leave
outsb
imul
sti
lea
pop
jno
cmpsb
insl
mov
lcall
test
push
and
push
das
add
sub
inc
mov
adc
mov
mov
scas
shlb
inc
lock
pop
or
push
cld
in
and
loop
sbb
out
sbb
nop
jmp
or
mov
push
std
sti
sub
adc
je
push
add
mov
in
loope
pop
hlt
cli
nop
sub
pop
or
gs
nop
pop
sti
xchg
into
int3
scas
das
fidivl
test
push
mov
or
add
jg
shlb
insl
mov
ret
cltd
stos
cmp
test
jne
fs
test
mov
or
push
out
lds
push
int
sbb
inc
enter
fisubrl
push
jp
lds
mov
add
popa
push
pop
push
aam
cmpsl
out
leave
jbe
sbb
stos
push
add
add
mov
cmpsl
sbb
pop
mov
push
jnp
sbb
jp
mov
mov
xor
lret
inc
adc
mov
jbe
fldlg2
pop
jg
lods
inc
mov
or
sbb
fbld
xchg
or
cmpsb
pop
mov
int3
mov
out
jae
pop
and
fcoml
das
pop
fwait
sub
xchg
or
adc
jnp
pop
popf
aam
xchg
jl
mov
push
or
dec
je
repz
into
sti
imul
mov
jp,pn
xchg
je
les
dec
insl
push
jae
sbb
cmc
dec
ss
jae
xor
lea
fidivs
aas
hlt
ja
insb
std
addr16
sub
ljmp
ljmp
mov
or
movsb
sti
shlb
xchg
mov
push
push
dec
call
adc
dec
push
flds
enter
mov
aaa
ljmp
mov
push
divl
sbb
movsb
push
aad
add
dec
ret
enter
lock
or
pop
stos
mov
mov
cltd
cmp
ret
pop
setae
mov
adc
push
pop
inc
and
push
push
adc
movl
inc
loop
imul
or
or
outsb
shlb
mov
xor
jo
scas
iret
jp
pop
pop
pop
jmp
repnz
pop
les
push
and
daa
cmpsl
mov
lea
sub
out
sbb
dec
inc
adc
aam
add
push
sbb
xor
insl
bnd
jmp
pop
fwait
popl
inc
addr16
insb
push
xchg
jecxz
pusha
pop
mov
enter
pushf
jns
insb
xchg
mov
jecxz
leave
fidivs
fisubrs
lds
push
into
sbb
cmpl
mov
addr16
ja
mov
jg
mov
mov
mov
xchg
std
hlt
stc
outsb
mov
mov
mov
stos
mov
insb
dec
stos
in
ret
cmp
mov
xchg
call
mov
pop
or
js
mov
sub
push
call
sbb
hlt
pop
cwtl
fs
testl
mov
outsb
dec
sbb
push
jnp
sub
push
mov
sbb
jle
sbb
xchg
mov
or
aas
das
push
cmp
mov
or
out
dec
push
or
fildll
lock
sbb
mov
cwtl
gs
in
and
mov
mov
mov
mov
bound
xor
xchg
std
jae
xor
xor
xor
ljmp
je
ds
inc
dec
and
add
mov
sbb
enter
cmp
or
jns
pop
push
inc
in
outsl
jmp
sub
mov
pop
xor
in
add
enter
sbb
into
dec
data16
fisttps
pop
adcl
mov
inc
sbb
dec
pop
movsl
push
or
mov
and
pop
jnp
dec
pop
jae
mov
push
fsubl
push
mov
sub
ljmp
bswap
mov
ss
inc
and
dec
xchg
adcl
or
push
in
scas
mov
fstpt
push
addr16
rcrb
jnp
sbb
inc
mov
xchg
jp
test
xchg
cmp
aad
sub
push
or
stos
das
negl
int3
std
mov
dec
dec
xchg
dec
lods
mov
clc
sbb
mov
movsl
push
sti
adcl
dec
xabort
adc
pop
push
and
sub
mov
mov
xor
jge
jns
sbb
sbb
lcall
mov
data16
cmp
out
mov
popl
xor
mov
sub
fldenv
in
mov
adc
inc
insb
pop
xchg
fmulp
mov
ror
and
add
push
fsubr
push
inc
and
repnz
sbb
adc
in
pop
pop
int
and
in
iret
inc
int3
loope
push
les
or
adc
push
adc
and
dec
idivl
jne
mov
adc
das
and
in
adc
add
js
lods
mov
dec
jecxz
icebp
sarl
sbb
nop
cmp
subb
incl
sbb
xchg
mov
loopne
mov
and
push
cmc
jmp
and
and
aaa
pop
jbe
nop
cmp
mov
shl
or
leave
xor
jle
jecxz
daa
jno
stos
xchg
movsb
adc
cmp
outsl
mov
mov
adc
dec
int
shrl
outsb
ss
stc
aas
add
sahf
xchg
adc
imul
sbb
lods
bound
lods
jb
pop
jbe
mov
xchg
push
sub
stos
hlt
mov
in
rorb
lods
jbe
and
cmp
and
push
mov
nop
mov
push
jmp
cld
cmp
repz
shlb
jmp
pop
xchg
sbb
dec
lret
call
pusha
bound
lcall
js
cld
or
dec
scas
adc
int3
adc
push
or
cmc
loope
pop
test
dec
mov
xchg
dec
out
cld
adc
outsl
ljmp
jg
icebp
shrb
mov
xchg
adcb
test
sbb
lret
out
pop
pop
iret
push
fdivp
jns
sbbl
icebp
lcall
or
mov
sbb
add
lea
push
loope
pop
test
push
xchg
dec
and
dec
sti
sub
dec
js
shrb
loope
popf
and
es
cltd
jecxz
imul
lcall
rorl
and
lret
cwtl
sub
divl
lds
dec
lock
insb
push
add
or
mov
ds
fcomps
pop
jle
ret
xchg
dec
fwait
js
aaa
imulb
les
mov
movsb
push
mov
mov
sub
outsb
pushf
jmp
iret
mov
mov
jg
xchg
sbb
add
cld
xor
gs
mov
cs
mov
mov
mov
int3
pop
jb
das
in
xchg
cli
repnz
fnstenv
scas
inc
cmp
sarl
and
xchg
int
fs
bound
imul
or
loop
test
scas
fdivs
dec
lea
sbb
adc
sbb
push
xchg
xor
aaa
popf
and
cmpsl
xor
aaa
mov
lahf
out
jnp
sbb
pushf
call
imul
pop
inc
testl
les
push
loopne
shrl
stos
popa
fwait
mov
stc
cmc
jns
pushf
lods
inc
into
xor
and
mov
add
add
lret
imul
jbe
adcb
pop
mov
adc
daa
test
mov
mov
xorl
mov
fistps
ret
jge
pop
xor
sbb
sbb
lock
sub
xor
pop
xchg
fadd
imul
mov
xorb
xor
mov
adc
adc
dec
nop
addb
push
and
sbb
inc
add
or
mov
daa
dec
sub
arpl
jbe
push
movsl
hlt
cmp
je
push
ljmp
mov
jne
pop
repnz
out
ljmp
sub
dec
shrl
ret
cs
sbb
push
pop
and
cmp
and
loope
rcrb
fistps
jo
push
xchg
dec
jl
dec
test
test
mulb
in
pop
adc
pop
rol
scas
lahf
add
fs
insb
out
cmp
je
aad
cmc
dec
cli
mov
jns
mov
jnp
fildll
fcompl
add
icebp
mov
inc
insb
stos
cmpsl
scas
aas
negb
push
pop
repnz
mov
push
sub
leave
mov
sbb
jl
fcmovbe
int3
add
or
aas
add
pop
sub
in
xlat
dec
jnp
out
fs
xchg
inc
insb
lea
sub
pop
imul
sti
imul
push
nop
mov
inc
sub
lcall
fwait
jecxz
int
fadds
sbb
and
int3
mov
adc
stos
push
jle
ficomps
mov
dec
pusha
aam
add
inc
jno
aas
ja
inc
pop
fsubs
ds
mov
mov
push
nop
sub
int3
or
lods
lods
sub
mov
ret
cmc
dec
mov
out
mov
ljmp
lret
aas
shlb
jp
xor
test
adc
loope
rclb
insl
add
push
fdivrs
rolb
mov
mov
jl
xor
insb
out
sbbl
repz
in
sub
mov
mov
lock
arpl
mov
leave
out
or
xchg
and
cli
popf
inc
pop
or
lea
bound
icebp
arpl
lock
sahf
jmp
das
inc
xor
adc
jno
dec
stc
mov
sbb
xchg
leave
cmp
xchg
add
xchg
lods
popf
mov
aas
and
lahf
orb
and
scas
mov
mov
jg
mov
faddp
xchg
insb
lock
adcl
dec
pop
jp
jne
mov
rol
repz
je
mov
ljmp
pop
sahf
lea
cmp
bound
jo
dec
jae
inc
adc
jecxz
sub
adc
loop
cmp
addr16
xlat
mov
xor
xchg
push
popf
test
xchg
adc
mov
push
jmp
push
or
out
xlat
sub
cmpsl
shl
and
lahf
iret
adc
adc
fwait
xchg
lods
lock
add
popa
movsl
stos
push
lret
or
dec
ret
iret
in
sti
test
push
or
jg
jp
push
and
dec
out
setne
sub
in
sub
test
ljmp
xchg
sbb
shrl
mov
call
lock
fnstcw
cmp
adc
jp
cmc
pop
pop
andl
sbb
sub
push
test
mov
mov
aam
es
or
pop
je
scas
aaa
inc
dec
inc
popa
aad
push
loop
pop
scas
mov
ljmp
ror
xchg
cmpsl
iret
aad
lret
call
cmpsb
loope
adc
shll
or
xchg
cmp
pop
or
rcrl
push
enter
insl
or
jo
lahf
les
leave
movsb
xor
lret
scas
inc
clc
fsub
xchg
out
enter
sub
out
mov
cmp
das
cli
in
mov
mov
sbb
lret
fdivr
mov
mov
mov
js
and
mov
aad
in
out
cs
cmpsb
arpl
mov
xchg
xchg
ja
cmp
subl
lcall
sbb
shll
mov
mov
inc
mov
xor
in
pop
mov
gs
cmpb
mov
cltd
into
data16
aad
sbb
pop
push
xorb
mov
push
lods
xchg
jne
ljmp
pop
and
add
pop
dec
ja
xor
cbtw
fs
test
sub
jl
lds
ljmp
inc
and
lea
xor
std
cld
fnsave
xchg
pop
mov
push
es
std
ja
or
imul
mov
inc
push
shrb
or
ret
adc
dec
sub
imul
insb
xor
sahf
jno
dec
adc
sbb
fnstenv
xchg
std
inc
xor
push
imul
sti
jnp
and
fwait
cli
lret
rcl
in
inc
pop
nop
xor
idiv
inc
lock
je
and
stos
imul
pop
std
lods
loopne
and
inc
or
scas
pop
pop
pop
lea
aad
sub
rclb
shl
adc
ret
mov
jb
ljmp
and
pop
stos
adc
insb
por
aam
jbe
insl
daa
dec
dec
dec
mov
imul
lds
shll
repnz
and
test
movsl
les
inc
lock
adc
mov
pop
dec
mov
push
mov
gs
sub
pop
add
pusha
mov
pop
cmp
mov
push
iret
sub
test
fsubrs
xchg
jno
test
in
inc
dec
adc
movsl
cld
insb
or
popf
mov
adc
daa
or
mov
add
std
pop
mov
pop
and
movsl
jl
roll
adc
test
cmpsb
inc
sbb
pop
sbb
bound
daa
mov
mov
push
inc
repz
sahf
xor
dec
sbb
sbb
std
icebp
outsl
sub
dec
pushl
inc
mov
push
xor
xor
and
out
mov
inc
mov
leave
pop
fsubrl
mov
test
push
cmpsl
shl
push
test
jl
lock
cld
mov
xor
call
sub
push
ja
ja
xchg
popa
je
sub
inc
loopne
stc
and
int3
icebp
push
js
lock
movsb
int3
les
cli
xchg
js
enter
out
test
or
push
and
mov
mov
insl
lret
cmp
push
ljmp
in
in
repz
aas
in
xchg
jns
adc
mov
push
jle
rolb
rorl
stc
jbe
in
xchg
or
mov
popf
pusha
lds
mov
cmp
lds
and
xchg
pop
icebp
pop
push
and
sti
push
out
mov
ret
mov
mov
mov
ja
xor
test
adc
lods
dec
inc
pushf
out
int
lods
scas
lods
push
jg
push
gs
fs
je
mov
cld
fwait
push
je
icebp
mov
ds
leave
lds
and
xchg
add
lea
push
lahf
or
jmp
repnz
pop
pop
jmp
jbe
bound
jae
mov
sarb
inc
add
dec
cwtl
push
jecxz
imulb
test
out
pop
mov
lcall
mov
popa
outsl
leave
and
outsb
and
mov
pop
pop
adc
roll
pop
daa
push
imull
insl
sahf
adc
pop
arpl
imul
or
inc
dec
loopne
push
push
mov
adc
loope
push
dec
repnz
add
inc
cmpsb
scas
mov
cmp
inc
xchg
inc
dec
sbb
loop
cmp
jne
mov
jg
and
lahf
mov
cmp
movsl
hlt
pop
push
or
pop
sub
mov
mov
xor
pop
mov
push
push
push
pop
add
jns
inc
mov
daa
pop
sub
fistps
int3
mov
adc
gs
push
lret
lods
jge
pop
popf
pop
cmp
mov
les
pop
cmp
pushf
inc
adc
out
fidivrs
cli
lahf
and
fdivrp
nop
leave
xchg
bnd
cmpsl
xor
mov
jl
addr16
inc
adc
int
dec
mov
lret
sarb
mov
bound
xchg
sti
imull
lods
out
xchg
mov
sbb
cld
dec
push
jl
ret
jne
cmp
in
lods
js
out
lret
or
shrl
shll
int
out
addr16
scas
repnz
sahf
inc
jo
test
and
push
repnz
push
ret
adc
pop
sub
dec
adc
mov
out
adc
movsl
outsl
ljmp
cmp
ficomps
xor
mov
mov
dec
test
sub
inc
movsb
andb
adc
inc
cs
inc
mov
mov
xchg
add
je
mov
in
jbe
sbb
test
mov
jns
add
stos
sbb
add
shlb
ret
rcrl
loope
aas
psubsb
clc
hlt
cwtl
arpl
push
loope
inc
out
leave
aas
xor
sub
pushf
jae
sub
addl
or
cli
fs
and
mov
jo
stc
sub
loop
lret
aas
fldenv
cmpsb
scas
leave
fldt
xor
fiadds
and
adc
out
pop
jle
xor
insb
aas
sbb
pop
jmp
out
jne
jge
daa
fwait
sub
sahf
adc
sahf
push
lock
popf
adc
push
xchg
xchg
jnp
in
ss
repz
sub
scas
push
dec
je
rorl
pop
pop
or
sbb
jmp
and
add
adc
dec
test
fdivs
jb
dec
or
stos
lods
mov
sti
and
xchg
mov
push
lods
enter
jg
inc
ret
adc
add
pop
push
enter
sub
sub
sub
and
je
xor
inc
repnz
adc
cmp
insl
pop
ss
lcall
jb
inc
hlt
js
int3
insl
mov
aaa
lods
ss
daa
add
push
loopne
ja
aam
iret
mov
and
in
sub
cmpsl
pop
mov
mov
scas
daa
leave
sub
addl
push
xchg
and
imul
ds
jb
dec
cmpsl
rclb
bound
mov
push
pop
mov
inc
enter
mov
and
ss
ljmp
cmp
jecxz
jmp
mov
addb
mov
and
push
sbb
out
ficompl
pop
pop
adc
push
std
cmpsb
xchg
pusha
into
sbb
add
sbb
mov
push
and
icebp
incb
and
and
adc
cld
clc
lds
stc
ja
and
push
sbb
fucomp
rcll
fmuls
int
iret
in
insb
mov
mov
mov
push
shrb
push
std
push
jmp
dec
popf
lret
mov
lods
pop
pushl
addr16
test
push
sub
cmp
mov
xchg
call
sti
sbb
inc
mov
and
shrl
addr16
lret
enter
mov
cwtl
cmp
xchg
jecxz
inc
dec
mov
xchg
mov
into
int
xlat
jb
dec
inc
out
xchg
pusha
mov
iret
je
stc
jmp
jmp
dec
xchg
inc
jnp
sbb
and
or
cwtl
adc
or
nop
mov
xchg
add
arpl
inc
or
inc
push
cmp
sub
jp
inc
xchg
xor
shl
push
push
fdivrl
movsb
xchg
rorb
in
lods
push
xor
out
mov
ss
out
imul
mov
sub
inc
push
dec
dec
test
cli
mulb
cltd
jecxz
cli
jl
daa
inc
mov
push
dec
cmc
cmp
repz
mov
mov
ljmp
mov
mov
push
mov
mov
cmp
xorb
add
lahf
in
adc
in
not
cmp
gs
inc
in
stc
cmp
mov
and
aad
addr16
and
das
xchg
gs
mov
das
push
repz
popa
sbb
dec
mov
sub
iret
push
out
adc
sub
jl
test
adc
dec
adc
lret
lret
data16
jle
push
or
push
inc
sarb
push
in
inc
jg
int3
shl
cmp
mov
pop
cmp
jmp
cmc
sbb
cld
mov
lcall
into
inc
sbb
out
cmp
cmp
sarb
icebp
inc
hlt
repz
sbb
pop
scas
pop
jle
inc
dec
adc
xchg
jl
mov
push
dec
imul
test
push
insb
dec
les
cmc
cmc
rorb
test
add
cmp
test
and
sbb
movsl
inc
aaa
jne
sbb
clc
fstpt
subl
sahf
sub
mov
adc
add
jmp
jmp
dec
xor
or
mov
mov
rcrb
repnz
pop
das
xchg
sub
dec
outsb
adc
sub
cmp
cmc
jle,pt
jnp
or
addb
int3
jno
add
and
mov
fs
out
mov
enter
pop
dec
pop
aad
or
imul
jo
cmp
lds
int
lcall
scas
inc
mov
fmul
xchg
mov
xchg
dec
orb
sbb
ss
inc
xor
ss
mov
movsl
xor
cmpsb
lcall
outsb
dec
mov
mov
pop
pushf
test
int
bound
xor
adc
jmp
aas
iret
iret
shrb
nop
in
and
test
repnz
adc
in
mov
cmp
cwtl
mov
mov
mov
cmp
adc
sub
shlb
mov
or
ror
cli
hlt
mov
ret
fisubl
sahf
dec
shl
daa
push
jp
jns
cs
clc
lret
cld
jle
push
jbe
xchg
xlat
ret
and
jnp
jno
aam
and
flds
inc
jecxz,pt
movq
in
clc
lcall
or
or
divl
je
testb
rcll
int3
xchg
jns
and
cltd
cltd
pop
sbb
subl
dec
addr16
mov
and
ret
cld
outsl
movsl
out
inc
mov
fwait
pop
cmp
push
cmp
xchg
mov
iret
cmp
mov
cltd
or
loope
jo
movsl
test
dec
pop
pop
in
notl
adc
js
jo
cmp
pop
push
cmpl
repnz
leave
push
or
lahf
and
dec
cmpsl
lahf
rcrb
jae
pusha
add
inc
outsb
jg
fisubrl
scas
ljmp
adc
mov
out
out
ret
out
iret
mov
adc
lods
jl
das
inc
cmp
pop
mov
jp
push
cmp
out
xchg
lahf
repnz
xor
xorb
mov
fbld
xor
sti
mov
int3
pop
pxor
addl
loop
push
icebp
sub
sub
add
and
inc
ss
popa
bound
dec
test
dec
dec
gs
xor
inc
and
push
jge
lahf
dec
fwait
jge
sub
push
subb
cmp
popa
sub
leave
ret
jecxz
fisttpl
and
adc
repnz
xchg
dec
sti
or
in
lods
movsl
loope
sbb
pop
adc
je
int3
sub
adc
cmp
out
outsl
jb
mov
jg
xchg
hlt
imul
xor
shll
jae
mov
int
ffree
sahf
ds
movsl
leave
cmpsl
push
xchg
gs
pop
pop
es
aad
cmp
fs
push
aaa
int3
ss
gs
dec
cmp
and
es
cmp
out
test
stos
and
test
push
ljmp
outsl
or
repnz
inc
mov
in
mov
pop
aaa
loope
xchg
mov
mov
cmp
int
push
dec
lahf
adc
push
iret
jno
pop
sub
fwait
pop
in
aam
xlat
loopne
mov
jmp
mov
mov
xor
lahf
fadds
dec
mov
cmp
push
ljmp
in
jg
xchg
and
mov
or
ret
mov
add
cmp
jle
mov
int
dec
pop
rclb
in
in
insl
mov
push
out
cs
jno
add
adc
push
add
xchg
jo
mov
inc
test
outsb
es
xor
jmp
lcall
aaa
push
orb
jnp
mov
loope
ret
mov
and
jge
lahf
mov
out
xchg
and
imul
popf
loopne
in
test
aas
dec
pushf
flds
cli
fimull
scas
mov
xchg
mov
outsl
sbb
nop
mov
andl
lret
or
push
dec
sbb
repnz
dec
out
fdivrp
mov
sbb
es
mov
adc
insl
pushl
cmp
adc
imul
push
mov
loopne
notl
or
or
scas
es
mov
fsubrl
out
xlat
pop
or
sub
ljmp
scas
push
ret
sbb
arpl
jle
xlat
mov
mov
repnz
out
aam
xchg
sub
aam
xor
icebp
mov
lcall
lea
es
sub
mov
shlb
xor
and
cwtl
fwait
fwait
pop
or
mov
cmp
jae
add
xor
inc
lods
dec
cmp
sahf
xchg
sbb
mov
loop
adc
insb
fists
jle
fcompl
cmp
or
clc
dec
mov
dec
stos
fisttpll
std
mov
cmp
jns
subb
dec
fistps
lods
je
ss
fxch
mov
mov
xchg
popl
rorb
mov
ljmp
or
daa
lcall
std
add
daa
ja
cmp
fmulp
cmp
fstpt
mov
mov
jmp
xor
imul
or
cmp
push
sub
testl
rol
ds
push
lock
xchg
jmp
adc
pusha
push
clc
ret
and
and
cmpsl
pop
es
mov
mov
inc
xlat
loopne
imul
dec
rorl
mov
mov
sti
jns
fcmovbe
dec
stc
push
xor
inc
scas
in
lahf
ja
outsl
std
decl
rcrb
mov
inc
xor
pop
cmp
les
cli
sti
push
dec
pop
mov
cltd
testl
push
dec
dec
pop
xchg
inc
adc
repz
jp
icebp
rcll
inc
adc
jle
mov
addb
sub
orl
leave
mov
push
adc
or
sbb
dec
mov
call
xchg
ror
mov
cld
mov
pop
or
lss
mov
pop
cltd
mov
into
lcall
dec
shrb
jns
or
lods
out
dec
adc
imul
pop
inc
loopne
cmp
neg
jmp
mov
adc
inc
mov
int
ja
loopne
and
fs
sub
lods
gs
mov
adc
sbb
cmpsb
test
pop
daa
cwtl
sbb
fnsave
push
loopne
push
aaa
dec
les
addb
lcall
gs
gs
stc
inc
int
xchg
sbbl
insb
mov
repnz
mov
dec
mov
sarl
jno
sub
pop
lret
lods
fldt
fistps
push
xchg
dec
and
sub
dec
cld
dec
sub
in
enter
enter
loopne
lret
aad
fistps
xor
push
fldenv
stc
inc
std
push
fldt
mov
addb
popa
neg
gs
imul
and
or
xchg
out
lds
pop
lds
add
dec
insb
adc
lods
data16
push
ss
dec
and
sub
mov
cmp
adc
ret
fidivs
mov
mov
fstpt
data16
cmp
add
fistpl
mov
dec
idivb
popf
sbb
mov
jmp
test
cmp
fisttpl
bound
push
ret
and
xchg
int
pushf
std
cmp
push
je,pt
mov
xor
fwait
aas
or
mov
aas
jns
inc
popf
xor
hlt
mov
fcoml
pushf
pop
stos
jmp
and
sarl
aam
or
jbe
pop
fmul
or
outsl
mov
cmp
xor
lahf
js
and
sub
cltd
adc
and
mov
stos
cmpsb
or
sub
or
push
inc
test
jnp
pop
rcrl
mov
cli
jns
out
loope
ds
xor
xor
cltd
stos
cmpsl
inc
add
cwtl
dec
mov
dec
in
dec
or
mov
mov
and
jp
mov
sub
fldlg2
sarl
dec
insb
fs
scas
inc
mov
daa
ja
insl
inc
insl
lcall
xor
xchg
mov
ss
xchg
pop
fdivrs
jp
decb
or
mov
jle
and
jge
mov
daa
xchg
rolb
cmpl
dec
clc
out
es
js
mov
lcall
mov
jo
and
xchg
imul
ja
lahf
aam
out
popa
mov
cmp
push
roll
test
xchg
push
daa
sub
lods
test
pushf
pop
pushf
mov
sbb
je
mov
mov
inc
test
xor
sbb
fdivrl
jbe
hlt
dec
addb
dec
jg
cmc
movsb
dec
mov
dec
lds
push
cmp
mov
aaa
mov
cmp
fdivrl
mov
lcall
xor
in
dec
push
jge
jae
jg
xor
inc
dec
int
out
scas
sahf
daa
sub
int
test
mov
pop
dec
ficomps
push
loop
sbb
mov
shl
filds
add
pop
mov
int3
clc
pop
shlb
pusha
or
lods
aad
imulb
in
jmp
mov
cwtl
adc
mov
cmp
lahf
int3
pop
je
jne
out
mov
fbld
inc
push
xor
lods
js
fiaddl
fcmovnb
mov
shll
inc
push
push
add
sub
lahf
mov
cs
ds
je
push
mov
mov
out
pop
mov
sti
daa
fidivrl
call
insl
sbb
aam
xchg
sub
and
add
out
mov
sahf
adc
sub
adc
test
sbb
jmp
mov
inc
push
sti
lock
fwait
aam
add
into
sti
out
pop
das
int
outsl
xor
dec
sti
inc
inc
fiaddl
mov
mov
sub
arpl
xchg
or
jecxz
js
pop
inc
mov
mov
dec
adc
sub
popa
or
fcomp
inc
idivb
into
mov
mov
jns
pop
outsl
sar
aam
icebp
int3
loopne
xchg
jle
lock
pop
inc
cmc
cltd
sbb
xlat
icebp
cmp
cli
cmp
mov
imul
dec
shr
sub
les
mov
repnz
movsb
adc
sbb
ret
xchg
cli
addl
sub
aam
sub
mov
push
sbb
imul
lods
insl
sti
and
enter
sti
sbb
lahf
jb
movsl
sti
cmpsb
sti
pop
adc
stos
mov
cmc
mov
pop
clc
sbb
pushf
mov
xor
push
inc
int3
xor
cwtl
mov
cmpsl
xor
inc
fcoml
mov
add
inc
loopne
sub
dec
xor
rcr
call
dec
inc
lods
pop
fs
push
call
xchg
mov
test
xchg
cmc
mov
cmpsl
loope
add
dec
dec
push
push
int3
xchg
sahf
mov
imul
xchg
cltd
adc
mov
les
xchg
pop
out
enter
jle
dec
push
push
hlt
sub
push
das
and
in
xor
cmp
jecxz
mov
clc
ja
loop
mov
jns
jne
cmc
push
mov
jns
adc
cmp
pushf
sub
std
pop
je
pushf
leave
push
jbe
leave
push
out
ret
mov
std
stc
adc
mov
arpl
test
je
je
cmpl
lret
jle
cmp
insb
fs
or
mov
nop
sbb
cld
inc
inc
add
roll
adc
mov
push
sti
shr
xor
dec
popa
sahf
sub
sbbl
cmp
jbe
test
push
out
lcall
adc
jns
mov
adc
inc
add
int
test
rcrl
mov
mov
sbb
xor
jb
add
setns
data16
adc
xorl
ds
push
ljmp
push
in
sbb
mov
scas
cmp
adc
neg
jo
mov
xor
idivl
divl
hlt
mov
push
call
xlat
popf
push
jne
rorb
int3
lock
push
pop
xchg
cmc
push
xor
insl
push
jl
push
lret
lea
jmp
sbb
fcmove
cmpsb
imul
imul
or
pop
in
int
xchg
sahf
daa
mov
push
and
cmp
mov
push
lods
stc
lret
in
into
dec
mov
lods
iret
mov
imul
mov
mov
imulb
dec
mov
clc
cwtl
nop
fs
stc
rclb
addl
mov
cwtl
mov
cld
sbb
jb
push
lds
testb
add
mov
repz
mov
mov
mov
popa
and
mov
lods
xchg
push
jecxz
pop
adc
gs
adc
fsubrl
jecxz
xchg
lock
in
into
mov
and
js
mov
xchg
sbb
dec
push
inc
out
xchg
push
cmc
mov
es
adc
xchg
mov
repz
push
mov
test
jecxz
xchg
negl
adc
enter
pushf
push
adcb
dec
out
xor
test
je
push
mov
test
cli
jl
rcrl
test
and
movsl
sub
lahf
jnp
cmp
ret
pcmpeqd
call
gs
and
das
outsl
jbe
out
movsl
inc
lods
sahf
add
ret
imul
fdivr
inc
stos
cmp
mov
insb
shrb
push
xor
scas
loope
out
sub
std
mov
mov
xchg
sahf
hlt
xchg
and
sub
leave
scas
popl
movsl
push
xlat
cmp
mov
test
jns
nop
mov
mov
mov
xor
test
jnp
aad
jecxz
scas
lea
out
and
out
mov
sti
push
out
lret
mov
ja,pt
xchg
das
movsl
xorb
sbb
ds
adc
je
push
mov
cld
rcrl
push
inc
mov
js
jg
inc
sbb
jle
fwait
scas
cwtl
sub
mov
out
pop
sub
or
mov
fwait
push
pop
je
jmp
cli
pushf
mov
gs
lock
dec
xchg
jb
dec
lods
test
sub
pop
enter
jno
sbb
fcmovne
mov
sub
pop
aam
rolb
test
pop
inc
les
xchg
pop
mov
lret
jle
cmpsb
shlb
mul
rclb
rorl
cmpsl
xor
fwait
push
xor
cmp
jo
test
mov
lods
jns
xchg
xchg
xchg
sahf
jmp
gs
jae
and
pop
push
mov
cwtl
shrb
sbb
sbb
ljmp
clc
dec
in
rol
sarl
lret
and
or
jnp
ss
lcall
insb
xor
adc
cli
cwtl
sbb
mov
es
mov
rorb
aam
xchg
not
dec
jp
sbb
push
push
pushf
jp
ret
clc
cmp
xor
dec
dec
adc
mov
ss
lret
cmpsb
in
mov
xchg
cmpsb
xor
insb
and
cltd
dec
repz
lods
mov
ds
jmp
sub
push
je
adc
add
sub
ret
repz
std
dec
or
adc
jns
push
enter
pop
sti
lret
aaa
lret
cmp
mov
jbe
mov
testl
fwait
in
popa
push
fisttpll
fsub
mov
clc
popa
stos
jle
repz
subb
subl
inc
in
sub
or
mov
fstl
mov
je
mov
cltd
sub
into
shr
fnstcw
stos
hlt
sbb
add
fiaddl
mov
xor
out
mov
adc
push
leave
add
inc
pusha
sti
push
roll
mov
cs
add
inc
xor
jb
lds
arpl
cmc
xlat
lret
push
xchg
in
xchg
mov
jge
sbb
lock
push
roll
movsl
push
dec
imul
jo
push
xchg
jno
fldcw
cmp
in
pop
pop
les
rolb
ds
out
mov
xchg
and
mov
ljmp
xchg
pop
cmp
lds
jb
jmp
in
xor
nop
in
out
loop
jg
stc
rolb
inc
add
sub
in
fs
cli
jns
jle
out
out
rep
cltd
mov
nop
js
stos
adcb
pop
cmp
mov
repnz
inc
lea
lods
jb
or
lret
or
andb
push
xor
lahf
loop
fwait
popf
mov
jnp
inc
mov
outsl
pop
inc
aad
stos
mov
push
xchg
inc
sub
mov
test
sbb
mov
push
sahf
inc
cmp
pop
es
sahf
leave
cwtl
push
rcl
dec
mov
out
icebp
jo
fisttpll
test
and
lea
or
pop
in
loopne
bnd
mov
mov
xor
das
lahf
and
push
loope
inc
jge
xor
sub
push
ret
pop
mov
out
hlt
and
aad
pop
and
jg
popa
enter
adc
ret
in
movsb
test
js
pop
mov
adc
std
sbb
jno
lods
or
and
xor
lcall
sub
jb
jb
movsb
and
int
sbb
pop
and
xlat
fs
pop
pop
push
outsl
add
stos
xor
add
add
inc
fs
adc
daa
test
mov
nop
mov
pop
dec
pop
and
xor
loopne
repz
stos
jp
cs
adc
sti
fcoml
xchg
jb
insl
sub
xor
rcrb
and
fstl
mov
ret
into
stos
shr
mov
and
mov
add
cmpsl
jo
lahf
insl
push
loop
pop
es
adc
mov
or
cmc
or
imul
mov
repnz
clc
xchg
int
cmp
and
xchg
add
in
popa
push
pushf
inc
hlt
pop
lret
inc
sbb
lahf
sub
cmpsl
es
shlb
mov
loopne
dec
js
xchg
mov
jl
mov
mov
insb
das
mov
std
xor
pop
add
cwtl
scas
mov
and
push
push
mov
cltd
lret
inc
sub
cwtl
scas
int3
ret
sbb
mov
adc
mov
or
add
pop
add
je
shrl
out
push
movsl
xlat
xchg
push
xchg
lock
mov
test
and
lret
bnd
mov
aas
pop
test
std
pop
popf
pop
and
loop
mov
adc
enter
sbb
add
iret
pop
ljmp
mov
xor
or
mov
xor
aam
inc
sbb
das
data16
adc
repnz
add
stos
leave
dec
cli
xchg
aaa
pop
pop
mov
js
mov
jl
out
jb
icebp
mov
pop
mov
nop
rcrb
pop
test
arpl
aaa
and
xor
xchg
adc
mov
xchg
jbe
mov
shr
fsubl
rcrb
mov
sub
xlat
fstp
arpl
clc
test
sbb
xchg
rclb
sub
imul
or
sub
lahf
xor
enter
fs
ja
jecxz
push
lea
movsl
repz
inc
mov
mov
pop
push
jbe
adc
xlat
add
stc
xor
and
scas
sbb
loope
xor
enter
std
inc
insl
cli
sbb
dec
mov
nop
jbe
jmp
push
jae
test
xchg
iret
sub
stos
aad
aaa
sbb
ds
fstp
cmp
push
ret
pop
test
lea
insl
inc
test
jo
sbb
lds
icebp
jb
aad
out
jecxz
decb
adc
insb
xchg
dec
rcrb
lods
xchg
mov
cmpsl
addr16
cmp
jmp
xor
cltd
iret
jle
cwtl
pushf
aaa
push
inc
and
popa
xlat
repz
ret
push
cmp
mov
lds
cmc
cmp
sbb
inc
xor
dec
push
sbb
test
leave
mov
ret
dec
hlt
xchg
cmp
scas
pop
inc
imul
dec
lods
mov
xor
mov
fcoml
or
mov
lds
fwait
addr16
jnp
mov
jns
adc
fstps
call
or
test
out
data16
rdmsr
adc
fidivs
bound
adc
fisttpll
loopne
mov
and
scas
in
mov
xchg
ljmp
cmp
push
fcomi
lock
ds
mov
add
jno
mov
loope
and
and
fidivrs
rcl
cmp
push
xor
xchg
mov
lods
out
mov
out
or
push
mov
pop
pop
popa
jmp
sti
clc
popa
pop
jb
stos
int3
in
sub
mov
xlat
inc
pop
loop
mov
aad
mov
sbb
ds
scas
ret
fistpll
cli
inc
into
ja
movsl
jne
fsubr
mov
scas
mov
jg
mov
jbe
mov
pop
movsl
lds
movsl
cmp
cmc
xchg
push
repz
out
fistpl
lods
or
mov
pushf
push
pop
mov
nop
rorl
jle
lahf
sbb
jae
inc
ds
push
and
notb
pop
movsl
and
xchg
addb
mov
aam
push
scas
aad
push
jne
jo
aad
mov
add
lea
jnp
xchg
insl
ds
or
cmp
outsl
add
mov
mov
shll
mov
pusha
fisubs
cmp
and
imul
test
and
xor
jg
cmp
leave
in
shll
out
mov
imul
ja
gs
mov
xor
xchg
pop
add
jg
pop
xor
cmp
cld
je
scas
push
cmpsl
loopne
pop
stos
mov
pop
repz
in
mov
sbb
subb
mov
xchg
xchg
pop
push
xchg
mov
cltd
add
xor
cwtl
inc
xchg
mov
stc
adc
or
in
inc
sub
mov
nop/reserved
push
pop
es
jae
data16
sub
xor
xor
jmp
push
outsl
repnz
rolb
aam
in
adc
mov
push
stos
adc
add
mov
cmp
mov
ljmp
pop
fdivrs
push
or
bnd
mov
int3
mov
sbb
or
sub
and
lcall
xor
test
mov
fidivs
mov
test
int
dec
jg
dec
xchg
ss
imul
cmp
sti
mov
push
in
jmp
adc
add
cmc
std
out
out
lods
cmp
pop
xchg
adc
jl
mov
pop
xchg
in
int3
cmp
ljmp
outsl
lret
in
jl
nop
lods
cld
adc
rclb
dec
adc
stos
in
lea
adc
lret
fiadds
fdivl
jns
int3
sti
stos
aaa
pop
mov
mov
cmp
xor
loope
enter
out
in
push
std
insb
mov
lcall
fs
add
and
ljmp
sbb
rorl
jno
adc
xor
popf
push
popf
fisubs
lcall
xchg
add
jmp
jno
mov
loop
push
mov
dec
int3
and
add
mov
imul
ss
testb
or
cmp
sub
mov
jae
dec
loopne
pop
sub
fwait
sbb
add
cmpsb
aam
add
fs
dec
cmp
lret
pop
mov
stos
std
pop
push
mov
cld
lock
fisttpll
dec
dec
fsts
xchg
inc
js
mov
testb
addr16
mov
xchg
mov
cmp
inc
mov
pop
xchg
add
add
fnsave
loop
xchg
jbe
xor
out
aas
std
adc
call
pop
insb
add
jns
adc
ret
add
std
and
sub
cmp
xchg
mov
out
xor
aad
es
into
jg
sar
mov
inc
shll
inc
mov
dec
imul
sarb
push
cwtl
cmpsl
mov
out
pushf
xor
jnp
icebp
xchg
aas
xchg
out
mov
lret
mov
fs
push
imul
jge
cmpsl
fs
mov
add
mov
dec
and
jg
fimull
enter
idivl
into
add
sub
sahf
push
lods
jmp
mov
outsb
mov
inc
add
xchg
lods
pop
stos
sbb
es
ss
mov
mov
xchg
and
iret
and
cmpsl
xor
ficomps
inc
test
aam
xor
leave
std
fistpl
xor
loop
cmp
cmp
xor
or
out
loope
cmp
cmpsb
mov
pushf
xor
inc
aad
sbb
lcall
push
and
mov
out
jae
ret
or
pop
ret
out
mov
dec
out
xlat
mov
dec
mov
nop
pop
inc
das
loop
jg
ja
shlb
pop
ss
nop
arpl
pop
outsb
imul
testb
clc
or
test
lods
lods
negl
dec
shll
stos
aaa
data16
js
xor
pop
scas
lahf
mov
lds
andl
test
pop
or
cltd
inc
iret
push
mov
pop
nop
jno
mov
adc
fimull
shll
lret
sti
clc
and
and
pop
lods
in
pop
jb
add
cmp
and
inc
je
outsb
pop
jne
loopne
clc
mov
int
hlt
push
insl
push
jl
jo
aaa
mov
dec
xchg
push
mov
fbld
je
imul
lcall
pop
popa
imul
out
xchg
in
ret
dec
leave
xorb
loope
shlb
inc
mov
fisubl
inc
add
lods
sub
fsubs
nop
aad
icebp
cmpsl
hlt
addb
sarl
jb
push
hlt
loop
in
pop
mov
mov
fbstp
jl
xor
aas
sbb
mov
add
cs
je
xchg
fs
inc
jecxz
lea
loope
xor
ficomps
jmp
scas
mov
dec
nop
ret
jno
iret
lods
jle
aam
test
cli
mov
push
out
out
pushl
les
push
sbb
add
add
ret
jne
aad
mov
ss
jmp
adc
stos
push
xchg
pop
push
add
icebp
pop
imulb
add
sub
call
cmp
cmc
loope
ret
sbb
sub
aam
mov
in
lods
adc
pop
imul
int
or
cmp
push
sahf
push
mov
sbb
cmpsb
lods
xchg
into
jmp
out
mov
mov
psubsw
insb
push
mov
pusha
inc
into
aad
test
pop
sbb
pop
xchg
sti
dec
mov
lock
cld
dec
mov
loope
cmc
hlt
fldt
mov
lret
pushl
leave
sbb
adc
jo
xchg
xor
test
xchg
push
pop
sub
leave
pop
mov
out
cmp
lahf
jg
loopne
adc
icebp
dec
push
jl
add
add
outsl
fmull
sti
fmuls
or
xchg
mov
sub
lock
push
adc
dec
cli
adc
sub
andl
jb
sub
lret
xor
lock
loop
lods
mov
pushf
lock
movsl
loop
lahf
movsb
pop
leave
jns
mov
cmpsl
addr16
cld
adc
xchg
sub
negl
dec
pop
mov
leave
icebp
pop
adcl
ja
outsb
call
mov
mov
push
sub
push
xlat
and
test
cmp
and
aam
pop
mulb
roll
ja
sar
in
cmp
cmp
sub
mov
dec
dec
popf
jno
and
les
pushf
nop
cmp
test
xorb
push
ret
in
push
cmc
jns
or
adc
jb
fucomip
iret
ljmp
lcall
sub
inc
or
sbb
push
loopne
std
negb
pop
and
cmp
mov
push
mov
repz
cmpsl
jl
fsubrl
adc
inc
sbb
jb
icebp
out
sub
xor
mov
sub
mov
pop
cmp
mov
jl
adc
lahf
or
jle
dec
and
test
enter
popf
xchg
xlat
sbb
push
cmpsb
ftst
jno
add
insl
push
xchg
out
mov
sbbl
je
shll
adc
push
push
push
int3
push
and
cmc
mov
rcr
or
mov
test
inc
push
shrl
imul
ficompl
add
cmp
add
imul
adc
repz
gs
push
fidivrl
incl
ss
repz
push
push
lock
mov
dec
dec
mov
jno
pusha
dec
mov
adc
sbb
add
cmp
das
jmp
mov
mov
not
and
add
jmp
push
mov
and
pusha
or
or
shrl
xor
mov
add
or
dec
cmc
mov
rorl
sbbl
jl
repnz
scas
ljmp
push
jle
push
inc
xor
int3
pop
push
sub
cld
jnp
mov
cmpsl
jge
cmp
add
mov
pop
faddl
movsl
dec
cwtl
or
mov
inc
jns
sti
jbe
mov
lods
mov
in
test
popf
dec
out
mov
clc
sahf
sti
inc
push
lret
push
into
les
lret
iret
nop
add
jle
push
adc
cmp
mov
rorl
pop
or
mov
mov
or
inc
scas
push
aas
add
cmp
and
mov
jb
addl
adc
pop
std
test
daa
cmc
scas
adc
pop
sub
negb
ret
and
movsb
ss
mov
aam
rcll
fistpll
imul
xchg
stos
fwait
cmpsb
inc
pop
adc
mov
arpl
fnsave
leave
lock
push
dec
sbb
jne
mov
daa
cli
test
xlat
add
jns
jle
cltd
jne
pop
xchg
lret
test
ret
or
imulb
sub
js
rcr
enter
pop
pop
mov
ret
into
mov
repz
lds
int
or
dec
test
scas
mov
mov
sbb
insb
dec
lcall
jae
loop
mov
mov
stos
out
push
lods
int3
shl
mov
mov
sbb
fs
xor
jae
fsub
fisttps
cmpsb
pop
vpavgw
in
push
stos
pop
dec
push
add
cmp
adc
sbb
push
movsb
pop
inc
and
add
sahf
and
jmp
jnp
fwait
jle
loope
mov
jmp
in
add
aam
inc
mov
pop
or
nop
pop
cltd
divb
mov
inc
and
int
shll
lahf
enter
std
xchg
push
mov
test
scas
inc
cmc
xchg
rdmsr
mov
cmp
dec
mov
lock
test
arpl
mov
sti
sub
xchg
xor
arpl
hlt
sti
fstps
insl
sbb
jge
sbb
movsl
pop
adc
jnp
add
scas
xchg
dec
pop
call
rolb
mov
clc
loope
or
dec
sahf
xchg
ljmp
lcall
aaa
stc
xchg
push
mov
je
push
push
cmp
in
repnz
mov
stc
pop
pop
lret
aad
sub
ret
cmp
hlt
dec
sbb
push
mov
mov
in
mov
outsb
xchg
in
lock
rcl
dec
sahf
mov
mov
fwait
aaa
push
push
cmovg
dec
testl
push
sub
adc
xchg
shlb
jmp
sub
xchg
aam
lds
neg
and
clc
inc
shll
jmp
jle
jo
stc
ret
repz
sti
lret
je
mov
mov
int
xor
pop
mov
stos
test
xchg
fldcw
push
dec
fwait
adc
dec
xor
lods
xchg
push
int3
popa
cltd
icebp
cmpsl
jle
jnp
mov
xorb
inc
and
mov
xchg
stos
sbb
jg
cmp
into
sub
rcl
aam
mov
call
pop
push
pop
sbb
popf
in
lock
cli
xchg
lods
jp
dec
jo
mov
add
mov
mov
sub
shrl
sti
jbe
out
xor
dec
jle
mov
xlat
popf
aas
mov
sub
or
adc
inc
outsl
inc
xor
lock
int
mov
add
hlt
sub
je
sarl
fstpl
push
mov
loop
mov
jmp
jl
nop
test
inc
popf
arpl
negl
pop
jg
dec
lds
mov
cmp
movsl
jp
dec
mov
das
pop
mov
ret
fnstenv
mov
jo
jnp
fwait
push
aas
mov
and
rcl
cmpsl
mov
inc
mov
iret
cmp
cmc
repz
sub
out
cmpsb
pop
cs
pop
test
shrb
test
incb
sbb
sti
mov
sbb
sub
push
or
push
push
inc
pop
cld
fs
jl
xchg
jne
push
fs
sbb
mov
mov
push
jnp
icebp
ljmp
fsubs
jnp
or
gs
xor
pop
cmp
repz
out
xchg
jnp
pop
mov
xchg
mov
stos
push
xchg
and
pop
inc
rolb
aam
loope
nop
ja
fnstcw
fistpl
push
mov
pop
xor
ja
pop
addr16
js
std
add
in
loop
and
out
shll
jbe
adc
adc
or
adc
pushf
hlt
mov
mov
rclb
in
sbbl
pop
inc
and
pextrw
jno
inc
xor
dec
cmpsb
adc
lahf
jae
sub
xor
inc
into
mov
sub
cmp
popa
mov
or
push
jo
sbb
cltd
mov
push
cwtl
dec
int3
pop
and
arpl
mov
lfs
insb
sbb
aad
fmull
mov
sub
mov
enter
loope
or
insl
enter
pop
scas
pop
das
mov
dec
dec
out
xchg
into
mov
mov
out
cmpsb
push
incb
sbb
inc
add
lods
aad
out
fldenv
inc
push
loop
pop
mov
dec
loop
cmpsl
and
clc
mov
xchg
adc
pop
jg
mov
mov
mov
pop
popa
enter
mov
leave
in
lock
jns
push
lcall
and
mov
jb
push
imul
adc
cmpsl
push
add
popf
mov
js
test
adcl
mov
shll
or
outsl
imulb
fistps
sbb
pop
mov
xor
xchg
pusha
mov
loopne
xor
cld
or
loope
lcall
push
push
xor
mov
gs
pushf
fstl
data16
push
in
dec
popa
lock
mov
jns
out
jle
cmp
sub
dec
je
pop
adc
shll
cmc
jns
mov
es
add
iret
call
sub
and
pop
lods
jbe
pop
hlt
jb
pop
movsl
or
je
sbb
and
mov
ret
sbb
inc
in
call
in
in
sbb
xlat
ss
lahf
aad
sub
inc
pop
or
loop
jnp
cwtl
in
mov
ret
adc
fmul
adc
aad
fwait
xchg
dec
mov
xor
pop
cmpsb
flds
adc
push
add
mov
sbb
xchg
inc
setg
add
adcl
sbbl
mov
xchg
pop
adc
pop
sahf
or
dec
fidivl
mov
mov
clc
and
stos
in
pop
lcall
shrl
xor
dec
pop
xchg
and
jp
cmpsb
pop
fcmovnbe
aaa
es
pop
mov
pop
pop
lea
daa
sarb
add
pop
mov
sbb
loopne
inc
sbb
ds
aas
movsl
adc
mov
lcall
shll
bound
iret
sub
call
sub
outsl
movsl
int
inc
push
cmc
enter
ljmp
xchg
in
in
in
xor
or
dec
jo
jns
lret
in
cmp
and
sarl
in
test
inc
push
dec
test
not
fisttps
xchg
jl
in
in
call
inc
loopne
mov
push
adc
sbb
and
sbb
fs
jp
jno
cmp
enter
xor
sti
mov
pusha
cmp
mov
xchg
jle
mov
push
pop
sbb
adc
loop
mov
push
or
addr16
or
jp
and
and
sub
xchg
ret
out
pop
repnz
push
fistps
lds
ret
ret
pusha
neg
repz
addr16
xchg
shl
inc
leave
mov
sahf
mov
push
nop
imul
out
add
roll
adc
outsl
dec
mov
repz
push
and
jge
addb
dec
adc
mov
inc
cmp
fdivrs
add
testb
icebp
pushf
mov
ret
rcrl
jmp
xor
inc
ret
outsb
inc
fmul
pop
cmp
subb
loop
pop
xchg
aad
fistpl
cmpl
push
mov
test
cmp
push
mov
fwait
aaa
clc
lahf
jle
cs
ret
imul
or
push
adc
inc
inc
jo
in
sub
or
ret
jne
decb
push
mov
in
push
mov
add
add
cmp
pop
xor
adc
in
jne
lods
jecxz
xchg
je
addb
inc
in
sbb
lods
push
and
rcl
sub
pop
and
insb
repnz
mov
js
aaa
popf
dec
bswap
adc
out
andl
pop
push
xor
movsb
je
dec
lahf
or
sub
pop
imul
loopne
aad
cs
test
test
stc
int3
std
push
gs
xor
ret
mov
xor
mov
mov
call
bnd
inc
mov
mov
cmp
sbb
push
adc
xchg
cmp
mov
into
or
xlat
popa
sbb
lret
add
faddl
adc
jmp
or
and
insl
aad
pop
xor
in
xchg
cli
lret
dec
pop
sahf
push
push
daa
xor
lods
sbbl
loopne
sbb
jae
push
pop
sub
dec
adc
mov
jo
outsb
stos
mov
test
orb
mov
or
push
mov
stos
jne
jns
cwtl
je
lret
xchg
mov
adc
pop
and
cmp
in
js
mov
jo
dec
or
inc
rorl
jns
unpcklps
add
inc
sbb
xlat
int
add
addb
sub
pop
sub
fnstenv
loop
dec
test
fdivrs
loopne
xor
push
add
and
dec
push
popa
jle
adc
mov
add
adc
pop
and
jbe
out
les
pop
pop
das
bound
gs
xlat
inc
sub
mov
nop
imul
movsl
fildl
cltd
ss
push
sub
test
lods
xor
jmp
lahf
dec
pop
roll
sub
sbb
xchg
aad
fistpll
inc
xchg
ss
dec
mov
out
popa
dec
rcll
xchg
fadd
sbb
pusha
dec
rorl
fdivrs
mov
add
jge
jae
or
jo
jae
pop
add
xchg
push
dec
icebp
cwtl
xchg
cwtl
xor
inc
jmp
testl
sahf
mov
and
xor
les
popa
test
mov
and
gs
jmp
hlt
outsl
jl
push
dec
movsl
dec
cwtl
mov
and
dec
cwtl
loopne
mov
iret
shrl
fdivp
imul
or
test
mov
ret
mov
push
lock
divl
xchg
ret
sub
or
sti
xchg
mov
adc
cmpsb
jb
jle
out
stos
aad
test
int3
in
out
lret
adc
dec
push
mov
aad
stos
pop
insb
xor
arpl
xchg
adc
fiadds
pop
inc
or
sub
or
arpl
and
shl
addr16
or
inc
mov
cmp
and
stos
and
inc
inc
fmul
mov
pop
and
ror
mov
push
icebp
imul
shlb
xor
xor
jnp
gs
inc
js
fwait
add
sbb
cs
sub
or
fs
cltd
packsswb
ret
aad
pop
mov
add
rcl
addr16
sub
jecxz
aam
add
add
and
mov
pushf
xchg
xchg
cwtl
ljmp
sub
call
xor
sub
push
and
and
and
push
js
test
sub
clc
sub
adc
js
lock
xor
push
or
fimull
arpl
or
dec
xchg
je
mov
pop
mov
fsubl
push
stos
mov
test
mov
mov
jle
cmp
lds
pop
sahf
das
popa
xor
push
mov
mov
xor
cmp
cmp
inc
xor
and
hlt
push
insw
aam
movsl
movb
idiv
imul
pop
mov
xor
pop
mov
sbb
popf
aam
das
int
mov
shlb
hlt
jno
fiaddl
inc
pushf
sbb
add
inc
jmp
jae
push
xor
and
cld
mov
sub
push
std
cmpsb
push
sub
jmp
inc
aas
mov
pop
xchg
dec
push
outsb
fstps
sub
cmc
mov
stos
in
lcall
push
mov
loopne
je
fidivrl
stc
push
out
addr16
mov
sub
or
xchg
imul
mov
push
sbb
sahf
in
xor
andl
xchg
insl
dec
mov
mov
push
sbb
mov
loope
out
loop
mov
xlat
add
loop
xor
popf
push
cmpl
xor
cmp
pusha
inc
ficoms
cs
sarl
mov
insb
daa
mov
mov
push
pushf
insl
lret
fisubrl
jg
vshufps
and
add
xchg
les
mov
insl
add
divb
data16
sbb
sub
pop
movsl
xchg
repz
dec
test
inc
int
out
in
add
jns
fcomi
jmp
fimuls
sub
insb
mov
stos
lahf
sbb
adc
in
jecxz
sar
stc
cmp
jbe
aas
adc
repz
dec
lods
xor
sbb
stc
out
mov
sub
fdivs
mul
in
add
js
push
fistps
jg
repnz
dec
fstpt
lock
ljmp
jb
bound
cmp
or
fs
inc
or
lret
subl
and
lret
mov
ret
add
pop
jno
imul
es
inc
lret
xchg
scas
xchg
mov
sbb
jle
sbb
clc
sbb
push
xlat
jns
incb
lea
out
dec
inc
cmp
int
mov
imul
jecxz
paddusw
dec
xchg
and
sbb
push
lea
rcr
subb
in
sub
inc
pop
jno
cmpsl
add
xor
jae
leave
std
add
push
stos
daa
pop
fcmovnbe
push
inc
dec
adc
push
cs
stc
outsb
imulb
outsl
pop
bound
repz
clc
cmp
adc
testb
cmpsl
scas
mov
jo
je
cwtl
mov
movsl
pop
push
push
cmp
add
push
or
data16
pusha
addr16
sarb
jge
imul
shlb
sbb
or
in
mov
pusha
mov
mov
mov
mov
xor
dec
loope
sbb
loop
cmp
out
cmp
sub
bound
addl
sbb
int
mov
ret
and
mov
clc
jl
adc
mov
stc
inc
pop
cwtl
mov
pop
and
inc
jl
jecxz
adc
adc
add
cltd
add
jnp
push
xchg
xchg
mov
popa
cmp
out
sbb
insl
inc
inc
xchg
mov
js
dec
xchg
push
fsubl
loopne
xchg
testl
hlt
dec
dec
popf
lods
loopne
adc
adc
out
push
mov
es
mov
add
int3
fwait
int3
lcall
repnz
pop
lcall
inc
xchg
mov
ljmp
adc
mov
mov
inc
or
push
lods
push
pop
or
lret
cmpsl
cmp
or
or
jl
loope
adc
cmpsl
sub
outsb
inc
lds
in
es
and
repz
pop
or
jecxz
clc
fwait
pop
movhps
popf
jo
or
jecxz
daa
jno
push
dec
mov
sub
sub
or
add
aas
add
lods
sbb
mov
addb
add
movsl
push
xor
dec
add
xchg
fisubrl
daa
out
push
dec
lock
stos
xchg
jmp
out
mov
and
dec
push
xor
sbb
addr16
ja
leave
sahf
adc
fiadds
mov
inc
push
mov
mov
and
pop
imul
lret
xlat
sti
into
pop
pop
out
and
test
in
xlat
nop
call
sub
mov
jo
push
mov
fcoms
stos
mov
sbb
jle
and
mov
in
xor
std
pop
mov
sbb
inc
roll
cs
mov
mov
lock
mov
jbe
mov
jmp
adc
jo
iret
ljmp
sahf
fisttpl
loopne
pop
fcomps
inc
push
nop
lcall
int
aas
cmp
xchg
das
adc
or
push
adc
add
inc
jp
inc
push
or
sbb
xor
adc
jp
movl
mov
sbb
lret
jmp
xor
loop
loope
int3
mov
mov
loopne
aam
inc
lock
lods
xchg
jnp
mov
cltd
iret
mov
xchg
xor
jae
add
jbe
imul
and
sub
mov
ret
dec
aad
test
xchg
int3
sbb
jo
enter
in
outsb
jb
pop
adc
push
mov
ret
push
inc
jge
mul
pop
aas
xchg
sub
jbe
inc
pop
loop,pn
jne
ss
nop
jno,pt
mov
movsb
addr16
mov
inc
sub
jo
aas
shlb
sbb
mov
xchg
mov
jle
jmp
pop
pop
jae
adc
mov
lods
xor
dec
lret
push
outsl
or
mov
imul
hlt
pop
cmp
and
pop
mov
hlt
lods
iret
cmp
dec
add
inc
or
fcomip
fstpl
mov
leave
iret
adc
fiaddl
orl
cs
adc
xor
loop
je
or
lahf
pushf
jnp
xchg
lahf
and
outsl
sub
dec
hlt
loopne
jbe
call
addl
idivb
mov
mov
inc
ja
stc
int3
testl
out
mov
jo
int3
mov
lcall
dec
cmp
sbb
adc
pop
in
sbb
pop
jbe,pt
int3
and
in
andb
pop
mov
cltd
mov
movb
mov
scas
dec
or
mov
lock
mov
jne
xchg
cmp
aad
adc
test
mov
shrb
push
test
mov
outsb
push
mov
jmp
or
add
xor
xor
sbb
dec
lahf
xchg
push
or
mov
rcrb
mov
jne
xchg
push
push
add
sti
inc
lcall
loope
ljmp
push
movsb
add
and
loope
outsl
jle
loope
lcall
test
mov
push
in
aad
jmp
xor
sti
add
sbb
in
push
sarb
sbb
jecxz
inc
mov
pop
pop
pop
aam
jl
dec
pop
test
aas
sbb
jns
loop
or
repnz
aas
cwtl
out
sti
rolb
or
mov
dec
mov
stc
test
shlb
dec
ljmp
pop
xor
iret
push
jge
or
pop
pop
clc
gs
cmp
mov
inc
mov
bound
mov
lods
mov
enter
ret
divb
scas
pop
test
adc
pop
testl
adc
push
pushf
jmp
lods
addr16
jns
daa
loop
clc
sbb
test
roll
pop
xor
mov
jnp
sbb
pushl
push
push
pop
sbb
icebp
call
push
dec
and
add
mov
push
inc
dec
and
add
inc
cmp
faddp
xlat
jle
or
mov
lret
ja
inc
ds
gs
sbb
arpl
jnp
pop
mov
inc
mov
pop
or
mov
adc
fnstenv
pop
loopne
push
ficompl
pusha
dec
in
xchg
mov
cmp
mov
jl
inc
push
mov
es
xchg
insb
in
xchg
out
push
inc
inc
loop
loope
mov
and
lock
add
jmp
sbb
mov
inc
cmpb
jmp
xor
out
incl
dec
fcomi
fdivs
cmp
scas
and
jb
add
cmc
cld
cmp
aad
sub
shrb
int3
jns
xlat
jecxz
stos
loopne
or
lock
fwait
pusha
dec
adcb
mov
cmp
movl
jne
inc
xor
out
xchg
jns
pop
pop
mov
adc
or
mov
fisubs
push
in
dec
pushf
inc
sbb
movsb
push
push
fldenv
cmp
mov
int3
popa
in
sub
mov
mov
dec
fildl
mov
mov
jbe
out
pop
mov
cmp
jae
aas
xor
cmp
cltd
mov
jne
cmpsl
xor
sbb
lea
test
pusha
imul
lea
fdivl
and
leave
std
sbb
into
std
loopne
into
cwtl
push
dec
shl
xor
aaa
mov
es
sub
xchg
jno
sub
and
inc
lods
mov
pushf
push
or
icebp
sub
adc
sbb
pop
stc
pop
pop
in
sbb
xlat
adc
dec
pop
in
inc
cltd
and
mov
cmp
xchg
mov
js
adc
test
jae
sbb
mov
fnstcw
cmpsb
fwait
ljmp
insl
aam
push
push
pushf
push
push
and
jmp
lock
daa
leave
inc
loop
or
dec
and
mov
xor
mov
inc
hlt
mov
cmp
xor
pop
jp
inc
dec
popa
shrb
fimull
sub
or
fdivl
adc
xor
dec
mov
addr16
mov
imul
pushf
mov
adc
cwtl
pushf
fbld
dec
xchg
push
push
cmp
dec
cmp
mov
dec
clc
test
xchg
dec
or
add
mov
mov
aam
popf
imul
dec
adc
jae
ret
cmc
pop
push
out
inc
fstpt
adc
lret
mov
aad
mov
addr16
stos
ret
inc
cmp
fistpl
or
clc
add
pop
cwtl
movsl
sbb
addr16
repnz
jnp
add
xorb
out
and
jae
sarl
cmpb
jecxz
mov
mov
jg
jne
lds
fldenv
pop
mov
mov
sbb
jge
sbb
dec
ret
dec
pop
loopne
adc
divb
mov
fildl
jne
popa
mov
lods
jl
outsb
js
xchg
cltd
mov
push
mov
leave
outsl
xor
sbb
push
lock
aaa
push
or
roll
sbb
fidivs
push
or
sbb
push
jge
sbb
adc
cmp
shl
sub
iret
jg
out
scas
jl
cld
mov
sub
outsl
xchg
push
mov
jmp
adc
mov
xorb
icebp
sbb
out
mov
lea
ret
std
repz
in
in
lret
mov
fistpll
das
inc
stos
movsb
call
fs
sbb
pop
test
adc
adc
pop
shll
rclb
adc
cltd
mov
cmp
testl
aad
ja
addl
or
add
jnp
int
popa
xor
pop
out
movsb
je
add
mov
outsb
push
mov
jl
sbb
push
vmovapd
js
es
ret
fstps
inc
push
je
out
outsb
sbb
add
sbb
rcr
cmc
sbb
movsl
xchg
mov
jne
aad
add
out
cmp
adc
pop
test
xor
pop
cmp
inc
cmp
lahf
push
mov
xchg
outsb
dec
dec
add
lahf
jo
xchg
xchg
pop
jns
xchg
pop
or
mov
pop
mov
jbe
adc
ds
ficompl
scas
es
je
ret
cltd
xor
push
cltd
frstor
add
popf
fwait
mov
inc
test
and
je
push
sub
jle
pop
push
stos
mov
add
jge
mov
mov
aaa
add
popf
pusha
into
dec
xor
movsb
or
xor
or
hlt
std
aaa
inc
shrl
push
sub
mov
xchg
pop
jle
in
inc
fcoms
pop
inc
mov
ljmp
push
add
rol
fwait
lods
xchg
fistpll
xor
push
inc
es
xchg
sbb
jbe
jb
fldcw
stc
cltd
xchg
mov
hlt
adc
add
or
cmp
mov
xchg
push
adc
std
mov
lds
sub
dec
iret
or
js
outsb
stc
scas
fistpll
sub
imul
test
sbb
mov
pop
sahf
xor
es
imul
daa
stos
sti
xchg
inc
mov
in
clc
mov
cmp
ljmp
data16
cmp
mov
repz
loop
popf
xor
xchg
xor
insl
sbb
mov
add
cwtl
std
call
scas
jecxz
inc
lods
enter
jno
inc
dec
pop
nop
mov
push
dec
sbb
and
push
xchg
rcll
and
push
xchg
mov
sub
pop
shll
inc
rorb
xchg
mov
pop
pushl
lock
cwtl
cmp
lcall
inc
add
push
ffreep
cld
or
push
or
push
dec
sarb
flds
mov
pop
icebp
inc
or
dec
repz
aaa
sbb
negb
shlb
repz
pop
sbbb
jo
adc
and
mov
das
xor
stc
inc
ficompl
cli
cmpsb
push
insb
push
out
xchg
gs
inc
out
sub
lock
fs
push
rorb
or
fmuls
cmp
enter
ffree
mov
les
js
rorb
sbb
test
loopne
packsswb
xor
aas
xor
rolb
dec
fwait
out
lcall
out
or
lcall
dec
dec
jmp
ror
push
sub
int3
sti
mov
jne
ficomps
add
movsb
mov
mov
jno
mov
mov
aaa
mov
daa
invd
int3
adc
stos
push
mov
paddsw
mov
popa
mov
fmuls
xor
adc
cli
mov
push
mov
mov
mov
out
push
dec
ljmp
outsb
idivl
roll
cmp
xchg
icebp
test
cmp
repz
lods
xchg
and
out
xor
out
pop
xor
scas
xchg
or
data16
enter
mov
mov
add
jg
adc
sub
enter
jecxz
dec
inc
jle
test
ja
cwtl
pop
daa
ffreep
gs
adc
sub
movsb
push
sbb
popa
fnstsw
push
out
or
cmc
sbb
int
xor
mov
bound
inc
aas
int
jge
mov
clc
in
stc
out
dec
or
loopne
test
adcl
xor
icebp
sbb
xchg
dec
faddl
les
inc
sbbl
outsl
inc
daa
data16
shrl
inc
rcr
push
fildll
insb
rorb
sbbl
leave
adc
sbb
push
mov
js
aaa
sub
sbb
push
jns
fmul
stos
pop
and
test
cs
adc
ret
gs
mov
cld
aaa
dec
jecxz
jo
adc
out
mov
imul
das
and
outsb
insl
test
push
scas
jecxz
stos
lcall
loope
or
push
dec
cs
xchg
jmp
push
mov
js
stc
xchg
fs
adc
pop
lods
fwait
add
jp
int
xchg
js
adc
enter
xchg
mov
sbb
loopne
mov
jmp
cs
xchg
out
cmp
loop
pop
addb
or
jae
hlt
lock
call
sti
scas
xchg
mov
ss
hlt
je
xlat
mov
or
addr16
jmp
gs
lods
mov
arpl
mov
sti
mov
jmp
push
or
push
std
stos
push
cwtl
mov
pop
pop
insb
lods
or
push
lods
push
inc
cmp
and
mov
sub
inc
inc
loopne
loop
sbb
enter
mov
stos
std
push
jmp
dec
jne
xor
dec
ss
out
icebp
fbstp
lret
pop
cmp
and
dec
loope
imulb
or
outsb
gs
andb
mov
stos
cwtl
xchg
aaa
jne
test
add
jg
xchg
jle
and
or
jb
xchg
pop
jnp
push
or
dec
in
xchg
jl
mov
adc
fcmovbe
dec
cs
ja
xchg
xchg
or
mov
xor
push
fildll
lock
dec
mov
stc
ss
aam
mov
arpl
dec
pop
adc
dec
push
dec
mov
adc
cmpsl
out
xor
push
cmp
daa
mov
adc
xchg
adc
jge
adc
xchg
xchg
mov
rorb
mov
dec
outsl
or
dec
pop
push
xchg
add
push
test
rolb
rcl
and
les
mov
xor
jns
pop
mov
sub
push
inc
cmpsl
enter
dec
jae
push
outsb
fdivl
mov
adc
insb
push
pop
xchg
mov
and
pushl
pop
push
inc
pop
in
mov
dec
sbb
pop
daa
mov
pop
fsubl
jge
xchg
enter
xor
push
sbb
hlt
das
nop
fs
xor
cwtl
mov
rcrl
jg
inc
insb
push
and
lock
inc
in
je
and
sbb
pop
das
sti
inc
cs
sub
cmp
sub
je
les
repz
in
fadd
rcll
xorb
aam
and
mov
mov
popa
jmp
sbb
mov
in
jns
pop
mov
outsl
out
or
ja
mov
adc
jne
mov
dec
cwtl
outsl
dec
push
sub
les
mov
jnp
test
lret
divl
std
insb
ret
mov
push
sub
adc
push
inc
inc
rclb
test
outsl
fwait
scas
jno
sarl
xchg
cmpsb
sbb
cmp
int
fnstenv
loop
stos
les
inc
fistps
std
shl
mov
add
and
jb
xchg
gs
mov
pop
iret
xor
pop
testb
push
adc
mov
mov
mov
mov
mov
in
sub
jnp
and
fmul
cld
rcl
es
add
xchg
mov
gs
test
xchg
fiaddl
jle
test
aad
xor
jge
movsl
sti
fdivp
adc
xor
rorl
bound
mov
mov
std
in
sub
aaa
xorl
add
inc
cwtl
les
add
adc
insb
mov
dec
and
insb
lock
iret
adc
pop
lds
mov
invd
xchg
ja
in
and
scas
imul
repnz
stos
insl
add
dec
repnz
lahf
adc
jae
in
xchg
jp
adc
mov
or
call
adc
popa
movsl
int3
popf
inc
xor
stc
add
cmpl
or
push
and
out
xchg
xchg
movl
pop
dec
fistpll
cmp
sbb
bswap
in
int
xchg
fcmovnbe
inc
ljmp
add
push
xchg
movsb
push
sbb
ficomps
mov
jmp
sbb
cmp
scas
mov
repz
fiaddl
xor
mov
insb
add
int3
popf
outsl
movsl
es
inc
cmp
call
mov
push
inc
jecxz
dec
xor
or
imul
dec
mov
repz
out
xor
adc
lods
out
ljmp
jle
push
fisubl
jno
dec
notb
shlb
jo
xor
stos
jecxz
pop
ss
stos
mov
mov
pop
or
les
ja
xor
sub
out
movsl
rcr
add
sbb
dec
pop
sub
lea
inc
insb
mov
mov
leave
mov
mov
mov
xor
push
cmp
and
push
in
gs
test
jle
aam
lret
ljmp
adc
xor
leave
adc
mov
inc
out
mov
mov
loopne
jle
rorb
lcall
movsl
cmp
fmul
mov
xlat
mov
cmc
mov
push
cmp
pop
ret
push
cwtl
clc
push
fwait
xor
hlt
enter
insl
es
cmp
dec
ror
jb
leave
pop
loop
and
or
xchg
int
sahf
bound
adc
jmp
sar
mov
pop
insl
dec
lea
jno
mov
scas
jp
sub
xor
loopne
aam
inc
mov
fcoml
inc
ret
or
push
xchg
or
out
or
out
adc
sub
shlb
daa
fnstcw
repnz
pop
cmp
vmovlps
push
mov
addr16
sbb
cmp
pop
pop
push
icebp
test
test
cmp
js
jge
fsubrp
or
jmp
push
decb
mov
cld
adc
sti
adc
sbb
inc
adc
push
lret
ret
xor
or
sar
rcll
dec
inc
xchg
push
mov
mov
mov
subl
cli
or
sub
mov
or
iret
popa
into
sub
out
push
xchg
into
push
inc
jl
jl
xchg
out
out
stos
or
xchg
xor
aas
idivb
es
lahf
mov
repnz
mov
in
insb
test
jb
shll
jge
jo
mov
jns
jl
lds
mov
addr16
movsl
sbb
mov
mov
enter
out
sub
insb
xchg
xchg
rcrb
cmp
mov
les
mov
dec
imul
push
xchg
daa
and
fldt
jae
stos
pop
test
test
les
frstor
shr
shrl
test
out
jecxz
js
pop
jmp
dec
push
sbb
mov
jg
mov
pop
mov
fdivs
nop
dec
popf
bound
insl
in
dec
inc
adc
cmp
dec
shlb
pop
or
and
clc
movsb
and
repnz
cmp
sub
repz
iret
ja
xchg
lcall
jmp
mov
outsb
sub
ror
push
inc
mov
sub
and
in
xchg
cs
lods
mov
test
es
xchg
ror
shr
dec
add
push
mov
add
fucomp
mov
cmp
sarl
jb
lock
loop
xchg
jl
fwait
adc
addr16
stc
int
and
pop
shlb
push
mov
jae
lods
js
or
ss
and
sar
imul
xor
mov
addr16
cmp
adc
push
jnp
jae
ds
inc
sahf
sub
mov
out
sbb
add
xor
int3
mov
popl
shrl
jne
cmp
in
inc
sbb
fisubl
pop
push
xchg
cli
cmp
clc
sub
fisttps
in
add
xchg
mov
aas
in
jns
lea
test
lods
jp
mov
mov
rep
push
mov
sub
mov
jmp
push
xor
fwait
pop
adc
rol
mov
mov
out
call
ret
push
add
jmp
or
sbb
sub
cmpsb
stos
jne
and
sbb
mov
lret
add
sbb
sbb
shlb
add
std
addr16
xchg
das
xor
iret
or
loope
push
push
cmp
xchg
push
adc
inc
adc
ret
fdivrs
dec
test
rcl
loop
pop
lahf
gs
lods
gs
in
push
xchg
aaa
stos
jb
call
adc
cmp
cwtl
bound
and
jle
xor
pop
xchg
fadds
mov
imull
leave
imulb
push
add
mov
ret
mov
jge
xor
jl
test
xor
dec
insl
jp
shl
xor
clc
adc
jmp
pop
ljmp
sbb
sbb
hlt
outsl
mov
push
pushl
fbld
push
lcall
xchg
leave
jbe
push
xchg
push
outsl
jo
mov
call
sbb
mov
fisubs
cmp
pop
or
call
sub
mov
es
dec
mull
add
ret
adc
test
iret
notl
and
jo
push
lods
xchg
pushf
push
mov
mov
test
xchg
lret
icebp
daa
push
adc
dec
in
cli
scas
xor
xor
cmp
fsts
xchg
ljmp
sbb
add
out
nop
xor
rorl
nop
xchg
mov
call
adc
inc
xchg
cmpsb
mov
dec
add
pop
scas
inc
mov
outsb
mov
inc
push
je
sub
xchg
hlt
jo
push
dec
xor
test
mov
push
imul
add
nop
dec
cwtl
and
sub
jmp
iret
js
adc
inc
adc
sti
paddusb
enter
sbb
int
add
add
inc
aam
scas
sbb
pop
arpl
es
leave
mov
inc
dec
ja
ss
mov
sub
xchg
int
push
aaa
imulb
leave
nop
dec
lds
shrl
push
inc
sub
xlat
stos
or
inc
mov
rcrb
js
fs
push
add
shl
pushf
and
gs
xor
push
mov
and
rcll
xchg
xlat
int3
and
xchg
cmpsl
push
pop
cmp
iret
mov
xlat
je
add
pop
inc
lods
cmpsb
cmp
arpl
syscall
inc
aaa
sahf
xor
idivl
lahf
incl
sub
pop
sbb
pushf
in
cmpsb
push
cwtl
outsb
sarb
stc
stos
out
add
mov
dec
mov
or
adc
push
mov
adc
or
es
xor
hlt
in
mov
mov
dec
xchg
aaa
mov
jns
aad
lahf
cltd
lds
jae
insl
mov
push
inc
out
lods
push
leave
jecxz
sti
js
inc
push
xor
inc
sub
add
add
clc
mov
pop
cmp
push
xor
push
inc
movsb
jecxz
outsl
scas
int
cmpsb
movsl
cmp
xor
mov
scas
or
jno
mov
out
movq
scas
int3
bnd
and
xchg
in
idiv
inc
pop
sbb
popa
xor
dec
pop
lret
lret
lret
repnz
inc
outsl
xor
in
fcmovu
dec
ror
adc
add
sub
cmpsl
push
push
inc
mov
sti
out
and
add
imul
lret
cmp
test
xchg
stc
pop
and
in
movsb
mov
cmp
cmp
mov
and
dec
ds
dec
jle
ret
mov
insl
jle
in
sbb
out
adc
dec
gs
push
int3
clc
mov
gs
insl
mov
ret
cs
gs
adc
jle
jge
pop
jp
mov
push
ffreep
sti
ss
andb
pop
fs
jae
mov
and
mov
sti
pop
jo
mov
divb
mov
and
mov
add
ret
dec
mov
mov
push
dec
or
mov
inc
push
orb
adc
and
mov
push
add
scas
or
ljmp
arpl
fs
in
jmp
add
lds
dec
aam
sub
daa
or
fwait
sahf
jne
sbb
fistl
aad
cltd
hlt
push
push
inc
das
push
ret
sbb
cld
jmp
sbb
sub
mov
bound
xor
jl
insl
or
imul
dec
dec
test
popa
cmp
test
roll
jge
sub
add
into
repnz
sbb
inc
push
jnp
mov
cmpsl
shll
imull
and
addr16
les
mov
fadd
lea
aam
hlt
das
adc
add
xchg
mov
jbe
lea
pop
xchg
aad
lds
inc
adc
jo
insl
stc
idivb
ds
sarb
int
xchg
pop
or
test
mov
xchg
cmc
xchg
rcll
adcl
cmp
paddusb
xchg
mov
mov
sbb
ja
inc
imul
rcrl
or
ljmp
xor
rcll
les
xchg
ror
repz
pop
cmp
jmp
push
adc
mov
clc
arpl
add
rclb
aaa
cltd
cld
xor
xor
xchg
jecxz
push
rcrb
mov
push
stc
fildl
or
popf
ljmp
adc
iret
pop
int3
pop
push
icebp
repnz
lret
std
pop
xchg
ja
add
add
es
es
xor
inc
sbb
gs
pop
mov
repnz
lahf
gs
jbe
mov
mov
or
mov
push
cs
jl
shlb
pop
ja
fnstenv
addr16
jge
jo
mov
fdivrs
xor
pop
fcmovu
dec
imul
sbb
sti
push
mov
imull
pop
outsb
das
je
inc
xchg
pop
xchg
add
adc
fwait
mov
and
xor
movsl
iret
inc
lods
mov
movb
or
xor
cli
leave
cld
cmp
fstps
pop
ds
mov
icebp
scas
hlt
aam
add
pop
icebp
shl
jne
mov
pop
std
jge
test
xor
fs
cs
daa
std
mov
mov
sub
rorb
pusha
fidivrl
loope
lods
xchg
lods
inc
and
fucomi
fwait
mov
adc
sbb
mov
lret
std
stc
inc
ljmp
fiadds
mov
mov
lods
adc
aaa
or
mov
ds
imul
pop
std
push
loop
jg
mov
sub
loope
mov
clc
xor
fcomps
cmp
pop
mov
mov
pusha
dec
mov
aad
pop
jno
mov
addr16
xchg
enter
xor
loop
push
dec
daa
inc
push
mov
cwtl
cmpsb
lcall
push
inc
mov
pushf
adc
pop
stc
jp
pop
std
and
xor
inc
repz
jle
and
mov
mov
mov
mov
inc
xlat
lret
xor
ja
test
je
sub
roll
jnp
test
push
mov
dec
pop
dec
int
pop
lea
jbe
push
lret
xchg
call
dec
cmp
pop
cltd
xchg
rol
hlt
pop
lds
sbb
inc
sub
xor
aaa
xchg
lahf
adc
mov
pop
mov
dec
sub
shll
les
mov
fistl
pop
xchg
int
sahf
les
mov
dec
xchg
in
insl
popa
or
mov
mov
lds
dec
out
jle
loopne
cmpsl
pop
cmp
dec
test
daa
add
cmpsl
stos
mov
shrl
mov
mov
mov
jne
je
or
pop
inc
lret
xchg
sbb
in
dec
mov
push
xor
sub
mov
and
push
mov
stos
add
int3
mov
sbb
enter
xorl
ret
aaa
and
mov
add
cmp
int3
aas
mov
fs
or
ficoms
daa
jns
jo
jo
dec
xor
fildll
scas
scas
and
cmp
mov
cmp
xchg
mov
xor
outsl
xchg
mov
divb
adc
scas
call
enter
pop
cli
xchg
and
das
and
stos
mov
jge
aaa
ds
int
mov
jg,pt
jnp
jp
pop
pop
jp
adc
sub
repz
into
sbb
inc
add
mov
iret
gs
call
xchg
movb
dec
lds
or
xchg
sbb
es
test
cmpsb
pop
movsb
ss
mov
repnz
mov
int
or
fcompl
clc
cmp
jns
mov
mov
sbb
shlb
add
test
es
mov
insl
int
add
jb
xor
fmuls
cmpsb
mov
aam
in
fists
cs
outsl
mov
cmc
inc
cmp
xorl
aad
push
testl
inc
mov
cltd
bnd
stos
adcl
jns
pop
aad
pop
in
dec
sarb
xchg
inc
mov
lods
fsubr
xor
rclb
mov
sub
scas
pop
fisubs
cmp
add
pop
aas
stc
ret
jbe
sbb
jbe
jle
nop
add
fwait
test
pop
movsb
cmpsb
dec
aam
js
lock
xchg
or
stos
mov
xchg
and
xor
pop
pop
movsb
sbb
int
sbb
stos
xor
push
mov
add
adc
fidivl
fisttpl
pop
pop
push
cmc
loopne
loopne
mov
xor
das
and
adc
add
cs
jecxz
outsl
lahf
sub
or
jb
fadds
iret
repz
push
jecxz
adc
mov
mov
aas
cmpsl
lods
mov
mov
movsl
mov
push
mov
cmc
xchg
cli
jnp
mov
cmp
fisubs
shlb
ret
rclb
pusha
sbb
push
push
mov
jle
jae
enter
inc
mov
jge
or
mov
xor
and
daa
sbb
popa
or
das
push
je
es
popf
pop
leave
stos
stos
mov
repz
shll
mov
in
sti
mov
fistpl
aas
push
ljmp
pop
hlt
int
lods
sbb
jg
adc
divb
jno
xchg
add
add
push
push
mov
mov
lods
pop
es
add
pop
movsb
comiss
sub
jle
test
fwait
jnp
xchg
shlb
add
adcb
and
mov
sbb
clc
and
cltd
lock
inc
out
mov
mov
jg
xchg
inc
xlat
arpl
pop
sub
pop
sbb
dec
mov
sub
stc
out
fld
mov
imul
nop
je
add
out
inc
inc
jae
std
in
jno
inc
sahf
pop
add
sub
pushl
jno
aad
testl
scas
or
jl
mov
das
jl
pop
test
sbb
xchg
inc
jp
push
mov
test
in
rol
push
sub
fadds
ret
mov
outsb
jg
jmp
test
adc
jae
adc
andl
xchg
je
cmp
jecxz
fwait
stos
or
dec
into
into
inc
js
xchg
lea
lods
out
add
or
xrstors
out
or
icebp
mov
sar
cmpsl
lcall
fnstsw
mov
sbb
sub
adc
aam
jns
jns
loope
cmp
sbbl
aas
test
jp
jl
or
loop
rcrb
or
lret
movsb
add
add
mov
jns,pn
push
out
rcrl
nop
adc
ss
adc
push
xchg
popf
pop
ss
jns
imul
pop
into
pop
mull
repnz
push
sub
ljmp
mov
test
fs
bound
lods
add
imul
or
repnz
cld
inc
jecxz
xor
cld
sub
add
mov
aaa
push
clc
add
inc
xor
jg
dec
out
inc
sub
and
push
jl
dec
mov
sbb
movb
jb
fwait
popa
jg
loopne
push
adc
stc
or
push
adc
sub
insl
cmp
mov
data16
sbb
ret
mov
dec
mov
imulb
xchg
lret
aam
imul
mov
inc
mov
mov
adc
daa
mov
out
ljmp
stos
and
stc
test
repz
jns
imul
inc
xor
mov
and
and
jmp
or
stos
sub
and
inc
daa
loop
loope
or
in
cmc
jbe
pop
fidivs
mov
in
inc
loop
cltd
jmp
dec
push
movb
inc
hlt
movsb
xchg
stc
mov
sbbl
jle
cmpsl
dec
rcr
push
lahf
xchg
pop
lcall
imul
shlb
js
decb
adc
icebp
cmp
mov
mov
nop
push
lret
insb
clc
sbb
jae
ret
fsts
pop
and
repz
sbb
movsb
xor
mov
adc
fidivl
into
imul
jg
adc
inc
mov
push
add
js
jecxz
into
lods
inc
mov
dec
sub
lret
cld
mov
jnp
dec
and
mov
push
xlat
jo
pop
lods
and
lea
jne
pop
scas
xchg
push
xchg
dec
cltd
arpl
out
add
in
je
daa
or
mov
jecxz
rcl
dec
faddl
clc
sub
cmp
mov
dec
pop
gs
icebp
push
cmpsb
mov
mov
dec
repz
mov
pop
cmc
sub
in
movsl
aad
out
dec
jge
push
out
jl
sarl
icebp
lods
js
jns
and
fdivrl
mov
push
popf
inc
push
mov
xchg
jae
popf
test
xchg
jo
stos
insl
bound
cmp
ret
inc
and
xor
enter
lods
jns
mov
pop
movsb
pusha
xchg
fildll
and
fistpll
xchg
mov
sub
sub
icebp
shrb
mov
or
bound
jge
inc
push
jle
sahf
or
and
xor
adc
call
jo
jnp
test
popa
std
rcr
and
faddl
sub
push
pushf
sbb
clc
add
jl
jne
sub
lock
xchg
pop
or
sarb
sub
jnp
arpl
push
sbb
xchg
jmp
mov
add
push
jmp
lret
xchg
and
test
xchg
and
push
in
dec
test
out
and
data16
jl
fs
mov
lahf
jge
and
dec
fisubl
mov
dec
adcl
or
rcrl
adc
inc
imul
fs
mov
adc
or
les
gs
adcl
fsubs
add
sbbb
xchg
aaa
jno
mov
adc
add
xchg
push
cmpsb
inc
xchg
jge
xchg
daa
rcrl
cltd
xchg
sub
in
pop
or
rclb
aam
xchg
imul
stos
nop
or
repz
pop
push
add
cs
mov
push
xor
adc
and
jle
loop
add
push
cmp
insl
jne
cmpsl
pushf
out
cs
or
into
add
xor
lock
dec
inc
cli
sbb
out
out
sbb
pop
jp
add
mov
mov
movsl
bound
mov
sbb
adc
mov
xchg
cwtl
addl
int3
sub
pop
and
mov
movsb
adc
xor
lahf
xchg
test
sbb
call
pop
clc
aam
outsl
cmp
mov
push
mov
gs
pop
jl
out
xor
mov
cltd
xchg
clc
jmp
and
mov
lahf
cltd
test
stos
lret
pop
test
scas
add
xchg
dec
xchg
bound
frstor
push
xlat
in
lcall
jmp
out
jle
hlt
test
mov
fistpl
es
rclb
and
push
push
xchg
mov
stos
mov
lods
ss
decb
rcl
cmp
popa
aaa
int
rcll
arpl
rcr
repz
mov
faddp
xchg
hlt
sub
cmp
sub
std
xor
fs
sbb
in
mov
mov
rcrb
add
in
in
fisttps
ret
movsb
stc
push
lret
sbb
or
dec
xchg
jnp
dec
stc
jmp
push
pop
sbb
mov
jns
xchg
movsb
aad
loope
xor
xor
gs
scas
mov
mov
push
in
xchg
cmpb
mov
enter
mov
popa
or
cmpsl
mov
cmc
jbe
lret
repz
out
shll
inc
dec
dec
dec
mov
jns
dec
repz
adc
xor
cmc
popf
jns
std
mov
push
push
sti
loopne
aas
js
and
xor
pop
aas
aas
add
js
jnp
lahf
int
xor
dec
xor
sub
outsb
lahf
stos
add
and
je
jp
stc
inc
push
or
lods
fstl
pop
test
test
dec
push
and
jns
ret
sbb
mov
dec
out
cmp
mov
fstp
mov
add
stos
or
movsb
xlat
aam
out
int
fwait
push
daa
inc
insb
in
push
pop
mov
cmp
les
and
shll
loop
pusha
movsb
cs
sbb
fldt
push
arpl
das
in
mov
movsb
mov
test
shrb
aas
repz
aam
in
sub
adc
bound
sub
sub
bound
test
push
std
cmp
or
in
add
imul
lock
shll
sbbl
mov
cmp
js
jle
adc
cmp
repz
movsb
in
xor
xlat
sub
loop
mov
mov
jbe
movd
push
xor
xlat
addr16
xor
mov
nop
in
xor
into
mull
cli
leave
rcrl
mov
xchg
adc
dec
adc
mov
and
add
out
iret
cmp
mov
fwait
rorb
cmp
daa
jno
xor
mov
cwtl
dec
fstpt
mov
inc
outsl
aam
test
cli
cmp
ja
adc
mov
cmpsl
lcall
mov
lret
cwtl
push
lret
xchg
jae
lahf
sbb
inc
andl
cmc
push
xchg
push
jne
dec
lea
repnz
scas
in
andb
icebp
dec
push
negl
inc
mov
or
or
ljmp
inc
out
jle
jmp
pop
loope
cmpsl
jecxz
ficoml
mov
sub
out
sub
stos
hlt
bnd
add
aad
in
repz
jge
nop
jo
jb
or
xchg
ret
pusha
pop
dec
outsb
inc
lds
push
dec
jmp
xchg
aaa
push
inc
imul
ror
add
mov
movb
jbe
or
movsb
shrb
push
and
or
adc
push
fisttpll
cmp
mov
mov
maxps
int3
fs
mov
mov
push
and
hlt
and
sbb
cmpsb
pop
sbb
les
pop
enter
gs
push
and
scas
in
mov
jl
repz
and
movsl
jno
jns
loope
loop
or
imul
sbb
iret
dec
rolb
fsts
and
fcmovnb
sbb
jo
sbb
test
jecxz
jo
ljmp
mov
out
mov
dec
lahf
cs
cmp
cmp
cmp
push
cmp
xchg
inc
ds
inc
pop
gs
and
xchg
sbb
mov
cmp
insb
cmp
es
adc
xor
lea
clc
pop
pop
mov
scas
xchg
xchg
mulb
dec
pop
andb
push
mov
mov
scas
sbb
rcrl
xlat
cmp
inc
pusha
xlat
dec
pop
dec
jbe
xlat
int3
dec
push
pop
and
jae
mov
imul
popf
mov
cld
bound
or
pop
sbbl
lret
add
jecxz
adcl
pop
mov
jp
movswl
int3
out
xor
iret
je
adc
mov
ljmp
push
loope
xchg
std
not
mov
inc
sub
cmp
add
ja
jo
in
mov
punpcklwd
push
mov
adcl
dec
cli
push
sub
popf
xchg
nop
push
mov
push
dec
int3
fcompl
adc
add
adc
loop
push
cmp
shrb
icebp
cld
jp
sub
lcall
cwtl
push
fstpl
popf
fidivrl
outsb
imul
push
pop
in
imul
dec
push
mov
sti
or
sarl
cmpsb
sbb
pop
jns
sbb
mov
ja
mov
inc
aam
clc
and
jb
test
daa
out
xchg
push
mov
pop
leave
add
imulb
call
fisubl
insl
jns
and
jg
fs
push
rclb
sub
or
mov
loope
outsb
sub
mov
mov
aas
aad
mov
popa
mov
stos
mov
jl
and
push
into
decb
push
lret
sub
shrl
in
sub
xor
addr16
jbe
imul
adc
insb
xchg
aaa
mov
sub
lock
sub
sub
clc
lret
std
push
mov
cmp
push
inc
fwait
cmc
jl
repnz
jl
jl
jge
in
dec
push
or
or
arpl
bound
pop
inc
cmpb
subb
pop
gs
xor
out
or
leave
les
and
add
cltd
ljmp
xor
adc
mov
or
pop
lcall
call
xor
in
fisubrl
test
stos
aam
push
hlt
adc
add
int
push
jo
inc
aaa
xchg
dec
jns
cmp
andb
notl
ja
dec
adc
call
int
int3
test
imul
fadds
sub
pop
push
adcb
sbb
push
dec
mull
adc
mov
addb
inc
inc
data16
mov
iret
mov
sahf
and
sub
in
jp
pop
jb
push
jbe
rorb
ja
ds
inc
hlt
hlt
imul
mov
orl
rclb
imul
sub
adc
adc
testl
cmpsb
daa
xor
cld
lods
fwait
inc
jae
pop
inc
mov
or
dec
and
leave
rcrb
mov
iret
lods
push
out
fs
pop
pop
je
mov
call
sbb
movsb
ret
outsl
adc
dec
fstpl
sti
repz
stc
int3
jnp
rcl
push
cmp
sbb
push
inc
das
sar
ja
or
rolb
jl
aaa
call
and
int3
pop
outsl
sbb
mov
sub
sbb
add
lds
fwait
stos
push
xor
std
mov
popf
lret
adc
lods
push
sbb
jae
rorb
or
mov
xchg
and
add
test
loopne
xor
cltd
les
fdiv
dec
mov
adc
pusha
aas
lret
mov
test
lock
mov
xchg
in
jb
idivl
jl
dec
aam
dec
and
mov
mov
aaa
xchg
cmp
cmc
add
nop
loop
add
sbb
mov
mov
ja
sbb
xchg
loopne
cmp
pop
add
fiadds
inc
push
mov
cmpl
sarl
pusha
stc
mov
repnz
test
hlt
jo
inc
aas
xchg
xchg
pop
mov
jle
lahf
sub
dec
sub
loopne
outsb
jno
fisubl
mov
lret
jle
cwtl
lret
adc
xor
in
shl
leave
fstps
push
adc
cwtl
dec
enter
icebp
or
loop
pop
mov
loope
lds
mov
sub
push
and
data16
xchg
push
lods
or
pop
mov
in
mov
hlt
test
loope
fs
fidivl
aam
cli
repnz
adc
mov
fadds
xor
popf
cmpsb
mov
mov
test
and
jbe
sbb
aad
and
ret
addr16
dec
jl
roll
mov
mov
add
xchg
movsb
js
pop
andl
out
xchg
pop
ds
jae
mov
add
xchg
mov
push
mov
imul
xchg
clc
add
cmp
mov
adc
jmp
mov
mov
inc
mov
nop
xchg
gs
sub
iret
push
add
mov
mov
lret
jmp
dec
mov
inc
cltd
add
push
adc
in
sub
sar
adc
ret
inc
out
mov
add
add
jnp
fcoml
jg
daa
scas
wbinvd
test
add
xor
scas
sub
notb
adc
out
mov
or
add
jg
mov
nop
out
jp
in
and
cwtl
mov
sahf
jo,pt
adc
cltd
int
lret
aas
lret
or
popa
jg
and
ds
dec
daa
test
xor
mov
filds
dec
aaa
fcompl
xchg
dec
je
push
xchg
adc
or
popa
push
jecxz
leave
mov
dec
cmpsl
inc
xchg
hlt
sahf
push
sbb
nop
jnp
inc
hlt
xchg
mov
rcll
push
push
mov
out
out
cmp
xor
sbb
jl
repz
sahf
mov
mov
nop
xchg
adc
cmp
add
push
clc
lcall
ja
ds
or
inc
dec
cmp
pop
xor
lock
gs
fsubrl
or
lret
lock
aam
xchg
inc
pmullw
ja
outsl
inc
fs
sub
and
pop
xchg
lcall
and
insl
ret
cwtl
sbb
and
jns
jb
mov
unpckhps
jle
test
dec
lret
addb
mov
movsb
adc
sub
jb
jb
outsb
jge
mov
add
aam
test
ljmp
enter
pop
call
adc
inc
pop
xor
fcompl
out
mov
jbe
sbb
mov
add
adc
push
xor
gs
cmc
mov
inc
repz
shrl
sub
sub
pop
and
movsl
fisttpl
mov
or
push
repz
ja
sbb
adc
sub
sbb
testl
cli
mov
xchg
mov
inc
pop
fwait
cmp
inc
push
sbb
call
rorb
mov
into
add
and
out
adc
cmp
fcoml
pushf
and
je
cmpsl
int3
xchg
jbe
loopne
mov
push
mov
lea
loope
aas
adc
adc
mov
mov
clc
loope
xor
jae
adc
xlat
aas
into
mov
loop
aad
stos
push
push
jb
lock
shlb
movsb
cmp
adc
pop
enter
mov
loop
sbbb
outsl
int3
sub
pop
aas
mov
fcmovnb
ret
icebp
cmp
or
hlt
stos
push
xor
push
inc
inc
call
sbb
sbb
push
lcall
iret
mov
push
push
sub
or
fucomip
movsb
push
add
jecxz
popaw
orb
in
mov
fsubs
inc
mov
dec
sbbl
jo
out
cmpsl
fidivrl
add
xor
testb
add
sbb
mulb
add
jl
sbb
jb
notb
jne
shrb
lret
push
cli
push
jo
lods
pop
cmc
mov
cmpsb
jno
lds
inc
fldt
mov
sbb
sbb
es
add
inc
mov
test
sbb
and
or
lea
ss
mov
enter
push
mov
lret
add
pop
inc
and
mov
adc
pop
sti
jb
decb
mov
xor
daa
push
jl
xchg
pusha
adcb
mov
mov
test
scas
lds
sub
loopne
mov
or
sub
mov
ret
cmp
or
js
fcomps
jmp
cmpsb
xor
mov
sahf
xchg
enter
xor
push
adc
inc
mov
loopne
clc
push
fwait
cmp
and
imul
xchg
add
shrl
xchg
addr16
push
push
mov
xor
jb
push
jp
int
test
sub
leave
push
push
mov
cmp
sbb
jns
mov
movsl
jmp
popa
ret
push
out
sahf
pop
or
test
sub
mov
rolb
mov
aam
pop
loop
xchg
xor
push
inc
dec
jmp
outsb
ss
adc
xchg
sahf
sbb
stos
pop
ret
mov
mov
roll
cli
inc
adc
pop
jp
push
xor
xchg
dec
add
dec
mov
shrb
call
iret
adc
ret
das
pop
xor
stc
mov
dec
les
std
movsl
loop
push
dec
insb
repnz
xor
cmp
sahf
in
sbb
shlb
data16
and
icebp
xchg
mov
pusha
jmp
hlt
xchg
leave
mov
testl
adc
das
push
push
outsb
push
test
icebp
xlat
fs
or
mov
sub
pop
dec
dec
dec
scas
maskmovq
jno
pop
inc
add
pop
pushf
scas
addl
daa
push
jo
push
cmp
incb
mov
xor
cli
cmpsb
push
incb
mov
mov
push
test
xchg
in
jne
mov
mov
insl
dec
push
sub
inc
cmpsl
sbb
sbb
xchg
ds
out
cmpsl
ret
outsl
sub
nop
cltd
inc
adc
dec
aas
mov
leave
out
pop
clc
pop
xorb
pop
test
fs
mov
cs
or
mov
pusha
sbb
in
or
lock
sbb
iret
or
sub
xchg
adc
outsb
sub
cmp
addr16
fstl
addr16
jnp
jge
ss
inc
shrb
xchg
nop
int
mov
lahf
sti
pop
pop
imul
xor
and
ficompl
fs
mov
jge
stos
out
rcrl
lods
and
xchg
in
fiadds
icebp
aad
jg
je
jp
push
sahf
cld
shll
and
outsb
fnop
and
scas
in
pop
mov
les
outsb
cmp
popa
inc
or
mov
dec
faddl
xor
mov
loopne
out
push
or
pushf
jge
insb
sbb
cmpsl
sbb
fs
test
ret
mov
cli
mov
xchg
jnp
insb
xor
int
mov
in
or
sub
dec
mov
jmp
adc
ret
outsl
fmulp
mov
add
inc
cmp
dec
repz
arpl
jmp
enter
lret
das
aad
push
cwtl
xchg
sbb
inc
aaa
sbb
mov
ss
dec
jmp
leave
mov
pop
and
sub
mov
mov
test
xlat
adc
shl
xor
ret
test
pop
dec
scas
cltd
gs
mov
repz
aad
push
stos
xchg
inc
lret
mov
test
pop
loopne
aaa
fisttps
jns
fdivs
out
dec
push
enter
rcll
inc
mov
cmp
mov
cwtl
jp
fwait
xchg
sbb
push
adc
repz
and
xor
ret
dec
andb
nop
or
or
mov
cmp
lods
fisttps
fdivl
aad
and
cmp
jmp
test
jmp
stos
jp
fcoml
pushf
fildll
cltd
jnp
adc
or
sbb
jg
dec
cld
mov
fwait
adc
pop
stos
loopne
stos
repnz
adc
popw
jle
add
in
mov
shll
mov
sub
sar
lret
in
mov
fwait
push
ret
scas
insl
mov
or
mov
fdecstp
daa
and
mov
mov
xor
out
pop
xchg
jge
pop
cmpsl
stos
inc
pop
jns
outsl
xchg
xchg
ret
sbb
hlt
pop
mov
addb
mov
popa
pop
fnstcw
xor
jne
sub
mov
inc
push
add
sub
popf
cmp
jnp
sbb
mov
push
ret
test
or
mov
cmp
lea
cmp
xchg
inc
push
mov
test
or
inc
push
cmp
xor
lods
mov
add
imul
imul
in
sbb
lret
mov
push
and
mov
xchg
js
sahf
fld
imul
int3
jmp
jbe
ljmp
cmp
movsb
and
push
lea
xchg
lret
mov
adc
orb
cmp
imul
movsb
adc
cmp
jbe
and
sub
sbb
dec
jle
jnp
cmp
add
shlb
mov
fs
pop
enter
ja
adc
aaa
fldt
mov
mov
popa
inc
sub
mov
sbb
sti
popa
adc
jo
sbb
fcmove
sbb
add
fs
push
fcomp
scas
fsubrl
or
push
xchg
sti
pop
xchg
adc
adc
push
sbb
mov
stc
imul
scas
ja
push
lock
mov
mov
add
xchg
xor
sahf
mov
xchg
dec
gs
pop
xor
xchg
dec
pop
cli
pop
mov
out
stos
bnd
insl
mov
outsb
adc
mov
in
pop
add
sbb
cs
nop
sub
or
add
sbb
push
and
sbb
imul
and
jecxz
sbb
cld
dec
outsl
adcb
insl
lret
mov
ja
call
aaa
in
call
adc
sbb
and
imul
mov
imulb
jne
or
inc
outsb
sub
xlat
das
lret
pushf
fdivrl
sbb
loop
mov
rorl
les
pop
in
and
push
lcall
cmp
cmpsl
or
movsl
or
inc
out
or
dec
jne
mov
or
lds
cmc
mov
lds
adc
pop
jg
dec
adc
lods
jae
xor
pop
mov
sbbl
mov
je
pop
sbb
pushf
jge
push
jg
outsl
mov
mov
cmc
lahf
test
cmpsl
push
fisubrl
jne
aam
fcoms
sti
cmpsl
fcmovbe
and
int
add
cs
push
mov
cs
fcompl
mov
adc
push
icebp
shl
ss
inc
inc
nop
cmp
stos
add
dec
mov
push
clc
enter
or
sub
xchg
cmp
mov
push
shl
xchg
or
cmp
xchg
mov
fs
xchg
cmp
mov
in
sbb
in
scas
mov
in
andb
jns
xchg
xchg
jmp
repnz
and
test
popl
push
int3
movsl
clc
pop
add
repz
jno
jle
dec
push
xchg
push
arpl
rorl
lods
lret
addb
out
sub
daa
ror
and
ljmp
int
mov
lods
xor
pop
les
sbb
imul
mov
sbb
xor
sub
lret
push
xor
test
inc
pop
lods
data16
cli
in
ret
rorl
mov
push
aaa
xchg
mov
imul
adc
mov
push
pop
jg
pushf
mov
jbe
rolb
sahf
iret
mov
mov
xor
cmp
stos
and
nop
sub
imul
push
lret
push
adc
mov
dec
andl
fidivrs
sbbl
ud1
push
dec
and
xor
push
loopne
pop
test
jg
pop
fistpl
jne
or
stc
mov
jecxz
outsl
cld
adc
ret
pusha
out
testl
inc
push
into
dec
pushf
xchg
jecxz
push
push
push
clc
ljmp
mov
and
jae
and
and
ret
cmc
inc
dec
pop
pop
pushf
movsl
add
push
mov
dec
stos
xchg
loope
push
xor
pop
adc
insl
jnp
mov
pop
into
loope
mov
fwait
adc
clc
push
faddp
xchg
pop
push
movsl
cmpsb
add
jg
dec
fldenv
sbb
mov
outsb
mov
btc
mov
shrl
mov
push
sbb
xor
add
enter
jmp
loope
mov
cmp
xchg
inc
push
notb
sti
out
or
std
scas
push
push
pop
lock
adc
push
xchg
pop
je
addb
xchg
notb
xchg
or
dec
test
insl
std
mov
je
or
sbb
in
imul
fists
in
xor
pop
or
addr16
fs
iret
lock
popf
lret
in
fistpl
pop
orb
jb
adc
movsl
pop
add
push
sbb
js
stc
out
ja
sub
xchg
push
xchg
je
sub
mov
mov
movsl
bt
sti
in
call
xor
ss
mov
sub
pushf
mov
mov
or
js
rorl
add
adc
pushl
cs
fcompl
adc
scas
aad
pusha
push
mov
ljmp
push
hlt
xchg
xor
xor
mov
xchg
scas
iret
int
mov
popa
fistpll
rcll
push
push
out
cmc
lods
pop
or
aam
stos
mov
js
daa
inc
sbb
cmp
aaa
xchg
js
arpl
push
scas
adc
test
pop
out
aad
loopne
mov
xor
pop
or
and
mov
ss
jne
imul
out
xchg
int
andl
cmp
sub
xor
out
xor
push
cmp
mov
mov
int
or
mov
lock
mov
xchg
mov
jne
sub
mov
sbb
test
xchg
loopne
pusha
ljmp
mov
sub
mov
mov
jne
outsl
js,pt
cltd
sub
call
lds
and
decb
push
jecxz
pop
pop
repz
inc
sub
mov
and
adc
and
or
adc
push
cmp
mov
push
clc
sub
cmpsl
and
test
sbbb
test
lds
je
jge
and
sub
lds
aam
rcl
mov
ret
jb
add
in
cmp
icebp
mov
mov
jg
xor
pop
or
jecxz
xor
insl
pop
loope
sarl
push
in
jmp
pop
std
mov
loopne
add
test
sahf
xchg
cmpsl
pop
int
mov
push
daa
hlt
ljmp
ficoms
mov
cs
repz
lret
jmp
sbb
mov
sub
pop
test
jge
push
jae
add
xor
sub
cmp
bound
mov
fildl
clc
mov
loop
shlb
lods
push
leave
std
xchg
sti
aad
fldl
adc
fmuls
adc
jge
or
adc
mov
scas
test
add
dec
and
sbb
dec
pushf
xor
in
enter
mov
dec
cwtl
inc
mov
jecxz
es
jmp
adc
jle
xchg
lret
int
xor
or
mov
bound
popa
clc
inc
shlb
movsl
in
or
mov
lea
testl
jns
dec
dec
ret
lret
sti
fdivl
adc
dec
and
xchg
adc
lock
std
lahf
bound
nop
xchg
push
mov
popf
cli
and
sub
insb
pop
inc
push
jge
cwtl
pop
cmpsl
ret
popf
and
fnsave
cwtl
flds
jbe
andl
test
movsb
ret
adc
xchg
gs
dec
sub
push
popw
mov
lcall
arpl
inc
cmc
lods
lods
sub
mov
nop
push
pushf
js
cmpsl
xorb
gs
add
loop
push
sbb
jmp
pusha
mov
scas
inc
sub
xchg
jge
cmp
pop
xchg
pop
xchg
rorl
pusha
xchg
sub
sub
cmp
mov
push
fidivrl
push
mov
sbb
push
out
scas
ss
mov
and
mov
out
cs
dec
sbb
iret
cli
addr16
das
cli
neg
rorl
ss
jne
test
stc
mov
sbb
or
mov
lds
dec
fwait
lret
xchg
test
mov
cmp
jmp
xchg
insb
ret
cmp
dec
lods
sub
adc
jmp
fdivrs
inc
cmp
stos
ret
outsl
adc
jno
or
push
mov
jno
out
rcrb
inc
push
hlt
dec
cltd
out
ret
ret
fs
xor
xor
sbb
cmc
loope
sub
lcall
jno
xchg
das
imul
enter
fisttps
cmc
cmp
dec
div
inc
add
in
dec
scas
test
cmp
adc
seta
pop
lcall
ret
pop
cmp
xor
out
push
inc
pop
call
pop
mov
sbb
mov
cmpsb
cmp
aas
lods
test
std
pop
movsl
aaa
and
inc
rcl
andb
pop
sbb
test
pop
ret
cmc
inc
fld
stc
call
xor
outsb
in
stc
xchg
cmpsb
mov
mov
push
fidivrl
fcompl
push
insl
outsb
sahf
push
rcl
pop
popa
jl
add
mov
clc
sbb
xchg
addl
ss
insl
sbb
mov
jmp
int3
fistps
ja,pn
xchg
cmp
adc
or
sub
pop
adc
inc
dec
xchg
push
sbb
add
jo
mov
insl
jp
xor
inc
lcall
stc
insl
jmp
popf
notl
andb
call
in
rorb
and
sub
mov
movsb
jb
loop
out
lds
arpl
orl
jae
mov
loop
adc
adc
xor
lods
jg
sub
int
mov
cltd
scas
lret
mov
ret
pop
adc
pop
fcomi
gs
jl
sub
lods
and
rol
dec
mov
lea
stc
mov
mov
push
or
subb
inc
mov
adc
movsl
mov
out
sbb
jne
push
add
ficomps
inc
add
adc
push
push
xchg
ljmp
and
dec
jno
push
and
mov
inc
or
inc
mov
das
ds
sbb
jl
movsb
int
in
filds
add
xacquire
in
push
cmpsl
jns
int3
sub
xchg
mov
cwtl
jmp
push
jle
test
fcoml
into
iret
outsl
int3
repz
fisubrl
and
test
or
rolb
fistpll
push
std
and
ljmp
lea
int3
adc
add
adc
rolb
mov
and
dec
stos
dec
fsubl
add
mov
jge
icebp
ja
ret
xor
movsb
dec
inc
clc
jl
aam
test
cmp
cmp
mov
jae
or
dec
in
push
sbb
xlat
pop
sbb
sbb
fwait
jl
or
jne
iret
inc
cwtl
std
insl
cwtl
out
mov
clc
arpl
sub
jl
fstpt
pop
mov
test
cmp
xor
xor
mov
and
lods
imulb
mov
xor
xchg
leave
nop
pop
clc
fisttpl
ds
addb
gs
jb
movaps
and
lds
sub
cmc
add
ret
stos
add
aas
sbb
cmp
ja
jnp
leave
arpl
lea
mov
jno
mov
dec
pop
arpl
dec
cld
add
xchg
lds
push
lods
add
push
xchg
test
sahf
cmpsb
jl
add
dec
adc
out
pop
idivb
xor
fwait
iret
negl
lods
cmc
sbb
and
xor
stos
push
negl
loope
jns
cmpsb
or
sbbl
inc
scas
sahf
cltd
les
xchg
jg
cmpb
mov
std
aas
push
movsl
sti
sbb
les
cs
add
std
cmc
imul
jns
loope
pop
adc
pop
imul
jg
or
andl
sarl
sahf
add
mov
into
sbb
cmpsl
xchg
mov
mov
mov
jmp
gs
jns
sbb
hlt
mov
jp
jecxz
out
movsl
lret
or
jne
cmpsb
push
add
add
bound
imul
mov
xchg
inc
movsb
pop
repz
es
pop
sbb
inc
push
or
pop
xchg
ja
inc
cmpsl
jae
xlat
cmc
adc
xor
or
clc
cmp
lret
fwait
mov
push
lods
mov
mov
in
in
nop
lods
mov
mov
rcll
ja
insb
push
cmpsl
aam
mov
notl
xchg
ja
push
sbb
push
lock
stos
mov
mov
fiaddl
push
and
mov
in
add
adcb
addr16
jle
lcall
or
insb
adc
mov
test
into
xlat
enter
mov
xor
push
jp
sbb
ds
and
mov
push
cmp
push
bound
sbb
jp
idivw
mov
mov
mov
xor
test
mov
xchg
mov
les
mov
popf
push
jecxz
mov
out
push
push
lret
xlat
mov
mov
stc
push
pusha
fsts
mov
testl
mov
notl
icebp
mov
push
pop
pop
pusha
popf
mov
sub
mov
lret
fistpll
xor
sub
xchg
cltd
pop
and
mov
mov
lods
cmpsl
pop
cmp
test
cmp
cmpsl
push
xchg
jns
loope
mov
pop
stc
es
je
jp
mov
add
imul
pusha
mov
jp
mov
test
mov
xchg
jns
pop
and
popf
daa
int
pop
push
push
ja
mov
or
xor
jne
and
push
leave
lock
sbb
mov
shl
inc
lods
xchg
pop
jae
adc
sbb
lahf
cmpsl
enter
aaa
sbb
xor
add
ds
push
xchg
inc
xor
xchg
sti
push
divl
push
add
repnz
dec
push
xor
jbe
mov
xchg
pop
dec
jmp
jg
stos
in
fcompl
ret
inc
std
ja
dec
cmp
addr16
pop
insb
outsb
std
push
pop
leave
cmp
int
pop
imul
push
mov
xor
pop
fistl
inc
sbb
shll
mov
adc
es
push
aad
pop
push
cmp
xchg
ljmp
ss
or
adc
cwtl
or
mov
outsl
xor
and
adc
and
add
adc
fimull
addb
jnp
xchg
pop
pop
shlb
fcmovnb
repnz
mov
mov
cs
inc
rcll
std
testb
stos
fstl
mov
inc
mov
adc
movsl
cltd
out
add
pop
xchg
cmp
xchg
fstpl
pop
mov
jns
lret
into
in
mov
shl
cltd
mov
cs
xor
pop
test
dec
dec
and
mov
sbb
jbe
mov
sub
nop
ret
mov
cmp
lcall
repnz
add
mov
xchg
and
fwait
scas
iret
in
arpl
dec
lret
cld
iret
in
insb
stc
lock
imul
or
push
dec
scas
xor
nop
test
daa
inc
movsl
sbb
mov
mov
cmp
insl
shll
pop
outsb
jmp
adc
fldcw
mov
cwtl
dec
xchg
in
imul
jbe
cwtl
subl
pop
lcall
sbb
rol
subb
add
adc
pop
mov
lcall
mov
mov
movsl
data16
and
jne
loop
mov
or
jecxz
in
adc
je
push
inc
ficoms
inc
test
mov
mov
test
xor
xor
and
adc
jae
xchg
push
mov
push
fwait
jecxz
aam
mov
mov
lcall
xor
jl
cmpsl
xchg
mov
jne
mov
aam
dec
cli
adc
ret
pop
mov
xchg
pop
jmp
sahf
or
and
and
std
push
mov
mov
xor
sub
pop
inc
adc
mov
adc
cmp
and
aad
cmpsl
xor
mov
inc
pop
into
jno
ja
repnz
cmp
xor
mov
shl
jmp
jae
xchg
movsl
jae
inc
fucom
int
push
mov
test
in
out
mov
cld
aaa
cmp
out
inc
mov
stos
iret
lds
mov
popf
inc
fs
insb
and
in
inc
fadd
dec
jmp
fdivrl
push
movsl
inc
mov
adc
inc
aas
nop
repnz
inc
cmp
call
push
xor
add
inc
test
insb
iret
sub
std
enter
xchg
mov
push
adcl
xchg
inc
sub
ds
push
cwtl
in
mov
mov
add
sbb
dec
pop
orb
stos
lcall
adc
sbb
and
int
scas
xor
push
out
int
push
mov
sub
pop
xor
jmp
cmpsl
inc
movl
fisttps
sbb
insl
dec
inc
xchg
mov
repz
pop
xor
mov
icebp
shrb
shl
in
jecxz
xor
shl
mov
lds
add
sbb
pop
mov
xchg
notl
mov
mov
mov
cld
inc
or
fwait
sbb
sbb
movsb
repnz
js
mov
add
outsl
fstpl
fsubrs
cmpsl
or
mov
xor
shr
fimull
or
xchg
mov
mov
rcrb
push
xchg
pop
testl
adc
test
mov
xor
rcll
outsb
out
pop
xor
pop
lret
jge
ljmp
rorl
mov
xchg
sbb
xchg
dec
add
and
repnz
addr16
stc
pop
or
repnz
or
std
pop
add
jb
add
mov
out
inc
fcmovbe
leave
xor
enter
push
cwtl
shlb
out
jle
push
xchg
hlt
xchg
repz
ja
xor
mov
push
and
cs
adc
cmp
in
test
mov
es
repz
add
jo
fwait
lea
stos
adc
dec
dec
nop
es
ret
xor
lea
xor
je
mov
cld
in
jnp
xchg
pusha
out
fiaddl
cmp
cmpsl
pushf
cmpsb
clc
mov
add
sbb
sbb
xor
aam
test
xchg
jl
and
xchg
inc
imul
cmp
ss
in
xchg
insb
rcl
stos
jl
xchg
movsb
jo
and
pop
fsts
mov
push
cmpsw
int3
in
je
stos
pop
stos
push
or
xchg
add
mov
xorb
and
add
mov
scas
out
pop
fcompl
and
mov
adc
xchg
sbb
fs
cmp
mov
dec
out
hlt
cmc
or
repnz
mov
mov
pop
jecxz
mov
cmp
ret
xor
pusha
aam
add
lock
pop
xchg
sub
xor
fdivs
push
xchg
jne
nop
dec
inc
mov
cli
dec
icebp
loop
inc
pop
lods
xchg
outsb
mov
pop
lret
sub
push
in
pop
mov
dec
push
dec
orl
outsb
shll
rclb
dec
pop
jmp
pop
xlat
xor
fsubs
popf
adc
daa
outsb
outsb
cmp
adc
aam
inc
stos
xchg
jge
push
pop
jne
inc
push
loop
ja
add
popa
and
cs
push
inc
rolb
or
cwtl
jns
in
push
mov
inc
push
gs
push
jl
popa
jns
rcll
push
pushf
sub
das
ficoml
mov
rorl
mov
imul
daa
mov
sbb
xchg
xor
xchg
cs
lds
mov
aam
xor
out
pop
ljmp
mov
dec
scas
sub
scas
sub
adcl
fistpl
fsincos
xor
ja
adc
inc
dec
pop
notl
in
cmp
pop
sbb
push
add
lods
stos
mov
rorb
dec
push
lea
pop
push
sub
stos
xchg
aam
arpl
dec
cmp
inc
loop
adc
xor
int
xchg
scas
and
xor
push
inc
lahf
popa
outsb
or
adc
push
sub
push
clc
add
mov
mov
call
sti
push
pusha
scas
popf
sarb
jg
stos
add
cmpsl
lods
cmp
jne
sub
mov
or
fdivr
out
fwait
ljmp
sbb
popf
inc
fildll
bound
xchg
cmc
sahf
imul
push
mov
test
hlt
xchg
or
popf
xor
aas
stos
adc
insl
xchg
das
sub
dec
nop
data16
insb
mov
and
push
cmp
push
mov
cwtl
xchg
test
sub
xor
jno
add
sub
sbb
inc
or
lods
je
or
dec
mov
push
push
hlt
push
sbb
push
push
lret
xor
xchg
xor
clc
push
jno
adc
les
mov
xchg
shl
outsb
cmp
or
jae
int
inc
shrb
jb
inc
jp
adc
or
lcall
push
cmp
xchg
jbe
out
jns
mov
xor
mov
imul
jae
pop
mov
das
pop
addr16
movl
ds
lods
jb
andb
sarl
mov
imul
in
and
notb
xor
ret
push
sub
jno
sbb
outsb
mov
in
in
ds
sbb
dec
iret
push
lods
les
cmc
movsb
or
ficoms
stos
inc
icebp
sahf
sub
cwtl
xor
push
jno
jno
std
push
jle
jmp
out
dec
les
cwtl
xchg
mov
icebp
push
aad
stos
stc
xlat
lods
mov
js
cwtl
lret
pop
icebp
loope
mov
pop
std
push
rclb
mov
dec
mov
add
orb
ja
add
add
adc
out
pushf
lcall
mov
pop
mov
test
out
jp
punpckhbw
aas
sub
pop
jl
jp
and
cmp
mov
lock
movsl
lcall
xor
test
hlt
jecxz
das
shrb
pop
inc
inc
sub
lods
push
repz
cmp
mov
jp
lods
es
rclb
pop
lret
and
jns
mov
fistps
sbb
aaa
cmp
int3
sub
arpl
mov
sub
mov
mov
jp
xor
add
test
lods
inc
sarb
push
lods
ds
xor
cmp
daa
add
inc
imul
loope
imul
gs
cmpsb
lret
pop
roll
movb
pop
ret
xor
jnp
mov
mov
movsl
xchg
and
pop
sbb
mov
sub
pop
out
jno
adc
pop
loope
sbb
test
out
mov
ss
jmp
lods
fidivrl
sbb
iret
add
addr16
push
sbb
inc
fcmovnb
mov
xlat
mov
sbb
mov
mov
sbb
stos
push
mov
shll
cmp
fistpl
mov
adc
fists
sti
into
mov
cmp
lea
adc
xor
xor
push
add
shl
and
fldl
mov
outsb
mulb
and
push
push
in
out
fisttpll
cmp
lods
daa
orb
ljmp
fdivrs
cltd
movsb
push
mov
dec
push
jmp
dec
fisttpll
xor
jne
ljmp
shll
jo
and
test
push
mov
pop
fucomi
mov
out
pushl
mov
loop
in
xchg
popf
sbb
mov
les
int
call
int3
gs
xchg
mov
mov
push
fnstsw
scas
mov
hlt
push
or
pop
jecxz
xchg
aas
sub
arpl
xor
mov
jo
sub
and
push
aaa
mov
icebp
je
in
popa
lods
sbbl
icebp
insb
mov
aad
xchg
stos
sbb
sbb
pop
adc
fmulp
cmp
push
cmp
dec
sbb
mov
xchg
lods
pushl
mov
push
imull
mov
fdivrp
and
push
fistps
iret
inc
mov
push
popa
std
dec
mov
mov
pop
sarl
aad
fbld
repnz
cmp
clc
xor
pop
sbb
add
adc
sbb
sarl
mov
add
sub
add
or
dec
jecxz
mov
mov
lds
mov
adc
mov
add
sbbl
xchg
xchg
jnp
das
mov
decb
call
movsb
bound
cmp
aad
cmp
pushw
call
cmpl
repz
clc
call
repz
sbb
aas
scas
xchg
dec
mov
clc
push
rol
pop
les
inc
scas
out
mov
cmp
lock
xchg
jno
push
pop
pusha
pop
push
sti
in
mov
movsl
cmp
cmpsl
cmp
insb
push
fldl
das
test
add
inc
xor
int
lds
inc
mov
inc
mov
pop
cld
mov
xor
pop
das
sbb
movsl
cmp
mov
push
outsb
xchg
mov
out
add
popa
ror
div
mov
pop
adcb
hlt
xchg
or
xlat
push
jp
popf
pop
xor
lock
xor
pusha
xor
push
mov
fs
cli
xchg
xor
jp
lcall
mov
pop
loope
gs
xchg
add
daa
jmp
mov
mov
lret
bound
fcmove
iret
cltd
scas
mov
mov
inc
sahf
lahf
mov
or
pop
sahf
daa
adc
push
lea
cmp
out
or
xchg
push
cmpsl
je
xchg
xlat
mov
cld
inc
jnp,pt
loope
add
xchg
mov
and
pushf
jbe
popa
pop
xor
pushf
out
ret
fldenv
stos
inc
jae
das
les
add
mov
sub
mov
pusha
outsl
mov
and
shlb
aad
int
lahf
jbe
and
dec
xchg
mov
sbb
jecxz
inc
mull
mov
adc
xchg
je
rcrb
frstor
sbb
dec
andb
xor
add
hlt
loop
dec
mov
pop
mov
sub
icebp
mov
xchg
out
xor
mov
pop
in
jl
adc
enter
movb
clc
jo
xor
push
notb
mov
pop
arpl
es
xchg
cmp
jle
rcrb
push
pop
enter
cltd
rcll
repz
jmp
adc
jmp
and
insl
xor
into
push
cmp
je
pop
xchg
and
mov
adc
pop
inc
jno
jae
or
mov
inc
mov
hlt
mov
cwtl
adc
cmovge
sub
cmp
out
dec
dec
repnz
lret
add
push
dec
pop
out
fildll
pop
lcall
sti
repz
xchg
test
es
cmc
mov
push
insl
and
jb
lahf
test
cmpsb
xlat
cli
lret
imul
and
adc
repz
fnstsw
lret
mov
stc
pushf
mov
fidivrl
jge
std
and
outsb
sub
sbb
add
jne
cmp
jo
fisttpll
cli
arpl
int3
data16
adc
cmp
dec
add
xchg
xchg
mov
mov
mov
call
pop
adc
fldcw
repz
shl
mov
cmp
fdivl
or
std
mov
shrb
jo
mov
clc
ljmp
xor
inc
inc
mov
xlat
pop
xor
rcrb
lods
mov
mov
dec
shlb
push
mov
imul
push
dec
mov
fists
outsb
mov
inc
fs
mov
iret
cmp
in
xchg
adc
in
inc
lock
fwait
test
mov
sbb
pop
gs
cwtl
jecxz
data16
pop
dec
xlat
cmpsl
in
sub
adc
pop
pop
out
mov
push
lret
xor
sub
mov
shll
inc
aaa
sbb
lret
push
add
cli
mov
push
loop
mov
and
inc
insl
push
mov
pushf
push
ds
test
adc
cld
outsl
xchg
data16
addr16
stos
push
mov
xchg
dec
fsubs
pop
nop
mov
sbb
mov
lret
mov
cmp
lods
sarb
fs
push
xor
xor
popw
dec
mov
sbbl
xor
pop
pop
lcall
je
inc
lahf
pop
loopne
lcall
fisubrl
cld
fs
push
in
outsl
mov
test
push
stc
icebp
inc
lcall
mov
mov
xchg
sti
les
rorl
ds
cmp
sbb
mov
xor
and
mov
jnp
jnp
mov
pop
inc
xchg
jb
adc
fnstenv
rcll
adc
mov
rcl
pushf
sahf
rol
pop
aas
pop
or
and
sbb
iret
inc
jbe
xchg
and
stos
jns
cltd
sbb
xlat
jecxz
xchg
and
pop
fistpl
gs
and
mov
scas
test
scas
dec
and
ret
das
jae
inc
pop
rcrl
xchg
insb
cld
ljmpw
shll
jge
jecxz
fadds
jg
adc
xchg
pop
push
mov
xor
negb
jecxz
and
pop
cmc
mov
and
fwait
data16
pop
add
cmp
adc
aam
lods
pop
cmp
test
add
in
adc
adc
loope
jp
push
stos
outsl
mov
inc
or
dec
fcmovnu
pusha
popa
icebp
cmp
dec
mov
cmp
in
push
dec
mov
shll
loopne
mov
pop
mov
ljmp
out
jp
std
mov
jg
mov
jge
pop
sbb
cltd
and
and
mov
sub
lcall
clc
loopne
out
fstpt
xchg
push
test
ljmp
lcall
lock
sbb
adc
or
mov
or
push
daa
popa
test
inc
cwtl
sbb
ret
mov
int3
out
mov
xor
icebp
xchg
mov
clc
push
mov
jp
jmp
or
out
stos
es
insb
pop
out
sarl
mov
cmp
add
cs
je
andl
inc
mov
bound
jge
movsb
mov
cltd
imul
cli
push
flds
push
jmp
fstpt
xor
jg
mov
sub
adc
lret
ret
adc
xchg
and
out
sub
sub
pop
add
dec
movsb
pushf
incl
xchg
pop
jmp
repz
test
fisubrl
and
fsubrl
mov
mov
fs
shlb
lret
mov
and
or
cmp
aas
popf
dec
cmp
rolw
cwtl
call
in
adc
stos
enter
sub
xor
mov
cld
add
and
pushf
or
orb
test
push
sub
xchg
mov
pushf
push
xchg
push
mov
lahf
push
aas
clc
mov
pusha
mov
int
pop
cwtl
jl
mov
mov
clc
daa
adc
dec
mov
shrl
in
test
stos
xorl
sub
je
sbb
or
and
outsl
and
test
lods
mov
aaa
rcrl
dec
dec
mov
xor
sarb
test
imul
lds
fs
movsl
jne
das
pop
dec
or
mov
push
xor
push
mul
mov
cmp
das
shrl
mov
movsb
insb
jge
mov
push
add
sti
xchg
cmp
mov
leave
in
jo
add
pop
jno
sar
push
cltd
cmp
hlt
mov
das
adcl
lods
pop
mov
addr16
nop
dec
jno
adcb
insb
cltd
inc
jae
push
jecxz
popf
jmp
hlt
adc
mov
mov
sbb
sub
mov
repnz
enter
sub
cli
mov
mov
pop
std
mov
sub
adc
cmp
stos
and
test
and
push
xor
dec
mov
jmp
pop
or
cld
ja,pn
xchg
insb
repz
jmp
mov
iret
fwait
int3
or
jecxz
shrb
jns
repz
sub
lea
xor
adc
nop
stos
push
mov
popf
xchg
pop
mov
aam
js
fdivs
leave
les
add
mov
jbe
les
pop
hlt
rorl
push
dec
imul
xor
xchg
nop
scas
xchg
cmpsl
addl
lea
pop
xor
jl
pop
aaa
mov
lock
push
jmp
sbb
and
clc
bnd
xor
mov
mov
and
xchg
lods
sub
pop
mov
out
fs
dec
vunpcklps
orl
jle
mov
out
mov
lret
fstp
xor
cmpsb
out
jmp
bnd
jl
rolb
mov
push
mov
xchg
jl
or
and
mov
push
push
push
movsb
in
outsb
add
lret
xor
outsl
push
sbb
dec
mov
dec
add
push
outsl
add
lcall
sbb
pop
and
bound
sub
lcall
lahf
pop
mov
xor
repz
inc
mov
sti
cmp
mov
mov
ret
jmp
ret
jmp
add
or
pushf
dec
bound
push
xchg
sahf
adc
ffreep
ljmp
cmc
mov
and
sub
call
inc
jnp
ds
inc
lret
fs
out
mov
loop
mov
mov
xchg
add
stc
insb
hlt
test
xor
or
fldt
add
popa
inc
jo
repz
daa
add
pop
sub
jg
or
inc
xor
aad
mov
lret
rcrb
inc
nop
fcomp
pusha
scas
sbb
stos
mov
roll
mov
int3
test
push
xchg
mov
popf
and
sbbl
jno
aaa
add
imul
jnp
add
aaa
xor
div
call
faddl
jmp
inc
add
sbb
enter
lock
pop
sbb
push
jmp
push
fidivs
insl
push
sbb
pop
es
subb
or
mov
mov
adc
cli
jecxz
mov
icebp
inc
int3
mov
insb
dec
inc
and
rorl
xor
adc
pop
movsb
fs
repz
or
andb
inc
pop
push
insb
ljmp
fidivrs
out
or
xchg
rorb
mov
push
xor
leave
mov
sbb
mov
mov
or
push
push
pop
add
js,pt
sub
or
outsl
dec
xchg
add
push
inc
fsubrl
inc
jns
scas
pop
into
sbb
and
das
fcom
out
or
xchg
or
inc
imul
sub
in
push
loopne
or
fs
pop
mov
sbb
ss
or
stos
js
dec
cmc
adc
dec
stc
rcrl
je
iret
dec
mov
adc
adc
push
nop
sub
cld
sub
outsb
out
xchg
mov
mov
in
xchg
inc
cmpsl
push
xor
push
insb
mov
rolb
out
push
xor
adc
pop
lahf
mov
push
das
insl
lods
scas
movsb
cmp
mov
sbb
ret
pop
mov
inc
xor
clc
xor
es
cmc
std
mov
fdivs
loopne
adc
sub
idivl
inc
jp
or
ret
xchg
push
jp
cmpsb
bound
or
add
xchg
or
push
xchg
mov
adc
inc
pop
adc
cmp
fucomp
or
out
sub
test
xchg
rorb
fnstenv
or
testb
fwait
imul
fisubrs
xchg
inc
mov
sbb
xchg
aaa
adc
fadds
pop
lret
ljmp
cmc
dec
repz
lret
add
inc
in
push
out
cs
or
iret
int3
inc
adc
jecxz
sub
insb
mov
loop
jno
testb
pushf
jnp
mov
dec
pop
cmp
and
dec
adc
ja
and
lock
xchg
cmp
mov
int3
mov
cli
in
in
fmul
loopne
xchg
dec
cmc
fs
rorl
inc
dec
aas
ljmp
scas
mov
addb
xchg
push
push
loope
jo
mov
mov
iret
xlat
xor
imul
lret
mov
rol
clc
adc
mov
or
and
scas
pavgw
inc
xor
in
dec
enter
jnp
out
jne
dec
int
cmpsl
pop
lock
in
cmp
xor
popa
adc
pop
imul
movsl
jno
inc
jo
mov
movsl
clc
shrb
pop
mov
jbe
in
movsb
xlat
mov
fldenv
push
jnp
fbstp
sahf
push
cmp
or
xchg
and
mov
push
xlat
pop
lock
jnp
or
xor
sahf
shrb
sarb
or
lods
or
jns
and
pop
jo
fdivrs
ss
aaa
xchg
xor
daa
xchg
cmp
xchg
cmp
inc
jnp
cli
ljmp
adc
rcr
js
xchg
push
mov
sub
mov
into
stc
dec
lea
inc
lahf
inc
es
and
aam
repz
shll
das
mov
sahf
mov
out
sbb
js
sub
bswap
adc
jle
push
pushf
mov
sbb
stc
call
cltd
dec
cs
inc
stc
jge
fldenv
movsl
mov
sub
out
inc
push
xor
daa
lods
addl
and
call
mov
xor
into
dec
cmpsl
jo
inc
cwtl
mov
orl
leave
lahf
mov
or
arpl
aaa
inc
or
xor
cwtl
inc
xchg
test
push
sub
xchg
cmp
cmp
cwtl
or
mov
xor
dec
mov
pop
mov
insb
push
mov
dec
cmp
imul
jmp
out
add
xchg
outsl
iret
rcrl
push
enter
jbe
inc
add
xchg
mul
or
scas
inc
popa
or
mov
je
rolb
dec
push
outsb
or
jmp
sbb
mov
add
jae
hlt
or
push
test
xchg
push
adc
mov
fwait
js
push
or
inc
in
jbe
lea
icebp
dec
lahf
push
enter
jae
sahf
sbbb
and
sbb
cli
ret
mov
pop
ret
mov
or
hlt
jl
inc
in
adc
sub
rcrl
call
lret
push
hlt
xchg
adc
mov
call
out
mov
arpl
pop
pop
stos
cmp
mov
test
inc
daa
fstl
sbb
adc
push
pop
cmpb
in
neg
popa
dec
lock
inc
sub
dec
and
lods
cmp
loopne
sbb
push
sbb
mov
sti
das
leave
pop
add
mov
mov
in
in
mov
repz
out
lds
sub
mov
or
call
fwait
pop
push
pop
pusha
data16
mov
mov
pop
xchg
negl
rcrb
aad
ds
iret
test
inc
lcall
and
sbb
shrl
repnz
bound
cltd
xchg
fxch
inc
adc
dec
mov
fistpll
inc
mov
jb
fmuls
insb
fisttpl
ror
call
lock
icebp
outsl
add
int
sbb
pop
mov
sub
mov
mov
jno
xor
xchg
imul
jl
add
jge
lret
fcompp
pop
cmp
mov
mov
enter
push
jnp
int3
ret
xchg
cmp
lret
nop
out
loope
add
dec
xor
fdivs
leave
je
jnp
pushl
and
push
pusha
and
and
jl
in
cmp
push
ja
in
mov
rep
bound
addr16
xor
ret
or
xchg
xchg
inc
mov
out
stos
leave
sbb
jno
push
fcmove
out
mov
pop
aam
lods
inc
pop
adc
jmp
sub
or
in
jmp
jo
push
mov
in
jae
mov
fwait
out
out
push
pop
mov
into
adc
hlt
cld
jne
jp
dec
ret
mov
out
xor
pop
mov
jmp
mov
jle
mov
add
sbb
lret
cmp
imul
das
jecxz
out
inc
and
fwait
pcmpeqd
into
xor
push
cltd
iret
dec
mov
dec
inc
out
pop
mov
pop
push
xchg
bound
jp
out
insb
mov
shlb
test
inc
push
xor
idivl
push
push
leave
push
xor
dec
pusha
aas
xchg
rorl
addr16
or
pop
xchg
xor
cli
dec
mov
ret
shl
test
and
aad
sbb
push
sbb
and
mov
mov
mov
sbb
scas
cmpsl
add
outsl
fdivs
mov
jo
lret
jnp
sub
inc
outsb
pop
jcxz
or
in
sbb
jmp
jecxz
sbb
and
xchg
imul
push
out
mov
lock
ud2
sbb
mov
aad
cmp
stos
push
inc
cld
aaa
shlb
push
lahf
inc
xor
subl
jb
cmp
stos
mov
les
and
push
or
pop
jno
jle
int3
subb
loope
lcall
sbb
movsb
movb
push
pop
push
jno
inc
or
outsl
test
pop
out
sti
inc
push
dec
aam
push
sbb
hlt
stos
add
add
mov
mov
sbb
out
mov
repz
pop
leave
cmp
cmp
das
shlb
lock
jl
inc
push
pop
cli
mov
and
cltd
mov
cltd
sub
test
cmp
xchg
and
adc
add
mov
lret
ljmp
sub
xor
scas
lock
jo
in
pop
mov
mov
test
mov
cli
jp
sub
mov
xlat
negl
into
sub
jp
cmpb
mov
lahf
jle
cmp
popa
or
fnstsw
sarb
sbb
in
sbb
sub
adc
icebp
fstpl
push
cwtl
or
outsl
sub
insb
clc
xchg
out
aaa
dec
pop
ja
push
js
enter
inc
stc
xor
lds
inc
rcrl
in
xchg
fildll
inc
add
insb
jg
dec
push
push
stos
mov
leave
lock
push
sbb
pop
sbb
xor
dec
inc
int
loope
data16
jp
sbb
xor
sub
pop
loopne
push
jb
inc
and
loope
adc
and
ss
aas
pop
and
xchg
xor
mov
inc
sbb
movsb
inc
clc
lea
mov
jns
sbb
or
int
mov
je
cmp
mov
add
in
xor
daa
xchg
iret
fwait
pop
xor
sub
lea
lea
adcl
add
clc
push
cmpsl
notb
fldl
mov
movsb
popfw
mov
out
gs
cmp
pushf
and
pop
fcomp
cmp
and
jge
push
popf
sub
fdivr
adc
inc
leave
movsbl
fcomps
cltd
test
adc
lcall
ds
std
add
push
xor
insb
sbb
sub
cs
xchg
jne
jae
les
jae
dec
enter
pushf
xchg
jae
xor
ret
out
sub
lods
les
adc
add
paddsw
clc
add
inc
dec
aas
jne
stos
nop
fmuls
mov
push
inc
stc
cld
mov
dec
sbb
loopne
call
call
sbb
pop
decl
lods
daa
sarb
mov
mov
test
pushf
or
or
mov
std
sub
and
in
in
call
cmp
inc
sub
cmpb
lock
pop
out
adc
push
shlb
fldl
shrl
cmp
inc
jl
xor
ror
or
add
cmp
add
sub
scas
or
xchg
insl
enter
jne
dec
int
fnstsw
xchg
out
int3
sub
mov
cmp
add
ljmp
out
lea
leave
push
add
push
sar
xor
stos
movsb
jb
adc
or
in
shlb
mov
xchg
pop
sbb
add
ss
jl
dec
in
pop
jg
frstor
cs
int3
ret
push
jno
mov
jbe
add
out
mov
icebp
out
out
test
lock
sbb
inc
aam
fnsave
test
rcrb
sub
push
sub
pop
int
mov
std
mov
dec
cmp
cmc
mov
shrl
dec
xor
lods
repnz
xor
mov
das
mov
jp
fimull
xor
dec
cld
ret
push
ljmp
out
pop
adc
push
mov
ret
loop
jo
xor
jno
xlat
dec
jecxz
xchg
mov
pop
sbb
xchg
cmp
jbe
dec
fdiv
mov
sbb
mov
outsl
dec
or
dec
shl
dec
jg
sub
aad
test
jae
and
xor
stos
ret
mov
loope
dec
enter
cmc
and
sub
imul
xor
inc
sub
loope
cmp
fdivrp
les
in
imul
jecxz
mov
aas
add
cwtl
inc
insb
gs
push
inc
cmpb
jecxz
les
sub
lahf
jle
mov
lcall
aam
or
sbb
out
xchg
cmpsb
test
aad
sarb
ja
outsb
cmp
lcall
or
fidivl
xor
push
dec
inc
mov
jecxz
sbb
test
flds
movsl
mov
add
add
cmc
imul
sbb
adc
repnz
or
adc
shlb
dec
test
xchg
sbb
js
sbb
out
push
pusha
test
cmp
shrb
stos
jecxz
pushf
fldenv
jl
mov
loopne
and
mov
cs
ljmp
sbb
pop
and
sbb
stc
movsb
xchg
jle
sub
dec
xor
jo
mov
pop
jb
cwtl
pop
and
roll
inc
inc
mov
jae
sub
repz
cld
imul
lock
outsb
and
sbb
add
mov
sbb
mov
mov
inc
es
sub
jb
sub
data16
sbb
jnp
movsb
push
mov
adc
inc
fucomi
dec
jo
hlt
push
fmull
push
scas
movsb
sub
pop
and
add
mov
movsl
cmp
jl
sub
fcomp
cmp
cmp
orl
mov
mov
das
iret
das
aam
pop
shl
pop
add
loope
pop
add
enter
sub
je
or
push
mov
dec
inc
mov
xchg
inc
popf
test
add
pop
push
fstpl
sbb
jp
arpl
push
data16
ds
or
fiaddl
adc
mov
add
xor
imul
ret
cli
cmp
mov
cmpsl
adc
add
popa
mov
int3
in
push
sub
pop
cwtl
adc
mov
push
dec
and
nop
int3
or
icebp
pop
and
loope
push
hlt
jb
mov
mov
xchg
pop
stos
orl
cmpsb
dec
add
mov
xor
sti
ret
cmp
shl
jp
or
xchg
in
mov
aam
jl
or
xchg
xlat
test
xor
inc
int3
adc
sub
test
mov
popf
arpl
fs
repnz
ret
loopne
ret
subb
jno
and
out
jns
inc
xchg
pop
mul
dec
jle
mov
cltd
pop
adc
popf
fsubs
pop
mov
out
jmp
jecxz
push
jmp
adc
sahf
push
pop
add
imul
add
mov
ja
hlt
das
mov
jg
mov
sbb
out
push
shrb
xor
dec
cli
fnstsw
cld
xchg
push
int3
sbb
cwtl
scas
pop
add
outsb
cmp
repnz
in
dec
inc
shll
dec
stos
fiadds
mov
xor
mov
jg
push
or
fdivr
mov
sbb
inc
popa
mov
lock
std
push
movsb
out
pop
mov
push
inc
sahf
dec
cwtl
push
xchg
cmp
fdivr
or
adcb
jmp
push
fisttps
mov
add
pop
in
js
xchg
loopne,pn
mov
mov
push
icebp
cmc
jp
or
inc
leave
xor
dec
fisubrs
sub
imul
jecxz
sti
repnz
mov
idivl
inc
aas
lret
rorb
sti
add
dec
pusha
stos
xor
push
cmp
imul
mov
cmp
mov
inc
pop
adc
xchg
push
leave
int
push
mov
sti
xchg
ficomps
pop
dec
ss
into
mov
xorl
daa
idivl
outsb
scas
test
mov
lods
les
add
jnp
mov
add
and
dec
ss
addr16
inc
loop
cwtl
lock
imul
push
inc
stos
mov
mov
iret
cltd
pop
jmp
sti
mov
in
lock
in
add
sti
mov
xor
mov
mov
mov
das
je
fmull
stc
pusha
jl
cmp
push
pushf
les
mov
pop
jne
subb
mov
das
aam
shl
or
or
pusha
ss
adc
jmp
jae
dec
jge
and
inc
push
stos
test
sub
xor
adc
xchg
movb
add
ret
or
iret
adc
and
mov
cltd
xchg
lods
fstps
ror
xlat
adc
push
xchg
or
sub
mov
or
ljmp
bound
repz
stos
dec
in
in
hlt
cmp
cmp
and
out
ds
arpl
scas
sbb
push
test
push
push
pop
pop
inc
mov
mov
nop
mov
xchg
inc
sbb
sbb
inc
pop
jb,pn
or
lea
or
jno
push
xchg
dec
cltd
push
lcall
adc
push
push
mov
sub
mov
mov
mov
dec
pusha
sti
mov
adc
out
sahf
or
jp
push
pop
jo
jecxz
std
out
dec
jae
adc
fdecstp
outsb
rcll
dec
or
test
sti
std
cmp
xchg
mov
dec
mov
sti
shr
pop
sub
push
ds
xchg
mov
xchg
rcll
mov
ret
xlat
mov
dec
xchg
jg
mov
mov
fld
xchg
or
mov
inc
mov
aam
out
jbe
xchg
stc
sbb
sahf
lea
mov
pop
push
sub
jbe
stc
mov
xchg
fs
jge
mov
int
enter
jg
lcall
call
inc
rol
aad
add
enter
push
sarb
sub
mov
mov
outsl
std
outsb
push
mov
lcall
test
loope
mov
add
jne
insl
pop
inc
jns
std
mov
pop
sub
xchg
arpl
mov
cmpsb
dec
push
jge
dec
sbb
cmp
sbb
adc
inc
sbb
popf
fcmovu
and
lods
sbb
dec
into
test
xchg
lret
frstor
or
jmp
data16
or
add
sub
divl
scas
push
insl
hlt
out
shll
rolb
in
inc
jg
and
scas
jo
popa
add
testb
push
jmp
pop
lock
mov
mov
ds
sbbl
push
dec
lock
lret
sub
pop
test
xchg
xchg
jge
add
dec
inc
mov
outsl
cmc
cli
jl
loopne
dec
jge
add
jne
ret
xor
loop
je
mov
ja
dec
and
adc
inc
aad
push
jo
add
sbb
dec
leave
outsb
ret
ret
int3
dec
out
scas
add
sbb
mov
es
add
jmp
fucomp
push
jne
xchg
xchg
ret
je
sub
bswap
lea
nop
pop
mov
std
push
inc
add
push
dec
ffree
jmp
fs
popf
shll
sbb
aam
inc
mov
jb
inc
push
shll
adc
jmp
mov
lods
push
decl
ljmp
jp
lcall
add
bound
adc
aas
jno
cld
sbb
shrl
fdivrs
arpl
lcall
push
vpsubusb
cmpsl
pop
cmp
pusha
dec
push
xchg
xchg
mov
push
aas
dec
in
mov
lods
adcb
mov
sub
inc
popf
or
in
inc
or
mov
testb
mov
dec
out
fsubr
xchg
lea
lds
outsb
inc
repnz
idivl
or
xchg
in
push
adc
jno
insb
push
test
push
clc
mov
das
ficoms
mov
stc
xor
insl
lcall
scas
popl
ss
xchg
pusha
hlt
push
lock
ret
loopne
push
mov
mov
mov
in
aaa
or
stc
lods
or
fmull
jne
sti
shl
push
cmc
std
ret
neg
add
mov
pop
jne
ficompl
loope
pop
out
test
les
fsts
cs
jnp
sub
mov
push
push
fmul
icebp
lret
adc
or
xor
inc
jmp
and
mov
fisttps
mov
js
push
lahf
arpl
dec
std
dec
into
aam
test
outsb
fwait
stos
jmp
jge
loopne
or
jmp
jne
pushf
leave
pop
ret
test
fs
pushl
fisubs
pop
cmp
adc
std
sub
mov
jae
mov
xlat
cltd
enter
dec
stc
pop
cmp
sub
sti
cmpsl
adc
nop
repz
mov
cld
lea
and
pop
dec
xor
js
orl
sub
push
cltd
out
hlt
movsl
lcall
mov
ljmp
lret
les
mov
xor
cmp
sub
je
push
int3
push
mov
pop
lret
adc
jne
sub
insb
xchg
nop
lds
loop
fdivr
sub
movsb
inc
jmp
loop
adcl
mov
loopne
int
pop
into
sahf
sbb
and
jbe
sub
mov
lods
or
inc
jmp
mov
lret
insl
into
test
sbb
gs
add
mov
mov
inc
scas
xchg
stos
lret
inc
dec
stc
and
pop
lock
loope
inc
sub
xchg
mov
sub
sbb
sbb
xchg
xchg
stos
lods
jl
into
ss
or
in
fisubl
inc
ret
stos
jmp
mov
imul
pop
or
jns
into
mul
movsl
jae
rclb
gs
orb
mov
pop
outsb
add
into
push
adc
dec
xor
xor
mov
rcrl
pop
xchg
pop
into
jge
popa
mov
add
pop
cmp
mov
ds
push
outsl
mov
ret
stos
pushf
dec
push
dec
into
cltd
cmp
sub
adc
dec
jnp
arpl
cmp
rorl
int3
mov
stos
or
or
mov
mov
push
add
out
aas
mov
pop
cmp
das
xchg
and
fistl
jno
lods
cmpsb
scas
ljmp
or
mov
mov
or
cmpsb
xor
repz
imul
inc
dec
movsl
add
mov
les
inc
lock
jnp
mov
inc
dec
pop
lock
aas
xchg
mov
cld
mov
pop
jns
sub
mov
sbb
and
mov
jg
inc
mov
scas
sbb
mov
stos
sub
mov
outsb
mov
mov
and
pop
pop
push
out
sahf
fcmovbe
sub
push
arpl
sbb
mov
and
push
pop
es
sti
sahf
test
das
push
add
jmp
movsl
jne
xchg
in
pop
enter
add
fbld
es
inc
sub
es
iret
and
out
sar
adc
jnp
out
jb
repz
mov
jmp
sub
ret
adc
stos
mov
daa
iret
jb
dec
mov
xchg
pushf
shr
lods
ret
mov
in
std
rcll
mov
or
jl
jmp
dec
rcl
sbb
jg
sbb
popa
adc
imul
push
in
adc
jecxz
negl
sahf
in
ret
insl
ljmp
int
and
mov
jne
sbb
testb
push
pop
leave
pop
lcall
cmc
adc
jge
nop
push
test
and
and
xor
jo
add
sarl
ret
add
inc
dec
cmp
dec
fdivs
cmp
ds
lds
and
jo
and
mov
in
lods
xchg
mov
movsb
jmp
adc
pop
stc
xchg
mov
leave
leave
std
jno
movsb
cmpb
cmp
push
cld
adc
push
xor
jns
mov
xchg
sub
sbb
sbbb
outsb
xchg
popl
push
out
mov
and
cmpsl
pop
stc
jg
test
pop
lea
in
inc
cwtl
lahf
enter
xor
roll
test
adc
out
fidivs
mov
mov
mov
test
loop
sbb
mov
and
sub
adc
or
out
lods
sbb
jae
mov
rorb
cmpsb
test
icebp
inc
inc
in
ror
pop
mov
inc
pop
lock
xor
jg
arpl
mov
in
out
das
outsl
insb
int
pop
ljmp
sub
insb
lock
xchg
loopne
rorb
sub
aaa
outsb
mov
int
xchg
mov
je
mov
jae
out
or
xor
cmp
push
and
cld
dec
test
imul
leave
in
and
mov
pop
push
push
adcl
dec
leave
inc
out
xor
test
out
popa
cmpsl
out
push
test
cmp
arpl
dec
adc
into
in
and
xchg
ds
dec
jp
sub
fs
pusha
inc
push
lret
js
cmp
mov
outsb
or
jmp
push
lcall
sub
inc
push
loop
xchg
or
jmp
cs
aam
in
imul
push
sbb
xor
xchg
jns
xchg
aad
leave
mov
jge
fmuls
repnz
stc
sub
enter
jge
mov
sbbb
into
nop
adc
jb
scas
jno
sub
lea
repz
cmovb
and
push
push
in
ljmp
jge
insb
jge
mov
dec
test
ja
dec
xchg
shll
mov
repnz
movsb
jns
push
add
lea
int3
add
sub
sbb
mov
cltd
xor
mov
out
xlat
push
repz
add
cmp
sbb
ret
in
faddl
push
mov
repnz
push
xor
sbbl
push
push
lock
jbe
data16
mov
mov
fstps
inc
sbb
je
js
pop
std
fnsave
xor
stos
ret
jmp
sbb
dec
das
xor
dec
int
daa
adc
inc
test
xchg
enter
dec
daa
lahf
mov
rcll
cmp
lret
mov
in
cmp
mov
clc
push
call
xchg
ljmp
outsl
jne
addb
out
mov
jo
push
push
or
ja
lock
fisttpll
mov
mov
je
jne
and
sub
xchg
xor
mov
dec
pop
ret
xlat
daa
das
sub
stos
in
inc
adc
movsb
sub
ret
jae
dec
je
and
pop
jmp
scas
dec
mov
test
sbb
adc
or
cmc
or
ffreep
jno
shlb
stc
std
pop
cmpl
addl
xor
inc
ret
in
xor
inc
cmp
adc
inc
iret
push
gs
jns
pop
insb
push
or
push
mov
outsb
cmp
jp
xor
push
and
xchg
clc
call
jns
cmp
rcr
inc
insb
adc
xlat
movsb
adc
inc
jno
icebp
mov
xor
inc
insb
shrb
jne
or
cmpb
adc
mov
cmpsl
int
repz
decl
adc
dec
xchg
jb
pop
push
mov
xor
daa
not
cmpsb
mov
imul
lret
mov
dec
test
aam
in
mov
pop
xor
push
nop
mov
andl
add
jge
mov
pop
xchg
or
jae
cli
iret
jge
xchg
out
movb
xchg
repz
pushf
std
sbb
sti
sub
mov
cld
cwtl
inc
paddusw
jnp
push
aaa
call
popa
es
xchg
sbb
jno
rorb
fists
jl
xchg
inc
int
jns
repz
add
mov
sub
fwait
pop
stos
das
mov
add
adc
push
aaa
inc
mov
enter
pop
sbb
stos
int3
ja
mov
jmp
fistl
sub
iret
scas
fwait
insl
pop
and
jl
jbe
repz
int3
adc
stc
lods
outsb
add
xchg
jmp
jo
ja
jl
lret
sub
xchg
jbe
test
outsl
bound
jne
add
inc
sbb
mov
sub
in
fimull
push
inc
scas
mov
add
mov
lods
movsb
out
push
mov
cmc
add
xor
mov
pop
dec
loop
cwtl
push
popa
dec
clc
jmp
ljmp
mov
dec
inc
in
loope
cwtl
xlat
fcoml
sti
or
fmuls
out
and
adc
ljmp
insl
ja
sbb
stc
push
daa
inc
and
push
std
mov
cmp
stc
dec
ficoms
or
popa
mov
cmp
scas
int3
fistpl
les
pop
xchg
leave
pushf
xchg
bound
loopne
inc
xchg
dec
js
cwtl
mov
aaa
cmpsb
sti
push
lock
lods
pop
insl
or
int
div
push
jo
push
mov
int3
repz
out
clc
sub
lods
cmpsb
push
dec
and
repnz
std
mov
test
pop
cmp
pop
mov
mov
pop
jecxz
js
mov
jo
sbb
lods
repz
mov
and
cmc
cwtl
sbbl
pushf
cs
and
repz
pop
or
adcl
push
xor
sub
adc
mov
push
push
outsl
out
pop
or
fisubl
sbb
push
pusha
sti
sarb
push
fwait
xor
test
data16
hlt
cmp
subl
arpl
add
mov
cmp
and
sub
dec
ja
arpl
in
pushl
sub
sbb
mov
jb
push
and
repz
and
mov
mov
xor
jmp
mov
cmp
call
mov
jl
sti
add
test
int3
test
ret
dec
cmp
and
jns
sahf
pop
data16
rolb
fistps
out
jg
lret
fstpt
and
outsl
xor
cli
mov
cmpsb
out
in
int
push
pop
jnp
sbb
inc
mov
lret
fldt
popf
jmp
repnz
movsb
stc
mulb
pop
mov
dec
dec
les
inc
cld
add
addr16
push
adc
daa
inc
fsubrl
push
std
cmpxchg
sbb
out
xor
mov
pop
or
out
and
call
lahf
pop
shll
mov
or
cltd
das
ficoml
outsl
jns
cmp
sub
sbb
mov
loopne
mov
sub
push
sahf
xchg
mov
outsb
fldt
jg
pop
das
in
jl
or
cmp
lods
mul
leave
jb
inc
mov
into
stos
lods
mov
hlt
cltd
xchg
cmp
test
inc
mov
enter
nop
xorb
nop
pop
mov
std
bsr
push
call
ss
ds
dec
sub
jecxz
cmpsb
pop
push
xchg
cmc
dec
or
sbbb
je
xchg
jae
mulb
dec
aam
push
add
push
loopne
mov
lock
push
sti
shr
outsl
sub
aas
xchg
pop
into
mov
jmp
movsb
and
pop
or
ja
xor
test
cmpsb
lea
das
or
jb
mov
add
inc
ljmp
add
rcr
cld
rorl
inc
test
mov
sbb
push
dec
inc
xor
sbb
mov
mov
and
sarb
int
stos
fnstsw
pop
sub
jnp
push
lods
lods
sbb
sahf
imul
push
or
inc
and
adc
cmpsl
lods
cmp
and
xor
out
mov
jle
test
cmpsl
pushf
stos
pushf
cmp
pop
out
push
movsl
lret
adc
imul
sahf
add
cmc
or
ret
rol
cltd
lods
gs
cwtl
stos
cmp
pop
jnp
xor
out
insb
mov
jns
add
cmp
push
fbld
lcall
cmp
out
mov
fcmove
inc
cmpsl
sti
jg
dec
xchg
inc
cs
test
and
inc
or
in
mov
add
and
fwait
js
in
add
push
pop
push
cltd
or
and
mov
or
push
es
jecxz
add
jo
and
and
sbb
lcall
les
jle
fildl
sub
adc
add
jo
insl
sbb
jnp
rolb
test
out
or
lods
inc
xlat
jmp
ret
push
mov
nop
aaa
dec
xchg
jns
sbb
movsl
mov
jno
and
lea
fsubs
into
xchg
fcomps
arpl
in
outsb
or
xchg
xchg
ficomps
shll
and
pop
jmp
cmpsl
sub
shrl
stos
in
push
inc
lods
in
adc
ljmp
pop
aaa
push
xor
outsb
xchg
sti
push
aam
or
jle
pop
fwait
enter
lods
mov
dec
mov
ret
or
pavgb
pop
push
cmp
mov
sub
insl
adc
scas
hlt
mov
imul
aaa
sub
imul
int
adc
sti
imul
scas
test
ja
jae
inc
loopne
sub
imul
push
pop
adc
push
fwait
in
test
mov
xlat
xor
mov
shr
sub
dec
inc
cwtl
mov
loopne
xchg
bound
inc
add
inc
jo
out
dec
push
insb
aam
in
mov
mov
int3
jge
push
xchg
push
rcll
ljmp
or
out
xchg
imul
cmpsl
lea
gs
xchg
mov
or
xchg
push
mov
mov
pop
loopne
inc
outsl
and
or
mov
js
xchg
rcl
cmp
add
out
xor
pop
pop
xchg
sub
sbb
aaa
lds
stos
jb
or
cltd
jno
xor
jle
mov
pusha
sub
mov
jge
jb
xchg
leave
outsl
lret
inc
xchg
cltd
or
dec
sbb
xlat
mov
popl
mov
jno
xor
cld
scas
in
jp
pop
add
lahf
inc
fcoml
fisttpl
adc
stos
cmc
add
xor
aad
and
xor
sbb
add
push
pop
aad
jmp
push
into
mov
mov
mov
jl
mov
or
outsl
andb
repz
jns
outsb
dec
dec
add
inc
lea
daa
gs
push
inc
or
mov
mov
mov
xchg
in
fidivrl
xlat
imul
jge
push
sbb
test
enter
shlb
stos
das
mov
or
xor
sahf
cld
pop
dec
idivl
sbb
cmp
push
in
inc
cmpsl
inc
shrl
mov
jl
mov
loop
cld
add
mov
sbb
or
idivb
stos
pop
ljmp
push
das
xor
addr16
push
rcll
pop
lods
xlat
fistl
cmpl
ja
sub
je
std
xchg
into
repnz
xchg
adc
mov
dec
fnstenv
adc
sub
in
push
xchg
or
lcall
outsb
stos
ret
insb
jle
jno
pop
ss
add
std
push
cmp
and
ficoms
lret
mov
adc
inc
mov
lods
pop
mov
lret
mov
or
xchg
shlb
stos
les
test
or
push
pop
insb
mov
stc
in
fcoms
aad
int3
leave
inc
sahf
sbb
andb
inc
imul
es
pushf
das
jb
sahf
mov
jae
mov
ret
iret
mov
lds
xchg
fistl
int
mov
cmp
push
mov
adc
adc
ss
cmp
xor
mov
and
pop
rorl
and
xlat
clc
xor
or
leave
push
testb
push
jle
mov
pop
jmp
lea
pushf
fdivl
mov
xchg
pushf
aaa
adc
sub
stc
mov
lock
out
outsl
mov
inc
mov
push
call
bound
loopne
ljmp
gs
xor
mov
push
sub
fdivs
cwtl
add
mov
mov
inc
arpl
adc
lea
dec
aam
lret
dec
mov
sub
test
push
add
mov
loopne
fstl
add
sahf
fisubs
dec
ljmp
shll
jno
lcall
jo
std
outsl
adc
test
femms
mov
xor
aas
lds
ljmp
dec
insb
add
idivb
adc
aas
movl
pop
pop
stc
cld
push
xor
or
cwtl
mov
or
or
dec
mov
in
icebp
sahf
cmc
or
sbb
movsl
sahf
jge
fcoms
cltd
dec
push
mov
loop
pop
dec
jne
sub
mov
mov
push
out
push
gs
fsts
sub
insl
jo
mov
pop
jae
cld
fldenv
out
clc
push
mov
mov
cmp
push
dec
xlat
mov
mov
xor
jmp
stc
scas
int
js
sub
movsb
adc
mov
mov
jnp
pop
and
dec
dec
dec
aam
sub
cmp
or
mov
xchg
xlat
sbb
jo
adc
fistpl
rorb
inc
mov
jl
xor
mov
push
daa
daa
sub
shl
repnz
mull
popf
cmc
rcrl
pop
cli
xchg
jmp
pop
clc
mov
pop
or
cmp
jg
or
sub
aam
loope
out
mov
pusha
pop
mov
add
and
jns
imul
mov
mov
pop
mov
adc
jo
push
sbb
shrl
call
sahf
imul
mov
lret
or
mov
xchg
je
mov
mov
push
jbe
mov
sbb
into
push
stc
mov
mov
sbb
jo
scas
mov
setb
cmp
pop
aam
and
test
pop
xchg
mov
out
insl
cmp
xor
cs
pop
cmpsl
nop
sub
pop
fchs
pop
aam
sub
ljmp
stos
and
xchg
and
inc
jg
cs
xor
jl
mov
add
inc
fbld
movsb
loope
or
rcrl
adc
and
sub
add
ret
sti
dec
stos
idivb
fadds
rorb
pop
xor
jnp
aas
std
mov
loopne
cmp
rolb
pop
mov
xor
mov
jbe
dec
test
or
pop
gs
pop
inc
add
and
bnd
sbb
xchg
mov
inc
cmp
mov
popa
mov
pop
xor
pop
std
sar
test
jp
sarl
addr16
add
xor
mov
jno
lret
push
mov
divb
ss
inc
dec
jno
into
and
in
int
fs
scas
inc
sub
mov
xchg
adc
xor
outsl
add
shl
dec
jle
inc
outsb
sbb
mov
ret
jo
mov
dec
rclb
lea
lds
stos
sbb
pusha
in
imul
sub
sbb
ljmp
mov
cmp
or
pop
lcall
mov
les
std
lahf
mov
cmp
or
bnd
mov
xlat
js
leave
out
mov
outsl
ss
iret
ss
or
in
push
rorb
sbb
test
scas
mov
insb
pop
inc
adc
ja
sbb
clc
add
mov
mov
xchg
subl
movsb
xchg
lea
sbb
mov
jae
lret
sbb
scas
jmp
cld
out
fs
or
sti
xchg
cltd
sub
fimull
push
xchg
fisubrl
dec
jecxz
xchg
sbb
inc
fsubrs
fld
inc
sti
xchg
mov
icebp
adcl
mov
pusha
or
jp
insl
fs
jae
jge
jmp
mov
inc
jmp
jnp
loop
test
fidivrs
ljmp
xchg
mov
adc
pop
xchg
daa
or
rorb
lahf
stc
xchg
aad
dec
outsl
stc
jge
enter
call
stos
mov
mov
or
loope
call
jno
fstl
cmp
ror
pop
aad
addb
mov
mov
in
repnz
lock
mov
push
into
shlb
hlt
pusha
mov
shrb
aas
popa
mov
adc
outsl
ja
pop
mov
popa
test
pop
mov
jo
sbb
or
in
sub
mov
xlat
mov
mov
out
lds
std
cmpl
xchg
dec
mov
imul
sbb
push
out
sbb
fcoms
inc
je
leave
cli
pusha
lahf
xor
sub
dec
sub
adc
xor
orb
sbb
incl
xchg
xchg
mov
scas
dec
inc
xlat
xchg
testb
ljmp
and
and
shll
jb
mov
mov
ret
das
int
repz
xchg
enter
or
in
ds
xchg
ds
push
and
inc
dec
push
test
packuswb
push
out
movsb
xchg
mov
fldl
inc
repnz
add
addb
pop
xchg
stos
pop
lret
ficoml
jbe
mov
jmp
mov
and
lods
adcb
popf
imul
hlt
lret
nop
ljmp
cmp
xor
std
mov
mov
and
mov
rcll
mov
movsb
stos
xor
sub
cltd
push
fidivl
mov
scas
shrl
imul
push
into
sarl
stos
in
sbb
add
aam
jnp
jbe
jo
inc
and
je
hlt
jle
or
cmp
mov
pop
jg
cmp
adc
ret
jb
pop
xchg
lcall
cmp
ss
popa
inc
gs
pop
jae
dec
or
jg
push
bound
adcb
int3
mov
cmp
scas
add
cmpsb
ret
xchg
push
imul
rcrb
lret
cs
test
xor
xor
mov
int
adc
cmp
aaa
mov
cmc
popf
lock
mov
and
stos
inc
mov
push
jns
movsb
ret
into
aaa
outsb
xchg
cltd
mov
mov
inc
inc
xlat
jecxz
xrelease
jnp
push
and
testb
popf
icebp
cmp
out
jle
insl
xchg
movsb
shrb
inc
jne
idiv
call
icebp
inc
pop
test
mov
push
pusha
cld
add
fisubrs
jns
jb
movsb
mov
jge
inc
or
mov
shlb
cmp
cmc
iret
xchg
or
scas
xchg
mov
mov
push
jnp
es
xchg
mov
cmc
lret
repnz
mov
push
jle
movsl
or
mov
add
divb
out
aam
push
pop
push
jne
cmpsb
push
and
push
pusha
dec
clc
jecxz
gs
xor
adc
sub
scas
xchg
test
push
js
test
stc
aad
imul
arpl
mov
xor
jge
jp
ss
jp
loope
fldcw
sti
adc
cwtl
int
mov
lods
mov
xchg
in
aas
mov
mov
xchg
xor
scas
pop
sarb
cmp
pop
lret
pop
and
imul
adc
xchg
int
inc
sbb
pop
sahf
jmp
sahf
jb
xchg
test
cmp
in
call
jl
ss
stos
sbb
push
mov
push
test
or
inc
lret
jb
and
dec
add
outsl
lods
cs
mov
dec
out
adc
push
out
repz
fildll
push
outsb
outsb
dec
lret
int3
jecxz
jmp
stos
adc
push
cmp
pop
cmp
shl
mov
xorl
ja
repnz
or
cmp
xchg
ss
fsubr
pop
or
jmp
adc
cli
push
stc
popw
dec
cmp
add
xlat
fcmovne
std
or
pop
gs
cmp
adc
aaa
mov
cmp
fcomip
sub
jl
cmp
cld
mov
pop
push
jns
xchg
notl
insb
mov
stos
std
dec
inc
mov
jp
ret
mov
pop
jg
aam
pop
cmp
cs
js
mov
push
sub
jg
xor
cwtl
scas
and
xchg
xlat
or
cmp
jge
outsl
adc
cmpsl
das
pop
movsl
adc
pop
out
jnp
sahf
call
inc
jge
cmp
xor
xchg
aad
pop
mov
and
sahf
data16
fistpl
adc
ret
lcall
cmp
fsubrs
fwait
mov
inc
dec
mulb
lret
js
xchg
cld
mov
sub
lock
jno
inc
call
inc
jmp
cmp
mov
push
dec
cmp
mov
push
xlat
int
popf
cli
pop
cli
lea
mov
shrl
mov
rolb
rcrb
pushf
hlt
ljmp
add
adc
fcmovnb
mov
or
aad
cs
ljmp
clc
hlt
and
mov
xchg
rcrb
jns
cmp
push
mov
cmp
pop
stos
push
pop
lds
sahf
add
ds
push
int3
int3
and
stc
mov
xor
mov
xchg
call
or
dec
mov
in
lock
sahf
sbb
fcmovbe
loopne
ret
int
movsb
pop
adc
fwait
jb
js
call
jns
xchg
jp
loopne
adcb
movsl
movsb
stos
sub
scas
mov
push
popa
mov
cmp
inc
cmp
jp
movl
ds
sbb
and
cmpsl
lods
jno
push
jnp
into
mov
dec
out
repz
cs
pop
and
out
in
aam
cmpsl
loope
inc
test
xor
in
xchg
pop
sub
mov
jae
shll
xor
sub
test
xor
dec
inc
adc
enter
cltd
push
shlb
jecxz
icebp
pop
insl
cmp
pop
jno
and
mov
adc
and
stos
iret
sub
add
pop
push
jne
xchg
pusha
cmp
xchg
and
mov
dec
arpl
and
push
fsubrs
fsts
insl
lcall
andl
sub
out
pop
sub
inc
fistpll
inc
mov
mov
sbb
and
mov
mov
pushf
test
adc
add
cmp
cmpsb
std
inc
xchg
scas
int
lods
mov
jno
and
pop
pop
mov
mov
dec
sbbb
add
jmp
addr16
clc
loop
sbb
inc
pop
popf
hlt
mov
xor
mov
lods
movsb
jmp
sarb
fcoml
mov
add
fisttpl
in
test
inc
aaa
cmc
jmp
push
icebp
sub
lds
mov
pop
pop
sub
scas
jg
rol
jb
pushf
xchg
pop
xorl
aas
jo
ret
leave
pushf
lahf
xchg
fs
enter
push
xchg
jbe
or
iret
xor
aas
hlt
push
int3
shrl
inc
in
mov
pushf
aad
addb
mov
mov
xchg
sbb
or
jbe
xchg
sbb
sbb
orb
xrelease
adc
sahf
jne
push
movsl
mov
mov
mov
test
adc
test
pop
fsts
mov
add
ss
dec
in
xor
idivl
int3
dec
jo
add
daa
popa
ja
test
or
push
push
jns
jmp
mov
mov
out
push
mov
es
imul
arpl
jle
jae
add
fimuls
nop
add
dec
dec
mov
clc
mov
popf
mov
pop
adc
sti
push
pop
jns
rorb
mov
lods
in
fwait
lods
outsl
mov
les
stos
out
in
mov
mov
icebp
mov
imul
sarb
jo
mov
iret
xchg
sbb
fsubl
jmp
jp
or
sub
jp
int
paddsb
pop
inc
cmpsb
lret
arpl
push
jg
sbb
fdivrl
sub
fidivs
cmpsb
out
sbbl
adc
dec
xor
fsub
gs
ljmp
add
daa
mov
sub
mov
pushf
test
mov
add
cmp
aaa
das
mov
jmp
andb
push
int3
mov
pslld
push
inc
and
addb
test
push
xor
cmpb
aam
lds
in
add
dec
add
outsl
jmp
xchg
jae
mov
xor
loope
imul
mov
xchg
dec
stos
xchg
mov
mov
lods
rcll
add
ss
or
xchg
sbb
fs
add
inc
in
or
mov
cld
pop
lret
xor
in
pop
hlt
pop
pop
jg
xchg
jne
shrb
push
push
jns
ja
movsl
cwtl
sti
lcall
loop
icebp
stos
fdivl
add
mov
mov
xor
shll
imul
shl
inc
jge
stos
jecxz
inc
je
xchg
inc
mov
xor
push
imul
mov
adc
je
cmp
inc
lock
pop
jp
aad
aam
add
shl
mov
add
popa
cmp
pop
push
pop
cmp
cmp
into
es
stos
xlat
daa
imul
inc
jne
adc
in
push
or
mov
insb
xor
push
mov
ja
fsubs
push
cltd
jecxz
jle
cmc
xor
xchg
test
fidivl
cli
lock
pop
mov
cmp
jb
adc
xor
push
xchg
cmc
ficoml
ljmp
icebp
dec
dec
cmpsb
daa
mov
iret
addr16
dec
lods
or
das
add
jl
sub
and
add
pop
scas
in
mov
sbb
mov
cmp
orl
cmc
pop
in
nop
push
xor
test
pop
repnz
xchg
jg
mov
mov
and
ret
test
mov
idivb
ljmp
mov
fldenv
push
rcl
rorb
stc
test
xchg
jne
push
pop
fstl
outsl
fwait
xor
jecxz,pn
xchg
in
in
inc
jge
lret
out
leave
ss
adc
ret
lcall
inc
inc
fucom
rorl
mov
sahf
xchg
mov
ret
stos
cmpsb
mov
xor
sbb
jae
cli
jo
mov
cltd
and
inc
xchg
call
popa
fwait
cmc
mov
adc
aad
and
inc
or
ds
push
popf
mov
ds
or
les
inc
int
or
pusha
sti
mov
add
cld
jbe
xor
push
and
push
lcall
dec
sahf
scas
cmp
jno
popa
bound
enter
ds
stos
push
pusha
mov
loope
mov
test
adc
punpckldq
push
movsl
loopne
sub
dec
jns
in
jo
jnp
push
mov
jnp
outsl
or
addr16
sahf
mov
jl
popf
jbe
aas
sbb
xor
aaa
xor
cltd
sbb
push
adc
inc
enter
sub
cmp
push
test
fisubrl
push
cmp
mov
xor
in
pop
ljmp
stos
push
std
lock
push
cmpsb
mov
mov
inc
sub
cs
or
push
out
into
jae
xor
cmp
or
xchg
adcl
pusha
pushf
xor
sub
das
enter
aad
adc
in
push
call
les
out
fists
xchg
jge
xor
lea
int
clc
dec
in
jg,pn
sub
pop
popa
pop
js
loope
leave
mov
not
das
mov
ss
xchg
pop
out
sub
lock
aam
hlt
sub
adc
sti
adc
mov
mov
dec
shl
and
and
cmp
mov
sub
inc
mov
lret
jge
andl
imul
fwait
std
adc
mov
xchg
sub
lods
xor
lds
das
iret
fwait
std
mov
sahf
mov
popa
cmpsb
jns
iret
dec
xor
inc
mov
ljmp
cmp
icebp
sub
xchg
cmpsb
test
ret
insl
cmp
and
pusha
xchg
cmc
xchg
cmp
les
ja
nop
mull
push
mulb
pusha
clc
pop
sub
cmpsl
lret
fisttpl
pop
int3
ret
add
add
pop
lods
sub
nop
mov
insl
pop
inc
lea
bswap
sahf
out
test
mov
jbe
out
mov
and
mov
int3
push
add
shrl
dec
mov
dec
addb
notl
lods
testb
mov
or
fnstcw
imul
mov
cmpsl
mov
rcrb
cmc
adc
es
adc
inc
cmp
std
xorl
mov
out
and
incb
adc
fwait
pop
mov
dec
pop
cmp
pop
subl
aaa
xchg
sub
outsl
push
adc
jno
cli
je
popa
jp
adc
leave
jp
daa
pop
jbe
push
es
dec
inc
mov
and
add
insb
push
mov
stos
jns
pop
xor
jmp
mov
pop
add
fstpt
mov
adc
insl
fs
mov
xchg
inc
sbb
cmc
enter
stos
cmp
add
test
repnz
xchg
sbb
pop
xchg
dec
js
ss
mov
aad
xor
mov
scas
pop
inc
shrb
out
mov
ficoms
orb
ljmp
jae
fimull
mov
jbe
cmp
hlt
popf
aam
mov
clc
jne
mov
icebp
dec
or
push
lahf
xor
gs
cs
insl
loopne
dec
outsb
insb
sbb
in
adc
fdivs
fcomi
push
mov
mov
rcrb
in
ss
xchg
adc
sbb
aas
mov
inc
adc
or
mov
rorb
lret
das
pop
pop
gs
stc
test
lret
cmp
xchg
push
add
sbb
push
sub
insb
arpl
mov
push
pop
cmp
xchg
push
jmp
fmuls
andps
out
rorb
into
xor
jnp
push
sbb
lea
mov
js
test
mov
jle
loop
lods
mov
fcmovb
into
adc
insb
outsl
pop
lcall
mov
xlat
sarl
lods
mov
les
cmpsb
dec
out
mov
daa
xchg
push
inc
jae
cmp
cmp
lret
mov
hlt
mov
add
call
inc
sbb
jl
dec
pop
call
push
outsb
rcrb
sub
js
adc
stos
or
sbb
cs
cmc
cmova
sub
sub
clc
sbb
mov
repnz
nop
mov
in
push
xorl
push
pushf
aam
push
insl
frstor
mov
orl
push
xchg
imul
das
jno
xor
adc
sbb
andb
jne
mov
dec
push
pushf
pop
out
enter
xchg
push
adc
inc
sub
fistps
in
sbb
sub
iret
adc
xchg
lods
imul
pusha
lds
leave
imul
jno
pop
stos
imul
mov
cmp
sub
in
cmp
xchg
mov
mov
aam
iret
inc
mov
lret
sbb
enter
mov
enter
xchg
in
mov
sub
push
jo
push
mov
test
iret
outsb
sbb
in
fdivrs
cmp
dec
lock
or
sbb
or
add
push
push
ret
add
and
rcll
mov
arpl
adc
xchg
hlt
cmpsl
jmp
jno
pop
cmp
jl
pop
pop
nop
mov
push
sahf
xchg
pop
leave
negb
cmpsb
adc
dec
mov
jns
sbb
icebp
xor
sti
cli
xchg
push
jnp
lcall
mov
and
cmp
jle
pop
lea
mov
sbbl
push
jns
sarb
xor
mov
mov
mov
push
enter
leave
or
les
push
cmpsl
sub
shr
mull
lods
cltd
pop
jge
ds
ja
punpckhdq
adc
aas
dec
adc
addr16
dec
jns
decb
aad
imul
adc
popf
sbb
adc
cmc
mov
roll
movsl
dec
jle
sbb
rcrl
pop
addr16
mov
imul
aaa
dec
dec
arpl
sub
pop
push
xchg
shll
and
sbb
stos
je
add
mov
mov
mov
dec
sbb
adc
cmp
nop
mov
mov
dec
std
mov
enter
mov
mov
jp
inc
cmp
sub
jmp
aas
or
das
aaa
adcb
cli
or
mov
pop
mov
push
xchg
orl
jbe
pop
outsb
or
mov
call
xchg
xchg
inc
pop
xchg
popa
mov
std
aam
test
jmp
pcmpeqd
add
lcall
mov
lret
clc
mov
cli
mov
sub
sahf
test
pusha
or
cmp
ficoms
inc
xchg
lret
push
xor
xlat
lods
sub
mov
subl
popl
jl
sub
aad
mov
push
rolb
jmp
or
sbb
mov
jo
cmp
popa
movsl
int3
sub
xor
and
movsb
enter
mov
loope,pn
in
push
fldcw
in
add
mov
pop
inc
call
push
pushl
pop
sub
sahf
sti
xchg
push
in
das
movsb
adc
loope
sbb
insl
das
dec
cltd
test
outsb
push
ret
pop
jecxz
push
fimuls
add
jmp
push
mov
jge
inc
push
test
push
xor
hlt
gs
jge
andb
sub
inc
or
and
mov
shrl
imul
repnz
sub
lods
push
into
divb
nop
sbb
bswap
popa
in
loopne
and
fwait
ds
lahf
push
mov
mov
ss
fucomi
mov
mov
out
add
and
pop
lock
mov
cmp
mov
jnp
jo
xchg
mov
and
mov
lret
cmc
test
xchg
sub
xchg
sbb
mov
jmp
adc
jle
or
lret
jno
push
je
fldt
sbb
pushf
scas
out
pop
nop
sbb
xchg
inc
cmp
mov
cld
xor
lret
push
insl
cmpsb
and
popf
xlat
mov
insl
sarb
test
or
sbb
dec
call
cld
call
push
xchg
mov
dec
mov
out
je
mov
sbb
insb
jmp
insb
xor
aas
test
aad
bound
sub
fnstcw
dec
dec
sub
rcl
adc
idivl
les
aas
iret
xorb
cltd
xchg
inc
sub
loop
int
std
cmpsl
adc
push
inc
xchg
js
fs
movsl
repnz
pmulhw
aam
dec
scas
cmpsl
sbb
inc
sub
mov
idiv
movsb
std
mov
and
pop
negb
mov
dec
pop
inc
lds
cltd
and
push
iret
scas
lea
stos
in
repz
imul
mov
push
cli
scas
pop
js
fadd
and
lock
lret
clc
xchg
jg
add
in
push
fstl
loopne
call
sbb
push
lock
pop
repz
cmpsl
into
dec
cmp
jo
inc
xchg
ljmp
lahf
mov
or
int
loop
je
inc
jle
std
add
or
cmp
xor
lea
jg
fwait
dec
push
inc
mov
test
movsb
mul
inc
cmp
lcall
push
pop
mov
repz
movsl
fidivl
add
insb
jo
xchg
aam
fwait
movsl
mov
out
jl
addl
loop
xor
push
add
fildl
xchg
inc
lret
mov
adc
mov
repnz
and
jno
push
pop
push
push
xchg
pop
jns
fs
and
cmp
push
xor
ds
daa
push
sbb
imul
adcl
and
aad
lret
sbbl
ljmp
leave
je
sub
int3
pushfw
lds
jg
push
mov
xchg
xchg
stos
repz
pop
xchg
jge
into
cmp
arpl
ss
xchg
aam
stos
fimull
out
and
xchg
jecxz
bound
inc
loopne
test
adc
lods
mov
add
shll
push
cmp
sub
leave
mov
push
mov
and
adc
sub
in
add
dec
and
imul
cld
pop
test
jne
sbb
mov
shll
jo
roll
pop
pop
lret
test
fbstp
mov
aad
mov
pop
add
mov
int3
cmp
or
shll
jnp
add
dec
lret
mov
sar
mov
add
popa
ds
and
push
out
imul
dec
ja
test
and
push
adc
pop
dec
dec
clc
cmp
cmp
or
out
inc
nop
pop
jmp
xchg
iret
add
in
les
mov
mov
sahf
clc
mov
ret
adcb
jnp
xchg
jg
insb
sahf
loop
pop
cmp
inc
push
fmul
das
dec
inc
cmp
aam
fwait
dec
loope
call
insl
div
mov
lret
sbb
js
fcomp
fmuls
pop
call
pop
std
xlat
ljmp
int
adc
mov
add
stos
jae
pop
loopne
sub
sub
ficoms
lea
sub
jg
es
fistps
and
mov
jne
fcmovnbe
mov
int3
test
cmpsb
add
xor
insl
lret
xchg
or
mov
pop
cs
movsb
inc
adc
push
adc
mov
xchg
imull
pop
arpl
adc
and
cmp
mov
ljmp
pop
adc
lods
loope
and
orb
insb
or
movl
push
mov
inc
mov
testl
inc
outsb
jno
mov
mov
sbb
xchg
mov
repz
push
sub
jne
leave
ret
shll
mov
rcrb
lret
in
pushf
cmp
pop
int
cmp
and
aad
ss
push
or
push
dec
pop
jecxz
dec
pop
test
sub
sarb
repz
or
mov
jge
cmp
pop
fadds
inc
test
xchg
scas
shlb
sbb
fnstsw
fistl
pop
push
stc
cltd
lea
xor
aam
jmp
cmp
pop
sub
sahf
mov
adc
addr16
ret
in
fcoms
stos
mov
adc
push
shrl
sbb
cmovl
aaa
cld
shrb
pop
mov
xor
sbb
or
gs
cmpsl
add
adc
test
mov
faddl
mov
jecxz,pt
fs
pop
inc
cwtl
sbb
mov
popa
pop
imul
jge
inc
xchg
rcrb
sub
pop
cmp
inc
into
hlt
lock
xor
mov
dec
ljmp
repz
lret
push
push
cmp
add
push
pop
hlt
xor
cmp
mov
lret
sub
push
xchg
test
aas
repz
xor
fs
in
mov
sti
xorl
test
dec
outsl
test
pusha
das
pushf
xor
pop
pop
cmp
fsubrl
mov
jo
das
shll
stos
lods
arpl
ret
ss
xor
pop
dec
add
pop
into
cwtl
mov
dec
fidivrs
xchg
mov
data16
or
add
cmc
push
cld
dec
loopne
insb
dec
pop
xchg
jg
jns
int3
subb
xor
gs
arpl
add
lret
sub
mov
or
test
lahf
cltd
dec
sbb
mov
adc
adc
cmp
push
daa
sbb
out
jmp
or
pop
xchg
int
les
and
xchg
repnz
add
adcb
leave
sub
and
xorl
pop
pusha
cmp
jge
ret
mov
enter
mov
jno
call
or
into
rclb
outsb
fdiv
mov
out
aaa
into
fcoms
mov
cmp
pop
ret
and
pop
sbbw
adc
pop
jg
adc
lods
cmp
subl
or
ret
or
sbb
adc
and
jg
mov
scas
loopne
iret
scas
sbb
jnp
and
enter
mov
pushf
mov
sub
insl
jo,pt
pushl
mov
or
aad
xchg
cwtl
js
or
inc
loop
jnp
lods
mov
push
shll
and
push
or
gs
ret
jns
add
pop
mov
cmp
imul
jle
mov
test
sub
hlt
in
mov
add
sahf
xor
push
inc
ljmp
pop
addr16
gs
hlt
lock
xchg
sti
test
fisttpl
repz
xor
outsl
sbb
repnz
sub
aaa
xor
test
popl
inc
mov
mov
fdivrs
insl
addr16
movl
loopne
mov
pop
xor
in
jp
mov
cmc
mov
or
xchg
push
cmp
push
inc
sbb
stos
cmpsl
cli
sub
inc
lods
or
push
pop
xor
das
cmp
cmpsb
mov
mov
mov
and
lea
dec
mulb
xor
or
or
ret
shll
enter
test
jnp
dec
mov
test
shrl
jo
sti
dec
lea
in
and
cmp
mov
pop
filds
adc
xchg
mov
jae
aas
inc
sub
pop
repz
fs
cld
jnp,pt
pop
pop
dec
insb
das
loopne
add
jmp
adcl
xor
repz
pop
cwtl
iret
stos
xchg
filds
mov
xor
pop
pop
lods
mov
dec
movsl
mov
push
mov
fwait
pop
cmp
pop
daa
in
add
mov
jne
or
add
iret
xor
mov
inc
imul
sbb
enter
push
sbb
shl
sub
adc
jge
mov
lcall
jg
jb
outsl
sbb
into
sti
das
pop
cmpsl
adc
cwtl
xchg
arpl
jmp
pop
insl
push
add
jp
test
mov
cmpsb
cmp
std
push
shrb
aam
cmp
push
ret
stos
lret
push
mov
gs
js
iret
or
add
sti
push
ret
addb
fcoml
xlat
outsb
mov
add
push
hlt
aas
mov
andb
pusha
scas
xchg
cld
sub
imul
out
mov
jnp
add
fbstp
cmp
idivb
gs
jno
jns
jle
dec
sarb
aas
cld
and
das
add
xor
cmpsl
std
out
lods
stc
shrb
pop
cbtw
test
cmp
outsb
inc
mov
out
mov
mov
pop
paddw
into
mov
xlat
adc
test
push
push
add
rcrl
and
arpl
xlat
or
mov
aam
shlb
and
int
fbstp
sbb
lahf
lods
mov
insl
add
dec
repz
repnz
movsb
inc
nop
sub
in
flds
sub
mov
inc
pop
cli
ret
pop
mov
mov
gs
fcomps
jb
stc
or
or
in
fisttps
or
cmp
call
mov
adc
lods
out
add
xor
call
inc
mov
scas
fwait
lret
inc
xlat
cmp
ret
lcall
std
add
scas
inc
mov
push
fstl
rorb
adc
adc
jnp
je
lret
mov
jnp
in
adc
rolb
lds
arpl
adc
sbb
adc
xor
leave
xchg
cld
fimull
stos
movsl
lds
mov
icebp
movsb
test
fucomip
test
push
mov
jecxz
mov
frstor
mov
mov
imul
lock
lods
jecxz
jnp
outsl
pop
pushf
dec
and
sti
push
imul
inc
daa
mov
test
mov
nop
add
or
fidivs
fsubp
jae
and
int3
fxch
popa
and
fldt
movb
lods
add
cmpsl
es
dec
fstpt
inc
in
fs
inc
xchg
sub
pushf
cltd
add
icebp
xor
movsb
cmpb
sub
lods
inc
mov
pop
fadd
fidivrs
dec
jmp
inc
mov
dec
adcl
bswap
xor
inc
jns
or
pop
cmp
jmp
xlat
faddl
pop
fwait
cld
mov
movsb
xchg
fcomip
sub
dec
jno
cmp
fiadds
or
jb
jmp
adc
nop
lods
rorb
mov
cld
pop
cmp
ret
inc
std
jb
cmp
in
icebp
cli
inc
mov
add
xchg
adc
outsb
adc
xchg
push
xchg
and
lret
pop
cmp
fcomip
xchg
mov
lock
call
popf
pop
push
inc
stos
lock
test
or
das
mov
sbb
in
xorb
push
sbb
fsubr
icebp
addr16
loopne
jmp
sbb
fsubrs
je
lods
mov
jne
nop
sub
mov
xor
mov
sbb
test
clc
lock
and
in
xchg
or
mov
push
inc
dec
mov
mov
sbb
adc
in
bound
cmp
add
testb
daa
aaa
call
push
lods
movsb
mov
data16
shll
pop
or
inc
xor
jle
stos
mov
cmp
enter
outsb
inc
and
es
cs
or
sar
pop
pop
jne
sbb
adc
and
dec
aaa
adc
jns
int
or
pop
push
xor
mov
rcl
jno
dec
and
in
push
insl
stc
xchg
pop
cmp
add
xor
lcall
arpl
mov
dec
in
jge
mov
fsubr
in
mov
and
jns
dec
outsb
cmp
cmpsb
xor
jb
in
push
cmpsl
mov
xchg
dec
mov
or
movsb
sarb
sar
push
cmp
sbb
xchg
add
int
push
pusha
push
mov
push
pop
jb
mov
xchg
lret
lods
test
enter
mov
or
icebp
gs
lcall
clc
ja
push
out
lcall
inc
xor
out
dec
inc
jno
inc
mov
fsubr
in
dec
xchg
jbe
xchg
dec
mov
dec
test
dec
dec
cltd
loop
shll
call
xchg
mov
scas
and
stos
out
mov
out
dec
dec
mov
and
mov
cmp
pop
pop
rep
data16
pop
cmpl
mov
lds
dec
mov
mov
cmpl
int
dec
out
jo
push
mov
or
mov
rcll
sub
insb
dec
xchg
lods
cmp
mov
stos
or
cwtl
inc
adc
pop
inc
adc
fisttps
popf
sub
shll
push
or
jae
lcall
fsubs
add
adc
stos
mov
loope
cmpb
pushf
mov
popf
mov
outsl
cmovno
push
test
fsts
mov
lock
mov
cmpl
clc
cli
pop
adc
sbbb
pusha
adc
hlt
pusha
sub
and
add
cmpsb
sbb
pusha
inc
dec
jnp
jecxz
cmp
movsl
dec
inc
aad
insl
sbb
mov
flds
adc
push
xchg
popf
lock
lods
mov
dec
out
and
sahf
aam
inc
out
xorb
dec
fs
sti
mov
sbb
cltd
xor
testl
mov
sub
sub
scas
add
jns
pop
jbe
add
notb
cmp
lods
fwait
int3
dec
bt
sbb
pop
adc
push
fisubrs
or
or
lcall
push
ficoms
fcoml
mov
push
ja
mov
lahf
lods
cmp
dec
fldl
xor
sbb
xchg
push
xchg
cltd
sub
dec
xchg
mov
sub
mov
or
out
mov
repnz
loopne
mov
shll
hlt
repnz
inc
mov
cmp
das
out
andb
outsl
jne
pusha
push
xchg
scas
and
mov
insl
pop
sbb
das
pop
rorl
test
inc
mov
push
js
sbb
ds
test
mov
gs
bound
jb
daa
xchg
js
and
aaa
xchg
insl
adc
mov
sahf
dec
mov
push
js
add
or
loope
sbbl
ss
xchg
lahf
jmp
sbb
mov
cmp
ja
xor
inc
in
mov
mov
pop
add
mov
jns
pop
mov
fisubs
mov
mov
arpl
nop
jne
add
jecxz
out
rep
shlb
or
sbb
pop
je
adc
int
xlat
sub
pop
and
mov
inc
negb
icebp
cmp
add
idivb
inc
hlt
inc
add
fs
test
xor
test
mov
sub
and
fidivrl
sbb
xlat
in
jae
jno
mov
push
sar
jge
out
inc
lahf
adc
pushf
lret
nop
adc
ds
cmp
push
insb
sub
add
ficoml
lds
pop
or
xchg
pop
fmuls
mov
ljmp
mov
inc
repz
jns
and
or
add
test
mov
and
out
insl
in
fldl
jno
je
punpckldq
add
subb
in
nop
enter
sub
iret
in
mov
inc
cltd
test
mov
frstor
jmp
adc
add
mov
xchg
int3
or
lds
adc
sbb
push
repz
dec
mov
pusha
fs
add
outsl
das
sub
mov
xchg
push
neg
pop
mov
fnsave
sbb
xchg
mov
inc
jecxz
push
mov
push
xor
ja
xor
push
stos
add
lea
add
jns
in
xchg
mov
mov
aaa
iret
shll
sarl
or
mov
lods
movsl
jno,pt
cmp
fstpl
push
loop
mov
mov
add
clc
orb
les
out
mov
sub
fnstcw
sbb
push
adc
lret
add
mov
stos
icebp
rorb
hlt
fwait
sbb
xchg
mov
insl
lods
pop
cmp
jmp
sub
lret
jmp
aaa
jle
cmp
xor
sbb
out
pop
inc
std
out
test
test
nop
fiaddl
pop
push
or
repz
jl
inc
mov
or
push
cmpsl
add
pop
scas
inc
cmpsb
out
inc
sbb
mov
xor
cmpb
imul
xchg
rolb
leave
mov
mov
das
movsl
inc
sub
xor
rolb
mov
in
sub
mov
mov
dec
inc
iret
inc
lods
ss
bsf
sbb
sub
subb
imul
insl
inc
push
jb
xchg
dec
adc
les
jo
xchg
mov
les
jmp
call
cs
out
and
xor
movsl
ljmp
or
int3
jae
subb
mov
das
ja
les
mov
jne
cmc
cmp
fsubrs
insl
jb
mov
sbb
ss
in
sbb
popl
jb
subb
sti
adc
in
adc
mov
cmpl
jb
cmpsb
lret
jge
jnp
aaa
add
and
push
shll
xchg
inc
xchg
mov
cmp
pusha
jge
mov
sbb
add
push
lret
adc
jae
xchg
push
jle
fadd
cld
inc
add
cmp
xchg
mov
mov
push
rorb
inc
xchg
movsb
js
data16
mov
addr16
test
pushf
pop
into
lds
sti
cwtl
jns
test
scas
mov
and
enter
mov
xchg
add
push
int3
sbb
pop
push
dec
xchg
mov
pop
jge
aam
push
xor
imul
mov
mov
push
or
cmc
xchg
inc
and
push
clc
fisubrs
inc
stc
imul
pop
add
repnz
cmp
and
or
push
mov
outsb
jl
add
into
pop
ds
sahf
cmp
and
call
and
mov
hlt
test
cmc
popa
ja
test
iret
insb
jge
arpl
fsubs
push
push
iret
les
loop
mov
add
mov
pop
insb
bound
mov
mov
mov
mov
xor
xchg
bound
shrb
cli
test
popa
rorb
aad
idivb
enter
push
add
or
into
shl
xor
cmp
dec
inc
pop
pop
mov
sbb
loop
mov
jo
cmp
add
scas
jl
dec
in
add
adc
inc
out
dec
lahf
outsb
pop
test
icebp
cmc
inc
pop
push
jne
imul
movsb
dec
sub
negl
or
repnz
xadd
mov
mov
pop
fiadds
jne
inc
sbb
out
cmc
inc
push
ds
mov
popf
ja
cltd
mov
repz
fwait
xchg
test
loope
sbb
stos
mov
adcb
dec
push
imul
std
jecxz
pop
mov
xor
adc
ficomps
mov
xor
xchg
dec
lods
adc
cwtl
pushl
xor
adc
inc
pop
loopne
add
push
dec
or
fdivrs
in
mov
sub
lret
jne
and
lahf
flds
popf
jne,pn
sbb
xor
insl
sbbb
inc
push
rol
shrl
dec
jmp
jmp
add
jl
shl
lcall
lods
out
imul
jb
sahf
dec
xlat
add
test
pop
mov
adc
ss
add
inc
push
jmp
xchg
push
and
or
das
addr16
lds
jmp
rorl
enter
clc
jb
scas
xchg
daa
lods
cmpsl
mov
iret
jg
or
mov
cli
mov
cmp
ffree
xor
lds
ss
jne
lret
or
mov
xor
dec
fsincos
xlat
pop
shrl
mov
cltd
pop
jnp
mov
mov
fnstsw
imul
xchg
lahf
xchg
mov
sbbl
xchg
fdivl
jb
adc
enter
jbe
mov
sub
sbb
or
cmp
in
inc
in
pop
mov
dec
mov
mov
loop
adc
push
pop
mov
push
frstor
in
mov
push
jbe
out
adcb
mov
push
andl
dec
fiadds
xchg
mov
movb
sbb
or
test
mov
push
mov
adc
addr16
fisttps
push
enter
cmp
xchg
push
je
and
push
pop
fimuls
inc
lcall
pop
aad
pop
dec
xchg
xchg
pop
ss
outsb
push
inc
add
test
popa
add
cmpl
ss
filds
xchg
mov
mov
push
jmp
mov
adc
sub
pushf
mov
sahf
push
mov
xor
push
icebp
sbb
outsb
outsl
loope
clc
push
or
push
push
xchg
roll
mov
jp
sbb
test
pop
mov
fidivs
movsl
rorl
or
mov
xadd
mov
inc
xor
sbb
pop
setg
xor
ror
push
fmuls
out
fistpll
cmp
out
ret
mov
push
fs
fwait
jg
mov
decl
xchg
roll
scas
cwtl
movb
jae
inc
ret
mov
pop
daa
mov
mov
int
jo
and
mov
movsl
push
cltd
test
int3
loopne
stos
gs
test
scas
cmp
or
inc
out
movsl
sbb
xchg
pop
push
mov
int
movsb
jl
test
inc
add
mov
je
loope
xchg
rolb
and
jge
dec
in
adc
movsl
iret
xchg
stos
aas
test
adc
xchg
cli
in
cmp
outsl
cltd
aad
xchg
push
mov
pop
pop
add
ret
fidivrl
cmp
ret
sbb
inc
dec
addr16
rcll
push
pop
shlb
jno
inc
mov
xchg
addr16
add
sti
imulb
sub
sbb
pop
mov
daa
xchg
and
mov
pop
test
lahf
out
in
mov
inc
scas
rol
sub
dec
fs
jmp
in
imul
cmp
lods
leave
push
and
test
jbe
sbb
rclb
mov
pusha
int
out
cmp
or
or
icebp
movsb
shll
nop
daa
cmp
dec
pusha
leave
in
jo
xchg
bound
into
rcll
xchg
inc
popf
cmp
cmp
rcll
push
cmp
and
movsl
inc
sub
push
mov
jns
add
cmpsl
adc
rcr
push
sar
sbb
scas
lock
hlt
addr16
repz
mov
sbb
ja
inc
jle
pop
sub
jbe
loope
push
lock
roll
sub
adc
sub
inc
pushl
loope
pop
popa
jns
or
divb
aaa
lock
mov
sbb
cld
test
add
inc
mov
lods
cld
mov
lock
push
mov
sub
mov
jecxz
xchg
push
pop
dec
or
sar
pop
arpl
imul
push
xchg
mov
jae
jnp
and
repnz
mov
cs
push
rcrb
fcomps
mov
test
popf
dec
push
mov
stc
xor
orl
shrb
cli
mov
mov
push
sarb
mov
push
push
sbb
push
in
and
cmp
cmc
mov
xchg
aaa
fdivrs
push
push
xor
sbbl
lock
mov
sbb
aad
scas
mov
stos
nop
jne
pop
push
cmp
std
adc
shll
mov
daa
mov
scas
mov
push
pop
sahf
stc
popf
and
xlat
nop
pop
jmp
aaa
lret
and
inc
roll
sti
cld
adc
aaa
adc
je
mov
test
jmp
xchg
out
jl
arpl
jno
shll
lods
fildll
push
out
ja
mov
call
mov
push
push
ljmp
les
sub
mov
out
fcoms
add
xchg
lds
xchg
fs
loop
jecxz
clc
or
cwtl
daa
cmp
sub
faddp
sbb
je
aaa
cmp
jmp
mov
hlt
fdivrl
and
ret
mov
test
inc
negb
arpl
lahf
sarl
out
cs
insb
mov
inc
adc
fidivs
add
fwait
xor
add
fists
add
add
push
xchg
arpl
rcrb
pop
add
cmp
es
jae,pt
or
stos
mov
xchg
adc
inc
push
sub
add
call
push
xchg
jp
ret
out
mov
inc
sbb
sub
iret
icebp
lea
enter
out
in
lds
shr
lods
outsl
pop
lods
ss
icebp
cmc
lcall
cmp
mov
jo
test
mov
xchg
inc
rcr
stc
adc
call
mov
ret
out
sub
cmp
jg
scas
cmp
inc
pusha
sbb
lcall
push
idivb
mov
daa
sahf
pop
mov
arpl
pop
cmp
repnz
add
pop
mov
fldenv
adc
push
adc
add
sub
mov
imul
fcmovnu
mov
xor
xor
pusha
orb
aad
jno
sbb
and
decl
outsb
sarl
in
incb
jl
and
xchg
xor
lret
sub
and
popf
das
sub
stos
inc
nop
cwtl
jne
stos
push
cmc
stc
inc
sub
xor
rcrb
adc
enter
cmp
push
subl
lock
loopew
mov
push
adc
aam
cltd
push
mov
mov
fcom
fstpl
movsl
pop
pushf
jmp
cmp
inc
mov
shl
mov
rolb
jg
add
mov
outsl
mov
mov
cld
mov
int3
in
dec
pop
int3
je
inc
dec
add
mov
sbb
cmp
ljmp
inc
sub
inc
fwait
addb
fld
test
ret
mov
mov
or
sbb
mov
test
movsl
mov
shl
xchg
cmp
mov
cli
mov
ljmp
push
inc
push
jmp
dec
cwtl
out
int
mov
ret
cmpsl
imul
mov
xor
pop
int
push
in
pushf
insb
inc
les
xlat
cmp
insl
cwtl
cmp
push
mov
sahf
jmp
xchg
jg
inc
mov
inc
jle
jns
fists
rcrb
daa
rcll
and
mov
neg
or
and
pop
fldcw
sub
cld
add
dec
jmp
clc
push
loope
sarb
in
aas
in
out
sbb
lahf
in
insb
sub
in
jp
movsb
pop
insl
sbb
lods
jle
or
stc
roll
and
in
adc
into
ja
cltd
or
ss
cmp
ret
jns
scas
outsb
pop
addr16
call
xchg
sbb
push
lods
loop
loopne
lcall
jno
pushf
enter
loop
dec
test
sti
clc
je
mov
jns
cmp
xchg
repz
cltd
inc
mov
cmpl
or
aaa
aam
test
jp
aad
jae
sbb
jno
shll
inc
cmp
addl
cld
sub
cli
xlat
mov
popa
aas
jmp
pop
rcr
jnp
jmp
cli
adc
scas
sbb
mov
loopne
mov
insb
push
je
hlt
jno
test
loop
call
test
outsb
je
dec
lretw
bound
adc
out
dec
push
ret
jecxz
xcrypt-ofb
cmpsl
jmp
pop
std
test
mov
out
push
cmp
inc
leave
daa
call
insb
mov
pop
inc
or
jl
inc
aas
ss
ds
loopne
pop
inc
cmp
or
mov
dec
pop
push
movsl
push
sub
push
mov
dec
mov
xor
pop
js,pn
in
fnstenv
ret
mov
push
leave
cli
or
push
loope
xchg
cmc
mov
int3
mov
cld
push
adc
imul
or
jno
pop
decb
jg
xchg
push
pop
mov
fcompl
ss
sahf
or
sub
fs
dec
push
xchg
int
stos
mov
popa
bound
loopne
sbb
cmpsb
xor
fld
enter
or
jmp
js
xchg
je
jne
mov
mov
fldcw
inc
hlt
push
pop
xor
jne
test
or
inc
cmp
cltd
jg
and
aam
enter
bound
or
iret
lock
adc
lahf
or
test
and
xchg
aad
and
push
das
cmp
cmp
push
enter
push
xchg
cs
ja
jmp
hlt
mov
loopne
jle
pop
xchg
xor
gs
out
pop
iret
inc
aad
fsubrs
daa
add
cmp
pop
sbb
mov
mov
jbe
cmp
mov
leave
mov
mov
pop
add
pop
insb
xor
add
pusha
fmuls
inc
xchg
xchg
loope
jbe
fsts
fistpl
fists
call
sbb
dec
dec
repz
cmp
std
clc
dec
pop
ret
or
leave
sti
cmp
mov
sub
outsb
in
pop
add
out
sti
fildll
hlt
dec
loop
lahf
sti
push
lret
xchg
add
or
pop
and
and
ret
arpl
mov
inc
pop
test
leave
sbb
sti
fs
ret
jne
cmpsb
mov
mov
push
gs
adc
mov
cwtl
sbb
dec
in
jns
xchg
mov
jg
jae
push
and
inc
pop
mov
push
lahf
dec
xchg
or
sbb
adc
ss
mov
js
push
inc
cld
xorl
dec
loop
stc
or
mov
fists
or
sahf
cmp
scas
shrb
int3
faddl
add
in
cld
jne
popa
test
repz
jbe
sbbb
dec
push
popa
xor
movsb
rcll
and
mov
out
jle
pop
sbb
je
or
mov
fnsave
push
fcoml
cmpsb
ja
popa
aas
loop
mov
cld
jle
mov
out
push
dec
xor
pop
jmp
push
arpl
enter
and
das
push
and
cmp
cmp
movsl
inc
jbe
adc
fistpl
cmp
jne
fst
xchg
cwtl
scas
inc
mov
movsl
aas
icebp
jb
scas
cmpb
aas
das
or
stos
jge
jl
js
ljmp
sub
mov
inc
adcl
dec
int
mov
push
loope
outsb
add
and
adc
ret
cltd
or
popf
or
mov
scas
aas
cld
pop
pop
lods
aas
sbbb
pop
sahf
push
das
je
movsl
test
mov
mov
mov
lcall
imul
movsl
mov
std
mov
and
mov
les
dec
cli
nop
xlat
xor
out
divb
lock
jecxz
inc
sbb
in
scas
daa
lahf
xor
imul
cmp
mov
stos
dec
sti
lret
push
addr16
jmp
sbb
fstl
loopne
and
stc
xchg
sub
movaps
mov
pop
sahf
cwtl
adc
divl
add
pop
jmp
fdivrl
mov
cs
idiv
push
xstore-rng
cmpsl
call
or
xor
fldt
test
mov
mov
lds
push
leave
test
add
add
loopne
push
stos
xor
das
test
push
sarl
out
pop
in
add
push
out
jp
cli
fwait
xchg
or
push
aas
jp
loop
std
sub
fs
pop
lret
sarb
stos
lds
dec
aad
out
shr
sbb
add
je
jmp
into
dec
cmp
cmp
jecxz
add
adc
inc
cmc
push
mov
cmp
ror
adc
inc
leave
data16
pop
iret
cmpsb
adc
or
lods
pop
mov
lods
repnz
adc
nop
or
out
add
sub
jmp
lret
mov
jo
iret
stos
mov
fisubrl
push
test
cmp
push
cmpsl
dec
outsl
inc
sub
ret
aaa
sbb
fsts
jns
out
cltd
pop
repnz
lahf
orl
mov
or
xchg
divl
pop
fs
cli
pop
repz
push
jbe
jne
inc
fwait
jae
or
xchg
cmc
sub
pusha
clc
dec
xchg
into
mov
push
mov
cmp
sub
in
xchg
lahf
stos
test
ss
shrb
push
xchg
dec
sub
mov
sahf
bswap
dec
and
sbb
cwtl
and
insb
add
pop
inc
movsb
imul
out
sarl
sti
daa
adc
ljmp
ja
jecxz
dec
insl
adc
mov
adc
nop
mov
pop
fisttpll
daa
scas
sub
mov
push
scas
lahf
add
leave
mov
mov
mov
adc
cmpsb
pop
ret
inc
lea
adc
and
xchg
mov
xor
ss
ljmp
fidivs
xchg
xchg
dec
sarl
ja
sbb
lcall
push
les
adc
sub
fldl
insb
into
push
and
lds
jno
mov
mov
sbbb
fwait
cmp
adc
adc
xor
pusha
jmp
pop
dec
xchg
lahf
fidivl
gs
lret
in
inc
scas
cmp
mov
nop
fdivs
jne
xor
insb
xchg
frstor
cmp
push
xor
lds
lock
mov
cmp
mov
jnp
mov
in
inc
sar
pop
lahf
sar
subl
mov
and
out
sbb
push
sbb
sbbb
fildl
test
sbbl
sub
popa
out
lea
inc
or
jbe
enter
sbb
es
mov
cmc
add
push
fiaddl
mov
cltd
movsb
xchg
mov
mov
sub
insl
push
xchg
dec
add
dec
enter
roll
jno
lahf
fs
cmpsl
icebp
mov
pop
sbb
out
dec
mov
call
sbb
sub
fwait
in
hlt
fisubs
xor
jae
cmp
and
mov
jne
xor
ret
mov
sbb
jecxz
xor
insb
ds
cmp
mov
pop
popa
das
insl
adc
sub
inc
or
shlb
pop
cmp
arpl
movsb
lahf
pusha
movsb
adc
sbb
add
push
jp
std
mov
jg
sub
mov
jnp
cmp
push
cmp
aam
subl
mov
lcall
lock
pop
pop
sbb
mov
test
push
or
mov
scas
adc
inc
lock
jl
push
mov
adc
bound
and
xchg
scas
sbb
jg
cmp
cmp
filds
cli
sub
inc
scas
xor
jmp
ljmp
jnp
jb
fidivl
cmpsl
dec
adc
fxch
sbb
das
push
or
adc
fcomi
aaa
mov
mov
popf
imul
adc
hlt
pop
pop
adc
xor
push
push
lods
xchg
or
nop
add
mov
mov
push
sbb
cmp
nop
inc
mov
repnz
and
shl
adc
sub
dec
jmp
and
iret
sub
xchg
lods
repnz
outsl
mov
pusha
cmp
mov
cli
mov
jo
xchg
out
and
scas
pop
pushf
pop
jno
enter
sbbb
insl
ja
js
orb
sti
daa
bound
ljmp
fadd
xor
jmp
ret
test
or
or
or
fs
inc
mov
mov
sub
or
cmpsb
out
sub
into
cli
test
pop
add
pop
enter
rorl
mov
pop
mov
jns
les
lret
test
add
push
mov
add
inc
stc
sub
sbb
cs
mov
loope
cmp
push
jo
test
pop
dec
lock
into
pop
sub
cmp
insl
xchg
mov
mov
and
cmp
cmc
mov
data16
and
fsubrs
aad
pop
pushf
or
nop
push
cmp
scas
fidivs
lret
enter
adc
pop
enter
or
mov
push
pop
xor
rolb
loope
lret
imul
divl
adc
push
cld
dec
push
jne
pusha
sbb
pop
hlt
loope
scas
testb
lods
dec
popa
jl
jg
inc
in
mov
ficoml
jecxz
mov
push
fstl
fsubr
xor
pop
nop
mov
ljmp
push
xchg
and
xor
pop
push
scas
and
push
dec
lcall
jmp
ret
jecxz
aaa
dec
sub
pop
sbb
shl
sbb
dec
mov
jb
cmp
movsb
xor
cmc
lahf
sbb
out
pop
aam
out
enter
cmpsl
jg
nop
xchg
aad
loop
jae
mov
and
cmp
push
aaa
scas
je
aam
stc
mov
and
stos
insb
mov
adc
xchg
in
ss
or
cmp
daa
test
das
mov
idivb
cmp
cli
mov
lods
rcr
xchg
fwait
push
push
mov
xchg
mov
hlt
ja
scas
in
xor
mov
lock
gs
xor
pop
movsb
xor
jbe
adc
push
mov
icebp
inc
stos
sbb
cltd
xchg
mov
xchg
mov
clc
hlt
xchg
lahf
test
addr16
into
inc
lea
in
lods
cmp
lock
xor
out
jge
sbb
pop
mov
lds
rorb
lods
pop
mov
cli
push
out
or
lahf
test
test
sarb
ret
pop
outsb
arpl
leave
imul
or
sbb
or
aaa
cmp
fdivrs
aas
push
orl
dec
cltd
push
mov
adc
xor
dec
jle
inc
addr16
ss
bound
xchg
loopne
mov
dec
cs
stc
mov
in
sti
sarb
fldl
es
cmp
push
sub
mov
pop
mov
daa
pop
shl
jle
sub
mov
lret
ja
add
sub
push
das
adc
fidivs
mov
push
and
cmp
mov
pop
cld
mov
sub
xchg
mov
mov
jl
sbb
jo
adc
add
push
scas
into
sbb
into
out
insb
and
in
jmp
inc
test
cld
pop
push
xor
mov
das
popf
mov
lock
into
jbe
cltd
rolb
rorl
into
arpl
jo
adc
inc
daa
adc
sub
push
lret
push
lds
jb
daa
popf
hlt
test
xchg
push
fsubr
imul
hlt
movsb
xor
jae
push
mov
lds
in
xor
xor
and
mov
sbb
push
push
daa
pop
inc
mov
sarl
push
outsl
dec
fisttps
mov
data16
xchg
xorl
repz
xor
ja
mov
gs
dec
mov
repnz
clc
cli
mov
push
jnp
push
mov
rorl
and
int
fldt
out
mov
notb
cmp
and
push
les
inc
into
nop
mov
cmp
or
sub
imul
jg
data16
jge
add
aas
aam
addr16
aad
enter
popa
and
jbe
movsb
fcmovnb
les
sub
mov
or
inc
test
and
fisttps
xchg
sbb
xchg
lds
sub
pop
xchg
int
push
aaa
cmp
lods
fsubs
sub
shll
inc
push
jnp
sbb
and
inc
lods
pop
sbb
cmp
fcmovne
add
jg
imul
popa
loop
pop
insb
push
mov
out
aam
mulb
out
popf
inc
out
push
jo
add
fisubrl
jne
cli
jg
mov
sub
lret
mov
jl
aaa
mov
lret
push
xchg
push
scas
test
jo
mov
cmp
ss
and
mov
push
or
sti
lret
movsl
fstp
ret
aaa
lds
mov
les
mov
adc
jl
dec
pop
cli
mov
das
pop
sbb
adc
outsb
or
adc
insb
rcll
pop
icebp
push
sbb
inc
push
in
mov
subb
lcall
mov
stc
mov
adc
ja
xlat
xchg
ficompl
ret
add
xorb
in
and
jno
cmp
xchg
xor
mov
cli
sub
jne
xor
push
xor
lods
call
pusha
rcrb
jle
lahf
add
and
jmp
enter
pushf
fwait
dec
or
and
mov
popf
mov
dec
mov
rclb
adc
sbb
ja
stos
pop
sbb
sub
insl
xor
sbb
bnd
icebp
imul
sahf
js
ja
cmpb
fdivs
sub
test
add
sti
insl
sbb
insl
mov
pop
aas
jae
enter
daa
or
adc
sub
xchg
sub
mov
inc
sti
clc
lcall
rcr
cld
cmp
jg
jg
mov
dec
imul
sbb
xor
lret
sub
add
ljmp
adc
repz
jno
pop
pop
and
stos
and
push
cli
cmpsl
push
mov
dec
mov
call
push
scas
adc
out
sub
and
mov
in
ror
enter
and
lret
cmp
mov
jne
xorl
loop
mov
mov
adc
push
push
mov
sbb
aad
flds
imul
add
push
sub
xchg
inc
mov
ss
add
stos
mov
adc
notl
aas
push
into
jbe
shlb
and
push
mov
pop
push
lds
mov
leave
xchg
jo
or
push
fs
push
push
mov
fiaddl
pop
mov
mov
mov
sub
repz
test
rolb
inc
push
int
lea
sub
test
cmp
int
and
push
dec
and
xor
sbb
jmp
movsb
add
fdivrs
jo
or
mov
adc
insb
ljmpw
push
sub
lods
ret
icebp
popa
sbb
lods
jl
and
es
in
add
push
sbb
dec
adc
inc
mov
mov
or
cmc
ss
in
repz
outsb
and
addb
lret
dec
mov
add
mov
xor
and
stos
jg
data16
jle
lods
jne
incl
push
fbstp
mov
pushl
sbb
mov
loope
dec
outsb
loop
jno
mov
mov
jne
add
sub
mov
mov
ret
cmp
loopne
or
outsl
cs
dec
inc
inc
jo
fwait
cs
test
xchg
lods
pop
jae
ss
push
xor
push
clc
xchg
out
sub
xchg
jns
xlat
inc
stos
notl
out
in
mov
inc
mov
lret
mov
mov
or
inc
jle
sahf
cmp
xchg
fcmovbe
test
pushf
loop
aas
lock
cmpsb
test
mov
jae
xor
fwait
iret
stos
add
mov
dec
dec
push
pop
in
clc
or
xchg
cmp
ja
jo
inc
cmp
and
stos
fldl
mov
or
mov
aaa
iret
inc
std
jg
aaa
std
dec
loop
or
adc
cltd
fwait
andb
mulb
rcl
sbb
mov
dec
dec
mov
and
in
hlt
add
call
je
xor
cmc
and
push
insl
sub
push
xor
fcompl
xchg
ss
pop
cmp
sti
or
int
jbe
mov
push
repnz
int
fimull
sbb
rorl
int3
mov
andb
jge
inc
out
in
inc
adc
adc
sbb
pop
dec
movsl
aas
sbb
repz
sub
and
push
repz
int
mull
pop
jb
andb
std
lock
ret
push
inc
movsb
and
sbb
push
lods
mov
insl
addr16
iret
add
add
jl
repz
es
hlt
repnz
fbld
inc
sub
jmp
jne
mov
aas
mov
inc
jb
call
fxch
std
aaa
pop
xchg
mov
ds
bnd
xor
xlat
inc
adc
push
clc
bound
mov
ss
jno
xchg
decb
or
jo
scas
sbb
xchg
push
addps
mov
dec
test
xor
fisubl
outsl
sarb
cwtl
cs
insl
xor
pop
mov
xlat
jmp
data16
and
mov
pop
add
mov
mov
aam
lret
cmpsb
push
cmpl
fidivs
ss
pop
xchg
ror
xchg
loop
arpl
popa
ss
divl
xor
and
dec
ja
add
or
mov
jne
push
fistps
fwait
jmp
mov
jl
loope
jno
mov
aad
in
mov
ja
mov
jmp
enter
mov
mov
imul
dec
test
dec
sub
xchg
lock
jg
outsb
loop
loopew
imul
mov
jb
cmc
sti
or
das
pop
stc
ds
lds
fsubrs
inc
mov
mull
test
aad
lcall
mov
out
mov
jb
cmp
imul
stos
fmul
mov
mov
in
pop
jns
es
fidivrl
pop
test
je
repz
sar
push
and
mov
xchg
sub
and
out
aad
pop
imul
jnp
adc
or
sub
dec
pop
popf
jmp
pop
add
xor
xlat
call
xor
dec
cmp
mov
and
arpl
mov
pusha
lea
popa
inc
xorl
sbb
inc
out
mov
into
mov
xchg
jns
jg
fs
nop
mov
stos
popf
push
fldl
fisubrs
push
dec
jo
xor
repz
xlat
sbb
mov
and
xchg
ror
mov
popl
ljmp
shll
sub
inc
sub
mov
cmp
jmp
push
push
ret
les
push
pusha
sti
push
pop
or
out
gs
outsl
push
in
jmp
add
xchg
out
or
adc
pop
mov
sbb
xor
ret
out
jg
rcrb
adc
fstps
push
push
nop
pushl
out
push
popf
enter
jmp
lods
fcmovnbe
fnstcw
mov
out
xchg
pop
jmp
dec
jnp,pt
push
or
adc
sbbl
daa
mov
data16
lcall
mov
inc
xchg
rclb
cmp
notb
stos
daa
lahf
jns
sub
pop
jmp
aaa
mov
test
movsl
mov
and
mov
push
in
inc
xchg
int3
jno
cs
js
xchg
jmp
sub
fmulp
pop
scas
mov
rorb
inc
cltd
mov
cmp
xchg
fistl
aas
jnp
xor
daa
nop
cli
mov
mov
xchg
outsb
adc
out
sbb
adc
pop
rcrb
and
leave
inc
rcr
xchg
mov
notl
xchg
rcr
xor
aas
es
dec
pop
fs
sbb
cmp
push
mov
mov
fnstenv
mov
lea
and
xchg
les
inc
sarb
adc
popa
outsb
adc
sbb
mov
xchg
and
stos
test
and
mov
addr16
daa
and
andl
out
dec
mov
mov
push
xor
in
xchg
jl
dec
imul
hlt
test
pop
in
adc
push
cmp
dec
mov
enter
shr
lods
pop
jge
add
push
push
push
div
fistpl
pop
dec
jmp
xor
mov
loop
nop
mov
daa
mov
movsl
ljmp
xor
push
jo
aad
adc
dec
decl
and
shll
or
arpl
ror
push
mov
and
inc
sbb
jecxz
std
add
pop
sbb
subb
jmp
lock
pop
dec
ret
dec
xor
leave
xor
movsb
add
adc
mov
dec
pop
vandps
adc
aas
jecxz
subl
adc
or
jl
je
xchg
ret
imul
sub
ret
mov
lret
jmp
pop
pop
je
andb
in
and
jecxz
sub
pop
cmpsb
pop
stos
cmpsb
test
jp
fdivs
push
push
add
repnz
dec
es
lods
sbbl
orl
inc
lock
aas
sbb
jns
flds
fidivrl
rorb
mov
rorb
xchg
gs
sub
sbb
push
mov
xchg
cmp
jo
stos
outsb
ljmp
pop
push
inc
out
fdivl
pop
jg
ret
inc
hlt
xor
mov
nopl
ret
and
clc
movsl
xor
outsl
pop
add
fldt
pop
adc
loope
aam
les
jb
sbb
push
dec
fadd
hlt
push
cmp
xchg
dec
test
adc
movsb
dec
test
mov
sub
and
adc
arpl
jmp
mov
out
adc
fbstp
enter
movsl
popa
push
adc
sbb
pusha
mov
gs
mov
movsl
jns
push
xchg
push
add
adc
xchg
scas
icebp
dec
enter
jg
outsb
lea
inc
in
shlb
jle
inc
sbb
and
mov
inc
sbb
nopl
dec
cmc
repz
lea
mov
cmc
sarl
cltd
jg
mov
popa
loopne
out
mov
mov
pop
inc
sub
cmp
push
jle
inc
sbb
xor
aaa
xor
fcoms
call
cltd
jnp
aam
xchg
ljmp
cmp
stos
lcall
add
and
mov
iret
popf
sub
xor
iret
xor
dec
xor
pop
cwtl
ljmp
cmp
push
imul
add
lds
xchg
cmpsl
fs
dec
inc
inc
pop
in
xor
push
mov
xchg
jl
add
mov
adc
mov
iret
out
shr
jecxz
push
js
stos
jp
ja
out
add
add
pop
and
inc
adc
lea
mov
jg
xor
negb
xchg
dec
sbb
add
out
pop
adc
push
repnz
call
and
shll
mov
push
pop
and
jl
inc
pop
std
jl
jg
inc
das
xor
sbb
leave
xchg
jge
cs
dec
jne
in
arpl
and
sub
adc
addb
stos
out
insb
xor
enter
negl
in
lods
mov
test
lret
insl
int
shrl
lods
or
aam
jl
out
jo
inc
pop
xor
jmp
xor
cmc
lods
sbb
dec
xchg
xchg
in
and
jle
dec
mov
in
fnstcw
sbb
bound
sahf
sub
and
cmp
insl
cli
sub
cwtl
popa
jo
dec
outsl
xor
push
inc
pop
fidivs
cltd
adc
mov
lods
cwtl
cmpsl
lcall
or
or
fmuls
and
or
insb
push
sbb
ljmp
iret
std
mov
std
jp
pop
mov
mov
xor
cli
mov
mov
cmp
stc
shrb
inc
lock
xor
mov
lcall
fstps
jnp
ss
cs
iret
push
movl
dec
xchg
enter
icebp
imulb
mov
jbe
mov
push
jmp
imul
xchg
ljmp
push
pop
insb
jno
adc
enter
and
xlat
and
loop
xsavec
push
pop
ds
jne
xor
xchg
repnz
int3
pop
jp
push
test
pop
push
jecxz
mov
adc
mov
clc
lods
shll
test
xchg
inc
pop
out
sbb
xlat
jg
arpl
ljmp
pop
out
inc
sti
mov
movsb
or
and
movsl
add
jecxz,pt
adc
sbb
mov
pushf
arpl
loopne
into
xchg
lahf
lahf
lock
cltd
push
lds
add
daa
ds
sub
and
pop
es
lcall
sub
ja
out
bnd
pusha
lret
pop
std
dec
add
sub
insl
inc
push
mov
inc
pushl
and
mov
inc
adc
nop
cmpb
xor
testl
cmp
orl
xchg
lods
dec
mov
mov
call
lods
pop
jl
test
enter
or
cmpsl
push
popa
ror
fwait
jo
pop
xor
xor
xchg
std
adc
repz
pop
inc
mov
add
sarb
or
out
mov
xor
mov
popf
pop
aaa
sub
loope
add
fstpt
mov
jg
mov
xchg
popf
mov
sub
imul
ds
pop
lds
pop
sub
imul
cmp
js
inc
adc
add
mov
dec
scas
jbe
jecxz
lods
and
push
adc
lock
insl
shlb
xor
stc
in
or
mov
lock
lds
push
pop
sub
push
xor
xchg
data16
data16
rorb
call
cmpsb
xor
mov
add
cli
lcall
sbb
mov
sbb
adc
daa
and
xor
aam
mov
mov
adc
dec
out
enter
and
xchg
jl
mov
scas
push
test
les
loopne
add
divb
sub
mov
mov
es
in
add
addr16
test
faddl
xchg
cs
in
inc
clc
jnp
fcoml
sbb
negl
dec
cmpb
mov
loop
call
daa
int
in
inc
pop
mov
mov
add
cmp
sbb
pushf
das
fwait
pop
and
out
push
xchg
add
rorb
adc
jno
pushl
cmp
cli
pop
mov
fisubrl
shlb
rolb
int3
inc
and
call
nop
mov
jae
xor
stos
and
outsb
outsl
les
subl
lds
xchg
ret
push
mov
adc
push
mov
loop
mov
loop
jmp
inc
push
fiadds
xchg
cmc
pop
clc
add
lcall
inc
dec
int3
adc
push
mov
fsubrl
inc
movsb
sub
xor
inc
scas
cwtl
mov
je
inc
movsb
cld
push
mov
or
imul
arpl
jmp
jmp
adc
pop
xor
std
pop
sbb
mov
cmp
inc
pop
lds
jecxz
lock
add
push
mov
test
add
push
movl
add
jns
push
push
xchg
ja
gs
sub
push
mov
push
ret
or
movl
push
cld
jnp
mov
movsb
fs
popa
cmpsb
add
je
xor
inc
sub
jae
adc
and
ss
cmc
push
or
and
fists
ja
pop
insl
out
pop
and
xchg
stos
pop
add
test
pop
cmp
imul
push
or
add
js
dec
iret
movsl
insb
dec
popf
pop
ffreep
pop
dec
xchg
sarb
sbb
adc
movsb
cmc
popf
cmpsl
pop
pop
push
ficoml
std
shrb
out
mov
dec
inc
nop
mov
dec
xchg
xchg
outsl
mov
jbe
cmpsl
fildll
out
out
add
push
mov
mov
sub
das
lret
punpcklbw
xor
mov
or
test
pop
push
jg
or
cltd
cmp
lahf
das
lahf
pop
or
adc
inc
outsl
ret
add
rorb
adc
adc
cld
dec
imul
pusha
mov
sbb
inc
cmp
fcom
add
pop
mov
cmpsl
mov
cs
dec
or
jecxz
xor
or
sbbl
popa
sub
je
bound
imul
dec
xor
jae
test
push
sub
fildl
adc
mov
mov
out
mov
bound
stc
xor
cmc
jl
lods
mov
cltd
cmp
and
push
andb
add
jb
addr16
pushf
jmp
xchg
jne
jbe
jecxz
daa
rolb
mov
dec
outsl
les
mov
aas
jp
sub
loope
dec
inc
call
dec
sub
idivb
loopne
jp
cmc
cmp
xchg
ljmp
push
xor
mov
cmpsl
les
pushf
jecxz
and
sub
test
and
dec
shl
dec
and
f2xm1
sbb
fnstenv
lock
jne
lcall
sbb
repz
xor
fwait
dec
in
xchg
xor
fmuls
cmpsb
xchg
or
repnz
mov
inc
in
add
dec
sub
or
in
inc
pop
xchg
or
push
dec
push
sbb
fmul
in
cmpsl
in
mov
mov
test
sub
cmp
stos
daa
xchg
adc
pop
xchg
ret
jne
hlt
inc
in
xchg
sbb
fdivp
cltd
shll
jne
xchg
push
jmp
cmp
arpl
loopne
push
fistps
or
jmp
sub
inc
movsl
mov
into
sub
pop
addl
adc
int
inc
mov
push
loop
and
sub
ret
popf
mov
pop
sbbl
pop
mov
pop
cmp
leave
test
adc
cmp
sub
and
xlat
lret
call
mov
aam
call
xchg
dec
mov
pop
mov
mov
jnp
cmova
int
adc
cmp
inc
push
loopne
ljmp
mov
pop
jmp
ds
jp
ss
push
fisttps
jg
and
lods
loopne
repnz
je
addb
les
add
jle
xor
push
pusha
sub
add
push
jle
jns
or
cmp
and
and
lods
out
pop
cs
fs
aad
push
adc
insl
mov
or
mov
or
push
pop
add
and
ret
lds
idivl
dec
mov
aad
jge
add
or
pop
adc
jae
out
fucomi
pop
mov
add
addl
mov
std
xchg
outsb
xor
mov
and
aam
inc
push
xlat
js
outsb
test
imul
push
leave
jns
add
pushf
out
inc
sbb
aaa
push
or
xchg
sbb
popa
xchg
xchg
mov
aas
and
int
sti
sub
or
leave
or
jmp
mov
inc
cltd
stos
and
xchg
jae
sub
popf
jns
mov
out
es
loop
enter
movsb
cltd
sahf
fwait
js
jge
push
xchg
test
cwtl
dec
or
mov
lahf
mov
enter
jno
loope
mov
lret
loope
mov
add
and
jnp
or
std
fcmovnb
mov
or
adcl
mov
xchg
mov
sar
dec
push
movsl
je
or
ret
dec
mov
sbb
jge
jge
jno
mov
mov
xchg
jg
daa
scas
xlat
xchg
loope
fldenv
pop
arpl
mov
cmpsl
adc
js
add
push
add
in
hlt
xor
push
insb
testb
add
xchg
xlat
pop
add
out
pushf
gs
lret
cmp
add
jno
repnz
add
and
sbbb
cld
mov
adcl
inc
adcl
ret
mov
mov
data16
fcmovb
and
popf
aaa
push
xor
inc
jle
daa
mov
xchg
xchg
in
cli
movsl
cs
out
hlt
mov
add
int3
adc
jns
loop
cmc
cmp
dec
or
jns
lahf
add
jbe
movsl
xor
das
ss
cwtl
push
mov
fwait
insb
inc
mov
pushf
mov
pushf
adc
mov
inc
ds
arpl
dec
add
mov
push
mov
sub
mov
cli
inc
addr16
xor
stos
sbb
mov
inc
jae
push
sub
add
data16
and
call
fisubs
icebp
mov
pop
lods
popw
pop
xor
sbb
fnstcw
addr16
and
xlat
adc
mov
cmp
roll
pop
out
lahf
and
mov
pop
lock
mov
sbbb
mov
into
andl
test
int
add
cmpsl
add
or
sub
sub
paddb
add
imul
pop
push
mov
ss
aas
sub
dec
lahf
mov
add
sbb
sbb
pop
mov
inc
xchg
enter
jmp
jb
addb
gs
push
pop
xchg
or
jns
les
ret
stos
add
fldcw
test
fmul
fistpll
ret
jl
pop
negl
jl
cmpsl
xchg
testl
and
jl
aaa
xchg
lods
rorb
loopne
shrl
mov
pop
or
rclb
ds
in
or
cmp
in
and
pushf
sub
test
in
cmpb
lret
fdivrl
mov
sbb
fs
shr
sub
mov
jne
cmp
pop
jmp
push
sub
sti
testb
sbb
xor
leave
xchg
mov
push
insl
add
inc
cmp
jno
out
sarb
ret
mov
cltd
sti
imul
adc
rclb
lcall
movsb
out
sbb
pop
push
aad
push
push
jecxz
sub
loope
mov
push
dec
std
rcl
mov
xor
cmpsl
out
adc
popa
bound
push
adc
dec
xchg
add
jo
andl
add
rcl
push
inc
pop
loop
pop
iret
pop
inc
mov
aaa
jle
add
hlt
adc
outsb
test
dec
mov
jmp
mov
jbe
push
push
xor
add
ljmp
push
xchg
push
cmp
mov
rol
js
inc
insb
ja
or
imul
sti
push
mov
lcall
daa
jnp
jmp
or
mov
and
fidivs
insb
xchg
inc
inc
and
iret
mov
pop
inc
fstpl
orl
pop
push
stos
rclb
je
sahf
cld
xor
mov
push
pop
shll
lret
scas
cmc
kmovd
sahf
out
out
fwait
sub
in
add
mov
mov
pushf
fimull
sub
pop
test
out
int3
leave
aaa
cmp
pop
repnz
mov
lea
cmp
lods
repnz
mov
add
pop
loop
adc
mov
std
pop
sbb
or
push
mov
movsl
fstl
mov
mov
push
add
fistpl
pushf
cltd
pusha
pop
mov
mov
xchg
adc
xchg
sbb
scas
std
ljmp
sarb
int
das
inc
xor
aaa
imulb
mov
loope
iret
mov
ds
ret
inc
das
lahf
push
xor
add
jno
adc
outsb
inc
mov
orl
jmp
sbb
xchg
mov
in
ret
ja
add
lcall
jb
test
mov
mov
int
mov
pop
scas
testl
jo
cmp
inc
cmp
idivl
inc
fimuls
lret
cld
push
mov
xchg
sub
dec
jbe
rolb
cli
test
vrcpps
adc
add
adc
mov
jns
or
push
push
add
mov
xchg
ljmp
push
pop
pop
mov
inc
jnp
movsb
addb
xchg
std
push
push
enter
mov
shll
notl
sub
pop
negl
xchg
pusha
fbstp
sbb
jno
int3
push
loopne
les
lcall
clc
add
mov
dec
inc
sahf
loopne
sbb
xchg
pop
fsubrs
clc
pop
popf
hlt
inc
push
lahf
add
fstps
fs
sti
jle
pop
dec
and
imul
mov
movsb
int3
inc
or
mov
xor
ret
jp
xor
xor
lods
mov
sub
filds
jle
mov
jg
dec
push
enter
cmpsl
repz
xchg
shrb
sub
mov
sbb
jle
fmuls
cmp
arpl
pop
std
aaa
or
jb
pop
fimuls
cltd
cmpsl
sub
stc
xchg
jmp
pop
inc
xchg
lods
scas
push
shl
cmp
mov
popa
cmpsb
enter
dec
pop
sub
xor
stc
cmc
int
dec
cmpsl
in
pushf
sbb
xchg
jae
mov
iret
insl
je
sbbb
lahf
test
roll
xor
sbb
out
xchg
jge
push
xor
xchg
jne
dec
je
lods
call
stos
xchg
in
or
out
cmc
jae
mov
cmp
pop
xchg
es
sbb
add
jb
adc
stc
std
rcl
adc
and
lret
sahf
mov
or
mov
jbe
sbb
fistpl
scas
xchg
mov
cmp
outsl
sbb
cld
jecxz
add
pop
add
add
mov
shll
push
sub
sbb
and
push
imul
xor
sub
cmp
xchg
push
inc
inc
fiadds
idivb
imulb
inc
aaa
in
lock
cld
pop
jb
xor
pop
icebp
cmp
xor
cli
jg
cwtl
add
mov
sbb
pop
jg
pop
jmp
mov
add
lds
mov
inc
sub
add
add
push
sub
xchg
jns
add
ss
dec
lret
mov
dec
dec
mov
xchg
adcb
es
sarl
aam
inc
jmp
shlb
out
imul
bound
and
xlat
push
pop
roll
pop
adc
lds
jl
dec
jae
je
int3
iret
push
pop
lcall
xchg
ret
bound
fbld
out
out
mov
push
iret
inc
inc
repz
xchg
fwait
mov
lret
mov
aas
mov
xor
and
hlt
xor
sbb
jmp
arpl
inc
inc
cvtpi2ps
rorl
inc
outsl
xchg
test
inc
cmpsl
or
sub
xor
mov
pop
hlt
jno
cli
adc
xor
mov
cmp
mov
pop
sbb
push
minps
sub
jp
inc
in
int
add
jae
lcall
incl
push
ret
loop
cli
sarl
out
dec
mov
rcrl
pop
lahf
push
mov
dec
mov
nop
jo
ret
lcall
jle
sub
mov
cmc
dec
push
je
pop
out
dec
mov
dec
inc
cld
dec
push
sbb
xchg
out
mov
pushf
xor
inc
movb
jns
pop
dec
cmovl
jg
outsl
outsb
std
icebp
outsl
test
popa
xchg
daa
and
scas
int
fistl
pop
je
nop
push
leave
out
test
dec
cmp
inc
adc
in
out
pop
test
adcl
je
mov
push
iret
dec
dec
in
rolb
ljmp
fists
popa
pop
imul
xor
cmp
mov
adc
je
mov
ret
sub
or
xlat
xchg
sub
int
adc
sti
pop
pop
and
pop
addr16
imul
mov
pop
pop
fistl
fstp
xor
xor
adc
jno
loopne
add
inc
ja
xor
fs
fcompl
pusha
push
daa
mov
call
xchg
add
ret
or
scas
cmc
pop
out
icebp
dec
jp
mov
push
dec
adc
sahf
fistps
call
xadd
call
bound
mov
xchg
ja
jmp
jmp
push
jne
loopne
cmp
jecxz
jns
movsl
int3
repz
mov
cmp
mov
push
mov
sbb
aas
and
mov
sub
imul
icebp
and
data16
call
mov
push
mov
jo
mov
xchg
pop
and
sbbb
pop
jns
ret
pop
or
sbb
lock
xchg
and
and
cmp
aam
cli
rcrl
rcll
cmpsl
cltd
xlat
subl
testb
in
jno
xchg
lahf
sbb
cmpsb
ret
ss
mov
sub
test
mov
inc
inc
js
push
adc
movl
gs
mov
scas
stos
inc
mov
fstl
push
popl
mov
fxam
push
bndstx
les
adcl
mov
and
or
push
mov
mov
mov
xchg
adc
ss
add
push
dec
xor
push
mov
mov
xchg
jb
adc
and
push
xchg
popa
ret
xor
push
xchg
and
loopne
aad
mov
out
addb
xlat
and
xchg
mov
push
inc
jb
popf
xor
jge
lcall
xor
dec
push
jns
lds
xchg
lret
addr16
xchg
mov
push
movsb
push
jne
xchg
iret
in
jge
jno
ljmp
movsl
dec
jbe
sub
popa
adc
xchg
mov
fldenv
dec
push
dec
xchg
das
repnz
jmp
fisttpl
fcomi
cmp
andb
push
test
pusha
shr
fwait
adc
sbb
call
cmc
jnp
add
mov
pop
push
cltd
and
sbb
in
cmp
push
stc
or
mov
pop
add
xchg
out
and
xorb
subb
pop
icebp
sub
dec
xor
jno
push
sbb
mov
out
dec
push
inc
xor
in
push
push
clc
imul
fcoml
mov
sub
add
or
xchg
or
inc
mov
lods
push
je
out
dec
fnstenv
clc
or
cld
orb
lahf
enter
loopne
adc
xchg
xor
jae
and
rclb
fs
inc
jge
in
mov
incb
inc
sbb
jmp
xchg
mov
ret
addr16
jno
ja
inc
pop
mov
hlt
push
jne
les
sarb
cmp
bswap
pop
pop
and
jmp
lds
push
push
cmp
cmc
cmp
insl
mov
pop
mov
out
push
inc
jno
data16
sub
sahf
push
push
clc
jno
push
outsb
mov
push
cli
cmpsl
rep
and
pop
add
jne
popf
jae
iret
inc
outsb
stc
sahf
push
addr16
clc
and
adc
pop
dec
lcall
push
adc
loope
sti
fldl
xor
stos
lds
xchg
sbb
push
xchg
out
sbbl
xchg
mov
dec
jmp
sahf
pop
mov
sbb
mov
ss
ja
jp
xchg
adc
cmp
xor
pop
inc
sub
sub
xchg
jmp
adc
sub
addl
shrl
ret
dec
nop
icebp
xor
or
clc
hlt
mov
push
xchg
test
and
js
xchg
dec
mov
jbe
and
add
loopne
rcrb
xchg
sub
and
cmp
pop
cltd
push
jge
add
call
movsb
std
pusha
hlt
enter
addb
jle
inc
out
mov
and
int3
int
fpatan
pop
incb
arpl
lock
andb
jne
pop
lret
mov
fcoms
sub
pop
repz
inc
arpl
rclb
sub
sbb
mov
xlat
sahf
sbb
sbb
cltd
loop
push
pop
push
cltd
and
xchg
xchg
jno
mov
out
sbb
pop
in
arpl
adc
pusha
sub
xor
cmp
jmp
lcall
or
leave
leave
add
jmp
xchg
add
orb
lock
rol
hlt
xor
es
ror
or
sub
hlt
or
aad
ljmp
aad
mov
cld
mov
xchg
add
into
push
jmp
loopne
movsb
lds
sbb
xor
sub
fdivl
adc
fwait
cmpsl
in
mov
hlt
push
sbb
pop
jb
adc
imul
bound
push
call
insl
mov
call
xchg
fmuls
pop
xorl
adc
cwtl
rol
cmc
jno
fcoms
xor
adc
mov
mov
add
jge
mov
and
lea
adc
sbb
xor
inc
and
cmp
aaa
jmp
scas
mov
outsl
lods
or
or
into
cmp
fisubrs
push
imul
dec
inc
or
fadds
outsl
sbb
sbb
lods
cmp
shlb
ret
mov
or
adc
jle
out
aas
mov
jmp
das
or
adc
les
jmp
pop
adc
mov
pop
fcomip
cs
add
insl
scas
stos
push
lret
jmp
das
pop
ret
fstpt
shll
lret
mov
xchg
nop
int
xchg
pop
movsl
adc
jp,pn
or
pop
push
ljmp
das
sar
mov
jnp
mov
cld
lahf
lret
pop
stc
pop
repnz
in
in
popfw
fldenv
inc
sub
mov
shrl
lock
add
int
and
out
mov
sbb
mov
xlat
push
pushf
adc
add
pop
push
pop
ss
jnp
jge
sbbl
es
les
jnp
push
and
xor
aam
lods
subl
pop
push
scas
lcall
or
int3
add
mov
push
out
cmp
cli
test
cli
or
add
dec
outsb
pop
enter
insl
test
sbb
in
bound
dec
sbb
lods
jno
or
ret
dec
cmpsb
pop
dec
adc
stos
lock
mov
outsb
xchg
or
xor
sti
mov
or
aas
je
sti
jne
mov
and
xlat
and
std
cmp
scas
repnz
mov
pop
lahf
mov
shl
movsl
and
orl
lret
push
dec
xchg
rol
xchg
subl
or
enter
sahf
push
push
pop
ljmp
xlat
push
lock
insl
sarb
jle
cmc
repz
xchg
fnsave
insb
lret
adc
push
std
xor
sti
cs
popf
sub
repz
sbb
mov
add
inc
cmc
ficoms
push
repz
aas
add
ljmp
or
clc
fdivrs
das
pop
mov
push
cmp
pop
lock
aas
add
dec
sbb
jl
fstpt
ja
add
xchg
push
in
loop
sub
and
mov
repz
pop
daa
sbb
scas
xor
fisubrs
in
inc
push
lds
inc
repz
adcb
cmpsb
fnstsw
popa
cmp
stos
push
out
dec
mov
dec
pop
cmp
cltd
stos
insb
inc
mov
dec
xorb
xor
test
in
xchg
xchg
xchg
jge
icebp
push
ret
outsb
cwtl
xor
mov
adc
mov
xor
push
std
dec
or
call
daa
fisubrl
ljmp
imul
roll
add
movsb
cmp
aas
outsb
xchg
sbb
push
xor
pushf
imul
enter
popf
cmpsl
sbb
push
adc
and
mov
ja
xchg
rol
pop
xchg
mov
hlt
fwait
xchg
sbb
push
cmp
pop
nop
or
xlat
pop
mov
mov
lock
jo
testl
sti
and
pop
sbb
or
mov
mov
xchg
mov
dec
popf
pop
jo
rclb
jl
push
nop
push
orb
cmc
and
jge
cmp
mov
jne
sub
je
repz
cwtl
fwait
cmp
adc
int
push
clc
add
mov
push
movsl
enter
xchg
fsubrs
cmpsl
lcall
push
jbe
sahf
sti
cmp
movsl
pop
outsb
mov
fisubrl
pop
sti
push
push
leave
in
frstor
mov
shl
dec
sarl
xchg
dec
mov
or
stos
jl
cs
out
dec
mov
add
lods
iret
aam
ret
pusha
repz
mov
and
lret
and
sbb
fsubs
jb
xor
cmp
jae
add
xchg
mov
out
leave
movsl
jnp
fwait
test
ja
jl
movsb
mov
pop
testb
stc
test
loopne
pop
loop
inc
mov
gs
push
std
sub
jge
aam
jno
jns
xor
adc
jb
jae
cmp
pop
mov
test
add
shlb
mov
loopne
insl
stc
cmp
sti
pop
mov
cmp
fildll
and
fsubrl
cmp
fisttps
imull
cwtl
adc
adc
dec
add
dec
mov
mov
and
cmp
rol
sti
nop
and
movb
ss
dec
xchg
addl
das
cmp
push
add
push
and
test
adc
jns
sub
add
clc
fbld
mov
jo
sub
ret
scas
jno
cmp
and
add
pminub
or
jmp
jge
mov
cmc
jmp
pop
adc
aas
fcomps
or
and
xchg
idivb
mov
rorb
mov
fadds
inc
pop
shlb
int3
jae
rcl
outsl
cwtl
lds
mov
ret
negb
xchg
notl
and
jge
sbb
dec
dec
aaa
add
adc
add
add
andl
adc
sbb
fcmovne
jp
dec
lds
ret
stos
lds
and
mov
mov
into
rcll
jmp
sbb
jne
cmpsl
les
rcrb
pushf
imul
or
in
ret
adc
sub
pop
notb
mov
fldt
inc
mov
sub
sub
cmc
inc
mov
lahf
jnp
ret
push
movsb
cmp
test
insl
add
imul
iret
xor
stos
adc
imul
mov
into
lret
pop
lret
mov
adcb
fbstp
pushf
pop
inc
cli
mov
stc
and
sbb
mov
or
mov
imul
mov
insl
sbb
lods
push
das
jmp
repnz
fildl
inc
int
add
test
push
outsb
xchg
pop
xor
int3
test
cmp
cli
cmp
jne
fdivrs
in
loopne
popa
add
orb
adc
cmp
lock
jnp
push
lods
jmp
dec
gs
pop
das
pusha
iret
ljmp
shll
movsl
adc
mov
inc
ficoml
add
pop
inc
jg
xor
sti
sbb
mov
mov
mov
inc
mov
in
inc
push
call
sti
xlat
addl
cmpsb
dec
scas
scas
pop
mov
fmull
xor
je
scas
and
rcrb
pop
mov
jnp
ljmp
les
mov
bound
xor
clc
aaa
sbb
fstpt
sbb
aaa
sbb
loop
je
cwtl
ljmp
cmpsb
leave
mov
jmp
add
and
shll
ret
dec
outsb
test
xchg
loopne
mov
jb
inc
in
push
jns
add
push
cmp
xchg
cli
repz
mov
push
sub
aaa
scas
sbb
mov
xor
inc
ds
data16
test
in
jmp
adc
xchg
mov
andl
ss
nop
das
mov
pop
ret
repnz
mov
jo
std
push
int
cmc
or
loopne
jmp
in
in
pop
push
clc
dec
sbb
or
mov
test
cmp
int
loope
jle
nop
fsubl
aas
lea
das
add
and
fisubrl
mov
dec
xchg
push
mov
sbb
cli
ficoml
out
cwtl
adc
fwait
xor
les
xchg
shrb
mov
das
inc
lret
push
in
adc
rep
dec
mov
inc
mov
xor
fsubrl
mov
xchg
movzbl
lods
and
or
mov
and
cli
cmpsb
andl
sub
pushf
lods
in
pop
stos
jle
push
inc
data16
mov
pop
mov
fcomps
cmp
pop
mov
pop
push
enter
aad
jmp
jb
jg
xor
adc
mov
call
lock
sub
imul
pop
leave
subl
sbb
into
and
mov
jmp
int
in
clc
pop
pop
sarb
fisttps
dec
repnz
xchg
iret
test
mov
sbb
or
mov
jp
sbb
sub
and
adc
sti
push
popf
xchg
ss
movsl
push
icebp
fnsave
pop
ss
push
push
iret
leave
call
dec
jle
mov
rcrl
fsubl
aam
addb
jmp
and
cmc
jne
mov
neg
repnz
add
pop
mov
xor
ljmp
popa
repnz
rclb
fimull
push
daa
dec
sbb
test
mov
mov
mov
ljmp
ret
xchg
xchg
lods
addr16
push
movsb
repz
pop
push
cmc
jge
adc
xor
insb
ret
aas
out
add
fdivs
mov
fidivl
enter
jnp
push
fcoms
mov
out
clc
movsb
out
adc
cld
xchg
scas
shrb
and
and
pusha
mov
jno
fadds
stos
jp
aam
gs
pop
hlt
fxam
pop
cmp
loope
jns
xor
xlat
loop
or
cld
dec
insb
cli
hlt
shr
mov
outsl
sub
pushf
mov
jns
clc
rorb
repz
mov
cltd
xor
inc
mov
int3
pop
mov
je
and
pop
orl
cwtl
adc
imul
fs
test
out
icebp
insl
sahf
cwtl
jecxz
cli
jle
addl
mov
loop
mov
and
in
cmp
jl
enter
shl
adc
aaa
xchg
call
mov
mov
push
je
jne
ljmp
movsl
cltd
adc
es
add
xchg
stos
data16
sahf
dec
mov
lea
add
xor
xlat
add
nop
nop
push
or
inc
es
xor
daa
test
cmp
in
xchg
cmpsb
insb
shrl
jp
test
call
mov
mull
xor
sub
popf
aad
das
xchg
repnz
adcb
cld
leave
daa
jnp
jnp
lods
lods
sub
add
sub
repnz
or
rcll
test
mov
jbe
dec
leave
int3
mov
mull
sub
add
fdivl
mov
bound
xchg
or
xlat
jecxz
int3
mov
and
insl
das
decl
xor
and
xchg
sti
push
cmp
adc
sbb
arpl
jnp
xchg
movsb
daa
popf
aam
cmpsl
mov
call
sbb
fsub
jle
push
js
pop
es
cmc
pmuludq
push
dec
pop
pop
xor
or
test
jg
pop
lds
inc
cmc
data16
popf
iret
xor
inc
lcall
sub
cmp
dec
mov
push
out
aaa
mov
pusha
jmp
cmp
scas
ljmp
ret
sbb
xchg
shll
movsl
jecxz
and
mov
adc
scas
inc
and
push
mov
xor
cli
push
dec
loopne
pop
imull
and
test
xchg
mov
fidivl
and
sbb
gs
sbb
sti
jno
mov
in
lahf
and
std
out
mov
xchg
mov
xchg
or
addr16
or
ret
icebp
xchg
sub
push
jge
xor
adc
in
adc
repz
jne
pop
mov
mov
popf
arpl
cmc
ss
cmpsl
cltd
cmpsl
cmp
imulb
dec
sbb
sub
adc
xor
xor
mov
xor
adc
dec
fstpl
stos
mov
iret
pop
hlt
mov
addr16
cmp
mov
push
lretw
mov
jbe
test
ds
std
sbb
test
push
cmp
xchg
mov
or
inc
or
mov
push
sub
push
hlt
aaa
imul
mov
out
aaa
inc
adc
repz
xor
dec
testb
mov
icebp
xchg
data16
dec
int
daa
cmc
out
sbb
add
notb
xchg
mov
arpl
pushf
or
in
jecxz
add
sahf
inc
cltd
in
gs
mov
xor
sbb
js
icebp
cmp
out
popa
notb
jne
xchg
mov
sub
push
mov
ret
pop
xchg
xchg
jb
xor
xchg
fadds
loope,pn
add
xor
pop
loopne
stos
lahf
and
test
fnstsw
add
adc
js
stc
inc
repz
push
jp
rcll
enter
push
cld
hlt
mov
out
dec
hlt
mov
mov
dec
push
arpl
lahf
xchg
adcb
and
add
outsb
mov
cmp
jnp
fisubl
movsb
mov
cmp
cmp
push
mov
xorb
add
xor
jmp
andb
outsl
xor
cwtl
cmpsl
in
pusha
add
js
sbb
and
sub
jo
sub
addl
nop
push
adc
in
ja
bswap
jg
adc
in
xor
popf
jb
fists
add
lock
mov
mov
mov
sub
dec
add
imul
out
sub
push
and
or
add
xchg
arpl
andb
jmp
push
mov
push
dec
repz
cmp
xchg
std
cwtl
sbb
and
cld
sbb
mov
fs
mov
in
movsl
pop
mov
xor
xchg
xor
xor
and
repz
mov
and
jge
cmp
push
jle
jbe
push
dec
imul
sbb
out
and
leave
fdivp
cmp
lds
mov
sbb
cli
adc
adc
imul
movsl
and
push
mov
fwait
enter
xchg
pop
nop
adc
xor
add
adc
sbb
pusha
dec
insl
and
bound
cwtl
ret
xchg
test
cmpsl
leave
sbb
xlat
mov
mov
aas
push
xor
jno
jl
mov
or
je
cmpsb
sbb
lea
call
mov
jae
ds
sub
and
cmpsl
mov
xchg
int3
xchg
loop
inc
das
mov
icebp
in
inc
push
lea
rcrb
dec
and
lods
hlt
pop
jo
lret
frstor
sbb
pusha
pusha
test
sbb
dec
fucomi
lcall
rorb
in
and
xchg
das
std
push
roll
mov
inc
ljmp
mov
sbb
sahf
gs
mov
sbb
repz
in
fsubr
and
inc
dec
mov
aas
ljmp
sbb
mov
inc
jle
cmpsb
push
add
mov
ss
xchg
adc
xor
or
lods
xor
sbb
movsl
push
push
dec
dec
dec
inc
ja
pop
ret
les
mov
inc
inc
push
shrb
push
fxch
insb
pop
inc
iret
shll
xchg
xor
inc
cmp
or
inc
scas
sahf
fsubs
test
sbb
jo
pop
nop
adc
cld
push
add
cli
out
sub
dec
call
cs
push
pop
jns
dec
jne
mov
cmp
push
xor
pop
test
xchg
mov
mov
es
inc
cmp
push
js
sahf
sub
inc
mov
dec
addr16
icebp
cmpsb
ja
dec
out
enter
ret
cmpsl
cmc
lcall
push
lret
jg
inc
movsb
pop
sub
psrld
jmp
or
test
pop
jnp
pop
inc
inc
insb
cmp
or
psubd
adc
push
and
jmp
mov
test
sarl
dec
pop
xor
cmp
jp
call
icebp
out
clc
or
test
fistl
in
outsl
add
xchg
sbb
sub
xor
mov
push
cmp
ret
push
mov
fsubs
and
sub
sbbl
cmpsl
and
fs
jg
sbb
mov
sarl
mov
mov
pop
adc
jmp
add
orl
es
pop
aad
or
ja
in
add
xchg
xor
loopne
lret
and
jmp
out
loop
pop
aas
inc
mov
addr16
cmpsl
pop
leave
mov
cmp
mov
pushf
in
or
push
jecxz
jp
and
fisubrs
int
mov
xchg
mov
xchg
loopne
or
cltd
xor
popa
stos
inc
aaa
add
and
icebp
inc
cld
push
jmp
ret
jge
add
into
cmp
xchg
in
ret
subb
mov
jo
imul
mov
into
lods
sbb
jle
andb
and
outsl
bound
jg
jmp
cmpsl
mov
inc
sbb
or
dec
sbb
xchg
pop
test
inc
adc
inc
inc
xor
les
lcall
pop
add
add
sub
sub
aaa
pop
adc
and
test
push
pusha
and
cmp
mov
sbb
icebp
sub
fsts
pop
or
into
cmpsl
cmp
outsl
insl
cwtl
cmc
cmp
jae
pop
divl
repz
cmpsl
sub
inc
inc
inc
pop
stos
fldpi
fstpt
mulb
and
movsl
and
repz
int3
pop
push
lds
lahf
cmpsl
xchg
repz
pop
or
loop
cmc
mov
popf
es
ja
push
adc
aas
xchg
jle
xor
inc
into
std
dec
sbb
or
sbb
push
aam
insl
push
xchg
add
outsl
ret
sub
dec
sahf
mov
adc
add
mov
out
jge
or
and
and
mov
push
repz
iret
mov
rol
ljmp
adc
popa
xchg
adc
daa
stos
jecxz
insl
sub
clc
mov
lds
push
lods
ret
fdivrl
nop
dec
sbb
leave
xor
jnp
lahf
jbe
cmp
mov
dec
cmp
dec
xor
flds
mov
mov
lret
aad
test
cmpsl
out
in
mov
cwtl
mov
test
lret
fcmove
push
pop
xchg
mov
ljmp
xchg
mov
xor
lret
pop
sbb
int3
push
ja
movsb
into
mov
stos
sti
jmp
and
test
xor
push
xchg
push
cmp
sarl
popl
sub
hlt
mov
mov
and
lods
orb
cmp
push
shlb
data16
pop
mov
sbb
push
je
arpl
sbbb
mov
movsb
inc
lret
addr16
ja
imul
add
and
sti
fldl
and
xchg
pop
xor
or
stos
les
mov
cmpsl
pop
lea
inc
mov
and
mov
mov
jl
mov
leave
ja
jbe
xor
int3
fdivp
jmp
fs
dec
adc
jnp
xchg
leave
xor
mov
aas
xor
call
xor
mov
fiaddl
rcr
rorb
out
mov
xor
dec
ficompl
and
push
mov
loopne
test
pop
xchg
xchg
lcall
inc
fwait
add
aad
cmp
xchg
xor
lret
mov
mov
daa
mov
dec
mov
enter
mov
sbb
dec
and
pop
inc
mov
lret
repz
cmp
jl
outsb
dec
stos
test
loop
in
xlat
in
lds
movl
rorb
sbb
test
jno
adc
lods
mov
fldenv
mov
ja
xchg
sbb
xchg
jae
pop
or
fldcw
aad
push
xchg
cmc
mov
test
mov
hlt
mov
xor
cwtl
test
sub
mov
loope
nop
iret
pop
daa
dec
and
aad
jb
rcrb
xor
rcll
jl
hlt
cmp
push
and
mov
loop
icebp
sahf
arpl
into
inc
mull
mov
or
fldl
rcl
xchg
sub
mov
imul
test
push
jle
ds
mov
and
push
stos
cwtl
mov
jg
stos
shlb
lcall
mov
mov
aaa
fwait
mov
sub
cmc
push
push
in
push
shrl
test
sub
sub
cs
pop
sub
lahf
jle
fildl
lock
xor
mov
scas
mov
xchg
xor
xorb
imul
icebp
cmp
add
xlat
inc
mov
push
mov
cli
subl
into
inc
pop
sbb
or
inc
ficompl
push
cmp
sbb
enter
lea
cmp
jp
imul
xor
sub
test
pushw
jns
orb
inc
sbb
fmul
dec
fwait
xchg
inc
pop
bound
and
rcrb
mov
push
fisubl
stc
fcmove
pop
sahf
int
fadds
std
mov
xor
sub
xor
jb
icebp
jl
lea
pop
cmc
jnp
jbe
xchg
fcom
cwtl
popf
and
shlb
rcrl
jecxz
loop
push
xchg
lods
gs
mov
out
sub
cmp
fsub
insb
push
dec
pushf
fwait
push
mov
jne
repz
mov
int3
jmp
loope
fadd
sub
or
insl
mov
inc
xor
or
aam
pop
repz
add
jl
push
xchg
pop
jne
xchg
add
adc
jmp
adc
inc
fistpl
mov
xchg
xor
lret
fwait
xchg
or
cld
iret
data16
out
cmp
inc
adc
xor
cs
xchg
hlt
cmpsl
push
and
cmpsl
inc
ret
insb
stos
push
testl
or
sbb
push
dec
xchg
pop
mov
mov
mov
xchg
cmpl
leave
cmp
or
dec
mov
out
pop
add
std
lock
jg
scas
sbb
pop
and
sub
in
sub
cmp
cmp
or
repz
pop
fstl
outsl
sbb
and
mov
std
xchg
shlb
lods
push
loopne
lahf
js
pop
outsb
xchg
and
mov
insl
mov
into
jns
movsb
push
mov
adc
sar
pop
flds
mov
ja
pusha
jns
xlat
xchg
push
xor
das
push
push
stos
shlb
repnz
inc
mov
pop
das
ret
dec
push
out
outsb
inc
aad
add
jmp
sub
sub
scas
inc
jp
scas
cmp
cmp
jmp
std
mov
push
push
das
xor
jp
out
fmull
aas
data16
scas
loopne
popf
sbb
mov
or
fmul
hlt
iret
or
mov
sbb
xor
jbe
jnp
lret
mov
sahf
inc
mov
jmp
shl
repz
pop
pop
fwait
dec
pop
mov
mov
xchg
in
das
add
outsb
fisubrl
iret
lods
int3
mov
js
jg
data16
or
roll
mov
xchg
push
xchg
out
sbb
xor
push
mov
mov
xchg
popf
imul
into
push
rorb
jp
pop
adc
sub
and
mov
jno
cmp
jle
mov
icebp
pop
and
std
mov
testb
mov
push
adc
cmp
pop
pushf
sub
jbe
test
xchg
push
mov
push
pusha
outsb
aaa
fsubs
sub
cmc
aas
pushf
incl
outsl
lret
dec
mov
sarl
test
mov
dec
push
xchg
and
jle
js
pop
lods
inc
mov
jecxz
mov
inc
push
mov
rolb
jle
pop
or
lods
lods
sbb
mov
lods
in
ret
repz
xor
push
lret
sub
xor
sbb
or
lods
mov
lret
dec
loope
stos
push
xchg
inc
and
mov
ss
jecxz
sbb
incl
mov
sbb
addb
loop
sbb
outsb
dec
push
push
pop
scas
test
cmp
jb
sbb
mov
jno
std
pop
sahf
or
push
movsb
ss
test
daa
add
or
mov
pop
test
out
stc
loop,pn
sub
and
das
mov
icebp
fstpl
loopne
mov
enter
rcll
insb
das
xlat
dec
mov
pusha
ret
pop
push
out
jb
rcrl
stos
divb
push
in
push
inc
cwtl
cmp
mov
inc
dec
rclb
xchg
fwait
pop
lahf
ret
cmp
jge
pop
ret
jmp
jno
mov
cmp
inc
and
xchg
test
dec
orb
xchg
roll
push
jb
inc
scas
sbb
jle
push
cmp
stc
shrb
mov
mov
aas
adc
jno
mov
cmp
pop
out
cmp
sub
ds
sbb
mov
push
jge
jge
popf
sbb
push
inc
mov
outsl
jae
cmp
jb
jmp
xchg
clc
addr16
or
sbb
cltd
leave
adc
negl
pop
mov
mov
not
jne
mov
icebp
push
clc
push
lds
shlb
mov
loop
inc
or
inc
mov
inc
mov
xor
test
aam
rolb
add
cwtl
or
adc
add
adc
loope
adc
call
mov
mov
and
arpl
jno
adc
inc
ss
hlt
jl
mov
bt
jne
icebp
cmp
and
data16
add
pop
xchg
pop
pop
loope
testl
out
mov
pop
lcall
je
jg
shlb
jae
jmp
and
sti
scas
or
js
out
mov
mov
fstpt
aas
and
andl
or
mov
xorl
ja
in
xor
push
add
lret
imul
cmc
add
insb
fidivs
cmp
and
scas
mov
xor
or
add
cmp
jle
movsb
aam
xor
sti
or
push
cmpsl
scas
data16
pusha
popa
leave
xchg
cltd
sti
mov
jbe
movsl
mov
dec
sbb
shlb
cmp
push
pop
pop
outsl
inc
add
xor
or
mov
sub
iret
lds
sub
pop
or
push
xchg
cmpsb
jecxz
add
inc
push
push
sub
adc
ret
ss
add
and
aas
mov
mov
inc
inc
xor
dec
dec
jns
aam
sub
lods
arpl
mov
sub
les
push
test
and
lock
xlat
mov
xlat
popf
sub
jb
and
gs
ror
cld
and
loopne
test
loope
lock
imul
adc
test
fs
jns
xor
inc
imul
movsl
inc
testl
dec
push
mov
mov
pop
inc
jmp
cmp
leave
pop
jns
pop
pop
and
and
inc
push
pop
jb
push
mov
dec
pop
sbb
loope
push
or
push
mov
mov
sub
adc
dec
rcrl
cmp
mov
add
inc
cmpsb
jns
inc
fs
out
sti
gs
add
andb
jb
mov
xorl
dec
add
jle
xchg
adc
lea
repz
std
pop
pop
xchg
and
xor
repz
mov
adc
jp
loope
mov
arpl
adc
cmc
cwtl
sub
icebp
nop
inc
mov
movsb
and
or
inc
int
rorb
sbb
ds
jmp
out
dec
aaa
push
mov
popf
faddl
mov
repz
adc
dec
mov
shlb
or
shlb
pop
xchg
jns
jecxz
dec
adc
mov
inc
in
leave
inc
push
xchg
mov
in
cmp
pushf
and
lock
fadds
daa
inc
adc
sbb
leave
push
pop
aad
jb
mov
adc
mov
mov
xchg
push
sbb
shlb
js
imul
shl
sar
or
in
cmp
je
mov
jbe
lods
xor
aaa
jmp
sub
jae,pn
jo
or
or
xor
out
mov
jnp
insb
dec
sti
int3
mov
inc
fiadds
in
pop
clc
subl
rolb
idiv
add
sbb
dec
mov
sub
popa
inc
push
dec
fwait
aad
lcall
in
cmp
inc
insb
pop
and
jae
and
outsb
inc
sar
xchg
dec
push
ret
nop
les
jae
xchg
add
sbb
sbb
xchg
push
jno
jae
dec
shll
out
mov
out
cmpsb
pusha
push
stos
es
nop
xorl
mov
nop
mov
fwait
xchg
iret
jne
mov
xor
notl
adc
jg,pn
push
mov
fldl
add
mov
inc
aas
fnstenv
inc
mov
out
and
jl
cmp
xchg
fs
inc
cmpsl
push
pop
stos
stos
cmp
sbb
xchg
pop
out
inc
adc
loop
das
pop
data16
aas
test
hlt
addr16
add
jae
pop
or
push
pop
add
outsl
cmp
and
pop
inc
mov
and
push
add
div
jmp
test
mov
aas
push
inc
stos
stc
mov
out
push
into
lcall
add
jnp
dec
pop
rcrl
sub
sub
popf
and
jge
adc
leave
inc
dec
push
inc
add
adc
repz
pop
mov
in
inc
sub
ret
inc
lret
adc
iret
cmp
xchg
iret
out
pop
loope
cmp
dec
mov
pop
adc
hlt
icebp
pushf
push
or
mov
sub
repnz
jmp
sbb
popf
fisubrl
test
aam
movsb
data16
dec
stos
or
ss
and
mov
fistps
jbe
gs
push
mov
mov
push
pop
lock
enter
lahf
rcll
mov
fstpl
es
pop
in
or
cs
lcall
pop
cmp
popa
sbb
adc
repnz
or
lcall
adc
repz
pop
push
scas
jns
test
shlb
push
xorb
rcr
xchg
lods
add
mov
hlt
xor
outsb
xor
adc
pop
ffree
insl
repz
repz
add
fstps
push
dec
or
xor
jns
sub
mov
mov
adcb
ljmp
orl
daa
sar
addr16
mov
mov
aam
ljmp
adc
lret
repnz
ret
sbb
test
mov
clc
stos
data16
xor
adc
fdivrs
sahf
push
mov
xchg
lcall
negl
and
scas
mov
imul
or
stc
xor
add
jl
jmp
jg
add
clc
adc
or
add
xor
lret
mov
inc
scas
mov
inc
mov
stos
lds
mov
imul
xchg
push
xchg
fwait
pop
sbb
push
outsl
inc
data16
mov
mov
imul
push
scas
push
xor
fwait
push
je
idivl
in
cmpsl
fidivrl
and
insl
dec
cltd
pop
icebp
lret
sbb
outsl
mov
cmp
and
cmp
out
out
xlat
or
data16
adc
fs
cmpsb
aas
cmpl
sbb
pushl
ja
orb
pop
mov
mov
push
push
cmpsb
cmp
add
and
pop
ds
int3
leave
xor
test
inc
pop
out
scas
popa
paddsw
mov
out
sbb
mov
bound
xchg
fcmove
test
addb
outsb
xchg
outsl
std
ljmp
push
push
insb
repz
push
mov
lods
fidivl
push
scas
jge
ljmp
std
je
test
mov
cmp
ss
push
mov
test
sub
das
cmp
stos
pop
mov
decb
xchg
lea
or
jne
mov
mov
insb
pop
aad
rorb
iret
fidivs
cwtl
push
jnp
movsb
shl
mov
cmp
cs
adc
mov
jecxz
out
mov
bound
out
pop
mov
cli
xchg
lods
mov
or
jge
xchg
addb
repz
cmp
sub
leave
mov
cwtl
jno
jg
out
or
out
repnz
fdivrl
mov
fimuls
sbb
cmp
rorl
xchg
sarl
cwtl
xor
lods
mov
cmpsb
mov
jae
dec
cmpl
push
dec
jnp
xchg
jns
xor
adc
mov
in
mov
pop
lds
jmp
sahf
pop
and
jbe
insl
push
dec
and
xor
imul
ror
ficomps
aad
sbb
push
fwait
sub
and
imul
movsb
push
jo
xchg
aad
jnp
xchg
jp
fucomip
fisubrs
in
mov
lahf
fs
fisubrl
ds
add
movsb
dec
dec
std
xchg
xlat
les
jne
pop
lods
into
mov
cmp
icebp
push
or
dec
pop
fnstsw
ja
cltd
cmpsb
mov
lea
das
mov
cwtl
outsb
add
push
pop
xchg
inc
inc
sarl
pushfw
or
sbb
pop
cmp
and
and
jle
mov
mov
or
push
rcl
and
jp
fs
fists
loopne
cmp
subl
xlat
test
outsl
jmp
fwait
add
adc
inc
ret
xor
scas
dec
inc
mov
jmp
std
pop
push
rcll
scas
push
inc
cmp
sub
inc
push
les
icebp
lea
xchg
jnp
cmpsb
testb
stos
fstl
inc
or
pop
aaa
xchg
sar
cmpsb
sub
rorb
lock
pop
std
bound
icebp
pop
pop
mov
add
mov
in
mov
das
jbe
mov
shlb
test
mov
sub
lock
out
movsb
push
adc
jmp
push
insb
or
dec
mov
xor
lds
in
xor
push
hlt
cmc
xchg
mov
pop
ficoms
pop
dec
icebp
lds
push
je
out
cmpsl
add
mov
sbbb
js
fnstsw
jbe
pop
or
aas
div
cmp
jae
push
scas
xchg
inc
insl
push
repz
test
pop
jne
lock
loope
mov
push
xor
add
sub
pop
pop
push
pop
neg
mov
or
sbb
lret
sub
mov
adc
stos
in
sbb
push
inc
and
push
call
mov
mov
fistps
add
mov
mov
sbb
dec
outsb
lds
mov
jmp
and
adc
cltd
test
xor
cmpsl
and
int
fs
xor
inc
mov
iret
div
out
xchg
sar
xchg
mov
pop
sub
rorb
push
pop
dec
adc
lea
xchg
xor
jmp
nop
and
loop
dec
nop
and
or
std
push
dec
test
jns
jns
enter
lret
or
and
jbe,pn
xchg
pop
aaa
je
xor
dec
jp
push
pop
adc
jbe
ror
cmp
in
test
in
jbe
stc
mov
js
mov
cmp
cmpsb
lcall
inc
sti
fwait
bound
pop
or
push
adc
fwait
pop
dec
lods
sahf
lret
mov
leave
into
cmp
ret
mov
jbe
cmp
jb
movsb
shlb
test
push
popf
cmp
rcll
fld
scas
xor
jns
push
ficoms
cwtl
xchg
out
mov
mov
jno
sbb
dec
jl
mov
xchg
inc
mov
cmp
or
daa
bnd
sbb
adc
leave
jg
lcall
dec
jecxz
mov
scas
hlt
add
movq
push
jo
xchg
xchg
cmp
jne
ret
or
jp
sti
lods
jg
mov
xor
add
cmpl
enter
inc
je
mov
bound
ret
mov
arpl
sar
in
lods
aaa
pop
xchg
mov
cmp
in
in
dec
pop
leave
jo
test
insl
mov
inc
lods
and
push
sub
addb
fisttpl
call
es
aaa
icebp
cmp
jns
lods
cmp
inc
cmp
in
mov
scas
pop
popf
out
pop
stos
mov
or
mov
sbb
mov
inc
shrb
addl
ss
cs
movl
shll
insl
test
insl
sbb
outsb
outsl
filds
mov
push
lods
clc
outsb
cmp
cmp
lret
add
xchg
pushf
mov
inc
sbb
outsb
or
mov
test
push
call
cmp
add
cmp
dec
lods
sbb
push
stos
int
or
in
inc
mov
push
xor
jnp
adc
cmc
fists
pushf
or
add
loop
pushf
out
inc
neg
sub
pop
js
lret
lret
pop
and
dec
js
pop
outsb
mov
xor
aaa
inc
push
lods
scas
insl
gs
xchg
cmp
aam
repnz
stos
mov
and
xor
shl
insb
or
mov
fsubl
in
sarl
mov
icebp
cmp
add
dec
mov
test
gs
cli
xchg
sub
mov
push
add
ret
push
imull
gs
dec
iret
xchg
insb
outsl
popf
int
or
push
jmp
pop
lahf
push
push
lret
addr16
cmp
sbb
add
add
sbb
cmp
repz
jle
jno
nop
xorb
mov
addb
dec
test
pop
mull
loopne
js
mov
repz
dec
push
jb
mov
cmc
xor
std
dec
push
in
int
sub
testl
in
jnp
mov
push
scas
shll
sub
into
inc
push
sbb
jg
pop
lods
in
cli
scas
pop
mov
jge
test
and
push
enter
add
gs
popf
stos
icebp
xor
lds
adc
enter
test
sbb
jge
sub
pop
lcall
subl
clc
mulb
cli
jnp
out
xlat
jns
mov
sbb
sbb
lods
adc
outsl
pop
imulb
pop
in
lds
sbb
hlt
and
sti
sbb
and
out
fildll
jg
sbb
sub
stos
xchg
in
xchg
leave
ljmp
and
and
iret
sbb
sbb
adc
add
and
testl
mov
pop
lret
js
sti
mov
push
push
mov
inc
adc
xchg
sbb
pop
loop
subl
cmp
and
push
add
adc
inc
ss
in
jno
pop
mov
or
out
cmp
adc
sbb
jl
test
mov
add
outsl
insb
lock
cld
push
dec
cltd
push
gs
insl
and
arpl
adc
fwait
ds
fwait
lds
cmpsl
xor
and
push
adc
mov
xor
test
or
sbb
or
mov
fs
pushf
push
jecxz
out
ret
add
push
sahf
ja
mov
jmp
cld
pop
test
pop
cmpsl
aad
lods
push
shl
jge
aam
mov
ret
xchg
out
cltd
mov
xchg
pushf
push
add
lcall
adc
push
cmpsb
sub
jge
movsl
pop
xchg
ds
xchg
shlb
ljmp
mov
dec
push
jno
ja
sub
arpl
in
adc
sbb
jo
push
notb
xor
jecxz
dec
mov
inc
sub
add
mov
inc
xlat
sub
xchg
leave
rolb
adc
in
xchg
mov
pop
xchg
mov
mov
call
mov
data16
int3
add
or
cmp
push
out
add
and
icebp
scas
and
jmp
add
pop
pop
sub
jecxz
testb
pop
fwait
and
cmp
mov
sub
loop
or
jp
gs
fimull
ja
cltd
cmpsl
sub
popf
push
xor
fists
out
lret
xor
fwait
xchg
xlat
out
fdivl
andnps
pop
jle
sti
mov
jnp
mov
and
insb
addr16
test
jno
jae
out
mov
mov
sti
rcr
fstl
mov
sar
ja
lret
jb
cmpsl
or
ss
mov
mov
pop
shlb
int
leave
ficomps
mulb
jno
or
fxch
mov
lcall
pop
mov
leave
pop
or
cs
add
add
scas
jmp
fwait
add
xor
lods
or
ja
je
xor
andl
popa
cmc
pop
lahf
push
pop
pop
push
cwtl
cmp
jb
fstp
insb
int3
ja
in
add
int3
adc
cltd
lds
jne
xor
mov
call
sub
cmp
aaa
fstps
cwtl
mov
dec
mov
ret
mov
jmp
adc
test
call
sbb
jg
sub
sbbb
sbb
xchg
outsb
movsl
test
movb
adc
js
mov
and
jo
sbb
cwtl
xchg
daa
mov
push
sub
xchg
xchg
cli
aam
sub
aam
inc
push
sub
cmpsw
ss
push
int3
xor
sub
inc
xor
js
sbb
jmp
xor
int
pop
mov
in
and
subb
int
dec
insl
and
xor
or
xchg
das
push
fidivs
outsl
push
cld
push
xor
mov
push
es
cmpsl
cmp
push
jnp
xlat
sub
jo
inc
cmp
xor
cltd
inc
sub
data16
push
inc
xor
pop
and
and
insb
xchg
sub
inc
shrl
jns
orb
int3
inc
in
add
xor
sub
sbb
les
adc
pop
xlat
es
xor
cmp
inc
cwtl
icebp
fildl
lods
mov
ja
push
psubsw
shrl
arpl
movsl
jae
xchg
cmp
fwait
stos
cmc
aam
add
aam
xchg
faddl
imul
out
adc
fucom
push
xchg
subb
cwtl
dec
push
inc
cmp
sub
mov
out
xchg
addr16
movsb
xor
std
mov
sarb
int
aam
data16
mov
lods
test
sbb
cmp
and
inc
jae
jl
sub
outsb
pop
pop
pusha
mov
mov
jnp
leave
mov
test
sbb
test
lea
push
xchg
aad
je
fcmovnb
sub
jb
xchg
pop
pop
jo
or
push
setge
xchg
xlat
adcl
inc
nop
scas
cwtl
lods
rorl
data16
xchg
pop
and
add
les
fisttpl
jl
in
inc
mov
dec
cmp
loopne
clc
scas
lret
jle
filds
pop
dec
push
sbb
push
push
sahf
lods
adc
pop
cwtl
jp
mov
sbb
aam
xchg
dec
push
inc
cmp
call
sbb
xchg
sbb
mov
push
adc
pop
jns
fisttpll
xor
test
gs
jp
sar
stc
ret
pop
xchg
push
jne
cmp
push
dec
in
cmp
push
jle
push
imul
and
push
rclb
je
mov
jns
icebp
ret
pop
adc
ds
mov
lret
dec
xchg
aaa
nop
ljmp
jne
add
lret
push
push
adc
add
test
cmp
sbb
mov
cmp
or
sahf
and
jp
ret
sub
and
inc
test
in
imul
aaa
insb
movsb
cmp
imul
sbb
cmp
and
test
scas
sti
in
repnz
inc
repnz
mov
push
loopne
sbbl
les
flds
sbb
mov
fs
cmp
inc
xchg
fisubrl
sub
sbb
mov
xor
stos
mov
push
pop
pop
ja
rorb
aam
jp
fwait
dec
inc
mov
jg
dec
movsb
inc
jbe
mov
cmp
aam
push
or
arpl
xor
out
popf
sbb
insb
sbb
int
fnstenv
in
cmpl
loopne
lret
adc
push
mov
add
mov
jb
sub
ljmp
test
adc
jns
addl
xor
adcl
movsb
aad
fisubrs
xlat
mov
orl
in
mov
xchg
sub
mov
and
cmpsl
adc
stos
idiv
mov
dec
mov
loop
and
sahf
sub
addl
pop
cmc
mov
in
popf
push
adc
mov
inc
push
jnp
jecxz
out
dec
pop
loopne
jbe
mov
mov
sub
scas
pop
mov
int3
popa
in
add
iret
pushf
fcomps
jp
js
dec
ror
out
sbb
mov
test
test
stos
sbb
jne
add
test
out
dec
or
and
fisttpl
or
pop
sub
add
pop
sbb
sub
fwait
and
pop
sahf
aam
notb
imul
out
inc
pop
push
cmpsl
loope
clc
and
loope
and
roll
movsl
fisubrl
sbb
into
pop
pop
cld
cmovle
sarl
cs
dec
or
daa
fsub
iret
cmp
sbb
jb
repz
jo
test
add
test
lret
outsb
arpl
int
jge
pop
sahf
fldt
ds
xor
mov
inc
mov
and
ds
cmpsb
loopne
lcall
mov
sub
xchg
adc
scas
mov
imul
and
js
jle
pop
repnz
jecxz
fidivrl
mov
sub
inc
pop
mov
int3
xchg
subl
add
sub
insl
cmp
fs
ficomps
jmp
lods
adc
ss
pushf
adc
inc
mov
mov
mov
xchg
lock
pop
mov
icebp
pop
dec
in
push
sbb
adc
sub
cmpsl
add
fwait
aam
js
rcrl
push
cmp
lea
clc
pop
andb
pop
cmpsl
in
and
imul
push
push
dec
sti
int3
pop
cltd
repnz
addr16
repz
sub
push
testl
push
xchg
or
insl
pop
loop
fidivrl
push
ss
sbb
mov
mov
cmpsl
int3
sbb
popf
cmp
hlt
lods
jp
or
daa
fbstp
mov
xchg
mov
sbb
inc
das
mov
addr16
popa
fistpl
out
jae
cmp
lods
js
mov
and
out
movsl
arpl
fwait
jmp
or
adc
push
test
test
pop
out
imulb
daa
insl
xchg
icebp
notl
adc
pop
mov
xor
testb
or
cmp
in
repz
xlat
mov
aaa
push
lods
xchg
cmp
jbe
popa
setle
mov
mov
mov
das
cmp
pusha
jbe
pushl
push
inc
cltd
iret
rcrb
mov
sbb
sbb
ss
arpl
repnz
test
pop
add
popf
js
test
repnz
xlat
mov
and
push
pop
dec
rcr
jl
negl
xchg
in
fsubrs
ds
adc
cmc
stc
hlt
jne
mov
scas
cmp
rorb
cwtl
dec
sbb
push
data16
ret
push
inc
movsl
lret
cmp
mov
sbb
arpl
call
sar
sbb
lods
ljmp
in
inc
xor
inc
movsl
or
pusha
cs
mov
xchg
shlb
cmp
mov
fdiv
rcrb
hlt
xchg
and
jmp
adc
stos
and
inc
mov
mov
pushf
mov
pop
loope
fistpl
adc
lcall
sbb
xlat
inc
mov
int3
cld
mov
popf
jl
push
gs
dec
pop
xchg
cmpsl
int3
mov
pop
push
lea
inc
jbe
out
je
ja
sti
repz
jl
sbb
or
movsl
sbb
or
mov
push
fs
push
sbb
out
repz
stc
addr16
xor
mov
sbb
add
mov
lcall
clc
add
xchg
out
xor
stc
push
jecxz
shl
xor
mov
add
sbb
inc
or
lret
icebp
cltd
insl
cmp
addr16
sti
dec
sbb
pop
enter
es
mov
shrb
out
inc
pop
mov
sub
lea
sbb
sub
and
repz
int3
mov
adc
xchg
testl
mov
fxch
sarb
outsb
data16
hlt
nop
lods
xor
jge
in
sbb
xchg
cmp
mov
fstl
sti
push
fisubrl
adc
pop
dec
sub
and
scas
or
xchg
xchg
inc
pop
mov
icebp
jle
mov
add
cwtl
inc
call
xchg
mov
iret
or
movsl
jmp
mov
sbb
jnp
sbb
cmp
jmp
fdivr
add
mov
cmp
sub
cwtl
pop
push
and
or
imull
sbb
leave
cmpsb
jmp
push
test
push
xor
jge
divl
mov
mov
icebp
mov
movsb
stos
or
mov
lods
pop
pop
jp
movb
or
push
jmp
maskmovq
negl
out
cmpsl
cltd
inc
mov
jl
loope
pop
sbb
mov
out
clc
in
js
out
test
xchg
shll
mov
cmp
jns,pn
push
sub
xchg
mov
xchg
or
shlb
lods
bnd
pop
inc
xor
sbb
cld
test
jmp
cmp
push
popa
out
in
mov
ret
jb
ficoml
push
push
mov
hlt
sti
out
and
xor
xor
notl
cmc
xor
inc
iret
xchg
roll
lahf
adc
inc
sbb
pop
or
shlb
jnp
rolb
mov
sub
xor
sub
cmp
sub
add
fadds
fildl
pushf
add
jae
lahf
shll
and
add
adc
loop
cld
arpl
jb
roll
loopne
ja
jns
push
push
pop
sub
call
jno
xor
and
in
pop
adc
lret
lock
rorb
push
movsl
mov
mul
adc
outsb
lods
pop
outsb
std
std
fbstp
out
push
mov
and
gs
xchg
mov
insb
popa
xchg
adc
mov
adc
ficoml
adc
in
cmp
ffreep
mov
test
xorl
stos
inc
push
das
xchg
test
cmp
jnp
add
scas
movsl
ljmp
out
jl
push
cmp
cmp
jbe
sarb
adc
jmp
imul
and
push
popf
sbb
dec
add
inc
mov
jo
outsb
cld
sbb
jo
pop
lret
inc
clc
mov
pop
js
sbb
fbstp
loopne
dec
lods
inc
sbb
jecxz
pop
jg
in
jp
mov
nop
jbe
icebp
ja
and
pop
mov
add
sub
lock
mov
mov
jmp
lahf
fsts
xor
jb
mov
sub
xchg
push
ss
adc
or
sahf
and
fldt
lret
fmul
rclb
out
sub
ret
jno
mov
mov
mov
imul
aam
sub
les
into
daa
adc
insb
jecxz
adc
jno
inc
jb
fdivrl
cmc
ret
repnz
pop
jno
into
aad
mov
adc
jb
mov
xor
shl
icebp
cs
pop
mov
jg
aas
pop
pop
add
mov
outsl
push
in
xlat
jg
aad
js
cmpl
inc
mov
cmc
sbb
fdivl
insb
orb
int3
aam
jmp
daa
mov
in
and
subl
sbb
xor
fbstp
and
sbb
dec
out
push
iret
fs
test
ss
clc
in
jne
mov
jge
test
mov
popa
adc
lcall
push
pusha
cmp
out
in
movsb
xchg
cmp
iret
jmp
ret
cmp
sar
out
data16
outsl
sbb
sbb
xorb
push
sub
shll
test
imulb
lock
and
mov
ficompl
push
lock
sub
in
loop
xor
mov
scas
negb
lret
mov
adc
jb
inc
jnp
mov
int
loop
hlt
pop
mov
push
adcl
repnz
leave
addl
push
cs
les
jmp
xchg
cmc
out
mov
scas
or
jl
cli
test
push
push
aam
and
ljmp
je
jne
cwtl
cwtl
and
dec
pop
mov
gs
dec
inc
imul
cs
addr16
jb
pusha
adc
repz
cli
mov
pop
sti
rcll
adc
rcl
mov
jns
pop
das
cmpsl
out
or
cltd
mov
xor
dec
pop
and
push
loop
rcl
stc
call
ffreep
pop
lret
adc
mov
sub
mov
call
sbb
das
mov
nop
outsb
ds
aam
imul
aas
test
xor
xor
mov
xor
sbb
cmp
pop
pop
or
insl
or
jae
cmp
daa
fnstcw
sbb
sahf
test
scas
aaa
popf
fucomi
pop
pusha
mov
cld
mov
mov
xor
sbb
dec
xor
mov
sbb
lea
es
loope
outsl
subb
push
push
out
push
mov
sbb
inc
movq
jnp
stos
inc
decl
shrb
xor
lock
cmp
cmpl
cmp
xlat
aad
je
clc
xor
fists
imul
add
clc
push
in
ljmp
dec
inc
jp
call
sbb
jmp
xchg
gs
cmp
imul
arpl
lods
pushf
rcrb
cmp
scas
mov
div
mov
clc
movsb
and
adc
dec
stos
inc
dec
repnz
dec
sub
cmp
sbb
in
xor
repz
leave
jo
dec
inc
fiadds
nop
pop
pop
cmp
jle
fisubs
sub
dec
gs
xchg
aaa
imul
xor
xor
pop
test
shlb
outsl
nop
fcomip
sub
cmpsl
stos
or
push
sahf
xor
out
sbb
test
or
adc
sub
dec
xchg
adc
clc
int
add
fnsave
jo
mov
int
and
sbb
add
sbb
ss
rol
aam
out
push
cmp
shl
push
inc
xor
shrl
scas
add
mov
pop
mov
mov
ja
pop
lret
mov
scas
aad
xor
xchg
ja
jle
jns
popf
ret
xchg
lret
fiadds
mov
xor
cs
add
inc
out
sub
mov
add
inc
add
jge
pop
mov
cmp
jns
ja
repz
xor
daa
xchg
into
xchg
mov
or
sahf
repz
adc
and
popf
in
dec
addl
push
cmp
fs
push
pusha
or
cwtl
xchg
push
popa
pushf
sbb
in
add
pop
jbe
negb
push
adc
push
mov
inc
mov
cwtl
nop
mov
das
or
rcrb
sbb
into
pop
aam
xchg
stos
dec
adc
fisttpll
mov
cmp
mov
cld
std
add
jo
and
jg
xor
and
bound
pop
xchg
adc
ss
pop
in
inc
rcr
dec
icebp
int3
lock
cld
popa
loope
lahf
int
popa
mov
xor
jb
push
xchg
cmp
or
mov
mov
mov
or
jbe
movsb
sbb
daa
push
jge
and
out
fiadds
gs
movsl
fbld
xchg
enter
xchg
jne
outsb
outsb
jae
jnp
out
pop
cmp
mov
push
ds
xchg
ja
int
js
orl
mov
sahf
out
shrb
imul
outsb
gs
mov
test
out
cmc
sub
xchg
xchg
popf
dec
mov
ds
sbb
movsl
pushf
push
dec
lahf
daa
mov
and
test
sbb
out
adcb
mov
les
loope
insb
stos
into
nop
cltd
add
insl
add
and
push
mov
cmpsl
test
jbe
jg
fnstcw
pop
push
cmc
xchg
sub
hlt
jecxz
cwtl
and
xchg
orb
es
pop
sar
pushf
cmp
fsubs
fwait
dec
pop
fwait
push
fbld
negb
cmc
cmp
aad
je
cmp
call
pop
int3
lret
pop
add
mov
pushf
mov
fstpt
shll
fnstcw
mov
adc
mov
push
jbe
shll
ds
cltd
dec
or
adc
les
out
pushf
cli
shrb
test
loop
and
lret
fcoms
jmp
lret
repnz
pop
aaa
sub
aam
cld
inc
nop
popa
xchg
dec
xchg
adc
dec
jbe
adc
adc
out
jl
ds
and
inc
xchg
roll
cmp
jnp
mov
sbb
cmpl
mov
aam
dec
shrl
cmpsb
pop
in
mov
mov
loop
sub
ficoms
push
mul
xor
scas
pushf
ds
in
jne
add
in
jbe
dec
add
push
repz
dec
pop
xchg
pusha
mov
ds
popa
or
mov
push
add
orb
iret
popa
inc
std
or
pop
xor
mov
sbb
pop
sti
jbe
sub
push
lods
cmp
cwtl
aam
mov
push
or
dec
pop
push
jge
adc
mov
insb
mov
hlt
pop
sub
movsb
test
cwtl
push
add
je
fidivl
mov
adc
das
fidivl
pop
mov
adc
je
mov
pop
jns
sbb
jmp
icebp
lds
bound
push
or
xor
push
inc
inc
mov
shlb
sahf
pop
jl
cs
int
or
ja
adcl
mov
sahf
or
stos
push
sub
mov
mov
insb
mov
out
push
sahf
in
aaa
add
fsub
xlat
scas
mov
inc
cmp
dec
imul
mov
sub
pusha
and
push
add
jp
push
pop
out
dec
inc
cmc
xchg
pop
loope
int3
mov
adcl
mov
dec
mov
mov
nop
and
push
outsl
adc
dec
out
pop
nop
push
add
movsl
xorb
add
pop
cs
clc
push
cld
pop
stc
xor
gs
test
pop
mov
addb
xchg
fwait
cld
mov
iret
das
cmpsb
out
test
es
jge
dec
mov
push
test
adc
decb
push
jns
inc
ret
dec
xchg
jg
int3
shrb
jge
jg
imul
dec
jbe
mov
pop
xor
mov
scas
add
cld
mov
pop
sbbb
scas
call
fiadds
push
sub
mov
inc
or
mov
repz
pop
adcb
ljmp
loop
loop
outsb
xchg
cvtps2pd
mov
ljmp
xchg
xor
push
loope
mov
lds
push
sub
gs
inc
cmp
leave
les
mov
xor
mov
jge
hlt
dec
dec
lret
add
jge
daa
lods
sti
adc
xchg
sub
mov
ret
shll
lcall
in
es
fwait
scas
cs
sbb
dec
fbstp
pop
sub
xor
adcb
or
push
sbbb
and
sysenter
xor
mov
idiv
imul
int3
out
inc
into
shrl
lock
les
cwtl
test
mov
mov
aam
sbb
mov
and
testl
pop
mov
push
adcb
mov
push
in
mov
std
jp
das
inc
xchg
sub
or
mov
inc
cmp
ret
pusha
test
mov
sbb
aas
sahf
mov
clc
pop
cld
xchg
pop
xchg
pop
xor
in
addr16
cli
cld
lds
cmp
scas
jo
xlat
mov
divl
and
pop
push
pop
pop
pop
adc
dec
repz
jmp
das
cmp
mov
scas
fs
sti
push
addr16
loop
dec
pop
fistpll
popf
cmp
fdivrs
sub
add
mov
gs
movsb
xchg
sahf
daa
movsb
fdivrs
push
adc
pop
mov
mov
and
sti
out
mov
jp
mov
popf
sub
outsb
push
inc
test
or
mov
aad
cli
adc
pop
dec
sub
mov
adc
cmp
or
dec
shll
ja
aam
adc
ret
push
dec
push
cs
pop
sbb
stos
jo
cli
sub
cmpsl
je
jne
mov
lret
rcl
and
sub
dec
sub
mov
lds
scas
gs
fdivrs
inc
xchg
inc
inc
and
sbb
jb
xor
pop
xor
pop
mov
xor
push
pop
jno
jne
xchg
nop
loopne
cld
and
xlat
mov
shll
xlat
dec
ljmp
sbb
xchg
xor
xchg
cmpsb
jge
repz
test
stos
push
mov
xchg
jecxz
in
fdivr
or
adcl
lret
subb
and
fwait
mov
popa
gs
mov
cmp
jecxz
movsb
cmp
xor
shll
dec
cli
lods
fimull
inc
xchg
mov
or
inc
cltd
in
jno
dec
jle
pop
int3
outsb
adc
test
jb
mov
fistpll
jns
lcall
mov
mov
cwtl
cmp
ljmp
into
dec
dec
pop
andl
jno
jnp
neg
or
cmp
sub
adc
cmp
sbb
pop
fiadds
aas
lods
cmpb
sub
xor
and
pop
mov
orb
lret
mov
sbb
push
mov
in
push
add
cwtl
iret
push
and
mov
enter
pop
loopne
jb
das
pop
shl
push
das
je
and
insl
dec
xlat
in
push
stc
frstor
jae
push
xchg
pusha
add
je
fistpll
pop
push
xorb
in
add
outsb
repnz
das
cmp
or
je
and
outsb
push
xor
pop
outsl
gs
js
inc
lods
jmp
or
ret
cmp
int3
ja
pop
negb
mov
pushf
pop
xor
xlat
clc
fistl
pop
test
or
lret
std
mov
ret
adc
cmp
pusha
sub
and
test
fiadds
mov
stc
pop
in
lods
add
inc
int3
push
addr16
pop
adc
mov
mov
gs
pop
arpl
stos
and
jg
inc
jo
add
mov
xor
bound
fdivl
fs
mov
mov
xor
cmp
lcall
fiaddl
insl
mov
mov
out
push
daa
ljmp
sbb
push
and
xor
les
add
sti
jp
mov
in
jge
pop
pop
cmp
movsl
and
shrb
or
or
mov
push
clc
or
sub
leave
popf
js
pop
test
xchg
mov
jo
dec
sbb
fstpt
xchg
ret
mov
ja
jns
cmc
stos
xor
imulb
xchg
xor
insb
lret
cmpsb
fwait
cmpsb
sahf
in
mov
sbb
ja
sub
sarb
loopne
sbb
aad
scas
xor
mov
push
es
adc
or
jge
mov
mov
pop
and
aaa
iret
sub
in
mov
inc
pop
add
sbb
mov
xchg
les
mov
dec
jl
test
mov
leave
sub
lret
repz
jle
in
mov
jmp
outsl
sti
je
hlt
mov
push
add
int
push
call
les
in
jae
xorb
popf
jbe
mov
enter
icebp
leave
ljmp
cmp
cmpb
push
cmc
out
scas
lret
sub
xor
sub
hlt
cmp
decl
lahf
xlat
dec
mov
dec
inc
addr16
or
xor
or
jle
mov
mov
sbb
out
jo
cmp
gs
sub
nop
add
sbb
repz
push
add
mov
sbb
popa
xorb
js
pop
mov
inc
adc
int3
pop
ret
lds
cli
ja
cld
xchg
push
xchg
and
cmp
ret
inc
cmpb
sbb
inc
xchg
nop
adc
addr16
sbb
stc
mov
popa
test
andb
and
push
fbld
or
stos
mov
add
mov
jae
or
cmc
sarb
pop
idivl
mov
mov
inc
jl
idiv
sbb
fldenv
cwtl
pop
mov
dec
sbb
pop
xchg
fldcw
ds
cmpb
xchg
sbb
mov
cmp
fmull
sub
push
out
into
pop
xor
xlat
mov
shrl
mov
or
and
or
xchg
cmpb
ficompl
int3
jbe
movsb
stc
std
mov
in
xchg
call
add
out
scas
aad
cmp
and
add
sub
fldenv
pop
movsl
mov
xchg
jbe
data16
repz
call
jl
cli
sbb
xchg
push
aad
sar
cwtl
mov
xor
push
push
rcl
pop
hlt
push
rolb
testl
pop
ljmp
dec
jb
fdivrl
mov
and
or
movsb
addr16
xorb
shr
stc
lret
inc
mov
push
sarb
ljmp
loop
gs
mov
in
fnstsw
aad
and
pushf
jp
test
jnp
sbbb
add
jo
outsl
in
imul
daa
dec
pop
pop
loop
xor
aam
sub
mov
jge
scas
fwait
call
fistpll
fs
cmp
sbb
add
pop
add
or
xchg
addr16
inc
shrl
mov
jne
mov
lcall
jno
add
push
fmull
mov
cmpl
or
pop
xorl
xlat
je
push
dec
push
addr16
or
dec
inc
sub
mov
shlb
out
sub
ja
push
cmp
or
mov
mov
inc
mov
jle
xchg
push
sbb
xchg
icebp
dec
push
aaa
push
iret
sub
inc
sbb
clc
flds
mov
bound
pop
lcall
cltd
scas
mov
lcall
sub
inc
xchg
fs
movsb
mov
imul
cmp
js
lock
test
xlat
dec
dec
movsb
call
and
or
cmpl
inc
fdivl
repnz
gs
aam
lods
cmp
push
das
mov
outsl
jge
sub
sub
sbb
movsb
push
sub
jo
mov
repnz
push
xorb
mov
pop
testl
cmp
addr16
jo
insl
add
mov
jae
fcomps
insb
jbe
cmp
or
lods
dec
fidivs
adc
loopne
and
loopne
dec
xor
xchg
add
dec
push
imul
loope
cmpsb
mov
mov
and
jo
pop
mov
repnz
mov
fstps
push
lret
sub
add
ljmp
xchg
aam
mov
or
out
ja
pop
dec
xlat
int3
js
hlt
xchg
fidivs
sub
or
inc
insl
cmp
pop
mov
sub
ret
hlt
rcrl
and
icebp
in
loopne
mov
pminub
jmp
shrl
jg
int
fcompl
loopne
push
mov
insb
push
negb
or
xor
cmp
fcomi
inc
sub
aam
idivb
lcall
dec
in
sahf
insb
pop
lahf
lret
daa
xchg
int
das
fldcw
xchg
pop
mov
fildl
cwtl
insl
and
lods
lds
hlt
cmc
lds
fs
loopne
push
aad
sub
push
cs
andb
scas
stos
jnp
test
jg
sbb
aam
fnstenv
add
add
outsb
test
stos
ds
cli
loope
xchg
mov
pop
pop
pop
lret
or
lods
cltd
lods
cmp
fldcw
mov
xor
xor
loope
lea
cld
push
out
lods
cmp
jl
cli
dec
nop
inc
cli
lret
cmovl
jne
jecxz
push
in
scas
mov
fisttpl
sbb
lods
dec
lcall
cmc
jo
pop
xchg
bound
shll
pop
jns
mov
add
pop
repnz
into
adc
stos
ja
jns
jg
sub
mov
or
sub
xor
xchg
xchg
ds
insl
imulb
test
mov
mov
push
test
sbb
jl
inc
push
or
xchg
xor
jbe
fwait
scas
jle
bound
enter
test
mov
cmpb
repnz
sbb
nop
and
sbb
dec
mov
in
mov
pop
icebp
jno
out
add
push
ss
jge
cmp
fwait
iret
sbb
in
ja
iret
orb
call
bswap
cli
lds
repz
sbb
sub
add
int
ror
adc
lods
mov
push
test
inc
cli
lcall
mov
xlat
jnp
in
imul
icebp
or
mov
in
fadd
mov
inc
fistps
js
xchg
adc
filds
fwait
and
push
stc
dec
dec
mov
adc
add
out
dec
mov
push
mov
adc
out
inc
cmp
repnz
popa
pusha
lea
test
mov
pop
lock
add
sub
jmp
decb
lods
ficoms
or
ds
movsb
and
into
ds
push
test
mov
add
sub
mov
adc
inc
adc
push
dec
dec
fstl
pop
cli
xor
pop
iret
lcallw
into
push
add
push
add
cltd
sbb
mov
mov
int3
dec
out
negl
pop
in
loop
stc
or
or
mov
xorl
cli
aas
cmp
pusha
inc
pop
and
mov
adc
roll
rcll
cli
in
mull
jne
sub
cmpb
cmp
push
mov
leave
das
or
shrl
ret
mov
mov
addr16
ret
jne
xchg
or
dec
cwtl
mov
jbe
mov
dec
and
decl
or
loop
imul
dec
in
lods
test
ljmp
push
dec
rcrl
shl
fcmovu
pop
cmpsl
imul
dec
rclb
jae
lret
and
lret
adcb
imul
inc
push
scas
stos
jb
popa
cmpsb
dec
loopne
por
mov
ljmp
and
pop
test
or
add
cli
insl
ret
into
push
outsb
mov
push
repz
adc
xchg
cmp
mov
lcall
jo
loope
outsb
pcmpgtd
xor
arpl
sbb
push
les
xchg
mov
push
sbb
xor
ficoml
stos
inc
xchg
jmp
mov
stos
jle
jp
lret
xchg
idiv
inc
pop
and
adc
mov
dec
push
sbb
out
sbb
iret
cmp
sbb
inc
and
push
test
outsl
scas
xlat
fxch
dec
scas
shll
rorb
pop
rcrl
aad
push
mov
jp
jle
push
mov
or
mov
imul
push
cld
xchg
pushl
popa
out
arpl
mov
mov
jle
pop
adc
leave
sub
int3
int
sbb
cmc
mov
cmp
mov
insl
jg
lcall
rcll
test
fwait
xor
xlat
inc
jmp
cmpsb
loopne
adc
sub
not
jbe
out
dec
sub
dec
lahf
add
add
jae
in
scas
mov
mov
out
push
iret
cmpsb
sbb
inc
outsb
or
sbb
cwtl
imul
out
cmp
lret
cmpsb
cs
jb
inc
add
mov
jecxz
dec
hlt
test
mov
sub
cmp
movsl
int
jg
clc
iret
xchg
repnz
pop
and
or
jp
sbb
push
test
mov
dec
mov
out
inc
outsl
aaa
jle
jmp
jl
mov
xor
cmp
fimull
outsb
pop
pusha
popa
mov
mov
sub
cmpsl
cltd
out
jno
mov
je
dec
test
out
fsub
inc
lea
mov
loop
adc
push
cs
jo
xor
inc
pop
fstps
addr16
xchg
xchg
fs
aaa
cmc
inc
shr
out
shl
shll
les
lods
scas
pop
or
rcrw
das
inc
fisubl
jg
xor
outsl
dec
mov
inc
mov
icebp
orb
pop
orb
cmp
dec
mov
cmpsb
push
std
in
mov
jecxz
fildll
ljmp
popf
cmc
fildll
dec
insb
jp
and
sbb
pushf
jmp
mov
daa
or
dec
test
bound
loopne
xchg
adc
dec
pop
xchg
scas
cmpsl
insb
ret
add
dec
cmpsl
mov
aas
clc
mov
adc
data16
sub
and
ja
lods
push
jge
pop
jne
pop
pop
xlat
idivl
xchg
jns
lcall
popa
scas
mov
imul
ss
xor
addb
cmp
push
test
stos
or
nop
in
xorl
cld
xchg
sahf
rclb
xor
repz
pushf
ss
fistl
fcoml
cli
cli
pop
cmp
pop
cmp
lods
out
lcall
pop
cld
fwait
pushf
pop
pop
test
push
inc
xor
mov
mov
cmc
xchg
cwtl
pop
cmp
lahf
adc
add
xchg
jmp
dec
mov
stos
or
dec
in
lcall
hlt
pop
pop
popf
pushf
jno
lods
xor
loop
scas
adc
dec
jb
sub
stos
pusha
xchg
xor
fstps
sbb
or
cmp
lea
pop
sbb
pop
add
movsb
lret
movsl
into
fs
imul
andb
ds
sub
xor
pop
dec
inc
in
std
mov
movsb
arpl
pop
pushf
pop
rcrb
mov
mov
push
push
push
mov
rcr
stc
adc
xor
cmp
xchg
mov
negl
pshufw
dec
mov
pop
int3
stos
sti
sbb
inc
scas
bound
inc
sbb
xor
out
daa
sbb
jae
int
flds
xchg
and
dec
pop
clc
adc
subl
leave
sub
add
loope
fsubrs
jmp
jmp
pop
js
loop
ds
mov
dec
sarb
les
cmpsl
xchg
inc
sbb
or
cmp
jle
cli
pop
fisubrs
not
iret
mov
cmp
mov
push
daa
pop
dec
ljmp
fwait
push
mov
movsb
mov
orl
lcall
ds
sub
movsl
jmp
mov
ficomps
and
push
jge
or
mov
out
mov
dec
sub
xor
push
mov
sub
push
test
push
jmp
xchg
cltd
sahf
popa
stc
mov
xchg
pop
icebp
int3
in
jns
push
adc
push
adc
insl
pop
xor
mov
imul
mov
adc
jae
movsb
fcoms
xchg
fmulp
aad
mov
jle
movsl
inc
mov
and
in
enter
fldt
in
jns
sub
rcll
sub
data16
push
adc
or
leave
sbb
push
xchg
dec
outsl
and
jl
cmp
add
add
ret
pop
jnp
inc
stos
sbbb
int3
rcr
mov
dec
decl
popf
push
inc
shl
pushf
sub
mov
xor
faddl
fisubrl
adc
inc
into
xor
cmpsl
arpl
xor
add
mov
and
xor
lea
arpl
fsubs
out
cmp
in
mov
gs
cwtl
cmp
mov
cld
sbb
ss
and
add
and
pop
sbb
sub
test
xchg
inc
adc
push
mov
xlat
mov
dec
add
cltd
movsl
xor
xor
cs
and
push
testb
iret
inc
sub
sbb
add
lods
mov
std
shll
jno
cmc
ljmp
xor
xchg
roll
cs
insl
adc
jnp
int3
lods
rcrb
dec
enter
aam
imul
jg
negl
inc
lods
mov
icebp
mov
adc
xchg
int
popf
call
push
push
jg
cmpsb
ret
imul
inc
add
xor
arpl
jp
push
rorl
out
adc
mov
pop
movsl
lcall
inc
mov
subb
mov
inc
hlt
xor
cmpl
mov
in
call
ds
xchg
push
out
xor
mov
pop
xor
mov
or
leave
inc
adc
pop
push
pop
fneni(8087
scas
clc
add
sub
add
pushf
sub
loopne
les
xor
cmp
inc
add
repz
fs
adc
mov
inc
cmp
into
clc
faddl
add
mov
out
sbb
cmp
inc
test
pop
or
hlt
sub
insb
stc
dec
loopne
loop
inc
adc
cwtl
mov
push
lods
std
leave
dec
jp
and
xlat
in
jo
shlb
adc
in
popf
mov
add
jl
jg
fs
pop
ja
sub
pop
pop
dec
shlb
jae
push
jbe
mov
and
fmul
xor
mov
pop
test
adc
inc
aam
adc
ljmp
data16
cmp
jb
xchg
inc
shrl
in
or
lahf
and
sbb
jg
bound
jp
insl
pop
xor
enter
mov
and
stc
adc
inc
mov
push
xorl
mov
inc
inc
xchg
add
dec
movsl
sbb
mov
lret
xchg
rep
sub
bound
call
push
push
les
outsl
adc
fildll
xor
mov
xor
addr16
inc
cwtl
push
sbb
push
ds
inc
mov
and
ret
mov
je,pt
and
pop
leave
adc
add
popa
push
leave
or
insl
out
sub
or
outsl
add
data16
imul
pop
pop
rorb
jl
inc
daa
mov
add
ja
xlat
imul
cmpsb
call
pop
fiadds
lret
cmp
ljmp
inc
mov
das
or
rol
mov
fwait
mov
data16
loop
mov
inc
aam
jle
lock
cmp
or
add
shlb
mov
inc
testb
fbstp
or
test
or
sbb
cli
aaa
addb
cwtl
inc
repz
mov
jle
sti
arpl
and
mov
pop
fcomps
lret
clc
xchg
dec
xchg
testb
inc
sub
mov
xchg
jle
and
fs
int
sub
xor
aad
pop
mov
mov
mov
ljmpw
scas
mov
sub
xor
mov
repnz
jnp
stc
push
push
pop
push
push
stos
ljmp
xchg
adc
sub
jnp
push
cmp
in
icebp
jg
loop
add
mov
orl
mov
stos
gs
push
mov
sub
and
sahf
cs
inc
dec
adc
jmp
and
xor
packsswb
ss
subb
ja
js
pop
inc
mov
xor
ret
pop
addr16
pop
xor
aas
jecxz
fadds
pop
cltd
mov
leave
cmp
mov
cltd
inc
push
mov
jge
sbb
and
popf
popf
xor
inc
jl
bound
shrb
fnstenv
loop
aas
xor
flds
clc
push
in
sub
mov
addr16
mov
int3
lds
roll
xchg
popl
imul
add
daa
in
rolb
xor
popl
mov
xor
pusha
pop
pop
shrb
dec
hlt
lods
insb
dec
inc
xchg
jne
scas
dec
add
xchg
cmp
mov
andl
mov
hlt
adc
xchg
xchg
and
je
push
repz
test
fwait
nop
das
xchg
loope
adc
cmp
xchg
mov
mov
and
push
push
addr16
lcall
inc
sbb
xchg
adc
inc
ds
pop
xchg
or
mov
xchg
insl
adc
fildl
pop
fisubrl
enter
andb
cmpsl
push
std
adc
or
mov
pushf
cs
test
cmp
pop
inc
jmp
fsubs
xor
push
ja
notl
ds
jmp
je
xor
add
pop
clc
roll
std
xor
xchg
hlt
dec
mov
std
xor
jle
and
xor
gs
pop
pushw
pushf
je
jl
fildl
push
out
pop
cmc
dec
lods
jecxz
inc
push
push
dec
fwait
les
jmp
rcrl
pop
push
mov
mov
inc
add
xor
push
in
in
stos
or
test
cwtl
pusha
cmovns
mov
jecxz
shll
fcmovnbe
and
sbb
pop
xor
ret
sub
mul
movl
js
inc
movsl
sarb
cwtl
mov
movsl
push
lds
out
sub
xchg
ror
sub
mov
cmp
mov
sub
sbb
mov
pop
dec
gs
jge
xchg
push
cmp
mov
sub
and
mov
clc
sub
hlt
pop
mov
xlat
loopne
out
pop
jg
imul
subb
xchg
in
lahf
inc
add
xor
sbb
xor
outsb
or
inc
int
in
mov
mov
jae
xchg
xchg
test
ljmp
jp
lret
inc
pushf
xchg
mov
cmp
iret
idivl
push
mov
jl
inc
pop
cmp
push
aam
sbb
pusha
push
cli
adc
fisttpll
je
jbe
mov
dec
push
mov
push
push
mov
iret
scas
stos
adc
mov
add
mov
pop
dec
push
dec
sub
adc
xor
ret
mov
fs
or
cmp
outsl
pusha
fwait
add
inc
mov
repnz
les
repnz
dec
sbbb
add
scas
lds
xor
lret
add
shll
dec
add
xchg
and
pop
or
iret
ja
in
aam
repz
repnz
lahf
and
scas
popf
shll
fs
call
iret
aad
sub
adc
add
jmp
sarb
insb
call
pop
xchg
pop
mov
les
jb
push
adc
es
out
scas
mov
or
sahf
cmp
adc
mov
mov
insb
xchg
jl
enter
movl
jo
xchg
mov
mov
test
and
in
mov
xchg
jae
les
and
cs
cmp
cltd
fsubl
fscale
bound
ljmp
add
hlt
xor
test
add
popf
push
test
repz
cltd
pcmpeqb
xor
mov
mov
jge
fdiv
xchg
mov
or
jle
or
lods
sub
ret
xchg
pusha
sbb
and
mov
aam
inc
inc
pop
rcrl
add
cmp
sbb
jle
cmc
push
outsb
stc
in
xor
repnz
mov
lahf
insb
es
js
repz
jp
imul
pop
sti
push
push
adc
in
stos
jecxz
push
movsb
sbb
ret
testb
stos
popa
negl
push
and
push
sbb
mov
or
das
sub
pop
xchg
mov
ds
shlb
imul
jle
mov
sbbb
rorl
shl
sbb
push
insl
fwait
hlt
mov
add
mov
into
icebp
adc
or
sub
xchg
pop
loope
mov
test
mov
outsb
xchg
les
jb
pop
rcl
fidivl
data16
loopne
in
cmp
mov
pop
scas
daa
adc
inc
sub
cmp
imul
es
xchg
mov
inc
loopne
rclb
jbe
fnstsw
iret
or
push
add
mov
ret
jle
es
pop
ss
in
jge
mov
or
leave
arpl
mov
jb
xchg
xchg
adc
mov
and
cmp
inc
popa
arpl
push
je
or
arpl
sbb
add
dec
jbe
lret
mov
jge
in
outsb
es
adc
inc
add
push
mov
decl
cld
fsubl
cs
sti
rorb
in
pop
js
aas
sahf
push
push
fcompl
mov
out
and
push
out
mov
testb
shl
icebp
in
pop
cmc
arpl
xchg
sbb
insb
out
push
out
test
cld
in
cwtl
aas
inc
out
aaa
xchg
call
fwait
mov
test
aam
pushf
add
movsb
mov
mov
add
cmp
pusha
repz
shl
adc
ja
jmp
lods
add
sarl
clc
xor
xchg
gs
int3
andb
jle
sub
inc
fldl
cmc
mov
subb
sbb
dec
js
add
jbe
lcall
mov
mov
mov
mov
mov
dec
cmp
mov
loopne
xchg
gs
mov
hlt
lods
push
xor
into
add
test
add
jmp
adc
sbb
stos
dec
adcb
sbb
sub
inc
cli
outsl
ret
test
testb
mov
pushf
adc
add
divl
jge
mov
sbb
scas
cmp
lods
mov
into
mov
adc
jmp
xchg
shr
fldenv
ja
test
rol
insb
cmp
ret
or
movb
cmpsb
fbld
ret
jge
inc
push
cmpsb
fmuls
xchg
pusha
lods
je
clc
jnp
adc
iret
inc
xor
out
pop
dec
insl
repz
cmc
int3
popf
cmc
stos
lret
mov
push
insl
into
test
sti
mov
and
scas
adc
xchg
shlb
pop
push
or
inc
mov
push
cmpb
lea
sub
xchg
sub
into
nop
test
cs
lahf
movsb
inc
dec
dec
test
push
inc
pop
push
pop
jmp
pop
and
mov
dec
stos
and
push
push
xlat
and
repz
pop
cmp
xor
jae
cmp
sahf
in
out
and
dec
lods
xor
mov
cld
stc
sub
addr16
mov
ds
adc
inc
push
push
pop
lret
add
stos
addr16
aad
shlb
push
inc
dec
into
out
and
add
fwait
sahf
iret
mov
cmp
jmp
out
inc
test
arpl
mov
mov
sbb
sbb
cmp
aad
mov
or
mov
jne
push
cs
mov
cmp
dec
call
orb
hlt
mov
in
repz
sbb
cwtl
out
jecxz
fildl
add
gs
out
lret
aad
mov
ljmp
popf
pop
les
jo
mov
xchg
cmc
jecxz
pop
lret
pushw
adc
repz
arpl
mov
shlb
cld
loop
inc
push
out
add
add
mov
pop
pop
mov
ds
pop
call
mov
and
outsl
fstl
adc
ret
xor
mov
fmulp
loop
xorb
lea
ljmp
push
outsl
xor
fwait
push
fdivrl
or
mov
push
xchg
sahf
cmpsl
subl
in
mov
jo
dec
push
cmp
rolb
jno
stos
cmp
ss
push
test
lret
andb
push
in
mov
shlb
push
outsl
sbb
xchg
inc
int3
mov
sbb
popa
push
and
dec
inc
test
dec
cmp
mov
fwait
adc
inc
not
jo
add
es
sub
inc
xchg
push
clc
aas
sti
inc
sub
insb
leave
movsb
das
loope
fs
inc
mov
xchg
ljmp
cmp
mov
push
cltd
cmp
adc
mov
stos
add
cmp
adc
ja
mov
and
test
and
sti
cmp
cmpsb
sahf
sub
jl
or
out
add
inc
ljmp
add
enter
cmp
insl
aam
pop
dec
cmp
jb
adc
push
add
fwait
dec
add
push
cmc
lods
scas
sti
xchg
movsl
icebp
and
movl
add
insl
stos
faddp
push
loopne
mov
popa
lcall
sbb
movsb
out
and
pushf
inc
xor
xchg
sub
mov
xchg
insb
mov
lds
pop
and
push
xchg
xchg
int
cltd
fs
out
iret
jae
mov
insb
fnsave
repnz
outsl
jbe
push
sbb
and
insb
movq
xchg
adc
test
ss
lods
notb
loopne
adc
jne
cmpb
cltd
xchg
push
aas
adc
jmp
mov
cmpsl
cli
push
in
sahf
xchg
adc
loop
jo
and
push
mov
cwtl
or
outsl
movsl
std
jl
inc
test
xchg
stos
push
inc
in
mov
push
inc
add
sub
sub
lea
stos
daa
sti
shrb
or
lds
xor
mov
fcoms
xor
dec
mov
and
je
out
movsb
push
cmp
lods
dec
add
xchg
mov
pop
mov
leave
int3
hlt
fs
dec
lret
lret
dec
cld
test
xorl
mov
outsb
inc
mov
jbe
sbb
and
ljmp
sbb
rclb
fists
lds
enter
mov
test
adc
xchg
and
mov
cmpsl
push
ja
ds
pop
pop
dec
iret
jp
adc
push
or
add
mull
cmpsl
ud1
dec
mov
int3
arpl
lods
std
jl
es
enter
inc
and
adc
jbe
cmp
mov
cmp
hlt
fistps
cmpsb
shrl
dec
xchg
mov
dec
lret
adc
cmpsb
mov
or
jb
fnstsw
sbb
js
mov
xchg
sub
pop
imul
mov
sbb
xchg
add
into
or
pop
pop
xor
mov
imul
add
lret
enter
sbb
mov
adc
pop
pop
add
addr16
call
mov
mov
repz
mov
loop
mov
mov
fwait
inc
jg
push
and
jl
xchg
or
insl
adc
lds
xor
shll
out
call
dec
out
inc
add
hlt
stos
repz
seto
out
pusha
cmp
mov
pushf
ror
pop
lods
into
push
jmp
popa
pop
adc
push
repz
std
mov
mov
xchg
test
pop
imul
movsb
rorb
and
pushf
daa
sarb
mov
sub
xchg
pop
mov
mov
mov
cwtl
inc
aam
loopne
lret
test
int3
rcll
dec
mov
xchg
xor
mov
in
adc
mov
inc
shlb
andb
stos
test
js
add
inc
imul
out
movsl
add
out
xor
call
jnp
cmc
sbb
sti
out
stos
or
push
out
fsts
call
mov
data16
add
movl
shl
cmp
leave
dec
sbb
xchg
int
jl
mov
cmpsb
roll
sbb
push
in
add
mov
mov
cld
loopne
push
cmp
sarb
int
push
loop
mov
sarl
sbb
aam
xchg
lock
repz
aaa
inc
out
sub
lret
xchg
mov
jae
dec
inc
paddq
add
sub
mov
enter
cli
push
jns
lock
ret
dec
mov
insb
loopne
lret
adc
hlt
sub
jge
push
loope
stos
xchg
fisubl
sub
jge
mov
popf
xchg
xlat
inc
imull
fldcw
or
addb
cmp
int
outsl
lcall
xor
push
in
rcrb
xchg
or
pop
mov
std
aam
movsl
mov
iret
sub
scas
xlat
repnz
xor
insb
scas
je
cvttps2pi
dec
push
rorb
mov
cmp
leave
stos
push
jnp
jno
mov
mov
or
inc
mov
mov
inc
add
rorl
sahf
mov
push
mov
and
lret
cltd
sbb
les
push
incb
ss
test
stos
jecxz
jb
leave
jne
inc
push
sbb
jnp
sub
push
invd
and
bound
sarl
push
loopne
adc
cmp
sub
int3
ret
imulb
push
les
sbbb
dec
inc
mov
dec
mov
icebp
out
push
out
test
push
gs
jbe
sub
fwait
jbe
sbb
aaa
mov
push
jae
movsb
adc
rol
out
ss
xchg
add
incb
lcall
push
push
jecxz
dec
xor
test
lds
push
sarb
andb
lret
lahf
ss
rclb
ljmp
jmp
sub
rolb
xor
adc
inc
dec
cwtl
scas
shlb
out
repz
jo
arpl
inc
add
pop
mov
mov
cli
outsl
sub
lret
mov
jmp
mov
test
xchg
and
add
sbb
inc
sbb
xor
and
push
dec
xchg
mov
enter
mov
push
or
inc
jb
xchg
ja
scas
inc
dec
and
jno
movl
psraw
loope
pop
cmp
lahf
xor
lods
aas
cli
cmp
dec
nop
in
fidivl
mov
jne
xor
mov
dec
out
dec
mov
dec
push
push
imul
add
inc
lock
lds
lds
sahf
push
inc
repnz
push
xchg
inc
out
fcomp
test
outsl
nop
sub
movsl
stos
xchg
sbb
adc
xchg
dec
inc
adc
loope
push
daa
cmp
add
mov
mov
loop
xchg
xchg
xchg
lods
aas
sub
add
mov
lock
add
imul
sarl
mov
divb
or
icebp
mov
or
sbb
in
sub
jnp
mov
mov
add
lods
xor
fsubl
push
xor
mov
jecxz
loopne
mov
xor
and
cmp
push
mov
sbb
cli
std
test
fbstp
in
pusha
mov
out
aaa
pushf
out
and
aad
adc
mov
jnp
mov
bound
xchg
daa
adc
popa
imul
add
aad
aaa
call
add
subb
mov
xor
xchg
subb
pop
mov
nop
mov
loop
aam
cmp
icebp
xchg
iret
arpl
jbe
imul
div
add
addr16
out
jns
ljmp
imul
xor
push
sub
push
inc
ja
lret
or
mov
test
icebp
rolb
out
shlb
daa
cmp
push
into
push
inc
mov
pop
jge
into
jl
arpl
jb
sbbb
pushf
loope
xchg
push
pusha
or
jg
or
jno
fdivrs
adc
pop
mov
sub
lret
loopne
inc
aam
push
repz
icebp
cld
cmp
les
push
icebp
mov
pop
jnp
lret
roll
js
push
cltd
xchg
div
cld
cmp
pop
add
push
int
adc
push
lds
adc
mov
cmp
cmp
adc
sahf
push
xchg
lods
xor
mov
push
sub
adc
fsubrs
fwait
outsb
mov
cmp
iret
dec
cmp
jnp
inc
stos
pop
sbb
pop
mov
cld
sbb
xlat
nopl
mov
jno
sbb
es
dec
cmp
sub
or
adc
daa
and
in
xchg
mov
cwtl
lahf
sub
pop
xor
sub
xchg
inc
xor
aad
int
mov
lret
add
lea
div
and
scas
add
rorl
in
sub
das
add
out
adc
cmp
clc
and
dec
in
jno
inc
dec
pop
xor
inc
dec
adc
mov
pop
mov
push
movsl
xchg
sub
jmp
pop
xor
lahf
fwait
sbb
mov
pop
push
xchg
cmc
push
and
xchg
ljmp
lret
outsl
sbb
inc
push
in
pop
and
xchg
mov
clc
sarb
mov
inc
mov
xchg
push
lds
dec
pop
pusha
lahf
leave
xchg
inc
mov
sbb
in
push
arpl
inc
ja
xchg
mov
orb
push
add
loopne
leave
inc
loop
jmp
xchg
jmp
mov
test
outsb
or
and
cld
and
out
push
mov
mov
push
xor
orb
adc
adc
mov
andb
sub
pop
je
es
int3
inc
add
jmp
sbb
sub
mov
xchg
int3
loop
cltd
adcl
push
stos
fld
dec
ret
xor
mov
or
adc
cmpl
test
and
nop
pushf
or
pop
or
and
fdivrl
lock
sbb
les
adc
xchg
imul
pop
xor
aad
xchg
shrb
cmpl
dec
sahf
sbbb
fidivrs
mov
mov
stos
bound
pop
xor
jo
xchg
insb
jns
jle
jno
test
lods
ret
mov
mov
xchg
aas
ss
sub
mov
dec
pop
pop
pop
pusha
lock
pop
and
pusha
ss
sub
out
mov
shl
call
mov
pop
inc
mov
stos
jp
popa
ret
jg
dec
call
jnp
jecxz
inc
jbe
dec
add
je
add
pusha
sbb
sub
push
pop
xchg
int
inc
sbb
inc
pop
pop
test
je
adc
pop
lahf
sub
adc
inc
add
inc
push
lds
outsb
testl
xor
fldenv
push
inc
or
fsubp
xchg
iret
pop
movsl
jg
mov
rol
daa
mov
mov
xlat
cs
icebp
xor
fnstsw
or
hlt
cmp
data16
arpl
outsl
add
mov
ljmp
jne
jno
and
aam
xchg
cmpsl
fsts
or
xchg
sbb
cli
mov
rcr
fs
cltd
jno
imul
xchg
stos
sub
or
inc
scas
xchg
mov
dec
jp
push
scas
adc
test
mov
stos
sub
sbb
pop
adcb
rclb
sbb
iret
dec
jmp
outsb
dec
aaa
or
cmc
mov
adc
movsb
jo
imul
adc
aaa
mov
or
pop
ljmp
xchg
cmpsb
and
inc
jno
xor
mov
inc
jge
mov
rcll
jl
mov
scas
call
out
arpl
adc
in
call
test
or
xchg
add
cmp
int3
in
cmpsb
add
loopne
sbb
popf
jmp
ror
lret
hlt
fdivs
xor
jns
jp
push
jb
cltd
outsb
mov
repnz
cli
jecxz
pushf
test
mov
int3
imul
mov
xor
add
or
icebp
cld
rolb
push
pavgw
add
add
and
xor
pushf
jmp
mov
rclb
xchg
cmpsl
mov
xor
mov
ret
ffree
out
movsl
ret
mov
fmulp
fwait
jne
dec
mov
fistl
cli
ja
push
jbe
adc
inc
mov
gs
push
pop
and
and
lods
mov
mov
ret
pop
lods
inc
jg
mov
pop
hlt
les
push
mov
aas
lret
inc
sti
popa
pop
orl
call
bound
pop
pushf
sub
loope
enter
clc
adc
mov
fcompl
or
xchg
nop
mov
dec
and
clc
mov
lea
mov
scas
sbb
cmpl
jecxz
mov
icebp
icebp
clc
sub
sbb
cmp
jmp
pop
bound
dec
enter
insb
inc
sbb
or
cmp
ja
mov
dec
cs
in
ret
and
pop
push
or
das
fsts
dec
sbb
inc
mov
cli
mov
dec
xchg
std
insb
lods
mov
push
pop
sbb
lahf
adc
shrb
mov
jno
cmp
pop
push
jns
or
jg
sub
lret
pop
mov
rcrl
mov
sbb
lods
ficomps
ret
fisttpll
mov
into
or
push
inc
xchg
imul
adc
mov
or
cmp
int3
repz
fwait
xchg
or
leave
in
xchg
ret
js
loope
mov
xlat
sub
lds
xlat
ret
daa
xchg
sar
mov
xorb
mov
outsb
xchg
or
psubsb
sbb
add
jb
sbb
fistpll
pop
dec
pop
imul
add
inc
aas
and
sbb
jo
pushf
int3
aaa
cmp
decb
xorl
popf
push
movsl
leave
xchg
push
inc
fstl
push
mov
mov
adcl
jns
push
hlt
in
and
in
adcl
pop
mov
ljmp
add
sub
xchg
mov
scas
and
add
sub
mov
pop
jle
push
test
lods
call
add
shlb
outsl
mov
test
divl
outsl
loope
testl
dec
push
push
fistps
push
or
icebp
inc
jno
mov
je
xor
mov
push
dec
jnp
pushf
inc
and
lock
jge
push
push
or
sub
lret
pop
aam
push
cmp
push
arpl
out
add
cmp
frstor
std
fwait
loopne
push
fcmovnu
test
adc
add
das
xor
cld
std
cs
sub
mov
inc
or
push
lds
out
xlat
cltd
mov
mov
pushf
push
mov
lods
in
jae
cwtl
or
sub
dec
jecxz
inc
adc
pop
xor
stos
adc
jl
push
and
aas
test
fwait
jecxz
fistpll
sub
aas
es
fs
testb
adc
cmp
in
dec
pop
xor
in
loop
or
loope
clc
sub
aas
movsb
gs
repz
xchg
add
adcb
pop
jo
cwtl
cmc
insb
adc
loope
es
push
iret
mov
pop
shl
mov
xchg
ret
xor
pop
loopne
in
outsb
flds
fcmovnbe
pop
in
push
jnp
cmp
push
mov
cmp
adc
and
orb
mov
es
movsl
addb
and
cmpsb
xchg
jnp
adc
jecxz
loop
push
fs
jb
in
mov
sbb
mov
sub
fisubrl
cmp
mov
popa
sub
clc
push
in
insl
push
fiaddl
xchg
sti
and
or
in
nop
xchg
std
adc
fadds
mov
sbb
push
cmp
out
insb
mov
inc
inc
sahf
jmp
bsr
jbe
jb
imul
sbb
xorb
sub
sbbb
into
sbb
lds
inc
arpl
or
dec
in
insl
ror
cmp
or
inc
insl
mov
fimull
push
mov
test
inc
jmp
lds
popa
dec
idivb
push
ret
mov
in
push
mov
jno
in
xor
outsb
popf
dec
int
dec
xor
mov
outsl
cmp
xchg
xor
loop
stc
out
scas
mov
dec
inc
jmp
fs
hlt
jb
stos
mov
and
push
sbb
or
mov
sarl
mov
test
add
xchg
mov
int3
repz
push
cwtl
pop
test
adc
fsubrl
or
testb
lea
pushf
adc
adc
mov
pusha
xchg
adc
mov
cmp
and
inc
loop
and
jecxz
mov
popf
pop
je
cmp
xor
pop
fnstsw
jbe
shll
xrelease
jbe
mov
or
mov
cmp
aaa
fwait
ret
sbb
sub
inc
cmp
mov
sbb
sbbb
test
mov
mov
nop
lods
pop
outsb
sub
das
add
push
fisttpl
add
ficompl
jmp
mov
fdivp
or
or
xor
ret
dec
mull
mov
and
test
lahf
cmp
out
loop
jns
sbbl
xchg
dec
leave
ss
filds
cli
imul
jb
mov
popa
int3
stos
pop
cmp
mov
outsb
jns
js
negl
push
jp
loope
stos
dec
xchg
sti
lds
pop
xchg
xchg
pop
mov
std
jp
icebp
lcall
cmp
or
stc
dec
push
add
fcompl
cmp
or
pop
push
subl
ret
cmpsb
mov
lcall
sar
bound
xchg
adc
push
loopne
xchg
or
or
sub
xchg
js
sbb
sbb
stc
lds
stos
adc
gs
mov
cli
scas
orl
ret
sub
xlat
aaa
bound
dec
and
jno
pusha
xchg
inc
sbb
pop
dec
xchg
push
movsb
push
pcmpeqw
dec
xor
bound
in
aad
pushf
pop
cmp
dec
lods
ds
sbb
mov
out
inc
lret
xor
int
dec
movsb
mov
roll
rcll
and
into
mov
rcll
pop
xorl
add
mov
push
aad
fwait
pop
je
ja
addr16
push
test
lahf
dec
xor
sub
ret
pop
les
sarl
in
sti
jmp
inc
les
lahf
loope
gs
jg
dec
and
xor
adc
jmp
stos
add
jb
in
mov
rcr
inc
cltd
mov
xor
dec
outsb
clc
enter
push
pushf
lods
cmp
mov
insl
push
sub
shrb
xchg
push
and
or
fldt
fstpl
jae
pop
pop
mov
mov
popf
sbb
stos
or
push
sti
sbb
dec
push
xlat
rcpps
or
dec
int3
sarb
jnp
sub
subl
cmpsb
or
adc
mov
jmp
lahf
and
xor
jb
adcl
out
fs
adc
cmpsl
movsl
add
dec
shrb
test
mov
cs
test
ja
icebp
repnz
fxch
out
fwait
and
imul
mov
adc
testl
out
adc
xor
mov
outsl
sub
push
call
mov
lods
bound
rorl
xchg
lock
insb
sub
push
jns
adc
popf
push
shlb
mov
test
dec
adc
int3
sti
mov
jmp
pop
insb
push
sub
xor
pusha
jno
jl
jbe
pop
lret
mov
lret
jne
cltd
push
movl
je
repnz
xor
dec
xor
cmpb
outsl
cmpsb
sti
int3
cmp
js
cld
cmp
mov
push
xchg
stos
faddp
jp
push
or
cltd
push
or
insb
add
je
ret
push
and
aam
or
dec
daa
or
and
scas
or
aaa
stc
mov
inc
or
xlat
fdivs
push
jecxz
pusha
push
mov
lcall
repz
enter
xor
outsl
push
cwtl
pop
or
cmp
dec
loop
push
pop
data16
cli
fisubs
cvtps2pd
fimull
sbb
daa
mov
orw
stos
jp
or
pop
xor
clts
sub
or
mov
push
xor
out
xchg
das
std
vmulss
insl
inc
std
add
loop
int
mov
and
pop
sub
inc
mov
aam
por
xchg
in
push
fcompl
push
inc
or
sbb
xlat
lret
jge
push
xchg
jecxz
push
gs
lods
adc
ja
fstpl
cmp
orb
jae
xchg
adc
mov
lods
daa
pop
mov
xchg
dec
insl
mov
into
idivb
jmp
push
rcll
xchg
imul
cld
sbb
jno
lahf
mov
pop
adc
jb
push
scas
sbb
mov
mov
and
cli
add
inc
andl
hlt
cltd
add
test
je
or
sub
mov
lods
popf
mov
mov
je
mov
or
and
fcomps
and
cli
xlat
shll
imul
push
dec
mov
sbb
adc
add
jb
mov
shl
adc
in
fldl2t
mov
jno
sub
add
jg
int
jnp
repnz
jg
xchg
in
jne
and
lock
das
in
in
lds
xchg
es
test
sahf
test
inc
jb
add
pop
aam
loopne
ss
xor
scas
cmc
cltd
fistpl
bound
es
dec
and
xchg
insl
shrl
in
mov
jg
jmp
aaa
dec
inc
adc
dec
mov
lahf
imul
and
cmp
xchg
cmp
imul
mov
mov
setle
jae
cli
pop
adc
jo
stos
cmp
shl
je
lahf
dec
mov
filds
push
enter
and
dec
mov
insl
mov
ss
push
loope
bound
dec
das
lea
pop
add
stos
sbb
sub
loopne
add
pop
adc
icebp
rolb
adc
pop
outsb
iret
ficompl
shlb
sti
lds
sbb
push
jbe
ljmp
sub
sub
jo
insb
lods
pop
mov
dec
ljmp
inc
push
pop
dec
cs
pop
add
fdivl
add
insb
add
add
sbb
hlt
fs
popf
jg
aad
mov
ret
push
mov
sbb
sbb
in
pusha
dec
fists
leave
push
or
out
inc
fiaddl
int
cmc
jnp
or
jnp
push
jne
mov
xchg
pushf
mov
sbb
pop
inc
jb
pop
mov
sbb
dec
lds
std
or
pop
or
adc
mov
rcrb
xor
dec
mov
jae
sbb
inc
add
xchg
jb
cli
pushf
mov
mov
xlat
or
aas
xor
jbe
int3
mov
lods
mov
push
int3
pop
dec
rcr
sub
aas
xchg
and
mov
jne
push
fidivl
notl
sbb
ja
in
mov
into
xor
push
sar
inc
mov
cmp
pop
or
int
in
loop
imul
mov
push
ds
das
loopne
mov
outsl
adc
jg
mov
xchg
xchg
fmuls
push
cmp
clc
sahf
lods
xor
aad
sar
imul
lds
fisttps
lods
cmp
cwtl
fistpll
fldcw
sarb
mov
mov
jb
addr16
add
sub
mov
cld
in
xor
mov
lea
adc
or
inc
or
sti
cli
mov
pushf
xchg
movsl
mov
cld
addr16
imul
movb
mov
xor
adc
jb
fisttpl
jle
jnp
or
lcall
pandn
mov
mov
push
repnz
xor
movsl
fisttps
popf
pop
daa
inc
mov
xchg
xchg
or
mov
sbb
pop
out
lret
sahf
mov
std
pop
lcall
jnp
enter
test
icebp
lods
dec
test
gs
outsb
add
pop
fwait
aaa
stos
sbbl
data16
pop
pop
xor
mov
cmp
jbe
addb
and
mov
add
and
sbb
lea
adc
cmpsl
sub
daa
scas
in
rolb
add
dec
test
add
sbb
dec
cmpsl
outsl
ljmp
adc
push
xchg
jne
mov
es
shlb
daa
scas
cmp
scas
push
sbb
pop
lcall
mov
lods
or
lret
jae
and
pop
das
imul
sub
sarl
jmp
and
mov
call
jno
mov
aas
push
and
cmc
pop
adc
ja
scas
fdivrs
mov
jle
xor
dec
inc
fistpl
and
xor
sbb
inc
es
scas
mov
cmp
fadds
lret
in
cltd
aam
orb
mov
sarb
fdivr
mov
outsl
insb
clc
mov
in
fistpl
inc
cltd
in
test
addl
sahf
test
lock
enter
and
ficompl
sar
push
mov
sub
jle
sar
testb
push
adc
int
or
in
inc
jecxz
push
out
cltd
and
data16
jno
sbb
sub
mov
and
xor
std
mov
mov
and
adc
pop
push
jae
aam
test
imul
outsb
add
add
add
cmpsb
dec
and
sub
jl
icebp
aas
iret
daa
clc
je
lods
and
mov
cmpsb
aam
mov
inc
mov
push
shlb
push
jge
lret
xor
adc
lock
mov
xor
sbb
cmc
mov
xor
cmp
clc
dec
pushf
js
sahf
pop
fcom
jno
mov
cmp
popf
jbe,pt
pop
js
xor
push
shlb
pop
negb
push
ss
sub
jne
sbb
aam
addr16
sbb
adc
popf
mov
lock
ffreep
cli
mov
mov
hlt
sahf
adc
pop
adc
push
mov
sub
ljmp
jle
and
bound
xchg
sahf
inc
int
pop
lds
stos
xchg
icebp
sub
dec
mov
add
mov
testl
dec
bound
ss
call
fidivrl
test
inc
icebp
adc
dec
lea
and
push
mov
sbb
mov
cmpl
shrb
cs
das
pop
aaa
pusha
jp
addr16
push
sbb
sub
jbe
loopne
or
mov
imul
daa
arpl
ret
out
lods
ret
pop
lock
jo
jae
ret
arpl
sub
outsl
pusha
cmp
mov
push
and
sti
jns
xchg
pusha
fidivrl
push
les
cmp
sbb
in
roll
rorl
lret
das
mov
push
and
lahf
mov
dec
test
mov
cld
add
imul
and
into
push
xlat
rorb
mov
hlt
inc
dec
xor
out
pop
insb
pusha
jb
in
out
cmp
inc
dec
divl
mov
jnp
pop
in
in
fsubs
inc
push
jmp
and
cs
jbe
lea
adc
dec
cmpsl
out
out
push
lods
out
popf
push
or
and
jle,pn
loop
push
in
sbb
cmp
mov
push
xchg
mov
out
test
sti
inc
rcr
sbb
adc
xchg
aas
std
jae
jmp
mov
dec
push
mov
jmp
repnz
xchg
daa
scas
inc
inc
xchg
pop
mov
adc
inc
decb
scas
lock
cltd
and
jnp
subl
push
aam
lahf
cmpsl
or
jb
cld
mov
ret
in
pop
testb
rol
mov
mov
mov
and
cmpsl
inc
and
dec
jne
les
add
mov
pop
mov
je
push
call
int3
push
xchg
adc
xchg
xchg
pop
std
std
mov
ret
or
xor
dec
outsb
dec
mov
enter
lahf
aad
out
jns
loopne
popf
es
or
das
sub
shl
rolb
aaa
pusha
sbb
and
cmpsl
pop
imul
push
outsl
mov
or
xchg
xchg
mov
pop
pusha
mov
repnz
sahf
add
and
jne
push
sub
fmul
lcall
dec
mov
iret
cmpsb
sarl
xchg
movsb
sbb
push
mov
jmp
or
ja
adc
mov
push
inc
mov
out
jns
pop
adc
adc
mov
lods
stos
push
dec
aad
jns
fucom
cmpb
add
adc
inc
xchg
fldl
shlb
jle
pushf
sbb
inc
xchg
xor
test
adcl
in
jg
ret
push
adc
ja
inc
dec
push
sub
nop
xchg
imul
lock
pop
push
pusha
iret
dec
mov
sarl
je
cli
add
loope
shrl
mov
push
sub
xchg
fsubs
mov
in
xchg
loopne
scas
or
hlt
xchg
pop
stos
out
mov
in
aaa
mov
jp
sub
aad
loope
loop
jns
mov
scas
dec
arpl
testb
cwtl
cmp
std
sub
xchg
out
mov
and
mov
adc
clc
xchg
xorb
outsl
cmpsl
mov
jmp
test
out
sub
lods
or
mov
xchg
inc
pop
xchg
jns
lods
push
and
out
jae
mov
int
fwait
gs
and
push
hlt
cmpsl
addr16
test
push
add
sub
pusha
int3
je
stc
enter
rclb
lods
scas
pop
xchg
xorl
sbb
ds
fwait
or
sub
push
adc
rorl
xchg
fsubl
scas
lds
rorb
mov
aam
add
rolb
adcb
xor
xor
dec
imul
or
mov
add
xor
dec
es
push
stc
adc
jns
movsl
int
ret
pop
lea
pop
sbbl
mov
ss
repnz
jle
or
clc
xchg
jl
mov
lods
adc
adc
ljmp
sbb
pop
mov
dec
int
in
pop
jno
movhps
dec
fmull
imul
pop
outsl
push
shlb
add
data16
sub
jp
or
push
js
rcrb
stos
push
cs
aam
shll
add
xor
int3
xchg
out
lahf
inc
dec
adc
movsl
bound
enter
sbb
mov
mov
jo
xchg
xchg
dec
jge
daa
lods
push
call
fchs
stos
jp
inc
or
jbe
inc
fsts
icebp
xchg
fists
dec
add
xlat
hlt
push
or
dec
inc
xchg
jne
mov
jge
sub
fisubrl
jp
outsb
mov
push
lahf
push
mov
add
icebp
cmp
pusha
xchg
imul
push
jp
mov
sbbl
jge
xchg
adc
mov
pop
lret
fisubrs
fidivrl
pop
div
jp
hlt
and
mov
scas
add
jbe
dec
inc
xlat
cmp
inc
xor
into
mov
xlat
jmp
push
out
mov
bound
pop
out
std
dec
lods
gs
xor
pusha
xor
or
and
xchg
sbb
aam
test
push
push
cli
jp
ficompl
ja
dec
pop
cmp
pushf
push
sbb
imul
fldenv
ljmp
and
movsb
pop
mov
push
push
sbb
push
and
cli
cmpsl
add
mov
lods
pop
adc
cmp
sub
cli
cli
inc
arpl
fiaddl
jge
test
popa
mov
pop
dec
sbb
mov
jbe
das
dec
bound
test
shrb
pop
arpl
jge
mov
push
dec
push
mov
xor
mov
add
sarb
cmpsl
push
sbb
cwtl
or
mov
mov
dec
in
ror
lret
insl
setno
es
lahf
aas
in
bound
in
sti
add
mov
xchg
xchg
mov
jmp
sti
outsb
pop
cmp
cmpsl
jns
pop
negl
sbb
outsb
ss
clc
push
push
ret
pop
ficoms
test
mov
lock
xchg
int3
push
arpl
mov
imul
inc
sbb
mov
hlt
inc
ss
fldcw
xchg
lahf
repz
push
test
pop
fwait
inc
adc
int
int
scas
pushf
fucomp
pop
orl
jmp
sub
or
pushf
movsl
jg
push
repnz
test
stos
cmp
add
ss
inc
iret
mov
ljmp
cmp
jg
data16
outsl
inc
pop
fcomp
addb
xchg
lods
mov
xor
movsb
ret
or
pop
inc
lret
aaa
movsb
int3
fs
movsl
cmp
xchg
das
xchg
mov
cmc
jge
push
sbb
orl
jecxz
mov
mov
stos
add
push
jo
pop
movsl
movsb
add
inc
push
pop
pushf
insl
push
enter
ds
fwait
jbe
mov
sub
jnp
dec
iret
sbb
ret
bound
adc
stc
in
stc
lret
sbb
jnp
pop
push
fs
cmp
pop
mov
inc
ds
outsl
or
mov
xchg
jnp
faddl
jo
das
dec
cmpsb
or
ja
clc
inc
roll
ret
inc
mov
stos
stc
sub
sub
and
xlat
lock
or
add
arpl
lods
std
dec
and
push
add
push
std
mov
cmp
sbb
mov
xor
mov
sub
sahf
ror
pusha
lret
xor
bound
leave
ljmp
ss
shll
out
test
ja
dec
dec
dec
outsl
or
lea
divb
bound
mov
xor
inc
incl
in
or
js
and
cmp
jle
inc
adc
xor
push
in
xor
inc
xchg
sub
adc
adc
outsl
iret
movsb
subl
dec
popf
sbb
test
bnd
pop
sbb
outsb
repnz
add
xor
lcall
cli
inc
fldpi
data16
fmul
fsubrl
mov
cmp
aad
ljmp
push
push
bound
adcb
fstpt
mov
mov
pop
xchg
mov
lods
dec
mov
or
pop
icebp
or
xchg
xchg
ja
and
mov
dec
cmp
ljmp
pop
loop
xor
pop
jne
dec
stos
jle
adc
and
mov
and
pop
and
icebp
and
cli
testl
out
aam
jp
cmp
pushf
and
mov
out
dec
push
xchg
pop
inc
fdivl
aas
lods
sbb
adc
cmp
ljmp
imul
and
and
out
ret
mov
inc
and
mov
or
pop
outsb
and
pusha
and
sbb
jne
or
gs
shrb
cmp
insb
sar
mov
daa
insb
mov
cmpsl
mov
fisubl
push
xlat
bound
or
in
cmpsl
inc
jnp
mov
or
sub
mov
imul
jne
jp
lods
rclb
mov
jl
inc
arpl
lods
aas
in
fistpl
push
or
addr16
adc
mov
pop
stos
cmp
in
push
xlat
mov
push
cmc
pop
sahf
xchg
ret
ds
dec
das
dec
xchg
push
add
inc
xor
push
sbb
inc
ja
loop
outsl
pop
pop
sbb
or
rcl
adc
pop
insb
out
mov
dec
and
shr
add
pop
call
jle
enter
mov
andl
sbb
outsb
push
xor
mov
push
push
mov
cmp
ret
mov
fldl
aam
iret
arpl
ds
xchg
stos
imul
outsb
mov
xchg
mov
push
push
push
cld
je
outsl
jno
out
in
sbb
out
js
daa
mov
sti
jne
sbb
push
push
sbb
dec
mov
add
fstps
daa
mov
scas
gs
and
mov
push
inc
sub
in
dec
jns
test
js
dec
cld
aaa
lea
sbb
push
into
rcrb
mov
into
imul
jnp
lret
mov
mov
xchg
pushf
push
dec
add
repnz
inc
cmp
pop
add
or
pop
or
and
mov
lea
sub
pop
and
jecxz
and
imul
bound
xor
cmpsl
mov
inc
sahf
inc
jns
in
aas
mul
cmpsb
nop
cmpsl
jno
in
jp
dec
daa
mov
nop
add
subl
scas
int3
jg
mov
jp
adcb
lcall
orl
add
loop
and
or
sub
push
dec
scas
je
inc
daa
or
fists
hlt
enter
movsb
or
cmpb
inc
jmp
push
push
call
or
jl
inc
into
cwtl
adc
cmpsb
orb
pop
adc
loopne
jecxz
repz
mov
aas
mov
mov
push
sbb
add
or
mov
inc
mov
mov
mov
popf
xchg
add
cld
sub
add
loop
xorl
dec
push
repz
sbb
xchg
xchg
cltd
push
adc
mov
and
jle
mov
enter
mov
dec
test
inc
add
and
in
pop
inc
std
push
jge
cmp
outsl
dec
sbb
sub
sarl
jo
outsl
std
repz
in
pop
lret
pop
daa
fucomip
cmp
cmp
and
std
bound
adc
mov
iret
cmp
sbb
stc
mov
call
ljmp
outsb
lcall
arpl
das
loop
popa
xorb
pop
push
bound
inc
mov
push
push
cltd
in
pop
sub
iret
int3
rorl
lcall
test
mov
imull
xor
popa
mov
cmpsl
in
push
cmp
adc
aaa
mov
test
sub
adc
pop
mov
xchg
in
push
in
add
flds
repz
loop
popf
cmp
sub
mov
test
aad
or
adc
dec
sahf
add
push
imul
and
dec
out
shlb
xchg
ret
pushf
or
repz
int3
stc
imul
loope
xor
pop
push
aaa
xchg
mov
dec
pop
inc
cmp
ret
add
fs
loopne
sbb
imul
cmpsb
and
das
sbb
pop
pop
in
ficomps
fwait
sbb
or
ja
add
jg
push
mov
lahf
sbb
movsb
push
faddl
push
xchg
push
pop
outsb
mov
aad
gs
jno,pn
xchg
scas
mov
data16
dec
jle
popl
push
aad
inc
int3
pop
add
mov
fdiv
push
ss
leave
or
cmpsb
jl
dec
ja
adc
and
or
push
fstps
adc
popa
pop
fcoml
in
scas
in
pop
add
lods
or
jmp
pop
cmpsb
and
inc
xchg
testl
arpl
lea
push
sti
jb
shl
rcr
pop
stc
fistps
nop
loope
mov
xlat
gs
mov
lahf
jle
xor
mov
adc
insb
in
mov
inc
xchg
dec
xchg
adc
int
jmp
stc
xor
test
inc
mov
fsub
add
sbb
lea
arpl
fdivr
leave
dec
in
test
mov
aas
pop
xchg
jmp
jl
pop
adc
and
jge
cmp
jg
mov
popf
inc
jnp
add
int
pop
jnp
cmp
popa
pop
rcr
stos
or
and
push
mov
or
ret
sub
adc
insl
jno
sbb
sbb
xor
jecxz
cmp
repz
dec
and
xchg
sbb
dec
xor
cmp
lcall
inc
mov
pop
sbb
dec
test
jnp
insl
ret
andl
in
out
xor
adc
pusha
ja
out
mov
lea
imul
iret
lods
jb
ljmp
filds
in
popa
sub
rcr
mov
jg
xor
out
out
push
add
mov
lods
aaa
xor
jge
xchg
xorb
push
call
fdivs
dec
rorb
test
push
mov
adc
pop
xor
xchg
cmp
mov
dec
jne
sahf
pop
shll
mov
push
or
mov
adc
lds
jo
stos
in
sti
in
fstpl
xor
test
arpl
negb
inc
popa
lods
cli
daa
or
repnz
aad
das
xchg
cli
mov
shll
xor
xchg
xor
and
leave
jb
cld
add
sbb
ja
sbb
int
ret
scas
daa
jecxz
call
test
sti
frstor
int
icebp
inc
jle
dec
dec
jne
mov
fnsave
mov
mov
test
leave
adcl
mov
test
sbb
mov
rorl
jp
adc
imulb
lret
out
mov
pop
xchg
fldt
cmp
int3
push
inc
movsb
mov
push
cs
cmpsb
lahf
push
or
clc
out
pop
sbb
xor
cmp
pop
cli
sub
insb
jp
jno
push
cmpb
or
push
aad
fimull
int
xor
into
das
lret
push
pop
in
cltd
scas
lods
cld
lahf
adc
and
imul
mov
mov
and
lcall
cmp
pop
call
adc
mov
lcall
adc
push
subl
dec
inc
pop
or
mov
int
testb
mov
nopl
movsb
dec
scas
mov
push
push
adc
pop
xchg
inc
push
cmp
xor
xor
jne
lahf
mov
test
das
pop
pop
insb
jbe
mov
cmp
outsb
push
jle
jmp
push
mov
cs
scas
cmp
sub
sbb
or
cmp
mov
lods
adc
jno
xchg
mov
mov
pop
stc
push
jmp
xor
lods
ret
cwtl
dec
ljmp
sub
in
repnz
add
xchg
sub
mov
mov
jmp
insb
out
sbb
adc
push
mov
lods
mov
or
and
js
outsl
sub
insl
mov
dec
xor
mov
mov
int
nop
mov
or
xchg
es
or
xor
add
or
mov
and
xlat
lret
aad
mov
jmp
pop
add
loopne
leave
or
cmp
xor
les
aaa
iret
dec
add
ljmpw
aam
cmp
xor
adc
and
daa
mov
push
xlat
xchg
sbbb
and
xor
dec
aaa
xchg
fisubs
test
push
cltd
jae
and
and
pushf
insl
test
jo
movsl
or
mov
rolb
jo,pt
outsl
dec
jg
shrl
rcr
pusha
mov
mov
mov
sub
loope,pt
sbb
scas
call
insb
in
adc
push
sub
sub
xchg
mov
cs
out
ror
out
je
aam
lahf
gs
pop
ds
cmpsl
pop
sub
cwtl
jo
test
mov
cmp
xchg
out
notb
into
and
mov
jne
lea
ret
and
scas
mov
pop
pop
aam
jb
in
movsl
sub
pop
pusha
ss
fmuls
lahf
ljmp
std
cld
pushf
xorb
jbe
dec
jmp
xor
scas
roll
sbb
mov
jl
adc
push
loopne
adc
js
js
pop
pop
fsubrs
push
xchg
aaa
lock
push
adc
mov
dec
xchg
xchg
xchg
pop
or
and
test
pushf
add
push
mov
mov
loope
mul
or
stos
dec
loopne
lock
fs
lcall
jbe
ret
push
bnd
jb
out
or
cmp
ret
or
icebp
add
mov
mull
or
aad
lcall
pop
lcall
cmpsl
insl
mov
cmp
cld
ja
cmp
pop
dec
jb
inc
sub
inc
lret
pop
iret
das
into
mov
enter
movsb
shr
aad
xchg
jns
and
call
sub
test
xchg
out
cmpsl
ret
mov
inc
xlat
pop
mov
dec
jp
and
shrb
cmp
inc
hlt
in
mov
xor
xchg
clc
or
push
jb
lea
cwtl
or
mov
test
outsb
sahf
lds
aad
sbb
outsl
add
outsl
inc
icebp
xor
cli
add
mov
cld
xchg
cwtl
in
lea
cld
adc
inc
dec
fcoml
inc
dec
enter
out
clc
stos
sub
fwait
mov
lahf
mov
nopl
rorb
fcoms
xchg
test
xor
xor
lret
mov
sub
fsubrl
xor
sub
push
out
jbe
inc
jno
into
mov
ficoml
lock
fisubrl
lret
dec
cmpsl
mov
repnz
mull
push
push
xchg
outsb
das
push
ror
faddp
add
pop
mov
outsb
xchg
fstpt
or
ret
jp
ret
outsl
ja
pusha
jp
jnp
pop
repnz
scas
in
cs
cs
mov
pop
std
ss
lea
cmp
incb
sub
cmpsb
ret
pop
xchg
sbb
mov
mov
ljmp
call
les
pop
jne
mov
add
test
mov
insb
aad
out
xchg
or
jb
mov
sti
xlat
mov
sub
jns
arpl
mov
lods
sub
sti
and
and
orl
adc
cmp
dec
psllw
je
xchg
mov
cld
repnz
mov
lret
jnp
or
sbb
ds
cmp
div
xchg
push
inc
xchg
jbe
mov
insl
add
les
int
js
xchg
loope
and
addr16
add
loope
jecxz
inc
mov
pop
xor
leave
sarl
pop
xchg
xchg
adc
daa
adcb
mov
sahf
aam
inc
push
shll
icebp
mov
or
xorb
insl
xchg
stc
sub
add
aaa
jns
das
xor
das
in
scas
or
dec
jl
into
mov
cmpsl
push
inc
or
test
xor
loope
cld
mov
mov
fwait
mov
mov
pop
jle
std
mov
sub
dec
jmp
cs
cmc
mov
scas
pop
es
cmc
mov
sub
xor
leave
push
jb
loope
mov
xor
jecxz
lret
adc
iret
mov
mov
mov
sbb
xchg
icebp
push
ja
mov
loopne
push
adc
pop
jp
xor
fstps
test
sti
push
addb
mov
mov
push
repz
ja
fsubr
mov
popf
test
out
cmpsb
je
mov
inc
test
xor
dec
mov
fincstp
push
lret
int
call
pusha
clc
xor
cmp
cltd
adc
aaa
insl
div
add
lret
dec
lahf
cmp
out
sbb
out
frstor
jecxz
or
test
pop
fstpl
jle
mov
sti
and
leave
add
xchg
sub
js
pop
or
dec
adc
and
cmc
decb
in
inc
loope
xor
xor
or
insb
xchg
mov
pop
inc
loope
rcrb
fsts
push
adc
pop
mov
push
ss
clc
mov
or
and
jg
pop
cltd
pop
mov
int3
js
ds
mul
ss
xchg
pextrw
push
repnz
call
mov
push
insb
in
cld
stos
dec
divl
cmp
cmpw
xor
cmp
loop
lret
dec
cmp
stos
jl
cmp
lahf
push
mov
shlb
int3
cs
pop
sub
pop
outsl
push
gs
lret
daa
mov
jb
adc
dec
sarb
stos
pop
xchg
and
cltd
je
adcl
imul
testl
in
out
in
xor
in
mov
in
pop
jp
mov
cmp
out
sub
inc
andb
in
jb
ret
pop
xchg
and
jb
pop
xchg
arpl
push
sbb
inc
jno
daa
sbb
mov
fmuls
xor
push
sbb
pop
stos
jecxz
insl
addr16
shl
inc
nop
int
in
adc
push
dec
in
gs
ret
xchg
jno
mov
outsl
cmp
fs
les
nop
mov
sbb
xchg
repz
stos
jmp
adc
inc
dec
jae
inc
movsb
and
sbbl
loope
imul
or
jnp,pn
or
js
inc
mov
into
fucomp
sub
mov
adc
movsb
cmp
jo
mov
xchg
add
fbld
xor
mov
dec
xor
push
push
aam
pop
inc
jmp
mov
jo
mov
sbb
in
add
cmc
sbb
sub
xchg
inc
dec
inc
mov
aas
inc
aaa
das
mov
insb
xor
or
cli
and
fdiv
pop
sub
out
sbb
hlt
mov
sbb
test
push
push
pushf
sub
call
lret
xor
test
push
mov
insb
fildl
push
shr
pop
sahf
fstpt
cmp
sti
jl
fs
in
icebp
jmp
aas
and
inc
jmp
xor
test
jne
sbb
jg
sbb
cmp
mov
arpl
mov
iret
movsl
or
pop
mov
and
sbb
and
mov
jge
dec
imul
mov
mov
mov
mov
cmp
and
ss
push
mov
pop
jg
mov
inc
add
lahf
repnz
jecxz
jecxz
ret
fisttpl
ljmp
jl
cmp
ret
and
rcrb
ja
insl
sub
push
jno
sbb
test
push
movsb
mov
rclb
pusha
xchg
stos
xor
mov
out
sbb
stos
rcl
pop
mov
fs
imul
aaa
jae
sbb
inc
mov
jle
and
shlb
xchg
xor
push
fildll
mov
out
addb
loop
cmc
mov
ret
dec
push
mov
fcomps
mov
sub
in
mov
cmc
mov
roll
fidivrs
test
mov
adc
loope
dec
call
neg
dec
aad
fs
scas
sbb
cmp
cmpsl
mov
push
push
std
adc
fmuls
and
push
adc
aad
jge
cs
rorl
movl
xor
push
mov
inc
pop
pushl
pusha
xchg
lds
mov
pop
insl
xor
fidivrs
xchg
fs
bound
jno
out
nop
jb
insb
sub
inc
outsl
push
ja
data16
repz
add
lret
jnp
enter
add
mov
fs
xor
call
sub
mov
lea
or
mov
xchg
jne
les
inc
popf
cmp
test
js
mov
addr16
sahf
sub
jg
filds
cmp
icebp
ljmp
mov
pop
cltd
jg
mov
cmp
adc
sub
jnp
es
adc
jb
pop
sbb
mov
rcrl
push
fs
mov
adc
out
adc
jg
pop
mov
jl
insb
mov
and
repz
pusha
cmp
jg
enter
sbb
and
loop
pop
int3
and
fs
pop
notl
inc
pusha
and
sbbl
aam
dec
mov
sahf
incb
filds
mov
sbb
cli
inc
sub
pop
movsl
mov
cltd
mov
daa
bound
aad
fcoms
lods
imul
mov
push
push
push
loopne
push
pop
inc
sub
sahf
push
lods
jmp
iret
jmp
icebp
cli
jl
enter
ret
iret
outsl
jb
lret
jb
icebp
adc
dec
cmpsl
or
std
ljmp
mov
dec
test
lahf
xchg
push
in
stos
mov
jnp
or
aam
sub
leave
push
xchg
cmp
inc
or
decb
mov
jnp
repnz
xchg
repz
pop
sbb
stc
jp
and
shll
add
js
inc
mov
hlt
loope
sub
js
dec
xor
out
repz
aas
ret
or
push
adc
aas
fwait
dec
aas
out
push
sbb
jb
fldcw
shll
jle
sub
hlt
add
jg
cmc
repnz
lea
es
mov
jmp
sbb
jb
mov
and
ss
test
inc
pushf
xchg
mov
jbe
out
cmp
xchg
push
scas
jno
mov
cld
fs
jge
in
divl
or
stos
cmp
mov
loopne
repz
lret
fnstsw
pop
mov
pop
aad
mov
into
insl
and
cli
cmp
adc
add
test
sub
mov
popf
inc
and
das
negl
aam
xor
cmp
cld
mov
push
stc
add
sub
cmpsl
icebp
iret
xchg
mov
mov
ljmp
push
daa
std
loope
vandnpd
push
fnstsw
xor
dec
pusha
add
xor
aam
imul
shll
stc
or
mov
in
fs
mov
mov
je
mov
xor
push
sar
sbb
cmp
sbb
xchg
ja
in
mov
lea
mov
sbb
pop
sbb
sbb
test
les
or
hlt
bound
or
orb
dec
in
push
xchg
xor
mov
pop
gs
pop
or
call
rcl
gs
cmp
rclb
or
pop
pop
lods
stos
in
inc
outsl
arpl
adc
xor
cli
sub
xchg
insb
pop
cmp
xor
bound
cmpsb
leave
rcll
push
sbb
les
dec
sbb
or
adc
into
xchg
cmp
popf
push
cmp
xor
popl
xchg
fnsave
in
in
stc
push
sub
mov
mov
adc
in
pop
mov
decb
xchg
mov
adcb
jp
mov
mov
and
mov
xlat
arpl
data16
aas
test
test
aaa
push
pop
lods
push
test
jo
pop
pop
sub
mov
stos
cld
cmp
cmp
xchg
inc
unpcklps
xor
arpl
xchg
mov
sub
pop
dec
add
lods
cli
mov
cmp
cmpsb
cmpsb
mov
repnz
clc
imul
dec
out
nop
and
jo
ds
push
out
dec
mov
iret
js
pop
in
mov
sub
add
cmp
aaa
mov
mull
inc
dec
push
dec
popa
jbe
dec
or
inc
sbb
lret
pop
xor
pop
adc
push
sub
out
fs
mov
and
loop
jecxz
xor
push
aad
sub
lahf
adc
in
pop
xor
fisttpl
jo
leave
mov
test
sub
add
je
push
clc
fs
adc
or
lret
xchg
dec
cltd
sbb
cmpsb
cld
leave
jno
mov
jo
inc
mov
mov
adc
xlat
popa
sub
mov
jp
dec
xchg
pop
jno
in
aam
in
xor
and
add
cmp
push
jg
int
push
sahf
leave
dec
in
decb
inc
outsl
std
gs
jbe
jle
adc
and
mov
xchg
sub
cmpsl
test
imull
fs
pusha
data16
mov
ret
jne
ss
sbb
jne
iret
mov
dec
leave
sub
idivl
pop
mov
jg
fbstp
adc
add
cmp
mov
lods
and
mov
mov
dec
imulb
sub
pushf
sbb
dec
mov
sub
fwait
int3
xor
std
fidivs
arpl
cmp
mov
dec
loop
cmp
arpl
jl
jne
aam
outsl
stc
popf
js
lahf
sarl
sub
ljmp
xchg
ret
fistl
pop
insl
fdivrs
jo
xchg
or
pop
test
inc
mov
dec
jae
add
jp
stc
mov
mov
jbe
popa
daa
cs
out
fdivrl
jo
into
das
aas
repz
movsl
mov
cld
xchg
sub
roll
sbb
sub
scas
rcr
lcall
jo
int
mov
das
jmp
mov
imull
jo
add
ret
rcr
xchg
loop
push
push
adc
xor
and
sbb
or
movsb
lret
stos
lds
pop
dec
mov
or
inc
fdiv
test
cmpsl
aad
adcl
in
pop
lods
add
rcrl
jae
scas
push
lock
cmp
xor
aam
push
cmp
daa
enter
scas
push
xor
aaa
loope
les
movl
bnd
xchg
pop
push
xchg
arpl
dec
cli
mov
imull
orl
in
xor
mov
add
ret
neg
rclb
iret
icebp
push
roll
js
jnp
nop
push
mov
mov
in
mov
cmp
jecxz
xlat
push
dec
in
adcb
inc
dec
repz
pushf
das
lods
cmc
xor
and
out
faddl
ds
xchg
arpl
scas
xchg
jmp
mov
jl
ss
inc
outsb
mov
ret
lahf
aaa
fldcw
pop
into
dec
adc
lods
icebp
pop
mov
lock
les
out
pop
mov
imul
fwait
clc
mov
mov
adcl
imul
sbb
in
ljmp
sub
jb
sqrtps
pop
adc
dec
pusha
lock
sub
push
test
sbb
ret
jae
jo
js
dec
xchg
fildl
push
inc
inc
sub
add
xor
mov
push
jmp
adc
jb
roll
inc
les
js
loope
je
cmp
jp
push
pop
sbb
and
lock
stos
addl
xchg
ret
test
fisubs
fiaddl
xchg
stos
mov
lods
sahf
mov
enter
shl
cmpsb
fwait
lcall
sbb
out
jnp
push
mov
add
shl
in
dec
fcmove
fwait
or
mov
pop
mov
cs
and
std
mov
jbe
jno
outsb
in
inc
xchg
push
rorl
cmpsl
imul
inc
in
movsl
mov
lcall
fbld
daa
clc
loopne
scas
xchg
mov
adcb
cmp
cmovs
inc
fwait
movsb
pop
stc
jmp
ret
and
std
jbe
scas
sbb
test
lret
data16
adc
popf
pop
cmp
push
pop
lock
mov
push
push
and
push
add
mov
mov
xchg
insb
mov
jge
jecxz
fidivrs
sahf
xlat
std
loope
inc
pop
jae
fwait
shrb
in
cwtl
inc
jmp
in
cmpsl
test
push
rclb
sti
dec
xorb
add
inc
fxch
add
jnp
push
in
cmp
pop
ja
mov
xor
cmpsb
sahf
lock
das
stos
mov
sub
mov
mov
rol
push
aam
lea
push
add
inc
xchg
shrl
cli
rorl
sbb
cmpsb
sbb
andb
divb
setg
cltd
nop
xchg
push
imul
ds
lret
loop
rclb
jp
sbb
jl
adc
pop
ret
in
hlt
jg
insb
popl
and
sub
subl
insb
and
push
jp
shll
mov
test
mov
lods
loopne
js
int
leave
shll
sub
pop
ret
mov
xor
and
lea
into
fs
or
sub
ja
mov
push
pop
pop
roll
leave
fimull
pusha
or
sub
in
add
inc
xchg
and
jnp
lods
jle
pop
xor
pop
cmp
xchg
push
cmp
aaa
add
mov
lahf
jnp
cmp
in
inc
jmp
lahf
pop
jno
cmc
jo
int3
lret
mov
sbb
cli
cmpsb
imull
insb
mov
fldln2
test
add
movsl
push
out
sbb
xor
push
mov
dec
inc
mov
cmp
call
fsts
jns
pop
cmp
test
xor
mov
into
jge
mov
mov
and
fcomi
mov
sub
push
mov
push
into
push
aad
xor
push
add
mov
popf
mov
or
test
pushf
fdivrl
push
sub
int3
mov
pop
jae
xor
xchg
int3
imul
cltd
and
push
jno
xchg
mov
adc
xchg
cmc
inc
push
in
fs
xchg
xlat
xchg
pop
inc
or
mov
xor
or
jp
in
add
je
or
roll
dec
and
and
mov
loop
ss
shl
imul
xchg
jg
adc
icebp
mov
jmp
adc
in
popf
inc
int
pop
mov
jge
dec
inc
lods
stc
inc
mov
scas
pop
push
pop
jns
cs
xlat
cmp
aaa
leave
xchg
mov
div
jne
fisubl
add
arpl
popa
clc
js
or
lods
sub
popa
test
movsb
inc
adc
movsl
sub
dec
push
fisttpll
or
das
cmp
xchg
in
xchg
and
data16
sub
insb
pushf
or
lcall
pusha
fwait
xlat
ret
out
xor
xchg
cmpsl
loope
das
push
lahf
sti
lret
dec
xchg
cmp
jge
lcall
cmpsb
fldt
dec
mov
lcall
jle
and
mov
ja
sar
mov
pusha
inc
adc
fists
call
xchg
inc
mov
jne
inc
lret
add
arpl
jmp
sub
aad
sub
add
cmp
aas
cmp
add
mov
in
or
cli
test
adc
jmp
lret
ljmp
rclb
popl
sub
je
jl
test
or
sarb
mov
in
jne
jbe
fisubrs
mov
pushf
pop
leave
cmc
inc
xor
in
sub
les
push
jne
aad
and
dec
cmp
or
xchg
add
mov
xchg
mov
adc
pop
repz
jbe
iret
cmp
dec
sar
and
mull
lods
sarb
int3
jg
adc
jb,pt
sbb
bound
ret
sub
sbb
test
insb
bound
xchg
mov
adc
fidivrl
mov
or
and
into
jae
out
push
xor
and
mov
push
push
cmp
incb
lods
dec
stos
xchg
inc
sbb
push
xchg
adc
scas
push
and
push
mov
gs
cld
daa
add
jnp
inc
sbb
in
test
out
fcmove
loopne
repz
and
dec
outsl
jle
call
inc
inc
bound
mov
add
xchg
push
dec
clc
je
sarl
and
inc
loop
lods
pop
insl
jp
lock
js
mov
outsb
xorb
insb
stc
inc
sbbb
dec
add
adc
add
movsl
xchg
mov
inc
test
out
iret
sub
inc
mov
movsb
cmp
and
es
sbb
push
insb
mov
push
push
sub
fcoms
aad
imul
ret
out
lock
fcoms
jno
sub
insl
out
xchg
repz
jno
push
xor
and
dec
sub
popf
out
inc
mov
dec
fs
testl
lock
jno
stc
adc
std
rorb
inc
and
cli
and
cmp
movsb
cmp
jb
sub
dec
and
leave
addr16
mov
sub
pop
or
mov
not
lock
imul
cmp
dec
mov
shrl
pop
jmp
cwtl
inc
mov
test
sbb
xchg
in
clc
pop
or
xor
adc
push
clc
and
ss
std
xchg
xlat
sub
add
add
xor
push
pop
xchg
pop
pop
push
nop
jns
cmp
adc
mov
loope
dec
adc
sbbb
arpl
fldenv
ja
hlt
filds
add
dec
outsb
pop
sub
stos
fnstsw
stc
outsb
push
jno
mov
cmp
pop
sbb
push
xchg
push
push
fbld
ds
ja
loope
pushf
mov
mov
dec
fsubs
adc
inc
out
testl
dec
inc
adcl
pop
mov
mov
push
mov
cmc
adc
inc
hlt
in
imulb
pop
aaa
leave
in
pop
sbb
or
sarl
push
adc
stc
mov
xchg
int
or
inc
dec
xchg
rcrb
mov
inc
imul
repnz
xchg
pop
add
les
push
sbb
sbb
leave
hlt
out
inc
or
cli
inc
or
outsl
in
cmp
ret
add
repnz
xchg
loop
sahf
add
sti
and
jg
push
adc
xor
repz
mov
test
or
clc
iret
repz
xchg
cltd
push
add
sbb
mov
xchg
repz
pop
sub
dec
inc
mov
data16
outsl
pushf
test
push
mov
xchg
mov
inc
sbb
jb
fucom
test
cmp
pop
rorl
hlt
or
jp
test
or
gs
out
ljmp
mov
mov
or
adc
std
sbb
test
xor
jno
std
fld
add
jg
lea
loope
xor
gs
sub
xchg
mov
fwait
mov
adc
mov
lods
mov
sub
sbb
cmp
jbe
test
aas
push
add
xchg
adc
dec
fstl
push
loopne
adc
sbb
int3
das
push
mov
loope
xchg
pushl
adc
in
mov
push
inc
dec
push
fsubrs
pop
lods
movsl
fcoms
arpl
movsb
xchg
imul
inc
xchg
popa
les
add
mov
lcall
int
leave
mov
sbb
cmp
aaa
fidivrl
cltd
push
sub
leave
fcmove
lahf
in
mov
insl
cmp
jecxz
mov
mov
jae
imul
mov
adc
insb
out
test
xor
xor
jae
stos
int3
mov
loope
push
mov
dec
sub
inc
test
or
das
dec
loopne
adc
in
jbe
xchg
jno
xor
dec
adc
test
lret
popa
jno
fbstp
jmp
inc
lahf
lcall
rcl
adc
mov
sbb
sub
and
lods
repz
xchg
xchg
scas
je
imul
gs
sbb
cld
imul
lret
js
mov
lret
fimull
fwait
mov
test
pushf
inc
lea
and
jle
out
loop
adc
inc
push
aad
cs
ds
add
jno
push
inc
shll
mov
fbld
mov
sbb
sahf
jmp
inc
fmul
daa
cmp
mov
insl
push
lcall
jae
or
inc
xchg
push
sbb
nop
mov
cmc
imul
call
mov
ficoml
push
mov
leave
push
jecxz
cltd
shlb
pop
repz
dec
cs
inc
mov
mov
pop
cld
dec
sub
lret
dec
mov
cmp
shr
imulb
loop
enter
call
rolb
mov
ret
pop
mov
pop
lcall
fimull
adc
testl
mov
test
pop
push
jl
sbb
cmp
stc
rorb
jecxz
and
repz
dec
sbb
or
sbb
fisubrl
sbb
jmpw
mov
int
adc
mov
lcall
fisttpll
adc
xchg
cmp
int3
lds
lahf
and
stos
push
adc
add
fs
subb
nop
add
fsubrl
cmpsb
ja
xchg
inc
popa
cmp
subb
nop
adc
loop
cld
cmpsl
cmp
les
jb
mov
mov
out
sub
mov
jl,pt
sbb
mov
push
scas
adc
xor
loope
test
sub
push
mov
mov
xchg
int3
and
dec
mov
dec
sti
cmp
xlat
pop
inc
jmp
cltd
clc
arpl
popf
stos
sahf
inc
xchg
xchg
movsb
packuswb
imul
cli
scas
stos
dec
add
pop
or
cltd
or
aas
lods
sbb
pop
fidivl
xor
ffree
pushl
mov
push
mov
push
push
add
mov
sub
idivb
clc
dec
xchg
jae
lret
ret
mov
mov
cmp
xchg
gs
push
inc
jae
push
mov
push
pop
mov
das
popf
ljmp
imul
outsb
in
or
push
js
pop
data16
pop
sub
mov
xor
mov
xchg
popa
mov
mov
dec
push
popf
cwtl
pop
pop
dec
shll
cmp
repz
and
xchg
outsb
xlat
mov
in
fisubs
xor
jmp
adc
clc
push
mov
les
outsb
jno
cli
es
fldcw
add
add
push
out
scas
addr16
faddl
cmp
ss
cmp
loop
leave
insl
iret
repnz
pop
test
or
add
inc
test
push
mov
adc
xchg
pop
jp
jg
and
and
out
rolb
mov
pop
xchg
and
pop
mov
push
and
mov
pusha
add
pop
xchg
adc
mov
push
pop
jnp
ret
movsl
fcoms
lret
sbb
push
lds
fidivl
add
cwtl
divl
fwait
orl
inc
fisttpll
repnz
fs
jge
mov
outsb
push
cmp
loop
cwtl
iret
leave
push
cltd
cmpsb
aas
dec
dec
out
movsl
xchg
nop
sarl
scas
or
out
pop
in
add
dec
je
hlt
inc
cmp
sub
ljmp
jo
movsl
or
jnp
adcl
pop
inc
scas
xor
mov
lret
subb
dec
jge
xchg
mov
adc
pop
enter
pushf
test
and
mov
push
in
dec
pop
out
imul
sbb
lcall
push
xchg
push
scas
pop
rcll
clc
mov
xor
dec
loope
or
dec
ljmp
imul
xchg
sbb
loop
popa
push
mov
stos
cmc
cmpsl
mov
fs
aaa
cmp
popa
jnp
out
adc
leave
nop
cwtl
adc
sbbl
loop
imul
repnz
cs
or
lods
push
or
fwait
lock
test
stos
sub
cwtl
xchg
addr16
pop
xchg
inc
ja
das
lods
stos
xchg
lock
mov
repnz
addr16
cmp
push
cmp
and
stos
sbb
and
fs
int
repz
cltd
mov
fdivl
addb
adc
test
cmp
lock
into
xor
orl
jge
psubq
repz
cmp
arpl
jno
je
fdivl
jge
ljmp
mov
lods
adc
ljmp
repnz
push
adc
cmp
xor
jmp
xchg
push
dec
lds
sbb
es
sti
add
dec
insb
sub
movsb
push
xchg
das
xchg
push
mov
subl
mov
xchg
mov
push
mov
or
jns
and
in
and
jecxz
test
iret
jge
movsb
inc
xchg
dec
mov
nop
xorl
adc
or
mov
push
xchg
mov
xchg
inc
scas
iret
lahf
mov
mov
or
dec
nop
lahf
mov
inc
mov
push
mov
cmp
jo
in
out
and
adc
cmp
pop
add
mov
mov
mov
mov
push
jnp
add
mov
filds
ds
or
pop
xchg
mov
scas
in
fdivs
add
pop
cmp
and
ljmp
loope
mov
pop
cld
scas
xchg
or
sbb
testl
mov
ror
sub
lock
mov
in
addl
mov
int3
inc
ret
xchg
paddd
popf
xchg
xchg
pusha
mull
loop
shr
leave
das
mov
movsb
add
mov
xchg
stos
mov
insl
stos
lcall
sub
ret
xor
dec
arpl
mov
push
loope
cmp
pop
push
xor
je
repnz
insb
jo
or
or
stc
ret
iret
cmp
sub
jl
pop
data16
dec
inc
loopew
xchg
ss
iret
int
or
jmp
mov
and
push
jg
sbb
cmp
adc
out
out
aaa
xchg
adc
xor
xchg
mov
lret
push
push
test
insb
jecxz
fiadds
les
xor
dec
je
xchg
nop
xlat
mov
cltd
xchg
jb
imul
sbb
sbb
jns
jecxz
jmp
addr16
lds
mov
mov
int
inc
popa
jb
cmp
push
insb
aas
insb
push
lods
mov
dec
add
fsubrs
loope
mov
fwait
sub
fwait
add
out
mov
gs
push
frstor
in
xor
pop
push
dec
enter
add
jmp
cmp
int
nop
cmp
ds
xlat
mov
pop
pop
add
sub
adc
adc
fistl
inc
icebp
push
adc
ljmp
ljmp
inc
inc
mov
inc
test
sub
test
push
cmp
add
xor
cmp
dec
sbb
and
test
pop
dec
mov
add
pop
and
sbb
mov
mov
sub
jmp
cmpsb
into
in
xchg
pop
das
jp
out
sbb
cltd
mov
rcrb
cwtl
ja
push
in
dec
mov
xchg
insb
dec
imul
aad
jge
inc
adc
xchg
push
sub
xchg
fildll
xor
rcll
mov
or
clc
ficompl
mul
aam
sub
ljmp
in
cltd
mov
scas
jae
lock
sbbl
mov
scas
mov
fildl
aaa
shl
mov
add
rorl
test
enter
jmp
ror
jecxz
lahf
stos
loop
mov
into
shll
out
jmp
jne
hlt
sub
cmc
lods
inc
or
hlt
lahf
das
fimuls
testb
sbb
xor
sub
loopne
lock
pop
cmp
pop
cmp
xchg
ja
hlt
lock
xor
jl
jecxz
xor
xchg
into
fwait
and
fsubrl
mov
jae
inc
pop
push
ret
cmp
shl
or
cmp
sbb
in
movsl
cwtl
jecxz
and
adc
inc
ss
adc
fildll
repz
clc
push
xchg
add
jb
mov
pushf
ror
mov
insb
subb
int3
mov
bound
jo
mov
mov
cmp
jno
outsb
shl
ds
xor
adc
test
xchg
mov
jmp
out
hlt
subb
inc
imul
dec
adc
cmp
popf
adc
cwtl
aas
mov
idivl
out
sti
mov
jecxz
pop
cli
outsb
jnp
sub
scas
inc
out
cmp
xchg
xchg
cmpsb
aam
mov
mov
es
popa
xor
js
sbb
xchg
pop
fwait
dec
lret
push
xchg
adc
mov
hlt
stos
setl
mov
push
dec
sbb
sbb
add
fbstp
xchg
push
out
into
mov
movsb
mov
lret
int3
lds
rcl
lret
lock
arpl
jp
ss
decb
push
adc
fcompl
int
cltd
dec
sbb
fcompp
adc
mov
and
popf
jle
fadd
cld
int
push
xchg
enter
push
xchg
filds
sbb
adc
xor
aas
shll
dec
mov
leave
fcoms
dec
push
cmp
out
dec
xor
loop
dec
ret
push
mov
mov
lods
iret
addr16
or
pop
jmp
stc
into
loop
ja
mov
cmp
lea
pop
inc
inc
test
idiv
push
push
faddl
mov
xor
xor
sti
jge
pop
add
adc
aad
mov
pop
mov
repnz
in
dec
movsl
lods
mov
mov
into
out
add
cmpsb
or
int
push
gs
aam
out
push
in
inc
loop
add
jb
lods
testb
pop
and
loop
inc
jecxz
or
jb
push
and
out
fists
fisubrl
push
ret
ljmp
fwait
mov
fildll
ficoml
fcmove
adc
push
inc
mov
mov
sbb
ss
dec
mov
sub
and
scas
inc
cmpsl
insb
push
jne
sbb
xor
inc
adc
add
das
jl
pop
sbb
push
in
shlb
sbb
xchg
xor
incl
sbb
push
or
stos
insb
sbb
sahf
clc
mov
dec
leave
ret
cmp
mov
insl
ss
lret
jae
mov
or
stos
data16
mov
ret
push
jo
fs
arpl
adc
lds
sbb
dec
fmul
sub
mov
mov
loope
xchg
cld
mov
add
test
cmp
push
pop
js
push
dec
fstl
std
ljmp
aaa
lcall
xchg
lret
mov
cltd
enter
jecxz
test
sub
dec
negb
outsb
shrl
scas
pop
mov
cmp
cmp
pop
add
pop
dec
add
or
dec
ss
cmpsl
or
xchg
push
out
xchg
fisttps
inc
lods
or
leave
and
push
jg
sub
add
ss
inc
insb
andb
out
scas
arpl
mov
insl
pop
cli
lret
faddl
shll
mov
push
test
sbb
movsl
cmp
and
stc
sbb
mov
lea
push
clc
fiadds
sub
pusha
dec
cmpsb
jnp
dec
mov
dec
or
addr16
push
pop
ljmp
fidivrl
and
imul
jb
fucomip
andb
in
fwait
outsb
and
dec
js
test
dec
iret
pop
jo
pmaxsw
push
popa
push
inc
movsl
or
lods
hlt
ret
mov
addr16
arpl
dec
jae
sbb
cmc
sbb
mov
movsl
sub
inc
adc
xchg
lcall
inc
mov
dec
sub
xor
iret
mov
gs
dec
xchg
mov
cmp
inc
dec
xchg
fstpt
xchg
inc
sub
decl
jno
insb
add
sahf
cltd
addl
gs
add
fwait
push
add
fadds
arpl
mov
jo
pop
jae
xchg
sub
or
cmp
movsb
adc
jnp
movsb
in
lds
pushf
mov
in
fsts
mov
stc
lret
aas
js
and
sbb
pop
push
mov
jne
ficoml
adc
stos
mov
adc
je
xor
and
lcall
mov
mov
sub
cmp
push
mov
sti
loop
test
mov
loop
jno
and
fwait
push
adc
jmp
and
je
mov
daa
popf
push
push
inc
adc
mov
xchg
push
xor
jnp
js
pusha
xor
add
cmp
or
fcmovu
add
dec
fwait
sarb
lahf
jle
dec
pop
ror
push
cmp
loop
in
frstor
push
out
cwtl
bound
mov
out
sub
rol
mov
jbe
rcrb
pop
dec
ret
mov
aaa
sub
jnp
sub
jg
sub
int3
ds
inc
popf
out
lcall
mov
or
insl
mov
outsl
cmp
out
cmp
ficoml
or
mov
dec
ja
adc
mov
call
jnp
leave
test
pop
cld
xor
loopne
xchg
mov
mov
sahf
push
in
test
dec
jg
push
jne
shll
pop
daa
pop
push
das
xchg
bound
fisubrs
mov
outsb
enter
test
aaa
movsl
mov
into
sbb
arpl
int
aaa
cmp
daa
fsubrl
add
jo
loopne
ja
lea
cmpsl
das
stc
mov
fdivl
jp
dec
mov
mov
ret
inc
jae
mov
xlat
add
fwait
mulps
mov
lds
add
jle
imul
dec
push
ret
iret
cltd
std
mov
test
adc
cli
adc
xor
movsb
pop
ficomps
push
adc
lret
hlt
fimull
out
inc
push
mov
mov
pop
mov
pop
add
jnp
sub
mov
inc
rolb
int3
mov
jne
hlt
add
js
push
cmc
dec
jb
inc
mov
mov
cmpl
outsb
push
pop
mov
xchg
scas
testb
imul
scas
outsl
outsb
shrb
das
lcall
int3
mov
xor
outsb
dec
jle
jg
aam
jnp
or
daa
addr16
out
sbb
pop
sbb
jl
sbb
pusha
lret
test
push
cld
dec
lods
cmp
jle
sahf
and
cld
jb
insb
sbb
mov
es
movsl
add
leave
leave
cmc
lret
adc
push
sbb
std
mov
and
mov
xchg
add
jo
aaa
das
fxch
and
xor
popa
push
imul
shl
xlat
ds
ss
lret
fcoms
in
pop
lcall
lret
pop
pushf
iret
mov
fldcw
imul
lcall
sahf
repz
test
cltd
or
and
jge
xor
xlat
leave
pop
fmul
cmp
and
jle
andb
xchg
xchg
sbb
cmp
push
push
push
mov
lock
cmpsl
test
vpaddusb
jg
push
mov
shll
xchg
rorl
mov
mov
mov
push
stos
sbb
fdivp
js
pop
mov
xor
cmp
aam
inc
push
and
popf
adc
push
outsb
and
ret
or
flds
xor
loope
dec
imul
mov
mov
inc
sub
pop
xor
dec
sbb
rcll
jns
sbb
xchg
fcoml
test
push
outsb
repz
xor
outsl
mov
sbb
jns
sti
insb
xor
adc
push
shll
sub
gs
add
andl
mov
pop
or
pop
mov
cmp
mov
in
pop
and
jmp
mov
dec
rcrl
adc
xchg
sbb
loop
inc
sbbl
inc
sarb
popa
call
mov
hlt
loope
das
sub
lret
sbb
popf
or
pop
test
in
js
xchg
mov
cltd
imul
das
add
sbb
ss
push
cmc
and
js
insl
sbb
sbb
mov
orb
jae
add
std
cmp
cmpsl
add
call
jmp
cs
fimuls
pop
inc
lods
add
lret
jne
inc
loop
icebp
fldenv
inc
cmp
arpl
out
movsl
jno
jg
cmp
adc
jmp
ret
push
das
sub
pop
mov
or
scas
dec
push
cmp
dec
mov
pop
or
arpl
flds
push
sbb
add
xchg
sbb
pop
shrl
jecxz
fstpl
addl
lds
and
pop
jmp
mov
add
mov
test
movsl
mov
mov
cmc
sbb
fwait
pushf
aad
idiv
push
xchg
sub
mov
loopne
loopne
add
jb
dec
lret
adc
int3
arpl
insl
inc
lds
pop
add
test
pop
xchg
xor
mov
sbb
popa
pusha
cmpsl
mov
ret
push
jae
mov
mov
and
cmp
sti
fdivs
in
push
add
paddq
inc
mov
jne
popa
cmpxchg
cwtl
lds
push
push
or
lret
scas
sahf
aas
test
sbb
in
push
cld
cmp
xchg
pop
das
repz
sub
sbb
fs
xor
jb
and
mov
pop
repz
pop
xor
adc
push
mov
insl
divb
add
cmp
dec
mov
insb
push
test
and
movsl
push
jne
xchg
cmpsb
pop
ffree
fsubr
xchg
popf
ficoms
pop
or
pushf
lods
jo
idivl
daa
mov
xchg
lret
sbb
jae
jmp
lock
mov
nop
fildl
out
mov
push
inc
jno
xor
lods
pop
xchg
push
jp
int
push
xchg
sahf
in
push
ror
and
enter
jl
cwtl
ja
dec
or
mov
add
mov
aam
mov
je
inc
mov
ret
xchg
jne
movsb
stos
push
pop
sub
out
cld
mov
push
daa
dec
sti
xchg
ret
jmp
sbb
cmpsb
jge
aas
push
push
mov
imul
push
ss
dec
andl
mov
std
das
rcll
xchg
dec
xor
cmpsb
mov
cmpsl
int3
pop
ja
mov
inc
cltd
hlt
aam
sarl
cmp
mov
jle
dec
ja
cmp
inc
adc
add
rcl
push
dec
pop
out
mov
mov
lds
outsl
push
xchg
inc
mov
movaps
mov
mov
lds
clc
inc
jns
or
jbe
fists
lahf
lahf
or
pop
loope
pop
popl
jne
in
popa
bound
fdivl
pop
test
iret
int3
outsl
sub
xor
addr16
pop
and
pop
cmp
mov
into
and
out
cmp
outsb
dec
xor
insl
jle
lea
mov
cmp
fldenv
jo
push
and
mov
push
cmp
cmp
mov
aaa
mov
mov
lods
mov
lcall
mov
stos
ret
xchg
jle
xor
pop
faddp
insb
xor
adc
dec
pop
jecxz
push
mov
inc
ret
repz
int
jle
lock
fnstenv
jp
out
cmp
stos
or
fldenv
sbb
sub
push
ret
aad
push
push
int3
stc
and
xor
jle
stos
mov
es
test
icebp
xor
pop
dec
push
pop
push
pop
sar
fsubl
aas
cltd
and
xchg
xchg
dec
ds
lret
fcomps
testl
fwait
leave
jge
pop
gs
outsl
pop
xor
add
xchg
mov
mov
popf
jno
lcall
outsl
sbb
aaa
xchg
cmpsl
mov
inc
int
lcall
dec
stos
sub
and
addr16
or
leave
mov
jae
movl
mov
lock
dec
push
fldl
and
jne
popa
pop
les
and
into
sbb
jno
lods
lret
xor
and
dec
lret
mov
mov
dec
fsub
ret
fimull
inc
out
cs
scas
inc
xchg
nop
xor
xor
insb
mov
mov
jmp
int
inc
leave
jp
subb
ja
ja
lcall
mov
and
aad
int3
mov
xlat
mov
icebp
xchg
arpl
and
loopne
loope
and
test
nop
in
jnp
jo
movsb
mov
inc
in
jno
mov
orb
cmp
dec
popa
orl
mov
push
mov
incb
bound
insb
or
sub
mov
jnp
push
jge
inc
test
sbb
fwait
test
inc
mov
mov
icebp
popf
add
sbb
jb
hlt
ss
fwait
cmpl
inc
inc
inc
mov
jge
mov
cmp
shl
jl
rcrl
ds
or
enter
ret
jge,pn
xchg
filds
xchg
jl
lods
mov
cmp
xor
xchg
rclb
test
test
mov
sti
shrd
dec
jp
push
outsl
and
shr
sub
jp
ret
into
or
mov
mov
and
and
mov
push
pop
out
js
inc
mov
mov
je
pop
shll
push
push
aam
outsb
cli
jne
mov
inc
insb
dec
iret
lea
jb
iret
dec
mov
ja
in
int
cld
cmp
inc
mov
pusha
stos
stos
push
lret
pushf
add
cmpsb
pop
shlb
mov
jecxz
pop
loopne
add
repnz
or
dec
jo
jecxz
mov
lahf
push
lods
lock
push
pop
insl
xor
mov
push
movsl
jg
xor
pop
mov
add
push
dec
jg
mov
cmp
iret
jns
test
mov
cmp
enter
xor
inc
jmp
enter
pop
sbb
loopne
lods
cmp
jle
movsl
add
rcrl
and
xlat
push
pushf
sub
cmp
xor
jne
xlat
aam
popf
push
xor
add
fs
stos
push
aam
dec
push
into
push
dec
enter
adc
sahf
xor
test
insl
jo
cli
arpl
mov
mov
cli
sbb
adc
cmp
inc
inc
sbb
inc
rcrl
mov
mulb
add
pop
and
sub
lret
fisubl
in
jge
cmp
pop
fwait
sbb
xlat
mov
lods
pop
xlat
rolb
arpl
fiaddl
push
stc
push
sbb
fs
mov
sbb
pop
xchg
pop
adc
shll
sar
outsl
imul
adc
dec
sti
push
xchg
lds
fisttpll
push
pop
adc
jge
imull
sahf
orl
pop
sar
ss
outsl
icebp
jg
sub
inc
push
std
aas
test
divb
cmc
lock
mov
mov
push
add
pop
mov
test
mov
jp
and
stos
icebp
xchg
xchg
stos
cs
pop
nop
push
stc
dec
mov
cwtl
add
les
repnz
or
mov
sbb
jb
xchg
push
jle
rorb
mov
jno
push
movsb
xor
clc
push
or
inc
mov
mov
sbb
std
stc
cmp
gs
push
push
and
and
lock
inc
jne
add
rcrb
cltd
aaa
dec
sub
dec
push
mov
push
hlt
sbb
bound
in
imul
adc
insb
lds
inc
cmpsb
mov
je,pn
out
cmp
ljmp
dec
push
mov
push
lret
pop
add
push
add
and
daa
xchg
fistpl
mov
jo
xchg
add
iret
ret
fs
jns
sub
cmp
sbb
shr
push
test
pop
jo
or
mov
enter
sarb
push
pop
pop
xchg
sub
adc
icebp
icebp
loop
fimuls
mov
sub
pop
or
and
adc
add
xchg
adc
jge
pop
lods
aad
aam
cmp
mov
pop
and
sahf
push
fxch
sub
dec
and
mov
and
mov
pushf
fs
sub
mov
data16
cld
arpl
mov
scas
or
jbe
stc
inc
pop
mov
or
jecxz
lea
xchg
mov
loop
mov
sub
clc
adc
jmp
dec
loope
jbe
sub
and
push
adc
outsb
pop
aam
sbb
mov
inc
sahf
aaa
addr16
sti
xor
test
fucomp
or
hlt
rorb
pusha
adc
fstpl
test
push
loope
pop
dec
outsb
push
xchg
lcall
cmp
sahf
sub
out
cmpsl
arpl
stos
xchg
in
aam
xor
mov
xchg
mov
fisubl
sbb
testb
sub
shlb
xor
fs
xor
lods
daa
push
cli
pop
or
mov
cmp
sbb
fisubrl
sub
jne
add
lock
adc
test
ds
inc
cmp
push
add
and
inc
mov
cli
psrlw
mov
mov
sbb
xchg
pop
cltd
fwait
je
lcall
scas
outsb
dec
rol
sub
dec
xor
pop
adc
loope
xor
scas
inc
stos
popf
movsl
dec
sti
inc
pop
outsb
popf
jecxz
xor
repnz
xor
jae
stos
push
cmc
inc
loopne
dec
cmpsl
cmp
lods
pop
daa
sbb
adc
inc
pop
and
jmp
rorl
ja
dec
lret
push
mov
icebp
jge
test
mov
data16
xor
stos
xchg
out
cld
outsb
sarl
stos
clc
mov
xchg
jbe
outsb
adc
shrl
sbb
add
or
scas
inc
test
jae
xchg
not
int3
cmp
adc
push
aam
aas
and
or
fisttps
mov
push
adc
roll
lcall
push
imul
aas
mov
jecxz
iret
cmpsb
mov
inc
ss
cmpl
mov
inc
das
xchg
int
test
pop
rcrb
pop
lret
mov
mov
lret
clc
mul
cmp
push
push
je
mov
xorl
mov
repnz
pop
pop
adc
outsb
or
movsl
mov
in
test
mov
mov
mov
pop
fldpi
shrb
test
cmp
and
xorl
movsb
sub
lds
icebp
push
adc
hlt
sbb
sub
addb
rorb
pop
or
xor
mov
mov
faddl
jmp
lock
sahf
daa
and
test
xor
cwtl
outsl
jp
mov
decb
mov
push
mov
mov
les
mov
mov
aam
inc
int
sbb
push
in
jb
sbb
sbb
pop
clc
aad
push
pop
sub
hlt
stos
sbb
push
iret
push
xchg
sbb
add
or
lods
ret
push
jl
aas
and
cmp
push
xchg
fsubrl
jecxz
orl
dec
popf
shll
cmp
outsb
or
push
xchg
sub
xor
push
popf
imul
loopne
ror
imul
mov
xor
rolb
int
or
inc
repz
mov
sar
data16
xor
pop
scas
fcoms
xchg
xchg
les
fcoml
loop
repz
fsubrl
xor
or
xchg
cld
fucomip
in
lds
and
or
xor
es
adc
xchg
lods
cmp
mov
stos
loopne
and
xchg
cli
scas
outsb
movsl
out
and
cmp
imul
xchg
adc
insl
cmp
add
je
int
fucomip
inc
shlb
xor
bound
stc
sbb
adc
inc
lret
pop
sti
and
or
mov
sahf
inc
mov
cmpsb
pop
lods
pop
test
jle
inc
cmc
stc
jle
mov
sub
sahf
sbb
mov
mov
lock
dec
lahf
add
xor
js
dec
jnp
cmc
push
imul
jecxz
ds
outsb
or
mov
lds
call
dec
and
xchg
dec
xchg
sarb
ds
adc
mov
mov
fwait
cmp
jecxz
cmp
popa
imul
sbb
push
add
sbb
jecxz
sub
ja
or
xor
jbe
xchg
dec
out
pop
cltd
loope
test
mov
insl
jnp
sub
mov
sub
call
sbb
subb
mov
and
sub
jns
lea
inc
ficomps
enter
in
jo
pop
mov
jb
cmp
mov
das
out
addr16
xor
mov
pop
nop
mov
dec
in
outsl
fadds
and
shrb
add
dec
insl
out
cmpsl
adc
xor
loope
lcall
sahf
cld
in
xchg
imul
loope
jmp
xor
add
sbb
xchg
repz
inc
popf
cltd
lret
cmp
pop
inc
mov
jmp
push
popw
ja
xor
inc
fsubrl
xchg
movsl
out
bound
into
bswap
xor
adc
test
xchg
jbe
ficoml
xlat
mov
pop
hlt
addr16
pop
mov
inc
fcompl
int3
arpl
or
aaa
adcl
ljmp
xor
jl
enter
push
mov
jbe
adc
adc
out
pushf
out
mov
in
dec
push
dec
adc
femms
stos
test
jo
mov
inc
jnp
outsl
lret
xchg
lods
mov
shrb
test
jns
jmp
sub
inc
inc
cmp
addr16
pusha
sbb
mov
mov
add
gs
out
push
push
addr16
jne
mov
xchg
mov
je
clc
mov
ljmp
sub
cld
aam
cmp
loope
shll
les
js
ret
mov
pop
fwait
mov
lods
sti
or
test
pop
test
and
lds
insb
add
loopne
mov
mov
nop
mov
fmuls
imul
imul
xchg
pop
adc
andb
and
stos
lret
shrb
rcl
in
mov
js
jg
nop
or
mov
cmp
xchg
cld
fsub
and
add
mov
jbe
adc
arpl
push
lods
pop
test
int
cltd
mov
jb
adcb
ret
lods
sub
mov
cli
dec
les
mov
jb
xlat
mov
pop
pop
daa
sbb
aas
cmpl
push
out
mov
outsl
jmp
fnstsw
xor
ret
dec
mov
lcall
scas
in
pop
subl
cmp
outsb
lret
mov
jmp
adc
outsb
sub
cli
jno
lcall
cmp
outsb
dec
sbbl
xlat
push
sbb
loopne
popa
mov
jmp
into
into
dec
dec
pop
or
mov
add
insb
cmp
sub
adc
shrl
scas
ds
aad
dec
fstps
cs
mov
fdivr
cmp
movsl
add
mov
xchg
push
fidivrs
push
sub
loope
bound
cmp
out
cli
xlat
pop
pop
out
les
inc
or
push
rclb
aaa
out
popa
inc
xchg
pop
jmp
jmp
out
jl
lods
daa
popa
push
jo
nop
les
inc
cmp
out
xorb
outsb
cmp
scas
enter
cmpl
jno
xchg
mov
cwtl
call
xlat
xchg
mov
sarl
movsb
xchg
push
mov
xor
mov
idiv
lods
mov
popa
dec
packsswb
push
rclb
test
ficoms
mov
mov
dec
jae
push
pop
sti
cmc
mov
pop
sbb
jp
cltd
adc
xor
nop
dec
xchg
pop
ret
pop
push
sbb
scas
jo
pop
pop
mov
cmp
sbb
nop
jne
sub
mov
jp
test
push
lahf
mov
and
mov
mov
dec
adc
lea
in
insb
sti
outsb
or
cld
orl
mov
cs
pusha
push
aad
dec
cli
pusha
insl
das
or
cmc
adc
fxch
imul
jp
pop
cmpl
inc
aad
stos
jecxz
push
imul
shrb
xchg
mov
push
outsb
inc
or
popf
mov
dec
lret
leave
inc
inc
pop
push
lods
dec
cld
imul
sbb
push
dec
or
mov
xor
pop
xchg
xchg
fists
pusha
pop
cmc
jecxz
cld
pop
mov
add
push
arpl
push
mov
xchg
and
pop
mov
adc
incl
add
leave
xor
pop
and
cwtl
sub
mov
aam
cld
jbe
push
in
inc
mov
in
daa
clc
mov
ljmp
or
decb
js
jo
add
mov
arpl
adc
jo
dec
and
mov
ret
mov
out
std
pop
sti
mov
movsl
pop
into
xlat
jmp
mov
sub
or
repz
sub
mov
arpl
xchg
adc
fidivl
xlat
push
cmc
movsb
pop
sub
sti
mov
clc
andl
sub
mov
xor
xor
js
jmp
pushl
jb
cmpl
pop
adc
xor
mov
bound
sub
or
lds
add
mov
cltd
mov
in
cwtl
add
mov
imul
movsl
icebp
jae
jno
sbb
movsb
jne
lret
dec
int
sub
stos
out
xchg
or
fdivrs
sti
push
gs
mov
and
dec
rcll
inc
mov
mov
out
adc
cmp
pop
lret
dec
je
push
mov
ss
push
jge
pop
es
enter
iret
jne
call
xor
jno
and
jns
loope
or
mov
les
addb
iret
fwait
out
push
repnz
xlat
xor
pop
movsl
fldcw
pusha
pop
xor
xchg
xchg
lret
cmc
lods
or
repnz
lret
jo
xor
iret
jnp
jp
lds
addr16
mov
cmpsb
and
mov
adc
ljmp
and
jmp
popa
jnp
jmp
stc
and
or
inc
mov
sti
or
ret
scas
jo
lods
jno
test
rcrl
in
addr16
gs
dec
xchg
cmp
stc
data16
cmp
dec
mov
lock
ja
stos
adcb
insb
push
das
push
push
sub
bsf
mov
add
mov
push
hlt
sahf
mov
test
cmp
leave
je
cmp
scas
sub
pop
jb
mov
test
adc
pop
repnz
pop
pushf
xchg
in
or
mov
test
inc
dec
fildl
data16
xchg
and
cmp
outsb
push
add
sub
icebp
addr16
adc
shlb
scas
fisttpl
jno
inc
sbb
dec
pop
pop
add
outsl
pop
xchg
data16
pop
lret
out
inc
ss
ds
lcall
mov
repnz
sub
repz
adc
stos
add
xchg
rolb
mov
out
shrb
lahf
push
push
jb
popfw
imul
aas
pusha
in
fidivrs
dec
ds
out
ja
mov
cmp
cmc
iret
jo
insb
rcrl
lret
adc
loope
lahf
stc
repz
js
clc
clc
shll
adc
lahf
fsub
fldlg2
xor
and
pushf
fistps
sub
dec
clc
push
or
sbb
mov
imul
scas
push
or
xor
pop
jo
push
clc
sub
add
xor
cmpl
sub
inc
cmp
xchg
mov
mov
cwtl
mov
in
mov
fidivl
jae
pop
insb
inc
inc
in
pop
std
jecxz
xor
pop
mov
gs
rcrl
jle
in
aam
mull
aam
lret
jo
dec
push
mov
and
insl
outsl
jl
and
push
adc
jle
int
sti
and
hlt
mov
push
or
mov
mull
push
sarl
xchg
pop
lahf
jae
jns
jle
adcl
sarb
stc
ljmp
push
shrl
and
scas
mov
arpl
mov
sub
sub
and
push
out
test
mov
dec
pop
movsb
scas
iret
repz
imul
stos
adc
xor
test
outsl
out
sarb
xchg
jns
ja
sbb
iret
cmp
jecxz
mov
hlt
adc
inc
inc
xchg
repnz
call
call
movsl
out
inc
mov
dec
xor
fs
add
mov
pop
mov
or
js
cmc
xchg
in
sub
add
sti
stos
imul
xchg
call
push
xor
leave
inc
jnp
fstl
stos
and
ja
jge
imul
arpl
mov
cltd
or
loope
repnz
jp
loope
push
fbld
mov
mov
icebp
nop
arpl
adc
xlat
jno
lods
mov
cmp
or
std
fimull
out
xlat
mov
sub
dec
testb
sahf
push
fadds
push
inc
das
jbe
jnp
and
in
mov
or
insl
aad
mov
pusha
mov
push
dec
ja
aad
mov
push
inc
mov
mov
inc
lds
jecxz
or
fldcw
jecxz
push
in
int
ds
jb
sub
pop
out
movsl
popa
loop
fdivrl
push
cmpsb
leave
mov
dec
mov
lret
sbb
and
mov
add
or
out
data16
push
aas
add
dec
fwait
and
sar
cmc
shlb
jae
insb
pop
stos
js
fsub
lods
faddl
mov
loopne
cltd
or
scas
mov
fs
clc
daa
push
sub
insb
les
cmp
dec
sbb
dec
rorb
pop
cmp
cmp
jle
movsb
jp
ret
loope
insl
rcll
pop
dec
mov
jae
roll
inc
xchg
cwtl
out
in
repz
dec
jb
in
mov
test
movsl
in
mov
mov
jb
adc
push
push
jno
push
ljmp
mov
cmp
pushl
inc
outsb
test
jg
movsl
fs
jne
loop
retw
imul
lret
mov
out
mov
mov
or
sub
repz
lret
jg
outsb
or
push
or
xor
pop
pop
mov
jle
and
pop
test
push
push
jmp
jo
lock
and
xor
cwtl
pop
push
pop
adc
data16
cmpsb
test
nopl
ds
pop
ret
sub
jge
cld
lret
cmp
push
dec
adc
dec
ficoml
mov
shll
outsb
mov
xor
pop
fisubrs
xchg
test
cmp
pop
shrl
js
mov
mov
dec
mov
rcl
inc
cmp
add
aad
push
lods
and
mov
in
add
sbb
sahf
mov
xor
and
cmp
fldenv
and
adc
aaa
in
adc
jle
aad
and
inc
pop
or
pop
jge
mov
sti
leave
rolb
shll
or
outsb
push
dec
dec
cltd
das
pop
imul
xchg
orb
mov
xchg
push
pop
sarl
adc
das
adc
addr16
adc
sub
shlb
push
push
sub
sbb
jae
fwait
add
xor
out
andl
mov
and
aaa
mov
call
xchg
imul
lock
mov
movsl
or
inc
add
pop
jg
lock
xchg
je
cwtl
or
xchg
jnp
rclb
mov
sahf
push
test
aam
push
test
mov
fiadds
imul
nop
adcb
cmp
push
jb
push
dec
mov
lods
mov
nop
xchg
ljmp
inc
mov
push
cs
sbb
bound
fists
movsb
pusha
jb
sbbb
mov
movl
cmp
pop
inc
push
mov
hlt
inc
mov
push
mov
movsl
jg
imul
mov
fmul
inc
aad
mov
mov
repz
fisttps
push
adc
fbstp
xor
xor
fsts
push
and
sbbb
ljmp
int3
pop
pop
hlt
dec
pop
andl
rolb
mov
push
outsb
mov
xchg
dec
push
outsl
js
pop
cmp
icebp
mov
mov
jne
xor
add
scas
xchg
jmp
push
pop
xor
dec
pushf
pusha
and
test
sub
mov
mov
pop
popf
adcb
fildl
mov
sub
das
mov
mov
divb
xor
xor
test
cli
mov
jge
stos
fwait
cmpl
mov
lcall
mov
les
daa
xor
shlb
mov
sahf
pop
or
icebp
inc
inc
aaa
call
xchg
mov
loopne
add
rolb
xorl
arpl
sahf
bound
negb
pop
fdivrl
stos
add
dec
xor
mov
mov
les
fucomip
jnp
xchg
shlb
nop
or
les
gs
pop
dec
lea
jo
aad
shl
fs
jle
mov
mov
push
jle
insb
xlat
loop
int3
mov
adc
xor
popa
pop
mov
dec
popa
sbb
in
leave
add
dec
call
lock
test
xchg
sbb
nop
ja
pop
mov
inc
dec
xor
je
add
pop
notl
push
aam
cmp
roll
push
mov
xor
insl
popf
push
mov
mov
pop
sbb
je
hlt
rcrb
xchg
xchg
add
cmp
bound
aaa
cwtl
daa
cli
jae
outsb
xchg
adc
pop
adc
sbb
mov
mov
add
enter
add
cmp
pop
test
sahf
mov
mov
sub
jns
push
xchg
mov
sub
je
cmp
aam
jo
mov
andb
ss
scas
pop
xor
lds
jns
test
cmp
popf
xor
inc
mov
lds
xor
into
mov
mov
cmp
mov
imull
mov
mov
inc
addr16
mov
popf
arpl
jg
shll
pop
push
insb
add
adcl
sbb
or
sub
rcl
in
inc
dec
jmp
out
stos
std
xlat
int3
loopne
out
arpl
push
shll
mov
test
je
xor
adc
outsb
sbb
repz
mov
movsl
sti
adc
push
pop
pop
add
add
sahf
mov
sbb
jno
sub
cmp
cmc
lcall
fcoml
push
mov
and
jl
sbb
mov
xchg
out
pop
std
and
cmp
lods
mov
jmp
and
dec
sahf
lret
int3
xor
pop
enter
push
mov
add
aas
dec
adc
sbb
xchg
sbbl
fstpl
xchg
repz
fcompl
adc
mov
xor
pop
daa
sub
sub
sub
xor
sbb
aas
sbb
imul
dec
inc
and
shll
imul
cmp
sbb
and
cli
out
loope
dec
popa
adc
and
mov
notl
adcb
jo
sub
xlat
sbb
dec
or
mov
pop
xor
mov
aam
mov
inc
and
jne
rorl
push
dec
cmp
inc
jg
inc
loop
out
push
ss
sub
xchg
inc
xor
jg
iret
pop
sahf
in
pop
aaa
sbb
inc
ret
cmp
add
loop
and
inc
repz
sbb
repnz
push
push
sbb
dec
pop
loop
jns
xor
push
jo
xchg
divl
cs
fmul
imul
out
pop
and
sti
ficomps
jb
les
adc
fdivrs
pushf
insl
jle
dec
int
ljmp
sbb
dec
mov
lret
xchg
dec
jne
shlb
les
nop
lock
mov
add
mov
jmp
std
and
and
jbe
jle
dec
add
sbb
js
mov
insl
es
sbb
jb
loopne
lods
inc
pop
movsb
xor
jns
or
or
push
mov
shll
outsl
xchg
push
lds
sbb
mov
js
push
or
in
dec
cli
jb
fidivrl
pusha
jae
push
nop
or
dec
sar
insl
push
push
adc
sbbl
cmp
cmp
lret
dec
ds
clc
cmp
push
xor
adc
adc
xchg
out
ficoml
push
mov
dec
jno
push
mov
xchg
mov
shll
fwait
roll
jecxz
xor
lahf
jge
mov
cmp
lret
sub
xor
lahf
sub
jp
xor
sbb
stos
jae
stos
jg
movsb
outsl
pop
pop
enter
sbb
xor
into
pop
mov
xor
test
sbb
int3
call
rorb
jecxz
adc
rcr
pushf
rorb
jecxz
out
xor
mov
insl
stos
jno
lods
inc
test
inc
out
testl
ja
cmpsl
pop
sbb
jp
and
mov
jns
repz
adc
movsb
adc
inc
xchg
xor
sub
addr16
or
mov
sbb
dec
jns
cmpsb
push
mov
fdiv
popa
je
or
cltd
mov
mov
imul
lcall
adc
imul
mov
fs
mov
into
xor
mov
cmp
sahf
stos
jae
push
sahf
xchg
dec
or
push
aaa
loop
mov
aaa
push
test
arpl
arpl
shlb
xor
add
or
scas
push
mov
repnz
pop
cltd
mov
icebp
psllq
xchg
jno
or
push
sbb
mov
cmp
xchg
repz
or
and
push
sub
and
sub
ljmp
xor
cwtl
fistps
adc
dec
cwtl
adc
cmp
into
data16
jp
shrb
jo
lea
xlat
pop
jmp
lods
sbb
or
lcall
inc
xor
mov
push
repz
add
push
xchg
push
punpckhbw
xchg
mov
mov
lcall
jbe
les
and
inc
out
pop
add
xchg
cwtl
ljmp
fwait
mov
pop
sbb
push
adc
out
js
mov
xchg
pop
out
cmp
mov
adc
stos
jo
sbbb
dec
sub
pop
jne
out
jg
nop
add
repz
cmp
push
lcall
popf
ret
into
lret
cmp
imul
cwtl
xor
sbb
testl
es
push
data16
inc
icebp
fidivrl
jl
xchg
insl
mov
out
add
xor
lcall
adc
fidivs
mov
subb
and
and
mov
es
jnp
or
lods
lods
aad
cmp
add
xchg
dec
cld
or
int3
xor
aaa
cli
ret
stos
ljmp
or
sub
ret
int3
sub
jb
inc
ret
mov
lfs
addr16
lea
pop
add
mov
into
cltd
stos
lahf
lahf
aam
xchg
mov
sahf
in
rcrb
js
pop
inc
xlat
js
pop
cmp
ds
not
arpl
xchg
cmp
roll
jg
and
push
movsb
mov
dec
je
or
jmp
and
inc
jle
ret
cltd
ljmp
add
in
aaa
and
xchg
mov
fadd
jns
es
dec
inc
jg
ss
cltd
adc
adc
inc
lcall
or
int3
sbb
add
sbb
test
jo
adc
dec
popa
push
mov
ja
flds
in
inc
xlat
sbb
add
ds
fimuls
cmp
xlat
inc
mov
in
jno
add
rcrb
push
adc
repz
pop
xor
sbb
sti
inc
addb
sbb
or
xlat
stc
jp
pop
xchg
mov
stc
test
mov
dec
std
sub
scas
add
xlat
mov
pop
push
or
pop
jle
repnz
dec
in
jg
lea
in
push
movl
xchg
inc
lahf
loop
sbb
scas
push
cmp
aas
ret
js
cmp
out
and
and
pop
dec
push
jp
jl
push
sti
cmp
lret
in
cmp
outsb
ret
mov
js
push
xor
call
das
gs
inc
insb
aad
sub
push
hlt
test
inc
fdivs
add
imul
lahf
xor
jo
mov
inc
ffree
sbb
fs
pop
dec
xlat
mov
mov
int3
rorb
mov
dec
add
hlt
jle
in
aad
cmc
push
insl
push
jnp
jg
mov
add
fisubrs
mov
inc
xor
je
fmulp
or
and
xlat
jge
add
int
xor
aaa
cwtl
or
jmp
cmp
outsl
and
aad
fnsave
jmp
or
mov
rolb
sbb
les
outsb
dec
xchg
mov
stc
pop
andl
mov
aam
out
push
cmp
test
scas
add
xor
out
pop
pop
stos
jecxz
out
loope
pop
sub
cmpsl
mov
xchg
andl
inc
jo
adc
xchg
loopne
cmp
pop
les
mov
or
mov
int
loopne
in
adcl
outsb
inc
hlt
cmp
sub
sub
stos
adc
adc
divl
aas
lahf
cmp
addr16
or
fisubs
lret
hlt
cli
ret
pop
push
add
out
shr
or
inc
sub
jne
pop
imull
and
jle
cmp
jno
inc
ljmp
test
std
jecxz
gs
in
enter
xchg
push
jp
push
or
lods
push
inc
clc
jmp
mov
xchg
sub
mov
or
int
lods
mov
and
push
pop
arpl
xor
dec
das
data16
inc
inc
insl
cmc
call
inc
in
pusha
ficompl
ret
inc
out
test
or
sbb
push
jae
dec
and
daa
lcall
xadd
cmpsl
cmp
xchg
and
xchg
mov
mov
jbe
test
jp
cmp
dec
fnstcw
add
cmp
loope
adc
lods
dec
adc
fstpt
loopne
ret
mov
fistpl
mov
ror
arpl
in
jne
out
mov
imul
in
mov
fisttpl
pop
xchg
adc
stc
in
pop
icebp
push
xor
js
ja
enter
popf
rol
dec
add
and
orl
pop
out
in
je
push
mov
dec
sti
in
cltd
lods
dec
outsl
aad
push
pop
mov
jecxz
or
dec
jbe
fistpl
push
mov
jne
inc
fsubs
mov
sub
or
test
push
cltd
nop
test
xor
shlb
cmp
mov
test
push
xchg
mov
sub
scas
arpl
hlt
mov
jmp
int3
lret
mov
daa
ds
popa
jo
mov
sti
stos
add
push
cmp
cmp
aas
addr16
dec
adc
jne
jnp
fwait
pop
pop
xchg
test
testb
call
mov
test
imull
xlat
es
push
addl
xor
enter
dec
inc
pushf
xor
out
mov
or
pop
rclb
lahf
call
pop
xchg
sbb
dec
xchg
mov
pavgw
frstor
mov
jnp
sbb
mov
and
fsubrl
or
in
je
inc
jl
test
mov
xor
int
fnsave
mov
ss
sbb
push
lcall
cmp
sahf
lcall
scas
not
test
push
fsubrl
mov
cmp
adc
dec
jns
lcall
push
fnsave
inc
jmp
push
xchg
mov
jbe
adc
adc
or
mov
or
push
mov
jb
cltd
push
imulb
out
jle
repz
xchg
dec
decl
mov
cmp
xchg
stos
gs
jo
cmp
lods
aam
sbb
movsb
xchg
mov
out
bound
fisttpll
mov
pop
loop
xchg
jae
int
jle
and
scas
xor
imul
loope
movsl
cmp
ja
jecxz
js
mov
loopne
cmp
jge
xchg
jne
daa
sub
pop
sub
pop
push
and
or
jb
clc
dec
lods
mov
jg
push
outsl
mov
add
in
inc
mov
mov
out
fsubp
xor
mov
scas
inc
popf
push
testl
jp
std
daa
and
jb
pop
fwait
cli
xor
pop
jmp
sub
lret
popa
not
ljmp
stos
jno
jns
sub
movsl
popf
ljmp
pop
jb
inc
fimuls
cmpsb
pop
inc
cs
cmp
push
mov
dec
stos
mov
shlb
fxch
scas
lahf
mov
icebp
sub
mov
xor
sti
mov
mov
nop
ds
scas
mov
fwait
dec
pop
push
push
cli
sbb
fstl
mov
push
cli
xor
sub
xchg
sti
push
push
mov
gs
dec
sub
sub
test
inc
jmp
pop
inc
lods
mov
adc
or
hlt
xchg
fildl
push
ds
aas
imul
add
and
and
push
push
xor
inc
movsl
xchg
inc
push
dec
insb
jb
imul
lods
mov
dec
and
mov
popa
andb
dec
and
js
xchg
mov
ret
pop
es
mov
cmpsl
xchg
push
les
aad
outsb
mov
rolb
xchg
dec
mov
mov
aad
pop
inc
add
shrl
aad
xor
dec
aam
out
je
xchg
stc
lahf
aad
or
gs
adc
push
xchg
or
aas
or
stos
jno
call
push
in
flds
sahf
nop
sub
sub
sub
jecxz
das
in
sub
les
jb
jg
inc
pop
or
cs
cmp
jle
int
ret
cmp
ret
repnz
push
cmp
xor
into
push
xchg
and
sbb
loope
xchg
dec
push
jmp
xlat
inc
fcompl
cmpsl
adc
aad
xchg
cmp
or
fildll
mov
dec
jge
sbb
lock
mov
mov
add
mov
pop
cmp
push
jo
pop
xor
push
sub
test
pusha
std
push
mov
dec
dec
mov
adc
aaa
xor
jae
or
pop
clc
inc
jl
xchg
add
push
rclb
fsubp
xchg
xchg
xor
add
or
in
lods
in
cltd
sbb
stos
add
pop
sub
adc
xchg
push
das
and
bound
ja
sbb
push
push
pop
adc
push
pop
mov
aad
xlat
bound
xchg
daa
dec
inc
mov
or
xchg
dec
mov
loop
xor
mov
xchg
lcall
lahf
popf
mov
rcll
or
push
and
clc
cmp
push
sbb
insl
ljmp
movsb
cmp
or
push
stc
mov
cmpl
and
into
cltd
inc
sbb
mov
in
jecxz
push
fcoml
aad
stos
cld
iret
movl
dec
cmpsb
in
movsb
scas
xor
lock
into
inc
xchg
icebp
lahf
xor
dec
test
mov
cmc
push
int
mov
sub
push
xor
xchg
push
jne
stos
insl
cmp
shll
stos
xor
or
xchg
cmpsb
jbe
jp
in
sbb
dec
mov
mov
mov
push
out
stc
cmp
shrl
or
das
int3
stos
xor
ljmp
push
inc
jbe
repz
add
ljmp
cmp
popf
or
aam
lcall
and
aas
dec
push
add
ja
xchg
iret
jp
fdivrl
lcall
fstps
movsb
mov
cld
jne
lcall
push
mov
dec
out
dec
je
or
neg
and
add
mov
das
and
call
inc
or
rorl
test
xor
pusha
rorb
imul
push
jno
mov
push
or
imul
fstpt
movsl
inc
shll
adc
sti
movb
dec
cld
jno
out
xor
aaa
inc
pop
adc
lods
pusha
cld
bound
mov
pushf
int
arpl
loop
mov
jno
add
sti
repz
jg
mov
loope
add
test
data16
les
fnstsw
mov
sbb
or
fmull
ss
mov
sahf
jae
outsl
pop
loopne
mov
test
add
loope
pop
fidivs
push
pop
outsl
lods
lds
stc
sets
and
sti
cmp
pop
inc
lahf
nop
inc
nop
and
insl
dec
or
pusha
sub
cmp
outsb
inc
out
stc
icebp
pop
insl
fldt
and
cmp
test
dec
and
popf
and
and
fcoml
in
mov
outsb
lret
add
lret
push
xor
dec
mov
fwait
call
in
aas
mov
adc
dec
mov
sub
je
cwtl
mov
and
out
mov
pusha
in
arpl
aad
es
add
xchg
pushf
pop
hlt
arpl
rolb
int3
push
jle
int
adc
cmp
add
xor
bound
add
mov
jle
lret
xor
sbb
cmp
push
xchg
lods
or
lods
adc
iret
inc
jae
movb
jo
fmuls
cmp
sbb
fisttpll
push
mov
mov
inc
fs
daa
sub
adc
inc
insl
cmp
pop
enter
inc
jl
fdivrp
aaa
cs
out
xchg
pop
cltd
test
lcall
aam
mov
nop
sub
sbb
shll
int
xor
and
aas
fmuls
add
addb
fistps
loope
repnz
xchg
pop
imul
sbb
pop
jmp
std
xchg
cld
push
movsl
test
sbb
jo
add
adc
xor
add
fcompl
pushf
fdivl
fcomps
xchg
daa
aad
fists
cwtl
aas
aad
or
test
jae
lahf
push
das
dec
daa
subl
rolb
cli
sub
in
adc
movsl
dec
jne
pusha
int3
dec
stc
fdivrs
stc
out
sub
mov
or
es
fmull
xchg
jns
jno
add
push
push
push
aam
inc
pop
dec
mov
jmp
sub
push
ds
into
repnz
push
lds
mov
mov
cmp
xor
xchg
mov
jnp
cmp
enter
int
nop
or
xchg
cmp
mov
pop
jge
dec
aas
stc
imul
clc
pop
push
gs
jmp
or
mov
mov
movsb
push
clc
xchg
rcrl
xor
test
test
daa
sub
fildll
mov
call
dec
sbb
outsb
jl
js
out
cmp
add
push
xlat
mov
lock
xchg
movsb
insl
ds
adc
mov
mov
cld
cmp
adc
ret
fidivrl
jb
pushf
cwtl
ret
dec
xchg
sbb
addr16
mov
ss
inc
out
jns
adc
pusha
outsl
sub
cltd
xor
fwait
cli
xchg
call
mov
xor
pop
cmp
popa
aam
or
mov
mov
inc
add
push
into
sub
mov
ja
pop
push
dec
std
pop
lahf
dec
stos
ret
out
cmp
mov
and
mov
ss
jno
sub
dec
pop
mov
jge
pop
subl
arpl
inc
mov
cmovg
iret
inc
sahf
pop
ds
pop
lahf
fbstp
imul
pop
mov
lcall
xchg
push
mov
mov
pop
jns
jmp
or
imul
adc
mov
insb
mov
cmc
idivl
add
mov
icebp
jl
cwtl
dec
repz
add
in
mov
cmp
adc
sub
pop
loop
sbb
adc
and
ja
int3
test
sbb
fwait
popfw
inc
std
mov
cli
and
dec
repz
gs
jge
or
movl
jmp
xchg
ror
stos
fldt
adc
and
outsb
addb
cmp
sahf
bound
test
jae
pop
shll
fildll
jmp
call
popf
out
mov
lret
fldt
sub
and
dec
mov
cmp
scas
push
push
jae
stc
enter
and
decb
jecxz
dec
dec
loop
test
fwait
in
imul
std
ret
cli
movsb
mov
repnz
hlt
inc
sub
jmp
xor
jne
xchg
mov
mov
lahf
fstpt
add
aad
cli
push
inc
in
push
sbbb
or
mov
call
sub
ucomiss
mov
sub
imul
arpl
je
das
sti
push
mov
mov
hlt
enter
ss
je
outsl
mov
fs
lea
std
imul
push
mov
push
mov
push
out
pop
push
aas
mov
cli
jnp
out
in
in
jmp
jge
pop
test
xor
xchg
xchg
cli
stc
fisttpll
lret
add
getsec
cld
mov
in
leave
leave
cli
lcall
call
mov
push
out
mov
cwtl
fcmovne
mov
cmpsl
xchg
pop
mov
and
leave
fisttpll
icebp
test
aad
adc
pop
or
fisttpl
out
aam
fisubl
add
adc
dec
cli
xchg
movl
decb
imul
test
xlat
sti
inc
arpl
shll
adc
mov
mov
jmp
xlat
cmp
ja
xchg
inc
pop
push
inc
enter
ucomiss
sbb
sub
in
lods
fwait
dec
jo
mov
mov
pop
sbb
and
adc
icebp
loop
pop
jl
std
inc
inc
or
dec
jno
cmc
pop
icebp
dec
xor
shrl
mov
adc
cmpl
fnstenv
test
jg
fisttps
sub
cmp
jmp
aam
ljmp
pop
fs
into
cmp
push
push
and
jns
pop
ljmp
in
out
leave
fiaddl
lcall
enter
xor
imul
and
jmp
xchg
push
cmp
jbe
cmp
std
rorl
popa
aam
sbb
sbb
mov
lret
push
inc
ljmp
mov
pop
xor
mov
xchg
out
mov
imul
pop
xchg
or
mov
push
add
ret
pop
enter
and
mov
sbbl
pop
jge
adc
mov
sbb
stc
mov
ss
rclb
mov
xchg
mov
ret
shr
add
movsb
xchg
nop
stos
adc
lcall
mov
mov
js
stos
mov
cli
mov
cmpsl
mov
adc
shll
sbb
test
or
cmpb
fstpt
rcr
sbb
sti
in
sahf
outsb
jns
xor
dec
mov
insl
adc
push
iret
push
fadd
jne
and
xchg
dec
mov
mov
lcall
insl
andb
lds
jmp
push
sarb
jns
test
and
mov
std
stos
xor
in
mov
daa
fcmovnb
mov
xor
dec
adc
sbb
lea
in
sahf
jae
cmp
pushf
test
xchg
mov
orl
mov
scas
cmp
jns
inc
pop
aad
push
push
shrb
mov
xchg
adc
ret
call
stc
out
cmpsb
pop
xor
xchg
jle
xchg
out
pop
adc
ret
pop
pop
and
cwtl
mov
jns
mov
fwait
and
cltd
mov
mov
test
rorb
xor
add
sbb
stos
aas
fildll
into
ret
out
call
fbstp
sub
sbb
inc
jl
push
cmpsl
xchg
add
add
scas
sub
loop
jecxz
push
test
jae
sub
push
dec
push
aad
imul
and
jmp
out
jle
pop
jg
mov
mov
in
daa
loopne
or
xchg
pop
mov
lea
shl
sub
inc
imul
push
inc
sub
out
pop
inc
cmp
mov
std
ljmp
xchg
xchg
int
mov
imul
loope
inc
shrl
lcall
les
inc
lret
pop
shrb
push
into
insl
push
or
fs
dec
push
nop
mov
push
mov
scas
nop
loop
arpl
setp
push
sub
sub
gs
das
ja
jl
add
mov
lods
pop
and
outsl
fwait
jp
pop
adc
mov
iret
adc
mov
xchg
andl
cmp
cmpsb
ret
adc
ffreep
testb
inc
out
push
pop
stos
adc
lds
lods
lds
out
adc
lock
daa
xor
push
std
stos
adc
jge
sbbb
sbb
aaa
cs
je
aam
std
flds
test
je
decl
adc
aas
pop
jns
push
imul
mov
scas
xor
in
lock
or
cs
std
xchg
cmp
out
sbb
data16
dec
adc
fpatan
cwtl
clc
lcall
fldt
dec
aad
or
xchg
mov
popf
das
lock
movl
mov
inc
or
pop
xchg
dec
lahf
insl
pop
scas
nop
shrb
rep
fiadds
push
fs
add
int
jp
cmpsl
leave
fsubrs
mov
cbtw
scas
mov
mov
dec
loope
mov
sbb
int
outsl
aaa
popf
bound
std
imul
idivb
test
xchg
arpl
sbb
cmp
and
jl
lret
sub
popf
pop
movsl
mov
test
fstps
xchg
inc
add
cmpsb
out
cmp
fiaddl
lea
gs
aas
loopne
or
and
sub
adc
in
pop
push
xlat
pop
pop
inc
jns
mov
aad
jbe
mov
push
inc
push
lret
inc
cmp
mov
fsubrl
inc
call
stos
mov
stos
js
fnsave
ds
icebp
push
test
packssdw
add
cltd
mov
jmp
fsubrl
inc
cmp
mov
in
mov
cmp
loop
repz
xchg
push
enter
fists
cmpsb
stos
pop
stos
add
add
out
push
dec
cmpl
inc
loopne
pusha
into
das
push
pusha
mov
jnp
rcrl
cmpsb
in
xchg
pop
aas
in
addr16
dec
xchg
cmp
push
sub
ja
fisttpll
clc
pop
lcall
fs
movsl
sub
add
xchg
insl
cmp
push
xor
ret
imul
pop
nop
xchg
cmpsl
lcall
mov
loopne
mov
data16
imul
lret
lods
repnz
mov
dec
mov
sbb
add
push
ret
test
jb
popf
add
lock
mov
jo
cmpl
mov
adc
add
or
cmp
int
cmp
xor
jo
pop
push
mov
outsb
mov
jp
mov
adc
inc
push
out
rcrb
sub
ds
cltd
push
xchg
sbb
lret
movsl
jecxz
add
lret
scas
and
jmp
add
mov
mov
xor
pushf
mov
aam
jns
xlat
mov
in
loope
add
jp
test
data16
fnstsw
dec
arpl
xor
jo
js
adc
jge
sub
mov
mov
les
dec
and
dec
pop
jno
aaa
jmp
push
jmp
leave
jl
lret
popf
lock
arpl
jge
frstor
aam
shl
mov
xor
repnz
push
nop
lret
add
adc
jne
pop
roll
loope
ret
popa
lods
cld
or
fisttpll
cmp
mov
and
mov
insb
jl
mov
fidivl
sub
shr
pop
push
fnsave
and
shll
fwait
push
and
pop
scas
or
lcall
cwtl
pop
loope
and
cmpb
push
mov
sub
jle
mov
or
fmuls
xor
jnp
xorb
cltd
sub
push
push
xchg
pop
test
test
jmp
push
jae
pop
std
leave
adc
push
daa
fnstcw
popf
rcrb
pop
mov
daa
pop
int3
mov
out
movsb
lock
and
out
ror
shlb
test
or
add
dec
jge
mov
or
js
sbb
jae
sbb
push
push
out
loope
ljmp
aas
sbb
dec
popa
xchg
push
fidivs
out
fs
out
xor
loope
mov
push
iret
testb
test
cwtl
imul
jmp
loope
cmpsb
js
cmp
fsubp
adc
mov
clc
adc
mov
and
std
inc
aas
sahf
mov
iret
sbb
and
out
clc
fadd
add
rcrl
jo
std
jp
fmull
les
dec
or
neg
mov
xchg
mov
adc
js
sub
or
dec
add
xor
test
or
scas
xchg
mov
dec
ss
das
jge
dec
pop
add
push
push
and
pop
mov
test
adc
imul
scas
ljmp
leave
xor
repz
pop
mov
rcrl
lods
add
lods
pop
and
repz
cmp
or
ja
aas
jp
jmp
int3
cmc
aaa
das
pusha
dec
js
sbb
fidivl
xchg
and
xor
nop
mov
and
cltd
out
cmp
icebp
mov
mov
into
and
jecxz
sbb
mov
ja
xchg
std
sahf
fisubrs
in
pop
ja
jp
add
mov
xchg
sbb
pop
ja
pop
movl
imul
movsb
fdivrl
cmp
mov
xor
insl
mov
cmp
and
adc
sub
mov
or
lea
xor
inc
lds
mov
or
test
push
and
mov
sbb
cmc
scas
mov
lret
push
jns
jecxz
mov
jnp
addr16
mov
push
xchg
add
mov
inc
or
xchg
adc
mov
lcall
scas
mov
test
push
xor
jnp
mov
jp
sarl
test
inc
test
test
rcrl
dec
mov
shll
es
aaa
rcrl
mov
mov
hlt
shrb
lock
mov
pop
mov
js
sbb
cs
pop
pushf
dec
and
pusha
int
addr16
pop
push
jno
hlt
punpckhwd
and
arpl
cltd
mov
sbb
mov
enter
cmpsb
mov
hlt
and
les
pop
xchg
or
in
daa
incb
scas
xchg
xchg
or
sub
lods
scas
loope
cmp
fistpl
push
call
shl
mov
sbb
js
testb
ds
lds
ljmp
push
mov
jnp
int
outsb
xor
xchg
popa
negb
pop
mov
sbb
sub
and
adc
ss
dec
mov
pusha
js
xchg
push
out
lret
push
int
mov
add
or
cmpb
push
xchg
in
cmpl
clc
dec
jmp
shlb
sbb
cmp
add
sbb
popa
adc
mov
mov
ret
mov
fadds
pop
scas
out
call
int
mov
in
aad
or
or
xor
mov
xor
cli
push
fcoms
cwtl
fbld
cld
and
and
push
mov
sti
leave
xor
lret
push
mov
ret
push
inc
pop
jle
cmpsb
ja
popf
push
jle
ficomps
aaa
mov
fiadds
add
nop
inc
mov
dec
je
ss
push
add
jl
fcompl
stos
roll
ljmp
dec
out
lahf
push
notl
adc
ja
mov
add
shrb
add
lods
scas
jo
push
xchg
gs
jnp
pop
cmpsl
aaa
add
mov
pop
push
shrl
call
cmp
lea
and
subb
cmp
sub
movsb
xor
sahf
add
pop
or
stos
hlt
in
int3
repnz
daa
cmp
xchg
test
or
int3
aaa
mov
mov
shrb
jle
loope
insb
mov
addb
add
dec
and
iret
aam
cltd
adc
iret
and
outsl
cli
pop
jbe
repnz
pushf
das
add
adc
sahf
push
cmpsl
inc
jg
mov
pop
outsl
loop
mov
jge
and
gs
mov
test
ljmp
cmpsl
xchg
and
mov
or
fcoms
cltd
or
mov
icebp
inc
pop
outsl
inc
jle
adc
inc
or
adc
sub
fdivp
aas
pop
xor
adc
xor
cmp
outsl
aaa
repnz
xor
data16
mov
jo
jp
orb
bound
roll
nop
cwtl
in
mov
loope
add
inc
xchg
xor
insb
es
cmp
jne
push
xchg
aas
rolb
mov
mov
sub
jmp
lods
enter
push
xor
mov
push
sar
scas
sti
xlat
dec
aad
into
sub
jge
pop
ret
pop
lock
pop
add
or
test
outsb
xor
dec
jb
pop
in
movsb
into
or
sbb
cmp
jge
mov
sub
push
mov
ss
dec
mov
scas
xchg
xchg
mul
aas
cmpsb
inc
pop
divl
es
arpl
and
sub
pusha
mov
inc
add
inc
stc
jns
xchg
pop
jbe
test
mov
sbb
loop
fistps
mov
js
addr16
pop
or
jno
xor
mov
test
shrl
xchg
pushf
mov
xchg
orb
jno
scas
sbb
fs
and
inc
fisttpll
jp
lret
jbe
mov
lret
adc
out
les
xchg
jns
test
adc
shll
jl
fsubl
mov
mov
lret
sarb
jbe
loop
add
lods
ss
fwait
xchg
mov
mov
mov
not
inc
call
push
cmp
or
test
mov
xor
out
jmp
mov
add
xor
sub
pop
push
fs
adc
test
sub
shl
ds
dec
dec
pop
rolb
or
cmc
aam
je
js
stc
fists
out
sbb
es
pusha
arpl
aam
dec
rolb
push
or
inc
int
jbe
mov
gs
shlb
lea
mov
and
enter
pop
fstps
mov
mov
sub
aaa
bound
adc
fwait
xor
ss
xor
int
iret
fsub
push
pusha
xor
jl
inc
in
sbb
dec
pop
jb
jo
mov
movsl
cmp
mov
dec
pop
push
stos
call
outsl
loop
or
pop
sub
fsts
push
sar
dec
int3
outsb
ret
jecxz
cwtl
arpl
push
dec
fsub
pop
loopne
and
push
mov
push
lds
ds
rcrb
stos
pop
adc
push
orb
sbb
int3
jne
add
push
cli
push
cmp
dec
cmp
jnp
and
out
cmp
loope
mov
cmp
jb
xor
mov
clc
mov
and
fsubr
cmp
in
faddl
jae
stos
sbb
aad
aad
test
pop
fwait
cmp
fmuls
and
and
mov
popf
or
push
cmp
fs
pop
pop
and
push
cld
dec
fdiv
mov
std
dec
int3
out
popf
mov
lock
fucomi
mov
or
test
loopne
or
cmp
nop
test
fistl
and
gs
daa
jo
mov
cmp
lret
hlt
sbb
mov
add
lcall
xchg
add
push
mov
push
addr16
outsl
fsub
dec
inc
or
insb
dec
push
jae
enter
int
and
fidivl
mov
test
test
arpl
sbb
outsb
push
scas
push
xchg
orb
loop
mov
das
pop
or
xchg
pop
xchg
dec
mov
xchg
cmp
mov
ret
dec
adc
or
cmc
lret
add
or
adc
mov
in
fdivl
jge
push
mov
cltd
and
mov
orl
pop
sub
push
mov
roll
fisubrl
into
push
ss
push
lods
mov
and
rorl
inc
bound
cltd
test
rep
sti
mov
mov
fstpt
jmp
add
cmp
fs
xor
inc
sbb
pop
mov
and
out
cwtl
loopne
xchg
adc
add
push
mov
in
rcl
dec
sbb
or
in
mov
xchg
fsubs
lahf
loope
inc
xor
sahf
sbb
icebp
xchg
dec
jnp
push
shrd
sub
mov
push
pop
jl
jmp
cli
decl
dec
jo
push
or
fmuls
mov
jp
cmp
inc
xlat
ljmp
int
jae
in
aas
xchg
call
xor
push
jo
sub
mov
movsb
scas
or
push
stc
push
loope
mov
push
add
inc
mov
xchg
adc
pop
cmp
rcrl
aam
aad
je
inc
cmp
xor
aam
mov
fidivl
pop
shr
dec
mov
pop
xor
imul
pop
addb
mov
popf
sbb
das
or
aad
push
xchg
les
sbb
les
inc
sub
dec
xchg
cltd
sar
repz
fwait
xchg
cli
jecxz
bound
mov
in
sub
jnp
mov
add
sbb
jge
jp
dec
js
sarb
dec
jmp
xchg
in
add
xchg
popa
lods
push
imulb
inc
or
jb
in
rcrl
xor
stc
and
loopne
imul
push
lret
iret
hlt
dec
and
cmc
cmp
js
cmp
xor
sbb
cmp
mov
sub
rol
mov
and
pusha
pusha
add
mov
dec
xor
xor
dec
shl
and
aas
dec
mov
shrl
mov
daa
jae
ret
roll
push
mov
loopne
fucomi
insb
or
int3
mov
inc
sbb
add
pop
lods
cmc
mov
mov
jbe
lea
mov
pop
jo
and
ficomps
mov
cmp
add
fsts
js
roll
jmp
mov
js
and
stos
fwait
dec
sub
xor
and
jecxz
cmp
add
cltd
cmp
sub
loop
cli
aad
sub
and
in
hlt
stc
cmp
popf
dec
int
std
stos
fsts
push
push
test
icebp
add
lcall
mov
fmulp
ljmp
sbb
xor
push
pop
imul
inc
or
outsl
mov
in
fidivrs
jns
dec
lds
out
fcomps
inc
ficoms
fmull
xchg
push
pop
jmp
sbb
lock
nop
lea
mov
dec
push
push
fs
xor
add
ret
lods
xchg
mov
lahf
mov
loope
shlb
mov
call
dec
out
addr16
mov
dec
ret
push
sarb
imul
lea
lods
fsubrl
lcall
inc
and
out
mov
xchg
repnz
mov
inc
add
stos
push
and
subb
push
pop
ljmp
mov
call
out
test
mov
neg
sarl
cmp
push
outsl
dec
xchg
scas
pop
xor
andl
into
lret
hlt
pop
cmp
rcll
sbb
adc
js
popf
cli
cmpsb
lea
mov
popf
ret
imul
cmpsb
xor
test
sbb
push
rcrl
adc
or
stc
jb
aad
push
inc
add
sbbb
loopne
mov
mov
fldcw
hlt
pop
inc
stos
fwait
push
push
sub
lods
bound
icebp
xor
pop
jmp
in
mov
repz
xchg
inc
fnstenv
dec
fs
jle
pop
sub
shll
lahf
rcrb
aam
add
movsl
cmpsl
mov
movsb
mov
pop
xor
or
call
or
dec
mov
in
mov
mov
jg
jp
inc
mov
adc
loop
xor
daa
fdivr
rcr
add
test
repz
test
in
test
add
jno
jno
call
sub
shlb
call
imul
stc
sbb
sbb
fwait
in
repnz
cmpsb
leave
movsb
xchg
mov
lea
xchg
je
mov
mov
pop
and
lcall
das
push
dec
int3
add
adc
in
clc
jnp
test
sbb
push
xchg
sbbb
aad
in
movl
push
xor
cwtl
jl
lcall
ss
adc
js
push
mov
mov
pop
stos
pop
mov
xor
jge
inc
out
sbb
mov
lods
int
ret
xchg
mov
pop
fwait
push
bound
add
inc
push
inc
int
arpl
push
daa
and
aaa
jle
in
repz
jl
pushf
mov
test
popa
in
adc
sub
daa
jb
xchg
cwtl
ficoms
in
dec
into
and
and
dec
mov
lret
push
cmp
mov
js
sbb
jecxz
xchg
jae
inc
or
lea
ljmp
jbe
cwtl
and
loop
test
std
jecxz
jbe
mov
push
sbb
shll
adc
stos
cltd
test
add
xchg
and
scas
shlb
jae
xchg
rcrb
cs
add
push
shrb
mov
jno
xor
jne
scas
cs
div
addr16
test
je
jmp
loopne
enter
iret
xchg
adc
pop
xor
jae
xchg
dec
mov
aas
jbe
sbb
scas
dec
enter
mov
fisttpll
cmp
mov
xchg
punpckhwd
mov
inc
xchg
in
aad
mov
loope
adc
into
jo
cld
sbb
lods
es
mov
cmp
fiaddl
jecxz
imul
repnz
lods
add
mov
int
fsubrs
mov
sbbb
into
ss
cld
ret
lods
orl
mov
pop
iret
movsl
repz
outsb
dec
and
insl
adc
jns
pop
adc
lret
xchg
xchg
dec
and
push
mov
sub
cmp
pusha
xor
sbb
call
out
inc
retw
in
xor
inc
loopne
cmpsl
aaa
pusha
sbb
xchg
fwait
xorl
fisttps
sub
les
mov
xchg
scas
aad
ret
xor
lret
ja
xchg
repnz
cs
into
lods
and
cli
mov
inc
jno
push
mov
insb
sub
add
adc
xchg
in
and
and
inc
sbb
mov
ljmp
popa
sti
xor
pop
mov
jno
xorl
sub
cmpb
daa
scas
mov
out
pop
jno
fwait
pop
mov
stos
push
je
stos
loope
sti
cmp
ds
adc
pop
aas
jle
mov
mov
hlt
inc
inc
das
mov
out
dec
fwait
sti
mov
xchg
out
or
sti
cli
xor
decb
adc
imul
inc
cmc
mov
mov
sbb
pop
mov
jbe
mov
add
test
mov
mov
mov
xor
fsubl
cs
mov
xor
enter
push
test
test
add
pop
pop
sbb
divl
jg
push
roll
aaa
in
aam
and
arpl
jge
ja
inc
mov
imul
cli
and
aam
shr
push
cwtl
mov
fsubrs
stos
cmpsb
stos
mov
insb
es
xor
loope
mov
xchg
xlat
pop
ljmp
push
mov
imul
bound
idivb
mov
mov
jmp
enter
lods
shlb
call
into
adc
scas
les
pop
mov
in
inc
mov
push
push
fstl
xlat
pop
mov
iret
sbb
and
pop
movsb
sarb
xchg
jb
mov
or
fdivrl
mov
data16
jno
sbb
lock
mov
push
leave
xchg
pop
mov
rclb
pusha
les
mov
in
cmp
mov
xchg
ret
dec
aas
sub
pop
imul
lahf
pop
lods
sbb
insl
xchg
push
cmp
xchg
inc
inc
dec
dec
xchg
pop
xor
dec
jmp
add
xchg
loopne
sub
xchg
or
xchg
push
clc
test
cmc
or
dec
loope
inc
mov
arpl
xor
outsb
fistpll
push
lcall
push
mov
pop
nop
dec
icebp
fwait
cmc
cs
popf
out
inc
out
mov
enter
jle
mov
ljmp
sub
xchg
dec
leavew
hlt
adc
inc
dec
loopne,pt
or
pop
jl
or
or
rol
add
fcompl
sbb
cli
xlat
in
fimuls
add
insl
scas
jle
fldt
sbb
and
aad
lods
add
adc
sbb
jns
movb
mov
adc
insl
lods
cmp
mov
sub
movsb
adc
push
xor
fnstenv
push
add
mov
cmp
pop
add
lods
push
ljmp
cld
jne
push
ja
es
push
dec
mov
icebp
mov
jno
fstpt
into
hlt
pop
into
nop
popa
daa
ret
mov
push
js
jno
mov
jmp
or
mov
in
xor
fstps
clc
icebp
shll
popa
or
xorl
fdivrl
in
pop
xor
or
push
sbb
aas
loope
sub
jp
ds
lds
jb
add
jb
test
push
subl
add
push
ret
xor
cmp
pushf
in
jbe
xchg
lret
pop
lret
mov
jae
mov
xor
xchg
jo
sbb
adc
mov
dec
nop
out
sub
loopne
sub
rorb
repz
sbb
and
or
repz
sbb
cltd
pop
jne
pop
and
push
rclb
push
loopne
or
inc
sahf
std
push
in
hlt
jg
sahf
icebp
stos
jecxz
addr16
clc
decl
ja
nop
enter
dec
lods
inc
mov
dec
jle
or
mov
dec
dec
lret
add
repz
hlt
stc
push
mov
fmuls
adc
cmp
add
and
lock
cmpsb
mov
inc
ficompl
mov
int3
stos
jo
inc
lahf
jmp
dec
fucomi
inc
mov
sbb
testb
sub
jb
scas
dec
jns
push
leave
gs
pop
xchg
mov
push
movsl
or
arpl
mov
cld
repz
add
lret
push
or
bound
aas
stc
or
aam
in
sub
shrl
adc
cmp
sahf
xchg
lret
mov
stos
or
gs
mov
pusha
xchg
xchg
and
jmp
push
repnz
lods
outsb
xor
or
mov
mov
repz
scas
jns
test
push
push
in
aam
inc
inc
cltd
sub
sbb
repz
push
iret
mov
fwait
add
movsb
inc
mov
add
sub
repz
sbb
xchg
xor
pop
jle
popl
mul
out
cld
and
int3
sti
outsl
push
rcr
bound
and
mov
fdivrs
mov
cmc
add
xlat
fprem1
sahf
cwtl
shrb
xor
fdivp
repz
mov
insl
ret
iret
pop
or
pusha
je
push
mov
inc
push
mov
or
fsub
fidivrl
out
ds
cli
mov
in
outsb
movsb
adc
mov
std
pop
mov
mov
scas
mov
cmp
xchg
jno
sahf
adc
xlat
cmp
inc
sti
mov
adcl
push
or
pop
add
shrb
sbb
mov
lock
pop
lods
inc
out
mov
or
cmp
mov
mov
mov
mov
frstor
ss
xchg
ret
cmp
mov
inc
pusha
fldenv
sar
fdivrs
popl
sti
sbb
cmp
lret
xchg
mov
loopne
xchg
outsl
es
push
mov
subb
dec
pop
push
sbb
nop
out
test
cli
dec
mov
xchg
jbe
ds
sahf
lea
fildl
jmp
xor
out
arpl
out
sbb
cmp
jmp
sub
adc
imul
or
add
insb
daa
mov
repnz
cmp
sti
ret
dec
add
mov
nop
pop
ret
les
adc
mov
cmp
xchg
sub
cmp
nop
jl
ljmp
mov
xchg
cmp
cmp
cmp
sub
loop
sahf
xchg
or
add
je
dec
xchg
push
mov
add
push
jg
mov
sbb
add
push
repnz
inc
xchg
cmpsb
ret
cli
sbb
sbb
int3
addl
jmp
out
in
je
fmull
inc
xor
mov
push
cmp
addl
add
js
or
adc
rcrl
stos
in
std
dec
jbe
call
jbe
mov
xor
or
sbb
cmpsb
std
test
sub
cmp
push
fldenv
inc
push
and
mov
xchg
scas
fldenv
xor
repz
inc
aam
mov
pop
insb
sarb
sbb
in
sub
push
cld
pushf
sub
test
daa
adc
xchg
pop
loopne
rorl
in
aas
jge
mov
out
sahf
das
xor
test
flds
pop
subps
mov
dec
push
xor
add
inc
fldt
sbb
jg
jmp
call
lea
fnstenv
jecxz
pop
inc
hlt
scas
lcall
add
outsl
cli
iret
sub
dec
lea
jno,pt
or
push
inc
les
sti
pop
sahf
jl
xchg
push
int3
ljmp
jp
fs
das
cmp
mov
sbb
jl
inc
fsts
adc
xor
pop
loopne
inc
or
js
pop
jecxz
cld
hlt
outsl
ss
sub
dec
addr16
cmpsb
cmp
fstp
pop
sbb
jo
fistl
sarb
push
mov
xor
ljmp
aad
xchg
sbb
xchg
jg
aas
pop
cmp
mov
lret
mov
mov
jmp
and
adc
jae
xchg
push
ss
int
sub
rol
push
insl
leave
mov
mov
push
es
inc
in
xlat
xor
sub
roll
gs
mov
dec
pop
pop
sahf
popa
fucomi
push
roll
inc
lock
fwait
push
jns
jns
sahf
imul
mov
fs
add
mov
xor
jecxz
les
gs
and
pop
aam
dec
pop
dec
or
fwait
pushf
jno
adc
idivl
mov
or
push
cmpsb
inc
test
push
int3
adc
negb
cmpsl
into
cli
je
fwait
mov
ret
mov
pop
cmc
lret
mov
jne
jbe
mov
sbb
cli
imul
sub
sbb
fs
xor
sbb
lea
loopne
jmp
add
orb
fwait
cmpsl
or
or
mov
outsb
sub
mov
int3
or
pop
pop
test
js
mov
dec
std
mov
sub
nop
push
mov
cmp
movsb
pop
mov
and
mov
inc
push
xor
or
adc
and
inc
jae
sub
or
out
and
lods
pop
sub
lods
fsubr
push
xchg
imul
add
push
aam
loop
or
xor
mov
mov
js
inc
jge
and
and
pop
pop
mov
push
lret
push
adc
imul
test
xor
sbb
mov
fmul
test
cmpsl
pop
push
dec
xor
popa
jmp
addr16
pop
jbe
fwait
mov
dec
add
xor
cld
jmp
sbb
lods
pusha
lcall
shlb
mov
pushf
xor
mov
es
xor
lods
mov
mov
ja
sbb
xchg
fidivl
ret
bound
fcomi
add
ret
lret
mov
in
or
mov
adc
lcall
rclb
andb
je
push
cmp
lods
sbb
sbb
stc
mov
pop
dec
ss
daa
lret
jnp
loopne
dec
or
pop
addr16
outsl
sub
add
aaa
add
sub
into
or
jb
scas
and
cmc
pusha
rcrb
xlat
sub
and
addr16
mov
mov
inc
xor
jb
cmpl
push
sarl
fisubrs
adc
stc
cli
sbb
sub
xorb
mov
inc
in
xor
mov
mov
incl
sub
cmpsb
fcos
jbe
cli
or
lcall
fwait
pop
cltd
mov
pop
andl
mov
sub
jne
in
stos
into
movsb
sub
gs
test
roll
jae
adc
icebp
cwtl
mov
imul
or
and
sbb
and
lods
or
out
jp
mov
pushf
fbld
push
adc
arpl
sar
or
repz
mov
sti
popf
sub
mov
js
lret
jl
stos
insb
in
dec
push
cli
andl
sbb
sbbb
aaa
push
mov
bound
xchg
sbb
stos
or
loope
les
and
mov
xchg
fdiv
xor
cmp
xchg
fsubrl
bound
push
out
addb
pop
push
std
insb
mov
sti
and
cmc
fsubs
push
jnp
inc
add
addl
insb
in
push
repz
xor
scas
pop
cmpb
push
fists
shrb
xor
movsb
cmc
jmp
xor
outsb
ljmp
fucomi
gs
int
es
mov
jno
sub
mov
jle
mov
sbbb
jp
pushf
jmp
cmp
daa
sub
outsl
mov
divb
loopne
hlt
mov
nop
sahf
sub
sub
mov
add
fcoml
jb
and
fmul
cmp
pop
pop
ffreep
push
mov
fcmove
xchg
dec
jle
mov
sub
in
movsl
js
mov
call
jl
mov
or
cmp
xchg
pop
stos
pop
add
mov
cmp
pop
mov
negl
and
mov
sbb
sub
rolb
mov
repnz
jl
mov
and
xor
or
adc
mov
xchg
aas
cmp
sbb
scas
js
icebp
pop
cli
adc
fidivrs
jge
insb
das
pop
iret
mov
inc
es
pusha
add
dec
sbb
fsubrs
outsb
insl
mov
packsswb
mov
inc
xor
mov
xor
data16
dec
jl
xlat
pop
inc
pop
std
std
jg
pop
iret
pop
lea
in
fcomps
jnp
push
xchg
inc
scas
cmp
xchg
mov
dec
out
inc
push
arpl
mov
or
das
jbe
repnz
cmp
push
or
cwtl
push
mov
or
repnz
sahf
adc
mov
and
mov
das
mov
cmp
ret
xchg
fisubl
push
mov
cmp
out
lods
loopne
pop
nop
lahf
xchg
imul
in
sbb
test
push
lahf
jle
xor
aas
xlat
rcrl
and
hlt
shll
clc
fldt
cltd
cmpsl
inc
dec
test
nop
push
mov
pop
add
xchg
adc
sub
mov
sbb
or
jl
test
loop
inc
cld
push
sbb
call
loope
cli
dec
pop
xor
insl
hlt
jle
loopne
popa
sbb
push
or
and
sbb
jbe
insl
cli
mov
push
dec
sub
call
fs
mov
test
shlb
xchg
mov
mov
jl
or
push
sbb
test
mov
loop
cwtl
scas
pushf
mov
xchg
inc
dec
sarb
call
popa
arpl
out
mov
lahf
pop
sub
inc
push
and
inc
sbb
pop
dec
and
addr16
mov
xlat
xchg
or
mov
lock
xchg
inc
pop
sub
imul
pop
xor
adc
lock
and
pop
pop
pop
in
int3
push
es
inc
cmpsl
scas
xchg
xchg
jae
sub
mov
push
xor
adc
aad
cs
xchg
xchg
rcr
daa
les
dec
movsb
xor
cmp
enter
or
out
push
pop
fisttpl
or
dec
je
out
or
out
stc
lcall
sbb
or
inc
mov
into
sbb
pushf
xor
mov
xor
out
xchg
cwtl
sbb
push
call
rcr
inc
dec
dec
mov
push
or
inc
mov
in
cs
inc
dec
shufps
inc
mov
and
mov
jecxz
rcll
insb
adc
addr16
rcll
xor
mov
loope
aad
inc
clc
test
xor
adc
mov
dec
xor
lods
nop
cs
incl
pop
or
push
push
push
int3
mov
sbb
inc
add
sub
js
leave
push
arpl
inc
out
push
mov
xchg
movsl
dec
test
outsl
imull
gs
inc
pusha
sbb
mov
sarb
sbb
inc
loop
enter
jmp
xlat
daa
or
jnp
adc
add
push
dec
and
not
rorb
pop
aaa
clc
pop
rcrl
test
cmpb
cmp
inc
push
mov
pop
push
ret
jge
inc
out
and
mov
pop
arpl
or
out
loope
and
fsubrl
jp
cmp
out
fucomi
pushf
add
add
fistpl
inc
xchg
jp
out
cmp
cmc
out
lds
movsl
xchg
jno
mov
andl
xor
bound
fdivrl
cmpsb
dec
push
sahf
shll
bt
js
arpl
adc
mov
inc
mov
daa
pop
inc
stos
faddl
addr16
test
xchg
push
ret
mov
lods
roll
adc
push
mov
rorl
cli
adc
leave
or
scas
jno
stos
call
lret
dec
or
push
mov
mov
in
push
push
arpl
lahf
pop
clc
lods
inc
mov
outsl
int3
scas
inc
mov
inc
lea
mov
inc
fsubrs
mov
scas
mov
mov
sub
push
ret
sub
popf
test
adc
adc
cmp
xchg
lret
sbb
jp
les
mov
leave
mov
mov
mov
or
imul
sub
and
pop
arpl
cmp
pop
mov
iret
packssdw
pop
repz
arpl
sub
mov
aad
xchg
out
leave
stos
sbb
ljmp
inc
and
pop
xchg
loopne
movsb
xor
jnp
jns
icebp
sbb
out
les
pop
mov
in
test
movsb
sbbl
arpl
push
sti
pushf
fwait
xchg
lods
test
pop
pop
cmpsb
aaa
xor
xchg
call
dec
out
and
outsb
and
jl
adc
or
imul
in
iret
jmp
mov
add
mov
dec
in
daa
mov
jmp
inc
jp
jbe
inc
xor
adc
jb
mov
jno
xor
pop
sub
mov
lcall
lea
insl
pop
cmpsl
stc
push
mov
shrd
insl
cs
aas
and
add
insl
fldcw
mov
lret
call
movsb
sbb
jp
lret
and
or
jge
arpl
cmp
addr16
ss
ret
push
ja
daa
push
nop
sbb
cmp
sbb
ja
data16
outsb
lahf
sahf
sti
inc
pop
mov
sub
pop
movsl
ds
lret
js
outsl
aam
inc
sbb
xchg
xor
ds
mov
jp
jno
aad
sub
jg
repnz
sbbl
jbe
int3
adc
push
incb
push
pop
inc
cmp
fwait
cmp
loop
scas
inc
filds
pop
mov
test
imul
movsl
insb
mov
add
pop
push
xchg
push
jmp
scas
cvtdq2ps
xor
adc
in
bound
fldl
mov
pop
xchg
xchg
mov
out
notl
add
push
es
mov
dec
add
push
faddp
mov
push
les
xor
and
dec
push
xchg
das
xchg
loope
push
adc
adc
push
xchg
mov
xchg
adc
xchg
shlb
inc
lods
imul
lahf
mov
mov
or
rclb
negl
cmp
rclb
cld
addr16
mov
pmuludq
dec
xchg
dec
sub
adc
lods
imul
hlt
daa
jg
mov
push
jns
fs
inc
pslld
add
lahf
pop
adc
and
cmc
cli
xchg
add
cs
fsub
fistps
int
movsb
pop
cmpsl
insb
clc
outsb
jae
test
sub
into
test
xchg
xor
mov
pop
outsb
or
inc
sub
scas
mov
lcall
sbb
in
cltd
enter
xchg
jmp
sub
enter
imul
mov
lods
cmp
dec
scas
push
outsl
nop
adc
test
repnz
das
ficompl
repz
dec
mov
mov
shr
mov
mov
xchg
xor
imul
xor
lods
fistpl
loope
sti
add
test
or
orb
sub
mov
pusha
das
inc
mov
push
add
lret
sarb
popa
inc
in
mov
popf
cmp
out
in
incl
xlat
or
cmp
ja
mov
dec
jp
divl
aas
cmp
mov
sub
cli
sub
inc
dec
imul
pop
cmp
mov
mov
jp
mov
lcall
jmp
dec
sar
jnp
or
outsb
cmc
adc
out
and
push
adc
ss
and
push
xchg
ret
pop
xlat
fwait
sub
rorl
sub
inc
lret
jae
sub
adc
add
into
and
mov
adc
out
jle
pop
push
pop
in
inc
sub
jbe
push
xchg
sahf
les
adc
mov
mov
sbb
mov
leave
mov
test
pop
add
test
fimull
sbb
lds
aas
sub
push
hlt
or
dec
mov
mov
leave
ss
inc
rcl
sbb
add
ret
mov
mov
mov
dec
sbb
addr16
dec
jae
mul
jmp
insl
or
test
pop
mov
in
repz
rorl
xchg
lret
lret
rol
data16
cmc
into
dec
imull
lahf
repz
sarl
push
das
mov
jl
xchg
jp
xchg
cmp
sub
mov
out
out
sub
cmp
nop
inc
mov
fs
popa
mov
pushf
add
mov
pop
pop
mov
scas
les
addr16
sti
jbe
mov
lea
mov
and
pusha
jge
adc
pop
add
movsl
xchg
xchg
call
cmp
jecxz
aaa
inc
pushf
pop
pop
adc
and
sahf
mov
paddusb
inc
pop
dec
sbb
fs
mov
aad
iret
in
dec
iret
imul
jbe
lea
xor
push
lea
inc
aas
push
xchg
add
jb
loope
cmp
aad
dec
out
js
stos
dec
sbb
pop
pop
or
paddb
xorl
adc
push
call
add
movsb
push
lds
in
inc
mov
cmp
pop
jae
in
lock
mov
inc
jae
pop
sbb
out
sub
dec
xor
xor
push
ja
clts
mov
mov
inc
aam
jl
je
rcr
rolb
mov
inc
pushf
pop
xlat
sub
jb
out
outsl
fsubs
inc
sahf
roll
pop
aaa
popf
dec
push
and
stos
adc
enter
idiv
push
das
popa
xor
addr16
push
push
mov
dec
xchg
cmpsb
leave
into
pop
ljmp
pop
and
xchg
pop
add
mov
sbb
mov
mov
icebp
jmp
je
hlt
and
jecxz
pop
popa
ret
int3
lcall
fdivrs
sbb
and
popa
cmp
inc
jg
loope
fldenv
incb
fiaddl
cmp
sbb
xchg
call
xchg
in
int3
lods
lods
lods
push
xor
in
sub
xchg
pushf
idiv
lea
sarb
or
sbb
sbb
jae
sbb
sbb
mov
jbe
dec
inc
lds
shr
jne
mov
fsubp
dec
jno
mov
push
wbinvd
imul
into
xor
fstpt
dec
out
pop
lds
add
cli
push
xchg
jp
mov
xchg
pop
dec
sarl
dec
dec
mov
aam
push
xchg
shll
add
xor
cmp
pop
or
popa
mov
push
xor
les
shl
pop
lret
fimuls
mov
xchg
xor
je
sub
in
mov
jbe
or
pop
out
sbb
xor
js
sbb
dec
adc
inc
push
fisttpll
push
std
xor
cmpb
sahf
repz
jp
in
mov
das
les
xor
clc
push
cmp
std
add
mov
sub
mov
call
jnp
in
rclb
lock
test
insb
test
clc
ret
sub
fs
shrb
pop
cltd
lock
sbb
faddl
add
repz
negb
mov
aas
daa
je
xor
pop
ret
xchg
mov
int
out
mov
jb
cs
cli
stos
stos
cmp
loop
push
lods
ret
mov
push
rcrb
jno
xor
pop
add
sub
and
mov
lcall
shll
xchg
cmp
out
insl
test
stos
pop
subb
stc
jnp
inc
push
aam
jbe
inc
icebp
ret
sub
jnp
aaa
in
and
ret
ss
push
xchg
lret
outsb
fs
cmp
and
inc
push
scas
loop
mov
fwait
mov
sbb
stc
and
aad
pop
mov
or
inc
ss
ljmp
push
add
push
and
pop
ljmp
xchg
push
cmp
shll
or
xlat
pusha
ja
or
adc
ljmp
sar
test
mov
lea
rolb
shrb
cwtl
pop
mov
jne
cmpsl
jno
jnp
or
ds
les
popf
cmp
push
cmpsl
out
sti
xchg
sub
sbb
xchg
sbb
push
or
fnstcw
xor
test
xor
push
push
inc
mov
sbb
and
xchg
xchg
sar
sahf
mov
sbb
sub
cmp
fcoms
mov
lret
jae
icebp
movsb
fs
mov
sbb
xorb
inc
xor
movsl
or
adc
stos
mov
or
dec
sbb
cld
ds
add
jnp
sbb
add
jmp
mov
lcall
xor
jg
icebp
lea
adc
testl
xlat
in
dec
jno
cmp
popf
fisubs
xchg
lcall
inc
ds
ds
inc
dec
cmp
sti
divl
fbstp
dec
scas
mov
sbb
shrl
xchg
pop
or
and
stc
shrb
incb
es
mov
cmc
inc
test
sub
fnstsw
popl
rcll
pop
sbb
ljmp
mov
inc
adc
mov
cmp
fdiv
stc
out
and
adc
lock
or
adc
fdiv
movsl
jno
fdiv
pop
out
lods
jne
inc
xor
sub
fwait
ret
imul
adcl
add
mov
test
test
fcmovne
jno
add
test
sub
aaa
movsl
lds
mov
sbb
stc
test
scas
push
inc
int3
cmc
mov
sub
call
js
mov
inc
jae
decl
xchg
and
aaa
loope
adc
push
sub
sub
mov
mov
inc
add
int
cs
or
sub
loope
or
pop
pop
mov
and
adc
bound
test
in
xchg
sahf
out
loopne
inc
pop
lock
dec
sti
jnp
mov
test
bnd
mov
sarl
pushf
mov
pop
out
sahf
js
and
mov
sysexit
fldcw
aaa
dec
sbb
loope
call
and
testl
sub
bound
cmpb
sub
cmc
push
sbb
push
loopne
cltd
outsb
loopne
cmp
or
sbb
add
pop
cmp
sbb
fists
cmp
aas
roll
xor
pop
roll
jne
outsb
scas
mov
mov
adc
cmp
lds
notl
idivb
inc
lret
repz
popf
adc
jae
scas
sbb
inc
lret
sarl
repnz
cmp
js
push
insl
jnp
cmpsb
leave
inc
xchg
adc
test
mov
mov
add
imul
jecxz
leave
cmp
pop
movlps
leave
fnsave
insl
aas
imul
xor
iret
decb
mov
mov
in
fistl
mov
add
arpl
pop
inc
xchg
loopne
mov
test
dec
jmp
push
std
add
stos
and
mov
sbb
ljmp
xchg
shlb
insb
jg
fistpll
adc
pop
bound
sti
loopne
fsub
sbb
xchg
mov
imul
pushf
fisttpll
jmp
pop
adc
in
mov
pop
stos
scas
enter
and
dec
sbb
inc
xchg
sub
insb
rorb
ret
int
inc
scas
stos
cmpsb
sbb
cltd
sbb
mov
loope
lret
loope
sbb
adcl
add
mov
dec
adc
cmp
push
fcompl
sti
stc
cmp
dec
or
push
pop
int3
sbb
add
pop
cmpsl
or
push
cs
fidivl
jmp
jno
lods
int3
mov
stc
jmp
call
cmp
ja
dec
outsl
add
stos
ds
shll
scas
pop
stc
dec
add
in
cmpl
or
fbld
sub
add
lds
adc
add
jns
pusha
jmp
jle
jmp
aad
mov
inc
lahf
popf
add
push
mov
shlb
jg
jns
jno
stos
test
and
outsb
ja
movsl
bnd
filds
call
scas
push
jne
aam
mov
mov
adcb
mov
pop
test
mov
dec
pop
or
cmp
fidivl
sbb
or
fcomip
movsb
iret
or
mov
dec
inc
movb
adc
mov
rcll
stc
rcrb
pop
inc
sbb
mov
outsl
sbb
lcall
scas
add
pop
pop
insb
cmp
repz
loope
js
mov
out
add
push
ret
aas
test
push
ds
mov
dec
insb
inc
sbb
ss
orb
push
mov
int3
testl
or
lods
out
push
lock
pop
mov
mov
and
imul
cltd
xor
cmpsb
inc
mov
nop
or
adc
cltd
fs
xchg
outsb
int
sbb
inc
cld
sub
fcoml
xchg
sbb
push
sti
mov
loope
xor
cmp
push
dec
mov
cmc
int3
cmc
das
add
ja
lahf
popf
cmp
lret
pop
adc
sub
add
loopne
das
push
pop
inc
dec
rolb
xlat
inc
aas
repz
jl
push
inc
mov
std
adc
aaa
jae
stos
adc
clc
scas
imul
and
jge
pop
arpl
imul
and
sbb
xchg
lea
ret
in
mov
or
hlt
sub
repnz
dec
rcll
mov
daa
popa
and
bound
mov
sub
in
fcomps
cmc
push
std
mov
sub
shr
gs
pop
decb
ret
and
sbb
fwait
push
push
xlat
lcall
out
ds
or
pop
sbb
jne
adc
add
lods
add
loope
mov
ss
mov
adc
sub
data16
mov
cmp
movsl
pop
daa
mov
int
aam
mov
or
xchg
push
popf
xchg
sbb
mov
shlb
mov
push
and
insl
movsb
out
xchg
or
add
mov
cmp
mov
cs
jmp
cltd
inc
dec
enter
negl
pop
inc
push
cmp
or
idiv
scas
cmp
ds
ja
push
mov
xchg
fwait
ljmp
and
fmul
shrb
pop
cs
add
fcoms
xchg
xor
jno
dec
mov
jns
dec
sbb
pop
ds
ljmp
pop
sub
xor
sub
xchg
ja
fwait
dec
mov
sub
inc
fsubs
out
addr16
mov
pushf
or
dec
adc
dec
dec
mov
gs
jle
lds
sub
clc
cmpsb
in
stos
repz
mov
xchg
sarl
inc
cmpsl
loopne
mov
pop
dec
fmull
jne
daa
pop
std
and
bsf
adcl
inc
pop
inc
jle
es
out
mov
jns
test
sub
out
pop
stc
sarl
push
adc
dec
mov
xchg
ljmp
leavew
jno
xchg
mov
addr16
lret
stos
into
mov
rorb
iret
adc
add
divb
xchg
pusha
xchg
int3
in
add
aad
push
jb
and
or
mov
jnp
or
loop
adc
out
fsubrs
rolb
add
mov
mov
lahf
scas
mov
neg
mov
mov
out
mov
fucomp
arpl
pop
xchg
stos
data16
jnp
adc
in
mov
or
ret
xchg
jae
loop
fiadds
stos
shl
cmp
test
in
scas
iret
add
xchg
test
pop
loop
inc
jecxz
dec
in
xchg
sahf
xchg
inc
movsl
xchg
in
jl
in
sbb
mov
inc
fidivs
mov
mov
mov
scas
leave
sub
je
mov
ret
add
cmp
addr16
cmc
xor
xchg
addb
hlt
lret
repz
and
bound
adc
lods
xor
imul
pop
push
mov
xor
mov
nop
sub
fwait
imul
push
cs
inc
je
jp
mov
add
and
inc
jbe
stc
scas
pop
or
popa
popa
in
mov
fcmovnbe
jb
sbb
jge
out
fucomp
minps
dec
jg
gs
aam
scas
ja
pop
cmp
push
movsb
notb
dec
repnz
mov
and
lret
push
pop
mov
dec
xor
out
and
std
push
bound
cwtl
test
test
outsb
je
into
pop
lods
xor
jo
lahf
or
xchg
jne
es
ret
aam
cmp
push
mov
loopne
shr
jg
sarb
adc
mov
pop
mov
int
jo
or
xchg
outsb
lcall
xor
cmp
cltd
mov
lds
mov
fistps
pop
cmp
sub
adc
adc
icebp
mov
cmp
test
xorb
rolb
hlt
inc
aas
imul
mov
cmp
adc
ss
inc
fwait
xchg
loope
into
scas
or
fwait
cmpsb
fiaddl
fistpl
rclb
stos
pushf
xchg
jno
fstps
cltd
mov
out
loop
xor
cmp
je
mov
out
in
sub
or
arpl
andl
loope
sbb
lcall
push
in
call
mov
in
enter
xchg
push
fcmove
mov
inc
lea
dec
in
cmp
sbb
pop
xchg
jle
push
or
mov
mov
pop
mov
jmp
pop
cmp
cs
sbb
loopne
sbb
pop
loopne
cmp
icebp
inc
push
add
scas
sbb
ljmp
andl
push
inc
int
bound
adc
out
addr16
sbb
fcmove
mov
test
xchg
fstl
mov
adcb
aas
dec
adc
xchg
es
out
ret
incb
mov
lds
jo
push
cmpsl
scas
cmp
jo
in
pxor
in
addr16
sti
lret
repnz
push
lds
test
cli
popa
mov
hlt
clc
sbbl
dec
call
pop
or
adc
repz
je
or
popf
sub
xor
sar
popf
xor
sbb
rol
out
jb
push
movsb
bound
js
mov
stc
call
cmp
mov
nop
jmp
movsl
ds
mov
dec
or
and
out
aaa
and
mov
fs
sahf
mov
push
jge
ret
sub
mov
fs
xor
xchg
out
mov
sub
andb
jo
in
in
scas
nop
push
sti
sub
xchg
cwtl
js
stc
jo
inc
push
lods
das
mov
sti
mov
cmp
ffree
popa
iret
dec
push
xor
out
rol
out
cwtl
pop
lds
lret
jbe
pop
sub
cmp
lahf
inc
stos
or
cmp
and
lds
xchg
repz
insb
div
mov
sbb
pushl
xchg
pop
divl
inc
jge
inc
add
mov
jae
cmp
stos
je
das
add
jmp
mov
js
jp
pop
insl
or
loope
insb
nop
ja
cmp
fdivrl
jle
xor
xchg
push
rorl
inc
in
mov
push
rolb
into
jl
sahf
movq
dec
pusha
fistpl
jp
push
sti
shlb
jp
repz
mov
inc
jo
sbbb
movsl
lds
or
movsl
push
adc
xchg
mov
jno
mov
xlat
dec
sbb
push
mov
xor
aas
popa
push
cmpsb
xlat
sbb
add
pop
and
orb
inc
inc
lret
jle
ret
xor
xchg
cmp
rcrb
pusha
mov
pop
xchg
pop
sahf
xlat
outsl
loop
sub
xlat
mov
xchg
sub
rcl
push
cltd
jb
arpl
push
pop
cwtl
shlb
inc
shl
jecxz
cltd
or
ja
xchg
enter
mov
pop
or
xchg
int3
adc
jno
test
adc
xchg
pusha
sar
cmp
mov
ljmp
dec
out
mov
addr16
xor
sbb
sbb
xor
push
push
dec
xor
xchg
aad
xchg
shlb
fwait
or
test
inc
jae
int
bound
imul
arpl
movsl
sub
ficoml
stos
in
ds
adc
push
lods
push
out
fimull
mov
icebp
lret
not
inc
sbb
xor
xor
arpl
imul
jo
enter
push
sbb
mov
and
xchg
aad
pop
jnp
xor
xchg
mov
jecxz
into
jb
mov
xchg
adc
mov
loope
movsl
sub
push
js
fmull
sarl
mov
inc
sub
mov
loopne
and
je
fisubs
mov
hlt
add
mov
insl
out
sub
mov
push
dec
cmp
loopne
jg
shl
ret
jb
das
je
push
cwtl
int3
mov
daa
lcall
cld
jne
jae
jge
mov
lds
outsl
sub
jmp
push
mov
call
xor
dec
xchg
aas
ret
rorb
xchg
sbb
subb
sub
sahf
pop
cmp
mov
sbb
push
aam
dec
in
cmc
jle
push
jae
addl
mov
insb
enter
jae
rcl
pusha
and
xor
or
jecxz
fmull
test
in
sarl
inc
cwtl
test
adc
mov
xchg
and
push
xor
push
ljmp
inc
sub
cs
xlat
pop
aad
lds
fmul
scas
shlb
xchg
add
push
dec
xchg
pop
or
jmp
mov
lahf
jne
mov
push
pushf
sub
add
xor
sarl
dec
sbb
in
stos
fmulp
xchg
jae
mov
cmp
mov
adc
lods
mov
push
pop
jb
rorl
out
fwait
popl
shrb
dec
sub
pop
sbb
mov
or
mov
int
bound
je
imul
xor
inc
pop
mov
push
inc
je
cmpsl
test
jg
or
mov
pop
cmpxchg
fwait
addr16
xchg
je
jg
inc
lods
fdivrs
add
mov
jmp
fisttpll
fsubr
insl
sbb
out
out
pusha
ret
rcrl
mov
dec
mov
or
dec
data16
sub
mov
dec
inc
cltd
in
add
mov
pop
dec
or
cmp
in
jl
mov
call
fisttpl
dec
fidivrs
testl
mov
fs
push
movsb
adc
jo
std
or
inc
pop
pop
push
xchg
aaa
xor
and
scas
jecxz
imul
gs
dec
shrb
xorl
sub
sbb
sbb
cltd
in
xchg
cmp
jb
es
mov
stos
stos
mov
loopne
adc
mov
inc
cmp
fcoms
in
adc
mov
dec
xchg
xchg
xor
test
push
jecxz
push
cmp
stc
push
jb
mov
out
in
shll
inc
rclb
aas
jo
mov
jl
lock
inc
mov
mov
jno
lret
jg
pop
adc
mov
popa
gs
and
jns
mov
push
je
pop
pushf
repnz
jae
xor
cs
fxch
out
push
lods
ret
mov
bswap
cmp
mov
repnz
adc
or
pop
stos
mov
loope
mov
mov
ss
adc
int3
addl
sub
stos
loope
dec
cltd
les
aad
repz
stos
out
imul
mov
das
int
sbb
xchg
lods
sub
stos
test
rorl
push
jbe
sbb
insb
fwait
les
cmp
or
ljmp
fdiv
dec
loope
sub
xchg
into
pop
arpl
cwtl
jnp
dec
jno
mov
inc
popf
mov
pop
push
push
scas
pop
leave
ljmp
out
in
in
dec
and
into
jns
mov
sbb
dec
sahf
xor
sbb
popf
pshufw
or
xor
lcall
mov
rcl
in
jl
sub
mov
jno
xchg
cmp
pop
ret
pop
repz
ret
or
ret
sbb
cld
arpl
cmp
pop
adc
inc
cmp
loope
loop
scas
popa
sbbb
inc
jge
cs
pop
jns
sub
mov
mov
in
call
test
daa
loope
test
or
or
test
pop
fiadds
pusha
outsl
stos
jo
rol
cmpsl
and
dec
mov
std
aad
in
fsubs
test
test
adc
jp
jb
stos
cltd
addr16
and
mov
test
int
mov
scas
jbe
push
mov
int3
rcr
jb
pop
dec
outsl
sub
pop
nop
clc
cwtl
stc
popf
sub
or
cmp
inc
xchg
adc
mov
aad
daa
rcrl
cmp
fdivr
mov
fildll
jecxz
shrb
inc
dec
jns
in
push
icebp
pop
and
iret
push
cwtl
xor
sbb
xchg
out
and
adc
mov
repnz
xor
js
das
insb
sbb
and
add
mov
in
pop
push
mov
mov
aas
mov
loop
mov
mov
or
icebp
fwait
repnz
dec
pop
or
shl
fsts
into
push
movb
cmp
sub
mov
insb
cwtl
enter
fdivrs
inc
notb
adc
sub
jne
xor
jl
sub
test
jo
jno
or
js
add
mov
xchg
filds
cmp
arpl
cmp
mov
lods
dec
cli
hlt
xor
pop
and
sub
je
and
mov
sarb
mov
pop
adc
add
pusha
and
lretw
gs
mov
xchg
push
pop
sbb
outsb
adc
mov
call
ret
jno
movsb
mov
xor
das
dec
and
push
popf
add
enter
insb
xlat
or
mov
movsb
or
outsl
outsl
es
push
jbe
int3
and
jg
mov
movsb
dec
mov
push
inc
in
sahf
mov
loope
add
add
ss
movsl
inc
push
sub
aaa
adc
je
and
cmpsb
cs
jmp
jg
movsb
jp
lds
mov
scas
out
shll
xor
xlat
fs
std
mov
and
rcll
negb
outsl
add
ljmp
jb
mov
or
push
jl
push
ds
jg
mov
rol
stos
pop
testb
out
popa
loope
roll
ret
les
insl
aam
push
mov
mov
cwtl
adc
mov
xor
pop
push
mov
cmp
les
push
xchg
fwait
mov
iret
scas
or
data16
mov
repnz
mov
xchg
cli
outsb
pop
cmp
imul
or
movsb
inc
dec
test
adc
push
outsb
aas
scas
sub
lahf
or
xchg
mov
cs
push
into
add
stos
into
jo
fnsave
cmc
dec
cmp
xchg
mov
iret
lea
and
repz
cmpsb
cld
repz
mov
adc
pusha
cmpsb
arpl
call
out
daa
into
or
enter
fdivl
inc
dec
imul
xchg
sub
jo
jge
jecxz
push
add
lods
inc
mov
aam
cmpsl
and
out
decb
imul
sti
cmp
lea
outsb
cwtl
xchg
mov
add
ja
xor
mov
sbb
sbb
push
adc
lea
cmpsl
xchg
arpl
jo
mov
xchg
adc
push
inc
adc
sub
aaa
stc
mov
icebp
test
mov
mov
cmp
je
loopne
inc
inc
adc
ds
mov
or
or
push
pushf
mov
or
adc
data16
loopne
push
jne
nop
shrl
cmp
lret
shrb
sbb
add
clc
pop
test
test
mov
cmp
push
inc
out
push
mov
enter
cmp
aam
test
dec
test
std
push
add
cmpsl
int
ror
loope
cli
idivl
jns
mov
cwtl
pop
cmpsb
cmp
lret
jg
adc
pop
inc
xchg
in
mov
xor
xor
mov
mov
iret
sub
sarl
lds
and
pusha
xchg
stos
mov
sbb
fnstcw
adc
and
cwtl
jno
test
stc
clc
push
fwait
lahf
mov
in
clc
mov
std
addr16
inc
add
insb
jns
imul
sub
faddp
cmp
pushf
outsl
mov
mov
imul
fadds
nop
mov
iret
xchg
sbbl
add
inc
mov
jo
jecxz
cli
test
gs
out
or
test
jge
out
aas
inc
jmp
jns
into
mov
sub
and
sbb
movsl
fists
push
add
jbe
inc
enter
pop
repnz
stc
push
arpl
xor
xor
cltd
in
jp
push
es
xor
nop
jp
les
mov
mov
sub
in
sarl
lds
sub
jg
pop
jo
cmpsb
pop
in
pop
cmp
pop
cmc
pop
mov
dec
js
in
mov
popf
enter
jmp
add
je
mov
push
into
int
add
push
subl
gs
jb
pusha
xchg
jg
jg
dec
xlat
inc
mov
dec
add
cld
fldl
jnp
lahf
mov
pop
pop
fisubs
subl
std
int
xchg
inc
xchg
cmpsb
into
mov
push
and
mov
imul
ret
sbb
stos
hlt
add
jle
adc
cmp
cs
movsl
xchg
loopne
xor
shl
leave
cmp
stc
je
loop
dec
movsb
jns
cmpsb
and
ss
cmp
cmp
rclb
daa
into
movsb
dec
add
das
lea
jbe
jmp
xchg
jbe
div
jg
xchg
push
popf
mov
stc
enter
xchg
leave
add
sbb
fwait
lea
mov
mov
sarb
std
test
cmp
jge
add
outsl
scas
insl
xorl
dec
or
cltd
adc
sub
out
sub
inc
cmp
cmpsl
les
xchg
clc
ljmp
xchg
sti
stos
mov
imul
js
push
setae
je
jnp
aaa
shlb
mov
jns
lock
and
in
clc
push
fcmovbe
mov
ret
jmp
and
fisttpll
sbb
shrl
pop
iret
inc
mov
sub
push
mov
das
fdivrs
js
mov
fistl
ret
insb
fs
sar
pop
repnz
mov
lds
xor
js
jg
movsb
sbb
dec
aaa
pop
icebp
incl
movsb
int3
jecxz
cmc
cmp
lds
xor
enter
jp
lret
xchg
xlat
lds
dec
jnp
xor
sub
adc
push
cmp
push
aaa
call
movsb
fistpll
rorl
mov
xchg
movsb
stc
and
mov
adc
inc
cld
pop
test
mov
lret
jp
inc
test
pop
jmp
push
mov
sub
stos
icebp
inc
fidivrs
cld
push
and
movl
dec
les
xor
sbb
mov
sub
xor
cmc
xor
insb
les
inc
pop
orl
montmul
cmpsb
add
jbe
mov
sub
aas
mov
dec
mov
fisttpl
ljmp
add
mov
fadds
sbb
imul
push
test
cmpsb
divl
xor
arpl
mov
ds
push
imulb
jge
pushf
cli
outsl
test
lcall
cmp
test
mov
icebp
popf
mov
cmp
xor
push
repz
inc
cltd
pop
push
jg
aaa
icebp
inc
xor
sbb
int
mov
mov
jno
es
cmpsb
test
push
lret
adc
xchg
notl
out
pop
in
fcmovnu
adc
inc
loopne
movq
mov
push
pop
jmp
nop
xchg
ffreep
fadds
aas
aas
adc
aad
dec
jae
xchg
xchg
sub
pop
xor
popa
sub
dec
out
aad
mov
jmp
ja
sbb
frstor
mov
dec
add
mov
jnp
aas
stos
loope
sarb
mov
adc
jecxz
jb
cmpsl
sbb
pop
fdivrl
inc
push
cmp
out
push
in
dec
and
lock
shrl
ror
repnz
lods
pop
into
mov
jmp
inc
fmulp
mov
mov
xchg
sahf
je
dec
sbb
cmpsl
sub
xchg
imul
xor
mov
add
mov
add
push
lods
pop
cmp
mov
xorb
xor
es
andl
inc
outsl
xor
in
std
mov
mov
cmc
mov
daa
push
sbb
lret
ja
cli
and
jns
daa
adc
rcll
add
sbb
js
cs
lcall
mov
mov
push
xchg
adc
sbb
jae
jb
sbb
inc
mov
mov
pop
insl
inc
adc
mov
mov
icebp
bnd
sub
xor
or
cmc
xor
sub
xchg
and
lret
mov
movsl
test
cmpsb
and
xchg
or
adc
xchg
push
dec
test
daa
cmp
pop
inc
fldcw
sub
hlt
push
cwtl
sub
add
and
es
push
icebp
nop
add
lods
mov
jp
aas
add
xchg
fisttpl
cmp
push
pop
jnp
iret
sub
stos
bsr
enter
aaa
inc
mov
arpl
ret
xchg
test
xor
in
mov
inc
or
orb
sub
mov
sbb
sarb
shlb
push
xchg
ljmp
add
cmp
scas
push
mov
rcr
xchg
jg
lea
test
fwait
or
adc
bound
loop
dec
mov
xor
mov
push
roll
xchg
rcl
and
call
ret
cmpsb
xor
sub
mov
cmc
inc
js
addr16
pop
jecxz
xchg
sahf
mov
loope
and
mov
mov
stos
pusha
mov
push
dec
jb
xor
cld
jge
xor
xor
xchg
repnz
and
rorb
stc
push
test
lret
movsb
roll
mov
add
mov
mov
aaa
jns
int3
sub
push
jb
push
pop
inc
pop
add
jns
jb
push
daa
xor
add
add
mov
push
leave
nop
and
mov
pop
out
adc
daa
mov
inc
daa
sbb
lcall
mov
jg
sbb
mov
cmpsb
sub
adc
int3
jns
pop
in
bound
inc
mov
jge
cmp
sahf
loop
fstpl
xchg
rclb
enter
cmp
mov
out
jae
adc
pop
jg
jbe
pop
sub
push
adc
xchg
in
enter
mov
xor
sahf
add
leave
jmp
adc
xor
daa
ret
out
adc
pop
push
loop
gs
cs
cltd
out
lock
jns
subl
and
cmp
shlb
xlat
jge
jns
mov
lea
mov
push
dec
stos
sub
cs
ljmp
fstl
and
sbb
in
sbb
bound
adc
not
mov
push
inc
out
shlb
xchg
mov
adc
mov
sub
adc
test
pop
push
test
add
push
xrelease
jmp
mov
imul
and
xor
out
cs
aaa
leave
lds
scas
pop
lods
push
aad
xchg
dec
jo
iret
jp
cmp
in
add
push
sub
mov
cltd
sub
or
movsb
xor
dec
cs
popf
add
cmovg
adc
mov
stos
xchg
mov
sub
mov
inc
lea
stos
push
xchg
roll
pop
outsb
outsl
push
push
inc
push
push
mov
push
lods
test
out
lahf
and
mov
loope
inc
push
mov
nop
push
fwait
adc
mov
das
ljmp
cwtl
outsb
mov
out
insb
out
into
sub
fcmovnbe
rclb
fnstcw
mov
mov
xor
and
or
or
xchg
sbb
pusha
lock
dec
rorb
mov
inc
imul
adc
or
pop
cmp
mov
int
lcall
mov
in
xchg
xor
sub
xchg
mov
mov
jae
hlt
xor
sub
stos
or
std
pop
movsl
loop
inc
dec
sbb
mov
jle
dec
mov
mov
or
mov
sub
inc
leave
test
flds
add
arpl
cmpsb
int
mov
lods
pushf
outsl
xorb
imul
mov
pushf
mov
divb
dec
outsb
fbld
push
jecxz
pop
mov
lahf
or
mov
daa
lret
jl
ds
out
mov
cmpb
ss
decl
jp
addr16
mov
jmp
add
and
stos
in
js
push
int
pop
adc
out
xchg
lods
std
aaa
inc
adc
xor
lret
call
mull
inc
stc
sbb
push
in
cltd
xlat
ljmp
dec
stos
int3
sub
pop
inc
mov
subb
sti
pop
xor
rcr
push
dec
mov
add
insl
add
dec
pop
cmpsl
ret
push
mov
pop
xchg
push
xchg
xorl
jge
imul
adc
xor
pop
push
push
inc
mov
jne
sub
xchg
add
dec
pop
jg
arpl
lret
movsb
ret
dec
lret
mov
inc
jbe
insl
test
sub
arpl
out
cli
pusha
sbb
mov
rol
imulb
enter
arpl
sub
insl
scas
test
jnp
jne
adcb
int
stc
daa
adc
fcomps
adc
mov
xchg
movsl
aam
add
pop
push
pavgb
shr
popf
daa
sbb
jmp
ret
sub
notl
lods
push
mov
aas
cld
sahf
add
ljmp
insb
push
icebp
fcomps
jle
aad
pop
int3
stos
dec
jbe
mov
cmp
lcall
mov
push
fsubr
mov
push
icebp
jne
cs
lcall
and
or
lahf
mov
int3
or
ret
jmp
mov
cmp
xor
push
cmpsl
adc
cmpl
and
adc
sbb
cltd
jl
lahf
call
or
in
mov
add
inc
ret
xlat
sbb
cmpsb
xchg
mov
ja
sarl
inc
les
scas
test
dec
inc
mov
jmp
jns
shll
xchg
pop
inc
out
test
insl
inc
mov
mov
xchg
dec
mov
test
es
xchg
sbb
dec
je
push
xor
push
fdivr
ss
test
sti
sub
xlat
jns
pop
and
lods
mov
aas
stos
push
pop
jns
xchg
and
cmp
in
das
scas
inc
adc
test
addr16
loop
lea
fidivrs
test
xchg
lahf
pushf
mov
xor
jmp
inc
mov
jbe
xchg
pop
in
ds
mov
cld
sbb
push
jl
pop
push
push
pop
into
xor
mov
adc
or
aam
xchg
inc
and
add
xor
aaa
pop
push
fdiv
fiadds
dec
test
pop
fwait
jns,pt
in
jae
add
ds
add
pop
popa
pusha
dec
sbb
push
mov
xor
loope
imul
mov
pop
cmp
sub
pop
push
push
add
in
and
jmp
ljmp
lods
or
mov
sub
cmpb
xchg
mov
inc
cmp
insb
mov
add
mov
icebp
mov
stos
jle
inc
or
dec
movsl
sti
incb
add
pop
out
lods
dec
inc
pop
dec
inc
jmp
push
stos
cltd
or
mov
subb
mov
or
mov
dec
popa
inc
sbb
test
cmp
gs
jno
xor
jo
repnz
call
lcall
sete
push
ds
loopne
repz
rorl
mov
inc
mov
in
pop
adc
mov
lods
rcrb
xchg
pop
fisubrs
std
adc
jnp
mov
dec
jno
lock
jge
push
cmp
adc
cli
mov
mov
scas
pushf
mov
sbb
push
out
mov
icebp
jb
out
add
push
mov
pop
dec
xchg
mov
pop
inc
incb
icebp
xchg
out
lahf
mov
mov
out
shrb
inc
ret
and
mov
loop
sub
add
les
in
ret
jmp
jg
pop
cmpsl
sub
pop
imull
pop
xchg
push
repnz
push
jle
lods
adc
mov
mov
imul
inc
mov
movsl
dec
rolb
jmp
adc
fadds
jno
cmpsb
adc
xor
rcl
mov
loopne
lds
jg
and
fnstenv
arpl
jne
movsl
outsl
mov
imul
pop
mov
xor
push
inc
inc
sbb
loop
pusha
push
push
lea
jo
repz
out
mov
mov
std
rorb
xlat
testl
xchg
inc
add
pop
rclb
mov
jo
xor
jns
test
and
sbb
jo
push
add
xor
jo
sub
into
cmpsb
cli
popf
ds
cli
add
jg
in
bound
sbb
pop
push
out
lods
mov
jg
in
bound
popa
fmuls
cmpsl
cmp
aas
dec
ret
adc
mov
mov
sbb
sbb
arpl
mov
inc
and
push
jge
cmp
stos
xchg
fsubl
test
lret
jecxz
push
out
jl
jns
jg
jns
dec
sub
loope
ret
ljmp
test
outsl
mov
dec
add
daa
pop
jg
or
popa
repz
jmp
aas
fdivrs
push
pop
jnp
out
push
arpl
rorl
jge
in
outsb
dec
loope
icebp
or
fistpll
ljmp
std
and
adc
sbbb
or
push
test
push
fwait
sbb
add
sub
mull
cwtl
dec
xlat
add
dec
or
arpl
jnp
repnz
cmc
out
sub
sub
filds
mov
test
imul
adcl
lcall
test
or
cmc
nop
stos
sti
mov
fbstp
addr16
jg
adc
mov
jno
aaa
and
sti
jns
inc
xorl
xchg
imul
int
leave
popa
jmp
adc
aam
test
lods
jle
call
mov
push
insb
aaa
lret
leave
out
lock
cld
xchg
push
cltd
push
pop
lea
adc
cmp
pop
cmp
ret
ds
xchg
sbb
xor
mov
mov
insl
stc
loope
popa
mov
cwtl
bound
xchg
ja
fsubrl
test
test
aad
jg
add
cmpsl
mov
or
sbbb
sbb
xor
fmull
into
add
hlt
lods
jp
dec
clc
inc
mulb
icebp
std
inc
push
icebp
add
xchg
adc
and
sahf
push
cmp
push
xchg
imulb
out
pop
mov
and
or
cmp
in
lahf
sub
or
lret
es
jae
rorb
cmp
jg
jae
cltd
cmpsb
jl
mov
jmp
pop
sbbl
popf
add
mov
pushf
popf
jecxz
out
cld
pop
and
mov
pushf
push
mov
test
xchg
jmp
aam
repz
push
pop
inc
push
scas
inc
inc
rcl
icebp
mov
or
sbb
shlb
sub
mov
call
out
adc
and
fiadds
cmp
lods
fwait
bound
int
sti
or
pop
mov
mov
inc
std
aam
adc
cwtl
inc
and
inc
push
cwtl
pop
ret
js
xchg
sub
push
dec
xor
pushf
mov
cli
es
clc
ret
xchg
jg
cwtl
out
pop
xor
inc
push
dec
adc
push
cmp
hlt
ret
lods
cmp
xor
leave
das
inc
adc
loop
push
test
std
clc
jmp
shl
xor
push
adc
sub
and
cmp
pop
jns
jmp
or
mov
dec
fimuls
punpcklwd
xchg
fstpl
orl
dec
mov
mov
push
mov
scas
nop
cs
push
lds
fsubp
jge
aas
adcb
dec
loopne
imul
shll
test
int
pop
jne
fs
mov
mov
xor
jge
enter
sbb
pusha
stc
jmp
adc
mov
cli
insl
jmp
insb
scas
bound
lea
divl
inc
lahf
and
in
fxam
xchg
fcmovu
xchg
flds
mov
iret
insl
lea
jmp
add
es
loope
and
push
in
stc
out
ss
mov
addr16
xor
xor
aam
xchg
ret
outsb
inc
xor
les
xrelease
adc
int3
bound
repz
mov
es
xchg
in
out
loope
mov
adc
cmp
xchg
adc
xor
push
mov
cmp
mov
or
ret
outsl
xor
sub
and
inc
mov
and
sbbb
xor
rcrl
sbb
jns
mov
xchg
mov
pop
pop
jle
mov
xchg
add
sbb
sbb
xchg
pop
sti
dec
mov
mov
scas
stc
dec
mov
or
insb
dec
and
mov
push
dec
lods
jns
arpl
adc
das
mov
lcall
push
mov
call
je
and
fistpl
push
dec
dec
mov
xchg
pop
lea
in
mov
movsl
sub
rcll
dec
and
sbb
daa
mov
ret
add
into
add
cmp
jbe
sub
js
fs
dec
int3
or
clc
mov
mov
ret
and
aas
or
cmpl
mov
sub
rorl
repnz
sub
mov
xchg
or
pusha
inc
fcoms
inc
jle
movl
cmc
sbb
aam
imul
push
push
dec
adc
fisubs
cli
neg
xor
lods
mov
ficomps
les
add
clc
or
sub
pusha
test
lret
and
shl
jae
lock
add
in
int3
or
out
mov
mov
add
lcall
mov
sub
clc
ror
ja
enter
jnp
inc
mov
mov
out
or
jo
pop
call
adc
mov
scas
das
aaa
or
push
mov
dec
das
addr16
inc
jmp
pop
mov
sahf
jl
fs
push
dec
repz
add
shlb
loopne
lods
subb
cld
les
mov
cltd
pop
dec
inc
in
dec
mov
out
adc
jmp
inc
imul
imul
add
mov
inc
sub
ljmp
stos
cmpsl
sub
fdivrs
cmp
mov
mov
fcoms
mov
jg
pop
jge
jns
inc
push
cld
sbb
subb
mov
jo
idivl
jle
outsb
push
or
pop
icebp
inc
mov
stc
arpl
adc
test
add
xor
hlt
and
and
inc
repz
xlat
cmp
jecxz
rorl
push
idivl
inc
lds
cwtl
xchg
test
pop
inc
movsl
mov
mov
jp
mov
cmp
fcomps
insb
cmp
lret
mov
jne
cmp
addr16
dec
cmp
into
xchg
xor
jl
inc
fdivs
push
adc
mov
xchg
mov
and
dec
or
xchg
dec
cli
lods
imul
shll
push
rcrl
lret
ljmp
mov
mov
mov
push
ljmp
out
hlt
mov
subl
cld
pop
fisttpl
mov
dec
sahf
mov
popa
cmp
stos
jmp
inc
popf
jae
call
jecxz
mov
test
bound
inc
and
pop
ret
xlat
sbb
test
repnz
and
in
mov
add
outsl
cmc
adc
adc
lret
movsl
jecxz
fstpt
cmp
mov
sub
cs
fists
xor
leave
dec
cli
ret
outsb
or
adc
rclb
jg
or
dec
xchg
jo
inc
sbb
mov
push
mov
xorb
sar
push
jo
adc
lahf
sti
inc
push
ja
jle
mov
mov
jp
dec
mov
sbb
loope
loope
in
jp
shll
dec
inc
mov
mov
data16
inc
aas
stos
cmpsl
xchg
push
ficomps
je
or
das
test
adc
cmc
sub
mov
push
jno
stos
pop
hlt
dec
mov
jno
pop
iret
mov
in
sub
js
pand
jp
inc
sbb
stos
adc
lret
mov
cmp
inc
jle
clc
aaa
pop
dec
cmp
insb
add
mov
movsl
sahf
mov
icebp
ss
in
aad
and
pop
out
in
cmp
add
or
xchg
dec
andl
mov
cli
iret
cmpsl
pusha
fisubrl
add
pusha
loope
xchg
sbb
std
aad
xorb
push
cmpl
and
or
dec
pop
jns
leave
or
sbb
jge
dec
pop
lcall
or
cmpsb
xor
jbe
and
cli
out
sub
xchg
cmp
rcl
scas
es
pusha
mov
pop
xchg
xchg
fisttpl
add
popa
xchg
lahf
push
add
pusha
mov
xchg
out
inc
jle
lds
cmp
xchg
mov
idivb
fwait
sbb
dec
mov
xchg
lods
push
and
inc
addps
dec
lods
dec
sub
and
xor
jl
jb
dec
push
dec
pop
nop
mov
iret
aam
push
into
dec
or
push
pop
xchg
add
rorl
and
push
xchg
out
pushl
xchg
sub
sbb
lret
sub
sarl
outsl
push
out
adc
mov
xor
add
call
adc
dec
xchg
movsl
out
andb
xlat
lret
lea
cmc
pop
cmpsl
inc
mov
movsb
jns
insl
fld
mov
pop
jp
cmc
fldenv
sub
movsl
cli
fstpt
iret
ret
leave
pop
inc
cld
inc
mov
pusha
add
cmp
sbb
das
xor
cwtl
les
sahf
adc
sar
add
jne
hlt
sub
adc
out
dec
rclb
fidivl
cmpsb
pushf
push
daa
or
jo
xor
pop
add
sub
cmpl
stc
std
push
pop
dec
adc
mov
sbb
inc
sahf
ret
loope
jne
out
mov
mov
mov
and
das
outsl
mov
out
and
je
leave
imul
dec
sbb
pop
hlt
out
jecxz
clc
out
icebp
jns
call
mov
ret
pusha
xchg
shll
sbb
sbb
subl
loop
addr16
cmp
cmp
xor
mov
scas
ss
call
push
push
aaa
sbb
cmc
mov
test
mov
pop
dec
notb
int3
pop
imul
xchg
das
fstpl
mov
mov
pop
mov
jle
and
ds
mov
jno
dec
arpl
adc
scas
scas
test
mov
ret
cmc
icebp
test
das
fstpt
dec
lods
das
inc
mov
ljmp
mov
les
and
adc
sbb
sbb
push
cltd
mov
mov
dec
out
icebp
xor
xor
cli
fwait
movsb
push
xchg
into
mov
inc
pop
loope
sbb
inc
test
cmp
lods
test
data16
sub
dec
in
out
push
rorl
cmp
pushf
push
adc
idiv
mov
int
rol
mov
addr16
and
xchg
jne
xor
divl
sahf
and
imul
xor
dec
dec
inc
mov
cltd
xchg
jle
mov
xchg
jecxz
or
mov
pop
mov
addr16
imul
cmp
lret
addb
daa
lods
daa
outsb
jle
roll
cmpsl
mov
negb
pop
xchg
lods
fnstsw
mov
mov
fistpl
mov
push
inc
xchg
and
and
push
bound
xchg
lret
shrb
sub
adc
cmp
pop
cld
lea
or
add
js
cmp
mov
pop
xor
fcos
dec
cld
loope
push
adc
sbb
addr16
mov
xchg
lcall
xchg
mov
jne
mov
scas
call
imul
xchg
inc
add
ljmp
inc
fs
mov
fs
sbb
addr16
jl
inc
jmp
insl
test
aas
leave
fsubs
dec
or
push
icebp
pminub
bound
lahf
push
negb
mov
mov
aas
in
inc
mov
rcrb
mov
outsb
out
inc
addr16
mov
mov
in
stos
aam
push
sti
adc
sub
repnz
sbb
insb
iret
push
incb
arpl
aad
scas
xor
test
lahf
ret
jbe
xor
movsb
sub
or
push
sub
jp
fs
stc
mov
and
sysret
in
jno
insb
gs
mov
push
daa
cmc
cmpsb
js
dec
das
or
jb
xchg
mov
aad
and
or
sahf
mov
insb
xchg
movsb
jnp
jmp
out
into
mov
inc
xlat
and
fimull
inc
fs
aaa
xchg
xor
xchg
add
iret
lock
mov
add
fcoms
xor
and
repz
push
aaa
sbb
sbb
lcall
rol
fimuls
repnz
mov
test
lret
jno
push
out
rclb
push
jbe
push
xor
stos
in
push
data16
xchg
stos
push
xor
sbb
je
cmp
insb
movsl
scas
repz
loop
mov
mov
pop
jecxz
cltd
add
inc
js
addl
cmc
in
arpl
jo
out
in
sbb
data16
in
xchg
negb
dec
cwtl
push
pop
fsubrl
mov
sub
movsb
stos
mov
jmp
or
mov
push
mov
in
cmpsl
jg
addr16
test
mov
popa
jl
insb
and
pop
sbb
add
cltd
cmpsl
push
mov
sarl
lods
or
ljmp
xchg
sbb
xchg
mov
ss
cmp
filds
mov
mov
or
mov
fnstcw
popf
xchg
add
mov
mov
popl
mov
fld
fdivp
adc
push
gs
out
xchg
lea
push
mov
out
jge
loop
jmp
push
repz
dec
dec
and
mov
cmc
aad
jb
fisttpl
xor
sbb
scas
pusha
mov
subb
cmp
mov
add
leave
or
xchg
jnp
leave
xor
mov
cmp
leave
fsts
loope
xor
jno
jnp
sub
mov
clc
cld
gs
cmp
icebp
out
cmpsb
sub
pushf
and
fdivrs
or
mov
lret
ret
in
push
lods
cli
xor
fsubrl
xor
push
out
test
negl
fwait
adcl
xor
gs
clc
mov
iret
pop
outsl
outsl
les
jge
add
test
dec
shl
inc
ret
push
popa
pop
xchg
jecxz
jbe
adc
negb
dec
xor
ds
cmp
mov
adc
push
es
cmp
fisubrs
fs
rcrl
insb
loope
inc
mov
sar
lods
gs
mov
sub
cmp
cmpsb
fsubp
push
or
dec
ss
mov
ss
xchg
call
pop
rcll
rorl
pusha
lret
mov
sti
pop
cmp
shlb
adc
imulb
fwait
clc
xchg
adc
push
mov
cmp
mov
incl
mov
mov
call
push
ret
out
loop
or
imul
adc
push
les
add
push
cmp
test
and
sarb
adc
jae
mov
nop
pop
pop
mov
aad
icebp
sbbl
mov
shlb
ret
sub
insl
inc
mov
pop
push
stc
adc
inc
test
inc
shll
int
add
push
loopne
in
mov
rcll
out
mull
and
and
xchg
fwait
popf
lcall
dec
xor
fnstenv
and
xorb
jecxz
outsl
sbb
lret
lcall
test
sub
adc
iret
inc
fwait
push
xchg
fildll
xor
call
stc
jp
cs
in
imull
ds
mov
fsubs
mov
js
outsb
and
test
add
or
jb
scas
lods
aad
shll
idivl
aaa
ret
lea
dec
aam
inc
push
scas
jecxz
dec
enter
sub
add
in
out
loopne
mul
or
pop
xchg
jge
lods
lea
cmpsb
mov
xchg
fs
xchg
ds
jmp
sbb
shrb
arpl
pop
adc
mov
sub
aam
mov
mov
cmp
sbb
jb
sahf
mov
cmp
cltd
gs
xor
mov
push
shlb
xchg
sub
bound
push
insb
notb
jp
nop
aam
inc
arpl
add
aas
movsl
fwait
jns
mov
repz
fldcw
jle
mov
pushf
dec
movsb
outsb
cmp
cmp
les
inc
pushf
xchg
repz
pop
jo
pusha
adc
pop
dec
inc
sbb
mov
push
and
subb
iret
xor
pusha
sahf
xchg
lods
or
popl
fisubrs
ret
xchg
or
lods
insl
notl
jp
dec
roll
int
sti
dec
pop
adc
cwtl
dec
pop
jecxz
mov
xor
mov
mull
shlb
pop
loop
xor
jge
leave
mov
push
mov
inc
xor
xchg
mov
jmp
lods
or
or
imul
jae
insb
sar
cli
jns
sar
pop
mov
jecxz
push
ljmp
stos
dec
neg
mov
sub
pop
out
roll
adc
sub
stos
jecxz
cli
sbb
or
fisubrl
lret
ljmp
or
lock
daa
test
cmc
jmp
xchg
mov
cs
roll
sbb
cmp
call
insb
and
mov
cmc
idiv
imul
mov
decb
mov
enter
and
ds
and
cld
pop
into
push
jno
and
and
gs
ud1
int3
cmp
int
add
xor
sbb
in
ljmp
rcll
mov
mov
push
scas
cmp
pop
insb
or
cld
mov
dec
cmpsl
mov
mov
ljmp
add
lcall
pop
mov
cltd
loope
iret
in
inc
daa
cli
outsl
push
dec
mov
arpl
aas
jb
or
xchg
mov
sbb
fcmovb
pop
push
cmp
dec
sbb
adc
ss
adc
fs
or
mov
xchg
pop
dec
push
lods
pusha
jae
dec
outsb
nopl
hlt
and
lock
xchg
icebp
xchg
in
hlt
fistl
stos
sbb
mov
jmp
dec
loopne
orl
addr16
mov
out
or
mov
stc
jmp
sbb
cmc
lret
or
sbb
mov
clc
and
mov
ljmp
out
mov
lods
inc
arpl
dec
and
sbb
lea
mov
std
adc
xchg
lock
sub
stc
loope
aad
mov
mov
rclb
lcall
push
or
jg
out
outsb
inc
scas
jno
add
adc
jns
and
daa
insl
mov
ret
mov
rorl
xchg
ss
pop
insb
or
pop
ljmp
push
ret
and
push
leave
jmp
shl
jmp
cmp
loop
and
aam
xchg
shll
inc
and
adc
out
adc
les
sahf
jecxz
adc
pop
inc
jnp
shlb
pushf
lods
inc
mov
mov
jmp
and
xchg
jne
and
push
roll
or
gs
inc
das
dec
adc
push
mov
std
and
inc
jl
mov
mov
call
aaa
and
test
mov
arpl
xchg
les
popa
imul
addr16
into
aas
dec
adc
dec
cmpsl
psubq
in
jmp
adc
pop
adc
xchg
mov
jp
fwait
xchg
or
orl
inc
dec
lock
fldl
jnp
xor
cmp
add
clc
dec
push
test
jp
sub
jno
pusha
or
jge
mov
clc
in
hlt
repz
insl
cmp
or
adc
add
iret
sarl
sub
inc
je
or
into
ja
mov
xchg
inc
dec
repnz
lahf
add
xchg
sub
cmp
pop
sbb
cltd
sbb
insb
imul
mov
lea
sti
mov
adc
mov
mov
xor
mov
lcall
mov
cmp
adc
sbb
push
push
adcb
insl
fldt
cmp
add
pop
cmp
add
and
neg
mov
push
repnz
nop
loopne
fldenv
out
lcall
ljmp
les
mov
ficoms
jnp
rcll
inc
cmc
pop
dec
jp
push
xchg
fldenv
popa
loop
adc
int
inc
fldl
adc
xor
stc
lret
push
out
pop
leave
pusha
pop
aas
das
mov
dec
jecxz
sti
mov
aam
xchg
popf
je
std
cmp
mov
lcall
mov
mov
jle
push
mov
gs
jo
push
in
loope
leave
mov
in
xchg
dec
add
ret
fwait
jo
push
pop
cmp
jmp
ficompl
xlat
notb
mov
sub
jae
lret
jle
adc
xchg
dec
push
imul
ret
popa
jnp
lret
insl
cmp
or
and
jp
fldcw
notb
test
xchg
mov
imul
push
aaa
daa
into
jmp
mov
or
andl
or
add
or
push
mov
sub
jmp
xchg
stos
bound
loope
in
popa
sub
or
push
lock
sbb
dec
sbb
int
and
aaa
sti
cmp
push
pop
jp
push
in
cmpsl
add
mov
lcall
and
inc
adc
loop
dec
jne
sahf
inc
mov
mov
orb
in
bound
mov
pop
jo
addr16
mov
jle
test
cs
mov
mov
dec
xor
cwtl
cltd
inc
add
daa
test
mov
lock
inc
test
test
jmp
add
mov
jle
cld
sbb
pop
pop
cmp
int
fidivl
sahf
nop
mov
push
or
mov
push
sub
ror
cmp
or
cs
ret
ss
ficoml
xchg
push
pop
jg
scas
xchg
leave
js
xchg
lock
leave
nop
mov
jns
pusha
addr16
mov
imul
lods
mov
adc
sbb
imul
xor
call
test
js
cltd
adc
mov
les
adc
cmp
fldcw
dec
adc
lods
sub
push
fcmovbe
std
fs
fsubrs
mov
and
xor
jl
xor
mov
popf
add
test
sbbl
and
push
xchg
jmp
or
out
jecxz
mov
stos
rcrb
mov
clc
xchg
ret
push
mov
sub
cmp
andl
rcll
daa
cmc
mov
mov
jp
ja
cli
adc
aas
cmpsl
inc
inc
inc
add
jae
sbb
lret
adc
clc
adc
test
scas
mov
adc
popa
mov
cmc
inc
pop
rcrb
ss
das
outsl
inc
mov
lret
inc
in
mov
in
push
mov
fwait
imul
bound
push
loop
jg
jecxz
cmp
push
inc
les
xchg
popl
dec
lret
pop
adc
pushf
pop
dec
xor
mov
es
cmc
fcomi
bound
nop
push
inc
fwait
jmp
loope
cli
pop
inc
arpl
fstl
sub
hlt
pop
sub
push
jb
insb
sbb
xorl
mov
xchg
out
lret
imul
hlt
xlat
pop
inc
pusha
add
push
setno
in
inc
rorl
leave
add
dec
adc
ljmp
and
push
stos
das
icebp
pop
rcr
mov
xlat
std
hlt
add
dec
and
lds
pop
les
popa
imul
andb
mov
mov
dec
xor
or
jl
sub
cmc
mov
sbb
sub
lahf
stc
jge
rolb
pop
adc
pop
or
sub
dec
in
pop
jno
iret
out
push
cmpsl
cmpsb
push
mov
shll
js
sbb
sarl
loopne
inc
call
popf
add
mov
lods
adc
add
inc
adc
mov
hlt
jle
mov
stos
mov
cld
ss
jmp
mov
outsb
repz
mov
push
or
repz
mov
fldenv
aam
push
fs
rorl
mov
adc
xchg
push
call
push
icebp
add
mov
or
cmp
jne
outsb
dec
mov
jle
lcall
into
clc
nop
popa
and
adc
dec
mov
xor
shl
in
inc
cmp
lods
cmpsb
jmp
out
xor
test
imul
push
or
add
xchg
ret
outsb
dec
mov
mov
sbb
lods
decb
or
aam
jno
andl
inc
bound
aam
out
inc
mov
inc
mov
lret
sub
sbb
push
shl
outsb
mov
xchg
out
data16
xor
hlt
movsl
scas
add
cmp
lods
xchg
dec
jnp
add
pop
xchg
movsl
in
out
xor
cmp
mov
loop
cli
ds
data16
xchg
and
xchg
dec
arpl
dec
popf
mov
inc
xchg
mov
movb
mov
inc
aas
loope
mov
sub
imul
and
sahf
loope
adc
push
cmp
std
out
and
loope
sarb
lds
jae
daa
xchg
and
out
cld
popf
fdivrs
inc
cs
mov
cwtl
fbstp
ret
jecxz
and
sahf
in
xchg
mov
xchg
dec
movsb
xchg
outsl
psubsw
pop
mov
or
in
mov
sarl
cmp
or
push
lahf
shr
jmp
and
fldcw
testl
push
and
inc
test
jle
pop
mov
data16
out
imul
mov
mov
lods
add
push
cld
dec
pop
adcl
fwait
fwait
dec
hlt
orl
arpl
negb
jmp
shrl
jmp
xor
jo
lahf
lea
cmpsl
testl
pop
sti
adc
icebp
pop
call
push
sbb
inc
repnz
lods
decb
repz
cmpsb
mov
mov
xchg
loope
push
fisubs
in
mov
out
clc
ss
rcrb
faddp
jb
pushf
xchg
mov
das
jle
pop
dec
test
adcb
fidivs
xchg
mov
pop
push
aam
outsl
movsb
xchg
loop
aad
inc
add
push
insl
jg
push
dec
in
addr16
pop
stos
outsb
push
call
sub
adc
in
mov
pop
push
mov
cmp
out
push
scas
lret
inc
aaa
fimuls
mov
cmp
repz
mov
jge
das
jecxz
cmp
lret
xor
mov
fcompl
push
pop
fs
sbb
je
inc
jle
add
xchg
out
hlt
das
pop
jmp
sahf
mov
inc
inc
push
push
pop
cwtl
adc
fsubl
mov
jecxz
imul
dec
cmpsl
mov
rolb
push
pushf
or
pop
div
xchg
lock
mov
into
mov
loop
add
aas
iret
sbbb
or
lret
shlb
jmp
xchg
shrl
and
mov
js
in
xchg
fnstcw
adc
je
jecxz
aas
jle
popa
dec
cmpsb
mov
sbb
fsubs
sarl
rorb
xorb
push
jb
mov
stos
lods
mov
fbstp
or
clc
pop
mov
je
repnz
ds
mov
mov
test
mov
rclb
push
adc
ret
mov
popa
int3
mov
xchg
add
mov
loop
pop
je
mov
rol
pop
lods
mov
mov
pop
jns
adc
es
aas
xchg
jp
jmp
adc
pop
das
jbe
arpl
push
pop
test
pop
jbe
rcrl
mov
outsb
cltd
out
subb
xchg
stos
dec
or
cwtl
addr16
rol
mov
mov
push
outsl
fdivl
test
lods
jno
add
sbb
mov
jmp
mov
add
mov
mov
xchg
fcoml
cs
jle
add
jnp
movl
adc
cmpsl
cmp
push
jno
xchg
shl
call
test
push
int3
jp
jae
jnp
sub
and
fs
and
les
xlat
jb
adc
pop
into
nop
pop
mov
stos
dec
xchg
xor
sbb
pop
fucom
loopne
or
fiaddl
push
cli
test
sub
pop
inc
loope
out
inc
push
cwtl
dec
sub
push
popa
adc
shll
cmp
sbb
mov
shrl
lods
inc
lds
roll
jmp
mov
and
iret
xlat
jge
mov
jp
scas
add
aam
orl
adc
cmp
lret
fidivl
sbb
sub
jnp
in
push
incb
std
adc
dec
pop
or
xlat
lods
inc
int3
sahf
test
mov
mov
sub
or
scas
in
in
fidivl
inc
test
arpl
in
push
inc
jmp
adc
or
and
shrb
inc
and
ljmp
mov
mov
cmp
xchg
cmp
lcall
xchg
sti
movsb
add
ja
mov
sbb
mov
fadds
ret
mull
push
call
jmp
adc
sub
daa
movsl
and
out
aaa
mov
jp
jne
mov
inc
push
into
andl
xlat
mov
xor
add
mov
mov
push
leave
icebp
aaa
adcb
pushf
dec
sbb
fisttpll
jne
xchg
cwtl
inc
dec
or
out
jns
pop
vpmulhuw
jb
js
sub
iret
fisttpl
cwtl
inc
lods
xchg
arpl
in
jmp
jns
inc
jecxz
push
mov
repnz
or
xor
jecxz
mov
mov
dec
test
stc
in
pop
idiv
sub
xchg
and
mov
jne
pop
mov
lods
xchg
dec
outsl
ret
scas
shll
sbb
int3
cmc
cmpsb
pop
stc
cwtl
mov
or
mov
adc
jecxz
xor
rcrl
or
mov
push
mov
push
mov
xchg
pop
jne
mov
adc
cmc
xchg
jp
loop
dec
inc
mov
mov
xchg
mov
mov
mov
adc
out
data16
push
dec
push
push
cmp
inc
sbb
cld
int
xchg
jae
push
cltd
xor
xchg
xor
shrb
rolb
out
inc
push
xchg
mov
jae
xor
jne
dec
mov
js
push
std
test
insb
inc
in
inc
imul
dec
cwtl
paddsb
test
iret
or
jp
jmp
jae
pop
add
lahf
int3
mov
mov
push
das
int
jecxz
cmp
add
push
imul
les
adc
cmp
test
out
fidivs
shrb
xorb
jle
rolb
dec
imul
outsl
inc
pop
adc
aad
jnp
pop
fidivrl
mov
xor
xor
push
jo
leave
cmp
jnp
repz
mov
or
icebp
sbb
cmp
test
dec
and
and
inc
lret
repz
xchg
scas
mov
cmp
jle
mov
jl
pop
mov
adc
pop
mov
lret
add
imul
jle
nop
jg
push
cmc
adc
in
bound
lods
aas
fldl2e
cmc
dec
icebp
add
shrd
pop
xchg
cmp
jg
mulb
xor
and
loope
xorl
mov
sub
scas
or
mov
push
cmpsb
lahf
dec
push
repz
cs
jo
and
cmp
imul
inc
xchg
ret
xor
and
dec
fbld
push
or
lahf
js
iret
mov
jno
cwtl
data16
setne
sub
push
outsb
pop
push
out
inc
and
lds
jnp
and
or
dec
shll
jl
aaa
sbb
pop
adc
rolb
lods
aam
xchg
movsl
or
add
cmp
sub
mov
jmp
dec
insl
xlat
mov
fstps
mov
int
mov
lds
inc
gs
bound
lret
sbb
inc
and
add
imul
xchg
enter
loopne
inc
push
arpl
jae
int3
out
inc
popa
lcall
jecxz
stc
jmp
mov
jne
test
popf
xchg
adc
addr16
push
xchg
inc
xchg
adc
fisubrl
dec
fimuls
lods
mov
mov
mov
sub
lods
push
test
dec
mov
mov
xchg
add
test
fs
mov
aad
jae
mov
cmp
pusha
xchg
ret
pop
mov
jecxz
mov
js
stc
push
pop
mov
leave
add
data16
adc
cmp
leave
push
push
xchg
cmp
insb
xchg
ljmp
lock
scas
jne
add
lock
xlat
mov
std
js
jb
sub
stc
jo
jge
sti
adc
jp
fdivr
add
sti
loop
bound
mov
sub
pusha
xor
sbb
mov
sarb
jns
add
test
cli
mov
pop
push
clc
aaa
jle
and
fs
or
pop
daa
cmp
mov
in
xor
jl
push
jle
fsubrs
jbe
fcompl
pop
mov
jno
adc
dec
sub
popa
xor
loop
xchg
stc
adc
rcrb
sbb
rclb
movsl
in
loopne
xchg
mov
mov
xchg
daa
in
in
cmp
leave
nop
and
adc
enter
or
pusha
jecxz
jo
dec
loope
fstps
lahf
out
sub
inc
pop
mov
pop
push
arpl
mov
cmp
in
xor
pop
xor
test
jmp
in
mov
mov
sub
lods
cltd
jmp
xchg
iret
insb
and
call
push
xchg
ret
fldl
ret
mov
dec
mov
mov
lock
sbb
dec
cmp
lret
je
and
add
cmp
push
adc
mov
xchg
add
push
or
ljmp
jo
sbbl
movsl
add
andl
addr16
push
imul
sti
subb
jg
dec
jbe
fdivrl
repz
jnp
aad
jno
push
xor
cld
add
cmpsl
in
arpl
sbb
adc
and
popa
push
pop
clc
inc
inc
in
push
mull
jmp
pop
adc
adc
loopne
mov
sub
mov
jmp
test
or
imul
mov
fwait
cmp
sbbb
push
mov
push
bound
mov
mov
js
lcall
jle
dec
scas
sahf
cmp
rolb
data16
lds
mov
mov
mov
bnd
and
push
cmpsl
mov
add
and
mov
inc
dec
mov
ret
jle
xor
or
cmp
push
or
repnz
cld
fwait
in
xchg
scas
jb
test
mov
push
aas
popa
dec
jb
les
dec
or
mov
xchg
xor
lds
mov
cmp
aaa
jb
pop
imul
pop
dec
xchg
movsl
mov
js
sarl
jae
and
ja
icebp
rcrl
and
mov
leave
and
pop
mov
mov
xchg
in
pop
and
fmuls
fsub
mov
cli
negl
or
jb
or
in
fsubrl
xor
jge
insl
mov
mov
fmull
pcmpgtb
ds
mov
popw
cwtl
cs
and
xchg
repz
das
movsb
outsl
das
inc
ret
pop
sarl
test
mov
int
stc
add
sbb
fcmovu
arpl
dec
inc
in
inc
ljmp
iret
cmc
jmp
in
mov
divl
inc
add
inc
cld
mov
xchg
sbb
lea
xchg
mov
add
lcall
sbb
mov
mov
enter
call
jno
push
lret
fstps
or
pushf
and
dec
jb
subl
fstpl
dec
cmp
xor
pop
push
jne
cmpsb
pusha
test
stos
xchg
rol
adc
popf
lcall
ljmp
jae
xchg
mov
sti
dec
insl
pop
shlb
hlt
dec
adc
mov
stos
enter
jbe
leave
add
adc
cld
add
clc
jmp
ljmp
stos
xor
pushf
mov
inc
sarl
push
sti
test
mov
andnps
inc
fdivs
push
jge
fisttps
mov
pusha
pop
out
cmp
adcb
xor
shll
loopne
mov
and
push
imull
add
insl
mov
xor
movsl
cs
mov
icebp
mov
or
pop
sub
xchg
jl
add
pusha
std
movsl
fnsave
in
dec
push
mov
adc
sub
imul
xorl
fmull
mov
stos
mov
mov
ret
std
std
mov
sbb
mov
les
mov
mov
aad
pop
xchg
jnp
test
jge
or
pop
imul
pop
xor
cltd
popa
int3
dec
push
mov
popa
xor
dec
pop
mov
shll
cmpsl
push
in
jp
les
inc
sarl
into
jmp
shrb
repnz
inc
or
push
sbb
lahf
inc
mov
adc
mov
addr16
jle
scas
push
imul
mov
adc
push
jg
xchg
sbb
cmp
pusha
jae
jl
cmpsl
scas
push
pop
stos
loope
testb
xor
or
cli
insb
mov
out
add
push
pop
sub
dec
int3
ja
xor
bound
push
or
scas
js
mov
pop
aas
push
ds
jl
push
sbb
mov
inc
ret
push
adc
adc
popf
xchg
push
xchg
mov
or
sbb
es
dec
sbb
and
cmpsb
push
mov
pop
test
lret
add
push
int3
mov
clc
and
sbb
push
mov
pop
cmc
fisubl
inc
cs
fidivl
sti
adc
mov
fucomi
lods
mov
sub
adc
dec
daa
pop
test
aad
push
inc
add
aaa
stos
aam
andb
mov
loop
push
xlat
loope
cli
jge
not
mov
push
push
mov
inc
and
stos
idivl
jbe
cli
dec
pop
hlt
lahf
mov
jno
adcl
inc
and
cmpl
into
jmp
mov
cmc
fisubrs
and
lret
sbb
enter
pusha
xor
data16
and
push
popa
fsubrs
cli
sbb
js
sub
dec
dec
iret
mov
mov
sbb
lods
subl
push
mov
pop
lods
or
push
xchg
dec
hlt
push
xor
scas
mov
lods
cs
in
pop
cltd
shl
scas
adcb
enter
loope
push
aas
push
leave
jne
inc
out
push
out
cmpsb
dec
and
pop
add
fucomp
jno
jmp
adc
mov
mov
mov
xor
dec
idivl
mov
fldcw
lea
into
pop
and
cltd
push
sub
and
mov
sbb
aaa
imul
lcall
cli
jbe
sub
mov
pop
push
inc
cmp
cmpsb
in
add
mov
pop
mov
inc
std
cltd
push
pop
ss
push
sub
cli
add
jge
ja
sbb
sub
dec
das
sahf
in
jl
xor
sub
imul
adc
cmpsl
scas
out
mov
dec
and
cli
pop
rorl
iret
lahf
jo
fiaddl
xorl
in
adc
les
xchg
bound
pop
dec
jmp
mov
addl
ret
ret
hlt
movhlps
fisubl
outsl
xlat
movsb
andl
or
mov
insl
int
push
mov
add
sub
mov
cmp
add
in
mov
pushf
push
fsubl
sub
xchg
inc
cmp
jle
out
xchg
or
movsb
adc
shll
push
push
push
insb
lods
and
mov
mov
es
je
mov
fcomps
insl
popa
sti
xor
in
loop
test
enter
lock
in
jmpw
cmpsl
adc
addr16
repz
inc
sub
lret
push
fistpll
sarb
xchg
xor
pop
pop
aad
push
cli
dec
loop
and
mov
jg
sub
enter
fiaddl
mov
out
xchg
in
arpl
sub
mov
leave
push
sub
lock
add
inc
push
inc
push
fdivrs
adc
pop
or
xchg
jb
dec
add
into
mov
iret
std
mov
add
cmp
dec
adc
adc
ret
adc
mov
pop
pop
mov
jbe
sbb
scas
mov
mov
jbe
mov
outsl
jnp
jg
mov
adc
push
iret
xor
jecxz
push
xchg
sbb
stc
ret
xchg
fdivrl
xchg
imul
loopne
aaa
push
sahf
inc
inc
pop
or
dec
les
fcompl
out
xchg
or
push
mov
xchg
mov
adc
pop
nop
sar
and
sbb
and
call
in
xor
test
inc
mov
mov
jecxz
mov
mov
xchg
add
cmp
adc
in
and
cmpsb
jecxz
in
xchg
js
push
xchg
push
cmpb
cmp
push
test
mov
loop
fs
mov
and
xchg
cltd
movsb
push
adc
lahf
out
repnz
stc
imul
push
mov
cmp
add
fs
adc
pop
cmpl
adc
push
subb
data16
ret
inc
dec
sbb
clc
lret
push
insb
inc
xor
mov
pop
xor
das
and
mov
sbb
gs
int3
stos
jmp
or
inc
aam
andb
lods
push
sub
addr16
popf
cwtl
mov
xchg
sbb
cwtl
jo
and
inc
mov
ret
insb
lret
mov
cmovae
movsl
loopne
adc
adc
mov
push
lcall
mov
in
or
xchg
xorb
mov
dec
outsb
inc
mov
icebp
sub
pop
mov
jp
xor
stc
mov
push
cltd
std
push
jge
mov
jmp
iret
cmp
jb
cmpb
clc
ss
cmc
mov
in
inc
xchg
in
cs
pop
xchg
sbb
push
addr16
sahf
cmp
adc
xor
cltd
add
push
mov
jno
mov
int3
adc
shrb
mov
sti
mov
popa
fists
into
adc
push
inc
in
pop
test
in
or
xor
inc
repz
clc
cltd
cwtl
jo
sub
mov
mov
cli
mov
push
mov
jne
out
sbb
negl
dec
pop
xchg
andb
jae
push
js
popa
or
jl
adc
jb
bound
cmp
fimuls
xor
adc
in
push
or
lahf
dec
mov
fs
xchg
adc
fcmovnbe
xor
fcoml
mov
or
js
mov
scas
je
std
or
push
shlb
loope
cmp
or
test
adc
les
clc
call
and
imul
xchg
jae
xchg
cmpsl
add
je
push
test
bound
push
sub
loope
push
cmc
fmul
jmp
pop
sti
orl
inc
nop
cmp
and
push
test
outsl
or
aam
es
sub
popa
mov
jno
cmc
mov
push
push
ficompl
std
mov
gs
in
lret
pop
add
add
inc
mov
adc
lods
daa
imul
fwait
push
sub
jne
mov
cmpsb
scas
lock
jns
leave
addr16
sarb
mov
rcll
jae
xor
pop
xlat
decb
iret
fisubl
rcrl
dec
inc
sti
lock
int
es
mov
jl
aad
orl
jg
ret
hlt
jle
sub
lock
movsl
loopne
ljmp
lcall
and
dec
mov
jg
test
and
adc
push
ficompl
outsl
inc
mov
sti
pop
dec
stos
dec
sbb
inc
and
push
ret
pusha
pop
insb
cld
push
loopne
aad
xchg
mov
nop
jo
cmp
add
or
sub
jmp
inc
aad
fbstp
pop
std
sbb
inc
sbb
int
pop
repnz
adc
stc
pop
ror
sbb
loopne
sub
clc
adc
ljmp
push
and
xchg
mov
es
addr16
push
push
mov
sbb
das
not
jle
sub
pop
xchg
sbb
fidivs
scas
fadds
pop
mov
lahf
bswap
repz
dec
jecxz
mov
pop
mov
pop
rclb
add
adc
mov
and
movsb
add
jge
or
add
pop
stc
add
aas
dec
aad
test
sub
or
cli
out
je
cld
pop
jecxz
pop
sub
lret
aas
dec
idivb
mul
notb
add
frstor
out
adc
sbb
es
loop
movsl
xor
mov
mov
mov
mov
rorl
and
fsubrp
sbb
sub
imul
cltd
shll
add
sbb
pop
aaa
inc
rorb
scas
jg
pusha
ja
repz
sub
pop
or
pop
add
mov
iret
mov
lods
or
aaa
pusha
mov
popf
mov
scas
insb
or
stos
shll
jb
or
dec
gs
fwait
cmc
mov
cli
fcmovb
scas
jb
cmc
sbbl
test
roll
std
mov
xchg
test
mov
mov
push
lods
cmpsb
push
mov
fdivl
repz
dec
pop
and
std
repnz
mov
mov
xchg
insl
adc
cmp
mov
push
dec
xor
cmp
xchg
cmpsb
insb
mov
fcmovne
jecxz
in
jb
aam
mov
leave
mov
ficompl
jb
enter
or
or
jo
outsl
or
mov
bound
shl
mov
pop
lahf
sub
stc
cmpsl
mov
loopne
cmc
and
mov
and
jnp
test
pop
sbb
or
arpl
mov
sbb
pop
dec
add
jp
dec
xchg
add
aas
ret
cmp
add
ss
notb
call
imul
push
in
mov
shll
lea
push
lods
data16
int3
or
or
xchg
fs
sbbb
test
adc
in
cmp
mov
xchg
stos
cmp
jae
xchg
ret
mov
nop
das
dec
out
pop
pop
cmp
and
xchg
sub
jnp
jne
cmp
cmp
popf
jnp
inc
or
rcrb
xchg
push
ret
fwait
popa
cs
ja
fidivs
ficompl
xor
call
test
insb
std
mov
test
out
or
add
sub
loop
mov
pop
dec
pop
pop
lods
fsub
and
and
aas
cli
aam
or
ret
cmp
mov
adc
cwtl
cmp
and
pop
dec
int
xor
lods
in
mov
jbe
push
push
adc
aam
enter
mov
jnp
cmp
mov
sub
mov
pop
fsts
xchg
cltd
xchg
pop
dec
ss
and
cmp
pop
pop
adc
sub
arpl
fs
push
aad
hlt
cmp
mov
mov
mov
lcall
daa
xlat
sbb
lods
testb
sti
into
loope
pop
mov
cwtl
lcall
lret
mov
int3
fmuls
xchg
mov
add
mov
scas
je
mov
mov
ljmp
cmp
dec
std
jle
dec
mulb
mov
fmull
dec
or
daa
out
xchg
cmp
jno
aam
lods
lahf
xchg
mov
movb
xor
jmp
add
outsb
and
and
popa
pushf
int
push
cmp
in
call
lret
mov
inc
mov
push
shlb
leave
movsb
jno
mov
cmpsl
in
adc
push
cwtl
mov
adc
fsubrs
inc
rcl
cmp
sub
dec
icebp
dec
loope
loop
push
mov
adcl
faddl
rcr
sub
test
outsl
popf
jnp
cmpsb
ret
sbb
nop
test
pop
pop
inc
shrb
inc
mov
mov
dec
and
push
pop
xchg
andb
pop
xchg
pusha
push
stos
add
fs
ror
mov
mov
xor
jns
stc
pop
repz
push
xor
ljmp
sbb
push
inc
fbstp
call
jg
add
movsb
inc
in
lds
ljmp
xchg
jmp
jp
xlat
hlt
mov
xlat
push
mov
call
icebp
mov
mov
into
push
add
repz
fsubl
xor
ret
ds
and
sbb
lods
mov
pop
xchg
in
sub
aaa
cs
mov
adc
arpl
lret
xchg
pop
dec
jnp
fsubr
sbb
movsl
ds
outsl
fldenv
mov
test
push
xchg
mull
xchg
loope
add
push
push
cltd
in
mov
push
jmp
and
mov
jmp
xor
sbb
sub
popa
pop
cmpsl
xor
mov
or
push
pop
xchg
pop
fimull
jge
lods
sbb
inc
dec
push
mov
sti
shrl
add
psubb
and
sahf
lea
dec
fld
bound
lcall
pusha
scas
adc
test
in
lret
mov
pop
pop
dec
decb
jno
push
imul
cld
jnp
hlt
sbb
add
loop
aad
scas
andl
pushf
mov
scas
sbb
mov
mov
sbb
test
jae
bound
es
sub
rcl
or
or
push
clc
jle
jmp
pop
js
sbb
repnz
test
gs
cld
xchg
dec
dec
xchg
adc
pusha
mov
jbe
dec
out
mov
std
xchg
cltd
jp
rcl
push
jns
imul
cmp
push
daa
or
jmp
add
jmp
mov
fs
lock
inc
push
popf
fsubp
dec
inc
jno
mov
popa
int3
add
out
adc
rclb
adc
fcomps
aaa
lret
xlat
inc
rcrb
mov
jle
arpl
mov
loopne
lods
out
test
or
punpcklwd
lods
xorl
enter
dec
dec
mov
sahf
xor
jnp
stos
and
or
test
pop
pop
mov
jo
adc
cwtl
rolw
or
jg
in
mov
push
mov
cmp
ret
call
insb
call
pop
call
je
loop
int3
dec
xor
pop
jne
fbstp
mov
shll
imul
icebp
mov
gs
sub
cmp
pushf
std
jae
jmp
ret
xorl
sbb
add
test
xorl
repnz
inc
ss
mov
xor
push
adc
mov
add
enter
sub
ret
add
mov
and
push
adc
jae
xchg
mov
mov
xor
mov
pushl
mov
adc
shl
sbb
ds
xor
and
add
inc
mov
adc
sti
dec
andb
mov
push
push
lahf
aam
lret
push
movb
cwtl
aas
mov
add
mov
lret
jbe
lds
pop
mov
jbe
sub
clc
and
out
and
arpl
xchg
popa
adc
jge
adc
sbb
test
jne
fwait
shlb
xchg
test
jmp
std
push
dec
xchg
push
imul
xchg
mov
fstpt
test
std
cmpsb
dec
sub
xchg
orl
frstor
xchg
popa
sahf
xorb
xor
insl
mov
imul
movsb
dec
ret
cmc
pushf
and
fwait
inc
pop
ficoml
sbb
jnp
mov
dec
inc
clc
cmpsb
ljmp
and
cmp
mov
inc
inc
add
fwait
lods
mov
cmp
add
xor
jecxz
imul
scas
ljmp
loop
sub
popa
movsb
sbb
push
fdivrs
ret
mov
arpl
inc
push
addl
jb
pop
pop
sub
je
push
adc
jne
inc
pop
add
fildl
xchg
stc
sub
stos
imul
mov
fidivl
sbb
sub
push
cld
movsb
test
mov
mov
iret
fidivrs
add
xorb
cmp
mov
mov
vcvtdq2ps
nop
mov
xchg
or
push
ret
dec
popf
pop
xlat
xchg
in
xchg
loope
xor
lret
out
mov
pop
push
jno
mov
dec
dec
fildll
es
lret
pop
mov
sbb
dec
push
in
mov
sub
jbe
loopne
repz
and
push
outsl
dec
jl
pop
mov
and
mov
lea
mov
mulb
pop
and
mov
pop
test
xor
xchg
pusha
inc
or
push
mov
mov
cmpsb
push
mov
push
or
rcrb
imul
pop
bswap
inc
aaa
adcb
mov
fs
adc
mov
jge
or
adc
add
cmp
cmc
orb
ret
or
js
cmpsl
pop
sbb
sub
jns
lock
call
dec
jno
lds
dec
and
mov
push
fcoml
mov
xor
aad
cmpsb
add
inc
sarl
inc
out
pop
adc
mov
mov
gs
and
push
inc
mov
cmp
ror
pop
cmp
mov
test
mov
dec
aad
cltd
mov
pop
sbb
sbb
mov
dec
insl
insl
fildl
dec
cmc
out
push
cli
cmpsb
nop
loop
je
and
jb
loopne
fninit
int3
das
sahf
push
pop
js
in
fsubrl
pop
pushf
cmp
sbb
pusha
cltd
mov
mov
cmpsl
jb
adc
fisubs
mov
lock
jmp
and
lods
or
mov
cmp
adc
mov
jne
add
outsl
and
in
in
test
sahf
insb
aad
loop
test
imul
inc
pop
enter
sbb
inc
pop
gs
addb
lds
add
outsb
xchg
loope
sub
movsl
sbb
repz
pop
es
dec
push
lret
adc
dec
adc
shl
jecxz
mov
push
mov
rorb
inc
mov
push
into
sbb
lea
in
sub
cmp
insb
mov
or
shll
je
ret
sub
addl
test
push
jg
aas
xlat
or
add
xor
xlat
inc
push
js
mov
xor
movsb
jmp
fs
mov
dec
jae
or
mov
cmp
mov
push
test
sub
sahf
shlb
jae
mov
add
js
and
daa
pop
cmp
xchg
jg
bound
xchg
xchg
push
jb
sbbb
jg
rorb
jae
lahf
stos
cmp
ret
imul
mov
inc
xor
push
loopne
ret
mov
mov
and
hlt
push
xchg
jp
dec
fisubl
testb
out
fsubs
inc
add
jbe
lods
push
jp
stos
dec
pop
insl
mov
add
daa
jecxz
push
push
aaa
xor
dec
dec
add
mov
mov
mov
ficoms
and
sbb
mov
xchg
lret
lret
mov
out
cmpsb
push
xchg
cmp
lods
mov
scas
mov
mov
stos
out
fildl
repnz
mov
ret
pop
xor
pushf
fldt
jg
divb
dec
adc
sbb
push
inc
push
fwait
push
rcrl
loop
jb
cmp
fists
sub
repnz
adc
movsb
popa
insb
push
inc
mov
cmpsl
clc
das
in
arpl
mov
jno
cmp
jnp
cli
xchg
jmp
arpl
ret
pop
or
in
and
lods
jo
fwait
test
jp
lock
in
out
aas
inc
mov
sbb
movsb
jg
test
mov
arpl
iret
mov
sbb
xor
frstor
adc
xor
add
jne
xlat
or
dec
je
xor
mov
incb
cmp
ds
int3
mov
adc
push
in
in
faddl
xor
lea
scas
addl
add
add
xor
scas
aas
leave
ja
jnp
xchg
inc
xor
jbe
mov
rorb
sub
dec
stos
flds
adc
daa
scas
mov
loop
xor
dec
aaa
push
dec
jbe
dec
xchg
adc
lock
ret
inc
sbb
loope
xchg
pop
pop
xchg
dec
ss
roll
pop
rcll
popf
inc
sub
es
xchg
lea
adc
clc
repnz
adc
rolb
pop
mov
push
mov
cmpsl
fmul
lock
loop
in
push
and
jg
cs
add
mov
mov
sbb
cmp
jp
ja
loop
fs
jb
mov
jp
cwtl
mov
movsb
mov
dec
adc
dec
pop
xor
in
inc
or
jo
or
mov
in
popf
mov
hlt
xchg
fidivrl
sahf
std
sarb
loop
lods
xor
push
pop
xor
add
push
outsl
gs
cmp
in
es
xchg
mov
sbb
pop
cmp
sbb
jmp
iret
push
rcr
fistpll
dec
xor
jg
fisttpll
lret
rcll
xchg
mov
cmp
dec
repnz
mov
sub
adc
adc
fsubl
mov
mov
pop
dec
cmp
icebp
bound
inc
adc
mov
test
je
in
or
ljmp
or
iret
push
pop
fimull
movsb
mov
lret
jne
mov
popa
and
mov
mov
jge
sbb
adc
rorb
es
mov
and
or
nop
add
inc
inc
adc
leave
incl
lahf
stos
ret
xor
stos
hlt
icebp
popf
xchg
jb
insl
sub
sbb
push
adc
push
xchg
add
imul
cmp
xorl
bound
stos
ret
test
ret
cmpsb
sbb
mov
lea
xchg
jne
xor
dec
cmc
repz
pushf
push
lds
or
aam
movsl
mov
sti
jae
in
aad
jp
sbb
out
jmp
inc
dec
dec
clc
hlt
je
and
lods
adc
add
ds
incb
jo
std
lea
cmp
mov
pop
add
out
mov
and
xor
std
mov
xor
and
mov
mov
xor
sub
push
mov
xor
push
std
lods
pop
push
hlt
cmp
adc
jo
negb
jecxz
ror
pop
mov
rcl
fnstenv
fistpl
rorb
daa
push
sbb
or
or
xor
xchg
sbb
sub
adc
lods
sahf
std
in
xchg
aad
xchg
rcrl
inc
aad
push
lret
push
ja
mov
ss
int
dec
dec
cmc
xor
or
mov
test
jo
das
fimull
jmp
jbe
rorb
sti
mov
fxam
pop
jns
mov
ror
hlt
iret
xchg
mov
jne
push
icebp
jge
sub
in
or
jnp
xchg
data16
add
rorb
push
and
mov
xchg
jge
test
push
cmp
inc
or
xchg
push
rorl
lahf
inc
xor
ret
nop
mov
pop
repz
aam
fpatan
push
and
mov
rcll
or
ss
pop
xchg
xor
xor
loope
cmc
call
push
inc
repnz
cld
add
mov
mov
out
leave
and
sbb
jecxz
enter
lea
xor
push
cs
enter
xchg
sbb
int3
xor
push
mov
movsl
pop
cmc
dec
lea
in
adc
push
outsl
jne
not
jg
xchg
mov
push
push
xchg
rorb
cmc
xchg
or
cmp
mov
dec
and
cltd
inc
xchg
sahf
loop
inc
lret
mov
and
or
pop
xor
mov
pushf
sub
testb
and
mov
cmpsl
or
sub
xor
enter
adc
lods
push
ret
lret
scas
lods
repnz
icebp
lods
shr
in
std
test
pop
mov
repnz
in
or
call
rclb
push
inc
sbbb
loop
adc
fistpl
or
mov
in
and
bound
bound
add
popf
push
adc
testb
aaa
dec
sbb
jne
loopne
sbb
or
loop
and
jb
xor
lock
xor
lods
icebp
mov
imul
daa
push
or
xchg
inc
cld
pop
dec
in
imul
cs
jne
mov
inc
adc
aas
popf
fadds
lea
cmp
adc
out
in
adc
ljmp
lock
xor
push
sarl
fwait
mov
pop
loopne
mov
incb
cmpsb
sub
stc
insb
into
hlt
pop
lahf
xchg
push
ficoms
repz
sahf
inc
popa
ret
push
ds
xchg
pop
shll
out
mov
inc
sbb
push
shrl
push
jns
mov
shlb
pop
adc
jo,pn
push
inc
loope
addl
mov
jo
dec
nop
and
cli
dec
xlat
fstpt
cli
mov
mov
test
out
fidivrs
xor
out
inc
cmpsb
mov
loope
and
dec
pop
popf
sbb
add
mov
out
or
insl
divb
mov
stos
aaa
jae
cmpsb
or
and
xchg
dec
mov
icebp
out
inc
mov
mov
imul
insl
imul
sbb
jne
mov
adc
push
imul
jns
xor
or
and
or
cmp
and
mov
cmp
test
bound
mov
iret
push
push
sbb
push
pop
sbb
mov
cmp
addr16
push
cmp
fyl2xp1
inc
fimuls
jno
imul
pop
pop
xor
cmp
test
das
inc
xor
gs
fisubs
push
ret
movsb
pop
or
ljmp
call
sbb
rcll
shrl
mov
mov
pop
lods
and
movsl
mov
mov
lds
iret
adc
inc
out
mov
or
mov
mov
dec
mov
xor
jl
lds
bound
jmp
or
ss
pop
inc
push
jmp
insl
mov
test
mov
sarl
jge
inc
pop
arpl
add
or
pop
jecxz
fs
movsb
pop
cmp
xchg
fisttps
jmp
dec
mov
push
mov
xchg
stc
sbb
call
ret
aaa
sbb
sahf
cmpsl
sbbb
cmpsb
adc
push
mov
mov
cli
out
adc
lea
into
je
jmp
divl
rolb
mov
in
fcomps
jae
lcall
daa
lock
sbb
nop
pop
out
mov
out
sub
movsl
push
cli
mov
push
imul
adc
movd
mov
mov
insl
pop
push
push
fwait
pop
mov
lods
sbb
shlb
add
sub
cltd
stc
movsl
in
add
lcall
sbb
out
or
inc
ljmp
jnp
cmp
sbb
xchg
ja
mov
or
pusha
mov
xor
repz
xor
add
fmull
mov
leave
ficompl
push
cs
je
push
fsubrl
mov
fwait
insl
mov
jne
sbb
cmpsb
lret
push
mov
sbb
dec
imul
add
insl
sub
loope
mov
sub
mov
push
sbb
jbe
in
mov
push
lods
inc
test
jge
pop
jl
or
pusha
inc
mov
push
cmc
xchg
push
push
lea
lret
and
mov
jnp
loope
jo
inc
xchg
arpl
insl
xor
idivb
jp
push
hlt
jnp
add
incl
test
lds
lea
fidivrl
cld
xor
add
adc
mov
or
shlb
sti
in
push
jno
mov
or
sub
mov
movsb
cmpsl
pop
loope
mov
mov
sbb
test
dec
fildll
fwait
popa
sti
roll
jmp
stos
jmp
lret
in
add
jl
aad
nop
pop
mov
mov
adc
add
shrl
inc
xor
cs
push
andb
xchg
push
out
daa
cmpsb
and
sbb
jge
js
loopne
or
sbb
inc
ds
scas
mov
jle
lahf
insb
repz
xorb
jne
xor
jecxz
inc
xchg
ljmp
xchg
inc
lcall
sbb
fnclex
xchg
xchg
push
sub
cmpsb
or
or
subb
test
ds
addr16
jl
das
mov
outsb
add
aaa
testb
pop
lock
mov
sbb
xor
xor
adc
or
or
pushw
adc
stos
jp
cmp
mov
xchg
inc
and
arpl
mov
pop
inc
popf
insb
or
insl
pop
pop
or
out
and
push
sahf
jo
cld
push
fmulp
jbe
js
js
xchg
add
xor
test
cmp
cwtl
popf
rolb
ja
mov
and
fcomp
xor
dec
xchg
data16
addr16
sbb
inc
add
dec
add
ret
push
dec
pop
aaa
call
icebp
xchg
arpl
pop
dec
sbbb
test
daa
fistpl
sub
ja
sbb
dec
sub
repz
push
stos
ss
fwait
jle,pt
add
adc
enter
mov
nop
dec
test
repz
les
push
push
or
lods
and
les
pop
fwait
jl
ss
les
mov
nop
push
push
pop
sbb
xchg
xor
sub
xor
mov
adc
jecxz
cmp
mov
insb
inc
sub
jo
fistpl
pop
jmp
add
lret
in
js
roll
sub
cmp
jmp
cmpsw
imul
pusha
mov
mov
scas
ret
xchg
in
xchg
fisttpl
in
cmpsl
adc
dec
icebp
dec
adc
mov
inc
sbb
int3
enter
aaa
inc
rcrb
insb
rorl
cmp
sub
push
idivl
incb
es
lds
xchg
push
fstpt
add
mov
pop
leave
cmp
xchg
pop
mov
push
pop
push
push
and
fdivr
in
cmp
aaa
es
fadds
lea
rcrb
and
ret
aam
test
inc
and
xchg
jmp
in
pop
leave
inc
stos
mov
add
in
pop
cmp
sbb
mov
rcr
data16
cltd
push
adc
repnz
jmp
out
mov
gs
aaa
push
dec
arpl
mov
xchg
xchg
inc
data16
add
mov
xchg
mov
cmp
mov
mov
push
bound
pop
lret
es
pushf
lahf
add
stos
cmp
or
xor
push
lods
mov
cltd
push
fwait
testb
orl
ss
mov
roll
cmp
out
das
mov
imul
rclb
movsl
or
adc
jg
cmp
mov
pop
push
scas
dec
jg
pop
inc
lcall
sub
adc
or
add
pop
rorb
jp
pusha
clc
or
add
jl
mov
mov
jmp
scas
mov
and
dec
js
imul
lods
movsb
ljmp
movsb
enter
pop
adc
xor
lret
xchg
cmpsb
push
jno
or
out
enter
xchg
adc
mov
fisubrl
imul
and
scas
lods
xchg
negl
f2xm1
orl
fmull
add
inc
hlt
xor
xchg
or
xchg
lods
pop
aaa
lret
out
mov
jno
cwtl
adc
js
icebp
lcall
push
jl
jl
aas
popa
mov
test
xchg
cmp
out
sub
fnstenv
jo
push
pop
or
dec
inc
push
adc
mov
lock
int
mov
or
shrl
test
outsl
jecxz
dec
movsl
into
repnz
sbb
movsl
cmp
push
add
ficoml
dec
dec
outsb
je
popa
dec
xor
inc
test
pop
push
mov
adc
jmp
lahf
ss
bound
inc
push
out
jne
pop
sbb
jb
mov
sub
mov
jb
inc
pop
dec
cld
dec
push
movsb
add
roll
lea
pop
or
in
xchg
and
jg
push
ja
xchg
xor
ret
push
and
icebp
ja
dec
push
mov
dec
test
gs
mov
push
and
subl
int3
xchg
dec
mov
shll
pop
add
leave
push
icebp
std
shlb
lret
stos
pop
mov
sub
mov
outsl
add
popa
add
adcb
xchg
add
xchg
aaa
addb
xor
int3
jg
in
lret
jmp
xor
in
cmp
jle
inc
dec
sub
jno
push
xor
xchg
shll
jge
mov
adcb
pop
xchg
sub
icebp
jg
push
sbb
ret
adc
or
hlt
jp
loop
ret
inc
flds
dec
repz
inc
mov
sbb
icebp
pushf
mov
aaa
push
mov
push
sti
in
cmpsl
and
stc
rclb
pop
push
sub
sub
xor
popa
out
sarl
ret
aad
movsl
insl
shlb
push
aam
sub
cwtl
push
nop
loopne
cwtl
mov
inc
repz
mov
pop
dec
push
arpl
fisttps
push
outsb
sbb
inc
mov
movsb
mov
pop
sub
xor
jecxz
inc
xor
add
lret
or
sbb
les
sbb
fstp
lret
aad
fidivrl
jbe
cmp
test
es
cld
or
scas
mov
xor
and
stos
js
das
and
xchg
pop
jecxz
test
ret
jl
ss
dec
sub
iret
mov
adc
jecxz
ja
lret
push
xchg
stos
mov
add
cmp
mov
adc
push
jmp
test
and
push
lret
fdivrp
dec
test
fmull
cs
aaa
mov
jo
adc
jns
or
clc
outsb
stos
mov
mov
shrb
xchg
repnz
ds
adc
mov
cwtl
mov
lret
ljmp
lahf
pop
leave
mov
dec
fucomi
lret
fldt
xchg
xchg
cltd
xor
lahf
sub
inc
cmp
loope
iret
jl
fimull
pop
and
push
push
xchg
fwait
ja
push
fwait
pusha
idivb
push
mov
add
jae
mov
cmp
arpl
iret
mov
mov
test
adc
adc
daa
ficoml
aad
push
leave
insb
and
mov
jbe
outsb
xlat
sub
cmp
out
in
shr
movsb
setbe
pop
das
aas
pop
popa
mov
in
ja
push
xchg
sbb
jp
or
sub
ret
push
mov
fcomp
mov
nopl
jmp
negl
fdivl
jp
xor
pop
repnz
xor
test
movsb
add
cmc
xor
loop
jns
mov
arpl
push
adc
push
mov
add
cs
cmp
out
daa
arpl
inc
xchg
les
ret
or
andl
jae
mov
inc
adc
ljmp
cltd
and
leave
call
push
lret
push
lahf
lret
add
cmp
test
dec
daa
adc
mov
add
jle
mov
bnd
xchg
mov
test
nop
in
ficomps
jb
inc
xchg
testb
rolb
faddl
imull
inc
cmpsb
arpl
mov
ja
mov
cmp
nop
in
lods
adc
jl
popa
daa
xchg
cltd
mov
jae
fdivp
dec
out
andw
out
sbb
cltd
ljmp
insb
dec
je
out
xor
aas
loopne
popl
cwtl
adc
pushf
das
xlat
add
loope
and
test
xor
icebp
jnp
adc
pusha
int
fdivrl
mov
leave
jb
mov
mov
sbb
insl
pushf
add
cli
inc
cmp
pushf
mov
mov
cmp
push
pop
mov
cs
testb
inc
cmpsb
int
std
das
or
xchg
rcrb
push
mov
mov
xor
jg
inc
mov
mov
mov
mov
out
or
leave
or
test
sub
pop
mov
mov
cwtl
lods
and
cld
js
loopne
mov
mov
movsl
rorl
push
mov
test
idiv
xor
loope
vpackssdw
pushf
mov
jns
aas
out
jnp
jbe
jecxz
jne
call
mov
sti
test
and
pop
daa
pop
subl
imul
cli
les
mov
xchg
cmp
popf
icebp
sub
pop
jecxz
pusha
cltd
clc
aam
jne
xchg
pop
mov
xor
ficomps
adc
das
hlt
pop
cmp
and
sti
pop
sbb
push
inc
aaa
jmp
addr16
push
loopne
stos
or
popa
cli
je
dec
bound
and
mov
add
ss
fstl
test
sub
js
xor
mov
insb
mov
sbb
push
leave
popa
pop
andb
mov
lds
pop
les
arpl
lret
mov
mov
popa
ss
movb
cmp
aad
fst
cmp
imul
gs
pop
pop
pop
and
jno
outsl
sub
jmp
insb
adc
lahf
adcb
pop
repnz
in
orb
pop
mov
out
pusha
decb
mov
jecxz
ja
inc
sti
dec
ret
sub
sti
or
aaa
test
push
xchg
das
movsl
rolb
mov
xchg
adc
rcr
lahf
xchg
jp
popf
and
mov
xor
rcl
cmc
out
arpl
lock
cmp
and
mov
or
sti
jnp
mov
outsb
das
add
sub
roll
mov
cmp
fidivrs
and
pop
lods
cld
push
sbb
bound
pop
call
jnp
add
mov
xor
dec
test
bound
jae
inc
push
xlat
adc
cmpsl
cli
testl
cltd
xchg
cli
imul
xchg
loop
xchg
pop
and
push
dec
shlb
push
fmul
mov
and
in
inc
push
mov
addr16
cmp
or
scas
mov
in
fisttps
or
insl
xchg
push
insb
cmpsl
sahf
data16
push
pop
aaa
scas
sub
test
push
jo
sbb
pop
mov
pop
es
fstpl
sub
jge
push
sub
insb
dec
push
enter
inc
dec
push
pushf
jge
sbb
jo
aad
shll
incb
xchg
inc
add
aaa
inc
popa
pop
leave
xchg
lods
fwait
add
data16
xorb
cmp
filds
arpl
sahf
jb
ljmp
push
pop
sub
cli
mov
jg
gs
arpl
xor
mov
scas
inc
xchg
std
xchg
popf
xchg
je
pop
mov
sub
and
xchg
push
loop
inc
aaa
xchg
rcll
in
lods
jecxz
adc
rcll
fsts
push
insb
and
std
jnp
push
test
or
jnp
push
das
fmuls
lock
mov
cmpsb
inc
mov
xchg
jp
das
lock
fidivrl
pop
loop
jp
notb
mov
arpl
sub
mov
cmpsl
add
scas
xchg
xchg
fstps
pop
mov
imul
outsb
lret
sbb
mov
adc
adc
push
mov
xlat
inc
outsl
test
aam
adc
dec
inc
sbb
mov
adc
shl
mov
movsl
pop
xchg
push
jb
daa
add
or
or
sub
mov
test
sub
xlat
sarl
jle
sbb
jno
mov
inc
hlt
xor
sub
testb
push
movsb
xchg
sub
sbb
push
push
push
adc
in
mov
xor
stos
mov
sub
scas
mov
sarb
sbb
or
ljmp
and
in
cmc
arpl
aad
addr16
sarl
jecxz
jp
movsb
push
rcrb
inc
pushl
xor
pop
stos
repnz
nop
xchg
inc
ret
mov
xlat
inc
pop
rorb
cmpsb
jbe
add
jg
sub
lods
lock
dec
jbe
lcall
and
xchg
loope
add
xchg
hlt
push
add
hlt
add
cltd
stc
add
mov
sti
or
jae
in
mov
mov
or
mov
adc
call
or
mov
jmp
outsl
ljmp
mov
and
inc
shrl
push
out
nop
in
xorb
cmp
and
cli
inc
sub
jbe
into
xlat
xchg
mov
xchg
outsb
inc
out
cwtl
and
popa
cmc
xchg
repnz
popa
inc
sub
or
pusha
inc
push
jp
jmp
daa
nop
nop
cwtl
imull
movsl
or
jae
jo
fldcw
stc
mov
or
add
add
xor
xlat
negl
test
push
cmpsb
testl
jae
out
outsb
aam
test
enter
les
aad
dec
push
cwtl
sub
mov
sbb
xorb
loop
xchg
fidivl
xor
add
add
fs
in
push
push
mov
cmp
pop
into
jl
sbb
xchg
dec
sub
fs
or
push
push
push
xor
out
inc
out
jb,pt
mov
aas
push
rorl
ds
ds
mov
sub
mov
dec
jg
jns
cmp
clc
out
fdivs
push
push
dec
out
idivb
inc
hlt
cmpsb
cmp
adc
and
aad
jl
pop
push
add
and
std
loope
jg
push
mov
sub
test
pop
sbb
outsl
scas
cmpsl
or
jmp
fnsave
xchg
je
xor
cmpsl
xor
mov
jae
lea
jb
xor
call
in
cmp
cmpsb
dec
test
mov
in
int3
add
add
int
les
icebp
pushf
cmpb
lcall
scas
mull
cmc
test
push
pop
es
rcl
push
dec
jmp
hlt
nop
fcmovnb
add
mov
jmp
in
jmp
pop
lret
call
pop
in
roll
lret
pusha
mov
idiv
jl
lcall
loop
mov
sarl
inc
or
pop
mov
fwait
jae
add
fstps
test
aam
mov
stos
loop
jmp
jge
in
mov
xor
fcomps
sbb
pop
xor
jns
aaa
mov
ds
mov
xchg
jmp
outsl
ret
push
aad
mov
aas
aad
daa
dec
dec
call
xor
in
xor
xlat
scas
ret
push
enter
mov
fmuls
cli
cmp
leave
inc
dec
adc
mov
jne
jp
or
notb
lahf
xor
mov
rol
inc
xor
mov
or
xchg
pop
lret
in
or
and
and
ds
cmc
loope
je
sub
adc
and
xchg
pop
jbe
in
push
pop
inc
mov
das
dec
pop
xchg
mov
loop
xor
cmp
loope
fwait
into
lock
push
mov
mov
dec
ret
insb
xlat
fucomp
or
int3
lods
mov
mov
and
xchg
mov
sub
dec
jns
jp
jne
pop
pop
or
sahf
sbb
ret
out
loopne
negb
scas
in
push
push
xor
jmp
or
fdivrs
push
inc
test
lods
lods
sub
cmc
or
enter
push
jne
fisubl
sbb
xchg
je
out
addr16
std
jno
cmpsl
mov
addr16
mov
mov
loope
fs
sti
xchg
add
push
inc
pop
inc
push
push
cmp
mov
cltd
leave
nop
push
adcl
test
gs
or
out
daa
push
dec
pop
sub
and
and
jmp
push
aam
push
lcall
repnz
mov
adc
cmp
pop
sbb
std
sub
add
popf
es
push
fcmovnbe
sub
fdivr
jl
pop
stos
nop
outsb
imul
outsb
into
sub
lret
adc
xor
pusha
mov
idiv
bound
arpl
sbb
outsb
fidivrs
mov
xchg
push
ljmp
xor
push
lods
gs
out
pop
js
fildl
dec
sub
clc
lahf
rorl
es
inc
lcall
and
mov
push
sub
cmp
cmp
xor
imull
lret
sahf
gs
mov
jecxz
subb
pop
stos
dec
scas
xchg
adc
popf
out
mov
fldenv
repnz
pop
xchg
add
mov
mov
push
out
sub
fimull
pop
sub
cmpsl
jle
daa
mov
push
ljmp
mov
mov
dec
shrl
jmp
jns
xor
inc
jnp
add
fildl
pop
testb
sbb
call
inc
push
sbb
loope
pop
and
ljmp
pusha
shrl
and
ja
dec
popf
loopne
loopne
xor
fs
cld
aam
dec
stos
daa
pop
aaa
pop
inc
mov
mov
inc
pusha
in
mov
pop
add
fadds
sbb
ret
test
aam
cmp
jne,pn
or
imul
jmp
mov
xchg
dec
adc
ret
mov
daa
pop
or
jg
js
cmc
mov
nop
or
pop
cld
pop
shr
mov
leavew
popa
xor
loope
test
push
imul
jmp
jle
pop
scas
cli
cmp
xchg
lret
lds
cmp
cmp
jbe
repnz
inc
dec
mov
lcall
data16
and
or
cmp
icebp
mov
lret
ret
lds
jb
mov
xor
xchg
and
ret
imull
mov
jae
jnp
test
rol
mov
ss
aas
xchg
stos
or
xchg
bound
push
add
dec
xchg
int3
cmp
inc
pushf
test
insb
dec
sub
sbb
insb
loopne
into
sti
cmpl
fsubrs
stos
mov
cmp
into
movsl
jge
loopne
xchg
cwtl
add
mov
outsl
mov
or
inc
push
sbb
cs
pop
adc
stos
sub
add
aaa
or
xor
add
sub
cmpsb
add
sbb
push
pusha
or
loope
lods
sbb
pushf
daa
sub
push
inc
mov
cmp
mov
dec
pop
aad
mov
fists
insl
push
jp
insb
xchg
and
call
stos
ljmp
cmp
stos
sub
adc
push
aaa
jecxz
ljmp
add
sub
cwtl
cmp
mov
jae
addb
mov
push
je
inc
ss
push
lret
andl
fadds
loopne
mov
cld
mov
rcr
icebp
mov
fwait
mov
call
int3
fcomip
insb
fcompl
inc
flds
into
mov
imul
xchg
ja
inc
push
in
lods
stc
mov
add
jle
das
jbe
iret
mov
nop
stc
cmp
call
xchg
add
aas
imulb
movsb
jbe
mov
sub
gs
push
cmp
leave
ja
movsl
jp
outsb
dec
std
mov
mov
insb
inc
call
call
fldenv
lea
add
bound
lret
mov
les
mov
scas
popf
sbb
pushf
and
mov
jns
cmp
jg
pop
or
pusha
pushf
mov
dec
lods
imul
push
and
add
maxps
adc
add
push
xor
loop
adc
cmp
sarl
and
sbb
and
jecxz
mov
xor
hlt
jb
arpl
cmp
test
jg
inc
xor
sti
scas
inc
xchg
cmp
outsb
adc
and
imul
es
shlb
push
jb
mov
and
push
mov
mov
pop
pop
push
outsb
repnz
loopne
mov
imul
fists
fstl
push
loope
dec
adc
jmp
inc
pop
inc
enter
cmp
mov
adc
jge
push
jle
sbb
ds
decb
mov
push
cmp
pop
cmp
push
dec
push
arpl
fdivl
jg
stc
mov
add
mov
shll
mov
jnp
pop
addl
dec
ljmp
pop
loop
sahf
int
movsl
or
nop
mov
xor
sbb
sti
scas
sub
dec
xchg
or
mov
adc
inc
push
repz
cmp
sarl
jns
xor
sbb
iret
inc
adc
test
mov
scas
xor
ss
int3
and
shll
mov
cmp
pop
jns
fmull
call
in
push
fdivl
aas
or
xchg
jmp
xchg
adc
push
stos
test
ret
testl
out
insl
xlat
cmpsb
push
scas
js
in
cmp
mov
aam
jl
cmpb
inc
mov
sub
pop
jne
das
mov
addr16
insl
cmp
jmp
dec
mov
push
mov
xchg
pushf
push
aaa
lock
mov
inc
pushf
sbb
or
cs
fldenv
pop
in
nop
test
add
mov
lcall
jmp
lcall
or
sub
ret
roll
mov
ret
pushf
adcl
mov
mov
arpl
push
ret
mov
lea
fiaddl
and
repnz
cwtl
fildl
sarl
sbb
stos
mov
stos
aaa
inc
push
or
data16
arpl
je
adc
cmp
mov
push
push
test
xor
mov
add
cmp
pop
or
insb
aad
sub
inc
xor
jmp
cli
mov
insb
jns
and
sbb
jno
mov
mov
loope
stc
int3
out
xlat
push
imul
push
ret
cmpsl
add
lods
into
and
sti
ja
in
ror
cmpsl
inc
cmp
in
pop
sub
call
push
rolb
nop
add
rcll
imul
xor
sub
dec
mov
sbb
mov
add
jno
sti
or
inc
popa
xchg
pop
mov
outsb
in
push
movl
xadd
ss
jp
mov
and
stos
repnz
popa
shll
adc
sub
jmp
bound
xchg
lods
push
pop
into
push
and
push
loope
jns
xchg
scas
mov
adcl
popl
or
xchg
xor
adc
dec
cld
int
jo
sti
push
and
jmp
mov
fistl
add
leave
data16
jnp
pop
rcll
mov
out
rorb
in
or
adc
inc
ds
lock
clc
nop
loop
mov
std
dec
inc
ja
mov
lret
scas
mov
lret
movsl
test
dec
pop
cmp
and
mov
fcomi
xchg
call
lods
shll
adc
fmull
call
icebp
mov
mov
pop
adc
fs
mov
add
xchg
in
adc
push
movsl
cmp
lods
outsl
pusha
sbb
out
cwtl
lret
jnp
inc
sub
andb
cld
mov
lea
mov
inc
lret
mov
out
jbe
sub
sub
loope
mov
ret
and
pop
enter
cmc
clc
mov
jmp
mov
jae
out
mov
dec
movsb
xchg
sub
repnz
mov
push
xchg
arpl
arpl
in
iret
xor
lods
loopne
rcr
icebp
xchg
jno
xchg
pop
xor
push
and
mov
mov
les
mov
push
xor
cwtl
inc
mov
pushf
xor
lret
fdivl
add
or
mov
test
xchg
xchg
fstpt
andb
push
subl
push
out
jmp
xor
xchg
sub
xlat
addr16
mov
mov
shrb
mov
mov
cmp
data16
fisttpl
cmp
cmpsl
pop
or
and
daa
pop
pop
out
int
mov
outsl
sub
lods
mov
mov
fs
jae
push
mov
sbb
data16
gs
icebp
jb
pop
shrl
cmp
icebp
out
data16
rcr
jb
addr16
fistl
or
xchg
pop
popl
daa
sbb
dec
or
lods
lds
fwait
mov
aaa
jg
dec
or
fiadds
mov
imul
out
xor
xchg
sbb
push
sti
jg
push
pop
repnz
mov
adc
pop
add
icebp
push
dec
jmp
mov
pop
shlb
lret
inc
mov
jecxz
out
in
das
ss
jecxz
rcrl
jnp
mov
mov
adc
rorb
adc
icebp
inc
mov
imul
push
dec
js
hlt
js
jmp
or
or
in
pop
jg
out
jp
mov
sti
sarl
in
ficoms
and
fs
fcmovu
enter
shll
cmp
xchg
imul
sbb
popl
pop
stc
mov
lods
insl
fistpl
jmp
loope
rcrb
sub
mov
fdivp
pop
dec
xlat
lock
cmp
loopne
xlat
test
mov
push
cld
out
inc
in
outsl
xorl
aad
jo
test
jo
push
or
mov
lcall
push
mov
push
imul
ret
cmp
dec
cmp
aaa
ds
mov
push
pop
mov
pop
pusha
dec
repz
leave
cs
sub
out
ss
in
mov
cltd
push
xor
or
xor
and
cmc
aaa
scas
add
test
imul
cmp
pop
xor
rcrb
das
int
sub
into
mov
imul
jp
aas
addr16
loop
fildll
mov
ljmp
xchg
popa
mov
xchg
sub
jecxz
adc
sub
mov
mov
and
iret
clc
add
sub
jno
push
xor
mov
mov
cmpsl
hlt
sahf
mov
mov
paddw
mov
stc
dec
xor
arpl
ror
gs
fnstcw
rcll
cmp
aad
in
mov
or
dec
arpl
or
popf
cmc
push
shll
cmp
cwtl
repz
jnp
mov
ficomps
adc
cmpl
cmp
lea
jp
shlb
mov
push
lcall
cmp
cltd
in
js
ja
jbe
mov
push
into
icebp
pusha
cmp
xor
jmp
add
or
dec
pusha
cmp
out
adc
inc
mov
sbb
push
fsubr
sbb
testb
pop
xor
pop
mov
fdivrl
add
mov
xlat
mov
iret
jmp
repz
and
imul
pop
or
cli
test
lret
out
into
fstpt
sub
xchg
aaa
sub
rclb
in
adc
stos
subb
cmp
lods
mov
pop
pop
sub
xchg
pusha
add
sahf
add
pop
or
rclb
dec
mov
clc
mov
inc
jl
aas
jecxz
ret
cmc
xor
xchg
rcrl
add
and
outsb
stc
xchg
and
out
sbb
aam
pop
and
jmp
fld
push
and
es
iret
les
ret
push
jno
xor
fmull
mov
xor
insb
pop
sub
ja
mov
jb
rcll
sar
add
mov
fsubrl
sbb
scas
in
lea
shl
dec
pop
pop
adc
in
push
jg
inc
es
daa
test
jnp
cmp
into
mov
insl
data16
xor
mov
push
icebp
mov
mov
sar
js
fsubs
xor
xchg
cli
and
scas
pop
repz
adc
inc
and
aaa
push
in
movsl
add
fcoms
insl
jg
stc
pusha
sub
push
in
icebp
sbbl
pop
adc
dec
sub
cwtl
and
clc
push
popa
pop
sbb
dec
movsb
mov
xor
lock
hlt
mull
daa
or
mov
pop
repz
wbinvd
cltd
sbb
pop
dec
mov
enter
pop
and
movsl
dec
sbb
inc
cld
sbb
jecxz
mov
push
repnz
mov
daa
movaps
fs
into
jle
sub
xor
ds
inc
or
cmpsb
pop
pop
xchg
out
ror
lea
jne
sub
push
inc
int3
mov
ja
mov
pop
cld
idiv
sbb
push
adc
xchg
inc
imul
pop
mov
loop
dec
fdivr
lods
xor
xor
movsb
fwait
add
hlt
inc
ret
test
mov
jne
pop
lret
insb
add
movsb
daa
cwtl
decb
add
fadds
stos
pop
insl
mov
pop
in
mov
lret
and
sbb
or
xchg
dec
in
test
jmp
movsb
clc
int3
scas
std
leave
adc
fldenv
mov
jno
test
cmpsl
xchg
out
jmp
popa
cmp
sub
inc
ret
cmp
sub
loop
mov
dec
mov
aas
jg
shll
dec
outsl
ljmp
mov
clc
lret
inc
mov
lods
xor
and
mov
repnz
cmp
adc
sbb
adc
pop
mov
ficomps
and
dec
pop
and
out
add
enter
out
inc
inc
mov
jnp
jle
jne
or
leave
imul
inc
jno
push
xchg
clc
ja
fs
inc
addr16
mov
cltd
data16
or
stc
sbb
or
dec
ds
xchg
push
insl
mov
outsl
pop
jmp
inc
cld
pop
push
inc
mov
or
mov
dec
iret
xorl
mov
pop
cmp
mov
popa
stc
repnz
and
xchg
jnp
pop
push
gs
jae
mov
add
popa
fiaddl
lret
jp
push
hlt
xchg
jo
mov
lea
rol
ja
idivb
sbb
cld
imulb
imul
xor
idivl
sbb
inc
adc
mov
movl
mov
mov
and
mov
pusha
inc
dec
pop
testl
arpl
js
scas
pop
push
cli
enter
and
outsb
xchg
aam
rcl
dec
mov
std
xchg
mov
fs
iret
xchg
or
in
cltd
out
and
mov
sub
icebp
inc
add
stc
cmpsl
cld
mov
push
and
js
fistpl
dec
dec
or
ds
push
lcall
sarb
cli
push
sbb
mov
and
jne
xchg
push
lock
xchg
ficompl
daa
and
jmp
xlat
inc
fs
dec
mov
dec
xor
out
xor
cltd
xor
mov
jmp
test
pop
cmp
movsb
xor
cmp
daa
outsb
mov
jbe
sub
mov
icebp
in
rcrb
roll
jle
jmp
insb
sbb
out
xor
push
ficompl
and
mov
out
adc
insl
lds
les
xchg
adc
push
ljmp
mov
pop
xchg
sbb
fdivrs
jle
push
xchg
movsl
and
push
fdivl
push
or
pop
stc
and
xchg
dec
mov
xchg
fsubrl
mov
jnp
movsl
adc
jo
mov
fisubs
adc
mov
sub
cmp
outsl
icebp
mov
push
jge
ret
iret
fdivrs
push
and
scas
scas
adcb
pop
xor
add
daa
pop
ficoms
in
xor
fsts
sti
movsl
mov
bound
inc
cmp
sahf
into
mov
movsb
enter
fnop
mov
arpl
inc
ret
jns
enter
in
xchg
loope
mov
imul
xor
out
sub
outsl
sub
rcrl
add
dec
mov
mov
jb
repz
out
inc
dec
movsb
test
aas
push
in
add
fdivrl
push
push
cli
aad
pop
xor
cmpsl
ret
rol
add
mov
pop
mov
pop
xor
add
add
fsubr
clc
ret
aas
int3
ret
roll
dec
lahf
add
mov
cmp
pusha
or
les
icebp
or
ret
ret
popf
mov
xchg
clc
dec
cmp
daa
mov
mov
lock
push
cs
sbb
int3
mov
ljmp
adc
mov
movsb
fcomp
cmp
pop
fdivrl
adc
cmpsl
das
es
bound
xor
jle
xor
cmp
jg
dec
push
mov
add
cli
sbb
je
fiaddl
adc
cli
pop
pop
mov
pop
sbb
and
int3
cmp
addl
xor
test
xor
pop
sbb
ljmp
ret
push
cmp
cmp
mov
in
inc
inc
sbb
cld
out
icebp
inc
aam
js
int3
ds
in
lds
dec
or
js
or
popf
aad
dec
dec
fcompl
mov
xchg
scas
inc
mov
in
and
and
sbb
shlb
imul
outsl
test
ret
inc
popf
adc
jl
mulb
pop
dec
and
xchg
and
popf
pop
and
and
xor
inc
popf
xchg
sub
mov
fcoml
sbb
shlb
xacquire
add
jno
inc
xlat
cmpsb
popa
ljmp
mov
inc
mov
loope
mov
jnp
sbb
sub
mov
loopne
movl
fldt
inc
fidivs
out
adc
test
lea
mov
aas
fisubrl
fwait
and
insb
add
push
outsl
aaa
and
gs
fwait
adc
lret
xchg
xlat
mov
jle
bound
cmp
popf
mov
out
js
or
mov
cmp
filds
inc
jg
in
mov
shlb
lret
fwait
icebp
lahf
xchg
sub
mov
inc
test
push
mov
mov
push
cmp
push
scas
pop
xor
dec
cmp
or
fdivrl
push
mov
arpl
test
cmp
pop
inc
sbb
cmp
scas
ret
xor
into
mov
hlt
sbb
loop
aam
mov
lds
loope
jmp
jno
push
popa
jmp
in
in
pop
mov
insb
andl
das
xchg
pop
fsts
test
sub
mov
cltd
loop
or
mov
add
pop
lret
dec
xchg
cmc
data16
dec
cld
dec
lea
push
sbb
or
pop
cmp
fisubs
clc
nop
ss
cmova
in
ret
or
iret
out
shl
mov
fs
push
loope
add
sbb
xor
sahf
push
dec
negb
sub
and
add
dec
cs
pop
jle
enter
stc
pop
fs
inc
mov
push
leave
or
adc
add
inc
xorb
xor
fstl
mov
shl
sub
lahf
add
xchg
xchg
dec
mov
js
cmpsb
xor
je
inc
push
mov
movl
addr16
in
xor
push
jbe
xor
mov
int
stos
mov
or
cmp
cmp
mov
test
loop
inc
popf
inc
es
jb
push
and
sub
test
mov
cwtl
mov
cld
inc
and
out
lret
mov
adc
jnp
add
fwait
xchg
jo
mov
addl
mov
mov
add
call
add
cltd
stos
rclb
frstor
mov
ja
loopne
cs
sti
stos
dec
push
xor
xor
loop
outsl
inc
pushf
xchg
movsl
add
xchg
jmp
and
lods
cmc
test
rcr
push
popa
xchg
dec
int3
mov
pop
fcmovnb
push
es
gs
cmp
pop
mov
outsb
rcrb
sub
lret
clc
dec
nop
call
mov
dec
or
bound
cmpsl
push
cmp
insl
and
lcall
sarb
adc
mov
pop
ljmp
jmp
add
sub
lret
sbb
inc
mov
mov
lret
bound
test
fwait
jl
test
es
cmpb
gs
xor
and
or
jnp
cli
cmpsl
mov
pop
mov
or
jl
imul
xchg
clc
dec
or
jg
ss
movsw
popa
test
mov
mov
xchg
scas
jmp
add
lahf
cmp
inc
das
xchg
dec
out
cmp
popf
std
test
pop
imul
cmp
pop
pushl
jo
stos
imul
nop
pop
inc
call
std
jge
imul
mov
mov
insl
push
cmpsl
mov
mov
sub
jb
movb
or
into
cmp
sbb
mov
push
fiaddl
test
lret
lods
pop
lret
pop
fwait
cmp
add
rorb
add
lret
aad
xor
jmp
andb
push
dec
pop
ret
outsl
or
test
push
sti
mov
addb
outsl
in
clc
fs
push
adc
in
mov
lds
cld
fstp
outsb
mov
or
mov
sbb
cwtl
test
iret
in
mov
ss
int3
out
or
mov
xchg
jl
sbb
mov
ja
sbb
rcrb
jae
popf
les
xor
movsb
pop
cmp
addr16
in
adc
xor
in
imul
insb
les
jecxz
dec
add
pop
add
cli
ret
outsl
pushf
add
inc
add
cmc
mov
jecxz
sahf
rcll
test
pop
mov
lods
orb
jecxz
mov
adc
xor
incl
mov
push
mov
mov
or
xlat
inc
rcrb
inc
shlb
add
xor
andb
lahf
pushf
pop
fnsave
xor
je
fldt
ljmp
pop
xor
lahf
dec
das
mov
xchg
xlat
mov
mov
jmp
cmp
pop
mov
mov
push
cmp
dec
jbe
lahf
mov
pop
addb
cli
or
jb
es
add
repnz
js
push
or
dec
pushf
pop
mov
ret
pushf
rolb
mov
pop
sub
add
push
jo
xor
jo
cwtl
jb
aas
fsubrp
push
push
sub
outsb
sbb
cmpsb
lods
jg
jmp
dec
test
aas
push
lods
mov
adc
hlt
subl
sbb
xor
mov
mov
mov
dec
rcrl
add
inc
adc
js
jns
notl
mov
int3
push
cwtl
jbe
mov
lcall
sbb
cmpsb
insl
and
inc
push
dec
sbb
sub
pop
fidivrs
repz
xor
inc
in
roll
jns
loopne
std
mov
fucomip
lock
inc
lea
push
and
inc
sbb
mov
xchg
loop
add
dec
fiaddl
imul
pop
inc
mov
and
cmp
dec
cltd
and
cmc
leave
mov
int
sub
loopne
pop
xlat
lcall
adc
mov
add
lret
and
xor
push
imul
pop
cmc
inc
je
test
add
outsl
ja
pop
mov
fisttpl
push
jmp
leave
arpl
test
rorl
mov
loop
pusha
addr16
xchg
fdivs
in
pop
cmp
int
clc
sub
sub
cmp
mov
das
out
mov
jl
or
popa
mov
mov
cmp
fsubrp
inc
mov
cmpsl
out
std
gs
scas
adc
push
sbb
cmpl
mov
das
mov
dec
push
and
push
aad
add
add
lods
sbb
cmpl
andl
mov
divl
and
das
adc
xor
enter
ret
pop
cmc
out
aas
jecxz
cmpsl
push
dec
adc
les
push
push
mov
test
or
mov
mov
mov
cltd
and
cld
cmpsb
xor
xor
pop
div
or
jbe
imul
cmp
mov
ljmp
lret
dec
dec
sbb
jmp
push
mov
add
adc
mov
pop
mov
xor
imul
add
sbb
xor
aaa
cmp
xor
and
pop
pusha
push
xchg
and
xor
sub
dec
cwtl
pop
sbb
shlb
arpl
dec
push
and
mov
addr16
nop
mull
xchg
jo
mov
out
mov
bound
add
clc
add
lret
jb
adc
pop
xchg
sub
hlt
or
xchg
sbb
imul
mov
add
mov
fbstp
cmc
shrl
fistpl
daa
adc
jo
pop
cwtl
jl
adc
inc
daa
fldcw
fidivrs
lcall
sbb
dec
xchg
or
out
test
or
je
jle
fdivs
sub
mov
into
mov
and
js
mov
fldenv
outsl
movl
and
cmpsb
cltd
mov
orl
lret
int
xchg
pop
push
mov
or
mov
imul
or
cs
imul
fsubrs
or
and
out
mov
or
cmp
push
mov
ljmp
sub
adcb
jno
sbb
pop
shll
repnz
imul
iret
shrb
and
pusha
dec
jecxz
out
pop
add
cmpsl
repnz
mov
sbb
cmp
inc
mov
js
add
jnp
jp
dec
jg
and
cli
ds
es
ja
xor
ret
mov
js
pop
arpl
in
inc
sub
je
push
pop
jl
ret
dec
cld
loope
add
xchg
jecxz
ret
jne
sub
cmp
fyl2xp1
add
test
jo
js
add
push
mov
xchg
sbb
repz
xchg
xorb
dec
jmp
jo
mov
jns
jo
mov
and
imul
jmp
mov
jecxz
push
stc
dec
aad
scas
sbb
test
into
outsb
jmp
rcl
xlat
xchg
imul
sub
or
orl
addr16
add
int
jbe
popa
std
sub
push
and
add
test
ror
jmp
push
aas
ja
fisubs
out
scas
lcall
in
pop
jns
mov
xlat
sbb
enter
jge
outsb
push
ja
dec
cs
push
call
jmp
fwait
xor
in
sub
cmc
xor
repz
or
sub
adc
xor
xchg
loope
out
arpl
rcrl
es
sbb
mov
dec
or
shlb
xor
adc
xchg
aam
cwtl
push
dec
xor
xchg
clc
icebp
hlt
mov
mov
jno
inc
adc
lock
push
sbb
pop
cmp
xchg
or
ss
pop
dec
fwait
repnz
dec
out
xor
xchg
outsb
and
adc
sub
adc
pop
std
movsl
inc
fwait
dec
xchg
int
sub
fcmovnbe
push
mov
sbb
mov
pop
sti
fsubl
xchg
and
cmovp
lods
fldl
imul
repnz
mov
and
sub
fstpl
addr16
movsl
xor
pop
cmp
les
sub
and
push
adc
incl
out
mov
xchg
enter
jno
sbb
xor
xchg
popf
pushf
popa
push
pop
int
popf
pandn
cmp
inc
add
cmc
cmpb
push
push
or
xchg
xor
pop
test
div
pop
inc
cli
ja
mov
add
gs
sbb
xor
fst
icebp
notl
fistps
out
sbb
pop
pop
into
scas
mov
cs
or
pop
ljmp
mov
scas
add
int3
jecxz
cs
leave
jo
scas
inc
push
int3
dec
mov
mov
sbb
or
mov
repz
hlt
add
jns
inc
pop
fisubrs
sbb
fildll
push
or
and
shlb
movsb
xorl
adc
cli
sbb
add
and
adc
sbb
imul
into
roll
xor
pop
outsb
xchg
add
in
aad
ss
stos
sahf
and
xchg
xchg
mov
and
inc
ss
out
push
ljmp
out
mov
sbb
not
jno
lods
fcoml
push
mov
and
mov
fwait
cmp
dec
mov
fisttpl
adc
or
std
or
sarb
mov
outsb
ss
mov
sub
push
ja
bound
out
jp
sbb
mov
clc
add
mov
inc
cmp
addr16
push
jne
or
dec
in
cwtl
ss
dec
sbb
pop
xchg
xchg
popl
sbb
mov
mov
push
sahf
xchg
test
lods
add
dec
test
sub
test
ljmp
push
and
xor
aaa
clc
popa
popf
call
or
repnz
shll
mov
pop
sti
into
arpl
lea
fstpl
adc
cltd
pop
cmp
shrb
pop
int
xlat
cmp
dec
lret
mov
cs
add
push
xor
and
fs
lret
inc
mov
pop
xor
enter
push
movsb
add
add
negb
and
dec
push
mov
ss
jle
fdivrl
pop
cmpsb
std
aam
fsubs
stos
ja
cmp
popa
xchg
je
xor
pusha
aaa
and
lret
mov
icebp
fisttpll
push
ja
add
pop
push
adcb
xor
mov
xor
arpl
xchg
std
add
pop
aaa
sbb
idiv
ret
jle
out
fwait
xchg
jecxz
scas
andb
adc
jns
cli
xor
scas
and
mov
cmp
leave
outsl
sub
ror
test
icebp
test
dec
cmp
popa
or
fisubrs
jb
rcrb
imul
adc
cli
imul
or
sbb
or
and
scas
lret
or
hlt
mov
sbb
xlat
sbb
leave
cmp
mov
orb
fnstenv
adc
mov
cld
inc
inc
clc
mov
push
inc
jp
movb
xor
or
sbb
and
es
sbb
ds
and
push
mov
in
imul
add
push
icebp
inc
lods
shlb
and
fxch
les
out
pop
mov
inc
addr16
mov
dec
mov
stc
leave
sbb
loopne
jmp
das
sbb
sbb
add
in
leave
push
jo
jne
pop
push
xchg
outsl
push
gs
mov
in
mov
sar
lahf
and
sarl
mov
mov
dec
or
lea
xchg
test
int
test
int3
addb
inc
lea
fdivrl
mov
jmp
mov
push
into
and
jmp
lret
shl
add
je
ljmp
scas
xor
pop
pop
das
loope
add
dec
xor
pop
sub
lock
imul
mov
mov
int3
or
into
pop
mov
jbe
mov
imul
fcoms
inc
jbe
xchg
jbe
sbbb
popa
pop
sbb
in
mov
mov
je
fldl
mov
cmp
or
jmp
int
rol
sbb
cmp
fwait
inc
std
adc
ret
mov
stc
and
cmp
xchg
int
xor
punpcklbw
aaa
dec
mov
cltd
pop
cmc
repz
or
xchg
sub
arpl
enter
fidivs
notl
push
sbb
imull
cmp
roll
adc
fisubrs
lcall
mov
push
pusha
scas
push
mov
filds
mov
mov
lods
mov
mov
in
adc
stos
loop
jne
and
and
and
icebp
das
and
lods
movsb
push
pop
fwait
xlat
outsb
push
mov
jg
mov
add
sets
popf
sbb
stc
inc
rorl
inc
adc
cld
shrb
into
xchg
pushl
jg
iret
fsubrl
cli
repz
lret
nop
adc
rclb
lods
addl
pop
repz
mov
mov
adc
insb
outsb
pop
into
adc
sub
sub
shlb
cwtl
jp
mov
dec
outsb
cmp
cmp
xchg
inc
lcall
mov
xchg
rol
adc
xchg
shlb
stc
push
jb
push
icebp
pusha
jg
jecxz
iret
inc
fmuls
jb
add
add
mov
cltd
adc
cmp
inc
lret
les
mov
js
xchg
mov
cmp
data16
fmull
test
sub
push
movsb
scas
test
rcrb
mov
adc
dec
cli
and
mov
push
xchg
lock
adc
outsl
pop
cmp
or
cmpsl
sub
push
jo
cmp
stc
sbb
repz
jp
stos
jmp
mov
in
cmp
in
mov
mov
sbb
std
jno
loopne
bound
out
mov
xlat
cmp
xor
sbb
insl
adc
shrl
push
jl
stos
push
movsl
stc
pop
xchg
stc
stos
push
arpl
mov
mov
ffreep
out
aaa
and
dec
shr
test
cmpsb
pop
cmp
adcb
mov
sub
insb
sahf
repz
push
pop
ljmp
ret
mov
fwait
call
mov
fsubrs
sar
sub
xchg
ds
xchg
xor
pusha
dec
xchg
jle
xchg
fdiv
test
rorb
add
jbe
push
enter
push
mov
xchg
int3
jle,pt
in
iret
sub
jp
insb
jmp
gs
fisubrs
mov
imul
lcall
test
mov
push
out
xchg
pop
mov
pop
fs
sub
cmp
push
mov
sbb
loope
test
jp
inc
xor
adc
cltd
mov
int3
inc
test
insb
xor
xor
pusha
shll
iret
cld
and
jne
pop
mov
fidivl
mull
outsl
dec
dec
fdivrl
aam
bnd
mov
cwtl
ret
adc
jnp
xor
mov
fwait
mov
scas
in
addr16
movsb
xchg
add
hlt
out
sahf
pop
fs
sahf
je
je
adc
and
test
jl
lea
or
ficomps
jne
lret
mov
clc
inc
cmc
les
xabort
inc
pop
jmp
shlb
adc
mov
push
stos
lahf
or
sub
adc
mov
insb
sbb
jno
aas
rcr
iret
inc
gs
into
cld
sub
jo
sti
lahf
xor
mov
add
pop
mov
cmp
cmpsb
pop
pusha
cmc
dec
lock
lcall
or
fcmove
andb
add
fucomip
add
pop
sub
sbb
jp
fs
mov
xlat
pop
mov
loop
dec
test
lods
cmpsb
xchg
and
loope
fcom
aad
jg
xlat
push
sbbl
iret
scas
jnp
lahf
and
sbb
popf
xlat
and
mov
push
repz
lret
imul
or
pop
in
out
fcmovb
mov
jno
xor
dec
clc
lcall
in
stos
dec
inc
adc
out
jns
fs
lods
push
lods
sub
pop
jne
xlat
or
std
imul
xor
arpl
pushf
xchg
sbb
jge
mov
mov
sbb
sahf
pop
aaa
ret
filds
cmp
push
out
cmp
jb
dec
jg
rcl
xchg
lods
ret
enter
jle
mov
inc
notl
jl
jge,pt
int
cs
dec
insb
aam
push
pop
inc
cmc
pop
loope,pt
into
es
pop
jmp
gs
xchg
mov
sub
add
shl
aas
popf
or
add
test
mov
and
jl
adc
rcrl
or
add
xor
into
iret
aaa
shll
jecxz
inc
or
sbb
add
rorb
icebp
dec
add
test
in
and
adc
addr16
imul
push
cmp
push
dec
mov
lods
js
sahf
mov
sub
xlat
clc
ret
insl
xor
mov
sbb
adc
popl
repz
lcall
sbb
daa
mov
pushf
and
mov
sub
jmp
je
stos
das
xor
testl
jno
test
cld
inc
mov
jle
cmc
sbb
lea
adc
jae
sarl
lcall
out
stos
mov
enter
xlat
xchg
rorb
jl
rcll
or
test
flds
or
add
je
push
in
mov
and
je
dec
das
push
sbb
into
inc
mov
xchg
insl
xor
mov
loope
movsl
fs
xor
test
nop
test
push
rcr
les
sub
repnz
int3
jg
sub
in
push
add
ss
repnz
adc
jo
sub
add
aas
jbe
enter
push
sub
int3
dec
jo
fbld
jl
sahf
mov
testb
scas
add
mov
sarb
nop
pop
iret
stos
mov
aad
testl
push
dec
mov
in
lods
xor
dec
push
loopne
je
imul
xchg
or
test
repnz
les
adc
scas
test
pop
add
jae
push
jp
and
nop
mov
jo
std
mov
loope
cmp
xlat
inc
das
std
scas
inc
and
mov
dec
cli
xchg
in
xor
jo
hlt
into
subb
xchg
jbe
xlat
push
outsl
sar
insl
rclb
mov
and
and
dec
adc
push
xchg
xchg
scas
int3
push
pop
jns
arpl
mov
divl
in
or
cs
dec
pushf
div
sub
mov
andb
jo
jl
std
fmulp
stos
out
in
das
fpatan
add
and
test
fnstenv
sahf
popf
add
lret
stos
fucomip
mov
dec
mov
fadds
movsb
aaa
inc
and
mov
jae
mov
rcrl
addr16
in
jmp
sbb
roll
and
fldl
jp
cltd
popa
xchg
sti
adc
jno
jo
cmp
mov
ret
test
xchg
ss
pop
lcall
cmc
jle
sbb
sbb
outsl
testb
sbb
lds
or
ja
jo
and
loop
adc
stos
test
cmp
pop
dec
call
mov
and
cld
sar
push
pop
xchg
adc
or
movsb
fs
xchg
pop
add
icebp
jge
inc
push
repnz
xor
pop
add
add
pop
cmp
aam
mov
faddp
push
add
adc
mov
mov
daa
sbb
insl
shl
dec
adc
cmpsl
je
stc
leave
pop
stos
inc
aam
xchg
jecxz
in
push
and
dec
in
mul
mov
adc
add
mov
test
mov
fdiv
lods
or
lea
cmp
cmp
cmp
stos
inc
or
xchg
lea
mov
inc
repz
pop
adc
lret
notb
push
mov
ja
movsb
lahf
pop
pop
scas
lret
stc
in
cmpsl
mov
dec
dec
sub
pop
jae
cmp
cmc
cmp
inc
jne
push
adc
dec
adc
add
enter
sahf
ss
fwait
divb
sub
inc
mov
ja
mov
or
or
subl
outsl
jns
sub
in
mov
rcr
sbbl
notb
movsb
mov
int
sbb
popf
pop
xor
mov
jmp
fdivrl
push
add
push
aaa
pop
gs
mov
cld
xor
lods
xchg
xchg
lods
dec
bound
pop
imul
jnp
jbe
and
cmp
mov
mov
faddl
arpl
mov
jge
add
outsl
dec
jnp
cmovle
mov
mov
repnz
push
or
ds
mov
loopne
push
roll
cmp
push
cltd
dec
and
std
fstps
int3
push
xor
sub
sahf
std
jp
sbb
repnz
cld
jo
mov
ds
fldenv
jnp
fadds
fiadds
xchg
mov
mov
add
cwtl
ret
in
adc
testl
orl
in
inc
addb
andb
aas
pop
push
clc
sbb
xor
adc
imul
or
aas
xchg
popf
mov
outsb
add
aaa
hlt
mov
lret
pop
insl
sub
lock
sub
or
lret
sub
sbb
adc
xchg
iret
test
cmp
mov
scas
jle
xchg
sub
imul
adc
adc
loop
pop
std
sub
in
cld
stos
or
daa
push
or
and
mull
sbb
lock
je
jecxz
jno
or
pop
pop
xchg
pop
push
xchg
push
inc
and
loop
or
fs
and
imul
mov
sbb
push
push
sub
inc
cli
add
incb
lahf
loope
out
sub
pop
mov
xchg
jg
mov
jge
mov
mov
gs
ja
lahf
in
ljmp
repz
xchg
sbb
in
daa
jne
inc
popa
shlb
dec
pop
inc
and
aad
jp
jecxz
xor
aas
add
int
or
jle
rcrl
nop
lea
push
push
sbb
gs
clc
push
mov
lea
into
sbb
daa
or
dec
fldt
es
mov
in
xchg
sub
push
push
cmc
add
mov
xchg
adc
fiadds
mov
lea
insb
mov
jne
pop
pop
add
cltd
pop
adc
jmp
mov
add
jmp
jno
arpl
mov
popf
repz
sti
test
lret
fstl
int
icebp
rol
and
mov
dec
sbb
jecxz
call
pop
sbb
pop
mov
jb
js
into
enter
lock
jne
rorb
pop
or
mov
lcall
into
or
mov
mov
out
clc
add
clc
bound
outsl
adc
lret
lea
push
stc
lret
xchg
push
and
shrb
imul
or
aad
adc
or
cmp
xor
mov
inc
xchg
loopne
aad
fistl
shrb
xchg
cwtl
cmp
adc
out
inc
lahf
xor
pop
dec
sbb
push
jne
imul
lret
in
insl
js
stos
subl
push
pop
leave
insb
jns
pop
push
dec
pushf
xlat
movsb
stos
adc
ret
arpl
in
jmp
jo
mov
xlat
negb
enter
sahf
pop
notl
testb
inc
lahf
sbbl
stc
cltd
mov
and
jo
inc
stos
jae
mov
xor
pop
arpl
pop
inc
mov
ds
loopne
aas
rolb
push
sbb
fsubr
pop
xchg
xchg
fwait
xchg
dec
les
mov
dec
scas
dec
mov
nop
mov
adc
push
into
mov
pop
xchg
xor
adcl
xor
cmp
dec
xchg
scas
test
xchg
jb
lcall
out
stc
js
adc
jb
inc
inc
mov
adcb
cmpsb
es
imul
pop
fisubl
and
mov
cmc
add
xchg
incl
push
or
jae
scas
xor
stos
hlt
mov
jae
mov
mov
jg
lret
pop
mov
mov
adcb
jp
scas
movsb
outsb
addb
in
add
aam
cmc
pop
data16
shrb
xor
add
movsb
and
adc
push
mov
subb
mov
cmpsl
mov
pop
mov
lret
mov
inc
sbb
mov
in
pop
pusha
enter
lock
stos
dec
dec
push
pop
pop
mov
and
fwait
aas
test
hlt
pop
aaa
and
pop
cmpsb
stos
and
adc
imul
inc
fwait
or
and
mov
nop
jbe
xor
jno
mov
cmpsl
push
mov
shll
lods
fistl
and
xor
das
out
popa
nop
insl
push
pop
and
sbb
bound
mov
mov
push
pop
add
mov
or
inc
push
adc
sub
in
mov
nop
int3
and
sbb
arpl
or
leave
jbe
mov
jecxz
jecxz
test
inc
push
aaa
adc
in
mov
dec
sbb
mov
insb
dec
and
mov
push
enter
xor
sbb
stos
dec
sub
adc
xchg
jle
shrl
in
das
pusha
mov
pop
jnp
and
cld
push
jae
ret
and
adc
fs
in
mov
in
xchg
sti
sahf
movsb
jns
test
lea
adc
push
add
adc
inc
jecxz
pop
repnz
jno
pop
aas
jecxz,pn
dec
jbe
pop
mov
or
pushf
and
mov
decl
jo
adc
push
sub
pop
aas
mov
adc
or
and
lahf
add
jb
and
lock
cmp
add
daa
xor
sarl
int3
sub
push
int3
xchg
ljmp
pop
popf
xor
repnz
jnp
insb
sub
fildll
xchg
mov
repz
out
stos
mov
psllw
mov
inc
pop
sbb
loop
fldt
adc
add
mov
leave
mov
sbb
js
fcoml
pop
mov
sbb
xchg
mov
jnp
mov
enter
cmp
push
lea
sub
dec
sub
mov
incl
je
jg
adc
in
mov
movsl
jno
cs
stos
push
add
sti
sbb
fdivrp
sti
repz
out
add
rcr
fsubs
cli
fcoml
cmpsl
cmp
aam
xlat
mov
aam
aam
insb
jo
and
fistpl
cmpsb
lods
push
movsl
imul
shlb
fsubrl
push
add
pop
pop
ret
popa
in
xlat
movsl
js
movsl
add
pop
movsb
loopne
push
sub
adc
xor
out
adc
inc
popf
cmp
loop
inc
lahf
movsb
jge
scas
mov
sub
test
out
mov
cmpsb
xchg
pop
sub
push
hlt
mov
inc
sub
arpl
add
jbe
addr16
cltd
push
std
push
and
xor
mov
ljmp
gs
pop
mov
pop
dec
mov
mov
ja
and
pop
ffreep
imulb
int
dec
push
enter
stos
test
insb
addr16
dec
xor
add
and
int
femms
iret
or
insb
pop
clc
rorb
inc
dec
ja
shll
pop
leave
sub
mov
cmp
lods
add
lret
cmp
lods
push
and
test
or
in
mov
pop
mov
dec
sahf
dec
sub
push
stos
shlb
add
jnp
stos
or
lahf
mov
ds
add
sub
xor
daa
shll
bound
jns
fs
xchg
add
mov
mov
push
xchg
aam
xor
ja
jae
hlt
cmp
loopne
repnz
and
ret
mov
jge
xorb
insl
fisubs
cld
pop
out
gs
sbb
adc
jl
fmul
xlat
popf
inc
and
sub
stos
fdivr
adc
push
lcall
xchg
mov
outsb
push
or
or
sbb
cmp
inc
fldl
cs
xchg
imul
hlt
orl
cltd
push
push
pop
sti
cltd
cmpsl
mov
rcrb
sub
bound
add
int
push
loope
iret
add
test
pop
filds
jge
aaa
std
sub
pop
in
pop
or
sub
in
in
das
in
cmp
mov
cld
scas
push
popa
pop
in
jnp
cmp
pusha
cwtl
jno
add
lock
int3
push
jnp
imul
dec
popa
cmpsl
lock
xlat
out
lahf
dec
out
xor
sbb
das
inc
xchg
sahf
test
and
lods
or
sub
jp
inc
add
std
das
clc
fs
sbb
ret
mov
inc
repz
fldcw
inc
mov
jge
aaa
test
mov
push
xor
xchg
and
pop
and
int3
cmovnp
push
fmuls
add
or
xchg
arpl
inc
mov
std
in
ds
lcall
enter
xchg
dec
ljmp
movl
lcall
xchg
dec
insb
addl
ret
jns
test
and
mov
inc
xor
aam
out
cs
call
stc
inc
xor
mov
and
cmp
sub
arpl
add
in
test
fs
jge
sub
mov
dec
xchg
stos
mov
pushf
cli
fucom
fidivrs
xchg
rcl
mov
shrb
xor
inc
jge
mov
xor
das
pop
cwtl
xchg
push
add
xchg
and
xor
call
cvtpi2ps
mov
jp
and
scas
inc
dec
leave
aaa
inc
cld
adc
jnp
dec
pcmpgtb
cwtl
subb
mov
dec
out
jno
push
add
push
adc
scas
push
test
inc
pop
test
repz
jge
xor
das
ret
mov
out
push
add
mov
fistpl
dec
push
add
pop
lea
cltd
xor
add
pop
clc
and
cmp
push
jl
roll
and
movsb
aam
mov
pop
xor
les
sub
fistps
push
dec
scas
loopne
in
ret
jl
xchg
pop
pop
adc
cmp
pop
push
in
mov
adc
mov
gs
fwait
mov
push
adc
lret
dec
push
xor
lock
sbb
les
insb
es
out
mov
jg
ss
cmpsl
or
xchg
push
sbb
mov
fwait
jno
xor
pop
loopne
push
cltd
insl
ret
dec
mov
aam
dec
scas
push
pop
enter
cmpsb
sbb
andl
push
xor
fbstp
sub
pusha
adc
pusha
cmp
or
push
mov
xchg
scas
pop
xchg
sti
fdivr
add
cld
jae
sub
cmpsb
lds
mov
popa
out
push
pop
sub
and
add
sbb
pop
sbb
xor
adc
scas
adc
pop
jge
or
dec
movsb
cmpsl
ss
mov
xchg
pushf
jg
imul
fcmovb
dec
or
dec
mov
pop
jbe
cmp
repnz
lea
dec
popf
lock
mov
pop
push
shlb
aam
adc
adc
cmpsb
sarl
out
jb
hlt
aas
daa
inc
aad
dec
mov
cs
pop
pop
sbb
in
add
or
and
inc
leave
pop
cmp
popa
inc
xchg
mulb
xor
popa
sbb
xchg
jne
ljmp
lcall
orl
in
int3
xchg
or
adc
lock
repz
sub
pop
push
lret
fcmovnb
cmp
clc
push
out
je
insb
adc
dec
sti
roll
test
xor
jns
xor
out
pushf
cmp
dec
popf
or
or
push
sbb
cmp
mov
imul
sub
xchg
fimull
xor
jbe
push
leave
adc
sub
cs
xchg
imull
repnz
mov
adc
xor
popf
fsub
xchg
sarb
ds
addr16
nop
int3
imul
lahf
add
add
lea
cld
jo
mov
xor
stos
or
mov
jae
mov
and
lcall
lret
ret
xchg
pushf
adcb
and
aas
push
test
jnp
mov
adc
mov
imul
sbb
jecxz
jp
adc
xchg
out
lods
xchg
int3
adcl
push
loop
nop
test
rolb
subl
cmp
lods
ss
inc
or
rclb
mov
icebp
inc
mov
mov
lock
movsb
ret
or
pop
repz
jp
mov
inc
xchg
adc
stc
ja
cwtl
push
push
adc
push
ss
mov
jl
ret
or
bound
movsb
and
lcall
add
call
xor
jle
sti
xchg
fisubs
xchg
std
into
fisubrs
leave
dec
mov
fiadds
jmp
aaa
xor
inc
lret
dec
lea
cmpsb
sbb
cmp
sbb
adc
mov
clc
jb
or
push
push
jns
cmp
mov
in
mov
jp
out
cwtl
sub
fdiv
inc
mov
mov
leave
cs
das
outsb
fdivrl
movsl
lret
test
jg
or
add
test
int
jne
push
adc
ret
pop
pop
and
or
mov
sbb
jmp
pop
int
mov
imul
cwtl
pop
xchg
ljmp
inc
popa
xlat
jmp
push
sbb
arpl
mov
cmc
and
cmp
in
and
stos
lds
or
or
shrb
arpl
insl
mov
push
lahf
mov
stos
push
xchg
xchg
aam
xchg
xor
sub
push
adc
sub
mov
jae
jo
jb
sti
xor
mov
mov
or
cmp
adc
pop
mov
aaa
add
add
test
movsb
shlb
notb
fmul
addl
dec
test
daa
mov
imul
adc
cltd
push
add
fnsave
test
xor
scas
cmp
lcall
jbe
mov
icebp
push
adc
add
mov
ret
arpl
arpl
fisubs
or
jmp
in
hlt
loop
sbb
push
pop
and
add
les
jo
loop
jecxz
mov
movsb
mov
imul
inc
mov
and
fwait
je
out
push
push
cmp
rcrl
faddp
cltd
or
pop
mov
cmpsl
pop
outsl
jo
loopne
loop
dec
dec
out
test
dec
aaa
xchg
or
push
outsb
inc
inc
dec
xor
jge
in
inc
les
push
pmullw
adc
sub
xchg
cmp
push
xchg
add
sub
int
cmp
enter
push
and
es
push
cmc
pop
mov
sarl
cwtl
int3
mov
arpl
jp
sub
pop
mov
and
loopne
push
mov
imul
repnz
xchg
lcall
shrl
mov
test
cwtl
into
in
xlat
adc
xchg
movsl
mov
push
cli
movsl
and
sahf
ret
jg
lods
aam
adc
pop
xchg
mov
mov
mov
pop
cmp
inc
sub
loope
mov
xchg
sbb
push
mov
mov
cld
mov
dec
push
jb
cmp
push
test
fidivrl
mov
jmp
cmc
xchg
adc
push
cmc
mov
daa
mov
arpl
lcall
aaa
mov
ss
mov
into
js
lock
loope
xchg
push
and
addl
sub
pop
sbb
mov
mov
rcr
aam
xchg
add
adcl
out
dec
add
fisubrl
xlat
es
cmp
jp
fistl
adc
pop
mov
orb
hlt
and
xchg
xor
add
push
xlat
out
xorl
jmp
push
je
cmc
ja
ja
cmpsl
inc
push
and
jmp
xchg
inc
ret
orb
xor
mov
pop
dec
testl
lea
or
xor
les
and
inc
jg
ljmp
sarl
pop
scas
jge
nop
xchg
es
jmp
and
stos
in
jg
jecxz
mov
mov
in
mulb
outsb
mov
iret
inc
stos
adc
int
into
aam
lcall
xor
shrl
mov
cmp
jns
mov
xchg
cmp
jb
cmp
sub
xrelease
sbb
or
sahf
ljmp
adc
xor
ror
inc
or
mov
sbb
mov
sti
mov
addb
shl
mov
sbb
jmp
push
dec
stos
jne
jmp
add
add
pop
adc
into
cmp
push
lahf
popa
push
mov
subw
inc
ljmp
push
fmul
stos
pushf
addr16
sub
pop
stos
mov
in
enter
fdivrl
icebp
cmp
mov
sub
enter
js
pop
out
fs
jmp
jnp
dec
lea
insl
push
in
test
sbbl
loopne
addb
adc
pop
sbb
add
ja
mov
imul
ret
pop
ret
hlt
sub
stc
loopne
aaa
sbb
stos
loop
jnp
mov
lcall
mov
aas
lds
push
push
push
mov
pop
add
adc
fdivrp
xlat
or
xchg
pop
aad
fidivl
sub
fiadds
cmpsb
and
nop
lods
cmp
jb
xchg
outsl
jge
sub
fdivl
sbb
or
aam
stc
out
or
adc
mov
ret
xchg
jno
and
test
pop
sub
dec
mov
inc
add
insb
mov
xor
and
lcall
dec
lods
pusha
inc
push
sbb
xchg
ss
cli
jle
push
mov
and
cltd
xor
xchg
jle
out
mov
scas
add
ret
in
xor
fs
adc
icebp
popf
cs
iret
jmp
dec
testb
mov
cmpsb
in
loopne
and
int3
stc
cmpsb
aas
push
test
insl
movb
push
xchg
cmp
adc
or
cmpsb
mov
xchg
aas
clc
and
pop
xor
loopne
and
sub
xor
das
cmp
inc
aam
jmp
or
test
and
aam
sub
xor
pop
shrb
lret
icebp
test
add
pop
pusha
movsl
or
push
pushf
cli
push
aas
leave
in
in
les
test
and
sub
or
imul
aad
cmp
lods
ret
sbb
push
pop
adc
or
mov
mov
mov
popa
mov
lods
push
mov
pop
lcall
mov
cld
movsl
scas
lahf
push
inc
dec
sub
mov
xor
and
fldcw
xor
aad
lock
lahf
mov
test
in
ja
dec
notb
inc
mov
jg
loope
and
popf
in
insl
push
ficoml
inc
inc
dec
out
or
out
mov
cmc
push
gs
lret
cmp
and
enter
ret
jns
dec
add
pop
cmp
lret
sub
push
sbb
push
mov
push
testl
mov
ret
shll
add
fdivrs
pop
and
decb
test
push
adc
pop
sbb
mov
subps
ret
mov
push
lret
xchg
inc
xchg
sub
shrb
push
mov
inc
out
mov
sub
es
jbe
push
shlb
pop
mov
mov
loopne
jle
outsb
arpl
xchg
out
pop
mov
test
mov
dec
fisttps
xor
testl
sarb
adc
cld
repz
loopne
mov
lahf
pop
adc
xorb
adc
xchg
scas
fdivl
loopne
mov
jno
jne
adc
out
pop
xchg
xchg
pop
mov
in
pop
lods
mov
leave
aaa
ljmp
bound
sub
cs
add
adc
add
mov
lea
in
outsl
shr
cmp
addr16
dec
scas
jmp
icebp
jmp
pop
das
clc
dec
inc
add
cmpsl
push
sub
push
inc
push
pushf
sbb
sub
mov
sbb
in
and
repz
add
mov
sub
mov
es
push
cmp
aaa
icebp
scas
out
or
frstor
out
jmp
fmuls
sub
cmp
jge
push
mov
pushf
cli
pusha
test
aam
fstpt
adc
sub
sar
leave
xchg
pusha
adc
xchg
dec
dec
push
mov
roll
call
cmp
mov
cli
imul
push
mov
sub
pop
mov
movsb
insl
inc
das
fmull
sub
lock
test
pop
pop
sub
shr
ret
jae
les
test
lods
js
in
adc
mov
xor
adc
bound
adc
jae
inc
rclw
mov
and
add
or
sti
je
pop
cwtl
rcrb
push
and
sub
dec
in
inc
mov
mov
popa
add
cmpsb
sbb
loop
xchg
lcall
jno
xlat
push
ss
loop
mov
mov
jns
mov
outsl
mov
and
out
sahf
adc
cld
xchg
mov
or
test
mov
rol
into
leave
movsb
xchg
es
ljmp
push
ljmp
roll
repnz
push
cmp
dec
cli
aam
out
xor
mov
enter
aad
mov
jae
mov
jne
icebp
xchg
mov
dec
cmp
out
neg
hlt
jecxz
insb
out
int
in
insl
sbb
jne
movsl
mov
add
popa
xlat
or
loop
lret
sbb
mov
or
mov
int3
jb
push
aad
xchg
fisttpl
inc
sbb
loop
adc
addr16
lret
clc
mov
lret
push
xor
jb
push
aas
xchg
or
mov
lods
fwait
sub
dec
jb
mov
cmp
sub
sbb
lahf
jmp
fidivs
in
sahf
cld
mov
lods
icebp
imul
incl
popf
jmp
jno
xlat
call
xchg
test
inc
pop
loope
adc
push
jle
daa
xor
cmc
scas
in
hlt
movsl
lahf
lea
daa
or
jbe
xor
pop
in
cmp
push
lcallw
ret
loopne
lock
pop
lret
pop
aam
push
push
nop
mov
cs
jl
scas
add
enter
in
mov
fcmovnb
iret
xchg
or
adc
sbb
fiadds
dec
jp
jmp
jmp
sbb
xchg
fucomp
inc
gs
fs
xchg
lods
push
mov
adc
call
iret
pop
inc
cmp
mov
jo
pusha
jg
adc
mov
or
sbb
push
mov
adc
mov
xchg
fadd
pop
pop
pushf
into
mov
pushf
fidivrs
jb
push
insl
fistps
or
pop
cltd
test
clc
jb
shl
mov
mov
out
cmp
incb
bound
int
pop
jno
adc
pop
aam
pusha
jmp
jae
mov
jle
bound
inc
add
fiadds
or
scas
xor
insb
pop
and
jecxz
dec
bnd
cmp
jp
sbb
fcoms
jne
lcall
mov
mov
lcall
and
aas
pop
test
lahf
or
push
pop
aas
xor
mov
or
frstor
push
out
xlat
imul
cmp
mov
jae
mov
in
lret
into
cmp
hlt
leave
xor
push
lea
sbb
or
mov
mov
jge
mov
jae
and
lods
cmp
xchg
in
fldcw
shlb
push
add
adc
cwtl
bound
cmp
adc
xor
sbb
sbb
das
mov
mov
add
push
push
inc
push
stos
out
test
cli
and
push
dec
and
pop
xchg
sbbl
adc
jns
aas
sbb
fcoms
or
pusha
ss
movsl
arpl
sub
in
imul
loop
popa
imul
lock
jge
xchg
pop
jle
fistl
aam
push
test
inc
add
add
mov
jnp
dec
addr16
jae
dec
mov
or
inc
push
jo
xor
lret
push
clc
mov
test
xchg
sahf
lods
sub
jns
sbb
sub
lods
cmp
loope
mov
and
enter
imul
ret
lcall
adc
sbb
pop
inc
lahf
sbb
vpsubb
xor
aam
lds
xlat
std
in
add
cmpsb
cli
shll
sbb
lods
mov
es
or
outsl
ret
xchg
mov
adc
std
sub
xor
push
test
ret
cmpsb
leave
mov
jg
sub
lcall
mov
adc
clc
daa
ret
es
aas
inc
xchg
inc
jge
mov
testb
movsb
pop
or
mov
dec
mov
movsb
aaa
ret
mov
jnp
enter
std
mov
pop
mov
jl
shll
push
xchg
je
and
lcall
ss
ret
lret
movl
insl
pop
roll
cmp
dec
dec
imul
fwait
mov
mov
mov
out
cmpsl
jo
call
loop
sarl
fidivl
popf
ss
in
cwtl
pand
dec
jo
stos
adc
inc
movsl
dec
push
js
mov
call
mov
insb
std
jo
rolb
jbe
loop
cmpsl
cmp
cmc
movsb
imul
aaa
add
aas
das
imul
sub
push
and
fsubrs
inc
add
scas
inc
rcll
push
lods
imul
or
insb
pop
dec
hlt
mov
inc
stc
cmpl
mov
pop
pusha
cli
in
jb
adc
xchg
mov
jae
pop
les
call
push
mov
bound
mov
shll
adc
das
sub
sub
addr16
scas
lret
xchg
insb
outsl
iret
in
or
gs
xor
in
push
jecxz
imul
xchg
and
xchg
mov
sbb
inc
inc
les
jg
mov
int
ja
sahf
push
dec
das
push
iret
sahf
std
out
mov
pop
movsl
out
mov
roll
in
stc
mov
adc
lods
inc
test
cmc
inc
inc
add
or
not
aas
jae
jns
dec
test
dec
mov
push
dec
jmp
push
xor
jns
mov
ja
int
pushf
push
lret
sahf
push
mov
pushf
out
enter
cld
insl
xlat
inc
bound
and
or
imul
cmp
aad
adc
sub
or
out
aam
fidivl
pushf
es
or
cld
daa
sub
aas
fmul
cld
jns
jecxz
lock
dec
jp
jo
sbb
jg
mov
jo
cmp
mov
xor
loopne
ljmp
scas
dec
insl
sbb
and
pusha
jb
mov
loopne
rcr
pop
adc
shrb
adc
adc
sbb
add
mov
mov
jb
sub
mov
les
ljmp
shrb
leave
pop
mov
jg
sbb
ljmp
fistpll
push
scas
in
or
push
sar
or
lock
enter
loope
insb
xchg
enter
xchg
dec
cmp
inc
and
arpl
loop
js
jge
in
imul
outsl
inc
in
pop
nop
lcall
stos
xchg
cs
outsb
fisubl
jb
jb
jnp
cmp
cld
dec
stc
mov
pop
lods
and
mull
rorb
adc
fucomip
xchg
sub
lds
imul
fsubrs
imul
loop
out
popa
aam
in
lret
ret
dec
pshufw
cld
mov
in
push
pop
test
xor
aad
lret
sbb
loope
movsl
jnp
jp
mov
mov
pop
sahf
cmc
or
fsubrs
cld
lods
xor
lcall
hlt
inc
or
adc
mov
jp
xorl
push
sbb
jl
adc
dec
xchg
lds
pop
xor
out
fiadds
fcmovnu
and
mov
popa
push
and
and
inc
adc
popf
mull
jl
out
call
xchg
loope
ret
push
and
xchg
dec
fs
scas
and
cld
hlt
mov
push
mov
xchg
cmp
shrb
pop
adc
mov
add
rep
fwait
lret
jb
nop
xchg
sub
dec
xor
call
add
dec
ss
mov
push
lret
addb
loope
push
dec
ja
es
cld
push
addl
int3
xchg
mov
inc
in
stc
insb
add
xor
xchg
xchg
cmpsl
xor
or
std
ja
adcl
or
pusha
scas
xchg
stos
ret
pop
stc
and
push
lods
negl
adc
sbb
mov
sti
add
les
out
sub
mov
shrb
ud0
jnp
adc
inc
clc
or
in
sbb
arpl
sub
cmp
mov
and
push
mov
movsb
daa
mov
addb
repnz
icebp
add
mov
pop
dec
add
gs
into
lret
mov
rorl
arpl
sbb
int3
jecxz
inc
pop
iret
call
daa
jae
inc
aas
xor
je
loop
loop
ja
ret
f2xm1
cmp
test
lret
dec
inc
push
sbb
test
sbb
xlat
hlt
sub
insl
xchg
ja
inc
push
sahf
xchg
dec
push
lea
inc
gs
add
ficomps
int3
sbb
aad
sbbl
sar
fdivrs
pusha
push
add
add
aas
push
push
add
insl
mov
pushl
mov
pop
loope
xchg
lahf
xor
mov
adc
or
jb
sbb
repnz
dec
roll
enter
mov
out
sarb
ljmp
sub
jl
xor
sub
call
add
xchg
mov
cmpsb
xor
mov
repnz
sbb
jno
out
adc
cmp
jae
cli
pop
mov
sub
sti
mov
mov
xchg
std
adc
cwtl
cmp
in
rcll
pusha
mov
xchg
mov
into
call
dec
xor
inc
ficompl
loopne
mov
pop
ljmp
fists
pusha
adc
or
cld
mov
sbb
mov
jle
setno
sbb
daa
lcall
fcoms
into
pop
pop
jl
xchg
inc
add
jb
sbb
testb
in
inc
cmp
and
fsubs
mov
inc
xor
jbe
pushl
js
xchg
ljmp
jns
inc
fstps
sbb
jp,pt
imul
cmp
test
pop
mov
xchg
loope
pop
jb
push
cmp
push
inc
shll
mov
aad
call
cmpl
mov
nop
popf
xlat
je
sbb
in
sub
clc
jp
mov
je
mov
fistpl
pushf
mov
cmpsb
sahf
mov
and
test
mov
and
sti
sub
mov
cmc
aaa
xchg
mov
ss
dec
dec
sub
pop
ret
xchg
pop
testl
jmp
or
sbb
or
mov
loopne
popf
lahf
adc
and
jne
or
aad
loope
mov
sti
js
mov
test
inc
std
cmp
push
andb
insb
mov
xor
mov
lds
add
lock
dec
sarl
mov
dec
std
cmpsl
iret
mov
imul
sub
outsl
lahf
push
lret
xchg
push
xchg
push
add
push
xor
mov
mov
sarb
or
shlb
adc
mov
loop
loope
nop
dec
adc
aam
popa
jb
int3
in
mov
pop
xchg
loope
les
push
int3
mov
pop
xchg
mov
add
mov
xor
movsb
jae
inc
in
adc
sarl
fidivl
pop
std
mov
sti
loope
inc
paddusw
cmpl
into
pop
in
sarb
cltd
xor
js
add
cltd
ret
mov
shlb
sbb
push
xchg
aaa
and
int
stos
jecxz
into
jmp
out
daa
aam
cwtl
cmp
jo
leave
mov
dec
addr16
insb
and
in
sub
adc
push
and
push
pop
or
fs
nop
shlb
pop
loope
xchg
je
aam
les
inc
nop
cmp
aaa
mov
or
inc
aam
sub
loop
jnp
lock
sbbb
ja
adc
mov
insb
out
mov
mov
rolb
mov
mov
xchg
fwait
add
mov
std
insb
out
cmp
and
scas
mov
jne
test
xchg
pusha
outsb
hlt
jno,pn
lock
sub
loope
pop
xchg
mov
into
adc
inc
jecxz
mov
mov
js
cwtl
subl
sar
push
cmp
add
call
loop
dec
mov
inc
jno
mov
pop
repnz
test
and
inc
sbb
jae
xchg
mov
xor
push
gs
cmp
imul
addr16
daa
xchg
scas
in
sub
cmp
sub
add
aaa
sahf
dec
arpl
ret
mov
pop
jae
addr16
loope
jno
fldt
lock
or
iret
jbe
and
cltd
sub
fistl
xchg
dec
fwait
push
scas
imulb
dec
repz
mov
cmp
lds
xchg
jle
scas
mov
ljmp
cmp
out
cmp
push
inc
int3
test
mov
pop
mov
nop
add
stos
ja
sub
and
popf
add
xor
jne
lahf
xor
pop
imul
loop
cmp
aas
add
shll
push
call
push
mov
jno
lea
ljmp
fistpll
push
xor
insb
sub
aam
enter
popa
or
xlat
xor
ja
xchg
or
sub
lcall
pop
adc
jle
aam
cwtl
inc
loope
jno
scas
movsb
loope
xchg
and
xchg
fisubrl
mov
push
cwtl
mov
repnz
dec
data16
insl
pmuludq
std
jbe
cmp
cmpl
add
push
or
sbb
inc
jns
cld
or
mov
lods
faddp
pop
push
setno
mov
mov
movsb
xor
les
test
adc
sub
insb
dec
shrl
push
jns
sbb
adc
inc
dec
dec
pop
add
cmp
sub
es
fdivrp
sbb
test
xlat
scas
pop
in
sbb
test
xor
cmp
mull
imul
sbb
sub
cmpsb
jnp
testb
mov
cmp
sti
test
loopne
stos
call
in
stos
adc
test
jo
jecxz
mov
popf
cld
mov
push
mov
pop
sbb
insb
addr16
inc
cmpsl
mov
aad
mov
pop
and
std
pop
pop
addr16
jl
jg
movsb
mov
shrl
push
enter
leave
pop
arpl
daa
std
jne
fsubrs
add
pop
mov
add
loopne
rcrb
jnp
cmc
or
add
xchg
mov
stos
scas
out
adc
mov
xchg
out
xor
sahf
iret
inc
add
mov
into
pop
aam
push
cld
cmpsl
pop
ljmp
cs
inc
push
shll
xor
lret
loop
mov
notl
lds
imul
divb
filds
lock
les
stc
push
jo
repnz
mov
mov
js
rclb
gs
pop
dec
cmp
ja
xlat
sbb
into
pop
push
popf
clc
ret
inc
pop
aam
cmp
iret
movsb
mov
push
cmp
mov
or
ljmp
pop
cmpsb
imul
and
xor
insl
out
sub
jbe
inc
in
push
sbb
lods
lods
fisttpll
loop
shrb
sbb
fnsave
mov
lret
out
in
ret
sub
es
fcmovne
mov
push
lret
or
mov
sarl
cltd
out
imul
push
jae
push
test
aam
xorl
cs
mov
inc
jb
adc
dec
rorb
add
out
jp
push
mov
cmp
sbb
cmp
loopne
jl
cmpsl
add
jg
sub
adc
mov
mov
call
jo
ret
push
or
mov
mov
add
jne
xchg
movsb
pop
pushf
add
xchg
mov
pop
nop
int
outsl
aad
xor
inc
sbb
loope
lods
iret
xchg
add
mov
fstps
or
add
inc
pushf
std
xchg
and
ljmp
pop
pushf
lea
addr16
movsb
jae
inc
imul
push
loop
stos
cmp
fadds
pop
not
inc
scas
data16
mov
jg
mov
das
mov
inc
fdivrs
jae
loop
fcmovnu
mov
ljmp
fsub
lds
sbb
mov
mov
pop
int3
imul
mov
iret
stc
jno
popa
jmp
cli
xor
lret
rol
inc
xor
lahf
jmp
test
pop
mov
aad
movsb
inc
add
lds
jbe
lahf
xor
insl
xor
insb
dec
shll
enter
test
jmp
mov
jo
ds
outsl
or
jns
sti
jbe
mov
je
pop
or
loopne
es
dec
pop
flds
push
dec
inc
xchg
add
xchg
push
rorl
xchg
pushf
out
sbb
imul
ret
push
jmp
pop
vpmaxub
int3
adc
or
sbb
cli
jmp
sub
push
gs
add
pop
adcb
cmp
ret
push
pop
sub
xor
add
jl
jnp
mov
lahf
orl
push
inc
lods
mov
lahf
scas
cmp
mov
mov
stos
les
mov
aas
pusha
pop
rorl
mov
xor
jo
mov
mov
stos
in
push
les
enter
and
sbb
xchg
pop
dec
movsl
push
mov
push
ljmp
dec
add
pop
clc
idivb
std
sahf
icebp
jecxz
in
ret
bound
mov
jmp
push
les
dec
movsb
arpl
sbb
mov
or
sub
mov
imul
or
les
add
roll
dec
out
inc
sub
or
adc
mov
pop
daa
push
xor
adc
sahf
hlt
pusha
scas
sub
dec
push
pop
and
les
jno
pop
imul
cmp
ljmp
push
enter
js
or
jb
frstor
fdivrl
mov
nop
mov
mov
sahf
loop,pt
in
cmp
or
ret
arpl
sahf
adc
add
jecxz
rcrb
addl
cmpsl
inc
out
pushf
sahf
inc
cmpsl
lea
jp
clc
and
jg
mov
mov
or
push
pop
std
repnz
ja
cmc
mov
loope
inc
shrl
mov
nop
ret
mov
js
cltd
and
aas
clc
cmc
mov
ja
pop
scas
test
add
mov
movb
sbb
pop
xchg
mov
adc
inc
ret
and
fadd
jl
jmp
pop
pop
sbb
mov
xchg
dec
add
xchg
cmp
and
xor
aad
xorb
sbb
aas
ja
push
pop
outsl
imull
jg
sbb
mov
stos
push
int3
popf
js
adc
shlb
push
out
sbb
inc
cmpsl
and
xchg
test
subb
les
hlt
lock
gs
pop
mov
push
xor
mov
pushf
pop
ds
rcrb
jecxz
addr16
mov
pop
push
xor
aad
xor
aam
mov
lds
fdivl
cwtl
negl
or
cmpsl
cmp
mov
pop
inc
mov
sahf
sub
pop
mov
mov
dec
pop
loopne
push
push
lret
push
imul
aas
inc
fcompl
decb
sbb
out
repnz
cmc
dec
xchg
pop
stos
xchg
int3
fists
dec
int3
rcr
lods
push
lock
lods
cmp
xchg
push
jo
jmp
jmp
jl
xchg
dec
aas
or
adc
testb
clc
cmp
pop
adcl
jl
dec
icebp
aaa
pop
mov
das
adc
push
lret
sbb
out
faddp
jns
aas
lods
ds
nop
jnp
rclb
dec
jne
jns
sti
xor
and
mov
xlat
xchg
scas
mov
mov
cs
loope
cmpsb
jmp
stos
xlat
mov
mov
jo
daa
jnp
mov
icebp
loop
xchg
into
pop
push
rcrl
test
imul
dec
sbb
add
loope
or
sarl
add
int
fcmovu
pusha
out
xchg
mov
pop
insl
pop
mov
cmp
shlb
add
loope
clc
xchg
je
sub
std
sub
jecxz
xlat
into
je
inc
cmpsl
in
out
andb
fldt
push
lret
xor
pop
inc
push
outsb
jae
jo
fisttps
lock
inc
adc
insb
mov
mov
ret
lock
jp
adcl
or
mov
xchg
test
popa
ss
lock
in
jecxz
mov
aaa
das
test
aam
gs
je
data16
dec
jne
or
aad
jno
push
ret
sar
out
add
repnz
mov
jo
sarb
sarb
inc
add
pusha
lret
in
cmp
hlt
movsb
std
push
cli
scas
push
daa
movsl
shll
mov
pop
nop
rcr
pop
push
xor
dec
stos
pop
shlb
ret
fstl
dec
das
jo
popf
mov
sbb
jno
pusha
jne
inc
ret
sub
xchg
daa
sbb
scas
mov
test
dec
cbtw
or
fsubp
xchg
lcall
clc
push
js
push
jp
cmpsl
mov
jp
into
lods
out
ss
ss
and
ja
adc
adc
adcb
addl
pop
push
aam
adc
aaa
aad
rorl
shlb
fbld
inc
lea
ja
dec
lret
xor
daa
aam
ljmp
dec
xchg
dec
add
xorl
push
daa
add
dec
shlb
pop
shll
repz
imul
gs
enter
stos
in
cmp
testb
cmp
les
test
mov
add
fidivl
shrb
push
add
arpl
or
ljmp
adc
dec
sbb
jge
cs
gs
ss
fldl
jmp
jo
dec
add
add
pusha
jns
fiadds
fldt
out
mov
adc
add
nop
add
data16
daa
xor
je
jle
divl
cwtl
stc
xchg
jp
cmpsb
mov
mov
dec
int3
inc
gs
sar
add
adcb
imul
xlat
mov
mov
xlat
mov
cld
sub
xchg
inc
bound
xchg
aaa
lock
pop
jl
sbb
pop
fwait
pop
sbb
out
inc
jb
vmread
cmc
fadd
sub
addb
add
aas
std
jmp
ja
mov
or
subl
jecxz
fisubs
jmp
jne
jle
xchg
rcll
or
dec
cmp
outsl
xorb
push
mov
repnz
add
mov
add
push
inc
add
addr16
or
and
mov
sbb
mov
stos
adc
cmpl
mov
sub
inc
pop
mov
in
into
jne
xchg
cmc
jp
ret
imul
ret
inc
and
testl
lea
sbb
divl
push
scas
out
imul
lock
inc
ja
enter
push
loopne
push
sub
mov
xchg
mov
and
adc
add
inc
int
ja
in
aam
jmp
jmp
mov
int3
in
xchg
sbb
sahf
addl
jge
jno
sub
jmp
cmp
mov
in
inc
mov
mov
mov
push
fiaddl
jg
int
lods
es
dec
mov
jnp
jo
sub
lods
gs
dec
jmp
pop
loope
dec
icebp
add
nop
sub
ret
cs
cmc
or
aas
sbb
inc
pop
or
jbe
adc
push
push
sti
xor
test
shll
inc
movsb
jno
insb
popf
cmp
dec
sbb
mov
mov
cmp
lcall
mov
xchg
cmpsl
inc
fs
mulb
cwtl
aam
jg
pop
loop
inc
fs
loope
dec
lock
cmpsb
cmp
xchg
cli
ret
aas
and
adc
mov
sub
pop
xchg
aaa
ljmp
cmp
xchg
adc
fsubs
jbe
insl
mov
jns
sub
lds
out
jmp
dec
pusha
or
rclb
add
rolb
xlat
sub
pop
jb
push
cmpsl
jecxz
mov
incl
lock
xchg
cmp
imulb
movsl
call
push
or
sti
and
fldenv
pop
jae
dec
icebp
and
xlat
push
int
outsb
mov
jno
daa
push
or
pop
mov
adc
jl
lock
mov
into
sub
sti
cmp
jno
sub
loopne
jno
js
jnp
mov
jne
or
pop
sarb
outsl
fmull
rcrb
leave
lock
inc
mov
lock
mov
cmp
fdivrl
cs
idivb
cmpb
incb
sahf
and
insl
sub
dec
sbb
mov
fcoms
popa
cs
bound
or
lahf
jp
mov
imul
test
adc
push
ret
pop
push
cmc
cmp
mov
js
mov
mov
rcl
or
push
fmul
push
pop
jnp
push
cmp
daa
addr16
arpl
fwait
in
clc
shr
aam
ljmp
outsb
pop
into
jge
lea
xor
insb
mov
iret
mov
or
leave
xchg
inc
mov
mov
fsubl
stc
jg
mov
ss
cmp
mov
push
xchg
push
stos
add
sahf
cmp
sub
add
or
es
addr16
fs
repnz
lods
add
fwait
xchg
push
xor
sbbb
sub
xchg
mov
cmp
and
mov
addr16
dec
in
cmp
inc
insl
mov
outsl
inc
mov
inc
into
xchg
xchg
jp
sbb
out
stos
lods
pop
jne
or
mov
adc
pop
daa
sbbb
std
xor
or
push
js
arpl
int
cltd
jge
dec
insl
call
cmove
in
dec
mul
jmp
xchg
adc
pop
stos
push
cmp
sub
mov
mov
and
mov
pop
inc
in
sbb
sbbb
add
sbb
pop
outsw
push
add
js
sub
jnp
int
mov
arpl
mulb
movsb
xchg
popa
pop
mov
mov
lret
push
lds
push
imul
mov
push
or
xor
cmp
jae
adc
push
int3
das
divb
push
lret
mov
lcall
mov
cmpsl
jno
ljmp
rcl
sbb
adc
mov
sahf
mov
mov
dec
add
into
mov
xchg
ficomps
andps
fstpl
cmp
fs
fisttpl
repz
pop
ja
mulb
inc
add
stos
mov
das
and
inc
ss
nop
iret
mov
xor
add
mov
imul
jnp
in
fimuls
mov
call
cmpl
jmp
sbb
pop
ds
mov
sbb
push
sar
pop
outsl
dec
mov
movl
scas
int3
jne
sub
test
cmp
les
push
rolb
mov
jb
cmp
loope
fst
enter
call
inc
test
mov
cmp
mov
cmc
push
addr16
jae
fwait
push
loope
mov
or
xor
sbb
jmp
call
testb
arpl
xchg
mov
jbe
sub
push
cltd
les
aam
jmp
jg
mov
xor
and
push
mov
aam
out
loope
push
xchg
mul
mov
jl
mov
mov
xor
cmp
int
push
subb
mov
pop
adc
bound
out
cltd
mov
mov
addr16
add
xor
add
jmp
dec
dec
scas
pop
jle
std
inc
mov
xor
add
test
int3
loopne
push
mov
out
or
mov
es
adc
call
sbb
ds
lahf
enter
xchg
add
mov
push
scas
or
aaa
adc
sahf
rclb
add
shrb
shl
jns
loope
fsubs
in
and
cld
mov
or
lea
add
pop
movzbl
cs
or
sbb
ret
cmp
inc
add
sbb
pop
and
in
cld
aam
fldcw
into
test
pop
and
test
mov
outsb
adc
aad
ret
out
push
push
addl
mov
aas
jge
cmp
jle
sub
repz
push
cmp
jo
cmc
cmp
stos
lret
or
adc
push
sub
inc
popf
or
push
int
mull
jmp
fisubl
scas
mov
xor
ret
dec
pop
out
xchg
cld
fcomps
xchg
push
enter
inc
push
mov
lock
sbb
xchg
inc
xor
lds
fucomp
add
scas
mov
scas
bound
in
sub
fiadds
adc
push
rcl
repnz
dec
sub
adc
aaa
mov
daa
int3
imul
fcmovnbe
mov
mov
xchg
outsl
adc
sbb
sti
push
mov
bound
pop
out
int
jecxz
and
sbbl
lods
mov
dec
outsb
ss
mov
xchg
call
imul
or
pop
ficoml
sbb
xchg
imul
mov
push
pop
push
mov
lret
fmull
imul
add
sub
popl
mov
imul
mov
jge
pop
xchg
mov
mov
inc
sti
pop
das
into
pop
sahf
stc
mov
xchg
loopne
rcrl
pushf
ss
loop
scas
push
lahf
aam
test
popf
insb
xlat
rcl
lret
mov
ret
aaa
add
inc
int
xchg
movsb
pop
pop
jae
and
and
mov
mov
inc
pop
ljmp
cmpsl
je
enter
sbbb
inc
add
xchg
lahf
test
push
pushf
es
mov
out
inc
arpl
xor
js
xor
enter
mulb
push
mov
add
pop
loope
mov
and
insb
into
and
mov
std
test
aad
into
mov
xor
lods
mov
repz
dec
sub
sub
dec
mov
add
enter
test
je
jle
lret
cltd
mov
out
enter
cli
fnstenv
testb
pop
inc
rcrb
mov
icebp
mov
sub
pop
nop
lods
rcll
jmp
stc
xchg
add
and
add
gs
cwtl
test
and
ds
mov
inc
fdivs
xor
stos
adcb
repnz
jecxz
xchg
dec
stos
mov
sbb
cld
stc
loope
fcomi
push
cmp
mov
push
push
mov
inc
mov
jle
xor
pop
movsl
stc
std
ja
xor
mov
push
cmpsl
outsl
movsb
lock
adc
into
jno
push
or
or
lock
sub
clc
jge
ja
adc
or
test
and
push
ljmp
and
inc
jge
ja
pop
push
mov
lahf
add
mov
fwait
sub
std
das
mov
lahf
add
nop
sub
inc
or
xchg
aas
les
push
push
push
xchg
lea
add
dec
ja
cmp
push
push
aaa
es
outsb
mov
xor
icebp
mov
popa
aaa
sbb
jl
aaa
js
and
daa
imul
add
repz
xchg
into
and
cltd
mov
loope
push
pop
popa
sbb
or
xchg
insl
insl
dec
pop
and
adc
jbe
add
jb
loop
loopne
inc
pop
adc
je
mov
faddl
pop
insl
in
repnz
stos
sahf
push
and
and
movsb
in
add
push
jb
pop
fcompl
adc
nop
out
xor
popa
movb
push
add
clc
dec
xchg
jge
mov
das
mov
scas
sbb
mov
aam
cmpsl
push
nop
dec
push
mov
jo
push
inc
add
dec
inc
testl
mov
adc
mov
sbb
mov
cli
sbb
testl
cmp
adc
sahf
outsl
add
mov
mov
iret
jbe
mov
cmc
jge
lods
xor
or
push
push
and
stc
inc
ret
cli
adc
xor
imul
repz
or
xor
mov
addr16
in
sub
mov
in
ja
mov
aaa
jg
adc
or
loop
xchg
jae
lods
push
jne
jae
test
and
je
ret
sub
stc
or
or
mov
mov
xor
lret
pop
push
out
cwtl
out
and
shrb
push
nop
cmc
mov
cmp
mov
cmp
jg
popf
and
test
frstor
xchg
push
mov
pop
repnz
xor
insb
cmpsb
sarb
mov
in
add
lea
iret
sarl
dec
test
add
lcall
cmp
xchg
xor
xor
aaa
stos
sbb
xchg
sub
fwait
shlb
xchg
je
sub
in
jb
ret
lock
dec
xchg
mov
xchg
xor
xchg
xor
fidivrl
push
ss
mov
lods
addr16
jmp
sbb
mov
dec
aam
pop
daa
jo
je
jno
addr16
imul
push
mov
xorl
push
sbb
ret
dec
or
icebp
mov
decl
addr16
test
sbb
mov
push
popa
add
outsl
pop
into
lahf
jg
push
add
xchg
mov
add
or
mov
daa
repz
add
call
xchg
rolb
dec
jp
sbb
in
mov
mov
rorb
imul
xor
outsb
fnop
dec
loopne
sbbb
es
mov
or
jmp
test
mov
fisttps
daa
fwait
fwait
mov
adc
pop
leave
popl
daa
leave
xlat
dec
mov
test
shll
inc
int3
xlat
imulb
hlt
jnp
iret
pop
insl
lret
jecxz
ljmp
fcomps
inc
adc
mov
aas
xlat
pop
mov
cmp
lahf
ja
rclb
out
cmp
mov
je
push
sti
mov
add
or
dec
loope
cmpsl
inc
pop
cltd
cmp
push
sub
loope
pop
xchg
sbb
cmp
std
test
sub
lods
in
dec
imul
in
data16
adc
dec
lds
js
gs
outsb
lret
xchg
fcompl
mov
jns
inc
repz
push
xor
pop
aad
mov
jmp
pop
ret
lods
sub
outsl
mov
push
cmp
cmp
lea
nop
js
xor
movsl
lock
pop
in
mov
aad
filds
lods
and
pop
aad
and
or
cmp
and
lcall
ret
aam
inc
std
rcr
dec
mov
mov
jns
subb
loop
adc
into
stos
ljmp
dec
jbe
fists
out
aas
push
aas
leave
adc
arpl
adc
inc
insl
aam
lcall
cmp
loope
dec
stos
sub
mov
cli
dec
dec
jle
ret
jge
fstpt
or
mov
xchg
jae
lea
inc
sbbl
or
test
clc
dec
pop
test
mov
int
lahf
je
hlt
mov
les
mov
pop
lds
jno
movl
push
pop
pop
jle
add
mov
cmp
xchg
xor
xor
xchg
test
dec
xchg
fdivs
loop
push
mov
sub
lret
adc
inc
sub
imul
dec
mov
add
jle
sub
mov
mov
sbb
jp
pop
mov
shrb
cs
mull
dec
push
jg
cld
insl
int
cmp
sbb
clc
outsl
or
aam
roll
pop
iret
and
movsl
adc
mov
out
pop
fiaddl
and
sub
sub
dec
pop
cmpb
push
pushf
adcl
in
lahf
jge
mov
xor
out
inc
push
loop
xchg
in
out
add
arpl
std
or
shl
popf
cmpsb
hlt
sahf
inc
mov
xor
cmp
cmp
shl
mov
movsb
sub
mov
shlb
arpl
or
arpl
fstpt
lcall
xlat
mov
mov
icebp
xor
add
movsb
adc
incl
dec
and
push
ljmp
inc
sub
inc
jb
or
lret
ja
in
fstpl
xor
xor
jno
in
bswap
xchg
mov
cmp
jmp
out
iret
jo
into
add
sahf
dec
call
adc
test
out
pop
pop
scas
shll
push
mov
mov
lret
test
sub
js
es
inc
mov
mov
data16
sub
push
jbe
loopne
inc
adc
jbe
sub
cmc
es
lahf
fwait
shlb
sub
pop
cltd
cwtl
cli
rcr
cmp
imul
and
outsb
mov
mov
jnp
xchg
aas
dec
stos
xchg
jmp
inc
pop
cmp
inc
cmc
add
scas
test
data16
sub
mov
mov
mov
inc
mov
data16
dec
and
adc
enter
nop
mov
cmp
dec
popf
sub
les
lock
out
insl
mov
in
je
ds
outsl
ljmp
cld
add
fs
jmp
adc
insb
in
fcoms
lahf
mov
fiadds
pushw
mov
sub
sbb
imul
push
sarb
imul
dec
lahf
out
aad
push
or
gs
out
mov
jae
fdiv
fdivs
mov
sub
sbb
scas
dec
sbb
dec
test
xor
es
inc
stos
mov
out
inc
adc
stos
sub
out
icebp
lret
sub
mov
push
dec
jle
adc
imul
inc
sbb
sbb
dec
adc
fisubrl
shll
fsubl
mov
mov
xor
std
popf
cld
cmc
push
and
adc
mov
enter
movsl
mov
scas
fcomps
and
jl
cmp
and
out
testl
mov
push
int
pop
add
std
jg
lds
ja
dec
out
or
addr16
fisttpl
push
rcrl
orps
cmp
fmuls
cmp
add
in
add
leave
or
mov
out
mov
shlb
adcl
xchg
in
pop
lds
jns
lods
or
stos
mov
and
jbe
sahf
mov
movb
dec
or
pop
xlat
rorb
jne
mov
cs
jb
cs
jmp
pop
out
mov
sub
sub
test
push
mov
xor
stos
jecxz
sbb
repnz
push
push
inc
or
push
aam
movb
arpl
arpl
xor
mov
add
mov
aam
push
loopne
sti
sbb
maskmovq
imull
or
add
mov
jg
inc
add
or
xchg
push
sub
xor
ds
js
fs
xor
push
out
dec
cmp
push
je
jnp
push
orl
push
call
dec
add
adc
fstl
push
mov
add
outsl
inc
jg
and
xchg
gs
stos
data16
jns
fwait
adcl
inc
jo
jmp
pusha
lret
dec
or
in
jle
loop
cltd
pushf
and
out
scas
das
push
jno
inc
loope
jne
int
mov
pushf
loope
mov
mov
xchg
adcb
lock
push
iret
jge
jp
in
jp
cmp
imul
test
orb
sbb
jle
add
mov
lods
cmp
int
cmc
shr
mov
mov
call
sub
fldt
rsqrtps
sub
mov
push
sbb
push
push
adc
outsl
orl
xchg
int3
mov
dec
push
cwtl
sbb
add
nop
adc
xor
stc
mov
dec
aaa
inc
test
pop
sub
in
je
ljmp
dec
lcall
mov
aaa
cmp
loope
cld
add
rclb
sbb
cmp
cli
gs
scas
ds
scas
mov
dec
and
sbb
pop
call
insl
sub
jmp
xchg
lods
mov
xor
inc
push
xor
mov
popf
inc
ret
test
pop
sub
andl
aad
xchg
xchg
and
inc
outsl
push
mov
mov
fdivrp
scas
adc
outsb
jb
jecxz
inc
add
pop
repz
imul
loopne
xchg
ja
mov
insl
nop
and
inc
inc
dec
lahf
hlt
clc
xchg
icebp
sub
cmp
adc
das
adc
ss
pop
mov
xor
ret
lods
in
dec
pop
pop
sub
je
into
mov
addr16
sub
sub
add
fs
mov
add
sub
add
cmp
das
dec
in
xchg
insb
jno
mov
cmp
jno
push
fidivrl
xchg
mov
popf
push
fmuls
or
mov
jge
mov
loopne
sbb
xchg
sbb
nop
or
pusha
mov
ljmp
jmp
lock
mov
jp
lahf
add
lds
repz
fs
loope
mov
and
ds
rol
fisttps
test
dec
add
xchg
fucomi
cmpsl
mov
lret
push
cmp
lret
cld
jnp
inc
nop
mov
pop
jl
mov
push
ret
outsb
xlat
or
sbb
dec
repz
pop
imul
lods
jns
imul
iret
and
je
iret
rolb
push
loopne
fsubrs
in
or
in
jge
aas
inc
xlat
subb
mov
or
out
aad
addr16
test
push
push
mov
cmp
fcmovu
aas
je
pop
adc
aaa
fstps
xchg
mov
add
xlat
xchg
cmpb
sub
sti
mov
pop
xlat
std
fwait
push
push
test
in
xor
cmpsb
dec
mov
mov
mov
cmp
and
adc
daa
scas
gs
inc
pop
xchg
insl
sub
addr16
cmc
inc
les
cmp
testb
insb
rcl
fwait
sub
adcl
push
pop
add
lcall
push
mov
cld
xor
jle
mov
xchg
xchg
jmp
adc
ja
adc
jmp
je
stos
mov
and
adc
add
aad
mov
mov
mov
dec
dec
inc
faddl
pusha
movsl
nop
lret
xchg
arpl
dec
fneni(8087
mov
scas
add
mov
sub
lock
roll
frstor
repz
mov
fisubrl
addl
fidivs
lods
cltd
insb
lcall
push
jmp
sahf
out
into
pushf
jns
pop
aad
jne
stc
movl
cmp
xchg
test
lock
jg
shlb
adc
les
stos
loop
pop
push
cmp
add
or
mov
mov
insb
rcll
loopne
jmp
test
sbb
ds
daa
pushf
push
sti
gs
dec
in
dec
dec
repnz
lods
aam
leave
das
cli
sbb
jmp
jp
adc
lods
lock
cmp
cmp
ret
test
das
ficompl
sti
test
xchg
and
mov
push
mov
and
shlb
popa
stos
push
pop
mov
jb
pusha
stos
inc
mov
cltd
inc
dec
scas
jno
stos
pop
mov
xor
xchg
int3
outsb
loope
jl
adc
dec
jle
mov
jecxz
lods
sbb
adc
push
cwtl
popf
adc
and
in
jecxz
mov
pop
or
jne
xor
mov
adc
mov
aad
jp
test
mull
out
xchg
scas
sub
cmp
mov
mov
dec
lcall
test
dec
mov
ss
cld
mov
inc
std
sbb
inc
inc
lea
ds
insb
js,pt
cmp
or
pop
jne
movsl
push
adc
adc
out
dec
sub
xchg
stos
dec
mov
push
cld
loopne,pn
clc
fidivrs
jle
das
movsl
xchg
push
xchg
pop
stos
sub
xor
test
xchg
mov
inc
mov
lcall
clc
jnp
cld
mov
mov
push
in
out
mov
and
js
or
xchg
or
test
scas
lret
cmpsb
jg
movsb
int
xchg
cmp
leave
std
js
icebp
pop
in
xchg
sbbb
test
in
je
dec
adc
sub
push
push
and
push
jnp
je
js
cmp
mov
fsubl
or
cmp
pop
icebp
push
jl
xchg
sub
repnz
push
jae,pn
lock
fucom
fstpt
nop
sub
test
sub
cli
movsl
xor
pop
lock
outsb
xor
mov
jmp
or
pop
insb
adc
mov
iret
mov
pop
or
scas
dec
popf
lcall
and
cmp
es
jae
xchg
jg
xchg
inc
cmp
jae
and
and
mov
push
push
fucom
xchg
in
sub
push
mov
mov
adc
xchg
out
test
fs
push
sbb
lret
or
mov
push
aam
lock
cmpsb
aad
enter
sub
pop
jne
out
sbbl
test
lock
sub
xchg
sbb
or
sbb
inc
mov
fstl
lods
pop
sbb
add
pop
lret
mov
insb
lcall
sub
mov
lcall
dec
adc
and
pop
xor
or
out
or
xchg
push
cmp
sbb
jne
jle
lret
lods
mov
lods
push
mov
pop
leave
jae
subb
add
and
not
mov
xchg
dec
or
adc
shrb
popa
mov
xor
push
jnp
shlb
mov
xchg
mov
adc
std
inc
mov
cmc
aas
fnstsw
adc
mov
xor
das
aam
dec
popa
cwtl
mov
and
xor
inc
in
sahf
lods
js
outsl
push
hlt
jp
sar
xor
jbe
ret
jecxz
mov
lods
pop
push
cmp
or
push
data16
mov
cmp
aam
cmp
out
shlb
arpl
xchg
sub
jge
add
push
inc
mov
push
lret
lock
ljmp
loopne
and
dec
sahf
fwait
or
fiadds
lods
stc
fwait
mov
mov
inc
mov
cs
inc
xchg
adc
xchg
jbe
and
xchg
sbb
jge
dec
std
push
mov
popa
mov
fcmovu
je
mov
shll
and
dec
push
mov
cmp
int3
xchg
dec
mov
and
fadds
inc
inc
push
add
scas
nop
xchg
add
dec
sub
mov
mov
jl
and
jo
imul
and
cmp
mov
mov
popf
jge
leave
fsubrp
xchg
shrb
in
sub
jle
sbb
pinsrw
lahf
sbb
fwait
in
andl
nop
dec
imulb
bound
in
es
out
ja
and
inc
arpl
sti
icebp
shlb
faddl
mov
int3
int3
jge
cmp
jl
dec
jne
popa
jle
jmp
in
xchg
cs
shll
test
inc
dec
imulb
iret
xchg
arpl
nop
lea
ret
adc
cmpsb
clc
fstpt
leave
xchg
addl
aaa
add
fsubrl
adc
shll
sbb
dec
sbb
fistpll
sub
pushf
mov
cs
insb
xor
nop
add
xlat
gs
cmp
lret
sbb
add
out
add
cltd
jnp
call
jne
out
std
push
mov
out
sub
cmc
mov
stos
xchg
testb
jbe
mov
ljmp
aaa
sub
adc
inc
or
lahf
iret
mov
xchg
ds
stos
repz
in
scas
fildll
and
mov
movsl
bound
leave
repz
daa
ret
pop
mov
ret
cmp
out
mov
xchg
pop
dec
fs
push
stos
dec
mov
pop
ja
je
testl
sahf
enter
pop
lret
push
dec
icebp
sbb
fstl
mov
pusha
addr16
lds
fwait
std
push
movsl
popa
push
rcll
loope
es
sub
mov
xchg
push
push
dec
push
sub
sbb
out
jecxz
mov
add
sbb
ds
or
dec
xor
into
aad
outsb
sub
jmp
ja
dec
adc
loopne
lods
sbb
mov
sbb
mov
dec
mov
adc
loop
int3
jo
sub
outsl
push
enter
je
mov
loope
scas
stos
jns
xor
hlt
mov
inc
idivb
mov
sub
xor
mov
adc
push
iret
jbe
cmpsb
decb
mov
inc
add
and
in
into
adc
rorl
xchg
loope
adc
arpl
fstpt
mov
xchg
and
push
shrl
pop
cmp
hlt
cs
dec
jle,pn
sub
sub
ljmp
xchg
aas
popa
popa
sahf
dec
gs
inc
push
ret
shlb
xchg
movsl
sub
sbb
mov
bound
adc
push
or
and
mov
sub
neg
dec
wbinvd
inc
fsubl
ret
mov
cwtl
test
sahf
mov
shlb
lret
fs
maskmovq
jp
and
pop
test
xchg
cmp
rcl
cld
mov
lock
in
stc
mov
insb
dec
gs
mov
mov
jle
mov
lea
mov
shll
ret
xor
xor
push
jno
cmpl
sbb
mov
test
stos
mull
inc
add
jbe
cmp
jp
and
xlat
xchg
iret
add
and
add
pop
sti
adc
test
inc
jnp
test
or
jb
xor
ret
scas
pop
out
xchg
les
pop
fwait
gs
jns
cmc
mov
jl
push
arpl
cmp
mov
sarl
addr16
fistpl
pop
sahf
outsb
mov
adc
outsl
out
lret
ja
lods
push
xor
push
imul
sbbb
adc
sti
cmpsb
pop
lods
xlat
fmuls
testl
jge
adc
mov
lock
fucomip
int3
push
dec
hlt
fistpll
sti
ja
jge
sub
dec
xchg
lahf
inc
lea
mov
jns
scas
inc
testb
fdivs
shl
mov
sbb
pop
mov
mov
dec
std
and
out
mov
cltd
lahf
and
adc
je
ja
daa
cmp
dec
jl
or
addr16
inc
sbb
xor
dec
fwait
adc
test
gs
stc
lcall
ljmp
dec
inc
cmp
cmp
push
lods
jge
sub
pop
repnz
shl
mov
fcoms
ja
xchg
fcomi
and
jo
sbb
xchg
repz
rorl
sbb
nop
push
icebp
sbb
adc
push
jge
dec
cmpsb
inc
mov
mov
pop
push
dec
and
popl
xchg
or
cmp
xchg
sbb
scas
push
mov
lock
pop
adc
cmp
loopne
cmp
aam
bound
icebp
push
stos
das
arpl
adc
inc
mov
jae
in
lret
or
test
push
cltd
pop
fdiv
mov
test
cs
iret
xchg
push
ss
ret
pop
sbb
dec
or
add
and
lods
dec
int
or
cmp
mov
mov
pop
add
mov
sarl
sbb
lret
into
imul
xchg
mov
popa
rcrb
jns
clc
mov
jecxz
sti
imul
dec
lret
leave
pushf
incb
mov
push
imul
mov
lahf
xchg
and
addr16
xor
aad
test
jp
aas
cld
rcrb
mov
xchg
or
lret
jnp
dec
lock
enter
call
inc
cmp
lret
push
push
loope
mov
ja
cli
nop
pop
sbb
jg
rorl
mov
subl
shlb
cmp
mov
sub
sbb
mov
sbb
pop
jp
inc
bound
jne
scas
mov
mov
ds
adc
cmpsl
jmp
push
push
subb
inc
push
popa
ja
sbb
enter
call
adc
cmpsl
pushl
mov
adc
and
inc
hlt
jo
cwtl
add
pop
pop
rcrl
dec
subb
scas
dec
out
cs
mov
call
scas
es
in
cmp
int3
mov
adc
imul
js
cmp
push
mov
sub
movsb
outsl
xor
xor
cmp
dec
inc
push
stos
xchg
fimull
pop
push
xor
xchg
push
scas
fwait
stos
inc
xchg
or
sub
xchg
xlat
es
jmp
or
pop
dec
adc
daa
jge
clc
pop
xor
loope
outsl
in
ds
jl
ret
jb
sbb
ljmp
mov
sbb
inc
jecxz
mov
xor
sub
mov
js
sahf
cmp
or
in
adc
dec
and
inc
sbb
imul
stos
sbbb
insb
dec
imul
cld
jl
out
cmpsl
mov
in
adc
dec
adc
xchg
or
fwait
andb
and
mov
and
lea
cmpsb
mov
adc
jle
lret
jne
or
mov
inc
fwait
shll
scas
inc
mov
inc
push
je
sub
mov
push
dec
push
nop
jbe
jecxz
lret
dec
mul
int
adc
cltd
adc
push
sub
push
inc
sbb
ret
mov
inc
inc
aaa
mov
push
mov
mov
cmpl
pop
mov
jg
sbb
mov
xor
sbb
adc
iret
sub
dec
cmpsb
push
dec
arpl
js
enter
add
popf
in
jbe
inc
mov
shlb
mov
xchg
push
xor
push
cwtl
hlt
jne
xchg
insb
loopne
and
jl
out
adcl
xor
sub
cld
shlb
mov
inc
jp
pop
dec
push
push
cmp
cmp
xor
inc
inc
sub
movsl
xlat
and
std
cwtl
insb
icebp
dec
int3
mov
jg
lret
or
enter
push
int3
scas
push
int3
jge
sarb
mov
and
imul
jle
sahf
xchg
int
add
lahf
out
jns
fs
cmc
aas
jp
xor
movsl
cmp
push
push
bound
rcrb
lods
fsubp
xchg
jmp
fs
divl
pop
xor
scas
pop
xchg
mov
dec
test
mov
cmp
add
fwait
pop
inc
xchg
or
sub
gs
jbe
aad
mov
je
sub
cmpsl
mov
xor
imul
adc
loope
test
gs
add
adc
push
cmc
mov
lret
dec
in
sbb
std
ret
aaa
dec
push
or
push
sbb
rolb
test
adc
or
mov
ret
cmpsb
xchg
scas
loope
lods
inc
push
mov
jne
aad
pop
repnz
movsl
int
ljmp
rclb
lcall
stos
movsb
and
or
fdivr
pop
sub
push
sub
mov
add
out
lcall
and
add
dec
mov
or
or
inc
add
repnz
mov
lds
sub
shrl
testl
rcrb
push
gs
cmp
cmp
mov
mov
jno
dec
ljmp
cmp
popa
in
inc
jb
dec
mov
frstor
out
es
lock
scas
jbe
jb
jge
imul
sub
and
loop
enter
aas
mov
cmp
jecxz
xor
xor
sub
jo
add
inc
or
xor
mov
stc
imul
popa
scas
cmc
inc
std
arpl
add
sbb
repnz
icebp
in
rclb
imul
mov
mov
cmp
xor
stos
es
xchg
aad
out
stc
cltd
jne
cwtl
ret
and
cmp
adc
test
mov
pop
sub
mov
and
ret
je
or
jmp
jnp
fldt
cltd
dec
scas
repz
in
mov
imul
test
mov
fwait
mov
jl
pushf
inc
insb
leave
mov
jge
mov
das
aam
dec
mov
addl
add
iret
dec
add
xchg
push
movsl
or
ret
incl
jecxz
repz
pop
popa
sbbb
out
add
adc
rorl
pushf
lret
pop
stos
or
das
pop
mov
insb
jns
fldenvs
cmp
scas
lods
or
les
lcall
jo
cs
outsl
mov
jb
sbb
repnz
out
outsl
fwait
mov
stos
shrb
leave
fldl
popa
push
and
jno
andb
fyl2xp1
jb
inc
sbb
mov
loopne
pop
add
arpl
mov
mov
fld
clc
movsl
pop
fists
cmpsl
int3
dec
les
pop
fstpt
and
fimuls
push
sub
mov
mov
and
fdiv
mov
push
xchg
adc
jl
negl
loop
mov
shrl
xor
sbb
and
popf
shlb
sub
cmp
dec
popf
sub
jo
cli
ds
fmuls
cmp
xchg
adc
jle
add
pop
fidivrs
ja
and
ret
dec
sbbl
mov
pop
lods
push
sti
mov
and
mov
cmp
lds
jmp
adc
lds
pop
mov
xor
add
adc
mov
test
int3
lcall
ljmp
pop
hlt
mov
int
and
ljmp
push
hlt
inc
pop
jge
inc
inc
fiadds
pop
mov
adc
xor
imul
in
mov
dec
cmpsb
aad
shll
iret
aam
sub
mov
adc
fidivrs
lea
mov
xor
jno
jecxz
xchg
int
cmpsb
sub
xchg
cli
int
es
lret
imul
adcb
fstl
sub
push
in
mov
add
pusha
ds
fldl
mov
mov
inc
jns
rclb
imul
divb
lcall
push
dec
rcrl
insb
jg
in
ret
aam
xchg
popa
jb
sub
cs
xor
jecxz
push
xor
pop
lods
mov
mov
xchg
adc
mov
xchg
jle
outsb
push
mov
add
xchg
rcrb
testl
add
clc
jnp
and
popf
or
jns
je
mov
sub
mov
mov
les
popf
notl
je
sarb
pop
push
sub
mov
and
adc
jmp
sub
subps
sarl
imul
adc
lods
fiaddl
sub
dec
add
xchg
fmull
sub
lret
andl
or
addr16
popf
add
test
fstpt
cltd
and
sbb
rcrl
test
int
bound
nop
dec
cwtl
inc
cmp
outsl
mov
repnz
sub
sarl
repnz
lea
xor
lock
sbb
xor
jg
mov
fdivrs
mov
inc
jl
push
adc
xchg
out
dec
test
pop
cmp
dec
jae
pop
and
scas
and
mov
add
mov
inc
fst
icebp
push
pop
inc
cmc
jae
fdivrl
mov
and
xchg
cmp
adc
rorb
sub
andb
jmp
repz
dec
mov
mov
test
cmpsl
fstpt
dec
mov
sub
jg
pushl
cs
movsb
pop
adc
je
xchg
add
outsl
push
negl
out
push
bound
cmp
add
fcmove
cld
out
mov
je
adc
inc
sub
push
jmp
or
inc
mov
imul
xor
jne
xor
outsl
test
and
rcl
stos
imul
ja
fistl
pusha
pop
ljmp
mov
rcrb
shrb
sbb
push
mov
std
int3
fildll
fiadds
mov
es
cmp
es
sar
or
pop
sbb
das
push
pop
dec
mov
ja
add
in
out
jg
cmc
std
xchg
mov
pop
aaa
and
xchg
pop
mov
dec
xorb
rorb
xor
mov
loope
sub
clc
xchg
sub
dec
lock
nop
dec
push
je
insb
sti
data16
cmpsl
mov
pop
lahf
les
rcrl
add
aad
inc
cmp
repz
mov
dec
call
jae
pop
pop
aam
out
dec
sbb
in
cmp
mov
cltd
cmp
push
jp
mov
sub
mov
pop
mov
cmp
pop
loope,pn
or
inc
jecxz
lret
mov
push
sahf
sbb
sbb
icebp
aad
sub
stos
and
fwait
mov
push
push
mov
and
subb
mov
sub
cmp
pop
roll
jae
in
fistps
fldenv
inc
fiaddl
js
imul
push
mov
shll
jae
sbb
arpl
or
pop
mov
cmpb
insl
jle
mov
scas
lret
jp
orl
inc
ss
test
ret
ret
adc
push
nop
jb
mov
movsl
rcrb
enter
cs
divl
dec
or
mov
mov
in
idiv
jmp
inc
subl
ja
fsubrs
in
adc
adc
cltd
push
gs
push
cld
add
cltd
mov
js
addr16
in
scas
in
fistl
lret
lock
dec
insb
xchg
in
mov
dec
inc
adc
fldl
fsubs
out
or
xchg
or
aas
dec
pop
pop
lock
cltd
divl
dec
cwtl
and
cwtl
fcoms
call
addr16
mov
pushl
insl
lcall
push
cmpsl
xchg
dec
push
sbb
pop
or
sarb
adc
jmp
sub
fcmovne
pop
scas
rorb
mov
rcr
inc
stos
shll
lock
add
mov
js
jbe
mov
fstps
jnp
jnp
test
div
cmp
lret
xchg
pop
sti
or
dec
xor
mov
xor
es
push
decb
push
stos
lret
pop
je
outsb
xchg
push
arpl
insb
jae
fcoms
fisubrs
cmp
pop
pop
ret
sar
je
dec
lahf
rcrl
movsb
dec
cmpsl
fs
add
jns
stos
out
mov
sti
test
inc
adc
add
add
icebp
push
jb
cli
test
ds
scas
cmp
andl
jg
push
mov
lcall
mov
mov
pop
sub
push
pop
xchg
push
addr16
lods
push
mov
push
mov
cmc
mov
dec
cli
xor
push
loope
and
xlat
adc
mov
push
xor
adc
jmp
insb
ret
xchg
int
mov
mov
xor
sbb
dec
inc
hlt
add
pop
test
sahf
jb
add
xor
mov
pop
scas
xor
mov
or
scas
cwtl
xchg
daa
lds
cmpsl
and
push
push
shlb
shrb
popf
negl
sbb
and
and
mov
dec
cwtl
dec
leave
pop
mov
xchg
jns
mov
pop
shrl
and
loop
data16
cmc
pusha
insb
inc
loop
xor
inc
and
inc
pusha
mov
mov
fldl
negb
andb
cmp
outsb
add
add
adc
mov
out
int
in
dec
mov
repnz
loopne
shrb
mov
mov
aad
push
aam
push
fadds
leave
jbe
loope
outsb
pop
xor
and
test
stc
lock
mov
cld
lea
mov
adc
lret
push
sbb
jg
shrb
push
lds
pop
mov
or
cli
jns
sbb
cmp
xchg
ss
adc
push
jno
pop
dec
pop
sarl
add
call
ja
cmp
jle
sbb
sub
fidivrs
lock
or
lret
push
sub
adc
data16
sti
add
push
mov
data16
int
push
ss
icebp
inc
and
das
outsb
faddp
lds
cwtl
cmc
xlat
pop
add
pop
in
or
push
sbb
fdivr
mov
or
cmp
xchg
pop
cmp
add
popa
in
icebp
js
pop
das
dec
icebp
fdivs
rorb
or
sub
mov
cmpsl
and
sbb
inc
pop
or
inc
cmp
maskmovq
testl
loop
mov
ss
mov
hlt
xchg
mov
shrl
imul
loop
and
mov
shrl
xchg
icebp
fstl
ja
adc
imul
lret
add
push
mov
and
aas
stc
mov
and
lret
stc
mov
add
repz
hlt
jp
les
push
sub
rolb
cmc
add
repz
sub
pop
into
or
cmpl
fstps
mov
call
mov
in
jns
inc
inc
xchg
mov
mov
rorl
adc
and
das
push
mov
into
mov
mov
mov
push
shrb
daa
mov
xor
rorb
xor
mov
or
adc
in
stos
adc
push
jb
scas
lret
xchg
fnsave
inc
ja
loopne
xchg
sbb
sbb
mov
hlt
and
mov
xchg
shll
jmp
cld
movsb
data16
cmp
shll
clc
sub
pop
iret
xor
xchg
xor
sbb
mov
sub
subl
add
sbb
das
dec
mov
enter
adc
pushf
sub
xchg
and
cmp
je
dec
ds
mov
adc
mov
loope
call
lock
mov
jo
cld
in
add
int3
into
add
aas
and
divl
xorl
xchg
rorl
push
fs
mov
inc
pop
pop
mov
inc
std
out
jge
scas
es
fcoml
lret
arpl
cmp
push
je
mov
gs
leave
cld
dec
pusha
cmp
in
jae
lods
insl
sub
or
and
adc
jbe
lea
loope
fxch
jo
test
jne
mov
jne
sbb
popf
aam
push
loop
out
cmp
jae
jnp
dec
movsb
and
lret
dec
ljmp
and
cmp
jne
sub
adc
ljmp
jmp
es
and
into
and
or
inc
les
push
cmpsl
jb
pop
push
cmpsb
sub
xor
fxam
fisubrl
push
nop
jne
jo
lds
scas
jecxz
repnz
imul
lahf
adc
add
fcompl
lcall
push
mov
adc
sub
jmp
out
and
test
push
ja
out
xchg
daa
ficoms
sbbb
ds
orl
fists
cmc
pop
push
aaa
lahf
mov
shrl
leave
inc
in
das
sbbb
sbb
fidivrs
fucomi
sti
data16
sub
jno
jbe
stos
xor
aas
sbb
sub
test
fwait
jns
cli
out
and
or
jp
movsl
dec
adc
shl
add
leave
adc
add
imul
push
call
loopne
cmpsb
mov
rcrb
and
clc
decl
mov
adcb
lods
mov
mov
mov
dec
test
lock
sbb
cmp
cli
and
repz
cmc
lods
fst
icebp
sub
add
mov
xor
push
mov
inc
xor
and
imul
and
std
icebp
lods
jle
mov
ret
mov
lret
dec
cmp
and
push
loop
cmp
inc
addb
or
cmc
and
add
pop
inc
test
sub
sub
test
lret
aas
dec
add
add
out
jg
in
inc
movsl
incl
rol
test
movsl
aaa
mov
popa
sti
and
daa
and
mov
mov
add
popa
aas
movsb
imul
push
sbb
mov
cmpb
int
addr16
inc
out
into
dec
or
adc
icebp
mov
push
fimull
lret
mov
xchg
movsb
xor
and
fcom
mov
cmpsb
xor
in
fwait
ds
sbb
or
mov
lret
and
dec
fists
test
stos
mov
sub
add
adc
lret
outsb
jae
out
pop
data16
std
mov
lods
mov
adc
outsb
pop
jne
in
js
fdivrs
fadds
das
jbe
or
push
inc
gs
add
mov
mov
jl
in
test
dec
sub
and
mov
mov
mov
lods
xchg
repz
mov
stos
fwait
lods
or
jne
xchg
pop
pop
leave
js
std
movsb
insb
mov
imul
mov
jle
cmp
or
adc
cmp
sub
mov
dec
jmp
lea
dec
push
lods
mov
arpl
pop
xchg
sub
mov
sub
xor
popf
sahf
adc
sbb
es
fisttpl
stos
mov
jg
sub
xchg
inc
mov
sbb
push
mov
pop
inc
test
ret
pop
push
out
mov
mov
outsl
cmp
and
or
mov
repnz
sub
loop
mov
aam
popl
and
and
ret
add
cmp
adc
adc
inc
ret
int
sbb
stc
repnz
nop
mov
inc
cwtl
mov
jno
lock
mov
loopne
sub
pop
jb
jno
sub
or
or
inc
mov
pusha
loope
cmp
push
mov
push
stos
jno
pop
pusha
add
push
adc
lcall
adc
jle
jno
out
jp
sub
ficoms
dec
inc
xchg
mov
sub
and
add
movsl
outsb
shll
add
cltd
pop
cli
out
cld
cmpsl
nop
adc
push
xor
icebp
push
adc
jg
push
inc
add
fisttpll
add
dec
insl
pop
push
xor
add
dec
in
push
mov
cs
out
sbb
bound
jg
out
das
test
xchg
outsb
test
fistps
mov
rcl
arpl
mov
mov
jl
mov
or
ljmp
das
ret
orb
inc
ljmp
pop
sub
mov
inc
sbb
ret
daa
out
or
aam
pop
xchg
lds
cmp
fstps
mov
adc
into
xor
and
lea
out
out
mov
mov
loopne
dec
into
mov
xchg
cmpsb
add
ficomps
sub
xor
cmpsl
mov
push
mov
sbb
out
out
sbb
cmp
ja
xchg
cltd
lods
fistpll
iret
xchg
fisubl
in
repz
lods
sahf
call
adc
insb
dec
ror
sub
push
pop
enter
add
cmp
sbb
in
fdivrs
inc
nop
into
jb
out
xor
call
jnp
push
in
imul
sbb
dec
xchg
clc
xchg
inc
pop
mov
cmp
dec
pop
outsb
pushf
push
mov
push
pop
cltd
sub
test
ja
adc
or
mov
ret
dec
dec
adc
cs
lea
sarb
and
das
jg
rorl
xlat
dec
outsb
sub
xchg
aam
mov
cmp
into
gs
lea
hlt
add
pop
mov
pushl
pop
and
mov
mov
rorb
and
cld
push
aaa
mov
ret
scas
sub
cmp
aaa
or
mov
xchg
xchg
loope
mov
push
loope
adc
jg
test
cmp
add
dec
mov
and
jge
sbb
cmp
push
mov
or
fists
dec
inc
cmpsl
idivb
rcr
enter
and
lods
lods
das
inc
inc
daa
daa
jle
aam
in
iret
dec
out
es
dec
mov
jmp
mov
ffree
and
add
jmp
sub
push
pop
xchg
and
pop
stos
xor
or
push
push
stos
mov
in
call
in
ret
testl
aas
mov
xchg
pop
jl
lods
sbb
push
and
push
daa
pop
inc
push
jno
inc
idivb
sub
out
inc
push
das
and
fists
or
jb
imul
data16
sti
test
or
cmp
push
or
js
jnp
mov
mov
daa
scas
ja
imul
mov
mov
into
xchg
jmp
xchg
mov
inc
mov
mov
es
xor
mov
dec
insb
push
aam
or
jl
adc
fwait
cmpsl
mov
ret
repz
jno
push
test
or
push
mov
lahf
cmp
add
mov
clc
push
xor
push
outsb
push
scas
jle
shlb
mov
add
cmc
cltd
jp
movb
lods
addb
movsl
pop
and
loope
lock
cltd
repnz
cmp
aam
out
mov
lds
sar
je
cmp
mov
es
adc
or
js
gs
jmp
xchg
mov
mov
call
outsl
pop
pop
inc
pop
loop
fists
adc
fwait
jno
add
push
js
out
mov
dec
mov
dec
jge
xchg
scas
xor
mov
mov
inc
mov
sbbb
xorb
fs
sub
test
ret
mov
enter
jmp
push
and
std
xor
jle
pop
call
fstpt
push
push
gs
jmp
loop
sbb
pop
mov
icebp
dec
clc
mov
shlb
mov
pop
incb
fdivl
popa
dec
inc
aas
daa
pop
bound
sub
mov
pusha
sarb
inc
aaa
and
push
fwait
and
push
or
mov
dec
sub
out
and
pop
mov
or
dec
sbb
mov
jae
sub
js
stos
fsubrl
jle
fcom
in
jbe
inc
pop
and
pop
mov
cmp
jmp
mov
inc
jmp
mov
in
sbb
out
cmc
mov
ret
mov
mov
mov
dec
push
or
xchg
cmp
sub
xor
mov
sbb
int
xor
pop
pop
divb
dec
lods
adcl
adc
pop
call
jle
dec
add
scas
scas
icebp
sub
sarl
std
loop
push
scas
ljmp
adc
sar
loope
cltd
sub
cwtl
add
stos
xchg
or
and
fdivrp
mov
loope
mov
fidivs
lea
push
shlb
and
imul
popa
int
lcall
inc
iret
or
popa
fldcw
jl
shrb
fidivs
dec
pop
jle
cmp
cmp
or
mov
lahf
stos
xor
lods
ljmp
xchg
scas
cmp
sbb
or
lcall
testl
int
pop
fs
sti
stos
andl
cmp
cmpl
and
inc
sbb
dec
leave
mov
icebp
cmpl
add
mov
xchg
mov
sub
cld
or
dec
out
ja
pushf
repnz
dec
mov
insl
pop
sbb
nop
pop
push
imul
das
push
add
mov
fdivl
xor
fsub
xor
push
outsl
imul
ret
sub
fnsave
jmp
lret
stos
push
xor
popa
test
test
mov
adc
data16
inc
cli
cltd
std
sbb
aad
mov
pop
mov
or
fcomip
repnz
jne
loope
ss
mov
mov
stos
ficompl
sbb
sub
mov
push
mov
hlt
test
push
popf
int3
stos
dec
insb
cmp
pop
aas
mov
clc
lods
push
xchg
and
fcmove
fdivrp
push
mov
popf
mov
push
pop
xor
mov
pop
sbb
sbb
push
fwait
scas
add
out
je
leave
dec
dec
cs
mull
mov
xchg
out
pop
pop
filds
sarl
lret
push
cld
stos
in
int3
pop
mov
fistl
into
mov
in
adcb
jle
in
push
mov
mov
ja
jecxz
xor
adc
mov
inc
push
aaa
in
mov
xor
inc
adc
inc
add
int3
in
sub
xlat
jns
push
pop
pop
xchg
out
mov
cmpsl
or
pop
and
icebp
daa
or
or
fstpt
adc
leave
insl
or
int
mov
data16
or
rol
cltd
imul
cmc
lea
jns
add
je
pop
pop
ljmp
imul
ljmp
push
sbb
push
dec
mov
xchg
bound
adc
sbb
das
mov
mov
lods
les
xbegin
out
xchg
xchg
cmp
pop
daa
les
call
xchg
inc
arpl
gs
cltd
cmpsl
xchg
jns
nop
jno
pushf
js
xor
ret
mov
popa
sub
pop
sub
mov
mov
jno
sub
fisttps
lods
mov
pop
loopne
in
sahf
inc
xor
xchg
push
inc
pop
outsb
dec
or
sarl
fimull
out
or
das
jbe
ljmp
push
mov
stc
pop
lret
cld
mov
mov
push
ja
mov
arpl
jae
mov
push
insl
sbb
dec
in
sahf
mov
sub
imul
dec
rcll
movsl
adc
push
mov
mov
sbb
inc
mov
repnz
xor
push
fsubl
push
mov
ror
mov
inc
daa
push
fs
jbe
dec
insb
mov
xchg
jo
popf
mov
mov
out
js
rcrl
pop
pushf
xor
xchg
sbb
test
or
das
cmpsb
sub
jecxz
in
inc
bound
pop
xchg
sahf
in
in
movsb
sub
inc
bound
inc
sbb
sub
lret
lock
rorb
push
movsl
insb
push
iret
mov
jb
out
int3
mov
sbb
cltd
mov
mov
xor
mov
mov
add
inc
jae
test
add
and
or
shrb
pop
pushf
adc
xchg
cwtl
xchg
mov
adc
jmp
cli
andl
inc
cli
add
sbb
lock
dec
mov
mov
imul
mov
pop
push
addl
dec
cmpsb
push
xor
xchg
pop
arpl
xor
push
push
ljmp
cltd
cmp
icebp
xchg
imul
repz
xor
xadd
mov
insl
pop
xor
in
inc
insb
push
pop
ja
insb
lahf
pop
mov
loop
mov
pusha
jbe
nop
mov
cmp
push
jne
aad
add
xchg
jns
dec
js
lea
mov
in
jbe
mov
mov
mov
mov
sbb
pop
repz
in
mov
inc
dec
jb
rorb
sar
jno
lcall
inc
sub
push
and
in
addr16
inc
xor
movsl
push
sub
xchg
or
sbb
xchg
cmpsl
push
push
mov
push
pop
outsb
loopne
cs
add
xchg
and
cld
imul
cli
sbbl
mov
ficoms
mov
push
push
mov
jns
insl
outsl
and
test
add
roll
cmc
adc
testl
int3
push
and
mov
notb
out
xchg
pop
push
push
andl
inc
or
imul
into
and
xchg
repnz
cmc
jp
adc
inc
jle
dec
movsb
lea
fwait
leave
adc
aad
mov
enter
xor
sbbb
push
sahf
add
fidivl
fnstenv
movl
les
out
or
inc
add
cmc
xor
repnz
lahf
sbb
stos
sbb
pop
jbe
pop
repz
add
jle
test
pop
xchg
jmp
mov
dec
lret
push
add
xchg
popf
push
and
adc
lret
jge
xchg
out
inc
jecxz
test
call
lock
pop
dec
test
sub
push
cmpsl
cltd
pop
cmpsb
into
es
ds
push
or
clc
ljmp
and
rcll
idivl
popa
add
dec
mov
inc
loope
into
jne
mov
inc
dec
stos
hlt
sub
loope
add
push
shlb
rclb
mov
icebp
rorb
negl
jg
push
adc
add
out
cltd
pop
push
es
out
out
addr16
clc
rorb
push
aaa
jl
cmp
sbb
rcr
imul
mov
cmc
lahf
cmp
jne
jo
out
sbb
or
movsl
sarb
sbb
test
aam
sub
dec
subb
pop
hlt
cmp
test
mov
cmpsb
rcrl
shr
fwait
jae
fildll
popf
lock
in
mov
mov
fs
add
int3
mov
adc
cmp
fdivrs
leave
negb
mov
fwait
jns
adc
aas
pop
mov
cs
out
cmp
xor
mov
mov
jns
add
inc
and
push
popa
enter
fnstenv
popa
stc
dec
push
out
jae
bound
add
clc
stos
pop
mov
aaa
out
stos
cmp
mov
adc
mov
negl
xchg
cli
aad
mov
je
imul
cmc
sub
scas
xlat
sub
mov
dec
fists
mov
fisubrl
lock
idivb
insl
cmpsb
cmp
js
mov
adc
out
mov
js
fisttpll
push
xchg
js
hlt
cmovs
mov
inc
loop
xchg
nop
xor
push
pop
jne
lods
fcom
test
xchg
mov
push
adc
test
jns
xor
dec
xchg
sub
dec
aam
adc
mov
inc
add
push
daa
mov
test
mov
jecxz
jp
lea
sbb
or
push
jo
push
cs
ljmp
mov
jae
ror
xchg
repz
or
in
call
jnp
in
mov
popa
outsl
les
imull
or
ss
jmp
roll
jl
push
ret
push
ret
xchg
loope
stos
insb
add
out
out
sbb
mov
sub
mov
insb
push
scas
mov
je
pop
cwtl
sbbl
inc
xor
repz
mov
rorb
mov
or
out
pushf
jmp
adc
ret
dec
movq
jbe
mov
std
stc
adc
or
push
cmp
roll
test
push
cmpsl
popf
ss
fwait
jae
dec
sub
shll
mov
pop
inc
mov
push
mov
es
mov
xor
call
sbb
divb
pop
mov
push
fisttpl
pop
mov
fistps
call
xor
rcr
pusha
sti
aas
bsr
outsl
ret
daa
insb
lods
xor
in
pop
pop
cltd
mov
xchg
mov
inc
add
loopne
fbstp
adc
jl
adc
push
jno
dec
sub
imul
loope
or
sbb
lods
mov
push
mov
xchg
pop
cli
xchg
dec
pop
push
mov
mov
cmpsb
and
add
ret
sub
insl
icebp
mov
push
mov
cmpsb
insl
je
push
fs
pop
mov
fwait
sbb
or
sbb
popa
sbb
adc
add
mov
outsl
stos
fldl2e
outsb
adc
dec
out
rcrl
xchg
or
out
sbb
add
mov
add
in
sbb
xchg
cs
std
hlt
jmp
in
insb
fisttpl
push
addr16
daa
loope
xchg
cmp
lret
mov
jae
and
mov
lahf
pop
bound
push
orb
dec
jb
shll
cmc
imul
loopne
and
inc
popf
repnz
push
mov
mov
xlat
pop
scas
push
outsl
dec
or
inc
test
jns
pusha
int3
and
cmp
cmp
ret
pushf
pop
adc
cmp
dec
js
xchg
fsubr
xchg
cmpsl
inc
xor
pop
jae
outsl
mov
pop
mov
cmpsl
sub
movsl
stos
cs
daa
add
enter
inc
sub
push
out
adc
cmp
dec
dec
sbb
je
out
jbe
daa
sub
push
inc
jne
mov
lds
adc
cmpsb
cs
and
cld
mov
mov
iret
xchg
jg
insl
cmpsb
sub
pop
lds
fstps
mov
and
xchg
push
pop
mov
subl
xchg
cwtl
ret
jae
xchg
inc
add
fwait
lock
inc
jbe
dec
mov
lock
sub
xor
mov
dec
in
adc
or
in
lds
xor
test
cld
inc
xlat
sbb
xorl
out
dec
fdivrl
out
dec
test
test
ffreep
mov
push
adc
xchg
std
aam
stc
pop
sub
test
out
sbb
ret
mov
mov
ss
mov
aaa
test
mov
les
mov
pop
movsb
push
sbbl
mov
popa
xchg
push
arpl
loop
push
add
mov
jb
into
cmp
roll
repnz
cmpsb
mov
jmp
mov
pop
mov
add
scas
shlb
fstps
dec
jb
sarl
inc
arpl
cmp
out
cli
js
outsb
cli
lahf
sti
sti
jp
jecxz
cmpsl
mov
mov
insb
adc
pop
and
enter
cmpsb
xchg
int
push
in
rcrb
in
enter
imul
mov
sti
repnz
pop
jno
pop
or
testb
mov
inc
int
rcrl
mov
and
dec
add
pop
dec
fld
mov
sub
daa
ss
mov
jbe
jp
xor
mov
sub
xchg
scas
jp
bound
or
xchg
cmpsb
aam
int
mov
mov
mov
dec
xor
or
imul
sbbb
adc
jo
dec
mov
test
paddusw
cwtl
mov
jmp
dec
mov
mov
jg
in
push
jb
clc
mov
fcoms
mov
add
xchg
mov
and
mov
std
mov
rcl
jbe
mov
mov
sbb
inc
inc
xchg
aaa
cld
xchg
cli
call
xchg
or
cwtl
mov
xor
adc
cmpsb
cmp
sahf
push
lods
pop
cwtl
mov
fldln2
jns
pop
fldenv
test
adc
push
repnz
xchg
ja
lret
stos
stos
imul
iret
data16
lahf
pusha
sti
lock
lahf
adc
dec
sbb
inc
adc
sbb
stc
jb
jbe
xlat
xor
xor
outsl
sub
add
adc
inc
rorb
sub
xor
sahf
shlb
movsl
sbb
mov
push
and
movsb
divb
xor
lret
jnp
cmp
xlat
or
loope
and
fildll
stos
dec
sub
pop
pop
sahf
test
and
cmpsl
leave
mov
jmp
inc
sahf
lds
mov
int3
or
aad
in
leave
idivb
stc
push
sub
push
stc
xchg
loopne
scas
mov
addb
jne
divl
arpl
inc
in
xor
sbbb
enter
scas
xchg
sbb
clc
cmp
sbb
mov
fucom
cmp
sahf
stc
sti
jl
inc
xor
jg
ljmp
push
sbb
dec
jge
loopne
xchg
xchg
repnz
in
dec
dec
jb
nop
push
lods
arpl
std
xchg
xlat
nop
push
mulb
mov
inc
movsb
fsubrs
ss
jbe
shrb
repz
movsl
jg
lret
nop
imul
jp
je
iret
enter
ret
mov
pop
bound
xor
cmp
nop
call
lods
out
into
jb
fwait
sub
ja
jae
mov
loope
xlat
lret
aam
scas
jmp
xchg
mov
stc
jne
push
fs
in
shlb
imul
cltd
pop
fwait
sbb
jp
sbb
insl
arpl
stc
mov
in
inc
cmpsb
test
and
jecxz
lods
int
or
js
ficoml
dec
mov
inc
addr16
dec
add
or
mov
and
cli
xchg
repz
out
mov
sub
out
xchg
aas
test
sar
out
ss
or
arpl
add
out
mov
out
mov
fisubrl
or
inc
movsb
insl
add
imul
mov
adc
shl
lcall
xor
and
xorb
or
out
out
shll
cltd
mov
and
xlat
cmpsl
add
mov
jnp
mov
sbb
outsb
push
shll
push
cmp
cmp
jmp
cmp
push
jecxz
sbb
dec
sub
jno
jg
fnstcw
ret
fstp
cmp
or
inc
or
adc
inc
cmp
mov
or
xchg
cmc
movsb
adc
jns
stos
imul
bound
dec
fsubl
inc
and
outsl
andb
addr16
mov
fwait
loop
cmp
iret
adc
push
nop
es
push
clc
cmc
setns
cs
mov
push
movsl
sub
sbb
ret
pop
iret
lds
cli
pop
ret
aam
or
and
out
les
repz
popf
or
xlat
outsb
pusha
fs
xlat
xor
fiadds
stos
movsb
cmp
in
xor
mov
mov
jmp
xor
ljmp
ret
xor
ret
dec
add
movsl
pop
xor
sbb
xor
sbb
adc
add
jae
mov
lds
pop
mov
xor
jns
and
push
xchg
and
fcoms
xchg
mov
inc
fdivrl
cli
out
and
pushl
push
or
inc
scas
mov
nop
inc
aas
and
mov
orl
xor
or
test
les
insl
scas
cmp
xchg
aad
pusha
cwtl
stos
pusha
xchg
aaa
xor
push
mov
xchg
stc
xor
or
rolb
dec
cltd
ljmp
out
sbb
sbb
mov
sbb
in
fs
popf
icebp
push
idivb
inc
arpl
adc
jge
nop
sub
loop
lods
dec
rcrb
jbe
cmp
icebp
dec
stos
push
mov
add
pop
imul
popf
test
jmp
insb
adc
shlb
jo
jg
push
jae
pop
mov
sub
mov
sub
loop
lds
lcall
push
jmp
pop
lret
mov
jp
jae
mov
test
dec
fistpll
int3
out
xlat
jbe
pop
push
push
pusha
je
js
jp
lods
lret
in
flds
mov
sbb
xchg
lds
mov
mov
std
mov
add
sub
xchg
loop
dec
cmp
cltd
fbstp
xchg
xor
push
sbb
bound
mov
roll
nop
jne
in
push
pop
addl
or
std
push
pop
xor
idivl
mov
jns
adc
jne
popf
push
outsl
sahf
inc
test
and
push
adc
sbb
stos
aam
lret
lea
cltd
jbe
shl
insb
popa
imull
push
data16
mov
dec
idivl
mov
lahf
lret
ds
jne
push
xor
loope
add
sbb
repnz
add
stos
or
jl
aam
ljmp
sarl
out
mov
lea
or
inc
stos
lret
rcrb
jno
out
inc
xlat
jg
and
fptan
and
les
sub
or
cltd
sub
jmp
mov
test
dec
sti
adc
rcll
mov
sti
cld
xchg
rcll
call
iret
sbb
or
cmp
cli
testl
lahf
movsb
rcl
sub
jmp
int3
push
insl
fnstcw
push
xchg
scas
mov
cmpsb
lahf
xor
jnp
scas
ja
mov
aas
daa
xchg
cwtl
xchg
or
or
aam
fmull
adc
sarl
roll
mov
adc
shl
jno
fwait
dec
scas
fdiv
test
gs
mov
dec
add
xchg
dec
inc
aas
subb
out
std
mov
push
mov
pop
dec
xchg
adc
in
jg
pop
enter
push
or
out
lods
inc
incb
repnz
dec
pcmpeqw
or
xor
sbb
xchg
arpl
mov
dec
addr16
inc
ret
cmp
fsub
mov
inc
inc
xor
xchg
adc
mov
lahf
add
and
test
js
fs
aaa
pop
orl
mov
and
push
xor
pop
jae
mov
dec
inc
xor
add
adcl
add
out
lock
sbb
mov
pop
ljmp
popf
adcl
and
pop
nop
sbb
or
lea
addr16
sbb
mov
ficoml
adc
mov
sbb
inc
dec
xor
and
pop
daa
or
mov
mov
aas
add
inc
adc
xor
fucomp
lds
or
out
lock
push
mov
cmp
xchg
mov
sti
test
xor
or
jl
andb
cwtl
push
sub
lds
sbb
fistpl
sti
mov
adc
pop
adc
fisubrs
out
adc
ret
ret
xchg
outsl
add
movsl
xor
lds
imul
into
stc
daa
mov
mov
fsubrl
inc
cmp
add
lds
outsb
pop
int
adc
mov
jae
add
shlb
ljmp
rcrl
das
cmpsw
mov
mov
xchg
inc
jp
push
test
rcrb
idivl
incb
es
aas
stos
enter
mov
cmc
inc
insb
mov
jl
pop
xchg
push
enter
clc
jne
imul
push
sub
mov
in
out
cmp
mov
pop
dec
je
sub
std
and
es
sbb
das
xchg
sub
ror
fisttps
inc
fldl
fs
test
xchg
out
mov
mov
sbb
mov
or
ja
testl
xchg
mov
scas
cmp
leave
dec
dec
in
xor
mov
jmp
jno
mov
jbe
xchg
in
push
inc
jae
outsl
or
cmp
xor
test
push
inc
or
into
xor
data16
or
dec
push
xor
pop
mov
ja
repnz
pop
xorl
mov
je
lret
xchg
mov
and
insb
add
sti
mov
mov
mov
test
or
xchg
xchg
add
sti
xchg
shr
pop
icebp
sub
xchg
sti
scas
cli
xchg
sahf
adc
jge
ret
out
pop
out
mov
pop
and
xor
jne
lods
out
inc
loop
jp
call
icebp
or
outsb
and
sahf
fdivrs
mov
push
xchg
ret
push
xchg
xor
mov
xchg
iret
movsl
xchg
test
dec
and
jmp
ficomps
ret
divb
sbb
pop
jge
xchg
sub
cmp
movsb
movsb
cmp
cmp
cmp
ds
jb
leave
jbe
cwtl
sub
in
clc
sub
jge
js
mov
adc
repz
mov
pop
or
xchg
shrl
fmull
adc
fcmovnb
loope
adc
cwtl
lcall
adc
gs
scas
popf
or
adc
and
ljmp
inc
in
push
and
mov
pushf
cwtl
pop
stos
fwait
jle
leave
dec
aam
lea
xchg
ret
insb
jp
iret
dec
sub
mov
xor
pop
jle
and
popf
lock
jno
ret
pusha
push
inc
idivb
push
insb
insb
adc
jbe
stos
daa
arpl
push
in
inc
pop
iret
or
out
mov
test
and
pop
push
test
test
out
fisubrl
adc
lea
adc
pop
ret
ljmp
lds
inc
ret
sbb
push
scas
or
les
daa
inc
ficomps
and
je
int3
xchg
push
sub
lock
jns
mov
inc
pop
push
mov
cmp
aad
cmc
sub
test
in
and
int
cmp
movsb
mov
imul
cmpsb
insl
pop
outsl
test
out
inc
pop
xchg
out
jmp
mov
cmp
ds
jg
nop
aam
imul
mov
xchg
jmp
out
jp
lock
bound
int3
pop
ds
test
or
outsb
imul
pop
lcall
push
daa
rcl
fs
dec
insb
lods
icebp
dec
jp
cmp
jl
sub
out
sbb
out
js
adc
cli
push
pop
es
inc
jno
pusha
mov
ss
addr16
adc
aam
aad
cmp
mov
and
xchg
mov
ja
xorb
adc
cmc
sub
nop
adc
ret
scas
cmpsb
lahf
fcoms
xor
out
push
addr16
sub
push
in
jecxz
test
mov
into
shll
push
insb
pop
imul
orl
mov
addb
cmp
xchg
mov
lods
mov
call
movsl
xchg
jle
pop
mov
xchg
lcall
mov
xchg
xor
addr16
shll
xor
pop
xchg
xorb
cmp
adcl
cmp
xor
add
or
dec
dec
mov
push
pop
mov
rorb
jl
rol
jl
lcall
cmp
jmp
icebp
lea
ja
fidivrl
fldl2e
ss
sbb
mov
and
mov
jb
mov
cmpsl
cmp
sub
or
sub
lret
mov
gs
les
ljmp
pop
cmp
adc
lcall
test
aas
xchg
add
or
fs
in
leave
or
daa
and
daa
inc
jns
nop
lcall
mov
cmp
cmp
mov
jle
sarl
sti
xchg
dec
xchg
pushf
hlt
subl
mov
and
iret
scas
and
xor
test
mov
jl
mulb
repnz
imul
xchg
imul
xlat
test
addr16
dec
inc
les
or
out
in
sbb
dec
rorl
fiadds
mov
scas
fwait
loopne
dec
jo
jns
xchg
aam
insl
pushf
cmp
mov
lcall
out
stos
pop
into
outsl
shlb
mov
pop
mov
je
outsl
repnz
pop
add
jbe
call
mov
out
mov
cmp
hlt
or
mov
xchg
test
add
lcall
cmove
pop
pop
outsl
or
cmpsb
mov
or
push
scas
pushf
cmp
cli
pop
mov
pusha
repnz
aaa
sub
jle
cmp
jbe
mov
mov
xchg
inc
test
xchg
cltd
stos
shlb
out
icebp
jp
push
lods
icebp
insb
fidivs
xor
shlb
cmpsb
dec
add
push
pushf
aad
nop
add
stos
test
je
sub
fwait
dec
sbb
lock
lret
xor
in
mov
mov
addl
inc
sti
jo
scas
sub
pop
les
mov
ficoml
repz
mov
push
stos
mov
push
pop
cmc
subb
pop
neg
add
aas
adc
cmc
dec
sub
pop
mov
push
and
mov
out
cmp
js
push
or
adc
and
lahf
push
xlat
ret
mov
mov
push
mov
mov
xchg
std
push
fnsetpm(287
hlt
scas
dec
jb
into
pop
lds
mov
adc
out
jb
adc
sahf
xchg
cltd
cmp
dec
sti
push
xor
enter
test
out
inc
aaa
rolb
xor
into
ljmp
jno
or
jecxz
or
insl
out
pop
mov
mov
push
push
mov
ret
repz
or
mov
repz
fnstenv
add
repnz
pop
andb
pop
sahf
mov
js
dec
or
xor
subl
cmc
mov
adc
add
mov
sbb
xchg
ss
lea
aaa
enter
jp
fidivrl
in
fdivr
fcompl
int
mov
mov
add
and
popa
mov
push
jns
xchg
push
lret
dec
ss
xlat
pop
dec
insb
cltd
xchg
cwtl
and
sub
push
arpl
outsb
out
bound
push
mov
pop
dec
leave
imul
dec
sbb
inc
inc
in
outsl
xlat
and
push
mov
mov
push
pusha
jnp
daa
xchg
movsl
ja
jmp
imull
jle
test
out
pusha
pusha
data16
and
aaa
pop
dec
sub
cs
jp
jp
int
add
loopne
outsb
cmpsb
cmp
clc
jl
sbb
test
or
mov
push
icebp
or
sbb
add
adc
stos
mov
lds
scas
mov
push
cli
xor
jmp
sbb
fimuls
inc
call
fiadds
cmp
push
or
inc
sbb
or
imul
in
mov
fnsave
cmp
shlb
addl
fsts
lock
sub
bound
xor
pop
xchg
mov
or
cmp
jbe
push
incb
mov
ss
inc
mov
adc
pop
xor
push
rcr
cmc
sub
push
dec
ret
idivb
pushf
in
daa
xchg
stc
inc
in
outsb
cwtl
lret
jb
in
out
test
pushw
pushf
and
add
cmp
adc
lret
mov
inc
test
in
xchg
mov
inc
xchg
stos
dec
xchg
test
jle
ss
push
cmc
sbb
cli
cmp
imul
dec
adc
rcrb
add
cmp
adc
test
inc
sbb
cwtl
or
fwait
add
and
add
push
push
adc
decb
popa
xor
imulb
repnz
stc
xor
clc
test
lods
adc
push
sarb
xor
inc
stc
repz
pop
daa
add
and
lret
mov
jecxz
inc
sar
cmp
mov
pop
jmp
jecxz
mov
add
cmp
scas
sub
out
shl
jg
lret
jle
test
test
mov
mov
fcompl
cld
sahf
cmpsl
jecxz
pop
or
out
push
imul
lret
inc
std
out
shl
dec
es
jae
adcb
int
xchg
test
enter
leave
ljmp
mull
jno
lods
cwtl
pop
push
sub
and
jbe
add
pop
mov
push
pop
push
add
inc
jecxz
addr16
add
dec
xchg
icebp
lahf
sbb
mov
push
icebp
lahf
in
xchg
insl
cmc
incl
iret
int3
clc
divb
pop
in
lea
add
mov
push
inc
adc
xor
ret
jno
lret
or
aam
pop
xchg
sbb
push
test
imul
les
sbb
xchg
data16
mov
shll
imul
xchg
mov
scas
cld
xor
push
out
mov
pop
aas
shlb
pop
mov
mov
idivb
and
push
fidivl
sbb
fwait
mov
push
mov
dec
sub
add
and
jmp
iret
xchg
and
sub
push
testb
ret
push
cmpsb
xlat
pop
mov
pop
cmc
dec
cmp
out
test
movsl
int3
add
push
sbb
adc
or
jmp
cwtl
xlat
pop
roll
testl
imul
stc
cs
pop
movsb
push
insl
push
fsubl
pop
mov
pop
je
sbb
andb
xchg
decb
pop
out
lock
pop
dec
out
sub
sysret
cmpsb
out
xor
jne
decb
clc
adc
sub
adc
mov
inc
leave
sub
xchg
pop
ljmp
add
std
add
out
shlb
js
jb
xchg
fsts
mov
pushf
and
xor
jns
imul
cmp
jge
jge
testl
cmpsl
fs
adc
jo
inc
mov
jo
or
je
mov
fistpl
rolb
mov
push
fldenv
repnz
ss
dec
sub
roll
je
lahf
sub
roll
aaa
mov
rolb
into
adc
or
pusha
aas
rcll
fmull
lret
into
mov
or
sub
push
and
xor
movsl
dec
ret
or
aad
mov
xchg
cmpsb
shll
mov
sub
mov
xor
lods
mov
cmpsb
shlb
xlat
leave
cli
sub
nop
std
andl
into
xchg
sbb
mov
shrb
sbb
mov
fistpll
mov
iret
cmp
and
jae
jge
mov
dec
aam
jecxz
mov
and
test
mov
or
and
sub
push
pop
pop
jge
div
push
pop
mov
cmpsb
int3
cmp
and
and
je
das
repnz
mov
sub
add
add
aas
mov
and
pop
inc
and
jl
lcall
outsb
je
insl
dec
push
adc
movsb
imul
outsb
incl
xchg
mov
jmp
xchg
sbb
mov
aaa
lods
fisubrl
test
cs
outsb
pop
add
lods
das
sub
and
sub
push
pop
mov
jnp
repnz
sub
fwait
push
je
adc
cmp
in
and
inc
mov
out
iret
pop
xchg
outsl
test
fsts
dec
int
inc
dec
insb
xchg
xor
fidivl
dec
fcomip
ds
xchg
or
sahf
xor
hlt
imul
mov
pop
sbb
mov
in
pop
mov
ficoms
dec
lret
add
pop
lds
test
subl
fwait
push
sub
push
cmp
out
xchg
mull
dec
aas
ds
outsl
test
mov
inc
mov
mov
jmp
jl
cwtl
idivb
stc
inc
movsl
ds
scas
and
cli
mov
ret
clc
loopne
in
adc
or
aam
xor
mov
nop
xor
and
stos
push
jns
push
cwtl
aaa
jns
insb
mov
jb
or
jl
andb
or
nop
or
stos
cmp
add
sub
sbb
in
jns
lcall
das
icebp
adc
nop
into
pop
imul
adc
push
inc
pop
xchg
out
cmp
mov
imul
cmpsl
dec
mov
or
and
ret
jae
in
adcl
mov
arpl
pop
in
iret
sub
inc
test
mov
ss
shlb
mov
dec
mov
addr16
adc
loop
pushf
gs
inc
pop
xchg
rol
pop
notl
pop
pusha
mov
pusha
xchg
mov
loope
jns
mov
in
stos
xchg
outsl
loop
inc
push
jne
sbb
jbe
arpl
faddl
mov
inc
and
out
push
call
outsb
jp
cmp
loop
call
or
lcall
sbb
pop
adc
rolb
inc
jns
rcll
inc
pop
inc
cmp
mov
leave
scas
xchg
int
mov
and
pop
test
in
sub
cmpsb
cmc
and
daa
std
sub
test
mov
dec
pop
jno
adc
jecxz
add
adc
call
adc
movsb
inc
xchg
fistps
xchg
xchg
and
push
cmp
or
dec
xchg
mov
mov
addr16
arpl
xchg
sbb
lods
scas
inc
mov
push
cli
repz
mov
xor
dec
xchg
sbb
or
cmc
jne
push
fwait
out
xchg
imul
psubusw
push
sbb
pop
xchg
aaa
out
mov
popa
fisubrl
out
adcl
xor
cltd
jae
inc
adc
pop
pop
cmp
inc
push
adc
adc
fisubrl
jo
movsb
and
and
and
mov
lret
inc
popa
loop
pop
adc
mov
sub
jle
xchg
insl
cmp
cmp
mov
fmul
xorb
inc
cltd
push
daa
pop
and
jno
mov
loopne
jp
jae
push
adc
dec
int
xor
dec
lret
push
or
stos
and
or
imul
jg
call
xor
rcll
push
cmpsb
sbb
mov
jmp
pop
dec
lret
push
jbe
inc
adc
shl
push
xor
loop
cmpsb
mov
sub
sahf
mov
ljmp
repnz
in
mov
cmp
or
push
push
call
in
xchg
cmp
dec
in
shlb
ss
lods
or
gs
lds
adc
loop
jl
sub
xchg
mov
es
and
test
cmp
gs
sbb
inc
in
xchg
andl
enter
stos
dec
add
sbb
test
movsb
adc
sbb
or
fs
xchg
pusha
cmpsl
xchg
mov
add
int
push
dec
jo
push
add
out
inc
orl
repz
cmp
dec
test
repnz
test
popf
fstl
insl
jp
pushf
aaa
xor
stos
xchg
sub
aam
je
out
fisubs
fadds
jmp
repz
shlb
dec
arpl
ja
push
add
jns
dec
cwtl
push
iret
iret
xchg
imul
je
mov
int
ror
dec
movsb
pop
mov
pop
push
pop
xchg
cwtl
repz
dec
dec
inc
enter
add
xchg
int3
dec
xchg
repnz
sub
mov
aas
sub
shl
neg
out
iret
movaps
add
rcl
lahf
xor
adc
insl
popl
dec
bound
inc
into
jo
jb
pop
xor
test
call
sar
mov
push
add
dec
shll
call
lcall
jne
pop
jo
notl
aas
mov
xchg
lcall
fbstp
add
stos
xchg
clc
dec
outsl
add
cmpsl
fwait
repz
dec
repz
mov
jne
mov
pop
inc
call
and
inc
mov
ret
cmc
mov
rolb
gs
and
rcll
les
sbb
lds
shlb
adc
mov
out
dec
xchg
mov
xor
fisubs
das
cmp
add
es
out
cmp
fdivrl
mov
or
iret
in
xchg
jmp
lcall
mov
fs
dec
inc
shrb
xor
iret
add
ja
push
xchg
sub
mov
test
fdivrs
cld
outsl
push
or
clc
fisubrl
dec
xor
into
jmp
cltd
dec
cld
mov
jo
adc
inc
fdivp
lea
jg
and
iret
jno
int3
rolb
out
dec
or
push
mov
repz
mov
pop
loopne
mov
jmp
mov
xchg
popa
rorl
push
mov
outsl
cmp
adc
stos
cmp
push
lods
rcrb
mov
out
jge
xchg
stc
loope
push
scas
fistl
dec
ds
rclb
dec
push
repnz
xchg
outsl
and
movsb
icebp
in
js
pop
aaa
push
mov
in
jae
or
loope
pop
xlat
cwtl
in
in
mov
ds
mov
inc
cmpsb
jo
mov
or
scas
jge
xchg
addps
and
lods
or
push
xor
push
out
movsl
andb
mov
jg
imull
scas
pop
xor
fcmovb
test
jae,pn
sub
ja
mov
dec
jge
mov
pop
daa
sub
std
scas
add
daa
xlat
mov
push
test
lds
xor
nop
and
pop
movl
jo
jmp
js
fisubl
and
leave
inc
push
imull
out
out
sbb
cmp
adc
adc
push
je
sbb
cld
inc
pop
mov
enter
push
sbb
pop
pop
jl
mov
mov
or
out
insb
pop
adc
cmp
and
icebp
fbstp
xchg
mov
sarl
fdivp
ja
into
addr16
sub
push
xchg
sub
jo
ljmp
js
xor
lods
jmp
sbb
mov
lea
fdivs
in
push
adc
adc
mov
xor
lret
sbb
or
xor
mov
fldcw
cmp
outsl
mov
mov
test
sub
ja
shlb
xchg
jmp
enter
les
dec
js
sbb
jae
add
push
movsb
imul
mov
fstpt
cmp
and
mov
jmp
sub
cmpsl
imul
out
aas
movsb
movsb
and
addl
outsl
outsb
pop
cltd
mov
lds
stos
add
mov
add
and
push
orl
inc
neg
das
push
or
adc
mov
dec
movsb
sbb
jle
in
pop
mov
inc
in
cmp
inc
jb
push
mov
pop
pop
pushf
into
xchg
js
mov
lds
adc
in
mov
cmpsb
jne
sbbl
fs
push
bound
movsb
push
cmpsl
btc
cmpsl
or
cmpsb
adc
inc
inc
test
jg
sbb
test
mov
pop
sub
test
pop
lock
mov
adc
mov
je
xor
pop
lods
insb
leave
add
cld
pop
fwait
dec
rol
insb
in
sbb
mov
mov
xor
test
push
outsl
jp
jle
and
bound
jae
push
sub
shl
dec
add
xchg
jmp
roll
mov
loope
gs
sub
hlt
inc
or
jmp
nop
test
mov
fidivrl
aas
mov
dec
push
or
fsubs
xchg
or
push
cmp
sub
push
push
sti
aaa
jmp
enter
pop
dec
mov
sbb
sub
lds
mov
dec
call
dec
push
sti
xor
out
jecxz
loope
mov
shl
outsb
lds
jge
dec
pop
mov
and
mov
mov
es
in
cmp
sbb
or
in
insb
mov
mov
cli
test
sbb
addb
xor
jp
fs
pop
sbb
push
cmc
adc
push
cld
inc
mov
andb
test
call
scas
sti
je
push
cmp
shl
cltd
cmp
std
xchg
dec
push
cs
fs
and
mov
push
hlt
loope
add
test
scas
addr16
jp
pop
jmp
add
xchg
fwait
lea
stos
es
jg
iret
jle
adc
mov
mov
cmpsl
test
orb
mov
and
sub
mov
lods
hlt
cs
mov
mov
das
jns
inc
jp
lret
cwtl
lahf
lcall
mov
inc
clc
clc
add
and
pushf
icebp
js
sbb
aas
test
push
aaa
mov
pop
or
pop
andb
inc
dec
mov
es
add
cmpl
xlat
hlt
addl
and
imulb
ja
outsl
negl
mov
xor
ljmp
mov
lret
mov
or
sub
add
fcoml
pop
outsl
add
lods
stos
imul
clc
pop
leave
adc
test
flds
and
popf
std
sbb
push
and
ret
mov
stos
test
cltd
fldl
mov
cmc
or
pop
arpl
mov
pop
out
enter
cs
mov
jo
jno
scas
push
jmp
aam
xor
ja
push
call
ds
sbb
cpuid
test
std
xchg
dec
dec
in
sbb
push
push
inc
loop
pop
push
pop
mov
jne
jmp
sbb
cmp
xchg
dec
mov
sub
mov
adc
push
jg
sbb
xchg
in
pop
frstor
lahf
sbb
push
outsl
das
xchg
lods
adc
test
pop
pop
out
jne
repz
mov
fcmovu
js
neg
ss
mov
inc
call
push
ret
xchg
mov
ficoml
lcall
sti
clc
jge
mov
cld
adc
dec
pop
repnz
pop
pop
ficoml
shlb
mov
sbb
pop
sub
divb
mov
dec
add
sbb
test
mov
dec
jnp
xchg
sti
and
xorb
ret
lods
sub
xchg
repnz
and
lret
ljmp
jno
popa
aam
int3
lcall
sbb
stc
adc
mov
push
leave
mov
test
jne
and
mov
mov
sub
or
insl
xor
cmpsb
sbb
push
pop
movswl
les
pop
cltd
ja
cmp
mov
repnz
fbstp
fistpl
pop
ss
pop
mov
lock
dec
fildll
and
outsb
dec
adc
in
mov
sarl
fwait
xchg
cmp
pop
jmp
sub
pop
shlb
cmp
adc
out
lock
lret
pop
xchg
dec
mov
xchg
mov
sahf
nop
daa
ret
push
aad
jmp
stos
dec
dec
jecxz
jo
imul
jae
popa
insl
aaa
mov
jo
cmp
in
lcall
subl
jnp
out
push
xchg
and
and
cmp
imul
mov
push
inc
cmc
out
rcr
imul
dec
outsl
aad
jle
loop
push
mov
jg
pop
sbb
pop
mov
lods
fidivrs
xor
fmul
pusha
mov
pop
xor
imul
notb
mov
jecxz
stc
icebp
imul
into
iret
sub
pop
xor
dec
dec
imul
adc
and
in
inc
out
andb
rcll
add
out
jne
shlb
cmp
xor
xchg
lods
jnp
in
dec
inc
test
dec
sub
sbb
mov
push
fs
fsubrs
movsl
push
es
call
clc
in
scas
test
gs
enter
jae
shrd
xchg
lods
or
dec
xor
fdivp
jecxz
cmc
fwait
xchg
adc
mov
push
ret
pop
sub
icebp
mov
es
cmp
jo
ret
cwtl
xchg
clc
xor
rcll
mov
mov
repz
test
or
push
adc
adc
pop
mov
mov
jle
aas
xor
mov
add
sti
adc
push
inc
cmp
ss
hlt
mov
loope
out
sub
out
xor
xor
add
repnz
xlat
inc
fdivl
jno
sarw
and
cmp
mov
push
add
inc
hlt
xlat
popa
into
push
mov
adc
jnp
out
xor
sbb
lahf
xor
adc
stc
lahf
out
mov
xchg
into
xor
lock
cs
sub
xchg
scas
in
inc
jns
pop
dec
jge
adc
mov
aaa
cmpb
pusha
mov
xor
in
xchg
ja
jmp
add
cmp
incl
sub
stos
lock
int
mov
sub
push
mov
popa
loope
sbb
xor
imul
dec
jg
add
push
pop
mov
sbb
lcall
daa
out
lret
int
neg
cmpsl
fwait
enter
lock
dec
outsb
jnp
jge
test
and
inc
rcll
adc
sbb
cmp
or
jl
out
stc
ja
clc
leave
popa
movl
jp
mov
test
push
xchg
inc
mov
loop
stos
inc
add
insl
loop
arpl
out
dec
push
lods
jmp
clc
mov
add
sbb
cmp
mov
adc
in
ficoms
sub
inc
or
xchg
fidivl
and
stos
adc
aad
add
addr16
arpl
aad
or
jge
xchg
icebp
fistps
int3
enter
rorl
xchg
pop
pushf
outsl
and
mov
mov
xchg
lea
cmp
movsb
mov
add
and
push
mov
sub
jae
jle
xor
push
popa
shl
dec
sub
scas
mov
dec
pop
stos
xchg
imul
roll
ficomps
adc
sahf
or
jo
pop
xchg
push
in
sbb
inc
scas
lret
movsb
dec
adcl
xchg
xor
clc
in
sbb
inc
push
mov
add
sbb
mov
xchg
cmpsl
cmp
jmp
loope
and
imul
sub
cmpsb
shll
and
dec
test
xor
xor
mov
outsb
add
mov
jno
fwait
into
mov
outsb
mov
scas
pop
mov
test
inc
pop
xchg
xor
rcll
lock
fsubrp
xlat
xor
sbb
imul
xchg
sbb
out
fwait
loopne
mov
and
leave
fstpl
test
arpl
jns
jns
mov
adcb
loop
jno
xchg
xchg
je
jnp
xchg
sbb
jnp
xor
in
call
dec
xchg
push
outsl
sub
lods
addr16
stos
or
subb
call
mov
sub
int
mov
mov
or
add
fmuls
cmp
std
out
push
aas
pusha
dec
dec
mov
test
mov
xor
lret
stos
mov
out
add
mov
stos
loop
popf
ss
and
cmpsb
popa
in
jmp
lahf
shll
nop
jns
xlat
cs
dec
lods
jns
fldl
mov
cmpl
pop
mov
les
xlat
mulb
dec
insl
enter
mov
out
cltd
mov
mov
push
mov
xchg
mov
bound
rcrb
pushf
add
lods
pop
and
stc
mov
loope
stc
repz
add
add
jno
jecxz
sbb
push
int3
add
adc
mov
inc
lea
mov
addl
push
cmpsl
add
inc
icebp
xor
pop
or
ds
jp
pop
adc
or
stos
sub
cld
pop
mov
gs
jle
jp
sti
mov
or
adc
mov
test
mov
pushf
jle
inc
scas
add
mov
sub
inc
fisubrl
sbb
jl
gs
dec
cmp
insl
shrb
adc
jne
cmc
test
dec
jecxz
mov
adc
jnp
dec
pop
lea
push
lea
dec
mov
hlt
adc
addr16
ljmp
sahf
or
imul
outsb
xchg
fsubrl
stos
add
leave
lret
push
cmp
dec
mov
mov
mov
sub
adc
sub
fcompl
xchg
int3
or
adc
sub
add
dec
into
and
loope
and
xchg
pop
mov
aad
sbb
es
jp
cltd
call
test
mov
aad
or
lods
jge
xlat
xchg
jle
test
je
mov
das
and
cs
add
cmp
sbb
sbb
dec
into
and
pop
xor
cmp
dec
imull
outsb
ja
jle
jo
xchg
ja
shl
fimuls
and
nop
or
xor
int
lods
dec
cltd
mov
add
and
fisubrs
xlat
in
jg
loopne
mov
aas
repnz
movhps
and
js
push
mov
cmp
es
push
cmp
push
mov
out
push
mov
jg
or
mov
sbb
push
xor
or
xchg
pop
inc
adc
ret
data16
add
out
inc
cmpsl
xchg
dec
mov
jle
fiaddl
mov
mov
or
or
jge
ss
addr16
push
test
inc
shlb
dec
inc
jg
lahf
lds
mov
sbb
sbb
testb
enter
and
cmpsb
mov
and
sarb
dec
cmpsl
lahf
enter
ret
roll
popf
es
jp
imul
adc
das
in
lods
jae
mov
dec
mov
repz
dec
pusha
xor
fistl
leave
push
mov
fildl
test
sub
outsb
xor
xor
add
test
sahf
jb
pop
dec
xchg
sub
das
cwtl
cltd
cld
cli
mov
push
mov
icebp
int3
pusha
push
sti
mov
xchg
push
iret
push
mov
sbb
xorb
icebp
rcll
test
out
push
xchg
mov
rcll
cmp
mov
or
sub
cmp
adc
cmp
aam
popa
cmc
movsl
std
stc
and
shll
jg
inc
or
inc
mov
aaa
sbb
fdivp
out
jbe
fcomp
stc
mov
lret
push
aam
nop
ret
neg
jo
test
into
mov
add
lret
sbb
cmc
sub
inc
lahf
test
xchg
js
loop
jl
cli
jmp
inc
inc
in
dec
pmaddwd
stos
adc
int
cmp
cmpsl
jge
xor
cltd
lret
pop
mov
lds
or
cld
mov
jp
arpl
mov
scas
aad
mov
fisttpl
cmp
divb
cltd
lock
pop
cmc
lret
icebp
in
ds
or
mov
mov
cmp
clc
and
js
test
shrl
xor
push
insb
ljmp
xchg
rcrl
mov
xchg
push
jle
wrmsr
add
jns
mov
into
int
cltd
mov
jmp
shll
loope
jmp
into
mov
jnp
in
dec
ret
stos
inc
inc
lods
add
insl
xchg
andb
adc
add
push
loope
xchg
movsb
lea
insb
test
push
push
mov
scas
xor
rcrb
pushw
or
jmp
sbb
sahf
jmp
cmc
add
pop
mov
adc
repz
cmpsb
adc
scas
daa
outsb
adc
xchg
push
icebp
loopne
popa
sub
icebp
inc
in
cmpb
jle
sbb
fcomps
push
and
inc
jge
mov
in
rcrl
xor
fwait
in
sbb
push
inc
push
aad
pop
xlat
scas
lcall
repz
sub
rcll
mov
mov
xor
fnsave
sahf
lcall
fistps
scas
pop
jae
cmp
ss
lahf
frstor
xchg
je
ja
jnp
add
syscall
iret
pop
out
test
aam
sub
shrl
pop
aas
add
ss
jae
mov
pop
nop
test
sti
cli
stos
test
jnp
hlt
int3
das
and
mov
jo
pop
xor
movl
dec
mov
cmp
loope
scas
lods
xor
jns
add
jg
sbb
push
sub
test
mov
scas
pop
mov
jns
jmp
ljmp
stc
add
fidivrl
jb
into
mov
adc
dec
inc
imul
pusha
mov
add
mov
sbb
loope
lret
and
adc
inc
fwait
push
in
pop
sbb
mov
fistpll
cs
fwait
sbb
cmp
insl
popf
lret
xchg
bound
inc
xor
stos
inc
jns
iret
jbe
out
arpl
call
lahf
dec
xchg
fs
stos
pop
fsubrl
inc
lret
jp
xchg
gs
xchg
jmp
ss
push
loopne
cmp
lcall
inc
xchg
aad
ds
cmp
arpl
hlt
jge
push
cmp
ret
lods
mov
or
iret
fidivs
popf
push
lret
push
add
push
inc
jne
scas
jnp
jmp
ljmp
lods
xor
mov
and
push
jns
cmp
or
fsubrl
clc
sbb
adc
out
subb
lock
push
jmp
xchg
sbb
jmp
fs
leave
cmp
fld
jb
out
add
into
test
inc
mov
jb
cltd
and
loopne
lock
stc
in
dec
testl
mov
dec
sub
leave
cmp
into
dec
xchg
ret
fadds
bound
inc
jge
pushf
xchg
dec
rclb
lret
cwtl
inc
popa
mov
outsl
push
mov
mov
pop
loope
out
push
es
add
adc
xor
fildl
or
or
dec
in
jb
or
ret
and
jmp
mov
in
pop
stos
mov
add
rol
cmovs
pop
or
hlt
or
cmc
sbb
data16
xor
rcr
stos
xchg
inc
mov
cs
jge
or
sbb
icebp
loopne
mov
cmp
movsl
add
addr16
or
popa
add
test
scas
bound
jbe
fwait
hlt
xor
sbb
xor
cld
cmp
out
lds
inc
in
or
ficompl
pop
inc
mov
adc
into
inc
scas
mul
mov
loope
aad
sbb
cmpsl
xchg
pop
fidivrs
or
movsb
add
nop
or
imul
es
push
and
xchg
push
das
cmp
pushl
pop
jle
cli
leave
push
sbb
xchg
jle
rorl
sub
mov
shll
fxch
push
cmp
sub
mov
lds
sub
loop
es
int3
add
xor
push
mov
insl
popa
adc
repnz
adc
out
dec
adc
das
sbb
inc
mov
and
mov
push
jb
decl
cs
rcr
rclb
sbb
jbe
sar
jo
mov
mov
xor
aam
cmpsl
es
dec
mov
dec
dec
sbb
test
int
jl
adc
pushf
mov
jge
add
dec
add
sbb
icebp
mov
or
jge
xchg
jg
cld
xor
test
ja
arpl
jecxz
mov
inc
xchg
dec
movsb
adc
sbb
mov
test
in
mov
lods
xchg
inc
dec
cmp
cmp
dec
fstpt
cmp
es
mov
test
cmp
push
pop
cmpsb
lahf
mov
push
std
es
insl
cmp
dec
push
subb
pop
loope
cwtl
int3
xor
mov
inc
bnd
adc
mov
mov
es
jmp
test
fildll
sub
fmull
pop
mov
xor
cmp
adc
sub
pop
jl
sbb
mov
mov
repnz
dec
xor
or
fdiv
fwait
mov
sbb
inc
mov
lods
out
jae
lea
xor
lret
dec
test
aam
mov
push
jle
sbb
out
push
push
pop
sarl
test
popa
unpckhps
pop
xchg
jbe
clc
adc
js
inc
lahf
std
ss
inc
and
loope
mov
push
add
xlat
mov
jp
std
cmp
push
popa
fadds
jb
cmp
lret
ffreep
aas
aaa
mov
add
into
cli
or
stc
aaa
cmpsl
inc
pop
cmp
mov
mov
in
pop
adc
push
cltd
into
shrl
cmp
xor
ret
sbb
cmp
jo
lods
mov
imul
mov
sub
andb
jge
or
es
pop
clc
cmp
pusha
sti
xchg
bound
pop
mov
fs
xchg
fs
mov
pop
arpl
fimuls
fcmovnb
fimuls
cwtl
out
or
mov
movsb
dec
mov
or
mov
std
ds
hlt
imul
push
cmp
add
push
das
sub
add
sbb
stos
dec
sbb
cwtl
adc
out
xlat
outsl
pop
aam
jmp
out
fiaddl
jge
adcl
aas
ret
jns
mov
faddp
into
or
sbb
push
mov
insl
stos
or
notl
xor
push
mov
dec
mov
xchg
loope
jns
xor
ret
nop
xlat
dec
shr
cld
mov
pusha
es
fmuls
pop
jns
lds
jae
test
movsb
mov
sub
aas
clc
mov
push
cmp
jg
das
mov
outsb
xchg
cld
sub
cmp
mov
incl
jmp
call
incb
xchg
stc
inc
jmp
dec
xchg
mov
pop
pop
inc
movsb
inc
imul
ds
enter
cmp
xor
enter
mov
daa
xor
stos
jae
outsb
jmp
push
sbb
and
sbb
pop
push
inc
or
movsl
sbb
sbb
int
add
jg,pn
jp
in
and
sbb
push
pop
or
rorb
mov
lods
fcomps
xlat
pop
jg
mov
pop
in
fcompl
or
push
loopne
adc
pusha
sub
cltd
cmpsl
jbe
xchg
lahf
inc
mov
add
mov
sbb
sub
adc
lret
fmuls
sub
or
out
jns
adc
sbb
push
mov
pop
shrb
into
and
pop
dec
or
cs
cmpsb
jg
push
out
lea
push
fildl
push
mov
add
popa
dec
jge
clc
cs
cmp
xor
scas
mov
icebp
cltd
jmp
sbb
mov
cmp
faddl
dec
fdivl
xchg
flds
jmp
mov
pop
ret
es
aas
add
ror
sub
ljmp
scas
outsl
dec
fiadds
jg
adc
jmp
cmp
xor
pop
mov
jno
adc
fsubr
aam
xchg
fwait
cwtl
cmp
out
mov
rolb
test
fldt
jb
mov
shll
cmp
imul
push
scas
pop
push
les
shlb
jge
insb
fiaddl
mov
inc
mov
shl
inc
or
mov
cmc
and
cmp
mov
fcmove
fucomip
ss
jg
add
out
sub
lahf
push
xchg
pop
jne
xor
out
pop
aas
ret
cmp
les
test
and
or
jbe
test
test
les
sahf
pop
push
lods
mov
mov
lds
push
mov
mov
iret
iret
dec
test
lahf
inc
jns
xlat
jecxz
mov
inc
dec
mov
inc
jbe
pop
nop
loope
shll
leave
inc
or
ss
dec
mov
adc
nop
xor
inc
add
push
jo
je
rorb
pushf
ret
ret
clc
mov
inc
mov
das
sub
cld
mov
aaa
pop
aas
out
dec
test
popf
push
sub
sbb
xor
out
and
mov
sbb
pop
loopne
call
or
xor
int
rcll
fs
sub
loop
and
inc
xchg
sbb
push
sbb
in
xlat
push
test
out
test
mov
push
xchg
mov
xchg
dec
repz
icebp
lods
sbb
mov
cmp
aas
insb
mov
mov
jo
mov
sub
or
sbb
lods
aad
xorb
xchg
sti
inc
and
into
jg
insb
cld
add
push
insl
decl
pop
push
xor
fsubs
inc
sbb
dec
jp
and
ljmp
dec
pop
out
dec
data16
enter
push
jbe
loop
loopne
push
pop
pop
test
call
mov
js
xor
inc
jns
aad
mov
sbb
jo
and
jno
push
adc
jp
out
pop
adc
adc
xor
outsl
imul
lahf
xchg
in
test
add
add
cld
mov
call
fs
add
pop
dec
cmp
in
pop
mov
dec
enter
and
in
or
xchg
mov
rcr
jo
je
adc
mov
inc
lret
xchg
lds
jbe
dec
dec
adc
rcrl
roll
mov
push
push
or
xor
jmp
or
sbb
movsb
arpl
and
inc
out
shlb
xor
dec
sub
bsf
lahf
pop
and
daa
dec
inc
scas
ljmp
shrb
add
xor
pop
shl
push
cmpsl
push
pop
sub
fwait
out
int
mov
and
lcall
ret
pop
pop
dec
enter
loopne
popa
or
in
js
loopne
int
xchg
dec
fidivl
mov
shll
fnstenv
jmp
call
xor
jbe
iret
add
adc
xor
jns
repz
mov
mov
aaa
xor
inc
push
enter
shll
push
leave
inc
sbb
xlat
mov
popf
in
inc
add
lods
pop
es
insb
add
sub
inc
bswap
mov
pop
adc
mov
pop
inc
scas
xor
jmp
jnp
add
inc
movsl
cmp
jle
cmp
aam
ss
rcrb
or
xchg
scas
push
push
or
push
pop
test
js
jge
hlt
std
jo
jmp
push
add
mov
mov
stos
inc
cmpsb
push
and
mov
jb
sub
cmc
fdivr
and
mov
or
into
ficoms
add
daa
fdivs
xchg
enter
insl
data16
lahf
test
rcrb
adc
ds
ret
adc
mov
out
xchg
fcomps
adcb
sub
rcll
mov
test
ljmp
inc
push
cltd
jmp
imul
xor
add
pop
call
pushf
daa
xchg
ret
add
or
iret
mov
xchg
mov
add
or
xchg
sub
sub
pop
cwtl
push
mov
inc
add
dec
mov
stos
cld
and
fs
inc
cmpb
pop
call
stos
sbb
out
in
icebp
mov
lret
or
mov
xor
out
pop
or
inc
push
sub
lea
clc
sub
mov
jg
call
adc
icebp
cmp
out
fcmovne
shrb
mov
mov
pop
add
and
popa
mov
cltd
es
sbb
in
push
inc
inc
pop
lea
sub
push
mov
adc
repz
push
popa
aaa
push
mov
arpl
mov
fdivrl
pop
dec
inc
shll
das
xor
xor
push
dec
cmp
aam
jg
icebp
test
stos
cmp
xor
adc
imul
not
xchg
leave
imul
jecxz
insl
adc
and
xchg
insb
xchg
and
int
jmp
inc
stc
push
mov
jns
xchg
mov
adc
pop
add
xchg
jb
stc
fnsave
stos
in
daa
sbb
pop
mov
icebp
push
cmpsb
inc
inc
test
fwait
inc
mov
out
xchg
call
dec
outsl
xchg
popa
mov
xor
out
roll
or
int
addl
ficompl
xor
jl
mov
xchg
mov
je
xchg
jnp
mov
lods
cmpsb
mov
orl
adc
in
jp
jmp
pop
jnp
dec
insb
sub
insb
mov
adc
aas
lret
repz
nop
data16
cmp
jg
ret
ret
push
pop
das
mov
mov
or
outsl
cmp
rolb
ljmp
pusha
mov
pushf
std
aaa
hlt
scas
shll
out
dec
sub
sub
cmp
in
dec
iret
jp
adc
test
aas
sub
icebp
xor
insb
inc
mov
out
clc
aas
sbb
lcall
pop
cmp
pop
push
pop
ret
movsl
jns
add
jno
adc
jg
repz
pop
adc
mov
push
pop
push
ret
mov
adc
lcall
iret
fidivrs
orb
scas
shll
pusha
pop
mov
lods
fnsave
mov
pusha
push
and
aas
movsl
adc
int3
xchg
pusha
stos
mov
inc
ret
pop
mov
jl
xor
xchg
sub
pop
jns
xchg
scas
aas
and
push
aas
cwtl
and
mov
lock
lods
ret
and
pop
pop
mov
rorl
jno
das
sbb
movsb
jae
sbb
pushf
mov
push
cmp
inc
add
cmpsl
pop
cmp
repnz
cmp
mov
sbb
mov
cmpsb
aam
out
mov
xchg
pop
enter
or
shll
or
pop
aaa
adc
push
out
pop
xchg
inc
push
push
loop
add
pop
jge
jecxz
out
inc
call
adc
cli
mov
mov
imul
cli
lock
mov
scas
xchg
bnd
idivl
adc
or
or
loopne
mov
mov
ljmp
lods
popf
push
jle
cmpsl
jbe
pop
mov
outsb
add
mov
xchg
andl
dec
mov
mov
loop
cltd
test
lods
pop
sahf
repnz
dec
fsubl
push
movsb
lcall
aam
or
enter
fisubrs
lock
fisttps
inc
addl
adc
sub
lods
jae
push
mov
pop
pop
or
cmpsb
ret
arpl
push
and
call
dec
cmc
insb
push
fdivr
pop
xchg
push
leave
jne
push
and
outsb
data16
nop
mov
mov
cli
pop
sub
rclb
insl
cmp
mov
jb
addb
jle
xchg
pop
xchg
mov
and
or
js
cmova
fstps
fs
lods
sbb
push
cwtl
fstpl
fsubs
add
lret
push
mov
lea
fs
add
pushf
sbb
into
lahf
mov
rcll
fcoml
lcall
roll
adc
int3
push
sahf
and
dec
outsl
lahf
ret
and
or
cmc
push
repz
test
mov
pushf
clc
cltd
mov
xor
push
sbb
mov
in
mov
xor
in
inc
leave
sub
cmp
movsl
ret
test
aad
mov
mov
pop
or
xor
js
jb
fsubs
pushl
fs
call
lods
sub
pop
clc
cmp
lcall
lahf
testl
and
xchg
mov
adc
mov
out
xchg
int
and
imul
lods
fmul
icebp
aaa
test
jg
dec
std
outsl
adc
data16
push
and
aaa
inc
rdtsc
and
cld
adc
mov
cmp
icebp
out
enter
enter
hlt
pop
jns
imull
rcll
jns
jmp
jb
inc
pushf
or
test
or
cmc
xchg
in
add
leave
stc
add
insb
push
sahf
jmp
dec
mov
ret
push
pop
xchg
jbe
cmpb
popa
lock
pop
ja
icebp
xchg
daa
movb
xchg
xor
clc
jbe
add
mov
xchg
in
jb
dec
in
jp
or
ljmp
jmp
addr16
mov
cs
in
push
sbb
lcall
inc
pop
cmp
sub
xchg
cmp
pop
test
sti
outsl
cmp
xor
xor
outsl
add
ret
xchg
ljmp
dec
sti
dec
lods
shrb
sbb
mov
test
pop
mov
pop
sub
cmpsb
cmp
inc
dec
xchg
sti
adc
scas
jnp
inc
arpl
or
test
ja
xor
ds
xchg
mov
inc
push
aam
push
sbb
in
adc
cmp
push
in
subb
dec
mov
ss
add
xor
mov
ljmp
adc
push
xchg
jecxz
cli
xlat
lea
pop
test
push
std
pop
pop
push
test
scas
sub
xchg
js
and
orl
fildll
pop
push
loopne
xchg
cld
sahf
decb
ficomps
cmc
je
mov
aad
insb
fdivl
fs
jno
xor
jp
add
xchg
clc
add
mov
xchg
inc
enter
jp
adc
iret
sub
sub
dec
jns
pushf
push
pop
stos
mov
mov
mov
mov
fstl
xor
lret
cmc
inc
insl
mov
rcrl
and
stc
ds
sahf
mov
or
and
sbb
jmp
aam
add
pop
add
in
sahf
lds
xchg
xor
jge
outsb
mov
nop
es
pop
insb
jl
ret
je
xlat
sub
pop
pop
jne
xor
or
cmp
shrb
shl
clc
aaa
lret
fstpt
pop
ljmp
lea
adc
pop
adc
in
repz
out
imul
xor
lds
or
jl
stos
ljmp
push
loop
xor
cmpsb
jnp
pop
decl
mov
xor
pop
dec
push
daa
je
shlb
cmp
repnz
shlb
jle
cmp
repz
js
andl
leave
xchg
or
add
ret
jl
fldz
leave
std
imul
hlt
mov
inc
daa
addl
cli
jecxz
jb
aam
repnz
mov
out
cmp
xor
ss
fisubrl
mov
pop
aam
cltd
addl
ret
mov
fiaddl
outsb
dec
ja
cmp
push
jl
lods
cs
inc
push
sbb
mov
mov
adc
test
loopne
fs
mov
jl
push
stc
xchg
pusha
scas
mov
push
inc
lock
decb
xchg
pop
addr16
ss
out
jg
jg
imul
mov
or
arpl
lcall
movsb
dec
lahf
mov
int
data16
es
in
inc
mov
push
lahf
mov
xlat
mov
sub
jo
cwtl
inc
mov
dec
loope
jo
nop
movsb
popa
movsl
loop
stos
imull
ret
mov
xchg
pushf
out
pop
lret
sub
mov
or
xor
in
mov
mov
fldl
mov
push
and
and
int3
int3
pusha
lcall
mov
imul
je
inc
scas
test
cmp
push
imul
dec
cmc
mov
sub
and
pushf
mov
and
jns
mov
scas
add
cs
insl
pop
shll
xchg
mov
xor
xchg
xchg
lods
lds
mov
xchg
jb
mov
shrb
icebp
scas
cmpsl
add
pop
fwait
cs
das
rcrb
push
or
pusha
divb
and
xchg
sarl
repnz
sbb
or
or
mov
jnp
mov
es
mov
adc
arpl
inc
incl
repz
sub
out
pop
push
jne
xchg
xchg
adc
and
push
orb
cmp
jg
push
xor
pop
push
mov
sti
jg
loope
repnz
push
fistl
adc
sub
movsl
movsl
sub
xchg
dec
jmp
mov
insl
mov
sti
stc
stc
jmp
xchg
test
jle
jnp
scas
xchg
or
xchg
out
sub
push
xor
or
loopne
lock
outsw
std
lcall
add
fcompl
xor
test
cmpsl
mov
mov
sub
pushf
dec
lret
push
jo
adc
aam
bound
adc
aaa
mov
xor
outsb
iret
in
rorb
gs
and
adc
xor
add
aad
xor
test
xor
call
js
adc
mov
movl
push
fldlg2
clc
rorl
mov
xchg
and
adc
nop
stc
mov
mov
movsl
cmp
mov
push
mov
je
cmpsl
in
cmp
jle
pop
ja
popl
xorb
mov
and
cmpsb
sub
pushf
sub
jne
and
ss
xor
call
fimuls
adc
sbb
jae
xchg
pop
xor
mov
clc
unpckhps
movsl
data16
mov
sub
mov
xor
scas
sub
loope
call
cltd
jp
jbe
cli
add
call
sub
push
push
xor
xor
push
inc
sub
add
pop
xor
sbb
sbb
push
adc
or
lcall
jge
push
jmp
clc
std
outsb
adc
sub
add
mov
or
cli
leave
mov
mov
js
dec
jno
push
scas
cmp
add
mov
cmp
aaa
inc
pop
xchg
push
fisubrl
out
scas
add
mov
ja
fdivl
idivb
pop
addr16
iret
pop
sub
lret
sub
sbb
rol
ret
xchg
sbb
pop
jne
sbb
icebp
cld
cli
adc
fildll
cltd
test
iret
sub
repnz
or
out
mov
aaa
and
jns
sub
ds
or
cmp
icebp
mov
ret
xchg
sarl
or
lods
adc
lahf
push
mov
imul
xor
frstor
int3
aas
loopne
cmp
pusha
sub
mov
test
subb
cwtl
test
add
lods
sbb
ret
mov
push
scas
pusha
ds
out
in
popf
cli
jo
or
mov
sbb
add
test
hlt
jbe
sbb
mov
ds
lock
outsl
xchg
push
es
lahf
fimull
jno
lods
pop
lret
dec
inc
ret
mov
xor
xchg
pop
push
cmp
cmp
lods
xlat
adc
xchg
pop
dec
and
test
psubusw
lahf
mov
and
cmp
sahf
and
xchg
lock
adc
loope
push
stos
and
mov
in
or
pop
xchg
xor
stc
adc
lods
shl
dec
pop
or
push
dec
jmp
and
shlb
fadds
and
push
rcll
mov
jecxz
xor
and
push
mov
jb
call
mov
icebp
pop
sub
scas
sub
outsl
cmp
xchg
ljmp
out
aam
sub
test
sbb
pop
in
mov
adc
push
fstpt
and
loop
es
inc
push
loop
xchg
movb
aam
sbb
sub
aad
sbb
sarb
add
cmpsl
je
aad
or
adc
pop
ret
cli
mov
std
dec
in
push
inc
pop
pop
imul
cltd
jmp
in
mov
rcr
pop
push
mov
xchg
jns
mov
pop
stos
movsb
adc
sbb
fnstcw
popf
jecxz
mov
test
mov
sub
push
mov
andl
fnstcw
stc
lret
sarl
pop
jo
and
and
and
xchg
mov
xor
movsl
pop
ljmp
cld
jae
loop
lea
cmp
push
inc
repz
imul
cmp
jb
test
jge
test
jns
fldcw
stos
daa
xchg
sub
mov
jecxz
sbb
dec
ds
scas
stos
test
imul
add
dec
in
cmp
push
sub
divb
sahf
jecxz
add
jns
icebp
pushf
inc
cmp
push
iret
adc
bnd
les
dec
sbb
mov
mov
and
test
sbb
xchg
imul
xor
out
push
add
push
leave
repz
ds
xchg
outsl
jg
sbb
mov
icebp
das
add
lcall
repnz
flds
pop
test
mov
push
jbe
movsl
push
mov
jl
mov
add
adc
or
jg
push
int
mov
shlb
pop
push
lds
jge
fistpll
pushf
pushf
mov
cmp
inc
imul
cwtl
mov
out
dec
flds
mov
xchg
ljmp
hlt
jl
pop
cld
pop
stos
mov
div
sahf
xor
mov
mov
push
or
inc
pop
clc
js
mov
aas
sbb
ja
outsb
cli
insb
lahf
loop
shl
test
pop
test
shrl
pop
sub
pop
sahf
scas
mov
pop
movsb
xchg
cmpsl
ficoml
dec
fdivs
in
xor
push
adc
cmp
inc
push
adc
loop
xchg
int
xor
popf
lods
insb
idivl
sbb
or
add
xor
pop
mov
mov
sbb
icebp
stos
fwait
mov
push
mov
cld
std
fbld
sbb
in
enter
fists
sbb
dec
sub
jns
dec
sbbb
jg
out
adc
cmp
shrl
out
lcall
mov
lahf
push
jge
mov
and
es
aaa
loopne
in
push
leave
push
mov
leave
or
and
daa
push
lea
and
cmp
xchg
aaa
sbb
adc
push
lds
div
or
loop
sbb
loope
lcall
xchg
daa
dec
and
or
pop
int3
inc
mov
xchg
enter
test
jbe
les
sub
sub
int3
or
lea
add
nop
lock
fcom
lret
inc
aad
flds
aad
xor
xchg
pop
fwait
inc
enter
xchg
sub
fstl
lret
push
add
sbb
mov
mov
cwtl
mov
pushf
fisubrs
xchg
adc
adc
loope
xchg
sbb
fldcw
xor
sub
cmp
inc
add
pop
repz
or
aad
and
ss
add
sub
mov
dec
sti
ret
pop
in
mov
lret
mov
inc
cld
sub
adc
outsb
jmp
mov
leave
es
lds
aam
movsl
xor
push
add
or
popa
add
arpl
mov
pop
pop
mov
add
out
ficoms
outsb
movsb
lods
lods
sarl
sub
dec
mov
js
pop
ret
cld
in
cmp
rolb
mov
cmp
dec
into
fucomip
mov
idivb
sbb
cld
xor
lcall
inc
dec
or
xor
adc
cmp
mov
jnp
xchg
cwtl
dec
push
daa
xorl
mov
and
loop
push
scas
fldenv
adc
xor
clc
ret
cmpsb
rcl
daa
insl
outsl
jb
pop
enter
pop
test
pop
mov
pusha
push
out
jmp
icebp
add
pop
daa
ja
fiaddl
pop
orb
cmp
and
or
lods
dec
sbb
je
push
xor
movsb
mov
js
addr16
xor
cltd
dec
pop
add
lret
push
xor
ljmp
push
cwtl
lret
mov
shll
negb
push
sbb
pushl
in
pop
xchg
scas
pop
fwait
or
mov
inc
test
aas
add
pusha
mov
icebp
mov
shl
inc
push
dec
stc
mov
adc
lea
lods
push
mov
fiaddl
imul
mov
xchg
fdivl
jg
add
scas
gs
lretw
loopne
push
and
mov
dec
xchg
push
sbb
mov
push
adc
adc
daa
or
mov
push
int3
inc
sbb
mov
test
add
test
int3
mov
jecxz
cmpsl
dec
and
ljmp
dec
jge
mov
sub
ja
stc
jbe
ljmp
shlb
cmp
dec
mov
push
hlt
xchg
pop
sub
xchg
adc
inc
lcall
mov
arpl
lret
fistps
movsb
mov
pop
lcall
repnz
adc
pop
cmp
popa
inc
loope
lock
gs
bnd
rorb
sbb
push
push
pop
dec
arpl
in
das
cmpsb
or
and
call
dec
pop
out
imul
fwait
call
insb
inc
dec
outsl
iret
shrb
stos
or
into
jne
sbb
rclb
cmpsl
outsb
in
fiaddl
loope
stos
push
fstps
loopne
js
jmp
sub
lret
cmp
add
mov
adc
scas
push
enter
xchg
inc
out
loopne
sub
mov
jo
inc
mov
mov
dec
or
psubw
gs
or
xor
outsb
xchg
sbb
inc
xchg
stos
or
push
inc
sub
out
in
outsl
cmp
sbbl
std
adc
ret
mov
xchg
push
test
adc
test
jecxz
ret
into
fstpl
add
jb
shrb
popa
outsb
fcompl
popa
or
and
dec
fiaddl
cmc
and
fdivrs
mov
test
in
test
or
shl
adc
leave
or
sub
fbstp
dec
int
fiaddl
sub
dec
nop
xor
pop
ja
cli
ret
inc
pushf
adc
ja
mov
sbb
sub
add
mov
shl
leave
aad
repz
jmp
out
stos
fnsave
add
in
pushf
outsl
and
push
inc
daa
mov
mov
fimull
jg
aad
stos
sub
mov
jns
lcall
sub
ss
mov
insl
int
not
cmp
outsb
adc
mov
out
push
push
rcrb
or
out
mov
repnz
int
sub
cmp
out
test
and
jb
roll
sub
leave
push
insb
add
and
mov
xchg
pop
adc
xchg
cmovs
sub
push
rsqrtps
pop
sub
pushf
dec
jge
rcr
std
adc
cwtl
inc
pop
rolb
fcoms
fbstp
sub
xor
jecxz
push
ss
insl
dec
js
or
cs
mov
mov
int
sbb
cmc
push
xlat
sahf
in
jbe
dec
lods
xor
js
sbb
repnz
inc
pop
mov
jmp
repz
sub
imul
pop
aad
cmp
popa
xchg
test
cmp
sbb
into
fisubl
int3
movsb
add
mov
xchg
mov
add
xchg
pop
movsb
ss
or
mov
push
decb
mov
cmpsb
sub
enter
mov
in
dec
and
pop
inc
or
fwait
push
adcl
aas
pop
dec
dec
ds
jns
js
outsb
and
fildll
repnz
stc
push
sub
add
add
sahf
xor
not
dec
inc
sbb
sub
lods
mov
repz
sbb
sbb
mov
fisttpll
dec
les
cmp
out
ljmp
je
cltd
xchg
push
jg
movsl
loopne
jle
xchg
pop
pop
iret
inc
push
nop
add
jp
mov
lock
dec
aaa
xor
insb
pushf
mov
cmp
jp
push
pop
mov
xchg
and
sub
mov
jl
scas
inc
pushf
insb
es
sbb
in
test
mov
sti
outsl
jge
ss
sub
cmc
int3
xor
int
jbe
and
jmp
push
das
test
pop
xchg
scas
or
sub
loopne
inc
js
cmp
lret
lock
mov
jle
aam
mov
add
gs
mov
dec
push
xchg
xchg
sbb
call
push
sbb
inc
dec
daa
fcomip
cli
push
js
in
lods
inc
arpl
test
orl
sbb
mov
fildl
leave
enter
stos
fisubrl
fstps
test
sub
repz
ss
mov
mov
mov
loope
jge
pushf
bound
lahf
add
int3
stos
cltd
sbb
jns
lods
jmp
pop
add
adc
sub
pop
xor
add
lds
lods
jns
and
pop
dec
and
sbb
daa
adc
push
push
daa
xchg
mov
inc
adc
jp
and
sub
adc
andl
sub
aad
jl
js
test
mov
nopl
out
push
dec
push
mov
xor
mov
cld
inc
std
jle
mov
movsb
adc
out
mov
dec
sti
mov
ret
cmp
mov
inc
fistps
mov
cli
xchg
or
xor
mov
adc
mov
iret
dec
cs
mov
adcb
dec
and
jae
mov
shrb
add
xor
call
out
jle
stc
or
clc
lcall
sub
out
or
or
in
sbb
into
fwait
jecxz
call
mov
adc
divl
cltd
ret
dec
enter
pop
push
mov
ret
push
sbb
mov
inc
fsubs
xchg
bnd
loop
xchg
jge,pt
mov
dec
mov
or
xor
inc
jno
sbb
mov
mov
xor
push
jmp
rorb
push
adc
xchg
insl
dec
cli
mov
popw
fucomi
xchg
adc
in
cmpsb
jno
mov
bound
jne
pop
mov
mov
jae
jb
test
jo
jne
clc
call
jae
mov
rorl
repz
mov
jae
sbb
movd
lahf
and
icebp
adc
dec
dec
and
in
and
sub
add
and
ja
cli
shll
or
xor
lcall
cmp
cmpl
xor
cmp
jbe
es
les
dec
xor
pop
dec
pop
dec
loop
popa
xchg
int
pop
ljmp
aad
jmp
mov
lds
pop
xchg
fsts
mov
push
popf
sub
inc
jl
ret
daa
cmp
xchg
mov
stos
inc
push
fisubs
push
movsl
cmp
sub
pop
cld
test
jl
mov
hlt
inc
mov
sbb
inc
outsb
fcmovnu
addb
mov
mov
scas
cwtl
int
scas
shl
and
jge
in
mov
mov
inc
push
lahf
sub
ret
jnp
rcrl
sarl
fwait
ss
xchg
adc
sbb
outsl
push
mov
dec
movsb
adc
nop
or
test
mov
adc
push
rclb
push
loope
jle
inc
mov
push
pop
fdivs
scas
xlat
sub
adc
adc
bound
addr16
adc
sub
das
enter
aaa
neg
bound
lahf
scas
in
xchg
dec
hlt
shr
add
ret
loopne
or
xor
dec
jp
xchg
add
add
dec
adc
push
mov
sub
mov
in
xor
pop
insb
call
pop
mov
sbb
inc
cwtl
enter
xor
xchg
and
hlt
fnstsw
jmp
push
sbbl
fbstp
divb
scas
xchg
jecxz
xchg
xchg
insb
daa
dec
imul
mov
xchg
cmp
dec
xchg
test
loopne
les
jg
xlat
jle
shrb
daa
pop
fdivr
dec
insl
xor
sahf
ss
push
push
pop
ret
das
add
imul
jo
cs
sbb
cmp
rorl
fdivrl
ret
into
movsl
fidivrs
mov
xchg
mov
lods
cmpsl
add
out
mov
dec
xchg
repnz
push
into
loopne
pop
lahf
ds
pop
fs
jo
add
mov
xor
arpl
sbb
jns
test
dec
jne
cmpsl
and
loope
sub
cmp
popa
outsl
in
inc
xchg
sub
mov
cs
cmp
jae
inc
arpl
add
pusha
lods
shll
enter
stos
adc
mov
and
pusha
push
mov
inc
gs
fadd
mov
add
push
mov
ret
js
sbbb
xchg
adc
cmp
and
mov
sbb
mov
cmp
in
xchg
and
cmp
mov
add
int3
ss
outsb
out
clc
cld
jno
push
dec
outsl
mov
outsb
dec
and
ret
negb
sub
sbb
jnp
and
pop
jp
or
jns
or
adc
xor
lods
mov
pop
scas
xchg
mov
and
leave
push
icebp
pop
dec
mov
xorb
cmp
vmovq
or
mov
pop
neg
cld
mov
sub
stos
or
movsb
adc
repz
mov
push
decb
es
mov
xchg
mov
daa
or
push
pop
into
hlt
push
lret
or
fucomi
sbb
jae
xchg
xlat
mov
lahf
sbb
clc
xor
jmp
and
inc
jae
popf
mov
push
les
loope
mov
daa
cmpsb
ret
inc
sbb
push
push
outsb
sub
leave
mov
out
aas
mov
imul
enter
mov
push
add
and
leave
jl
adc
jbe
or
jo
push
insl
call
mov
or
addr16
out
out
outsl
xchg
stc
sbb
int
sub
push
lock
fiaddl
dec
mov
mov
sbb
in
in
fists
mov
stos
fistpll
pop
ljmp
mov
push
push
push
insb
cmp
mov
lods
mov
mov
cld
jmp
jle
shll
ja
mov
or
out
test
mov
das
sub
cmc
stos
pop
mov
int3
iret
lds
jge
inc
bound
cmc
aam
xchg
dec
inc
in
sub
adc
lea
push
shlb
aam
jp
pusha
gs
xchg
scas
sahf
mov
les
xlat
push
jl
imul
leave
cmp
pop
lock
popl
fsts
or
fs
sub
inc
dec
daa
outsb
adc
mov
dec
ja
into
jg
add
lds
mov
fst
and
xchg
add
jnp
jecxz
add
or
lds
and
ja
movsl
and
mov
pop
ret
popf
jmp
and
xor
mov
movsb
add
pop
das
sbb
insb
pop
inc
pop
mov
loop
fidivs
fsubl
movsl
mov
adc
and
adc
das
mov
popf
mov
mov
out
out
cmp
jle
lock
loope
mov
sub
add
mov
nop
push
push
fildll
jne
cmpsl
sbb
loope
jge
xlat
int3
daa
pop
iret
dec
jb,pt
mov
ja
daa
call
jne
adc
pop
test
push
stc
add
mov
outsb
inc
sti
jp
sub
js
test
fdivrp
push
ja
jecxz
sbb
data16
push
out
dec
jp
xchg
lret
aas
adc
sub
push
cs
mov
sbb
mov
xor
sbb
xor
pop
sbb
adc
aaa
addb
dec
mov
arpl
insl
xor
fistl
add
sub
cmp
jb
aaa
cmc
sarl
inc
mov
cld
bound
or
xchg
adc
dec
stos
inc
test
ret
cmpsl
mov
vmovq
lods
pop
pusha
stos
test
xor
xchg
and
cwtl
jbe
inc
je
in
cmc
test
imul
mov
sbb
jecxz
cmp
mov
jbe
fiadds
pop
pop
stos
xchg
stos
rolb
pop
bound
and
add
push
or
dec
push
arpl
icebp
and
sub
dec
cmpsb
add
sti
dec
imul
xor
pop
mov
inc
cmp
or
mull
cmpsl
mov
push
call
sbb
xchg
rol
pop
sub
and
in
xchg
mov
adc
mov
cli
out
dec
into
loopne
int3
adc
js
sbb
sub
sub
ljmp
inc
lret
adc
roll
loope
sahf
subb
dec
jo
dec
mov
jns
jns
icebp
xchg
cltd
lahf
mov
cld
jg
jecxz
popl
or
in
fsubrl
dec
adc
sbb
cmpb
inc
popa
or
mov
test
or
inc
xor
shlb
pop
push
stc
dec
adc
add
mov
xchg
mov
test
ret
scas
nop
mov
pop
xchg
lea
sub
aaa
cmp
movsb
cltd
fidivs
pavgw
push
add
std
jecxz
lret
and
out
cmp
xor
add
and
imul
mov
cmp
gs
outsl
lds
js
lock
or
shrb
repnz
cmc
or
and
add
jp
je
rcll
push
and
jg
push
push
sub
cmp
push
bound
mov
xchg
mov
mov
ja
mov
lea
mov
fwait
sbb
aad
cmp
lcall
mov
daa
inc
xchg
push
cmp
lea
add
inc
add
pop
loope
add
pop
pusha
movsb
fistps
jbe
push
fsubrl
push
nop
push
xor
pusha
sbb
lret
arpl
loop
sar
mov
xchg
pop
sbbl
jns
enter
sub
push
push
pop
cmp
stc
ss
cli
add
mov
leave
sbb
adc
dec
mov
pop
loope
mov
mov
pop
sbb
cmpsl
loop
jge
or
mov
movsl
push
cmp
repz
jnp
pop
roll
out
es
or
ficomps
scas
lock
gs
pop
movsb
push
add
mov
out
pop
adc
sarb
mov
adc
jns
xchg
mov
notb
pop
xor
jmp
sbb
movsb
mov
sbb
dec
mov
push
adc
pop
mov
jb
cmp
sub
insb
push
jnp
outsl
movsb
sub
cmpsl
mov
sub
inc
pushf
cli
mov
push
fdivrl
mov
vcmpps
adc
mov
inc
dec
pop
cmp
mov
dec
cli
add
inc
and
xor
rolb
mov
aam
xlat
icebp
insl
and
mov
xor
mov
insb
adc
jne
xor
mov
mov
lds
in
sahf
sub
imul
adc
sahf
sub
mov
in
adc
jb
pop
jge
out
inc
jno
push
or
jae
xchg
ljmp
adc
add
dec
xchg
scas
fdivr
jl
dec
insl
call
push
test
and
mov
js
insb
jno
adc
mov
pop
or
dec
adc
inc
aas
das
mov
jecxz
inc
shrb
mov
int3
or
dec
cmpsl
scas
ljmp
push
jl
push
fsubl
int
cmp
dec
rolb
aad
jg
in
jo
cmpsb
dec
loope
movsb
frstor
pop
jnp
sbb
popl
sbb
or
jno
bound
jle
push
dec
jne
mov
jb,pt
shrl
dec
idivb
jle
adc
insb
and
es
inc
mov
shrb
das
fiadds
cwtl
mov
dec
nop
cltd
cwtl
stos
lret
or
mov
push
lock
stos
in
xchg
pop
test
and
xor
daa
adc
and
outsl
sub
gs
xchg
pop
or
ljmp
movsb
rorb
push
repz
in
jb
jae
sub
mov
pop
add
enter
es
xorb
sbb
lret
icebp
cs
call
dec
mov
lea
fcomip
es
dec
cmpsl
mov
or
cmp
xchg
movsl
mov
pop
cmp
xlat
dec
push
fldenv
clc
idiv
orb
testl
sub
out
add
or
daa
in
mov
xchg
push
jecxz
loopne
loopne
inc
jmp
lock
cli
decb
fwait
lods
jl
jge
pop
sbbb
mov
mov
out
fidivl
pop
cltd
inc
mov
and
mov
add
add
and
pop
push
xchg
in
sahf
iret
arpl
add
or
adc
das
fld
push
gs
ret
ret
mov
cmp
mov
xchg
aaa
add
cltd
mov
xor
nop
pop
sub
fcoms
lret
push
push
andps
fs
int3
ljmp
sbb
shlb
lahf
push
iret
push
add
inc
in
cmp
ds
loopne
repnz
je
xchg
jge
std
cmpsb
loop
cs
das
pop
push
sbb
or
lock
inc
mov
xlat
sbb
loopne
jl
inc
push
imul
mov
shlb
loope
std
jl
ret
addr16
mov
mov
call
mov
rorl
enter
cld
mov
int3
dec
cmp
fwait
and
scas
cmpb
jecxz
jb
inc
pop
push
shrb
sbb
or
add
xchg
mov
add
dec
fwait
mov
cmpsb
dec
jno
vcvtsd2si
pop
in
inc
test
lcall
std
rcrl
fsubs
je
jae
or
in
mov
mov
sbb
insl
mov
sub
pop
movsb
cmpsb
pop
call
pop
loopne
lods
pop
inc
loope
sub
rep
repz
jo
ret
mov
fsubs
add
push
and
cmc
fs
es
flds
or
pushf
enter
dec
jge
inc
xlat
sub
fidivs
add
jecxz
cld
jecxz
cmp
dec
mov
add
sub
jge
imul
popa
and
mov
inc
fimuls
mov
adc
mov
mov
cli
cwtl
sbb
add
and
xlat
mov
pop
xor
loope
push
jl
std
mov
xor
dec
jl
mov
pop
lret
into
pop
adc
or
pop
iret
xor
leave
adc
nop
roll
add
je
or
mov
mov
and
jecxz
cmc
pop
das
sub
xchg
inc
cwtl
push
shl
incl
lahf
rorl
jle
adc
cld
rorb
and
movsb
jge
jnp
out
bound
fisttpll
fsubs
data16
mov
sbb
cmpsl
push
jmp
rcl
imul
xor
push
jecxz
fcmovbe
or
stc
push
adc
sub
in
test
jnp
pushf
sub
mov
cmp
outsl
lcall
inc
cmp
je
stc
push
rolb
jne
jnp
xor
adc
cmp
mov
sub
lods
arpl
testl
xchg
lods
dec
push
jmp
xchg
arpl
and
ss
fwait
inc
pop
push
dec
ficompl
fildll
xchg
xchg
xchg
pusha
addl
call
aad
push
xor
int
stos
jl
sub
dec
dec
jmp
addl
and
mov
out
sbb
mov
xchg
sarl
out
push
mov
sbb
push
and
data16
addr16
scas
pushf
lahf
or
mov
leave
out
into
pop
pop
add
out
mulb
jo
jns
pop
js
pop
push
mov
sbb
aaa
shrb
aad
and
outsl
push
in
inc
cmpsb
lock
aad
adcb
adc
loop
in
adc
jne
aad
mov
shll
into
sbb
fldcw
add
and
pop
xchg
outsl
xchg
clc
cmp
jg
fiadds
cmpsl
lret
sub
sbb
aas
push
sbb
fnsave
loop
xor
xor
pop
jle
std
mov
outsl
push
pop
jo
cmpsl
xchg
push
fnstsw
frstor
mov
adc
jns
rcll
xor
pop
cmpb
adc
jge
inc
and
lods
lret
mov
mov
out
xchg
shrb
lock
mov
stc
mov
xchg
fldt
inc
push
iret
stos
and
pop
rcr
push
jl
sti
jecxz
shll
cmc
pop
dec
inc
mov
sbbl
scas
lods
adc
add
mov
mov
add
ljmp
ret
mov
add
inc
leave
popa
lcall
lea
push
imul
je
add
xchg
jl
addl
in
xchg
sbb
fdivr
call
xor
jbe
jbe
aam
push
jle
mov
stos
das
or
push
add
mov
lock
aad
call
jg
ss
rcrb
sbb
lods
jbe
push
subl
int3
mov
cmpsb
jbe
scas
pop
and
shrl
push
ja
and
pop
insb
add
sbb
jae
push
cs
sub
mov
xchg
xchg
outsb
pusha
push
jge
sub
aas
mov
lcall
xchg
test
mov
out
sbb
loop
push
test
or
cmp
dec
xor
dec
adc
test
sub
lcall
bound
rcl
jmp
fwait
xchg
sti
loopne
ljmp
or
inc
add
xorb
sub
jge
or
jb
and
movsl
pop
mov
or
aas
pop
mov
jns
fstps
push
mov
mov
std
mov
push
cmp
into
in
and
aad
mov
je
ss
and
xchg
js
cs
adc
xchg
jne
fimull
int
dec
filds
outsb
loopne
lret
cld
js
repz
cmp
jnp
lret
xchg
jmp
int3
sbb
push
push
ss
xchg
fdivrs
xorb
int3
lock
bound
std
cmp
jb
dec
aas
sbb
shlb
stos
repnz
aad
fstpl
std
adc
pop
push
iret
cmp
xchg
cmp
gs
enter
jns
adc
ja
enter
xor
lret
clc
gs
jecxz
fs
mov
and
sub
mov
lret
out
je
adc
push
into
subl
lahf
sbb
pop
clc
fiadds
mov
sub
insb
or
or
xchg
out
and
cli
dec
inc
fstl
mov
pop
and
xchg
mov
movsb
negb
imul
xlat
daa
ffreep
outsb
cli
repnz
xchg
in
lds
dec
jmp
int
out
and
lret
mov
iret
fimuls
outsb
fstps
ds
cld
sbbl
or
movsb
jle
or
aam
pop
dec
sbb
stos
fsubl
xchg
insb
dec
sbb
ja
sbb
punpcklwd
ror
jge
jne
outsl
push
clc
mov
pop
in
sbbb
popa
idiv
xlat
outsl
stc
xchg
inc
mov
xor
fdivl
repnz
mov
xlat
jb
in
and
out
or
add
jnp
pusha
lods
out
enter
fdiv
sbb
fdivl
mov
popf
pop
test
xchg
pop
inc
stos
ljmp
adc
inc
ljmp
andb
shlb
mov
adc
mov
loopne
mov
loope
cmpsl
movb
mov
mov
jmp
and
xchg
jb
fwait
mov
sbb
dec
jl
dec
cltd
inc
xchg
iret
dec
mov
jl
pop
daa
dec
push
scas
test
addr16
loopne
sbb
xor
lret
sub
fldcw
lcall
xchg
cmpb
mov
imul
scas
xchg
mov
push
aam
ja
xor
dec
cwtl
jbe
jle
insb
cwtl
jne
stos
push
lods
les
dec
and
ja
xor
or
test
and
mov
aaa
rcrl
rcrb
or
lcall
jl
into
add
in
scas
sbb
mov
shll
insl
xchg
addl
pop
pop
xchg
cmp
push
jb
leave
mov
test
jns
in
movhps
dec
xor
js
aas
adcl
or
dec
inc
nop
push
fwait
sbb
rolb
jnp
test
aas
push
cmp
lods
aam
lods
add
dec
subl
incl
and
push
sub
outsl
dec
or
aas
xor
rorb
pop
iret
add
daa
movsb
pop
dec
mov
fmull
adc
mov
push
outsb
iret
mov
cltd
mov
jb
dec
push
sbb
mov
icebp
pop
inc
xchg
dec
sub
mov
lods
dec
add
stos
decl
dec
sub
in
inc
mov
push
add
pop
mov
inc
xchg
shll
mov
out
aam
dec
roll
rol
push
inc
push
hlt
cmp
les
jno
sub
sarl
cmpsl
sub
icebp
jp
mov
bound
add
inc
jnp
cmpsl
pop
xor
push
out
cwtl
lods
inc
test
xlat
sub
or
pop
xorb
pop
mov
mov
adc
movsb
push
sbbb
iret
sbb
loopne
or
lds
or
dec
sbb
cmpsl
xor
arpl
jl
cwtl
dec
outsb
ds
push
sbb
jb
mov
sbb
fucomp
jmp
add
push
jl
fcoml
loope
jp
cmpsb
pop
dec
and
mov
xor
sbb
sub
mov
push
movsb
es
lcall
cs
aaa
lahf
popf
add
xchg
outsb
icebp
cmpsl
daa
aad
adc
xor
sahf
jb
or
sbb
cmp
pop
jns
sbb
stos
mov
cmp
and
outsl
js
push
mov
jno
sub
sbb
cs
cmpsl
movsl
jne
test
rorl
arpl
fmuls
push
repz
adc
jle
mov
daa
cmpsb
mov
add
mov
gs
push
data16
mov
dec
inc
adc
or
leave
push
movb
das
daa
xchg
gs
mov
mov
movsb
in
movsl
push
pop
imull
and
outsb
pop
addb
mov
jb
and
stos
push
or
jmp
xor
lods
and
addr16
xor
or
push
mov
jg
ret
dec
push
dec
pop
fnsave
jno
inc
pop
fdivr
adc
fisubl
iret
fcoml
mov
mov
ds
lcall
mov
or
push
push
pusha
xchg
sub
xchg
inc
int
nop
and
imul
stos
mov
sarl
jbe
sub
fimuls
cmp
xchg
cld
je
mov
pushf
ret
sub
or
mov
aas
add
dec
aam
fsts
movsb
or
test
pop
test
sbbl
pop
pop
dec
cli
lock
arpl
jnp
sbbl
push
adc
or
in
cmp
sbb
pop
pop
imul
outsl
scas
int
xlat
loop
adc
jae
mov
mov
cmc
popa
ljmp
aas
mov
pop
lods
mov
and
lahf
dec
xor
mov
sarb
inc
gs
pop
xor
mov
dec
xor
adc
xor
dec
sub
adc
pop
mov
popf
sub
mov
xlat
mov
jge
pop
test
mov
sbb
jmp
daa
sub
push
add
pusha
mov
cmc
test
xor
xchg
dec
sarb
lea
aas
push
pop
mov
inc
sub
add
bound
adc
insl
cmc
sti
pop
mov
mov
mov
out
inc
mov
mov
imul
aad
in
jbe
mov
add
jns
add
stos
popa
pop
xlat
ss
mov
jg
pop
mov
xchg
and
inc
into
inc
pop
cmc
inc
add
mov
bound
cmc
jg
movsl
xor
dec
ret
or
jae
pusha
sub
es
cmp
lods
out
stc
lds
jo
pop
cmpl
pop
xchg
and
add
mov
in
fistpl
nop
adc
xchg
nop
outsl
push
push
add
mov
push
dec
mov
cmp
push
inc
xlat
loope
add
xor
xchg
rcrl
mov
rcrl
cmp
mov
test
lret
sub
xor
cmpsb
test
pop
pusha
cmp
enter
lds
xchg
ficompl
stos
leave
or
mov
aam
cmp
xor
repz
jg
cmp
stos
xchg
cmpsl
xor
xor
xchg
add
das
imul
mov
ret
pop
lock
loopne
test
cmp
xor
mov
mov
and
ficoml
or
fadds
mov
push
mov
in
test
push
and
aad
ss
sbb
push
xor
popa
adc
and
insb
fbstp
push
into
pop
out
add
lahf
movsl
dec
std
add
out
xchg
mov
and
dec
arpl
inc
lret
adc
dec
jecxz
test
daa
cs
dec
mov
push
add
lcall
and
or
mov
loopne
or
pop
rcr
mov
push
pop
adc
add
wbinvd
mov
out
sub
xchg
mov
hlt
pop
sti
imul
mov
call
push
aaa
push
insb
mov
add
push
bound
dec
negb
fcomps
mov
mulb
dec
ret
int3
lea
and
push
outsb
jo
jb
add
mov
dec
xor
mov
mov
pop
or
fcoms
mov
dec
xchg
push
push
daa
push
lea
mov
je
inc
mov
add
ret
cmpsb
stc
add
dec
je
stos
fisttpll
dec
bound
mov
loope
pop
xor
outsl
data16
sarb
mov
mov
pop
cli
cmp
shrl
test
sbbb
pop
add
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
outsb
rol
dec
sahf
xchg
popf
cmp
push
rol
pop
enter
ret
mov
or
dec
out
mov
inc
jg
xor
shlb
pop
adc
mov
mov
cmpsb
sti
push
xchg
sbb
dec
pop
jbe,pn
popa
leave
cmc
movsl
inc
cld
mov
aam
dec
in
rcll
xor
aaa
loope
movsl
sub
into
fildl
aaa
adc
je
and
xchg
adc
int
push
mov
mov
ljmp
jcxz
xchg
jnp
sub
push
int3
pop
jbe
dec
pusha
mov
adc
push
cmc
cmp
sub
or
mov
lret
loope
xor
daa
sub
loop
and
xchg
adc
insb
cmp
xchg
mov
dec
popf
lock
jmp
arpl
fwait
loope
inc
sub
in
ret
pop
test
popf
mov
es
add
aad
pop
cmp
jb
inc
daa
add
sti
mov
adc
jo
xchg
or
ror
jne
dec
jns
mov
xchg
inc
or
push
jl
fwait
lcall
cmpsb
xor
sub
fmuls
out
xor
sti
hlt
jo
pop
sarl
loop
jge
das
mov
out
adc
dec
inc
add
cmpsb
jg
das
aas
out
movsl
punpckhbw
std
xchg
out
cwtl
push
pop
dec
imul
pushf
ret
cmc
or
movsb
push
or
sbb
mov
pop
dec
fisttpll
icebp
sbb
mov
ss
sub
mov
or
in
xchg
add
xor
ds
pop
loope
adc
pop
enter
push
inc
add
outsl
lret
xchg
js
lret
rol
jl
add
and
jp
mov
adc
int
pop
xor
push
lods
mov
popf
push
mov
in
scas
fucomp
pop
sub
push
pop
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
rcrl
