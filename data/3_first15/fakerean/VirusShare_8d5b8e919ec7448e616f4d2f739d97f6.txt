sbb
add
ss
and
imulb
xchg
mov
jp
sub
shlb
lds
cmp
sbbb
dec
lret
leave
fldenv
loopne
ret
or
call
mov
dec
into
push
ret
sub
fs
mov
sub
or
add
outsl
xchg
and
out
enter
and
mov
les
cmp
int3
rolb
in
mov
not
and
sub
popa
mov
mov
outsb
pushf
jns
sahf
mov
inc
jp
iret
ffree
xor
xor
cld
ljmp
push
lahf
lods
xchg
adc
add
adc
test
adc
iret
add
js
or
adc
pop
jmp
xchg
pop
pop
xor
out
out
loope
inc
pop
xor
or
push
int
lret
add
xor
pop
jne
cli
outsl
scas
rcll
xor
sti
fbld
enter
mov
call
int
rolb
dec
test
mov
cs
jbe
pop
pop
add
pop
mov
inc
fwait
or
pop
fimuls
dec
cmc
fisttpll
sbb
jb
mov
push
push
outsl
scas
adc
scas
jge
cmp
xchg
lea
cltd
mov
pop
icebp
into
dec
ficompl
leave
jg
scas
xor
stos
xor
out
orb
mov
mulb
cmpsl
hlt
cmc
jno
or
push
mov
sub
mov
push
sahf
or
sbb
pop
cltd
jns
fisubs
cmp
jb
fsubl
push
ds
and
xchg
int3
mov
xchg
bnd
xchg
add
or
mov
movsl
sbb
or
fs
out
test
rol
jae
outsl
scas
push
and
mov
jbe
je
push
scas
out
inc
loop
cmp
push
add
cmp
inc
shlb
cmpl
jae
ja
push
mov
add
gs
sbb
hlt
out
movsb
adc
mov
and
cltd
out
mov
inc
and
pop
pmulhuw
into
out
je
xchg
dec
cmp
dec
xchg
xor
aad
in
test
int
mov
sti
pop
and
mov
nop
std
sub
push
insl
sbb
jno
popa
lret
test
lret
mov
cld
stos
cmpsl
bnd
in
and
add
pop
loope
stos
cmp
cmp
mov
aad
fucom
jg
outsl
popa
repz
xor
aas
inc
sbb
popf
xor
outsb
cmp
sub
aad
lods
mov
adc
mov
jo
pop
sbb
jo
lods
shrb
cltd
mov
sahf
mov
adc
jg
aam
and
outsl
push
sbb
sub
das
mov
xor
out
xchg
add
test
jno
sub
pop
enterw
pusha
je
in
jp
test
mov
adc
mov
sbb
push
pop
inc
loope
xchg
pusha
push
sbbl
pop
fisubl
sub
daa
fstpl
jo
push
fxtract
xchg
dec
inc
sbb
or
mov
outsb
cltd
sbb
cmpsl
sarb
test
sub
nop
sub
stos
push
mov
mov
nop
sti
jmp
inc
in
int3
mov
loope
ljmpw
sub
mov
lret
jg
cmp
or
popa
dec
mov
bound
fsubrs
jne
sub
insl
test
test
popa
mov
out
scas
dec
jo
das
aas
mov
hlt
adc
in
test
cmp
adc
xchg
xor
fcmovnb
xchg
push
insl
in
cmpsl
loop
out
xchg
mov
in
xor
sarl
jnp
mov
push
cmp
xchg
xchg
xchg
scas
mov
mov
or
jnp
jle
ss
cmp
pop
pop
push
xchg
mov
push
int3
xchg
aad
sub
inc
mov
jle
jnp
aad
int3
pop
mov
outsl
mov
jo
inc
cltd
jo
push
inc
sub
jb
popf
and
sub
nop
push
movsl
or
mov
sub
icebp
push
in
subl
rorl
cmp
repnz
push
or
push
push
movsb
jp
in
xor
test
decb
mov
sbb
xchg
adc
fistpll
call
aam
ss
add
or
cmp
dec
ficoml
int3
mov
cmp
pusha
push
sub
push
movsl
nop
mov
or
xchg
add
and
mov
sub
sub
dec
xchg
ret
cmp
aad
mov
lods
add
mull
movsb
xchg
xchg
jmp
jecxz
xor
gs
sbb
mov
cmp
test
mov
lcall
int
dec
push
cwtl
lods
push
xchg
or
ficomps
shrb
dec
add
mov
cmp
mov
jl
and
jmp
je
test
lock
in
xor
sarl
sub
sub
call
add
fstl
mov
push
jl
ja
or
adc
xor
loop
pushf
dec
mov
shll
mov
push
adc
inc
mov
sub
insb
sub
pop
orb
std
scas
repnz
pushf
int3
cli
out
push
push
and
xchg
jns
rcrl
xchg
lock
sbb
mov
xchg
sbb
ret
cmovp
gs
lods
xchg
mov
out
out
lock
loop
inc
insb
sbb
ljmp
lea
jge
and
cmp
cmpsl
andl
mov
or
xchg
or
pop
push
xchg
sahf
fmul
cmp
lods
das
mov
and
sarb
cmp
inc
mov
pushf
imul
pop
sahf
push
jb
jmp
adc
cmp
xchg
xor
mov
and
insl
aad
ret
sbb
push
insb
add
pop
cmpsb
cmp
adcb
adc
lret
mov
or
nop
cmp
sbb
repz
cmc
sbb
arpl
fistpll
lret
pop
push
js
movsb
add
jo
scas
cmp
push
add
jnp
mov
adc
sbb
mov
sub
sub
cmpsb
test
bound
cmp
mov
mov
leave
popf
std
icebp
inc
xor
iret
daa
or
add
sti
dec
test
mov
sbb
push
adc
sub
or
addr16
mov
aas
and
adc
adc
push
test
repnz
mov
jmp
mov
push
mov
fsts
cmp
jnp
cmpsb
cmpsb
loopne
fwait
push
jmp
sti
jne
mov
das
scas
mov
jo
jmp
adc
mov
cmp
or
sbb
mov
out
daa
enter
movsl
xor
popf
test
fdivrs
cmp
dec
lahf
pop
popf
sahf
cmp
mov
or
pop
sbb
cmp
adc
xchg
test
xchg
xchg
adc
sub
xor
or
test
pop
dec
or
ret
adc
jnp
in
push
inc
imul
mov
mov
scas
loop
xor
pop
xchg
aam
add
push
lret
pop
push
jb
cmp
xor
mov
ljmp
cmpsb
lds
movsl
jp
repnz
jne
bound
mov
in
lcall
les
dec
enter
push
pop
cltd
sbb
jl
jnp
sub
dec
wrmsr
mov
out
punpckldq
fst
std
pop
shlb
addr16
or
test
cld
stos
rorl
pop
xor
jbe
jp
mov
clc
mov
adc
aam
xchg
push
cli
aas
dec
cmp
loopne
or
gs
hlt
cmp
adc
cmp
lcall
in
jns
dec
xchg
inc
cld
pop
rcrl
test
mov
cmp
xor
or
jle
fwait
dec
inc
sub
dec
imul
stos
dec
fnstenv
xchg
fstps
lahf
test
lds
lret
ss
adc
xchg
fcoms
or
loop
pushf
inc
mov
cmp
pop
push
stos
aam
or
or
cmp
inc
dec
lods
fcomps
nop
add
pusha
repz
stos
mov
clc
mov
fld
test
aas
xor
inc
pop
call
dec
mov
pop
loopne
xchg
sar
cmp
iret
push
mov
outsl
into
lret
loop
mov
or
adc
lods
mov
out
in
fwait
lds
ror
dec
ret
mov
mov
jo
pop
jmp
ss
mov
adc
add
popa
imul
test
xchg
nop
jae,pt
mov
imull
fcompl
out
sahf
push
pop
mov
xchg
lahf
test
das
loopne
bound
sub
and
mov
jae
mov
jmp
pop
gs
dec
mov
pop
movsl
pop
movsl
stc
add
push
or
aas
dec
xor
adc
inc
jmp
std
jp
sub
mov
push
jl
jbe
push
adc
fisttpl
jecxz
sub
pop
addr16
and
lahf
mov
dec
cwtl
pop
scas
adc
enter
aas
test
mov
fcmovnu
add
sub
outsl
cmc
jle
mov
mov
popa
aam
lret
push
sub
xchg
mov
and
movsb
add
aam
enter
dec
mov
fwait
dec
and
sub
inc
lcall
mulb
out
scas
dec
loope
inc
daa
int3
jne
bound
ds
cmpsl
addr16
sahf
arpl
hlt
mov
mov
das
popa
lea
sub
inc
mov
sub
and
lock
pop
addr16
clc
rcr
or
inc
lahf
jo
jo
xchg
xlat
int3
or
fucomp
hlt
imul
sti
in
lcall
pop
sbb
push
sbb
mov
lcallw
mov
add
imul
cld
inc
data16
dec
or
pop
orb
pop
or
stos
data16
sub
in
ds
lret
or
mov
jae
cmpsb
cmc
cltd
daa
test
xor
jnp
inc
push
mov
stos
adc
popa
movsl
les
ret
pop
xchg
dec
jbe
ss
idivb
fidivs
sar
sub
push
sub
jmp
jecxz
add
iret
xchg
lods
pop
push
pop
std
fstl
xchg
push
bound
fidivs
or
ds
or
test
loopne
repz
fsubs
xchg
leave
pop
cli
ja
stc
mov
or
aad
mov
mov
lock
repz
outsl
je
out
mov
loope
mov
lret
mov
bswap
dec
mov
cmc
out
insl
sbb
or
std
mov
add
inc
pushf
add
inc
adc
sbb
sbb
rolb
sub
push
imul
sub
mov
sub
ret
and
jecxz
pop
insb
test
mov
sbb
aad
mov
sbb
mov
and
scas
mov
ljmp
sub
insb
rorl
mov
outsb
outsb
in
cmp
scas
push
push
sub
rorb
cwtl
loop
movsl
xor
out
insl
sub
mov
mov
in
xchg
cmc
dec
xor
or
xlat
loopne
sub
mov
std
arpl
inc
orb
xor
push
jge
xchg
mov
addr16
pushf
mov
dec
ret
gs
stos
push
and
xor
xchg
fimull
sbb
xlat
cmpsl
xchg
cmpsb
stos
out
mov
xchg
xor
and
mov
dec
mov
push
insb
ljmp
test
loopne
mov
add
sbb
enter
fisttpl
dec
inc
les
dec
in
roll
pop
inc
sub
pop
dec
xor
sbb
jg
sub
sbb
mov
lock
mov
daa
xor
add
push
push
mov
xchg
dec
call
sbb
mov
data16
cmp
test
int
and
inc
lods
lret
out
scas
mov
dec
out
mov
cmp
xor
mov
jno
iret
loop
mov
popf
push
cmpsb
fistpll
jecxz
add
mov
fwait
xchg
cmpb
jp
sbb
ja
or
pop
mov
aad
das
sub
cmp
test
push
inc
aas
or
mov
xchg
inc
les
insb
movsb
xlat
jle
adc
clc
lods
dec
fldt
mov
pop
cwtl
mov
jbe
pand
sub
in
dec
and
mov
nop
fwait
mov
movsb
adc
out
jne
dec
mov
lret
mov
std
and
cli
xchg
imul
xchg
hlt
or
out
out
aad
arpl
push
cld
cltd
mov
xor
dec
scas
fs
and
std
iret
jb
dec
xor
popa
sub
insb
int
stc
shlb
cmp
jns
test
pop
push
adc
movsb
pop
fcoms
push
adcb
push
push
dec
mov
mov
insb
adc
fsubrl
cmp
sub
outsl
cld
add
mov
movsb
stos
rorb
in
data16
cmp
sub
popf
lret
mov
xchg
mov
les
dec
mov
je
xchg
sbb
and
pop
call
test
aam
test
cmp
aam
and
jmp
cwtl
je
shlb
inc
dec
test
mov
xorl
cmp
mov
add
cs
pop
test
repnz
push
jge
add
fwait
inc
jg
inc
ss
mov
xor
fisubrs
mov
dec
je
roll
jb
mov
jb
insl
adc
jnp
sbbb
inc
movsb
pop
pop
cmp
or
mov
sub
fistl
xor
or
sub
aad
mov
test
mov
sbb
jge
or
push
dec
mov
clc
and
cmp
cmp
aad
xchg
fmull
jle
jns
mov
mov
jbe,pn
cmp
add
jmp
mov
cmpsb
or
dec
mov
ret
add
outsl
xchg
bound
dec
xchg
pop
in
int
mov
inc
sbb
inc
fwait
inc
inc
and
pop
iret
cmp
jl
adc
out
lret
negb
xchg
fsub
xchg
add
adc
repz
mov
test
push
sbb
pop
mov
test
xlat
leave
lea
inc
inc
jns
inc
rorb
inc
rorb
arpl
repnz
push
inc
pusha
mov
mov
mov
add
rorl
push
cltd
adc
test
rcll
mov
or
push
insl
cmp
fnstenv
xor
popa
ret
imul
mov
test
fwait
mov
lds
inc
iret
push
sbb
call
aaa
adc
cmp
cmp
testb
push
andl
outsl
jecxz
dec
test
inc
lock
test
mov
cmp
movsb
pop
xor
movl
jecxz
dec
add
into
stos
add
jl
insl
adc
add
inc
mov
sub
dec
sub
fldenv
or
popf
add
ljmp
push
sub
dec
inc
mov
and
loopne
cmpl
or
lds
cmp
rclb
sub
mov
movsl
pop
std
add
xchg
repnz
adc
jns
bswap
dec
into
aam
aam
pop
jge
cs
sub
adc
ret
addr16
cli
jnp
sbb
je
mov
dec
fistpll
mov
sbb
or
insl
cmp
insb
sbb
sbb
test
pop
jecxz
arpl
mov
pop
frstor
into
sbb
out
inc
mov
shrl
iret
insl
sub
out
and
lahf
xor
cmpl
push
mov
cmp
ja
or
imul
mov
pushl
jp
xchg
mov
sub
xor
shl
popf
jg
fsubs
cs
mov
call
or
test
gs
jnp
addb
xchg
js
idiv
ficoml
fimull
xorl
ljmp
sbb
inc
pop
mov
cwtl
fcmovnb
xor
jp
stos
dec
xor
mov
out
dec
and
mov
cs
aaa
aaa
mov
lahf
jg
push
pop
sbbb
out
rclb
lret
insb
sti
outsb
cmc
xor
pop
daa
jbe
testb
jle
xchg
and
push
pop
shl
mov
add
mov
jge
repnz
mov
ja
dec
std
sbb
lret
mov
sub
fsubl
lds
arpl
xor
add
sbb
add
loope
add
jnp
jmp
push
adc
bound
pop
stos
fnsave
inc
and
int
pop
or
sub
xchg
cs
ficomps
repz
xor
cmpsl
popf
ljmp
negb
and
adc
sbb
mov
and
sbb
sub
push
shlb
push
lahf
repz
jle
imull
scas
jo
je
pop
jg
jl
lret
mov
jae
in
popf
cwtl
sub
and
stc
loop
mov
scas
aas
popf
pop
inc
loop
fisubrl
insb
pop
lea
adc
xchg
push
add
into
xor
and
out
fisubrl
cmp
imul
xor
and
inc
es
icebp
test
mov
nop
adc
cmpsl
nop
dec
arpl
mov
push
mov
fwait
sbb
xor
and
fs
paddw
mov
movsb
jmp
ror
adc
fmull
mov
cmpsb
mov
clc
orl
imull
imul
push
adc
outsl
jae
lahf
cmp
mov
sub
push
sarb
pop
xchg
out
aad
or
adc
xor
jl
inc
int
sbb
jl
jl
shll
mov
xchg
negb
jle
mov
xchg
movsbl
mov
jnp
sbb
push
adc
cmp
dec
pusha
inc
push
mov
hlt
xor
insl
dec
cmp
sbb
popa
adcl
test
pop
jne
mov
aam
or
push
sub
insb
scas
jbe
mov
and
and
jl
mov
xor
xchg
jmp
jns
sbb
xchg
pushf
subb
std
mov
adc
cmp
inc
aaa
xchg
repz
xchg
and
dec
icebp
pop
hlt
mov
xchg
cmp
and
xchg
pop
insb
fwait
out
fwait
push
dec
aad
repz
jo
push
push
sbb
in
xchg
ret
jg
lahf
mov
jmp
pop
in
into
out
div
add
loop
in
rorb
mov
mov
jb
inc
xor
dec
stos
jne
daa
out
xchg
out
dec
cmp
adc
test
adc
xor
push
outsl
pop
ja
sbb
sbb
inc
movsl
je
cwtl
xorb
cmp
insl
les
xchg
cmpsl
in
or
add
or
das
mov
cmp
lods
and
cmp
sub
dec
dec
xchg
call
cmp
js
shrl
and
shlb
pushf
xchg
ret
gs
add
loope
jp
xor
pop
outsb
and
test
int
nop
icebp
cmpb
aad
cmp
fs
xor
sbb
pop
pop
std
daa
xor
inc
and
ja
pop
dec
andl
loop
xorl
cs
cs
push
sahf
xchg
jecxz
jnp
lods
pop
iret
mov
pop
add
ret
jmp
leave
cmc
btr
ljmp
in
arpl
leave
mov
inc
movsb
xor
filds
sub
sbb
mov
pop
jle
iret
sbb
lcall
fadds
inc
push
imul
popa
loope
loope
cld
jno
xchg
push
xchg
les
xor
stos
icebp
mov
and
or
adc
mov
jne
pop
sbb
sub
xchg
test
stos
imul
mov
jge
xchg
sub
jg
mov
push
outsb
cmp
adc
adc
adc
pop
jbe
xchg
lcall
or
into
push
or
stc
fsubr
xchg
pop
cmp
outsb
or
sub
pop
push
push
cltd
push
push
in
cmpsl
xor
gs
push
les
hlt
jmp
popa
in
xchg
lret
repz
adc
cwtl
push
rcrl
mov
cmp
or
scas
dec
out
or
enter
mov
dec
xchg
sbbl
in
mov
jb
pushf
add
es
test
je
adc
push
push
addr16
pop
xchg
and
push
iret
mov
inc
sbb
and
fs
jnp
adc
mov
loope
push
mov
leave
aam
std
xor
adc
cmp
insb
cmpl
movsl
das
movsb
adc
lods
mov
dec
inc
inc
mov
xchg
dec
mulb
xchg
test
jb
fldt
outsb
sbb
or
jp
push
sbb
or
pop
and
or
mov
dec
or
adc
notl
jb
xchg
sub
inc
incb
fistps
or
lret
mov
fdivp
xor
mov
xchg
aaa
aad
sub
xchg
push
loop
sbb
xchg
stc
lods
inc
push
and
cmc
sti
cld
mov
out
adc
mov
outsb
cmp
adc
sub
pop
cmpsl
notl
add
pop
test
push
sub
lods
cs
add
lock
shrb
mov
loop
call
mov
call
stc
mov
mov
inc
lahf
popf
sbb
in
fldt
jnp
pop
fwait
lock
pusha
sub
add
fdivp
dec
imul
or
loope
jle
push
inc
mov
and
lcall
aaa
jge
lods
jo
mov
pop
adc
icebp
test
cmp
add
xchg
cmp
add
lret
out
es
loope
fs
shll
shll
xor
notl
insb
jmp
adc
xchg
or
iret
xor
push
movsb
xchg
push
aad
clc
add
shrl
jno
xchg
add
mov
xor
cwtl
test
jecxz
xor
or
js
mov
and
std
push
adc
push
add
cmpsb
je
jb
xor
lahf
or
popf
cmp
push
out
xor
sti
xchg
in
mov
cli
es
insl
pop
adc
mov
jb
jle
mov
cmp
in
test
aaa
sbb
cwtl
sub
mov
testl
js
cmpsb
inc
jne
out
sub
xchg
mov
pop
aam
repz
xor
sbbl
sub
ja
orl
fnstenv
sti
sbb
pop
xchg
mov
jl
push
loopne
xlat
cltd
pop
ljmp
mov
mov
push
shrl
or
ljmp
sbbb
cmpsb
movsl
cmp
dec
test
xor
dec
das
or
fmul
int
fs
xlat
pop
or
mov
scas
rolb
pop
popf
les
jge
sahf
lcall
loopne
jno
xor
mulb
ror
sub
fwait
mov
cmp
pop
pop
xor
ret
stos
stos
rorb
je
and
lea
ret
pop
add
mov
inc
leave
in
mov
inc
pop
lods
mov
out
daa
je
cld
enter
enter
call
cmp
inc
adc
inc
scas
mov
mov
pop
imul
or
leave
sub
mov
fldlg2
sub
push
inc
mov
push
lret
jmp
xchg
or
mov
inc
aad
sbb
push
into
push
addr16
or
lret
fildl
movsb
xor
inc
push
pop
or
ror
into
rcr
aas
rorl
push
ss
mov
sub
push
in
test
or
mov
movsl
test
dec
mov
cmp
repz
fdivrp
cmp
aaa
mov
stos
jnp
mov
mov
xchg
loop
outsb
adc
jo
jle
movsb
fcompl
iret
inc
fstps
add
dec
aas
in
mov
mov
push
imul
fidivl
pop
and
sub
pop
out
test
mulb
daa
fwait
push
mov
mov
shrl
fdivp
out
addr16
dec
pop
mov
mov
adc
sti
fcoms
jno
lods
or
rclb
shrl
cmpsl
xchg
sbb
pop
das
into
ljmp
and
sbb
sbb
mov
add
xor
es
out
daa
mov
ds
adcb
and
pusha
std
mov
loope
xor
call
mov
jp
cs
ds
pop
pop
push
jb
test
pop
pop
cmp
mov
add
adc
sbb
sarl
sbb
pop
das
scas
adc
bound
jnp
cmp
fistpl
and
xor
push
loope
xchg
mov
adc
addr16
popf
adc
loopne
mov
dec
fiadds
push
pop
add
xchg
call
popa
add
mov
orl
ds
arpl
sbb
mov
decb
cmp
mov
sbb
leave
stos
push
gs
jns
dec
mov
inc
test
in
aas
rcrb
in
mov
or
jne
lret
and
pop
push
push
or
sbb
jbe
mov
xchg
xchg
jae
sub
mov
lea
sarb
push
dec
cmpxchg
std
push
imul
stc
shrl
sbb
mov
fisubl
sub
push
lret
xchg
pop
hlt
mov
je
push
in
inc
std
flds
jmp
or
or
push
inc
mov
test
add
ds
jae
pop
scas
in
icebp
jo
push
jb
adc
cmp
arpl
outsb
pop
outsb
mov
xchg
jecxz
imul
push
mov
fwait
mov
sbb
and
xchg
nop
fs
sub
mov
leave
cltd
ret
lds
push
fidivs
jno
push
gs
into
or
dec
movsb
scas
push
or
push
sbbb
rolb
pop
cmp
pop
icebp
inc
jg
adc
in
mov
add
xor
xchg
ret
mov
inc
jge
sbb
xchg
sahf
inc
sub
xor
shlb
mov
cmc
sbb
sbb
mov
pop
mov
bound
lret
sbb
xor
sub
jb
mov
pop
std
or
pop
bnd
jge
loope
ret
ja
add
or
repnz
fnstsw
push
pop
or
mov
cltd
add
or
dec
movsb
cmp
mov
js
stos
xchg
xchg
aaa
bound
sbb
or
ljmp
mov
mov
push
stos
push
jo
loopne
push
push
out
int
inc
fld
xor
xor
inc
inc
insl
jge
xor
push
fcmovnb
push
dec
inc
dec
in
insb
inc
mov
add
push
shlb
subb
mov
inc
mov
lahf
and
mov
rol
sub
or
fistpl
lret
mul
jno
enter
out
ret
sub
js
xchg
hlt
or
loopne
jl
gs
sbb
fdivs
ljmp
or
xchg
mov
insb
cmp
lods
sbb
loopne
sbb
fadds
add
jo
push
es
mov
inc
sarb
imul
push
cmc
out
fadds
jle
push
and
cmp
jno
test
add
mov
jbe
add
xchg
cs
mov
cs
outsb
fistpl
cltd
and
fldl
adc
mov
cmp
adc
adc
or
add
jne
mov
add
inc
daa
jle
in
xor
dec
push
fdivl
fs
in
sbb
pmaddwd
pop
push
pop
push
and
fsubr
inc
inc
popa
fadds
outsb
cmp
loop
jp
rcrb
pop
test
les
repz
sub
push
pop
push
inc
mov
ds
xchg
xor
gs
nop
jae
inc
push
sub
out
std
jnp
mov
cmp
pop
cmp
cmpsl
mov
enter
mov
add
fstpt
bound
inc
mov
mov
xchg
adc
ss
aad
in
cltd
dec
lret
cmp
xor
lds
lds
rep
movsl
cli
inc
jle
dec
cmc
daa
loope
pop
xor
push
or
add
jno
mov
or
mov
mov
mov
xchg
jnp
mov
cmp
stos
jo
xchg
mov
and
xor
pop
cmpsl
mov
sbb
mov
pusha
js
bound
xchg
insb
inc
int
jae
pop
push
arpl
ja
xlat
mov
in
jne
ficoms
xchg
pushf
sub
xor
daa
mov
jle
lea
push
loopne
pop
jnp
nop
insl
add
add
hlt
loope
mov
repz
cli
jno
pop
ja
pop
or
jns
mull
push
es
pop
leave
mov
ljmp
leave
icebp
mov
xchg
notl
pop
pop
pop
insb
jno
mov
leave
nop
shll
jbe
xor
mov
mov
in
cmp
out
pop
mov
or
out
pop
insl
xor
outsb
push
sub
call
jne
or
mov
xor
addr16
dec
je
and
push
in
daa
sti
mov
mov
ror
cmp
pop
and
xchg
mov
test
test
add
in
sbb
or
push
fistl
cwtl
repz
sbb
cwtl
sti
cmp
cs
sbb
add
xchg
adc
addl
push
mov
inc
dec
sti
stos
into
test
mov
inc
pop
mov
pushf
in
dec
or
xchg
mov
daa
enter
test
test
xchg
aaa
mov
stos
popf
cmp
mov
inc
ja
rclb
rol
insb
scas
xlat
mov
ficoml
add
mov
test
mov
jp
pop
sub
mov
jmp
jne
lret
cmp
rcl
lahf
add
mov
jg
gs
cwtl
loopne
rol
xor
addr16
xor
dec
pop
movsl
pop
push
lahf
or
rorl
mov
and
popa
jnp
push
ljmp
pusha
test
xor
pop
pop
mov
push
jg
daa
pop
lahf
xchg
and
mov
lahf
pop
push
pop
push
jnp
cltd
jecxz
notb
jo
nop
sbb
shll
aaa
and
loopne
lock
loopne
mov
jb
das
in
xchg
int3
das
inc
in
test
or
mov
xchg
push
repnz
xor
inc
pop
loopne
out
lods
in
in
lods
loopne
mov
sub
mov
divl
jl
sti
cltd
fdivs
jno
or
mov
push
and
jecxz
adc
add
loop
je
inc
mov
jbe
adc
xor
idiv
xor
dec
adc
filds
cli
int3
jg
mov
pop
jbe
cmc
xor
repz
mov
popf
bound
popa
nop
aaa
push
mov
nop
shl
mov
add
pop
cs
test
cmpsb
mov
dec
sub
stc
cmp
dec
and
icebp
and
cmp
mov
frstor
dec
int3
dec
cmpl
xchg
aad
into
mov
dec
ljmp
jbe
inc
fadd
or
stos
xchg
push
popf
inc
pop
imul
or
sbb
jge
adc
mov
es
cmc
stos
mov
or
ret
ret
popf
sarl
sbb
in
repnz
xor
ret
cmp
push
pushf
scas
sub
lahf
daa
sub
loop
push
ja
or
jecxz
lds
dec
xchg
push
mov
ret
lock
lods
pusha
aaa
gs
hlt
jecxz
cmpsb
jp
pop
adc
and
inc
in
dec
shlb
lahf
mov
and
mov
cltd
inc
das
inc
inc
jbe
fwait
lock
cmc
or
insb
push
xor
jl
push
or
jno
es
adc
lret
dec
jmp
pushf
mov
inc
out
lds
mov
sbb
cld
mov
push
neg
sbb
mov
sar
pop
mov
inc
imul
jmp
stos
sbbb
mov
adc
pushf
xchg
sbb
lock
fnstenv
push
sub
jne
push
cmpsl
in
stos
rolb
nop
cmpsl
outsb
call
scas
imul
sbb
jno
add
cmp
popf
jg
andl
cltd
pushf
fidivs
arpl
mov
jmp
add
enter
inc
pop
xchg
ljmp
int
inc
push
jmp
add
xor
mov
insb
sbb
mov
ss
pop
mov
faddl
dec
inc
mov
fnsetpm(287
xchg
cmp
sub
sub
add
jns
jns
ret
adc
adc
mov
mov
insb
inc
or
je
notl
pop
les
mov
or
inc
pop
xor
adcl
add
adc
cwtl
add
and
ret
daa
mov
cmp
push
outsb
add
sbb
popf
cmp
or
insl
jmp
sub
jnp
mov
daa
aas
je
shlb
mov
or
dec
or
loopne
insl
and
jmp
jge
pop
fdivrl
push
cld
push
fisubrs
push
cmpsb
shl
mov
repz
scas
loope
pop
or
and
jns
or
aas
pop
fs
lds
add
push
adc
adc
inc
mov
clc
pop
push
pop
cmp
outsb
mov
pop
add
mov
sub
and
mov
xchg
cs
mov
loopne
jmp
mov
test
xor
adc
fxch
mov
icebp
lcall
jo
adc
sub
sbb
inc
fisttpll
sub
or
das
ljmp
or
push
lds
aaa
lea
lods
jl
mov
insb
in
or
std
out
cld
cs
insb
cld
sub
shl
xlat
leave
mov
ljmpw
mov
sbb
int
movsl
adc
mov
sbb
cltd
lods
pop
cmp
mov
sti
ljmp
imull
in
test
das
mov
sti
inc
and
jl
fs
das
repnz
mov
repz
arpl
mov
inc
sbb
pop
sub
push
idivl
test
inc
xchg
fsubr
jge
mov
scas
push
shll
lret
jne
sub
mov
xor
out
xchg
xchg
and
mov
mov
imul
inc
push
scas
orb
cmp
push
in
loopne
and
shrl
xchg
pop
sub
add
push
inc
mov
add
fdivl
xchg
adc
out
lods
js
push
aas
out
aam
clc
test
push
roll
mov
jno
sbb
xor
add
sbb
pop
mov
xchg
mov
stos
dec
jge
or
adc
xor
mov
dec
ficomps
ss
pop
sub
iret
sahf
mov
fadds
cmpsb
aam
pop
adc
xchg
adc
push
inc
int
pop
in
pop
push
cmp
out
add
jle
and
test
imull
call
fwait
lods
cmp
sarb
pusha
or
adc
mov
testl
adc
popf
sub
mov
xchg
pushf
movsl
xor
jns
mov
cli
pop
bound
fildl
xor
xchg
in
xchg
xchg
sbb
ljmp
fcom
pop
pop
outsb
vmovshdup
mov
or
cmp
adc
mov
stc
imul
sub
ja
adc
outsl
aas
push
mov
icebp
mov
cmp
bound
aad
pop
adc
sub
jnp
arpl
mov
mov
pop
popf
push
xor
mov
jge
lcall
les
xor
mov
and
fsubrs
hlt
mov
push
mov
lcall
xchg
ficomps
jp
pop
mov
sar
lock
jmp
aas
insl
or
out
push
push
leave
xchg
mull
sbbl
pop
cli
sub
je
sub
lret
push
rcrl
lea
jecxz
mov
cwtl
pop
popf
jecxz
cmp
cltd
xor
out
xchg
or
adc
xor
adc
je
cmp
fistps
mov
jp
fcomip
dec
negb
jo
ss
inc
mov
scas
push
mov
ret
dec
std
inc
lret
push
add
aaa
js
cmp
mov
sbb
jne
dec
jns
dec
test
popf
iret
repz
push
cmp
rorb
xchg
lret
in
push
pusha
arpl
mov
es
js
jl
sbb
sub
stos
testb
dec
xchg
mov
cmp
jg
je
mov
mov
insb
adc
mov
and
cmp
inc
movsb
ret
xchg
push
push
adc
pop
xor
les
xchg
daa
cmp
mov
jns
pop
mov
push
imul
add
push
xor
and
lcall
add
cmp
mov
push
jb
mov
lds
movsl
xchg
stos
aam
xorl
xor
cltd
das
cmp
lds
in
out
mov
xor
cmp
sti
repnz
dec
pop
dec
fldl
xlat
xchg
lret
fbstp
imul
dec
ljmp
mulb
sbb
stos
xor
push
mov
mov
mov
es
pop
cmp
xlat
std
cmp
push
pop
repnz
adc
sub
inc
xor
js
push
dec
aad
sub
sbb
enter
movsb
mov
jle
inc
or
aas
rsqrtps
fdivp
push
rclb
fsubr
dec
lahf
cmpsl
add
xchg
mov
stc
stos
das
loop
arpl
dec
jl,pt
mov
mov
addl
or
pop
mov
loop
pushf
xor
dec
cmpsl
mov
into
test
call
xchg
data16
push
sbb
stos
mov
mov
pop
xor
fs
pop
xor
fiadds
ret
out
mov
negl
dec
adc
rcrb
sbb
xchg
pushf
jno
gs
test
sub
xor
sub
xchg
pop
inc
pop
insl
mov
pusha
mov
into
sbb
mov
int
dec
stos
mov
xchg
ficoms
and
mov
stc
insl
mov
lret
lea
and
xchg
inc
jg
mov
or
imul
repz
cs
mov
mov
jno
and
sbb
jo
lret
mov
pop
mov
ljmp
add
pop
dec
call
out
or
test
push
xlat
aad
stc
adc
and
cmpl
es
pusha
jecxz
mov
mov
fsubrp
jp
mov
loopne
dec
inc
cmpsb
pop
lods
call
cltd
insb
lods
or
jne
push
add
gs
stc
popa
sbbb
dec
fmuls
call
inc
and
sub
mull
outsl
xchg
repz
insl
dec
nop
jmp
das
and
pop
fimull
mov
ja
outsb
enter
jno
push
mov
notl
popa
xchg
imul
adc
xchg
fdivl
das
pushf
sbb
push
pop
cld
push
jg
dec
mov
mov
jecxz
fldenv
jmp
sub
xchg
cs
push
adc
pop
jp
sbb
push
dec
ss
in
lds
push
loop
insb
int
mov
mov
sbb
bsf
adc
mov
mov
sbb
imul
or
jl
pop
jae
sbb
es
loopne
sbb
pop
pop
test
fisubl
mov
loop
or
dec
aad
adc
sub
mov
inc
mov
inc
xchg
mov
jno
out
sub
hlt
sub
fwait
hlt
loop
pop
dec
mov
mov
jmp
or
pop
fwait
cmp
push
or
or
sub
data16
sbb
mov
iret
push
pop
ret
rcrb
fs
hlt
shll
push
cmpsb
add
mov
adc
mov
pop
mov
neg
adcb
scas
test
ljmp
push
ja
inc
jge
push
data16
cmp
push
mov
and
es
fldt
aas
ss
sbb
xor
add
mov
out
jp
in
mov
enter
and
sub
push
jge
xchg
jl
lret
mov
lds
aad
fldenv
add
pop
xchg
sbb
jo
rclb
mov
mov
xchg
jnp,pt
adc
fwait
adc
add
xor
cmc
fmuls
cmp
xor
mov
push
or
mov
fdivs
lea
je
stos
rorl
push
addr16
imul
mov
jle
frstor
fisubrl
mov
or
test
aas
pop
pop
sub
nop
popa
push
out
mov
cli
scas
call
or
jecxz
adc
xor
cmc
outsb
call
sbb
enter
inc
push
push
sub
fsts
adc
stos
mov
or
mov
jge
js
je
repz
lret
ret
loop
sahf
xchg
push
mov
scas
stos
sub
inc
xlat
out
out
jl
sub
inc
aaa
lcall
in
mov
inc
inc
testl
sbb
fisubs
pop
mov
push
leave
cmp
mov
pop
xchg
sahf
add
sti
jb
and
insb
insb
sbb
das
movsb
cltd
jae
cmp
xor
adc
mov
mov
cmp
jae
pop
cmp
in
aaa
sub
cltd
jecxz
jae
icebp
xchg
imul
jno
or
lret
dec
dec
dec
ret
pop
into
adc
cmc
push
fcomp
and
jecxz
xlat
fimull
inc
mov
and
or
fistl
adc
xor
sub
int
xor
mov
stos
pushf
mov
add
or
fwait
pushf
sbb
sbb
or
cmp
adc
fwait
sub
hlt
jno
inc
in
outsb
popa
adc
sub
jp
pop
loop
outsb
dec
into
dec
or
adc
jp
jns
fnstenv
and
in
ret
xchg
sub
jns
les
mov
in
int3
or
adc
mov
mov
icebp
aad
or
outsl
dec
push
sub
sub
pusha
adc
mov
popw
cmc
ds
inc
ljmp
xchg
outsb
jne
orl
ret
inc
jb
insb
xor
mov
roll
mov
or
insb
inc
shll
jb
pop
std
or
aas
fnstcw
icebp
decb
into
sub
push
test
iret
aas
ljmp
rcl
and
and
arpl
mov
lret
pop
xchg
out
push
fisttpl
daa
cmp
lret
cmp
mov
in
inc
or
add
cmp
lahf
jb
adc
pushf
repz
inc
mov
adc
mov
add
es
mov
fdivrl
jb
shlb
jg
in
test
xchg
mov
jmp
mov
mov
outsl
xlat
push
xchg
stos
cmpsb
adc
sbb
mov
movsb
sub
dec
inc
pop
mov
push
ret
push
pop
adc
push
mov
stos
xor
jp
mov
sub
xchg
andl
fdivl
xor
data16
stc
cwtl
lcall
or
punpckhdq
loop
mov
xchg
hlt
dec
pop
sub
loope
add
mov
dec
pop
scas
int
xchg
pop
cli
es
popf
xchg
and
stos
aas
test
jb
push
icebp
andnps
cltd
leave
mov
fld1
jl
mov
cmpsl
sbb
jle
inc
orl
add
leave
repz
stos
cld
das
dec
inc
cs
pushf
push
xchg
out
in
sahf
mov
rclb
inc
add
dec
mov
js
mov
inc
inc
add
mov
bound
ss
pop
fdivl
push
mov
imull
movsb
sbb
push
and
pop
cmp
xchg
jp
cmp
popa
adc
imul
or
rcrb
xchg
push
incb
test
xchg
dec
inc
call
lret
push
cmp
inc
mov
lea
mov
mov
stc
push
nop
jecxz
test
adc
les
mov
push
mov
scas
repz
mov
loopne
xor
add
scas
decb
iret
sbb
inc
push
and
push
or
push
pop
fs
lea
bound
cld
dec
xor
mov
mov
sub
ret
inc
testl
mov
push
inc
cmc
sub
mov
xchg
fcomps
dec
sbb
inc
loop
loop
and
jmp
mov
frstor
and
add
stos
cmc
je
push
push
lcall
data16
loop
sub
cmp
rep
pop
imul
roll
outsb
sbb
push
icebp
add
std
loopne
sahf
cmp
fimull
dec
adc
jbe
sbb
inc
stos
shll
fcoms
sahf
add
add
pop
cmp
cmp
xchg
mov
sub
std
mov
mov
add
mov
pop
fiadds
outsb
insl
xlat
sub
std
dec
lods
subb
lret
mov
stos
ds
mov
pushl
addr16
je
and
add
cwtl
inc
loope
call
inc
xorb
jg
push
shll
inc
mov
mov
shlb
xchg
cmp
mov
jo
mov
aaa
icebp
mov
cli
push
jmp
add
sub
pop
mov
test
mov
or
and
mov
mov
xor
xchg
sahf
ja
pushf
sub
sub
sub
insl
fst
lods
push
inc
add
cmp
push
dec
jl
and
rcll
into
mov
frstor
cmp
jecxz
inc
jmp
js
add
mov
popf
or
mov
aad
dec
test
stos
repz
addl
xchg
adc
push
aas
movsl
sub
scas
mov
cmpsb
shrl
or
pop
push
add
adc
jp
stc
mov
push
cs
xchg
mov
mov
les
lods
push
div
testl
and
and
add
or
mov
sub
and
bound
xchg
ret
mov
xor
test
inc
imul
out
out
jae
sub
and
jne
pop
rcll
pop
or
enter
inc
ljmp
sahf
sbb
addr16
jbe
xor
jge
fldenv
sbb
jge
sbb
jg
fwait
popa
jp
adc
popf
fsub
and
inc
pop
icebp
sub
cmpb
cwtl
mov
add
lods
xchg
sub
sbb
push
js
dec
test
adc
loope
cmp
outsb
jne
sbbb
je
std
stos
and
push
nop
add
adcb
adc
or
sbb
cmpsb
cmp
dec
enter
or
pop
sbb
sbb
cs
shrl
loopne
rorb
or
and
std
dec
in
popf
stos
add
or
push
adc
in
mov
add
cmpsl
or
arpl
mov
xor
jle
test
int
ljmp
fnstcw
mull
cmc
out
fadds
pusha
pop
xchg
out
je
scas
cwtl
lods
mov
jne
push
aad
xchg
call
sahf
xor
rclb
fldl
test
inc
jmp
jp
adc
fidivrl
add
inc
inc
mov
add
int
nop
adc
push
xrelease
mov
stos
dec
mov
xchg
dec
rcll
stos
fmul
out
es
rorl
pop
sbb
sub
dec
je
sbb
daa
mov
out
sbb
mov
and
incb
aam
mov
call
or
insb
mov
xchg
mov
fmull
and
aad
push
lahf
sbb
or
shll
shlb
adc
icebp
dec
test
inc
loop
mov
push
lahf
sub
inc
push
faddp
jb
cmp
or
out
push
cmp
loop
adc
daa
ja
out
jo
mov
push
add
push
and
lahf
pusha
mov
sarl
push
das
js
ds
sub
cltd
mov
sub
aam
mov
shll
mov
xor
lods
test
mov
jno
xchg
mov
cmp
mov
bound
push
popl
or
and
xchg
in
stc
aad
sub
fucomi
inc
xor
out
push
sub
fistl
jno
enter
outsl
mov
sti
repnz
jae
fnstsw
mov
push
jbe
hlt
js
mov
gs
test
shrb
shll
hlt
pop
iret
das
data16
inc
add
mov
movsl
repz
negb
stos
xor
add
lcall
cmp
sarb
push
mov
mov
pop
mov
sbb
ret
pop
gs
arpl
loop
sbb
or
dec
lcall
aad
ss
and
nop
mov
mov
sbb
lcall
xor
jo
out
and
mov
cmpsb
lahf
pop
scas
fldcw
aas
movsl
loop
jbe
data16
add
fisttps
add
js
mov
mov
pop
adc
push
clc
jne
test
mov
jb
fsts
add
lods
mov
leave
push
or
xchg
negl
rcrb
sti
popa
in
std
pop
or
lret
pop
xchg
pop
xor
mov
outsb
cmpsl
js
push
dec
shrl
in
inc
subb
push
andb
std
xor
dec
or
xchg
lret
xchg
outsl
and
xlat
cmpsb
mov
cmc
in
sbb
mov
sbb
test
mov
dec
xchg
out
clc
nop
sbb
aas
pop
subb
adc
mov
pop
scas
jne
jmp
call
mov
out
xor
mov
jmp
sub
pop
mov
lods
ficoml
add
lock
test
or
cmp
fcmovbe
mov
xchg
shrl
cmp
loope
xchg
mov
inc
mov
dec
scas
push
cmp
push
mov
test
mov
test
dec
add
lret
mov
sahf
int
dec
js
pop
or
shrl
sbb
fmull
hlt
adcl
js
inc
lcall
adc
lods
sbb
cmpsb
scas
addl
pop
jb
sub
test
insl
xor
dec
dec
inc
dec
cmp
push
sub
mov
mov
out
pop
or
pop
mov
xor
push
loop
adc
mov
or
lcall
push
mov
outsb
pusha
pop
xor
xor
inc
aam
xchg
mov
sub
mov
add
and
mov
jmp
jp
or
adc
fucomp
arpl
fistpll
and
stos
out
push
or
mov
pop
push
jle
sahf
mov
test
add
and
int3
dec
push
lods
push
bound
jle
das
xor
int3
pusha
inc
jge
jecxz
insl
pop
dec
fwait
mov
dec
jbe
mov
mov
aas
rorb
add
jmp
sbbb
jg
inc
repz
popa
movsb
pop
push
add
mov
xor
jmp
in
adc
mov
mull
inc
rclb
dec
and
movsb
inc
fwait
sbb
in
dec
outsl
sub
cli
sub
pop
call
or
addl
mov
addb
add
pop
cmp
pop
bound
dec
fstpl
call
cmpsb
or
sti
push
sub
popl
xor
or
in
subb
xor
mov
sbb
sbb
xor
idiv
gs
dec
stos
inc
dec
push
pop
test
nop
sub
in
lods
jl
dec
sub
inc
jmp
dec
sahf
andb
loopne
gs
mov
push
sarl
imul
sub
test
nop
gs
xor
cmpsb
in
or
leave
lea
fsubrl
xor
cltd
and
arpl
inc
insb
dec
dec
inc
outsl
mov
xor
add
cmpsl
fsubrs
pop
ret
xchg
int
fbstp
mov
jno
jg
xlat
cmpsl
or
addr16
pushf
lods
rcll
inc
std
sub
inc
sbb
xor
add
push
xchg
test
scas
leave
int
mov
pop
es
jb
xor
and
mov
pop
push
mov
adc
loope
add
stc
push
je
xchg
mov
shll
imul
or
lods
inc
scas
push
repnz
hlt
repnz
mov
mov
mov
adc
aaa
mov
mov
in
jg
pop
sbb
mov
inc
testb
loope
or
mov
pop
lods
xchg
dec
hlt
push
push
cmp
jmp
adc
mov
pop
pop
xorl
sub
xor
lahf
dec
in
cmp
loope
sbb
sbb
cmp
out
mov
stos
cmc
popa
ss
mov
pop
adc
in
fisttpll
xchg
push
dec
mov
bound
xchg
fistpll
lods
out
pop
punpcklwd
inc
ret
not
push
addb
mov
mov
pusha
out
enter
adc
clc
and
jae
mov
mov
insl
test
aad
stos
and
aad
es
adc
loop
push
scas
fwait
sub
jo
cs
ljmp
xor
jl
add
sahf
cmp
sbbb
xchg
sub
call
cli
inc
dec
cmpsl
les
lcall
adc
test
mov
in
jno
cld
mov
sbb
xor
push
aam
sbb
lahf
xor
cli
fwait
cs
mov
inc
and
insl
jecxz
inc
rcrl
sub
ss
lcall
dec
out
and
mov
xchg
sbb
ret
dec
call
test
mov
dec
and
hlt
sarb
cmp
push
xor
push
rorb
fnsave
dec
rcr
jns
or
bound
fbld
xchg
or
out
negl
icebp
out
pop
mov
ret
sbb
jmp
popa
mov
imul
or
lods
in
syscall
out
repz
aam
push
jge
out
pop
sbb
loop
std
jae
imul
xchg
sahf
or
mov
pop
mov
fildl
sub
pushf
jl
loope
mov
sub
les
in
sbb
lods
sbb
in
int
ret
push
in
ficoml
pop
je
lods
test
sub
push
cld
inc
and
call
idivl
push
outsb
les
push
subl
inc
sub
lock
cmp
sub
frstor
sahf
inc
adc
cmp
sbb
sub
mov
sub
jne
add
pop
lods
sbb
int3
cld
mov
xor
fisttps
insl
call
scas
sbb
mov
mov
mov
lcall
xchg
sbb
mov
push
push
test
ja
repnz
lds
clc
mov
and
fmulp
adc
rcrl
dec
xchg
les
sub
add
sti
add
outsl
aad
in
push
push
jne
cmp
xchg
xor
cmc
fistl
inc
je
mov
xor
subl
test
pop
hlt
fimull
ljmp
nop
test
xchg
adc
fnstsw
cmp
push
xchg
pop
jg
cmp
xchg
pop
sub
sbb
mov
add
mov
mov
pop
inc
jno
aam
std
jecxz
aad
mov
mov
mov
push
pusha
jmp
and
dec
adc
lret
inc
lock
js
push
loopne
cmp
mov
cmp
pop
mov
xchg
test
push
daa
fisubrl
cmp
add
pop
mov
notb
fstpt
nop
jbe
rcll
or
rcl
and
inc
lret
dec
mov
xor
pop
push
pop
test
rorl
pop
inc
sub
fucomi
xchg
xchg
stos
sub
mov
int
inc
push
xchg
and
inc
shlb
imul
inc
xor
gs
stos
test
mov
imul
fadds
xchg
cmp
sub
out
nop
int
mov
mov
mov
in
xchg
xlat
xor
pop
cmpsl
out
xlat
sub
sbb
insb
push
pusha
add
and
xor
or
pop
mov
fwait
xorb
maxps
jns
loope
cs
xchg
jge
scas
xchg
add
mov
and
lahf
push
adcl
mov
enter
stos
jp
jl
andl
push
fisubrs
jge
addr16
in
cmp
cmp
imul
cmp
rol
ret
mov
add
jno
adcb
inc
ljmp
in
mov
cwtl
sub
xlat
xchg
dec
mov
repz
mov
inc
mov
aas
inc
inc
cmp
push
dec
xor
add
andl
movsl
popf
andb
repnz
insb
inc
pop
xor
lcall
loope
push
sub
and
push
add
cmp
sarl
xchg
sbb
int
jo
movsb
cld
or
push
lret
xor
jl
mov
add
mov
jb
stos
push
mov
adc
test
xchg
dec
aam
xchg
and
gs
adc
mov
stc
fwait
mull
aaa
das
fs
sbb
das
and
sbb
lahf
and
jo
push
sbb
sbb
mov
daa
push
xlat
jno
and
loop
enter
ljmp
mov
iret
fnstsw
cmp
pushf
lret
js
lcall
int
mov
push
sub
outsl
imul
sarb
lcall
xchg
jle
and
mov
pop
stos
aad
xchg
shlb
lds
sub
push
xchg
test
sub
push
orl
add
in
mov
popf
and
xor
je
xor
popa
push
icebp
outsb
or
mov
and
inc
mov
inc
pop
jns
addr16
ds
nop
jle
imul
aad
jne
mov
fcmovnbe
push
fwait
fwait
xchg
leave
xchg
cmp
push
adc
mov
or
mov
inc
push
fcmove
call
cwtl
std
push
sbb
pop
mov
dec
inc
xchg
mov
adc
mov
movsb
xchg
jnp
mov
pop
and
fsts
inc
fsubrl
pop
popf
xor
outsb
jae
cmpsl
rclb
sub
inc
push
sub
outsl
lds
cmp
shl
js
fisubrs
fimull
rcr
fcoml
pushl
test
fistps
or
cmp
int
scas
in
test
lahf
sti
outsb
jmp
les
mov
int
mov
sti
rcr
add
pop
and
xor
sub
jle
xor
adc
arpl
out
jg
addr16
push
pop
jo
rcr
imul
jbe
js
jb
arpl
cs
les
and
jb
repnz
scas
mov
dec
dec
jp
cmp
pop
pop
xchg
ret
or
mov
cwtl
xor
sub
mov
lret
vphaddbd
mov
push
jmp
ljmp
repnz
insb
fldenv
dec
cmp
call
push
and
sahf
cmp
adc
jmp
cmp
ret
cmpsb
sti
dec
dec
jae
mov
lea
jnp
or
punpcklbw
aam
cwtl
aaa
jge
pop
push
dec
cld
jbe
add
pop
aam
dec
ror
lret
and
jns
fisubs
adc
jecxz
int
mov
pop
push
sub
jnp
test
pop
mov
mov
adc
xchg
mov
scas
jge
push
js
mov
outsb
pop
inc
stc
and
mov
xor
xchg
loope
xchg
cmpsb
jnp
jo
pop
pop
xor
xchg
adc
lock
pop
push
loopne
mov
pusha
xor
in
outsb
mov
dec
stos
dec
jp
les
orb
add
scas
dec
ud2
mov
bound
mov
outsb
rorl
cltd
or
jmp
pop
loopne,pt
scas
or
sbb
rorb
mov
insb
inc
dec
jnp
aaa
jnp
adc
sub
faddl
imull
mov
movsl
mov
test
inc
add
daa
insl
cli
xor
daa
fwait
push
cmp
sti
mov
sarl
dec
xor
inc
adc
and
mov
jle
sarl
xchg
or
inc
loope
pop
ss
incb
adc
repnz
jmp
mov
ret
or
mov
xlat
mov
add
xchg
das
and
cmp
mov
add
jnp
add
mov
dec
call
shrl
cmp
sar
cli
push
fidivl
repz
addr16
out
jp
mov
jge
testb
scas
mov
int
clc
or
mov
adc
shll
leave
data16
push
dec
out
sub
and
into
jns
mov
xchg
mov
aaa
jb
xchg
and
imul
and
pop
cld
shrd
jge
stos
cmpsb
pop
test
les
jno
pop
jnp
or
sahf
pop
push
sbb
js
pop
flds
mov
mov
add
mov
aas
mov
xchg
daa
sub
popa
popf
in
test
xchg
in
xorb
cmpsb
out
xchg
sbbl
popf
mov
into
push
decl
idivb
fistpll
test
subl
sub
adc
test
movsl
mov
stc
int3
outsb
cmp
jne
sahf
push
pop
xchg
in
inc
mov
movsl
add
inc
fcomps
mov
ljmp
adc
hlt
jge
inc
mov
mov
sub
shrl
xor
mov
stos
mov
sub
push
int3
scas
imul
jns
bound
mov
cld
jecxz
ja
pop
pop
in
xchg
imul
xlat
lahf
icebp
jp
mov
xchg
movb
xor
pop
ss
push
pop
pop
push
mov
and
cvtdq2ps
push
dec
out
into
xchg
sahf
jo
test
push
je
cmp
xchg
jmp
and
aam
sub
fbstp
dec
es
std
lcall
ret
loope
mov
sbb
or
not
mov
pusha
data16
std
sub
mov
pop
popa
test
mov
ret
pushf
cmp
push
sbbl
jno
lcall
sbbl
or
or
adc
inc
mov
lahf
imul
adc
push
sub
stos
jmp
stos
cs
xchg
cmp
fdivrl
inc
mov
icebp
cli
out
cmp
cs
push
lods
dec
xchg
andl
test
xor
mov
jg
enter
mov
gs
dec
cmp
add
xchg
test
mov
pop
jae
imul
mov
pop
jecxz
cmpsl
sub
loope
mov
sbb
out
lret
fldenv
addr16
mov
sbb
cli
add
ret
push
xchg
in
mov
dec
pop
or
movsb
fcomi
sarl
dec
jge
dec
mov
or
mov
jo
call
inc
push
push
mov
jmp
out
sub
in
sub
mov
test
cld
xchg
push
push
pusha
sbb
fadds
dec
insl
fmull
mov
pop
popf
das
rolb
jbe
add
ljmp
ljmp
aam
sub
lcall
mov
mov
push
dec
inc
data16
push
sub
adc
push
repnz
jmp
mov
adc
dec
pop
dec
add
lea
dec
fbstp
sbb
mov
mov
mov
sub
fcomp
mov
xchg
clc
sbb
mov
xlat
pop
fnsave
cmp
lret
icebp
add
pushf
jmp
inc
lcall
xchg
mov
mov
jo
sahf
sahf
pop
cmp
dec
cmp
sub
sbb
xlat
sahf
cltd
xchg
adcb
lock
fucomi
fstl
out
call
or
sub
jb
arpl
lcall
push
lods
int3
sub
ja
lahf
push
adc
pusha
cmp
push
and
sar
or
pop
mov
cli
pop
out
sahf
push
jno
push
or
iret
aam
out
dec
cmp
js
pop
or
xchg
adc
rcll
ret
fsubrs
and
or
clc
daa
mov
add
ds
mov
aam
movsb
mov
xchg
xchg
enter
fistl
fsubs
and
mov
mov
adc
mov
or
adc
in
mov
fst
mov
mov
pop
dec
out
loope,pt
xchg
std
add
push
mov
in
mov
pop
out
and
sub
pop
icebp
or
pop
xor
clc
jmp
pop
push
lods
adc
jo
fisttpll
jnp
out
jmp
sti
mov
mov
or
inc
pop
test
cmp
mov
inc
sahf
mov
mov
hlt
mov
inc
inc
test
jecxz
std
dec
sub
sarl
dec
iret
test
call
pop
icebp
push
cmp
clc
mov
nop
out
lret
ret
xchg
inc
clc
dec
mov
std
nop
sub
push
sub
jbe
out
fiadds
xor
mov
hlt
rorb
mov
test
pop
aaa
jp
sub
add
jl
jae
sub
data16
add
outsl
adc
cmp
jecxz
jge
fwait
or
lcall
addr16
add
ja
adcl
add
stos
jbe
xchg
mov
stc
inc
les
fcomi
jle
or
mov
xchg
mov
movsb
xor
cmpl
adcb
push
daa
das
mov
jl
and
mov
ds
and
insb
repnz
mov
push
pop
data16
adc
pushf
insl
adc
push
mov
push
std
jl
fiadds
inc
sub
leave
jmp
les
sbb
cmpsb
inc
mov
repz
mov
in
arpl
pop
lea
dec
mov
outsl
xchg
fwait
clc
or
add
xor
fcmovnu
xor
mov
jmp
je
imul
mov
mov
cwtl
mov
mov
lock
sahf
std
xchg
movsl
outsl
xor
mov
push
inc
mov
jo
imul
clc
insb
cmpsl
orl
inc
adc
ds
scas
mov
jmp
std
adc
bnd
in
loopne
jecxz
and
fwait
ljmp
andl
dec
jbe
cwtl
loope
mov
mov
cld
cwtl
mov
xchg
push
call
into
outsb
adc
adc
nop
jno
mov
mov
sub
iret
jle
ffree
sub
sbb
push
jo
call
int
in
or
xchg
or
xchg
add
and
in
dec
push
stos
test
out
testl
cmpsl
rclb
push
adc
mov
andb
ja
xor
sbb
mov
js
test
add
shll
mov
sti
outsl
jle
jns
mov
add
mov
in
mov
inc
sbb
mov
xchg
mulb
jp
ss
and
dec
out
mov
fisubs
jecxz
mov
dec
adc
pop
pop
fdivrp
dec
add
stos
lods
xchg
scas
xchg
dec
fadds
sbb
cmp
sbb
cmpsl
scas
jl
cmp
jno
dec
in
cmp
icebp
ljmp
sub
mov
adc
mov
mov
xchg
or
int3
sarb
mov
fsubrs
pop
sub
sahf
into
mull
into
push
into
push
xchg
xchg
sbb
imul
lcall
lods
out
xchg
mov
dec
mov
mov
mov
cmp
jno
mov
sbb
fidivrl
pop
nop
inc
rorl
add
lods
cmc
jle
add
pop
and
testb
cmp
popa
andl
mov
sub
int3
mov
arpl
jae
push
jge
pop
xchg
sub
push
scas
jb
mov
mov
push
inc
push
test
jnp
je
in
ficompl
cmp
dec
mov
mov
xor
push
push
push
mov
imul
call
test
sbb
adc
out
aas
mov
insb
shrb
adc
adc
add
mov
lods
pop
and
push
cmc
or
stos
inc
or
sbb
rorl
mov
ret
dec
bound
and
ss
or
les
aam
mov
push
stos
loop
icebp
push
imul
adc
popa
push
xchg
fdivp
mov
outsl
and
out
sbb
fdivs
mov
addb
dec
shrl
jle
inc
xor
adc
ds
addr16
loopne
sub
xor
jns
and
xchg
or
jmp
inc
xlat
adc
xchg
pusha
xor
call
outsl
dec
jmp
ljmp
in
cwtl
bnd
fs
ljmp
xchg
push
clc
xor
inc
mov
fidivrs
pop
jecxz
jno
sbb
sbb
ret
cmpsb
xchg
js
sbb
pop
ja
lock
adc
mov
sbb
mov
inc
mov
iret
clc
jmp
popf
xor
out
in
ret
mov
out
jo
sub
mov
pop
adc
inc
ss
push
test
arpl
mov
cmp
xor
fbld
test
adc
aaa
xor
outsl
rcr
add
adc
test
dec
repz
mov
push
push
add
movsb
inc
movsl
push
jns
ljmp
xor
xchg
and
inc
push
inc
cmp
cmp
and
and
sarb
iret
jno
packssdw
add
sbb
sbb
stc
xchg
pop
out
into
idivb
jns
jo
push
popf
ss
cltd
cmp
jae
ret
and
adc
pop
mov
jmp
cmc
push
mov
sub
ja
jg
push
adc
cmp
ss
or
sub
insl
je,pt
stos
mov
or
stos
lock
iret
bound
push
mov
push
dec
ds
mov
lds
ret
inc
jl
sub
sub
rcll
mov
add
cmpsb
cwtl
in
jae
imul
add
fildl
iret
fcomps
and
lahf
jns
xchg
lahf
or
nop
mov
fnstsw
loope
out
shlb
imulb
lret
and
sti
mov
pushf
out
adc
push
push
or
inc
push
cmc
inc
xchg
push
lret
dec
mov
enter
lret
out
inc
lock
mov
dec
mov
xchg
pop
test
ret
dec
in
inc
and
das
lcall
xor
xchg
mov
and
pop
movsb
pop
sub
mov
aad
push
movsl
lds
test
bound
stos
inc
or
stos
add
imul
ja
outsl
popf
std
icebp
test
movsl
mov
jnp
cmp
jl
dec
cmp
and
and
in
cmp
mov
stc
jae
jmp
enter
ret
or
mov
xor
shlb
xor
pop
shll
cs
mov
adc
pushf
ret
mov
inc
call
jb
sti
bound
mov
lcall
cmc
push
fisttpll
std
mov
push
mov
addr16
orl
pop
and
pop
adc
into
movsb
dec
shr
cmp
pop
mov
mov
inc
cmp
je
sbb
int
pop
out
data16
pop
xchg
nop
mov
popf
sub
push
jl
shl
adc
cmpsl
lret
dec
inc
fs
xchg
shll
mov
xchg
loop
movb
gs
stos
push
xor
xor
jg
jns
jl
es
pushf
mov
mov
push
pusha
scas
dec
out
mov
fdiv
inc
and
and
es
aam
stos
sbb
sub
jno
std
test
xchg
push
adc
sbb
cmp
negb
andl
out
mov
push
or
mov
push
jnp
lret
in
jp
iret
or
sti
rcl
mov
int
sub
cmp
cld
cs
loope
pop
sub
rcll
add
mov
lea
push
sbb
leave
ss
sbb
push
jmp
and
icebp
cmp
adc
mov
sub
js
mov
imul
mov
ret
push
hlt
mov
jg
sti
and
pop
lock
fwait
int
xor
inc
jo
hlt
cs
scas
jb
jns
or
cmpsb
mov
test
or
shr
in
stos
mov
pop
stc
ljmp
movsl
dec
pop
push
aas
cs
push
gs
and
jge
push
xor
dec
insb
jle
cmp
or
xchg
sub
push
ds
lock
mov
and
dec
aad
aad
jle
push
popf
int
xor
inc
shrb
adc
push
jecxz
loopne
hlt
enter
fisttps
pop
stos
std
cld
insb
aad
pop
push
leave
roll
add
mov
fwait
negb
and
cs
push
mov
mov
addb
outsl
pop
pop
jg
stos
dec
xor
test
hlt
bound
push
lods
mov
rcrl
pop
lcall
sub
or
jbe
imul
jp
jne
insb
jo
in
add
in
sub
in
xchg
mov
iret
cmpsl
jns
mov
jno
mov
adc
ljmp
push
shr
int
sbb
xchg
xchg
inc
leave
cld
roll
scas
fs
mov
hlt
xor
cmpsl
andb
sbb
pushf
rorl
adc
adc
scas
push
push
push
int3
rcrl
cwtl
xchg
inc
cmp
sbb
ljmp
int3
ss
inc
pop
xor
xor
and
xchg
inc
fs
lds
dec
push
roll
lcall
xchg
mov
fsubs
ficompl
test
je
ljmp
ror
insb
in
xchg
data16
add
cwtl
push
push
and
jno
add
mov
mov
fwait
stos
and
or
mov
data16
lahf
sbb
mov
mov
jge
jae
repnz
or
or
xor
pop
sbb
adc
add
jmp
add
in
adc
fsubrs
je
pusha
mov
adc
xlat
jae
movsb
sahf
push
fsub
push
orb
and
shll
cwtl
cmpsb
fsubrs
mov
add
rorb
out
xor
sub
xlat
mov
mov
nop
cmpsb
add
loop
ret
mov
ret
sbb
scas
enter
and
cwtl
test
sub
shrb
sti
cmc
dec
mov
mov
sbb
ljmp
sbb
leave
push
js
xlat
mov
jne
pop
das
mov
and
mov
push
jmp
pop
inc
fldenv
xor
mov
pop
ficomps
sbb
xor
dec
inc
xor
sub
mov
arpl
and
stos
mov
addl
sti
cmp
in
cmpl
aad
mov
cltd
push
in
fwait
or
sub
imul
mov
jne
std
fidivs
enter
push
aad
js
lcall
mov
ds
jge
mov
push
xchg
dec
lock
or
xlat
add
adc
insb
dec
hlt
jbe
sahf
lret
fcmovbe
mov
jnp
inc
sbb
aam
arpl
inc
mov
mov
sahf
xchg
fldl
mov
or
or
jg
jle
jbe
mov
ret
inc
into
aas
filds
call
jl
push
inc
mov
shl
imul
cmp
test
sub
sbb
cltd
shlb
lahf
out
movsb
xchg
add
in
imul
jns
mov
inc
inc
cmp
push
pop
mov
fimuls
js
mov
push
cmc
push
arpl
aad
fimuls
or
subb
sti
out
in
into
xchg
mov
push
insl
sti
into
xor
out
xor
sub
sub
mov
mov
bound
ljmp
imul
add
adc
stc
lods
xor
xor
xor
and
xchg
push
popf
mov
pushf
cmp
fidivl
jle
mov
mov
pop
jns
mov
jbe
dec
gs
sub
cmc
imul
or
bound
xchg
or
out
mov
sub
fidivl
mov
dec
adc
imul
pop
push
sbb
leave
gs
cmp
addr16
ja
lahf
std
xchg
pop
mov
mov
xor
popa
inc
popa
cmpsb
sub
add
clc
mov
jno
out
xchg
and
mov
xor
ljmp
sub
js
aad
rcrb
inc
lds
adc
out
popa
insb
xchg
sbb
in
mov
stos
mov
pop
sbb
add
mov
es
ja
bound
mov
ret
das
mov
es
fadds
push
push
rclb
inc
push
mov
lds
icebp
pop
jecxz
shlb
in
and
push
adc
repz
pop
es
stos
push
mov
jmp
cmp
inc
ror
mov
jmp
xchg
scas
sub
mov
pop
mov
pushf
pop
adc
xchg
push
jmp
fcoml
xchg
out
mov
push
popa
push
sub
mov
popa
fbstp
pop
push
fwait
jo
jb
push
jl
lods
jmp
jbe
push
cwtl
or
push
xchg
repnz
inc
aas
mov
aaa
push
fdivl
fldlg2
call
std
sub
xchg
ret
in
sbb
inc
movsl
jo
mov
adc
pop
or
cld
in
dec
and
xor
std
test
xor
jbe
xor
mov
cmp
loop
push
xlat
jmp
inc
xchg
push
es
cs
test
arpl
inc
aas
and
cmp
sti
add
mov
out
sarl
gs
or
push
dec
arpl
addl
adc
aam
ss
int3
rclb
mov
mov
pop
andl
popa
scas
jle
aam
lcall
stc
cwtl
sbb
or
xor
dec
jne
xor
push
fcompl
arpl
lahf
lods
outsl
mov
xchg
mov
xor
out
clc
imull
icebp
xor
hlt
cs
jl
leave
scas
in
call
dec
xchg
movsb
or
mov
fbstp
push
inc
add
push
fnstcw
xchg
cs
mov
dec
push
test
xchg
ret
push
mov
pushf
fidivs
insb
into
sub
mov
cs
scas
lahf
adc
loope
sbb
ret
sbb
sub
sbb
sbb
add
xchg
jg
mov
pusha
outsl
xor
js
icebp
int3
loope
pushf
rorb
and
mov
popw
push
sahf
lret
sub
mov
sbb
sbb
filds
add
mov
scas
icebp
test
xchg
outsb
sbb
dec
cmp
cltd
mov
add
xor
pop
mov
int
fnsave
jb
jno
jecxz
gs
in
stc
xchg
insl
lods
jnp
push
mov
scas
mov
sub
push
stos
in
repnz
jmp
xor
ret
add
ss
jns
enter
jge
jne
pop
addr16
outsl
and
mov
sbb
adc
out
enter
mov
push
pushf
adc
xor
dec
sub
xchg
xchg
in
or
jle
call
popf
cmc
dec
cltd
dec
mov
lock
fcompl
xchg
testl
push
in
mov
das
pop
pushf
outsl
dec
mov
cwtl
xchg
and
pop
pop
mov
ficoml
fucom
cli
andl
das
mov
shl
fldenv
cld
adc
dec
ja
out
fmull
push
ljmp
cmpsb
leave
adc
ss
mov
pop
push
cmpsb
sbb
enter
xorb
push
mov
inc
lret
cli
shlb
sub
xchg
jmp
aas
fpatan
lods
xchg
negb
push
push
loop
cwtl
sbb
aas
aam
adc
daa
push
mov
sub
add
add
lods
pop
sbb
iret
and
sub
fnstcw
dec
pop
mov
add
out
xchg
xor
inc
rorb
ja
cmpsb
in
pop
adc
outsl
add
outsl
nop
cmp
mov
adc
pushf
and
fdivrl
ficoml
flds
pop
fists
out
cmp
push
sbb
jmp
and
fdivrl
mov
stos
iret
movsb
iret
and
mov
sbb
mov
roll
cs
aas
push
xor
jecxz
jnp
notl
leave
jecxz
popa
mov
cmp
mov
sub
nop
in
arpl
mov
inc
xchg
idiv
shlb
lods
ret
xchg
les
lahf
and
xchg
movsb
arpl
in
pop
insb
test
adc
jg
dec
in
test
or
xor
adc
add
lods
add
sub
rcrb
inc
mov
call
mov
mov
lea
in
push
push
mov
mov
fnsave
jno
adc
sbb
ja
push
pop
pop
mov
into
mov
stos
xor
cltd
inc
cmp
inc
ss
and
mov
mov
cwtl
jl
mov
pusha
mov
xor
adc
das
cmpsb
pop
xchg
jl
mov
roll
fsts
lock
mov
mov
fidivrl
testb
cmp
cmp
cmp
addr16
dec
jmp
rolb
jo
std
jae
cmp
jmp
into
push
ret
daa
push
sub
push
jl
jnp
pushf
cmp
xchg
xchg
negl
push
mulb
testl
pushf
imul
fsubr
fcmove
loop
gs
push
cli
xchg
fnstsw
stc
sahf
or
adc
arpl
fnstenv
pop
aad
jg
je
mov
ja
dec
push
sbb
mov
stc
daa
and
adcl
scas
push
sub
cmp
lods
cmpsl
sarl
mov
and
in
out
mov
outsb
mov
push
jmp
push
ror
xor
push
sahf
lahf
ret
mov
sahf
lret
or
in
in
mov
dec
add
dec
or
push
cmp
dec
lds
addr16
jbe
sbb
sahf
dec
push
loope
int
jb
pop
pop
insb
clc
xchg
or
and
adc
xor
dec
cmp
jne
jge
adc
dec
mov
xchg
testl
sub
sub
outsb
adc
fstpl
mov
clc
into
or
xchg
jp
dec
sbb
jmp
flds
add
pop
testb
pop
fildl
std
fdivr
loope
dec
jnp
aas
arpl
pop
inc
sub
mov
movsb
jge
pushf
dec
dec
mov
leave
rolb
push
jp
subb
cli
push
or
and
mov
mov
push
cs
test
add
int3
dec
scas
popa
imulb
repnz
ss
test
cwtl
outsl
mov
push
enter
ret
inc
fildll
and
cmp
cli
and
pop
lahf
xor
jae
mov
sub
pop
add
and
and
in
add
xor
jecxz
mov
add
addr16
ss
test
mov
popa
arpl
mov
rorl
dec
fsubrs
mov
int3
jnp
loopne
fbstp
pop
sub
ss
mov
mov
xor
xlat
mov
fwait
sbb
sbb
sti
lret
xchg
pop
aaa
xchg
sbb
xor
dec
xchg
mov
addr16
and
int
lcall
dec
sarl
push
push
loope
xor
iret
fs
aas
notb
jmp
movsb
xlat
and
icebp
inc
xchg
sbb
push
loop
sti
pop
hlt
movsb
iret
dec
ret
lds
xor
stos
fwait
das
mov
daa
cmp
pop
dec
jge
aas
mov
xchg
mov
xlat
xchg
dec
inc
shlb
xchg
fsub
in
adc
jns
data16
outsb
push
sbb
aad
adc
pop
ret
xchg
adc
lret
and
hlt
fstl
push
and
fwait
and
fnsave
dec
add
inc
and
mov
xlat
xchg
cmp
clc
xorl
cmp
ds
mov
nop
lcall
mov
cmp
cmp
mov
clc
mov
cmp
out
mov
aaa
filds
pop
ret
lret
jl
stos
fmuls
sahf
cmpl
pop
repnz
test
in
push
cwtl
or
inc
rcrl
dec
push
push
out
sub
hlt
cmp
mov
jno
push
aas
push
scas
fistpl
enter
je
mov
ja
arpl
sub
pushf
sub
in
push
push
and
jne
inc
and
adc
pop
mov
ss
push
aam
cmpsl
mulb
push
dec
cwtl
ficoml
into
cmp
push
xchg
jo
mov
ds
pushf
xchg
out
mov
lret
in
jo
pop
pop
sub
dec
rcl
mov
ret
lods
push
add
or
sub
mov
cli
fimull
jbe
push
jno
clc
xor
mov
je
imul
pop
push
dec
lock
fisttpll
xor
lcall
loope
roll
ss
lock
mov
insb
jne
mov
dec
or
iret
mov
or
pop
push
nop
or
jns
xor
mov
cmp
movsb
fstps
xchg
movsb
out
sub
inc
notl
xchg
add
dec
push
int3
outsl
adc
scas
mov
add
rcll
sti
push
mov
jmp
xchg
push
or
jp
sub
push
inc
xor
mov
adc
int
mulb
ror
and
out
inc
cmp
dec
pop
out
mov
jl
iret
insb
mov
shrl
sub
push
mov
je
mov
jb
js
pop
incl
adc
and
jne
add
sub
cltd
jecxz
add
inc
clc
and
out
clc
add
mov
mov
test
jno
add
inc
pop
gs
enter
pusha
pop
mov
shl
pop
and
mov
and
incb
or
dec
popa
cmp
sub
rol
fcom
adc
hlt
test
mov
ffreep
sbb
xchg
out
stc
jns
test
inc
ljmp
fwait
jge
aas
aaa
cmp
push
into
jb
xchg
jge
scas
mov
sbb
aaa
fcmovne
dec
mov
lea
push
mov
out
jmp
jo
cmp
aaa
mov
or
iret
cltd
fbld
jns
lcall
add
jns
iret
pop
shr
xor
lret
ja
lcall
leave
xchg
and
rcll
or
xorl
xchg
dec
mov
hlt
lret
pop
inc
js
cmp
imul
stos
push
inc
popa
xchg
in
cmp
mov
jno
sub
dec
push
leave
aad
jle
outsl
jl
push
push
ds
mov
sar
push
or
ljmp
stos
push
outsb
movsb
leave
sbb
mov
cmp
xchg
xor
inc
inc
pop
or
fildl
push
stc
dec
xor
mov
gs
and
dec
int3
sar
jp
cmpsl
jge
faddl
lock
cmc
testl
sbb
xchg
xor
or
mov
adcl
cs
push
jl
clc
cmp
adc
push
rclb
jp
sbb
push
adc
push
xchg
movl
xchg
inc
xchg
ret
xchg
push
mov
lods
mov
fdivrl
test
roll
pop
out
lret
cmp
push
scas
ds
pop
shl
nop
adc
jae
insb
mov
loop
lods
mov
ds
es
xchg
mov
mov
repnz
in
mov
xor
lods
pop
lods
mov
out
add
mov
lock
xchg
inc
pop
jb
add
mov
scas
xchg
negl
mov
mov
out
or
sub
loop
sbb
inc
or
lcall
stos
xlat
or
push
pop
in
mov
dec
stc
clc
scas
jo
jne
data16
rcr
jae
leave
mov
lret
gs
inc
in
ljmp
mov
fistpl
flds
mov
push
push
fisubrl
scas
xor
jg
loope
push
mov
int3
aas
push
and
mov
subl
and
popa
out
push
cmc
ljmpw
add
xchg
repnz
ljmp
jl
jbe
mov
dec
dec
xchg
ds
nop
jg
push
mov
pop
mov
pop
scas
add
lds
pop
mov
popf
or
inc
lret
ficoms
cli
mov
jbe
movsl
jno
les
call
push
xlat
mov
or
sub
cmp
in
sahf
in
int
fidivrs
rcrb
loop
push
push
mov
ret
xchg
pop
xor
mov
add
mov
cld
pop
adc
ficoms
sub
ret
test
insb
mov
or
mov
push
fs
aas
mov
sub
jl
adc
pop
in
outsb
in
pop
mov
jecxz
fsubrp
and
clc
dec
pop
xchg
cmpsl
sub
nop
add
cmp
stos
into
mov
cmp
data16
iret
cs
stc
iret
xorb
dec
cmp
repnz
cld
in
mov
pop
ret
std
ss
mov
nop
sub
add
loopne
add
lods
lds
xorb
aam
stos
fmull
sub
data16
stos
mov
popa
std
ret
dec
xchg
xor
fwait
pop
dec
sbb
cmp
mov
sti
rorl
cmp
insl
fs
insb
dec
test
hlt
addl
xchg
ficompl
fpatan
rolb
xchg
cmp
dec
inc
push
add
movsl
fsubp
inc
jne
jp
mov
ds
mov
push
ss
leave
mov
push
mov
fiadds
jge
int3
cwtl
sbb
dec
leave
pushf
or
cmp
add
sub
push
stos
mov
clc
jle
out
cmp
pop
adc
pop
cli
sbb
xchg
pop
mov
or
je
pop
xchg
sub
bound
sbb
sbb
dec
jnp
lahf
inc
mov
push
jae
and
hlt
hlt
in
push
test
add
pop
sub
jle,pt
outsl
out
adc
pop
rcr
or
dec
out
jl
mov
add
and
jg
push
mov
aaa
andb
pop
cmp
repnz
scas
scas
adcb
mov
jg
pop
mov
dec
orb
add
pushf
dec
inc
jb
sub
pop
mov
mov
push
clc
aas
pop
adc
xchg
out
rcll
in
mov
repz
stc
aam
push
insb
pop
pusha
sti
cmp
das
pop
inc
jl
es
mov
daa
pop
es
xlat
jmp
dec
lods
mov
cmpsl
sbb
adc
inc
and
cmc
shll
ja
inc
faddp
movsb
movsb
sbb
and
out
xlat
icebp
xchg
add
xchg
push
cmp
clc
or
xorl
call
popf
xor
daa
cmp
mov
push
dec
movl
lahf
cld
in
in
idiv
leave
jb
cmp
in
mov
hlt
pop
dec
push
ja
dec
aas
push
push
adc
mov
fwait
dec
cmpsl
jbe
push
xor
fstl
adcb
popa
rclb
push
add
mov
cmpsb
loop
add
mov
addl
jmp
test
insb
jns
jo
dec
xchg
ficoms
sbb
sub
imul
stos
addr16
aaa
shl
icebp
mov
xlat
adc
fwait
jl
adc
adc
mov
pusha
or
stc
es
jnp
mov
and
mov
into
cwtl
outsl
mov
cltd
cvtps2pi
mov
mov
add
lcall
leave
icebp
mov
lcall
imul
test
or
sbb
test
xor
bswap
sbb
loopne
mov
es
cmp
fbstp
iret
push
xor
fisttpll
rcr
pusha
jle
or
push
data16
mov
cmp
je
test
push
jp
mov
es
test
subl
or
loopne
inc
sbb
popf
pop
xchg
mov
pop
int3
rcll
or
ret
push
or
mov
out
out
lret
add
lahf
sbb
fdivp
mov
and
sbb
xchg
std
enter
xchg
mov
pop
mulb
ret
stos
adc
jb
push
inc
ss
sbb
pop
adc
and
cmp
mov
ds
stc
push
cmp
ficoml
filds
sbb
push
in
int3
lea
scas
out
fs
ljmp
pop
mov
fisubrs
xor
dec
fnstcw
out
in
aam
fiadds
ret
leave
cmp
xchg
das
leave
stc
pusha
inc
rolb
les
loope
inc
or
mov
les
shlb
jbe
jne
mov
lock
or
jg
dec
movsl
pop
inc
test
int3
jmp
xchg
test
push
insb
xchg
scas
std
adc
pop
lds
shr
subb
xchg
xlat
clc
xchg
popf
mov
outsb
mov
sub
or
fwait
add
jns
out
push
xchg
cltd
mov
in
sub
adc
inc
add
test
jno
xor
add
xchg
cmpl
xchg
mov
idivb
rcr
add
pop
mov
cs
sub
fidivrl
and
dec
mov
nop
out
adcb
int3
sub
pop
ret
insl
cmp
push
out
mov
xchg
out
dec
icebp
ret
movsl
insb
pop
fisttps
ja
mov
stos
gs
mov
cs
add
fisubs
push
add
cld
push
roll
sbb
cld
test
nop
dec
dec
cmp
cltd
xor
jno
dec
mov
sub
addr16
mov
cmpsl
pop
bound
rorl
jmp
shrb
jnp
fldt
mov
or
hlt
pop
imul
pop
ret
jp
out
test
leave
stc
adc
push
aam
das
mov
and
push
fstpl
test
sub
xor
xchg
fstl
dec
adc
mov
rclb
mov
outsl
adc
out
fisttps
outsb
cmp
xor
mov
jno
dec
stos
push
xchg
sahf
push
fstpt
lock
movsl
or
shrl
insl
mov
xchg
ret
sahf
call
adc
ss
dec
push
cmp
push
lods
rcrl
pop
arpl
shrl
decb
or
xor
cmpsb
adcb
inc
jnp
imul
lds
mov
loopne
mov
scas
mov
int3
inc
iret
adcb
ffreep
push
xlat
xchg
jae
aam
push
xchg
repz
sub
ret
xor
fdivl
inc
out
push
imul
and
movsl
or
and
add
fmulp
sub
mov
inc
fcomps
lods
je
inc
add
ret
cmpsl
or
inc
clc
cld
addl
into
pushf
es
sarl
dec
push
push
pushf
mov
es
outsb
jmp
mov
aaa
insb
insl
icebp
mov
dec
popa
movsl
out
mov
pop
dec
add
loop
mov
lahf
push
mov
mov
dec
outsb
dec
sbb
scas
aaa
inc
pop
adc
cmp
scas
xor
dec
xlat
xchg
mov
ror
cltd
mov
or
dec
adc
adc
push
and
dec
mov
mov
lds
push
cmp
push
das
mov
mov
adc
pusha
mov
mov
pop
in
addr16
cli
mov
js
movsb
test
movsb
jns
xor
loope
jp
jo
aad
mov
cmpsb
xor
mov
push
xchg
push
inc
aad
fwait
jo
push
sbb
inc
imul
inc
outsl
loop
daa
ja
lds
xlat
xor
jp
dec
add
inc
test
fwait
dec
pop
xor
lods
jle
fldl
fsts
jge
je
mov
push
push
lods
lret
push
orl
xor
test
fsubs
out
repz
call
aad
push
enter
cmp
stos
sbb
dec
push
sbb
push
sbb
aas
iret
cmpsb
cli
mov
ss
inc
xor
in
out
adc
jae
xchg
sbb
jnp
scas
test
arpl
sub
mov
clc
sub
fnstenv
inc
call
jge
and
and
dec
sti
mov
enter
pop
xorl
jge
mov
xchg
fsubrl
mov
pop
fs
cld
add
jmp
inc
or
dec
mov
xlat
push
aad
in
leave
inc
and
in
cmp
sbb
jle
es
push
mov
sti
push
fbstp
test
insb
inc
sbb
in
mov
ja
aaa
jmp
push
sub
pop
ret
or
mov
mov
lret
aam
es
bound
dec
jge
stc
cmp
inc
dec
mov
sbb
mov
mov
lea
mov
mov
movsl
mov
mov
fdivr
push
bound
push
ret
cwtl
cmp
xchg
js
dec
mov
in
shll
inc
pop
adc
sbb
neg
stos
out
scas
or
adc
push
out
inc
dec
inc
stc
jge
mov
fidivrs
hlt
outsb
mov
adc
mov
xchg
push
hlt
cmp
or
or
and
sbb
fmull
xor
and
add
mov
das
icebp
aaa
leave
sub
mov
mov
ljmp
out
fbld
and
push
mov
je
das
ljmp
sti
push
push
out
adc
mov
sarb
push
js
clc
pop
jbe
rolb
mov
lret
pop
fisttps
sbb
jp
data16
out
push
lods
fwait
mov
repnz
leave
sarl
outsl
aas
push
out
in
rclb
inc
fcmovnbe
cmp
cwtl
mov
ret
sbb
aaa
push
outsl
mov
xor
and
icebp
fneni(8087
stc
mov
scas
xlat
jo
flds
not
mov
cwtl
adc
lods
int3
movsb
lods
pop
xchg
pop
or
mov
sub
dec
addr16
cmp
jmp
into
mov
je
call
pop
sbb
popa
lods
push
and
dec
dec
pop
xor
ret
sub
aaa
stos
std
dec
inc
jp
ljmp
cltd
push
mov
movsb
sahf
aad
inc
jbe
nop
or
daa
cwtl
lea
pusha
mov
negl
test
and
xchg
popa
mov
pop
jb
xchg
inc
jno
pop
xchg
in
dec
sbb
aad
filds
test
inc
xor
xchg
inc
lods
aam
cltd
mov
sbb
adc
add
jne
push
js
jnp
pop
jmp
inc
pusha
test
or
push
jle
jecxz
adc
jnp
icebp
xor
mov
add
ljmp
imul
enter
cmovno
fcompp
mov
lcall
insb
mov
iret
jp
or
pop
imul
cld
add
push
push
nop
xchg
xchg
jl
out
mov
and
and
fstl
jno
xor
jp
lea
pop
aad
aad
in
sbb
jl
je
fmull
andb
dec
movsl
cld
inc
outsb
insl
cmc
andb
movsb
outsl
es
jae
ret
jg
jp
inc
lods
pushf
xlat
fdivrl
xchg
cmpb
cmp
rclb
push
imul
into
leave
cmpsl
push
mov
push
push
jl
or
mov
lret
imul
stc
fldenv
mov
cmp
inc
sbb
sub
aam
maxps
jb
repnz
mov
lods
dec
jl
dec
fldt
mov
inc
mov
ffreep
xchg
cmpsl
xor
inc
xchg
out
sub
iret
push
sahf
dec
lds
icebp
inc
stc
pop
call
xchg
sub
inc
rclb
xor
lea
orb
in
mov
xorl
dec
mov
in
xchg
mov
ds
dec
inc
or
idivl
rcrl
push
adc
adc
leave
repnz
adc
xor
stos
ret
push
push
test
and
fimuls
xchg
cld
lret
mov
popa
popf
lods
imul
ret
cmpsl
and
add
aad
xchg
mov
jno
test
in
int
jp
xor
and
int
fistps
adc
add
jle
or
cltd
sti
push
int3
add
jbe
inc
imul
mov
into
repnz
das
inc
stos
and
xor
jnp
insb
cmp
out
push
pop
mov
aam
jecxz
xor
inc
or
outsl
lret
push
int3
aam
daa
das
sub
cmp
cmc
xor
adc
jmp
sbb
fists
andl
insb
subl
fbstp
loopne
out
roll
iret
stc
adc
adc
es
sub
cmp
mov
std
or
hlt
xorb
pop
inc
leave
mov
es
or
clc
mov
cmp
aad
outsb
and
iret
mov
out
jae
jno
in
mov
adc
stos
je
sbb
or
icebp
mov
adc
js
pushf
mov
gs
pusha
mov
pop
inc
jnp
pop
mov
cli
xor
inc
loop
xchg
clc
je
rolb
inc
or
sarb
lahf
jb
in
fsubp
sbb
push
add
scas
mov
lods
push
lahf
mov
add
js
sub
mov
sub
roll
outsb
je
hlt
cmp
aad
jge
insl
nop
fistpl
pop
pop
loope
es
loope
addr16
lods
add
pop
jns
fimuls
push
aam
jmp
jmp
popa
imul
push
inc
scas
push
cmp
fiadds
dec
sub
out
lds
fmul
subb
stc
lret
push
shrb
mov
mov
xor
call
xor
shll
outsl
push
pop
mov
out
int3
dec
adc
std
insl
sbb
xor
sub
jmp
add
div
xor
rcll
inc
adc
mov
push
lock
roll
repnz
inc
jmp
xchg
movsb
shll
add
or
out
add
scas
sub
mov
or
aas
mov
loope
fs
scas
rcl
adc
cmp
cmc
rcll
in
mov
dec
cli
mov
bound
inc
clc
sbbl
xor
push
mov
cmp
jae
mov
imul
ret
push
arpl
lret
jne
lods
mov
push
pop
scas
push
xor
notb
push
dec
in
daa
leave
mov
sbb
loope
push
mov
movsl
divl
sub
scas
leave
imul
insl
pop
scas
pop
push
mov
sub
jb
nop
cmc
dec
into
jl
into
fwait
insl
iret
roll
pop
pop
mov
push
sahf
shrb
pusha
hlt
ret
jg
push
mov
jne
fnstenv
jle
aaa
mov
sbb
mov
fildll
lahf
out
sbb
sub
or
jnp
pop
pop
mov
movsb
push
std
outsb
sub
cmpsl
push
pop
int3
je
dec
xor
insl
scas
stc
push
pop
mov
iret
fdivrl
int
je
xor
sti
out
adc
aas
adc
and
sarl
pop
and
cmc
ljmp
mov
andl
lea
pop
cwtl
out
xor
jmp
je
mov
addb
test
mov
mov
stos
insl
loope
sub
or
out
outsl
sahf
mov
cld
cmc
shr
push
sub
mov
lods
xchg
xchg
sub
cmp
pop
gs
jo
addb
aad
add
mov
shll
mov
arpl
ds
scas
addb
js
ret
or
push
add
fnstenv
call
dec
out
jmp
jmp
jae
loopne
emms
mov
dec
out
sarl
cltd
adc
sbb
sbb
push
push
push
mov
bound
pushf
ret
mov
dec
pop
fdivr
lea
jl,pn
mov
shl
cltd
xchg
cwtl
push
or
mov
psubsw
mov
fidivrl
scas
sbb
pop
push
fnstenv
sub
lret
mov
ret
xchg
clc
and
sub
adc
call
and
int3
daa
mov
ficoml
mov
sbb
fucomi
jae
push
xor
push
mov
sub
mov
mov
in
push
js
gs
hlt
or
hlt
xlat
dec
push
cmp
clc
lock
or
imul
xchg
sbb
xchg
ud1
insl
shl
cmp
ss
aad
mov
cmp
mov
cmp
sub
aad
jns
adc
cmpsl
push
cmp
inc
rcrb
out
outsb
daa
pop
inc
push
pop
mov
push
jbe
sub
mov
call
sbb
lret
cmc
mov
mov
cmp
js
dec
mov
filds
mov
jns
cmpsb
insb
mov
adc
cli
sub
shlb
outsb
mov
ficoms
cmc
ret
mov
xchg
inc
jne
shlb
pop
outsl
cmp
xchg
adc
add
pop
lds
inc
add
inc
add
into
shr
push
mov
sahf
push
faddp
hlt
mov
add
je
jne
dec
push
and
and
dec
test
insb
lcall
mov
pushf
xchg
sbbb
popa
dec
push
call
mov
out
jl
mov
daa
lret
mov
push
push
fstps
inc
dec
xor
mov
fsts
repnz
popl
mov
pop
out
xor
mov
push
inc
negb
push
scas
jecxz
jl
shlb
cltd
push
nop
sbb
pop
add
sbb
jp
rorl
sbb
mov
leave
in
add
xchg
test
mov
push
xchg
and
jecxz
mov
or
in
xor
cmp
mov
jg
mov
cmp
fmull
cwtl
mov
push
aas
cmc
ret
pop
push
cld
push
testb
mov
and
push
jb
enter
and
lods
ret
test
mov
test
shrb
iret
mov
insb
sahf
mov
shr
ret
iret
pop
xchg
fs
push
test
in
loopne
adc
fcmovu
push
sub
pop
into
pop
inc
int3
repnz
mov
call
icebp
mov
xor
pop
or
shr
lock
push
out
or
pop
pop
in
sub
popa
pop
inc
adc
xchg
or
inc
pop
xorl
push
fsubl
lcall
and
incl
aaa
pop
mov
push
adc
xchg
lcall
arpl
push
push
fmull
into
pop
ljmp
cwtl
jne
push
jge
inc
push
scas
sbb
inc
or
mov
int3
insb
stc
lods
aam
and
mov
push
std
push
daa
cmp
mov
jmp
dec
scas
dec
lods
repnz
cmp
dec
in
sub
shrb
inc
lock
xor
lahf
sbb
xor
hlt
daa
in
test
sbb
outsl
jb
mov
sub
shlb
sub
xor
imull
sbb
in
or
push
jl
dec
cmp
in
sbb
jecxz
subb
cmp
in
inc
nop
out
jge
pop
xor
jnp
add
push
cmpsl
stc
or
outsb
and
jae
das
dec
in
inc
push
ds
sub
jb
daa
mov
adc
mov
sti
xchg
push
das
insb
xchg
adc
mov
xlat
test
sbb
adc
dec
bound
out
xchg
jecxz
sbb
ds
int3
push
scas
mov
mov
scas
cmp
add
test
push
ljmp
push
and
adc
fcmovnu
loopne
sub
jg
pushf
xchg
imul
pop
mov
mov
add
or
dec
aaa
mov
jbe
xchg
leave
adc
mov
movsl
pop
adcl
mov
mull
adc
sti
cmpl
stos
mov
dec
sbb
jle
clc
int
mov
fs
repz
icebp
inc
sbb
je
imul
add
push
test
pop
xor
mov
jns
dec
dec
or
jae
inc
pop
andb
cli
fdivrs
sti
outsb
xchg
imul
or
mov
les
popf
sti
and
mov
mov
shl
nop
faddl
aaa
and
test
and
cmpl
insl
push
add
fwait
testl
sub
xor
arpl
add
lds
jbe
inc
or
mov
arpl
sub
adc
push
cmp
inc
insb
das
out
divl
ljmp
insl
or
cmp
sbb
adc
fbstp
jmp
sahf
and
xor
jle
mov
jmp
cwtl
rcl
imul
stos
and
inc
inc
loop
jbe
mov
shll
lahf
push
sbb
repz
push
push
aad
fwait
inc
pop
insb
arpl
cmpsl
inc
add
pop
mov
mov
xchg
fildll
xchg
scas
fnsave
ret
fnstcw
into
lea
add
inc
push
mov
adc
or
lcall
add
xchg
jg
adc
push
or
jae
mov
outsl
cmc
add
and
xlat
out
adc
rol
sbb
push
mov
movsb
adc
add
xchg
ja
mov
lea
or
iret
sub
rcrl
add
sahf
bts
lods
btr
pop
xchg
lea
mov
data16
ficompl
jle
shlb
mov
mov
mov
js
inc
mov
movsb
jns
pusha
jbe
in
inc
dec
xor
inc
orb
ds
xor
xor
lods
call
fistl
push
dec
add
imul
frstor
gs
pop
loope
inc
call
scas
mov
inc
jnp
out
mov
loop
dec
ret
push
out
outsb
andl
cmp
adc
cmp
loop
mov
cmpsl
inc
jmp
sbb
fucom
push
mov
sub
lock
sub
sbb
or
lret
cmp
push
aam
mov
cmp
inc
nopl
cli
push
out
fidivrl
xor
outsb
addr16
scas
arpl
mov
negb
test
xchg
lahf
bound
cmp
sbb
push
les
adc
pop
arpl
addr16
and
arpl
addl
push
inc
sub
imul
out
imul
in
xor
fs
cmp
inc
rcr
jge
icebp
push
or
cmpsl
adcb
hlt
int3
fisttpl
adc
idivb
mov
rcrl
pop
popf
xchg
test
insb
in
ret
inc
mov
sub
jg
xchg
mov
mov
imul
adc
pusha
sub
fidivl
stos
enter
or
push
dec
out
out
or
loopne
popa
hlt
mov
adc
sbb
pushl
imul
movsl
xchg
xchg
pop
testb
sbb
mov
loop
adc
aaa
insl
rolb
cmpsl
out
inc
xchg
fsubrl
cmp
fidivs
enter
mov
imul
sub
mov
or
cltd
dec
dec
outsb
push
in
repz
rcrl
outsl
or
jnp
xlat
push
push
test
jl
pop
stc
pop
mov
lret
inc
into
cli
cmp
jne
sub
push
aad
ret
out
xor
jle
das
add
pop
orb
mov
ja
xorl
stc
cld
stos
div
and
mov
xor
mov
sbb
loopne,pn
or
push
push
push
and
mov
jne
cmp
outsb
aad
jbe
pop
into
sbb
mov
push
fsts
xor
inc
imul
add
xchg
ds
iret
bound
lcall
jecxz
and
scas
jne
test
sub
cltd
aam
outsl
or
dec
mov
leave
sub
in
mov
push
lock
jl
pop
iret
popa
xor
pop
inc
fwait
inc
stc
movsl
int3
jnp
push
in
std
hlt
orl
cmc
mov
jnp
shrl
call
shlb
lahf
addr16
sarb
aam
fwait
and
hlt
lret
pop
int
push
jo
dec
add
aad
xchg
inc
mov
sub
xchg
daa
mov
test
xor
movsw
loope
jmp
das
pop
lcall
addb
in
int3
xchg
mov
std
mov
loopne
hlt
test
loop
daa
shll
js
cmc
je
xor
push
test
ret
push
pop
iret
xchg
mov
rcrb
ret
adc
sti
push
fwait
mov
pop
fs
shl
push
mov
dec
popa
fs
or
dec
out
pop
push
lods
jg
jb,pt
cs
pop
pop
hlt
lret
sub
and
jns
adc
lcall
gs
scas
xchg
jns
and
sub
cmp
aaa
and
adc
clc
inc
cmp
mov
inc
xchg
lea
stos
scas
mov
leave
or
cmc
adc
push
mov
add
loope
xchg
out
dec
mov
push
rcll
mov
cbtw
les
fwait
enter
add
xor
insl
es
jmp
mov
sub
push
push
ss
sub
xlat
cld
ss
aam
daa
add
sbb
fiadds
mov
and
mov
lds
xor
mov
mov
dec
sbb
fildl
test
movsb
adc
mov
mov
test
and
pop
inc
jge
imul
or
decb
es
aaa
sbb
xchg
or
out
sar
ss
cld
sub
cmpsl
call
shlb
or
push
testb
outsb
pop
push
aas
xor
xchg
jnp
xchg
lcall
test
xchg
pop
pop
popf
addl
xchg
jae
cli
mov
push
xor
xchg
mov
das
sbb
push
mov
sbb
mov
mov
sbb
inc
arpl
xorb
and
mov
jg
ljmp
sbb
or
lahf
adc
push
mov
daa
lcall
lret
xchg
xlat
cmp
insb
jo
enter
jno
xor
inc
fsincos
mov
gs
push
shll
cltd
xor
test
arpl
cmp
out
adc
and
add
mov
sub
dec
cmp
lods
out
scas
add
lods
mov
xchg
cmpsl
les
das
mov
pop
lret
scas
sbb
mov
push
mov
mov
jno
dec
int3
movsl
cmp
iret
repz
adc
fdivr
mov
pop
xchg
imul
shrl
imul
bound
jg
adcb
hlt
cli
sbb
and
xchg
pop
adc
xchg
pop
jo
pushf
movsb
les
loope
repnz
mov
cs
sbb
mov
push
push
dec
mov
iret
jae
outsb
lods
popl
mov
adc
xorb
loope
push
jae
pop
dec
addr16
fwait
adc
cmpsb
mov
lret
mov
sarl
inc
in
mov
jns
adc
loopne
outsb
sub
loope
daa
mov
push
int
xchg
cmc
mov
sub
jae
sub
out
mov
les
add
mov
fs
fimull
push
push
jns
xor
test
xor
loope
mov
xor
jae
inc
rcll
xchg
mov
data16
test
mov
pusha
cmp
push
shll
pushf
mov
mov
add
or
mov
insl
repnz
std
jmp
lods
bound
sbb
xchg
or
sub
and
dec
and
movsb
adc
xlat
stos
pop
lock
int
faddl
je
movsb
mov
adc
leave
or
jl
jle
clc
cmpsl
xchg
loop
cmc
push
dec
fstps
push
test
lret
mov
push
js
push
lods
xor
and
push
cltd
mov
jnp
or
push
ljmp
imul
push
insl
mov
pop
fsubr
jae
pop
ljmp
sbb
add
aam
pop
test
movsl
jge
jnp
outsl
cmc
push
cmc
jg
and
fiadds
fistpl
xchg
mov
jp
and
cs
adc
pop
push
int
dec
in
jecxz
cli
sub
sbb
inc
sub
ret
into
jg
inc
mov
and
out
xchg
cmpsb
jo
aas
or
mov
div
fimuls
outsl
sbb
loope
ret
fs
test
jnp
or
add
out
push
pop
addr16
push
in
dec
aaa
xor
or
outsl
sub
push
bound
lea
pop
push
sbb
stos
ret
mov
xchg
nop
jno
xchg
sub
mov
adc
ja
cltd
rcl
push
add
cmp
stc
lods
push
lret
int
shl
jmp
in
loop
xor
fsubl
loopne
or
mov
fdivr
insl
xor
sub
pop
stc
cs
ljmp
pop
jle
ret
out
insb
mov
xchg
insb
mov
sub
fidivrs
cmp
xchg
add
dec
sbb
jecxz
pop
adc
pop
push
cli
mov
aaa
pop
push
lea
imul
adc
jg
insb
and
jae
jb
mov
ja
push
std
jae
in
mov
push
ret
sbb
mov
data16
fisubrs
push
pop
or
or
push
bound
pushf
xor
push
das
shr
jno
insl
push
js
inc
sub
aaa
push
fdivrl
scas
cmp
push
aaa
addr16
sahf
int3
nop
dec
push
xchg
jge
sahf
stc
int3
ss
adc
int
std
mov
lahf
jle
push
sarl
xchg
push
stos
sbb
xor
xor
jnp
aam
pop
sub
mov
arpl
std
lea
and
or
inc
rcrl
xchg
jnp
lods
dec
push
jno
lods
daa
daa
inc
in
xchg
shlb
or
in
inc
pop
xchg
fisubrs
int3
outsb
pop
mov
sub
pop
lods
inc
xchg
out
loope
xchg
scas
pop
add
xor
scas
or
and
ja
frstor
out
out
mov
inc
jbe
xchg
pop
flds
pushf
adc
pop
fsqrt
push
mov
xchg
mov
fiadds
out
cmp
ds
jge
sub
pop
xchg
xlat
test
push
shl
mov
decl
cmc
inc
sarb
jg
mov
sar
cmpb
sbb
pop
push
inc
inc
mov
repnz
adc
lods
adc
lock
orl
lret
adc
and
dec
jl
xor
push
sbbb
xor
mov
add
sti
xor
aad
jge
cmp
adc
out
adcb
nop
add
pop
ljmp
jl
iret
outsl
dec
ret
addr16
js
sti
aad
daa
cmp
stos
jl
xor
jne
adc
daa
outsb
xor
cmp
scas
js
lods
jns
sub
mov
outsb
dec
push
pop
not
inc
push
pop
lock
ss
jge
sarl
push
cli
pop
lds
and
or
xor
jecxz
mov
or
dec
daa
hlt
xor
cli
nop
jecxz
mov
dec
filds
das
push
insb
shll
dec
xor
loope
jns
ficomps
cmp
xchg
out
mov
popa
adc
fwait
mov
dec
mov
nop
jbe
leave
aas
outsb
ret
push
cmp
adc
insb
cmp
sub
lods
addr16
repnz
cwtl
cmpb
lea
xor
mov
out
jge
push
gs
adc
xor
xchg
xchg
pop
decb
lods
mov
popa
repz
mov
gs
insb
cmp
sbb
fcomp
shll
es
out
ret
push
into
jnp
xchg
push
movsb
in
or
sbb
cmp
call
mov
fcoml
out
push
mov
fwait
pop
lock
add
xor
mov
pop
ss
push
mov
xlat
inc
cmpsl
mov
cs
sti
je
into
pop
jbe
imul
fistpl
fnsave
xchg
push
cmp
shlb
xor
mov
pop
popf
in
pop
mov
inc
mov
mov
push
pop
dec
push
xor
pop
cmc
mov
adcb
xor
pushl
mov
push
test
repz
push
inc
out
sbb
add
test
pop
cmp
cmc
and
ljmp
in
push
fnstsw
outsl
mov
fmull
pop
imul
mov
stos
outsl
push
shr
nop
push
hlt
sbb
inc
inc
rorb
pop
dec
orb
js
xchg
or
mov
and
data16
arpl
inc
xchg
ret
adc
adcl
mov
sti
fs
mov
jle
xchg
or
pop
sbb
cmp
test
sub
stc
push
jns
scas
add
repnz
icebp
push
cmp
test
push
loopne
icebp
es
sbb
popf
lahf
push
loope
xchg
scas
jp
lcall
aam
push
push
std
xlat
push
rol
push
jmp
rcll
mov
jp
jbe
mov
jmp
mov
sbb
lahf
stos
out
stos
aam
outsb
outsb
cwtl
sbb
jg
lret
sub
loopne
loope
cmp
push
outsl
in
lods
sub
lret
jb
push
jb
jnp
popaw
lcall
push
aad
or
pop
insl
inc
out
ds
or
dec
cmp
mov
cmp
shlb
mov
jecxz
scas
cmp
inc
dec
leave
mov
pop
push
inc
js
pop
xchg
pop
das
insb
sti
lock
fwait
shr
bnd
orl
pop
xchg
hlt
test
int
call
jecxz
inc
xchg
enter
mull
or
out
daa
sarb
clc
dec
and
or
loope
push
sub
jo
sarl
mov
mov
dec
xchg
mov
jns
sub
fists
mov
cltd
mov
xor
inc
lea
xchg
icebp
pand
out
push
scas
lds
scas
repz
dec
pop
jmp
mov
movsl
mov
sbb
lret
sub
clc
ja
jmp
inc
xor
xchg
in
xor
or
lock
cmp
xchg
push
cmp
xor
sahf
imul
sub
mov
enter
mov
mov
out
cmpsl
and
xchg
lds
leave
ja
push
sbb
xor
testb
shlb
int
decb
mov
fdivrp
jnp
fadds
add
data16
mov
lods
lock
or
pop
or
int3
jae
in
je
push
test
mov
mov
jp
pop
jp
mov
cmp
cmp
xchg
popa
loope
mov
or
adc
sub
pop
push
xlat
add
xor
lret
xlat
push
sub
notb
push
dec
rcrl
insb
jne
clc
add
sti
jnp
leave
adc
or
inc
jbe
push
xor
xor
push
out
xor
xchg
sbb
leave
inc
push
into
lods
lret
mov
ja
add
flds
push
xchg
outsl
adc
xchg
or
add
push
xlat
pop
inc
ljmp
cmpsb
outsl
jg
fdiv
and
mov
xor
pusha
icebp
adc
mov
and
mov
outsb
adc
mov
orb
jno
or
mov
cmp
lock
inc
or
mov
xchg
sbb
dec
lret
shrb
pop
icebp
adcl
pop
cmp
adc
insb
adc
push
jnp
xchg
or
or
rcll
loop
in
js
leave
mov
orl
inc
mov
pop
pop
cmp
div
test
ljmp
andb
add
inc
mov
sbb
push
leave
stos
mov
fdivrs
stos
test
adc
mov
lcall
dec
sahf
icebp
push
and
lods
pop
push
dec
outsb
loopne
fadds
aad
ljmp
inc
aad
add
dec
inc
shrl
push
in
add
cwtl
add
inc
adc
test
push
in
ljmp
fistps
loope
mov
cwtl
aas
jle
sbb
int3
outsb
cltd
xlat
push
jecxz
jb
mov
sahf
cmpsb
call
add
adc
arpl
orb
cmp
insl
stos
add
leave
out
es
xlat
jle
sbb
and
add
fwait
xchg
xchg
xorb
daa
xchg
sbb
add
lahf
sahf
xor
insb
int
mov
mov
loope
cmp
inc
clc
push
mov
pop
mov
fprem
repnz
arpl
add
in
dec
imul
dec
xorl
sub
enter
mov
push
subl
add
dec
adc
push
xchg
push
fdivl
jle
mov
leave
adc
daa
lret
jecxz
das
mov
and
jmp
mov
xchg
push
add
call
sub
in
rol
rcrb
aad
jae
push
mov
in
loope
mov
cld
rclb
sbb
popf
mov
xor
xchg
add
xchg
clc
sbbl
out
and
mov
es
mov
sbb
fcom
or
xor
bound
outsb
in
sbb
cs
aad
xorl
push
sti
mov
mov
hlt
adc
and
jge
and
push
sub
popa
sti
dec
out
pushf
sbb
sub
push
dec
out
orb
jmp
xchg
lds
lcall
rorl
dec
ljmp
mov
adc
xor
mov
je
pushf
popf
sbb
int
dec
push
inc
mov
lock
scas
fcmovne
sbb
movsl
mov
cmc
sbb
dec
daa
cwtl
xor
cmc
insb
sub
dec
test
fwait
cltd
lret
test
fidivrl
adc
xchg
out
in
add
xchg
ret
les
pop
lret
icebp
cmpsl
mov
nop
push
xor
test
clc
psubw
fmulp
fmull
cmp
ret
es
fwait
mov
movsb
punpckhwd
mov
jge
stos
add
stc
or
loopne
insl
dec
stos
cli
mov
push
jbe
mov
frstor
and
pop
rcrb
sbb
bound
and
xor
pop
pop
sub
jg
sbb
cmpsl
test
sub
fs
aaa
inc
cs
test
sbb
movsl
mov
dec
add
repnz
ret
scas
fisubrl
das
mov
add
lods
pop
push
inc
lcall
and
inc
inc
scas
push
pusha
mov
and
ds
insl
adc
rcr
lock
adc
adc
jnp
out
cs
mov
shll
bound
dec
add
mov
test
dec
cld
js
pop
orl
lret
out
pop
out
sub
imul
hlt
sub
inc
sbb
sar
cmpsl
mov
or
push
aad
and
pop
test
fidivrs
fmulp
mov
ret
inc
loop
pop
fwait
loop
les
sbb
lods
add
in
add
std
outsl
and
clc
ror
push
fucomip
sub
loope
mov
xor
xchg
jb
and
out
and
repz
pop
inc
dec
call
test
jecxz
lock
xchg
mov
add
call
push
pushf
stc
std
push
dec
mov
movsl
test
or
push
push
fstps
mulb
aam
dec
das
adc
adc
rolb
mov
jp
sub
xchg
ds
push
mov
div
push
pop
dec
lds
hlt
in
mov
addr16
xchg
popf
and
mov
cmp
cmp
out
gs
ljmp
hlt
testb
pusha
outsl
dec
fstpt
jmp
jns
sub
pop
push
enter
sbb
mov
xlat
aaa
jo
mov
push
andb
fsubl
cmp
in
sbb
pop
dec
push
pusha
push
das
pusha
mov
pop
gs
dec
mov
ja
lods
dec
and
inc
dec
addr16
pop
scas
repnz
cmp
adc
inc
cmp
out
push
adc
xlat
loop
cmpsb
fldcw
ss
cmc
ljmp
pop
jp
mov
jmp
adc
popl
aam
push
and
dec
pop
mov
cwtl
icebp
negb
or
sub
test
dec
clc
xor
jo
les
dec
arpl
push
mov
std
lock
loop
mov
pop
and
subb
nop
imul
add
or
mov
cmpsl
mov
pop
mov
mov
xor
xchg
jge
push
and
mov
lods
data16
pusha
mov
jns
mov
scas
inc
or
xor
repnz
scas
add
pop
push
adc
loopne
cld
dec
ficomps
add
dec
sti
ljmp
mov
push
pop
jb
pop
push
outsl
stos
pop
std
rcrl
inc
push
sti
jmp
jb
ret
and
jl
call
int
add
sub
pop
dec
xchg
dec
hlt
and
xor
sbb
add
pop
mov
inc
push
mov
out
int
pushf
leave
sbb
or
out
sbb
xchg
jns
dec
mov
adcl
xchg
ret
fmull
nop
outsb
lds
cwtl
push
pop
mov
mov
lods
add
out
dec
hlt
leave
xor
jno
pusha
dec
mov
and
cmp
pop
xchg
in
cmp
mov
xrelease
jbe
jnp
xchg
and
aaa
jg
mov
aaa
addr16
sbb
les
cmp
add
daa
pop
adc
dec
xlat
jmp
sbb
out
cwtl
cmp
pop
cmc
pop
loopne
shlb
mov
cmpsl
sbb
fdivrs
jle
jb
and
mov
push
sub
jae
mov
arpl
jb
inc
aaa
sti
push
aas
inc
testl
mov
jns
xchg
mov
mov
fidivl
test
in
cmovno
das
in
mov
movsb
dec
mov
push
jg
mov
fists
sub
lods
jbe
pop
aad
mov
inc
jle
fisttpll
add
xlat
mov
test
add
mov
dec
in
mov
and
aas
cmpsb
pshufw
push
movsb
jne
jmp
or
leave
popf
sbb
dec
xchg
ja
mov
les
mov
cmp
dec
xchg
movsl
mov
loop
sbb
or
mov
inc
push
sarb
int3
adc
or
lods
sbb
int
mov
xlat
fcmovnbe
adc
insl
and
nop
lods
std
pusha
ret
mov
fs
jmp
outsb
decb
lret
dec
and
xchg
adc
jmp
mov
dec
lods
fmulp
adc
inc
aaa
mov
ljmp
cmp
in
dec
outsb
std
cmp
enter
pop
cmp
pop
add
ret
mov
in
out
cli
sbb
mov
mov
mov
arpl
and
data16
push
int
xor
cmp
sbbb
jno,pt
mov
fldcw
aas
lock
jl
stc
loope
insb
cwtl
fwait
push
xlat
and
dec
jno
pop
inc
add
test
xchg
cli
jb
imul
xchg
pop
popa
stos
pop
xor
lret
movsb
push
inc
in
push
add
call
cltd
pusha
pop
push
ljmp
pop
mov
inc
pushf
into
or
ret
pop
int3
xor
jecxz
add
jbe
dec
insb
mov
push
fnstenv
outsb
mov
iret
inc
shlb
mov
imul
pop
mov
int
cmp
inc
adc
lret
cmp
sbb
hlt
sbb
mov
and
sahf
aad
lcall
lcall
hlt
fistps
cli
or
fwait
dec
adcl
ret
test
ret
and
jmp
mov
cmp
bnd
fisttpl
inc
mov
cld
sub
xchg
push
lahf
and
dec
mov
mov
call
movsl
and
adc
loope
push
out
xchg
jg
xchg
or
xor
js
sti
aas
bound
push
or
mov
sub
or
and
cltd
enter
jno
sub
mov
cmp
mov
pop
imul
popl
mov
cmp
inc
mov
dec
bound
out
jno
mov
fldenv
push
mov
outsl
or
push
faddl
mov
ret
div
cmpsb
push
jns
push
fdivrs
cmp
dec
push
push
push
in
call
dec
ss
int3
add
cltd
pop
ja
or
pop
fiadds
and
nop
jecxz
lds
inc
mov
rorl
call
testb
mov
cmp
push
mov
mov
arpl
inc
mov
pop
inc
xchg
fldl
xor
cmp
pop
loop
adc
add
fcompl
fs
push
sbbl
lret
rcrl
fstpt
mov
jno
jae
imul
adc
adc
jle
adc
negb
jmp
stc
sub
pop
pushf
lcall
and
or
inc
cli
or
mov
push
adc
ja
inc
mov
loopne
testl
cli
pop
adc
int
shl
nop
repz
das
loope
test
into
shll
iret
jnp
mov
or
flds
aas
pop
push
mov
not
call
xchg
adc
pusha
or
insl
mov
lods
xor
and
adc
push
xor
std
imul
daa
pop
push
rcrl
test
insb
and
lahf
cmp
inc
call
push
pop
xchg
rcll
nop
jg
mov
in
add
dec
or
mov
ret
rorl
push
mov
fmuls
inc
jge
repz
daa
or
out
ret
pop
test
cmc
dec
dec
jecxz
push
pusha
sbb
mov
cs
sub
xchg
stc
push
in
inc
mov
push
cltd
pushf
movsl
mov
dec
mov
push
xor
pushf
mov
fildll
jo
loop
ficompl
mov
adc
outsl
std
scas
popa
inc
inc
mov
or
in
dec
or
adc
in
jmp
fs
loope
mov
out
ljmp
frstor
jb
in
xor
jg
push
push
mov
mov
lea
mov
shlb
lret
andl
xchg
xchg
sub
clc
adc
push
pop
call
dec
and
pushf
shll
ljmp
in
jle
pop
mov
mov
xor
das
sub
js
int3
dec
sbb
in
xchg
mov
pop
xchg
sbb
push
outsl
xchg
cmp
jnp
cmp
nop
xchg
lahf
pop
and
mov
stc
add
out
fdivrl
out
and
daa
xor
and
add
jecxz
inc
into
shl
jge
in
inc
lock
pop
mov
xchg
int3
mov
rcr
imul
inc
lcall
xor
jns
push
cmpb
mov
dec
jno
test
add
clc
mov
xchg
sub
fidivrl
or
shll
in
aam
adc
push
pop
aas
lods
mov
lea
into
sub
inc
pusha
pop
ficoml
sbb
popf
add
pop
imul
add
add
movsb
jcxz
cltd
sbb
arpl
test
jne
jns
pop
mov
push
andl
sbb
into
outsl
push
xchg
test
mov
mov
stos
sub
icebp
repnz
pop
in
int3
mov
cmp
xchg
leave
inc
sarl
iret
in
push
dec
sbb
sbb
mov
stos
ljmp
sub
push
insb
lods
jp
fidivs
push
inc
cli
ror
fcomps
pop
and
sub
inc
ret
inc
sbb
mov
sub
jnp
repnz
cmp
insl
leave
mov
pop
and
into
ret
jne
lret
enter
push
or
push
lods
inc
pop
stos
dec
jns
mov
jge
outsb
jmp
push
mov
mov
cwtl
enter
push
add
add
dec
cmp
mov
daa
pop
stc
bound
scas
daa
jae
mov
jecxz
mov
xor
dec
cltd
sbb
les
jb
dec
pop
mov
push
push
xor
and
mov
inc
aaa
jno
push
roll
aad
sti
test
push
leave
cmc
popa
cli
push
jmp
dec
mov
push
xchg
jg
mov
stc
nop
inc
daa
xor
mov
pop
lods
stc
aad
push
push
adc
dec
jne
push
fnstsw
js
mov
dec
dec
loope
jl
ds
lcall
inc
push
mov
or
pop
scas
jo
dec
sbb
push
inc
mov
nop
mov
jle
sub
inc
and
sbb
stos
in
int
insl
cmc
movsb
imul
mov
aas
cwtl
aaa
jb
imul
scas
push
fwait
inc
sbb
into
jo
insb
inc
insb
test
das
jge
fwait
dec
dec
adc
xchg
sub
jbe
cmp
mov
stc
dec
int
ds
lds
mov
test
inc
imul
xchg
mov
push
mov
cmp
ljmp
scas
repz
sti
and
mov
push
lods
test
lret
fcmovb
shll
push
sbb
mov
outsb
xchg
xor
or
mov
aad
lods
scas
mov
mov
hlt
cli
aad
cmc
xchg
push
or
ja
inc
push
stos
in
pusha
das
in
inc
or
jp
xor
mov
fisubs
dec
mov
pop
xor
ja
int3
inc
mov
push
aam
jmp
jne
outsl
xchg
mov
fsubrs
jecxz
pusha
pop
movsb
ss
loopne
push
xlat
sar
cld
jecxz
mov
in
mov
repnz
sti
inc
movsl
xor
push
dec
sbb
xor
add
xchg
call
stos
cmpsb
pop
outsl
and
cmp
sbb
mov
repz
aam
cmp
and
ds
sub
dec
cwtl
xchg
shll
scas
cltd
aad
sbb
and
stos
mov
mov
xchg
jp
mov
in
and
in
jo
in
out
mov
aad
sbb
out
and
movsl
mov
in
leave
je
or
mov
cli
lret
push
jns
pushf
push
in
xchg
push
cwtl
xchg
pop
cmp
push
pop
cld
sub
sub
inc
xchg
xchg
jmp
aaa
inc
fs
mov
lahf
fcoml
inc
insb
into
scas
xor
addr16
sbb
dec
xor
insb
fdiv
pop
cmp
jo
mov
push
sbb
adc
addr16
pop
loop
push
push
data16
xor
stos
and
and
stos
shrb
mov
rcrb
lds
xor
outsl
cmp
mov
jbe
or
sbb
in
xchg
lods
fidivs
loopne
mov
push
cmp
outsb
sub
int
inc
xchg
xchg
pop
push
decl
adc
mov
lret
arpl
lods
hlt
mov
sub
or
mov
and
inc
into
xor
scas
push
sub
sub
mov
lret
push
jmp
cmp
lahf
inc
xchg
and
inc
jnp
sti
js
mov
pop
push
fcmovb
inc
xchg
scas
mov
lock
out
inc
mov
cmpsl
frstor
fnstcw
aam
mov
jle
push
or
xor
mov
add
fwait
xorb
loopne
mov
mov
testl
sbb
xchg
xor
mov
push
test
push
add
cmpsb
cmp
mov
imul
fsts
das
cmpsb
mov
arpl
cmc
mov
ja
jge
mov
in
cmp
mov
sbb
shl
cmpsb
in
and
shll
xlat
mov
cmp
outsl
xor
orl
jg
out
fcoml
mov
add
data16
stos
push
adc
stos
popa
loop
scas
pushl
cld
xchg
arpl
add
cmpb
fimuls
dec
int3
imul
adc
aam
iret
xlat
or
leave
or
jnp
rcll
jecxz
xchg
jns
loop
xchg
add
insl
int
jnp
in
idivb
out
or
aas
pushf
rol
cmp
mov
xlat
jecxz
and
cmpb
mov
xor
movsb
loop
outsl
ret
ficoms
insl
scas
test
cli
ret
gs
in
insb
bound
cmp
data16
add
subb
xchg
and
mov
ret
push
mov
mov
int3
adc
push
iret
rsqrtps
jecxz
xchg
and
fcoms
mov
cli
std
pop
mov
lret
imul
mov
or
mov
mov
subb
pop
inc
add
jmp
mov
fiadds
inc
and
mov
cmpsb
mov
into
aas
imul
push
sbbl
test
or
xchg
movsb
ljmp
les
adc
push
push
pop
xchg
in
push
loop
jno
ds
xchg
and
dec
ds
das
stos
outsb
mov
sub
mov
mov
aas
stos
cmp
mov
sbb
cwtl
inc
adcb
int3
inc
lea
popa
sub
hlt
jge
inc
int
daa
mov
shlb
leave
test
inc
jne
orl
ljmp
xor
cli
xor
mov
pushl
adc
mov
inc
adc
push
lea
pop
outsb
lahf
aaa
adc
out
xchg
or
fsubr
ret
jb
xlat
addl
outsb
mov
pusha
push
push
mov
dec
int
add
and
adc
push
cmp
das
arpl
jg
frstor
xor
inc
push
or
test
cmp
aad
mov
fwait
sbb
std
dec
or
incb
stos
hlt
hlt
add
test
adcl
scas
xchg
mov
popf
push
stos
xchg
jne
mov
jae
cld
dec
cmovp
inc
sbb
cmpsb
adc
je
cmp
xorb
aad
add
push
test
and
ret
jnp
mov
cmp
in
cs
mov
inc
lahf
sub
add
xor
sub
or
test
adc
and
pop
mov
mov
sbb
mov
cmp
xor
xorl
mov
xchg
push
daa
xchg
jmp
insb
movl
xchg
pushf
ret
inc
scas
pop
mov
cmovle
data16
cld
std
scas
js
imull
rcll
push
and
and
xor
shll
pusha
loopne
out
pusha
scas
test
inc
inc
dec
mov
in
loope
rol
cs
imul
and
jle
push
stos
add
pop
push
dec
ljmp
sub
push
insb
pop
pushf
aam
insl
xchg
and
sub
pop
xor
aaa
pop
rcrb
xlat
push
in
cli
add
aam
int3
xlat
or
mov
sub
das
jbe
jne
iret
jl
out
sub
cwtl
and
add
or
dec
sbb
rcrb
inc
out
mov
scas
sub
repz
testb
mov
cmp
addb
mov
dec
mov
jg
aas
outsl
fdivrl
or
stc
movl
adc
xchg
mov
jmp
repz
out
lret
push
cmc
aad
xor
mov
cld
data16
rcrb
push
hlt
jno
cld
pop
inc
cmp
lock
mov
or
arpl
push
mul
lods
mov
xorb
inc
push
cld
mov
test
lock
inc
pop
inc
jbe
xchg
stc
inc
stos
mov
aaa
xchg
pop
or
or
stos
and
lret
push
aam
fwait
dec
xchg
loope
add
push
push
cmp
frstor
jmp
push
movsb
adc
sbb
add
je
mov
cwtl
push
mov
aas
or
jecxz
adc
jge
outsb
out
pushf
mov
push
pop
repnz
push
push
push
addr16
dec
test
pushf
sub
test
mov
mov
es
cmp
lret
or
nop
sub
or
rol
inc
inc
mov
lock
lcall
xchg
movsb
dec
clc
xchg
lahf
jp,pt
pop
add
aas
inc
pop
sbb
and
add
repnz
sahf
cs
pop
inc
push
rorl
test
sbb
movsb
jo
add
cmp
stos
movsb
loop
add
or
mov
pushf
cwtl
or
xor
popf
leave
sbb
incl
std
xchg
mov
add
push
int3
push
mov
dec
aam
mov
sub
es
push
lahf
xchg
xlat
les
ja
scas
push
mov
fsubr
es
jmp
xchg
ja
fisubrs
pusha
jb
and
rcll
dec
sub
xor
push
xchg
adc
pusha
or
rclb
sub
mov
in
add
jb
lods
sahf
pop
nop
mov
xchg
inc
outsl
push
loope
inc
leave
mov
and
aas
mov
mov
mov
mov
xor
es
imul
cld
fdivrl
jecxz
mov
gs
call
lods
je
mov
test
pusha
sbb
mov
stc
mov
xor
add
fcoms
or
mov
jmp
sbb
add
push
scas
pop
push
xchg
out
mov
pop
xchg
in
iret
cmp
add
outsb
out
lods
pop
add
xor
addr16
gs
ficoms
leave
jns
cwtl
inc
hlt
es
cli
mov
mov
sarb
movsl
mov
sub
push
daa
cmp
popa
aam
fcomi
xor
ss
jp
push
idivb
lods
adc
pop
mov
rorb
adc
nop
adc
fsub
xchg
xlat
rcrl
adc
and
ljmp
mov
pop
aas
xchg
fcoms
xchg
imul
mov
icebp
lret
lock
test
or
push
dec
mov
dec
jne
xchg
xor
mov
cmp
push
mov
ret
pop
fxtract
and
mov
test
jp
push
and
fdivl
cmp
test
mov
inc
pop
mov
or
cmp
lret
or
push
xorb
in
popf
adc
call
inc
or
js
lret
mov
ljmp
sub
cld
adc
imulb
pop
inc
inc
mov
lock
scas
cmp
jo
fisttpll
nop
and
aam
out
mov
inc
adc
xlat
insb
pop
xchg
cmpw
sub
mov
loop
addr16
jne
nop
lcall
push
sub
sahf
jae
out
rol
cmp
pop
inc
mov
das
icebp
sbb
mov
push
jae
inc
daa
fwait
adc
mov
add
fstp
lods
iret
popf
les
ficoms
dec
std
inc
aam
int
lods
pusha
rol
sbb
or
lock
push
ds
or
pop
jne
dec
mov
faddl
test
addr16
and
cmpsb
popf
loop
pop
mov
loop
lods
enter
addb
cmp
sbb
mov
fdivl
xor
push
or
xor
pop
mov
movsb
cmp
shll
mov
cmc
scas
inc
mov
aam
es
mov
cli
cmp
cli
stos
ds
jo
sahf
arpl
popa
lods
cltd
jns
push
adc
push
xor
mov
inc
loope
mov
lahf
mov
sub
mov
out
adc
push
loopne
mov
xor
idiv
and
sub
jns
fiadds
pusha
adc
scas
add
test
cs
outsb
pop
or
jp
pop
ss
pop
cmp
cmc
pop
inc
andb
and
into
rorb
repz
es
sahf
jb
add
mov
and
dec
xchg
adc
cmpsb
outsl
adc
jb
sub
jmp
ficoms
pop
sbb
stos
pusha
inc
xchg
mov
or
shll
xor
pop
mov
xor
and
mov
mov
and
and
cmp
enter
cmp
cli
test
aad
and
icebp
and
inc
call
and
inc
push
mov
test
rorb
pop
enter
push
sub
lret
imul
fsubr
push
arpl
push
push
movb
lret
or
or
shll
mov
stc
push
push
fmuls
gs
jle
out
mov
shlb
out
shrb
movsb
jno
pop
lahf
rolb
xchg
and
add
jecxz
sub
loopne
sub
pcmpgtb
cmp
mov
mov
lret
int
fs
imul
cmpsb
das
cld
lret
lock
mov
repz
xor
in
xchg
pop
adc
mov
mov
rcrl
xchg
popa
add
xchg
shrd
or
ret
pusha
push
int
mov
mov
lds
or
adc
jle
sbb
pop
mov
lods
or
xchg
mov
xchg
xchg
cmp
test
in
sbb
jmp
sbb
getsec
pop
inc
inc
push
add
jg
ja
rorb
lret
push
call
lcall
push
cmp
mov
lret
lahf
sbb
inc
ds
outsb
shrb
fstps
cltd
mov
scas
pushf
mov
stc
lea
lahf
lea
outsl
stos
add
es
in
fwait
mov
idivl
add
iret
lahf
ret
and
dec
stos
dec
add
xor
inc
pop
scas
cmpsl
out
arpl
insl
out
notb
inc
outsb
cli
adc
add
test
fadds
fiadds
pop
mov
mov
addr16
lods
sbb
fisubs
jb
std
mov
jne
loop
inc
ja
loope
pop
inc
and
mov
data16
xor
mov
and
mov
lods
pop
std
jae
aas
out
dec
mov
iret
cmpsb
pop
push
loopne
dec
adc
add
mov
fcoml
mov
sbb
pop
push
sbb
push
push
fisttps
or
out
add
or
push
xor
lock
dec
or
inc
cs
dec
jg
sbb
fdivrl
sbb
push
loop
rcr
or
ret
sub
sub
test
shrl
sbb
mov
test
icebp
add
call
mov
mov
xchg
pop
test
shll
add
fnstcw
mov
mov
aad
sub
rol
gs
lea
aam
repnz
test
or
cmc
loope
lret
fs
mov
or
and
jnp
ficomps
mov
pusha
lcall
popa
xchg
stos
ret
mov
mov
clc
in
jmp
les
pand
lods
push
jae
fcomip
push
inc
push
shll
mov
xchg
push
jae
in
sub
or
jl
or
mov
lret
mov
dec
and
xor
xor
dec
test
pop
or
adc
adc
and
sahf
or
call
in
out
inc
xor
cwtl
or
jl
subl
cwtl
movl
insl
dec
stos
repz
push
inc
enter
popa
jno
lret
inc
and
fiaddl
jnp
push
stc
rolb
cli
in
mov
lea
jle
dec
insb
ss
insl
addr16
jo
xor
and
mov
mov
push
mov
sbb
aaa
sbb
bound
push
mov
aam
xor
pop
pop
and
ss
sub
ror
inc
and
mov
dec
ja
or
jmp
inc
add
pop
sbb
adc
fcompl
dec
sbb
sbb
insl
int
stc
je
int3
lcall
or
dec
adcl
lock
shrl
data16
fwait
cmpl
aad
cmpsb
xlat
mov
push
pop
jl
jo
ret
call
out
scas
mov
xor
cwtl
add
popf
test
xlat
cmc
mov
ret
jecxz
dec
iret
mov
mov
out
or
and
xor
adc
fstpl
inc
mov
mov
mov
popa
mov
inc
push
loope
xchg
mov
sahf
jo
mov
jae
fnsave
mov
pop
adc
and
aad
pop
scas
xchg
nop
sarb
mov
cltd
shlb
xor
lods
fistpl
jle
jmp
fidivs
stos
mov
leave
cmp
fldl
adc
or
xchg
and
push
inc
or
mov
daa
popf
out
sub
adc
push
mov
sub
popf
popf
dec
cmp
repz
xor
lret
pop
mov
pop
add
adc
push
mov
lcall
add
scas
push
js
inc
xchg
mov
xchg
xchg
cmp
loopne
sub
mov
xchg
shrl
cmp
fnstsw
fistps
fdivl
cmp
lahf
fldt
xchg
out
loop
aam
fldenv
mov
roll
orl
xchg
imul
or
and
pop
jmp
fisubl
hlt
call
out
aad
int3
movl
iret
adc
lret
hlt
dec
adc
stos
jp
pop
fwait
xlat
popf
dec
shlb
pop
in
ds
sbb
push
hlt
inc
adc
cmp
testb
scas
jmp
sar
push
sti
out
addr16
movsb
xor
sbbb
fsub
arpl
push
sbb
adc
push
xlat
and
mov
data16
ljmp
sbb
mov
cmp
pop
scas
out
cmpsb
in
add
mov
jmp
jp
jae
je
out
into
lret
sbb
pop
and
add
jnp
lret
push
sarb
adc
pusha
mov
xchg
sub
add
loop
mov
in
push
pop
xor
mov
mov
repnz
jns
xchg
push
cmpsb
data16
mov
cli
test
aam
mov
repnz
shlb
xchg
add
adc
aad
ficoms
aad
jle
mov
xchg
pop
pusha
and
insl
lret
add
and
aad
jecxz
add
jo
addr16
popf
enter
pop
adc
pop
mov
rorb
xor
push
rclb
xchg
inc
fisubs
cmpsl
mov
xor
fidivs
cltd
hlt
mov
pop
int
aad
add
sbb
or
adc
push
call
adc
jmp
jp
xchg
inc
cmp
mov
rcrl
dec
mov
loopne
and
inc
push
shl
pop
int
jp
pop
sbb
sbb
push
jno
dec
dec
fs
out
das
mov
popf
jmp
pop
shrd
cmp
gs
out
or
adc
sbb
out
xor
xchg
ror
adc
sarl
mov
xor
push
jo
out
push
repnz
data16
sbb
fstps
adc
mov
sbb
inc
inc
fimuls
mov
in
cmpsb
stos
les
dec
inc
jno
mov
jb
fucomp
test
fxch
xchg
xchg
mov
shl
cmp
loopne
mov
mov
xchg
inc
pushf
mov
out
dec
out
arpl
lcall
fucomp
insl
xchg
push
loopne
cmpsl
add
in
lods
and
test
call
adc
adc
in
sub
stc
mov
fwait
pop
pop
mov
xchg
xchg
add
sti
andl
jge
test
fwait
lahf
into
sub
sahf
mul
fisttpll
xchg
das
aam
int3
into
aad
sub
cltd
cltd
adcl
push
push
lahf
push
push
aaa
add
nop
shlb
push
cmpsl
lea
jmp
xor
or
rorb
mov
cmovs
pushl
sti
sbb
call
in
loope
pop
in
cmp
mov
dec
push
add
popf
pusha
repnz
nop
xor
shr
fmull
add
jnp
jp
mov
fidivrs
enter
add
xcrypt-ecb
cmpsl
cmovge
pushf
xlat
daa
mov
jg
test
shl
mov
aam
hlt
dec
movsl
enter
mov
dec
xor
in
imul
mov
and
rorb
xor
or
or
and
mov
adc
adc
int
ret
cmpsb
pop
cmpsb
lcall
ljmp
mov
jne
or
dec
aam
in
mov
push
js
mov
loopne
pushf
bound
cwtl
imul
sahf
push
push
pop
lock
ja
mov
jl
mov
sub
pop
popf
pop
popf
notb
mov
aad
fsub
cld
enter
les
mov
push
inc
clc
stos
dec
sbb
lds
add
aam
xorb
fidivl
jns
bound
lock
jbe
arpl
jmp
mov
testb
ret
xchg
pop
fisttpl
adc
mov
in
movsl
popa
rorl
movsl
or
cmc
sti
dec
push
mov
cmp
pop
outsl
mov
and
ret
lods
lcall
dec
pop
pop
dec
arpl
add
lret
iret
dec
sub
push
mov
aam
and
test
mov
xchg
dec
fiadds
lcall
xchg
pushf
dec
dec
jl
or
jnp
ret
jge
stos
pop
iret
icebp
idiv
lock
shlb
inc
rorb
das
roll
arpl
adc
sbb
pop
or
sbb
lret
sbb
mov
adc
inc
jle
call
cmp
dec
ret
div
xchg
loopne
test
dec
pushf
sub
mov
xchg
push
or
xchg
jo
adc
xor
xor
mov
in
mov
ds
adc
js
pop
pop
inc
daa
daa
inc
cmp
sub
sub
mov
leave
dec
pop
enter
xchg
sub
xchg
mov
lfs
sub
sbb
push
pop
insl
push
leave
pop
xchg
jecxz
sbb
jl
and
sahf
pop
repnz
jns
jmp
xchg
xor
push
cmp
adc
mov
sub
repz
aaa
mov
and
aaa
mov
cli
test
inc
ja
out
jbe
sbbl
xchg
push
lret
or
dec
push
stos
fists
pop
and
int
inc
dec
cmc
sbb
mov
and
jmp
mov
mov
cmpsl
ljmp
sub
sbb
mov
push
mov
nop
sbb
out
outsl
jmp
inc
and
sub
jne
mov
jg
add
aas
xchg
insb
cmp
cmp
call
idivb
das
xchg
sbb
sarb
adcb
push
dec
cli
mov
cmp
loope
jo
xchg
out
cmp
inc
adc
out
ljmp
add
pop
or
call
and
sbb
dec
adc
pop
in
lds
push
repz
push
lds
xor
push
fisttpl
ret
fwait
mov
sbb
cltd
push
imul
cwtl
cs
jecxz
jne
jne
and
in
orb
xchg
popa
mov
adc
scas
leave
stc
scas
sub
xchg
sub
int
inc
test
push
add
ljmp
jbe
hlt
sti
and
mov
addb
cmp
lahf
cmp
dec
add
iret
daa
rorl
sbb
iret
stos
or
scas
jo
dec
cmpsb
jo
pushl
dec
imul
push
icebp
or
orl
rcrb
rcrb
mov
das
outsl
xchg
stc
mov
repz
and
fnstcw
xchg
pop
frstor
inc
sbb
jo
dec
inc
cmc
aas
push
rcrl
imul
cmp
push
lret
push
add
testb
movsl
sbb
ret
cmp
imul
cmpsb
stos
sub
jmp
inc
or
xor
xor
push
push
test
in
add
lods
xchg
cmp
mov
out
sarl
or
dec
fisubl
adc
in
push
or
mov
mov
add
leave
stos
pop
daa
mov
add
out
loop
sbb
cmc
xor
dec
pop
test
pushl
mov
stc
adc
xchg
xchg
addr16
push
flds
sbb
inc
push
push
outsl
mov
push
xchg
push
enter
jecxz
mov
ror
loopne
mov
mov
test
xchg
out
jne
pop
iret
jo
into
mov
out
test
and
cmp
call
push
mov
fsubr
stos
ss
xchg
xor
mov
adc
ret
adc
insb
sbb
clc
pop
mov
adc
xchg
gs
push
mov
push
cvtdq2ps
int3
mov
addr16
popa
push
mov
mov
sbb
imul
das
in
cmp
xor
inc
or
xchg
mov
pop
test
ds
inc
lods
mov
mov
clc
inc
add
inc
std
cmp
push
xor
aas
lret
jo
or
lods
and
inc
sub
and
sbb
pop
or
adc
push
orb
pop
push
cmc
and
and
mov
insl
adc
lods
and
sbb
lock
shl
sbb
and
in
lds
lds
xchg
icebp
pusha
dec
in
fwait
jb
das
add
cmp
loop
je
or
orb
sti
add
mov
push
xchg
inc
jbe
mov
xchg
or
pop
repnz
dec
fs
adc
icebp
pop
xlat
std
out
sbb
push
dec
jecxz
inc
lock
mov
in
sub
xor
scas
dec
rol
mov
xor
pop
movsb
pop
ret
add
shll
and
arpl
dec
dec
add
xorb
pop
ljmp
leave
jns
mov
daa
pop
shll
and
add
cmp
sbb
mov
lods
inc
push
loop
mulb
sbb
push
fimuls
inc
inc
cmc
repz
push
mov
cli
push
movsb
mov
sbb
mov
mov
push
cmp
mov
gs
mov
fldcw
cmp
dec
insb
stos
pushf
lret
int3
and
inc
mov
stos
mov
daa
xor
jne
add
mov
fnstcw
data16
jno
mov
or
push
or
repz
inc
xlat
lea
xchg
loopne
push
lods
fcoms
loope
push
arpl
cli
mov
or
out
and
repnz
inc
push
mov
dec
xchg
ret
addr16
xchg
xchg
or
dec
int
in
jg
mov
je
push
insl
ror
andl
je
sub
daa
dec
push
xchg
jnp
imul
jge
fnstcw
cmpsb
mov
lods
inc
mov
xchg
xchg
or
popw
sub
stos
out
mov
xchg
stc
clc
add
std
sbb
faddl
sbb
sbb
repz
rcrb
inc
lcall
sbb
cmpsl
pop
xor
mov
arpl
je
fsub
inc
add
inc
mov
lods
ret
aam
or
into
mov
inc
popa
roll
out
fidivrl
inc
aas
test
iret
mulb
loop
adc
jo
repnz
andl
jno
xor
and
adc
and
decl
and
xor
xchg
mov
daa
xchg
pop
mov
popf
dec
sti
stos
adc
adc
or
imul
jbe
lods
pop
aaa
movsl
shrb
mov
in
ljmp
fidivrl
dec
pop
xchg
jne
adc
jnp
movsl
or
aam
lret
leave
xor
in
and
cmpsb
xor
jmp
gs
xchg
fwait
popa
ss
stos
push
jo
mov
mov
xor
pusha
fsubrl
jns
jb,pn
cltd
nop
mov
rcrl
movsl
cltd
lahf
dec
mov
jo
sbb
jl
jp
aam
int
cmp
orl
cli
mov
outsb
out
xchg
add
xchg
pop
aas
hlt
xchg
or
out
ljmp
sbb
push
lods
stos
sbb
fwait
adc
sbb
sbb
jnp
pop
add
out
jno
ret
or
ss
out
inc
push
pop
sbb
pusha
add
push
mov
add
add
jb
add
push
xchg
adcb
xor
fistl
push
or
inc
mov
cmpsl
adc
pop
loope
pop
push
push
cmpsl
out
pop
mov
add
jb
push
fbstp
aam
es
mov
cmp
mov
and
push
daa
adc
dec
sub
call
adc
int3
push
xchg
lock
fmuls
mov
push
mov
or
mov
cmp
mov
arpl
std
jge
xchg
mov
cmpsl
icebp
xlat
push
lods
test
or
inc
pop
cmp
gs
push
arpl
hlt
in
pop
xchg
xor
test
enter
cli
push
stos
mov
jb
pop
jl
jg
and
and
popa
adc
fstpt
pop
mov
jnp
dec
pushf
dec
mov
lcall
leave
inc
fsubs
pop
fsubs
mov
cwtl
mov
out
loopne
lea
mov
mov
or
pop
cmpsl
cmpsl
in
gs
or
add
fisttpl
adc
ja,pt
int
inc
add
out
ficoms
outsb
xchg
test
icebp
push
inc
push
push
and
outsl
aad
inc
test
inc
cmp
ljmp
lret
jo
inc
enter
pushf
imul
cmp
ja
sub
xor
push
inc
nop
inc
add
inc
mov
dec
dec
stos
mov
test
ja
dec
jne
dec
dec
ljmp
xor
jae
push
addr16
cli
or
inc
mov
mov
cmp
dec
sbb
mov
push
popa
xor
or
sbb
aaa
sub
jmp
inc
aaa
xorb
insb
push
insb
and
xchg
iret
dec
adc
mov
jp
sub
jbe
cmp
orl
testb
loope
jnp
inc
push
shll
pop
xor
bsf
mov
daa
pop
inc
rorl
and
out
cmc
outsb
outsl
fldenv
add
jo
fdivrs
push
notl
push
int3
dec
insb
int3
sbb
inc
inc
insb
arpl
fisttpll
cmp
jnp
mov
cs
out
insl
bound
push
fs
jmp
jmp
adc
jge
push
jg
pop
xor
notl
fildll
or
jnp
lods
mov
cltd
popa
cltd
adc
scas
pop
addr16
dec
jns
xchg
dec
push
or
mov
arpl
repnz
xchg
push
mov
icebp
inc
ljmp
pushf
xchg
lods
shlb
or
loop
push
xchg
mulb
mov
rolb
inc
jo
sbb
mov
pop
scas
pop
ret
jp
xchg
lods
mov
push
jecxz
fistps
mov
lea
cmp
test
push
mov
jg
imul
loope
xchg
and
cmp
inc
iret
inc
fstl
mov
out
rcrb
mov
or
aaa
jne
jmp
outsl
jg
push
ljmp
push
or
jle
jle
cmp
cmc
sbb
sarb
test
cli
scas
dec
mov
aas
fisttps
jge
pushf
shlb
mov
shlb
mov
fisubs
imul
mov
test
mov
stos
pop
dec
lods
hlt
fsubs
es
xchg
sub
xor
xor
aam
rcl
notl
repz
and
icebp
or
xchg
jb
out
stos
or
jbe
dec
or
mov
lahf
add
imul
cmc
fnstsw
xor
push
in
fsubs
push
jnp
push
pop
in
mov
mov
test
push
dec
adc
pop
add
cltd
cs
sbb
daa
movsl
aam
rcrb
mov
jp
mov
ret
pop
jnp
xor
fldcw
push
add
pusha
push
xchg
aam
inc
clc
dec
xor
mov
clc
insb
pop
lds
or
in
std
xchg
std
stos
daa
lods
jge
popf
fstpt
xor
xchg
jecxz
pop
sahf
push
inc
push
lods
cwtl
sub
outsb
mov
sti
inc
adc
sbb
icebp
js
xchg
adc
sbb
xchg
and
out
out
cwtl
stos
mov
adc
jne
adc
insb
loope
jl
xchg
sbb
jae
mov
fcomps
fisttpl
addr16
bound
daa
adc
shll
jg
sbb
jl
push
ja
inc
andl
lods
movsb
pusha
int
mov
ljmp
repnz
jmp
pop
ljmp
inc
mov
xchg
lahf
jecxz
cld
stc
lret
loopne
adc
scas
js
lock
and
gs
fsub
roll
mov
aas
jnp
out
test
xor
aam
nop
mov
mov
pop
std
add
xlat
out
jle
jl
cmp
xchg
sub
fstpt
mov
xchg
mov
ret
js
xor
arpl
dec
push
inc
xchg
test
mov
jcxz,pn
mov
shlb
std
sub
scas
pop
push
sbb
mov
movsl
sar
mov
pop
mov
pop
aad
ds
jmp
bound
loope
fldt
push
ljmp
pushf
fiaddl
cltd
gs
or
xchg
or
adc
xchg
xor
xchg
jbe
in
push
std
leave
enter
rcl
dec
lahf
addl
lret
pop
mov
jo
lods
add
sub
mov
stos
pop
cmc
sbb
pusha
into
fisttps
aas
dec
sub
cmp
jns
cmpsl
lock
adc
mov
ljmp
dec
cmp
fs
dec
scas
ficoms
sahf
insb
dec
jns
out
movsl
leave
jae
adc
mov
pop
pop
pop
mov
shrl
xor
inc
dec
xlat
jmp
or
inc
xchg
hlt
jne
outsb
push
or
into
jbe
int3
pop
inc
movsb
popa
lcall
faddl
mov
rolb
jae
call
js
imul
insl
pop
xchg
test
hlt
and
xchg
or
outsb
js
and
jns
lods
cmp
mov
adc
push
test
mov
pop
push
add
jp
push
sub
xchg
fdivl
xor
pop
lret
adc
xchg
sbbb
jo,pt
ss
lret
lds
push
sub
pop
shrl
and
or
ss
icebp
inc
faddp
lds
xchg
inc
fidivl
jno
icebp
out
sub
loope
outsl
jnp
rcrb
pop
add
pop
add
mov
dec
add
dec
mov
and
adc
jnp
int
push
cltd
push
mov
les
push
xchg
imul
mov
scas
fldt
subb
inc
gs
jno
fst
mov
jne
adc
gs
lods
jl
mov
addr16
cmpsb
test
push
and
std
adc
sub
lea
jno
mov
negb
jno
xchg
cmp
aam
jg
or
hlt
xor
push
les
pop
jne
jno
cs
jbe
fwait
cld
adcl
sbb
enter
or
jo
inc
inc
sub
push
xor
les
gs
ja
mov
adc
jp
or
std
jbe
xchg
sar
push
lock
shll
mov
into
lea
mov
pop
lret
pop
jb
aam
les
xchg
clc
out
mov
dec
fwait
sbb
loop
insl
sbb
or
push
aaa
jp
jb
sbb
fadds
xor
xchg
std
mov
mov
or
and
cltd
cmp
xchg
mov
outsb
imul
imul
pop
je
add
adcl
lock
scas
jmp
xor
or
jg
inc
xchg
and
into
out
or
rorl
xor
mov
data16
xlat
enter
cs
mov
xor
or
aaa
aam
stc
pop
fs
in
arpl
xor
pop
bound
fildl
test
dec
push
rorb
scas
sbb
imul
dec
dec
jp
pop
shll
pop
decl
out
icebp
cmpsb
sbb
mov
imul
insl
jg
mov
xchg
les
shll
cmp
cmpl
mov
pop
out
jb
pop
add
sub
clc
push
dec
dec
sbb
sahf
inc
mov
push
jno
xchg
xchg
mov
pop
and
xor
push
pop
push
add
imul
lret
cld
inc
je
inc
mov
jae
pop
push
mov
xchg
daa
xor
add
ja
pop
ss
lahf
ret
leave
push
test
std
dec
inc
cmp
mov
mov
imul
xchg
hlt
pop
dec
test
mov
lods
cmp
or
ss
pushf
add
sti
nop
test
clc
dec
das
push
int3
aas
mov
fisubs
idivb
inc
fsubrp
int
icebp
loopne
dec
nop
push
adc
inc
adc
push
jns
and
mov
xchg
iret
inc
pop
lcall
mov
jbe,pt
ret
mov
push
cmp
leave
jnp
sti
fs
mov
icebp
loop
int
or
cmp
jecxz
mov
movsl
test
push
je
enter
cmp
repz
mov
insl
inc
push
aaa
dec
jg
add
adc
rcrb
les
out
insb
subb
adc
xor
pop
ret
or
pop
mov
pusha
adc
stos
insb
aad
adc
dec
inc
ror
inc
push
fistpl
push
or
push
add
nop
adc
shl
jns
pop
stc
ret
ret
inc
in
test
ljmp
je
pop
testb
and
jbe
add
push
xorl
cmp
cmp
adc
in
cmp
iret
outsb
mov
inc
sbb
ljmp
add
outsl
nop
movsl
push
scas
arpl
stos
je
jo
frstor
and
push
repz
in
add
lods
aas
mov
cmp
aaa
insl
push
fmuls
jmp
in
ret
pop
clc
mov
add
std
mov
adc
jae
dec
push
or
scas
pushf
pop
jnp
xchg
and
mov
push
xchg
inc
mov
ljmp
stos
push
push
mov
jmp
daa
sbb
adcb
mov
add
test
dec
out
lea
cmp
sti
mov
fmull
fsubrl
fadd
add
push
cli
and
sbb
jl
jbe
das
icebp
jp
outsb
jbe
sarb
fstl
imul
pop
mov
push
je
cmp
test
mulb
ds
sub
scas
add
insb
icebp
cmp
push
cs
loope
and
inc
movsb
inc
incl
out
aad
push
xor
rep
test
test
cwtl
add
in
sub
jbe
mov
mov
xchg
enter
insl
or
shlb
in
leave
loope
fmull
sub
cli
mov
xchg
mov
loop
cs
out
dec
adc
add
in
pop
adc
xchg
xor
hlt
insb
fisttpll
std
movsb
das
fstps
test
xchg
lods
push
imul
lods
fidivrl
add
ret
dec
jns
mov
cs
sahf
sbb
out
pop
push
push
lahf
and
push
push
pusha
add
cmp
insb
pusha
jb
loopne
add
push
lea
and
into
xor
dec
xor
hlt
nop
adcb
movsl
int
jne
dec
imul
adc
sub
addb
lock
inc
sbbb
inc
daa
mov
fildll
in
xchg
clc
stos
cmp
add
lea
push
mov
mov
lahf
clc
leave
mov
je
sbb
stc
mov
je
jl
les
in
cli
gs
pop
jnp
dec
pop
int3
or
xchg
and
pop
test
repnz
imul
fcomps
nop
cmpl
lret
sarb
pop
test
mov
or
enter
xor
add
mov
sti
sub
jae
inc
jo
movsb
loope
loopne
and
pop
cmc
sub
in
stos
mov
jmp
xor
ret
lock
gs
inc
mov
add
sti
aas
repz
xchg
dec
sbb
mov
inc
pop
mov
cmp
sbb
cwtl
jmp
mov
scas
inc
insl
sarb
xchg
and
mov
fwait
mov
cwtl
push
mov
push
call
ja
push
sbb
cmp
cltd
sub
test
ds
mov
bndstx
sub
fcompl
movsb
jb
gs
gs
std
cltd
cmpb
insb
loop
pop
jg
movsb
sub
insb
ljmp
inc
push
lock
cmp
xchg
mov
int3
sbb
aam
push
mov
lea
sbb
inc
xchg
sbb
retw
jge
or
sbb
fnsetpm(287
jb
loope
je
pop
xchg
adcl
dec
jnp
leave
xor
out
add
int3
fsub
loop
aaa
mov
notb
xor
xor
push
xchg
mov
and
jbe
push
imul
subb
out
pop
dec
lock
aam
das
inc
imul
repnz
cmp
in
adc
daa
lret
jl
pusha
adc
pop
lcall
mov
jl
add
mov
dec
sarl
call
loop
fwait
in
push
sub
mov
testl
out
lea
or
jae
cs
das
cwtl
int3
ret
lcall
not
test
dec
dec
pushf
movsb
xchg
fldcw
or
pushf
xor
mov
mov
pop
int3
shll
sbb
pop
test
jl
cmp
das
imul
cltd
adc
mov
inc
aam
add
test
xchg
mov
fwait
and
dec
pop
mov
jle
pushf
jae
iret
imul
xor
xchg
mov
enter
fisubl
push
movsb
sub
insl
push
das
je,pn
repz
lcall
xorb
xchg
imul
sti
notl
mov
xchg
lcall
mov
iret
out
popl
bound
or
dec
lods
sbb
mov
test
movsb
sbb
push
mov
adc
in
in
push
or
out
pop
loop
sbbb
inc
and
and
mov
sbb
mov
sbb
sub
xlat
stos
mov
add
jle
and
leave
mov
pop
gs
mov
outsl
and
mov
lret
pop
or
imul
in
add
pop
cwtl
pushf
jle
cli
jns
lods
decb
stos
sarl
fisubl
mov
scas
pop
sub
or
aam
xlat
xchg
iret
sbb
xchg
lret
dec
sbb
test
inc
hlt
cmp
mov
mov
data16
mov
pusha
xchg
adc
je
fstl
dec
sbb
stos
out
xchg
lock
shlb
sub
in
cli
lcall
pusha
repz
push
into
popa
mull
cmp
and
xor
lds
mov
loopne
jmp
xlat
fnstcw
push
xchg
aas
dec
mov
imul
dec
aad
jno
sbb
mov
iret
aaa
js
sti
test
orl
cli
int3
mov
in
nop
mov
add
icebp
dec
std
jle
repz
js
push
in
add
insb
dec
push
dec
mov
adcl
mov
add
or
xor
or
cltd
scas
icebp
repz
aas
lcall
and
arpl
add
lret
scas
lea
lahf
fsubrl
sub
xor
jnp
fwait
loop
xor
fldt
ja
out
jge
ret
cmp
mov
aad
sbb
push
rclb
lods
mov
flds
fdivr
test
cld
adc
or
popf
repnz
adcl
out
sbb
xor
shlb
imul
leave
lods
fsubl
fcmove
inc
and
xchg
dec
sub
inc
imul
pop
mov
in
fimuls
fwait
adc
iret
je
movsb
mov
mov
fmul
cli
clc
ret
or
fwait
enter
idivl
and
fcoml
jge
imul
pop
sbb
add
sbb
in
aaa
dec
lcall
xchg
adc
outsb
jae
shrl
pop
movsb
mov
aam
xchg
mov
sbb
sub
mov
xchg
mov
loopne
aaa
pop
jnp
aad
stos
test
and
call
xor
arpl
cs
in
pop
lret
icebp
call
xchg
jle
hlt
and
dec
movsl
inc
sahf
jl
mov
into
dec
jge
mov
imul
lods
ss
jno
lock
in
jno
shl
fisttpll
les
std
add
cmp
and
cmpl
jb
sub
mov
out
imul
dec
fwait
sub
inc
mov
sbb
rorl
add
arpl
ret
and
daa
cmp
andb
adc
ret
mov
mov
nop
xor
mov
icebp
jno
push
xchg
inc
fs
mov
jne
movsl
shlb
pop
loop
roll
adc
xor
lahf
dec
jne
xor
rcr
data16
cmp
in
in
sarl
jge
iret
lock
aaa
fs
add
inc
xor
int
sub
jmp
xchg
out
mov
mov
xor
or
fbld
into
imul
adc
pop
push
in
into
push
shlb
and
test
xor
scas
lock
loopne
test
pop
fcoms
adcl
cmpsl
movsb
push
out
call
ljmp
mov
fistpll
out
push
fsubs
jb
out
test
xchg
gs
jge
loope
jle
aas
fists
outsb
adc
push
cmpsb
mull
cwtd
cmp
inc
dec
lds
jecxz
adc
into
mov
adc
xchg
cli
in
dec
les
stos
out
dec
xlat
pop
icebp
cmp
xor
dec
ds
stos
sbb
dec
in
fistpll
je
mov
dec
lods
loopne
inc
int3
mov
push
xchg
or
clc
or
adc
lock
jae
std
pop
out
test
push
xorl
fisttpl
add
loopne
xchg
std
faddl
sbb
adcb
stos
ret
lods
push
jp
imul
inc
cld
xchg
sub
cmc
mov
iret
stos
sub
ss
repnz
cmp
push
dec
pusha
jne
pop
nop
jp
ret
push
orb
xor
cmp
xor
lret
xchg
lcall
adc
fwait
pop
sbb
push
mov
int
jne
adc
pop
fmuls
dec
push
cmpb
stc
shr
jecxz
or
mov
daa
scas
lods
pop
fmul
scas
sbb
jns
jmp
jo
in
jbe
push
lahf
ja
outsl
cmpsl
repnz
mov
xchg
sbb
jp
test
mov
cmpsb
pusha
jo
pop
dec
pop
lret
sub
aad
xlat
jnp
das
jecxz
lods
int3
pop
add
fisttps
inc
je
add
pop
dec
mov
int3
push
aaa
push
mov
inc
or
mov
mov
dec
sub
xor
rcr
ret
inc
mov
sbb
cmpsl
out
jmp
aaa
movsb
pop
loope
int
push
adcl
cmp
mov
testl
add
call
rorb
mov
addr16
int3
int
and
out
cmpb
pop
ret
mov
addr16
fldenv
or
push
arpl
push
inc
cmp
jmp
cmp
or
lret
dec
jnp
lods
lret
pop
cs
inc
jo
dec
lahf
pop
test
ss
lret
arpl
pop
in
and
adc
in
jno
xor
into
jbe
jb
stc
jo
xor
inc
cmp
ja
daa
xor
shrb
add
loop
call
mov
stc
push
or
stos
sub
repz
and
cld
jb
mov
xchg
lods
push
daa
scas
xchg
arpl
enter
pop
jmp
repnz
mov
adc
loopne
test
jg
adc
scas
fsincos
testb
std
dec
push
mov
dec
push
adc
pop
jns
stos
stc
or
cwtl
scas
add
fcoms
in
sbb
dec
mov
mov
sarl
xlat
aad
lds
xchg
adc
add
scas
push
popf
pop
pop
adc
test
imul
jb
sub
nop
dec
xor
push
fidivl
fwait
mov
and
lock
fmull
inc
xchg
shrl
out
dec
dec
mov
icebp
mov
sti
lods
mov
pop
xchg
xor
cli
js
iret
mov
mov
lahf
jbe
or
or
mov
add
rclb
mov
aas
xor
repnz
loop
pusha
sbb
dec
lock
daa
call
cmpb
xchg
inc
sub
pop
sahf
and
and
out
adc
lret
sub
sub
fs
mov
test
jnp
and
mov
lea
pusha
lods
out
push
pop
pop
loopne
repz
fists
je
jae
mov
lea
leave
cmpsl
jno
and
fnsave
sti
mov
mov
addr16
rorb
sbb
cmp
mov
sub
xor
aam
sub
les
jae
daa
pop
pop
outsb
stos
or
add
adc
sbb
int
into
jle
add
leave
cmc
inc
shlb
inc
cmp
pop
ret
in
hlt
mov
lret
notl
fdivrs
cmpsl
mov
lret
mov
sbb
mov
loopne
lock
add
jnp
stos
pop
push
mov
sbb
inc
and
sub
loop
cmpsb
loope
mov
mov
mov
les
out
arpl
add
fcomps
sbbb
fldenv
sub
pop
pop
pop
push
jns
outsb
inc
push
xchg
mov
aam
dec
ret
pop
or
sub
jo
mov
fldt
dec
push
stos
sub
xor
cwtl
add
and
rcl
outsl
and
sahf
and
rorb
pop
jmp
insl
xor
ret
sub
bswap
push
call
iret
pop
adc
sub
pop
mov
dec
xchg
les
adc
mov
mov
mov
dec
cmpsl
jecxz
mov
fistpll
loope
cmpsl
jmp
mov
rcll
fninit
sti
sub
push
repnz
nop
cltd
ds
fistps
sti
mov
push
push
adc
or
pop
and
pop
mov
repnz
and
movsl
fisubrs
inc
stc
pop
ja
ljmp
add
or
pop
sarb
fnstsw
push
in
rorb
mov
popa
xchg
mov
xchg
movsb
lahf
xchg
cmpsl
out
dec
dec
push
stos
icebp
pop
cli
dec
lock
lock
hlt
and
out
inc
inc
lret
xchg
xchg
pop
jecxz
mov
es
sub
mull
cmp
jge
incl
in
dec
cmp
nop
and
in
jns
in
xchg
std
fsubrs
fdivrl
das
mov
icebp
jnp
in
pushf
stos
xchg
aaa
jecxz
gs
jg
mov
pushw
div
rcll
iret
inc
int3
mov
aam
je
jae
nop
mov
mov
aam
adc
les
xlat
inc
data16
xor
push
aas
loop
outsl
rcll
rcr
cmp
fidivrs
adc
lods
fcompl
push
adcl
mov
cmp
out
in
in
lds
ds
pusha
xor
adc
ret
imul
mov
adc
pop
daa
add
push
lret
test
jno
stc
inc
in
or
outsl
xor
inc
aas
xor
fwait
adc
mov
in
jmp
sbb
xchg
stos
into
push
push
and
decb
rcrl
add
out
jne
into
sub
sbb
int
mov
pop
sub
pusha
cmp
insb
fcompl
mov
push
push
icebp
rorb
push
insl
int3
xor
mov
mov
andl
mov
xchg
jne
mov
test
mov
jnp
mull
rcll
mov
test
jbe
pop
mov
fstps
cmp
mov
sbb
out
mov
push
outsl
jnp
dec
ret
into
push
xchg
xor
mov
cltd
loop
cmpsb
std
mov
lret
or
push
inc
mov
xchg
xor
cld
push
fcomps
cmp
insl
popa
mov
cmpsl
mov
insl
mov
mov
in
loope
sbb
inc
mov
aad
sahf
cmp
sbb
into
jle
bound
sub
test
push
cmc
push
mov
repnz
test
cli
dec
imul
jo
cwtl
lea
aas
out
stos
pushf
sub
push
mul
jecxz
leave
cmp
cwtl
pop
and
fs
jnp
push
or
movsl
repz
dec
xchg
dec
shl
dec
lret
jmp
cmp
inc
imul
arpl
pop
cmp
xor
in
xor
gs
jl
roll
xchg
cmpsb
cwtl
sub
and
push
in
mov
or
jp
xlat
dec
xor
mov
xor
or
jno
addr16
pop
outsl
mov
mov
and
push
not
ficoml
mov
es
mov
into
in
out
insb
jno
ss
add
mov
pop
xlat
mov
loopne
in
push
mov
pop
out
test
adc
bound
sub
cmp
xor
notb
sahf
sub
sbb
scas
pop
stos
inc
dec
movq
xor
cltd
into
inc
mov
dec
dec
push
clc
jne
jle
inc
sbb
sbbl
mov
sbb
mov
cltd
sbb
push
jno
mov
lret
test
or
mov
xchg
xchg
mov
loope
jne
push
cmpsl
and
pop
xchg
je
mov
outsb
dec
and
pop
dec
imul
inc
push
or
aaa
push
push
test
imul
leave
inc
nop
pop
je
enter
out
adc
daa
or
add
test
repz
pop
and
sub
sbb
mov
lock
push
push
push
mov
push
out
cmpsb
and
mov
mov
fldl
lcall
sbb
gs
cmovg
or
cmp
and
sarb
adc
pop
dec
or
push
xor
sub
adc
test
add
cmp
fcmovnu
repz
aas
imul
out
mov
test
rclb
ret
mov
push
out
bound
fimull
push
movsl
jns
mov
xchg
cltd
mov
xlat
iret
add
sbb
sbb
flds
and
pop
or
mov
sbb
rorl
fsubr
jge
jmp
jno
es
push
mov
inc
repnz
xor
push
test
jmp
mov
xchg
andnps
adc
dec
pop
fsubl
mov
outsl
push
ds
out
xor
dec
cmp
outsb
inc
lahf
push
sbb
cmp
ljmp
jmp
outsb
and
lds
pop
mov
sbb
aas
adc
test
scas
push
pop
xchg
xchg
push
inc
fwait
push
cld
add
daa
dec
xchg
nop
xlat
mov
lahf
or
ss
sbbb
arpl
loopw
push
into
test
xor
insb
add
sbb
cmpsl
inc
xor
sub
movsl
je
inc
jb
xchg
fcmovb
xor
mov
add
sahf
push
std
sbb
stc
pop
sti
and
test
fwait
rol
push
ljmp
repnz
xor
insl
push
dec
xchg
ss
fs
mov
lods
jge
mov
sub
cltd
jge
notb
mov
fdiv
sbb
add
out
test
dec
sub
lcall
jp
je
pop
push
push
movsl
inc
je
iret
adc
outsb
adc
frstor
into
outsb
pop
dec
or
lahf
or
lea
sbb
mov
xchg
fsubs
inc
in
push
je
and
mov
dec
ss
stos
cmpsl
mov
xchg
insl
scas
mov
rcrl
clc
add
dec
xchg
js
jb
fs
inc
and
mov
adc
fildl
or
jecxz
sahf
mov
ja
cmc
jle
xor
out
inc
in
inc
xorb
add
lods
xor
outsl
lock
lea
sahf
mov
cmpsb
jmp
adc
mov
mov
insl
cmpsl
cmp
cmp
fldcw
mov
jle
fstpt
push
xor
jo
mov
cmp
mov
adc
pop
xor
cmpsb
out
inc
sbb
push
and
cwtl
cld
xor
div
loope
xor
push
push
sbb
lea
mov
std
subl
fstps
bnd
and
stc
addr16
push
pop
push
cltd
stos
sbb
lock
sbb
add
scas
stos
cld
popa
or
orb
cli
fsubrl
push
adcl
shr
js
bound
xchg
jmp
xor
outsb
addl
mov
cli
popa
ljmp
out
ds
xchg
inc
xor
or
jbe
out
out
xchg
adc
stos
or
xlat
test
out
mov
sbb
cmp
js
cmc
mov
lock
jp
add
outsl
dec
repnz
lods
addr16
push
mov
push
fst
gs
daa
xchg
sbb
lock
stos
andb
lret
cld
mov
cwtl
test
dec
sub
or
cltd
aaa
mov
loop
and
je
addr16
repnz
scas
insl
loope
loopne
icebp
nop
out
test
fcomps
loopne
mov
sarb
je
or
ss
and
fldenv
je
mov
add
pop
mov
out
sub
mov
sbb
sbbb
push
addr16
push
cs
mov
dec
nop
ss
sahf
inc
iret
or
and
jg
aaa
rorb
mov
sub
lret
add
arpl
push
mov
mov
xchg
mov
std
lahf
inc
lods
and
fstps
lret
dec
cmp
adc
cmpsb
repz
jecxz
stc
ret
or
loopne
call
lret
mov
sbb
inc
orl
popa
mov
or
adc
aas
pusha
clc
es
cmp
ret
pop
imul
xchg
sbb
movsb
loope
popf
adc
popf
add
mov
in
movsl
aam
in
cmp
aam
push
mov
addb
jl
push
pop
inc
mov
pop
cmp
inc
jbe
mov
sbb
lret
sub
dec
ret
adc
test
sbb
dec
aad
or
pop
imulb
dec
rcll
or
add
push
cltd
mov
stos
fisubs
insl
loop
add
fmull
repnz
out
nop
test
xchg
into
and
and
dec
dec
js
lock
cmp
sbb
cltd
lahf
mov
add
ja
mov
daa
rorb
inc
jp
sbb
dec
mov
jle
or
inc
and
cwtl
rcrl
sub
push
push
and
jae
push
dec
or
jmp
sahf
divl
cmp
mov
mov
ja
ss
js
test
xlat
mov
int
mov
or
insl
stos
push
cmc
es
xchg
sub
dec
push
sbb
lret
add
push
xchg
sub
pop
xchg
ljmp
pop
and
sub
pop
aaa
adc
fmuls
push
jne
dec
xchg
or
mov
les
or
enter
out
lcall
fs
ret
fstps
sahf
push
iret
mov
mov
cld
jle
or
lret
icebp
movsl
data16
das
repz
push
dec
cwtl
cmp
jne
repnz
in
insl
jnp
dec
mov
jne
aam
daa
sub
daa
and
push
nop
and
js
jmp
stos
ret
fnsave
pop
xchg
les
push
movsl
iret
mov
lret
xchg
je
and
lcall
inc
idivl
ljmp
inc
sbb
adc
sub
push
inc
adc
mov
ret
sub
mov
movsl
ljmp
or
addl
pop
jle
aaa
push
jmp
xor
dec
adc
pop
sbb
add
lods
ljmp
ss
fwait
xlat
addr16
fidivrs
jp
jno
dec
in
cmp
stc
out
lock
cs
inc
mov
mov
or
sbb
insb
inc
push
cmp
mov
cs
cli
lret
jne
and
clc
mov
addr16
cmp
sub
repz
mov
fs
push
sub
inc
outsb
mov
pop
mov
rol
sarb
xchg
inc
iret
mov
or
mov
sbb
xlat
ja
pop
mov
mov
adc
add
sbb
xorl
outsl
movsl
xchg
mov
pop
mov
pop
mov
mov
movsb
pushf
scas
pop
dec
lahf
push
cmc
clc
insb
ficompl
xor
mov
xchg
test
xchg
ss
imul
mov
and
pop
push
loopne
sub
dec
xchg
cmpsl
popa
aaa
xchg
std
scas
and
xchg
pop
mov
pand
xor
jns
and
pop
or
adc
or
cmp
inc
xor
xchg
pop
mov
push
adc
xlat
jo
jle
je
pop
stos
xor
loope
pushf
jbe
test
adc
cmpsl
test
mov
mov
mulb
mov
inc
outsb
rcll
test
jge
test
andb
test
sarb
mov
sahf
imul
insb
hlt
mov
iret
fnstcw
xchg
icebp
rcl
or
jmp
add
cmp
pop
add
rol
inc
lcall
sub
aaa
cmpsl
xchg
pop
and
testl
xchg
jp
mov
icebp
lods
je
or
out
pop
mov
pop
imul
xor
mov
dec
cmp
adcb
cmp
add
push
mov
outsb
sub
aad
iret
inc
sub
pop
push
mov
xor
and
int
sub
test
jno
ret
mov
jne
mov
sbb
imulb
and
mov
xlat
inc
hlt
adc
adc
rcll
in
not
jns
fwait
shll
arpl
pop
cmpsl
arpl
and
out
movsl
test
mov
mov
cmp
xchg
adc
lcall
call
je
mov
pop
fstpt
cwtl
mov
fistpl
adc
ds
je
insb
push
sbb
push
push
pushf
xor
daa
cmpsb
mov
loop
or
add
mov
pop
pop
mov
inc
fistps
orb
jnp
dec
inc
repnz
sarb
bnd
test
stos
pop
insl
xor
lds
and
leave
xor
loope
and
xchg
loope
stos
mov
icebp
sub
les
mov
or
pop
imul
sub
dec
inc
xchg
movsl
or
mov
jo
lret
push
loopne
sbb
int
gs
push
mov
push
jae
fistpl
lahf
ja
call
cmpsl
adc
xor
les
jge
xchg
repnz
mov
sbb
bound
cmp
pushf
or
and
mov
jge
jmp
shl
outsl
movsl
and
and
mov
mov
ss
sahf
lods
cmpsb
fwait
push
xchg
negl
sbb
xor
aad
cli
xchg
xchg
mov
xchg
push
bound
jg
cmp
inc
cmc
sbb
cmc
addr16
and
fnsave
jbe
daa
xchg
mov
notl
ret
push
aaa
es
out
xlat
and
pop
call
les
sub
test
inc
stos
sub
pop
repz
mov
push
imul
insl
cmpsb
xor
add
icebp
fs
adc
dec
enter
push
sub
out
jl
cmp
jmp
ror
ss
and
into
push
sub
jae
mov
pushl
add
push
xor
shl
sub
or
iret
push
adcb
jnp
mov
jmp
mov
xor
pushf
aas
hlt
mov
sub
push
imul
or
or
cmp
fxch
mov
aad
add
mov
push
jae
ja
call
std
jp
push
lock
stc
sub
and
std
adc
adc
lods
cli
loop
dec
out
int
or
mov
sti
mov
clc
and
ja
sub
and
call
mov
pusha
stos
scas
out
movsl
arpl
xor
sub
es
mov
ret
lahf
stc
jbe
stc
call
mov
scas
cld
cmp
jge
inc
lods
adc
sahf
repnz
xchg
stc
fwait
push
sub
ja
jge
pop
sub
pop
push
fstpl
pusha
or
jge
aam
cmp
fstl
xorb
dec
imul
or
shlb
lret
jl
imul
sahf
dec
cvtps2pd
mov
mov
xchg
pushf
insb
xchg
or
adc
movsl
test
jmp
adc
inc
cmp
adc
sub
js
mov
loopnew
jae
jno
pop
fisubl
pop
leave
je
xchg
ret
sub
jae
xor
mov
loopne
roll
mov
sub
or
pop
sbb
loopne
or
or
scas
loop
stos
dec
add
and
or
gs
pusha
cmpsl
test
push
pop
or
mov
shl
fdivs
inc
mov
aas
loopne
stc
dec
cmpsb
jae
stc
mov
hlt
mov
sbb
and
cmp
xchg
sbb
adc
mov
aam
dec
adc
js
pop
mov
stos
fstpl
mov
int3
ret
mov
std
xchg
stc
pop
daa
inc
sbb
ss
ss
stos
push
mov
loopne
in
pop
or
nop
sti
jne
adcl
jmp
or
xchg
cmp
ret
dec
mov
flds
fisubrl
xchg
sub
icebp
sub
imul
cmp
stc
dec
lea
mov
and
push
jb
push
and
mov
dec
cmp
sub
mov
nop
sub
and
in
jl
int
sti
add
lret
push
cld
mov
mov
pushf
cld
mov
into
sbb
jp
inc
popf
xlat
dec
xchg
icebp
mov
inc
xor
dec
xchg
in
nop
jg
pop
push
inc
mov
jb
fnstcw
leave
and
xchg
mov
jnp
popa
stc
jg
sub
inc
push
pop
fldt
sarb
fs
mov
push
mov
inc
sub
pop
pop
std
mov
mov
xchg
add
cmc
andl
mov
mov
and
orl
incl
adc
fidivrs
mov
xlat
pop
test
arpl
lahf
stos
lds
inc
xchg
push
bound
mov
inc
adc
fnstcw
ljmp
test
lods
ret
sub
jmp
shl
popf
dec
mov
or
sahf
push
aam
xor
cmp
cmp
push
pop
push
movsb
repz
mov
test
lea
mov
sub
mov
lock
mov
leave
push
mov
aas
fists
pop
fidivs
pop
cwtl
loopne
mov
shl
test
inc
imul
dec
into
outsl
jbe
jge
shlb
xor
sti
push
call
mov
or
pop
fsubl
shrl
inc
jb
shr
and
fcompl
data16
fdivrs
cmpsb
cmp
mov
push
inc
mov
fldl
jae
fcoml
pop
lods
pushl
insl
loopne
dec
les
adc
imul
sub
ret
ss
jge
add
cmp
mov
inc
cmp
jl
mov
push
dec
clc
sub
sub
nop
lods
pop
and
xchg
testl
or
mov
mov
dec
or
mov
out
mov
or
xchg
lods
addr16
sub
test
mov
add
lods
push
jge
sbb
add
push
inc
ds
sbb
jno
jbe
mov
sbb
dec
add
lcall
sub
xor
fcompl
insl
leave
popa
jl
loopne
and
and
test
ret
and
fcomip
mov
xor
jno
std
xor
lea
mov
push
notl
stos
cmp
js
jl
push
mov
pop
je
int3
cld
pusha
fwait
add
adc
js
cmpl
or
icebp
mov
scas
jge
dec
push
mov
cld
sub
daa
xchg
sbb
push
pop
xchg
xchg
std
sub
aad
iret
sbb
and
je
out
inc
xchg
sbb
lahf
ret
sub
xor
push
cmp
dec
in
dec
pop
xorl
lds
lock
xchg
mov
adc
mov
outsl
inc
flds
and
mov
sti
aas
jmp
dec
ret
js
clc
cmp
fsubp
cmp
repnz
cmp
movl
sbb
mov
imul
in
fs
sarl
cld
call
add
je
shlb
mov
in
adc
jae
addb
inc
test
sahf
pushf
xor
pop
rcll
ret
ret
dec
incl
push
mov
arpl
sbb
add
adc
or
and
mov
popf
or
sub
mov
pop
mov
popf
nop
dec
add
jbe
push
and
leave
sarl
push
int3
push
push
ss
push
incl
ret
push
inc
mov
mov
mov
add
std
out
xlat
ds
iret
imul
mov
out
add
sub
out
and
vpsrlw
mov
xor
lods
sub
xor
call
xchg
lods
mov
adc
jns
popf
mov
ret
lea
call
sti
sub
mov
lahf
dec
lods
sub
mov
sti
and
jbe
aaa
jg
out
jne
and
loopne
out
mov
mov
push
push
pop
cwtl
sbb
icebp
lods
pop
out
and
mov
mov
mov
inc
test
cmpsb
dec
push
xor
fnsave
in
sub
mov
push
je
xor
test
idivb
loopne
and
add
push
pop
xor
daa
add
sbb
hlt
mov
pop
inc
ret
jecxz
sbb
push
sbb
xchg
or
loop
mov
xchg
mov
insb
mov
movl
lret
dec
push
lods
mov
xlat
rcl
cmp
in
sbb
mov
fldt
and
adc
or
xchg
scas
mov
movsb
xchg
pop
lret
mov
cltd
shll
mov
repz
shl
jle
ljmp
sub
sub
cmp
repnz
std
popf
cmp
shlb
push
lods
mov
mov
jmp
fst
les
dec
fsubl
out
mov
cmp
orb
test
repz
call
ret
call
addl
ja
xchg
icebp
out
test
loopne
out
push
outsb
pop
or
xor
cmp
sub
sbb
lock
jg
std
mov
out
rolb
xchg
push
sbb
sahf
fiaddl
pop
nop
loopne
sbb
cli
out
add
loope
and
mov
js
add
inc
dec
push
and
dec
mov
mov
xor
inc
xchg
cmp
xchg
sub
icebp
cwtl
shl
mov
repnz
insb
push
add
mov
test
loope
dec
fstp
stos
mov
jnp
call
add
dec
shl
es
stc
outsb
repz
stos
inc
ljmp
scas
adc
neg
mov
inc
cs
or
ret
or
mov
pusha
or
es
inc
or
repz
adc
clc
push
adc
push
in
xchg
insb
mov
test
xor
fldt
bound
imul
insb
je
mov
xchg
sbb
xlat
jnp
xor
jne
add
sub
xor
xchg
and
push
add
push
xlat
mov
sub
das
xchg
jb
cltd
mov
cmpsb
mov
jecxz
lea
inc
lods
xchg
xchg
loop
imul
pushf
test
stos
les
repnz
mov
push
clc
popf
iret
stos
jge
cli
movsl
mov
mov
sbb
les
push
jb
fsubrl
push
aaa
adc
stos
sub
es
stc
pop
out
jbe
lock
mov
jge
lock
into
in
std
sarb
dec
jne
andl
enter
ret
or
sti
lea
mov
pop
pop
cltd
inc
sub
adc
adc
sub
sub
xor
mov
das
pop
dec
xchg
xchg
adc
cmp
addr16
pop
les
subb
dec
cmpl
loope
cmp
mov
jns
rcrb
and
rorl
js
out
loope
mov
and
jmp
nop
jnp
lret
dec
inc
xor
inc
dec
or
ret
nop
es
in
mov
scas
xchg
mov
ljmp
mov
in
or
pop
inc
cmpsb
dec
clc
cmp
mov
nop
mov
stos
sbb
out
fistl
movsl
cmpsl
lahf
xor
push
outsl
sbb
jl
pop
shlb
call
push
fbld
sar
xchg
lods
mov
adc
outsb
or
push
insb
mov
jo
cli
pushf
testl
jae,pt
lret
cli
or
out
xor
loope
hlt
cmpsl
mov
pop
sbb
mov
daa
movsl
addr16
sahf
cmpsl
fisubrs
jmp
fwait
pop
loopne
fisubrl
aas
mov
aas
sub
int
or
gs
test
int
icebp
test
fdivl
add
pop
and
popa
xchg
std
sub
jns
lret
push
cwtl
jle
sbb
das
pushf
imul
movsb
ret
and
sub
cmc
or
addr16
cltd
ret
mov
add
jle
arpl
out
and
call
in
dec
pop
push
dec
mov
pop
push
jnp
xor
mov
cltd
adc
movsl
jae
pop
pop
aam
cmp
rcl
mov
ds
loope
mov
dec
mov
xchg
xchg
daa
xchg
add
shrl
fisttpll
scas
std
test
andb
lcall
mov
lret
test
xchg
or
xchg
pop
mov
lods
mov
lock
pop
iret
insb
or
lret
inc
cmp
mov
iret
adc
xchg
mov
adc
les
out
iret
sub
mov
add
xor
mov
out
iret
sub
push
jne
and
data16
test
inc
cs
and
rorb
imul
cwtl
inc
jl
bsr
data16
mov
fsubrl
shlb
or
xor
rcll
into
jge
add
fistpll
pusha
or
mov
clc
loope
pop
sub
adc
jo
fwait
cli
xchg
shlb
rol
inc
mov
dec
xchg
jno
arpl
in
mov
push
cltd
shrb
ss
fistl
insl
addr16
jno
add
dec
jne
repz
loopne
push
loopne
lods
mov
xor
jb
cmc
jmp
stc
mov
in
nop
cli
aas
movsb
xor
push
addr16
in
daa
mov
outsb
xorl
lret
sub
xor
inc
xchg
mov
ror
mov
sbb
imul
orl
pop
xchg
or
ficoml
xor
xlat
jo
ret
jbe
into
push
or
and
clc
sahf
in
iret
pop
test
sub
inc
aam
adc
push
mov
inc
mov
stos
int3
push
pop
gs
aad
repz
push
mov
hlt
mov
test
and
sbb
cmc
ds
mov
mov
addl
ja
pop
mov
je
mov
mov
lds
popf
xor
lock
push
sbb
shl
ljmp
xchg
fiadds
lret
dec
in
and
sti
push
inc
push
or
mov
iret
cltd
scas
push
shlb
cmp
arpl
leave
xor
pop
inc
pusha
fidivrs
outsl
subb
pop
sub
notb
jmp
js
orl
or
xchg
mov
mov
pop
ja
loop
mov
inc
rolb
mov
gs
scas
out
pop
or
lahf
iret
and
daa
adc
enter
lods
rcrb
dec
inc
repz
movsl
std
out
mov
and
mov
pop
std
sbb
jae
lock
jno
jo
mov
aaa
dec
jo
adc
shl
repz
sbb
insb
mov
sub
loop
cmp
shll
cmp
hlt
sub
mov
mov
push
sub
mov
xlat
jae
and
call
mov
int
es
mov
mov
or
add
sbb
outsb
jae
shll
mov
cld
sub
dec
stc
shlb
inc
pop
sub
jecxz
test
clc
inc
jno
mov
xchg
aaa
insb
jne
mov
pop
inc
pop
and
lods
mov
aam
in
and
or
sub
out
push
ja
in
inc
out
inc
and
scas
xchg
xor
insl
mov
xor
jae
orb
bound
xor
int
int
pop
sti
in
or
stos
inc
cmpsb
jnp
mov
inc
sbb
push
xor
adc
pop
ret
xor
sbb
cld
iret
sahf
add
mov
in
clc
or
mov
or
in
xchg
mov
pop
sbb
popl
cli
fstpt
icebp
je
adc
mov
adc
xchg
lret
adc
hlt
dec
inc
rsm
sub
push
pop
pop
push
hlt
mov
add
sub
cmp
movsb
lea
pop
int3
out
sub
out
movsl
or
mov
faddl
sbb
sub
iret
inc
dec
pop
fs
pop
push
adc
fwait
jae
sbb
mul
adc
push
fcmovnb
dec
mov
mov
push
xor
mov
xchg
out
div
div
mov
mov
rcrl
push
out
push
fdecstp
idivb
inc
inc
ss
mov
mov
ja
fildl
cwtd
loop
mov
and
aaa
gs
arpl
addl
repnz
std
or
pop
leave
jo
cwtl
push
add
mov
stos
mov
pushl
insb
or
rcrl
xchg
add
outsb
cli
mov
sbb
pop
lods
jmp
mov
cs
into
push
mov
and
inc
mov
mov
movq
outsl
jecxz
xor
mov
inc
adc
mov
addr16
inc
mov
adc
mov
mov
mov
mov
or
xlat
mov
mov
add
dec
fildl
pushf
cmp
jno
aas
push
mov
imul
enter
dec
push
adc
inc
clc
xor
add
fwait
sub
jge
aas
fwait
sub
loop
fs
scas
jo
xchg
test
jmp
mov
jmp
dec
xchg
add
cmp
hlt
lcall
dec
cmpl
mov
andl
dec
cmp
inc
fwait
pop
imul
or
lcall
adc
cmc
lods
xchg
push
fldt
pushf
pop
mov
mov
arpl
pop
push
xchg
lret
add
mov
repnz
adc
out
jb
mov
jae
add
xchg
ret
div
std
xchg
adc
dec
out
push
jle
test
loope
and
fwait
xor
sub
lahf
imul
sbb
inc
cmpb
in
filds
sbb
xchg
popa
test
lret
add
ljmp
or
fdivrp
add
sub
cwtl
xrelease
mov
fcoms
packssdw
mov
rclb
mov
jl
push
push
icebp
sbb
sub
shrl
test
mov
repz
leave
in
inc
daa
push
movsl
jno
push
pushl
enter
rol
int3
xchg
sti
sub
movsl
rol
mov
imul
mov
xor
dec
mov
push
into
jl
xor
or
sbbl
push
jnp
int
mov
pop
dec
add
cmp
cmp
sbb
loope
aaa
sub
mov
push
mov
ret
push
daa
or
add
mulb
sub
shl
mov
push
enter
inc
les
loopne
ljmp
ret
outsb
orb
or
in
add
lods
adcl
fidivrl
sub
mov
sbb
cmp
pop
in
test
idivb
aas
adc
cmc
je
mov
in
dec
test
xchg
das
daa
les
movntps
sub
sub
test
inc
lret
aas
out
adc
in
loopne
add
fcomp
vmread
xchg
push
into
inc
pop
jno
pop
mov
inc
xchg
pusha
psraw
and
mov
cmp
xchg
push
orb
std
fisttps
mov
outsl
ljmp
fnstcw
bound
mov
push
jne
adc
and
loop
jle
ljmp
fbstp
xor
mov
ss
fmulp
inc
ss
lods
aad
lcall
push
nop
xchg
shlb
xchg
cld
and
ret
mov
movl
xor
sbb
lds
xor
cmp
ds
pop
out
mov
add
cs
adcb
fwait
mov
mov
push
pop
mov
inc
les
sbbl
jnp
enter
mov
je
mov
fistl
lds
loop
iret
xlat
mov
jne
mov
lds
std
push
inc
lods
or
fstpt
cmpsb
loope
iret
xlat
jno
push
sub
xchg
jae
add
add
cmpsl
sbb
mov
insb
sub
mov
nop
sbb
xor
xor
mov
enter
mov
mov
jecxz
jo
cwtl
inc
pop
ds
subb
out
xchg
xchg
and
dec
cmpsl
movsb
lcall
cmc
jns
lahf
popa
dec
and
lret
repz
dec
cmp
movsb
and
dec
fsubr
xchg
cld
fnsetpm(287
aad
ss
lcall
mov
shll
cmp
fcoms
mov
cwtl
cmpsb
and
fidivs
les
or
nop
rcrl
in
mov
mov
lock
pop
pop
popf
cld
call
add
adc
cmpsb
mov
test
fsubs
and
cmp
or
adc
and
inc
xor
adc
pop
ret
fstpl
ja
mov
out
fcmovne
xor
sub
push
lea
outsb
fisubl
mov
xabort
mov
sbb
aad
sbb
mov
push
and
mov
add
test
fidivrl
aaa
fstl
xchg
mov
lgs
test
jno
fimull
dec
mov
xchg
xor
inc
inc
push
xchg
sbb
pop
fistpll
and
pusha
leave
cmc
fadd
sub
lret
xor
mov
ja
dec
dec
in
std
add
hlt
je
hlt
inc
cmp
loop
jge
adc
jnp
fildll
push
ds
das
sbb
push
jmp
addb
inc
jle
ret
add
scas
add
xor
sbbb
mov
enter
loop
popf
adc
jae
lods
or
lods
lea
inc
cmp
fcmovnb
test
mov
and
mov
out
sub
out
call
mov
push
shrb
scas
test
adc
jecxz
pop
cmp
pop
cwtl
pushf
push
out
dec
xchg
aad
xor
cltd
mov
dec
lret
orb
xor
inc
mov
xlat
adc
ret
ds
fs
and
and
mov
adc
adc
push
inc
and
dec
push
rol
mov
fmull
lcall
cmp
movsl
dec
sarb
out
adc
movsl
jbe
mov
cmpb
outsl
insb
and
movl
xchg
adc
inc
cmp
aas
fstp
test
mov
in
mov
mov
js
fldcw
adcl
leave
and
jl
sub
jne
dec
pop
xchg
iret
jb
stc
imul
ljmp
pusha
mov
fidivs
out
popa
xor
cwtl
pop
cmp
in
pop
mov
fbld
clc
hlt
push
adc
mov
mov
cmpsl
aam
mov
test
xor
and
mov
arpl
sub
xchg
fcoms
stc
arpl
mov
outsb
out
in
jo
jbe
ljmp
jg
xor
adc
xchg
pop
mov
mov
add
inc
movq
pop
insb
enter
mov
insl
into
fisttpl
cmpsb
jmp
repnz
shrb
rcrl
xor
mov
mov
pop
sarb
out
or
stos
cltd
sbb
add
aaa
adc
aaa
enter
in
mov
pop
sbb
mov
jge
mov
insb
xor
aaa
add
sbb
adc
inc
je
aam
push
aas
sbb
xchg
shr
and
dec
and
dec
rorl
push
fwait
insl
icebp
mov
mov
test
inc
add
push
push
mov
leave
lods
add
je
pop
pop
fs
fstpt
aam
in
or
inc
or
mov
lods
fmuls
stc
mov
iret
jg
jnp
std
and
dec
fmull
and
aam
test
dec
sbb
in
push
imul
xchg
ss
sahf
push
inc
mov
push
js
mov
pop
scas
inc
cld
fwait
cmpsl
jle
add
test
pushl
jl
push
orl
mov
lret
add
cmp
sbb
sbb
nop
push
push
mov
xor
adc
faddp
mov
inc
mov
push
adc
xchg
adc
sti
ja
xchg
cmc
cs
cmp
sub
mov
inc
and
xchg
pop
imul
adc
push
fldt
push
sbb
scas
dec
fidivrl
fisubl
adc
adc
or
adc
loop
mulb
lods
add
bound
and
inc
lahf
pop
cmp
inc
rolb
pop
rcll
mov
sub
push
or
ss
les
sub
cmpb
pusha
mov
shll
pushf
fwait
jno
jnp
mov
dec
imul
lods
sub
xchg
push
jae
sub
movsb
pop
push
jae
popf
mov
inc
jnp
leave
mov
shll
fmuls
pop
xchg
mov
cmp
cmp
inc
std
inc
into
push
push
or
mov
lea
adc
cli
mov
xor
das
ret
insb
xor
loop
cmp
dec
fnstenv
mov
mov
jge
lret
lea
js
pop
and
lret
add
decl
mov
aas
jl
mov
jo
mov
es
stos
sbb
inc
inc
daa
mov
in
int
sub
xlat
je
pop
sub
lods
add
inc
cmp
in
and
or
or
imul
sahf
mov
jns
das
aas
push
out
es
mov
jp
adc
fidivl
push
sbb
or
imul
mov
jnp
cmp
sahf
xorb
fwait
xchg
cmpsl
int3
sub
push
xlat
sbb
push
fs
stos
enter
aad
scas
or
pop
pop
rolb
and
out
inc
sti
mov
xchg
mov
sbb
stc
adc
jno
xchg
imull
cmp
and
or
mov
test
and
xor
imul
rclb
movsb
and
xchg
xlat
push
cmp
mov
je
push
popa
pop
mov
das
or
mov
js
cmpb
imul
loopne
push
mov
icebp
mov
lahf
adc
jmp
and
or
sub
add
sub
movsb
icebp
pop
lock
loope
add
sub
push
enter
xchg
aas
sbb
iret
push
inc
loope
adc
notb
movsl
test
sahf
cltd
mov
jge
stos
jmp
mov
test
icebp
mov
jo
lahf
ret
push
sti
popfw
ljmp
adc
test
fs
xorl
pop
enter
cmc
jae
jp
mov
and
jae
mov
rorl
sub
add
and
shrl
popf
mov
loopne
sub
pop
pop
push
aaa
out
mov
mov
mov
sub
test
or
ror
cmpsb
popa
xchg
pop
cmc
xchg
xor
out
or
loope
push
scas
cwtl
ljmp
adc
scas
xor
shll
xchg
sbb
clc
pop
sbb
popa
adc
pop
and
push
cmp
stos
jno
lods
idivl
addl
pop
jno
stos
mov
jg
test
xchg
sbb
xchg
jae
mov
ljmp
out
arpl
pop
sbb
sbb
divl
cmp
cwtl
add
jmp
pushf
pusha
xchg
pop
popa
pop
pop
jecxz
jo
int3
in
fdivrl
test
mov
daa
outsl
mov
mov
fsubp
push
dec
mov
and
jg
jge
xor
test
imul
cmp
jge
cltd
push
shll
and
adc
out
cwtl
in
pushf
andb
pushl
inc
or
cli
sbb
xchg
mov
idivb
loope
dec
add
jnp
test
ljmp
fisubrl
cltd
jns
out
fcmovb
mov
jg
loopne
in
jp,pt
data16
dec
scas
add
fs
push
mov
jmp
pop
xchg
mov
fcoms
mov
xchg
cwtl
pop
aaa
mov
out
push
dec
xor
xor
dec
xchg
sub
imul
add
inc
lahf
int3
jb
and
or
and
xchg
mov
ficomps
mov
stos
cmp
xor
add
in
ficoms
cmp
push
inc
decl
clc
cs
or
mov
lods
sbb
xor
lds
pop
rorl
fcmovu
dec
pop
pop
scas
fmuls
addr16
mov
dec
shrl
outsl
outsl
xor
jp
insb
cmpsl
push
jmp
lea
cltd
push
push
inc
ljmp
fmull
in
xchg
aaa
sbb
mov
xorl
cmc
mov
lods
ret
mov
fsubrl
paddsb
jecxz
lds
dec
enter
xchg
popa
mov
clc
aam
push
push
sub
jnp
in
rolb
mov
and
cld
inc
and
ret
or
mov
lock
int
es
out
and
or
mov
cmp
repz
test
imul
popf
shrb
sub
je
ja
push
push
mov
push
je
int
adc
scas
adc
pop
fs
icebp
mov
insl
mov
jne
xchg
adc
dec
int
adc
xor
cmp
mov
or
test
sbb
or
shll
fldt
xor
sub
push
mov
mov
xchg
pop
add
mov
dec
data16
popl
popa
mov
inc
in
pop
pop
fmuls
popa
pusha
pop
or
fidivs
sub
outsl
popf
rclb
rcrl
xor
pop
leave
insb
insb
and
popf
fistpl
inc
mov
sbb
jecxz
je
jp
mov
push
mov
jno
fistpll
hlt
std
movsl
fs
add
test
add
mov
mov
and
mov
push
xchg
cltd
stos
in
adc
xchg
sbb
lcall
fildl
mov
add
jge
mov
dec
adc
mov
xchg
loopne
orl
out
dec
sahf
cmpsl
inc
mov
cmp
adcb
fldl
xchg
int
addr16
jmp
icebp
rcrl
cmp
pop
push
outsl
scas
xchg
add
out
jne
cltd
leave
dec
test
mov
ljmp
aaa
push
rorb
inc
ds
ljmp
cltd
or
sub
xor
mov
inc
loop
jle
lret
inc
mov
shlb
dec
lahf
push
inc
cmp
int
sub
jge
mov
or
mov
mov
add
fwait
hlt
mov
and
pop
xchg
cwtl
or
inc
sub
pop
push
ss
push
push
outsb
cli
dec
mov
add
fdivrl
and
push
pop
icebp
sub
stc
mov
mov
cmpsl
xor
addl
fs
notb
rcrl
push
stos
push
xorl
repz
cmc
inc
rcrb
mov
xchg
sbb
pop
mov
fcmovu
nop
inc
mov
call
in
mov
lcall
inc
jo
mov
xor
out
cwtl
push
sbb
rorb
dec
int
popl
adc
inc
subb
push
jecxz
stos
pusha
xchg
subl
les
stos
push
jle
bound
movsl
xchg
add
sbb
je
jb
pop
inc
sub
dec
jo
mov
jne
mov
and
stos
jb
out
jmp
stos
mov
ja
lds
jmp
rolb
and
sub
or
movsb
imul
inc
orb
jbe
xor
enter
mov
ja,pt
and
dec
lea
movsb
mov
adc
push
add
dec
js
xor
test
mov
xchg
loopne
xor
dec
je
dec
imulb
pushf
outsl
cmp
cmpsb
ja
ss
and
das
out
enter
mov
and
inc
mov
int3
pop
or
icebp
xor
fs
and
clc
sbb
sub
shlb
adc
fsubl
test
dec
mov
mov
popf
scas
addl
mov
je
movsl
loop
adc
add
subl
out
adc
out
xchg
xchg
les
and
sahf
pop
mov
jmp
pop
jp
adc
movsb
lret
in
sbb
pop
xchg
cwtl
mov
dec
jle
xor
stos
and
popf
es
mov
adc
push
add
ljmp
sbb
adc
test
lahf
mov
xor
negl
mov
fwait
cmpsl
ret
xor
cmpl
outsl
mov
gs
sbb
iret
cmp
nop
jae
inc
lods
jmp
test
cld
daa
andb
pop
fwait
sbb
jns
push
in
mov
fdiv
pop
in
dec
mov
sub
das
cmpsl
add
lahf
fdivrl
lea
push
sbb
pop
pop
mov
pop
xchg
xor
mov
xchg
jno
adc
mov
test
adc
jo
mov
or
fwait
inc
push
scas
sti
adcb
lahf
dec
jbe
jp
mov
pop
jmp
inc
push
xor
lret
fnstenv
mov
mov
iret
les
adc
loope
icebp
fisttpll
fbld
fists
add
dec
xchg
in
rorl
cmp
and
ret
inc
mov
std
stos
inc
sbb
iret
dec
mov
fs
into
push
incl
lret
mov
mov
lods
repz
cld
iret
nop
jmp
pop
xorl
imul
notb
inc
lods
lds
push
lret
adc
fstps
out
test
popa
inc
inc
sbb
jmp
cs
mov
mov
shll
xor
xadd
pop
sbb
adc
push
int3
add
sub
and
and
ret
dec
sub
mov
aas
adc
cmp
cmp
sub
dec
in
pop
pop
loopne
imul
adc
jne
pop
pop
test
scas
jns
inc
inc
ljmp
dec
insl
mov
add
mov
cmp
ret
xor
into
sti
add
imul
popa
or
shlb
adc
adc
push
push
out
mov
dec
leave
rorb
sarb
loope
int
lods
enter
pop
bound
xchg
cmp
sti
add
jo
mov
mov
mov
cli
jecxz
push
dec
mov
in
push
push
adc
int
jl
push
add
or
ret
cmp
out
add
and
lods
outsb
out
cmp
add
in
sbbl
xor
incb
hlt
cmp
popf
mov
xchg
jle
arpl
push
lret
outsb
mulb
lret
cmc
mov
ficoml
add
jns
jle
xor
inc
add
push
mov
repz
inc
sti
push
adc
mov
push
and
cmp
subb
ret
jl
leave
rcrl
pop
fcmovbe
jo
dec
cli
loope
roll
iret
int
inc
nop
aad
mov
fistps
std
mov
cmp
xor
in
aaa
lret
pop
mov
lret
clc
sub
mov
pop
dec
and
cmp
push
mov
insb
bound
sbb
lret
add
out
pop
pop
or
mov
pop
pop
movsl
lret
test
imul
lret
call
cmc
cltd
loope
iret
inc
push
sahf
pop
loope
adc
mov
add
jns
xor
pop
rcrb
push
cmp
mov
push
sub
in
sbb
data16
mov
fildll
jecxz
mov
xchg
xlat
enter
imul
mov
cmp
pop
mov
mov
pusha
add
push
loop
push
arpl
fs
lcall
loop
icebp
ficompl
shlb
out
inc
mov
sub
cmpsl
push
lea
jle
mov
nop
leave
or
aam
mov
jge
inc
loope
mov
sub
mov
jge
insl
psubsb
inc
add
mov
cltd
andb
flds
jae
push
stos
out
xor
lds
addl
outsl
dec
sbb
loope
fwait
loope
cltd
icebp
jb
lds
incl
inc
dec
push
pop
std
orb
push
or
mov
scas
and
cmp
outsl
clc
mov
rol
cmp
mov
sahf
sub
hlt
loop
dec
mov
mov
and
cmc
pusha
mov
dec
push
or
jb
jmp
mov
fldl
mov
or
mov
lock
loopne
adc
mov
insb
mov
mov
nop
scas
outsl
add
ss
pop
mov
pop
aam
lahf
and
scas
and
push
cmp
pop
and
es
das
aad
fst
or
cmpsl
jb
jmp
rolb
and
dec
push
test
negb
lock
mov
xchg
call
push
jbe
sti
mov
scas
cli
fs
inc
sahf
popa
shlb
fwait
cmp
cmp
or
sbb
fdivr
push
pop
repz
sti
or
add
jae
test
lret
mov
fists
mov
test
pop
movsl
enter
xor
push
and
rcll
cli
aas
jne
add
adcl
popf
push
xor
xchg
jg
inc
scas
shlb
inc
or
mov
bound
xchg
sub
hlt
aas
lahf
and
push
fsubl
inc
scas
adc
int
int3
gs
sub
not
stc
jae
mov
cli
shl
loopne
scas
daa
mov
scas
mov
ficomps
sarl
pop
jl
xor
sbb
cltd
cmp
sbbb
xor
rolb
mov
and
mov
dec
rcll
mov
popa
call
or
loopne
sbb
jecxz
outsb
cwtl
sbb
and
gs
or
aam
cmpsl
push
adc
pop
scas
out
cmp
pop
mov
sub
mov
test
out
or
js
push
pop
add
icebp
icebp
aaa
loop
sub
insl
inc
rcl
shll
adc
bound
shll
aad
xchg
xor
into
xor
add
mov
xor
rcrb
push
add
sub
jge
sbb
mull
cmp
mov
cmp
xchg
fs
andl
cmpl
ljmp
mov
pop
pop
into
lods
ja
nop
addr16
clc
xchg
cmp
clc
xchg
repz
cmp
push
test
pop
mov
stos
push
lcall
dec
leave
in
out
push
mov
inc
jnp,pn
addl
stc
jle
sbb
xchg
cmp
negl
dec
inc
nop
sub
add
push
push
xchg
enter
mov
dec
pop
fwait
adc
fidivs
enter
ret
inc
jp
jbe
push
or
sbb
ljmp
outsb
mov
mov
mov
add
mov
hlt
and
dec
pop
adc
lods
xlat
dec
or
or
lcall
xchg
dec
lock
sti
dec
push
mov
sbb
jbe
int
idivl
xor
sub
sbb
mov
icebp
inc
repnz
loopne
fcoml
mov
adc
int
pop
clc
mov
out
sub
mov
cmp
mov
adc
es
test
into
pop
dec
in
and
rorb
mov
xor
jmp
scas
lods
inc
fcomps
cmpsl
out
and
repz
mov
cli
js
incl
jne
pushf
ret
lock
inc
sub
or
push
fidivrl
test
mov
in
xchg
fisubrs
sub
pop
dec
lahf
dec
jnp
add
sbb
std
mov
pop
fwait
sbb
mov
aas
pop
cwtl
jno
xor
sbb
fbstp
pop
repz
adc
jg
sarl
cld
mov
inc
pushl
mov
fdivs
xchg
into
es
lods
adc
and
adc
and
mov
adc
sub
and
test
cwtl
add
or
jge
mov
push
sti
dec
cmp
lods
imul
repnz
cmp
mov
cmp
fisubs
push
mov
push
dec
js
pushf
sbb
fisttpl
mov
test
push
sub
cmpsb
add
daa
xchg
fsub
pop
pusha
js
adc
adc
mov
test
mov
in
and
mov
or
mov
pop
add
adc
mov
mov
or
cmp
jae
popw
out
pop
and
fidivl
mov
mov
add
and
cmp
dec
adc
push
aaa
cmp
xchg
and
ja
shrb
pop
fcoml
leave
push
gs
sahf
mov
in
adc
bnd
adc
loope
mov
into
cmp
repz
adc
out
call
js
out
jmp
push
scas
test
out
jnp
dec
into
add
pop
jne
xchg
mov
sub
out
or
leave
fmuls
cltd
adc
pop
aas
daa
push
mov
popf
in
sub
aad
dec
addb
cli
mov
sti
or
pop
stos
out
into
mov
pop
orl
mov
filds
nop
lods
repz
ret
pop
fcoms
cwtl
pop
xchg
pop
pop
jb
cmp
call
dec
aad
pop
lods
shll
shl
enter
cmp
mov
xchg
mov
lock
hlt
add
inc
and
sbb
test
dec
xchg
push
cld
ds
sub
xchg
int
in
adc
rcll
bound
arpl
mov
pop
push
mov
cmp
mov
lock
jns
in
jno
mov
in
xor
mov
out
out
push
lret
adc
jb
movsl
pop
xchg
cmc
enter
push
outsb
inc
xchg
push
add
mov
mov
fsubs
das
adc
push
sarb
out
push
inc
dec
addr16
nop
fistpll
movsl
pop
js
mov
out
mov
addl
loop
xchg
lock
mov
mov
lahf
push
in
sbbb
push
movsl
push
test
adcb
xchg
sub
sub
mov
pop
or
add
sbb
lods
dec
mov
ljmp
cmp
push
xchg
xchg
cmp
mov
gs
adc
mov
test
fcomps
loopne
jno
addb
test
repnz
test
pusha
mov
andl
push
rcrb
loopne
push
sbb
mov
out
inc
cmp
call
jo
mov
pop
fmuls
jge
xchg
cmp
ss
add
or
incb
out
xor
pop
mov
pop
enter
filds
dec
loopne
jns
outsl
jl
ja
sub
or
xlat
push
cmpsl
push
or
dec
add
leave
sub
addr16
xchg
jo
lret
and
pop
adc
xor
dec
mov
fwait
popf
cmp
mov
fldcw
movsb
cmpb
into
fistpll
inc
mov
mov
mov
test
inc
mov
sub
mov
stc
cld
lahf
push
fld
jb
stos
daa
divps
jge
setb
sbb
dec
add
in
mov
and
sub
pop
inc
mov
int3
or
movsl
pop
push
xchg
rol
popf
sbb
lods
rcr
lcall
push
pop
stos
mov
mov
fcmovb
push
cs
mov
and
test
nop
sub
and
xchg
push
pusha
and
xor
repz
std
sti
add
loopne
aam
rolb
xchg
jp
or
sti
testb
add
bound
pusha
stos
and
out
inc
aaa
les
xor
js
es
cmp
pushf
pop
fsubl
push
insb
fwait
stos
fldenv
stos
bound
nop
jecxz
imul
pop
ljmp
add
int
jae
jmp
dec
cwtl
outsb
inc
or
sbb
xor
mov
mov
cli
add
and
std
jne
test
rorb
jb
pop
out
xchg
in
filds
jp
rcr
mov
xor
pop
xorl
jae
gs
rorb
leave
lahf
adc
jbe
jnp
loopne
mov
mov
dec
mov
mov
arpl
xor
dec
push
scas
xor
xor
stos
lock
sbb
add
or
mov
adc
dec
jmp
int3
mov
lret
add
xchg
lods
ds
xor
push
lret
xor
jl
mov
ja
xor
loopne
std
xor
shr
enter
mov
dec
fisttps
out
inc
loope
pop
or
mov
mov
mov
gs
add
add
xchg
sahf
lock
sbb
out
mov
ficomps
jge
insb
fwait
sbbl
int3
mov
cld
data16
xchg
gs
ja
sub
cmpsb
dec
int3
pop
xor
xchg
loope
and
jne
popf
sahf
add
xchg
sarb
xchg
add
mov
or
addb
cli
adc
add
aas
lahf
mov
in
jecxz
cmp
xchg
mov
inc
fs
mov
and
cs
in
dec
out
inc
xlat
movsb
mov
or
inc
jecxz
inc
aaa
xchg
add
adc
mov
lcall
xchg
dec
pop
rclb
xchg
and
add
call
pop
jo
cld
sbb
inc
fxch
roll
mov
nop
dec
ror
popf
fdivs
inc
jns
sbb
hlt
jo
adc
pop
xor
rcrb
cld
les
cwtl
push
cmpsb
insl
popf
sbb
test
xchg
jp
cmp
lret
push
mov
jbe
xor
sub
sbb
cld
ds
dec
pop
push
jg
add
inc
ret
repz
and
pop
and
test
test
sbb
inc
xchg
push
mov
das
xor
inc
adcl
add
jg
dec
shrl
inc
add
sub
hlt
sbb
xchg
jge
aad
inc
xchg
sub
or
mov
fwait
loopne
lahf
mov
inc
scas
in
pop
stc
out
and
mov
dec
mov
sarb
shll
xchg
test
int
test
sbb
jg
fidivs
mov
dec
inc
lret
mov
loop
imul
jno
mov
inc
push
lock
sbb
test
cmp
sahf
xchg
leave
xchg
push
mov
jno
jae
sbb
aas
adc
pop
jne
dec
cmpsl
repz
mov
push
pop
cltd
movsb
popf
stos
mov
mov
movsl
add
sub
repz
insl
sbb
or
std
xchg
mov
or
pop
lret
or
icebp
in
xlat
sub
xchg
outsb
mov
jno
xor
pop
add
ds
mov
out
mov
sub
rcrl
out
pop
jmp
jmp
mov
stc
sahf
xor
pop
es
scas
in
hlt
mov
sub
adc
ret
stos
negl
jb
cltd
pusha
repz
xchg
xor
daa
mov
out
pop
cmpsl
clc
mov
jl
jb
cmp
imul
nop
lock
stos
flds
adc
fstpt
sbb
hlt
mov
fnstsw
pusha
test
vlddqu
mov
and
or
mov
aad
out
mov
xor
fistl
sbb
mov
jge
or
jg
scas
stos
leave
cs
ja
aaa
lahf
mov
lods
and
repnz
xchg
jne
push
inc
xchg
mov
or
xchg
imul
cmpsl
adc
es
dec
xchg
push
add
pop
lock
xor
jnp
insb
negl
push
js
ret
sbb
mov
push
sub
jmp
fsub
clc
std
dec
aam
loope
lret
inc
xchg
fs
mov
leave
xchg
mov
sar
pushf
pop
mov
addr16
call
mov
sub
cwtl
cmc
and
lcall
mov
test
cmpsb
cmp
xchg
push
cmp
xchg
ret
aam
push
in
mov
xchg
shl
loop
gs
mov
mov
inc
sub
xchg
adc
shrb
sub
xor
into
xor
enter
xor
sbb
cmp
or
or
pop
inc
inc
dec
inc
mov
cmp
imul
add
ja
pop
and
and
jo
mov
xor
cwtl
icebp
es
and
push
call
icebp
mov
pop
adc
mov
test
movsl
push
sti
in
orl
mov
sarb
ja
xchg
sbb
ret
arpl
mov
mov
out
cmpsl
inc
ds
test
and
test
cmp
xor
fisubrs
xor
sub
xor
jne
pop
popf
loopne
dec
xchg
mulb
aas
push
int3
push
push
add
outsl
pusha
mov
insl
mov
xor
sub
aas
lahf
mov
add
outsl
push
iret
pop
es
ds
xchg
cltd
std
xchg
out
insl
loope
or
xchg
std
mov
fisubl
dec
movsb
addr16
xchg
xor
fidivs
push
lret
add
xlat
mov
xchg
das
sbb
and
add
subl
loope
enter
adc
sbb
dec
mov
pop
adcb
jb
dec
nop
imul
testb
push
hlt
push
mov
repz
adc
cwtl
es
sbb
dec
mov
js
imul
push
int
add
fucom
cmp
clc
pop
mov
fldenv
xchg
push
mov
arpl
sub
cmp
addr16
jne
push
sahf
adc
pop
pop
push
mov
movsl
repnz
adc
lcall
stos
je
dec
fwait
inc
inc
cmpsl
pop
cmp
daa
loope
inc
imul
adc
dec
xor
jecxz
ljmp
fisubrl
je
ror
pop
dec
push
jo
lods
daa
cmpl
ret
out
xor
sub
mov
ret
push
jae
inc
lods
arpl
je
in
je
mov
cmpsb
cld
orl
in
mov
mov
adc
aaa
insb
mov
mov
fwait
jbe
add
or
or
jp
in
inc
movsb
cmpsw
sub
push
repz
xor
sub
andl
mov
movsl
mov
mov
fmuls
shll
aaa
pop
cmp
andb
pushf
call
sbb
hlt
sbb
sub
out
outsb
push
aad
pop
adc
sub
dec
jge
in
ss
jbe
test
out
xchg
sbb
out
push
jge
sbb
int3
mov
mov
mov
mov
ja
sbb
jno
orb
ljmp
push
push
sbb
fldenv
mov
jle
addl
daa
aaa
dec
enter
jno
js
mov
mov
sub
cs
push
jmp
pop
mov
jmp
fildll
xor
int3
fisttps
sarl
push
and
mov
cmp
cld
and
push
sbb
sbb
aad
popa
xor
dec
mov
jae
jge
shll
insb
mov
pop
sarl
inc
push
addr16
dec
dec
leave
push
ret
lcall
arpl
sbb
xor
push
and
jmp
jo
mov
inc
ja
mov
imul
int
cmpsl
xchg
into
sub
mov
or
xor
repz
cwtl
jbe
mov
lods
daa
cmp
xchg
sub
push
xor
subl
pop
lcall
adc
dec
dec
push
add
hlt
idivl
jl
fs
xchg
push
loop
loop
xor
xchg
cli
push
aad
push
outsb
mov
movb
push
push
leave
jno
mov
pop
scas
leave
ror
dec
cli
mov
push
mov
leave
push
out
movsb
cmp
push
adc
mov
cltd
cmp
out
jne
xor
cs
mov
rcll
jl
cmp
fdivrl
dec
dec
dec
adc
ret
outsl
aam
push
jno
popl
and
adc
xchg
inc
add
jle
mov
push
sbb
cmpsl
negl
jl
cmp
aaa
lret
jbe
rorb
rorb
xchg
scas
sbb
adc
push
or
ljmp
push
push
sbbl
ja
add
enter
jle
in
mov
sub
insb
sbb
push
push
test
scas
loopne
inc
and
and
cmp
scas
iret
or
xchg
mov
addl
rclb
pop
and
lods
nop
mov
gs
repnz
mov
adc
fidivrs
inc
fs
sub
mov
mov
fldl
clc
mov
sbb
aas
jle
mov
in
pop
dec
pop
inc
hlt
sbb
les
cltd
mov
in
lods
int
push
xor
inc
fsubp
mov
adc
xchg
in
add
into
insl
leave
mov
and
pop
test
cmc
pop
add
or
jno
iret
out
clc
icebp
xor
mov
pop
mov
in
fwait
xchg
inc
dec
inc
orl
sbb
mov
mov
pop
sbb
xchg
out
insb
and
sub
adc
pop
sub
shll
adc
sbbl
sbb
lret
mov
xchg
out
push
xchg
xor
cmp
xchg
mov
jp
sub
gs
popf
mull
test
repz
outsb
adc
dec
pop
add
add
sbb
rcr
pop
cmc
cmc
test
push
sub
adc
insl
std
jo
push
sbb
dec
mov
into
xor
mov
or
leave
sub
fnsave
cmp
data16
sbbb
xchg
xchg
ds
icebp
adc
shlb
or
adc
mov
outsb
fsqrt
adc
aam
or
lods
mov
cmp
mov
cmp
jp
imul
sarb
hlt
mov
dec
dec
in
mov
cmp
lret
mov
sub
cwtl
bound
loop
andb
or
enter
sbb
adc
sub
pop
jbe
out
orl
cmpl
scas
gs
jne
mov
aaa
mov
dec
fwait
jo
pop
jae
xchg
xor
fdiv
mov
or
push
lret
jecxz
cmp
push
sarb
popa
adc
push
pop
arpl
js
mov
sarb
outsl
inc
mov
push
sti
orb
cmp
leave
adc
test
sbb
pop
jb
les
dec
call
cmp
stos
push
insl
inc
aad
aam
gs
rcr
mov
push
or
test
icebp
ficompl
fucomi
lcall
fildl
pop
jecxz
lcall
je
filds
and
xchg
test
int3
mov
add
inc
dec
mov
cld
or
mov
movsl
xor
ss
xchg
fdivrl
inc
mov
or
fcompp
shlb
stc
cli
stos
sub
mov
inc
adc
push
int3
jle
cmp
in
cmc
push
jg
sub
fstps
shrb
popa
fdivs
sbb
ljmp
xchg
sub
add
or
clts
test
mov
in
inc
or
push
xchg
mov
mov
mov
push
das
hlt
pushf
sti
inc
into
rcll
adc
sbb
jnp
stos
cmp
popa
dec
xchg
and
inc
cmp
pop
xchg
out
std
dec
or
cmpsb
xor
out
js
loope
call
gs
or
cmc
adc
imul
inc
and
adc
pop
xor
int3
and
sarl
aam
pop
sub
loopne
arpl
and
pop
stos
ret
gs
adc
dec
add
stc
insb
iret
push
mov
in
popa
pop
outsb
inc
in
stc
lds
sbb
int3
adc
cli
jge
and
push
xchg
rclb
sub
pop
movl
mov
into
adc
cwtl
sahf
scas
push
jp
insb
jle
jl
fisubrs
xor
jnp
es
in
mov
jne
aas
sub
adc
dec
xchg
pop
cmc
loope
dec
psubd
sbb
clc
cmp
cmpsb
out
mov
fstpl
jmp
into
test
mov
mov
jmp
push
mov
inc
mov
mov
push
popf
jae
dec
xchg
mov
in
jl
mov
dec
xor
repnz
jnp
movsl
adc
repnz
in
mov
pop
push
loop
xor
call
je
lahf
sbb
mov
or
std
loope
lds
je
addr16
dec
pop
movsb
xchg
out
scas
cmp
adc
xor
stos
push
leave
dec
nopl
mov
push
push
xor
push
push
push
movb
jne
dec
rolb
mov
into
test
pusha
pop
pop
jmp
rcrl
xchg
mov
mov
jns
orl
lods
out
in
jecxz
les
bound
sub
mov
cmpsb
leave
jb
lock
cmpsb
cmpb
sbb
add
pop
pop
adc
rcr
adc
sbb
in
aaa
ret
adc
pop
or
aas
leave
mov
cmpl
push
or
add
cmp
mov
inc
fdivr
cmp
out
bound
dec
pop
repz
and
jae
ss
popa
mov
sub
cmpsb
lock
lahf
add
xchg
ljmp
jno
shll
mov
insb
das
mov
jp
enter
cli
and
fldl
inc
cmp
out
cmpsl
out
inc
inc
ret
mov
clc
es
clc
enter
scas
push
pusha
dec
mov
xor
or
xchg
mov
fs
mov
orb
cmp
in
je
xor
sbb
sub
dec
ljmp
adc
or
mov
add
data16
sub
cmp
mov
scas
adc
ds
into
jle
lahf
sbb
or
lahf
dec
pop
sbb
jno
mov
xchg
clc
dec
xchg
mov
jno
inc
and
std
sub
dec
lret
and
adc
cli
mov
out
clc
xorl
xor
push
in
outsl
rcll
ja
sti
xor
adc
dec
in
stos
scas
fwait
xor
imul
inc
pop
out
and
sar
push
js
jo
ljmp
xlat
pop
cmpb
sub
add
mov
dec
jnp
loopne
sar
mov
xchg
mov
push
int
int
mov
adc
mov
mov
cmp
cmp
push
sbb
repnz
aas
arpl
jecxz
movsl
xchg
cli
mov
add
movsb
or
or
mov
fldl
leave
iret
cmp
cmpsb
cli
and
mov
das
sub
dec
call
inc
repnz
popa
inc
cmp
movsb
movsl
add
jmp
mov
dec
ret
push
gs
jbe
pushf
imul
loop
sbb
out
pop
push
lret
outsl
bound
rcl
adc
mov
push
lret
popa
lock
fsts
adc
inc
test
jge
or
cltd
mov
lea
mov
push
dec
pop
rorb
xor
add
rcrb
mov
mov
cmp
mov
push
xor
mov
scas
push
sub
repnz
icebp
adc
pop
cld
repnz
sbb
cmp
lret
jnp
jns
in
mov
sub
shl
bound
mov
mov
inc
jno
popl
push
sub
adc
gs
mov
js
push
popa
sbb
jne
fs
xchg
mov
jge
adc
cmp
decl
lea
sbb
pop
jecxz
flds
add
lret
jge
fldl2e
ret
loop
dec
lods
add
repnz
jecxz
jns
cmpsb
inc
push
cmp
fcmovbe
sub
mov
mov
nop
inc
insl
inc
dec
mov
stos
xchg
push
decb
inc
pushf
jb
pop
lcall
xchg
xchg
jbe
inc
nop
ljmp
sbb
inc
test
stc
sbb
or
dec
xchg
ret
sub
cmp
sub
xchg
movsb
mov
or
clc
outsb
dec
in
outsb
movsl
sti
pop
dec
mov
mov
hlt
mov
imul
pushf
inc
dec
aaa
pop
insb
jae
mov
in
sub
out
push
lods
xor
repz
repnz
and
jno
add
cmp
pop
imul
push
andb
xlat
clc
rorl
xchg
push
pop
mov
repnz
aad
test
icebp
or
add
pop
insb
aam
pop
popl
xchg
and
mov
popa
lods
inc
rcrb
shrb
ds
pop
outsl
jecxz
sub
mov
jmp
popl
mov
adc
les
unpcklps
add
testb
cmp
lret
adc
ficompl
inc
or
pop
pop
popf
lahf
gs
mov
pop
dec
sbb
into
aas
fbstp
mov
jb
push
sbb
clc
sahf
xchg
xorb
push
push
sub
cs
xchg
ljmp
and
dec
cmovs
mov
or
faddp
xlat
gs
or
aaa
jne
pop
mov
pushf
in
jne
mov
arpl
rorl
jns
mov
fucomi
push
int
pop
jmp
inc
inc
sbb
inc
fwait
pop
clc
or
and
ret
mov
mov
pop
and
flds
mov
inc
cld
loop
sahf
lods
inc
mov
jge
pop
mov
adc
sub
mov
pop
clc
test
icebp
fisubl
xchg
fildl
jne
add
repz
lock
pop
xchg
aaa
cmpsl
push
jecxz
int
pop
xchg
fcomps
jge
std
jp
lea
imul
out
push
mov
fs
jmp
fdivl
dec
cmp
orl
aad
adc
push
ja
cwtl
add
dec
add
movsl
or
mov
neg
test
dec
cmp
pop
js
mov
ret
lcall
sub
jns
fimull
sub
push
sub
test
in
jmp
imul
aam
rorl
jo
jp
mov
add
aad
adc
mov
xchg
jae
ret
lcall
mov
pushf
dec
loope
inc
lods
int3
add
and
cltd
sub
xchg
pop
pop
es
loope
push
icebp
cmp
test
test
lods
je
cmpsb
jecxz
fistl
push
sub
nop
pop
repnz
mov
std
imul
nop
mov
sahf
jecxz
jnp
xlat
loop
lret
sub
xchg
movsl
pop
push
jne
add
jb
out
sbb
pop
mov
xor
shrb
push
push
adc
inc
mov
cld
pop
add
mov
xchg
stc
pop
and
inc
push
and
and
mov
neg
adc
add
pushf
pusha
mov
shl
pop
ds
imul
adc
adc
xchg
movsb
dec
pop
movsl
pop
add
int3
mov
and
mov
mov
in
pop
inc
sub
cmp
xchg
push
sub
cli
xor
adc
and
scas
jns
mov
cld
inc
je
dec
mov
js
add
cmp
pop
mov
addb
arpl
jle
mov
sbb
jno
lahf
inc
popf
push
sahf
mov
ja
jae
lods
xchg
pop
mov
addr16
cmp
xchg
jge
leave
scas
inc
pop
xchg
mov
or
push
push
push
inc
insl
decl
jmp
cs
movsb
sahf
fs
fists
sub
repz
pop
sbb
mov
and
push
movsl
clc
mov
dec
sbbl
inc
jp
insb
icebp
js
outsb
mov
inc
lret
loopne
pop
in
mov
scas
xor
ljmp
inc
ja
dec
dec
hlt
cmc
loope
in
fidivl
mov
sub
or
dec
jle
addr16
pop
in
mov
iret
cmp
fistps
in
sub
pop
shlb
sbbb
popa
xchg
sahf
add
mov
add
popf
and
and
inc
shlb
imul
dec
in
fistl
shlb
stos
fs
inc
out
cmp
or
jns
xor
jecxz
jb
fcoml
dec
pop
jo
pop
xchg
jle
cld
xor
stos
sub
jae
push
imul
movsb
xchg
add
pop
mov
mov
jle
dec
sbb
jns
or
mov
mov
call
sub
test
and
mov
subl
mov
cltd
gs
ret
xor
push
mov
mov
xor
enter
pop
stc
fstpt
test
gs
punpckhdq
xlat
push
xchg
lahf
inc
orl
mov
scas
pop
or
dec
xor
movsl
pop
and
cmp
xor
fistl
sti
push
inc
xor
push
sub
mov
sub
pop
fucomp
arpl
imul
pop
push
inc
add
in
push
inc
add
ret
inc
bnd
enter
xchg
pusha
addb
nop
pusha
cmc
inc
mov
cltd
pusha
pop
cmp
jae
or
iret
cmp
pop
xor
stc
mov
or
jmp
pop
inc
leave
sarb
mov
push
leave
pusha
adc
lock
mov
cwtl
mov
jo
imul
sbb
add
jp
xor
sti
scas
xor
mov
add
imul
jb
lock
cmp
sub
cmp
leave
shlb
pop
mov
or
adc
imul
adc
movsb
adc
movsl
cmc
out
cmp
or
dec
negl
mov
js
dec
add
xchg
and
lods
mov
cmp
push
dec
mov
mov
and
inc
lret
mov
jno
adc
push
jmp
and
push
mov
ds
xor
xchg
cltd
test
sti
das
das
xchg
nop
mov
adc
pop
jae
bound
mov
std
jl
int
icebp
push
sub
push
test
or
shl
call
lret
jl
or
xor
push
adc
inc
call
pop
inc
lods
sub
xor
loopne
les
daa
dec
mov
push
pop
nop
rcrb
decl
mov
addr16
sbbl
cld
fimuls
push
jp
cmp
aad
mov
adc
movsb
andb
or
stos
jle
ljmp
cmp
xchg
cmpsb
iret
movsb
jne
stc
jmp
test
pushf
inc
push
sub
add
inc
dec
test
xchg
jno
xor
xor
or
insl
mov
dec
ds
mov
push
push
mov
cmp
fisubrs
daa
jno
mov
imul
jg
insb
data16
insb
cmc
stos
inc
lret
jbe
nop
jbe
mov
jno
adcl
jg
jecxz
ss
bound
cmp
orl
dec
cs
aam
popf
and
jnp
ret
jns
lahf
loope
sbb
pop
mov
fistps
jge
mov
daa
adc
nop
mov
push
pop
push
dec
push
adc
mov
fnsave
and
decl
rcl
fcoml
mov
dec
gs
add
movsl
int
xchg
sarb
jno
daa
pop
and
push
out
xchg
stos
push
jl
daa
and
stc
dec
xchg
xor
addb
fisttpll
mov
fdiv
xchg
mov
movsb
push
mov
mov
push
push
adc
mov
jmp
adcl
faddl
pop
dec
jnp
or
mov
scas
dec
and
imul
mov
mov
pop
icebp
pusha
cwtl
out
pop
xchg
mov
jno
mov
pushf
push
dec
add
ljmp
movsl
sub
nop
negl
inc
jae
gs
push
arpl
sub
cmp
roll
repnz
adc
push
lods
ret
push
and
adc
stos
loopne
scas
ret
icebp
movl
sub
lds
testb
inc
and
ja
mov
and
mov
push
in
jae
add
sti
fs
and
push
fidivs
cmpsb
push
mov
adc
and
mov
bound
ret
call
xor
sarb
sub
shr
hlt
clc
aam
testl
loopne
sbb
push
xacquire
cltd
sarb
mov
sub
ret
or
mov
pop
in
stos
mov
inc
in
pop
fiadds
test
cli
cmp
dec
jo
cmp
mov
repz
jmp
add
fs
sub
loop
test
test
test
mov
scas
test
mul
inc
and
lahf
shlb
subb
pop
pop
push
or
xchg
clc
pop
fsubl
sbb
int
mov
mov
int3
xchg
loopne
mov
mov
mov
add
add
push
das
jmp
sti
sti
adc
mov
jno
sbb
mov
addl
cmpsl
mov
cs
adc
int
xchg
pop
mov
insl
adc
mov
jge
jle
pusha
dec
ja
movsl
icebp
dec
in
mov
sahf
xchg
lea
jmp
aaa
nop
sub
add
out
push
jg
pushf
mov
ficoml
insl
or
mov
jbe
push
and
jnp
cmp
sarl
lea
and
add
leave
mov
notb
mov
sti
add
mov
lea
sbb
loope
push
out
xor
pusha
mov
fisttpl
dec
cmp
movsl
mov
movsl
mov
cmc
addr16
lcall
dec
pop
dec
add
mov
nop
test
sbb
iret
or
dec
mov
lcall
add
push
icebp
mov
or
cmp
movsl
adc
adc
mov
dec
lock
test
dec
in
add
sub
ljmp
dec
mov
add
xor
cmp
push
mov
lahf
pop
dec
cmp
cltd
movsl
dec
popa
notl
jg
mov
dec
out
cmp
and
ja
add
clc
test
pusha
subl
loop
jbe
dec
mov
push
imul
jge
and
pop
ds
arpl
and
or
enter
cmpsb
xlat
jmp
out
icebp
xor
pop
mov
jmp
rclb
fsts
mov
imul
rcrw
repz
xor
dec
out
pop
push
mov
in
lret
sub
daa
pop
and
xchg
div
mov
push
dec
shlb
cmc
jg
into
cmc
lcall
ret
lret
aas
jl
dec
les
sub
inc
popf
dec
xchg
dec
lret
mov
cmp
and
cmp
data16
aas
pop
inc
nop
fnstsw
push
or
mov
pop
add
cltd
pushw
jne
xchg
bound
xor
xchg
insl
inc
fistl
outsb
in
mov
xchg
push
dec
lahf
and
pop
xor
mov
jecxz
cmc
adc
adc
in
inc
sub
xorb
xor
rclb
sub
aaa
mov
int
add
mov
xor
inc
and
inc
mov
insl
jecxz
mov
dec
xchg
xor
rolb
mov
mov
dec
daa
push
pop
jp,pn
pop
mov
cmp
addr16
and
repz
dec
out
andb
jne
lcall
pop
xchg
and
ret
jl
and
xor
jl
daa
je
adc
mov
jno
pop
jge
jmp
or
mov
push
stc
pop
jecxz
orb
and
cltd
sbb
inc
cmp
insb
std
xchg
addr16
aas
repz
divl
mov
pop
test
outsb
jge
sarl
mov
xchg
enter
leave
dec
add
std
inc
fcomps
and
clc
in
fs
adc
jne
xor
sahf
add
pusha
jp
sub
stos
cli
fwait
cmp
stc
ja
jmp
inc
imul
cs
stos
sarl
jno
outsb
pop
nop
ss
jg
lret
push
and
pop
lret
jg
shrb
out
stc
mov
cwtl
stos
ds
push
mov
sbb
mov
and
ret
ret
fnstcw
stos
cmp
jl
dec
adc
adc
pushf
data16
mov
mov
mul
and
mov
and
push
shlb
mov
mov
dec
pop
sbb
mov
nop
test
addb
dec
fwait
mov
sbb
dec
or
adcb
aam
mov
daa
mov
mov
aaa
mov
stos
add
pop
adc
insb
lods
popf
bound
cmc
cs
in
scas
push
mov
inc
lds
xor
mov
repnz
test
inc
mov
add
sbb
lahf
xchg
inc
adcl
mov
xlat
pop
lret
jae
cwtl
cmp
mov
enter
cs
jns
xchg
sti
and
inc
lret
insb
xchg
push
inc
or
int3
out
add
dec
enter
sub
call
dec
ret
movsl
cwtl
pusha
cmp
leave
pop
imul
or
lea
xchg
sbb
and
shlb
pop
mov
test
std
inc
xor
lods
push
xchg
lods
outsb
pop
adcb
xor
pop
dec
gs
cmp
hlt
sahf
dec
test
jno
arpl
inc
jae
mov
in
call
loop
jbe
push
sub
or
dec
call
inc
mov
cmpsl
cmp
shl
cmp
pusha
or
xor
inc
cmc
ret
cmpsb
jle
ret
lea
cmc
pop
in
push
scas
lods
addr16
lock
inc
mov
rolb
sarb
mov
int
or
jmp
inc
call
cmp
out
mov
add
loopne
scas
gs
std
fildll
add
cmpsl
insb
or
mov
lods
iret
and
push
sbb
sbb
adc
push
push
popa
es
mov
jle
jae
fwait
int3
jmp
fisubs
aad
lock
dec
jl
test
ret
outsl
adc
sub
int
testl
jl
icebp
fisttps
lcall
test
aad
cs
cwtl
xlat
push
stos
lret
push
dec
in
or
push
js
cmp
add
add
stos
outsb
fldz
cli
lods
cmp
mov
and
jno
or
cmpsl
dec
jns
mov
mov
rcrl
lods
cmp
std
testl
out
out
jp
sub
inc
or
lret
imull
enter
add
cltd
mov
lcall
in
stos
mov
or
pop
shld
adc
mov
mov
out
test
dec
pushf
inc
cmp
or
hlt
lds
jp
mov
jp
xchg
mov
add
rcrb
fistps
mov
mov
pushf
inc
cmp
aaa
adcb
mov
imul
cwtl
clc
or
cvttps2pi
ret
xor
or
dec
sbb
stc
fwait
jns
cmp
mov
lahf
cmp
jnp
mov
xchg
push
std
dec
xchg
and
popf
shll
sbb
cmp
xchg
or
lcall
inc
arpl
lods
adc
imul
imul
sub
jb
sub
gs
inc
and
lret
cld
mov
arpl
push
mov
pop
or
testl
pop
dec
adc
repnz
or
aam
pop
xor
cs
outsb
sub
or
fists
ss
lods
mov
aam
xor
jne
mov
xor
lods
push
mov
xor
call
mov
mov
pop
mov
xor
insl
call
hlt
cmpsl
es
cli
scas
pextrw
jnp
xchg
repnz
jp
xchg
or
mov
insl
out
or
imul
mov
mov
pop
pop
push
rcr
dec
pop
push
and
cli
into
pop
aas
sahf
das
xchg
out
sub
lret
xor
inc
lea
and
and
inc
lods
in
cmc
mov
bound
xor
ficomps
negl
out
mov
mov
or
jns
pop
aad
cli
das
testl
popf
cwtl
dec
jo
bound
adc
push
aaa
push
xchg
jecxz
inc
mov
push
stc
sbb
jecxz
in
mov
push
jl
or
imul
scas
ljmp
fwait
imul
mov
hlt
sub
mov
xor
mov
dec
xor
int3
adc
iret
dec
jns
xchg
xchg
divl
pushf
xchg
les
or
inc
lcall
js
ja
subb
popf
cmp
movups
inc
aad
xchg
addr16
pop
pop
clc
pop
sub
xor
std
jmp
leave
jnp
fsub
and
test
add
ja
jmp
jnp
lods
mov
push
mov
jmp
cmp
adc
faddl
inc
push
xchg
cmpsb
stos
add
push
sub
fcoms
jl
mov
fwait
or
jno
push
push
dec
or
les
sub
jb
pop
add
push
lret
roll
mov
icebp
les
scas
or
cmp
pop
dec
leave
aad
stos
call
pop
int
test
jge
aaa
add
outsl
mov
in
push
icebp
push
icebp
jno,pt
sbb
inc
sbb
shll
and
cmpl
push
add
shll
loop
or
out
jp
jge
ds
rolb
lods
fwait
cli
fsubr
pusha
repnz
stos
pop
pop
dec
mov
pop
mov
push
aam
or
rcrl
dec
out
inc
pop
push
or
outsb
push
testb
stos
fidivrl
adc
push
stc
add
dec
sbb
mov
or
xchg
shll
lds
in
xchg
xchg
shlb
sbb
cwtl
inc
xor
fwait
popa
and
xor
jecxz
stc
push
sub
lret
outsb
repnz
jno
test
mov
arpl
outsl
sar
jl
mov
jge
fsubl
or
jecxz
mov
mov
pop
out
andl
fstps
stos
or
and
iret
mov
popa
daa
push
xchg
insl
xchg
subl
pushf
jno
xor
out
fisttpll
sbb
not
repz
xlat
dec
mulb
iret
leave
inc
mov
dec
je
fmull
mov
lods
cmp
pop
sahf
pusha
enter
or
push
or
es
pop
fmulp
push
out
dec
imul
mov
addr16
mov
bound
fcmovu
mov
loope
mov
push
mov
std
pop
dec
roll
es
sti
cmp
cmp
iret
xchg
test
jp
sbb
int3
rcll
jnp
jp
mov
ja
push
test
xchg
dec
xchg
cli
or
push
cmc
xor
into
sub
pusha
add
testl
adc
mov
dec
pop
adc
xchg
jge
popa
mov
pop
insb
scas
jle
in
mov
mov
popa
adc
pop
push
popa
cmp
int
fwait
add
or
insl
into
loope
or
add
push
clc
xor
mov
xchg
pop
pop
in
adc
sub
jae
mov
push
push
xor
test
xchg
cmpsl
lahf
mov
into
inc
mov
popa
sub
pop
divb
jmp
shrl
into
sti
mov
call
push
add
popa
cmovae
lret
jg
xchg
mov
mov
pop
push
out
movsb
adc
xor
das
mov
ret
movsl
jge
nop
or
loopne
lods
movsl
leave
sbb
xchg
xchg
fdivs
xchg
pop
or
idivb
leave
fwait
jge
jne
mov
inc
in
imul
orl
push
and
push
cmp
pop
adc
cmp
and
lea
xchg
pop
mov
cmpsl
fcomip
mov
in
cmp
jb
jno
insl
negl
pop
pop
add
stc
pop
cmp
ss
leave
mov
add
sti
das
in
cmp
enter
pop
cmp
jle
and
xchg
jmp
mov
test
mov
dec
insb
xchg
mov
jmp
xor
lods
sbb
shrb
and
call
int
mov
dec
shr
inc
mov
mov
lods
inc
add
rcll
dec
sbb
cmp
cli
imul
sarl
jnp
sub
hlt
mov
int
fidivrl
andb
add
mov
in
fsubrs
leave
push
nop
xchg
pop
mov
cmp
push
lret
out
and
fidivs
rcrl
orl
fisttpll
dec
xor
clc
xor
jns
shlb
pop
mov
fisubs
sbb
lds
sub
inc
mov
mov
push
sbb
fistpl
int
outsl
loope
call
je
sbb
js
lret
mov
int
pop
je
fisttpl
insl
lahf
inc
or
inc
push
mov
push
push
and
add
lock
or
xlat
cmp
inc
jle
jmp
jmp
jno
xor
clc
push
and
outsb
push
pop
push
popf
mov
add
js
test
add
adc
jns
fnstenv
js
insl
inc
cmpsb
cli
pop
push
inc
shl
fldenv
dec
mov
pusha
mov
sub
and
mov
js
adc
xor
adc
or
mov
xchg
mov
push
ja
lock
ss
mov
bound
xchg
sub
pushl
jb
leave
sbb
pop
or
mov
pop
dec
cli
and
sbb
mov
and
dec
or
repz
adcb
dec
xchg
in
inc
cmc
pop
fcomps
dec
xchg
insl
jle
sbb
nop
sti
inc
pop
push
jge
adc
sub
xchg
pop
in
dec
lock
push
xchg
mov
inc
popf
sbb
pop
inc
rolb
int3
loope
xchg
lret
sbb
inc
xor
jbe
lods
xchg
pop
test
push
xchg
mov
cli
or
inc
sbb
scas
fstl
jno
inc
and
pop
and
mov
cmc
xchg
rcr
leave
loop
lahf
and
adc
ret
lret
xchg
aas
adc
pop
test
add
cmp
popf
imul
bound
enter
push
xor
jnp
jge
jns
mov
add
cmpsl
nop
and
out
dec
lcall
mov
or
lods
sub
dec
sbb
data16
nop
mov
lret
lea
in
aad
mov
pop
xor
pop
pop
pop
jae
sub
jl
dec
test
jg
je
push
pop
jle
ficoml
pop
push
popf
enter
adc
out
push
sbb
subl
das
add
or
aad
inc
mov
xchg
in
cmp
or
lods
leave
sarl
js
mov
and
mov
ret
iret
cmpsl
xor
lret
xchg
push
movsl
fldl
ds
enter
mov
cmp
insl
dec
jb
add
pop
bswap
pop
cltd
cmp
aaa
push
pop
inc
pop
mov
popa
mov
ss
dec
jns
xchg
in
jo
pusha
dec
mov
jge
pop
andb
std
mov
or
ljmp
int
sub
cmp
push
test
adc
lret
shl
iret
cwtl
xchg
clc
jmp
pusha
notb
fmull
je
orl
inc
pop
jnp
popf
in
adc
push
out
inc
imul
mov
outsb
dec
fstpt
ffree
sbb
lods
jo
xchg
sbb
out
scas
inc
inc
xlat
sub
xchg
call
or
or
sahf
adc
in
sbb
add
loopne
lods
mov
popa
sbb
xor
pop
cwtl
cwtl
add
je
mov
and
fimuls
or
push
lea
mov
mov
sub
orl
jo
and
dec
dec
dec
jns
xlat
add
shl
pop
pop
divb
jns
out
or
imulb
jnp
aas
fistps
and
and
or
mov
test
inc
repnz
scas
jnp
movsb
insb
out
xor
iret
jb
push
add
popf
or
mulb
js
sub
push
enter
dec
mov
dec
pop
mov
mov
adc
bound
lahf
inc
mov
dec
cmp
fmull
je
incb
mov
inc
xchg
jecxz
push
or
cmc
mov
add
xchg
fld
daa
inc
sbb
adc
push
pop
push
sbb
cmpsb
jno
movsl
cmp
mov
nop
xchg
hlt
jg
ficomps
inc
pop
fstl
mov
dec
leave
shrd
mov
dec
popf
cmpb
insl
int3
mov
sahf
sub
add
es
cmp
jne
inc
aaa
mov
test
lret
jo
mov
dec
cmp
notl
aas
out
int3
repz
insb
sub
dec
in
insb
fnstcw
iret
fcmovb
cmp
fdivrl
dec
add
addr16
sub
loop
sti
js
inc
adc
shr
and
fmull
mov
into
or
sub
loopne
aad
jmp
xor
pop
pop
loope
mov
mov
sub
in
xor
adc
inc
sbbb
and
pop
fadd
pop
push
cwtl
jg
shrl
out
pextrw
mov
popa
xor
mov
icebp
inc
and
sbb
cmp
iret
adc
popf
stc
mov
sbb
cmc
push
je
fildll
rcrb
fcomps
stos
fadd
inc
xchg
dec
lods
mov
sub
scas
mov
push
pop
aam
dec
repnz
pop
inc
inc
mov
fmul
mov
js
inc
fisttpll
stos
out
pushf
pop
mov
ss
repnz
push
sub
int
sbb
mov
outsl
sub
xchg
lods
gs
out
dec
lock
mov
xor
cld
mov
pushf
add
mov
dec
lods
test
push
lods
sti
loop
int
jb
mov
push
mov
addb
jp
mov
lcall
xor
inc
sub
outsb
mov
xor
pop
loopne
popa
pusha
cmpsl
stos
shll
jo
std
stc
sbb
mov
out
pop
mov
add
xor
daa
mov
das
outsl
xor
notb
sbb
fucomip
dec
lea
imul
outsl
icebp
mov
xchg
or
ljmp
icebp
fisubrs
jmp
adc
les
cli
test
and
xchg
movsb
faddl
xchg
in
inc
lds
lods
sarl
icebp
insb
lds
dec
mov
stos
or
lods
mov
inc
push
fcmovu
add
rol
mov
xchg
cs
mov
mov
add
jge
loop
shrl
imul
pusha
sub
imul
add
lret
mov
fs
or
lret
dec
jno
or
dec
cmpsb
insb
adc
dec
xchg
jbe
pop
fadds
aas
ret
push
xchg
jo
insl
sbb
inc
stos
mov
out
add
mov
mov
and
in
pop
mov
mov
xor
and
xchg
mov
fs
icebp
fisubrs
cmp
jmp
sbb
and
ss
jns
mov
jl
sub
sbbl
into
sahf
sahf
jecxz
rolb
add
and
xor
add
inc
imul
cmp
in
ljmp
fdivl
js
pusha
es
movsl
callw
nop
lock
les
es
aas
cmp
or
xchg
arpl
ret
xchg
mov
aas
lcall
clc
cld
data16
or
add
test
mov
or
cmpsl
mov
jae
stc
subl
sti
in
push
out
ja
pop
mov
divl
ljmp
out
jmp
scas
jg
jmp
mov
ds
and
cs
pusha
lret
mul
sub
pop
mov
push
popa
repnz
sub
bound
cltd
pop
mov
inc
rolb
sub
roll
mov
add
fildll
mov
xor
imul
ljmp
imul
outsl
pop
pop
ss
xchg
add
sbb
sbb
or
pop
inc
jl
cmp
data16
add
stc
xchg
xchg
adc
int
inc
pop
sub
or
out
faddl
test
mov
or
cmp
pop
cmp
mov
and
das
cmp
xchg
mov
popf
loope
enter
mov
cs
mov
mov
xor
cs
iret
ljmp
push
pushf
and
je
jae
push
jb
pop
add
sbbl
mov
xor
ss
icebp
sbb
push
aaa
das
mov
xor
inc
sbb
cmpl
pop
jge
rcrb
lcall
cltd
pop
cli
gs
rol
fdivrl
rclb
inc
insl
or
out
mov
add
aaa
and
ret
bound
adc
incl
lret
cmpsl
fisttpll
sub
pop
cmp
cmp
adc
xchg
insb
mov
sbb
es
fsubr
sbb
pop
lahf
jmp
daa
mov
lahf
mov
jge
leave
fstl
ds
orl
dec
xchg
jb
or
fwait
lods
jp
push
ret
xchg
sbb
xor
shrb
add
mov
and
clc
cmpl
xor
lahf
mov
jg
xor
or
cmp
or
push
adc
xor
fistl
xchg
jns
ss
sub
aam
mov
push
lret
inc
out
xchg
lds
aam
mov
xor
mov
sbb
int3
daa
jmp
push
iret
mov
jle
pop
xchg
in
fwait
push
sar
mov
fwait
pushf
clc
andb
xchg
faddp
mov
xor
mov
and
push
xor
pop
iret
adc
dec
popa
jo
xchg
dec
push
jl
push
test
in
rcrb
push
stc
sbb
push
ret
push
into
cwtl
mov
jecxz
pop
add
es
aad
cmc
adc
std
inc
int
cmpsb
sbb
into
ss
cs
mov
push
in
mov
scas
test
in
xor
fists
cs
and
daa
xor
mov
lret
int
dec
pop
mov
and
mov
sahf
push
mov
mov
sbb
mov
sub
or
nop
loopne
adc
pop
aas
add
mov
test
notl
out
clc
push
inc
into
ja
dec
ret
jbe
call
mov
pop
in
mov
loope
je
dec
pusha
dec
and
sub
cli
pop
push
loop
hlt
push
xchg
xor
fcmovbe
mov
fcmovbe
fcomp
sbb
or
and
push
and
cmp
or
sub
es
fdivs
xchg
dec
inc
ds
cmp
pop
pop
or
test
push
adc
cli
shll
add
sbb
mov
fnstsw
andb
mov
test
jnp
adc
dec
clc
lcall
sbb
sub
outsb
repz
add
stos
add
sarl
jb
or
js
loope
arpl
mov
adc
sub
hlt
xchg
dec
fwait
pop
leave
cmpsb
push
out
clc
jns,pn
jnp
mov
ljmp
and
stos
adc
sub
xor
cs
rol
cmp
xchg
dec
mov
je
xchg
or
xorb
sub
xchg
or
fsubr
sub
sub
or
xchg
mov
push
xorl
pop
lods
push
xlat
fdivrl
xchg
int
js
shlb
pop
xchg
nop
hlt
mov
or
push
jle
pop
rolb
xchg
xor
mov
inc
fisubs
ja
mov
push
push
call
xchg
call
lea
push
sar
imul
or
xor
xlat
insb
call
inc
into
push
inc
int
mov
add
or
sbb
lea
mov
or
or
fwait
push
fmuls
dec
jle
mov
push
shlb
pop
in
lea
push
add
ja
dec
mov
xchg
pusha
xchg
cmp
mov
in
lret
push
jb
xchg
xchg
mov
push
mov
pushf
mov
and
pop
inc
jg
or
pop
mov
mov
dec
jbe
std
iret
sub
cmpsl
stos
push
fwait
mov
imul
push
mov
adc
adc
cld
dec
addr16
xchg
out
push
lods
out
pmaxsw
xchg
dec
sub
or
outsl
mov
fcompl
out
inc
lock
stos
mov
pop
mov
sahf
inc
or
js
outsl
sahf
inc
sarl
or
imul
jle
cmc
sub
add
lcall
out
mov
jecxz
aam
mov
int3
fidivl
push
xchg
int3
lods
lret
out
pop
mov
pushf
je
inc
or
mov
inc
dec
mov
pop
rolb
call
daa
push
cwtl
lods
mov
pop
fcomi
mov
divl
out
dec
cmp
xchg
enter
inc
pusha
cmp
shll
fwait
inc
imul
pop
push
jmp
adc
push
fwait
cld
inc
cmp
dec
shrb
jle
enter
pop
lret
lret
rorl
jns
bound
stos
sbb
cld
xchg
aam
push
add
lret
je
lret
adc
cld
es
bswap
clc
pushf
scas
cmp
jo
xchg
rolb
fwait
pop
inc
rdpmc
or
mov
push
out
mov
mov
sahf
xchg
xchg
sub
xor
pop
icebp
ficompl
dec
test
das
pop
leave
xchg
popa
pop
aam
sbb
cli
les
dec
das
add
inc
pusha
adc
add
push
cs
sarb
icebp
aad
rcrb
mov
aaa
sbb
dec
ds
and
loopne
lcall
jnp
and
add
test
mov
xchg
ret
pop
mov
daa
popa
imul
out
das
or
gs
cmp
mov
adc
scas
std
pusha
je
jp
lahf
lcall
mov
subl
lods
div
cmp
pop
enter
cmp
push
jmp
jl
stc
pop
pop
push
adc
push
insb
pop
mov
mov
das
dec
cltd
fs
lret
inc
mov
mov
xchg
or
pushf
fwait
lret
gs
clc
setno
xor
lds
push
outsl
dec
mov
mov
ds
jp
nop
aad
pop
cmp
mov
sbb
es
data16
or
cmp
cld
bound
sub
lods
iret
gs
and
jno
test
sti
sbb
subb
or
mov
ret
and
aas
cmc
scas
inc
push
jae
cwtl
cmp
sub
pop
loop
and
push
mov
mov
lcall
jb
add
in
aaa
maxps
push
and
decb
jg
fists
mov
pop
scas
pop
shrb
inc
and
movsb
int
mov
add
xor
enter
mov
adc
push
iret
sub
imul
xor
jecxz
pushf
mov
mov
fwait
sti
aas
stos
mov
jno
loope
das
or
repnz
leave
data16
xor
iret
xor
xchg
add
or
or
xchg
pop
dec
enter
or
mov
ds
std
aad
repz
pop
cmc
mov
xor
enter
je
cli
lret
inc
imul
push
sub
inc
jnp
in
xor
cmpsl
imul
aam
mov
add
pop
sub
pop
je
push
jo
in
add
in
fiaddl
pusha
mov
scas
mov
xchg
push
in
push
pop
mov
push
lock
inc
adc
xchg
pusha
ljmp
mov
in
push
les
cmp
sub
sbb
sbb
dec
xchg
cltd
xchg
decb
das
scas
aad
xchg
rcrb
cmpsl
repnz
jo
iret
or
clc
xchg
lcall
popf
data16
jle
aaa
icebp
and
mov
int
pusha
aaa
daa
orb
in
sbb
shrb
test
mov
mov
shll
inc
sti
loope
outsl
cmpsl
pop
pop
adc
arpl
insb
sbb
inc
jb
movzbl
es
and
jbe
sbb
shl
pop
cmp
loop
jne
dec
dec
ret
ss
cmp
mov
or
je
jnp
mov
pop
jge
mov
push
leave
pop
ja
out
enter
iret
add
cmpsl
mov
lock
bound
in
inc
sahf
out
mov
icebp
jne
jnp
xchg
out
or
data16
cmpsl
or
test
imul
ljmp
cmp
fsin
or
add
or
jecxz
in
mov
lea
test
rorl
mov
push
pushf
pop
dec
aaa
push
dec
cmp
mov
out
mov
in
pop
daa
faddl
sub
dec
jo
cmp
and
jbe
jo
and
gs
push
fcom
fstps
push
rorb
cs
cmc
push
push
outsb
or
mov
loop
lods
sbb
jl
add
dec
fimuls
rcrl
das
add
mov
jno
jl
push
push
adc
mov
mov
adc
loopne
out
and
scas
cs
dec
mov
stos
cwtl
imul
add
pop
in
pop
scas
sub
dec
push
testl
xorl
test
push
sbbb
or
jg
pop
sbb
add
les
adc
aas
add
insb
xchg
xchg
aas
addr16
jns
outsl
cmp
mov
ja
and
ret
andb
or
stos
pop
mov
mov
stc
inc
sbb
pop
push
daa
lds
inc
icebp
ljmp
out
bnd
push
inc
out
or
push
dec
mov
sbb
loop
push
push
stos
int3
push
jbe
ds
clc
shrb
int3
cmp
hlt
rcrl
inc
mov
pushf
push
push
pop
dec
mov
out
out
pop
pop
mov
leave
mov
pop
das
pop
sbb
mov
outsl
test
pop
mov
rcr
nop
adcb
mov
cwtl
mov
frstor
pop
push
stos
mov
cmp
arpl
mov
std
subb
inc
divl
mov
mov
pop
adc
push
inc
lcall
jnp
ja
ss
or
fidivl
ss
and
mov
xchg
cmpsl
jp
jnp
jae
xor
js
lret
mov
in
push
and
adc
sbb
lcall
or
jg
notb
mov
lea
out
xlat
leave
mov
sub
bound
or
cld
shl
sub
fnstenv
clc
dec
cmp
jae
leave
dec
mov
cltd
inc
scas
dec
insl
sub
into
dec
hlt
lods
out
enter
enter
push
fxch
and
rorl
jmp
mov
je
jo
mov
add
fnstcw
jl
jg
into
cwtl
or
jge
call
ja
flds
lcall
mov
pushf
enter
in
dec
mov
mov
push
icebp
or
mov
rol
into
icebp
add
mov
mov
rorb
incb
mov
movsl
and
pusha
push
rolb
sbb
stc
mov
nop
pusha
sub
movsb
ret
cmp
jb
xchg
push
in
and
xchg
out
and
test
ficoml
popa
leave
daa
jp
scas
cmp
fldl
dec
xchg
mov
addr16
inc
loop
rclb
fcoml
jno
or
cmp
jnp
popa
dec
movsl
mov
lods
pop
add
jp
scas
jle
push
mov
xchg
call
push
popf
orb
jmp
loopne
out
pop
jb
in
call
test
fwait
xor
out
sahf
adc
leave
xor
jae
sbb
cli
stos
fadd
pop
inc
mov
cltd
add
push
mov
or
int3
sbb
cmc
jmp
fwait
out
jecxz
jo
pop
mov
dec
mov
repz
push
mov
inc
mov
sahf
in
sub
cmpb
fcmovnb
ret
rorl
out
ret
stc
notb
xchg
pop
mov
xchg
aaa
cmpsb
sti
mov
and
mov
leave
pop
es
mov
int3
fldenv
out
sbb
pusha
adc
sbb
nop
sub
add
dec
mov
add
mov
add
dec
mov
mov
dec
lds
aad
notb
fmul
cmp
mull
test
mov
inc
xorl
push
adc
mov
sar
pop
or
pop
shrl
lret
out
pop
push
test
push
pop
rcl
fmull
pop
test
mov
adc
add
jp
imul
std
idivb
pop
std
cmovg
sub
sbb
jno
push
adc
scas
adc
add
lds
fldenv
shrb
mov
aad
insb
cmp
imul
imul
jns
mov
fnsave
xor
out
jmp
and
mov
xchg
mov
xchg
nop
jge
and
ret
cltd
and
adc
aas
add
cwtl
jo
imul
in
inc
mov
push
mov
xor
push
sti
sub
shrl
fildl
into
cmpsl
push
aam
imul
push
scas
dec
xor
sbb
dec
xchg
xchg
mov
sbb
push
fisubrl
add
add
int
sbb
xor
push
sti
jne
leave
lcall
lcall
movsb
mov
sbb
dec
shrl
pusha
sbb
stc
pop
cmpsl
adc
jmp
inc
mov
sahf
dec
mov
sbb
jl
xchg
cmp
push
jnp
jg
or
inc
push
pop
cltd
dec
cmp
add
cwtl
mov
mov
leave
mov
mov
add
inc
imul
mov
sub
push
xor
push
fyl2xp1
xor
push
push
cmp
fdiv
aas
fmull
add
fcmovne
test
std
mov
cli
jle
aaa
jp
repnz
scas
mov
sub
add
subb
subb
mov
loope
cmp
nop
mov
in
mov
ficomps
fcompl
test
ret
pop
sub
pop
in
mov
mov
fiaddl
and
and
sarl
dec
std
pop
xchg
insb
subl
fisttps
cmp
mov
jle
mov
sub
and
pusha
or
dec
pop
dec
cmp
dec
or
and
das
andl
xchg
sbb
aam
fwait
cmp
mov
stc
sbb
in
fsubrl
push
imul
xorb
lods
fnstcw
jne
bound
mov
mov
add
pop
push
lods
adc
out
movsb
xchg
ljmp
xchg
popf
cltd
inc
sbb
add
push
push
or
pop
ds
imul
xor
sub
loop
out
pop
push
lods
sub
cmp
or
add
add
out
in
insl
rorl
mov
push
lret
mov
pusha
fld
loope
lds
sub
cmp
loope
into
inc
out
add
testl
mov
fucomip
movsl
es
adc
sbb
sbb
popf
outsl
jne
add
pop
loop
push
cmp
movsl
adc
dec
inc
out
xchg
cltd
mul
push
enter
into
push
nop
pop
in
inc
and
incb
orl
mov
mov
xchg
pop
int
sbb
movsb
xor
repnz
cld
roll
jbe
xor
es
push
stos
dec
imul
scas
xchg
push
inc
lahf
adc
orb
push
mov
cmp
jne
dec
gs
jge
sahf
sub
xor
fisttpl
enter
sub
outsb
xchg
push
cmc
dec
std
xchg
int
cltd
inc
std
fimull
addr16
mov
pop
xchg
add
out
push
xrelease
push
pop
fwait
adc
xor
divl
vandnps
insl
int3
pushf
out
lret
jl
pop
fwait
add
pusha
bound
xchg
inc
mov
xchg
jle
dec
pop
pop
les
inc
iret
loopne
add
mov
jnp
popf
out
jmp
mov
rorl
bound
and
or
push
imul
cmc
testl
pop
jmp
or
rclb
sbb
and
out
aaa
xchg
push
cmpsl
push
or
aaa
adc
scas
jns
popf
cld
std
shlb
pusha
adc
pop
inc
orl
or
inc
into
sub
or
pop
push
stos
mov
nop
insb
imul
or
fbld
je
inc
adc
mov
sti
je
or
lods
jp
addb
push
cmpsb
out
jge
mov
push
movb
hlt
out
dec
fbstp
jecxz
das
mov
jb
aam
lock
jns
loope
adcb
sbb
mulb
jecxz
add
outsl
xchg
push
insb
imul
test
xlat
mov
and
cli
in
or
jnp
sbb
jae
add
int
cmpsb
pushf
sbb
popf
cmp
xor
into
pop
test
or
jecxz
adc
push
subb
jno
jbe
xchg
jb
jp
sbb
sub
add
and
add
outsl
das
mov
ret
push
je
pop
and
out
dec
push
es
lret
xchg
lea
mov
int3
sub
ficoms
cmp
pusha
call
std
icebp
mov
mov
add
sub
and
mov
je
adc
lcall
mov
xor
nop
mov
adc
xchg
xlat
xchg
rcll
inc
add
fidivs
sbb
mov
mov
cs
movsl
adc
test
jns
push
xchg
add
stos
pushf
imul
mov
scas
out
inc
sub
xchg
push
pop
fcomi
cmp
call
mov
dec
jns
mov
and
xchg
repnz
cmp
xor
xor
mov
xchg
fsubl
push
adc
inc
jns
push
adc
jmp
loope
clc
add
jbe
dec
mov
pop
fwait
dec
cmpsl
shr
cmp
sub
stos
push
sbb
mov
sub
and
cmp
sbb
in
push
mov
or
and
out
lahf
inc
and
and
mov
mov
xor
jno
movsl
mov
and
push
arpl
icebp
pop
lcall
mov
fcoms
dec
adc
xor
int3
ret
mov
into
jle
ficomps
sbb
les
dec
ljmp
and
fsubl
push
inc
add
or
adc
loope
leave
retw
add
dec
adc
cmp
fiaddl
aas
cld
icebp
inc
jbe
icebp
mov
cmp
pop
xchg
cwtl
sub
cld
js
adc
fnstcw
cmp
add
sbb
jae
mov
filds
sahf
cld
xchg
and
inc
pusha
sbbb
pop
movsl
fiaddl
jecxz
fstpt
test
fcomip
std
push
adc
adcb
fisubrl
pop
pop
cmp
mov
das
adc
stos
push
int3
and
lret
mov
xor
xchg
mov
fwait
mov
dec
cmp
ljmp
rolb
dec
into
xchg
test
clc
push
and
dec
fidivl
push
insl
sub
dec
rolb
std
jae
clc
scas
pusha
int3
mov
sahf
add
shl
push
jle
test
mov
sahf
loop
add
and
call
jp
outsb
mov
adc
imul
push
lods
lods
mul
lock
insl
push
out
push
mov
in
in
rcrb
enter
jl
std
inc
push
jbe
std
adcl
push
jae
jp
xor
sbb
pop
cs
scas
lds
test
lock
imul
stos
pop
and
cmc
push
sbb
sub
xchg
mov
adc
or
sarl
mov
mov
lcall
sbb
inc
mov
pusha
gs
mov
loop
mov
inc
stos
push
add
pop
sub
jge
adc
or
scas
aas
repz
sub
pop
sbb
xchg
jp
mov
ds
dec
aam
adc
and
popa
test
stos
dec
mov
aaa
outsl
xchg
je
or
xor
push
fnstsw
dec
lods
mov
xchg
imul
movl
out
jnp
pushf
out
dec
dec
stc
inc
sub
mov
adc
lods
mulb
or
lahf
pushf
stos
mov
cmp
mov
inc
ljmp
ds
push
sbb
sbb
jno
cmp
inc
adc
and
fsubl
lods
adc
push
cli
test
push
shrl
jl
dec
mov
inc
movsb
inc
pop
xchg
adc
pop
cli
fcomip
push
cwtl
and
jo
jnp
dec
out
jmp
mov
orl
jle
aad
push
sub
lods
loope
sbb
notb
or
inc
pop
mov
sub
cmp
mov
jbe
fdivrp
push
ficomps
jo
sbb
xor
push
sahf
aas
dec
out
out
pop
loope
dec
xchg
xor
xlat
xchg
or
mov
jbe
aam
repz
das
nop
iret
pop
div
imul
xor
test
out
jl
jbe
scas
mov
push
nop
cmp
add
pop
mov
inc
mov
dec
jge
cmp
sub
dec
ret
cmpsl
mov
outsw
gs
and
add
jnp
out
mov
jnp
lcall
sub
xor
cmc
mov
mov
in
and
into
inc
push
gs
push
add
dec
mov
fcoml
mov
hlt
cmp
mov
mov
push
test
or
jp
adc
sbb
fwait
xor
in
adc
sub
sub
pushf
and
hlt
pop
fwait
add
sub
test
or
je
dec
loope
mov
fidivl
in
aas
jno
and
sbb
xor
inc
xor
push
push
enter
repz
rcll
adc
mov
hlt
mov
mov
enter
mov
jle
aaa
push
loope
imull
sti
push
sub
jne
dec
int3
mov
xchg
arpl
sub
stc
sub
loopne
or
cmp
imulb
clc
push
xchg
and
test
mov
jns
movsb
je
inc
mov
out
js
pop
cmp
aaa
cmp
cmp
lods
call
mov
sub
ret
cmp
fstpl
into
fdivrs
sub
pop
push
xorl
dec
ficomps
add
sbb
jns
fistpll
push
test
call
mov
clc
rorl
mov
and
fdivrs
xchg
andb
int
jle
or
movsb
jg
popf
inc
ficoms
inc
dec
outsb
test
pop
lods
mov
mov
push
aad
dec
hlt
cmp
cmp
int
push
and
les
sbb
jl
mov
into
icebp
mov
jle
lods
adc
xor
inc
add
jnp
sub
xchg
pop
clc
fistpl
std
fidivrl
push
adc
leave
sub
imul
cld
rcll
icebp
xor
mov
cmpl
out
mov
jle
xor
sbb
mov
jo
lcall
sti
outsb
push
out
mov
dec
lcall
test
push
aam
loopne
mov
icebp
mov
test
pop
sub
hlt
ds
call
aaa
into
rcl
mov
outsb
fdivrl
and
pop
gs
mov
jns
mov
jle
jnp
dec
data16
inc
push
outsl
cltd
nop
shl
adc
xor
push
mov
mov
adc
push
sub
push
mov
push
xlat
sbb
mov
scas
ljmp
jnp
push
push
ja
icebp
jecxz
add
inc
out
std
jp
stos
push
and
shlb
mov
rcrl
call
jne
loopne
or
jecxz
ret
rol
xor
fstpl
cmp
inc
subb
call
push
stos
xor
sbb
xor
jmp
pop
and
add
ljmp
roll
xchg
push
cmpsb
mov
mov
fs
jg
pop
outsb
cmp
add
inc
push
std
fldt
rorb
aaa
pop
shrl
lret
mov
xor
fdiv
mov
mov
xchg
aad
sbb
rclb
das
mov
xchg
push
nop
cmp
mov
and
popa
dec
add
adc
push
xchg
icebp
jecxz
jbe
push
mov
lret
lretw
and
push
ficoml
xor
cmp
xchg
push
sub
in
mov
sub
lcall
mov
dec
adc
sbb
or
fsubl
pushl
cs
or
mov
adc
jno
shlb
add
fidivrs
mov
or
shll
jmp
je
cwtl
xchg
adc
scas
xchg
cmc
mov
or
dec
mov
jnp
jl
jecxz
add
sbb
inc
mov
inc
call
and
mov
jo
insb
cwtl
push
scas
fsubs
fbld
cmp
mov
lret
out
add
push
outsb
test
jecxz
mov
pusha
subl
int
stos
sbb
lahf
jp
sbb
notl
pop
add
push
inc
notl
sbbb
sub
into
iret
and
adcb
jo
in
push
adc
and
pushf
pop
test
adc
mov
mov
adc
push
out
xchg
xor
mov
or
push
mov
in
leave
lock
fildl
and
or
inc
sbb
xor
inc
push
mov
lret
adc
xchg
dec
push
icebp
mov
mov
in
or
stos
fisttps
hlt
lods
pmulhw
xchg
fldcw
jns
push
and
pop
hlt
pop
in
mov
scas
push
pop
adc
ss
arpl
lock
bound
mov
jmp
leave
rorl
test
movsb
sbb
sbb
sbb
outsl
cmp
inc
inc
out
ret
or
mov
es
shl
jle
cmp
aas
jbe
movsl
movsl
mov
lret
outsb
je
inc
nop
outsl
sti
movsl
lcall
xchg
inc
sub
add
cmpsb
xchg
stos
sti
je
lock
and
xor
or
cmp
push
lods
arpl
stos
cwtl
pushf
lods
cmpsb
repnz
jnp
xor
push
sbb
lret
in
sbb
sbb
sbb
addr16
sbb
sbb
adc
dec
or
jb
push
pop
stc
xchg
xor
sbb
cmp
mov
test
mov
and
aaa
loop
xor
outsb
loop
or
repnz
inc
sub
mov
add
mov
dec
and
mov
pop
mov
cwtl
push
jle
xlat
ljmp
jge
mull
or
popl
mov
or
inc
jg
cwtl
test
jmp
sbb
repnz
insl
fistpll
sub
cmp
xor
cwtl
scas
sub
xor
js
mov
es
mov
shrb
outsb
insl
inc
mov
cmp
or
lahf
sbb
mov
mov
lods
mov
inc
sbb
add
xor
dec
cltd
fiaddl
in
arpl
ss
jnp
sub
hlt
cmp
in
xchg
cmpsl
bnd
push
xchg
outsl
lock
addl
outsl
inc
shrl
push
and
ja
mov
add
xor
xchg
fcmovu
mov
mov
lahf
leave
sbb
jl
mov
leave
test
mov
push
sbb
sub
inc
leave
cmc
mov
or
outsl
test
ja
and
cwtl
loope
push
jge
xchg
outsb
inc
pop
int3
xor
sbb
xchg
outsb
loop
and
inc
adc
icebp
dec
ja
in
dec
pop
adc
mov
fldenv
sub
outsl
jae
rclb
xor
cmp
lock
xor
push
aam
addr16
into
adc
pushf
jg
add
outsl
or
xchg
pusha
push
sbb
das
dec
out
push
mov
jno
jae
mov
mov
sub
mov
cmp
xchg
mov
sbb
or
sub
xor
mov
xchg
push
pushf
lcall
sbb
lcall
inc
dec
movl
jecxz
sbb
mov
push
adc
cmp
xchg
xor
push
pop
std
inc
and
mov
insl
adc
inc
add
sbb
loope
int3
insb
adc
or
sub
pop
sub
pop
lods
xor
mov
xchg
add
stc
mov
push
loop
xchg
test
cmp
xchg
mov
push
test
repnz
cmc
lret
xlat
ja
out
adc
mov
fs
out
mov
push
rcl
inc
fstl
and
pop
sahf
pop
or
xor
inc
mov
mov
aaa
mov
sbb
jmp
xchg
bound
xchg
mull
mov
push
inc
xor
or
in
sbb
loop
jnp
loope
xchg
lcall
test
lods
add
loopne
out
adc
pop
push
mov
sbb
in
iret
xor
add
sub
mov
mov
out
nop
enter
outsl
icebp
sub
adc
cltd
mov
out
mov
push
sbb
pop
enter
mov
adc
jnp
in
mov
lret
mov
mov
mov
aaa
jg
dec
js
sbb
jnp
pushf
pushf
outsl
inc
mov
fsubrs
dec
sahf
xchg
lods
sub
xor
add
cmc
fdivrl
pop
sti
xor
test
push
jge
dec
stc
mov
fsubl
pop
push
pop
or
hlt
adc
lahf
out
ret
mov
cmpsb
loope
scas
dec
loopne
aad
jp
mov
xchg
push
stc
xor
shll
fsubrs
in
push
mov
daa
sub
imul
imul
or
fimuls
inc
iret
sub
sbb
out
rol
inc
mov
aad
mov
jmp
cmp
mov
je
mov
or
imul
enter
jno
fcomps
sub
jb
lock
lret
aam
incl
sbb
bound
std
nop
ljmp
mov
mov
test
mov
imul
and
out
call
adc
sbb
lcall
lret
xorl
xchg
stc
xchg
xchg
imul
xchg
sbb
in
ret
dec
in
mov
pop
in
lcall
mov
inc
push
sbb
loopne
add
jmp
mov
mov
add
in
jmp
xchg
sbb
nop
ljmp
iret
xchg
and
cmc
repz
sbb
push
jbe
mov
addr16
inc
out
dec
fdivrp
ds
dec
sub
or
inc
pop
sbb
out
ret
punpcklwd
or
pop
outsb
popf
pushf
jg
mov
mov
and
and
mov
dec
pop
mov
call
jb
xor
mov
adc
cmp
push
inc
test
pusha
or
or
cmpsl
imull
cld
cmp
enter
or
jge
int3
adc
add
ss
xchg
sbb
sahf
push
xor
outsl
and
shll
push
xor
sahf
lea
xchg
add
rorl
lds
inc
pop
cmpsb
fwait
test
nop
or
out
or
bound
push
subb
inc
cmpsb
inc
lahf
add
add
insb
mov
in
mov
mov
lret
loope
jl
ja
into
fnsetpm(287
jle
data16
xchg
xor
fisttps
imul
xchg
or
push
push
sbb
dec
sub
ficoml
mov
push
imul
daa
mov
scas
push
or
daa
daa
pusha
leave
leave
xchg
lahf
jbe
mov
push
popa
int3
and
push
add
ret
ret
push
dec
pop
jb
hlt
mov
cmpb
stos
inc
and
mov
cltd
fdivl
rclb
cmp
in
in
inc
adcb
fistpll
cs
add
mov
cmp
cmp
fcoml
jns
test
aas
data16
jmp
dec
es
mull
fbld
rol
movsl
inc
hlt
mov
test
frstor
mov
add
insb
fiaddl
mull
xchg
sub
mov
cltd
jmp
dec
cmc
push
repnz
pshufw
hlt
data16
clc
xchg
inc
push
pop
ds
bound
std
sub
mov
xchg
sbb
jo
push
jns
sub
or
pusha
or
or
test
sub
xchg
xchg
bound
cmp
push
adc
adc
fistps
add
clc
test
fimuls
mov
shll
add
jecxz
movmskps
bound
jp
adc
mov
cli
mov
ss
nop
add
push
add
movsb
dec
mov
add
fadds
mov
test
nop
mov
sbb
sbb
and
hlt
mov
xor
subb
sbb
add
pop
into
std
jle
and
cmp
and
mov
rclb
pop
testl
movsl
fildl
cmp
les
mov
xor
out
and
inc
test
push
cmc
jno
mov
adc
cmp
std
mov
and
fcmovnbe
into
push
out
in
pop
sbb
dec
popa
pop
fstpl
aaa
out
sarb
nop
repz
inc
mov
leave
pop
cmp
pop
mov
pop
dec
push
push
cli
add
inc
jnp
js
xchg
ja
stos
jo
jp
unpcklps
mov
lahf
sbb
aam
lods
lods
dec
mov
ret
adc
and
mov
into
mov
rcrl
test
loop
jp
jbe
or
add
lock
lcall
out
xlat
sahf
xor
cmpsb
cmp
cmp
addr16
loopne
movsb
pop
xchg
cld
cmp
ja
xor
out
add
push
loope
in
data16
adc
mov
insl
iret
outsb
in
add
lret
push
shl
sbb
scas
int3
popf
pop
fildl
cmpsl
or
sbb
lods
fistps
mov
aad
shll
divps
mov
jb
push
xlat
fxtract
mov
xor
sahf
out
shll
sahf
pop
and
and
jmp
repz
scas
jae
cmpsl
pusha
jae
test
out
cmc
push
stos
dec
or
inc
subl
sub
inc
or
sbb
cltd
ljmp
mov
aad
clc
rolb
repz
sbb
sbb
mov
pop
mov
add
pop
cltd
push
mov
sbb
shlb
adc
mov
insl
jmp
inc
outsl
lds
add
pop
jne
popf
fistpl
pop
cmp
mov
scas
mov
mov
fisttps
mov
sbb
sub
sbb
add
dec
test
cmp
aam
mov
push
in
arpl
ret
movsl
cmp
and
dec
push
movsl
arpl
cmc
inc
sbbl
fndisi(8087
dec
push
andl
xchg
jp
mov
mov
sti
in
sar
push
mov
outsl
fdiv
pop
inc
push
push
add
pop
nop
inc
enter
fwait
outsb
pop
xchg
mov
bnd
dec
sub
fcomi
dec
ficompl
adc
add
jo
push
lods
sbb
lds
dec
or
jb
mov
jno
jg
int3
mov
sub
jbe
scas
push
dec
pop
cmp
ja
sbb
jno
mov
fisttpll
je
mov
shlb
in
in
sub
lods
mov
add
scas
es
stos
xchg
mov
inc
lret
push
pop
lret
aad
ljmp
or
les
pusha
inc
mov
cmpsb
daa
xchg
inc
outsl
inc
cmp
rcrl
sti
stos
xor
les
sbb
sub
aad
xchg
gs
sti
faddp
mov
add
add
ds
stos
push
xchg
add
out
pop
inc
mov
orb
pop
mov
push
lcall
sahf
stc
jmp
rorb
sub
icebp
xchg
cs
pop
jecxz
fs
add
das
insl
cwtl
scas
sub
into
cltd
rolb
xor
sbb
stc
ror
popa
pop
aad
rolb
and
add
jmp
adc
loope
mov
adc
mov
cmp
mov
test
sub
xchg
test
lods
xchg
xchg
sbb
cmc
out
idivl
add
dec
mov
out
jmp
daa
aad
and
fld
xor
cld
filds
pop
mov
dec
or
and
xchg
sbb
sbb
pop
push
and
ret
ror
in
adc
ds
popa
gs
sub
cwtl
and
popa
nop
mov
cmpb
pop
or
dec
fmull
jg
popf
lret
hlt
lock
push
orb
xor
push
imulb
dec
xchg
dec
in
push
test
data16
movsl
xchg
movsb
xor
lcall
sti
outsb
dec
add
or
adc
jne
loop
mov
ret
pop
jp
lret
dec
mov
iret
jl
add
cwtl
movsl
pop
test
xchg
sub
push
loopne
xor
xor
mov
leave
pusha
xorb
adc
add
pushl
inc
jbe
sub
outsb
in
sub
pushf
pop
sbb
cmp
in
addr16
aas
xor
lods
push
mov
xchg
lea
lret
cld
mov
inc
sbbb
cli
dec
pop
enter
xor
adc
mov
mov
call
fstps
and
xchg
cmp
pop
cs
das
inc
push
js
mov
ret
adc
popa
stos
dec
ljmp
jne
inc
adc
fwait
out
mov
daa
and
jns
push
outsl
jns
xchg
cltd
sbb
mov
jp
iret
inc
sub
repnz
int3
inc
int
jmp
mov
mov
dec
sub
stos
aas
ds
cld
data16
jmp
add
sub
stos
sub
loopne
lcall
mov
aaa
mov
xchg
mov
outsb
adc
negb
jnp
sub
gs
dec
ret
iret
and
pop
shlb
shlb
pop
lret
xchg
sub
push
imul
inc
lcall
in
push
and
mov
adc
repnz
dec
dec
add
dec
lret
fbld
mov
enter
mov
push
dec
inc
pop
mov
pop
push
sbb
rol
adc
shrl
sbb
imul
inc
dec
pop
popa
xchg
inc
add
and
push
iret
mov
ljmp
xor
sub
xchg
mov
addr16
sub
dec
imul
sbb
pop
scas
jp
xor
or
inc
call
pop
adc
cmp
jle
adc
cmp
andl
pop
lahf
pop
ud0
test
jb
jle
pop
or
dec
adc
sub
cmp
xor
test
out
cmpl
sub
mov
jl
in
mov
gs
mov
add
push
pop
and
cmpsl
sbb
js
push
movsb
sub
jno
mov
aam
daa
iret
mov
pop
idivl
xchg
int3
lcall
or
outsl
xchg
fisubl
les
lods
scas
mov
mov
out
dec
cmp
and
in
xchg
jp
mov
dec
aad
ja
loop
pop
inc
andl
adc
dec
pop
dec
mov
and
aas
xchg
jmp
aaa
in
aam
lods
jmp
jno
xor
subb
pop
lods
stos
pusha
xchg
hlt
or
push
cmpsl
aad
popf
pop
push
mov
mov
cmc
inc
aad
and
sub
ret
mov
xchg
mov
popa
repnz
pushf
push
popf
mov
sub
or
data16
xchg
fstpl
in
icebp
inc
add
or
out
xchg
cs
and
sbb
sti
enter
test
cmc
adc
and
rclb
cmp
clc
aaa
pusha
pop
adc
mov
loop
inc
xchg
adc
push
daa
pop
test
sarl
xchg
xor
mov
mov
adc
add
add
push
inc
pop
xchg
inc
pop
arpl
inc
stos
test
leave
inc
add
pop
cmpl
inc
mov
in
in
cmc
sub
adc
or
mov
out
or
mov
in
push
xchg
inc
cli
inc
pushf
cli
test
cmp
jae,pt
push
clc
inc
cmp
lret
xor
lcall
and
add
xor
in
sbbb
push
xor
sbb
push
xor
gs
sub
les
in
xchg
repz
push
repz
jo
dec
inc
repz
mov
and
pusha
lods
in
icebp
mov
or
popf
push
mov
push
sarl
inc
pop
rolb
imul
mov
cmp
lods
mov
add
jae
dec
aas
or
add
popl
push
inc
cmpsb
inc
imul
jmp
inc
mov
xorb
sub
dec
rcrl
jmp
mov
mov
sbb
hlt
daa
out
push
cmp
scas
cwtl
sub
in
push
xlat
mov
cmp
mov
sbbl
ss
mov
add
sub
or
pushf
push
test
aad
mov
or
aas
dec
xchg
adc
xchg
in
imul
push
xchg
divb
xor
inc
mov
mov
or
cmpsl
xchg
jmp
nop
adcl
shll
repnz
scas
cmp
cmp
call
pop
push
push
aas
push
mov
loop
leave
insl
shlb
movq
mov
insl
dec
cmp
dec
pop
or
and
fcompl
repz
inc
ljmp
push
jmp
cs
out
popa
lods
push
jne
adc
cltd
jp
ja
jo
out
pop
rorb
loope
jnp
xor
dec
jo
loopne
mov
addr16
cmp
call
mov
jbe
push
add
jp
xor
dec
lds
bound
add
inc
jge
jns
out
xchg
xchg
fmuls
test
xor
popa
xchg
filds
aam
ss
mov
arpl
jae
repnz
inc
call
pop
ja
dec
jb
pop
fcoms
cs
cmp
push
xchg
or
into
insb
push
mov
scas
in
xor
inc
out
inc
loope
dec
inc
mov
into
cmpsb
cwtl
adc
call
fldenv
pushf
popa
fsubrs
add
movsb
stos
push
push
jge
in
push
shlb
jmp
int
inc
add
mov
push
pushf
push
lahf
jo
dec
sub
test
sahf
fnsave
inc
in
sub
mov
test
jl
xchg
jge
push
jns
pop
cmp
jp
orl
mov
stc
aaa
jb
mov
enter
pop
gs
aaa
xchg
xchg
mov
jne
push
ja
in
xchg
std
mov
sub
rcrl
dec
addr16
sub
pop
sti
cwtl
push
xor
arpl
and
xchg
mov
lar
adc
cmp
test
lods
iret
je
shlb
test
sub
sbb
outsl
jp
ret
mov
sub
int
fsubl
add
icebp
mov
mov
dec
cmp
mov
aas
rcrb
mov
mov
into
dec
jle
xchg
and
mov
sbb
orb
or
out
sbb
xchg
imulb
test
mov
push
enter
and
jmp
rcll
mov
popa
ror
mov
and
int3
xor
lds
and
mov
rolb
notb
pop
dec
push
jae
xor
out
sbb
inc
loop
mov
inc
push
insw
sbb
rorb
lahf
pusha
push
mov
jb
cs
sub
inc
rorb
int
je
shr
in
jbe
inc
or
cmp
in
sub
scas
lret
or
pusha
dec
sub
mov
int
outsl
fcmovb
out
add
xor
es
and
mov
das
and
mov
add
lods
lods
addl
je
xor
xlat
test
mov
shl
adc
push
adc
je
jmp
pop
xor
imull
mov
xlat
enter
jne
dec
stc
pop
dec
jp
je
xchg
or
inc
leave
stc
in
fwait
imul
cmpsb
int
inc
outsb
adc
inc
repnz
adc
cmp
ret
jl
movl
or
xlat
ja
loop
cmp
dec
push
add
dec
push
int3
int
roll
and
cltd
popa
das
icebp
mov
and
inc
or
das
cmpsb
jp
ror
xor
jle
push
jle
leave
sub
and
test
push
push
cmpsl
jnp
clc
push
test
and
sahf
roll
fistl
xor
mov
lret
add
mov
test
and
and
dec
shrl
dec
outsl
fs
or
loope
xor
andl
mov
test
xchg
test
pop
scas
and
jl
dec
jb
out
and
cmp
mov
loope
push
jg
mov
negb
in
jns
push
je
push
lea
push
dec
outsb
nop
adc
insb
mov
inc
out
test
repnz
pop
cmc
jp
call
cmp
scas
aaa
xchg
in
aas
outsb
cmp
or
bound
xchg
xchg
add
popa
xchg
push
sar
cmp
and
jp
stos
push
call
nop
and
sbb
rcrl
test
pop
lds
mov
push
add
push
out
jecxz
adc
imul
pop
jnp
ret
pop
out
aam
mov
xor
mov
xor
lds
mov
loope
mov
xchg
lds
jno
rcrl
jmp
or
aam
into
add
imul
inc
aam
xor
xor
cmp
pop
shr
push
in
sbb
fldl
inc
popa
cwtl
cmp
pop
mov
aam
pushf
cmp
hlt
test
les
stos
cmp
sbb
outsb
aas
outsb
push
push
and
or
adc
outsl
in
adc
adc
cmp
push
cmp
cmp
jae
inc
int
pcmpgtb
add
ds
mov
mov
or
sarl
test
pop
fldenv
pop
xor
lret
inc
out
rep
sbb
out
scas
rcrl
or
xchg
iret
mov
adc
dec
imull
or
outsl
push
data16
xor
push
mov
adc
inc
mov
inc
mov
xchg
mov
sbb
pusha
mov
xchg
pop
mov
push
cmp
mov
iret
or
aad
jge
add
add
repnz
mov
xchg
fnstsw
divb
sahf
out
jbe
push
pop
jmp
popa
out
out
xchg
mov
hlt
repz
outsl
jne
mov
sahf
stos
popf
mov
leave
scas
shlb
cmc
jecxz
add
test
mov
sti
push
xchg
lock
test
fnsave
test
xor
movsb
int3
lahf
mov
fstps
loope
aad
jle
repnz
stos
aaa
pop
sub
fidivs
bnd
iret
icebp
lods
movsb
push
push
jmp
jecxz
cs
xchg
lods
fldt
mov
inc
pushf
sub
jmp
fwait
loopne
mov
mov
loop
clc
jo
pop
and
ljmp
stc
mov
lock
inc
sbbb
clc
lret
dec
scas
xchg
ljmp
les
pop
xchg
mov
into
fstps
outsb
and
or
sub
adc
in
xchg
or
push
dec
inc
pop
stc
cmp
dec
ja
jmp
iret
int3
ds
in
mov
cmp
jb
mov
jbe
daa
sub
jnp
inc
mulb
push
popf
fsqrt
xor
or
mov
and
mov
dec
jae
les
or
shll
or
sbb
xchg
cmp
fwait
pop
sub
mov
lods
xchg
xlat
push
scas
insl
cmp
leave
inc
dec
das
adc
popf
dec
in
sti
int3
ficomps
or
lahf
push
jbe
sbb
mov
lahf
das
aad
fdivrs
xchg
je
sbb
push
and
pop
push
movsb
in
cmc
rcr
daa
test
xor
fadds
cmp
jbe
mov
sub
adcb
bnd
fcom
insb
inc
jmp
mov
loopne
outsb
add
mov
pop
push
add
mov
les
xor
lret
sahf
pop
repnz
pop
sahf
rolb
stos
imul
stc
inc
push
hlt
rorl
lds
add
imul
jne
ljmp
int
call
dec
in
push
and
push
sbb
sarl
or
xchg
jge
pop
lahf
filds
out
pop
mov
lret
pushf
jmp
cmc
enter
jle
sub
fldcw
and
cmp
sbb
and
cmp
sub
sbb
into
fsts
lock
clc
mov
inc
xchg
mov
xchg
out
mov
flds
mul
sub
cld
call
lret
cmp
mov
les
or
lcall
or
jp
xlat
aad
jmp
insb
push
lods
jno
cmpsl
les
aam
mov
inc
cli
jge
xor
test
repz
ljmp
add
and
iret
push
dec
cmp
cmc
dec
pop
jb
jno
xorl
mov
out
rcrl
imul
lret
leave
cmp
fwait
pop
inc
push
cmp
mov
jle
dec
cwtl
push
inc
aad
lds
icebp
das
pop
pop
pop
mov
mov
inc
leave
popa
sub
sub
cmc
cmp
popa
outsl
jb
push
xchg
mov
outsl
cli
mov
cmpsb
movsb
or
push
jmp
mov
pusha
mov
mov
into
mov
ret
pop
fsubs
xlat
loope
cmp
cmc
mov
rcr
add
sbb
repz
and
or
ljmp
ljmp
or
lea
ljmp
xchg
dec
and
pop
negl
cli
ret
fdiv
cmpsl
push
xor
and
lcall
repnz
cmp
mov
jl
push
out
xchg
loope
jne
xchg
dec
xor
xor
pop
inc
xchg
call
or
divb
lds
push
xchg
les
sub
push
lahf
mov
lds
mov
rcl
sub
int3
scas
shll
scas
rcl
push
into
fcomps
lds
lcall
ror
sti
sarl
cmp
xorl
jge
in
sub
adc
lret
jne
mov
xlat
mov
pop
add
adc
sub
or
dec
lock
add
flds
frstor
cmp
cmp
test
outsb
dec
aaa
out
daa
inc
mov
push
push
or
mov
sub
mov
popa
jnp
aam
je
or
sub
test
pop
push
sbb
push
nop
stos
adc
add
cmp
or
mov
dec
add
out
mov
inc
imul
lock
lds
cld
mov
dec
mov
inc
and
push
mov
mov
adc
xchg
out
das
cmp
and
adc
loopne
das
loopne
adc
std
add
add
mov
test
lret
jne
push
xchg
roll
lahf
cwtl
cli
js
popa
pop
test
movsb
cltd
test
fsubrl
fwait
mov
jbe
cltd
push
push
dec
sbb
push
mov
pusha
shr
and
sbb
xchg
mov
adc
flds
cli
or
xor
test
fidivrs
cli
stos
and
loopne
push
mov
mov
mov
movsb
mov
push
clc
pop
xchg
scas
xchg
mov
jbe
loop
sub
psadbw
gs
cmp
push
add
mov
push
lcall
and
mov
or
fs
bound
dec
cltd
and
out
pop
sbb
lret
leave
fstpl
inc
mov
lahf
jl
in
cmp
in
xor
clc
adc
fwait
mov
inc
andl
pop
or
sub
dec
push
rclb
xor
jg
mov
jne
mov
mov
dec
jp
inc
pop
repz
pop
out
and
and
xor
lret
push
adc
lcall
sti
push
pop
test
mov
dec
adc
inc
repz
xchg
cwtl
iret
mov
mov
aad
out
push
nop
cmp
call
mov
add
dec
popf
xchg
cwtl
out
daa
adc
push
sub
pop
xor
aad
sbbb
hlt
insb
jp
fnsave
scas
sarl
jecxz
les
inc
lock
and
push
lock
insb
loop
in
fs
push
cmpsb
ffreep
pop
push
jae
aad
fimuls
fsubrl
ret
cltd
out
adc
xchg
cmpsb
jae
push
cli
int3
loope
add
xchg
xor
xor
cmp
inc
inc
imul
dec
mov
cmpsb
insl
test
ljmp
mov
xor
mov
push
xor
popa
sbb
orl
inc
inc
ss
fidivrs
or
cli
cltd
pop
icebp
mov
adc
cmc
mov
push
popa
jae
cmp
push
bound
ljmp
pop
cmp
xchg
cwtl
mov
dec
jp
mov
js
mov
mov
es
addr16
pop
lock
test
sub
fdiv
mov
lock
pop
shr
ljmp
sahf
sub
scas
rcr
fstl
dec
cmc
dec
adc
cmp
data16
test
es
jno
icebp
inc
xchg
sub
scas
xor
adc
ljmp
inc
gs
push
lret
repz
add
push
std
sti
sti
mov
xchg
in
ja
mov
out
mov
cmp
mov
inc
add
push
leave
ret
fsubs
sub
jle
enter
inc
leave
adc
inc
mov
lods
mov
leave
lods
loopne
pop
or
aam
fdivrl
repnz
roll
fnstsw
mov
add
stc
jb
xchg
sub
fwait
cwtl
pop
jge
lcall
repz
mov
out
into
rcr
sbb
int3
fwait
sbb
mov
shlb
out
adc
outsb
pop
mov
outsb
dec
es
jb
cmp
scas
icebp
xchg
push
pop
sbb
ret
mov
test
adcl
testl
fbstp
not
inc
jne,pn
jbe
xor
repnz
cmpsb
bound
and
fadds
sarl
out
popa
scas
push
add
adcl
add
dec
out
insl
nop
insb
and
cmp
lcall
popa
adc
adc
xchg
les
sahf
add
dec
jne
popf
cmp
lods
xchg
pop
pop
sub
aaa
add
jl
lock
inc
leave
sbb
mov
push
adc
xchg
sbbl
std
xor
jmp
outsb
stc
gs
push
cmp
std
and
jmp
xlat
iret
xor
outsb
aad
sub
jbe
notl
testb
ror
test
push
xor
out
mov
andl
ret
jne
inc
ss
cmp
lds
ljmp
mov
jnp
aaa
ret
js
std
inc
adc
ret
imul
ds
jp
repnz
mov
sbb
ja
adc
jl
shl
inc
inc
sbb
adc
sub
xchg
andb
jmp
clc
in
scas
dec
dec
call
xlat
push
sbb
pop
mov
insb
icebp
mov
incb
cld
push
in
xor
out
xor
test
scas
inc
repnz
scas
pop
mov
ljmp
scas
jecxz
jbe
pop
mov
mov
pusha
or
inc
mov
sub
xchg
ljmp
frstor
and
lahf
sub
mov
and
and
movsl
jnp
dec
popf
fwait
hlt
mov
sarb
imul
movsb
sbb
pop
lret
cmp
pop
dec
lods
sub
movsl
adc
and
cmpsl
enter
xor
push
jnp
push
test
xchg
fildll
jp
push
iret
mov
inc
scas
fs
sti
cmpsb
inc
jo
mov
rorl
out
fldl
inc
dec
mov
pop
and
jae
clc
add
cmp
push
or
int3
repnz
mov
xor
js
xor
push
and
mov
xor
lret
subb
movsb
dec
cmp
aad
or
int
js
enter
repz
xchg
popl
mov
mov
mov
pop
jp
aas
cmp
mov
and
push
lods
insb
aas
aam
cli
movsb
in
rolb
inc
arpl
iret
rol
pop
push
pop
shll
cmp
out
pop
pop
push
dec
dec
adc
mov
ljmp
dec
dec
hlt
inc
jno
cmpsb
imul
test
call
mov
and
mov
xorl
cmc
popf
xor
fcomip
sbb
adc
lods
mov
fs
sbb
hlt
cld
inc
and
stos
aad
data16
hlt
and
xchg
and
pusha
xor
out
xor
and
mov
jge
dec
movsl
mov
in
ljmp
cwtl
mov
sbb
jo
das
scas
aaa
mov
ss
and
les
push
cmp
push
or
je
lods
mov
adc
mov
push
shll
pusha
pop
xor
sub
sti
iret
mov
and
cmp
push
inc
lock
out
cmpsb
lahf
dec
dec
pop
fists
xor
xor
sub
adcb
sbb
sbb
or
popf
outsl
lea
rolb
out
cmp
insl
xor
cmp
mov
adc
jae
or
push
pop
sub
adcb
jo
addr16
in
int3
add
dec
call
enter
xor
add
mov
outsl
adc
pop
pop
xchg
in
adc
mov
jnp
sub
and
adc
out
mov
popa
stos
ret
jno
repz
outsb
daa
roll
mov
mov
imul
stos
cmp
ret
add
lret
iret
jmp
test
xor
aaa
shl
lahf
repnz
xor
and
pop
mov
mov
push
push
loope
pop
subb
xchg
sahf
fwait
rorb
add
mov
pushw
insb
sub
xor
out
and
xchg
ja
test
cmp
mulb
adc
test
add
pop
imul
lahf
imull
arpl
ss
dec
aam
cmp
and
and
into
and
xchg
lds
add
insl
adc
sbb
fistpll
dec
loop
mov
ret
sti
add
push
imul
popa
cs
xchg
pop
js
int
or
mov
je
std
stc
call
flds
or
je
inc
cmp
icebp
and
lcall
fistpl
mov
scas
lahf
push
stos
cmp
test
loope
inc
xchg
test
hlt
xorb
push
mov
mov
and
xchg
sub
add
nopl
test
ret
incb
inc
imul
ss
pusha
lock
repz
cmp
add
aam
imul
popa
lods
and
std
jne
insb
inc
in
out
fwait
loop
adc
sub
xor
pop
add
call
lock
jo
lods
fbld
adc
push
sub
adc
cmp
notl
aad
clc
ret
ficoms
mov
mov
adc
dec
push
jge
xchg
pusha
add
fdivl
inc
sarb
popf
jb
lock
fisttpll
inc
sbb
movsb
lret
lret
incb
xor
mov
xlat
lods
lods
push
daa
jge
call
xlat
adcl
outsl
call
in
mov
sbb
jbe
orl
rcrb
inc
les
jge
sub
push
mov
dec
fdivp
and
arpl
ja
es
pusha
fwait
inc
test
movsb
jl
mov
ret
pushf
inc
icebp
inc
dec
jmp
lcall
add
nop
sub
fldcw
mov
push
les
out
test
jecxz
fcoms
add
and
pusha
enter
and
pop
xor
cmpl
push
push
cltd
loope
push
test
enter
and
adc
dec
jbe
and
ret
adc
add
insb
std
sub
jl
inc
js
and
sub
dec
hlt
lods
movsb
inc
mov
xlat
xchg
dec
outsl
or
rcrl
pop
lock
dec
sarl
lods
push
fisubrs
inc
in
dec
lahf
xor
imul
js
cli
xor
ret
mov
cld
mov
xchg
push
roll
jg
test
sub
xchg
loop
bound
or
cmp
rolb
add
pop
jl
in
in
xchg
movsl
aaa
inc
scas
gs
xor
sbb
adc
sub
xor
and
jb
mov
xchg
sbb
adc
outsb
jo
shlb
popf
rolb
out
dec
out
in
rcrb
sub
test
daa
lock
loopne
pop
jle
test
mov
fwait
xchg
ljmp
out
repz
out
lds
hlt
loopne
out
fwait
repz
xchg
outsl
leave
mov
inc
dec
add
out
int
hlt
xchg
ss
xlat
insl
ret
shl
mov
ds
frstor
test
jl
push
jbe
popa
imul
jecxz
mov
sub
dec
mov
out
in
int3
push
sbb
outsb
pushf
sbbb
out
xchg
ret
push
dec
adc
imul
stos
jno
xchg
adc
fidivs
mov
cli
addr16
daa
pop
add
lds
sub
and
jns
sub
int3
and
pushf
add
nop
pop
icebp
xchg
adc
sbb
jle
pop
mov
and
or
mov
mov
movsl
sbb
test
or
inc
mov
cld
cmpsb
push
sbb
dec
popf
mov
cmc
in
pop
bswap
mov
mov
lret
in
jecxz
scas
add
jmp
lea
leave
lret
xor
into
jmp
pop
clc
xchg
js
or
stos
mov
insb
push
jae
into
sbb
or
jl
cli
stos
fcoms
neg
jo
shlb
jmp
cmp
add
scas
int3
cld
mov
mov
iret
fldenv
xor
enter
in
popa
xor
arpl
das
dec
add
ret
push
push
pop
mov
lret
sbb
inc
bound
sub
enter
sbb
test
mov
nop
xchg
inc
push
dec
mov
lock
insl
call
cld
jnp
jg
mov
dec
cmpl
pop
dec
and
add
cs
or
dec
loop
mov
out
cmpsl
pop
jg
adc
xchg
mov
fbstp
lock
loop
or
mov
orb
xchg
jp
adc
dec
xchg
mov
cwtl
and
inc
movsb
add
or
nop
dec
pop
enter
ret
ja
or
mov
xchg
je
mov
adc
out
mov
mov
pop
outsb
sbb
jmp
and
fisttps
pusha
cmp
xchg
mov
shlb
arpl
mov
push
jno
in
xchg
js
mov
mov
xchg
push
dec
xor
popf
mov
out
push
or
test
lret
inc
pop
shll
push
xor
pushf
xchg
sub
xor
addr16
mov
sbb
insb
mov
sti
repz
das
rcr
loope
mov
push
mov
lret
sub
jg
mov
or
xor
cmp
aam
shlb
or
loopne
pop
jbe
dec
aad
jns
cmp
shlb
push
pop
subb
jle
sbb
rcll
pop
or
adc
sub
push
push
mov
sbb
push
popa
adc
pop
into
push
mov
fadds
push
mov
fcomip
data16
dec
ja
pop
fwait
lods
aad
movsl
sbb
lahf
insl
ja
sbb
lods
mov
pushf
cmpsb
sbb
mov
lods
dec
outsl
movsb
mov
mov
push
add
xchg
movl
ja
in
jg
popf
mov
gs
xor
fistps
push
fsts
jne
inc
cmp
pop
lret
push
mov
add
sub
xor
addl
cmpsl
mov
xor
scas
cltd
cmc
fsubrp
std
movsl
jae
clc
rcrl
or
xchg
or
dec
xchg
adc
cltd
es
dec
aam
jnp
mov
loope
fistpl
dec
mov
test
movsl
add
daa
shl
mov
in
les
adc
fcomi
aad
jl
or
mov
and
in
jp
pop
lea
mov
push
and
mov
in
dec
adc
cmpl
hlt
xchg
dec
xchg
aad
repnz
aad
popf
jno
imul
xchg
mov
aaa
push
xchg
jp
jno
das
sbb
cli
sub
sti
vpsubusw
iret
cmpsb
adc
in
mov
jo
in
sub
fiadds
or
adc
dec
push
dec
push
addr16
xor
fstl
lods
stos
sti
push
or
xchg
pop
test
mov
mov
jne
mov
jge
mov
jo
cltd
es
dec
jae
sbb
pop
xor
or
sahf
dec
popf
mov
pop
insl
pop
fisubrl
add
and
push
jno
xlat
mov
test
push
xchg
mov
dec
bound
pusha
mov
mov
xchg
test
push
movb
cmp
jmp
xor
fstp
inc
sub
mov
cmpsl
xlat
dec
jmp
mov
mov
xchg
lock
movsl
loope
xchg
scas
mov
or
lods
out
les
mov
fadds
jbe
mov
mov
stc
insb
jge
sti
cwtl
popf
mov
adc
mov
shrb
divps
enter
cmp
push
cmp
add
inc
sbbb
mov
xlat
gs
push
push
jp
mov
xor
stos
mov
push
dec
or
pop
sub
add
dec
push
sub
push
xchg
sub
and
cmp
jmp
fdivl
lret
sub
xlat
mov
mov
out
insb
jge
into
jecxz
aam
lea
pop
jns
jg
subl
dec
pop
arpl
lret
sbb
fidivrl
cmp
aas
not
xchg
sti
jge
lods
rcrl
and
test
and
cmpsl
fsubl
push
sahf
js
movsb
outsl
iret
mov
xor
push
jns
pop
mull
mov
dec
push
jb
adc
int
cmc
xor
sub
aad
dec
push
outsb
dec
dec
inc
movsb
adc
lret
pop
mov
pushf
inc
cmc
xor
scas
sti
mov
faddl
pop
loop
jecxz
icebp
rol
addb
fildll
addr16
out
repz
adc
push
add
and
dec
les
adc
and
lds
mov
les
adc
or
mov
sti
sbb
imul
imul
cmp
nop
jmp
jg
enter
jge
cmp
push
mov
dec
imul
xchg
jne
cmc
fwait
movsb
jmp
sub
out
stos
and
fistps
add
cmpsl
xor
mov
and
loop
clc
sahf
and
fldl
stc
daa
mov
dec
jge
or
rol
in
push
inc
js
mov
fistpll
daa
push
pop
es
add
rolb
nop
call
jg
jns
jge
lds
cmp
jmp
fwait
mov
mov
cmc
fistps
addl
xor
inc
cmp
fsubl
addr16
xor
inc
push
sbb
sub
jl
cs
fcomps
out
xor
or
popa
xor
lret
mov
pop
je
lahf
pop
movsl
adc
decb
xor
aad
adc
xchg
pop
jne
adc
repnz
pop
jecxz
dec
loope
arpl
out
mov
sub
xor
xchg
sub
popf
inc
push
je
sbb
push
push
filds
leave
fs
jae
mov
push
in
sbb
xchg
ror
addl
mov
aaa
sti
and
insb
aam
jp
pop
and
out
adc
jae
jge
outsl
or
push
fs
int3
repz
or
lret
xchg
xchg
lret
mov
sahf
stc
ljmp
sub
ficoml
or
fldz
push
ds
or
cmpsb
out
outsb
mov
dec
jns
std
lods
out
subl
jo
stos
sti
push
je
imulb
cmp
jne
int
testl
out
mov
dec
pop
add
jecxz
pop
ss
mov
mov
mov
add
std
cmpsl
lock
mov
pop
sbb
loope
cmp
fisubl
sbb
pop
push
test
rorl
mov
clc
lret
sub
roll
cmpsl
sbb
movsb
dec
pop
roll
stos
cwtl
repnz
sbb
adc
and
push
scas
adc
fidivs
popf
cmp
insl
sti
out
mov
stos
daa
in
pop
xor
and
data16
subl
or
and
jp
in
pop
mov
shl
sub
clc
test
in
int3
jmp
inc
fs
add
idivl
sbb
cmp
cmp
and
add
das
addb
std
jae
push
mov
inc
push
add
pop
clc
cli
ss
jo
out
pop
mov
sahf
je
arpl
dec
cmp
iret
int3
and
imul
iret
in
mov
dec
push
or
lahf
sbb
movsl
pop
push
jle
mov
std
xchg
fistpl
xor
jne
repnz
cmc
lret
fmull
rol
fs
movsl
xchg
into
out
pop
in
shl
mov
das
lcall
gs
lcall
add
and
xor
inc
mov
cmp
jnp
mov
rolb
andb
test
ret
fdivrs
in
aas
js
fstps
pop
and
xchg
push
cli
test
push
inc
mov
mov
lds
stos
or
leave
jnp
in
lret
jmp
movsl
mov
inc
das
fdivs
xor
sahf
ret
int3
mov
ret
dec
mov
jle
mov
fcompl
ja
sbb
outsb
and
push
into
mov
push
aas
mov
xchg
jle
push
es
add
sti
adc
testb
clc
pop
jl
mov
and
cs
sahf
mov
mov
jge
inc
and
repnz
dec
outsb
and
add
mov
jbe
cmp
cmp
out
aad
call
mov
repnz
mov
ret
inc
fs
in
clc
shlb
add
neg
aas
add
cmp
subb
inc
push
into
mov
stos
xor
fs
mov
aam
nop
push
cmp
mov
inc
cmp
push
sbb
or
push
stos
aas
add
lahf
pop
rol
jmp
out
into
cmp
pop
icebp
add
pop
pop
cli
and
das
push
outsb
sub
cmp
imul
cli
push
inc
jle
arpl
lcall
mov
leave
fwait
hlt
jnp
gs
pop
test
in
daa
stos
dec
lret
arpl
mov
mov
in
out
nop
outsl
and
sub
jo
es
jo
mov
dec
xchg
fistps
xorl
xchg
mov
mov
adc
mov
cmp
ljmp
das
sahf
ret
hlt
mov
jne
inc
cmpsb
add
fdivl
jl
fs
jno
jmp
ret
out
inc
pop
shrl
mov
das
sub
mov
adc
pop
push
mov
cld
or
test
gs
push
test
test
push
popf
dec
scas
or
and
jmp
mov
dec
loopne
jmp
dec
pop
fcmovne
outsb
adc
pusha
es
repnz
inc
xchg
and
dec
inc
out
jp
push
push
out
inc
cmc
fst
jb
shll
push
dec
push
lahf
jle
xchg
lods
mull
jp
fld
jge
mov
mov
test
push
pop
adc
cmp
add
hlt
in
add
jg
and
fdivrs
fbstp
mov
aaa
mov
ret
loopne
mov
movsl
ja
push
rorl
pop
divl
les
in
scas
in
or
pushf
clc
mov
mov
fstpt
out
aad
imul
pop
inc
push
sar
das
inc
das
movsb
xchg
loopne
divl
fs
ja
std
rcrb
mov
push
test
insl
ret
sahf
lahf
fwait
mov
adc
rclb
lahf
test
sti
in
lock
cmc
fnstsw
push
pop
mov
dec
cmp
jecxz
xor
dec
push
push
imul
xor
add
dec
mov
addr16
sbb
loop
addl
filds
mov
jae
lods
test
fmuls
sarl
xor
scas
lcall
jbe
lret
jae
lods
insb
sub
push
roll
jns
repnz
mov
jle
cmp
or
or
mov
inc
js
mov
pushf
out
and
xor
movsw
lret
and
jle
pop
cmpb
push
out
enter
push
lcall
sub
lods
sbb
pop
add
stos
push
fst
or
jbe
sub
insl
sub
xchg
cli
mov
cmc
push
das
push
fldl
mov
sub
pop
push
repz
jnp
inc
iret
fisttps
jo
add
mov
jb
add
out
movsb
push
test
insl
mov
call
int3
push
fisubrl
inc
mov
or
xchg
cmc
cmp
cwtl
pusha
mov
dec
loopne
rcrl
add
mov
scas
ficomps
adc
test
sbb
xor
xor
test
and
mov
ss
not
jno
pop
jo
or
jmp
pop
popf
int3
ja
mov
pop
addr16
cwtl
dec
repnz
iret
testl
jnp
add
rcll
push
decl
mov
filds
test
popa
and
adc
fdivrp
lods
push
mov
sahf
inc
mov
cmp
adc
aad
push
xchg
pop
dec
ljmp
inc
shll
idivb
out
repnz
adc
inc
xor
add
fs
mov
outsb
in
inc
mov
mov
mov
das
mov
inc
lea
and
repnz
push
aas
int3
cld
popf
sti
cmp
scas
fildll
or
aad
or
ljmp
inc
lods
lds
je
call
xchg
xchg
mov
popf
dec
dec
iret
sahf
xchg
and
js
fs
inc
jb
fadds
push
rclb
stos
xor
sub
scas
loop
dec
punpckhwd
sub
lods
cmp
mov
jbe
aas
movsb
pusha
add
mov
and
repnz
in
adcb
cmc
addb
js
in
ficompl
movsb
cltd
jecxz
inc
lcall
es
insb
cmp
cmp
fstl
daa
adc
mov
jns
int3
or
movsl
xor
cwtl
cmpsl
sahf
iret
mov
push
or
call
lock
sub
movsb
ficoml
sbb
inc
movsl
das
xor
mov
cmpsl
cmp
jg
jo
out
and
inc
imul
sub
jno
movsb
and
bound
scas
push
mov
rcl
cmpsl
cmpsl
data16
mov
out
inc
push
cmp
or
je
sbbl
and
lcall
or
pushf
fsubr
pop
mov
mov
fidivl
push
in
xchg
add
fs
xor
xlat
mov
mov
mov
jne
push
sub
adcb
inc
xor
iret
mov
jae
aad
push
stc
into
mov
fcoml
push
mov
cmpsb
push
pop
jb
pop
mov
cli
lock
sti
mov
pop
jne
iret
add
ljmp
xchg
or
sub
mov
enter
jb
lods
movsb
addr16
test
mov
push
stos
das
lahf
shlb
inc
jg
rcl
push
pusha
sbb
push
in
push
push
xor
inc
loopne
cmp
mov
xor
subl
cmp
mov
outsb
xchg
enter
leave
scas
xchg
lret
clc
bound
ficompl
jnp
ret
dec
mov
sbb
ljmp
inc
jecxz
insb
jle
mov
mov
dec
mov
jne
insb
xchg
imul
rcrl
xchg
pop
movsl
jo
pop
jbe
sub
jo
dec
cwtl
imulb
inc
js
jl
mov
ret
or
dec
xor
out
push
xchg
stos
nop
loopne
xor
ds
cld
arpl
jbe
or
pop
and
xor
pop
stos
lea
aaa
inc
mov
lock
fsts
adc
cmp
jle
mov
inc
pusha
cmp
push
dec
scas
jl
fistpl
cmp
out
icebp
ds
mov
aas
pop
sub
dec
xchg
dec
repz
inc
std
fnstenv
xchg
sub
add
inc
fistpl
or
push
aam
push
shrl
je
inc
sub
mov
in
in
cmc
out
stos
int3
sbb
insl
test
cmp
cmp
xlat
add
test
lods
mov
adc
xchg
sbb
sahf
jo
lret
sbbb
mov
notl
mov
mov
pop
cmp
xchg
sahf
outsl
cs
jl
jae
or
push
dec
xor
out
fwait
sbb
cs
cmp
sbb
out
mov
insl
and
mov
shrb
jecxz
inc
aaa
lock
sub
insb
addl
jmp
int
sbb
jne
inc
jle
inc
mov
imul
loope
lds
cs
lahf
adc
push
test
push
xchg
lds
sub
or
xorl
pop
dec
push
rorl
jg
push
lahf
out
leave
add
jns
sub
lret
insl
xchg
mov
xchg
scas
xchg
or
mov
outsb
rolb
mov
jecxz
ret
cltd
cmpsl
mov
jb
dec
scas
fistpl
lea
jnp
fstpt
aaa
loop
fstl
sub
mov
fstpt
push
dec
cli
in
mov
mov
xchg
fcomip
roll
outsb
xchg
add
push
add
jno
fwait
push
lea
add
sbb
xchg
dec
sub
pop
pop
dec
sbb
sbb
inc
ret
iret
lods
adc
mov
xchg
aas
adc
js
and
insb
mov
pop
jb
in
ret
lods
arpl
pop
mov
jp
outsl
jmp
enter
mov
jnp
leave
dec
or
jo
mov
clc
xor
push
mov
aad
testl
repnz
movb
push
lea
iret
mov
jbe
test
scas
jmp
imul
into
fsubp
jno
sbb
jmp
mov
lret
pop
data16
adcl
or
movsb
jo
shrb
imul
test
or
movsb
inc
or
push
xchg
rolb
aas
adc
int
std
push
pop
testb
ret
push
lods
pop
xchg
xchg
insl
xor
sbb
sub
sub
adc
bound
mov
test
cmpsl
cmpb
icebp
lock
sub
xor
push
xor
leave
pop
and
jo
dec
in
jl
pop
rcrl
and
or
shr
scas
out
std
cmp
sub
ds
sub
lods
mov
inc
push
lds
shrl
pop
in
cs
fisttps
inc
mov
sbbb
inc
or
test
mov
out
lods
jo
ss
mov
sub
rclb
sbb
push
ljmp
gs
cmc
scas
or
lds
cmovns
xchg
cmp
add
lock
inc
mov
push
adc
push
cmc
sub
ret
shrl
mov
pop
jnp
call
sub
and
filds
repz
notl
xor
inc
ljmp
mov
mov
lret
cwtl
jo
add
sbb
mov
dec
sub
xchg
dec
lcall
stos
mov
xor
les
scas
jne
loop
pop
loopne
cwtl
sub
add
adc
shr
push
aas
mov
mulb
dec
mov
aas
pushl
stc
and
call
jne
aam
mov
cli
addb
mov
adc
dec
cmp
das
pop
imul
icebp
notl
call
mov
xlat
fimuls
mov
enter
push
fmull
or
mov
mov
ja
pop
imul
cld
outsb
inc
jg
mov
daa
inc
or
pop
dec
andl
xor
bnd
lret
pushf
add
mov
pop
nop
int3
inc
mov
in
hlt
xchg
out
mov
cmp
sbb
jne
mov
sub
popa
xchg
frstor
add
out
cltd
mov
call
mov
dec
push
or
jb
jp
jb
dec
test
and
addr16
sbb
pop
shll
pop
sub
ret
cli
cmp
cmpsl
sub
dec
ljmp
add
xchg
or
push
lea
jl
adc
xchg
les
xchg
or
mov
push
mov
icebp
jo
repnz
xchg
sbb
jne
pop
ja
movsb
push
loopne
cmp
sbb
repz
addr16
and
scas
scas
test
fdivrl
mov
imul
xor
and
pushf
in
jae
icebp
addr16
or
push
es
xchg
xchg
es
xor
lds
movsl
or
sub
js
rol
pop
pushf
stc
popa
mov
jle
sub
stos
push
cmc
fstl
ss
cmpsl
pop
shl
sbb
add
lock
sti
add
mov
pop
repnz
mov
int
out
cli
cwtl
movsb
or
cs
test
inc
push
rcll
hlt
push
push
mov
pop
fwait
push
mov
inc
sbb
or
lret
fwait
sbb
inc
push
clc
inc
pop
cmpsl
xchg
iret
shlb
bound
jp
ljmp
sbb
and
sub
push
popf
inc
inc
leave
push
mov
and
dec
and
push
out
mov
mov
jns
in
xchg
inc
sub
js
and
push
cs
cmp
sub
cld
testb
data16
je
aam
pop
xor
mov
adc
mov
sbb
daa
mov
dec
outsb
fs
adc
mov
fadds
xor
cmp
call
inc
dec
xor
jmp
add
sbb
fmull
adc
or
imul
outsb
loopne
sbb
cmc
jge
push
push
mov
leave
fdivp
sub
mov
fs
cmc
cmpsb
lods
pushf
sub
push
adc
lret
addb
repnz
jo
mov
cmp
das
es
push
jb
and
sub
sahf
or
xor
fsubs
out
pop
and
jb
daa
out
mov
cmc
push
bound
pop
es
loopne
dec
pop
sbb
cmpsl
sarb
push
mov
loopne
add
bound
or
inc
les
sbb
dec
cmp
dec
dec
mov
sbb
test
test
xchg
fisubs
roll
adc
cltd
aad
stos
mov
pop
and
jbe
xor
cmpsb
jecxz
int3
testl
pop
mov
and
scas
frstor
push
dec
mov
inc
pop
loop
and
xor
push
mov
out
call
pop
mov
aaa
pop
getsec
out
inc
lds
nop
and
cmp
push
mov
bound
push
jmp
enter
or
cmp
fidivl
sbb
mov
repz
xchg
mov
cmp
adc
repnz
cmp
jge
test
inc
adc
or
outsb
or
ret
fisttpl
lahf
std
test
xchg
sahf
aas
dec
andb
xchg
std
into
aam
rcrl
fwait
xchg
push
enter
mov
jb
gs
repnz
push
mov
aam
add
mov
mov
or
fsubp
add
sti
bound
mov
mov
aad
dec
mov
jne
sbb
add
movsl
sub
add
mov
dec
inc
mov
dec
lcall
jmp
dec
xlat
mov
stc
xchg
add
dec
pop
les
icebp
inc
scas
inc
dec
xchg
cmp
jne
cmp
fcmove
jle
gs
xor
jne
popl
add
or
fdivl
aam
mov
sbb
lahf
xchg
pop
movsl
sbb
push
mov
mov
or
sub
shll
fistpll
addr16
lret
les
lods
movsb
sbb
hlt
mov
fs
mov
int3
dec
sbbl
xchg
mov
addr16
mov
or
fisubs
jp
mov
fisubs
push
and
test
xor
ljmp
push
addl
inc
out
lcall
adc
jle
jmp
stc
mov
aaa
push
cwtl
into
shrb
repnz
clc
aaa
cmc
mov
cltd
inc
cmp
jmp
jecxz
lcall
inc
push
int3
adc
add
arpl
lret
int
scas
and
dec
mov
orl
fadd
and
push
and
lret
dec
test
pop
cmp
jmp
sub
rcrb
inc
adc
mov
jne
cmp
jmp
and
out
dec
stos
lds
mov
push
loope
and
jbe
cwtl
pop
or
into
shll
dec
cmpsl
jg
jnp
push
inc
xchg
dec
jg
lods
and
mov
aad
and
hlt
popf
mov
jbe
clc
adc
xor
mov
into
xlat
dec
ljmp
adc
cmp
in
outsl
ss
lock
std
dec
dec
loopne
pushf
jmp
movsl
and
xorb
es
jmp
arpl
jne
sbb
push
mov
imul
cmp
into
pop
mov
data16
or
inc
ds
xor
add
xchg
lcall
fsts
mov
inc
or
ds
das
dec
or
icebp
and
jne
cmc
and
sbb
mov
nop
icebp
push
dec
sub
xchg
inc
adc
dec
shr
and
and
sbb
sbb
dec
je
iret
outsb
out
outsl
int3
cwtl
stos
add
fisttpll
mov
cltd
or
aam
push
mov
pop
mov
mov
and
mov
leave
aaa
inc
je
mov
pusha
inc
lds
inc
daa
lret
or
cmp
fcmove
mov
cmp
xor
cmp
clc
sub
sahf
xchg
sub
sbb
cld
cmp
daa
jle
lods
dec
aas
and
arpl
adc
mov
xchg
and
ljmp
repz
dec
or
hlt
cmp
mov
lret
jno,pt
lahf
sub
or
adc
cmp
je
adc
divl
and
or
xchg
ljmp
call
outsl
xor
or
cmc
pop
adc
popa
sub
cmpsl
pop
push
aaa
xor
xchg
lods
mov
lods
aam
or
or
push
sbb
cltd
cmp
xchg
sub
enter
cmc
cmp
and
out
std
pop
sub
insb
out
pop
sbb
add
inc
push
lret
dec
sub
repnz
sbb
or
in
xchg
sti
into
or
pop
jl
daa
js
cld
cmp
cmp
loope
out
pop
pop
adc
sbb
ret
or
inc
sub
pop
jne
push
mov
cmp
xchg
xor
mov
adc
jecxz
add
ss
push
movsb
cmp
jno
push
lea
push
cld
inc
das
mov
push
lea
lds
and
mov
cltd
outsl
clc
pop
xchg
add
das
out
dec
pop
stos
aam
dec
clc
and
std
cmp
arpl
sti
mov
jmp
andb
mov
adc
lods
icebp
subl
mov
lahf
stos
pop
sub
loopne
and
cmp
add
jp
xor
mov
rcll
hlt
xchg
lret
xchg
sub
ror
or
fstl
cmpsl
mov
movsb
lock
ljmp
out
and
sbb
popa
cmpsl
jae
pop
pop
ss
call
pop
adc
inc
icebp
out
shrl
mov
movsl
mov
push
dec
enterw
loope
fnstenv
xor
xchg
test
xchg
xchg
push
shlb
push
stc
pop
sbb
cmp
sbb
enter
clc
ret
xchg
es
or
xor
xor
adc
mov
jae
insb
js
out
xlat
scas
ljmp
call
pop
loopne
pop
pop
in
xor
and
in
adcl
mov
pop
aaa
das
mov
xor
std
loop
pop
inc
int
bound
mov
xlat
adcb
mov
jo
cmpsl
adc
imul
mov
scas
xor
mov
push
pop
pop
sbb
cmp
outsb
std
fistps
add
sub
or
mov
push
mov
pop
fsubs
jno
jns
jno
idivl
jl
push
add
xchg
cmp
push
rcl
jnp
aaa
fs
shr
mov
ja
mov
mov
pop
andl
fincstp
push
cmp
inc
pushl
lods
jb
lods
xchg
adc
inc
out
mov
sbbb
int3
rcrb
mov
mov
sti
cli
fst
mov
aam
sbb
inc
adc
adc
ror
jbe
leave
lock
xchg
cld
popf
and
gs
mov
pop
mov
cwtl
and
push
das
mov
dec
div
rorl
sarl
mov
stc
imul
out
in
in
add
add
pop
dec
insb
mov
ret
xchg
les
and
pop
and
call
push
cmp
call
push
dec
fmuls
push
imul
mov
dec
mov
dec
mov
imul
loopne
mov
jbe
cmp
add
push
out
leave
hlt
jle
lods
xchg
add
mov
adc
clc
leave
mov
mov
popf
jg
xchg
sti
rcl
xchg
popa
push
nop
std
into
nop
addr16
aaa
dec
mov
inc
sbb
aam
mov
nop
pop
mov
push
shlb
lcall
xchg
xchg
cmc
std
sub
fucom
mov
in
xchg
lock
arpl
xchg
dec
mov
add
jnp
popf
les
fwait
pop
insl
movsb
stos
dec
pop
add
stos
fisubrs
pop
xchg
cmp
adc
popf
fwait
or
jg
adc
jae
jnp
inc
add
roll
fisubrs
sahf
mov
mull
rcrl
ffree
mov
dec
pop
pop
jmp
add
pop
mov
ds
ja
jmp
fwait
lock
mov
stc
mov
ss
test
enter
addr16
es
in
pop
or
testl
add
or
xor
comiss
cmpsb
adc
mov
pop
inc
and
or
aas
hlt
pop
scas
cmp
fsubrs
test
sahf
push
xchg
mov
shrb
dec
add
pop
iret
gs
lret
mov
mov
in
cmp
push
or
jb
pushf
fsubrs
and
cmp
push
xlat
jle
aam
push
rorb
jns
scas
pop
and
addr16
out
pop
xor
out
inc
int3
mov
fsubs
mov
int
ret
cmp
add
sbb
add
ret
push
push
push
cs
xchg
cmp
sbb
mov
adc
jg
shll
outsb
jp
mov
push
popl
imul
and
xor
jecxz
ror
lods
xor
cli
jb
push
insl
repnz
mov
test
xchg
sub
aas
mov
mov
jmp
and
pop
ret
mov
jns
testb
cmpsl
pop
sti
das
pop
pop
popa
mov
gs
test
not
sbb
mulb
testb
cmp
push
mov
sub
inc
inc
inc
ds
xor
jp
lds
add
push
sub
fadds
push
repz
ss
adc
enter
cmpsb
adc
adc
mov
stos
jo
xor
or
outsb
jns
xor
repnz
push
jmp
repnz
icebp
dec
mov
push
out
stos
in
cmp
roll
out
int
sbb
sub
testl
test
addr16
and
lret
cli
movsl
xor
cltd
mov
in
in
pop
add
jl
cvtdq2ps
js
test
subl
mov
pop
cmc
divb
loope
shr
cmp
notl
shl
fnstenv
adc
addr16
pop
xor
dec
es
test
lret
pop
adc
fcmovb
shlb
adc
call
cmp
push
mov
icebp
jl
jmp
push
mov
inc
inc
pop
and
ss
push
push
popa
iret
xchg
loop
lahf
test
inc
popf
push
pop
clc
stos
in
or
mov
es
or
push
mov
mov
dec
lret
es
xor
pushf
push
push
repnz
mov
xor
fmul
enter
popf
sbb
xor
fimull
cli
or
dec
sbb
mov
adc
mov
iret
mov
aaa
cmpsb
in
adc
inc
sub
mov
sub
repz
ret
lcall
iret
aas
inc
out
sub
mul
fildll
clc
cli
in
mov
mov
sub
icebp
fprem1
add
fdivrs
xchg
rcrb
ret
push
add
ja
outsl
and
in
test
leave
stos
push
mov
ss
pop
dec
popa
cmp
push
pop
and
hlt
pop
sti
and
fwait
lcall
xor
hlt
and
push
add
arpl
pop
ljmp
in
shrl
mov
test
push
test
sbb
add
aam
jb
inc
loop
sbb
outsb
int
outsb
dec
xor
fimull
mov
dec
test
out
sub
add
pop
pop
cmp
xchg
push
inc
out
out
test
mov
sbb
mov
jnp
cs
inc
out
mov
and
inc
add
lret
ja
mov
rcr
les
xchg
pop
ret
or
lret
hlt
sub
std
sub
xchg
pop
lds
mov
mov
in
cmc
jl
adc
int3
cwtl
sub
jmp
out
xchg
std
movsl
fmull
push
sbb
adcb
ljmp
pop
lods
mov
insl
cmp
les
xor
je
add
xchg
and
movsb
push
insl
push
cwtl
popa
pop
add
imul
cmp
xchg
and
sbb
cli
rclb
xor
inc
aas
pop
test
mov
push
rorl
and
sbb
mov
mov
mov
inc
mov
mov
jge
and
aam
stc
xchg
imul
push
xchg
adc
mov
sbb
lock
test
insl
addb
pop
out
xor
dec
fists
or
mov
and
cmp
xor
mov
insl
int3
enter
cmp
jle
add
cld
inc
jecxz
dec
fisttpl
rclb
cwtl
in
xchg
mov
rcrl
and
stc
sub
mov
lret
js
mov
inc
or
or
mov
mov
lahf
mov
mov
jo
push
pop
push
or
mov
lds
jbe
sub
push
mov
ja
push
ret
es
mov
test
pushf
and
push
push
jp
sub
test
mov
push
cld
mov
fdivrp
adc
mov
fsubp
xchg
mov
inc
subl
jns
rcrl
mov
pop
jmp
push
mov
mov
shlb
xor
dec
inc
mov
negb
mov
jl
adc
inc
sti
mov
jle
push
inc
nop
iret
jmp
mov
test
popf
icebp
xchg
aad
loopne
aam
jns
or
pop
xor
sbbb
scas
adc
or
out
mov
and
xor
pushf
pushw
or
sbb
cli
rcl
push
cmpsl
imul
loope
cld
dec
xchg
shrb
push
mov
xchg
xor
sbb
push
or
mov
dec
cltd
iret
pop
add
xor
cmp
sbb
lea
inc
sub
and
repnz
movsb
fisubl
add
xchg
ret
out
dec
xor
add
xchg
gs
inc
test
imul
cld
test
neg
faddl
mov
test
stos
int3
imul
mov
adc
repz
aad
and
push
mov
shrb
das
xor
dec
pop
rorb
mov
fstps
dec
test
xchg
sbb
inc
pop
in
or
sub
xchg
jg
es
push
fisubs
mov
xchg
dec
dec
inc
scas
lret
and
sbb
mov
mov
in
lods
aad
sbb
push
clc
inc
dec
sbb
fldt
out
jnp
and
mov
adc
jmp
jmp
jno
push
add
lahf
movl
nop
mov
cmc
imul
xchg
add
in
in
pop
push
popa
add
cltd
dec
dec
dec
leave
sub
jo
imul
and
fsubrp
test
cmp
push
jmp
mov
cli
mov
insb
lret
sub
cmpsb
mov
cmc
fdivl
stos
add
cld
jg
push
sbb
pop
rcrb
pop
leave
aas
int3
lea
or
int
scas
outsb
loope
arpl
pop
push
andb
sub
inc
sahf
push
lods
cwtl
lds
ret
out
and
rolb
daa
push
push
sub
scas
jg
adc
jg
sbb
push
loope
pusha
adc
cmpsb
popf
jmp
fs
sahf
or
rolb
fsubs
mov
inc
xor
loopne
push
xchg
and
stc
and
xchg
xor
out
movsl
mov
fldl
lret
or
repz
push
mov
push
adc
mov
jbe
movsb
lea
mov
out
ret
push
cltd
add
mov
repz
jbe
push
xchg
imul
jge
push
and
cmc
jno
dec
cmp
clc
push
xchg
mov
push
rolb
mov
shll
lcall
pop
test
xor
push
mov
fwait
push
mov
push
lcall
mov
xor
sub
xchg
nop
sbb
push
out
lds
mov
int
std
push
pop
mov
jb
mov
push
sbb
jbe
mov
xchg
fs
or
adc
in
jns
pop
paddw
adc
adc
jmp
stos
stos
mov
data16
nop
idiv
iret
fcoml
cmp
push
xchg
mov
das
js
xchg
pop
mov
pop
sub
jno
dec
sbb
jns
sub
push
cld
dec
out
aam
les
stos
add
jmp
jns
and
mov
sub
dec
repnz
or
mov
out
rolb
fstp
add
push
bound
daa
movb
mov
hlt
out
sub
mov
xor
sahf
pop
pop
and
js
xlat
dec
fdivl
cwtl
xchg
call
jno
mov
mov
push
call
cmp
mov
xchg
mov
addl
jl
shrb
movsl
dec
and
ror
adc
jg
sahf
jae
icebp
lds
pop
sbb
pop
inc
ljmp
cli
sbb
xchg
jl
push
mov
aad
adc
cwtl
cmp
movsl
push
lods
pushf
cwtl
mov
mov
pop
mov
mov
inc
sub
int3
push
mov
loope
and
dec
adc
ror
scas
mov
mov
jns
ds
xchg
push
rcrb
inc
lds
mov
dec
aas
cmpsb
add
inc
pop
inc
mov
mov
in
xorb
inc
dec
mov
pop
or
adc
outsl
push
lret
mov
cltd
sbb
jo
mov
mov
dec
mov
iret
mov
dec
pop
loopne
inc
shlb
add
bound
adc
mov
repz
sbb
dec
jae
inc
lret
mov
lds
in
es
out
push
jecxz
jne
add
lods
daa
leave
xor
jb
pop
lahf
inc
adc
push
ss
movb
adc
or
mov
cwtl
mov
aad
cmp
call
pop
push
cmp
test
aaa
aad
mov
ljmp
xchg
stos
cmp
add
ljmp
mov
dec
and
repnz
jmp
filds
and
and
out
push
push
jae
fs
xor
lods
fisttps
cli
into
fldcw
and
add
sbb
and
and
enter
int
push
xchg
lea
in
fcoml
push
jle
or
or
dec
fstpl
shll
sbb
and
mov
cli
mov
je
js
mov
iret
xchg
pop
dec
xlat
jge
add
fnsave
cmp
mov
pop
loop
clc
and
mov
xor
pop
aaa
mov
cmpb
dec
sbb
push
lcall
fmull
pop
mov
mov
daa
out
or
push
xchg
dec
cmp
mov
xchg
out
clc
xchg
fwait
lds
push
rclb
and
arpl
test
outsb
pop
pop
jne
adc
scas
rcl
jmp
mov
enter
je
fcomi
int3
pop
daa
mov
pop
ljmp
mov
mov
lods
std
lea
inc
push
xor
jns
jne
cmp
je
cmpb
mul
aad
out
std
pop
adc
push
mov
fistps
ja
pop
aam
jl
pop
fdivs
sti
aam
or
fs
nop
sub
or
mov
xor
cmpsb
cmp
xlat
add
out
sbb
cmp
dec
gs
sti
mov
shrl
xchg
pop
jb
inc
gs
cmp
out
cltd
fwait
pop
inc
ret
and
dec
sbb
xchg
mov
pop
lret
mov
sub
popf
subl
aad
adc
jo
addr16
lods
jae
jno
mov
inc
sti
and
xor
mov
aaa
push
enter
push
or
lret
cmp
sub
xor
ret
inc
sbb
pop
in
lds
mov
sahf
xor
sbb
and
js
aam
daa
xor
in
cmp
jb
push
adc
lods
adc
in
mov
fabs
xchg
imul
cli
dec
mov
outsb
xor
jmp
int
dec
sub
movsb
cmp
mov
mov
lcall
in
and
sahf
or
xchg
and
mov
scas
fcos
push
or
sbb
mov
sub
out
jnp
arpl
in
adc
mov
stos
sarb
and
add
cli
stos
cmp
mov
fisubrl
cmp
mov
inc
push
pop
pop
cltd
push
rorb
loope
inc
scas
jne
pusha
adc
andb
fdivs
sub
lea
mov
dec
outsl
pop
inc
dec
idiv
iret
xchg
pop
das
into
lea
rcrb
pop
mov
stc
sti
loope
int
fnstsw
clc
imul
call
lret
jno
add
sti
js
xchg
cmp
mov
adc
subb
stos
sbb
sbb
filds
mov
jno
mov
test
shld
test
dec
push
andb
cmp
test
adc
mov
imul
pop
sub
ret
jo
pop
xlat
div
add
vmovd
or
hlt
push
sub
imul
dec
mov
sbb
push
mov
cmp
stc
inc
xor
outsl
sbb
sub
fbld
sub
adc
or
pop
sbb
jle
mov
adcl
sbb
nop
out
call
pop
cmp
daa
jo
fdivrp
push
mov
mov
push
shlb
fs
loop
stc
repz
out
adc
push
sbbb
mov
dec
int
and
and
pop
lahf
pop
sub
sbb
pop
xchg
xchg
xorl
gs
and
add
sbb
scas
outsb
into
jecxz
cmp
sub
ret
sbb
sub
jbe
insb
aaa
inc
jns
int
cmc
jo
or
dec
inc
stos
insl
js
push
ds
aad
cmp
jb
or
jmp
adc
cltd
je
pop
push
xor
sub
addr16
setne
clc
dec
nop
push
xchg
fisttps
fs
insb
lret
mov
inc
inc
js
les
stc
movb
lods
scas
sub
mov
das
lods
stos
jecxz
imul
lods
iret
cli
xchg
mov
or
pusha
push
sbb
fcmovnb
push
clc
or
jge
mov
pop
or
sahf
sbb
pop
mov
fmulp
sbb
or
sub
inc
mov
pop
in
stos
push
or
inc
jg
cli
inc
inc
push
xchg
dec
sub
xchg
ja
ret
lods
jmp
loope
aaa
xchg
cli
loope
repnz
fwait
inc
push
mov
jne
xchg
inc
cwtl
fstps
or
dec
inc
in
push
pop
lods
fimull
leave
cmpsb
or
stos
lea
out
inc
mov
jb
push
stc
xchg
das
in
jecxz
cs
popa
divb
std
sbb
lods
testb
add
pop
sbb
jne
jg
pop
dec
xlat
adc
mov
fnsave
arpl
sbb
popa
or
xlat
test
push
inc
aas
sbb
out
push
nop
sbb
enter
mov
movsl
sub
sbb
push
mov
and
fcmovnbe
fs
lods
in
sahf
jo
aaa
dec
xor
sbbb
sahf
jae
aam
stc
or
movsl
movsl
jo
jne
pop
pop
inc
aaa
in
lds
xchg
or
lahf
std
jmp
mov
jb
scas
mov
lret
adc
cmp
sarb
pop
mov
imul
leave
fs
gs
add
xor
dec
xor
cmpsl
pop
fld
call
iret
mov
scas
aaa
push
std
fadd
out
mov
xlat
cmc
pop
mov
push
cmpsl
cltd
adc
mov
xlat
and
repz
fmuls
mov
push
icebp
lds
movsb
mov
cli
adc
jmp
push
cmp
add
dec
mov
es
mov
pop
sahf
mov
mov
pop
mov
daa
xor
push
dec
repnz
jbe
dec
pusha
das
dec
push
ljmp
in
cmc
xor
mov
repnz
outsl
sti
pop
inc
jae
mov
push
lea
xchg
lret
adc
jg
sbb
jg
xor
inc
test
push
flds
add
lock
std
outsb
xchg
sbb
push
shll
gs
xlat
fdivl
add
jmp
setp
imul
cmp
or
and
push
jmp
and
pop
sbb
xor
je
pushf
mov
pop
ljmp
pushf
inc
push
and
fistpl
dec
xchg
pop
mov
push
pop
gs
lds
mov
nop
ljmp
stos
mov
xchg
das
xchg
jmp
es
imul
out
stos
test
cmp
int3
insl
aad
sub
ja
xchg
mov
sbb
jnp
cli
pop
add
dec
js
ja
jge
adc
adc
pop
dec
adc
mov
stos
pusha
call
outsl
les
out
xchg
fs
movl
pop
sub
stos
dec
sub
and
and
adc
pop
andnps
xorl
xor
fmull
movsb
and
pop
clc
repz
dec
push
shlb
xchg
mov
push
or
mov
sub
mov
in
mov
xor
inc
shl
ljmp
outsw
xchg
insb
test
inc
icebp
call
das
je
inc
out
repnz
cld
js
mov
std
daa
stos
sarb
adc
clc
xor
cmp
sbb
pop
jnp
test
ss
and
gs
mov
jg
dec
sub
out
add
movsl
es
and
adc
orl
pop
mov
dec
fnsave
stc
mov
push
dec
pop
arpl
int3
or
repz
inc
setb
enter
or
xlat
dec
scas
push
out
adc
dec
mov
aam
out
cli
stos
ficoml
shll
dec
push
pop
cmp
jae
aas
pop
sub
push
call
mov
add
xchg
xchg
movsb
mov
out
lea
ljmp
and
pop
in
sub
add
in
jp
insl
or
fnsave
mov
xor
sti
add
push
arpl
dec
xor
cmp
aad
mov
stos
out
or
and
pop
dec
adc
das
pop
cmp
scas
cmp
mov
add
in
gs
jg
fsubrp
pop
sahf
gs
pop
cmpsb
repnz
lock
or
pop
lods
mov
push
push
pop
and
xor
xchg
ret
ret
test
xor
jecxz
mov
sti
scas
push
data16
cmc
mov
outsb
int3
inc
xorb
enter
icebp
dec
cmpb
push
lcall
cmp
jb
jle
xchg
icebp
popf
cmpsl
jp
in
sbbb
ret
imul
test
jns
or
adc
inc
fildl
dec
dec
fsts
gs
and
adc
sbbb
pop
xlat
inc
shr
test
shrb
sahf
pop
sub
add
cmc
mov
nop
mov
out
and
jbe
jo
sbb
pop
push
lret
addr16
pusha
jecxz
aam
or
push
mov
xor
nop
jl
das
lds
movsb
lcall
out
xchg
pop
add
push
stos
in
adc
movsl
es
jno
inc
pop
jb
inc
mov
push
xchg
dec
cmpsl
sbb
mov
lret
hlt
ljmp
mov
dec
cmpsb
lods
gs
inc
outsl
and
xchg
mov
pushf
ficomps
xor
adc
fadds
mov
jb
enter
mov
mov
xchg
xlat
pop
jle
adc
push
aad
jp
mov
loopne
adc
ja
inc
in
cli
sbb
fwait
cmc
inc
dec
cld
cld
out
dec
stos
andl
xchg
or
out
xchg
test
fldt
adc
sbb
xor
ficompl
cmpsb
loopne
dec
loop
or
clc
ja
cmpsl
jp
pop
pop
xor
lods
lahf
ja
das
pop
pop
in
jge
add
lahf
inc
lcall
jb
jbe
ja
nop
or
inc
cmovb
hlt
andb
xchg
jecxz
repz
sarb
aaa
scas
cmc
cld
jecxz
ja
into
xor
std
sub
loop
iret
int
outsl
sti
xlat
aad
jb
mov
les
cmc
int3
and
data16
and
mov
lea
xchg
test
mov
pop
repnz
into
idivb
inc
std
xchg
adc
mov
mov
xchg
rorl
sub
ljmp
ljmp
imul
add
movb
or
xchg
mov
or
sbb
cmc
les
sub
xor
mov
pop
cmp
sbb
int
arpl
into
stos
les
addr16
pusha
test
jns
popa
pop
ret
dec
jno
xchg
out
ss
xchg
xchg
es
cmp
push
mov
out
xchg
hlt
push
repnz
daa
negl
shrb
xor
aaa
mov
cltd
rclb
jno
icebp
lods
stos
push
fwait
xor
fistps
sbb
mov
push
shlb
xchg
add
xor
loopne
aad
aad
mov
cld
cld
in
push
xchg
dec
fnstsw
xor
stos
and
dec
sbb
stos
rcrl
dec
fldenv
xorb
mov
cli
inc
mov
sti
xchg
aad
jno,pt
pop
repz
iret
inc
test
dec
test
addr16
rorb
mov
ja
in
fbstp
mov
mov
xchg
test
cmc
push
sbbb
push
pusha
or
xchg
mov
movl
push
sbb
sub
ss
sbb
cmc
cmp
pop
repz
mov
mov
mov
xor
add
cmp
mov
mov
imul
xorb
mov
cld
lret
out
out
cmp
dec
shrl
jle
out
mov
pop
push
adc
shll
lods
mov
jns
sub
dec
sahf
mov
lea
imul
cld
mov
test
inc
pop
mov
pop
sbb
lea
repnz
or
jno
jg
cmp
movsb
push
pop
mov
adc
mulb
mov
xor
scas
mov
xor
nop
mov
je
fists
sub
adc
mov
cmp
pushf
fdivr
cld
xor
idivb
jno
lret
sub
mov
or
push
and
mov
sub
xor
adc
loope
xor
add
aam
rorb
mov
lock
bound
pop
cmp
cld
xchg
xchg
das
add
push
mov
push
pop
ja
daa
inc
pop
push
add
leave
jae
dec
xor
ror
cltd
mov
out
push
xor
push
sbb
xor
ljmp
sbb
call
mov
sbb
popf
sbb
cld
bound
repnz
inc
enter
stc
aas
cmp
mov
mov
test
push
cmp
pusha
iret
sbb
ljmp
add
adc
push
cmp
cld
pop
sub
rcrb
adc
push
or
dec
shrb
stos
test
jmp
dec
and
data16
lock
dec
jg
test
dec
pop
mov
push
and
mov
xchg
das
adc
or
jns
popf
dec
cmpsb
inc
cs
mov
in
pop
addr16
xor
call
movsb
adc
dec
jmp
in
mov
cltd
cmp
cmp
sti
in
sbb
in
sub
and
ja
inc
mov
push
sbb
adc
ret
inc
xor
dec
cs
stos
frstor
add
enter
jnp
dec
dec
push
sarl
int3
cmp
push
int3
inc
fdivl
repnz
inc
mov
lret
and
aad
xchg
mov
xchg
je
and
daa
push
mov
xchg
cmpsl
cltd
loop
pop
pusha
js
add
jnp
push
sub
jp
das
dec
out
xor
idivb
fcmovnu
push
daa
std
adc
mov
shrb
test
andl
push
dec
add
icebp
inc
jnp
fcoms
mov
add
jbe
cmp
cld
cmp
ds
shlb
pop
mov
mov
mov
xchg
adc
add
jecxz
push
cmpsl
jp
xchg
in
cmp
std
mov
cltd
out
cltd
or
sbb
adc
hlt
dec
jnp
pushf
jnp
mov
jle
cmp
sub
inc
cltd
pop
je
mov
inc
cli
xchg
sbb
pop
outsl
jbe
lahf
adc
in
inc
loop
inc
mov
mov
xor
call
or
adc
mov
hlt
dec
push
lock
movsl
pop
hlt
inc
test
loop
push
xor
icebp
hlt
fiadds
leave
lods
stc
inc
imul
xchg
jmp
push
and
stc
int3
cld
loope
mov
sti
pushf
cmp
addr16
cmp
stos
repnz
xchg
cs
adc
lret
cmpsb
xor
mov
les
jo
and
in
frstor
hlt
lock
adc
repz
test
test
fmuls
xor
into
leave
pop
mov
mov
ret
or
daa
inc
xchg
das
sbb
cwtl
jge
add
les
sub
push
popa
popf
test
loop
popf
mov
sbb
mov
push
xchg
lods
das
xorl
dec
jae
int3
mov
mov
sbb
and
insb
insl
testb
outsl
lods
jo
cltd
stc
xor
add
dec
int
shlb
shl
adc
adcb
push
sbb
outsl
xlat
jg
mov
adc
or
add
mov
adc
outsl
or
and
sbb
cmp
pop
mov
sub
cmp
inc
cmp
add
sub
aam
sub
test
mov
in
jno
sbb
push
ds
cmp
cltd
jge,pt
lret
add
cli
sahf
xchg
pop
outsb
inc
orl
repnz
mov
repnz
ljmp
mov
or
imul
cmp
adc
in
sub
adc
xchg
xchg
test
sub
fldl
lret
je
xchg
out
incl
xchg
inc
add
xchg
push
int3
les
cmp
out
jg
sbb
iret
out
sbb
jl
out
xor
es
or
scas
add
test
loope
sbb
pop
insl
popf
inc
add
or
or
dec
arpl
add
test
repnz
subl
das
or
add
inc
adc
and
sub
xor
adc
repnz
and
cmc
movsb
adc
js
sbb
jns
inc
add
rcrb
push
cmp
jo
push
push
es
dec
jp
mov
dec
jno
adc
inc
mov
leave
fprem1
xor
push
mov
shl
mov
pop
lret
lods
mov
cld
inc
out
popf
and
aas
movlps
into
test
pop
dec
sbb
jge
fwait
lods
lea
cmpsl
aas
das
cmp
mov
xchg
push
test
lret
orb
push
popf
cld
cmpsl
xchg
jecxz
and
pop
lret
insl
mov
ret
adc
push
and
adc
push
stc
pop
cmp
add
pop
xchg
shrb
out
jg
call
das
pop
sbb
stos
jecxz
insb
xchg
into
test
mov
subl
je
add
mov
arpl
sbb
call
xor
mov
jge
movsl
lea
ds
or
mov
sub
std
sbb
xchg
mov
xor
int
xchg
fsub
jo
jecxz
sub
dec
xchg
jne
pusha
and
lret
pushf
or
sbbl
pop
add
xlat
cld
loop
xor
arpl
sub
cmpsb
sahf
jmp
pop
out
xchg
jle
add
ds
sbb
mov
int
cmc
and
ja
out
fbld
inc
push
fsubrs
push
imul
imul
cmp
jl
mov
jbe
lods
cmpsl
fs
xor
xchg
scas
jb
xchg
daa
popf
sti
inc
xchg
or
and
fistpll
xchg
fldt
xlat
push
xchg
rcr
aaa
daa
cmp
jbe
push
sarb
cmp
fidivl
jae
nop
ret
or
pop
push
pop
fs
push
icebp
pop
lods
mov
or
in
loope
sahf
inc
push
cs
in
lret
add
xor
add
adc
jne
test
or
ret
testl
xor
leave
roll
sub
mov
pusha
bound
aaa
stos
ficoms
push
mov
and
sti
outsb
movl
fisubrl
sub
pop
pop
xor
adc
push
addr16
mov
repnz
out
sti
aam
sarb
mov
int
imul
push
cmc
out
mov
jb
outsb
sbb
test
inc
mov
mov
mov
mov
mov
adc
dec
cld
jno
mov
sbb
lret
enter
xor
fstl
dec
movsl
jmp
or
mov
mov
xchg
repnz
push
and
jb
in
jns
xor
lods
into
aaa
ds
enter
push
cmp
mov
addr16
in
dec
jl
xlat
leave
mov
xlat
shlb
push
iret
add
inc
jecxz
and
leave
scas
das
and
inc
call
jmp
cld
jae
mov
add
imul
out
mov
pusha
sub
add
out
aaa
add
xor
mov
out
cli
mov
sub
movsl
xor
lds
sub
push
jno
dec
push
xchg
les
jb
or
es
call
ficompl
int
iret
je
jbe
push
inc
je
mov
mov
mov
xchg
movsb
jb
imul
mov
arpl
shrl
out
inc
movsl
sub
xchg
cmp
adc
cmp
sub
jae
xchg
push
pop
mov
mov
cmp
loopne
lods
push
popa
shll
add
ficoml
pop
stos
int3
cld
and
push
cmc
pop
dec
lods
sahf
daa
cltd
and
dec
lahf
out
push
sbb
and
dec
cmp
push
push
mov
mov
mov
rorb
fs
test
mov
pop
mov
test
inc
movsl
push
cmc
ss
hlt
pushf
shlb
cmp
lret
aaa
fucomi
sti
adc
mov
mov
std
cmc
lods
das
and
les
push
js
stos
loop
sbb
mov
movsl
lcall
adcl
dec
pop
xchg
mov
sbb
push
ret
cli
mov
push
hlt
loopne
push
xor
stc
cmpsl
incl
insl
imul
jno
jp
cli
fs
adc
gs
pop
pop
mov
sub
cmp
ret
cmp
add
inc
int
int
cmp
leave
mov
stc
cmpl
arpl
jp
xchg
out
pop
push
out
mov
mov
xchg
mov
mov
mov
mov
cmp
icebp
popf
push
jno
test
loop
ds
jno
lds
repz
cmp
lcall
mov
lods
fcomp
test
idivl
and
aas
insl
daa
add
out
mov
jmp
movl
mov
mov
dec
je
pop
roll
mov
inc
sub
mov
xor
popl
cmpsl
inc
repnz
mov
or
outsl
or
shlb
out
outsb
stc
sub
xor
sub
and
jnp
sub
inc
jle
mov
insl
dec
sub
sbb
and
enter
ja
jb
jno
sahf
movsb
imulb
push
jmp
sbb
push
push
pushf
pop
or
mov
nop
push
shrb
dec
outsb
inc
cmp
aaa
divb
xor
jmp
pop
insb
sub
mov
les
xchg
push
xchg
mov
pusha
std
or
addb
int3
cltd
dec
nop
and
into
cs
outsl
shlb
dec
icebp
push
fwait
lods
popa
fisubs
aad
popa
test
adc
jmp
inc
ja
adc
inc
sahf
pusha
dec
scas
mov
divl
pop
iret
jnp
loope
not
push
stos
push
sub
xchg
aad
mov
ja
adc
and
mov
inc
out
ss
jns
xchg
scas
and
cmpsl
fiaddl
inc
mov
ja
pop
fldt
add
jl
lods
arpl
mov
cmp
shll
shlb
cmp
sbb
inc
movsl
int
push
mov
mov
call
ja
add
scas
imul
ja
arpl
aas
inc
xor
pextrw
nop
aam
arpl
lock
mov
sbb
test
adc
mov
int3
inc
or
outsb
fs
js
cli
shll
daa
adc
int
sub
or
mov
js
add
mov
push
xor
mov
xchg
lea
imul
sub
pop
adc
clc
insl
fst
pop
lods
pop
bound
pop
imul
cmp
xchg
inc
pop
mov
mov
test
cwtl
mov
sub
sbb
mov
adc
repnz
xorb
pushf
add
imul
insl
test
test
push
inc
testb
sti
mov
lahf
mov
and
mov
fcomps
outsb
mov
or
pusha
sub
out
lea
xchg
aad
dec
adc
popa
add
xchg
mov
nop
rolb
inc
hlt
sub
fcompl
dec
push
fs
or
xchg
mov
jp
and
inc
sbbb
jns
and
stc
pop
lods
inc
fcmovb
jo
jp
sub
out
jecxz
shrl
mov
movsl
lcall
dec
loop
push
mov
xor
pop
jle
cmc
mov
rorb
popf
int
outsb
xchg
dec
push
mov
aaa
xchg
nop
mov
aaa
shrl
into
aad
push
inc
sbb
insb
scas
cmp
rcll
dec
sbb
rolb
loopne
sti
and
pop
imull
in
adc
jmp
aas
sub
xor
inc
pushf
test
outsl
nop
loop
pop
lods
in
push
xchg
add
or
sub
sbb
add
inc
push
push
leave
xor
rolb
push
adc
fbstp
pop
int
mov
rcr
jb
and
loope
je
test
outsl
pop
jo
dec
cmp
test
push
xor
mov
inc
or
sbb
int3
rcrl
xor
je
lock
bound
dec
jecxz
pop
or
out
sub
xor
imul
jecxz
sti
sbb
jbe
cltd
fcomi
movsb
cmp
dec
and
sub
mov
popa
insl
push
pusha
shll
loope
test
mov
dec
in
daa
test
cmp
lahf
inc
lret
outsl
ret
mov
and
in
sbb
cltd
int
and
jno
cmpsl
es
or
push
dec
lcall
sub
stos
test
and
push
xor
cli
insb
adc
rol
rolb
jl
sub
jns
inc
adc
cmp
jno
mov
scas
pop
dec
push
cmp
jg
add
add
sbb
pop
inc
mov
fnstenv
sub
in
jns
push
decl
dec
mov
popf
push
dec
lret
push
sbb
lock
dec
mov
stc
xor
call
insl
xor
inc
mov
inc
or
mov
sarb
sbb
imul
addr16
in
add
mov
sti
pop
add
ds
movsb
pop
stos
jne
jecxz
jecxz
outsb
mov
inc
cmp
adcl
lock
cmpsl
outsb
es
and
js
mov
pop
jbe
mov
jmp
sbb
mov
rorb
sub
cmp
add
push
ret
jbe
mov
dec
ret
movsb
mov
fimuls
addr16
mov
repz
jg
ret
scas
xchg
imul
adc
adc
xchg
mov
iret
sub
stc
lcall
ds
xor
or
pop
pusha
das
test
ljmp
in
xchg
mov
pop
jl
and
mov
lahf
stos
in
push
insb
dec
rorb
gs
adc
lcall
ret
sub
out
add
inc
jl
pop
jbe
imul
jp,pt
and
jle
mov
enter
in
mull
pop
aad
or
add
jae
push
cmp
mov
gs
lods
mov
pop
or
aaa
stos
add
ss
stos
mov
out
stc
xlat
int3
les
mov
mov
fs
leave
push
test
or
lods
int3
push
pop
jg
pop
popa
adc
dec
test
push
mov
pop
or
insl
jns
aam
xor
scas
sub
inc
stc
inc
rcr
xchg
stos
mov
mov
inc
and
and
push
cld
fsubl
jne
and
aas
ret
or
dec
in
movsb
je
xchg
xlat
jl
hlt
pop
mov
jecxz
out
cmpl
test
jno
mov
adc
cwtl
push
mov
or
les
mov
or
aam
pop
inc
sbb
lock
xor
cmp
fwait
mov
test
jge
in
movsl
pop
dec
mov
jge
xchg
mov
aaa
push
loopne
jbe
fdivrp
ret
mov
mov
adc
jle
movsb
lds
inc
je
cwtl
addr16
sub
rcll
cmp
in
lret
lahf
and
xchg
movsb
xchg
shrb
push
push
jecxz
lds
ljmp
loope
dec
stos
sbb
scas
loop
push
dec
adc
add
and
ja
ficoml
movsb
cmp
sub
push
adc
jecxz
sub
xor
mov
pop
imul
adc
dec
sti
andb
sub
out
cmpsl
jns
adc
fiadds
inc
js
push
dec
add
jmp
jb
inc
xor
cmpsb
out
addr16
push
jmp
insb
outsb
popa
into
inc
inc
sbb
cmp
adc
out
in
call
into
popa
rcrl
add
lock
dec
fs
or
mov
lahf
push
xchg
test
aam
xlat
int3
cli
clc
arpl
lcall
inc
or
cmpsl
sbb
pop
mov
loopne
fdivrl
inc
sti
sahf
jns
pop
cmp
jmp
inc
mov
sbb
inc
gs
push
jne
shll
sbb
in
fdivl
pop
dec
nop
leave
fxch
dec
cmp
lea
enter
ljmp
sub
jecxz
mov
and
ds
mov
push
add
xor
movsl
insl
jmp
sbb
repz
or
ljmp
pushf
fldenv
mov
mov
les
mov
push
sbb
add
mov
dec
fistpl
jl
xchg
in
sahf
add
cmp
rcll
aad
sub
xor
jns
pop
push
xchg
ljmp
mov
imul
das
sub
lds
addb
test
leave
pop
and
push
mov
mov
cli
mov
inc
pop
insb
int3
jae
push
adc
es
adc
repz
sub
xchg
mov
sub
test
jle
add
shll
dec
fsts
std
out
fwait
cmp
push
mov
adcl
pop
imul
cmp
adc
movsl
mov
sub
push
lret
xorl
jl
mov
mov
xlat
imul
lods
gs
mov
add
in
test
xor
pusha
insb
mov
call
xor
mov
outsb
sbb
les
lock
cmp
aas
pusha
popf
stos
mov
arpl
jl
mov
lods
xchg
jb
dec
jle
out
roll
cs
mov
outsl
lods
ds
dec
test
cltd
subb
sbb
cmpb
pop
pop
popa
movsb
lret
pop
fdiv
roll
call
mov
dec
add
sub
loopne
popl
pop
repnz
and
test
mov
sub
pop
pop
xor
shrl
ss
fcmovb
repnz
into
lret
xor
mov
inc
lods
or
mov
xchg
lods
jo
cmp
mov
mov
dec
loope
cmp
insl
popa
mov
lock
bound
mov
and
xchg
pop
and
rcll
and
imul
out
inc
xchg
fisttpll
js
inc
sbb
aas
mov
rclb
jl
push
ret
stos
jae
lock
mov
jecxz
pop
loopne
ss
inc
mov
add
cmp
les
cld
jg
insl
cmp
das
mov
lods
rolb
pop
mov
sbbl
fistl
sbb
mov
xchg
test
loop
sub
shll
ret
rcrb
testb
push
adc
movsl
inc
or
sbb
sbb
in
test
int
or
pop
jle
mov
frstor
adc
and
loopne
fdivrl
inc
das
mov
nop
aas
lcall
aam
fdiv
pusha
fwait
jae
bound
aaa
and
scas
arpl
stos
jbe
and
shll
push
dec
cmc
or
pop
je
shll
in
push
pop
jb
int3
push
xchg
jmp
push
sub
mov
push
push
imul
mov
adc
push
icebp
inc
push
lret
popf
jl
pop
mov
ds
mov
xor
int
push
test
inc
cmc
xorl
or
in
adc
mov
mov
insb
repz
and
and
lret
ljmp
aad
mov
adc
outsb
pop
sbb
push
jb
stc
out
inc
out
cmp
xchg
jecxz
aas
and
gs
jne
iret
mov
mov
insb
frstor
in
test
mov
cmp
pop
mov
xor
add
jl
add
data16
mov
pop
xchg
out
ret
sti
fnstenv
in
rolb
jg
lcall
pop
push
daa
jnp
lods
ret
cmp
pop
jg
loope
mov
jmp
cmp
stos
dec
cli
shll
outsl
mov
sub
mov
js
jne
jbe
mov
pop
and
jl
dec
inc
lcall
mov
sbb
test
xor
arpl
mov
repz
mov
dec
jns
cmp
jbe
fimull
nop
andb
stos
cmp
push
mov
pop
pushf
add
loope
jns
popa
gs
out
pushf
stos
lods
sbb
sub
lea
mov
ficoml
jnp
mov
mov
stos
out
sarb
cmpsl
aaa
mov
inc
ret
cmpsl
and
mov
pusha
sub
push
test
call
or
fmuls
dec
mull
sti
stos
and
or
mov
xchg
add
cwtl
mov
push
xor
or
push
iret
in
jns
cmc
mulb
icebp
shr
add
xchg
testl
ljmp
movl
push
stc
mov
lahf
sbb
push
jmp
or
mov
fstps
cs
jp
arpl
mov
push
neg
call
jl
sub
outsb
push
in
mov
cli
dec
jb
stc
out
mov
mov
xor
sahf
loop
clc
xor
in
stos
in
int
mov
cmpsb
lahf
and
add
ret
loope
xlat
sbb
cmp
icebp
in
mov
push
jnp
sbb
cli
inc
orb
pushl
jmp
and
push
mov
lahf
push
js
add
push
popf
xchg
or
dec
mov
jecxz
shrl
ja
lds
cmpsb
sub
add
les
adc
push
sar
jne
sti
push
adc
xchg
mov
push
xchg
movl
adc
adc
hlt
in
ds
adc
sbb
cmpsb
pop
or
mov
xchg
xor
call
xchg
inc
sub
lods
aaa
jmp
out
mov
pushf
sub
inc
pop
push
adc
dec
ljmp
cmc
jo
lahf
xchg
inc
int
aaa
testl
dec
cmp
sub
inc
xor
push
mov
hlt
test
lds
mov
stc
pop
ficomps
inc
mov
add
arpl
cmp
pop
dec
dec
and
fiaddl
dec
xor
push
cmp
xchg
or
pop
arpl
and
call
out
mov
lock
in
sub
test
out
push
test
push
xchg
xor
push
sub
ja
repz
pop
adc
pop
aad
push
push
sub
das
sarb
xchg
cmp
adc
ja
pop
pop
daa
ja
pop
mov
or
jo
gs
je
fisubl
std
xor
push
jle
ja
fnstcw
and
xor
nop
movsl
mov
lods
mov
sub
cmp
rorl
sbb
fidivrl
das
ret
cs
push
loop
mov
jno
or
adc
mov
icebp
cmp
jmp
out
sarl
insl
adc
mov
push
clc
cwtl
insl
aas
mov
xchg
lock
shlb
or
push
xor
xor
scas
lret
addr16
addr16
or
cld
mov
out
mov
frstor
mov
bound
lds
push
pop
cmp
out
je
mov
inc
into
mov
lret
jo
es
adc
xor
mov
xor
xor
sbb
lcall
sbb
adc
push
mov
push
addr16
cmpsl
jp
lcall
stos
out
and
fcompl
dec
inc
jne
mov
stos
jmp
jns
dec
mov
inc
adc
into
xor
popf
inc
or
call
repz
mov
rorb
nop
lret
cltd
fimull
mov
clc
mov
push
inc
inc
add
or
xor
test
jbe
popf
push
adc
insb
xor
xchg
sub
add
sbb
testb
rcr
outsl
xchg
imul
mov
pop
pcmpgtd
hlt
push
ljmp
mov
add
rdpmc
sub
push
push
dec
hlt
push
scas
mov
pop
jne
mov
sahf
cmp
stos
stos
and
add
repnz
jecxz
adc
in
mov
mov
movsb
in
or
lahf
push
xchg
sbb
cmpb
mov
jmp
sbb
negb
cmp
or
addr16
push
jg
imul
or
add
jns
mov
add
jp
out
xchg
cmpsb
pop
scas
mov
inc
xchg
sub
or
loopne
pop
pusha
je
test
push
inc
pop
outsb
mov
mov
sub
sti
je
adc
dec
pop
adc
mov
rol
xchg
sub
jne
enter
mov
mov
stos
mov
xor
add
out
loop
xchg
movsb
lock
jne
cmpsb
subl
add
pushf
pop
arpl
xor
dec
inc
push
add
jle
add
xchg
cmpsb
fbstp
jne
inc
jae
push
cmp
push
push
sbb
lock
test
xchg
mov
jo
mov
lahf
pop
push
andb
cmpsb
cmp
movsl
in
cmp
repz
gs
and
cmpsb
cwtl
lods
mov
int3
daa
cmp
jo
movsl
ret
push
inc
pop
add
vmwrite
mov
adc
pop
sbb
xor
scas
add
shl
adc
fdivl
mov
xchg
dec
stos
fsts
dec
decb
pop
das
xor
lcall
rolb
jle
dec
dec
sub
xor
inc
cmpsb
jbe
and
jp
sbb
push
xlat
sub
iret
push
ljmp
adc
xchg
push
xor
pop
cmp
sbb
sahf
add
out
sbb
repnz
dec
mov
mov
jp
mov
adc
dec
jle
mov
xchg
ss
xchg
fisubrs
into
cmp
cmp
dec
xchg
mov
ficompl
movsb
dec
out
je
stos
mov
dec
enter
xchg
add
mov
cmp
inc
stos
mov
xchg
mov
and
adc
xchg
bound
pop
fbld
xchg
cwtl
call
lods
test
push
les
repnz
inc
lock
sbb
jbe
es
inc
das
ret
sti
pop
ja
lret
pop
sbb
add
pop
fldcw
and
jmp
repz
jo
or
fstpl
out
xlat
xorl
fstl
push
pop
pop
lret
add
adc
sbb
xchg
dec
dec
mov
movsl
or
adc
xor
sub
sbb
inc
and
sub
stc
prefetch
jge
shrl
outsb
push
push
mov
xor
es
out
jmp
or
data16
sbb
cmp
addr16
cltd
out
sbb
xor
sbb
jne
loop
push
dec
test
cs
scas
cmp
dec
aas
lcall
ficomps
lds
mov
mov
inc
cli
jmp
jle
shlb
stos
daa
insb
pop
scas
mov
ljmp
in
cwtl
call
mov
cmpsl
jns
ljmp
ret
outsl
fidivl
ret
add
les
lock
mov
adc
and
loop
dec
or
pop
fsts
lea
mov
cmp
sbb
std
cli
xchg
cwtl
mov
cmp
pop
sahf
sbb
scas
inc
aas
xchg
mov
jnp
add
imul
cmp
add
cld
imul
enter
fs
out
notrack
jmp
adc
xchg
or
push
add
nop
dec
cs
int3
out
mov
les
negl
pusha
xor
sbb
sbb
and
push
sbb
xlat
rclb
std
jmp
inc
pop
sub
inc
mov
insb
cmp
mov
ss
test
mov
shlb
lods
mov
jae
das
cmpsl
test
es
pop
mov
push
cli
xchg
mov
push
imul
and
in
int3
nop
les
pop
sub
in
ret
lds
pusha
mov
adc
xchg
int3
stos
or
cmc
mov
repz
xor
cmp
mov
pop
aam
pop
loopne
dec
xchg
mov
push
int
pop
pop
dec
js
dec
and
mov
ss
xor
mov
lods
cwtl
cmp
sarl
pop
call
jns
mov
sbb
ds
pushl
push
add
filds
jo
cmc
xor
sub
clc
int3
loope
or
mov
pop
push
xor
pop
ficoms
push
sub
mov
stos
sub
hlt
mov
mov
cmpsl
pop
jl
aam
pop
sbb
in
dec
add
xor
mov
and
and
icebp
lahf
mov
outsb
mov
addr16
arpl
sbb
stos
loop
andl
xchg
xlat
stos
mov
daa
mov
push
xchg
sahf
add
pushf
mov
inc
pop
fwait
xchg
inc
cmpsb
adc
mov
imul
aas
adc
hlt
xor
dec
or
xor
add
sbb
lahf
push
xor
pop
xchg
je
push
clc
or
pop
mov
mov
mov
outsl
arpl
mov
inc
imul
and
lds
xchg
cmp
imul
mov
xchg
aam
hlt
xchg
jb
dec
cmpl
jmp
inc
mov
mov
push
inc
xor
mov
gs
jnp
repnz
xchg
push
and
xchg
stos
jmp
push
adc
adc
andb
shlb
movsl
or
cmpsb
in
mov
push
addb
rorb
xor
stos
pcmpgtb
sbb
idivb
xchg
sub
mov
and
shll
inc
dec
sti
imul
rcrb
leave
mov
repnz
cmp
movsb
xor
jg
rclb
sub
sbb
cwtl
rorl
jo
sbb
cmc
fisubrl
lahf
pop
mov
pop
mov
jecxz
push
xor
sub
sbb
cli
jl
mov
mov
les
dec
in
and
xchg
sbb
and
out
add
xchg
out
inc
neg
stc
mov
cmp
cmp
bound
loope
xor
xchg
mov
push
and
cwtl
hlt
add
sub
lea
cli
mov
jb
pop
aad
adc
sbb
fwait
stc
dec
call
jnp
add
into
mov
loopne
cmp
inc
popf
push
mov
fs
xor
mov
mov
inc
movb
mov
rorl
int
add
insl
mov
sahf
xor
sbb
dec
sbb
fdivrs
sub
repz
je
les
leave
or
leave
scas
pop
push
jp
je
mov
add
mov
jbe
loopne
dec
xor
fisubrl
aad
mov
mov
fstl
mov
inc
pop
bound
sub
stos
sbb
push
imul
mov
cmpsl
bound
leave
les
fsts
dec
in
scas
lret
out
scas
call
dec
pop
inc
inc
pop
hlt
add
xchg
aaa
or
adc
addr16
mov
mov
pop
loope
scas
xlat
push
jae
ret
dec
xor
and
jo
je
fldt
cmpsl
pop
in
push
mov
push
fwait
in
cmp
shrb
pushf
xchg
and
out
sub
push
or
push
mov
or
add
add
add
push
and
cmp
lods
hlt
js
pusha
inc
idivb
jp
les
cmpsb
pop
jnp
xor
ljmp
out
mov
lds
cmpb
cwtl
dec
or
loopne
adc
fxtract
repz
fisubl
mov
xlat
test
xchg
pop
fmull
jnp
jle
mov
cmp
pop
sbb
ds
cmp
repnz
sub
mov
cmp
pusha
int
shrl
idivl
ret
fdivl
lea
fsubrp
inc
cmc
sub
ja
dec
dec
or
or
inc
nop
push
popa
xchg
mov
jae
jmp
xchg
jb
sar
inc
cmpsb
out
pusha
mov
insb
inc
repnz
lds
gs
int
fdivrp
dec
rep
jne
pop
and
repnz
mov
addr16
dec
popa
in
pop
mov
dec
sbb
cmp
jo
push
mov
fdivl
imul
adc
pushf
or
js
leave
mov
sub
sbb
rcll
dec
sub
test
or
fwait
cmp
jp
mov
lods
ljmp
outsb
sbb
loop
dec
test
push
and
push
mov
mov
ja
jmp
inc
jmp
adc
outsl
xchg
test
or
push
lcall
xor
sub
and
xor
push
fdivrs
lret
int
gs
fwait
add
xlat
test
cmpsl
fadds
xchg
fisubs
xchg
ljmp
xlat
fdivrp
loopne
mov
movb
dec
pop
cmc
cmp
mov
sarb
clc
lods
inc
and
mov
repnz
jnp
fwait
mov
out
fwait
mov
cmpsb
gs
out
mov
repnz
pop
outsb
add
arpl
sub
cmpsl
xlat
push
xchg
pmullw
sahf
dec
inc
movsb
push
mov
dec
adc
cltd
lret
lock
or
xchg
xchg
inc
sbb
ret
push
sub
push
add
sbb
idivl
jns
or
xchg
fildl
cld
mov
jns
into
or
xchg
stos
xchg
stos
sbb
cli
pushf
pop
mov
ss
rcrb
sub
adc
stos
xor
lret
and
adc
add
paddd
or
cmp
lcall
movsl
sbbb
mov
or
jne
hlt
mov
scas
push
adc
push
jbe
in
add
mov
fnstsw
and
loop
mov
cmp
add
or
out
and
push
scas
push
cmp
add
xor
push
push
das
mov
ss
add
jae
pop
add
jnp
pop
in
inc
inc
ss
ret
mov
and
movsl
sbb
fsubrs
mov
in
cmc
cmpb
sub
mov
xchg
inc
in
and
add
cmp
insb
je
in
push
xchg
pop
sbb
hlt
cmp
out
or
lcall
std
js
mov
int
xchg
ret
data16
movsb
gs
xchg
inc
pop
in
hlt
rclb
sbb
inc
and
cmp
nop
loopne
sbb
mov
xor
loopne
pop
ret
push
mov
out
add
outsb
adc
scas
inc
cmpsb
in
sub
scas
mov
in
pushf
cmp
jb
fucomi
pop
add
mov
add
lods
sbb
and
fstp
insl
sbb
xor
loope
testb
mov
scas
and
and
xchg
int3
add
lock
push
push
lret
int3
push
lds
in
xchg
pop
add
aad
cld
outsl
test
push
inc
js
inc
jnp
int3
add
xchg
pop
fdivrs
xchg
pop
pop
movsb
and
adc
pop
xor
in
imul
aaa
cli
cli
and
jns
pushf
cmp
sahf
pop
aam
enter
xor
in
cmp
lea
popa
xchg
add
stos
fldenv
jns
mov
or
stc
hlt
loope
mov
test
push
jnp
loope
adc
mull
inc
sub
jle
ss
jl
push
add
sbb
mov
aaa
inc
negb
adc
inc
mov
aaa
jmp
xchg
adc
xlat
cmp
push
decb
push
aas
or
pop
addr16
scas
stc
out
cmp
mov
sbbl
out
fidivs
add
mov
stos
dec
mov
sbb
xchg
repnz
push
outsl
sbb
or
repnz
testl
in
sbb
sti
lea
inc
mov
ret
out
movaps
xchg
in
mov
push
or
and
outsl
cmp
movsb
sub
int3
jle
jecxz
adc
mov
xchg
test
rorl
shr
in
ret
es
cmp
add
pusha
mov
sahf
and
push
jp
leave
inc
push
faddl
stos
mov
jle
cld
jge
pop
jb
add
jecxz
pop
adc
inc
adc
push
fidivl
je
ja
xor
xchg
lock
pop
arpl
xchg
in
add
mov
imul
dec
scas
adc
ds
push
fnsave
jb
shlb
cmc
jle
inc
xchg
fwait
loope
shlb
add
pop
test
add
int3
add
pop
loope
push
push
push
adc
add
xchg
es
pop
xchg
dec
outsb
pop
iret
test
xor
in
icebp
xor
ret
sbb
int
lea
divl
jg
dec
int
sbb
fsubrp
pop
loop
push
int3
jg
xor
inc
xor
adc
jo
push
dec
pop
cmp
and
movsl
rorl
sbb
das
or
frstor
pop
pop
jne
cmp
mov
das
in
push
lcall
fisubrs
push
inc
mov
rcr
test
push
adc
hlt
jbe
mov
je
mov
out
cld
fdivr
xor
or
shll
call
inc
cld
test
std
xchg
xlat
stc
xchg
inc
or
loop
add
xchg
push
sub
je
in
ret
les
imul
rol
xchg
dec
cmp
mov
sbb
lods
loope
sarb
jle
mov
sub
repz
and
dec
add
je
dec
dec
sahf
roll
test
pop
push
cmp
sub
cmc
xchg
popa
pop
lcall
adc
cmc
pop
sbb
sbb
push
push
mov
mull
xor
push
fwait
fs
cld
xchg
push
popf
or
addr16
lret
data16
push
stos
pop
fisubl
add
es
in
pop
inc
cli
dec
xchg
outsl
cmp
nop
jecxz
pop
cmp
push
fstps
push
cmp
jae
mov
xlat
aas
push
mov
ss
lock
inc
mov
gs
mov
sub
mov
pop
aas
adc
sbb
mov
scas
outsb
divl
addr16
pop
movl
xchg
mov
stos
push
pop
popf
sub
add
ret
incb
test
xchg
mov
mov
add
pop
pop
gs
adc
lret
enter
mov
mov
mov
and
rcrl
inc
mov
subl
mov
push
mov
fsubrp
sub
ret
inc
mov
out
ret
pop
cmp
pop
sbb
rcr
adc
cmp
sub
out
xor
ret
push
mov
scas
loopne
cmpsb
adc
cmpsb
dec
add
jb
push
enter
push
insl
mov
out
out
inc
insl
pop
mov
popa
or
fstl
jmp
aam
aas
fiadds
sarl
jl
test
inc
fistpll
add
sbb
jge
nop
push
cmp
dec
add
adc
frstor
xchg
add
push
cmpsb
mov
pop
test
arpl
xor
addr16
sub
jae
arpl
shl
xor
mov
pushf
sbb
adc
mov
mov
bound
into
pop
js
cmp
int
jbe
jle
inc
outsb
test
mov
xchg
out
push
sub
jns
sub
mov
shlb
jmp
jecxz
pop
mov
xchg
cmp
clc
add
cmpsl
jge
gs
pop
scas
lea
mov
sbb
pop
mov
std
inc
sbb
jbe
pop
adc
jne
pop
imul
ret
adc
sub
es
ffree
push
pop
inc
mov
or
repnz
mov
jge
gs
lds
add
mov
pushf
addr16
inc
xor
fcoms
cmc
mov
arpl
jnp
insb
imul
neg
cmc
jnp
iret
insb
jne
add
xchg
sbb
add
sub
imulb
ja
pop
xlat
sbb
dec
popa
add
and
cmpsb
jecxz
out
test
sub
jo
ljmp
aad
push
cmp
jl
divb
jns
push
push
and
daa
ja
pusha
mov
lahf
push
stc
mov
nop
mov
inc
mov
mov
inc
xorl
xlat
and
pop
cmpsb
mov
mov
xchg
es
les
out
xor
cmpb
mov
mov
in
pusha
fnsave
daa
sar
fdivrs
aad
daa
shlb
push
jnp
adc
hlt
bound
jle
in
pop
mov
jmp
dec
push
adc
mov
jmp
dec
and
rcll
stos
add
sub
jnp
mov
inc
cmp
mov
das
push
std
dec
jp
mov
mov
rorl
or
jp
in
gs
jp
add
sub
mov
out
xchg
aad
push
adc
sbb
ds
ljmp
and
mov
loop
push
push
outsb
loope
push
loopne
movsl
int
insb
xchg
cmp
fildl
pusha
adc
lcall
test
sahf
gs
mov
idivl
test
outsl
jo
aad
push
or
jecxz
out
dec
jmp
jle
inc
sub
add
cmc
xchg
and
aad
xor
xchg
jl
or
lock
loop
sbb
stos
mov
gs
pop
test
and
mov
or
insl
in
xchg
sub
adc
decl
lods
push
adc
dec
jo
lret
nop
js
or
mov
mov
clc
mov
sahf
mov
es
or
and
inc
cmp
jne
sub
mov
jnp
and
cmp
mov
enter
aaa
inc
outsl
mov
push
dec
jecxz
movsb
mov
stc
mov
mov
push
jne
faddl
mov
sub
jno
sbb
movsl
mov
inc
mov
iret
test
push
cli
lahf
and
add
mov
out
movsb
mov
bound
nop
pop
ds
rcr
xor
xchg
in
call
stos
pop
cmp
sub
in
stc
cmc
adc
fiadds
mov
fldt
jecxz
adcb
daa
outsb
rcr
idivb
jge
jl
add
mov
fs
out
sbb
leave
popa
mov
outsl
push
and
imul
cmp
dec
or
pop
dec
sbb
movsb
sub
sub
fisubs
inc
mov
and
mov
cmp
imul
ret
jnp
sarl
int3
dec
movl
push
xor
xor
adc
js
sub
mov
js
jp
sub
mov
testl
jp
test
xchg
mov
cmp
push
in
push
sub
movsb
popf
add
icebp
adc
and
js
adc
loop
shll
jne
out
pop
xor
ret
push
out
aad
clc
lds
pop
or
push
add
je
sbb
jl
xor
pop
scas
jo
cmpsb
dec
or
cmp
sbb
scas
ss
lcall
lret
jbe
ffreep
or
mov
nop
aad
xchg
jae
sub
and
jmp
cmp
clc
push
xor
in
xor
aam
testl
add
xor
stc
shll
add
jb
sbbb
adc
nop
aam
pop
jp
sbb
mov
idivl
loope
add
inc
xor
mov
jecxz
xor
sub
cmp
mov
jp
inc
adc
xchg
dec
mov
mov
cmpsl
mov
inc
jg
lods
or
cmpsb
cmc
jl
scas
test
pusha
pop
fadd
mov
out
push
sahf
xor
dec
mov
or
adc
dec
aaa
adc
pop
stos
xchg
push
aam
mov
xchg
xchg
mov
push
xor
lcall
ret
inc
mov
jg
sbbb
cs
pop
leave
pop
ja
fdivp
mov
adc
push
or
fimuls
outsb
rcll
cwtl
inc
jecxz
mov
scas
out
sti
bound
xchg
mov
repz
stc
out
jb
lods
jo
loope
mov
daa
mov
rorb
push
scas
adc
and
imul
dec
mov
add
push
sub
shr
mov
pop
stos
inc
shll
test
push
ja
fsubrl
mov
fldenv
pop
stos
add
shll
pusha
adc
test
into
jo
adc
adc
stc
pop
inc
cmp
mov
jle
adc
icebp
test
scas
out
pop
jecxz
fwait
push
sub
in
daa
nop
ja
mov
dec
xchg
inc
mov
cli
ss
aad
fwait
cmpsl
xchg
ror
and
inc
mov
leave
and
ds
inc
sub
xchg
incb
jle
push
call
push
add
mov
loop
mov
cmp
jecxz
test
xchg
mov
pop
inc
jmp
mov
int3
shlb
push
das
stos
adc
stc
mov
cmpsb
pop
sbb
xor
std
xchg
es
inc
fsts
int3
mov
aad
pushf
push
or
loopne
pop
outsl
ret
pop
sub
jecxz
mov
ret
cmp
xor
js
neg
outsl
add
mov
std
dec
inc
cmpsl
cmp
ret
insb
aad
push
push
inc
pop
inc
sub
movsl
xor
stos
ret
jge
stos
sub
decb
les
aad
cmc
jmp
out
sarb
clc
inc
add
int3
push
mov
out
cmc
ljmp
xchg
or
adc
mov
fisubrl
push
jnp
fstpl
outsb
cmc
stos
or
mov
repz
pop
mov
adc
mov
xchg
jecxz
loop
jae
inc
ror
aaa
test
ret
in
in
xchg
dec
and
inc
sub
aas
or
sub
mov
add
iret
push
mov
mov
dec
add
and
sahf
lret
inc
lahf
mov
mov
jp
xchg
loop
mov
mov
movsl
js
lea
lods
aaa
std
movsb
fs
adc
xchg
les
mov
jns
mov
or
stos
cmp
push
mov
in
enter
jnp
leave
cmpsl
push
fsubrp
in
sub
mov
jg
push
or
mov
popf
in
sbb
lds
xchg
int
in
or
ret
and
in
iret
pop
dec
cmp
shl
bound
sahf
outsl
sbb
out
cmp
cld
clc
jl
sbb
cld
test
nop
decb
rcrl
or
ficompl
sti
cmp
iret
jge
sti
push
push
cmp
inc
sbb
pusha
sbb
dec
pop
mov
frstor
fcmove
sub
loope
les
leave
mov
jns
mov
movsb
nop
sbb
jecxz
lret
pop
insl
scas
enter
jle
jge
dec
mov
shlb
stc
arpl
mov
push
pop
pushl
inc
lds
inc
ljmp
xchg
push
push
loopne
jns
test
xlat
iret
fisubrs
xor
adc
jbe
imul
sbb
mov
frstor
lock
pop
jae
lret
aam
add
fsubrl
xlat
mov
cs
xchg
test
inc
inc
pop
fs
fidivs
cmpsl
frstor
add
mov
cmp
out
xor
jp
js
jmp
xor
pop
xchg
shrl
addl
daa
test
insl
dec
incl
in
jl
outsb
sub
dec
mov
push
fstpt
sbb
sbb
inc
adc
sti
mov
lret
adc
aam
leave
sub
sbb
cltd
shl
mov
cs
pop
ret
jl
fsub
cmp
mov
adc
dec
loopne
jns
leave
loope
lcall
adc
iret
clc
xchg
enter
stos
pop
xchg
imulb
and
daa
ret
adc
mov
mov
ret
inc
jmp
aad
jge
mov
ds
xchg
hlt
stos
shlb
lods
jle
leave
sub
mov
jle
pop
and
mov
xchg
mov
mov
mul
imul
or
jle
stos
lret
mov
mov
mov
mov
fwait
xchg
push
movsb
lcall
addr16
cmp
push
push
push
mov
xchg
call
fdivrp
pop
lret
stc
sub
pop
xor
adc
push
loopne
movl
mov
mov
and
mov
sub
cld
xor
mov
sub
push
push
stc
outsl
stos
sbb
jecxz
xchg
je
mov
imul
arpl
pop
aas
fs
mov
xchg
imul
hlt
loopne
mov
sub
movsb
lock
or
adcb
mov
fs
push
popa
sahf
loopne
xlat
adc
sbb
repz
mov
call
mov
cmp
jle
mov
adc
or
es
xchg
les
jnp
jnp
popa
mov
mov
sub
inc
popf
insl
clc
cmpsb
lds
push
jbe
pop
mov
cwtl
mov
push
in
mov
ljmp
imul
or
rcrb
push
cltd
pushf
mov
cltd
inc
enter
and
pop
dec
mov
adc
shl
outsl
test
sti
or
inc
dec
test
adc
repnz
rorb
fsubrs
inc
push
jns
loop
cli
mov
mov
pop
imul
adc
inc
test
xor
sub
mov
jno
sbb
pop
dec
pop
xchg
mov
and
mov
sub
mov
jmp
dec
inc
mov
stos
jne
xchg
mov
sub
stos
aad
rol
mov
aad
ss
mov
movsb
inc
repnz
inc
rorl
ja,pn
pop
daa
inc
and
mov
or
lret
xorb
out
adc
jns
sar
and
mov
test
outsl
std
and
mov
sti
push
inc
fdivp
mov
out
fs
mov
and
mov
ret
aam
push
daa
pop
dec
and
pop
je
add
flds
lahf
insb
icebp
lahf
es
test
mov
lret
pushf
gs
ljmp
xchg
inc
sets
and
inc
or
lock
cmpsb
out
mov
int3
add
pop
ficomps
jge
in
sub
and
jbe
shrb
add
test
imul
sbb
pop
nop
fcomps
ret
xor
sbb
mov
fildl
es
rolb
pcmpeqd
stc
mov
or
cmp
addr16
mov
xor
push
sbbl
leave
stos
das
addr16
mov
fnstenv
aam
mov
inc
mov
push
and
cmc
xlat
lods
lods
not
inc
dec
add
rcr
push
fstps
jb
lret
pop
jmp
sub
mov
jnp
stos
mov
lret
sbb
mov
fisubl
inc
jb
hlt
outsb
inc
lret
mov
dec
xchg
insb
repz
roll
cmc
dec
xchg
sar
xor
jl
push
je
aas
cmpsl
test
fdivp
fwait
xor
add
lret
sub
jl
repz
pop
sahf
iret
xor
jg
or
movsb
cmp
sub
sbbl
int3
aaa
cltd
fwait
pop
cmp
js
gs
in
pop
dec
int3
test
movsl
add
ret
push
push
aaa
lret
mov
rorb
jns
mov
bound
jne
out
fwait
lds
inc
pop
sbb
lret
adc
jae
add
mov
out
movsl
dec
rcl
cwtl
addb
adcl
cmpsl
sbbb
addr16
mov
or
jle
movsb
mov
sbb
jne
int3
mov
lea
insb
popf
jns
ds
sbb
mov
popf
arpl
add
sbb
mov
addr16
arpl
jnp
mov
imul
mov
pushf
icebp
les
dec
loope
les
pop
sar
mov
jo
add
dec
cmp
jge
push
loopne
inc
cmp
aad
aad
push
sub
xchg
pushf
fwait
test
clc
into
adcb
or
or
into
loop
repnz
or
sbb
sti
xor
adc
cmpsb
fldenv
sbb
aas
xchg
jno
xor
or
jns
pop
lods
sbb
in
push
pop
xchg
push
dec
cmp
mov
je
push
adc
jo
stos
stc
and
jnp
sbb
push
push
adc
xchg
stos
pop
push
fs
rcrl
pop
and
push
sub
ret
mov
xor
dec
pop
lret
lods
dec
cli
mov
nop
sub
stos
mov
jae
cmpsb
inc
push
loope
icebp
jl
fildll
orl
and
mov
sbb
push
cltd
negb
nop
faddp
pop
dec
pop
cltd
cmp
dec
in
mov
in
dec
add
scas
iret
scas
loop
jns
mov
stc
fadds
jns
leave
adc
outsl
xor
mov
andb
jl
lods
out
out
inc
loopne
inc
into
mov
mov
stos
mov
push
push
int
mov
mov
imul
sbb
xchg
cwtl
std
cs
loop
xchg
push
mov
test
sbb
mov
out
adc
adc
lret
add
pop
stc
dec
jns
imul
and
mov
jmp
loope
fstl
stc
xlat
and
nop
stos
dec
sarl
sbb
roll
mov
and
jne
fidivl
add
fstl
ja
inc
cmp
sbb
clc
adc
push
sbb
int3
in
lock
add
mov
xchg
cmp
push
xor
add
xchg
subb
ja
xor
js
rolb
leave
sub
add
dec
idivl
mov
cmp
subl
leave
imul
jp
inc
jge
fcomps
cmp
rep
fsub
les
fwait
xor
push
pop
imul
cmp
push
shlb
je
mov
fsubl
scas
mov
inc
push
aam
leave
ret
jb
fst
jo
or
mov
mov
gs
pop
lret
mov
pop
das
pop
sub
ss
mov
sub
pop
or
mov
mov
mov
out
pusha
out
cmp
push
inc
std
outsl
imul
lea
xor
sub
jbe
lea
xor
stos
imul
stos
loop
dec
mov
mov
xchg
sahf
pop
enter
jae
and
sarb
pop
add
jp
fisubl
adc
repz
xchg
fisttpl
lds
mov
xchg
out
pop
addl
outsb
mov
xchg
clc
mov
or
scas
fnsave
jb
add
ret
fidivl
stos
cmp
adc
clc
cmp
out
xor
push
push
add
xchg
fstps
in
fs
pop
data16
sbb
jg
mov
mov
ds
aam
cmpsb
adc
es
stos
jl
pop
mov
mov
xlat
dec
andps
mov
mov
mov
imul
lahf
xchg
mov
jmp
push
icebp
cmp
dec
scas
or
xor
psrld
pop
ret
pusha
data16
sub
adc
cmp
mov
jae
jno
xchg
test
add
pop
fsubs
test
push
andb
pop
mov
xor
gs
rol
lock
aad
jge
pop
daa
test
jae
jecxz
sub
test
out
add
push
dec
in
rol
sbb
scas
jae
xor
inc
cld
cmp
cmp
lods
inc
fidivs
test
or
push
roll
pop
int3
ss
repnz
mov
adc
cs
outsl
mov
and
dec
ret
mov
sub
or
pop
cmp
mov
dec
bound
in
xchg
inc
mov
inc
inc
outsb
inc
mov
jge
adc
clc
and
fstpt
repnz
lods
bound
fistps
cwtl
xchg
sub
dec
dec
call
push
out
mov
repz
fmul
popl
inc
sbb
negb
repnz
shr
insl
ljmp
mov
imul
xlat
jae
insl
jb
insl
mov
push
mov
mov
add
arpl
sub
arpl
sub
out
jp
push
adc
inc
lret
push
xchg
jno
add
mov
out
mov
inc
mov
push
mov
or
push
dec
movsb
pop
in
shlb
repz
icebp
idivb
xor
add
inc
sbb
mov
mov
mov
loopne
xor
or
mov
pusha
jmp
dec
push
xchg
fdivl
call
push
clc
xor
xchg
mov
or
or
mov
and
nop
cld
je
stos
out
cmp
gs
mov
bound
sbb
aas
or
cld
xor
movsl
push
inc
sub
out
cmp
jb
popa
sub
xor
jl
aad
mov
jmp
lcall
aad
xchg
xchg
aam
xchg
adc
sti
xor
push
add
scas
nop
loop
push
fmuls
and
xchg
mov
pop
in
popf
std
dec
dec
mov
ljmp
cltd
sti
lea
mov
pop
add
ficoml
call
out
lods
test
in
inc
dec
data16
inc
pop
mov
stos
mov
sbb
movsb
in
push
cmp
sub
pop
mov
jp
ja
mov
jmp
push
sub
xlat
mov
es
fnsave
pop
mov
imull
push
mov
pop
sub
and
aas
clc
loop
jl
stos
push
xchg
jae
mov
or
mov
testl
push
hlt
inc
das
bt
test
jno
out
and
push
cmp
sahf
sbb
test
lds
faddp
pop
or
push
adc
dec
xchg
pop
add
lret
out
push
daa
mov
pop
lods
pop
sahf
xchg
pusha
nop
inc
mov
sbb
pop
and
adc
in
clc
or
test
test
xor
or
mov
in
sub
push
in
out
xchg
or
mov
loope
out
push
xchg
fwait
sbb
into
test
jp
dec
pushf
push
je
sbb
aas
jns
push
shrl
cmp
pop
data16
dec
stos
roll
call
mov
and
mov
cmp
fistps
shll
adc
out
push
or
scas
sbb
test
sti
or
in
push
repnz
xchg
push
cwtl
dec
mov
adc
xchg
int3
pop
pusha
lock
add
cmc
adc
outsl
mov
movsb
mov
push
mov
sbb
mov
sub
jns
inc
and
stos
sub
mov
daa
add
sbb
jl
mov
inc
push
xor
adc
xor
cli
mov
push
cmpsb
adc
shll
xchg
nop
adc
in
add
dec
ss
cmp
or
pushf
movsl
mov
scas
test
into
mov
pop
push
aaa
gs
hlt
xchg
in
scas
or
out
add
and
movsl
cli
cwtl
cs
test
jmp
mov
jg
sbb
sbb
call
ss
iret
ficoml
lea
cmp
sti
sarb
ss
push
repz
and
or
fcompl
sub
inc
mov
leave
push
pop
outsb
push
sbb
cltd
sbb
test
inc
sbb
inc
flds
sub
mov
pop
pop
pop
out
and
jo
inc
lods
adc
ljmp
andb
lret
aam
push
ljmp
cmpsl
jp
sub
enter
loope
lea
lds
repz
pop
add
mov
sub
cwtl
lret
add
sub
and
pop
dec
sub
push
das
or
add
fs
cltd
inc
mov
mov
pop
mov
test
adc
xchg
adc
dec
rorl
or
and
call
xchg
xchg
xor
inc
pop
mov
insl
sub
shl
and
add
xchg
cmp
sbb
dec
cld
pop
dec
xchg
or
push
ficompl
or
dec
jecxz
mov
roll
fwait
hlt
out
jmp
mov
mov
mov
sbb
adc
jmp
sub
cld
loopne
fldt
dec
inc
pop
fwait
sub
dec
xor
and
or
lret
push
out
xor
add
aas
pop
cmp
psubsb
pslld
mov
nop
inc
stos
js
mov
int3
cmp
sarl
dec
fcmovu
push
repnz
fisubs
push
push
inc
xchg
leave
jle
sub
fisubl
cmovg
xor
pop
or
pop
daa
hlt
mov
insl
cli
aas
jp
xor
jl
or
lock
sub
shlb
subl
mov
push
add
fwait
or
or
fbstp
sub
lcall
into
jnp
repz
sahf
andl
test
inc
jp
shl
dec
mov
sbb
cmp
sub
test
dec
xor
std
adc
jge
and
jne
jmp
ficoml
pop
mov
test
out
lahf
rcrl
rclb
aad
push
stos
test
addl
dec
add
lods
xchg
cmpsb
add
cmp
jb
add
mov
jmp
sbb
sbb
sub
cmc
add
test
inc
mov
pop
addl
push
int3
imul
or
push
bnd
push
outsl
jnp
pop
fs
popa
cmp
setae
mov
enter
jl
ljmp
ret
aam
mov
idivl
mov
ret
loop
dec
adc
mov
scas
mov
jae
push
int
xchg
adc
adc
mov
and
jb
iret
mov
jo
inc
pop
addr16
sbb
and
add
dec
cmp
jge
aas
sub
mov
and
push
lahf
push
mov
enter
fsubrl
repz
mov
xchg
repnz
sbb
dec
cli
or
jl
lods
xor
mov
pushf
pop
fisttpll
jecxz
lock
inc
mov
std
lahf
ret
jge
pop
and
lcall
mov
incb
popa
outsb
xchg
sbb
jmp
out
mov
inc
push
dec
cmp
dec
dec
out
repnz
ljmp
mov
call
pop
add
inc
xchg
and
cmp
pop
mov
es
cmp
sbb
movsb
hlt
stos
add
repnz
lods
jmp
inc
mov
in
sub
inc
push
xor
dec
push
lods
jp
push
cmp
cld
and
rcl
in
pop
pop
popf
inc
adc
pop
ja
int
insb
sub
sti
leave
scas
push
cmp
out
pushf
ja
cmpsb
sub
mov
xor
jge
xor
mov
mov
mov
cmp
mov
int3
rcr
push
jno
mov
sbb
call
xor
inc
movsl
gs
fistpll
push
sbb
sub
jbe
sahf
fdivp
mov
xchg
test
pusha
dec
ret
lahf
ror
pusha
mov
dec
jo
test
jns
and
sub
cmp
adc
ljmp
adc
adc
lcall
jnp
xchg
mov
add
imul
insb
and
sbb
pop
xchg
push
movsl
fnstsw
pushf
bound
mov
adc
adc
sbb
pop
aas
push
enter
or
add
mov
pop
inc
pop
mov
lahf
sbb
xor
jns
nop
icebp
clc
sti
ror
pushf
jne
es
jl
pop
repnz
movb
ret
lea
bound
into
adc
sbb
mov
and
adc
xchg
dec
bound
push
inc
leave
outsl
stos
add
mov
std
cltd
sub
into
imul
icebp
inc
aam
xor
sti
mov
in
loope
lods
and
dec
adc
push
adc
popa
mov
clc
adcl
jge
lods
and
sbbl
xor
mov
sahf
sbb
ss
es
lods
jno
aad
add
call
dec
mov
shrl
insl
idiv
adc
adcb
pop
gs
mov
push
movsl
imul
and
rcll
scas
jnp
add
aam
out
mov
rol
xor
sahf
test
ljmp
scas
int
mov
stos
sub
adc
in
movsb
dec
mov
daa
stos
xor
fs
push
cld
mov
mov
les
jae
call
jle
jnp
pcmpeqd
ljmp
xlat
sub
sub
push
jne
jbe
loope
pusha
outsl
fiaddl
pop
cli
mov
xchg
cwtl
lods
lahf
mov
mov
cwtl
adc
lds
orl
or
mov
call
add
mov
pop
pop
test
jo
xchg
xchg
pushf
int3
stos
adc
lock
ja
mov
sub
push
inc
add
ret
shrl
mov
dec
fcmovnb
mov
shlb
pushf
nop
jae
pushf
mov
repz
mov
arpl
hlt
mov
mov
adcb
sbb
pusha
and
sbb
xor
repz
icebp
jo
adc
push
bound
inc
add
shrb
jge
add
aaa
mov
push
es
test
pop
lock
pop
mov
pop
add
xor
je
cltd
cltd
xlat
std
div
es
and
push
or
sbb
adc
xor
sub
lea
inc
fucom
cmp
mov
imul
jge
push
dec
mov
inc
or
sbb
push
data16
xor
imul
cmp
sub
sbb
orl
ss
aad
loop
in
dec
shlb
mov
call
cmpsb
into
rcrl
or
mov
xchg
inc
pushf
mov
xor
hlt
or
inc
jns
add
or
add
loope,pn
bound
loope
int
adc
xor
mov
inc
mov
arpl
add
cltd
js
fwait
into
sbb
pop
das
je
out
cwtl
or
mov
fistpll
imul
add
pop
xchg
pushf
out
xor
sbb
jmp
popa
into
jne
inc
add
xchg
mov
add
push
popf
pop
sbb
faddp
dec
lahf
and
mov
and
cld
das
mov
push
aam
fcomp
sub
test
dec
lds
repz
pop
aad
cmpb
subl
inc
sbb
mov
jo
xor
add
pop
mov
or
fs
jmp
dec
aam
lret
cmp
inc
movsb
in
call
cmp
inc
loop
jmp
jp
mov
lahf
mov
inc
pop
xchg
fs
sti
and
sbb
shll
iret
insb
enter
inc
pop
lods
subb
dec
leave
bound
popa
cld
in
sti
mov
push
xchg
push
pusha
stos
push
push
in
xchg
mov
jecxz
dec
test
es
cmp
mov
dec
mov
dec
outsl
cmp
mov
xchg
sub
aaa
dec
into
sub
cli
inc
data16
mov
rorl
jno
icebp
xor
stc
lret
mov
daa
loop
in
iret
jg
and
call
popa
mov
mull
inc
pop
int3
pop
add
outsb
push
repz
leave
cmc
rorl
les
jno
pushf
in
jnp
test
mov
dec
les
std
push
inc
or
cltd
hlt
and
loope
faddl
outsb
fistpl
adc
in
sub
xchg
insl
cmp
fcomps
mov
ret
pop
jno
pop
bound
dec
fnstsw
mov
cmp
cmc
add
cltd
push
add
movl
lahf
icebp
push
push
cmp
mov
repnz
fnsave
out
xchg
fucomp
xchg
mov
jecxz
lods
hlt
jnp
subl
add
dec
cmpsl
repnz
adc
dec
cltd
push
adc
cmp
mov
jecxz
test
mov
aas
mov
adc
idivl
dec
sub
aas
pop
fbstp
sbb
lret
lds
xchg
sti
idivb
popa
mov
mov
dec
inc
js
or
ljmp
pop
jle
xor
jecxz
inc
dec
loopne
shrl
sbb
shr
int
lss
in
mov
in
ret
lahf
lret
push
pop
xchg
ret
add
divl
out
and
lahf
out
xor
mov
adcl
sbb
mov
pop
pop
cs
and
aam
xor
arpl
xchg
shr
mov
and
pop
pop
outsb
cltd
add
cmpsl
sbbb
shll
xor
dec
cltd
cwtl
std
cmp
adc
xor
xchg
ss
hlt
cld
fcoms
lea
sbb
stos
movsl
arpl
adc
insl
scas
xchg
sar
push
dec
jns
xor
or
dec
daa
inc
sbb
inc
xchg
gs
pop
inc
inc
repnz
sub
pop
aam
pop
rorl
adc
add
pop
outsb
rol
inc
push
inc
sbb
out
jge
std
out
push
cmp
add
xchg
fstps
mov
lcall
dec
cld
add
push
mov
jae
push
add
jmp
aas
add
into
icebp
jmp
dec
test
stc
xor
movsl
ja
divl
pop
mov
or
cs
cmp
dec
jp
ret
aaa
or
loope
pop
mov
data16
fstpt
iret
mov
loop
jbe
sbb
iret
rcr
fs
loopne
insb
int3
enter
mov
fisubrs
add
mov
or
out
mov
jne
xchg
push
xor
jno
ds
cmp
sbb
repnz
sub
add
dec
clc
xchg
aas
jae
leave
sub
or
sbb
frstor
in
sbb
dec
pop
sahf
push
rorl
scas
xor
and
mov
cwtl
or
adc
imulb
jnp
xchg
push
stos
sub
mov
and
pop
dec
and
jp
repz
int
xorl
movsb
stc
push
addl
arpl
or
xchg
fdiv
dec
ja
out
lahf
inc
pop
int3
cmp
fmul
sbb
lds
jbe
mov
lds
jl
mov
dec
popf
inc
or
pop
xor
dec
loopne
jl
jmp
jb
loop
push
ljmp
fidivrl
xor
fimuls
pop
mov
cmp
mov
xor
dec
cwtl
fbstp
and
stc
push
pusha
sbb
push
scas
mov
fidivrs
std
cmp
sub
fcom
loopne
aad
pop
in
xchg
xor
js
pop
sbb
imull
xor
dec
outsb
cmp
xor
outsb
lret
dec
fcmovnb
das
dec
fldenv
or
jle
or
xchg
idivb
cmp
nop
rclb
aaa
sub
test
and
pop
add
push
mov
push
mov
ret
repz
sub
adc
cmpl
std
xchg
lods
sbb
sub
or
shlb
inc
or
ret
mov
add
idivb
xor
cmp
push
dec
das
sbb
mov
movb
xor
jge
and
fiadds
rolb
incb
inc
sub
in
push
lea
scas
lea
xchg
jg
xchg
mov
pop
outsb
in
push
dec
dec
iret
mov
std
aad
ljmp
andb
jge
sbb
xor
inc
imul
add
adc
into
xchg
xlat
adc
push
lods
nop
insl
jge
insb
insl
fsubrl
jmp
cmp
mov
adcl
jnp
test
rcl
mov
ret
int
xchg
and
es
stos
call
inc
bound
inc
imul
cs
aas
roll
xor
fidivrl
sbb
adc
sbb
mov
push
adc
cmpsb
xor
imul
jmp
or
adc
mov
sbb
mov
sbb
pushf
out
adc
aam
xchg
out
mov
xchg
js
in
mov
sbb
inc
fsubr
test
aam
dec
mov
test
popf
sub
cmpsl
test
leave
jecxz
cmp
xor
jns
pusha
scas
lret
push
fiaddl
xlat
pop
lret
dec
push
or
xlat
mov
test
and
cmp
and
push
outsl
insl
dec
test
mov
sub
jmp
inc
or
test
cld
std
add
sub
cmp
jle
pushf
add
xchg
jns
mov
aam
adc
ds
fmul
inc
mov
dec
cmp
rorb
inc
pop
inc
movsl
cmp
repnz
push
fwait
dec
push
adc
mov
mov
push
std
mov
cwtl
sub
scas
sbb
dec
fstl
mov
push
push
push
mov
cmp
pusha
jnp
mov
in
pop
mov
out
pop
mov
cli
ret
and
cwtl
js
jge
jno
fwait
es
cwtl
jae
jbe
sbb
insb
jo
jl
sub
cmp
fdivr
das
aam
cmp
dec
imul
call
test
xor
negl
dec
rol
imul
inc
out
popa
pop
repnz
add
jmp
xor
and
movsl
mov
mov
and
scas
xor
xchg
movsl
imul
cs
shlb
xchg
ss
je
call
test
ljmp
push
stc
mov
mov
or
out
push
mov
jge
call
xchg
mov
pop
sti
xchg
std
ss
cmp
mov
pop
pop
mov
loop
test
or
add
dec
mov
lods
neg
cmpsl
dec
push
jmp
lods
jle
lsl
je
dec
xchg
cmpsb
mov
xchg
jmp
fwait
push
gs
pop
loopne
push
dec
hlt
dec
insl
mov
imul
jns
repz
inc
lock
mov
in
xor
loopne
xor
shrb
aaa
addl
sub
je
leave
sub
jl
int3
push
pop
adc
sar
pop
sub
mov
pmuludq
push
add
sbb
mov
dec
icebp
ja
jae
les
test
test
test
fs
mov
inc
cld
loopne
frstor
jg
outsb
push
xchg
mov
add
inc
hlt
push
or
aaa
loopne
inc
push
inc
mov
push
out
sbb
aad
xchg
push
cltd
scas
sti
int3
sahf
or
into
add
addl
lret
or
adc
mov
xor
rcrb
xlat
and
stos
inc
es
ficoms
mov
lods
into
dec
movsb
inc
mov
push
push
ss
rolb
sbb
ljmp
mov
push
jae
cli
scas
mov
mov
lret
lock
or
xchg
xor
mov
mov
cmp
test
adc
rcrb
sub
adc
push
nop
xor
fsubs
or
imul
mov
and
cmpsb
out
fsubrl
jo
jmp
cmpsl
shll
pop
loope
dec
cwtl
sbb
lds
xchg
cmp
pop
rclb
nop
jne
loope
mov
push
imul
cld
icebp
fmul
notb
sbb
pop
int3
das
push
push
sbb
sahf
mov
add
loopne
arpl
pop
lock
mov
hlt
aam
xor
add
xchg
lea
imul
jo
adc
jb
add
and
pushf
insl
stc
jmp
dec
std
xor
fcomps
or
shl
test
and
test
pop
mov
mov
ds
push
imulb
sahf
mov
mov
adc
add
lahf
jae
clc
js
rorl
inc
jnp
js
out
add
and
mov
rcll
ljmp
jecxz
mov
jge
jae
xchg
cs
sub
fisubrl
mov
movsb
jp
aaa
orl
in
mov
mov
addb
in
cwtl
shld
push
or
inc
fisttpll
xchg
jb
pop
fsubrp
xor
cmp
pop
loopne
or
jge
int3
lods
ljmp
sbb
push
into
mov
adc
std
repnz
std
rcrl
es
push
shrl
push
in
fidivs
sbb
add
jo
pop
pushf
dec
pop
mov
cmp
and
mov
mov
cmpsl
mov
inc
mov
stc
dec
sahf
mov
in
or
lret
aad
inc
xor
movsb
dec
inc
js
mov
aas
test
cmp
sub
insl
in
int
in
dec
cmpl
cs
cmpsb
aaa
mov
pop
loope
mov
push
push
lea
int3
loope
inc
push
adc
das
inc
lods
pusha
and
arpl
push
xor
xchg
cmpsl
sub
adc
xor
in
inc
sub
adc
lret
add
or
adc
into
or
cmp
int
and
add
sbb
xchg
xchg
xchg
xchg
std
cmp
insb
cmp
repz
rorl
xor
loop
mov
xchg
and
sarb
insl
in
xorl
outsb
ljmp
fnstenv
xchg
xchg
sbb
subb
jae
out
cmpl
imul
dec
cmc
data16
das
sahf
adc
jo
enter
sbb
push
and
push
in
iret
or
and
test
dec
out
lcall
fsubrs
les
insb
cli
jne
cmpsl
out
aam
push
xchg
mov
scas
notl
test
fdivs
ds
rorl
jle
mov
xchg
jae
test
addl
push
inc
xor
insl
mov
loop
gs
or
inc
pop
mov
js
cmpsl
lods
pop
test
xor
cmp
sbb
ja
cmp
fildl
imul
jnp
cwtl
std
aam
mov
push
out
cmp
inc
push
mov
loope
push
repnz
adc
sbb
adcb
mov
adc
lret
in
or
ficomps
mov
imulb
mov
out
out
sbb
ficoml
test
movsb
dec
push
xor
jl
aaa
pop
mov
call
insl
mov
mov
inc
sub
adc
dec
fldt
dec
jno
lahf
adc
jle
push
leave
imul
pop
cli
or
inc
movsl
int3
dec
fdivrl
outsb
call
aaa
adc
inc
pop
cmp
mov
jge
add
lods
les
pushf
cltd
sub
fnsave
popa
adc
stos
inc
pop
inc
or
jnp
or
mov
in
cmp
leave
pushf
adc
call
and
cmp
ljmp
inc
mov
and
das
mov
push
jnp
inc
in
cmp
xor
inc
xor
daa
push
pushl
in
pop
push
cld
and
es
or
add
mov
adc
addr16
lahf
mov
xchg
adc
xlat
mov
lea
call
fwait
inc
dec
xchg
mov
xor
push
arpl
jge
mov
inc
and
or
sbb
divb
imul
sub
push
dec
mov
push
call
fcoml
adc
push
xchg
adc
mov
in
jmp
mov
repz
scas
pop
mov
pusha
dec
mov
mov
push
std
es
or
add
mov
dec
or
push
imul
cmp
fistl
mov
pop
mov
push
nop
cmp
pop
mov
nop
jne
push
cwtl
aas
cmpsl
push
jne
testl
scas
pop
fcompl
mov
aaa
into
pop
add
jb
add
mov
xchg
mov
mov
xor
bnd
pop
repnz
sbbb
jo
imul
int3
pop
mov
int
sub
xor
cmp
inc
cmp
sbb
cmp
cltd
mov
xchg
and
nopl
lahf
add
mov
xchg
and
mulb
ret
push
dec
insl
pushf
add
fstps
and
push
daa
xrelease
test
dec
sub
lret
scas
xorb
addr16
push
popf
call
ds
out
jae
and
and
shlb
addr16
xchg
test
adc
mov
pop
mov
clc
cmp
mov
adc
fistl
sbb
shll
clc
das
jbe
cld
jne
popf
cmp
mov
insb
adc
sbbl
mov
jnp
and
sub
test
jnp
xchg
pause
cmp
jne
inc
fisubrs
insb
adc
add
and
and
adc
enter
cmpsb
or
icebp
mov
jmp
pop
xchg
in
pusha
dec
xchg
sqrtps
mov
or
out
movsl
push
sbbb
sbb
mov
or
ror
mov
jp
test
push
cmpsb
sbb
es
or
inc
out
xor
cmp
dec
ljmp
add
cmp
jg
subl
or
in
test
add
push
adc
cmc
frstor
mull
cmp
fs
int3
mov
stos
push
pop
movsl
hlt
cmpsb
incb
repnz
add
in
push
adc
sub
cmp
or
mov
int
call
int
test
xor
cmp
or
ror
test
or
sbb
ljmp
sub
adc
push
lret
or
lcall
jp
sub
jle
sub
hlt
dec
mov
dec
iret
dec
lods
sub
pop
je
cmp
mov
mov
inc
xchg
test
push
xor
out
int
mov
mov
aas
insl
scas
xor
aad
sbb
sbb
jbe
add
jp
xchg
pop
add
dec
je
movsb
mov
scas
mov
push
cltd
and
call
aam
push
push
sbb
fs
js
adcb
or
jmp
lock
mov
mov
xor
push
out
aaa
cmc
jae
jnp
mov
mov
add
adc
push
mov
sbbl
mull
subb
jbe
mov
jbe
adc
xsha256
cmpsb
aam
pop
arpl
xor
dec
mov
pop
repz
das
cmp
sti
insb
sub
fwait
inc
add
jbe
and
jmp
cmc
jecxz
add
je
xchg
jbe
sub
nop
sub
mov
mov
sub
rorb
gs
subb
call
pop
fdivrl
cs
xor
repz
jp
in
repz
adc
sbb
xchg
xchg
mov
sbb
push
fldcw
hlt
sbb
popf
lock
dec
xchg
in
mov
icebp
sbb
cltd
xchg
inc
push
push
lock
or
dec
cmpsl
rclb
shlb
leave
mov
mov
adc
outsl
xchg
push
fistps
push
jecxz
inc
cli
sub
dec
add
in
int
sahf
out
push
jne
imul
sbb
test
insb
and
repz
and
mov
dec
dec
or
imul
lock
aam
xor
es
aad
out
sbb
cld
cmpl
scas
xor
daa
loop
mov
stos
jg
sbb
jmp
scas
mov
inc
pushf
jns
sbb
dec
or
fst
cli
xlat
sbb
and
daa
add
mov
into
aad
ss
loope
xchg
rclb
inc
xor
sbb
insb
ljmp
call
pop
int3
cwtl
icebp
pop
xor
inc
push
repnz
sub
arpl
adc
mov
jmp
or
adc
cltd
bound
jge
mov
stc
in
imul
sub
push
cmp
cmp
sub
lea
loopew
xchg
shrb
lahf
push
mov
cld
leave
inc
insb
ljmp
xchg
mov
aam
and
pusha
cmpsb
jns
rcll
adc
aam
lahf
fdivs
les
fwait
lret
mov
insb
lcall
pop
aam
adc
mov
std
les
addr16
sub
dec
push
loopne
sub
lahf
fistl
push
pusha
test
out
or
vunpcklps
push
out
sbb
xor
insl
lret
out
dec
lcall
shrl
dec
test
mov
push
and
xor
mov
and
stc
pop
jb
jmp
push
push
sbb
and
jecxz
pop
lock
sbb
inc
leave
adc
insl
cmp
mov
nop
lcall
push
pop
lret
jo
xor
jge
jb
mov
in
lahf
pop
ret
xchg
inc
into
lods
push
mov
mov
dec
mov
ss
jge
or
movsb
adc
gs
mov
rclb
mov
loop
call
scas
lea
jbe
adc
popf
mov
push
adc
xchg
mov
xchg
mov
mov
cmp
cltd
stos
mov
pop
adc
xchg
mov
push
adc
push
cmp
sub
hlt
mov
sub
or
repnz
inc
jae
in
imul
mov
hlt
imul
dec
ret
mov
pop
cmc
jno
sub
faddp
mov
mov
mov
xchg
pop
cli
stc
pop
enter
sti
mov
cmp
jno
mov
push
adc
push
jne
enter
or
loope
nop
out
mov
lods
xor
out
ja
jo
pushf
aaa
jle
push
outsb
or
call
add
rcrb
shlb
sub
cmp
repnz
cmp
fisubrs
jae
and
movsl
push
outsb
or
mov
pop
push
jecxz
outsl
fwait
sub
mov
xor
outsl
fwait
popa
pop
mov
sbb
int3
xor
mov
xchg
mov
es
add
stos
and
dec
cld
jmp
and
int
rcr
aad
inc
jle
mov
jp
orl
sti
das
dec
mov
pop
xchg
cmp
cs
test
pusha
cld
sbb
in
pop
cmc
adc
icebp
movsb
cld
cmpsl
bound
xor
or
inc
jno
notb
jo
ljmp
cmp
test
loopne
or
scas
and
rolb
inc
data16
movsl
mov
stos
je
sbb
mov
ljmp
imul
cmpsb
xchg
imul
dec
sub
pop
repnz
xor
mov
mov
sub
push
sbb
leave
pop
movb
mov
aad
cmp
adc
loop
xor
fisubs
cmpsl
cmpl
mov
cmp
pop
outsb
pop
jns
add
mov
pop
inc
outsl
jg
pop
pop
test
movsl
xchg
add
push
repz
jnp
dec
cmp
jg
sbb
shll
mov
cwtl
push
lret
sub
push
int
lods
ljmp
dec
adc
inc
cmp
mov
lods
push
jl
mov
sbb
cwtl
fcoms
adc
mov
jl
xor
mov
test
ret
jg
mov
xchg
dec
hlt
int3
fldl
pop
add
mov
rolb
push
cs
jae
push
jo
sbb
pop
js
loope
sbb
mov
into
out
lods
mov
lret
and
iret
mov
xorb
sub
arpl
cli
mov
cmc
xor
inc
jle
push
in
lahf
data16
add
data16
push
fwait
test
xchg
daa
jae
out
lea
outsl
cwtl
sti
pop
les
std
lods
pop
enter
xchg
insl
decb
ficoms
sbb
int
jo
adc
adcb
dec
dec
ret
dec
cld
test
inc
cmp
bound
fsubs
mov
rclb
push
or
jae
cmpb
jge
sub
aas
and
push
out
dec
mov
nop
push
add
push
in
fcomi
adc
pusha
xchg
sti
test
icebp
mov
mov
pushf
xor
push
js
clc
xchg
jb
ret
sub
scas
and
aas
xlat
fimull
mov
flds
test
outsl
clc
push
dec
jnp
mov
dec
push
add
sbb
jno
std
mov
cmp
and
pop
stos
push
js
xchg
in
adc
adc
add
mov
jne
cmp
movsl
push
xchg
popf
mov
jge
rolb
dec
jne
int3
fdiv
jne
insb
in
imull
fsubr
xchg
jg
inc
sub
jnp
sbb
js
daa
out
insl
lahf
out
fwait
popf
out
adc
add
sahf
ds
or
adc
adc
cmp
ds
fidivs
ficoml
fninit
lods
adc
jg
inc
sti
or
addr16
pop
testb
arpl
push
inc
std
fwait
push
push
or
or
lcall
nop
mov
adc
lods
mov
jne
sub
adc
lock
ret
inc
jmp
add
cmp
add
jnp
add
push
push
shl
adc
js
jae
pop
cmp
fwait
pop
cmp
daa
out
movsb
jmp
jno
adc
mov
test
repnz
lahf
lds
sbb
gs
mov
out
ljmp
lret
jg
and
jle
imul
jecxz
insb
stos
push
shrb
fdiv
mov
jns
cmpsb
lds
cltd
adc
bound
subb
jle
in
cmpsl
cmp
clc
push
dec
loope
jecxz
lahf
iret
stos
ret
mov
jae
xchg
xchg
mov
pop
in
adc
pop
ret
cmpsl
push
xchg
mov
fsubp
icebp
clc
lods
clc
nop
sbb
cmp
test
dec
aam
popf
shrl
sti
push
insb
sub
cmp
jl
mov
mov
jecxz
pop
sub
adc
test
dec
stc
add
mov
mov
dec
out
lcall
push
mov
gs
in
pop
pop
jno
pop
mov
dec
sti
pop
lock
repnz
push
jo
movsb
push
out
and
popa
cmp
popf
lock
sub
lahf
xchg
notl
sub
add
sub
rcl
inc
jo
sahf
cmp
pop
inc
push
adc
leave
adc
lcall
jp
cmp
pop
adc
sbb
cmp
insl
aas
inc
mov
test
inc
xchg
hlt
fs
shrl
std
and
sbb
mov
add
and
sub
inc
icebp
dec
mov
addr16
or
add
jae
out
adcb
int3
lods
fidivs
jb
inc
xchg
cmp
repz
daa
aad
test
aam
mov
js
notb
push
push
pop
je
out
push
and
sub
repnz
dec
gs
dec
ja
xchg
out
es
hlt
mov
or
sub
cs
arpl
stc
dec
pusha
mov
dec
dec
xor
ds
sahf
and
xor
popf
mov
lea
sti
lea
pop
lahf
sbb
sahf
inc
xchg
pop
imulb
pop
test
cwtl
sar
outsl
xchg
cld
fs
imul
dec
jmp
mov
mov
push
sub
ficomps
mov
test
jg
inc
ds
fstpt
leave
loope
mov
adc
popa
inc
lcall
mov
shl
mov
jns
jmp
adc
jmp
int3
cmp
icebp
gs
lret
and
jmp
cmpsl
icebp
xchg
pushf
add
int3
push
xlat
pcmpeqb
adc
xchg
imul
dec
test
push
mov
lcall
adc
xchg
jp
pusha
ja
in
sahf
xchg
popa
and
test
sub
popf
inc
pop
mov
lock
out
cmpsb
pop
or
in
push
and
and
add
xor
mov
aad
cmpsl
into
sbb
jecxz
inc
in
adc
push
cmc
repnz
pop
shrb
into
pop
popf
mov
adc
jge
shr
sbb
cmpsb
rol
leave
jge
inc
in
cmpsl
cltd
roll
lgs
in
fistl
cmp
pop
push
popa
inc
ljmp
test
cmp
out
fsubrs
mov
jmp
cmpb
jge
cli
aas
pop
aaa
inc
divl
and
mov
dec
imul
adc
mov
mov
inc
movsl
sahf
stos
mov
mov
lcall
lret
mov
pop
in
ror
and
jbe
and
out
mov
imul
ret
add
pop
pusha
movsl
mov
jp
adc
jo
xchg
movsl
adc
cmp
mov
push
mov
inc
fsubr
or
dec
pop
pop
mov
or
pop
daa
cmp
push
or
int
dec
fwait
test
dec
jbe
and
or
dec
pop
xor
inc
xchg
ss
fists
ficoms
ss
fiaddl
dec
mov
and
js
lahf
stos
scas
aad
and
js
arpl
push
add
add
adc
out
jecxz
mov
call
ljmp
jb
xchg
and
ja
inc
and
jns
test
fucomi
sub
sub
in
rolb
je
out
xor
pop
sub
int
loop
adc
jns
aam
cmp
in
mov
pusha
or
out
pop
out
cmp
lds
inc
xorb
repz
sub
adc
in
sub
push
jae
rol
mov
cmp
push
lods
cwtl
add
pop
dec
jo
pop
fprem
xchg
popa
js
mov
or
or
lods
sub
adc
cmp
out
dec
idiv
adc
cmc
hlt
icebp
cltd
clc
push
icebp
and
jecxz
lea
sbb
les
inc
in
jl
outsb
test
pop
lods
outsl
popa
xor
xrelease
push
fstl
int
sub
jecxz
addr16
mov
xchg
xor
mov
sbb
jno
loope
fucom
insl
sbb
dec
mov
sahf
or
mov
jo
mov
repnz
insb
dec
pop
das
movsb
sub
sti
dec
es
fimuls
sub
shlb
jns
pop
ret
into
loopne
sub
mov
popf
mov
lret
arpl
xchg
sbbb
stos
int
inc
hlt
mov
dec
rolb
test
enter
cmp
es
faddl
into
add
test
int
pushf
jmp
jne
xor
addr16
imul
loopne
push
out
ja
adc
xor
in
ret
push
and
pushf
fwait
hlt
mov
scas
sar
popf
fisubrs
int
cmp
mov
mov
arpl
push
sbb
daa
add
out
xchg
fstp
jecxz
cltd
lock
int3
pop
xchg
jg
pop
sbb
mov
je
mov
fistpll
fiadds
jb
xor
push
adc
or
or
add
out
dec
arpl
pop
jg
inc
mov
sbb
add
push
sbb
fscale
add
in
push
and
push
add
fimull
jnp
hlt
loope
xor
andb
xchg
add
adc
lret
push
adc
mov
or
jne
add
dec
jecxz
mov
lahf
sbb
mov
shrl
push
loope
in
inc
js
jo
loopne
enter
repz
xchg
jl
in
fldt
xor
push
dec
mov
insl
pop
xchg
scas
fldt
push
test
shll
mov
mov
fsubr
lcall
xor
das
mov
andl
sti
stos
imul
ret
mov
aam
adc
fsubs
add
or
and
js
inc
imul
push
cli
rcrl
pusha
mov
out
xchg
in
xchg
adc
mov
jmp
mov
adc
mov
loope
sub
pop
rcr
pop
sub
cmc
jbe
test
in
pop
or
and
cmc
dec
rclb
inc
mov
popf
sub
dec
adc
out
and
mov
cmp
or
dec
nop
test
das
shll
insl
andb
xchg
lods
in
sbb
bound
outsl
pop
xor
stc
xor
into
push
sub
and
pop
fst
push
mov
test
fdivrs
roll
imul
fwait
xor
clc
int
sub
sbb
adc
lahf
xor
hlt
iret
dec
xor
mov
mov
notb
cmc
je
dec
inc
pop
loopne
push
mov
inc
and
cs
xor
mov
mov
stos
repnz
and
cmp
xchg
and
xorl
scas
jns
xor
mov
mov
xor
mov
push
je
push
mov
repnz
or
pop
lods
sahf
out
cltd
enter
mov
fs
pop
sbb
mov
fildl
push
sbb
clc
iret
adc
inc
lock
push
mov
or
daa
jns
push
pusha
xchg
sti
rcll
sub
inc
js
pop
popf
xchg
arpl
mov
cs
aas
lea
jae
or
or
cmp
adc
popa
push
arpl
sub
or
mov
movl
orb
sub
or
daa
mov
into
std
mov
push
xor
divb
dec
sahf
dec
pop
mov
in
pop
xchg
dec
or
int3
or
pop
mov
sbb
sbb
mov
sbb
pop
int
js
cmp
stos
xchg
shrb
pop
stc
sbb
jge
cmp
cmpsl
jl
repnz
xchg
mov
ret
mov
mov
mov
or
repz
inc
stc
fsub
sub
lcall
js
clc
push
es
cmp
dec
jmp
add
and
dec
push
outsl
add
lret
sbb
jle
dec
xor
jecxz
jne
mov
xor
jne
xor
ljmp
sbb
lret
out
sbb
push
roll
jb
into
fbld
fistpll
pop
adc
add
and
adc
push
mov
cmpsb
sbb
scas
cmp
mov
data16
dec
mov
lds
fs
cmp
xchg
xchg
fldcw
je
lahf
mov
pop
imul
sbb
inc
in
roll
sbb
negb
enter
add
sbb
mov
mov
imul
icebp
les
insl
push
call
cmp
movsl
sar
popf
jg
std
shlb
cmp
mov
xchg
or
data16
add
pop
xchg
push
inc
and
inc
mov
data16
sub
jmp
daa
js
or
xchg
jbe
mov
pop
jbe
pop
mov
aaa
rclb
xor
in
cmp
aas
inc
adc
mov
jecxz
pop
clc
sti
into
push
dec
addr16
pcmpgtw
add
sub
test
cs
dec
test
cmp
jo
mov
std
clc
cli
lret
mov
fwait
cmp
sub
call
and
rcr
dec
cmc
pop
mov
dec
cmc
xor
out
cli
inc
push
or
test
icebp
clc
dec
jnp
push
fs
fcos
dec
cltd
and
jecxz
jns
mov
xchg
ret
mov
aam
outsb
mov
mov
mov
pop
sub
leave
inc
out
sahf
mov
cmp
push
rcrb
and
pop
loopne
jle
sub
outsb
scas
pop
int
imul
jmp
push
lds
fimull
xchg
lock
mov
pop
in
sub
rcll
cld
outsl
and
push
ret
out
cmovno
xchg
fwait
mov
data16
and
stos
ljmp
out
and
dec
dec
pop
xchg
ljmp
push
mov
mov
and
sub
out
cmp
xchg
cmp
xchg
aas
jge
out
repz
hlt
mov
and
push
and
les
in
fwait
mov
pop
mov
pop
out
dec
addr16
xchg
inc
mov
mov
or
dec
or
and
inc
add
adcb
sub
outsl
xchg
or
outsb
jne
cmpsb
imul
xchg
sub
sbb
ljmp
pop
mov
sahf
inc
mov
sahf
pop
push
nop
xchg
mov
fcomip
clc
cmpsb
shlb
jo
fwait
mov
aam
jg
cwtl
and
xlat
push
and
jae
fwait
push
jno
push
das
push
jb
out
repz
mov
lcall
xor
jmp
inc
add
push
scas
jnp
cmpsl
dec
shll
ljmp
mov
fdivrs
shl
push
cmp
mov
and
adc
mov
pop
or
sub
mov
std
lcall
loope
mov
into
into
rcl
mov
or
mov
pop
decl
pop
iret
jge
cmp
xorl
gs
push
pop
ret
and
in
mov
mov
ror
jae
xor
clc
addb
imul
push
jecxz
je
loopne
pop
in
pop
sarl
or
leave
cltd
push
mov
and
repz
cmp
sti
add
push
jne
xor
in
and
mov
or
cmp
xlat
out
sub
mov
loop
mov
dec
pop
out
imull
sbb
push
sbb
sbb
ret
adc
divl
adc
pusha
inc
lods
je
pop
dec
cmc
das
and
in
cli
ja
fildl
ds
push
loope
jmp
sbb
dec
mov
push
movsb
js
test
enter
fnstcw
enter
inc
je
xor
add
sti
mov
int3
xchg
mov
sbb
inc
push
mov
cmpsb
add
cs
mov
sub
xor
xor
ret
fidivs
icebp
pop
sub
roll
sub
jle
icebp
out
aaa
repnz
push
bndstx
jl
mov
cmp
or
cmp
dec
jmp
fmuls
xor
jmp
rcll
jg
jg
adcb
stc
mov
mov
sbb
adc
xchg
into
aas
loopne
adc
repz
sub
lret
and
pop
mov
and
or
push
adc
xor
mov
sub
inc
cltd
cmp
jb
mov
mov
push
cli
sarb
nop
mov
mov
cmp
adc
pushl
cmp
dec
cvtps2pd
js
mov
movsl
push
sbb
les
ret
pop
test
fnstcw
adc
fisubl
mov
mov
loope
nop
xchg
lods
pusha
mov
xchg
cltd
mov
fildl
cmp
cmp
mulb
cmpl
fiaddl
test
test
or
out
in
inc
and
orl
in
adc
pop
sub
sarl
or
push
aad
shl
jle
shl
and
js
mov
ret
sub
jbe
inc
pop
mov
mov
mov
pop
adc
outsb
push
stos
cmp
stos
sarb
add
adc
out
daa
popa
jecxz
cmp
mov
dec
popa
dec
mov
sub
sub
stos
insb
ret
jbe
fucomi
add
or
sbb
andb
adc
mov
fsubrs
or
loop
lds
jbe
add
push
adc
mov
iret
jne
int3
fldcw
cmp
lock
stos
jno
sub
inc
in
cs
adc
popa
xchg
fwait
insb
inc
jo
arpl
and
jnp
mov
mov
mov
popf
pop
mov
sbb
or
pop
movsl
xchg
lret
subl
imul
imul
inc
fcmovnbe
aad
inc
jle
push
or
pushf
and
das
call
arpl
push
ds
cli
inc
inc
fcoml
daa
scas
or
pop
repnz
pop
push
cmp
repnz
sbb
push
mov
loopne
or
mov
mov
sbb
loope
pop
arpl
pushf
js
push
in
pop
fnsave
rorl
outsb
dec
mov
int
insl
std
add
les
rcrl
fwait
ret
push
mov
or
in
ljmp
sub
sarb
mov
jl
pop
bound
and
mov
imul
insb
nop
mov
mov
mov
inc
inc
sahf
in
jne
jo
jge
push
or
mov
inc
addr16
mov
popf
mov
mov
xchg
cmpsl
and
jbe
aaa
dec
cwtl
fwait
pop
jne
cmpsb
push
pop
fcmovnu
xor
frstor
jbe
or
mov
adc
pop
cwtl
or
mov
dec
lock
lods
mov
cmp
mov
and
and
loope
mov
mull
stos
out
xor
insb
jns
pusha
jne
or
sbb
push
outsb
cs
aad
stos
adc
loop
loop
sub
fucomi
pop
repnz
add
into
mov
pop
pushf
lret
push
pop
cmp
or
mov
mov
js
xlat
push
out
mov
loopne
jns
jb
fcoms
lods
mov
mov
negl
loopne
push
aad
shrb
cwtl
xor
les
sbb
mov
ljmp
or
cli
push
je
push
icebp
xchg
mov
dec
mov
loopne
test
and
sbb
xlat
pushw
xchg
push
jl
xchg
mov
sub
ljmp
cld
test
mov
test
dec
xlat
out
adc
or
adc
sub
mov
lea
inc
pop
push
push
adc
clc
inc
lea
inc
xor
jae
mov
jbe
dec
xlat
adc
jb
pop
cli
push
pop
xor
add
in
and
dec
fwait
imulb
fnstsw
roll
jne
cmp
cmp
push
dec
xchg
mov
mov
pop
dec
and
inc
out
shll
push
xchg
subb
scas
jbe
pop
add
dec
lret
pop
dec
pop
and
mov
adc
aam
and
sarl
aaa
mov
aaa
mov
aaa
nop
dec
into
and
cwtl
xor
inc
lods
inc
mov
mov
sub
xchg
mov
cmp
cs
insl
or
xor
cmpsl
adc
hlt
stos
push
stos
mov
or
adc
mov
call
push
sub
loop
mov
sub
sarl
or
popa
fadd
rcrl
cmp
unpckhps
dec
inc
push
xchg
add
push
fimull
xor
out
lahf
or
xchg
mov
inc
sub
adc
dec
fsubp
fistpl
mov
mov
test
inc
jbe
pop
cmp
aad
mov
data16
outsb
icebp
adc
and
pop
call
and
aas
mov
jb
mov
jmp
lcall
xchg
sbb
xorl
inc
pushf
sbb
bnd
add
cmc
inc
push
pop
daa
sar
xor
xchg
dec
cmp
jae
cmp
sub
sub
pop
jbe
jg
jb
sub
xchg
fstl
jo
imul
push
push
add
push
and
shlb
add
imul
mov
xor
scas
sbb
fiaddl
insb
ret
mov
or
dec
cmp
add
ficomps
adcb
pop
ret
ret
cmp
lcall
cmp
ret
adc
dec
mov
pop
sub
sbbb
xor
pop
aad
dec
adc
lods
loopne
cmc
mov
add
cmp
enter
add
lds
dec
mov
in
mov
inc
lock
jmp
mov
lods
stos
popa
mov
pusha
pushf
cmp
xor
loopne
ret
aam
jbe
dec
xor
cmpsl
sbb
popf
pop
and
rcr
cli
repnz
sbb
imul
push
cmpsb
cmp
lahf
add
lea
adc
test
cmp
push
push
cli
push
into
loopne
loop
adc
or
cmc
cmpsl
je
push
adc
sub
mov
ss
in
testl
outsb
out
sti
jmp
cmpsb
xchg
pushf
rorb
jg
in
scas
or
or
addr16
movsb
dec
sti
add
out
sahf
rcrb
icebp
adc
dec
or
push
icebp
inc
inc
repnz
idiv
push
insl
mov
iret
jb
mov
jb
shll
mov
cltd
out
data16
aaa
stc
sbb
xlat
shlb
inc
push
inc
pop
jp
and
dec
adc
aad
outsl
mov
sub
cli
cmp
test
mov
enter
fcmovnb
dec
push
lcall
mov
cmp
clc
sub
imul
popf
test
mov
sub
adc
mov
cmpsb
icebp
pushf
or
mov
pushf
xchg
adc
and
xchg
std
cld
fcomps
jb
jnp
sub
lea
rolb
inc
inc
scas
add
push
push
jb
nop
cmpb
jp
xchg
inc
ljmp
sub
cmc
add
cmc
pop
ja
mov
fcoml
ss
in
cltd
popf
sub
fldt
aaa
aas
and
add
sti
mov
push
xchg
mov
cmp
xchg
sub
inc
rorb
out
adc
cmp
dec
gs
movb
subb
pusha
fxch
xchg
daa
in
sub
lahf
jns
es
xchg
cli
insb
mov
sbb
out
les
push
loop
fcmovu
mov
sub
or
add
lods
sbb
out
call
dec
jmp
mov
mov
adc
call
sbb
sub
mov
imul
push
je
jno
aam
lods
xchg
and
sub
mov
stc
repz
push
sete
gs
in
inc
and
add
imul
push
and
sbb
mov
shrb
adc
inc
sbb
adc
or
push
mov
sub
dec
or
pushf
ret
aaa
dec
jbe
cmp
jns
mov
arpl
jg
mov
xor
stos
lods
dec
loope
mov
pop
and
inc
mov
jmp
outsl
fdivs
test
cmp
push
js
fpatan
push
jns
mov
dec
cmp
or
dec
add
cs
push
xchg
and
mov
pop
dec
inc
movsl
sub
loope
sub
sbb
loope
ja
outsb
xor
imul
add
hlt
add
xor
inc
push
mov
and
pop
das
shll
lods
sub
xchg
je
sub
popa
adc
jno
mov
outsb
inc
or
fs
std
outsl
inc
push
push
push
sbb
push
sub
cli
scas
add
mov
and
cli
xor
mov
mov
pop
jno
imul
popa
imul
push
adc
sarl
addb
fsubrp
xchg
insl
std
rorl
jo
cld
xchg
jge
in
in
inc
out
push
sarl
xchg
ss
addr16
mov
xorb
sub
imul
pop
or
xchg
aas
jl
add
push
in
inc
in
mov
dec
push
addr16
insl
xor
aam
mov
jo
push
repnz
enter
mov
xor
data16
adc
mov
outsb
fisubrl
mov
mov
mov
sar
adc
shll
push
das
cld
scas
mov
addl
je
mov
popf
imul
ret
hlt
and
pop
xor
testb
or
in
cmp
mov
rcrl
cmp
into
xchg
lcall
shll
or
stos
add
stos
mov
rcl
jge
dec
xchg
push
adc
inc
and
or
sub
pop
sti
repz
fildll
cs
pop
aad
push
jne
mov
mov
loopne
repz
sbb
loop
xor
adcl
nop
add
mov
xchg
cmp
mov
shrl
test
push
jae
fcomp
jp
out
dec
fwait
mov
mov
sbb
call
sbb
dec
or
pusha
mov
daa
mov
and
subb
mov
push
rolb
lahf
cwtl
fnstcw
lahf
or
fildll
test
jnp
add
or
out
ja
fs
ds
jae
outsb
leave
sbb
js
idiv
data16
movsb
push
cld
lock
inc
pop
iret
cmp
sbb
xchg
mov
repz
adc
loopne
fdivrs
push
pop
mov
in
dec
imul
xor
sbb
dec
push
jae
idivb
mov
inc
cmp
bound
sbb
add
mov
fdivr
dec
sbb
clc
mov
aaa
xor
cmp
push
mov
xchg
das
xchg
cli
xor
testl
inc
addr16
das
inc
or
cmp
rolb
xor
and
lods
mov
arpl
cli
mov
adc
gs
or
jb
sbbl
pop
cmp
pop
test
loopne
push
mov
pushf
icebp
cmc
mov
mov
mov
je
push
mov
xchg
sbb
cmp
adc
repz
or
cs
leave
arpl
add
mov
mov
cmp
in
cmpsb
push
loopne
xor
jg
xchg
add
ss
mov
pop
and
shrb
push
aaa
and
jbe
or
testb
mov
push
xchg
icebp
xor
ret
aas
add
lock
fimull
enter
jl
in
fdivl
and
jmp
daa
jnp
dec
fnstsw
scas
mov
call
cmp
loop
ja
inc
ret
lahf
nop
test
fcmove
and
int3
adc
fwait
jecxz
pushf
lds
mov
push
cli
add
fcom
roll
mov
imul
sbb
push
mov
cld
mov
xor
in
in
cwtl
mov
leave
std
xor
adc
das
data16
lods
xlat
stos
out
or
cmp
dec
push
inc
inc
dec
gs
xchg
or
xlat
test
jo
lahf
mov
mov
push
pop
cmp
push
sub
pop
popa
xor
dec
hlt
loop
mov
movsl
sbb
ja
mov
inc
sub
jmp
or
insl
arpl
adc
inc
mov
mov
pusha
pop
xchg
ror
push
bound
xlat
ljmp
orb
mov
icebp
test
dec
test
rcr
jo
xchg
scas
mov
es
push
push
cmpsb
shrb
and
push
jl
pop
pop
add
call
outsb
pop
mov
ljmp
or
sbb
cmp
add
fwait
mov
or
cli
es
xchg
mov
dec
rorb
sbb
jns
add
push
ds
mov
or
push
shrb
enter
jo
stos
mov
lods
ficoms
mov
insl
mov
out
dec
jb
mov
sub
and
shll
push
jbe
xchg
or
lds
sbb
jl
stos
jl
movsl
mov
pusha
jge
je
jecxz
cmp
mov
pop
push
addr16
push
out
mov
or
ljmp
cltd
mov
outsl
sarl
xchg
push
jmp
push
push
lods
repnz
test
insl
pop
dec
mov
or
pushf
adc
mov
dec
jae
cltd
mov
mov
sub
das
clc
hlt
in
data16
mov
hlt
dec
cmp
and
cld
stc
sbb
adc
xor
dec
adc
jo
loopne
and
scas
and
fisubrl
mov
andb
xchg
mov
ret
xor
xlat
mov
dec
sbb
std
adc
pop
dec
lds
ss
lock
test
jmp
sti
or
outsb
push
test
dec
lea
shrb
out
adc
fs
pushf
pop
sbb
jge
push
mov
push
cwtl
cltd
jb
lods
leave
or
ret
mov
and
pushf
inc
cmp
es
aam
stos
imul
negl
pop
pop
aas
sub
leave
rorl
jecxz
icebp
vpsubsw
sbb
jno
cmp
push
std
movsb
call
cwtl
mov
fidivl
inc
ljmp
mov
add
xor
enter
push
in
in
mov
popf
jmp
xchg
sbb
testl
sar
pop
cltd
xor
enter
rorl
xor
mov
fcompl
xchg
iret
stos
jb
mov
and
jecxz
rorb
push
insb
aam
dec
add
adc
xor
pushf
loopne
fnstsw
frstor
inc
push
mov
xchg
out
into
adc
pop
cmp
dec
rolb
jl
shr
addr16
push
add
ret
lret
mov
ds
ljmp
jno
fisttpl
sti
mov
hlt
mov
or
xor
jo
icebp
outsb
in
jg
inc
shlb
jno
loope
push
insb
gs
pop
test
and
add
inc
cmp
mov
subb
mov
aaa
cs
lock
sarb
cmp
cmp
mov
sub
mov
mov
rcll
pushf
in
sbb
aas
sbb
mov
xchg
inc
outsl
or
loop
je
lds
pop
adc
xor
das
sub
fwait
jg
int3
popf
outsl
mov
push
in
xor
test
adc
mov
into
mov
jb
mov
push
and
cs
jp
pop
imul
or
push
lcall
mov
or
push
repz
je
test
shl
out
cmp
add
imul
aam
out
jo
mov
cmp
movsl
xor
test
fdivs
js
sbbb
xchg
rcrb
cltd
fadd
in
mov
cmp
loope
pop
push
jg
sub
nop
sbb
cmpsl
stc
shrb
imul
mov
out
into
aam
push
cwtl
popa
xor
xchg
mov
cltd
pusha
cmp
jecxz
sarb
cmc
andb
mov
fs
repz
aas
xchg
lods
xchg
cmc
push
jle
cltd
dec
jbe
pop
outsb
jle
addr16
dec
inc
push
add
in
repz
xchg
outsl
test
insb
rcl
jne
mov
inc
xor
rolb
sub
mov
lret
adc
jbe
xchg
js
hlt
mov
decb
mov
je
fidivrl
sub
out
outsb
in
sbb
lret
and
mov
movsl
xchg
test
outsb
xchg
cmpsl
in
mov
adc
jmp
movsb
imul
mov
fistpll
cmp
into
in
test
xor
imul
lds
icebp
subl
pop
jnp
mov
mov
mov
jns
mov
xchg
mov
or
es
or
ds
mov
inc
ljmp
adc
jp
jns
and
inc
and
enter
jne
cmpsb
inc
lods
in
adc
xchg
in
mov
jge
es
pop
push
cmp
adcb
std
add
push
lret
enter
jge
fsts
xchg
outsb
cmp
cmp
push
xchg
popf
fdivr
pop
icebp
aam
jg
xor
scas
les
pop
leave
insb
stos
in
hlt
jnp
mov
mov
cltd
lock
lods
add
sti
pop
and
inc
mov
loop
mov
inc
mov
mov
mov
stos
xor
ja
inc
aad
cmp
pop
cld
js
testb
movsl
mov
shlb
push
add
mov
ret
jbe
lret
fwait
mov
pop
jno
push
cli
cmp
mov
hlt
mov
cs
dec
cli
sbb
or
push
dec
repz
in
jne
les
std
cmpb
das
loop
sbb
ficomps
xor
cmp
rcrb
or
xorl
js,pt
push
mov
ja
into
inc
test
add
inc
bound
es
or
mov
lret
xor
or
or
inc
cmpsb
push
sbb
lcall
add
es
mov
mov
xchg
add
jl
mov
movsl
sub
mov
insl
pop
mov
fidivl
mov
lcall
dec
fsubrl
cmp
pop
jmp
imul
dec
test
fdivr
in
mov
jmp
push
cli
mov
push
dec
shlb
dec
mov
xchg
pusha
imul
mov
push
jmp
cltd
jnp
fistl
outsb
sbb
sti
pop
xchg
jns
and
loop
pop
pushf
mov
orb
out
jb
push
inc
scas
mov
jo
fs
cmp
insb
cmp
inc
sti
scas
jmp
or
jo
and
xor
imul
inc
jbe
lods
sbb
int3
sti
cld
ss
lcall
imul
outsl
and
inc
ss
cmp
test
mov
jno
stc
cmp
dec
loope
aas
mov
xor
cmp
sbb
push
andb
mov
fdivrl
popa
inc
iret
push
jnp
mov
xor
je
in
in
into
or
or
imul
cwtl
sbb
sti
dec
mov
sbb
jno
aaa
cmp
push
arpl
xchg
lea
pop
cmp
rol
xchg
outsb
lret
lea
repz
icebp
xor
mov
test
in
cmp
mov
into
aaa
xchg
xorl
in
dec
in
sub
cmc
xchg
inc
cmp
adc
add
ss
jmp
jmp
ficoml
mov
mov
mov
push
sbb
jecxz
mov
in
inc
rcr
cmpsl
lret
enter
gs
sbb
xlat
fwait
inc
mov
xor
push
enter
je
jnp
mov
sbb
xchg
arpl
jne
lahf
sti
ret
cmp
ret
popf
pop
dec
sti
lds
fistpl
push
out
xchg
jge
jecxz
cmp
into
testl
cmp
aaa
mov
xlat
and
add
mov
jl
and
add
addl
cmp
je
jl
inc
out
aaa
fidivrs
fstpl
arpl
xor
xor
cltd
push
fidivrl
pop
hlt
bnd
adc
dec
test
fwait
pop
ffree
outsb
xor
loope
sbb
test
shll
test
jp
insl
inc
jmp
jnp
xchg
mov
ja
scas
shrl
or
inc
mov
push
jbe
shrl
mov
xor
or
movsb
push
xchg
test
xor
arpl
sub
int
aaa
sbb
ret
clc
jmp
or
jns
xor
rorl
cmp
test
out
adc
mov
inc
push
xor
jmp
jmp
and
pop
mov
mov
pop
loope
mov
imul
adc
xchg
popa
jecxz
dec
orb
and
pop
jmp
cli
push
ret
test
pop
stos
cltd
and
out
adc
outsl
xor
add
mov
add
mov
lods
adc
cmc
fildl
das
xor
jecxz
xchg
and
inc
mov
daa
iret
icebp
lods
xchg
sub
adc
push
inc
pop
jmpw
pop
outsb
popf
and
iret
inc
das
jge
inc
movsl
outsb
int3
imul
dec
sbb
and
lahf
cmc
and
hlt
lods
add
fdivrl
dec
jb
mov
loope
pop
mov
andl
shll
push
lret
pop
xchg
jbe
lock
pop
sbb
push
aaa
or
leave
lahf
xchg
cmp
push
cmp
push
scas
or
fildl
imul
push
pop
in
movsl
adc
scas
sbbb
mov
or
in
stos
ds
divb
mov
and
call
stc
bound
and
mov
adc
daa
mov
je
out
mov
jg
push
repnz
loopne
or
mov
sbb
call
test
fldlg2
movsb
xchg
rolb
orl
xor
mov
lds
dec
loop
cmp
pop
fildl
test
les
int
adc
and
fwait
dec
add
jno
bound
mov
test
cmp
out
fildll
in
jo
clc
lahf
lock
or
or
dec
daa
fs
rcrb
lret
mov
push
cmp
xchg
xchg
outsb
jb
jb
and
push
cmpsb
or
adc
stos
cmp
or
cwtl
dec
jbe
mov
out
out
mov
sbb
jmp
add
test
in
add
insb
mov
push
and
mov
pop
cwtl
filds
xor
add
ret
sahf
int
lds
mov
leave
stos
aad
jle
xor
pushf
pop
or
fwait
lods
mov
jnp
jmp
cmpsl
add
cltd
pop
negl
push
mov
fcmovb
and
stos
inc
cmpl
ficoms
test
popf
repnz
idivb
sbb
cmp
cmpsb
andl
push
movsl
imulb
mov
xchg
enter
xchg
cmp
je
cmp
adc
cwtl
mov
fsubr
or
mov
push
inc
jb
xor
xchg
fwait
insb
test
mov
cmpsb
push
lods
xchg
xorl
adc
cli
leave
mov
jl
mov
dec
orb
sbb
inc
mov
cmp
or
fwait
mov
adc
and
aas
int
mov
sbb
fcmovnb
xchg
cmpsb
imul
jle
sbb
sub
inc
xchg
push
jg
add
pushf
movsb
add
mov
test
leave
pop
cs
jae
ficoml
iret
test
xor
xchg
stc
sub
push
fs
mov
add
pop
xchg
outsb
or
iret
jns
xchg
sbb
test
test
inc
or
cmp
rcrl
out
arpl
sti
mov
test
rolb
sahf
mov
or
sub
int3
clc
xchg
add
loope
mov
jecxz
mov
movsl
pop
lret
push
mov
jmp
out
sbb
popf
inc
rclb
testb
aad
mov
jp
add
mov
xchg
xchg
ja
xchg
jp
jle
mov
ljmp
lds
mov
push
push
ja
pop
andl
push
ja
and
pop
inc
and
sbb
call
lock
pop
popf
mov
fs
cmpsb
push
test
ds
xchg
inc
fldenv
or
and
jl
nop
in
testb
and
fs
pop
popf
jae
adcl
test
pop
test
adc
dec
mov
mov
push
push
outsl
repnz
inc
push
mov
inc
cmpb
xor
mov
cs
in
rcrl
xchg
stos
aaa
ja
mov
imul
add
lods
pushf
scas
sub
xor
jns
mov
lds
sbb
mov
shlb
mov
test
arpl
iret
rcl
pop
fdivr
jbe
loopne
cmpsb
adc
sub
jge
mov
xchg
cld
dec
arpl
in
std
aam
xchg
scas
mov
cmpsl
idiv
pop
dec
mov
push
and
adc
push
xor
jmp
add
push
push
test
icebp
xchg
xlat
sub
or
sbb
shrb
pop
aad
fdivrl
add
in
cmpsb
mov
icebp
adc
hlt
jmp
in
scas
lahf
call
and
or
test
and
mov
cmp
jge
xchg
push
add
dec
or
scas
repz
maxps
filds
add
xchg
mov
lcall
add
dec
pop
jmp
mov
ret
in
xchg
xchg
and
sub
ror
jns
jecxz
sbbl
stos
fmull
aaa
mov
inc
xor
outsl
push
inc
cmpsb
dec
mov
adc
mov
sub
int3
not
inc
adc
push
mov
xchg
ljmp
or
out
std
fwait
jp
inc
ret
fstl
cmpsb
dec
cmp
repnz
mov
push
mov
jp
insb
fisubrl
repnz
je
push
push
lcall
lcall
aas
in
pop
insl
cmpsl
dec
jnp
xchg
add
stc
mov
pop
insb
adc
or
and
std
xor
and
sahf
push
cld
ror
loopne
icebp
sti
repnz
fstl
mov
subl
mov
xchg
aad
xchg
pop
xor
outsb
mov
fldl
imul
lcall
xor
xlat
jg
ret
ret
les
add
rcll
and
fsts
popf
cmp
lods
sbbb
js
bnd
cmp
incb
jp
xor
mov
cwtl
stos
push
add
jl
or
and
adc
xor
imul
and
dec
push
and
push
pop
pop
mov
out
or
add
shr
daa
jl
sahf
cmp
mov
in
inc
daa
adc
mov
fs
cmp
add
out
mov
js
sbb
inc
push
sbb
aam
mov
or
fcmovne
or
loopne
push
jns
aam
repnz
sbb
sbb
or
inc
sub
repnz
iret
and
add
ljmp
fsubrp
movsb
test
push
xchg
inc
sub
xchg
sbb
add
sbb
xor
sbb
leave
lds
fbld
sahf
dec
push
leave
adc
jbe
dec
js
addr16
adc
repz
or
cltd
jp
iret
mov
arpl
aam
sbb
mov
pop
sbbl
push
pop
aaa
jo
pop
add
aas
cmp
aas
nop
repz
loopne
pusha
cs
cmp
call
mov
jbe
jns
inc
push
cld
mov
push
leave
or
lea
not
repz
adc
das
and
inc
and
mov
sub
add
fisttpl
xchg
and
cmp
inc
fisttps
jnp
enter
pop
ret
ds
into
pop
incb
rcrl
inc
or
imul
mov
ljmp
push
push
fdivrl
mov
cmp
test
inc
repz
sbb
clc
in
add
mov
push
mov
outsl
addr16
and
jo
pushl
insb
shll
fs
clc
insl
test
push
call
or
and
sbb
inc
inc
or
pushf
xchg
jecxz
sahf
testb
inc
pusha
and
dec
sbb
or
cmc
test
ljmp
xchg
jl
ret
test
xchg
push
mov
and
or
mov
scas
ficoms
inc
inc
lock
push
stos
punpcklwd
stos
adc
cmp
ss
xlat
fstpl
scas
pop
xchg
xchg
adc
xlat
push
cmpsl
adc
inc
jb
dec
imul
out
pushf
das
push
xchg
mov
sub
shll
mov
mov
mov
lods
fisttps
in
daa
out
inc
sub
push
or
push
dec
push
or
dec
fwait
jle
cmpsb
mov
jnp
mov
xor
add
pop
pop
adc
mov
inc
out
jae
data16
test
in
sbb
add
push
fsub
arpl
inc
shlb
mov
loop
out
xchg
enter
repnz
and
aas
pop
push
inc
mov
jle
sub
scas
popf
fwait
jns
push
test
xor
adc
cltd
add
pop
mov
and
sub
clc
lahf
inc
popf
mov
mov
imul
fstps
dec
outsb
inc
and
repnz
mov
scas
mov
jl
lcall
and
inc
push
fstpt
jle
mov
mov
mov
sub
xor
andb
dec
in
pop
notb
repz
call
lea
xchg
jle
mov
imul
test
xchg
dec
sbb
std
enter
jg
and
jmp
and
mov
cmp
xchg
or
lock
jecxz
sub
adc
in
sahf
arpl
jle
imul
enter
idivl
aad
jae
cmp
cmpsl
mov
jl
cltd
jb
scas
std
orb
mov
xor
cwtl
push
push
out
and
es
mov
xor
jp
mov
xor
mov
mov
mov
mov
jp
push
int3
cmp
push
push
adc
pop
or
mov
sahf
cltd
mov
lret
or
cltd
add
decl
in
clc
push
push
cmp
mov
stos
and
add
pop
scas
jg
add
shrb
xchg
test
mov
pop
mov
dec
xor
inc
and
cwtl
test
roll
dec
test
scas
mov
inc
cs
stos
mov
test
sbb
jns
lods
mov
addl
mov
in
inc
and
aas
inc
xor
les
jns
pop
push
roll
into
je
imul
in
imulb
pop
test
jl
push
or
out
jge
push
ret
ds
dec
dec
mov
ja
mov
shlb
dec
mov
or
pop
aaa
and
sub
outsl
test
inc
jb
mov
xlat
js
gs
inc
jae
sbb
inc
imul
ja
xchg
test
mov
inc
jb
sub
add
pusha
lods
xchg
pop
sub
lcall
arpl
roll
xorb
sub
ret
pop
xchg
ja
sbb
out
xchg
ret
push
scas
and
ss
or
and
in
nop
mov
jbe
das
xchg
xchg
fs
mov
and
scas
or
inc
arpl
push
call
cmp
outsl
xchg
std
je
inc
ljmp
sbb
lcall
mov
idiv
popf
mov
adc
lea
cmp
enter
inc
mov
les
cmp
pop
in
test
pushf
cmp
das
jl
cwtl
jbe
in
into
ret
mov
dec
pop
sbb
daa
mov
mov
test
mov
mov
stos
dec
shl
daa
out
in
inc
fcomps
jge
pop
jb
cwtl
out
sbb
xchg
ret
std
or
jb,pt
rolb
xchg
sub
mov
popf
rclb
out
mov
push
loope
push
cmp
and
lds
add
inc
cmp
cmpsb
adc
xor
rcrl
dec
pop
xchg
mov
xor
pushf
loopne
popf
mul
testl
dec
sahf
test
mov
mov
shl
movsb
cld
jbe
insb
gs
dec
inc
or
enter
mov
push
pop
xor
adc
test
sub
xchg
pop
lcall
stos
test
dec
jg
mov
push
stos
fwait
loop,pt
movsb
addb
fiaddl
mov
push
mov
add
push
xor
divb
dec
loopne
cmp
ljmp
mov
loopne
pushf
mov
mov
sbb
into
loopne
adc
cmp
lods
in
cmp
dec
dec
pop
popf
adc
clc
push
pushf
xchg
mov
btr
adc
dec
xchg
inc
add
adc
loop
xchg
jns
aas
fisubrs
dec
push
pand
cwtl
mov
ds
jo
mov
fcompl
sbb
or
mov
into
fistps
mov
jb
cld
shrl
and
sbb
sub
cwtl
jb
dec
inc
mov
in
adc
shll
shrl
jbe
in
jbe
add
pop
repnz
shlb
push
rol
test
sub
push
test
xorb
shl
adc
inc
mov
mov
dec
mulb
flds
cmpsb
dec
repz
adc
pop
jl
pusha
insb
aad
lea
cmpl
jae
lods
push
jb
ja
inc
dec
and
js
popf
orl
lret
in
pop
mov
dec
or
mov
orb
hlt
rcll
repz
xchg
adc
cmpsl
mov
das
ss
andl
std
pop
aas
pop
scas
lahf
addr16
mov
mov
inc
cmp
cmpsl
xchg
push
adc
dec
xlat
fbld
fs
mov
lods
sbb
mov
push
lahf
pop
movsl
mov
rol
push
pop
xor
popf
add
pop
jge
jl
test
add
or
adc
xchg
aas
fcmovnbe
in
insb
jle
hlt
in
dec
cmp
cmpsb
cmc
mov
movsb
pushf
fists
stos
sbb
pop
cmp
sbb
push
movsb
xor
popf
sbb
in
shll
jmp
dec
repz
push
jo
dec
cmp
bound
lret
mov
fs
jecxz
lods
mov
pushf
fmull
cli
push
add
icebp
jnp
add
outsb
and
mov
add
ret
mov
sub
popf
mov
sbb
in
pushf
jp
movsb
out
and
jmp
cmp
out
iret
mov
adc
and
outsb
call
xchg
daa
or
or
xor
dec
fistl
xchg
or
stc
adc
out
imul
mov
xchg
les
mov
cld
orb
mov
nop
sub
xchg
or
xlat
inc
pop
ret
dec
mov
loope
jnp
test
ja
ljmp
dec
adc
daa
sbb
ret
fmulp
xchg
pop
push
sti
sti
or
fidivs
out
cmp
mov
loope
jge
test
ret
shll
adc
mov
cmp
inc
ret
or
mov
adcb
subb
sarb
push
sub
inc
lahf
jne
push
mov
adcb
xor
stc
add
stc
jnp
leave
xchg
fbstp
mov
and
xor
sbb
mov
negb
push
pop
jno
sbb
in
inc
outsb
cmc
inc
out
bound
jg
pop
mov
pushf
push
push
inc
adc
xor
scas
repz
jno
test
lcall
stos
pushl
aam
xchg
repz
dec
lea
xor
ret
leave
imul
movsl
sub
jns
fiadds
std
popa
add
inc
xchg
ja
orb
mov
fs
cmp
cmp
cmp
dec
push
lret
mov
dec
push
gs
and
mov
sbb
push
and
rcrb
pop
test
jo
aaa
jle
dec
push
addr16
shll
xchg
lret
and
inc
fdivl
cmc
jae
shrl
sbb
in
add
sbb
xchg
lahf
sub
and
and
ret
int3
mov
aad
data16
push
xchg
mov
lcall
jmp
or
sbb
stos
movl
adc
repnz
sub
mov
push
mov
xlat
cmp
push
in
test
cld
pushf
sub
mov
push
fwait
jge
call
jecxz
cmp
cmp
sub
loopne
pop
lahf
stos
adc
mov
push
ja
push
push
mov
cld
es
xadd
je
dec
or
je
sbb
repz
sub
fnsave
pop
xchg
cmp
mov
dec
jmp
or
and
mov
movsl
fwait
xor
mov
dec
mov
roll
fs
jecxz
mov
inc
sarb
jge
or
cld
cmp
ja
ja
inc
and
dec
rcll
int
fnsave
sar
push
into
dec
out
sbb
scas
out
out
dec
cmp
push
jmp
inc
push
cld
add
lods
aas
inc
lahf
cmp
out
add
test
jecxz
jnp
incl
sbb
and
mov
fisttpl
jg
repz
cmpb
jb
and
dec
cmpsb
arpl
lds
fstpt
into
xchg
xchg
mov
add
adc
and
push
insb
pop
lret
mov
push
fs
pop
les
lcall
sahf
pop
mov
jb
test
js
dec
fidivs
rolb
sbb
pop
xchg
bound
inc
das
xor
pop
in
hlt
mov
sub
or
xor
inc
paddd
in
inc
sub
mov
add
and
xor
in
rcr
jp
fnstenv
sub
cmp
sbb
adc
stos
cmp
insb
mov
jmp
dec
sub
insb
cmpsb
pop
mov
sub
xlat
dec
cmp
insl
test
mov
fsub
jecxz
and
mov
sbb
xchg
dec
jl
xchg
jae
jmp
mov
adc
pop
out
aad
popa
orb
stos
bound
cmp
sbb
cs
aad
adc
xchg
call
les
pop
push
xor
jb
leave
gs
mov
rclb
xor
jl
arpl
outsl
pop
dec
mov
cmpsl
cmpsb
inc
push
popf
fwait
movsl
jecxz
nop
daa
xlat
outsb
loope
orl
in
or
fcmovb
push
sbb
add
cmp
shr
cli
xchg
unpckhps
repz
lods
dec
adc
shl
int
or
or
shlb
inc
lret
jns
fsts
and
xchg
mov
push
push
into
xchg
mov
lock
testl
and
addl
aas
push
adc
not
mov
mov
pop
lret
jns
pushf
or
scas
loope
inc
xlat
sub
popa
mov
pop
mov
lea
push
pusha
jg
orb
stc
dec
xor
pop
mov
pop
subb
push
movsl
pop
add
cltd
sbb
sbb
in
lret
inc
andb
mov
stos
jo
mov
cmp
mov
mov
fwait
std
movsb
gs
out
call
mov
outsb
es
in
fsub
lahf
pop
or
test
mov
mov
inc
mov
sub
adc
test
mov
jns
mul
jne
and
data16
clc
bnd
clc
sbb
adc
out
mov
mov
fdiv
sub
pop
add
aad
dec
pop
xor
add
jge
aad
xor
xchg
inc
mov
flds
cmp
in
mov
lea
iret
xor
das
shrb
jl
shl
xchg
test
cmp
les
dec
int
test
fcmovne
xor
scas
mov
js
xchg
xchg
ffreep
sarl
repnz
push
cmp
mov
shlb
dec
add
xchg
mov
cmp
mov
cs
fcmovbe
mov
mov
cwtl
add
lods
or
add
lea
mov
pop
pop
ret
push
and
pop
cmpsl
adc
cmp
sub
xchg
pop
call
mov
imul
or
xor
mov
test
xor
mov
out
loope
test
pop
addr16
cmovne
stos
ljmp
sub
cs
test
mov
jle
push
clc
ljmp
mov
lods
loop
dec
aaa
lret
sub
fadds
jmp
pop
push
push
inc
adc
jecxz
inc
call
int
leave
movsb
sbb
pop
fwait
jae
scas
hlt
push
sbb
or
jp
adc
lret
inc
pop
sbb
mov
sbb
addr16
fbld
je
test
xlat
out
cmpsb
mov
xchg
cmp
scas
clc
mov
mov
js
mov
dec
fcomi
shlb
mov
ret
pop
enter
mov
push
ret
insb
adc
dec
pop
orb
or
xchg
stc
mov
sbb
and
imul
movb
cli
imul
inc
int
mov
gs
nop
dec
test
addl
cwtl
add
cmp
idiv
pop
enter
and
jmp
mov
cltd
addl
xchg
inc
sbb
out
call
xor
dec
fldcw
cmp
inc
inc
imul
dec
ja
xchg
jmp
mov
mov
inc
adcl
xor
mov
enter
cmp
aam
incl
test
xchg
test
dec
addr16
cli
pushf
addr16
jae
or
mov
or
and
frstor
cmpsl
fdivrp
fiaddl
inc
aad
jns
xchg
jmp
fildl
inc
push
push
cmp
mov
dec
into
pop
xor
lcall
and
jp
fs
rclb
xchg
stos
lret
inc
fwait
xor
incb
dec
and
mov
inc
scas
repz
popa
cmp
in
inc
sbb
enter
jbe
add
out
mov
fbstp
mov
std
imul
and
mov
out
xor
testl
inc
sar
mov
in
pop
filds
jae
aas
sub
aaa
sub
and
pop
lret
mov
cltd
subb
and
mov
sub
jl
daa
sub
ret
loop
clc
cld
pop
mov
lret
ror
jnp
lock
adc
mov
mov
xchg
cwtl
hlt
mov
lock
in
sub
cs
push
inc
ljmp
cs
ret
jmp
sub
roll
cmp
repnz
or
clc
aaa
std
das
mov
insb
idivb
call
or
dec
jp
push
pop
inc
outsb
dec
jb
sbb
add
push
fadd
pop
std
inc
loop
push
and
faddl
add
pop
push
popf
adc
int3
or
push
enter
push
ljmp
sarb
jae
and
mov
mov
je
pop
cmp
push
jge
cli
mov
scas
mov
inc
lock
dec
push
jg
sbb
jne
mov
push
sbb
adc
popf
js
xchg
stos
stos
ss
in
inc
mov
dec
fistl
xor
ds
mov
pushf
mov
lods
mov
or
repnz
sub
xchg
sbb
add
jne
scas
hlt
int
sub
incb
mov
pop
xlat
loope
insb
aad
and
xor
push
loop
das
pop
or
aam
xchg
push
pop
cwtl
or
repz
inc
lahf
orb
sbb
into
pop
ret
cmp
lock
dec
mov
fiadds
xchg
push
ret
lcall
fs
push
adc
mov
movsl
pop
sbb
sti
inc
push
clc
sahf
push
add
out
mov
xchg
dec
std
cmp
add
stos
aad
add
mov
int3
or
inc
dec
xchg
mov
mov
lcall
dec
mov
push
aas
in
mov
pop
outsl
mov
repz
test
adc
pop
push
rcrb
dec
iret
loop
movsl
movb
sbb
not
adc
and
cmp
negb
jg
iret
jno
mov
mov
pop
scas
lret
andb
je
out
mov
pop
mov
orb
mov
lds
sahf
jmp
shlb
mov
scas
and
orl
divl
sbbb
adc
mov
leave
jmp
clc
fiadds
std
pop
pop
lret
adc
std
adc
mov
out
mov
push
icebp
aas
aam
sub
and
cli
jmp
xchg
lcall
das
xor
pop
xor
mov
jmp
es
push
push
aaa
jl
mov
jne
xlat
dec
scas
mov
ret
fs
xchg
jl
sbb
daa
repnz
or
bound
cmpl
mov
xchg
leave
xor
notl
icebp
mov
cmp
push
fistpll
inc
dec
push
xlat
icebp
sti
pop
or
lock
outsl
shrl
or
push
popf
in
pop
ret
jecxz
in
push
mov
das
es
jns
xchg
jg
xor
jne
mov
ljmp
int3
lods
xchg
pusha
mov
xor
mov
xchg
cmp
mov
shl
fildl
fstl
or
rep
test
int
lret
gs
int
inc
lcall
scas
shrb
xchg
roll
dec
scas
mul
fimull
or
hlt
hlt
mov
pop
adc
mov
mov
xchg
mov
inc
cmc
and
lret
clc
loope
push
and
hlt
inc
adc
jmp
jne
leave
push
xor
push
jp
adc
mov
lea
out
add
je
xchg
icebp
xorb
hlt
imul
and
cmp
and
movl
and
mov
call
jbe
push
jbe
add
jmp
clc
cmp
xorl
mov
ljmp
loope
sbb
incl
stc
sbb
mov
pop
jne
lahf
mov
inc
mov
inc
dec
dec
cwtl
ja
call
enter
or
fs
lea
push
mov
dec
out
shrb
or
xchg
mov
mov
mov
aad
jmp
daa
jne
test
popf
and
sub
fnstsw
pop
xchg
das
adc
inc
rorl
cmpsl
jmp
dec
in
aam
std
mov
aaa
sbb
sub
fbstp
sub
test
or
jns
mov
repz
shlb
arpl
inc
ja
cmp
xchg
lret
outsl
add
fisttpl
xchg
fsubp
push
mov
cmp
adc
scas
pop
aad
es
loope
popa
sti
inc
adc
in
icebp
loope
adc
or
enter
adc
pushf
dec
push
aas
testb
jmp
into
aas
adc
mov
sbb
inc
mov
jle
aas
mov
clts
mov
popa
aad
idivl
jns
sbb
xor
imul
jo
adc
xchg
daa
pushf
lock
jnp
mov
lock
std
and
cmp
lret
dec
inc
es
and
incb
dec
push
test
pushf
xor
push
fidivl
jno
cmp
adc
inc
filds
dec
adc
push
aam
and
jb
mov
cmpb
adc
xchg
lret
mov
into
mov
aas
pop
jne
int3
scas
mov
pop
pop
enter
mov
cmpsb
sub
cwtl
nop
addr16
and
sbb
js
xchg
adc
iret
pop
loop
lds
adc
sahf
inc
fistps
mov
lock
push
or
xlat
sarl
fimuls
addr16
je
outsb
std
jbe
dec
lods
int
adc
pop
xlat
subl
es
testb
xchg
dec
shll
jno
add
jle
fisttpl
shrb
lock
outsb
es
mov
into
loop
dec
push
xlat
mov
inc
mov
test
or
adc
sub
and
test
sub
imulb
andl
scas
adc
xor
inc
pop
pop
mov
pop
movq
imul
and
fimuls
xchg
ret
std
push
fdivrl
scas
jmp
push
mov
dec
in
jo
stos
lods
and
inc
xor
and
inc
or
loopne
call
lea
jno
and
and
bound
jns
sub
orl
jg
pop
fdivp
icebp
std
xor
add
jge
mov
int3
add
push
aaa
xor
cmpsl
rolb
cmp
movsl
or
or
mov
inc
or
mov
jae
xor
adc
dec
xchg
add
lods
mov
push
mov
ret
hlt
mov
sub
clc
mov
sbb
sub
mov
mov
test
and
pop
or
outsb
popf
inc
mov
js
xor
jmp
out
lahf
vpmuludq
out
xchg
mov
insl
shlb
js
jno
loopne
xchg
xchg
ficomps
in
call
cmp
cmc
xchg
cmc
adc
js
iret
movsl
xor
das
add
pop
and
dec
roll
jo
leave
call
pop
lds
jne
jmp
fs
rolb
rcl
xchg
in
xlat
movsb
dec
fucom
fs
cmpsb
ret
pop
mov
xchg
push
xchg
sbb
dec
push
lret
jle
and
stc
subb
pusha
push
jns
fildll
int
cli
adc
or
aam
push
cmp
aad
test
mov
std
sbb
ja
adc
rcr
xor
pop
mov
iret
pop
mov
push
ret
lods
fwait
mov
inc
cli
jp
je
out
lahf
and
fisubrl
lahf
test
cli
movsb
push
iret
pop
aas
filds
int3
lea
ret
add
pop
leave
js
aad
sbb
sub
das
aam
adc
imul
and
mov
lds
xor
mov
cmp
cmp
repnz
jge
leave
imul
sbb
dec
add
and
inc
cmc
jmp
add
leave
pop
cmpsl
jg
jle
inc
jbe
cld
jmp
push
pop
lods
sbb
loop
pop
jo
jl
movsb
inc
sub
xchg
popa
cmc
sub
sar
loop
and
or
fistps
sub
cs
out
adc
xorl
dec
std
ljmp
mov
or
cmpl
int3
je
sub
fnsave
jnp
inc
pop
cmp
xor
jnp
xor
xor
js
inc
sbb
ret
movb
mov
push
xor
lcall
into
fldcw
pop
loop
adc
cmp
add
adc
dec
aas
mov
les
or
mov
repnz
dec
sbb
test
inc
in
imul
push
cmpb
jo
inc
addr16
dec
inc
pop
or
loopne
cmp
stos
and
rcrb
mov
movsb
lret
xor
scas
cmp
fistps
pop
xchg
adc
push
ret
push
stos
push
cmp
lret
daa
mov
or
lret
jmp
test
pop
ljmp
xchg
mov
mov
lcall
sub
adc
lea
mov
cmc
movsb
sub
and
mov
lods
adc
insl
push
shl
cwtl
fdiv
sarb
bound
jne
mov
stc
std
cmp
jbe
cld
sub
mov
fwait
push
push
inc
inc
shl
popa
js
sub
test
push
negb
mov
add
sar
rolb
sbb
sub
pop
dec
mov
xchg
fisttpl
sub
out
jae
jnp
jmp
adc
enter
test
adc
stc
mov
mov
mov
inc
sbb
mov
push
jge
into
sub
stc
fs
movsl
ja
cmp
mov
add
negb
out
inc
mov
jo
ret
mull
clc
movsl
cmp
aas
adc
mov
loope
fsts
or
pop
xor
cmc
jnp
push
xor
xchg
mov
sub
push
sbb
xchg
pop
out
jl
cli
push
xor
notl
dec
data16
roll
push
push
jb
pop
call
jmp
leave
jno
xchg
or
xor
xor
loopne
pop
fs
sahf
out
fwait
dec
push
in
mov
fldl
push
add
xor
negl
sbb
imul
aas
pop
or
mov
nop
or
dec
or
and
pop
push
cmp
and
jb
adc
cmp
mov
pop
sbb
mov
cld
js
cli
movsb
lret
lcall
cltd
jbe
add
mov
inc
fdivl
int3
das
outsb
inc
dec
fcomi
fidivrs
nop
and
sbbb
nop
mov
jge
shrl
cmp
shrl
aad
xor
je
or
mov
or
push
mov
outsl
fidivrs
adc
dec
jmp
or
adc
inc
sahf
or
lret
les
bound
ficompl
sbb
aad
movsb
xor
stos
dec
and
jbe
xor
jne
push
xchg
cmp
push
or
fisttpl
fstpl
sbb
out
in
outsl
cmp
adc
rcrl
stos
test
andl
ret
pop
push
or
push
mov
or
stos
sbb
movsl
inc
adc
or
add
or
jbe
or
cmp
lahf
das
xchg
inc
ljmp
push
test
mov
sub
nop
mov
sub
sub
and
fnstenv
daa
add
lahf
fs
lods
popa
std
stc
dec
ret
fstpl
push
add
mov
xchg
addl
inc
js
mov
sbb
cmpsl
data16
in
cmp
fsubs
in
push
bnd
bound
insb
sbbb
jge
xchg
sub
mov
and
shrl
cli
ss
xor
scas
mov
add
xchg
test
and
cwtl
dec
andb
shl
je
sub
gs
push
mov
into
pmullw
and
adc
in
dec
xchg
negb
mov
sub
lcall
int3
aam
shr
fnstcw
or
jbe
adc
sbb
das
dec
mov
and
movb
dec
dec
mov
cld
test
sub
notb
loop
mov
jbe
call
adc
stc
nop
or
inc
jb
dec
dec
jae
mov
bound
dec
mov
aas
lret
mov
repnz
cltd
mov
adc
pop
outsl
stc
xchg
sbb
aas
jo
aam
push
adc
in
loopnew
dec
lods
popa
jbe
jg
aad
test
lcall
rcll
ljmp
jnp
fisubl
cmp
bnd
enter
gs
xchg
test
sub
xchg
out
pop
mov
iret
popa
ret
cmp
pop
sbb
adc
ja
sub
shl
pushf
inc
popa
fwait
xchg
inc
addb
push
and
sahf
cmp
data16
out
xor
and
outsb
cmp
mov
das
lret
lock
pop
je
into
lret
pop
push
insl
dec
mov
movsb
or
jg
testl
push
push
xchg
popa
jecxz
addr16
imul
xchg
les
cmp
lahf
mov
mov
dec
mov
push
push
test
dec
fnsave
mov
push
sub
js
xchg
pop
inc
lock
loope
popl
bswap
dec
jno
cmp
aam
mov
mov
mov
pop
xchg
pushf
lret
cwtl
mov
jns
scas
pop
ficoms
pushf
inc
sub
aam
ss
ds
pop
push
mov
dec
mov
sub
shr
mov
push
jnp
test
push
mov
rorl
mov
inc
cs
outsl
inc
iret
mov
sbb
orl
gs
pop
lcall
popf
in
fisubs
inc
pop
fs
jbe
xlat
cltd
jb
jno
inc
shr
cmp
cltd
xchg
int3
daa
pop
enter
pushl
fwait
adc
lods
testb
jbe
sub
insb
sbbb
adc
fisubl
lods
ljmp
leave
dec
testb
xor
pop
adc
mov
orb
jbe
push
pop
movsb
notb
shll
mov
popf
sbb
adc
aaa
mov
xor
lret
jge
ficomps
popf
mov
pop
mov
stos
ret
push
jmp
sub
das
sbb
jle
and
or
push
fildll
ret
lock
mov
das
rorl
jp
aam
adc
lea
ror
adc
push
shlb
or
cmp
mov
cmpsb
jecxz
std
and
adc
mov
add
inc
sbb
adc
inc
icebp
ds
sub
ret
sub
scas
ja
inc
shrb
inc
sahf
and
push
sti
jecxz
test
cli
jo
pop
scas
adc
lret
push
cmp
mov
adc
rorl
mov
or
repz
movl
xlat
or
ds
psrlw
push
dec
cmp
sbb
lahf
pushf
mov
jns
aad
les
add
push
js
or
lret
fsubl
andb
lock
dec
bound
cmp
inc
test
sub
data16
dec
pop
fstps
xchg
sbb
pop
rorl
adc
testl
cmp
push
lret
pop
pop
cmpsb
aaa
shll
mov
lods
loope
data16
add
inc
sbb
ss
mov
xor
jne
jb
cmp
or
testb
mov
jecxz
iret
clc
sub
adc
push
push
inc
push
push
cmp
lahf
cli
sbb
inc
xor
outsb
rcrl
jne
jnp
cmp
push
jle
add
arpl
xchg
sub
and
dec
jecxz
or
pop
pop
daa
push
sarl
rclb
cmp
cmc
jg
add
aad
and
arpl
sti
adc
xor
lahf
mov
sub
and
jl
enter
jge
in
inc
arpl
mov
and
daa
movsb
rorb
mov
js
push
cmp
not
cmp
ljmp
arpl
repnz
xchg
addr16
addr16
pop
mov
sub
mov
jmp
sub
loop
mov
add
push
xor
cmc
loope
aas
pop
sub
popa
mov
add
push
and
add
adc
sub
jmp
add
pop
movsl
lock
mov
int3
inc
mov
pusha
xchg
adc
aas
ljmp
add
sahf
cmpsb
jmp
outsb
outsb
xor
add
cmp
jl
mov
clc
sub
mov
cmp
sbb
rcrl
clc
ret
dec
pop
adc
pop
mov
das
outsb
pushf
stos
cmpl
lret
jecxz
mov
push
ja
fdivrp
out
mov
sub
xchg
enter
gs
xchg
cmc
mov
cli
addl
cmc
cmpsb
mov
jae
push
cmp
dec
push
mov
and
sbb
mov
mov
aam
pop
dec
je
push
and
pop
xor
data16
pop
ficoms
xor
mov
and
stos
xchg
push
push
stc
jge
cmp
inc
cmpsl
lods
sub
and
add
ds
out
sub
cli
out
dec
mov
jp
push
iret
fsubrp
xchg
sub
mov
cwtl
mov
pop
xor
popa
and
sub
sbb
pop
or
add
out
repnz
xchg
or
icebp
cmp
mov
xchg
xchg
lret
inc
sub
push
sbb
jne
ficomps
inc
xchg
add
pusha
push
lods
pop
xor
pop
ja
and
lahf
dec
std
aam
arpl
and
rcrl
es
or
adc
adc
and
test
std
in
cmc
and
ds
daa
jns
aam
ds
push
repz
push
fcmovnb
add
test
sbbb
jg
popf
jl
mov
addl
lea
sti
xchg
cmp
dec
sbb
dec
test
popf
aam
cmc
test
pop
les
xor
lods
out
jns
xchg
mov
mov
add
inc
repnz
nop
es
shrl
push
mov
out
fs
lods
xchg
inc
cmp
adc
aad
insb
fnstsw
imul
dec
clc
mov
push
or
xchg
repz
mov
into
rorb
test
dec
popf
xchg
pop
lahf
ljmp
sbb
negb
add
enter
test
push
add
clc
xchg
xor
xchg
cmp
in
xchg
cwtl
outsb
mov
xor
pop
sbbb
lahf
rcrb
pop
sub
add
jnp
jnp
fcomi
or
xor
cmc
jg
bound
loope
bsr
cltd
or
lcall
fcomps
mov
mov
and
push
jnp
lods
sbb
xchg
adc
cmp
mov
loop
fs
arpl
or
rcr
cmp
push
sbb
arpl
imul
lret
pop
loopne
hlt
aam
pop
aas
and
lea
adc
mov
loop
xor
jbe
hlt
mov
cmp
jge
in
test
scas
aas
cmpsb
stos
pop
inc
ss
outsb
mov
xchg
jmp
cld
mov
lods
lods
sbb
sub
in
inc
or
in
mov
sahf
and
cmp
cmp
xchg
hlt
ror
stos
xlat
lea
xor
mov
mov
cltd
fdivl
stc
ret
popa
jns
je
int
push
mov
bound
pop
adc
or
mov
mov
dec
jp
icebp
rorb
imul
enter
dec
shll
pop
xchg
mov
sbb
pop
push
roll
aaa
push
push
push
leave
mov
mov
jmp
ret
pop
mov
jbe
xor
and
lea
jl
inc
pop
loope
cmp
adc
fstps
pop
das
inc
jbe
fdiv
cmp
lds
xchg
push
testb
in
mov
in
cmp
jne
sbb
push
inc
daa
mov
popa
aam
nop
mov
inc
lret
and
cmp
and
test
rorl
cmp
aad
mov
mov
test
cmp
lea
inc
fwait
inc
add
xlat
dec
xchg
add
cmp
rorb
stos
pop
xchg
lea
xor
mov
sbb
jo
aas
jg
adc
push
decb
cmp
jmp
popf
push
stos
dec
repnz
pop
xor
jae
pop
frstor
inc
lods
cld
aas
xor
movsl
sub
inc
push
testb
lock
ficoms
pusha
or
jmp
mov
sahf
lcall
cmp
ficomps
mov
rol
push
dec
jno
les
push
stc
int3
leave
inc
jmp
inc
sbb
inc
repnz
sub
pop
in
push
out
orb
int3
in
mov
ljmp
sarb
icebp
xchg
xchg
or
mov
nop
push
int
dec
xchg
lods
rcr
mov
outsb
ud2
sub
lods
imul
ja
inc
js
xchg
jp
loope
js
cmpb
xor
std
mov
lds
jbe
imul
push
mov
cltd
pop
lock
inc
sbb
or
dec
addr16
les
out
stos
sbb
daa
nop
pop
sub
pop
rcr
dec
shlb
push
mov
sbb
popf
xchg
fcmovb
frndint
mov
xor
sub
cmp
cmpsl
dec
cmpsb
mov
stos
int
ja
es
test
jae
sub
xchg
cmpsb
cli
or
cmpsl
mov
jbe
jno
lret
push
call
mov
and
in
in
mov
pop
jmp
out
jmp
call
out
icebp
xorb
mov
stos
ret
push
xor
aas
fs
adc
sub
shll
lret
add
xchg
mov
clc
push
cmp
iret
pop
out
sub
sub
or
or
pop
push
out
orb
adc
iret
mov
std
jo
and
ss
and
mov
or
mov
repz
sub
aad
repnz
pusha
add
sbb
inc
in
sti
dec
pop
out
dec
leave
dec
mov
out
lods
push
sub
push
mov
pusha
pusha
pop
les
mov
xrelease
add
sbb
ljmp
and
mov
out
push
cmc
lock
ret
insb
xchg
push
xchg
xchg
pusha
jle
or
push
adc
mov
dec
inc
pop
dec
cmp
subb
jnp
cltd
inc
jmp
push
testl
iret
xchg
push
clc
xor
data16
inc
arpl
or
push
push
dec
stos
in
mov
push
cs
add
mov
push
sub
mov
popa
sbb
bound
mov
jae
clc
xchg
pop
rcrb
push
mov
ss
addr16
stc
sbb
dec
adc
push
jnp
add
xchg
pushf
imul
sbb
xor
aam
adcb
aad
pop
dec
cwtl
ret
adc
aam
xor
or
sbb
mov
add
or
or
loop
dec
push
jo
rclb
clc
adc
sub
stos
dec
icebp
adc
cmpsl
mov
push
enter
pop
mov
mov
int
pop
pop
imull
int
xchg
inc
pop
pop
out
test
push
lcall
push
sbb
mov
fiadds
nop
stos
jmp
push
mov
fs
lahf
cmp
adc
and
dec
adc
jb
out
jbe
out
inc
ljmp
int3
mov
jle
cs
movb
mov
sub
sub
inc
mov
jne
insl
adc
adc
inc
in
in
jmp
cmc
out
or
adc
scas
dec
repz
lahf
int
mov
out
xchg
imul
xchg
sbb
add
mov
and
mov
mov
xchg
push
mov
dec
sti
in
and
mov
roll
pop
in
pop
shl
cmp
int
sbb
andb
mov
pop
xchg
mov
inc
dec
sub
pop
outsl
lds
add
adc
sub
mov
in
dec
mul
jo
mov
mov
stos
cmp
popf
or
mov
push
cmp
or
push
push
cmc
mov
push
cwtl
sbb
nop
xchg
imull
inc
fwait
outsl
test
jecxz
jmp
sbb
hlt
nop
stos
pop
jmp
mov
movsb
pop
lret
mov
and
das
shrl
xchg
dec
xlat
sbb
and
test
cmp
mov
fimuls
add
adc
mov
repz
push
ss
int3
push
sbb
sub
dec
repnz
stc
stos
sub
and
adc
stos
fldcw
mov
xchg
mov
insl
imul
pop
sub
mov
and
push
loopne
scas
sub
cmp
jnp
dec
ds
xor
js
sub
mov
ret
cmp
ror
jbe
arpl
mov
sahf
fwait
and
icebp
push
in
out
out
cmc
xchg
test
jle
ret
lcall
outsl
outsl
clc
sarl
add
aaa
cmp
out
scas
jmp
lods
sub
clc
stc
out
xlat
aaa
cmp
roll
mov
mov
sbb
fwait
xor
mov
out
shll
lds
sbb
shl
test
shr
loop
test
mov
inc
add
and
xchg
cmc
out
ffree
jecxz
mov
cwtl
sub
or
inc
test
out
pop
out
int3
mov
xchg
lret
loop
and
ror
or
inc
pop
mov
push
fwait
mov
inc
ljmp
loop
mov
ljmp
fnstenv
and
das
mov
cli
fldt
xchg
fwait
outsl
push
xor
cmc
insb
xchg
xchg
xor
or
push
out
dec
jne
dec
adc
shrl
ss
mov
fldcw
jne
jmp
mov
ror
add
ror
cmp
outsl
sub
adc
xchg
popf
clc
sub
push
push
pop
sbb
mov
loopne
lea
xchg
xchg
and
mov
arpl
notb
fcomps
and
mov
popa
subb
mov
lahf
jns
scas
inc
sub
loop
mov
das
xor
out
sbb
xchg
dec
scas
mov
sub
inc
mov
icebp
adc
xchg
inc
scas
js
mov
push
and
out
pop
mov
xlat
inc
and
das
dec
sbb
loopne
loope
out
imul
or
inc
sub
pop
rolb
push
jg
pop
std
push
pop
data16
cltd
lock
pop
lret
das
push
pop
shlb
dec
cltd
jp
ja
jmp
xlat
ljmp
push
push
lahf
call
add
das
stc
or
xchg
leave
xchg
cmpsl
inc
jle
mov
nop
sub
sub
cld
pop
sbbb
dec
cli
dec
rorl
jg
fsubr
fidivl
mov
mov
sub
fs
or
adc
sub
pop
aaa
aam
fisubrl
rclb
and
arpl
lret
fwait
jge
dec
jge
pop
or
jle
lea
ja
mov
cltd
pop
imul
mov
jl
inc
cld
dec
push
jbe
xchg
or
xchg
sti
scas
bound
in
or
and
mov
push
mov
mov
orl
sbb
mov
fildl
mov
aas
subb
xchg
clc
pop
jns
out
fsub
jl
add
shll
dec
inc
call
xchg
add
and
ret
mov
popa
lods
xchg
xor
out
sbb
jmp
push
andb
es
adc
iret
call
sti
test
shrl
lcall
loopne
mov
lods
in
add
jmp
xor
mov
inc
jae
ljmp
lahf
sbb
in
push
movsb
out
imul
mov
lcall
in
push
sbb
imul
inc
mov
push
dec
jbe,pt
jecxz
xor
movsl
sub
cmp
das
lahf
imul
sahf
jne
jno
fs
popf
mov
test
push
daa
cli
jecxz
jbe
mov
mov
jno
mov
ss
popa
sub
push
adc
push
pop
fs
push
addr16
gs
lock
iret
jb
sahf
out
pop
sbb
xchg
movsb
or
loope
mov
in
xor
shl
cmpsl
out
cmp
sbb
dec
adc
fisubs
outsb
pop
lea
jg
imul
ljmp
mov
fidivrs
pop
xor
lods
adc
inc
mov
push
push
xchg
xchg
pop
inc
inc
mov
mov
sbbl
jno
out
cmpsb
enter
sub
push
out
aam
lods
adc
mov
sbb
mov
inc
push
xchg
lret
push
jne
test
xchg
mov
adcl
jno
pop
xor
int
cmpsl
fs
sbb
and
or
pop
icebp
lret
inc
mov
rcll
cmc
xchg
in
cmpsb
cmpsb
insb
add
push
jecxz
xchg
add
into
inc
xchg
inc
and
loopne
sub
push
dec
pop
mov
insb
cmpsb
loopne
shll
mov
popa
push
push
jnp
jnp
inc
jl
inc
ss
cmpsl
outsl
jl
lahf
into
test
push
lds
insl
ficoml
popa
xchg
lret
out
push
shl
data16
stos
push
sub
dec
mov
push
in
cmp
xor
inc
sti
sbb
leave
sub
lock
mov
jle
xor
test
call
ret
pop
cltd
sbb
mov
push
lods
jecxz
repz
addl
push
test
sbb
sub
pop
int
insl
sbb
mov
leave
jns
pusha
mov
lahf
or
mov
aas
outsb
push
inc
and
xor
pop
adc
adc
dec
movsb
lds
addr16
es
dec
pop
test
dec
xchg
mov
pusha
in
xchg
mov
inc
xlat
dec
nop
jae
jo
mov
out
dec
lahf
divl
lock
inc
int
fisttps
push
and
call
movsb
mov
jge
pop
fidivl
mov
out
mov
call
out
sbb
adc
bound
outsb
insb
mov
lret
cmp
or
jmp
push
ja
push
add
lods
insb
cmpl
xchg
and
insb
pop
push
inc
pop
or
cmp
rolb
decl
test
adc
addl
stos
jge
out
mov
xchg
mov
lock
mov
jae
xlat
xchg
cmp
adc
mov
xchg
cmp
je
inc
mov
or
cli
xor
loope
or
dec
loop
addb
sti
sbb
insl
adc
dec
add
lret
out
enter
out
into
and
add
out
movsl
inc
add
negl
and
ss
pop
mov
rcll
ss
or
jmp
popa
push
ja
mov
pop
fwait
sbb
mov
jbe
lods
les
fistps
sub
mov
nop
adc
push
std
push
mov
pop
inc
mov
push
and
ljmp
idivl
xchg
xchg
subl
inc
ss
or
rorb
jl
jno,pn
test
adc
jno
mov
jmp
dec
xchg
jbe
fisttps
aad
outsb
stos
fadd
ret
iret
mulb
cmc
adc
addr16
xor
test
arpl
fwait
dec
jo
mov
jmp
sbb
jnp
push
scas
pop
cwtl
imul
aam
xchg
ret
insb
mov
push
sti
ljmp
js
xlat
je
jmp
inc
sub
mov
inc
in
lea
mov
sub
mov
adc
repz
test
je
in
pusha
rolb
dec
add
mov
pop
jg
xchg
sbb
mov
movsl
xchg
push
in
es
inc
icebp
test
cltd
icebp
mov
mov
call
mov
mov
mov
insl
fistpl
adc
test
lock
push
jecxz
leave
mov
in
aam
into
fbld
sbb
scas
unpcklps
xor
out
sbb
inc
pop
vmovntdqa
add
lock
aad
cltd
cli
loopne
sahf
iret
and
arpl
aaa
testl
outsb
clc
mov
cmp
add
out
jae
mov
dec
push
cmp
mov
add
mov
xor
int3
or
or
addr16
dec
int3
adc
xchg
fisttps
xor
adc
inc
sahf
imul
xor
pop
sbb
xchg
inc
loopne
divl
ja
out
idivb
lret
mov
xor
pop
push
dec
mov
jecxz
fnstsw
xor
sarb
fwait
jbe
sbb
fdivp
and
shlb
test
dec
or
out
imul
ss
in
insl
inc
lds
mov
or
fsubrl
insl
outsl
popf
pop
repnz
push
jmp
scas
xchg
test
rclb
lahf
xchg
pushf
sub
pop
aas
mov
js
cmp
cmp
sbb
insb
add
xchg
xchg
mov
scas
xor
add
fwait
aaa
fisubrl
rcrb
dec
imul
rorl
jecxz
jne
adc
push
push
jmp
pop
in
sub
dec
mov
xchg
push
sarb
sbb
pop
xchg
dec
jge
xchg
pop
sbb
insl
xor
les
jne
xor
inc
cmc
movsb
dec
mov
rolb
add
and
in
dec
mov
shlb
es
add
movsb
mov
push
push
stc
scas
ret
pcmpeqd
xchg
inc
cmp
adc
stos
enter
outsl
ret
and
sub
pop
xchg
push
mov
leave
xchg
xor
and
sub
xchg
in
mov
repz
sbb
and
ljmp
outsb
popa
push
cs
jo
cmp
lea
addr16
mov
dec
inc
cmc
test
add
inc
push
mov
andl
mov
in
jns
sub
sbb
mov
add
jmp
outsl
fbstp
pop
sbb
loop
sub
pop
xor
mov
aam
mov
mov
and
std
inc
lock
int
mov
sub
sbb
dec
orb
jne
int
test
jb
sbb
xchg
xchg
loopne
popa
and
or
mov
sub
pop
je
xchg
stc
outsl
mov
mov
insw
or
repz
mov
pop
xor
repz
std
in
mov
lahf
nop
mov
push
sbb
mov
add
mov
es
insb
mov
shrb
xchg
dec
xchg
or
cwtl
or
jnp
sarl
ret
or
pop
sbb
hlt
jp
bound
mov
test
loope
negl
push
pushf
insl
test
mov
popa
mov
andl
mov
outsl
fxch
jb
adc
xor
mov
adc
aas
jo
mov
xor
and
mov
ja
pop
xlat
and
xchg
push
jmp
xor
out
mov
mov
loopne
sub
push
dec
mov
cltd
out
loopne
popa
in
sbb
test
out
popa
inc
scas
adc
shll
mov
push
mov
xchg
ret
pop
aaa
xchg
inc
cmp
lods
stc
addr16
les
lods
out
ljmp
cmp
adc
and
scas
or
push
sbb
fwait
fs
fsincos
sahf
fstpl
mov
movsb
rep
mov
mov
fsqrt
mov
adc
jmp
js
iret
jbe
scas
scas
xchg
mov
cld
stos
mov
sbb
test
scas
inc
mov
jle
rorl
cs
and
sub
push
and
mov
les
rol
mov
repz
inc
lods
ja
lcall
push
aam
sbbl
push
in
pop
rorl
sub
test
shr
cs
outsl
jg
adc
mov
stos
movsl
pop
sub
cmc
jecxz
insl
into
out
mov
mov
arpl
sarb
data16
aaa
adc
dec
and
cmp
pop
ljmp
negl
int
lods
xor
cmp
jge
mov
fisubs
dec
cld
push
adc
clc
push
aam
scas
stc
xchg
stos
scas
sarl
cld
cld
push
aaa
sbb
add
decl
gs
pushf
sti
aaa
dec
pop
pop
sub
jae
sbb
ret
rclb
inc
mov
and
rorl
cmpsl
fistl
call
dec
bound
push
loopne
cmp
pop
jecxz
push
lret
mov
mov
dec
leave
mov
mov
sbbb
sbb
es
push
in
adc
call
pop
fimuls
popf
lcall
insl
test
mov
leave
push
jo
fs
adc
or
subb
cld
packuswb
xchg
ljmp
mov
nop
fsts
in
push
xchg
scas
add
push
daa
fisubrl
js
out
xchg
xlat
or
sub
pop
inc
push
push
das
icebp
dec
test
ja
push
sub
repnz
std
imul
dec
nop
add
movsl
daa
leave
adc
mov
ss
mov
call
inc
fsubrs
sub
loope
movsb
andb
arpl
mov
dec
out
in
push
pushf
loope
mov
pushf
dec
repz
ss
mov
lock
ljmp
aad
xchg
fstpl
ja
adc
mov
lret
adc
jae,pt
out
xor
daa
pop
and
enter
and
adc
sahf
test
call
bound
jno
mov
fnstenv
imul
adc
test
inc
and
lahf
stos
pushf
xor
xchg
sbb
jbe
lret
push
and
sub
dec
inc
or
jecxz
cwtl
jmp
mov
insb
test
jge
ja
pop
dec
add
sub
scas
cmp
mov
sbb
pushf
lcall
xor
xor
in
xchg
mov
aas
cmp
push
jp
pop
iret
jle
mov
jb
sbbb
sub
pop
fnsave
mov
sti
cmp
sub
push
push
cwtl
jg
mov
mov
jo
adc
pop
inc
dec
aam
in
fs
sub
loopne
std
leave
cmp
jl
aaa
pushf
je
es
insl
testl
iret
jns
dec
ds
adc
dec
cmpb
sub
stos
daa
ret
dec
jecxz
cmp
pop
sbb
xchg
nop
push
sbb
pop
and
gs
jl
cmp
nop
mov
or
notb
dec
enter
ljmp
xadd
sub
mov
ret
cmp
imul
mov
sbb
mov
test
ja
jp
in
mov
aam
out
int3
je
push
rcrb
mov
hlt
add
call
sbb
rclb
cli
sti
xor
xchg
inc
sub
jecxz
mov
mov
stos
jg
xchg
out
push
mov
xor
dec
cmp
and
add
push
sbbb
mov
adc
ja
sub
test
stos
je
movsb
fsts
push
aad
xchg
loopne
mov
leave
xchg
and
stos
xchg
les
mov
mov
popa
jmp
addr16
mov
cmpsl
adc
sub
gs
sbb
add
jnp
mov
in
inc
jne
stc
push
jno
hlt
xor
rorb
jns
lods
gs
jno
test
dec
sbb
adc
shlb
mov
dec
cmp
rcrl
clc
xchg
jne
das
or
fsts
sti
pop
fisttpl
hlt
or
and
aas
push
dec
xchg
jle
mov
imul
jbe
bound
ds
sub
mov
dec
iret
inc
add
sbbb
xchg
jbe
ds
lcall
push
cmp
iret
and
jo
sbb
leave
jmp
mov
arpl
push
ret
lahf
push
mov
add
mov
and
stos
jmp
aaa
bound
sahf
ret
sub
das
adc
cmp
mov
mov
sar
scas
mov
pop
leave
cmpsb
mulb
dec
mov
sarb
bnd
or
mov
xchg
adcl
adc
pop
mov
mov
mov
mov
cmp
jo
subb
mov
aad
lods
xor
subb
in
js
sub
icebp
fildll
outsl
pop
rorl
jl
xchg
ret
test
lds
lds
pop
dec
mov
cmp
xchg
repnz
test
test
xor
xchg
outsb
dec
js
xor
scas
fbld
sbb
into
or
ds
les
imul
xchg
nop
out
jbe
xchg
mov
sbb
imul
xchg
and
mov
lods
movb
out
aas
jle
adc
sbb
mov
aas
push
jno
mov
and
xchg
fmull
sub
mov
ds
lahf
or
pop
inc
orl
xchg
jae
pushf
test
js
cld
push
push
or
ljmp
mov
or
out
cmp
int
std
pop
cmp
shll
aam
jmp
jb
jnp
pushf
movsl
iret
sub
dec
push
mov
sub
pop
lods
out
sbb
push
jecxz
and
mov
mov
adcl
jg
pop
push
outsl
js
adc
sub
inc
pop
adc
mov
sbb
pushl
popf
ficoml
pop
psubsw
xchg
mov
pop
adc
and
stc
xchg
iret
adc
es
xchg
or
sbb
mov
dec
jge
mov
call
imul
outsl
inc
in
pop
test
jmp
out
mov
jne
leave
xchg
mov
int
jno
or
pop
xor
jnp
loop
cmc
adc
jp
popf
or
jo
adc
sbb
add
je
cmp
cmp
push
jecxz
add
mov
pop
jb
lea
shlb
es
movsl
and
cmp
cmp
cmc
loope
inc
push
cmp
lahf
outsb
xchg
out
mov
cmp
bound
sub
push
loopne
adc
mov
es
fisubrl
ret
xor
and
hlt
mov
or
popa
xor
push
hlt
push
movsb
or
and
dec
inc
mov
xchg
sbb
out
mov
hlt
mov
es
xchg
pop
sbb
lods
xchg
adc
mov
mov
mul
add
push
pop
daa
cs
sti
lret
xorb
xchg
xor
aad
adc
ror
push
arpl
cmp
je
mov
pushf
sub
iret
mov
incl
and
mov
push
adc
out
jge
xchg
mov
mov
jecxz
stos
cmc
push
jo
jns
xchg
mov
fstpt
orb
cli
das
loop
stc
imul
xchg
inc
sub
push
or
aam
dec
inc
and
xchg
cmp
xchg
leave
xchg
add
and
popa
mov
loop
mov
sbb
aas
test
test
inc
stos
mov
xchg
or
add
enter
sarl
pop
push
and
aaa
mov
cltd
mov
sbb
arpl
mov
push
jnp
dec
shll
and
test
pop
cmpsb
xchg
repz
jecxz
mov
scas
push
js
aam
bound
adc
stc
sbb
leave
sbb
mov
add
arpl
movq
mov
out
loop
mov
jl
mov
outsb
sbb
jecxz
add
mov
xor
data16
sbb
inc
sti
sbb
mov
jecxz
shlb
inc
xor
inc
cmc
js
xchg
sub
or
movl
lret
sbb
cmp
ja
mov
mov
pushf
sub
outsb
xchg
test
sbb
cmpb
push
mov
ja
push
xor
lea
pushf
sbb
inc
sbb
push
mov
xchg
cmp
dec
ja
jbe
leave
fs
fcomps
mov
or
and
jmp
inc
and
nop
out
and
or
rcl
jbe
inc
mov
aad
loop
aam
push
es
cmpsb
sbb
mov
addl
push
addr16
sub
dec
cmp
daa
xchg
arpl
imul
rcrl
test
pop
inc
cmp
ja
inc
dec
cmpsl
cmpsl
popa
inc
add
mov
clc
and
cmp
pop
es
pusha
sbb
ret
dec
in
fwait
ljmp
cmp
insb
cmc
jb
es
inc
inc
loop
movsl
xor
inc
out
jg
mov
mov
mov
repnz
cmp
fildll
xlat
stos
add
rcl
imul
inc
push
xor
add
call
pop
ror
mov
add
xchg
stos
js
sub
lds
aam
ja
fcompl
mov
in
xlat
jge
add
or
xor
push
lea
cmp
ret
aad
ja
sti
mov
dec
push
or
pop
mov
pushf
arpl
cmp
mov
movsb
fcomps
testl
cwtl
push
mov
jno
adc
push
push
clc
pop
mov
das
or
pushf
xchg
cmp
xor
or
push
jl
jp
or
gs
stos
push
cmc
sub
loopne
test
inc
mov
and
divl
jge
roll
dec
test
jnp
aad
jno
fstps
xchg
sub
subl
js
les
pushf
mov
js
mov
ret
mov
stmxcsr
cmp
jnp
sbb
xchg
dec
repz
cmp
out
dec
iret
add
mov
mov
adc
cmp
loop
lret
leave
jmp
cmc
fwait
xchg
mov
pop
scas
mov
lea
xchg
aam
adcb
shrl
mov
jmp
xor
xor
cmpsl
mov
sbb
lods
mov
andb
mov
mov
pushl
cmc
fs
pop
adc
sbb
inc
jns
cwtl
test
mov
push
aam
cwtl
cs
xor
and
sbb
out
inc
inc
icebp
nop
push
jbe
dec
pop
push
es
push
mov
in
das
js
lds
daa
call
push
inc
pusha
add
adc
bound
movsl
fsubl
fsubrl
push
lret
adcl
xchg
push
sbb
jp,pt
lods
xchg
pop
or
or
fdivrs
rorb
test
scas
sbb
cmovle
fs
push
jnp
loopne
insl
jae
xchg
add
xchg
aaa
js
xchg
aas
pop
dec
daa
jb
and
sbb
cmpsb
sbb
stos
push
icebp
loope
mov
dec
scas
jno
sbbb
sbb
add
mov
cs
xchg
ja
lret
fisttpl
adcl
xchg
int3
add
adc
shll
or
or
cli
shlb
repz
fisubl
cld
cmpsb
outsl
dec
xlat
loopne
test
sub
xchg
int3
push
inc
imul
xor
sti
fstl
sbb
popa
dec
push
cli
dec
ds
mov
push
xchg
inc
int
inc
dec
inc
aam
sub
testl
sub
popf
inc
neg
ror
leave
jns
mov
enter
lea
sub
insb
lods
fcmove
jbe
push
hlt
loop
pop
daa
cmpsb
mov
jmp
xor
mov
out
out
and
add
jbe
pushf
test
pop
fsubrl
inc
adc
mov
and
inc
les
sub
xchg
mov
adc
fmul
mov
sbb
sub
push
pop
dec
arpl
out
xor
pushf
cmpb
inc
push
jno
inc
xor
adc
int
or
lods
pop
fnstcw
fisubrs
test
clc
dec
pop
fistps
das
shrb
fwait
pop
add
add
mov
cltd
fnstsw
fdivl
mov
add
xchg
rorl
push
fiaddl
pop
shl
fstpt
outsl
sbb
cmpsb
fildll
mov
pop
shl
adc
pushl
ror
dec
stos
jecxz
dec
out
cld
sbb
int3
inc
lds
daa
pop
adc
and
xchg
xor
mov
stos
mov
xor
cmp
cwtl
dec
push
mov
mov
fsubrl
scas
sbb
mov
lods
or
test
addr16
pop
jnp
or
push
cs
jg
cltd
push
or
add
stos
cmp
push
sub
add
fdivrl
xorl
xor
push
lods
or
into
jle
ret
xor
call
call
sbb
cltd
xor
andb
pop
mov
push
outsb
stos
cwtl
mov
mov
stc
jl
mov
dec
xchg
fildll
imull
lea
jb
jecxz
inc
jnp
scas
inc
xchg
es
pop
mov
jg
lods
or
adc
add
lcall
xor
imul
adc
push
jbe
fcoml
outsl
lcall
popf
mov
mov
cmpl
testb
sub
aaa
mov
ret
add
mov
or
push
ret
orl
xchg
inc
add
xor
out
shl
mov
inc
out
fucomi
out
repz
in
mov
pop
loope
cli
int3
lock
inc
jp
in
sub
add
mov
sbb
xchg
mov
ror
inc
mov
je
out
pop
jl
or
mov
sbb
stos
cld
xor
or
sbb
sahf
dec
xchg
push
cmp
mov
lahf
ljmp
xchg
movsl
pop
cmp
shrl
jb
stc
jecxz
mov
dec
imul
xorb
mov
iret
insb
js
push
repz
call
push
push
and
sbbb
scas
test
sub
test
test
xor
mov
mov
fwait
mov
mov
jecxz
mov
xor
or
xor
jbe
sub
in
pop
jge
fs
aam
lods
pop
out
shlb
and
hlt
stc
mov
lcall
mov
mov
or
sbb
stc
pop
xor
fcmovnbe
jbe
jl
fs
jl
jge
inc
jg
hlt
stos
fsubrp
ljmp
addb
push
sub
das
push
xchg
xchg
cmp
outsb
xchg
xchg
mov
sbb
mov
mov
bound
jno
andb
xlat
lock
out
sub
aas
mov
popa
push
pop
gs
mov
cmp
pop
in
stos
sbbb
and
dec
pop
insb
sarb
ds
fwait
pop
je
movd
mov
fisttps
inc
out
hlt
sub
mov
dec
push
sbb
mov
ror
pop
push
cwtl
shl
xor
je
addl
aaa
jb
or
push
sub
leave
push
sbb
mov
and
dec
jge
mov
or
cli
mov
fs
or
loope
ds
or
xchg
jle
pop
mov
insl
xchg
or
out
sbb
cld
cwtl
popa
inc
push
lods
sbb
sub
rolb
jle
or
and
cmp
sbb
insb
xor
add
fcmovb
scas
loope
popa
scas
sub
loope
int
sub
rorl
add
xor
cmpb
xchg
daa
push
mov
dec
add
push
outsl
push
shrb
sub
inc
sti
sbb
xchg
jns
fwait
and
sub
xchg
insb
outsl
push
stc
nop
jbe
jnp
xchg
stos
setne
ss
adc
add
pop
lahf
pusha
bound
roll
les
clc
in
push
xor
inc
sbb
nop
out
cld
mov
push
aad
pop
mov
xchg
mov
sub
and
aas
cmp
les
lea
test
jl
nop
xorb
out
std
inc
add
inc
je
andl
out
sbb
aad
repnz
out
ja
mov
or
or
daa
out
sbb
mov
add
hlt
xchg
js
fcomp
int
repnz
inc
dec
or
add
lcall
xlat
push
outsb
inc
insl
lds
lret
add
sbb
lret
popf
jns
mov
cltd
sub
ss
sbb
enter
xchg
in
xchg
add
dec
or
outsl
ss
mov
mov
das
shl
setbe
ljmp
and
rol
mov
xchg
adc
div
jl
stos
push
aaa
jge
pop
and
roll
sbb
lea
in
in
leave
add
mov
mov
stc
mov
jbe
and
lods
mov
mov
cmp
pop
cmp
sub
popa
xor
cmpb
and
sub
neg
push
mov
add
dec
scas
test
test
push
adc
ss
cmp
inc
gs
inc
mov
js
mov
lret
fimull
or
jmp
stc
sub
push
dec
jg
push
imul
shlb
add
cmp
sbb
jb
push
dec
add
movsb
out
push
sub
xchg
loop
mov
or
cmp
out
xor
sub
scas
add
sbb
fisubl
ljmp
cmp
shrl
mov
cli
outsl
and
les
pop
sbb
adc
pop
mov
and
call
jnp
push
sbb
mov
js
test
ret
push
mov
icebp
mov
aad
out
pop
adc
test
mov
sub
les
xchg
loope
jg
mov
popf
mov
and
out
cwtl
push
xor
pop
jl
loope
push
in
ss
lret
ja
addr16
cmpsb
dec
les
adc
imul
nop
pop
lahf
inc
sub
rcll
inc
cmpsl
or
rcrb
stos
mov
clc
gs
les
and
sti
dec
loopne
cmp
push
add
mov
fs
cmc
jae
dec
ljmp
and
mov
mov
cmp
mov
imull
or
cmp
xchg
popa
xor
aam
popf
mov
popf
mov
lret
push
mov
fs
inc
jecxz
mov
ret
out
fimull
test
out
mov
jle
sub
popf
sbb
repnz
sub
mov
pop
mov
adc
stc
ret
lea
xlat
out
push
test
push
fcmovnu
push
cmp
in
sub
mov
and
pop
test
lods
add
cmp
xor
les
and
repz
ljmp
mov
sub
sub
jne
test
cmp
jns
fcomp
fwait
push
xor
inc
rcll
pop
enter
add
xchg
dec
movsb
lahf
adc
lds
mov
ret
mov
jne
jge
scas
mov
mov
jecxz
jecxz
js
mov
inc
pop
fldenv
in
mov
das
jae
mov
mov
cmp
fnclex
push
ljmp
sbb
and
xor
mov
icebp
jae
mov
xchg
loop
fildll
cmpsl
inc
std
inc
mov
mov
xchg
test
jmp
mov
les
jnp
aad
or
jo
or
lods
mov
and
jae
adc
mov
add
sti
stos
sub
in
lcall
mov
sbb
insb
jp
fdivp
cld
in
lds
push
test
test
mov
mulb
inc
fnstcw
outsb
cltd
dec
or
insl
aas
mov
push
push
mov
iret
xchg
fdivrl
addr16
pop
sbb
stc
push
xchg
insb
xchg
mov
jl
lea
loope
shrb
aaa
aad
fcomps
push
cmpb
xchg
loope
and
js
prefetchwt1
xchg
mov
lea
push
add
mov
lea
idivl
fs
shr
adc
lods
mov
cli
test
sub
jmp
dec
bound
inc
fldt
mov
xchg
cmp
fcom
push
orl
push
mov
enter
push
shl
jb
dec
push
sbb
adc
mov
xor
imul
or
push
je
stos
xchg
add
xchg
loope
jle
movsb
adcl
jecxz
pop
push
cmp
mov
pop
insb
mov
cmp
sbb
sub
outsb
nop
arpl
sti
push
mov
and
cmp
sub
dec
fdivrs
or
and
rcl
add
inc
call
in
inc
js
jecxz
add
cmp
mov
fs
xchg
push
add
jae
filds
mov
sbb
test
push
and
jnp
sbb
aas
gs
aas
ret
aad
cmp
out
nop
sbb
call
out
loop
and
cmp
out
ffreep
insl
dec
ljmp
pop
arpl
fiaddl
in
lods
push
ds
std
push
cmp
cli
fs
fdivrl
imul
cmp
aaa
stos
in
xchg
ret
cli
ss
gs
fmul
cmpsl
jae
xchg
imul
fmull
rcll
lds
mov
or
int3
jb
add
fucomi
push
and
push
sub
adc
or
nop
jg
pop
call
mov
push
pop
mov
dec
fstps
ret
leave
es
lods
dec
jle
pop
xchg
imul
inc
dec
and
xchg
jmp
in
sbb
push
lcall
insb
pop
pop
js
movsl
flds
ds
int
pop
push
mov
sarb
mov
mov
pop
ja
mov
rorl
sub
mov
leave
push
iret
dec
iret
dec
dec
xor
mov
scas
inc
iret
fmul
mov
pop
aad
and
push
add
cmp
call
test
mov
jmp
sbb
cmp
gs
sbb
xor
jle
xchg
out
adc
or
mov
ss
outsl
xlat
adc
pusha
adc
movsb
adc
cmc
pop
scas
dec
sub
ret
dec
clc
push
jo
enter
mov
sbb
mov
cmp
mov
pushf
fstl
mov
jmp
repz
fs
mov
jns
cmp
or
xchg
jne
and
ds
mov
mov
pop
cmp
xchg
adc
xchg
pushf
into
inc
xor
sti
dec
mov
add
push
pop
lahf
xor
movsl
push
dec
dec
jecxz
xor
and
in
mov
inc
mov
jae
hlt
xchg
ret
outsb
or
test
push
or
adc
pop
jb
addr16
and
fmull
aaa
inc
push
jp
cli
lea
lds
je
jle
sbb
pop
mov
in
mov
loope
sarl
lahf
insl
ja
mov
dec
pop
cli
aad
addl
adc
sub
loop
dec
mov
test
jge
rcrl
scas
xchg
test
mov
das
xor
pshufw
sub
cmpl
arpl
js
rol
cs
cmp
or
in
dec
jecxz
pop
dec
shll
pop
xlat
test
mov
xor
cli
inc
inc
das
in
pop
mov
out
lods
cld
ljmp
xchg
out
push
scas
fdivrl
sar
mov
fisubl
cmpsl
ljmp
loope
or
cmc
push
aaa
mov
test
cmp
hlt
cmp
rorl
jnp
sub
xchg
jmp
pop
lcall
mov
fldcw
pop
jne
and
sub
pop
add
mov
sub
hlt
shl
ret
in
push
add
inc
aaa
push
and
rclb
jne
ds
int3
mov
pop
xchg
dec
xor
jbe
out
repnz
pop
outsl
push
pop
sub
jnp
adc
les
pop
cmpsb
add
inc
sti
loopne
or
mov
push
rorl
sub
in
out
pop
cmp
popf
outsl
dec
clc
stos
pop
gs
lea
xor
mov
xchg
jp
and
cltd
sbb
das
xchg
gs
sbb
push
jge
jmp
adc
jl
dec
jns
gs
sbb
nop
or
loop
mov
dec
cmpl
add
fs
mov
jecxz
outsl
jae
sub
xchg
jl
xchg
mov
push
fisttpll
in
mov
push
fwait
or
add
shll
lock
scas
mov
cmp
push
movsl
shll
sahf
bound
insb
insl
leave
add
push
xchg
cmc
insl
xor
xchg
xchg
push
rcr
pushf
or
arpl
leave
add
or
outsl
xor
inc
fsubs
pop
loopne
fcompl
sub
jecxz
cmp
mov
mov
xchg
xchg
or
cmp
xchg
iret
and
cmp
cmp
incb
in
push
fadds
jb
mov
lcall
test
aaa
je
push
lea
in
dec
cmp
push
sbb
imul
iret
je
mov
popa
push
adc
test
orb
or
xchg
aad
subb
adc
sub
out
inc
mov
push
sbb
dec
test
aas
pop
aaa
cmp
jp
jge
shrb
mov
cld
dec
cmpsl
iret
scas
jne
pop
mov
mov
lods
arpl
and
enter
mov
jecxz
adcl
mov
sub
jmp
xor
out
mov
shrb
ret
pop
into
inc
mov
dec
pop
pop
sbb
fsubrl
push
lods
fisttps
pop
and
out
rolb
lds
insl
into
push
ret
call
cmp
jb
sbb
gs
inc
mov
jno
jns
fidivrs
in
push
mov
ret
push
mov
cmpsl
shll
jo
jcxz
sbb
fistl
addr16
loop
sbb
pop
shrl
sbb
mov
or
cmp
mov
push
and
mov
test
popa
roll
out
add
lret
out
xchg
pop
mov
pop
fistl
add
adc
dec
add
je
pop
xchg
cli
ds
std
pusha
test
imul
jo
mov
pushf
mov
pop
aam
hlt
dec
lea
shrb
cmpsl
call
pop
xor
repz
dec
and
xor
mov
jl
mov
or
cltd
cmc
rcl
mov
mov
mov
sub
mov
cmpsb
pushf
ficompl
call
cld
adc
jmp
shlb
push
icebp
outsl
sbb
adcb
test
rolb
adc
xchg
cmp
mov
xor
and
jbe
jecxz
xchg
sub
jge
ror
xlat
cmpsb
int
add
inc
pop
cli
fidivs
popa
sti
call
int3
aam
adc
jno
out
inc
arpl
inc
pop
hlt
pop
sub
lea
mov
inc
shl
es
mov
std
push
ds
push
lahf
adc
repnz
les
dec
orl
scas
mov
daa
xchg
aas
and
int3
std
sahf
jo
xor
pop
push
add
adc
and
rorl
dec
insb
mov
inc
ds
push
imul
repnz
or
mov
push
mov
xchg
inc
es
xchg
lods
mov
cwtl
xchg
aad
mov
sahf
test
mov
jo
mov
mov
loope
das
lods
sub
xor
cld
mov
insb
or
add
rorb
fisttpll
loopne
test
arpl
mov
int
adc
jbe
lods
lods
pop
cmc
push
out
negl
shld
hlt
cmp
lret
scas
addl
xor
inc
das
clc
cmp
shrl
daa
add
inc
jg
pop
in
xchg
xor
xor
movsb
push
insl
jecxz
call
inc
daa
sti
add
adc
out
stos
cmpsb
jns
nop
mov
sti
js
cmp
jmp
push
ret
xchg
dec
dec
or
fildl
xchg
push
adc
sub
mov
mov
cld
sub
ss
shl
sbb
push
add
insl
popf
add
aam
lods
jne
or
scas
and
dec
mov
xlat
dec
jae
mov
je
xchg
in
mov
mov
sub
fwait
xchg
cmpsl
jg
mov
sbb
and
xor
push
mov
jle
stc
mov
xchg
frstor
xchg
jmp
inc
push
pushf
fwait
mov
insl
jo
mov
out
pusha
addl
and
jmp
cmp
lret
adc
pop
into
inc
aaa
push
sarb
adc
mov
test
or
xchg
mov
add
je
sbb
push
xor
pop
repnz
sahf
clc
inc
inc
outsl
lahf
popf
push
inc
int3
pop
inc
mov
dec
repz
cmp
shll
loopne
je
adc
jne
sub
lahf
cmp
xor
scas
loopne
mov
push
xchg
lea
adc
xlat
je
inc
pop
negb
xchg
fidivs
dec
sti
jl
xor
cltd
sub
jge
adcb
cmpsl
loop
xchg
pop
das
mov
mov
jmp
inc
cmp
sub
and
mov
push
ja
sbb
mov
repnz
enter
lret
mov
dec
dec
push
scas
jnp
inc
cltd
popf
stc
cmpsb
sub
call
lea
jne
inc
cwtl
ljmp
leave
jns
out
jmp
fdivr
nop
jae
mov
je
fwait
jne
cmp
mov
xchg
bound
pop
mull
mov
daa
sar
mov
or
in
jle
in
ljmp
mov
mov
adc
leave
mov
dec
mov
sub
push
mov
out
lds
dec
mov
mov
xlat
movb
inc
cmp
lods
out
jbe
and
lods
inc
cmp
cmc
ja
xor
shlb
push
mov
testl
push
sahf
sub
mov
sub
jge
or
mov
jge
pop
push
scas
xchg
mov
pushf
push
aaa
int
mov
mov
mov
les
dec
xchg
and
xchg
sub
lods
and
ficomps
aad
repz
pop
rcl
mull
test
fmuls
ds
cmp
add
int
cwtl
sbb
fscale
dec
scas
jl
lds
movsl
lret
sbb
loopne
mov
mov
jnp
cmpsl
enter
sub
fcoms
pop
mov
push
cmpsb
xchg
inc
pop
ret
lret
jne
mov
lock
and
aad
jae
xor
mov
js
std
mov
lahf
inc
ret
iret
stc
popa
mov
adc
inc
cmpsb
cmpsl
and
dec
in
test
lds
mov
adc
icebp
jg
xchg
mov
sbb
jg
lods
mov
call
push
pop
mov
ss
adc
adc
cs
mov
jns
fwait
jecxz
pop
shlb
add
stos
cli
xchg
cmc
daa
mov
std
inc
in
sbb
clc
or
sbb
adc
sar
xor
cmc
add
scas
cmp
mov
push
outsb
and
or
pop
jmp
mov
mov
icebp
lret
hlt
je
add
sbb
inc
ds
mov
ljmp
into
mov
xor
fucomip
cli
pusha
fidivrs
int3
mov
pushl
scas
filds
clc
and
iret
cmp
sub
inc
mov
jecxz
inc
jl
arpl
in
movsl
cmp
xchg
cltd
in
inc
xlat
and
addr16
push
or
nop
pop
adc
push
aas
mov
mov
xchg
mov
inc
xchg
inc
js
fsubr
stos
xchg
add
mov
or
loop
sbb
cmpsb
xor
xchg
sahf
adc
pop
wrmsr
mov
add
jmp
int
inc
repnz
push
andl
xor
js
pop
test
test
stc
stos
or
mull
enter
shll
inc
pop
stc
test
icebp
adc
dec
sub
mov
pushf
push
jecxz
fcmovu
pop
outsb
mov
and
insb
mov
mulb
cmp
adc
push
sbb
inc
clc
fimuls
sarl
ja
jo
mov
fucomip
sbb
cmp
out
andb
out
imull
and
lret
mov
js
dec
or
or
jl
ja
int3
xor
pop
les
inc
inc
mov
enter
pop
cmp
sbb
mov
nop
aaa
into
aas
and
dec
dec
xchg
fstpl
mulb
roll
out
cmp
cmp
pusha
mov
je
push
mov
sub
push
add
jne,pt
lcall
add
mov
mov
out
popa
lods
loopne
subb
push
xor
inc
je
jecxz
hlt
add
and
rol
je
aaa
add
cmpsb
test
and
xorps
push
ja
push
mov
mov
push
push
and
cmp
sbb
pop
mov
dec
aad
std
scas
xor
jbe
cmpsb
pop
mov
push
mov
aas
sbb
xor
adc
xchg
push
sbb
lea
sarb
lea
es
mov
stc
idiv
inc
push
sub
out
adc
push
imul
sbb
rorb
inc
pop
jmp
jle
cli
addr16
push
mov
xchg
xlat
or
lret
ret
lret
out
dec
out
addr16
in
movl
inc
das
fidivrs
popa
and
lock
outsl
fisttpll
mov
pop
insb
fidivrl
xlat
and
pop
cs
ficomps
add
inc
xor
ret
cs
mov
fwait
push
dec
xorl
and
lds
xchg
imulb
xchg
push
into
mov
stos
xor
fbstp
dec
cmp
and
jne
cmpsb
mov
jne
cmp
out
push
movsl
ja
scas
in
xlat
xlat
mov
inc
cwtl
aad
daa
xchg
fadds
lds
mov
xor
mov
xor
xchg
roll
shll
xchg
inc
pusha
jge
out
repnz
shll
xor
pop
fcomi
les
fwait
outsl
cmp
pop
or
adc
cmpsb
in
push
xchg
ret
test
imulb
add
adc
adc
test
imul
pop
pop
mov
call
pop
clc
mov
test
adc
jo
icebp
and
rclb
into
push
in
mov
testb
pop
loopne
cmp
adc
pop
sbb
inc
cmpsb
add
test
testl
fidivrl
cltd
sbb
std
lds
mov
pop
and
add
int
scas
mov
lret
repz
xchg
mov
cmp
add
push
aas
xchg
push
aaa
std
cmp
jne
stos
xor
aam
and
mov
cmc
or
test
js
in
mov
ss
and
push
inc
jecxz
adc
jge
or
push
pop
dec
mov
in
and
pminsw
jnp
add
hlt
mov
mov
sbb
outsl
cmp
sub
dec
icebp
add
fisubs
loope
xor
sub
or
sbb
cltd
les
cmp
scas
xchg
jl
mov
lret
insl
lea
fwait
push
std
out
mov
add
add
fsubrl
div
jl
mov
xor
outsl
inc
and
adc
or
data16
xchg
add
or
inc
inc
mov
xchg
adc
movsl
push
fisubs
hlt
sbb
mov
cli
insb
xor
mov
je
fdiv
cmpb
shll
cli
or
cmpsb
pop
adc
icebp
addb
and
mov
mov
int3
or
push
jge
mov
mov
mov
aas
adc
sbb
pop
cmp
loopne
jne
jno
dec
sbb
das
sub
ss
xlat
je
mov
jmp
dec
cmp
fwait
mov
inc
loope
shlb
addb
jno
mov
jno
inc
add
rcll
into
mov
pop
fnstsw
movsb
aam
cltd
popfw
add
jecxz
daa
fmuls
fst
outsl
out
pushf
out
sub
pop
js
aaa
xor
rolb
out
mov
push
mov
xlat
icebp
stc
pop
jecxz
sub
adc
mov
mov
ret
lds
mov
aad
in
adc
aad
cmp
fdivrl
push
clc
pop
inc
les
repz
cmp
xchg
push
jne
pop
fldenv
outsl
insb
movsb
xchg
dec
scas
mov
inc
je
in
mov
in
cmc
dec
adc
push
xchg
lds
add
in
push
sub
stc
add
and
dec
dec
push
push
scas
add
lret
loop
push
push
dec
cwtl
dec
pop
jl
push
fidivrs
f2xm1
xchg
adc
loopne
sbb
ret
dec
inc
push
or
sbb
pop
jb
pop
rcr
jmp
pop
dec
add
test
sbb
movsb
aas
or
sbb
and
xchg
sub
and
pop
adc
ja
xchg
xchg
lret
dec
lret
sti
inc
pop
or
pop
arpl
lret
enter
jae
sbb
jmp
fwait
mov
mov
and
cmpsb
dec
jmp
xor
pop
jl
push
in
sbb
iret
sub
fldlg2
cmp
enter
push
jae
inc
push
adc
dec
in
and
dec
clc
xor
or
rclb
in
data16
loop
test
test
xor
dec
mov
xchg
bound
sub
sub
or
adc
incb
loop
ror
lcall
lods
mov
shl
pop
adc
cmc
cmp
xor
xor
pop
push
sti
jbe
pushf
sbb
test
es
cmp
fcomps
push
cmpb
ljmp
dec
sbb
mov
cmpl
out
and
inc
stc
and
arpl
sbb
mov
lcall
mov
fldl
shrb
insb
bnd
pop
push
movsb
xor
out
or
mov
mov
movb
mov
inc
lods
jmp
pop
cmc
xor
daa
jns
inc
int3
daa
popf
test
pop
aad
mov
or
dec
in
lock
in
jle
dec
pop
sub
movsb
out
rcl
xlat
std
push
adc
inc
sti
xchg
mov
test
adc
xchg
add
dec
or
sbb
int3
lock
jl
aam
icebp
mov
popa
jl
xchg
outsb
adc
das
in
data16
push
out
cmp
shr
nop
loop
scas
cmpsb
cmpsb
dec
jmpw
popa
subl
in
mov
pushf
shl
jp
ret
out
movl
jns
mov
adc
add
dec
xchg
jmp
push
adc
sbb
jg
cmp
push
sub
pop
test
lea
jno
jno
ret
mov
xor
aam
or
sub
es
inc
cmp
inc
sbb
fldcw
lock
sbb
push
cmp
imul
or
and
test
jbe
cmpsb
jp
and
bound
or
lahf
mov
xchg
jecxz
and
out
test
movsb
shrb
sbb
ffree
push
int3
cld
jbe
mov
sbb
popf
mov
push
insl
push
jg
clc
add
insb
incl
int
cltd
jmp
add
mov
addr16
sbb
lcall
mov
scas
icebp
addb
inc
xor
push
icebp
ret
dec
ret
or
mov
sub
hlt
das
in
loope
mov
dec
mov
das
lock
push
outsl
fcoml
mov
outsl
aas
rorl
inc
cmpsl
loopne
xor
xchg
mov
xor
mov
inc
mov
cmp
push
test
mov
ljmp
cli
inc
insb
push
push
inc
push
or
lods
clc
stos
orl
xchg
mov
xor
push
in
subb
add
dec
sarl
xchg
mov
mov
sbb
xchg
sub
cs
scas
imul
test
sahf
jnp
pop
out
xchg
pop
mov
xorb
sub
sbbb
xchg
movsb
in
xor
loop,pt
arpl
ja
inc
addr16
std
fdivrl
and
add
shrb
aam
push
push
fsub
adc
lods
adc
std
out
call
inc
jmp
lahf
xchg
push
aas
dec
sbb
cmp
std
hlt
int
insb
mov
mov
sbb
mov
or
arpl
int3
mov
inc
add
push
add
sub
movl
mov
jne
insb
ss
xchg
pop
xorb
sub
xchg
mov
cltd
pop
fincstp
jbe
sub
cmp
add
outsl
and
lock
and
repnz
xchg
fnstcw
push
movsl
sub
jns
rclb
jns
mov
ficomps
leave
push
sbb
or
pop
pop
daa
sbb
pop
inc
shrl
jle
into
shl
xchg
sub
add
scas
cmp
dec
jecxz
add
je
js
sbb
loope
loop
dec
into
test
xor
repz
leave
arpl
push
dec
mov
inc
dec
lods
movsl
add
sub
xchg
clc
iret
cmpsb
dec
xchg
inc
mov
clc
adc
sahf
adc
dec
mov
aam
dec
scas
fistps
lret
pushf
ljmp
sarb
scas
sbb
ja
jl
loop
and
mov
sbb
cmp
push
xchg
mov
je
adc
repnz
sub
pop
rcll
lock
ret
ja
pop
pop
mov
push
dec
daa
and
and
mov
pop
lret
sti
cmp
jbe
cmp
bound
jmp
mov
mov
mov
adc
cld
outsb
adc
pop
popa
sub
addl
cmpsb
pop
mov
adc
pop
je
ljmp
cmp
insb
or
mov
shll
cli
adc
mov
insb
dec
inc
pop
idivb
pop
out
sbb
stos
cmpsl
xor
notl
stos
jmp
stc
mov
nop
xchg
pop
jg
inc
mov
jge
mov
push
lcall
ljmp
xor
iret
jl
std
jg
jp
sub
sbb
cmpsb
sub
add
push
add
sbb
imul
jecxz
mov
mov
push
sbb
popa
cwtl
sbb
int
inc
jb
and
fwait
mov
adc
movsb
add
pushf
dec
mov
and
insl
insl
sbb
xor
icebp
pop
jg
movsl
inc
dec
mov
jne
cmp
pop
test
loop
inc
mov
or
adc
cmpb
cld
add
mov
sub
jae
scas
imul
jne
scas
xchg
cmpsl
dec
dec
sbb
cld
and
lret
loopne
dec
pop
sub
enter
pusha
pushf
clc
into
pop
adc
es
out
sub
dec
mov
icebp
in
subb
xchg
hlt
add
inc
add
test
sub
sub
inc
fcmovnbe
dec
ja
and
nop
jmp
dec
cmovnp
lock
repz
push
push
dec
hlt
jecxz
rorb
jo
popf
ret
or
adcb
jecxz
fcomp
in
pop
icebp
pop
push
sub
js
pushf
pop
xor
cmpsb
dec
je
mov
pop
mov
mov
fldt
jbe
mov
test
in
clc
adc
cmp
mov
mov
inc
lds
pop
dec
sbb
inc
mov
roll
mov
loope
pop
adc
mov
xchg
cltd
mov
fdivs
or
movb
leave
sti
inc
movsl
insb
insl
ljmp
mov
xchg
repnz
fisubl
or
arpl
enter
leave
mov
jo
loopne
fistps
lahf
pushf
mov
mov
test
test
fmul
aas
adc
adc
cmpsl
mov
push
es
in
pop
cltd
iret
loop
rcl
sbb
fists
fadds
sub
sub
movsl
into
push
push
ja
sbb
pop
xchg
mov
cmpb
adc
insb
ljmp
fsubr
pop
into
daa
dec
aam
push
arpl
icebp
clc
cmpsl
mov
aad
and
icebp
pop
aaa
lods
imul
std
inc
xor
ret
and
je
sarb
cmpsl
lea
ds
or
inc
repnz
stos
xlat
add
push
aas
dec
jg
inc
cmc
and
and
into
cmp
js
iret
jae
aam
pop
outsl
loop
or
fmull
push
push
insb
hlt
adc
pop
call
push
push
movsb
push
mov
push
inc
adc
sbb
xchg
jno
jmp
cmp
scas
jae
push
lahf
mov
ja
shlb
push
and
pop
fdivp
mov
ss
jo
popa
ffreep
xchg
int
data16
xchg
mov
sbb
mov
fstp
jne
fwait
sbb
or
in
mov
push
xchg
jl
inc
andps
rclb
dec
cltd
mov
jae
add
test
xor
scas
test
bound
clc
cltd
mov
imul
adc
popa
stos
push
and
ret
mov
add
andl
xchg
daa
xchg
jbe
pcmpeqw
xlat
jno
lret
call
mov
inc
jp
or
jmp
mov
mov
or
or
mov
int
push
mov
sarb
ret
movsl
jp
xorb
mov
repz
mov
pop
and
sbb
push
xor
mov
jp
sub
stos
testb
in
aaa
outsb
adc
cmpsl
pop
xor
add
adc
fcmovu
inc
or
inc
insb
repnz
pop
push
dec
xor
pop
xchg
push
cmp
pushf
jae
cld
fcomp
out
pop
out
push
mov
sbbb
ja
mov
mov
out
adc
lods
and
push
mov
mov
sahf
pushf
and
lods
xor
xchg
mov
lcall
sub
and
inc
sub
stos
pushf
icebp
popf
or
inc
stos
dec
loop
or
addl
cmp
xchg
imulb
mov
icebp
sub
pushf
xchg
sbb
push
pop
loop
sbb
es
push
pop
icebp
lods
xchg
and
jne
shlb
jg
pop
insl
fs
fstl
jmp
mov
xor
jge
pop
dec
std
lock
cmp
je
push
outsl
mov
push
es
jl
jge
cmpsl
xchg
push
mov
mov
and
jb
and
xor
cmp
jo
aad
xor
ret
sub
ss
popf
dec
out
push
out
orl
jmp
icebp
scas
jl
test
mov
dec
enter
ljmp
sbb
lods
int3
and
addr16
lcall
push
sbb
arpl
jae
cmc
nopl
xor
mov
push
lock
out
or
adc
insl
clc
and
rcrl
aaa
subb
idivb
sti
push
and
mov
or
or
mov
mov
mov
sub
pop
test
mov
or
xchg
daa
incb
jns
adc
inc
shl
mov
jg
inc
mov
adc
icebp
arpl
pop
mov
aaa
jnp
inc
or
jmp
jle
push
neg
mov
jno
add
test
arpl
xchg
jae
jo
cld
lcall
push
or
add
imul
fists
nop
fisttpll
sbb
movsl
jg
outsl
ret
test
sbb
and
in
repnz
push
xor
test
xlat
xor
cmp
out
repz
sub
outsl
jge
or
aas
fcompl
mov
lods
dec
test
jne
iret
fcompl
xor
leave
test
adc
das
fcom
aad
xorl
adcb
mov
imul
roll
mov
fdivrl
testb
xchg
jns
jne
out
add
add
idivb
bound
jb
mov
icebp
xor
sub
adc
mov
dec
mov
aaa
sti
sbb
jae
movsb
xchg
aad
loop
push
pop
and
shlb
int
sbb
test
jle
mov
jb
inc
mov
push
and
xor
je
repnz
xor
mov
or
cwtl
fwait
adc
xor
sub
ja
mov
hlt
adc
out
das
inc
pusha
fnstcw
out
or
stos
sbb
ja
enter
sub
in
shrl
mov
push
pushf
leave
icebp
mov
sbb
mov
repnz
lahf
ds
pop
mov
aad
xchg
dec
movsb
jp
fiadds
mov
xor
unpckhps
inc
mov
or
cwtl
xchg
imul
sub
or
pop
push
inc
jg
aam
and
inc
xchg
lcall
sti
das
imul
xor
cli
cs
mov
mov
cmpsb
scas
hlt
push
vlddqu
ss
mov
xlat
lret
xchg
lahf
adc
or
mov
push
or
cmpsb
mov
daa
pushw
pop
cmp
push
out
and
and
out
sahf
ds
xchg
pop
jb
jmp
pushf
inc
bound
aad
jbe
loop
std
inc
dec
or
add
fiadds
push
mov
xlat
js
or
ficoms
and
andb
jge
adcl
outsl
push
jnp
pop
test
xchg
rorb
ja
dec
inc
mov
inc
hlt
aad
and
mov
mov
fs
mov
push
mov
aaa
add
leave
xor
push
push
and
clc
jne
push
add
dec
xlat
into
insb
lods
arpl
sbb
cltd
xor
mov
ret
cmp
gs
mov
pop
stos
fists
mov
popf
lret
enter
xor
mov
cld
jp
les
daa
push
pop
xor
xchg
aad
icebp
nop
fnstcw
xchg
in
icebp
aam
jmp
push
int3
mov
sbb
movsl
mov
sbb
fdivrs
jo
mov
pop
cmp
pop
dec
xlat
out
dec
pop
mov
or
jmp
inc
hlt
or
ds
in
jnp
fidivl
jns
es
and
xchg
dec
pop
pop
xor
sbb
xchg
cld
icebp
push
jecxz
mov
orl
in
adc
dec
sbb
mov
scas
popa
addr16
or
aad
mov
xchg
adc
adc
in
cmpsl
in
jmp
cmc
sarb
pushf
pop
sub
pop
cwtl
cmp
pusha
aad
mov
shlb
jmp
mov
pop
mov
sub
dec
cwtl
lds
jbe
mov
dec
or
insb
inc
aam
and
mov
enter
lret
ss
adc
xchg
pop
je
push
or
inc
jb
popf
pop
xor
sti
pop
lods
add
jle
js
js
and
enter
dec
loop
mov
aam
clc
inc
xchg
shrb
daa
jmp
push
ss
pusha
mov
cmp
mov
pop
call
push
mov
movsl
xchg
xor
push
fsub
inc
xchg
in
sbb
push
jns
sub
adc
xchg
xchg
cmpsl
add
faddp
or
shr
xor
xorl
insl
xchg
lds
inc
enter
mov
in
dec
lods
dec
aaa
pop
mov
jno
or
loopne
add
push
mov
inc
stc
hlt
subl
bound
ret
dec
lods
movsl
xor
ljmp
adc
add
lock
mov
cmp
push
stos
je
dec
loope
sbb
pop
mov
push
push
bound
out
push
dec
repnz
lcall
lcall
cmp
aas
inc
lds
loopne
into
in
jp
roll
mov
push
outsb
xchg
insb
sbb
dec
cmc
cli
cld
sbb
xchg
jg
fmul
add
addr16
jnp
jo
les
in
push
dec
stos
sub
icebp
popa
orb
add
enter
mov
ret
jp
inc
jbe
sub
leave
fisubl
jecxz
sub
mov
sbbl
mov
out
mov
push
pop
mov
mov
and
jae
cld
mov
push
mov
sti
mov
arpl
adc
mov
jns
push
out
pop
orb
out
and
sub
adc
repz
mov
adc
and
pusha
insl
mov
mov
in
negb
enter
dec
pusha
adc
push
popf
cs
loope
mov
mov
out
into
dec
gs
lock
imul
rolb
pop
adc
dec
les
orb
sbb
mov
fidivl
xchg
imull
dec
jmp
imul
mov
lret
int
clc
cmpsl
pop
mov
jge
insl
stc
mov
dec
mov
shll
cmp
jno
out
or
mov
pop
arpl
add
mov
mov
stos
rol
das
add
mov
inc
mov
push
and
andl
das
fwait
jl
ror
inc
sub
mov
and
mov
repz
ds
inc
loope
test
outsb
mov
iret
lret
dec
push
push
mov
and
jo
enter
push
hlt
cs
xlat
mov
pop
add
mov
xchg
jno
test
int3
adc
add
push
mov
push
stos
inc
in
inc
rorl
push
or
xchg
jge
mov
sbb
dec
ja
mov
aas
xchg
mov
xor
scas
inc
dec
and
aad
or
ror
add
dec
sub
jmp
fmulp
xchg
adc
rorb
lods
fsubrs
pop
nop
adc
or
jns
dec
or
push
loopne
test
inc
adc
out
lret
movsb
mov
psadbw
icebp
fistl
pushf
push
pushf
scas
les
sub
jmp
cmc
popa
jns
or
into
add
pop
mov
pop
imul
push
xlat
rsqrtps
shll
sub
mov
lock
syscall
dec
dec
mov
add
icebp
mov
xchg
push
in
xor
xchg
cltd
or
das
rcll
jmp
scas
sbb
scas
ret
push
mov
lods
jno
lret
xor
add
pushf
call
or
cld
lods
push
mov
bound
cmp
dec
aam
rcrb
xchg
dec
filds
test
jge
dec
fadds
hlt
nop
push
insb
in
adc
dec
loope
enter
cmc
inc
push
and
fbld
repnz
outsl
lret
or
stos
xchg
pop
pop
jnp
gs
icebp
mov
mov
adc
xor
dec
mov
fnstenv
mov
jg
dec
lahf
pop
mov
pop
mov
sub
sub
or
ret
push
push
pop
bnd
add
jecxz
sub
cmp
pop
negl
ljmp
mov
mov
es
aaa
jp
ss
aam
test
adc
gs
clc
adc
int3
fadd
pop
cwtl
lcall
push
ja
cmp
push
cmp
iret
mov
cmp
fldenv
add
sbbl
dec
pop
xor
inc
add
jnp
fisubrs
jae
or
addr16
insl
test
push
std
inc
xor
pusha
push
adc
das
mov
mov
push
cs
add
jae
ds
xchg
cmp
inc
pop
out
jmp
cmpsl
jnp
insl
loop
add
cli
inc
fldenv
push
cmp
mov
repnz
test
insl
sbb
fmull
subl
jle
test
mov
out
fdiv
js
pop
outsl
cltd
sti
das
cmp
jbe
push
cmp
sub
inc
andb
dec
pop
mov
aaa
xlat
fwait
mov
push
scas
jle
addb
mov
jl
jae
imul
lret
lds
push
loop
push
repnz
rcrl
sbbb
jecxz
sub
scas
xchg
push
stos
fnstsw
push
in
out
jge
push
xor
fstps
inc
xchg
push
mov
push
hlt
xchg
jecxz
xor
jno
mov
jge
scas
mov
mov
and
adc
or
push
mov
dec
xchg
cmp
push
push
lods
adc
call
insl
sbb
testb
push
rclb
and
mov
add
add
in
iret
dec
aas
adc
pop
or
lock
xchg
adc
roll
xchg
cld
in
cwtl
fidivs
mov
int3
cmp
lcall
dec
jnp
mov
fs
movsl
mov
dec
test
pop
mov
adc
xchg
cmp
cmp
sbb
lods
cld
pusha
cwtl
cmp
pop
or
xchg
mov
xor
repz
inc
pop
cli
or
dec
push
lahf
loop
mov
sbb
out
paddw
pop
jo
mov
sbb
loope
sbb
cmpb
mov
inc
test
out
icebp
mov
sub
sbb
fcompl
push
daa
loopne
add
lcall
mov
xchg
jmp
xor
fmuls
mov
and
or
and
cmpsl
xchg
cwtl
cs
aam
sbb
add
daa
pop
test
mov
iret
jle
icebp
xchg
sti
xchg
cmp
xchg
cli
mov
mov
stos
fdiv
pop
data16
gs
popa
shl
insl
push
adc
addr16
dec
sub
sbb
xchg
stos
rcl
or
sbb
mov
push
or
jo
addr16
cmp
jp
cmp
loopne
out
in
loopne
aad
cmc
loop
push
dec
inc
mov
or
add
imul
mov
daa
jmp
pop
enter
and
adc
push
jmp
loop
lret
sbb
scas
out
clc
xor
int3
push
test
adc
cmp
lods
cmp
push
xchg
push
dec
cmp
push
fbld
lods
fistpl
push
lock
add
mul
pusha
cmp
hlt
pop
data16
loop
jns
xor
insb
test
mov
pop
mov
mov
cvtpi2ps
mov
je
in
sbb
sub
insl
hlt
enter
mov
cmp
inc
mov
popa
mov
fwait
popf
lods
mov
sub
xchg
stc
xor
pushf
jne
lcall
sub
sub
insb
loopne
ljmp
mov
cld
sub
jno
sbb
leave
adc
inc
pop
inc
fs
mov
daa
pop
or
popf
popa
push
adc
jbe
int
in
dec
outsb
flds
mov
add
aad
pop
mov
daa
sub
jbe
test
in
test
bound
cmp
or
arpl
icebp
jge
push
or
dec
stc
cmp
mov
ret
ffreep
nop
leave
icebp
pop
mov
rcr
outsb
imul
sub
jnp
test
sbb
hlt
lods
aas
xchg
add
fisubs
add
js
lds
push
testb
cmovbe
xchg
jge
xor
mov
xchg
sub
ds
xchg
cmc
sbb
xchg
ja
sub
popf
jge
push
jae
jp
dec
cmp
out
rcl
test
and
sbb
xor
push
or
loopne
jmp
fdivl
dec
lods
pop
aam
in
ficompl
popf
sbb
lret
cmp
inc
inc
dec
jnp
decb
stos
loopne
in
fisubl
fldcw
std
or
dec
icebp
push
dec
mov
jmp
pop
pop
imul
scas
add
ficomps
pop
inc
and
mov
adc
sbb
repz
mov
ljmp
nop
cmpsb
test
mov
cwtl
sbb
adc
mov
inc
jns
sbb
lret
div
negl
push
sar
dec
ljmp
mov
out
neg
xchg
or
push
fdivrl
sub
fisttps
dec
out
jbe
pop
mov
mov
call
cmp
cmp
mov
stos
loope
pop
sar
sarb
stos
or
and
add
or
nop
movsb
push
or
inc
fiaddl
sub
lock
popf
push
and
das
test
out
or
out
lds
test
xchg
push
or
adc
inc
mov
cmpb
scas
inc
sti
dec
loop
in
or
cmp
pop
mov
sbb
fwait
mov
or
or
jmp
aaa
sahf
cwtl
pop
mov
jo
sbb
das
or
inc
jecxz
cwtl
lea
lahf
dec
addl
cmpsl
mov
jle
pop
mov
movsl
jne
add
add
sbb
das
sbb
stos
gs
mov
adc
imul
dec
mov
and
sub
jns
bound
scas
push
xchg
popa
mov
lock
sbb
push
push
adcl
cli
mov
pop
scas
pop
imulb
adc
cmpsb
dec
movl
mov
shll
repnz
dec
aaa
notl
jmp
jno
into
or
push
adc
add
or
push
std
sahf
or
sub
mov
inc
orl
jecxz
push
repnz
test
push
cs
or
inc
pop
call
int
arpl
je
jl
data16
shlb
or
dec
mov
adc
and
xchg
repz
cltd
test
hlt
out
jne
or
dec
inc
loop
pop
gs
pop
push
in
sub
jnp
adc
push
adc
add
nop
jns
jns
and
xchg
dec
shr
and
stos
sbb
rcll
cmp
movsb
clc
lcall
int
add
xor
movsb
dec
rorl
mov
jg
mov
loop
xchg
push
mov
adc
xchg
fimull
iret
je
lods
loopne
roll
mul
xchg
cli
lcall
cmpsb
test
lcall
cmpsl
loopne
cmp
fs
or
cmpsb
sbb
es
leave
dec
lds
stos
mov
and
fcoml
xor
push
in
pusha
loope
outsl
notb
lret
xor
lcall
cmp
adc
adc
cmp
insl
pushf
std
xlat
push
in
cmp
dec
std
inc
pusha
je
mov
mov
jge
sti
lret
lds
sbb
inc
stos
std
hlt
pushf
std
sbb
pop
aaa
or
aaa
sub
and
inc
gs
leave
pop
and
mov
mov
call
stos
subl
xchg
insb
or
test
in
hlt
fimuls
inc
cli
dec
ja
mov
int3
cmp
nop
inc
lods
push
mov
shll
aaa
xchg
xchg
int3
filds
sbb
ret
sub
inc
sbb
jle
fnstenv
xor
daa
xor
mov
sbb
icebp
out
rorl
repz
sti
aas
dec
imull
jecxz
cld
imul
jno
jmp
xor
dec
cmp
inc
aas
popf
stos
or
and
mov
out
sub
iret
fwait
inc
push
or
cli
iret
xchg
add
add
pop
dec
addr16
shlb
xchg
rdtsc
mov
push
enter
jmp
inc
jg
scas
cmp
fnstcw
ror
inc
aaa
sub
scas
jo
pop
outsl
test
pop
jnp
add
ja
lds
cmp
mov
dec
lret
jne
fists
pop
mov
or
add
out
cs
repnz
push
adc
clc
jge
mov
into
pop
idiv
incl
out
addr16
and
push
pusha
sbb
jno
pop
or
bound
loop
push
call
lods
int3
gs
outsl
xor
test
jae
and
mov
mov
nop
pop
mov
cmpsb
pop
arpl
adc
mov
leave
xor
sarb
or
test
enter
push
sub
aas
rcrl
pop
fsubrs
mov
sbb
movsl
cmpsb
rol
aaa
mov
sub
sub
xor
scas
adc
popa
sbb
das
filds
outsl
dec
ds
and
data16
add
call
call
arpl
xchg
in
in
addr16
clc
testl
jge
fiadds
ficoml
adc
or
mov
fdivs
nop
xor
fdivr
int
repz
test
mov
pop
ret
dec
sub
subl
lds
push
je
mov
inc
fucomp
or
push
sti
mov
dec
mov
sahf
mov
push
cs
cltd
mov
hlt
mov
cmpsl
test
lods
shl
insb
jecxz
insl
cmpb
sti
sbb
mov
cmp
mov
in
pop
sarl
mov
and
enter
into
jns
sub
js
out
add
mov
push
cmc
push
gs
imul
in
movsl
stos
push
cld
ja
test
mov
dec
pop
inc
pop
xor
stc
push
dec
mov
pop
arpl
pop
mov
push
mov
jo
icebp
aas
popa
int
xchg
adc
jp
mov
out
scas
add
stos
imul
add
xor
repz
lret
ljmp
and
rclb
data16
push
fnstenv
mov
mov
scas
and
xor
call
jnp
fidivrl
ret
es
enter
in
push
incl
out
mov
fldenv
sbb
aam
mov
or
data16
jae
mov
jmp
mov
mov
fnstsw
insl
xor
out
insl
cld
cmp
ficoms
xchg
pop
and
jnp
pusha
push
mov
and
xchg
xchg
mov
cmc
cs
aaa
je
adc
mov
jae
inc
call
jg
movsl
test
fdivr
mov
jns
mov
dec
pushf
adc
push
mov
je
xchg
inc
leave
sarb
test
push
inc
gs
mov
jge
movsl
pop
xlat
fwait
icebp
jb
int
idiv
cmp
cmpsl
stos
sti
mov
mov
shr
jae
mov
notl
push
inc
test
orl
mov
lods
mov
dec
fsubr
mov
or
jp
push
sbb
bnd
daa
mov
repnz
mov
call
push
mov
fisttps
lods
inc
jg
and
loop
enter
stos
nop
cmp
psubq
das
mov
jmp
insb
test
incb
push
push
fcmovu
adc
aad
xchg
pushf
gs
adc
sbb
mov
aam
xchg
sbb
gs
popa
lock
pop
fsts
push
popa
sub
lret
outsl
fs
pop
pop
mov
add
push
or
int
add
imul
mov
mov
loop
insl
imul
clc
add
push
mov
or
and
fldt
add
jecxz
mov
inc
roll
push
fyl2x
dec
aam
mov
test
inc
xchg
cmpsl
push
push
pop
cmp
out
bound
sbb
push
cli
arpl
mov
or
jbe
loopne
jno
xor
inc
lcall
nop
sub
call
es
jle
call
push
push
ja
dec
or
mov
shrl
sbb
in
gs
test
hlt
mov
jne
dec
cmpb
dec
adc
or
jo
insb
adc
fsts
push
mov
insb
scas
xlat
push
fidivrl
mov
mov
xchg
adc
xchg
cmp
sti
fwait
adc
mov
gs
mov
mov
cmp
lret
sub
stos
ret
push
mov
sbb
and
inc
xchg
dec
mov
jbe
int3
ja
sub
dec
jecxz
xchg
cli
mov
pop
sbb
lahf
jmp
pop
pop
pop
cmpsl
xchg
arpl
sti
out
insl
pop
push
pop
inc
mov
movb
aaa
pop
negl
bound
add
inc
cmp
dec
add
out
lds
xchg
add
cmp
mov
mov
sub
fdivr
idivb
jmp
and
test
jmp
or
in
shll
mov
test
mov
pop
sub
pop
out
mov
dec
mov
jl
leave
dec
fdivl
mov
fcomps
cmp
in
jmp
inc
mov
shll
sub
shrb
gs
fldcw
xor
add
nopl
pop
std
jle
inc
outsb
add
lret
fists
pop
pop
pop
popa
mov
push
xor
push
cmp
testb
enter
mov
jge
shll
cmpsb
aas
adc
mov
jmp
out
inc
or
cmp
mov
cld
insb
sbb
mov
cwtl
nop
jmp
xchg
shrl
push
pop
dec
adc
in
and
outsb
ja
and
or
mov
stos
repnz
xchg
int
mov
and
pop
jge
sub
pushf
mov
pusha
xorl
fcoml
pop
dec
xor
cs
test
inc
mov
sub
loopne,pt
fcmovnbe
fisubrs
push
test
lcall
jge
int3
pop
sahf
shr
cmp
mov
sbb
pushf
jno
mov
sub
inc
ss
lret
cmp
addl
inc
mov
pop
cmp
int3
dec
add
insb
and
xor
cmpsb
sbb
mov
xchg
out
ljmp
pushf
testb
popa
test
inc
out
push
test
xchg
add
lcallw
xor
lahf
mov
mov
push
aas
pop
pop
icebp
enter
xor
or
cltd
arpl
xor
jne
fcos
dec
aad
mov
bound
pop
cmpsb
aad
lods
jmp
pop
scas
or
adc
dec
inc
pushf
shr
bound
ret
mov
cs
mov
mov
push
cmp
in
jge
ss
and
out
xchg
sub
ljmp
inc
xor
mov
ret
inc
push
insl
loopne
repnz
push
xor
jns
rorl
xchg
je
subl
arpl
push
andl
xchg
shl
mov
out
inc
xorb
xchg
add
je
scas
mov
jle
mov
cmpsb
push
js
adc
sahf
and
xchg
fildll
xor
pop
xor
cmp
and
ret
pop
in
loop
inc
aad
xlat
lret
es
aas
pop
rcrl
dec
pop
out
xchg
dec
scas
mov
add
std
adc
es
scas
push
scas
mov
popa
stos
das
lea
and
or
int
lea
ficoms
in
push
aad
nop
xchg
outsb
divb
mov
fwait
cmp
rorb
sbb
inc
roll
sti
mov
push
movsl
test
movsb
or
in
movsl
stos
mov
jl
in
stos
in
dec
push
xor
loopne
sub
cli
imulb
call
lahf
sbbb
aam
pop
fcmovnu
shlb
fisubl
xchg
dec
mov
sbb
inc
or
pushf
push
int3
pop
mov
jmp
insl
dec
pop
loope
shlb
jns
xchg
fcomps
fwait
dec
stc
mov
aaa
push
sub
aad
dec
cmp
jns
repz
sbb
mov
push
test
scas
call
leave
xlat
add
pop
mov
mov
pop
adc
mov
cmp
in
stc
cmc
xor
aam
in
scas
loopne
mov
fsubl
add
sbb
mov
push
push
aam
mov
push
add
push
into
mov
lret
jle
cli
mov
pop
loopne
int3
push
inc
add
je
adc
scas
mov
test
movsb
jle
add
add
in
inc
cmp
mov
cmpsl
or
jg
sub
cmp
cmp
jp
cmp
into
je
or
push
jmp
and
inc
popa
add
fs
call
movsl
or
imul
push
in
push
adc
adc
sbb
outsl
mov
jno
aas
dec
xor
inc
mov
sbb
pop
repnz
lcall
stos
lods
cmpsl
mov
nop
push
cmp
add
and
fsubp
push
jo
out
push
aaa
pop
gs
mov
jb
and
mov
adc
in
mov
pop
mov
and
xchg
cmpsl
push
loope
sarl
xor
push
iret
push
sbb
rcl
sbb
push
adc
bound
adc
fidivrs
adc
and
fidivs
xor
repz
pop
loope
stc
xchg
call
js
movl
dec
int3
test
cmp
jge
lret
sarl
lods
dec
lcall
sbb
repnz
mov
mov
arpl
add
pop
push
loope
or
inc
out
orl
out
aam
out
push
ret
loop
ljmp
call
rclb
rorb
mov
mov
rdpmc
loope
sbb
aas
inc
out
fistpl
push
add
mov
mov
popa
dec
xchg
out
mov
jge
mov
mov
js
inc
mov
sub
pushf
das
in
xchg
subl
sub
or
mov
sub
cmp
mov
pop
hlt
in
xchg
xchg
cwtl
movsb
cwtl
test
loop
fs
fcmovbe
add
jae
in
lea
pop
cmp
jl
add
xchg
push
add
mov
jge
xor
pop
xor
sub
dec
int
int3
int3
filds
xchg
cmp
jns,pt
outsb
sub
mov
jo
pusha
jnp
dec
pop
dec
imul
push
jecxz
add
adc
repz
or
stc
hlt
fstpt
popa
aam
lods
or
sbb
aaa
mov
pop
into
fwait
inc
pop
or
mov
scas
and
leave
pop
mov
jle
in
add
or
in
daa
cmpsl
ret
cmpsl
neg
sti
adc
testb
popf
lret
xchg
cwtl
pop
and
iret
inc
xor
repz
js
mov
imul
lret
dec
dec
fisttpl
or
popf
int3
cmp
mov
adc
pop
je
mov
jp
test
mov
leave
xor
inc
xchg
daa
adc
ficompl
mov
push
lret
imul
xchg
in
jne
or
arpl
loopne
push
push
jg
jb
gs
jb
pop
sahf
sbb
js
imul
mov
lea
aam
mov
sbb
cwtl
dec
jnp
fcomi
xor
fcompl
aaa
icebp
cmp
jns
andb
dec
xchg
push
mov
sub
enter
mov
mov
sahf
jg
inc
cmp
inc
cmp
jecxz
add
cld
xchg
test
mov
jno
xor
filds
js
std
and
jnp
pop
test
ret
sub
cmp
bound
loopne
sti
in
fdivrs
repnz
or
inc
data16
mov
adc
les
test
cmp
cmp
mov
lret
push
mov
fadds
or
jae
lock
sbb
clc
lahf
push
dec
adc
test
and
pop
mov
aas
lret
out
inc
lods
rcrb
sbbl
cmp
leave
inc
mov
xchg
or
loopne
dec
xor
mov
pop
testl
lock
cmp
cs
shlb
and
mov
aaa
in
ss
jecxz
movsl
lahf
leave
xchg
insl
xor
inc
xchg
xchg
jecxz
sub
movsl
loopne
inc
cs
mov
enter
add
or
xchg
in
stos
inc
adc
push
jecxz
adc
scas
out
dec
outsb
mov
dec
cmpsb
jbe
int3
cmp
pop
cld
mov
fs
pushf
daa
cmp
push
sub
out
or
loop
xchg
adc
ds
fildl
mov
jo
test
cmpb
popf
fdivs
sub
push
cld
xorb
add
jbe
in
int3
push
popa
xor
es
mov
gs
sahf
jne
movsb
adc
lcall
sbb
dec
xor
and
es
inc
or
mov
pop
ret
jae
xor
mov
xor
jge
pushf
jg
dec
sub
or
jno
ret
out
dec
jnp
jg
cs
cmp
mov
push
repnz
pushf
pushf
ds
jne
cmpsb
or
sbb
add
movsb
sub
adc
add
ja
nop
ljmp
addb
pop
mov
xor
data16
cmc
mov
scas
movsb
adcl
mov
rorb
inc
add
scas
lds
mov
fsub
dec
rcr
icebp
cltd
repz
out
aam
cmpsb
jns
bound
push
pop
push
out
arpl
arpl
or
jne
mov
dec
jmp
and
dec
icebp
mov
hlt
lods
incl
xor
mov
stc
mov
scas
mov
adc
cmp
dec
movsl
sbb
cld
or
sub
stc
in
gs
enter
lea
sti
jo
sub
xchg
js
mov
add
rorb
out
cmp
ja
into
popf
rcll
out
sti
jne
push
push
mov
add
sbbb
jmp
int
jnp
dec
fwait
test
int3
stos
ss
ret
cltd
sbb
jae
adc
scas
adc
jmp
adc
xor
sub
frstor
cld
addr16
inc
adc
pop
pushf
add
mov
cltd
jmp
jb
mov
dec
pusha
push
outsb
push
cmpsl
das
rclb
push
cmc
or
icebp
dec
std
or
outsl
fnstcw
addl
xlat
ljmp
and
fucomip
test
loop,pt
inc
add
loop
js
mov
in
in
repnz
fwait
clc
cmp
mov
dec
iret
mov
rcl
cwtl
mov
and
mov
add
clc
push
in
sarb
repnz
mov
mov
insl
sti
rolb
sbb
jno
shl
scas
mov
jno
in
scas
cmp
outsb
xor
sbb
sti
mull
and
add
out
fldl
xor
xchg
leave
mov
mov
fcompl
inc
mov
aam
stc
sub
xchg
cltd
hlt
xchg
pop
insl
jno
sbb
cmp
mov
and
xor
icebp
bnd
lock
cmovo
xchg
mov
shlb
ss
mov
vmovshdup
dec
and
mov
mov
adc
mov
add
nop
sub
pop
jp
and
pop
mov
inc
adc
loope
mov
mov
mov
jge
and
dec
pop
loop
add
dec
into
mov
xchg
jnp
jnp
and
sub
sti
orl
fimuls
inc
xor
xchg
testb
popa
xchg
mov
clc
push
xchg
push
add
mov
xchg
cmpsl
sbb
ret
pop
imul
sub
fdivrs
stc
aam
jle
shrb
sbb
and
adc
lods
into
pop
mov
mov
loop
insb
dec
insb
push
gs
mov
mov
aaa
sbb
cmp
imul
jne,pt
cmpsl
lds
xor
add
in
aam
push
jle
mov
xchg
adc
mov
pop
cmp
add
daa
imul
push
out
pop
xor
sbb
adc
es
icebp
lret
fdivr
sub
or
add
pop
jnp
mov
in
cld
and
test
hlt
sbb
inc
add
rolb
mov
rcrb
push
data16
fimuls
jp
mov
cmp
loopne
fistpll
jg
cmp
cli
xchg
arpl
insl
and
hlt
or
mov
mov
dec
push
and
test
cmp
dec
ja
sub
pop
js
mov
fildll
or
aad
or
lods
jne
adc
movsl
sbb
pop
test
out
scas
ljmp
sbb
mov
and
scas
lahf
cmpsl
sub
shl
cmpsb
jmp
mov
clc
fwait
add
pop
pop
shrl
add
fs
sbb
js
into
mov
fildll
jnp
xor
xchg
add
push
outsb
into
and
mov
mov
lock
repnz
in
insb
mov
and
jno
dec
shll
jae
sti
inc
push
sbb
mov
ss
xchg
repnz
lahf
cmpb
jge
dec
imul
cltd
jno
out
push
xchg
scas
ljmp
cli
mov
shlb
les
push
pusha
add
dec
shr
xor
movsl
mov
fistpll
jnp
xchg
mov
cmp
popa
sbb
or
es
adc
cmp
cs
aas
aas
xchg
add
std
aas
xchg
pop
test
out
push
and
jne
int3
dec
or
addb
mov
mov
jle
ffreep
test
inc
and
add
std
es
mov
or
loopne
mov
fnsave
mov
xchg
cld
fidivs
daa
and
sub
mov
push
test
mov
xchg
test
imul
mov
push
addr16
sub
ss
mov
cmc
sbb
arpl
or
pop
daa
inc
faddl
or
dec
or
mov
aas
bound
mov
add
orb
mov
shll
xchg
pop
loop
cltd
mov
ret
dec
cwtl
mov
icebp
sub
adc
insl
fsubrs
orb
mov
push
or
aas
mov
add
sbbl
inc
xor
int3
pop
or
lcall
insb
and
dec
enter
orb
cmp
jbe
and
int
ss
mov
out
add
push
sub
push
std
outsb
add
lcall
and
adc
xlat
mov
flds
dec
insb
fsubl
sub
cmpb
lock
into
ds
fisubl
xchg
xchg
mov
lock
ret
cmpsb
lea
popa
pop
roll
jle
fbld
xor
adc
ret
loope
push
xor
sbb
popa
push
jmp
mov
idivl
call
test
mov
shlb
mov
dec
lds
pop
mov
outsb
cmp
test
xchg
dec
jae
nop
call
xorb
jge
cs
lods
jl
xchg
push
add
push
fdivp
pusha
and
dec
pop
add
outsb
pop
jno
mov
adc
arpl
xorb
dec
jae
daa
imul
push
push
jb
pusha
data16
hlt
sub
cmp
pop
cwtl
xchg
test
mov
sbb
or
pop
fidivs
or
mov
add
in
lock
loop
inc
scas
std
inc
int
mov
nop
sbb
dec
jae
lods
mov
loopne
dec
adc
push
mov
sbb
stos
sbb
xor
jmp
sub
dec
jecxz
or
cld
push
pop
into
outsb
data16
orl
add
cmpsl
push
mov
in
sahf
cltd
mov
stos
sub
inc
mov
sub
cmp
int
dec
jecxz
test
jb
je
and
pop
ja
ret
push
ret
xchg
cmp
repz
inc
insl
scas
sbb
add
mov
adc
cmp
adc
movswl
arpl
pop
inc
cmp
mov
popf
mov
or
scas
pushf
or
call
lock
fstpl
xor
inc
pop
loopne
jge
pop
jle
in
enter
scas
add
xor
xchg
jno
add
push
das
fisttps
jnp
cld
ret
xor
test
aas
leave
insl
push
ret
and
aas
lock
out
test
xlat
xchg
adc
mov
sub
out
xchg
xor
es
and
xchg
lahf
ficoms
jp
xchg
imul
bound
sub
ja
sbb
push
and
push
xchg
adc
js
jl
sub
mov
out
addr16
ds
scas
and
test
xchg
and
in
push
int
and
jp
mov
pop
fisubs
mov
pop
das
mov
xchg
jecxz
icebp
mov
loopne
fdivrl
jne
push
pop
cli
jge
pop
aam
mov
mov
push
pop
mov
and
clc
pusha
jb
or
mov
jge
hlt
insl
insb
xor
and
push
mov
inc
ror
das
mov
jno
sti
fwait
call
mov
push
jne
lock
lahf
outsb
fldt
pop
cmpsl
xchg
pop
sbb
xchg
jge
cli
fidivrs
mov
test
fdivl
ljmp
aaa
lret
pusha
or
and
out
mov
sbb
sti
aam
xchg
adc
addr16
mov
and
pop
js
push
fistpl
fbstp
loop
leave
add
add
pop
push
les
cli
jns
imul
outsl
loope
ja
jge
dec
sub
adc
hlt
mov
lret
push
xchg
jl
jb
outsb
aas
mov
pop
mov
sbb
in
push
or
mov
mov
cs
mov
ficoml
jno
xor
mov
mov
dec
lock
mov
pop
rol
xchg
sbbl
testl
sbb
push
pushl
and
lahf
mov
jae
xchg
xor
lods
daa
sbb
or
pusha
out
out
faddp
mov
ss
sbb
push
lea
cwtl
adc
push
mov
leave
mov
stc
sti
out
mov
mov
mov
and
cld
mov
std
out
xor
scas
sbb
mov
adc
and
scas
shrb
cmpsb
pop
push
cli
out
adcb
pushf
js
dec
loope
outsl
shrb
xor
test
jbe
scas
lock
jne
and
push
sbb
xor
mov
out
arpl
dec
loope
sub
adc
mov
cltd
in
repnz
int
les
xchg
sub
out
cmp
inc
test
jp
ss
sub
mov
movb
aam
loop
mov
movsb
mov
pusha
insb
or
cmp
sub
push
add
and
sbb
cld
pusha
mov
shll
pusha
mov
es
push
cmpsb
fwait
aam
lea
test
ret
adc
in
cwtl
xor
cmp
and
and
sbb
sbb
cmp
push
mov
pop
sbb
jo
mov
imul
fdivrl
xchg
or
dec
fsts
aam
lcall
cmp
mov
jg
test
inc
insl
mov
push
xchg
shll
mov
shrb
movsb
iret
popf
mov
xor
iret
mov
cmp
leave
cmp
and
test
test
arpl
fnsave
and
cmp
xor
pop
test
and
mov
fcomps
dec
in
leave
pop
outsl
addr16
js
stos
jmp
in
in
in
xor
sbb
lcall
dec
lret
aad
pop
xorl
adc
pop
int3
ljmp
mov
sarb
jle
lods
aaa
ljmp
xchg
or
fs
das
inc
loop
sub
daa
cmp
into
mov
inc
pop
cmp
loop
mov
imul
pushf
imul
testl
inc
and
lock
in
sbb
mov
fwait
mov
lock
mov
lret
fistpl
pop
outsl
push
and
rclb
adc
out
mov
lods
jp
in
dec
lds
mov
testb
or
out
nop
sub
push
adc
adc
leave
xor
mov
jne
lds
out
add
in
pusha
test
cwtl
inc
cmp
popa
or
pop
mov
lret
int
shll
notl
dec
mov
pop
lahf
call
imul
insb
cmp
imull
mov
maxps
fsts
cmp
sub
cltd
sub
data16
loope
mov
cmp
sbb
icebp
adc
push
jle
add
mov
push
scas
add
push
jl
data16
arpl
lcall
cld
jle,pn
sahf
nop
loope
cli
scas
push
mov
xor
jns
push
cmp
in
mov
push
data16
outsl
mov
mov
loopne
sub
pop
pop
icebp
or
stos
dec
hlt
jp
or
in
mov
test
dec
stos
test
loop
mov
cmp
and
xor
push
scas
ljmp
test
sbb
fcomps
aad
adc
movsb
pop
test
or
fsts
push
loop
lods
leave
mov
lock
inc
into
bswap
loop
sbb
sbb
leave
cmp
pop
into
repnz
push
pop
iret
addr16
and
push
rcll
jbe
push
jb
adc
sbb
ljmp
xchg
sar
dec
jne
inc
xchg
popf
xor
sub
out
sub
addr16
aam
outsb
add
hlt
and
loope
insb
mov
fstl
xorl
sub
cmp
stos
movsb
xchg
inc
test
jnp
pop
adc
jno
pop
push
sbb
mov
pop
adc
iret
cltd
divl
je
mov
daa
popf
iret
push
xchg
mov
repz
mov
push
push
xor
cmpsb
test
mov
cmp
out
adc
sub
push
cld
clc
fdivp
add
pop
and
in
and
jno
cmc
push
lock
xor
shrl
idivl
shll
fs
or
mov
es
mov
adc
stos
clc
inc
out
push
lahf
jle
pusha
cwtl
adc
add
js
fsubs
pop
xchg
outsb
cmp
xchg
ja
mov
xor
mov
in
out
f2xm1
jge
jne
test
data16
dec
or
sbb
pop
das
mov
aam
jl
repz
test
enter
rclb
sbb
mov
mov
outsl
hlt
cmc
xchg
dec
lock
dec
sar
jb
jbe
or
cmp
push
push
dec
xlat
test
rcll
jp
shll
repnz
push
inc
sub
cmp
pushf
push
ror
xchg
jnp
xchg
cmp
stc
adc
add
dec
inc
pop
call
addl
sub
xchg
and
mov
cmpsb
mov
ja
test
sbb
or
push
pop
sub
cwtl
sti
mov
jno
push
out
in
loope
push
pop
lock
lret
cli
push
adc
adc
cwtl
mov
mov
ret
cmp
pop
jns
add
pop
push
sarb
jmp
push
icebp
out
in
call
enter
mov
xor
mov
lods
dec
icebp
popa
outsl
mov
pushf
mov
mov
fs
or
xchg
loope
xchg
lds
imul
test
pop
adc
mov
lea
ret
mov
pop
out
jge
fs
mov
mov
xor
loope
loope
mov
mov
es
mov
push
or
popa
xchg
loopne
rolb
xchg
mov
push
add
imul
add
les
leave
fnsetpm(287
or
xchg
xchg
decb
mov
or
frstor
push
push
push
sarb
stos
aam
pusha
pop
push
cmpsb
mov
roll
rorb
lea
jno
ja
sub
shr
cmp
inc
sarl
cs
jmp
test
sub
ret
inc
test
movsl
add
push
jns
cmp
sbb
cld
sbb
push
scas
sbb
dec
push
pop
inc
jl
push
int3
push
lods
cs
jnp
dec
scas
cmp
sar
mov
out
sti
add
lret
imulb
mov
and
dec
test
movsl
popf
lds
fsubrs
mov
push
mov
mov
or
mov
das
xchg
pop
sbb
sub
mov
mov
jmp
stos
mov
stos
lcall
xor
add
fsubrs
out
subb
mov
insl
push
add
int3
add
lds
std
loopne
dec
jge
jbe
push
mov
outsb
mov
ficoml
ljmp
lcall
cmc
addl
mov
addr16
stos
inc
jg
es
inc
xchg
scas
lock
mov
ret
push
dec
sbb
and
mov
movsb
adc
mov
shlb
add
gs
xchg
mov
xchg
jp
out
jbe
cld
jmp
pop
mov
push
icebp
and
divb
mov
hlt
icebp
pop
fwait
sub
int3
add
clc
sti
scas
mov
xor
sbb
pop
rcr
push
daa
pop
and
jae
xor
daa
mov
sbbb
mov
push
mov
cmpsl
fistl
mov
adc
jae
sub
rol
cmp
pop
add
incl
push
pop
push
cld
roll
inc
jbe
mov
jnp
jmp
xchg
jo
shlb
std
mov
mov
ret
fnsave
mov
jb
dec
push
mov
ss
mov
add
test
push
dec
aad
inc
insb
jne
mov
shlb
xchg
jecxz
fs
jb
xchg
insb
mov
mov
mov
idivb
mov
ljmp
fistps
add
stos
sub
stc
pusha
jmp
mov
dec
int
xchg
and
jbe
pusha
pop
mov
cld
imul
cmpsb
filds
jb
test
mov
jmp
jb
jge
andl
jmp
insb
mov
sbb
pop
sub
hlt
dec
sub
repnz
mov
or
hlt
cmpl
sub
xor
movsl
call
push
aad
xchg
sub
mov
mov
xchg
dec
dec
mov
cs
or
sub
and
add
std
js
mov
roll
sbb
mov
out
mov
pop
sbb
nop
int3
fldt
push
and
dec
ja
ret
adc
ds
fstps
xchg
jbe
and
clc
insb
jg
lret
sub
icebp
xor
test
shlb
inc
lock
mov
fstp
and
jnp
pop
push
ss
or
adc
cmc
dec
mov
out
je
cmp
cwtl
lahf
pusha
jae
or
scas
mov
mov
mov
loopne
out
popf
shlb
jg
adc
fsubl
sar
pop
in
add
xchg
popf
jo
outsl
xchg
mov
jb
shll
xchg
lahf
and
mov
mov
add
jae
inc
push
push
sbb
or
int3
iret
aaa
sbb
or
gs
sti
es
push
xchg
mov
push
xor
inc
je
mov
mov
pop
dec
mov
lahf
jbe
push
adc
pop
jo
cmp
pop
test
in
push
cmp
jl
fcompl
mov
lea
es
ja
cmp
test
xchg
hlt
and
mov
ljmp
lret
movsl
xchg
and
shll
rorl
add
mov
add
ss
cmc
sar
fcmovne
mov
mov
fwait
and
loope
in
sarb
dec
and
cmpsb
pop
test
jb
add
cmp
fnstsw
in
in
push
lods
or
int
sub
add
lods
cmp
movsl
testl
int
mov
test
mov
test
xlat
jns
dec
data16
leave
sub
adc
adc
ret
test
sbb
sub
xor
mov
ret
stc
cltd
inc
or
lret
mov
popf
imul
dec
sbb
cmp
add
xor
mov
cs
leave
inc
scas
sub
int
mov
sbb
lods
popa
stos
imul
aam
pop
mov
fcmovnb
scas
cli
mov
push
dec
push
movb
pop
jb
divl
repz
fs
mov
sahf
imul
rorl
and
stos
arpl
push
push
aad
cmp
dec
sbb
mov
and
lock
mov
mov
adc
jns
cmp
in
mov
bound
jns
push
push
push
mov
enter
lret
mov
inc
push
aas
cwtl
adc
jo
je
dec
fwait
loop
mov
andb
xchg
vandnps
test
xlat
out
lock
out
cmp
test
cmpsl
dec
push
aad
aad
pop
fs
cld
incb
sub
in
xor
sbbb
sbb
je
add
aam
push
cmp
xorl
inc
inc
rep
ss
enter
neg
mov
xor
xor
cmp
adc
vpmacssdd
mov
lcall
mov
xchg
add
inc
or
sub
inc
leave
add
incb
lds
insl
rcr
push
loope
push
aam
mov
and
rcrb
jne
cltd
aaa
add
lods
aaa
in
fbld
mov
lods
mov
push
jp
mov
loopne
jbe
lret
or
add
adc
lea
cmp
sbb
loopw
or
xor
fmull
mov
mov
cmp
and
notl
in
test
enter
out
add
xlat
lds
sub
sub
pop
sbb
fstpl
xor
pop
imul
mov
xlat
mov
inc
jae
lret
jp
cmc
adc
push
sbb
jmp
orl
mov
xorb
add
cwtl
sti
je
and
pop
stos
sbb
imul
xor
adc
jns
stc
mov
mov
xor
ljmp
pop
jge
sub
cmc
hlt
test
dec
outsb
pop
out
shr
push
out
imulb
mov
pop
loope
mov
xchg
xchg
xchg
push
cmpsb
mov
jle
push
dec
sti
loop
fwait
adc
inc
outsb
aaa
pop
sub
push
and
mov
jp
or
push
fidivrl
mov
sbb
rorl
push
mov
int
mov
inc
and
sbb
scas
lods
add
fcomp
andnps
push
aad
mov
mov
pop
push
push
or
cmp
sar
nop
movsl
xlat
push
inc
int3
adc
push
pushf
insb
lods
inc
ret
mov
insl
jge
mov
pop
and
xor
mov
push
jle
cmp
lea
ljmp
sub
and
inc
mov
gs
int
mov
stos
adc
mov
out
dec
lods
pop
cwtl
jno
inc
push
stc
xchg
jge
xor
mov
es
adc
dec
and
or
sub
xchg
loopne
xor
pop
push
mov
pushf
in
stos
dec
inc
negl
or
inc
mulb
and
scas
sarb
adcl
loope
jb
adc
or
xchg
xlat
mov
and
xchg
aas
jae
subl
add
mov
adc
lret
mov
push
cld
lock
dec
test
pop
nop
pop
adc
and
jne
sub
mov
adc
mov
gs
enter
aad
out
jecxz
nop
or
fsts
sub
rcrl
xchg
mov
rcrl
jnp
dec
adc
sahf
mov
leave
shrd
mov
inc
dec
in
test
jl
fsubrs
mov
nop
std
add
dec
arpl
jmp
aam
cmp
inc
ds
inc
push
jg
inc
xchg
jl
mov
sbb
cld
scas
incb
push
sahf
sti
outsb
repz
mov
mov
cmovo
test
sahf
sub
cmp
adc
fiadds
mov
inc
je
int3
sahf
fiaddl
daa
cmc
xchg
and
in
movsb
xchg
imul
mov
and
mov
test
push
and
add
scas
push
repz
sbb
xor
jo
and
popf
xchg
lock
stos
test
xor
negb
mov
xlat
ffree
xchg
icebp
call
xor
jcxz
sub
sahf
mov
cli
jae
loope
mov
push
dec
mov
sub
adc
or
xchg
or
popf
mov
sub
shrb
cmp
push
aad
shl
mov
aas
fsubrl
nop
sbb
push
sbb
push
cmpb
mov
add
inc
add
cwtl
mov
aad
pusha
loopne
or
es
arpl
dec
and
adc
jbe
cmp
jmp
push
adc
lret
fnstsw
mov
inc
ds
xor
pop
lods
cwtl
outsl
add
xor
jge
xor
push
imul
lahf
adc
cmpsb
iret
adc
fdivs
xchg
jp
sub
jecxz
xchg
jbe
mov
add
fmuls
cmp
push
cltd
testl
add
lock
aaa
stos
sub
ljmp
sbb
jbe
rcrl
and
cltd
mov
pusha
leave
les
add
imul
cli
xor
pop
scas
pop
insl
pop
imul
aaa
fists
sub
or
sbb
and
es
sub
pop
sbb
nop
sbb
lret
outsl
lds
mull
jbe
xchg
lret
cmp
stc
mov
test
xchg
cmp
cmp
inc
aas
push
int
pop
and
pop
cmp
and
dec
jecxz
pop
mov
loope
loop
fisttpll
rorl
jnp
pushf
xchg
jmp
rcr
subl
lods
subb
jbe
icebp
jmp
fsubrp
aaa
cld
mov
fxam
inc
mov
mov
sub
pop
loopne
mov
scas
loope
dec
pop
lods
inc
dec
ja
inc
cmp
xchg
shrl
xor
ds
mov
scas
cltd
sbbl
cli
xor
les
adc
push
push
or
xor
cmpsl
sub
mov
imul
dec
pop
ja
jmp
cld
neg
cld
out
addr16
ret
cmp
xor
data16
and
cmp
iret
icebp
sbb
bound
fisttps
mov
loop
add
push
aaa
movb
in
iret
sbb
jmp
push
fcompl
or
cmp
adc
sbb
and
push
adc
inc
outsb
rolb
pop
sbb
movsl
push
sarl
lods
add
xchg
add
aad
add
push
inc
in
sbb
mov
cltd
cmp
pop
cmp
repz
adc
bound
addb
in
pop
cmp
dec
sub
pop
mov
xchg
arpl
add
push
jb
outsb
clc
dec
mov
das
dec
in
mov
and
cmp
sbb
test
inc
mov
repz
imul
sub
cmp
movsb
faddl
and
shl
shlb
std
scas
jae
in
hlt
pop
clc
push
jb
jnp
adc
std
xor
mov
mov
es
lods
lds
movsb
addr16
stos
je
dec
scas
jp
imul
daa
dec
ds
loope
sti
cmp
jae
xchg
arpl
aam
mov
jle
imul
roll
push
push
xchg
pop
loope
cmp
lret
je
mov
pop
mov
flds
js
inc
mov
scas
cltd
in
xor
sub
mov
ja
pop
add
xor
outsl
int
leave
aad
and
adc
or
mov
shl
lret
inc
int3
mov
ds
stc
ja
or
sub
jnp
jns
test
or
shlb
adc
into
xor
mov
stos
testl
dec
sbb
xor
insl
stos
repz
outsl
add
xchg
pushf
fsub
imul
shll
in
repnz
sbb
inc
jne
repz
cs
push
nop
cld
ljmp
or
pop
lock
insb
dec
or
pop
sahf
push
and
out
jb
test
insl
lock
lcall
shrl
mov
jmp
je
mov
push
push
sub
xchg
subl
lds
add
clc
lods
dec
inc
push
pop
xchg
sub
cmpps
mov
inc
inc
push
nop
mov
rcrl
adc
dec
loope
add
in
xchg
mov
imul
rcll
je
in
mov
xchg
mov
sub
cmp
xchg
inc
sbb
or
sbb
mov
movsl
pop
lret
lret
pop
push
push
sbb
mov
mov
in
sahf
hlt
adc
sbb
call
ffree
fmuls
fwait
or
fildl
fwait
adc
loop
xchg
std
mov
stos
daa
jno
outsb
sti
subb
loope
lods
out
outsl
add
sbb
xchg
popl
mov
sbb
jmp
or
in
iret
mov
test
and
into
hlt
std
stc
mov
mov
mov
pushf
iret
mov
and
inc
jb
cmp
sub
fcmovnbe
jle
and
lds
in
js
push
jmp
mov
pop
mov
inc
add
jle
jne
imul
test
xlat
loope
lret
cmp
test
nop
jl
pop
sub
and
cmpsl
jns
cmp
scas
xorl
imul
inc
lret
scas
dec
std
ret
or
outsl
repz
divl
add
icebp
aad
or
rol
mov
mov
mov
gs
inc
or
cmp
in
ret
xchg
out
and
mov
add
inc
lcall
cmp
jae
mov
sbb
setae
push
add
stc
xor
xchg
rorl
jns
push
push
or
push
pop
pushf
rcll
mov
mov
lcall
rep
cmp
sti
push
push
mov
jecxz
inc
pushf
dec
aaa
rcrb
sub
lret
in
rcrl
rcll
inc
call
inc
sahf
cmp
loope
xlat
in
mov
cmp
mov
push
loopne
mov
lock
call
adc
pop
sbb
mov
pop
jne
sbb
add
or
push
testb
xor
jp
or
mov
sub
into
scas
in
cmp
sti
dec
out
adc
add
out
enter
xor
or
ror
in
outsb
movsb
ss
lcall
ljmp
mov
paddw
jo
push
mov
loopne
push
xor
xor
jnp
sub
mov
stos
mov
mov
add
popa
mov
push
push
xchg
pop
mov
mov
mov
shrl
repz
ja
jge
mov
push
and
mov
js
mov
mov
jmp
into
xchg
jle
sahf
mov
and
lcall
jbe
leave
mov
push
mov
push
and
jp
in
cltd
and
jp
lret
mov
in
icebp
nop
xchg
jae
jecxz
push
pop
fnstenv
xchg
aad
cmp
fwait
jecxz
mov
add
sub
mov
and
xchg
jns
dec
not
stos
sub
movsb
pop
mov
add
jl
xor
jnp
sub
push
mov
add
sbb
xchg
insb
push
sarb
push
xchg
int
sahf
jp
push
ja
jne
or
pop
out
mov
add
test
add
inc
mov
sbb
dec
pushf
movsb
pop
scas
pop
rolb
insb
dec
outsb
fs
call
cmp
sub
pop
jae
mov
and
xor
inc
imul
cmp
dec
into
jae
adc
movlps
mov
stos
or
repz
pusha
mov
lahf
scas
sbb
and
int3
lret
cmp
in
add
or
icebp
or
push
outsl
pop
xchg
cs
hlt
pop
and
push
adc
ud2
cwtl
and
into
lock
inc
dec
fwait
xchg
ja
or
jne
cmpsl
ret
arpl
rorb
sub
mov
mov
je
jo
cwtl
dec
mov
outsb
mov
cmc
jbe
or
pop
jecxz
xlat
pushf
jl
mov
dec
outsl
jbe
jno
adc
fisttps
inc
sbb
mov
sti
cmp
test
dec
and
loope
pop
js
xor
daa
aas
xor
loopne
jno
inc
incb
jnp
mov
cmp
repz
mov
pop
rorb
fwait
hlt
sbb
aas
add
add
mov
shll
pop
andb
int3
mov
popa
push
and
xor
mov
cwtl
adc
bound
test
push
lcall
xchg
into
scas
push
sbb
pop
arpl
or
das
jg
cmp
lret
jno
addl
mov
shlb
sbb
dec
add
mov
mov
test
popf
aad
and
add
cli
add
cmpsb
lock
mov
rorl
dec
test
sub
fcompl
sub
mov
or
jo
and
push
jl
ret
inc
sbb
dec
inc
test
xchg
mov
scas
leave
movsl
mov
or
push
js
out
mov
out
call
mov
repnz
int
out
xchg
loopne
movsb
and
mov
adc
lret
pop
cmp
or
push
arpl
dec
aam
jmp
fists
roll
push
pop
mov
out
inc
jle
je
adc
dec
or
mov
mov
xchg
xchg
test
xor
pop
add
hlt
pop
out
out
ja
xchg
or
sbb
popf
lret
xor
popa
push
mov
dec
mov
mov
sub
push
xchg
adc
adcb
testb
jg
sub
stc
fmul
mov
aas
jbe
xor
in
fcmovu
das
push
cwtl
lds
inc
in
cwtl
xor
int
ds
push
es
ss
nop
jbe
mull
cmp
shrl
int
out
mov
inc
push
jp
push
pop
sbb
fidivl
jmp
mov
shl
pushf
inc
or
lcall
nop
in
aaa
cltd
push
imul
outsl
dec
mov
stc
test
stos
xor
loopne
jne
ja
out
gs
ds
xchg
jle
rclb
mov
sbbb
xor
lds
sub
es
dec
sahf
dec
push
cwtl
fcom
cmpsb
andl
sbb
fcmovbe
jp
xor
insl
inc
test
ds
ja
loope
xor
and
mov
test
cld
movsb
into
out
and
xor
hlt
pop
sub
repnz
push
mov
xor
leave
pop
cmp
inc
and
movsb
fstl
push
ljmp
sub
xor
divb
cltd
mov
inc
cmp
movsl
out
les
cmp
int3
enter
mov
push
in
cmc
lahf
inc
mov
imul
rcrl
subb
mov
push
mov
mov
push
or
outsb
int
pop
das
movsl
fnstenv
mov
loope
movl
sub
and
cmp
xchg
add
jg
das
std
dec
adc
imulb
fadds
iret
adc
dec
ss
enter
xchg
fidivl
cmp
scas
pop
lea
push
test
xchg
call
jecxz
dec
mov
and
je
xchg
andb
adc
adc
call
add
stos
sbb
bnd
mov
aad
sbb
xchg
std
sub
inc
sub
lcall
ds
mov
leave
or
gs
xchg
cmp
lock
add
jns
aam
xor
bound
out
ret
mov
and
cmp
or
add
xor
divl
mov
shr
or
notl
mov
call
jbe
mov
cli
icebp
xchg
cltd
adc
ret
jecxz
cs
push
aas
sub
jne
xor
jge
pop
daa
out
push
repz
or
mov
test
ss
mov
lret
idiv
push
xchg
in
or
xchg
cwtl
xchg
sti
mov
aas
cmp
jns
lcall
jno
ret
pop
les
jl
shrl
push
enter
orb
daa
add
jmp
data16
or
xchg
mov
pop
ja
jnp
jl
lret
mov
push
push
mov
xchg
push
xchg
fcomps
cmp
mov
lret
mov
push
imul
jle
mov
or
push
scas
jb
xor
pusha
out
ficoml
jae
mov
popf
or
jp
mov
out
mov
xchg
out
jle
out
jg
aad
and
divps
outsl
fcomps
ret
ja
jnp
push
mov
jnp
push
lea
sub
push
pop
sbb
xor
in
stos
jle
add
and
mov
jbe
cmpsb
filds
lahf
xchg
div
dec
mov
sub
rol
and
pop
fwait
jp
jecxz
mov
lock
les
dec
xchg
clc
xor
je
cmp
outsb
or
dec
mov
inc
jne
mov
repnz
mov
and
mov
mov
std
sbb
sbb
sbb
hlt
lret
jmp
dec
fstps
aas
fidivrl
shr
mov
jp
aaa
jbe
shlb
pop
inc
jle
pop
push
imul
jb
in
pop
rcrb
lcall
xchg
inc
mov
inc
aad
shrb
xchg
and
fucomi
sti
mov
cmp
mov
movsl
mov
out
int
or
jo
xchg
cmp
ljmp
pop
xchg
xchg
lret
jmp
cmc
mov
pop
fisubl
fs
cwtl
faddp
push
rcl
cmpsb
lds
nop
dec
and
push
divl
lock
mov
jle
push
imul
loop
jg
in
shll
and
lret
rcrb
aas
clc
mov
push
push
jp
sbb
sahf
sub
das
xor
sub
xor
cmp
loope
push
test
adc
mov
xor
add
inc
shll
pop
mov
lods
and
mov
pop
jo
mov
mov
or
out
and
andl
pop
cwtl
and
cmc
daa
mov
xor
jle
add
stos
nop
fsubs
cltd
or
xchg
int3
cmp
cltd
add
shlb
stos
movsb
lret
add
xlat
lods
xchg
push
js
jmp
pop
push
incl
adc
ret
sbb
add
mov
mov
push
pop
push
push
shlb
rorb
mov
movsb
push
outsl
sbb
sub
mov
test
xor
jecxz
daa
pop
nop
test
pop
jns
fisubrs
clc
subb
pop
mov
pop
test
jne
pushf
lcall
in
into
in
sub
rorl
jmp
mov
dec
jl
jmp
pop
add
pop
and
lcall
fucomp
xchg
xchg
xor
pusha
scas
xchg
and
sub
mov
mov
daa
sub
or
add
cmpsl
inc
lret
pusha
in
cwtl
cmpsl
mov
enter
cmpsl
or
jbe
movsb
xchg
dec
lcall
cmp
mov
loope
repz
rcrl
sbb
scas
add
inc
sub
pop
mov
sahf
shlb
inc
enter
sub
in
dec
add
rorl
mov
cmp
pop
dec
jbe
and
lds
sbb
loope
push
dec
jg
sub
cmp
sbb
cmp
mov
fwait
jbe
stos
jbe
add
scas
shrl
and
dec
push
and
sub
adc
cmp
arpl
orl
pop
fisubrs
sbb
test
dec
pusha
mov
rcrl
fsubs
adc
sbb
or
decb
cmp
daa
push
int3
sarb
testb
lret
int
faddp
and
gs
and
xchg
sub
mov
xor
xor
data16
shlb
sbb
or
int3
stc
stos
jg
int
lcall
insl
cmp
jae
aaa
or
leave
mov
into
and
fwait
adc
cmp
inc
sahf
mov
and
push
dec
mov
xlat
xor
fimull
iret
loope
dec
jecxz
mov
pop
mov
push
test
and
lods
sbb
dec
icebp
out
outsb
addr16
dec
push
aaa
and
not
pop
gs
ss
push
in
dec
adc
bound
cwtl
in
int3
xlat
rol
add
rclb
or
fiadds
add
pushf
jle
scas
push
mov
stos
out
mov
lods
and
cld
jp
adc
or
popa
in
cs
rorl
sti
push
and
jg
pop
push
or
test
sbb
notb
nop
icebp
aam
mov
les
loop
fsubrp
cmp
jmp
cmpl
or
xor
sbb
stos
pop
jae
push
aaa
lods
jmp
dec
sbb
and
sub
dec
sti
jnp
addr16
sbb
loope
pop
jmp
lock
xor
xchg
pop
fwait
subl
inc
push
stos
enter
inc
add
out
sub
popa
jbe
fwait
push
lea
xor
cld
fs
add
daa
sub
dec
add
je
jb
and
ret
dec
notb
jno
sbb
push
jae
addr16
jp
cmp
je
sub
adc
stos
mov
dec
jns
sub
mov
mov
mov
or
sub
dec
xor
lods
filds
stos
dec
arpl
fldenv
dec
sbb
imul
jl
xlat
mov
jns
dec
jbe
test
aas
gs
xor
popa
mov
test
mov
lret
and
dec
mov
sub
stc
insb
jmp
cmp
inc
inc
xchg
repnz
es
mov
or
or
xor
cmpsb
lods
notb
lods
movsl
sbb
add
nop
add
insl
dec
dec
mov
ss
aaa
fwait
mov
dec
push
faddl
pop
jecxz
jns
mov
push
push
sub
daa
std
or
mov
daa
arpl
stc
clc
push
mov
fs
and
jne
mov
mov
loopne
pop
aad
pop
aad
test
lcall
es
or
and
lretw
inc
sbb
fs
adc
sub
test
test
jp
dec
leave
popf
loopne
inc
push
mov
mov
pop
jne
fwait
das
xchg
cmp
xchg
mov
daa
fistpll
cwtl
adc
outsb
sbb
movsl
inc
or
into
mov
out
sub
addr16
mov
lahf
ljmp
into
jb
ds
aam
stc
xor
sbb
jo
push
push
mov
cmp
sti
shll
push
imul
mov
lock
daa
jp
out
addr16
inc
rcrb
inc
rclb
stos
inc
shll
icebp
jl
out
rcll
push
xchg
mov
je
mov
sbb
mov
and
jle
in
shrl
jge
jns
jo
inc
sub
inc
std
cld
bound
jae
pop
shlb
loopne
xchg
jge
cmp
add
jmp
mov
in
fbstp
adc
in
xchg
cmpsb
add
mov
xor
add
xchg
ret
xor
and
or
xor
mov
test
inc
xchg
fists
testl
jno
les
aaa
lds
push
sbb
mov
mov
lret
pop
repz
add
out
mov
adc
mov
loope
cs
lret
aad
in
fcomps
xor
adc
sub
fsub
push
or
pop
push
gs
xchg
pop
cmpsb
adc
insb
cmp
into
fidivrl
adc
push
std
add
mov
jae
adc
pop
xlat
outsb
lcall
gs
jb
push
and
rcrl
fistpll
or
aas
mov
mov
fistl
fcmovnb
lods
in
pop
cmpl
ja
sarl
cmp
outsb
xchg
lods
idivl
test
cmp
and
dec
xor
pop
xchg
mov
sbb
lods
lds
cmp
sbb
push
out
push
and
sub
adc
jg
pop
insb
dec
js
jle
xchg
xchg
cmpsl
inc
xchg
jmp
adc
inc
outsl
xchg
mov
outsl
pop
xchg
xchg
adc
or
jns
mov
sub
xchg
and
andb
lods
adc
dec
andl
outsb
leave
adc
fldl
xchg
cltd
ret
sub
pop
stos
out
dec
adc
and
sub
jg
sahf
jnp
cmpsl
xor
and
scas
push
mov
cltd
adc
and
out
cmp
cli
mov
dec
dec
and
inc
xchg
and
in
mov
mov
dec
negl
xor
push
shlb
js
push
popf
sbb
cltd
mov
mov
insb
jge
mov
ja
inc
jbe
ds
fsubrs
fs
lock
in
enter
push
fldt
push
ss
addr16
cwtl
mov
filds
xchg
mov
pop
xor
xor
sahf
fstpt
lea
pop
cmpsl
sbb
push
test
mov
xlat
adc
mov
dec
mov
ja
fisttps
insl
inc
and
leave
sbb
cmc
loop
dec
or
and
adc
loop
fsubrl
or
movb
push
dec
adc
ret
mov
test
push
pushf
push
loopne
mov
das
pusha
and
test
pop
subl
jg
adc
xchg
xchg
lods
adc
out
dec
xorl
pop
movsb
xchg
pop
sbb
sub
inc
pop
loop
rcrb
pushf
push
shl
dec
xlat
or
es
push
or
dec
push
incb
inc
cmpsl
push
out
aas
xchg
sbb
out
pop
adc
sub
aaa
cmp
jmp
out
xchg
loopne
outsb
rclb
out
mov
loopne
xchg
cmp
pop
popf
gs
js
xchg
jb
stos
push
pop
and
movsb
outsb
repnz
movd
jb
jae
jo
pop
arpl
ret
sbb
mov
fcoml
push
inc
lea
xchg
cmpsb
aam
lcall
mov
int3
push
pusha
bound
das
jle
psraw
and
repz
aad
sub
in
jns
mulb
shlb
sarb
dec
mov
addb
stos
jns
ret
mov
or
xor
jbe
out
xchg
mov
imul
mov
clc
popa
sbb
or
arpl
notb
insl
push
addb
push
cmpsl
aad
cmp
adc
add
push
pop
pop
lock
out
adc
test
xchg
sahf
inc
push
aad
jmp
pop
push
cwtl
pop
insl
idivb
sahf
cs
clc
std
je
je
stos
cmc
sbb
decl
test
std
stos
inc
jo
movsb
and
rcll
aad
dec
cmpsl
and
adc
xchg
sbb
clc
pop
add
sti
dec
insl
push
push
cs
lods
imul
sbb
pop
xor
out
xor
mov
adc
fwait
mov
cmp
into
bndldx
lock
jmp
popa
xchg
js
sbb
adc
jnp
pop
fsub
xor
and
out
shrl
lret
inc
and
loopne
out
scas
sahf
jb
clc
fsubrl
addr16
int3
pusha
mov
cmp
inc
rorl
push
pop
fildl
dec
add
mov
jno
pop
mov
les
xor
enter
test
push
ds
xor
arpl
jg
popf
and
mov
in
cmp
xor
or
xchg
aaa
dec
pop
out
xchg
addl
and
ret
jl
xor
push
stc
pop
adc
xchg
js
rorb
cmp
pop
ret
repnz
jge
lock
jne
ss
dec
cmpsl
sbb
sti
adc
hlt
jns
xlat
lds
cli
cs
pop
push
lcall
gs
hlt
stos
leave
repnz
rcrl
test
popf
xchg
jne
into
mov
scas
aam
cmpl
mov
lds
dec
or
mov
lret
das
mov
cmp
push
push
dec
jecxz
xor
scas
mov
imul
in
das
sbb
test
mov
mov
in
jl
xchg
popa
or
in
inc
imul
in
stos
adc
les
and
inc
jb
dec
insb
mov
lret
cmpb
inc
xor
cli
rcl
ljmp
nop
xchg
mov
incl
cs
or
call
mov
mov
cmpsb
in
and
cmp
jnp
fsubs
add
fsub
popf
add
adc
pop
ficomps
loop
xchg
adc
sti
mov
shl
test
and
pop
and
and
call
rorb
mov
jno
mov
xchg
sub
addb
outsl
sbb
daa
add
xor
push
imul
sub
in
movsb
rcrb
outsl
pslld
jge
lods
ret
pop
add
pop
stos
imul
insl
dec
mov
mov
adc
jne
dec
inc
lods
inc
enter
sbb
push
xor
or
and
mov
ret
sub
scas
jge
sbb
rcrl
fbld
and
dec
xlat
cmp
or
jnp
fs
push
das
xor
mov
sbb
cld
lods
cltd
dec
mov
or
cld
daa
mov
out
loop
xor
leave
push
sub
int
test
inc
jmp
cmp
adc
sub
xor
mov
xor
icebp
std
push
inc
ret
lret
sbb
cmp
jb
iret
dec
xor
outsb
insl
add
addr16
out
test
xchg
mov
testb
push
in
and
cltd
cwtl
test
adc
xchg
dec
dec
dec
movsl
sub
inc
out
push
sub
cmp
shl
adc
iret
push
push
enter
xchg
test
shl
stos
test
pop
lret
push
xor
popa
test
outsl
shrb
push
cmp
mov
stos
or
imul
jp
mov
and
jge
loope
sub
pop
sahf
xor
call
jecxz
fwait
das
cmpsb
sbb
into
sbb
mov
popa
inc
pop
pop
adc
lock
sahf
adc
cmp
jns,pt
rcrb
sahf
and
out
and
cltd
pop
fdivs
sbb
jo
std
jge
daa
inc
cmp
jmp
flds
add
loope
mov
mov
rcrl
jg
je
dec
add
movsl
jmp
sub
test
lahf
in
jecxz
shlb
sub
push
sbb
mov
sub
jno
rcrb
mov
nop
in
add
jg
idivl
negl
js
dec
mov
mov
and
pusha
mov
pop
xlat
jb
or
adc
repnz
inc
cmpsl
jo
mov
fwait
imul
icebp
js
sbb
test
jo
pop
lret
push
push
pusha
lods
gs
sbb
jp
lret
jb
push
inc
pop
xor
sub
pusha
outsl
dec
adc
dec
in
sahf
jle
test
popf
jne
add
xor
into
mov
add
lock
inc
or
push
call
xor
add
loop
pop
inc
xchg
push
dec
push
cmpsl
into
shlb
push
loopne
add
mov
pop
cmpsl
dec
xchg
xchg
lods
push
inc
stos
shrl
aaa
dec
push
enter
and
daa
mov
daa
inc
push
cmp
test
and
shl
adc
jns
or
jbe
out
shl
xor
dec
mov
xchg
xlat
push
xor
xor
iret
or
pop
jno
je
ret
cld
das
in
lcall
mov
mov
pop
popa
clc
sub
aam
ljmp
and
jecxz
push
addl
fnstenv
pop
das
mov
push
and
mov
ja
into
cmp
xor
push
jo
cmp
aam
sub
mov
icebp
test
push
push
fdivp
cmpsl
pusha
repz
xor
leave
daa
jns
sub
stos
and
cmpsb
mov
popa
out
mov
cli
jne
je
cmpsb
in
push
push
cmp
stos
stos
mov
mov
xor
adc
movsb
pusha
jns
arpl
test
stc
pop
pop
push
insb
add
lret
xor
jns
fildl
jb
scas
mov
aam
jp
jns
and
sub
and
rorb
jl
push
fldenv
fwait
cmpsb
shll
jp
jle
mov
test
clc
cld
enter
xor
adc
jne
aad
jle
mov
ss
cmp
xchg
add
gs
push
sti
lock
movsb
arpl
cwtl
mov
jns
dec
sahf
xlat
mov
aam
mov
xlat
test
push
mov
outsl
cmpsb
divb
loopne
jno
subl
or
dec
insl
xchg
push
xchg
sahf
jg
shlb
jmp
and
cmpsb
mov
jl
das
cltd
je
inc
cltd
test
pop
les
rcrl
inc
test
ret
addr16
sbb
or
fistps
mov
pushf
lock
cs
mov
enter
xchg
outsl
js,pt
in
push
xor
pop
inc
xor
loope
pop
fadd
mov
ss
mov
push
pusha
mov
mov
push
arpl
mov
push
push
mov
lods
cld
and
push
dec
xchg
jne
xor
cmpsl
dec
cwtl
xchg
sbb
psrlw
sbbl
add
lods
jno,pn
jl
jb
cmp
dec
jp
sub
mov
jb
repnz
sbb
jge
xlat
int
push
je
mov
adc
adc
pusha
sarb
cmp
and
and
lret
aas
ror
inc
mov
in
clc
and
movsb
inc
ljmp
cmpsb
add
jecxz
ds
inc
mov
xor
and
xchg
aam
pop
add
in
std
inc
or
xchg
and
test
sbb
fs
sub
imul
xchg
mov
leave
push
mov
aaa
rolb
and
aas
dec
adc
andl
mov
pop
mov
dec
aaa
pop
add
dec
xchg
jg
pop
jge
into
int
aas
stos
lcall
add
cld
mov
push
jne
cmpsl
xchg
sbb
pusha
or
mov
xchg
pop
jb
pop
popa
push
push
fbld
dec
add
sbb
hlt
and
push
push
inc
cmp
sub
sti
xchg
notb
xchg
rcrl
rclb
daa
pop
ret
stos
test
xor
mov
sub
or
pop
insl
hlt
iret
enter
add
jle
ret
outsb
push
lods
mov
xchg
mov
mov
adc
mov
les
and
and
push
mov
das
jne
insb
daa
inc
add
inc
rcl
addb
stos
sbb
repnz
ret
mov
inc
push
sti
xor
pop
mov
in
mov
pop
mov
dec
sahf
addr16
ljmp
jo
pushf
sti
outsb
fwait
cltd
loope
cwtl
loop
cmp
arpl
mov
aam
pop
flds
adc
pusha
sub
andl
lar
sti
ficomps
adc
push
lcall
jae
sub
jmp
repz
inc
jmp
roll
repnz
jne
mov
imull
xor
lock
jp
dec
insb
mov
xlat
das
xlat
xor
pusha
cld
ret
and
mov
jnp
inc
ljmp
mov
xchg
push
pop
scas
push
fdivs
push
inc
jmp
lahf
sbb
cli
jl
sub
or
cwtl
pop
inc
mov
mov
sub
pop
sbb
into
mov
mov
pushf
ss
test
jnp
in
mov
add
enter
xor
mov
lods
pop
jno
xor
idivb
xchg
sub
fwait
mov
push
xchg
loopne
sub
inc
test
or
leave
movb
fwait
sub
out
mov
addr16
cmp
adc
js
fcmovnu
inc
sub
ljmp
imul
shll
jns
out
push
mov
popf
sarl
xlat
insl
dec
mov
sub
iret
xor
int3
icebp
es
movsb
stos
insb
adc
xlat
fwait
adc
mov
cmp
push
mov
xlat
jb
aam
scas
cmpsb
rcl
sub
add
outsb
jecxz
mov
mov
lret
dec
mov
lret
mov
sti
jmp
imulb
pop
inc
sub
push
and
jnp
and
hlt
push
icebp
ret
jge
push
notb
push
mov
xor
je
or
add
call
mov
jnp
fisubl
ja
jb
xor
dec
mov
out
jge
jg
clc
xchg
inc
addr16
mov
push
pop
xchg
test
imul
insb
into
or
int
or
dec
push
pop
scas
mov
push
ficoml
mov
rcrb
jmp
mulb
lahf
jl
cmpsb
mov
test
or
je
in
scas
scas
pop
jne
orl
into
test
cli
or
sub
in
jno
xlat
cmc
enter
or
add
push
rcll
pop
js
adc
js
sub
sub
jns
add
push
cmpsb
push
or
divb
jns
adc
add
xlat
daa
mov
inc
and
fisubrl
outsb
scas
cvtpi2ps
in
or
mov
outsb
dec
or
pop
sti
insl
mov
ret
or
xchg
pop
sbb
cmp
into
out
imul
and
and
adc
add
dec
outsl
mov
sbb
pop
test
push
or
mov
xchg
call
jp
push
retw
mov
jle
pop
imulb
xchg
psrlw
loopne
test
je
ret
outsb
cmp
mov
lock
fcomip
mov
push
sub
cmp
jge
xor
push
push
push
int3
lahf
lods
push
and
xchg
rorb
dec
scas
ret
mov
cmpsb
leave
and
ret
scas
rcl
in
add
xchg
pop
or
pop
lods
inc
mov
testb
test
outsl
iret
jbe
mov
or
cwtl
loope
dec
jno
dec
mov
out
add
js
xchg
aam
mov
jnp
pop
daa
ja
or
pop
xchg
enter
pop
lcall
je
xchg
outsl
push
lock
inc
lods
mull
fildl
movups
call
hlt
lock
pop
pop
fwait
inc
cld
dec
test
cmpsb
xor
outsl
or
adc
adc
nop
sub
aaa
sub
inc
push
cmp
sub
xchg
inc
fstpt
call
adc
add
adc
stos
fadds
lock
ret
invd
mov
xchg
cli
xchg
dec
inc
ret
out
test
adc
add
sbb
test
int3
add
roll
sub
movsb
cmp
les
fcompl
clc
pop
fildll
push
inc
inc
xchg
push
jl
mov
sub
shlb
push
pop
mov
cs
iret
push
pop
fstpt
into
pop
dec
push
push
outsl
int3
mov
inc
stos
jl
aaa
ret
mov
js
adc
pop
mov
outsl
and
inc
inc
faddl
idivb
pop
lahf
andb
mov
sbb
jecxz
mov
add
gs
mov
pop
inc
ret
cld
and
cmp
mov
test
ljmp
add
push
push
das
add
or
stos
fsts
out
inc
sbb
or
std
dec
inc
cli
or
stos
or
fcmovnbe
add
sbb
adc
push
xchg
cmpps
dec
sbb
cmc
fcmovnu
jecxz
adc
mov
shl
rclb
rcr
fisttpll
in
ficoml
or
push
fidivl
lcall
into
xlat
cmp
repnz
adc
dec
pop
clc
stos
test
fsubp
iret
filds
mov
jo
out
xchg
cwtl
repnz
cs
cld
jecxz
nopl
xor
out
mov
js
insb
sbbb
loope
xchg
sub
test
es
incb
mov
cmp
and
xor
in
dec
sbb
dec
outsb
fidivl
sbb
pop
fildll
dec
int3
nop
pop
movsb
mov
mov
pusha
das
pop
sbb
fs
cmp
xchg
in
sarb
icebp
scas
cltd
jae
das
aas
movl
xor
xor
daa
add
push
test
int3
jb
jns
repnz
sbb
push
subb
bound
or
mov
pop
es
xor
mov
lahf
sbb
cmp
mov
shrb
or
adc
sub
jno
jne
decb
lock
hlt
imul
sbb
push
pop
fimull
cmpsb
mov
xor
ffree
test
jle
out
loop
popf
adc
xchg
pusha
add
cld
mov
fsubrp
jl
fs
aaa
jle
mov
idivl
lods
je
mov
dec
jo
movsl
cmp
jnp
popf
pop
inc
adc
fwait
xchg
xchg
mov
mul
mov
das
in
push
decb
sarl
jnp
pushf
add
pop
fwait
sti
aas
push
jge
sub
dec
jbe
inc
ljmp
jno
cmp
stos
xchg
loopne
xchg
adc
out
fsubrl
pop
sub
cmp
push
cmp
cwtl
fisttpl
xchg
imul
fisttpll
xchg
jp
sub
add
jge
inc
push
bound
mov
repz
push
lods
mov
enter
push
stos
or
bnd
sbb
xor
mov
adcl
andb
iret
mov
das
adc
jae
in
popa
pop
in
dec
pushf
inc
mov
add
js
inc
iret
sub
mov
xor
xchg
inc
mov
push
push
inc
fwait
clc
inc
inc
push
loope
cmpsl
mov
pop
pop
nop
fnstsw
ja
mov
std
xchg
sbb
paddd
sbb
cmp
dec
dec
out
dec
jecxz
std
cltd
jo
sbb
cmp
push
sbbl
dec
adc
xor
out
stc
jg
popf
push
popf
fcmovb
stc
enter
sbb
add
icebp
xor
mov
dec
sbb
cmp
xchg
jmp
push
fwait
mov
jns
jmp
adc
jns
fdivrs
jo
ja
jnp
mov
fistpl
aad
adc
inc
icebp
jae
shl
sahf
in
sub
mov
mov
cs
inc
pop
andl
arpl
cmpsb
mov
pop
neg
push
sub
stos
jnp
inc
popa
filds
xchg
push
and
sbb
mov
jo
or
or
lret
mov
dec
in
movsl
scas
insl
pop
icebp
mov
push
sub
fisttpll
out
push
mov
into
in
pop
cmpsb
adc
push
mov
pop
cmpsl
cli
imul
out
loopne
push
jmp
mov
imul
mov
cmp
push
xor
sbb
inc
cmp
dec
das
out
xchg
and
sbbl
fcomps
and
iret
fldenv
stos
push
movsb
xor
es
outsb
xor
sub
add
add
adc
pop
jmp
movsl
inc
or
mov
and
ffree
shl
dec
test
or
ljmp
push
lods
dec
ds
scas
dec
shrl
cs
ffree
mov
test
xor
std
xchg
imul
xchg
jl
pop
sbb
or
mov
mov
popa
and
pop
pop
sub
and
inc
push
sar
faddl
jle
jg
test
bound
dec
inc
fsubl
mov
jbe
and
rorl
psubusw
sub
bound
dec
cmp
addl
out
sbb
fs
and
inc
xorb
out
ret
inc
or
cmpl
aam
cmpsb
fs
cwtl
and
adc
or
scas
mov
adc
out
cmpsb
loope
ljmp
cmc
gs
in
sbb
inc
mov
lret
mov
mov
dec
push
outsb
cmpsl
xor
aam
sub
mov
dec
gs
xchg
and
in
push
xchg
les
xchg
imulb
mov
cli
fwait
add
xchg
scas
sub
jo
cmp
mov
das
aad
leave
push
shll
jmp
mov
mov
jmp
dec
sub
test
inc
es
xor
xor
loop
cli
xchg
aas
xchg
inc
div
xor
push
xor
adc
fwait
xchg
cmp
push
hlt
pop
adc
sub
les
rcl
call
rclb
ja
roll
mov
mov
push
mov
lods
mov
scas
xor
test
hlt
push
insl
fmuls
add
nop
sub
mov
dec
mov
xchg
stc
inc
push
cmp
jge
adc
cwtl
lds
pop
fdivl
test
scas
jo
push
shrl
xor
in
das
and
or
loope
xchg
lcall
pcmpeqb
sub
jge
adc
mov
xchg
adcb
xchg
cmp
out
sti
jge
xchg
push
cmp
pop
xchg
push
cmp
mov
cli
mov
jle
cmp
pop
stos
or
dec
loope
pop
ss
or
mov
jno
mov
adcb
loope
sub
lds
cmc
inc
gs
inc
xchg
jl
lea
stos
test
iret
pop
sti
pop
jmp
mov
movl
xor
stos
mov
add
rol
cmc
inc
cmp
jo
shl
or
ds
lahf
xchg
fdivs
sbb
bound
movsb
sti
adc
lahf
call
ljmp
sub
stc
jno
popf
gs
dec
cmpsl
sub
xor
rorl
inc
iret
fstps
mov
add
sahf
pop
mov
mov
out
pop
mov
xchg
lret
mov
call
push
xor
inc
xchg
inc
cmp
xchg
add
adc
jmp
add
jecxz
sbb
and
mov
les
add
test
jg
out
xchg
mov
test
in
leave
das
loop
rcl
mov
in
cmp
loope
fldenv
jp
mov
push
dec
lods
repnz
mov
loopne
jno
test
dec
or
out
insb
bound
cli
pop
clc
jae
cltd
jmp
or
xor
cld
mov
or
sub
shll
add
adc
mov
add
and
out
xchg
andb
cmpb
cwtl
sbb
cmpsb
pop
lahf
mov
jne
jmp
lcall
ss
shll
and
mov
push
lds
cmc
ljmp
cmc
xchg
rcrb
in
jecxz
sti
sbb
in
enter
fstpt
aam
lea
xchg
adc
sub
mov
rcrl
cmpl
adc
lock
mov
sbb
roll
ja
jmp
and
mov
out
int
add
mov
rcll
mov
xchg
xchg
cs
lret
orb
cmp
hlt
inc
int3
lock
imull
sub
jl
test
pusha
pop
loope
pusha
mov
ret
inc
jae
aaa
adc
out
mov
cli
inc
out
or
test
mov
mov
lcall
mov
add
insb
xor
mov
inc
sbb
add
jne
xor
sbb
xchg
mov
in
sbbl
xor
cs
sub
dec
shl
inc
hlt
aas
push
sub
adc
mov
lret
adc
or
adc
or
and
xor
pop
enter
cmpsl
ss
mov
stc
insb
sub
jnp
sti
js
jb
mov
cmpl
xchg
enter
loop
cs
add
fisubrs
std
push
xor
pop
mov
jmp
jmp
xchg
pushf
cmp
push
or
mov
pop
xchg
lods
push
add
adc
stos
mov
lret
data16
arpl
enter
xor
mov
gs
loop
xchg
mov
out
rclb
lahf
stos
and
ja
imul
movsb
cltd
lea
mov
pop
adc
ljmp
sti
cld
repnz
xchg
cltd
test
stc
xor
xorb
sub
push
pusha
jp
inc
and
js
and
pusha
dec
cs
cli
das
test
or
xor
mov
adc
push
or
jb
pop
adc
mov
jb
xchg
xor
mov
pushf
mov
dec
out
sub
add
stc
mov
ljmp
dec
inc
adc
cmpsb
jbe
mov
xor
or
or
fwait
mov
add
outsb
mov
sub
push
icebp
daa
dec
test
xor
add
mov
loop
adc
mov
xor
es
ja
mov
jp
incl
jbe
pop
lret
dec
and
inc
push
adcb
push
jae
clc
pmullw
jge
add
movsb
dec
xchg
xchg
cmp
pop
lret
push
rorb
dec
outsb
mov
jns
pop
int
push
sbb
mov
pop
mov
pop
push
and
jns
or
xchg
jge
mov
stos
in
test
sarl
out
jo
andb
flds
insb
lretw
mov
fistpl
cwtl
pop
mull
mov
leave
add
cwtl
dec
jb
mov
xchg
in
add
mov
sbb
xchg
test
insl
push
lahf
in
cmc
cmpb
xor
push
pop
loop
lret
aam
jl
test
mov
jp
daa
je
dec
xchg
pop
pop
pop
movaps
addr16
pusha
push
dec
fbstp
dec
cld
mov
pushf
adc
dec
addr16
mov
ds
mov
and
add
or
rcl
imul
enter
xor
pop
push
lret
xchg
add
and
push
jae
add
rcl
sub
int3
cmp
mov
pop
push
lods
add
mov
outsl
mov
imul
dec
push
or
mov
and
mov
jmp
sub
cmp
pop
out
cwtl
insb
icebp
xor
lock
mov
popf
cwtl
fsubrs
push
pop
and
add
xor
bound
jns
cwtl
orl
std
dec
pop
popa
inc
mov
xchg
sbb
mov
mov
sub
mov
mov
out
fwait
repz
and
pop
xor
mov
dec
add
ds
mov
sbb
pop
inc
fwait
mov
rcll
and
jp
repnz
movsb
mov
loop
outsb
je
fcomp
stos
push
sbb
cmpsb
out
xchg
pop
test
hlt
cli
cld
sub
fidivl
fcmovnbe
mov
xchg
xchg
shlb
or
inc
adc
xlat
cmpsl
add
subb
cmp
mov
xchg
push
cmp
lret
mov
dec
and
mov
mov
push
and
insl
nop
and
and
imul
bound
cmc
int
call
push
and
in
dec
in
pop
mov
popf
xor
push
repnz
lcall
jle
xor
push
pushf
add
pusha
mov
inc
pop
push
sub
xorb
sbb
loop
inc
mov
in
into
jne
pop
mov
insl
sub
xor
dec
das
decb
inc
jecxz
aam
pop
mov
dec
mov
addr16
lods
arpl
mov
in
addb
bound
fmull
push
mov
jp
xorl
pop
cmpsb
jmp
addr16
imul
pushf
test
cmp
mov
adc
ret
mov
popf
ret
fstpl
es
sub
andb
scas
cwtl
adc
fcom
sbb
mov
sbb
jle
mov
int
cli
and
loopne
call
mov
fdivs
fldt
adc
arpl
in
inc
pop
pop
mov
and
mov
adc
mov
es
cwtl
add
filds
xor
inc
insb
inc
mov
adc
out
enter
xchg
mov
add
push
add
sbb
sbb
jnp
pop
mov
ja
jmp
mov
lcall
mov
loopne
mov
fs
lret
out
pop
adc
inc
outsl
add
dec
bound
repnz
or
or
mov
fidivrl
loop
jnp
int3
ret
and
or
loope
cmpsb
pusha
lret
dec
out
cli
sub
mov
pop
call
fidivs
test
in
aad
cltd
or
vpmadcswd
out
xchg
nop
push
or
loop
jmp
pop
ss
outsb
ja
mov
insb
adc
cmpsl
clc
xchg
out
ljmp
inc
mov
aad
js
adc
jl
add
mov
jbe
mov
mov
in
adc
lea
andb
mov
js
icebp
out
fcoms
dec
out
jns
scas
cmpsb
add
dec
jg
fdivl
add
ret
cli
jmp
addr16
and
or
fdiv
and
dec
adc
mov
xchg
xor
movhps
stos
aam
shll
lret
jge
stos
dec
lcall
aad
out
icebp
jmp
in
repz
out
js
mov
inc
adc
push
into
repnz
je
ja
fsubrl
mov
stos
sub
push
adc
outsl
imul
add
scas
push
fisubl
pusha
push
mov
pop
push
dec
cmp
lahf
in
jbe
andb
ret
cli
push
and
fadds
push
test
pop
lret
mov
dec
ret
adc
scas
ds
push
nop
std
xchg
icebp
inc
adc
inc
sub
add
push
mull
cmp
cmp
jle
add
adc
cli
or
pushf
test
dec
dec
sub
pop
push
mov
cmp
das
fs
mov
fs
add
jmp
cli
fs
mov
adc
movsb
cmp
push
sbb
or
jnp
fstp
test
ds
mov
pusha
fistpll
cmp
pusha
nop
cwtl
fldcw
dec
loope
and
or
jmp
xchg
iret
pop
sbb
loop
leave
ljmp
jae
aam
cltd
cli
pop
pop
lock
pop
cli
dec
mov
mov
cmp
xchg
inc
lock
cmpsl
icebp
inc
lea
mov
ss
pushf
jg
pop
call
inc
inc
in
popf
xchg
decb
push
and
adc
jmp
and
push
insl
push
nop
mov
testb
dec
xchg
push
mov
imull
mov
lahf
mov
add
ss
jb
sbb
jne
cmp
mov
outsb
aad
mov
xchg
lods
inc
cmp
enter
inc
push
dec
jbe
divl
mov
jp
hlt
xor
cwtl
lea
out
in
repnz
mov
scas
rclb
xor
pop
test
aaa
loope
ret
mov
in
gs
push
stc
xchg
dec
ds
add
bound
push
push
jle
shrl
cmpsb
adc
leave
ds
out
pop
xchg
in
push
nop
ja
aaa
repnz
push
xor
iret
cltd
jns
repnz
mov
lret
and
pop
push
rcrb
mov
sub
in
mov
add
mov
dec
mov
lret
lahf
cs
pop
jge
push
push
int3
in
mov
push
dec
movsb
ss
or
xor
pusha
mov
mov
imul
imul
sbb
lret
jno
push
in
cmc
mov
test
xor
mov
sbb
xlat
push
add
push
pop
out
inc
in
or
call
and
adc
rclb
xor
mov
sbb
pop
pusha
addl
testl
aad
dec
clc
outsb
test
mov
adc
int3
orb
jp
pop
push
sahf
cmp
jl
mov
and
inc
cmpsb
cwtl
and
xor
jecxz
filds
xchg
jne
adc
xchg
push
out
inc
inc
insb
adc
nop
inc
sub
das
mov
xor
push
imul
insb
jnp
mov
dec
pop
xor
repz
cmc
pop
cwtl
or
inc
sub
fadds
iret
ljmp
sub
sub
ds
cmpl
stc
jne
xchg
lcall
cmp
dec
adc
push
push
xor
and
mov
or
mov
subl
xchg
ficoml
mov
add
imul
lahf
or
and
dec
pop
int
sub
adc
dec
shlb
ljmp
cmpsl
pop
dec
hlt
mov
mov
mov
stos
push
jle
dec
push
add
mov
sbb
into
mov
aam
cld
loope
xor
xor
sub
xchg
pushf
fildll
insb
inc
dec
pop
scas
out
mov
xchg
arpl
bound
test
lret
push
dec
dec
jge
cmpl
mov
xchg
push
and
inc
add
jb
pop
rclb
pop
aaa
push
push
scas
xor
sbbb
scas
repnz
xor
pop
inc
sub
arpl
jb
fisttpl
icebp
cmp
inc
push
push
adc
lods
outsl
add
ret
jmp
lea
push
push
jmp
repz
pop
or
hlt
orl
fisttpl
sbb
dec
dec
cld
lods
push
lcall
mov
and
sti
jmp
xor
cltd
in
into
idivl
lea
movsb
sub
sbb
movsl
lcall
test
jmp
movsl
fisttpl
rorl
adc
or
dec
dec
fidivrs
push
fisubl
push
xchg
je
adc
xlat
xchg
push
dec
cmpb
sub
data16
adc
sbb
test
push
imul
loope
lods
sar
cmpsl
das
xchg
xchg
loope
jo
or
jmp
jns
or
or
jp
adc
int
in
xor
imul
or
mov
xor
xchg
pop
gs
jg
push
or
sbb
mov
add
adc
stc
push
cmpsb
ret
mov
sub
ret
dec
mov
inc
xor
xchg
add
dec
int
mov
push
or
pushf
call
shr
imul
inc
fsubrs
stos
imul
movsb
test
mov
int3
cmpsb
jns
sbb
dec
mov
lods
adc
shl
cltd
cmp
push
out
aas
out
lods
dec
inc
repnz
out
cmc
pop
jae
ficoms
mov
mov
je
fdivl
sub
dec
icebp
test
gs
addl
ja
sti
ficoms
xor
in
and
test
stos
pusha
lods
xor
les
lods
adc
rorb
push
ss
xchg
les
loope
gs
mov
jp
bnd
test
jmp
pop
xchg
or
test
pop
out
add
push
orb
cmp
mov
push
sahf
mov
aaa
stc
rcrb
and
or
sbb
jp
and
inc
xor
mul
sarb
push
pushf
sti
pop
fmulp
xor
subb
fwait
push
add
mov
sub
std
mov
pop
lods
jo
in
xor
rorb
xchg
jnp
fstl
lar
cwtl
rorl
clc
fbstp
adc
jne
sub
daa
xchg
mov
aas
inc
jmp
cs
test
mov
gs
lea
pop
call
test
je
outsb
dec
mov
inc
cmp
adc
xchg
add
movsb
cmp
pop
gs
out
orl
fistpl
and
add
adc
into
cmc
jecxz
jbe
andb
ja
adc
shrb
fmulp
ljmp
dec
push
mov
cmp
xor
push
loope
sub
adc
jo
je
jecxz
in
orl
in
add
pop
sub
ljmp
cmp
cmc
push
fsub
out
cmp
xchg
jo
pop
fs
and
cli
mov
sbb
mov
inc
mov
dec
xorb
and
in
arpl
jp
insb
sbb
imulb
fwait
pop
int3
pop
pop
stc
aaa
test
ficoms
repz
xorl
shll
and
fcomi
add
jp
outsl
mov
call
sti
push
push
add
fsub
and
xchg
out
out
mov
sbb
or
sbb
aad
test
cmp
or
les
into
cmp
sbb
sbb
mov
adc
mov
xchg
es
push
jg
test
sbb
and
imul
xchg
xor
fsubrs
add
bound
xor
cld
pop
push
test
jne
neg
fisubl
insl
jg
pop
in
inc
xor
add
inc
jno
test
outsb
or
pop
mov
lcall
dec
push
pushf
cmpsb
sub
mov
test
cmp
sbb
push
or
cld
aaa
push
or
jg
loop
pop
in
ljmp
cwtl
out
mov
mov
ret
mov
ljmp
mov
jbe
pusha
insb
int
sbb
cmp
jne
mov
aaa
jecxz
movsl
xchg
mov
outsb
mov
call
addr16
xor
mov
lcall
sub
jle
cmp
dec
and
loope
fcomi
and
lahf
or
inc
push
es
push
test
pushf
and
adc
jo
lods
adc
iret
lock
inc
dec
mov
dec
jae
leave
inc
mov
js
pop
in
sarb
lea
cmpb
rcll
xor
ja
sbb
sbb
icebp
loopne
jns
rol
xor
loop
movb
jnp
push
cmpb
cmp
sti
stos
xor
outsl
outsb
clc
jmp
in
dec
jo
dec
inc
loop
mov
mov
fists
loopne
xchg
out
xchg
jl
ret
add
cld
pop
cmp
sahf
mov
test
out
mov
je
xchg
sbb
out
insl
mov
daa
lods
outsl
jbe
mov
mov
loop
cld
mov
xor
lds
lahf
jl
rolb
mov
ss
xchg
int
mov
push
out
push
cltd
xchg
stc
sub
xor
inc
arpl
sarl
shll
fwait
pushl
jns
sub
clc
in
stos
pop
daa
dec
test
scas
adc
cmp
add
lea
xor
orb
in
enter
icebp
sub
xor
adc
xor
test
and
add
call
cmpsl
bound
mov
or
mov
pop
mov
and
je
sub
lods
push
xchg
scas
sarl
xlat
cmp
xchg
add
ret
cld
dec
jnp
jo
mov
and
mov
push
jg
dec
imul
pop
and
adcl
mov
pop
xchg
lret
lcall
sub
pusha
fs
fdivrl
or
dec
mov
pop
in
nop
pop
add
movswl
jmp
out
mov
repz
fcoml
inc
hlt
iret
xchg
sbb
xchg
and
mov
adc
inc
xchg
in
mov
xchg
xchg
pop
in
sbbl
in
push
pushf
push
pop
sub
lods
jns
xor
mov
sub
enter
dec
repnz
sbb
loope
xchg
bound
movsl
movsl
popa
daa
leave
cmpb
decb
pop
stos
cmpb
jl
push
pop
fs
xor
inc
jp
clc
xchg
cmc
test
push
sbb
stc
adc
jmp
add
push
mov
divl
inc
test
sbb
scas
shrb
pop
icebp
popf
xchg
inc
xchg
jne
loop
xchg
cmpsl
xchg
repz
das
inc
testl
loopne
sub
push
pop
dec
mov
cwtl
fsubrs
data16
push
and
iret
popf
leave
cmp
ucomiss
movsb
jge
inc
jmp
movsl
jmp
push
mov
mov
call
shll
adc
sub
cmc
mov
sub
push
fisubs
or
inc
xchg
adc
inc
stos
sub
pop
loop
adc
je
and
xchg
dec
lds
cmp
fisubl
fisubrl
xchg
test
cmpb
dec
mov
paddq
adc
pop
push
aas
jno
mov
dec
mov
sub
dec
in
adc
cmp
inc
inc
jl
pop
pop
bound
enter
shlb
xor
sbb
mov
outsl
adc
jne
loopne
lods
jg
fldt
mull
pop
sub
pop
in
xor
cmp
and
mov
sbb
cmp
jg
fcom
or
pop
mov
mov
addr16
rcll
jb
mov
das
adc
outsl
mov
sarb
mov
ss
sub
icebp
or
mov
outsb
jge
pusha
outsb
pop
add
nop
ror
inc
cwtl
and
jae
xchg
cmp
sahf
sbb
test
mov
push
pop
cmpsl
out
scas
mov
imul
in
jmp
sar
popa
call
adc
add
sbb
sbb
arpl
jb
subl
lret
mov
adc
sub
mov
add
test
mov
pop
xchg
cltd
dec
xchg
dec
dec
in
stc
cld
inc
push
pushl
outsb
iret
jb
xchg
sub
aam
repnz
sub
cmpsl
shrl
mov
out
mov
mov
mov
lret
fcompl
cmp
int3
cmp
jecxz
rcrl
pop
jle
leave
sarl
arpl
cmp
fidivrs
in
int3
and
push
imul
lahf
pop
sub
mov
std
ficomps
push
xchg
push
cwtl
or
mov
jno
ja
scas
sbb
mov
pop
push
push
lea
or
sbbb
les
ret
imul
sbb
add
loop
sbb
pop
lods
or
leave
popf
cmp
cmc
test
xchg
orb
inc
dec
add
das
aad
dec
leave
ret
or
addr16
daa
xchg
jbe
js
or
movsb
jne
pop
pop
pop
les
inc
mov
bound
jmp
sarb
mov
cmp
xor
push
fs
fldt
and
rclb
pop
ljmp
mov
popf
mov
fimuls
inc
daa
dec
jle
out
test
into
mov
cmp
imul
pop
ljmp
outsl
enter
ret
dec
pop
mov
in
push
mov
ret
call
lock
jmp
pop
outsl
sub
xchg
mov
cld
hlt
mov
sub
xchg
test
xchg
mov
adc
or
push
out
or
xchg
mov
add
iret
jne
sbb
cmpl
movsb
pop
inc
adc
fadds
pop
int3
inc
cwtl
dec
jmp
cld
pop
mov
fcomip
cmp
add
add
mov
cmp
lods
push
flds
or
lret
sub
in
or
lahf
loop
std
lea
shll
pop
pop
xchg
call
pop
pop
push
push
inc
adcl
mov
inc
jne
int3
cltd
test
xchg
dec
push
mov
mov
pop
hlt
addb
mov
adc
fimuls
movsl
fldl
sbb
jae
jl
jae
jne
xchg
or
lods
adc
cmp
aas
outsl
rcrl
ljmp
roll
or
jp
cltd
lock
add
outsl
push
cs
push
leave
leave
xchg
adc
mov
dec
popf
or
nop
shl
jg
sbb
ss
mov
dec
push
clc
rcll
fidivrl
adc
gs
ja
mov
sub
pop
jo
in
pop
scas
dec
xchg
mov
in
xor
jo
sub
and
andb
sbb
push
test
adc
push
inc
outsl
inc
repnz
dec
aas
ds
mov
loop
fsub
aam
lcall
sahf
outsb
fs
dec
dec
cmp
xor
arpl
aaa
movsl
and
cmpsb
repz
shll
xor
mov
notb
xor
shll
push
or
lock
popa
pop
sub
in
jno
jg
mov
mov
jo
in
ds
insb
out
sub
aam
jg
adc
icebp
or
lret
jbe
add
ret
and
sub
push
pop
mov
inc
cmp
cmp
js,pt
setl
iret
dec
call
stos
jle
jno,pt
push
cmp
lea
mov
pop
sub
xlat
cwtl
cmc
jp
ds
push
mov
mov
shlb
lcall
rorb
xchg
test
mov
mov
dec
sbb
cmp
mov
pop
add
xchg
jb
popa
pop
mov
sub
shll
pop
xchg
pop
addr16
add
subl
cli
scas
mov
xchg
or
les
popf
lds
adc
jge
mov
ss
ss
gs
fwait
jbe
pop
push
mov
sub
add
test
int3
ds
loopne
mov
dec
or
or
push
mov
outsl
imul
es
sbb
and
mov
lds
push
xor
popa
mov
test
idivb
outsb
adc
inc
call
cmpsl
movsb
dec
push
out
xchg
adc
mov
jg
daa
adc
int
cmc
jl
stc
mov
popf
xor
pop
or
sbb
out
cmp
fwait
roll
lock
jl
shr
and
in
jle
cmp
lock
and
out
sbb
add
inc
cmp
mov
dec
daa
or
and
dec
sahf
ret
out
sahf
test
fisubrl
rclb
cmc
test
jne
arpl
cmp
mov
repnz
cmp
xchg
cli
adc
dec
dec
pop
and
mov
shll
inc
inc
clc
cmp
repnz
cld
aaa
mov
mov
mulb
sub
adc
ja
sbb
mov
add
lahf
jo
pop
xor
and
subb
mov
mov
or
popf
dec
cmpsb
inc
sub
xchg
dec
sub
add
push
fimuls
cld
popf
inc
lds
mov
fisubrl
in
sub
aaa
in
rcrb
scas
ss
adc
push
and
les
sbb
xor
lret
xor
mov
mov
scas
mov
jge
xor
push
insl
pop
sub
das
cltd
xchg
fdivrs
cmp
pop
or
xorl
dec
adcb
push
dec
clc
or
lahf
lahf
sbb
int3
add
jns
cltd
pop
mov
testl
pushf
push
mov
cmp
addr16
xchg
xchg
mov
adc
pop
mov
gs
and
and
xchg
dec
jnp
sti
push
data16
push
jp
pop
loopne
rcll
lcall
mov
test
dec
js
add
roll
cmc
push
push
in
xlat
cmp
mov
int
add
mov
in
fs
lods
mov
mov
stos
cmp
add
repz
jnp
mov
hlt
adc
je
add
xchg
fwait
inc
lods
repz
inc
push
dec
and
leave
jge
pop
jl
inc
inc
lcall
arpl
mov
sbb
ds
js
cwtl
orl
std
jnp
push
inc
or
sub
xorl
lds
pushf
mov
lahf
xchg
repz
jo
jae
cwtl
and
or
xchg
jns
js
mov
in
inc
xchg
push
and
inc
add
and
hlt
fldl
and
inc
xor
cmp
mov
inc
ds
test
mov
lds
cwtl
lret
les
inc
cltd
xor
hlt
fcmovne
add
or
push
clc
adc
mov
mov
cmp
jno
data16
inc
jne
mov
fidivl
stos
call
jns
lods
icebp
aas
fbld
pop
out
cmpsb
ret
adc
xor
hlt
jne
cmpsl
in
sub
and
xchg
insb
repnz
enter
mov
jnp
int3
jae
jno
xlat
push
daa
adc
aam
and
mov
lds
inc
jmp
jmp
mov
imul
and
lcall
and
adc
add
adc
push
movsb
das
mov
xchg
sub
loope
jle
sarl
add
or
addr16
dec
mov
add
jae
aas
fidivrl
es
outsb
mov
imull
or
jo
adc
cwtl
rcr
test
push
pop
or
fwait
ljmp
shl
mov
adc
testb
mov
push
notl
adc
mov
faddl
dec
mov
jb
aas
fcompl
fisttps
xchg
push
inc
jmp
pop
out
pop
cmp
cs
insl
adcl
sbb
jg
lea
or
sub
fsubrs
adc
jae
pop
mov
mov
imul
daa
push
movsb
rorb
push
inc
xlat
enter
lcall
mov
mov
into
jo
dec
adc
loopne
dec
out
mul
loope
dec
push
bound
inc
fadds
bound
dec
cmp
xor
mov
ja
mov
xchg
fistpl
push
adc
adc
xlat
ret
mov
js
loopne
pop
push
out
js
inc
data16
mov
jae
popa
pop
push
lock
mov
mov
sub
pop
test
mov
pushf
pop
and
stos
sahf
daa
mov
sbb
and
sub
ljmp
out
repnz
jae
push
pminsw
jl
xchg
jp
jo
mov
out
mov
adc
adc
loope
je
jecxz
je
inc
aaa
jl
mov
adc
pusha
sahf
inc
shll
lock
xor
jae
mov
jno
pop
loop
pop
mov
push
sbb
hlt
iret
mov
xchg
ret
inc
mov
jae
leave
scas
loop
xor
adc
imul
nop
inc
popf
int
fwait
cmc
fcmovnbe
xchg
pop
fldcw
idiv
and
mov
cmpsb
mov
or
dec
push
xchg
popa
stos
dec
mov
cmp
jge,pn
and
sbb
lock
pop
ficoml
mov
test
arpl
mov
ss
rcl
dec
cmp
rcr
sub
scas
int
test
mov
ret
dec
or
sbb
fstpt
lds
fdivr
mov
push
ds
pop
idivl
in
rcrl
leave
inc
push
movsb
mov
movsl
adcl
add
sbb
test
loope
push
xor
icebp
into
aaa
loop
mov
mov
add
fxch
and
test
repnz
dec
cwtl
xor
jae
ss
into
lret
xor
xchg
adc
push
cmp
push
fiadds
rcrb
in
sbb
cmp
or
cmc
insl
clc
xchg
inc
cmp
sub
sub
aas
mov
popa
popf
fsubrs
pop
and
loop
imul
inc
ficomps
pusha
cmp
fisttpl
inc
mov
repnz
loope
sahf
aaa
into
pop
cwtl
test
mov
test
in
ret
cmp
lahf
int3
mov
das
mov
insb
ret
push
js
gs
dec
fsubrp
inc
psubusb
add
outsl
adc
aad
pusha
cmp
or
add
decl
gs
ds
jle
aam
add
shrd
inc
dec
popa
test
lds
cltd
enter
inc
jp
xchg
aam
xchg
or
cwtl
mov
popf
lock
jae
jecxz
jno
adc
dec
pop
daa
push
bound
mov
add
loope
and
cmp
mov
std
mov
cmp
push
lds
dec
inc
dec
mov
jnp
lea
ret
jb
inc
testb
popf
lds
pop
cmc
ret
xchg
pop
mov
push
adc
inc
fs
aam
scas
dec
sbb
sbb
lcall
fnstsw
xor
leave
lods
cwtl
das
mov
test
fwait
xchg
shll
int3
sub
push
add
sbb
mov
fsubrl
mov
test
push
inc
mov
cmp
mov
push
out
jns
pop
std
mov
scas
lret
imul
pop
push
jnp
das
inc
stos
xchg
lods
decl
sbbl
push
and
sbb
ret
shld
dec
push
mov
mov
xor
adc
aaa
jg
lods
ja
sbb
cmp
pushl
sub
cmp
adc
dec
pop
lds
xor
dec
int3
lock
stc
mov
mov
in
mov
adc
inc
mov
test
out
add
adc
lret
or
sbb
dec
in
cmp
mov
cmpsb
xchg
and
and
mov
mov
xor
mov
aam
mov
cmp
jno
scas
lds
adc
inc
aas
pop
roll
push
adc
ds
pop
cli
push
pop
test
adc
stos
adc
pop
inc
mov
mov
lds
mov
xchg
xchg
cltd
imul
lods
ja
jecxz
sbb
fs
push
adc
int3
sbb
orl
add
cmp
mov
mov
sub
fidivl
mov
out
hlt
test
neg
mov
lret
repnz
xorb
fcmovnu
pop
testb
das
mov
icebp
addb
addr16
jb
sahf
jp
sbb
arpl
pop
les
xor
es
fildl
sbbl
lea
pop
mov
mov
pushf
ret
mov
lcall
lock
or
call
push
xchg
push
mov
inc
fstl
mov
push
xor
xchg
shr
adc
push
mov
inc
mov
imul
jae
dec
jge
fwait
loop
inc
sbb
sbb
push
cmpsb
push
and
movzbl
pop
in
or
push
dec
mov
sbb
push
roll
sti
pop
cmc
sub
loopne
inc
cmp
xchg
mov
mov
subl
rcll
add
sbb
scas
mov
lods
fs
and
mov
in
xlat
cmp
mov
pop
mov
push
cmp
and
std
push
lds
push
rclb
idivb
in
ds
scas
fdivr
push
jno
ret
cltd
add
push
pop
xchg
test
addr16
daa
pop
testb
pop
lret
mov
roll
js
sahf
dec
arpl
mov
mov
inc
aad
sbb
cld
lods
sbb
movsl
clc
lock
cmc
and
in
mov
lds
pop
es
mov
adc
aam
cld
mulb
popf
xor
xchg
imul
xchg
xchg
repnz
stc
xchg
int3
jno
and
cmc
pop
js
aad
ljmp
leave
fisubrs
sub
adc
daa
mov
fimull
cmpsl
loope
in
test
xchg
sbb
out
push
test
and
cld
lds
out
test
fdiv
sti
push
out
push
mov
mov
neg
mov
testb
push
fidivl
inc
in
shll
mov
inc
jmp
stos
stos
dec
adc
sub
cs
imul
push
cmp
repnz
in
jecxz
arpl
jae
jnp
dec
mov
push
outsb
mov
mov
lcall
nop
cmp
es
jne
jns
xor
sub
cmp
or
and
sub
aaa
push
sbb
mov
and
lcall
shr
pop
leave
stos
push
rcll
and
mov
mov
sub
sar
sub
loope
ja
xor
add
xor
adc
sub
testb
xchg
jbe
sbb
in
mov
out
xchg
pushf
cmp
mov
aaa
stos
cli
mov
scas
xchg
mov
dec
cmp
pop
repz
mov
mov
imul
mov
mov
enter
mov
call
push
adc
pop
xor
repnz
jle
sbb
push
leave
adc
mov
stc
jp
xchg
xor
jmp
sbb
leave
or
jae
xlat
push
push
mov
es
mull
xchg
push
ljmp
shlb
testl
cmp
das
and
jle
int3
clc
adc
mov
into
fcmovnb
inc
add
lea
mov
add
mov
xor
iret
je
int3
outsb
fdivrp
cmc
jns
push
and
mov
mov
mov
aad
sbb
repnz
or
add
push
jnp
sub
notl
lods
jl
inc
jbe
xor
push
out
cld
es
sub
xchg
ds
jg
addr16
icebp
sub
mov
fnstsw
mov
divb
and
loop
js
idivb
shlb
mov
mov
out
aaa
pop
jb
faddl
mov
mov
add
push
into
dec
fldt
xchg
xor
std
adc
in
sbb
cli
lods
push
in
inc
xchg
js
scas
pusha
jge
add
pop
ficoml
cld
jnp
fwait
movsl
add
sbb
jb
mov
mov
and
adc
shlb
push
xlat
movsb
fcmovb
arpl
jmp
sbb
int3
in
and
sbb
xor
mov
jns
jnp
sub
jge
fsubr
and
cmpsb
loopne
addb
push
arpl
in
imul
or
jmp
cld
jno
push
jo
mov
push
subb
mov
fbstp
ds
push
mov
dec
pushfw
cmp
xchg
and
es
les
lods
adc
repz
int
push
cmp
and
shrb
aam
les
mov
pop
push
inc
cmp
sub
jae
jne
scas
push
xor
mov
add
imul
fiaddl
je
ds
inc
adc
cmp
lcall
mov
and
dec
cwtl
sbb
dec
jae
stc
in
pop
mov
lret
inc
lcall
jp
test
insl
subb
xchg
push
cmp
shr
pusha
incb
add
lock
mov
pop
jb
xchg
pop
cli
sahf
fstpl
call
inc
fstpl
testl
cmpsl
mov
pop
dec
scas
test
scas
lds
test
jl
rorl
sbb
in
aas
jecxz
inc
add
out
pop
cmp
int
push
ret
popa
loopne
bound
xor
js
or
test
negb
mov
outsl
cmc
xchg
imul
pop
orb
ljmp
add
cmc
jbe
pop
int
jg
jnp
es
leave
push
sub
cltd
movsl
push
jae
jge
sub
cmp
outsb
in
rcrb
xorl
popf
in
xor
clc
jb
mov
ja
lds
or
sub
cs
jmp
test
pushf
in
lods
lds
fistpl
push
jmp
xor
mov
pop
std
xchg
jnp
ds
push
sub
rorb
pop
imul
push
sbb
add
jns
jo
icebp
aaa
aad
jp
xor
push
pop
push
and
stc
into
sub
jmp
push
imul
lea
leave
xor
ret
jnp
xor
push
ret
pop
roll
rcl
mov
mov
sti
xchg
xchg
dec
fimull
call
xchg
pusha
mov
test
sbb
jb
mov
mov
adc
push
adc
mov
xchg
push
or
ja
cltd
testl
test
inc
ret
fwait
std
aam
lods
dec
out
mov
das
repnz
adc
dec
clc
xor
pop
test
rorl
pop
sbb
cmpsb
ret
movsl
dec
push
outsl
hlt
jmp
push
repnz
mov
leave
aaa
push
cmp
test
sub
fwait
jo
jg
mov
test
lds
mov
xchg
sbb
icebp
movsb
aad
jle
shll
std
dec
outsl
xor
fnstsw
mov
jns
mov
iret
jbe
xchg
add
ret
fiaddl
mov
fstl
in
in
xor
je
xlat
and
sti
loopne
mov
sub
xchg
sub
clc
data16
out
flds
mov
mov
mov
xor
pop
jnp
movsl
cmpsb
add
je
xor
inc
pop
sub
jno
xchg
xor
mov
dec
aad
sarb
loop
mov
sbbb
shlb
fmuls
sti
ja
popf
sub
js
or
jbe
jle
push
adc
pop
pop
test
testb
ds
test
xor
lret
xchg
cmp
sbb
movsl
cmp
cmp
shlb
pop
leave
push
xlat
adc
das
test
cs
cmc
xor
out
adc
add
int
dec
out
in
cmp
ret
lret
push
movsl
movsl
sbb
aas
mov
test
xor
jbe
in
call
rcrb
insb
cmp
jae
ret
xchg
mov
scas
movsl
jecxz
mov
or
arpl
adcl
mov
adc
lea
inc
mov
and
add
jns
cwtl
outsb
and
cld
or
sub
mov
adc
pop
fwait
scas
lods
cli
ja
std
jb
outsb
cmc
test
and
fldt
xchg
mov
jl
lods
lds
aas
rcrb
cmp
sbb
inc
movsl
mov
lcall
mov
inc
jl
push
xchg
dec
fsub
stc
xor
fcoml
adc
fs
sti
stos
scas
data16
test
aam
repz
jp
out
push
sbb
and
mov
lock
popf
xchg
scas
lcall
call
sub
fidivrl
add
inc
mov
add
test
cmp
pusha
and
aad
cld
in
in
mov
sbb
jno
xchg
cwtl
icebp
or
push
xchg
inc
je
mov
dec
shlb
cwtl
push
inc
jno
and
lods
inc
mov
push
push
pop
test
jae
pop
movsl
movsl
inc
adc
fistpll
inc
push
sbbl
pop
sbb
mov
add
js
xchg
dec
rdmsr
xchg
loop
jmp
imulb
jbe
mov
out
cmp
repz
pop
inc
sub
pop
pop
push
sub
cmp
jbe
in
and
fldl
adc
cmp
sub
out
mov
shl
out
dec
int
ds
fildll
lods
shr
test
stos
adc
push
push
jmp
jne
fmull
push
xor
movsb
stos
cmpsb
cld
sbb
dec
push
jno
add
nop
aaa
icebp
sbb
fwait
add
adc
adc
pop
mov
test
test
mov
jns
mov
loopne
inc
xor
xor
adc
inc
adc
xchg
mov
outsl
jnp
xor
mov
push
jo
das
mov
int3
xlat
pop
dec
jb
adc
int3
in
int3
sbb
mov
cmpsl
jae
push
jnp
jg
out
sub
inc
fdivrp
jmp
ds
cmpsb
inc
lds
scas
mov
shrl
jae
ss
adc
jb
ret
fwait
mov
sub
mov
testb
iret
add
stos
imul
in
inc
roll
jp
push
gs
dec
mov
cmp
xchg
push
sub
test
xchg
out
shlb
insb
in
rcll
int3
out
mov
in
gs
pop
jb
std
movsb
mov
fildl
out
push
std
movsl
notb
pop
pop
call
push
or
mov
int
inc
push
loope
cltd
xchg
test
pop
push
jge
incl
mov
dec
mov
inc
or
jns
stos
cmp
push
jne
sbb
fildll
pop
loop
enter
shlb
inc
lods
fld1
and
subl
ret
cmpl
sets
mov
jnp
imul
or
mov
inc
ja
mov
mov
sbb
cli
xchg
adc
mov
pop
xchg
movb
push
dec
sub
xchg
xchg
insb
pop
xchg
jmp
imul
lea
jmp
jp
sub
add
movsb
arpl
rorb
ljmp
sbb
lea
pop
and
dec
in
sub
mov
inc
push
fsubrl
pop
add
xlat
or
lcall
fdiv
das
xor
push
or
xor
in
movlps
cmp
cli
or
pop
cmp
dec
in
scas
add
dec
fistpl
fwait
hlt
dec
and
cmp
push
mov
stos
aas
ss
nop
mov
cmp
pop
imul
mov
cli
sbb
mov
xor
jns
xchg
push
mov
push
sub
jmp
aad
fnstenv
add
push
jecxz
dec
add
clc
test
dec
add
imul
lods
test
inc
sub
add
lds
lret
add
movsb
mov
ss
rorb
cmpsl
mov
jg
dec
je
movsb
orb
orl
movsb
sahf
dec
icebp
sub
inc
sub
add
sti
loope
pop
sub
push
stos
pop
pop
out
sub
nop
xor
es
xor
mov
iret
mov
mov
lea
pop
out
push
std
in
fistl
inc
xor
push
xchg
push
jne
ja
xor
adc
or
add
xchg
test
std
jge,pn
dec
aam
sbb
xchg
repnz
repnz
push
mov
ja
push
pop
mov
stc
pop
shl
push
ss
mov
and
roll
push
data16
dec
xchg
dec
dec
popa
jmp
mov
xlat
cmpsl
xchg
mov
cmp
jge
or
mov
push
fcmovbe
push
mov
ljmp
mov
inc
xor
cltd
mov
int
shlb
pop
mov
out
push
lret
lcall
faddl
cmp
jne
daa
mov
or
cmpsb
mov
mov
fildll
adc
cmc
sbbb
add
mov
dec
fwait
or
xlat
scas
sbb
cmpsb
jbe
mov
sbbb
xchg
mov
jmp
push
int
push
sbb
dec
push
cmp
clc
icebp
jae
or
mov
pusha
pop
aam
iret
repz
and
stc
inc
inc
jl
loope
or
in
loopne
mov
fmul
mov
jmp
mov
ficoms
inc
cpuid
sub
aas
xor
inc
mov
rcr
sbb
ret
mov
pop
in
add
or
sahf
pop
hlt
ret
add
test
jle
out
cmc
scas
insl
das
std
inc
stos
add
rclb
xchg
jg
bound
mov
cs
sahf
addr16
adc
fnop
pop
jecxz
mov
mov
movsl
call
mov
cmp
mov
mov
adc
cwtl
repnz
fildll
insl
iret
in
xchg
ja
mov
pop
test
push
sbb
push
mov
hlt
mov
pop
cld
std
je
mov
out
decl
dec
pop
outsb
cli
cld
js
push
repz
movsl
out
pop
mov
ds
repz
fnstcw
push
mov
cmp
mov
inc
and
jne
test
mov
mov
push
mov
lcall
mov
mov
insl
xchg
pop
test
pusha
call
aam
mov
mov
in
or
pop
mov
rcll
fwait
call
mov
or
xchg
jb
push
in
mov
jge
cmp
jo
ljmp
lcall
cmp
sarb
mov
pop
das
test
ja
test
sub
add
stos
out
pop
xor
pushf
cmp
es
jecxz
mov
xorb
push
xlat
jns
xor
scas
pop
pop
and
cld
pop
jns
inc
mov
dec
cltd
push
aas
sub
gs
mov
xchg
clc
repz
cmpb
xchg
fsubs
adc
shrl
pop
adc
pop
aas
inc
movsb
aad
jb
dec
adc
cmp
lods
mov
mov
pop
sbb
add
insl
sbb
ljmp
lods
xlat
and
imulb
mov
inc
in
dec
roll
xorb
dec
ljmp
jo
adc
mov
jle
sbb
test
imul
dec
sti
adc
fistpll
cli
lock
imul
shr
call
xchg
cmp
cmpsl
out
or
or
aad
add
jne
out
lds
xchg
insl
xchg
aad
mov
sub
mov
clc
sbb
lods
cmp
push
rorb
mov
cwtl
cmp
shll
jb
das
shrl
inc
cltd
push
rorl
jns
jno
pop
shrl
xchg
addl
mov
and
dec
cs
subb
stc
dec
inc
mov
lret
dec
bound
loope
push
lods
inc
lret
add
pop
and
daa
or
inc
mov
add
add
sub
scas
mov
or
and
jmp
dec
imul
mov
xchg
sub
sbb
loop
sbb
pop
jge
jg
popf
div
lahf
sbb
mov
mov
adc
int
dec
loope
or
movhps
add
ja
adcb
lds
push
push
mov
movsl
cmpsl
mov
add
popf
mov
clc
hlt
mov
sbb
push
mov
lds
sti
lcall
popf
inc
sbbl
jmp
push
xor
inc
sbb
inc
jnp
popf
adc
xor
mov
stos
fstps
enter
add
inc
pop
enter
mull
fistpl
adc
mov
mov
test
adc
outsb
mov
sti
fcomps
popa
pop
pop
xchg
and
out
adc
mov
aaa
xor
ret
cmp
adc
add
insb
or
or
icebp
stc
divl
aaa
iret
add
sub
sub
out
icebp
or
mov
mov
or
das
scas
dec
sarb
movsl
push
adc
inc
es
and
sbb
jecxz
push
mov
mov
es
cmc
add
mov
xchg
arpl
and
mov
in
mov
jbe
pop
repz
mov
insl
cmpl
lds
xor
test
sti
out
pop
inc
popa
call
push
pop
cmpsb
pop
popa
xor
movsl
lahf
xchg
ss
push
movsl
fwait
call
testl
mov
pop
xor
sbbb
ds
movsl
jnp
scas
xchg
adc
loop
pop
repnz
sub
mov
adc
push
in
in
jo
test
iret
push
iret
pop
adc
cmp
aad
daa
ja
push
jmp
sbb
cmpsb
test
mov
clc
mov
mov
jns
lret
hlt
imul
stos
hlt
jge
xchg
pushf
push
inc
mov
xchg
call
mov
mov
xor
into
mov
into
xor
cmp
pop
sahf
cmp
mov
cli
aas
xchg
adc
aas
stc
jo
out
lock
jle
outsb
cmp
out
push
jb
dec
push
xor
cmp
xchg
adc
fs
out
pop
or
jmp
cmp
out
pusha
add
push
clc
rorl
push
shlb
pushf
inc
jb
pop
sub
xchg
jecxz
push
test
rorl
and
push
mov
jl
out
pop
scas
repnz
dec
aad
dec
xor
js
jno
mov
mov
jnp
cwtl
inc
and
jb
ljmp
jle
pop
pop
lods
iret
or
adc
popf
push
xchg
popa
rcl
test
jbe
testb
ss
movsb
inc
dec
xor
repnz
test
push
jns
pop
mov
ljmp
sbb
push
test
dec
out
cld
in
repz
push
ja
push
xor
sub
fstpl
and
push
jb
lods
je
repnz
stos
mov
xchg
in
cwtl
dec
xor
mov
hlt
inc
pop
jp
idivl
push
push
xor
and
arpl
pop
push
test
pop
pop
mov
xchg
popf
out
push
mov
pop
mov
xchg
not
dec
add
add
lret
pop
xchg
leave
loop
xchg
mov
adc
xchg
int
pop
shlb
pop
mov
lahf
jl
mov
adc
mov
ja
js
lods
fbld
push
push
rcl
inc
jb
sbb
fwait
into
mov
scas
int
inc
cltd
in
mov
mov
jmp
dec
aaa
jne
inc
icebp
mov
adc
push
data16
and
xor
inc
aam
hlt
clc
push
xchg
cmp
cmc
data16
test
scas
cmp
cltd
or
cmovae
dec
in
stc
insl
dec
mov
ljmp
je
in
in
push
addr16
outsb
cltd
push
jne
inc
int
mov
or
push
pop
ss
fwait
sbb
xchg
fidivl
cli
xchg
add
xchg
jne
xchg
pop
ret
cmp
add
pop
fucom
repz
and
xchg
cmp
or
add
je
xchg
sub
xor
sbb
int3
push
add
xchg
pop
mov
loop
inc
pop
jnp
pushf
cltd
nop
into
ret
repz
sbbl
sbb
mov
sbbl
mov
sbb
sub
adc
scas
jp
repz
ret
mov
cmc
jne
or
dec
out
cmp
cmp
ret
adc
add
push
inc
cli
push
fildll
pop
jae
outsl
jae
rcrb
push
movsb
sbb
or
xchg
pushf
mov
addr16
push
fimull
pop
ss
mov
add
add
loopne
mov
sbb
repz
xchg
jp
xor
mov
loop
adc
jne
iret
push
rol
cmpsb
push
jnp
icebp
out
inc
lahf
lock
in
stos
adc
test
fimull
pushf
stc
out
ror
mov
push
and
mov
inc
ja
xchg
gs
cld
sub
stos
cmpl
mov
pop
adc
pop
mov
push
xchg
push
dec
pop
sbb
xor
arpl
xchg
push
lahf
push
mov
mov
pop
fxch
loope
or
add
adc
mov
push
mov
fiaddl
push
xor
dec
lock
jbe
mov
iret
cwtl
pop
push
cmp
addr16
shrb
stc
out
es
fs
push
push
inc
test
add
xor
lods
lods
sub
mov
std
icebp
sbb
jg
mov
mov
in
jecxz
sbb
mov
xor
cs
fsubrl
in
test
jle
fiadds
aas
fdivs
int
adc
testb
push
pop
movl
push
pop
push
adc
jno
inc
mov
adc
pop
push
push
jle
adcb
adc
mov
sbb
fnstenv
lods
mov
xlat
fadd
push
ja
sbb
sub
out
sahf
or
jle
or
in
pop
pop
sbb
and
aaa
rcrb
in
jno
pushf
and
ret
les
fisubs
jmp
sbb
adc
mov
aad
ss
fstl
sahf
fwait
daa
cmp
test
cmp
loop
fbstp
lahf
xchg
and
sub
rorl
insb
push
xchg
mov
mov
sbb
pop
popa
or
stos
mov
mov
mov
test
mov
call
xorb
insl
sahf
sbb
gs
jle
xchg
inc
cld
sub
lahf
rcll
jmp
imul
das
sub
xchg
mov
mov
jl
jg
or
xor
cltd
push
xchg
xor
int3
out
fdivp
jmp
jl
inc
mov
pushf
push
mov
mov
mov
mov
cmpsl
insl
add
fbld
in
stos
mov
popf
pop
lea
xor
pop
mov
scas
mov
mov
jb
xlat
out
fsubr
sub
adc
mov
xchg
pusha
adc
int3
test
add
jne
out
hlt
xorb
insl
pop
sbb
mov
xchg
testb
cmp
add
enter
dec
rcrl
sbb
cmp
mov
subl
sbb
cmp
inc
mov
push
cmp
stos
out
cmp
pop
popa
xchg
stc
cmc
xchg
push
data16
loop
into
mov
fnstsw
clc
shll
jae
mov
xor
pop
cmp
call
inc
data16
cmp
xor
loopne
xchg
cmp
pop
push
pusha
pushl
jbe
dec
mov
clc
add
and
xlat
jecxz
cs
add
loope,pn
xchg
jae
inc
mov
ds
cmp
outsb
adc
stos
xchg
pop
stos
or
stos
mov
je
mov
loope
pop
jg
or
cmp
sub
dec
lret
andb
stos
aas
push
inc
leave
repz
adcb
adc
sub
jbe
jmp
xchg
arpl
dec
xor
in
in
shlb
add
pop
in
inc
sahf
and
in
divl
loop
xor
xchg
mov
fldt
xchg
data16
sub
test
jecxz
shlb
es
cld
xchg
jne
out
cmp
mov
leave
clc
mov
inc
test
lods
loop
arpl
sub
push
add
in
adc
lret
push
dec
sub
xor
insb
sbb
mov
pop
sbb
shll
dec
movsl
shll
dec
mov
sti
cmpsl
cmp
cld
xchg
cmp
xor
mov
shrb
aas
jmp
test
adc
cs
cmpsl
lahf
les
xlat
jnp
movsl
scas
sub
shlb
fcmovnb
adc
jmp
xchg
inc
arpl
popa
lds
aad
mov
mov
jmp
push
mov
lods
mov
cmp
inc
jg
add
xor
or
xchg
lcall
mov
xor
int
sub
xchg
mov
push
jp
mov
iret
xchg
add
sbb
je
xor
and
es
dec
mov
cltd
stos
xor
lock
jp
idivl
xor
dec
int3
aaa
scas
fsubs
mov
mov
dec
sbb
add
scas
ja
jne
arpl
push
bsf
xchg
push
repnz
ret
bnd
test
push
and
loope
jae
jmp
insl
daa
dec
push
xchg
fucomi
or
pop
fbld
inc
fildl
adc
mov
xor
loop
out
mov
jmp
jae
aad
in
mov
push
cwtl
loop
pop
and
loop
inc
jns
jne
mov
das
cmp
icebp
pop
out
jbe
add
loope
nop
in
repnz
dec
call
mov
mov
popa
sub
mov
xlat
repz
int
dec
mov
sbb
add
jle
dec
imulb
fisubs
sub
xorl
sub
cld
xchg
cli
push
cmpsl
test
cmp
pop
jo
scas
adc
or
mov
xchg
sarl
stos
cmp
js
pop
mov
adc
pop
mov
jne
into
sub
aad
orb
cmp
pushf
sbb
jns
int3
and
fidivs
inc
in
movsb
dec
push
xor
xor
cs
scas
xor
scas
or
jbe
repz
out
mov
lret
cmpsl
mov
movsb
test
insb
push
sbb
add
loope
in
rcrl
xchg
mov
pop
addr16
push
or
jne
sub
lods
mov
adc
xchg
arpl
outsb
sahf
adc
mov
sbb
xor
inc
bnd
pop
lea
cmp
repz
cmp
cs
mov
ret
mov
aam
loopne
push
lret
dec
cmp
std
mov
daa
and
cld
aaa
test
inc
mov
jnp
push
cld
aad
lds
jnp
mov
enter
push
std
add
int3
repnz
sarb
xor
or
xchg
xor
rorl
mov
clc
ficompl
jno
lret
mov
lret
insl
pop
cltd
adc
jl
ds
sahf
shlb
jl
ficompl
jmp
aam
pusha
into
dec
add
sub
mov
repz
xchg
pop
xchg
pushl
subb
aaa
push
mov
jo
xor
loop
dec
in
test
inc
scas
xor
mov
jle
sbb
pop
stos
call
push
fcmove
lds
test
lods
mov
sub
jg
inc
lods
mov
and
lcall
jne
pop
jg
push
jp
scas
inc
or
cmc
xchg
push
in
cwtl
or
inc
icebp
clc
inc
rolb
aaa
jo
bound
cmpsl
daa
add
jp
and
int
call
cmp
lods
das
out
repnz
xchg
jmp
jge
mov
movsb
cmpsb
adc
sbb
lods
outsb
in
jne
mov
cmpsb
sub
fbld
add
push
cmpsb
cmp
lea
mov
sbb
je
jae
jns
stos
fistpll
repz
inc
aas
sbb
sbb
and
xor
mov
out
cmp
inc
out
mov
mov
adc
add
sub
in
jb
mov
mov
in
inc
add
test
dec
push
push
push
sahf
sbb
cmp
nop
xchg
aaa
pop
rsm
inc
ret
and
out
inc
inc
mov
test
adcb
xor
sbb
lods
ljmp
scas
dec
sub
enter
movsl
inc
cmp
push
stc
test
int3
in
jb
mov
xchg
xchg
sbb
scas
adc
lock
fwait
dec
movsl
scas
push
aam
mov
and
enter
inc
or
movsl
adc
in
add
rcr
push
lcall
xor
mov
add
cld
cld
dec
pop
clc
add
imul
je
sbb
and
or
and
hlt
sub
lcall
lret
jb
fs
es
ret
call
inc
stos
inc
xchg
xchg
inc
scas
mov
pop
dec
push
decb
sbb
push
pusha
clc
add
into
lock
pop
inc
lret
jne
out
and
sti
ret
xchg
add
or
lcall
ds
mov
lahf
cmp
fcomps
insb
pop
sahf
push
popf
lcall
mov
xchg
xchg
mov
addl
jp
push
dec
xchg
sbb
in
pop
jecxz
cmpsl
loopne
movsl
sub
mov
les
pop
xor
arpl
scas
testl
cmp
das
popf
dec
dec
sbb
roll
out
or
or
bound
in
inc
arpl
lret
fisttps
push
add
push
idivb
pop
mov
cmc
push
cmp
inc
sbb
lea
xor
ljmp
sub
cmpsb
push
mov
insb
outsb
jns
sti
in
xchg
out
xor
lahf
sub
dec
push
dec
nop
inc
and
pusha
pop
jo
dec
xlat
mov
jb
mov
xchg
scas
js
in
dec
pop
jp
test
lock
sbb
fidivrl
sbb
movsb
xchg
in
pushf
mov
mov
aaa
and
and
push
scas
push
xchg
adc
insb
imul
ldmxcsr
inc
in
std
iret
mov
fcoml
push
cltd
je
dec
pop
pop
push
push
cmp
and
dec
mov
xor
xchg
mov
xor
out
shlb
shlb
mov
scas
icebp
sar
in
imul
sbb
mov
adc
xchg
sub
cmpsl
leave
add
or
inc
mov
dec
xor
aas
push
and
data16
and
add
ficoml
inc
pop
pop
in
aad
inc
aam
mov
xchg
and
lret
lds
mov
aaa
mov
fisubs
aad
out
shlb
ss
into
int
movl
fdivrs
das
loop
daa
leave
mov
cmpsl
xchg
mov
pop
xchg
adc
or
aas
in
scas
jbe
fidivrs
andl
pop
add
rcl
icebp
lcall
fldenv
rolb
push
fidivs
dec
xor
dec
xchg
cmp
rcpps
loopne,pt
in
jbe
add
sahf
xchg
mov
lods
or
jge
mov
popf
sti
cmp
js
imul
fisttps
jnp
gs
mov
dec
lock
shll
jp
dec
add
cmpsb
in
push
mov
addr16
leave
add
das
mov
mov
leave
jl
int
mov
mov
shrl
pusha
adc
add
iret
jns
gs
cmpsl
clc
movsb
pop
mov
cmp
mov
xchg
fwait
pushf
in
or
xchg
pusha
inc
inc
out
xchg
std
push
pop
or
adcb
and
cmp
in
std
and
cmp
mov
enter
lds
icebp
daa
dec
iret
jge
rclb
imul
pushf
jb
cwtl
jecxz
push
mov
jns
dec
fsubp
sti
mov
mov
jb
sbb
in
pusha
mov
mov
sub
in
ss
push
xlat
mov
cmpsl
xchg
addr16
scas
cmpsb
cmp
imul
shrb
loop
sbb
ss
sbb
sub
hlt
mov
sub
and
dec
and
out
orl
mov
jmp
cmp
jecxz
adc
dec
int3
jnp
fiaddl
nop
aaa
adc
xchg
int
shrb
fdivrl
xchg
pushf
addl
fbstp
mov
pop
loopne
inc
and
subl
push
int
dec
lret
popf
out
test
ljmp
and
cmpb
adc
test
cli
or
dec
xor
or
xchg
not
rorl
push
ljmp
test
pop
adc
in
clc
mov
and
mov
and
loope
xlat
testl
cmc
mov
jmp
cmp
loopne
inc
xchg
jnp
jp
orb
xor
dec
pop
inc
pop
push
outsl
iret
arpl
mov
arpl
int
xchg
jecxz
popf
dec
sbb
loop
aam
outsl
mov
sbb
fisttpll
inc
and
fldcw
cmp
sbb
in
fwait
pop
jno
mov
push
stos
cwtl
cmpsb
mov
mov
xchg
pushf
jnp
movl
add
or
std
test
ret
jmp
decl
out
or
mov
or
lods
addr16
lret
jnp
xchg
out
cltd
push
shr
mov
out
loope
cwtl
inc
and
sub
mov
leave
adc
jl
xchg
pop
jno
mov
loopne
fwait
adc
adc
xchg
icebp
data16
fldenv
cmp
inc
lret
in
push
add
ret
ret
stos
adc
es
and
aaa
icebp
add
or
xchg
inc
insb
lods
punpckldq
ds
ret
je
cs
jecxz
and
inc
pop
dec
js
mov
lret
std
or
push
adc
fsubs
insb
fdivs
inc
and
cmc
jecxz
sub
shrl
hlt
mov
or
les
leavew
mov
mov
into
cmp
repz
in
mov
pop
mov
adc
pop
je
lock
cli
or
pop
xor
xchg
lret
outsb
sbb
sub
negl
fistl
mov
mov
sbb
or
xchg
push
add
repz
shll
push
icebp
add
inc
pop
sub
popa
ja
pushf
incb
mov
push
adc
inc
pop
test
push
cmp
icebp
es
mov
sbb
adc
shrb
jg
lods
mov
cmp
push
push
jp
out
xor
sub
inc
dec
out
stc
ss
mov
mov
pop
xlat
dec
neg
les
pop
aas
leave
pop
mov
pop
fnstsw
shll
enter
jns
jae
daa
sub
add
cwtl
aaa
xchg
sbb
aaa
dec
lahf
jb
push
jecxz
adc
xchg
movsb
push
add
lcall
or
or
pop
jo
pop
test
ret
pop
sub
movsb
addl
aas
dec
jno
push
out
jne
or
into
xor
cmp
add
mov
hlt
test
and
mov
or
xchg
sbb
mov
ja
pop
mov
pop
scas
lcall
push
adc
out
sub
outsl
test
rolb
lock
sbb
stc
sub
jg
insb
push
shrb
mov
std
stc
loope
xchg
in
dec
or
mov
cmp
shlb
cmc
movsl
outsl
inc
or
shll
mov
xchg
adc
sub
push
cli
pop
fwait
cmpsb
test
call
cli
das
leave
ljmp
mov
pop
dec
xchg
mov
or
jns
add
mov
movsl
and
or
outsb
cltd
cmpsb
loopne
mov
mov
out
cmp
sbb
xchg
sub
cltd
dec
add
pop
cmp
arpl
imul
xchg
jp
push
fnstcw
dec
dec
cmp
outsl
faddp
mov
add
pop
add
fisubl
push
lcall
fstpl
push
xchg
loopne
add
push
pushf
mov
fldl
mov
shll
jp
mov
sub
sbb
stos
jmp
arpl
popf
xor
sbb
dec
int3
push
lock
fwait
mov
call
aas
and
mov
arpl
cmp
add
pop
jo
sub
mov
xor
and
push
mov
cli
ss
lock
jbe
ds
inc
inc
scas
dec
sbb
mov
sbb
insb
movsb
icebp
cs
data16
es
out
jle
lahf
xchg
pop
lahf
pop
dec
pop
mov
lret
clc
mov
cmp
mov
sub
sbb
and
mov
mov
sub
pop
inc
xchg
popa
and
sbb
xchg
test
pop
push
lods
bound
insb
test
stos
ret
pop
inc
scas
xor
mov
lods
xchg
ret
ljmp
push
inc
cmp
sbb
in
sbb
lods
sub
add
shll
jbe
inc
xor
sbb
fs
shl
fdivs
fwait
adc
jnp
xchg
mov
pop
sub
xor
jle
inc
stos
icebp
add
addr16
clc
imul
push
cmp
pop
addr16
add
shr
nop
push
mov
xor
dec
mov
je
mov
in
movsl
imul
mov
mov
stos
cmp
sub
jmp
andnps
addr16
or
mull
add
scas
or
js
fs
or
into
pop
jmp
rcr
imul
cmp
add
enter
jg
inc
and
inc
dec
dec
stos
xchg
in
adc
bound
movsl
in
adc
cmp
dec
sbb
mov
cs
jns
push
ljmp
mov
aaa
shll
jl
in
push
les
cmp
int
cmp
loop
mov
xor
stos
jp
je
or
cmp
add
adc
pop
push
xor
sub
out
je
ret
cmp
dec
aad
or
fistps
jns
pop
push
test
xor
pop
push
jbe
psubsw
lahf
sub
cmp
hlt
ljmp
js
push
loope
shl
nop
addr16
sbb
add
jbe
mov
jge
dec
push
xchg
pushf
sub
mov
lret
stc
insb
add
push
decl
in
cmpsl
fs
out
in
clc
jmp
pop
mov
jmp
sbb
sbb
sti
push
or
xchg
push
movsl
inc
mov
sub
shlb
frstor
ss
dec
cmp
pop
mov
lods
mov
xchg
cld
lods
pop
mov
sub
adc
cmp
out
insl
fcmovnbe
aas
pushf
pop
dec
adc
xchg
lcall
or
mov
jne
xor
mov
push
mov
push
ss
jne
push
cmp
or
test
xor
xchg
jl
mov
insl
pop
fdivs
dec
cld
jb
inc
cmpsl
cli
aam
xchg
movsb
test
daa
xor
xchg
inc
cmc
mov
hlt
mov
rcrb
lods
dec
pop
add
cwtl
dec
and
pop
xlat
push
rorl
out
mov
push
stos
and
mov
add
cmp
lahf
and
clc
mov
cwtl
or
cs
xchg
jo
into
in
add
cld
jmp
xor
mov
and
cmc
inc
fadds
xorb
scas
dec
pop
lods
roll
push
jg
mov
or
push
jecxz
aad
dec
lock
cwtl
inc
and
push
adc
cmp
add
lds
gs
jg
mov
fsubrp
sub
repnz
addr16
inc
sbb
inc
xor
in
testb
test
aaa
sbb
xor
jae
fidivl
movsb
cwtl
mov
adc
insl
into
and
inc
jmp
inc
xchg
popf
lcall
mulb
cmc
or
pop
sbb
push
push
add
ds
add
fs
das
movsl
jne
imul
ja
xchg
mov
in
pop
sub
sub
testl
call
fimuls
cmp
adc
dec
mov
imul
rorl
std
adc
lret
mov
xchg
cltd
lret
push
and
test
xchg
daa
dec
xor
int
push
mov
adc
push
pop
adc
std
mov
iret
dec
fidivrs
aaa
fnstsw
inc
cmpsl
mov
cwtl
std
lahf
mov
sahf
xchg
inc
inc
sub
scas
mov
fcmovnbe
and
loop
sti
xchg
sarl
sbb
fwait
or
int3
or
and
mov
sub
stos
dec
dec
dec
sub
stos
lods
into
ljmp
andb
xchg
sbb
jg,pn
adc
add
es
clc
inc
dec
mov
imul
dec
cs
jl
mov
jmp
jae
push
pop
xchg
inc
or
add
and
int3
cmp
hlt
cmc
lods
cld
lods
inc
fwait
mov
enter
inc
iret
lea
inc
push
jg
or
or
int
sub
jae
add
mov
or
mov
lahf
cmp
sbb
cltd
int
adc
fldt
cmpsl
mov
cld
loop
mov
push
addr16
out
lret
push
jb
loopne
adcl
int3
int3
lcall
cmpsb
enter
subb
jmp
jge
clc
dec
lret
sub
lahf
xor
jecxz
lea
mov
inc
mov
sub
out
test
mov
ja
fstpl
pop
mov
pushl
xchg
or
xor
fcmovnb
and
push
outsl
imul
mov
inc
push
or
lret
orl
and
int3
lock
push
pop
mov
ja
push
cmp
pop
hlt
mov
mov
add
mov
jl
cmpsl
lcall
push
push
pop
fwait
test
add
cmpsb
jo
mov
repz
and
outsb
xchg
cmp
aas
ret
sti
out
mov
out
ret
add
pop
in
cltd
in
aas
push
and
bound
je
mov
and
clc
int3
aas
cmp
sub
aam
test
mov
xchg
xchg
xchg
mov
cmc
and
inc
sbbl
leave
pop
in
xor
dec
lds
xchg
stos
mov
dec
lret
stc
aaa
test
popa
std
mov
push
mov
jp
cmpl
sbb
and
ds
bound
jb
daa
cld
adc
mov
orb
xchg
or
pop
andl
pop
pop
cmp
xchg
dec
pop
sti
jae
in
mov
jne
sub
and
cmpsl
sbb
test
xchg
inc
jno
mov
lret
lahf
pop
jle
adc
les
mov
fidivrl
and
pop
inc
inc
lods
dec
fcmovb
daa
iret
icebp
shrl
jecxz
lock
les
push
imul
inc
test
mov
pop
ljmp
sti
push
add
or
or
lock
inc
mov
inc
xchg
mov
out
aad
subb
insl
mov
mov
mov
addl
cli
out
cmp
mov
insb
loop
cmp
stc
fsts
mov
loopne
lahf
dec
adcb
sub
xchg
stos
lock
push
sub
daa
pushf
fs
imul
add
push
jmp
sbb
daa
call
inc
test
sbb
inc
mov
inc
mov
and
shll
push
pop
sbb
cmp
pushf
xchg
adc
sbb
rorl
outsb
hlt
insl
pop
lock
fsubl
mov
out
lcall
add
cmp
insb
mov
pop
adc
es
lahf
add
mov
mov
ss
mov
daa
sbb
ja
sub
mov
fistl
sub
mov
xor
sti
das
add
xor
pushw
mov
mov
push
push
jmp
sti
fldt
cli
mov
xor
ret
xor
inc
xchg
out
aad
and
clc
xchg
ljmp
leave
adc
mov
out
shlb
jecxz
ret
jmp
stc
pop
shrb
mov
in
scas
jb
add
or
or
jg
int3
mov
lcall
bound
test
jg
pushf
xchg
jnp
pop
mov
std
add
pop
mov
mov
repz
or
dec
imul
test
insl
xor
or
fistl
lret
ds
push
jno
jne
mov
imulb
iret
jb
pusha
popa
or
push
std
in
lods
cld
mov
mov
xchg
shl
cmp
xchg
sbb
popa
loope
bound
test
pop
jno
dec
das
sub
inc
mov
enter
pop
inc
leave
sub
cld
cmp
inc
insl
scas
inc
ret
adc
test
scas
adc
mov
gs
sbb
and
arpl
ret
mov
pop
shl
fs
push
add
fdivrs
inc
and
mov
sqrtps
movb
call
sub
les
jbe
fnsave
mov
sarb
aam
add
fwait
pop
scas
outsl
push
xlat
imul
add
sub
push
xchg
jae
in
xchg
xchg
sbb
stc
ret
pop
test
jb
js
jl
push
add
clc
add
ds
mov
push
or
adc
pusha
shl
rolb
in
ja
mov
xor
dec
lahf
subb
stos
inc
clc
cmp
lret
xchg
xor
pop
sbb
repz
lea
mov
push
jl
jmp
aam
in
divb
pop
dec
pop
push
out
fcomps
add
pop
icebp
cmpl
js
repnz
cmp
out
je
jl
adc
loop
mov
jne
jb
sbb
bound
xor
out
fs
jl
lods
jg
sub
inc
mov
ja
imul
js
xchg
mov
repnz
xor
jmp
lock
stos
mov
sbb
inc
xor
dec
cwtl
lret
sub
scas
add
mov
and
test
add
pop
jp
push
sahf
sbb
test
add
sbb
loope
lods
leave
out
jmp
cmp
mov
mov
and
inc
push
andl
ret
cmp
fs
ficoml
mov
mov
mov
mov
in
pop
scas
out
pop
xlat
jecxz
in
push
cmp
push
add
nop
mov
mov
xchg
cmp
outsb
mov
hlt
push
iret
out
mov
pop
inc
lret
je
pop
ret
decl
mov
cmp
ljmp
push
inc
sub
icebp
mov
int3
lds
aam
mov
xlat
push
push
xchg
pop
stc
or
or
cltd
cmpl
sub
push
rol
adc
in
cmpsb
pop
inc
ffree
nop
jl
aas
mov
lret
int3
adc
push
pop
ds
jbe,pn
ja
retw
mov
xchg
mov
dec
push
xor
pusha
jg
or
fidivrl
add
xchg
mov
fsubrl
es
fadds
out
jnp
mov
jb
jle
push
lock
bound
jge
push
push
mov
mov
mov
daa
roll
xchg
adc
pop
mov
push
push
cli
popa
dec
sbb
test
dec
xchg
lods
imul
sbb
aad
nop
aam
lds
inc
mov
std
xor
push
pop
pop
lea
jae
movsl
mov
cmpsl
jg
xchg
and
pop
iret
sbb
xlat
or
mov
in
mov
xor
pop
jle
scas
movsb
orl
push
inc
mov
dec
lods
adc
es
xchg
xchg
and
dec
mov
imul
repz
xor
sbb
or
push
test
mov
adc
incl
inc
cmp
pop
sbb
aam
test
mov
mov
xchg
push
dec
sbb
mov
outsl
ret
mov
fldl
movsl
xchg
dec
imull
sbb
dec
sbb
xchg
mov
inc
mov
pushf
mov
adc
dec
pop
iret
cmpsl
pop
jle
or
mov
sbb
dec
loop
and
in
adc
push
push
mov
xchg
or
cmp
jbe
out
mov
mov
and
xchg
jne
sbb
adc
xor
int
pop
pop
jbe
out
loopne
cmpsb
pop
jae
testl
cmpsb
flds
or
mov
fimull
test
adc
gs
mov
jo
push
add
cs
ret
push
outsb
rcr
pop
jne
jne
popf
movq
adc
inc
mov
fisubrs
add
push
rclb
test
ds
fsub
cmp
loope,pn
jns
mov
push
push
push
pop
mov
shl
pushf
in
daa
jns
xchg
or
repz
mov
pushf
aaa
cld
fstps
sub
out
shlb
sbb
pop
push
push
and
mov
mov
jbe
hlt
pushf
mov
add
es
add
mov
popa
aad
fdivs
test
int
imul
rcll
or
and
loopne
cmp
or
xor
sub
in
pushf
test
push
cld
cli
and
shrb
movsl
mov
xchg
imul
sbb
cld
mov
sbb
mov
fcoms
call
jnp
inc
push
mov
out
xlat
out
push
int3
push
in
lahf
adc
scas
in
inc
ds
incb
jo
mov
pop
popf
dec
mov
mov
add
and
fwait
add
rcrl
pusha
inc
lock
mov
enter
push
sub
loop
bound
aas
sub
jecxz
rep
aaa
repnz
ljmp
mov
int3
lock
sarl
aam
jle
jbe
addl
lcall
nop
lock
or
pushf
mov
mov
sti
xor
sti
push
mov
pop
hlt
enter
test
das
jg
fcmovnu
aas
aam
bound
adc
sub
pop
inc
aaa
int
std
in
or
iret
dec
xchg
xor
dec
rcl
divb
lea
iret
aad
pop
ds
xchg
int3
jg
fwait
leave
cmp
or
cltd
mov
dec
pop
jno
std
sbb
mov
mov
cmp
popa
test
or
xor
std
pop
in
mov
shrl
mov
mov
nop
jmp
pop
call
hlt
jle
out
jne
xlat
rcl
push
pushf
mov
jno
mov
cmp
lock
mov
and
notl
and
push
and
in
scas
jg
je
xor
fs
divb
dec
mov
popa
dec
inc
jbe
mov
mov
nop
fstpt
add
enter
mov
mov
mov
mov
popf
arpl
fucomp
mov
push
in
test
aad
das
mov
cmp
pop
add
jle
in
test
pop
cmp
js
cmp
cmp
lret
adc
xor
xorl
aaa
mov
sbb
in
xor
cwtl
mov
imul
push
xor
int3
push
stos
outsb
push
mov
sub
cld
ret
push
rep
stc
push
jp
mov
inc
sarl
dec
cmp
lods
push
loopne
pop
push
sbb
rclb
repnz
cwtl
pop
mov
iret
and
mov
scas
mov
mov
jne
sub
push
test
add
lahf
jae
movsl
push
push
xor
movsb
jl
pop
rorl
jb
dec
pop
aaa
jge
fisubrs
push
sbb
mov
scas
jmp
and
ds
pop
inc
in
xor
loopne
test
cli
mov
fcompp
or
lret
js
out
mov
adc
repnz
cmpsl
or
and
and
cmp
fstpt
mov
fistpll
push
js
jae
outsb
in
outsb
enter
and
sub
sbb
jno
cltd
sub
mov
mov
push
mov
dec
imul
mov
mov
jecxz
sub
sbb
pop
xor
mov
ret
ss
sub
push
xchg
les
sbb
dec
popf
cmp
mov
into
mov
or
jb
shr
in
aas
stos
sbb
lods
cmp
push
call
mov
shrl
inc
sub
sub
and
fcmovnb
mov
das
rclb
cmp
loop
pop
dec
scas
push
sub
clc
or
add
out
rcr
addb
jae
and
int3
mov
aad
rcrl
test
insl
and
pop
lahf
sub
mov
dec
xor
out
shll
jbe
mov
mov
enter
loopne
inc
loope
imul
sbb
adc
xor
jno
jecxz
sbb
sub
push
js
call
mov
jne
add
mov
imul
or
daa
enter
mov
sar
cmpb
and
jns
or
mov
dec
ret
adc
xor
xchg
mov
pop
ss
jl
icebp
in
jecxz
scas
repnz
sub
dec
cli
mov
aaa
xchg
and
jae
in
adc
andl
or
fadds
fnstsw
add
mov
jae
pop
and
inc
ret
jnp
jmp
fwait
repnz
push
add
int3
sbb
push
mov
pop
rcr
jecxz
cmp
popf
xor
rcrl
mov
stc
push
jae
jb
fistps
ret
xchg
pop
testb
cmpsl
fistl
pop
xchg
imul
aas
pushf
jl
int3
xchg
sti
or
stc
xchg
jne
stos
sbb
fcompl
jge
ja
in
mov
repnz
push
pushf
sbb
mov
pop
inc
inc
aam
push
xchg
or
ljmp
mov
sahf
cmp
mov
orb
xchg
sbb
xor
sti
orl
sar
sbb
rolb
xchg
lods
sub
xor
mov
fstpt
js
mov
in
push
pop
push
cld
or
dec
arpl
ffreep
into
xchg
outsl
pop
pop
xor
and
sbb
out
xchg
xchg
test
xchg
sbb
ja
mov
subl
mov
mulb
stos
stc
lret
hlt
je
mov
lahf
inc
pop
rcrb
xchg
incl
cmp
fisubrl
test
test
push
sbb
insb
daa
dec
dec
divl
and
shlb
outsb
xchg
jnp
push
scas
jbe
inc
sbb
flds
mov
mov
aam
lods
mov
push
enter
add
xchg
jae
in
sub
jecxz
cli
pop
mov
in
insb
enter
sub
mov
cmp
xchg
pop
jnp
xchg
push
repz
fadd
loop
mov
les
jbe
cmpsb
roll
push
cld
subb
push
out
xor
out
testl
out
sahf
dec
repz
mov
pop
jbe
pop
mov
sub
mov
jns
add
pop
std
aas
and
test
push
inc
pushf
lea
cmp
aas
adc
push
dec
inc
mov
js
dec
clc
out
jbe
push
icebp
sbb
or
pop
xchg
sarb
xchg
xchg
cmp
popa
mov
sub
roll
xchg
loop
dec
mov
cmpsb
mov
ret
sub
sbb
dec
hlt
adc
sbb
mov
mov
mov
fdivs
pop
mov
nop
xchg
jmp
add
xchg
ja
rcrl
scas
mov
mov
mov
pop
int3
push
dec
leave
shl
call
addl
cmpsl
mov
and
jb
dec
and
pop
mov
push
popf
pop
adc
test
out
mov
or
push
and
mov
mov
push
add
cmp
daa
sub
dec
or
loop
out
sbb
enter
inc
xlat
clc
fidivrs
ret
scas
movsl
iret
into
test
in
inc
adc
sub
lcall
or
sub
cmp
test
fisubrs
mov
inc
test
xchg
insl
xor
mov
mov
fisttpl
pop
divb
mov
mov
mov
mov
sbb
push
or
fbld
js
adc
dec
jmp
adc
mov
inc
jno
push
mov
and
test
pop
xchg
jb
sar
dec
cmp
and
xor
pop
and
mov
loope
xor
insl
mov
xlat
jbe
js
inc
and
pop
mov
sbb
imulb
dec
mov
movsl
add
cli
jecxz
dec
int
inc
inc
int
in
adc
fsubrs
rcrl
movsl
cmp
insb
dec
sub
movsl
bound
enter
fdivp
xor
mov
icebp
test
xor
and
out
inc
dec
jp
xor
push
lds
add
lret
inc
xchg
add
scas
lret
sbb
shll
sub
add
and
ja
jmp
xlat
ret
bound
xchg
jbe
cmp
inc
mov
aas
sbbb
je
fidivl
push
test
and
subl
stos
ret
stos
sub
mov
jbe
mov
fcomps
out
dec
fdivrs
das
xchg
pavgw
fnsave
addr16
aad
or
jnp
jle
aam
std
inc
sti
jl
jl
insl
out
jl
jecxz
jecxz
popf
imul
das
push
lods
xchg
nop
xchg
stc
mov
adc
sbb
outsb
popa
mov
jne
xor
inc
mov
add
cli
pop
mov
adc
xor
and
jb
movsl
jge
sbb
ja
and
mov
dec
les
xchg
movsl
and
movsl
cmp
jns
and
push
lods
addr16
lea
inc
jnp
push
xchg
dec
movsb
inc
das
divb
push
adc
push
test
rcll
bound
iret
lret
aad
and
sbb
movsb
scas
sub
mov
gs
cmp
xchg
popa
xor
mov
outsb
enter
push
sbb
add
cltd
orb
addl
repnz
jmp
cmp
xchg
inc
pusha
add
sahf
pop
xor
in
loop
lahf
push
movsb
pop
jae
sahf
aam
fadd
fildl
js
sub
fimull
adc
mov
dec
pushl
stos
cmp
push
sbb
adc
pusha
imul
cld
je
repz
cmp
outsb
push
push
iret
pop
xchg
add
adc
les
test
pop
lods
dec
dec
std
xchg
popa
in
sub
daa
mov
sub
mov
je
cmp
lea
stc
fs
sarb
aad
adc
jge
sbb
clc
sbb
mov
stc
pop
imul
xor
pop
out
fildll
inc
sbb
in
mov
loope
je
gs
fidivrs
add
outsl
dec
loope
sahf
or
fwait
leave
push
scas
mov
fstpt
test
sbb
mov
pop
and
push
mov
ljmp
jge
roll
and
pop
dec
fcoml
xchg
push
pop
jle
xor
loopne
paddd
nop
stc
in
daa
xor
cwtl
jno
outsb
pop
or
les
int3
cmp
sti
clc
cmp
stos
das
aas
jnp
test
test
xor
xor
xor
dec
cli
jns
push
mov
imul
adc
hlt
fwait
lea
mov
adc
jae
inc
and
aaa
sub
cwtl
or
or
insl
int3
outsl
leave
out
or
mov
push
ret
mov
mov
push
jns
mov
or
stos
aam
sti
cs
in
pop
xchg
jp
stos
inc
xchg
jns
aas
xor
sbb
fisttpll
dec
jo
imul
add
shrb
dec
dec
hlt
subb
or
sbb
jecxz
inc
and
cmp
js
push
jae
jecxz
sbb
cs
fcmovne
repz
repnz
dec
cli
fnstcw
mov
aam
push
adc
add
pop
mov
xor
arpl
push
dec
xlat
iret
push
inc
and
mov
inc
mov
push
lods
mov
push
test
mov
sub
push
jmp
xor
outsl
dec
rolb
cmp
sbb
push
jns
gs
stos
bound
adc
out
cmp
mov
ds
aam
loop
ja
mov
sbb
inc
lahf
repnz
xor
pop
lds
imul
lds
cmp
xor
mov
int3
xchg
aad
and
cmp
mov
or
arpl
scas
dec
xchg
mov
xor
popf
xor
sbb
std
jns
daa
in
je
sbb
inc
push
jo
jmp
pop
mov
neg
pushf
repnz
sbb
cmc
in
jno
inc
xor
jo
mov
movsl
pop
pop
repz
pop
push
sbb
repz
outsb
pop
cmp
pop
cld
iret
inc
lcall
dec
int
scas
pop
push
arpl
outsb
out
mov
outsb
repnz
xchg
mul
sub
push
dec
imul
push
cmp
fsubr
or
xor
xchg
test
arpl
push
call
loop,pt
adc
insl
add
lret
inc
sbb
pop
pusha
cmp
jo
jbe
cmp
push
sbb
dec
out
mov
pop
ljmp
dec
push
repnz
sub
and
push
fs
xor
sbb
add
ret
fistpll
aad
sbb
gs
enter
in
jae
jb
mov
loopne
aaa
ficoms
fwait
out
das
das
pop
out
dec
rorb
sbb
iret
cwtl
inc
mov
scas
movsb
lock
daa
push
aad
imull
sbb
xchg
test
add
dec
out
jmp
push
fstpl
ss
rolb
jbe
dec
mov
mov
adc
stos
mov
pop
loope
lea
push
les
inc
mov
xor
fcmovb
jno
mov
stos
cwtl
imul
in
mov
jge
or
pushf
out
fmuls
sbb
mov
sbb
lods
inc
ss
fidivs
add
mov
imul
mov
xchg
movsb
jnp
inc
popa
mov
pop
icebp
cmp
lea
les
lock
out
adcl
ss
xchg
popa
jbe
pop
stos
lds
scas
mov
add
push
add
push
sbb
add
les
loope
dec
xor
scas
adc
dec
popf
sti
push
inc
cmp
push
pushf
sahf
and
jbe
sub
mov
iret
mov
aas
or
popf
sub
and
dec
fildll
inc
shl
sub
pushf
pop
subb
outsl
shll
inc
mov
cmp
imul
sbbb
xchg
push
cs
int3
lret
lret
xchg
sub
shl
rorb
in
fisubrl
and
inc
lods
push
xor
cmpsb
mov
popf
test
sbb
scas
bound
pusha
fimuls
mov
aam
cmp
out
fists
repz
pop
or
jg
jo
jmp
xor
ret
pop
out
sbb
in
shlb
setno
jnp
sbb
push
std
adc
icebp
mov
loop
fiadds
ds
sahf
push
add
cli
sbb
jp
xchg
hlt
sub
mov
jl
icebp
xchg
andb
pop
pop
jl
jecxz
mov
imul
test
dec
aad
mov
ja
sti
jge
mov
icebp
push
mov
jae
jbe
adcl
xchg
sub
or
negb
enter
sbb
pop
loope
mov
adc
dec
jne
xchg
call
popf
mov
push
or
aas
movaps
cmp
repz
inc
inc
imul
add
sbb
insl
lods
cmp
xchg
xchg
enter
std
rcrb
jp
jmp
or
xchg
mov
mov
repnz
mov
dec
jno
outsb
shll
test
pop
mov
add
andb
and
adc
xchg
dec
push
lret
jne
scas
js
in
inc
jle
inc
das
pop
cmp
cld
xor
xchg
mov
lret
lods
jle
mov
sub
addr16
or
lahf
mov
mov
mov
jae
mov
ss
ret
jge
imull
fwait
lea
shl
jle
in
xlat
loop
roll
bound
sbb
jo
xor
cmpsb
jmp
pop
shll
mov
jnp
mov
ret
sarb
sbb
es
sahf
xchg
mov
cmp
xchg
xor
push
sbb
imul
adc
out
add
popa
and
mull
cmp
jmp
jbe
shr
push
jmp
ljmp
xor
inc
and
sub
aad
shll
jmp
out
adc
pop
cltd
adc
push
data16
sbb
and
pop
test
lock
bswap
sub
fsts
scas
mov
jns
or
sub
jmp
aaa
sub
std
loop
cmp
lock
rcrb
addb
mov
mov
inc
xor
mov
push
cmp
and
lret
cmpsb
xlat
add
add
cld
jnp
mov
mull
out
subb
sarb
vmaxsd
popf
addr16
stos
mov
inc
stos
aam
test
xor
and
subl
or
sbb
and
sub
xorl
push
enter
adc
dec
pop
out
xlat
popa
push
outsb
scas
bound
out
pop
flds
add
cmp
ret
push
jg
dec
cmp
sub
push
sbbb
cmp
fildl
clc
pop
call
ror
pop
xchg
pop
nop
mov
sub
aad
rcrl
mov
mov
jle
lcall
push
fisttpll
pop
inc
mov
insl
mov
jle
insl
loope
push
sbb
cmp
in
or
jae
jg
cmp
push
and
sti
pushl
into
jbe
aad
ficompl
in
push
xchg
leave
inc
fdivrs
or
cld
mov
lahf
lret
mov
push
dec
sbb
int3
pop
repnz
scas
pop
sti
add
nop
jp
xor
pop
pop
arpl
imul
mov
out
jecxz
inc
mov
in
push
push
or
add
test
faddl
mov
lock
inc
movsb
ljmp
aaa
cli
cmp
outsl
add
mov
sub
mov
bound
out
pushf
fstps
push
in
roll
in
mov
xchg
mov
sbb
aaa
inc
fimull
add
mov
xlat
jnp
fwait
cli
test
in
push
cs
dec
cmp
imul
inc
cmp
ss
loopne
xchg
xchg
lods
mov
hlt
push
or
sub
jb
leave
lahf
pop
push
sub
cmp
inc
mov
stc
out
xor
popa
xorl
sub
stos
pop
xchg
pop
inc
imul
ss
push
mov
mov
stc
jge
xor
push
psubsw
ja
lods
or
mov
cli
mov
add
inc
ret
test
stos
add
cltd
fldcw
xchg
inc
clc
orb
dec
icebp
mov
and
xchg
mov
jae
stos
jbe
adc
iret
out
fidivrl
pop
push
sahf
js
nop
ret
popf
testl
lcall
add
sbb
mov
ja
loop
sbbl
fcompl
xor
stos
add
pop
mov
cmc
lea
mov
adc
test
notl
cld
cltd
jl
dec
xor
stos
jnp
sbb
adc
scas
shrb
cmp
push
arpl
aas
sbb
outsl
mov
xchg
mov
xchg
sub
xchg
rclb
cmp
pop
outsb
test
es
jns
rcr
test
imul
pusha
cmc
jmp
ret
setb
jne
xor
lea
lods
stos
lcall
repz
in
jle
cmp
fneni(8087
faddl
sub
cmp
pop
scas
aas
jne
rorb
jmp
cltd
push
push
nop
pop
arpl
cmc
xor
into
loope
das
inc
jmp
lods
cmp
dec
loop
mov
jmp
lods
dec
dec
inc
loopne
pushf
imull
mov
or
pop
push
rol
push
cwtl
mov
cmp
pop
push
xchg
xchg
ds
mov
pop
xchg
and
jmp
sarb
pop
faddl
pop
in
cld
daa
sbb
fmul
scas
mov
or
or
testl
or
imul
pop
mov
ficomps
popf
in
mov
mov
inc
shlb
mov
sbbl
lds
int
testl
push
or
inc
lret
pop
push
icebp
enter
or
mov
dec
cmp
mov
mov
stc
ficoms
sub
pop
iret
xlat
scas
cmp
pop
mov
mov
pop
sbb
jl
lock
aas
mov
jmp
adc
outsl
xor
adc
push
pop
push
int3
xor
jmp
dec
jl
add
scas
push
pop
push
outsb
in
mov
daa
movsb
adc
leave
cltd
pop
mov
mov
leave
popf
fdivrs
loopne
into
mov
cmp
cli
daa
fadd
xchg
or
addl
icebp
dec
in
pop
xor
pushf
hlt
add
jb
jp
adc
adc
repz
mov
dec
jo
adc
mov
push
pop
xchg
out
stos
and
add
std
mov
stos
add
push
nop
adc
sti
add
push
xor
imul
stos
push
fidivl
sub
clc
adc
add
sahf
mov
jle
movsl
scas
xor
xor
add
bnd
int
cld
lea
or
and
cli
inc
dec
sti
inc
shrb
js
fs
jl
js
mov
mov
cld
xor
push
sbb
add
sub
mov
dec
into
xor
jo
movsb
mov
out
je
aad
and
mov
daa
mov
dec
xor
enter
dec
ljmp
shll
jg
pusha
mov
or
push
jecxz
jp
imul
ja
lcall
test
push
sbb
mov
inc
cmpb
pop
orb
rcrl
mull
mov
sub
xor
faddp
ficoms
and
addr16
iret
xchg
xchg
or
xorb
hlt
inc
xor
adc
test
pop
stos
add
cwtl
lea
lds
pop
fsts
int
in
movsb
jb
shr
enter
adc
cmp
lret
fmul
mov
int3
add
pop
sbb
ret
jne
sbb
mov
sti
pushf
outsl
shll
jge
push
outsl
addl
sbb
pop
outsb
lea
sbb
sbb
cmp
imul
fnstenv
mov
test
push
push
movsl
or
cltd
jge
jecxz
mov
push
popa
jnp
stc
scas
outsl
jbe
dec
movsl
adc
push
shrd
inc
pop
jge
fidivl
mov
sbb
in
fistps
nop
and
sbb
mov
xor
mov
xlat
dec
in
xlat
mov
cmp
aam
shlb
repz
daa
je
push
push
testb
sbb
push
push
aad
in
and
arpl
adc
xor
sbbb
pushf
mov
rcrl
push
mov
out
dec
sbb
imul
pushf
add
mov
sahf
outsl
daa
push
sbb
mov
mov
jecxz
cmp
pusha
cld
cmpsl
outsl
aad
mov
push
fs
test
mov
mov
ds
sbb
inc
out
pop
ljmp
shlb
adc
mov
bound
jno
out
jg
mov
mov
lea
pop
pop
addr16
incl
icebp
addr16
sbb
out
sbb
sub
gs
inc
or
cmpsb
addr16
sub
adc
stos
daa
dec
dec
cwtl
jae
xlat
jg
inc
sub
arpl
sarb
push
add
pop
test
jl
lret
jle
push
fiaddl
dec
stc
das
inc
push
sub
into
xchg
jne
repnz
mov
push
jb
or
push
pusha
jne
stos
pop
inc
cmp
pop
cs
push
idiv
fldl
mov
sbb
enter
sti
mov
fildl
cmpsl
jnp
mov
inc
shlb
or
dec
movsl
aas
bound
add
out
mov
lods
xchg
repnz
int
xor
mov
das
adc
scas
jmp
adc
lods
dec
adc
pusha
fcoml
jecxz
cld
cwtl
fsubrs
hlt
ja
pop
fs
adc
iret
cmc
dec
jo
pop
addr16
stc
cwtl
mov
ja
ljmp
dec
xchg
and
pop
xchg
es
arpl
jl
std
jge
dec
movsl
cmp
dec
xchg
movsl
cs
push
out
xorl
sbb
add
adc
mov
inc
in
adc
movsb
and
adc
in
dec
aaa
dec
jne
mov
xchg
push
push
or
or
in
out
jmp
clc
int3
push
xlat
lret
popa
jg
pop
or
daa
and
inc
mov
cmp
inc
stos
data16
ret
adc
shrb
push
or
fistpl
mov
and
int
inc
das
scas
ja
cltd
cmpsb
ja
in
mov
adc
jge
inc
inc
pop
mov
mov
aas
sarl
push
mov
push
jns
dec
out
or
sahf
aad
sbb
add
jne
loopne
shlb
jp
cld
neg
lds
std
cltd
mov
xchg
clc
push
jb
testl
repz
les
popa
dec
fwait
outsl
sub
int3
sti
pop
iret
addr16
inc
testl
jno
and
lods
mov
mov
mov
rol
mov
fs
data16
jbe
jnp
pop
fists
mov
sub
jns
xchg
and
pop
xor
popf
mov
cmpsl
xchg
adc
loop
and
inc
out
push
mov
jb
jg
cs
sub
inc
aam
dec
pop
sbb
inc
clc
xor
mov
pop
xor
sub
dec
outsb
push
inc
fs
gs
int3
jno
in
int3
movsb
cmp
mov
insb
mov
cmpsb
add
fidivs
adc
dec
pop
fidivrl
or
xchg
adc
pop
fidivrs
push
pop
lret
clc
inc
cmpsl
mov
pop
int3
xchg
mov
les
call
jl
and
ja
sbb
cmp
sub
push
pop
xchg
inc
jmp
sbb
push
pop
jne
ja
roll
add
push
es
out
out
cli
jns
pop
arpl
pop
adc
xchg
movsb
jnp
orl
loopne
shlb
fcomps
xchg
in
std
push
jnp
cmpsb
hlt
call
jp
jg
sub
arpl
int
jp
push
fmulp
roll
es
ret
lret
aam
push
jp
fistl
cmc
xor
xchg
sti
jle
sub
mov
sbb
cld
out
cmp
xor
cmp
cwtl
scas
pop
inc
and
ss
cmp
push
mov
int
pop
jl
mov
sbb
stos
fsubl
pop
cmc
mov
adcl
sbb
repnz
shr
mov
scas
popa
in
push
add
cmp
rcr
inc
test
cmpsb
mov
lods
ja
stos
ret
lret
fstps
idivb
xchg
push
pop
push
adc
cmpsl
sti
xor
test
pop
hlt
shll
xchg
pop
and
imul
popa
lahf
jnp
and
mov
xor
ss
loope
fdiv
mov
pushf
adc
shl
cmp
scas
lret
sub
jne
mov
mov
push
movsb
aad
daa
jmp
sub
add
addb
add
or
cmp
ret
mov
xchg
lods
movsl
and
and
dec
jecxz
sar
rcr
or
gs
gs
mov
ret
sti
mov
inc
sbb
test
jge
inc
pop
insl
mov
sti
clc
aas
pop
aaa
es
mov
jno
scas
adc
add
add
mov
mov
sub
out
xor
mov
add
xchg
or
ljmp
xor
push
sbb
or
test
loopne
adc
xor
push
jg
test
cwtl
push
xor
pop
pop
push
insb
cwtl
data16
popa
ljmp
test
mov
mov
outsb
cltd
adc
rclb
mov
jo
mov
cmp
jp
popa
std
sub
jmp
mov
add
xor
adc
xor
aam
jne
jmp
mov
push
movsb
icebp
jne
enter
mov
dec
and
mov
and
mov
sti
mov
jecxz
and
jecxz
imul
lahf
imul
imul
add
cwtl
mov
pop
mov
dec
fcmovne
movsl
and
sub
push
in
jmp
mov
and
or
jo
dec
push
jae
adc
sti
scas
jae
popf
out
ljmp
or
sti
inc
ja
aaa
mov
roll
xor
pop
pop
fimull
int
insl
jmp
push
mov
inc
inc
jl
lock
sbb
cmp
lret
call
bound
pop
cs
movsb
in
and
cmp
in
jae
and
sub
ds
ficompl
loopne
xor
int3
jge
call
bound
sti
test
in
aam
mov
outsl
inc
ffree
xor
and
pop
pushf
js
push
mov
clc
or
cltd
pop
test
lods
jg
pop
mov
mov
lcall
inc
out
mov
mov
les
cmp
in
shl
jae
adc
mov
roll
cmpl
xchg
mov
cwtl
inc
stc
jnp
movsb
pop
inc
jg
test
es
stc
push
aam
hlt
pop
orb
sbb
and
fcoml
jmp
jmp
push
xchg
push
mov
out
inc
mov
xor
and
add
mov
sub
xchg
aaa
mov
sub
and
mov
nop
sub
xor
push
and
sbb
mov
adc
fs
fs
mov
add
shl
out
jecxz
pop
mov
in
dec
sbb
xor
inc
lods
adc
xchg
and
jecxz
sarl
and
jl
xor
cmpsl
pusha
daa
lods
mov
dec
jle
jmp
mov
jae
mov
popf
dec
int3
mov
negl
js
std
adc
cmc
dec
sub
push
inc
scas
fbld
push
cmp
ds
pop
lret
clc
filds
in
sbb
cmp
mov
lret
mov
cmpsb
xor
imul
or
cmc
adc
mov
cmc
pop
lds
jns
push
je
fwait
lret
cwtl
nop
sbb
xchg
xchg
out
cmp
rorb
xchg
ret
repz
insl
jmp
and
mov
fdivs
gs
sub
and
dec
iret
scas
xchg
push
cltd
pop
rorb
divl
jb
pop
and
sub
xchg
nop
loope
add
mov
enter
mov
jge
mov
pop
push
inc
gs
or
mov
aaa
jl
incb
and
loop
push
arpl
fmuls
mov
fdivs
add
jge
andl
push
movsb
lods
add
fistpl
out
vmread
dec
sub
xor
add
mov
jge
inc
jecxz
stos
or
jmp
das
sub
mov
adc
clc
or
popa
ret
movsb
cmp
xor
pop
loope
ss
cmpsl
mov
pop
mov
add
call
mov
dec
bound
mov
jo
jnp
ficomps
ds
out
push
sbbb
mov
adc
ss
jno
loope
lret
adc
das
mov
add
dec
imul
lods
shl
push
dec
mov
mov
xor
aam
cmp
repz
faddl
repnz
add
pop
adc
subb
fdivrp
dec
sub
shrb
sbb
xchg
movsl
in
nop
jg
dec
rcrl
cmp
iret
add
pop
jo
in
sub
pop
rol
cwtl
mov
push
iret
adc
lahf
dec
pop
gs
and
roll
out
mov
or
jecxz
into
dec
int3
dec
and
sbb
lcall
sti
and
sbb
loop
outsl
rcr
aaa
mov
or
pmulhuw
dec
shrl
push
dec
or
imul
add
shr
lret
in
es
imul
outsb
ret
mov
and
test
sub
add
cmp
mov
cmpsl
xchg
jecxz,pn
and
pop
jge
aas
push
sub
arpl
loope
stos
mov
sti
pop
and
outsl
xchg
inc
imul
out
out
pop
xchg
add
mov
jl
inc
sbb
mov
test
sub
lock
pop
mov
insl
aam
cmc
repnz
sahf
pop
lock
lods
dec
dec
sahf
hlt
dec
lods
mull
lods
hlt
push
dec
mov
je
out
mov
into
fcompl
sti
mov
sbb
add
dec
adc
shr
or
dec
sbbl
sbb
icebp
pop
xchg
js
addr16
aad
push
and
cld
sub
clc
stos
adc
push
push
sbb
jle
mov
xchg
pop
sbb
sub
jo
adc
stos
mov
or
clc
out
sbb
push
pusha
sbb
pop
adc
lods
ds
fcoms
xor
rcrb
arpl
gs
iret
sub
inc
dec
sbb
jl
fwait
mov
push
xor
xchg
sbb
adc
shlb
mov
mov
loopne
mov
mov
xchg
fs
in
add
outsl
and
daa
jae
in
dec
dec
inc
jnp
mov
es
daa
add
stos
mov
inc
add
cli
sub
mov
in
mov
xchg
sbb
pop
popf
sbb
xchg
rclb
notl
dec
cmc
sub
inc
xchg
testl
jl
push
inc
push
invd
fidivrl
mov
imul
imul
outsb
and
cmp
dec
or
test
cld
ficompl
jp
shl
rcrl
adc
inc
ret
out
fildll
cli
jp
mov
fs
cmp
adc
cwtl
mov
or
enter
xchg
cmp
imull
andl
pop
mov
idivl
aad
xchg
mov
or
scas
pop
es
rorb
push
jo
std
sub
sahf
add
fwait
dec
lret
mov
mov
testb
jp
call
in
xlat
inc
dec
sub
xor
cmp
daa
cmp
jb
loop
cmpsl
inc
jnp
ljmp
mov
jae
xor
jae
cmp
push
add
iret
aas
fstpt
cmp
pop
cmp
and
mov
xor
lcall
jmp
test
sbb
scas
test
jae
push
pop
loope
mov
xchg
push
jp
mov
jnp
fcom
xchg
add
push
mov
pop
out
mov
subb
outsb
es
push
xor
xor
movsl
std
add
out
xchg
popf
rclb
inc
int3
in
adc
dec
jns
xchg
stc
push
or
repz
jecxz
jo
jno
push
pop
push
sbb
push
arpl
mov
xchg
mov
into
pop
sbb
jae
loop
fsubs
rorl
inc
rorb
dec
lock
leave
mov
js
xor
mov
or
into
push
xor
push
pusha
lock
fxch
cld
in
outsb
mov
add
jns
jno
ds
mov
sub
movsl
into
or
or
xor
mov
jns
cld
cld
rorb
addr16
into
pushf
adc
pop
push
dec
push
mov
push
mov
mov
push
add
dec
data16
xor
mov
mov
sbb
stos
and
push
lret
lea
insl
mov
test
popl
lock
xor
dec
mov
mov
cmp
lret
pusha
fs
ljmp
add
push
fwait
insb
cmp
test
fwait
loopne
dec
push
pop
cmp
cld
loope
jle
push
jle
adc
daa
mov
sbb
xchg
rolb
loope
out
add
sbb
push
xchg
mov
pop
ss
push
into
mov
clc
cwtl
les
mov
out
imul
mov
aas
xchg
push
loop
sub
xchg
inc
aam
cmpsb
outsb
je
push
dec
pop
ss
sahf
icebp
push
push
mov
push
daa
enter
shrb
adc
push
ljmp
arpl
rorb
lret
ds
push
movsb
xchg
nop
ss
dec
xchg
sbb
in
lcall
ljmp
call
push
or
lods
mov
cmpsl
jnp
inc
mov
je
jl
js,pt
and
cltd
mov
xchg
ds
in
rclb
fcmovbe
fsubr
test
ljmp
cltd
ds
data16
imul
test
dec
loope
pop
and
dec
and
push
xor
dec
xorl
popa
outsb
inc
jbe
dec
scas
aaa
int
notl
pop
mov
cs
sbbb
add
popa
repz
sbb
pop
shll
mov
jne
pop
dec
es
fisttpll
lcall
mov
cmc
mov
cmp
andb
fwait
or
test
mov
sbb
mov
and
ret
mov
movsb
int
inc
jge
leave
sub
push
mov
testb
aad
insb
push
inc
add
fsubs
test
and
andb
loop
mov
mov
cld
outsl
sarl
std
xor
cs
das
push
movsb
add
jl
mov
insb
cmp
or
xor
cwtl
sub
nop
stos
ljmp
adc
icebp
inc
andl
adc
sub
mov
bound
jo
adc
mov
and
or
jl
ljmp
inc
pop
inc
jecxz
mov
xchg
das
add
fisubrs
mov
mov
push
fsubs
cli
xor
xor
es
lods
lock
das
jno
dec
loope
jg
push
or
aas
out
add
xchg
lods
add
xor
xor
mov
ss
popa
clc
pop
fdivl
pop
jge
int3
xchg
mov
aas
cmp
push
push
adcb
test
pushf
mov
push
push
push
pop
xchg
cmp
clc
dec
scas
lahf
cmp
faddl
dec
repnz
add
sub
push
repz
xchg
fs
lret
inc
repz
sub
mov
jbe
daa
adc
jp
pushf
fwait
daa
bound
mov
sbb
rcl
in
inc
push
and
jbe
stos
pushf
mov
fisttpl
mov
cmp
xor
mov
xchg
shlb
or
fcoms
insb
dec
mov
faddp
movsl
lea
add
mov
pop
pop
es
cltd
ja
mov
pushf
cmp
mov
sub
mov
mov
pop
mov
push
jg
int3
cmp
inc
push
inc
les
idivb
jge
push
lahf
and
sbb
dec
repz
test
repnz
jp
lret
jmp
and
push
push
fidivrl
sbb
cld
mov
ss
cs
fstl
das
sub
xor
xchg
repnz
pop
std
mov
cli
xlat
vcvtps2pd
dec
jmp
push
mov
out
adc
jno
into
in
adc
cmp
jns
outsl
jecxz
cmpsl
aas
pop
adc
movsb
lods
cs
or
sahf
xor
xor
or
idivb
mov
clc
inc
in
cmp
push
pop
mov
xchg
ja
dec
jmp
cmpb
fisubrl
sub
les
add
lahf
aam
loop
xchg
jg
push
pop
lock
dec
dec
lcall
mov
pop
in
daa
sbb
mov
inc
gs
xchg
cld
loop
jmp
and
popf
xchg
nop
arpl
enter
cmpb
jg
jb
fstpl
pop
clc
pop
pop
pop
mov
dec
adc
test
jno
test
ret
xchg
mov
test
sbb
xchg
loopne
xlat
enter
mov
dec
push
cmp
push
ja
add
das
mov
stos
lds
mov
in
jne
rcrb
in
xchg
inc
mov
dec
inc
icebp
jmp
pop
cmp
mov
cmp
inc
mov
dec
dec
xchg
jecxz
ret
mov
push
pop
jmp
test
cmpsl
inc
fistpl
sub
ret
lea
sbb
xor
cmp
cmp
and
mov
jb
popf
and
les
popa
cli
push
jmp
pop
stos
jge
mov
sub
or
rorl
popf
mov
ss
es
jge
sbb
fnstenv
xlat
xor
stos
movsb
adc
adc
mov
mov
add
xchg
cli
jg
imul
data16
pop
ds
mov
jmp
or
clc
lret
nop
cmp
cmc
test
adc
pop
xor
nop
sub
xor
add
imull
cmp
cmp
sahf
adc
add
cmpl
adc
imulb
xchg
cmp
add
ds
mov
xor
mov
scas
loopne
and
sub
scas
cmp
push
ret
in
mov
xor
cwtl
aas
jbe
loopne
pop
addw
pop
roll
shlb
outsb
push
in
xchg
sub
dec
dec
push
inc
mov
in
das
cmp
jbe
iret
mov
sub
repnz
mov
stos
mov
push
add
dec
es
jns
mov
sbb
sub
test
out
jnp
ret
int
sahf
xchg
push
cmp
inc
dec
sahf
adc
lahf
pusha
push
sub
cmpsb
sbb
xchg
jmp
xchg
jae
dec
les
add
mov
sbb
imulb
icebp
fwait
mov
and
jle
sarl
cmpsl
in
xlat
ret
imul
fisubrl
push
push
mov
pusha
jg
rol
or
je
mov
in
jmp
push
cs
or
out
insl
xchg
or
daa
sbb
and
jg
cmc
xchg
inc
ja
lret
push
scas
sub
xchg
adc
idivl
pop
loopne
sbb
loope
vpmullw
mov
sub
imul
mov
jb
mov
test
and
sub
cmp
jl
mov
adc
icebp
cmpsb
add
mov
add
fisubl
cld
mov
das
in
insl
or
inc
sub
out
int
mov
jle
pop
sub
xor
lahf
out
jne
aam
rcrl
lret
and
sbb
scas
aas
test
mov
adcb
popf
xchg
xchg
pop
mov
cmp
pop
xchg
add
sbb
test
push
jmp
movsb
inc
leave
sti
mov
outsl
dec
imul
test
test
imul
xor
loope
lcall
cmp
and
fstp
ret
jg
sub
sbb
xor
sbb
cwtl
dec
push
pop
es
or
cmp
sub
lea
sbb
adc
std
sbb
clc
adc
ds
into
insb
stc
and
lret
scas
pushf
xor
test
pop
jg
pop
sub
dec
cmpsb
adc
call
lret
stc
or
cwtl
cmp
pushf
and
insl
movsl
jp
xchg
xchg
cli
clc
shrl
mov
test
jno
sbb
scas
rclb
or
clc
sbb
stos
out
jo
jecxz
xchg
stos
jnp
xchg
gs
or
and
inc
push
push
dec
into
mov
or
outsl
sahf
repz
out
mov
jmp
push
or
jge
fbld
pop
ljmp
stos
cmp
js
aaa
in
xor
sub
cmp
nop
pop
rcr
insl
xor
aam
push
or
jecxz
lahf
sti
push
pushf
lret
jo
lcall
pop
sti
pop
and
dec
addr16
in
xchg
insb
dec
mov
jp
mov
xor
jbe
adc
ret
clc
scas
mov
lcall
sti
loope
decb
repnz
cld
ljmp
jo
mov
shlb
cmc
mov
mov
jle
inc
xchg
xchg
add
iret
aas
xor
mov
push
xlat
pop
adc
sbb
xchg
lret
loope
decl
popf
ds
add
out
cmp
iret
mov
and
fldt
dec
lcall
dec
lcall
xor
inc
notb
imul
xchg
int
pop
ret
or
enter
push
fcompl
mov
push
pop
loopne
mov
cmp
sbb
js
xchg
inc
repnz
inc
jo
and
cmpsl
subl
jg
sarb
fldl
ds
fstps
cmpsb
hlt
dec
gs
mov
push
in
test
in
in
out
js
pop
pop
jno
cmp
aam
mov
lahf
cmpsl
bound
arpl
fwait
mov
add
ljmp
mov
fs
mov
push
mov
xlat
fistps
xchg
cwtl
cwtl
push
lods
ret
jecxz
aad
adc
adc
mov
push
in
rorb
dec
ror
scas
ficoms
mov
cmp
push
ja
cmp
iret
ret
cs
out
mov
loope
dec
fstpt
sub
sbb
fnstcw
or
lock
jne
call
sarb
les
mov
int
rcr
jbe
loopne
iret
xor
in
lret
cmp
out
mov
enter
lds
scas
imul
push
ss
push
hlt
dec
adc
cmc
add
pop
dec
dec
and
sub
pop
pop
sahf
add
sbb
jb
shlb
pop
ficompl
xchg
leave
fcmovnbe
outsb
out
cvtdq2ps
clc
icebp
sub
jmp
in
sub
repz
cmpsb
adc
adc
movsl
push
and
ja
sbb
adc
xor
mov
es
hlt
or
repz
aam
dec
imul
lea
pusha
xorb
aad
std
cmp
cli
xor
xchg
mov
lea
jno
sub
adc
xrstors
hlt
mov
fmuls
adc
es
cld
into
push
repnz
out
jmp
sbb
cmpsl
mov
push
sti
out
add
ret
faddl
idivb
enter
cmp
xchg
outsl
sub
rorb
test
daa
cltd
cmc
js
outsb
cmpsb
fisttpll
arpl
pop
mov
jecxz
push
mov
ss
jmp
les
loopne
das
and
mov
out
bnd
push
stos
sarl
or
mov
and
mov
add
add
pusha
jo
hlt
mov
int3
fcmovne
rcll
mov
and
xchg
sbb
or
mov
jns
inc
out
popf
add
icebp
ret
test
xor
jbe
aaa
je
add
test
cmpsl
cltd
cmp
and
cld
mov
inc
jbe
repnz
cld
inc
mov
push
pop
test
jmp
lods
subl
lahf
les
xlat
std
cmp
aas
out
mov
sbb
and
icebp
loope
roll
adc
adc
rcrl
arpl
in
repnz
fdivr
pop
adc
xor
adc
mov
loopne
ficoml
ja
push
mov
fsubl
mov
push
addb
cltd
mov
lods
xor
cmc
lods
cmp
xchg
movsb
pop
jne
test
bound
sbb
sbb
into
outsl
mov
pushf
xor
idivb
cli
and
ds
outsb
loopne
add
or
aam
das
xchg
test
ljmp
pop
es
sub
dec
arpl
das
iret
das
mov
sbb
scas
ret
insl
call
mov
mov
dec
stc
hlt
mov
mov
fldenv
lret
flds
loope
mov
sbb
bound
xchg
hlt
lea
ss
push
popl
loop
and
mov
and
jmp
inc
fs
or
lret
xor
andl
jmp
jge
jge
and
pushf
scas
lret
popa
mov
add
push
cmpsb
ja
cli
sub
inc
fsubr
testl
shlb
adc
xchg
push
pop
hlt
mov
aad
cmpsl
mov
xchg
sbb
or
outsl
push
and
faddl
out
popa
enter
jns
mov
add
sbb
popa
dec
ret
pop
ja
jo
push
push
cmp
dec
inc
nop
enter
add
jmp
jmp
sbb
cltd
cmpsb
lods
orb
in
js
mov
jecxz
push
lods
dec
cmp
ljmp
or
mov
rcl
rclb
in
shl
pushaw
sub
push
or
cmp
cmp
call
push
sbb
daa
cs
loop
sarb
adc
dec
push
lahf
and
add
jno
int3
mov
inc
les
adcb
and
mov
mov
inc
aaa
and
sahf
sub
inc
push
dec
stc
mov
test
lret
dec
into
sub
fcomps
loop
ljmp
cltd
mov
fdivrl
lods
jmp
mov
ljmp
fnstenv
push
dec
xchg
dec
mov
mov
lret
pop
loope
bound
subl
icebp
mov
pop
rorl
push
adc
divb
push
pop
adc
mov
fwait
and
and
inc
in
stos
leave
scas
ja
sub
cmp
jg
ja
or
sub
and
arpl
inc
out
cmp
test
test
movsl
jecxz
popf
punpckhdq
xchg
icebp
and
icebp
fadds
lret
mov
test
insl
jg
loopne
sub
bswap
iret
mov
imull
cs
imul
pusha
addr16
sub
lods
aad
sti
lods
mov
rolb
clc
push
adc
insl
fwait
push
push
sbb
scas
xor
negl
mov
jb
rolb
jns
cli
ljmp
add
aaa
mov
mov
int
stos
mov
cld
mov
iret
pop
stos
nop
inc
insb
adc
or
bound
jno
pushf
lods
lods
jge
xchg
leave
add
xor
inc
test
cmpb
and
popf
ja
ds
lods
cmpl
imul
outsl
xchg
fstl
mov
add
sbb
push
lods
jbe
gs
icebp
loopne
mov
inc
xchg
inc
jb
mov
jno
inc
loopne
idivl
and
lods
xor
jp
mov
push
and
adc
and
repnz
adc
ret
inc
inc
and
sub
adc
lods
and
pop
mov
sarl
outsb
xchg
push
sub
sub
mov
xchg
push
stc
clc
lcall
clc
bound
ds
push
shrl
inc
mov
into
aad
cmc
out
inc
pop
shlb
fisubrs
shll
movsl
lds
enter
out
push
pop
nop
sub
lcall
aad
cmpsb
std
idiv
and
push
shrl
dec
pop
out
es
push
das
mov
ret
mov
mov
icebp
mov
in
mov
loopne
push
push
adc
mov
xor
fdivrl
jb
not
dec
mov
int3
dec
ss
idivb
mov
jnp
out
nop
aad
mov
orl
daa
adc
inc
pop
and
jns
add
and
cwtl
lret
cmp
jb
and
out
xor
fwait
std
adc
mulb
inc
divl
out
frstor
sbb
loopne
repnz
add
lods
aam
pop
xor
pop
pop
into
jecxz
mov
jmp
xor
movsb
push
cmp
and
cs
adc
jb
push
sub
mov
ret
sbb
mov
imul
pop
popf
adc
popa
nop
and
shl
push
cmp
mov
fdivrl
fldz
in
jnp
int
pop
mov
pop
push
sbb
scas
mov
lcall
mov
in
push
adc
fcoms
lock
adc
add
inc
pop
push
pop
pushf
and
push
cmp
lret
test
ds
je
and
inc
mov
pop
cmp
jmp
inc
bound
mov
aam
push
aad
dec
roll
insl
fstpt
jecxz
fldenv
leave
lret
cmp
js
mull
or
cmp
rolb
cld
fnsave
out
enter
shll
addr16
in
ss
das
subps
mov
adc
jmp
imulb
scas
mov
xchg
iret
push
fs
xchg
xor
aaa
jbe
adc
es
and
push
push
cmp
mov
cltd
out
mov
sbb
pop
mov
andl
fcoms
shrb
iret
mov
lock
rolb
arpl
mov
cmpsb
push
fidivrl
inc
mov
or
rcrl
fisttpl
pop
ret
add
in
jg
jle
cmc
mov
andb
lret
inc
xor
mov
fisubl
mov
stos
pop
in
lods
pusha
int3
jle
lds
mov
cwtl
test
gs
adc
flds
bound
out
add
or
cmp
jbe
cli
jge
sub
jb
shll
and
loope
or
mov
inc
xchg
loopne
addr16
or
lods
ss
fmull
pop
imulb
into
fwait
aad
add
loope
repz
test
dec
insl
inc
push
shr
pop
fs
mov
fs
es
mov
pop
arpl
or
idivb
bswap
inc
int3
std
push
sbb
mov
mov
fisttps
jo
xchg
adc
mov
pop
int
mov
sub
mov
fs
sbb
es
fs
fildl
imul
cmc
mov
shlb
mov
pop
mov
adc
in
out
out
sub
ficompl
icebp
je
mov
iret
mov
fidivl
test
insl
sbb
mov
sub
mov
pushf
popa
or
ret
mov
mov
fidivrl
outsb
add
cmp
push
imul
test
jge
and
lahf
rorl
jp
mov
mov
or
pop
adc
aas
sbb
cmp
push
mov
add
data16
sub
mov
out
push
xor
xchg
mov
pop
shlb
inc
mov
and
pop
mov
repnz
adc
push
lds
push
fwait
sub
mov
xor
push
jmp
push
mov
fistl
aaa
dec
inc
imul
mov
sahf
lods
pop
insl
xlat
repz
cmc
push
push
dec
push
hlt
divl
mov
dec
mov
pop
fmuls
aaa
xlat
mov
popf
and
mov
into
cmpsb
xchg
add
fldcw
pop
cmpsl
pop
cmp
jns
xchg
test
xor
push
jo
pushf
test
pop
mov
pushf
nop
xor
fcompl
fisttpl
and
clc
stc
add
sub
fisttpll
rolb
xchg
stc
push
aas
in
int3
mov
shl
mov
popf
ja
cmpsl
arpl
push
orl
imul
adc
mov
sti
inc
lcall
dec
shrb
push
shl
fwait
loop
sub
out
subb
cmp
mov
adc
xchg
mov
add
xchg
xchg
inc
jg
jno
repnz
cmp
std
ret
cmp
push
dec
scas
mov
xchg
jne
das
lret
cmpb
dec
dec
ret
mov
in
xchg
jmp
divb
arpl
push
jge,pn
pop
jle
lret
mov
rolb
sbb
xchg
mull
test
xchg
dec
fldt
xor
mov
pop
mov
inc
dec
pop
or
insl
sbb
dec
in
dec
push
popf
loopne
cli
popf
shlb
jns
add
or
xorb
adc
mov
dec
clc
test
mov
mov
cli
cltd
insb
jg
je
int
xor
and
adc
jle
jmp
imull
mull
pop
xchg
into
fisttps
xor
not
xor
push
fcomi
push
sub
sub
adc
and
xchg
ror
pop
aas
push
ret
mov
cltd
stos
loopne
arpl
and
dec
gs
push
test
dec
lods
out
rol
cld
int
stos
push
ret
dec
dec
in
cmp
inc
insl
pop
mov
sbb
inc
fidivs
xor
mov
ss
inc
pop
mov
in
jb
arpl
or
loope
mov
dec
cmpsl
incl
add
pop
pushf
xlat
xor
inc
xor
lret
loopne
test
push
int
pop
inc
out
mov
lcall
mov
cmp
es
or
imul
imul
jo
pop
adc
fs
push
jns
sub
xlat
js
jecxz
inc
or
ret
xchg
fistpl
jb
gs
mov
sub
imul
or
xchg
ret
bound
dec
xchg
pop
movsl
dec
add
jbe
pop
clc
mov
xchg
andb
int
movsb
mov
sahf
sub
mov
pop
adc
scas
lahf
flds
inc
and
popa
mov
cmpsl
aam
adc
popa
mov
adc
dec
pop
adc
insb
int3
dec
inc
mov
pop
adc
jb
add
adc
cmp
test
outsb
cli
imull
pop
sub
in
aad
pop
jg
cld
fcmovnbe
mov
fwait
lock
or
pushf
adc
rcll
js
jp
popa
ret
fcompl
daa
or
ret
push
pop
mov
sbb
leave
mov
cli
pop
add
or
dec
xor
cmp
push
dec
and
ss
sub
je
or
icebp
fstpl
xor
cld
faddl
fistpl
sub
call
pop
jle
cmc
add
and
arpl
mov
and
inc
test
outsb
xchg
aam
push
or
mov
xlat
adc
push
test
sub
lret
push
xchg
and
fdivr
out
ret
jb
sbbb
push
test
mov
ror
cmp
xchg
loope
aad
mov
jp
inc
inc
stos
daa
mov
pop
repnz
outsb
lods
fwait
sti
iret
lahf
loop
mov
cli
mov
push
and
in
jmp
imul
or
outsl
loop
rcrb
inc
xor
popa
lods
daa
out
xchg
inc
pop
mov
ret
sbb
or
arpl
mov
sub
clc
jb
sbb
pusha
pop
ret
or
or
sub
insb
out
cmc
arpl
jb
push
xchg
mov
dec
rcl
sub
lea
pop
mov
pop
mov
jb
push
or
in
cmp
sub
in
xor
icebp
and
jmp
push
fs
arpl
mov
les
int3
xor
mov
leave
jp
imul
fldt
loop
cmp
xchg
cmp
add
fcmove
jl
cwtl
mov
jecxz
xlat
sbb
mov
mov
add
fsubrl
testb
add
xor
push
dec
sbb
fs
cmovp
xlat
rep
inc
test
inc
out
and
cmpsb
cmp
in
mov
test
xchg
mov
nop
sbb
add
jecxz
mov
mov
movsl
loop
or
shrl
jecxz
les
call
inc
jns
leave
pushf
ds
mov
pop
dec
xchg
cmp
mov
lods
mov
mov
sbb
or
lods
jae
cmp
inc
push
xor
mov
push
rol
pushf
mov
jg
int
daa
jnp
mov
mov
push
jmp
jg
ret
pop
mov
or
icebp
cwtl
jp
loopne
xchg
insb
inc
push
fldenv
fs
pusha
fcompl
xlat
jle
jg
loop,pn
xchg
rcrb
icebp
inc
imul
fmull
fimull
xlat
clc
aam
dec
jmp
pusha
dec
popa
mov
ljmp
mov
ja
mov
pop
xor
pop
inc
jns
or
mov
movsl
push
lcall
mov
mov
dec
sbb
in
xchg
out
fdivs
data16
mov
mov
iret
pop
inc
mov
lahf
je
call
mov
inc
mov
rol
ds
std
mov
insb
dec
lock
or
cmp
in
js
fisttpl
in
ljmp
xchg
cmp
pusha
cmpsl
insl
popf
aam
rolb
inc
ret
and
out
std
leave
shl
scas
clc
push
ffree
xchg
jbe
rorl
dec
imul
add
das
mov
sti
xor
stos
mov
jl
outsb
jns
subl
test
adc
sbb
lcall
loop
mov
cmp
pusha
aaa
out
loopne
cmp
pushf
jnp
inc
pop
pushf
fimuls
ss
arpl
inc
jle
push
lret
rolb
pop
pop
pushf
aas
push
pop
xchg
into
xor
pop
and
or
shrb
movsb
mov
mov
fldl
pop
shl
fistps
int
inc
in
test
and
fnstcw
cmp
test
popf
inc
sub
lret
and
xchg
iret
fwait
dec
testl
cmp
lret
ss
cli
add
cmp
fs
xchg
and
xchg
mov
test
inc
sbb
jns
sti
fnsave
movsb
lods
movb
int3
repnz
and
xlat
es
mov
mov
adc
sub
or
cwtl
cmp
xlat
or
xlat
bswap
out
mov
and
data16
lahf
or
xchg
xor
push
gs
repz
sub
rcrl
and
pop
call
jl
push
pop
jne
sahf
pop
fidivrl
js
fs
les
pop
mov
arpl
push
ret
jbe
scas
mov
cli
mov
xchg
pusha
or
sbb
inc
jne
lahf
dec
dec
xor
sbb
or
jnp
decb
mov
imul
jnp
sti
int3
movsb
movsb
lds
in
push
xchg
mov
mov
push
mov
dec
jmp
mov
xor
pop
push
rorl
push
pusha
jb
sub
icebp
in
int3
mov
out
aas
push
imul
and
fwait
lcall
pusha
aaa
mov
mov
leave
hlt
sub
shlb
adc
add
sbb
sti
into
out
outsb
adc
pop
subb
lahf
push
mov
xor
sub
incb
adc
or
enter
mov
pop
stos
inc
lods
xlat
push
lods
loopne
sti
add
jecxz
cmp
in
pop
mov
xor
and
xchg
cwtl
subb
cmpl
mov
sbb
xchg
xchg
push
jne
push
push
mov
push
ficomps
add
bound
add
fnstsw
dec
pop
jmp
jo
mov
mov
dec
and
sahf
ss
push
js
fadds
nop
adcl
mov
dec
jnp
jg
call
out
mov
xor
xor
enter
cli
xchg
push
in
imul
icebp
pop
mov
mov
subl
or
mov
pop
inc
sbb
add
and
sbb
icebp
int3
mov
mov
hlt
lds
hlt
jle
cmp
mov
sbb
push
fnstsw
push
mov
and
or
mov
adc
inc
hlt
je
or
xor
pop
int3
lahf
jp
loop
add
je
push
sub
lcall
push
xor
push
scas
cwtl
xlat
cmc
mov
or
push
and
repnz
shr
pop
push
mov
mov
sub
sti
jmp
int3
test
adc
mov
std
push
outsb
sub
xchg
add
cmp
push
fwait
iret
jmp
mov
pusha
lret
adc
outsb
sbb
inc
cmpsl
or
mov
pop
add
mov
daa
adc
rcrl
push
xor
jbe
sbb
movsl
bound
sar
mov
fdivrs
or
fs
aas
nop
mov
int
shl
cwtl
pusha
test
shr
stos
insb
and
xor
lods
shrl
and
out
add
nop
add
dec
mov
cmp
jbe
stos
popa
sbb
into
adc
fwait
fs
and
insl
mov
cmp
add
daa
aad
aas
test
movsb
jmp
dec
mov
ss
mov
push
insl
in
xchg
ret
mov
out
or
push
lods
imul
ss
rorl
leave
aam
xchg
jbe
jns
inc
jno
clc
idiv
stos
mov
mov
add
add
xchg
push
pop
xchg
add
sbb
cmp
jp
sbb
fsubrs
lds
lds
aam
jns
mov
out
inc
xor
push
cmc
ficoml
movsl
rcrb
xor
lahf
les
mov
stos
lret
inc
hlt
outsl
popf
nop
dec
cmc
arpl
outsb
js
inc
cmpsl
testb
scas
icebp
add
inc
inc
out
cmp
fidivrs
adc
out
mov
cmp
lahf
pop
xchg
sbb
adc
inc
sub
sub
cld
stos
sub
mov
mov
lds
sub
imul
ret
jmp
sarl
push
test
dec
or
jb
movsl
and
xor
inc
or
sbb
mov
jae
out
adc
aas
stos
imul
aaa
and
sbb
bound
jl
dec
jecxz
mov
cltd
stos
dec
fwait
mov
imul
out
das
mov
mov
cmp
add
sbb
std
pusha
push
aas
mov
addr16
push
pop
call
rorl
lcall
aaa
test
mov
nop
or
ja
adc
xlat
dec
or
lods
cmp
mov
mov
jle
pop
pop
jbe
mov
jnp
popa
push
pop
in
sbb
lods
into
sub
hlt
fcmovb
in
std
or
inc
jae
jo
sarl
sub
dec
sahf
inc
les
outsl
scas
enter
daa
das
daa
inc
in
mov
test
fldl
xchg
sbb
jecxz
stc
test
xor
cmp
mov
sbb
mov
popa
rcrl
imul
mov
mov
inc
das
pop
add
jmp
sahf
cli
out
push
dec
je
dec
pop
adc
mov
push
sub
mov
xchg
aam
or
imul
lret
iret
dec
cmp
test
scas
in
popa
jb
xor
fcomp
ja
add
sbb
pop
mov
lea
cli
fists
sahf
and
testb
repz
mov
fisttpl
dec
dec
jmp
adc
and
sbb
lea
lahf
dec
into
push
lods
mov
sub
int
push
shll
js
insb
inc
out
out
xchg
daa
daa
jmp
jl
aas
push
or
and
push
inc
inc
test
or
mov
test
lock
mov
or
push
pop
jbe
in
lcall
xchg
jp
cmp
dec
ret
add
js
int3
je
loop
stos
mov
cltd
addr16
mov
outsl
sbb
sbb
sub
les
dec
sbb
dec
or
push
les
dec
daa
js
cmp
jg
aas
mov
movsl
dec
dec
in
push
out
es
cmpb
loope
pop
jnp
and
or
xchg
and
mov
ret
call
mov
mov
leave
out
movsb
dec
and
mov
add
stos
and
mov
dec
and
pusha
pop
adc
adc
nop
mov
addr16
sahf
orb
scas
add
test
xchg
dec
or
enter
mov
push
xor
ja
and
mov
clc
and
in
enter
sub
push
cwtl
test
cmpsl
sbb
pop
inc
sub
mov
mov
and
sub
jbe
pop
jl
mov
pushl
or
cmpsb
inc
jo
test
lcall
sub
inc
in
test
std
xor
addl
inc
popf
lods
icebp
push
orb
mov
cld
nop
adc
aas
xchg
mov
pop
inc
jnp
ljmp
push
mov
sbb
and
je
push
shll
or
out
or
stos
sub
sub
mov
sbb
daa
and
inc
stc
inc
sbb
fldt
test
lds
mov
push
and
inc
cmp
pop
roll
lret
ror
int3
jg
jno
mov
xchg
aam
in
test
loop
xchg
add
pusha
sarb
push
test
inc
popf
pop
xchg
or
repz
xorb
xchg
movsb
fs
xlat
mov
ljmp
int3
jmp
mov
repz
into
int
or
popf
ret
adc
jmp
dec
mov
ss
adc
jb
xorl
jbe,pn
insb
adc
jmp
push
icebp
jmp
loopne
ljmp
jmp
xchg
pop
cmp
cmp
or
aaa
aas
cli
je
clc
aad
adc
push
xchg
andb
sub
mov
push
sub
into
fwait
xlat
loope
sub
sub
pop
mov
in
test
movsl
mov
xchg
xchg
push
mov
outsb
mov
fdivr
in
cmpsl
gs
add
xor
sti
lahf
in
jno
test
add
mov
push
jae
dec
clc
cwtl
cmp
enter
out
out
icebp
mov
stos
roll
rcrb
ds
add
es
fistl
sbb
incb
into
mov
mov
inc
cmpsl
and
in
pop
leave
mov
dec
jb
vcomisd
test
movsb
xchg
add
ret
pop
scas
inc
stc
mov
jb
lret
pop
xor
loop
sub
adcb
mov
jnp
dec
add
test
adcl
sar
insb
sbb
loope
psllw
mov
sbb
sub
int3
pop
aaa
fcomip
mov
outsl
mov
xlat
pop
add
aam
pop
loop
aam
xor
test
push
hlt
add
xor
mov
jecxz
sti
mov
dec
mov
daa
xchg
adc
xlat
pushf
pushf
or
push
inc
inc
das
fcomps
shr
imul
push
loope
in
rcrl
repz
jge
xorl
cmp
push
and
adc
popa
cwtl
cmp
and
cli
push
sbb
or
call
scas
ret
jecxz
mov
pop
xchg
stos
enter
popf
or
dec
lahf
dec
incb
out
and
mov
shrl
enter
movswl
dec
jns
hlt
cmp
inc
ret
jnp
xchg
inc
in
in
xchg
out
jae
mov
and
rcrl
pop
scas
mov
outsl
add
gs
fdivs
cmc
rolb
cmp
test
xchg
mov
mov
sbb
sahf
xchg
mov
xor
add
push
or
pop
or
add
sbb
out
lock
mov
inc
lds
leave
das
fadd
dec
sbb
in
enter
sbb
mov
jae
lds
shrl
adc
push
in
xor
shlb
jnp
aaa
dec
inc
push
pushf
sbb
jbe
push
lahf
inc
iret
mov
sti
cld
pushf
test
sar
je
pop
pop
or
and
out
dec
bound
lds
cmc
test
dec
arpl
mov
ret
mov
add
mov
xor
and
sub
lea
sbb
mov
jecxz
pop
out
cmp
adc
cmpb
jecxz
xchg
xor
cmp
lods
addr16
jb
push
add
std
scas
mov
inc
cmp
lahf
pop
mov
adc
mov
movsl
cwtl
adc
mov
mov
outsb
mul
mov
fisttpl
push
int3
pop
and
or
jecxz
mov
dec
pop
mov
adc
loope
cmpsl
pusha
mov
lock
jg
hlt
xchg
sahf
jle
mov
mov
xchg
jno
sbb
fmuls
repnz
xchg
jl
stos
outsb
xor
xor
cmpsb
sbb
cmp
movsl
loope
loopne
lods
xchg
ficoml
arpl
cs
lea
jle
jecxz
andb
movsb
mov
sbb
jmp
cmc
jmp
mov
call
sbb
or
cmp
es
fstps
sbb
sub
inc
jl
das
repnz
cmp
cmp
ret
dec
andl
mov
movsb
and
ss
push
cmpsl
mov
xor
sbb
pop
mov
and
mov
int3
hlt
iret
jmp
rcll
dec
outsl
lods
adc
lods
xchg
int3
xor
mov
loope
aas
test
std
pop
inc
mov
rcr
inc
ficomps
sub
icebp
cmp
cltd
and
mov
sub
daa
add
repnz
xchg
push
adc
shrb
repnz
fs
lret
or
sub
adc
sub
xor
js
out
ret
jnp
clc
xchg
jno
sub
or
into
pop
movsl
insl
pop
cld
jecxz
dec
bound
cwtl
inc
dec
or
mov
and
xor
ja
cmp
ljmp
movsb
mov
mov
jnp
test
cmp
sub
dec
rol
je
mov
incl
push
lahf
xchg
repnz
pop
test
pop
popa
or
push
cmpsl
mov
cmpsb
fisttpll
test
shrd
hlt
test
out
lcall
push
mov
sub
cmp
loop
inc
sub
mov
xchg
mov
into
cmp
scas
out
jae,pt
jb
jbe
or
es
repnz
cmc
mov
push
aam
rcr
adc
pop
push
mov
xlat
mov
jb
outsl
push
pop
xchg
xchg
inc
adcb
xlat
inc
jno
fdivrp
movsb
jg
or
inc
mov
sahf
dec
push
pop
cmp
xchg
xorb
in
jnp
jge
rclb
loopw
enter
or
sbb
rcrb
int3
sbb
cmp
call
adc
inc
loopne
scas
jecxz
enter
ds
sbb
pop
xor
jne
sub
jnp
in
and
inc
jge
neg
xor
test
cmpsl
inc
pop
sub
loope
dec
xchg
cmp
cltd
aaa
lahf
subl
or
aad
in
movsb
adc
outsb
lock
bound
or
xor
sub
add
xchg
add
leave
bound
and
iret
xor
mov
lret
loop
dec
cmp
in
pusha
int3
insb
aad
shll
int
incl
mov
test
test
mov
lods
cs
sbb
ljmp
xor
dec
dec
or
fldcw
out
mov
push
adc
lds
cld
jge
sahf
mov
pop
in
dec
aaa
lcall
sub
subl
dec
loope
mov
pcmpeqw
aad
jg
imul
ljmp
xor
xchg
sub
fmul
push
xchg
or
xchg
mov
push
lea
mov
cmp
movsl
fs
imul
cs
adc
int
dec
popa
jmp
mov
movsb
push
ljmp
leave
mov
push
dec
pop
scas
imul
push
js
bnd
pop
mov
lds
mov
loopne
cs
or
lret
xor
dec
mov
ss
hlt
fldt
out
pop
loopne
mov
negb
stos
cmpsb
rcrb
mov
fs
cmpsl
cmpsb
jne
mov
push
or
lret
sub
outsl
push
push
leave
pop
outsl
fs
insb
frstor
push
dec
test
cmp
fisubs
int
mov
leave
adc
xchg
jnp
test
test
xor
mov
xchg
sbb
insl
js
and
mulb
xor
mov
test
push
pop
mov
xlat
dec
inc
or
imul
test
or
outsb
and
aam
sub
pusha
push
call
mov
inc
lret
mov
test
sbb
stc
aad
pop
sbb
clc
jnp
popf
ljmp
dec
mov
or
cmp
jns
adc
pop
js
insl
xor
jne
pushf
sahf
jp
iret
mov
inc
and
addb
int3
mov
loopne
dec
hlt
jg
push
sub
ret
loopne
mov
sbb
lea
mov
pop
mov
push
pop
dec
insl
rclb
pop
sub
jne
in
das
cmc
dec
mov
aas
jne
push
sbb
rcrb
ret
loopne
dec
xchg
xchg
push
les
add
pop
xor
ljmp
push
inc
mov
jmp
test
test
pop
iret
xchg
xchg
mov
scas
jle
imul
xlat
outsl
incb
es
lcall
in
push
mov
addr16
shlb
test
imul
and
hlt
push
dec
fimuls
out
ss
cwtl
cmp
fs
cs
adc
mov
aad
movsb
adc
lock
jl
rcrb
jb
mov
cmp
cmp
xlat
les
addl
push
aas
xchg
lcall
cwtl
inc
cld
mov
xchg
clc
add
loopne
jbe
dec
fdivr
dec
repnz
xor
push
xlat
jecxz
ret
mov
mov
and
loopne
mov
mov
jbe
push
inc
push
inc
add
stos
inc
rorb
cli
les
enter
in
jp
xor
test
call
icebp
jbe
std
es
and
imul
jo
mov
add
lea
sti
sub
orb
mov
push
push
aam
repnz
das
push
mov
add
and
jecxz
jo
cli
push
mov
cmpsl
or
adc
mov
scas
push
sub
inc
cmp
data16
push
das
scas
arpl
outsb
lods
adc
pop
jg
mov
gs
repz
mov
push
pop
or
ja
hlt
adc
cmpsl
aas
test
mov
mov
lahf
not
ficoml
dec
mov
int
inc
and
subps
cmp
pusha
shlb
xor
lods
nop
outsb
es
dec
and
mov
sbb
jae
inc
fwait
inc
sub
xlat
sbb
stos
push
jecxz
das
pushf
xchg
xchg
mov
int3
fidivrl
pop
ss
js
std
cwtl
jmp
jge
out
pop
ja
xchg
sbb
iret
jnp
pushf
outsb
add
adc
xchg
sbb
adc
jno
mov
jecxz
pop
fisttps
pop
mov
cmp
mov
cs
inc
pop
jnp
add
adc
mov
mov
sub
mov
pop
scas
sub
mov
cli
insb
mov
cmp
nop
sbb
push
aaa
xchg
lds
pop
xchg
fwait
or
pusha
addr16
and
cli
scas
stos
mov
cwtl
lret
or
add
xor
xchg
sub
ss
mov
jle
mov
in
sub
les
xor
mov
xlat
push
push
fstps
and
ret
cmc
aaa
mov
das
add
mov
push
jo
pop
outsb
shl
pop
pop
aam
icebp
and
rorl
lods
mov
adc
les
mov
push
int3
es
pushw
pushf
pop
ss
and
stos
test
lcall
or
enter
cmp
stos
sub
lret
lcall
aad
hlt
lcall
xor
mov
cmp
inc
pop
hlt
xchg
jecxz
aam
push
loopne
push
jmp
pop
cmpsl
fadd
inc
ds
sbb
inc
inc
adc
dec
imul
or
add
insb
rolb
dec
rcl
lds
cmpsl
and
enter
mov
jp
leave
jmp
jl
in
insl
cmpsl
jnp
cmpsl
roll
cmp
popf
push
xor
stos
lds
leave
xor
lret
push
lds
cltd
data16
jl
inc
dec
jne
mov
and
fistl
ficoml
add
shlb
movsl
xchg
mov
cmp
adc
cmpsl
out
mov
outsb
adc
or
orb
test
inc
ds
jmp
sbb
lea
aad
push
enter
sarl
sbb
aaa
jge
pop
inc
pop
aaa
fisubl
addb
adcl
mov
mov
sub
or
sahf
push
out
mov
test
xchg
clc
jne,pt
ss
adc
test
inc
adc
pop
loope
in
inc
add
test
and
subb
cmc
aaa
add
idivb
sbb
add
xchg
adc
mov
aaa
xchg
rorl
mov
cld
mov
and
repz
mov
sub
dec
push
mov
or
pop
pop
pusha
sub
sbb
hlt
lock
je
and
fwait
out
test
pop
loopne
gs
pop
xchg
mov
fdivrs
movsl
fs
fistpl
out
inc
lods
js
scas
push
sbb
in
fcoms
ja
sub
cmc
ret
stc
loop
xchg
xchg
push
mov
outsb
jb
mov
push
dec
mov
in
cli
lods
das
ds
mov
push
sti
aad
xchg
movsb
pop
sti
mov
ds
adc
std
sub
sbb
and
and
push
nop
cmc
test
dec
cmp
insb
dec
adc
sahf
mov
pop
xlat
mov
sbb
dec
arpl
mov
inc
test
je
popa
pop
lock
pop
pop
rolb
test
jbe
out
pop
sbb
mov
pop
dec
ficomps
shrl
aas
loopne
pop
dec
pop
xchg
and
outsb
dec
das
fisubs
lods
lret
inc
dec
in
xchg
in
push
and
outsl
pop
cmc
cmp
mov
mov
fldenv
mov
jmp
pop
xchg
cwtl
and
adc
mov
hlt
mov
add
cld
sbb
jo
aas
pop
out
imul
pop
jp
jae
sub
mov
push
sub
push
jle
xchg
adc
movsb
xchg
test
inc
inc
dec
sbb
pop
aam
pop
jl
gs
loopne
mov
imul
sarb
cltd
inc
xchg
xlat
push
bound
cmp
pop
pop
and
cmp
push
into
hlt
sub
int
pusha
cmp
mov
or
lods
dec
je
inc
imul
push
sbb
xchg
sub
pusha
mov
push
xor
xchg
mov
mov
cmpsb
inc
pop
scas
imul
sub
push
xor
mov
pop
jo
cld
insl
lahf
jae
fwait
sub
sub
scas
mov
or
aaa
cld
add
xchg
imul
cmp
push
or
stos
inc
ljmpw
dec
inc
add
out
lods
dec
jae
sbb
mov
loope
fmull
popf
insb
push
iret
inc
sub
enter
int3
in
add
and
mov
arpl
adc
shlb
stos
mulb
cmp
and
inc
pop
lcall
enter
insb
jns
cmpb
adc
dec
pop
ja
test
xchg
push
pop
add
outsl
dec
lahf
mov
xlat
inc
fdivs
or
jns
xchg
push
sbb
fiaddl
fmuls
mov
xchg
js
mov
mov
stos
dec
loop
out
rcrl
leave
lds
mov
ja
pop
adc
outsb
cs
sub
cmp
pop
hlt
repnz
loope
sbb
mov
aam
mov
sbb
or
ja
mov
cmp
inc
fs
xchg
ja
dec
push
aaa
jge
gs
mov
inc
xorb
fmuls
ss
or
or
dec
notl
mov
mov
or
aaa
mov
adc
subl
lea
das
lret
out
popf
mov
xchg
decl
sub
out
sub
imul
dec
adc
mov
mov
jno
outsl
sti
and
lcall
xchg
lret
mov
leave
xchg
repnz
stos
or
mov
mov
cmc
pop
adc
jb
repnz
int3
add
faddp
aas
pop
aad
dec
mov
movsl
inc
stos
insl
jns
sarl
std
add
cmovnp
push
es
int3
dec
sbb
lret
cmpsl
jmp
dec
lret
cli
dec
mov
xchg
je
sub
incb
pop
fsubl
cmp
enter
loopne
mov
sub
aad
sub
cwtl
xchg
imul
xorl
sbb
adc
ret
out
mov
subl
in
js
andl
mov
jge
cmpsb
outsl
decb
imul
std
cltd
fnstcw
mov
cmp
in
ds
push
arpl
iret
cli
outsl
mov
roll
jns
jns
mov
and
xlat
pushf
stc
cmp
test
out
fwait
iret
popf
pop
dec
xchg
ljmp
inc
sbb
mov
mov
mov
mov
movsl
mov
xchg
jmp
loopne
jns
ljmp
test
stos
add
xor
mov
daa
test
cmpsb
clc
lods
cwtl
stos
or
and
test
xchg
fmull
andl
sti
xor
jne
mov
xor
stos
push
adc
pop
loopne
mov
sub
jb
lret
shll
or
xchg
cwtl
xchg
xor
aas
mov
pop
shl
cs
xchg
arpl
rcrb
leave
fs
fimuls
inc
push
stc
enter
jg
cmp
stos
ds
popf
cli
in
sbb
mov
cltd
js
imul
in
xlat
cmp
push
notb
pop
cld
dec
mov
xor
or
mov
aam
int3
les
jmp
pop
shl
in
std
jnp
bound
dec
mov
lea
mov
sahf
jge
lahf
in
pop
scas
pop
add
rorl
push
pop
jg
rclb
mov
jb
hlt
push
lret
mov
push
subb
jg
lods
xor
in
fldcw
pop
ret
ret
movsl
push
movsb
fcoml
or
test
insl
sbbb
cltd
mov
cmc
and
mov
fsts
jmp
repz
in
sbb
jae
lods
adc
insl
or
fcoml
xchg
ret
call
or
daa
cmp
dec
ljmp
in
cs
push
and
xchg
js
mov
mov
daa
push
rclb
and
mov
in
mov
les
mov
cmp
out
jmp
mov
jle
sub
pop
sti
andb
out
sbb
aas
out
nop
into
loop
out
mov
mov
fwait
test
fcomps
clc
das
jle
fs
jbe
ss
add
loope
xchg
jo
inc
sub
push
ret
xor
popf
pop
sbb
dec
rclb
push
cmpsl
in
ret
push
inc
push
and
or
bound
jle
xor
inc
scas
ror
negb
cmp
or
mov
int3
pushl
adc
imul
nop
stc
dec
fs
daa
or
sbb
lret
sub
aam
mov
dec
mov
mov
rorb
inc
lcall
jne
xlat
sub
and
enter
push
dec
call
or
xchg
and
dec
popa
mov
inc
in
cmp
add
xor
inc
das
subl
repz
das
jno
and
loope
push
pop
jb
pop
or
cld
int
jbe
cmp
mov
insl
loop
fsubs
ret
mov
mov
ja
dec
push
xor
dec
sbb
xchg
popf
push
mov
cmp
mov
jo
faddl
jge
cli
scas
fucomip
inc
pop
or
cmc
lods
ss
repnz
out
imul
jge
cmp
adc
pop
movb
inc
mov
aad
cli
and
int3
push
cld
mov
mov
lcall
int
inc
cmp
sub
add
push
or
sbb
ja
clc
nop
imul
mov
mov
xor
cmp
jmp
sbb
push
mov
ret
sub
or
xor
in
lds
outsb
or
ss
outsb
mov
jge
repnz
dec
mov
outsb
xor
inc
sbb
int
insl
pop
repz
mov
outsl
cmp
xor
push
daa
inc
in
aam
popa
mov
push
stos
cwtl
pop
mov
jae
shll
ret
movsb
mov
cmp
popf
dec
add
mov
mov
mov
stos
inc
mov
pop
adc
push
cmp
mov
cmp
dec
push
pop
cli
push
inc
inc
and
sub
mov
xchg
aad
add
pop
push
adc
adc
inc
cmpsl
int
adc
enter
shll
lods
insl
pushf
aam
dec
movsl
mov
int3
or
dec
jae
sbb
lahf
cs
pop
push
xor
subb
ss
imul
cwtl
je
cmpb
cmpsl
mov
aad
int3
inc
out
pushf
mov
icebp
mov
call
mov
in
out
ret
int3
mov
xor
ret
dec
sti
adc
inc
or
sbbl
mov
outsb
leave
cwtl
lahf
push
and
jge
shl
rcrb
sub
mov
and
in
into
push
mov
pop
or
movsb
xorb
scas
dec
hlt
out
pushf
jge
sub
push
sbbl
daa
mov
loope
xchg
in
cld
out
sti
or
xchg
lods
xlat
add
movsb
loop
adc
pop
jne
sahf
movsl
cmp
inc
inc
mov
sub
or
inc
lahf
xchg
mov
mov
xchg
xchg
cmp
cmpsl
stc
pop
xchg
ss
lods
pop
subb
out
push
push
mov
inc
loop
jecxz
imul
scas
outsb
dec
adc
sbb
inc
or
fsub
mov
adc
std
stc
or
popf
xchg
sbbb
scas
dec
jne
les
and
adc
jnp
sbb
cmp
stc
in
sub
mov
and
push
lea
pop
imul
sbb
fsts
test
sbb
rolb
insb
or
shll
jo
and
sbb
rcl
mov
cmp
call
movsb
jge
leave
xchg
cmp
xchg
xchg
cmp
jo
jle
and
pop
das
inc
out
stos
fsubr
add
sub
pop
dec
jne
mov
fildll
inc
fisubrs
nop
rcrl
inc
xor
inc
inc
daa
fucomi
int
fs
push
aad
cmp
jbe
hlt
clc
sbb
push
stc
push
push
fisubrs
pop
add
dec
xor
std
lret
mov
in
pop
lahf
pop
ret
inc
cmpl
shll
ret
rcl
sbb
jecxz
cmpsb
std
loope
imul
call
adc
sar
mov
xchg
lcall
adcb
cmpl
push
jl
decb
in
mov
cmp
xlat
push
cmpsb
dec
jmp
jge
push
inc
mov
sbb
popf
stos
mov
rorb
push
push
bound
ficompl
stc
xchg
inc
loope
jmp
mov
js
sbb
and
mov
pop
pushf
mov
inc
mov
mov
cwtl
lea
push
push
dec
movsl
scas
mov
test
mov
icebp
daa
imul
test
inc
out
aaa
pop
in
mov
repnz
aam
xchg
inc
sub
cmc
jbe
jle
in
cmp
jae
stos
cmp
popf
dec
pop
xlat
inc
cmp
lcall
adcl
aad
mov
adc
arpl
mov
adc
push
stos
out
cwtl
popa
push
mov
ret
mov
jne
and
ja
insl
push
out
mov
inc
dec
leave
adc
imul
push
cld
xchg
pop
or
xchg
addr16
es
dec
push
or
and
lret
shlb
dec
mov
rolb
jmp
xor
add
pop
dec
outsl
fistpl
mov
mov
nop
addl
out
daa
pop
mov
xchg
mov
add
push
stc
cmp
pop
cld
jecxz
js
ret
cli
jnp
dec
jb
push
jae
sbb
in
pop
add
and
sti
inc
push
sbb
mov
mov
and
sub
sahf
cltd
xor
xlat
mov
mov
inc
roll
les
repnz
push
mov
jle
loope
les
xor
mov
or
test
cwtl
sti
and
push
int3
fbstp
call
pop
sub
aaa
lods
shrb
xchg
adc
sahf
jge
leave
out
or
dec
and
pop
mov
sub
xchg
jbe
dec
mov
cli
sbb
xchg
adc
ret
adc
jne
adc
add
pop
xchg
seto
mov
ret
addb
push
add
outsb
imul
xorb
js
imul
and
scas
push
or
and
movups
imul
pop
fbld
lret
sarl
mov
lods
fadds
aam
push
sub
iret
rolb
cwtl
fstp
sahf
push
mov
inc
stc
sbb
sbb
pop
adcl
mov
jb
xchg
push
repnz
mov
jnp
mov
icebp
lret
pcmpeqb
jp
movsl
in
je
test
add
shl
mov
cmp
lods
fsubrs
mov
mov
fldcw
popf
in
cmp
push
inc
pop
in
nop
fs
icebp
rcr
rcl
imul
and
xchg
rcll
mov
jne
mov
lods
into
negb
push
inc
fsubrs
ret
adc
xchg
inc
jns
dec
out
jb
sub
xchg
mov
push
popf
ss
push
or
push
adc
dec
faddl
ret
jae
add
and
fcomps
jg
adc
sarb
int
mov
push
pop
push
inc
pop
cli
sbb
fiadds
fldenv
dec
stos
add
sbb
movb
inc
mov
inc
rorl
dec
cli
dec
sbbb
dec
imul
jno
es
and
test
lret
xlat
test
imull
fsubs
shrl
fwait
xor
mov
lods
pop
cld
outsl
jae
mov
xor
mov
cmpsb
pop
fst
jmp
fcomps
dec
arpl
mov
dec
adc
repz
jnp
push
and
mov
xchg
mov
lahf
or
test
push
jge
sti
push
and
add
leave
push
sahf
test
mov
lds
mov
sbb
xrelease
cmp
rcrb
push
addr16
push
cmp
xchg
mov
xor
addr16
sbb
ds
fs
jecxz
mov
int3
jb
or
push
andb
push
or
mov
cmpsl
fs
sbb
shl
fisubrs
dec
dec
aam
add
dec
cmc
clc
sub
movsb
stos
xchg
xor
jl
insl
call
push
adc
rorl
ror
cmpl
sbb
leave
lods
lds
fs
xchg
push
lret
das
adc
aaa
cwtl
in
inc
test
xchg
lahf
call
lcall
aas
mov
sub
inc
add
add
idiv
adc
iret
dec
sub
sub
xor
adcb
out
lds
push
fisubl
aam
push
mov
in
sub
xor
xor
add
icebp
xchg
add
inc
sub
iret
sbb
imul
inc
test
xchg
lret
ffree
sub
xchg
mov
mov
mov
imul
stos
ss
mov
and
push
pop
loop
dec
jp
mov
or
jl
sbb
lret
push
dec
bound
stc
repz
xor
push
insb
cmpsb
cmc
or
in
pop
ds
cmpsb
sahf
xchg
gs
dec
sti
ret
adc
lahf
xor
jge
popa
out
cld
jnp
add
mov
rorb
jne
xchg
dec
cmpsl
or
les
insl
data16
sub
int3
adc
cmc
xor
fsubrl
into
inc
dec
dec
enter
repnz
push
add
adc
jle
adc
stos
jp
sbb
or
js
inc
dec
inc
pop
adc
insl
and
xchg
cmp
pop
pop
lcall
insb
in
mov
mov
add
lock
into
mov
gs
insl
mov
or
mov
test
inc
pop
xchg
sub
sub
fs
fldt
inc
adc
xchg
fsubrl
fiaddl
test
jo
pushf
lret
fimull
sub
sub
insl
rcr
hlt
push
repnz
inc
outsl
dec
test
cmp
mov
idivl
push
mov
and
jge
mov
aas
xor
icebp
jno
adc
or
lock
or
push
push
scas
and
fidivrl
or
les
test
xchg
cld
int3
pop
jo
cwtl
adc
inc
xor
js
pop
sbb
cmpsl
insl
add
in
dec
jp
mov
dec
daa
xor
fnsave
add
mov
mov
jo
jno
jo
in
in
xchg
cwtl
sub
sbb
sub
jg
mov
frstor
jne
push
ds
lret
sbb
push
popa
cmpsb
imulb
jb
jb
adc
aas
cmp
lret
sti
and
adc
pop
sub
mov
inc
push
repz
pushf
inc
vmovsd
mov
shll
jge
xor
or
pusha
jnp
les
arpl
sub
test
jmp
jo
lods
aam
stos
and
lcall
inc
jge
push
movsb
scas
sbb
les
adc
pushf
loope
jecxz
shrl
shrl
daa
or
movsl
insl
test
cmp
inc
pop
or
push
or
je
movsb
sti
mov
mov
adc
lret
jge
inc
lcall
mov
ds
adc
ret
mov
ds
push
shll
pop
xchg
jo
test
mov
popf
pop
pop
dec
push
sbb
jge
movsl
add
es
xchg
mov
pop
adc
jae
cld
shll
xchg
jae
lcall
imul
mov
add
lret
and
jg
test
insl
aas
and
test
inc
xchg
mov
test
out
jo
in
xor
lcall
ljmp
mov
sub
adc
in
stos
push
sub
sbb
out
pop
fistpll
imull
aam
cltd
out
mov
or
sub
and
aas
sub
test
xlat
jae
pusha
into
cwtl
testb
sbb
sbb
pop
and
xchg
clc
mov
push
mov
and
in
fcomp
movsl
pop
int
movsl
xchg
jl
jae
mov
stc
jge
mov
idivb
orl
mov
dec
outsl
ljmp
inc
push
loope
lock
nop
iret
frstor
pushf
jae
out
pop
ja
iret
add
dec
adc
add
pop
into
mov
sub
pop
lods
jnp
xchg
out
pushf
testl
test
xor
pop
mov
mov
xor
pushf
lcall
push
sbbb
in
dec
dec
adc
push
add
imul
dec
mov
test
adc
movsl
leave
inc
xor
out
xchg
maxps
popa
imul
push
test
call
iret
lahf
arpl
push
mov
push
sub
mov
jle
mov
xchg
js
dec
aam
test
sbb
push
dec
out
fidivs
inc
lret
jo
lock
sub
mov
nop
dec
and
icebp
mov
xor
pusha
adc
jl
inc
rclb
lods
mov
cwtl
jns
insl
notb
repz
push
enter
or
push
cmp
js
in
xor
lahf
and
mov
hlt
es
pop
mov
xchg
mov
ret
push
les
mov
in
fiadds
aad
daa
sti
cmpsb
cmpsl
mov
mov
or
shll
sub
cmp
sti
fbld
pop
mov
mov
cmp
inc
int
int
sub
insb
push
jb
jae
iret
dec
data16
daa
or
dec
aam
in
aaa
or
aam
cmpsl
in
inc
add
fucomip
clc
inc
out
ficomps
or
mov
mov
ljmp
lahf
aaa
sbb
cmpl
jo
fcoml
sahf
test
ds
push
sub
outsl
push
ficompl
push
loope
lret
inc
fiaddl
xchg
add
je
pop
mov
pop
fdivrl
pop
icebp
scas
sarb
cmp
shlb
mov
int
adc
fwait
xchg
jp
mov
cmc
push
lock
jmp
add
cmp
adc
push
enter
jno
jecxz
mulb
push
cmp
mov
mov
loop
out
adcb
mov
jl
stos
push
mul
mov
test
test
mov
mov
jl
add
xor
mov
nop
cmc
shr
push
outsb
das
xchg
or
in
pop
xchg
jecxz
out
insb
sbb
pop
mov
push
or
test
xchg
xor
push
in
dec
push
dec
andl
std
inc
mov
jp
jnp
add
in
stos
dec
push
iret
das
ret
inc
add
imul
arpl
bound
shll
int3
and
ja
aas
out
push
push
add
inc
ss
xchg
mov
jne
hlt
lahf
mov
dec
xchg
retw
das
dec
jno
clc
adc
sub
pusha
jnp
leave
dec
inc
std
clc
sbb
push
xor
ret
imul
and
mov
cmp
sub
cmp
pop
dec
lret
je
pusha
and
popa
movsl
fdivr
scas
push
push
lods
and
xor
cmp
xor
outsb
and
xor
in
sbb
ret
dec
ret
repz
jge
lods
fldenv
roll
xlat
test
loop
nop
fwait
mov
add
cmp
or
cs
sarb
adcl
outsl
mov
mov
mov
stos
xor
pop
aas
int
sub
aaa
dec
rorl
js
adc
inc
rol
add
mov
nop
pop
fwait
lods
push
test
fwait
jne
mov
dec
adcb
outsl
mov
dec
mov
ds
xchg
xchg
xor
decb
cmp
std
jne
lea
mov
and
mov
adc
and
xchg
xchg
push
cwtl
int3
jecxz
aam
sbb
lret
mov
push
sub
testb
lea
push
and
daa
ret
lcall
ss
mov
xor
jns
js
jnp
hlt
lcall
push
sbb
adc
testl
adc
rorb
aaa
mov
lods
insb
xor
xchg
fistl
jnp
jl
push
xchg
hlt
lcall
lret
xor
cmp
mov
xor
fsubrl
push
and
aaa
out
js
aas
mov
xchg
sub
jmp
dec
lret
mov
dec
push
loopne
push
scas
pop
movsl
loope
mov
cli
repnz
movsb
addr16
subl
sub
cmp
leave
ss
push
sbb
jbe
add
mov
or
mov
jb
hlt
test
adc
mov
inc
roll
jle
sbb
cli
sbb
test
js
loopne
adcb
hlt
test
dec
adc
dec
ljmp
xchg
popa
mov
add
jge
push
pop
sti
mov
or
jb
call
fsubrl
shl
adc
leave
insl
fmulp
pushf
and
popa
test
cs
lret
mov
fwait
test
rorl
fidivrs
cmp
arpl
dec
inc
mov
in
mov
mov
mov
subb
xlat
stc
daa
mov
jns
pop
outsb
mov
add
jns
aam
xchg
addr16
cmp
js
sbb
sbb
lods
pusha
jle
cs
loop
mov
sbb
hlt
mov
cmc
mov
int
sbbb
cmp
dec
in
add
mov
ds
addb
leave
iret
test
sub
dec
push
faddl
inc
rorb
nop
movsl
pop
sub
push
mov
bound
nop
push
pop
push
or
xchg
push
push
in
nop
sbb
fisttps
scas
ficoml
jecxz
dec
movsl
mov
jae
lahf
jg
in
mov
pop
test
lea
cmc
out
addl
call
xor
jecxz
es
jge
inc
sbbl
and
cmp
lret
imul
mov
add
adc
mov
sbb
insl
fadd
icebp
loope
xchg
gs
pop
cmp
dec
mov
and
ljmp
and
pop
fnstenv
jle
xor
cltd
fwait
insl
ljmp
xor
stos
in
inc
jg
pop
mov
xor
pop
fidivl
pushf
cmpsb
xor
pop
popa
sub
aas
push
lods
sub
mov
sub
push
mov
cmp
xor
int3
lahf
add
outsb
popa
jle
cltd
mov
shll
push
add
inc
mov
mov
mov
arpl
and
ljmp
inc
mov
adcb
movsl
add
aas
out
insl
jmp
in
movsl
cwtl
xlat
inc
jb
xchg
xor
fsubr
or
jae
dec
cmpsb
or
or
pushf
mov
stos
lds
decl
fisttpl
into
clc
pop
sar
dec
sbb
or
hlt
xlat
ret
mov
pop
or
bound
mov
in
or
std
pop
sbb
jne
ja
out
sahf
adcb
lock
movsl
lret
in
icebp
call
out
je
pop
test
aaa
xor
xchg
push
out
cmpsl
push
and
into
jbe
xor
mov
mov
dec
cwtl
mov
inc
cmpsb
hlt
rclb
call
ljmp
cmp
leave
out
adc
adc
sbb
arpl
and
sbb
sbbb
jno
push
sarb
popa
sub
sbb
leave
cli
ret
xorl
push
dec
xor
mov
in
dec
adc
mov
daa
mov
or
jb
arpl
jp
adcb
pop
jp
cmp
sub
cmc
sub
pop
inc
lret
add
dec
dec
sahf
out
lahf
xor
mov
lock
orl
mov
cwtl
lock
shrl
dec
cmp
mov
insl
jecxz
push
cmp
or
xchg
jle
pusha
shlb
mov
movsb
dec
das
lods
xor
xlat
inc
in
fdivs
add
or
adc
ja
les
enter
mov
jp
mov
out
rorb
or
xchg
in
push
mov
sbb
bound
jge
scas
cmpsl
aas
scas
je
adc
push
aas
mov
insl
lret
cmpsb
jb
ret
loop
es
sahf
adc
rcll
inc
push
lret
mov
sub
cmp
jmp
mov
xchg
jecxz
cmc
clc
inc
and
mov
jnp
cmp
movsl
sub
ds
das
jne
mov
sub
mov
xor
enter
out
mov
sub
lods
pop
test
jmp
mov
cmpsb
mov
mov
cmp
sbb
icebp
mov
or
and
stos
inc
cmp
mov
out
pop
push
movsb
dec
add
outsl
push
arpl
in
adc
enter
aaa
ds
popa
cli
pop
cmp
or
decb
mov
pop
je
cld
mov
sub
and
testl
xlat
push
cmp
mov
fcompp
mov
lock
xchg
aam
std
push
and
and
jmp
cmc
cmp
lock
ss
mov
lds
push
jp
shrb
in
jle
xchg
insb
imul
lock
push
cmpsl
aam
push
jb
out
das
sti
push
dec
loopne
in
mov
or
pop
in
jge
iret
inc
js
xor
fildll
mov
cmp
xor
mov
pushf
dec
leave
add
aaa
jnp
icebp
jns
cld
dec
subl
push
lock
in
lahf
pop
fisubs
push
inc
cmp
push
mov
andb
dec
insl
rcll
push
mov
fwait
mov
dec
outsl
hlt
jecxz
mov
mov
ss
test
push
hlt
dec
mov
mov
ret
leave
xor
mov
ror
ss
jae
repz
xor
add
inc
or
or
imulb
mov
lea
lcall
mov
je
mov
xor
aam
repnz
cmp
fmul
sub
jecxz
std
mov
pop
fmul
adc
arpl
mov
daa
test
das
test
inc
and
xor
mov
out
ds
push
adcb
sbb
adc
mov
pop
sbb
push
sub
arpl
in
mov
jg
sarl
sbb
pop
push
repz
jb
shll
scas
jmp
sarb
mov
pusha
aas
jns
stos
jl
add
cs
xchg
add
pop
int
dec
xchg
or
sahf
lds
lcallw
loope
test
xor
pop
leave
push
imul
adc
mov
daa
pop
mov
adc
ja
cmp
dec
push
daa
or
stos
jnp
jne
fsub
in
leave
sbb
push
xor
mov
pop
pop
jbe
add
and
pop
or
inc
mov
bound
ja
lods
mov
call
rcrl
jae
cli
int3
push
mov
negb
jmp
mov
xchg
mov
rcll
or
lret
daa
pushf
into
mov
inc
je
lds
cmp
mov
sbb
push
repnz
fs
pop
pop
orl
mov
adc
sub
sarl
mov
enter
jno
mov
andb
xchg
inc
inc
add
sar
mov
push
and
or
inc
cmpsb
stos
mov
mov
fidivl
sub
lcall
sbb
rorl
mov
push
je
aaa
dec
out
inc
mov
adc
push
out
mov
fwait
pusha
adc
cmc
leave
lret
jmp
or
popa
mov
cs
les
mov
cs
das
js
pop
cmpsb
jmp
sub
test
loop
aas
mov
push
in
cwtl
mov
ljmp
inc
mov
adc
cmp
stos
in
mov
fsubs
xlat
ja
cltd
rcrl
dec
ljmp
push
sbb
into
lock
call
adc
mov
jmp
cmc
adc
sbb
lds
pop
dec
roll
imul
int3
adc
es
rorl
negl
loopne
std
in
stos
mov
mov
adc
imul
out
mov
push
and
dec
xor
stc
insl
fsub
push
mov
faddl
data16
mov
out
cmpsl
inc
shlb
lods
push
jae
mov
push
xchg
and
stos
ja
fsubp
jnp
sub
pop
in
ret
push
pop
popf
roll
push
push
shll
fnstsw
inc
cs
inc
scas
mov
cld
shr
scas
pop
mov
dec
jnp
jno
mov
xchg
mov
scas
push
adc
cmp
cld
xchg
and
add
jmp
or
xchg
cmp
cmp
jbe
roll
aaa
enter
mov
sub
daa
outsb
ret
sub
sbb
ds
insl
sbb
dec
std
mov
or
rcrb
inc
mov
mov
in
mov
leave
mov
and
sti
ret
pop
cmp
movsl
inc
xchg
lds
mov
xchg
or
xchg
jne
js
cmp
add
mov
cltd
add
test
jecxz
add
movsb
repz
mov
mov
repz
sbbb
xchg
imul
adc
cmpsl
pushf
movsb
lods
jbe
call
or
ret
in
stos
loop
or
dec
pushf
pop
pop
dec
push
xor
or
fwait
aam
stos
sub
pop
sub
scas
inc
shlb
scas
or
cli
js
push
xabort
or
dec
loopne
jne
imul
test
push
jecxz
sar
mov
lret
inc
mov
mov
cli
or
adc
sarl
or
mov
and
xchg
mov
out
jp,pn
xchg
xchg
test
push
imul
inc
pop
pop
notb
je
mov
or
jge
fidivl
or
mov
subb
jg
sub
aam
jo
in
testl
outsb
xchg
dec
nop
jle
mov
lock
out
fnstenv
add
fsubrs
sub
jle
pop
push
sub
push
ja
shll
xchg
mov
insl
push
cwtl
pop
adc
dec
sub
adcb
mov
in
rcrb
fcoml
xor
cltd
addr16
nop
mov
mov
pushf
outsb
inc
add
jge
loop
jb
ret
ljmp
mov
jmp
loop
jle
inc
xchg
mov
out
imul
mov
in
xor
and
dec
jg
and
adc
dec
test
out
es
push
xchg
mulb
adc
sbb
div
push
les
mov
jae
scas
dec
inc
jge
jg
xchg
in
cmp
std
scas
lds
jnp
and
xchg
add
cmovno
stos
test
lds
enter
mov
mov
adc
mov
sbb
pop
lea
call
movsb
pop
fld
xchg
jg
fldl
ficomps
jbe
mov
arpl
mov
xor
pop
mov
jo
shr
fcomi
pop
push
push
inc
cwtl
pop
push
pop
lock
ret
push
sbb
or
jmp
jl
movsb
mov
cmp
les
mov
int3
add
je
adc
jecxz
lahf
pop
or
jns
inc
cmpb
lock
mov
mov
push
inc
sub
xchg
push
and
cmpsb
fcompl
push
or
ss
std
fs
xor
push
jns
sbb
sub
inc
popa
cltd
inc
push
aaa
cmp
and
pop
adc
in
into
aaa
stos
loopne
rclb
jmp
cmp
out
and
xor
arpl
icebp
adc
pop
in
jmp
ret
cs
pop
xor
jge
pop
push
add
adc
fs
mov
adc
loopne
jge
clc
mov
sub
in
scas
pop
jmp
jo
cld
mov
aas
inc
mov
mov
leave
or
pop
inc
dec
rol
stc
int
cmp
push
int3
cli
imul
cmpsl
jne
mov
fdivr
fwait
test
bound
inc
xor
scas
int
out
cltd
mov
lds
loopne
lret
int
es
cmc
mov
jns
push
repnz
sbb
pop
test
add
and
adc
out
jle
xor
pop
stos
jb
movl
ljmp
mov
mov
add
notb
mov
fdiv
in
mov
mov
pop
xchg
in
shrb
lret
in
arpl
and
add
test
loopne
nop
inc
stos
ds
outsb
movsl
std
rcrb
and
mov
lods
in
mov
lods
push
add
mov
xor
dec
pop
insb
out
mov
dec
inc
test
imul
pop
loop
mov
scas
clc
jbe
ret
pop
adc
inc
pop
in
pop
addr16
cmpsb
inc
mov
jbe
lods
push
mov
add
pop
lcall
pop
orb
fcompl
lret
lods
fwait
mov
dec
repz
mov
aam
inc
leave
add
lods
ror
push
jl
daa
rorb
insl
int3
fadd
push
mov
es
mov
fdivrs
in
outsb
xchg
sub
mov
inc
iret
lds
mov
xlat
xchg
cli
inc
sbb
dec
bnd
imull
jecxz
jns
ja
adc
xchg
jge
xchg
insl
movsl
iret
icebp
xor
ds
outsb
stos
jnp
es
fst
out
outsb
sar
cs
into
push
cmp
rorb
push
pop
add
cli
xor
loopne
mov
ret
es
add
ljmp
mov
int3
push
xlat
jp
mov
fisubrs
call
pop
in
aad
js
add
cmpb
fldcw
pop
push
aas
push
fimull
fstps
mov
inc
jne
cli
mov
jl
std
xchg
insb
scas
lret
jo
ja
insl
enter
add
push
mov
mov
push
adc
adc
loop
push
pop
xchg
add
adc
and
jns
and
out
jae
cmc
cwtl
cwtl
ss
and
pop
lahf
notb
jnp
mov
jg
dec
push
push
jmp
inc
insb
das
jp
dec
popa
adc
or
sub
lret
sbb
xor
sub
cli
cmpsb
mov
mov
push
fistl
mov
inc
inc
std
in
rcll
leave
sub
or
or
adcb
lcall
rolb
lds
mov
mov
xchg
aas
add
in
test
mov
push
je
scas
mov
and
lods
xor
and
test
adc
adc
nop
call
cmpsb
sysenter
pop
cwtl
repz
mov
inc
mov
int3
jns
mov
push
cwtl
dec
rolb
dec
mov
movsb
andb
adcl
cmc
imul
or
cmpsb
lock
icebp
lret
push
xor
pop
cmp
add
addl
pop
fcoml
and
push
cmp
mov
add
or
push
add
lret
call
fsts
arpl
out
xchg
sub
jbe
jle
jo
in
sub
test
sbb
je
inc
or
data16
cltd
xchg
mov
cmp
dec
jns
dec
dec
dec
cmp
int3
in
sbb
sbb
push
pop
lret
inc
aad
roll
or
les
fcmovnbe
push
pusha
pop
aam
fsincos
jp
int3
xchg
sbb
pop
cli
cmp
inc
in
lret
sti
push
push
mov
lea
stos
je
mov
add
mov
fcompp
adc
dec
dec
bound
mov
push
pop
subb
xor
ror
sub
jmp
shrb
rcrb
repz
call
push
sbb
adc
cwtl
pop
and
push
push
jl
sbb
adc
jne
dec
gs
pop
inc
pop
ljmp
mov
bound
pushf
push
pop
push
outsl
scas
mov
das
cltd
jp
psllw
add
pop
es
enter
mov
or
or
and
dec
pop
sub
clc
adc
xlat
cmc
bound
pop
dec
cs
or
bound
mov
adc
pop
stos
addr16
in
cmp
int
mov
push
add
sub
mov
fdivp
mov
roll
loope
jl
sub
and
lock
pop
ret
sti
movl
mov
stc
int3
fs
adc
fildl
enter
movsb
push
inc
or
xchg
sbb
pop
sbb
adc
push
lock
lcall
shrb
dec
ret
cmp
cld
push
cmp
cmc
int
push
xor
sub
inc
add
clc
sub
inc
sub
dec
jne
repz
lcall
jecxz
fnstcw
rcrb
rclb
jnp
cwtl
sbbb
cmpsb
and
sub
xchg
xor
ljmp
aas
cs
imul
push
add
add
cs
or
inc
pop
push
lret
mov
sahf
shrl
xchg
aaa
and
out
lcall
jmp
and
mov
pop
adc
fimuls
xor
outsl
imul
xor
inc
sub
leave
loope
popf
fsubl
out
dec
sbb
push
xor
xchg
scas
fld
les
aad
sbb
jp
xchg
jnp
out
test
lret
sbb
pop
jno
loop
ret
push
dec
fidivs
dec
sbb
ret
jmp
outsb
mov
shlb
mov
shrb
pusha
ss
into
dec
int3
or
das
mov
and
add
adc
mov
stos
inc
add
dec
or
ret
push
mov
push
cmpsl
pop
loope
add
in
fst
inc
adc
jmp
inc
aas
cmp
int3
movsl
arpl
call
stos
push
push
xor
inc
sbb
adc
mov
shlb
dec
imul
js
pop
jge
cs
mov
int3
cmp
sub
lahf
lods
int
mov
mov
and
push
xchg
call
aaa
mov
mov
pop
adc
jge
enter
mov
xor
push
mov
icebp
mov
outsl
dec
cmp
and
mov
mov
mov
add
xlat
in
fadds
pop
loopne
sub
jg
out
jge
cmp
jge
dec
mov
dec
rclb
out
ret
mov
add
adc
shll
pop
dec
fdivs
pop
or
and
cmp
push
jge
insb
loopne
mov
push
push
jp
ret
sbb
sbbb
push
xor
mov
and
mov
fwait
nop
lcall
jo
add
cltd
jp
or
dec
push
and
add
cltd
stos
addr16
jne
addb
xchg
mov
jns
xor
inc
out
dec
movsb
pop
sar
repnz
lea
inc
mov
popa
out
jnp
stc
push
cmc
outsl
pushf
pop
lahf
cmp
xchg
ss
hlt
add
add
mov
bound
in
inc
bound
arpl
popl
aaa
xchg
scas
pop
adc
mov
mov
push
outsb
and
xor
and
xor
lahf
xlat
adc
in
sub
mov
outsb
scas
dec
adc
push
loop
hlt
add
rcrb
rorl
aam
das
fcmove
test
pop
push
icebp
inc
cld
dec
dec
out
nop
repnz
and
ret
xchg
out
mov
ds
mov
add
dec
cmp
loope
jns
xlat
mov
es
add
xchg
dec
shll
push
cmp
adc
jmp
loopne
adc
adc
mov
lods
push
sar
pop
js
cli
je
and
shlb
fs
xor
filds
js
test
push
mov
imul
fistpll
or
ret
push
sarl
gs
loopne
mov
add
push
out
inc
pop
data16
mov
rorb
nop
lcall
mulb
shrl
pop
sti
mov
lods
mov
sbb
insb
outsl
or
mov
jecxz
stc
xchg
push
xchg
xchg
rol
insb
jnp
cld
dec
fstp
es
pusha
mov
lahf
shll
repz
xor
pop
or
cmp
lock
and
call
jle
test
cwtl
ds
sub
cmp
add
pop
and
mov
and
xchg
ja
shl
cltd
pusha
int
push
bnd
pop
xchg
add
cmp
ret
mov
sti
push
aam
cmpl
in
cmpsl
cltd
adc
mov
push
pop
or
pushf
mov
push
or
lret
sbb
lcall
or
add
movsb
mov
add
cmp
sub
push
stos
mov
cmp
xchg
out
add
shlb
jp
adc
jecxz
adc
inc
popa
icebp
mov
xor
xchg
lea
test
inc
dec
cmpsl
inc
add
sub
mov
xchg
jmp
inc
lock
neg
pop
out
jecxz
adc
and
js
lock
and
mov
dec
cmp
ljmp
out
leave
lods
push
test
xchg
mov
xor
ret
fcom
mov
pusha
loope
push
cmp
cs
popa
loop
mov
in
bound
outsb
mov
mov
outsl
addr16
pop
dec
test
shl
push
rorb
dec
scas
jg
and
adc
sbb
mov
in
sbb
xchg
jae
nop
cmp
out
adc
fnsave
pop
mov
mov
cmpsb
inc
pop
nop
pop
lahf
push
inc
dec
pop
mov
cmpsb
fsubrs
xchg
aaa
mov
test
mov
and
fmull
mov
or
je
lret
ja
cwtl
roll
mov
jae
pop
sbb
int
popf
push
scas
push
leave
xlat
aad
iret
mov
add
fildl
call
insl
loopne
sbb
mov
dec
sti
pop
les
std
jo
jno
ret
sbb
push
and
mov
xor
and
push
jne
cmp
mov
shll
in
or
ret
jg
in
roll
pop
sub
mov
jge
xchg
std
popf
popa
pop
subl
cwtl
jno
decl
sahf
and
add
and
mov
sbb
aad
or
fildl
in
pop
loop
sbbb
mov
add
sub
ss
jne
xor
lods
push
daa
shlb
std
mov
insb
or
push
mull
sub
sbb
xor
xchg
shl
mov
faddl
push
aas
sub
scas
xchg
lret
insl
rolb
inc
ljmp
rcl
pop
roll
setbe
adc
xor
inc
sub
add
cld
subl
fdivl
mov
fsubs
lock
adc
mov
mov
int3
sub
in
scas
test
mov
es
lods
cmove
cwtl
test
ss
cwtl
pop
xchg
push
faddl
jge
mov
stos
out
scas
stc
lock
push
ror
pop
loop
sub
mov
push
pop
shlb
fimuls
mov
icebp
jg
outsl
scas
push
cltd
jmp
shl
jno
imul
mov
mov
out
push
imul
test
jbe
into
jb
jmp
not
add
lret
icebp
outsb
xchg
push
rorl
sub
sar
pop
loope
in
es
fnstenv
insl
testl
loopne
dec
mov
rcrl
repz
sub
outsb
cmp
popa
shrl
outsl
jae
mov
lds
jmp
adc
dec
cmpsb
mov
push
add
xchg
inc
mov
and
dec
adc
add
inc
jecxz
mov
add
js
xor
pop
or
mov
imull
jecxz
int
jecxz
adc
and
mov
pop
cmc
and
mov
cmpsb
stos
jns
leave
mov
lahf
xchg
mov
int
les
movsl
sub
enter
scas
adc
lock
mov
fistl
pop
shlb
aad
push
bound
and
add
mov
ss
xchg
jb
jl
shll
dec
lret
enter
lret
adc
pop
lods
add
mov
dec
fcoms
shl
cs
add
mov
add
mov
dec
xchg
in
mov
mov
lahf
aam
int
or
andb
push
fistl
icebp
fldlg2
dec
in
jp
in
rorl
mov
jo
push
inc
sub
dec
push
dec
out
and
push
lcall
push
movsb
xor
push
stc
inc
sarb
cmpsb
add
jns
movsb
ret
mov
mov
shrl
outsl
in
sahf
push
pop
cmp
or
mov
daa
std
add
rolb
ret
push
outsb
mov
ret
fdivrl
mov
arpl
icebp
mov
dec
mov
sub
and
test
lret
std
sub
cwtl
je
fsts
subb
stc
or
pop
mov
pop
nop
das
adc
out
sbb
jae
imul
adcb
push
mov
popa
inc
jnp
xor
mov
jbe
mov
je
mov
xchg
insl
lods
fcmovnb
inc
cs
shll
and
lret
push
stc
adc
pop
push
dec
aas
xor
inc
loopne
icebp
sub
push
mov
lock
mov
loope
sbb
or
cs
mov
mov
fst
mov
lret
xchg
add
data16
test
orb
jge
stc
dec
add
xlat
nop
cmp
aam
cld
addr16
push
inc
xchg
xchg
outsb
insl
or
push
inc
daa
sub
rcll
lcall
cmpsl
mov
push
jmp
or
push
addl
dec
sub
lock
test
movsl
xor
lock
add
popf
inc
cltd
fiadds
adc
mov
push
loop
fs
mov
xchg
inc
xchg
cmp
imul
fs
jmp
add
test
mov
and
and
push
xchg
movb
xchg
in
outsb
pop
daa
mov
rep
ja
push
mov
cmp
cltd
pop
outsb
fwait
xchg
popa
pop
pop
sub
or
pushl
adc
repz
fiaddl
imul
mov
lock
mov
lcall
cld
movsl
dec
dec
ret
sub
arpl
xchg
jle
mov
mov
gs
mov
fcmovb
mov
push
and
xor
mov
inc
out
je
xchg
push
and
cwtl
cmp
clc
std
cmc
adc
sbb
pop
repnz
pusha
inc
fadd
jno
shlb
mov
mov
in
popf
and
mov
mov
outsb
loopne
jo
inc
push
lods
mov
add
mov
test
push
mov
xor
mov
inc
xchg
sub
fisubrl
jle
jnp
xorl
sbb
cwtl
cli
popa
pop
or
sbb
cld
scas
and
data16
movsl
mov
pop
cmpsl
into
mov
mov
inc
lret
gs
push
add
pop
lock
add
add
push
adc
cltd
mov
ret
sbb
pop
xor
es
addl
std
jmp
fistpll
adcl
gs
loop
cs
int3
xor
pop
jbe
pusha
adc
into
ficomps
add
leave
sbb
dec
aam
adc
mov
pushf
ds
pop
mov
mov
push
or
dec
nop
call
dec
js
testl
sub
inc
insb
dec
add
xor
sub
mov
jbe
data16
xchg
sbb
adc
add
jle
push
fcmovu
and
mov
xor
stc
xor
jl
adc
or
mov
jp
pop
lods
dec
setns
pusha
sti
xchg
and
data16
jae
call
jmp
add
cmp
add
or
stos
addb
stc
xor
jg
aad
scas
xchg
add
pushf
arpl
push
fistpll
movsb
out
mov
int3
mov
repnz
movsl
jle
cli
aad
sub
in
sub
mov
mov
push
je
dec
outsl
sbb
pop
outsl
pop
das
int
pop
test
xchg
js
adc
dec
lret
or
ds
idiv
sar
jl
xor
and
movsb
xchg
mov
rolb
pusha
xorl
inc
pop
push
repnz
jns
mov
roll
sub
push
push
ljmp
std
sbb
adc
and
das
cld
sub
orl
pop
xor
xor
add
pop
jns
sahf
inc
pop
mov
jnp,pn
inc
rcll
out
insb
push
stos
das
xor
sub
sub
stc
loop
cwtl
mov
lret
cld
xor
sbb
mov
dec
dec
and
xchg
roll
push
xor
mov
in
in
inc
loopne
ds
lahf
or
lret
div
ret
or
jle
dec
pop
jb
sbb
mov
push
icebp
mov
sbb
test
sbb
jnp
outsl
shll
insb
lea
inc
out
xchg
and
fcmove
daa
pusha
int
mov
push
pop
inc
mov
jns
das
mov
jnp
popa
dec
arpl
and
mov
xorb
cwtl
fnsave
sub
mov
ds
jno
mov
cmp
out
out
lds
inc
sbb
inc
or
aaa
or
pop
mov
push
nop
stos
call
clc
fbstp
std
adc
shl
xor
outsl
lret
sbb
mov
xchg
lahf
dec
fnstsw
or
incl
dec
add
icebp
cmp
mov
lods
aaa
loop
imulb
mov
cwtl
xor
gs
xchg
sub
sbbl
pop
xor
pop
sub
aaa
outsb
and
mov
dec
sub
gs
push
mov
int3
mov
imul
mov
test
pushl
mov
stos
dec
fucomi
andl
jne
and
divl
dec
aam
mov
das
repz
mov
int3
mov
lret
rolb
in
pop
jns
gs
insb
mov
pop
fwait
push
xor
add
dec
pop
jge
js
add
int
dec
or
sysexit
aad
filds
mov
mov
mov
xor
push
adc
sub
call
aam
imull
pop
adc
mov
push
test
sbb
pusha
and
imul
stos
or
lret
insb
jae
jmp
cmc
orb
or
sub
xchg
inc
xchg
adc
movsl
mov
or
jle
jnp
sahf
xchg
int3
aam
push
dec
stos
rorb
add
pop
aam
imul
pop
cmpl
aas
call
rolb
sbb
and
rclb
push
mov
aam
xor
cmp
in
adcb
xor
mov
cmp
cli
rorb
add
negl
xor
cmp
and
lret
jno
push
add
lcall
fdivl
fisubs
jp
push
push
ljmp
cmp
negb
fdivrs
es
jl
pop
in
xor
into
pop
push
cmpsl
int
arpl
arpl
cmp
xchg
add
sub
add
in
icebp
jnp
dec
fcompl
mov
jnp
push
call
lds
inc
pop
jp
scas
loop
xor
sahf
pop
imul
scas
jg
insl
lods
fiaddl
cmp
inc
inc
adc
hlt
jne
dec
or
dec
imul
xchg
ffreep
mov
pop
je
or
cld
jmp
push
wrmsr
in
add
dec
push
sub
pop
jns
cld
xchg
bound
test
stos
pop
mov
inc
pop
es
adc
pushl
clc
addr16
not
mov
pop
jae
sub
sbb
cmp
or
test
add
orb
out
imul
movsb
minps
leave
mulb
sbb
faddl
cmp
or
and
push
dec
pushf
bndstx
test
mov
scas
in
or
nop
and
mov
push
sub
add
shl
sti
hlt
fcomps
mov
aam
lret
sub
in
rcll
pop
and
xor
inc
fs
jge
scas
mov
ret
cli
sbb
loop
jns
fucom
inc
cmp
inc
test
in
enter
scas
mov
jg
cmp
jmp
stc
sub
and
jecxz
ss
shrl
push
jg
or
mov
add
mov
mov
sub
mov
cmpl
push
int
push
mov
in
in
pushf
icebp
addl
jne
jmp
lock
inc
jecxz
loope
int3
mov
xchg
sub
lret
loope
lahf
cmp
js
dec
push
add
sub
fsubl
cwtl
jecxz
mov
mov
neg
pop
push
xor
cmc
mov
cmp
adc
dec
sub
call
xorl
mov
out
and
adc
icebp
mov
bound
or
dec
mov
jl
cmp
sbb
push
das
pop
lcall
gs
pop
mov
push
push
mov
and
cmp
lea
in
pop
cmp
inc
cs
popf
sahf
jge
ficoms
repnz
mov
out
mov
out
add
lahf
lahf
in
mov
jbe
std
mov
lret
and
pop
push
push
loopne
push
out
sbb
lea
sub
divb
xor
sub
and
xchg
mov
movsb
mov
shl
mov
mov
frstor
xor
aam
mov
mov
popf
mov
jae
xchg
mov
icebp
pop
jle
xor
iret
lahf
or
jns
xor
fisttpll
or
sub
pop
sub
shrb
push
movsl
shrl
adc
cmp
push
ss
sti
mov
rcrl
fptan
xor
repnz
daa
subb
sub
or
mov
imul
mov
pop
fisttpll
cli
inc
inc
sahf
push
and
in
lock
outsl
sub
insl
push
scas
das
and
loope
jp
out
outsl
lock
loopne
aam
aas
fisttps
push
cmpsl
call
das
xor
lock
into
xor
fmull
imul
fstl
call
push
lods
push
repnz
add
sbb
mov
repz
cmp
push
adc
fsubrl
jle
insb
mov
mov
jae
dec
int
jae
push
adc
movsl
shrl
push
add
in
ja
lret
and
adc
lcall
mov
fcmovu
and
js
icebp
mov
popa
xor
aad
inc
add
test
insb
jno
mov
rcrb
push
mov
and
sub
mov
and
les
dec
push
inc
arpl
or
push
push
adc
sbb
jmp
push
sahf
dec
addr16
jmp
cmc
cmp
hlt
xchg
cmp
fwait
pusha
loopne,pt
mov
push
cli
loop
inc
in
jo
sbb
jb
adc
insl
out
mov
mov
dec
jmp
xchg
scas
shlb
fisubrs
xlat
mov
mov
insl
add
pop
adc
pop
mov
sahf
adc
add
fs
xor
push
ss
pusha
sub
or
add
xchg
test
sub
dec
sbb
into
or
or
hlt
or
dec
repz
push
notl
lret
inc
out
jecxz
je
test
std
insl
mov
mov
push
fcoms
scas
push
ljmp
inc
ja
in
in
pop
and
pop
int
test
add
cmpsl
fs
mov
lds
fcoml
sarl
cli
lods
mov
mov
movsl
mov
or
mov
push
inc
pop
xor
pop
push
sahf
cmp
mov
stos
repz
pop
xor
inc
fnstenv
xchg
test
mov
sarl
and
xchg
jo
mov
mov
adc
push
pusha
addr16
ja
aaa
sbb
adc
fstps
iret
dec
lock
xor
xor
das
mov
dec
pop
arpl
int
xor
pop
add
sbb
dec
nop
cmc
push
scas
mov
fisubl
js
xchg
pop
pop
cmc
lock
daa
mov
jo
bnd
daa
xor
jnp
ret
in
or
loope
add
sub
push
scas
push
dec
push
stc
mov
and
fsts
sbb
xlat
pop
mov
test
lds
int
mov
addr16
out
dec
jns
jp
sub
clc
cli
flds
sahf
pushf
mov
sbb
xchg
jl
cmc
push
cmp
cli
mov
sbb
inc
jns
or
and
inc
mov
sahf
mov
cltd
mov
dec
dec
inc
insb
jne
xchg
das
xor
arpl
and
cltd
ret
adc
xor
jg
mov
imul
cmp
in
sbb
jmp
lds
add
aas
or
xchg
or
and
daa
xlat
scas
fildll
xor
and
xchg
cmpsl
arpl
sbb
mov
push
popa
lods
neg
bound
mov
imul
hlt
mov
inc
jge
or
lods
into
rcll
pop
lock
inc
and
or
adc
sbb
sub
loopne
std
jae
inc
add
inc
or
mov
xchg
xor
dec
push
cmpsb
xor
xchg
dec
push
outsb
movsb
mov
fimull
mov
lods
stos
jae
pop
and
jmp
mov
movsb
les
insb
xchg
movb
test
jns
test
adc
out
aas
jae
aad
dec
pushf
fcomip
mov
cmp
ret
and
adc
mov
xchg
lret
repz
int3
push
ret
fcomps
inc
jge
jg
mov
xor
sbbb
xor
jno
pop
je
mov
sarb
xchg
adc
sub
xor
nop
cltd
push
sti
fadd
mov
lcall
sbb
clc
decl
mov
iret
mov
jg,pt
inc
ljmp
lods
xchg
imul
sbb
outsl
mov
push
int3
loop
iret
push
in
push
sbb
push
push
mov
pusha
fwait
dec
jp
mov
loope
sbb
mov
aad
pop
ds
dec
jg
jno
sbb
arpl
mov
sbb
pop
pop
stos
jge
stos
adc
out
ljmp
mov
loopne
push
test
daa
mov
je
sbb
xor
jne
push
and
add
fldcw
jmp
xor
pop
data16
shll
adc
pop
repnz
insl
and
jg
loop
in
jmp
fisttpl
je
cld
adc
int3
lea
mov
popa
cltd
mov
mov
movsl
into
call
or
ffree
add
inc
mov
movl
in
in
or
stos
lods
std
fisubrs
call
fldt
mov
inc
loope
push
xchg
outsb
les
sub
int3
mov
pop
pop
push
mov
loope
sbbl
mov
jae
scas
shll
cmp
lea
or
and
pop
movsl
outsb
lahf
push
mov
testl
push
les
ss
and
push
fsub
mov
sbb
and
cli
xchg
arpl
push
jno
mov
mov
out
in
cmp
jp
adc
cmc
sbb
mov
and
xchg
xorps
adc
arpl
inc
sarb
insl
ja
loopne
mov
aas
in
push
inc
adc
mov
cmp
out
dec
cmp
mov
movsl
call
out
imul
stc
push
sbb
flds
push
pop
add
aas
mov
fstl
cli
sti
and
aas
aad
mov
js
ret
push
aam
aas
push
shrb
xor
mov
jmp
out
sub
mov
outsb
sbb
or
pop
jmp
enter
pop
mov
xor
cmpsl
dec
mov
out
lcall
push
xchg
lds
lret
xor
xchg
sbb
inc
xchg
sub
add
inc
shlb
movsl
hlt
cld
dec
aaa
mov
nop
adcb
jp
out
jecxz
inc
mov
into
mov
lods
cmp
xchg
jg
mov
cmp
pop
test
icebp
pop
jo
add
hlt
jae
loopne
sub
mov
loopne
jecxz
push
loopne
aad
daa
cmp
arpl
test
mov
lock
jnp
dec
cmp
aaa
mov
movsl
aas
dec
data16
mov
scas
inc
pop
icebp
xchg
sub
xchg
push
pop
push
push
push
pop
jge
sbb
sub
and
rclb
push
and
mov
pop
adc
mov
mov
sub
jge
dec
sahf
out
aaa
push
sahf
lret
dec
hlt
and
out
pop
xor
xchg
test
and
and
inc
jmp
sbb
adc
pushf
and
popa
arpl
outsl
mov
mov
jge
shlb
xlat
aas
movl
ja
pop
sbb
pop
mov
fs
fdivs
out
stc
les
inc
sahf
std
adc
shrl
sar
test
xchg
push
push
insb
out
xchg
movsl
mov
adc
loope
and
enter
push
jne
push
dec
jnp
lods
rcll
notb
pop
cs
mov
adc
sub
push
add
sbb
repnz
or
rorl
ja
fs
mov
mov
adc
and
mov
mov
loope
shr
in
leave
lea
push
and
mov
push
cmpsb
dec
stc
loopne
outsl
cmp
inc
jne
sbb
rorl
js
mov
test
or
cmp
std
popa
add
aaa
mov
or
push
repz
fcoms
add
jnp
repz
dec
cmpsl
mov
mov
and
cmp
repz
pusha
lock
mov
pop
dec
inc
dec
out
sbb
pop
fadds
mov
enter
jae
lods
push
and
testb
dec
cmp
xchg
mov
mov
jne
add
inc
cs
inc
jae
cmp
inc
jae
mov
adc
inc
xor
prefetch
or
mov
mov
fs
add
sbb
gs
push
inc
sub
cmp
pop
sbb
out
jle
ss
xor
fmulp
out
es
mov
jle
out
dec
fs
stc
repnz
test
addr16
popf
mov
xor
mov
sarl
int3
sbb
outsb
popa
mov
fwait
jb
rcrl
or
add
pop
xlat
enter
pop
pop
lahf
jbe
je
fisttpl
icebp
ret
mov
mov
fnstenv
outsl
lods
inc
mov
test
out
movsl
push
sub
pop
gs
sbb
xor
cs
pop
jp
cli
out
dec
arpl
add
and
in
ss
inc
scas
jle
sub
pop
orl
cmc
daa
mov
sahf
cmpsb
xor
xchg
jnp
in
adcl
mov
push
jge
and
movsb
xchg
clc
pop
fdivrs
jmp
adc
xchg
rcrb
adc
sahf
into
inc
test
aaa
push
int3
test
jae
xchg
in
adc
or
mov
arpl
push
mov
push
sbb
mov
pop
mov
call
jecxz
lret
and
push
cld
mov
xchg
cmp
cld
loop
bound
sarl
cmp
sbb
xor
rolb
fidivl
shl
xor
jg
loop
cli
shrb
jne
movsb
movsb
stc
iret
and
sbb
or
mov
insb
jb
jne
decl
inc
dec
rcrb
mov
push
sbb
pusha
lret
pop
sti
mov
sub
sti
lcall
cmp
cmc
xor
sti
loope
inc
push
in
mov
subb
dec
pop
add
call
clc
imul
xor
jecxz
pusha
negb
jp
mov
call
xchg
lds
cld
mov
pop
hlt
jbe,pn
outsl
fcomps
add
mov
outsl
mov
push
fsubrs
xlat
mov
loopne
sbb
mov
mov
cmovne
mov
inc
in
adc
or
or
imull
mov
jbe
add
xlat
lahf
mov
test
test
int3
adc
pop
jb
inc
mov
loop
aam
mov
arpl
push
arpl
inc
adc
cmp
cmpsl
je
dec
movsb
inc
push
push
jecxz
test
fbld
mov
pop
aad
fdivrs
gs
mov
or
jg
mov
sub
xor
outsb
dec
inc
stos
xchg
aas
or
ds
mov
xchg
lret
fnsave
stc
cmp
sbb
fisubrs
mov
or
mov
lcall
test
mov
and
xchg
andb
jns
and
pop
imul
lods
je
dec
int3
aas
pop
addl
jbe
sbb
jb
stos
push
dec
test
loopne
ljmp
int
rcrb
fs
jl
dec
ja
fldt
push
sbb
and
sbb
adc
cmp
jns
lahf
mov
xchg
and
pop
xchg
sbb
aaa
inc
add
imulb
fdivrl
ret
sub
push
xchg
popf
daa
data16
lcall
shl
push
mov
sbb
lcall
pop
cmp
jle
int3
dec
stos
insl
movb
mov
and
add
sbb
and
mov
inc
es
inc
popf
push
push
push
mov
dec
pop
leave
cmpl
cmp
sbb
xchg
xor
or
xor
jle
mov
dec
ljmp
sub
lcall
sbb
scas
repz
dec
mov
ds
ret
leave
add
stos
flds
mov
ljmp
ret
int3
out
mov
pop
push
into
pop
xchg
cmp
nop
into
jg
jno
push
jae
cltd
iret
mov
mov
mov
or
loope
icebp
sahf
inc
adc
push
add
dec
mov
mov
cmp
mov
jl
dec
fmull
jae
test
mov
pop
or
lods
mov
imul
andl
cmpsl
fucomip
scas
imul
push
push
addr16
gs
pop
negl
inc
jp
repz
pop
aaa
jne
in
lahf
add
aam
adc
aad
into
pop
movsb
adc
add
sbb
jnp
push
push
mov
xchg
mov
mov
dec
cltd
mov
mov
jno
adc
xor
aam
mov
xor
xchg
jne
jecxz
adc
dec
pop
xchg
int
and
mov
inc
and
fisttpll
push
aad
aam
aad
inc
cmp
imul
repz
adc
mov
sub
subb
scas
pcmpeqb
add
sbb
loope
push
stos
jbe
out
sbb
add
mov
pushf
dec
imul
enter
adc
adc
inc
mov
nop
aam
fs
rorl
adc
imul
dec
sub
test
pusha
arpl
testl
mov
inc
cmpsl
xchg
pop
xor
movsl
add
and
cmpsb
ret
lds
or
das
gs
or
pusha
enter
or
into
test
shl
jae
or
lds
lahf
jns
push
fistps
mov
jno
aad
sub
xchg
enter
push
sbb
or
scas
xchg
add
jae
push
fsubrl
mov
outsl
and
xorl
push
call
mov
stos
jl
dec
sub
ror
adc
lods
mov
xchg
sub
and
lret
xchg
pop
out
inc
cmp
cmp
sub
xchg
mov
loope
jnp
push
cmpsl
sbb
mov
dec
repz
test
lcall
rcrb
sbb
mov
adc
ret
stos
mov
lret
cld
subl
call
or
sbb
inc
mov
add
std
pop
seta
repnz
fistl
jno
push
js,pn
xorl
shrl
push
jl
push
push
in
sub
pop
fistps
jp
js
dec
or
sub
aad
cs
shlb
outsb
aas
dec
xchg
popa
aam
neg
push
int3
xor
xor
dec
pop
int
mov
ja
inc
les
push
jp
cltd
jle
arpl
fisttps
inc
popa
jbe
xor
pop
or
in
ret
sbb
insl
and
pop
xchg
push
aaa
repnz
cltd
cmc
les
pop
into
movsb
fwait
jl
push
and
adc
cmp
push
jb
xor
ficomps
jbe
push
leave
mov
jbe
orb
outsb
mov
dec
jg
insl
dec
mov
sub
sar
ss
push
stos
ja
rol
jb
arpl
setp
aad
mov
xor
sub
outsl
add
sbb
adc
add
lcall
aaa
andb
push
cwtl
adc
cmp
jno
icebp
aam
mov
xor
adc
stos
xchg
mov
fbstp
inc
in
mov
out
add
jle
xor
sarl
mov
fmulp
inc
xchg
cmp
and
inc
xchg
jns
and
mov
fucom
push
and
adc
scas
ret
jno
bound
js
xor
mov
xchg
hlt
pop
or
mov
pop
popf
push
push
mov
push
leave
and
dec
lret
insl
mov
push
jp
popa
bound
iret
mov
mov
mov
mov
or
cmp
or
adc
mov
sti
bswap
jbe
inc
fwait
pop
lcall
xchg
dec
cmp
daa
sarb
bound
jne
add
movsl
mov
int
sbb
aam
loope
mov
js
cltd
iret
sti
cmp
cs
jno
pop
sarb
loope
iret
mov
push
fisttpll
pop
pushf
scas
and
outsb
xor
pop
shrl
or
jno
es
stos
push
mov
rclb
je
mov
ja
mov
cmp
gs
mov
xchg
or
es
imul
cmp
ss
and
fstps
mov
vpshaq
ds
ja
aam
dec
push
dec
dec
mov
mov
pop
sbb
pop
imulb
push
das
lock
xchg
push
and
sbb
cli
scas
loop
loopne
das
add
mov
fwait
imul
push
ror
call
jmp
mov
popa
pusha
push
inc
xor
cwtl
pop
movsl
stos
push
cmpsb
jp
mov
stos
cmpsb
mov
adc
mov
add
push
inc
pop
inc
pop
cmp
pop
mov
iret
pop
stos
lret
sub
iret
mov
mov
jl
sbb
mov
or
jae
loop
jle
push
icebp
lock
outsl
cwtl
xor
push
test
mov
add
dec
cmp
pop
adc
cld
subl
mov
pusha
jno
jmp
xor
cld
add
xor
cmp
in
sbb
std
lahf
test
cld
add
orl
mov
in
pop
push
mov
pushf
arpl
repz
stos
sbb
leave
pop
jae
sbb
xchg
or
rolb
aas
xor
sbb
ja
mov
mov
sbb
mov
fnstsw
test
dec
jns
pop
ja
sub
xchg
movsl
rcrb
movsb
cld
xchg
rcl
mov
icebp
sti
jg
xor
imul
pusha
lods
loope
push
inc
repz
cwtl
pop
inc
orb
fimuls
packsswb
push
sbb
ror
cli
xchg
ljmp
dec
cmpsl
add
sbb
push
push
movsl
jno
je
mov
rorl
mov
and
or
xchg
lahf
push
xor
stos
ja
cmpsb
xchg
jle
outsl
int3
ret
int3
mov
push
xchg
pop
cli
xchg
jecxz
add
and
lods
add
add
sbb
data16
insl
adc
fisttps
pop
jns
mov
mov
mov
pop
push
push
js
fdivrl
push
mov
add
cmp
mov
push
dec
dec
daa
jle
add
mov
fisubrs
imul
mov
and
push
add
fimull
enter
out
xchg
lea
sub
inc
cmc
xor
lock
stos
cltd
cmp
divl
fs
pop
icebp
sub
ljmp
mov
push
mov
add
fs
mov
ja
lock
mov
push
sub
fwait
xchg
jmp
insl
xchg
in
pop
jmp
test
decb
lock
cmp
subl
xor
mov
test
inc
and
incb
jl
mov
sahf
dec
dec
adcb
shl
and
push
sub
pop
push
jge
pop
cmp
int
pop
push
mov
push
shl
daa
inc
push
repz
jo
sub
adc
addb
lcall
mov
popa
jno
sbb
fsubrs
cmp
aas
push
inc
and
jmp
je
or
scas
clc
stos
and
xchg
ss
imul
lock
mov
adcb
adc
ficompl
cli
les
lret
sub
fs
jp
gs
add
ds
xchg
scas
scas
jns
and
mov
mov
dec
hlt
push
out
add
cwtl
test
shrl
jnp
es
roll
xchg
in
or
outsb
les
cld
mov
add
stos
shlb
and
fcoms
setg
mov
mov
ficomps
lcall
mov
outsb
fisubrl
add
sub
pop
daa
pop
cli
ja
cmp
jae
mov
into
fadds
jg
cmp
mov
mov
push
cmp
stos
mov
movsb
push
fwait
adc
inc
hlt
push
cs
addr16
mov
fsubrl
sub
cwtl
jno
sub
push
rolb
dec
leave
out
stc
cmp
loopne
add
hlt
cld
call
enter
pop
xorl
adc
leave
mov
cmovbe
sub
sbbl
call
mov
cmpsb
int3
inc
call
mov
sbb
sub
cld
cmpsb
cld
xor
lret
xchg
sub
mov
mov
cmc
loopne
out
pop
jae
fwait
test
test
fwait
inc
inc
outsb
inc
mov
pop
lods
int
fsubl
aad
dec
inc
dec
stos
imul
popf
add
dec
and
cwtl
push
pop
push
mov
aad
arpl
pop
mov
push
test
push
mov
mov
in
ffree
out
jae
cmpsb
sbbb
or
pop
rcrb
scas
dec
xor
xor
sub
mov
sbb
enter
pop
mov
insb
lods
mov
out
shlb
jno
add
pop
add
adc
push
stos
cltd
sbb
adc
sub
shr
dec
mov
data16
stos
shll
cmp
loopne
test
jmp
cmp
in
cmc
push
sub
add
je
test
sub
sub
mov
and
pushf
sbb
mov
rolb
sbb
out
or
sbb
mov
pop
mov
fwait
inc
jo
mov
lret
fmul
jae
orb
scas
out
ja
add
in
int3
mov
out
stc
xchg
sub
lret
test
push
fldcw
sbb
add
jmp
pop
cmpsl
outsb
dec
push
popa
add
scas
sub
xchg
repz
imul
cmpsl
mov
repnz
loop
mov
hlt
and
mov
or
jbe
out
xor
stos
mov
mov
inc
int3
push
push
je
fwait
stos
es
add
insb
sbb
dec
outsl
pushf
int3
push
inc
xor
fmul
aas
daa
lods
cmpsb
mov
mov
jmp
mov
add
mov
lahf
mov
xor
add
push
mov
in
cli
dec
das
jle
lcall
packssdw
add
loope
in
cmc
jp
mov
mov
in
sarb
sarl
xor
negb
jp
in
pusha
push
test
xor
xchg
mov
rcrb
fadd
repnz
adc
out
ss
xor
mov
mov
mov
movl
inc
mov
pop
jge
aam
mov
pop
inc
in
mov
fwait
loope
rol
aam
out
cmp
xor
mov
imull
es
inc
shlb
lahf
rclb
mov
rcll
xor
pop
mov
push
fwait
call
mov
mov
push
jl
mov
sbb
mov
leave
mov
mov
sub
xor
fldenv
cltd
and
or
sub
dec
sarl
aam
adc
mov
lahf
into
stos
add
push
imull
push
cmpsl
js
push
adcb
loopne
or
push
adc
cmp
add
hlt
sub
lret
js
xor
mov
scas
mov
fbld
xchg
subb
std
fistps
adc
xchg
xchg
hlt
or
imul
cli
inc
pop
jb
mov
test
and
dec
int3
fistpll
stos
inc
push
test
jecxz
pop
and
cmp
loop
mov
mov
out
test
push
icebp
mov
jge
mov
pop
jo
push
lods
xor
pop
in
and
and
add
pop
jae
mov
jl
dec
or
mov
xor
mov
and
iret
imul
add
mov
dec
adc
jno
mov
repz
pushf
jg
fwait
mov
addr16
or
inc
sub
jnp
xchg
lods
stos
xchg
cmp
fwait
sbb
cwtl
les
sahf
xor
cmpsb
loopne
mov
adc
mov
inc
dec
dec
pusha
jmp
jne
cmpb
dec
push
inc
rorl
fdivrs
rolb
push
loope
inc
jmp
pop
fldt
insb
data16
inc
pop
mov
cltd
jecxz
push
dec
fnsave
iret
movsl
lcall
mov
jecxz
aam
xchg
scas
dec
sahf
test
filds
loope
jnp
ja
sahf
pop
push
mov
les
adc
or
cmpsl
lcall
dec
sti
iret
adc
cli
notl
out
mov
jl
mov
fcoms
ja
pop
cmp
xor
insb
aas
dec
jae
add
testb
in
stc
clc
aas
std
or
pop
addr16
xchg
std
shlb
adc
push
pop
imul
mov
xchg
xchg
adc
mov
dec
inc
xchg
loopne
push
and
or
mov
push
fnstsw
test
arpl
jecxz,pn
lcall
popf
loopne
or
cmp
int3
shrb
cld
in
xchg
xchg
cmp
pop
aam
scas
insl
push
jp
mov
cmp
jno
cmpsl
out
mov
sub
cmp
add
xchg
loope
or
mov
adc
dec
sub
ja
xchg
jp
cmpsl
push
das
cmc
pop
aad
fdivrl
lahf
call
jbe
mov
dec
and
sub
pop
sbb
xchg
mov
mov
mov
pusha
xchg
je
sub
repz
iret
mov
mov
push
sub
cmp
push
inc
jne
mov
sub
xchg
dec
std
and
in
xchg
int
jns
pop
pop
mov
dec
pop
or
and
jecxz
or
cmp
adc
addb
mov
nop
aas
adc
mov
pop
jmp
repnz
or
cmpsb
lahf
sti
lea
xchg
movsl
mov
inc
loopne
out
mov
fs
push
hlt
iret
inc
cmp
gs
inc
loop
addb
cmp
adc
bound
mov
cld
mov
cmp
out
mov
mov
push
loopne
mov
pop
and
adc
out
movsl
mov
movsb
out
dec
scas
and
push
jle
movsb
lea
inc
cli
or
enter
daa
data16
dec
jnp
inc
fdivl
outsb
pop
and
iret
sub
je
cmp
movsl
btl
mov
cltd
lock
cmp
into
mov
aas
xor
pusha
gs
add
mov
lret
adc
sub
rcrl
out
lahf
cmpsb
fnstenv
data16
jb
push
fdivs
outsb
pusha
fistps
and
xchg
cwtl
pushf
scas
in
outsb
fcomp
adcb
jmp
cld
and
adc
fisubrs
je
in
dec
pop
leave
push
cmp
pop
popa
jge
fwait
push
in
adc
fstl
inc
lock
loop
cs
test
daa
test
inc
dec
xor
adc
sub
lds
xor
and
push
push
mov
fildll
pop
mov
lds
dec
gs
sbb
pop
aam
fidivl
pop
data16
outsb
lods
jno
test
jge
xor
lock
mull
daa
add
xchg
xchg
test
icebp
push
ljmp
mov
push
insl
jnp
adc
repnz
sahf
pop
hlt
push
fs
mov
fidivl
pop
addr16
mov
loop
xor
push
idivb
outsb
test
imul
cmp
pop
adcb
imul
inc
inc
push
adc
mov
pop
inc
lds
popa
mov
adc
pop
add
mov
add
imul
addb
aas
sarb
es
inc
loopne
xchg
jmp
andnps
add
lea
ficompl
insb
popa
inc
xor
jne
scas
lock
lret
neg
xlat
or
add
inc
sub
adc
jg
ret
and
arpl
lret
nop
out
mov
xchg
adc
in
nop
adc
out
and
and
mov
leave
out
and
lret
inc
movsb
and
aaa
xchg
testl
add
cmp
sub
clc
stc
jle
shrl
ljmp
call
add
adc
dec
or
push
in
movsl
and
pop
jbe
scas
or
inc
push
push
mov
jecxz
or
mov
rcll
or
pop
rcrl
pop
mov
ss
rclb
sbb
aam
mov
mov
faddl
and
jp
push
cmp
mov
mov
fisubrl
pop
jecxz
stos
addl
mov
sbb
scas
mov
mov
imulb
repnz
mov
in
push
cmp
and
push
mov
or
inc
int
lock
call
xlat
das
pop
orl
adc
xchg
add
push
stos
stos
add
push
in
std
movsl
inc
outsl
in
xlat
movsl
stos
cmpsb
pushf
insl
loope
stos
enter
pop
dec
lret
rcll
push
imulb
xlat
imul
pop
sbb
pop
and
fisttpl
cmp
adc
lods
xor
movsl
sub
sbb
ja
mov
adc
xchg
int3
jp
into
aam
adc
xchg
pop
punpckhdq
push
in
lds
ret
leave
sub
adc
mov
mov
pop
jecxz
push
mov
sti
aad
cmpsb
repz
mov
test
lahf
leave
imul
mov
icebp
bound
jno
bound
int
mov
pop
dec
add
js
fdivrl
inc
dec
lods
out
and
pop
push
je
sub
add
test
mov
pop
or
xor
adc
jmp
iret
mov
movsl
jmp
cs
mov
jns
sbb
ds
decl
dec
pop
inc
imul
loopne
add
popa
nop
and
int
jge
push
sti
rcrb
les
or
stos
sti
mov
inc
fwait
aad
arpl
call
xchg
in
popf
cmp
xchg
scas
and
or
adcb
xchg
jecxz
jo
pushf
shlb
lock
nop
stc
sub
ss
sub
mov
lods
mov
xchg
cmp
inc
sub
or
jp
jp
test
mov
jl
pushf
mov
pop
push
or
sub
into
aaa
and
aad
test
jnp
inc
jno
stc
stos
std
push
mov
cltd
adc
ret
push
insb
add
mov
jae
sub
push
sarl
jp
cmova
add
adc
push
sbb
insb
mov
xchg
rcl
outsb
movsb
fisttpll
pushf
mov
or
das
movsb
mov
and
push
std
xor
ret
inc
test
fwait
mov
shll
popf
loope
imul
gs
sbb
jecxz
scas
bound
imul
push
cmp
imul
push
push
sub
das
jmp
lock
sahf
xor
shr
inc
adc
std
ffreep
mov
dec
xchg
sti
lret
test
rolb
or
ljmp
pop
popf
push
imul
dec
and
jmp
stc
popa
fwait
xchg
pop
notl
sbb
mov
lods
xor
push
dec
inc
les
inc
adc
jo
cmp
je
aad
inc
les
cmpsb
or
pop
cmpsl
rclb
sahf
inc
and
mov
push
les
dec
out
aad
xchg
in
call
mov
and
push
mov
lds
xchg
shll
xor
psadbw
cmp
xchg
inc
fimuls
mov
mov
imul
pop
addr16
test
add
mov
nop
ds
inc
fwait
cwtl
sub
xlat
or
fwait
push
jecxz
jle
out
stos
or
adc
or
nop
mov
jo
pop
mov
mov
xchg
je
test
shll
loope
adc
and
xlat
adc
loope
mov
jle
mov
add
ds
mov
and
push
das
jl
xchg
testb
mov
or
les
scas
mov
mov
sub
add
hlt
dec
call
pop
push
leave
addl
xchg
int3
xchg
cltd
cld
cmp
sarl
push
cmc
add
int3
jle
gs
mov
cmp
repz
les
test
out
add
add
lods
insb
pop
pop
in
pop
cs
dec
push
cmpsl
test
jo
dec
rclb
pushf
out
test
inc
fisttpll
adc
mov
pop
into
sarl
cmp
hlt
dec
add
mov
or
stos
sub
xor
bound
loop
pushf
xor
fdivrl
add
mov
imul
hlt
daa
mov
adc
sub
outsl
in
dec
mov
enter
jns
in
test
cmpsl
dec
subl
pop
cmc
mov
mov
sahf
sti
sub
xchg
outsb
mov
repz
cli
hlt
imul
sub
xor
push
adc
xchg
xchg
dec
mov
pop
pop
or
popf
adc
adc
mov
mov
cltd
or
mov
dec
mov
call
add
dec
lahf
push
insl
stos
inc
pop
lods
dec
sbb
add
lret
xchg
or
jnp
ret
inc
mov
lret
ret
lcall
aam
pusha
sub
lods
inc
in
sbb
clc
cmp
gs
jns
cli
ret
jno
int3
ss
scas
shlb
xlat
sbb
subl
cld
xchg
fstpt
stos
xlat
dec
pushf
mov
lret
ficompl
pop
pop
pop
out
fwait
lds
push
inc
sbb
imul
das
and
xor
aad
jo,pn
inc
outsl
into
movb
mov
cmp
pop
xchg
sub
pusha
andb
inc
cld
mov
mov
sahf
lret
sub
sar
nop
mov
jge,pt
mov
enter
sbb
mov
pop
mov
lahf
push
xor
daa
pop
add
rol
test
fmull
mov
pop
data16
fs
ficoml
add
mov
push
xor
js
push
xchg
stos
mov
xchg
ljmp
inc
fistpll
fs
xor
add
cltd
sti
add
jmp
fs
push
adcb
xchg
fstps
leave
sbbb
mov
dec
ljmp
inc
jecxz
mov
and
and
or
pop
cltd
adc
testl
rolb
nop
imul
add
dec
mov
popf
push
mov
lds
incb
mov
test
jo
xchg
cld
push
adc
int
in
fdivl
xor
inc
loopne
sbb
mov
fbstp
xchg
cmc
pop
lret
or
lret
cwtl
inc
js
fdiv
jno
not
adc
sahf
vphadddq
or
lock
into
div
ret
xor
test
in
mov
mov
pop
or
pop
xor
pop
test
fwait
mov
adc
outsl
les
adc
cltd
jl
scas
xlat
je
in
mov
pop
lret
in
jmp
push
sub
repnz
test
mov
sahf
push
mov
ja
mov
in
dec
dec
aam
jbe
in
aaa
sub
ret
cmp
pop
sub
cmp
mov
ja
imul
add
mov
ljmp
mov
and
dec
mov
or
push
mov
adc
sbb
mov
xchg
sete
mulb
shrb
int3
movsb
sbb
jnp
inc
int3
lahf
mov
mov
jg
push
dec
lods
jg
push
push
push
mov
incl
int
gs
addb
ss
dec
stos
xor
std
mov
push
jns
mov
xor
leave
push
xchg
mov
shrb
sbb
pop
mov
adc
xchg
icebp
gs
mov
xchg
outsb
push
les
out
pop
lahf
xchg
in
push
sbb
movhpd
fwait
sbb
insb
mov
jb
fildll
adc
add
xchg
fcomip
jl
push
leave
dec
ss
shrl
dec
jge
jns
jle
dec
outsb
lods
cmp
pop
inc
or
pop
ds
cmpsl
in
sbb
dec
inc
loop
dec
aad
jmp
mov
imul
mov
sub
das
mov
jmp
cmp
fistpll
mov
mov
ficoms
add
push
sbb
icebp
sbb
fiaddl
xor
dec
mov
mov
and
and
nop
push
xor
pop
inc
dec
mov
orb
lret
mov
or
xchg
sub
lret
mov
adc
push
int
je
out
ja
mov
jmp
mov
and
sbb
movsl
sbb
movsl
es
dec
xchg
movd
stc
mov
sub
mov
movsl
mov
dec
adc
xchg
bound
in
and
xchg
jne
pop
es
mov
int3
popf
loope
aam
lcall
push
jl
sub
jg
je
lea
sti
enter
sbb
mov
nop
add
push
aaa
cmpsl
jl
cmpsb
xchg
orb
sub
ja
scas
lods
jle
sub
dec
cltd
pop
lods
sahf
fwait
test
push
inc
cwtl
mov
cmp
dec
bound
les
and
mov
xchg
cmp
mov
add
repz
ds
mov
test
imul
into
dec
mov
push
pop
mov
cs
call
pop
divl
daa
and
into
repnz
xlat
xorl
out
jnp
add
into
mov
and
mov
sbb
sarb
jb
fidivrl
or
pop
jns
into
cwtl
in
lret
add
sbb
dec
sub
in
std
and
cmp
lods
inc
push
push
lods
outsb
pusha
loop
arpl
mov
push
mov
or
or
and
test
push
scas
das
enter
lret
jl
cli
and
and
js
push
pop
jae
rol
rolb
out
push
xor
ret
mov
xchg
push
imul
mov
sti
pop
enter
xlat
mov
xchg
jge
xchg
arpl
pop
cld
push
xchg
mov
and
mov
add
xchg
push
mov
fwait
jmp
push
sbb
mov
lahf
inc
in
enter
pop
aam
aad
fimull
pop
cmp
jae
push
mov
and
and
adc
sub
fwait
dec
cmp
cmp
inc
jbe
popl
pusha
movsl
ja
mov
sbb
mov
mov
push
scas
jge
lock
mov
pop
int
shl
setne
and
mov
lea
jmp
icebp
cmp
xchg
in
and
xor
dec
pushf
pop
int
repz
sub
mov
push
addl
adc
xor
in
and
loope
lds
or
and
lahf
test
xchg
int
add
test
xchg
mov
hlt
mov
mov
or
nop
cmpsl
mov
and
subb
fwait
sub
repnz
jmp
xchg
mov
xor
mov
and
bound
mov
psrlw
jb
push
lods
nop
fadds
shr
push
je
addr16
into
pop
dec
jg
mov
in
ja
fistpl
mov
out
adc
lahf
fstps
les
mov
mov
outsl
repz
je
mov
subl
dec
leave
cmp
notb
xorl
jbe
push
xchg
mov
push
adc
lahf
pusha
sub
mov
adc
push
inc
addb
mov
dec
scas
lds
add
and
dec
jp
outsb
push
mov
out
insl
addr16
cmp
in
pop
adc
and
push
mov
push
jae
or
pop
pop
cs
sbb
sub
pop
cwtl
in
xor
ljmp
cmpsb
mov
out
mov
xorb
push
loopne
stos
enter
cs
jecxz
inc
mov
ret
push
xor
dec
or
loope
hlt
dec
inc
jns
loop
sarl
mov
mov
loope
inc
mov
ds
push
inc
xor
rcll
fiaddl
cwtl
mov
repz
push
push
icebp
sbb
enter
outsl
or
push
call
sbb
or
xor
call
xchg
or
and
bound
dec
dec
jmp
in
bound
lods
push
sti
aaa
icebp
adc
in
pop
pop
inc
and
pop
jmp
icebp
cwtl
sbb
xlat
lock
bound
sub
adc
ja
add
mov
outsb
adc
pop
sub
push
fbstp
push
sub
mov
insb
das
loop
jmp
ss
bound
pop
sub
or
xchg
sbb
xor
xchg
rcll
aaa
mov
pop
jle
xor
cmpsl
add
or
rcrl
ret
in
cmp
xor
ljmp
testl
lret
repz
outsb
or
mov
popa
and
jnp
sti
xor
dec
ds
popa
jp
push
push
leave
inc
mov
out
add
rorb
xchg
popf
mov
into
xor
pop
jae
aam
shl
xchg
mov
sbb
jns
jmp
lods
daa
adcl
push
mov
xchg
jno
sbb
adc
cwtl
xchg
dec
add
inc
mov
jno
imul
mov
mov
push
outsb
lcall
and
decb
cmp
mov
mov
cld
jbe
clc
push
sbb
jns
js
ljmp
jmp
scas
lret
sti
mov
je
jmp
mov
aas
or
inc
lcall
xchg
inc
sub
push
dec
cmc
clc
arpl
dec
rcrb
jae
pop
stc
icebp
xchg
mov
in
outsb
push
call
js
jl
inc
pop
jecxz
xchg
out
popf
push
xor
jae
in
push
inc
sbb
movsb
sbb
enter
jle
js
stos
add
cld
addr16
arpl
nop
xlat
and
stos
aad
rolb
mov
vpsadbw
int3
data16
ret
insl
cld
jns
xchg
and
lea
js
pusha
xor
les
jno
or
xchg
cmp
cmc
out
clc
cmp
out
lods
aad
rcl
mov
mov
dec
mov
movsl
popf
cwtl
outsb
lret
push
aam
push
dec
jp
cmc
loop
insl
jecxz
xorl
pushf
lods
pop
xadd
in
roll
clc
pop
test
inc
repz
sti
dec
mov
mov
ds
sbb
adc
mull
test
mov
mov
mov
int
cltd
jmp
fidivs
dec
mov
lcall
mov
push
cmp
pop
mov
loop
scas
add
imul
cmp
dec
leave
inc
jb
sarl
or
mov
enter
adc
dec
cld
mov
aaa
or
xor
sbbb
rclb
sbb
fsubp
add
hlt
inc
loop
sti
pop
arpl
shlb
les
aaa
adc
xchg
jecxz
jecxz
xchg
jge
pop
inc
fadd
push
fwait
loop
mov
aad
fiaddl
leave
mov
sti
sub
adc
sbb
jecxz
mov
enter
cmpsl
pop
dec
outsb
xchg
jle
mov
shll
aam
pusha
jno
stc
andl
and
sub
dec
sub
int3
leave
add
pop
or
jns
nop
pop
jne
push
mov
cmp
push
bound
dec
inc
mov
or
ss
loope
mov
shll
sbb
int
cmp
sbb
insb
inc
dec
clc
cmp
xorl
aad
fcompl
adc
inc
stc
aaa
lds
shr
pop
mov
dec
push
fldenv
xchg
xchg
sti
stos
mov
repnz
hlt
mov
and
xchg
ds
xchg
push
mov
lret
fnstsw
and
not
fs
int
and
mov
add
add
pop
rolb
int3
gs
push
mov
subl
push
out
dec
push
sub
ljmp
mov
out
or
in
loopne
lods
or
pop
sbb
clc
and
dec
jb
mov
enter
dec
std
das
fwait
mov
mov
sbb
jg
std
das
roll
test
lret
mov
push
and
dec
and
fcmovu
xchg
popa
in
ljmp
pop
sub
push
lret
or
xor
jae
push
int3
hlt
add
or
lcall
xchg
push
pop
mov
dec
in
jge
scas
dec
cli
adc
mov
loopne
push
dec
sub
psllq
iret
pop
sbb
adc
push
inc
jbe
in
mov
or
shll
es
imul
and
sub
push
mov
xlat
shl
or
nop
hlt
mov
orb
jb
dec
mov
pop
add
and
mov
push
mov
xor
xor
mov
enter
cmpsl
pop
push
jnp
stos
push
mov
and
dec
jmp
xchg
or
subl
in
dec
jns
xchg
ret
aad
in
fcomi
mov
and
mov
pushf
loopne
and
pop
mov
nop
inc
in
lret
iret
les
add
mov
push
or
mov
cwtl
add
fwait
jo
int3
inc
cmc
and
add
xchg
adc
push
arpl
shr
loope
lods
mov
movsl
repnz
mov
shrl
or
adc
pop
and
xchg
sti
negl
mov
cld
xor
outsb
mov
cmp
sbb
xor
dec
xor
loopne
pusha
pop
into
repnz
int
xlat
dec
ss
push
cltd
jl
lods
sbb
es
nop
outsb
mov
xchg
add
fldenv
and
mov
or
jne
pop
jmp
test
pop
jnp
nop
push
cmp
cmpl
mov
lea
int
dec
mov
pushf
mov
adc
xorl
add
ljmp
cmp
push
pop
aas
jmp
outsw
jns
enter
sub
fmuls
stos
out
push
mov
enter
push
mov
repnz
int3
mov
xor
and
mov
adc
call
xorb
popa
mov
mov
iret
clc
or
repz
fmuls
loope
sbb
mov
jle
scas
insb
nop
pushf
je
test
cli
popa
shl
and
dec
push
xor
daa
cmpsb
test
pop
in
cmpsb
shlb
sbb
lds
inc
imul
scas
lods
pop
sub
add
mov
push
ds
arpl
out
push
pop
sbb
jae
mov
adc
sti
dec
pop
enter
lock
and
push
and
gs
stos
mov
inc
push
popf
xlat
lahf
dec
xor
cmpsb
mov
cld
mov
movsb
dec
into
andnps
xchg
popf
enter
and
lods
jb
shrb
cmp
mov
and
xor
mov
sbb
in
lock
jecxz
in
sub
inc
shlb
cmpb
dec
rorl
clc
lahf
ljmp
fnstcw
mov
add
jno
clc
lcall
pop
cltd
lock
lret
ss
add
movsl
imul
call
fisubl
jl
push
pop
inc
andl
jns
fiaddl
pop
adc
cmp
out
jmp
insb
sub
or
xchg
cmc
xchg
sbb
add
adc
lea
sbb
inc
shlb
adc
imul
out
and
jns
or
adc
xor
xchg
jnp
cmpsl
push
std
xchg
ss
push
call
jbe
sub
jge
mov
mov
sbb
add
in
pop
jae
xor
lock
lds
mov
out
adc
imul
lods
popa
icebp
and
cmpsl
aad
lret
and
stc
sub
pop
pop
xchg
xor
mov
inc
mov
xchg
stos
aam
imul
loopne
adc
xchg
aas
adc
pop
fstpl
jp
stc
fs
shrl
les
sbb
lods
pop
outsb
aad
sahf
dec
lret
or
jecxz
notb
jae
jno
and
icebp
pusha
xlat
push
fldt
mov
or
mov
cmpl
mov
mov
aam
jno
mov
sub
aad
lret
lea
pusha
int
insl
dec
mov
loop
lea
cwtl
cmp
int3
xor
repnz
ds
add
sub
pop
mov
pop
sub
stc
sub
loopne
test
push
lahf
stc
pop
addr16
dec
jle
cwtl
fiaddl
dec
fcomip
mov
imul
lock
in
gs
subl
insl
mov
adc
inc
xchg
repnz
sti
cmp
cmpsb
jg
jmp
mov
test
cmpsb
mov
push
jge
lret
mov
pusha
lock
fidivl
test
push
mov
xlat
stc
pop
int
cltd
data16
jo
xor
rcll
push
sub
inc
fmul
loope
data16
adc
rolb
flds
test
test
pop
mov
mov
sahf
aad
in
ss
pop
jge
push
mull
loop
and
out
cwtl
push
mov
xlat
mov
mov
jb
xor
out
hlt
out
ds
mov
jns
add
or
mov
mov
xchg
in
sbb
sub
out
mov
movsb
mov
mov
mov
pop
icebp
jle
pushf
lret
ljmp
ret
iret
ficompl
jns
js
pmaddwd
out
mov
dec
or
in
inc
movsl
jnp
insb
cmp
out
jmp
inc
adc
xor
pop
add
cs
jb
lock
out
in
test
js
hlt
pop
out
hlt
outsb
xor
pop
sub
pop
mov
dec
push
xor
stc
xor
ljmp
dec
imul
movsl
dec
jl
cltd
cmpsb
ret
sbb
xchg
negl
outsb
add
dec
adc
leave
add
cmp
mov
stos
pop
add
sub
dec
mov
inc
mov
addr16
ljmp
pop
dec
inc
pusha
pop
cltd
popf
pop
mov
cli
xor
xchg
cmp
jmp
inc
orb
lock
lea
inc
lcall
xlat
sub
push
dec
fcomi
inc
scas
sub
or
pop
movsb
imul
pop
cli
sbb
inc
test
pushf
mov
mov
inc
jmp
bound
les
aaa
fdiv
dec
mov
jp
test
cmp
cmp
cmc
nop
sarb
aam
pop
test
dec
lret
aaa
lods
add
xchg
ja
push
xor
insb
arpl
icebp
mov
vprotd
jg
or
clc
or
xor
rcrb
mov
jae
leave
lds
push
xchg
push
jns
popf
and
pop
pop
loop
xchg
adc
outsl
pusha
mov
jne
jl
enter
in
pop
shl
mov
inc
hlt
arpl
fcmovb
pop
and
insb
repz
xor
cmc
sbb
or
sti
mov
mov
cs
pop
les
aam
pop
mov
call
xlat
or
jmp
pop
sahf
in
popf
and
std
std
cmp
sbb
fcomps
jl
cld
jl
das
cmpsb
dec
push
fdivp
cmpsl
sub
pop
mov
dec
mov
das
loopne,pt
add
cltd
pop
and
sbb
xlat
dec
test
mov
mov
sub
fistps
sahf
cmp
jp
and
add
test
cmpb
mov
sub
xlat
loope
fildll
inc
stos
push
fistl
dec
ret
jbe
mov
and
hlt
push
dec
lcall
popa
es
jmp
xlat
pop
iret
cmpb
push
fimull
and
hlt
mov
ds
mov
fsubrp
xor
ljmp
sbbb
inc
fwait
or
daa
mov
dec
inc
lds
stos
dec
fxch
xor
mov
cwtl
shll
xor
xor
out
aad
or
fidivs
lret
dec
test
push
xchg
in
xor
rcr
in
xlat
jne
sub
mov
mov
popa
or
or
mov
inc
add
popf
es
enter
test
hlt
sbb
mov
test
jae
push
mov
test
jge
repz
repz
dec
mov
repnz
lea
in
stos
mov
dec
or
jge
add
jnp
mov
dec
pop
adc
jmp
dec
mov
and
dec
push
sbb
ror
nop
cmp
pop
outsb
jno
inc
jae
jg
add
mov
stos
out
push
xor
sbb
xchg
pushf
jns
or
inc
xor
mov
xor
lds
dec
cmp
jl
fstpt
sub
and
test
push
xchg
or
jecxz
push
pop
mov
push
sbb
int
xor
lret
imul
mov
push
or
xor
cmp
sbb
inc
hlt
sbb
orl
cs
shl
mov
sbb
and
dec
or
dec
cs
push
push
push
imul
inc
or
mov
cmpsb
js
lds
push
push
adc
cvttps2pi
test
test
addr16
out
mov
xor
dec
mov
test
jecxz
dec
jbe
popa
mov
mov
xor
loopne
lock
nop
xor
filds
mov
lock
sub
dec
shll
repz
push
repnz
nop
pop
hlt
push
inc
jno
movsb
mov
fucom
mov
in
xlat
lret
xchg
fldt
ja
sti
repz
out
pushl
ds
movsb
jnp
or
repnz
mov
scas
pop
pop
pushf
movsl
inc
aaa
jmp
rcrb
lock
imul
mov
nop
cmp
sub
cmp
lcall
aaa
or
sub
or
mov
daa
aas
lret
xchg
scas
pop
inc
lock
gs
or
mov
imul
sbb
test
push
lock
push
or
insl
dec
aam
mov
in
imul
dec
push
and
sub
sbb
pushf
popl
mov
negb
in
in
and
fisubrl
dec
int3
push
cmp
xchg
in
popa
cwtl
xor
add
mov
dec
mov
pop
jmp
pop
mov
ror
and
popa
ret
pop
and
gs
sub
lock
popf
outsl
cmp
stos
hlt
popf
mov
rorb
inc
sbb
lods
shlb
iret
mov
lret
cmc
movsb
popa
fsubl
sub
cmpsl
out
add
push
push
dec
adcb
mov
jae
sbb
fdivr
clc
ficompl
inc
and
xchg
hlt
mov
repnz
test
lret
cmp
cmp
psubsb
push
shll
push
imul
lods
and
shl
addr16
mov
push
mov
cs
enter
sub
inc
pop
out
addb
nop
imul
test
aaa
sub
sbb
mov
sub
mov
clc
das
pusha
lahf
add
mov
jb
je
mov
xchg
in
pop
paddusb
out
adc
arpl
lret
pop
jae
mov
out
loop
lea
mov
or
mov
inc
mov
pusha
test
sbbl
cmc
adc
pop
jo
push
test
std
and
add
addr16
lea
inc
shl
push
bound
popf
lds
int
fcoml
pop
or
in
push
mov
loop
scas
push
lds
xchg
xor
mov
push
xchg
pop
xchg
jp
and
in
pushl
sbb
add
out
outsl
push
mov
mov
ret
inc
mov
fxch
jecxz
lods
xchg
jecxz
mov
inc
jo,pn
push
dec
inc
lods
arpl
das
out
lret
and
mov
mov
cmp
mov
dec
movsb
push
inc
addr16
in
jecxz
mov
cmp
add
push
les
loope
inc
or
xor
ret
rcrl
jns
mov
xorb
shlb
les
lods
jnp
add
addr16
sbb
repnz
cli
es
rorl
cmpsl
adc
mov
sub
or
push
mov
out
mov
clc
incb
scas
jecxz
push
adc
cmpsl
aas
or
and
jp
test
mov
dec
int
push
mov
and
adc
or
sub
pop
std
mov
dec
xchg
mov
adc
sub
push
push
popa
imull
cmp
cmc
les
or
test
push
jp
jle
fwait
outsl
jmp
testl
sbb
into
sbbb
das
sub
jno
lods
cmovge
push
xchg
daa
in
xchg
xor
mov
mov
adc
repz
ret
pop
lock
sub
call
fidivs
ret
bswap
rorl
xor
mov
loope
xchg
movsl
iret
pushl
fbld
lods
insb
dec
inc
sbb
lcall
fldl
mov
inc
cs
movsb
out
test
std
icebp
in
movsl
push
adc
lea
pop
inc
adc
xchg
imul
inc
int
std
jmp
xor
cld
test
popa
push
push
jmp
mov
jp
ljmp
aad
jo
aam
ja
sub
outsb
mov
lods
stos
push
call
mov
add
pop
mov
shlb
or
push
out
xchg
xchg
orl
cld
adc
sbb
cmpsl
fsub
ljmp
repz
cs
andl
int
daa
enter
jae
mulb
sub
clc
bound
testb
add
inc
mov
adc
sbb
inc
push
adc
jbe
sahf
mov
mov
dec
xchg
dec
in
lods
jp
push
dec
scas
lcall
adc
push
pop
xchg
sti
jno
iret
cmpl
cmp
push
jbe
out
sub
lahf
add
pop
aaa
add
mov
and
bound
jb
into
push
jae
mov
dec
jl
int3
dec
xchg
jecxz
mov
outsb
out
mov
popf
mov
das
mov
mov
rorb
rol
sbb
insl
sub
xchg
push
add
mov
imul
aaa
add
add
push
add
jbe
lret
jle
xchg
out
mov
mov
rcrb
lds
and
shll
out
pop
adc
sbbl
shll
add
adc
mov
mov
mov
ds
jl
mov
pop
mov
add
aad
imul
sbb
cmc
xchg
push
mov
popa
repz
test
mov
aam
jae
inc
jnp
test
scas
adc
push
repz
fildll
push
xor
outsb
or
loope
mov
and
test
cmp
xlat
sti
fldt
fmull
cmpsb
jecxz
pop
add
std
lea
in
push
or
aaa
mov
dec
or
jg
fisubrl
dec
push
sahf
cmp
add
dec
fsts
push
mov
jg
add
mov
sub
inc
fstps
or
out
data16
scas
add
sbb
dec
dec
clc
add
in
cmp
mov
jbe
xor
test
mov
iret
xor
push
dec
roll
mov
ljmp
and
mov
jo
xor
mov
and
dec
mov
sub
jo
jecxz
in
pop
sti
outsl
sub
cmc
roll
je
into
dec
data16
call
sub
sbbl
out
jecxz
lret
add
lea
iret
dec
aas
popf
dec
outsl
lds
scas
loop
fisubrl
sbb
cld
enter
cld
xor
pop
loopne
sahf
pop
into
jb
sub
add
adc
cwtl
shlb
cmp
daa
jnp
adc
icebp
data16
and
gs
add
addb
ret
rorl
xor
dec
and
test
inc
cltd
jecxz
inc
or
push
sbb
mov
ret
jno
xchg
into
jl
push
mov
imul
adc
test
xorl
xadd
sbb
test
dec
xchg
cmp
inc
pop
std
jbe
or
popa
cwtl
fwait
cmp
or
or
xor
out
mov
xchg
cmp
insb
xchg
sahf
lret
pop
sti
push
xchg
cmc
cmp
cmpsb
or
xchg
in
sub
loopne
pop
and
sbb
mov
mov
iret
mov
dec
das
adc
rclb
push
roll
jle
adc
inc
push
cmp
inc
icebp
mov
ret
in
xlat
fucomip
out
les
xor
jg
and
jns
out
icebp
stc
pop
xor
out
cmp
cmp
ljmp
jmp
adc
mov
cmpb
cmp
mov
dec
insb
xchg
stc
push
mov
ss
jb
daa
jecxz
sbb
jle
xor
mov
push
pop
mov
out
adc
out
and
and
lcall
inc
and
outsl
js
inc
xor
jno
lods
icebp
mov
bound
xor
inc
jnp
insb
stc
fcmovnbe
mov
out
dec
test
mov
out
sub
pop
push
sahf
and
lods
dec
xlat
pop
ds
inc
xchg
pop
sbbl
fistps
sub
pop
push
cltd
aas
dec
xchg
or
mov
add
das
add
or
adc
mov
je
mov
or
or
shrb
lret
sahf
insb
ror
xor
movsb
xchg
mov
sub
jns
jo
adc
les
popa
mov
sbb
scas
jge
mov
sub
xor
adc
xchg
outsl
sub
inc
mov
cmp
shrl
scas
or
push
or
cltd
xchg
rolb
je
call
mov
pop
jae
adc
int
and
jle
dec
addr16
lods
repz
jg
bound
or
ljmp
push
fxch
cmp
xchg
jbe
push
cmc
cli
icebp
scas
int3
cwtl
jns
fldt
add
out
ljmp
in
mov
cmp
imul
fisubs
adc
loope
push
cmovg
lret
xor
leave
std
rorb
ljmp
mov
es
cmpsb
daa
les
call
push
sbb
daa
into
clc
leave
sarb
inc
out
data16
bound
cwtl
aas
nop
jle
adcl
push
inc
adc
pop
fisubl
imulb
or
aas
and
jbe
std
and
je
xchg
dec
pop
notl
ss
jno
sub
xchg
cmc
movzwl
rclb
ret
and
ja
or
pop
and
popf
pop
pop
aam
xchg
addb
jecxz
push
mov
les
leave
loop
popf
xchg
dec
insl
cwtd
pop
jl
int3
test
movsl
dec
mov
imul
out
outsl
popa
es
add
jle
adc
test
dec
xchg
icebp
movsb
cs
push
stos
sub
pop
ljmp
js
mov
imul
xor
test
jns
xor
mov
or
sarb
pop
repnz
push
int3
insb
addl
in
mov
sbb
cwtl
call
mov
or
or
out
decb
pop
mov
mov
xor
push
lahf
mov
jbe
mov
dec
dec
sti
jb
pop
mov
mov
fisubl
sbb
out
gs
test
mov
les
rclb
push
in
mov
fimull
jle
sub
pop
mov
pusha
push
sbb
gs
or
hlt
mov
adc
shlb
adc
push
mov
vmovaps
and
pop
mov
repz
or
fstpt
mov
shrl
enter
lahf
push
mov
shll
cmp
data16
xor
iret
cmp
cmp
jae
pop
jmp
sub
add
cmpb
les
push
call
fwait
popa
sub
cmp
dec
mov
dec
add
jno
or
dec
mov
lahf
mov
mov
dec
dec
cli
fwait
rorl
xor
movsl
jecxz
in
gs
mov
dec
mov
dec
cld
inc
adc
stos
push
sub
push
xchg
test
mov
cmpsb
int
insl
mov
jb
xchg
dec
in
pop
push
je
out
movsb
pushf
mov
pop
shrl
loop
scas
test
sti
cs
mov
loopnew
movsb
push
fstl
movsb
leave
daa
cmp
adc
pop
push
aad
lcall
sbb
mov
pushf
cmp
out
call
pop
fildll
inc
mov
pop
movsb
repz
imul
xchg
dec
push
dec
fcoms
xchg
setns
cmp
sub
fimull
and
mov
push
scas
es
jns
enter
rorl
stc
fneni(8087
cmp
out
jmp
out
push
mov
mov
push
sar
clc
or
popf
cwtl
in
and
insl
ret
adc
xchg
mov
je
jg
ss
insb
pusha
hlt
xorl
adcl
fwait
lods
lds
outsl
outsl
gs
sub
test
jb
mov
push
in
lcall
adc
gs
dec
xchg
mov
iret
add
imul
mov
pop
pop
loope
jbe
loop
mov
mov
pop
xchg
lods
adc
outsb
mov
aaa
push
xlat
dec
push
cmp
cli
fists
rolb
cmpsb
lcall
inc
je
or
push
push
les
rcrl
add
jmp
scas
push
icebp
jb
adc
add
stc
push
pop
movsl
inc
insb
in
jae
push
sbb
mov
or
lahf
cmp
pushf
aas
sbb
movsb
xor
ret
push
movsl
pop
mulb
mov
xor
add
mov
xor
fidivs
xor
outsb
fs
mov
xchg
jmp
mov
into
or
xor
in
lahf
and
jae
mov
mov
test
fucomp
or
scas
je
push
xchg
lcall
rcrb
dec
fsin
pusha
iret
mov
js
pop
insb
out
jp
or
sahf
mov
pop
js
mov
insl
mov
xor
mov
xor
pop
sbbb
repnz
in
push
fwait
add
repnz
in
lods
sub
cmp
xchg
and
in
push
arpl
dec
sbb
dec
shlb
in
jns
int3
push
bound
push
mov
rcrl
xchg
fucomp
popa
mov
orb
loope
in
inc
jmp
fistps
les
inc
dec
cmpsl
jecxz
and
xor
cs
xchg
into
jmp
test
arpl
out
and
stc
fdivrs
aaa
ret
push
js
xchg
sti
and
dec
adc
into
cwtl
mov
adc
pop
mov
cmpl
cmp
repz
test
sub
jl
or
pusha
dec
int
xchg
imulb
and
es
pop
les
push
popa
and
and
jns
cmp
les
daa
sbb
imul
sahf
mov
fsubrs
lds
jb
xor
sti
push
aaa
rclb
andb
jno
xchg
sub
icebp
leave
and
pop
cs
pop
in
jecxz
pop
es
pop
xchg
push
pusha
mov
xor
out
xchg
xchg
pop
clc
dec
aam
adc
ja
leave
enter
insb
jns
jae
leave
sub
xor
orl
in
ret
iret
fcmovnb
cmpsl
hlt
movsb
adc
jbe
adcb
out
inc
mov
mov
cmpsb
shrb
test
sarb
dec
push
rcrb
scas
das
lcall
out
adc
jnp
fiadds
push
xor
cmp
shrb
roll
push
xor
or
test
xor
lea
sarb
shrb
xor
and
fsubl
hlt
loopne
lods
stos
and
mov
movsb
lods
nop
inc
ljmp
int
jbe
test
xchg
js
mov
std
xchg
jno
cmpsb
hlt
jo
and
in
ljmp
hlt
mov
lahf
lcall
test
add
imul
add
das
mov
sub
seta
pop
mov
into
testl
icebp
sub
insb
jb
mov
push
loope
jl
add
add
or
jg
inc
cmpsl
mov
int3
cmp
bound
mov
lds
sar
cli
pusha
xor
sub
cmp
cmpsb
mov
daa
fsubrs
xor
loopne
out
cltd
mov
rolb
popf
imul
fsub
sbb
rcrb
ds
push
mov
xlat
mov
dec
sbb
mov
push
jl
pusha
push
mov
jnp
pop
test
sbb
and
inc
fidivrs
scas
mov
xlat
enter
xor
daa
dec
insl
mov
test
jae
pop
adc
push
adc
xchg
xchg
fistl
push
rcrb
inc
jb
mov
and
movsl
dec
lret
mov
int
pop
jne
lock
stc
addr16
fcmovnb
ja
mov
in
insl
dec
jecxz
dec
dec
xchg
push
mov
addb
xchg
pop
mov
lahf
adc
sbbb
lea
or
ss
insb
ds
scas
fsub
and
leave
jns
insl
jp
cmpsl
ljmp
xchg
xchg
mov
out
adc
hlt
gs
sub
sti
xor
xchg
aas
lock
add
vcvtpd2psx
loope
roll
cmpl
push
sbb
aaa
sub
jmp
xchg
loop
icebp
dec
loop
jne
fs
aad
ret
jbe
push
pop
je
and
leave
daa
xchg
fdivl
push
push
cli
out
xor
push
andl
outsb
jmp
pop
sti
popf
lds
cmp
mov
jmp
sub
push
xchg
gs
jno
ss
cmpsb
cmp
push
dec
pop
cltd
lcall
push
rcrb
push
cs
aas
xor
aas
lods
subb
arpl
mov
xchg
add
test
cld
mov
mov
pop
lret
sub
jns
adc
scas
or
push
mov
in
in
mov
scas
test
jg
sbbb
es
ret
pop
adc
sub
or
pop
push
dec
mov
and
or
lret
mov
pop
pusha
shrl
in
xchg
cwtl
dec
mov
push
data16
in
in
push
ds
and
cmpsb
ja
enter
insb
jb
adc
push
addr16
test
clc
sti
sahf
mov
pop
and
add
pop
dec
push
xchg
imul
xchg
shrb
push
push
xlat
pop
and
pop
int
xchg
push
xchg
and
fsubrl
rcll
sub
sub
movl
lods
fistpl
icebp
push
in
std
shrb
push
mov
mov
inc
pushf
dec
arpl
add
repz
les
mov
ljmp
and
mov
cmp
les
repnz
push
cmp
sbb
test
addb
push
jecxz
fmull
jl
dec
pop
stos
fst
aad
daa
cli
cmp
out
jbe
add
push
ficomps
js
push
mov
scas
stos
sbbb
mov
mov
movsb
jge
pop
cmp
cld
cs
stc
nop
and
add
xorl
add
les
cwtl
sub
jmp
xor
arpl
jge
loop
clc
cmp
aas
or
mov
mov
mov
jle
rolb
xlat
sbb
cmc
loop
inc
dec
push
mov
hlt
outsl
pop
mov
into
sbb
subl
sub
cmp
push
leave
jmp
repnz
loopne
add
and
sub
jl
insl
out
add
cld
jle
addr16
add
cmp
mov
insb
inc
or
fnsave
and
cli
xchg
mov
sub
gs
pop
imul
imulb
stos
les
addb
mov
divb
repnz
or
insl
mov
xchg
mov
jne
mov
jmp
in
mov
pop
pushf
xchg
cmpxchg
scas
testl
pop
xchg
push
pop
lods
mov
push
movsb
out
cmpsb
push
and
mov
insb
cltd
sub
das
in
ret
js
iret
add
pop
leave
mov
push
leave
xchg
jno
or
bnd
adc
jle
fs
xor
scas
lock
pusha
sbb
add
js
mov
xchg
sbb
scas
movsl
pop
xchg
mov
clc
xor
cwtl
inc
cmp
push
sub
jb
pop
movsb
adc
add
aam
lds
loop
push
push
sbb
call
mov
arpl
mov
lret
jmp
sub
mov
int3
inc
dec
mov
mov
jne
mov
mov
sbb
cli
jecxz
test
ljmp
adc
fimull
mov
lahf
mov
pop
movsb
ljmp
movsb
std
ret
mov
lret
mov
mov
es
add
dec
push
mov
and
and
adc
cltd
shrb
cltd
sbb
mov
cmpsb
fdivrl
idiv
outsl
xor
out
push
int3
cmc
cld
fidivrl
jl
dec
mov
rcrl
int
ret
jg
lods
xor
std
cmc
mov
xchg
incb
lahf
mov
dec
and
outsb
lock
and
xchg
arpl
lods
scas
lods
nop
or
push
fwait
cmp
cmp
shlb
jg
popf
jge
inc
lret
mov
pop
aam
push
in
inc
cltd
lock
imul
push
and
push
jmp
sbb
inc
hlt
mov
push
push
mov
xlat
daa
test
imul
jno
and
mov
mov
fbld
nop
sbb
mov
mov
es
loop
adc
xor
cmp
jmp
int3
out
inc
mov
loop
xor
call
ret
pop
pop
sbb
xchg
test
mov
add
xchg
push
das
mov
mov
jb
adc
loopne
push
rcl
or
stc
or
stos
cmc
adc
sbb
jmp
push
sbb
shlb
push
les
pop
push
rorl
fwait
test
cmpsb
mov
xor
sub
fsubrs
arpl
mov
push
out
aas
xlat
xlat
push
xchg
fildl
jnp
scas
sbb
dec
das
mov
in
std
lock
push
sub
icebp
fs
push
ja
cltd
sub
dec
out
addl
push
ja
dec
and
int3
ds
mov
in
pop
leave
shlb
xchg
cmp
mov
movsl
or
xchg
xchg
xor
repz
sub
and
fucomi
xor
jp
mov
add
lahf
loopne
insb
lahf
jae
push
xchg
pusha
adcl
adc
mov
cs
mov
repnz
lock
rcrb
dec
popa
out
rcll
push
leave
pop
inc
jle
jnp
inc
mov
movsb
fs
popa
ds
pushf
icebp
mov
orl
jb
aas
and
mov
aaa
xchg
outsb
out
push
adc
xor
pop
outsb
mov
mov
rorl
popf
mov
repz
or
xchg
iret
or
jl
lret
mov
xchg
testl
stos
popa
enter
xchg
xor
loopne
iret
pop
and
lock
mov
pop
mov
adc
and
or
jns
frstor
stos
jb
inc
dec
out
out
insl
add
push
clc
mov
mov
inc
pop
push
sub
popa
fiadds
fisttps
jmp
mov
cmp
xor
notb
clc
xchg
insb
push
mov
int3
mov
inc
mov
mov
sub
lods
mov
movsl
pop
cmp
fildl
dec
stos
jl
aad
xor
jno
push
jno
mov
lds
add
push
out
pop
pop
es
mov
aaa
call
pop
sbb
inc
and
add
mov
sbb
cmp
out
pushf
notb
fistpll
dec
lcall
out
je
mov
push
lods
inc
mov
fdivl
push
xchg
xor
push
sub
call
jno
sarl
mov
leave
inc
jb
pusha
fcomi
xlat
pusha
sbb
mov
out
mov
stos
aad
fdivr
lcall
adc
inc
cmp
cltd
shrl
pop
cmp
mov
pop
xor
out
mov
scas
adc
repz
mov
imull
sub
std
inc
inc
in
sub
mov
jl
dec
pop
push
shr
jb
dec
jp
imull
add
loopne
or
inc
pop
insl
mov
int
xchg
push
sub
lahf
gs
mov
imul
dec
xchg
movsb
cmp
add
cmp
cmc
aas
jnp
pusha
popa
pop
popa
jle
js
stc
nop
fs
in
ret
mov
push
jns
cmp
cmp
popf
sub
addr16
mov
push
push
push
fcomi
ret
stos
hlt
or
call
cld
out
mov
shl
sbb
imul
xchg
inc
out
outsb
mov
scas
dec
xor
stos
outsb
std
xor
test
jne
pop
ljmp
jbe
scas
sbb
je
sarl
push
push
outsb
cwtl
lea
lahf
sub
ljmp
mov
dec
movsb
test
sbb
cmp
sahf
pusha
fimuls
push
xor
shl
fsts
cwtl
ss
sub
test
andl
mov
sahf
test
push
pop
testl
mov
and
push
test
call
xchg
adc
and
icebp
sbb
xor
cwtl
fstpt
mov
outsb
ja,pt
and
dec
jp
jg
and
iret
jg
cli
inc
sub
les
stc
push
jp
cld
adc
push
lods
xchg
test
bound
or
xor
mov
mov
pop
xchg
sbb
repz
dec
sahf
xchg
mov
sub
test
lods
ret
push
call
sbb
or
mov
lcall
cmpsb
or
cmp
xchg
adc
cmp
push
cmpsb
fucomi
dec
daa
dec
lock
outsl
fsts
xor
mov
mov
mov
dec
dec
lds
aas
pop
repz
ficomps
and
mov
mov
xchg
cmp
in
nop
or
adc
cmp
les
and
push
inc
xor
jae
arpl
mov
out
not
shrb
inc
outsb
add
xor
mov
je
mov
and
fcmovu
loop
or
fs
ds
fdivr
insb
xchg
mov
mov
jg
movsb
ds
rclb
test
push
stos
shlb
sub
mov
lds
negb
cwtl
xchg
enter
adc
lods
cmp
sbb
mov
imul
cmp
out
sub
cmp
fwait
jno
mov
mov
addr16
cmp
insl
xor
shrb
inc
or
lods
jmp
inc
in
mov
lcall
xor
adc
pusha
stos
pop
adc
mov
add
out
aaa
push
les
dec
pop
add
imul
ret
leave
lock
out
dec
lret
pop
dec
push
sub
shrl
xchg
mov
test
dec
lret
pop
popf
xor
fists
movsl
xor
das
fnstcw
cmp
cmpsl
sub
lods
xchg
outsl
sbb
jns
ficoms
mov
dec
in
orl
jbe
insl
mov
adc
mov
add
jecxz
sbb
and
insl
add
cmp
mov
xchg
push
pop
ljmp
dec
and
mov
loope
push
addr16
push
xchg
into
insl
out
push
pop
lods
push
adc
xor
cwtl
int
and
call
je
gs
cwtl
lcall
sbb
and
fcmovu
out
sub
shrb
push
aas
jae
sub
jo
cmp
cmp
ja
sahf
inc
insb
mov
add
xchg
inc
cmpl
in
ret
sub
imul
xchg
es
jae
push
out
jno
add
ret
cwtl
jne
mov
jne
jae
mov
sub
shll
add
lret
loop
xor
mov
sbb
outsl
dec
lock
jns
sub
icebp
arpl
jge
outsb
ljmp
arpl
xor
lds
lret
push
out
lods
xor
mov
mov
cmp
pop
add
movsb
jge
in
out
push
aad
insl
sub
loopne
mov
cmp
stos
xchg
daa
add
mov
lea
jnp
sbb
stc
lods
stc
std
pop
pop
adc
mov
lods
pop
fsubr
or
int3
dec
incl
mov
cmp
je
adc
leave
add
test
push
xchg
idiv
and
clc
cmp
mov
insl
stos
mov
cmpsl
sub
std
jno
outsl
shrb
fnstcw
notl
and
fucom
shrb
mov
aad
xchg
add
mov
jecxz
pop
orb
scas
jno
shrl
into
adc
pop
fisubl
mov
stc
cld
mov
notb
add
add
decl
sub
mov
add
push
loopne
sub
adc
fisubrs
in
loopne
jbe
idivb
leave
in
xchg
subb
pop
out
xchg
mov
inc
sub
clc
and
ret
sbb
ret
in
subl
mov
sub
icebp
and
inc
xchg
int3
dec
pop
mov
dec
lds
faddl
daa
jae
leave
xor
in
cli
mov
mov
pop
jae
sbb
xor
imul
pop
rcrb
int3
lret
sbb
dec
push
mov
adc
es
hlt
flds
adc
push
aam
xchg
xor
pushf
ja
mov
push
cmp
aad
sbb
sbb
imul
sub
xchg
movsb
mov
cs
data16
xor
sub
je
aas
mov
rclb
fwait
jbe
mov
test
xchg
iret
clc
dec
shll
mov
or
mov
mov
jae
sbb
adc
inc
jle
pop
das
pusha
sub
inc
xchg
sub
xor
shrb
jmp
jmp
nop
call
movsb
adc
scas
add
fwait
pop
push
stos
rclb
inc
xchg
gs
mov
rcrb
sub
sub
or
mov
jmp
dec
mov
push
push
inc
push
jge
addr16
inc
pop
pop
adc
and
cmp
pop
lods
mov
xor
pop
int3
mov
fstps
mov
push
and
sbb
shlb
inc
out
ss
pop
mov
stos
pop
fsub
add
jae
xor
pop
test
pmullw
addr16
pop
push
pop
pcmpgtw
pop
jge
push
and
sbb
js
cld
fisubrl
in
loopne
or
jae
inc
enter
xor
les
movsb
mov
jne
add
mov
stc
dec
mov
cmp
stc
xchg
cmc
sub
fbstp
jge
push
cmp
test
repz
ja
sub
fldl
mov
fs
ss
and
dec
out
xchg
sbb
lahf
dec
xchg
sub
aas
jbe
and
divb
mov
lret
cmp
cmpsl
call
mov
jne
add
dec
mov
jns
dec
push
test
addr16
jle
adc
pop
daa
fcoml
movsb
jno
or
test
repnz
adc
scas
xchg
mov
cmc
push
aad
cs
push
cwtl
and
les
pusha
push
sbb
loop
loopne
inc
dec
test
fidivs
js
adc
mov
sub
push
adc
cmp
shrb
fisttpl
popf
cmc
xadd
push
sub
ja
std
sbbb
icebp
xchg
inc
dec
mov
cltd
sbb
mov
sti
sti
sti
xor
dec
xor
xchg
imull
xchg
les
into
pop
add
inc
jecxz
inc
cmc
pop
data16
sti
cmpsl
xor
mov
gs
test
in
add
xchg
out
adc
out
jns
stc
cmpb
fcomp
mov
ja
jmp
dec
iret
add
sbb
repnz
fistl
xchg
dec
jnp
iret
insl
roll
popf
addr16
mov
xchg
mov
mov
adc
aad
and
pushf
mov
ret
gs
mov
fisttpl
sub
mov
push
arpl
out
mov
fwait
pop
cmp
lret
push
push
dec
sahf
arpl
imul
lea
inc
fnstsw
xchg
pushf
test
xor
add
pop
andl
add
fistps
jmp
loope
test
pop
je
mov
rol
or
add
outsb
pop
xchg
cltd
cltd
push
mov
loope
inc
cltd
pop
or
dec
add
pusha
sbb
fidivrl
in
out
xchg
inc
inc
and
dec
inc
jno
and
sub
jb
out
push
mov
and
push
popf
stos
xchg
cmc
in
inc
inc
shll
add
stos
xor
out
sub
popa
adc
and
insb
xor
adc
mov
mov
or
mov
mov
mov
push
into
mov
stos
cmp
adc
testl
add
xor
mov
in
push
mov
jnp
rcrl
push
mov
out
jmp
mov
out
iret
mov
mov
fcmovnu
mov
and
std
push
pop
jl
movups
push
xchg
cwtl
push
int
test
add
xor
dec
mov
jge
addr16
jbe
popa
outsl
inc
lds
mov
mov
sub
psubusb
inc
lea
xor
neg
cwtl
and
loopne
sub
outsb
xchg
daa
nop
add
jp
leave
or
inc
jne
inc
mov
cmp
xlat
mov
movsl
mov
notb
or
mov
stc
aam
cmp
jg
rorl
fnstenv
ja
adc
and
mov
pop
push
movsb
fmull
adc
xor
mov
adc
ja
xlat
outsb
aas
and
dec
fsubrl
mov
cmp
stos
mov
push
pop
into
jge
jo
and
lcall
leave
or
jle
push
lea
fwait
inc
xchg
mov
scas
out
mov
flds
pop
xchg
dec
gs
in
enter
in
mov
pop
adc
pop
outsl
dec
add
jns
jo
xchg
int
in
pop
xchg
lret
shl
movsl
fcompl
sahf
sbb
jmp
jl
enter
inc
rcl
into
fxch
push
mov
sbbb
outsb
xor
xchg
cmp
in
jno
mov
pusha
leave
sub
fstpt
cli
daa
adc
cmp
fisubs
adc
jecxz
xchg
lea
cmp
pop
jno
lahf
add
adc
and
push
adc
jnp
aad
iret
data16
cltd
xor
divl
into
or
pop
fldl
mov
pop
lods
xchg
leave
jmp
push
int3
xchg
sub
xlat
les
xchg
loop
stc
jecxz
js
je
xor
leave
sahf
cmp
mov
adc
cld
lahf
fdivrl
mov
mov
imul
push
push
std
adc
mov
cmp
out
repnz
es
mov
lea
and
cmp
fcmovnbe
mov
les
fmuls
sub
outsl
push
sub
out
popa
test
xorb
push
mov
arpl
xchg
sbb
mov
adc
pop
rcll
or
jb
cmp
out
pop
sub
xor
cmpsb
popa
inc
adc
xlat
ja
stos
pop
mov
sarb
enter
push
dec
xchg
adc
add
inc
inc
enter
inc
aam
das
fs
and
test
xchg
xchg
mov
cmpsb
stc
mov
icebp
pop
shlb
mov
mov
cmp
test
sar
mov
push
lods
sub
add
icebp
inc
mov
mov
sbb
dec
pop
and
lds
sahf
lcall
fnstcw
arpl
sbb
add
aad
inc
movsb
cli
lcall
pop
mov
add
cmp
jl
loop
outsb
jmp
jb
addr16
nop
pop
sub
mov
stos
pop
imulb
push
fsubs
dec
mov
xor
sbb
push
pop
jne
insb
jb
add
dec
sbb
add
out
scas
adc
pop
adc
ds
sub
fimuls
xor
pop
es
xor
sbb
shl
stos
cmpsl
ljmp
cltd
and
sbb
jnp,pn
mov
das
xchg
lahf
lar
or
xchg
sub
jnp
xchg
cmp
rcl
xlat
sub
movsl
fimuls
aas
pop
or
cs
inc
orl
push
xor
sub
xchg
fldt
js
push
mov
jge
cwtl
shl
pusha
pop
mov
cmpb
pop
pop
out
loopne
dec
dec
aaa
jle
aaa
add
sbbl
dec
out
or
jg
jmpw
ficompl
xor
push
fwait
rol
sbb
adc
sub
or
mov
cmp
push
cmp
out
gs
notb
test
je
aas
movsb
mov
clc
scas
mov
mov
push
aaa
inc
fmuls
pop
cli
mov
js
sub
jb
mov
sub
imull
or
sbb
lock
lds
mov
pop
pop
mov
mov
movsb
ja
mov
mov
inc
popa
jnp
mov
cmpsb
push
mov
jo
loop
aam
fisttpl
lods
mov
int3
imul
push
mov
movsl
fdivr
and
call
int3
cmp
cmp
cmp
insb
cmp
into
xchg
imul
push
mov
cmpsb
adc
cmpsb
test
sub
xchg
push
xchg
sub
call
rol
push
lock
mov
test
std
inc
popf
stc
mov
sarl
mov
cmc
or
cmp
daa
xchg
or
inc
mov
dec
dec
in
add
movsl
add
and
ja
les
inc
sub
sahf
icebp
les
into
add
dec
xor
stc
mov
pop
adc
sub
stos
fiadds
mov
jns
repz
inc
cli
shl
mov
int3
pop
sbb
ds
push
mov
inc
mov
pop
cmc
sub
int
sub
sbb
dec
sbb
ss
orb
clc
xlat
xlat
dec
notl
int
jg
adc
incl
loopne
jmp
lret
and
sub
addr16
and
icebp
sbb
adc
mov
mov
or
negl
add
loop
lods
mov
pop
ret
mov
shl
cltd
adc
jge
ret
out
mov
mov
xor
lods
lcall
inc
fdivl
inc
lahf
jp
cmp
es
in
add
xchg
mov
aam
xor
lds
and
adc
pop
inc
inc
out
in
cmp
dec
lahf
push
xor
fsubl
dec
or
bswap
sti
aam
out
cmc
mov
fsubrp
negb
jo
pop
es
jae
loop
pop
jle
sub
test
and
cltd
push
nop
fidivrs
das
push
adc
ljmp
dec
lcall
inc
arpl
or
in
mov
int
repz
lods
mov
lcall
into
adc
std
cmp
cmc
add
clc
mov
pushf
cwtl
arpl
jae
in
in
sub
lret
dec
in
pusha
xchg
inc
mov
arpl
rorl
and
icebp
loopne
mov
subb
in
out
and
pop
jns
mov
je
sbb
insb
stos
fwait
js
popf
mov
andb
pop
mov
add
cwtl
sub
testb
jmp
out
mov
inc
add
daa
jge
mov
aam
imul
ljmp
cmp
testb
fstpt
test
inc
mov
into
fadd
enter
push
aam
push
mov
rcr
and
jo
outsb
clc
or
mov
inc
add
sbb
popa
rcrl
inc
mov
dec
xchg
sub
popf
jg
test
lods
les
and
jecxz
xchg
adc
in
cld
repnz
sbb
fisttps
mov
bound
pop
pop
jae
fs
outsb
pop
lods
ljmp
arpl
call
cwtl
in
imul
jle
fstpt
nop
stos
lcall
push
ds
popf
rcr
lods
pushf
push
adc
mov
sub
jne
fadds
jno
cmc
mulb
xchg
xchg
hlt
xlat
lcall
loop
sub
adc
jnp
rcrb
sub
pop
loopne
loope
add
mov
or
mov
lock
mov
inc
sbb
aas
xchg
pop
xor
stc
adc
cwtl
lods
cmc
push
cwtl
sub
stos
jg
mov
dec
je
aam
sbb
sbb
into
cmp
scas
outsl
cmp
sub
leave
das
jo
test
mov
aad
sbb
call
fcoml
test
or
and
sbb
pop
aaa
rclb
clc
cmp
cmpb
jmp
dec
mov
fisubrl
jp
ror
repz
orl
fsub
cltd
dec
and
and
out
cli
cli
jg
mov
scas
push
dec
and
jg
jecxz
cmp
into
fld
cmpb
jae
mov
mov
sarb
push
les
dec
imul
push
cmp
and
out
jmp
insb
je
and
jae
sub
out
imul
cmpl
jg
lret
sub
xlat
mov
sbbl
out
push
xor
shrl
mov
lcall
xchg
or
out
mov
push
xor
lret
addb
mov
rcrb
in
push
dec
add
dec
pmuludq
cwtl
dec
mov
gs
sub
mov
addr16
mov
sarl
rcrl
inc
mov
push
shll
inc
jne
mov
shll
test
xor
dec
mov
ret
loopne
sbb
shll
dec
push
sbb
test
adc
in
mov
clc
add
cmp
inc
adc
mov
stos
push
enter
fimuls
xchg
add
jle
sbb
jo
int3
nopl
push
sbb
xchg
add
mov
dec
stc
adc
mov
rolb
add
cmpsl
sbb
sbb
sbb
and
mov
inc
add
lret
test
mov
adc
ljmp
or
and
inc
imul
xor
sub
mov
cmpsl
popf
cli
inc
idivb
push
xor
xchg
push
into
sbb
adc
or
fdivl
mov
mov
mov
es
mov
mov
pop
push
jp
cmpsb
adc
lea
jmp
loop
cmpsb
or
stos
push
notb
pop
mov
and
push
dec
mov
push
fmull
out
popa
sbb
jp
inc
jg
add
fs
fs
fwait
daa
xchg
inc
test
ret
sub
outsl
shrb
shlb
pop
fldenv
xor
push
xor
xor
es
cmp
sbb
arpl
cld
ljmp
mov
loopne
out
mov
xlat
add
jno
in
inc
pop
mov
xchg
pushf
cmp
push
xchg
cmp
jle
push
sar
out
sbb
pushf
sbb
sub
cmp
ret
negb
adcb
shlb
push
lds
xchg
ret
je
in
in
inc
adc
jmp
pushf
jge
and
mov
pop
outsl
mov
loop
out
rcrl
push
fidivs
loope
mov
push
or
cmp
jns
aad
ror
insl
mov
lea
mov
sahf
cwtl
std
lods
roll
addb
ficomps
aaa
push
sbb
sbb
jl
popf
gs
sbb
jp
aas
int
cs
sub
inc
insb
ror
les
rorl
fidivrs
mov
mov
clc
bnd
push
in
inc
lock
push
xchg
ja
adc
push
fnstsw
sub
jle
fldl2t
add
lds
xor
jle
cmp
cmp
pop
inc
add
gs
mov
pop
scas
aad
dec
cmp
cmpsb
ret
cmp
mov
or
aam
imul
addl
jmp
scas
test
outsl
sbb
pop
test
xchg
add
pop
nop
jae
push
nop
dec
scas
stos
jbe
fdivl
inc
gs
adc
repz
push
mov
jl
and
cltd
xchg
cmp
pop
cmp
add
scas
scas
dec
outsl
out
jg
jge
fcmovne
fistps
adc
mov
or
inc
cmp
cmp
ja
fwait
outsl
popa
in
shrb
mov
and
call
out
bound
imul
sbb
negl
stc
lea
mov
and
cmp
test
push
cld
outsb
insl
imul
insb
leave
adc
pop
and
in
adc
mov
jno
lods
jo
rcrl
push
mov
rcrl
jg
cmpsb
fdivl
mov
jecxz
outsl
mov
xor
dec
mov
pop
je
dec
ss
and
mov
fwait
ss
mov
lods
jne
stc
popa
lea
decl
mov
fstl
dec
xchg
or
out
cmp
cmp
out
cmp
mov
xchg
adc
fstps
andb
out
mov
push
inc
jae
js
dec
lock
roll
mov
movb
sbb
mov
inc
enter
adc
aaa
lods
movsl
xchg
mov
or
in
push
dec
test
xor
test
stos
pop
lret
jmp
jg
xor
cmpsb
and
fistpl
push
dec
dec
jno
cmp
sarb
xchg
pop
sub
fldt
push
out
icebp
mov
sub
or
nop
adc
jg
shlb
mov
insb
mov
out
sbb
jmp
jbe
test
push
xor
inc
xlat
out
add
xchg
mov
lock
aam
jns
test
sub
push
icebp
jg
rcr
dec
cwtl
enter
adc
flds
jp
inc
fmull
jno
outsl
xsaves
push
loope
xchg
xor
lock
and
fcmovb
scas
push
in
int
mov
sbb
imul
stos
loop
sub
xlat
daa
unpcklps
aad
mov
jge
fs
sbb
push
sbb
lcall
push
and
mov
jle
bnd
push
lds
jns
lods
mov
pop
mov
mov
mov
loope
or
jg
push
mov
in
push
push
dec
push
lret
and
fiadds
and
inc
xor
and
jb
int
mov
les
sarb
xor
out
jecxz
imul
test
pop
aas
cli
jecxz
add
xchg
and
aas
fs
mov
push
inc
dec
mov
pop
xchg
pop
push
and
sbb
loope
sbbl
ja
repnz
int
inc
pop
daa
mov
cmp
cmp
test
cmp
fcomps
addb
mov
xchg
adc
ror
pop
addl
and
outsl
pop
or
or
pushf
push
fwait
loopne
ret
dec
cltd
iret
dec
cs
mov
mov
lcall
sub
xchg
pop
fsubrl
push
and
jg
mov
lcall
jnp
push
scas
int
or
push
adc
mov
sub
inc
xor
ret
mov
ds
cltd
in
fisttps
mov
adcb
je
mov
enter
cmp
cmp
aas
mov
out
stos
popa
jb
cmp
xchg
and
xor
push
jns
aam
out
mov
icebp
movb
ficoms
in
fsubs
fidivrs
dec
pop
adc
adc
jbe
mov
add
xchg
out
clc
cmpl
loopne
push
ja
in
dec
xchg
cltd
fstps
out
pop
add
mov
push
lret
add
mov
nop
dec
arpl
outsl
cmpsb
and
ret
and
mov
cmp
icebp
sbb
jg
mov
pusha
and
inc
out
int
insl
jle
and
push
sub
ds
imul
add
fs
push
sub
push
insl
imul
cmc
icebp
xor
xlat
movsb
sbb
or
mov
aas
lahf
ljmp
lcall
movsb
cmpsb
gs
mov
xchg
sbb
je
imull
xchg
inc
xor
xchg
mov
xor
mov
pop
jmp
sub
pusha
in
hlt
pop
adc
sahf
push
mov
mov
sbb
sbb
ljmp
jg
or
flds
xor
lock
cld
xor
pop
repz
cmp
enter
mov
out
sbb
add
aas
imul
out
aas
xchg
dec
and
mov
repnz
inc
jno
mov
cmp
add
xchg
outsl
shl
sbb
leave
sub
js
pop
mov
xchg
ds
out
ficompl
hlt
xchg
popa
cld
jmp
pop
ret
adc
pusha
imulb
xchg
mov
dec
sub
push
and
and
cmp
inc
dec
pop
sub
jne
inc
xchg
fldenv
jnp
sub
jbe
ljmp
sbb
loopne
cmpsb
push
jbe
jnp
dec
sbb
clc
xchg
clc
pop
fcomps
mov
fsts
sub
xor
loopne
jns
xchg
mov
sub
xor
pop
cmp
xchg
test
fcmovnu
add
xorb
push
inc
and
and
in
lret
outsb
arpl
mov
push
negl
xchg
hlt
int
xor
lods
add
lea
fwait
pop
lret
xor
loop
popf
cli
ffree
add
mov
fisubrl
icebp
jecxz
ret
dec
out
fnsave
pop
inc
inc
pop
jo
das
repnz
cmp
insl
out
fstl
mov
outsl
push
push
mov
push
imul
mov
mov
sub
movsl
dec
mov
scas
adc
test
sbb
jp
insl
xchg
ret
add
fdiv
cmc
test
sub
xor
pop
lcall
mov
movsl
sub
std
push
pop
dec
aad
rcrb
fwait
lock
and
test
add
shlb
mov
lock
jbe
lahf
movsl
push
test
inc
out
mov
test
nop
xchg
add
lret
ret
pusha
fcmovbe
loope
mov
adc
in
out
add
fcmovnu
xor
sbb
mov
out
leave
fcomp
cwtl
pusha
inc
cmp
inc
ss
push
lcall
sbbb
xchg
jl
adc
mov
je
out
js
mov
mov
jbe
dec
aam
sti
sbb
inc
push
sub
xor
nop
sbbb
sarl
nop
pop
lock
lcall
lock
or
jo
xor
mov
gs
in
mov
loopne
cmp
mov
int
cwtl
int3
into
dec
mov
pop
lock
stos
mov
jne
dec
ss
pop
xlat
mov
pop
add
lds
fsts
jl
add
sti
in
dec
jl
mov
or
adc
loop
xchg
fwait
out
push
loope
xchg
xchg
adcl
leave
sub
sub
psrld
into
fdivrl
push
adc
stos
subl
dec
jmp
inc
dec
call
pop
xlat
pop
or
int3
cmpsb
inc
sahf
repz
ss
int
push
and
dec
xorl
movsl
das
mov
call
stos
fcomp
int
inc
jne
ss
and
xchg
int3
in
mov
ss
jo
sbb
popf
gs
enter
fs
adc
sub
xor
movsb
push
in
cld
or
nop
cs
fst
cmp
mov
sbb
jb
cmp
pop
jne
stos
cltd
mov
jnp
jge
imul
cmp
int3
push
xor
je
xchg
into
fldt
xor
adc
pop
fwait
pop
test
mov
mov
ret
roll
mov
movsb
int3
in
mov
subl
add
push
mov
iret
sbb
nop
and
mov
sub
push
xchg
cwtl
popf
fildll
mov
sub
adcl
jo
sub
in
mov
push
inc
shrl
add
shll
aam
mov
pop
sbb
addr16
cmp
and
imull
jp
std
hlt
aas
push
clc
clc
mov
xchg
cmc
lret
aad
shll
outsl
stos
out
ror
xlat
into
in
add
mov
lea
xchg
aaa
jb
and
cmp
mov
std
imul
jle
xchg
adc
xchg
push
sbb
adc
ud1
ss
repnz
sbb
xor
ficoms
push
mov
add
push
pop
xor
and
mov
daa
mov
ja
les
add
pop
jge
mov
jmp
orl
outsl
xchg
push
ret
jo
fdivs
fsub
stos
pop
bound
repnz
mov
xchg
aam
pop
stos
pop
in
push
sti
aas
stos
mov
ds
xor
lcall
out
fildl
dec
xchg
in
pop
cmp
xlat
add
dec
repz
bound
xor
pop
push
and
rcrl
lock
xchg
mov
push
mov
xchg
fsubrl
jmp
je
cwtl
and
mov
hlt
mov
cmp
mov
add
bound
add
iret
jb
xorb
lock
fwait
xchg
nop
out
insb
lcall
pop
ss
adc
xchg
loope
jbe
jle
fisubrl
lock
xor
movsb
mov
lret
mov
xlat
pop
negb
popa
shrb
adc
dec
pop
loopne
ret
jnp
xchg
lcall
push
inc
mov
shrb
repz
mov
push
cwtl
cld
out
sbb
xor
jg
icebp
inc
jb
xchg
mov
test
in
out
mov
push
das
mov
or
mov
stos
jle
enter
cltd
or
das
jne
flds
enter
mov
hlt
stos
mov
aad
imulb
sbb
lahf
inc
jnp
loope
xchg
xlat
int
in
lret
pusha
loop
push
or
test
pop
mov
xor
and
rorb
xchg
or
mov
add
add
xor
cltd
into
xchg
jnp
scas
cmp
pop
inc
mov
add
lock
jmp
or
sti
shrl
mov
push
popf
jne
in
movsl
std
or
add
lock
int
dec
sbb
xchg
adc
movsl
and
sbb
mov
or
pop
add
pop
jne
in
sbb
sub
push
push
adc
es
or
lret
push
jg
sbbb
in
cld
pushf
rcr
xor
lahf
adc
mov
outsb
push
negl
jecxz
sub
rcrl
sbb
loope
mov
jl
dec
add
in
scas
test
insb
push
out
scas
cld
push
add
push
push
xor
pop
fwait
bound
xchg
lahf
xchg
xchg
sbb
jg
cmp
out
popa
stc
push
add
shll
pop
push
cmp
mov
and
cmp
xor
das
fnstenv
dec
xchg
xchg
push
or
hlt
sbb
push
fiaddl
stos
xor
stc
lds
or
test
jne
jmp
cs
mov
mov
mov
cld
push
sbb
lret
cmp
ljmp
dec
out
test
roll
sbb
aas
je
arpl
pop
adc
or
imul
pop
in
scas
sbb
sbb
out
adc
add
test
repz
jecxz
cmpsl
dec
icebp
mov
scas
sti
dec
xchg
push
xchg
mov
mov
pop
xor
and
jecxz
lock
xor
je
xor
imull
popa
cmpsl
sub
mov
xor
add
es
in
mov
test
addr16
xor
inc
test
repz
aam
iret
or
fdivs
fcoml
gs
fwait
sahf
jb
call
in
jmp
xor
pop
inc
jmp
mov
cld
dec
cmpsb
ds
cmp
enter
orl
xorl
jmp
stc
jae
stc
xchg
mov
xchg
and
aas
in
pop
imul
aad
sbb
dec
push
jnp
leave
ret
mov
popf
aad
sbb
cmp
lret
loopne
mov
and
jb
aas
es
in
xorl
lret
mov
mov
cmpsl
push
ljmp
jns
cs
cmp
xor
sti
push
dec
dec
mov
lcall
fwait
sbb
jae
imul
nop
repz
sub
push
ja
cmpsb
push
lret
stc
inc
or
sbb
inc
mov
inc
hlt
push
sar
out
add
dec
sbb
les
or
xchg
jp
decb
xchg
pop
inc
sub
inc
gs
push
push
scas
popf
je
lcall
lods
js
and
stos
movsb
mov
js
inc
xchg
pop
aad
loope
sub
bound
xchg
sahf
repnz
mov
xor
mov
pop
les
call
push
or
bound
mov
jae
lods
mov
sarb
xor
in
pop
push
jl
hlt
fcoms
xor
sub
xor
mov
xchg
out
popa
in
ds
int3
push
cli
nop
jg
dec
inc
xor
mov
cld
mov
cmpsb
rcrl
pop
adc
rclb
into
or
lods
out
push
push
adc
mov
cmp
pop
sbb
mov
pop
stos
out
les
test
inc
ret
cmp
aaa
jmp
mov
or
jbe
cmpsl
jb,pt
mov
mov
rcll
aam
fsts
mov
jns
loope
mov
in
lds
incb
adc
push
scas
fisubrs
adc
mov
inc
dec
lret
cld
call
inc
or
outsl
test
pushf
mov
repnz
mov
cmp
lea
iret
xlat
pop
lret
ja
push
mov
jle
cmp
loope
xor
dec
jmp
push
test
xorb
dec
mov
and
pop
mov
mov
lods
dec
inc
or
mov
cwtl
push
and
xchg
push
mov
cmp
and
pop
stos
fcmovnbe
imul
pop
xchg
aaa
les
hlt
mov
xchg
mov
jge
inc
mov
stos
sub
inc
rorb
imul
mov
rcl
add
xchg
pop
enter
push
imul
rorb
out
pop
mov
sbb
mov
in
sti
pop
xchg
sub
stos
sub
fwait
xchg
js
push
push
sbb
jecxz
add
pop
inc
xor
push
pop
sarb
jmp
outsb
notb
or
sbb
sbb
shll
out
cwtl
mov
xchg
sbb
adc
in
push
add
and
hlt
ret
ljmp
lret
or
xorb
ss
rcrl
mov
test
jp
add
mov
cmpsl
jb
mov
icebp
fiadds
mov
gs
aas
inc
sub
push
ret
adc
xor
cmp
mov
add
aad
push
xchg
xchg
ret
or
mov
aad
ss
xchg
lea
push
pop
add
sub
pusha
push
fmul
xor
lods
lods
inc
cs
cmpsb
mov
and
int3
enter
dec
call
inc
arpl
or
push
and
xlat
movsb
cwtl
jo
fistps
pushf
icebp
xchg
inc
lock
jmp
sub
pop
insl
push
jns
cmpsl
scas
jns
shl
push
pop
and
pop
add
jb
out
fimull
mov
sti
popf
and
loope
int
sahf
ret
and
rorl
pushl
push
es
xor
or
mov
mov
dec
mov
jno
jle
scas
xchg
out
imul
repnz
fsubl
mov
cmp
cld
push
shlb
orb
loop
dec
mov
mov
aad
mov
mov
lcall
add
xchg
jo
jle
xor
ljmp
pushf
lret
es
data16
in
inc
fimuls
stos
loop
daa
loopne
xor
mov
xor
negl
xchg
sub
arpl
inc
out
rolb
repz
xorb
shrb
data16
je
ds
ljmp
push
ret
sahf
sar
sbb
ds
ljmp
mov
in
loop
in
xchg
sub
adc
xor
test
xor
pop
inc
and
cmc
cmpl
sahf
adc
jg
out
sub
jecxz
scas
mov
sbb
push
ja
adc
imul
gs
xchg
pop
aad
jno
xchg
dec
cmp
pusha
mov
and
adc
pop
adc
std
and
mov
pusha
das
hlt
imul
fs
dec
test
xchg
mov
imul
enter
push
push
cmp
arpl
push
cld
pop
xor
imul
jg
sub
inc
pop
shl
dec
je
or
pop
nop
lds
gs
rorb
sbb
fiadds
das
sub
dec
inc
and
stc
insl
adc
loopne
cmp
icebp
sbb
call
sar
mov
mov
dec
ret
out
jge
lcall
inc
in
pop
dec
mov
lods
jns
cmp
out
pop
call
ret
jmp
mov
je
es
cmpsl
sub
arpl
int
xchg
inc
bound
push
fwait
or
loope
mov
xor
mov
mov
cld
sbb
xchg
sbb
clc
hlt
inc
lods
hlt
dec
imul
or
xor
sub
jo
jo
div
clc
call
dec
push
fdivs
xor
add
pushf
sbb
out
xchg
cltd
test
mov
mov
popa
adc
scas
lea
xor
xchg
add
enter
out
popf
mov
jge
shll
and
push
lahf
cmpsb
insl
jl
sub
repz
sub
gs
outsb
popa
cmp
aad
push
jecxz
rcr
hlt
jne
leave
cmp
xlat
and
je
adcl
sahf
ljmp
jnp
sbb
mov
fs
add
cmp
pop
push
outsl
push
aaa
mov
jmp
test
jo
inc
sbb
lret
add
xchg
cs
xchg
xor
mov
loope
mov
mov
sbb
lods
inc
xchg
dec
mov
in
popf
mov
mov
popa
dec
and
and
imul
fnstcw
in
mov
cmc
add
sarl
jbe
xlat
mov
or
push
hlt
ja
icebp
jae
push
divl
jg
lcall
sahf
mov
mov
fidivs
lcall
jl
mov
mov
ret
int3
insb
sahf
push
sub
xor
fldpi
cltd
sub
loope
push
mov
mov
sub
or
cmc
or
int3
push
ffreep
divb
stos
jnp
jo
dec
pop
push
dec
xchg
inc
subb
test
jae
mov
ret
pop
sbb
sbb
cmpsb
jbe
scas
xchg
fucomip
sbb
fldenv
xor
add
push
les
iret
xor
faddl
xchg
mov
sahf
movsl
rcrl
aad
mov
inc
and
hlt
lods
mov
inc
out
inc
and
add
mov
ljmp
xor
xor
ror
jno
dec
dec
iret
insl
inc
jmp
sub
jl
lock
negb
cs
or
lret
push
out
movsl
fsubrp
mov
xchg
or
mov
inc
enter
lea
and
addr16
fldln2
inc
pop
or
mov
insl
push
andb
gs
pop
outsl
push
xchg
jle
adc
popf
adc
cltd
push
mov
mov
popa
jae
lock
in
lods
push
movsb
insl
pop
dec
cmp
dec
sub
lret
outsl
sub
cmpsb
fmull
arpl
jp
jg
xchg
jae
aam
jmp
dec
in
stc
out
das
mov
enter
and
dec
mov
out
jl
sub
insb
cmp
jg
add
jmp
repnz
out
shll
dec
pusha
cltd
pop
mov
ss
push
cli
dec
push
or
xchg
sub
and
mov
lret
inc
and
dec
sub
dec
pop
aad
call
push
lea
jnp
fs
popa
mov
pop
gs
mov
call
dec
mov
addr16
fs
lods
clc
shrl
jnp
cltd
or
push
mov
dec
mov
jecxz
add
aas
rolb
aaa
xchg
sbb
rorl
jge
xchg
mov
cld
sub
aaa
push
push
int
jnp
enter
nop
pop
mov
stos
and
jg
xchg
jno
cmp
push
xchg
ret
lods
fisubrs
and
push
jne
sbb
rcrb
ss
inc
cmp
and
sbb
fmul
or
push
xchg
mov
cwtl
dec
sbb
xorl
fildll
jg
pusha
repz
arpl
decl
xor
out
pop
adc
into
in
mov
jo
jge
movsl
xchg
ljmp
pop
sub
cltd
mov
enter
ja
mov
mov
in
jbe
in
sub
cli
mov
adc
xor
and
push
xchg
and
sub
addr16
test
push
sbb
call
xor
bndldx
push
in
xor
cmpsb
movsl
mov
fwait
adc
aas
inc
mov
es
dec
pop
fistps
je
pop
xor
inc
xchg
xor
cmp
dec
mov
cmpsb
cmp
xchg
popf
hlt
nop
leave
mov
pusha
jns
sub
popa
ret
in
and
add
out
mov
lcall
mov
jmp
add
mov
xor
xor
or
addb
inc
or
idivl
add
insb
cmp
cmp
movups
nop
mov
jmp
xor
or
inc
bound
pop
add
pop
pop
cli
mov
push
push
insl
pop
push
imul
mov
adc
inc
cmp
mov
pop
jo
xor
push
push
sbb
sbb
sbb
mov
add
xor
arpl
push
pop
adc
adc
dec
lret
jge
mov
addl
sub
mov
insb
icebp
push
pop
stc
mov
mov
push
cmp
mov
xchg
dec
cmp
xchg
addr16
push
pop
add
fs
cltd
insl
fbstp
rcl
lret
mov
add
push
loope
mov
lret
mov
out
sub
mov
sbb
push
push
mov
cmpl
rcl
fwait
jbe
pop
cmp
pop
hlt
push
rcll
ja
js
jae
xorb
cmp
mov
jne
mov
inc
clc
xchg
cmp
lret
in
push
out
sbb
adc
dec
dec
sbb
testb
ret
mov
sbb
aam
mov
sub
fsub
test
movsl
inc
ret
xor
negl
test
sub
sarb
push
lcall
push
jb
lea
loop
stos
lods
imul
pop
push
ds
xchg
sbb
cmp
and
push
mov
mov
mov
lods
push
mov
mov
and
cwtl
sti
cwtl
movsb
mov
adc
mov
jb
shlb
movsb
pop
rclb
daa
std
adc
pop
push
push
sti
hlt
push
jmp
mov
aad
pop
outsl
imul
add
cmp
xor
adc
mov
mov
int
dec
cmp
icebp
jecxz
fadds
in
push
div
dec
or
mov
ljmp
pop
jae
cmp
add
add
pop
inc
jns
bound
imul
pop
stos
xor
icebp
dec
pusha
pop
loopne
out
add
pop
dec
or
mov
xor
addr16
dec
xchg
push
push
pop
add
icebp
adcb
jge
dec
pusha
adc
sub
dec
push
ret
lds
mov
fwait
lcall
scas
pop
xor
push
daa
ja
pop
insl
inc
insb
mov
out
fs
arpl
mov
pushf
and
pop
enter
mov
dec
and
dec
out
mov
mov
fmul
iret
sub
sbb
lahf
das
xchg
popa
mov
popf
ret
icebp
int
jmp
ret
push
fwait
stos
jmp
inc
push
adc
push
mov
xchg
xlat
pop
dec
scas
push
inc
aam
jns
mov
cli
sbb
fcompl
add
fs
add
adc
loope
mov
sbb
les
mov
fildl
call
push
imul
jmp
mov
les
jbe
xchg
jmp
dec
mov
push
into
sti
mov
cmp
call
mov
dec
lret
pop
xchg
cmpsb
or
stc
inc
pop
test
push
sarb
jno
sub
sub
xor
xchg
or
mov
out
sbb
jmp
daa
sub
out
int3
mov
jnp
cld
jp
in
mov
iret
adcl
mov
int3
dec
xor
rcrb
add
push
add
loope
xor
movsb
xchg
lret
xor
lock
xor
rclb
insl
add
aam
scas
pop
fdiv
sahf
scas
out
mov
dec
imul
stos
adc
int3
push
pop
xchg
cs
fld
mov
bound
scas
enter
data16
nop
and
pop
fisubl
ret
push
arpl
mov
repnz
dec
jle
scas
push
in
push
ficomps
mov
fisubrl
dec
mov
repz
pop
icebp
jo
int
lcall
scas
adc
cmc
pop
outsl
inc
loopne
sub
add
dec
loopne
jbe
cmc
push
push
push
xchg
aad
xchg
ficoml
xchg
enter
mov
sub
jmp
pushl
fwait
mov
push
int3
sahf
fstpl
or
les
scas
fidivrl
loop
movsl
push
ljmp
push
mov
js
fists
push
jbe
hlt
lcall
cmp
fisttpll
cmpl
roll
pop
dec
je
jp
insb
mov
das
sub
fdivp
ret
mov
mov
iret
jbe
sahf
ficomps
ss
pop
mov
insl
pop
adc
lea
mov
in
mov
aad
xor
mov
lahf
jnp
hlt
mov
cmc
pop
sbb
repz
ret
je
ds
test
scas
cli
scas
sti
imul
aad
gs
xor
stc
fprem1
int3
sub
or
es
jnp
adc
xchg
lcall
mov
sbb
subb
inc
pop
push
bound
test
pop
add
and
rorl
aad
lods
jmp
push
loopne
and
test
sahf
inc
cmp
roll
cmp
jge
dec
cltd
adc
lret
dec
jmp
shll
daa
or
mov
xchg
lods
and
xchg
sub
int
mov
push
sbb
cmp
adc
fnstsw
lock
shr
inc
sahf
cmpsb
out
push
mov
mov
or
das
out
and
movsb
cmp
mov
sbb
mov
pop
jle
sti
mov
pop
sub
in
cmc
hlt
xchg
adc
daa
sub
pop
mov
xlat
in
sarl
xor
add
cmpb
repnz
lahf
popf
pop
xchg
add
jno
test
and
sbb
jge
jnp
sti
lret
pop
clc
int
xor
fcomp
ljmp
or
or
rcrl
aaa
jnp
xchg
xchg
aad
dec
xlat
or
mov
out
rcr
ret
add
adc
jmp
in
cld
lods
or
aad
std
dec
into
sbb
xchg
icebp
xchg
lods
inc
lss
fdivr
xor
cmpl
sub
mov
pop
and
cmpb
mov
insl
pop
mov
jae
jg
je
add
cmp
mov
mov
or
leave
ret
int3
dec
xor
das
sbb
or
js
sti
cltd
dec
xchg
mov
sub
ds
adc
testl
push
cmpsl
adc
lea
into
add
divl
and
adc
cmp
popa
aaa
sbb
mov
test
fsubrl
mov
test
loope
leave
and
cltd
mov
or
leave
repz
push
ja
xlat
dec
lea
divb
jns
cmpsb
divb
mov
pop
push
lcall
lea
nop
std
insl
mov
dec
push
sar
inc
insb
rcr
pop
call
mov
mov
push
xchg
mov
pop
out
div
in
int3
mov
push
sub
xchg
xor
lds
ret
jnp
inc
stc
into
mov
xchg
sub
lcall
inc
push
pop
xchg
or
push
sbb
aaa
cwtl
fistpll
loopnew
scas
ja
lcall
movb
je
shl
jae
enter
sub
mov
mov
roll
push
mov
ret
add
sub
lret
cmpsl
frstor
loope
add
mov
mov
jg
bound
and
and
insl
xchg
out
xchg
sti
fcoml
push
sbb
push
mov
xorl
dec
lret
or
out
xor
lcall
mov
jle
fbld
cmp
insb
pushf
jbe
cmp
jge
jnp
aaa
mov
test
pop
xor
out
and
ficomps
test
das
and
add
push
aas
and
andl
sbb
pop
cmp
dec
cmpsb
imul
sbb
mov
cmpsb
or
xchg
and
xor
inc
bound
push
icebp
aaa
fcomi
add
and
lds
ficoml
js
jle
data16
push
xor
js
jnp
scas
dec
in
add
daa
aam
and
stos
adc
fidivrs
pop
cld
notl
add
fidivrs
pop
int3
mov
cmp
inc
ret
outsb
jp
int
push
loopne
fidivs
mull
xchg
popa
outsl
ficoml
fsub
pop
in
adc
jge
es
pop
xor
leave
xchg
inc
mov
sub
sub
jb
inc
test
sbb
ftst
inc
or
imul
push
dec
or
xchg
lret
scas
add
cmp
add
fwait
or
insb
cmp
cmp
mov
imul
into
aaa
xor
sbb
cmp
int
bound
mov
sbb
sar
mov
stos
data16
imul
into
jp
xor
pop
andb
iret
inc
push
stc
fldcw
push
jnp
pop
mov
sub
xor
fists
mov
daa
addr16
fiaddl
cltd
sbb
add
repz
fs
das
cmp
jg
ja
mov
cmpsb
lret
mov
pop
arpl
aaa
popa
cmp
inc
in
cmp
and
push
and
cmp
jno
add
into
addr16
pop
imul
lods
jns
leave
stc
dec
arpl
les
or
pop
faddl
push
mulb
and
inc
insl
decb
dec
xchg
mov
push
mov
fnstsw
aaa
cli
pushf
mov
repnz
mov
leave
pop
lcall
mulb
jo
mov
xor
jns
mov
test
notb
mov
roll
mov
mov
out
cmc
pop
mov
sbb
mov
test
mov
aam
xchg
or
enter
fdivrs
das
xchg
fwait
in
mov
inc
mov
mov
mov
jno
jecxz
mov
in
rcll
mov
mov
sbb
imulb
dec
sub
in
or
pop
mov
jb
push
pop
xor
sti
xor
out
fldl
clc
push
fyl2x
and
loop
jle
mov
or
ficomps
fcomps
outsl
and
mov
popf
sahf
cmp
pop
push
inc
subb
jns
sub
adc
or
mov
lcall
inc
xchg
sub
out
stos
inc
push
lods
cmp
or
icebp
daa
jle
mov
mov
cmp
xlat
imul
lret
je
mov
adc
aam
mov
inc
aaa
in
shl
shll
mov
fmul
jp
div
cltd
ror
test
add
dec
xchg
ds
or
jns
imul
lock
test
push
fucomi
or
divl
je
or
adc
xchg
sti
rclb
jg
jb
aaa
pop
sub
push
out
jge
pop
mov
les
out
cwtl
jae
sub
rolb
outsl
scas
test
jge
out
inc
gs
jecxz
movsl
push
xlat
cmpsl
jp
jmp
gs
and
fadd
outsb
stos
add
or
mov
mov
and
pop
mov
shrl
pop
mov
jmp
xchg
dec
fiaddl
nop
push
setge
repnz
xchg
and
ds
xchg
jb
cmpsb
repnz
out
jo
or
mov
shlb
call
ljmp
mov
xchg
movsl
inc
insb
or
lret
popa
xor
xchg
outsl
fiaddl
inc
shrb
push
outsl
pop
mov
xchg
loope
pop
stc
xor
pushf
add
cltd
adc
and
lods
nop
iret
addb
mov
xchg
pop
mov
cmp
pop
mov
fmull
mov
mov
divb
data16
sahf
jno
cmc
xchg
pop
sbbl
pop
ds
cmp
fidivs
push
daa
sub
fs
add
pushf
cmp
in
stos
fchs
push
addr16
lret
stc
dec
fst
movsb
loopne
icebp
mov
cmp
mov
addl
pop
fisubrs
lods
out
or
xor
push
dec
xchg
lds
pop
loope
mov
sbb
pop
adc
pop
mov
in
test
inc
outsl
ds
mov
shll
sub
mov
shr
dec
scas
les
test
pop
test
pop
sbb
jg
sahf
push
and
test
imul
pop
popf
cmp
push
jns
sahf
fcomp
cmpsb
faddp
loopne
addr16
adc
jb
dec
xchg
aas
pop
into
jge
cmpsl
add
xchg
mov
add
scas
lahf
adc
iret
push
fidivs
sub
fisubrs
pop
rcl
adc
aas
ss
jmp
dec
sub
dec
sub
pop
scas
and
les
js
inc
dec
cmp
push
ds
test
jl
cmpsb
mov
out
inc
or
pop
xchg
sub
and
sub
in
pop
or
call
mov
stos
bound
ja
inc
jae
push
jp
push
loope
sbb
movsb
popa
sbb
jl
mov
dec
lcall
inc
hlt
pop
lahf
shll
arpl
call
mov
fwait
ss
test
mov
fnstsw
pop
je
fisttpll
jb
jp
lcall
add
cmp
cmc
jmp
push
or
pop
lret
dec
cmc
out
cwtl
call
inc
sbb
mov
and
cmc
jne
cs
xlat
sub
push
fdivrs
dec
sbb
or
sarl
clc
jbe
and
jnp
arpl
jmp
addr16
out
mov
add
xor
adc
and
inc
cmc
inc
shll
mov
push
jns
and
jo
pop
mov
test
scas
je
push
pop
jmp
add
lret
or
movsb
and
jp
pop
sahf
jnp
push
movsl
add
mov
outsl
nop
cmp
fidivs
xchg
pop
outsl
mov
lcall
add
jge
out
xchg
lods
imul
mov
sbb
add
data16
or
ss
xor
insb
sub
lods
mull
add
push
dec
lea
fiadds
inc
mov
or
inc
mov
or
sbb
inc
sbb
xchg
clc
cmp
xor
addb
enter
js
cmp
sub
and
sbb
cli
cmc
pushl
leave
mov
shlb
adc
in
bound
pop
shll
or
frstor
arpl
and
ja
xorl
mov
loopne
xchg
cmp
xor
aad
cld
pop
xor
popa
mov
sub
stos
and
dec
in
jns
jns
add
popa
test
xor
scas
fimull
push
movsb
fcmovnu
inc
inc
push
mov
push
dec
mov
pop
popa
sar
inc
jp
or
fisttpll
cmp
jge
cmpl
sbb
in
pop
pop
insb
cs
or
in
mov
out
pop
or
lock
and
sarb
clc
stc
cwtl
fiaddl
or
cld
jp
fists
aad
xor
jge
mov
and
dec
fsubrs
sti
push
sbb
mov
mov
jbe
jbe
push
out
mov
sahf
push
jle
sbbl
lret
pop
xchg
hlt
in
sbb
lock
mov
push
cmc
pop
push
mov
mov
notb
xchg
gs
cmc
enter
fnsave
pop
aaa
test
inc
pushl
xor
mov
fildll
jnp
insb
mov
push
xchg
mov
fmull
enter
mov
cmpsb
sbb
or
aad
adc
arpl
push
and
sbb
jge
jbe
test
cmpsb
inc
add
in
movsb
in
adc
mov
sti
and
insl
stos
fisubl
xor
negl
mov
fistl
stos
cmc
out
add
es
pop
lret
mov
inc
xorl
cs
mov
out
in
jbe
mov
sti
cli
xor
push
enter
or
fwait
xor
dec
xchg
mov
pop
icebp
xor
cmp
push
ret
test
outsb
push
mov
call
jmp
in
out
out
jne
test
loope
cs
cmp
ja
xchg
cmp
aam
push
sub
jg
emms
jno
imul
mov
jo
mov
aad
push
fcompl
mov
cltd
iret
clc
dec
sub
popl
pop
xchg
cmp
mov
mov
cmpsl
push
addb
das
pop
add
xchg
shlb
cmp
and
mov
dec
roll
add
sbb
sub
ljmp
lock
test
icebp
push
cmc
shrb
loope
sub
stos
idivl
jns
push
js
jmp
test
mov
dec
adc
mov
and
stc
fsubrl
and
or
fwait
xchg
shr
idivb
or
shlb
jbe
mov
pop
mov
or
pop
dec
in
das
fwait
sti
adc
xlat
les
mov
pop
cmpsl
mov
jecxz
inc
dec
sub
dec
xchg
je
rorb
ror
pop
mov
xchg
testl
jnp
push
adc
pop
xchg
sub
mov
jmp
and
cmc
out
mov
sub
mov
sarl
inc
jmp
cmpl
test
lock
mov
roll
in
mov
into
inc
andl
iret
notl
ljmp
out
cli
stos
leave
inc
inc
cmp
jl
adc
lret
cwtl
xchg
fldcw
cltd
aam
fmuls
add
test
mov
pop
dec
push
push
mov
test
mov
mov
add
cmp
push
sub
jo
in
push
es
jmp
mul
push
xor
mov
dec
and
out
testl
jno
inc
lock
dec
rcl
xchg
test
leave
jo
lret
cmpsl
push
repz
dec
jnp
cwtl
mov
je
cwtl
jmp
test
pop
dec
sub
jno
push
insl
in
les
outsb
imul
xor
cmp
inc
ds
mov
push
inc
fildl
jl
in
cmp
loopne
sahf
lods
lret
xchg
lods
xor
jbe
add
add
aad
adc
int3
push
test
inc
and
or
dec
jge
xor
mov
push
sub
mov
jp
mov
shll
lods
jle
add
cmpsb
stos
inc
mov
insb
mov
dec
push
mov
xchg
pop
inc
push
jle
aam
popa
adc
cmpsl
bound
scas
jecxz
lock
add
dec
xchg
imul
pop
roll
ficoml
cld
loopne
xchg
pop
jge
int
into
jbe
nop
cmc
cmp
scas
movsl
out
mov
cmp
test
scas
sar
cld
sbb
pop
roll
lret
mov
add
fisttps
leave
daa
cmpsl
fdivs
ss
mov
sub
xchg
xchg
out
jno
ss
out
jmp
xchg
rcll
pop
lock
dec
lds
mov
mov
adc
int
lods
xchg
cmovae
dec
cmp
push
pusha
flds
jnp
add
pop
xor
xor
mov
xchg
sub
sub
mov
pop
sbb
jne
sub
jb
mov
mov
or
scas
mov
bound
rolb
leave
inc
push
mov
add
sbb
or
mulb
mov
and
repnz
rol
orb
testl
sub
fxch
pop
jnp
imul
mov
sub
cltd
rcr
mov
dec
sbb
mov
pop
lret
lret
push
jns
and
push
push
cld
jecxz
pop
xchg
sbb
dec
aas
mov
mov
scas
mov
adc
faddl
hlt
mov
or
ja
repnz
jno
fstl
pop
in
repz
pop
daa
sbb
addr16
xchg
aas
out
xlat
call
cmpb
push
add
and
mov
cltd
test
bound
enter
or
les
out
or
cmpsl
dec
movsb
test
ret
mov
int
rcrl
mov
nop
in
push
bnd
add
rcrb
mov
jmp
or
sub
cmpsl
fstl
imul
pop
and
xor
cmp
push
fs
repnz
sub
pop
lds
mov
enter
adc
sub
popa
pop
jnp
mov
xchg
sub
lcall
mov
jle
pop
jp
insb
mov
mov
ss
push
add
dec
adc
xchg
push
push
into
shlb
movsb
movsl
cltd
lods
mov
aaa
mov
ret
mov
outsl
xchg
push
aad
mov
jg
mov
jg
inc
fnsave
xor
insb
mov
adc
xchg
jge
jmp
imul
pop
jecxz
repz
mov
or
std
out
xor
or
sbbb
pushf
lret
jl
inc
xchg
outsl
outsb
insb
mov
xor
shl
clc
push
add
pop
rorl
clc
pop
jnp
sbb
pop
lea
das
fwait
test
insl
jle
sti
daa
xlat
and
jp
push
in
notb
mov
adc
add
into
mov
lret
push
xchg
mov
add
sbb
movsl
inc
fst
daa
aad
sarb
mov
imul
mov
out
mov
divb
clc
sti
rcll
lds
les
mov
sbb
aad
ds
xchg
xor
in
clc
daa
cli
cmp
leave
or
pusha
or
popa
fcmovne
jle
jnp
mov
push
mov
add
in
ss
and
inc
sbb
sbb
push
lods
xor
or
adc
mov
rcr
pop
mov
lahf
ret
mov
dec
mov
mov
and
stos
jp
jmp
push
incb
sub
repz
leave
xchg
out
mov
cmp
pop
imul
loope
push
pop
lods
mov
cli
push
mov
xor
xchg
les
sti
jne
movsb
inc
inc
mov
pop
adc
cmpb
cmc
stos
lds
jmp
sbb
xchg
addr16
loop
lock
inc
stc
in
lock
sub
cmpsb
mov
js
adcl
popa
rclb
push
xor
and
cmp
dec
push
repnz
sbb
movsb
xor
sub
jp
testb
add
shll
push
repz
jns
mov
in
add
sbb
jmp
or
or
movsb
inc
cli
add
movsb
popa
xor
fmul
call
xchg
push
lds
push
pop
imul
mov
push
cmp
add
dec
outsl
rclb
ja
sub
and
cld
adc
shlb
stos
jmp
out
sbb
mov
lock
push
push
jp
cwtl
mov
daa
and
sbb
xor
xlat
jbe
push
sub
lret
cmp
sub
mov
push
and
push
or
scas
jns
repnz
lcall
fmul
mov
lock
loop
mov
cmpsb
sarb
test
sbb
repz
push
scas
ds
inc
mov
ljmp
ds
mov
divl
cmp
out
push
pop
std
jle
adc
dec
loop
push
lret
and
push
jae
ret
push
movsb
pop
fcomi
push
inc
add
sub
xchg
shrb
ficoml
xchg
out
lea
xchg
push
fidivrl
jns
xchg
loop
dec
dec
mov
pop
hlt
cmpsb
shl
inc
sub
cmc
mov
fwait
xchg
cwtl
push
mov
inc
adc
mov
mov
push
out
cs
jecxz
ljmp
test
ljmp
loope
sub
aad
in
push
mov
inc
aam
cmpsl
mov
std
popa
repz
or
add
ss
ss
cs
ret
dec
pop
and
xor
data16
adc
movsb
jb
loopne
iret
sbb
imulb
out
movsb
cmp
repz
lods
mov
das
int3
out
mov
xchg
cld
imul
negl
rcrb
dec
or
xchg
mov
cli
out
xchg
pushf
dec
outsb
jge
inc
cmpb
test
dec
mov
mov
jg
ljmp
leave
mov
adc
jl
aam
stc
xchg
cmp
xchg
xor
xchg
lret
pop
xchg
cmp
ret
adc
imul
sti
lods
cltd
dec
jg
out
push
lds
lret
adc
aad
aad
pop
sub
cmp
or
xchg
scas
out
sti
ret
add
int
sbb
pop
mov
xor
popf
hlt
add
adc
inc
or
daa
dec
fcoms
fs
shr
sub
push
int
pop
or
adc
push
test
push
fiaddl
mov
std
cmpsl
xor
dec
ret
add
in
adc
xor
into
cli
and
or
xchg
ss
mov
subl
sbb
nop
adc
adc
pushf
jno
in
or
clc
pop
inc
fidivs
nop
loope
test
or
aad
shll
ss
out
aaa
dec
lea
and
adc
shlb
adcl
pop
notl
cmpsb
shrl
out
test
xlat
pushf
fistl
fnstcw
sbb
dec
or
dec
adc
inc
inc
jmp
loopne
movsb
adcb
mov
mov
inc
repz
les
pop
and
mov
daa
mov
nop
or
fwait
inc
cld
mov
fadd
repnz
inc
inc
cltd
mov
jg
add
lock
or
jg
xchg
mov
stc
xlat
pop
jae
in
lea
mov
mov
push
jns
xchg
push
scas
inc
lret
js
jle
mov
mov
mov
ljmp
jne
jnp
adc
push
out
push
fisubrl
xor
scas
adc
inc
pop
push
pop
repz
push
xor
lret
mov
loop
xchg
ret
or
out
xchg
push
xor
loop
mov
push
mov
insb
xor
cmpsl
outsb
add
test
fmull
pop
push
lods
mov
bnd
das
add
sbb
jnp
out
les
xor
fistl
nop
push
or
jge
leave
mov
lock
scas
mov
xchg
ja
inc
dec
call
adc
push
jae
xchg
stc
xchg
pop
lods
stos
and
lods
daa
dec
outsl
loop
cmpsb
and
lds
cmp
xor
xchg
out
mov
mov
cwtl
mov
cmpsl
cmpb
into
jne
mov
adc
shll
and
scas
jnp
mov
inc
es
mov
lret
mov
cmp
ffree
out
push
andl
sti
icebp
mov
cld
iret
lcall
fwait
stos
mov
sbb
fisttpl
scas
or
mov
hlt
pop
scas
shlb
rcrl
push
jno
dec
mov
leave
js
push
jno
sbb
xchg
dec
flds
ja
ret
xchg
sbb
addr16
arpl
ret
adc
aam
xchg
roll
into
ret
mov
jmp
stos
outsl
or
adc
mov
ret
sahf
les
jle
xchg
rorb
enter
jecxz
cmpsb
dec
cmp
insb
call
dec
pop
es
popa
divb
pop
shlb
mov
lret
mov
xlat
push
and
addr16
sub
outsl
dec
movsl
hlt
dec
adc
xchg
push
sar
jae
mov
ds
into
loop
mov
xchg
std
lahf
adc
in
xchg
xor
adc
cltd
add
call
push
push
subb
cmpsb
lahf
repz
ret
out
fwait
add
daa
sub
jg
ss
mov
push
aas
ret
sbb
jb
je
das
sub
aam
sbb
adc
fnstsw
loop
dec
adc
clc
mov
cli
mov
inc
xchg
mov
out
mov
mov
ret
cmp
sahf
stos
mov
jo
rcrl
in
xchg
adc
sti
mov
dec
add
jnp
adc
add
xor
outsl
enter
xor
and
pop
mov
test
insl
inc
aas
out
dec
cld
andb
push
test
sarl
dec
cwtl
sbb
nop
jb
sbb
sub
push
cvtpi2ps
test
nop
mov
hlt
mov
mov
in
xchg
aaa
dec
ja
out
adc
lcall
xor
ljmp
xchg
mov
ds
sahf
or
lret
xchg
jg
rcrb
je
stc
movsl
das
sub
daa
sub
les
imul
xchg
jle
pop
push
lds
mov
and
addr16
sub
jb
fdiv
jae
sbb
out
add
cs
scas
lret
shlb
das
dec
push
std
addr16
icebp
shll
jo
fisubl
push
stos
sahf
mov
jge
out
imull
loopne
fdivl
insl
imul
jno
xlat
outsb
and
mov
lahf
clc
into
dec
and
inc
xchg
imul
cmp
sbb
arpl
ljmp
xchg
push
out
stos
aas
push
xor
aas
or
sub
push
into
cmp
test
mov
dec
out
je
or
mov
jmp
fcmovbe
mov
push
adc
push
ss
jmp
into
in
ss
hlt
das
pop
xchg
dec
cs
and
dec
es
mov
pop
lds
decl
cmp
and
cs
cli
xchg
movsb
push
or
dec
mov
mov
dec
das
stos
cwtl
mov
insb
jb
pop
pop
and
cmc
sbb
mov
ljmp
mov
ret
fwait
push
lret
mov
shl
ja
repz
xor
sbb
ret
jp
je
les
lcall
lods
lret
mov
or
test
dec
cmp
mov
adc
xchg
scas
movsb
ficomps
dec
aaa
lods
enter
aam
aam
sub
imul
xchg
mov
jns
ss
jo
negl
jno
mov
fcmovnb
stos
push
enter
into
icebp
or
push
sbb
adc
or
sbb
jbe
jno
adc
sbb
lcall
xor
sub
mov
rolb
sahf
dec
rcll
mov
int
or
jbe
ficoml
xchg
jb
add
enter
sub
jb
mov
movsb
les
xor
xor
jnp
push
xlat
mov
mov
dec
iret
loope
shrl
icebp
mov
cmp
add
pop
mov
cs
scas
pop
pop
sbb
inc
push
js
daa
outsb
lea
jp
jne
loop
dec
pop
int
jl
imul
and
sbb
xchg
mov
pop
add
fcomip
fisubs
xor
cwtl
in
pop
fsubrs
add
mov
in
jae
outsb
pop
xchg
dec
lods
lea
cmpsl
jle
in
loope
cmp
out
xor
fsubrl
inc
mov
pop
ficoml
js
mov
sub
cmp
inc
scas
shlb
es
outsb
mul
jne
pop
cmp
mov
ds
fld1
or
jmp
jae
loope
push
test
mov
mov
cmp
sub
cltd
lret
lahf
aad
jae
mov
out
outsb
pop
add
push
pop
mov
sysexit
and
out
adcl
movsl
repz
daa
mov
cmp
and
stc
sub
dec
jp
dec
aaa
notl
jb
mov
fildl
xchg
cmpsl
xchg
mov
cwtl
pop
scas
or
inc
test
and
stos
stos
inc
or
or
mov
add
push
dec
adc
push
lea
daa
jb
jle
and
in
mov
ret
jmp
mov
imull
popf
shlb
mov
push
int
add
sbb
je
push
rol
cmpb
ss
pop
in
or
stos
push
in
sbb
pop
xor
mov
or
sub
and
inc
aam
mov
add
mov
xor
dec
add
fs
insb
shll
sub
clc
inc
or
mov
mov
mov
sbb
and
sub
out
ss
jb
pop
mov
xor
lods
push
popa
mov
ror
pop
jno
jecxz
std
mov
shlb
mov
adc
xchg
mov
pop
mov
inc
in
or
enter
je
aam
mov
dec
ret
add
jge
xor
cmp
scas
fcomp
push
fwait
mov
sub
jmp
mov
insb
or
push
enter
les
icebp
jecxz
out
mov
sub
in
xor
and
rcrb
aam
cmp
aad
xchg
sub
jmp
dec
sub
mov
movsb
mov
jae
aad
sti
mov
xchg
subb
dec
sub
lret
int
test
dec
dec
imul
je
lret
xor
lret
mov
es
fcmovnbe
cmp
fsubs
adc
sub
lods
pusha
push
in
jmp
mov
jp
inc
mov
cmp
jle
mov
popa
pop
xor
dec
jle
out
cmp
arpl
and
addr16
lods
shll
ret
fdivs
test
push
in
hlt
nop
stos
call
and
enter
pop
xchg
ljmp
repz
xchg
jo
int
push
xor
stos
add
dec
cmp
je
cmpsl
fisttpll
push
rcl
xor
aas
addr16
loope
outsb
mov
push
mov
or
cmp
mov
inc
jl
pop
push
sahf
and
inc
pop
jge
push
shlb
mov
test
xor
lds
ss
xchg
inc
inc
test
sub
mov
or
mov
mov
mov
cmc
lods
shll
test
mov
sarb
jnp
aad
ret
xor
mov
repnz
imul
xchg
sub
insl
push
pop
pop
jl
inc
ljmp
sbbb
js
or
mov
scas
cs
cld
pusha
jle
aas
and
insb
ljmp
ret
xchg
jecxz
test
xchg
subb
testb
mov
xor
lret
adc
lret
sbb
gs
jbe
sahf
int3
cmp
outsl
stos
mov
shr
xchg
je
adc
jno
lcall
pop
loopne
xor
jmp
xor
inc
es
addr16
mov
inc
xor
out
adc
xor
sbb
dec
mov
inc
lods
mov
add
outsl
in
sbb
imul
xorb
aaa
loopne
fsts
fs
or
inc
cwtl
scas
sahf
dec
repz
pop
icebp
nop
iret
ret
lahf
test
pop
dec
xor
push
add
push
push
sub
movsl
jp
ja
rcrb
and
adc
mov
xchg
push
mov
ror
xor
jbe
sub
inc
sbb
sub
test
test
cs
cli
movsl
dec
aam
jge
and
mov
push
mov
pop
shlb
pop
push
dec
bswap
sub
pop
out
loope
add
jns
movsl
movb
dec
stos
fmull
push
or
loope
dec
mov
inc
mov
sahf
adc
mov
jnp
loop
xor
cmp
lods
aas
mov
aas
sub
cli
dec
xor
mov
adc
jl
ret
mov
lret
scas
in
sahf
push
imul
push
cmpl
popa
orl
mov
xchg
jbe
dec
mov
lcall
push
cmpsb
aas
movsb
mov
inc
dec
repz
pop
es
or
sbb
rcrb
mov
mov
mov
sbb
scas
mov
mov
inc
enter
mov
test
pop
xor
mov
lods
fs
in
fwait
test
lahf
push
mov
adc
imul
rcrb
mov
divb
adc
push
data16
jo
into
and
nop
jmp
mov
repnz
lahf
mov
cmp
or
mov
or
inc
jl
out
add
ja
js
or
jne
xchg
dec
adc
jae
es
ficoms
inc
mov
test
pusha
sti
imul
xor
ss
xlat
dec
ret
cld
mov
ficomps
xchg
leave
sub
adcl
pop
outsl
and
insl
mov
movl
pop
adc
aaa
call
cltd
iret
dec
push
leave
pop
cli
out
mov
or
fisttpll
daa
jl
js
xor
jmp
jl
jo
jne
mov
jp
lods
xchg
inc
dec
aas
add
add
push
push
xchg
cmc
ja
cmp
and
mov
sbbb
xchg
mov
gs
dec
jne
jge
add
and
int
mov
gs
dec
dec
adc
leave
fldl
inc
xor
or
xchg
mov
or
in
xchg
xchg
xchg
mov
fwait
cmpsl
cmp
arpl
sbb
fs
test
clc
iret
jecxz
in
inc
jae
out
imul
out
test
rolb
mov
lods
ficoms
jg
mov
movsl
mov
in
mulps
roll
bound
cld
movsl
cmpsl
test
sahf
fstl
adc
fwait
insl
pop
imul
movl
jmp
ret
popf
popf
lret
loop
push
push
xor
enter
jae
insb
pop
lcall
fildll
cmp
jae
xchg
js
sub
add
fdivrs
leave
sub
stos
pop
enter
test
cmp
rcll
ds
mov
outsb
mov
flds
and
mov
adc
divl
jle
sbb
xchg
push
shll
enter
jne
mov
daa
jl
adc
mov
lcall
add
jmp
fcmovne
xor
shlb
adc
jl
cmp
xor
mov
xor
inc
dec
jl
pop
les
and
ffreep
fcoms
xor
aam
fisubrl
or
sti
pop
cmp
inc
push
add
and
jmp
stos
add
por
xchg
test
add
or
es
mov
aam
in
xchg
mov
xchg
call
cmp
jb
insl
sub
jp
jle
hlt
ds
mov
dec
push
fistl
int3
call
dec
xor
pop
xchg
lret
xchg
dec
mov
add
jne
dec
jge
aaa
jne
scas
sub
enter
cltd
sahf
push
out
mov
jne
jle
popf
xor
adc
push
fcoms
shl
orl
push
cmp
dec
popf
or
push
ljmp
push
inc
js
adc
mov
mov
aaa
sahf
sub
fildll
mov
push
in
mov
adc
dec
pop
cmp
mov
or
mov
aas
mov
fldl
jns
dec
add
inc
imul
push
mov
cmpb
mov
or
sahf
inc
fwait
jmp
adc
cmpb
mov
adc
mov
jl
sbb
push
iret
imul
adc
decl
inc
jbe
mulb
mov
xchg
movsl
adc
bound
ss
repnz
pushf
mov
lea
add
push
cli
or
test
pop
mov
mov
xlat
xor
fisttpl
cmp
inc
jecxz
cmpsl
bound
insl
dec
push
aaa
call
jne
or
cmovne
xor
rol
sub
in
push
aam
sbbb
push
cmp
ret
dec
cli
inc
mov
mov
int
mov
add
dec
int3
add
lock
sti
adc
and
cltd
add
cmpsl
aad
lea
mov
ficompl
mov
inc
insl
pop
xchg
sbb
subl
push
test
and
inc
out
jno
leave
leave
add
in
clc
pushf
outsb
adc
push
adc
std
xchg
and
pusha
adc
imull
sub
outsb
arpl
sbb
xor
test
push
bound
adc
hlt
mov
push
sbb
movsb
jo
xor
popf
cmp
mov
lret
inc
mov
imul
and
roll
fldt
cmp
inc
test
ds
and
int3
sbb
xchg
mov
adc
sarb
push
das
pop
sarl
pop
dec
fimull
mov
inc
nop
cwtl
mov
lcall
mov
icebp
dec
jmp
aas
push
lods
sti
and
jp
sahf
add
stos
and
shl
cmp
pushf
sti
stos
andl
shrb
push
nop
adc
loope
or
addr16
mov
sub
push
data16
jl
and
push
lcall
sahf
mov
nop
mov
xchg
xchg
mov
fs
clc
adc
pop
and
fwait
mov
xor
mov
into
scas
popa
adc
xor
jns
pop
jb
pop
aas
sub
pop
xor
or
imul
pusha
mov
cmpsl
shlb
shlb
mov
or
pop
lret
ja
test
out
into
adc
sub
sti
push
push
gs
data16
sbb
mov
bound
lds
mov
sub
in
xchg
popw
loop
xor
cmp
mov
cli
in
cmpsl
inc
stc
push
daa
jecxz
and
pop
add
inc
push
push
rcrb
arpl
xchg
scas
inc
out
clc
out
inc
mov
jl
cwtl
mov
push
xchg
ja
dec
fisubs
push
scas
jns
nop
stos
sbb
mov
arpl
stos
je,pn
sbb
bound
mov
into
mov
mov
inc
sahf
or
stc
repnz
pop
jle
or
repnz
pop
sti
js
pop
int
add
ljmp
push
insl
lcall
insb
iret
loopne
cmp
leave
lret
daa
int3
pop
inc
je
adc
push
repnz
std
test
rol
pop
jae
int3
pushl
pop
sti
inc
mov
pop
sbb
jne
mov
subl
mov
cs
inc
mov
sbb
lret
jge
inc
xor
es
cmp
incb
dec
jns
cmc
cmp
sbb
dec
addr16
sbb
fwait
xor
je
mov
xor
and
nop
inc
lret
push
jne
loop
pop
push
mov
lods
loope
mov
mov
xor
xchg
adc
sub
hlt
push
push
or
out
pop
sub
in
ja
jns
pop
inc
popf
cld
inc
mov
fwait
test
mov
cmpsl
dec
leave
mov
sbb
int
test
jne
ja
xor
pop
mov
mov
test
xor
scas
out
bswap
aad
ret
mov
popa
xlat
pop
lret
and
daa
fdivl
orl
pop
sbb
inc
add
stos
fisttpl
loop
jge
push
pminub
pop
cmp
sub
add
pop
mov
scas
dec
arpl
cli
js
mov
sti
cmp
fdivs
stc
aam
mov
daa
xchg
clc
in
xchg
out
pop
loope
mov
xchg
movsb
add
sahf
sarb
insl
xchg
aas
and
push
adcl
in
inc
cmp
pop
dec
movsl
sarb
mov
and
jmp
or
mov
pop
addr16
es
and
mov
imul
push
add
pop
pop
inc
clc
fwait
and
stos
xlat
je
cmovp
les
sarl
sbb
sub
adc
iret
pop
mov
dec
aas
push
mov
fists
xchg
adc
loope
out
int3
gs
cmp
icebp
or
mov
push
jb
lock
inc
push
xor
mov
out
cmp
xor
stc
je
cmp
stos
xor
mov
inc
nop
outsb
daa
dec
cld
push
dec
pop
fdivp
paddusw
stos
nop
pop
cld
mov
cli
arpl
mov
es
ret
int3
cmp
pushl
push
sub
pop
ljmp
movsb
ljmp
dec
cmp
dec
repz
push
push
cmpsl
outsl
repnz
inc
repnz
stc
xchg
pop
repnz
lea
sbb
ret
arpl
add
in
pushl
dec
fldcw
outsb
scas
ljmp
sbb
imul
push
jmp
shlb
mov
test
sub
popf
mov
pop
sbb
push
mov
xchg
nop
movsl
and
xor
scas
xchg
inc
cmp
std
test
xchg
xor
into
sub
pop
xor
in
out
and
push
ja
dec
aam
in
lahf
outsb
clc
aad
mov
adc
sbb
repz
es
add
out
loopne
rcrb
add
ja
push
out
inc
or
imul
test
test
mov
test
jp
xor
push
adc
popa
or
mov
fstpt
roll
lcall
repz
rcl
push
test
in
loope
mov
xchg
fimuls
push
out
inc
mov
adc
xchg
xor
aaa
push
jg
rol
mov
pop
mov
xchg
in
cltd
push
cli
pop
adc
orl
ss
inc
jp
mov
sbb
cmp
and
outsl
imul
aad
cmp
int
inc
mov
lahf
xor
dec
dec
sbb
test
scas
sarl
and
pop
popf
add
sbbl
stos
es
jg
lock
cmpsb
jo
sub
dec
imul
sbb
test
pop
dec
inc
stc
inc
cmp
inc
inc
or
jp
lret
ret
insl
rcrb
jg
pop
pusha
sub
xchg
pop
mov
adc
mov
mov
sbb
loop
frstor
jno
fbstp
jo
inc
mov
jmp
pop
push
jne
into
mov
fcmovb
or
and
mov
sub
pusha
dec
and
xchg
push
jge
add
xchg
sbb
or
test
cmpl
gs
inc
aas
arpl
pop
pop
push
imul
arpl
ss
lahf
sahf
sbb
fmuls
cwtl
std
rorb
in
xlat
es
pop
mov
cmp
adc
lock
dec
fnsave
jbe
call
xchg
and
insl
and
xchg
jmp
imull
ja
push
nop
fidivl
ljmp
mov
into
mov
fsub
cmc
push
mov
jno
pop
pushf
cs
mov
mov
push
int3
lods
and
cmp
mov
imull
xor
cmpl
arpl
mov
mov
mov
adc
fistpll
dec
sbb
fmulp
xor
sarl
es
xlat
push
pop
pop
fisubrs
or
xchg
or
push
pop
xchg
ljmp
arpl
lret
in
jbe
jne
pusha
xchg
cmpsb
rorl
movsb
mov
lods
je
jg
loop
ljmp
sub
insb
loope
lods
pop
add
or
mov
mov
data16
or
fadd
out
jg
cwtl
cmp
mov
cmp
lret
adc
sub
aaa
adc
mov
int3
add
mov
push
mov
popf
dec
inc
and
addr16
and
cmp
sub
mov
cmpsb
dec
popa
fnstsw
mov
push
push
lahf
pop
sub
test
stc
das
pop
adc
inc
xor
lds
idiv
cltd
xor
pop
cmp
adc
push
in
inc
movsb
jae
js
sarb
jno,pt
call
repz
lods
sbb
jbe
cmp
les
xchg
mov
and
pop
dec
jb
mov
inc
xchg
xchg
xchg
cmc
lods
mov
dec
pushf
fnop
push
jl
pop
jnp
outsl
addr16
mov
pop
ror
rcl
mov
cltd
mov
icebp
sub
lret
jne
mov
adc
cmp
test
push
lds
or
shlb
mov
cmp
dec
jne
mov
shll
sbb
jge
cmp
iret
pop
daa
jmp
adcb
shlb
arpl
stc
and
scas
mov
mov
int
jge
sub
mov
shrb
mov
mov
out
push
cmp
or
xchg
sub
xchg
mov
das
and
leave
lea
sub
and
push
push
mov
pop
fists
fdivl
int3
popf
push
xchg
cmp
lods
sbb
cmpsb
mov
daa
orl
mov
in
jno
inc
add
in
xor
add
out
pop
lret
lds
push
test
lret
stc
adc
mov
movsb
repz
addr16
cmp
mov
pop
into
lcall
pop
mov
pop
aad
sbb
pop
xchg
inc
sub
fstpt
sub
cmp
mov
or
icebp
stos
xchg
xchg
or
xor
imul
ljmp
clc
xor
popa
xor
not
dec
int3
into
fisttps
dec
lea
pop
mov
je
movsl
aad
mov
cmpsl
push
jns
xor
or
aad
loop
mov
inc
imul
dec
inc
dec
xchg
jl
lods
clc
sbb
jb
lock
aaa
mov
mov
mov
xor
sub
and
sub
pop
jbe
xor
lock
cmp
shlb
pusha
xor
mov
lods
jmp
aad
cwtl
inc
rolb
cmp
cmp
int3
fdivrp
js
mov
outsl
inc
mull
or
mov
in
xchg
xchg
addr16
lods
sti
stos
or
cmpsb
jle
stc
mov
test
sbb
movsb
sub
lahf
outsl
inc
aad
int
movsl
stc
cld
or
xchg
push
xcrypt-ofb
cmpsl
das
sbb
cmp
clc
sub
stc
sub
fmull
jecxz
push
pop
add
or
mov
push
ljmp
sub
dec
cld
and
movsb
push
das
gs
repz
pop
xor
dec
lock
ljmp
push
aaa
xor
push
std
dec
push
sbb
inc
sbb
sub
shrl
mov
pop
pop
repz
sbb
dec
and
lods
das
dec
or
addb
ret
push
jp
cmpsl
fldl
xor
mov
sub
sbb
cmpsl
fnstenv
lods
fdivrs
lcall
cwtl
in
adc
iret
pop
jne
inc
insb
xor
xor
ljmp
sbb
out
addr16
push
push
stos
iret
adc
cmp
add
scas
aaa
lcall
jg
dec
pop
cmp
fisubl
xlat
frstor
mov
in
inc
fs
out
test
and
xchg
sub
pusha
jo
das
test
jg
adc
jb,pt
inc
mov
popa
mov
dec
mov
dec
or
stos
mov
int3
shrl
sahf
sahf
xor
cmp
xor
les
pop
dec
int3
dec
jmp
inc
fwait
jle
dec
add
xor
lock
ljmp
xor
xor
stos
mov
loop
cmp
adc
add
aam
icebp
mov
pop
add
mov
movsb
push
adc
jo
in
push
movsb
sub
mov
stc
jns
popf
dec
jg
dec
iret
mov
incl
xor
push
iret
outsl
add
push
push
cmp
inc
daa
fisubs
outsl
adc
mov
dec
add
sarb
pop
jp
push
js
jecxz
je
mov
popa
pop
push
cmpsb
in
jns
jge
xor
js
cmpb
mov
jle
hlt
jmp
push
and
ljmp
mov
aam
xor
add
dec
lahf
movsb
pop
and
cmp
adc
inc
hlt
push
cmp
pusha
pushf
imull
pusha
shlb
dec
lock
dec
shl
dec
ss
stos
dec
sbb
and
testl
mov
scas
pop
mov
fisubs
nop
dec
nop
add
jp,pn
inc
daa
lods
jne
ret
xor
dec
push
arpl
fxch
rcrb
call
push
sbb
cmp
divl
jle
push
push
pusha
loope
pop
sahf
mov
imul
cmp
fs
iret
and
in
pop
loope
scas
mov
nop
dec
dec
fisubrl
movsl
stos
lods
mov
push
ret
scas
neg
test
inc
cbtw
pop
mov
xor
add
cmp
pop
data16
xchg
sub
pop
mov
add
addr16
jns
jmp
jae
and
shlb
jmp
fildl
adc
out
mov
test
pop
je
and
repnz
push
rclb
test
cmp
popf
das
ja
jnp
xlat
xor
jo
pop
cwtl
cmp
sub
lds
cmp
out
mov
cmp
inc
fdiv
or
dec
ss
sub
fucomip
adc
and
dec
jb
mov
sbb
imul
mov
cwtl
xchg
add
lds
hlt
ds
ss
push
push
rclb
pop
mov
xchg
jno
jae
cmpsl
in
fnstsw
pop
cwtl
stos
xchg
ds
test
mov
sahf
or
jae
scas
xchg
lods
jle
xor
push
sub
push
lcall
out
clc
into
mov
shr
add
push
sbb
jb
movsb
xchg
dec
movsl
loop
les
dec
adc
mov
and
je
cmpsb
sarb
pusha
inc
push
inc
and
pop
xchg
fs
insb
or
xor
sarl
jl
hlt
dec
ficoms
xor
cwtl
addr16
or
ljmp
icebp
sbb
and
cs
cmp
out
pop
iret
arpl
sarl
out
ljmp
and
mov
add
movb
inc
vunpcklpd
mov
pop
pop
mov
enter
cwtl
pop
add
inc
ljmp
pop
push
int3
push
test
push
cwtl
pushf
pop
xchg
and
ret
sbb
push
xor
and
enter
or
sub
orl
mov
insl
lcall
insb
in
lea
and
out
dec
or
scas
sahf
lahf
scas
sub
rorl
insl
jae
test
int
stc
mov
cmp
push
cmp
xchg
mov
mov
pop
lods
movb
std
inc
loop
mov
add
push
inc
or
cmp
cltd
jle
push
fs
out
mov
arpl
rcrb
jmp
out
shll
push
jle
add
cmp
or
push
sub
adc
and
data16
xor
xchg
mov
add
out
data16
sub
and
jae
and
movsl
cwtl
imul
dec
fidivl
inc
ljmp
fwait
pop
push
out
or
mov
xchg
mov
and
cmovns
pushf
loopne
sbb
sbb
out
jno
mov
cmp
in
fmull
pop
adc
add
sbb
push
dec
out
ret
insb
dec
jo
and
jge
scas
mov
rolb
pusha
mov
popa
ds
sar
js
enter
mov
mov
xchg
fistps
ljmp
mov
or
xchg
dec
mov
adcb
inc
loopne
shrl
adc
cs
out
pop
and
xchg
add
cmp
pop
je
lahf
mov
ret
cs
loope
jb
sub
psubw
cmc
or
mov
icebp
icebp
int3
pushf
add
nop
gs
int3
add
adc
xor
dec
call
cmp
inc
mov
sbb
call
dec
sti
pop
xor
push
call
adc
jecxz
pushf
add
sbb
xchg
pushf
pop
int
xchg
enter
push
sarl
push
cmp
nop
test
call
sti
dec
mov
fs
lahf
rcr
ja
or
lret
loop
call
inc
lret
loop
gs
dec
mov
xchg
pop
push
push
movsl
mov
pushf
lods
sbb
xor
hlt
rcrb
inc
xchg
mov
and
add
ja
iret
jmp
jmp
pusha
xor
and
enter
push
and
dec
push
push
mov
ror
dec
dec
mov
or
and
dec
aas
lret
pop
in
fwait
mov
jo
jae
fisttpll
add
dec
lea
cli
push
cmp
mov
mov
sbb
adc
or
call
loopew
arpl
jo
mov
cmp
lds
jle
sbb
jb
adc
sbb
mov
cmp
jg
sub
push
push
lods
jns
dec
lahf
andb
sub
imul
stc
mov
into
cwtl
xor
jae
je
xor
fwait
sub
inc
xor
and
pop
cltd
xchg
pop
lods
test
loop
fisubl
dec
pusha
sub
arpl
push
shlb
sub
sub
popa
clc
pusha
mov
icebp
mov
xor
dec
dec
jle
sti
ja
clc
lea
xchg
sti
push
adc
xor
cmpsl
or
cli
incb
out
test
xchg
in
sub
movsb
and
push
sub
cld
sbb
repz
add
hlt
push
push
ret
mov
mov
dec
mov
sti
mov
pusha
mov
xchg
es
inc
xorb
mov
cmp
mov
clc
inc
in
sub
push
ss
call
in
pop
in
in
ror
sub
fldenv
shlb
pop
cmpsl
lret
ja
adc
sbb
shl
shrl
mov
mov
cltd
and
and
mov
fldt
je
sarb
dec
add
cmp
mov
out
xor
repz
sub
outsb
pop
push
stos
sbb
popa
insb
jno
fidivl
adc
outsl
mov
mov
mov
cmc
pop
cld
sbb
iret
out
bound
aam
or
dec
adc
popf
jae
xchg
cwtl
cwtl
push
mov
repz
or
inc
sti
or
mov
ficomps
mov
leave
cmp
mov
or
and
or
popf
clts
push
out
fsubl
sahf
push
add
js
jb
ficompl
in
and
out
sbb
nop
outsl
enter
xchg
fmuls
daa
push
cmpxchg
adc
pop
inc
inc
clc
xchg
sahf
leave
test
clc
push
ret
das
dec
mov
out
inc
bound
out
cmpsb
sbb
das
jl
scas
data16
add
divl
sub
mov
mov
daa
dec
ficoml
test
aam
push
cmpsl
test
jo
ret
xlat
pusha
addl
cmp
stos
push
popf
in
dec
lahf
mov
dec
jnp
xorl
lcall
repz
out
xor
out
cmc
fsubrp
inc
fst
cmp
and
dec
lods
mov
out
xchg
in
lcall
mov
push
dec
cmp
xor
xorb
orb
lock
sbb
ds
xchg
leave
pop
popf
cli
jge
ja
fnsave
dec
jecxz
push
std
jmp
dec
sbb
outsb
dec
and
xchg
jmp
ss
jns
repz
jecxz
push
xorl
mov
in
hlt
sbb
add
pop
and
into
stc
add
sub
mov
test
in
jae
mov
add
add
in
std
repz
adc
rorb
inc
push
push
add
xchg
pop
jge
sahf
subl
pop
pop
jb
pop
leave
shrb
pop
int
fs
aas
ljmp
pop
sub
insb
jle
adc
push
lret
xor
popa
andl
mov
rcr
into
jae
and
inc
jb
mov
cli
add
mov
sbbb
fwait
mov
ja
les
dec
pushf
not
mov
leave
addr16
cmp
sub
lcall
push
out
je
pop
scas
stc
testl
ret
test
inc
and
scas
cmc
mov
test
inc
pop
lcall
inc
ja
mov
jno
mov
jecxz
add
mov
repz
inc
xor
insl
dec
push
sti
mov
dec
sbb
mov
mov
jge
adc
sahf
dec
gs
dec
inc
sbb
ja
outsl
insb
cmp
sahf
ljmp
outsb
cld
shlb
fldenv
dec
xor
xchg
fsub
jmp
xor
jl
fs
scas
fsubs
push
movsb
pop
sub
negl
ljmp
cmpsb
pop
push
cmp
int
fs
jne
dec
xchg
xor
jmp
mov
mov
mov
or
dec
cmp
in
cmp
sub
inc
lret
xlat
or
xor
aam
nop
dec
icebp
mov
sub
sbb
cmp
fsub
xor
dec
mov
arpl
repz
xchg
outsl
push
fildll
mov
scas
sub
cltd
mov
or
jle
dec
adc
rorl
mov
andb
aad
jb
sahf
mov
xchg
adc
mov
outsb
adc
insl
mov
out
cmc
lods
xor
test
cli
xchg
pop
repz
sbb
ds
cmpsb
clc
add
sbb
xor
rorl
mov
pop
or
scas
data16
movsb
push
mov
mov
pop
test
imul
rcrl
add
pop
mov
aaa
inc
fidivl
movsb
jo
fldenv
add
cld
lods
iret
lods
divl
push
pop
push
addr16
xor
aaa
pushf
xor
mov
out
inc
shrl
hlt
push
add
mov
adcb
lods
fldpi
adc
leave
sub
pop
pop
mov
cmpsl
lret
add
jle
in
push
aam
rol
andl
cmp
int3
and
add
inc
das
loop
inc
xchg
lods
sub
ret
sbb
ds
push
or
lods
inc
pop
ret
cmpsb
push
cltd
call
fst
rcr
nop
fwait
daa
pop
ret
dec
adc
lret
xor
jmp
dec
add
xor
add
fldenv
js
ss
test
inc
mulb
push
sub
gs
stc
xchg
jl
mov
mov
enter
arpl
adc
ficoms
addl
pop
push
mov
pop
leave
cld
test
dec
pushf
xor
icebp
data16
xchg
fnsave
je
or
dec
sub
call
mov
test
mov
cmpb
lods
fisubrs
enter
push
fidivrs
insl
sbb
dec
out
loope
adc
imul
dec
cmp
cwtl
dec
lea
cld
mov
pusha
jg
das
lods
sbb
addb
inc
cmp
dec
xor
addr16
inc
inc
hlt
jle
cmp
push
inc
mov
cmp
pop
test
fdivrs
test
dec
adc
or
test
cmp
xor
setge
jmp
cmp
mov
or
xchg
xor
je
xchg
inc
xchg
pop
mov
mov
add
cwtl
mov
cmc
movsl
pop
dec
int
es
pop
sbb
sti
push
pop
fmulp
cmp
loope
cmp
adc
pop
and
shlb
iret
inc
pop
mov
adc
and
lret
lock
rcl
pop
push
pop
nop
push
enter
aas
cmp
repnz
lock
mov
int
insl
jl
xchg
loopne
ficoms
fisubs
iret
and
leave
aad
ds
adc
or
shll
jo
stos
or
jns
ja
push
loope
push
outsb
push
clc
in
add
mov
xchg
loop
in
shl
out
inc
dec
push
shlb
push
jne
add
pop
outsl
arpl
mov
cmp
sub
orl
push
in
movsb
data16
push
mov
rorb
xor
mov
movsb
push
add
fwait
mov
mov
or
fdiv
pop
jge
xorb
pop
sarb
mov
ds
lahf
pop
jns
out
stc
mov
cmp
xchg
jnp
mov
xchg
and
shll
and
mov
mov
jge
cmp
std
fcmovnbe
test
out
ret
sub
out
xorl
cmp
xchg
dec
mov
pop
arpl
out
test
sti
test
mov
mov
mov
pop
sbb
aad
rol
sbb
inc
int
das
fimuls
fs
sub
scas
mov
mov
jb
xor
xchg
pop
push
pushf
dec
popa
stos
dec
psubb
mov
lret
xor
or
mov
in
dec
leave
jmp
xor
cmp
dec
inc
push
push
imul
xchg
add
push
nop
lret
bound
cli
adc
jo
loopne
fmul
leave
cmc
imul
rclb
jge
sar
stc
push
ja
xor
lea
ja
xchg
add
leave
pushf
cld
xor
leave
add
jbe
in
aaa
mov
pop
enter
fs
cmpsb
mov
cmp
insb
cwtl
inc
adc
bnd
jne
push
pushf
fstpt
cmp
aaa
pop
loope
dec
inc
jge
nop
jns
sarl
dec
pop
xor
rolb
lret
icebp
dec
xchg
shlb
push
stos
fs
movsl
insb
out
xchg
sbb
pop
add
fdiv
movsb
fdivrl
in
aas
adc
adc
xor
pop
mov
xor
shlb
test
jmp
adc
jp
xor
or
scas
jb
push
lcall
fsubrl
outsb
pop
dec
addr16
jbe
lret
or
mov
mov
add
decl
outsl
cli
xor
ljmp
xchg
adc
inc
fsubs
cmpsl
icebp
dec
fnstsw
jle
fcomps
cmp
out
mov
dec
and
jns
push
enter
xor
leave
out
mov
jecxz
pmaxub
mov
fmull
arpl
push
push
ds
aaa
mov
sahf
or
pop
mov
and
xchg
pop
mov
mov
insl
xor
in
hlt
inc
aaa
nop
mov
sbb
subl
sub
jno
pusha
push
mov
or
ret
cli
dec
lea
js
fs
push
aad
ss
jmp
popf
push
xor
push
dec
mov
xor
xchg
les
sahf
and
pushf
leave
inc
sbb
xchg
or
xchg
cmp
fs
cmp
inc
sub
add
fistl
sbb
hlt
aam
stc
fisttpll
add
loopne
jmp
xchg
mov
cmc
xchg
sub
int
dec
jp
and
inc
adc
inc
mov
xlat
push
lea
add
xlat
jae
rcrl
jbe
cmc
push
push
sbb
add
mov
jnp
loopne
jb
xchg
mov
scas
push
mov
lret
mov
adc
pop
and
scas
mov
imul
adc
rcll
cmpl
sbb
addr16
insl
in
adc
pushf
push
sub
es
addr16
in
sbb
inc
mov
fmuls
inc
out
push
out
icebp
outsb
adc
or
ja
dec
jl
mov
clc
push
int
mov
ljmp
into
mulb
ljmp
fildll
nop
xor
inc
pushf
push
inc
xor
rcll
push
xor
cltd
jb
sub
sub
cmp
adc
mov
xrelease
xchg
sbb
and
call
jno
push
scas
mov
inc
fnstsw
xor
mov
pusha
pop
scas
cmp
jg
sarl
lret
mov
adc
pop
or
pop
push
testb
jle
and
mov
pop
bswap
addr16
icebp
insb
clc
fucom
add
loop
push
dec
into
adc
outsl
aaa
sub
sbb
popf
or
cmp
lahf
mov
das
ror
sub
push
loop
rcrl
nop
jp
aam
pop
ja
mov
popf
jp
add
adc
dec
fld
or
out
outsl
decl
pop
push
gs
dec
add
adcb
sbb
sub
das
or
cmp
clc
jl
arpl
sbb
enter
insb
mov
cmpsl
xor
mov
sarb
and
cmp
pop
jno
xor
fbld
ret
rclb
cltd
fdivl
mov
pop
lcall
xor
iret
xchg
orb
dec
mov
mov
aam
insb
imul
lods
jb
jnp
mov
mov
push
out
ret
fs
mov
test
pop
int3
jo,pn
xor
push
sub
stos
mov
lea
pop
lea
cwtl
mov
std
aam
push
pop
out
sub
negb
cmp
inc
adcl
inc
or
lock
pusha
and
and
add
fstps
and
lahf
lds
les
movsl
cs
mov
cmp
enter
mov
jmp
data16
test
adc
ljmp
dec
loope
or
dec
stc
aad
pop
add
inc
addl
mov
stos
icebp
dec
add
xchg
loope
push
popf
pop
cli
xchg
lds
dec
dec
nop
sub
xlat
loope
scas
cli
inc
fwait
push
rorb
pop
mov
sbb
push
sbb
imul
hlt
clc
mov
aad
sbb
shrb
in
fdivr
add
sub
lcall
mov
fcoml
mov
leave
outsl
shlb
call
push
fiaddl
mov
je
xor
xlat
push
dec
pop
daa
or
outsb
xchg
xor
cmpsb
bound
rcrb
xchg
push
add
push
dec
sbb
in
or
sahf
popa
into
jecxz
es
adc
in
push
jle
cmp
adc
mov
jge
cs
pusha
aas
cltd
xor
xor
push
fsts
cmp
xor
push
push
lret
popa
push
inc
int
addb
ss
rcpps
xchg
jo
jmp
mov
xor
sbbl
flds
push
adc
or
mov
jl
xor
push
xor
xchg
lret
hlt
push
adc
push
shlb
inc
xor
sbb
xchg
ds
sbb
iret
cmp
ja
fsubr
call
cmp
lahf
decl
and
lods
mov
movsb
imul
ja
add
fistl
test
adc
ret
das
push
clc
pusha
daa
iret
mov
je
pop
je
pushf
sub
jmp
jns
sbb
addl
pop
addr16
repz
lds
jo
addr16
mov
aad
adc
adc
in
push
adc
insb
ss
sarl
add
mov
std
add
jbe
sub
decb
and
test
add
test
je
pop
push
dec
lcall
out
sbb
mov
and
sbb
cmp
push
jmp
add
and
pop
dec
or
popa
repz
in
addl
adc
clc
call
fwait
and
cs
push
push
inc
aad
xchg
mov
pop
cmpsb
and
rorb
dec
in
and
pop
sub
lods
cmc
and
mov
push
add
cmpb
clc
inc
js
lods
imul
daa
and
addb
into
pushf
and
in
cmpsb
jp
push
call
mov
and
pop
mov
and
ficomps
jns
lcall
popa
mov
xchg
icebp
cmp
add
fucomi
mov
ret
add
xor
pop
jno
pop
std
lds
cmpsl
pop
repz
cmp
pop
scas
jg
pusha
mov
mov
jb
adc
movsb
je
sahf
shll
dec
roll
mov
je
pushf
push
into
mov
xchg
fisubl
in
inc
mov
je
shrl
xchg
jae
aad
cmpsl
test
mov
push
movsl
dec
mov
rolb
xchg
push
adc
fsubs
lcall
enter
ss
nop
jo
cld
add
push
cmpsb
sub
pop
scas
daa
test
push
jbe
lock
or
dec
mov
xor
xchg
inc
xor
das
int3
jp
jl
dec
clc
rorb
iret
jmp
or
or
lahf
test
inc
pop
mov
sbb
mov
jbe
notb
fbstp
clc
inc
add
lds
jl
rcrb
flds
shll
jge
push
lahf
aas
push
lret
repz
adc
mov
lahf
add
cmpsl
xor
and
adc
or
xchg
dec
xor
test
ret
and
dec
cmc
inc
pop
cmp
addr16
push
dec
fcoms
test
or
mov
aad
mov
pop
jno
cmpsb
addr16
mov
les
mov
xchg
pop
pop
push
dec
test
ja
mov
and
leave
arpl
repnz
or
popf
hlt
scas
hlt
fimull
jno
xor
adc
nop
adc
cmp
push
andb
into
movsl
sub
in
or
cmp
cltd
mov
int3
out
leave
mov
aaa
outsl
xchg
leave
jecxz
ds
dec
sbb
pop
fsubs
add
mov
test
cmp
jmp
shl
mov
test
jecxz
or
add
pop
pop
mov
out
or
push
and
arpl
arpl
sar
mov
loop
xor
dec
jge
dec
sbb
sub
add
xorb
hlt
inc
or
lcall
pop
ja
arpl
jbe
fidivrl
movsb
mov
mov
notb
xlat
aaa
cmpsl
pushf
jnp
test
push
mov
nop
mov
insl
das
inc
jmp
pop
cmp
imul
jmp
cmp
stos
push
rcr
movsb
push
scas
rorb
cmp
or
xor
dec
or
or
stos
xchg
insb
clc
mov
lea
daa
sub
jne
sub
ficompl
cmpsl
cmp
push
outsl
mov
scas
gs
push
mov
adc
in
shl
mov
xchg
pusha
inc
xchg
dec
imulb
mov
jl
sbb
lock
push
xchg
lea
sahf
push
jmp
cltd
mov
loopne
mov
xor
aas
cmp
jnp
jl
pop
cmp
insl
outsb
shlb
jmp
sarb
xchg
mov
push
cmp
mov
loopne
xor
push
xchg
cmp
lds
subb
leave
in
pop
adc
inc
adc
jecxz
leave
clc
data16
es
push
aam
mov
fisubl
divl
xchg
stc
cmp
add
adc
inc
hlt
mov
lahf
dec
sti
and
sbb
daa
xchg
or
rorl
fisubrs
adc
lods
sti
adc
fstpl
pop
cli
add
insb
or
mov
sbb
xor
push
xorb
push
movsl
loop
cmp
mov
rcl
push
mov
int3
aad
mov
cmp
out
mov
out
call
mov
or
fwait
mov
sbb
fdivl
jns
dec
arpl
jge
enter
insb
xchg
insb
dec
loope
pusha
xchg
hlt
out
jg
mov
neg
mov
xchg
xor
adc
dec
inc
or
inc
push
outsb
in
fucom
outsl
shlb
mov
stos
mov
icebp
pop
mull
andl
adc
and
aas
and
mov
frndint
mov
cmpsl
jle
shll
xlat
es
in
ljmp
inc
ret
pop
es
in
movl
das
test
jnp
xor
and
cld
idivb
loopne
mov
nop
mov
push
leave
jnp
inc
push
mov
test
in
adc
mov
cmpl
or
outsl
cmpsb
cmp
push
jae
fists
jl
cltd
pop
or
add
rorl
test
and
ljmp
push
jge
jp
imul
dec
pop
xchg
inc
fsqrt
mov
movsb
fists
jp
fmull
xchg
inc
adc
orb
and
imul
xor
push
sbb
shr
pop
jl
mov
out
gs
stos
push
pop
cmpsl
mov
mov
ss
push
sbb
push
gs
out
in
test
mov
add
mov
pop
dec
test
sbb
mov
pop
mov
sub
and
pop
dec
mov
mov
int
in
mov
xchg
in
mov
pop
jbe
mov
mov
into
dec
mov
ss
js
jecxz
ja
dec
outsl
inc
sub
pushw
test
mov
int3
cmp
test
fcomps
jp
fildll
ror
ljmp
push
cwtl
cwtl
jno
add
sub
xor
lds
jmp
dec
mov
ss
ret
or
jne
cwtl
cmp
mov
mov
nop
int3
pop
sub
clc
or
add
cmp
cmp
mov
mov
lret
gs
push
xor
clc
push
xor
mov
lods
addr16
imul
jle
push
push
push
scas
sbb
in
xchg
imul
mov
xchg
aas
mov
add
daa
mov
push
xchg
aas
add
test
jns
scas
sti
fwait
aaa
lret
in
inc
pop
mov
pop
aad
cltd
push
or
lret
mov
xchg
stc
cld
lods
out
xor
pusha
popa
add
jnp
hlt
xlat
push
scas
cmc
in
pushf
and
add
sbb
fsubr
jb
add
sahf
dec
in
pushf
mov
mov
movsb
cmpsl
mov
xor
cmpsl
mov
adc
imul
or
xchg
push
pop
clc
enter
adc
imul
in
jae
lea
test
jl
jno
fstpt
ljmp
xlat
lods
xchg
and
lahf
mov
jbe
fadds
sbb
push
jecxz
outsb
push
js
mov
ds
aad
inc
push
imul
mov
aas
cmp
mov
ljmp
fidivrl
ficomps
mov
popf
in
push
mov
popf
adc
lock
mov
xchg
dec
sub
mov
push
push
cmp
pop
imul
mov
cmp
mov
sbbb
js
or
add
lret
divl
jnp
dec
repnz
shrl
cld
mov
add
sub
es
or
rolb
cmp
mov
mov
mov
adc
xchg
xlat
push
call
mov
jns
cmc
stos
pop
mov
popf
loop
rcrb
push
incb
int3
sbb
cmp
fucomip
jb
or
btr
fcmovu
pop
orl
push
rorb
nop
jae
fstps
fprem1
fs
mov
ja
in
sub
repz
std
xor
mov
test
sub
mov
ficoml
aam
xchg
dec
pop
mov
fwait
jg
leave
xchg
pusha
clc
sub
leave
stc
mov
std
xor
pop
fisttpll
out
addr16
cmp
mov
jp
ja
and
stos
mov
sub
in
movsb
pop
sub
fisubrl
aas
testb
aad
mov
adc
fbld
shrb
sub
sahf
ss
pusha
leave
ljmp
or
fmuls
add
sub
fistl
dec
divb
xor
jg
inc
cmpsl
push
xchg
push
inc
fmul
lret
sbb
and
push
add
xchg
into
mov
jno
test
sbb
shll
mov
lock
dec
fwait
jp
arpl
int3
cwtl
insb
cmp
icebp
adc
in
sbb
xor
orb
inc
lret
fs
fcompl
mov
icebp
sub
xor
test
sbb
sbb
nopl
mov
mov
lahf
test
push
sbb
cmp
cmpsb
add
adc
popa
scas
dec
sub
int3
cmp
push
add
push
fmuls
in
pushf
pop
stos
and
pop
fnsave
mov
xchg
push
mov
sbb
and
sub
decb
jb
add
popf
imul
pop
notb
lods
rcrb
mov
cltd
and
test
cs
lock
mov
pop
mov
pop
dec
xchg
fnstsw
xor
xor
fnsave
jecxz
jmp
pop
out
cmp
xchg
rorb
js
loopne
lods
mov
jl
jb
test
fidivl
jmp
dec
dec
test
cmp
xchg
sub
push
lcall
jmp
imul
mov
mov
ds
shlb
loop
adc
data16
and
faddp
jns
data16
loop
out
fisubs
loope
fs
and
or
ret
mov
xor
in
and
jns
fisubrs
mov
je
sub
dec
cs
mov
push
xchg
loop
loope
mov
jno
push
mov
movsl
ljmp
addr16
xor
dec
mov
repnz
movsl
outsb
cs
cmp
xorb
loopne
fisubrs
xchg
popa
addr16
mov
lea
leave
test
fnsave
push
xor
insl
xor
and
inc
cmp
bound
int
mov
lret
mov
lahf
inc
pop
pop
mov
cwtl
les
scas
neg
xor
cmc
fs
inc
ljmp
mov
or
jge
imul
cmp
inc
or
and
insb
cltd
gs
xor
bound
popa
xchg
rorl
cmp
jge
dec
test
fidivl
push
lock
rol
xchg
lret
xor
sub
xchg
nop
ja
vucomisd
push
cwtl
lcall
inc
pop
inc
test
sbb
and
dec
stc
push
out
sbb
sbb
fwait
test
and
adcl
ja
pop
xchg
add
flds
rclb
stos
int
stos
jnp
cwtl
jae
jnp
pop
xor
movsl
push
jbe
pop
aas
jno
cmovs
int3
aas
sarl
xchg
mov
int
pop
or
aam
mov
fs
jg
push
cmp
fidivrl
jl
add
xor
nop
pop
fadds
scas
sbb
mov
xorl
movsb
push
scas
mov
push
xchg
hlt
out
cmp
shrl
jne
cmpsl
jg
inc
inc
ss
sti
cmc
popa
jg
pop
inc
sbb
loope
xchg
data16
enter
xor
aad
jo
push
jl
push
dec
imul
lcall
and
gs
and
mov
inc
ret
push
jno
cmc
pushw
xchg
jno
cmp
icebp
lds
test
shrb
cmp
repz
cld
imul
xorb
imul
sub
or
out
loopne
or
fisttpl
mov
mov
mov
xor
sbb
xor
xchg
iret
push
fcmovnb
sbb
jg
lds
imul
dec
ds
inc
pop
mov
sbb
out
push
add
push
rorl
pop
and
iret
scas
adc
jge
arpl
movsl
pxor
movsl
repz
and
cld
xchg
fwait
mov
pop
dec
dec
xor
pushf
pop
jl
push
mov
aam
and
sub
xor
jbe
dec
dec
ss
inc
je
imul
mov
int
jns
pop
mov
jnp
xchg
cmp
fsubs
enter
cld
pushf
ds
lret
decb
in
jecxz
mov
dec
icebp
test
mov
scas
pop
or
shll
out
inc
shl
jecxz
dec
adc
sub
movsl
fwait
mov
or
cltd
mov
adc
sub
sub
sahf
loop
push
pop
push
insl
ljmp
mov
ja
and
loopne
cmp
sub
adc
lcall
fs
shrb
andb
jmp
jp
jo
iret
aam
shrl
call
mov
mov
into
xor
imul
xchg
insb
xchg
cld
iret
outsb
int3
adc
xor
jns
jp
rclb
inc
iret
fdivrl
ret
ret
lcall
mov
repz
lahf
mov
pusha
addr16
xor
hlt
addr16
xchg
mov
xlat
lea
sarl
inc
adc
mov
arpl
cmp
adc
popa
gs
and
in
inc
add
js
inc
adc
flds
stc
ret
xchg
push
pop
popa
sbb
js
jle
add
jp
outsl
mov
lahf
addr16
es
sbb
sub
aam
mov
mov
and
cltd
and
out
mov
dec
dec
iret
sahf
jnp
es
lods
mov
dec
stc
or
icebp
addr16
mov
mov
lcall
jp
xchg
or
ja
mov
fisubrs
adc
into
stos
push
das
mov
jmp
popf
pushf
jbe
mov
xchg
mov
xchg
jo
ja
stc
sub
jg
sub
mov
cmp
xchg
sbb
repz
mov
fadds
daa
lock
pushf
sti
add
jns
ret
dec
mov
cmp
mov
lods
or
cmp
adc
movsb
dec
lea
jns
adc
inc
mov
xchg
lahf
std
pop
dec
vlddqu
insl
ljmp
jno
dec
je
cmp
jmp
std
xorb
jo
in
cmc
xor
cmp
mov
cmp
jle
xlat
mov
adc
sbb
push
mov
arpl
shll
movsl
or
jo
loopne
sarl
ljmp
push
and
icebp
call
sbb
pop
jcxz
mov
pop
insb
dec
xor
repnz
or
popf
gs
pop
inc
imul
adc
mov
cs
loopne
and
aad
push
cmpsl
jl
stc
mov
inc
or
xchg
xchg
aad
int
dec
cmp
xchg
insl
jae
out
fwait
pushf
inc
push
lock
sti
cmp
push
jb
cmc
cmpsb
mov
out
stos
gs
push
rcl
ljmp
add
rclb
jle
push
es
movsl
pusha
mov
iret
inc
lds
popa
jl
es
and
mov
cmp
sub
lods
lret
jo
dec
outsl
cmpsb
push
lret
std
div
scas
stc
pop
mov
pusha
xor
jge
jb
into
pop
scas
aam
mov
pop
adc
lea
pop
out
movsb
jae
lcall
mov
rcr
jo
push
clc
popa
xlat
aaa
and
mov
mov
insb
cmp
into
rcrb
gs
inc
xorb
adc
call
ret
test
xchg
inc
loope
lds
jno
int
push
dec
add
es
pop
push
movb
dec
sub
push
aam
xchg
dec
loopne
push
fbld
bound
push
lock
add
push
stos
sub
aas
lret
xlat
scas
pushf
cmpsl
inc
dec
xchg
jnp
lea
pushf
bound
adc
adc
cmp
push
mov
or
movsl
xor
movsl
xchg
andl
fimull
cmp
xchg
addb
sarl
fwait
lods
aad
push
push
mov
push
xor
sub
pop
js
add
es
es
sub
pop
into
add
cmpsb
inc
push
shl
cmp
cmp
hlt
pop
xor
popf
xchg
and
jb
fnstcw
imul
cmp
pop
fs
add
mov
test
pop
mov
rcrb
add
or
and
mov
iret
lcall
push
lret
je
lea
insb
lcall
mov
cltd
ret
add
pop
cltd
push
es
data16
insl
ret
jmp
out
add
pushf
pop
nop
clc
ljmp
xchg
mov
push
gs
cmp
inc
test
adc
insl
jns
aam
test
and
fdivrl
fimuls
xchg
jnp
daa
std
loop
in
or
test
rcl
dec
or
cmp
sub
sarl
jno
pusha
mov
clc
repnz
jns
pop
in
mov
inc
jle
in
clc
arpl
sarl
push
sti
cmp
pop
pop
adc
ret
in
mov
pop
push
icebp
or
xchg
xor
sbb
sbb
in
lods
imul
adc
jmp
and
sbb
aas
cmpsl
inc
xchg
push
jg
cmp
mull
pop
inc
jg
and
aas
add
sub
and
aam
sbb
adc
lds
pushf
push
je
jg
inc
in
or
outsb
pop
jbe
add
xchg
aaa
fisttpl
mov
adc
pop
mov
xchg
aaa
xor
aaa
mov
das
pop
lahf
movsl
bound
movsb
ret
je
and
sbb
jnp
jb
adc
add
mov
mov
adc
loopne
push
dec
cmp
xlat
stos
xchg
out
sti
stos
mov
sbb
inc
dec
jp
and
mov
mov
inc
arpl
lcall
aad
mov
pop
push
mov
daa
loop
std
test
jmp
sbb
lods
sub
mov
sub
cli
dec
pop
adc
add
mov
nop
mov
jae
int
rorb
gs
push
fcompl
mov
loopne
add
inc
mov
or
xor
test
mov
stos
inc
mov
adc
xchg
fisubrl
push
xchg
sub
call
jg
sub
push
mov
jo
imul
sbb
popf
subl
pop
ds
inc
gs
cmp
dec
fsubrs
inc
pop
lahf
dec
inc
cwtl
mov
rcll
and
popa
and
or
and
lods
pop
faddl
lea
aas
sbb
dec
pop
in
data16
mov
dec
mov
mov
jge
xor
in
pop
jns
in
mov
sub
int3
fs
add
and
push
pop
scas
insl
mov
ret
push
mov
nop
cmp
xchg
movsb
push
jbe
adc
std
test
mov
lock
sti
lds
pusha
cwtl
outsb
xor
pop
addr16
jno
or
push
xlat
xor
pop
adc
sbb
sub
add
out
divb
cmp
mov
push
jb
sub
xor
aas
adc
lret
fldl
repz
enter
mov
xor
mov
insl
cmp
aam
jno
loope
cmp
jns
aas
xchg
add
movsl
pop
inc
cmp
mov
outsb
inc
popa
ljmp
ljmp
cmpsb
push
sbb
fmul
out
xor
call
xlat
outsl
stos
aad
push
sbb
addl
dec
lret
jl
push
aam
jmp
out
add
jle
sbb
dec
cwtl
push
movsl
pusha
insb
lea
or
xchg
fwait
repnz
in
in
in
fwait
sbb
sub
out
rolb
sysenter
sbb
les
dec
popf
xacquire
sti
fiaddl
aas
inc
cwtl
cwtl
in
popa
loop
aaa
cs
lock
xor
lret
jge
lret
xchg
fidivl
jecxz
xchg
and
and
add
pushf
insl
and
in
push
inc
dec
jb
xor
push
int
insl
jecxz
test
xor
repnz
mov
test
out
enter
xlat
pop
mov
mov
fcompl
push
adc
dec
bound
cmp
xor
adc
cmpsl
cmp
xchg
aaa
fiadds
xor
push
hlt
andl
clc
roll
cmp
add
cmc
add
cmc
and
push
mov
mov
jl
cmc
in
test
out
subb
push
mov
pop
mov
cmp
push
shrl
dec
mov
and
imul
mov
push
and
cvttps2pi
xchg
sub
leave
sbb
cmp
addr16
lods
jl
xchg
repnz
out
inc
inc
imul
iret
test
fcmovnb
ja
insb
cmp
sbb
notb
stos
pop
push
mov
xchg
bound
inc
mov
pop
mov
pop
fwait
stos
mov
or
push
xor
dec
outsl
xor
inc
outsb
adc
dec
aad
and
mov
cmpsb
jl
jbe
mov
repz
jae
sub
push
scas
pop
jle
sub
ficomps
push
xor
xchg
mov
cmp
jmp
push
jno
mov
push
pusha
dec
xchg
int3
push
sub
mov
lock
pop
dec
ss
mov
xchg
addb
jb
xor
mov
in
inc
jne
call
fwait
js
push
push
pop
leave
dec
cltd
fldl
pop
jg
repnz
lahf
das
mov
cwtl
mov
insl
jno
es
mov
mov
scas
mov
jae
iret
xor
and
leave
hlt
out
adc
dec
lret
fs
dec
pop
and
ror
sub
test
jl
stc
cmpsl
xchg
xchg
sub
aam
out
dec
mov
rcrl
rcrb
sbb
aaa
lock
mov
sbb
pop
rcll
mov
sbb
jne
push
in
sbb
jno
xchg
adc
sub
and
clc
scas
subl
lods
jne
call
and
insb
and
inc
cmp
pop
jp
adc
or
jb
rclb
sbb
out
jecxz
pop
out
xor
dec
mov
es
js
xlat
iret
push
sahf
mov
mov
ret
push
and
arpl
mov
adc
mov
insl
ljmp
ja
cli
out
cmp
pop
inc
push
stos
mov
mov
push
jg
pusha
cld
leave
xchg
adc
sbb
hlt
mov
cmp
repnz
jle
shrl
bound
cwtl
into
sbb
mov
dec
clc
pop
mov
out
hlt
outsl
test
push
inc
stos
or
lods
ficoml
shlb
lods
and
lahf
sub
pop
jne
xor
mov
cmp
adc
cld
add
push
movsl
movsl
ds
dec
fiadds
jecxz
jbe
loope
jmp
insl
js
pop
loope
in
ficoms
mov
frstor
pop
jle
in
fstpt
sub
mov
dec
lret
scas
addl
dec
xchg
ret
jno,pt
iret
fst
dec
push
add
cmpsl
sub
das
les
popa
push
arpl
sub
or
bound
mul
iret
adc
gs
jnp
or
sub
test
loop
aaa
out
lods
fisttpl
test
fnstcw
jg
dec
ret
push
mov
mov
loopne
jns
hlt
jne
mov
xor
or
xor
or
test
cltd
xlat
ljmp
add
iret
mov
daa
lock
out
dec
mov
shlb
adc
mov
cltd
scas
and
fcmovnb
cmp
fildll
or
js
lds
shll
mov
addr16
pop
lods
stos
adc
hlt
push
test
mov
push
mov
fsts
jb
sub
mov
push
sti
movsl
fs
mov
bound
cmp
mov
std
leave
cwtl
rorb
push
inc
mov
jle
jno
xor
andb
push
push
out
dec
sub
mov
and
sub
pop
mov
testl
sbb
in
jnp
and
cmp
mov
inc
lods
repnz
nop
adc
test
and
mov
pushf
sti
jp
enter
pop
inc
or
lods
adc
and
push
mov
or
mov
stos
or
add
or
mov
jnp
xchg
mov
inc
fwait
pusha
pop
imul
sbb
push
iret
pop
pop
xchg
loope
les
xchg
xor
cs
daa
aaa
addl
aaa
aas
insl
add
popf
cmp
cmpsl
jl
jns
dec
bound
pop
xchg
stos
movsb
js
cmc
or
mov
cvtps2pi
push
add
or
jno
or
xchg
push
dec
jo
mov
addr16
test
mov
repz
loope
sbb
mulb
sbb
fmuls
lea
loope
sarl
gs
imul
sub
int
ret
pop
inc
pop
cmp
sbbb
ret
loope
ret
in
or
or
ljmp
jae
cld
sbb
ss
bound
sub
lods
pop
je
mov
scas
in
push
push
cmp
sahf
insb
push
loopne
cs
sti
push
mov
xor
pslld
pop
push
push
push
push
and
dec
pop
loop
into
cmp
xchg
movsb
clc
jo
sub
jmp
les
mov
xchg
les
insb
xchg
mov
mov
adc
test
psraw
jecxz
lret
xlat
jp
mov
jne
movsl
pop
sbb
jns
xchg
test
es
push
das
mov
jb
or
shrb
cld
or
rorl
pop
sub
je
mov
dec
mov
nop
mov
clc
popf
ljmp
gs
int
add
pop
insl
scas
mov
pop
sarb
push
lret
jbe
jae
pop
mov
arpl
lea
push
and
out
call
aas
mov
test
jg
dec
mov
cwtl
in
pop
pop
adcb
jmp
push
and
inc
dec
in
dec
outsl
imul
cmp
fwait
jae
add
cld
mov
jnp
ljmp
out
scas
in
fidivl
sti
inc
pop
mov
jae
clc
jl
dec
jae
test
ljmp
xchg
xchg
jb
lret
test
cld
or
scas
lret
mov
pop
in
in
mov
pop
js
xchg
sbb
das
int3
xchg
inc
sahf
insb
icebp
sub
mov
xchg
and
push
add
mov
cmpb
cli
sub
add
fsubr
xchg
js
loope
in
fdivrl
mov
ljmp
repz
scas
js
dec
mov
xchg
imul
xor
push
and
dec
out
mov
subb
ljmp
cli
jae
jecxz
adc
in
cmp
dec
sbb
dec
nop
xchg
cmpps
imul
cmc
int3
or
pusha
lods
cli
xchg
mov
iret
ror
stc
xor
daa
pop
jns
divb
mov
sahf
adc
and
orl
adc
add
in
cmp
pop
stos
std
shlb
xchg
pop
ffree
cli
xor
jmp
xchg
xor
mov
rcrl
jbe
jl
fnstenv
gs
popf
pop
xor
std
outsl
mov
sti
insb
flds
jae
mov
cltd
sahf
outsl
fsub
jns
test
popa
in
enter
cmp
es
nop
push
cmp
imul
mov
or
popa
sub
addr16
jecxz
fwait
xchg
pop
ja
scas
out
sbb
clc
leave
inc
lret
and
fcompl
mov
adc
in
and
adcl
in
cli
mov
adcb
push
stos
cld
pushf
mov
mov
outsb
in
ret
mull
ds
push
outsb
push
adc
sub
insb
mov
dec
pushw
aaa
mov
fildll
push
loope
bound
mov
adc
jg
sub
pop
fildll
mov
in
adc
bound
pop
pop
shl
clc
pop
fldenv
int
or
mov
scas
iret
cmpl
mov
cli
xchg
dec
sbb
inc
daa
das
jmp
in
fwait
jl
dec
sbb
push
hlt
ret
insb
jg
aad
add
aam
xchg
mov
pop
and
mov
push
pop
js
adc
rolb
lea
sub
shrl
ret
pusha
dec
jno
pop
aam
cmp
dec
sbb
fs
inc
push
imull
xchg
inc
sub
cmp
sbb
fnstenv
stc
mov
adc
int3
test
or
gs
pop
cld
add
adc
mov
mov
es
andb
add
lret
cmpsb
mov
mov
add
inc
dec
rorl
cmc
jo
leave
xchg
or
shlb
and
or
lret
xchg
setb
pop
push
in
xlat
add
das
cmp
mov
lahf
adc
test
xor
out
mov
mov
mov
inc
bound
mov
movsb
mov
rcl
dec
mov
sbb
stos
popf
icebp
ljmp
sub
test
dec
cmp
ljmp
mov
pop
jno
mov
mov
mov
jmp
xor
mov
or
pusha
xchg
lahf
xchg
out
pop
push
xor
xchg
jl
stc
es
pop
in
loope
std
lcall
mov
jge
lods
rcrl
repz
mov
int
fildl
cmp
push
sub
jmp
adc
adc
add
dec
mov
ss
clc
mov
pop
fisttps
leave
and
jb
outsb
es
inc
iret
fisubs
shll
pop
test
aad
pop
xor
mov
outsb
add
ss
mov
pop
bound
dec
pop
in
push
cmp
les
jp
push
mov
and
cmpl
mov
pop
mov
out
aaa
pop
fs
push
sbb
sbb
jge
jmp
inc
sub
cmc
cli
addb
js
adc
cmpsb
inc
pop
sub
lret
cmpsl
mov
xor
jnp
clc
sub
cmpsl
sub
jge
inc
or
notb
sub
sti
and
jmp
mov
lods
pop
in
das
ret
loopne
dec
fstps
lock
stc
xchg
int3
inc
push
dec
jg
jp
jb
or
les
cmp
cmp
test
mov
jmp
pusha
addr16
inc
repnz
mov
mov
in
add
mov
jp
push
push
lcall
mov
xchg
mov
cld
rcll
into
xchg
inc
cmp
fsubl
lds
jmp
or
fnsave
jmp
cli
xchg
arpl
ficompl
push
dec
cld
outsl
aam
jg
mov
mov
insl
cltd
pop
or
ss
or
or
pop
ret
add
add
adc
sub
fsubr
mov
rep
leave
xor
sti
shrb
dec
out
sbb
pop
scas
xchg
jg
negb
int
jbe
push
ja
roll
mov
iret
repz
push
call
xchg
dec
jne
in
hlt
jg
or
sbb
mov
mov
out
adc
sbb
inc
sbb
mov
sub
dec
xchg
bound
sbb
sbb
push
gs
test
stc
push
enter
fstpt
xor
inc
jns
xor
pop
movsl
xor
dec
mov
cmpsb
dec
mov
out
enter
pop
iret
in
addr16
test
xor
xchg
pxor
xor
lret
mov
dec
mov
test
lret
cmp
push
divb
aaa
test
mov
mov
inc
mov
scas
or
add
push
jne
fldl
jb
inc
aad
insb
push
jnp
push
pop
out
mov
cld
mov
and
addr16
mov
je
lea
cwtl
mov
popf
pop
adc
clc
pop
xchg
aad
shl
sbb
mov
sub
pop
sbb
out
sbb
mov
cmpb
stc
pop
outsb
mov
divps
es
repnz
loop
mov
cmp
into
pop
dec
xchg
mov
mov
and
stos
insb
repnz
pop
push
mov
or
pop
outsb
popf
inc
pop
in
shrl
and
cs
fimull
jb
push
sbb
lret
xor
mov
subb
cmp
push
add
jmp
dec
jo
jl
jne
cmp
test
push
xchg
push
inc
add
jnp
frstor
dec
outsb
mov
push
jns
xchg
mov
enter
inc
ret
adc
les
ljmp
pop
je
xchg
mov
shrl
xchg
mov
fcompl
loopne
aaa
adc
push
xchg
mov
in
lcall
or
mov
ljmp
ss
fidivrs
mov
inc
imul
lahf
pop
dec
or
and
sbb
xor
sub
rol
or
push
sub
movsl
int
fadds
jl
out
icebp
outsb
and
xchg
dec
pop
jbe
int3
xchg
test
dec
jb
shrb
out
jnp
insb
arpl
sbb
test
jecxz
mov
jg
inc
sbb
out
bound
pusha
in
bound
dec
push
jno
push
jae
sbb
sub
leave
loopne
dec
data16
adc
or
mov
dec
push
push
add
push
push
adc
iret
loop
sbb
sbb
sar
repz
xchg
cmc
add
aas
dec
aam
inc
fidivrs
filds
sahf
adc
pusha
arpl
jg
insl
xchg
mov
divl
mov
dec
cltd
incb
xor
sbb
subl
add
aas
or
dec
aad
xor
daa
sub
bound
scas
sub
pop
xor
movsb
imul
inc
pushf
rolb
mov
and
or
jnp
mov
or
orl
xchg
mov
mov
call
dec
rorb
push
sub
pop
jne
hlt
insl
sub
jae
leave
icebp
cmpsb
rol
std
pop
aas
insb
adc
ljmp
xchg
test
nop
jnp
roll
cmp
ret
jb
or
jecxz
iret
pop
adc
scas
bnd
push
popa
cwtl
fldt
add
push
fcoms
xchg
jb
jo
mov
pop
mov
ja
add
cmp
cli
fsubl
dec
test
inc
bound
push
push
test
pop
and
test
inc
lcall
in
sub
lods
push
mov
xchg
fldl
ret
adc
jge
mov
jmp
fldl
push
jle
stc
dec
int
cmp
int
daa
fincstp
mov
and
test
loopne
jmp
loope
loop
xchg
pop
sahf
shlb
nop
sub
inc
inc
fnstsw
rol
jo
mov
dec
enter
push
test
adc
jge
push
cmp
mov
xchg
mov
xor
int3
dec
push
sub
insl
iret
stos
mov
insb
mov
dec
mov
mov
ficompl
insb
push
outsl
xchg
sbb
lahf
inc
cwtl
adc
mov
or
dec
fldl
xor
pop
lods
dec
mov
in
roll
jle
and
add
mov
outsb
sahf
mov
rclb
mov
jae
mov
or
sub
scas
xor
push
dec
pop
adc
out
inc
scas
adc
dec
cmpsl
inc
and
push
jle
xchg
jbe
daa
enter
addr16
out
prefetch
or
popa
insl
fwait
ds
scas
lahf
daa
das
outsl
sub
inc
mov
jg
mov
es
cltd
sub
push
mov
popa
push
mov
xchg
fldcw
push
adc
arpl
mov
call
xor
cmpsl
adc
add
dec
std
sub
push
movsl
xor
test
mov
push
sbb
sahf
dec
sub
pop
sahf
in
fadds
jno
repz
mov
loope
or
mov
stos
lcall
xorb
ja
push
jge
mov
out
pusha
pop
push
cwtl
pop
push
lret
gs
adc
pop
inc
lods
aaa
push
pop
adc
dec
hlt
xor
xor
inc
and
ret
call
adc
and
push
dec
pop
call
rcrb
fistpll
pop
rcll
fdiv
cwtl
es
cli
and
shlb
sti
clc
test
bound
sub
mov
rolb
push
mov
xchg
or
sbb
popf
fwait
push
jge
adc
arpl
dec
push
inc
ds
and
into
lcall
outsb
fisubl
pop
loopne
ljmp
fisttpl
pushf
ds
or
mov
mov
dec
dec
mov
jecxz
data16
xor
dec
repnz
mov
mov
mov
scas
xor
sbb
sbb
add
pushf
mov
movsl
adc
sbb
push
adc
and
adc
aam
lret
adc
xor
dec
or
or
jle
orb
and
mov
mov
mov
out
repnz
pop
test
dec
xchg
aas
sub
mov
lods
loop
sbb
jle
push
divb
sub
in
leave
adc
dec
fcoms
popa
add
mov
mull
sti
mov
and
dec
mov
out
add
ss
cli
push
sti
inc
jg
mov
adc
movsb
or
and
pop
vmwrite
dec
popa
inc
cmpsl
out
fbstp
xchg
or
mov
xor
xchg
sbb
push
inc
sarl
pusha
cwtl
punpckhdq
cmc
cmpsb
mov
test
movsb
mov
movq
in
or
add
data16
sbb
popf
sub
clc
mov
in
test
and
out
les
sahf
push
hlt
outsb
push
jg
xchg
jb
or
rorl
cs
xchg
dec
gs
cmp
sub
je
add
ja
push
not
adc
add
lret
cmp
flds
and
mov
loopne
sbb
dec
scas
lcall
mov
popf
sarb
add
test
repz
lods
sub
sbbl
mov
pop
nop
inc
xor
je
imul
push
pop
movsl
cmp
into
dec
add
push
je
divl
out
fxtract
arpl
mov
decl
xchg
jnp
xor
ret
rorb
sbb
mov
jmp
push
sub
jne
addb
testl
inc
pop
push
add
rcr
test
cmp
cltd
pop
jle
sbb
aaa
mov
push
les
xchg
lock
pop
lret
loop
int
push
lcall
scas
ja
sbb
mov
adc
popf
jge
imul
fwait
and
jle
and
pop
or
lea
xchg
or
out
lahf
sti
cmp
jge
push
pop
enter
lock
lea
or
movsl
mov
and
pop
daa
mov
lret
les
cltd
fwait
movsl
mov
mov
shl
int3
inc
cmpsb
insb
xor
jl
loopne
ja
cli
fwait
aad
arpl
mov
mov
jne
mov
cmp
and
inc
cmpsb
hlt
cmovo
lods
leave
jne
pop
pop
popl
inc
fwait
fwait
mov
fiaddl
jge
js
jnp
sub
sahf
call
xchg
scas
or
and
int3
insl
out
dec
pop
test
and
push
jle
push
outsb
insb
imull
imul
inc
push
dec
call
push
sbb
adc
xchg
outsl
add
call
cmpsb
mov
scas
jecxz
fs
daa
sbb
mov
mov
fistpl
add
or
cmp
sub
lahf
nop
fmull
sbb
loope
mov
outsl
and
dec
cwtl
aas
xor
pop
pop
cmp
jae
iret
pop
dec
and
sub
jno
out
ret
xchg
mov
dec
data16
fists
cmp
arpl
imul
aad
jae
cmpsb
out
cmp
mov
sub
sbb
jno,pt
xchg
leave
ljmp
sub
jmp
sarb
lret
hlt
and
mov
dec
pop
movsl
cmp
push
icebp
lret
mov
add
jb
xor
cmp
out
mov
lret
imul
push
pop
adc
lahf
inc
push
js
das
aaa
lods
jle
hlt
in
sub
xchg
or
loope
je
mov
xchg
ds
fmuls
dec
incl
in
dec
popa
lret
fwait
xor
mov
and
jmp
lret
testb
std
imul
xlat
call
sbb
lock
jne
mov
mov
int
in
mov
mov
outsb
dec
mov
clc
push
faddl
int
push
leave
test
mov
decb
xor
adc
dec
scas
inc
cmp
pop
mov
js
loop
or
jae
cwtl
cmp
dec
aaa
inc
add
cwtl
movsl
imul
sbb
cmc
rcll
dec
push
mov
jnp
push
jg
jo
out
adc
fbstp
adc
xor
arpl
rorl
js
push
dec
pushl
je
inc
mov
stc
sarl
rorl
push
xor
test
outsl
leave
pop
sub
iret
test
lods
or
ja
jl
inc
mov
js
call
stos
add
sub
fisubrs
adc
outsb
imul
lods
jbe
push
popf
push
push
inc
cmp
jmp
addl
roll
pop
fabs
lret
data16
ljmp
in
sbb
dec
or
cmc
jge
and
lds
sbb
cmc
cmp
bound
push
or
rclb
dec
addb
stos
xchg
fisttpll
insl
pop
test
xor
mov
fimuls
dec
addr16
das
mov
fistl
inc
leave
mov
inc
inc
adcb
bound
sbb
scas
ret
push
movsw
adc
call
hlt
and
push
jns
sub
negb
and
xchg
jb
adc
insl
imul
outsl
insb
subl
bound
inc
and
dec
fstl
in
push
mov
jne
jg
or
nop
pusha
rcrl
and
xorb
sub
mov
roll
shrb
cmpb
inc
and
and
mov
aad
lock
xor
cltd
xlat
cli
inc
cmpl
jge
jnp,pn
mov
dec
shll
repz
hlt
pop
repz
sti
test
xor
lret
mov
cli
lods
les
jle
aad
and
cwtl
cmp
sbb
inc
xor
and
sbb
mov
nop
out
or
in
mov
out
jae
ss
jbe
lock
jo
inc
mov
push
push
inc
out
sub
or
scas
sub
push
cwtl
call
jge
mov
lret
std
jnp
lods
daa
jp
dec
sti
sbb
lds
jmp
xor
fisttpl
push
jne
cmp
rcrb
dec
cmpsb
cmp
inc
xchg
add
mov
in
mov
and
scas
popa
cmp
xchg
mov
sub
adc
mov
xchg
mov
aas
adc
add
cmpb
fdiv
mov
pop
inc
lds
jecxz
and
push
repz
fs
test
or
or
sti
cmpl
sub
outsb
xor
push
aam
mov
dec
jo
movsb
repz
add
repz
scas
insb
inc
push
popa
flds
or
fcom
arpl
sbb
lods
mov
dec
add
mov
sbb
aad
jg
ja
out
subb
mov
pand
cltd
das
notb
daa
inc
mov
mov
pop
cmp
movsb
cmc
mov
sti
cmc
inc
add
cmpsb
iret
fcomps
push
sahf
xchg
dec
jb
das
flds
sub
mov
mov
or
lcall
xor
mov
pop
decb
cmp
lods
lods
jno
stc
test
stos
pop
cli
xor
jge
push
mov
pop
add
mov
jge
fidivrl
cmp
and
add
out
aas
lcall
out
lahf
mov
lock
adc
mov
jmp
add
cld
in
mov
cmp
in
xchg
sub
sahf
xchg
arpl
adc
inc
loope
jo
push
popf
bound
or
imul
in
mov
adc
add
pop
add
and
lea
sahf
test
repnz
mov
lods
int
daa
fxtract
and
fnsave
rol
int
jb
ja
inc
jmp
insb
enter
decb
test
xor
sub
jp
mov
call
mov
rol
mov
testb
andb
lcall
lret
arpl
adc
sub
sub
imul
mov
mov
and
xor
inc
xchg
inc
or
cmp
out
jl
fcmovne
sub
mov
cmp
cmc
in
popa
out
cwtl
popf
aaa
aas
add
jp
inc
movsl
rorl
mov
mov
out
pop
loopne
hlt
enter
adc
dec
xchg
pop
pop
hlt
in
and
leave
dec
insl
push
jns
test
dec
jecxz
jb
arpl
sarb
push
xor
adc
ja
inc
xchg
push
negl
out
repz
movsb
daa
leave
inc
mov
and
lods
out
jmp
sbb
std
iret
and
push
clc
pop
fs
out
fcmovbe
aam
jno
xchg
icebp
loope
pop
and
adc
inc
and
cmpl
ficoml
jge
loopne
dec
cmp
outsb
test
hlt
inc
int3
lcall
mov
xchg
and
sahf
out
hlt
or
and
xchg
rcrb
adc
jle
dec
popf
out
imul
aad
ljmp
repz
arpl
xchg
mov
mov
dec
aam
into
mov
push
xchg
mov
mov
rcrb
or
jmp
cmpb
aas
pushf
sbb
aad
nop
popa
int
mov
pop
xor
jbe
adc
jne
mov
pop
adc
lcall
lahf
sti
sbb
mov
jge
jle
cmc
insb
out
xor
fs
mov
mov
cli
test
std
pop
xchg
mov
loopne
or
mov
push
movsl
lds
inc
cld
sahf
sbb
fdivr
das
cmp
adc
stos
xchg
mov
mov
xchg
movl
mov
shlb
ds
dec
test
sub
add
fstpt
push
push
popa
nop
adc
mov
sub
mov
or
adc
lret
mov
dec
xor
pop
add
lret
cmpsb
filds
stos
mov
mov
xlat
call
and
lcall
lahf
xchg
outsb
subb
pop
popa
insl
dec
adc
mov
pop
mov
shr
call
xchg
mov
pop
xchg
mov
out
aad
xlat
pop
mov
mov
je
inc
scas
pop
mov
pop
out
outsb
pop
sub
mov
cs
dec
xchg
inc
sbb
shll
sahf
mov
stos
or
es
inc
cmp
xor
inc
pop
jmp
inc
cmp
out
pop
cwtl
imul
xor
xchg
mov
roll
xchg
ret
daa
mov
push
xchg
fnstcw
and
push
adc
push
xchg
clc
outsb
pop
pop
lock
imul
int3
incb
xchg
aad
and
into
cwtl
leave
jbe
jecxz
cmp
std
shll
insb
mov
add
mov
and
hlt
push
lret
pop
cs
push
sub
jg
lock
loopne
jg
call
cmp
leave
cmc
and
imul
adc
aas
jmp
enter
xchg
mov
popf
arpl
test
lahf
push
adc
cwtl
cmp
jle
dec
mov
or
add
stos
xor
pop
pop
cmp
pushl
out
mov
mov
push
sub
std
jle
mov
in
hlt
in
xchg
dec
hlt
pop
lcall
jne
xchg
fs
stos
movsl
dec
movsb
imul
in
cmp
testl
stc
xchg
pop
jnp
add
add
dec
lcall
inc
cmp
and
jae
out
retw
push
and
add
cmc
lods
dec
daa
lcall
aaa
mov
pop
test
fisubrl
stc
into
lods
inc
and
xchg
inc
cmpsl
sub
pop
mov
push
fidivl
insb
mov
rcrl
ljmp
or
inc
fcoml
sbb
cltd
or
xlat
mov
mov
adc
pop
push
add
stc
mov
les
loope
outsb
mov
loope
mov
loop
in
xsha1
cmpsb
or
jno
ljmp
and
jmp
mov
lret
add
cwtl
fmull
xchg
mov
stc
scas
mov
lods
and
dec
xlat
popf
add
xchg
mov
ss
cmc
cs
rcrb
gs
mov
adc
mov
sti
sbb
mov
enter
inc
or
jo
xchg
mov
adc
insl
push
popa
mov
dec
push
sti
fwait
cwtl
repnz
push
iret
fmul
mov
jb
mov
jle
out
pop
jo
stc
shr
and
mov
pop
fs
dec
mov
imul
xchg
rorl
cmp
adc
hlt
dec
or
lock
ret
das
je
cmp
xlat
jmp
imull
cmp
dec
lods
mov
insl
jecxz
push
push
add
aam
fwait
ljmp
cmp
hlt
push
testl
mov
inc
imul
pop
sub
mov
imul
test
dec
sbb
xchg
mov
inc
fcmovnb
leave
rorl
movntps
loopne
inc
std
push
imul
mov
outsl
cmp
adc
mov
movl
mov
cmp
gs
test
mov
xor
mov
mov
outsl
ljmp
mov
xlat
jp
or
outsl
test
in
push
or
mov
shl
cmc
das
mov
xlat
call
lcall
iret
xor
sar
cmc
pop
nop
movsl
adc
mov
mov
jne
ja
icebp
insb
out
cltd
mov
ljmp
and
fstl
dec
pop
dec
xor
inc
mov
and
lods
sbb
mov
adcl
and
psrad
jle
mov
lock
incb
aam
pop
orl
test
xor
and
es
push
jmp
enter
inc
jle
jno
dec
inc
sahf
call
mov
int
test
test
call
loopne
fs
fdivs
xchg
jns
jbe
mov
in
es
dec
cwtl
dec
and
imul
mov
clc
or
inc
out
adc
jmp
lods
lds
xlat
leave
and
lods
mov
bound
outsl
xlat
and
mov
inc
or
xchg
mov
aas
jp
lahf
pop
or
std
jmp
sub
pushf
mov
mov
xchg
adc
insb
aam
push
cld
jmp
std
inc
sbb
dec
pop
inc
add
stos
lea
icebp
ds
sahf
in
or
inc
mov
xchg
push
mov
andw
sbb
mov
and
lock
xchg
fcmovnu
lcall
add
pop
mov
mov
cld
addr16
test
jae
jae
dec
add
aaa
push
add
es
pop
adc
and
xchg
fiadds
xchg
push
cmp
cmpsb
inc
scas
and
lahf
es
dec
fsubrp
into
ja
add
rcll
and
cli
or
loop
dec
insb
mov
push
andb
daa
mov
mov
leave
jnp
adc
xor
pop
js
mov
add
stos
xchg
popa
stos
scas
ret
push
and
sarl
inc
mov
xor
movsl
lods
lahf
in
jg
cmpsl
dec
outsl
cmp
jge
mov
dec
dec
pop
icebp
dec
add
popf
arpl
fs
sub
mov
cmpl
add
icebp
aaa
insl
pusha
pop
mov
xchg
loopne
inc
rcl
repz
cmc
push
xchg
jl
lahf
shlb
mov
shlb
cmc
cmp
int3
pop
xchg
imul
add
adc
movsb
in
aas
mov
inc
negb
mov
inc
lret
mov
inc
repz
pusha
rol
aad
dec
inc
jb
sbb
jp
jbe
stc
xor
in
mov
std
iret
xor
in
sbb
dec
in
cmp
jbe
iret
filds
sbb
push
ret
push
popf
and
test
mov
inc
mov
pop
fisubrs
in
aaa
push
pop
sub
ljmp
imul
repnz
pop
adc
lods
js
lods
nop
push
adc
dec
in
cmc
arpl
xor
cltd
jg
mov
sub
cmp
insl
dec
mov
or
das
jae
ret
mov
sahf
out
repz
adc
js
cmp
push
mov
xlat
leave
mov
hlt
mov
cld
call
pop
push
ret
pushf
lret
dec
sub
push
adc
cmp
lea
popf
repz
fists
repz
sub
xchg
or
mov
xchg
mov
xlat
lea
lds
or
lds
mov
adc
mov
add
cli
xchg
cld
mov
loope
test
subb
sub
movsl
sub
rcl
mov
adc
or
imul
aas
xchg
or
pop
out
xchg
xor
sbb
sarb
std
jecxz
mov
mov
in
and
into
xchg
pop
pusha
push
or
add
sbb
lcall
jne
rclb
sub
dec
shll
mov
or
inc
fistl
faddl
lock
mov
test
add
push
jb
jecxz
mov
add
mov
shr
pop
std
adc
outsl
add
cld
je
or
dec
and
inc
js
jo
dec
xor
xor
fdivr
fisttpll
lods
sub
adc
scas
cmp
negl
xlat
and
cmp
add
and
leave
add
out
loope
cmp
aas
sub
sbb
div
loope
ficoml
leave
mov
fucomi
mov
out
push
and
test
xchg
cmp
les
mov
ja
lods
sub
in
sti
adc
fwait
add
jbe
and
je
shll
stos
std
mov
movsl
mov
dec
jg
sbb
mul
xor
inc
mov
sub
shll
mov
mov
outsb
adc
addr16
xor
rclb
mov
jg
repnz
stos
mov
add
sbb
mov
dec
pop
test
imul
fnsave
divl
xor
dec
lods
xor
adc
lods
das
adc
shrb
pop
sbb
iret
cmp
pusha
scas
jmp
add
sub
pop
mov
cmp
cmp
pop
scas
testl
push
add
das
aas
push
test
stos
imul
imul
inc
pushf
ds
mov
mov
fcomp
in
mov
xchg
in
mov
jmp
mov
int
lods
add
dec
jge
lahf
out
fdivrs
and
in
jb
xlat
mov
adc
enter
imulb
lret
push
push
push
mov
xor
pop
leave
cld
mov
mov
fcomps
sahf
lcall
subb
add
fwait
pushf
rol
bound
mov
fbstp
repz
jnp
inc
insl
scas
pop
cld
and
gs
jae
je
mov
lret
outsb
dec
std
xor
gs
mov
incl
mov
xchg
xorl
adc
xchg
or
mov
cmpsl
es
jge
mov
cli
xor
fwait
cmp
test
es
test
fs
pop
pop
cmp
shll
imul
cmp
cmp
mov
mov
push
xor
into
push
scas
and
mov
jne
mov
mov
inc
test
fcomps
in
mov
mov
arpl
cli
movl
or
push
jmp
push
aaa
stos
stos
xor
icebp
pop
mov
pop
xor
inc
mov
popa
iret
lcall
test
fwait
outsl
xchg
xor
outsl
xor
dec
cmp
outsb
add
sbb
negl
mov
imul
xlat
adc
std
lcall
lock
ja
fcomp
mov
xlat
js
xchg
loope
ficoml
pop
loop
cwtl
jnp
rorb
dec
jecxz
mov
pop
fisttpll
leave
mov
or
mov
push
adc
es
add
jmp
ljmp
or
ss
rcrl
cmp
fisttps
lea
movsb
test
add
or
call
arpl
mov
test
in
jb
xchg
fisubrs
icebp
dec
int3
mov
dec
jb
pop
cmp
add
aas
or
lea
in
lods
repz
inc
adcb
inc
lods
cs
je
loope
fs
cmc
xor
sub
cmpl
xchg
mov
mov
js
dec
sub
pop
ja
inc
mov
ret
outsl
mov
loope
mov
mov
fsts
mov
fwait
xlat
fcomps
stc
rorl
testl
mov
js
xchg
ljmp
push
or
repnz
xchg
leave
les
and
in
hlt
mov
daa
lods
les
test
jg
mov
xor
mov
xor
add
pop
decl
loope
adc
inc
inc
sub
fsubrl
jp
clc
and
xchg
lds
roll
dec
enter
in
xor
mov
mov
addr16
xlat
je
inc
mov
or
jb
mov
stc
sbb
lret
jp
adc
cmp
mov
sahf
mov
sbb
sub
xchg
dec
movsl
pop
xor
stos
jb
in
fwait
sbb
adc
jnp
popa
mov
lcall
out
ret
daa
adc
rcrb
lcall
push
clc
mov
into
in
flds
jns
out
add
sbb
dec
stc
sub
scas
xchg
jne
fisubrl
movsl
xchg
mov
int3
adc
xchg
insb
gs
pop
pushf
pusha
xor
jmp
stc
cmc
pop
cmp
out
ret
and
ret
push
or
mov
mov
jae
dec
shll
mov
daa
add
out
test
mov
sub
xor
popa
push
cmp
pop
dec
dec
cmp
ret
pop
jne
mov
stos
inc
inc
xchg
sbb
icebp
push
popa
jne
or
in
bound
jecxz
mov
add
push
xorl
mov
stc
shr
push
inc
cmc
pop
push
std
out
mov
ret
and
push
inc
push
test
fimuls
call
jne
ret
dec
xchg
mov
and
ds
mov
or
mov
iret
dec
data16
push
xor
push
movsl
push
cli
and
xor
xchg
outsb
mov
out
sbb
sub
mov
jns
iret
dec
xor
adc
cmp
je
je
cmp
enter
or
xchg
pop
sbb
fmull
mov
mov
jae
aad
adc
enter
cwtl
lock
hlt
adc
in
pop
daa
lret
shll
in
aam
mov
xchg
ret
pop
adc
testl
scas
roll
jle
mov
sarl
adc
cli
pop
fwait
aad
lcall
fbstp
andb
shll
mov
sahf
jecxz
test
push
cld
sbb
lahf
push
xchg
or
leave
dec
or
pop
xor
stc
mov
pop
arpl
or
icebp
push
rorl
jg
pop
mov
rcrl
inc
popa
push
bound
jae
mov
iret
aaa
jg
cmp
stos
in
xchg
jae
in
dec
int
mov
in
cmp
pop
test
scas
out
add
fldt
inc
mov
ficoms
cmp
or
pop
dec
out
ljmp
dec
sbb
mov
mov
aaa
mov
shr
dec
inc
mov
arpl
and
sar
mov
dec
xchg
xor
xchg
gs
sub
push
jb
xchg
xor
int3
mov
fildl
lahf
push
pop
xchg
aad
lret
ret
lret
xlat
popa
push
xchg
and
pushl
and
dec
dec
fstp
xor
dec
fldcw
add
insb
mov
loopne
mov
push
inc
and
lds
jnp
push
jne
adc
sti
jecxz
cli
sbb
push
repz
push
sub
loopne
dec
ja
lds
nop
jge
stos
loopne
paddd
jae
aaa
daa
mov
cmp
cld
add
inc
jae
out
fdivrl
jnp
or
lea
jno
outsb
push
xor
adc
int
inc
mov
or
cli
nop
sti
mov
add
fs
pop
sbb
sub
fdivr
fnop
imul
mov
push
dec
sahf
dec
dec
cltd
xchg
mov
movsb
es
rcl
and
sbb
cmp
xchg
and
and
sub
fdivrl
mov
shll
sub
xchg
cld
cmp
and
xor
mov
jno
out
mov
pop
ja
or
xor
sahf
cmpsb
push
test
stos
insl
xchg
push
mov
sbb
fmull
jae
insl
out
cmc
lret
ja
dec
loopne
insl
adc
cltd
sbb
inc
push
and
xchg
adc
mov
insl
mov
movsb
std
pop
xlat
mov
cltd
push
jno
add
mov
or
mov
or
fisubs
psllq
lcall
mov
roll
sbb
ja
add
insl
push
cmpsb
adc
mov
movsb
mov
adc
out
jmp
mulb
fnstcw
cs
ja
movsl
dec
lds
xlat
bound
je
scas
rcrl
stc
outsb
icebp
dec
xchg
cmpsl
aaa
push
stc
pusha
inc
iret
shrb
mov
xor
pusha
sbb
das
cmp
loop
sub
icebp
mov
lds
int3
ror
flds
sbb
mov
mov
es
je
jnp
mov
cmp
cli
or
jb
sub
addl
mov
mov
pop
dec
adc
fbld
cmpsb
imulb
sbb
pop
mov
push
movsl
push
add
push
icebp
out
in
pop
mov
pop
insb
daa
jmp
fwait
lea
popa
and
cmp
cs
or
fistl
outsl
and
jp
ret
in
fists
and
dec
test
int3
lcall
dec
lahf
pushf
dec
sahf
mov
cmpsb
nop
sub
scas
enter
push
inc
cmp
dec
pop
in
es
shlb
aad
fldenv
or
inc
sbb
or
mov
push
push
cmpb
mov
movsb
lds
push
hlt
xor
in
andl
jmp
and
cltd
mov
ljmp
inc
scas
mov
push
mov
out
dec
aam
movsb
iret
xchg
in
in
fwait
and
inc
adcl
mov
jl
jp
jg
jbe
stos
and
cwtl
frstor
orl
mov
mov
and
xchg
shrb
cmp
mov
adc
sbb
orb
sbb
cmp
inc
xchg
and
push
xor
inc
mov
inc
inc
jnp
add
frstor
sarl
test
xor
stos
xchg
xchg
pop
mov
jle
inc
inc
xchg
popf
push
fcoms
adc
icebp
mov
xchg
loop
jecxz
ljmp
mov
lahf
inc
adc
jnp
dec
mov
push
dec
pop
or
mov
mov
fs
data16
dec
xchg
xor
add
pmullw
xor
outsl
jno
les
imul
mov
push
fmull
je
adc
clc
xor
dec
inc
mov
in
pushf
sub
ror
ret
adc
xchg
hlt
xchg
arpl
je
rcll
test
fsubrs
pop
inc
icebp
add
ror
shll
in
xlat
roll
sarl
ret
movsl
mov
adc
lds
or
lret
push
je
mov
and
rolb
icebp
mov
inc
roll
and
mov
push
xchg
cmp
and
stos
popa
mov
fwait
sub
push
pop
hlt
jbe
mov
in
or
xchg
daa
sub
jnp
adc
dec
in
ficoms
pop
jno
add
lcall
fcom
inc
cmc
mov
popf
mov
xchg
sbb
jmp
sahf
std
rcrb
mov
ret
cmp
cmc
gs
add
mov
inc
cmp
mov
lcall
daa
mov
and
adc
pusha
add
faddl
cmp
aad
and
jg
das
cwtl
cmp
sub
sbb
dec
and
dec
arpl
pop
pop
xchg
nop
das
repz
aaa
mov
xor
mov
ljmp
xor
ficompl
push
xchg
sub
inc
test
call
fisubrs
cmp
es
daa
fcompl
and
shrb
pop
fsubrl
jno
add
push
mov
or
in
movsl
jns
adc
sbb
mov
xor
mov
and
sbb
icebp
fstps
mov
lods
sub
jns
adc
test
insl
jle
in
into
pop
flds
inc
sub
rcrl
add
test
jecxz
test
into
add
mov
into
xchg
mov
adc
movsb
adc
in
sub
push
pop
imul
cmp
repz
jne
rcrl
clc
mov
aaa
dec
adc
jbe
lahf
scas
imul
pop
xchg
mov
pop
add
mov
or
lds
lds
test
jle
es
clc
dec
nop
jne
es
ror
cli
or
sub
cld
addl
lret
mov
imul
scas
in
lods
aaa
jbe
mull
lcall
jb
push
jb
dec
inc
push
insb
mov
fisubl
jg
jp
cmc
xchg
popf
lds
push
fcompl
mov
dec
inc
btc
jnp
in
mov
mov
das
add
rorl
xor
dec
inc
inc
cmp
pop
or
or
stos
jnp
imul
sbb
cmp
mov
fdivrp
movsl
cli
mov
cmp
add
inc
xor
insl
imul
loopne
mov
sub
ss
fwait
cmp
lds
movsb
lods
xchg
shrd
sub
int3
cmpsl
movsb
ficoms
inc
lods
lahf
punpckhbw
sub
in
call
nop
xor
dec
lcall
adc
test
cwtl
push
fwait
imul
jnp
lods
mov
jecxz
sti
or
mov
fists
hlt
and
cli
sbb
xchg
inc
jbe
ljmpw
or
movsb
sar
xchg
push
loope
aaa
mov
mov
xlat
nop
xchg
pushf
gs
aaa
push
cmp
movsb
jne
pop
mov
aas
jmp
repz
aad
push
iret
pop
inc
and
mov
aad
add
aas
jno
jno
xor
adc
pop
push
insl
notl
push
lods
mov
lcall
pop
aam
sbb
pop
jg
jl
mov
popf
nop
xor
lds
xchg
xor
adc
and
pop
fsubrl
aam
dec
dec
jge
lds
dec
jnp
mov
xchg
repnz
jmp
imul
push
addr16
roll
pop
sbb
pop
adc
cmp
scas
nop
xchg
cmpb
lret
popf
pusha
cmp
jo
ret
push
sbb
mov
movsb
fwait
test
mov
adcl
rol
mov
mov
mov
dec
or
sti
jmp
dec
in
jle
mov
cmpsl
cmp
jne
cmp
sbb
in
ffreep
adc
sahf
in
int3
push
testl
iret
scas
fwait
jmp
mov
cld
fcoms
hlt
push
pop
cmc
mov
sti
or
or
sbb
rcr
and
pop
push
lods
xchg
dec
sub
loop
insl
dec
dec
inc
sbb
cli
cmp
shlb
cwtl
daa
mov
ja
sbb
mov
cmp
popa
pop
test
leave
imul
cmpl
inc
aas
jns
xchg
sti
inc
dec
cltd
in
mov
mov
mov
bound
lahf
shlb
jle
jmp
cmpl
sub
sbb
das
sub
xchg
cmc
mov
sbb
pusha
xchg
mov
push
add
xor
cmp
cmp
ficompl
aad
pop
jbe
pop
das
xor
sbb
movsb
iret
int3
cmpb
or
jns
test
test
dec
xchg
fstpl
mov
stc
cmp
xchg
xor
jp
js
popf
fcompl
fsub
fiadds
aaa
pop
icebp
fiadds
inc
fnstenv
mov
pushf
filds
out
or
fmuls
adc
xchg
nop
add
inc
pop
mov
cmpsb
xchg
adc
jne
add
mov
pop
notw
ficompl
sbb
pushf
push
lods
in
aas
rorb
sarb
xchg
scas
pop
in
mov
inc
mov
loop
leave
test
xor
ljmp
mov
test
jns
bound
out
aad
lret
jae
xor
dec
pop
inc
xlat
das
xchg
scas
push
inc
out
fcmovu
lahf
jnp
mov
call
dec
mov
mov
sub
call
inc
iret
xchg
sub
or
push
cmpb
cmp
push
xor
sub
out
cs
add
ss
movl
ja
into
inc
fdivl
mov
aam
scas
sbb
add
out
jmp
repnz
jmp
repz
dec
fsts
arpl
lea
roll
mov
push
adc
mul
fstl
call
cmp
fs
xchg
mov
pop
leave
sbb
outsl
mov
andl
aaa
test
add
jns
inc
out
testb
add
test
mov
into
mov
or
lods
xchg
or
pop
sbb
icebp
daa
mov
sub
or
stos
mov
nop
pop
ljmp
xchg
sbb
dec
mov
jp
inc
idiv
add
int3
cmp
pop
in
daa
int
cmc
popa
fsubr
push
negl
lock
lds
xchg
dec
in
sub
adc
and
pop
lods
ds
imul
sarl
pop
mov
icebp
adc
pop
ret
jbe
mov
fnstenv
adc
jp
xchg
adc
cmpsb
enter
xor
xchg
daa
adc
shlb
mov
jp
dec
and
adc
sub
mov
xor
add
fcoms
sbb
mov
jmp
popa
add
add
cmp
jbe
sbb
lahf
sub
jae
fidivrs
and
jge
imul
ds
or
xchg
sbbl
ds
xchg
mov
jbe
nop
xor
cmp
xor
cld
xor
push
add
leave
sbb
push
cmp
and
or
int3
add
and
and
in
loopne
push
int
imul
fwait
xchg
ucomiss
outsb
popf
lcall
and
inc
and
divl
pop
scas
das
or
mov
pop
and
imul
js
fs
mov
decl
les
sbb
imull
cmp
inc
hlt
in
cmpsl
push
dec
jne
out
xor
push
cmp
in
out
loopne
enter
clc
mov
cld
daa
adc
push
mov
sbb
outsb
mov
insb
lret
xchg
lahf
add
scas
adc
fdivrs
testb
addr16
test
lret
shl
in
fld
adc
jne
pop
rolb
xor
mov
lea
push
sub
sub
mov
sbb
jmp
xlat
pop
jg
or
jmp
add
outsb
mov
scas
push
sbb
jl
xor
xor
push
or
ja
call
inc
mov
mov
mov
or
mov
adc
sbb
and
jns
push
leave
cmp
lea
insl
mov
popa
aaa
xchg
repz
out
mov
push
mov
and
xorl
mov
fs
mov
cli
stos
aaa
cmpsl
or
fdivs
or
in
or
shll
call
enter
cmp
pop
mov
push
cld
clc
mov
mov
xor
dec
bound
stc
inc
inc
and
insl
rorb
pop
cli
add
test
xchg
pop
mov
inc
enter
mov
inc
aaa
xor
or
add
orb
xor
add
pop
xchg
lahf
jbe
int
inc
push
inc
inc
and
and
pop
push
adc
movsb
push
push
mov
cld
in
or
push
push
or
sbb
adc
jl
test
cmpb
cltd
adc
jmp
xchg
jmp
dec
pushf
jno
push
int3
and
test
xchg
inc
and
sti
mov
sbbb
sbb
sub
mov
mov
mov
addr16
add
into
jecxz
out
fdivrs
add
cmp
call
add
repnz
testl
scas
xchg
sub
test
add
es
fwait
pop
jne
cmc
aas
mov
mov
test
jbe
ljmp
mov
jp
or
iret
lock
cmp
mov
pop
adc
hlt
imul
push
xor
xor
jbe
sti
je
cld
shlb
xchg
add
sub
jne
sub
inc
or
cmp
xchg
pminsw
es
sbb
cmc
insl
jno
xchg
les
xchg
xchg
push
scas
jbe
sub
jo
hlt
mov
sub
push
pop
xor
mov
enter
test
mov
mov
cwtl
gs
fcomip
mov
push
add
fwait
bound
jmp
loop
repnz
adcb
cmp
cmp
sbb
out
popf
cmp
into
adcl
test
dec
arpl
lods
out
pusha
jmp
cltd
sub
rcl
ja
ficomps
addr16
mov
loope
and
cmp
and
dec
lods
js
lcall
or
shr
or
pop
add
inc
nop
sbb
xchg
popa
jmp
js
ret
and
xchg
in
push
cmc
sbb
sbbl
mov
std
stos
add
adc
push
mov
insb
sahf
cmp
popa
jne
pop
adc
xchg
cmpsl
loop
push
je
leave
cwtl
or
or
add
cmp
adc
loope
jg
mov
cmc
ds
fcmovb
fwait
xchg
mov
adc
lahf
xor
fistpll
inc
aas
push
pop
sbb
movsl
mov
mov
ss
cmp
das
enter
icebp
outsb
and
stc
roll
ja
pop
mov
xor
jne
int
hlt
mov
int3
mov
mov
cmp
xchg
fildll
mov
xchg
movsl
repnz
addr16
cli
inc
imul
push
and
hlt
aaa
cmp
pop
inc
jmp
loop
mov
movsl
push
fcoml
and
cmp
pop
insb
jne
inc
call
add
xchg
addb
push
or
scas
xchg
push
pop
push
test
nop
xor
mov
xorb
cwtl
cmpsb
fdivl
mov
add
pop
mul
jb
mov
pop
mov
jg
jb
mov
sub
mov
fcoms
test
and
stos
push
cmp
push
mov
and
rcrb
ret
pop
xor
inc
cld
push
sub
cld
and
cmc
mov
insb
push
jmp
xchg
adc
out
rcl
in
jge
icebp
sbb
or
and
jp
cmpsb
sub
shrl
stc
imul
jp
fbld
xor
jp
mov
jns
lret
jbe
outsb
pop
mov
pop
mov
mov
push
xchg
push
and
jg
gs
rol
sahf
fisubs
jmp
je
xor
push
outsb
stos
jmp
mov
cmp
outsb
in
cmp
cmpsl
pop
movsl
mov
std
psubusw
add
xorl
aad
add
ficomps
ficompl
cmp
jns
jns
aam
mov
imul
mov
repz
xchg
fldcw
cwtl
arpl
pop
jb
outsb
mov
lods
aas
call
xchg
adc
xor
lock
dec
cmpsl
mov
push
xor
es
arpl
mov
pop
sti
cltd
call
dec
mov
pusha
push
xor
push
xor
imul
or
adc
or
mov
cltd
add
cltd
les
add
sbb
jge
sbb
lret
and
mov
icebp
dec
scas
cld
xlat
call
jp
push
test
fidivl
jmp
sub
mov
mov
sbb
ss
arpl
mov
mov
cmp
insb
cmp
das
xor
aas
xchg
push
push
loope
xchg
and
xchg
std
add
fwait
sbb
inc
push
or
in
cwtl
test
aam
mov
test
mov
jb
cmp
out
xor
xchg
std
or
pop
dec
arpl
sub
cmc
push
loope
repz
jns
fs
and
dec
mov
lods
cmc
pop
stc
leave
cmovle
xor
push
lahf
pop
in
add
cltd
cmp
clc
dec
sbb
repz
rol
sub
jns
mov
jns
ds
mov
push
ss
fistl
cmp
push
pop
and
iret
mov
mov
push
flds
scas
inc
push
fmull
leave
pop
push
stc
pop
cwtl
inc
inc
gs
sub
ret
sbb
cld
test
cltd
dec
push
or
add
mov
xchg
pop
ja
test
popa
cld
das
jge
xchg
cmp
mov
gs
pop
or
sarl
sub
sbb
jg
sub
mov
les
pop
jl
xor
cmp
mov
int
jge
stc
roll
iret
in
iret
pop
dec
iret
call
xchg
clc
xor
fldt
mov
or
mov
outsb
pop
test
xor
push
jne
or
out
push
mov
xor
dec
ds
mov
cmp
dec
fisubrl
mov
pop
inc
loop,pt
lret
dec
fisubl
insl
arpl
repz
imul
stos
or
pushf
dec
inc
cmp
outsb
insl
mov
insl
xchg
arpl
ljmp
push
clc
cmp
movsb
or
test
and
clc
cmc
xchg
push
xor
xchg
cmp
or
xor
jne
add
stc
or
mov
inc
shr
adc
leave
cmp
movsb
xor
cmp
pop
cmp
mov
dec
mov
lods
sub
cmc
loope
lahf
out
movsb
push
cwtl
push
pop
std
outsl
sub
push
pushf
dec
pop
enter
fistl
push
jae
aam
mov
ljmp
adc
aad
cli
mov
int
subb
shlb
cmpsl
out
sub
and
xor
sbb
jle
js
rcrl
adc
shlb
jnp
sbb
stos
inc
iret
fiadds
xchg
jmp
ret
or
xchg
ficomps
out
sub
std
xor
xor
loope
into
jbe
cmp
lds
jns
int3
call
jecxz
xchg
adc
jne
sub
mov
fxch
inc
pop
scas
scas
loopne
aad
in
orl
outsb
outsb
mov
loopne
fstl
sub
xchg
jne
mov
mov
into
adc
sub
aam
sbb
shr
movhps
jle
int3
fnstenv
mov
push
cmp
mov
sbb
mov
mov
jl
inc
jae
jns
mov
stos
mov
jl
int
push
out
mov
popa
xor
jecxz
adc
out
mov
xchg
arpl
dec
mov
fstps
rcrl
lcall
mov
xchg
out
mov
mov
inc
ficompl
fisubrs
cli
imul
fcomp
cmp
fldcw
lcall
movsb
das
js
out
push
sub
push
push
jns
cmp
popa
sub
mov
stos
lret
fidivrs
sti
test
sub
adc
ja
repnz
dec
and
sahf
lret
mov
mov
std
inc
gs
vcvttss2si
jge
mov
cmp
sub
mov
in
xor
xchg
adc
mov
push
bound
sbb
sbb
shrb
push
mov
mov
pop
pop
xchg
push
dec
sbb
inc
mov
ret
movsl
shll
xchg
popf
mov
hlt
loopne
fnstsw
or
add
adc
adc
mov
subl
popa
jb
hlt
cmp
sub
cltd
ljmp
out
addr16
xchg
flds
outsb
cmp
add
cs
push
jecxz
sub
mov
into
orb
out
pop
aaa
ljmp
ds
cli
xchg
xor
sub
pushf
adc
popf
jp
aas
ret
xorl
jbe
xchg
cmp
sub
or
dec
inc
xchg
or
in
popa
pop
icebp
xor
cmc
jno
scas
mov
pushl
mov
fsubrl
iret
dec
sub
scas
jl
int
sahf
add
and
stc
adc
xor
cmp
fildll
ret
cmpsl
jmp
xor
mov
and
add
push
jns
aas
sbb
outsl
int3
lods
or
sub
rorb
ret
jno
repz
test
dec
outsl
xor
jae
and
adc
icebp
outsl
xchg
mov
rclb
fldl
loop
ficoms
je
push
or
add
or
repnz
cmp
arpl
jmp
push
lret
dec
pop
subl
je
xchg
push
call
push
fs
push
inc
jno
cmp
inc
out
es
ss
cld
mov
cwtl
pop
push
jno
push
les
ret
adc
add
or
jl
dec
lcall
idivb
ficompl
push
addr16
shr
imul
cmp
gs
sbb
lcall
imul
mov
fisttps
push
xor
push
decl
dec
dec
sahf
xchg
sahf
add
fisubrs
cmpsb
rorl
cmpsb
mov
jbe
ret
jecxz
push
add
cmpsb
lea
insb
mov
stos
push
cmp
and
fadds
xchg
aam
mov
cmp
xor
movsb
push
adcb
pop
jne
int3
mov
sbb
stc
inc
into
cmc
int
push
mov
push
sbb
and
sti
mov
arpl
xchg
push
mov
jmp
dec
and
scas
mov
addr16
sub
cmp
cwtl
hlt
jbe
js
dec
add
xchg
test
push
adc
mov
mov
rolb
scas
std
icebp
aam
popa
pushf
in
or
pxor
mov
add
pop
adc
or
mov
cmp
pop
push
int
jb
xor
ret
arpl
cs
or
mov
aam
pop
lods
lods
sub
lcall
lds
out
cmp
ds
popf
repnz
sub
in
xchg
rolb
lret
and
andl
xor
mov
cmp
mov
cld
push
bound
fistpll
repnz
dec
sub
enter
xchg
inc
cli
xchg
xchg
sbb
jae
movsl
adc
mov
mov
xor
shll
stos
cmp
fwait
sub
dec
cmp
sub
lret
mov
jne
jnp
add
jne
push
ror
out
or
dec
ret
and
loope
or
arpl
test
popa
fsts
dec
andb
fsub
xchg
xchg
push
lock
jle
or
xchg
mov
jle
mov
dec
xor
push
or
fnstsw
outsb
push
add
add
xor
dec
out
ljmp
jno
clc
stos
mov
andl
js
sbb
lock
in
out
roll
data16
adc
xchg
jl
mov
adc
mov
push
loope
and
sub
mov
addr16
icebp
inc
jae
sub
push
lock
cld
scas
scas
in
dec
hlt
mov
repz
jl
mov
sti
push
popf
jb
jmp
outsb
popf
sbb
inc
sahf
sub
out
sub
clc
pop
dec
in
dec
std
jo
cmpsl
hlt
int
cmpl
leave
rcrl
lahf
popf
into
push
dec
add
push
neg
pusha
pop
adc
outsb
mov
mov
pop
fs
cmp
fidivs
xor
movsb
cwtl
stos
dec
add
les
push
test
sub
fadds
mov
aad
mov
cld
pop
and
push
mov
sbb
cmp
add
pop
cld
mov
dec
popa
cmc
and
minps
xor
xchg
push
aaa
repnz
xor
xor
loopne
jbe
icebp
xchg
ja
push
sarl
xor
fcmovnu
adc
imul
add
dec
aas
nop
dec
jbe
pop
cmp
inc
adc
inc
push
inc
pusha
xor
std
sbb
lods
push
test
ss
and
inc
jl
insb
aaa
jo
das
arpl
je
pop
out
stos
stos
insl
mov
test
jle
popa
lock
outsl
shll
jle
aas
push
arpl
jo
push
mov
mov
out
in
not
mov
lahf
dec
fcompl
sub
fisubrl
and
stc
sub
roll
in
or
jmp
xor
or
ja
sbb
push
shl
out
mov
clc
lcall
push
shlb
test
jae
outsl
push
xchg
clc
xchg
es
lcall
jmp
add
stos
or
rcrb
insb
jb
sysret
mov
adc
scas
nop
sbb
out
mov
pushf
and
add
adc
scas
jp
call
cs
fcomp
stos
inc
sbb
ljmp
sbb
lret
cmpl
ja
xchg
sbb
mov
jp
pusha
shl
imul
fwait
incb
int
mov
mov
rcrl
pop
outsl
mov
scas
rorl
orl
dec
inc
in
sahf
mov
scas
icebp
lahf
lods
add
mov
subl
sbb
out
loop
test
cmp
shll
mov
mov
sti
mov
movsb
loope
sub
cmp
adc
adc
test
fstp
mov
push
push
in
mov
ret
in
pop
in
cmp
out
and
rclb
push
mov
xor
popf
push
sti
push
dec
movd
dec
stos
data16
dec
push
cmpsb
dec
mov
sub
mov
cmp
dec
sub
jg
pop
les
bnd
lods
cmp
jmp
inc
inc
xchg
sub
add
lcall
das
icebp
mov
daa
sub
sub
mov
adc
leave
mov
leave
movsb
test
insb
jo
sub
add
mov
pop
inc
mov
es
push
mov
add
jge
mov
pushl
pop
mov
jl
sbbb
or
push
movsb
je
stos
mov
sarl
fwait
cmp
inc
subl
cltd
xchg
inc
inc
sbb
mov
cmp
addr16
fildll
in
sub
and
add
dec
pop
js
fwait
jecxz
mov
xchg
mov
pop
pop
sbb
cli
sub
lods
mov
lock
iret
pop
ljmp
push
jge
addr16
mov
addr16
xlat
fnstcw
mov
dec
or
jmp
inc
push
dec
aam
test
ficoms
stos
pop
ljmp
in
stc
sub
mov
in
mov
sets
movsl
lret
icebp
lock
xchg
xor
mov
repnz
repnz
es
test
icebp
dec
aad
aaa
ja
pop
and
xchg
in
loop
or
sbb
mov
rcrl
add
pop
stos
cmp
insb
and
call
mov
push
cmp
jns
xor
and
xor
repz
dec
stos
ret
sti
pop
insl
sub
andl
add
push
cwtl
cs
cli
sti
in
pushf
es
faddl
or
adc
push
inc
popaw
mov
shrl
push
adc
xlat
inc
fmuls
pop
das
dec
mov
sbb
sbb
int3
push
les
adc
xor
cmpb
popl
lahf
rcll
pop
in
leave
pop
repz
push
ucomiss
jl
push
jae
xchg
popf
mov
test
push
jmp
push
lea
cmpsb
pop
mov
add
jecxz
outsl
popf
sbb
pop
mov
sbb
repnz
je
inc
xor
mov
mov
cltd
add
sbb
or
cmp
add
mov
in
pop
xor
cmp
lcall
inc
jl
ja
filds
fxch
aam
jo
lcall
jb
sub
push
movsl
sub
repnz
sti
push
mov
xchg
call
test
pop
push
test
push
dec
mov
clc
lret
stos
neg
pop
dec
repz
insb
cmp
and
in
sbb
jnp
inc
leave
sub
adc
and
enter
mov
push
dec
loope
sbbl
or
push
push
adc
push
add
das
inc
inc
cli
sub
inc
in
test
iret
jns
jl
dec
sub
or
repz
push
iret
jmp
popa
inc
inc
das
mov
pop
data16
dec
fwait
insl
push
mov
out
not
jae
inc
push
cmp
enter
cmp
mov
xchg
jae
add
sbb
jae
pop
insl
jmp
pop
pop
fsubr
ljmp
subb
and
ffreep
sbb
dec
adc
fcoml
lods
pop
lods
std
mov
mov
mov
call
cmp
and
ret
in
push
push
cmp
sbb
jmp
or
stc
aaa
cmp
lods
aas
sub
dec
or
mov
mov
pop
and
aaa
addr16
loopew
imul
push
pusha
dec
xor
pushf
add
sbb
mov
cmpsb
idiv
pop
cli
jecxz
fcoms
mov
mov
daa
mov
adc
cmp
xchg
clc
int
test
out
movsb
inc
cmc
sub
jge
mov
xchg
sbb
pop
add
dec
stos
pop
test
daa
outsb
mov
inc
cwtl
dec
adc
fcmovbe
push
jmp
mov
lock
ja
std
lahf
mov
jns
fwait
jp
xchg
and
mov
sti
repz
or
mov
jne
mov
dec
mov
jno
outsb
imul
inc
mov
cld
js
xorl
dec
idivl
dec
xchg
cmp
popa
jl
test
inc
mov
mov
or
pop
js
dec
or
push
mov
mov
and
lahf
das
push
sbb
cs
shrl
shlb
and
jle
in
sub
jb
and
xchg
or
loop
pushf
movsl
or
mov
cmp
addr16
push
and
scas
repz
jns
and
loop
idiv
dec
ds
clc
arpl
test
mov
xchg
pop
or
sahf
shr
adc
inc
dec
mov
movsb
push
loope
sub
je
cmp
push
mov
aam
mov
mov
pop
leave
jbe
or
and
jge
push
mov
xchg
or
mov
jbe
je
shl
and
adc
sub
xor
sbb
icebp
xor
or
sbb
or
cmc
sarb
mov
jno
movsb
ret
and
fistl
loope
mov
push
fwait
loope
add
lods
mov
xchg
pop
push
hlt
jecxz
pop
xor
scas
xor
mov
fdivs
xlat
addr16
imul
mov
pop
scas
inc
adc
iret
add
js
pop
and
addr16
cli
xor
jle
pop
xor
mov
xor
mov
fcomps
adc
xorb
in
pushf
jb
sbb
sarl
clc
std
inc
enter
push
test
or
iret
jae
stos
outsb
out
pop
adc
aas
mov
and
cltd
lahf
mov
call
mov
push
lcall
inc
adc
test
push
in
pop
movsb
jns
sbb
stc
insl
jl
adcb
push
repz
int
push
mov
hlt
scas
pop
shrl
xor
mov
dec
int3
sub
ret
cltd
ljmp
xchg
fsubrp
xor
mov
ret
xor
test
enter
cli
movsl
push
js
enter
bound
and
sbb
fcmove
or
xor
xchg
cli
xchg
dec
push
cmp
push
mov
into
outsb
inc
stos
clc
test
shll
fdivrs
mov
into
ret
and
std
inc
mov
and
inc
xchg
xchg
cwtl
xchg
repz
xchg
iret
stos
mov
pop
mov
aad
add
lds
mov
mov
pop
out
xchg
pop
sbb
mov
fidivrs
mov
xchg
daa
pop
cs
rcrl
cmp
sub
jge
jns
mov
pop
cltd
mov
ffree
arpl
dec
cltd
fstl
inc
push
cmpsl
xor
roll
gs
les
mov
jnp
sbb
xchg
push
outsl
scas
incl
push
dec
jne
and
test
packuswb
test
jl
dec
stc
adc
dec
adc
xchg
pushf
mov
inc
xor
ss
mov
cmp
adc
hlt
aam
movsb
cmp
push
mov
insl
adc
fsubr
insb
es
movsb
dec
repnz
cmc
rorb
push
pop
jp
and
idivb
cwtl
hlt
xchg
imul
sub
dec
jbe
test
mov
inc
add
xchg
adc
or
push
pop
cmp
data16
push
inc
mov
cmc
movsl
jbe
lods
cmp
les
in
out
add
dec
dec
mov
mov
loopne
fs
pop
clc
insl
dec
mov
xchg
xor
fdivrl
insb
rolb
pop
xchg
pop
js
sahf
popf
xor
inc
mov
call
iret
imulb
mov
dec
pop
cwtl
xor
cli
jl
adc
nop
cltd
jge
shlb
mov
int3
sub
fdivl
in
cmc
sub
call
cmpsb
pop
lds
add
movsb
xchg
jae
sub
sub
mov
test
xchg
mov
pop
mov
mov
jl
inc
and
dec
mov
fildll
mov
lods
sub
out
shll
inc
push
shl
dec
or
pop
mov
adc
mov
cmpsb
gs
sub
inc
mov
push
pop
sbb
ret
hlt
lret
in
cld
push
pop
out
mov
push
iret
lret
pop
mov
and
sbb
cmpsb
jno
mov
mov
gs
dec
push
mov
mov
repnz
jns
add
loop
mov
in
push
shrl
dec
sub
pushf
repnz
cmp
mov
inc
int
and
sti
fldt
sbb
or
les
jmp
je
xor
leave
int
fwait
sbb
or
inc
aam
aas
sub
movsl
push
mov
mov
mov
push
dec
xor
jnp
aad
aam
mov
into
jbe
stos
data16
add
iret
inc
sub
jecxz
push
ljmp
dec
into
add
jecxz
inc
add
push
cwtl
pop
adc
outsb
push
dec
icebp
cltd
or
mov
mov
loope
or
std
xor
out
jbe
inc
jp
push
xor
jns
mov
test
adc
xchg
cli
scas
movsl
jmp
add
jl
int
add
nop
jnp
loop
or
daa
enter
mov
xor
mov
push
fiaddl
cltd
xor
push
aam
sub
lock
subb
lea
sbb
jbe
inc
mov
daa
jle
aas
push
pusha
and
out
stos
sahf
mov
xchg
shrb
clc
pushf
int
adc
inc
sub
mov
stc
lock
pop
sub
mov
nop
int
pop
xchg
push
sbb
jmp
xchg
mov
adc
xor
fisttpll
xor
jmp
sbb
sahf
adc
mov
ds
xor
stos
pop
inc
xor
mov
loopne
out
in
xchg
leave
int3
sub
jg
sub
mov
xor
jne
mov
inc
cld
sub
mov
add
leave
insl
test
lods
ja
jl
sahf
pop
aaa
jbe
jg
jns
out
add
jno
test
xor
xchg
adc
sub
pop
add
sbb
or
cs
sar
bound
jmp
xorb
loop
mov
or
int3
aaa
sbb
fs
int3
dec
and
lds
lock
in
stc
jmp
addb
pop
in
xchg
xor
xor
mov
mov
je
mov
dec
inc
or
mov
dec
rcl
pop
sbb
cltd
adc
fs
or
jge
into
jecxz
add
insl
cmp
lcall
or
push
stc
mull
std
nop
push
sbb
xchg
leave
sbb
xor
mov
push
cmpb
sub
and
repz
neg
and
shll
xor
sub
cli
push
in
jmp
jb
xchg
nop
push
jae
push
mov
mov
xchg
pop
mov
ljmp
pop
negl
shlb
xor
inc
shlb
rcrb
sub
not
iret
in
adc
movsl
nop
inc
sbb
aas
sub
and
pop
mov
inc
popl
pop
out
cwtl
je
mov
orl
mov
lcall
out
dec
pop
sub
out
rorb
les
movsb
push
icebp
cmpb
int
flds
shl
das
icebp
test
ja
add
lret
loopne
loop
data16
adc
clc
frstor
sbb
xchg
repnz
sarl
lock
mov
bound
add
cltd
push
inc
inc
icebp
ljmp
push
imul
iret
sti
and
sahf
push
pop
mov
adc
les
ret
shl
clc
cmpsb
jae
add
pop
outsb
outsl
mov
int
mov
cmc
repnz
out
or
xlat
hlt
lods
cmp
mov
test
cmc
push
sub
xchg
imul
add
mov
rorb
sbb
sub
sti
sbb
cltd
pusha
outsb
fildll
push
mov
or
mov
add
inc
out
in
xor
xchg
pop
repz
push
xchg
stos
pop
jecxz
add
and
outsb
dec
in
movsl
jae
aas
cwtl
loopne
mov
xor
sub
insl
nop
aam
adc
ljmp
add
in
dec
add
jo
inc
cmp
shll
jo
cmp
jmp
push
jnp
mov
cmp
imul
push
mov
cmp
inc
lret
jae
jecxz
jmp
addb
push
mov
fcomps
lcall
in
sub
fists
mov
std
dec
mov
imul
add
pop
mov
mov
mov
adc
cmpsb
movsb
pop
test
mov
adc
ja
pop
ds
ja
sysexit
mov
inc
inc
mov
mov
inc
push
push
lcall
and
nop
addr16
cltd
lods
mov
mov
cmp
push
add
inc
movsb
mov
jmp
int3
addr16
pop
fwait
or
jns
add
and
dec
lret
xor
mov
fs
je
xchg
sbb
in
out
ss
jo
xor
decl
popa
xor
fcomp
dec
mov
rorb
lock
in
xchg
push
es
outsl
loop
jae
jp
mov
outsl
int3
icebp
out
mov
lahf
cmpsl
xor
or
pop
jecxz
mov
inc
xor
sbbb
test
aas
push
and
movl
jmp
or
mov
sub
test
push
mov
dec
lret
jecxz
jae
dec
mov
dec
imul
ljmp
jge
loopne
cmp
mov
push
mov
jae
or
push
push
cmp
lea
xor
jae
mov
xchg
out
pushf
add
es
arpl
xchg
addr16
mov
stos
stos
mov
pop
inc
loop
aas
push
push
popa
xchg
out
mov
mov
jbe
inc
dec
inc
jno
dec
dec
outsb
xchg
ret
out
or
and
es
push
arpl
adc
mov
sbb
inc
jmp
push
cli
xor
jns
mov
mov
cmp
dec
mov
push
mov
push
in
dec
insl
rorb
dec
js
mov
stos
rolb
inc
inc
jmp
sbb
push
xor
push
xchg
or
stos
push
add
std
or
mov
cmp
jle
push
les
gs
sub
sub
push
mov
leave
int
fstps
out
les
jb
push
pop
cwtl
cmpsb
adc
push
ss
jne
jo
mov
loopne
jecxz
pop
mov
fucomi
mov
repz
push
sbb
into
jbe
rcrb
and
add
out
mov
inc
cmc
sbb
cmp
cld
adc
push
dec
and
enter
lods
jp
test
sub
gs
das
xchg
in
jo
jnp
sub
mov
pop
sbb
pop
jmp
jg
push
pop
leave
hlt
xchg
add
fbstp
inc
or
inc
daa
cwtl
and
mov
lcall
cmp
push
push
mov
mov
pop
push
repnz
cmpsl
pop
jge
mov
or
loopne
jg
push
jmp
call
or
loopne
push
sahf
pop
push
aas
stos
pop
scas
cmp
and
fsubs
push
push
dec
les
push
testb
mov
roll
mov
lea
adc
hlt
or
int
aas
pop
outsl
shlb
push
sbb
test
cmp
flds
adc
or
push
aam
xor
mov
in
fs
mov
fisubrl
test
cmpsb
adc
adc
cli
sti
int3
cmp
mov
dec
push
pusha
idivb
imul
loop
and
dec
or
aad
xor
fwait
nopl
ret
sbb
out
mov
lods
clc
out
jmp
mov
aad
push
cmp
je
push
mov
mov
ja
bts
jmp
push
outsb
xor
add
xor
pop
and
adc
mov
mov
ljmp
data16
mov
ret
gs
dec
push
or
loop
loopne
insb
mov
mov
cmp
scas
movsb
in
clc
sub
outsl
mov
mov
mov
xlat
xchg
dec
inc
cmp
xchg
int
out
mov
mov
movsl
or
aad
jle
outsl
ss
sbb
jecxz
call
pushf
xor
out
dec
sbb
sbb
addr16
lahf
std
popa
adc
sti
pop
lahf
out
jb
arpl
xor
sbb
aaa
mov
sub
jne
sbb
jne
ds
jno
add
outsb
imul
shll
jp
mov
daa
mov
sub
or
jle
xchg
jmp
push
andb
ds
inc
xor
inc
fwait
jne
dec
lahf
pop
sub
loopne
cltd
jmp
int
mov
pushf
pop
in
sbb
clc
pop
jns
jo
cmpb
mov
lea
cltd
adc
xchg
popa
and
out
icebp
mov
and
popw
dec
imul
mov
jne
add
add
and
add
lret
icebp
movb
cld
int
xchg
subl
lret
mov
xor
and
dec
push
in
and
aad
mov
dec
jbe
aaa
in
mov
or
loopne
sbb
pop
mov
mov
mov
mov
clc
mov
cmp
push
sarl
pop
inc
push
adc
mov
fcmovb
cmpsl
mov
pop
lahf
sarl
pop
or
hlt
mov
nop
dec
dec
adc
scas
test
cmpsl
and
pusha
loope,pt
cmpsb
xor
add
into
repnz
movsb
xchg
in
fwait
lahf
rcll
dec
icebp
add
xor
in
out
add
jbe
mov
fimull
imul
fsub
sti
ror
jae
sbb
jne
mov
shld
mov
shl
les
push
jecxz
in
xor
mov
ds
jle
push
jbe
cmovb
test
inc
or
mov
push
jae
adc
push
insb
fidivs
push
idivl
das
pop
lock
push
cmp
fistpll
jbe
jns
push
rcrb
sbbb
leave
repz
or
popa
sub
inc
jno
jp
mov
pop
lcall
mov
and
inc
xchg
sub
aas
aam
test
push
push
adc
pop
lahf
push
push
push
pop
inc
push
xor
push
sbb
mov
stos
fnstcw
push
pop
loopne
lcall
jg
lcall
mov
test
jnp
cli
mov
dec
or
dec
mov
mov
jge
rol
or
out
mov
xchg
dec
imul
mov
inc
mov
xchg
sub
stc
xor
cmp
pop
je
mov
jle
outsb
pop
je
pushf
and
jmp
or
cmp
xor
div
push
sarb
loopne
cmp
jp
inc
pop
out
fsubrs
int
mov
outsl
sbb
xor
sub
xchg
mov
imull
and
mov
mov
scas
pop
pop
mov
push
test
mov
repnz
movsl
call
addb
adc
std
mov
sub
test
sub
sub
pop
sub
lds
out
out
aaa
dec
fwait
cld
inc
pop
add
dec
test
mov
mov
in
rclb
lock
push
push
cs
push
pop
and
push
aam
xor
pop
notb
sub
lods
dec
bound
pop
repz
das
push
out
xchg
pushf
add
lods
pop
xchg
lds
aas
pop
leave
stos
cmp
and
mov
jle
jmp
adc
or
cmpsl
and
dec
add
jne
jle
pop
leave
aam
jge
mov
xchg
mov
sbb
roll
scas
lea
rclb
imul
mov
dec
stc
cmp
sub
arpl
xchg
into
cmc
jp
mov
adc
sub
adc
shlb
imul
inc
push
cmova
in
adc
adc
mov
mov
jno
test
out
sub
or
rorl
jmp
test
fnstenv
push
nop
sub
inc
mov
es
pop
add
lcall
push
cmp
cmp
and
lock
insb
shrl
add
cli
out
pop
and
icebp
sub
mov
pusha
inc
hlt
mov
gs
add
mov
jle
dec
jle
lcall
rcrl
in
push
cmpsb
addr16
mov
in
mov
ret
testl
shlb
lds
in
cmpsb
mov
pop
ds
rorl
ds
fdivrl
inc
fwait
or
inc
lret
paddsw
loope
fwait
push
cmovg
pop
mov
dec
pop
push
in
cltd
addl
out
mov
repz
popf
push
mov
add
push
ret
push
lret
insb
xor
popf
cmp
adcl
mov
insl
popf
jno
js
mov
mov
rcrl
inc
decb
jg
ret
imul
in
and
mov
daa
add
sbb
fildll
das
xlat
sbb
stos
lods
jg
xchg
mov
add
jae
pop
in
ljmp
das
mov
jne
filds
add
repnz
jmp
bound
test
lahf
adc
dec
jle
xor
imul
outsl
repnz
add
aas
or
into
add
aam
jl
imul
jp
ljmp
mov
in
test
cmpsl
outsl
test
jecxz
into
aaa
loope
sub
nop
and
xor
loope
or
test
in
fadds
jge
dec
daa
fildl
flds
call
dec
and
cmp
add
push
stc
cmp
and
jnp
jne
ficompl
xchg
dec
inc
pop
rolb
pop
test
add
cs
in
sbb
xchg
or
pop
add
arpl
out
movsb
lods
add
push
fs
push
or
adc
test
rolb
fstpl
dec
push
pop
scas
sbb
xchg
add
ret
pushf
cmp
add
arpl
add
inc
and
rcl
in
jno
push
mov
test
and
jle
or
rol
xchg
in
iret
and
cmpsb
mov
cmp
fldenv
pusha
inc
cltd
jbe
inc
mov
sub
mov
mov
lcall
add
jo
jae
adc
mov
mov
and
mov
es
xchg
xor
sbb
sub
call
push
fld
jo
pop
fldlg2
mov
dec
sbb
xlat
scas
pop
pop
fdivrs
scas
pop
push
mov
add
cmc
mov
lock
mov
inc
shl
xchg
adc
out
jle
out
lret
dec
jmp
cltd
jl
bnd
bound
push
push
sub
stos
jnp
clc
cmpl
inc
add
push
pop
sub
sub
mov
in
stos
fwait
inc
push
in
pushf
add
test
or
push
mov
sbb
add
std
shll
nop
bound
mov
pop
mov
and
mov
pop
sub
xor
xchg
inc
pushf
xchg
mov
shlb
pushf
int
cmp
mov
pop
push
xchg
push
cld
mov
pop
rcl
jge
fistps
jns
xor
jnp
scas
sbb
mov
sbb
call
cmpl
sti
data16
cmp
in
push
hlt
pop
rorb
lret
pushf
and
mov
fucomi
fwait
sub
call
scas
inc
dec
and
mov
mov
xor
repz
cmp
inc
sarl
das
movsb
sub
or
mov
data16
and
push
incb
es
jbe
lock
aaa
jge
xor
rcll
mov
test
rorb
loope
or
sub
leave
and
test
mov
das
ja
ljmp
xchg
pop
push
push
cltd
lret
push
push
push
xor
out
and
mov
ljmp
cmp
sbb
xchg
inc
lret
pop
xchg
mov
fisubrs
push
pop
adc
pop
or
sbb
sub
jne
ret
mov
movsl
mov
ds
mov
out
loopne
wrmsr
push
push
cmp
mov
xchg
repz
inc
fcoml
push
pop
rol
dec
sahf
and
mov
and
mov
loope
or
mov
je
push
ret
jne,pt
ret
and
popf
in
cli
fcmovnu
enter
call
sub
sahf
xchg
jae
cmpsl
repz
dec
and
les
mov
loop
cli
push
push
cli
roll
insb
cmp
outsb
sbb
push
cld
fsubr
push
nop
xchg
xlat
xchg
cmpsb
movsb
jmp
sti
fldt
mov
out
push
push
test
push
mov
xor
test
jg
pop
int3
jno
test
popf
and
mov
push
push
aam
ret
mov
sub
outsl
test
cltd
in
mov
sbb
lods
cli
out
andl
mov
jmp
inc
cwtl
std
adc
shlb
jae
pop
popf
ffreep
scas
xor
mov
cli
fdivrs
jns
hlt
adc
fwait
cmc
fisubrs
cmpsl
es
sub
inc
stc
mov
addr16
je
push
or
divl
cwtl
jl
add
enter
jbe
lahf
aad
into
nop
push
sbb
pop
es
mov
call
dec
mov
lock
jb
test
or
mov
dec
mov
test
sub
push
lock
inc
stc
adc
loop
stos
and
es
imul
and
iret
mov
push
lds
ret
repz
mov
sbb
xchg
lods
xchg
int3
sbb
and
push
data16
adc
sbb
jmp
dec
ret
lods
adc
or
outsl
inc
scas
sub
cmp
and
push
test
and
and
fwait
add
dec
sbb
test
add
mov
ret
out
and
sahf
icebp
andb
mov
jge
lcall
push
add
lahf
lahf
mov
xor
mov
push
push
cli
add
cs
pop
call
jno
lret
movsb
sub
or
out
jne
out
and
neg
cmp
test
inc
pop
jle
test
push
push
out
sbb
ret
inc
pusha
hlt
sbb
dec
and
sbb
insl
mov
cmp
xchg
fs
xor
pop
iret
loop
jo
pop
sbb
mov
call
pop
and
jl
jnp
daa
call
push
imul
subb
rcrl
dec
bound
test
cmc
and
jno
mov
lret
mov
mov
mov
cltd
mov
sbb
inc
and
dec
pop
xor
mov
enter
xchg
push
push
loop
lods
jmp
jecxz
ret
ds
incb
mov
test
add
ljmp
dec
adc
rcr
sbb
mov
repnz
adc
adc
push
das
jge
into
dec
and
dec
mov
mov
jo,pn
add
notb
jmp
pop
and
jecxz
push
sbb
and
push
mov
lods
and
incl
outsl
mov
and
adc
inc
fnsave
ret
test
mov
cmp
dec
loopne
aas
test
repz
sbb
inc
inc
dec
cmp
and
sub
pop
nop
xor
cmp
fisubrl
filds
or
push
jmp
test
dec
enter
dec
sub
bound
sti
icebp
mov
adc
sbb
mov
xor
mov
jo
fs
mov
mov
or
repnz
xchg
aas
push
js
mov
cmp
fnstcw
or
dec
jbe
dec
in
push
jbe
inc
and
int3
jne
in
sbb
addr16
xchg
stos
xchg
dec
stos
jle
or
iret
test
into
pop
lods
cmp
add
or
sbb
mov
and
insl
lahf
in
scas
adc
or
fiaddl
push
sbb
lods
adc
inc
add
xlat
sub
out
shlb
arpl
mov
pusha
mov
xchg
jle
addr16
fsubl
stos
push
xchg
call
rcr
sahf
mov
test
fldcw
and
inc
test
push
hlt
movsb
and
dec
lcall
lahf
popf
xchg
xor
rorb
daa
adc
and
rcrb
cld
inc
ljmp
mov
shl
push
jg
sbbb
jno
roll
mov
stos
aam
and
in
ljmp
inc
out
repz
and
jle
sahf
orb
cmpsb
rorl
pop
mov
out
test
mov
inc
js
xchg
adc
pop
mov
lea
rcll
jg
mov
pushl
lret
mov
leave
aad
aaa
mov
nop
lcall
imul
add
dec
jmp
mov
mov
push
das
repz
push
movsb
cli
mov
and
mov
mov
sbb
adc
add
lds
mov
lret
adc
or
cld
inc
push
mov
mov
imul
sbb
inc
add
mov
rorb
pop
cmpb
out
inc
repnz
call
lea
shl
jb
insl
outsl
lods
or
or
stos
repz
xchg
insb
aad
in
xor
test
insb
pop
mov
jnp
movsl
mov
shl
mov
sub
nop
push
ret
shlb
jno
xchg
jecxz
push
hlt
in
xchg
data16
mov
dec
mov
aaa
mov
jmp
sbb
repnz
jecxz
inc
mov
xchg
mov
movsb
sbb
and
xor
inc
or
fs
test
mov
mov
mov
mov
mov
ja
shrl
push
sub
or
push
or
fisubl
arpl
repz
and
dec
add
outsb
add
xor
and
pushf
adc
sbb
sub
les
pop
out
fdivrp
iret
jle
sub
ljmp
or
xchg
cmpsb
mov
mov
rcrb
mov
dec
cmp
mov
jge
dec
mov
sti
int3
pop
in
call
pop
sub
lods
rorl
or
fimull
pop
sbb
jg
ret
stos
sbb
cs
cmp
lods
int3
add
pop
cmp
mov
mov
pop
mov
icebp
in
lods
daa
sar
adc
sub
push
cmp
mov
test
test
lock
testb
aam
jnp
lret
ds
adc
mov
roll
int
mov
mov
xor
bound
movsl
or
sbb
add
popa
loopnew
pop
dec
out
sbb
push
sbb
lock
jb
loope
jl
mov
out
xor
xlat
cld
xchg
addb
xchg
fwait
mov
sub
jne
loope
xchg
stos
pop
jo
stc
xchg
sbb
test
insb
popa
daa
lcall
cwtl
adc
add
dec
cmp
test
test
sub
in
mov
es
imul
jge
sub
mov
mov
js
mov
or
cmp
inc
das
adc
adc
ret
sub
push
cltd
cmp
xchg
into
xchg
movl
test
jno
lock
add
xor
lret
mov
dec
bound
stc
jne
icebp
push
ds
and
repnz
filds
aas
push
lret
daa
sbb
adc
inc
and
cmp
iret
test
cmp
popa
xchg
test
test
jg
lcall
lods
push
fdivs
aam
jge
add
mov
pop
mov
sbb
outsb
js
and
xorl
xor
loope
mov
fwait
or
cmp
std
lret
jb
cmpsl
fwait
sub
jecxz
jg
rcrl
push
aaa
inc
pushf
xorl
mov
dec
dec
sbb
dec
mov
subl
aad
in
cmpsl
pop
subl
adc
fdivs
dec
mov
out
fistpl
inc
loopne
insl
cmpb
mov
and
jg
xor
dec
neg
xlat
aam
movsl
adc
xchg
sbb
movb
cmp
sbb
ja
cmpsl
add
push
mov
xchg
out
jb
insb
ret
xor
mov
push
mov
cwtl
push
out
aad
scas
mov
into
std
cmp
out
jmp
fdivr
fadd
testl
sub
hlt
mov
ret
js
sub
fcoml
mov
xor
lock
jbe,pn
mov
fmull
test
and
sub
add
sbb
sbb
jbe
jb
outsb
mov
add
adcl
dec
dec
ror
add
scas
sub
das
dec
out
dec
test
leave
negb
xor
inc
nop
outsb
push
gs
xor
xchg
mov
fs
pop
bound
insl
shl
data16
mov
cmc
test
and
sub
mov
ret
xchg
ds
je
inc
adc
daa
xchg
pop
push
and
int3
aad
sub
in
test
mov
ror
rcll
or
and
call
clc
test
lock
mov
shl
xor
test
adc
mov
dec
and
mov
sbbb
cvtps2pi
aam
popa
das
xor
xchg
les
push
mov
pop
pop
cwtl
aam
inc
stos
dec
ret
fs
fisubrs
push
mov
divl
push
push
lock
mov
icebp
shll
sbb
pop
jno
in
movsb
movsb
xlat
ss
ret
stos
sub
ret
inc
repnz
mov
jo
pop
ja
push
out
dec
dec
js
or
call
cld
out
jae
aad
push
scas
push
and
or
popl
arpl
dec
pop
aas
sub
lret
in
pusha
adcb
or
mov
sbb
cmp
push
stc
and
aam
je
arpl
stos
ljmp
adc
mov
adc
pop
addb
cmp
adc
ss
push
xor
xlat
xor
pop
pushf
push
scas
loope
arpl
xchg
sbb
enter
int
and
test
xor
test
sbb
out
dec
or
adc
pop
inc
or
cmp
mov
pop
jge
jle
enter
negb
fs
lds
into
adc
ja,pn
sbb
lret
sahf
inc
test
adc
mov
scas
mov
scas
imul
xchg
mov
add
sub
mov
jecxz
mov
fisttps
lahf
or
sub
inc
cmp
pop
pop
lods
sub
hlt
and
inc
orl
push
mov
loope
negb
mov
inc
and
sbb
add
jle
cmpsl
sbb
mov
jno
mov
mov
mov
push
inc
adc
scas
push
mov
lods
mov
lds
cmp
add
xlat
in
pop
xor
cwtl
sbb
stc
mov
movsl
jmp
xchg
aaa
sbb
int3
clc
subb
inc
dec
xlat
sbb
xor
push
sbb
adc
pop
mov
sbb
data16
add
inc
lods
dec
xchg
mov
nop
insl
mov
clc
out
pop
lret
fwait
push
ds
in
test
mov
or
mov
sahf
cmc
push
fs
mov
or
sub
imul
jne
inc
inc
and
gs
fildl
lods
test
pusha
ds
jg
dec
xor
jno
xor
mov
pop
fwait
aas
cmp
push
xor
pop
fdivrs
cltd
in
and
out
and
je
mov
rcll
pop
ret
jp
pop
add
dec
add
inc
sub
push
test
fidivrl
pop
pop
mov
xor
or
inc
cmp
dec
out
and
cmp
scas
negl
leave
inc
cmc
mov
popf
adc
lret
stc
mov
bound
cmp
mov
test
add
and
scas
add
mov
sti
adc
daa
out
lcall
xchg
add
and
iret
enter
inc
xor
cmp
fwait
lret
test
xor
shrl
adc
imul
fdivp
and
push
push
xchg
push
jno
push
pop
data16
divb
rcl
cmpsb
push
shlb
mov
lods
js
ljmp
pop
cs
mov
mov
xor
orl
je
xorb
es
out
adc
jns
cmc
mov
and
xchg
enter
leave
loop
push
les
jae
mov
scas
loope
in
push
in
popl
lahf
mov
insl
out
dec
mov
mov
mov
jmp
lret
push
and
adc
nop
jp
shrl
xchg
mov
dec
sub
push
push
sbb
js
and
out
jmp
inc
in
mov
sbb
add
rcr
cmpsb
xchg
enter
out
and
jecxz
jp
les
std
ss
scas
cwtl
clc
add
xchg
lock
imul
xor
pop
loopne
pop
mov
pop
adc
and
mov
call
sbb
out
movsb
adc
dec
inc
push
and
sarb
sub
mov
cli
mov
dec
push
xor
inc
pop
je
stc
dec
cmp
inc
adc
lods
pop
cmpsl
xchg
inc
jb
push
fists
add
out
mov
jns
xor
nop
mov
orl
bound
adc
out
and
mov
dec
add
out
lods
inc
adc
imul
pop
push
cmp
lahf
push
or
mov
fdivrs
cltd
mov
incb
fadds
adc
call
jp
inc
outsl
mov
dec
jp
pop
arpl
push
out
scas
xchg
addb
cmpsb
into
push
inc
and
or
stc
sub
rol
daa
sbb
push
imul
pop
ror
clc
lock
mov
icebp
or
andb
adc
push
push
je
push
xchg
cld
mov
mov
pop
subb
or
cmpsb
push
data16
incl
imul
aaa
int3
test
xor
adc
lret
out
push
sub
cmp
test
push
pop
mov
cmp
ret
int3
test
xchg
jmp
jns
dec
mov
into
test
mov
add
popl
mov
popf
push
ficoml
mov
dec
mov
mov
push
push
mov
imul
mov
pop
push
adc
or
push
out
and
dec
shr
inc
ret
push
ljmp
lcall
sbb
popf
movsb
or
jmp
push
mov
movsb
xor
jecxz
popa
addr16
mov
mov
pop
or
rorb
sbb
test
add
jmp
out
add
insb
daa
faddl
mov
aam
mov
jae
rorl
jl
mov
insb
or
fnsave
pusha
sub
loop
sahf
dec
jne
sub
jle
and
leave
dec
aad
pop
cmc
or
mov
aam
jge
inc
adc
adc
adc
cli
fcoms
push
inc
push
out
sbb
mov
lret
imulb
lret
je
push
rcrb
cmp
in
inc
fidivrl
cmpsl
push
sbb
fdivrl
stos
sbb
sbb
or
jl
gs
shll
ljmp
fsubs
push
sarb
notl
notl
loop
cmc
cmpsb
rorl
pop
ljmp
test
xor
sbb
pusha
out
mov
fcmovnb
int3
mov
pop
movsl
adc
xchg
cmp
mov
arpl
jge
popf
leave
adc
sub
jnp
pop
les
xor
std
pushf
mov
mov
fdivs
rcrb
in
rol
movsl
inc
add
scas
mov
adc
sub
mov
lret
scas
jae
shl
pop
outsl
pusha
xor
dec
inc
jmp
or
std
out
push
jp
mov
imulb
xor
xor
sbb
notb
mov
movsl
jge
cltd
push
mov
jecxz
repnz
push
xchg
fcmovnb
pop
fucomp
mov
adc
and
test
pop
and
xchg
stc
dec
std
jno
or
stos
add
inc
mov
aam
and
das
imul
pop
mov
sahf
push
jg
js
cmp
xchg
inc
dec
mov
stos
xchg
fucompp
mov
movb
sti
add
jmp
lds
push
test
jecxz
stos
nop
movsl
add
jecxz
sub
enter
jno
in
out
dec
aaa
xchg
jmp
addb
inc
mov
and
mov
ds
push
subl
scas
ljmp
pop
loope
por
inc
dec
cltd
jbe
push
sarl
insl
adc
test
pop
sbb
cmp
repz
iret
push
dec
or
jp
daa
cmp
arpl
outsl
enter
mov
lret
imul
and
inc
imul
xorb
out
jbe
je
lahf
js
subb
xchg
mov
rcrb
pop
mov
mov
sbb
dec
out
shlb
lock
sbb
es
push
in
lock
sbb
iret
decl
fistps
add
outsl
xlat
pusha
nop
adc
adc
and
fs
dec
imul
sub
mov
repz
enter
dec
pop
xchg
push
in
je
dec
pop
les
hlt
jae
fwait
add
outsl
sub
popw
pop
outsb
enter
dec
repz
fdivs
arpl
push
push
adc
mov
xchg
dec
mov
pop
jns
out
daa
or
ss
cmc
ud2
bnd
push
or
loope
inc
cmp
xacquire
xchg
mov
or
das
jp
push
push
fisubrl
insb
sbb
or
lahf
pop
repnz
incb
jne
dec
test
and
cld
pop
xor
push
cli
shlb
addl
lcall
hlt
jbe
daa
jne
sbb
repz
xchg
adc
xchg
jp
popf
or
and
mov
mov
adc
psrld
rcl
xchg
inc
lahf
mov
xchg
roll
pop
mov
pop
sbb
push
inc
cmp
push
add
inc
push
outsl
jns
rclb
mov
mov
sub
sbb
jl
iret
repnz
pop
pop
sbb
jp
scas
lods
or
add
sarl
cmp
and
inc
stos
in
lret
fdivrl
dec
stos
rcrl
insb
cmp
lcall
mov
mov
jl
adc
pop
and
mov
push
popf
push
dec
repz
push
add
adc
in
cmc
mov
insl
mov
ss
out
xor
test
call
fmull
inc
sbb
shll
test
test
sbb
sbb
in
rorb
ret
mov
xchg
das
aaa
out
jg
xor
add
pop
xlat
xchg
not
fisubrl
outsl
inc
and
sbb
sub
sub
push
push
mov
mov
sub
shrb
inc
scas
or
jne
cwtl
cvtdq2ps
or
mov
hlt
out
xchg
or
cwtl
mov
mov
filds
ret
mov
pusha
fwait
add
clc
xchg
or
shlb
xchg
xchg
mov
mov
mov
fimull
bound
and
sub
insb
iret
popa
mul
xchg
dec
jge
jnp
add
popf
mull
pinsrw
scas
js
or
fwait
pop
jns
stc
pop
xchg
call
fcmove
bound
pop
sbb
sub
sub
sbb
and
iret
or
add
scas
and
lods
jae
mov
mov
mov
ja
lds
or
sarb
push
imul
mov
jmp
aad
jecxz
jmp
dec
int3
test
mov
scas
test
or
fadd
cmp
les
call
inc
push
es
mov
lods
lahf
out
lahf
stos
sbb
add
inc
adc
adc
in
mov
mov
mov
sbb
jge
daa
cwtl
test
xor
test
fdivrl
dec
dec
ficoms
cmp
xor
ret
xor
roll
movsl
test
lahf
xlat
ja
xor
popf
fdivs
imul
out
jbe
xchg
ljmp
jecxz
aad
inc
fnstenv
sub
jb
jmp
sbb
popf
stos
mov
xchg
lcall
andb
insl
mov
inc
pop
or
jp
mov
push
or
rcrl
mov
xlat
xor
ficompl
mov
pop
mov
lock
xchg
add
int3
dec
jmp
cs
addr16
dec
lcall
lds
ss
cld
jno
adc
dec
sub
xor
mov
sub
in
ret
in
inc
fcompl
mov
push
or
sub
xor
out
nop
pop
inc
lret
gs
lret
mov
pop
jecxz
loope
movsl
ds
in
sbb
inc
ljmp
xchg
adc
sub
sar
mov
shll
leave
dec
and
inc
sub
and
mov
mov
adc
lock
mov
rcrl
push
mov
call
outsl
sbb
into
xor
sub
adc
inc
in
jns
loop
ljmp
mov
cs
inc
xlat
xor
sbb
jbe
adc
cltd
int3
clc
aas
push
ror
mov
sbb
pop
jmp
dec
jmp
stos
sbbb
add
rcll
pusha
dec
je
push
stc
adc
mov
jne
pushl
xchg
outsl
scas
push
pop
out
ja
aas
xor
aam
mov
lea
roll
xchg
sti
loop
in
loope
jae
mov
sarb
jle
lds
sahf
adc
add
adc
mov
mov
cmpsb
adcb
inc
xchg
sti
imul
add
push
and
xor
cmp
loop
add
movsb
mov
mov
jbe
jae
mov
push
dec
cs
mov
fnstenv
pop
jmp
pop
jle
push
dec
mov
loop
std
xor
cmp
out
push
and
push
mov
mov
xor
fstps
or
sysret
stos
repnz
rcll
clc
add
push
outsl
popa
mov
dec
adc
mov
inc
pop
in
mov
xchg
sbb
adc
popa
bound
pop
and
pop
scas
cmp
pop
bound
sarl
pop
decb
sbb
mov
and
pushf
popf
pop
xchg
enter
test
daa
enter
in
bound
hlt
or
es
or
fiadds
loop
mov
inc
ss
ss
jae
lock
cmp
mov
jnp
insb
push
es
ret
sub
ds
dec
repz
jge
mov
or
dec
call
mov
jmp
sbb
outsl
dec
dec
cmp
pusha
push
mov
aaa
jmp
pop
cld
popf
add
je
mov
sbb
and
xchg
dec
inc
jecxz
add
frstor
pop
push
jg
sub
notb
jo
sub
pop
shlb
jge
adc
ja
mov
and
pusha
stos
ret
push
xchg
int
shr
movsb
add
test
or
daa
pop
mov
mov
test
cmc
sub
mov
loope
adc
pop
scas
and
inc
test
mov
test
fcmovne
and
fnstcw
sub
add
loopne
lea
gs
outsl
dec
dec
daa
call
sub
ss
xchg
dec
addr16
or
pop
addb
inc
adc
lds
xlat
clc
push
lret
cltd
xor
sbb
idivl
mov
test
mov
add
or
lock
inc
cmp
sti
in
rcrl
pop
aam
and
pop
adc
test
pop
mov
xchg
icebp
dec
or
test
mov
pop
les
ret
out
mov
push
mov
mov
pop
iret
inc
out
mov
lds
imul
jge
mov
add
push
xchg
clc
and
xchg
add
add
clc
push
mov
xor
jecxz
mov
mov
mov
jns,pn
hlt
mov
add
ret
in
test
mov
pop
sahf
push
sti
mov
lcall
push
lods
xchg
pushl
pusha
sti
ja
fs
pushf
add
lods
cmp
mov
lock
aad
mov
cmpl
lahf
cltd
fs
int
pop
cmp
in
imul
inc
fdivrs
pop
cmpsl
xchg
orb
cmp
test
mov
in
pop
in
sub
arpl
jecxz
les
xchg
jp
call
xchg
ja
and
sbbb
incl
pop
loopne
cltd
add
xchg
movsl
sub
xchg
dec
aas
mov
mov
sarb
push
enter
add
mov
test
insb
std
sub
fld
out
xor
xchg
ret
pusha
aad
xchg
push
jge
adc
cltd
das
fimuls
pop
inc
or
xchg
mov
sbb
lods
cli
or
les
jecxz
repz
test
mov
jmp
lock
cmpsb
repnz
or
cwtl
and
es
aaa
mov
jmp
fbld
mov
lods
mov
mov
dec
ljmp
das
fdivrl
xchg
movsl
pop
pop
fisttps
and
std
mov
xchg
jg
data16
arpl
std
in
jno
pop
xchg
jb
hlt
es
cwtl
stc
jge
lds
sbb
repz
jmp
inc
inc
xor
stc
xchg
mov
pop
sub
cmc
inc
inc
std
addr16
stos
push
and
jb
test
or
jae
xchg
fs
popa
aas
adc
jl
xor
or
push
lock
xchg
in
xlat
inc
mov
sbb
cmp
sarb
adc
cmp
repz
cmp
inc
mov
mov
and
mov
adc
dec
nop
mov
or
pop
mov
ss
pop
lds
mov
addl
sbb
pusha
xchg
mov
pop
pusha
fcmovnb
lods
les
mov
jno
stos
in
arpl
shrl
out
faddl
pop
jno
adc
push
out
rcrl
mov
mov
cli
imul
mov
inc
xor
mov
in
and
incl
out
loop
insl
jecxz
jp
movsl
aaa
mov
test
dec
fs
loopne
inc
xor
push
movsb
xchg
call
add
std
mov
jns
or
dec
sub
addr16
pusha
repnz
mov
push
pusha
lods
scas
fildll
mov
ljmp
test
sub
pop
loope
xchg
jnp
out
cmp
scas
mov
push
ss
push
cltd
mov
shlb
lods
insl
outsb
loopne
adc
push
push
push
ret
pushf
imul
ss
push
push
add
imull
add
push
or
enter
cmp
jae
lret
sbb
jg
inc
lahf
leave
add
ljmp
adc
je
or
arpl
lea
inc
pop
mov
sahf
ja
jne
add
rcrb
xchg
jl
clc
sub
xchg
sti
xchg
jg
jp
notb
stos
mov
enter
ja
dec
jb
jl
data16
cmpsb
jge
push
hlt
pop
sub
mov
insb
mov
pop
addl
sbb
xor
data16
mov
jge
push
sub
sti
xlat
mov
mov
adc
addl
or
mov
inc
pop
jns
testl
cmp
stos
adc
fwait
inc
mov
push
jo
fstl
inc
iret
mov
or
jge
pop
inc
ds
fwait
sbb
jg
pop
add
or
dec
shl
inc
push
cmp
test
cmp
cmp
fists
mov
cmp
sahf
jecxz
std
dec
xor
jp
testb
test
adc
push
mov
adc
mov
and
test
cmp
inc
stos
test
sub
fildll
mov
push
dec
roll
mov
jge
mov
mov
sbb
pushf
lods
fimuls
mov
adc
ds
xchg
clc
fs
push
lock
pop
add
movsl
lods
outsb
ret
icebp
add
sbb
add
test
sub
fmuls
aas
dec
repz
out
lea
pop
or
gs
cs
xor
xchg
pop
aam
sbb
inc
aas
cmc
mov
in
sbb
fcmovnbe
mov
mov
inc
icebp
inc
jns
add
mov
mov
rcrb
jb
mov
sub
pop
add
gs
sahf
jge
jg
jmp
leave
sub
xchg
xor
and
push
mov
add
cmc
int
cmc
push
pushw
jb
inc
xchg
push
xor
add
pop
or
repnz
mov
push
lds
xchg
pop
lds
rcrl
insl
repz
xor
in
xchg
cmp
test
das
inc
arpl
sub
inc
cld
movsb
mov
inc
ss
clc
pop
jmp
ja
cmp
jl
jge
js
mov
adc
mov
lods
sub
pop
aam
in
rcl
negb
inc
fistps
rol
cmpsl
push
fstp
mov
mov
bound
in
add
inc
js
testl
sti
adc
scas
jnp
inc
ret
rcrb
icebp
xor
adc
icebp
jns
daa
inc
xchg
xchg
and
imul
xchg
sbb
repnz
and
push
xor
mov
push
mov
nopw
daa
jge
push
imul
dec
inc
mov
imul
inc
enter
xchg
div
mov
pop
xchg
mov
push
arpl
popf
jp
sar
mov
mov
xchg
cmp
pop
mov
xchg
gs
adc
mov
xor
xor
iret
fldcw
mov
xchg
les
test
push
stos
scas
jae
dec
lock
adc
push
cmp
cwtl
mov
jge
sbb
clc
lds
aas
loop
add
inc
fs
movsl
pop
ss
cmp
lret
or
xor
movsl
clc
mov
add
inc
je
or
in
sarb
jne
lock
into
or
out
mov
inc
add
mov
int
inc
icebp
int3
aad
fs
ss
xchg
cmc
iret
fisubrs
mov
xchg
jae
data16
int3
call
cmp
mov
sbb
jecxz
mov
stos
mov
mov
mov
sbb
pop
ret
aaa
xchg
fwait
mov
jmp
mov
lret
and
adc
insb
add
scas
jne
pop
aam
aaa
xchg
push
mov
push
add
xchg
cmp
cs
fcoms
cs
int3
and
lea
inc
xchg
mov
fildll
jle
in
mov
push
roll
cltd
lret
dec
or
jnp
nop
jmp
pushf
mov
xchg
jg
sub
sub
jmp
mov
mov
je
inc
icebp
lods
fimuls
cmpsl
push
aam
dec
inc
push
cmc
lock
fbld
movsl
lods
and
adc
ucomiss
xchg
fistpll
std
idiv
nop
gs
enter
pop
push
addl
jmp
fildl
ret
hlt
fldcw
shrl
sbbb
inc
mov
scas
sar
adc
dec
or
push
outsl
mov
ficoms
xchg
fsubrl
push
cli
hlt
jecxz
push
enter
into
ret
int3
mov
int
dec
cmpsl
pusha
shrl
std
push
pop
out
cmp
jae
sub
cmp
or
lahf
arpl
popa
loopne
jb
mov
fsts
out
dec
inc
or
cltd
adc
inc
fsts
push
gs
sbb
sbb
mov
push
das
mov
fsub
sbb
sbb
shrb
and
lret
fwait
push
push
lods
pop
mov
dec
pop
inc
fnstsw
inc
jle
loop
insb
xor
sti
add
outsb
xchg
sbb
call
sub
aas
xor
mov
cltd
leave
insb
jbe,pt
mov
insb
add
hlt
adc
gs
icebp
sbb
adc
and
lods
or
or
bound
outsl
or
mov
push
push
cmp
xchg
js
lods
adc
jo
mov
sub
outsb
adc
fwait
lods
pop
mov
mov
mov
mov
or
or
mov
test
inc
popf
sbb
cltd
pop
ficompl
or
push
cmp
in
or
jnp
popw
gs
out
out
xchg
jg
add
mov
bound
aas
notl
aam
mov
mov
imul
cwtl
in
inc
push
jb
mov
xchg
xor
cs
test
sarl
push
bound
out
inc
dec
xlat
lock
pop
add
sub
les
pop
cmp
pop
sub
lock
test
int
push
loop
fstpt
cmp
rorl
or
in
gs
jae
fistps
push
push
cmpsl
in
stc
mov
les
arpl
nop
fidivs
fldt
or
cmp
mov
pop
cmc
add
ljmp
xchg
fistpl
pmulhw
shrl
arpl
pushf
in
mov
fildll
leave
gs
decb
push
out
cmp
pop
push
mov
or
push
dec
adc
cs
out
adc
movsb
adc
sub
inc
sub
jne
fcompl
jnp
shll
and
or
popf
dec
ret
ret
push
jae
jns
cmp
mov
cli
out
ret
shrl
mov
push
or
push
xchg
lahf
subl
sarb
lods
push
movsb
scas
jb
add
cmp
outsl
pop
leave
test
repnz
popa
xchg
in
repz
cmp
mov
pop
push
xor
add
mov
pop
xor
xor
cltd
pop
push
inc
inc
add
es
jns
jge
mov
xchg
pop
insl
daa
stos
pop
sub
inc
and
mov
lds
xchg
out
push
mov
inc
popf
xor
lods
sbb
fnstenv
in
loopne
dec
mov
cmp
mov
cmpsl
xchg
xchg
inc
jge
dec
adc
sub
pop
repz
jl
stc
cmp
shrl
push
xchg
sub
mov
loop
popa
inc
lods
jne
dec
jb
rcl
or
ret
repnz
into
cmp
lds
sbb
sbb
popa
mov
or
in
cmpsl
int3
shlb
mov
dec
xchg
or
imul
fs
aam
insl
fsubrl
mov
stc
pushf
fisttps
imul
rorl
decl
orb
mov
add
inc
adc
push
lahf
mov
adc
shlb
jle
sbb
xor
adc
pop
das
push
aam
jp
jecxz
ljmp
js
outsl
aam
mov
fdivrs
jno
bnd
jmp
jle
and
call
ja
stc
sahf
aam
lock
pusha
fsubrl
xor
into
lock
popf
repnz
or
jne
push
test
mov
dec
xor
xor
cmp
repz
mov
or
dec
mov
and
jg
es
sub
inc
cmp
nop
push
leave
mov
and
jns
or
lea
push
rcll
push
stc
in
push
xor
push
xorb
int3
pop
and
jns
stc
popf
or
fistpl
in
sbb
adc
jns
insl
cmp
scas
add
or
stos
adc
push
cvtps2pi
sbb
daa
push
lods
cmp
and
jno
bound
push
lods
stos
shr
mov
lahf
jmp
lret
mov
adc
stos
ss
popa
insl
or
iret
movsl
cmp
inc
in
jnp
xor
fildll
and
arpl
inc
js
pop
inc
dec
add
or
pop
repz
dec
cmp
and
xchg
mov
mov
outsl
sbb
sub
or
in
xchg
jae
movsl
push
mov
mov
js
sbb
inc
stos
pop
hlt
lahf
lcall
test
sub
sahf
lock
inc
arpl
test
xchg
pop
dec
sahf
scas
dec
sbbl
es
gs
bound
imul
push
mov
adc
sub
enter
pusha
pop
ljmp
mov
fnsave
cli
inc
and
cwtl
ret
push
pop
dec
fidivrl
scas
inc
mov
cltd
clc
xchg
pop
inc
sub
jo
imull
addb
cli
popa
fbld
es
ss
xor
push
inc
cwtl
inc
outsb
inc
std
add
aaa
movsb
stos
xor
lods
jmp
fildll
cmp
jecxz
push
rorb
jecxz
add
lcall
or
dec
jle
adc
lods
inc
add
inc
jmp
push
cmc
pop
jbe
out
mov
enter
push
cmp
lret
test
cs
movsb
mov
jle
push
in
pushf
mov
rcll
adc
adc
dec
jmp
add
xlat
ret
add
mull
daa
int3
push
mov
es
jno
lahf
xchg
or
dec
ds
pop
pop
lds
pop
jns
imul
stc
cmp
adc
shufps
mov
aad
pop
lret
push
mov
jg
add
mov
jmp
std
xlat
inc
fmulp
int
xchg
jne
ret
and
ljmp
rcrl
lret
push
arpl
mov
daa
lahf
repnz
movsb
adc
mov
movsl
jl
jl
inc
or
loopne
insb
xor
fistps
lds
jl
insb
adc
ret
cmp
rorl
in
lods
dec
lods
adcb
addb
test
or
jg
in
mov
loop
xchg
inc
mov
push
movsw
mov
or
push
enter
mov
cli
out
mov
xchg
push
cmp
cmp
imul
in
imul
adc
adc
sub
fistpl
shl
rol
out
out
je
mov
pop
cmp
sbb
insl
out
sbb
push
je
loop
adc
pop
out
or
imul
fidivs
das
loope
inc
loop
loopne
into
mov
aaa
or
lahf
frstor
and
and
lock
push
das
in
xchg
inc
pop
cs
inc
ss
lcall
and
add
cmpb
gs
dec
cmp
pop
cmp
xor
iret
aam
loop
pop
inc
lahf
lods
inc
mov
pop
cld
push
jbe
popl
push
mov
sbb
sbb
arpl
iret
xchg
jecxz
lcall
mov
xor
xchg
dec
adc
sbb
xor
outsl
cltd
add
insl
sub
pop
dec
ss
imul
into
or
inc
push
sub
in
inc
ret
fwait
orl
mov
cmc
fidivs
pop
inc
pusha
xchg
jle
pop
pop
dec
push
in
xchg
mov
aaa
ja
lret
adc
aam
mov
or
push
push
add
out
cmp
sub
cmp
and
loopne
rcrl
cs
arpl
jno
mov
cmp
dec
jp
fnstenv
into
sub
cmp
and
data16
xor
mov
movsb
stc
inc
cmpsl
gs
inc
xor
ja
out
mov
xor
xor
mov
or
leave
mov
inc
push
mov
add
stc
sub
inc
xchg
xchg
test
jle
stos
rcr
pop
lods
js
sbb
mov
dec
jle
jmp
jns
cmpl
inc
push
cmp
jle
push
imul
dec
and
test
push
inc
pop
pop
push
insb
mov
push
cmp
adc
jp
xor
cld
rol
bound
fcoml
xor
cs
fs
shlb
xor
ret
pop
out
push
in
cli
cmp
scas
test
xchg
cld
outsb
add
jg
call
lret
cld
sub
int3
inc
mov
inc
mov
or
mov
pop
nop
sbb
psubsb
dec
xor
not
mov
je
sbb
out
or
lea
cmpb
mov
inc
jnp
xchg
pop
mov
clc
fnsave
xchg
cmpsb
inc
jns
push
imul
lcall
scas
jg
ljmp
loopne
leave
pop
sbb
xchg
jo
movsl
cmp
js
add
addl
lret
sti
pop
mov
dec
xchg
and
test
and
test
ret
sbbb
xchg
xchg
inc
mov
pushf
movsb
pop
sar
add
lds
pop
insl
addb
aaa
add
out
lods
mov
xchg
inc
xor
mov
cmp
mov
out
mov
jo
pop
mov
hlt
lock
or
sub
or
repz
and
gs
fisubrl
jg
fbstp
dec
xchg
mov
aaa
ja
dec
sbb
xchg
sub
dec
sub
jp
hlt
adc
int3
ss
cmp
inc
cwtl
cmpsl
aam
mov
cltd
in
mov
pop
stos
push
scas
aas
mov
andl
push
int3
push
sbb
imul
stc
xchg
sub
jp
pop
nop
mov
pop
inc
push
sub
call
imul
sub
push
dec
mov
push
xlat
insl
sti
jne
shrb
add
dec
insb
sti
dec
cmp
movsb
ja,pt
adc
xor
add
mov
sub
sub
ret
fistl
add
mov
mov
divb
pop
sub
lcall
push
mov
cmpsl
pop
xchg
and
pop
aad
sar
lods
xchg
push
push
mov
sub
add
push
pop
fstl
jg
lock
shlb
fcomi
xchg
or
aaa
cltd
aad
dec
dec
cs
aaa
lock
aaa
stos
push
lods
push
pop
cmpsb
andl
push
aad
mov
daa
repnz
xor
scas
pop
or
pop
xor
stos
sub
fcmovne
sti
aad
sbb
jae
jns
or
out
mov
int
and
hlt
push
dec
lret
sub
push
push
enter
inc
jecxz
leave
mov
xchg
mov
out
cmc
mov
cli
mov
adc
inc
add
loopne
pushf
cmp
jnp
aam
enter
repz
std
je
loope
mov
movsl
out
call
pushl
and
mov
adc
or
ljmp
daa
mov
sbb
arpl
inc
xchg
sbb
mov
or
test
jbe,pt
mov
es
jmp
inc
fdivrs
inc
jno
clc
hlt
notb
test
cmpsb
fsubr
mov
lods
popf
and
lock
andl
test
dec
inc
pop
aam
loop
add
jb
aaa
sbb
mov
sub
push
jl
scas
mov
or
test
sahf
pop
cmpsb
orl
adc
int
mov
push
add
pop
fs
jne
mov
filds
orl
leave
mov
add
mov
lods
in
call
add
sbb
lock
mov
sbb
gs
pusha
daa
mov
js
adc
add
push
mov
fisubs
pushf
pusha
mov
jnp
jne
shr
cmp
inc
sbb
loop
and
in
dec
jg
mov
movsl
or
aas
sub
push
or
adc
mov
mov
push
mov
and
gs
xlat
jo
mov
mov
inc
sbb
and
pop
cmp
adc
inc
out
rorb
mov
sbb
jno
adc
cwtl
mov
ret
mov
lods
fidivl
and
xchg
push
psubw
jp
inc
int3
pop
ficompl
sub
stc
pop
fisubs
push
xor
mov
test
in
cmp
jp
mov
movsb
and
add
jns
sarl
mov
sub
cs
jl
cltd
cmp
or
repnz
test
and
ds
mov
or
fldl
adc
sbb
pop
xor
cmp
mov
cld
out
mov
imul
pop
data16
sub
imul
push
mov
inc
lods
aas
xor
xchg
ljmp
mov
cltd
inc
jecxz
and
lret
cmp
test
push
and
sub
jmp
sbb
cwtl
mul
mov
sbb
push
jg
mov
sub
lret
loope
fwait
hlt
aam
addr16
fnstenv
scas
xlat
mov
xor
push
jle
adc
pop
scas
or
pop
inc
xlat
sub
es
cmpb
pop
adcl
add
xor
repz
mov
jp
outsb
in
std
sbb
push
loopne
mov
rolb
repnz
pop
push
mov
mov
pcmpgtd
push
jge
ret
push
das
mov
xrelease
mov
scas
ficompl
cwtl
ljmp
call
fcoms
ds
push
fmul
mov
jmp
dec
sbb
inc
cmc
pop
xchg
negb
inc
sti
dec
inc
loop
mov
icebp
mov
push
or
shrb
aad
xlat
loop
add
xchg
or
xor
mov
lret
pop
into
fs
cld
lcall
lcall
test
push
adc
xchg
aad
mov
sahf
inc
xor
sub
das
ja
push
mov
aam
jmp
cld
xchg
test
lret
mov
push
add
push
idivb
fsubr
out
sar
jp
pop
fidivs
lock
movsl
mov
sbb
cs
sbb
test
enter
ds
les
add
ds
das
push
jae
clc
in
addb
shl
cmp
mov
push
cmpsl
int3
jnp
insb
in
mov
stos
or
out
sbb
adc
subb
in
mov
iret
mov
push
push
jo
push
jb
call
pop
mov
jo
mov
movsl
mov
insb
dec
inc
ss
hlt
nop
sbb
pop
aas
inc
ror
jae
scas
jmp
in
das
daa
sbb
idivl
outsb
lret
dec
inc
xacquire
lock
rol
pop
push
je
mov
popa
lods
jg
cmpsb
pop
pop
lods
push
mov
pop
cmp
je
inc
shrl
outsb
sub
ds
jge
xchg
jp
jae
jmp
mov
sub
ja
dec
dec
mov
cmpsl
cmp
ret
stos
push
test
pop
popa
pop
movsl
inc
jmp
xor
sub
cwtl
mov
cli
shrb
jl
lea
jmp
push
and
and
xor
jle
xor
push
push
test
mov
das
sbb
xor
push
or
pop
stos
fimuls
lea
push
lret
jb
in
or
ds
in
imul
int3
repz
test
data16
daa
dec
pop
loop
lcall
mov
sahf
cmc
pop
push
xchg
jnp
mov
sub
nop
rcrb
sarl
imul
je
in
lea
nop
cli
jmp
jo
pop
push
stc
inc
cmp
movsb
mov
mov
pop
mov
out
adc
mov
sub
or
xlat
mov
test
adc
jo
shll
loop
aad
loop
stc
sbb
loope
inc
jne
pop
int3
pop
sub
icebp
lahf
xor
push
fsubrl
loopne
loope
mov
xor
fisubrl
cli
out
test
lods
aam
jae
inc
mov
fistl
push
sahf
aaa
adc
cld
adc
add
arpl
adc
lret
inc
ljmp
insl
jbe
cmp
xchg
and
divb
call
jno
or
pop
in
cwtl
xchg
sti
andb
jno
or
lds
jno
mov
enter
js
stos
dec
enter
aad
pmovmskb
cwtl
test
push
sbb
clc
push
popa
ja
stc
in
dec
adc
jno
sbb
mov
lahf
mov
cwtl
in
int
ss
push
sti
cwtl
pop
mov
cmp
bound
push
arpl
scas
xchg
jo
ds
add
ljmp
rcrb
pop
adc
lods
cmp
adc
subl
adc
pop
push
fwait
xor
stos
ss
mov
lahf
mov
popa
mov
push
cmp
push
divb
xor
and
xor
mov
ja
cmpl
aad
loopne
cli
scas
lret
xchg
hlt
dec
sbb
dec
mov
push
xchg
mov
test
adc
mov
loope
xchg
pop
int
or
fisubrl
or
sar
sahf
faddl
paddsw
scas
mov
sub
punpcklwd
jmp
cmpsl
jns
out
rol
cmp
sub
sbbl
jg
js
fcmovu
mov
dec
mov
push
jb
push
dec
mov
cltd
sbb
inc
shlb
leave
add
dec
push
adc
or
jl
stc
adc
push
rolb
sbb
mov
sbb
jno
mov
push
loop
fidivl
andl
sbb
xor
mov
xor
inc
push
shlb
xchg
call
jno
mov
js
push
pop
mov
cmp
jecxz
sbb
cmp
and
xor
idivl
inc
cltd
cmc
jae
faddl
and
stc
mov
jp
mov
adc
es
test
xchg
pop
push
push
movsb
xchg
inc
xchg
scas
and
jnp
call
mov
push
out
inc
in
ror
out
jb
mov
cltd
shlb
add
sub
call
mov
aam
mov
icebp
mov
addr16
adc
lods
movsb
sbb
cmp
dec
mov
cmpsl
scas
fwait
or
add
lea
cmp
ret
inc
push
mov
lret
xchg
aad
iret
jbe
lcall
lcall
call
in
loopne
xlat
cs
ljmp
xchg
fstps
test
adc
fimuls
es
shlb
fwait
cmpsl
outsb
xor
fcmovnbe
mov
mov
decb
or
push
daa
nop
dec
je
and
ds
popa
pop
sub
in
push
aas
mov
stos
scas
pop
xor
add
repnz
hlt
pop
lcall
pusha
mov
lock
push
loop
je
mov
mov
sbb
loope
clc
xor
lea
xchg
mov
add
fprem
push
xor
ret
imul
mov
mov
add
add
lds
test
and
sub
test
shrb
mov
cld
cmpsl
push
jns
dec
mov
call
imulb
cmc
dec
daa
mov
xlat
add
movsl
lcall
inc
ret
xchg
mov
into
loopne
jbe
rcrl
push
pop
ret
cmp
xor
or
xor
fnstsw
push
mov
out
sub
mov
mov
in
cmp
fldenv
ret
jp
sbb
push
mov
call
and
aam
sbb
push
mov
and
jbe
mov
push
ret
add
fistpl
popf
xchg
pushl
fnstenv
in
jo
out
mov
inc
lret
and
mov
jns
ret
mov
mov
mov
dec
mov
fnsave
jmp
mov
pop
imul
lods
int3
mov
out
jmp
jecxz
loop
enter
clc
mov
repz
fs
pop
sarb
sbbb
and
dec
pop
scas
and
aas
jecxz
pop
mov
jns
pop
xlat
mov
and
sarl
inc
adc
add
shl
xchg
add
cmpl
sbb
push
dec
fucomip
popf
or
popa
sub
iret
pop
or
jecxz
sub
or
adc
xor
pop
jns
inc
pop
subl
cmp
in
sti
mov
or
and
lret
test
int
mov
repz
ficomps
mov
sub
je
orl
jle
jmp
loope
repnz
aaa
cmpsb
xor
dec
out
jl
cs
xchg
or
shll
xor
int3
icebp
ret
insb
or
sub
adc
stos
movsl
imull
lea
jg
fcompl
outsl
ret
icebp
je
clc
lcall
bnd
aaa
fcoml
iret
mov
mov
jle
dec
jg
pushfw
test
push
xchg
mov
cs
cmp
xor
cwtl
int
imul
xchg
cmpsl
push
xchg
xor
adc
cmp
fs
cs
sbb
int
pusha
mov
xor
iret
push
ret
xlat
iret
xchg
mov
es
and
daa
test
push
scas
xor
jl
xor
mov
cmp
xchg
data16
lea
pop
orb
fidivrl
pusha
lea
jle
mov
sub
add
mov
ret
cld
xchg
call
inc
repz
pop
xchg
cli
aad
lret
pop
aas
cs
out
call
mov
adc
testl
shll
cmp
push
lcall
sbb
xchg
adc
jns
add
lods
int3
sarb
xor
or
mov
or
mov
out
mov
cmp
inc
add
sbb
cmpsb
dec
sbb
sahf
cli
shl
shll
inc
leave
ljmp
jne
out
incb
clc
add
xor
sbb
mov
mov
std
iret
mov
test
bound
out
faddl
mov
cld
subb
aad
xor
or
jbe
push
aad
outsb
pop
fdiv
jne
xor
insl
mov
aam
int
hlt
push
dec
mov
push
leave
sub
sbb
scas
mov
lods
je
ret
xchg
adc
pop
sbb
sub
shlb
jmp
lahf
sar
or
add
cmpsb
xchg
push
fidivrs
jmp
sub
mov
cmp
xor
sbb
inc
sbb
xchg
jp
in
cmovle
or
stos
push
mov
push
aaa
dec
dec
pop
cmp
and
xchg
adc
leave
xlat
dec
cld
push
sbb
repz
dec
or
push
cmp
imul
sub
insl
mov
mov
sbb
mov
pop
stc
push
ss
xor
js
sub
pusha
in
out
xchg
std
mov
xchg
sub
shll
push
sahf
pop
popa
fbstp
xchg
lret
adc
lock
in
rcl
inc
push
cmc
daa
add
inc
js
mov
test
sub
and
dec
cli
nop
je
pop
sbb
inc
cli
jmp
cmp
into
dec
push
sub
cwtl
js
bound
incb
jns
in
out
outsl
int3
pop
jl
dec
cmpsl
sbb
sub
jecxz
popa
mov
fwait
leave
push
sbb
pop
pop
insl
jle
dec
insb
iret
or
leave
push
push
sahf
inc
sahf
lcall
dec
sbb
lods
cld
imul
lods
jl
mov
lahf
mov
ss
inc
stc
push
imul
cltd
push
mov
pop
repz
out
pop
aam
mov
mov
adc
dec
pop
testl
loopne
or
push
or
dec
and
push
cltd
pop
or
mov
dec
add
xchg
lret
dec
mov
rcrb
adc
clc
add
ret
int
jmp
cmp
dec
movsl
fbstp
jb
cwtl
or
adc
mov
dec
jns
test
cmpsb
mov
scas
add
cs
xchg
pop
lods
lods
adc
jnp
fsts
xchg
inc
daa
xchg
and
push
mov
xchg
ds
sub
ja
es
cmc
sub
imul
ss
aad
in
push
pop
push
mov
test
js
mov
sub
dec
or
fsubrs
xchg
xchg
sub
jne
mov
sub
xor
add
xor
or
loopne
dec
mov
inc
sub
mov
dec
mov
out
cs
sub
inc
push
fs
fsubs
hlt
push
mov
popa
push
lcall
test
dec
pop
outsb
cwtl
and
xor
fs
fiaddl
shrl
dec
movsb
mov
cmp
push
push
mov
pop
loopne
test
adc
sub
mov
push
cmpsl
rorl
rcrb
mov
enter
cmc
int
popf
ja
repz
roll
loopne
repz
jo
cmp
rorb
out
push
fmuls
incl
pop
out
jns
add
mov
fisubl
andb
push
xchg
cs
ss
inc
cs
xor
cmc
ljmp
xor
icebp
mov
rcr
jmp
icebp
cmp
fdivl
pop
jl
jg
xchg
lds
push
pop
mov
daa
mov
aas
sub
sub
push
mov
push
loope
mov
or
jne
not
into
repz
je
fmull
jns
jg
repnz
inc
add
in
sub
dec
inc
xor
in
adc
adc
or
xor
jecxz
pop
jno
mov
cmpsl
mov
sbbl
xchg
jb
aas
or
sub
adc
push
fs
add
std
mul
mov
xchg
dec
cld
mov
push
movsl
jl
das
insb
pushf
push
pop
ljmp
pop
dec
add
js
jo
sbb
sub
sbbl
push
es
xchg
bound
mov
cmpsl
or
xor
cs
gs
add
in
jno
dec
sub
mov
insl
add
dec
jne
sbb
lea
pop
adc
lcall
xchg
dec
or
notb
xchg
idivl
ret
xor
mov
cmpsl
repz
cs
cltd
mov
or
mov
jnp
andl
sahf
mov
stos
xchg
jp
sbb
pusha
adc
lahf
mov
loopne
mov
mov
mov
xor
lahf
enter
aad
adc
or
add
sub
adc
call
imul
or
out
xchg
xor
and
jecxz
addr16
add
inc
or
pop
imul
jnp
fcomps
adc
aaa
push
in
testb
popa
jl
enter
add
data16
test
sbb
lcall
xor
sbb
lds
sub
fisubs
push
cld
imul
push
lds
xor
mov
pop
cmp
ja
and
jmp
ficoms
decl
sub
mov
fdivrs
sbb
sub
sub
ret
fbld
pop
clc
fdivr
adc
imul
mov
add
jl
jo
push
push
mov
jno
stos
mov
pushf
xchg
dec
xchg
mov
or
outsb
pop
inc
ss
push
sub
aas
inc
popa
adc
pop
push
stos
xchg
cmp
adc
aad
push
sub
or
andl
ss
xchg
imul
push
pop
lret
or
add
out
push
lock
pop
fs
mov
fsubrl
or
inc
jmp
stos
mov
sub
cli
fmulp
sub
call
cs
inc
ss
mov
xor
sbb
cmp
lcall
outsl
jecxz
xchg
fildl
js
mov
enter
movsb
adc
dec
xor
addb
in
mov
cmpsb
pop
mov
inc
mov
adc
outsb
aaa
movsb
ss
dec
pop
sub
test
dec
test
pop
mov
out
or
cmpsb
pop
or
imul
pop
pop
out
fbld
lret
mov
insb
jbe
jecxz
fwait
lock
adc
jnp
cli
sub
es
fidivs
mov
push
xor
cmp
and
or
testl
cmp
push
mov
pop
insb
pop
jmp
out
lret
test
icebp
addr16
jecxz
mov
cltd
sbb
fldl
ds
sbb
or
dec
add
inc
cmp
out
movq
addr16
fwait
cmp
jl
add
fs
nop
adc
mov
and
leave
jmp
add
sarb
inc
adcb
xor
adc
orb
push
mov
int
and
lcall
lods
xor
push
lods
and
push
out
pop
adc
sarb
xchg
xlat
subb
or
shrb
xor
sbb
mov
xchg
jmp
subb
adc
xorb
and
push
je
add
dec
ja
or
repnz
and
stos
pop
dec
fcompl
dec
call
push
sbb
lds
push
icebp
into
mov
ss
dec
aam
fiadds
jge
inc
mov
dec
ja
icebp
aad
icebp
je
insl
or
xlat
sbb
mov
adc
or
and
and
repnz
xchg
sbbl
and
xchg
aad
jnp
lcall
sbb
sbb
lods
aam
int
adc
add
mov
xor
cs
mov
lods
sub
inc
fmull
jecxz
sbb
jb
daa
cs
cmc
andb
mov
inc
sub
push
popa
sbb
repz
lahf
in
int
cld
xor
push
fs
ficomps
repz
and
pop
aam
cmp
push
out
jbe
or
pmulhw
loop
adc
xorl
and
adc
scas
es
pop
lret
mov
addl
push
mov
scas
jne
push
and
xchg
ds
sub
les
jbe
add
aas
cwtl
dec
sub
cmpsb
or
adc
mov
scas
mov
push
movsl
mov
pop
pop
push
jbe
je
xor
sbb
rcrl
hlt
cli
mov
mov
push
cmc
mov
scas
test
adc
ficompl
insl
add
aaa
and
xchg
stc
sbb
vpcmpeqb
ds
jge
sub
popf
xchg
push
jge
das
js
xchg
test
lahf
xlat
popf
fldz
xchg
incl
pop
movsl
jmp
cmp
push
mov
sbbl
ret
or
xchg
pop
sbbb
xchg
cltd
mov
test
je
imulb
pop
push
push
imul
out
ja
xchg
test
sub
lds
cmp
jecxz
push
or
daa
sub
outsb
je
cmp
add
sub
jmp
and
shlb
dec
sbb
mov
push
inc
pusha
out
mov
mov
int3
les
cld
or
push
xchg
xchg
pop
aas
movsl
jp
dec
mov
push
mov
lret
lahf
cmp
mov
jle
inc
jl
notl
push
inc
dec
shll
out
js
inc
movsb
loop
loope
lcall
sbb
lahf
mov
pop
jge
push
inc
or
jb
sbb
inc
xor
loop
fdivrs
rcrl
leave
shrb
sbb
fwait
xchg
out
push
testb
jne
cmp
xchg
inc
push
sarl
test
fucomp
lods
mov
pop
enter
add
stc
push
push
cmp
fwait
leave
test
push
mov
jle
cmp
and
push
lret
cwtl
dec
ret
mov
fsubrs
or
sbb
xlat
lahf
dec
rorl
mov
xchg
enter
mov
pusha
gs
pop
cmp
stos
stos
xchg
fidivrs
inc
sub
lret
mov
cld
orb
cmp
rolb
xchg
mov
clc
nop
xchg
lret
dec
xchg
cmp
or
mov
lods
xor
int
lret
out
outsb
xchg
mov
sbb
out
sbb
data16
faddl
out
dec
or
lcall
call
bound
sahf
dec
ss
test
stc
pop
inc
aas
cld
mov
test
inc
out
inc
push
int3
add
sub
in
mov
insb
sbb
jecxz
xchg
mov
ret
out
mov
mov
xchg
loope
cld
std
shlb
scas
push
cmp
cmp
pop
loop
roll
jmp
frstor
pop
mov
push
andb
cltd
aas
out
and
insb
into
pop
int3
enter
pop
insb
sub
roll
add
dec
mov
inc
pusha
mov
pushf
inc
cli
subb
fs
xor
push
adc
mov
dec
scas
xor
sub
xchg
mov
gs
lds
mov
inc
cli
xchg
ljmp
jae
sub
jmp
ljmp
push
and
movl
in
aam
xlat
or
mov
pop
xlat
sub
fcomip
in
imul
push
and
jge
add
test
mov
cld
inc
xchg
cmp
mov
mov
or
addr16
mov
out
cld
cli
sbb
or
mov
dec
jmp
inc
scas
mov
into
and
js
fsubs
imul
and
xchg
call
xchg
mov
adcb
loop
mov
rcl
inc
dec
movsb
movsl
jne
test
push
negb
divb
repnz
mov
or
sbb
and
sub
mov
add
out
cmp
mov
lcall
or
mov
mov
pop
push
mov
and
jge
mov
adc
rcrb
sbb
popf
xor
cmp
daa
push
fwait
sbb
mov
lea
xchg
test
or
inc
es
mov
jo
cli
aaa
adc
mov
mov
cmpsl
xor
mov
xor
mov
cwtd
mov
xchg
inc
insb
inc
hlt
aas
cmp
jnp
mull
pop
in
xchg
clc
pusha
mov
imul
jg
xlat
inc
add
and
cli
xchg
pop
or
ret
cmpsl
mov
shl
fildl
push
and
test
mov
loopne
lock
push
subl
movsl
outsb
lods
cltd
outsb
pop
sub
push
pushf
xchg
loop
dec
lret
lea
push
fs
lods
stos
or
pop
fisubl
dec
daa
xchg
movsl
push
pushf
ds
movsb
push
inc
les
jle
fcos
cmp
ljmp
lea
mov
mov
dec
mov
adc
sub
cmp
mov
in
xlat
cmp
mov
loop
push
repz
add
mov
inc
movsl
in
pop
pop
enter
mov
popf
inc
cmpsb
lret
bound
mov
cmp
mov
push
push
ljmp
inc
mov
jp
jmp
xchg
jp
mov
insb
mov
adc
adc
add
mov
ret
gs
aas
mov
aas
push
in
popf
lret
add
xor
shlb
rclb
in
jne
push
ficoml
lock
pushf
and
jnp
ljmp
xchg
xchg
icebp
std
inc
lcall
test
sbb
mov
test
cmp
test
data16
test
movsb
gs
add
pop
movsl
lds
pop
xlat
xor
mov
mov
inc
inc
sarl
scas
arpl
xchg
push
or
stc
int3
adcl
sbb
dec
jns
out
adc
les
push
adc
arpl
cs
mov
loopne
lds
addb
lret
faddl
mov
mov
and
lds
sbb
cmc
pushf
and
jne
sbb
es
push
push
and
mov
cmpsb
mov
or
add
xchg
mov
mov
sub
add
and
fisttpl
cmpsl
ret
imul
aam
push
sbb
faddl
dec
pop
mov
test
xlat
jg
dec
ja
insb
sbb
inc
cwtl
mov
and
add
out
xor
addb
test
test
and
js
stc
incb
popf
fsubrl
notl
cmp
icebp
cli
mov
mov
mov
push
jle
bound
mov
leave
push
sbb
sbb
outsl
dec
xchg
inc
arpl
iret
mov
sub
adcl
jno
adc
push
insb
push
dec
pusha
sub
outsb
imul
js
push
mov
lret
dec
pop
cmp
jge
jne
outsl
int
stos
mov
out
repnz
inc
aas
std
mov
push
push
ret
jae
inc
xor
and
leave
pop
mov
pop
push
scas
cld
mov
lods
gs
push
in
add
cs
lcall
sar
daa
outsl
pop
fistps
les
imull
mov
pop
jp
mov
iret
rcrl
or
push
dec
push
into
inc
loopne
sub
mov
ret
push
and
push
xchg
leave
jb
push
data16
lock
sub
jbe
and
stos
sbb
pop
inc
inc
pop
pop
mov
imulb
imull
jmp
cmp
ja,pn
jle
xor
and
jne
lcall
arpl
ss
les
into
xchg
lds
adc
push
fsin
lret
daa
xorl
test
loope
pop
adc
test
sti
call
mov
loop
pop
lcall
rcl
icebp
cs
inc
jns
rcl
push
adc
lret
mov
data16
inc
adc
lods
jns
cmc
lret
cs
test
je
xor
push
sbb
dec
jecxz
xor
inc
decl
movsb
popf
cwtl
int3
sbb
inc
xor
add
lds
ret
sarl
adc
je
out
js
and
movsl
cld
stos
ja
inc
mov
mov
cltd
and
push
mov
pop
mov
out
fs
sub
xor
sbbl
jecxz
dec
or
pop
push
sahf
dec
movsl
fcompl
aam
sub
adc
mov
inc
jl
pop
sbb
dec
int3
mov
inc
aaa
imul
cmp
call
loope
int
in
pop
nop
lret
shrl
int3
sub
imul
or
shrb
ss
in
inc
arpl
or
add
add
mov
mov
std
mov
repz
repnz
sbb
mov
cmp
jnp
imul
jecxz
mov
mov
pop
daa
sub
inc
sub
fcmove
gs
jg
std
mov
sub
or
movsl
int
inc
lds
mov
popf
nop
or
test
mov
int
insb
dec
loopne
sub
lcall
sbb
mov
negl
inc
test
xchg
mull
jns
mov
mov
push
pop
cwtl
stos
lret
out
jbe
out
xchg
mov
shll
jl
rolb
add
inc
add
insb
jge
xchg
xor
xchg
loopne
mov
shl
out
scas
push
or
jmp
data16
mov
push
nop
jmp
dec
out
mov
pop
push
cmp
dec
aad
inc
xor
xor
adc
outsb
jbe
mov
xchg
shrb
adc
push
mov
cmp
mov
xor
sub
adc
movl
xor
jmp
inc
scas
mov
push
and
les
scas
ret
adc
addr16
jp
lods
mov
add
loopne
clc
push
js
sub
pop
and
lds
cmp
insb
dec
mov
mov
pushf
mov
push
jo
sub
pop
jnp
push
push
stc
jne
test
scas
push
enter
stc
daa
adc
ja
mov
pop
mov
das
mov
leave
int3
cld
stos
add
daa
jg
and
fisubl
mov
aam
push
icebp
ljmp
xor
fiadds
pop
xor
jge
adcb
jge
je
pop
inc
dec
rcl
adc
xor
addr16
ljmp
jge
pushf
movsb
push
jmp
push
jb
les
testl
lahf
xchg
mov
rcl
ret
jg
sbb
cld
shl
loopne
jg
movsb
push
mov
mov
outsl
sete
sub
in
cs
cmp
sbb
xchg
ds
pop
pop
mov
inc
mov
mov
sub
fwait
jmp
loop
lret
jae
in
jns
ljmp
sbb
out
loopne
adc
in
test
or
sahf
sub
sti
push
push
adc
outsb
sub
jmp
fs
cwtl
xchg
rcrb
and
cltd
add
cmc
cmp
xor
nop
sarl
cwtl
nop
and
mov
cwtl
loop
lods
pop
pusha
int3
push
xor
ss
aam
add
mov
dec
aas
cltd
push
mov
xor
mov
xor
jo
dec
shufps
cmp
sbb
in
gs
jmp
mov
or
push
les
test
mov
repz
mov
outsb
je
jae
inc
adc
xchg
mov
push
inc
mov
cli
inc
jno
push
scas
xchg
sbb
push
sarw
xchg
add
mov
bound
pop
push
mov
rcrl
inc
cmp
xor
enter
dec
repz
or
pop
lcall
pop
out
test
mov
mov
add
xor
mulb
sub
ret
inc
lcall
out
push
push
xchg
repnz
sbb
sbb
xchg
and
mov
inc
ret
adc
xorl
andl
or
scas
flds
imul
xchg
iret
sub
andps
test
mov
out
push
dec
mov
ljmp
mov
leave
dec
fstp
sbb
mov
daa
sub
push
xchg
jae
cmovle
nop
pusha
jno
cmpsb
xchg
mov
bound
sbb
into
imul
push
movzbl
cmpsl
xchg
pop
jmp
outsb
add
sarb
les
stos
xchg
xor
mov
sarb
cli
jo
rcl
fistps
ficompl
out
add
pop
lods
add
cwtl
mov
mov
movsb
int
mov
jmp
rorb
xor
inc
cmp
cmpsl
and
clc
push
jp
inc
sbb
mov
lods
sub
jle
ret
pusha
add
mov
dec
pop
mov
jae
dec
movsl
inc
sbb
xlat
out
mov
or
push
xor
iret
mov
lahf
sub
dec
pop
dec
les
imul
addr16
shl
popf
and
sub
pop
andb
mov
and
out
out
arpl
out
dec
popf
test
dec
bts
inc
pop
inc
lcall
adc
aaa
fs
stc
mov
movsb
jns
outsl
inc
popa
into
ret
shrb
test
cs
repnz
add
cmp
cmp
std
cmp
jns
sub
lret
fdivrl
int
psubusb
dec
mov
dec
int
xor
subb
mov
mov
or
daa
xchg
sbb
ficoml
addb
stc
jg
or
lock
mov
or
sbb
dec
fwait
jno
sbb
lret
sub
xchg
repz
sub
inc
sbb
mov
out
cmpsb
pop
stos
aaa
pop
push
mov
dec
adc
and
cli
xchg
mov
mov
pop
mov
into
sti
iret
xor
sub
aaa
in
push
sub
movsb
add
roll
and
jno
movsl
xorb
inc
sub
or
dec
mov
xchg
aas
sub
insb
outsb
fsubrl
fldcw
adc
dec
out
inc
sbb
icebp
pusha
in
lock
fnstcw
add
jns
icebp
testb
test
jo
lods
mov
outsl
jmp
pushf
fbld
out
mov
clc
adc
dec
aaa
loope
mulb
pusha
cmp
sbb
dec
cmp
sub
adc
xchg
outsb
mov
mov
sbbb
push
repnz
push
add
addr16
jne
in
cmpsb
insb
es
jp
rclb
xor
lret
int
push
aaa
mov
cmp
mov
iret
adc
and
cmpsl
aad
test
lods
adc
mov
loop
imul
jnp
jecxz
test
cmp
sub
or
pop
clc
mov
push
push
mov
loope
mov
dec
dec
outsl
je
or
pushf
push
mov
and
in
mov
jp
push
or
adc
jnp
dec
call
cmc
mov
jg
sub
xlat
cld
sub
dec
and
mov
pop
sahf
lds
mov
jo
sub
shlb
lret
jecxz
movsl
int
mov
adc
and
xchg
mov
je
inc
lds
dec
sbbl
mov
das
test
inc
mov
test
test
cld
mov
sub
jge
lahf
and
sbb
mov
jg
push
les
call
fcoms
and
loope
dec
xchg
inc
jecxz
ficoms
lds
rolb
push
loopne
cwtl
andb
mov
fiaddl
addl
xor
jle
or
jae
leave
adc
cmp
icebp
lock
testb
imul
inc
cmp
cmp
ret
call
fidivs
push
xor
xorl
idiv
and
cld
cli
test
popa
sbb
push
inc
into
xchg
jecxz
push
das
shll
pop
movsl
dec
or
enter
push
jns
int3
mov
mov
add
mov
int3
les
pop
jl
fisubrl
popf
sbb
mov
decl
pop
repz
out
push
outsb
test
insb
lahf
or
push
dec
dec
mov
adcl
xchg
dec
gs
sti
repz
in
mov
jle
pop
xchg
inc
dec
mov
dec
loopne
xor
adc
lret
xchg
lock
mov
jne
popa
inc
arpl
aam
mov
leave
or
or
insb
icebp
lods
mov
mov
jmp
flds
or
rol
das
xchg
xchg
stos
aad
in
int3
adc
loope
movl
push
and
data16
out
sub
pushf
cmpsl
push
cmp
jno
inc
inc
idiv
xchg
mov
adc
in
dec
xchg
cs
pushl
xor
push
jl
xor
or
xor
fstpt
pop
push
test
lods
pop
add
int
lods
in
fsubr
pop
lods
das
js
loope
mov
arpl
arpl
incb
es
xor
pop
jne
fsubrs
mov
pop
lret
push
mov
and
sub
jae
leave
xor
in
gs
out
js
mov
and
ret
sahf
aam
pop
mov
cs
or
mov
lea
cltd
repnz
sub
gs
push
ljmp
ficompl
divl
mov
push
nop
iret
mov
or
cld
ljmp
leave
in
sbb
pop
arpl
gs
inc
or
jnp
jb
fildll
nop
mov
push
test
mov
cwtl
cmp
jne
push
flds
push
adc
cmc
add
imul
mov
and
sub
sar
sbb
movsb
pusha
push
and
ret
xchg
imul
jnp
xchg
aas
popa
xchg
cmp
imul
push
mov
jbe
and
ret
xchg
or
sbb
nop
and
mov
outsb
cwtl
cmc
dec
loope
mov
xor
mov
mov
add
int3
and
sbbb
lods
mov
cli
add
loop
inc
jno
push
test
inc
add
push
push
mov
jns
sbb
dec
iret
cltd
push
ret
push
pop
movsl
lcall
ljmp
xchg
movb
mov
xor
shlb
and
mov
mov
rcrb
pop
cmpsb
mov
push
sub
sbb
cmpsl
icebp
xor
fbld
icebp
lret
mov
incb
push
jge
mov
push
jne
dec
adc
cmc
mov
mov
xchg
mov
cmpsl
sbb
les
imul
outsb
pushf
cmc
mov
and
cmpsl
stc
xchg
dec
cmp
or
mov
jno
pop
icebp
imul
or
push
rcl
movsb
adcb
je
jmp
sbb
push
lret
add
adc
cmp
dec
stos
jl
mov
dec
inc
loopne
cmp
mov
loopne
sbb
xchg
fwait
adc
arpl
inc
and
bound
mov
jno
imul
dec
mov
scas
ret
out
jne
in
scas
int3
add
add
stos
jge
stos
pop
fisubl
lods
lds
movsl
int3
xchg
cmp
sbb
or
fucom
shl
imul
lds
lea
sbb
cmp
and
repnz
pop
jnp
push
inc
add
mov
fs
mov
push
in
ss
add
idiv
insl
ljmp
cmpsl
scas
sti
lock
inc
jbe
dec
fwait
mov
or
cmp
push
gs
xor
mov
lret
loope
ret
cmpsb
mov
cmc
or
jnp,pt
inc
inc
cmc
inc
xchg
sub
in
add
aam
or
bound
ror
out
xchg
mov
fdivl
sbb
imul
rcl
mov
das
shll
or
push
lcall
mov
or
cmp
jge
inc
sub
mov
mov
shll
xchg
adc
cwtl
xchg
lcall
into
dec
ja
mov
cmp
add
xor
ja
lods
arpl
cld
and
notb
imul
data16
push
mov
sbb
out
jmp
bound
ljmp
xchg
mov
xchg
sahf
dec
push
push
nop
jno
jl
pop
push
adc
fcmovb
aam
repnz
hlt
mov
mov
jmp
push
xor
and
dec
lea
or
lods
fsubr
inc
add
push
hlt
xor
mov
call
lock
sti
adc
sub
rolb
mov
test
outsl
cs
fstpt
lds
push
jno
fwait
mov
and
aas
mov
cmp
movsb
jns
mov
sub
les
cld
stos
push
std
sbb
dec
dec
je
lock
or
test
imul
pop
dec
mov
cs
push
sub
outsb
sbb
fwait
push
insl
mov
and
push
dec
push
stc
imul
dec
scas
cwtl
shlb
ljmp
loope
xor
ljmp
sahf
lock
mov
mov
push
push
pop
add
lods
sub
xchg
sbb
sub
sub
xchg
jae
dec
pop
int
push
sbb
in
push
mov
xor
push
movsb
sub
mov
pop
xor
pop
mov
fiaddl
jbe
xor
aaa
cmp
je
cld
fs
mov
push
mov
xchg
int
xchg
ljmp
jecxz
jecxz
fcompl
dec
sub
sbb
sahf
xlat
je
push
cltd
inc
scas
xchg
sbb
mov
into
je
out
icebp
mov
loope
and
xchg
cmp
ljmp
aas
les
scas
call
mov
sub
cwtl
insl
fs
mov
fwait
sbb
pminsw
pop
sbb
inc
adc
sbb
popl
add
into
mov
das
adc
jae
fs
rclb
cmpsl
daa
add
pop
push
dec
mov
shrb
idivl
je
fwait
jno
fs
les
sub
adc
fstps
rcll
xchg
sub
cltd
pusha
mov
mov
adc
add
jne
loop
das
dec
loop
sbbl
shl
adc
mov
nop
movsl
inc
cmpsl
xor
xor
lret
sbb
in
mov
inc
adc
imul
xor
cs
dec
pop
fsubr
xchg
out
and
out
lea
data16
jecxz
dec
xor
sbb
jno
mov
test
cld
aas
sbb
sub
pop
jne
sbb
cli
jmp
lea
js
scas
inc
gs
dec
xlat
cmpsl
scas
insb
mov
mov
cmpsb
add
add
dec
dec
in
test
xor
je
xchg
dec
mov
ljmp
or
mov
jo
bound
xchg
out
repz
xlat
dec
push
shr
sti
xchg
sbb
cwtl
mov
jmp
jb
push
scas
test
mov
lahf
fcoml
in
mov
addr16
int
adc
sar
push
fnstenv
add
das
xchg
stos
jnp
and
aam
jp
aas
jmp
pop
in
pushf
xor
xchg
cmpsb
adc
mov
push
jecxz
out
sub
adc
mov
jns
sbb
mov
or
call
cmpsb
xor
cmp
mov
out
xor
lret
scas
loop
repnz
xor
pop
xchg
ret
and
jno
sahf
pop
in
sub
cmpsl
es
arpl
push
arpl
or
movsb
stos
dec
je
sahf
mov
popa
test
adc
or
imul
push
cld
xor
insb
mov
inc
test
sub
xchg
imul
clc
xor
shl
out
inc
sahf
dec
testb
xchg
or
inc
inc
pushf
test
mov
int
or
cmpsl
lret
hlt
mov
outsl
jno
dec
outsl
test
lahf
mov
push
ss
fwait
cmp
dec
jg
scas
idivb
add
adc
or
mov
out
push
notb
pop
pop
or
sarb
xchg
in
xchg
bound
out
leave
stos
mov
dec
outsl
fmull
lcall
shl
jmp
pop
leave
or
mov
int
mov
cs
add
lcall
dec
pushf
mov
data16
pop
ds
mov
out
fsts
pmuludq
inc
insb
mov
and
jl
push
sub
dec
mov
shl
cmp
in
mov
mov
std
jne
lret
out
xchg
fcomip
jo
xchg
sbb
and
andb
inc
repnz
mov
arpl
sarb
xchg
shrl
outsl
repz
sub
insb
and
lods
sbb
aad
push
pop
and
repz
in
out
fsubs
mov
sub
mov
repz
cwtl
testl
cmp
add
pop
rorb
lds
repnz
jne
cmpsb
jmp
xor
pop
push
mov
mov
out
out
cli
mov
add
jmp
imul
jae
cmp
pop
mov
push
inc
and
imul
push
jne
push
cmp
pop
lock
adc
xchg
and
mov
adc
xchg
hlt
leave
cmp
jecxz
lds
fnstsw
mov
dec
outsb
xor
pop
data16
mov
jle
and
inc
pushf
dec
cld
leave
jp
pop
clc
jmp
jo
ret
and
and
mov
lcall
mov
mov
je
mov
repnz
and
mov
jecxz
es
sub
int
jnp
xor
or
stc
cmp
pop
ja
popa
mov
inc
inc
pusha
mov
inc
mov
in
fs
inc
pop
pop
pop
and
ror
jg
fistps
pop
loopne
pop
pop
in
dec
add
imul
sbb
fsubrs
loope
sub
nop
ljmp
add
test
push
adc
cmpsb
insl
cli
hlt
sbbb
pop
clc
mov
lea
fsubs
add
lock
or
add
add
cmpsl
mov
or
stos
popa
dec
stc
mov
adc
jmp
lcall
inc
icebp
dec
mov
add
pmulhuw
adc
pop
stos
sti
and
add
mov
push
inc
mov
cs
out
pop
aad
inc
inc
rcrl
repnz
jns
in
addr16
add
lahf
ja
pop
jge
mov
cld
mov
icebp
mov
push
or
mull
pop
pop
into
out
mov
ja
jno
push
fnsave
mov
lock
nop
inc
loope
fcomps
adc
push
test
xchg
das
push
pop
mov
iret
jbe
xorl
sub
mov
mov
lahf
and
inc
pop
cmp
les
cli
lods
and
lret
push
test
jnp
call
loop
adc
dec
sub
adc
repz
aaa
mov
addb
or
mov
jmp
cmpsb
mov
sub
push
cmp
rdpmc
cmpsb
mov
stos
sarl
add
jno
push
rcrl
sbb
jg
dec
in
fistpll
xchg
push
xchg
jl
fistpll
movsl
stos
or
mov
push
lret
mov
movsl
es
into
adc
mov
pop
mov
pop
call
cmpb
xchg
test
sarl
aam
xor
mov
xchg
add
jno
dec
and
shrl
jae
add
jge
ss
insl
outsb
out
test
mov
fcoms
xchg
pop
nop
sub
aad
push
pop
mov
pop
cmpb
lcall
pop
hlt
fnstcw
mov
cmp
stos
mov
lret
test
popw
inc
pushf
cli
pop
inc
mov
push
aad
das
pushf
dec
sbb
adc
xor
icebp
add
push
sbb
xchg
test
out
dec
pop
movsb
fdivs
shl
adc
imul
loop
js
sub
or
out
fistpl
pop
adc
jbe
adc
xor
dec
mov
dec
popa
adc
aaa
jp
push
mov
jae
pusha
jne
insl
mov
inc
add
movsl
lret
xchg
loope
shrb
iret
xchg
mov
enter
xor
xchg
out
push
add
loop
mov
xor
insb
pusha
cwtl
aad
push
in
sub
lcall
bound
mov
inc
mov
pop
out
xor
mov
test
daa
dec
and
pop
gs
cmp
insl
push
scas
insb
ja
outsl
push
lahf
mov
sub
das
out
push
lods
scas
mov
sbbb
xor
in
add
test
data16
sbb
mov
sbb
xchg
loopne
mov
push
mov
movsb
fstps
xlat
push
push
rcll
pop
icebp
mov
cmp
sbb
xchg
sub
mov
imul
adcb
shll
ror
push
adc
mov
in
inc
mov
sbb
shl
mov
fidivs
inc
js
scas
iret
xor
test
cmp
adc
jne
addr16
xchg
aam
out
push
aas
pop
xchg
jb
mov
sbb
xor
test
call
jg
push
add
mov
push
or
jns
out
daa
xchg
push
cs
mov
ds
jbe
and
and
add
jne
fs
stc
testb
movsl
xchg
out
jmp
sub
xor
into
cmp
lods
fidivrl
jp,pt
mov
pop
call
xchg
icebp
mov
fmull
add
ret
pop
bsr
xlat
addr16
rorl
push
xor
or
test
dec
xor
cli
jns
stos
add
ss
xchg
sub
int3
dec
loop
stos
fisubrl
cmpsb
mov
sarb
je
xchg
aam
lret
out
pop
cli
outsb
dec
out
push
add
mov
mov
into
adc
cwtl
inc
add
enter
jae
imul
jae
inc
insl
jl
or
cs
and
pop
jo
test
fimull
lret
cwtl
iret
add
lds
push
iret
loopne
dec
mov
push
cmpsb
xor
cmp
or
sbb
inc
cltd
repz
jne
sub
inc
int
mov
repz
aaa
insb
xchg
xor
mov
loop
dec
testl
push
sub
mov
jae
and
movsb
mov
ret
icebp
incb
and
lods
xchg
jbe
cmp
push
add
sub
mov
dec
loop
xor
cmp
dec
loop
add
movsb
jns
sbb
insb
out
fiaddl
inc
sbb
dec
xorb
lret
add
adc
cwtl
or
jo
test
mov
pop
mov
push
add
mov
push
dec
cmp
xchg
lds
mov
int
adc
out
daa
mov
sbb
leave
mov
mov
sbb
xchg
inc
std
inc
inc
imul
mov
sub
push
sahf
jle
into
jne
mov
xor
fistl
aaa
cmpsb
and
fxch
push
xorb
sar
jnp
movsb
inc
mov
stc
sbb
and
daa
mov
jmp
sbb
sti
cmp
test
je
mov
pop
mov
js
lock
lock
dec
notb
out
inc
mov
mov
mov
push
add
add
sti
fcmovb
dec
push
and
aad
inc
insl
jg
insl
jp
xchg
lahf
sahf
loop
add
jl
dec
les
adcl
sub
push
cmp
sbb
inc
jp
dec
rorb
jo
adc
adc
cld
xor
clc
cmp
mov
cld
movsl
sbb
jge
ret
fstps
movsl
xchg
pop
dec
out
rorb
sbb
xchg
scas
int3
push
adc
pop
add
imulb
ficompl
add
inc
stc
cmp
inc
xchg
adc
fldl
les
dec
fbld
cmpl
pop
mov
push
nop
in
loopne
and
sar
add
inc
mov
cltd
ret
pop
mov
rorl
scas
aas
iret
mov
pop
xor
pop
les
mov
repz
arpl
xor
pop
cmpsl
out
push
xlat
test
jbe
aam
es
inc
nop
add
dec
jbe
sub
pop
gs
xor
mov
push
sti
cmpsl
xlat
dec
dec
hlt
int
insl
push
xor
dec
out
mov
push
fwait
jg
adcl
jmp
lcall
adc
je
fdivl
jbe
nop
and
xchg
xor
loopne
js
scas
cltd
push
jmp
and
ds
jecxz
cmp
cmp
daa
cmp
or
decl
arpl
fstpt
cmp
fisubl
cmp
cmpsl
loopne
push
add
lea
imul
roll
push
sub
pop
or
sub
mov
call
xlat
mov
les
adc
scas
jne
sub
cmp
mov
clc
jb
xlat
orl
stos
dec
js
mov
mov
sarb
add
lret
add
shl
ja
loopne
xorl
fildll
push
gs
mov
pop
cmp
notl
xchg
xchg
mov
movsb
cmp
mov
mov
xchg
arpl
out
dec
leave
or
push
leave
push
je
sub
ljmp
cmp
add
adc
dec
out
out
or
lret
subl
adc
mov
fnstsw
sub
lods
stc
pop
dec
scas
ss
push
outsb
repz
sub
test
ficoms
call
int
leave
mov
mov
pop
stc
xor
sbb
xchg
out
ds
scas
out
mov
xor
cmpb
leave
ror
push
or
out
and
clc
out
mov
ret
cs
mov
ljmp
mov
mov
in
sub
shr
dec
xor
push
inc
mov
fnstcw
insb
push
and
cmp
mov
repnz
pop
imulb
and
or
inc
pop
test
cmp
iret
stc
jns
push
fcmovnbe
test
cmp
push
mov
stos
xchg
leave
out
fwait
mov
sahf
jo
push
out
sbb
add
cmpsb
add
es
into
pop
pop
xor
push
jmp
lock
lret
pop
jge
insl
mov
ss
push
fbld
mov
testl
sbb
movsb
mov
xchg
mov
xlat
and
jno
add
xor
fadds
or
cmp
pop
dec
shll
dec
je
xorl
pop
xchg
sahf
les
aas
or
and
nop
mov
cmp
adc
mov
sub
xchg
imul
rcll
xor
lret
lea
lret
jno
addb
in
cmp
cs
mov
and
daa
push
or
dec
nop
push
cmp
sub
lock
dec
jp
add
mov
and
mov
cwtl
push
in
adc
int3
push
mov
lret
adcl
cmp
shr
in
imul
into
xchg
jg
neg
stc
stc
inc
pop
rcl
add
add
mov
movsb
sbb
xchg
mov
mov
cmp
pop
push
adc
mov
pop
push
sbb
xchg
je
mov
inc
es
sub
ror
outsb
orb
or
push
and
lcall
or
sbb
cld
push
in
xor
popa
xchg
cs
pop
add
xlat
dec
adc
lret
test
lahf
inc
inc
movsl
dec
pop
int
push
loop
cmpsl
out
repnz
jae
repnz
out
mov
adc
cmpsb
enter
inc
fdivs
pushf
mov
lds
popa
dec
cld
cli
ret
fwait
and
lret
rolb
cltd
mov
push
cmp
iret
rolb
mov
adc
das
lcall
mov
mov
in
cmpsb
jle
pop
inc
fs
jmp
insl
mov
js
dec
mov
add
sbb
mov
jno
lret
jp
pop
dec
cmp
movsl
repz
movsb
movsl
fadds
mov
sbb
cmp
enter
or
sub
mov
lods
mov
in
mov
jg
xor
cmp
outsb
aam
repnz
loopne
xor
outsb
gs
pop
sub
dec
ja
in
icebp
jne
xchg
sbb
aaa
js
xchg
mov
lcall
jmp
icebp
adc
das
jp
sbb
inc
mov
iret
pop
sbb
inc
add
out
cwtl
repz
sbb
data16
dec
xchg
inc
divb
push
repnz
add
and
add
jb
sub
dec
ffree
gs
inc
das
cmp
je
and
mull
int3
xorb
xchg
out
push
scas
psrld
pop
xchg
xor
orb
or
stos
in
cmp
loop
cs
clc
iret
sbb
scas
lret
add
adc
push
out
loope
ret
push
pop
mov
cmp
aaa
out
es
shr
push
adc
inc
or
mov
aas
test
scas
xchg
adc
pop
and
fwait
xchg
and
data16
in
mov
adc
adcl
adc
mov
jnp
addr16
call
mov
inc
push
call
add
loop
negb
leave
mov
mov
mov
ja
ret
pop
mov
sbb
fdiv
or
xchg
pop
push
cmp
and
cmp
das
movsb
or
dec
or
push
mov
scas
and
inc
movsl
xchg
jae
dec
or
popf
pop
mov
add
or
js
aas
insb
mov
icebp
add
push
es
cltd
adc
push
cli
dec
push
xchg
mov
cli
inc
mov
cmp
pop
mov
clc
iret
pushf
mov
cmp
xor
out
aas
adc
mov
shrl
mov
sbb
out
lahf
mov
ret
mov
mov
cmp
addr16
outsb
mov
les
insl
jne
sbb
pop
and
fstps
cli
insl
cmp
es
in
scas
push
or
popf
xchg
lret
or
arpl
push
loop
cmp
nop
and
mov
div
fstl
cmp
icebp
mov
pop
dec
push
dec
lods
jl
lock
outsl
mov
dec
sbb
lods
adc
negb
cmp
sub
and
call
dec
mov
lea
das
mov
in
fwait
das
orps
mov
add
xor
pop
rolb
mov
ljmp
or
lock
push
add
js
test
cs
adc
xor
xlat
dec
pop
push
outsl
out
sub
lret
mov
add
mov
push
push
mov
inc
pop
sar
push
dec
mov
fs
rclb
call
es
xchg
fsubrs
imul
adc
mov
enter
negb
adc
nop
mov
lods
xorb
jbe
scas
test
xchg
popf
test
and
pop
dec
outsl
cli
out
dec
cs
mov
movsb
imul
jl
push
mov
adc
pop
or
fistpll
mov
mov
scas
lds
test
arpl
inc
jns
fs
cli
sub
mov
daa
adc
fdiv
mov
jl
jbe
push
sti
pop
cmp
jmp
enter
adc
insl
mov
repz
sti
mov
cmc
sub
mov
sti
and
fs
shrb
xor
pop
push
cmp
fldenv
pop
fsubs
ret
das
or
insl
adc
pop
or
in
jg
mov
stos
pop
hlt
and
jnp
or
cmp
cmp
nop
imul
je
fidivrl
imul
mov
sbb
add
add
test
mov
jmp
lahf
xchg
pop
aam
xor
fisubrl
std
jecxz
and
push
fs
mov
fucom
xor
lahf
lret
and
push
mov
adc
gs
aas
daa
inc
imul
inc
jno
jae
mov
xchg
push
out
cmpb
loopne
mov
stc
test
jmp
call
sub
or
pop
mov
data16
es
xor
dec
in
push
push
clc
ret
idivb
repnz
stos
std
fstpt
in
add
cwtl
xchg
pop
xchg
fnsave
ss
push
fidivs
test
dec
ljmp
inc
or
movsb
xchg
ficompl
iret
ret
adc
push
mov
cli
jmp
or
mov
test
mov
push
mov
cmpsl
xchg
fucomi
sub
push
xor
xlat
sub
mov
insb
jbe
pushf
fmul
push
cmpsb
xor
inc
push
and
mov
lods
aas
cmpsl
mov
mov
ja
adc
cmp
cmpsl
inc
mov
aas
jnp
adc
popf
xor
outsl
divb
sbb
dec
xor
pop
xor
sbb
loope
push
nop
cmp
inc
mov
pushf
xor
icebp
ret
sbbl
out
fisubrl
sub
lea
jbe
fyl2x
subl
pop
mov
cmp
das
in
inc
pusha
insl
or
xorb
add
jb
rep
adc
aam
shrb
enter
fcmovnbe
fdivl
add
fwait
ljmp
and
cmpsl
pop
pushf
sub
mov
div
jno
imul
xor
ret
and
in
cmpsl
aas
or
jo
xor
call
mov
add
nop
or
lods
sub
arpl
or
pop
in
sub
cmp
es
jb
fcom
push
stc
sub
mov
and
xor
aas
pop
out
xchg
adc
arpl
adc
imul
add
je
push
xchg
shll
sahf
das
cmp
mov
mov
cli
and
add
mov
js
ret
sub
hlt
mov
mov
push
jl
int3
jno
stos
aas
mov
and
dec
add
push
es
ss
pop
push
iret
lret
scas
cwtl
inc
dec
lods
or
push
adc
call
mov
jb
mov
jmp
andl
cmpsl
dec
adc
insl
or
subl
sbb
out
orl
mov
xchg
rorl
dec
lcall
shrl
ja
or
jle
outsb
addr16
flds
fwait
mov
jbe
ds
int
jae
push
int
inc
jge
mov
push
dec
cmp
scas
cmp
mov
sbb
arpl
sub
jae
xchg
stos
pop
or
movsl
jnp
lock
cltd
lcall
mov
cltd
stc
repnz
cwtl
cmc
clc
mov
addb
mov
jns
pop
mov
jnp
dec
loop
push
xchg
push
pop
aad
pop
jp
loope
mov
mov
dec
cld
int
mov
or
roll
adc
push
or
leave
xor
and
jge
sbb
mov
push
test
add
jge
repz
jge
andb
out
mov
lock
pop
dec
lock
jno
hlt
loopne
mov
xchg
adc
and
cmp
mov
enter
xchg
pop
add
ss
addr16
iret
dec
adc
jle
dec
add
ds
rol
mov
imul
jmp
imul
insb
int
lea
in
das
nop
jbe
andl
mov
lret
in
xor
in
push
pop
adc
int
add
mov
idivl
mov
xor
imul
outsb
cmp
or
cmc
xchg
mov
xchg
lahf
pop
and
es
loop
pop
iret
cmp
mov
adc
clc
xchg
jae
aas
and
mov
cmp
adc
or
sub
andb
jmp
adc
ljmp
inc
cmp
push
cmc
dec
lcall
arpl
cmp
out
mov
in
xor
ss
cs
jno
sbb
pop
jecxz
jb
pop
cmp
cli
cltd
ret
movsb
dec
aam
cmp
dec
and
push
xchg
mov
dec
imul
push
cli
mov
xchg
lret
add
or
or
loop
out
js
loop
cmp
repnz
ret
in
cmp
jns
mov
daa
adc
adc
in
mov
mov
ret
in
stos
js
addb
xchg
push
ret
ret
mov
es
rcl
negb
test
fcomip
or
sbb
fstl
aas
js
lock
cwtl
push
xchg
adc
jne
or
mov
jae
cmp
or
bound
cmp
daa
sti
stos
xor
lods
lahf
xor
push
mov
adc
xchg
push
mov
xlat
xor
inc
sbb
sahf
mov
xchg
or
cltd
idivl
jae
sub
outsb
aas
aas
mov
into
push
pop
mov
jmp
adcl
xchg
lea
or
in
dec
out
sbb
stc
push
cmp
insl
scas
pushf
sub
sbb
xchg
cwtl
cwtl
test
add
popf
xchg
cmp
mov
mov
loope
or
outsb
daa
push
mov
and
jne
and
aam
mov
lret
sbbl
adc
pushf
xor
mov
adcl
je
mov
pop
dec
ljmp
pop
mov
stos
and
jmp
mov
nop
mov
out
inc
inc
loopne
ja
cmp
inc
sar
aad
inc
sbb
mov
daa
inc
int3
add
dec
bound
jne
xchg
mov
dec
jno
pop
scas
dec
cli
pop
fdivl
jnp
add
stc
mov
push
cmpsb
cmp
cmc
xor
sti
test
jmpw
sti
cld
test
lods
jecxz
sbb
mov
jecxz
je
jb
or
or
sub
xlat
imul
loopne
test
movb
rcrl
sub
sub
call
add
cmp
repz
cmp
pop
cmp
lcall
out
ljmp
rolb
cmp
ja
cmp
pop
ret
and
movsl
pop
mov
jg
loope
daa
in
jbe
repnz
mov
frstor
xchg
mov
cmp
sbb
cmp
and
pop
sbb
sbb
and
adc
adc
pop
insl
movsl
mov
rorb
sarl
mov
jae
mov
push
test
mov
push
arpl
das
out
loopne
movsb
cmp
ljmp
pop
adc
pop
fldl
jmp
in
adc
shll
lods
roll
loop
mov
dec
rorb
pop
sbb
xchg
test
cs
pop
sub
repz
mov
insl
and
mov
sbb
cmp
mov
loopne
in
lds
out
jp
sbb
xor
fdivrs
out
and
dec
mov
add
push
xchg
lahf
xor
sub
push
pusha
and
xor
int
jb
dec
and
jae
lcall
jno
test
sbbb
pushf
add
aaa
iret
int3
repnz
add
pop
mov
jmp
mov
jne
repnz
lock
in
int3
negl
test
sbb
insb
pop
dec
enter
and
and
cs
into
shll
add
cmp
pop
cli
sti
aam
sbb
int3
popf
inc
xor
test
and
lret
cmp
repnz
stos
fstpt
mov
pop
imul
sbbl
gs
scas
in
fcmove
in
mov
push
and
or
inc
aas
inc
pop
mov
pop
dec
lret
and
lds
add
mov
add
mov
and
and
mov
and
jge
arpl
aad
insl
call
and
sbb
adc
jle
shrb
sbb
xchg
push
mov
xchg
pop
dec
enter
ret
pusha
sub
pop
roll
jns
mov
mov
jnp
gs
outsb
ficompl
pop
repz
in
stc
push
fldcw
call
lahf
jno
lds
addr16
mov
dec
ja
pop
out
inc
pop
sahf
ljmp
jecxz
add
jae
sbb
or
xchg
call
sti
ljmp
push
and
jno
mov
pushf
cmpl
adc
jp
fdivrs
xchg
addl
mov
clc
jns
xor
ror
dec
and
push
sbb
cwtl
imul
cli
add
sub
std
and
mov
push
int
mov
mov
mov
inc
jns
iret
pop
dec
xor
cmp
dec
movsl
mov
add
push
push
push
dec
xchg
xchg
push
std
jo
mov
scas
je
fdivs
das
gs
es
scas
push
jo
inc
data16
fucomi
add
mov
pop
or
cmpsl
leave
lock
js
addr16
inc
add
cmp
jno
xor
cs
adc
std
xchg
sub
rorl
jecxz
xchg
aaa
aaa
cld
jge
test
cs
cltd
mov
pop
mov
cmpsb
sub
daa
testl
jbe
imul
jb
mov
cmc
adc
or
push
ja
xchg
pushf
mov
popf
sub
jbe
ucomiss
notb
push
mov
shrl
jl
divl
movsl
das
dec
push
sub
daa
xor
fimull
lock
inc
stc
lods
gs
mov
mov
mov
mov
lods
sub
sub
test
push
movsb
sub
pop
jp
sbb
jb
xchg
and
mov
dec
sbb
imul
jo
jle
mov
pusha
cmp
xlat
inc
or
adc
imul
sti
fldt
mov
lock
repnz
adc
xchg
push
insb
push
cmpb
xchg
sbb
outsl
loope
sub
xor
in
and
cmp
sahf
clc
data16
pop
scas
lds
dec
push
aad
test
add
mov
cmp
faddl
int
ja
xchg
push
jno
lret
lods
xlat
hlt
js
jmp
pop
insl
mov
fcoms
jo
loope
push
lret
mov
mov
imul
ret
fildll
push
stos
movsl
imul
pop
in
or
cltd
xchg
push
cmp
jns
xorl
jge
adc
mov
cmp
xchg
ret
jecxz
dec
cltd
xor
cmp
arpl
mov
mov
into
push
lret
mov
sub
fwait
pop
int
rcrb
add
into
jb
mov
push
and
and
xchg
jge
movsb
lds
jbe
and
enter
mov
es
mov
pop
xor
adc
sub
sbb
push
sahf
cld
loopne
cmpsb
fucomp
comiss
mov
loopne
and
and
jo
fbstp
mov
fsubl
and
pusha
inc
xchg
adc
pop
fcoms
icebp
clc
pop
andl
repz
sub
sti
mov
push
jno
pushl
xchg
jns
lods
test
outsb
loope
fsubrs
jmp
add
push
pop
enter
mov
inc
addl
adc
out
adc
push
push
dec
mov
ret
mov
subb
clc
out
inc
imul
test
push
mov
test
loop
scas
and
js
push
sbb
outsb
adc
xchg
ret
and
push
adc
add
push
mov
and
cmpsb
incl
xor
adc
adc
adc
lds
cld
push
dec
mov
dec
sbb
or
xchg
sbb
mov
sbb
push
into
mov
out
inc
pop
add
fidivl
or
jns
sbb
push
jmp
iret
fs
sbb
lahf
je
jbe
cltd
pop
add
xchg
lea
mov
xor
inc
cmp
ja
mov
insb
inc
rcr
mov
sub
adc
add
pop
lods
dec
xor
dec
mov
adc
lahf
or
scas
push
incl
jmp
lret
jecxz
call
pushf
fisubl
in
clc
jno
out
add
inc
cmovs
es
mov
pop
push
pop
ret
pushf
mov
stos
je
aaa
clc
jae
inc
fisubs
mov
sub
aad
jl
sbb
lahf
xor
pushf
cmp
shlb
jle
loope
jl
dec
pop
sub
aad
cmp
ret
mov
mov
mov
mov
adc
dec
std
scas
sub
clc
pop
xchg
adc
sbb
sbb
mov
cwtl
add
or
xor
ss
sub
and
neg
pop
xchg
add
mov
lods
fsub
push
mov
cmp
jg
bnd
xor
and
pop
cmpsl
mov
popf
mov
pop
cmp
sub
rorb
jae
aad
lret
lcall
cmp
pop
sti
pop
insl
adc
pop
leave
test
jae
fcompl
dec
cmp
imul
xor
sub
and
loope
push
jb
test
gs
rcrb
pop
mov
orb
xor
shrl
push
sbb
movsl
pop
mov
fs
dec
clc
sbb
mov
mov
mov
shr
bswap
lds
int3
scas
inc
jp
cld
or
adc
push
mul
mov
shrl
push
mov
scas
mov
dec
cmp
int
iret
mov
clc
lahf
xor
xchg
jecxz
jg
sarl
aam
adc
jne
lahf
lcall
shrl
stc
mov
xchg
loopne
mov
mov
cmp
lods
adc
or
inc
mov
lods
push
add
icebp
or
test
aaa
fisubl
orl
and
loopne
pop
and
shl
test
mov
mov
cmp
inc
push
adc
add
lds
roll
fdivrl
mov
mov
aad
loope
cmpsb
stos
sti
xor
std
cmp
lds
loope
mov
xor
aas
sub
test
fucomp
pop
or
gs
scas
loop
cltd
xlat
in
and
jecxz
xchg
rcr
ljmp
sub
lods
mov
movsl
mov
scas
mov
pop
mov
push
add
push
mov
call
mov
cmp
lret
js
nop
and
lea
les
sbb
xor
in
hlt
sub
xchg
cmp
dec
xchg
in
pop
mov
lods
sarl
sbb
addb
mov
hlt
mov
mov
hlt
rclb
adc
inc
call
xor
popa
fcompl
inc
enter
xchg
mov
leave
pushf
popl
rolb
pushf
aaa
leave
int3
stos
xchg
mov
aas
pusha
das
push
loop
test
pushf
jo
mov
sbb
out
shrb
iret
loopne
xor
into
daa
sub
sbb
sarb
pushf
mov
loop
mov
push
test
pop
sti
push
jmp
mov
fidivs
fcom
jecxz
inc
leave
fnstcw
jne
jge
cmpb
xor
adc
lods
or
push
sub
jp
icebp
pop
addr16
imul
jmp
fs
pusha
popf
mov
lods
mov
sti
inc
lods
mov
inc
push
andl
push
les
loopne
inc
lods
jnp
adc
xadd
jae
add
cmp
testl
jb
lahf
jnp
add
and
sub
push
lret
pop
or
or
out
add
outsb
decl
xor
inc
sbb
cmp
xchg
fistps
mov
cli
xchg
and
jae
xchg
loopne
adc
lahf
xlat
dec
or
ja
jne
mov
jb
std
xchg
in
add
movmskps
pop
icebp
pop
lret
mov
movb
push
andb
outsb
xor
push
shll
dec
jbe
int
out
out
mov
stos
orb
xchg
scas
fwait
mov
inc
out
xor
fldenv
dec
xchg
xchg
mov
mov
jns
inc
shrb
leave
out
add
lock
enter
in
pusha
lods
add
push
add
arpl
push
fwait
mov
mov
push
xlat
sbb
sub
sbb
into
jmp
bt
inc
add
adc
pusha
xchg
pop
or
sbb
cs
lahf
out
lcall
dec
sub
stos
orb
sbb
jno
mov
fisubl
mov
cmpsb
sub
cwtl
in
or
add
pop
pop
push
loopne
fistps
ret
addl
xor
mov
jmp
and
imulb
mov
mov
sub
pop
aaa
mov
out
pushf
sub
enter
je
jb
int
repnz
nop
xor
mov
enter
pop
ds
mov
cmp
xchg
fsubr
incb
push
cltd
adc
dec
addr16
mov
rcrl
jle
icebp
pop
aaa
mov
sub
je
shlb
lahf
repz
jecxz
or
xor
jo
inc
adc
sub
out
xchg
stos
xlat
mov
enter
pop
es
xlat
push
ja
gs
inc
bound
add
and
fimull
aad
jne
scas
fistpl
xchg
xor
int
adc
or
popf
loop
pop
xchg
ljmp
clc
and
stc
and
pop
sbb
pop
adc
out
imul
xchg
pop
xchg
js
pop
ljmp
out
mov
addb
cmpsl
adc
fs
push
xchg
add
cmp
into
add
mov
mov
or
jecxz
movsl
pop
push
ret
cmp
mov
xchg
mov
dec
movsl
push
ret
inc
dec
aaa
shl
sub
xchg
jnp
loopne
gs
hlt
jp
jb
into
or
pushf
icebp
stc
lea
imul
loopne
mov
or
xor
jl
push
pop
sbb
push
adc
inc
ficoml
sub
pusha
in
mov
stc
cmp
lcall
xchg
movsl
adc
or
stc
jp
lds
mov
cmc
call
cmp
ret
push
and
add
negl
mov
jbe
pop
jp
incl
and
pop
popaw
xchg
jb
fbld
ja
lcall
push
popf
xor
xor
orb
test
inc
cli
in
sub
xchg
jbe
loop
jle
icebp
inc
pop
push
inc
sbb
jno
popf
leave
les
mov
pop
and
or
movsl
rcrb
jecxz
sub
push
inc
sbb
mov
pop
repnz
sbb
xchg
adc
icebp
dec
mov
adc
lods
mov
mov
dec
xorb
cmp
out
push
pop
cmp
nop
xor
fidivl
and
repz
mov
push
mov
test
xchg
mov
adc
rorb
mov
call
icebp
ljmp
lahf
mov
push
out
nop
jbe
lea
loope
mov
in
sbb
sub
hlt
push
cltd
mov
push
xchg
subl
test
sbb
pop
out
pop
addr16
fs
mov
jle
jbe
lahf
mov
sahf
pop
leave
fisubs
les
sarl
ljmp
cmp
adc
jae
addr16
xor
out
movsb
fwait
push
mov
fsubr
inc
push
fprem
sub
sbb
sub
mov
push
xor
arpl
pop
mov
stos
jge
inc
push
dec
xor
lods
arpl
cmc
cmpsb
and
shrl
es
mov
push
orl
loop
mov
clc
mov
push
jmp
push
aas
in
mov
in
pop
movsl
add
jecxz
call
popf
mov
lock
loop
outsb
out
sub
push
icebp
fidivl
pop
dec
stos
pop
arpl
stos
xor
pop
cmpl
out
in
dec
or
cwtl
adc
xor
out
cmp
pop
jl
insb
pushl
lret
push
scas
pop
jne
out
js
imul
push
sub
in
pcmpeqb
fwait
adc
movl
fcmovu
push
inc
rcrl
testb
push
cld
mov
adc
cmp
mov
test
shll
inc
mov
in
ds
jne
jo
cmp
inc
sarl
mov
dec
int
in
or
stc
mov
mov
das
test
rcl
into
mov
dec
ret
shlb
sub
pop
dec
call
cmp
dec
imul
inc
mov
xor
into
stos
out
call
orl
pop
out
scas
loope
lea
cli
cmp
bound
and
int
mov
sub
mov
test
clc
mov
gs
repz
cli
push
jo
int3
or
aad
mov
mov
adc
inc
ljmp
scas
into
sub
stc
or
clc
sbb
add
sub
mov
das
jecxz
lea
pop
mov
mov
scas
setge
dec
cmp
xchg
mov
sub
adc
addr16
jbe
adc
xor
scas
andb
jne
and
jecxz
sarl
fdivs
jg
jo
mov
and
int3
cmpsl
dec
mov
inc
inc
lahf
mov
daa
int3
sbb
mov
orl
ss
cli
sbb
cwtl
mov
les
add
fbld
mov
lds
sub
nop
mov
xchg
cmp
sbb
sub
call
aas
es
and
mov
cwtl
cmp
out
mov
or
pop
rorb
xlat
lahf
ret
aam
aas
insw
loopne
sub
jmp
add
push
in
daa
xchg
lret
adc
arpl
push
in
sub
jle
subb
test
jnp
and
repnz
cmpsb
xor
mov
popf
pop
pop
and
loop
and
mov
insb
dec
lods
test
movsb
out
inc
adc
ss
push
pop
jge
enter
add
std
pop
sbb
jg
outsb
and
fcmovu
div
dec
add
push
pop
cltd
outsl
in
or
inc
dec
push
mov
ret
jb
add
jne
into
jmp
jl
sarl
sti
inc
cmpsb
push
sbb
aad
adc
jmp
push
jns
sub
ja
jecxz
xor
xor
pop
jne
cmpsb
test
pop
dec
int
inc
add
pop
outsb
mov
inc
lea
xor
stos
mov
dec
jmp
pop
ret
and
test
or
mov
dec
loope
pop
add
mov
mov
jnp
jge
mov
mov
pop
cwtl
bound
and
dec
add
adc
mov
dec
or
jge
fsts
and
cmc
push
loopne
stos
mov
sub
sub
push
add
cmp
push
xchg
jae
mov
shll
je
pop
js
imul
ss
loope
jns
mov
in
and
xor
add
sbb
test
repz
les
divb
test
and
adc
pop
jo
jo
sbb
mov
sahf
sbb
aas
inc
xor
push
testb
popf
xlat
mov
push
mov
int3
jmp
mulb
jo
adc
movsb
clc
or
jns
mov
inc
xor
mov
push
xchg
jns
roll
insl
orl
jnp
or
xchg
nop
insl
push
mov
xchg
adc
in
xlat
shl
pop
adc
jl
and
sbb
enter
test
inc
lahf
stos
ret
jno
sub
inc
mov
orl
mov
movsl
imul
sbb
push
xor
mov
testb
and
lea
cmpsb
dec
cmp
repnz
lods
mov
xchg
xchg
add
inc
sbb
stos
add
jbe
add
ja
arpl
adc
out
jl
jp
pop
fsubp
push
or
popa
mov
add
sbb
in
lods
inc
imul
adc
mov
lods
or
xor
lahf
sub
je
out
aas
sub
sahf
push
std
shl
je
mov
inc
loopne
ds
xlat
cs
or
mov
in
cld
out
mov
rcl
and
test
jp
pop
add
lods
push
mov
mov
fcoml
sub
push
add
sbb
sbb
add
fisttpll
inc
stos
push
xor
sub
pop
jp
hlt
sub
popa
jmp
int3
xor
loopne
icebp
jecxz
test
or
inc
iret
pop
inc
mov
das
cmpsb
cmpsb
test
cmp
or
inc
loope
sti
rorl
or
je
pop
rcrl
cmpsb
daa
lods
jne
inc
adc
gs
mov
pop
mov
ret
out
and
punpckhdq
mov
scas
stos
dec
cmp
fidivrl
arpl
push
xchg
test
pop
pop
pop
and
pop
loop
dec
lfs
dec
push
fidivs
clc
mov
subl
xor
lcall
daa
lock
jp
or
sbb
add
push
cltd
inc
aad
xor
lret
mov
dec
rolb
sbb
test
xor
loop
mov
aas
jp
and
out
repnz
mov
mov
adc
addl
cld
cmp
notb
mov
push
pop
flds
outsb
pop
jns
push
repnz
xchg
shrb
aaa
sar
jle
cmp
or
fdivs
jp
in
fisttps
mov
xchg
inc
adc
rcl
pop
outsb
and
je
push
insl
fldln2
xchg
inc
cmp
ficoml
adc
mov
mov
jle
hlt
and
data16
add
sti
cmp
pushl
cmp
push
je
push
out
xor
aad
pop
fwait
int3
adc
sub
mov
jl
push
and
test
cli
aad
jp
iret
adc
adc
push
jns
inc
rclb
pusha
es
cli
inc
cld
cli
jecxz
rclb
rorl
push
fcomps
mov
mov
mov
stos
pop
das
js
std
test
inc
shlb
les
push
loope
sbb
or
jbe
mov
enter
into
mov
dec
jmp
fimull
call
cwtl
add
stos
mov
scas
sub
fdivp
push
in
inc
mov
cmp
inc
test
inc
sbb
cmp
push
sub
mov
pop
dec
lret
test
cmpl
dec
lcall
mov
cmp
dec
push
xlat
jl
adc
std
pop
shlb
dec
loopne
shrl
dec
flds
fcmovne
inc
popa
addr16
cmpsl
or
mov
or
leave
mov
ret
cmp
inc
xchg
or
add
or
call
out
cs
popf
ret
fistpl
dec
push
loope
lods
add
cld
test
sahf
int3
shl
xchg
inc
push
sbb
pop
xchg
cmp
cmp
imul
lret
mov
xchg
aas
push
cmc
fdivr
cmp
aam
dec
sub
lret
lahf
fs
out
loopne
add
loop
mov
xor
popa
jb
call
addr16
mov
push
inc
fstpl
xlat
imul
bound
mov
xor
fadds
mov
jno,pn
pop
clc
mov
mov
push
jmp
ds
pop
or
push
mov
out
ret
int3
add
aam
fwait
or
mov
fiaddl
insl
mov
push
pop
fldt
cmp
xor
add
repz
push
dec
push
pop
and
sbb
pop
out
std
aas
es
cs
negb
xchg
pop
stos
xchg
loopne
push
mov
cld
movsl
xor
mov
jo
push
stc
adc
mov
es
aas
cmp
mov
pmaddwd
lods
mov
lods
jb
mov
adc
mov
ficoml
call
jg
int3
sbb
int
cmpl
jg
icebp
imul
jae
sbb
scas
arpl
sub
push
adc
arpl
jns
mov
jo
cmp
cmpsl
add
push
or
addr16
sbb
ret
mov
call
pop
fisubrl
mov
push
mov
lds
fs
fdivrl
jmp
dec
push
ret
or
add
std
idivl
outsb
mov
or
out
or
sbb
pop
dec
mov
dec
lret
dec
iret
fstpl
dec
test
loop
dec
inc
pushf
jne
inc
mov
inc
aaa
stos
or
imul
cmc
inc
fwait
inc
dec
call
fsubrl
mov
pop
xor
out
rcll
pop
pop
je
mov
outsb
pop
nop
push
inc
xchg
mov
pop
insb
lods
xrelease
add
je
pop
xor
mov
xor
pop
add
inc
lock
fiaddl
inc
movsb
enter
jecxz
mov
xorl
rclb
rolb
lea
mov
sahf
sbb
bound
ret
jmp
sbb
push
mov
or
dec
sbb
xchg
popf
add
sar
pop
pushf
enter
ret
jmp
scas
adc
and
add
dec
je
and
and
mov
dec
mov
jg
pop
out
mov
clc
testl
xchg
mov
mov
or
es
mov
and
inc
pop
scas
hlt
clc
or
jle
in
adc
cmpsb
xchg
xchg
mov
and
lock
add
std
push
xchg
stc
mov
jg
xor
das
call
sub
lock
mov
mov
jbe
pop
add
stos
sub
andl
sub
stc
shlb
daa
push
inc
pushf
lods
loopne
xchg
and
icebp
pop
shlb
ss
jmp
xchg
and
or
push
push
pop
fmuls
sbb
bound
or
or
sub
stc
int3
cmovs
push
in
push
inc
mov
xor
daa
mov
mov
test
and
mov
stos
adc
pop
adc
cwtl
out
push
sub
adc
push
ficoms
cmpsw
fnstsw
into
mov
daa
and
fsubs
jae
xchg
pop
fyl2x
add
fstp
push
jecxz
mov
mov
inc
std
xchg
and
icebp
mov
arpl
imul
cmp
arpl
es
or
sub
and
cmp
dec
jl
xor
jmp
pminsw
imul
push
fmul
inc
add
dec
sbb
xor
in
push
mov
xor
push
pop
fisttps
shlb
dec
scas
pshufw
xchg
negl
jns
lock
mov
out
cmp
push
adc
lods
cld
mov
imul
imul
xor
xchg
fsubs
rorb
subb
xor
pop
sub
and
fsubs
pop
test
iret
fcmovb
push
popf
cmp
jno
or
mov
cltd
outsl
pop
shl
aaa
les
aad
daa
cmpsb
loopne
adc
pop
xchg
mov
mov
addr16
or
ss
push
lea
jle
loope
or
adc
add
loop
push
cmp
jo
pop
data16
rcr
out
test
subb
jmp
pop
cmpl
mov
or
sbb
pop
add
xlat
mov
xor
pop
pop
xor
sbb
and
arpl
popa
jne
lret
sbb
lea
lret
outsl
mov
stos
pushf
add
btc
cmp
bound
daa
loope
lcall
add
popa
sbb
jae
movsl
ljmp
stos
test
std
imul
sar
pop
subb
xchg
sub
push
xor
mov
stos
jo
rolb
aas
loop
dec
inc
lods
jno
push
add
hlt
and
ret
test
xchg
jp
int3
mov
subb
and
or
mov
adc
es
test
mov
pop
and
cmp
xor
lods
pop
into
sbb
cmp
mov
in
and
mov
fsubl
sub
or
fsubrs
xor
mov
pushaw
jb
jbe
shll
cmpsb
mov
push
in
jb
fs
pop
sbb
pop
rclb
sub
push
or
mov
sbbl
sarl
insl
push
imul
mov
sub
push
mov
xchg
or
insl
fisttps
inc
jns
sbb
scas
xchg
xor
lock
scas
mov
rclb
nop
xchg
std
xchg
shlb
add
mov
mov
dec
loopne
mov
imul
push
orl
or
fdivrp
lahf
inc
sbb
sbb
imul
pop
pop
jecxz
gs
loop
ficoms
sbb
cmpb
in
pop
pushf
push
sub
add
sub
fs
ss
xor
pop
adc
loop
add
test
inc
inc
in
out
fldcw
orps
inc
pop
pop
enter
add
scas
lahf
rorl
test
aam
sub
pop
test
cmp
rcrl
sbb
mov
cltd
mov
add
iret
iret
adc
test
dec
cmp
int3
divl
fnstsw
cmpsb
add
fucomi
push
mov
test
add
cli
daa
ljmp
sbb
mov
imul
int3
jg
aas
or
push
insb
jmp
int
aaa
jecxz
jl
mov
add
in
and
mov
popf
jmp
xor
jecxz
cmp
pop
mov
dec
xlat
cmc
arpl
and
dec
enter
cmp
out
push
gs
pop
xlat
mov
cmp
into
lods
or
or
test
jecxz
xor
xchg
aam
nop
shlb
and
or
icebp
stc
xchg
loopne
mov
adc
xchg
jo
xor
das
int3
aad
std
sbb
je
lods
fadds
les
popl
cld
cmp
fistps
dec
pop
outsl
lods
adc
push
pop
xchg
addr16
cld
adc
mov
std
inc
push
adc
lds
jp
mov
sahf
hlt
dec
jno
in
dec
data16
jbe
dec
xchg
sub
incb
add
push
xor
pop
cmp
inc
mov
ficoms
or
ja
outsl
mov
sti
aam
fdivl
loopne
xchg
mov
pop
jle
les
and
add
fcmovnb
clc
outsb
xlat
push
push
mov
hlt
sti
sti
mov
ds
dec
push
arpl
data16
iret
les
and
push
rcrb
lods
push
mov
push
scas
mov
sbb
push
or
add
test
or
cwtl
xor
js
or
nop
fstl
bound
jbe
rcr
mov
test
dec
jns
dec
jno
jmp
stos
fsubr
dec
out
pop
addr16
or
mov
inc
inc
insb
lock
jne
mov
je
add
incl
mov
sub
push
inc
out
cmpsl
call
lods
cmpsl
adc
adc
cs
inc
sbb
xabort
cmp
les
xchg
push
shll
pop
xor
cmc
js
jo
dec
repz
cli
push
gs
sub
jno
jge
scas
jne
sub
cmpsb
xchg
or
lods
ss
adc
popf
push
lods
rorb
cmp
fcmovnb
cmpsb
cmp
aas
and
aas
fs
mov
pop
dec
fs
mov
lods
sbbb
push
out
dec
roll
mov
fadd
leave
push
jns
pop
inc
lret
cmp
add
pusha
outsb
adc
fisubs
sub
imul
mov
out
pop
icebp
adcl
mov
scas
clc
pop
roll
inc
cmp
out
shl
mov
xchg
xor
outsl
faddp
push
leave
xchg
jb
cld
cwtl
mov
sub
movsb
notb
out
mov
test
fimull
iret
xchg
adc
mov
push
add
push
sbb
or
std
and
pop
inc
mov
jp
push
mov
jp
inc
and
jb
jecxz
xchg
sub
mov
mov
negb
pop
pop
xor
ja
out
sub
jle
xlat
mov
popa
fcomps
xlat
mov
lock
lock
pop
dec
jmp
sbb
sub
sub
cmpsl
push
bound
roll
dec
lcall
pop
test
and
jbe
xlat
shll
cmp
mov
dec
cmpsb
xor
sub
push
adc
sbb
jmp
icebp
xor
cs
xor
fisubrl
mov
arpl
mov
cmpsl
shrb
inc
inc
popf
dec
xor
das
std
lret
sub
loope
xor
test
fldl
cmp
fbld
es
cmpsl
iret
cmp
jmp
clc
push
outsl
sub
insb
test
pop
push
pop
mov
inc
mov
int3
mov
out
cmp
cmpsl
xchg
clc
xchg
cmp
clc
mov
imul
mov
fcomps
mov
push
in
fiaddl
testl
or
cwtl
mov
lret
or
dec
fists
mov
in
xor
popa
dec
fcomp
jg
out
mov
jg
lret
ja
in
out
popf
pop
divl
xchg
sbb
xchg
orb
and
mov
outsl
and
ret
pop
stos
ljmp
in
jmp
adc
mov
add
push
int
inc
in
pop
fucomi
loopne
adc
mov
pop
adc
mov
cmp
jl
cmpsl
xchg
mov
pop
shll
out
push
lret
add
test
popf
jo
adc
movsb
inc
and
sbb
mov
fnsave
adc
cmp
out
fadd
lock
into
adc
sar
dec
mov
cltd
sbb
mov
mov
loop
clc
push
gs
rorb
adc
inc
lea
mov
xor
sbb
test
sub
inc
sub
xor
je
add
xchg
xchg
repnz
test
adc
pop
shr
mov
jl
jnp
fisubs
test
test
notl
sbb
sbb
test
stc
sub
pusha
imul
rcrb
lret
mov
or
mov
push
jb
add
dec
sub
hlt
call
ja
jge
fdivl
cli
insl
adc
divb
es
out
nop
je
ss
mov
stc
lahf
xacquire
leave
ljmp
adc
das
sub
jp,pn
adc
push
mov
pop
movsl
fdivrs
leave
imul
je
jge
push
fnstsw
inc
popf
mov
mov
pop
xchg
sub
les
push
pop
in
mov
fmul
ljmp
dec
xor
addl
imul
mov
push
mov
loope
mov
jmp
jne
xor
lahf
test
pop
adc
mov
mov
adc
mov
out
mov
push
neg
mov
insl
push
push
xor
jl
dec
push
push
push
xchg
insb
push
jmp
insl
jge
xor
daa
mov
mov
add
mov
mul
iret
ret
outsb
sub
jns
mov
sub
mov
imulb
and
or
push
add
mov
push
gs
ss
cli
jae
xor
sbb
sub
popf
mov
xor
fadds
dec
cmp
jl
orps
ljmp
fwait
dec
xchg
xchg
into
xchg
aas
xlat
and
sahf
pop
mov
mul
pusha
pop
cmp
in
out
sub
mov
iret
js
aaa
bound
or
dec
cltd
mov
cld
fs
mov
xlat
out
dec
aam
dec
stos
daa
jae
je
add
repnz
mov
stc
rol
add
in
out
out
and
leave
insl
andb
ret
rclb
ret
add
or
dec
pop
inc
adc
lret
cld
xchg
sub
mov
or
add
dec
xor
add
jns
xchg
dec
gs
lds
pop
scas
iret
or
sub
mov
ds
jmp
imul
xchg
inc
dec
mov
adc
mov
xchg
mov
pop
out
mov
test
fsubr
seto
cli
subb
inc
push
verw
mov
jbe
int
and
mov
addr16
mov
or
imul
xlat
and
repz
mov
in
shll
add
sarb
add
outsl
jno
jl
rorl
bound
xchg
out
ljmp
outsb
fidivs
sbb
mov
dec
shlb
xchg
aad
push
fdivrl
mov
and
sbb
inc
mov
les
mov
cltd
mov
out
push
shrl
lods
adc
stos
ret
adc
xor
and
jno
test
pop
scas
fidivrs
xchg
and
in
sbb
xchg
mov
aam
pop
sbb
cmp
jmp
push
dec
mov
and
fs
xcrypt-ctr
cmpsl
sbb
enter
pushf
jns
inc
test
fistl
xchg
mov
xor
or
jl
test
in
out
in
notb
mov
fsts
cmp
test
inc
adc
pop
xorl
popa
icebp
cmpsl
lds
push
fnstenv
loope
dec
mov
push
fldt
fldcw
jp
xchg
xor
add
add
sbb
rcr
mov
sarb
rorl
pop
add
clc
mov
inc
icebp
imul
fwait
sub
mov
out
xor
in
int
mov
sahf
stc
and
ss
sbb
pop
mov
sti
jno
stc
push
clc
ret
nop
aam
jmp
mov
mov
fcoml
rcrl
paddd
sub
inc
pusha
int3
mov
lret
addr16
mov
repz
and
mov
loop
inc
dec
dec
xchg
xchg
cld
cld
push
js
pop
cmp
ja
jns
loope
pop
cmp
adc
shl
cs
iret
add
fdiv
leave
popa
adc
jnp
jne
repz
mov
loop
shr
mov
idiv
repz
mov
inc
dec
inc
scas
sahf
mov
cmpsb
add
xchg
jecxz
cmp
inc
iret
dec
mov
popa
in
sbb
adc
in
repnz
sub
dec
dec
fcompl
lods
cmp
pop
stos
xchg
cli
xor
or
outsl
inc
mov
sub
xchg
cmc
sub
les
std
adc
popa
clc
cli
adc
inc
mov
fcoms
fcoml
push
xor
cld
out
fildll
push
or
sbb
cmp
push
sbb
xchg
out
std
leave
xor
sbb
stos
sbb
rol
jns
aam
mov
dec
fdivs
pop
push
fdivrs
iret
sub
mov
or
out
dec
mov
out
mov
adc
xor
pop
int3
adc
fnsave
pop
mov
out
mov
and
dec
pop
push
ja
fcompl
push
cmc
cmpl
or
dec
mov
inc
and
stc
loopne
icebp
cmc
imul
in
iret
and
and
mov
jecxz
cmc
int
insb
imul
sub
push
xchg
pop
and
pop
sahf
mov
dec
mov
xor
mov
roll
and
sahf
lds
and
pop
test
stos
rcl
push
jno
sbb
and
ret
pop
xchg
fimull
pop
nop
ja
lcall
sbb
and
inc
fcmovbe
cmp
fisubl
or
sbb
mov
inc
aad
fisttpl
adc
push
enter
push
stos
sysret
add
cmp
cli
movsb
push
je,pt
cmp
adc
mov
xchg
adc
fucom
pop
lret
dec
mov
pop
out
push
pop
loope
and
jl
pop
aam
cmp
sbb
iret
add
pop
or
dec
int
pushf
arpl
or
decb
push
sbb
icebp
jl
lahf
les
ss
fcmovbe
in
cmp
sti
adc
ds
std
ss
outsl
cld
and
test
call
push
hlt
mov
sarl
pop
aam
mov
xchg
repnz
pop
xorb
fistpl
fdivr
sbbb
cmp
repz
daa
repnz
mov
and
aam
mov
dec
xchg
add
fisttpll
lea
cmp
les
lods
jecxz
jge
pop
dec
xor
jo
mov
and
cmpsl
add
mov
movsb
sub
cs
and
xor
dec
sahf
jp
and
loopne
hlt
mov
sahf
jbe
je
aad
shrl
and
jnp
jp
mov
push
lea
adc
aam
mov
mov
and
inc
sub
loop
inc
movsb
dec
les
lds
xor
push
or
repnz
xchg
in
ja
mov
js
pop
mov
outsb
push
montmul
cmpsb
xchg
push
push
add
mov
and
shll
xchg
pop
rcl
and
fbstp
sbb
sbb
push
and
ds
mov
icebp
repz
adc
in
rcr
lds
adc
jle
jmp
adc
orb
mov
stos
xor
pop
adc
push
idiv
shll
mov
pop
and
push
ret
loope
xlat
or
xor
dec
mov
stc
sbb
gs
mov
and
jne
jb
jl
pop
and
add
bound
lods
push
add
add
inc
cmpsb
sub
pop
pop
jnp
in
das
jecxz
push
jecxz
dec
imul
imul
add
rclb
arpl
cld
add
loope
fnstsw
ret
jl
fucomp
clc
dec
xchg
pmuludq
cmc
ret
lock
hlt
pop
dec
mov
in
movsl
pop
inc
scas
cmc
cs
xchg
mov
mov
or
out
pop
cmpsl
xchg
les
or
add
cltd
data16
shl
jnp
daa
lods
orl
fcompl
mov
ss
in
hlt
cmp
insb
mov
inc
ret
xlat
jno
cmp
data16
push
scas
or
shr
jbe
enter
std
ds
and
decb
mov
xor
jae
mov
daa
aad
lcall
arpl
xchg
icebp
aad
fidivrl
jmp
test
imul
add
inc
push
jmp
ss
icebp
sub
xor
lahf
les
aaa
lods
rolb
fisttpll
pop
mov
push
jg
mov
fdivrs
sub
dec
fidivl
and
pop
insl
xorb
mov
lods
dec
push
dec
add
or
sbb
dec
add
ja
add
pop
push
mov
mov
loop
ret
mov
cmpsl
cmpsl
jbe
mov
or
ret
push
pusha
xchg
jmp
ret
fwait
cmp
mov
adc
sti
adc
cld
mov
insb
ret
std
call
mov
lahf
add
sbb
repnz
xchg
pusha
xchg
leave
xor
mov
fidivrs
mov
lahf
mov
jg
xor
add
or
pusha
sub
outsl
cmp
stos
mov
lcall
sbb
and
xchg
leave
dec
cltd
mov
sbb
jmp
ret
xchg
pop
rcrl
lods
cmp
shlb
ret
loope
and
pop
aas
sti
jle
sub
jecxz
pop
cmpsb
in
xchg
je
sub
les
and
jmp
stc
aaa
push
fs
aam
jge
cwtl
add
push
aad
mov
icebp
filds
pop
imul
mov
cmp
dec
xchg
jg
int3
int
shr
dec
jnp
imul
fs
cmp
stos
adc
fisubs
push
fs
popf
mov
cmp
ds
jnp
sub
mov
sub
xchg
insb
mov
cmpsb
add
outsb
out
sbbb
aam
and
repnz
loope
sbb
push
xorl
shll
mov
jl
pop
rolb
mov
loope
pop
pop
test
sub
fidivs
sbb
dec
xchg
ret
push
mov
fcoml
dec
mov
std
stos
mov
mov
inc
xchg
add
lods
int3
lods
xchg
sub
pop
divb
andb
int
das
out
imul
sbb
ja
fcompl
jb
leave
sbb
cmp
ds
pop
imul
adc
test
bound
out
es
data16
add
xchg
adc
adc
shll
shl
push
out
in
or
scas
popf
into
mov
insb
mov
mov
xchg
repz
movsl
inc
cs
bound
int3
js
xor
dec
jecxz
push
aam
popf
lret
pusha
sbb
fdiv
fwait
sbb
xor
ljmp
jbe
fisubl
in
sub
dec
sbb
pop
jl
cltd
dec
lods
sti
dec
mov
adc
movsl
jle
setnp
push
mov
enter
scas
sub
mov
out
outsl
add
push
fmul
pop
ljmp
movsb
push
cmc
adc
pop
out
adc
add
sub
mov
outsb
fcoml
scas
xchg
jne
lret
push
pop
pushfw
outsl
scas
int3
jg
jge
cld
xchg
repz
scas
add
dec
mov
jnp
jle
inc
icebp
les
inc
jmp
stc
pop
xchg
call
mov
repnz
adc
cmpsl
in
mov
xor
inc
xlat
xchg
mov
stos
push
xchg
mov
test
add
inc
lds
inc
jle
cmp
xor
mov
sub
sub
nop
lods
cmpsl
loope
mov
jns
ret
inc
icebp
call
xor
cltd
int3
xchg
call
push
xor
scas
mov
and
dec
pop
and
mov
mov
ljmp
lock
insb
cld
into
adc
addr16
and
daa
cld
lcall
mov
push
mov
jg
pop
mov
xchg
iret
int
jmp
sbb
add
lahf
jo
jno
pop
je
inc
mov
or
mov
cmc
fsubrs
pop
in
outsl
adc
cld
dec
jl,pn
test
mov
ror
add
dec
jb
inc
repz
jmp
pop
outsb
jnp
sti
sub
test
push
ds
sbb
jae
jno
sbb
and
fisttps
es
mov
or
les
push
cmp
add
push
insb
or
inc
in
movsb
shl
nop
xlat
call
je
hlt
enter
fcoml
push
pop
lea
lods
iret
push
and
mov
xchg
inc
ja
mov
enter
jne
rcrl
xor
or
pop
lods
ja
adc
xor
aaa
lret
jg
lcall
sub
repz
push
clc
xor
lea
cmp
mov
jnp
lock
popa
test
shll
mov
pop
jno
movsl
xor
add
test
push
das
pop
ds
sbb
mov
jl
sti
pop
stc
pop
push
scas
xchg
add
movsb
daa
fwait
sahf
jno
aas
or
push
adc
jbe
mov
rcrb
and
xchg
jp
data16
bound
jbe
lock
fimull
mull
sahf
pop
mov
inc
ss
hlt
mov
js
fcomip
aaa
repnz
push
push
sahf
in
shll
shl
popl
out
and
dec
or
and
inc
insb
jne
cmp
testb
xlat
or
xchg
pop
fdivr
in
add
dec
dec
imul
xchg
scas
notb
lds
test
ret
pop
pop
cmp
pop
sub
or
cmpsb
cmc
and
xchg
adc
add
movsb
out
jo
jp
pop
outsb
bound
loopne
aaa
in
sbb
jmp
add
jge
in
xor
out
sub
cld
daa
and
jmp
cwtl
das
loopne
and
xchg
insb
add
mov
mov
jmp
mov
and
cwtl
jge
stc
arpl
mov
mov
imull
mov
pop
sbb
push
lock
jp
pop
dec
sub
scas
pop
lods
pop
sub
jns
xchg
adc
data16
call
scas
jae
push
and
stc
xor
fisubrl
pop
mov
adc
sub
xor
sbb
push
push
pop
seta
push
fwait
xlat
movsl
push
xchg
push
repz
aas
push
lret
ret
loop
xor
add
jne
pop
rorb
xchg
mov
inc
lea
pop
cmpsl
push
out
sub
icebp
adc
pop
repz
das
dec
jne
push
push
mov
xor
into
and
ret
lcall
hlt
enter
or
imul
pop
mov
hlt
push
inc
fcomps
test
mov
sarl
jae
inc
xchg
arpl
lds
push
mov
mov
mov
adc
aad
mov
jg
add
jae
out
xchg
mov
arpl
icebp
bound
push
and
jne
popa
insb
pop
mov
mov
loop
push
ss
popf
and
dec
nop
js
repz
xchg
inc
inc
fidivrs
jb
in
aad
dec
or
aam
das
xor
adc
add
or
shll
pop
insb
hlt
and
jb
cmp
dec
mov
clc
cmc
hlt
les
push
xchg
lret
cwtl
add
and
mov
cmp
enter
jb
cmc
in
clc
mov
mov
cs
pushf
enter
mov
cmp
fdiv
inc
mov
iret
cwtl
ja
inc
imul
jnp
push
jmp
inc
aaa
add
xchg
or
mov
mov
dec
or
jae
ficoms
mov
mov
setge
inc
cmpsl
push
mov
adc
rorl
jle
cmp
imul
not
fisubrs
sahf
je
dec
inc
or
dec
mov
mov
sub
paddsw
push
inc
and
jbe
cmp
sub
scas
imul
sahf
es
mov
and
push
and
adc
mov
adc
aam
dec
ret
std
ror
pushf
sub
dec
push
xchg
ljmp
adcb
xchg
sarl
adc
addr16
dec
roll
sub
sub
pop
jecxz
imul
fimuls
xlat
call
testb
test
xor
mov
sahf
or
sti
in
or
es
mov
lea
and
pop
lock
stos
jl
pop
das
cmpsl
in
pop
js
clc
cmp
push
sbb
jmp
dec
xor
in
xchg
lea
xchg
and
movsb
repz
inc
xor
add
fists
cmpl
fbstp
jp
data16
mov
js
sub
pop
xchg
mov
mov
jecxz
stos
inc
mov
mov
jge
imul
stos
ret
ret
cltd
mov
and
pop
into
lret
push
pop
pushf
and
mov
mov
loop
movsl
fcomip
push
cmp
imul
daa
or
inc
jp
lcall
cmp
cld
jg
jecxz
mov
sbb
fmull
mov
and
or
xlat
pushf
out
add
pop
std
add
mov
inc
in
xchg
jp
int3
dec
cmp
sub
and
das
cmp
add
mov
or
fnstcw
mov
push
jl
enter
cld
iret
mov
inc
into
test
add
cs
pop
push
mov
xchg
add
aam
push
frstor
imul
inc
xchg
xchg
xor
call
xchg
adc
cmp
cs
cld
aam
sub
pop
add
bound
cwtl
sbb
xchg
cld
mov
fs
andb
outsb
scas
and
pusha
repnz
sub
dec
sbb
cmp
testb
xor
xor
mov
icebp
lock
jnp
push
mov
cmp
xor
popf
pop
cmp
test
popl
or
std
mov
push
das
sahf
sahf
jmp
cwtl
xchg
cmp
shll
jns
popa
jg
sar
sti
sub
repz
inc
sub
and
cmp
add
and
sbb
lods
jmp
pop
imul
jbe
repnz
sbb
sub
movsl
inc
inc
insl
jb
xor
or
push
sub
movsl
lret
fs
mov
xor
xor
push
mov
in
in
dec
lret
popf
jp
inc
push
sub
ret
mov
cmpsb
add
or
push
dec
xchg
jle
loope
and
inc
pop
sti
mov
push
cmp
movsb
and
and
cmc
sbb
in
dec
xchg
divb
inc
sub
pop
sbb
xchg
dec
fdivrs
lods
ss
pop
insl
std
les
in
mov
cs
cmpsl
and
push
jb
cmp
xor
or
xchg
push
cwtl
and
and
or
leave
cmp
xchg
sbbl
push
jg
jg
mov
push
insb
dec
adc
xor
push
mov
pusha
mov
bound
nop
pop
adc
leave
mov
push
or
pop
jb
fstpt
popw
jp
jmp
pop
or
lods
push
call
jne
dec
das
movsl
xchg
adc
in
jbe
xlat
xchg
addr16
scas
out
loope
in
ret
aam
imul
pop
push
clc
repz
pushf
inc
stos
sbb
cmp
mov
daa
and
dec
sahf
aad
aaa
sbb
scas
add
dec
popa
in
or
imul
mov
insl
xchg
iret
stc
or
mov
lock
in
add
cmp
scas
test
adc
jb
jg
leave
addr16
mov
pusha
mov
movsl
jns
push
loop
cs
in
jne
sahf
or
scas
add
xor
xchg
sub
mov
jo
dec
xchg
or
or
int3
pusha
and
xor
inc
adc
or
jb
je
popl
jae
jmp
stos
sub
xor
and
sub
push
xor
lds
aam
lret
cmpsl
dec
rorl
cli
inc
imul
xchg
dec
test
mov
ss
aam
movsl
dec
push
jns
icebp
in
cmp
bound
jmp
mov
popf
sub
and
push
lcall
cld
xchg
jg
outsl
inc
xlat
cltd
fstl
adc
adc
or
cmp
fcomps
mov
push
data16
jae
dec
enter
sar
cmc
nop
stos
je
das
jns
adc
push
xchg
fcoml
out
arpl
out
cmp
lcall
mov
cltd
pushf
xchg
adc
popa
push
fldl
cmc
add
xchg
inc
pushf
gs
mov
das
out
dec
cmp
ss
mov
loope
lods
test
cmpsb
push
cmp
jge
out
repz
mov
out
and
sbb
sti
sub
in
loope
addr16
dec
dec
mov
and
data16
inc
mov
test
mov
sub
inc
mov
jb
inc
dec
sbb
pop
add
or
test
xlat
or
xchg
sub
fcomps
dec
lds
pop
shrb
sub
repnz
push
sbb
test
or
or
clc
sub
mov
pop
int3
fbld
movhlps
adc
adc
pusha
mov
notb
cltd
lret
sbb
inc
xchg
adc
and
fadds
mov
aas
arpl
mov
in
sub
sbb
or
sbb
repnz
ficompl
cli
sub
clc
xor
sub
insl
xor
inc
outsl
jne
popf
cmp
addl
enter
jne
jg
aaa
xor
or
sub
jge
pop
lahf
imul
cli
and
popa
xchg
aas
jmp
mov
xor
push
rol
cmp
std
mov
lds
imul
sub
jno
jne
leave
cmp
mov
sarl
push
and
or
and
inc
sbb
pop
iret
or
pop
push
xor
out
out
pop
add
sub
push
addr16
xor
pop
ret
repz
rolb
adc
jb
jne
mov
mov
and
push
adc
inc
les
roll
sbb
jle
ret
daa
adc
xchg
jmp
lcall
clc
push
inc
pop
out
imull
mov
push
pop
mov
adc
mov
popf
insl
int
inc
fwait
pop
push
out
jmp
or
aaa
incb
mov
bswap
sub
addl
in
fs
setne
fimuls
pop
test
or
test
cmp
cltd
lea
aad
or
lahf
lcall
push
shlb
cli
xchg
lret
lcall
mov
jp
mov
add
fidivs
inc
cmpsb
push
das
arpl
arpl
add
xor
mov
aas
cs
jno
addr16
add
mov
adc
push
sbb
ss
movsl
mov
pop
in
pop
fisubl
in
ret
pop
adc
ret
jp
xor
push
sub
inc
aad
aaa
int3
mov
int
sbbl
das
inc
pop
shlb
shll
sti
or
enter
loope
aas
sbb
lahf
out
ret
sub
fimuls
xchg
inc
ret
scas
dec
fisttpll
aad
xchg
outsb
or
sbb
cmpsl
mov
sahf
dec
sub
lds
inc
insl
rorl
movsl
push
fcoml
add
xchg
popa
add
rcll
add
dec
pop
movsb
adc
out
lods
rolb
xor
rcrb
dec
jmp
bound
adc
jae
adc
push
out
call
mov
clc
pop
push
sarb
popa
mov
cmp
loop
mov
ja
in
xchg
ljmp
pop
adc
adc
cmp
xor
test
imul
mov
fmuls
pop
mov
je
movsl
xchg
adc
adc
push
insb
cmpsb
mov
sub
mov
push
xchg
and
outsl
out
dec
adc
dec
loope
push
adc
call
inc
sub
lret
pop
xor
addr16
or
pop
sub
dec
xchg
sub
mov
push
push
lods
loop
rcrb
inc
sub
leave
xchg
add
ds
xchg
and
adc
cmpb
or
repnz
push
sub
jne
shll
test
mov
mov
sti
add
push
jecxz
addr16
test
cmc
popf
fidivrs
cmp
iret
pop
loopne
jnp
sbb
push
rcl
insb
adc
jp
jno
inc
fs
jmp
inc
lret
dec
pop
xor
iret
jmp
add
arpl
adc
imul
je
pop
dec
pop
inc
stos
fidivrl
inc
xlat
pop
jle
int
xchg
sub
add
in
cmp
sarb
cmp
nop
arpl
in
ret
pop
dec
inc
mov
hlt
xorl
mov
mov
inc
add
adc
dec
jb
dec
bnd
jp
inc
pusha
inc
test
sub
dec
popa
cmpsb
xor
mov
dec
les
icebp
frstor
es
test
sub
push
rcrb
mov
or
xchg
mov
in
sbb
popl
enter
mov
je
nop
and
flds
or
cwtl
xchg
push
xchg
xchg
push
and
cmp
sbb
push
inc
mov
add
pop
inc
in
sahf
pop
add
scas
and
int
ret
add
mov
aad
push
adcb
xchg
jecxz
inc
sub
push
sbb
inc
xchg
push
push
enter
cwtl
jmp
pushf
and
shrb
shll
rol
stc
sub
inc
push
or
out
mov
mov
inc
dec
xchg
imul
outsb
fst
xchg
inc
sbb
or
mov
xor
imull
jge
outsb
pop
cltd
addr16
jmp
fsubrs
sbb
push
pop
les
push
adc
mov
and
mov
int
outsb
es
cmp
icebp
dec
dec
sub
call
xor
jno
xor
es
sub
jecxz
hlt
cmpsl
in
jl
or
lcall
sbb
dec
sbb
cmp
pop
hlt
jmp
rcrl
out
push
rcrl
outsl
or
popf
cmp
jbe
inc
mov
js
dec
shrb
dec
ret
out
push
xchg
fcmovne
mov
push
jno
push
dec
adc
iret
stos
and
jg
sahf
pop
or
inc
lea
cmpsb
ljmp
or
mov
ja
shrl
fmul
jecxz
pop
sub
daa
push
iret
ja
jmp
jmp
sub
in
sbb
lret
inc
bnd
bound
addr16
mov
inc
sbb
fidivs
aaa
icebp
push
xchg
data16
jle
pop
fisttpl
shrl
add
outsb
add
scas
adcl
ljmp
mov
or
mov
or
push
inc
adc
ds
in
sub
into
test
cmp
mov
imul
jge
inc
ficoml
or
push
test
cmp
dec
adc
sbb
cld
in
dec
add
rorb
orb
in
sbb
mov
dec
imul
popf
aad
adc
popa
stos
rcll
mov
xor
inc
lahf
jge
fs
and
mov
jl
xlat
test
stos
lcall
sub
pop
pop
test
mov
test
loopne
testl
es
dec
or
subl
jnp
out
push
adc
xchg
rolb
xorb
in
mov
mov
test
clc
xchg
cmp
in
mov
sbb
push
sbb
sbb
setg
jecxz
repz
inc
mov
test
or
test
mov
call
dec
jne
out
and
lret
pushf
fisubrs
pop
in
mov
addr16
sub
push
xchg
test
mov
mov
int3
notl
fabs
mov
push
and
jecxz
jbe
hlt
mov
pop
int3
dec
add
lods
xchg
and
out
inc
movsl
fimull
push
or
outsl
ds
adc
push
push
fs
mov
mov
cmp
fisubs
or
jp
fdivs
fxch
xchg
cmp
xchg
push
cltd
sbb
stc
iret
pop
sub
mov
cmp
sti
mov
xchg
stc
mov
ss
fwait
mov
das
std
xor
pop
into
leave
movsb
repz
mov
popf
cmp
sahf
adc
sbb
ss
shll
scas
inc
gs
mov
mov
sub
add
shll
out
adc
repz
jae
xchg
sbb
adc
push
and
lock
and
xchg
ds
mov
mov
repnz
sub
push
fcmovnb
jae
loope
fmulp
sub
imul
into
mov
outsl
xchg
in
insl
and
sbb
rcll
daa
jge
cmp
loop
lock
jmp
test
sbb
lret
jne
or
aam
xor
jbe
nop
jle
leave
fists
lods
fmulp
in
xchg
or
mov
sbb
mov
sbb
pop
out
mull
stos
xor
test
xor
repz
mov
or
fisttpl
and
into
fwait
add
jl
in
sbb
enter
xchg
push
lret
mov
cmp
jbe
push
xchg
movsb
mov
mov
jg
xchg
adc
or
adc
ret
adc
pop
mov
int
cs
cmc
dec
add
icebp
cmp
imul
adc
rol
adc
out
scas
fstpl
mov
out
push
dec
push
inc
imul
das
xchg
jp
lret
fists
lret
fidivrs
test
in
jo
adc
sub
pop
addr16
insb
in
enter
test
and
out
jg
jecxz,pt
push
push
bound
jnp
std
mov
scas
outsb
push
inc
push
ret
mov
int3
pushf
xor
fidivrl
pop
cwtl
and
test
cmpsl
repnz
pop
enter
mov
jmp
outsb
popf
xchg
push
xchg
lret
pusha
dec
mov
pop
add
stc
inc
sub
out
mov
and
jo
mov
and
add
jb
mov
loope
inc
inc
or
mov
mov
enter
jecxz
jnp
cmc
mov
iret
out
lahf
or
mov
xchg
testb
lcall
jmp
int3
push
or
stos
jbe
cli
pop
lock
insl
pop
ror
scas
ljmp
mov
neg
test
das
mov
mov
sub
cmpsl
je
xor
test
aad
xor
push
xchg
fistpl
out
push
in
xor
shlb
pop
icebp
lcall
shlb
sub
mov
repz
pusha
push
in
adc
sbb
jmp
mov
mov
jle
sub
inc
xlat
les
pop
pop
mov
inc
pop
lcall
in
dec
ss
es
pop
outsb
aas
enter
jl
mov
mov
test
lret
call
xor
mov
lcall
mov
adc
or
ret
jp
push
icebp
imul
xor
pop
into
jnp
or
sbb
stc
pop
fidivrs
sbb
sahf
sub
fiadds
push
sub
ja
push
repnz
repz
xlat
adc
push
mov
cmpsb
repnz
cmpsl
pop
cmp
insl
cmp
cmc
outsl
xor
lret
jl
je
xor
inc
ja
xchg
outsl
pop
lds
dec
inc
add
xchg
imul
cmpsb
push
sbb
pop
daa
lods
outsl
movq
and
daa
stos
jmp
lcall
jl
mov
sti
bound
mov
bnd
lds
ja
cld
mov
cmc
or
cmp
xchg
ret
pop
sbb
repnz
popf
ret
je
cmp
mov
ret
jbe
ja
mov
mov
pushf
rorl
aaa
dec
inc
mov
mov
mov
addr16
ja
push
fidivrl
lret
xchg
scas
fmuls
pop
ja
lods
push
mov
aaa
push
add
das
int3
ret
pop
imul
jg
mov
pop
fdivrl
imul
sbb
test
inc
les
xor
xchg
jmp
pusha
insl
and
xor
xor
jge
lock
out
pop
jno
inc
in
aas
add
or
mov
stos
insb
rcrb
sarl
mov
js
mov
dec
in
or
mov
or
hlt
and
repz
push
cmpsl
mov
pop
sbb
mov
push
add
inc
push
dec
pop
imul
mov
mov
pop
sub
fidivrl
inc
addr16
hlt
in
fcmovne
cmp
dec
mov
mov
sub
lods
xchg
mov
subl
test
push
cmp
dec
icebp
fiaddl
pop
or
scas
std
mov
mov
cld
push
test
mov
rcll
mov
stc
int
ljmp
jno
cmc
fxch
popf
sub
cmpsb
sub
pop
mov
xchg
adc
cmpsb
bound
and
pop
inc
pop
aad
lea
push
ficoml
divl
sub
ljmp
inc
xchg
ja
mov
imul
orb
push
push
dec
testl
in
leave
aaa
stc
sbb
fsubrl
clc
push
shr
int3
mov
ret
leave
or
out
enter
xchg
je,pt
mov
cli
jae
xchg
in
enter
jge
sbb
jmp
sbb
call
pop
pushf
fnstsw
mov
and
mov
fsubl
ds
jns
hlt
and
imul
mov
jge
and
jle
in
adc
ljmp
pop
add
in
hlt
sub
jnp
jle
bound
movsl
sar
cmpl
inc
xor
sub
gs
in
or
add
call
cwtl
xor
xchg
jle
fcompl
push
stos
push
inc
dec
roll
adc
xchg
dec
in
xchg
lds
xlat
lods
push
mov
aam
ret
add
push
out
aam
hlt
out
mulb
lods
pop
and
and
mov
insb
and
jle
jnp
mov
jns
arpl
fsubrs
or
push
jnp
orb
push
xor
cltd
add
pop
cmp
push
notb
insl
adc
add
std
das
popf
lds
idivl
mov
xor
testb
rcrb
pop
daa
push
out
and
sub
push
test
insb
inc
push
push
mov
or
add
sub
scas
movsb
or
or
leave
dec
int
ja
int3
push
je
shl
rol
pop
std
push
jbe
test
orb
testl
sarl
xor
mov
mov
xor
mov
push
mov
in
pop
fcomp
cld
mov
not
xchg
iret
xchg
pop
shr
mov
jnp
xchg
pop
rclb
sti
sbb
or
loop
cmp
mov
fistps
mov
into
xchg
data16
inc
inc
shlb
xchg
inc
pusha
cmc
pop
subb
mov
repz
pusha
mov
imul
mov
loop
mov
push
mov
bound
inc
cmp
dec
dec
push
pop
jnp
xlat
add
sub
cmpsb
pop
sbbl
sbb
mul
cmc
sbb
mov
nop
adc
fstl
mov
or
push
ficompl
adc
cmp
int
push
loop
std
aaa
leave
adc
sbb
inc
adc
pop
test
insb
mov
les
int3
xchg
shrb
je
outsl
sahf
cmp
xchg
or
cmp
notl
pop
mov
cmc
ret
sbb
xchg
jmp
xorb
jmp
loope
cmc
out
inc
hlt
fs
sub
add
fcoms
sbb
popf
lret
sub
pushf
into
inc
mov
test
imul
push
ret
lret
stos
divb
sbb
mov
pop
cmp
sub
jmp
sti
ret
jnp
xor
int3
aam
fmuls
xlat
and
pop
lret
fisubrl
dec
lsl
icebp
les
inc
notb
ja
xor
push
hlt
in
mov
sbb
bound
cmp
sbb
inc
in
mov
and
in
inc
inc
lea
pop
je
testl
loopne
mov
pop
adc
lds
inc
in
pushf
pop
mov
pop
stc
xchg
push
sbb
cs
movsb
cmpsb
roll
outsb
in
jl
sbb
push
adc
xor
cwtl
pmuludq
adc
push
add
adc
pop
adc
es
xor
inc
or
pop
mov
lods
cld
mul
mov
cs
xorl
xor
inc
pop
mov
and
iret
jg
add
stc
push
mov
pop
dec
pushf
fs
in
cmp
mov
xchg
scas
push
loopne
or
xorb
pop
imul
int
push
fnstsw
sub
add
jmp
fsubrs
sbb
pop
imul
das
fstpt
push
push
cmp
xor
jp
imull
cvtps2pi
or
or
scas
icebp
fidivs
pusha
pop
mov
push
xchg
xchg
inc
addr16
and
or
scas
pop
or
cmp
or
into
dec
clc
fmull
insb
pusha
lret
lret
shrb
cmc
xchg
lods
jns
icebp
push
shl
adc
mov
cmp
add
xor
shlb
or
or
popf
insl
push
fwait
stos
in
arpl
std
or
fs
rolb
out
xor
daa
inc
ret
mov
adc
mov
cltd
jmp
lcall
sub
jle
add
outsb
sub
fs
mov
fsub
sbb
or
cmp
call
dec
pop
xchg
fcomi
je
mov
add
lods
cmp
testb
imul
mov
je
sub
push
pop
rcrl
mov
shlb
andl
pop
adc
or
inc
gs
or
lcall
jo
jp
sub
sti
ljmp
cmp
enter
sahf
lods
loopne
dec
and
test
les
cmp
xor
sbb
add
imulb
inc
xor
and
sbb
daa
cmp
test
or
jbe
repz
call
mov
lret
idiv
lret
dec
xchg
mov
mov
repz
xor
sub
fisubs
sbb
jg
cld
out
cmp
jbe
cmpb
faddl
xor
add
loope
add
inc
jecxz
mov
out
push
aas
push
xchg
add
lahf
mov
in
dec
mov
lods
test
mov
dec
adc
and
mov
andb
dec
outsb
or
pushf
mov
xor
and
pop
jno
lret
dec
shll
adc
cmpsb
test
ss
xchg
dec
clc
mov
xor
dec
inc
sbb
mov
pop
inc
sti
mov
insl
mov
aaa
mov
sub
add
pop
cli
mov
dec
arpl
orl
pop
std
ss
and
cmp
int3
jg
jl
mov
in
adc
sub
ds
je
nop
out
jo
sub
mov
lock
pop
lods
ja
or
or
jo
imul
add
test
xchg
ja
jp
popf
lcall
cmp
aaa
push
mov
rolb
int
out
adc
inc
dec
mov
sbb
or
dec
loopne
imul
xchg
inc
inc
out
xchg
pop
mov
cmp
mov
and
adc
dec
in
add
push
push
cmp
pop
pop
adc
or
push
pop
lahf
jno
push
addr16
lret
dec
add
dec
lods
mov
outsl
ja
pop
aaa
insb
or
jge
cmp
push
das
xor
mov
imul
cmp
repz
popa
ror
cmpsb
push
andl
hlt
fidivl
jmp
jb
lret
push
test
lret
sub
mov
jb
mov
scas
push
fcomi
sub
je
add
adc
into
cmp
lds
sub
mov
pop
stos
jae
mov
movsl
shl
xchg
inc
jecxz
into
jg
add
mov
pop
mov
faddp
notl
xchg
ja
inc
inc
mov
mov
sbb
jnp
pop
movsb
addr16
dec
fdivl
jle
inc
ja
inc
mov
loope
cs
int
jns
mov
aaa
decl
mov
xchg
test
mov
and
mov
or
push
loopne
arpl
cmc
jne
mov
sbb
dec
mov
lods
xchg
and
test
push
lea
add
cs
sbb
or
or
adc
inc
adc
and
test
pop
int
in
es
mov
popf
in
or
call
lds
sbb
add
add
pop
bound
xor
inc
push
or
xchg
push
call
add
vrcpss
movsb
mov
lock
je
mov
popa
add
pop
jo
push
stos
rorl
dec
jmp
je
daa
jecxz
xchg
subb
je
shll
stos
sub
mov
adc
push
shrl
push
sub
lock
hlt
das
in
jecxz
sub
loopne
cmp
sbb
insl
or
mov
inc
cmovp
sbb
bound
shl
sbb
dec
js
lahf
cmp
iret
push
jnp
repz
inc
add
xor
ljmp
hlt
sbb
repnz
push
sbb
mov
add
inc
pusha
push
jne
jmp
mov
mov
loopne
pushf
pop
mov
js
les
adc
out
stc
push
sub
js
test
sbb
or
movsl
fsubrs
mov
mov
push
sti
iret
imul
xchg
pusha
pop
shrb
outsb
dec
stos
mov
popa
test
jbe
mov
pop
test
fcompl
adc
push
cmpsl
jns
and
push
leave
ret
xor
imul
aaa
hlt
mov
loope
xchg
sub
dec
cmpsb
dec
sti
in
loope
dec
inc
mov
dec
js
xlat
movsb
jb
outsb
adc
das
ss
push
inc
sbb
cmp
je
nop
mov
push
icebp
push
and
in
push
adc
jne
in
jmp
add
jno
mov
outsl
loop
ljmp
add
jg
mov
mov
das
sbb
dec
ja
or
sbb
test
or
pusha
mov
xor
and
loop
pop
push
mov
xorl
lods
mov
and
bound
stc
push
xor
or
mov
inc
cmp
mov
jecxz
test
ss
loope
pop
fwait
dec
data16
dec
cmc
or
je
fwait
in
add
or
movsl
popa
pop
inc
imul
xor
stc
adc
mov
popa
imul
outsb
pop
std
xor
sub
dec
lock
not
mov
inc
adc
xor
push
xlat
xlat
or
testb
cwtl
dec
div
mov
push
int3
push
push
fcomps
inc
rolb
cmp
aaa
test
outsb
mov
dec
jle
mov
enter
jg
xor
pop
aaa
inc
or
adcb
test
std
pop
psubusb
push
fidivrl
out
mov
jecxz
adc
fbstp
push
or
andl
jnp
mov
inc
cli
add
or
xor
and
push
nop
in
in
inc
mov
loopne
dec
push
push
in
enter
mov
jo
aad
xchg
xor
adcl
gs
inc
aas
jns
jns
pop
and
imul
xchg
mov
and
imul
cs
cltd
fidivrs
lret
dec
sbb
adc
and
cmpl
adc
ret
pop
jne
adc
mov
iret
nop
imul
xchg
sub
mov
data16
test
pop
push
push
xorl
outsl
sbb
mov
out
cltd
stc
sbb
xchg
add
push
mov
xor
addr16
pop
mov
adc
insb
mov
mov
call
mov
call
add
outsl
shlb
test
add
or
js
inc
pop
iret
and
mov
test
das
push
adc
mov
arpl
out
into
or
rcll
xor
sbb
xchg
xchg
shlb
test
push
lret
xchg
fwait
dec
jb
and
roll
sub
xor
in
jge
repz
mov
sub
jl
add
cs
adc
add
sahf
jo
adc
inc
mov
test
sub
adc
sub
jge
jne
sbb
stos
ficompl
in
push
imul
xor
or
pop
push
adc
push
add
cli
fisttpl
cmpsb
sub
repz
ljmp
lret
xor
xchg
add
push
sbb
sbb
fdivr
adc
jnp
xchg
insl
xor
sti
enter
imul
orb
sbb
xchg
movsl
xchg
mov
mov
mov
test
ds
mov
pop
mov
cmp
add
adc
add
jne
cmp
xor
rcll
jmp
and
in
sub
fisubrs
ljmp
push
mov
bnd
xor
add
clc
hlt
fwait
inc
stc
xor
xchg
pop
or
mov
out
aas
add
dec
dec
push
sbb
pop
lcall
push
icebp
or
xor
mov
addl
jno
mov
cmpsl
les
jbe
leave
inc
mov
ds
xchg
mov
test
xor
cmp
dec
loop
lret
mov
cwtl
or
pop
leave
dec
ret
add
je
mov
lods
cmpsl
or
mov
pop
fnstsw
icebp
cmp
xchg
imul
cmc
dec
nop
jae
push
daa
add
cld
add
test
xchg
mov
in
dec
shll
sbb
mov
test
insb
push
xor
aas
gs
pop
sahf
xor
cmp
and
into
ja
dec
test
cmp
inc
cmpsb
ds
sub
ss
adc
scas
mov
cld
push
es
push
aaa
jmp
xchg
mov
orb
push
lods
xchg
out
ret
mov
insl
xlat
hlt
repnz
add
mov
cmp
adc
dec
fistpll
xlat
cmp
ss
jno
js
gs
fwait
js
push
mov
rorb
outsb
inc
inc
mov
dec
sbb
and
mov
fcompl
pop
dec
ret
popf
jb
int
ljmp
jmp
fs
je
mov
clc
inc
inc
xchg
sub
lea
or
cmpsb
cwtl
test
pop
enter
cltd
xchg
xchg
lds
cld
xchg
insl
sub
xor
movsb
cmp
outsl
enter
ds
lret
inc
and
in
add
aas
xchg
cmp
cli
loop
int3
ja
ss
mov
je
jp
sbb
push
in
ret
xchg
jb
dec
xor
jae
dec
and
push
push
cmp
aas
jg
inc
xlat
outsl
in
xchg
movsb
mov
pop
adc
stos
test
loopne
inc
cmpsl
jbe
adc
mov
jle
sub
and
shrl
std
pop
add
cmp
inc
xchg
lods
or
int
aad
lcall
adc
fs
mov
mov
or
and
cmpsb
and
jo
popf
decl
repnz
pop
cmc
shl
lret
cld
adc
outsl
pop
mov
mov
inc
mov
pop
lods
sbb
call
or
cmp
pop
rclb
inc
push
nop
fbld
xor
xlat
lcall
dec
lea
stos
mov
int
data16
mov
xchg
dec
or
jb
pop
call
lahf
mov
shl
push
jb
stos
fisubrs
add
adc
test
enter
inc
fucom
xchg
cmpsb
fistps
outsl
loope
mov
sti
repz
xchg
dec
mov
inc
mov
pop
sub
cmc
imul
mov
mov
insb
bound
sbb
outsl
or
or
js
mov
fsubrp
cld
mov
std
push
aam
pushf
jp
add
lea
sub
ja
lret
leave
popf
movsb
popa
cmc
mov
or
lahf
cmp
jl
add
test
ljmp
mov
dec
mov
fs
adc
ss
adc
ficoms
gs
jmp
movsw
mov
lret
push
push
std
jo
xor
jmp
pop
mov
hlt
jp
js
push
cmp
fcomip
inc
mov
pop
or
mov
xorl
loope
stos
hlt
mov
pop
movsl
std
add
in
mov
push
test
xchg
mov
aam
sbb
iret
sub
mov
shrl
fldcw
jbe
adc
pop
rorl
rep
lods
jp
je
push
call
xchg
sbb
das
xchg
pop
outsb
cli
mov
pushf
sub
insl
sub
orl
adc
or
mov
pop
out
mov
lds
fadds
stos
mov
xchg
xor
call
mov
loopne
repz
pop
cld
jb
jns
adc
in
push
jg
adc
xor
inc
mov
inc
shll
je
inc
or
add
mov
orb
enter
sbb
cmp
and
dec
addr16
inc
push
call
or
jecxz
mov
call
mov
mov
fwait
pusha
ja
adc
inc
push
addr16
inc
popf
popf
push
fsubr
or
aaa
inc
sti
daa
pop
xchg
inc
popf
enter
lret
adc
mov
mulb
repnz
push
inc
sub
push
fldt
cli
xor
cmp
pop
add
mov
jecxz
jle
jecxz
addr16
xchg
xlat
bound
cs
fiaddl
cld
pop
mov
mov
repz
dec
and
in
into
lret
scas
adc
stos
fbld
inc
sub
mov
adc
mov
aad
jle
fdivrs
xchg
mov
imul
inc
jg
fcoml
mov
push
xor
inc
pop
imul
inc
mov
ds
movsl
idivl
das
dec
das
pop
sahf
rcll
adc
push
lret
sbb
leave
push
repz
add
xchg
adcb
xchg
jb
inc
cld
mov
mov
rcrl
push
xchg
xchg
mov
push
pop
sbb
jnp
xor
xor
jmp
movsb
hlt
aas
sub
loopne
daa
movsl
iret
xor
mov
jnp
add
movsl
loop
cmp
jne
sub
vmovq
in
xor
and
push
lds
mov
and
dec
xchg
or
and
push
aam
outsl
data16
movb
sbb
sub
sub
push
mov
aaa
sbb
pushf
push
inc
rorb
adc
sbb
mov
mov
out
push
adc
jl
aam
mov
jne
cmp
das
ret
jae
xor
test
jnp
das
xchg
into
shlb
mov
mov
and
add
lret
popa
jb
sar
fdiv
or
ds
mov
or
roll
pop
fcoms
dec
dec
mov
lods
pop
fbld
pop
fdivs
ds
loopne
rep
scas
je
xorb
inc
push
movsb
and
ja
movsb
pusha
mov
arpl
in
dec
jmp
push
repz
jne
jns
out
push
stc
cmc
xor
mov
mov
sarl
notb
and
dec
mov
shl
popl
mov
gs
test
in
xchg
enter
gs
mov
push
and
sarl
clc
notb
call
fcoml
jo
sbb
pop
xor
xor
ret
popa
ret
loope
push
jg
enter
cmpsb
push
das
adc
mov
sbb
test
fiaddl
leave
and
xor
fwait
add
outsb
stos
mov
mov
lods
pop
sub
mov
cmp
js
xor
fwait
xchg
into
push
movl
ljmp
dec
mov
xchg
lret
sub
mov
rorl
scas
test
mov
dec
pop
repz
push
adc
dec
mov
mov
push
push
sbb
fisttpl
mov
imulb
and
jb
js
ds
lods
push
fadds
sub
sbb
push
pop
shrl
adc
inc
call
lret
ret
aaa
mov
mov
jno
xlat
ret
and
and
xchg
popa
push
mov
insl
mov
mov
pop
insw
xchg
loop
out
bound
idivb
push
adc
mov
sbb
xchg
mov
sti
cmpsb
pop
and
lret
hlt
dec
cmp
pop
ret
jne
xlat
mov
sub
test
dec
test
jno,pn
cld
repz
mov
xor
aam
mov
scas
jo
sub
dec
lock
jne
lds
cmp
jae
mov
dec
insl
mov
and
pop
shlb
mov
flds
ret
div
shll
subl
ror
enter
cs
movb
pop
mov
mov
shlb
cmp
fcmovnbe
or
cmp
jg
pop
in
imul
stc
in
pop
arpl
push
jmp
xchg
dec
pusha
xchg
imul
pop
fnsave
mov
jmp
data16
movsl
jae
icebp
cmp
cmp
repz
push
subl
loopne
sbb
sub
lahf
push
xor
cmp
or
movb
test
ret
psraw
int
sbb
xor
fbld
daa
out
inc
popa
out
xlat
test
xor
sub
cmpsl
fs
pusha
push
adc
pushf
add
lret
jo
hlt
sub
add
pop
fdivrs
and
lds
xor
aad
imul
imul
push
inc
sbb
mov
pop
mov
stos
pop
pop
mov
into
popa
pop
jbe
std
inc
add
addr16
sahf
jbe
mov
add
mov
push
cmp
mov
push
loope
cli
and
rcr
imul
inc
lods
inc
xchg
mov
mov
dec
pop
mov
in
add
hlt
push
and
pop
mov
xchg
mov
fisubl
dec
add
je
or
cmpsb
mov
or
mov
and
leave
stos
pop
cmpsl
cmc
lods
sub
xor
cli
aam
sub
sub
lcall
cwtl
imul
loopne
pushf
ja
sbb
dec
ficoms
les
inc
iret
ss
adc
shr
xor
push
fisubrs
call
test
in
sbb
mov
dec
sahf
es
movsl
mov
pushf
push
or
daa
imul
insl
inc
aaa
xor
jmp
inc
jno
repnz
aam
add
jecxz
popf
out
mov
orl
add
movsbl
mov
cli
mull
outsb
fwait
das
sub
aas
xor
mov
jp
mov
aaa
cmc
fisttps
fcoml
pop
inc
mov
jle
repz
lock
outsb
jp
inc
fcmovbe
xlat
jns
lret
pop
fnsave
shrb
dec
mov
insl
mov
cld
negb
leave
test
pop
xchg
test
loopne
sbb
pop
dec
jae
fsubs
sbb
in
xor
push
mov
mov
icebp
xor
and
dec
leave
mov
sti
sbb
fs
jb
hlt
rcrb
cmp
scas
ljmp
cwtl
xor
jecxz
in
and
mov
sbb
pop
jmp
imul
and
bound
and
lea
pop
insb
pop
pop
pop
xchg
push
add
aas
pop
call
ret
pop
mov
shlb
insl
rolb
insl
fidivs
pop
or
js,pn
mov
mov
jle
cltd
test
aas
test
stos
repnz
insb
sub
shll
pop
addr16
inc
data16
ds
jmp
sub
pusha
insb
xor
dec
jo
lret
mov
cmp
pop
rorb
fnstcw
sbb
hlt
add
inc
fmul
mov
jg
mov
add
push
ljmp
cmpb
insb
pop
lock
sbb
pushf
mov
sbb
lods
push
int
pop
dec
adcl
push
add
or
mov
stos
jb
jbe
inc
push
lods
sti
bound
in
clc
mov
fs
push
pop
add
lcall
clc
mov
addb
cmp
mull
les
mov
lret
pop
pushf
mov
inc
fsubs
mov
jae
sub
testb
loope
push
lahf
or
pop
cmpb
pop
loop
test
and
leave
or
ss
mov
pop
daa
inc
lods
insb
pop
or
xor
inc
dec
mov
xor
outsl
adc
cmpsl
ret
or
dec
adc
repz
frstor
add
in
lret
les
mov
dec
mov
inc
insl
mov
imul
es
fadds
insl
pushf
mov
or
add
sub
inc
push
mov
xorb
pop
movsl
es
stos
cld
daa
fidivs
std
iret
bound
cmp
es
into
imul
hlt
and
jb
cmp
icebp
int
int3
leave
mov
lock
pop
dec
test
mov
hlt
dec
sbb
mov
mov
lods
pop
fwait
xlat
movsb
lahf
pushf
cmp
into
jne
jecxz
in
scas
idivb
nop
lods
cmp
push
nop
pop
ds
jg
andl
mulb
mov
fdivrl
sbb
shlb
mov
cld
outsb
aas
dec
push
cli
aad
xor
stos
push
int
xchg
mov
ljmp
ror
mov
popf
add
jmp
jae
cmp
adc
push
cmpsl
shll
and
in
bound
ja
repz
test
ja
or
pop
pop
pop
in
mov
sub
sub
push
filds
in
cltd
insb
aam
dec
push
ret
out
lods
andl
lret
and
xchg
in
decl
cmp
inc
and
cmp
cmpsl
in
push
fmull
adc
movsb
jecxz
xor
ljmp
int3
xchg
ret
ja
xor
xchg
jp
movsb
sub
loopne
mov
stc
stc
in
mov
je
movl
mov
push
pop
lret
call
sub
pop
adc
adc
inc
js
test
cmp
jbe
mov
int
and
and
jb
aaa
mov
popf
xor
gs
ljmp
mov
mov
or
lods
out
jno
shl
add
mov
dec
sahf
sub
and
add
or
test
loop
xor
add
inc
cmp
lods
xchg
in
out
sti
and
push
push
cmp
sbb
cmp
jp
fs
mov
cld
fisttps
insb
inc
inc
or
fcomps
fsts
pop
inc
cmp
pop
nop
adc
xchg
in
adc
dec
mov
mov
movsb
aam
test
xchg
mov
mov
cmpl
xor
lods
rol
inc
pop
stos
jp
mov
cmp
repnz
mov
dec
not
or
pop
dec
inc
mov
ljmp
push
jne
push
loope
fnstenv
fisttps
mov
inc
test
je
outsl
jge
mov
xchg
sbb
repnz
pop
popa
jne
lret
mov
mov
or
inc
jns
lea
loopne
sbb
pop
or
inc
cmpsl
mov
sub
movsl
test
add
es
xor
in
sub
clc
push
lods
fstl
lahf
aaa
nop
dec
cmp
andl
jno
aaa
movsl
aam
packssdw
push
inc
jp
sbb
jmp
mov
daa
scas
insl
push
sbbl
movsb
inc
cmp
lea
lahf
in
adcl
js
add
add
mov
pop
adc
sar
inc
mov
aam
lret
push
cli
sbb
mull
sub
subl
dec
jnp
rclb
dec
sub
aam
mov
mov
xchg
in
cltd
jle
clc
loope
mov
addr16
pop
xor
inc
cmp
orb
negl
shlb
int3
stos
xchg
nop
pop
ret
repz
jbe
mov
lock
fldcw
push
in
or
fldcw
out
xacquire
fcomi
stos
mov
xor
push
pusha
pop
fimull
icebp
or
imul
out
mov
mov
mov
test
push
add
loopne
or
jo
push
lds
pop
or
push
mov
cwtl
xor
xor
repz
fsts
ret
xchg
shrl
scas
lcall
aaa
xor
in
mov
jecxz
stos
push
mov
gs
jnp
mov
movl
or
stos
jnp
xchg
cmpsl
sub
add
sarl
ss
sub
xor
dec
clc
shr
xor
fadd
push
mov
push
jbe
arpl
insl
test
add
pop
and
jb
sbb
mov
repnz
lods
mov
lods
test
fdivrl
mov
inc
jle
jne
mov
add
xchg
inc
insl
or
pop
and
mov
popa
aaa
cmp
mov
adc
mov
outsl
add
inc
aam
fdiv
jae
adc
push
and
adc
or
call
cmp
xchg
inc
call
jl
xor
bound
test
iret
aad
pushf
pop
jb
or
popf
fists
cltd
add
ja
lcall
sbb
dec
xchg
mov
push
or
ret
pop
mov
cmpsl
mov
push
adc
repz
push
movsb
addr16
lea
mov
mov
decb
in
imul
jne
dec
lds
mov
fs
iret
js
fldt
imul
xchg
or
pop
pop
mov
fisubrl
adc
pop
pop
pop
inc
sub
push
mov
add
testl
dec
xchg
inc
imul
mov
leave
xor
mov
mov
inc
jns
scas
cltd
stos
xor
push
imul
jp
test
mov
fcmovnb
popa
mov
clc
cltd
mov
les
jge
sub
ljmp
lods
cs
sbb
pop
adc
pop
and
jmp
adc
jl
pop
xchg
inc
adc
call
test
fildl
out
js
iret
fsubrs
xor
jp
cmc
xor
cmp
testl
lock
sbb
rcll
ja
jo
cmp
sahf
inc
fsts
pop
das
add
mov
aam
or
sbb
xchg
lret
add
stos
mov
into
mov
ret
movb
pop
dec
add
inc
or
xor
iret
cltd
xor
dec
mov
shlb
ja
jbe
sub
add
push
movsb
adc
pushf
loopne
and
fcoml
pop
jle
nop
xchg
test
das
ljmp
pushf
insb
adc
mov
sbb
xchg
add
je
sbb
jmp
add
and
hlt
jne
popa
pop
sbb
xchg
and
into
inc
inc
mov
mov
mov
fs
dec
push
xchg
push
test
sbb
xor
movsl
mov
xor
testb
jl
sbb
sbb
adcl
inc
inc
dec
cmp
nop
and
sbb
mov
rol
ficompl
jne
pop
mov
rorl
dec
loope
push
incb
add
and
jge
scas
mov
cmp
jb
or
in
insl
stos
mov
mov
add
mov
in
dec
cwtl
mov
fstl
push
inc
mov
lea
mov
negb
add
fcomp
jmp
xchg
mov
cmp
call
in
dec
dec
push
in
dec
mov
pop
aas
mov
jae
dec
lret
repz
mov
fdivs
cmp
gs
aam
int
mov
pop
mov
test
push
xor
scas
xor
gs
add
or
sahf
call
ljmp
mov
sub
leave
in
pop
mov
cmp
test
repz
rolb
ljmp
fs
out
xchg
xor
or
ret
insb
mov
mov
push
cmpsb
loop
iret
mov
fs
dec
push
jne
cmp
jns
xchg
mov
std
push
pop
push
cmp
jg
rcll
outsb
insb
add
pushf
mov
imul
xor
and
stos
push
rcl
jp
in
adc
xor
pop
loop
mov
mov
sub
addr16
repz
mov
lods
lret
enter
dec
add
and
or
push
sbbl
jmp
sarb
mov
fidivs
and
xor
pop
sbb
std
mov
adc
jmp
mov
push
mov
and
mov
in
and
sbb
inc
jp
push
rcrl
cmc
jne
sub
dec
jecxz
sub
inc
loop
sub
fidivrl
mov
cli
out
xchg
mov
ljmp
inc
sbb
inc
int
js
cmc
cmp
lahf
xor
or
mov
pop
imul
sub
aaa
out
xchg
enter
fnstsw
leave
adc
adc
jno
out
aam
data16
and
mov
in
xlat
xchg
lret
jne
aas
sbb
jns
ret
jle
lret
and
sub
sbb
sbb
push
xchg
insl
dec
cwtl
jle
stos
mov
daa
out
es
inc
int3
inc
sarl
jbe
or
movsl
repnz
cmp
sbb
pop
cltd
and
pop
bnd
sti
xor
xlat
xchg
mov
sub
in
loope
aaa
push
fists
test
dec
scas
leave
jle
repnz
xchg
dec
push
icebp
lret
sahf
mov
test
sub
adc
insb
jns
mov
aam
stos
ljmp
sub
inc
iret
arpl
scas
lret
pop
lock
ret
aad
test
cld
popa
sub
or
sub
cmp
mov
jne
jmp
xchg
shlb
and
inc
xor
xlat
fsubr
pop
or
pop
cs
sbb
das
push
or
roll
jae
cmp
cmp
pop
sbb
arpl
andl
xor
cmp
mov
jge
lods
addl
add
pop
fidivs
sub
push
aaa
inc
jl
pop
insb
dec
repnz
stc
lret
mov
cld
sarb
es
orb
and
xchg
fsubl
dec
push
or
inc
mov
in
inc
jge
je
fiaddl
and
cmpsl
push
into
daa
mul
xor
cmp
aas
push
jnp
sub
test
fnsave
icebp
sub
int3
sub
dec
js
jecxz
xchg
pop
ret
and
or
jb
lcall
jne
pop
ficoml
inc
mov
ja
aam
mov
pop
dec
xor
and
stos
mov
test
ja
xlat
out
xlat
lods
sarb
lods
ret
sarl
je
dec
sbb
and
xor
outsl
insb
mov
or
sub
sbb
imul
jmp
sub
and
clc
fbstp
int
fmuls
xchg
lret
lods
and
mov
sub
jns
and
mov
insb
cmp
sub
mov
jb
loopne
cmp
mov
pop
cmpl
mov
aam
in
jecxz
fsub
xchg
jbe
pop
mov
push
add
fst
xor
jbe
cwtl
add
in
jnp
adc
push
adc
stc
sbb
pop
pop
cwtl
call
and
jb
std
sbb
and
push
cmpb
out
jge
xchg
mov
pop
jmp
mov
pop
inc
fsubr
fcomp
outsl
test
mov
push
sub
jmp
cmp
aam
or
xchg
into
sub
push
jno
out
xor
int3
mov
jle
xchg
dec
out
push
pop
pop
sbb
arpl
sub
and
int3
shll
imul
sbb
pop
push
push
gs
pop
push
push
adc
testb
fsts
fadds
mov
or
pop
repz
das
mov
addr16
inc
jnp
dec
repnz
vorps
stos
xchg
hlt
repnz
std
or
xchg
lea
and
mov
imul
mov
dec
cmp
push
jge
push
or
push
jg
pop
adc
sub
pop
mov
dec
icebp
mov
cltd
call
inc
movsl
xor
sbb
jle
sbb
xor
lahf
dec
ret
nop
popa
fisttpl
imull
mov
and
je
icebp
or
imull
les
cltd
cmpsl
mov
and
ja
int
mov
dec
cmpsl
subb
xchg
in
daa
repnz
and
or
fisttps
pop
sbb
jns
push
inc
dec
fwait
push
lcall
xchg
and
jge
ficompl
dec
pushf
push
push
adc
push
jne
mov
das
jge
push
rol
cltd
and
pop
loopne
xor
and
inc
fs
mov
les
orl
lahf
dec
mov
or
mov
mov
in
sub
mov
add
dec
mov
mov
pop
xchg
test
repnz
mov
mov
movsb
mov
dec
and
sbb
jo
test
dec
jmp
mov
dec
leave
stos
dec
rolb
int
imul
ret
scas
xor
movsb
sub
push
dec
ficoml
pop
in
loope
aaa
into
jecxz
mov
aaa
mov
enter
ficompl
push
arpl
gs
mov
dec
cltd
mov
pop
ljmp
aaa
xor
mov
or
mov
pop
push
jne
icebp
pop
or
pop
jbe
dec
test
xchg
pop
aaa
mov
andl
imul
stc
fisubrs
std
in
mov
jbe
nop
and
dec
ret
and
bound
ficompl
xor
jno
decl
pop
mov
mov
pop
nop
shrl
test
lods
nop
jb
imul
shl
test
orb
xor
cmpsl
mov
fst
pop
xchg
addl
addl
aam
outsl
aas
inc
outsl
cmp
inc
mov
or
mov
mov
xchg
push
inc
push
mov
sub
enter
cmp
add
lahf
cmp
pop
xor
jno
aad
outsb
dec
inc
pusha
jno
ds
test
dec
sbb
jmp
pop
scas
cmp
dec
loop
sbb
hlt
adc
adc
mov
adc
fwait
pop
jg
stos
ret
loop
pop
sbb
jae
and
xchg
add
mov
fcoms
rolb
lock
cli
pop
std
sbb
sti
cs
or
mov
jo
imul
test
and
fisttpl
cmp
loopne
sbb
pop
pop
push
aad
push
movsb
sub
mov
inc
in
mov
sbb
sub
ss
or
mov
fdivrs
call
pushf
int3
adc
and
stos
rep
add
call
scas
add
loopne
pop
and
rolb
cmp
xlat
out
mov
cmp
mov
test
mov
sub
fldl
adcl
push
mov
add
and
lea
bound
repnz
incb
icebp
rcrl
js
orb
inc
int
aas
outsl
add
sbb
pop
xchg
mov
ret
jmp
sbb
sbb
fwait
xchg
mov
dec
jmp
push
sbb
or
sbb
jns
lret
aaa
cwtl
mov
lods
pop
push
cmpsl
mov
pop
jle
pop
and
bound
imul
push
out
jmp
repz
in
cli
rcl
xorb
inc
jl
popf
mov
rclb
scas
xchg
divb
in
int3
pop
add
adc
es
repz
mov
mov
dec
ds
xchg
pop
jo
and
jb
pop
je
sarl
jbe
cmp
sub
add
imul
jo
movsl
xchg
lret
jle
xchg
dec
lahf
mov
pop
lret
aam
jecxz
xor
fcmovne
mov
testb
outsb
mov
icebp
cwtl
sub
ja
dec
xor
cmp
mov
add
mov
addb
cmp
push
and
and
fildl
sub
pop
lds
mov
ds
notb
in
sarb
adc
inc
xor
jnp
or
mov
push
sbbb
cmpl
fcoms
cltd
test
mov
mov
or
nop
adc
rorl
xchg
cmp
mov
xlat
push
out
lahf
daa
imul
push
mov
mov
mov
and
scas
mov
lds
pop
pop
in
hlt
ret
pop
shrl
aas
insl
dec
or
cs
cmc
imull
add
and
cmc
mov
or
data16
out
adc
mov
lods
push
add
dec
sub
cmp
push
rcll
dec
jbe
or
mov
arpl
pop
pop
push
repz
imul
int3
pop
sub
mov
lds
fstl
xor
add
adc
pop
jge
inc
iret
ds
test
push
addr16
nop
fucomp
mov
add
mov
mov
fucomip
and
or
adc
mov
pop
add
inc
xor
lods
mov
push
not
or
pusha
sub
adc
pop
mov
sbb
jp
cmc
imul
dec
dec
mov
mov
jmp
and
push
dec
mov
cmpsl
or
pop
dec
xor
je
lock
adc
push
repnz
adc
cltd
andl
dec
clc
pop
rcrb
movsb
xchg
es
lock
std
pop
out
into
xchg
sti
jb
sbb
cmpsl
mov
sbb
enter
aaa
int3
test
mov
out
mov
shl
insl
ret
fsubs
iret
pop
bndldx
dec
xchg
jge
mov
out
mov
lcall
xchg
loop
aas
add
loop
mov
pusha
jo
dec
fistps
push
sub
push
int3
add
mov
push
test
xchg
mov
sbb
xor
gs
addl
inc
or
mov
mov
lods
test
pop
dec
fidivs
jl
or
andb
pop
inc
jecxz
fimuls
ja
hlt
push
cmp
lods
cli
aad
sti
push
xchg
cld
dec
leave
sub
sub
dec
outsl
cmp
xchg
repz
int3
push
iret
and
movsb
sub
arpl
aam
call
mov
push
aam
cmpsb
push
cmc
pop
das
imul
enter
xchg
xor
daa
in
ljmp
mov
adc
jb
push
shl
fsts
jb
iret
cmp
lods
fidivrl
test
jle
jne
test
rcrb
xor
rorb
add
iret
add
jl
in
xor
lret
jmp
pop
jmp
jge
test
push
aaa
es
push
mov
mov
push
call
push
and
dec
mov
int3
ss
pop
roll
inc
ja
push
cmpl
inc
jne
jle
inc
repnz
xorl
fnstcw
inc
or
sub
testb
mov
sbb
ss
inc
daa
xchg
xchg
push
pop
dec
repnz
adc
jnp
pop
pop
dec
push
lcall
aam
lea
test
into
sub
aas
mov
jge
jbe
pushf
mov
js
push
fcmovu
faddp
add
push
ret
adc
pop
cmp
fiaddl
jns
ja
push
sbbb
or
loope
adc
push
push
int
aaa
dec
pusha
lods
repnz
movsb
and
xchg
cmp
scas
aaa
mov
clc
cmp
int3
cmp
fidivs
lret
push
jmp
in
popa
nop
imul
daa
mov
lcall
lock
or
in
arpl
in
lret
pop
or
sub
adc
ja
xor
addr16
sub
jno
and
fs
insb
aas
cmp
adc
fadd
pop
and
mov
jle
xor
adcb
add
pop
insl
imul
adc
push
popf
add
xor
jle
dec
push
pop
movb
mov
lret
aad
lea
jg
or
pop
push
out
mov
bound
aaa
sbb
dec
repnz
das
xchg
out
inc
repz
push
sbb
push
jb
mov
sbb
sbb
stc
outsl
out
lods
cmpsl
ljmp
inc
cltd
push
sub
jecxz
test
in
cmp
pusha
pop
repz
mov
lods
lods
fiaddl
pop
mov
fstps
into
aas
inc
repnz
push
mov
xchg
and
mov
lahf
xor
push
rclb
les
fstpt
je
xor
cmp
mov
sbb
test
ret
popa
cmp
pop
repz
mov
add
mov
mov
sub
push
int
pop
push
loopne
inc
xor
mov
mov
fdivrs
stos
push
ficoms
jns
inc
rcll
xchg
jo
lcall
dec
mov
fwait
rorb
mov
xchg
out
rep
sbb
loope
push
jl
dec
pop
aad
into
pop
mov
xor
pop
push
int3
mov
pop
shll
cmpsw
lea
dec
cld
out
insl
inc
and
into
in
stos
mov
hlt
jne
jno
mov
mov
lahf
mov
xchg
jbe
roll
pushl
jns
cmp
xchg
mov
sbb
cltd
cld
dec
jmp
push
and
lods
lods
das
repnz
sub
stos
mov
xor
inc
push
cmp
xchg
sub
pop
mov
sub
arpl
out
leave
xchg
jae
fsubrp
jne
pop
xor
push
or
xor
push
loopne
push
fs
fbstp
pop
dec
push
mov
cltd
xor
add
es
adc
inc
pushf
pushf
mov
sub
jns
xchg
adc
adc
scas
add
or
das
shll
cmp
mov
adc
mov
fldt
clc
push
jmp
mov
data16
lret
push
repnz
xlat
loopne
xchg
mov
scas
xchg
cli
test
pop
stos
imul
shll
fimuls
mov
lods
lock
data16
scas
inc
cmp
pop
mov
cmp
sbb
mov
mov
mov
lcall
mov
pop
mov
mov
fcoml
gs
xchg
lods
in
nop/reserved
das
sbb
adc
test
and
fsub
jle
fdiv
xchg
pop
push
gs
push
sahf
jecxz
fwait
xor
pushf
sti
sbb
rorb
pop
cmp
adc
cmpsl
fdivr
shll
sbb
adc
pop
push
mov
push
add
sbb
jb
inc
iret
adc
ss
outsl
adc
int3
pushl
das
xor
in
gs
add
hlt
and
loop
xchg
pop
xchg
lret
mov
sbb
jmp
add
xchg
add
and
xchg
mov
insl
arpl
call
rcrb
addr16
mov
or
loop
mov
pop
test
out
xchg
loopne
or
cmp
xchg
ss
dec
inc
cwtl
fadd
out
xor
cmp
xor
mov
js
sub
das
out
xor
mov
jne
ret
cmp
cmc
dec
xor
ljmp
sarb
adc
and
jp
push
lock
inc
dec
shl
pop
mov
test
aad
xor
inc
enter
jecxz
popf
movsl
clc
dec
and
xchg
mov
imul
fstpt
lods
or
pusha
dec
mov
addr16
lret
movl
dec
in
add
cmpl
adc
or
aad
push
loop
cli
test
dec
gs
es
sub
lea
xor
pop
xchg
dec
inc
ss
xor
test
ret
sbb
cmpsb
cwtl
test
pop
add
sub
ljmp
stos
mov
cmp
clc
enter
cmp
lods
xor
out
lcall
pop
ret
sbb
jle
pusha
aad
mov
lcall
push
mov
xor
mov
inc
push
push
out
shll
or
pop
or
jnp
shr
cld
fs
jno
sbb
clc
xchg
pop
push
sbb
shrl
push
hlt
outsl
xchg
addl
cli
xor
or
add
inc
adc
xchg
xor
shlb
pop
dec
jp
and
aam
andb
sahf
out
ss
int3
mov
push
pop
mov
lahf
daa
mov
push
jnp
xor
hlt
into
cmp
xchg
leave
ficomps
mov
push
mov
dec
mov
cmc
nop
aas
lret
xor
dec
xchg
mov
fistps
in
lods
inc
or
mov
sub
push
xlat
lcall
rcrb
jp
in
sbb
mov
fisubl
ljmp
jp
aaa
and
and
lods
stc
xchg
add
in
out
sar
jnp
pop
cwtl
clc
xchg
push
push
inc
mov
pop
insb
jmp
push
div
mov
dec
clc
mov
or
leave
and
adc
pop
ja
lcall
or
xchg
push
or
lret
mov
es
repnz
out
sub
leave
inc
push
aas
dec
ja
xchg
out
cs
lods
jg
sbb
xor
cli
mov
mov
stos
fisttpl
sar
dec
clc
lock
shl
mov
xor
push
js
xor
push
int
call
sbb
dec
sbb
cmc
xchg
mov
xor
lcall
xor
popf
call
js
sub
dec
gs
mov
push
ret
fs
mov
mov
fst
sbb
or
push
stos
adc
sarl
ds
test
xchg
ja
cmpsl
sbb
jp
test
out
sub
fsubrs
and
ret
addr16
cmpb
rcrl
adc
imul
cs
mov
and
pop
jb
arpl
lea
sub
mov
cmpsb
ret
lods
mov
sub
xorb
fsubs
inc
jns
push
pushf
outsb
out
sbb
stos
xlat
in
leave
in
pop
jno
xchg
loopne
rcl
cmc
jno
cmc
push
push
fwait
jge
dec
js
or
adc
or
div
mov
xor
out
dec
jmp
cld
rcrl
stos
roll
icebp
mov
dec
in
in
cs
add
xchg
pop
sub
add
pop
cmp
and
movsl
xor
ss
rorl
lret
rcrb
nop
lea
aaa
sbb
push
mov
jb
lret
xor
sub
jb
movsb
add
add
movsl
mov
test
mov
adc
ret
mov
movsl
and
mov
adc
ljmp
mov
into
jb
ljmp
xchg
cmp
mov
cld
out
mov
push
insb
jno
int
test
jle
lret
std
aam
movsb
ds
xchg
push
lea
rclb
mov
std
call
push
xor
xor
scas
sub
popf
inc
insb
mov
nop
lahf
fsubl
jbe
out
sbb
mov
cmp
jb
sub
insb
outsl
fistpl
add
sub
push
scas
jle
enter
pop
and
lds
insb
hlt
nop
add
les
jmp
xchg
ds
lret
movsb
pusha
out
pop
sbb
rclb
mov
js
push
out
fists
add
aaa
jno
jnp
stc
cmpsb
in
repz
scas
xchg
mov
cmp
xor
nop
scas
jl
ficoml
pop
lods
dec
leave
nop
jb
sub
mov
loop
xor
sub
lea
xchg
fildll
call
mov
mov
scas
push
mov
jl
nop
rcrl
mov
jmp
scas
stos
jnp
mov
fdivrl
jl
or
mov
adc
pop
inc
inc
nop
push
cmp
push
pop
cmp
xchg
mov
cmpsb
xchg
fwait
xlat
leave
scas
xor
sti
je
movsb
sahf
nop
xor
xchg
xor
sub
out
add
aad
or
and
in
fsub
cmp
push
aam
ret
hlt
mov
lods
inc
xor
add
or
xchg
dec
imull
mov
pop
xchg
test
aam
mov
and
int
pusha
insl
jl
dec
ljmp
add
lcall
shll
stc
push
data16
dec
stc
fs
adc
stos
pusha
rol
scas
sub
les
adc
push
repz
jb
call
jae
cld
or
incb
mov
xchg
xor
es
pop
rolb
pop
xchg
sub
mov
jne
jecxz
stos
jg
inc
xchg
mov
adc
orb
lock
mov
outsb
pop
aaa
into
movsl
sbb
ret
push
lret
mov
imul
je
mov
stos
cs
adc
je
inc
push
pop
xchg
add
mov
roll
fcomps
cmpsb
stc
pushf
push
sub
ficoml
fstpt
or
leave
jmp
scas
and
mov
fsubrl
in
adc
add
sbb
mov
or
in
mov
mov
int
mov
jmp
nop
cmc
mov
in
jb
xor
ss
sub
in
adc
adc
fistps
mov
and
pop
add
mov
or
fsub
sbb
cli
push
in
clc
mov
pop
lcall
push
in
and
mov
sbb
les
filds
push
adc
filds
sbbl
repnz
clc
sbb
shlb
xchg
scas
pop
xchg
into
and
iret
mov
jle
dec
insb
icebp
negb
adcb
push
dec
decl
aad
sbb
sbb
push
mov
ret
mov
xor
das
leave
sbb
insl
cmp
pop
sbb
cld
fadds
mov
push
and
lahf
andb
sbb
dec
arpl
sub
shlb
loope
aas
sti
cli
in
xchg
add
jg
ja
adc
push
cmp
ret
lret
ljmp
pop
sahf
pop
and
sahf
nop
pop
push
outsb
sbb
jae
ss
pop
dec
fs
push
jnp
cmp
aam
cmp
mov
push
push
pop
pop
in
outsl
mov
pop
insb
addr16
std
out
mov
fdiv
mov
push
ret
xchg
dec
sbb
pop
dec
inc
or
out
shll
fwait
std
pop
xchg
mov
pop
jne
test
cmp
jmp
pop
lcall
cld
sbb
shrb
nop
or
jo
icebp
adc
lret
inc
das
loop
add
test
loop
pop
in
sbb
shrl
cmpsl
scas
and
sbb
cmp
bound
fcmovu
mov
xchg
push
sbb
outsl
stc
jbe
ret
jno
fldcw
test
pop
ret
jne
call
mov
aaa
ret
decb
ds
arpl
pop
fs
call
push
pop
pop
add
push
stos
add
scas
add
xchg
mov
sbb
cmpsb
jle
shll
sbb
jle
sub
stc
test
sub
shlb
test
insb
cmpb
sub
sbb
dec
movsb
push
dec
or
adc
cmpsl
call
inc
es
icebp
inc
mov
aaa
pushf
or
fwait
mov
jmp
repnz
ret
shll
aam
cmp
xor
fcom
dec
cmp
push
cli
pushf
and
leave
fwait
pop
mov
cs
inc
negb
push
jl
orb
stos
fsubs
mov
sub
or
cs
icebp
pop
adc
psubsw
jmp
popa
xor
cmp
xchg
cmp
mov
shrl
xchg
xchg
mov
adc
call
xchg
mov
sbb
aas
clc
lods
lea
push
xchg
inc
mov
pop
dec
cmc
xchg
jns
insl
ret
lcall
mov
push
outsl
fs
dec
adc
sbb
jmp
ds
arpl
cmp
not
imul
out
out
andl
mov
pop
mov
xchg
mov
outsl
pop
sbb
pop
cltd
mov
rolb
test
sub
jle
loope
pop
pusha
iret
test
das
inc
jg
iret
mov
je
sub
imul
xorb
pop
mov
aad
xchg
std
lds
push
push
sahf
stos
pop
cwtl
push
lcall
and
mov
or
pop
and
adc
dec
mov
cmp
test
ret
into
gs
cmp
fldcw
ret
test
dec
adc
inc
loope
out
mov
popa
sbb
arpl
xor
std
pop
movsl
mov
testb
mov
jecxz
sub
mov
test
mov
sbb
mov
jae
sub
adc
or
lods
fildll
dec
pop
pusha
rorb
inc
cltd
mov
scas
xor
mov
or
jecxz
cmp
cwtl
mov
xchg
out
test
mov
fs
scas
clc
mov
mov
jb
cs
sti
pop
mov
inc
xor
lret
mov
lods
std
lea
or
cmp
movsw
aas
ja
pop
cltd
popa
lock
les
sbb
xchg
pop
push
mov
add
and
adc
lds
je
and
les
je
dec
pop
sbb
repz
loopne
push
loopne
cltd
les
sub
je
stos
hlt
movsl
addr16
mov
add
mov
ja
loope
or
cmp
adc
push
jae
popa
mov
pop
les
gs
movsb
mov
xor
jmp
pop
dec
cmpsl
sbb
outsb
movsl
xchg
lods
sbb
cmp
mov
add
push
cld
mov
imul
or
es
sub
pop
cmp
adc
push
es
roll
mov
rdmsr
mov
xorl
or
and
scas
jns
arpl
int
add
cmc
je
mov
lcall
push
xchg
cwtl
xchg
push
cli
sbb
push
or
jp
jne
xchg
or
js
mov
popa
shl
out
fwait
push
sbb
xchg
xor
jb
adc
hlt
inc
jp
inc
lret
into
popa
jns
in
xchg
sub
pop
mov
sub
mov
jmp
cli
clc
jl
jg
push
and
shrl
cmpl
aaa
xor
jne
mov
enter
sub
jl
leave
fildl
popa
ljmp
adcl
mov
ja
adc
scas
and
sti
push
pop
loope
add
lret
lret
daa
test
cmp
mov
dec
ret
cmp
ret
pop
mov
cmp
adc
daa
dec
push
repz
in
pop
xor
pop
pcmpgtw
les
repz
negl
ret
mov
fs
scas
adc
test
fidivrs
rclb
test
push
ss
lock
loop
sahf
out
enter
and
lds
mov
ja
xor
jnp
lsl
jmp
jmp
fwait
dec
xchg
push
xchg
in
jge
xchg
je
int3
xchg
lcall
sub
cli
xorb
mov
xchg
add
mov
imul
test
pop
orb
add
aas
out
cs
adc
orl
addb
les
lahf
xchg
add
int3
push
adc
mov
mov
sbb
je
and
das
lret
cmp
pop
pushw
and
mov
cmp
outsl
xor
xchg
imul
insb
mov
mov
or
xchg
lds
cmpsb
adc
or
cmpsb
loop
in
push
push
outsb
inc
dec
xchg
ss
ja
dec
mov
mov
jg
fwait
movsb
sbb
jge
cmpsl
mov
or
dec
icebp
add
insl
xchg
adc
in
jbe
adc
cld
adc
xor
jl
aam
aad
js
xchg
shrl
jge
xor
mov
xchg
pop
repnz
xchg
sub
sti
leave
push
or
das
pop
add
stc
jp
mov
bound
mov
pop
loop
jnp
imul
pop
out
adc
movl
add
push
and
sti
mov
rorb
cmpsb
and
sub
gs
or
scas
lods
int3
in
dec
push
stos
and
jo
stc
adc
jnp
pop
fsubl
jmp
adc
inc
mov
xchg
jno
jmp
cmp
fstp
pop
ret
addr16
lea
add
insb
int
sete
and
pop
lcall
sub
addr16
inc
or
cmp
scas
jne
mov
mov
lcall
cmp
out
or
test
roll
push
push
push
out
push
fdivp
mov
add
mov
out
inc
lods
and
out
mov
aam
out
mov
dec
test
jns
jmp
addl
sub
sbbb
rcr
mov
stos
cwtl
rcl
mov
pop
xor
fwait
cmp
inc
jl
pop
mov
in
inc
in
push
adc
xor
adc
lret
jp
testl
rcll
ja
adc
or
xchg
aam
in
movsl
mov
mov
push
push
test
icebp
sub
xor
mov
jge
xor
jne
xchg
mov
std
sub
fistps
test
popf
dec
dec
in
fsubp
xchg
mov
inc
jbe
and
std
sub
jmp
push
inc
fistpll
test
fstl
loopne
cli
xchg
pop
fldenv
push
sbb
sub
cmp
inc
shlb
sub
aad
adc
push
pop
fwait
rorb
push
les
fidivl
mov
push
addb
les
cmpsl
push
mov
push
insl
add
cmovne
fsubl
das
push
pop
mov
jge
pop
fiadds
mov
push
mov
mov
mov
jo
xchg
jmp
adc
or
mov
cwtl
lea
xlat
je
ds
fimuls
loope
adc
stos
cmp
arpl
jge
pop
xor
mov
mov
adc
lcall
dec
dec
mov
mov
jge
nop
lahf
push
test
aas
fidivl
aad
mov
push
fmuls
test
xor
adc
sub
mov
jbe
sbb
or
rcrb
mov
mov
lea
mov
loop
lods
dec
pusha
out
jmp
mov
sahf
jmp
sbb
mov
hlt
ret
pop
xorl
inc
jns
mov
push
jb
xchg
not
sbb
pop
inc
xchg
loop
or
xor
jge
pop
dec
or
je
into
int
dec
mov
xor
pusha
or
lret
mov
mov
rcrb
xor
aam
fwait
fwait
push
xchg
mov
add
in
pop
bound
pop
adc
lods
and
dec
pop
cltd
loop
outsb
inc
mov
push
xchg
test
fxch
mov
jno
push
mov
dec
inc
ret
nop
test
xchg
fists
sbb
roll
mov
pop
lds
popf
add
xchg
push
stos
mov
mov
cmpsb
cmpsb
mov
cmp
call
xchg
sti
xor
out
mov
inc
mov
push
pop
lcall
inc
mov
sbb
mov
sbb
cli
imul
jbe
pop
addr16
in
pusha
xchg
adc
mov
clc
lds
mov
call
mov
or
movsb
jbe
out
jle
push
es
mov
inc
test
push
sub
fsincos
jo
call
inc
orb
xchg
aaa
mov
fsts
int
push
mov
mov
iret
push
scas
cld
jns
mov
dec
ret
adc
jp
mov
mov
dec
js
stos
mov
pushf
mov
push
sbbl
mov
adc
push
mov
cwtl
popa
sbb
stos
push
vpmaxub
push
and
fcomp
sbb
insl
mov
jmp
adc
test
sub
or
ret
push
pop
xor
xor
lock
dec
pop
xchg
and
adc
xor
xchg
pop
push
fldt
dec
sub
push
les
lahf
add
mov
pop
pop
push
sub
movsl
hlt
pop
iret
inc
mov
cld
outsb
xlat
xor
add
stos
xor
jns
push
addr16
je
int3
add
arpl
jb
xor
lea
inc
sahf
inc
adc
or
pushf
repz
inc
outsb
jmp
and
jmp
clc
mov
popf
jnp
sub
lds
lods
orl
sbb
inc
xor
and
inc
pop
inc
mov
and
jg
mov
aas
aad
lock
in
fiaddl
aam
fildll
push
rcr
cmp
sub
jns
ret
movsb
mov
jl
testb
sub
inc
cmpsl
and
insb
jg
fwait
xchg
mov
movsb
xchg
push
mov
add
and
pop
add
and
in
jp,pn
dec
xorb
cli
dec
pop
test
adc
mov
fisubrl
adc
mov
or
ds
outsb
insb
dec
cs
test
dec
mov
jbe
sbb
int3
cld
sarb
addr16
ljmp
testl
adc
cmpsl
mov
mov
pop
lret
pop
loop
decb
movsl
add
pushf
rcr
jne
push
fs
mov
jmp
lcall
xchg
xchg
push
dec
aaa
ds
mov
cmpl
add
sub
add
call
jbe
nop
sbb
dec
or
adc
add
shll
sub
rcl
repnz
stc
adc
xadd
cmpsb
mov
jne
push
mov
hlt
lret
fldl
adc
pop
or
add
jp
div
mov
cld
imul
mov
scas
aad
jns
sub
and
dec
stos
fwait
mov
dec
insl
faddl
adc
push
inc
test
jns
pop
repnz
push
shrl
out
dec
and
nop
push
and
push
xor
out
mov
rol
mov
lea
cmpsl
sahf
sar
push
dec
js
scas
and
sahf
mov
inc
outsb
sub
out
lea
sub
lods
in
pushf
mov
adc
mov
and
xor
data16
ljmp
nop
js
dec
mov
shl
jo
in
fdivrl
stos
arpl
movsl
or
fstpl
sbb
jg
cs
cmp
rcll
mov
sar
sbb
xchg
xchg
cmc
das
mull
bound
jae
pop
pop
xor
fcmovnb
jae
adc
divl
stc
dec
or
xor
jp
add
decb
rcrl
out
add
push
lret
fs
incl
and
push
jle
aaa
and
push
xlat
lea
pop
loope
insl
clc
jecxz
cld
mov
xor
insl
fbld
xor
lahf
mov
mov
sub
outsb
mov
push
sbb
lcall
xchg
mov
daa
stc
icebp
inc
in
add
sub
push
mov
pop
enter
addr16
cltd
repz
test
or
aad
js
jl
fidivl
xchg
cmp
outsl
dec
enter
push
stc
adc
ljmp
ret
push
jg
mov
addl
imul
adc
mov
nop
es
mov
mov
ljmp
repz
dec
arpl
lods
mov
ss
lods
shlb
mov
jno
aas
rcl
fs
inc
aad
inc
loope
fcoml
jg
adcb
std
out
pshufw
pop
lcall
das
int
cmp
rolb
dec
add
insl
push
adc
sub
add
popf
sar
xchg
mov
repz
out
pusha
xor
into
clc
int
cs
xor
insl
push
jo
adc
or
xor
sbb
bound
mov
nop
negl
shlb
outsl
push
cli
inc
dec
sbb
cmc
ret
push
dec
cmp
aaa
enter
xchg
mov
cmp
pop
push
inc
bound
dec
fnstsw
sbb
push
push
rcrl
xor
inc
push
or
fistl
mov
popa
lods
xchg
scas
popf
iret
mov
faddl
mov
fldl
lods
sar
lods
jno
into
daa
sub
lods
shr
cmpsl
pop
data16
cwtl
sahf
shrl
ret
cmpsl
inc
outsb
cli
cmp
addb
push
cmp
iret
mov
mov
imul
movsl
roll
dec
mov
cmc
add
jne
jle
adc
sbb
fcmovb
xchg
jg
mov
shl
push
or
cmp
pop
lret
and
pop
jae
dec
mov
loopne
in
adcb
in
imul
pop
mov
and
insl
dec
jne
idiv
mov
jg
call
callw
idivb
out
repz
cli
es
cmp
pop
fisttpll
daa
sbb
subl
cmpsl
out
int3
mov
pop
cmp
pop
mov
lahf
xor
jp
add
jns
inc
loope
ror
dec
cwtl
mov
pop
out
dec
push
push
pop
sbb
pop
dec
arpl
mov
pushl
dec
adc
jmp
outsb
mov
pop
sub
out
lods
arpl
mov
ret
mov
inc
fsubrs
xor
inc
out
sub
nop
pop
push
xchg
ja
inc
sbb
jnp
lea
int3
jle
cwtl
pop
andb
ja
xlat
ficomps
inc
jno
arpl
outsb
in
stos
in
lods
int
leave
ror
jo
mov
or
popa
pop
jmp
jp
cmp
jp
push
sub
out
mov
push
stos
mov
mov
loop
iret
aad
clc
clc
stc
mov
js
imul
pop
data16
nop
fsubs
jne
jecxz
and
rcrl
xor
jecxz
roll
popf
and
int
clc
xor
loopne
js
imul
out
int
iret
mov
cmp
pop
inc
cmpsb
push
iret
mov
outsl
or
mov
mov
add
jbe
inc
out
mov
rorl
sbb
sub
mov
jg
xor
cmp
fcompl
pop
pop
inc
sub
inc
sbb
lds
add
mov
inc
repnz
fmulp
ds
or
xchg
in
js
mov
scas
and
jns
mov
in
ljmp
xor
jp
add
popf
pop
mov
add
mov
dec
xorb
loope
nop
sbb
cltd
pop
test
lcall
scas
xor
inc
push
addr16
das
int
subl
mov
mov
pusha
push
jp
enter
sahf
nop
xor
mov
jge
push
mov
lds
xor
movsl
xchg
pop
test
leave
pop
add
and
and
movsb
cs
fwait
lods
cli
dec
jns
adc
or
out
bswap
pop
mov
push
fimull
mov
mov
cs
test
adc
aam
mov
adc
inc
fsubl
sub
fdivl
sub
je
mov
js
or
sub
add
loope
repnz
mov
outsb
cltd
mov
in
mov
in
mov
add
lock
xor
pop
test
fisubl
sbb
sub
adc
aad
sbb
clc
push
and
xchg
mov
stc
sub
in
sub
lock
xor
in
movsb
push
inc
out
xchg
mov
and
lods
fcmovu
adc
aam
stc
lret
jge
add
in
clc
cmp
scas
jne
and
out
mov
add
rorb
mov
lea
xchg
lods
test
enterw
out
test
repnz
add
sub
les
mov
sbb
push
xlat
dec
in
out
js
xchg
push
lock
stc
xchg
fsts
notl
push
out
adc
dec
lret
push
cmpsb
mov
mov
gs
imul
jbe
bound
push
xchg
inc
pop
cmovs
sub
mov
pusha
mov
leave
fdivrl
cs
bound
inc
mov
jl
fs
sub
in
and
pop
pop
push
jmp
cld
daa
lcall
xchg
movb
xchg
loope
add
arpl
ljmp
shll
fwait
mov
mov
and
fisttpl
lcall
pop
arpl
inc
scas
std
jmp
dec
pop
fisubrs
fisubs
inc
xlat
and
and
ja
and
dec
imull
sub
adc
mov
mov
ret
scas
sub
sub
xor
cmp
cmc
clc
xchg
fsubs
cmp
lods
or
cmp
adc
imul
or
stc
jp
mov
mov
push
xorb
push
inc
addb
sub
inc
lret
lret
mov
imul
es
fisubs
loope
orl
iret
cmpb
imul
cli
pop
sub
cmp
sub
xorb
xor
mov
sub
shlb
in
bound
pushf
xchg
and
inc
mov
out
mov
jns
sub
sub
insl
stc
mov
sbb
pop
sarl
loopne
xchg
mov
or
mov
push
mov
stos
jne
fnstsw
add
scas
dec
add
or
sub
xchg
stc
or
mov
lock
sti
dec
std
loop
adc
outsw
xorl
in
cmpsb
dec
sbb
dec
pop
popa
sbb
dec
in
sbb
xor
cmc
cmp
lods
shrl
gs
lock
cmp
add
xchg
inc
jp
in
jmp
cmpb
cwtl
fwait
jle
jge
roll
das
addr16
mov
sub
fcomp
cmp
xor
pushf
inc
or
insb
fwait
lret
ret
pop
stos
fnstenv
adc
popa
flds
repz
ret
daa
adc
lret
leave
hlt
stos
gs
sbb
xor
js
sub
pushf
popa
cmpsb
nop
add
jle
or
or
pop
pop
frstor
scas
sti
pop
in
lret
pop
xchg
lret
jg
add
xor
pop
mov
addr16
jne
mov
dec
and
cmpb
cmpsl
add
nop
xchg
data16
add
out
mov
push
xchg
sub
push
fcompl
fldz
xchg
rorb
stos
mov
adc
arpl
fiadds
iret
rcl
jno
fld
or
sub
sbb
jle
mov
xor
push
shrb
mov
out
ror
jne
out
negl
test
imul
fs
fst
jecxz
mov
mov
adcl
inc
divb
lods
cmpsb
adc
jo
fmull
das
cmp
pop
xorl
filds
push
lock
call
jp
cltd
dec
mov
xor
jl
xchg
pop
mov
shl
and
jecxz
sahf
imul
cmpsb
hlt
decl
cmp
fwait
shlb
pop
call
scas
in
xor
add
movsl
jl
mov
popa
adc
mov
movb
stc
jge
mov
and
xchg
sub
es
cmp
in
sahf
sub
mov
lods
idiv
in
inc
sbb
cld
pop
jne
stc
inc
lds
arpl
cmp
xor
imul
xchg
nop
mov
sbb
xchg
jg
fwait
aaa
pop
mov
ja
pop
testl
add
fcom
nop
pop
pop
repnz
dec
xchg
sahf
je
adc
loopne
mov
ds
leave
emms
lahf
jecxz
push
in
fwait
cltd
add
hlt
dec
in
mov
inc
pop
and
xor
jnp
fwait
loop
mov
mov
dec
mov
jmp
cli
sbb
xchg
jo
push
pop
xor
mov
and
or
mov
les
faddl
sub
das
aam
in
repz
pop
mov
or
xchg
and
dec
mov
hlt
or
inc
aas
mov
mov
in
mov
ret
add
test
stos
inc
pop
enter
xlat
cmpsl
or
sti
loopne
outsl
aad
mov
jno
xchg
dec
mov
jg
mov
test
data16
call
orl
les
mov
pop
xchg
push
sbb
repnz
jl
or
ret
mov
popa
jle
mov
pop
leave
dec
mov
testb
jl
test
sarb
pop
jmp
mov
and
pop
nop
sbb
sbb
repnz
gs
sub
mov
sub
cmp
or
shrb
jo
cs
nop
lret
rcrl
sub
sub
mov
sub
fdiv
lock
fwait
in
in
mov
aam
mov
neg
imul
ds
jno
mov
ljmp
cmp
test
imull
pop
push
push
stos
icebp
int
sarb
pop
shlb
mov
loopne
stos
mov
or
sbb
xchg
cmp
in
inc
jmp
cmp
inc
sub
or
fiadds
sbb
jl
inc
insb
or
in
dec
adc
sbb
iret
cmc
cmpsb
fbld
cmp
adc
xchg
mov
mov
xor
fld
cmp
sbb
inc
mov
loope
pop
ficomps
sub
sub
iret
scas
mov
jo
popf
xor
jmp
inc
dec
cli
xor
shlb
push
dec
push
mov
sti
cmpsb
pop
push
or
cld
xchg
inc
mov
pop
xchg
push
clc
test
xchg
inc
push
fidivs
dec
push
loop
xchg
and
das
mov
push
push
gs
mov
cmp
inc
mov
add
pop
popa
push
add
fbld
mov
ror
cmp
data16
pop
mov
adc
mov
jle
mov
inc
hlt
fmul
jo,pn
or
cmp
mov
mov
dec
push
call
xlat
mov
in
das
fldcw
pop
cmp
pop
mov
cmc
aas
rcrl
or
push
orl
inc
dec
and
int
xor
in
hlt
ret
jecxz
sub
xor
mov
push
jecxz
push
push
das
inc
in
push
in
hlt
cli
je
ss
js
sub
aad
into
test
ja
and
sub
adc
mov
sub
pop
lahf
jb
pop
xchg
inc
inc
movsl
push
add
mov
mov
pmullw
orl
adc
dec
rcll
in
enter
call
pop
add
rol
pop
insl
mov
test
fildl
push
lods
cs
jmp
inc
xor
mov
clc
ret
lea
pop
sbb
xchg
and
mov
cmp
sub
lds
mov
fsubr
sahf
mov
jnp
sbb
lret
cmp
dec
sub
push
dec
leave
mov
repnz
inc
hlt
mov
push
mov
pop
fisubl
ret
imul
movsb
hlt
inc
jns
fcompl
inc
les
xor
mov
sarl
fs
cmp
mov
push
xlat
sbb
lret
test
js
jmp
add
sti
and
movsl
add
cmp
mov
pop
mov
mov
mov
cmp
movsl
cmp
das
mov
pop
cmp
mov
test
icebp
clc
cmp
bound
inc
jp
push
inc
ljmp
sbb
inc
scas
cli
leave
notl
rolb
push
andb
cmp
in
lret
dec
stos
sbb
fiadds
pop
jno
sub
ficoms
push
leave
sub
inc
lods
aam
mov
dec
and
out
pusha
pop
and
ret
lods
cmp
enter
inc
test
sub
mov
cwtl
or
aas
pop
mov
add
int3
push
mov
adc
adc
pop
ds
lods
dec
imul
sub
pop
pop
clc
and
xor
rol
xchg
jne
outsb
jne
fidivs
lods
cltd
xchg
imul
iret
cmpsl
sbb
lcall
loopne
icebp
jae
addl
dec
loop
mov
dec
mov
mov
pop
mov
adc
jo
dec
cli
inc
shlb
dec
es
int
insl
jo
cmc
mov
push
cmpsl
loop
xor
in
loop
push
and
mov
mov
pop
dec
mov
outsl
or
mov
stos
out
loope
pop
inc
mov
cltd
xchg
psrlw
rorl
je
jp
cmc
not
aam
add
test
xchg
push
or
mov
ljmp
push
bnd
enter
sahf
mov
fdivl
push
pop
pop
lds
jae
fs
inc
mov
aaa
lock
lahf
sub
and
sub
arpl
scas
xchg
fstpt
adc
dec
stos
jb
cmp
cmp
add
or
add
arpl
addl
das
dec
add
out
aad
dec
in
push
mov
popf
out
mov
xor
inc
inc
and
or
sbb
cmpsl
gs
push
cltd
mull
mov
pop
popf
movsb
ficoms
insl
xchg
aad
adc
popa
mov
lods
adc
dec
into
pop
in
popa
inc
addr16
xchg
daa
fisttpll
cmpsl
in
mov
aad
outsb
or
and
out
repnz
imull
data16
inc
adc
stos
mov
xchg
pop
mov
movswl
sar
jae
pop
mov
jns
push
and
filds
outsb
flds
ret
fldenv
jge
pop
xor
pop
iret
pop
inc
and
push
lcall
addl
and
jne
cli
mov
loop
or
bnd
inc
adc
push
inc
jl
mov
pop
outsl
jmp
dec
jecxz
jle
gs
bound
mov
stos
mov
inc
data16
sub
fisubl
jecxz
pop
test
pop
sarb
cmc
cmp
cwtl
jbe
mov
scas
xor
push
jmp
aas
dec
cmpsl
lods
das
mov
or
aas
lret
cmpsl
jae
xchg
jmp
lcall
icebp
in
lods
das
dec
xor
xor
inc
out
push
aad
hlt
out
lods
test
and
clc
mov
lds
and
inc
rol
ja
adc
push
or
mov
jae
in
jb
adc
out
lret
inc
aam
jmp
das
stc
pop
mov
inc
test
jno
insb
or
adc
and
arpl
sub
jle
cmp
sbb
stos
test
shrb
push
stos
inc
dec
xor
cld
adc
adc
push
shlb
inc
pop
adc
jp
or
int3
pop
jmp
clc
lret
xor
dec
pop
adc
sub
mov
loopne
sub
inc
lea
mov
fidivs
cmp
incb
pusha
addr16
add
push
cwtl
push
and
lret
gs
xchg
sbb
les
mov
out
xchg
jae
rclb
and
pop
push
xchg
enter
call
lea
scas
sub
mov
cmp
add
mov
test
push
inc
xor
push
jne
je
mov
lock
mov
sbb
addr16
inc
push
outsl
sbb
js
pop
sbb
test
mov
mov
sar
mov
pusha
jb
shll
add
xor
out
bound
mov
sub
mov
cmp
pop
pop
inc
sti
dec
push
cmp
xor
test
xchg
add
mov
sbb
shlb
or
pop
xor
aad
in
mov
cwtl
loopne
pop
aas
jmp
xchg
xor
or
push
mov
lcall
fidivrl
xchg
out
scas
cmpsl
xor
push
mov
jb
dec
push
xchg
mov
pop
jl
push
dec
sbb
sub
aad
jae
and
fs
aam
xchg
mov
int
movsb
lock
rorb
jnp
add
sbb
aad
or
mov
popa
dec
into
xchg
ror
outsl
adc
rclb
movb
aaa
aad
cmp
and
test
popa
jno
add
cmpb
aas
jle
push
xorb
mov
out
dec
gs
cmpsl
cmp
fs
lcall
call
mov
cmpl
cmpb
inc
jb
adc
jmp
in
scas
jns
cmp
in
and
add
loope
in
xor
movsb
pop
cmp
xorl
sub
popf
sarl
inc
fcomip
scas
jne
cs
pop
mov
sbb
test
pop
andb
pop
ret
jecxz
push
test
into
int3
jo
xchg
sahf
and
mov
push
mov
stos
flds
or
or
int3
add
hlt
cmp
gs
push
inc
jp
cld
inc
sbb
and
mov
xor
pcmpgtd
out
mov
dec
je
jp
out
jp
or
adcl
loope
pusha
aad
out
lock
inc
iret
jb
addr16
push
rcll
or
dec
inc
rcl
xlat
lahf
jb
sti
push
ret
xor
mov
lock
mov
mov
mov
loope
dec
xchg
inc
in
push
xor
dec
xor
add
pop
bound
xor
xchg
and
popa
mov
cmpsb
arpl
aam
pop
pop
xlat
adc
cmpsb
jp
ja
idivb
shrl
mov
cmp
and
shlb
cmc
and
inc
dec
out
or
dec
jae
sub
mov
mov
rclb
add
iret
mov
jb
int
sub
add
push
dec
push
dec
pusha
fbld
psadbw
test
xchg
dec
out
sub
push
jb
ljmp
lods
dec
hlt
repz
mov
ljmp
add
flds
addr16
out
xor
stos
push
xor
push
fcmovnb
adc
ja
pop
xchg
dec
mov
dec
into
std
fstl
push
jl
inc
movsb
dec
in
sbb
mov
lcall
add
jae
es
cmp
les
je
das
add
mov
push
lock
in
adc
enter
jp
pop
or
xchg
and
cmp
jno
pop
in
ret
mov
sarl
ljmp
add
pop
in
popa
push
addb
inc
aad
mov
push
gs
decl
or
inc
test
mov
jecxz
jo
mov
out
inc
xchg
pop
gs
ljmp
es
jno
aas
adc
jnp
fxch
and
sti
aam
int3
cmp
pop
lock
imul
jmp
push
loopne
sti
movl
sbb
push
ret
or
cmp
mov
dec
inc
jecxz
cmp
adc
into
shll
fisubl
push
imul
call
lcall
dec
in
sub
rorb
mov
adc
add
call
stc
out
dec
and
sbbl
cltd
jae
test
inc
test
mov
dec
push
jne
bound
jb
jmp
mov
ds
aas
mov
xchg
fdiv
mov
add
out
bound
sub
pop
inc
pop
xor
test
aam
insb
cmp
jp
pop
lea
sbb
cmp
fisttpl
in
out
scas
xor
clc
idiv
and
push
pop
push
ficompl
add
and
leave
pop
test
xchg
clc
in
lcall
adc
sub
test
dec
or
dec
jp
pop
mov
xor
fidivs
mov
pusha
lcall
mov
insl
bound
mov
xchg
scas
addb
sarb
pop
sbb
xchg
mov
iret
scas
and
jg
push
sbb
negl
jnp
mov
xchg
mov
dec
ret
js
and
mov
aam
sbb
test
in
xchg
je
loop
fimull
jae
push
pop
mov
inc
push
rclb
and
and
into
scas
mov
loopne
scas
sbb
xor
adc
sarb
xor
andb
mov
nop
or
xor
xlat
sti
lret
mov
in
fsubl
scas
add
jno
iret
inc
sub
shl
fwait
rolb
mov
lcall
jecxz
xchg
xchg
fimuls
push
ja
or
sbb
adc
js
dec
dec
inc
add
out
shll
mov
shrb
fbld
mov
dec
stos
in
idiv
sbb
filds
lods
sbb
adc
lcall
cmp
push
jb
leave
pop
loopne
sub
std
mov
and
dec
andl
push
clc
leave
jno
scas
stc
enter
dec
imul
cli
push
dec
mov
daa
in
pushw
adc
fdivrl
frstor
scas
or
push
ss
add
adc
and
sbb
outsb
jo
mov
mov
or
lods
ret
rcrl
call
dec
in
sub
sub
lods
fwait
lea
sbb
and
outsl
js
ds
xchg
sub
andl
not
icebp
mov
pop
dec
lahf
test
add
jl
out
insb
arpl
out
adcl
push
push
call
movsl
pop
shrb
lock
insb
std
push
inc
xor
or
push
sbb
jmp
or
push
out
jecxz
frstor
push
mov
mov
mov
cltd
jbe
test
xchg
jmp
xchg
lahf
aad
adc
sub
or
adc
dec
out
push
leave
in
pop
cmp
test
mov
loopne
je
adcb
cmp
jmp
mov
scas
add
adc
sub
mov
negb
test
sarb
movsl
enter
cmpsb
adc
stos
mov
cmp
mov
mov
cmp
lods
into
ret
jns
loope
add
xchg
data16
mov
movsl
push
dec
mov
data16
jl
fs
out
ret
push
ret
enter
push
push
jne
jne
or
add
inc
fcmovne
mov
out
int
imul
xchg
mov
call
adc
xor
icebp
push
ljmp
or
popf
into
sahf
fisttpl
mov
inc
add
lret
cmpsb
pop
xor
jmp
pop
inc
rcl
enter
sub
fsubrs
cmpl
fucomip
shll
mov
loopne
dec
ljmp
std
int
and
addr16
imul
ret
subb
pop
das
xchg
mov
jp
js
jl
add
mov
pop
and
xlat
inc
rcrl
fbstp
cmp
dec
mov
jnp
mov
add
inc
dec
pop
mov
scas
ja
negl
movsb
or
mov
xchg
loopne
xchg
inc
pop
inc
or
ds
jl
mov
jns
cli
pop
rclb
aad
lret
mov
out
clc
iret
jecxz
and
into
sub
testb
in
mov
sub
pop
les
and
or
add
ljmp
mov
fimuls
lret
jge
mov
push
or
xchg
in
push
rcrb
imul
xchg
cmp
flds
ja
xor
cwtl
xor
popa
adc
sbb
or
mov
push
fldl
push
cmpsl
fcomps
shl
je
sarb
icebp
ljmp
pop
aad
sahf
loope
dec
shll
sahf
or
jns
cmp
dec
pop
mov
pushf
push
shlb
push
jl
add
xor
sbb
es
rorl
imul
xorl
jp
cmp
movsl
xchg
cld
insl
jo
lea
out
fiadds
mov
int3
ds
push
cmc
cmc
shlb
mov
jg
test
sbb
pop
nop
or
into
jne
fists
pop
sub
dec
mov
jae
stc
cmpsb
add
outsl
stos
mov
ret
pop
push
lock
add
std
sub
xchg
or
sti
and
inc
pushf
cmp
xchg
outsl
loope
dec
fnstenv
mov
lret
enter
in
xchg
sub
cmc
out
lret
push
jp
pop
fsubr
filds
lcall
xchg
mov
and
pop
mov
inc
clc
test
inc
jmp
mov
xchg
and
daa
or
aas
clc
push
clc
pop
aaa
mov
jne
sti
int
test
adc
lret
in
stc
mov
cmp
ljmp
es
cmp
sbb
xchg
and
mov
lret
stc
and
mov
push
dec
call
inc
call
xchg
sbb
gs
mov
loope
arpl
xchg
dec
lahf
xchg
mov
stc
repnz
sub
mov
xor
cmp
aas
mov
sbb
jge
shrb
rorb
push
js
dec
add
and
dec
inc
in
pop
mov
mov
push
fdivrs
addr16
movb
dec
push
adc
loop
sti
jmp
popa
push
or
clc
add
outsl
xchg
jge
testb
or
arpl
mov
addl
push
je
mov
pop
xchg
sbb
or
jp
mov
xchg
call
cwtl
cmpsb
push
and
test
mov
push
adc
or
fs
sbb
mov
rcr
xor
push
xor
and
cmp
mov
adc
lea
je
outsl
insb
or
testl
jg
mov
dec
cmp
cmp
out
pop
ja
repz
sbb
fisttpl
rclb
icebp
cmp
fwait
int3
sub
ret
lock
xchg
in
clc
sbb
addl
mov
sar
fisubl
pop
mov
imul
negb
xchg
pop
mov
into
jno
push
adc
push
std
shll
and
push
and
clc
mov
ja
fidivrl
mov
adc
dec
lret
cmc
mov
cs
pcmpgtb
or
mov
sahf
lret
jge
push
sub
das
int
cld
mov
fs
xor
test
xchg
and
addl
lods
mov
xchg
inc
xlat
dec
mov
mov
jo
mov
xor
mov
out
icebp
ucomiss
mov
dec
pop
mov
ja
sbb
hlt
inc
push
jecxz
push
inc
test
sarb
out
dec
cmpsl
popa
jo
mov
sub
jge
andl
xchg
push
aas
jbe
jbe
mov
dec
inc
inc
or
fcompl
inc
mov
pop
int
lods
sarl
fidivrl
lea
cmp
jo
and
mov
mov
sti
insb
lock
nop
in
mov
dec
xchg
mov
shrl
leave
jmp
jbe
adc
sub
cmp
sbb
push
push
xor
cmpsl
adc
pusha
dec
mov
inc
adc
cld
push
fiadds
or
or
loope
aam
repz
cmp
pop
stc
jne
dec
leave
lods
dec
into
leave
pop
xchg
push
ss
dec
or
or
cmpsl
cmpsl
mov
fwait
stos
sub
mov
sbb
in
icebp
mov
insb
and
cmp
inc
sbb
jg
shrb
xchg
nop
imul
pop
push
cmpsb
repz
je
out
ret
mov
repnz
hlt
adc
lret
adc
push
stos
dec
pop
jp
in
sbb
dec
ja
add
cmpsl
fstpt
and
out
xor
dec
stos
loop
mov
outsb
dec
xchg
je
push
push
rcrb
stos
inc
add
sbb
cmp
daa
push
add
cmpb
inc
and
js
ret
inc
cwtl
jge
push
cmp
aad
add
cmpsb
fsubrs
fisubs
push
jecxz
pop
and
pop
or
add
repz
adc
call
sub
cltd
add
lea
jle
push
mov
int
lahf
loope
aam
jne
mov
stos
aad
hlt
fstp
push
imul
sar
cmc
jno
sub
adc
push
lea
push
lock
ror
andb
sbb
sub
or
rolb
dec
int3
inc
inc
hlt
repnz
cltd
cmp
dec
mov
mov
push
shll
jge
test
lds
jl
mov
pop
fcoms
or
mov
xor
enter
hlt
lcall
xor
ja
repnz
idiv
popf
and
pop
push
xor
pop
cmpsb
and
push
jle
pop
sub
ss
shr
or
push
cwtl
sbb
adc
sub
cmovae
imul
jmp
outsl
in
arpl
push
popf
lret
push
repnz
dec
dec
sub
or
add
push
out
out
push
xchg
loop
mov
cmp
mov
jmp
repz
sub
out
cmp
stos
sub
xchg
cmp
ja
xor
pop
ja
mov
popf
add
icebp
int
mov
jno
xor
mov
cmp
add
insl
out
sub
std
push
cmp
iret
and
mov
dec
insl
dec
push
pop
addr16
push
pop
cwtl
adc
mov
sti
mov
push
xor
imull
loop
or
pop
inc
pop
sqrtps
inc
lret
xor
dec
push
pop
xchg
inc
jecxz
outsl
shrl
andl
inc
call
stos
sti
out
mov
jecxz
lds
insl
lods
pop
sbb
rcll
jp
scas
pop
out
shrb
xchg
mov
loop
cmp
fucomi
popa
sub
sub
jnp
and
push
xlat
push
ret
bound
jle
jg
ret
mov
pop
xor
das
or
cmp
pop
arpl
sbb
daa
ljmp
mov
jecxz
test
sbb
jmp
xchg
sbb
add
rcr
cltd
fimull
pop
jno
movsl
in
shrb
pop
ret
in
pop
mov
movsl
je
icebp
mov
adc
subb
movl
inc
jecxz
dec
push
jne
popa
pop
jp
inc
addb
fwait
or
and
add
leave
mov
mov
jp
jo
cli
stos
lods
cwtl
fs
jae
xchg
pop
cmp
shrl
xor
rol
jp
cld
movq
ljmp
adcl
add
fistl
add
push
jns
lcall
popa
fs
mov
add
xor
adc
push
clc
mov
std
daa
push
imul
dec
jmp
mov
adc
or
jb
inc
popa
jge
ret
mov
rcr
push
or
mov
shl
vmwrite
cmp
iret
push
pop
push
adc
pop
je
sbb
pop
loop
sbbb
stos
cmpl
push
or
iret
pusha
pop
adc
mov
mov
pop
jb
push
int
xchg
sahf
cmp
imul
sub
adc
imul
movsl
movsl
scas
addb
cmp
lods
cmp
dec
mov
mov
jae
dec
add
rcll
mov
daa
std
mov
or
cli
adc
mov
and
pop
xlat
das
pop
test
add
repnz
ljmp
pop
mov
vpsllq
cld
and
xchg
mov
mov
push
push
dec
inc
imul
xchg
popfw
outsb
pop
or
movsb
popa
pxor
cmp
loop
xchg
or
jg
xor
std
dec
add
and
lods
xor
idivb
and
or
mov
nop
jnp
das
std
clc
in
les
and
movsl
mov
sub
out
imul
push
and
cmp
push
mov
mov
std
mov
stc
mov
adc
push
push
xchg
adc
dec
fisttps
movsb
adc
lret
mov
mov
xor
movl
mov
mov
lcall
mov
repnz
pop
mov
xor
pop
out
mov
xor
push
mov
jbe
xchg
push
lret
sub
sub
in
add
sub
mov
sbb
fs
jecxz
rol
cltd
in
adc
cmp
mov
aad
je
xor
ret
fsub
inc
ret
xor
push
and
add
xchg
mov
pop
cmc
lcall
mov
push
push
xchg
cli
addr16
dec
xchg
aad
mov
loopne
aad
sub
cltd
dec
sbb
arpl
mov
rol
scas
push
stc
cld
iret
pop
insl
jmp
dec
lods
loop
stos
test
add
jge
or
aaa
fbld
in
rcl
pop
gs
into
mov
sti
movb
dec
inc
sbb
inc
es
cmp
sahf
icebp
dec
movsb
sahf
xchg
or
mov
lods
xchg
je
mov
jl
add
loop
nop
mov
adc
sbb
lea
add
stos
outsl
dec
push
stc
ret
mov
out
xchg
sub
imul
or
mov
push
jne
mov
pushf
and
inc
add
cld
push
push
psubq
lock
pop
cli
scas
or
lods
xor
push
movsl
cmpsl
cmp
lret
leave
test
cmp
fstps
pusha
aas
jb,pt
nop
dec
dec
mov
adc
jnp
jo
nop
int3
xchg
adc
add
lret
sbb
daa
pop
jnp
sub
in
mov
sbb
mov
jns
stc
inc
inc
repnz
lcall
lahf
testl
inc
sub
lahf
in
in
jmp
fstpl
or
sub
mov
pop
fldcw
mov
aas
xor
in
nop
lods
mov
ljmp
xchg
lds
cwtl
notb
dec
mov
or
sbb
popl
pop
add
rcrb
adc
jle
in
pop
jno
inc
movsl
mov
mov
dec
mov
dec
push
mov
add
cli
in
test
cmp
sbb
sbb
call
ja
cmc
xor
push
cmpsb
js
sub
mov
int
pop
stos
add
lds
and
or
jo
pusha
cmp
sbb
mov
xchg
adc
lahf
inc
sub
fcmovu
loop
jle
mov
jl
xchg
mov
dec
test
mov
cmp
out
nop
xchg
add
stos
hlt
lods
bound
icebp
sub
leave
inc
or
fisttpll
push
and
inc
rcr
movsl
push
mov
mov
mov
fldl
push
mov
mov
loopne
arpl
cmp
repz
lods
or
ja
fadd
mov
test
cmc
mov
int
or
bound
push
xor
aas
dec
mov
stc
adc
fwait
rcr
jp
mov
sbb
xchg
and
insl
sbb
in
cld
lcall
fisubl
jl
stos
fnsave
fwait
rcr
cmp
cmp
es
es
fs
loope,pn
xchg
dec
push
inc
les
into
mov
loopne
mov
cwtl
call
stos
push
lock
and
ret
add
loopne
lods
test
push
push
cmp
scas
imul
mov
xchg
xchg
in
lret
mov
sub
push
jle
sub
fdivrp
or
sub
inc
out
mov
inc
mov
rorb
cltd
sbb
jp
inc
adc
cld
and
mov
or
push
xchg
mov
rol
jo
xor
inc
arpl
sbb
mov
ror
mov
dec
pop
fdivl
add
loope
xorb
fldt
fwait
sbb
sub
mov
lret
and
fwait
and
push
mov
ret
or
imul
dec
add
enter
mov
push
mov
mov
loope
mov
int
sub
je
mov
data16
inc
adc
shlb
jnp
mul
sub
ss
inc
add
dec
ret
dec
mov
push
test
adc
bound
sub
dec
cmpsb
push
insl
lods
sbb
lods
shll
dec
and
mov
incb
push
test
and
mov
sbb
push
les
cmp
pop
jmp
aas
outsb
dec
lcall
enter
xchg
xor
enter
notb
testb
jb
pop
fdivp
jecxz
fsubrl
ret
adc
inc
rcll
test
pop
cmpsb
sub
lahf
adc
in
or
clc
mov
pop
enter
sub
push
ret
cmp
xor
dec
cmc
sub
fcomps
lock
dec
pop
fwait
inc
das
and
xlat
and
add
in
jle
rorb
int3
add
mov
pop
jmp
nop
jno
pushaw
adc
push
pop
mov
fdivrl
fwait
push
sbb
sbb
add
lds
mov
adc
sub
test
cld
push
in
cltd
ljmp
sbb
cld
je
xchg
mov
mov
js
and
adcb
shlb
pop
add
jmp
xlat
cmpsl
sub
ljmp
sub
dec
adc
into
sbb
fldt
sbb
lods
mov
sub
xchg
add
fists
mov
bound
or
add
mov
xchg
sarl
jle
addb
les
xchg
push
dec
shrb
pop
data16
fs
fadds
sub
lret
mov
clc
nop
fwait
sbb
outsl
xchg
jle
and
sbbb
adc
mov
jne
notl
hlt
cltd
or
add
sub
mov
out
test
push
enter
test
fisubs
mov
and
or
and
mov
mov
lret
fsubrp
adc
xchg
jb
dec
pop
fisttpl
leave
inc
mov
test
cs
mov
leave
sub
mov
mov
xor
in
lods
push
mov
in
rorb
call
addr16
mov
lock
repz
xor
xchg
mov
jp
in
push
imul
mov
das
aad
test
out
adc
pop
xchg
cmpl
fcompl
cld
popf
rorb
xchg
sahf
xor
sub
dec
adc
push
add
push
or
dec
mov
popa
dec
xchg
in
and
sti
xor
xor
xor
push
cmp
cltd
outsb
pop
imul
or
pop
mov
xor
lods
and
popa
clc
imul
jnp
or
and
inc
pop
and
daa
stos
adc
shlb
inc
loopne
push
ljmp
xor
sti
and
jbe
mov
pop
add
mov
adcl
cli
pop
sbb
ret
popl
dec
pushf
ds
lret
mov
adc
or
in
daa
cwtl
adcl
sub
addl
rol
inc
inc
pop
pushl
outsb
adc
mov
xchg
aam
cli
mov
push
push
pop
inc
cltd
jno
out
xlat
pop
sahf
xor
out
popa
in
mov
sbb
sbb
fcom
inc
cwtl
cli
shlb
ja
mov
lret
mov
scas
dec
or
clc
fnstcw
cmp
stos
lds
push
dec
push
insl
push
pushf
add
xor
loope
cwtl
pop
adc
jmp
push
adc
pop
dec
mov
inc
push
iret
lods
cmp
bound
imul
outsl
or
pop
fcmove
scas
aas
cmp
sub
adc
jbe
push
test
sbb
insl
push
add
xor
incb
pusha
xchg
cmpsl
cli
adc
into
jns
cmp
fisubs
add
mov
sub
push
mov
jg
int
cmpsb
xchg
or
cmp
imul
hlt
jno
dec
neg
test
push
mov
clc
jne
jg
movsl
lret
sub
add
icebp
pusha
aas
outsb
xor
xor
mov
arpl
ss
dec
sbbb
lahf
imul
pop
lock
sub
mov
int3
out
jb
and
xchg
ficomps
push
addb
cmp
jo
idivl
jl
cmp
xchg
or
stos
ret
pop
js
faddl
icebp
push
and
xchg
mov
or
in
mov
cwtl
mov
fldenv
cld
cvtps2pd
push
cmp
sbb
mov
iret
pop
jbe
cli
lea
cld
dec
pusha
cmp
dec
sbb
and
jne
jno
in
int3
pop
mov
loope
insb
faddp
ljmp
dec
add
decl
cmc
js
cmpb
in
arpl
shl
in
int
cwtl
loopne
aam
jns
mull
mov
jmp
push
inc
mov
in
movsl
dec
inc
aad
xchg
dec
add
dec
inc
out
faddl
add
sahf
sub
adc
push
cmp
adc
cmp
jns
mov
gs
sarb
push
mov
mov
pop
int3
pop
stos
loopne
mov
das
cmp
sbb
hlt
mov
and
push
in
ljmp
or
mov
mov
stc
and
ljmp
out
cltd
sti
addr16
or
sub
push
loop
mov
sbb
movsl
mov
lds
add
mov
into
pop
mov
inc
mov
dec
ficoms
mov
pop
jmp
cmpsl
jnp
xor
pushl
loop
loope
out
xor
stos
fnstsw
out
jle
xor
rcrl
daa
int
pop
sub
out
out
push
xor
out
icebp
fucomp
dec
xor
std
les
push
inc
mov
jmp
sbb
and
aad
cmpsl
mov
pop
mov
inc
pop
sbb
ret
xchg
dec
mov
loope
cmp
and
or
jle
push
and
push
mov
xchg
sub
mov
mov
cmpsl
lock
fwait
sub
js
push
aad
fs
jno
sbb
mov
add
outsb
and
push
dec
outsb
insl
insb
push
and
or
invlpg
push
sbb
repz
mov
je
or
push
add
sub
inc
fwait
lds
pop
insb
cmpsl
lds
repnz
je
jp
mov
imul
in
mov
movsl
sbbb
jmp
ss
pop
pop
int3
push
imul
jle
mov
xor
ret
out
xchg
mov
pop
aad
jl
pop
dec
fnstsw
mov
int
push
push
mov
test
imul
adc
lret
and
sub
imul
or
mov
inc
mov
cwtl
out
or
insl
pop
out
cmc
ds
shl
xor
fisubrs
imul
arpl
sbb
sti
lods
mov
test
stos
or
lods
sub
mov
orl
sti
scas
push
and
cltd
fiaddl
repz
xchg
iret
push
sub
sbb
inc
scas
rcll
sbb
sub
std
and
jg
shlb
sahf
mov
pop
nop
push
in
ret
and
cwtl
push
mov
rcrb
shl
jb
and
mov
cmc
xor
enter
mov
cwtl
dec
cld
ljmp
jbe
push
jl
xchg
inc
or
add
push
cs
sahf
shrb
je
or
sbb
div
inc
jns
push
loope
leave
mov
add
mull
or
fiadds
pusha
jbe
sti
jecxz
mov
outsl
decl
lds
ja
hlt
aas
pop
sub
out
add
clc
sbb
js
adc
xor
mov
xchg
inc
outsl
jmp
movsb
pop
and
xchg
into
out
push
sahf
sbb
inc
inc
fcmovnb
push
mov
mov
xchg
sub
pop
jle
xor
mov
cld
xor
sbb
shlb
pop
xor
push
dec
push
jge
dec
pushf
xchg
mov
inc
les
mov
xchg
jae
sbb
repnz
jnp
data16
leave
rcll
and
mov
push
add
ljmp
fld
cli
dec
repnz
cmp
das
loop
inc
inc
daa
ja
ljmp
mov
inc
push
inc
pop
ljmp
mul
inc
shl
test
aas
shll
pop
xor
pop
enter
cmp
mov
outsb
or
dec
xchg
es
inc
loop
jl
arpl
cmp
imul
cmp
inc
icebp
sub
in
arpl
mov
jl
iret
jg
aad
lahf
imul
fsubrs
es
push
pop
popa
xor
or
sub
xchg
pusha
and
mov
xchg
sub
loope
push
add
stc
lret
add
push
gs
mov
or
xchg
cmp
xchg
dec
xor
stc
xor
xchg
adc
fcoml
fs
pop
call
std
and
jl
mov
mov
std
sub
rcl
or
xchg
jle
cmc
scas
call
clc
ja
lods
dec
sub
xor
mov
mov
jns
pop
cld
fisubs
push
jl
je,pt
iret
jge
jno
in
and
mov
xor
pop
xchg
popa
sub
jnp
movsl
testb
jae
loope
movsb
pop
sub
jmp
push
pop
fisubs
adcl
and
cltd
mov
cmp
mov
push
mov
cmpsl
sahf
push
bound
leave
pop
or
jnp
adc
cmovg
lret
test
popf
jmp
pop
je
stc
mov
cmp
adc
xchg
xchg
push
cs
pop
fs
arpl
fsubl
ja
mov
movsl
push
inc
sub
icebp
movsb
xchg
mov
mov
popf
pop
movsl
push
leave
or
push
mov
fistpl
xor
ja
mov
or
pusha
sti
test
push
out
add
add
xchg
fisubl
inc
push
lds
dec
cmp
pop
in
rol
movsl
jecxz
jmp
xor
fnstenv
sarb
or
adc
lea
scas
fdivr
xchg
jnp
movsb
sbb
nop
push
mov
push
lock
mov
mov
loopne
sub
aaa
push
dec
test
jnp
jg
in
mov
popf
fiadds
jl
loope
leave
jb
movsl
and
fnstenv
inc
or
dec
xlat
negl
jmp
insb
nop
mov
rol
adc
roll
mov
loope
ja
popa
cmp
fdivs
lret
mov
fsubrl
jl
cli
fcomps
dec
int
scas
or
or
sbb
push
loopne
inc
je
insb
push
xchg
daa
clc
dec
mov
ds
pand
xor
jl
fdivrl
outsl
sbb
cld
scas
jbe
into
dec
lret
imul
jo
cmp
or
int3
mov
cmp
and
push
pop
sub
mov
js
push
psllq
or
sbb
in
xor
sbb
imul
sub
shrd
push
push
or
and
mov
inc
insb
pop
inc
jle
jb
stos
jns
add
mov
outsb
gs
dec
adcl
mov
sub
mov
pop
loope
and
mov
pop
sub
and
dec
aas
xor
pop
add
test
jnp
int3
or
or
push
or
jle
jb
sbb
int3
test
push
out
push
nop
push
hlt
push
setge
pop
rolb
push
mov
push
xchg
push
cmp
ds
cs
cli
fmull
cs
hlt
and
add
mov
arpl
addl
add
les
pop
fdivs
outsb
es
xor
and
aad
das
scas
movsb
push
aad
lahf
sti
in
data16
ror
out
or
or
addb
mov
jno
jle
rorb
subb
clc
stos
or
loop
gs
call
push
mov
filds
divb
pop
loope
xchg
sbb
xor
out
push
vunpckhps
xchg
sub
jbe
movsl
incb
pop
push
jo
mov
sub
daa
adc
or
jmp
sub
aad
push
dec
les
xor
adc
dec
dec
pmulhw
pop
pop
mov
mov
pop
lret
dec
sbb
sub
jns
cmpb
xlat
jg
out
jb
fcoms
sti
jg
in
jae
scas
insb
push
cmc
pusha
popa
jbe
push
inc
aas
jmp
mov
pop
hlt
push
add
les
lret
and
scas
push
push
inc
rcll
mov
outsl
push
lea
loope
mov
test
xchg
rcr
adc
decl
cmp
cmp
mov
cs
repz
faddl
xor
and
cld
adc
cmp
out
loope
daa
cmp
fwait
int
mov
push
xchg
jp
subl
cmp
xor
push
cmp
dec
mov
int3
mov
stc
or
lret
in
mov
cs
push
enter
inc
out
adc
adc
mov
sub
repz
mov
mov
xchg
adc
adc
rcrb
sub
sbbb
cmp
loope
fs
out
pop
inc
jl
ds
adc
popa
mov
xchg
push
les
xchg
jmp
inc
int3
arpl
aad
mov
mov
sbb
add
jl
data16
xchg
dec
adc
cmp
fadds
mov
inc
and
ljmp
cmc
arpl
or
jae
aas
add
js
jmp
js
mov
add
lea
xchg
mov
jns
stos
xor
cmpb
cltd
icebp
mov
lods
fcmovb
or
or
mov
or
fstpl
enter
pop
sbb
inc
pop
mov
mov
mov
aam
mov
sbb
mov
sub
scas
jno
pop
mov
mov
mull
lahf
idivb
inc
enter
lret
hlt
mov
dec
fldl2e
jle
inc
in
cmpsb
mov
adc
pop
add
ffree
add
push
ljmp
dec
and
mov
pop
icebp
or
or
pop
pusha
out
shll
fcoms
mov
aaa
movsb
clc
pop
fwait
xchg
jnp
or
sarb
out
rolb
sbb
and
into
testl
inc
xor
sahf
lcall
in
jno
fisubs
cs
inc
xchg
add
icebp
or
mov
pop
cltd
sbb
test
loope
push
push
adc
xor
insl
test
add
jb
cmc
mov
jge
push
mov
dec
repnz
movsl
jns
pop
mov
cltd
cs
dec
sbb
ds
push
cld
imul
cmpsl
call
outsb
ficomps
mov
xchg
mov
inc
push
cmp
inc
das
jne
lret
lret
inc
xchg
xchg
outsl
cmp
dec
adc
pop
out
mov
dec
adc
test
loopne
push
push
mov
or
lods
and
icebp
cli
lea
movsl
lods
call
stc
ja
sbb
push
push
shrl
out
cmpsl
mov
cmp
testl
sub
dec
cltd
leave
in
hlt
jo
dec
add
aad
inc
fistpl
pop
mov
testl
rcrb
loope
hlt
mul
inc
sub
sbb
loopne
das
fs
sub
or
dec
lds
mov
dec
xlat
je
mov
cmc
sub
or
es
lret
stc
adc
aaa
cmp
pop
cltd
push
cmpsb
push
jp
inc
lahf
cmp
ja
xchg
lods
jle
inc
xor
loope
jmp
loop
mov
mov
in
sbb
xor
jb
int3
jecxz
sub
mov
mov
adc
jp
adc
and
dec
cmpsb
test
icebp
scas
nop
push
push
gs
setne
cmp
adc
add
mov
lock
mov
mov
dec
adc
cs
out
pop
jb
frstor
dec
xor
xor
ljmp
push
cmp
dec
xlat
lret
imul
mov
mov
lock
lods
jmp
flds
push
lods
repnz
mov
xor
cmp
pop
mov
inc
cltd
cli
outsb
mov
lea
xor
std
dec
dec
push
out
jbe
cmp
xlat
pop
mov
or
iret
fdiv
inc
push
add
cmp
ret
nop
sub
mov
sub
pop
sti
and
or
add
and
cmp
fmul
cmc
mov
jo
int
cs
stos
pop
popf
add
inc
and
inc
sbb
dec
movsb
jne
inc
inc
cs
addb
and
mov
dec
mov
pop
js
xchg
fs
jno
xor
jmp
xchg
cmp
push
or
fadds
aas
std
sub
iret
cmp
popf
add
lcall
cmp
pop
sahf
rolb
daa
sbb
inc
xchg
xchg
and
xor
sub
mov
push
push
outsl
mov
jo
daa
xor
and
jge
cmpsb
flds
cltd
or
xchg
lret
push
iret
movsb
jecxz
ljmp
in
xchg
mov
lods
mov
sbb
scas
pop
and
mov
sub
fsts
inc
fcomps
mov
adc
movsl
add
cltd
imulb
out
adc
push
xchg
in
shll
xchg
pop
add
aas
dec
pop
pop
les
nop
test
test
mov
nop
insl
xor
cmp
cmp
decb
pop
jp
adc
mov
sbbl
das
jb
int
xchg
out
ret
cmp
mov
cmpsb
lahf
mov
xchg
and
iret
sub
test
mov
xchg
jmp
jle
push
cmp
leave
dec
imul
cmp
mov
pop
jbe
dec
sub
dec
fwait
es
sbb
bound
push
icebp
mov
cli
inc
icebp
mov
test
sbb
aaa
jg
addr16
imulb
ja
test
push
gs
mov
scas
outsl
push
iret
data16
imulb
lahf
adc
stos
adc
add
pushf
gs
pusha
repnz
rcrb
inc
sbb
jp
in
gs
sbb
add
outsb
scas
jmp
pop
sub
pushf
jle
ret
aaa
jecxz
xchg
sub
in
popa
inc
sbb
ficoml
aas
call
sbb
daa
pusha
fwait
dec
iret
inc
js
rol
pop
fs
das
add
xlat
mov
mov
sbb
js
js
xor
aam
scas
adc
jno
insb
mov
xchg
faddl
pop
cmp
loop
fidivs
cmp
fstpl
cld
in
mov
cmpsb
fisttpl
xor
mov
add
imul
sbb
orb
cmpl
inc
xor
push
mulb
mov
sub
fimuls
add
mov
imull
in
jns
pop
test
jae
imul
testl
loop
push
dec
test
sub
or
push
push
inc
out
xchg
test
pop
in
and
int
fcomp
icebp
dec
test
or
and
cli
fwait
xor
and
mov
js
cmp
pop
push
insl
mov
mov
add
sbb
xor
rolb
je
xchg
cld
pop
mov
or
lods
mov
mov
sub
push
repz
insb
xchg
mov
push
in
xor
add
iret
xchg
lods
push
add
mov
dec
movsl
or
fs
jl
mov
jae
cmpsl
shll
inc
mov
std
in
inc
pop
add
adc
mov
inc
cmpsb
addr16
and
outsl
movsb
push
xchg
enter
iret
jmp
popa
jbe
aas
iret
out
cmpsb
les
scas
jne
je
loope
fnstenv
shll
xchg
jge
sub
cmp
xchg
out
xchg
fldcw
xchg
arpl
aad
divl
jno
inc
xchg
xor
jb
fs
je
and
fidivrs
pop
push
push
pop
cltd
xchg
pushf
gs
ror
jmp
push
into
lahf
xor
lea
outsb
jb
pop
xchg
ret
hlt
test
mov
xor
adc
test
and
inc
push
sub
jae
or
adc
cmc
hlt
mov
inc
inc
ljmp
pop
pop
dec
pushf
stos
dec
sbb
adc
cmp
sarb
inc
pop
sbb
lock
loopne
std
fildll
and
and
sbb
hlt
jle
int3
mov
mov
adc
xchg
sub
mov
andl
cmpsl
lods
inc
jae
sub
pop
or
lea
sahf
aad
fdivs
mov
mov
dec
sti
and
jns
and
fisubrs
and
xor
sub
push
push
clc
add
ds
cld
mov
or
xchg
shlb
orl
in
popa
imul
jns
jmp
mov
add
add
mov
cmpl
in
add
xchg
jb
rcr
mov
das
inc
movsl
jne
push
in
fiadds
pop
add
js
or
add
mov
adc
lds
sarb
loopne
add
insb
les
arpl
cli
lea
pop
mov
rorl
pop
incb
dec
sbb
icebp
mov
xchg
add
xchg
and
adc
push
arpl
and
xchg
or
jmp
mov
push
fbstp
sbbb
xor
and
es
aaa
das
jns
jmp
cmp
mov
pop
adc
rcrl
nop
sub
or
lret
bound
add
insb
imul
sbb
push
mov
pop
pop
cmpsb
mov
imul
xchg
jg
sar
iret
arpl
xchg
lahf
sub
leave
cmp
sbb
push
int3
jp
xchg
pop
cmp
push
pop
push
movsb
clc
in
sbb
scas
jno
out
push
xor
fimull
mov
lahf
lret
and
pushf
mov
adc
push
arpl
inc
lods
aam
outsb
xchg
enter
push
test
or
repz
inc
xchg
mov
fdivl
add
jnp
add
mov
jne
jae
push
lret
sbb
loopne
pop
cmp
loopne
sub
fbld
fisttpl
sub
push
call
addl
stos
aad
sbb
xlat
or
jp
or
dec
jp
and
xchg
clc
mov
decb
mov
push
mov
data16
insb
mov
ljmp
lahf
out
cmp
scas
sarl
xchg
loopne
jo
nop
and
aad
push
imul
xchg
pop
add
movsb
sbb
push
add
js
cltd
dec
in
sbb
fbstp
arpl
pop
dec
lea
mov
cltd
mov
cmc
stos
sbb
lods
push
pop
cmpsb
ja
out
in
add
push
test
iret
jnp
imul
loopne
pop
enter
inc
xchg
jmp
jle
mov
inc
push
adc
rorl
mov
cmpsb
negl
mov
pop
push
sub
mov
jbe
jb
test
adc
icebp
aam
out
mov
clc
lds
push
mov
lds
xlat
xchg
jae
push
cmp
repnz
cmp
adc
adc
and
sti
dec
mov
dec
adc
sbb
dec
jmp
in
dec
rcr
outsb
dec
or
jmp
cwtl
je
setae
xchg
daa
sbb
or
sub
aam
mov
xchg
outsb
mov
out
addr16
leave
imul
dec
xor
inc
push
sbb
sub
mov
adc
insl
dec
in
jno
insb
jne
xchg
push
and
cltd
pop
mov
pop
popa
std
add
jno
mov
enter
pop
movsb
aam
jb
test
jb
leave
sbb
frstor
movsl
shll
mov
push
inc
pop
jns
mov
sbb
mov
xor
cmp
call
mov
jp
iret
ret
adc
fldl
mov
in
movhps
xor
ss
gs
lret
pop
mov
arpl
cwtl
fstps
xchg
mov
jo
fnstenv
jae
int
and
xorl
xlat
lret
jge
scas
sbb
mov
dec
ljmp
stc
std
out
push
sbbb
and
insl
sbb
imul
xchg
push
mov
mov
ss
pop
repz
mov
mov
cmp
fcompl
push
outsb
dec
stc
push
fisubrl
adc
pop
mov
in
mov
fidivs
push
adc
xchg
stos
lods
push
int3
notb
cwtl
jecxz
aas
push
cmc
icebp
movsb
and
bound
out
or
out
sub
xchg
or
xor
test
mov
add
lret
sbb
sbb
es
punpckhbw
test
bound
and
mov
stos
mov
orb
popl
scas
dec
pop
icebp
xlat
cmp
clc
mov
pushf
fisubrs
xchg
mov
xlat
imull
or
rol
int
mov
adc
mov
adc
jne
adc
mov
enter
mov
insl
sbb
push
add
sbb
inc
xor
ja
sahf
int
cmp
mov
bound
insb
mov
mov
outsl
hlt
add
or
jno
jns
pop
mov
call
xorb
cmp
icebp
fidivl
popf
dec
and
xchg
lock
shll
xor
cli
out
add
out
bound
dec
push
repnz
addl
xor
pop
inc
and
insl
mov
daa
dec
jne
pop
pop
and
nop
push
adc
addr16
bound
xchg
push
cmp
cmp
adc
pop
mov
inc
mov
out
push
push
mov
add
cli
lock
int3
push
push
mov
lods
imul
pop
test
int3
imul
fdivrp
jmp
lea
mov
outsb
sbb
xchg
jle
cwtl
sbb
lods
rcrl
filds
inc
bound
rep
add
lds
iret
jmp
push
xor
cmp
add
mov
jp
jg
xchg
out
cli
jns
or
cmp
push
imul
add
imul
sbb
les
popa
insb
adc
mov
insb
nop
dec
or
loopne
adc
sub
repnz
xor
xor
lock
sbb
mov
data16
imul
adc
sbb
add
lds
xor
push
push
dec
xor
xor
sbb
sub
js
inc
in
divl
push
loopne
mov
mov
mov
pop
sbb
sbb
dec
addr16
cwtl
add
and
mov
cld
cmp
mov
punpcklwd
decb
insb
stc
icebp
arpl
mov
push
ret
imul
sub
loopne
das
xchg
sub
ret
jle
fisubl
pop
mov
and
pop
dec
sbb
jnp
es
outsb
dec
jl
stc
lock
and
shl
push
dec
xchg
dec
push
ja
arpl
xchg
fidivrl
sub
in
movsl
std
push
pop
fs
cwtl
popf
add
adc
xchg
pop
jo
rcrl
std
lods
fistps
fucomi
aas
push
pop
out
int
repz
aam
adc
mov
or
daa
cmpsb
hlt
pop
xlat
hlt
jle
and
lock
insl
sbb
inc
xchg
xor
mov
jbe
insb
push
insb
inc
or
loopne
or
push
clc
xchg
pop
clc
adc
jg
inc
daa
cmp
push
fistpll
xchg
and
rcr
mov
sub
or
mov
repnz
lret
insl
clc
push
and
mov
inc
dec
mov
inc
inc
iret
jno
leave
dec
inc
icebp
mov
mov
mov
xchg
inc
int
fisttpll
shrb
outsb
test
nop
leave
shrl
push
stos
inc
inc
inc
xor
cmpsb
hlt
das
xor
xor
fucom
aaa
mov
cmp
cli
ljmp
xlat
push
cmp
push
test
test
arpl
dec
in
cwtl
in
bound
iret
add
leave
inc
push
test
push
loopne
nop
popf
sahf
nop
out
jns
push
and
mov
pop
and
pop
aad
inc
dec
cs
pop
jp
and
and
ljmp
sahf
out
mov
xchg
xor
and
ss
in
mov
sbb
xchg
sbb
jns
fsubrl
out
arpl
adc
in
andb
fnstenv
cmpsb
mov
or
push
push
add
outsb
or
fcmovbe
push
inc
data16
andl
int3
or
pop
xchg
jns
push
sbb
imul
mov
push
std
movsb
and
je
test
mov
adc
and
loop
in
mov
rcl
pop
jecxz
or
js
jnp
or
popa
mul
imul
das
pop
in
or
sub
add
push
mov
and
leave
push
xor
or
mov
push
stos
aam
push
push
mov
or
sbb
std
cs
testl
xchg
inc
pop
fadd
out
jle
inc
movsl
aaa
inc
xor
jbe
push
mov
loop
xor
or
ja
in
rolb
ret
jmp
push
rcl
fcmovbe
jnp
andps
dec
test
mov
adc
std
cmp
pop
push
mov
repz
shll
mov
aas
scas
push
dec
idivl
sbb
jb
xchg
or
int
adc
mov
ret
xchg
and
cmp
mov
pop
cmpsb
add
mov
ja
jnp
das
rol
mov
jp
adc
mov
ret
aad
fidivs
dec
insb
lea
pop
gs
push
xchg
popf
push
loope
test
lret
leave
push
mov
jne
xchg
adc
mov
iret
cmpsb
imul
mov
sbb
shl
lret
out
jg
cwtl
mov
in
mov
loop
dec
repnz
addr16
pop
xor
rorl
lods
cltd
fsubs
stc
sub
mov
pop
pop
inc
mov
daa
in
push
xchg
jo
ficoms
xchg
jnp
xchg
mov
incl
sbb
adc
rcrb
xchg
sbb
out
nop
sub
push
mov
cwtl
mov
mov
in
out
or
inc
int
push
add
scas
mov
xlat
lds
fnstcw
popf
gs
pop
fucomp
into
and
shlb
lods
scas
pop
or
test
add
iret
mov
mov
in
mov
jmp
jg
aam
xchg
xchg
and
jno
lahf
imul
es
pop
mov
repnz
movsb
test
sahf
adc
xor
sbb
mov
mov
jecxz
xchg
dec
ljmp
idivl
dec
mov
outsl
xchg
shr
cli
or
jne
jl
adc
lahf
sahf
and
or
sub
fcomps
sub
lcall
sti
popf
sahf
xchg
test
lea
xor
xorb
xchg
in
inc
mov
push
addl
lret
mov
test
sahf
into
js
ficompl
push
mov
pop
pop
lock
pop
testl
int3
mov
jae
jle
test
sbb
cmpsb
jbe
lcall
sbb
xchg
aaa
jbe
xor
ss
mov
rep
cmp
cld
xor
adc
lcall
xlat
aas
jbe
mov
cmpsl
aad
mov
mov
sahf
mov
mov
inc
xchg
cmp
cmc
int
inc
xchg
dec
inc
dec
mov
pop
mov
and
mov
scas
jmp
dec
fisubrl
and
test
xlat
add
out
push
jp
lods
lods
lea
js
fiaddl
inc
in
xor
push
sahf
fdivrl
adcb
sbb
and
cmc
push
dec
pushf
mov
xor
lahf
mov
aam
enter
jns
xor
or
xchg
push
mov
pop
mov
movsl
pushf
std
or
hlt
or
jp
ljmp
xor
push
adc
imul
imul
daa
or
stos
mov
popa
xchg
mov
or
xor
popf
bound
push
and
jecxz
adc
mov
or
ret
add
movsl
push
jae
xorl
test
cwtl
out
pop
push
shlb
mov
xlat
ss
fwait
mov
sbb
bound
adc
ljmp
jae
inc
cmp
or
add
mov
xor
and
ret
jp
push
ds
jmp
xor
adc
out
inc
or
mov
cs
pusha
out
jns
sbb
cmp
dec
cmp
imul
imul
jl
xor
shll
push
push
dec
out
inc
pop
or
adcl
sbb
notl
sbb
mov
mov
xorl
sub
mov
stos
adc
in
pusha
out
push
in
int
mov
dec
gs
adc
ljmp
lds
nop
fldt
jbe
insb
or
sbb
insl
ljmp
xchg
rcll
dec
and
sub
lret
iret
dec
sbb
fld1
adc
jp
sahf
jle
push
hlt
es
push
push
aaa
outsb
ljmp
sbb
aas
and
inc
sbb
dec
aad
sbb
iret
xchg
arpl
lret
in
pop
push
sqrtps
in
jno
sti
pop
or
aaa
int
repz
movsl
jb
cmp
jne
inc
pop
push
pop
cmp
mov
outsb
outsb
add
cmp
data16
imul
xchg
repnz
mov
sbb
sub
aaa
dec
loope
sub
sub
int3
jmp
and
aam
sub
faddl
pop
push
mov
dec
pop
iret
cmpb
loope
std
fsub
mov
push
xchg
jle
test
dec
mov
outsl
syscall
test
push
jae
xchg
mov
push
push
stc
xor
adc
cmp
aas
ds
and
movsl
mov
push
ret
inc
push
fdivrs
popa
jo
pushw
xchg
or
pop
popa
rcl
xchg
jbe
push
mov
int
repnz
pushw
pop
or
ret
xchg
lods
je
movsb
xor
mov
push
cmp
repnz
imul
std
xchg
jno
push
bnd
fnsave
dec
test
add
cs
cmp
inc
das
ds
xor
ret
or
arpl
mov
mov
inc
mov
dec
insl
mov
loop
outsb
xor
push
add
mov
mov
imul
push
aam
cmpsl
or
jno
add
pop
arpl
xlat
inc
and
mov
fcompl
enter
adcb
idivb
adc
outsl
dec
iret
aaa
fsubrp
mov
sbb
add
mov
xchg
sub
xchg
rorb
ss
js
dec
mov
outsl
add
mov
movsb
mov
outsl
das
or
sub
aad
xchg
dec
push
dec
out
mov
das
cmp
cmp
mov
mov
roll
notl
mov
ret
inc
inc
dec
xchg
scas
stos
and
lods
push
insl
jg
clc
mov
xchg
push
fincstp
sub
jl
sti
ret
jl
adc
cmp
mov
fwait
emms
sahf
cmpsb
test
or
xor
dec
ja
call
loopne
and
or
in
sbb
mov
mov
jge
stos
cwtl
adc
je
mov
fildll
sbb
mov
lahf
mov
jne
cmp
add
out
cmc
pop
lret
cmpsl
loopne
add
imul
loopne
cli
cmp
mov
paddq
sarb
cmpsl
ljmp
and
sbb
mov
jno
mov
xor
stc
add
daa
out
mov
push
stos
cmp
mov
insb
sbb
push
stos
stc
pusha
mov
jbe
sar
or
lods
jns
or
test
cmc
scas
and
pop
or
loopne,pt
std
inc
aam
test
add
ds
dec
pushf
into
popf
sub
mov
sbb
sbb
out
cmpsb
stos
xchg
addr16
dec
in
out
adc
lods
decb
cmpb
mov
pop
in
lock
or
jo
dec
cmp
push
xchg
stos
add
xchg
pop
mov
scas
push
call
push
es
pop
int3
or
fsubl
movsl
and
jb
mov
scas
xor
in
in
inc
mov
vpcmpgtb
or
jo
cld
push
enter
fadd
push
repnz
or
dec
out
push
insb
enter
imul
push
jmp
push
xchg
push
rorl
add
orb
jecxz
cld
xchg
xchg
xor
cli
adc
lret
incb
sbb
push
sub
sub
rclb
cmp
jl
cs
sub
gs
out
pop
cmp
sahf
lea
inc
pop
cmc
pop
cmp
pop
es
mov
fnsave
cli
sub
scas
sub
add
sbb
repz
push
aas
sbb
mov
xor
out
les
repz
test
ret
arpl
adc
adc
push
cmc
dec
inc
or
lahf
int3
sbb
out
xor
in
ss
push
inc
mov
xlat
bound
out
fldl
fisubrl
lock
mov
pop
popf
push
pop
jo
adc
addb
push
mov
inc
pop
mov
sbb
call
pop
pop
mov
mov
pop
xor
test
rorl
add
fdivrl
pop
push
daa
xor
je
mov
daa
mov
pop
sub
jp
push
inc
cmp
shl
mov
jmp
cmp
fcmovu
mov
and
sbb
rcl
inc
xchg
mov
cwtl
in
sbbl
jne
mov
add
pop
and
shrl
pop
inc
pushf
xlat
pushf
dec
dec
adc
das
push
fwait
gs
pop
in
out
jmp
fwait
sbb
repz
xchg
or
push
mov
fsubrp
inc
or
fxch
mov
aad
dec
inc
mov
int3
adc
rorb
in
mov
mov
cmp
jne
push
rorb
lods
jp
push
inc
or
or
jp
add
and
or
jnp
push
fidivl
sub
jb
cmpsb
imul
dec
mov
into
lods
sub
mov
es
inc
mov
and
mov
cmp
das
adc
je
subb
add
data16
ret
cld
jg
sub
in
inc
sub
addr16
and
and
dec
shll
mov
hlt
out
adc
cmc
xor
jbe
cs
adc
dec
push
stos
mov
mov
arpl
js
mov
sbb
jp
fs
loopne
int3
mov
ret
fildll
fisttps
inc
fnstenv
pop
push
pop
test
push
lock
std
lret
mov
push
jne
mov
lret
fmul
clc
icebp
lds
sahf
es
adc
fwait
hlt
inc
mov
lahf
or
sbb
push
insb
or
test
adc
out
sub
mov
lret
fmuls
jnp
sub
pop
out
imul
inc
jo
arpl
xlat
xor
imul
push
testb
fidivl
test
es
fsubl
imul
pop
dec
rcrb
mov
pop
into
lcall
cs
insl
sub
andb
add
xor
jle
inc
pop
iret
cmp
jle
mov
pop
jecxz
cld
jb
adc
pop
clc
rol
push
inc
rorb
gs
cmp
mov
es
test
sub
pop
dec
sub
inc
aas
test
inc
loop
or
stc
in
stc
shlb
push
cld
jmp
mov
lods
aas
ret
jecxz
pop
sub
cwtl
in
je
loop
daa
mov
fimull
or
xchg
push
iret
fiaddl
mov
and
xor
mov
mov
jp
test
jo
into
and
push
hlt
inc
lock
mov
mov
sahf
jo
and
sti
cmp
pop
lcall
dec
aaa
sub
fmuls
adc
jno
in
int
lock
pop
push
sahf
push
lcall
test
cmp
es
sub
inc
xchg
jecxz
xchg
nop
xor
jecxz
cmp
pop
mov
cld
mov
in
inc
andb
fstpl
out
sub
cld
adc
jae
pusha
adc
sbb
inc
int3
ds
imul
xor
out
and
xchg
mov
sub
adc
and
in
ja
out
mov
loopne
jne
dec
lods
sahf
pop
pop
out
mov
gs
clc
cmp
add
xchg
inc
mov
jns
inc
inc
or
adc
das
scas
sub
rorl
mov
notb
or
xchg
mov
fcmovu
sbb
dec
mov
mov
inc
out
or
cmp
mov
test
mov
daa
sbb
mov
movsb
dec
add
pop
sub
aad
mov
fwait
adc
in
cmp
inc
xchg
cmp
jo
sar
mov
dec
pop
dec
lock
lcall
push
roll
and
sub
stos
mov
cmp
movsb
push
jecxz
cmpps
fldt
or
cmp
fwait
ljmp
lcall
shll
in
pop
push
sbb
push
fstpl
sti
push
mov
aad
add
jecxz
in
mov
push
lock
iret
sbb
test
in
dec
mov
dec
das
shrb
push
and
test
outsl
inc
inc
add
mov
push
out
xchg
xchg
sub
cmp
cmp
sbb
pop
mov
mov
add
arpl
push
idivb
push
test
mov
sub
hlt
movsl
xchg
rcll
cli
lret
shlb
pushf
sarb
or
clc
xor
cmc
dec
pop
in
xor
mov
sub
cli
cltd
push
pop
stos
xor
popa
push
xchg
rolb
cmp
pop
scas
jle
fnstsw
jns
adc
test
jp
lods
jl
sbb
and
adc
push
repz
shlb
sti
push
rcl
enter
shll
or
push
cmpsl
pusha
outsl
das
dec
push
lea
pop
nop
stos
sbb
insb
mov
pop
sbb
sub
imul
push
xchg
pop
jl
mov
pop
pop
aaa
jae
jns
test
sbb
aas
loope
push
push
stos
insl
xchg
jecxz
call
add
mov
in
or
and
push
add
inc
mov
movsl
mov
leave
push
inc
lahf
or
ret
adc
adc
push
cmp
cltd
push
inc
push
push
inc
call
mov
shrb
or
mov
inc
jbe
and
add
inc
push
fldt
cld
pop
sarl
popa
or
xor
je
cli
dec
inc
and
push
mov
fdiv
fisubs
dec
divl
insl
jle
cmp
clc
call
pop
jle
mov
xchg
sub
jns
dec
cmpsb
out
inc
jecxz
rcl
inc
jne
add
negb
cld
jmp
jmp
jp
fnstcw
les
pusha
add
addl
aam
xchg
mov
idivl
addl
cld
sti
xor
mov
lret
xchg
outsl
mov
loop
sbb
out
and
aad
jae
insb
or
mov
xor
mov
sub
add
nopl
pop
mov
push
adc
leave
test
ret
cmpsb
xchg
mov
repz
std
mov
inc
inc
ss
imul
pop
aaa
imul
sub
mov
fwait
xchg
xor
subl
in
mov
push
scas
mov
jnp
mov
jecxz
jg
dec
jmp
shlb
xchg
dec
out
dec
sub
sbb
mov
fsubrp
push
mov
cmp
pop
hlt
cmpsl
mov
mov
call
popa
jecxz
sbb
xor
mov
lcall
mov
cmp
push
or
sbbl
dec
inc
cmpxchg
sub
pop
inc
and
mov
pusha
push
jb,pn
scas
or
inc
lret
addr16
xchg
rorb
rolb
enter
stos
adc
imul
mov
cmc
pop
mov
aas
clc
push
lods
push
scas
stc
ret
jae
mov
shl
mov
popa
movsl
pop
jo
popa
lods
add
pop
pop
aam
jl
sbb
or
dec
xchg
insl
push
hlt
stos
push
shrl
cmp
out
and
dec
pop
or
jle
or
push
loopne
inc
xor
lcall
jl
inc
add
mov
jns
cmp
xorb
add
sbb
inc
cli
mov
or
sbb
mov
fsub
aaa
out
jo
sbb
adc
mov
aas
pop
mov
xor
jge
jle
xchg
sbb
xor
and
lds
inc
inc
mov
stos
push
pop
mov
dec
mov
mov
sub
pop
cs
test
push
mov
mov
dec
test
pop
notl
fidivs
mov
add
pop
lret
scas
mov
inc
xchg
insl
mov
dec
inc
orl
push
and
xor
mov
jp
or
movsl
test
lods
nop
repnz
test
add
aaa
push
fisubrs
mov
repz
out
cmp
push
and
xor
and
fistps
lods
xchg
lods
call
push
mov
imul
cmp
bound
mov
scas
sbb
cmp
mov
sbb
adc
out
adc
out
fildl
inc
test
and
xor
leave
dec
sbb
fwait
push
xor
push
pusha
popf
mov
push
mov
idivb
lret
ljmp
push
sub
imul
sahf
fdivrl
imul
rcll
fs
pop
mov
and
jae
sbb
icebp
cmpxchg
inc
or
mov
dec
and
icebp
cmpsl
lret
out
sub
mulb
mulb
pop
or
movsl
dec
pushf
mov
jo
arpl
mov
outsl
pop
push
fwait
loopne
daa
sub
jl
dec
mov
xlat
mov
insl
gs
sarb
cmpsb
mov
lds
aad
aaa
rcrb
pop
xor
sub
out
insl
fldcw
out
and
mov
dec
rolb
adcb
xchg
lret
repnz
aaa
fcomip
les
imul
repz
sbb
enter
ret
cmc
sbb
in
jmp
push
ret
clc
pop
pop
movsb
sbb
aam
repnz
movsl
rcrl
pusha
scas
pop
rcr
pop
push
enter
add
out
scas
test
ds
mov
pop
cli
mov
repnz
shr
cwtl
mov
cltd
test
lea
pusha
xchg
jmp
call
stc
jmp
sub
jmp
ds
xor
sbb
pop
jno
stos
loop
ret
icebp
test
xorb
rolb
cmc
adc
pop
dec
lock
mov
ret
cmp
xorl
jnp
pop
test
xchg
psraw
mov
xchg
inc
mov
lahf
mov
js
adc
mov
pop
pop
sub
adc
scas
mov
mov
lods
xchg
insb
jge
adc
xchg
test
pop
fildll
xlat
add
mov
call
sub
movsl
pop
fwait
icebp
xlat
daa
sub
jle
jge
jl
mov
add
test
int3
adc
fisubrs
jmp
aam
fimull
roll
or
and
stos
mov
mov
add
push
mov
xchg
lahf
into
data16
stos
mov
push
andl
das
negl
inc
jecxz
shll
mov
imul
leave
repz
inc
jmp
xchg
jl
xchg
push
jmp
dec
mov
add
add
stos
xor
cmp
cmpsl
cmp
mov
push
adc
jl
insw
lahf
arpl
sahf
mov
test
xor
ljmp
mov
push
mov
in
daa
push
xchg
push
lahf
mov
nop
hlt
add
inc
test
xchg
mov
adc
ficompl
mov
hlt
fs
aaa
fmulp
nop
sti
lods
xchg
aam
dec
and
push
mov
push
sub
js
insl
xchg
mov
jae
cmp
call
jp
pop
lcall
fdivrs
sub
mov
subl
sub
inc
mov
into
mov
mov
lea
in
adc
jno
notl
lods
cmp
mov
fwait
fwait
addr16
cltd
ret
lcall
aad
mov
lret
pop
jbe
mov
xchg
test
or
jecxz
gs
jmp
fsubrp
lret
mov
jle
out
mov
ret
addr16
xor
adc
fildll
cs
cwtl
popa
jg
add
cltd
or
int
jb
mov
fmull
and
mov
fldenv
outsb
adc
daa
xchg
mov
add
jo
mov
test
inc
testl
es
fadds
mov
inc
pop
test
pop
or
pushl
imul
push
sub
mov
cmp
jnp
xchg
lret
shrl
gs
pop
idivb
aam
add
push
mov
push
mov
stc
aad
insb
mov
lret
sahf
aaa
cld
push
sbb
xor
mov
add
mov
int3
xlat
repnz
test
mov
push
stos
out
fisubrs
cli
imul
mov
pushf
or
idivb
out
push
add
cli
enter
pop
dec
out
push
enter
nop
adc
fistpl
daa
jl
add
jae
sub
cmp
popf
lock
fcoml
mov
scas
lahf
mov
mov
jne
jmp
mov
jge
sbb
js
ret
jne
dec
arpl
push
popa
push
inc
sbb
rol
jo
sbb
dec
mov
xchg
adc
dec
dec
nop
inc
aam
scas
jne
test
push
pop
dec
imul
aas
jnp
jp
fadds
jmp
lea
mov
mov
in
pop
mov
jecxz
mov
sub
loop
das
push
loopne
xor
jo
mov
mov
pushf
pop
push
xlat
orb
pop
test
xchg
dec
jae
cld
sahf
popa
pop
and
add
repnz
data16
sbb
enter
pushf
out
sub
mov
xchg
rorb
adc
dec
add
mov
out
sub
xor
dec
mov
imul
test
push
cmp
xor
xor
cs
imul
scas
pop
push
mov
lds
shl
jmp
fsubl
inc
adc
adcl
bound
jae
xor
pop
mov
not
repnz
add
rclb
psadbw
cltd
loop
inc
scas
adc
outsl
push
sbb
adc
es
mov
adc
cmp
mov
add
push
mov
mov
mov
lcall
xchg
push
scas
xchg
xchg
in
out
popf
mov
xchg
adc
mov
xor
dec
les
and
or
pop
inc
jns
test
dec
push
into
rol
stos
jmp
cmpsl
jne
movsb
aad
sti
fwait
ss
shll
sub
mul
mov
std
sub
gs
cs
dec
dec
fadds
pop
loop
mov
loope
call
aam
lahf
or
gs
mov
cmpsl
mov
sbb
cmp
stc
mov
cmp
cli
push
mov
data16
sub
or
sbb
fstps
int3
std
push
inc
dec
cmp
jbe
push
pop
mov
cmpsb
push
mov
hlt
push
lret
or
insb
pop
sbb
ja
rolb
popf
cmovnp
or
pop
in
dec
ret
loope
dec
rclb
call
sbb
insb
outsb
adc
les
test
pop
or
or
daa
scas
adc
hlt
repz
push
jle
sub
push
int3
mov
mov
outsl
fcomps
outsl
sbb
sti
ds
cli
or
cmp
xor
inc
mov
cmp
lea
mov
pop
mov
mov
xchg
pop
out
cmp
les
or
out
mov
fwait
imul
dec
out
pop
aad
mov
loopne
push
stos
addl
fstl
int
or
inc
push
adc
out
cmp
sbb
in
xor
repnz
pop
push
outsl
push
sub
sub
fistl
xchg
dec
insl
rorb
call
cmp
flds
pop
jl
insl
pop
pop
das
mov
je
jae
cmp
cmp
pop
outsl
test
outsl
cmp
push
and
ljmp
xchg
pop
push
dec
and
cmp
pop
loop
lahf
imul
icebp
cmp
in
mov
cmp
mov
sti
sbbl
dec
lods
out
jbe
inc
cmc
xchg
add
jmp
and
sub
pop
andl
inc
jmp
lods
pop
stc
jle
and
adc
add
shll
mov
into
and
push
add
jb
dec
xchg
inc
ror
xchg
or
addr16
pushf
adc
outsl
mov
out
sbb
int3
scas
jno
aaa
popa
cmpsl
cwtl
and
lock
mov
xor
jno
gs
push
aaa
dec
stc
mov
in
mov
mov
vmread
sbb
add
call
inc
inc
mov
push
mov
and
dec
in
xchg
sub
xchg
pop
xor
cmp
sahf
or
inc
and
test
jp
out
in
or
jmp
shrl
mov
sub
out
out
dec
sbb
mov
cmp
jne
push
test
sbb
fisttpl
cltd
out
push
andb
mov
shrb
lret
gs
bound
fldt
add
adc
pop
mov
cmp
int3
inc
jle
dec
faddp
mov
cmp
cs
jns
gs
loope
dec
leave
sub
adc
jo
shrb
inc
jp
lods
add
mov
lods
dec
dec
inc
push
es
mov
test
pop
filds
add
subl
loopne
push
stos
fstpt
adc
stos
sbb
std
les
push
pop
sub
test
test
js
gs
imul
mov
adc
mov
std
xchg
sub
jle
cltd
enter
xchg
vmovhpd
pop
enter
cs
ds
ds
push
push
mov
inc
inc
ljmp
hlt
lds
pusha
or
push
pop
int
push
imul
rolb
push
je
in
cmc
in
jmp
jo
cmpsl
mov
fsts
repz
or
inc
push
enter
lds
stc
movsb
or
enter
in
jle
test
inc
adc
gs
cltd
arpl
dec
mov
and
test
mov
sub
xchg
scas
cwtl
lret
adc
loope
fbld
repz
ja
dec
neg
dec
shll
or
jns
fstpl
fwait
shll
leave
adc
filds
xchg
xlat
data16
lret
popa
dec
icebp
xorl
xchg
or
mov
jg
lret
dec
dec
out
jecxz
push
and
mov
bound
adc
lods
or
sbb
orb
mov
movsl
aaa
das
dec
mov
icebp
adcl
fbld
xchg
ja
push
pop
std
sub
or
dec
ja
icebp
loope
add
scas
imul
cltd
mov
inc
cmp
inc
dec
cmp
loope
pushf
pop
cmp
cs
xchg
stos
stos
xchg
cmpsl
sbb
out
imul
jns
insl
lock
dec
push
inc
jne
pop
popf
rorb
cs
cmp
dec
test
jp
sub
dec
sub
or
xchg
xor
ret
test
xchg
std
imul
scas
shlb
pop
xchg
mov
pop
rep
lahf
push
sub
mov
bound
inc
stc
in
addr16
popf
fmull
mov
mov
push
dec
mov
or
sbb
mov
addr16
lret
xchg
fildl
cmp
xorb
cmpsb
inc
xchg
cmp
pop
loop
sysret
mov
pushf
lcall
push
es
inc
inc
psadbw
or
and
pop
mov
sbb
fwait
or
adc
aas
dec
pop
bound
push
dec
cmp
rol
mov
inc
mov
xor
in
into
jmp
jmp
xor
stc
inc
dec
loope
lea
push
scas
aam
scas
inc
xor
xchg
rclb
adc
lret
jge
pushf
xchg
ret
insl
adc
jbe,pt
mov
jo
sub
scas
push
or
cmpsl
lret
mov
test
fisttpll
call
pop
int3
push
mov
jne
in
movsb
adc
pop
call
cmpsb
and
shll
aam
dec
xchg
pushf
pop
mov
mov
pusha
ljmp
xor
int3
push
call
repnz
sub
cmp
dec
mov
push
mov
jmp
int3
stos
daa
mov
roll
out
sbb
mov
mov
xor
dec
std
add
sub
mov
add
pop
sbb
ss
lds
and
sub
push
imul
out
call
xchg
das
cld
insl
pushf
cwtl
popa
jb
and
arpl
and
outsb
popa
ss
push
movsl
add
repnz
movsb
test
dec
xchg
jp
jmp
xchg
sbb
ret
cmp
fidivl
mov
adc
incl
js
imul
and
mov
call
outsl
jns
xorl
xor
and
insb
mov
adc
mov
ret
pop
push
rcrl
sar
dec
dec
ror
icebp
cld
sbb
pop
ret
int3
insl
aad
test
pop
pop
dec
scas
mov
test
xchg
cmp
dec
idiv
jecxz
dec
cmp
test
and
imul
repnz
lcall
cmp
push
shlb
inc
adc
adc
enter
push
js
aaa
cld
dec
adc
je
sbb
out
xor
test
cli
pop
in
jg
xchg
fsts
frstor
clc
or
ljmp
dec
fiaddl
sti
push
fistpl
es
movsl
shl
stos
sbb
mov
jp
dec
sub
pusha
push
pop
in
jecxz
fs
orl
movsb
xor
mov
adc
std
sbb
dec
lods
mov
les
mov
xchg
cmp
push
call
dec
dec
pop
jmp
dec
in
int3
call
add
sbb
dec
mov
stos
into
out
cmp
jbe
pop
mov
dec
cld
pop
sbb
adc
fistpll
cmp
in
outsb
xchg
mov
push
or
adc
xor
fcompl
xchg
push
and
dec
mov
fldt
dec
mov
mov
xchg
sar
inc
out
out
adc
cld
cmc
lret
fld
mov
aad
fidivrs
jo
fwait
in
mov
js
adc
loopne
xchg
jle
test
cmpsb
push
mov
adcl
adc
dec
fidivs
pop
lldt
jb
jne
loope
inc
lcall
jb
sbb
pop
push
or
outsl
sub
fidivs
insb
repnz
cmp
lods
into
popf
int
jae
scas
fcmove
mov
and
aam
loopne
sub
scas
mul
das
dec
xor
iret
adc
add
les
cltd
cwtl
lret
jnp
push
data16
aas
pop
ljmp
cwtl
inc
std
cs
and
adc
sbb
add
aad
subl
inc
push
cltd
cs
and
jne
push
aad
cmc
xchg
sbb
jp
or
pop
jge
sbb
test
fbld
or
ss
cmp
jle
mov
mov
xor
insb
and
or
in
sti
push
lock
sbb
pop
mov
cwtl
lock
mov
cmpb
dec
loopne
push
xchg
lea
clc
push
xchg
call
xor
jge
pushl
cmp
test
insb
scas
cmp
lret
fisubs
dec
xor
sub
or
push
repz
cli
mov
imul
mov
sbbl
lret
std
mov
shl
mov
mov
jecxz
and
insl
add
jae
or
jmp
xchg
outsl
mov
cmpsl
outsl
ret
das
sbb
aaa
mov
icebp
lret
fcoms
pop
fs
or
out
xlat
scas
mov
int
mov
enter
xchg
dec
sub
jge
idiv
push
add
rorb
imul
call
adc
scas
mov
cld
in
add
push
fdivs
stos
cmp
mov
hlt
mov
jae
xor
sarl
je
or
cmpb
fdiv
inc
dec
cwtl
sub
xor
or
fimuls
pop
adc
or
mov
test
push
ret
fs
pop
repz
push
fxch
data16
jle
stos
inc
add
jecxz
test
and
iret
into
repz
inc
xor
sub
xchg
xor
pop
jne
pop
rcrl
mov
stos
push
pop
test
test
ja
mov
mov
sahf
xor
jl
in
setbe
das
and
or
or
aas
sub
push
cld
dec
jp
jbe
stos
cmpsl
ds
ljmp
ret
dec
fimuls
inc
mov
rolb
add
lea
jne
sbb
xchg
xor
pop
fidivrs
int3
aas
cmc
rcrl
fsubrl
dec
sbb
in
jl
push
in
int3
je
mov
sbb
fmull
fisttps
sbb
cmpsb
lds
add
or
fisttpll
ffree
dec
lock
fbstp
sub
xor
or
sbb
mov
das
aad
add
scas
sub
daa
dec
out
pop
xor
xor
aam
pop
pop
cmpsl
pusha
mov
in
mov
and
gs
push
js
out
jne
mov
push
dec
push
dec
into
fdivr
xchg
mov
cli
cwtl
clc
xchg
jnp
jge
dec
dec
neg
cmp
or
in
rclb
mov
adc
inc
push
jle
pop
cmp
aam
sbb
mov
shll
sbb
loop
and
jp
lret
pop
adc
loope
imull
adc
out
sbb
cmp
jnp
pop
xlat
adc
sahf
mov
in
insb
inc
mov
sbb
and
fyl2x
sub
loope
mov
jle
pop
pop
mov
mov
mov
sub
in
mov
scas
popf
xchg
out
out
shll
cmp
cmp
addr16
add
jo
es
inc
jne
or
push
cmpsb
popa
pushf
add
clc
cwtl
inc
sub
mov
pop
jbe
dec
and
mov
inc
divb
ret
jnp
je
fs
rclb
iret
add
loopne
sahf
and
sbb
lret
xor
jmp
cmpsb
test
adc
leave
pushf
sub
jne
icebp
aad
mov
push
pop
inc
dec
sbb
inc
add
jb
cmpsl
sub
stc
sub
and
test
arpl
bound
adc
aad
mov
jg
loop
sbb
addr16
fsts
sub
lret
xchg
mov
mov
and
add
shl
jle
mov
mov
aam
sets
sarb
adc
test
out
jge
lock
jnp
aad
std
xchg
xchg
adc
popa
dec
insl
in
movsl
sub
mov
sub
or
cmp
xor
aaa
mov
leave
cmp
neg
orl
lret
push
call
call
add
inc
in
or
insb
inc
movsl
cs
dec
cmp
shll
js
or
ret
pushf
xlat
sbb
jae
jne
outsl
lock
adc
push
fwait
int3
aam
inc
lods
or
ret
out
jle
inc
stos
mov
or
aaa
lock
in
loopne
dec
fiadds
arpl
imul
mov
and
adc
outsl
pushf
leave
inc
jbe
daa
jg
or
mov
push
jne
dec
jno
mov
and
lods
xor
inc
xlat
addr16
or
cmp
sub
push
xor
sbb
sbb
push
imul
cmp
push
mov
rcrl
js
pop
popf
pusha
fmul
add
jbe
fs
mov
pop
mov
sub
jns
mov
xchg
push
add
and
inc
mov
sub
dec
sbb
shr
mov
lahf
add
int3
fwait
lret
dec
sub
repnz
fnstcw
gs
xor
pop
cs
ljmp
jno
ret
xor
into
pop
ret
xor
pop
popf
cmp
ret
mov
mov
and
add
loop
les
fstpt
add
frstor
push
push
or
addb
dec
jg
push
push
in
sbb
pop
cmp
stos
movsl
xchg
sbb
fstl
lods
fists
divb
mov
push
push
enter
test
call
xchg
inc
das
cltd
push
or
lret
sub
jecxz
push
and
fimull
shrl
mov
hlt
clc
lcall
and
in
dec
and
es
jl
pushf
lds
sbb
push
scas
xor
jl
mov
pop
fimuls
pop
inc
dec
pop
cmpsl
xor
lret
mov
add
stos
ja
mov
mov
mov
mov
ljmp
in
movsb
imul
cld
xchg
mull
sbb
pop
or
sbb
cs
out
or
push
inc
xchg
xor
loope
pusha
lds
lret
jle
outsb
cmp
fisubrl
stc
mov
adc
nop
mov
xchg
xor
jb
arpl
mov
repz
movsb
xorb
loope
rcrb
pop
and
jecxz
outsb
dec
out
leave
je
push
out
pop
repz
push
xchg
inc
xor
xchg
xchg
push
jecxz
jnp
fwait
mov
fcomps
mov
jl
scas
mov
lret
adc
xor
pop
adc
je
das
jle
shr
mov
insl
fists
push
lcall
loopne
cmpsb
daa
push
inc
mov
pop
xchg
decl
and
inc
int3
mov
pop
outsb
into
movsb
mov
add
lret
xchg
mov
in
add
fsubrp
cmp
outsb
adc
test
dec
js
sub
mov
xchg
and
ss
dec
cld
push
mov
pop
mov
add
cmp
sbb
lds
cmp
test
movl
push
pop
mov
aam
inc
aaa
sahf
mov
cmp
push
xor
aas
inc
push
lret
lahf
push
fnstcw
pushf
and
mov
aas
stos
mov
stos
adc
jb
test
lcall
test
jno
sahf
mov
je
push
or
push
sub
das
mov
out
mov
cwtl
dec
and
js
or
and
push
inc
int3
mov
out
inc
js
jns
sbb
mov
in
imul
cmp
sahf
aas
or
mov
push
lds
nop
sub
sbbl
mov
mov
sub
mov
jbe
push
insb
scas
out
es
inc
sbb
pop
cmpsb
cmp
out
popa
sub
add
ja
sub
inc
cmc
adc
xor
jne
sahf
gs
jl
inc
jg
ret
aad
mov
mov
cmp
in
daa
push
fists
cltd
xchg
jnp
cld
mov
fwait
lods
rcll
sub
shl
push
pop
pop
rcrb
lret
imul
dec
sub
and
inc
std
out
inc
imul
sub
push
lahf
loope
push
xlat
test
pop
inc
inc
sbb
pop
lret
in
sbb
pop
call
mov
mov
jbe
add
pop
push
rolb
mov
loope
rolb
xor
in
mov
lock
jno
daa
lock
and
push
sbbl
dec
xor
mov
cmpsl
add
pushf
dec
int
xor
pop
ret
and
xchg
mov
movsb
subl
in
mov
mov
jge
xlat
fidivrs
shlb
imul
cmp
jecxz
add
add
mov
xor
jecxz
scas
cmp
mov
cmp
je
es
dec
add
int
sub
movntps
jl
outsl
push
push
jnp
pop
stos
dec
sub
xchg
dec
repnz
aad
adc
pop
je
or
pop
dec
inc
je
add
lods
inc
lds
int
xchg
cwtl
clc
and
mov
lret
jp
mov
fxch
out
out
mov
in
or
fidivs
mov
rcrb
dec
mov
pop
bound
add
cld
cmpsb
fistpl
cmpsl
les
jns
in
pusha
jl
cmpl
into
outsb
and
call
pop
das
or
mov
mov
sti
push
fidivl
xor
mov
mov
mov
pop
call
iret
dec
xlat
xchg
cld
inc
jmp
movsb
in
sbb
mov
mov
cmpsl
or
andl
jmp
cwtl
pusha
int3
sbb
push
hlt
cmp
inc
iret
sahf
jl
loop
roll
sahf
in
js
fadd
push
fdivs
push
sbb
mov
sbb
dec
movsb
ret
dec
inc
pop
jnp
aaa
jb
and
ficompl
fiadds
mov
mov
push
xchg
mov
js
scas
xchg
pop
ja
dec
sub
loope
pop
sti
ljmp
sarb
leave
inc
cld
push
push
cmc
sbb
shlb
pop
fidivrs
repz
nop
pop
cmpsl
and
mov
popf
or
sbb
push
push
leave
inc
stos
add
testl
jb
out
jecxz
mov
pop
out
pop
xor
cltd
push
in
push
leave
add
mov
dec
sub
xchg
pop
popf
out
test
pop
inc
out
or
push
push
xchg
je
scas
hlt
lcall
add
inc
xor
outsb
lcall
dec
cmc
mov
mov
sub
mov
xchg
sub
inc
test
add
mov
sub
jns
scas
jo
aad
adc
sbbl
sahf
mov
inc
mov
outsl
mov
xor
fdivl
subl
and
rorb
jl
rol
out
enter
inc
rcr
jae
lods
jp
insb
rclb
dec
ret
stc
lods
sbb
stos
adc
es
in
cltd
pop
mov
xor
add
xor
mov
fistpl
ja
dec
nop
xchg
fs
lcall
mov
and
jl
add
xor
xchg
inc
inc
dec
ror
pop
aam
mov
jne
outsb
or
stos
aad
shll
loope
pop
cmc
mov
xor
sahf
aaa
outsl
dec
add
push
jne
sub
aam
decb
sbb
test
add
mov
mov
test
mov
and
push
mov
or
pusha
scas
mov
xor
and
xchg
dec
bound
movsb
sub
mov
sub
xchg
rcl
mov
movsl
sbb
mov
lods
sti
mov
popa
insl
testb
inc
sub
mov
aad
fsubl
aad
adc
lret
testb
cs
jae
enter
out
jne
push
xor
mov
ss
cli
sahf
jae
mov
xchg
in
int3
lcall
push
pop
popf
movsl
pop
xchg
xchg
hlt
out
lds
mov
imul
sub
xlat
xchg
in
cmpsb
cmc
lods
rclb
adc
or
stos
mov
push
mov
xor
out
cs
fwait
push
pop
mov
ja
mov
mov
or
adc
std
outsb
adc
xchg
out
inc
mov
xchg
out
or
sbb
fisubl
cmp
dec
xchg
cli
or
xchg
inc
mov
int
fsubrs
ret
addb
dec
shl
xor
mov
sub
push
pop
aam
cmpsb
loop
xlat
shll
or
mov
inc
mov
sbb
test
mov
pop
cmp
and
call
cltd
movsb
enter
dec
mov
test
add
mov
pop
test
jge
cwtl
ljmp
jne
jle
sarb
ds
jo
scas
mov
hlt
clc
pop
pop
lahf
or
pop
in
in
fidivs
filds
xchg
inc
mov
sub
cmpps
out
pop
in
cmc
lea
lea
scas
jle
mov
xchg
mov
scas
outsl
fsubs
jno
test
pop
jb
sub
ljmp
outsl
xchg
pusha
push
mov
jns
stc
cmp
mov
mov
mov
sub
cmpb
loop
js
ret
xchg
sub
imul
imulb
mov
cmpsl
subl
in
lret
data16
jno
mov
jnp
cld
lahf
in
cmp
push
push
lret
daa
jge
iret
and
in
out
mov
std
pop
sub
and
push
bound
jno
mov
dec
xor
divl
lock
push
mov
stos
xor
add
arpl
xchg
mov
sub
inc
nop
lcall
sbb
daa
popf
cs
movsl
scas
movsb
mov
lret
xor
insb
mov
cmp
js
fsubrl
pushf
repz
mov
imul
adc
ficompl
sub
or
repnz
or
cld
adc
scas
sub
mov
mov
mov
adc
jo
xlat
adc
sub
cli
ja
dec
adcb
push
test
mov
add
call
mull
inc
daa
and
sub
mov
add
adcb
xor
pop
push
cmp
mov
ret
pop
jb
loopne
and
mov
lock
or
imul
cmc
pushf
dec
push
xor
mov
movl
inc
ljmp
rcrb
loop
cwtl
sbb
je
and
inc
add
je
lahf
and
adc
or
mov
movsb
sbb
shlb
jl
out
push
push
xor
xchg
push
aas
pop
pop
in
out
jnp
push
cmpsl
in
and
sub
iret
out
scas
loop
in
mov
ja
ret
pushf
shlb
mov
nop
mov
mov
adc
jnp
cmp
sub
int3
push
ds
xchg
mov
movsl
push
xorb
cmp
sahf
in
sbb
lds
cmp
dec
iret
push
adc
and
dec
in
mov
xor
jg
test
lea
shrl
daa
and
bound
fsubrl
aad
dec
jbe
popa
and
xchg
mov
jg
mov
xor
lds
in
idivl
pop
iret
ja
inc
out
push
das
xchg
clc
popa
lcall
insl
mov
and
or
pop
jb
fidivs
cld
push
or
mov
movsl
sub
repnz
cmp
add
notl
dec
xchg
fsubr
rorl
dec
push
sub
inc
nopl
sub
outsb
sbb
aad
and
flds
mov
inc
sbb
stc
into
ss
mov
lods
pusha
scas
nop
dec
xor
int3
add
sbb
inc
xchg
lea
pop
movsb
lods
sbb
scas
fs
pop
cwtl
jns
jno
xchg
mov
mov
cmp
js
lcall
aad
fcmovnb
test
sub
push
ja
cmpl
testl
js
or
rorl
leave
idivl
jo
pop
mov
sbb
lock
cld
push
std
mov
in
jmp
jecxz
rorl
xchg
pop
cmpsl
mov
mov
scas
sub
push
cmp
jmp
popf
mov
mov
jb
sbb
scas
mov
test
adc
dec
sbb
add
das
xlat
cmp
imul
and
push
jge
inc
xor
and
daa
lods
add
clc
std
adc
fisttps
insl
xchg
je
pop
mov
das
xchg
xchg
cld
mov
loope
je
repnz
xchg
pop
or
or
jnp
out
sbb
xchg
mov
pop
sub
lods
and
and
je
lret
adc
mov
in
das
pop
sbb
pop
int3
mov
into
adc
cmp
pop
jnp
xor
stos
sahf
push
lret
jp
outsl
dec
popf
ficoms
inc
sti
adcl
ss
fsubl
sbb
lcall
gs
push
pop
in
fdivl
mov
ss
jno
shl
inc
daa
out
pop
frstor
negl
xchg
xchg
jle
sahf
pop
xchg
pop
jp
movsb
pop
mov
inc
insl
or
sub
into
mov
jae
jno
jb
jmp
cmpsb
rcrb
mov
in
shll
popa
xchg
mull
jecxz
pop
aam
pusha
stc
pop
call
mov
adc
xorl
shlw
insb
lret
push
adc
mov
adc
mov
xor
dec
sub
clc
xchg
lods
fldl
inc
adc
inc
js
add
dec
pop
je
dec
mov
mov
push
push
mov
xor
rcl
mov
xor
popf
es
pop
inc
cltd
ret
addr16
ds
insb
sub
call
out
jno
push
cmp
jbe
insb
movzbl
arpl
pusha
dec
adc
jp,pn
push
push
jl
cli
mov
fsubrl
mov
fmuls
xchg
ja
out
add
sub
daa
pop
pop
or
pop
jge
ficoms
fmuls
sbbb
jmp
pop
loopne
jmp
fisubrl
jae
sub
push
jb
xlat
sub
mov
cmpl
aaa
xchg
push
jns
cmp
xchg
ror
out
sub
jbe
sbb
fs
mov
inc
cmc
xor
jp
fcoml
test
loope
sub
dec
mov
sub
cmp
cltd
pop
shlb
mov
scas
adc
sbb
rcrl
int3
push
add
inc
enter
inc
push
test
dec
in
mov
pop
xchg
or
cmp
mov
test
jg
lds
sub
imul
jle
fisttps
popa
push
lahf
outsl
ljmp
jbe
adc
ds
xchg
enter
pop
cmc
or
shll
sti
push
sbb
sub
fs
jb
xor
mov
inc
lds
fnstsw
pushf
jne
xor
cmp
mov
jbe
sbb
xor
rcrl
mov
icebp
sbb
rcrl
adc
test
jns
and
test
push
aam
jecxz
sub
stc
cmp
adc
insb
insl
sub
es
cs
pop
fnstsw
std
nop
orl
flds
fwait
jne
lods
jge
lea
or
loopne
jnp
data16
and
ret
pop
movsb
sti
fsubrl
mov
rcll
pusha
add
xor
dec
outsl
cmpsb
inc
or
mov
in
jmp
ret
push
out
xchg
push
cmc
leave
je
cmp
or
pop
add
dec
jno
xor
jmp
out
add
xor
jmp
xchg
pop
sysenter
sub
cld
pop
xor
pop
fsubs
push
mov
stc
sub
dec
pusha
out
fs
sti
mov
fisubs
fwait
aas
das
xchg
push
mov
out
out
das
sti
jnp
test
cld
adc
mov
outsb
add
lods
insb
inc
out
aad
push
xorl
call
mov
xor
into
into
add
xchg
hlt
imul
je
mov
lea
adc
pop
int
lahf
cwtl
and
cmp
mov
add
pop
lret
jnp
jae
test
mov
add
push
or
jl
xchg
mov
js
shl
lcall
insl
hlt
cwtl
adc
sti
fstps
xchg
imul
inc
add
out
push
cmp
clc
test
xor
lods
addr16
fiadds
mov
xchg
dec
and
jge
arpl
stc
fiadds
adc
xor
or
cltd
push
incl
movsl
mov
mov
and
cltd
pop
or
outsl
or
push
filds
jecxz
push
cmp
mov
push
fwait
into
arpl
mov
movb
push
mov
adc
xchg
repz
lock
in
xor
push
push
sub
hlt
fwait
lods
push
outsl
sbb
scas
adc
cmp
sarl
outsb
fiaddl
pusha
aam
arpl
and
cmpsb
stos
repnz
fsubrs
mov
andl
lods
adc
jp
cmp
sub
cmp
shlb
mov
pop
lods
clc
imul
call
jbe
xor
gs
loop
push
mov
cmp
jns
mov
jb
repnz
sub
ss
mov
sub
cmp
sub
or
repnz
in
sub
push
ret
add
sbb
leave
daa
adc
push
sub
sbb
dec
jmp
pop
test
adc
pop
pusha
aad
in
jbe,pn
and
test
mov
sub
hlt
pushf
stos
inc
shlb
adc
mov
mov
arpl
test
or
pushf
push
lret
aas
dec
jno
les
aam
jmp
push
dec
sub
sub
dec
aas
push
jne
pop
or
add
mov
add
das
xor
out
xchg
add
popf
gs
js
xchg
inc
leave
mov
xchg
rol
mov
imulb
fiadds
dec
push
mov
sub
gs
fimuls
mov
test
sub
stos
enter
dec
int3
jb
jno
test
mov
sahf
push
fsubrs
cmp
jmp
jmp
cmpsl
in
adc
sbbl
jbe
sbb
lret
sbb
and
cli
jl
adc
cwtl
mov
iret
aad
mov
pop
inc
xor
dec
sets
dec
test
mov
pop
js
cmc
jno
jmp
pop
push
test
stos
test
orb
add
adc
sub
cwtl
sub
and
dec
mov
mov
push
and
jbe
jecxz
xorb
ljmp
jb
sbbl
xchg
mov
in
or
in
cwtl
mov
popf
push
jns
fbld
dec
add
mov
mov
xchg
mov
cmc
xchg
push
and
ljmp
jmp
sbb
adc
orl
aas
cmc
sarl
dec
mov
push
cli
pop
int3
aam
push
out
aaa
pop
inc
add
dec
push
add
movsl
mov
jecxz
add
xor
insl
loopne
negb
hlt
outsb
repz
daa
ret
idivb
sub
clc
inc
pop
pop
push
or
loop
orb
or
lahf
sti
ret
shrb
loopne
aam
push
pop
test
jbe
fmull
fdivrs
cmovle
add
mov
sbb
xchg
xchg
sbb
out
inc
cmc
add
subl
ljmp
in
out
stos
xor
mov
addr16
and
push
and
mov
mov
cs
push
or
out
jbe
push
mov
xchg
or
idivl
mov
sub
pop
jle
dec
mov
iretw
add
mov
cmp
inc
lahf
dec
inc
jbe
xchg
stos
push
lahf
xchg
mov
mov
out
mov
and
or
int3
cltd
icebp
shll
lea
fnstsw
cmpsb
lahf
xchg
lods
or
xor
test
push
jp
aad
ret
or
push
or
aas
mov
mov
in
aam
and
ret
xor
inc
inc
push
aam
pop
inc
xor
pop
imul
inc
adc
sti
push
inc
jae
jle
mov
test
fmulp
xor
fiaddl
or
inc
jbe
mov
pop
loopne
or
insb
push
insb
lahf
sub
loopne
mov
add
xchg
stc
mov
scas
mov
pop
jecxz
sub
lret
ja
xchg
aam
lret
bsf
out
jmp
or
test
jnp
mov
stos
mov
out
xchg
cmpsb
xchg
sahf
mov
xorb
outsl
jl
mov
mov
cmp
stos
xchg
iret
gs
addr16
pop
jo
das
aad
popf
cmpsb
pop
les
js
push
dec
jl
push
arpl
inc
jmp
mov
aas
outsl
cmp
dec
push
cs
jp
jle
cwtl
sbbb
or
cmpsl
inc
fwait
mov
jb
pop
lea
lods
cwtl
icebp
push
push
jbe
mov
leave
test
mov
test
std
pop
cmp
dec
testl
out
adc
xor
loopne
sbb
inc
or
cmp
shl
icebp
pop
xchg
filds
jle
in
and
pop
xchg
icebp
js
xor
jg
mov
scas
sarb
inc
adc
pop
aas
test
fstpl
mov
test
jl
dec
mov
dec
out
into
xchg
fisttps
push
mov
scas
sub
icebp
rolb
inc
pop
cmp
mov
inc
push
aad
and
std
xchg
subl
xor
inc
mov
add
mov
add
mov
out
rorb
lds
xor
xchg
lret
or
adc
sub
stos
adc
mov
out
int
shlb
aam
jle
gs
jns
popa
lcall
and
inc
xchg
fcoms
je
sahf
inc
gs
mov
jmp
xor
and
xor
or
repnz
fwait
xor
lea
pop
jmp
test
pushf
stc
inc
aam
pop
cmpsl
lods
movsb
lds
insb
popf
mov
jns
and
ja
repnz
decb
shl
inc
lcall
sbb
mov
out
stc
fnstenv
push
and
pop
stos
imul
inc
mov
rclb
sub
std
int
jmp
xorl
into
or
arpl
icebp
adc
aad
and
jmp
and
add
and
xor
sub
shll
cwtl
xor
inc
dec
ror
jp
cmpsb
jae
push
ds
jnp
sub
jno
and
lods
mov
sahf
pop
pop
ds
sti
cmp
mov
inc
fldenv
pop
mov
aaa
mov
pop
cmpsl
loop
sbb
pop
xchg
inc
mov
push
test
leave
mov
push
imul
cmp
loopne
ljmp
sub
call
mov
lods
xor
sub
mov
mov
enter
cmp
in
mov
lock
pushw
xchg
in
test
fucom
inc
notl
pop
adc
aad
mov
fst
fmull
iret
xchg
pop
ret
pusha
push
repz
ret
sbb
lock
xchg
sub
stc
push
rcl
mov
arpl
xor
mov
stos
sbb
jp
xchg
xchg
and
in
sti
pop
hlt
xchg
sbb
rcrb
jno
fwait
leave
mov
mov
sbb
out
add
push
jo
jae
clc
test
sub
xor
mov
push
ficompl
ja
test
inc
adc
or
pushf
push
mov
icebp
xlat
or
scas
mov
mov
jmp
cmc
cli
imul
and
push
cmp
aam
clc
jo
sti
jb
hlt
jl
cmpsb
fs
ja
mov
push
sub
inc
mov
adc
mov
push
pusha
push
and
sbb
ds
xor
pop
push
ljmp
mov
int3
xchg
and
mov
out
and
mov
xor
add
mov
sub
mov
fnstenv
aam
lret
ja
gs
lods
cmpsb
movsb
push
stos
jns
mov
aas
push
jge
dec
sub
mov
cmc
xchg
jecxz
add
cmp
fsubr
fwait
xchg
lods
pop
or
adc
push
push
mov
jne
lcall
outsb
outsl
fwait
and
mov
rol
scas
test
cs
sbb
dec
not
mov
mov
cli
sti
ret
xor
call
rcrl
and
sbb
leave
push
and
dec
xor
loop
out
xlat
stos
inc
and
popf
mov
mov
in
inc
out
andb
jle
sbb
loop
adc
pop
dec
shll
jg
sbb
push
jecxz
mov
out
clc
xor
xor
or
cmpsb
jno
das
lock
push
clc
cmp
sarl
sbb
loop,pt
loopne
mov
pinsrw
push
xor
call
into
out
shll
stos
xchg
xchg
pusha
push
jecxz
pop
mov
pop
jle
fiaddl
adc
mov
and
in
jne
nop
into
aas
inc
mov
es
mov
push
cmp
ret
loop
stos
sbbl
inc
es
mov
jnp
mov
stos
add
bound
in
add
xchg
mov
sub
ljmp
movsl
push
push
loopne
out
push
pop
cmp
and
adc
or
orl
pop
das
xor
sub
repnz
cld
dec
cs
loopne
repz
movsb
fsts
call
loop
fldl
jns
out
dec
je
mov
or
pop
stos
sub
lds
mov
sbb
leave
add
inc
mov
insl
test
push
mov
divb
sbb
sti
ja
lods
fnsave
adc
stc
das
sbb
adc
cmpsl
sub
aad
xchg
jbe
xor
ds
mov
int
insb
sub
test
stos
test
or
inc
xchg
cmp
sub
pop
pop
rorb
jp
subb
sub
xlat
add
xor
cmp
and
push
mov
xchg
add
loopne
outsb
rcl
and
lahf
stc
call
xor
push
ja
cltd
outsl
xchg
push
int
adc
hlt
jb
fimuls
sub
imul
cmpb
pusha
int
sbb
push
mov
xchg
test
das
adc
cli
icebp
jmp
pop
inc
test
mov
inc
mov
cmp
fstpl
xor
in
ds
enter
loop
sti
mov
mov
and
imul
mov
mov
fsubrl
adc
jne
gs
jnp
sbbl
push
jo
jb
push
add
cmp
rcrl
in
ret
mov
sub
cmp
jge
dec
and
sub
jecxz
add
xchg
stos
mov
cmpsb
bound
jg
mov
mov
xor
cmpsb
hlt
inc
fsts
test
mov
icebp
movsl
fucomip
mov
out
push
outsl
xchg
mov
pop
push
ljmp
sbb
sub
sub
jg
outsb
in
mov
movb
insl
fs
dec
jbe
xchg
inc
adc
data16
pop
jmp
popf
nop
lahf
sub
insb
pusha
out
arpl
jno
or
adc
push
or
or
loopne
aas
fsubs
decl
pop
lahf
iret
mov
jge
sub
fwait
mov
sarl
in
mov
mov
add
jo
jo
es
pop
pusha
push
mov
out
imull
push
push
sarb
mov
push
mov
in
nop
aas
lods
push
dec
add
adc
sbb
int
sub
jae
and
dec
xor
cwtl
pusha
cwtl
sti
popa
lret
mov
ret
sbb
push
lock
rorb
add
shll
mov
pop
mov
lret
adc
push
or
leave
aad
adc
mov
int3
pop
insb
icebp
mov
jle
inc
in
daa
sbb
mov
pop
cmp
jl
xor
inc
sub
das
pop
cli
hlt
dec
mov
stos
inc
subl
xor
cltd
out
int
mov
mov
paddw
mov
sbb
xor
popa
or
pop
and
add
mov
xchg
cmp
xchg
int3
and
pop
repnz
nop
push
or
orl
cmp
sbb
jo
pop
cmp
push
xchg
sahf
in
xchg
jns
cmp
pop
mov
hlt
pop
adcb
and
test
xor
jno
or
adc
gs
pop
xor
movsb
pop
inc
xlat
ret
cmpsb
movsb
pop
jbe
and
jae
dec
idiv
and
dec
pushf
test
cld
iret
popa
jl
iret
outsl
pop
ss
dec
in
jne
mov
pop
gs
adc
dec
jecxz
in
push
sub
add
mov
fsubl
add
sbb
xchg
cs
ds
cmp
mov
dec
jns
xchg
dec
jne
cmp
push
add
shrl
cmp
in
jns
aam
jns
inc
cmp
sti
fiadds
lret
or
adc
and
int
mov
iret
daa
outsb
pushf
ret
inc
loope
ljmp
or
ret
jmp
jmp
fwait
scas
insb
int3
bound
mov
sbb
push
inc
sbb
imul
jo
and
sti
cmc
es
and
mov
push
out
fcoml
jne
popa
jno
shll
scas
rol
xchg
les
add
lods
or
jge
cmp
ja
daa
enter
xor
sbb
setge
jae
loope
add
push
int3
jo
cld
clc
out
pop
dec
div
out
in
and
sbb
or
dec
imul
mov
push
mov
cmp
mov
out
bound
imul
ret
lea
adcb
inc
popl
ret
pop
imul
xchg
add
jmp
stos
cltd
dec
rcl
mov
mov
and
fistl
les
pop
into
imul
push
stos
add
xchg
pop
clc
mov
arpl
loopne
sti
xchg
and
sub
xor
push
div
jns
repz
ljmp
jne
xor
addr16
into
dec
int
cmp
xlat
and
loopne
loop
loope
xchg
inc
inc
sub
xchg
jo
mov
lods
lahf
sahf
ja
jmp
mov
mov
jne
icebp
cmp
pop
outsb
pop
aad
inc
clc
mov
push
mov
or
xchg
out
aas
imull
mov
cmpsl
add
cmp
loop
pushf
sub
pop
out
fdivl
call
xchg
mov
lret
das
leave
push
cmpsb
push
jbe
mov
jb
add
jae
cmc
hlt
lret
adc
loopne
sub
js
sbb
mov
mov
addr16
and
add
fstl
dec
jae
cmp
pop
push
xor
cmpsb
bound
xchg
mov
sbb
push
xchg
test
pushf
xchg
and
ja
push
stc
push
pop
popf
mov
jne
mov
sub
cmpsl
pop
outsl
lds
jl
mov
add
inc
int
fmull
into
or
subb
jbe
pop
fmul
xor
xor
mov
cmp
notl
mov
icebp
leave
lahf
mov
cmp
or
cmpsl
jp
adc
ficoms
inc
mov
jno
push
je
stos
push
pushf
pop
sbb
jne
into
popa
xchg
dec
js
enter
outsl
inc
add
pop
outsb
mov
mov
rol
inc
or
dec
shl
pop
out
inc
push
mov
xor
jo
push
pop
or
mov
inc
test
sbb
sti
push
gs
pop
les
repz
xor
xchg
fmuls
jo
xchg
pushf
test
pop
sbb
add
mov
aad
mov
and
sbb
mov
fld
dec
push
outsl
push
add
cmp
in
and
inc
mov
ja
out
push
rorl
gs
fnstsw
insb
mov
sbb
rcrb
push
stos
jge
mov
inc
pop
jno
xor
xlat
push
pop
les
or
jmp
repz
out
out
lods
jne
jne
pop
jnp
dec
xlat
xchg
jg
sub
shl
jne
push
stos
mov
mov
push
and
and
sbb
sbb
dec
bswap
sahf
push
mov
mov
cmp
repz
movsb
enter
jns
mov
cmp
inc
fptan
sub
movups
aad
imul
and
mov
jno
inc
adc
sub
sub
pop
nop
or
jg
adc
xchg
jne
adc
ljmp
sub
or
mov
nop
imul
enter
jbe
ja
add
aad
push
mov
pop
aaa
imul
sub
xor
and
int3
push
mov
divb
mov
sahf
or
and
fimull
xchg
cli
sub
cltd
add
pop
xchg
ds
insl
xchg
jl
cmpsb
movsl
loope
xlat
inc
push
sbb
jle
push
hlt
or
in
aaa
or
imul
xchg
adc
movsb
scas
add
push
in
ficoml
loopne
cmp
test
dec
sbb
pop
mov
sbb
mov
mov
sub
scas
or
mov
insb
cld
xchg
mov
or
adc
push
stos
mov
hlt
jae
mov
dec
sbb
inc
dec
mov
in
xorl
fwait
dec
cli
xlat
in
out
in
repz
in
mov
inc
cmp
inc
std
test
mov
pop
or
sub
adc
jnp
in
or
dec
jl
mov
xor
pop
sbb
inc
inc
mov
scas
or
shl
adc
dec
jmp
das
insl
inc
mov
outsb
add
mov
mov
jb
std
in
test
add
ret
inc
cmp
sub
out
fistpll
push
lret
adc
xorb
or
dec
jl
mov
lds
inc
jo
rcrl
in
and
and
adc
imul
leave
cmp
mov
out
lcall
or
inc
adc
pusha
ja
fsubs
bound
xor
sbbb
mov
push
ret
fidivs
mov
in
aad
or
scas
in
jnp
fdiv
aam
and
mov
std
xor
enter
mov
dec
into
jae
fisubrs
leave
xor
xor
sub
addl
jne
xchg
addr16
and
sarb
xor
es
cmp
pop
and
push
xchg
mov
push
popa
popa
inc
fcomip
out
sbb
push
out
pop
sbb
pop
lret
rcrl
sbb
les
xchg
ja
jmp
mov
out
cmp
or
and
fimull
pop
aaa
sbb
imul
mov
ffreep
repnz
bound
out
mov
push
xchg
ds
jne
inc
cmp
ret
sub
pop
xorb
popf
cmc
cwtl
push
pop
in
icebp
mov
sub
fwait
ja
in
aaa
lea
jb
clc
pop
iret
roll
call
inc
test
add
sbb
push
lock
jmp
clc
hlt
lock
das
icebp
fnstenv
mov
or
mov
xor
shrl
lock
std
dec
pop
xchg
or
jmp
cltd
mov
aad
push
mov
dec
ja
mov
jle
lock
sub
dec
or
pop
in
fidivs
mov
stc
push
aas
inc
insb
in
iret
fucomip
mov
lret
call
into
ss
sbb
sbb
jl
mov
movsb
sub
adc
and
popf
jmp
mov
add
pop
inc
call
imul
nop
mov
lret
ret
adc
inc
hlt
adc
call
notl
ret
lods
outsl
jmp
inc
movsl
inc
icebp
rclb
shr
jmp
je
js
sahf
lret
inc
aas
sti
ja
add
and
cmp
lods
shl
aas
add
mov
and
push
jl
test
adc
mov
decl
stos
sbb
cltd
out
lcall
fisttpl
shll
jge
sbb
cmp
push
out
push
mov
aad
cmp
xchg
and
cli
mov
xor
or
xchg
dec
icebp
push
cltd
xchg
pop
xor
mov
sbb
std
in
aam
push
fidivs
fsubp
repz
mov
in
movsl
dec
scas
jg
into
jmp
imul
adc
or
outsb
ret
mov
mov
add
icebp
mov
out
inc
insb
cltd
clc
inc
int3
mov
ss
xor
mov
adc
nop
icebp
lock
in
xlat
mov
sbb
test
lret
dec
adc
es
aad
sarl
test
inc
sbb
cld
fcoms
add
xlat
ja
mov
jo
cwtl
jne
aas
xlat
cmpsb
add
mov
and
mov
mov
xchg
mov
out
pop
adc
mov
repnz
jp
adcb
sub
out
adc
punpckhbw
mov
int3
into
lea
and
inc
popf
jnp
mov
sbb
stc
push
out
or
sbb
iret
xchg
lret
rcr
mov
xor
sub
test
outsl
lret
xor
adc
jg
mov
mov
or
jae
inc
enter
sub
test
popa
pop
insl
or
push
bnd
in
minps
xchg
daa
xor
cmpsl
mov
mov
inc
lahf
cmpsb
clc
lock
dec
mov
sbb
push
fistpll
and
inc
push
add
into
xor
lahf
hlt
xchg
ds
pop
test
jns
jle
loope
xchg
sti
dec
icebp
mov
insb
test
mov
cwtl
pop
xor
sar
jmp
leave
repz
out
dec
adc
hlt
mov
std
lock
mov
pusha
orb
push
xor
mov
pop
inc
push
lock
scas
mov
jg
sub
aas
adc
stos
aaa
or
mov
mov
sub
and
scas
jmp
cmpsb
xor
cmpsl
jb
ror
adc
ja
cmp
add
inc
xchg
leave
ljmp
std
mov
std
mov
decl
jp
cld
mov
hlt
xchg
aaa
sti
sbb
pop
andl
lahf
fwait
cmp
push
ss
jae
sub
mov
cltd
sbb
fnsave
xchg
jle
ja
jnp
bound
sbb
fimuls
je
sub
jns
popa
mov
loop
outsl
or
in
jb
test
lret
mov
mov
fistl
or
add
loopne
icebp
dec
mov
xchg
mov
jp
sub
xchg
bnd
leave
push
mov
popa
out
pop
mov
push
bound
fwait
cwtl
out
jp
in
dec
adc
mov
sbb
mov
sub
sahf
pushf
or
pop
leave
xchg
inc
mov
cltd
xor
push
imul
sub
and
dec
es
mov
call
mov
clc
jno
sbb
jmp
jne
cs
or
inc
imul
xchg
test
stc
out
das
mov
dec
xor
jmp
and
sti
dec
xlat
cld
xchg
fimull
inc
out
rcrb
sbb
int3
cmp
out
add
xchg
dec
or
xchg
shll
push
mov
mov
fistps
mov
mov
pop
pop
mov
out
jno
sub
fcoms
jle
xchg
adc
pop
out
cld
pop
je
jno
ret
sub
mov
inc
inc
dec
pop
mov
sub
pop
push
out
pop
mov
cmpsb
int
das
add
xor
mov
mov
popa
xor
inc
xor
mov
arpl
enter
in
dec
arpl
dec
mov
pop
into
add
pop
jmp
and
pop
enter
xor
adc
xchg
xchg
xchg
dec
iret
dec
pusha
inc
sarl
cmpsl
mov
or
out
mov
bnd
xor
leave
jne
mov
aaa
push
popa
and
xchg
mov
fst
mov
sbb
ljmp
push
lea
adc
or
aam
cmp
aaa
xor
outsb
enter
adc
jge
dec
shl
xchg
adc
jmp
cmpsl
dec
sahf
and
repz
inc
fsub
jb
jmp
mov
movsl
pop
lahf
out
gs
push
sarb
out
imul
lcall
out
adc
sar
mov
jmp
mov
xchg
lock
fdivrs
ret
adc
das
sbb
xor
pop
setp
xchg
jb
xchg
sahf
xor
push
in
sahf
loopne
decl
dec
rol
aad
scas
test
jns
rcr
minps
jns
popf
test
cmp
loop
adc
in
add
mov
sbb
into
push
fucomip
cmpl
or
mov
mov
push
jo
cltd
mov
dec
mov
add
aam
dec
dec
push
or
fistps
jns
pop
cmp
gs
in
xchg
inc
push
in
mov
popa
mov
loopne
test
test
sarb
imul
aaa
or
add
das
cmp
fcoms
mov
hlt
xchg
jbe
mov
outsb
xlat
sbb
xchg
push
ljmp
test
test
adc
shll
sub
inc
mov
jmp
xchg
hlt
pop
mov
cmp
xchg
dec
cld
mov
lods
sbb
cli
xorl
sub
and
pop
xlat
xchg
test
or
sub
pop
pop
jno
xor
lock
test
sbb
mov
xchg
or
repz
cmpsl
shrl
jge
rorb
jle
push
xchg
cmp
lea
shll
nop
fldcw
add
jecxz
lds
into
imul
adc
sbb
and
push
lock
je
pop
push
stos
stc
aad
pop
push
out
adc
fwait
dec
lods
lret
push
fidivs
push
mov
loop
mov
mov
stos
shll
iret
fldl
fs
sbb
dec
sbb
dec
ljmp
insb
sti
pop
dec
pop
lcall
cmpl
std
mov
mov
fucomi
mov
rorb
mov
push
lahf
js
xchg
loop
lret
sub
out
adc
adc
insl
push
cwtl
fsubs
imul
dec
jmp
repnz
divb
or
ljmp
mov
add
nop
push
jmp
jae
inc
jne
xchg
adc
lcall
pop
sbb
insb
cmc
aam
jle
xor
push
and
dec
loope
popf
shl
shlb
dec
and
mov
stos
cmpsl
sub
mov
enter
movsb
ret
xchg
adc
in
aam
pusha
xorb
jmp
fwait
int3
adc
enter
or
and
aad
push
adc
cli
inc
xor
mov
repz
gs
inc
jl
jbe
xchg
fimuls
rcrl
js
loope
fprem
dec
gs
hlt
sahf
addr16
sub
dec
jmp
jne
out
cmc
lret
ret
fimull
xor
adc
sti
mov
mov
call
push
mov
pushl
mov
xchg
lret
aad
sar
adc
xchg
mov
scas
push
jno
int
or
sbb
fstpt
xchg
pop
or
in
jmp
rorb
out
jl
mov
xchg
or
jo
cs
popf
and
in
fwait
sarb
inc
sbb
aam
adc
rorb
push
out
xor
mov
lds
adc
cli
into
mov
outsb
mov
pushf
dec
mov
sub
sbb
pop
push
fxam
push
pop
aad
fldt
fbld
add
dec
sbb
xchg
jl
jge
mov
bnd
gs
cmp
mov
lock
mov
dec
sub
test
out
aam
fstpt
and
popf
xchg
push
rol
dec
ljmp
test
cmpsl
repnz
addr16
add
orl
adc
add
lods
jl
pop
out
mov
xor
movsb
jno
xor
pop
jnp
movsl
sub
mov
stos
jne
hlt
lock
repz
loope
inc
xchg
or
mov
lds
add
cmp
test
dec
rcrl
pop
xchg
jle
cs
adc
adc
shrd
sti
cmpsl
xchg
xor
add
cld
xor
sbbl
fmull
mov
adc
adc
xchg
add
dec
lods
xchg
add
mov
mov
cmp
loopne
ffree
lret
or
mov
sub
dec
das
fisttps
mov
out
jmp
push
sub
jne
dec
mov
scas
push
jb
lods
iret
mov
adc
scas
test
les
fwait
loopne
xchg
and
icebp
cmc
out
mov
xor
inc
cmp
push
or
and
cmp
rorl
out
icebp
jo
xchg
mov
or
xor
sub
fcmovnb
call
repz
or
sbb
mov
aaa
mov
mov
cmpsb
lods
pop
addr16
stos
mov
lcall
fwait
xchg
imul
stos
out
les
push
jmp
cwtl
adc
jbe
rolb
push
cld
push
push
or
ret
sub
mov
and
and
inc
mov
jl
jnp
mov
jne
mov
dec
jns
mov
sbb
adc
je
pop
insl
mov
cmpsl
ss
sub
xor
xor
cmp
cmp
imul
lahf
leave
lret
push
insb
pop
pop
fistps
shll
ds
sahf
dec
add
push
jns
cmp
lahf
clc
jge
loope
or
lret
inc
std
add
cmp
mov
inc
push
aam
jbe
mov
enter
mov
pop
in
cmp
in
jecxz
loope
mov
repz
repz
add
jecxz
lods
mov
mov
cmpsb
jmp
ret
out
cli
lods
xor
rol
inc
pop
adc
push
add
pop
imul
adc
lahf
sbb
dec
xchg
push
pop
sbb
xor
jl
ss
and
loopne
dec
xchg
popa
inc
dec
ret
pop
movb
daa
repz
shl
popa
cmp
mov
mov
push
mov
xor
or
insl
and
enter
inc
sub
push
aaa
jns
mov
add
add
loope
fs
mov
mov
mov
mov
mov
dec
lock
sub
push
pop
pop
je
arpl
mov
gs
addr16
xor
mov
cs
inc
sub
adc
pop
mov
arpl
push
fwait
cmp
and
cmp
scas
cmpl
js
jmp
icebp
ret
add
push
and
pushf
out
inc
lock
jmp
fcmovbe
mov
adc
adc
imul
mov
dec
or
rcrl
fsubrl
clc
insl
inc
cmc
or
pop
sbb
iret
std
cmp
les
dec
stc
pop
je
adc
xor
fidivrs
xor
xor
dec
cli
aad
test
roll
sbb
push
jecxz
lret
call
cmp
out
push
or
lcall
fisttpl
lret
lock
lcall
lret
jae
nop
cmovno
mov
mov
ja
sbb
mov
xlat
push
push
int
imul
in
in
push
into
inc
jecxz
jmp
fwait
adc
rol
cmp
and
pop
stos
sahf
test
cltd
push
scas
in
mov
adc
inc
lods
jbe
lods
sahf
jge
movsb
fidivrl
mov
dec
mov
xchg
cmp
and
hlt
cmp
sub
in
sbb
jp
mov
mov
sbb
test
movsb
loope
aad
sub
and
adc
dec
fsubrl
mov
xchg
cmpsb
stos
push
imul
xor
jo
subl
js
out
scas
xchg
sub
cmp
or
aam
jae
and
sahf
dec
and
lret
mov
fiaddl
adc
jp
scas
repz
mov
scas
mov
call
lock
push
push
popf
insl
adc
daa
sub
outsl
mov
pop
mov
popa
ds
jge
shll
sbb
push
gs
lcall
je
fcoml
insb
fstpt
scas
mov
fcoml
mov
xchg
mov
mov
mov
loopne
sti
jnp
loop
sbb
push
and
cmc
dec
lret
dec
xchg
xchg
lock
enter
cmp
jl
outsl
hlt
faddl
push
shl
cmp
mov
fiaddl
mov
bnd
cmpsb
cmpl
jecxz
cmpsl
xchg
push
insl
add
jne
or
mov
nopl
dec
clc
stc
jmp
sahf
and
je
ffree
or
jg
iret
aas
pop
hlt
cmp
sbb
jge
mov
insl
sub
mov
sub
dec
xor
lret
push
cld
addr16
cmp
into
jnp
push
out
fwait
sub
xor
lret
ret
xor
leave
cwtl
lea
sub
ja
aam
in
inc
xchg
pop
int3
mov
sbbb
mov
ror
out
inc
lea
dec
or
les
sarl
sub
in
arpl
xchg
cli
add
dec
pop
dec
mov
imul
push
and
xchg
popf
fimull
lea
daa
xchg
adc
push
or
ljmp
push
and
inc
add
and
pushf
iret
ret
xchg
ljmp
pop
adc
xchg
adc
rcr
jg
imul
iret
pushl
scas
cmp
jae
inc
lret
push
in
push
xchg
outsb
xchg
inc
lea
outsb
dec
insb
mov
popa
mov
and
sbb
xchg
or
fwait
xlat
cld
arpl
xor
imulb
bound
mov
lret
hlt
out
or
and
mov
cmp
add
lock
cld
xchg
cwtl
push
and
clc
mov
aas
mov
pusha
fidivs
mov
fs
add
pop
adc
in
push
lock
pop
fwait
push
or
lcall
fcomps
jmp
test
stc
ja
or
das
jle
pop
shrb
cmp
es
fiaddl
or
cmp
mov
xchg
push
cld
je
es
insl
cmp
loop
shl
pusha
into
and
adc
cmp
mov
popa
or
add
dec
popf
push
dec
mov
insl
imul
lea
xor
mov
leave
or
std
inc
inc
out
sub
test
mov
aaa
daa
sarl
test
xchg
xchg
lcall
in
pop
fisttpl
dec
aam
in
into
push
jns
inc
adc
pop
fmul
and
aad
push
pop
cmp
ret
call
movsb
aam
mov
jns
pop
fsubs
jns
nop
dec
pop
mov
xor
psubusb
mov
inc
shr
inc
fs
or
or
ljmp
xor
ss
sti
mov
pop
lods
test
inc
rcll
mov
jle
mov
clc
and
pop
popa
dec
pop
outsl
mov
xchg
pop
push
ficoml
test
add
xchg
mov
xchg
pop
xor
cli
add
aad
mov
mov
lods
stos
inc
in
jae
ret
arpl
ss
dec
je
icebp
stc
sbb
aam
mov
lods
mov
inc
add
test
loop
daa
sbb
in
xchg
movsl
shlb
leave
sbb
push
and
pushf
rorl
out
js
fiadds
push
add
lret
sub
pushf
xor
nop
mov
adc
sub
sti
xor
xchg
es
fnsave
fistps
push
fistps
pop
into
test
pop
fisttpl
in
push
fistpl
sbb
mov
dec
mov
addr16
cmp
mov
repz
inc
stos
enter
imul
cmp
je
test
adc
cmp
mov
pushf
mov
aad
dec
mov
add
in
xchg
xor
je
lret
adc
jae
or
jno
inc
push
ja
add
adc
sbb
popf
mov
and
fmuls
adc
push
sti
pop
xlat
dec
cmp
je
in
f2xm1
pop
mov
sub
mov
sub
cwtl
mov
xchg
dec
fcmove
or
pushf
call
xchg
push
mov
int
test
mov
daa
fld
mov
in
daa
popa
mov
mov
out
iret
in
or
push
push
gs
cmpsb
xor
mov
pop
and
loop
inc
gs
xor
mov
or
adc
jnp
sub
cmpsl
insl
jbe
jnp
sub
push
test
lea
shl
lahf
jnp
and
mov
sbb
into
imul
cli
rorl
gs
addr16
sbb
cmp
sub
daa
in
std
ret
push
mov
mov
xor
cmp
sbb
int3
into
fldl
ret
scas
arpl
push
stos
mov
iret
xlat
sarb
xchg
add
jge
scas
rcr
pop
push
stos
add
lea
das
xor
mov
ret
scas
mov
or
into
scas
xchg
jbe
dec
leave
adc
test
arpl
vpsubq
fwait
cwtl
pop
sbb
adc
mov
cmp
pop
sbb
imul
and
popf
push
sub
scas
sub
iret
dec
and
outsl
pop
stos
cmpsb
xchg
adc
in
mov
adc
sub
movsb
out
jo
push
dec
and
lret
jnp
fstps
xor
inc
xchg
xchg
inc
xchg
jl
pusha
aad
std
mov
dec
ss
and
ror
jl
lahf
popa
jno
add
xor
std
addr16
inc
xchg
cld
dec
notl
sub
divl
sub
mov
ja
stos
lods
xor
and
ljmp
inc
rclb
xchg
fwait
sbb
mov
add
int3
add
sbb
cwtl
add
xchg
sub
pop
movl
pushf
adc
mov
loopne
dec
aas
pushf
xor
add
lahf
clc
lea
stos
adc
mov
sub
loope
xchg
hlt
call
adc
in
push
xchg
idivb
inc
xchg
das
ret
sub
or
mov
fstpt
rcrl
xor
inc
push
pop
pop
mov
jecxz
push
out
js
xchg
pushf
sub
inc
cmp
lods
or
sub
into
in
aad
and
mov
push
push
add
enter
outsb
add
sbb
inc
xor
pop
pushf
pop
fstps
cmp
mov
ss
and
imull
push
jp
mov
xchg
popf
cltd
add
sti
adc
jno
ucomiss
mov
xor
mov
mov
inc
mov
faddp
sub
test
cwtl
adc
push
sbb
enter
cmp
cli
dec
add
mov
add
xchg
loopne
fadd
sarl
dec
das
aaa
fst
iret
inc
add
mov
and
cs
adc
push
mov
lods
dec
stos
xor
hlt
lcall
sub
mov
inc
mov
test
sar
or
sbb
sbb
hlt
adc
add
push
das
or
dec
ret
or
mov
pusha
stc
aaa
test
push
jmp
and
data16
xchg
push
sahf
jno
aas
les
xor
add
lds
mov
and
mov
fmuls
jmp
dec
cmp
add
pop
into
pop
daa
scas
lods
das
in
insb
mov
xchg
loop
outsl
push
mov
ja
sti
popa
rcl
mov
push
adc
ja
pusha
testl
lds
loopne
stos
scas
sub
clc
nop
or
mov
or
pop
lods
out
or
sub
xor
or
ja
std
repz
xchg
cli
lods
mov
stos
stos
iret
adc
xor
xlat
in
test
and
and
mov
mov
xor
pmaxsw
xchg
insb
enter
dec
or
lret
gs
sbb
jae
mov
ljmp
mov
ja
insl
push
stos
enter
xor
imul
jne
es
sbb
push
in
rcr
out
fildl
inc
mov
ss
stos
jbe
cmp
or
mov
repnz
jae
repnz
pop
jecxz
adc
pop
ss
jge
inc
jmp
or
xchg
mov
movb
out
jb
js
roll
ss
loop
cmp
and
xchg
loop
insb
test
es
xchg
push
cmp
and
setp
movnti
fdivs
xor
fimuls
jo
loop
mov
dec
jae
lock
and
sti
xchg
shll
nop
add
fs
adc
pop
inc
js
shl
movsb
ret
dec
jl
addb
mov
push
jns
cmpsb
enter
enter
repz
das
sbb
insl
mov
jns
cmp
loope
bnd
andb
xchg
pop
sub
adc
ljmp
daa
repz
cmp
pop
inc
call
xchg
push
push
push
or
mov
pop
je
xor
out
dec
mov
cld
rcr
insl
mov
stc
mov
jg
outsb
dec
xor
cwtl
and
filds
gs
loop
je
call
cmc
mov
or
mov
lcall
js
outsl
mov
bound
mov
pop
bound
lods
push
insb
jns
sub
adcb
das
popa
adc
loop
rcrb
push
sbb
cmp
cltd
ffreep
aad
hlt
cmp
cli
in
lahf
je
jo
jp
shlb
jae
xchg
clc
je
pop
xor
stc
fistpl
adcl
mov
paddsb
sarl
or
bswap
cmp
dec
jns
xchg
xor
dec
fistps
sub
js
decb
add
push
rcrl
inc
push
jge
push
loop
call
cmp
das
jnp
xor
cmpsl
jge
fsubrl
sbb
jae
sub
cs
inc
jmp
cld
xor
rcll
pop
xor
or
or
mov
dec
sub
push
jecxz
shl
icebp
lahf
fisubrl
cmpl
sarl
pop
pusha
or
or
aad
sbb
mov
adc
mov
out
cmpsl
and
outsl
push
lcall
sbb
dec
mov
cmpl
adc
inc
loopne
add
rorl
popa
pop
push
add
out
outsb
popf
cmpsl
or
fcoms
loope
lcall
loopne
jb
movsl
sbb
fsub
cmpsl
enter
or
mov
cltd
sbb
mov
or
cmpsl
arpl
sbb
adc
pop
dec
int
dec
mov
in
test
inc
mov
inc
fneni(8087
push
push
gs
mov
sbbl
mov
cmp
dec
dec
cmc
push
subl
xor
dec
mov
sbb
mov
cmp
mov
imul
mov
sub
inc
xchg
out
test
ds
lea
push
lods
or
loopne
adc
sahf
daa
xlat
addr16
in
jl
pop
xchg
cs
insl
imul
les
or
popf
jle
stc
outsb
mov
mov
mov
cwtl
aad
in
jl
dec
or
push
adc
imul
xor
mov
push
pop
sub
push
mov
add
mov
cmpsl
ret
iret
dec
mov
mov
push
mov
mov
stos
cmp
imul
out
cmp
xor
iret
jnp
adc
imul
dec
mov
push
pop
xchg
adc
dec
pop
cmc
sbb
jno
xchg
das
aaa
sub
hlt
fwait
std
sub
xor
enter
cli
pop
das
sub
shl
push
push
ret
pushf
mov
dec
mov
pusha
mov
lea
push
lods
jns
data16
das
mov
in
out
mov
cmp
xor
cs
aam
ds
pop
mov
sbb
jb
stos
pop
es
fstpt
xchg
sub
mov
cmp
fldl
in
dec
ds
and
aam
push
push
push
ror
test
sub
in
jecxz
inc
pop
in
adc
fidivrl
pop
adc
sbb
loopne
cmp
cmp
fnstsw
push
inc
cmp
daa
and
fdivrl
pop
sbb
andb
inc
adc
int3
aad
xlat
cltd
cmp
inc
dec
mov
ror
or
mov
mov
icebp
jle
fwait
test
scas
test
out
cld
adc
ret
mov
pop
pop
mov
int
sub
mov
andl
inc
push
jmp
enter
add
lods
into
int
pusha
push
mov
in
add
dec
test
cltd
cld
cmp
cmc
jns
in
pusha
mov
pop
add
outsl
inc
mov
mov
push
insb
push
sbb
adc
sub
mov
test
ret
lret
push
mull
add
or
stc
xchg
sti
idiv
sbb
cwtl
mov
aam
int
scas
inc
test
push
loopne
sarb
jnp
das
pusha
pop
adc
dec
mov
adc
test
xchg
rsqrtps
push
fcmovnu
dec
popa
xchg
jle
outsb
jns
enter
and
into
mov
sahf
xchg
mov
test
test
mov
jge
loop
sti
loop
xor
aam
pop
stos
fsubp
lcall
sbb
cwtl
stc
cmp
fwait
stos
pop
sti
outsl
test
sahf
mov
jnp
mov
lahf
in
iret
sub
xor
mov
nop
sbb
arpl
xor
jl
insb
inc
push
xlat
xchg
sub
cs
cs
and
and
movsl
arpl
dec
cwtl
cmp
fcomi
xchg
roll
icebp
orl
sbb
pop
inc
scas
fildll
lods
push
dec
jne
dec
lahf
jne
fidivrs
dec
in
in
sub
pop
ds
into
mov
inc
pop
pop
sub
jb
aam
xchg
mov
xchg
into
mov
vpmacssdd
out
stos
xor
pushf
mov
inc
push
sub
and
mov
cmp
bound
sbb
jbe
pmulhuw
movsl
jl
repnz
pop
hlt
fcomi
outsl
or
lret
adc
les
xor
ret
pop
shl
aaa
xchg
icebp
dec
idivl
mov
mov
ljmp
rorb
or
sbb
mov
rcr
cmp
ds
mov
inc
adc
xor
pop
xchg
mov
js
pop
pop
sub
sbb
js
cwtl
movsl
fadd
loopne
dec
lret
and
mov
mov
pop
add
pop
pop
xor
push
inc
stos
cli
xchg
jo
xchg
xor
cmpsl
or
shll
mov
mov
movsl
int3
mov
sub
repnz
test
jo
cli
outsb
int3
push
ss
enter
fbstp
fisttpll
dec
adc
popa
pop
cmp
inc
dec
sub
xor
cmp
sub
or
ret
jo
mov
sub
rcl
sub
sub
and
inc
mov
inc
xchg
push
mull
ret
cmp
daa
mov
icebp
popf
aaa
pop
ljmp
adc
push
mov
or
mov
push
outsb
gs
scas
adc
push
out
push
xor
and
loope
adc
aam
xor
movsb
inc
insb
pop
cld
pop
mov
in
int3
push
xor
cmp
xchg
movsb
std
cmp
cmpl
xchg
je
push
jbe
add
inc
lret
adcl
jmp
and
rcrl
inc
fldenv
lods
jl
addl
cmp
stc
pop
jmp
test
sub
lea
shlb
inc
xor
call
pop
iret
mov
insl
or
pop
sbb
mov
data16
mov
das
lret
inc
mov
push
dec
lods
in
xchg
inc
inc
mov
mov
sbb
adc
es
inc
mov
dec
pop
cli
pop
lret
jge
in
or
lcall
sub
mov
aas
arpl
pop
push
adc
pop
push
cmpsb
negl
and
mov
jmp
jns
std
test
fnsetpm(287
jnp
dec
inc
je
sub
push
pop
cmc
add
popl
sbb
inc
je
rorb
jge
mov
out
mov
sub
mov
scas
outsb
int3
mov
idivb
in
mov
fwait
jle
dec
aad
sar
outsl
stos
jecxz
sub
jle
leave
cmp
sub
enter
test
lret
push
out
cmp
stos
je
and
fs
push
fs
dec
out
push
adc
push
aaa
pop
sbb
jg
push
aam
or
arpl
cmp
push
repz
in
xor
inc
mov
es
leave
aas
cmp
mov
cmp
cwtl
mov
add
notl
cmp
aaa
sbbb
inc
cwtl
nop
or
fimull
in
dec
ret
adc
and
dec
cltd
es
and
xor
jge
push
mov
pop
movsl
cmp
lock
dec
push
mov
cltd
mov
repnz
lods
scas
fdivrl
push
loop
adc
aaa
ds
xor
push
inc
pandn
adc
imul
cmp
in
lcall
int
les
inc
gs
xor
divb
fsubr
lea
popa
clc
ja
xchg
pop
push
fwait
mov
scas
int
jl
call
cmp
rorb
scas
inc
mov
fisttpl
mov
lods
sbb
dec
jnp
mov
mov
add
mov
xchg
int3
pop
sbb
movsl
sbb
push
outsb
xchg
pop
xchg
add
jmp
pop
cmp
pushf
jl
and
fldl2t
or
fscale
cmpb
xchg
dec
xlat
sub
cmp
mov
fucom
sbb
jae
insb
addr16
popa
out
test
inc
xchg
ficomps
push
add
sbb
cmc
xchg
arpl
inc
sub
xor
test
nop
fwait
daa
push
push
push
data16
hlt
mov
outsb
mov
mov
das
jl
cld
out
hlt
daa
lret
xor
in
xchg
and
cld
sbb
inc
jg
xor
lahf
imul
cli
pop
jmp
mov
movsl
jmp
je
mov
inc
pop
adc
and
lahf
pushf
xor
cmpsb
xchg
xchg
loope
shlb
mov
loop
jg
dec
stc
mov
lods
scas
jns
push
cwtl
inc
jmp
pusha
mov
stc
mov
inc
rcrl
xor
insb
inc
jmp
arpl
loope
xorl
mov
mov
cs
stc
cmp
cmp
xchg
negl
push
jno
jns
fistl
or
or
xor
cmpsb
xchg
xchg
aad
jne
pop
and
outsb
repz
pop
fbstp
push
mov
pop
movsb
js
and
lock
jle
sub
popa
mov
les
std
fbld
enter
jp
lret
pop
inc
and
iret
pushaw
dec
inc
lods
pop
cmp
mov
shl
xchg
imul
push
or
push
icebp
add
nop
mov
bound
lods
jp
mov
pop
jns
mov
or
push
fbld
adc
int
cli
and
mov
sbb
in
pop
pop
popl
xchg
bound
dec
out
or
shll
mov
loopne
dec
sbb
cmp
sbb
mov
and
push
shr
push
enter
pop
sub
push
mov
or
mov
movsb
cmpsb
test
xlat
jae
mov
xchg
not
or
mov
inc
xor
pmulhuw
xorb
mov
aaa
mov
arpl
pusha
jo,pn
roll
mov
inc
mov
ret
mov
aam
aaa
insl
lret
cli
popa
idivb
sbb
mov
jle
mov
mov
cmp
push
cwtl
shlb
test
or
movsb
call
cmp
bound
xlat
lea
jnp
pop
or
pop
int3
stos
dec
pop
xchg
icebp
push
jg
aad
test
mov
nop
or
jecxz
dec
dec
andnps
pop
mov
pop
mov
fimull
call
inc
dec
daa
push
mov
out
pop
in
cmpsl
nop
rcll
jmp
mov
jmp
andl
movsb
push
cmpsl
dec
push
pop
pop
xor
test
je
out
fnstsw
push
sbb
jo
test
mov
cmp
daa
xchg
xchg
bound
popa
stos
mov
mov
jg
imul
int
xchg
jnp
xor
jbe
aaa
push
loope
xchg
mov
divb
pop
xchg
pop
cld
ret
enter
out
cs
in
aad
pop
pusha
push
mov
push
mov
outsl
mov
mov
lock
mov
push
pop
fcoms
mov
nop
leave
or
dec
insl
sti
aad
loop
test
push
cwtl
mov
fdivrp
cmp
xchg
xor
sub
ret
inc
repnz
testb
xchg
subb
bound
jnp
pop
push
inc
jbe
sub
clc
lret
fistl
cltd
xchg
mov
xlat
je
daa
jge
mov
fwait
adc
shlb
pop
sub
ficompl
jbe
sbb
orl
adcl
pop
in
cmp
add
inc
xor
movsl
test
adc
lods
cwtl
scas
ljmp
fbld
sub
and
jnp
inc
mov
inc
inc
push
jle
xlat
push
imulb
add
int
mov
ret
imul
cwtl
mov
jmp
adc
add
subb
cld
mov
ljmp
mov
dec
fsubrp
stos
ret
sahf
mov
stos
jo
jge
shr
inc
pop
xor
xor
subl
sar
push
push
or
ds
dec
lret
jae
dec
insl
jg
scas
pop
lret
xchg
jae
jmp
cltd
insl
repnz
jp
cmpsl
pusha
pop
sub
imul
mov
add
mov
lahf
negb
push
clc
ljmp
pop
cmc
or
dec
imul
push
repnz
lret
das
outsl
cwtl
xchg
lods
mov
mov
addl
dec
cld
dec
loop
mov
jae
lret
in
mov
in
or
mov
data16
sbb
lock
mov
cs
mov
jns
and
lcall
aaa
mov
jbe
movl
jg
add
mov
test
fisubl
pop
adc
lcall
popa
xchg
fimuls
add
push
insl
push
pop
add
es
add
or
fisttps
pop
hlt
adc
mov
insb
inc
jge
mov
push
fdivl
dec
jne
or
jo
outsl
roll
mov
popa
pushf
roll
aad
jb
pushf
xchg
mov
std
mov
imul
adc
scas
test
push
out
dec
fidivrl
mov
inc
mov
mov
outsb
daa
lahf
pop
loope
pushf
hlt
cmp
mov
arpl
or
scas
arpl
lcall
call
stos
xchg
fnstsw
fdivrl
loopne
push
add
xchg
sti
pop
pusha
enter
cmp
push
jb
mov
inc
leave
jne
int
pop
mov
pop
adc
pushf
or
mov
mov
pop
xchg
jae
orb
mov
ret
test
pop
cmp
ret
jb
inc
pop
inc
jns
or
cwtl
shrb
jae
jne
inc
andb
in
mov
xor
comiss
mov
pop
add
cltd
repnz
jo
sbb
nop
push
xor
adc
dec
mov
push
icebp
adc
cmp
pop
and
outsb
adc
and
leave
int
adc
push
pop
pop
dec
sbb
movsl
iret
dec
and
lods
mov
orl
shlb
into
fisubs
dec
movl
cs
sbb
mov
pop
sub
sbb
dec
outsb
jmp
lret
movsb
xchg
imul
mov
cmpsl
add
cltd
aad
mov
scas
stos
mov
sbb
sub
shll
pop
mov
aaa
pop
repnz
das
data16
jbe
outsl
push
adc
lcall
leave
cmpsb
mov
popa
lss
push
pusha
jnp
cmp
in
outsb
sub
fiaddl
dec
cs
out
xchg
mov
push
adc
stos
repnz
ss
sbbl
push
idivl
or
ljmp
mov
sbb
pop
cmp
inc
insl
mov
nop
clc
fidivrl
dec
dec
mov
pop
jnp
or
data16
jecxz
jo
iret
divb
jbe,pt
sbb
push
mov
into
cmp
add
test
jbe
mov
enter
jmp
xor
out
inc
push
orl
and
cmp
lret
sub
imul
mov
ftst
jmp
test
negb
or
pop
inc
cmp
lods
lock
scas
loopne
fsubrl
rcrb
mov
jecxz
xchg
sbbb
and
adc
xor
lcall
or
mov
cld
push
mov
cmpsl
int3
pop
cli
mov
lods
leave
xchg
xor
add
int
pop
pop
imul
xchg
inc
xor
andl
xchg
int
popaw
adc
dec
dec
arpl
jge
add
or
shlb
mov
push
xor
push
mov
add
adc
jnp
inc
fimull
stc
fidivrl
cmpsb
adc
push
add
or
mov
lret
push
bound
cmp
lahf
in
les
bound
pop
sbb
movsb
daa
add
outsl
mov
push
pop
popa
jo
scas
jmp
xor
xchg
push
out
ret
xchg
or
sub
sbb
adc
jle
aad
mov
xchg
je
cmp
bound
pop
mov
into
cmc
inc
les
les
adc
dec
xchg
hlt
int3
xchg
cmp
dec
sbb
in
data16
mov
loope
lock
adc
inc
and
cmp
and
push
mov
and
insb
or
imul
imul
lods
mov
inc
rclb
flds
in
jmp
scas
jecxz
into
lea
aam
jbe
in
in
leave
daa
or
test
push
ds
jo
icebp
std
pop
pop
or
sbb
inc
cmp
mov
out
ds
pusha
inc
mov
mov
fistl
daa
mov
add
sbb
fldt
inc
aad
ss
jmp
xor
sbb
out
call
std
cmc
dec
mov
and
sub
enter
mov
int
subl
push
test
dec
push
mov
mov
insb
xor
mov
xor
sahf
mov
xor
xor
sbb
xlat
orl
pop
or
xchg
test
in
out
jbe
test
sub
ds
mov
std
movsl
lea
pusha
mov
xor
je
repnz
ja
pop
mov
xor
adc
xorb
inc
adc
xchg
popf
cmp
mov
cmc
jne
faddl
add
and
loop
out
fisubl
adc
mov
xchg
mov
adc
pop
push
jle,pn
mov
mov
cmpb
xor
xchg
add
cmp
add
sti
out
jge
inc
psubsw
movsb
insl
mov
pop
movsl
add
jo
pop
push
pop
dec
add
aas
lods
daa
and
push
sti
in
push
adc
or
and
mov
je
jg
pop
pushl
aaa
cmpsb
daa
push
rorl
xchg
jno
mov
jbe
mov
or
xor
das
mov
cltd
xor
or
push
jp
push
insl
sbb
daa
mov
xchg
jo
pop
jmp
ds
stos
push
and
sarl
xchg
rcrl
mov
fmuls
sbb
push
inc
test
add
inc
arpl
or
sbb
add
mov
and
and
or
dec
add
aam
jo
incl
pop
mov
add
inc
jg
addr16
inc
loopne
sbb
jmp
lods
sub
mov
je
push
mov
fdivrs
fimull
mov
jno
sub
roll
mov
mov
jns
inc
jbe
add
mov
mov
loope
arpl
push
xchg
inc
push
aam
adcb
inc
mov
adc
cmp
inc
aas
notl
cltd
jmp
pop
and
loop
or
inc
int
or
adc
stc
js
arpl
mov
ret
daa
push
mulb
and
pop
cltd
ljmp
mov
pop
pushf
mov
lock
imul
int3
dec
loopne
pop
mov
mov
xor
sbb
fcmovnu
sub
pop
jnp
dec
inc
je
es
hlt
fistl
dec
fmull
or
jg
test
xchg
test
sub
mov
leave
mov
pop
into
and
add
push
mov
mov
mov
imull
pop
xchg
pop
lock
ja
sub
call
push
in
cmp
fisubrl
push
sbbb
imul
xor
jp
lret
daa
mov
enter
fs
xor
les
test
or
push
loop
ljmp
movsl
aam
test
scas
faddl
icebp
mov
jmp
jg
adc
popf
xchg
inc
pusha
xchg
out
jno
std
jno
push
fistpll
sbb
sbb
loopw
mov
outsl
call
in
sti
push
push
in
xchg
rorb
decb
aad
xchg
ret
jnp
stc
sub
dec
push
xor
xchg
cmp
xchg
call
jno
sub
mov
rolb
or
inc
stos
stos
sarl
addr16
call
stc
inc
mov
mov
sbb
mov
add
jecxz
dec
sub
xchg
and
xchg
inc
es
ja
pusha
pop
sbb
into
insb
scas
hlt
lods
push
pop
shrb
add
addl
aas
idivb
out
xchg
ljmp
cmp
add
shlb
xchg
push
adc
dec
scas
mov
ret
in
pusha
add
into
jb
mov
packsswb
in
adc
ret
xchg
test
pop
sub
clc
xor
lods
xor
inc
aam
and
jmp
iret
loopne
jge
cwtl
cltd
out
jp
jl
daa
push
fldenv
lahf
cmp
aas
aad
xor
pop
adc
push
mov
or
lea
and
repz
cmp
data16
rcr
push
sbb
les
xor
sbb
imul
fidivs
inc
push
mov
or
je
fiadds
pop
adc
das
repz
mov
jmp
rcr
push
dec
nop
stc
aas
enter
mov
mov
mov
sbb
mov
mov
xor
lds
in
sub
andb
xchg
sub
lret
loope
lods
mov
out
jg
adc
mov
mov
push
clc
scas
cmc
cld
and
ja
cmp
adc
push
sbbl
in
xchg
mov
lods
mov
or
out
inc
jb
dec
cld
mov
cli
mov
mov
lret
cmc
aad
pop
or
mov
cmp
add
and
mov
fs
push
pushf
add
test
cmpsb
push
jg
sbb
hlt
scas
jp
or
test
or
dec
mov
sbbb
arpl
cltd
in
mov
shrl
mov
and
fistl
vcvtps2pd
add
aaa
out
outsl
repz
popf
imul
in
push
mov
scas
shll
mov
into
roll
mov
ret
shlb
or
sti
pop
xor
push
xor
jns
sbb
mov
sub
adc
pop
sbb
fwait
jge
push
xchg
test
inc
push
mov
out
pushf
movd
loopne
js
icebp
cmp
adc
add
neg
dec
add
cmpsb
inc
add
push
lcall
mov
clc
out
adc
movsb
lcall
xlat
mov
outsl
fwait
aad
or
xor
decb
xchg
lcall
ljmp
dec
jbe
xchg
jb
push
pop
mov
ds
mov
sub
dec
mov
and
sbb
pop
and
pop
stc
mov
lcall
xor
stos
aad
or
jnp
subl
lea
push
xchg
test
mov
aad
push
or
cmc
scas
push
dec
pop
in
js
jecxz
mov
adc
sbb
movsl
sub
nop
das
clc
popa
ljmp
insb
shlb
xchg
mov
mov
je
xchg
jg
enter
mov
pop
mov
pop
roll
aad
adc
arpl
xor
fdivrs
fimull
fcmovu
push
inc
outsb
sarl
cli
mov
push
dec
jge
ds
jbe
cmp
xchg
sub
inc
or
testl
repnz
insl
or
and
mov
ficompl
iret
test
dec
sbb
flds
and
lcall
jge
inc
mov
xchg
jg
pusha
jmp
adc
mov
std
mov
ljmp
pusha
xchg
jbe
dec
in
repz
push
test
mov
inc
movsl
sub
mov
inc
cs
das
jp
dec
jle
iret
fmuls
movsl
and
imul
movsl
stos
mov
mov
and
sbb
loopne
outsb
rcll
jge
adc
scas
arpl
pop
xlat
dec
sti
pop
cmp
cmp
mov
shrl
mull
lea
jg
mov
or
xlat
add
popa
popa
out
cmp
push
or
pusha
mov
push
adc
add
dec
jl
orb
mov
call
mov
mov
in
nop
push
lods
mov
pop
stc
jg
xor
fsts
sarl
enter
mov
jmp
cmp
sbb
in
cld
bound
cltd
inc
sub
xchg
aam
data16
lods
je
imul
pop
imul
pop
bound
and
pop
aas
and
mov
negl
jl
ret
push
test
sbb
clc
es
loope
cld
mov
xchg
and
xor
inc
insl
mov
adc
sbb
ret
dec
fs
cmp
push
in
or
test
fwait
sub
and
popf
or
nop
insl
xor
cli
xor
jle
inc
dec
fcoml
mov
nop
dec
pop
or
xchg
xchg
mov
mov
sbb
test
and
imul
mov
cltd
xchg
stos
xchg
enter
shlb
lahf
push
xorl
mov
inc
mov
adc
jl
pop
push
inc
or
sub
arpl
mov
push
enter
inc
je
and
aam
or
sub
iret
push
jle
mov
outsl
das
push
adc
iret
and
add
cmp
dec
mov
sub
and
enter
lret
xor
cmp
ja
das
mov
jmp
lock
repnz
add
enter
imul
fwait
jecxz
jne
aam
scas
cmp
outsb
repnz
jb
sbb
int
iret
andl
aas
dec
jp
cli
rcll
jecxz
and
xchg
add
stos
popa
jb
fdivs
and
out
sbb
pop
sbb
push
xlat
cmp
das
popa
cmpsl
outsl
and
sub
insb
bound
and
add
fsub
popa
mov
and
xchg
test
ja
jbe
test
add
repnz
sub
mov
sbb
loop
scas
loope
movsl
mov
mov
dec
dec
xchg
lods
leave
mov
or
fldt
cwtl
aad
outsb
xchg
or
int3
out
nop
xor
sbb
in
push
xlat
jno
cmp
push
cli
popf
xor
js
rorb
dec
mov
pop
xlat
push
xor
sub
lock
push
scas
scas
pusha
adcb
pop
popa
push
nop
sbb
push
insl
insb
xlat
bound
gs
xchg
lods
movsb
into
sbb
mov
cmp
leave
adc
in
movsl
fnstcw
jb
inc
xchg
sub
jae
nop
push
pop
pop
xchg
notl
xchg
insl
gs
xor
push
push
lock
lahf
out
pop
repnz
into
mov
cmpl
fmull
addb
pusha
add
aaa
dec
xchg
pop
in
jne
xchg
cli
adc
push
sub
inc
je
pushf
lret
test
or
notb
pop
dec
inc
sbb
frstor
and
ret
or
addb
in
inc
std
add
mov
ss
and
imul
mov
push
sahf
iret
rorl
dec
pop
pusha
add
js
mov
mov
subl
sbb
push
xchg
pop
ss
xor
xchg
push
subb
scas
xor
cs
popa
mov
mov
popf
and
pop
sub
xchg
addr16
movsb
adc
jo
dec
push
loop
mov
xchg
imul
movsl
pop
and
mov
scas
and
lods
dec
mov
inc
pop
stc
pop
aaa
pop
bound
lahf
aad
sbb
int
lock
outsl
ret
mov
cmp
repnz
pop
test
push
cwtl
int
sbb
or
icebp
jo
adcl
dec
in
fldcw
mov
dec
dec
push
pushf
js
inc
shrl
xchg
test
imul
mov
fsubrl
sahf
inc
xchg
cltd
xor
aaa
pusha
out
push
imul
dec
or
or
mov
mov
dec
mov
sub
mov
jno
clc
jnp
adc
outsl
paddq
in
mov
adc
and
cmpsl
push
repz
lcall
scas
les
insl
lret
lds
incl
inc
mov
push
and
sti
aaa
or
lods
adc
mull
call
cli
mov
pop
pushf
adc
int3
mov
fmul
cmp
mov
push
pop
movsb
cmpsb
movsl
push
pop
xor
sub
pop
ja
ret
mov
or
sub
sbb
aaa
sub
sub
pushf
add
scas
mov
mov
xchg
xor
sahf
les
mov
pop
jge
insb
mov
or
jmp
and
and
pop
mov
int
pcmpgtb
bound
fidivrl
or
jbe
fidivl
rcrb
aam
push
clc
imul
cmp
jns
mov
cld
popf
lret
push
nop
mov
insb
xor
pop
mov
xchg
std
inc
jns
jne
dec
cmpsl
fs
stos
jbe
inc
aam
outsb
push
gs
inc
repz
js
test
not
leave
jecxz
or
lret
xlat
mov
lods
push
ja
adc
xchg
dec
cmp
xchg
ss
std
mov
sub
or
xchg
insl
cmc
in
jb
outsb
cltd
mov
mov
lea
pop
xor
dec
scas
cmpsb
inc
leave
mov
jns
dec
lcall
cmp
push
push
jmp
adc
push
out
inc
into
stos
pop
push
sbb
in
push
pop
out
jge
ret
adc
adc
jb
inc
mov
movsb
fidivrs
mov
pop
dec
mov
push
and
sbb
hlt
adc
imul
push
shlb
dec
pop
aad
xchg
mov
ljmp
sub
push
jge
arpl
xchg
rcrl
dec
loop
in
cmp
inc
into
nop
sub
lahf
push
int
jecxz
adc
lret
adc
jbe
into
and
and
cmp
in
shlb
sub
push
dec
push
pop
jne
addb
out
mov
stos
or
mov
pop
jbe
int3
xlat
push
dec
hlt
stos
and
inc
js
adc
scas
lods
pop
cltd
xchg
xchg
dec
fdivs
push
cmp
xor
xchg
ds
jp
loopne
dec
pop
mov
mov
cli
imul
repz
cmp
pusha
ss
xor
jns
lock
dec
push
loop
mov
dec
cmpsl
sti
dec
mov
adc
insb
loope
shr
das
xor
xchg
push
push
sub
inc
out
mov
sahf
cmp
lods
sub
cmp
ret
jae
out
inc
dec
cmp
out
mov
mulb
push
bound
pop
repz
rcrl
jp
add
push
mov
push
or
adc
lahf
sub
das
rcll
add
jle
addb
shll
movsb
mov
testb
sbb
push
dec
xor
sub
add
or
iret
push
popa
gs
mov
enter
popa
push
push
adc
test
mov
in
icebp
mov
xchg
and
and
inc
inc
aam
xlat
subl
dec
adc
lea
sub
lods
sbb
fbld
xor
dec
mov
fisubl
scas
sbb
xchg
aad
mov
lcall
leave
icebp
xor
jp
and
mov
pop
fwait
loopne
cltd
pop
or
mov
aas
div
cld
cmp
imulb
or
xor
pop
push
insb
mov
pop
adc
or
ror
sub
mov
faddl
push
push
push
mov
cmpb
pop
sbb
ss
xchg
mov
popf
jb
ret
aaa
out
mov
mov
xor
fdivs
test
jp
rorl
jg
pop
jp
push
jmp
push
ret
repnz
movsb
les
mov
daa
xor
aaa
jecxz
xchg
enter
daa
or
pushf
inc
pop
cmp
mov
into
push
scas
pop
cmp
mov
xor
mov
jmp
out
pop
xchg
jb
mov
adc
push
adc
cmp
xchg
rcrb
aad
fcoml
lret
lods
xchg
scas
pop
fisttpl
cmpsb
mov
stc
out
ror
push
cmpsl
andl
pop
jmp
jns
cli
fnstenv
and
inc
and
adc
jmp
mov
adc
dec
dec
mov
bound
bnd
dec
inc
dec
mov
stos
data16
int
lret
aas
dec
pop
add
or
add
jns
sbb
add
and
xor
bound
xchg
lret
sbb
xchg
lds
sti
call
daa
cmp
pushf
or
mov
shrb
daa
mov
cmp
call
incb
mov
lahf
std
sbb
ss
push
lahf
shll
lcall
and
inc
or
adc
aam
test
outsl
mov
and
gs
js
inc
dec
shl
std
pop
sbb
cmpsl
lock
mov
push
fdivl
and
inc
dec
xchg
push
push
mov
xor
dec
dec
mov
cwtl
add
push
inc
aam
mov
push
fs
test
sub
scas
aas
jb
shlb
push
pop
xor
out
std
out
mov
enter
inc
cmp
push
cmp
and
dec
jle
subb
ljmp
jmp
icebp
shll
push
stos
mov
mov
or
inc
rorb
mov
aaa
enter
jbe
mov
cmp
inc
and
cmp
ja
lods
push
cmp
or
test
sahf
ljmp
les
mov
out
lds
mov
jmp
sarb
stc
cwtl
loopne
outsb
scas
dec
fbld
popa
pop
mov
fsubs
push
mov
out
lods
adc
xlat
adcb
push
stc
andl
pop
jp,pt
repz
xchg
cmc
in
lods
jno
mov
jp
push
mov
ud1
in
movb
adc
pop
roll
test
push
test
loope
mov
mov
inc
ss
scas
mov
fsubs
call
pop
jne
jnp
movsb
mov
les
pop
jnp
mov
imul
dec
xor
mov
xor
push
mov
xchg
mov
pusha
xor
push
icebp
fsubp
pop
dec
and
or
ljmp
adc
push
insl
sbb
nop
iret
pusha
jno
xchg
popa
and
std
fidivl
in
push
and
jnp
xchg
push
sti
inc
in
daa
maxps
add
imul
int
xor
aaa
sti
dec
popf
jle
pop
insl
daa
aaa
mov
fstpl
push
sub
mov
or
mov
mov
pop
jg
hlt
test
dec
adc
xor
fsubs
mov
scas
iret
mov
ljmp
and
rclb
or
movnti
mov
sub
mov
jo
aas
stos
sbb
mov
push
rcl
popa
jne
push
icebp
lock
idivl
mov
adc
imul
push
sbb
lret
lods
push
cltd
or
push
and
cmp
adc
xchg
rcrb
pop
fldt
cmp
xor
cwtl
add
jo
adc
ss
movsb
insl
adc
in
adcb
cltd
push
mov
and
mov
scas
and
mov
pop
xchg
rol
cmp
pop
pop
xlat
lcall
or
leave
lods
xchg
push
into
enter
inc
dec
iret
pop
mov
dec
adc
pushf
call
dec
cmp
xor
sbb
adc
mov
jg
stc
sbb
sub
and
rcll
add
sbbb
push
scas
jae,pn
pop
jno
cmp
mov
aad
loope
add
mov
ss
push
loopne
movsb
push
jbe
push
mov
and
push
dec
inc
insb
fcoml
jo
xchg
dec
test
xor
int
xchg
inc
mov
clc
add
mov
pop
xchg
scas
outsb
push
sub
int
and
xchg
xor
out
cmp
das
xor
lcall
cmpsl
std
and
jnp
aaa
lea
pop
xlat
in
cwtl
push
loopne
jmp
icebp
mov
xchg
xlat
xchg
mov
jo
outsl
jae
inc
lcall
xor
xchg
ret
ds
ret
std
jno
push
and
std
shll
in
xor
jg
mov
stc
testb
lret
mov
xchg
lcall
pop
ja
stos
add
dec
pushf
pushf
lds
cwtl
push
and
jno
aam
sub
cs
dec
aas
xor
jmp
fwait
movsl
ja
jne
push
cmpsl
dec
lret
inc
enter
jl
dec
mov
push
xchg
cwtl
fisttpl
fimull
test
xor
or
push
ljmpw
or
ret
push
out
cmp
adc
pusha
add
mov
or
mov
subb
and
adc
or
inc
pop
js
xchg
jmp
nop
adc
scas
jne
jnp
or
adc
cpuid
adc
in
imul
shlb
mov
cmp
jge
push
pop
pop
std
push
notl
sub
mov
push
hlt
sub
jne
lahf
xchg
lds
add
out
jnp
insl
jbe
lea
mov
rclb
shll
dec
jo
add
lahf
pop
int
mov
mov
cli
inc
mov
arpl
pushf
test
dec
or
xorb
mov
mov
sub
cmc
push
mov
xchg
or
setae
je
cmpsb
std
lahf
data16
loopne
cwtl
js
pop
fcoms
inc
jbe
mov
mov
iret
xor
push
scas
adc
test
xor
in
cmp
outsb
dec
in
xor
mov
ss
out
mov
adc
push
stos
mov
fdivs
adc
jb
mov
les
in
cmp
mov
hlt
scas
icebp
jmp
ss
jle
shlb
inc
pop
in
aas
add
jg
cmp
push
out
aad
jbe
mov
sbb
pushf
inc
inc
ret
jp
sti
std
mov
test
push
in
fs
idivb
insl
into
insl
or
shrb
mov
movb
rcr
jns
cmpsb
sub
and
aad
test
jae
mov
icebp
push
fs
cmp
dec
push
sub
xchg
jnp
inc
dec
mov
cwtl
loope
jae
cltd
fnsave
aad
clc
addr16
in
sbbl
sub
sbb
jne
xchg
and
mov
fdiv
mov
loopne
inc
aas
aam
mov
sub
fwait
sub
sbb
sbb
stos
mov
jae
les
pop
fimuls
popf
push
mov
or
mov
push
inc
cltd
cmp
push
pop
xchg
lret
lcall
jmp
jns
ja
lds
sar
aas
xor
out
dec
fs
mov
adc
int
aas
movsl
call
outsb
cmc
leave
cmp
int3
inc
push
xlat
xlat
sbb
mov
scas
out
adc
fsubs
mov
test
sbb
push
and
std
pop
sub
sbb
mov
popf
call
dec
cwtl
std
xorb
iret
dec
gs
xor
lods
rcl
mov
nop
enter
adc
mulb
lcall
add
and
pop
imull
lahf
sub
xchg
xchg
dec
divl
ret
xor
sub
mov
mov
cmc
push
sub
outsb
or
or
cld
push
dec
pushf
mov
jne
repz
insl
orl
xchg
aaa
mov
movsb
and
loope
pop
test
inc
sbb
dec
cmpsl
pusha
stos
in
movl
int
and
xor
mov
add
add
push
fst
cmp
sub
mov
scas
stos
jo
push
mov
jbe
lret
sub
xor
arpl
daa
fadds
or
subb
lock
fcoms
sahf
js
cli
xor
cli
xor
dec
cmp
hlt
jecxz
aaa
xchg
xor
loopne
pop
xor
lds
in
add
pop
inc
inc
in
fwait
mov
xchg
setns
jle
pop
lahf
jecxz
loop
sbb
test
shll
sbb
add
fiaddl
adc
jb
pop
xor
jbe
dec
mov
in
jl
call
cmp
imul
jmp
sub
ds
and
push
aaa
sbb
cmp
aad
sbb
jp
lahf
adc
xchg
pushf
test
cwtl
or
sub
test
or
fstpl
lcall
jnp
inc
leave
adc
popf
sbb
inc
xor
inc
push
scas
mov
push
loopne
ss
fistpl
xchg
jl
sbbl
mov
mov
push
xchg
mov
in
or
ja
sbb
stc
mov
mov
leave
mov
sbb
cs
jp
jns
dec
mov
and
xchg
xchg
lahf
ljmp
xor
loop
aaa
jns
add
imul
fisttpl
rcrb
lods
stos
xor
sub
xor
negl
xlat
push
lods
inc
test
mov
add
loope
xchg
sbb
jb
xchg
cmp
jno
shll
inc
cmp
ret
adc
cmpsb
in
mov
in
pusha
enter
pop
jle
rcll
push
or
pop
jbe
cltd
xor
je
xchg
jge
add
setns
or
out
or
repz
xchg
out
repnz
push
cmp
into
jmp
loope
jl
ljmp
fstl
or
sbb
pop
xchg
fcmovb
fcoml
xlat
or
xchg
cmp
jmp
inc
and
cmpsb
xchg
fisubs
add
out
fs
fdivl
cli
dec
repnz
pop
sub
sti
cli
dec
jne
popa
mov
test
sub
xlat
add
or
call
dec
xchg
mov
scas
in
pop
sub
out
loopne
movsl
repz
fsubrl
loope
or
inc
xchg
pop
stc
pusha
and
iret
data16
inc
jl
cmpsl
mov
push
das
push
js
cmovns
lea
xchg
stc
mov
in
sub
stos
dec
and
xchg
pop
mov
and
ss
fcomps
xchg
cmp
jae
int
xchg
mov
repz
sub
dec
pop
jne
jnp
fwait
cmp
add
out
or
and
push
popa
inc
aaa
nop
dec
jmp
and
incb
sub
pusha
in
xchg
pop
hlt
or
xchg
notb
push
js
cmp
std
adc
push
jnp
jae
push
jae
insb
pop
cmpl
pop
out
jb
cli
test
enter
repz
mov
repz
nop
pop
and
sarl
and
mov
push
mov
addr16
pop
repz
outsb
jne
ret
and
pop
jno
jge
and
push
lret
mov
jne
jb
pop
jle
add
mov
testb
mov
movsb
adc
out
pop
sbb
cs
mov
mov
adc
or
fiadds
int3
dec
sbb
mov
das
nop
hlt
ficomps
lcall
adc
sub
into
rcrb
out
jbe
loop
repz
cmpsl
lret
cltd
arpl
pop
bound
pop
pop
push
cli
dec
pop
data16
enter
loopne
aad
sahf
jl
mov
push
and
pop
enter
jne,pn
mov
push
push
cmp
pop
dec
dec
dec
repnz
or
dec
mov
xor
xor
ficoml
and
xor
mov
loopne
cli
movsb
adc
mov
sbb
push
mov
in
out
add
insl
lds
sbb
cltd
loop
push
jnp
sbb
mov
sub
cmc
jle
das
aas
lock
fs
cmpsl
xchg
mov
inc
push
mov
frstor
sbb
mov
adcl
mov
mov
jo
inc
pusha
negl
jl
mov
fstl
add
shlb
stos
inc
int3
cmp
nop
in
pop
popf
mov
imull
add
and
sub
jnp
xor
jnp
lds
dec
mov
and
jl
test
cmpsb
lcall
out
pop
cmove
mov
scas
aad
jle
sbb
push
mov
mov
dec
shrl
jae
je
cmpl
arpl
shlb
fstps
mov
shl
fistl
pop
sbb
pushf
ljmp
stos
jmp
test
push
rcr
add
out
xchg
ds
mov
pop
addl
scas
mov
mov
stos
add
sub
test
dec
nop
and
inc
dec
sub
hlt
imul
xor
test
mov
rclb
xor
mov
sti
in
cmpsb
xor
jnp
cs
and
ret
in
xchg
and
sahf
out
jle
sub
inc
fcomps
into
jbe
mov
in
lret
cwtl
enter
dec
xor
fwait
jo
arpl
pop
roll
xchg
jb
xorb
fildll
sub
ja
scas
push
jg
mov
test
pusha
ss
pop
enter
xchg
jle
and
mov
mov
pop
and
cmc
in
sub
frstor
jecxz
iret
hlt
jno
or
test
mov
mov
jp
shrl
mov
adc
test
pop
idivb
lret
bound
push
bound
ss
push
jecxz
add
aad
cwtl
jnp
rolb
sar
int3
mov
aam
call
pop
jecxz
arpl
dec
cs
fs
sbb
jo
jle
jns
jl
aas
mov
ret
call
mov
sbb
and
dec
cmpl
stos
sbb
adc
ret
fnsave
jmp
pop
mov
dec
aaa
aad
cmpl
ficoml
lret
push
into
push
xor
sar
lret
push
loopne
push
out
sbb
dec
sub
mov
mov
push
enter
xor
cmp
sub
jns
stc
push
mov
push
je
push
stos
dec
mov
hlt
rolb
inc
push
mov
les
imul
sub
test
ret
dec
xchg
fsts
push
xchg
add
inc
jns
adc
mov
rclb
sbb
rclb
adc
push
popf
or
sahf
add
inc
sbb
dec
sarb
jb
dec
jl
outsl
cmp
jnp
pushf
ljmp
inc
xchg
insl
jae
addr16
ljmp
les
xor
outsb
or
push
cmc
insl
insl
pushf
inc
popl
xor
mov
je
clc
fldt
add
pop
lea
push
or
mov
cmp
pop
or
in
jae
jmp
cs
test
xchg
jb
xchg
inc
jno
mov
xchg
inc
pop
sarl
shrb
cld
hlt
add
pop
sub
adc
xor
cwtl
outsb
lahf
jbe
push
or
and
add
or
sbb
mov
loope
pushf
sub
rorb
cld
add
shll
add
jno
fwait
hlt
sbb
scas
ret
pushf
pmulhw
mov
and
stos
mov
movhps
aam
pop
std
mov
cld
pop
daa
mov
sub
adc
pop
lods
mov
lods
dec
addl
adc
xor
adc
pop
dec
inc
negb
fsubrs
inc
mov
mov
cld
xchg
cltd
sub
push
idivb
scas
ja
movsb
icebp
dec
movsl
scas
call
cmpsb
cs
cmp
lret
movsl
xchg
je
int
mov
aad
bound
clc
mov
insl
mov
jmp
xchg
inc
andb
push
out
mov
lahf
insl
and
nop
test
sbb
dec
pop
sbb
stos
xor
enter
enter
je
stos
xchg
cmp
loopne
sti
and
lea
lea
jno
cwtl
mov
push
ret
test
xor
push
repnz
mov
or
push
push
scas
inc
pusha
fwait
out
ret
inc
cli
fldl
mov
adc
xor
test
pop
std
adc
scas
xchg
push
add
mov
sbb
cmp
sub
pop
dec
int3
adc
int3
xor
out
adc
fstpt
push
jnp
lcall
sub
ret
pop
inc
loope
addl
inc
or
iret
dec
push
rolb
subb
sub
fsubr
cmpb
add
pop
cmp
mov
fwait
inc
or
sbb
negl
stos
sub
fwait
scas
test
cli
sub
out
sarl
stos
sub
xor
cmp
add
leave
mov
pusha
add
iret
js
pop
fs
inc
movsb
push
mov
sub
or
mov
mov
mov
lock
sbb
test
popa
or
pop
mov
imul
fiaddl
sbb
lods
rcrb
filds
inc
and
and
inc
dec
xor
lds
and
mov
cld
out
mov
inc
sbb
sbb
fistl
lret
or
adc
adc
pop
lds
nop
xchg
sub
and
mov
mov
sub
in
jge
lock
loop
es
jo
sub
adc
sbb
dec
sbb
data16
pop
or
nop
inc
movsl
std
sbb
das
push
orb
mov
push
cmp
fsubl
repnz
aas
mov
xor
mov
fmull
inc
jl
add
ljmp
ljmp
stos
cmp
aad
cmp
incl
mov
into
out
stc
mov
je
jmp
xor
add
mov
mov
cld
sbb
add
adc
push
stc
aas
pop
mov
stos
cmp
loopne
mov
cmp
fidivl
dec
or
int3
jb
mov
mov
andl
fbstp
xchg
popa
mov
mov
inc
and
xchg
repz
inc
sub
fbstp
rcrl
add
pusha
and
pop
not
mov
inc
jl
push
push
ret
das
xor
push
int
inc
pusha
inc
rolb
xor
loope
or
lret
insb
enter
out
arpl
imul
cmp
aam
sub
fdivr
gs
enter
lahf
push
push
dec
xchg
inc
pop
test
scas
jge
dec
mov
pop
dec
or
dec
shlb
pop
fdivl
adc
xlat
pushf
xchg
arpl
push
mov
aam
lods
xchg
scas
pushf
paddsb
xor
mov
dec
add
stos
out
mov
jnp
repz
cli
negl
sbb
push
jge
ljmp
test
cmp
cmc
test
xlat
aam
fs
mov
xor
pop
mov
loop
pop
hlt
push
lds
lock
das
js
das
es
ljmp
daa
add
dec
adc
sbb
mov
sbb
in
ret
hlt
and
xchg
inc
cwtl
xchg
fcoml
outsb
cs
lret
leave
cmp
mov
cmp
push
jae
jmp
shll
dec
enter
sub
into
push
pusha
js
jo
icebp
cwtl
pop
push
dec
push
dec
and
lock
cmp
mov
xlat
lock
sbb
mov
and
or
push
cmpl
push
icebp
cwtl
inc
mov
dec
lods
and
jmp
test
test
pop
push
cmp
adc
mov
mov
push
push
inc
push
je
cmpsl
scas
adc
stos
das
cmp
and
decb
ret
cmp
adc
cmp
mov
jae
repz
mov
imul
leave
mov
ljmp
pop
mov
mov
add
add
fidivrl
pop
dec
jecxz
mov
or
adc
jb
in
inc
inc
aad
icebp
sbb
and
and
addps
call
xor
push
push
jne
and
mov
int3
int3
mov
pop
cmp
adc
scas
sbb
test
out
bound
push
out
xor
arpl
push
lods
std
jmp
mov
adc
add
adc
addr16
jo
es
cmp
xor
mov
add
daa
jp
pop
jle
and
mov
ret
or
sbb
div
mov
stos
pop
lods
jne
in
repz
loop
test
shlb
fisubs
jns
js
adc
cmp
mov
idivb
inc
xchg
adc
and
pop
fstpl
adc
lcall
inc
jl
mov
fbld
adc
lcall
lret
iret
cmp
fwait
ret
push
ret
imul
shlb
cmc
int3
cli
stos
jb
inc
xlat
out
aas
inc
xchg
mov
insb
pop
sub
adc
sbb
sbb
stos
add
popa
aam
mov
add
adc
inc
mov
dec
nop
xor
shll
fldl
jae
mov
in
push
inc
mov
gs
lds
stos
fstpt
jbe
cmpsb
in
cmp
in
jg
xor
xchg
cltd
xchg
push
jmp
cmpl
mov
ds
adc
dec
sub
sbb
cmp
repz
sbb
fbld
ja
sub
adc
mov
xor
dec
pop
lock
adc
int3
jmp
mov
xor
push
cmp
or
out
cmc
xchg
pop
inc
sub
lock
sub
push
mov
push
loop
cs
hlt
lret
sbb
mov
adc
xor
or
xchg
xchg
dec
jnp
stos
nop
and
push
push
notb
lods
jne
shlb
jge
mov
lods
push
adc
and
push
mov
loope
nop
xchg
nop
imul
fisubrl
push
out
repz
sub
in
andb
mov
cmp
sbb
and
stos
jle
imul
xor
daa
sbb
fwait
call
daa
push
mov
mov
mov
imul
push
pop
ss
mov
leave
and
fnstenv
lds
or
enter
mov
add
mov
mov
out
cltd
lea
stos
addr16
jb
repz
subb
and
pushf
aam
dec
loope
inc
repnz
mov
in
sbb
stc
cmp
cltd
xchg
pop
pop
rcrb
xchg
pop
js
sahf
sub
popa
stos
push
pop
cmpsb
inc
popf
dec
mov
ret
jno
stc
dec
fdiv
or
jp
push
or
or
push
xor
int3
movsb
and
sbb
rcrb
mov
loope
mov
insl
lcall
insb
sub
scas
xchg
cwtl
push
leave
adcl
shrl
pusha
jno
dec
push
mov
sbb
je
out
mov
sbb
xor
xor
adc
repnz
loopne
inc
mov
pop
xlat
inc
adc
popa
orl
adc
xchg
ja
sub
xchg
in
inc
cmpsl
add
aaa
decb
inc
rclb
aam
leave
and
aam
scas
mov
cmpsb
xor
imul
testl
jo
push
decl
lds
mov
lods
pop
push
cli
adc
pop
dec
cmpsb
or
ret
es
pop
in
les
jbe
test
fcmovnb
dec
subl
ret
ss
es
or
sarb
aad
xor
push
fstp
mov
stos
repnz
lock
sbb
neg
xor
aaa
push
pop
push
jp
jns
inc
dec
mov
adc
dec
dec
fwait
addr16
push
aad
scas
inc
fwait
lret
test
in
pushf
out
or
sbb
movsl
bound
ljmp
xchg
push
pop
mov
jns
or
fnstcw
pop
std
sbb
cmp
pop
push
cmc
inc
jne
push
mov
shlb
pop
repz
das
or
popa
loopne
movsb
adc
inc
or
mov
aad
mov
es
stc
xchg
push
insb
shlb
push
cld
sbbb
xchg
sbb
push
pop
cmp
cmp
aaa
mov
cld
mov
mov
xchg
pop
jle
outsl
mov
scas
iret
mov
repnz
bound
adcb
icebp
in
mov
push
mov
lahf
rcr
popa
push
ror
mov
iret
and
lds
mov
dec
sahf
scas
cwtl
popf
aad
xchg
or
jp
jmp
xor
jbe
lret
sbb
adc
pushf
test
push
andl
mov
das
ljmp
add
adc
cmc
cmc
mov
testb
push
outsb
icebp
int
lods
fidivrs
inc
cmp
sahf
aam
and
jo
cmp
mov
push
dec
aas
fisttpl
cld
or
lcall
cmpsl
cld
fwait
lds
cmp
daa
mov
jmp
push
mov
adc
ljmp
pop
mov
inc
lret
xchg
test
xlat
insb
jg
incb
faddl
and
cmc
loopne
enter
loop
into
test
pop
xor
stc
pop
add
ret
push
mov
or
pop
jl
jg
aas
dec
das
or
push
hlt
mov
push
add
xor
imul
mov
xlat
testb
stos
pop
mov
mov
adcb
popa
push
pusha
arpl
pandn
sti
mov
adc
pop
negb
loop
aas
pop
pop
add
cmp
movsb
sti
fcmovnu
adc
jp
push
pop
push
fsubl
and
bound
mov
mov
add
repz
aad
jo
stos
add
into
or
repz
adc
dec
cltd
sub
adc
pop
fcomps
lods
xchg
cmp
sarb
fadd
rol
fbld
int3
rorb
clc
stos
mov
adc
ljmp
gs
xchg
cmp
fsubr
xor
imul
dec
stos
fcompl
or
xor
inc
push
cmp
pop
xchg
cmp
xchg
nop
push
nop
out
adc
push
cmpsl
dec
cmp
shll
mov
cs
icebp
out
lcall
adc
cld
cmc
leave
ja
adc
lods
fidivs
cmp
imul
js
xor
mov
push
pop
cwtl
std
dec
xor
mov
add
mov
xchg
xchg
negb
jle
popa
imull
mov
or
fsubs
push
mov
cli
repz
mov
jle
or
hlt
push
in
insb
adc
xchg
arpl
aad
mov
jne
mov
and
or
xchg
in
and
sub
loopne
int3
jne
loopne
addr16
int
or
ja
sub
ret
xchg
repnz
sub
fs
hlt
push
push
push
repnz
rorl
pop
inc
mov
les
xchg
popa
shl
popa
addl
dec
out
cmp
jnp
xlat
pusha
ljmp
pop
xor
cmovo
or
pop
sbb
outsb
sarl
mov
mov
jge
dec
out
inc
pop
cmp
mov
mov
das
mov
cmp
pop
daa
xor
jmp
xchg
cmp
je
or
xor
mov
add
jmp
int
dec
push
fstpt
push
mov
cltd
mov
jge
rorl
movsl
mov
aas
in
cld
mov
or
mov
rolb
sub
mov
repz
inc
adcb
xlat
cli
mov
mov
adc
test
out
sub
insb
sub
ja
or
xchg
mov
imul
pop
sub
cmp
les
or
sub
test
lcall
jmp
adc
in
ret
call
cmp
dec
fwait
xchg
out
js
lcall
stos
and
enter
and
std
outsb
add
mov
or
call
pop
lock
jns
sbb
adcb
outsb
dec
insb
pushf
inc
add
out
andb
scas
sbb
xchg
imul
add
cwtl
out
xlat
lret
fcom
xor
pushf
xchg
xlat
stos
arpl
mov
adc
les
das
pusha
fsubr
pop
jbe
ss
loopne
cmp
mov
outsl
or
stos
stos
xorb
xchg
loopne
aad
mov
pushf
push
inc
mov
ja
stc
mov
jns
inc
sbb
cwtl
sub
sub
mov
xchg
test
popf
setl
out
loop
xchg
gs
jge
sub
cmp
mov
lds
xchg
xchg
lea
fs
and
sti
andl
adc
and
jl
fbstp
mov
jns
loope
or
xchg
or
leave
xchg
shlb
dec
insb
mov
jae
dec
aaa
aam
cmc
in
dec
hlt
in
jecxz
hlt
stos
and
sub
mov
cs
adc
psrad
fcmovne
loop
mov
cmp
sbb
mov
pop
jno
test
lds
lock
mov
arpl
push
mov
xchg
rep
mov
xchg
sbb
add
cmp
add
push
jns
and
popa
sub
cmp
call
cmpsb
xchg
mov
sbb
dec
insb
ljmp
fisubrs
mov
cmpsb
dec
sbb
xchg
movsb
lock
sub
stc
test
roll
mov
fwait
das
sub
dec
clc
imulb
cmp
cltd
mov
jbe
in
lret
subl
rcll
ret
ret
or
sarb
ret
xchg
jae
mov
cmpl
mov
sti
lret
out
fisubs
mov
ss
aad
not
mov
sahf
stos
lahf
cltd
subl
lret
insl
test
mov
ja,pn
xorb
mov
scas
push
sub
insl
adc
aam
out
movsb
mov
or
sti
xorb
or
inc
imul
cmp
inc
andl
xor
cmp
push
dec
push
sahf
in
jmp
mov
cwtl
enter
icebp
decl
or
pop
icebp
cmp
jle
sbb
divl
sbb
or
sub
shlb
pop
xlat
enter
je
inc
in
les
test
add
jg
test
mov
mov
fisubs
jp
xchg
loopne
cmpb
inc
xor
pop
nop
ret
dec
out
xchg
daa
test
ss
jmp
and
sub
out
push
sbb
in
cwtl
mov
movsl
shlb
test
or
mov
in
test
pusha
cmpsl
jbe
push
outsl
push
mov
loopne
mov
popa
test
dec
fcompl
jmp
jl
lds
out
ljmp
enter
jnp
xchg
jmp
xchg
clc
test
push
popa
test
add
push
test
ja
sbb
jns
push
dec
or
sub
dec
xchg
push
push
test
pop
ds
add
jnp
push
add
xchg
adc
xor
test
or
les
and
outsl
jl
adc
movsl
addr16
push
gs
ret
inc
das
and
inc
pop
test
lahf
mov
or
ds
in
mov
cmpsl
ret
mov
cmp
push
pop
lret
js
inc
cld
pusha
ja
dec
sbb
mov
scas
jmp
inc
pushf
fmulp
push
leave
addr16
push
inc
iret
stos
push
mov
shll
inc
add
cwtl
into
test
mov
aas
ds
cltd
mov
mul
adc
mov
xchg
test
loope
or
adc
push
out
jge
inc
and
mov
sub
dec
dec
enter
sbbl
sti
stc
xor
dec
xor
mov
in
sbb
pop
cld
imul
leavew
cmp
cmp
or
in
jle
sbb
xor
stos
pop
mov
mov
inc
icebp
emms
mov
and
je
aad
test
push
not
sahf
faddl
and
lods
ret
sahf
pop
push
dec
je
lds
sbb
and
addb
mov
loopne
mov
jl
mov
fstps
je
pop
movsb
cmpsl
mov
cltd
dec
in
and
cmp
jns
inc
jmp
mov
mov
cmpsl
xchg
jno
ljmp
loopne
dec
push
jns
adc
push
sarb
or
dec
cmp
mov
mov
cltd
out
in
dec
add
jbe
ficomps
dec
inc
out
mov
pop
add
xor
jl
push
mov
sbb
int3
fldenv
and
or
sbb
mov
xorb
jmp
hlt
jne
icebp
sbb
dec
outsl
fadds
add
test
lahf
jnp
int
aaa
mov
andl
push
jl
int
and
xchg
outsl
xchg
or
add
ja
adc
mov
aaa
in
movntq
or
pop
lods
leave
sub
cmpsb
or
adc
icebp
adc
dec
mov
mov
mov
sub
xchg
mov
movsl
push
add
fpatan
adc
or
cmp
or
insl
inc
inc
mov
push
push
repz
js
popa
adc
loope
mov
mov
ja
jmp
pxor
xchg
insb
insl
ljmp
adc
sub
adc
lret
mov
aaa
mov
sub
pop
mov
adc
sbbl
xlat
jmp
sbb
inc
push
insl
mov
int3
sbb
pop
xor
data16
jge
xor
sub
sub
pop
xchg
mov
dec
lcall
sbb
and
fnsave
ljmp
iret
out
sti
or
inc
div
cmpsb
cmc
gs
xlat
push
das
cmpsl
jnp
inc
clc
inc
mov
mov
nop
xchg
mov
xchg
mov
addr16
pop
ja
or
xchg
repz
repnz
push
mov
inc
ljmp
subb
fidivrl
fs
pop
dec
inc
mov
lahf
cmovs
fbstp
pop
mov
mov
mov
mov
lret
pop
mov
xchg
mov
bswap
fidivl
lods
adc
lret
push
notl
xadd
push
cmp
popf
xchg
stos
mov
adc
or
movsl
jno
es
pop
movsb
xchg
cmp
movsb
pop
pusha
enter
mov
sarb
xchg
divl
notl
push
out
mov
xor
je
or
ja
adc
iret
xorl
xchg
stc
cmp
inc
js
inc
push
jg
rcrl
mov
push
inc
push
and
sahf
insl
or
cmpsb
repnz
cld
aam
js
pop
imul
xchg
arpl
scas
jecxz
in
xor
ret
sbb
popa
test
stos
jl
popf
leave
icebp
repz
jg
adc
jmp
mov
cltd
fisttps
xchg
scas
ret
daa
dec
palignr
lcall
scas
jns
outsl
mov
std
cmpsb
mov
push
nop
adc
adcb
mov
add
popa
adc
cmp
hlt
ja
fwait
imul
push
push
lods
repz
sbb
sub
and
es
jnp
dec
jl
cwtl
iret
lcall
xor
movsb
add
dec
fidivrs
bound
mov
and
lods
add
push
push
mov
jne
xor
andw
cmp
inc
dec
sub
cmpb
jge
sub
push
int3
xchg
jno
sub
inc
in
imul
movsb
and
mov
jno
in
cmpsb
int
mov
stos
mov
aaa
pop
inc
mov
push
push
lret
imul
ret
jbe
fildll
stos
sbb
mov
push
stos
push
scas
push
sbb
mov
loopne
and
arpl
pop
push
jl
aam
loope
sub
fidivl
xor
mov
jbe
loope
xor
pop
test
out
in
xchg
in
daa
es
cmp
pop
push
pop
pop
int3
cltd
xlat
lock
mov
out
leave
rorl
movsl
icebp
xchg
mov
outsl
xor
out
and
mov
push
jns
subb
int
pop
cmp
pushf
cs
mov
inc
mov
outsb
movb
or
pop
xor
add
push
fildll
xchg
rcrb
push
adc
les
xchg
push
jl
orps
cmpsl
and
sbb
add
outsl
lock
cmp
mov
jnp
test
pop
sbb
mov
add
bswap
jge
sub
popf
push
inc
xchg
xor
daa
fidivrl
or
lock
call
fisubrs
mov
xchg
sti
lods
insb
outsb
fmulp
cmp
xchg
push
inc
andb
pop
fcoml
fsubrl
icebp
hlt
cmpb
push
pushf
sbb
idiv
inc
mov
outsl
inc
pop
adc
popf
pop
inc
js
push
mov
mov
imul
div
movzbl
enter
in
jecxz
mov
inc
mov
and
pop
sbb
sbb
fdivl
dec
in
aad
sbb
fwait
mov
pop
pop
lds
xor
loopne
mov
mov
push
mov
and
pop
cmp
dec
jbe
cltd
or
sub
inc
mov
lock
jecxz
ret
mov
push
outsb
push
pop
cmc
mov
xchg
pop
inc
xor
jl
stc
cmpsb
pop
pop
push
push
mov
lret
cmpsl
fsubr
idivb
ss
add
fisttps
pushf
mov
aaa
mov
xchg
mov
mulb
movsb
mov
pop
fidivrs
mov
xchg
jbe
outsb
in
jmp
cs
cmp
enter
subb
dec
ds
sub
les
pushf
add
jecxz
cltd
push
or
popf
sbb
sub
into
repz
add
xor
and
cwtl
mov
jge
mov
sbb
sub
jns
and
arpl
insl
adc
jno
add
dec
sub
lahf
jno
adc
mov
stos
out
cwtl
subl
stc
jb
pop
aaa
cmp
xor
push
ret
in
rcll
xchg
int3
sarb
out
les
pop
jge
pop
mov
xchg
dec
adc
imul
jmp
cmpsl
addb
mov
mov
sbb
mov
int3
lods
rorl
pop
lods
xor
adc
ret
aaa
mov
cmp
cmp
shrl
xlat
cltd
imul
mov
add
je
out
jno
ljmp
out
outsl
jecxz
mov
sub
orl
es
pushf
sbb
fbld
in
in
sbb
or
clc
cmpsb
lds
mov
ss
or
int
int3
test
adcl
aad
jecxz
xlat
in
test
dec
test
std
xchg
clc
and
aaa
les
out
or
jns
push
fistpl
mov
mov
insb
fnsave
ret
sahf
lds
adc
out
cs
push
nop
mov
leave
mov
pop
lcall
inc
enter
insb
add
or
add
andl
pop
in
loope
xchg
aas
test
jge
or
pop
mov
sahf
push
mov
sti
and
mov
in
fnstcw
mov
inc
into
pop
xchg
pop
adc
stos
lock
adc
jnp
mov
sbb
dec
sub
pop
inc
xchg
inc
xchg
jne
sbb
sbb
sub
mov
xchg
pusha
xor
shll
addb
sub
stos
movsb
lods
push
adc
fxsave
repz
pop
and
or
ret
jns
add
ror
lahf
dec
push
inc
lds
adc
sub
pop
js
leave
ja
shlb
jae
int
lds
fsubl
aam
imul
das
in
scas
or
insb
or
push
std
mov
inc
movsl
push
mov
cmp
dec
xor
adc
nop
addr16
push
movsl
std
sbb
and
addr16
inc
push
cmc
ljmp
xchg
cwtl
je
mov
jecxz
insl
sbb
mov
pop
or
or
cmpsl
mov
pop
stos
xchg
inc
push
adc
sbb
mov
dec
push
test
fmul
add
loope
dec
mov
aad
sbb
hlt
cwtl
dec
and
nop
mov
stos
sbbb
pop
xchg
pop
inc
adcl
add
jo
sub
gs
shlb
sarl
ljmp
mov
out
mov
data16
push
adc
jo
pop
imul
repnz
icebp
pop
je
inc
pop
adc
adc
lret
fnstenv
sub
mov
leave
outsb
dec
sub
inc
lret
icebp
fnsave
cmpsb
xor
push
lea
fsubr
xor
xchg
std
cmp
add
ret
xor
pushf
mov
or
sub
adc
cmp
movsb
adc
sbb
cld
jbe
es
jmp
repnz
popa
add
popl
repz
ja
sbb
dec
add
xor
jle
js
add
out
aam
ja
dec
inc
ja
or
adc
fildll
dec
pop
ss
push
fidivs
xchg
test
pushf
jb
faddl
loope
in
adc
fidivrl
mov
mov
shl
sub
stc
fwait
popf
pop
arpl
shr
ds
mov
rcll
inc
mov
cli
and
repz
and
add
mov
mov
leave
inc
mov
lock
cmp
jae
jns
adc
aas
outsl
cmpsl
out
fsubl
and
adc
mov
sti
test
jle
xchg
sbb
outsl
push
pop
pop
cli
shlb
daa
clc
pop
test
xor
jae
jecxz
push
mov
testb
fimull
fcoms
ret
ja
enter
fsub
test
dec
insb
adc
jns
inc
xor
in
cmp
fsubr
mov
ffree
leave
inc
and
iret
cld
inc
inc
pusha
cmp
add
xchg
aaa
jo
xor
lret
loope
div
sti
fcmovnu
lock
or
call
cmp
aam
inc
daa
sub
sbb
jae
push
aam
jno
pop
pusha
cmp
pop
leave
xchg
dec
xchg
sarb
mov
push
cs
arpl
clc
test
cmpsl
int3
clc
popa
lods
fwait
into
mov
sub
push
pop
ret
sbb
cs
adc
imull
add
mov
adcl
arpl
cmp
ja
jae
jo
xchg
mov
sbb
xchg
mov
pushf
mov
addr16
les
push
fldl
nop
jae
jge
cli
push
push
pushf
jp
pop
pop
jo
dec
pop
push
pop
sbb
loop
sbb
mov
mov
and
pop
outsl
scas
inc
sbb
in
cwtl
sub
xchg
pop
jno
pushf
aaa
xchg
ficomps
in
sub
int
mov
dec
imul
ljmp
inc
in
mov
pop
mov
out
push
idivl
add
push
dec
je
jle
xor
cmpsl
cmp
dec
dec
repnz
jmp
push
loop
add
xchg
add
jge
out
mov
add
jle
jl
xor
or
fnstcw
leave
jnp
les
sub
jae
jb
cwtl
fwait
mov
iret
xor
lret
jge
jns
into
cmpsl
aas
xlat
addl
mov
xor
cmpl
mov
cmp
sub
je
adc
cmp
or
in
add
imul
inc
or
or
pop
rcll
xlat
int3
dec
sti
xor
xchg
cmp
push
aaa
push
add
sub
femms
sub
ret
xchg
push
pusha
jg
scas
idivl
pusha
sbb
std
push
rcrb
xchg
cmp
lahf
aas
adc
mov
xor
imull
lcall
xchg
dec
std
jbe
gs
cwtl
hlt
xor
popf
mov
mov
xchg
add
mov
xchg
jnp
cmp
sub
ret
repz
dec
add
or
and
mov
outsb
das
xchg
scas
push
nop
cmp
mov
iret
and
rorb
pop
and
insl
mov
mov
add
cs
xor
shl
test
mov
mov
ret
lret
js
sub
mov
jg
xor
mov
push
stos
sub
adc
out
and
jg
int3
xchg
insb
push
pop
push
sub
mov
push
dec
incl
add
fdivp
push
inc
or
rcrl
cmp
inc
and
mov
pop
pop
dec
add
je
ja
cmc
push
iret
xor
mov
out
mov
xchg
xchg
xchg
dec
mov
and
push
adc
cs
add
sub
daa
or
into
cld
push
jns
jmp
insl
sbb
test
mov
insl
and
cmp
out
int
je
cmc
ss
inc
and
cmp
pop
xor
pop
dec
out
repnz
lahf
loope
std
testb
push
ficoml
aaa
iret
int3
out
ffree
movsb
jns
or
iret
aas
lds
pop
scas
jb
popa
test
sbb
push
movsl
idivb
scas
ja
aas
cmc
aam
xchg
fidivl
subl
test
not
cli
mov
xchg
mov
inc
stc
push
and
xorb
dec
xor
add
sbb
sub
jge
sub
negl
enter
push
sbbb
xchg
and
lds
mov
jecxz
adc
pop
adc
inc
pop
pop
inc
jns
or
enter
in
or
dec
call
movsl
mov
scas
push
cmp
out
insb
or
ds
and
inc
xchg
fistpll
movsl
inc
insl
in
xchg
clc
xchg
xor
js
mov
ljmp
xchg
clc
lds
jle
and
xchg
rolb
sarb
jg
ljmp
outsl
int
add
adc
outsl
pop
mov
cmpsl
or
inc
mov
je
sub
scas
pop
mov
roll
hlt
mov
or
fwait
std
push
push
testl
push
loopne
fxam
xchg
push
pop
mov
xor
push
ret
addr16
push
jecxz
mov
jl
shr
aad
int
xchg
mov
cli
icebp
or
popf
xor
jge
push
aas
ret
xor
cmp
ljmp
dec
dec
mov
and
movsb
sub
sbb
stc
loopne
cmp
lcall
and
or
pop
dec
sahf
lret
mov
jg
mov
add
lods
jg
decb
cmpsb
rcrl
mov
in
out
cmp
std
xchg
sbb
jae
push
test
mov
out
xchg
xor
outsb
frstor
xor
jecxz
test
jno
xor
cmp
jb
mov
xchg
jecxz
push
sub
jmp
adc
push
adc
cs
or
sbb
mov
int
in
fildll
lods
fldt
push
mov
int3
sbb
aam
sub
call
mov
jne
and
pop
lods
mov
or
and
pushf
mov
xor
dec
incl
mov
push
xchg
std
xor
cmpsb
icebp
sbb
outsb
push
xchg
inc
inc
dec
sti
inc
icebp
push
xchg
pop
jno
aad
xchg
shrl
or
pop
js
adc
scas
sub
inc
pop
movsl
fdivrl
mov
dec
ficoms
mov
fidivrs
inc
xor
inc
sub
push
mov
or
push
jb
rcr
or
scas
lock
adc
movsl
movsb
push
icebp
ret
mov
mulb
push
rcrb
fisubl
push
sub
mov
pop
adc
in
or
stc
xor
pop
mov
es
adc
shlb
xlat
sbb
mov
jmp
inc
scas
mov
xor
xchg
add
cli
add
mov
cmp
bound
and
in
loop
jb
pop
mov
inc
mov
xor
sub
sbb
xchg
aam
sub
std
rcrb
and
pop
dec
popf
lock
sub
mov
movsb
dec
sbb
mov
pop
sahf
jp
cld
xchg
push
out
fildll
xor
insl
push
adc
xchg
ja
push
fs
jecxz
sarb
xlat
pop
sbb
in
xchg
inc
cld
shll
loope
mov
xchg
jns
cs
imul
xchg
xchg
cmpsl
sahf
jecxz
sti
cli
sub
mov
dec
in
or
sti
or
xor
xchg
jno
lds
mov
pop
sub
xor
int3
jno
xor
cld
ja
push
jnp
lret
scas
rcl
sahf
xlat
rcrl
js
imul
fisubl
popa
mov
flds
mov
xchg
jns
sbb
pop
stc
ret
mov
sub
dec
xchg
xchg
xor
or
push
inc
xor
push
add
pop
aas
push
jae
ds
loopne
mov
daa
testl
std
sbb
jp
seto
sbb
inc
inc
add
xor
cli
cmp
xchg
sub
and
dec
inc
into
ja
shlb
int
and
pushl
sahf
pop
jp
bound
lret
add
jne
ret
and
call
in
push
inc
mov
stos
cmp
jmp
mov
adc
add
pop
and
sub
icebp
cwtl
das
stos
es
fisubrs
dec
cld
and
pop
cmp
sbb
or
icebp
and
mov
mov
and
dec
sub
cmp
add
push
loop
push
subb
fisubrl
sub
sbb
sub
mov
mov
adc
pop
cs
sbb
inc
mov
push
adc
aad
insb
push
popa
sbb
clc
dec
lods
jae
and
pop
lahf
test
test
xlat
push
ffree
out
ds
sub
add
mov
xchg
divl
pop
jnp
push
stos
inc
mov
jle
jae
jg
cld
pushf
out
sarb
cmp
shll
cmp
inc
call
adc
cld
sub
or
cmp
fcomp
xchg
dec
jns
fldl
out
add
lcall
jecxz
jnp
idivl
fldenv
inc
sbb
mov
mov
cmp
sub
cmp
inc
fsub
dec
inc
add
mov
ds
dec
jmp
inc
cmpsb
ret
inc
jl
mov
dec
mov
push
push
sbb
mov
xor
xlat
push
xorb
ds
dec
sbb
daa
dec
pop
cmp
jne
js
push
repnz
adc
xor
ret
xor
idivl
push
dec
xchg
push
jge
mov
adc
sub
jl
data16
cmp
hlt
dec
sbb
add
ret
cmc
sbb
imul
pop
out
es
shl
bound
pop
stc
xor
push
or
sbb
lock
orb
mov
into
scas
mov
jae
mov
mov
and
movsl
dec
not
inc
xchg
addl
mov
pop
jg
xchg
pop
mov
int3
addb
and
rol
xor
inc
inc
idivl
outsl
mov
xor
sub
lea
cwtl
push
lea
pop
pusha
push
movsb
in
loopne
incl
addr16
or
mov
mov
int
dec
xor
pop
pop
ds
pop
cltd
les
mov
leave
loop
je
ljmp
mov
adc
clc
mov
adc
cmp
cmpsb
ss
cltd
out
cmpb
icebp
sbb
das
stos
jge
imul
sub
repz
and
out
popa
int
mov
sbb
sbb
imul
push
xor
mov
xchg
and
cmpsl
sahf
mov
ds
je
nop
outsb
xchg
sahf
aas
mov
pop
sub
adc
ret
ljmp
fsts
push
mov
mov
out
xchg
pop
pusha
imul
js
and
xor
jne
loope
idivl
mov
lods
and
dec
dec
push
mov
pop
rcl
mov
addr16
xchg
push
repz
mov
shrb
std
adc
aad
loope
dec
int3
in
push
hlt
adc
push
repnz
fnstenv
cwtl
fbld
mov
pop
jb
cli
outsb
arpl
jg
xor
xor
push
add
jne
mov
lahf
inc
add
jae
imul
imul
jae
cmp
mov
mov
xor
mov
dec
inc
xchg
lcall
sub
xchg
push
adc
mov
in
mov
cs
scas
shl
dec
mov
idivb
adc
int3
pop
adc
cld
test
loop
adc
repz
adc
sti
mov
lahf
pop
adc
mov
loopne
adc
fstpl
bnd
xor
enter
add
cmp
jl
insl
xchg
repz
pushf
pop
insl
or
cmp
js
pop
pop
or
jmp
es
add
xor
mov
jge
popf
dec
outsl
xlat
push
xor
aas
mov
add
pop
or
inc
mov
or
pop
inc
adc
mov
adc
sub
test
lock
cltd
or
mov
and
test
sub
mov
xor
lcall
stos
fwait
loope
in
xor
push
pop
decl
dec
add
mov
xchg
jmp
daa
mov
xor
nop
adc
cwtl
cmp
dec
mov
mov
mov
mov
das
mov
pop
mov
lret
lret
outsl
xor
dec
and
dec
jnp
stos
sbb
inc
mov
nop
xchg
mov
sub
je
or
add
jmp
cmpsl
test
arpl
leave
stc
push
inc
mov
and
repnz
adcb
js
enter
add
mov
lods
stos
sub
mov
clc
jecxz
mov
mov
out
pop
mov
push
jle
push
xor
push
out
cli
and
aaa
lods
bound
xor
pop
add
or
clc
inc
stc
inc
xchg
subb
pop
les
call
pop
mov
pop
int3
mov
xchg
inc
enter
int3
add
mov
inc
into
fstpt
add
cli
fdivrl
and
jae
shl
into
or
adc
leave
jmp
dec
cwtl
stos
arpl
jecxz
mov
add
rcll
int3
shl
or
call
xchg
add
rorb
mov
pop
or
add
dec
ja
mov
andb
xchg
nop
daa
pop
aad
notw
out
loop
insl
data16
mov
ss
cli
imul
subb
pop
lahf
jb
mov
mov
test
ret
mov
fistps
and
int
into
fiadds
add
mov
je
sbb
jmp
xor
stos
es
fnstcw
popa
mov
adc
sub
jmp
cmpsl
addb
mov
subl
adc
xchg
jg
mov
sub
cmpb
popa
pop
mov
inc
sbb
mov
mov
pop
lahf
cmp
mov
aam
xor
xor
cmpsb
shlb
shl
inc
mov
push
dec
fistpll
addb
mov
syscall
or
push
sub
hlt
lret
inc
push
or
std
jle
lret
aad
sar
sbbb
shlb
scas
lret
and
iret
std
iret
data16
jg
mov
pop
lret
mov
lods
jns
sub
rorl
cmp
xchg
or
mov
test
xchg
xlat
cmp
mov
shll
add
adc
mov
push
and
mov
int
iret
or
ds
dec
jae
jg
fwait
mov
dec
loop
fdivs
mov
and
hlt
jo
jns
aam
inc
jp
dec
xchg
lods
loop
repz
notl
sub
mov
add
outsl
sbb
xchg
mov
aaa
push
xorb
ljmp
pop
jae
inc
lods
aaa
mov
mov
pop
int3
call
pop
loop
cmc
xchg
cmp
cmp
mov
mov
ja
or
mov
push
daa
rcrl
shrb
push
inc
mov
sub
jo
addr16
jp
add
fs
inc
mov
xchg
in
pop
inc
repnz
out
jno
daa
mov
dec
icebp
jbe
add
inc
inc
sub
ds
leave
rcl
jge
call
sbbl
jb
je
adc
in
dec
mov
les
popf
out
or
lods
insl
lea
mov
fnsave
std
cltd
fdivrl
cld
daa
xchg
or
pop
sub
mov
cmp
adc
sbb
sub
cmp
adc
xchg
xchg
in
sahf
mov
add
pop
sub
jp
scas
das
cs
repnz
xor
cltd
jmp
adc
addr16
aaa
js
out
mov
push
sub
mov
sbb
xchg
lret
inc
in
aam
add
dec
fidivrs
fucompp
scas
ja
cmp
loopne
ret
xor
bound
std
cmc
or
xor
sahf
add
inc
add
mov
in
test
imulb
push
fwait
pop
sbb
cltd
repnz
inc
push
xchg
jl
xor
adc
aaa
daa
pop
lods
dec
push
ret
sub
mov
mov
ret
test
lahf
insb
pop
in
fistps
into
pop
scas
mov
jmp
lret
shrl
dec
repnz
pop
adcb
inc
fisubl
iret
push
iret
lcall
aaa
mov
lcall
pop
push
or
rorl
std
xor
lahf
inc
sbb
sbb
inc
sub
and
pop
or
mov
xor
imul
mov
out
adc
or
push
cmp
or
cmp
test
push
xor
lcall
scas
xchg
cld
xchg
in
cmc
in
mov
xor
into
mov
mov
repnz
popf
roll
js
jbe
xor
dec
sbb
dec
cmp
mov
loopne
faddl
nop
fisttpll
inc
mov
ja
cmp
xchg
and
mov
xchg
mov
hlt
or
repz
push
ror
mov
and
add
mov
push
add
sub
jns
cmp
fwait
sbb
js
adcl
pop
push
adc
xchg
ss
jge
fisubs
test
lods
adc
mul
add
ljmp
insl
mov
rorb
lods
out
mov
jecxz
pop
lods
mov
mov
aam
fldenv
sub
rorl
jg
sub
sub
xor
fdivl
add
xor
mov
arpl
xchg
mov
pusha
outsb
cmp
sub
loopne
pop
add
lret
push
pop
lods
fs
mov
push
fwait
out
shll
andl
mov
cmp
lods
pop
sbb
shlb
cltd
adc
popa
inc
popf
mov
cmp
std
das
enter
cs
out
sarl
imul
cmp
call
test
outsl
adc
mov
jne
jnp
in
fildll
loop
mov
test
fnstenv
add
mov
cmp
mov
mov
cmp
lock
enter
push
xorl
adc
or
fwait
mov
stc
dec
std
aaa
and
mov
dec
imul
fs
mov
cld
xorl
lahf
rol
cmp
xchg
mov
and
pop
shll
jae
clc
add
adc
mov
pusha
enter
mov
cmpsb
dec
and
push
dec
aad
fldt
add
jno
jb
xchg
xor
or
cs
add
in
sub
clc
pop
lods
movsb
aam
add
push
ja
fs
pushf
jae
mov
iret
push
mov
cmp
pop
psraw
movsl
and
lahf
xchg
pushl
push
fcomps
popf
std
pop
test
movsb
dec
xchg
movsl
ds
fildl
insb
jne
fs
mov
cmp
les
mov
dec
mov
lret
mov
push
or
ljmp
jle
movsl
stos
sbbb
inc
jg
loop
decb
arpl
ds
test
pop
movsl
movsl
insl
int3
pop
dec
mov
sub
ss
xor
adcb
jmp
jns
mov
cmp
lock
scas
in
push
mov
test
sub
pop
mov
adc
xor
shll
out
or
sbb
jb
push
pop
sub
push
push
out
jge
add
push
or
gs
stos
std
lahf
bound
dec
loope
adc
sbb
out
or
icebp
dec
sbb
sti
mov
xchg
repnz
test
stos
dec
cmp
push
cmp
es
xchg
xchg
cwtl
cmpl
add
popf
mov
and
adc
or
mov
loopne
sbb
and
sbb
jne
push
cli
sub
insb
adc
sub
fcomps
pop
pop
push
sahf
fstps
adc
arpl
repnz
xor
adc
gs
loop
test
add
adc
fnstcw
lods
sub
and
sti
xchg
push
movsb
mov
loop
mov
and
xchg
ficoml
stc
push
sbb
out
loope
int3
push
pop
aad
pusha
data16
gs
mov
mov
pushf
repnz
sub
jae
in
sarb
jge
add
lds
mov
fs
stc
arpl
sbb
xor
sbb
fwait
jg
nop
or
xlat
fdivrp
out
jnp
lcall
clc
cld
mov
cmc
cmp
and
and
cmpsb
xor
mov
imul
xor
dec
cmp
fadds
mov
xlat
sbb
shl
lock
xor
scas
mov
icebp
and
cmpsl
dec
xchg
cmp
mov
outsb
mov
add
fldenv
into
add
push
aaa
jo
push
int3
push
mov
mov
or
cmp
mov
sub
outsb
adc
or
or
lds
sbb
ret
mov
cmp
fldenv
loopne
pop
fidivl
ss
or
adc
push
xor
cltd
int
push
imulb
add
jns
cmc
or
push
cmp
sub
xchg
mov
mov
xorl
mov
xchg
or
xor
je
mov
inc
mov
popa
std
and
jge
jo
cmp
inc
repz
push
cltd
xchg
sbb
jg
mov
pusha
popf
jmp
mov
aam
fwait
pushf
mov
popf
push
sbb
xchg
out
shll
mov
xchg
sub
mov
cmp
stc
arpl
gs
pusha
jle
imul
mov
and
insl
push
daa
cmp
sub
daa
adc
mov
shll
fbstp
iret
jns
popf
push
in
sub
icebp
sbb
ds
mov
push
out
js
testb
inc
or
jmp
pop
filds
lea
lcall
testl
wbinvd
iret
push
xchg
and
sti
sub
clc
cltd
and
dec
inc
fyl2x
repz
ds
mov
and
push
pop
enterw
mov
fldenv
mov
jl
add
xor
cs
sbb
mov
lds
mov
push
inc
ja
mov
adc
jbe
inc
pop
mov
xchg
cmc
pushf
lcall
mov
sbb
fs
mov
jns
sub
jge
push
divps
push
rcl
ret
xchg
add
sbb
outsl
xor
loop
cmpsb
lahf
mov
jl
inc
ss
adc
ret
addb
jl
or
retw
pop
mov
xchg
sahf
push
xchg
xchg
scas
or
and
pop
in
cmpsb
pop
dec
add
cmp
cld
mov
add
mov
cmpsl
fimuls
pop
jae
andl
mul
aam
mov
sbb
xchg
cwtl
stos
scas
dec
jae,pt
jnp
cwtl
mov
sub
data16
stos
or
xchg
je
adc
mul
popf
out
mov
hlt
xor
lahf
mov
and
loope
cmp
jp
or
cld
and
mov
mov
jb
shr
mov
adc
xchg
loop
mov
mov
out
arpl
out
push
iret
sub
ds
xchg
mov
ret
and
add
xlat
fwait
mov
adc
adc
addr16
ljmp
outsl
out
shlb
bnd
rclb
jbe
sbb
aaa
rcrb
adc
lcall
ds
sbb
mov
sbb
add
lret
push
inc
or
pop
je
or
sub
adc
test
mov
dec
mov
mov
xor
nop
cld
lds
jmp
test
popf
nop
add
repz
xchg
mov
cli
jmp
lods
xchg
sbb
aas
push
mov
stos
fptan
mov
data16
mov
loope
negl
and
cmpsl
mov
cmpsb
push
or
scas
clc
push
popa
fcomps
sldt
arpl
loope
mov
pop
dec
xor
fstps
shl
and
fldcw
dec
scas
enter
mov
into
aad
mov
in
dec
jmp
aam
gs
lahf
sbb
js
adc
aad
mov
or
mov
sarl
inc
mov
and
and
mov
jb
jmp
xchg
sbb
adc
pop
mov
mov
jecxz
add
fs
mov
adc
jno
out
dec
jae
test
lods
adc
adc
push
addl
pop
movsb
jmp
pop
sub
test
pop
fwait
daa
popf
xor
pop
dec
movl
mov
cmpsb
bound
dec
or
adc
cmp
jno
mov
sbb
icebp
fstpl
loopne
xlat
dec
and
iret
inc
xchg
cmp
push
aas
dec
sahf
je
adc
and
xchg
sahf
outsb
push
push
adc
mov
jg
movl
xor
adcl
mov
addr16
loop
shll
fwait
aad
pop
sbb
pop
ret
into
pop
out
fistl
push
xor
scas
pop
sub
mov
push
adc
imul
pop
mov
mov
insb
push
int
mov
packuswb
xor
int3
mov
and
idivb
sub
in
jne
sbb
rclb
andb
mov
aas
sbb
bound
add
enter
dec
dec
xorb
sbb
out
jne
xchg
jg
jg
mov
mov
ja
xchg
pop
push
mov
ficompl
dec
lock
xor
push
cmc
aam
sub
repnz
and
jge
roll
stos
sub
mov
shl
mov
popa
mov
lock
mov
adc
sub
aam
sbb
add
inc
adc
mov
ret
jo
pop
jmp
and
in
stos
daa
pop
fsubrl
jecxz
aam
mov
es
sbb
cmpl
outsb
pop
clc
fwait
dec
sbb
dec
inc
cmp
mov
popa
sbb
jae
lcall
jne
iret
hlt
shrl
ss
xor
push
pop
xchg
or
jnp
add
or
sbb
jnp
xchg
xor
sti
loopne
orb
xor
mov
or
mov
cmp
ljmp
fucom
loope
iret
pusha
adc
les
bound
mov
pop
aad
cmc
insb
std
into
xchg
std
xchg
and
stos
int
pop
add
das
clc
xlat
jecxz
stos
push
loop
cmc
fstp
inc
arpl
or
mov
sbb
mov
mov
arpl
cmp
and
sbb
lods
jmp
cwtl
lea
int
outsb
xor
hlt
shl
int3
dec
imul
sub
dec
ds
push
es
pushf
shrl
mov
push
add
cli
and
fisubrs
lahf
push
fcoml
xor
pop
call
fisttpll
js
popa
pop
adc
dec
ds
cwtl
xlat
hlt
out
popa
push
pop
push
ret
xchg
rorl
mov
repz
out
popf
or
ds
ficomps
ffree
mov
inc
xchg
dec
popa
mov
fstpt
and
xor
dec
jbe
cwtl
ja
loope
xchg
cmp
fwait
rorl
test
in
mov
rclb
sbb
cmp
daa
lahf
fsubp
add
pop
fprem1
push
mov
pop
xchg
cmp
popa
sub
pushf
nop
xchg
dec
divl
scas
push
dec
pop
in
push
ficoml
xchg
adc
xchg
mov
out
and
cmp
movsl
xchg
pop
icebp
push
mov
int
jge
mov
shrb
or
test
jecxz
xchg
mov
sbb
popa
pop
icebp
clc
push
ss
popl
aas
repnz
or
or
pop
inc
pop
imul
cs
sbb
sarb
insb
push
imulb
mov
leave
push
aad
add
jae
out
daa
cmpsb
add
inc
pop
mov
xor
popf
or
mov
or
mov
mov
jne
adc
add
pushf
adc
sbb
aad
ljmp
cmp
out
mov
cmp
test
orb
sbb
add
jg
test
jno
loope
test
shll
aam
xchg
mov
imul
jg
fsubrp
push
testb
pop
aas
fcmovbe
das
es
mov
and
adc
or
push
mov
ljmp
and
movb
cmp
pop
sub
cmpsb
dec
loope
adc
ja
or
js
into
in
jnp
lea
fdivs
test
or
jp
int
push
enter
pop
and
pop
int3
push
push
push
fcmovne
pop
es
int3
jno
fbld
or
inc
jns
pop
xor
or
test
mov
and
popf
mov
orl
pop
aaa
sub
fstps
xor
dec
imul
in
cltd
bnd
push
xor
xor
add
outsl
xor
stos
repnz
imul
in
xchg
or
nop
inc
es
push
fisttpl
fnsave
adc
add
out
stos
rclb
push
cmp
enter
aaa
xchg
mov
pop
in
jo
sbb
scas
test
mov
cmpsb
int3
imul
mov
bound
pop
dec
fcomps
jae
pop
add
neg
fdivs
cs
dec
fs
sahf
adc
test
xor
mov
jnp
xchg
rcrl
mov
push
loopne
imul
jo
cmp
popf
add
aaa
lock
mov
mov
fs
mov
popf
push
jle
mov
mov
repnz
push
les
sub
mov
pop
mov
data16
test
dec
mov
neg
jb
outsl
push
fstps
xor
pop
and
jecxz
sub
test
stos
ret
sbb
add
mov
jp
add
add
xor
jbe
ret
mov
mov
mov
dec
mov
fwait
stos
add
mov
ret
lfs
jae
sub
fildll
inc
pop
or
push
dec
or
aaa
out
aad
inc
scas
sbb
dec
inc
xor
jge
mov
mov
inc
push
jo
shll
test
ja
inc
out
repz
inc
loope
out
xor
lea
or
ss
adc
cltd
or
pop
test
xchg
sub
mov
fstl
mov
mov
ljmp
cmpsb
aam
or
loopne
push
or
push
fisttpl
adcl
pop
jns
jmp
mov
or
mov
test
and
push
push
xor
movsb
jno
sbb
mov
and
pop
inc
cmp
xor
cld
xor
mov
mov
xor
push
or
fs
mov
sti
sti
pop
inc
jle
push
pusha
push
aas
jae
lds
adcl
cmp
incl
fsts
outsb
mov
stc
test
mov
lea
pop
out
ja
rclb
add
xchg
push
pop
es
dec
es
imul
out
das
rorl
test
or
ja
pop
test
and
dec
pop
fnstsw
mov
les
sti
jle
jge
inc
and
sub
or
and
push
jne
add
push
call
push
mov
sbbl
dec
repnz
je
insl
rol
ret
testl
pop
mov
addr16
leave
pop
pop
sbb
test
jo
pop
lret
adc
call
push
cmpl
mov
jg
adc
fnstcw
jmp
insl
outsb
out
sub
push
or
pop
mov
cmp
xchg
out
outsb
clc
test
repnz
dec
sbb
jae
js
mov
cmpsb
push
mov
mov
jp
mov
and
decl
out
jb
xor
dec
mov
jno
mov
sahf
mov
xor
cmpsb
adc
ljmp
and
push
out
movsl
cmc
outsl
popa
pop
rorb
pop
xchg
sbb
out
pop
xchg
or
xor
cmpsb
inc
test
xor
out
ds
rcrl
sbb
ret
fstps
movsl
jg
outsl
or
push
inc
ficoms
inc
xchg
adc
in
pop
mov
mov
sub
cwtl
jp
mov
divl
xor
leave
imul
adc
jp
dec
mov
outsl
jmp
rcl
or
movsb
sub
inc
fs
and
mov
les
jnp
add
mov
pop
xchg
movl
dec
mov
adc
outsb
div
pop
sbb
imulb
scas
dec
out
dec
mov
je
rolb
xor
dec
xlat
pop
nop
adc
add
cmp
push
xlat
push
or
nop
bound
inc
dec
repz
test
jecxz
lock
dec
enter
jmp
jl
in
lret
cli
clc
jns
xor
cmp
negb
std
mov
push
dec
pushf
xchg
or
sti
arpl
add
sub
loopne
push
cmpsl
int3
jp
cmp
repz
pushf
or
mov
mov
mov
cmpsb
fldenv
les
insb
test
push
call
xor
stos
adc
pop
iret
lret
fiaddl
jmp
inc
xchg
loop
push
jnp
outsb
loop
in
push
pop
sbb
xchg
lea
adc
xlat
into
adc
aad
dec
adcb
push
pop
or
add
sti
js
stos
jle
mov
mov
movlps
mov
push
jo
rcrb
in
adc
leave
mov
mov
fisubs
dec
mov
adc
cmp
int3
cmp
pop
shlb
shlb
dec
stos
jbe
xchg
pusha
lds
pop
and
inc
mov
jmp
mov
push
daa
mov
sahf
daa
mov
loop
xchg
ret
cltd
stc
xorl
ret
ss
xchg
push
nop
dec
or
dec
mov
ficomps
leave
popa
push
clc
xor
cmp
pop
cmp
inc
dec
in
loopne
pop
lret
cmp
rclb
in
jno
dec
pop
ret
and
sub
xchg
adc
jle
mov
push
mov
or
push
pop
jae
test
pop
iret
adc
mov
xor
aad
ja
sub
mov
pop
idivb
or
in
cmpsb
dec
dec
or
inc
imul
std
fcoml
jecxz
inc
sub
lds
push
call
ds
xor
sub
stos
bound
or
jae
mov
aaa
test
mov
xchg
jg
pop
fisubrl
xor
jno
dec
add
pop
in
pusha
jge
jmp
or
lds
lock
gs
mov
dec
aam
add
cmp
xchg
adc
cmp
enter
and
dec
xchg
in
inc
cmp
fldl
xor
imul
lret
mov
jne
leave
xchg
jge
enter
lret
dec
mov
or
mov
dec
mov
jo
es
shrl
mov
fildll
insl
mov
xorps
push
in
pop
fnstenv
subb
lock
push
push
jbe
sub
mov
or
mov
push
pop
out
into
in
sti
sub
dec
repnz
in
das
arpl
lock
daa
jae
mov
mov
xorl
or
pop
stos
ljmp
add
test
mov
jo
jnp
std
repz
cmpsl
mov
arpl
pop
fmul
cmpsb
fistpll
push
in
push
pcmpeqw
mov
icebp
mov
dec
mov
clc
ds
add
pop
in
in
mov
bound
xchg
adc
repz
inc
xchg
jbe
jecxz
cwtl
movsb
ret
dec
dec
lcall
and
ljmp
cmpsl
pop
mov
mov
add
sarl
push
mov
cmpsl
fstpl
jbe
insb
rorl
scas
sub
bound
fcoml
xchg
es
mov
js
lcall
test
stos
or
jb
jmp
call
and
mov
jbe
and
cmpb
cmc
nop
jne
xchg
jne
jecxz
cli
jo
mov
test
mov
fsub
lods
or
in
repnz
test
repnz
packuswb
cmc
mov
mov
enter
in
jnp
fsubp
repz
sbb
cmp
mov
jno
andb
adc
stos
outsl
pushfw
dec
mov
je
push
mov
jns
pushf
outsl
mov
loop
es
iret
xor
xorl
mov
cmc
std
and
dec
pop
push
lds
jne
clc
fwait
mov
lock
out
adc
inc
dec
cs
push
insb
xor
jmp
inc
movsb
sub
iret
xor
aad
je
dec
lock
sbb
sub
inc
adc
xchg
cmpsl
adc
mov
fists
mov
fmul
ds
movsl
stos
and
sbb
out
movsb
mov
dec
or
aad
inc
push
cmp
shrb
pop
test
jo
fcomps
mov
mov
mov
into
addr16
fisubrs
or
lcall
jmp
cmp
adc
out
outsb
jbe
jmp
xchg
clc
lcall
loop
repz
or
out
lods
xchg
enter
inc
mov
push
inc
add
add
dec
scas
mov
icebp
test
dec
mov
cltd
pop
aas
xchg
mov
pop
jge
mulb
mov
out
xchg
hlt
push
xchg
hlt
dec
in
add
test
cmpsb
movsl
pop
jl
pop
pushf
inc
sti
mov
fs
insb
add
xlat
push
xor
test
enter
stc
mov
adc
mov
pop
push
fidivrl
sbb
and
loope
push
sub
sub
in
mov
push
push
outsb
or
and
call
nop
pop
xor
and
mov
ret
js
xchg
jecxz
cmpsb
mov
pop
or
sti
pop
lds
ret
pop
mov
dec
stc
lret
cmp
mov
xor
sub
mov
fwait
mov
and
hlt
fs
inc
pop
clc
aad
pop
inc
je
cli
test
repnz
and
ja
inc
repz
adc
xchg
aas
negl
jno
mov
rcrb
ljmp
fsubl
fcoml
pop
mov
jno
jno
jo
js
cwtl
add
pop
jle
imull
icebp
adc
mov
sti
jecxz
setnp
adc
cmc
xor
and
dec
leave
jle
cmp
push
cmpsb
outsl
push
pusha
mov
pop
or
lods
push
js
push
jns
std
sub
mov
jns
leave
outsl
add
jnp
fbld
int
inc
in
push
adc
nop
mov
imul
out
or
mov
push
icebp
adc
ds
notb
adc
xchg
js
jo
xchg
leave
adc
in
daa
cmp
push
sub
jns
loopne
push
pop
dec
pop
pop
adc
dec
lcall
xchg
repz
clc
pop
daa
or
cs
neg
aam
cmp
bound
and
push
in
ds
scas
lods
imul
inc
cmp
enter
mov
or
pop
int
mov
leave
mov
jp
dec
decb
aaa
call
jg
xchg
adc
stc
xchg
jle
mov
xlat
xchg
add
je
sub
movsb
pop
lcall
cmp
or
aad
dec
test
es
fldcw
fistps
icebp
mov
out
mov
repz
cwtl
push
ret
loope
adc
xchg
out
xchg
ss
inc
xchg
dec
dec
and
mov
dec
or
xor
and
jle
stos
mov
and
cmp
and
xor
lahf
into
cld
pop
push
andb
inc
push
mov
cmpsb
fsts
sbb
add
pop
add
fwait
fwait
push
mov
in
jns
push
push
popa
jae
dec
cli
jg
xor
and
add
cltd
cmp
test
jp
ss
aam
out
mov
ret
fsubs
dec
je
es
jl
je
cli
bound
pop
stos
enter
xchg
fsubs
addr16
clc
rorl
je
sbb
adc
sub
jae
lret
mov
sub
stos
add
mov
fs
fstpt
jbe
ja
mov
inc
or
or
mov
dec
inc
mov
test
iret
sbb
jp,pn
cmp
pop
jbe
shlb
dec
add
sub
push
sbb
pop
pop
pop
jae
sbb
je
xlat
je
jge
cmp
cmp
inc
lds
cmp
jno
sbb
and
dec
gs
dec
in
sbb
mov
nop
aad
cmpxchg
test
fsubrl
inc
loop
popl
sub
mov
ds
mov
hlt
jns
xor
sub
rorb
loopne
xchg
cmp
jne
push
repz
jmp
arpl
ss
inc
stos
push
inc
push
cltd
cli
sub
pop
cmp
negb
addr16
jge
aas
jl
mov
and
pop
add
jl
std
and
fcoml
in
mov
and
ja
mov
ficoml
mov
imul
pmulhw
or
ret
adc
mov
sub
cld
sti
aaa
sahf
pop
inc
scas
pop
mov
scas
jbe
and
lret
jo
es
adc
pop
in
adc
xchg
divb
nop
dec
in
sub
xchg
insl
jge
outsb
loop
push
ret
arpl
pop
psllw
sbb
sub
icebp
jmp
add
or
loope
mov
mov
adc
cld
jp
loop
add
cmp
or
out
mov
adc
repz
adc
insb
out
fwait
add
daa
sbb
popl
lcall
fisubl
xchg
fdivs
iret
rorl
lock
sbb
iret
xor
test
repz
adc
pop
cwtl
jne
adc
mov
xchg
push
outsb
movsb
mov
clc
fnsave
add
push
bound
pusha
cmpsl
enter
bound
je
ret
lahf
xor
or
mov
jecxz
jno
sub
test
rol
mov
push
xor
fstpl
ret
xchg
mov
inc
mov
xchg
pushf
xchg
imul
or
jmp
arpl
imul
pop
sti
ja
cmp
out
pop
cmp
shl
insb
into
jns
sarw
add
or
cltd
adc
sub
or
mov
add
fwait
or
or
jge
hlt
jmp
mulb
push
mov
sub
rol
out
ss
sti
jno
jnp
pop
xchg
adc
push
in
scas
jno
sbb
repz
sbb
mov
inc
movsb
flds
and
pop
inc
in
jb
push
push
jmp
mov
inc
scas
fmull
dec
mov
jmp
in
or
cld
sbb
adc
mov
sub
inc
daa
mov
inc
and
sub
movsb
in
xchg
and
test
add
mov
add
dec
imul
mov
adc
mov
sarl
daa
push
inc
adc
jmp
scas
inc
decl
fs
ficomps
push
pushf
mov
scas
mov
mov
or
push
add
test
xchg
jbe
mov
jns
insl
mov
iret
xchg
ss
pop
sub
daa
mov
out
stos
pushf
lock
adc
mov
push
mov
je
jae,pt
jl
mov
sbb
add
jg
sbb
sub
push
xor
cmpsb
adc
and
gs
insl
lock
sub
mov
lahf
fs
lea
and
daa
call
pop
pop
shll
inc
enter
ficoms
xchg
mov
sbb
mov
cli
in
and
cmc
mov
repz
aas
mov
mov
cmp
int
hlt
push
sub
mov
inc
pop
sub
imul
adc
pop
aas
mov
aaa
jbe
xchg
xor
out
lret
mov
adcl
jnp
dec
roll
ljmp
inc
pop
dec
mov
mov
xor
nop
mov
outsb
jle
pop
mov
imul
adc
mov
mov
lods
dec
popa
xchg
scas
stc
popf
inc
push
pusha
mov
or
mull
hlt
sbb
push
aaa
fsubrl
arpl
sti
cli
jmp
in
mov
sbb
pop
hlt
pop
mov
and
icebp
pop
gs
dec
aas
inc
out
mov
mov
test
mov
aam
xchg
hlt
je
inc
aam
in
lahf
push
lcall
pop
or
pop
shl
das
adc
lds
fs
xorl
adc
and
ficoms
adc
jg
cltd
pop
cmp
xor
xor
pop
aas
dec
cmp
pop
outsl
xchg
test
rorb
or
test
dec
pusha
dec
ret
repnz
dec
cs
adc
xor
inc
lods
mov
bound
and
fiadds
loope
jnp
popa
pushf
or
jl
adc
ds
xchg
push
and
or
std
sub
arpl
and
inc
mov
and
sub
mov
mov
add
xor
sub
push
or
pcmpgtb
jg
mov
jmp
pop
mov
jbe
jbe
dec
jb
loopne
jge
loopne
cli
fisubrl
cmp
aad
int3
jmp
shrb
dec
insl
fsub
mov
das
fcompl
xchg
sub
cmp
sti
arpl
xor
nop
push
mov
dec
cli
vmaxss
ficomps
bound
mov
inc
sub
add
or
jnp
stos
jb
dec
mov
mov
mov
stc
and
xlat
roll
pop
cmpsl
cmpb
sbb
scas
sub
dec
pop
int
mov
outsl
inc
fcoms
inc
aam
cltd
xor
inc
or
adc
sbb
jno
fs
in
jne
aas
lock
out
xchg
into
addb
push
sbb
sbb
dec
cmpl
rcrb
loopne
lcall
xchg
leave
shlb
push
mov
pop
pop
pusha
lock
cmp
cmc
mov
and
rclb
aaa
scas
int
pusha
scas
jle
je
outsb
cmp
frstor
in
push
or
lret
repnz
out
or
cmp
in
jl
out
mov
mov
lcall
int
pop
nop
stc
dec
jne
imul
xor
data16
add
push
ficoms
xor
mov
mov
repnz
aas
dec
jge
dec
lea
jns
lods
mov
in
mov
mov
ror
stos
cltd
inc
stos
mov
out
or
sbb
xchg
subl
push
lods
enter
stc
sbb
fcomp
and
cltd
out
cmp
push
mov
insl
or
jge
or
aaa
mov
xor
negb
dec
pop
sub
sub
push
dec
xchg
mov
lret
jno
adc
xor
cmp
sbb
ficompl
ret
loopne
xor
push
idiv
adc
sbb
xor
sbb
add
inc
xor
lret
or
pop
mov
jle
cld
jge
pop
fwait
rol
pop
pop
cmpsb
inc
sub
or
fsubs
or
or
test
inc
aas
xchg
pop
sub
pop
lahf
ret
or
enter
movsl
inc
push
dec
mov
jge
js
dec
popa
dec
or
xchg
arpl
mov
sub
dec
inc
loope
cmc
or
loope
test
push
pop
dec
stc
add
aaa
adc
adc
and
mov
sti
sub
push
xor
aam
gs
mov
stos
stos
adc
repnz
cmp
sbb
mov
fidivs
dec
sar
xor
mov
fwait
or
push
shrb
out
pop
xor
jbe
jb,pn
int
sub
push
mov
cmc
add
push
mov
fildl
push
fs
nop
and
push
mov
dec
pop
jno
loopne
dec
or
dec
lret
inc
inc
mov
xchg
inc
and
mov
ja
cwtl
ljmp
test
cmp
inc
xchg
dec
mov
inc
adc
jg
cmp
pusha
xor
or
shlb
sub
sti
sub
pop
push
sbb
notl
insb
jle
fs
xor
mov
cmp
test
fmuls
imul
imul
pusha
sbb
adc
xchg
pop
sbb
sti
jb
arpl
sti
dec
in
mov
mov
add
test
rcll
lea
icebp
xchg
push
push
les
jl
ret
or
xchg
pop
xor
jb
adc
and
call
cmp
adc
repz
loopne
rclb
ds
mov
dec
push
xchg
call
add
inc
fs
or
push
scas
mov
push
mov
shl
jb
push
cmp
mov
push
stos
mov
and
pusha
jne
mov
dec
imul
aad
jmp
popa
cld
int3
push
jg
or
and
mov
sub
and
roll
mov
xchg
cld
cmp
inc
vmptrst
xor
loope
or
lea
inc
cmp
cmc
faddl
xor
jbe
sbb
xlat
imul
pop
jge
inc
imul
sbb
xor
xor
stos
clc
xchg
fildll
lods
mov
mov
out
sbb
out
rcll
mov
sbb
movsb
or
push
inc
xchg
ficoms
mov
dec
pushf
je
testl
or
xor
xchg
mov
jb
push
fsubrs
dec
xor
lret
mov
in
test
cs
lahf
lea
imul
or
mov
out
pushl
xchg
adc
mov
add
add
jo
aaa
gs
push
stos
jne
test
int3
ret
xchg
bound
clc
xor
pop
push
sub
not
sbb
pop
jmp
xor
mov
adc
cs
mov
add
dec
push
pushf
mov
daa
adc
xchg
adc
repnz
push
jl
imul
lahf
lock
cmp
aaa
cmp
xchg
mov
xchg
sarb
push
ljmp
ret
jmp
mov
cmp
push
mov
xchg
scas
or
xchg
fs
sub
jmp
repz
ja
bound
addr16
aam
sub
hlt
push
repz
mov
cmp
addl
jle
rorb
mov
mov
lock
sub
rcr
cli
stos
push
push
cltd
int3
and
test
mov
fwait
gs
pop
add
xor
add
sub
push
pop
ds
mov
jp
cmc
pop
dec
stos
jl
fisubs
inc
sbb
sbb
xor
daa
push
pop
lcall
rcl
push
mov
mov
or
pop
sti
push
xor
pop
cmpsl
push
fs
fsubp
call
pop
inc
addr16
push
adc
jnp
mov
xchg
mov
in
dec
stc
ds
repz
or
loopne
xorb
out
jmp
mov
pop
sbb
push
cmp
dec
mov
nop
imul
stc
flds
fsubl
into
cmp
vminsd
xchg
jb
test
in
or
rolb
and
imul
mov
aam
ss
scas
jp
inc
pop
cmp
insb
leave
fmuls
int3
mov
shrl
inc
dec
push
adc
int3
out
adc
mov
push
xor
mov
hlt
pop
sbb
add
push
sbb
mov
mov
decb
psrad
popf
push
ja
jmp
push
sti
pop
lds
fistps
je
cmp
add
sbb
sbb
fdivrs
insb
test
scas
in
xchg
xchg
cmc
pop
outsb
dec
xchg
sbb
and
subl
cmp
shrl
fimuls
loopne
and
add
fsub
fsubrl
jns
jo
test
inc
push
lods
xor
stos
inc
xchg
xchg
mov
xor
inc
mov
fnstenv
popa
gs
cmp
add
cmp
es
push
pushf
aam
jne
stc
sbbl
mov
sbb
cwtl
inc
add
subb
mov
in
dec
shrb
stos
cmpsb
jle
push
daa
mov
popa
loop
push
sub
mov
pop
repz
dec
enter
sub
popf
or
ds
ja
out
mov
sti
xchg
mov
rorb
or
ljmp
add
or
mov
push
in
enter
cmp
push
dec
loop
xchg
dec
insl
xlat
shlb
adc
setne
shlb
pop
lea
dec
rolb
bound
popf
mov
xor
jg
int3
pop
xor
sub
xchg
int3
or
push
ljmp
mov
pop
adc
jge
roll
and
addr16
in
stos
mov
and
and
mov
scas
pop
add
out
dec
pop
mov
adc
adc
test
jbe
or
in
pop
testb
add
loopne
pusha
inc
repz
mov
outsl
and
fisubrs
mov
stc
mov
jbe
ror
adc
cwtl
sub
pop
icebp
fstpt
ret
dec
inc
lahf
push
movups
and
icebp
inc
loope
mov
lret
aad
push
pop
mov
out
mov
fsubrl
inc
jmp
mov
fnstcw
test
and
dec
inc
cmp
xchg
je
in
xchg
rcl
mov
rcrl
icebp
inc
int
cmp
int
pop
ljmp
stos
dec
pop
sbb
add
sub
xchg
loop
fadds
xchg
call
inc
jmp
xor
cmc
mov
push
out
push
fnstenv
sbb
lds
lods
addr16
mov
loop
add
mov
jg
xchg
or
jae
xor
push
mov
and
jp
fwait
jp
shrl
iret
mov
test
jno
ret
sbb
mov
adcl
mov
adc
lret
andb
rcr
push
cwtl
pop
mov
mov
sti
mov
repnz
popa
andl
xchg
jecxz
idivl
dec
mov
mov
fldt
cmp
push
jecxz
sar
pop
mov
sbb
loop
out
adc
ja
std
adc
in
pop
or
lods
test
adc
fdivl
out
cmp
sti
add
push
inc
adc
sbb
sbb
aas
ss
scas
inc
add
or
xchg
xor
ja
dec
outsl
pop
lea
insb
dec
insb
cmp
xor
sub
jl
rcrb
adc
rcrb
aaa
push
dec
sub
sbb
adc
cmpsb
xchg
iret
rcrl
int
ja
test
leave
outsb
cmp
pop
aas
shr
cmp
xchg
jne
mov
xchg
and
inc
pop
push
in
std
xchg
rcl
loope
inc
out
pop
int3
cs
iret
sbb
mov
insl
sbb
xchg
or
hlt
cmpsb
stos
xor
and
add
xabort
adc
sbb
cmp
dec
cmp
clc
push
xor
adc
pop
xor
jo
sysret
popf
gs
andl
adc
sub
mov
or
fiaddl
sbb
jnp
mov
dec
push
ss
inc
lahf
in
mov
or
pop
jno
nop
jno
imull
jbe
add
or
imul
sbb
dec
dec
js
jge
sub
or
js
push
cld
std
rcl
ss
cwtl
in
and
sbbb
pop
pop
lahf
mov
push
gs
insb
mov
dec
jle
xchg
mov
inc
addb
or
je
jp
sub
call
ja
sbb
nop
jecxz
das
and
test
outsl
sub
xlat
push
mov
cmp
push
xor
push
js
icebp
mov
or
cmc
xchg
lcall
adc
dec
jae
loopne
fstpt
lcall
testl
out
ret
xchg
gs
jmp
fldlg2
dec
shrb
ljmp
mov
sub
xchg
scas
cltd
pop
sbb
sbb
sub
shll
sbb
scas
mov
xor
lock
sub
dec
inc
dec
mov
pop
enter
cmpsl
imul
scas
sub
shlb
mov
jmp
xor
scas
inc
jp,pn
aas
jmp
xchg
les
iret
cltd
jb
inc
sub
dec
sbb
pop
shl
lods
hlt
pop
js
fdivs
out
cli
sbb
daa
dec
push
and
mov
shrl
pop
jne
adc
mov
cltd
cs
adc
stc
sbb
or
sub
push
xor
out
mov
dec
and
aas
clc
shrl
loopne
adc
ret
mov
insb
push
lock
xchg
fwait
mov
cmp
or
mov
daa
mov
je
push
repnz
negb
lahf
test
les
rolb
push
push
and
sub
mov
mov
std
adc
mov
xor
inc
pushf
push
iret
cmpsb
stc
jne
cltd
test
repnz
push
and
popf
addr16
add
adc
fstpt
rorl
stos
fidivl
in
fldl
lock
xchg
repnz
cmp
inc
dec
aas
cmp
or
pushf
xor
sub
sub
mov
push
sub
pop
stc
loope
pop
mov
add
jbe
fnstcw
dec
mov
imul
sbb
ret
mov
jge
lret
jecxz
shll
cmp
mov
icebp
inc
ror
test
xchg
mov
inc
je
fiadds
aad
cmc
dec
adc
xchg
or
arpl
js
fnstsw
enter
in
pop
nop
sbb
arpl
test
stos
cli
loopne
xchg
xor
mov
sub
dec
xchg
push
xchg
pop
lods
sbb
jo
add
xchg
cltd
xchg
jge
inc
loop
and
add
into
sbb
and
xor
sbb
pop
in
adc
sbb
push
loop
roll
sub
aas
sbb
pop
pop
push
push
cmovbe
test
movsb
cmp
leave
adc
pop
loopne
and
ss
mov
add
popf
push
clc
push
mov
roll
pop
add
jmp
aas
shrb
lret
fsubrs
pop
inc
mov
mov
inc
insb
rorl
xlat
mulb
jbe
jg
gs
jp
aad
sub
xchg
xor
push
mov
or
pop
mov
scas
aam
push
sahf
xchg
lds
add
subb
dec
int3
insl
lahf
dec
insb
out
sahf
push
ja
inc
cmp
dec
int
repnz
inc
inc
mov
cwtl
gs
mov
mov
or
add
lret
dec
clc
aaa
and
lods
mov
psrad
and
test
leave
mov
mov
popa
ja
inc
jg
loopne
mov
ret
shrb
lock
pop
stos
cli
addl
fmul
shlb
mov
mov
push
dec
test
and
dec
insl
pop
imul
imul
popa
and
mov
bound
jle
push
and
aas
cmp
lods
sub
hlt
cmpsl
pop
jmp
fstpl
push
lds
and
mov
mov
jp
cld
sub
sbb
cld
dec
dec
add
imul
mov
xchg
scas
cmp
pop
in
push
mov
ljmp
xchg
outsl
dec
aam
mov
fs
cwtl
mov
mov
outsb
xchg
push
inc
dec
mov
test
or
push
xor
ficoms
aas
or
test
pop
inc
add
adc
idivb
lret
inc
leave
dec
xor
mov
pop
cld
in
sub
clc
outsb
push
loope
mov
imul
insb
fistl
outsb
es
sub
pop
pushl
sub
mov
xorl
pop
in
sbb
cmc
into
sub
lahf
jp
cs
imul
mov
lods
mov
fistps
fstpt
pop
and
mov
adc
mov
hlt
xlat
imul
xchg
popa
mov
popf
popf
xchg
js
pop
movsl
inc
clc
andb
mov
and
fldt
pusha
fmuls
dec
and
and
pop
xor
dec
lock
enter
stc
jnp
lea
add
lods
pop
xchg
ror
push
and
fstps
dec
lods
lcall
or
pushf
cwtl
int3
cltd
leave
and
push
scas
and
sbb
test
pop
push
outsb
rcrb
imul
popa
aas
stos
adc
scas
repnz
sbb
lahf
adc
scas
ret
cs
fcoms
fstl
int
rcrb
addb
into
sub
in
je
pop
mov
fnsave
mov
adc
push
xchg
in
mov
xchg
hlt
lcall
test
adc
arpl
daa
icebp
lock
cmp
xor
adcl
outsb
fcmovb
xor
lods
mov
lret
jns
out
jo
push
pop
mov
mov
pop
mov
mov
xor
aad
fistl
pop
mov
lock
test
mov
inc
add
cld
xchg
pop
insb
ja
lock
mov
push
fstps
ret
cmp
xchg
imul
je
sub
rcll
rclb
out
xchg
aam
inc
sbb
leave
scas
adc
mov
xor
fsubrl
push
decl
push
xchg
push
daa
test
pop
lock
gs
stos
inc
loop
cmc
jge
fistpll
and
mov
les
mov
lock
cmpsl
add
mov
xchg
sub
or
xor
gs
adcb
jae
sub
push
dec
mov
loopne
fadds
subb
out
inc
ljmp
push
jb
icebp
jle
lcall
les
inc
add
aas
and
call
orb
aam
in
push
xchg
mov
out
add
lcall
dec
xchg
and
lahf
jp
in
lret
cmp
mov
push
adc
push
test
mov
sbb
enter
hlt
adc
movsb
push
jle
scas
xor
lcall
ljmp
out
ljmp
xor
loop
mov
and
mov
in
mov
add
fwait
pop
orb
ja
ficoms
cmp
addl
cmp
sahf
fwait
imul
sub
push
sub
lods
sub
adc
xchg
mov
stc
ss
sbb
divb
outsb
jb
add
mov
xor
lret
addb
into
hlt
dec
cltd
daa
cmp
jmp
mov
adc
cmpsb
mov
addb
mov
xchg
mov
xor
stc
mov
sub
and
cmp
mulb
jnp
lret
adc
ret
add
mov
int3
es
aas
loop
je
mov
shlb
aas
ds
or
or
test
stc
mov
add
fiaddl
xor
mov
sbbl
jp
popa
mov
mov
adc
bswap
scas
mov
scas
jae
mov
cmp
sbb
repnz
push
lret
test
mov
hlt
jb
cmp
fistl
mov
movsl
ljmp
push
outsb
popl
pusha
jbe
cmp
aas
ret
loop
cmpsl
and
scas
push
sub
inc
add
sbb
xchg
pop
lret
or
inc
sub
jecxz
lock
mov
loope
xchg
and
fs
lods
nop
sbb
cmpsl
or
cmp
lods
arpl
pop
int
push
out
xor
imul
and
jge
xadd
lods
les
mov
pop
imul
cmc
pop
pop
cmpb
mul
jmp
mov
mov
jo
jmp
mov
mov
repz
lea
shll
cmp
enter
jns
fstps
mov
jnp
sbb
incb
lock
xchg
cwtl
std
xlat
cmp
arpl
jne
test
hlt
inc
lods
rclb
xchg
and
icebp
jo
adc
adc
mov
dec
pop
icebp
aad
cmp
adc
lods
fwait
xor
ja
or
jmp
xchg
push
add
cmpsl
inc
jno
push
jge
adcb
push
mov
mov
outsb
pop
adcb
fmuls
pushf
in
outsb
popf
pop
aad
cltd
int
mov
test
andb
mov
mov
jg
icebp
or
pxor
xchg
or
adc
push
hlt
jae
js
cld
js
cmp
ret
shrb
adc
loope
push
push
movsb
mov
loop
push
inc
nop
in
xchg
pop
dec
push
mov
jb
xor
push
jae
and
mov
or
pop
scas
add
fucomip
sbb
aas
cmc
jp
scas
pop
mov
add
lds
dec
out
mov
clc
mov
pop
xor
ret
push
fildl
loope
sar
mov
cmp
fcomp
push
lds
xor
dec
lret
arpl
rcl
dec
test
aas
rolb
call
leave
mov
xor
xlat
push
dec
ror
leave
jmp
sti
iret
imull
push
and
cltd
xor
xor
test
cmp
in
in
and
scas
pop
xchg
add
xor
inc
shrl
xchg
rorl
pop
jge
push
ret
sbb
loop
xchg
scas
imul
test
sbb
cmpsl
cmp
xchg
push
lock
test
pushf
mov
test
roll
std
in
shll
enter
mov
movsl
loopne
or
sub
dec
dec
aam
mov
fnstcw
scas
int
pop
imul
or
scas
ss
jo
nop
pop
jb
aaa
jg
add
imul
insb
andl
mov
in
loopne
push
cmc
xor
pop
mov
pushf
in
mov
dec
jnp
or
and
mov
sbb
push
in
jecxz
roll
mov
pop
mov
js
xor
or
pop
and
aas
shrl
movsb
sub
adc
mov
call
or
leave
sub
aam
cltd
cmc
xchg
sbb
inc
xchg
out
fs
cmp
and
adc
gs
roll
ret
adc
xchg
sbb
repz
testb
xlat
js
cltd
lods
aaa
and
gs
cmc
cld
add
or
or
rcrb
rorl
je
gs
imul
jne
sbb
popl
je
dec
mov
add
xchg
jb
mov
and
add
in
cwtl
xor
in
subl
add
test
jae
shl
sub
xchg
sti
mov
out
lea
std
pop
mov
mov
repnz
adc
je
dec
push
cwtl
adc
decb
mov
add
adc
jge
lret
fcoms
jecxz
mov
or
dec
ffree
inc
pop
mov
pop
fidivl
gs
jae
ljmp
push
fnsave
subb
mov
or
int
mov
adc
lcall
jmp
sbb
mov
icebp
dec
inc
pop
cmpsl
sbb
xchg
lcall
mov
andb
mov
pop
mov
stos
imul
rclb
ror
adc
jbe
adc
jb
inc
aaa
inc
or
les
or
daa
mov
dec
mov
push
aaa
jmp
test
inc
ret
xchg
rcr
pop
ret
test
inc
pop
adc
mov
cmpsl
adc
jns
xchg
inc
aad
jl
jl
push
out
pusha
enter
adc
sbb
jnp
pop
aam
cs
mov
add
jnp
xchg
add
gs
pop
jno
outsb
pushf
cli
lret
jo
out
cmpsl
in
mov
jmp
and
scas
mov
arpl
andl
into
into
insb
call
push
decb
dec
jecxz
lret
cmp
jmp
movsb
sahf
cltd
loopne
ret
iret
push
inc
loop
ret
inc
mov
insl
fs
jl
inc
outsb
clc
jmp
pusha
jl
movsl
inc
jae
das
mov
in
lods
dec
stos
pop
std
pop
movsl
pop
idiv
mov
lds
mov
jnp
test
xchg
and
cmpl
pop
push
fucom
add
pop
mov
adc
adc
jo
in
push
hlt
jg
out
ss
jns
aas
push
out
lea
shlb
repnz
mov
repz
cltd
xor
hlt
pop
cmp
sbb
outsl
jmp
gs
sahf
loopne
and
jle
xchg
test
das
jns
jl
mov
jg
mov
jl
mov
ss
subb
out
stc
inc
sbb
jl
in
jns
push
scas
icebp
pop
dec
adc
in
mov
dec
cmp
xlat
mov
inc
mov
loopne
test
push
cmp
dec
push
scas
cli
jbe
in
test
adc
adc
pop
mov
xchg
std
and
daa
les
imul
jns
mov
stos
jb
mov
xor
xor
and
in
rorl
imul
dec
out
or
push
in
dec
lea
lods
mov
xor
fs
lods
out
push
add
ds
jge
xchg
pop
insb
sbb
or
and
sbb
cld
mov
rolb
jle
aad
mov
mov
mov
stos
mov
int
sbb
adc
inc
cltd
or
iret
stos
sarl
loopne
push
dec
addr16
xchg
pop
sbb
xchg
fstl
lret
dec
mov
mov
cmp
and
and
or
push
jge
int3
int3
cmp
xchg
aas
lret
add
push
sbb
shrl
decb
in
mov
pop
jp
icebp
xchg
cltd
hlt
repz
lods
js
pop
loope
pop
aas
lock
mov
mov
and
arpl
cmp
cmpsb
sbb
bound
sbb
jg
out
sbb
mull
out
clc
aam
lock
mov
cmp
mov
mov
sbb
les
outsb
push
sbb
ret
lds
sub
stc
xor
pusha
cmp
ret
xlat
or
fdivrp
mov
add
mov
std
jae
pop
movsl
pop
sbb
out
sub
out
push
call
ja
dec
sub
stc
and
or
popa
inc
rep
inc
int
jns
lret
ficomps
lods
pop
pop
lret
push
pusha
inc
mov
cmp
jns
jmp
iret
pop
adc
pusha
sub
ret
jnp
sbb
int
into
pop
vpminsw
popa
mov
cmp
mov
cli
nop
adc
and
cmp
add
std
cs
mov
rclb
jecxz
push
sub
sbb
cld
inc
stos
mov
lret
lods
sbb
loope
daa
cmpsl
icebp
push
sbb
pushf
mov
aad
jecxz
dec
ja
addr16
xchg
mov
and
mov
movsb
in
dec
lods
jnp
cmp
mov
xchg
dec
sahf
mov
mov
mov
mov
sbb
lret
adc
dec
mov
jle
mov
cmpxchg
loope
inc
in
int
jae
adc
cmp
cmpsb
sub
ret
push
cmpsl
test
push
int3
lods
sti
and
adc
addr16
pop
lds
out
data16
pop
lcall
cld
jmp
and
pop
mov
dec
mov
shll
jnp
pop
shll
dec
call
or
lods
jnp
push
icebp
xchg
xor
cmpsl
jne
sbb
aas
loopne
out
push
mov
add
movsl
jb
icebp
mov
orl
adc
into
addr16
inc
mov
add
cmp
jmp
test
stc
daa
mov
mov
jmp
or
or
mov
mov
dec
cmp
cwtl
das
stc
aas
cmp
out
and
add
int
jmp
sub
enter
dec
stc
in
hlt
ror
dec
pop
hlt
jns
jno
loopne
jb
mov
ret
out
push
lods
movsb
rol
sbb
testl
cmp
mov
shlb
pop
pusha
pop
jecxz
and
rorl
fisubrs
int
pop
jmp
cld
pop
test
rcr
ret
or
mov
adc
psllq
dec
mov
inc
dec
stc
es
and
rcll
and
ja
mov
decb
imul
insl
mov
cmovns
jae
cmp
aam
mov
insb
sbb
std
insl
sbb
inc
adcl
je
ljmp
lods
in
push
inc
cmpl
sarl
sub
pop
cs
mov
addr16
pop
cmp
filds
aaa
or
cmp
aaa
jo
in
sahf
out
jl
cmc
mov
clc
xor
cwtl
add
push
int3
add
js
adc
jmp
jo
lods
and
inc
push
add
or
adc
mov
or
adc
dec
into
pop
xchg
insb
jge
fsubs
xor
lock
pop
mov
sbb
mov
repnz
ss
push
les
cmp
fcom
xchg
shrb
xchg
and
adc
mov
mov
and
add
mov
repnz
dec
dec
add
sti
lds
xor
jb
push
adc
fstpt
mov
mov
dec
or
leave
addr16
clc
sbb
repz
xchg
mov
jge
andl
push
filds
movswl
dec
mov
pop
push
inc
les
dec
or
pop
and
test
push
and
cwtl
inc
dec
mov
aad
xchg
mov
and
jp
xchg
das
jno
jno
cwtl
dec
in
jns
pushf
in
adc
lea
xor
dec
push
negl
pop
out
jne
xchg
out
and
loope
jnp
xchg
jb
nop
fs
pop
sbb
inc
cmp
lds
fld
ret
mov
pop
arpl
inc
mov
or
mov
stos
dec
es
arpl
add
rol
mov
cmp
and
ficomps
mov
outsl
xor
mov
imul
cwtl
mov
ds
mov
sub
repnz
inc
jo
jb
dec
loop
fidivs
xchg
and
ljmp
je
in
push
mov
cmp
cltd
shrl
mov
pop
frstor
sbb
cmp
and
sub
das
test
imul
mov
call
fistl
add
push
cltd
dec
daa
movsbl
jmp
sbb
sub
nop
repnz
xor
negb
dec
mov
adc
adc
insl
jecxz
imul
xor
aas
xchg
push
and
adc
xor
sbb
mov
ret
or
mov
mov
ljmp
inc
mov
int3
push
mov
test
and
adc
xchg
sbb
outsb
jge
aam
popf
and
mov
ja
pop
cmc
dec
and
leave
leave
or
fdiv
test
cpuid
icebp
fldcw
jl
adc
or
out
mov
aam
es
stos
mov
push
mov
mov
mov
mov
cli
xlat
gs
cs
mov
pop
push
movsl
and
jmp
jecxz
inc
pusha
movsb
aam
xor
sbb
cltd
ljmp
es
adc
je
shl
mov
loopne
jle
aad
jp,pn
mov
fcompp
mov
mov
cwtl
repnz
or
adc
inc
and
ljmp
sahf
addl
sbb
insl
sahf
add
push
push
dec
pusha
repnz
lret
jae
cmc
sbb
into
jge
mov
hlt
pop
mov
frstor
bound
sbb
xchg
mov
or
xchg
rolb
xor
lea
lea
adc
popa
jmp
in
dec
push
dec
movsb
push
mov
pop
mull
push
jno
cmp
xchg
int
aam
ja
or
test
adc
leave
add
sbb
cld
pop
dec
push
daa
lock
ss
add
fimuls
and
syscall
mov
jns
jo
pop
and
adc
inc
push
loope
cli
add
push
xor
xorb
cmp
push
es
xchg
iret
cmp
int3
push
mov
hlt
fwait
xchg
in
adc
sarb
xorl
lahf
mov
and
or
aaa
aaa
jns
xor
shlb
sub
nop
enter
popf
or
fdivr
push
jns
pop
out
testl
test
add
dec
fadd
jle
jne
sub
sbb
mov
sbb
movsl
ljmp
mov
jg
xor
xchg
mov
dec
sub
add
movsb
int3
lcall
adc
ja
mov
dec
sbb
pop
fucomip
pop
insl
xchg
cmpsl
insl
icebp
sahf
sbb
cmc
jns
sahf
xchg
sbb
pop
inc
adc
sub
pop
in
stos
dec
es
mov
cmp
or
ficoms
push
mov
dec
stc
push
aad
fwait
mov
addb
ds
sbb
add
xorl
insl
mov
mov
adc
or
adc
aam
xlat
sub
lahf
or
mov
or
or
nop
out
out
test
sub
lock
fdivrs
pop
xchg
cmp
iret
ret
sub
push
and
fucomp
or
sub
push
std
mov
and
xor
gs
xor
aam
mov
inc
jo
loop
outsl
fisubrs
push
aas
into
sti
push
push
push
sub
pop
maskmovq
mull
sub
lcall
cmpsb
pop
in
inc
mov
push
mov
ret
adcl
add
imul
inc
outsl
jb
shr
push
xchg
inc
xor
adc
mov
sbb
xchg
scas
inc
iret
es
jne
mov
and
std
movsb
sbb
iret
xor
xorl
mov
sub
inc
or
js
mov
and
xlat
xchg
sbb
pop
mov
pop
addr16
data16
sbb
aas
xchg
in
or
adc
mov
jp
les
push
das
cmp
or
xchg
mov
sub
ss
pop
dec
xor
or
mov
test
rcr
lods
in
js
ss
sbb
aam
bound
ret
js
pop
adc
jge
nop
jmp
add
mov
pop
xor
shrl
xchg
jae
push
rorl
xchg
int3
xor
mov
fstpl
dec
cwtl
mov
lock
adc
and
lds
ret
leave
push
and
lret
cwtl
inc
cmp
cmp
adc
fstpl
mov
addr16
fnstsw
add
je
sbb
js
faddl
lea
aad
and
mov
jb
inc
test
cmpsl
loopne
cwtl
xchg
mov
push
add
stos
out
jmp
mov
pop
xor
pop
insl
nop
mov
hlt
jbe
icebp
inc
hlt
cmc
add
pusha
in
test
pop
xor
xor
xchg
loop
jo
inc
mov
jecxz
xor
adc
out
test
mov
pop
repz
adc
or
mov
push
mov
imul
cmpsb
sar
sbb
xchg
nop
xchg
decl
lret
xchg
mov
movaps
into
imul
push
ds
mov
loopne
push
push
or
pop
inc
mov
cli
call
mov
in
push
push
rcl
jp
inc
lret
jbe
cmp
push
jge
fidivs
ret
mov
mov
mov
mov
fiadds
inc
andb
fninit
fldcw
loopne
and
orl
mov
sbbl
dec
test
xchg
aam
add
rclb
lea
or
push
js
push
xchg
fbld
subb
imul
cld
mov
pop
push
push
call
adcl
dec
or
push
mov
out
xchg
sbb
push
repz
clc
loop
ja
dec
cmp
enter
sbb
shll
cltd
movsl
mov
call
mov
add
mov
jne
int3
imul
bnd
out
leave
pop
pop
fs
call
mov
jo
ret
call
jge
mov
mov
rcr
or
getsec
xchg
in
adc
test
mov
jns
cmp
pop
insl
je
dec
dec
test
in
lcall
sbb
xor
int3
js
push
pop
mov
xchg
adc
pushf
scas
insb
mov
shl
test
push
cs
xor
mov
jns
push
mov
in
cmp
mov
lahf
jg
aam
jmp
stos
xlat
sbb
aas
jle
pop
add
loop
mov
xchg
cmp
dec
sub
std
or
and
jae
hlt
push
repnz
out
cmp
mov
les
lcall
fsubp
sbb
cmpxchg
hlt
loope
int3
sbb
xor
fdivl
hlt
gs
mov
imul
inc
push
mov
leave
push
hlt
push
xor
sbb
movsw
sub
ret
ret
mov
rcll
ss
je
adc
out
inc
mov
mov
dec
in
pop
mov
imul
or
out
nop
ds
mov
or
mov
add
mov
adc
pop
pop
push
inc
mov
and
xor
loop
out
test
hlt
test
cwtl
mov
out
test
rorl
cmpsl
ret
int3
cmp
outsb
jnp
stos
outsb
and
cmp
leave
cmp
jl
ret
push
loop
jbe
jns
xchg
popf
xchg
dec
jp
iret
jb
jmp
adc
xor
ljmp
xor
push
in
cmpsb
nop
and
js
dec
dec
addr16
inc
adc
popa
and
outsb
icebp
inc
push
jle
test
pop
cmp
jmp
stc
or
lahf
push
mov
inc
cmp
cltd
or
mov
dec
mov
pop
adc
loopne
arpl
xor
pop
fildl
nop
outsb
popa
jg
jmp
mov
cmp
pop
shll
popa
rorl
xchg
into
cwtl
add
mov
jmp
dec
mov
push
push
and
xor
ljmp
mov
cld
pop
or
dec
jbe
mov
jmp
pop
xchg
fnstcw
xlat
adc
xlat
mov
fmuls
push
sub
aam
pop
mov
in
mov
aaa
cmp
cld
scas
pop
push
jo
push
pop
fldl
adc
inc
lret
movsb
pop
adc
jo
ljmp
cmc
mov
into
or
rcr
cmp
push
xor
data16
xchg
dec
inc
cmp
dec
out
notl
aaa
inc
jb
fisubrs
stos
inc
int
insl
add
fwait
mov
addl
fidivrl
pop
inc
sahf
sbb
jmp
std
xchg
dec
cmc
push
movsl
pop
stc
cmpsl
test
jmp
push
out
push
xor
es
mov
mov
cmp
aas
xlat
pop
out
dec
stc
and
push
jne
pop
int3
sarb
daa
cltd
cld
bound
jg
cmpsb
cmp
in
inc
adc
ret
push
add
call
clc
add
xor
fbstp
add
mov
jge
int
xchg
aam
in
or
hlt
mov
xchg
pusha
lds
cmp
mov
pop
scas
sbb
cmp
xchg
mov
repz
and
repnz
pusha
test
pop
dec
or
movsb
repz
pusha
and
mov
xor
mov
sbb
cltd
incb
push
jmp
ret
fmul
lea
aas
out
or
mov
cmp
mov
push
test
lcall
out
repnz
sub
loop
in
mov
dec
xchg
and
out
shr
and
or
sti
lcall
sub
and
out
daa
fildll
cwtl
imul
cmp
dec
mov
ret
push
aad
scas
dec
fcomi
ss
fmul
push
inc
js
pmulhuw
xor
call
mov
mov
and
push
ja
or
dec
in
jge
outsl
lcall
jne
mov
subl
mov
mov
inc
es
lea
es
add
mov
imulb
pop
xor
adc
pop
pop
stc
cltd
push
test
jo
hlt
mov
rcl
loope
inc
popa
jbe
jno
int3
iret
mov
sub
cld
or
das
xchg
popf
jl
orb
inc
cmp
pop
push
pop
pusha
sub
jge
cmpsb
movsb
inc
scas
inc
ds
call
sti
cmp
test
and
xlat
add
dec
xor
les
jns
push
and
lods
movsb
dec
pop
cwtl
xchg
mov
cmp
icebp
inc
xchg
mov
adc
mov
sbbb
mov
sbb
repz
shll
icebp
sub
or
fisubs
sbbl
js
nop
shlb
movsl
jae
es
subb
sbb
jecxz
xor
or
mov
loop
cltd
fmull
cmp
push
pop
dec
lock
loopne
or
test
adc
fimuls
push
mov
ficoml
out
movsb
sub
xchg
movsl
popf
fsts
icebp
mov
inc
addr16
fisubs
or
outsl
test
mov
sub
or
jmp
das
push
xorb
lock
add
pop
stc
mov
mov
jp
mov
cmp
pushw
inc
outsb
sbb
les
in
jle
rorl
inc
rolb
js
or
ds
aaa
ficoms
or
jbe
loop
adc
push
add
mov
sahf
sub
nop
push
lds
out
mov
xor
insl
leave
fucomip
popl
or
push
popf
gs
mov
clc
or
sbb
into
cmp
sbb
pop
insl
mov
mov
ss
bound
rcrb
cltd
repz
cwtl
mov
lods
xlat
ja
fbld
lock
aad
arpl
dec
xchg
jle
push
aam
mov
push
pop
popf
sub
push
jno
sub
imul
cmp
xor
push
jae
stos
mov
mov
iret
lcall
mov
push
push
cmpb
inc
loop
or
xchg
add
int
fadds
int3
in
mov
test
sub
cmc
fadds
mov
enter
mov
inc
adc
fistl
lahf
popa
xchg
fnstsw
sahf
scas
xchg
cmp
mov
aaa
sub
bound
outsl
jb
xchg
mov
mov
jno
sahf
out
add
lods
pop
pop
xor
xchg
les
mov
pop
and
clc
repnz
push
in
cmpsb
pop
out
mov
push
adc
arpl
ds
xchg
stos
outsl
ja
lods
jge
ds
ds
ret
je
lods
cmp
or
mov
pop
mov
movsl
push
movaps
call
push
int3
sbb
pop
sub
mov
sahf
cmp
jge
mov
mov
and
dec
add
out
mov
testb
adcb
push
inc
sub
and
jp
inc
adc
xchg
cwtl
pop
outsl
xchg
sub
fdiv
adc
idiv
ret
cmc
es
sahf
outsl
test
dec
inc
cmc
jecxz
adc
repz
icebp
es
lcall
aas
push
xorb
xchg
fcompl
pop
push
lahf
pop
adc
push
pop
jp
mov
adc
mov
cmp
mov
jl
shll
xor
fwait
inc
pop
push
in
inc
pop
iret
arpl
repnz
aas
adc
cmpsl
lods
imul
data16
shl
inc
and
pop
dec
lods
hlt
or
pop
jge
inc
adc
aas
aas
lcall
imul
mov
repnz
jns
dec
add
jle
push
cmp
je
sbb
and
mov
ret
imul
inc
xchg
stos
cld
bound
adc
clc
gs
pop
rclb
int3
jnp
or
xor
mov
ja
outsb
xor
les
xchg
dec
outsl
jno
fsub
mov
aam
cmp
cmpsb
call
lahf
cmp
test
in
mov
aas
cmp
das
ss
inc
mov
aam
imul
decb
aas
ret
popf
lea
aad
jg
mov
stc
dec
inc
adc
sub
mov
adc
and
in
lods
mov
xchg
inc
rorl
outsl
daa
cmp
xor
pand
bound
outsl
adc
cmp
test
xchg
cmc
rcrl
aad
mov
adc
dec
sbbl
and
dec
jl
hlt
xor
lahf
lret
mov
outsb
mov
shl
insb
cmp
fld
daa
push
mov
notl
inc
scas
sbb
push
inc
aad
and
shl
push
pop
insl
ja
call
cmp
xor
inc
rcrb
stc
pushf
movsl
pop
sub
cmp
fs
or
and
popf
or
lcall
and
stos
jno
pop
jne
xor
aas
adcb
pop
arpl
inc
push
out
jg
cmp
and
jg
iret
test
xchg
sbb
fwait
sbb
lock
fdiv
cli
sub
mov
sub
mov
data16
lret
pop
cmp
sub
and
std
or
inc
mov
pop
pop
push
sub
repnz
sbb
shll
mov
and
add
aaa
int3
ljmp
out
cli
mov
adc
sbb
or
mov
dec
xchg
into
sub
cli
in
pop
aam
xorl
xlat
hlt
pop
xchg
cmpsl
orl
stc
pop
test
jmp
aad
mov
incl
movl
dec
loope
jo
shlb
adc
mov
xchg
inc
fisubl
inc
cwtl
addr16
pop
repz
dec
scas
dec
jns
in
ficomps
lret
or
scas
cmp
jo
rol
andb
fildl
jne
push
mov
into
sub
rorl
xchg
stc
aaa
lret
cmp
fwait
mov
push
fnstenv
xchg
jb
add
xor
popf
subb
dec
cmc
int3
rcrl
das
pop
data16
push
je
loop
mov
ds
cmp
xor
mov
xchg
xchg
popf
xor
jmp
sub
push
cld
aas
push
arpl
in
inc
rcrb
mov
xchg
rorl
fwait
mov
js
sbb
mov
data16
cmp
repnz
test
cs
adcl
fldenv
sub
push
fwait
out
out
add
call
mov
pusha
fidivrs
jns
daa
stos
xor
rol
cmpsb
xor
or
sub
mov
stos
sub
out
fmull
imul
sti
aam
lcall
and
out
jo
cmc
imul
mov
push
pop
rorl
cltd
dec
or
mov
aaa
xchg
shrb
cmp
mov
loope
jo
in
addb
js
out
mov
xchg
adc
xchg
sbb
mov
shlb
jle
jmp
pop
and
out
mov
pop
sarb
cli
sub
in
popf
insb
cli
lcall
frstor
clc
into
cld
sbb
inc
push
xchg
mov
xlat
dec
sub
mov
jle
sarl
mov
push
jecxz
cmpsl
dec
inc
mov
adc
or
enter
push
xchg
xor
pusha
mov
cmp
adc
and
or
lret
cs
js
das
inc
push
test
movb
fiadds
lret
add
jl
fsubrs
add
cmp
mov
or
mov
adc
cmpsb
fisttps
xor
add
in
and
js
lahf
bound
add
jle
pop
adc
data16
jo
mov
pop
pop
mov
inc
mov
je
dec
scas
push
enter
mov
push
sub
imul
leave
aam
cmpsl
fdivrs
insl
sbb
sub
or
shlb
push
mov
leave
pop
xor
fwait
inc
jmp
ss
dec
jp
xchg
push
xchg
jp
jl
cmp
cli
data16
stc
cmp
dec
test
loope
fwait
negl
sbb
outsl
mov
mov
push
xor
lret
scas
add
daa
arpl
add
or
stos
subl
push
jl
mov
mov
iret
push
fisubs
xlat
stos
mov
int
sbb
das
std
add
ss
enter
add
pop
insb
push
jg
stos
int
sbb
testl
or
inc
lahf
xchg
jmp
lods
int
mov
dec
xchg
and
dec
subb
fdivrs
add
in
cmc
loop
mov
mov
adc
popf
mov
ds
cs
jp
jno
data16
add
dec
push
call
xorb
rcrb
mov
add
aaa
out
std
and
lcall
add
or
mov
mov
and
mov
xor
test
push
movsl
inc
cmc
push
jmp
pop
push
sbb
repnz
inc
mov
sbb
lahf
lcall
adc
das
cmp
sub
sarl
xchg
push
or
and
add
jg
push
jne
mov
adc
inc
loopne
mov
cmp
xchg
lock
add
and
and
mov
jo
mov
cmp
mov
dec
dec
inc
decl
ret
mov
pop
dec
lds
mov
mov
test
inc
mov
mov
xor
and
adc
in
shrl
bound
out
push
inc
adc
mov
out
mov
fsubl
pop
jb
push
cltd
jo
rorb
dec
push
inc
js
test
addb
sarb
mov
add
bound
lds
outsb
inc
stc
cmp
comiss
cmp
push
lea
xchg
lock
jb,pt
idivl
pop
pop
out
movsl
jp
sbb
leave
mov
push
jne
pushf
lcall
or
out
sarl
fstps
push
clc
loope
or
add
sahf
xchg
mov
sbb
mov
loopne
addb
push
leave
xor
inc
jb
inc
dec
push
xchg
adc
stc
push
cmp
or
pop
jge
adc
jmp
ds
stos
push
bnd
popa
add
out
outsl
jg
rcrl
add
cmp
mov
arpl
xchg
aad
cmp
and
mov
xchg
mov
rcrb
adc
mov
test
adc
push
rol
pop
xchg
repz
jg
mov
iret
frstor
jne
pop
xchg
push
xchg
test
sub
inc
cld
daa
mov
jge
or
mov
mov
cmp
inc
int3
aad
cmp
outsl
inc
cmp
jnp
push
adc
jb
je
sub
jle
mov
sbb
jmp
fistl
xor
sub
or
cs
adc
loop
xor
sbb
ret
addr16
xchg
adcb
loop
std
pushf
jecxz
mov
cmp
adc
cmp
test
adc
push
add
adc
inc
int
pushf
push
das
aas
sar
rcrb
cld
sub
sbb
out
inc
inc
inc
push
les
out
movsb
push
mov
cs
dec
mov
sbb
dec
arpl
jnp
rol
jb
dec
or
mov
xchg
sbb
rol
imul
dec
stc
int3
add
xor
addr16
or
in
add
or
sub
or
and
mov
das
and
dec
lea
in
ret
repnz
jp
xor
loopne
imul
jo
ror
stos
or
mov
mov
lret
sbb
mov
imul
repnz
jb
sahf
mov
mov
mov
dec
in
je
add
push
fwait
or
jne
loope
mov
sub
mov
xor
nop
mov
loopne
pusha
test
xchg
pop
data16
lahf
dec
out
stc
and
sub
xor
shrb
sarl
fxch
mov
pop
enter
inc
cmp
mov
push
mov
mov
lods
push
call
mov
out
xor
inc
mov
mov
arpl
sub
jb
jae
jge
stos
lods
sub
inc
je
push
and
pop
addr16
mov
dec
fisubl
in
int3
sub
mov
dec
stc
sub
fidivl
jl
lret
adc
fbstp
fs
in
xchg
call
lods
jp
jne
loop
inc
jo
push
mov
popf
fnstsw
outsb
adcb
xchg
leave
lea
in
cld
repz
mov
mov
cwtl
mov
divl
decb
and
or
lods
imull
out
xchg
movsl
mov
cmc
jecxz
loope
pop
jne
pop
lahf
inc
sub
and
fisubs
xor
sbb
fists
xor
xchg
mov
daa
jle
out
negb
adc
out
sahf
test
popa
mov
and
clc
insb
imul
and
ret
movsl
sbb
imul
mov
push
icebp
push
pop
int3
rolb
stos
push
shrb
dec
pop
mov
dec
jns
lds
filds
imul
push
adc
xchg
jecxz
out
movsl
cwtl
sbb
sar
hlt
test
mov
mov
movsb
roll
add
mov
jmp
movsb
shl
or
xlat
les
pusha
cmpsl
push
out
cmp
std
xor
jecxz
pop
das
rcr
out
push
mov
mov
jb
sbb
in
fnstsw
mov
and
add
hlt
mov
jb
out
es
xchg
icebp
add
inc
and
enter
ret
sbb
mov
fadd
in
adc
push
dec
inc
fistl
cmpsl
adc
ficoml
lds
mov
add
jb
add
ret
aaa
adc
and
cmp
lcall
adc
stos
mull
push
adcb
jb
sti
aaa
cltd
sarl
jno
mov
pop
icebp
pop
adc
ss
ja
or
jbe
cwtl
mov
cwtl
or
es
inc
scas
lds
roll
sub
jl
adc
mov
inc
orb
lods
enter
sbb
stos
push
xor
sbb
dec
nop
sbb
mov
push
enter
insl
repnz
inc
out
and
xor
out
lahf
jg
repnz
push
shrl
aaa
xor
xchg
push
inc
pop
mov
push
ds
mov
sub
les
pop
or
push
add
fnsave
push
sbb
sub
mov
xlat
cld
enter
xchg
xchg
mov
xchg
inc
pop
pop
xchg
fcomip
dec
fwait
cli
aam
mov
ljmp
mov
mov
xor
popf
mov
ficomps
cwtl
mov
push
lods
shl
mov
enter
ret
out
ds
fbld
sbb
mov
push
mov
and
sub
in
add
fnsave
das
mov
dec
cmc
push
push
mov
dec
movsb
adc
sbb
aas
jb
pop
cmp
clc
call
push
inc
push
jmp
inc
xchg
fs
and
jecxz
test
insb
mov
xchg
sbb
decb
cmp
mov
mov
neg
sbbb
jno
adc
xor
les
rcll
ficoml
and
rolb
sbb
jo
rorb
pusha
xchg
lahf
loop
jg
dec
sub
lock
mov
test
jnp
aaa
out
cmpsb
aaa
mov
xor
mov
or
aaa
data16
repnz
imul
and
push
adc
inc
adc
arpl
cwtl
lret
out
mov
pop
xlat
mov
lods
test
in
ljmp
cmp
dec
pop
cld
ja
int3
out
xor
cmpsl
push
gs
pop
movsl
iret
dec
mov
mov
xchg
leave
pop
test
push
bnd
repz
mov
ds
sub
out
pusha
or
jmp
movsb
inc
jg
nop
mov
sbb
jns
es
or
jne
fldl
repnz
push
adc
push
cli
dec
dec
aam
add
cmc
mov
rol
adc
inc
inc
test
insb
mov
mov
xchg
mov
mov
int3
add
cli
aaa
add
xchg
incl
sbb
leave
mov
sbb
lret
jno
dec
cmpsl
adc
insl
push
pop
jo
mov
mov
shlb
mov
lods
loopne
outsb
jmp
xor
sub
cltd
sub
sbb
push
adc
inc
js
cwtl
dec
lahf
in
lods
daa
popf
mov
mov
das
stos
out
in
mov
test
mov
lcall
rcl
xor
pop
gs
add
fistpl
and
sbb
add
cwtl
push
divl
adc
xchg
shrl
xchg
lcall
psrld
into
jns
xor
hlt
mov
stos
clc
fidivrs
cmp
ss
jp
xor
lahf
repz
xor
add
popf
lcall
pop
sbb
sub
lods
xor
dec
lcall
xchg
stos
repz
adc
cmp
xchg
ret
push
and
cmpsl
add
mov
push
movzbl
dec
jbe
ljmp
lods
scas
cli
cmp
xchg
sub
fsubl
stc
mov
lock
inc
and
arpl
jmp
rcl
mov
xor
into
xchg
push
jno
lahf
addr16
sbb
inc
aas
sbb
lahf
xchg
push
xchg
out
fisubl
push
in
xor
int3
lret
cltd
out
dec
out
out
xchg
jnp
int3
es
sub
xor
adc
loope
xor
push
out
inc
sbb
sub
test
xchg
mov
inc
and
jns
pop
or
int
push
mov
jecxz
mov
mov
xchg
sbb
xchg
loopne
sub
sub
jno
pusha
lea
loop
shlb
stc
add
out
or
pop
addr16
mov
jb
fdivp
jmp
push
inc
test
sub
test
xor
dec
movsl
in
push
or
je
mov
push
popf
cmc
mov
sub
jp
fs
arpl
scas
daa
push
mov
orb
push
loope,pn
popa
mov
mov
ret
std
aad
fld
test
repz
mov
ss
inc
nop
push
lahf
push
push
cmpb
mov
mov
adc
faddp
jno
mov
js
cmpsb
lds
sar
mov
cli
dec
cmp
ja
int
es
mov
testl
push
scas
mov
adc
push
sub
push
push
xchg
mov
cld
sub
push
inc
scas
imul
icebp
mov
xorl
adc
pop
mov
cs
mov
push
fbstp
mov
xor
push
sub
sti
dec
pop
or
repnz
xor
out
mov
mov
andl
sub
sbb
imul
push
sti
cmpsl
xor
xchg
sbb
inc
adc
mov
imul
jl
cld
sbb
les
aaa
fwait
sub
pop
sarl
dec
mov
push
fstpt
jno
sbb
jo
int
mov
filds
adcl
push
lds
mov
dec
or
cmpsl
std
jmp
sub
mov
inc
push
je
cmp
mov
seta
dec
pop
push
adc
es
push
push
add
jl
addb
xor
test
lock
int3
mov
xor
jmp
xlat
dec
into
outsb
add
xorb
mov
or
stos
in
cwtl
daa
xchg
push
mov
icebp
mov
ret
xor
cmpsl
jne,pt
enter
fdiv
mov
xor
les
pop
or
repz
cltd
fisubl
cs
aad
mov
xchg
lods
mov
xchg
lret
fisubrs
adc
sbb
push
mov
add
je
push
or
pop
push
xlat
in
daa
push
jp
aaa
or
mov
adc
fidivs
jb
jge
jb
pop
dec
add
adc
insl
cmp
and
dec
inc
dec
sbb
mov
iret
mov
push
and
add
push
add
jo
fisttps
insb
out
cwtl
push
xchg
sbb
pop
popa
mov
lea
mov
and
imul
jge
in
sbb
inc
xchg
push
fsubr
jl
mov
dec
call
cmp
sbb
pop
out
inc
daa
sbb
or
in
mov
dec
rcrl
loopne
add
dec
cmp
scas
jmp
inc
dec
mov
fadd
ljmp
or
daa
pop
and
nop
xchg
les
xor
lods
mov
lea
in
xor
sahf
inc
pop
arpl
dec
push
cmp
xor
in
movl
and
push
pop
xchg
popf
push
inc
das
test
nop
add
cmp
lret
jb
push
dec
dec
xlat
call
ja
or
fisttpl
arpl
fsubrs
sbb
cmc
xchg
dec
or
arpl
fcoms
in
xor
mov
xchg
sbb
cmp
clc
and
jnp
mov
xchg
jge
mov
jecxz
test
or
xor
stos
dec
pop
push
and
fistps
adc
shlb
shrl
scas
call
adc
xor
loop
fstpt
aad
mov
test
ljmp
call
int
nop
adc
adc
adc
xchg
pop
lret
inc
cmp
ret
mov
cmp
push
nop
jae
xor
cmp
pop
adc
mov
mov
aaa
mov
pop
lret
add
adc
ret
outsl
lock
sbb
inc
or
iret
pop
fnstcw
pop
push
pop
mov
pop
dec
int3
dec
jle
dec
int3
aas
test
xchg
pop
leave
or
cmp
mov
mov
pop
fisttpll
sub
add
sbb
adc
shll
aaa
jnp
packuswb
daa
dec
jne
add
and
sub
popa
xor
push
jle
lcall
mov
pop
leave
dec
pop
movsl
in
daa
stc
mov
daa
pushf
mov
mov
or
sti
rorb
dec
jae
out
sub
adc
int3
dec
or
adc
dec
pop
rcl
pop
stc
inc
insl
cld
jno
xor
push
push
pop
mov
fists
mov
das
icebp
stos
pusha
rcll
negl
xor
decb
cmovge
loope
imul
inc
outsb
mov
xchg
shl
push
xorb
xchg
and
cmpsl
mov
loope
lea
mov
or
jp
inc
sub
ret
lock
adc
cmp
fbstp
jmp
andl
push
mov
shl
xor
inc
ljmp
xchg
repnz
mov
and
xchg
aam
popf
sbb
stos
xchg
or
mov
jmp
repnz
sub
sarl
mov
sub
fdivrp
jb
cmp
mov
bound
pop
pop
dec
and
js
or
pop
xor
sti
mov
std
aam
jb
inc
packssdw
ss
push
cmp
sub
push
cmp
or
mov
jl
cmp
mov
jecxz
dec
sarb
cmpsl
insl
xchg
cmpsl
popf
roll
or
jle
and
push
xor
pop
aam
cld
sbb
xchg
mov
dec
subl
or
jle
adcb
inc
jns
xchg
sbb
mov
ljmp
pop
test
mov
xchg
dec
and
push
mul
rclb
cmp
pop
add
mov
ret
jmp
sbb
dec
xchg
push
test
mov
push
xor
mov
scas
push
incl
jle
mov
adc
pop
pop
xchg
jbe
out
test
xor
out
adc
mov
jl
into
aam
stc
cmp
pop
push
jno
aam
imul
into
add
ljmp
mov
cs
lret
adc
jl
mov
add
mov
ljmp
int3
dec
mov
mov
sub
push
dec
pop
mov
jbe
stos
xor
mov
pushf
js
add
push
loopne
or
mov
loope
jmp
out
inc
aam
loope
mov
jne
jbe
mov
and
cltd
outsl
sub
mov
pop
icebp
or
sub
int
xchg
in
pop
dec
adc
ljmp
or
jae
mov
xchg
pop
lock
sbb
mov
adc
adc
into
std
push
mov
int3
loop
adcb
push
and
rclb
jnp
inc
insb
scas
jo
les
enter
scas
outsb
cmp
insl
lahf
push
push
sahf
fdivl
ficompl
jecxz
inc
jge
out
mov
jge
cmp
jns
loopne
or
js
loope
cmpsl
movsl
push
loop
les
pusha
mov
pusha
mov
jne
cmp
mov
popa
in
leave
jmp
sbb
aad
mov
jmp
jbe
das
insb
lahf
movsb
xor
xchg
jecxz
dec
shlb
and
aam
in
xchg
repnz
xor
mov
repz
pop
sub
stos
in
dec
and
sbb
and
jae
ret
loopne
pop
mov
mov
int
stos
ljmp
jnp
sbb
or
xchg
jge
inc
data16
cmp
mov
cli
aad
jecxz
pop
pop
ja
mov
and
jns
and
push
xchg
push
std
loopne
push
jb
pop
jmp
ret
mov
mov
movsb
dec
sarb
pushf
mov
cwtl
ljmp
add
xor
mov
out
fcoml
mov
mov
pop
lcall
inc
fdiv
faddp
hlt
sbb
or
aas
cmp
pop
inc
sbb
inc
mov
cmovae
and
cs
xchg
hlt
dec
ficompl
or
lret
repnz
jns
pop
fdivr
outsb
data16
jbe
nop
or
and
and
sbb
loope
iret
pop
jmp
pop
dec
bnd
sbb
out
sub
mov
mov
cs
mov
mov
sbb
scas
mov
aaa
add
jecxz
stos
and
jmp
xchg
rcr
cmp
jg
xor
mov
out
insb
sti
sub
mov
mov
xlat
pop
xlat
rolb
adc
test
fucompp
cmp
aaa
sub
cmp
or
out
imul
movsb
inc
js
int3
hlt
flds
mov
push
ficomps
movsb
daa
jecxz
dec
pop
pop
divb
pop
mov
mov
subb
jp
cltd
cltd
xor
sub
subb
inc
iret
jo
push
cmpsl
out
sub
mov
jl
jne
adc
mov
mov
add
paddusb
in
dec
inc
clc
xor
repnz
test
adc
dec
hlt
mov
xchg
scas
mov
sub
cmp
push
gs
std
pop
mov
jns
mov
or
shll
cmp
cmp
cltd
sbb
add
jns
mov
inc
xor
dec
add
int3
adc
lahf
cwtl
fs
pop
gs
jle
call
inc
out
xor
xchg
icebp
stos
xchg
divl
adc
inc
loopne
shll
out
sub
jmp
movsb
outsb
loopne
adc
or
lahf
xchg
rcrb
xchg
xor
or
pop
dec
lods
push
pop
mov
pop
aaa
mov
and
aas
push
into
ret
push
mov
insl
sbb
out
dec
fsubl
inc
insb
mov
dec
arpl
movsl
cmpsl
lahf
cmp
adc
sarb
sbb
cli
adc
incl
es
sarl
imul
cmp
lea
xlat
cli
lcall
and
lods
mov
shlb
addr16
pushl
fcmovnb
aaa
or
adc
mov
dec
ja
mov
xor
scas
push
add
push
js
and
jge
imul
jg
inc
sub
andb
sub
and
dec
cmp
or
adcb
mov
call
or
insb
scas
or
in
pop
or
aam
lret
popl
test
lock
cld
mov
dec
sub
adc
loopne
int3
out
popf
xchg
xchg
push
insl
push
jns
ja
fstps
jecxz
or
push
mov
out
fidivl
inc
inc
mov
jmp
leave
stc
cmp
push
lods
loopne
shll
pop
add
push
lods
cli
sub
push
mov
leave
cmpsb
jmp
sub
and
idiv
test
addb
fs
mov
sti
lahf
mov
fistps
pushw
adc
mov
cwtl
sbb
add
add
stc
addr16
mov
scas
aaa
and
outsb
dec
push
in
sahf
pop
fxtract
mov
sub
dec
mov
lcall
and
adc
in
adc
sub
testb
mov
fwait
idivb
lock
fildll
xchg
ficoms
sbb
adc
jbe
add
mov
inc
mov
in
push
in
mov
outsl
adc
push
push
lods
mov
pop
insl
jecxz
out
xchg
sub
jno
push
ret
arpl
xchg
push
push
in
jo
dec
out
inc
iret
pop
and
mov
in
cmp
sub
lock
jne
pop
dec
mov
test
jo
or
ljmp
xchg
xor
or
mov
mov
and
cmp
ret
jns
icebp
imul
push
dec
add
lret
idiv
push
pop
icebp
inc
push
xchg
lods
int3
js
cmp
dec
cld
aas
test
mov
dec
sub
mov
imul
inc
cmc
aas
push
dec
js
cmp
mov
ret
fmul
loope
push
sahf
mov
dec
mov
xor
dec
cmpsl
jl
jno
jmp
call
mov
jb
pusha
fisttps
push
jnp
mov
fildl
iret
sbb
push
xor
mov
xchg
sbb
pop
push
jb
fisubl
lods
sahf
adc
inc
xor
dec
orl
push
sbb
hlt
cmpb
pop
and
int
cld
sub
mov
cwtl
dec
decb
xor
into
fstpl
lcall
dec
push
add
pusha
test
xor
inc
enter
push
push
push
cvtps2pi
inc
pop
sbb
insl
sbb
ds
cmpb
dec
lahf
vmovapd
pop
lods
cld
flds
divl
sub
out
adc
aaa
pop
push
add
mov
outsb
xor
mov
in
aaa
jecxz
sahf
mov
test
movsl
data16
dec
add
fwait
mov
add
dec
out
aas
xlat
fiadds
pop
pop
loop
or
sub
aad
mov
pop
fdivrl
ja
out
sub
sbb
jecxz
add
iret
jae
mov
mov
and
lret
inc
mov
out
call
jle
fmull
cmp
clc
aad
jno
fmuls
cld
pop
or
leave
pusha
repz
jb
ss
xchg
andl
mov
fs
dec
push
push
aaa
lock
insl
pop
sub
inc
pusha
mov
dec
jmp
iret
cs
lcall
cmp
movsb
popf
push
push
jp
inc
vmread
and
mov
addr16
faddl
movsl
pusha
jl
movsb
pop
jg
add
cld
xchg
push
loopne
pop
das
loope
mov
sbbl
push
pop
and
pop
dec
ds
add
int
je
nop
mov
mov
xor
and
and
pop
jg
ret
or
in
mov
sbb
filds
leave
outsl
mov
or
sub
test
pop
dec
mov
gs
or
pop
data16
cwtl
adc
fidivrs
inc
jo
shrb
loopne
movsl
cmp
pop
sub
push
in
js
mov
jbe
rcll
test
sbb
add
popf
sahf
xchg
roll
xor
mov
jno
cmp
jb
repz
clc
xchg
scas
jae
add
sub
nop
jge
lret
faddl
fisubrs
cmp
push
push
imul
mov
mov
in
and
mov
adc
sahf
sbb
sbb
lods
inc
stos
popa
aas
out
addl
and
aas
xchg
cmp
and
icebp
std
nop
jne
fsubs
cmpl
mov
mov
adc
stos
dec
je
mov
lret
dec
sub
xor
dec
lret
dec
and
jnp
sbb
les
aad
and
mov
xor
sbb
inc
ljmp
mov
xor
mov
xchg
xor
jns
shl
jbe
xchg
cltd
push
mov
jmp
xlat
pop
mov
mov
mov
cmpsb
adc
jo
or
mov
call
xchg
cmpsl
mov
add
inc
insl
jns
rol
dec
in
xorb
dec
lret
inc
mull
and
ss
fs
mov
sti
xchg
fiadds
adc
adc
pop
cmp
lret
mov
sti
add
jp
sbb
loop
xlat
cmc
dec
shll
icebp
push
dec
aad
pop
cmp
sub
dec
cltd
adc
mov
cli
sbb
fs
mov
jae
inc
test
loope
cli
xor
xchg
fs
into
fldenv
in
ja
push
or
test
mov
xchg
repnz
cld
leave
shlb
or
dec
js
pop
push
fwait
dec
jmp
push
inc
lods
stos
es
fcomps
fwait
loop
fnsave
aam
pushf
mov
or
pop
xchg
outsb
loope
pop
push
sub
cmpsl
pop
outsl
das
out
data16
dec
mov
inc
daa
in
shll
outsb
mov
lods
dec
xchg
shrl
out
or
jl
arpl
sbb
int3
fldenv
out
inc
inc
cmp
add
mov
ret
int3
into
dec
sub
in
inc
pushf
iret
andl
adc
dec
jns
pop
or
cmp
rcrb
inc
stos
stos
pop
add
insl
adc
das
stos
mov
outsb
das
mov
sub
pushf
call
jno
clc
imul
psrlq
mov
lret
pop
add
jp
and
jp
mov
push
std
js
and
pop
out
xchg
pop
dec
dec
jns
dec
lar
movsb
push
xchg
dec
outsb
test
dec
rorl
cmpsb
push
cwtl
or
aad
dec
pop
ror
and
inc
add
xor
cwtl
ds
xchg
jns
stos
fisttps
iret
out
add
movb
jle
push
sub
adc
ss
mov
hlt
cltd
adc
mov
les
jnp
mov
sarl
push
std
out
notb
mov
movsl
mov
mov
movsb
shrb
sbb
xchg
fadds
repz
add
call
jns
js
adc
hlt
in
xchg
rep
ja
jge
fsubs
mov
adc
out
xlat
lahf
ljmp
cmp
jecxz
enter
mov
jno
pop
adc
jp
movsb
push
push
scas
pop
dec
std
mov
aas
loopne
mov
sub
sbb
repnz
mov
fdivrl
arpl
xor
roll
add
call
cmp
insl
std
pop
aam
std
inc
pop
pop
jb
push
rorl
push
out
and
leave
cmp
lds
mov
stos
add
adc
push
call
dec
inc
inc
jge
mov
addl
mov
ja
mov
std
cltd
cmpsl
fdivrs
sar
xlat
dec
orl
xor
xchg
and
stos
loop
and
int3
and
stos
jb
ljmp
cld
int3
and
jp
lock
jae
fs
call
jb
out
add
in
call
int
xor
mov
or
loop
in
xor
pop
xchg
adc
popa
insb
pushf
jnp
loopne
cmpsb
enter
jmp
dec
xchg
ds
out
loop
inc
rorb
cmc
pop
fstps
inc
mov
xchg
lahf
mov
xchg
out
ja
push
std
adc
push
xchg
into
test
lret
pop
popa
sbb
mov
push
fstpt
add
std
pop
test
mov
jbe
mov
push
das
inc
ret
loopne
jg
and
gs
sub
sbb
lcall
pop
ja
cmpsb
jne
jmp
mov
rclb
jnp
rclb
mov
cmc
mov
popa
nop
push
mov
mov
fldenv
in
pop
pop
xor
cmp
inc
cmpsb
pop
mov
xlat
int
mov
frstor
push
pop
scas
loop
push
lret
push
push
cli
fcmovnu
push
subl
mov
jl
je
inc
jge
push
xlat
pop
xor
pop
add
xor
mov
jne
rcrl
mov
xchg
sub
iret
sbb
adc
imul
adc
fdiv
push
hlt
mov
js
push
inc
mov
adc
adc
into
out
loop
aad
mov
mov
test
sahf
in
dec
xor
add
enter
push
xchg
mov
jno
mov
inc
jne
imul
in
mov
test
iret
push
xor
lods
sbb
jecxz
cmpsl
push
lock
jnp
dec
jl
xor
xchg
sbb
dec
xor
call
sub
adc
xchg
inc
push
and
scas
test
xchg
sub
sbb
data16
xchg
movsb
dec
fnsave
pop
mov
and
dec
inc
ljmp
inc
pusha
mov
adc
jecxz
cltd
enter
or
xchg
cmp
inc
pop
fcoms
loopne
in
into
jne
jbe
xchg
outsb
and
hlt
mov
test
adc
jle
push
xchg
and
adc
sbb
psubq
push
mov
sbb
mov
dec
mov
xchg
jmp
jle
xor
xor
test
xor
pop
jp
iret
push
jae
jl
out
shl
mov
pop
test
cwtl
inc
sub
test
mov
xchg
jns
adc
int3
add
cmp
cli
ds
out
inc
test
sub
mov
xor
pop
mov
jmp
mov
data16
jl
adc
dec
mov
test
int
xchg
addb
shrl
dec
shll
leave
aam
jecxz
push
push
nop
fwait
scas
lret
or
cwtl
jge
dec
repz
cmp
ret
add
sbb
xchg
rol
xchg
and
clc
ss
pop
dec
push
sub
jne
lahf
lods
pop
mov
js
mov
pop
xchg
popa
sarb
mov
imul
sti
aaa
filds
cld
cmc
fs
push
mov
icebp
out
add
shl
sbb
push
dec
xor
call
dec
jmp
push
das
or
gs
sbb
or
sbb
in
mov
in
xor
pop
sbb
sub
ds
lahf
leave
sti
mov
shll
icebp
xchg
lods
push
fisubl
imull
jbe
push
js
pop
pop
cld
hlt
nop
jmp
in
stos
pop
xor
dec
in
push
testb
mov
js
dec
and
add
in
frstor
movsb
in
fnstenv
pop
and
loopne
cmpsl
mov
lret
jge
and
mov
daa
adc
dec
add
sub
es
mov
stos
cltd
xchg
je
lds
sub
lds
lods
fsub
mov
shll
inc
mov
sbb
arpl
sub
cmp
mov
sahf
or
leave
mov
jbe
call
je
jge
sub
cmp
xchg
cmp
into
fcmovnb
imul
sub
aaa
mov
cmp
cmpb
cmpsl
xor
movsb
jg
mov
scas
out
push
dec
xorb
jmp
test
dec
inc
cmc
imul
rolb
sbb
adc
adc
adc
push
cmpsb
jge
pop
and
cmp
pop
bound
fisubl
insl
imul
jge
mov
jp
fld
mov
adc
adc
clc
adcl
mov
push
jmp
sub
pop
jmp
add
int3
lret
lahf
test
cmp
mov
inc
mov
inc
data16
push
pop
push
sub
jb
or
dec
mov
lcall
mov
jmp
ljmp
repz
sbb
popa
repnz
mov
xchg
and
jbe
inc
mov
adc
push
orl
push
jmp
outsb
and
es
int
repnz
aad
jmp
repnz
inc
mov
sbb
inc
out
mov
xor
mov
and
dec
cmp
js
out
push
inc
mov
cmp
add
das
sub
pop
scas
dec
and
repnz
dec
sub
sub
push
shll
fs
push
mov
mov
clc
adc
shll
lret
push
xchg
stc
stc
pop
sub
clc
mov
add
and
sbb
dec
out
cmpsb
push
add
and
stc
lds
das
push
mov
xlat
test
outsl
fst
dec
mov
or
iret
cmp
lcall
sbb
jg
push
push
shlb
xor
jecxz
cmp
sub
sub
loop
icebp
sbb
leave
rorl
shlb
dec
dec
lock
popf
outsw
adc
cltd
mov
ret
shrl
sar
nop
cmp
mov
mov
or
roll
cmp
in
cmp
mov
adc
add
xor
ja
adc
test
fidivs
es
cmp
xlat
adc
pop
dec
mov
jmp
push
addb
sbb
and
inc
shrl
xchg
add
roll
add
arpl
push
mov
jb
int
data16
mov
fwait
pop
shrl
xchg
sub
push
pop
out
and
or
jmp
addr16
push
fistpl
aaa
decl
and
ja
fwait
sbb
je
pop
in
cmp
push
unpcklps
xchg
fsubrp
jns
adc
scas
pop
add
js
mov
dec
repz
or
jmp
adcl
nop
push
fs
bound
cmc
outsl
and
and
and
or
and
and
and
adc
ljmp
mov
xchg
xor
mov
cmp
pop
fidivs
jno
fistpl
inc
out
mov
and
icebp
push
nop
push
movsl
cmc
out
sub
jne
loope
push
hlt
sub
xor
push
popa
gs
dec
movsl
loope
mov
xlat
arpl
mov
scas
fidivl
mov
lret
lods
lahf
mov
fstpt
clc
push
and
xchg
sbb
cwtl
pop
ja
mov
iret
inc
lds
lcall
xchg
pop
mov
inc
movsl
je
scas
xchg
inc
xor
xor
jo
adc
push
push
loope
and
addb
cmp
pushf
idiv
pop
mov
pop
dec
jecxz
and
clc
fwait
jg
lcall
fisubrl
notl
mov
hlt
xchg
push
pop
mov
mov
sub
jnp
sbbl
push
push
inc
movsb
sub
out
add
sti
dec
xchg
test
jne
lods
pop
ret
pop
repnz
push
pop
push
and
rcr
sub
or
adc
insl
std
fwait
push
test
cmp
jmp
inc
out
mov
mov
inc
xor
adc
xor
mov
int3
dec
and
ja
rcll
in
cld
sbb
inc
mov
stos
xchg
dec
ss
cmpsb
pop
push
repnz
stc
mov
pop
ds
xchg
imul
and
pop
incb
adc
adc
pop
decb
pop
jle
filds
sahf
jnp
insl
ds
stos
or
es
mov
and
sbb
xor
or
ss
jo
jmp
stc
mov
xorl
inc
fisubrl
add
push
stos
test
in
movsb
xchg
pop
push
negb
mov
pop
or
sub
mov
inc
dec
addr16
cltd
test
outsb
xlat
aam
pop
jmp
pop
fdivr
repz
xchg
cmc
lds
add
push
aas
daa
jecxz
iret
ss
clc
pop
jbe
in
cltd
xor
pop
arpl
test
and
ljmp
sub
jle
push
push
sbb
pop
cmp
push
popa
pop
sarl
bound
ret
xacquire
cmp
insb
mov
les
pop
bnd
xchg
inc
jp
inc
or
enter
xor
jno
ret
inc
into
or
sub
cltd
mov
pop
push
rorb
repz
clc
orl
jne
jl
add
adc
cltd
data16
pop
mov
lds
leave
fnstsw
insl
int3
and
pop
fucomi
outsb
xchg
testl
ja
std
ss
test
pop
inc
jge
cmp
inc
mov
jae
scas
mov
inc
xor
dec
cmp
pop
cmp
xchg
jne
push
or
into
jne
dec
mov
pop
cmp
adc
popf
stos
xor
mov
rcll
arpl
and
je
mov
in
gs
mov
in
rolb
dec
test
jecxz
testb
das
and
not
mov
xchg
sub
in
jg
lea
cmp
or
cmc
into
lahf
mov
dec
mov
push
out
stos
insb
xor
inc
xchg
jbe
inc
sub
sahf
mov
push
imul
and
push
xchg
enter
lret
jl
lods
or
cmp
mov
call
adc
repnz
and
cld
into
mov
xorl
les
pusha
mov
cs
test
outsl
mov
iret
adc
xchg
sub
loopne
mov
mov
mov
fistps
adc
or
aas
aas
push
push
xorb
aam
repz
jmp
lods
add
push
icebp
lock
shll
stos
int3
jbe
roll
mov
xchg
jb
jb
dec
sti
sub
mov
and
and
push
shrb
inc
mov
or
pop
mov
pop
mov
clc
es
add
adc
and
es
sub
aas
cs
aad
and
jecxz
and
add
call
fsubrl
xor
fxam
xor
pop
pop
out
xchg
gs
subb
or
sub
sub
adc
mulb
inc
pushf
fiaddl
shll
cmp
push
out
push
cmp
movsl
push
add
or
mov
or
stc
les
pop
push
and
inc
daa
and
outsb
mov
es
jne
mov
sub
mov
cmp
and
fadd
jb
and
cmp
jecxz
lods
jp
mov
clc
mov
dec
outsl
testl
adc
push
pushl
mov
xor
pop
xor
ja
or
mov
push
pop
xchg
ret
out
in
arpl
inc
mov
and
stc
mov
ss
sub
adc
movsb
roll
lret
and
in
add
inc
pop
je
decb
popa
add
insl
insb
mov
inc
in
xor
add
mov
bound
pop
cld
loop
xorl
dec
int
pusha
cltd
repnz
cmpsb
push
repnz
js
pop
xor
das
add
movsl
repnz
jle
shlb
inc
jmp
lcall
fimuls
outsl
int
inc
call
mov
cmpsl
movsl
ret
lock
mov
jp
cmp
push
push
popf
jne
popf
dec
xorb
mov
pushf
das
das
sub
sub
pop
aam
mov
push
mov
pop
push
call
dec
fs
and
xchg
lret
jg
inc
sbb
int
inc
mov
nop
jb
lods
xor
xor
mov
btr
mov
sbb
jge
sub
clc
js
jle
xchg
js
rorl
mov
jbe
iret
lods
jns
les
mov
xor
pop
push
aaa
jo
jo
sbb
mov
mov
test
aas
jne
sub
dec
pop
or
sub
lds
inc
andl
xor
movsb
in
shll
push
rcll
dec
sarl
pop
decl
xor
mov
inc
ret
xchg
daa
mov
mov
sbb
enter
cmp
push
jns
es
jbe
aas
adc
ds
mov
loope
in
xchg
xor
mov
inc
and
cmp
lcall
inc
data16
adc
jns
repz
xor
sub
icebp
ss
jbe
bound
sbb
in
out
dec
push
xchg
int
xchg
cmc
or
fsubp
dec
or
cwtl
loope
pop
lock
mov
roll
cmp
mov
or
xchg
mov
lock
adc
icebp
push
es
adc
imul
pop
add
inc
mov
sbb
cmpsb
inc
add
mov
push
in
cmp
leave
inc
in
xchg
cmp
out
sbb
push
sub
and
dec
hlt
lods
and
push
aas
push
adc
ret
mov
and
adc
dec
imul
cwtl
mov
cmp
or
fcomps
in
divl
lret
cs
xor
mov
mov
add
push
subb
fstpt
adc
into
and
rcrl
xlat
lret
dec
in
pop
add
rclb
jae
ret
sarb
scas
mov
dec
int3
testb
sbb
jecxz
cmpsb
jg
cmp
test
inc
inc
inc
xchg
ja
das
movsb
inc
cmp
shll
das
shrl
fwait
les
jno
int
dec
dec
push
movsl
int
jae
fs
sub
push
mov
call
sar
je
xchg
mov
lods
call
in
push
mov
shll
lret
sub
gs
fsubrl
addb
pop
or
mov
mov
sbb
int3
xchg
sub
push
mov
inc
and
fs
xchg
dec
xchg
aam
rcrb
sbb
jmp
dec
jg
addr16
in
inc
test
and
into
gs
addr16
icebp
xor
int
mov
mov
xor
repnz
lahf
test
mov
jge
sbb
movb
dec
push
or
add
lds
inc
or
mov
mov
enter
dec
fcom
sti
insb
xlat
and
es
test
mov
push
aaa
stos
xchg
dec
xchg
sub
xchg
mov
das
sub
add
add
mov
add
adc
rclb
lock
and
stc
outsb
adc
or
rolb
xor
ja
and
push
ret
pushf
mov
shlb
call
and
test
negb
shl
ljmp
jmp
inc
push
mov
les
mov
mov
dec
cmc
negb
mov
jl
mov
jns
lods
mov
or
mov
xor
pop
jbe
imul
cld
sub
lock
iret
sub
xchg
jmp
mov
mov
jmp
fcoml
push
repz
repnz
dec
gs
jnp
scas
dec
fmulp
jl
jl
dec
aas
mov
cmp
imull
mov
movaps
sub
mov
add
pusha
push
test
in
adc
mov
int3
mov
push
mov
push
jns
imul
in
cmp
xchg
mov
mov
ja
addl
repz
lahf
jae
sub
pop
sbb
leave
out
adc
sub
add
orl
addr16
push
and
jl
je
or
push
pop
jmp
cli
pusha
cmp
add
jmp
mov
ja
sbb
test
sbb
loope
xchg
sar
jb
mov
movb
in
sbb
adc
mov
xchg
test
sbb
push
fildl
jo
dec
orb
xchg
jecxz
and
rorb
jg
mov
in
lret
test
push
adcb
call
dec
jae
mov
jno
and
dec
inc
jno
push
jb
or
in
lret
jbe
inc
push
cmp
xchg
movsl
add
test
add
sub
sub
stos
xchg
jg
cmp
jg
add
sub
push
pop
lods
aaa
push
and
sub
push
test
cmpsl
mov
fwait
cmp
or
and
jno
fcmovne
add
stc
or
sbb
mov
xchg
adc
mov
dec
ret
enter
cmp
mov
pop
adc
xchg
test
lea
adcb
mov
cmp
outsl
int3
iret
cmp
pop
ds
mov
cmpsl
movsb
jp
mov
add
mov
mov
ret
xchg
pop
pop
aad
and
shlb
inc
jmp
das
sbb
and
inc
and
cmpsl
xchg
movsb
and
out
cmp
icebp
ficoms
cld
jbe
and
fwait
sub
addr16
jecxz
loopne
mov
sub
mov
in
inc
cmp
int
cld
test
rorl
add
shrl
mov
xchg
sbb
lock
xchg
xor
push
add
lea
popa
cwtl
jl
dec
jbe
aam
xchg
jp
in
jg
loop
js
lret
pusha
fistps
scas
sbb
mov
xchg
in
rep
icebp
inc
or
stos
faddl
mov
inc
lret
push
sbb
xchg
sbb
pusha
mov
call
xchg
movsl
and
loopne
jb
lods
mov
inc
cs
and
mov
je
ficompl
mov
push
stos
gs
cmp
fst
pop
mov
sub
rorl
jge
add
pop
lret
and
push
push
sbb
aad
xchg
arpl
pop
pop
mul
mov
enter
inc
mov
enter
stc
in
cmp
xlat
aas
jbe
mull
mov
cmp
pop
and
addr16
shlb
jmp
lret
mov
jae
pop
data16
dec
jae
mov
sbb
fprem1
add
mov
mov
lds
push
flds
cmp
in
or
ret
int3
xor
sub
addl
adc
ficomps
jp
ljmp
out
mov
pop
mov
fwait
mov
adc
mov
loop
cmp
push
push
movsl
mov
or
test
test
jmp
jmp
inc
mov
xor
data16
mov
mov
sarb
cmc
cwtl
xor
les
add
popa
inc
orl
sub
fcomps
cltd
sub
sub
loope
and
out
aam
inc
push
iret
pop
sbbb
or
mov
mov
add
adc
dec
sti
xlat
test
xor
lahf
ret
ja
and
test
or
mov
and
or
sub
shlb
or
mov
ret
jnp
jl
mov
sti
ss
adc
or
es
adc
stos
rclb
sub
cmp
inc
mov
inc
ljmp
cs
stos
sub
push
stc
cmpxchg
xor
les
push
in
test
sti
xor
mov
cmc
mov
jns
std
das
dec
mov
jle
mov
jl
int3
lods
and
into
inc
mov
or
vmovdqu
int
aad
sbb
mov
push
lret
xchg
add
fwait
lret
adc
push
filds
test
push
pop
pushf
shlb
xchg
mov
xorb
mov
gs
mov
jmp
insl
insb
fistpl
outsl
or
pop
xchg
push
ret
dec
leave
sti
push
and
out
sub
inc
dec
dec
jle
mov
out
pop
clc
enter
hlt
xchg
jp
mov
adc
sbb
ds
inc
dec
adc
pop
pop
add
add
jge
daa
xor
sub
pop
test
mov
scas
pushf
hlt
cli
mov
adc
cmp
cmp
and
xchg
call
outsl
adc
leave
out
push
mov
sbbl
rorl
xor
scas
test
mov
loope
push
lock
xchg
int3
xorb
push
xchg
loop
stos
sub
jnp
scas
inc
out
xchg
testl
and
sbb
cltd
xor
push
aam
jbe
aaa
push
shlb
add
push
xor
ljmp
out
pop
daa
imul
jns
or
out
stc
repz
daa
xchg
call
adc
arpl
das
xor
rorb
lods
sub
das
push
inc
pop
out
pop
xor
sub
mov
cld
add
fisttpl
and
push
jae
insl
mov
xchg
lock
aas
lods
inc
repnz
pop
pop
sbb
mov
mov
std
ja
hlt
mov
cmp
fldcw
mov
mov
push
jae
stc
out
sbb
rorl
lods
jmp
push
pop
aas
and
adc
pop
jge
insb
jae
push
movsb
test
jns
es
loope
stc
rcll
cmp
leave
imul
iret
es
and
cmp
sbbl
es
sub
insl
lods
xor
mov
xchg
pop
jbe
ja
add
dec
xchg
jae
add
outsb
pop
shr
les
xchg
jns
mov
dec
dec
pushf
mov
loope
xchg
ja
cltd
gs
mov
lahf
jg
test
push
sbb
imul
stc
mov
lock
pop
and
xor
cltd
cli
jo
sbb
imul
or
adc
orb
cmp
mov
ja
cmpl
std
inc
pop
test
ljmp
stos
test
push
jne
icebp
pop
inc
sub
pushf
add
ja
divb
mov
decl
inc
adc
push
push
jns
lock
fs
mov
movsb
arpl
adc
sub
dec
pop
sub
xchg
fs
mov
mov
arpl
shrl
pop
fbstp
pop
in
into
in
sub
inc
addr16
mov
fdivs
inc
mov
inc
fidivrs
rorb
push
dec
repnz
dec
sti
push
pop
call
pop
sub
or
xchg
lea
vpsrlw
mov
cmp
dec
stos
mov
jne
test
push
xchg
add
shl
aaa
in
cmpsl
sub
pop
fs
cmp
sbbb
mov
mov
insb
das
lods
sti
xchg
fsubrs
scas
mov
loop
enter
push
in
jno
jmp
sbb
je
hlt
pop
jl
insl
add
ds
rcrb
test
out
and
es
insl
scas
lods
iret
icebp
das
xchg
dec
sub
hlt
lods
mov
fwait
push
pop
xor
xor
fidivrs
stc
ss
sub
dec
mov
or
call
inc
scas
cmpsl
in
inc
into
repnz
cmp
push
js
lret
cmp
jbe
dec
sti
sub
or
testl
stos
ja
and
cmovne
bound
lods
mov
nop
cmc
insb
dec
test
adc
add
add
push
loope
push
push
lret
test
mov
shl
or
lds
mov
cmp
aam
pop
dec
push
scas
aas
adcl
dec
jb
outsl
xor
scas
push
mov
jecxz
mov
ret
arpl
mov
jb
cmp
adc
mov
shlb
aas
das
orb
adc
popf
ja
call
add
addr16
adc
pop
inc
mov
out
imul
push
scas
jno
std
mov
pusha
int3
fisttpll
out
ss
xor
testb
out
cwtl
jmp
loopne
xlat
ja
cmp
out
and
jmp
and
ss
es
jl
inc
mov
pop
and
inc
imul
cmp
std
ljmp
insl
shl
dec
xor
and
repz
adc
mov
movsb
xor
je
push
mov
lcall
aas
ss
mov
and
lret
push
pop
mov
ds
jge
xor
jle
sub
out
sbb
fbstp
mov
mov
mov
lret
xchg
loope
or
lea
pushf
mov
jnp
adc
jge
fnstcw
pop
aas
or
rol
ja
jp
mov
adc
dec
loopne
push
jnp
mov
cmpl
mov
jns
pop
aaa
and
dec
cwtl
dec
jb
pop
add
cmp
dec
sub
call
lret
xchg
data16
jmp
jmp
mov
pop
je
in
push
pop
ret
lcall
cmc
sti
sub
jl
mov
outsl
cmp
sub
and
xchg
sahf
push
dec
xchg
cmpsl
addr16
fs
stc
mov
fs
cwtl
jecxz
andl
dec
inc
cli
mov
in
mov
ret
test
test
je
dec
dec
pop
out
jae
or
outsl
lret
pop
pop
popa
dec
cwtl
cmp
ljmp
out
mov
enter
jbe
jne
mov
pop
pop
mov
sub
sarb
mov
lods
mov
inc
sbb
popa
sub
aad
inc
mov
nop
negl
mov
fisubrs
adc
vunpckhpd
lcall
dec
add
ja
enter
insl
adc
ss
adcb
lret
shrb
add
push
shll
popa
fcoml
xorb
mov
xchg
inc
inc
cmpsl
cmp
or
xchg
clc
mov
addr16
hlt
lret
inc
and
add
dec
or
out
adc
and
enter
mov
pop
sub
xchg
repz
jge
scas
out
lods
mov
lods
cltd
or
jo
aaa
xor
out
hlt
dec
adc
lods
repz
jae
push
into
mov
or
stos
stos
pop
gs
push
dec
xlat
ja
xor
fadds
push
in
cmp
inc
out
push
es
repnz
addr16
xor
sub
out
jmp
ret
jns
mov
hlt
mov
push
mov
inc
add
lcall
dec
mov
push
shrl
lock
fsubp
orl
int3
lcall
fdivs
sub
mov
jg
icebp
dec
mov
push
xchg
mov
in
mov
out
push
cmp
outsl
clc
jb
insl
out
fistps
mov
dec
cwtl
in
mov
pop
out
cmp
shrl
scas
xchg
xor
mov
fmuls
dec
or
mov
dec
xlat
push
cmpxchg
out
mov
mov
mov
pop
popa
push
roll
repz
test
lcall
ja
cltd
andl
fdivrs
sbb
push
leave
xchg
jge
cmp
or
in
in
sub
or
out
mov
push
stc
addr16
mov
lods
pop
add
cmp
call
cmpsl
xchg
gs
pop
xor
test
sub
psubb
sub
lea
loopne
cld
mov
enter
insb
jae
xchg
lea
mov
repz
adc
fmuls
cmp
xchg
xor
mov
lret
inc
scas
push
inc
fnstenv
mov
lret
mov
and
loop
addb
cwtl
push
into
and
push
idiv
inc
cwtl
mov
jne
ret
add
roll
fucomip
cld
and
outsb
mov
mov
sti
insl
pop
aam
mov
outsb
mov
mov
mov
jnp
daa
or
cmp
push
ficoml
lods
scas
nop
icebp
test
push
add
push
ret
mov
pop
push
daa
cmpsb
jp
ja
imul
pop
mov
and
out
stos
adc
mov
rcll
mov
adc
arpl
fwait
push
push
in
into
scas
es
sub
lcall
mov
or
lahf
movsb
test
cmp
mov
out
clc
repnz
testb
ror
lret
int
mov
sbb
fcomi
cmp
pop
push
std
mov
aaa
mov
in
or
inc
push
cmp
shrl
sub
mov
movsl
fistpll
sub
push
into
jle
mov
mov
insb
es
adc
sarl
flds
jp
in
push
push
arpl
fwait
mov
outsl
jne
cwtl
xor
mov
add
cmpsl
xor
jno
mov
dec
in
xor
push
into
add
adc
pop
das
in
cmp
inc
lret
testl
dec
xor
xchg
adc
push
btr
pop
xchg
arpl
add
pop
xchg
lret
xor
inc
fcmovnu
jae
cmpsb
loope
lea
sahf
sub
cli
push
xchg
sub
and
jp
mov
mov
sbb
loopne
mov
test
test
movsb
out
ja
inc
xor
out
jp
push
rcr
mov
outsl
in
jbe
push
or
xchg
repz
pop
sahf
xchg
out
arpl
pop
repnz
sti
xchg
xor
push
jb
push
addr16
ss
scas
fbld
mov
fsubp
push
or
cwtl
ret
lcall
std
cmc
ret
xchg
scas
daa
ret
jbe
adc
sub
pop
and
pop
jle
xchg
mov
mov
outsl
inc
subl
cmp
ja
jns
aad
repz
fldl
outsl
in
in
dec
mov
in
push
push
lods
xchg
or
mov
inc
pop
mov
push
pop
clc
pop
inc
cmpsl
sahf
ljmp
repz
and
inc
sahf
inc
jg
and
and
add
jb
out
das
out
jecxz
mov
mov
jnp
lahf
sbb
or
mov
mov
pop
xchg
or
or
iret
dec
je
sbb
imul
mov
aaa
ljmp
pop
push
adc
and
mov
movsb
lods
sbb
sub
pusha
aam
out
and
sub
lcall
mov
fmuls
fdivp
rclb
fbld
daa
xchg
jnp
pop
adc
push
int3
int
mov
ds
and
sbb
loop
adc
iret
pop
adc
gs
xchg
repz
mov
icebp
mov
jbe
mov
js
gs
insl
flds
mov
dec
in
jo
imul
mov
fsubl
int3
lret
pop
inc
inc
ret
scas
jecxz
mov
push
rorl
jmp
mov
push
inc
gs
jecxz
push
scas
les
in
inc
jns
or
pop
ret
mov
shll
cltd
popa
lea
push
pop
add
xchg
mov
mov
dec
add
push
cltd
cmpsb
lock
pop
sbb
cmc
pop
idiv
loop
mov
mov
inc
pop
mov
lcall
test
mov
orl
mov
aaa
push
push
fcmovnu
xor
ret
jg
cmpsb
mov
fsts
sbb
push
js
js
jmp
fsubrl
push
xor
in
mov
into
pop
adc
testl
dec
pop
and
add
out
iret
aam
xorb
decl
in
test
out
stos
cmp
test
xchg
ds
jo
mov
mov
push
fisubrl
lret
mov
mov
mov
sub
cmp
adc
out
sub
push
fs
out
add
pushf
push
lods
pop
mov
sarl
lret
mov
stc
xor
addr16
andl
hlt
pop
or
fsubrl
push
jg
pop
mov
insb
jecxz
ret
sbb
adc
lods
in
or
push
mov
ret
outsb
fidivs
dec
jb
mov
jmp
fistps
push
cmp
mov
std
cwtl
push
mov
adc
mov
mov
loopne
jnp
inc
sar
ljmp
sbb
cmp
push
outsl
ja
inc
or
lcall
rcrb
or
xor
in
dec
lods
and
sbb
push
shrl
lods
mov
adc
adc
sbb
sarb
rcrl
inc
outsb
adc
ds
outsl
sub
and
xchg
cld
inc
jae
rorl
push
xchg
stos
lcall
xchg
lcall
xchg
jmp
outsb
push
dec
xchg
jns
mov
stos
ficomps
sub
sub
addr16
repnz
xor
scas
testb
xlat
push
dec
fwait
sub
cmp
adc
adc
jbe
push
outsb
add
iret
ss
bswap
adc
enter
jnp
dec
shrl
cmpsl
jp
xchg
add
add
push
lcall
cmp
lds
xor
jg
int3
push
pop
xor
out
pop
push
pop
mov
push
inc
mov
or
stos
loop
sahf
ficoms
addr16
push
repz
inc
mov
or
push
icebp
lods
clc
mov
outsb
add
mov
pop
imul
subb
pop
call
hlt
insl
stc
je
mov
ds
jbe
movsl
pop
cmp
out
movsb
hlt
xor
mov
bound
repz
scas
dec
inc
ret
movb
xor
push
pop
loopne
inc
adc
add
sbb
and
adc
dec
or
and
mov
xor
lret
dec
addb
xchg
hlt
pop
sub
xchg
cmp
mulb
mov
xor
test
xchg
mov
in
sub
inc
jns
cld
sub
outsb
fs
pusha
push
sub
sti
dec
loop
jg
mov
cmpsb
insb
inc
icebp
dec
loope
dec
test
xchg
xor
adcl
pop
sbb
push
dec
xor
ljmp
add
outsb
sarb
daa
pop
jae
gs
fldenv
dec
pop
pop
lds
jmp
dec
jmp
incl
jg
and
and
lds
cmp
add
rorb
es
xor
sarl
or
lahf
cmp
rcll
push
mov
aam
shrl
mov
int3
cmp
lea
sti
mov
sbb
mov
fcmovb
and
and
outsl
add
iret
cltd
pop
add
push
notb
inc
xchg
sub
jp
aam
ror
cmpl
lds
into
daa
pop
inc
mov
jge
push
shlb
cwtl
pop
mov
jge
xor
rcl
push
mov
pushf
div
cld
repnz
jecxz
out
sub
sbbb
or
popa
fldenv
mov
mov
loop
xchg
push
fimuls
ror
test
and
jg
adc
sub
dec
movsl
jns
cli
dec
arpl
sbb
imul
add
sti
inc
imul
sub
or
addb
cmovae
mov
lds
jp
test
mov
pop
dec
ss
cltd
andl
adc
loopne
mov
pop
push
mov
mov
out
xchg
jne
pop
jmp
sub
lret
mov
mov
inc
jle
mov
mov
mov
fmull
fst
cmc
pop
pop
push
divl
jle
popa
adc
inc
imul
inc
and
ret
sub
sbb
test
jl
add
jns
cmp
fdivr
bound
dec
sbb
outsb
jmp
outsb
imul
inc
cmp
xchg
in
lcall
idivl
aas
mov
das
lahf
mov
movsl
popf
pop
and
cmpsl
mov
dec
push
mov
idivb
cli
sbb
dec
push
sub
push
mov
aas
shlb
xchg
xchg
xchg
cmp
fcmovne
leave
nop
out
push
popl
dec
xchg
in
mov
lock
sti
xchg
out
mov
adc
pop
imul
loopne
repz
in
lea
pop
adcb
cltd
pop
push
push
pop
les
inc
sub
ds
fbstp
push
mov
repnz
daa
mov
out
imul
mov
sub
add
mov
out
cwtl
mov
ljmp
adc
cmpl
or
std
dec
jp
lods
ret
or
mov
fwait
push
mov
les
aad
je
fstpt
push
fldl
dec
sbb
xchg
dec
cli
xor
int3
add
hlt
mov
inc
mov
daa
cmp
mov
rcrl
mov
mov
and
sub
scas
mov
sub
dec
in
mov
movsl
repnz
cmp
inc
xchg
incb
inc
sti
xchg
call
lea
xchg
mov
adc
fiaddl
xor
cwtl
dec
inc
test
sbb
sbb
mov
adc
xor
in
mov
xchg
adc
rcl
mov
sub
clc
and
popa
mov
rol
sarb
test
roll
mov
adc
in
mov
cld
jnp
push
mov
mov
mov
dec
xchg
and
jge
mov
mov
aaa
enter
adc
sbb
lods
xchg
xchg
into
pop
dec
jl
outsb
out
lds
xchg
or
in
es
adc
scas
xchg
push
mov
adc
jb
mov
xchg
add
fists
pusha
mov
sarl
mov
mov
loope
cltd
pop
xor
bound
jae
insb
pop
rcrl
fs
xor
adc
out
mov
lcall
push
push
lret
test
sarb
xchg
jne
sub
inc
jp
sbb
add
imul
jo
jmp
js
mov
loope
mov
scas
cltd
rorw
mov
sbb
push
mov
push
add
push
test
mov
and
icebp
sub
xorw
popa
add
dec
mov
add
test
nop
inc
dec
lcall
ds
loop
ja
sbb
inc
mov
sub
int
adc
popf
adc
nop
and
mov
add
daa
dec
push
jno
stos
inc
mov
push
je
and
stc
pop
or
sub
popf
dec
movsb
push
inc
push
cli
push
add
pop
pop
faddl
loopne
sub
jge
and
push
sub
xchg
xchg
mov
xchg
sub
js
ficoml
mov
pop
jnp
stc
adc
push
cmpsb
or
loope
fs
mov
dec
inc
mov
addr16
inc
xchg
movsl
push
jo
fwait
jg
adc
jno
sbb
mov
fsubrs
xchg
fisubl
or
cmp
shll
xchg
rolb
fnstenv
mov
jnp
icebp
xchg
pop
lea
lret
sbb
sub
and
addl
push
xor
jp
push
push
cmp
call
repz
ret
mov
cltd
pop
fldl
sbb
cmp
out
imul
fcoms
cmp
lret
aas
mov
pop
int
stos
flds
lods
sti
add
jo
rcll
xchg
inc
lcall
push
movsl
aaa
bnd
shl
imul
add
jne
lods
fidivrs
ret
dec
pushf
pop
add
xor
fucom
stos
fcmovnu
movsl
mov
adc
leave
stos
add
pushf
movsb
jbe
xchg
cmp
cmp
xor
faddp
shlb
fistpll
fiadds
int
cs
testb
jecxz
ret
xchg
inc
test
fwait
mov
jl
and
popf
and
inc
push
mov
int3
push
iret
cmp
outsl
xchg
in
cld
cmpsb
add
sbb
sbb
rcr
repz
xor
sahf
or
bt
sbb
insb
sbb
jmp
js
mov
ret
xchg
push
arpl
fnsave
add
or
test
push
int
aam
aaa
into
dec
andl
jo
enter
rclb
iret
adc
and
sub
icebp
repnz
push
pop
mov
mov
sahf
and
inc
jge
push
or
cwtl
shr
jl
inc
les
xchg
into
jbe
fnsave
sub
xchg
iret
or
mov
in
data16
xchg
dec
xor
aad
mulb
inc
add
movd
mov
inc
hlt
adc
cltd
sar
sbb
ja
inc
push
repnz
lods
push
xchg
imulb
jns
nop
sub
rolb
call
jbe
in
repnz
push
sbb
xor
inc
and
out
ds
sti
mov
shlb
popf
mov
mov
hlt
ljmp
push
jns
add
movsl
lahf
xchg
shrl
iret
ja
adc
fdivrs
jp
adc
roll
dec
xchg
dec
pop
mov
adcl
shrb
rorl
je
xor
mov
mov
sub
and
ficoml
pop
lods
nop
rcl
nop
and
or
cmp
lcall
stos
and
or
rclb
leave
jge
adc
mov
ljmp
cmpsb
xchg
in
add
dec
pop
pop
notl
sbb
xor
push
lret
call
scas
dec
shrl
mov
in
mov
int
test
push
pop
je
jp
add
stos
jecxz
add
sub
push
adc
mov
sbb
mov
jle
scas
cmp
in
out
ret
lret
andl
imul
cmc
xchg
sbb
mov
lret
ja
push
jne
lcall
cwtl
scas
mov
movsb
scas
push
iret
push
insl
fstps
test
push
add
mov
mov
repz
cli
lret
fmull
fwait
pop
cs
mov
fildll
int3
xor
xor
fwait
cmc
dec
inc
test
cmp
cmc
lds
xor
dec
lods
push
sbb
pop
push
aad
outsb
adc
aas
or
mov
pop
pop
xchg
int
int3
jmp
jns
xlat
fs
xor
int
aaa
incb
xchg
cmc
cld
roll
ret
push
inc
add
fiaddl
dec
and
and
dec
lret
aad
cmp
test
stos
mov
mov
hlt
lods
jnp
mov
cmp
test
repz
pop
push
stc
pop
jo
cmpl
lock
cmp
and
xor
jle
sub
sbb
dec
mov
out
jnp
fidivrs
shlb
test
mov
cmc
loope
xchg
fiadds
xor
pop
imulb
lcall
jg
mov
mov
push
sub
das
xchg
and
sub
inc
xchg
pop
fwait
cltd
sub
and
pop
iret
jmp
pop
out
adc
sub
mov
xor
fimuls
or
dec
sarb
in
int3
lea
xchg
pop
cmpsb
popa
fsubrp
leave
add
scas
pusha
mov
cmpsb
nop
imul
in
dec
aad
add
push
jae
mulb
call
pop
or
pop
mov
and
mov
adc
mov
loop
in
clc
sahf
enter
xor
ror
arpl
xchg
sbb
jbe
ret
pop
ss
pop
or
stc
sbb
out
popa
daa
fimuls
mov
imul
add
pushf
add
mov
lock
xchg
jns
or
add
negb
cmp
sbb
jle
adc
std
call
mov
ljmp
jbe
not
cmpsb
lcall
std
jp
cwtl
scas
xor
ret
mov
adc
mov
std
xor
movsb
shrb
int3
cltd
mov
xrelease
test
into
mov
cmc
mov
fdiv
inc
pop
mov
xchg
in
ret
lret
daa
std
lds
sub
dec
xchg
jb
scas
jecxz
imul
ret
fldl
addr16
aaa
hlt
lahf
subb
jl
cltd
and
cmp
pop
mov
push
push
push
pusha
xchg
sbb
adc
std
mov
movsb
fcmove
in
int
jecxz
push
into
int
or
pop
rorb
pop
mov
jl
arpl
stos
inc
sarl
gs
mov
insb
inc
dec
fidivrl
loop
movsl
out
gs
mov
shl
outsb
push
mov
arpl
mov
sbb
ror
add
outsb
ja
sbbb
sahf
out
cmp
mov
lods
cld
stos
lds
aaa
stc
mulb
enter
cmp
dec
cltd
lret
push
sbb
mov
xchg
repnz
in
orb
cmp
cmp
fbstp
je
daa
imul
sbb
lods
andb
and
into
test
je
test
sbb
fldt
cmp
mov
xchg
pop
out
into
icebp
mov
push
xor
aam
ja
int3
ret
xchg
jp
or
or
cltd
lahf
mov
pusha
andb
inc
pop
sbb
mov
or
adcl
xchg
rcll
cmp
xchg
jb
out
lods
test
mov
outsl
push
sbb
push
inc
call
mov
sub
sahf
int
cld
sub
loopne
inc
test
or
jg
popa
loope
inc
add
je
inc
xor
or
sbb
mov
mov
fnstenv
xchg
pop
int3
mov
pop
adc
jmp
mov
mov
les
loopne
push
push
and
cmpsl
or
in
data16
outsb
push
mov
and
mov
mov
mov
sub
add
or
iret
sub
adc
rcl
insb
xor
jle
lods
dec
push
stos
icebp
jl
loop
int
or
clc
loop
std
aas
scas
jecxz
mov
bound
cmp
and
pop
inc
mov
cmp
sbb
cli
push
jae
push
loope
mov
mov
inc
cld
rcrb
movsb
ds
mov
clc
xor
mov
cwtl
lods
pop
fists
mov
ficoms
stos
test
cwtl
scas
arpl
jnp
add
nop
inc
and
cmpsl
push
dec
fdivs
mov
test
sarb
hlt
xor
rclb
mov
sbb
inc
jg
rcrb
cmp
jbe
adcl
and
dec
fsts
lds
outsb
fsts
mov
or
mov
out
inc
push
lret
call
push
sub
not
inc
and
iret
inc
arpl
popf
push
sarl
popf
jge
push
shlb
ljmp
mov
mov
cmp
subl
fstpt
aaa
imul
mov
dec
sub
sbb
dec
nop
clc
int
cmpsl
mov
xchg
mov
enter
cwtl
js
daa
setge
mov
aaa
or
inc
mov
add
pop
dec
fnstcw
inc
mov
inc
or
mov
sub
add
shll
decb
xchg
iret
jl
jne
add
arpl
sub
dec
push
int
stc
fdivl
add
ficomps
leave
out
popf
cmpsb
fimuls
pop
cmp
scas
pop
and
sti
cld
lock
inc
out
repnz
xchg
or
sbb
fildll
add
sarb
rcl
push
std
and
and
in
subb
and
aam
push
in
cmp
sub
loopne
fnsave
xchg
aam
movsl
jne
fcomps
adc
or
sarb
and
cltd
pop
icebp
sub
lock
jle
lahf
cmp
inc
lods
movsl
insb
mov
xor
and
and
outsb
cmp
adc
dec
loopne
int
jae
movsl
and
mov
inc
sahf
sub
in
dec
inc
xchg
ret
adc
leave
xor
cltd
inc
jae
fsubr
fs
add
cs
inc
jne
xor
hlt
or
push
cwtl
std
ret
jae
adc
popa
xor
repnz
lods
pop
mov
loopne
inc
xor
mov
push
and
into
jns
and
jns
idiv
imul
inc
cltd
pop
jbe
sbb
aaa
gs
pusha
inc
pusha
mov
inc
mov
daa
add
lret
jg
ja
jb
scas
lret
jnp
lret
push
push
mov
orb
ret
sub
and
ret
out
jg
mov
aaa
jno
std
mov
sahf
add
push
dec
in
sub
ja
lahf
xchg
scas
dec
sub
or
mov
cmp
mov
fs
popa
fcomp
fcompl
pop
sbb
mov
and
mov
inc
out
lods
mov
mov
in
add
rcrl
imul
fnstsw
sbb
sub
xchg
test
add
and
loopne
in
xchg
or
adc
lcall
jp
and
xchg
fcmovnu
int
sub
arpl
fwait
insl
sahf
mov
fistpl
pop
push
stos
jmp
sub
mov
fs
sbb
xchg
sahf
lea
mov
xchg
mov
cmpsl
cmc
sub
cmpsb
cs
sarb
popf
dec
cmp
out
mov
je
xchg
add
mov
mov
aaa
sahf
jl
das
dec
or
sub
push
add
call
adc
pop
sbb
mov
inc
and
pop
pop
xchg
mov
loope
jle
fldl
push
jb
cmpsl
scas
stos
ja
andl
repz
adc
lods
or
inc
addr16
repnz
inc
mov
sub
outsl
bound
loope
jbe
sarl
std
rcrb
inc
jbe
xor
loop
push
cmp
cmp
push
jbe
popa
sbb
add
addr16
icebp
push
xchg
inc
push
jno
pxor
and
js
or
seta
push
mov
out
mov
dec
repnz
mov
sbb
xchg
sbb
sti
mov
jbe
stos
inc
dec
inc
fdiv
and
adc
int
aas
movsl
out
sbb
mov
add
aaa
out
add
dec
mov
pop
xchg
dec
insl
push
ljmp
mov
mov
push
sahf
movsb
sbb
mov
dec
imul
mov
push
stos
test
cmpsl
iret
mov
jp
or
adc
jp
xor
add
dec
or
pop
test
pusha
frndint
cs
inc
jo
inc
mov
fistpll
dec
xchg
in
lret
pop
lret
push
inc
loope
inc
enter
add
repnz
pop
add
xlat
xchg
push
hlt
mov
dec
cmp
jge
jb
xor
mov
jmp
push
jae
test
sbb
cld
sub
and
dec
inc
testb
adc
push
and
inc
sbb
ss
adc
dec
xor
xchg
in
nop
or
dec
or
adc
fstps
daa
jg
in
fwait
push
xchg
mov
rolb
test
jns
in
lock
imul
xchg
cmp
adc
adc
adc
enter
out
dec
jl
out
adc
nop
daa
inc
mov
out
xchg
cwtl
jae
or
mov
stos
adc
out
jae
out
lcall
shl
sbb
popa
repnz
movsl
ljmp
inc
cs
lret
add
fadds
aam
test
cmp
fldl
movsl
imulb
and
pop
cmpsb
mov
dec
mov
test
pop
add
sahf
xor
inc
or
out
push
subl
mov
sbb
addl
pop
sarl
cmp
int
xor
xor
and
pop
jne
daa
aam
dec
and
das
insb
xor
xchg
fcmovnu
mov
aas
or
movsl
mov
test
cmp
xchg
shrb
addr16
adc
add
cmova
push
sbb
jmp
inc
mov
pop
movsl
inc
stos
mov
add
jl
inc
xchg
cmp
mov
add
sub
mov
scas
lds
inc
fcompl
mov
jle
xchg
lcall
scas
pop
pop
shlb
loop
ret
and
scas
sbb
dec
jnp
mov
mov
clc
dec
xor
fadds
xchg
inc
lea
rol
lahf
push
and
pop
cld
jg
shll
mov
addl
mov
xchg
and
cmc
repnz
mov
add
cmp
cmp
mov
ja
stc
mov
inc
jle
fcomps
notl
stos
enter
xchg
in
jbe
sbb
popf
jg
adc
daa
fldl
in
negb
and
cwtd
mov
or
or
mov
js
push
xlat
mov
dec
dec
jg
stos
push
cmp
mov
pop
rol
pushf
stos
scas
test
mov
cmpl
mov
and
outsb
dec
cwtl
push
push
or
sahf
fsub
mov
xchg
js
cmpsb
shll
sbb
xchg
xchg
jp
push
xchg
dec
mov
test
push
test
and
and
cltd
xchg
movsl
sbb
dec
clc
cli
movsl
out
adc
xchg
jo
sub
cmp
dec
fisubrl
jo
test
mov
ja
dec
in
mov
pop
test
jae
cmp
scas
ret
xchg
mov
popf
rol
shlb
sub
in
aaa
jge
lret
or
pop
sti
sbb
scas
dec
pop
or
jg
stos
test
xchg
xor
shrb
ret
sub
lea
mov
std
sar
clc
enter
shlb
les
call
dec
xor
lea
add
into
or
pop
xchg
cmpsb
adc
add
jnp
xlat
jne
jae
cli
and
int
or
insl
std
add
imul
xchg
sub
cmc
lcall
daa
mov
sysexit
stc
pop
shll
dec
jo
repz
jle
push
ljmp
fwait
pop
and
jmp
mov
lock
add
mov
rcl
mov
out
stos
push
pop
pop
fwait
push
and
mov
test
inc
pushf
dec
imul
mov
aam
inc
and
in
cltd
dec
jbe
int
je
push
adc
push
icebp
inc
xchg
stos
add
xchg
imul
test
imul
insl
out
inc
es
and
cmp
in
je
nop
dec
test
jp
jmp
dec
mov
stc
imul
sub
scas
xchg
and
mov
je
shll
stos
rorl
outsb
test
stc
jge
sahf
mov
cmp
sbb
add
scas
shrl
lods
or
xor
push
arpl
aam
test
lods
stos
in
test
cltd
dec
int3
ret
and
call
jno
loop
pop
xchg
cmp
bound
ret
jae
loopne,pt
stos
adc
into
push
inc
cmp
and
inc
pop
pop
inc
stos
ja
sub
xchg
push
lcall
lret
sbb
ljmp
decb
outsl
fs
js
fsts
pop
and
cmp
cmp
dec
lea
cmpsl
enter
enter
into
sbb
idivl
xchg
or
in
mov
mov
xchg
filds
push
cmp
and
fsubrl
mov
jl
and
data16
into
dec
out
mov
pop
mov
adc
or
adc
ret
push
adc
popl
fstpl
movsl
inc
mov
pop
pop
mov
push
cmc
lret
popa
mov
stos
sbb
popa
addl
daa
adc
cmp
ret
test
stc
xor
inc
pop
out
fcoms
or
sub
pop
jl
outsb
sub
sbb
pop
repnz
lcall
xor
js
jp
sbb
popa
testb
setle
jo
xor
shlb
xchg
fsubs
adc
dec
jne
shlb
fst
jo
mov
nop
filds
test
push
cld
rcrb
cmp
gs
pop
sti
pop
cs
and
rcrl
push
scas
or
or
or
xchg
imul
js
lods
aam
jmp
leave
inc
jmp
jecxz
mov
aas
sub
and
mov
inc
dec
test
fdivr
iret
in
inc
andb
dec
or
mov
push
pop
push
shl
rcrl
adc
cmc
incl
add
gs
mov
jge
add
sti
xchg
push
pop
adc
cmp
sbb
dec
in
ret
popf
aas
fstps
fcmovnu
in
push
lahf
xchg
fwait
daa
xor
out
inc
xor
pop
and
pop
pusha
leave
repnz
push
out
add
xchg
push
arpl
in
mov
xchg
icebp
mov
sbb
pop
push
std
mov
out
adc
ret
shrb
pop
cltd
add
push
cwtl
cs
test
lcall
daa
scas
sahf
repnz
aaa
pop
sub
inc
xchg
xor
mov
push
ret
subl
xchg
adc
call
in
adc
fisubs
out
jge
cmp
or
push
adc
sbb
scas
imul
or
sbb
les
push
or
and
cmp
hlt
mov
inc
ret
xlat
cwtl
adc
mov
mov
adc
ret
mov
inc
repnz
mov
stos
shl
mov
and
fsubp
scas
ret
aam
enter
push
adc
cmpsb
push
lret
lock
push
pop
pop
xchg
sbb
fcmovnu
jno
pop
inc
cltd
adc
mov
inc
jo
mov
movsl
cli
xor
repz
mov
sbb
daa
cltd
stos
mov
loope
cmp
jno
sbb
adc
dec
pop
lea
das
or
fildll
fldenv
cld
test
mov
add
mov
scas
mov
xchg
inc
insb
pop
push
filds
sahf
mov
adc
xor
adc
pop
test
fdivs
mov
xor
or
adc
jp
or
xchg
iret
inc
clc
int
sbb
push
add
dec
test
or
dec
imul
jg
imul
mov
cmp
nop
lcall
mov
enter
or
lcall
je
sbbl
loope
jnp
cmp
add
sub
or
add
lea
jbe
or
fs
fwait
iret
jae
fidivs
mov
mov
or
out
fs
adc
pop
mov
fadds
mov
adc
cltd
insb
rolb
test
ret
mov
test
sbb
xor
gs
sub
fstpl
call
aaa
mov
movsw
cmp
adcl
cmpsb
enter
push
cmp
inc
cli
mov
rorl
and
popf
insb
jmp
enter
popw
jg
aaa
icebp
rcl
push
enter
mov
orl
pop
pop
sub
sub
adc
ret
jmp
ficomps
insl
hlt
int3
push
or
mov
popl
lret
cmp
or
and
push
mov
iret
push
stos
sub
cltd
mov
fidivrs
jb
push
inc
xchg
and
push
testb
movsl
out
fimuls
push
je
fstpt
in
je
pusha
or
jne
cmp
mov
std
mov
stc
hlt
repnz
bound
mov
fwait
insb
push
adc
mov
fsubrs
add
mov
mov
xlat
aas
mov
loope
sub
icebp
andb
push
xchg
adc
pop
cmpl
add
icebp
push
jmp
adc
lods
inc
insb
lea
hlt
mov
jns
push
lods
mov
call
xor
cmp
enter
mov
inc
dec
add
cmp
sub
xor
or
sbbl
dec
mov
sub
mov
es
test
cmp
int
sbb
daa
testl
and
pushf
mov
mov
sbb
xor
clc
test
sbb
loopne
adc
mov
jns
cmp
mov
ja
cmp
xchg
loop
lea
or
loope
adc
push
pop
xchg
cmc
jns
mov
sub
lea
sbb
pop
fs
lret
cli
int
push
mov
push
f2xm1
or
push
cs
les
lods
aas
ficomps
ret
jne
mov
pusha
pop
loop
add
cmpsb
into
pop
mov
xor
repz
pop
gs
cmp
lock
jg
lahf
sbb
shr
fsubl
lods
lcall
test
pop
adc
jle
test
mov
cmpsb
icebp
cmc
pushf
cltd
push
ljmp
mov
sub
aam
sahf
jmp
sub
arpl
sbb
sub
jmp
aam
push
leave
lock
imul
inc
test
cmp
rorl
push
enter
addr16
js
and
lret
enter
cmc
lock
outsl
dec
in
mov
movsl
inc
rcll
xor
mov
xor
test
pushf
jno
jg
aad
sbb
dec
cmpsb
push
mov
mov
dec
pop
mov
arpl
sbb
and
andl
loopne
sub
push
incl
sti
lods
push
jns
dec
int
loopne
fucomi
jnp
nop
xor
jo
mov
push
pop
lods
push
sub
outsl
je
stos
cli
xor
outsb
sub
inc
fistps
xchg
popf
fidivs
jns
xor
xchg
add
cmp
jne
int
add
mov
rorb
jge
ret
rol
pop
xor
mov
xor
mov
xor
cmp
push
cli
sbb
fwait
adc
add
adc
les
cmp
or
inc
imul
xor
mov
inc
or
sbb
xor
pushw
mov
sbb
std
dec
jecxz
push
dec
cmp
add
jge
sahf
xchg
xchg
inc
push
repz
xchg
xchg
add
adc
xlat
mov
jmp
dec
fwait
mov
push
xor
jmp
int
mov
xchg
dec
add
xor
lea
std
lods
xor
popf
add
cmp
cwtl
nop
cmp
fwait
jns
sbb
xchg
jne
loope
test
cmp
sti
add
lds
sar
leave
mov
mov
add
sub
inc
and
dec
shrl
fdivs
cmpsb
cwtl
fstpl
gs
jbe
cltd
shl
jb
mov
push
sbb
xlat
adc
mov
add
lret
xchg
inc
push
orl
pop
sar
mov
mov
ds
xchg
or
and
jne
aas
jp
into
stos
jne
int
sahf
lcall
das
scas
int
movsl
inc
adc
nop
inc
fidivrl
sbb
scas
lcall
repz
mov
movsb
nop
and
cltd
xchg
insl
sbbb
mov
cmc
bnd
adc
lret
andb
sub
push
sbb
lods
mov
test
xchg
int
sub
sbb
pop
xchg
jg
push
mov
pop
xchg
mov
sub
pop
cld
jae
in
sub
cmpsl
hlt
int
lock
dec
inc
jo
inc
cmp
cmp
cld
mov
imul
lods
in
ret
mov
and
mov
in
sub
sub
jl
es
pop
dec
stos
cld
pop
mov
mov
mov
lcall
int
addr16
mov
pop
cwtl
adc
jp
sub
aaa
push
loopne
les
mov
mov
movsl
shll
imul
dec
movsl
popa
dec
jnp
mov
addr16
es
popf
sbb
ret
dec
aaa
mov
das
inc
pop
adc
nop
fwait
and
pop
cmp
stc
xchg
stos
lock
insl
lahf
push
add
xchg
adc
mov
sar
push
bound
sub
pusha
dec
dec
aad
outsb
dec
mov
cli
or
pop
mov
test
into
loop
push
repnz
fcoms
nop
dec
nop
in
nop
dec
xchg
in
sbb
fcomps
std
jg
pop
and
movsl
js
test
adc
mov
sahf
into
mov
nop
inc
div
xchg
test
jbe
mov
and
ss
fs
pop
sarl
adc
iret
lods
pusha
inc
mov
xchg
shlb
push
mov
xlat
call
call
lret
ljmp
or
icebp
sbb
cmp
sahf
adc
mov
cltd
mov
std
jp
mov
mov
cld
sbb
fisubrl
imul
pop
inc
or
or
int
stos
inc
int3
xchg
or
jo
shlb
nop
or
push
test
int
or
pop
or
out
adc
std
scas
mov
test
xor
fcmovnu
icebp
mov
mov
fwait
es
in
test
je
in
xor
repnz
movsb
aas
mov
call
test
insb
xchg
fwait
mov
sar
shll
xchg
mov
adc
xchg
mov
xor
insl
xchg
cltd
and
cmp
ret
jbe
das
or
fidivrs
outsb
int3
push
test
fsts
inc
lcall
xor
xchg
inc
inc
stos
xor
cmp
mov
sub
loopne
mov
push
cli
sbb
push
test
push
adc
test
jle
pop
inc
mov
inc
lahf
dec
aaa
in
mov
jle
push
pop
ficoml
mov
push
outsl
pusha
or
dec
cmp
sar
mov
xchg
pop
xchg
xor
push
dec
lret
rcll
pop
movb
adc
scas
jns
push
add
inc
scas
jbe
push
leave
xor
imull
rclb
mov
adc
adc
xor
adc
fisubs
or
cld
xor
mov
lret
xor
sahf
insl
cmp
dec
fadds
les
rcl
imulb
push
imul
lds
push
lds
mov
and
jb
sbb
div
mov
jg
pop
lds
dec
xchg
push
pushf
sbb
adc
loop
cwtl
push
jl
pushf
sbb
test
inc
shlb
add
negl
rcrl
scas
ljmp
je
loopne
out
mov
push
sahf
inc
lret
cmp
fs
addr16
push
je
inc
lods
mov
add
sub
mov
cmc
or
and
repnz
or
das
stos
ja
and
pop
repz
fldt
js
cmp
inc
push
jbe
cmp
repnz
pop
cs
sahf
jmp
push
mov
or
jnp
cmp
mov
xchg
insl
jmp
push
sbb
test
subb
je
fldenv
das
cmpsl
mov
push
inc
pop
mov
ds
cmp
imul
push
jne
xchg
sub
mov
std
movsl
bnd
xchg
sbb
sbb
out
dec
test
mulb
iret
mov
mov
xor
sbb
daa
in
mov
xor
push
loopne
mov
imul
adc
sub
jo
xchg
jb
push
cmpsl
mov
jo
or
cmp
mov
sub
and
mov
jmp
loopne
adc
enter
cltd
or
add
hlt
dec
sti
mov
sahf
xchg
lcall
adc
stos
jb
sub
cmp
mov
jle
adc
cvtdq2ps
push
sbb
ret
clc
add
popa
inc
stos
inc
cltd
fld
stos
imul
roll
movsb
cmp
mulb
mov
lret
sbb
mov
mov
dec
popa
out
aas
cmp
cmp
mov
xchg
cmp
repnz
fcom
adc
sub
push
add
addr16
jno
push
xor
popf
jno
cwtl
sbb
in
mov
inc
sub
mov
das
popa
jl
pop
pop
jp
mov
jo
test
mov
fwait
loop
fstpt
mov
movaps
jmp
test
out
pushf
roll
push
aas
dec
xchg
pop
aam
or
or
inc
ret
or
xor
or
dec
mov
push
fidivrs
lcall
cltd
add
call
scas
jns
fs
pop
inc
subb
rclb
cld
mov
cmp
dec
inc
sbb
sbb
pop
mov
xchg
pop
filds
or
shlb
sub
out
insb
pop
xchg
xchg
lea
sbb
sbb
lret
enter
imul
repnz
xchg
xchg
mov
xor
outsb
push
ljmp
cmc
jbe
and
test
insl
dec
mov
pop
aam
insl
decb
hlt
ficomps
sub
arpl
mov
mov
adc
rclb
mov
loopne
aam
jle
lret
xchg
pop
shlb
add
adc
into
mov
daa
in
jp
insb
fcmovnu
aas
mov
or
push
pop
cmpsl
xorl
push
cmp
arpl
stos
pop
jmp
imulb
or
xchg
mov
add
repz
or
pop
pop
fistps
mov
outsb
mov
les
jle
sbb
out
lds
sbb
pop
inc
lods
scas
push
fisubrl
rcrl
xor
cmp
jbe
into
mov
out
sarl
mov
jmp
xor
add
and
jae
shrl
mulw
js
jge
leave
jge
in
mov
or
jl
mov
sub
push
adc
pop
into
std
mov
jmp
pop
inc
xchg
lahf
cmp
inc
mov
lret
imul
aaa
cs
rol
mov
push
cmp
pusha
pop
inc
shr
mov
les
test
fsubrl
bound
mov
xlat
subl
and
cltd
lds
stc
push
sub
jecxz
out
dec
jne
movsb
pop
or
push
jge
lea
jg
mov
out
daa
mov
fildl
or
pusha
push
fldl
loopne
or
mov
mov
add
lods
jp
mov
leave
inc
lahf
mov
mov
insb
outsb
ffreep
xchg
add
add
ret
vmovlpd
mov
mov
fwait
inc
mov
loopne
jb
outsb
nop
out
mov
fcom
pop
jl
mov
xor
or
lcall
sub
inc
shlb
pop
add
cmpsb
cld
mov
mov
imul
inc
stos
mov
ret
nop
sarl
fldl
or
xor
testl
cmpsb
in
xchg
xor
pusha
pop
int3
add
psllq
incl
cmp
test
subb
cmc
or
xchg
mov
jp
imul
in
push
cltd
aad
mov
movsb
ss
cli
inc
sbbl
sbb
jbe
fldcw
sub
adc
aaa
lret
call
jnp
inc
mov
xchg
incl
roll
outsb
xor
push
dec
push
mov
cmp
lcall
fdivr
cs
xchg
mov
xor
sub
pop
cltd
mov
mov
and
cmpsb
imul
inc
jbe
bnd
pop
aas
popa
pop
js
testb
or
dec
adc
insb
ljmp
jae
arpl
xorl
addr16
dec
adc
mov
popf
in
in
cmp
and
stos
or
dec
jle
xchg
fucomp
sti
out
mulb
or
cld
nop
jg
lret
mov
fists
js
test
mov
lds
inc
and
or
lods
jmp
jbe
inc
loopne
cmc
test
sbb
dec
dec
sub
cmpsb
mov
pop
hlt
push
cmp
test
dec
mov
cld
adcl
sbb
js
xor
push
push
clc
mulb
jb
pop
ljmp
xchg
ficoms
pop
mov
add
push
and
adc
adc
loopne
mov
or
scas
and
lcall
cmp
cli
add
stos
test
call
xchg
shlb
lods
lea
pop
jnp
cld
std
xchg
repnz
mov
adc
xchg
mov
fs
push
enter
imul
xchg
push
sbb
add
fiadds
cmp
loop
xchg
mov
pop
jb
xlat
jl
enter
cmpsl
mov
cld
xor
lods
add
xchg
mov
cmc
sbb
cmp
xchg
cltd
mov
test
pop
push
fistl
test
fwait
cmp
enter
sbb
pop
sub
movsl
jg
call
jae
xchg
mov
pop
inc
add
scas
rcrl
lods
dec
fwait
adc
iret
mov
cmc
or
cmp
or
cmp
push
out
gs
xor
adcl
fildll
jl
stos
js
cmp
aad
aam
xchg
mov
mov
imul
popa
pusha
xor
cmpsl
push
add
sahf
jge
sub
adc
mov
sbb
iret
jo
mov
pushf
sub
jecxz
push
repz
pop
mov
lock
or
mov
inc
push
mov
fsubr
push
or
xchg
std
out
inc
fsubrl
push
ret
pop
jo
std
enter
sub
out
cmp
mov
pop
std
push
mov
faddl
cli
inc
pop
aas
xor
xor
add
scas
outsl
cwtl
jns
xchg
test
xor
movsl
pop
daa
and
mov
xor
lock
pop
cmpsl
mov
and
mov
outsl
mov
dec
ja
mov
outsb
xchg
out
lods
and
in
roll
mov
xchg
aad
leave
ja
pop
bound
leave
ja
lcall
cmp
jge
push
movsb
push
das
bound
dec
fists
movsl
jbe
fsubl
cmpsb
dec
xor
xchg
test
mov
addr16
push
mov
xchg
cli
pop
jae
ja
xchg
sub
pop
jle
fdivl
push
cmp
add
mov
mov
mov
mov
cmp
insb
push
fistps
ljmp
ret
or
aam
xchg
shr
adc
xlat
adc
push
in
add
aaa
adc
lret
sub
xchg
push
mov
in
insb
les
out
loope
fbld
dec
ret
scas
dec
pop
xor
in
or
stos
hlt
inc
xchg
dec
sbb
out
xchg
and
ret
pop
fcompl
stos
sub
js
sub
cwtl
jmp
push
aas
movsl
push
pop
mov
fcmovne
pushf
stos
rcrb
out
xchg
jne
xchg
out
push
lret
out
jl
lahf
push
dec
pop
push
jns
sarl
mov
adc
in
mov
daa
mov
pop
pusha
mov
push
and
fprem1
in
xchg
popa
out
sub
inc
aaa
sub
pop
clc
lds
jl
sub
sub
mov
pushf
lea
dec
push
jmp
sbb
push
repz
cld
push
pop
out
adc
scas
fisubs
insb
push
fs
popa
push
cmp
xchg
adc
mov
ret
into
shll
add
push
inc
std
enter
xor
mov
in
lods
stc
mov
fwait
movsb
xchg
pop
outsl
ret
inc
out
std
mov
xchg
pop
push
push
sbb
mov
lcall
movsl
cs
jb
add
push
fstps
ja
cmpsb
fbstp
sbb
fisubrs
fsubp
lcall
pusha
inc
add
loop
mov
push
pop
mov
imulb
push
cmp
mov
mov
xor
in
lock
jne
nop
pop
mov
inc
and
add
mov
mov
inc
not
shlb
jb
js,pn
ss
xchg
add
movsl
mov
ss
push
test
int3
dec
pop
jno
loop
addr16
ret
fnstenv
mov
mov
xlat
or
mov
inc
ja
sbb
jmp
jecxz
add
jbe
lret
push
ds
aam
je
lret
fistl
movsl
fmull
sbb
jmp
jb
or
lds
pusha
add
jb
gs
fwait
pop
mov
mov
das
rolb
jge
mov
or
pop
pop
inc
outsb
cmp
insb
fsubs
ja
xor
stos
and
sub
pop
jmp
xchg
and
movsb
push
add
jb
adc
adc
stos
and
sbb
pusha
mov
test
adc
js
shlb
mov
cli
add
dec
inc
popf
dec
push
mov
inc
lahf
stc
xorb
loopne
push
push
cmp
icebp
pop
loop
rcll
add
xchg
push
lock
dec
icebp
inc
push
stc
push
mov
and
pop
iret
dec
dec
ljmp
sub
mov
mov
xchg
push
in
dec
sbb
xor
mov
adc
ss
test
fdivr
mov
nop
inc
mov
jbe
pop
add
insb
insl
fwait
pop
pop
insl
push
dec
sahf
cmp
mulb
adc
cmp
lcall
out
cmpsl
add
repnz
test
mov
stc
and
ss
in
inc
cwtl
xor
leave
pop
cmp
inc
pop
inc
mov
mov
fdivrp
testb
sbb
out
rorb
mov
cmp
leave
sub
repz
leave
lret
sbbl
iret
fiaddl
push
sbb
lds
pop
mov
fiaddl
mov
mov
pop
fsts
mov
sbb
push
gs
xor
jmp
faddl
or
lret
or
mov
mov
fstpl
aaa
fidivs
incb
mov
xchg
test
dec
xlat
movsl
aas
inc
sbb
lret
pop
out
rorb
adc
fdivr
dec
mov
aam
mov
cmpsl
jb
mov
mov
inc
cmp
popf
push
mov
mov
jbe
outsb
inc
xchg
popf
popa
ret
and
fcomps
pop
dec
iret
je
lods
call
mov
xorb
fcoml
cltd
ss
and
das
jb
add
out
adc
pop
les
dec
mov
and
lret
arpl
push
mov
nop
addr16
push
xchg
scas
add
lds
cmp
mov
and
mov
pushf
xchg
jmp
dec
push
xchg
and
push
add
inc
mov
xor
mov
add
and
xchg
in
js
jae
jg
je
pop
xchg
mov
aas
push
shrl
push
out
arpl
adc
jle
insb
cmc
jnp
mov
sub
inc
movsb
aas
scas
outsl
bound
cmp
pop
mov
jp
insb
ljmp
imul
jmp
and
jg
loopne
jbe
frstor
push
and
scas
push
cmp
out
aaa
arpl
shll
push
or
mov
popf
and
leave
aaa
pop
mov
xchg
std
movsb
scas
add
push
lods
add
pop
pop
mov
outsl
incl
es
jb
mov
sbb
repnz
push
mov
mov
inc
add
dec
xor
lds
lahf
cld
js
sub
xchg
lea
xchg
mov
lret
cli
clc
cmp
pop
sub
and
jmp
cltd
je
pop
mov
shrl
lret
push
mov
stos
sti
pop
pop
repz
cmp
enter
das
add
movsb
inc
shll
dec
hlt
cmovle
pushf
lods
loop
mov
mov
xor
cmpsl
enter
movsb
aam
mov
or
sbb
divl
or
jle
pop
push
out
test
push
dec
mov
mov
std
ds
rol
and
inc
fisttpll
push
xchg
mov
cmp
mov
xor
ja
pop
imul
adcb
and
pusha
lock
dec
cs
call
xor
adc
jnp
xchg
or
inc
call
dec
hlt
scas
add
mov
arpl
shlb
sub
int3
ja
loop
sar
cli
in
add
adc
pop
idivb
lock
imul
popf
sbb
cmp
mov
ret
jbe
cmp
popa
cmp
adc
adc
dec
repnz
out
push
mov
insl
das
lcall
jl
cmp
mov
pusha
sbb
jle
lea
push
cmpsl
pushf
lods
dec
mov
imul
and
stos
or
mov
xchg
bound
bound
or
pop
nop
pushl
mov
imul
fbld
mov
fistps
clc
lea
pop
xlat
push
cld
push
cmp
ljmp
lret
mov
adc
scas
int3
cmp
in
sbb
out
loop
mov
adc
lods
icebp
mov
sub
mov
call
xor
mov
adc
xor
loopne
shlb
push
rclb
stos
xchg
jb
mov
xor
pop
mov
xchg
pop
aaa
mov
jo
ja
and
adc
add
xchg
mov
test
or
arpl
push
push
xchg
lea
jno
mov
ds
sbb
imul
test
out
sbb
and
pusha
ja
xor
nop
stc
inc
icebp
jge
insb
test
xchg
cmp
mov
cld
in
rolb
jl
xchg
xor
mov
xchg
or
dec
testl
and
mov
out
inc
cltd
int
inc
test
add
push
out
jmp
loope
sub
lods
dec
add
fstpl
jecxz
xor
fwait
dec
jo
cs
enter
gs
cwtl
cmp
aaa
pop
pushf
sbb
sub
inc
hlt
imul
inc
fsubr
push
ljmp
popf
sbb
push
sbb
mov
jae
lods
xor
sbb
add
inc
jo
arpl
das
jmp
mov
adc
rclb
add
jae
sti
jge
push
mov
sbb
dec
gs
cltd
sbb
hlt
scas
data16
inc
popf
mov
mov
cmpsb
sub
loop,pt
add
outsb
and
xchg
pop
dec
sbb
xor
cmp
adc
iret
outsl
mov
clc
xchg
insb
xchg
movsb
xor
testb
pop
sub
scas
addr16
movsl
inc
fidivrl
or
mov
rorb
jno
fs
outsl
jns
notl
mov
pusha
jb
into
shll
daa
outsl
xor
lds
xchg
rolb
mov
inc
cmp
fsubs
jecxz
lcall
add
clc
inc
jmp
das
mov
xor
subb
scas
xor
xchg
rorb
not
lock
scas
lods
mov
movsl
aaa
sbb
pop
rep
addl
and
mov
je
push
sbb
subl
jg
mov
mov
and
xlat
inc
mov
xchg
and
pop
into
pop
mov
adc
sub
ja
sahf
sbb
sub
pop
inc
inc
icebp
mul
lea
pop
mov
pop
sub
sub
and
jg
out
jno
imul
shl
adc
ja
xor
rcrl
cli
fmuls
iret
mov
popa
push
ftst
add
pushf
sbb
or
jle
dec
dec
sub
and
mov
jge
or
xor
fisubrl
jns
cmpsb
stos
pop
or
aad
dec
ja
push
loop
clc
cmp
jbe
jno
or
out
in
sarl
xchg
loop
dec
and
mov
push
fdivrl
pop
cwtl
sbb
lods
test
and
pop
cmp
adc
inc
aaa
pusha
lods
sbb
sbb
dec
or
adc
push
jecxz
sbb
mov
jg
cmp
mov
rcrb
push
addr16
jecxz
hlt
push
and
mov
test
fnstsw
pushf
cwtl
add
fcmovb
out
adc
jbe
mov
jns
in
xchg
cmp
mov
push
test
aam
mov
jmp
repz
loope
inc
mov
sub
or
pusha
je
sahf
lret
xor
in
inc
mov
int
and
sub
add
pop
mov
and
add
sub
mov
sub
out
push
sub
not
jecxz
mov
aam
jae
lea
lock
jnp
mov
js
fsubrl
xchg
inc
pusha
lret
das
dec
jae
push
pop
sbb
dec
push
mov
inc
cli
jmp
in
mov
fimull
xorb
lret
or
push
out
pop
xor
movsl
mov
lcall
cmpsb
xor
std
int3
push
clc
mov
outsl
xor
pop
aam
add
sbb
mov
mov
pop
dec
jmp
push
cmp
jns
xchg
fistps
lods
repz
scas
popf
es
std
in
mov
sbb
ss
lods
or
push
lds
inc
leave
adc
mov
xchg
rolb
repz
add
and
addr16
clc
sbb
and
cs
cmpsb
pop
test
mov
dec
nop
sub
jecxz
add
fs
lods
fldcw
dec
ja
sub
xor
pusha
adcb
or
mov
pop
loope
xchg
das
add
ret
data16
mov
jo
push
inc
dec
jle
cmpsl
xchg
cli
lret
popf
push
scas
add
cli
xor
push
mov
fwait
mov
jne
inc
mov
dec
mov
push
push
mov
mov
imul
insb
or
adcl
in
mov
push
stos
daa
ret
xchg
test
xchg
cld
stos
jl
pop
push
jge
xchg
jb
enter
dec
push
fdivs
stc
mov
add
cmpsb
xchg
bound
out
stos
dec
shll
stc
or
or
mov
lret
ljmp
sahf
xlat
jecxz
outsb
sbb
into
mov
icebp
jne
jecxz
mov
adc
xor
sbb
repnz
outsl
jg
call
fwait
cmp
pop
lea
lock
mov
les
push
xchg
adcb
test
lret
xlat
sbb
insl
xchg
mov
loopne
sbb
out
and
pop
shlb
out
loopne
sahf
mov
mov
mov
xor
scas
insl
in
das
or
adc
nop
insl
mov
shll
pop
mov
adc
mov
sub
mov
sahf
shrb
mov
or
jbe
xchg
xor
inc
sti
mov
cs
mov
mov
inc
sub
cmp
sahf
jnp
pop
inc
imul
xchg
imul
pop
outsb
lret
adc
test
xchg
inc
cmpsb
push
aad
pusha
mov
or
mov
movsl
jns
mov
scas
mov
xchg
jg
movsb
mov
ds
adc
sahf
nop
imul
gs
mov
jp
jmp
insl
shll
cmp
xor
inc
divb
add
xchg
dec
cmp
popa
shll
rcrb
jge
add
add
dec
outsl
popa
sti
dec
ds
and
stos
ret
mov
xchg
or
dec
cmp
insl
or
and
stos
shl
mov
rolb
xchg
and
std
sub
jae
je
or
push
push
xchg
insb
xor
push
or
xchg
popa
cmp
xchg
leave
aaa
stc
cli
out
aaa
mov
push
jns
inc
clc
lret
add
data16
pop
cs
ror
inc
es
jp
xchg
arpl
sbb
mov
dec
gs
das
cmp
add
int
es
jle
pop
push
mov
aam
in
mov
enter
mov
jbe
add
mov
daa
mov
aam
jecxz
test
ss
fmull
jb
push
out
push
lret
imul
xchg
shll
in
adc
push
lret
cmc
jne
xchg
sub
ds
ret
iret
aas
das
sub
inc
test
jle
xor
xchg
push
push
popf
push
xchg
inc
jg
xchg
mov
sbb
pushf
mov
xchg
in
cmpsl
and
pop
sub
outsb
jne
jae
mov
mov
aam
add
or
iret
adc
sub
fsts
sahf
sbb
mov
sarl
and
lret
inc
push
fs
in
jp
gs
movsl
scas
in
push
cmpsl
leave
jp
test
sub
mov
mov
clc
mov
popf
cmc
fidivl
xchg
mov
ffreep
popa
jl
in
push
lods
push
pop
and
call
inc
int
lods
xchg
push
inc
mov
xchg
imul
mov
xchg
push
push
and
pushf
pop
mov
lods
popf
and
mov
push
push
inc
mov
pusha
repnz
dec
jne
shr
xlat
aaa
into
mov
sbb
mov
ljmp
aas
push
aam
cmc
mov
mov
nop
adc
mov
scas
xchg
jle
mov
sub
popa
xchg
out
js
loopne
cld
pop
pop
jno
aaa
cmp
mov
lock
imul
or
movsb
loop
inc
dec
xor
stos
mov
pop
ror
or
aas
je
push
scas
imul
push
and
lea
pop
jecxz
cmc
test
in
mov
pop
cmp
and
sbb
mov
sub
sarl
or
mov
outsl
pop
mov
lret
hlt
mov
or
mov
dec
in
push
fs
xchg
insl
push
outsl
sbb
and
jecxz
sub
ja
and
sub
mov
ljmp
test
lret
sub
lods
pop
fcoml
in
repnz
je
jae
mov
sbb
loopne
mov
ds
in
dec
push
mov
adc
ds
mov
out
hlt
cltd
or
sbb
repnz
shll
jo
xchg
pop
fists
addr16
push
out
insl
imul
pop
lcall
filds
outsl
cld
imul
das
mov
cmpsl
loope
loope
ret
arpl
std
pushf
mov
fbld
ret
iret
sti
rolb
pop
es
repz
fldt
mov
and
dec
arpl
aad
adc
es
fisubl
mov
jnp
inc
jl
adc
adc
pop
iret
fnstcw
fwait
or
pop
gs
pop
lds
push
cmp
pop
mov
jbe
inc
lcall
cmpb
sub
das
lret
shlb
pop
xor
jmp
cli
adc
adc
lea
mov
xchg
cmpsb
fistl
cmp
std
mov
lods
iret
add
out
lock
lock
sub
sbb
adc
repnz
adcl
sub
mov
xor
push
mov
dec
imul
mov
and
scas
pop
rcrl
in
cld
cltd
daa
push
test
mov
xchg
pop
popf
pop
add
out
outsb
mov
roll
clc
arpl
cwtl
test
daa
inc
jno
fsub
scas
mov
dec
cltd
jge
shrb
xchg
push
pop
and
pop
aam
pop
dec
fwait
movsb
pop
add
loop
add
cmpsl
mov
aas
dec
lcall
leave
sub
sbb
outsb
mov
stc
mov
fimuls
dec
shll
or
fcompl
lods
or
outsb
dec
xchg
addr16
adc
ljmp
stos
xchg
aas
pusha
orl
rcrl
adc
cli
fdivrl
mov
xor
testb
sub
bound
jnp
xchg
popa
lret
rclb
aaa
loopne
mov
out
mov
fsubrs
lcall
in
sub
push
push
movsl
mov
mov
aaa
push
xchg
inc
imull
aaa
push
sahf
cmp
add
xor
sub
aam
cmpsl
das
cwtl
inc
cmp
adc
rorb
decb
andl
push
add
popf
out
sbb
daa
insb
aam
ret
xor
sti
repz
je
mov
movsl
aas
fdiv
fadds
mov
push
inc
int
push
add
and
sub
sub
add
imul
jbe
shll
jmp
cs
adc
adc
scas
and
and
push
dec
andb
xor
jg
push
rorb
or
mov
int3
fsubrl
push
int3
jg
add
iret
repz
push
cli
jnp
mov
or
mov
imul
mov
arpl
inc
fcmovnu
xchg
pop
popf
popa
lret
inc
push
push
mov
pop
and
sbb
cli
xor
int3
xchg
add
sbb
jns
hlt
data16
and
mov
dec
mov
adc
dec
stos
or
pop
scas
in
imul
cs
sub
pusha
push
xchg
dec
insl
pop
xchg
mov
add
rcl
ret
out
push
pop
jmp
cmpsb
jns
or
lock
dec
mov
add
call
and
cmp
stos
or
jmp
js
inc
out
cmc
mov
into
sub
fcoml
stc
jp
sahf
lret
pop
aas
addr16
adc
mov
cmpsl
aaa
insl
frstor
jbe
and
push
mov
push
stos
scas
movsb
stos
or
mov
jle
jns
clc
aaa
nop
or
jb
nop
popa
aaa
or
dec
xor
pop
sbb
jmp
daa
fiadds
xor
xchg
in
xor
add
fs
xchg
dec
push
and
mov
lea
outsb
in
inc
ds
andb
sub
mov
cmpl
mov
dec
fs
cmpb
sbb
dec
scas
loope
lods
fimull
jbe
xor
dec
jb
scas
int
push
jg
xor
loopne
les
push
jo
sub
or
js
repnz
adc
pusha
jnp
iret
dec
shl
add
aaa
fs
out
insl
into
jne
das
mov
shlb
int3
adc
fisttps
pop
pop
popf
mov
inc
xchg
es
mov
jne
sub
xor
data16
adc
push
sub
fisttps
in
dec
mov
outsb
ret
imul
xor
sbb
adc
pop
nop
pop
scas
in
lret
xchg
push
mov
jns
adc
out
aas
cmp
and
nop
test
lock
sub
dec
cmp
mov
out
and
inc
xlat
mov
mov
mov
push
xchg
jo
mov
imul
in
mov
xlat
pop
bound
xor
push
sahf
lretw
stos
pusha
test
lock
and
xor
insl
movsl
and
test
xlat
pop
xor
inc
out
dec
ficompl
movsb
add
daa
push
adc
or
fisubrl
outsb
and
outsl
sbb
fbld
inc
mov
jl
push
out
imul
fiadds
inc
aas
inc
jg
fadds
fwait
outsb
test
pusha
adc
xor
mov
push
cmp
es
and
mov
jle
pop
loope
scas
cmc
in
push
inc
mov
adc
xchg
les
jno
xchg
inc
adc
cmpsl
cmp
inc
loopne
stos
mov
aam
and
cmpsl
loope
ret
xor
xor
das
ss
insl
mov
lods
pop
movsb
daa
lcall
in
xchg
mov
enter
ja
popa
add
aad
addb
xchg
addr16
push
xchg
and
mov
mov
int3
mov
les
dec
sbbb
dec
push
out
inc
mov
mov
dec
xchg
xor
xchg
or
pop
jmp
js
and
mov
pop
movsl
gs
add
int3
add
clc
cmc
pop
ja
loop
inc
sbb
jb
aam
nop
mov
std
and
mov
stos
fs
cmpsb
mov
mov
push
call
add
mov
and
push
jecxz
outsl
jns
jo
lcall
test
outsl
push
cli
stos
dec
push
cmpsl
addb
and
xor
adc
bnd
lds
xor
add
pushf
adc
aad
out
sub
dec
mov
mov
sti
and
adc
xchg
push
outsb
je
stos
fidivs
pop
mov
mov
inc
dec
push
int3
dec
and
jae
xchg
push
cwtl
aad
lret
xchg
xchg
add
enter
sahf
iret
add
dec
pop
pop
and
mov
xchg
shlb
repz
fs
adc
cs
xor
adcl
mov
cmc
sbb
push
xabort
push
adc
mov
dec
xchg
addr16
xchg
insl
inc
push
push
xchg
fstpt
adc
fsts
sub
cmp
lret
cwtl
dec
xor
xor
or
loopne
aam
mov
mov
push
mov
aaa
mov
and
xchg
rolb
sbb
and
popa
push
lcall
jbe
fs
jo
xlat
fidivs
addr16
jmp
call
inc
data16
lcall
dec
popf
cmp
daa
xor
mov
cmc
mov
sbb
cmp
xor
ret
orb
pop
out
sbb
lcall
ret
test
push
lret
mov
inc
ret
out
jmp
adc
in
imul
and
or
aam
mov
mov
and
mov
in
leave
cmpsl
sar
cltd
mov
popa
cmpsb
inc
push
inc
push
lret
pop
dec
xor
in
jnp
mov
into
mov
fwait
jmp
or
jne
mov
movsl
push
xor
pop
xor
xor
pop
sarl
mov
sbb
icebp
fistpll
test
clc
stos
shll
insb
xchg
aaa
inc
xor
adc
je
jbe
js
jge
rclb
sub
pop
cmp
imul
shrl
and
inc
pushf
jge
push
or
pop
cmpsl
mov
pusha
cltd
dec
aaa
or
jmp
dec
xor
rcrb
dec
les
adc
sbb
mov
shlb
lock
xor
xor
and
aam
pop
rcrb
lods
mov
and
jbe
adc
pop
sub
and
xchg
adcl
adc
jge
aaa
and
dec
scas
jae
pop
fptan
test
push
adc
out
ss
push
push
movl
outsl
sub
inc
cmp
dec
dec
cli
mov
mov
pop
ss
out
imul
ja
push
loopew
ljmp
add
ja
fcmovb
je
pop
ficoms
dec
add
and
cmp
movsb
dec
rcrb
dec
dec
mov
sti
popf
loope
addr16
xchg
push
xchg
imul
scas
daa
jge
movsb
jns
popf
pop
cmpsl
sbb
mov
xchg
add
xchg
mov
aad
jp
inc
mov
mov
or
push
or
mov
cli
push
repnz
mov
mov
mov
add
xchg
cld
fcompl
push
xchg
loop
jle
mov
or
mov
pop
roll
mov
loop
inc
pop
lea
out
sub
sbb
repz
or
rclb
lods
pop
fs
add
dec
push
jbe
push
es
ja
cltd
jb
pmovmskb
jb
mov
loop
push
xor
cld
dec
ret
loopne
cmp
fnstenv
ja
out
movsb
jl
enter
mov
and
xchg
lock
push
lcall
sbb
cld
test
mov
jns
sbb
sub
mov
aaa
outsl
push
lcall
out
jno
sbbb
xor
ret
jg
fldt
in
dec
cs
enter
cmp
cltd
pop
andb
add
jmp
dec
les
jg
cmpsb
xchg
call
sub
inc
ja
push
addr16
mov
pop
pushl
in
sub
rcrb
xchg
adc
push
mov
lock
gs
fidivrl
add
hlt
cmp
mov
mov
mov
cmp
sub
sarl
cmp
or
popa
mov
cmpsl
add
or
cmc
mov
popa
cmp
pushf
loope
inc
std
popf
fisubrl
push
js
mov
adc
add
inc
pusha
jl
repz
mov
neg
xor
imul
ret
clc
iret
adc
cmp
bound
mov
xor
inc
cmp
add
ss
sub
gs
push
and
xchg
int
push
add
out
cmp
cld
pop
outsl
cmpb
dec
or
fs
repnz
outsb
add
mov
stos
pop
test
loope
mov
sti
or
xor
ljmp
shlb
aad
and
int3
ja
sub
enter
adc
jmp
stc
test
outsl
pop
and
popf
sahf
js
fnstenv
xor
bound
xchg
or
stc
decb
mov
subl
inc
mov
jbe
iret
rcrl
cmp
int3
jmp
and
mov
push
dec
adc
xchg
daa
sub
iret
dec
cld
xchg
adc
push
sub
mov
and
cs
lds
add
popl
arpl
shlb
sub
mov
scas
in
out
mov
scas
adc
sub
xchg
fbstp
out
mov
push
mov
imul
loop
fwait
sub
mov
fimull
daa
push
in
movsl
add
jecxz
push
js
and
xchg
push
sbb
adc
cmpsb
icebp
outsb
aas
das
push
aam
sar
inc
adc
loop
sbb
or
icebp
push
push
roll
stos
adc
jno
cmc
inc
xor
pop
jge
stos
cwtl
push
dec
xor
cmpsb
pop
aas
push
insb
inc
fdivs
or
movsl
cmp
dec
pop
adc
orb
in
push
outsl
call
testl
xlat
xor
xchg
int
jg
aam
cltd
dec
insl
mov
push
sub
in
push
inc
adc
mov
adc
rorb
mov
movzwl
dec
dec
jmp
fcmovu
add
push
and
shlb
mov
aad
shl
inc
and
ret
lret
outsb
loope
daa
stos
sub
jp
leave
out
stos
pop
xor
push
es
sbb
pop
push
cmp
dec
nop
or
cmp
fiadds
fists
add
and
cmp
cmpsb
jp
ret
mov
xchg
lea
lret
lea
iret
adc
adc
adc
and
dec
fldl
cmc
mov
cli
push
mov
outsl
mov
sbb
adc
adc
xchg
dec
xor
jecxz
and
cmp
add
nop
out
or
inc
dec
cmp
sbb
cli
dec
loopne
cmc
hlt
pop
add
leave
xchg
mov
out
out
cld
shll
and
aaa
xor
adc
mov
dec
push
invd
and
mov
inc
cmp
xchg
sbb
push
sbb
mov
cs
cmp
dec
or
rcrl
outsl
push
les
jae
lahf
jle
cmp
push
scas
or
dec
hlt
mov
xor
shll
rcrl
rolb
or
jl
add
lcall
adc
cmp
dec
mov
nop
xchg
out
pop
pop
idivl
mov
and
dec
pop
inc
mov
jbe
add
pop
cmp
arpl
inc
pop
fildll
stos
push
xchg
add
cld
or
cmp
pusha
insl
cmp
pop
addr16
decl
sub
add
mov
stc
fmulp
cltd
pop
movq
pop
and
sub
scas
gs
and
cmp
dec
std
cs
sbb
push
jmp
dec
aad
jb
in
daa
xchg
ds
and
sbb
xor
fildl
mov
aam
sarl
jb
push
dec
test
fistps
daa
jecxz
push
jmp
dec
mov
dec
subb
xchg
xchg
xchg
push
clc
cltd
clc
inc
sbb
mov
mov
loopne
lea
stc
cwtl
imul
cmp
adcl
psraw
cmpsl
les
in
imul
cmc
ljmp
aad
mov
or
imul
mov
lods
insl
sbb
idiv
into
pmulhuw
push
loop
outsl
add
cmpsl
mov
int
pop
mov
push
fidivs
jo
xor
mov
lcall
in
adc
in
rcr
lahf
jb
mov
test
jae
or
inc
pop
cmc
stc
lods
out
pop
pushf
add
js
mov
push
push
sub
sarl
loopne
mov
je
arpl
xchg
push
cmpsb
push
xchg
mov
push
in
mov
pusha
stos
cli
pop
mov
push
xchg
int3
pop
push
mov
cmp
cltd
pop
insl
aam
int3
cmpsl
stos
sbb
pop
lret
not
pop
or
mov
inc
test
ret
xchg
fnsave
or
push
icebp
dec
push
pop
lea
out
enter
or
ljmp
pop
jns
and
and
inc
jg
xor
sub
pop
mov
mov
scas
sbb
pop
xchg
stc
lcall
push
test
push
fnsave
push
fldcw
lret
out
fnstcw
aas
pop
insl
mov
pop
stos
pop
pop
inc
push
mov
icebp
and
xor
adc
add
jns
inc
iret
test
xor
clc
jmp
mov
or
inc
inc
mov
pop
jb
mov
pop
popa
dec
xor
iret
jae
push
cltd
lods
fs
popf
sarl
daa
push
jp
ss
xor
ja
xor
lret
inc
mov
adc
mov
pop
inc
stc
flds
lret
jo
sbb
outsl
outsl
pop
cmp
sub
mov
inc
pop
dec
inc
mov
mov
xchg
sub
pop
repnz
in
setae
js
xlat
mov
insb
sub
fcmovnbe
mov
jno
push
pop
enter
mov
ret
xchg
ret
test
lds
stc
mov
inc
xchg
jg
cli
dec
sub
ljmp
repz
in
pop
push
lret
mov
sub
mov
push
jmp
addr16
push
adc
out
cmc
mov
pop
int
insl
movsb
jb
call
clc
cld
push
jmp
push
mov
mov
fbstp
int
sub
push
lea
jg
lahf
cmp
xchg
out
shll
or
int3
sub
bound
xchg
aad
rcl
outsb
int
mov
out
mov
inc
mov
cmp
and
push
paddq
test
dec
fimuls
mov
iret
cwtl
sbb
out
dec
ss
in
xchg
shlb
mov
xor
mov
mov
and
jb
mov
mov
shll
out
add
sarb
outsb
cld
es
and
or
push
sbb
imul
loope
add
xchg
ret
lea
mov
push
jg
push
call
call
pop
pop
pusha
inc
out
dec
pop
jecxz
dec
mov
je
xchg
dec
cmp
clc
lds
fs
and
ret
push
jnp
jmp
lods
popf
mov
mov
sahf
pop
push
dec
push
movsb
dec
mov
lock
mov
cmp
sub
jecxz
out
push
pop
mov
sbb
and
test
mov
mov
dec
lret
stc
out
push
movl
fdivs
add
aas
in
loope
imul
mov
and
jmp
mov
push
mov
in
std
dec
inc
inc
dec
movsb
push
lret
sbb
das
popf
pop
pop
xchg
lea
sti
ss
icebp
xor
cltd
mov
sub
sarl
loop
pop
cld
outsb
movsb
xor
xor
inc
in
leave
add
adc
repnz
add
jmp
sti
mov
fucomp
cld
dec
push
not
sub
ja
sbb
mov
repz
inc
sbb
and
lods
ret
scas
js
add
inc
stos
push
cmp
movsl
mov
mov
sub
cmp
cmpsl
fcmovnb
pop
pop
dec
loope
movsb
pop
mov
sub
pop
jb
das
add
dec
outsl
lea
test
out
or
sarb
push
dec
sarl
js
mov
icebp
xor
sub
mov
popa
dec
xchg
icebp
push
int3
cmp
outsl
leave
test
sub
mov
mov
push
ret
mov
pusha
and
mov
dec
inc
lret
movsl
lea
jle
jecxz
fisubs
mov
add
dec
xchg
mov
mov
fstpl
aaa
test
loope
add
repnz
add
push
xor
fcoml
daa
nop
lds
cltd
sub
cmpl
in
dec
jae
jg
test
aad
rcrb
xor
rolb
sti
jge
xchg
popf
adc
loope
jecxz
and
mov
add
cli
dec
ja
push
push
mov
inc
jg
or
sub
cli
inc
cld
movsb
into
add
pop
das
idivb
push
loope
lcall
in
mov
adc
cmp
jns
out
loopne
push
xchg
movsb
sub
dec
test
rcl
add
filds
mov
arpl
sub
sbb
mov
or
decb
sarb
xor
es
es
jbe
xor
mov
stc
mov
mov
repz
push
xlat
dec
movsb
pushf
mov
into
loop
lret
mov
aaa
mov
dec
push
je
bound
addb
xor
xchg
movsb
jmp
rol
enter
jmp
fsubs
pop
mov
push
push
jae
mov
jg
push
pop
push
adc
mov
es
mov
iret
sub
fsubrl
in
je
xor
and
fwait
lods
outsl
mov
fstpt
adc
xchg
leave
fdivl
mov
mov
das
xchg
xor
xor
sbb
leave
or
sub
xor
std
test
lcall
inc
insb
mov
in
or
je
or
jns
imul
popf
cmpsl
pop
stos
and
das
mov
push
imull
pusha
ret
mov
mov
cmp
stc
jo
lds
xchg
mov
ja
inc
testl
sbb
insb
xor
insl
aam
add
bound
js
jne
cs
stc
loopne
std
cmp
rcll
ret
mov
int
loopne
xchg
jle
push
or
ds
sbb
jns
push
mov
ds
je
push
mov
add
pushf
push
test
out
jmp
stos
inc
pop
and
movsl
popa
pop
in
jg
cmp
mov
adc
test
mov
jns
outsb
xchg
call
push
mov
in
stos
adc
jns
imul
sbb
das
push
aaa
sbb
push
and
xorl
inc
int3
mov
in
inc
cmpsl
adc
cs
mov
xchg
mov
pushf
mov
fwait
dec
scas
movsl
fstpl
in
inc
out
fimull
shll
rorl
or
mov
sahf
test
adc
enter
push
cmp
mov
mov
jae
stos
or
repz
xchg
jp
js
aam
pop
addr16
sbb
dec
fcomip
stc
fiaddl
pop
jecxz
inc
cmp
in
leave
mov
daa
mov
out
jae
jne
mov
icebp
push
sahf
imul
push
mov
sbb
adc
rclb
addb
mov
cmp
ja
inc
call
push
push
sub
push
das
jns
insl
aaa
sub
movsb
mov
push
lock
nop
xchg
mov
sbb
fisubrs
xchg
mov
xor
inc
lods
gs
repnz
test
dec
pop
in
cmpsl
andb
aaa
stos
pop
aaa
ret
pushw
subb
das
mov
jl
movsl
xor
lods
pop
inc
addr16
push
popa
loop
stc
int
js
and
xor
push
lcall
imul
push
add
push
inc
xchg
or
call
int
aad
outsl
add
jo
pusha
shll
aas
pop
pop
mov
jns
scas
and
sbb
mov
movsb
xor
xchg
push
or
pop
jge
adc
jbe
mov
rcr
mov
negl
mov
decl
shlb
cmp
std
push
mov
insb
daa
mov
aad
int3
and
enter
or
or
idiv
movsb
test
dec
insl
ret
jno
pop
incb
or
xchg
cmpsb
xor
sbb
inc
out
loop
iret
xorb
adc
xor
mov
adc
xor
mov
mov
inc
stos
cmpsl
pop
pop
lea
lods
pop
inc
and
cmp
mov
cmp
gs
xchg
bound
std
pop
xor
stos
push
add
mov
lock
xchg
shl
and
pop
and
jmp
mov
mov
das
fcoms
lahf
push
xchg
nop
fmul
xor
xchg
jmp
cmpsl
int3
xorl
xchg
repz
fsubl
scas
fstpl
and
sbb
lcall
mov
fnstsw
aas
jo
xchg
xchg
dec
rcrb
adc
lret
popa
ss
aad
mov
adc
pop
in
pushf
shlb
sti
mov
ds
inc
lret
sbbb
mov
iret
adc
fs
adc
jo
pop
cltd
push
add
repnz
or
enter
mov
add
inc
mov
mov
sub
and
test
dec
sub
and
add
pop
push
imul
xchg
in
or
outsl
push
les
sbb
cwtl
fidivl
jo
push
add
dec
mov
mov
fiadds
pushf
in
popf
cmpsb
pusha
adc
ficompl
inc
aam
pop
add
dec
sahf
outsb
mov
mov
div
add
or
pop
jp
arpl
popf
adc
jmp
sbb
jmp
pop
jo
dec
out
mov
les
jge
inc
ret
cmpsl
mov
dec
mov
mov
mov
push
shrb
jp
shll
adc
insl
mov
pop
clc
out
das
or
push
cmp
out
and
or
inc
mov
jno
adc
into
or
imul
push
cli
jecxz
xchg
push
imul
jle
push
mov
pop
cmc
adcb
add
mov
inc
test
shlb
sti
rclb
mov
jbe
mov
icebp
mov
arpl
cmc
mov
cmp
pop
inc
sarl
pop
popf
cs
pop
imul
sbb
inc
sub
xor
adc
jp
xor
cmp
pop
mov
lret
jge
sbb
lret
or
clts
lock
pinsrw
leave
mov
sub
mov
xor
push
int
jbe
mov
push
xchg
shl
outsb
mov
cmp
add
lahf
das
or
jne
lahf
xor
cmp
fwait
mov
sti
outsb
sbb
xor
sub
push
push
push
sbb
and
outsb
jl
ja
imul
ja
pop
mov
jae
push
mov
push
cmovbe
ret
xchg
mov
jne
ljmp
fcoml
xchg
fldl
aaa
cmpsl
sbb
fildl
cld
pop
out
aam
insb
out
inc
mov
adc
loop
jae
pushf
inc
out
inc
dec
pop
dec
sbb
shlb
sbb
add
mov
push
aaa
push
mov
insl
jl
sub
subl
jmp
out
rorb
mov
or
out
jb
loopne
mov
jge
mov
lahf
in
fdivr
jp
jne
xchg
and
or
shrl
loope
scas
push
lret
adc
jno
in
xor
mov
xchg
xor
icebp
fwait
bound
push
int3
mov
stos
int3
andl
adc
inc
xchg
fnstcw
sti
sahf
push
hlt
inc
ds
push
sub
mov
xchg
popa
stos
movsl
mov
rorb
out
imul
pusha
xchg
sub
js
pop
bound
clc
adc
popf
loopne
mov
sub
lcall
leave
pop
push
int
dec
stos
pusha
int
mov
jbe
xlat
aas
inc
into
jmp
mov
cld
fcoms
in
xorl
in
cli
fcoms
test
adc
mov
xchg
inc
rcrb
shl
repz
out
xchg
cmp
xchg
int
xchg
xchg
jmp
aam
data16
sub
sbb
mov
lock
sbb
aad
push
dec
mov
imul
pop
sub
out
addb
mov
cwtl
aaa
fs
pop
roll
inc
adc
aaa
mov
pop
mov
sub
movsb
mov
jge
mov
mov
mov
cmp
cwtl
push
dec
sbb
or
lret
into
mov
jmp
and
subl
mov
mov
jecxz
fs
or
or
mov
mov
test
xor
icebp
fucomp
les
pop
sbb
int3
movsl
and
or
aad
mov
sub
or
and
and
sti
inc
jnp
push
add
jnp
mov
popl
pushf
xor
mov
pushl
iret
dec
enter
jo
es
adc
xchg
cmp
lret
leave
and
scas
jbe
dec
pop
dec
jbe
pushf
ss
lret
loopne
xchg
push
arpl
add
xchg
lods
pop
aaa
cmp
shlb
or
dec
jo
dec
push
imul
xchg
iret
aas
jmp
and
jo
xor
push
mov
lea
pop
or
es
jne
inc
subb
jecxz
cmp
mov
orb
xor
inc
shlb
adc
into
test
jnp
mov
test
daa
xor
xchg
or
es
push
dec
jmp
push
imul
lods
xlat
imul
sub
ds
and
lds
or
movsb
add
test
push
pusha
pop
sub
add
ljmp
fildl
sbb
movb
mov
aad
popf
nop
movsb
clc
push
es
push
xchg
pop
cmp
pop
jnp
imul
xchg
and
mov
mov
or
sbb
insl
xor
xchg
xchg
pop
sub
int
xchg
lods
xorl
ja
mov
jae
cmpsl
out
cltd
xchg
cld
mov
iret
fs
iret
mov
push
lods
movsl
jg
stc
pop
divb
dec
mov
inc
push
sub
fwait
jp
cmp
and
pop
fcompl
sti
lds
adc
push
push
lods
cmp
leave
imull
sti
jo
cmp
jle
sub
sbb
push
mov
call
stos
mov
xor
rcll
js
lea
out
data16
mov
push
xchg
mov
add
jecxz
loope
mov
xchg
adc
fbld
std
rolb
cmp
fs
enter
nop
dec
insl
lcall
popa
in
push
cmp
int3
sbb
data16
addb
push
ds
adc
push
test
in
push
push
or
push
and
lock
test
sbb
push
ret
stc
lods
test
cmpl
movsl
add
xor
rcl
jbe
push
mull
iret
xor
mov
fdivrs
mov
jno
inc
xor
add
pop
cmp
popa
lret
scas
mov
aas
arpl
mov
mov
scas
sbb
shlb
fmul
sub
ret
xor
xor
push
scas
cwtl
inc
or
mov
sbb
cs
jle
fisttpl
mov
test
or
insb
les
xor
add
adc
push
das
mov
or
int
or
mov
aad
push
adc
call
inc
adc
test
mov
mov
jbe
mov
pop
push
mov
hlt
mov
enter
loope
fistpll
adc
mov
das
subb
loopne
cld
in
imul
add
mov
xchg
js
test
dec
je
dec
or
mov
push
mov
sbb
es
cmp
cmc
ficoml
sub
ds
insl
sbb
lahf
mov
mov
std
mov
mov
sbb
inc
mov
daa
mov
stc
sbb
inc
mov
xchg
fidivrs
arpl
adc
out
push
sarl
cmc
lret
sbb
mov
dec
and
scas
inc
lods
push
insb
pop
add
push
adc
jl
lcall
xchg
std
outsl
repnz
lcall
lret
add
int
div
add
cmp
ja
xchg
bound
mov
int3
les
cld
mov
test
test
dec
cld
mov
hlt
pop
dec
popl
xchg
rcrb
push
hlt
jae
adc
test
adc
mov
xor
xor
xchg
adc
pcmpeqb
and
pushf
and
int3
fistpll
stos
adc
les
mov
imul
cmp
ds
sbb
int
inc
pop
into
jne
mov
add
mov
sbb
in
adc
data16
scas
mov
nop
loope
mov
cmpsl
fidivs
daa
mov
sbb
mov
push
arpl
or
sti
jecxz
xchg
sub
xchg
push
or
cmp
clc
loop
xchg
jns
pop
inc
lea
mov
je
test
dec
sahf
or
xchg
movsl
fisttpll
mov
xchg
or
sub
popf
fwait
lret
jb
repnz
fsubr
cltd
sub
sbb
es
ret
push
sub
xor
sub
xor
push
dec
clc
fwait
mov
sbb
mov
push
flds
and
addr16
lds
fcoms
cmp
dec
or
ret
lahf
rolb
fisubrl
fcoml
jmp
adc
add
lret
into
mov
jnp
movl
mov
pop
loope
js
loopne
push
clc
adc
mov
lods
fsubl
sbb
stos
pop
jnp
push
mul
push
dec
push
push
or
lods
pop
aaa
shll
shl
repnz
jne
out
or
xor
cmp
aas
mov
cmp
ret
mov
mov
shll
clc
pop
int3
and
outsb
sbb
sarb
push
sub
and
xchg
ss
ja
xchg
orb
xor
xor
jnp
shlb
in
and
lret
xchg
rolb
ds
mov
sbb
jne
sti
mov
fstps
ljmp
cmp
icebp
push
scas
adc
test
sub
xor
imul
xchg
insb
jno
leave
out
mov
mov
fdivrs
lock
dec
jg
pop
inc
popf
rcll
fnstcw
pushf
xchg
std
dec
pop
fs
jp
dec
cs
jl
inc
repnz
test
inc
xlat
js
and
fiadds
sarb
nop
sub
lock
push
das
dec
cmc
jb
iret
mov
sbb
rolb
mov
popa
rolb
cltd
scas
mov
repz
xor
sahf
int3
mov
jno
xchg
lods
jne
adc
lock
lret
leave
stc
int
and
lcall
mov
lahf
push
jle
pop
mov
insl
mov
aas
aam
icebp
pop
xchg
sbb
mov
push
ds
repnz
mov
pusha
clc
addr16
push
mov
xchg
mov
in
push
movsl
mov
das
xchg
mov
pop
fisubrl
lods
out
insl
cmp
aam
sbb
adc
insb
fmuls
iret
inc
aam
push
inc
shlb
sti
xor
sub
pop
mov
add
fldenv
dec
adc
add
loopne
lea
in
lret
fmull
js
mov
push
cmp
mov
out
adc
mov
test
ret
sbb
scas
sbb
lds
sbb
jp
adc
adc
mov
shl
push
imul
daa
adc
add
and
sbb
call
arpl
jne
adc
cmp
xchg
mov
mov
mov
xor
scas
jg
fwait
insl
and
add
adc
add
testb
add
mov
xor
sbb
pop
orl
out
add
xchg
lret
inc
unpckhps
cmpsb
lods
dec
inc
mov
daa
mov
stos
sub
sub
hlt
add
stos
test
mov
cmp
sahf
sub
dec
push
lock
sarb
inc
lret
imul
dec
xlat
adc
inc
push
stos
pop
out
pop
and
stos
gs
outsb
data16
ljmp
pop
loopne
sub
mov
or
and
into
dec
xchg
fisttpll
xchg
in
dec
inc
aaa
and
es
icebp
subl
je
sub
test
iret
or
ljmp
mov
adc
bound
clc
int3
mov
mov
inc
pop
shll
pop
ret
dec
loop
out
cmpsb
push
inc
shlb
jno
out
in
sbb
and
out
and
call
cmpsl
mov
jnp
mov
pop
mov
sbb
aad
popf
fwait
add
mov
in
fsubrl
hlt
mov
adc
scas
add
outsl
aad
and
ds
insl
loop
call
xor
cmp
push
pop
arpl
or
enter
out
or
mov
int3
loope
xchg
inc
int3
je
inc
cmp
fadd
in
pop
jecxz
mov
sub
dec
xchg
cmc
or
pushf
push
inc
inc
add
andl
ds
mov
pop
nop
sti
leave
sbb
add
or
rcll
imul
pusha
out
fstpl
pop
xlat
lahf
in
sbb
add
or
pushf
fldenv
adc
test
xor
jle
inc
nop
out
arpl
xor
loopne
mov
rol
sub
adc
lds
push
pop
and
mov
mov
dec
fs
xchg
aam
cmpsb
jecxz
xchg
xchg
hlt
and
lcall
pop
push
test
mov
and
clc
test
mov
mov
mul
scas
pushf
jmp
movsl
push
push
pop
jmp
fldl
mov
mov
xchg
repz
xor
fiaddl
push
ja
mov
push
mov
cli
xchg
dec
std
in
sub
or
fimuls
jp
mov
movsb
lods
cmp
fnstenv
xor
push
outsb
dec
dec
andl
xchg
sbb
sbb
ret
or
add
push
cmc
pop
lret
or
pop
out
es
push
inc
mov
fldl
es
test
mov
aas
call
leave
hlt
hlt
xchg
xchg
lret
inc
inc
lret
leave
movsb
stos
test
pop
and
jo
mov
or
stos
test
imul
add
mov
mov
push
mov
iret
mov
adc
cli
shll
je
std
fdivrl
or
push
cmc
pop
pop
pop
pusha
sbb
fwait
jg
pop
push
jl
loope
xchg
push
jne
bsr
stos
test
aam
into
sbb
dec
cmp
popa
lds
cmpsb
inc
into
and
out
das
push
jecxz
push
int3
jmp
mov
mov
je
hlt
ret
add
adc
inc
ret
cld
jo
pop
xchg
test
pop
addr16
lock
popa
adc
js
sbb
cmp
or
add
loope
repnz
pop
arpl
cs
cmp
jle
dec
sub
rep
adc
dec
pop
push
xchg
xor
mov
dec
insb
add
enter
cmp
cmp
test
inc
div
xchg
mov
xchg
push
jmp
rcrb
or
inc
int
cmp
nop
or
pop
and
sbb
mov
push
push
or
jg
jp
dec
dec
adc
fstpt
jb
sbb
cld
enter
or
adc
jne
incl
lret
ja
or
add
arpl
mov
adc
pop
jmp
jle
aam
out
pop
outsl
mov
mov
mov
sub
mov
mov
and
rcrl
das
insl
scas
jbe
stc
shll
sar
mov
adcl
ret
dec
nop
dec
into
repnz
mov
mov
jg
pop
lret
push
mov
fiaddl
into
loop
cli
jae
push
fcompl
push
jmp
mov
mov
lret
das
daa
cmp
pop
sub
test
sahf
stos
in
subb
fadds
pop
mov
lahf
gs
fcmovne
test
lcall
xor
sahf
loopne
inc
insb
repz
add
out
add
mov
push
sarl
insl
xchg
mov
sahf
enter
data16
out
enter
push
js
orb
cmpsl
jnp
imul
mov
and
pop
roll
jge
out
adc
lahf
xchg
shll
mov
jb
loope
or
mov
cld
xor
adc
stc
pop
sarb
stos
mov
push
mov
mov
aas
mov
or
mov
mov
inc
xchg
int
int
pop
push
xchg
mov
dec
popa
pop
hlt
push
sub
and
or
je
or
cmp
out
cmp
leave
jle
popl
fiaddl
mov
lea
pop
enter
pop
in
inc
mov
jb
roll
xor
les
fdecstp
mov
lock
mov
aam
sbb
jnp
xchg
mov
push
pop
xchg
mov
xchg
pop
bound
cli
cmpsl
mov
xchg
fidivrl
out
jno
mov
push
add
jne
inc
ds
cmp
adc
xorb
aaa
sbb
shl
int3
mov
add
movsl
jle
pushf
xchg
clc
ret
movsl
mov
insl
insl
jge
ret
fisubs
pop
rolb
call
inc
cmpsl
ret
or
clc
jno
xor
decl
add
adc
sub
shrl
repnz
jo
mov
or
andb
adc
hlt
repnz
xor
add
mov
orl
sbbb
push
mov
pop
aaa
imul
and
xlat
cmp
cmp
mov
mov
mov
inc
adc
push
jnp
movsb
xchg
jo
sub
mov
dec
out
out
push
loop
sahf
sbb
jg
mov
idivl
ret
xchg
and
mov
shll
leave
pop
add
imul
mov
push
pop
jne
sbb
test
xlat
or
jnp
les
in
stos
loope
mov
icebp
icebp
mov
jno
scas
cmp
dec
out
jno
xor
imul
cli
add
sti
jnp
ljmp
mov
sbb
ret
dec
roll
inc
dec
jns
add
adc
aaa
dec
out
fbld
fwait
out
ljmp
loope
jecxz
ljmp
rcll
cs
imul
int
imull
lret
mov
xchg
push
mov
test
bound
stos
scas
adcb
or
mov
push
aad
loopne
push
sbb
lds
aaa
outsb
push
insl
push
cmpb
adc
dec
dec
mov
cmp
mov
pop
imul
pop
xlat
iret
lods
jl
and
mov
xor
jle
inc
cltd
lcall
jecxz
and
push
mov
inc
stos
push
aad
in
sub
jae
jnp
or
orb
push
aad
jo
out
and
mov
lods
mov
lea
test
add
hlt
leave
ds
les
pushf
dec
jge
sub
inc
adc
into
or
movsb
fidivs
ret
ja
sbb
push
es
in
test
jp
out
or
mov
ss
mov
sub
push
lret
mov
lds
cmc
jp
mov
scas
sub
mov
inc
fsub
push
pop
cmp
inc
fistl
pusha
arpl
dec
xchg
scas
jecxz
and
push
mov
cmp
jno
in
add
pop
pop
push
mov
lods
stos
xor
popf
cmc
adc
mov
hlt
les
dec
xor
mov
mov
mov
outsb
sub
inc
cmc
pop
xchg
out
sbb
mov
adc
push
mov
push
sub
mov
shll
xor
mov
push
shrb
push
jge
sbb
dec
dec
sub
std
sbb
imul
movsb
sahf
jo
sub
sbb
movsl
sub
xchg
aam
mov
daa
or
out
ja
imul
adc
out
sub
push
sbb
out
lods
push
daa
cmp
push
inc
dec
inc
push
iret
frstor
mov
mov
jecxz
jmp
cmp
sub
mov
aam
jo
push
sbb
xchg
aam
add
sbb
sbb
xor
dec
add
push
leave
lcall
and
imul
int3
ljmp
cmp
data16
lods
ss
shll
dec
jmp
outsb
insl
movsb
jne
mov
xor
mov
jb
sub
inc
dec
pop
cmc
les
jg
in
addr16
out
sar
or
cmp
pop
jns
js
ja
outsl
adc
enter
in
mov
popa
adc
inc
lea
add
hlt
lock
aas
pop
xchg
lds
fldl
ds
inc
jecxz
out
mov
pop
aaa
push
jle
pop
add
add
loopne
xchg
mov
mov
dec
push
loop
out
xchg
aad
xchg
or
mov
and
push
or
popa
lahf
sbb
xor
fidivrl
inc
push
out
push
cmpsl
es
jmp
adc
inc
inc
sbbl
mov
mov
rcrb
out
fwait
dec
push
loopne
sarl
sub
sahf
movsl
je
pop
mov
and
bound
sarl
push
int
js
xchg
add
fs
mov
test
test
mov
mov
mov
mov
mov
clc
inc
fldz
jb
jl
shll
pop
xchg
pop
pop
repz
int
xchg
push
cmp
jnp
lcall
out
sub
pop
iret
mov
mov
mov
test
sbb
sti
and
ret
out
adc
int3
sub
jnp
jne
test
ljmp
pop
sbb
add
dec
scas
pop
mov
xchg
xor
jnp
loop
dec
les
inc
sti
popf
sub
push
cwtl
idivb
fwait
push
pop
xchg
std
fdecstp
inc
mov
xchg
mov
mov
push
push
out
cmp
in
jmp
xor
sahf
add
not
sbb
fcomps
adc
push
pop
mov
adc
adc
pop
jge
insl
cmpsl
push
fmul
loop
dec
fstps
aas
fmulp
sub
lea
adc
into
xchg
xchg
data16
out
loop
call
shrl
adc
xchg
pop
mov
xchg
mov
and
fnstcw
std
xchg
push
aam
push
test
sbb
test
nop
pop
ds
mov
dec
mov
push
lds
iret
out
jnp
mov
rcl
cwtl
inc
loop
repnz
or
daa
sahf
cmpl
or
cmc
jbe
push
movsb
daa
imul
jle
xchg
in
pop
mov
jp
and
cmp
add
test
jmp
or
repnz
aaa
jns
cmpsl
icebp
sbb
sarb
xor
gs
pop
shrl
ss
mov
call
in
in
and
mov
clc
jle,pt
cld
xor
addb
sub
xchg
inc
inc
pop
inc
adc
dec
jae
push
ljmp
je
rorb
lcall
adc
mov
mov
xchg
or
cmpsb
scas
aad
jg
lcall
mov
js
fwait
xchg
adc
out
cmp
push
enter
fidivs
sub
add
add
sbb
mov
neg
mov
pop
mov
clc
clc
fwait
push
popa
cmp
push
clc
pop
test
subb
sbb
pop
cmp
arpl
test
add
aaa
push
out
les
lods
movsb
repnz
push
or
jge
les
js
and
out
dec
xchg
mov
sbb
ss
xchg
pop
xor
mov
inc
mov
cmpsl
push
cmp
add
mov
xor
sbb
fmull
push
addr16
pop
jecxz
mov
loopne
or
add
ljmp
std
das
mov
mov
in
jns
add
cmc
shrb
ficomps
add
clc
movsb
nop
xchg
fwait
mov
mov
mov
aad
ja
jae
dec
sbb
or
cwtl
sub
sub
cmpsl
mov
lahf
ds
pop
add
into
shll
xlat
dec
sub
xor
sub
or
iret
lret
xchg
cs
add
jmp
popa
xor
test
cmc
das
leave
rcrb
mov
iret
sbb
in
adc
loope
mov
push
cltd
xor
xchg
stos
lock
add
or
dec
mov
dec
adc
lock
rorb
sub
call
aam
popa
and
les
or
mov
inc
jecxz
cmp
push
mov
pop
leave
mov
inc
mov
pop
or
lods
lock
pushf
fdivr
cmc
fildl
jno
adc
repnz
stos
hlt
mov
push
adc
test
and
lea
add
pop
movb
or
mov
clc
jmp
xor
jmp
sbbl
bound
add
xchg
imul
lcall
test
loope
ljmp
sbb
out
push
jl
mov
pushf
aam
lock
ljmp
mov
stos
cmp
test
sbb
lcall
inc
nop
push
std
and
xor
xchg
cmc
and
xcrypt-cfb
cmpsl
popa
mov
sarb
mov
jmp
jl
sahf
push
iret
mov
jb
push
jnp
xchg
loope
push
pushf
or
rcrl
jnp
sbb
leave
and
mov
xchg
sbb
pop
mov
call
sub
or
jb
stc
arpl
ss
inc
dec
and
jae
inc
dec
mov
into
ficomps
sub
xor
mov
xchg
adc
leave
fisubrs
sbb
pop
and
add
lea
movb
in
rcrl
adc
push
cmpb
insb
sub
out
into
push
ja
lock
dec
cmp
sub
scas
arpl
repnz
sub
push
xchg
xchg
jg
xchg
cmpsl
add
scas
xlat
jmp
push
test
mov
lock
decl
movsb
add
mov
mov
pusha
stc
mov
push
ret
fwait
push
lods
bound
jns
ja
stos
fiaddl
dec
mov
mov
lock
adc
pop
call
add
loopne
cmp
add
sub
mov
sub
sbb
xchg
mov
andl
lods
jle
jmp
dec
and
xchg
lcall
pop
xor
xor
nop
pop
mov
xchg
sbb
icebp
add
scas
xchg
ljmp
lcall
dec
push
faddl
push
clc
shlb
mov
movsl
xchg
xorb
adc
sti
inc
jo
pop
mov
incb
aas
outsl
subl
inc
pop
pop
gs
mov
sub
mov
nop
xchg
fimull
stos
test
push
inc
jbe
cwtl
ret
cli
pop
out
lea
mov
dec
dec
test
out
inc
mov
test
cwtl
push
insl
movsb
sub
fidivl
mov
mov
or
cmpsb
int3
cld
cltd
push
and
jle
adcb
inc
out
dec
cld
popa
dec
pop
xchg
aaa
lock
in
sub
andps
and
popa
sub
push
sbb
xor
jmp
jae
jnp
xchg
mov
icebp
in
mov
lret
fstps
push
push
jg
dec
xchg
and
in
pushf
push
xor
into
enter
call
dec
iret
sbb
or
push
movsl
sub
cmp
mov
std
mov
xchg
sub
ret
mov
repz
xchg
mov
aaa
sub
mov
lods
fs
dec
incl
mov
pop
lock
and
pop
add
ret
jae
enter
mov
mov
jnp
subb
aaa
movsb
and
cmpsb
popa
xchg
aaa
jle
add
dec
ret
pop
dec
mull
adc
repnz
xchg
or
test
dec
dec
jns
dec
inc
in
adc
ds
sbb
aam
jmp
adc
icebp
pusha
jo,pt
stos
lcall
push
xchg
mov
lock
dec
pop
adcb
scas
adc
ret
inc
push
cmp
mov
fsubrs
pop
pop
es
inc
push
xchg
jo
or
mov
mov
mov
dec
ret
movsl
xchg
imul
and
divb
mov
xchg
inc
sub
loop
cmp
loopne
push
push
pop
leave
and
sarb
js
push
leave
cwtl
sbb
aad
xor
fwait
int3
fdivl
mov
loop
fcmovnb
aam
mov
lods
mov
xchg
scas
and
xor
inc
dec
scas
pop
cld
lds
push
sbb
sbb
push
mov
jg
std
or
scas
ljmp
cs
flds
xor
pop
pop
ja
cmc
orb
sub
sbbl
aaa
stos
mov
mov
push
sbb
sub
dec
jmp
and
mov
es
push
ds
aam
stos
sub
mov
pusha
dec
cmp
or
pop
add
cmc
pop
arpl
mov
adc
lahf
inc
add
cmpsb
dec
dec
pop
stc
les
fucomip
and
adc
add
cmp
sub
pusha
jmp
xchg
int
mov
xchg
stos
movsb
xchg
inc
ret
pop
je
jo
xor
inc
into
mov
inc
mov
xchg
scas
dec
or
cmp
in
pop
mov
jb
data16
xchg
push
sub
stos
addr16
mov
call
std
sti
inc
inc
inc
mov
mov
fdivp
ret
stc
jg
push
rcrb
fldcw
add
in
push
bound
push
aas
test
mov
ror
mov
xlat
add
div
leave
jge
push
test
movsl
mov
jecxz
jp
js
or
je
cwtl
out
mov
loopne
add
xor
add
mov
loopne
xacquire
add
inc
lock
pop
int3
inc
das
mov
and
or
fadds
jecxz
and
pop
pop
jno
mov
sub
jecxz
xchg
xor
les
xchg
aam
pop
xor
sub
cmp
aam
push
pop
sub
idivb
xchg
jb
int
pop
aas
jns
loope
mov
fistps
cwtl
add
pop
dec
dec
aaa
scas
clc
xor
adc
mov
xor
jp
js
cs
popf
lods
dec
cmc
adc
mov
sbb
jns
sub
inc
enter
out
sub
test
push
adc
out
xor
fwait
test
fdivrl
scas
inc
adc
pop
stos
or
push
aaa
clc
inc
mov
mov
xor
scas
fsubrs
pop
or
aas
mov
or
out
push
sbb
xchg
insb
and
call
inc
iret
fdivr
sarl
imulb
add
or
or
std
adc
ljmp
sbb
in
std
lea
inc
jne
cmp
cmovp
jae
cmpsl
mov
sbb
mov
pop
enter
in
lods
scas
push
cmpsb
loop
push
stos
dec
shrl
xorl
leave
jno
xchg
lds
insb
xchg
or
adc
pusha
jle
out
scas
or
mov
cmpsl
movsb
into
mov
sahf
leave
subl
jno
and
out
adc
mov
jp
sub
fwait
and
push
imul
stos
pop
fsts
imul
scas
int
dec
adc
push
add
mov
mov
jp
adc
cmpl
insl
pusha
call
cs
mov
cmp
add
pop
pop
and
cmp
add
jb
inc
xchg
jns
cmpsb
adc
sub
cmpsl
out
vpmacsdql
pop
mov
inc
notb
xchg
out
jmp
push
in
jno
ficomps
sub
push
les
mov
cltd
mov
stos
xor
aas
adc
sbb
and
nop
xchg
fwait
dec
mov
icebp
jmp
outsb
aam
jnp
mov
add
sbb
or
sub
xchg
jnp
rorl
cltd
inc
cltd
mov
mov
jle
addl
jge
or
pop
inc
jecxz
hlt
inc
mov
cli
cmpsl
jns
adc
adc
dec
push
ds
xchg
jbe
imul
adc
jle
dec
fs
xor
jge
out
jp
pop
mov
pusha
movntps
int
jno
cld
adc
xchg
add
mov
cli
shrb
mov
out
sarl
lahf
xchg
fists
xor
jmp
jp
sbb
lret
negl
cmp
jns
int
call
inc
in
or
cwtl
push
lret
fildl
or
inc
mov
les
insl
enter
enter
fldcw
popa
rorl
xor
push
dec
std
mov
mov
xor
imul
imul
mov
insb
mov
cmp
jmp
cmp
jmp
cld
sbb
adc
jo
ret
jbe
lahf
add
daa
cwtl
cmpl
outsb
and
pop
lods
xchg
push
test
jns
jo
sbb
and
push
mul
xchg
roll
shll
push
pop
xor
sub
push
jle
mov
movsl
shl
inc
mov
clc
js
mov
fwait
inc
pop
scas
push
dec
adc
adc
adc
daa
cmc
mov
sbb
push
or
out
adc
cmp
xchg
pop
cli
dec
es
hlt
cmp
or
cli
jl
mov
pop
mov
cmp
dec
mov
or
std
test
or
ss
adc
fistl
mov
sbbb
add
insb
cmp
repz
out
cmp
add
push
mov
add
mov
imul
inc
lea
rolb
jmp
push
inc
mov
push
mov
aaa
js
popf
mov
repnz
mov
jb
movb
divb
jae
fmuls
test
outsl
js
jge
out
andl
fidivl
mov
or
std
inc
add
cmp
outsl
push
mov
insb
add
jbe
mov
mov
or
hlt
ljmp
out
cwtl
lock
push
pop
stc
xor
nop
insl
push
cmc
in
add
push
ror
cld
ss
call
js
xor
xchg
frstor
nop
mov
ljmp
pop
xor
add
jnp
or
xchg
sarb
dec
pop
fnstsw
cmp
jae
jb
je
dec
push
mov
inc
faddp
dec
or
hlt
adc
outsl
sbb
xchg
xor
add
sarb
stc
hlt
xor
cmp
stos
inc
dec
mov
inc
mov
test
ficompl
mov
std
mov
popf
cmc
push
xchg
gs
testl
sbb
pop
ljmp
lods
mov
sbb
or
pop
cmp
lods
out
ljmp
cmc
pop
xchg
adc
addb
jae
test
lcall
add
pop
inc
push
sbb
fs
pop
ja
xchg
mov
pop
out
sub
aam
test
inc
mov
ja
bound
bnd
int3
mov
mov
stos
pop
insl
xor
es
sbb
ret
test
sub
mov
add
dec
add
mov
inc
test
jo
lods
jae
xchg
fs
xchg
pop
fiadds
dec
jg
sub
xor
imul
sub
xchg
popf
xor
cli
das
movsb
bound
insb
ljmp
sub
push
nop
sti
cltd
fnstsw
outsl
lcall
or
xchg
scas
dec
popa
mov
mov
mov
mov
scas
mov
jge
fs
push
inc
sbb
je
sub
lds
imul
xchg
das
daa
xor
cmp
fildll
cmp
inc
inc
cmp
stc
mov
fldenv
aaa
ja
inc
add
sub
and
or
mov
inc
negb
inc
mov
loop
xor
repnz
imul
stos
pushf
ret
fcoml
std
jg
fisubrs
hlt
rcll
xor
sub
or
ljmp
insb
bound
rcrl
repz
es
hlt
xor
test
jo
mov
iret
jbe
insl
pop
xor
andb
lods
cmpsl
jecxz
mov
xlat
rorb
dec
add
mov
xor
test
sub
mov
imul
cmc
mov
fcompl
pop
jae
or
cmp
data16
pop
dec
and
mov
add
pop
add
ret
into
pop
jmp
ret
icebp
fs
icebp
shll
push
icebp
mov
scas
xor
shrb
daa
popa
fwait
nop
sbb
sub
lcall
sbbl
mov
aaa
or
ss
and
repnz
aad
mov
cmp
xor
push
jl
addr16
jnp
xchg
cwtl
arpl
andb
rorl
pop
jnp
into
hlt
outsb
adc
xchg
inc
dec
pop
mov
pop
out
scas
xor
cmp
push
leave
jns
inc
adc
pop
adc
or
pop
loope
ror
mov
jb
jb
cs
loopne
mov
add
cmp
pushf
adc
and
ret
fcompl
hlt
sarb
scas
cmpsb
or
dec
ss
pusha
hlt
xor
cltd
mov
mov
push
pop
xchg
sbb
sti
inc
jnp
test
sbb
mov
push
lods
jae
adc
daa
sbb
xor
mov
sahf
add
jecxz
sbb
cld
rcrb
fsub
dec
push
inc
out
sbb
test
xor
sti
push
or
pop
mov
cwtl
loope
lret
call
sbb
dec
pushf
imull
inc
and
mov
adc
loopne
hlt
cs
jl
push
push
jae
dec
movsl
out
aas
rol
sbb
mov
jge
sbb
fwait
jo
ret
icebp
aam
mov
and
imul
add
cwtl
jmp
int
xchg
mov
imul
cld
inc
lret
pop
sub
sbb
outsb
imul
inc
push
mov
pop
stos
in
push
aaa
mov
out
adc
aam
xlat
fimuls
aam
inc
cmc
and
dec
dec
cmp
aaa
in
rclb
xchg
add
test
add
inc
fldcw
test
xchg
sub
jne
imul
jecxz
insl
lock
inc
sub
dec
mov
inc
jl
jge
mov
enter
test
push
das
adc
ds
repnz
pop
js
jp
sub
scas
notb
xchg
cmc
mov
leave
repz
lret
daa
mov
cmp
inc
nop
repz
mov
jg
addr16
ds
sub
or
cmp
mov
jp
mov
sbb
out
lds
push
pop
mov
into
imul
dec
inc
sbb
iret
xchg
shl
in
mov
inc
add
inc
aaa
push
mov
fmulp
clc
imul
fcoml
mov
pop
repnz
sub
stos
jno
aas
cmp
lds
xor
mov
aas
inc
sub
or
divl
gs
dec
cmpl
pop
mov
pop
jnp
xchg
enter
and
call
mov
and
scas
rorl
hlt
add
insl
sti
sbb
push
jnp
movsb
insb
xchg
out
sbb
push
cmp
jns
mov
std
sahf
dec
jecxz
lods
sub
pop
sbb
jns
push
repz
addr16
scas
mov
data16
mov
mov
int
rcrl
cli
fisttpll
mov
cld
push
mov
push
mov
add
jl
xchg
adc
pop
mov
xor
bound
test
pop
test
out
pusha
mov
stos
jmp
outsl
push
icebp
test
roll
outsl
mov
push
loop
add
xchg
aaa
and
pop
inc
jmp
mov
std
mov
xchg
stos
iret
int
test
mov
inc
lods
push
cli
xlat
jb
sub
enter
jecxz
in
das
push
add
xchg
ret
mov
in
mov
and
lock
es
popa
call
out
test
mov
mov
xor
mov
insl
inc
sub
lock
fidivrl
aad
mov
pushf
imul
push
sbb
jmp
in
jns
mov
jp
pop
fstpt
push
int
scas
jecxz
or
jmp
icebp
fwait
jp
mov
mov
das
dec
cmp
fsubrs
std
adc
jg
sbb
sbb
and
rcl
jle
subl
fisttps
pusha
xchg
or
pop
fstpt
daa
daa
loope
leave
fistpll
mov
addr16
repz
pop
sti
pop
mov
addr16
aas
xor
iret
ficoml
stos
pop
fbstp
popf
in
mov
push
mov
or
add
call
shl
je
sar
cmp
aas
and
out
jne
mov
dec
enter
cmp
outsb
jno
std
ja
jg
cmp
dec
push
lcall
push
imul
lea
add
js
dec
add
xor
push
pop
in
and
jmp
xchg
push
fdivp
rcrb
fcoms
cs
es
xchg
mov
adc
cmp
cmp
aas
insb
xor
test
call
mov
jge
adc
pop
add
ss
dec
mov
pop
aad
fnstenv
jb
sahf
mov
aas
das
mov
out
and
or
or
mov
push
cmp
inc
pop
push
fwait
sbb
and
not
push
movsl
jnp
mov
addr16
sbb
mov
xchg
inc
jb
adc
out
sbb
subb
fs
pop
cmpsb
push
sbb
jg
mov
mov
inc
imul
loope
inc
in
imulb
or
outsb
or
push
insb
test
std
mov
arpl
cmp
icebp
cmp
pop
push
int
xor
dec
lret
xchg
mov
inc
scas
add
push
mov
jp
jmp
mov
mov
rcl
pop
decl
pusha
cld
stc
dec
sub
xchg
fwait
inc
add
jnp
xchg
add
or
mov
icebp
divb
adc
pop
push
icebp
mul
lods
repnz
push
xor
ss
repz
sbb
xor
push
aaa
or
in
ret
jne
inc
mov
jge
les
mov
ffree
cmc
lock
pop
inc
pop
xor
mov
sbb
mov
sahf
mov
insb
call
ss
inc
and
pop
testb
fdivl
pop
lret
adc
inc
cmp
das
outsb
push
mov
loop
or
cmp
fstpl
mov
shlb
mov
test
aam
inc
in
stos
mov
xchg
adc
or
dec
mov
fbld
push
lea
xor
roll
push
jae
aad
je
cmp
daa
ret
pop
hlt
aad
or
sti
push
or
fdiv
dec
out
cmp
mov
sbb
dec
popf
fstps
pop
mov
xchg
and
mov
cmpsb
push
lahf
mov
xadd
xlat
pop
xchg
and
xchg
jl
jnp
mov
stos
dec
mov
lret
push
sub
jge
lods
push
inc
fildl
inc
test
fcompl
lock
lods
mov
icebp
aas
rcl
addr16
push
jge
movsl
pop
loope
sub
lcall
loopne
and
inc
jnp
or
push
in
cmpsb
dec
ja
xlat
imul
mov
arpl
outsl
inc
into
out
xchg
pusha
jl
loopne
mov
out
mov
jnp
push
sub
dec
ret
cmc
dec
loope
movsb
pushf
cmpsl
stos
icebp
imul
xor
jns
jbe
repz
jnp
hlt
pop
xchg
into
sub
dec
push
mov
shlb
xchg
int
mov
adc
idivb
push
and
leave
jne
mov
jmp
xor
scas
add
mov
movb
fsubs
aad
test
inc
xchg
adc
inc
icebp
int
push
lods
stc
xchg
mov
popa
enter
push
and
sbb
js
fwait
push
pop
mov
insl
jbe
mov
sub
ljmp
nop
sub
pusha
fldt
dec
push
push
mov
add
mov
fwait
out
or
les
mov
jmp
cld
imul
rolb
pop
jnp,pn
in
cld
jmp
fsub
stos
ja
test
mov
sbb
fidivrs
mov
mov
jecxz
mov
adc
scas
or
stos
out
dec
insb
imul
insb
mov
cmp
mov
punpcklwd
in
sbb
mov
inc
add
icebp
add
xchg
iret
pop
ficoml
mov
inc
pop
sub
int
shl
loop
inc
pusha
add
jmp
test
xor
pop
das
dec
sub
mov
jmp
aaa
push
cmpsl
cmpsl
scas
sbb
in
push
lock
mov
aam
lods
pop
fs
leave
cmp
mov
add
leave
or
mov
sbb
ret
lahf
iret
test
mov
aam
shlb
push
inc
loop
test
mov
pop
mov
pop
jl
shlb
and
xchg
mov
jnp
hlt
and
pop
push
daa
shlb
call
and
icebp
jbe
test
lds
sti
sbb
add
xor
adc
jl
inc
inc
mov
ljmp
movsl
in
btcl
xchg
iret
fcmovu
stos
lcall
ret
pop
add
outsb
addr16
fwait
add
mov
subps
dec
inc
xchg
mov
cli
gs
test
iret
dec
ret
and
jbe
dec
dec
fcoml
cmp
mov
inc
cmp
loope
les
pop
add
mov
rcrl
sbb
mov
cmpsb
test
sbb
into
daa
imul
lock
cmp
fnstsw
mov
mov
inc
xor
push
mov
int3
in
pop
xchg
fucom
xor
cmp
inc
daa
push
js
cmp
cli
in
xor
cmp
xor
mov
lret
or
stos
cmp
cmp
call
jg
jno
cmp
adc
in
sti
fisubrl
fnsave
and
mov
popa
out
shrl
leave
mov
lds
lret
inc
dec
repnz
and
or
push
rol
ret
fwait
mov
fisubrl
push
push
sub
push
cmc
xchg
cmpsl
push
call
add
mov
pop
mov
fcmovb
fwait
bound
adc
loope
stos
pushf
xchg
cmp
cmp
call
lahf
arpl
hlt
dec
xchg
inc
fwait
inc
push
or
fidivrs
mov
and
dec
sbb
outsb
adc
rorb
mov
cmp
hlt
or
xor
inc
in
or
ffree
cs
mov
sbb
dec
inc
scas
clc
movb
clc
mul
subb
inc
add
sbb
fiaddl
sbb
sti
js
mov
repz
mov
arpl
stos
sub
lds
leave
jb
mov
or
push
pop
scas
xadd
into
jb
dec
add
dec
loop
jle
push
adc
mov
add
test
popa
ret
outsl
ret
je
mov
int
xchg
std
shll
outsb
and
lock
mov
mov
pop
ret
es
mov
fidivs
outsl
add
cmp
push
aad
cli
ss
and
in
sti
adcb
dec
xorl
movl
data16
mov
cwtl
ds
imul
hlt
test
data16
ret
mov
imul
icebp
test
jae
aam
xor
lret
addr16
rorl
mov
lods
mov
adc
mov
out
in
call
fs
das
or
fucom
inc
mov
or
mov
out
xchg
jecxz
fstpt
mov
cmp
sbb
repz
leave
push
inc
ljmp
xchg
imul
mov
not
cwtl
icebp
dec
xchg
dec
int3
jle
shll
xor
or
inc
mov
scas
fldl
cmp
fcoms
jg
pop
jae
jns
fs
hlt
add
fs
ret
leave
icebp
mov
cli
popf
sahf
mov
insl
push
movsl
push
xor
push
fcmovb
imul
fildl
decb
dec
insb
gs
mov
lods
mov
test
out
sbb
add
inc
mov
mov
insl
pop
push
jmp
sti
dec
cmp
xor
add
cmp
mov
call
aad
es
adc
adc
xor
or
mov
jno
and
in
in
xchg
push
icebp
fwait
sbb
loop
aad
lds
pop
pop
pop
adc
mov
pop
push
iret
mov
pop
push
push
enter
rcrb
sbb
outsl
or
mov
imul
or
arpl
stc
mov
lret
or
shll
dec
movq
sub
out
pusha
pusha
pop
inc
mov
mov
les
lock
out
lret
adc
push
dec
jle
mov
xorl
fsubrs
mov
push
push
push
jne
and
int3
jge
and
and
out
lret
push
nop
fldcw
pop
xor
and
mov
outsl
push
cmp
lods
pushf
inc
lret
cmp
cmpsl
xchg
and
movsb
fidivrl
sbb
and
xchg
sub
rcr
daa
scas
fs
das
push
jne
xor
sbb
fidivs
test
test
mov
nop
addr16
adc
fnstcw
jl
fdivs
imul
das
aas
es
fwait
ss
test
stc
outsl
inc
imul
jne
sbb
adc
into
movsl
in
jnp
enter
mov
inc
mov
rcl
fldt
mov
leave
fisubs
addr16
test
stos
dec
in
push
jns
loop
push
dec
mov
sarb
mov
lods
mov
adc
mov
pxor
and
roll
pop
mov
cmc
or
inc
ret
movsl
outsb
data16
mov
add
adc
mov
mov
call
int3
mov
add
add
sub
aas
in
jmp
fwait
arpl
pop
xchg
ja
jns
imul
pop
mov
mov
fnstenv
insb
dec
mov
lea
sbb
or
test
adc
jmp
inc
xchg
sti
mov
sbb
repnz
jg
or
pop
xchg
in
mov
je
nop
mov
cmp
jmp
mov
push
outsb
insb
mov
cli
dec
push
dec
in
push
das
mov
hlt
dec
insb
fs
jns,pn
dec
cmp
test
popa
daa
sahf
mov
jmp
push
jae,pt
loope
rorl
arpl
jp
cmc
aam
in
push
add
mov
push
in
cli
add
and
es
and
ficoml
jbe
js
sub
adc
popl
or
cltd
inc
ret
jmp
sub
jno
adc
repnz
mov
xor
dec
xchg
lahf
jmp
mov
dec
pop
leave
mov
xchg
mov
jmp
jl
dec
dec
rclb
dec
lcall
lock
in
push
xchg
mov
sub
jnp
out
sub
or
loope
out
push
sahf
orl
cmc
fldenv
push
sub
mov
fcmove
das
sbb
sarb
repnz
rclb
mov
mov
lcall
adc
add
adc
in
push
dec
add
sbb
push
cmp
orb
ds
sub
mov
xchg
adc
pop
inc
fadd
test
mov
fwait
pop
nop
test
mov
movsl
fsubp
mov
ficoml
in
mov
std
jg
push
cmp
test
insl
mov
push
clc
iret
push
daa
dec
lock
arpl
sbb
push
add
das
mov
mov
frndint
das
out
rol
flds
cmp
dec
bound
push
or
mov
xchg
cld
test
xchg
idiv
outsl
adcb
pop
out
sub
adc
mov
pusha
mov
ficoml
adc
gs
mov
push
in
pop
int
and
inc
xor
xchg
adc
test
add
sub
jg
dec
inc
lret
and
pop
xchg
mov
jp
je
stos
lret
add
add
jl
loopne
imul
dec
push
cmp
fwait
add
cmp
sti
inc
or
lods
in
mov
mov
xchg
adc
shrl
xchg
in
out
loope
repz
sahf
nop
xor
or
cmp
mov
mov
sbb
mov
sub
stc
xchg
inc
cmp
in
mov
fcomps
inc
xor
mov
and
fwait
mov
fstpl
mov
mov
or
pop
pushl
lcall
xchg
jnp
xor
xchg
xchg
rcrl
ljmp
or
push
loope
mov
cmp
test
and
xchg
push
mov
out
adcl
nop
roll
add
stos
sub
iret
xchg
cmp
pusha
jno
lahf
fwait
shll
aam
pop
lods
and
mov
mov
outsb
mov
rcrb
ret
int
and
dec
ds
cld
loopne
out
and
jecxz
or
cli
sbbb
inc
and
jecxz
cmp
cltd
jnp
mov
add
mov
insb
mov
xor
pop
aaa
shlb
adc
adc
leave
ret
xor
add
xchg
aas
push
adc
add
push
mov
push
popf
xchg
add
ljmp
aam
imul
ficompl
adc
jo
cmpsb
jecxz
and
cwtl
and
lock
cmc
inc
cmp
gs
mov
fs
bound
jnp
rcll
lods
fisubrl
jae
push
cmp
adc
test
xlat
add
push
mov
xor
add
cli
shrb
lret
in
test
fmuls
push
mov
aas
xorl
aam
push
mov
mov
mov
mov
jmp
push
dec
pusha
inc
add
add
movsl
mov
dec
lock
pop
sar
mov
cmp
mov
aas
mov
sbb
popa
adc
jb
add
dec
adc
push
daa
ret
fs
xchg
mov
iret
test
lea
out
pop
iret
sub
and
inc
mov
or
roll
and
imul
sti
call
sbb
add
aad
out
jle
xchg
xchg
js
sub
cmc
aas
mov
xor
xor
in
dec
aad
xchg
jns
jge
push
lods
mov
cmp
cs
and
push
xchg
add
lock
push
sbb
xacquire
fcomps
pop
add
mov
test
dec
popf
jo
push
mov
push
imul
ret
cmp
cmpsl
iret
xchg
push
imul
mov
sbb
out
notb
push
nop
repnz
aam
mov
lret
scas
push
roll
xchg
cmpl
rol
jno
cmpb
test
or
lret
addb
pop
jg
lods
sahf
call
into
test
subl
sub
addr16
mov
inc
or
push
jb
push
jns
insl
xchg
aam
stc
and
faddl
enter
or
mov
movsl
lahf
scas
out
sub
sbb
inc
lcall
insb
bound
and
add
cmpsb
cmp
jle
pop
jmp
gs
pop
xchg
shlb
decl
test
add
loop
cltd
adc
out
jl
iret
sbb
xchg
test
mov
push
ror
push
mov
mov
dec
cmp
movsl
das
lret
push
fs
popa
cld
mov
aad
push
mov
shr
dec
pop
mov
cmpsl
mov
movsl
cmpsl
cld
mov
cmp
and
adc
pop
repnz
or
repz
push
cltd
call
mov
scas
testl
subl
dec
mov
mov
mov
mov
ds
mov
rcrb
mov
mov
push
into
pop
out
shrl
call
xlat
mov
xor
xchg
push
jle
cmp
pop
mov
push
loopne
push
lea
fcomip
and
jle
xchg
loope
in
test
negl
pop
add
or
inc
push
sbb
add
mov
mov
inc
fisubrs
and
jge
jo
dec
dec
rorb
adc
data16
pusha
loop
outsb
fcomi
outsb
rcr
cmp
mov
lret
mov
pop
adc
cmp
ret
mov
push
repz
adc
fs
aas
pop
rorl
push
push
int3
dec
cmp
xchg
in
mov
pop
inc
mov
dec
pop
mov
pop
loopne
jo
lahf
jmp
mov
out
pop
mov
jl
adc
inc
sub
lret
fimuls
jnp
mov
sub
adc
cmpsl
push
push
sbb
mov
adc
sub
sti
jns
fldenv
cmp
leave
ret
sbb
xlat
mov
rcrb
pop
dec
test
cmp
sub
or
pop
mov
movl
pushf
pop
fwait
sub
mov
rcrl
mov
test
fisubl
fimull
or
xor
movsl
pop
add
sahf
push
addr16
std
fs
fstps
push
cmp
int3
adc
inc
int
xchg
cltd
shll
lret
push
rorl
adc
sub
dec
mov
popa
lods
lahf
int
mov
mov
notb
xor
popa
mov
mov
lret
stos
adc
es
enter
dec
data16
jg
stos
and
sbb
in
sbb
inc
pop
cmp
imul
adc
movsl
or
xor
movsl
js
stos
ds
and
push
mov
movsb
stos
xchg
push
insb
cmp
push
rcrb
pop
xor
mov
leave
ja
mov
sub
shl
or
popa
test
sub
jmp
pop
int
add
jae
jbe
popa
or
data16
scas
add
or
lock
loope
insb
fildl
xchg
push
fbstp
adc
pop
movsb
out
or
add
sti
ljmp
xor
dec
movsl
jg
sbb
mov
cmp
mov
repz
sub
sub
push
or
inc
mov
insl
push
jmp
sti
mov
cmp
in
aas
inc
cmp
push
enter
mov
aaa
or
mov
out
sbb
or
add
push
rcl
lds
pop
ret
movl
lcall
daa
adc
aad
mov
aad
das
dec
xchg
mov
sbb
inc
daa
nop
xlat
mov
je
rorl
or
imul
mov
call
call
push
insb
fbld
leave
ja
adc
popa
xchg
addb
nop
jecxz
xorl
mov
sbb
pop
jo
lahf
call
cmp
enter
rclb
int3
mov
imul
push
jnp
out
jge
ror
cwtl
xchg
xchg
adc
movsl
sti
ss
add
inc
xor
imulb
xlat
push
or
and
cwtl
xchg
ljmp
jnp
mov
in
repz
aas
pop
lea
int3
pop
aas
jbe
mov
ret
mov
outsl
cmp
mov
jns
and
loope
xor
out
notb
mov
xor
clc
or
pop
push
inc
les
push
iret
leave
add
push
in
data16
ja
mov
in
push
daa
ret
mov
sbb
cmpl
jg
jmp
xor
insb
test
or
icebp
es
sbbl
inc
imul
jecxz
insl
outsl
lret
xor
test
cwtl
mov
xor
cmp
mov
aad
in
sti
enter
mov
subl
inc
inc
in
loopne
mov
mov
mov
mov
mov
or
mov
fwait
xchg
hlt
add
arpl
repnz
int
mov
std
mov
std
scas
aam
push
xchg
xchg
loopne
cmp
mov
mov
jae
mov
jmp
adc
fcmovnu
cmp
dec
iret
push
adcb
pop
pop
arpl
or
push
adc
mov
outsl
in
add
and
ja
push
call
iret
dec
xchg
sti
and
push
popf
daa
pop
adcb
xchg
add
mov
mov
and
popa
sbbb
pop
mov
push
mov
add
xchg
mov
iret
outsb
jge
daa
pop
mov
mov
jb
push
imul
lcall
jns
mov
mov
sbb
test
adc
iret
mov
in
addb
hlt
xchg
dec
shl
sbb
loope
int
jecxz
xchg
in
movsl
sub
pop
lea
mov
bound
xchg
dec
jo
and
or
sahf
dec
or
pop
jmp
sub
addr16
jb
and
add
fstl
rorb
ret
xor
lcall
xchg
dec
cvtdq2ps
cli
cs
add
popf
test
xchg
jmp
ret
lret
jmp
sbb
test
cmp
daa
insl
jae
mov
scas
push
and
cltd
mov
fisttpl
aaa
lods
inc
xchg
ret
mov
and
or
fxtract
test
cmp
outsb
jno
ljmp
ret
or
int
dec
fnstcw
xor
push
mov
cld
inc
popa
daa
mov
push
pop
cmp
adc
or
jl
xchg
jge
and
loop
inc
jmp
insb
xorl
jo
movsb
rcrl
mov
out
cmc
fildl
mov
jl
fbstp
arpl
push
push
fistpl
pop
mov
lret
cmp
xchg
xor
pop
les
lds
scas
mov
and
mov
loop
nop
jmp
xchg
xchg
push
or
inc
addr16
fnstsw
or
add
shll
gs
push
test
popa
fucom
rcrb
jne
inc
stc
das
clc
lcall
add
cli
enter
pop
mov
jg
in
icebp
xor
mov
or
jl
xchg
call
or
dec
neg
aas
sahf
insl
shl
push
pop
xchg
sbb
push
or
pop
imul
mov
stos
test
mov
mov
jo
jp
mov
adcl
mov
jp
ds
push
scas
leave
and
adc
inc
cs
jl
scas
push
sub
or
mov
push
add
loope
push
ja
adcl
sub
clc
xchg
incb
cmpsl
mov
and
cmp
pop
shl
daa
test
cmp
mov
test
pop
xor
in
hlt
shlb
sub
mov
pop
jo
movsb
cwtl
pop
jg
lea
int3
inc
mov
js
cmpsl
xlat
cmp
push
scas
push
aaa
and
pop
arpl
jg
in
cmpb
or
jecxz
cmp
fdivs
xlat
test
sbb
inc
aas
sub
testl
test
inc
stos
enter
jo
es
imul
sub
sbb
fwait
sahf
adc
sahf
pop
jmp
xchg
lea
sub
xchg
aaa
fdivrl
push
sub
in
pop
pop
cmp
lahf
xor
roll
std
mov
xchg
hlt
adc
stos
pusha
shlb
cmp
and
lcall
xchg
sub
or
fdivs
test
je
mov
jnp
pop
jb
into
jge
stos
ja
cmp
rolb
push
pop
adc
pop
clc
out
call
aas
pusha
sub
sbb
xor
mov
mov
jbe
cmp
aas
pusha
sti
movsl
mov
or
ss
repnz
dec
sahf
addr16
fcmovnu
in
mov
cmc
pusha
popa
int
add
jb
inc
fldl
jp
mov
push
jno
mov
mov
outsb
xlat
cmp
test
xchg
test
sbb
and
mov
sub
add
fisubrl
jl
sar
xor
push
lods
add
es
cmp
and
xor
insb
pushf
imul
addr16
xchg
xor
fwait
jmp
jle
movntps
jecxz
xchg
inc
mov
rcll
mov
xlat
in
push
pop
jmp
jb
hlt
mov
sub
movsb
mov
and
mov
test
sub
inc
notl
mov
or
xchg
cmp
mov
scas
ds
leave
xchg
adc
insb
adc
adc
and
dec
aad
loopne
in
das
mov
push
int3
xchg
or
sti
dec
scas
lahf
mov
leave
mov
mov
sti
insb
lahf
mov
xor
jo
add
and
int
ljmp
fidivrl
nop
dec
call
fcoml
shll
or
stos
je
loop
add
pop
insl
sbb
xchg
dec
es
xchg
pop
outsl
or
pop
adc
scas
ljmp
sbb
scas
push
add
fisttps
arpl
dec
mov
cld
inc
daa
xor
mov
cli
sarb
repz
sub
inc
and
dec
mov
out
lahf
sub
xchg
add
sbb
cld
loopne
mov
in
pushf
ss
dec
lock
add
xchg
jl
fstpl
pop
sub
adc
gs
scas
fdivrl
dec
cmp
fs
push
aas
sbb
or
jae
je
cmp
call
cs
ficomps
xor
outsl
or
bound
jae
and
mov
push
push
jge
in
int
inc
sbb
and
lds
adcb
int
ds
jge
incb
lods
repnz
xor
mov
daa
push
sti
xchg
cmpsb
or
push
xor
push
loopne
ja
pop
dec
mov
adc
mov
add
inc
mov
ret
adc
mov
gs
aaa
aam
xlat
sbb
mov
push
in
pop
pop
xor
mov
xchg
shl
loop
jo
xor
stos
inc
into
jmp
imul
repz
inc
imul
outsl
mov
les
pop
push
inc
adc
pop
and
xchg
popa
jl
add
push
push
dec
adc
add
mov
out
pop
lret
inc
and
repnz
cmp
test
xor
mov
jmp
jae
push
jbe
cs
aad
notb
stos
cwtl
cmp
sbb
outsl
xor
push
pop
jno
cmp
mov
or
jecxz
loopne
pop
sub
fldt
sub
jbe
in
mov
mov
xlat
jb
mov
xchg
mov
leave
cmpsb
test
sarb
scas
dec
out
xor
jno
lods
mov
daa
dec
imul
sbb
jg
lahf
cmpsb
cld
xlat
and
outsb
test
in
mov
xchg
fldcw
jnp
mov
call
mov
fxch
adc
push
add
xchg
fs
scas
test
mov
pop
fcomps
jp
outsl
das
or
dec
mov
sub
dec
pop
xchg
addr16
or
shll
jg
insl
jo
push
jb
imul
fisubs
push
and
cmp
or
fwait
jns
sbb
push
xor
aas
push
fists
mov
or
adc
adc
inc
stos
dec
outsb
dec
out
or
repnz
dec
repnz
adc
jae
cmp
cmpsb
push
xchg
lea
shl
lret
cmp
sub
rol
sbb
add
mov
cmp
lcall
mov
outsb
sbb
imul
scas
lcall
jecxz
aam
nop
mov
into
in
adc
pop
mov
inc
imulb
in
adc
hlt
dec
and
pushl
ret
sub
popa
sub
cld
pop
pushf
fisttpll
push
mov
sbb
fxtract
ret
mov
lea
je
iret
jl
shlb
and
add
lock
xchg
cltd
outsl
push
jnp
mov
xchg
mov
xchg
pop
pushf
xor
in
cmp
adc
mov
push
or
lds
push
lea
es
push
mov
test
cltd
push
loope
shr
xor
notb
lods
push
or
pop
xor
mov
lods
xchg
inc
bound
cmc
jmp
add
and
lahf
and
stc
inc
push
in
scas
xor
fidivs
das
jno
or
test
lods
mov
out
jne
jp
mov
out
stc
cmp
fwait
cwtl
movsl
cwtl
hlt
sahf
sbb
mov
mov
pop
push
xchg
pavgw
xor
push
loopne
fistpl
fsts
popa
and
mov
add
std
lcall
and
pop
outsb
jg
lret
cmp
in
add
sahf
bound
push
xor
dec
loopne
jno
mov
xchg
cmpsb
in
lahf
test
inc
mov
jno
mov
cli
push
push
jge
test
popa
shl
adc
or
push
xor
in
cmp
push
int
hlt
cltd
xchg
adc
sbb
pop
mov
cltd
mov
popf
jne
push
inc
cwtl
outsb
out
mov
sbb
ficoml
cmp
pop
adc
aam
dec
sbb
mov
jecxz
gs
jno
in
dec
leave
in
xchg
rol
scas
mov
popa
shll
jp
add
jae
add
xchg
cmp
lea
mov
dec
popf
mov
leave
push
test
push
cs
inc
jmp
in
lea
cs
lea
cmc
push
jg
cmp
add
sub
jno
clc
and
sub
aas
mov
stc
jae
fwait
mov
add
xchg
pop
mov
mov
aas
dec
ds
and
xchg
or
push
movb
cli
repz
xchg
bsr
push
in
xor
data16
cmp
jno
lcall
add
mov
dec
je
cmc
in
fsubl
xor
sub
dec
jle
outsl
jmp
push
and
scas
jnp
inc
pop
cwtl
cmp
pop
out
xchg
rclb
mov
and
xchg
jg
dec
ficoms
jae
popf
loopne
mov
pusha
out
das
roll
mov
xchg
pop
insl
sbb
mov
repnz
jp
push
fcmovnu
divb
dec
scas
test
arpl
fcompl
pop
push
fadds
jb
sub
mov
sub
lods
push
push
mov
imul
xor
lods
add
cmp
call
adc
dec
sub
sub
cmpsl
push
fxch
sbb
inc
shr
sub
or
stos
cmp
cmp
pop
stos
push
or
mov
fistpl
add
xchg
sbb
cmp
adcb
shlb
sbb
inc
or
xchg
arpl
pop
adc
call
pop
xor
push
xchg
jbe
fcomps
and
and
int3
fiadds
sbb
sub
fstps
out
mov
xor
push
add
mov
lret
push
mov
dec
sbb
je
xchg
gs
dec
outsl
pop
xchg
test
cmp
out
rcrl
test
ljmp
and
rclb
jge
fs
mov
ret
jge
dec
jbe
add
dec
cmpsl
mov
into
jae
xchg
push
pop
pop
push
mov
push
fprem
inc
test
mov
xor
nop
js
jns
loopne
xor
fsubrs
push
sub
rclb
dec
dec
cmpsl
push
pop
cmp
mov
mov
mov
ret
into
push
lret
cmp
into
sbb
les
sbb
jecxz
push
movsl
push
mov
mov
sahf
fwait
dec
out
adc
cmc
vmovddup
dec
test
lds
push
push
fwait
data16
dec
orb
pop
cltd
cmp
jne
js
cltd
sub
mov
lds
out
hlt
aas
mov
jno
or
push
adc
jg
add
pop
xchg
mov
les
jle
ret
test
mov
pop
adc
std
out
js
gs
jae
mov
mov
push
push
sbb
in
andb
out
pop
pop
xor
out
fbld
mov
adc
adc
push
and
les
mov
rdtsc
lods
push
inc
sbb
xchg
sub
shl
fmull
or
dec
mov
frstor
jne
pop
cli
push
inc
sarb
jmp
sub
inc
jne
out
das
nop
push
stos
je
adc
icebp
jmp
push
cld
push
mov
dec
cld
lock
pmullw
inc
insb
popa
push
nop
xchg
add
mov
adc
mov
xor
mov
dec
dec
mov
decl
out
jbe
es
add
and
fs
jbe
adc
mov
xor
cld
pop
out
leave
jl
stos
sbb
or
aas
in
pop
sahf
push
jno
in
cmp
sub
add
xor
xor
push
stos
sub
popa
nop
into
jecxz
mov
push
fnstenv
in
or
jae
push
cmp
dec
arpl
das
pop
lock
mov
ret
or
add
add
cmp
imul
cmc
les
sub
dec
adc
addb
hlt
push
in
sub
adc
dec
sbb
add
pop
push
dec
ja
inc
out
ret
out
or
inc
inc
adc
xchg
out
sbb
push
andl
inc
jne
cmp
mov
add
xor
mov
lretw
xchg
je
pop
push
lret
repnz
and
fldl
sti
and
adc
imul
adc
inc
and
aam
mov
pop
add
stos
jecxz
hlt
std
xchg
out
xchg
pushf
daa
test
int
ss
test
dec
jecxz
jbe
cld
fildl
fcos
dec
jbe
xchg
mov
popf
cli
mov
xchg
pop
imul
sub
jno
pop
mov
insl
mov
add
dec
xor
sub
push
daa
jno
mov
mov
mov
xor
lea
je
jne
fldcw
add
cmp
mov
mov
filds
rorb
adc
out
fs
push
icebp
lds
jle
mov
or
loope
bound
scas
pop
cld
shlb
outsb
or
inc
sub
mov
xchg
mov
lock
or
mov
cwtl
loopne
xchg
cmovno
mov
fidivrs
fisubs
gs
jno
push
imul
add
test
popa
fistpl
mov
lods
sbb
rcrl
xchg
pop
xchg
cwtl
xchg
dec
pop
fildl
in
pop
add
lds
cmpsl
fs
mov
pusha
adc
or
and
adcl
lds
cmp
mov
jmp
xor
push
mov
xchg
and
jl
outsb
sbb
or
andb
jecxz
ss
add
mov
mov
jns
push
fstpl
cmpsb
jle
mov
popf
aam
and
aam
jae
mov
jbe
sub
das
enter
inc
sbb
sbb
fdivrs
fs
and
jecxz
enter
mov
jmp
inc
outsl
xchg
pushf
fcmove
aad
sbb
gs
push
xchg
pop
and
adc
repz
jns
adc
xor
lock
sbb
xchg
cs
or
mov
jns
lock
dec
dec
mov
inc
xchg
hlt
push
enter
ret
add
or
add
push
jmp
out
jae
lret
cmp
cli
pop
push
sbbb
popa
jo
xor
loope
shr
scas
notl
pop
ret
jp
inc
cmpsb
inc
fldt
int
or
cmp
shlb
rolb
cmp
fisubs
dec
sbb
lret
scas
es
or
fs
pop
daa
cmp
xor
int
dec
inc
pop
mov
mov
ret
xchg
or
sub
pop
mov
jmp
push
pop
rorb
movsl
movb
pop
in
sbb
jno
dec
jge
or
push
push
sub
rcr
push
pop
xchg
jns
jmp
lret
xchg
sub
and
stc
je
ja
or
fldl
or
aam
jo
aas
inc
leave
jno
cmpsl
mov
out
mov
sti
push
js
xchg
mov
in
lea
mov
jo
cmp
mov
jo
mov
fisubl
and
mov
or
pop
inc
leave
bound
outsl
std
mov
xchg
jnp
outsl
cmpl
jp
das
in
cli
movsl
decl
jnp
ljmp
call
mov
dec
xor
stc
lret
cmp
pop
sub
mov
iret
inc
ljmp
clc
adc
stos
or
call
push
and
push
or
pusha
mov
add
dec
or
inc
push
mov
pop
inc
in
lret
pushf
or
into
leave
pop
out
cmpsb
push
test
pop
fwait
jge
int3
push
fs
cmp
int
insl
movsb
shl
stos
fisubl
and
aad
jno
push
sahf
jp
mov
mov
dec
xor
lock
aaa
daa
ret
rcll
mov
or
inc
jnp
pop
mov
lock
or
scas
cld
inc
mov
dec
ss
dec
push
cs
xchg
mov
jg
jecxz
negb
xchg
xchg
pop
fdivr
leave
enter
sub
inc
sti
loop
jae
sbb
aad
xchg
ds
adc
jmp
sbb
jmp
test
add
rclb
nop
adc
outsb
cmp
ds
push
imul
and
fidivrl
mov
mov
pushf
pushf
mov
add
jo
jmp
sub
push
and
mov
mov
inc
sbb
mov
xchg
mov
and
punpckhdq
jmp
call
aad
cld
mov
xchg
cmp
in
arpl
xchg
inc
mov
xchg
push
ljmp
mov
rclb
ficoml
pop
jns
rolb
cli
hlt
jno
mov
mov
test
nop
add
sbb
repnz
mov
xlat
sysexit
mov
xor
repnz
daa
push
adc
add
or
jle
mov
jb
sbb
out
in
mov
fldcw
xor
inc
inc
add
mov
into
lock
inc
mov
outsl
gs
adc
fidivs
movsl
add
ficomps
jecxz
mov
pop
inc
adc
mov
lock
mov
dec
test
in
add
cs
jp
popa
push
xchg
iret
mov
jmp
xor
cmp
pop
adc
xchg
in
xor
xor
pop
addb
add
popa
pop
stos
movsb
addr16
cmp
fmull
clc
fnstsw
je
fldenv
add
push
je
push
add
cli
rorl
aaa
jae
in
dec
in
mov
xchg
jecxz
ljmp
shlb
xchg
xchg
sub
mov
or
mov
int3
mov
sbb
mov
or
cs
push
dec
sub
inc
daa
xchg
push
mov
cmpsb
mov
jle
lea
insb
fmul
fidivl
cld
pop
mov
adc
notl
ss
inc
mov
scas
xchg
mov
lcall
ds
pop
dec
in
push
cld
mov
in
push
xor
fwait
add
jns
pop
shrl
hlt
xchg
mov
cmpl
and
adc
scas
adc
mov
cmp
push
outsl
pop
sarb
movsl
lahf
test
xor
fbstp
movsl
sahf
gs
pop
xor
iret
pop
jnp
das
xor
addr16
mov
mov
in
ficompl
outsl
pop
xchg
mov
xchg
dec
mov
sbb
dec
sbb
iret
jge
call
dec
or
rep
dec
sub
mov
mov
test
pushf
pop
pusha
js
cmp
pop
mov
sub
jo
imul
mov
daa
and
sbb
les
mov
xchg
pop
outsl
mov
pop
pop
sbb
ret
mov
mov
jp
jmp
pushf
stos
push
sub
out
inc
out
jne
popa
andl
add
ds
sub
add
mov
aam
adc
mov
int3
bound
xchg
call
sahf
popf
mov
mov
xor
imul
xor
ret
push
enter
add
ss
ds
ret
mov
jmp
adc
inc
rcrb
inc
mov
mov
dec
shlb
pop
outsl
movsb
loop
jmp
cmpb
in
jge
repnz
and
cltd
clc
or
mov
xchg
pop
clc
mov
dec
jecxz
jne
push
cmc
aam
dec
sub
pop
fildll
scas
jecxz
decb
mov
mov
cmpsl
nop
pop
outsl
lcall
jle
aas
cwtl
out
js
and
clc
fstl
rcr
mov
jmp
fists
or
push
fildl
into
adc
cmp
inc
mov
push
jge
test
push
pop
aam
mov
test
push
mov
test
lods
ret
push
sbb
push
mov
or
cmp
nop
dec
cmpsl
jmp
rorl
out
sub
push
xchg
lret
mov
jno
push
rcll
xchg
xlat
lods
sbb
lahf
fbld
inc
xor
jne
push
movsl
int
aas
adc
pop
jg
lods
out
test
xor
shrb
lock
xchg
out
add
aas
negl
cld
dec
outsb
mov
mov
mov
xchg
inc
xchg
xorl
insl
xorb
loope
dec
shlb
hlt
jne
adcl
adc
lods
shlb
xor
cs
bound
out
test
sub
std
pop
inc
push
fdiv
nop
fmuls
mov
imul
insl
or
mov
adcb
gs
adc
jmp
mov
pop
cmp
ja
cli
dec
fs
cmpsl
out
jl
pop
imul
insl
mov
div
fsubl
fstps
jge
sbb
mov
loop
jne
and
add
rcrl
stc
sub
xchg
adc
testl
push
add
xlat
adc
cmp
mov
xor
andl
and
mov
sbb
ficoml
add
inc
sub
stc
jnp
je
insl
push
push
mov
adc
mov
test
out
jns
xlat
pop
push
and
mov
scas
arpl
and
divb
add
fs
clc
or
sub
dec
xchg
in
outsb
lcall
imul
repnz
fidivl
sub
jo
into
mov
mov
inc
je
push
or
jle
dec
aaa
inc
ss
rcl
test
aad
cmp
leave
daa
sbb
adc
xor
xchg
xchg
or
clc
fnsave
lds
nop
in
push
arpl
ljmp
xchg
lods
adc
xchg
xor
dec
shll
xor
clc
push
sarb
jns
das
popa
pop
fimull
push
in
cld
aas
push
ds
cmp
data16
test
leave
fdecstp
jp
pop
not
inc
pop
fdivrs
ret
or
arpl
lock
out
push
jg
and
jecxz
lret
cs
notb
mov
add
clc
push
cwtl
data16
lds
movsl
test
popf
movsl
and
mov
sarb
dec
sbb
push
nop
adcl
sti
out
add
fsts
push
mov
jnp
xchg
aas
cld
cmp
add
ljmp
mov
xchg
fimull
mov
in
mov
mov
xor
out
pop
mov
js
or
stos
out
jge
push
pop
sbb
mov
adc
fimull
popf
dec
xor
addr16
cmpb
daa
xor
andl
popf
cmpsl
iret
push
or
xchg
test
or
je
sub
int
out
add
jne
and
imull
mov
lock
push
iret
test
mov
ds
push
dec
cmp
dec
jne
js
adc
arpl
cmp
mov
lahf
sarb
cmpsl
lock
xlat
cli
fst
je
sub
dec
ss
lock
xchg
imul
mov
mov
xchg
mov
icebp
sbb
out
pop
dec
or
pop
push
xor
jecxz
jp
sarl
sub
fisttps
cmp
cmp
mov
ret
mov
in
ljmp
xor
adc
dec
sbb
mov
mov
test
imul
repnz
ds
inc
into
loop
call
scas
arpl
fisubs
shlw
xor
dec
or
rcrb
jo
add
shll
scas
jne
add
or
inc
or
cmpsl
fsubrl
daa
lds
push
mov
and
pop
xor
inc
or
jno
dec
and
and
inc
scas
pop
mov
mov
cld
ja
mov
add
decl
xchg
addb
sub
loope
xchg
mull
scas
cmp
aam
inc
xor
cld
and
xor
insl
add
lret
test
xchg
and
inc
out
cld
dec
subb
cmp
sbb
inc
sahf
mov
out
lret
into
call
mov
add
xorb
scas
xchg
rcr
lahf
mov
imul
lea
push
pushf
inc
decl
pop
pop
sub
cld
in
rcpps
movsl
push
lea
or
pusha
shl
inc
sbb
pmaxsw
js
not
lcall
xor
in
jl
xchg
adc
push
dec
or
inc
daa
int3
test
xchg
imul
xchg
call
cli
dec
xor
adc
sti
pop
int
xchg
xor
pop
push
int3
pop
xor
dec
mov
jl
ret
hlt
xchg
cmp
add
cmp
in
mov
mov
adc
negb
pop
movb
jbe
out
dec
xchg
in
stos
lock
add
adc
sbb
andb
in
sbb
ds
arpl
push
adc
fnstcw
sti
dec
push
push
xor
stos
dec
movsl
sub
lret
push
dec
es
icebp
dec
insl
imul
jns
lahf
loopne
and
addb
cmpsl
rcr
movsb
or
cmpsl
movsl
xor
push
push
push
pushf
xor
aam
jge
xor
adc
mov
fcoml
mov
loop
cmp
cmpsb
mulb
and
pop
xor
cmp
arpl
in
mov
stos
mov
xchg
sbb
jne
inc
sbb
mov
mov
pop
xor
inc
dec
push
push
subb
push
xor
loopne
rolb
shll
js
mull
call
outsl
ss
shll
xorb
xchg
lock
in
cvtdq2ps
xchg
xor
fs
fldcw
sub
int3
and
loopne
sbb
mov
in
lea
jg
cmpsb
int3
test
inc
ret
cmp
ret
pushl
rcll
loope
xchg
into
sarl
sbb
jne
mov
ret
ja
ja
outsl
sub
test
lret
jb
cli
and
and
aam
xchg
mov
cltd
dec
adc
mov
push
lahf
dec
pop
inc
outsl
cmpsb
out
ret
sbb
lcall
repz
roll
lds
pusha
rcr
jl
dec
test
mov
movsl
rcl
cmp
addr16
mov
rorb
or
inc
jg
jmp
push
and
inc
inc
cltd
xor
cwtl
ljmp
stos
mov
mov
or
inc
pop
sub
mov
cmpsl
ljmp
mov
ds
fcoms
insb
sbb
pop
sbb
pop
sbb
adc
lods
and
mov
ja
out
fwait
cli
push
std
lods
lea
or
lret
xchg
or
push
cwtl
movsl
lcall
adc
fnstenv
loop
xchg
xor
roll
dec
std
movq
jo
call
xor
stos
mov
xchg
xor
cmpsl
xor
push
shl
xchg
mov
scas
cli
push
loopne
out
in
add
movsb
adcb
inc
or
pop
imul
inc
mov
pop
popf
ret
data16
xchg
rcll
int
dec
loope
mov
rcrb
sbb
mov
mov
mov
cwtl
mov
aaa
sub
xchg
stc
and
mov
nop
cld
daa
add
dec
xchg
in
sub
cmp
test
cmp
xor
add
inc
sbb
sub
jg
nop
cmp
inc
in
jg
shll
shll
hlt
push
inc
pusha
loopne
sbb
hlt
loop
dec
or
aas
dec
jbe
and
pop
out
sbb
std
insb
sub
pop
jl
stos
js
sti
xchg
daa
movsb
and
pop
stos
xchg
test
xchg
in
cwtl
xchg
imul
es
xor
ds
push
ss
orb
dec
cmpsb
inc
ja
test
sub
aad
inc
jbe
jo
leave
cmpsl
inc
and
cmp
mov
test
imul
mov
inc
popf
clc
out
mov
fs
cmp
lcall
push
andnps
js
mov
inc
out
test
push
out
dec
xor
or
ljmp
inc
mov
pop
xor
inc
mov
pop
jbe
sbb
out
pop
add
outsb
pop
dec
push
jg
or
mov
dec
jb
cmpsl
and
jae
lods
xor
or
in
ret
aaa
repz
jg
adc
dec
nop
daa
xchg
pop
popf
idiv
push
push
cmp
sub
and
nop
js
pop
jae
insb
sbb
add
outsb
pusha
faddl
add
dec
outsb
and
scas
xchg
add
leave
cmp
add
cmp
cmp
cmp
sbb
out
cld
mov
mov
or
dec
and
lret
push
xor
pop
inc
into
test
lret
mov
inc
loopne
lods
dec
mov
xor
sbb
addb
out
push
mov
adc
loopne
push
fsubs
xchg
out
roll
xchg
push
sub
jnp
lret
je
cltd
mov
inc
rcl
push
sub
in
cltd
push
scas
push
sbb
loop
fs
adc
movsl
incl
dec
cmc
jbe
push
and
stos
xchg
xchg
xor
jno
test
jl
sbb
shl
push
outsb
pop
cmp
ljmp
and
orb
cmp
out
bound
std
ss
clc
dec
outsb
inc
stos
jno
aas
cli
sbb
xchg
cli
or
mov
cli
testl
daa
fcmovu
dec
int
in
inc
repz
lret
sub
pushf
daa
sbb
in
push
test
inc
int
popf
add
ds
shlb
lds
fcomps
dec
imul
xchg
add
and
jbe
rcrl
data16
fisubrs
pop
fdivrs
adc
push
lret
push
ljmp
jge
imulb
in
pop
es
aad
mov
dec
cmp
sbb
outsb
scas
mov
mov
shll
mov
dec
xsavec
push
mov
mov
lahf
jl
mov
enter
xchg
ss
dec
stc
or
xchg
jp
dec
cmp
rep
scas
inc
mov
inc
cmp
and
fidivs
or
dec
mov
ret
out
jo
je
rol
sbb
lea
mov
into
mov
fisubrs
aad
ja
and
mov
int3
xchg
lcall
pop
push
push
or
movsb
inc
fwait
cld
xchg
add
mov
push
lds
in
mov
mov
sub
rcl
ficompl
xlat
out
call
in
idivb
aam
loopne
jmp
sbb
inc
enter
lret
dec
and
sub
jg
hlt
adcl
cmpsb
stos
out
mov
aas
negb
inc
shl
mov
mov
imul
or
es
or
imul
sbb
loopne
test
outsl
inc
sub
and
je
jmp
js
jp
testb
inc
rolb
pop
leave
lret
and
mov
rcrl
test
mov
stos
or
lds
xchg
pop
fimull
hlt
xchg
fcoml
fcomip
mov
inc
cmc
xor
rcl
sub
mov
pop
adc
xor
mov
jmp
iret
or
jnp
mov
jae
popf
loopne
push
lods
push
push
jns
push
repnz
dec
call
jnp
call
inc
mov
and
cmp
sbb
je
inc
dec
sti
lds
xchg
ljmp
ss
mov
icebp
cmpsl
push
aaa
xor
xor
ja
mov
testb
inc
aaa
movsb
out
insb
lods
rorl
out
xor
xor
add
loope
dec
shll
addr16
out
test
add
dec
pop
int
sub
sarl
inc
push
mov
adc
xchg
xor
inc
mov
repz
mov
movups
xor
inc
mov
push
test
sub
in
fdivl
imul
mov
inc
je
imul
xchg
cmp
daa
insb
loope
and
dec
in
mov
arpl
or
negl
sti
add
ret
outsb
xchg
add
sahf
cmp
push
mov
dec
jne
push
mov
fisubs
jge
pop
test
test
aam
mov
adc
dec
and
pop
add
xlat
bound
cwtl
in
pushf
aad
je
sbb
dec
sub
jae
in
int
sbb
xor
or
dec
pop
adc
or
je
popa
mov
mov
sub
push
je
repnz
mov
xchg
add
adc
push
scas
rcrb
rolb
imul
lcall
and
notl
popf
and
cmp
fs
jo
adc
test
or
mov
lret
insb
cltd
push
outsb
pop
out
push
stc
iret
pop
xchg
mov
bound
frstor
pop
mov
into
popa
mov
negl
into
add
and
popf
ret
or
scas
jmp
ret
sub
pop
xchg
and
fs
sbb
or
call
clc
sahf
adcb
cmp
jle
test
and
lret
or
mov
xchg
out
cmp
imul
jns
mov
mov
dec
and
sti
mov
pop
dec
push
movb
xor
lock
mov
mov
nop
mov
xor
jle
mov
mov
leave
cmpsb
or
xchg
mov
cmpsl
mov
outsl
cmpsb
mov
mov
jmp
test
shr
mov
stos
lock
aam
aas
popf
mov
mov
cmp
shr
ljmp
cmp
cmpsb
loopne
mov
imul
mov
sbb
mov
in
aam
std
sub
add
jle
jns
jbe
jbe
mov
cmp
mov
and
pop
mov
decb
jbe
lods
inc
jg
jo
cld
andl
lea
jns
orb
inc
pop
push
aam
pop
sarl
push
clc
dec
xor
cld
aad
scas
add
ljmp
js
xor
push
push
cmpl
cmp
or
dec
or
pop
lret
push
xchg
push
scas
inc
pop
or
push
sbb
pop
add
adc
push
bound
pop
adc
ljmp
ret
inc
inc
cmp
sbb
movb
lods
and
in
add
imulb
and
jecxz
imul
sub
adc
push
jle
sbb
sub
push
dec
mov
inc
mov
bound
cmp
scas
imulb
jp
pop
scas
xor
push
aas
cmp
lea
sub
iret
push
add
inc
lret
addr16
mov
lahf
pop
pop
inc
sahf
sbb
bound
cli
sub
push
into
dec
dec
jecxz
cmc
adc
or
lds
mov
test
dec
sub
fiadds
pop
push
jg
mov
or
out
popa
cld
test
shll
addr16
xlat
mov
jno
loope
out
int3
mov
fsubrl
mov
les
and
sub
ds
jns
mov
dec
inc
mov
cmp
push
insb
in
rcl
roll
add
jmp
xchg
or
add
cmp
fwait
push
push
mull
outsb
push
jno
test
gs
lcall
mov
mov
push
or
cltd
icebp
std
dec
sbb
push
pusha
in
xchg
jo
in
mov
push
mov
bound
xor
xor
dec
pusha
and
push
push
inc
cwtl
mov
mov
mov
sub
xchg
push
or
divb
xor
cmc
repnz
xchg
int3
fstl
jbe
sub
cmp
outsb
sbb
jmp
mov
push
push
test
ret
or
lret
push
jnp
adcb
and
outsl
mulb
dec
mov
cwtl
adc
in
or
jge
repnz
or
out
push
mov
xor
dec
mov
sbb
cmp
push
mov
dec
cmp
roll
mov
dec
cmp
notl
push
inc
in
push
adc
ss
sub
dec
sarb
in
and
push
push
nop
xor
mov
sbb
imul
inc
mov
sbb
dec
outsl
xchg
gs
inc
xchg
jle
das
push
mov
sub
test
inc
inc
repnz
repz
jmp
cli
sbb
lods
xchg
jbe
out
lea
imull
dec
lahf
mov
pop
arpl
inc
cmpsb
cmpsb
add
leave
enter
test
je
into
fs
and
into
cmp
imul
jno
inc
imul
cs
inc
cltd
insl
pop
mov
lcall
pop
in
jmp
int3
dec
mov
ret
clc
je
dec
ficompl
xlat
aad
out
hlt
dec
inc
sub
ja
sbb
push
inc
xor
ds
mov
mov
es
push
loop
jmp
xchg
movsb
and
lcall
fldcw
mov
ja
mov
outsl
movsl
xor
faddl
movb
ret
es
dec
lods
xchg
ret
push
aaa
mov
sbb
test
xchg
jne
push
test
mov
and
adc
xchg
inc
rcrb
pop
sub
flds
andl
sti
je
push
mov
add
xchg
ret
pop
fildl
and
cmp
cli
inc
iret
xchg
int3
enter
xor
or
xor
and
loop
repnz
imul
addb
mov
imul
daa
lret
mov
xchg
and
mov
inc
popf
push
and
pop
mov
or
adc
lret
fdivrs
pop
icebp
lret
mov
xor
cmp
movsl
sbb
adcl
mov
popa
insb
jnp
jecxz
cs
cmpsl
negl
pop
sub
cli
xchg
outsl
mov
sbb
mov
pusha
test
mov
mov
imul
pop
jl
adc
cmp
pushf
mov
inc
mov
icebp
mov
nop
push
sbb
test
add
addr16
fbstp
jnp
jbe
dec
mov
pop
cmpb
lock
or
push
inc
jmp
aam
mov
lock
test
pop
nop
mov
inc
loop
jecxz
cmp
xchg
imul
les
outsl
fnstsw
dec
add
xchg
out
arpl
push
adc
xchg
frstor
imul
jno
inc
cmpsb
xorl
jg
or
arpl
xchg
paddusb
aaa
aas
lret
es
mov
push
inc
adc
add
dec
add
cmp
mov
dec
scas
push
xchg
push
in
pusha
stos
xlat
lahf
sbb
ret
pop
inc
mov
outsl
sbb
daa
in
inc
lret
push
lods
mov
xchg
push
pop
mov
sti
mov
cs
push
mov
add
push
inc
loop
cmc
iret
cmp
dec
sub
add
mov
jo
ja
andb
push
sub
mov
sti
or
mov
fadds
mov
in
outsl
mov
mov
jae
cmp
mov
pop
leave
push
and
into
loopne
lret
and
out
js
mov
popf
xlat
clc
add
in
sub
cltd
or
dec
sbb
dec
sub
cwtl
cli
movl
cli
jle
in
pop
mov
inc
data16
adc
cmp
aad
test
cmp
dec
jecxz
arpl
mov
sbb
adc
dec
pop
adc
test
or
add
and
pop
sub
mov
add
mov
int3
out
outsb
and
addr16
aaa
mov
ret
sbb
ret
push
subl
mov
jmp
pop
test
cmpsb
inc
jge
cmp
sub
sub
lret
xchg
dec
jo
xchg
in
sbb
loope
sub
ss
xor
in
pop
cwtl
push
mov
jp
ret
mov
les
mov
and
lret
pop
pop
aaa
loopne
xor
or
lds
mov
shll
mov
cmpl
cmp
pop
xchg
in
jae
cmp
sahf
inc
daa
js
adc
push
cmpsl
push
sahf
test
xchg
test
xchg
dec
jns
mov
pop
cmp
aas
mov
push
cwtl
test
andb
icebp
data16
pop
xchg
inc
test
ljmp
aam
cld
jmp
xchg
add
fcmovb
pop
mov
or
and
imul
and
lds
jle
push
mov
cmpb
stos
jb
call
jmp
mov
stos
add
pop
movsl
ds
gs
inc
int
mov
fisttpll
insb
add
cmp
cmp
adc
les
xor
stos
and
mov
pushf
or
call
outsb
fcoms
push
pop
mov
hlt
sub
fdivrl
sub
adc
pop
aas
push
scas
shrl
lcall
leave
or
adc
jl
sub
or
jno
and
sbbb
jmp
clc
inc
pop
jno
dec
lret
repnz
xchg
xor
pop
and
sarb
paddusw
stc
or
scas
push
or
es
pushf
fisubrs
mulb
adc
inc
cmp
fwait
mov
sti
mov
jae
shlb
and
adc
xchg
dec
arpl
lret
cmp
adc
add
adc
jp
ret
mov
inc
ret
or
mov
ss
or
add
iret
or
test
dec
inc
sub
pop
loopne
lret
into
popfw
mov
fstps
bnd
push
jnp
sahf
in
lods
shlb
mov
js
lea
add
cmpsb
inc
ds
adc
fucomip
sub
cld
ljmp
sar
xchg
and
dec
and
dec
push
in
ja
push
ret
or
insb
mov
push
clc
decl
sbb
outsl
or
idivl
jne
addr16
outsb
mov
or
sarl
fwait
cmovp
repz
stos
imul
mov
cltd
nop
push
int3
add
mov
sub
je
stos
sbb
and
gs
imul
sti
xlat
es
xchg
and
adc
scas
mov
push
arpl
daa
addr16
inc
inc
inc
je
and
aaa
mov
xchg
adc
aam
daa
loopne
fistl
sbb
lds
pop
jbe
add
stos
hlt
fsubl
mov
inc
lock
and
addr16
xchg
ja
stos
es
stos
add
jne
pop
inc
cmp
sub
hlt
imul
pop
les
testb
xchg
pushf
rcl
push
cmp
sbb
outsl
push
fisubs
add
lea
or
mov
push
lods
lahf
sarl
xchg
pop
dec
fisubrs
sbb
xor
lock
inc
pop
js
jne
stos
and
scas
mov
mov
pop
repnz
fs
out
and
stos
xor
outsl
in
mov
addl
mov
fistpl
mov
jo
out
rcr
pop
jge
adc
and
jns
notl
inc
xchg
mov
mov
mov
scas
jmp
jb
jns
pusha
addr16
in
imul
dec
sub
sti
mov
push
mov
popf
mov
mov
in
pop
dec
loope
lahf
les
inc
dec
fldcw
jge
mov
mov
das
cmp
and
repz
xchg
pushf
or
leave
and
cmp
pusha
push
test
mov
cld
rcll
xchg
stos
cmc
loopne
mov
jae
fnsave
int3
mov
jge
cmp
mov
in
movb
repz
cmp
stos
jns
add
and
mov
cmp
sarl
jno
push
dec
and
mov
cmpb
loope
push
push
movsl
ret
ret
js
xchg
ds
push
sbb
cld
xlat
loope
movl
sbb
movlps
xchg
decb
xchg
sbbl
jno
or
sbb
clc
xorl
stos
add
icebp
jg
outsl
lods
mov
lods
dec
and
leave
leave
inc
adc
add
inc
sbb
xchg
popf
iret
xchg
adc
mov
lahf
pop
in
and
or
in
lods
add
lcall
dec
fmuls
jg
and
dec
jle
sbb
inc
adc
mov
cs
sbb
mov
jae
jle
ret
sbb
adc
in
adc
popa
imul
or
sub
lret
popa
push
inc
mov
push
mov
mov
cmp
outsb
jb
jg
xchg
xchg
inc
es
sar
lret
xor
xchg
cwtl
xchg
out
mov
mov
xor
pop
rcrl
call
xor
fbld
ds
and
in
movsl
nop
pop
fwait
icebp
movsl
mov
mov
jns
mov
cmp
or
lods
xchg
pop
test
pop
fdivr
dec
mov
stos
lcall
mov
fsubrs
sub
icebp
xchg
sub
notl
daa
pusha
xor
enter
add
jmp
cmpsl
in
or
dec
clc
cmp
cld
iret
push
movsb
leave
sbb
dec
aad
inc
inc
xor
pushf
aam
xchg
mov
jb
mov
popa
push
push
cwtl
test
jg
fldcw
out
mov
cltd
imul
jns
inc
xchg
mov
fsubr
dec
jns
int3
dec
subb
pusha
or
int
cmpsl
and
sti
popa
adc
push
pop
mov
int3
jl
or
and
mov
pop
fildll
js
pop
or
cld
popa
push
stos
sahf
cmp
mov
mov
movsl
jb
sub
test
jp
sarl
jmp
mov
add
inc
cld
cmpsb
jmp
mov
and
test
mov
xchg
xchg
inc
mov
leave
aaa
mov
xor
push
imul
cmp
sub
cmp
sbb
aam
add
push
jge
lods
sbb
adc
out
mov
mov
gs
add
lcall
mov
sbb
mov
xor
fists
hlt
lret
out
jg
into
stos
cmpsl
inc
shll
mov
push
jp
xlat
bound
mov
pop
andb
lret
dec
arpl
jo
sub
int
mov
les
movsb
xor
xchg
insb
adc
dec
popa
cmpsl
xchg
enter
lret
sti
add
sbb
cmc
cmp
fstpt
sbb
inc
dec
or
cmp
push
mov
sbb
push
mov
loope
sbb
lret
sub
jnp
cmp
loopne
fisttps
imul
pusha
jecxz
xchg
aad
dec
xor
popf
jle
mov
push
xchg
mov
aaa
jmp
je
xchg
loop
lahf
lahf
and
jne
mov
push
pop
gs
mov
add
add
movsl
push
scas
inc
out
shlb
into
mov
xor
lret
or
push
notl
sbb
push
pop
outsl
gs
mov
mov
or
mov
cmp
rcrb
imul
xchg
js
popf
aas
das
inc
mov
mov
add
out
loope
data16
out
jns
xchg
cmp
test
sahf
out
jecxz
xchg
sbb
mov
push
repz
in
not
pop
pop
dec
xchg
loopne
pop
cmp
int
push
jbe
out
pusha
je
and
mov
mov
ds
leave
fimuls
jg
inc
sub
and
xchg
fs
xor
dec
fildll
dec
psubb
lret
push
or
sub
mov
lods
lea
ss
sub
adc
repz
pop
add
mov
adc
shl
mov
addr16
stos
or
out
cmp
clc
cmp
into
xchg
inc
inc
lock
insb
enter
sbb
cld
mov
mov
mov
int
jecxz
lret
aaa
pop
fmuls
test
xchg
adc
test
ret
push
adc
mov
jecxz
dec
mov
daa
lea
add
in
pop
push
xchg
push
adc
sub
push
in
lret
sbb
dec
imul
ljmp
xor
nop
cmp
pop
or
out
jno
and
call
lods
jns
xor
and
leave
mov
push
dec
inc
lods
arpl
rolb
mov
mov
into
shll
xchg
xor
cmp
mov
mov
in
jno
stos
gs
sbb
fdivp
loop
mov
mov
lcall
push
sarl
mov
xchg
test
imul
dec
cmp
pop
xor
and
dec
and
sub
cld
mov
pop
fmul
out
pop
inc
cmpsl
xchg
xchg
pop
jl
arpl
je
sbb
cwtl
out
popa
or
or
daa
pop
pusha
ljmp
xchg
sub
leave
enter
sub
sbb
mov
popl
inc
dec
fdivrl
mov
jbe
ja
rcr
jge
in
idiv
sbb
ljmp
inc
ret
push
loope
add
or
xor
rcrb
pop
out
xor
jp
dec
loopne
mov
sbb
addr16
add
cmp
arpl
and
add
clc
aad
pusha
jno
int
add
insb
data16
and
pop
dec
mov
clc
scas
mov
out
dec
xchg
lods
cmpsb
push
test
xchg
in
pop
jmp
lods
mov
das
clc
push
cwtl
inc
and
loop
stos
jmp
or
je
imul
gs
lahf
repnz
callw
test
lods
loopne
sti
mov
inc
inc
jecxz
push
push
mov
adc
fidivl
data16
test
ds
jl
fcmovnb
leave
fistpll
outsb
movsl
and
setns
jp
out
and
cmp
and
in
jns
mov
add
push
jg
mov
lcall
push
jge
dec
xchg
dec
xchg
fdivs
mov
inc
dec
mov
add
inc
mov
cli
rolb
xchg
shl
add
rorb
xchg
shll
jbe
cltd
add
popa
pop
xchg
loop
mov
push
mov
push
das
mov
addr16
push
lds
dec
xchg
push
push
mov
sub
je
ret
cmp
xor
pop
adc
mov
add
loope
xchg
adc
cmp
sbb
xor
pop
adc
push
popa
ljmp
jle
lret
jge
xchg
idivl
xchg
sub
in
lret
jno
cwtl
push
in
cs
sahf
imul
ja,pn
fbstp
xchg
push
je
lods
adc
adc
lods
js
mov
pop
mov
add
icebp
mov
mov
jns
rol
cmp
adc
jns
push
mov
lods
sbb
xchg
jle
xchg
or
cmpsl
sub
movsl
pop
lret
test
aad
aad
lea
fbld
mov
xor
sub
ss
dec
cmp
cmp
fs
pop
cmp
hlt
in
jb
aaa
not
push
ret
mov
lahf
movsl
adc
or
jg
mov
mov
aas
push
push
fisubs
or
jg
mov
dec
icebp
inc
dec
xor
pop
xchg
add
outsl
sub
lea
in
mov
arpl
add
cmp
pop
cwtl
cmp
out
scas
and
adc
mov
iret
cmp
dec
push
scas
sub
and
cmpsl
insb
xor
or
xchg
ret
rcll
idivl
aam
push
sbb
leave
insl
and
arpl
jne
push
lods
cmp
cli
push
out
sub
out
jnp
lods
cmp
push
outsl
repnz
and
sub
add
fs
lds
out
loop
add
pop
sub
cmp
popa
xchg
pop
and
loopne
out
ja
cmp
lret
fsts
sbb
pop
bound
movsl
insl
data16
push
xor
adc
icebp
xchg
xchg
repz
mov
push
cld
int
xor
div
loop
adc
stos
mov
add
and
popa
inc
dec
or
pop
adc
in
adc
out
dec
push
mov
mov
nop
dec
test
add
ss
push
movsl
push
aaa
push
pushf
repz
mov
inc
mov
stos
outsl
xor
cmp
shrb
adc
adc
cmc
mov
pop
inc
scas
jmp
pop
daa
cmpsb
adc
insb
je
mov
sbb
ret
push
in
js
dec
rcrb
jg
insl
mov
outsb
lret
bound
mov
addr16
cltd
iret
lock
lods
lock
jns
filds
add
into
or
push
or
and
mov
movntps
insl
stc
frstor
mov
add
inc
cmp
pushf
fwait
push
jecxz
dec
xor
mov
push
dec
push
xor
inc
cltd
in
clc
add
sahf
and
mov
movsb
mov
pop
shrb
push
les
push
popf
aad
pop
mov
daa
mov
fwait
jns
add
jae
fistl
out
sti
clc
outsb
lcall
aas
cmp
fnsave
nop
ret
cmc
jmp
mov
mov
pop
cld
stc
data16
and
pop
push
add
mov
adc
and
std
xor
push
mov
add
push
push
pop
pminsw
enter
notb
out
cmp
adc
jmp
insl
in
aas
adc
cld
mov
push
neg
movsb
pushf
dec
fldl
outsl
cli
xor
cld
sahf
push
sub
ffreep
sub
notl
xlat
cs
xchg
push
inc
jl
mov
or
push
pop
inc
sub
js
push
cmp
mov
inc
pop
mov
cmp
dec
test
push
int
movsl
jnp
bound
xor
rcrb
mov
mov
mov
test
inc
push
or
lods
fsub
mov
pop
adc
cld
andl
inc
jns
mov
andb
data16
fucomip
mov
daa
idiv
push
dec
rorb
test
scas
xor
data16
xlat
and
fmulp
test
and
loop
outsb
jae
das
pop
mov
and
rdtsc
lret
int3
cmpsl
jmp
or
lcall
mov
stos
mov
js
push
jo,pn
stos
js
mov
pop
dec
add
pop
adc
lret
pop
mov
adc
inc
mov
stc
loop
cs
pop
pop
mov
cmp
fs
frstor
push
icebp
repz
stos
arpl
push
cmpsb
pop
xchg
insb
addb
ret
test
mov
sbb
mov
clc
mov
popa
or
insb
in
jae
pop
or
in
and
and
inc
xor
or
xchg
dec
test
xchg
jl
mov
lahf
lcall
and
pop
adc
mov
and
xchg
jle
out
xor
ss
sub
inc
mov
popf
mov
popa
or
iret
xchg
xchg
dec
push
in
test
dec
add
outsl
jmp
movsl
jo
jmp
filds
fimull
inc
shld
inc
inc
in
outsl
addb
sub
and
leave
cmp
lods
dec
popf
loopne
in
xchg
mov
push
xor
insl
jbe
jnp
or
xchg
leave
push
into
pop
in
jmp
mov
cmpsb
or
rcll
mov
in
jmp
clc
rcrb
ret
addr16
jl
push
inc
adc
xchg
fsts
mov
sarb
cltd
add
push
cmp
jmp
aas
dec
sbb
in
test
add
mov
mov
mov
repnz
dec
adc
shl
inc
sub
push
aaa
mov
mov
xchg
xacquire
pop
dec
aas
xlat
sub
aaa
push
sti
imulb
iret
xchg
lds
cmpsb
outsb
shrb
cmp
sub
and
or
jecxz
jmp
in
lds
mov
mov
jns
cmp
pop
mov
push
push
mull
pop
mov
push
xchg
pop
jbe
pushf
dec
shll
lahf
jns
and
add
cltd
xchg
subb
loop,pt
mov
sbb
and
inc
mov
inc
je
mov
ljmp
aam
cmp
push
xor
sub
dec
mov
lods
mov
add
xor
jne
je
jne
adc
xchg
sbb
cmp
imul
hlt
idivb
fwait
and
fistpll
insl
add
or
dec
outsb
orb
xchg
lods
mulb
cmp
cmp
or
test
sbb
loope
lods
scas
jns
adc
mov
add
clc
mov
inc
hlt
loope
cmp
cmp
jne
pop
mov
ds
rorl
dec
call
fidivs
imul
mov
out
and
add
cltd
cmp
xchg
fld1
notb
cmp
xchg
sarl
aas
daa
sub
xchg
xchg
mov
icebp
adc
les
insl
cmp
test
pop
jle
pop
out
push
xor
mov
loope
repz
add
mull
loopne
stos
inc
adc
adc
mov
adc
mov
push
cmpsb
pop
out
push
cltd
leave
stos
jmp
push
jnp
xor
ljmp
scas
lds
inc
out
cmc
dec
xor
outsl
test
mov
cmp
and
in
loope
sbb
aas
push
xorl
sbb
into
xor
fstpl
mov
xchg
fwait
mov
sti
cmp
lea
imul
jne
cmp
mov
sub
push
adc
mov
or
movsl
adc
shll
repnz
push
jle
jge
jae
add
sub
shrl
fnstsw
or
nop
xor
xor
addb
sbb
daa
shl
or
and
mov
lea
mov
mov
push
inc
out
cmp
sbb
das
pop
fldcw
xchg
cmp
cwtl
scas
aas
push
push
inc
xor
jne
add
je
aaa
andb
sub
insb
out
mov
push
ds
jb
dec
imul
test
cmp
je
pop
add
cmpsb
adc
xchg
push
lods
dec
push
push
adc
insb
lods
shlb
stc
scas
cld
jmp
and
add
xor
test
insb
jne
inc
in
sbb
xorl
andl
jo
es
sbb
mov
xor
and
xchg
cmpsl
sub
imul
add
fidivrl
mov
sbb
add
jecxz
inc
push
in
inc
fwait
jns
push
add
jo
mov
cmp
fwait
xchg
fs
incl
jne
push
cltd
mov
mov
hlt
inc
mov
pop
xchg
mov
loop
movsl
pop
mov
push
dec
inc
sbb
stos
fldl
dec
rcrl
pop
outsl
test
outsb
mov
mov
push
pushf
cmc
or
loopne
in
mov
cltd
pop
jb
push
sti
xor
ficoml
movsl
nop
inc
cmp
sub
pop
and
jo,pn
xor
cs
pop
sbb
repz
imul
sub
cmp
mov
lds
jmp
insl
sub
movsb
cli
inc
outsl
push
push
stos
sbb
orb
out
pushf
or
fst
pusha
lret
sub
jns
jne
sbb
sub
test
pop
adc
enter
test
incl
jmp
fwait
inc
mov
in
xlat
mov
sar
sbb
cwtl
sbb
mov
inc
pop
push
sbb
xlat
mov
outsb
add
fnstsw
gs
and
aaa
sub
cli
jle
int3
iret
jp
push
inc
mov
jno
sub
aaa
fmull
cltd
mov
ja
into
jno
lret
das
xlat
adc
fisttpl
aaa
push
mov
cmc
or
cli
faddl
imulb
push
fidivl
stc
xchg
lahf
mov
push
mov
inc
cmp
roll
imul
sbb
fmuls
test
mov
pop
outsl
push
dec
and
sarb
enter
sarb
loope
dec
es
mov
sbb
dec
pop
movsb
push
fldl
sbb
mov
pop
adc
jno
push
sbb
xchg
mov
movsl
int
pop
push
in
push
je
jmp
std
sub
jns
xor
sbb
rorl
xchg
mov
xor
pop
fidivrs
sbb
les
scas
outsb
int
fs
jne
push
ucomiss
adc
dec
out
mov
popl
loop
adc
mov
mov
mov
sbb
cs
push
sub
xor
in
sub
push
cmp
lods
inc
xor
negl
in
mov
arpl
jo
idiv
jbe
out
push
push
inc
inc
in
lahf
jns
and
pop
xchg
lea
jp
fsts
imulb
xchg
push
hlt
ds
xchg
mov
pusha
lock
fcmovu
icebp
fadds
les
add
add
shl
mov
and
xor
sub
pop
xor
addr16
andnps
xchg
ja
repnz
dec
add
push
inc
nop
in
cli
clc
push
std
outsb
xchg
pop
mov
xchg
enter
push
scas
hlt
adc
add
outsl
adc
mov
cmp
lea
imul
rorb
ficoms
sub
mov
fsubl
and
arpl
aaa
xchg
cwtl
into
push
or
imul
cmpsb
fstpt
xchg
and
pushf
shll
imul
fwait
xchg
jbe
sub
push
cmp
imul
jp
sub
sbbl
popf
pop
fdivs
inc
cmp
mov
int
dec
xchg
lds
and
daa
mov
or
dec
dec
jmp
mov
sub
jnp
jge
es
adc
xchg
fcmovnu
mov
inc
sbb
pop
decl
data16
leave
sub
mov
pop
jo
sub
nop
mov
mov
xchg
xchg
fs
in
sbb
je
hlt
add
and
out
push
ja
jmp
add
int3
xchg
cwtl
fwait
sarl
xchg
or
imulb
cmp
inc
jae
mov
dec
rorl
lods
stc
or
jnp
aas
shr
push
outsb
or
sbb
aaa
loope
sub
cmc
insl
and
aad
orl
pop
and
and
mov
add
cs
inc
pop
pushf
fwait
push
or
notl
hlt
es
aam
mov
cmc
cmp
test
pop
sbb
add
addb
call
cs
pop
mov
scas
pop
jae
and
pop
adc
mov
mov
lret
dec
mov
sarb
cs
sub
gs
popa
add
adc
mov
pop
popfw
xor
pop
in
mov
dec
jno
fcmovb
fimull
shlb
fstpl
mov
sub
mov
mov
cmpsb
iret
jle
es
loopne
push
icebp
lea
stos
movsl
fcmovu
mov
loopne,pt
pop
jo
loopne
jb
inc
leave
pushf
or
icebp
repnz
push
adcb
je
mov
pop
fs
dec
and
fcoml
clc
or
or
adc
mov
inc
mov
xchg
adc
test
jno
mov
xlat
arpl
lahf
mov
in
outsb
mov
andb
pop
outsl
jnp
or
mov
call
xchg
adc
xor
scas
and
les
mov
mov
mov
xchg
aaa
mov
cmp
pop
popa
outsb
xlat
cmpsb
jle
xor
and
test
ret
jbe
mov
adc
push
imul
mov
jge
and
fstpt
fwait
or
lret
aam
or
stc
or
lods
push
into
xchg
ljmp
lret
ss
xor
cmpsb
push
xor
lea
hlt
repnz
lret
orb
jnp
std
xchg
fists
lods
out
cmp
dec
aaa
out
mov
out
inc
and
or
imul
mov
cmp
cmp
popa
jl
sub
pop
jg
inc
push
xor
ret
or
mov
insl
js
adc
ficoml
loop
jmp
jb
mov
test
add
icebp
jns
mov
jle
lret
xor
test
pop
dec
test
push
inc
test
mov
call
mov
xor
ljmp
mov
iret
dec
idiv
jbe
mov
sub
push
adc
adc
aad
mov
jb
inc
mov
call
adc
xchg
and
cmpsl
add
insb
jge
sbb
lds
out
xor
lea
or
xchg
popf
mov
adc
adc
cmp
jnp
xchg
jp
iret
lcall
push
pop
gs
push
outsl
push
and
push
loope
std
rolb
mov
pop
rolb
imul
inc
mov
repnz
pop
aas
push
aad
mov
xchg
xor
arpl
scas
fxch
sbb
cmp
mov
xchg
pop
mull
cmp
fistps
test
stos
in
push
aaa
xlat
stc
jne
cmp
or
jno
clc
pop
cmpsl
inc
jmp
sbb
adc
cmp
mov
mov
xlat
and
inc
xor
rcll
repnz
pop
je
push
adc
fsubrl
cmp
out
out
js
push
adc
scas
rcr
jo
imull
xchg
pop
aaa
js
xchg
test
test
cmp
sarl
sub
xor
movsb
mov
rep
mov
mov
xchg
dec
mov
idivl
sbb
add
out
rclb
movsb
push
andl
mov
gs
inc
popf
sbb
or
outsb
sub
push
cmc
imul
dec
mov
dec
aam
repnz
fdiv
sbb
stos
dec
or
fs
not
pop
xor
and
mov
fbstp
xchg
adc
jp
leave
mov
xor
into
ljmp
insl
add
inc
push
incb
adc
cmp
sbb
aaa
pop
sarb
icebp
call
lahf
xchg
jmp
int3
jl
sub
cmpsl
sbb
xchg
pop
sahf
in
addr16
push
xchg
mov
cmp
in
jb
push
fnsave
outsb
addr16
push
leave
insl
cmp
cltd
sub
dec
lock
mov
ja
xlat
push
inc
insl
ljmp
adcb
xchg
in
pop
out
push
lret
push
xchg
xchg
cld
popa
leave
adc
jl
lcall
bswap
out
bound
lahf
fwait
sti
sbb
mov
in
aad
mov
mov
jg
popf
fbstp
jbe
or
mov
addr16
not
xchg
xor
dec
xor
jae
add
jae
dec
sbb
jg
mov
push
sti
push
xlat
int
jno
idivb
pop
jle
stos
outsb
or
negb
sbb
sbb
jns
into
hlt
push
call
cmp
push
mul
dec
ret
mov
push
out
pop
pushf
or
inc
adc
sub
sub
sbb
ftst
mov
xchg
push
imul
sub
ret
insl
shr
outsb
sub
scas
rcl
ret
icebp
fists
rcrl
pop
pop
clc
xor
out
aas
mov
adc
xchg
sbbb
sub
scas
gs
lds
mov
dec
push
mov
fadd
xlat
dec
fs
xchg
jmp
mov
inc
or
xchg
ss
xlat
pop
xlat
nop
and
jno
leave
mov
rol
loopne
jl
sbb
or
xlat
sub
or
arpl
and
push
cmp
add
cmp
push
adc
mov
pop
stos
jecxz
xchg
and
push
inc
push
and
clc
or
push
adc
jae
dec
in
push
mov
stos
jns
stos
into
arpl
cs
fistps
adc
cmpsb
clc
nop
push
jl
pusha
xchg
pop
adc
push
les
sahf
pushf
mov
xorb
lcall
sbb
test
lahf
and
test
lea
add
mov
cmp
lods
inc
ds
cli
jg
dec
inc
rcrl
scas
and
lods
lds
test
push
arpl
jo
lods
testl
mov
cmp
sbb
pop
and
ds
flds
or
scas
out
loope
aam
push
jecxz
pop
inc
jge
mov
inc
jnp
loope
xchg
sbb
xchg
mov
fucomi
rcl
test
sub
scas
fsts
add
cltd
mov
aam
dec
xorb
call
gs
mov
or
mov
mov
aaa
sahf
shl
aad
out
inc
jl
sbb
pop
xchg
pop
subb
sbb
push
movsl
movsl
int
pop
stos
iret
push
scas
pop
and
and
fstp
and
adc
pop
cmp
and
push
mov
lds
sub
or
push
push
ss
ret
jle
xchg
dec
or
xchg
mov
mov
cmc
movsb
jp
stc
cmc
ds
vcmpps
xchg
mov
or
jno
mov
and
ja
push
mov
cltd
inc
popf
idiv
and
jno
dec
xchg
or
mov
cmpsl
cltd
mov
and
add
mov
negb
cli
xchg
movsl
adc
and
pop
inc
push
enter
pop
inc
pop
and
es
shrb
mov
and
pop
out
ds
in
out
lcall
aam
pop
mov
scas
cwtl
xor
adc
mov
dec
mov
repz
loope
xchg
mull
mov
push
xchg
cltd
push
mov
push
pop
sub
test
leave
pop
scas
cmc
mov
orl
mov
jne
mov
xchg
hlt
pop
sub
mov
stos
ftst
sti
xchg
mov
pop
xor
sub
ret
std
pop
push
jns
sub
and
shrl
xor
mov
or
in
cmp
js
repnz
outsb
push
jnp
cmp
add
mov
mov
fisubrs
fcoms
in
pop
cmp
repz
lods
fucom
adc
js
fwait
and
push
jle
mov
ja
mov
sub
ss
sarl
inc
loope
nop
jge
repnz
test
jno
outsb
loopne
in
or
lea
dec
jecxz
bound
shrl
push
inc
subb
cld
jg
jmp
dec
mov
cmpsl
jl
xor
in
mov
stos
xchg
lods
imul
jmp
popl
mov
push
imul
inc
xchg
mov
cli
int3
inc
mov
and
xchg
fmul
les
dec
add
mov
std
orl
dec
push
test
fiaddl
cmp
pop
or
lds
lea
cmp
mov
and
sahf
jge
jge
inc
pop
sub
xchg
cld
sub
and
mov
pop
jg
push
incb
dec
inc
imul
fbld
daa
ret
xor
sub
leave
mov
jb
ficoms
adc
inc
test
jge
push
pop
mov
lahf
repz
sbb
xor
in
cmp
and
ret
enter
pop
jnp
subb
xchg
iret
lods
xchg
push
dec
or
mov
int3
mov
cmp
stos
sbb
and
adcb
xchg
int3
ret
jg
test
loope
mov
mov
pop
mov
enter
das
mov
jb
adc
push
cmpsb
push
pop
aaa
mov
push
cmp
inc
pop
mov
mov
dec
pop
mov
push
mov
add
cmp
lahf
into
stos
push
pusha
outsl
lock
sub
xchg
cmp
xor
add
stos
push
add
imul
sub
jbe
in
inc
lahf
aad
jae
in
xor
jge
sbb
mov
fdivr
xor
xchg
xchg
xor
adc
cmp
push
sub
inc
mov
clc
sbb
cmp
mov
push
pop
repz
lds
pusha
jnp
mov
cmpb
mov
xchg
inc
scas
shlb
stos
mov
cltd
loope
fs
xchg
int3
adc
cltd
or
leave
dec
gs
in
xchg
lcall
vcvtdq2pd
push
lds
xor
test
add
mov
mov
mov
loope
cs
in
inc
icebp
cmpsb
inc
jb
sub
iret
fsubrs
pusha
add
fimuls
adc
lea
in
push
je
bound
rcrb
in
imul
dec
daa
mov
or
push
divl
hlt
sub
adc
jo
xchg
adc
or
in
sbb
insb
jb
cmp
cmpsl
xor
ficoms
lahf
sbb
jns
sti
es
aam
add
pop
xlat
mov
je
arpl
lods
add
sbb
out
xchg
or
push
xor
mov
cs
jle
xor
xor
pop
jle
addr16
lahf
sub
fwait
cmp
js,pt
sbb
cmpsl
jae
sbb
icebp
jl
int
mov
mov
lcall
xchg
test
popf
xchg
jecxz
test
mov
leave
inc
and
push
or
xchg
push
inc
sarb
imul
push
stos
cli
mov
xchg
mov
push
add
pop
scas
xlat
jmp
roll
sti
int
xchg
add
push
pop
enter
cmp
inc
ja
cmp
leave
mov
fs
push
xor
cmp
and
leave
scas
dec
pusha
lods
lock
jmp
sbb
bound
repnz
test
push
fcoml
cli
pushf
loop
push
and
add
push
outsb
arpl
push
mov
mov
inc
or
int3
cmp
hlt
lods
sbb
push
jecxz
push
jns
jnp
add
cltd
jns
xor
push
leavew
mov
jp
out
mov
outsl
bound
lret
mov
lcall
outsb
nop
dec
das
enter
mov
hlt
fcoml
sub
es
outsl
test
in
dec
shlb
or
aas
and
stos
xchg
xchg
and
lret
and
in
ss
push
xchg
cli
mov
push
and
std
std
jmp
dec
insb
mov
repnz
out
es
or
dec
jb
cmc
push
cmp
push
clc
movups
lret
outsb
jne
xchg
out
cld
mov
push
lea
test
add
mov
mov
out
out
stc
sbb
inc
cmpsl
scas
pop
push
mov
fisubs
xor
pop
push
imull
cs
sub
std
imul
push
insb
imul
roll
in
pop
loop
add
ja
pusha
lock
xchg
leave
clc
jno
in
stc
fwait
mov
xchg
push
das
or
jae
subl
inc
xchg
mov
pop
movsb
and
mov
shr
pushw
shll
clc
jecxz
cli
jmp
repnz
inc
dec
mov
mov
pop
mov
aas
cltd
je
pop
mov
push
sbb
test
test
lods
scas
pop
cmp
divl
imul
insb
adc
insl
xor
shlb
je
ljmp
inc
loopne
and
sub
mov
mov
xchg
and
cmp
scas
arpl
aaa
out
adcl
arpl
mov
dec
incb
jae
mov
cwtl
sbb
mov
sbb
push
sti
mov
dec
int
adc
lret
sti
cmp
dec
jne
push
add
cs
js
push
mov
mov
jp
pop
xchg
push
cmp
prefetch
or
jmp
enter
xchg
sub
lods
imulb
nop
mov
jbe
mov
mov
mov
imul
inc
xchg
shrd
and
shlb
bound
fidivs
lret
in
lahf
push
adc
jae
push
ret
fdivrl
shr
movaps
or
lahf
andl
cmp
arpl
nop
cmp
into
aam
pop
add
xor
pop
aas
add
jo
cs
add
cltd
out
lcall
sarb
lea
inc
out
jno
xchg
or
and
lods
aam
jae
fistpl
push
mov
shll
fsts
inc
add
loop
repz
scas
jb
xor
jbe
or
sti
xor
or
mov
inc
dec
fwait
sbb
add
cli
aam
xlat
repz
mov
mov
jl
mov
in
sar
mov
fscale
int
xor
lea
xor
xchg
mov
loopne
cmp
inc
fcoms
mov
fcom
out
mov
xchg
idivl
in
pop
cmc
jae
movsl
mov
mov
shl
cmp
adc
pop
pop
rcrb
pop
repnz
mov
dec
fldt
dec
push
das
xchg
loopne
jo
fimuls
jecxz
pop
mov
lods
ss
imul
xchg
mov
xchg
fs
sti
push
xchg
stos
push
rcrl
dec
les
dec
pop
jge
ss
shll
aaa
mov
push
add
xchg
jle
pop
pop
pop
pop
in
repz
xlat
or
mov
xor
fucom
ljmp
and
dec
cmp
in
inc
push
sub
dec
fldl
mov
cltd
and
lods
int
add
inc
test
pop
addr16
jo
cmp
xchg
das
jb
clc
add
or
dec
addr16
lret
mov
cmp
sbbb
in
das
gs
dec
sub
cltd
jecxz
hlt
and
xchg
in
mov
cmp
pushf
sbb
shrl
movsb
and
sbb
in
xchg
adc
inc
adc
popf
fwait
add
dec
stos
jns
ret
jp
mov
pop
mov
fxtract
insb
xor
mov
push
and
or
pop
aad
dec
push
pop
leave
sbb
test
sub
mov
push
pop
icebp
out
pushf
call
cmpsl
in
fstpl
clc
je
push
mov
vmaxps
mov
jns
pop
xchg
test
fildl
cmp
sbb
inc
into
inc
cwtl
mov
int3
sub
ret
push
movsl
out
fsubrs
ret
mov
jnp
ds
int
ret
out
sbb
xlat
outsl
in
cmp
je
jecxz
mov
inc
push
icebp
in
lcall
jae
je
xchg
orl
lods
and
data16
adc
dec
dec
jb
fmuls
jge
cmp
dec
xor
mov
pop
sbb
and
pop
ljmp
or
ret
xchg
fs
sub
insl
lea
inc
push
pop
pop
scas
mov
push
and
sbb
sub
mov
repz
xchg
jo
fadd
mov
mov
pop
push
scas
lea
sub
lahf
popa
mov
subb
xchg
fmulp
xor
fldt
daa
loop
add
mov
shll
mov
aas
or
in
add
addr16
cwtl
pop
and
in
incl
xor
inc
in
in
or
scas
mov
push
pop
jno
test
fsts
fcmovnbe
outsb
cltd
popf
sbb
push
imul
pop
pop
rclb
shlb
roll
cld
pop
sbb
imul
int3
js
imul
mov
sub
lret
dec
aas
xchg
mov
sub
and
jp
mov
adc
xchg
stos
in
mov
imul
dec
mov
xor
int3
lahf
repnz
jecxz
pop
add
dec
lea
in
sti
repz
jle
mov
mov
insl
sar
sub
lods
rolb
xor
outsb
ja
gs
adc
loopne
lea
cmp
mov
push
fisubrl
ja
sbb
outsl
rol
inc
popa
dec
pop
and
jp
cmp
xor
push
or
add
addl
push
adc
xor
mov
shr
test
jo
or
inc
push
mov
jp
lahf
dec
push
dec
sbb
xor
sub
jle
inc
mov
xchg
lret
sbb
pop
pusha
mov
cmp
or
lods
fldl2t
or
lods
xchg
push
push
mov
add
rorl
nop
stos
into
push
repnz
add
sub
daa
and
and
repz
push
sbb
cmc
pop
dec
mov
pop
das
cwtl
pop
mov
notb
iret
mov
or
jl
jmp
pushf
and
ja
push
test
dec
fsubl
lds
pop
push
adc
pop
push
jb
out
out
lahf
mov
push
inc
out
out
int
xlat
mov
into
aaa
cltd
ret
and
jae
sub
lret
mov
ret
adc
bound
push
xchg
insb
mov
js
jle
mov
mov
add
jo
inc
fidivl
cltd
push
dec
insb
ret
aad
js
das
cli
add
xchg
rcl
jno
inc
incb
add
mov
inc
testl
cs
data16
lahf
pop
sahf
sbb
ficompl
sbb
xor
ffreep
mov
pop
stos
sub
xchg
or
lret
stos
movsb
sub
int
xor
jbe
fcoms
aad
jno
jne
movsb
mov
insb
fwait
imul
cmp
add
ret
outsb
cmpsl
mov
jg
or
aas
sub
ja
jge
ret
push
and
fimull
es
idivl
mov
cmpb
loope
jae
stos
in
inc
pop
jne
lock
insb
jp
ja
add
roll
dec
fbstp
cmpb
lock
lock
push
sub
and
movsb
ficompl
aas
clc
add
mov
je
test
in
jns
call
jmp
and
mov
push
sbb
mov
into
push
aas
sub
xchg
dec
inc
mov
mov
jnp
enter
pop
pop
adc
add
and
les
rol
ret
cmpsl
dec
mov
outsb
push
sub
rcll
sub
scas
inc
and
unpcklps
stos
mov
jmp
jns
cwtl
pop
and
fidivl
jae
loope
push
aam
daa
mov
sbb
cmpl
outsl
xchg
std
leave
xor
in
mov
mov
aam
mov
lds
adc
mov
loopne
jns
hlt
sub
arpl
sub
adc
xchg
fstpl
push
leave
sbb
aas
stos
inc
jp
ja
int
popl
nop
push
push
pop
ficoms
xlat
cmp
loop
pop
pop
aaa
les
jo
mov
jg
sbb
sbb
aas
into
lds
sti
sub
mov
mov
jbe
xor
cmp
and
cmp
jg
icebp
sbb
adcl
ja
add
lock
sahf
inc
dec
and
cwtl
or
cmc
add
push
mov
sbbl
lcall
rol
pop
imul
dec
pop
xchg
loopne
xchg
loop
outsl
jmp
xchg
add
adcb
jo
xchg
dec
dec
or
jae
mov
stos
mov
mov
sub
aaa
cmp
sbb
enter
xor
lea
mov
or
loope
mov
mov
xorb
popa
cmp
jnp
iret
add
mov
xor
mov
subl
out
scas
cwtl
sub
sarb
je
xor
leave
psubb
sub
hlt
lret
das
cwtl
sbb
shlb
adcb
pusha
dec
shr
lahf
or
lds
inc
mov
out
fmuls
jl
add
mov
pop
xor
jae
inc
push
dec
mov
cmpsl
insl
mov
mov
jbe
loopne
std
scas
jle
sub
loop
es
stos
test
cli
push
aas
loope
clc
and
ds
jl
fsubr
mov
xchg
cmp
ret
cmp
movsb
mov
push
popa
push
mov
xchg
imul
js
and
and
cmp
shlb
clc
xchg
mov
scas
loopne
cmpsl
shll
das
mov
ds
mov
inc
pop
mov
out
cmpsw
scas
fisubl
cwtl
lods
or
fistl
js
int
negl
cli
repz
shll
inc
push
pop
dec
or
ficoml
add
jb
dec
popa
dec
aad
aad
loopne
mov
cmp
inc
xchg
mov
pop
es
sub
insl
sub
sub
jo
mov
pop
insb
mov
xorl
rolb
and
pop
and
repnz
cmp
out
ret
mov
add
dec
gs
or
add
cltd
pop
fldl
dec
cmp
mov
jbe
push
adc
mov
pop
inc
and
lcall
fidivrl
or
into
xchg
fisubl
inc
sbb
pop
int
std
popf
adc
and
fisubs
mov
rorb
std
addr16
popa
fldl
dec
push
xlat
jmp
rol
ljmp
push
ja
cmp
inc
inc
and
xlat
bound
xor
push
push
enter
xchg
mov
xchg
xchg
and
push
cmp
pop
cld
aad
cmp
repz
cld
mov
sub
pushf
movsl
je
jno
imul
sub
sbb
push
sahf
call
mov
push
mov
mov
cli
xlat
cmp
add
jmp
or
adc
imul
xor
ret
pop
cli
stos
js
shrl
rcrb
inc
aas
fstp
mov
out
ficomps
fwait
pop
mov
pop
rcr
or
inc
enter
out
mov
xor
sbb
and
cli
nop
push
bound
fdivr
movsb
or
cwtl
out
popa
xor
cli
aaa
aaa
xchg
ficoms
mov
imul
jne
cmpl
xor
inc
outsl
pop
sahf
cmp
adc
xor
jo
adc
fmuls
imul
mov
imul
push
int
imulb
and
dec
movsl
jle
data16
adc
decb
adc
inc
jmp
mov
popa
cmp
or
mov
sub
lods
scas
mov
aad
sarl
into
fsub
push
lret
lret
rcll
test
lds
mov
mov
aad
shll
fisubl
pushf
dec
sahf
xchg
in
pusha
shll
dec
sahf
push
xor
enter
loope
insb
push
sub
jbe
inc
mov
jge
enter
sbb
into
or
push
outsb
dec
sti
pop
dec
mov
add
gs
pop
mov
sub
sub
cmpsb
fcom
and
mov
out
outsb
repz
mov
inc
mov
push
int3
jp
mov
adcl
movsl
fiaddl
sbb
ret
pop
stos
loop
int3
mov
push
pop
jns
icebp
push
les
mov
xor
lret
aaa
cmc
pop
int
scas
and
pop
aad
pop
adc
orb
stos
adc
add
adc
mov
xchg
mov
inc
cmp
add
ljmp
mov
pop
test
push
jno
rorb
aad
pop
dec
inc
out
sbb
adc
adcb
jno
and
mov
adc
mov
mov
ret
xchg
imul
push
mov
inc
inc
jecxz
ljmp
add
cmpsb
or
lahf
pusha
jp
cmp
xchg
xor
lds
popa
push
and
dec
push
out
xchg
push
mov
fnsave
cli
fs
fcoml
xor
push
sbb
sub
aas
sub
add
cmp
add
push
lcall
popf
es
sub
or
mov
inc
fildl
and
jmp
pop
ljmp
pop
mov
pop
test
enter
add
cmp
pop
cmp
push
mov
cmp
cmp
sbb
jb
popa
cmpsb
repnz
xor
insb
icebp
push
jno
cs
das
popa
or
cltd
scas
dec
push
fldt
and
dec
and
je
imul
and
dec
lret
out
std
test
xor
cld
adc
lcall
fsubrl
mov
xor
imul
nopl
rcrb
es
out
inc
mov
lcall
push
pop
jmp
dec
or
or
xor
jecxz
andl
mov
or
fs
fsub
into
xchg
cmp
sahf
or
xlat
inc
rol
loope
sbb
and
stos
or
dec
jb
pop
lahf
xchg
sarb
mov
mov
cmpsl
movsl
push
das
leave
dec
movsl
and
lods
mov
aas
bound
adc
out
mov
cmpsb
cltd
adc
ret
sub
ret
aaa
ja
bound
fstpt
in
pop
xor
les
cmc
sub
or
lea
xor
inc
outsl
jge
lret
rcrb
subb
or
mov
sub
jne
icebp
jge
aam
dec
dec
mov
xchg
xchg
sbb
dec
pusha
mov
aas
lcall
xor
cmpsl
sub
aad
push
jecxz
or
mov
aaa
inc
sub
and
mov
insb
jl
test
add
imul
sub
and
mov
sbb
lcall
sbb
mov
iret
mov
or
icebp
lea
jmp
pop
insb
inc
and
sbb
dec
sbbb
mov
mov
icebp
js
mov
insl
push
cmpsl
outsb
cmp
push
andb
xchg
lret
or
setno
mov
xor
push
es
or
clc
shlb
mov
sbb
pop
sub
jmp
add
fs
je
test
mov
cmp
mov
testb
jecxz
jg
test
call
sarl
jp
leave
jo
es
push
int
dec
xchg
or
xchg
clc
test
leave
fdivr
sahf
mov
sub
lds
data16
ds
pop
nop
lahf
loopne
movsb
sbb
mov
pushf
mov
popa
rcl
psubd
shr
jle
cld
fcomps
loop
cld
ret
roll
mov
insl
daa
jns
movsb
mov
lcallw
cs
jecxz
xor
imul
mov
jnp
mov
jle
jne
mov
iret
or
xor
imul
add
in
nop
sbb
push
dec
jg
push
mov
adc
fildl
push
vaddsubps
jo
sbb
sbb
aas
inc
cmpb
outsw
in
sub
jmp
inc
jp
push
hlt
in
push
push
mov
shll
dec
cltd
sbb
adc
int3
cmp
xor
aad
stos
cld
stos
push
push
or
add
aas
cltd
loope
movsb
push
and
xlat
xchg
adc
mov
push
loopne
add
mov
call
rcr
adc
stc
mov
test
mov
popf
fisubs
or
std
mov
push
pop
jae
repz
movsl
int
cmp
fnstcw
scas
aad
outsl
push
dec
jmp
rcll
mov
xlat
xacquire
xor
pop
int
out
jmp
in
adcl
stos
scas
pop
arpl
jnp
fstl
push
xor
out
push
inc
cmp
jecxz
std
cmp
mov
arpl
call
xchg
and
stc
xor
jne
dec
cmp
lock
bound
jb
cmp
xchg
movsb
xor
mov
adc
divl
cmpsb
sbbb
rcrl
pop
fistl
cmp
mov
jno
adc
push
faddp
shlb
aad
outsb
inc
fdivrl
mov
in
hlt
test
jne
sbb
hlt
jecxz
add
pop
leave
pop
insl
adc
test
add
nop
mov
fistps
pop
lods
test
mov
push
dec
xlat
mov
lahf
clc
into
stos
in
sbb
adc
loop
mov
dec
iret
mov
nop
jne
sub
mov
movsb
orl
aas
mov
inc
nop
inc
or
fbld
movsl
enter
das
jne
incl
push
and
xorl
sbb
std
out
sub
pop
or
sarb
insl
push
lods
add
push
cmp
fadd
jb
stc
dec
mov
orb
adc
and
xor
adc
out
mov
push
sub
test
cmp
add
ss
inc
jns
notb
outsb
sbb
fisubs
push
dec
and
js
push
xlat
cmp
sarb
f2xm1
insb
test
pop
sti
nop
int3
adc
outsl
add
cmp
pop
test
mov
mov
mov
xchg
dec
in
imul
push
das
cld
cmp
pushf
aas
aaa
mov
pop
dec
xchg
into
fimull
scas
in
cmp
ljmp
cmp
shll
dec
hlt
dec
jge
iret
cmp
xchg
dec
dec
xchg
mov
lcall
imul
mov
dec
mov
sbb
and
mov
cmp
iret
mov
lcall
or
ss
mov
cmc
mov
push
jp,pn
mov
cmp
push
pushf
push
jl
inc
bound
inc
jns
ds
sbb
inc
lods
add
pop
pop
dec
pop
icebp
cmp
xor
adc
add
xchg
pop
mov
adc
inc
inc
xor
pusha
or
pop
inc
out
fidivl
in
xorb
lcall
sti
je
das
adcb
sbb
xchg
dec
pop
jl
inc
mov
push
inc
or
xchg
xchg
lods
xor
cltd
shlb
push
outsb
dec
push
fistl
jnp
push
xor
xchg
xor
into
ret
xchg
sub
xor
mov
cmc
pushf
sar
jmp
cmp
dec
mov
mov
out
sbb
lods
mov
inc
add
jp
aaa
push
adc
repnz
fcmovne
aad
cld
test
lea
jl
push
call
or
push
pushf
sbb
subb
out
call
mov
cld
inc
or
adc
pop
cmp
fldl
roll
pop
insl
out
mov
push
dec
mov
lods
outsb
jmp
imul
and
inc
aam
mov
andl
pop
jnp
mov
mov
loop
cmp
xchg
mov
fdivrs
cwtl
add
sub
je
push
imul
cmpsb
push
in
add
je
in
outsl
shr
or
sbb
xlat
push
dec
mov
mov
push
gs
or
mov
xchg
jecxz
fdivrp
sahf
test
mov
add
and
jp
sbb
mov
not
mov
mov
ljmp
adc
lret
shll
inc
xor
add
sar
xchg
sub
push
xchg
add
ljmp
mov
lea
xor
in
xor
or
pop
inc
or
or
xlat
pop
sarl
or
inc
std
and
cmp
xchg
pop
push
cmpsl
push
mov
aad
or
xor
mov
orl
add
cld
fidivrl
mov
dec
gs
test
imul
das
pusha
jne
inc
adc
push
movsl
mov
iret
out
pop
repz
out
nop
cltd
rorl
pop
std
xor
xor
xor
pushf
sbb
jae
sub
adc
adc
scas
sbbl
lock
push
or
and
fwait
push
repz
and
fwait
xor
cwtl
out
dec
loopne
sub
cmp
rcrb
cmp
mov
sbb
mov
dec
adc
jmp
inc
inc
je
lret
push
jge
leave
fdivl
jecxz
ljmp
jmp
je
fsubr
ja
pop
xor
fcomp
jecxz
and
sti
pop
jns
add
mov
into
cwtl
data16
testl
xchg
mov
and
fwait
sbb
dec
popf
in
pop
shlb
insb
push
push
xchg
mov
push
mov
cmc
insl
bound
xchg
push
stos
add
mov
xchg
outsb
ret
mov
ret
lods
int3
cmp
mov
jg
cmp
iret
fdivrl
pop
ret
dec
xchg
jp
das
out
in
jge
pop
sbb
pop
cmc
and
and
mov
sarl
sbb
add
loope
test
add
js
push
jbe
lods
in
popf
int3
cmp
outsb
ljmp
mov
sahf
imul
lods
mov
test
push
cld
inc
mov
adc
mov
lcall
out
gs
mov
fstps
inc
or
or
fildll
dec
sub
jmp
push
negb
add
in
mov
sub
dec
jo
pop
dec
cmp
gs
xchg
loope
aad
cs
cmp
mov
mov
test
mov
insb
push
inc
pop
subb
inc
cmpps
out
test
sbb
or
subb
fiaddl
mov
inc
movsb
mov
in
mov
ljmp
jl
clc
cmp
adc
insl
fcoms
jp
jl
dec
sbb
mov
ret
aad
adc
pop
mov
je
xor
or
dec
loopne
repnz
loope
adcl
xchg
pop
mov
aam
cmp
mov
fdivrs
mov
jo
mov
addr16
stos
jns
rep
jns
lcall
xchg
lock
jl
sbb
jmp
inc
movsl
cltd
adc
pop
mov
popa
loop
and
xchg
xchg
inc
pop
pop
imul
ljmp
bound
test
mov
or
std
inc
inc
divl
jge
movsl
xor
mov
xor
pop
mov
fs
mov
pushf
shrl
sbb
cmp
sbb
enter
aas
and
xor
mov
insb
add
faddl
ljmp
sub
sbb
lret
sbb
sub
mov
stos
sub
push
neg
sub
dec
adcl
loopne
cmp
pop
mov
call
aaa
lret
dec
add
sub
dec
test
int3
popl
mov
xchg
inc
sbb
mov
inc
test
out
mov
push
stos
inc
int
test
out
stos
clc
pop
cli
inc
imulb
out
bound
cmc
add
fcoml
subb
es
adc
fcoml
movsb
sub
sub
ror
out
in
jns
cmp
test
adc
movsl
ret
cmp
cwtl
xor
sub
out
cmovle
pop
cmpsb
popa
in
ret
test
fsubrl
les
pop
cmp
sahf
mov
iret
push
scas
sar
cmp
fmull
inc
lea
mov
bound
dec
and
popf
and
xchg
mov
out
mov
popa
or
dec
imul
and
add
rclb
xchg
jae
sbb
xchg
leave
js
mov
ret
lahf
dec
jp
pop
lea
fwait
pushf
xor
sbb
call
jle
decb
int
addr16
sarb
mov
sub
xchg
jp
push
lock
sub
xchg
dec
jmp
and
cmp
adc
arpl
scas
or
addl
testl
dec
aas
add
adc
push
jle
lea
int
dec
loopne
mov
sbb
imul
pushf
out
xchg
jns
in
and
mov
fimuls
hlt
imul
xchg
push
imul
loope
cli
or
lret
divb
popa
lret
xchg
cmp
sar
movsl
into
adc
fistpll
fcoml
ss
fwait
pop
ss
dec
sarl
xor
in
dec
jne
xor
orl
lods
mov
fwait
cltd
add
jb
push
faddl
pusha
ja
imul
jns
jl
sbb
mov
jo
idivl
mov
nop
jb
neg
mov
push
mov
int3
data16
inc
in
mov
jb
push
es
aad
pop
clc
pop
jns
test
sbb
mov
test
and
test
les
cmp
cmc
push
pop
sub
push
gs
into
xchg
xchg
mov
movsb
or
sarl
movsb
xor
cmc
iret
cmp
xchg
xor
popa
insb
push
call
sub
das
push
xchg
daa
sbb
xlat
adc
pop
fwait
repz
or
cmp
out
in
notl
cld
cmp
out
jne
mov
nop
cmp
divb
jbe
insb
mov
cmp
stos
mov
sub
and
aas
in
sub
jno
push
mov
sahf
sbb
scas
and
mov
lds
jne
into
inc
fisubrs
test
fwait
repz
cmp
or
shll
loopne
xchg
call
idivl
pop
aaa
mov
mov
push
jecxz
dec
repnz
jl
and
fdivs
mov
xlat
gs
sahf
mov
mov
inc
test
fistpll
push
popf
dec
sarb
cli
ss
sbb
mov
inc
add
mov
addr16
repnz
jnp
leave
int3
sbb
mov
xchg
es
adc
jae
out
repnz
pop
pop
push
sbb
xor
add
aad
adc
xor
dec
test
cld
incl
leave
mov
xor
jl
fstpl
cmp
inc
or
iret
add
int
lret
in
leave
pop
aad
jae
rorl
popl
fcomps
flds
and
inc
inc
scas
pop
xor
add
xor
mov
in
sbb
pushf
lcall
mov
test
or
mov
add
in
fimull
out
decb
pop
and
ds
and
add
addr16
int
clc
inc
pop
xchg
aam
sbb
nop
das
pop
and
rolb
mov
pop
fwait
testl
jo
fnsave
push
push
mov
and
leave
add
jle
push
push
incl
loope
aas
fcmovnu
pop
out
add
xchg
jg
shrl
mov
xor
lods
aad
pop
cld
xorl
jecxz
test
pop
pop
adc
mov
in
add
popa
mov
add
xlat
pop
sub
and
jl
xchg
mov
jecxz
test
pushf
mov
sbb
movsl
out
fsubs
in
addl
inc
xchg
push
or
in
repz
popf
test
xchg
into
ljmp
ss
loope
movsb
in
ret
adc
cli
mov
sbb
add
andb
adc
int
shrb
sbb
sbb
cmpsl
fsubrl
lea
inc
jo
and
aam
sarl
mov
idivb
mov
in
xchg
push
ja
add
ss
xchg
lock
flds
shrl
mov
fstpt
xor
pop
lcall
in
adc
std
test
or
addb
xchg
pusha
inc
call
jne
push
jl
mov
test
cmp
aam
cmpsb
test
test
pop
rol
insb
pop
cmc
test
add
gs
iret
push
jae
push
das
mov
mov
push
add
punpcklbw
cmp
addl
in
sbb
pop
mov
cld
dec
dec
fistpll
and
add
dec
mov
mov
xor
shlb
mov
sub
sti
inc
mov
push
mov
stc
je
imul
cmp
cld
fsts
aad
scas
testl
fnstenv
mov
sbb
iret
mov
sub
pop
nop
mov
cmp
dec
or
mulb
test
scas
js
rorl
imull
dec
add
fidivs
xor
cmp
mov
arpl
cmp
nop
push
pop
and
imul
ss
lahf
std
in
pop
push
pop
xchg
push
inc
std
and
pop
lret
repnz
push
adcb
sub
leave
adc
push
cld
adc
cmc
mov
mov
or
adc
insl
out
or
inc
lock
jae
push
and
ds
bound
and
sarb
pushf
mov
and
and
in
popa
shrl
inc
mov
inc
imul
pop
inc
test
icebp
add
ljmp
mov
mov
and
xor
push
inc
sbb
lcall
bound
clc
or
aas
xor
movsl
cmpsb
cmpsb
push
aad
fwait
dec
push
fs
pop
out
int3
mov
int3
inc
call
bound
push
xlat
les
push
xor
cmp
and
mov
loopne
cmpsl
xor
cwtl
fdivl
insl
fs
in
mov
repnz
jbe
repnz
lea
ds
sti
cmp
jmp
mov
aas
sub
das
repz
outsb
pop
and
push
lret
adc
adc
lods
inc
jb
mov
mov
jmp
adc
or
add
lock
lret
add
test
mov
mov
fbstp
pop
fistl
cmp
jg
xor
cmp
dec
out
and
fisubrl
cli
lret
ror
outsl
rep
out
xchg
push
sub
sub
out
fidivrs
push
pop
out
pop
inc
sbb
lock
lea
jnp
sbb
jp
data16
dec
rol
pop
sub
cmp
cmp
cmp
push
hlt
dec
cmpsl
call
sti
mov
xchg
mov
sahf
adc
je
divb
sub
rcl
imul
sub
pop
rcrb
repnz
into
aad
lea
rol
call
cmp
pop
push
dec
aam
or
aad
mov
popf
and
lea
jnp
sbb
mov
movsl
insl
jecxz
pop
inc
loope
push
xor
inc
mov
inc
dec
out
outsb
jmp
mov
cmpsb
xchg
mov
push
dec
push
lret
shl
mov
sahf
stos
icebp
int
in
adc
push
push
xor
pop
lds
ja
add
sahf
jmp
fsubl
imul
loopne
rcrb
xchg
mov
out
scas
lret
add
push
in
sub
xor
mov
outsl
mov
push
xchg
mov
mov
push
fmuls
pop
mov
mov
xchg
mov
cmp
or
dec
sbb
adc
mov
or
in
test
pushf
hlt
xor
mov
pop
inc
nop
call
mov
mov
cmp
push
add
lock
or
xor
aad
inc
mov
repz
pop
pusha
daa
inc
mov
adc
addb
sub
cld
test
jne
in
aam
xchg
add
das
test
in
insb
sub
push
push
pop
mov
xchg
add
addr16
lods
clc
jp
push
push
notl
push
and
cltd
loop
jmp
test
out
sahf
cmp
stos
fnstsw
adc
movzwl
je
popf
dec
imul
loop
outsb
xor
hlt
fistpll
addr16
pop
add
push
jno
daa
push
sub
cmp
pop
xor
call
jecxz
loope
cmp
mov
pop
push
andl
mov
cmp
movsb
sbbl
mov
mov
enter
mov
xchg
or
jbe
sti
fldcw
pop
cmp
mov
mov
lahf
loope
jno
testl
sti
lret
pushf
add
push
or
or
imul
outsb
subl
cmpsl
js
negb
shr
dec
dec
push
popa
add
inc
cs
stos
inc
call
add
push
and
push
xchg
cli
pop
aaa
dec
add
xchg
pop
and
or
jmp
div
push
pop
xor
icebp
dec
add
inc
sbb
adc
cmpsb
lcall
andl
inc
pusha
and
mull
nop
mov
push
fists
dec
loope
sub
sar
dec
mov
push
pop
xchg
stc
cwtl
push
gs
into
push
jne
lahf
pusha
pop
sbb
mov
data16
sub
mov
lret
xlat
and
rorb
fldt
aas
mov
loop
inc
push
flds
in
pusha
ret
dec
mov
sti
int
imul
inc
mov
into
add
mov
das
fcoms
bound
or
sarb
out
inc
sub
adc
push
cmpsb
iret
sbb
popf
sti
cmp
arpl
dec
nop
or
jg
jns
ljmp
out
add
int3
inc
cmp
mov
jo
mov
add
sbb
icebp
inc
addr16
mov
inc
popf
push
test
das
jne
test
mov
xchg
mov
aad
jb
inc
bswap
jp
es
call
mov
pop
jns
or
xor
or
cltd
xchg
pop
mov
int3
sub
xchg
dec
jne
fsubl
jl
daa
loop
arpl
ret
adcb
fdivs
cmp
shrb
add
mov
lds
pop
ret
insb
movsl
divl
and
clc
sub
pushl
dec
enter
int
arpl
lahf
adcb
fbstp
mov
mov
xchg
out
xchg
imul
cmp
testb
sahf
inc
ret
xchg
xchg
pop
jg
dec
stc
pop
and
and
jg
mov
fbstp
push
adc
pop
pusha
aaa
ret
sub
mov
clc
push
addr16
push
arpl
popf
add
push
ret
out
arpl
mov
push
scas
jae
loope
xor
inc
mov
dec
fdivrs
cmp
outsl
pop
or
sbb
add
adc
movsl
adc
fimull
pop
push
and
mov
shll
jns
pop
cmpsl
rorb
pop
cmc
sbb
insb
and
mov
out
jb
add
ljmp
sbb
inc
test
inc
out
and
roll
ret
inc
xor
leave
xor
push
dec
push
lods
or
jl
inc
loop
mov
pop
jo
insl
cwtl
pop
lods
sbb
mov
jmp
les
sub
adc
nop
test
cltd
rcl
or
callw
lea
das
sub
cmp
loope
icebp
or
sub
mov
mov
stos
sub
pushaw
lret
mov
or
push
pop
outsb
adc
stc
fcmovne
add
int3
lret
mov
fisubrs
ljmp
cmpsb
mov
shr
dec
repz
sub
mov
scas
add
mov
cli
or
sti
push
xchg
cmp
and
or
ficoms
xchg
ret
test
adc
mov
and
push
sub
xchg
mov
add
std
test
shlb
mov
ljmp
lahf
xor
out
xor
xor
ret
or
repnz
sub
pmaxsw
xchg
add
pop
rcrb
ljmp
push
dec
cmp
and
xor
not
mov
add
jl
mov
and
loopne
push
cmp
mov
imul
imul
popf
aas
jge
jb
cmp
clc
sub
call
mov
popa
jae
xor
xchg
mov
xchg
jmp
mov
jmp
dec
and
imul
mov
icebp
jb
cmc
in
movsb
je
nop
inc
mov
out
rclb
rol
push
fcomp
fcomps
mov
repnz
lods
add
jb
sub
addr16
add
pop
scas
pop
loope
ret
idivb
inc
jecxz
cmp
push
daa
sub
xchg
xor
popf
pop
ror
sub
mov
addr16
lret
and
mov
pop
aas
and
add
mov
ret
push
decb
mov
addr16
pop
imul
push
sti
and
jo
outsl
ret
pop
jns
daa
lret
into
pop
xchg
dec
push
sub
pop
andl
js
inc
and
hlt
xor
sbb
scas
mov
aas
adc
add
xchg
stos
adc
push
inc
inc
xor
xor
pop
shlb
cmp
mov
or
mov
addb
fnstcw
stos
loopne
aaa
and
inc
push
negb
test
int3
shrb
xorb
in
les
test
mov
fwait
add
lods
fiadds
pop
mov
push
int3
jmp
cmp
cmp
jbe
out
movzbl
out
pop
rcr
mov
jge
dec
and
lds
idiv
pop
add
fs
or
lret
jle
out
jle
sbb
jo
in
ljmp
inc
jmp
aam
push
js
and
lret
jecxz
in
dec
cmpsw
cli
out
xor
out
cmp
push
movsb
inc
shll
scas
mov
outsl
out
scas
out
in
xchg
loop
and
imul
dec
in
add
sbb
loopne
or
hlt
cmpsl
lcall
ret
in
sahf
ljmp
inc
rolb
push
adc
int3
mov
mov
and
pop
sarb
mov
scas
inc
add
or
fnstenv
push
lret
mov
arpl
adc
mov
rorl
icebp
sbb
mov
dec
cmp
cwtl
jno
lock
fwait
ret
movsl
xchg
sahf
inc
in
and
js
lods
dec
aad
das
sub
ds
ja
nop
jae
ret
mov
push
cltd
loop
xor
lods
add
aam
scas
adc
lods
mov
shlb
repnz
lods
hlt
push
fisubrl
or
shrb
add
mov
test
dec
sub
xor
pop
dec
sbb
push
in
andb
lods
sbb
add
clc
mov
sbb
mov
adc
and
pop
sbb
int3
jmp
xchg
arpl
in
mov
push
cs
scas
xlat
imul
cmp
adc
sbb
fdivs
sbb
mov
add
stos
xchg
lea
sub
cmp
and
sbb
lea
adc
lock
and
xor
mov
out
sub
loope
fs
daa
out
stos
jnp
fisubs
popa
mov
pop
mov
iret
testl
outsl
and
jecxz
cmpsl
push
dec
lods
mov
cmpsb
xchg
and
into
jmp
loopne
and
pop
add
std
sub
in
add
imul
adc
mov
out
or
incl
nop
dec
jb
mov
sub
dec
sbb
fstpt
fdivl
imul
dec
jb
hlt
push
mov
xchg
loop
test
mov
adc
aad
cmp
sub
js
push
adcb
lea
fs
es
adc
movhps
call
stc
fldl
fsts
in
lcall
add
cli
cmc
xchg
je
push
leave
leave
push
insb
ret
icebp
test
xor
imul
arpl
popa
push
push
ja
push
cmp
pop
pop
add
es
int3
xchg
dec
mov
ror
lods
fwait
xchg
inc
in
lret
repz
mov
sahf
adc
cltd
push
das
sub
ret
pop
out
repz
testl
xsave
inc
stos
lods
cmp
pop
inc
dec
add
dec
movsb
scas
cmpsl
inc
cli
loop
rcrb
ljmp
stos
push
mov
jmp
mov
sub
pop
mov
sub
cmp
enter
sub
inc
dec
and
mov
iret
jae
add
pop
pop
xchg
or
jg
mov
sub
adc
scas
xchg
fistpl
cmp
fldt
out
dec
mov
push
sub
loope
stos
fcoms
sub
or
push
jecxz
sbb
arpl
cmp
lret
outsb
xor
add
mov
xchg
cs
sti
repnz
stc
call
rorb
mov
cmp
js
sub
lods
adc
daa
rolb
gs
mov
and
out
aaa
cmp
data16
loope
inc
hlt
jno
cltd
insb
sbb
cmp
int3
aaa
or
lret
xlat
cmpsb
pop
cmpl
mov
fwait
sub
or
xchg
jnp
sbb
mov
mov
or
loopne
out
jmp
ret
inc
cmpsl
jns
outsl
xchg
sbb
lcall
syscall
jge
xor
mov
test
jae
push
xor
dec
mov
xchg
cmpsl
mov
outsl
aaa
movb
dec
cmp
cld
dec
sbbb
imul
mov
fldlg2
scas
ffreep
fisubrl
sahf
mov
ja
test
mov
stos
loop
popf
cld
inc
xor
cmpsb
pushf
add
aad
jb
mov
ljmp
pop
adc
out
arpl
rcrl
cmp
mov
mov
push
mov
mov
dec
jp
addr16
push
inc
mov
das
pushf
loope
xlat
lahf
mov
mov
adc
mov
pop
loop
test
jl
jl
inc
or
mov
jge
adc
pop
testl
add
rorl
push
popf
cmc
negl
xchg
adc
fimull
rcrb
shrb
sub
bound
insl
negb
idivb
pop
lock
push
arpl
jmp
pop
jo
aam
outsl
lea
outsl
imull
jecxz
imul
or
dec
outsl
and
outsl
mov
mov
jp
push
mov
mov
or
and
test
mov
jae
add
inc
jle
pop
inc
mov
and
mov
inc
push
push
mov
xlat
nop
push
hlt
enter
ror
pusha
sbb
inc
pushf
into
pop
push
and
dec
filds
ret
ss
lock
cmp
pop
rol
mov
outsl
fucomip
loop
sbb
cld
xchg
shrb
movsl
sbb
out
test
mov
adc
pop
dec
sbb
andb
das
sbb
or
xchg
inc
cmpsb
int3
sub
sub
in
cltd
fsubrl
sbb
into
xchg
jbe
mov
addb
inc
outsl
jl
mov
add
mov
jno
ret
in
xchg
pop
xchg
sub
lods
ljmp
mov
fisttpl
jp
or
mov
lret
mov
aam
cmp
sahf
mov
imul
in
jmp
repnz
imul
shrb
mov
mov
xchg
mov
je
enter
dec
das
mov
lret
or
es
mov
out
mov
push
out
scas
xor
xchg
test
jecxz
fbld
pop
pushf
adc
mov
fimull
imul
sbbl
xor
movsl
add
pop
incb
repnz
cltd
ljmp
mov
cmp
cltd
mov
jnp
enter
lcall
call
mov
insl
sub
mov
pop
jns
push
fmuls
xchg
cwtl
pop
inc
pop
adc
pop
inc
cmp
push
pop
out
es
mov
out
xor
xchg
jmp
aaa
push
outsb
inc
stos
cmp
xchg
adc
xchg
cmpl
or
mov
jl
add
call
add
mov
sub
jbe
xchg
jae
add
xchg
test
mov
popf
shrl
test
sub
je
xchg
pop
lret
sarl
xor
cli
imul
fistpl
inc
sub
mov
jo
pop
mov
mov
and
sbb
fstl
dec
aad
mov
ret
cli
sub
push
imul
jnp
inc
sbb
pusha
inc
mov
repnz
test
movsb
sub
repnz
xor
mov
stos
jno
mov
inc
sbb
gs
flds
ss
jge
stos
movsb
leave
cmpsl
mov
std
and
cltd
sub
dec
outsl
adc
insl
into
outsl
lock
xor
jp
mov
ret
stos
arpl
lea
aam
pop
or
cltd
aam
mov
mov
arpl
leave
lahf
lea
xchg
push
inc
rclb
pop
push
es
inc
xor
cld
pushf
add
int3
sbb
hlt
inc
sub
xlat
and
mov
jno
shl
push
add
sahf
push
sbb
shll
add
jp
mov
lahf
or
mov
mov
out
psllw
xor
scas
adc
les
not
cmc
aas
sbb
ret
push
xchg
gs
pop
mov
lds
or
or
loopne
test
mov
scas
sarb
xor
cmp
inc
mov
mov
fidivl
movsb
mov
xlat
add
pop
jmp
aas
lret
and
aaa
inc
aaa
xchg
mov
mov
or
popf
and
adc
jle
cmp
inc
cli
mov
sub
jno
pop
cmpb
lock
shll
cmp
ficoms
pop
aaa
mov
nop
fsubs
mov
rcl
mov
sti
in
ret
sbb
je
mov
out
bound
mov
and
aam
or
push
scas
test
rcll
push
xor
jb
je
mov
inc
pop
aad
jbe
jp
sub
push
sbb
jbe,pt
mov
push
fcompl
push
bound
push
sbb
aaa
push
ljmp
sub
mov
xchg
xor
adc
jno
dec
outsb
cmp
aaa
mov
xchg
les
cmp
jmp
inc
outsl
cld
nop
es
loopne
mov
jge
xchg
sub
sbb
jg
inc
sub
inc
xor
and
mov
jecxz
mov
repz
jg
mov
addl
or
lods
call
dec
popf
loop
jno
inc
notb
test
or
jp
and
cmp
cmp
fiadds
push
mov
gs
or
and
or
lahf
mov
lds
test
jo
fldcw
arpl
pushf
aaa
adc
dec
sub
clc
aam
pop
mov
push
pop
pop
xor
idivl
ret
andb
mov
push
sbb
rorb
xchg
add
pop
insl
sub
insb
cld
sub
sub
out
shrl
inc
movsl
jg
push
jns
mov
mov
aaa
xchg
xor
ljmp
pop
and
jne
aaa
sti
shl
cltd
push
aaa
pop
testb
inc
push
fwait
loopne
in
dec
das
mov
jno
jmp
mov
test
jne
shl
fcmove
jnp
inc
lods
loope
lea
mov
add
jb
jge
lcall
xchg
inc
in
ds
push
jne
test
mov
add
inc
sub
sbb
lcall
mov
pop
dec
sbb
adc
sub
sbb
jo
mov
dec
lret
push
inc
push
addl
cli
shl
jg
imul
jb
sbb
lcall
aas
xor
ljmp
loop
ja
mov
fs
fwait
sub
notl
pusha
xor
inc
add
or
cmp
cmc
dec
pop
arpl
sub
repz
jp
or
add
pop
mov
pop
push
loopne
mov
scas
mov
and
in
leave
sub
movsl
mov
jecxz
loope,pn
inc
js
in
push
add
movsb
jge
push
loopne
mov
cmovo
push
sub
lret
fwait
bswap
mov
add
jmp
jle
ss
cld
add
pusha
jns
bound
jnp
mov
cmp
inc
and
inc
stos
ret
cs
int3
in
dec
cmpb
cwtl
mov
enter
fmuls
dec
movsl
jae
fmull
outsl
inc
popa
cmp
sub
cmp
inc
jg
pop
push
jbe
cli
test
inc
sbb
test
mov
xchg
in
xchg
xchg
es
sbbb
fimuls
sub
lods
pop
add
ret
mov
push
adc
xchg
dec
xchg
clc
test
mov
iret
out
adc
jle
pop
xor
test
push
lcall
push
or
mov
xor
cmp
test
adcl
imul
std
lods
pop
adc
notb
loope,pn
dec
pop
mov
orl
or
mov
popa
push
sbb
enter
fiadds
pop
pushf
mov
out
pop
mov
rorb
cmpsl
pop
and
lcall
addr16
inc
shrb
scas
add
mov
jb
insl
push
inc
mov
cmp
aad
stos
loop
mov
out
mov
pop
push
ja
sbb
paddusw
sub
mov
insb
cmp
mov
hlt
dec
jle
cli
data16
sub
imul
ret
cmp
pop
cmp
lods
or
movsl
pop
lock
mov
mov
xchg
or
ror
jmp
sbb
cltd
push
mov
inc
stos
pop
jnp
daa
xchg
call
sbb
mov
xor
movsb
test
sub
lds
mov
pusha
xchg
add
adc
test
ss
mov
gs
cmc
icebp
insb
mov
pop
inc
dec
push
lock
dec
jmp
cmpsb
aaa
cmp
in
js
jg
inc
ja
dec
push
lea
xchg
adc
mov
fdivl
or
adc
xor
outsl
and
pusha
pop
sub
sbb
hlt
or
fwait
rolb
in
cmpsl
cwtl
test
movsl
mov
add
jg
sub
outsb
mov
daa
loope
xor
push
lcall
lds
dec
scas
lock
add
mov
dec
push
maxps
in
clc
xchg
cmpsb
or
fwait
lahf
jp
rorb
je
cmp
sub
inc
cld
lret
pop
stc
pop
push
test
call
jl
mov
push
cmp
pop
jns
fldt
sbb
dec
imul
pcmpeqw
pop
out
test
push
cmp
mov
sahf
sub
or
sbb
or
addr16
inc
sub
sub
popf
sub
add
adc
mov
cmc
mov
mov
imul
cmp
movsb
xchg
inc
cmc
test
push
cwtl
jnp
js
cltd
mov
mov
add
mov
les
sbb
push
xchg
scas
loopne
stc
or
rcrl
lods
jl
ret
cmp
inc
push
jle
fnstsw
adc
sbb
test
rcrl
sbb
movsb
aad
inc
xlat
xor
adc
push
mov
lds
or
sti
mov
jp
addl
shr
sbb
les
out
mov
fwait
lcall
rclb
lcall
jge
aas
mov
inc
mov
add
push
mov
sub
xchg
bound
out
lea
outsl
sahf
cmp
jns
inc
pusha
cld
popa
iret
ds
jae
pushf
mov
inc
shl
push
out
mov
pop
pop
aam
mov
shlb
inc
lret
jecxz
pusha
mov
inc
mov
rolb
mov
sbb
pop
ja
ss
aad
mov
repnz
rorb
mov
filds
adc
mov
xchg
jne
pop
jb
hlt
jnp
repnz
out
lea
pop
mov
fcomip
int3
lea
fmull
jno
inc
jle
and
sub
mov
jnp
out
addr16
adc
repnz
lret
cmp
push
or
push
cmp
adc
mov
push
gs
sub
inc
insb
adc
in
mov
out
sub
sbb
test
out
jg
jae
arpl
jmp
fstps
shll
insl
loop
sub
jp
adc
sti
mov
mov
add
dec
dec
imul
ljmp
shlb
xor
orl
xchg
lahf
adc
fs
dec
fwait
popa
cmp
decb
shl
repz
push
addr16
ja
mov
xor
pusha
repz
adc
loopw
inc
jo
setae
pusha
arpl
adc
sub
cwtl
xchg
loopne
push
add
sub
push
stos
imul
mov
test
int
inc
cmp
sti
cmc
sbb
inc
xlat
lods
lret
scas
sub
mov
mov
sti
jbe
aaa
adc
cmp
xchg
ljmp
mov
pop
hlt
aam
push
aad
faddl
in
xor
test
movsl
add
js
stos
sbb
adc
imul
sarb
rolb
stos
xor
jg
mov
int3
xchg
shlb
pop
out
push
mov
imul
or
push
rorl
fwait
and
jp
add
xor
dec
aad
pop
inc
adc
dec
cmp
mov
out
add
pop
js
push
mull
js
lea
addr16
lods
lock
test
outsl
scas
loop
mov
xchg
pop
mov
jo
pop
sbb
sbb
xchg
cli
sbb
xchg
rcll
adc
pop
andb
xor
xchg
pushf
sub
lcall
push
lahf
dec
test
dec
les
lods
xchg
lret
mov
rcll
dec
sub
hlt
mov
std
sub
pop
pop
sub
hlt
inc
fistps
test
pop
xchg
mov
jmp
adc
in
test
je
mov
out
testb
out
sub
push
jns
pop
js
fisubrs
imul
lock
test
or
cmpsl
cmp
xor
jnp
fcompl
mov
popa
mov
push
loop
push
push
mov
push
mov
test
sbb
and
cmp
hlt
shr
push
ja
jle
xor
jge
pop
pusha
ficoms
iret
mov
cmp
iret
adc
xorl
pop
push
sub
mov
mov
ss
iret
mov
pop
sub
adc
cmpsb
in
mov
shl
dec
dec
inc
jb
adc
add
test
push
mov
pop
into
dec
push
rcll
sub
or
inc
call
adc
pop
andb
mov
popl
out
lods
enter
cld
hlt
sub
pushf
add
push
shrl
pusha
out
push
fsubl
mov
jo
inc
scas
jecxz
test
mov
loope
addr16
xor
mov
lcall
aaa
aaa
in
jbe
or
push
loopne
adc
cltd
js
in
les
xor
in
mov
bound
mov
insb
push
repnz
xchg
or
push
push
popf
out
adc
jge
and
mov
push
inc
lock
sub
rolb
inc
and
loopne
lret
push
push
jle
or
and
add
dec
fisubl
repz
mov
loop
or
push
loop
das
out
aas
mov
sbb
js
movsb
nop
mov
xchg
insb
gs
or
add
xchg
jle
add
repnz
sub
into
cltd
push
bound
push
mov
and
lcall
ljmp
sahf
push
shlb
repz
dec
cmc
aaa
dec
ljmp
scas
call
jecxz
adcl
fsts
sbb
lret
adc
loopne
imul
pop
loopne
mov
out
dec
lahf
sbb
add
sub
mov
outsl
mov
lds
fdivp
add
jmp
jg
hlt
int3
out
or
or
imul
xchg
nop
cmp
mov
adc
les
popa
or
rclb
shll
pushf
fdivrs
fldcw
js
xchg
jmp
lret
daa
cmp
xor
ja
mov
repz
push
push
movsl
mov
mov
mov
push
loop
or
and
int
in
sub
push
mov
adc
inc
les
pop
cwtl
aam
lret
nop
loop
push
std
cltd
arpl
lds
stc
mov
test
rolb
dec
mov
in
aad
stos
shrb
adc
aas
mov
fwait
or
lods
pop
mov
roll
daa
adc
ss
insl
mov
stc
push
or
xlat
lods
dec
inc
jbe
outsb
movsl
in
mov
rcrb
repz
loope
cltd
in
xor
mov
in
mov
push
cld
lock
inc
pushf
popa
in
xor
or
ljmp
and
hlt
push
mov
dec
xor
in
mov
pusha
test
iret
stos
pop
push
test
mov
mov
scas
gs
hlt
popf
pop
cli
xlat
push
dec
add
xchg
loopne
lret
inc
repnz
or
xchg
out
out
inc
fistps
mov
fs
xchg
xchg
or
es
xchg
pushl
loopne
mov
es
lret
jbe
dec
sub
jbe
pop
orl
push
andl
xchg
xchg
adc
mov
push
pop
push
mov
mov
aaa
orb
hlt
jnp
or
cmp
add
pop
cmp
mov
ss
cwtl
sti
dec
loop
shl
inc
sbb
ss
lret
jle
jno
loope
cmp
je
in
mov
gs
cmp
rclb
loopne
cli
and
popa
fadds
fdivrs
or
mov
out
push
imul
xchg
outsl
inc
mov
pop
shl
jns
fisubrs
or
insb
stos
std
add
add
pop
ficoms
shll
sub
inc
sbb
jno
das
iret
xchg
sub
xor
xchg
push
lcall
cltd
shll
mov
xor
ds
push
daa
mov
push
bound
dec
xor
repz
cmpsb
and
xor
mov
inc
inc
jl
adc
add
pop
sbb
xor
mov
add
push
insl
aaa
addb
and
arpl
fnsave
jo
test
push
inc
aam
das
out
push
call
sub
pop
dec
adc
outsl
sahf
arpl
jbe
insb
sbb
jnp
xchg
jle
jle
and
and
xor
xchg
in
adc
mov
loop
mov
dec
inc
test
stos
xchg
ds
sbb
xchg
fildll
pop
push
popa
xchg
sub
mov
nop
sbb
icebp
shll
ret
cs
push
push
loope
mov
xchg
dec
pop
pop
je
stc
jne
xchg
inc
orl
imul
cmp
xor
pop
jmp
sahf
push
cmpsb
andl
ss
mov
lea
mov
sbb
ss
insl
fisubrl
ror
dec
loopne
adc
and
xlat
cmpsb
push
adc
jmp
arpl
mov
cld
xchg
loope
stos
es
aad
out
popf
jle
push
data16
adc
mov
adc
fstps
xchg
fmull
mov
xor
cltd
push
jmp
out
mov
sub
dec
mov
mov
popa
repnz
sub
jbe
xor
jge
jg
fsts
mov
cmp
or
mov
sub
leave
or
cwtl
dec
pop
lds
mov
cmpsl
js
enter
imul
popf
adc
fs
fsubr
mov
shlb
inc
lds
jnp
addr16
bound
and
pop
maxps
test
jb
mov
push
sub
arpl
jnp
mov
imul
hlt
fisttpll
or
popf
decl
cmp
sti
loop
clc
clc
push
and
pusha
addl
xchg
mov
mov
mov
divl
imul
mov
mov
jp
adc
loopne
mov
dec
cmp
sub
cld
cmp
cmpsl
adc
pusha
clc
jmp
mov
pusha
clc
mov
rcl
jl
loope
and
adc
sbb
divb
or
sahf
or
pop
testl
addr16
mov
aad
faddl
sbb
mov
push
inc
cmp
sub
and
sti
dec
hlt
sub
out
mov
or
or
iret
xor
enter
repnz
aas
sahf
cmp
mov
popa
nop
dec
mov
or
mov
jp
cld
andb
or
push
scas
inc
push
enter
xchg
lock
aas
sub
mov
xor
test
cmp
dec
sahf
push
fsubrl
rcrb
push
int3
in
int3
mov
test
fs
mov
data16
mov
adc
and
mov
add
sahf
sbb
movntq
fsubl
rorl
movsb
adc
xor
ja
pushf
jle
rol
mov
jecxz
lods
push
dec
rcll
arpl
pop
aam
imul
aad
jae
in
push
sarb
bound
int3
je
pop
jge
sahf
cmp
push
xor
pop
mov
inc
cmp
jp
mov
cmp
mov
mov
das
push
aad
adc
sarb
daa
xor
jg
or
push
dec
aad
frstor
jns
push
and
mov
subb
popf
inc
ret
lods
in
xor
sbb
ss
stos
or
sar
add
addr16
dec
add
push
jmp
cmp
jbe
daa
xchg
cmp
jns
inc
ss
jo
jle
sahf
ljmp
sub
cmp
iret
lods
adc
adc
ja
cltd
jae
mov
fistl
mov
sub
int
ret
dec
int
fnstsw
cmp
pop
popa
push
mov
mov
sbb
xchg
xor
dec
and
xchg
out
push
test
dec
xchg
inc
or
mov
sub
xchg
and
mov
xchg
subb
pop
sahf
addr16
mov
loop
int
xchg
fstp
jae
ret
pusha
mov
push
inc
test
sbb
or
sub
insl
mul
sti
enter
pop
mov
int3
dec
add
pop
movsb
stos
imul
sub
lcall
jae
jns
or
into
out
mov
mov
sub
loope
inc
fistl
jae
fcoml
subl
jae
lret
sub
jl
ret
cmc
adc
sbb
xor
xchg
fwait
in
dec
fbstp
dec
mov
add
inc
cmp
cmp
negl
hlt
icebp
sbb
lret
xor
cmp
aas
sub
push
ljmp
pushf
xchg
xchg
outsl
fldenv
add
mov
push
mov
mov
push
mov
ret
iret
add
aam
stos
in
fsubp
out
aaa
or
xchg
mov
data16
push
inc
je
pop
push
jne
xchg
dec
push
out
ja
mov
loopne
pop
idivb
inc
xchg
push
mov
test
mov
stos
mov
mov
fistl
adc
sti
pushf
int3
add
stos
adc
xor
jns
push
int3
popf
popa
mov
adc
mov
mov
adc
mov
jbe
jmp
sbb
int3
adc
les
aaa
push
inc
loop
ret
out
pop
jmp
in
add
sarl
xchg
push
stos
leave
sarl
insl
add
sub
bnd
call
or
sbb
leave
aaa
mov
mov
jp
jnp
popf
lods
and
push
dec
enter
sub
lret
xchg
lods
pusha
inc
mov
xchg
icebp
aaa
movsl
ret
lock
jmp
jb
jae
outsb
mov
push
std
jmp
pop
shll
aad
out
and
mov
mov
push
sbb
stc
dec
mov
pop
int3
repnz
cmp
mov
or
mov
daa
dec
ljmp
and
lods
inc
fiaddl
inc
push
lds
call
sub
fldl
adc
je
out
sub
mov
add
lret
jl
add
or
in
pop
xor
jl
fxch
pop
push
sub
test
hlt
movsl
sbb
pop
xlat
jl
push
lcall
xchg
cwtl
inc
lock
je
arpl
pop
mov
lock
frstor
xor
sub
std
xchg
mov
or
jg
lods
enter
and
lds
leave
mov
test
out
in
jo
hlt
movntps
jmp
test
stos
and
mov
mov
cmpl
pop
sbbl
icebp
les
mov
mov
movsl
int3
xchg
jmp
push
test
jle
dec
icebp
push
dec
xchg
cli
fildl
cmp
insl
add
outsb
add
mov
fucom
adc
into
push
out
mov
push
sti
mov
das
add
outsl
adc
shrl
fdivr
lods
arpl
rorb
pop
cld
sub
inc
mov
sbb
xchg
aaa
jmp
push
pop
pop
daa
inc
dec
sub
enter
mov
adc
mov
mov
iret
mov
loop
sbb
hlt
cwtl
scas
xchg
push
outsl
adc
ss
leave
mov
mov
xor
lock
mov
xchg
loope
jle
call
cmc
fnstcw
xor
inc
test
sub
arpl
fsub
into
jbe
aam
fcoms
cmpsl
mov
dec
in
icebp
sub
test
sbb
cmpsb
lods
gs
xchg
dec
stos
jle
dec
mov
loope
pop
mov
xchg
loope
inc
es
add
mov
adc
adc
sub
cmpsl
lods
lahf
xor
cmp
scas
nop
xchg
pushf
jns
inc
push
adcl
mov
add
fistpl
lock
stos
or
mov
jbe
stos
xchg
lds
and
andb
movsb
inc
dec
mov
mov
fisttpl
push
lods
or
aad
jl
cmp
cmp
inc
leave
mov
into
pushf
ja
lods
pop
pop
icebp
xchg
mov
clc
pop
cltd
popf
ret
test
push
push
jo
xor
scas
xor
pushf
into
cmp
test
mov
clc
repz
pop
pop
aam
pop
sbb
cmc
dec
js
outsl
jle
test
mov
xlat
xchg
std
adc
mov
mov
jns
dec
mov
inc
lret
jp
pop
call
popf
icebp
sbb
and
lds
cli
subb
fists
and
xor
push
cmpsl
je
jb
mov
jecxz
jle
fcoml
ds
ss
sbb
dec
cmp
out
add
mov
push
daa
or
flds
push
jle
jae
mov
je
jle
mov
ret
mov
push
mov
cmp
mov
jae
mov
fcoms
aas
push
addr16
adc
scas
cmpsb
cmp
cmpsl
sub
aad
push
cmc
lahf
push
xchg
and
sub
int
test
mov
cmp
negb
or
inc
jb
enter
jb
insl
sbb
cmp
sahf
ret
mov
inc
adc
push
ds
dec
add
dec
idivl
dec
aaa
shr
outsb
and
push
ljmp
mov
icebp
mov
movsl
sbb
sbb
pop
sbb
adc
fnsave
and
add
push
or
jecxz
adc
sarb
fs
inc
sbb
lret
rolb
push
in
xchg
sbb
je
or
pop
pop
mov
jo
inc
cmpsb
add
sbb
rclb
push
xchg
mov
jge
imul
mov
nop
lock
sar
and
push
or
stc
pop
or
cmp
cmp
push
and
mov
js
push
arpl
and
loop
cmp
lea
lret
lds
add
and
das
mov
mov
test
cs
frstor
mov
stc
subb
lret
test
pop
push
js
cmp
xchg
testb
iret
daa
xchg
dec
pop
pop
cmp
xor
lret
sub
push
ja
movsb
stc
cmp
dec
jge
mov
sbb
loopne
dec
loop
xor
cmp
aas
pop
movsb
jmp
mov
inc
adc
add
sub
mov
cmp
push
adcb
pop
adcb
hlt
pop
rcl
lods
and
pop
ljmp
add
test
jle
nop/reserved
dec
subl
jmp
out
lret
lds
pop
lods
stos
fwait
das
pop
lds
sahf
es
cmp
and
add
test
mov
cmpsb
movsl
pop
mov
xlat
loope
orl
push
mov
push
mov
xchg
inc
mov
add
push
mov
mov
js
adc
out
lret
mov
mov
sub
jl
mov
leave
mov
hlt
insb
fildl
outsb
shll
aam
aam
icebp
push
es
push
test
push
or
inc
push
daa
pusha
lea
mov
adc
mov
mov
in
add
icebp
aas
fdiv
loop
fisubs
or
and
mov
mov
cmp
add
aas
leave
cmp
int
dec
dec
add
jecxz
stc
test
xor
adc
xor
imul
xor
cs
cmpsb
addl
std
adc
jg
dec
das
adc
adc
mov
aad
xchg
add
cld
stos
cltd
or
adc
test
test
cmp
in
pop
adc
sub
orb
pop
imul
test
or
and
rcr
mov
movsl
sti
test
push
in
dec
sub
int
fbld
add
adc
sbb
mov
aad
mov
cmpsl
fwait
rolb
pop
inc
cmpb
add
aas
negb
add
xor
lret
and
mov
or
push
add
jl
xor
adc
jl
push
fdivrl
stos
push
push
mov
and
push
sbb
fiaddl
pop
pushf
test
js
das
lds
or
xor
cmp
jbe
xor
popa
ret
ret
xor
jp
fidivl
pusha
sarb
push
add
mov
std
icebp
cmpsl
stc
mov
push
scas
lahf
mov
inc
out
pop
arpl
scas
mov
in
add
pushf
or
jnp
or
xchg
gs
lds
loopne
mov
cltd
dec
xchg
out
and
and
bound
adc
leave
sub
ret
mov
clc
jo
cs
outsb
or
lcall
cli
fdivrs
mov
mov
mov
mov
das
aaa
mov
sub
ja
add
mov
mov
insb
outsb
pop
movsb
and
into
cmp
mov
les
cmp
in
dec
shlb
data16
test
inc
push
cmp
outsw
pop
test
dec
mov
xchg
add
lcall
mov
bound
jae
mov
push
ja
mov
aam
or
aam
fwait
dec
repz
xor
hlt
cmp
repz
mov
xor
sti
sub
pop
jecxz
pop
adc
fnsave
sbb
les
hlt
push
rcr
shrb
sti
insb
jecxz
loope
pop
jp
and
imul
sbb
fldenv
fisubrl
outsl
ret
jg
and
dec
sub
cmp
int3
popf
sbb
fadd
adc
sub
insb
add
daa
inc
test
jge
cmp
add
subb
and
stos
stos
xchg
cmpsb
and
mov
adc
in
sub
les
mov
adc
jmp
sbb
mov
push
int3
cmp
shll
out
into
orb
mov
std
jns
lods
in
mov
pop
push
xchg
rcr
xor
nop
mov
out
insl
adc
mov
dec
es
cld
mov
in
out
pop
es
andb
push
iret
ret
sub
shrl
test
out
std
leave
cmp
dec
je
cltd
out
or
push
enter
or
ret
popa
arpl
mov
ror
bound
mov
xchg
and
in
sub
and
push
scas
std
cmpb
gs
dec
mov
cs
clc
push
and
push
adc
fstpl
je
sahf
adc
xor
xor
stc
out
rorw
add
insl
lods
xor
leave
mov
cld
dec
pop
pop
shll
movsb
cmp
xchg
mov
mov
adc
jp
or
push
in
scas
xor
sbb
je
lods
addr16
loope
cmpsl
bound
cmp
or
mov
push
sti
dec
in
xchg
lock
jne
roll
js
loop
pusha
mov
fwait
lock
cmp
push
hlt
enter
roll
jne
shll
js
scas
and
out
adc
pop
or
in
push
xor
shrl
cmp
scas
jmp
ja
cmp
fists
pop
and
orb
cmc
addr16
sub
ja
out
and
loope
add
loopne
leave
sub
in
rcrl
out
cmp
lods
mov
pushw
jns
inc
push
sbb
pop
imul
fsts
sub
mov
cmp
mov
cli
mov
aam
sar
or
adc
inc
mov
mov
test
mov
pop
mov
mov
pop
leave
mov
nop
mov
scas
jecxz
xor
imul
or
in
lahf
repz
pop
or
int
inc
mov
dec
and
push
mov
test
jb
push
pop
adc
daa
xlat
adc
aaa
mov
addr16
or
pop
push
inc
add
push
and
pop
mov
mov
or
mov
loop
and
movsb
fcomps
fstpt
xor
mov
scas
cltd
fwait
das
pop
pop
cmc
push
jecxz
fs
je
xor
int3
es
out
rcrb
sbb
and
xchg
movl
loope
jo
int
lds
xor
or
scas
push
outsb
push
inc
pop
inc
mov
out
hlt
fisubrl
or
test
cmp
xchg
data16
sbb
outsl
xchg
sbb
aas
xor
out
dec
dec
sbb
stos
and
push
imul
pop
inc
es
adc
outsl
xlat
dec
jnp
inc
sbb
sbb
loope
lret
xchg
add
push
cmp
xor
in
outsb
nop
es
add
adc
adc
inc
sbb
sbb
xchg
loope
add
jmp
into
or
add
mov
lods
cmp
mov
mov
mov
adc
and
loopne
push
and
call
dec
jl
sti
xchg
mov
inc
push
push
and
jbe
push
daa
bnd
jecxz
sub
std
cmpsl
add
pop
mov
cltd
push
inc
and
cld
add
lcall
movsl
imul
jmp
rcr
add
mov
pop
push
ret
push
push
stc
dec
and
or
and
sub
jne
lds
and
loope
lds
xchg
cmp
push
stos
sti
loope
xchg
mov
mov
pusha
cmpl
mov
nop
mov
inc
or
data16
out
add
outsl
in
ret
out
fidivs
add
scas
xor
jne
sub
mov
sbb
mov
jg
push
loope
js
cmp
mov
sbb
cmpsl
scas
popf
adc
adc
inc
xlat
jo
sub
xor
pop
scas
leave
test
mov
pop
dec
out
sub
dec
mov
cwtl
jb
pusha
xchg
cmc
mov
pop
and
mov
or
jp
insb
jnp
ja
push
cmp
idivb
jmp
int
push
gs
stos
arpl
sbb
test
xor
xor
push
cli
push
xchg
movb
sbb
adc
xor
pop
mov
sub
jecxz
xor
loope
je
pop
adc
add
adc
pop
jno
fdivp
or
in
les
push
mov
cmpsb
test
adc
lds
mov
out
xchg
shl
arpl
sbb
mov
xchg
ds
inc
mov
mov
xor
ret
pop
cmp
jg
add
pop
ja
lock
dec
and
mov
movsb
outsb
pop
es
enter
jnp
xchg
gs
imul
insl
mov
mov
cmp
pop
lahf
xchg
iret
push
popa
add
dec
ja
ja
sub
fnstsw
mov
lods
mov
inc
mov
dec
ds
jne
xor
xor
test
cmp
dec
xor
ffree
pop
test
xor
cmc
lcall
movl
les
arpl
pop
jo
xor
repnz
mov
repz
loop
movsl
scas
aad
aaa
sub
js
dec
test
add
movsb
pop
cmp
cmc
addr16
push
popf
int
mov
add
jl
movsl
dec
jmp
mov
xor
inc
pop
mov
out
lods
dec
push
lret
outsb
inc
iret
popa
mov
daa
push
cmp
fstps
rcr
stos
mov
cmpsb
ret
aas
cs
mov
shlb
or
add
xor
lods
test
add
mov
sub
add
dec
and
test
sub
sub
and
repz
fidivrs
enter
sbb
std
mov
mov
lods
xor
out
popl
mov
mov
iret
addb
ds
mull
pushw
mov
shlb
lcall
sub
push
cmp
sub
imul
and
xlat
xchg
jmp
cmpsl
sbb
mov
xchg
add
cmpsl
std
mov
xchg
das
push
fucomp
aaa
jp
addr16
cld
inc
ficompl
pop
imul
mov
jmp
cli
fcoms
fcompl
in
push
lock
jae
int3
fisttpl
cld
push
lods
lret
pusha
pushf
je
out
sbb
shlb
and
xchg
xchg
inc
test
sbb
and
ret
stos
les
sub
fs
push
hlt
mov
or
hlt
ja
xchg
cltd
in
or
cmp
mov
and
repz
std
jge
dec
mov
leave
cmp
insl
insb
mov
adc
int3
pushf
push
mov
outsl
scas
mov
out
sub
repnz
xor
pop
mov
rcrb
scas
push
push
enter
add
leave
mov
daa
ficoml
addb
pop
or
shlb
lods
add
das
xor
adc
in
mull
addr16
sti
xchg
cmp
jbe
adc
jne
sbb
fbld
and
outsb
popf
mov
iret
dec
push
add
mov
xor
scas
sbb
jmp
cld
cmove
pop
fcomip
jl
adc
dec
aad
mov
std
dec
adc
fidivs
cmp
jo
aaa
adc
nop
iret
mov
fsts
or
dec
cmpl
arpl
aaa
add
jno
dec
xchg
sahf
test
push
in
ficompl
jno
mov
pop
in
jno
push
mov
or
insl
xor
scas
rcl
in
aad
mov
pop
fcomps
push
cmp
mov
insl
std
in
push
cmpsb
or
int
gs
xchg
mov
loope
jb
loope
adc
imul
aas
ret
addb
adc
and
pushf
lret
pop
jae
xor
stos
imul
xchg
pop
jae
lret
push
shll
mov
xchg
in
rclb
xchg
daa
stc
inc
sub
cs
cltd
adc
in
jp
dec
jnp
addr16
dec
mov
fisttpl
shrl
sar
sub
inc
clc
mov
and
push
jo
insb
xlat
std
pop
rcrb
out
or
xchg
rorl
dec
cmpsb
incb
sbb
in
imul
push
addb
arpl
xorl
inc
inc
cmp
cmpsl
pop
bound
insb
addl
in
leave
cmp
fistl
js
jno
sbb
xor
scas
xor
lret
or
jle
mov
addl
pop
mov
out
xlat
inc
add
adc
mov
scas
loop
leave
push
xor
incl
stos
dec
push
je
mov
dec
jecxz
cmpsb
stc
fucomip
sbbl
fs
inc
fsubl
sahf
sbbb
lret
or
sbb
test
test
aas
xchg
sbbl
dec
pop
js
cltd
cmp
and
jnp
xchg
push
mov
test
inc
push
lahf
dec
das
in
movsb
ds
dec
das
xchg
cmp
cmc
sti
sub
sarl
xchg
cmp
scas
jecxz
add
inc
div
push
or
dec
inc
dec
lock
lods
add
mov
xor
jp
roll
or
sub
in
jbe
divb
stos
insl
adc
dec
movsl
out
xchg
push
mov
fstps
mov
add
xchg
jns
xlat
sti
sub
dec
push
loop
sti
leave
jnp
mov
loope
or
std
fdivrs
scas
jno
idivl
in
pushw
shl
add
sarb
stc
and
mov
push
sub
jbe
dec
mov
dec
adc
movsb
cs
pop
shlb
xchg
mov
or
icebp
push
loope
sarb
jno
movsl
mov
ss
in
sub
add
outsb
dec
cmp
cmp
push
push
mov
push
push
inc
loope
test
mov
push
popa
push
pop
or
daa
je
test
rolb
cltd
mov
dec
xor
jae
enter
lea
fadds
fcoml
pop
in
cli
popa
cwtl
sub
dec
jae
pop
mov
hlt
in
inc
add
cmp
pop
jmp
mov
xchg
nop
psubusw
cwtl
jmp
ficoms
mov
sbb
add
test
in
in
addr16
mov
pop
in
clc
test
push
jge
subb
add
loopw
sbb
nop
mov
or
ret
iret
popa
push
mov
insb
into
daa
pop
lahf
xlat
sbb
ret
rol
roll
inc
fstps
je
idivl
or
xor
iret
es
inc
cld
jb
jecxz
xchg
arpl
or
mov
hlt
das
xchg
jg
cmpsb
or
fisubs
cltd
pop
lret
sub
popa
in
xor
adc
jg
xchg
rclb
mov
mov
mov
add
adc
sti
mov
ljmp
or
in
repnz
xchg
fimuls
mov
dec
lods
test
outsb
adcl
pop
xor
fcoms
ljmp
lret
jge
int
sahf
mov
push
pop
cwtl
mov
dec
mov
sahf
xor
pop
dec
ret
jecxz
sub
and
in
test
imul
popa
jnp
decb
inc
fwait
add
push
addr16
xor
mov
sbb
lcall
test
inc
push
xor
iret
popf
ficompl
lcall
loope
sbb
and
pop
ja
inc
sbb
movsb
das
or
dec
xchg
xchg
adc
mov
stos
push
loop
ljmp
jg
push
or
notb
xor
int3
mov
cmp
xor
pushf
mov
add
std
adcl
in
sbb
mov
lahf
mov
mov
loope
in
pop
lds
push
pop
push
mov
mov
jne
test
fmull
das
sub
arpl
repz
dec
jnp
jge
test
dec
sbb
xchg
cmpsl
inc
leave
adc
sub
push
push
adc
push
push
jle
cmp
aas
es
add
sub
icebp
ret
dec
push
mov
mov
add
ss
jo
adc
fdivrl
sbb
enter
bound
mov
call
sbb
aam
je
mov
in
rcl
pop
je
push
mov
cmp
lret
mov
cwtl
mov
lret
mov
filds
push
mov
outsb
cmpsb
stos
je
imul
cmp
and
mov
daa
js
loop
aad
mov
xor
movsl
addl
sub
add
lods
out
or
xor
dec
jmp
pop
inc
rcll
add
add
lods
jb
jmp
and
repnz
call
jmp
aam
clc
and
pop
add
insb
lock
negl
js
push
popf
mov
insb
fldcw
lahf
mov
movsl
add
cmc
jae
inc
icebp
mov
idivl
inc
test
xor
les
add
adc
repnz
cmp
repnz
insl
lock
in
dec
jns
lret
mov
mov
cmp
fisubrs
mov
dec
add
push
xchg
push
xor
push
enter
ja
fisubs
mov
aas
addr16
dec
add
pop
pushf
add
jae
out
xchg
cmp
pop
add
enter
and
fs
mov
sub
jg
push
sbb
xchg
lret
pop
and
adc
int3
scas
sbb
ret
lds
mov
cmp
mov
jno
cmc
loopne
lock
cmp
in
xchg
sub
xor
xlat
cmp
out
and
pop
mov
jbe
push
aad
ljmp
push
sub
gs
xchg
push
flds
or
sbb
xorl
rolb
mov
mov
lods
xlat
add
cltd
aam
inc
test
or
xor
inc
loopne
mov
cs
cli
test
icebp
subb
dec
and
sbb
jno
sbb
icebp
ficoml
imull
pop
scas
and
mov
jmp
mov
xor
push
cs
add
test
lahf
mov
and
cmc
les
rcrb
xchg
dec
imul
arpl
shll
cmpb
scas
test
adc
cli
pop
lods
cmp
push
pop
test
xor
into
push
mov
in
sub
jo
adc
loope
and
sub
out
orb
aaa
in
adc
xchg
repz
pop
jne
lret
sarl
out
or
psubw
push
cmp
adc
pop
sbb
pop
adc
pop
movsl
push
test
dec
mov
cmp
or
mov
push
cld
push
push
sub
call
inc
cmpb
mov
and
mov
lock
int3
lret
adc
jnp
xchg
jp
sbb
push
sbb
pop
aad
sub
sbb
push
loop
mov
xchg
mov
xchg
faddl
in
lcall
sahf
xchg
popf
inc
mov
sbb
sbb
add
inc
mov
or
lcall
dec
and
call
jge
mov
and
movsb
push
cmp
dec
pop
movsl
mov
sub
sub
xchg
sub
fwait
pop
jns
repz
in
or
dec
les
cwtl
lds
jl
inc
ret
nop
enter
repz
sbb
pop
fidivl
outsl
lahf
xor
mov
dec
ficomps
fs
mov
mov
flds
loop
push
mov
stos
addb
cmpsb
dec
mov
lods
pusha
pusha
xchg
jae
aam
mov
sahf
or
mov
sub
cmp
lds
mov
pop
cli
jae
mov
mov
xchg
das
cmpl
dec
pop
cmp
xchg
inc
mov
add
xchg
mov
movsl
jle
lods
rol
nop
cmp
xor
pop
jbe
or
and
sbb
pop
push
push
xchg
daa
rcrl
pop
setp
mov
testb
out
and
cli
jp
sub
push
fiaddl
scas
fistl
or
push
push
daa
nop
add
stos
and
or
jg
mov
mov
testb
cmp
pop
lods
insl
cmp
rorb
inc
inc
add
dec
mov
aam
out
mov
lret
lahf
sbb
rolb
aaa
rorl
and
mov
ljmp
inc
or
dec
cltd
cmp
mov
push
xlat
outsb
add
inc
mov
lahf
out
cmp
xchg
daa
dec
insb
aas
iret
test
jne
mov
sub
je
inc
and
outsl
jno
sub
mov
mov
call
inc
jnp
xor
cmp
push
pop
lods
iret
sbb
add
out
dec
dec
jg
cmc
push
add
push
xchg
jb
rclb
push
or
fidivrl
lret
shlb
add
shlb
or
std
mov
lcall
mov
lods
mov
xchg
mov
cli
jb
mov
pushf
adc
xchg
push
mov
ret
pop
inc
mov
push
js
mov
loop
pop
dec
push
pop
fldcw
jmp
mov
push
fcomps
cwtl
mov
fists
pusha
xchg
jns
or
jg
clc
add
mov
dec
test
mov
in
or
push
push
aad
jno
cmc
stos
addr16
jmp
les
iret
sbb
add
mov
sbb
sarl
lcall
outsl
sbb
nop
lahf
xchg
lcall
es
test
adc
sbb
add
call
xlat
stos
lret
or
add
ret
dec
pop
insl
pop
mov
mov
add
mov
shll
xchg
movsl
push
adc
stos
push
sub
outsb
out
push
nop
dec
fistps
outsb
aas
mov
insl
in
test
out
or
test
mov
pushf
call
push
loop
sub
enter
xchg
rcrl
repz
push
pop
push
mov
dec
mov
mov
xor
pop
sti
lret
lahf
ljmp
int
test
or
jecxz
sbb
mov
fdivrp
inc
xchg
insb
xchg
out
sub
mov
fisttpl
fcomi
sahf
jmp
add
cld
sub
clc
inc
inc
iret
push
xchg
push
lods
mov
inc
mov
popl
jl
jo
push
mov
fs
mov
cld
push
test
addr16
shrb
pushf
test
and
xor
gs
fcmove
in
cmp
and
or
adc
sub
cmc
mov
scas
xchg
test
pushw
sbb
mov
ljmp
jge
push
pop
xor
cmc
push
pop
iret
inc
adc
out
std
sbb
mov
mov
mov
push
movsl
andl
call
hlt
incl
cmp
stos
jle
cld
fincstp
std
xor
push
ljmp
faddl
test
mov
push
sbb
das
repz
jecxz
or
xchg
dec
mov
add
mov
mov
fnstenv
and
cwtl
and
or
push
push
rclb
xchg
xchg
sbb
aas
inc
push
inc
jmp
stc
fldl
rcr
mov
mov
mov
jnp
fwait
incl
cmp
mov
adc
jb
outsl
sarl
mov
push
std
pop
js
push
lret
mov
mov
loopne
sub
jp
inc
mov
sbb
outsl
rcr
mov
popf
cmp
aam
mov
scas
cmp
cmpsl
or
movsl
add
cmp
cmpl
je
sub
dec
mov
xorl
ljmp
aaa
ret
cmpsb
call
sub
mov
pop
push
aam
stos
popl
sub
jl
movsl
cmpsb
pop
aaa
icebp
add
cmc
pmaxsw
call
and
sti
pop
std
push
mov
lods
pop
fwait
sahf
mov
iret
cmpsb
push
pop
mov
cwtl
or
or
arpl
fcmovne
stos
adc
push
aaa
les
dec
jle
addr16
add
cmp
mov
inc
cltd
jne
mov
dec
push
aaa
sbb
xor
xchg
mov
mov
les
pop
xor
mov
out
loop
push
mov
addl
je
inc
nop
repz
rolb
pop
pop
sarl
push
xchg
adc
inc
mov
push
xchg
fcomps
in
into
test
pop
stc
cmp
rcr
mov
fimull
out
mov
xchg
mov
pop
lret
push
mov
pushf
fdivrl
adc
jge
jl
bound
cmp
lret
ljmp
outsl
push
xor
icebp
cmp
not
fdivs
out
dec
mov
test
mov
in
mov
scas
sahf
ds
popa
add
jmp
mov
fdiv
fs
out
push
mov
sub
pop
sbb
clc
fcompl
fistpl
pushf
aam
add
adc
out
je
fs
in
sub
inc
and
cwtl
and
xlat
fcompl
sar
int
or
cwtl
imul
adc
mov
pop
and
sub
lahf
jmp
or
adc
sbb
movsb
mov
pop
inc
sbbl
cmc
sub
mov
mov
sarb
inc
and
mov
nop
rol
push
jae
pop
cmp
std
in
xchg
mov
jp
inc
mov
pop
popf
lods
jecxz
in
in
pop
fcmovbe
jp
and
lret
stos
daa
dec
andl
ljmp
enter
stc
xchg
push
fidivrl
dec
rcr
jg
jnp
mov
xchg
sbb
and
cld
mov
jns
outsb
dec
inc
push
test
push
pusha
xchg
sbb
shrb
cmc
sbb
dec
xchg
adc
lret
push
aad
inc
stos
enter
sbb
sahf
fwait
dec
cmpsl
cmp
loopne
jl
and
mov
add
in
xor
out
or
sbb
add
adc
inc
into
mov
inc
xchg
pop
cmpsl
scas
call
stos
mov
daa
mov
jmp
ja
jecxz
push
xchg
add
or
pop
inc
stos
adc
sbb
pop
loopne
in
mov
pushf
cmp
mov
mov
in
or
setle
insl
iret
or
cmpsl
push
adc
psrlw
pop
stc
popa
cs
lods
jp,pt
fs
push
gs
cmp
icebp
test
out
jle
insl
das
pop
fsubs
mov
sbb
adc
pop
jns
add
fwait
adc
cmpsl
repnz
sarb
dec
ret
fsub
pop
inc
mov
mov
inc
adc
push
fs
pop
lock
mov
dec
and
push
stos
mov
mov
dec
stc
je
mov
or
jns
aam
mov
cmpsb
out
xchg
ljmp
xchg
adc
sahf
inc
mov
mov
xor
das
jecxz
scas
loopne
jmp
jmp
add
andb
sti
inc
jne
fdivl
dec
std
repnz
aam
imul
fnstenv
and
mov
stos
out
stc
shr
or
js
lock
pop
sbb
out
fadds
jmp
xchg
fstp
push
int
nop
mov
and
cmp
test
cwtl
inc
test
adc
inc
inc
in
movsl
enter
and
mov
jb
mov
sub
cli
adc
xchg
mov
test
ss
xchg
mov
decl
ds
mov
inc
shll
inc
int
jo
mov
mov
mov
or
lods
mov
lcall
std
ret
lret
hlt
iret
dec
cltd
push
std
cmpsb
insl
pop
das
push
sbb
inc
push
test
jbe
rol
pop
cmc
les
sub
jno
stos
out
sbb
sbb
movsl
sbb
add
sbb
movsb
ret
shlb
jb
xor
sbb
out
hlt
hlt
fsubl
push
out
mov
xchg
mov
jno
lock
or
sub
push
outsb
testb
sti
pop
sbbl
cmpsb
push
cmp
jns
sub
inc
cmp
adc
adc
ljmp
sub
ret
push
push
sahf
push
jg
sub
aas
fstpt
xor
out
into
jae
jae,pn
jecxz
pop
add
sub
mov
xchg
repz
ficompl
xchg
pop
xor
xchg
out
and
inc
sbb
call
nop
gs
lods
or
jno
jb
roll
in
add
pop
cmpsb
pop
cmp
roll
fadds
and
pusha
clc
sarb
ss
mov
pop
push
scas
inc
adc
lret
movsl
and
fidivrs
cmp
out
fisttps
out
xorb
pop
or
adc
jg
add
jle
mov
add
lea
xchg
stos
outsb
mov
popf
fnstsw
cld
jnp
shrl
sbb
jne
jbe
add
out
xchg
out
enter
pop
xchg
or
in
je
push
sub
mov
inc
imul
xor
dec
loope
sbb
mov
mov
pushl
movsb
idiv
push
aas
mov
lea
lods
pusha
or
pop
sbb
xchg
movsb
ret
test
adc
push
xchg
stc
jo
add
adc
jnp
sub
push
xchg
icebp
or
jns
or
xor
clc
add
out
inc
add
cmp
mov
ret
add
cmp
sub
fldl
into
xchg
cmp
leave
inc
fidivs
fwait
and
adc
sahf
mov
push
outsl
mov
in
xchg
addr16
sbb
push
int
jbe
jmp
outsl
cmp
xchg
xchg
aas
jns,pn
pop
ret
cmp
orb
dec
clc
test
sti
movsb
test
sub
pushf
push
lock
paddq
das
fs
aaa
mov
push
cmp
cmpsb
pushl
cmp
cld
fwait
pop
add
inc
add
push
ja
int
jnp
mov
rep
lods
and
insb
sbb
jle
or
mov
cmp
xor
mov
sbb
lods
mov
dec
pop
inc
sbb
das
inc
pop
cs
sub
fadds
pop
stc
and
popf
cmp
inc
mov
mov
inc
dec
push
out
cmpsb
fdivp
and
loop
pop
or
inc
or
fwait
push
mov
lods
inc
jae
mov
jns
fmul
jp
fs
cld
into
sahf
jb
push
xchg
inc
xor
imul
jle
mov
mov
xchg
andb
mov
cmpsb
xchg
adc
dec
lret
mov
sbb
out
mov
mov
sub
sub
and
sbb
xor
mov
mov
jecxz
xor
cmp
mov
in
sarl
notb
or
add
jae
sbbl
and
loopne
hlt
test
lods
arpl
and
rcll
inc
lret
loope
ss
cmp
pop
je
inc
fadds
sbb
dec
mov
lcall
ret
mov
lods
xchg
sbb
int
inc
jne
imul
les
das
and
lds
lahf
or
adc
and
add
or
aad
xor
icebp
pushf
out
pushf
push
stos
dec
fcomps
add
xor
iret
pop
dec
pop
fidivl
aam
sbb
ss
aaa
mov
add
cmp
pop
inc
adc
xor
pop
repz
mov
mov
test
hlt
jbe
or
mov
xor
loopne
dec
enter
in
imul
in
add
jg
and
mov
scas
fwait
push
push
mov
roll
cmp
ljmp
jae
cmpsl
mov
pop
sub
and
sbb
push
or
into
pusha
fisubl
inc
test
ja
push
sbb
loopne
clc
lahf
push
pop
mov
dec
imul
std
jno
mov
jns
mov
iret
clc
adc
cmp
pusha
ss
cmp
pop
movd
movsb
jp
cs
loopne
fsts
lret
out
test
aaa
lcall
mov
mov
jns
pop
fsts
pushl
dec
std
push
xor
add
or
xchg
je
or
enter
sub
xor
dec
push
test
push
roll
jl
fisubrs
insl
adc
popa
xlat
mov
sub
pop
jnp
int3
fsubr
scas
mov
mov
jge
das
jne,pt
xchg
movsb
and
mov
in
or
xor
jo
cltd
xchg
cmp
in
add
push
std
ja
cwtl
xchg
sbb
push
pop
sbb
or
dec
shlb
movsl
pop
cwtl
outsl
pop
dec
pop
adcl
daa
jmp
sbb
sub
std
inc
pop
cltd
pop
jnp
stos
jle
ret
cmp
xchg
mov
jo
subl
sub
sbbb
leave
mov
in
into
jg
insb
xor
pop
out
hlt
push
cmp
stc
lret
pusha
mov
mov
pusha
cmpsb
cmpsl
in
fistl
inc
into
jmp
pop
aas
pop
adc
arpl
sub
jg
shlb
mov
xchg
add
lods
pushf
xor
lret
mov
xorl
int
or
mov
mov
mov
pop
xchg
mov
cld
jne
out
xchg
in
mov
outsb
add
jl
pop
xchg
add
int
xor
push
sub
jge
out
add
xor
jne
lret
adc
adc
aad
dec
pop
pop
repnz
push
add
xchg
les
xchg
je
push
jmp
jbe
mov
pushf
mov
inc
mov
cmpsl
pop
xchg
out
and
lahf
mov
in
out
sbbl
cmpsl
jmp
cmpsl
aam
iret
rorl
enter
xchg
mov
mov
jg
lcall
jge
cmp
adc
xorl
push
mov
mov
iret
out
std
push
xor
sbb
xlat
and
cmpsb
push
test
mov
jo
cld
jne
push
hlt
insl
dec
daa
or
call
mov
loop
in
cmc
adcb
mov
in
lret
pop
push
inc
mov
hlt
pop
mov
pop
mov
sub
shll
cli
test
mov
or
sbb
xor
sbb
xor
fistpll
dec
jge
sbb
push
mov
xor
push
sarl
outsl
orb
mov
inc
pop
rcll
data16
jg
push
out
or
cmp
ret
push
mov
mov
pusha
clc
inc
add
sbb
js
outsl
mov
mov
addr16
jle
je
sub
and
ljmp
mov
subl
inc
daa
or
popa
fldt
and
mov
mov
jo
mov
ss
dec
lds
push
ljmp
mov
rcrl
pop
sti
push
push
cmp
cmc
xchg
idivb
fldenv
es
mov
push
js
dec
push
mov
and
cli
in
adc
xchg
xor
jg
js
icebp
add
jmp
or
mov
xchg
enter
lret
std
outsl
addr16
dec
lock
andb
jge
faddl
mov
shr
out
mov
ret
fnstcw
and
sbbl
orl
dec
dec
shll
cmp
lock
push
pop
fidivrl
lahf
xchg
adc
add
insb
das
fwait
cmp
or
shl
pop
andb
and
pop
xchg
mov
loop
xor
and
jno
fdivrl
icebp
dec
movsb
fisubl
js
mov
fstps
test
mov
or
jl
out
fdivrl
aas
jo,pn
into
push
cmp
xor
adc
iret
test
out
addr16
jge
xchg
cltd
cltd
or
or
cmp
daa
mov
rolb
pop
aas
inc
test
add
add
or
xchg
mov
sub
leave
in
mov
out
mov
dec
js
pop
add
xor
push
add
jae
cwtl
lea
dec
ficoms
fwait
pop
lahf
and
bound
sbb
sbb
mov
orl
ja
imul
mov
popl
fisttpll
xor
pop
imul
jns
or
clc
xor
mov
into
dec
mov
pop
jecxz
dec
sbb
adc
mov
fistl
scas
insl
push
into
xchg
mov
cmp
sub
inc
xchg
push
ja
jae
in
loope
mov
punpcklbw
nop
sub
dec
xchg
mov
ret
dec
pop
nop
out
sbb
add
mov
setae
xor
sub
mov
xchg
mov
out
adc
push
pop
je
or
cmpsb
into
mov
inc
stc
ret
clc
pop
sub
call
fndisi(8087
test
xlat
pop
pop
das
jl
fsubp
sub
js
negl
int3
pop
lds
sbb
push
jge
imul
pop
cmp
adc
outsb
xchg
call
sub
pop
sub
in
stos
in
ds
sti
lret
stos
jle
and
pandn
cmp
cmp
in
insl
daa
push
pop
das
jnp
xlat
js
in
call
mov
adc
das
xor
jno
mov
shlb
dec
bound
mov
jb
imul
inc
in
stc
inc
imul
sbb
xlat
outsb
inc
arpl
push
bound
mov
mov
cmpsb
into
jle
xor
mov
sahf
adc
ljmp
data16
mov
pop
dec
xchg
pop
inc
sbb
mov
push
repnz
xlat
jle
ffreep
lgs
add
test
push
inc
lea
pop
in
pop
lret
jg
icebp
lods
fs
mov
add
adc
push
clc
orb
mov
into
out
lds
sub
inc
ja
das
into
dec
add
jbe
cld
in
stos
loop
pop
js
mov
mov
push
fld
das
aaa
icebp
imul
cmp
int3
sbb
shr
hlt
mov
test
outsl
adc
push
scas
fucom
jecxz
mov
mov
mov
cwtl
std
ficoms
adc
mull
loope
push
and
cwtl
mov
lcall
ja
leave
movsb
imul
jp
test
mov
in
cmp
mov
mov
adc
lcall
mov
add
mov
hlt
adc
aam
push
dec
scas
jge
xchg
enter
mov
andl
cmp
test
adc
add
sahf
mov
das
mov
dec
daa
in
add
leave
mov
mov
cmp
repz
loopne
xchg
pop
jns
adc
fcoms
fdivs
or
fwait
or
mov
or
in
shrl
stos
in
sbb
mov
inc
cmp
push
mov
cwtl
es
cmpsb
mov
aaa
adc
xchg
lods
in
xchg
mov
xchg
or
fbld
jp
ss
cmpsb
lods
jg
int
shl
in
inc
rorb
or
push
int
sub
push
xor
dec
mov
in
xor
jecxz
enter
call
mov
in
sbb
add
xor
stos
int3
rcrb
ja
pop
jl
mov
out
push
arpl
push
sbb
xchg
and
rol
rcrb
imul
dec
je
pop
xchg
mov
and
push
xlat
cmp
sbb
pop
into
lret
inc
mov
pop
mov
jo
sti
icebp
xor
and
xor
hlt
mov
and
add
xchg
add
in
mov
dec
adc
jne
inc
mov
js
sub
repz
nop
imul
push
adc
or
push
jmp
mov
mov
xchg
xor
sub
pop
push
cwtl
inc
mov
xchg
fs
mov
jl
pop
pusha
out
ret
mov
clc
loopne
ret
push
jmp
lcall
dec
jl
pop
adc
imul
adc
fs
adc
std
and
fwait
repnz
adc
pop
jge
in
pop
leave
ss
or
int
or
js
into
inc
pushf
mov
add
mov
cmp
cmpsl
fsubr
add
dec
les
shrb
pop
fs
mov
je
outsl
into
aad
mov
cmp
jne
gs
lcall
xor
adc
or
subb
shll
pop
aam
rorb
scas
frstor
and
xor
sbb
sbb
jp
rolb
invd
jle
arpl
or
cmp
push
inc
in
push
test
loopne
or
enter
mov
push
pop
test
aaa
mov
push
fdivs
inc
xchg
mov
fdivrl
push
sbb
pop
ds
and
fiadds
mov
sbb
jge
push
add
pop
mov
cmp
arpl
and
push
pop
mov
jbe
sub
insb
hlt
insb
into
icebp
clc
stos
test
pop
daa
hlt
pop
jl,pt
adc
out
icebp
test
movsl
push
imul
pop
sbb
gs
sbb
fnclex
notl
pop
mov
mov
movsl
mov
or
clc
push
xor
incb
jne
jb
mov
mov
mov
add
pusha
lods
push
sbb
mov
les
sbb
sub
xor
in
shrl
xchg
pop
shr
mov
xchg
repnz
ficompl
xor
popa
aad
jg
sub
loopne
xor
ja
idivl
testb
sar
fsts
jmp
dec
out
stos
pop
sub
frstor
jnp
xlat
sbb
lret
gs
mov
ret
fldcw
rcr
aam
or
jge
or
sbb
mov
mov
sbb
shll
inc
mov
loope
push
pop
hlt
xchg
push
cltd
pop
mov
nop
repnz
xchg
outsl
mov
add
test
rorb
dec
sub
js,pt
pop
rcrb
inc
push
push
enter
mov
pop
xchg
and
call
loop
jno
mov
imul
call
adc
insl
inc
js
loop
negb
lahf
repnz
mov
or
xchg
sarb
pop
cli
imul
mov
mov
add
ds
mov
adc
mov
xor
ds
imul
cmpsb
or
lret
adc
jno
in
std
pop
or
sbbl
popa
push
push
gs
or
adc
push
sub
inc
xchg
push
or
mov
in
adc
lahf
imul
jno
mov
xlat
in
dec
pop
js
ja
lods
stos
mov
loopne
rorb
in
test
rorb
icebp
les
cli
jge
push
inc
push
add
popf
ds
xor
and
imul
outsb
jmp
cmp
jl
lcall
xchg
cmpsb
vsqrtps
sbb
sti
jle
lock
inc
inc
or
inc
cmc
out
dec
ficoms
out
test
sub
test
ja
sti
dec
sub
pop
in
fbld
mov
lea
xchg
imulb
mov
stos
in
popa
fistl
pop
mov
movsb
mov
mov
sub
in
mov
pop
mov
pop
cwtl
jbe
push
roll
mov
push
aad
mov
mov
jge
inc
aaa
pusha
repnz
test
icebp
jbe
int3
mov
sarl
inc
enter
fiaddl
cmpsb
xor
add
mov
ret
fimull
int
pminub
pop
inc
or
mov
loopne
or
pop
sub
jno
mov
mov
mov
ljmp
sub
inc
sti
dec
adc
out
call
sub
xchg
testl
bound
lea
mov
xchg
dec
xor
dec
adc
or
rorb
dec
xlat
cmp
outsl
shrb
mov
int3
or
pop
add
pop
cmp
push
xlat
add
xor
es
aas
sarl
into
enter
mov
lods
sbb
cs
jb
mov
lea
in
mov
sbb
imul
pop
popw
pop
ljmp
aaa
adc
dec
mov
cwtl
outsb
push
addb
pushf
lcall
or
sbb
lea
lahf
cmp
movsl
jae
sub
mov
pmulhuw
cltd
fidivrl
xor
dec
jb
addl
pop
sbb
movsb
mov
add
fildll
in
es
and
int3
lods
mov
out
fwait
inc
inc
daa
cmc
cmp
int
cmp
sub
mov
into
in
lea
andb
and
ss
aaa
xor
inc
cmp
xchg
mov
pop
cmp
cmp
imul
scas
cmp
inc
stos
fiadds
xchg
call
sbb
scas
testb
je
icebp
push
dec
jl
stos
notb
cmc
mov
pop
cmp
adc
pop
int3
icebp
jg
roll
mov
in
sbb
mov
loope
xchg
xor
add
pop
jle
testl
cmp
cli
ret
dec
in
mov
aad
adc
lahf
push
ret
test
xor
mov
mov
jb
cld
lock
ds
push
stos
mov
loop
mov
gs
pop
pop
movsl
add
mov
dec
add
or
or
jbe
dec
ljmp
lock
cmp
adc
int3
loop
jecxz
add
imul
cmc
nop
adc
cmp
hlt
cld
sub
mov
pop
shlb
outsb
push
and
test
push
add
clc
stos
add
scas
iret
jecxz
jmp
inc
aad
rcll
or
adc
inc
xor
xchg
jae
sbb
repnz
xchg
aad
sub
and
mov
xchg
aaa
lcall
xor
bnd
in
mov
or
jecxz
xor
loopne
testl
in
push
pop
cmp
sbb
imul
call
and
testl
out
mov
cs
sub
adc
mov
add
clc
lds
cmp
push
mov
sbbb
lods
push
ret
mov
iret
mov
adc
test
jg
inc
aam
cwtl
push
sbb
adc
jae
cli
mov
lods
lock
sti
leave
push
lahf
test
cli
xchg
and
or
dec
pop
ljmp
outsb
adc
imul
push
xchg
shl
adc
mov
cltd
sti
inc
mov
popf
js
and
mov
jg
test
je
adc
push
and
rorb
repnz
femms
add
leave
and
cmova
out
mov
cs
loop
nop
dec
mov
sub
dec
call
cli
out
adc
xor
push
test
add
rcr
fwait
push
cmp
xor
out
imul
outsb
adc
test
xchg
addb
add
add
mov
push
fwait
repnz
repz
lcall
sbb
mov
testb
sbb
mov
inc
and
xor
sbbb
icebp
xchg
into
mov
shlb
adc
jbe
jge
or
push
jmp
xor
cli
dec
mov
xchg
mov
int3
push
in
sub
ljmp
mov
xchg
call
pop
jp
std
sub
pushf
repz
loopne
cmp
mov
jno
fistl
lds
mov
mov
outsl
or
jecxz
sahf
push
jmp
or
add
jnp
test
dec
mov
cmp
cmp
cmpb
sbb
insb
insl
fnstcw
mov
xchg
adc
dec
inc
jno
inc
xchg
cmpb
or
push
repnz
inc
lods
inc
xchg
arpl
stc
rcrb
js
jo
outsb
mov
stos
xor
jb
mov
out
cltd
mov
iret
loope
jp
mov
test
push
div
mov
or
cmp
pop
xchg
and
lret
out
xor
cmp
dec
push
mov
jl
jg
aam
xchg
mov
push
int3
adc
dec
push
pop
push
loop
movsb
mov
jae
cmp
shrb
add
in
cs
int3
out
adc
fcmovne
add
movsb
fsubl
ficoms
inc
shll
cs
mov
mov
cld
push
sub
fucom
dec
ss
cltd
fwait
es
ret
ss
loopne
ret
sbb
or
cmc
mov
clc
mov
and
fldcw
adc
xor
xor
sbb
push
jnp
sub
je
and
std
sbb
inc
ds
adc
dec
bt
je
cli
xchg
test
or
dec
push
subl
mov
adc
push
or
push
loop
pop
xlat
mov
das
fisubrs
shl
dec
inc
rclb
stc
leave
loop
add
ss
jg
ljmp
push
adc
lret
jp
loope
inc
adc
call
in
cmpsl
lea
outsl
mov
cs
sbb
sbb
xchg
popf
adc
mov
shll
ja
fistl
rcrl
xchg
dec
jecxz
mov
push
jmp
fldt
mov
in
cmp
xchg
scas
insb
repz
dec
cmp
sub
adcl
add
out
cmp
lcall
jmp
cmp
clc
sub
dec
and
jae
lods
jae
lcall
and
adc
fwait
sub
xor
dec
movsl
xchg
insb
jns
divl
push
lahf
icebp
dec
xchg
lret
pop
and
movsl
outsb
out
pop
sub
sbb
ja
adc
push
cmp
das
mov
mov
imul
fmuls
mov
inc
mov
mov
pop
out
mov
xchg
movsb
mov
or
inc
xor
je
cltd
mov
add
xchg
divb
jmp
lea
mov
mov
push
mov
adc
into
loope
dec
test
or
or
adc
sbb
jl
movsl
inc
mull
arpl
cmp
jge
xlat
xlat
adc
rolb
mov
pop
mov
add
jb
mov
jmp
lock
xchg
out
dec
movsl
and
test
jb
lock
movsl
and
out
das
gs
xor
fs
or
push
lods
cmp
ljmp
ljmp
mov
sbb
cmp
stos
nop
addl
gs
xor
mov
sub
test
xchg
loop
xor
in
xor
adcl
mov
mov
push
in
out
inc
mov
pop
pushf
jmp
jecxz
sub
fmulp
lret
cmp
adc
sbb
or
xchg
ljmp
or
mov
cwtl
and
fstpt
dec
pop
mov
push
mov
aam
ss
imul
lcall
mov
xor
fs
push
mov
int3
loopne,pn
mov
cmpsb
xchg
dec
push
cmp
cs
ret
outsl
nop
inc
subb
pop
rcrl
dec
and
adc
push
lahf
cltd
arpl
dec
pop
mov
test
or
mov
add
xchg
add
into
push
push
cwtl
sbb
dec
lock
pop
insb
cmpsl
mov
adc
jae
mov
or
sahf
jbe
cmp
iret
push
cmp
jno
xor
call
lret
xor
nop
jl
lret
mov
mov
bnd
mov
mov
xchg
sti
inc
lea
and
sub
inc
push
les
cmc
mov
mov
bound
inc
adc
push
xor
in
push
dec
pop
mov
test
add
leave
inc
dec
outsw
movsl
jmp
mov
mull
xor
xchg
and
lcall
xchg
push
mov
negb
mov
mov
leave
mov
fs
adc
pop
adc
adc
sbb
mov
cwtl
and
mov
adc
lcall
cmpsb
popf
test
sbb
or
mov
out
scas
movsl
adc
pushf
ret
inc
out
addr16
out
bswap
mov
test
sbb
in
stos
dec
addb
jnp
nop
jle
inc
adcl
daa
sub
mov
and
xor
jle
cmpsb
cmp
ss
add
mov
xchg
sarb
cmc
outsb
sarl
movsb
inc
mov
movsl
push
stos
loope
or
cli
insl
sar
adc
pop
dec
into
xlat
call
test
cli
leave
push
in
shl
mov
ret
adc
or
loope
je
popa
push
test
imul
adc
outsl
xchg
inc
lcall
jp
test
repz
jmp
scas
fdivl
jo
ret
push
fdivrs
fst
call
fwait
pop
pop
call
fcoms
push
sub
lods
sbb
sub
lods
dec
lea
xor
adc
inc
clc
cltd
xchg
out
addb
aaa
adc
push
push
test
xchg
test
aaa
mov
test
je
ds
pop
arpl
div
fidivl
pushl
insb
jns
pop
sub
sub
jmp
sub
scas
xchg
clc
push
mulb
mov
test
cmp
sbb
mov
repnz
lret
pop
add
nop
sub
out
enter
add
mov
out
cwtl
loope
sub
mov
pop
cmpl
mulb
sbb
mov
rep
and
or
adc
sub
mov
cli
gs
mov
pop
sbb
push
xchg
cltd
pop
sbb
xor
das
sub
in
scas
out
inc
nop
inc
fcoml
lea
xor
and
out
out
xchg
pop
sub
or
enter
cmpsb
xchg
imul
outsb
xlat
add
and
cwtl
int3
pop
xchg
sub
adc
pop
scas
int
add
adc
mov
sub
out
jbe
outsl
testl
xchg
in
push
sbb
xchg
or
cwtl
push
dec
mov
xchg
insb
cmc
pop
jle
dec
mov
mov
rorb
rcrl
lret
lea
mov
mov
mov
ss
xor
ja
loop
aad
jnp
pop
push
xor
dec
push
lret
sbb
push
aam
and
jecxz
sbb
mov
mov
cmp
scas
cld
xchg
jne
test
icebp
jp
idiv
sti
pop
dec
push
sbb
in
inc
movsl
pop
data16
jge
pushf
inc
into
stos
ja
pop
cmpl
fwait
enter
add
scas
cwtl
test
mov
mov
out
cmpl
mov
cmp
cmpsb
xchg
xor
outsl
pop
adc
mov
inc
fisubs
xor
cmp
outsb
test
mov
popa
pop
pop
cwtl
fs
daa
and
outsb
gs
hlt
xchg
cmp
pop
and
xor
xor
cmp
mov
xor
mov
fcoms
cwtl
mov
imul
incl
fadds
inc
add
out
arpl
outsb
test
xchg
pop
xchg
push
sub
sbb
out
xor
add
popa
lock
push
push
mov
inc
fdivs
pushf
jecxz
mov
pop
push
pop
aam
dec
sub
call
inc
scas
imulb
and
rorl
shl
testl
jno
and
sub
btc
imul
imul
mov
mov
add
les
stos
loope
adc
and
or
or
call
push
fsubrs
test
mov
jns
sbb
test
ror
jle
notl
cli
mov
insl
into
ss
cmp
lock
cmpb
inc
jecxz
jne
push
mov
sbb
adc
sub
cli
mov
push
sub
ss
mov
outsb
outsl
lret
jmp
jl
add
aaa
xchg
ss
cmp
adc
mov
leave
dec
in
and
fiadds
or
or
fs
jns
mov
clc
leave
mov
lret
mov
insl
adc
or
fwait
icebp
inc
push
xor
xor
call
xorb
in
mov
out
jbe
push
ds
ljmp
repnz
add
rcrb
push
mov
or
mov
mov
xlat
imul
je
out
les
subl
fcompl
loop
push
fld
sub
mov
shrl
test
mov
inc
iret
push
repz
xor
sub
sbb
jbe
xchg
pop
loop
cmp
jns
das
adc
mov
popf
jae
mov
xchg
xchg
icebp
inc
dec
cltd
push
pop
xor
ds
lcall
lods
insl
jae
lea
push
cmpsb
push
iret
les
mov
dec
lcall
test
rcrl
pop
sbb
dec
movsb
inc
mov
or
imul
jg
mov
mov
sbb
movsl
outsb
mov
into
stos
cmp
dec
out
cld
dec
cltd
cmp
mov
sub
push
pushl
cltd
fists
cmp
fsubs
popf
dec
repnz
shrl
mov
push
mov
xchg
xchg
inc
cmp
nop
ret
add
sbb
scas
loope
outsb
mov
jmp
pop
enter
lahf
popf
outsb
cld
je
or
adc
inc
outsl
lahf
in
lret
mov
add
dec
dec
xchg
outsl
xchg
dec
out
mov
cld
call
je
fwait
pop
jecxz
jae
inc
adc
cmp
in
outsb
outsl
popa
in
mov
mov
pop
fwait
pop
pop
in
push
sbb
mov
jne
push
movsl
icebp
scas
and
nop
outsb
sarb
sbb
imul
inc
mov
xchg
pop
jbe
movnti
mov
shlb
mov
scas
jmp
jb
inc
and
xchg
in
and
leave
imul
testl
xchg
or
aad
jge
in
pop
mov
mov
jnp
jbe
xchg
adc
sub
fcoml
mov
inc
fdivr
dec
mov
ficoml
sbbl
and
mov
mov
inc
adc
stc
push
movsl
sub
incb
test
sti
push
mov
xchg
dec
inc
jbe
and
movsb
inc
or
mov
and
outsl
je
fisttps
pusha
in
fwait
and
outsb
adc
gs
dec
popa
inc
mov
and
ss
pop
mov
push
inc
inc
mov
adc
add
fimull
jp
jp
inc
push
and
popa
hlt
fstpl
adc
adc
xor
dec
loopne
pop
xchg
xchg
xchg
pop
jg
mov
mov
jge
xor
out
xchg
icebp
sbb
push
mov
cs
ret
jl
push
call
or
push
jns
dec
dec
bound
mov
sub
and
addl
sub
jo
fsubl
xor
fldt
mov
sub
lahf
push
mov
mov
mov
add
xchg
inc
fists
pop
test
and
mov
inc
into
inc
push
bswap
das
push
pop
push
ljmp
fimuls
loopne
cmp
pop
adc
pop
lcall
out
push
or
insb
push
mov
xlat
cmp
cmp
movl
xor
adc
mov
daa
mov
lahf
sbb
mov
lret
fidivrl
sub
inc
imul
and
cmp
inc
pop
fwait
sarb
test
lods
fs
xchg
cmp
sub
xchg
es
push
daa
mov
adc
stos
lea
cmpsl
dec
repz
sti
ret
js
test
pop
andb
call
xchg
imul
or
out
sbb
jp
mov
idivb
in
nop
pop
aas
int3
mov
popa
nop
test
jb
push
xchg
fstpl
pop
xor
add
cmpsl
ja
cmp
jb
mov
sub
cmp
faddp
mov
jge
fs
xchg
mov
mov
mov
push
addr16
mov
mov
in
xchg
test
and
cwtl
loopne
xchg
fxsave
divl
adc
jl
das
push
iret
jge
lret
fmuls
cs
push
add
je
in
mov
or
dec
dec
xchg
aad
sub
xor
mov
push
es
icebp
faddl
lock
cmpsb
mov
xchg
fcmove
js
ljmp
add
ror
cli
sbb
je
push
fidivrl
je
bswap
sbb
cmp
dec
cmpsb
fsubl
adcl
mov
jl
jg
int3
push
xchg
cwtl
iret
adc
mov
add
addr16
gs
filds
test
fdivr
jg
dec
roll
ror
mov
popa
fstl
roll
pop
push
std
aam
jmp
test
call
push
rolb
or
push
aad
call
dec
xchg
push
jae
mov
mov
pop
jp
and
pusha
mov
rep
cltd
mov
mov
out
addl
enter
dec
push
mov
add
xchg
xchg
popf
push
movsb
out
cs
das
daa
stc
subb
outsb
sbb
sub
inc
sbb
adc
scas
mov
sarl
and
shll
mov
add
lahf
lahf
add
dec
xchg
movsb
outsl
ret
fldenv
jmp
insb
push
cmpsl
loopne
adc
imul
int
push
addr16
int3
inc
inc
popf
movsl
jne
in
imul
dec
inc
push
hlt
jbe
add
mov
sbb
xlat
add
push
or
adc
in
dec
jecxz
xor
dec
adc
sub
imul
cmp
sahf
cmp
js
fisubrl
sbb
sub
adc
jb
out
lock
cwtl
jecxz
insb
outsb
add
add
adc
test
push
cmpsl
mov
push
cltd
cmp
mov
mulb
iret
out
mov
dec
dec
cltd
push
icebp
inc
stc
sub
lahf
lea
in
mul
stc
xor
mov
mov
out
dec
or
ret
scas
jmp
outsb
inc
jne
sbb
xor
lret
outsb
jae
push
addl
xor
add
push
mov
mov
clc
lcall
cmp
jecxz
xor
adc
mov
imulb
and
mov
sar
mov
out
movsl
pusha
movsb
xor
out
xor
lret
roll
jmp
dec
and
cmp
aas
call
test
dec
fdivs
fiadds
mov
xlat
jecxz
imul
bound
ss
outsl
xchg
js
xor
bound
lcall
cmp
outsb
mov
out
ret
int
movsl
daa
sahf
pop
push
scas
pop
push
lock
popa
push
out
cmp
lret
cmp
ljmp
stos
fidivl
or
sub
adc
push
lret
sub
out
es
xor
ja
stc
cltd
testb
invd
ja
push
sub
push
xchg
or
fldcw
mov
rorb
mov
lcall
and
ja
icebp
or
cmp
lahf
jp
sub
add
in
adc
mov
lods
cmc
cmp
out
jae
out
sbb
mov
ret
std
aaa
or
mov
xchg
popa
cmp
sahf
xchg
jo
jo
or
std
add
sahf
dec
cmc
js
dec
cmpsb
cltd
cmp
sub
out
mov
enter
sbb
push
or
inc
stc
into
and
jns
hlt
addr16
or
ret
pusha
icebp
repnz
das
jne
notl
and
jle
imul
pop
adc
lock
fdivl
add
fwait
mov
inc
aad
outsb
lcall
cs
jo
rcll
xor
xchg
pop
mov
push
inc
out
cmc
in
pop
sbb
pop
loope,pt
pop
loope
imul
in
outsl
cmp
jbe
shll
xor
push
dec
pop
sub
ds
dec
mov
leave
dec
add
dec
xor
push
jno
out
mov
decl
and
and
cld
mov
std
shll
inc
shrb
pop
mov
sbb
js
adc
ljmp
xlat
repz
testb
and
stos
dec
inc
jae
leave
lret
xor
aaa
leave
dec
int
or
cmpb
cmc
rcr
pop
mov
out
outsb
mov
sahf
scas
aam
rcl
xchg
addr16
pushf
ljmp
dec
fadds
ficompl
mov
out
xchg
add
sahf
mov
aam
popa
xor
arpl
mov
cmp
stc
pop
fmuls
mov
sbb
fwait
pop
dec
leave
gs
lods
ljmp
stos
mov
insb
dec
aaa
jns
or
xchg
insl
test
xchg
pusha
cmp
lods
xor
adc
mov
jg
movsl
shlb
jg
mov
lods
xchg
out
push
adc
lret
fwait
cld
hlt
adc
clc
fidivs
or
pop
add
jecxz
ucomiss
xchg
movsl
ficomps
in
out
sub
mull
imul
jne
jne
jp
xor
sbb
lods
pop
xor
jmp
cwtl
arpl
rcr
jl
and
push
xchg
lds
repnz
jo
fbstp
fucom
inc
xor
mov
fcomps
or
adc
or
and
add
mov
sbb
inc
popa
in
out
enter
or
lret
aas
or
jnp
sahf
fdivr
mov
icebp
andl
inc
add
sar
xorb
push
mov
fdivrs
mov
movsl
jl
in
mov
les
mov
les
mov
das
or
fidivrl
lds
mov
fcompl
rorl
fs
es
mov
add
and
pushl
dec
aad
and
das
ds
mov
jnp
add
mov
das
sbb
adc
push
push
mov
xchg
or
add
sub
xchg
inc
mov
add
sbb
cmpsb
aad
mov
mov
daa
dec
das
inc
add
add
int
xchg
jl
xchg
mov
fisttps
add
or
mov
add
xchg
les
adc
and
pop
lock
adc
cmpsl
jmp
loope
pop
movsl
inc
adc
insl
push
xchg
imul
sub
adc
push
call
mov
add
push
dec
out
mov
cmpsl
jle
imul
inc
pusha
outsl
leave
hlt
and
adc
rcrb
xor
lahf
lret
xchg
pop
addb
fsts
push
inc
jb
ror
push
insb
sub
inc
lods
insb
push
adc
xchg
imul
and
dec
or
xorl
push
xchg
dec
jne
or
outsb
xorb
jmp
roll
aam
dec
fsubs
rol
xorb
jge
outsb
mov
lods
pushf
adc
ss
imul
dec
mov
or
aam
xchg
mov
addr16
outsl
xchg
fwait
push
add
roll
test
inc
call
dec
pop
ffree
add
push
xchg
sbb
mov
shll
mov
pop
cld
mov
insl
mov
xchg
xchg
pop
ja
out
xor
or
stc
add
and
jb
jp
mov
sub
dec
mov
movsl
cmpsl
push
btc
xchg
arpl
inc
adc
or
aaa
jle
mov
mov
xlat
mov
or
mov
in
mov
add
cmpsl
pusha
loopne
xchg
shl
das
leave
mov
into
jo
in
lock
or
xchg
push
jnp
rolb
or
sub
sbb
shl
adc
xor
mov
xchg
inc
pop
in
or
or
leave
fidivrl
inc
pusha
mov
mov
dec
pushf
clc
imul
rcl
movl
push
lods
ds
sti
and
stc
in
sbb
adc
imul
shll
fcoms
paddd
repnz
adc
clc
iret
imul
leave
and
sahf
or
cmp
aad
sbb
jnp
pop
test
or
int3
pop
lea
scas
jg
xlat
cmp
pop
aad
sti
leave
xor
imul
mov
dec
test
pop
push
pop
hlt
mov
in
sub
and
inc
or
add
jo
push
stos
out
loopne
mov
adc
sti
aad
push
pushf
jb
mov
insl
aaa
dec
ret
xchg
and
aas
mov
push
cmp
xor
lcall
cmp
mov
sub
dec
in
mov
mov
loopne
cs
ret
mov
add
std
adc
mov
pop
out
jge
jae
sbbl
sub
sub
fstps
loop
sub
bound
sbb
js
leave
add
or
addr16
stos
aas
jmp
ds
int3
dec
xchg
lret
out
xchg
push
xchg
imul
popa
xchg
lods
popl
mov
dec
in
or
mov
gs
push
push
popa
cmp
subl
pop
daa
iret
jge
enter
xchg
sar
in
imul
pop
idivl
add
mov
fbld
insl
mov
sti
jmp
and
mov
jle
movsl
in
pop
gs
mov
ds
adc
std
out
das
sub
mov
mov
movsb
lods
pusha
fcompl
data16
mov
aaa
lret
adc
dec
sub
and
mov
or
in
loop
in
pop
jns
push
sbb
adc
repz
cmp
xchg
sbb
sub
js
cmp
xor
cmp
clc
cmp
jae
std
push
sub
adc
add
loope
loop
inc
out
or
test
inc
rorb
xchg
or
jle
pop
add
and
cmp
mov
push
xchg
and
in
jne
push
mov
in
jnp
jmp
ljmp
shrb
pop
jnp
and
dec
push
dec
daa
cmp
leave
mov
outsl
xor
nop
and
movsl
inc
sbb
push
std
out
push
test
lods
ret
div
int
xor
cli
sub
mov
loopne
xchg
add
push
xor
pop
sub
sub
jo
sub
aaa
cltd
or
jg
adc
sbb
mov
fwait
cltd
xchg
push
pop
push
dec
in
jnp
sbb
sub
sub
sub
ficoml
mov
xor
xchg
lcall
pushf
and
fadds
inc
ss
jmp
mov
outsb
lea
jmp
mov
mov
pop
dec
mov
fs
aam
adc
cli
pop
jns
sub
and
push
cmp
lret
lods
mull
lret
xlat
dec
jle
mov
sbb
aas
out
jle
movsb
sbb
data16
xchg
leave
add
jo
xchg
mov
in
fcoml
mov
lret
dec
push
in
push
movsl
adc
out
xchg
push
xor
aaa
xchg
andb
xor
lahf
mov
in
hlt
mov
push
stos
mov
push
popf
lcall
movsl
add
ss
aad
nop
fnstsw
dec
imul
push
cmpsl
adc
les
cmp
pop
mov
cmpsb
loop
adcl
in
lods
push
stos
or
int3
stos
jns
xchg
int3
xchg
ja
mov
je
in
sbb
cmpl
je
cmp
pop
cmpl
inc
sub
adc
insb
lock
shlb
adc
inc
cmp
fcmovne
ljmp
cmp
insl
sahf
fs
mov
add
frstor
xlat
andb
lcall
std
xchg
shll
sbb
mov
out
std
mov
in
adc
pushf
imul
aaa
scas
jle
negb
sahf
and
lock
lock
insb
loope
pop
pop
push
das
mov
xor
repnz
hlt
mov
rcl
sbb
jns
test
add
xor
popf
sub
fildl
lret
test
in
adc
das
mov
in
sti
out
push
shl
jno
shlb
mov
arpl
sbbb
loop
jns
mov
popf
adc
out
gs
adc
in
pop
xchg
in
sbb
jne
adc
jbe
les
and
and
test
pop
add
mov
or
mov
mov
or
inc
ficoms
aad
js
pusha
test
mov
mov
jno
mov
mov
inc
add
adcl
pop
notl
add
icebp
pusha
or
mov
imul
les
cmpsl
cmp
aaa
mov
dec
cmp
fisttpl
out
and
and
pop
add
rclb
cmp
call
cmpsb
sbb
in
add
stc
mov
jge
stos
fidivrl
and
insl
stos
mov
push
push
push
imul
aad
call
call
into
stos
push
adc
das
sbb
xlat
xchg
idivb
cmp
testb
pusha
test
lahf
xor
out
shll
iret
inc
cmpb
shll
mov
das
xchg
fstpl
mov
push
or
or
dec
adc
sub
mov
js
and
jno
xor
mov
mov
or
lods
jle
and
push
sbb
dec
and
inc
push
xor
ja
jle
idivl
cmpsl
push
mov
inc
jno
movl
enter
push
jno
mov
inc
stos
nop
mov
adc
mov
push
loope
sub
jl
and
aam
add
xchg
negb
rcll
pop
js
stos
pop
adc
loopne
insb
mov
cwtl
mul
data16
cmp
loope
inc
jne
hlt
icebp
mov
and
shr
xor
dec
mov
cmp
stos
fadds
bound
fsubrl
push
repnz
call
repz
or
mov
into
mov
leave
dec
jmp
shrb
outsb
popw
cld
ljmp
cmovo
fwait
dec
mov
add
out
mov
add
or
inc
xchg
xchg
sbb
jns
lods
xchg
in
pop
inc
fs
sub
filds
and
xor
inc
dec
inc
sbb
and
fs
mov
fisubl
outsl
fs
sti
xchg
test
call
cmpsl
in
add
jne
pop
mov
add
adc
outsl
mov
dec
mov
mov
shll
fnstsw
popa
push
sub
movsl
xlat
mov
jg
add
and
pusha
and
fiaddl
dec
aad
or
inc
or
ret
and
lds
lods
fsub
movsb
adc
lret
aad
and
mov
and
incb
dec
jns
repz
fcompl
sbb
jne
sub
dec
aad
xchg
leavew
jl
mov
ret
fcom
mov
cmp
push
ret
dec
rcrl
dec
es
cmp
jbe
leave
pop
push
ss
jmp
jecxz
mov
jle
sbb
ret
push
mov
shll
jbe
xchg
xor
fucomp
orl
mov
mov
or
and
lret
xchg
or
gs
and
jnp
mov
cmp
jge
les
sub
iret
jle
scas
dec
cmp
push
or
push
pop
scas
ljmp
notl
mov
aas
mov
inc
sub
mov
adc
push
add
leave
fnstcw
jge
not
push
sbb
push
push
lock
cmc
jne
bound
mov
stos
cld
push
sbb
scas
lret
push
lcall
jg
inc
cmp
bound
sarb
mov
xchg
adc
inc
out
je
imul
pop
push
jge
push
test
loopne
add
jno
jge
xchg
fnstenv
inc
cltd
sub
out
xor
jg
xor
arpl
rol
aam
push
js
scas
cltd
jae
jmp
aaa
push
rcll
xchg
orb
xor
adc
into
ss
mov
divb
xchg
add
push
sub
lock
inc
arpl
clc
pop
push
outsb
fs
add
adc
aaa
add
push
scas
addr16
scas
xor
push
pusha
push
mov
inc
add
in
pop
jnp
hlt
stos
xchg
leave
pop
pushf
jge
out
add
inc
push
add
adc
and
xor
sub
or
cs
test
call
hlt
push
xlat
std
pop
and
jmp
outsl
mov
lcall
adc
and
icebp
sub
pop
inc
xchg
lahf
pop
aas
dec
mov
popa
xor
mov
lods
adc
iret
sub
add
mov
inc
outsb
popf
pop
xchg
mov
sub
test
int
pop
stos
jo
lds
repz
int
mov
sub
loop
ljmp
sar
cli
sbb
push
cmpsb
and
in
mull
sbb
inc
movsl
xor
push
adc
imul
movsl
jp
cld
lcall
inc
es
adc
mov
lcall
cli
sbb
insb
scas
cmp
pop
jge
inc
mov
xor
jmp
lock
inc
pop
sub
enter
dec
inc
sbb
lds
mov
jmp
add
mov
pop
cmp
icebp
lahf
sub
int
call
out
sbb
dec
pushf
fldl
mov
add
gs
ja
jb
mov
mov
dec
test
xor
dec
rcrl
out
fcmovnu
out
fwait
jbe
js
pusha
jne
stos
fidivrl
nop
insb
stos
inc
cmp
mov
lods
ja
and
sub
jle
lret
jae
xchg
pop
vmovupd
negl
das
addr16
inc
int3
jnp
je
sarb
cli
pop
pop
mov
xchg
int3
ss
add
rclb
mov
je
sub
fucom
loop
mov
add
mov
dec
sbb
fsubl
inc
in
xchg
and
call
lods
mov
add
cmpb
or
xor
or
xlat
push
adc
push
pushf
sar
cmp
mov
cmp
dec
push
push
hlt
hlt
pop
add
push
mov
inc
je
ljmp
jbe
inc
es
fsub
jo
sbb
add
sbb
mull
and
loope
mov
pop
out
jbe
jecxz
mov
mov
and
add
fdivrs
push
add
movl
mov
pop
mov
or
dec
jmp
xlat
mov
stos
sub
cli
jns
cli
and
pop
dec
pop
push
push
push
sbb
fwait
cmp
cmova
inc
add
mov
addr16
pop
ror
cs
dec
dec
out
test
jbe
sbb
cmp
xchg
inc
jg
mov
mov
ret
push
cwtl
in
adc
adc
mov
mov
cmp
pusha
mov
add
cs
je
hlt
mov
or
js
stos
push
push
cmpb
xor
xorb
stos
test
lea
pop
cmpb
jns
jno
pop
roll
sahf
hlt
in
push
enter
mov
or
cld
ds
sub
pop
inc
and
sub
sbb
icebp
mov
into
ret
or
push
sbb
pop
jbe
lds
cli
sub
popa
ds
fs
mov
jne
mov
xor
dec
jne
data16
mov
sub
in
arpl
ja
xchg
rolb
fs
arpl
adc
aaa
mov
mov
lock
mov
inc
pushf
mov
jb
jmp
jg
jle
adc
dec
push
dec
or
sbb
push
int
andl
jg
inc
and
mov
out
fistpl
aaa
push
xchg
adc
push
js
sbb
es
adc
bound
and
push
mov
dec
add
sbb
testl
sub
xchg
lahf
push
sub
sbb
inc
gs
push
mov
shll
xorb
popf
sbb
scas
outsb
jns
outsl
adc
or
dec
mov
add
stos
mov
mov
add
in
jl
icebp
mov
mov
and
scas
icebp
cmp
aas
jbe
rclb
sahf
pop
jg
ja
stc
jmp
ja
dec
fnstcw
inc
fcmovnbe
fnop
cmc
stos
inc
sbb
test
xor
sbb
jl
mov
pop
lock
dec
sub
in
or
out
xorb
call
adc
lret
mov
shrl
negb
add
int3
icebp
adc
imul
movsb
imul
lahf
loope
mov
cmp
mov
call
pop
adc
testl
addr16
and
dec
dec
ret
and
mov
jae
or
std
in
or
jne
xchg
aad
aad
insb
inc
mov
idivl
lock
popf
push
dec
shrb
int
or
pop
faddp
dec
lods
popa
mov
sub
mov
decl
xchg
or
push
js
jp
sbb
mov
lea
fstpt
push
pop
xor
sub
aad
insb
ljmp
bnd
sub
jmp
pop
out
mov
dec
lds
xor
stc
jae
mov
add
and
dec
push
fisubrl
dec
mov
cld
cmp
jle
scas
dec
mov
punpcklwd
xor
ret
mov
out
in
xchg
xor
pop
insb
mov
sahf
pusha
adc
adc
push
incb
xchg
pop
addb
dec
data16
cmp
pop
and
inc
cmpsl
pop
add
lcall
rcl
aam
cli
push
adc
daa
filds
test
mov
jnp
and
push
es
jnp
mov
push
clc
enter
movsl
adc
ret
ljmp
mov
in
mov
mov
in
or
loope
or
jb
add
dec
sbb
push
cld
enter
mov
pop
cmpsb
adc
xlat
lea
outsb
out
popf
push
mov
sub
lods
xlat
and
jmp
cmc
cli
and
ret
roll
adc
pop
lret
popaw
sub
mov
stc
lret
dec
scas
add
les
push
jb
nop
sub
push
subl
jnp
out
lds
pusha
ficoms
out
jmp
adc
mov
in
outsl
xchg
push
jns
cmpsl
push
dec
dec
jbe
push
shll
mov
and
push
dec
in
aad
call
sub
data16
lea
sbb
clc
stos
xor
loopne
lods
add
sub
jmp
adc
mov
adc
or
pop
pusha
push
mov
cs
pusha
mov
lret
xchg
jbe
cmp
jg
dec
test
cmp
adc
and
sbb
fsubr
jae
pop
cs
mov
shrb
xchg
in
mov
xor
jmp
rorl
cmp
xchg
inc
mov
dec
fidivl
sti
adc
outsb
or
push
sti
movsl
lock
mov
and
lods
and
mov
faddp
negb
enter
mov
cmp
pop
jge
mov
aas
fwait
test
fdivr
out
mov
scas
cmp
stos
cmpb
std
pop
push
or
lret
cmpsb
int3
pop
andl
fcmovnb
out
sbb
lock
out
aad
subl
cmpsb
jecxz
and
xchg
and
repz
xchg
aas
loop
push
inc
pop
ja
sbb
add
insb
sub
pop
sar
inc
mov
dec
mul
mov
in
lret
aad
pop
dec
jg
pop
loope
push
mov
xorb
not
sbb
cwtl
jb
dec
sahf
mov
cmp
push
jge
aad
dec
inc
add
movsl
dec
js
dec
mov
lahf
fcmovb
sub
inc
xor
pop
mov
inc
hlt
adc
das
mov
icebp
repz
add
mov
mov
pop
jns
xor
imul
fisubl
ja
test
lods
jp
mov
cmpsl
xchg
cmp
sbb
xchg
add
icebp
mov
pop
add
in
call
cmp
mov
cmp
cmpsl
mov
insl
mov
mov
mov
mov
imul
pusha
lea
cmp
pop
icebp
jbe
adc
fdivrl
loope
mov
add
xchg
jne
ja
sub
js
sbb
call
dec
popl
pushl
fcoms
pop
jg
or
dec
int
xchg
hlt
fcmovnb
sub
arpl
and
jne,pt
rsm
icebp
jmp
lcall
xor
xor
loopne
mov
pop
lods
mov
inc
pop
push
movb
sbb
jnp
pop
cmp
daa
ja
ret
pop
into
cld
jl
stos
mov
lahf
inc
push
imul
mov
push
xor
loop
mov
test
daa
mov
jns
jmp
pop
inc
jecxz
fnstsw
inc
pushl
mov
movsl
shl
loope
inc
fists
mov
cltd
movsb
push
inc
pop
or
clc
ret
adc
bound
lds
push
and
cmpl
out
out
mov
or
rep
jp
pop
popf
addr16
dec
xchg
jb
pop
mov
stos
mov
pop
pop
dec
sub
adc
mov
inc
std
fwait
inc
cltd
xchg
pop
arpl
outsb
cmp
stos
mov
popa
and
icebp
das
and
mov
mull
add
mov
pushf
orb
leave
divb
add
xchg
movsb
xchg
jle
adc
lea
das
sbb
stos
ret
lock
fldt
ds
sub
cmpsb
xchg
addps
sub
jle
dec
mov
jg
inc
sub
out
rclb
push
ret
jle
cmp
or
outsb
iret
mov
js
add
stos
sbb
stos
push
adc
in
xor
sub
cmp
xchg
mov
cmp
mov
jg
cld
or
add
ja
mov
in
dec
pusha
mov
out
cmp
fsub
outsl
js
xchg
aam
and
inc
cld
sub
icebp
cmp
xchg
stos
jns
pop
dec
lea
hlt
clc
movsb
dec
xchg
xor
lods
movsb
mov
and
and
pop
out
fdivl
sub
insb
imul
bound
fists
ljmp
xchg
pusha
push
dec
and
mov
bsr
and
mov
and
mov
mov
loop
clc
xchg
dec
test
jo
cmpsl
out
les
cmp
mov
fwait
out
fiaddl
jbe
or
test
jle
loope
subb
in
xchg
iret
adc
cmpsl
and
mov
mov
mulb
add
xor
cmp
inc
out
cli
mov
mov
lahf
pop
sbb
push
jae
sub
adc
dec
and
sub
fimull
mov
cmpsb
mov
push
mov
popa
mov
fcmovu
jnp
mov
push
testb
sti
inc
push
test
cmc
sub
pop
sti
pusha
pop
sub
jns
mov
inc
das
sar
mov
ja
sub
mov
push
xchg
iret
in
jns
inc
push
out
sarl
jae
cld
scas
sbb
inc
movsl
cs
push
ss
fimuls
jecxz
xor
mov
fs
or
ja
adcb
dec
lcall
lcall
flds
sub
popa
adcb
out
lret
sub
loope
pop
or
or
dec
fisubl
cli
push
mov
xor
add
stos
push
fs
jmp
repnz
push
mov
cwtl
push
sbb
cld
pop
inc
mov
aam
leave
push
sbb
xchg
mov
dec
push
ret
push
scas
fimull
push
adc
push
fisttpll
test
or
call
xor
arpl
arpl
lds
imul
rorb
insl
jmp
xor
fidivs
jl
imul
ret
stc
rol
movsl
add
mov
insb
in
xchg
lods
dec
lods
dec
movsb
aam
pop
or
fdivrl
iret
inc
sub
shll
outsl
xor
outsl
inc
and
cmpsl
push
lret
ret
xor
pop
xor
fwait
stc
adc
into
push
lds
fcomps
mov
dec
clc
jb
or
dec
clc
cmpsl
sub
fsubr
ja
loope
xor
addr16
jbe
mov
xor
inc
cltd
pushf
add
ljmp
out
pop
rcll
mov
loopne
inc
push
mov
mov
mov
sub
mov
lock
mov
in
mov
xchg
xor
push
loopne
int3
inc
clc
pop
sbb
push
cmp
fistps
cli
cltd
lcall
inc
cmp
dec
inc
xor
insb
es
cltd
in
into
pop
loopne
push
jne
movsl
mov
in
and
in
xlat
out
in
js
ret
pop
adc
inc
lods
jle
call
push
mov
pushf
int3
inc
jb
in
add
xchg
xlat
or
fwait
pop
or
jmp
out
xor
loopne
xorl
sub
lock
jo
paddd
pop
sahf
ds
and
push
adc
mov
sub
sub
insl
push
or
outsb
mov
sarl
add
and
jmp
cld
pop
test
test
mov
jl
pop
push
dec
sub
mov
jge
inc
mov
hlt
nopl
mov
mov
shlb
jge
test
pop
jo
sbb
testl
in
inc
sub
lds
and
out
cmpsb
jns
mov
xor
xchg
mov
or
pop
cmp
sbb
ljmp
cmp
mov
hlt
sub
xchg
mov
scas
loop
push
mov
out
cmp
test
fdivrs
xor
test
in
fs
jg
loopne
ret
dec
les
or
std
test
fnstenv
scas
outsb
int3
pop
xor
adc
mov
push
sbb
shlb
push
test
pusha
sbb
mov
aaa
insb
fstpl
mov
ds
cld
out
or
aad
imul
jbe
mov
lock
pushf
mov
and
xor
out
push
add
mov
rcr
call
cmpsb
mov
adc
push
push
adc
and
incl
loopne
cwtl
mov
pop
jl
cmpsb
lds
hlt
popa
add
sub
mov
and
movsl
flds
and
out
mov
inc
daa
push
pop
aam
hlt
gs
or
or
lods
or
lret
jns
sbb
lods
adc
push
stos
jns
cmpsl
jns
add
cmp
loop
inc
enter
cs
incl
mov
adc
call
rcrl
lahf
pop
imul
repnz
pop
test
mov
insl
and
mulb
aas
jbe
dec
pop
pusha
pusha
das
jp
popf
push
gs
mov
dec
dec
int3
jb
popf
mov
cltd
dec
dec
cmpsl
mov
loopne
mov
jno
push
sbb
call
das
lds
rol
daa
test
lods
dec
sti
mov
clc
sbb
jae
inc
incb
jne
mov
call
sbb
out
add
scas
xor
cmpsl
in
add
fs
movsb
jg
push
ret
inc
adc
xchg
and
pop
xchg
jmp
cs
bound
sub
xchg
fwait
xor
cmp
gs
jb
lock
leave
lea
in
adc
fs
adc
je
imul
js
mov
les
mov
ret
xchg
cs
or
subl
repz
lock
sbb
or
jg
es
cmp
add
mov
es
xor
mov
jg
xchg
xlat
inc
sbb
lods
cmp
xchg
cmpsl
icebp
fmuls
ljmp
sub
fimuls
insb
or
mov
mov
push
push
je
cmpsl
dec
pop
out
jl
les
add
aaa
xchg
adc
daa
add
lret
setnp
mov
sti
adc
dec
outsl
jle
cld
pop
mov
xchg
adc
aad
add
push
mov
xor
inc
mov
mov
push
rcr
lret
setns
rolb
xlat
inc
mov
xchg
mov
movsb
sub
cwtl
dec
cltd
sub
sub
out
scas
pop
lods
or
mov
add
push
mov
out
mov
cmpsb
push
lock
and
lret
xchg
push
lods
int3
push
jo
sbb
mov
dec
adc
or
movsb
adc
push
inc
pop
xor
into
jl
and
jmp
ret
inc
icebp
aas
mov
or
stos
je
lods
ja
xchg
xchg
jne
jae
mov
push
pop
cmp
push
or
cli
add
ret
fcomps
loopne
cmc
and
adc
mov
mov
pop
out
lods
cld
daa
mov
push
xchg
xor
fsubrs
out
aad
mov
xor
rcl
scas
fcoms
mov
pusha
js
jbe
cli
dec
into
out
inc
add
adc
sub
lcall
mov
jne
mov
pushf
push
xchg
sub
arpl
xchg
lret
jge
mov
and
xchg
aam
pop
xchg
xlat
mov
or
xchg
pop
jnp
test
in
les
sub
fdivr
pop
stc
jae
je
dec
or
add
mov
ret
mov
push
lcall
mov
pop
stc
mov
jg
inc
or
mov
mov
add
mov
pop
cmp
cmp
pop
arpl
cmp
pop
push
adc
dec
ss
nop
in
xchg
pop
jl
shrl
adc
and
mov
addr16
rolb
add
adc
sbb
int
mov
iret
push
data16
xor
in
lret
mov
fsts
mov
mov
adc
xchg
in
mull
mov
mov
adc
stos
or
pop
bound
jno
rolb
leave
push
inc
mov
out
daa
push
loop
repnz
popa
es
daa
cmpsl
lock
dec
lods
hlt
fists
cmp
dec
aad
movups
popa
jno
or
cmp
lock
es
cmp
jo
imul
leave
test
pop
cs
jmp
xchg
push
lea
sbb
dec
mov
mov
pop
inc
es
xor
int
flds
xor
xchg
filds
or
dec
ss
add
dec
inc
push
xor
es
call
mov
or
imul
test
xor
out
outsl
pop
jecxz
lret
sbb
pop
mov
daa
clc
or
xor
push
roll
xchg
stos
in
push
inc
mov
push
pop
fdecstp
add
cmpb
adc
xchg
sub
out
in
and
xor
mov
or
push
push
repz
add
cld
lods
fcomi
enter
out
or
ljmp
lods
push
mov
adc
mov
pop
push
out
gs
or
dec
subl
pop
mov
mov
mov
push
in
pusha
loop
clc
cli
cmp
pushf
push
cltd
scas
lcall
dec
sub
mov
dec
in
and
out
jo
ljmp
mov
test
movsl
sbb
loopne
pop
fisubl
push
popa
aad
cmc
xor
outsb
pop
pop
adc
push
les
testl
lret
push
movb
xorl
dec
mov
popf
aas
jg
ficoml
test
dec
pop
mov
fisttpl
sbb
pop
cli
fucomp
leave
push
push
iret
or
es
outsb
in
in
jne
mov
in
div
jb
popa
shll
push
das
push
mov
inc
fsubr
push
jne
pop
dec
sar
sahf
xchg
pop
jge
movsl
inc
outsb
sbb
rcl
shlb
xor
test
jne
cs
dec
outsb
cmp
jae
data16
inc
inc
mov
or
xchg
add
aaa
stos
popf
mov
push
mov
out
sbb
scas
in
xorl
push
xchg
bound
adc
add
push
mov
mov
push
mov
lret
iret
sahf
sub
mov
in
add
into
ret
cmp
cmp
xchg
and
and
clc
push
cwtl
push
addr16
ds
outsb
daa
fisttpll
lret
cmp
out
mov
shlb
outsb
dec
add
fcmovbe
xchg
cmpsb
push
mov
dec
cmpxchg
sub
xchg
mov
dec
mov
adc
xchg
js
jo
adc
in
inc
fldt
xor
and
mov
mov
or
xchg
xor
cmc
adc
mov
call
pop
mov
aas
pop
sbb
mov
repnz
movsl
in
mov
add
inc
mov
mov
add
movsbl
rorl
inc
or
sub
es
ud2
les
sbb
push
xor
insl
jo
mov
fwait
pop
into
mov
loopne
movzwl
and
mov
mov
fstpl
jl
les
outsb
mov
loopew
jb
and
jnp
gs
xchg
insl
lea
xlat
aaa
inc
loop
ja
adc
pop
inc
fisubrl
fwait
jp
pop
andb
mov
testb
in
inc
mov
pop
cli
mov
sbb
fisubrl
jle
fstpt
sub
gs
lret
cld
sbb
cmpsl
mov
repnz
mov
push
fwait
adc
mov
jo
inc
xchg
repnz
lds
shl
inc
jne
or
lock
mov
stos
dec
inc
inc
mov
xchg
push
dec
pop
dec
aad
xchg
mov
loopne
xor
jg
es
sbb
out
xor
jbe
repnz
or
into
into
icebp
xadd
and
jo
arpl
shl
mov
js
cltd
inc
andb
fists
test
popa
cmpsl
or
leave
jns
jmp
or
pop
cmp
and
and
mov
sahf
imul
mov
mov
push
add
ljmp
fbstp
out
xor
adc
outsb
pop
int
pusha
iret
test
dec
ljmp
mov
mov
jg
jbe
push
cmp
add
jns
loope
leave
pop
xchg
pop
xchg
aaa
iret
or
inc
adc
push
jle
adc
adc
data16
dec
scas
mov
xchg
loope
imul
mov
mov
in
mov
rep
pop
push
add
mov
sbb
test
loopne
xchg
xchg
stc
xor
inc
jns
and
xchg
jns
push
in
push
jo
aas
rclb
mov
inc
iret
and
mov
aad
or
dec
xchg
mov
into
or
push
pop
pop
shlb
add
inc
data16
xchg
lods
inc
rorl
bound
je
add
jae
and
rorb
mov
movsb
idivb
adc
push
jb
xlat
sub
xchg
outsb
in
mov
fsubp
pop
stos
push
pop
mov
cwtl
xorl
lea
int3
mov
scas
fdiv
add
inc
mov
loop
ds
mov
adc
and
pusha
mov
xchg
dec
adc
lds
sarb
je
adc
jbe
jl
sbb
and
inc
xor
cmp
aas
pop
stos
jle
mov
xchg
sub
push
cmp
inc
lods
jecxz
inc
jl
mov
jnp
xor
rorl
cs
mov
mov
lahf
sbb
sbb
cmp
loopne
push
mov
push
jg
loopne
popf
outsb
stos
or
dec
testl
mov
jne
pop
and
in
mov
in
fsubr
and
pushf
fcmovne
cmp
lret
cwtl
ret
sub
in
sbb
lahf
push
mov
jb
fs
inc
shll
sahf
imul
and
mov
movsl
fwait
pop
dec
sahf
aaa
lret
cmpsb
adc
popf
sbb
dec
xor
pop
orl
outsb
xchg
and
clc
mov
adc
das
push
add
dec
push
mov
loope
push
out
pusha
lret
das
in
dec
lea
and
into
aam
or
mov
sbb
rcrl
ficompl
push
and
add
sub
xchg
lret
sub
cs
std
or
imul
cltd
cmp
xchg
leave
ss
fbstp
xchg
scas
mov
out
dec
cmp
jno
pop
es
and
movsl
jb
jbe
and
lahf
mov
lods
mov
pusha
xor
sbb
in
xchg
repnz
inc
sbb
sub
mov
mov
pop
mov
cmp
es
or
sti
sub
rol
sbb
fimull
jno
mov
jecxz
out
cmp
jecxz
fs
pop
mov
outsl
jmp
cmpl
stos
cmp
iret
mov
sahf
jmp
idiv
filds
sbb
jl
mov
push
push
and
stos
fistpll
adc
mov
mov
icebp
xchg
and
add
in
movsl
mov
loop
push
ret
pop
lds
mov
pop
mov
cmp
jne
lret
sbb
in
xchg
xor
outsb
dec
xor
mov
add
push
sbb
inc
int3
or
xor
or
pop
adcb
pop
mov
push
dec
dec
mov
and
push
ljmp
dec
mov
ret
mov
xchg
imul
outsl
cmp
inc
jecxz
fdivrs
fs
ret
gs
inc
jge
insl
std
jae
cmp
pop
jnp
ja
mov
in
cmp
loop
popa
xchg
or
pop
xor
push
addl
mov
icebp
es
sbb
insl
sub
jne
jecxz
mov
and
inc
inc
push
jne
push
and
push
outsl
cli
add
call
and
xchg
jg
shl
imul
sbbb
pop
leave
into
andb
sahf
sub
outsl
dec
fidivrl
jbe
and
push
jno
outsl
aam
push
shll
ficomps
sbb
sbb
push
inc
jp
mov
sbb
add
inc
cmc
cltd
adc
orl
pop
push
shld
aam
arpl
mov
add
ja
add
popf
mov
and
jne
popa
xor
dec
jno
and
fyl2xp1
xor
and
stos
js
les
lea
pop
dec
fsubrp
jmp
stos
lcall
pop
cmp
or
movsb
jnp
mov
rorl
std
pusha
outsb
inc
mov
fwait
cltd
push
lret
sahf
and
and
add
rorl
mov
fs
subb
loopne
popl
mov
fmull
dec
cmp
jbe
out
in
and
pop
jo
sub
and
sub
and
xchg
add
xchg
inc
shl
pop
xor
clc
jo
in
cmpl
mov
push
pop
cmp
mov
mov
jnp
mov
pop
lds
xchg
pop
cmp
ret
enter
dec
icebp
jmp
jb
mov
xchg
push
int3
sti
sbb
out
pop
into
pop
stos
push
mov
fmulp
jg
fstpt
inc
iret
push
and
ret
movsb
and
xchg
dec
shl
imull
outsl
adc
xor
sub
add
inc
jg
pop
int
sbb
xor
jb
js
mov
loopne
push
in
xchg
lods
leave
sarl
test
mov
js
into
lds
ja
popa
xchg
cwtl
mov
adc
sbb
cmp
mov
sbb
call
test
sbb
sbb
mov
int
mov
sti
ss
pop
cmp
pop
cmp
fisttps
add
pushf
jo
sub
dec
mov
push
int3
inc
addl
cwtl
xlat
or
test
dec
jl
stos
mov
pop
add
iret
jg
fimull
cmp
add
pop
sub
leave
sbb
insb
inc
pop
xchg
push
lret
insb
int
ffree
cmp
hlt
cmc
jb
movsl
sub
icebp
xchg
loope
outsb
push
test
adc
bound
or
test
mov
inc
jg
pavgb
inc
enter
and
jge
add
xchg
repnz
dec
cmc
pop
inc
aas
test
sbb
aad
arpl
inc
or
fcmovb
js
mov
pop
fwait
jmp
in
jae
xchg
sbb
lods
jle
add
mov
cltd
int
into
insb
xchg
lcall
ror
mov
arpl
jp
icebp
movsb
stos
dec
out
leave
outsb
pop
out
adc
loope
scas
scas
stc
std
push
lds
cmp
shrb
inc
xor
mov
jecxz
mov
cmp
push
cmpsb
mov
ljmp
push
clc
fcomps
enter
dec
out
js
inc
mov
adc
in
imul
mov
jle
pushf
fisubrs
popf
sub
push
push
addb
popa
test
push
lea
push
movsb
sub
shl
mov
flds
mov
lods
test
add
sarb
xchg
adc
test
test
jl
mov
xor
mov
test
mov
lods
push
mov
loope
stos
out
jle
lret
jecxz
fistpl
and
ret
sub
and
push
popf
fistps
icebp
imul
push
out
dec
test
ret
inc
mov
and
mov
jle
push
scas
aaa
mov
test
jo
push
mov
fs
jp
inc
inc
or
shrb
xchg
pcmpgtd
out
ret
das
mov
in
addr16
shlb
out
movsb
add
adc
lods
and
in
adc
int
shll
iret
pop
mov
mov
jl
add
jno
inc
cltd
lods
sahf
push
ss
test
push
inc
sahf
push
jb
sahf
jl
shlb
push
bound
mov
pop
ret
scas
addr16
inc
jge
jb
mov
pop
add
sbb
cmp
sub
pop
loope
loopne
push
fstps
inc
ljmp
test
arpl
jge
xor
push
xchg
add
mov
jmp
movsb
outsb
int3
insb
or
int
dec
in
ja
adc
dec
negb
add
mov
xor
mov
cmp
push
arpl
ret
jae
outsb
jbe
out
icebp
jne
mov
jle
xor
sub
and
and
mov
mov
stos
es
inc
and
jbe
call
ret
sub
lock
rcrl
pop
adc
dec
pop
adc
pop
imul
mov
mov
add
aad
jo
inc
loopne
stos
mov
mov
insl
push
adc
dec
fstpt
les
jae
adc
sbb
out
pop
xchg
pop
pop
into
leave
cli
imul
cmp
fldcw
cmpsb
xchg
decb
ljmp
lret
sub
cmc
fiaddl
mov
cmpsl
out
pop
stos
sub
xchg
lahf
xor
lock
lcall
xchg
outsb
inc
jno
pop
loope
ret
ror
movsl
or
mov
or
repnz
out
loop
or
dec
sub
cmc
pushf
insb
lret
pop
jmp
leave
pop
lcall
pop
pop
test
enter
aad
int
sub
pop
mov
das
cli
sbb
cwtl
test
push
call
push
pop
mov
lret
jo
or
xchg
dec
jb
orb
cmpsl
sbb
dec
popf
mov
js
add
sbb
in
pop
or
cmp
mov
mov
adc
jbe
fstpl
cmc
cmc
mov
ss
or
xor
movsb
lret
push
lock
jmp
jmp
xor
lea
iret
add
and
mov
sub
sub
mov
std
imul
dec
sbb
cmc
pusha
imul
ds
adc
test
xor
cmc
jnp
inc
sub
push
loopne
jnp
pop
and
pop
xor
mov
pop
insb
inc
cmpsl
pop
jg
scas
imul
sbbb
repz
mov
sub
lret
and
mov
stc
leave
mov
jne
xor
pop
rcl
icebp
jl
mov
sub
cmp
es
jp
outsb
or
enter
mov
pop
cmp
add
out
push
popa
mov
push
inc
outsb
add
pop
mov
loopne
push
out
fbstp
test
cltd
xchg
rcll
push
repnz
mov
inc
idivb
jno
push
rolb
inc
jb
jmp
mov
pop
or
mov
fsubl
fisubs
repnz
je
or
xchg
jecxz
xchg
hlt
mov
lods
decl
jecxz
mov
or
sbb
mov
stos
leave
sbb
mov
aas
int
popf
lcall
cmpsb
mov
stos
je
out
icebp
loop
aas
jle
es
aam
or
and
sub
lcall
mov
fsubrp
mov
mov
sbb
sub
adc
loopne
xor
lea
loop
jecxz
mov
sub
sbb
fstpl
pop
decl
cmp
mov
xchg
or
dec
jecxz
bound
or
adc
js
repnz
jge
jp
and
rolb
imul
mov
dec
adc
pusha
inc
mov
pop
mov
and
mov
jns
movsb
ljmp
lods
gs
push
cs
jo
pushf
pop
sti
iret
push
rolb
ljmp
adc
pop
mov
pop
sbb
pop
mov
cmp
ds
xor
cmp
xlat
jecxz
cmp
leave
test
cld
and
hlt
test
in
outsl
call
pop
ret
test
mov
cmpsl
imul
clc
push
aaa
cltd
mov
fimull
aam
lret
mov
xchg
imul
std
lods
mov
repz
inc
mov
mov
mov
jno
aam
movsb
jns
pop
in
aam
push
add
xor
lea
dec
jg
or
out
shl
jl
pop
loopne
cmc
adcb
and
sub
xchg
or
jo
mov
jg
dec
sub
xor
out
pop
pushf
repnz
pop
push
fwait
mov
fwait
jl
loope
out
mov
xor
fistpl
add
xchg
lea
lods
sub
mov
ret
pop
gs
jge
xorb
lock
ljmp
jae
add
push
jle
lret
dec
lret
or
add
sub
mov
adc
cmp
mov
pushf
xorl
es
outsb
and
mov
aas
shrb
je
xor
xor
fsubrs
jle
dec
scas
xor
or
jge
add
outsl
rcll
int
or
dec
fnstcw
into
xor
cmp
out
ret
out
and
les
mov
test
ss
decl
push
lret
dec
pop
loope
pop
add
jne
or
movsl
or
lds
push
ljmp
pop
cs
xchg
xor
cmp
outsb
cli
cmpsl
jge
jne
adc
cmp
lret
xor
xor
testb
and
mov
std
jp
pop
add
js
dec
xchg
pop
mov
jecxz
int3
lret
add
inc
insl
icebp
jmp
cmp
pop
sbb
mov
popf
mulb
cmp
adc
dec
aas
test
hlt
add
mov
pushw
cwtl
sub
add
add
push
push
pop
andl
mov
mov
inc
daa
lret
adc
call
rolb
pop
jl
mov
jmp
push
arpl
lahf
fists
add
pop
cmpsb
jecxz
xor
pop
inc
push
push
fs
pushf
mov
test
xchg
add
pop
pop
mov
lods
imul
mov
lea
loope
dec
or
sbb
or
negl
sahf
mov
sub
pop
loop
pop
mov
ds
or
mov
test
mov
pop
mov
sbb
iret
gs
movsb
xchg
xchg
xchg
push
lods
aaa
faddp
cmpl
inc
sbb
pop
aaa
rcrb
dec
dec
push
push
jecxz
jmp
cmp
fisubrs
fbstp
xchg
dec
cmc
mov
les
pushf
cmp
bt
ds
hlt
incb
lahf
sub
dec
mov
movsl
jl
lods
nop
mov
movsb
icebp
out
push
inc
test
and
push
jne
lods
push
push
lds
addr16
dec
or
cmp
sub
fs
cmpsl
add
rorb
sbb
std
test
or
adc
aaa
jo
daa
cli
das
mov
iret
sbb
pop
jb
jno
cmp
adc
adc
sti
mov
sarl
test
aaa
into
xchg
mov
in
xchg
mov
sbb
or
add
inc
popa
insb
sbb
in
mov
dec
pop
jp
jae
enter
test
or
xor
cs
repz
pop
jl
or
je
push
jb
xchg
ret
and
dec
xor
std
mov
shlb
mov
inc
mov
lret
and
cwtl
sub
xor
mov
cmp
push
jno
sub
rclb
inc
sub
push
int
jp
pop
jp
jge
out
add
cmc
iret
inc
xor
or
sbb
pop
sarl
sbb
movsl
aaa
jle
cmc
lods
sbb
dec
hlt
sbb
fisubrs
notb
inc
sub
mov
aam
pop
mov
xor
scas
dec
rorb
popf
jnp
popa
movsb
mov
fs
sahf
fnstcw
cltd
inc
mov
and
jle
aas
arpl
or
mov
daa
mov
popf
hlt
incl
jecxz
mov
inc
icebp
mov
cmp
imull
jle
dec
pop
xchg
inc
insl
dec
sub
daa
pop
mov
pop
negl
mov
lcall
cltd
lods
sti
push
test
and
sbb
xor
mov
jo
cmpsl
and
xor
test
mov
rep
hlt
adcl
mov
jne
push
shl
add
xchg
popa
adc
scas
inc
test
cli
cmp
sarb
mov
jmp
fsubl
push
xchg
xchg
jg
ret
mov
dec
push
repnz
sbb
ficoml
lcall
adc
or
insb
xor
sub
dec
iret
in
sbb
sbb
cmp
mul
shrl
fwait
scas
stos
mov
mov
sahf
jne
sub
mov
xchg
inc
xchg
xchg
cmp
outsb
xorb
add
fucomp
pop
jg
ljmp
aad
scas
cltd
lock
inc
in
data16
pop
inc
dec
fcmovnb
dec
cmp
lock
cmpsb
fcoml
movsb
mov
push
aaa
lods
test
push
lret
or
lcall
push
mov
in
push
add
dec
and
stos
and
sub
pop
sub
jle
mov
ret
mov
add
sub
scas
cltd
jle
gs
mov
push
mov
dec
add
test
out
add
bound
jmp
fidivrl
insb
xor
shr
fs
push
mov
cli
ljmp
add
fcomps
pop
stc
push
outsb
cltd
cld
orb
cmp
sbb
fidivrl
jecxz
lret
clc
lcall
sbb
fists
mov
bound
xor
pop
sub
push
jns
xor
adc
sub
scas
dec
fnstenv
ljmp
pusha
pop
jmp
insb
orl
fucomp
les
push
sub
in
cmpl
xchg
xor
cmp
mov
sbb
inc
cmp
or
out
pop
mov
icebp
outsb
jmp
lret
popa
lds
pop
mov
dec
push
fsub
int
je
xor
adc
test
inc
notb
jl
xor
add
push
push
mov
and
push
xchg
outsb
insl
rcrb
js
cmp
sub
arpl
dec
in
repnz
in
mov
out
jl
sub
das
je
xor
jbe
lret
imul
jge
stos
jb
lcall
pop
fistps
adc
arpl
leave
scas
xor
adc
mov
push
and
sbb
stos
lea
and
xchg
inc
xchg
adc
fiaddl
xchg
jmp
outsl
push
orl
das
mov
lods
mov
xor
aad
dec
sarb
shlb
mov
and
icebp
cmp
cmc
cwtl
imul
inc
ja
cltd
xor
adc
xchg
out
dec
dec
or
imul
nop
jmp
in
mov
test
jmp
cmc
sbb
lret
in
mov
push
xchg
jge
cmpsb
pop
out
clc
and
pop
xchg
movsl
jle
mov
test
jbe
test
jg
int3
pop
sbb
sti
data16
sub
les
cmp
jns
les
popa
bound
dec
sub
lcall
test
bound
ret
or
fisttpll
cmpb
jg
or
out
test
xlat
push
cmc
in
mov
mov
push
sbb
add
dec
adc
mov
jb
push
jge,pt
inc
lods
inc
jne
xor
cmovbe
nop
dec
cmpsb
push
adc
xchg
aas
xchg
mov
nop
fsubrs
in
in
les
je
cmpsb
jecxz
cmpsb
and
mov
ljmp
insl
push
mov
filds
ljmp
xor
pusha
bound
xchg
dec
lcall
jbe
lret
rcrl
mov
sbb
xchg
sub
mov
rorl
xlat
add
sub
js
insl
or
adc
aaa
iret
sbb
ljmp
pushf
add
xchg
out
sbb
ret
mov
push
lea
pop
stos
xor
cmp
cmp
nop
mov
fstpt
jmp
pop
lods
mov
enter
mov
xlat
push
xor
cmp
aad
mov
add
dec
popa
jnp
pop
inc
in
cs
mov
add
fcoml
adc
test
test
pop
mov
push
mov
mov
adc
gs
lret
mov
add
pushf
into
fs
inc
popa
loop
jne
ret
bnd
faddl
loopne
dec
dec
fidivs
iret
gs
push
lahf
fnstcw
divb
rorb
pop
cld
xor
mov
leave
or
dec
jne
leave
repz
fwait
data16
pop
mov
pop
adc
bound
sbb
jp
ret
xor
test
clc
xchg
pusha
in
fiadds
xchg
pop
sarl
test
cmp
mov
jmp
jmp
ja
lock
cwtl
jge
aam
popf
aas
and
mov
mov
popa
cmpsl
cmp
push
ljmp
bound
inc
cmc
int3
sahf
mov
cmc
mov
stc
aas
jo
cli
mov
clc
xchg
clc
pushf
jmp
movsb
cli
mov
push
cmp
push
movsl
clc
cmp
lret
in
jnp
popa
xchg
or
jg
add
fsub
pop
fildll
aam
push
jne
mull
push
in
xchg
pop
lret
fwait
jg
ret
adc
push
stos
mov
sbb
popf
fdivr
faddl
bound
lods
add
popa
sub
mov
js
enter
mov
sbb
mov
hlt
jno
cs
jge
cmp
dec
xor
mov
cmp
add
icebp
repnz
insl
pop
std
ror
jae
push
test
jnp
sti
jge
outsb
repnz
addr16
mov
xchg
push
mov
dec
pop
imul
jbe
adc
outsl
dec
mov
jae
mov
and
cs
xchg
sub
loope
jg
vpcmpeqw
sbb
cmp
out
and
adc
xchg
and
cmp
in
mov
in
ss
mov
sub
pop
lock
cmp
push
pop
jno
in
push
pop
push
push
lret
ret
sub
das
or
push
aam
xlat
sbb
daa
push
loopne
les
loope
mov
mov
data16
mov
mov
mov
jl
divb
and
les
stc
xchg
ret
lea
push
in
jp
aam
ja
js
pop
pop
adc
popa
aas
or
sbb
cld
fnstsw
out
mov
dec
inc
dec
dec
and
popa
divb
mov
jns
and
lahf
lock
jmp
je
mov
xchg
call
dec
xchg
sti
adc
jge
pop
xchg
cmp
fs
outsl
sbb
inc
cmp
addr16
and
and
in
js
mov
sbb
jno
mov
mov
stos
sti
jle
add
sub
inc
mov
and
ljmp
mov
sub
or
fdivl
jmp
fisubs
xor
lock
hlt
stos
rcrl
outsl
in
xchg
pop
mov
outsl
out
jle
rcl
test
ret
xchg
sbb
or
xor
lret
and
lods
shr
nop
fwait
cmc
ja
mov
jne
mov
mov
cmpsl
jecxz
iret
xchg
push
sub
std
and
shll
loope
and
adc
adc
xor
cltd
int
sub
dec
xchg
mov
dec
jle
jp
add
rcrb
push
lret
xlat
jo
pusha
scas
icebp
push
lock
shll
pop
insb
cli
sub
xorb
aam
or
xchg
pop
mov
inc
ret
push
dec
js
nop
lds
nop
push
sahf
popa
fstpl
arpl
jle
hlt
addr16
stc
cld
sbb
lsl
fisubrl
test
add
scas
mov
sbb
ret
sbb
mov
pop
inc
pushf
imul
sbbb
and
cs
sub
movsl
je,pn
mov
setnp
push
lds
repz
repnz
js
fs
pop
hlt
sub
popf
push
call
scas
fstpt
inc
mov
add
movsb
lods
sub
mov
fwait
mov
add
stos
pop
add
push
test
cmp
cmpsl
dec
mov
rclb
lock
pushf
jge
and
aad
xchg
add
xchg
fcoml
nop
push
cwtl
loop
iret
cltd
cwtl
xor
leave
popa
call
mov
loope
mov
cmp
add
sub
into
in
loop
inc
mov
push
push
mulb
fcoml
dec
adc
ret
fisubrs
add
pop
xchg
fsubrs
mov
xor
xor
subl
jns
mov
outsl
pop
incl
icebp
lock
mov
jle
inc
xor
sbb
fcmove
sbb
jbe
movsb
imul
out
push
sti
and
dec
xlat
xchg
pop
mov
es
test
imul
lock
jns
das
mov
xchg
lods
inc
push
out
and
fisttpl
insb
push
or
fxch
push
jge
mov
jl
adc
jae
inc
mov
sub
cmp
mov
fistl
or
addr16
cmp
out
int3
decl
ret
mov
push
insl
pop
pop
add
loope
outsl
out
push
ficompl
int
mov
jo
add
pop
xchg
sbb
out
jmp
ljmp
jmp
dec
inc
in
jae
lds
stc
pop
stos
add
push
mov
scas
mov
adc
pop
pop
and
cmp
jmp
es
sbb
cmp
jae
mov
push
cmovp
dec
pop
enter
and
pop
cmp
adc
addr16
pop
or
inc
mov
cmp
dec
sbb
push
loopne
sti
fstpt
inc
shrl
mov
mov
dec
int
dec
mov
push
or
movb
in
ret
mov
adc
lahf
aas
mov
push
sbb
xor
in
and
ljmp
mov
out
pop
inc
out
sbbl
ror
rol
cmp
xlat
jl
sar
lock
pop
sub
int
pop
push
push
rcrl
push
adc
lods
dec
data16
cmpsl
out
push
jecxz
jecxz
sti
fwait
cmp
fcmovu
xchg
mov
jmp
orb
addb
adc
cmpsl
hlt
pop
mov
mov
in
and
mov
pop
and
mov
adc
mov
lods
enter
mov
mov
push
sub
aas
test
dec
mov
push
lds
arpl
fbstp
das
dec
xchg
xchg
insl
push
addr16
pop
mov
inc
sub
insl
xchg
test
hlt
ja
and
xchg
dec
stos
pop
test
dec
push
rorb
popf
les
loope
jg
xchg
jbe
loop
lret
xlat
scas
xchg
xchg
aas
mov
mov
push
je
fistpl
adc
movsb
or
sub
lock
cmp
pushf
call
mov
dec
fiaddl
xchg
dec
or
cmp
add
aaa
mov
loop,pt
mov
rcrb
repz
sbb
incb
dec
shll
sbb
aas
outsl
lahf
test
daa
adc
test
pop
sbb
inc
in
adc
in
mov
inc
add
jecxz
ja
addr16
scas
nop
rcrb
xor
xchg
pop
inc
mov
js
mov
inc
inc
pop
mov
and
into
sub
lret
xor
add
scas
fisubs
stc
cmpsl
jno
pop
or
inc
cmp
in
stos
nop
hlt
aaa
mov
sahf
or
xor
cmpsl
pop
vmovups
push
cmpsb
mov
dec
das
testb
lret
mov
outsl
xchg
aam
xor
aas
or
fstpl
jg
add
fsubr
cli
movsb
xchg
je
sbb
xor
adc
aaa
sti
dec
push
test
xor
cmp
mov
popf
jg
and
pop
dec
stc
out
xchg
clc
cmp
mov
or
mov
inc
mov
mov
loopne
adc
cmp
leave
or
push
jo
mov
inc
inc
std
cltd
roll
in
cmp
fnstsw
mov
jnp
pop
rcr
ja
in
push
cs
test
hlt
stc
xchg
cmpsb
popl
cmpsl
mov
jg
push
sbb
cmp
outsl
mov
jb
cltd
lods
sbb
jle
fsts
movb
xor
inc
jnp
dec
fcomps
or
mov
cltd
mov
ret
sbb
test
cmp
mov
fdivr
in
sbb
lock
jnp
push
jns
dec
cld
and
adc
jge
cmp
inc
bnd
dec
int
pop
mov
cmc
cmpsb
push
xchg
mov
xor
mov
cmpsl
lret
addl
rcl
dec
dec
lods
pushf
jp
push
mov
add
mov
sub
push
or
icebp
pop
sbb
js
or
dec
xchg
sbb
mov
fwait
push
jmp
in
cs
cmpsl
movsb
mov
jnp
aam
mov
push
or
sbb
jp
test
ds
mov
movsb
sbb
sub
push
out
inc
mov
or
ja
dec
sub
imull
xor
scas
repz
fisubl
lods
pop
ret
push
ffree
cmpsl
stos
out
stc
std
or
xor
pop
lea
pop
jmp
sub
les
pop
loope,pt
cmp
call
fiadds
push
jmp
push
jb
cmp
loop
and
mov
add
test
out
in
push
popa
aam
xor
rorl
sbb
pop
insl
bound
cli
das
jnp
dec
testb
test
aad
xchg
lret
repz
aam
pop
hlt
pop
pusha
sbb
pop
sbb
mov
test
and
inc
sti
xlat
jae
sarb
mov
pop
and
or
repnz
lods
cwtl
insl
inc
xor
ret
enter
js
add
mov
into
dec
stc
fistps
dec
mov
xor
int
and
lea
stc
dec
push
ds
outsl
push
mov
scas
aam
mov
adc
mov
sub
mov
jl
ja
inc
scas
gs
js
filds
stos
imul
jl
int3
pushf
cltd
fiaddl
mov
xchg
push
das
dec
xlat
push
shlb
mov
or
out
aaa
loop
push
test
mov
movsb
inc
mov
jl
push
adc
cs
js
in
and
mov
sbb
add
add
adc
mull
mov
push
daa
xchg
add
mov
adc
xor
dec
daa
mov
mov
repz
ja
rclb
stos
push
jmp
jmp
push
mov
jo
lock
aad
dec
pop
shll
or
jno
mov
fmuls
jnp
add
pop
push
fld
xchg
or
sub
push
pushf
mov
pop
decb
movsl
lret
sti
bound
insb
mov
mov
or
xor
or
push
pusha
mov
test
mov
inc
pop
decb
bound
shll
imul
int3
in
mov
sub
xchg
xor
sahf
sbb
adc
insl
cmpsl
clc
fisttpl
aad
jnp
arpl
adc
addr16
icebp
movsl
inc
xorl
movsb
pop
jg
sbb
mov
adc
jl
fldt
lods
stos
test
dec
pop
icebp
fistl
movsb
sub
pop
sbb
ds
add
xor
mov
lcall
and
testb
daa
mov
xchg
dec
inc
sub
cmp
mov
enter
jg
js
push
mov
inc
fsubrs
pop
push
jmp
push
push
push
clc
int3
lret
push
xchg
repnz
in
lods
pop
rolb
arpl
push
enter
sub
cwtl
jecxz
mov
xlat
dec
mov
fs
pop
dec
lret
dec
pusha
pop
mov
lret
subl
mov
push
push
mov
pop
arpl
jle
leave
mov
jns
iret
or
cmp
or
movsl
xchg
rcll
fnstenv
push
and
mov
repnz
xchg
loope
loop
dec
dec
dec
test
and
add
int
movsb
data16
bound
inc
mov
add
cmp
inc
sarb
out
nop
mov
nop
xchg
ret
pop
push
xchg
cmpsl
mov
movsl
aaa
int
loop
call
fsubrl
xor
mov
jmp
mov
aaa
mov
add
ss
out
ficoml
push
iret
mov
add
jle
sbb
cmp
xchg
dec
jnp
mov
loop
repnz
cmpl
jne
and
movsl
xchg
shr
xor
add
lock
jb
dec
in
inc
dec
popa
outsl
and
mov
imul
sbb
in
insb
add
aad
pop
sti
push
adc
xchg
push
fidivs
es
sub
insb
inc
insb
mov
rol
lahf
mov
mov
roll
dec
ds
dec
shll
jo
mov
xchg
lret
les
sbb
dec
dec
pop
and
int
mov
pop
push
rcrb
inc
jnp
mov
not
js
push
xor
scas
arpl
xor
ror
cmp
mov
push
xor
jae
sbb
sahf
sub
popa
aaa
inc
sub
mov
push
jmp
or
sahf
push
int3
inc
cmp
imul
inc
cmp
mov
pop
jno
adcl
lds
lret
xor
lds
insb
push
imul
jge
mov
scas
shll
add
mov
sarb
mov
gs
and
xor
push
and
hlt
sti
aaa
into
fidivs
outsl
cmpb
cmpsb
mov
push
cltd
pusha
lahf
inc
outsb
out
jns
add
in
mov
xchg
addr16
pushf
in
pop
leave
ja
xchg
ja
lcall
and
in
cmp
or
icebp
jge
cmp
mov
sub
add
pop
mov
add
xchg
xorl
sbb
adcb
dec
add
leave
dec
or
jne
ja
or
in
add
add
into
cmpsl
movsb
adcl
push
xchg
lcall
dec
out
roll
sub
jo
push
inc
out
inc
arpl
pop
leave
mov
sbb
clc
sarb
push
rcrb
rorl
stos
sti
and
jg
stos
adc
rcrl
pop
pop
lock
and
out
xlat
sub
loopne
fisttps
shl
cmp
push
cmp
int
mov
xchg
into
add
repz
inc
test
sahf
and
and
pop
and
inc
gs
fwait
push
push
in
jecxz
or
adcl
pop
es
xor
xchg
cmp
mov
add
aam
jae
lcall
or
pop
jmp
sbb
jl
out
push
or
mov
testl
lret
inc
mov
mov
cmp
std
fildll
mov
dec
xchg
addr16
out
fisubrl
xchg
test
roll
sub
stos
je
aad
ja
out
jl
pop
mov
lret
and
lret
cmpsb
lds
sbb
cmp
push
ret
flds
add
popa
lods
and
sbb
mov
sub
xlat
push
in
shlb
pop
test
lods
adc
adc
xor
jle
dec
pop
inc
xchg
out
insb
xchg
adc
cmp
into
mov
daa
leave
jbe
dec
enter
mov
dec
in
inc
mov
aad
xor
inc
mov
xchg
jno
in
mov
or
loope
je
xchg
in
mov
pop
dec
test
gs
add
stos
xchg
push
loopne
adc
mov
fnstenv
mov
adcl
xor
pop
stos
and
push
and
sub
scas
arpl
push
jne
sbb
xlat
imul
add
sbb
add
pop
cld
mov
scas
push
mov
adcl
fucompp
fisubrs
mov
inc
mov
imul
dec
inc
lcall
aaa
or
sub
dec
cld
push
mov
push
inc
adc
ja
push
add
inc
mov
popf
lds
out
mov
rcrb
cltd
pop
bound
fs
or
sub
cs
and
mov
push
jne
mov
xchg
in
jge
xchg
sub
aaa
push
add
xchg
xchg
cmp
xchg
mov
les
test
push
jle
and
inc
mov
add
mov
sub
call
push
cwtl
mov
roll
push
ret
sarl
nop
dec
mov
outsl
mov
or
mov
cmp
out
or
mov
enter
adc
pop
add
xor
pop
inc
rcrl
lcall
hlt
xchg
sbb
lea
fisubs
dec
call
lods
bound
sub
div
or
jmp
cmp
or
ret
leave
mov
xchg
jge
loop
xchg
aam
mov
mov
outsb
add
mov
sbb
push
mov
fnstcw
testb
or
fiaddl
cmpsl
mov
and
pop
pop
je
sbb
or
add
test
fs
push
xchg
addb
xor
es
repz
and
rorl
sub
mov
fdiv
sub
lret
push
push
push
cltd
jl
dec
idiv
aam
sub
shrb
leave
inc
xchg
xchg
lcall
xchg
add
jns
dec
pushw
fsub
adc
push
dec
repz
dec
lahf
fs
outsb
sub
ljmp
int3
pop
call
add
test
and
push
shll
aaa
cmc
adc
mov
sbb
mov
ss
in
mov
inc
movsb
adc
xchg
addl
sub
jmp
push
divb
lcall
imul
xchg
ret
push
and
xchg
das
lods
add
outsl
pusha
or
call
fisttpll
repnz
rolb
addr16
cltd
imul
das
clc
ret
push
xor
stc
xchg
xchg
mov
test
sti
cmp
sub
int
vpcomq
scas
mov
push
ret
pop
and
jnp
dec
ret
aad
rcl
cwtl
xor
adc
aad
inc
in
neg
cs
or
add
jle
aad
orb
je
ja
in
pop
mov
add
in
fdivrl
push
mov
icebp
shll
test
cmp
jg
das
xor
call
movsb
test
pop
sub
es
std
sahf
adc
adc
jb
popf
scas
xor
sbb
addr16
loope
pusha
call
mov
filds
rorl
daa
jp
ss
decb
xchg
ljmp
out
push
xor
sub
xor
ficomps
adc
cwtl
mov
in
loop
lcall
cmp
es
gs
mov
stc
lcall
sbb
in
mov
xchg
jno
in
xlat
inc
fcoms
ds
sbb
jne
cmp
push
shll
les
and
popa
sub
add
adc
pop
xor
movd
nop
imul
xchg
cltd
loop
out
or
adc
shlb
in
scas
out
call
add
dec
loope
out
cld
je
stos
xchg
add
pop
sbb
jg
cwtl
mov
je
mov
ljmp
mov
test
xchg
xor
cltd
cmp
xchg
adc
lcall
inc
dec
pop
and
push
out
xchg
jp
in
inc
in
mov
inc
sub
sub
inc
daa
push
mov
sbb
adc
add
pusha
leave
imul
lret
fisubs
sbb
lods
popf
ss
clc
jg
fmul
lods
push
mov
nop
lret
sub
adc
cli
dec
xchg
repz
mov
push
jmp
lods
push
or
shlb
lahf
test
adc
push
mov
fldl
xor
lock
jne
mov
jg
insl
jg
jp
cmpsl
jg
jb
add
test
test
icebp
push
jp
shl
sub
sbb
mov
iret
sar
fdivrl
lret
hlt
and
push
sahf
jo
push
xchg
fwait
loope
inc
lret
fdivr
jecxz
jae
in
xchg
std
cmp
int
mov
lret
out
stos
mov
mov
jnp
nop
pop
sahf
gs
clc
and
nop
nop
out
mov
xchg
xor
xor
inc
sub
aad
cmpsb
mov
fnsave
repnz
mov
loop
pop
lea
or
push
stc
xorl
rclb
bound
and
sub
mov
cmp
lea
dec
push
data16
add
lea
nop
inc
sub
mov
bound
daa
fisubrl
push
adc
xor
jle
outsl
mov
jle
arpl
mov
sub
sti
sub
lahf
lret
outsb
aad
push
xchg
repz
imull
adc
pop
jno
outsl
pop
enter
or
cmp
add
shlb
mov
or
cmp
mov
sbb
ffree
xor
outsb
ret
stos
jecxz
mov
xchg
xorl
or
adc
insl
add
out
adc
cltd
movsl
push
mov
xchg
insl
xchg
jne
hlt
cmp
iret
mov
mov
dec
pop
pushf
sub
loope
in
loopne
lcall
inc
nop
sub
xchg
pop
aaa
xor
popf
inc
fmulp
lret
push
push
push
mov
gs
mov
dec
inc
mov
mov
ds
nop
mov
mov
mov
xlat
mov
adc
xchg
mov
pushl
xchg
outsl
push
xor
push
shlb
shlb
dec
in
dec
or
or
rolb
ljmp
clc
out
pop
push
mov
mulb
es
cmc
mov
cmpl
cmpsl
jbe
inc
add
dec
inc
into
sahf
ds
mov
mov
aam
mov
sub
popa
adc
mov
daa
mov
popf
repnz
mov
mov
inc
lea
pop
stos
outsb
int3
mov
bound
push
js
mov
mov
test
mov
aad
cmp
sti
jns
aad
lods
js
and
stos
repnz
popf
addr16
imul
ret
daa
push
int
push
shlb
and
and
and
cmp
mov
and
xchg
pop
mov
jmp
inc
int3
insl
adc
daa
gs
fwait
pop
and
shlb
pop
mov
push
test
loope
jb
adc
lock
movsl
pop
mov
outsl
insl
and
mov
lret
adc
dec
jno
lods
outsl
or
jl
int3
push
loope
mov
jle
loopne
clc
jae
sahf
pushf
mov
and
jno
jno
js
adcl
xchg
lret
pop
add
cmp
mov
sbb
imul
xchg
jbe
das
std
hlt
mov
jle
loop
clc
leave
fwait
iret
imul
push
xchg
adc
pop
mov
xchg
pop
mov
scas
pushw
xchg
xchg
sub
pop
arpl
icebp
mov
flds
mov
pop
inc
pop
stos
or
lock
stos
in
ret
xor
mov
addr16
mov
adc
inc
or
dec
inc
mov
pop
add
and
and
lcall
popa
xor
mov
jp
fildll
adc
dec
pop
shlb
cmp
imul
xchg
add
sub
push
pop
lods
and
fimuls
addr16
push
dec
in
add
xchg
pop
or
or
int
test
sarb
in
into
scas
pop
sub
outsb
cmp
rclb
lret
nop
sbb
rorb
inc
pusha
bound
ror
jo
mov
xor
pop
inc
cltd
and
mov
scas
mov
xor
push
push
jecxz
push
pop
insb
xor
adc
jns
add
pop
push
sub
lock
push
mov
andl
das
jl
and
lret
sub
shll
test
popa
cmp
jmp
sub
mov
jns
ja
cmpsb
sub
cmp
jns
mov
lcall
iret
fcoml
fildll
pop
mov
pop
outsb
stc
mov
and
pop
or
cwtl
jg
push
or
fmul
fidivrs
repnz
xchg
dec
pop
cmp
jg
pop
and
fldcw
cmp
sub
mov
cmp
mov
out
mov
dec
adc
mov
jl
outsl
outsl
dec
xchg
cmp
jno
movsb
pop
test
inc
fcoms
or
adc
or
dec
filds
dec
cwtl
idivl
add
mov
aaa
cmp
and
mov
insb
mov
xchg
js
arpl
ret
test
and
xchg
lret
movsb
lods
aam
stos
outsb
push
mov
es
cmp
movsb
dec
push
mov
cmc
imul
dec
out
out
dec
ficoml
or
cmp
in
clc
adc
int3
fistpl
jb
mov
fsub
pop
call
lea
jle
loopne
xor
or
lods
gs
faddl
cmp
push
pop
loop
or
into
xor
lret
fs
mov
cwtl
cmp
out
das
push
mov
mov
push
mov
xchg
jmp
int
inc
subl
andl
repnz
cmp
push
sub
imul
mov
push
stos
outsl
or
xchg
adc
pop
add
pop
mov
cmpsl
push
jnp
add
das
clc
inc
inc
sub
ja
outsl
fstps
inc
incb
dec
mov
pop
leave
fs
pop
jbe
sub
cmp
loop
stos
mov
pop
pop
not
ficomps
jg
xor
ret
pop
adc
loop
add
mov
aaa
adc
ret
dec
js
xchg
pop
pusha
sbb
mov
loopne
sub
out
dec
add
lea
sub
xchg
iret
mov
idivb
push
dec
in
lds
ljmp
mov
mov
push
das
rcll
call
cmp
mov
loop
popa
aad
mov
gs
imul
in
pop
dec
gs
push
bound
lock
and
pop
or
dec
inc
lock
cld
jns
cmc
std
add
add
out
mov
outsb
mov
std
push
cmp
inc
lds
or
sub
sub
mov
mov
test
jge
scas
mov
ljmp
push
clc
xchg
dec
xchg
fistl
adc
jl
mov
xor
sbb
orl
xchg
aaa
dec
loopne
daa
imul
movsb
ret
pop
mov
lret
pop
pusha
push
enter
jge
pop
mov
fsubrs
xchg
lcall
sub
ret
aaa
or
aas
pusha
xor
mov
das
scas
enter
fmulp
xorl
push
adc
enter
outsb
arpl
test
idiv
test
cmp
push
ja
int
dec
fbld
xchg
mov
icebp
inc
sub
add
xor
xchg
out
repz
sbb
inc
enter
cmp
call
fsubl
jbe
lds
pop
add
pusha
sbb
call
fisubrs
imul
and
cmp
test
pop
mov
push
in
iret
hlt
imul
mov
sahf
inc
and
sbb
lock
mov
aas
rorb
xchg
aam
jp
adc
in
loop
repnz
icebp
jo
insl
jno
dec
xchg
nop
xor
lods
gs
mov
jnp
add
cli
xor
mov
dec
dec
shl
cmp
xlat
pop
push
pop
xor
push
mov
dec
adc
je
and
xchg
push
mov
movsl
or
inc
hlt
ret
jle
adc
jns
ja
push
cmp
mov
popf
lods
adc
cmpsl
dec
test
push
test
faddl
lahf
bound
negb
and
inc
or
cltd
xchg
sahf
cwtl
ficoms
cmp
adc
in
add
iret
icebp
ret
test
loope
add
scas
aaa
mov
xchg
out
daa
or
in
pop
pop
data16
sbb
push
or
aaa
lods
movsb
mov
inc
push
in
sub
movsl
les
xor
data16
xor
std
call
fwait
test
pusha
xchg
adc
and
xchg
jo
sti
daa
cmpsl
jle
mov
pop
push
loope
loope
pop
movsl
push
outsb
inc
jg
mov
jmp
das
mov
insb
mov
mov
push
mov
jl
js
or
xor
not
dec
cmp
or
adc
jecxz
subb
popf
dec
xor
sti
dec
arpl
jne
mov
cmc
aad
cmp
int3
xchg
ja
lret
enter
scas
fildll
cltd
mov
fldenv
inc
add
icebp
rol
pusha
pop
pop
mov
scas
adc
imul
arpl
mov
repnz
push
pop
pop
rcrl
lcall
ret
and
rorb
int3
test
sub
lds
loope
out
jge
jecxz
mov
negl
in
shll
stmxcsr
int3
outsl
movsb
pusha
mov
dec
add
add
sbb
insl
lcall
mov
cs
lock
ja
cmp
loopne
mov
repnz
or
dec
mov
imulb
test
pushf
sub
adc
dec
adc
inc
adc
icebp
pop
inc
daa
push
frstor
pop
dec
sub
repnz
inc
mov
xchg
adc
push
pop
push
ds
and
mov
inc
sbb
bound
push
les
mov
sbb
mul
cmpsl
inc
lret
je
dec
imul
pop
outsl
cmp
mov
or
dec
jle
pop
pop
in
push
loop
dec
mov
mov
lcall
xchg
jp
je
stc
inc
jne
push
mov
nop
sbb
sbb
inc
or
or
stos
pushf
sbb
rep
movsl
mov
push
pop
stos
xchg
cmp
addr16
lods
and
into
dec
sub
or
sbb
jecxz
xor
mov
or
js
xor
mov
add
and
lahf
out
push
add
pop
jge
lock
push
cwtl
in
stc
lret
les
fdivrs
sar
in
fadd
xchg
mov
pop
jle
pushf
mov
sub
imul
sbb
xchg
sub
aas
shrl
jbe
roll
les
xor
stos
pop
and
mov
dec
insb
mov
cmp
lret
mov
inc
adc
jecxz
or
je
cwtl
mov
test
jbe
fdivl
mov
push
in
xor
enter
mov
insb
mov
std
fstpt
xchg
in
insl
add
pop
cmpsl
pop
cmp
sbb
arpl
hlt
out
bound
lds
daa
cs
mov
jae
inc
push
into
and
jmp
jae
sub
xchg
imul
inc
pop
jge
mov
and
clc
clc
xchg
lods
pop
adc
push
addl
in
jg
icebp
pusha
mov
adcb
add
mov
aaa
jo
push
js
mov
imul
stos
popa
or
les
cmpsl
cmpsb
mov
cli
jmp
in
movsl
fisubrl
lret
inc
loopne
pop
insl
aad
mov
pop
aas
pop
fcmove
cmp
movsl
cmc
mov
and
pop
cli
dec
jnp
aaa
sbb
inc
sub
lahf
push
call
pushf
mov
sub
test
add
aad
add
mov
icebp
xor
cwtl
loopne
dec
imul
call
xor
lahf
push
fnstcw
inc
pop
fs
cmp
xchg
pop
sahf
jno
lds
sbb
or
xorl
cmp
pop
inc
nop
negl
and
dec
cmc
and
sub
int3
mov
pop
or
mov
dec
incl
out
data16
adcl
lds
test
mov
sbb
andl
out
jbe
je
out
pop
adc
dec
push
add
and
pop
adc
adc
xor
mov
movsl
insb
cmp
push
mov
lret
mov
lret
cmp
or
or
and
sbb
mov
add
pop
das
ja
jl
hlt
sar
stos
xor
ret
mov
mov
jmp
xchg
mov
mov
and
cmc
mov
mov
dec
jl
cmp
jl
jl
fcmovnbe
xor
sar
mov
mov
test
cwtl
es
jnp
adc
cmc
sub
pop
add
mov
roll
inc
adc
pop
lds
into
pushf
adc
test
lret
cmp
lea
pop
aas
add
cltd
xchg
rcrb
sbb
cmp
xchg
cli
sbb
lret
mov
aad
fcompp
mov
nop
aad
into
mov
pop
mov
mov
jo
scas
xchg
mov
icebp
xchg
movsb
in
cmp
shrl
sbb
scas
xor
pop
ret
mov
pop
mov
mov
mov
dec
pop
cmp
mov
mov
scas
test
test
mov
or
mov
aam
dec
inc
xchg
movsl
cwtl
mov
or
test
adc
add
das
cmp
int3
adc
pop
scas
cmp
sbb
pushf
fwait
cli
mov
test
iret
lret
push
jne
test
dec
xor
sbb
gs
lock
out
adc
int3
arpl
lea
pop
push
neg
dec
test
dec
out
add
push
dec
xchg
stos
cmpsb
out
push
or
xor
mov
xor
inc
fsub
xorl
or
std
fsubr
sbb
int
jecxz
add
aas
jge
nop
push
adc
movsb
pop
arpl
mov
daa
mov
push
xlat
xor
in
rcrl
in
xor
data16
std
cld
es
jns
call
pop
stos
sbb
mov
popf
cmp
out
rcrl
pand
push
inc
inc
mov
pop
fcmove
std
push
xchg
mov
shll
mov
fistpl
sahf
and
hlt
push
inc
clc
adc
sbb
jno
cmp
addl
xchg
inc
adc
ljmp
leave
xchg
repnz
xor
fnstenv
test
pop
xchg
repz
jecxz
dec
mov
mov
mov
pop
mov
fisubrs
mov
push
sahf
push
movsb
cmpsl
sbb
fs
jno
cld
adc
mov
imul
lret
xchg
xchg
add
xor
push
imul
mov
add
es
mov
cmp
cmp
jp
fnstsw
or
cmpsl
daa
xor
xchg
sub
mov
mov
dec
jae
jmp
ret
cwtl
and
cmp
jl
fadds
push
jge
mov
ss
pop
loopne
sahf
mov
sbb
xchg
loope
jb
aam
out
push
xchg
pop
jnp
add
jno
adc
lods
insl
fucomp
push
or
sub
jo
xchg
sub
stos
js
xor
imul
ja
xor
xor
out
mov
in
dec
dec
cmp
ret
ficomps
js
and
mov
sub
add
push
push
test
add
loope
and
push
sbb
add
jg
imul
sub
cmp
xor
sub
mov
xchg
pop
pushf
inc
mov
sub
and
icebp
and
jo
mov
scas
mov
jbe
mov
xor
je
lea
jp
inc
dec
lods
mov
mov
fsubr
push
rorl
jae
in
mov
popf
adc
fimull
ljmp
pop
push
xchg
je
int
jecxz
addl
jbe
out
das
repz
addl
sbb
mov
pop
inc
push
cmpsl
int3
out
jae
mov
icebp
add
fdivs
pop
push
repz
stos
xchg
xor
cmp
cld
sub
xchg
mov
xlat
lahf
and
aam
rcrl
mov
stos
dec
cmc
loop
jp
and
and
in
fs
outsl
jne
cld
je
adc
push
dec
cmp
pop
fildl
into
adc
cmpsb
aaa
int3
and
jmp
xlat
andl
sbb
shrl
or
lret
out
pop
rclb
inc
scas
pop
push
xchg
aaa
sub
arpl
mov
push
sub
dec
xor
sub
fcmovbe
mov
dec
inc
shrb
cmc
adc
add
cmpsl
sahf
jb
nop
ja
or
jg
xor
addr16
pop
insb
pop
xor
push
int3
popa
sbb
jg
mov
xor
out
leave
cmpsb
addr16
mov
xchg
mov
stc
push
xchg
mov
mov
push
and
push
in
mov
repz
jns
pop
jns
cmp
lret
adc
mov
aas
mov
or
icebp
mov
outsl
jp
pop
mov
or
inc
lret
xor
adc
jle
pop
dec
jnp
movsb
xor
sbb
and
jl
cmp
into
cwtl
icebp
ljmp
imul
push
dec
or
dec
xchg
pop
ljmp
mov
lcall
or
lahf
ret
adc
cwtl
sbb
mov
scas
cmp
and
sarl
mov
cmp
out
inc
mov
inc
xlat
inc
dec
repz
out
mov
jne
inc
push
adc
add
mov
dec
repz
sub
call
test
push
and
inc
or
subb
repnz
inc
push
loop
fsts
mov
pop
bnd
rclb
movsb
movlps
fidivrs
inc
rolb
shll
and
stos
aaa
lods
inc
imul
stos
xchg
xchg
mov
mov
lahf
xor
pop
xor
scas
es
xchg
mov
adc
lret
aad
lret
add
pop
fmull
test
mov
push
fcoms
outsb
pop
adc
jmp
enter
jae
arpl
mov
mov
push
rcll
imul
test
sub
hlt
es
sbb
pusha
jno
mov
mov
mov
fidivs
push
decl
fdivrp
jnp
test
les
bound
cmp
xchg
dec
adc
sub
jecxz
cmp
sub
mov
mov
cmp
sbb
cld
rorl
jmp
xor
xchg
inc
test
scas
or
sbb
fmull
pop
aam
mov
mov
or
lock
lods
push
inc
jo
test
sbb
iret
adc
dec
test
mov
xlat
scas
idivl
lcall
cli
jns
jae
add
inc
popa
pop
inc
je
xor
sub
movsl
insl
neg
rcl
ret
movsb
dec
fistps
mov
dec
cmp
mov
repnz
pop
inc
pop
jg
cmp
jne
scas
mov
inc
add
add
fdivrl
lea
cmc
repnz
arpl
dec
gs
test
mov
cwtl
popl
dec
pop
xchg
test
sub
movsb
movsl
sahf
std
clc
imul
outsb
push
xchg
rcll
das
jns
jg
repnz
ds
xor
fidivrs
mov
pop
in
xchg
mov
stos
mov
cmp
jg
add
repz
xor
in
je
sbbl
pushf
ret
inc
call
push
adc
mov
fbld
mov
cmc
popf
leave
inc
and
inc
mov
pop
or
int
insl
or
jns
push
test
xchg
mov
inc
sbb
jecxz
cmpsb
leave
int
pop
push
jge
insb
scas
sti
inc
negb
int
or
or
dec
iret
or
add
aam
adc
add
loope
add
ds
xor
adc
mov
ljmp
outsb
loope
rorl
or
and
jns
lcall
in
out
pop
loop
test
out
mov
xchg
pop
mov
ficoml
sub
and
mov
lahf
mov
jle
xchg
and
popa
jns
adc
cmpsl
lret
stos
shrl
jmp
cmp
sub
jle
jp
sbb
push
cltd
lret
xchg
test
js
repnz
sbb
les
out
int
fmull
pop
mov
pop
push
inc
sub
pop
or
dec
add
ss
iret
cmp
rcrb
adc
jp
js
or
or
clc
cltd
add
stos
stc
cmc
mov
or
sub
cmpsl
mov
jmp
inc
dec
out
testw
sub
inc
jnp
or
pop
xlat
repnz
aaa
mov
cmovs
xor
sbb
add
jmp
lret
push
mov
int
push
ret
jne
outsl
dec
lahf
inc
push
mov
loop
pop
popf
outsl
faddl
popf
ss
dec
mov
insl
mov
push
xlat
jae
ret
or
adc
in
outsl
nop
lds
popf
xor
fsubrs
mov
js
jg
jno
sbbl
mov
cmpsb
sahf
sahf
jno
inc
fidivrs
arpl
movsb
call
jns
inc
and
pop
dec
pop
add
aam
pushf
jae
or
or
cmp
test
mov
cs
lods
ret
push
rclb
stos
cs
cs
lcall
pop
push
cmpsl
push
sbb
sbb
in
sub
movsl
mov
popa
nop
push
shlb
xchg
add
xchg
ror
push
jae
or
mov
xor
idivb
sbb
sub
xchg
jbe
push
mov
jmp
shlb
pop
mov
or
mov
sbb
sub
sbb
mov
cwtl
push
xchg
insl
pop
outsb
js
leave
in
mov
add
mov
jne
fisttps
xchg
dec
dec
sub
lret
sti
or
sbb
mulb
xor
jb
mov
push
in
mov
mov
cmp
pop
xchg
jo
cmp
xor
adc
cmp
inc
das
adc
dec
or
aas
sbb
xlat
addl
daa
aam
in
orl
jnp
jmp
lock
pop
adc
ja
pop
jo
dec
or
and
sub
add
mov
ss
and
mov
add
clc
sbb
add
clc
or
int3
inc
xchg
insb
mov
sbbb
inc
jne
outsl
xchg
bnd
lods
movsb
movsb
push
xchg
push
mov
stos
iret
movsl
sbb
sub
iret
cmp
xchg
mov
mov
pop
sbb
fstl
add
push
inc
ljmp
movsb
or
add
mov
push
lret
stc
push
jb
fstpt
imul
loop
pusha
ljmp
pop
out
adc
fbstp
bound
into
pop
outsl
popa
filds
mov
clc
mov
mov
xor
mov
pop
add
and
cs
mov
mov
inc
pushf
sbb
adc
icebp
shlb
push
mov
in
dec
loop
mov
stos
sbb
sub
jge
jo
mov
sbb
leave
loop
push
cmc
leave
add
lret
sbbl
pop
inc
call
je
pop
outsb
mov
dec
test
daa
and
inc
jns
mov
push
out
sub
jnp
adc
jg
dec
push
fwait
cwtl
dec
sub
mov
mov
loopne
dec
mov
xchg
out
xlat
dec
pop
xlat
and
mov
movsl
movsb
in
cmp
ret
cwtl
call
dec
pop
jo
mov
sahf
rolb
sub
out
gs
mov
insb
test
pop
adc
inc
xchg
lock
fs
rorb
xor
pop
ja
sub
sub
andb
test
bound
notl
add
inc
lds
sbb
in
lds
test
pop
sub
inc
fs
mov
sti
xchg
and
or
mov
lret
cwtl
js
push
xor
leave
adc
fdivr
add
into
aas
popf
stc
and
cmp
popf
rcll
mov
add
mov
or
jmp
stc
mov
pop
dec
scas
xchg
sarl
movsl
sub
out
add
xchg
pop
fisttpl
and
ss
fucomi
mov
cli
stc
rcl
hlt
jae
and
in
mov
inc
inc
pop
adc
mov
or
aam
das
mov
push
cwtl
cltd
int3
stc
faddl
in
dec
mov
aas
es
push
test
loopne
jne
xchg
outsl
loop
jmp
jecxz
mov
or
or
lahf
adc
mov
sbb
jle
xor
add
cmpsl
loope
std
insl
adc
pop
push
lret
jbe
bound
dec
in
sub
mov
xor
in
out
inc
and
or
jge
inc
jle
mov
data16
xor
stos
add
popa
push
cmp
imul
push
fidivrl
cs
leave
fdivs
mov
pop
mov
pop
pop
shr
xor
inc
sti
pop
push
push
xchg
cld
add
inc
mov
add
enter
cld
mov
insb
fisubs
out
icebp
cmp
in
jno
pop
pop
or
cmc
inc
push
test
out
xchg
xor
jb
movsl
movb
adc
mov
fdivs
mov
insl
test
xor
popf
mov
test
ds
dec
and
xor
sub
sbb
mov
and
popa
dec
dec
or
mov
test
gs
in
loop
cmp
cmpsl
mov
pop
mov
inc
lods
lahf
pop
push
ror
sub
insl
ror
jne
cs
sbbb
mov
stos
sub
pop
or
les
fmuls
xor
stos
xchg
jp
mov
movsl
imul
mov
or
push
pop
adc
cs
jle
ss
jo
push
xchg
xchg
mov
ljmp
fisttps
inc
std
adc
lgs
jb
in
xchg
xor
pop
cltd
hlt
insl
mov
ficomps
adc
and
jge
push
xchg
hlt
popf
mov
mov
ljmp
js
ret
aas
sub
and
inc
dec
and
ret
mov
push
jp
jbe
mov
call
xchg
addr16
clc
pop
popf
shrl
paddq
inc
adc
mov
fisttps
repnz
add
mov
push
sti
gs
sub
idivl
cld
rolb
ret
add
outsl
push
stos
call
dec
and
bnd
adc
in
int3
cs
push
popf
jno
lcall
ljmp
cld
hlt
data16
mov
pop
addl
xorl
in
sti
adc
leave
lret
and
push
imul
mov
in
repz
mov
inc
push
cwtl
pop
xor
fisubs
cmp
and
fildll
insb
bound
adcl
scas
je
push
in
nop
jnp
insb
inc
pop
testb
loopne
push
add
xor
andl
addr16
out
hlt
test
into
and
sbb
or
out
psllq
js
dec
jecxz
mov
inc
inc
inc
lret
xchg
in
jg
mov
dec
in
pop
dec
mov
mov
or
sub
outsl
ret
mov
flds
lock
jns
adc
fdivr
inc
cmc
lods
inc
xchg
cmp
jl
mov
fcmovnbe
pushl
cmp
pop
outsb
loopne
enter
mov
and
out
or
sub
xchg
test
movsl
push
dec
mov
add
sbb
cmpsb
cmp
scas
pop
sbb
fs
and
xlat
sub
add
in
lods
xchg
or
or
inc
test
lods
add
dec
and
push
sub
mov
leave
aas
pop
mov
out
mov
inc
insl
lds
nop
fwait
pop
adc
mov
scas
movsl
lcall
enter
add
and
addr16
fcompp
jmp
les
repz
jnp
movsl
dec
push
push
mov
divl
jnp
test
leave
js
jp
test
mov
dec
scas
or
dec
mov
sub
popa
daa
arpl
mov
popf
ss
arpl
dec
test
in
icebp
into
test
in
in
test
jp
repnz
ret
or
outsb
lret
adc
fistpl
imul
add
mov
pop
and
lret
nop
mov
mov
call
pop
mov
test
lret
cltd
adc
jmp
aam
pop
lock
jge
pop
lock
inc
pop
pop
scas
mov
sbb
or
dec
shlb
shrb
repnz
sub
xor
sub
cmpsl
mov
jo
jns
xchg
mov
ljmp
sbb
cmp
stc
lds
mov
sub
xchg
pxor
mov
pop
pop
out
and
pusha
pop
ds
arpl
sub
je,pn
subl
shlb
mull
dec
cmp
sbb
fwait
in
mov
std
call
loop
sub
enter
push
lods
call
repnz
and
ret
into
in
scas
jnp
inc
mov
sti
cmp
pop
cmpl
in
scas
adc
pop
xor
mov
and
cmp
pop
mov
out
and
or
std
dec
push
out
sbb
pop
mov
mov
ss
jne
pushf
jge
in
enter
orl
ja
loop
stos
or
lcall
cmpsb
das
dec
fdivs
stc
jge
jg
outsl
adc
sub
stos
sarb
aas
pop
repz
mov
notl
mov
cmp
aad
jbe
les
mov
jae
sti
xchg
add
sbb
cmp
xlat
mov
mov
in
xor
je
rcrb
mov
nop
cmp
and
dec
and
dec
pop
mov
imul
sub
inc
adc
xchg
rcrb
sti
jge
lcall
cmp
dec
jg
or
cmpsl
cmp
call
leave
lcall
xor
mov
inc
jmp
xor
xchg
insb
push
or
mov
jo
jne
mov
out
dec
pushf
dec
test
jb
in
ljmp
test
xor
bound
mov
dec
outsb
inc
andl
inc
test
ret
cmp
ret
mov
in
jno
stos
mov
je
dec
cmpsl
imulb
rcrb
sub
std
out
xchg
sbb
je
mov
loope
in
addr16
lods
add
aas
cmp
mov
fnstenv
loope
and
dec
inc
js
sub
push
shl
movsl
jne
and
into
sbb
and
imull
sbb
adc
jb
out
or
mov
fdiv
sub
jo
loopne
dec
fs
movsl
fdivl
jae
dec
add
mov
xor
or
pop
or
jecxz
jns
or
cmp
push
mov
inc
xor
outsb
dec
adc
pop
cmpb
push
sbb
xchg
stos
mov
ret
push
psubb
and
inc
cmp
mov
lahf
aas
fwait
daa
and
pop
jno
xchg
out
xchg
xor
nop
lds
scas
push
add
sbb
sub
jbe
jle
inc
push
nop
cld
lcall
cmp
out
pop
scas
sbb
or
fsubrl
stos
xchg
cwtl
mov
adc
and
add
xor
daa
jmp
popf
mov
sahf
push
dec
mov
push
push
and
ljmp
imul
int3
xor
adc
stos
push
popf
and
mov
and
cli
in
pop
daa
aaa
call
push
fstl
xchg
sub
mov
movsb
inc
popl
and
cmp
add
push
sub
mov
repz
and
ja
rcll
and
test
sbb
jne
xor
mov
dec
inc
in
inc
std
aas
cwtl
sub
mov
daa
in
pushl
frstor
sub
xchg
shll
or
aas
add
rcrl
cli
addr16
pop
or
test
push
imul
mov
pop
adc
and
shll
mov
ja
mov
pushf
pushf
stos
push
adc
sbb
and
clc
lahf
pop
loopne
lock
push
movsl
inc
mov
and
xchg
add
scas
outsl
jecxz
dec
or
add
jmp
mov
cmpsl
pop
enter
lcall
cmpsl
add
test
push
sbb
cmp
fistpl
in
int3
xchg
mov
out
inc
mov
leave
ds
dec
push
inc
lods
sub
loop
cmpsl
insb
inc
pop
xor
negl
cmp
inc
outsb
push
jle
test
gs
loopne
rclb
push
mov
cmp
idivb
mov
dec
dec
pop
cli
daa
fwait
xchg
push
cmp
adc
out
mov
addb
adc
inc
xor
jp
mov
mov
and
popa
jp
insl
adc
mov
jle
inc
test
xor
jae
mov
aad
ss
in
sahf
cmp
ret
push
xchg
jne
and
xchg
fcmovne
and
push
cli
je
ret
adc
mov
mov
insb
rcrl
mulb
ret
push
add
adc
xchg
xchg
inc
xor
in
movsb
push
jmp
icebp
bound
sbb
orb
jp,pn
out
jp
lret
jmp
add
imul
mov
dec
inc
aaa
shrl
push
xchg
data16
lahf
sbb
jnp
call
and
add
sbb
stos
cmp
dec
and
mov
xchg
clc
add
push
loop
test
divb
push
mov
inc
add
jb
cmp
bound
addb
sub
adc
and
xchg
dec
push
std
repz
or
cmc
mov
clc
xor
mov
sbb
ret
xor
repnz
out
ret
outsb
scas
insb
mov
test
data16
js
shll
mov
push
cmp
outsl
mov
mov
inc
sub
lahf
mov
in
ds
insb
gs
push
dec
jns
cmp
sti
mov
ret
mov
call
push
adc
sti
cmpsb
fsubp
cwtl
cmc
stc
adc
inc
fistps
sbbb
xor
ja
push
stos
sub
lcall
lods
add
rolb
add
stc
in
push
aam
and
das
mov
mov
mov
loope
mov
popf
pop
mulb
fisttpll
dec
pop
fbstp
xor
jo
dec
push
outsl
outsb
inc
fsubrp
pop
test
jl
cmp
std
adc
xor
cmp
xchg
mov
cmp
lahf
repnz
insb
cmc
push
das
outsl
movsl
mov
and
test
sub
outsl
xchg
or
fstpt
cmp
andb
out
adc
gs
fnstsw
cmc
mov
cltd
xor
xchg
daa
adc
call
scas
scas
popf
mov
inc
add
adc
loope
add
in
pushf
roll
dec
lea
gs
cmpsl
cli
sbb
mov
fsubs
bound
mov
fs
movsb
test
add
test
cmp
cmpl
fucomip
or
sarb
xchg
or
dec
out
sbb
jp
sbb
pop
push
and
or
sbb
lea
jae
inc
shrl
push
test
aad
loope
mov
mov
dec
add
push
test
jl
aaa
dec
jmp
jns
outsl
pop
stos
stc
mov
mov
outsb
ja
sbb
lahf
pop
mov
outsb
mov
movsb
lods
std
andb
fwait
cmpsl
mov
popf
jnp
lds
sbb
mov
mov
cld
in
ficoml
rcrl
lods
out
inc
fiaddl
lcall
inc
mov
adc
sti
int3
dec
sub
sbb
aas
pusha
and
xor
stos
mov
ror
pop
and
mov
fstl
das
addr16
int
xchg
mov
movsl
xchg
mov
pop
ja
xchg
push
pop
push
ret
lcall
loop
push
ja
popf
scas
jg
dec
mov
gs
je
jno
push
les
stc
xor
push
and
out
sbb
mov
sahf
rcl
dec
inc
iret
in
cwtl
mov
pop
scas
mov
outsl
pop
xor
decb
fistps
sub
test
dec
mov
and
adc
mov
mov
repz
in
ficoms
pop
mov
les
xchg
add
insb
sub
pop
cmp
cmpsl
push
adc
lods
pop
sub
jecxz
and
popa
jbe
fwait
divl
xor
xor
inc
rcl
xor
repnz
jb
fs
cltd
faddl
sar
test
addr16
aad
cmp
icebp
inc
movsb
out
add
pop
bound
mov
push
push
push
jne
aaa
testb
ljmp
cmpsl
jno
stos
cwtl
add
sub
and
xchg
in
jae
addl
xchg
cmpb
push
pop
lret
loop
test
lods
shl
pop
orb
dec
push
icebp
inc
jns
inc
cwtl
imul
sub
xchg
hlt
jge
push
lods
cmp
xchg
lahf
repnz
ret
push
mov
jnp
and
sub
movsb
add
push
mov
adcb
add
inc
mov
push
jno
nop
mov
test
lret
shll
mov
xor
out
into
cmp
pop
mov
lahf
testb
and
js
ret
xor
aas
mov
test
repnz
mov
mov
lods
inc
jl
xor
xchg
lret
pop
hlt
in
test
add
push
fdivrp
fisttpl
lea
stc
pop
es
mov
mov
cmc
mov
enter
sub
cmp
push
inc
testb
cmp
sbb
repnz
pop
mov
mov
adc
or
jl
jnp
add
pop
rorb
xor
adc
and
mov
adc
xchg
in
push
xchg
insb
sarl
xchg
inc
xor
lods
and
mov
inc
mov
mov
data16
shrb
repnz
push
das
sub
xlat
out
sbb
add
je
inc
xor
popa
hlt
and
and
push
pop
xchg
cli
sub
ss
cld
test
pop
mov
cmp
xor
sub
in
jnp
js
fldcw
div
scas
iret
mov
pop
sub
mov
pushf
inc
xor
shlb
insb
es
adc
popf
rcrb
push
addr16
movsb
repz
stc
enter
dec
and
mov
adc
inc
push
loopne
mov
inc
inc
cmc
inc
add
mov
add
lret
dec
xchg
cltd
and
mov
jle
pusha
mov
arpl
and
call
lea
pop
data16
add
movsb
mov
dec
sbb
shrl
cmpsl
fisttpl
and
jle
clc
jae
mov
sub
gs
ja
lret
lret
fstl
loopne
sbbb
pushl
xor
inc
xor
aas
iret
shrl
jge
outsl
fsubs
clc
mov
jg
je
mov
fnsave
xlat
std
inc
sub
dec
xor
pop
mov
sub
ss
es
sbb
movsb
inc
mov
insl
jg
lods
push
xor
mov
sub
in
mov
mov
or
loopne
pop
pop
jge
sub
mov
xlat
jg
add
pop
insl
xchg
aaa
push
push
aaa
sbb
xchg
test
mov
cmpsl
and
jle
mov
dec
xorb
inc
xor
hlt
pop
adcl
and
mov
ficoml
ja
dec
xor
fdivrl
mov
or
lock
mov
xor
scas
pop
sub
mov
push
stos
xor
and
orl
out
aaa
loope
mov
jnp
repnz
sbb
and
subb
lcall
daa
mov
dec
lret
pushf
lahf
je
xor
fs
sbb
clc
lcall
xchg
add
out
lcall
adc
mov
or
in
jne
out
jp
pop
in
push
inc
cmc
mov
xchg
int
aaa
pop
mov
pop
dec
xchg
fisttpl
fwait
push
aas
lods
movsb
sbb
or
push
ljmp
add
xchg
xor
out
repnz
mov
mov
xchg
clc
ret
in
push
mov
test
pop
pop
imul
inc
fisttpl
iret
divb
cmpsb
int
mov
jne
inc
bound
push
fwait
jae
push
and
xor
adc
and
pop
movsl
mov
int
andb
xchg
lock
pop
mov
in
or
sbb
insb
push
lods
pop
sbb
or
test
cmp
or
ret
jl
dec
jmp
sub
ffree
outsb
jmp
xchg
push
sub
mov
andl
aaa
sbb
sbb
mov
lock
in
mov
pop
pop
push
or
jecxz
test
cmpsb
mov
xchg
pop
adc
es
cmp
pusha
mov
insb
push
mov
push
stos
xlat
pop
cs
dec
push
popl
andl
into
push
xchg
adc
xor
inc
and
cmp
xchg
jae
fbstp
call
or
into
push
inc
xor
test
xlat
ds
pop
mov
inc
je
lea
dec
insb
xor
mov
movsl
fstl
aam
xchg
mov
inc
xchg
xchg
in
sbb
icebp
cwtl
jge
sub
cmpsb
sbb
push
hlt
loop
adc
nop
aaa
lock
jmp
mov
dec
in
jo
sub
sbb
pop
add
adc
add
sbb
xor
and
je
jnp
aad
inc
mov
lods
jnp
out
dec
stc
and
pop
adc
sbbb
cwtl
ja
or
cmp
xchg
lods
push
into
cmpsb
decb
push
in
test
jb
xor
fnstenv
pop
lods
cmp
stc
fildll
int3
cmp
or
dec
data16
and
andb
add
mov
and
mov
movsb
and
mov
jne
shl
mov
cwtl
sub
ror
insb
cmp
mov
adcl
mov
jns
ds
pop
dec
imul
jge
or
into
or
or
pusha
dec
mov
inc
sub
jl
rcrl
or
dec
pop
mov
in
push
sub
push
cs
out
mov
sbb
lods
jmp
jmp
jmp
insl
clc
pop
aas
movsl
mov
lahf
jle
pop
cmp
test
into
xor
test
push
add
xor
jno
xchg
sbbl
inc
clc
insb
cs
andl
fdivr
dec
mov
mov
add
mov
outsl
mov
insl
das
sub
into
mov
je
orps
test
xchg
movsl
jp
shl
out
sti
add
sub
or
sbb
xchg
call
jb
daa
scas
es
js
pop
std
xlat
in
pop
inc
loopne
pop
fadd
xchg
mov
push
pop
lret
xchg
lods
rolb
shl
orl
mov
lret
into
int
dec
pop
sahf
cmp
xchg
daa
mov
mov
push
fistps
pop
leavew
jbe
xor
mov
out
mov
jmp
movsl
lea
push
mov
xor
inc
jnp
mov
push
fs
fdivrl
jge
mov
and
sahf
repz
cmp
icebp
pop
ss
mov
jo
adc
cs
fistps
xchg
jns
adc
rcll
jecxz
out
fildl
pop
mov
mov
in
sar
inc
out
mov
or
mov
aam
xor
push
enter
leave
ret
mov
mov
lahf
mov
popf
jle
xor
sub
outsl
cld
dec
add
je
adcl
jmp
push
nop
dec
sub
push
clc
mov
out
andl
dec
or
xlat
sbb
add
fcoml
pop
and
mov
gs
je
mov
mov
aam
enter
cmpsl
jg
or
movsb
adc
cli
aas
add
inc
mov
cmp
repnz
ja
out
xchg
dec
jne
and
imul
dec
js
fwait
jge
lret
inc
cmp
lret
jb
mov
fwait
mov
and
xchg
xchg
fsubrs
cmp
push
jns
push
fldl
mov
leave
jnp
ja
pop
int
push
add
pop
popa
cmp
jg
mov
or
ret
mov
addb
and
push
push
rcrl
lds
outsb
xor
push
sbb
lcall
fdivs
rcr
rcll
mov
and
lcall
add
decl
scas
testl
mov
sahf
faddp
dec
mov
mov
shl
scas
arpl
in
mov
mov
mov
out
pop
repnz
outsl
je
adc
ret
dec
jge
mov
pushf
pop
push
loope
lahf
das
dec
pop
andl
push
sbb
in
mov
shrl
leave
push
ret
movsl
xor
mov
jp
fucom
negl
jnp
xlat
sbb
push
or
test
xchg
or
sub
not
push
jns
addr16
icebp
nop
cltd
test
and
sar
xor
mull
jg
test
stos
mov
insl
xchg
pop
mov
mov
pop
test
cmp
dec
adc
mov
jnp
hlt
sub
pop
sub
clc
sub
nop
cmp
pop
push
stos
mov
ljmp
or
pop
movsb
fwait
jecxz
or
outsl
bound
inc
sbb
sti
cmpsb
addr16
sarl
ret
mov
lahf
xor
jge
int3
pusha
hlt
sub
bound
fdivl
and
mov
jns
inc
jbe
cmp
adc
adc
sarl
adc
out
push
inc
out
sbb
leave
jl
daa
sub
sbbb
rolb
fbld
les
int
pop
std
arpl
imul
repnz
outsl
cli
es
inc
mov
test
push
xor
jle
es
cmp
ljmp
xchg
push
jae
sbb
or
inc
sti
add
sarl
mov
jno
adc
cld
fisubs
inc
shll
dec
or
dec
gs
inc
iret
mov
stos
mov
jne
pusha
lods
mov
outsl
push
or
mov
pusha
inc
xor
ret
sub
and
jne
inc
push
daa
jns
mov
mov
sbb
stos
cmpsl
cld
pop
cmp
lret
push
pop
mov
clc
mov
pop
pusha
fs
cmp
inc
xorb
shrb
mov
inc
pop
or
jle
ds
mov
cmp
mulb
inc
daa
xchg
pop
into
jge
xchg
ja
into
or
pop
pop
sbb
add
aam
or
stos
mov
sub
push
fwait
adc
std
cmpsl
loope
push
inc
dec
insl
xchg
mov
test
pop
mov
lods
sub
add
bound
arpl
rorb
cmp
stc
popf
jne
hlt
adc
repz
das
jae
mov
fucompp
pop
pop
xchg
fiadds
push
test
gs
mov
mov
fwait
scas
bound
fsts
cmp
and
or
lahf
push
xor
sbb
ljmp
sbb
imul
lods
mov
add
loopne
loop
rolb
test
push
sub
jge
aas
sti
pop
repz
mov
gs
mov
cmp
in
sarl
movsb
ss
outsl
add
xchg
nop
cld
mov
cmp
es
das
push
mov
mov
mov
out
and
out
mov
sarb
cmp
and
nop
cmp
push
xor
push
es
sub
in
test
lock
adc
cmpl
or
push
push
or
notl
fistpll
sbb
into
push
pop
pop
scas
cmp
push
push
stos
shl
ds
pop
jno
mov
das
pop
inc
subb
or
sub
dec
stc
cmc
mov
inc
sbb
fmulp
xchg
setge
test
mov
pop
mov
mov
ret
loop
sbb
mov
jecxz
sbb
cmp
mov
xor
movsl
mov
push
in
or
push
outsb
insl
inc
sbb
in
mov
aas
imul
jmp
add
xchg
jge
push
fnsave
inc
enter
push
orb
sub
xor
sti
sarl
push
pop
mov
jecxz
mov
mov
shlb
mov
adc
adc
lahf
bound
not
and
aaa
out
push
aas
mov
mov
push
shr
inc
repnz
xlat
lods
push
in
dec
ss
stc
xor
sbb
and
cli
jecxz
mov
adc
cli
outsb
out
cli
dec
mov
subl
mov
mov
shrb
xor
jl
cmp
leave
mov
cmp
loope
lds
pop
xchg
xchg
insb
sub
mov
xchg
jbe
mov
mov
mov
jp
aas
scas
stos
xchg
loop
js
fldt
fwait
or
ss
imul
lahf
xchg
mov
out
pop
test
nop
cltd
push
sub
xchg
shrb
sbb
jae
lret
fcoms
out
xor
scas
loop
xorl
mov
mov
cmp
mov
repnz
sub
dec
xchg
lods
jno
faddl
or
cmp
es
cld
sub
jne
push
popa
sbb
jbe
mov
movsl
ds
outsl
enter
mov
mov
dec
cmpsb
mov
jp
xor
mov
and
lods
pop
gs
mov
lods
lret
mov
mov
xlat
imul
inc
xchg
mov
out
jle
add
or
push
lret
xchg
mov
punpckhwd
sar
adc
cld
std
iret
loope
test
add
and
ret
lahf
insb
sbbl
cltd
sahf
xlat
mov
test
and
mov
jbe
xchg
mov
sub
xor
inc
and
inc
dec
jo
leave
push
imul
imull
mov
orb
or
mov
inc
sbb
xchg
fsubp
lret
dec
mov
push
outsb
add
inc
mov
ret
insb
test
or
xchg
loop
cltd
into
iret
mov
stc
repnz
jo
or
jns
push
pop
sub
xor
sbb
pop
mov
fisttpll
jns
ror
sbb
insb
push
jle
imul
cmpsb
mov
cmp
lahf
mov
inc
adc
dec
in
xor
push
pop
xor
add
mov
icebp
mov
rcrl
sub
and
mov
inc
mov
pusha
mov
lods
push
adc
sbb
xchg
stos
xchg
stos
sbb
ret
or
fwait
lock
dec
daa
jmp
mov
out
xor
jmp
sbb
push
es
aaa
rcrl
add
xchg
xchg
xor
pushl
mov
sbb
rcrb
lea
ds
jp
inc
xchg
sti
stos
pop
push
or
pushf
xor
fcoml
mov
jge,pt
mov
mov
cltd
imul
add
fcomps
dec
jmp
fs
or
mov
adc
jp
sti
imul
orl
sbb
aad
xchg
add
fwait
dec
imul
dec
push
or
inc
mov
mov
loopne
push
jp
sbb
xchg
in
shrl
and
or
mov
ljmp
leave
cmpb
mov
jl
pushf
mov
sbb
lock
sub
inc
cmp
ficoml
cmp
fsubrs
mov
sti
ja
sub
js
repz
and
cmp
fwait
xor
dec
xor
mov
cmp
filds
fidivrl
inc
ljmp
test
jno
pop
and
mov
enter
jle
loope
lret
mov
mov
jae
sbbb
mov
shll
imul
lods
inc
sahf
inc
jmp
clc
nop
mov
ljmp
lods
sub
icebp
sarb
xor
test
jle
lcall
stc
and
jle
hlt
cli
inc
lods
xchg
xchg
mov
insb
mov
je
repz
jmp
leave
iret
icebp
cmp
sbb
inc
lcall
fldl
cmpsl
cli
xchg
pushf
cwtl
cltd
mov
jns
jns
mov
mov
fimull
or
dec
in
out
inc
insb
xchg
sub
test
jae
sbb
iret
fcoms
outsl
mov
xlat
out
jle
fiadds
adc
cmp
rclb
mov
sbb
pop
mov
jmp
sbbb
sub
popa
je
lods
subb
les
cltd
sbb
push
xchg
and
fsubl
sbb
dec
xlat
xchg
imul
mov
mov
mov
adc
xor
sub
or
xchg
push
sub
notb
inc
decb
jge
jl
ja
xchg
push
lret
mov
push
imul
adc
les
add
out
jmp
subl
inc
lods
add
sub
xchg
aam
sbb
inc
sti
adc
xchg
in
testl
lds
and
push
push
adc
test
mov
fidivrs
inc
xor
in
add
or
int3
in
mov
add
addl
lods
lods
xor
lock
inc
adc
mov
mov
inc
fmull
das
xchg
mov
mov
int3
ss
mov
xchg
jg
cmp
arpl
ret
or
pushf
xchg
int
std
dec
imull
add
je
lahf
push
mov
mov
add
cmp
xchg
lds
push
pop
fcompl
stos
add
les
adcb
shufps
xchg
dec
and
xchg
aam
pop
xor
pop
xchg
mov
loope
lcall
cmp
push
jge
call
xchg
shld
add
lods
cmp
jge
mov
mov
sub
mov
lock
aaa
mov
pop
icebp
loope
out
xchg
mov
cltd
cld
test
and
add
jns
xchg
push
lea
jge
ljmp
nop
lods
pop
rorb
out
popa
inc
int
mov
mov
or
pop
ja
sub
stos
idivb
push
xor
xchg
cmc
movsl
xor
mov
fimuls
jo
imulb
add
mov
pop
ja
add
lods
insb
mov
xchg
dec
fstps
cli
rol
in
js
mov
and
inc
pop
in
sub
jecxz
and
mov
pop
out
call
loopne
jne
fs
mov
lcall
out
rcrb
stos
outsl
mov
jle
jns
inc
cmpsb
rcl
cmpl
push
jl
jge
into
add
jbe
fsubs
mov
daa
dec
mov
or
push
pop
aaa
mov
push
scas
roll
adc
xorb
xchg
mov
cmp
mov
push
rorb
mov
lods
or
insl
fwait
lret
fdiv
in
loopne
fdivrs
lahf
lahf
xchg
cmp
lcall
cmp
xor
sub
outsb
in
mov
mov
sub
outsb
jle
mov
repnz
push
xor
dec
xchg
sub
and
push
lods
prefetch
nop
sar
sbb
outsb
mov
popa
mov
std
jne
xor
ret
xor
mov
xor
dec
es
fcoml
sbb
jg
mov
lds
add
push
xor
jge
ret
pop
jmp
sbb
les
fld1
adc
sbbb
stos
inc
ret
xchg
test
loop
insl
icebp
shll
mov
ljmp
cmp
push
lcall
mov
inc
mov
ds
aad
popa
int3
and
enter
sbb
xor
addr16
mov
sub
push
lcall
in
cmp
in
fs
das
mov
adc
out
push
icebp
mov
jmp
sti
repnz
mov
sahf
in
sbb
imul
rcr
cwtl
insl
in
inc
es
pushl
and
sbb
adc
incb
cmpsb
dec
mov
mov
inc
mov
jns
in
test
shl
aad
mov
and
sbb
pop
inc
or
and
sar
sub
cmp
xor
sub
push
dec
mov
test
xchg
addr16
xor
sbb
adc
adc
pop
mov
cmp
adc
cmpl
jmp
jno,pt
aad
or
sbb
inc
imul
jo
outsl
cmc
movsb
dec
fdivs
mov
test
jmp
test
iret
or
enter
inc
lret
mov
xchg
sub
repz
push
mov
pop
pop
lahf
xchg
or
pop
orb
xchg
negl
dec
scas
cmp
mov
call
clc
aaa
xlat
negl
xor
push
test
jp
daa
xlat
ror
jg
xchg
jae
pop
and
in
fnsave
into
aaa
xor
pop
rcrl
jge
pop
arpl
loope
mov
ret
xor
cwtl
jb
pushf
mov
xor
xchg
xchg
dec
stc
cltd
popf
lret
adc
aaa
lret
pop
add
xchg
fnstsw
sti
mov
les
lea
sbb
adc
les
mov
popf
and
mov
dec
sbb
jle
test
gs
xchg
add
movsl
xlat
xor
pop
or
pop
scas
sahf
or
sbb
inc
rorb
fmull
dec
push
mov
repz
inc
and
sub
les
ret
aas
pop
xor
add
mov
shll
cmpsb
or
jbe
ja
jg
xchg
test
loop
adc
ja
je
add
lret
dec
daa
test
add
sub
fstpl
clc
adc
pop
push
sar
or
cmp
roll
aaa
addr16
fnstsw
or
and
xchg
cwtl
inc
repz
xchg
push
dec
jnp
popa
mov
cli
cmp
leave
les
fdiv
in
mov
mov
ds
rcrb
mov
inc
fcoml
mov
shrl
mov
lds
fldl
pop
mov
call
mov
xchg
fs
sti
mov
jnp
js
mov
sbb
ret
mov
or
mov
in
mov
sbb
mov
aad
leave
xor
mov
popa
mov
out
lods
jbe
cli
in
mov
pop
repz
test
pop
mov
mov
shrb
insl
addl
jno
rcrb
mov
outsb
aaa
mov
sub
jecxz
fsubl
cltd
lods
icebp
gs
xchg
mov
mov
pop
cli
stc
inc
ret
mov
add
insb
inc
or
shr
sub
add
movsb
sarl
loope
xchg
cwtl
flds
fs
and
xor
and
cmp
dec
std
in
gs
mov
rclb
test
aas
out
pop
xor
cmpsb
jnp
pusha
sbb
xlat
lea
test
adc
fistps
mov
enter
xchg
shl
mov
dec
xchg
pushf
lcall
subb
repz
cmp
data16
inc
xchg
rolb
std
pushf
pop
out
mov
daa
xor
cmp
cmc
pushf
xchg
out
xchg
xchg
popf
jno,pt
or
pop
jecxz
inc
inc
dec
jg
out
in
inc
clc
jae
or
jo
in
fisubs
sahf
xchg
fadds
pusha
loope
imull
ss
mov
int3
fimuls
jmp
mov
push
inc
jbe
pop
into
mov
adc
xchg
pop
xchg
pop
add
push
test
adc
das
mov
jae
aad
pop
fistl
mov
fstpl
cmp
in
or
dec
fidivrs
mov
xchg
ret
mov
cmp
sahf
jg
sub
inc
loope
push
stc
adc
mov
xor
rcrb
cmpsb
lret
xchg
push
or
out
adc
and
xchg
mov
icebp
mov
mov
bound
fwait
jbe
fidivrs
imul
mov
ret
testb
push
or
rcrl
jl
adc
std
fisubrl
xor
popf
lret
cltd
and
gs
daa
adc
add
sarl
add
in
cwtl
stos
inc
lds
es
ss
mov
in
xchg
mov
icebp
lods
loope
dec
sub
fdivl
cmp
loopne
push
mov
mov
mov
aaa
in
js
out
inc
fnsave
or
fstp
mov
fcmove
ret
xor
dec
nop
addb
and
rcl
mov
aam
mov
and
push
adc
fwait
mov
cwtl
jl
and
leave
out
jb
orl
mov
out
mov
hlt
cmp
xchg
int
lods
sbb
dec
lods
mov
popa
stc
adc
shl
repnz
dec
aad
orb
fcoml
mov
push
fidivl
add
mov
pop
jecxz
out
lods
sarb
cmpsb
shrb
cmpsb
add
and
js
mov
xchg
adc
xor
test
xchg
mov
jp
cwtl
add
cltd
jge
movsl
xchg
mov
sbb
push
mov
xchg
cmpsb
or
sub
sub
aam
xor
adc
movsl
xchg
push
data16
scas
lret
sub
lcall
pop
ret
jecxz
cmc
repz
cmc
dec
sub
pop
xor
mov
lea
cld
pop
lcall
pop
sbb
xor
mov
jl
xchg
xor
jno
xor
dec
fxch
sar
mov
filds
sub
fmull
and
add
jns
and
std
xorb
lock
mov
mov
pushf
mov
mov
sub
ret
test
daa
push
dec
imul
dec
sub
or
outsb
mov
pop
sub
test
outsl
dec
sarl
mov
movsb
insb
movsb
cs
lcall
push
in
lds
push
adc
fnclex
pop
test
bnd
adc
cmpsb
mov
insb
mov
mov
fcmove
push
std
cmpb
cmp
push
fcoml
test
dec
or
dec
mov
dec
inc
cmpb
cmp
adc
pop
and
push
fs
mov
mov
jnp
mov
sbb
jg
pop
aad
cli
inc
push
aaa
inc
cli
cmp
add
add
xor
jb
dec
into
in
insb
sub
imul
cmp
sbb
insl
jle
cwtl
mov
dec
adc
fcomps
leave
or
add
xchg
mov
xor
mov
andb
movsb
imul
push
xchg
push
lds
call
mov
push
int
jae
jmp
daa
nop
pushf
xor
sub
in
sub
out
sub
inc
mov
cmc
int3
dec
dec
dec
push
mov
out
repz
cltd
mov
pop
cs
jnp
mov
fldenv
sbb
xchg
inc
es
jmp
ss
cmp
mov
fwait
lcall
dec
nop
daa
sub
bound
repz
jp
jo
outsl
sub
jmp
ret
outsl
dec
cwtl
mov
inc
sbb
arpl
dec
push
jg
mov
sbb
adc
push
mov
mov
xchg
test
loopne
rcll
mov
movsl
mov
cmc
fwait
mov
pop
int3
ficomps
dec
fmull
loopne
sbb
test
mov
rep
shrl
jmp
icebp
hlt
dec
pop
dec
fisubrl
sti
sti
and
mov
clc
cmpsl
jecxz
pusha
sub
jmp
and
xchg
jb
addr16
xchg
addr16
jnp
fcmovne
call
inc
mov
rcl
call
scas
dec
xlat
push
nop
and
inc
movsb
inc
mov
aam
in
pusha
mov
xchg
ljmp
jmp
inc
into
mov
add
adc
mov
lcall
pop
jle
pop
pop
shll
sbb
stos
fnsave
mov
cs
xchg
dec
not
cmpsb
and
js
xlat
xchg
inc
xchg
push
sub
aad
xor
stos
cmp
fidivrl
push
in
iret
sti
adcl
adc
mov
cmc
add
and
dec
adc
clc
fwait
add
daa
dec
aas
loope
shrb
aas
gs
arpl
pusha
adc
loopne
std
dec
mov
push
in
sub
test
lods
dec
out
xor
cmp
ljmp
stc
push
sub
test
leave
fwait
adc
and
outsl
mulb
enter
mov
dec
les
fildll
test
pop
inc
pop
xchg
outsb
pmulhw
mov
dec
xor
cmpsb
test
mov
es
inc
out
movsl
fwait
pop
scas
bound
sbb
lods
lds
add
aaa
cltd
dec
xchg
pop
ljmp
inc
dec
xor
jno
rcll
enter
mov
sub
xchg
dec
gs
mov
jns
pop
dec
push
push
lds
clc
cltd
les
outsl
nop
xor
loope
inc
popa
sub
sbb
xchg
mov
ret
les
dec
or
jnp
ret
xchg
pushf
pop
push
dec
int
mov
or
into
xchg
aad
jle
jne
or
or
scas
sub
fimuls
inc
mov
and
stos
mov
cmp
loop
cmp
xchg
push
popf
shl
loope
mov
in
movb
sbb
inc
push
divl
xchg
jnp
inc
mov
mov
sub
nop
cmp
dec
insl
xor
cld
rcr
mov
lret
dec
mov
xchg
xchg
jne
iret
lcall
add
or
pop
mov
mov
test
pop
mov
imul
xchg
loop
xchg
call
pop
push
xor
mov
je
cmpl
imul
mov
in
push
jbe
add
insb
arpl
sub
insl
pop
mov
inc
add
xor
daa
cs
roll
clc
insb
mov
sbb
mov
jb
jp
adc
sub
and
xchg
inc
jge
es
pop
mov
repz
add
movsl
push
adc
in
loopne
add
aas
in
ret
imul
fcmovb
andb
fwait
sbb
cmp
notb
cmp
add
sbb
movb
stos
push
bswap
inc
outsl
mov
lods
ficoml
adc
jg
ljmp
xchg
xor
mov
jae
push
mov
lret
cmpsl
imul
push
movsl
and
addr16
loop
xchg
std
imul
ret
cmp
repnz
push
stos
mov
inc
mov
push
jbe
mov
divl
sbb
aad
sar
scas
dec
cmp
dec
stc
sub
bnd
xor
stos
arpl
popa
adc
dec
pop
push
adc
sbb
shlb
inc
mov
push
rcrb
mov
idiv
mov
dec
out
cmp
sub
push
pop
sub
mov
or
mov
push
out
sar
and
pop
jae
jo
shll
dec
push
xchg
cmc
gs
adc
cmp
popf
xor
aas
xchg
jmp
mov
lahf
jp
outsl
jnp
push
dec
xor
out
xchg
gs
jge
xorb
and
addr16
pushf
add
mov
jnp
mov
iret
shl
iret
nop
xor
pop
inc
mov
dec
fprem1
rorb
hlt
cmp
outsb
push
outsb
imul
sahf
popa
mov
or
cmpsl
and
mov
andl
repz
stos
scas
mov
pop
jno
jno
out
pop
and
lret
and
dec
sahf
movb
mov
jmp
cmpsl
daa
aas
imul
xchg
arpl
ret
roll
push
dec
or
fs
sub
cwtl
jbe
mov
push
push
xchg
xchg
in
pop
cmpsb
sbb
add
xor
xor
pop
nop
dec
jns
mov
xchg
lock
daa
mov
and
mov
fstp
aaa
test
fstpl
shr
enterw
call
ja
filds
jno
adc
lcall
outsb
rolb
mov
mov
sbb
cmp
jb
scas
mov
mov
mov
rcll
or
sbb
add
or
divl
pop
add
sbb
mov
pushl
mov
push
add
and
xor
movsl
mov
ljmp
repnz
xorl
cli
aad
inc
push
push
shll
icebp
imul
push
cmc
jecxz
pop
mov
cwtl
sub
aad
push
aad
loop
and
loopne
ret
js
inc
adc
xorl
mov
mov
mov
out
pop
mov
mov
hlt
jne
push
cmp
sbb
aad
repnz
inc
dec
mov
insb
inc
pop
out
sarl
sbbl
lret
rcr
int
push
cmp
sbb
sub
jp
rcrb
jmp
xchg
mov
jecxz
mov
dec
xchg
scas
dec
push
push
loopne
jb
cmp
pushf
jp
in
out
push
and
inc
gs
cld
cwtl
stos
dec
aas
test
jno
lea
push
popf
pop
data16
fidivrs
jno
fistpll
in
test
sub
pop
xchg
adc
xchg
mov
add
xor
movb
jge
mov
addr16
call
stos
mov
js
loope
adcl
pop
cld
loopne
xchg
fs
sub
pop
aam
mov
sbb
and
shll
pop
pop
adc
xchg
mov
mov
pop
je
lods
xchg
sahf
outsl
sahf
xchg
out
ds
test
xor
mov
push
adc
add
fs
push
aaa
imul
inc
stos
sub
or
lcall
ficoml
push
push
bound
orl
and
leave
xchg
cmp
popf
std
cmpl
mov
addr16
cmp
add
pop
xor
sub
mov
test
ljmp
mov
out
adc
mov
or
stos
addl
mov
cld
push
fsubrs
mov
xchg
mov
fldenv
push
jo
mov
pop
lock
sbb
xchg
mov
mov
or
unpckhps
adc
test
cmp
rcr
xor
dec
hlt
in
inc
add
pop
cmp
add
mov
decl
popa
lahf
cli
sub
in
fdivs
testb
inc
fwait
adc
cmp
cmp
inc
out
movsb
add
movsb
dec
xor
add
xchg
xor
mov
push
and
fwait
lods
cld
addr16
dec
test
or
enter
pop
ja
mov
rclb
inc
nop
daa
or
push
out
or
hlt
cmp
cmp
mov
out
shl
movsb
pop
sahf
mov
out
sub
test
mov
inc
mov
pop
and
jbe
pop
jg
shr
mov
xchg
mov
mov
dec
jl
push
sub
or
push
stc
mulb
or
les
jl
mov
scas
stos
add
stos
jo
push
and
push
fs
movsb
cmp
mov
aad
push
xor
leave
sti
and
repz
jg
mov
ret
push
shll
xor
jle
cmpl
pop
in
xlat
rep
mov
cld
push
ss
daa
jae
dec
cmp
sarb
mov
pop
psubusb
divl
xor
dec
jo
iret
or
mov
sub
mov
outsb
sti
xor
add
dec
ss
stos
dec
js
push
sub
jnp
lods
cmp
mov
mov
pop
dec
xlat
mov
out
std
jb
loop
mov
cli
add
sahf
adc
and
add
and
xor
stc
xor
fmulp
loop
js
mov
mov
xchg
movsb
add
jmp
fucomp
sti
es
insb
sbb
loope
movsl
sub
add
test
arpl
or
in
movsb
lds
or
pop
xchg
into
cld
xchg
fwait
inc
mov
mov
dec
loopne
sub
mov
sti
sub
stos
sbb
mov
fbstp
mov
insb
mov
out
cmpb
adc
push
rorb
ja
dec
xchg
mov
push
jmp
jb
fadd
jns
aad
cwtl
and
add
sbb
ljmp
dec
push
jo
add
fwait
popf
sti
popf
out
insl
xchg
sarl
inc
and
jne
push
pop
jl
adc
es
out
mov
mov
or
fnsave
fadd
jmp
and
xor
mov
cmpxchg
sub
std
and
sub
jmp
cmpsl
sub
add
sub
clc
cmp
into
dec
sub
adc
cmp
insl
cmp
int3
inc
pop
aaa
cltd
mov
ja
outsl
scas
and
pop
dec
rcll
sti
stc
push
jo
mov
dec
push
shrl
dec
ljmp
lret
movsb
insb
push
inc
movsb
mov
imul
in
dec
xor
jb
cmp
lret
out
adc
mov
pop
inc
xchg
jo
or
pop
data16
cmc
fs
dec
jns
mov
ds
pop
cs
dec
jmp
pop
dec
dec
aas
and
std
testb
shlb
shl
frstor
mov
and
xchg
sahf
pop
notl
bound
cmp
xchg
mov
ja
stc
push
lods
imul
xor
jae
jl
imul
test
stos
mov
mov
pop
xchg
aam
loope
mov
push
mov
or
sahf
cmpb
and
and
inc
repnz
aas
or
inc
mov
mov
nop
aam
fs
pop
lret
rol
lods
in
push
je
loope
or
jns
jb
mov
pop
xchg
dec
sbb
jb
stc
mov
and
das
addl
and
mov
and
hlt
or
dec
push
or
int3
or
in
les
pop
inc
cmp
add
mov
or
ja
inc
mov
dec
sub
subb
mov
lock
cmp
rcrl
and
dec
pusha
add
push
jmp
add
xor
cltd
pop
cwtl
push
cmpsl
mov
push
mov
mov
test
test
std
in
shll
ljmp
in
and
mov
cs
xor
testl
mov
clc
out
adc
cmpsb
lods
sub
push
fcomps
xor
int3
xchg
mov
das
movsb
rolb
dec
out
js
mov
cmpsl
push
jns
into
scas
stos
push
xor
jb
inc
aad
fdiv
std
test
testl
rol
sub
jle
mov
pop
mov
mov
xor
addr16
cltd
std
mov
gs
push
in
pop
test
jp
push
ret
add
push
pushw
outsl
daa
mov
mov
lahf
loop
push
es
repnz
adc
fs
dec
or
cwtl
loope
dec
pop
cltd
inc
int
popa
imul
repnz
stos
insb
in
in
test
and
push
int3
cltd
fcmovnb
adc
sbb
xor
inc
cmpsl
leave
mov
aad
cmp
outsb
mov
sahf
rolb
push
outsb
lods
and
xchg
jno
sub
movsl
push
mov
xchg
test
pop
xor
addr16
das
pop
js
pusha
xchg
je
daa
lcall
jbe
lahf
pop
add
mov
xchg
mov
lock
fwait
pop
imul
sub
roll
hlt
loope
sub
xor
dec
scas
pop
ret
orb
inc
sti
xchg
cld
mov
test
sub
pusha
or
popf
stos
mov
cmp
xor
sbb
repnz
mov
fstpl
divb
outsb
inc
test
sub
jecxz
out
sbb
std
inc
repnz
dec
mov
iret
xchg
out
clc
scas
shlb
test
lcall
mov
mov
mov
add
stos
pop
mov
call
jmp
lret
adc
xchg
loope
ss
pop
cmpsl
shrb
mov
jge
dec
out
push
cli
in
push
inc
jo
aaa
inc
cmp
out
adc
jecxz
shl
mov
adc
mov
xor
fnstcw
ja
iret
pop
pusha
jmp
push
test
sbb
lock
and
arpl
testb
shrb
dec
mov
push
sbb
mov
pusha
lock
inc
test
xchg
dec
data16
and
xchg
push
out
add
addr16
mov
lock
add
sub
push
xor
fsubs
jmp
sbb
outsl
adc
mov
xchg
xchg
mov
add
jne
negb
sub
sahf
popa
or
pop
xor
daa
jae
cmp
insb
dec
jbe
add
out
iret
pop
enter
fs
movsb
imul
sti
sub
cmp
fildll
adc
outsl
dec
push
pop
rcr
add
out
ss
mov
gs
fcompl
hlt
mov
loopne
movlps
popa
adc
fadds
clc
ret
out
cmp
pop
sbb
sbb
cltd
fstpl
dec
dec
fldl
aam
mov
mov
lret
popf
dec
sti
mov
mov
sub
adc
push
dec
getsec
jecxz
shlb
push
inc
xchg
lods
push
test
cli
inc
neg
leave
push
add
lds
sub
pushf
insb
mov
subb
mov
adc
sub
lcall
push
loop
adc
xor
cmc
jle
arpl
das
mov
test
in
and
outsb
jbe
wrmsr
and
push
dec
sub
dec
aad
jge
test
testl
fs
fstps
out
dec
sbb
idivb
mov
mov
scas
ljmp
xchg
test
xor
sbb
add
inc
cli
ret
sub
lds
dec
jecxz
sbb
ljmp
lret
je
and
sbb
xor
loopne
pop
rcll
test
and
add
sbb
xchg
stos
icebp
push
nop
sbb
addr16
jnp
je
sbb
gs
mov
leave
adc
mul
sub
in
bound
ljmp
movsl
pushf
xchg
enter
cmp
insb
cmc
jecxz
lods
mov
dec
test
lret
cmp
sti
pop
xor
add
adc
jmp
inc
sbb
stos
adc
popa
das
clc
cmp
gs
movsl
in
sub
test
cltd
into
pop
jns
sub
mov
pop
outsb
loop
jle
outsl
sub
mov
cld
clc
inc
mov
mov
jbe
ds
cs
aas
or
cmp
xchg
addl
fwait
xor
daa
scas
ss
cs
aam
mov
mov
dec
lods
pop
inc
mov
leave
pusha
pop
stc
xchg
xor
push
pop
cmp
sub
cwtl
out
mull
mov
lock
adc
sbbb
dec
or
xchg
dec
jle
sbb
icebp
sub
aas
xchg
lcall
rolb
mov
adc
rcrl
sub
repz
add
pop
adc
sub
or
fs
add
sbb
mov
in
jb
xchg
clc
hlt
sbb
aaa
pop
dec
shlb
out
lds
mov
loope
adc
xchg
xchg
ret
xchg
jo
mov
mov
pop
mov
inc
outsb
sbb
push
imul
inc
cli
mov
mov
adc
fwait
xchg
out
adc
aaa
fwait
sub
mov
push
mov
stos
sub
xchg
push
pusha
and
cltd
cmp
add
scas
mov
adc
ror
mov
leave
xchg
and
mov
jle
movsb
sbb
cmp
pop
dec
jmp
aad
pop
movsb
movsl
pop
inc
pop
mov
jle
test
mov
faddl
adc
pop
shrl
and
outsl
push
dec
add
cld
jmp
mov
mov
dec
dec
or
xchg
ds
push
fs
cld
add
mov
sub
jo
mov
mov
xlat
xchg
out
daa
xchg
xchg
gs
mov
addr16
inc
pushf
roll
das
ja
mov
jp
inc
sub
lods
sbb
jne
dec
mov
push
mov
lds
das
sbb
nop
mov
xchg
jae
adc
xor
nop
mov
pop
fsubrs
push
notb
inc
mov
jp
movsl
cld
jmp
jl
pop
into
sar
inc
jo
adcb
and
jge
mov
mov
inc
leave
mov
fs
aam
lea
loop
shl
lret
sbb
cmpl
xorl
in
test
push
roll
jo
fwait
test
push
and
rcrb
icebp
xchg
add
xchg
popa
jo
add
pcmpgtw
int3
int3
imull
dec
div
leave
push
jmp
xor
into
inc
sbb
push
stos
decb
cmpsb
or
cmp
add
sbb
push
inc
jbe
add
mov
inc
mov
jb
ja
imul
outsb
mov
mov
fnstsw
inc
out
mov
aas
int
outsl
jmp
mov
je
or
mov
and
jecxz
sub
xchg
lods
lods
gs
adc
daa
das
mov
xor
aas
jmp
xchg
mov
xlat
push
popf
sbb
les
in
lods
cmovp
mov
xchg
shlb
add
adc
out
sarb
shll
jmp
cmp
or
mov
push
aad
sbb
xchg
cmp
ja
xchg
lcall
fmul
dec
nop
hlt
insb
xchg
faddp
insl
js
js
movsl
xchg
lret
movsl
es
push
dec
inc
adc
aam
mov
insl
lret
sub
and
lods
in
inc
out
roll
or
pop
xchg
test
sbb
lods
inc
fmulp
iret
mov
inc
movsl
lods
cmpsl
cmp
lods
clc
sub
stos
dec
mov
xchg
pop
or
icebp
ret
int3
cmp
stos
sbb
sub
sub
aaa
in
mov
or
rcrb
in
das
pusha
xchg
jp
outsb
mov
sbb
hlt
xchg
out
jl
sbb
dec
pop
pop
mov
mov
pop
imul
xlat
lds
std
adc
jge
sbb
fsubrs
lock
add
pop
inc
loop
adc
inc
inc
jns
popl
sub
jl
cmpsl
pop
add
hlt
mov
push
gs
cmc
sbb
lods
pop
fdivrl
lea
nop
fdiv
lds
inc
in
cmp
lea
arpl
push
stos
ret
in
push
or
push
orl
xor
outsb
div
xchg
jnp
jl
lods
mov
in
jo
and
xchg
and
js
add
ja
leave
gs
pusha
out
pop
lea
mov
ds
nop
mov
je
adcl
xchg
mov
xor
pop
test
mov
push
xchg
shl
std
cmpl
int3
ffreep
pusha
mov
fistl
js
fs
je
mov
mov
bound
aas
std
cltd
dec
add
push
push
xchg
les
cld
sbb
imul
push
clc
mov
divl
loopne
lods
enter
xor
test
sbb
adc
inc
sahf
imul
xchg
lds
jns
out
mov
cmp
cli
loope
ud2
int
add
fs
jo
aam
pusha
jae
testb
lock
jge
add
xor
lods
jmp
jl
sarl
add
in
dec
cmc
repnz
ljmp
lods
testb
add
xchg
xchg
rcrb
mov
xor
cmpsb
movsb
pop
shl
mov
pop
fldl
fistps
cmp
jge
mov
push
aad
add
adc
jb
mov
cmpsb
sub
sub
xlat
int
dec
pop
xchg
imul
push
popa
mov
insl
cmp
jb
pop
les
xchg
lcall
les
mov
lods
arpl
das
add
cli
js
xchg
mov
adc
jmp
scas
rorb
pop
insl
mov
dec
adcb
cmp
lock
aas
rcrl
lods
xchg
cld
lret
nop
aam
popf
sti
jge
add
jns
lods
sub
jno
loope
push
mov
or
in
cmp
sub
inc
popf
sbb
call
mov
mov
push
lods
jp
fcomip
jg
xor
imul
dec
fsqrt
pusha
or
xor
mov
test
lret
ljmp
add
jle
or
dec
or
adc
repz
in
dec
decl
cmp
out
xchg
out
cmp
cmpsb
add
mov
inc
loopne
jno
xchg
sti
sbb
cmp
mov
dec
mov
pop
je
push
sub
cwtl
int3
in
mov
mov
sub
bound
cmp
ss
insb
ljmp
push
adc
test
add
pop
xchg
call
shr
add
pop
loope
mov
xchg
fcmovnu
aas
iret
inc
sub
pop
lods
test
out
leave
pop
push
ljmp
lahf
mov
loop
sbb
stc
push
outsl
or
inc
and
xchg
pop
jo
add
xor
test
jmp
in
add
xor
jle
popf
mov
jl
test
daa
add
mov
mov
dec
cmp
inc
jne
dec
pop
cmp
negl
xor
adc
mov
and
inc
shrb
mov
mov
and
pop
add
mov
mov
dec
daa
sub
mov
nop
lret
add
fisubrl
adc
xchg
aad
adc
jne
inc
addr16
mov
cmp
mov
xchg
out
and
call
push
inc
mov
jecxz
rorl
add
dec
imul
ret
retw
in
push
jnp
test
jge
cld
rolb
push
adc
inc
testl
mov
sbb
lret
adc
shll
insb
dec
enter
cmp
mov
xor
test
pop
aad
jmp
sti
arpl
aad
call
mov
lcall
pop
in
xorb
mov
mov
std
adc
inc
xor
jae
pushw
in
pop
mov
push
pushf
mov
jge
sub
add
popl
pop
aaa
mov
sbb
fsubrs
xorb
es
jecxz
fimull
lcall
xlat
inc
icebp
xchg
ret
cwtl
pop
idiv
aad
dec
fsubr
mov
pop
in
adc
bound
and
ret
jo
adcb
popa
gs
test
push
loope
pop
xor
cmp
in
xchg
sarl
and
xchg
or
mov
setne
cmp
pushf
and
push
lods
add
xchg
mov
xor
xchg
in
lret
sbb
xor
ficoml
fiaddl
xchg
fcomps
idiv
mull
lea
fisubrl
pop
mov
xor
ret
jo,pn
pop
adc
pusha
js
sbb
rcrl
shll
sbb
mov
das
out
int3
fwait
push
std
int3
xchg
xchg
ss
xchg
loope
or
pop
sbb
repz
inc
out
fdivl
xchg
imul
xorb
xor
xor
sbb
outsl
sub
ss
jns
mov
mov
fs
std
or
and
hlt
fst
jmp
cwtl
test
aam
rorb
add
cmp
repz
pop
addb
ljmp
popf
sbb
stos
icebp
jne
push
movsb
lods
imul
shrl
sbb
hlt
orl
std
ss
jmp
jnp
ret
jnp
mov
pop
jge
jbe
sbb
push
cmp
xor
sbb
mov
faddl
outsb
push
mov
inc
or
pop
add
jbe
pop
shlb
stos
jmp
mov
mull
pop
lret
and
in
imul
ds
mov
sti
xchg
mov
stos
rcll
sbb
bound
add
aaa
and
pushf
out
fsubl
bound
nop
cwtl
ficompl
mov
push
add
cmp
stos
adc
xor
mov
iret
xlat
sub
cmp
sub
xor
inc
lret
out
add
mov
mov
pop
xor
icebp
xor
arpl
imul
add
outsl
mov
enter
fadd
mov
xchg
or
or
je
sbb
cmpsl
cmp
or
lret
shrl
push
and
out
pop
popa
outsl
dec
inc
jle
jge
adc
add
stos
test
sub
xor
push
pop
lods
stos
add
xlat
lahf
das
lret
cmp
pop
and
popa
push
hlt
mov
or
mov
mov
push
and
sahf
pop
cmp
and
in
xchg
xor
push
rcrl
pop
sti
pop
lock
sbb
xorb
rcrl
mov
push
jg
push
xor
pop
push
cwtl
cmp
xor
mov
js
dec
jle
imul
or
jmp
lods
inc
xchg
outsl
pop
shrl
dec
cmp
jmp
cmp
push
pop
or
push
unpcklps
adc
xchg
push
in
mov
cmp
or
sub
jg
xchg
sub
add
pusha
je
jns
push
in
enter
iret
imul
dec
insb
jle
shll
lret
fiaddl
imul
mov
mov
loop
fmuls
push
mov
fisubrl
lods
sbb
clc
cld
ja
jns
cli
push
dec
add
adcb
adc
fiadds
in
push
and
cld
sbb
adc
lret
std
dec
mov
sarl
lods
jb
mov
mov
fstpl
xor
mov
xor
daa
nop
xchg
in
xchg
mov
and
xchg
push
push
repz
dec
test
lds
add
and
sbb
scas
add
dec
push
mov
imul
push
jnp
and
out
inc
sbb
mov
inc
popa
nop
cmc
cs
sbb
stc
je
jge
push
xchg
mov
insl
mov
push
test
loop
movsl
sarb
mov
arpl
mov
jmp
inc
inc
fs
sub
sbb
add
daa
jnp
jb
jmp
inc
add
dec
fwait
mov
fsubl
jbe,pt
mov
imul
push
leave
dec
inc
mov
sti
xchg
push
fsubrl
jno
mov
pop
std
inc
or
adc
out
mov
xor
out
wbinvd
jno
cwtl
adc
aam
cmp
and
pop
pop
mov
pop
xor
adcb
jae
mov
adc
ja
out
pop
push
xchg
inc
cmpl
jno
push
aam
stos
in
imul
daa
and
lock
dec
or
andb
notb
mov
aas
xchg
adc
fnstcw
xor
pop
cmp
mov
in
dec
fsubrs
mov
das
daa
jl
js
xor
push
scas
test
insl
lds
cmpsb
jae
lret
xlat
inc
xor
cmp
cmp
xchg
repnz
gs
lea
sbb
xor
adc
cwtl
sahf
scas
jmp
inc
or
push
pop
ret
sar
fwait
pop
cs
lret
clc
imul
xor
das
loopne
lcall
ljmp
mov
mov
mov
mov
pop
and
mov
mov
cld
xchg
mov
sub
es
pop
in
sbb
aad
mov
adc
and
and
mov
cs
xchg
and
test
and
mov
iret
cmp
dec
push
jecxz
mov
mov
sbb
movsb
rorb
pop
push
mov
sub
test
faddp
mov
stos
int3
negb
adc
and
call
xor
ss
and
and
jo
cmp
and
mov
mov
add
pop
inc
faddp
lret
cmpsb
movsb
pop
in
pop
or
clc
bound
and
dec
xor
out
xor
mov
lods
sbb
cmp
sti
js
and
int
call
loopne
fisttps
adc
cmpsl
adc
imul
sub
mov
sub
inc
pop
mov
dec
lods
jp
sbb
std
sbb
shll
xlat
cmpsb
jmp
sub
fwait
sti
sar
mov
rorb
inc
pop
sub
jle
repz
mov
push
rol
lahf
jecxz
leave
mov
movsb
leave
fisubrs
cmp
cmpsb
sbb
xor
or
sbb
sub
lcall
cmp
iret
pop
sbb
in
jnp
lahf
lret
je
sub
out
mov
pop
cmp
aas
stos
je
aas
jno
stos
jae
sbb
sti
push
add
in
daa
in
mul
shlb
pop
mov
cmp
arpl
idiv
shrb
add
sub
sbb
loop
inc
insl
scas
mov
sub
js
push
mov
and
push
out
imul
sar
pushf
sbb
adc
jno
push
adc
fwait
dec
ljmp
into
mov
fsts
mov
rcll
inc
lret
es
and
pop
mov
ftst
sbb
lret
fwait
ss
fucomp
mov
mov
iret
addr16
lods
enter
and
insb
mov
cwtl
mov
mov
adc
int3
pop
stos
repz
loope
call
and
stos
pushf
xchg
mov
mov
fistps
cmp
xchg
std
lods
sbb
or
sbb
or
xchg
xchg
les
mov
cmp
popf
jmp
mov
into
test
mov
stc
jns
or
push
addr16
mov
add
ret
ficoms
inc
jo
push
sub
push
sub
sbb
sbb
xor
sbb
movsb
int3
test
aam
ds
test
jl
or
or
xorl
pop
push
jbe
fists
cmp
mov
inc
ret
repz
cmp
es
fiadds
scas
add
push
repz
pop
in
sub
fst
push
sbb
and
repz
xchg
mov
pop
cwtl
fsqrt
jp
lahf
mov
jmp
mov
push
cmpsl
lods
sub
sbb
push
dec
push
dec
sti
sti
mov
cli
lret
jo
out
pop
lods
mov
mov
jno
pushf
rcrb
and
sbb
dec
or
mov
and
jnp
gs
enterw
dec
les
pushf
xchg
scas
lea
and
loop
cmp
aam
repz
inc
add
das
or
sbb
clc
add
sbb
jmp
lea
decl
sbb
push
fwait
outsb
mov
or
fwait
fwait
test
stc
push
jno
dec
mov
aaa
adc
pop
shl
movsb
fwait
cmp
loope
out
outsl
ret
push
gs
repz
bound
jbe
in
insb
cli
out
mov
insl
pop
call
mov
xchg
add
xor
lods
icebp
faddl
mov
sub
mov
loope
inc
mov
sahf
fsubrl
sbb
inc
jmp
fdivrl
cmp
clc
sarl
icebp
cmp
sbb
xor
sti
iret
jg
ret
mov
subb
sbb
xchg
pop
mov
mov
notl
int
jo
add
push
sub
fwait
aam
lods
jecxz
mov
push
cs
xchg
int
int3
sahf
and
cmp
adc
cli
aad
sub
xchg
int3
cmp
jmp
inc
and
call
aas
add
or
cmp
push
sub
push
add
mov
rcrb
xchg
bound
iret
or
enter
sahf
mov
out
add
pop
pop
and
int
and
cld
int
aad
inc
iret
mov
lahf
adc
sub
xchg
adc
sbb
dec
aam
xchg
insl
push
xchg
mov
add
outsl
into
jge
jns
push
jns
push
mov
imul
dec
fs
iret
lods
cli
shlb
int3
bound
pop
jp
push
test
imul
sub
xor
stos
mov
jo
mov
mov
lahf
mov
gs
cmp
aad
sti
xor
jne
dec
gs
inc
test
inc
icebp
dec
xchg
ja
jg
sub
popa
das
jle
test
gs
jae
out
jo
mov
fwait
add
dec
sbb
stos
mov
or
in
and
in
xchg
sub
sbb
push
and
shll
sub
push
xchg
push
xor
fidivs
add
in
inc
sbb
int3
lea
pop
jmp
dec
cld
scas
dec
mov
jmp
push
xchg
jp
hlt
adc
jg
leave
pop
xor
cwtl
push
push
loope
xor
movsl
cmc
lods
dec
int3
seto
cs
daa
mov
arpl
mov
and
imul
shll
dec
sbbb
jmp
in
jae
xchg
test
shll
sbb
mov
popa
add
xor
push
fsubp
je
or
sub
add
push
je
in
push
xchg
dec
negl
add
je
jb
enter
clc
stc
movsl
loopne
cmp
imul
popl
call
rolb
and
loopne
add
fisubrs
pop
or
ror
pop
mov
and
jo
adc
adc
test
aas
adc
hlt
push
fnsave
gs
and
into
mov
test
and
enter
jp
jecxz
xor
rcll
lcall
shll
test
jl
cwtl
mov
push
ljmp
pop
xor
movsl
adcl
sub
lret
lret
stc
scas
add
pop
sbb
cmpsl
loope
adc
aaa
lods
mov
and
ds
push
flds
shrl
jl
mov
pop
sbb
jg
cmpsb
lea
pop
xlat
out
lods
repnz
lret
fidivl
dec
subl
loopne
xchg
push
in
dec
shlb
mov
mov
pop
mov
adc
dec
sahf
out
xchg
pop
sub
xor
xchg
and
lods
dec
sbb
ret
fcmovnbe
lock
addb
inc
sbb
imul
pop
jns
sbb
xchg
pop
sbb
jae
fsubp
loop
shll
outsb
das
push
sub
xor
cmp
jecxz
dec
xchg
add
push
data16
aaa
pop
adc
cmpsb
sahf
jge
push
adc
addl
pushf
sahf
sbb
pushf
push
fidivrl
into
call
cmc
mov
test
jmp
leave
add
ljmp
jae
mov
push
movsl
test
in
fcmovnb
ds
mov
rcrl
inc
jnp
mov
mov
jnp
cs
roll
adc
jle
fsubl
push
cmp
pop
lods
scas
xlat
and
xor
test
mov
sub
xor
ror
pop
inc
and
add
jp
pop
ljmp
and
subl
and
pop
adc
leave
pop
adc
fsubs
cld
cli
rcrl
dec
nop
jecxz
mov
dec
mov
jecxz
pusha
call
adc
adc
imul
xchg
pop
fs
mov
popa
sbb
jmp
cmp
je
pop
aas
scas
cmp
pop
xchg
xchg
test
lods
sub
iret
xor
or
cmp
pop
ljmp
or
sahf
lock
pop
sub
xor
popf
loope
leave
inc
cmp
iret
cmp
push
xor
jecxz
clc
push
pop
adc
xchg
inc
and
clc
lcall
mov
xor
ss
mov
cld
js
xor
popf
mov
dec
pop
test
fistpll
inc
cli
xchg
popa
jg
cmp
sti
inc
repnz
xor
int3
pop
mov
ret
lods
jmp
in
enter
push
mov
mov
xchg
js
imul
shll
add
mov
enter
inc
shr
inc
lods
rcll
or
das
arpl
xchg
sti
pushf
jne
inc
xchg
stos
jo
clc
mov
lcall
gs
mov
adc
cmpsb
movsb
lods
push
push
push
ja
sub
push
push
mov
imul
cmpsb
aad
xor
jo
lret
push
add
add
es
addb
icebp
movsb
push
xchg
push
pop
adc
mov
push
jg
and
sti
add
mov
cmp
sbb
es
mov
ret
fsubl
mulb
adc
fistps
or
xor
pop
sbb
jae
in
jb
push
jg
aaa
jns
aas
sarl
out
mov
push
leave
sub
rclb
sub
cmc
jne
sbb
sbb
addl
jne
pop
call
icebp
dec
lea
and
mov
xchg
enter
shrb
push
pshufw
in
cmc
test
rcl
shr
mov
gs
jle
mov
adc
test
out
or
jno
arpl
ficoml
call
and
loop
push
pop
repz
outsl
sbb
inc
mov
jno
js
or
pop
inc
in
push
fst
sub
nop
ja
jge
mov
addr16
imul
int3
mov
mov
lret
cmp
mov
sub
mov
das
int
lcall
dec
pop
out
icebp
frstor
ljmp
lods
pop
inc
mov
les
adc
sbb
dec
cltd
jmp
dec
loope
pop
and
lock
iret
shll
lods
cmp
std
lcall
aaa
push
std
enter
jmp
orb
repz
pop
ja
sub
test
les
ja
bound
out
sahf
jae
iret
fldenv
inc
jmp
jb
addl
sbb
leave
mov
ja
shrl
or
mov
test
cli
flds
xchg
jbe
sbb
cmp
stos
mov
aam
jne
and
ss
rclb
and
mov
or
std
loope
cmpsl
ja
sbbb
ds
lcall
lahf
xchg
insl
shlb
inc
mov
xor
sub
add
push
inc
xor
popf
sub
cmp
cmpsl
push
sub
sbb
add
or
jge
les
mov
sub
mov
outsl
or
fwait
or
adcb
xor
fnstenv
jp
lods
xchg
push
popf
xchg
jns
inc
mov
adc
std
pslld
out
call
repnz
sub
jmp
sbb
or
xchg
or
dec
push
test
mov
inc
test
jno
fwait
dec
sbb
das
sub
arpl
stc
sbb
jo
cli
out
stos
cltd
lds
jmp
mov
clc
push
xlat
es
jle
dec
xchg
jl,pt
cmpb
loopne
test
in
das
jp
ret
jb
in
dec
fs
xchg
jl
stos
mov
sub
outsb
mov
add
js
dec
jl
mov
fisttpll
sahf
test
lret
pop
cmpsb
and
sub
jmp
xchg
call
ss
inc
loope
shll
out
push
ss
iret
sahf
lahf
arpl
stos
and
cmpb
dec
push
std
aaa
dec
pushf
and
lds
ds
std
mull
lods
mov
inc
push
repz
sub
or
ds
out
adc
jmp
jno
lcall
fstpt
push
inc
cmc
adc
pop
insl
mov
mov
pop
maskmovq
push
pop
clc
adc
imul
push
std
sub
addr16
incb
gs
lds
ror
es
dec
add
push
adc
mov
sub
push
lret
mov
push
pop
push
mov
lahf
jmp
js
mov
pop
aam
das
sub
fistl
jae
sub
push
jae
mov
pop
and
iret
add
cmp
add
jnp
cmc
or
inc
jmp
notl
int
and
jae
mov
xchg
enter
cmpsb
aad
sub
mov
inc
bound
out
js
sub
test
aad
flds
jae
xchg
lcall
outsb
into
std
dec
cmp
xor
jne
dec
loope
mov
mov
mov
shr
xor
xchg
or
push
dec
js
jmp
repnz
fsubs
bound
xchg
pop
add
out
imul
sbb
fldt
xchg
aaa
scas
lds
jge
movsl
ret
pop
test
movsb
lods
jns
clc
push
imul
icebp
out
call
sbb
cmp
cmpsb
xchg
or
mov
out
jg
mov
lahf
sbb
add
pop
sub
cmp
sti
into
rclb
rolb
bound
ja
lahf
out
cmp
push
xor
pop
mov
cld
aad
ds
xor
xchg
lcall
xchg
lock
fmull
ja
punpckhwd
cmp
std
push
push
push
pop
lock
sub
and
push
mov
jle
aaa
adc
jge
into
rcrl
insb
sbb
jg
lahf
insl
cmp
fstps
cmpsb
jp
add
sbb
je
or
subb
inc
jmp
aas
or
in
ret
lods
cmpsl
mov
sbb
jb
add
arpl
xchg
dec
sbb
mov
or
and
fidivs
arpl
jne
add
xchg
outsb
or
sub
pop
push
mov
fsts
lds
ljmp
ljmp
dec
lods
ret
xor
xchg
lahf
and
faddl
inc
icebp
test
repnz
lds
cmpsl
inc
push
rcll
and
push
pop
mov
fsubs
scas
out
fs
mov
add
lahf
cmp
ret
xchg
add
and
sbb
xor
loop
int
lea
mov
arpl
xchg
pusha
mov
pop
xchg
jb
imul
xor
xlat
ljmp
adc
es
divl
incb
mov
xor
push
push
lret
xor
in
ret
sti
xchg
pop
xlat
in
out
or
mov
int3
sub
nop
cs
sub
mov
cmpsb
cmpsb
sub
mov
test
add
pushf
les
dec
mov
sahf
out
mov
jge
add
pop
std
xlat
repnz
or
sbb
cmp
pop
test
sbb
mov
mov
aam
subl
mov
cmc
imul
mov
iret
sbb
ss
jl
xchg
xchg
xor
lock
ja
push
push
iret
loop
std
int
mov
push
sbb
fnstsw
mov
mov
add
cmpsl
lcall
fucom
sub
in
fcoms
mov
mov
popa
or
test
scas
mov
inc
pop
or
fucom
xchg
stc
fs
push
int3
cmp
mov
pop
pop
jg
scas
jne
cld
jae
jge
shrb
stc
mov
mov
pop
imul
pop
inc
push
inc
jp
mov
lods
and
hlt
dec
jg
rclb
mov
add
test
jbe
mov
push
or
push
xor
or
cli
mov
lock
sub
test
push
mov
and
subb
xor
jecxz
inc
push
lods
or
and
or
sub
fidivrl
inc
in
jae
mov
cltd
pop
imulb
enter
leave
iret
adc
sub
int3
push
test
pop
push
inc
aas
sub
loop
jle
sbb
or
xchg
sahf
jae
mov
mov
stos
push
cmp
or
dec
ret
jl
test
add
pop
out
cwtl
or
pop
pop
mov
lds
push
loope
inc
xchg
std
sarl
push
sbb
or
jnp
push
and
daa
jno
xchg
mov
je
sub
mov
in
rolb
adc
mov
push
jb
push
dec
jp
sarl
hlt
cwtl
fistl
sbb
mov
cmp
jbe
inc
xor
out
mov
jne
dec
push
or
neg
adc
jae
int
outsb
cmpsl
push
stos
pushf
xchg
in
sarl
or
push
and
pop
aam
mov
xchg
sahf
pop
jle
movsl
bound
js
adc
pop
mov
loop
scas
mov
mov
jmp
inc
dec
shrb
mov
push
imulb
nop
movsb
xlat
addr16
lods
sar
repnz
xchg
pop
leave
fisubrs
cld
mov
movsb
mov
add
jmp
clc
sbb
clc
out
xchg
xor
mov
imul
pop
testb
dec
dec
cmpl
xchg
mov
sub
add
out
xchg
pop
xor
out
push
pop
push
add
pop
pop
pop
or
add
or
sub
adc
cmp
stos
insl
pop
pop
push
fwait
fs
pop
fs
into
push
adc
push
scas
add
mov
mov
pusha
adc
stos
stos
in
sbb
es
daa
fisttpll
pop
xchg
push
lahf
mov
add
js
das
aam
cmp
lea
mov
xorl
mov
pop
xor
fmuls
lret
mov
enter
lcall
xor
movsb
or
adc
mov
enter
stc
mov
xchg
push
dec
cltd
cli
cs
stc
movsl
sub
lock
mov
rorl
adc
fs
mov
inc
mov
push
cmp
jg
push
das
jp
push
mov
out
cmp
mov
mov
addb
push
mov
inc
and
enter
out
and
sub
sub
sub
cmp
pop
cmp
ja
or
in
pop
jb
mov
arpl
push
mov
popa
dec
mov
mov
push
ret
cltd
mov
loop
repz
lcall
std
rcrb
inc
sub
and
lret
or
adc
repnz
pop
and
into
add
sarb
das
xchg
aaa
cmp
jmp
cwtl
test
insb
mov
insb
sbbl
pop
add
push
js
movsl
scas
pop
mov
sub
inc
xchg
dec
and
push
aas
push
push
and
inc
insb
inc
mov
and
lock
xlat
out
push
or
mov
sarb
int
jnp
mov
in
jo
iret
xchg
inc
sahf
pop
aas
pusha
ja
add
shlb
int
fnclex
add
adc
insb
lds
ret
loop
ds
cld
jae
and
cs
pushf
sub
dec
sbb
adc
es
jle
lds
lods
fsubs
push
jmp
push
test
outsl
inc
push
adc
adc
push
push
out
push
inc
mov
sub
movsb
aad
xor
jae
js
sub
rorb
xchg
mov
lcall
mov
sbb
jb
movsl
lahf
or
es
test
xchg
xor
cmp
push
hlt
adc
les
xchg
pop
cmp
push
xchg
inc
test
push
push
das
sbbl
movsl
dec
pop
pop
jp
jp
xchg
jle
imul
dec
lret
adc
xor
add
mov
mov
jns
pop
xchg
movsl
lcall
fs
ficoms
out
lock
push
insl
xchg
call
mov
pop
mov
lahf
cmp
push
or
xor
hlt
lea
outsl
mov
test
lahf
sub
jmp
lods
sbb
sbb
cmpsb
xor
jbe
movsl
les
in
testl
xchg
icebp
and
sub
out
sbb
xor
push
push
hlt
push
inc
mov
in
test
ret
pop
mov
cmpsb
test
inc
mov
test
inc
cmp
lods
push
imul
andb
loop
test
loop
int
cmp
int3
in
lock
inc
add
test
subl
orl
inc
push
iret
testb
test
loop
pop
loopne
inc
into
xchg
mov
adc
cmp
xor
insb
cmp
xor
mov
stc
in
popa
cmpsl
dec
enter
push
hlt
sub
adc
imul
sbb
les
lcall
mov
iret
push
lahf
shll
testb
sbb
mov
xchg
call
cmp
jns
mov
or
or
sbb
adc
xchg
mov
push
dec
jmp
pop
loopne
faddl
jle
mov
into
or
out
es
inc
sub
aaa
sub
xlat
shlb
sub
out
icebp
push
insl
into
jnp
pop
stos
stos
leave
push
insl
test
lods
xchg
repnz
jg
sub
mov
pushf
mov
int
or
or
pop
xchg
xchg
mov
xchg
pop
out
sbb
jnp
jno
mov
xlat
inc
mov
push
into
cli
clc
jbe
lea
or
enter
mov
cmp
cmc
fistpl
mov
inc
stc
or
and
lahf
and
iret
icebp
fsub
call
xor
mov
sbb
orb
stos
xchg
jp
push
mov
mov
pop
movsl
pop
icebp
mov
lds
push
insb
mov
inc
mov
sbb
jae
loope
jl
outsl
roll
aas
xor
lds
jae
dec
push
test
push
pop
xchg
dec
dec
arpl
pop
int
loop
push
sbb
movsb
jno
sub
and
pop
or
jecxz
fdivrl
sub
pop
mov
jns
lds
loop
stc
jge
rcl
fsubl
mov
cli
call
inc
lahf
lfs
testb
pop
andb
stc
pop
mov
jp
leave
das
adc
mov
out
outsb
fnop
je
push
bswap
dec
sub
sbbb
enter
and
dec
aad
xor
xor
xor
mov
leave
mov
add
jbe
lea
dec
icebp
xchg
popa
push
jbe
xlat
test
lret
fbld
popa
mov
sbb
repnz
jne
mov
xchg
pop
and
gs
push
mov
aaa
push
aad
aaa
add
push
or
inc
and
int
mov
fwait
cmpsb
ret
mov
scas
push
mov
fcoms
dec
sub
or
fwait
in
jg
ret
push
pushf
and
adcb
fisubrs
push
pop
mov
jbe
push
push
push
test
mov
aad
mov
mov
sub
flds
fsubrl
pop
fbstp
push
inc
roll
dec
cmp
je
dec
loope
fsubrs
jecxz
inc
xchg
mov
out
cmp
adc
mov
mov
out
lods
add
loope
aad
add
lcall
sub
jmp
push
cmpsb
sbb
sbb
jl
popl
aad
sarb
sbb
mov
pop
mov
push
inc
jmp
mov
sbb
scas
mov
or
mov
sub
ljmp
jne
js
or
sub
pop
xor
decb
das
cmpsb
push
mov
test
jp
shlb
jb
inc
inc
into
jns
jae
push
push
inc
mov
les
lret
push
sub
adc
mov
loop
loopne
or
push
cmp
rorl
cmp
push
push
shrb
fldl
rcrl
ss
and
or
mov
leave
shl
scas
rcll
adc
adc
xlat
sti
jns
arpl
pop
aas
push
pop
mov
fs
mov
jl
stos
mov
in
mov
ljmp
les
enter
fmull
dec
rorl
jne
jge
pop
lea
mov
fisubrs
dec
adc
shll
cmp
xchg
das
movsb
stc
pop
jp
xchg
repz
pushl
in
mov
sub
data16
not
dec
xor
aas
arpl
cmp
push
cli
aaa
jl
sbb
clc
add
lret
xchg
popa
mov
or
xor
repz
lcall
or
cmp
out
sub
jne
cmp
call
sbb
daa
mov
lds
mov
push
data16
xchg
cmpsl
daa
loopne
xchg
test
xchg
and
jae
faddl
dec
jo
jg
xlat
jnp
and
or
je
push
add
xor
hlt
jb
ja
call
sbb
in
pop
mov
dec
mov
dec
pusha
loop
data16
sub
stos
push
lret
jl
in
add
int
mov
call
arpl
pop
fs
jmp
arpl
fmuls
lahf
xor
addr16
mov
test
dec
in
cmp
dec
xchg
arpl
xchg
mov
je
sbb
and
xchg
jecxz
xchg
and
dec
loope
jae
icebp
jecxz
push
mov
inc
pop
push
sbb
jb
pop
in
xchg
add
sbb
sbb
dec
insl
pop
out
dec
icebp
cmp
pushf
inc
lock
jb
sub
push
push
stos
add
insb
insb
or
decl
jecxz
pop
clc
sub
sub
add
mov
jnp
push
cmpsl
rorb
inc
call
inc
pop
int3
or
pop
jns
andb
jae
push
cmc
or
popa
sbb
popa
je
testb
inc
pop
in
es
nop
dec
pop
mov
out
aaa
fsubl
ficompl
out
sti
out
add
mov
cmp
pop
xchg
clc
aam
pusha
pushf
cli
outsl
repz
mov
cmp
ds
and
sub
add
jbe
or
cmp
cwtl
sub
mov
mov
dec
adc
mov
aad
mov
pusha
lock
mov
cmpsl
jl
dec
rorl
mov
ret
mov
pop
fidivrs
xchg
imul
es
shr
pop
jl
notb
push
add
sbb
adc
mov
lahf
cld
push
dec
cltd
sbb
dec
mov
push
inc
in
std
adc
mov
mov
cmp
dec
aam
mov
lea
mov
sbb
mul
adc
adc
loop
and
repnz
mov
mov
xor
daa
jne
rorb
subl
pop
test
pop
shll
lock
stc
outsb
mov
mov
roll
add
fildl
mov
jae
push
loop
cmp
enter
pushf
stc
jae
icebp
imul
data16
sti
mov
inc
testb
add
mov
sbb
push
hlt
dec
scas
adc
stos
adc
lahf
pop
sub
in
sub
in
adc
push
int
enter
or
add
aad
mov
inc
push
lds
sbb
and
push
jp
cmp
mov
xchg
and
lock
xor
in
adc
stos
jbe
shll
subl
inc
push
imul
xor
inc
popf
jle
out
ljmp
mov
sbb
cmp
outsl
xchg
add
push
ljmp
cmp
push
or
cmpl
mov
shrb
jnp
and
enter
xchg
push
test
icebp
or
seto
movsl
outsb
andl
pop
add
int
movsl
mov
mov
mov
fcmovu
xchg
pushf
xor
push
sub
ss
addb
bound
test
ja
lock
cmp
cli
adc
mov
xorb
mov
dec
fimull
sti
fstpl
push
fdivrs
pop
mov
cmp
aas
and
and
aam
jecxz
sub
xchg
iret
sub
scas
xchg
add
jl
gs
ja
lahf
or
pop
lods
fsubl
mov
mov
jecxz
sub
in
adc
scas
cmpsb
aaa
mov
cli
xchg
fwait
inc
or
pop
fcomip
push
iret
jl
xlat
and
cwtl
testb
xchg
or
aam
push
pop
ja
gs
sbb
scas
rorl
push
lods
push
cmp
cli
or
jg
enter
daa
jb
sub
mov
test
cmpsb
mov
adc
xor
mov
cwtl
cltd
mov
inc
iret
std
jp
test
push
xor
xor
push
lcall
mov
jb
pusha
sbb
mov
fs
call
es
je
fwait
add
js
cmpsl
add
pusha
jg
fisttpl
mov
test
xor
push
inc
stos
loop
icebp
xchg
das
mov
loope
jns
sub
mov
pop
data16
repz
rcrb
out
lahf
hlt
repnz
push
gs
dec
inc
cltd
in
popa
cmp
mov
leave
pop
xor
movsl
cmpsb
jmp
inc
and
dec
testb
add
jl
ljmp
call
rcrl
aad
test
movsb
adc
icebp
out
pop
cs
push
mov
inc
inc
pop
push
push
mov
lock
in
jb
mov
aaa
fdivr
xchg
dec
mov
jb
inc
mov
loope
in
inc
aas
push
movsl
test
je
mov
add
pop
add
sbb
ja
mov
dec
sbb
aam
lods
sbbb
and
mov
inc
add
cli
cs
jp
jle
sub
jbe
cli
outsb
pop
xchg
sub
sahf
div
cmc
xlat
inc
subps
jecxz
adc
sbbb
ror
sub
loope
stos
fnstenv
add
push
sti
inc
mov
sub
push
inc
loopne
cmp
shlb
adc
push
aad
jg
xor
inc
pushf
pop
push
sahf
adc
fdivs
in
push
bnd
je
fbstp
push
push
rolb
filds
sbb
adc
test
inc
lcall
pushf
xor
add
fmull
cmp
lret
nop
int3
popa
fnstcw
xchg
cmpsl
mov
xchg
orl
sub
and
movsb
ljmp
add
inc
loopne
push
pop
outsb
jne
aas
clc
adc
jo
inc
jnp
add
cmc
lret
jae
sbbl
or
cmp
inc
pop
clc
int3
insb
loopne
add
and
stos
add
and
imul
repz
notl
sbbl
xchg
subb
movsl
les
call
andb
fcomps
jb
scas
out
xor
xor
sub
xlat
dec
jecxz
mov
fadd
dec
repnz
ret
stos
mov
rcrl
cli
addb
fisubl
jmp
lcall
push
jnp
add
add
int
mov
cmp
and
rcrb
pop
push
pop
lahf
adc
add
sub
int3
filds
mov
leave
negl
sub
jb
aaa
push
stos
cmp
cmp
mov
in
pop
cmpb
inc
rorb
idivb
mov
lea
sbb
inc
mov
mov
pop
dec
cmpsb
dec
mov
xchg
xchg
cmp
rep
xchg
xchg
push
test
mov
stos
pop
stc
add
enter
in
lahf
jl
sti
sub
cltd
ret
push
adc
out
movsl
fiaddl
test
cmpsl
icebp
lods
xor
bound
add
push
in
js
mov
dec
jb
fcmovne
jnp
jbe
adc
fcoml
mov
mov
sub
lods
cmpsl
cld
push
mov
dec
cli
lret
aad
pop
fcompl
scas
dec
arpl
xchg
in
imul
xor
imul
inc
and
outsb
aas
mov
movsl
or
fs
inc
add
sbb
sub
mov
icebp
mov
mov
dec
faddl
xlat
mov
mov
jne
cmp
data16
insl
inc
lahf
pop
mov
mov
lods
add
fwait
lods
mov
rcrb
or
leave
imul
push
adc
daa
mov
adc
push
sbb
or
cmp
jge
xlat
andb
arpl
inc
mov
xchg
pushf
sbb
faddl
nop
push
mov
push
addr16
jmp
jmp
push
rcll
mov
mov
int
jb
dec
mov
mov
sub
adc
rcr
dec
pop
mov
inc
lahf
jmp
int3
scas
les
test
jmp
push
lods
push
push
daa
out
out
aas
or
inc
cltd
mov
sbb
push
mov
push
mov
addb
push
adc
jno
adc
or
pop
enter
or
push
fs
mov
cmp
add
pop
sahf
in
sub
xorl
hlt
popf
in
ljmp
sub
dec
cmpsl
pop
xor
out
fadds
push
jno
lds
sahf
add
push
sub
add
and
shl
jmp
add
movl
cwtl
shl
scas
rclb
fsubrs
pop
jecxz
pop
leave
repnz
dec
dec
and
fwait
aad
rcr
sti
in
xor
jg
push
call
inc
lods
adc
stos
icebp
movsb
inc
sub
repz
xor
push
inc
hlt
repz
ret
sar
cmp
pusha
ljmp
subl
cwtl
inc
fwait
imull
arpl
cmp
out
repnz
sahf
lret
sub
xchg
lods
jbe
rcl
push
ret
repz
push
dec
in
mov
add
or
js
ljmp
imul
dec
std
int
test
out
lods
and
lahf
dec
sub
leave
movsl
mov
insl
jle
push
hlt
ja
adc
cltd
mov
das
lret
cmp
sbb
popa
jns
sbb
sub
arpl
push
clc
add
jns
jl
mov
xchg
and
xchg
das
ja
leave
stos
clc
loop
push
sbb
popa
movsl
sub
jnp
pushf
pop
and
mov
mov
jns
adc
xor
rdtsc
lret
imul
shll
xchg
jl
mov
push
inc
loopne
fcoml
sub
jns
out
sti
sub
cmp
xchg
and
icebp
jg
adc
ret
push
jno
std
sub
add
les
mov
test
ds
in
cmpsl
lods
mov
cmp
sbb
xor
movsl
hlt
sub
mov
adc
xor
mov
jl
xchg
adc
fbstp
subb
fnstenv
mulb
inc
aad
and
jo
ja
in
int
pop
sub
cwtl
jmp
mov
mov
sbb
and
repnz
mov
cmp
jp
lods
ficoml
iret
mov
pop
loopne
sarl
scas
lret
popf
outsl
daa
xor
jmp
lahf
bound
xchg
mov
aad
sbb
rcll
push
mov
mov
mov
daa
enter
pop
ret
fwait
jle
int3
mov
inc
insb
orl
mov
fstl
push
outsl
lods
andl
sub
fnsave
mov
jb
mov
test
cwtl
jmp
fmull
pusha
mov
pop
sub
sbb
inc
adc
fidivs
xchg
sbbl
push
pop
mov
adc
or
mov
adc
into
out
sbb
push
dec
fidivrl
jg
ja
js
xchg
mov
xlat
outsl
push
cli
scas
mov
adc
sub
rcrl
sbb
mov
push
fcmovnu
pop
daa
sub
ss
sets
leave
les
out
and
push
mov
aaa
pop
mov
adc
or
mov
xchg
pop
mov
fwait
push
iret
mov
adc
xchg
sub
jnp
rcll
dec
popf
xchg
mov
dec
add
xor
dec
ljmp
xchg
fsubrs
jle
sarl
push
or
outsl
stos
sbb
mov
ljmp
es
lahf
jle
ss
inc
leave
into
xor
lods
jb
shr
fistpl
in
cmp
pop
xor
fisubrs
loopne
push
or
jl
push
fs
lahf
push
int
mov
lods
fwait
test
cmp
sbb
fisttpl
sbb
enter
addr16
je
fldl
pusha
clc
xor
gs
adc
inc
sbb
add
das
mov
imul
push
lea
mov
jle
lahf
push
mov
flds
scas
or
inc
inc
sbb
popf
jle
and
pop
insl
sub
lahf
cmp
imul
or
out
test
in
jl
jecxz
pop
ja
lock
cltd
pop
fisubs
push
mov
jnp
cmp
mov
mov
rcll
lahf
mov
mov
clc
mov
loopne
xchg
cmp
mov
add
inc
scas
scas
lock
cli
sub
sub
xor
mov
aad
push
pop
rorb
loop
xchg
test
jno
xchg
lcall
sbb
movsb
jns
outsb
xor
jno
imul
fiadds
and
lock
jge
xchg
sub
xlat
aas
lahf
outsl
push
pop
push
enter
cld
mov
push
and
inc
lret
xorb
mov
std
or
xor
xor
jns
stc
sbb
rcrb
sbb
fdiv
outsb
ds
ds
cs
shll
xor
push
mov
mov
inc
push
jp
adc
cmp
or
loope
test
mov
inc
inc
aad
fisubrl
ret
mov
push
out
push
flds
sti
lahf
call
sub
xor
loope
add
sub
mov
mov
movsb
adcb
mov
jg
leave
sbb
aas
pop
out
pop
push
fldl
mov
or
add
in
pop
shll
mov
xor
cli
dec
inc
inc
sbb
shlb
addr16
out
push
sti
xchg
shll
daa
loopne
cs
add
inc
or
movsb
call
std
sti
enter
jp
mov
outsb
aas
mov
call
lret
lock
in
adcl
insb
xor
pop
xchg
insl
aas
xchg
lcall
inc
lcall
adc
inc
lahf
jg
lods
popa
ljmp
add
in
scas
out
and
das
je
test
cmpsb
or
addr16
xor
scas
push
lahf
lahf
mov
cmp
in
fstpt
fstps
addr16
and
adc
dec
out
scas
pop
push
out
callw
sub
cmc
jecxz
add
jecxz
or
pusha
aas
xlat
or
in
arpl
int
cli
sub
pusha
and
sub
rcrb
std
dec
sub
mov
pop
lods
dec
rorl
movsl
vminpd
rolb
cwtl
data16
and
xchg
imulb
cli
pop
es
insl
and
add
lods
sub
xor
sti
data16
cmp
cmp
dec
dec
mov
sbbb
int3
out
dec
into
scas
pop
lods
loopne
fldcw
test
dec
push
outsb
pop
es
jecxz
sub
fidivrs
xchg
push
popa
mov
jecxz
jnp
jmp
adc
mov
sahf
push
sub
jl
jl
mov
std
lock
stos
pushf
jmp
push
push
jbe
xor
and
adcb
sahf
cmp
cmp
mov
jae
mov
data16
cli
adc
adc
in
movsb
insl
cwtl
push
enter
mov
lods
mov
js
leave
add
aas
xor
mov
cmpb
pop
mulb
lods
les
stos
jl
aam
xchg
rcr
outsb
and
inc
stos
inc
mov
outsb
sub
or
test
outsb
cmp
or
repz
inc
push
scas
mov
jge
out
mov
clc
adc
aas
fsts
xchg
adc
repz
mov
inc
in
lods
sbb
mov
xlat
ret
xchg
sub
adc
xor
jae
xor
stc
jp
push
inc
dec
pushf
pop
movsb
rclb
jnp
roll
insb
enter
movsl
incl
incl
and
inc
mov
inc
ss
insb
mov
js
xchg
add
lods
cs
and
inc
cmp
paddusw
xchg
out
jle
imul
jecxz
add
popl
and
sbb
mov
jbe
push
mov
xchg
shrl
loope
js
stos
out
in
aam
pop
in
lock
stc
push
leave
jp
and
popa
mov
fs
or
dec
xchg
pop
das
dec
scas
cld
mov
or
shll
mov
mov
cmpsl
xor
mov
vphaddwd
aam
mov
xchg
and
loope
xchg
scas
test
testb
add
into
scas
gs
fcom
pop
jne
xor
fwait
jns
cmc
addr16
rcrl
xlat
loop
adc
add
lahf
cltd
xor
dec
in
add
imul
int3
mov
loope
fsub
mov
leave
inc
sub
sub
and
pop
pop
cmc
out
mov
adc
popa
lcall
add
test
cmp
dec
stc
xchg
icebp
jmp
fldcw
lods
movsb
aaa
cwtl
jb
lea
addb
and
out
xchg
jle
dec
aas
mov
ja
ja
test
repz
popf
shll
scas
daa
ljmp
xchg
nop
and
shlb
in
cwtl
imul
leave
les
dec
xor
enter
rorb
push
mov
adc
cld
xor
xor
push
adc
mov
pushf
std
lea
or
nop
scas
sbb
iret
mov
fs
rorb
jg
push
cmp
scas
cmp
lds
es
cld
sarl
daa
shlb
leave
pop
test
cmc
cmp
push
imul
inc
bound
lock
xchg
mov
ss
jle
lock
pand
dec
test
or
pop
repnz
out
fisttpl
xor
imul
or
flds
fsubrs
sbb
xchg
std
mov
xchg
rcrb
fdiv
lcall
lcall
fs
add
out
jl
outsl
in
and
imul
push
dec
enter
mov
loop
cmp
ret
adc
loope
loope
adc
adc
gs
loopnew
sub
inc
xchg
mov
nop
dec
bound
adc
ret
shll
leave
xchg
lea
sub
aam
push
jb
iret
cld
adc
push
ds
jb
jnp
cmp
orl
xor
xlat
adc
movsl
inc
out
push
mov
push
jae
rcll
in
les
sbb
and
inc
pop
cmp
sbb
lret
inc
dec
ja
fstpl
adc
sub
mov
jb
js
ds
mov
inc
push
lds
pop
push
inc
mov
in
or
das
outsb
in
xor
fsubrs
data16
pop
in
and
jo
lock
pop
dec
mov
or
add
sub
clc
hlt
sahf
insl
add
adc
pop
xchg
adc
xchg
lea
inc
jne
fmuls
adc
imul
test
ret
sbb
mov
aad
mov
outsb
mov
dec
shlb
je
jno
dec
stc
cmp
faddl
lods
cmc
pop
inc
xchg
lahf
out
pop
xor
aaa
sbb
and
push
or
push
mov
mov
inc
mov
xchg
mov
mov
movsb
xor
jp
or
sarb
gs
js
lods
jmp
fwait
sub
out
mov
or
jecxz
iret
sbb
sub
pop
jne
insb
mov
roll
pop
repnz
mov
mov
adc
hlt
in
loop
pop
sbb
mov
gs
dec
xchg
inc
push
pop
je
lods
jmp
sti
jp
cmp
or
mov
pop
adc
pop
xor
jns
dec
sub
dec
mov
cmp
cmp
scas
stos
pop
xlat
outsl
jns
sub
cmp
loope
dec
adc
pop
movsl
enter
cmp
pop
into
fistpl
movsl
and
cmp
and
xchg
mov
jl
dec
ret
push
popf
mov
mov
cmpsb
aam
pop
xor
jge
clc
popa
inc
vshufps
xor
add
mov
fcoms
and
loope
pusha
es
outsb
stos
push
lret
sbb
cmp
and
outsb
les
add
aaa
inc
in
mov
daa
add
or
adc
xor
dec
dec
or
out
inc
add
xchg
mov
les
fimuls
imul
or
jo
mov
mov
clc
adc
test
xor
loope
lahf
mov
dec
mov
int
xor
lcall
add
pop
adc
into
js
cld
and
lods
mov
popf
loopne
cmpsl
add
aaa
and
nop
push
mov
pop
add
xor
cmpsb
cmp
push
dec
sub
cmpsl
lea
dec
outsl
lea
cmp
add
stc
out
push
pop
les
repnz
movsb
mov
iret
pop
iret
xchg
add
das
and
nop
scas
xchg
xchg
imul
mov
loope
dec
les
adc
enter
pusha
push
ret
testl
add
fisttpl
xor
cmp
pop
sbb
scas
dec
shrb
scas
add
push
ss
sub
cmp
adc
mov
movsl
shrb
push
loopne
ficomps
data16
les
add
in
popf
jmp
pop
push
inc
cmpsb
xchg
scas
stc
inc
outsl
js
xchg
aam
inc
out
mov
pop
pop
jbe
jbe
mov
push
mov
out
jecxz
mov
shlb
cmpsb
add
xor
mov
pop
jo
add
cmpsb
cmpsb
lock
jge
xor
scas
adc
xor
incb
outsb
std
fwait
pop
sbb
pop
or
add
push
js
pushl
fstl
mov
mov
movsb
dec
dec
cmpsl
iret
push
jbe
and
inc
addb
stos
hlt
inc
xchg
and
push
outsl
add
mov
fcompl
sbb
shlb
out
xor
data16
pop
enter
jne
iret
stc
insl
leave
jg
cmp
lcall
ss
imulb
push
ret
push
push
lret
or
push
mov
cli
in
cmp
mov
xchg
addb
daa
or
cwtl
daa
push
fstp
mov
aam
push
popa
sub
mov
pop
mov
sub
aaa
jae
pop
fnstcw
dec
mov
lods
add
repnz
mov
clc
sti
xchg
stc
push
push
mov
mov
loope
pushf
inc
mov
mov
not
sub
mov
cmp
mov
sbb
cld
mov
dec
fwait
out
test
iret
shlb
lea
push
sahf
enter
lock
push
fbld
pushl
ljmp
stos
pop
mov
pop
inc
jl
int3
jle
adc
ja
hlt
or
imul
jno
ljmp
jmp
mov
adc
xchg
xchg
movsl
adc
cmp
stc
std
cmp
in
fcomi
cmp
out
aas
inc
fcomp
push
ffree
jle
mov
pusha
movsb
jb
push
repz
jmp
aad
dec
fsts
inc
lret
ja
cmpsl
in
int3
and
jns
push
ja
movsl
adc
sbbl
cmpl
clc
or
les
mov
idivl
pusha
sub
outsl
push
xchg
xchg
insb
addr16
xchg
out
loop
jle
icebp
lods
sub
inc
jle
or
ret
out
adc
bound
in
test
lret
ffreep
sub
xor
and
push
out
imul
out
imul
mov
cmc
lds
jnp
test
loop
inc
outsl
inc
int3
cmp
push
pop
sahf
push
test
mov
enter
ret
xchg
or
jbe
adc
jns
jnp
movsl
in
insb
repz
or
out
mov
sub
sub
sub
std
rcr
in
test
add
xor
lods
shrb
jnp
out
jg
ja
aaa
jae
psrlq
es
xor
aam
pop
cmp
push
leave
movsb
adc
dec
jmp
adc
sbb
lcall
divl
pop
push
or
adc
adc
or
pop
pop
xchg
mov
mov
pop
in
test
mulb
std
andl
int3
ds
adc
ljmp
adc
mov
mov
mov
insb
mov
out
adc
pop
push
mulb
add
ja
fidivs
push
movsl
or
lock
xor
add
pop
hlt
sar
cmpsl
out
ljmp
inc
push
les
sub
push
ja
push
xorb
fdivs
add
lcall
sti
pusha
xor
mov
int3
sbb
cmp
sub
or
xchg
push
push
sbb
das
dec
pop
scas
cmp
lret
aad
mov
lock
fnstcw
mov
cltd
in
rcrl
sub
push
inc
or
cmp
mov
fstp
inc
in
les
daa
xchg
cmp
int3
lea
jnp
push
outsb
mov
pop
or
xchg
xor
out
pop
sbbl
jle
movsb
xor
push
popa
push
loop
mov
cmpsl
push
dec
daa
shll
xor
xchg
rolb
pushf
aaa
pushw
aas
in
push
sbb
cmp
int3
and
mov
shlb
mov
cld
cld
popa
and
cmp
out
push
mov
and
xchg
mov
imul
popa
imul
ret
ljmp
test
dec
jmp
out
fiadds
xor
adc
ljmp
test
xchg
out
fidivrs
xchg
pushf
insb
lock
or
cwtl
int3
mov
je
loope
xchg
icebp
or
aam
mov
data16
rorb
sahf
imul
in
and
pop
call
xor
in
sti
or
dec
outsl
call
mov
push
pop
push
decb
dec
aad
xor
ss
cmp
sbb
or
xchg
adc
add
pop
gs
iret
dec
call
nop
movsl
xor
das
xchg
jge
incl
push
pop
mov
movl
jnp
adc
mov
scas
jb
das
push
je
push
adc
and
sub
inc
mov
lock
push
fidivl
aaa
imul
leave
jmp
pusha
pop
push
xor
fsubl
cmpl
mov
aaa
jmp
push
sbb
dec
push
outsl
mov
mov
jnp
lea
je
enter
push
xchg
add
jl
cld
xchg
jb
jecxz
std
xchg
and
test
jg
mov
rol
fcom
bound
dec
dec
adc
sub
cmpsl
adc
sbb
push
inc
aas
xorb
mov
and
inc
xchg
test
notl
and
push
or
repnz
aas
inc
push
push
icebp
ljmp
gs
out
test
in
insl
pop
popa
xor
out
lds
lret
popa
stos
jmp
inc
sub
imul
bound
push
rorl
adc
bound
adc
js
mov
and
fbstp
push
test
pusha
mov
orl
les
mov
lret
cmc
xor
testb
nop
or
orl
jno
nop
call
cmp
sub
mov
sbb
insb
pop
roll
inc
das
dec
push
cmpsb
mov
adcb
or
adc
in
add
mov
jl
addl
std
jno
mov
rcl
push
xor
das
mov
or
mov
js
out
lea
xchg
xchg
nop
not
mov
xchg
push
push
icebp
fwait
lods
push
popf
nop
jns
fsubs
cmp
sbb
xchg
movl
mov
into
lds
dec
pop
dec
js
mov
je
rorl
in
rolb
xchg
inc
nop
pop
es
ja
loope
mov
js
imul
insb
aas
cli
dec
push
cmpsb
add
xchg
sbb
daa
dec
test
or
addr16
pop
out
add
push
add
outsb
push
ror
fwait
mov
lock
jp
mov
popa
cmp
and
scas
dec
ret
jb
sub
aad
in
and
mov
cmc
lret
bndldx
add
push
movsb
popf
sbb
xchg
jge
adc
inc
test
cmovae
xchg
ljmp
les
dec
je,pn
cltd
mov
aaa
cmp
fdivl
lds
pusha
inc
out
adc
imul
mov
xchg
lock
popa
inc
pushf
adc
es
shrb
xchg
inc
int3
jnp
adc
ss
adc
push
loopne
cli
pusha
xchg
and
out
sbb
add
fsubr
adc
jmp
sbb
cmpb
and
movb
stos
cwtl
clc
push
pmulhw
add
xor
jecxz
sbb
adc
in
inc
aaa
mov
int3
mov
subb
or
sarl
or
cmc
adc
in
sbb
add
dec
mov
mov
add
pop
movl
xor
pop
cmpsl
repz
inc
nop
add
ljmp
xlat
movl
imull
add
push
mov
ss
jp
insb
dec
adc
push
dec
mov
jmp
and
cmpsl
sub
jmp
dec
cld
ja
ja
imul
and
fisttpll
pop
inc
mov
in
in
mov
sti
cmpsb
cmp
aaa
jg
and
mov
mov
nop
lock
inc
inc
xor
mov
xchg
xor
dec
lret
sarb
mov
daa
xor
jo
mov
lea
push
aaa
dec
cmc
movsl
std
mov
jns
jecxz
and
mov
xchg
jns
pusha
adc
insl
push
jp
cltd
dec
out
and
mov
cli
adc
mov
out
push
inc
jl
pop
mov
xchg
sub
push
xlat
xchg
enter
or
shll
dec
jmp
xor
fucomi
enter
sbb
sbb
mov
mov
cmpsl
inc
cmpsb
stc
dec
test
out
jmp
inc
dec
adc
cs
pop
pop
xchg
je
add
push
aas
inc
mov
jae
adc
lds
fadds
aad
and
filds
cmc
addb
leave
cwtl
xchg
xchg
add
push
test
ljmp
iret
push
idivl
push
sub
jge
or
jnp
arpl
pop
lock
shrb
imul
sub
test
cmp
xor
bound
test
stc
xor
lea
lret
sub
sbb
inc
push
dec
or
push
pop
cmpsb
bound
push
pusha
pusha
xrelease
push
ficoml
push
insl
les
mov
fmull
jmp
add
mulb
ffreep
push
cmp
fsubs
sub
push
push
inc
adcb
adc
add
mov
mov
push
fcompl
scas
insl
pop
or
jnp
mov
test
out
pusha
xchg
faddl
rep
stc
mov
add
mov
and
adc
shlb
inc
bound
jns
hlt
repnz
jo
inc
cmc
pop
stos
and
je
fstl
push
and
repz
and
xor
push
push
jbe
rol
mov
stos
mov
lret
jmp
push
stos
mov
sarl
out
and
inc
lods
inc
fnstcw
lock
arpl
lods
dec
add
xlat
je
insl
dec
aas
sub
sbb
sbb
movsl
std
dec
sub
push
pop
push
pop
popw
dec
mov
cs
xor
in
pop
push
popf
adc
sub
jl
add
mov
std
or
or
dec
dec
icebp
cmc
mov
xor
push
inc
xlat
inc
inc
imul
mov
loope,pn
cs
sub
push
in
and
mov
aaa
popa
pop
daa
stos
xlat
out
movsl
mov
or
add
mov
js
cmpsl
dec
mov
ljmp
pop
sub
xor
out
and
or
add
in
fstpl
fstpl
mov
lds
stos
or
xchg
cwtl
outsb
shll
or
imul
cmpsb
hlt
jecxz
xchg
addr16
clc
cmp
and
sub
push
mov
xchg
imul
bound
cld
das
cli
rorb
lock
push
mov
ret
cmp
aad
jp
sti
aaa
aaa
mov
sbbb
fildll
cmpsb
out
sbb
jp
jl
mull
lret
cs
sbb
pop
mov
jg
mov
lret
pop
pop
adc
fchs
mov
imul
add
add
xchg
cmp
pop
jle
cmp
jmp
inc
mov
popf
test
les
or
iret
jl
or
mov
jle
dec
jb
test
lods
sbb
fisttps
jne
xchg
call
jo
xor
mov
xchg
push
repz
pop
arpl
stos
daa
pop
rcrl
loope
imul
mov
aam
pushf
pop
mov
dec
ffree
cmp
pop
out
pop
aam
xchg
sbb
inc
sti
int
bound
cld
cli
mov
mov
data16
leave
lret
mov
test
cmpsl
fwait
ss
dec
lret
cmp
mov
test
arpl
fcomps
dec
shl
in
xorps
popf
lret
ljmp
add
fadds
xchg
loop
jge
and
xchg
cmp
lcall
pop
mov
xchg
das
fstps
fsubrp
xor
test
adc
movsl
insb
cwtl
sub
imul
or
int3
movsb
inc
pushf
jne
mov
mov
iret
testl
jg
jl
scas
jge
ljmp
fbld
pop
adc
in
jo
cli
cmp
roll
aam
std
adc
fstpt
int3
cmpsb
sbb
stc
repz
xor
ds
adcl
outsl
dec
daa
gs
fisttpl
xor
or
xchg
rorl
inc
insb
xor
or
pop
jmp
scas
jne
push
call
fwait
iret
mov
stos
ljmp
ljmp
xlat
inc
ret
ss
bound
cmpsb
pusha
mov
cmpb
or
enter
jecxz
aam
mov
xchg
out
fucomi
mov
ja
or
adcl
xchg
push
pop
test
push
mov
loopne
pusha
jge
jbe
xchg
scas
or
push
inc
in
pop
xor
and
cmp
rcl
lods
xchg
bound
loope
mov
popa
cli
mov
and
scas
shl
fimull
in
adc
out
push
iret
jb
jns
mov
or
jae
sub
lods
lea
push
or
mov
adc
in
movsl
inc
mov
push
add
lea
push
es
cmp
push
rcll
imull
std
stos
jge
push
mov
or
jo
fsubl
pop
sub
cmp
bound
mov
mov
call
jo
sub
xor
pop
push
sbb
xchg
ret
or
mov
dec
and
ds
clc
inc
cmpsl
fwait
jb
dec
add
cmpsl
fstps
add
js
mov
mov
dec
leave
xlat
push
pop
leave
and
je
push
add
mov
cs
dec
imul
sbb
shr
mov
icebp
cld
dec
notb
ljmp
test
popa
aam
int3
das
xor
pop
mov
push
jb
inc
cmpsl
stos
fildl
mov
pop
push
jns
sub
mov
fstps
popa
std
outsb
outsl
arpl
test
add
push
push
adc
pop
jmp
fidivl
cmp
or
sbb
jmp
and
out
mov
fwait
sub
fstpt
push
sbb
fnstcw
cmp
leave
xchg
scas
repz
js
jp
xchg
jmp
imul
cli
mov
add
add
and
scas
push
sbb
int3
sahf
js
add
add
dec
out
xor
clc
lea
cli
dec
and
dec
xor
sub
lcall
mov
mov
bswap
call
fildl
inc
xchg
test
repnz
les
mov
jg
or
inc
cwtl
mov
test
pop
aam
xor
jmp
and
repnz
xchg
enter
pop
out
test
adc
ret
and
push
sub
shl
jbe
jmp
jmp
dec
pop
ljmp
mov
push
fs
mov
sti
xchg
xchg
lret
adc
jns
imul
xchg
add
pop
fwait
pop
lock
pop
idivl
mov
arpl
sahf
xlat
adcl
lods
lds
sbb
addl
inc
sub
and
push
stos
fildll
xor
cmp
push
loope
push
out
sti
mov
push
dec
inc
loope
xlat
jae
mov
bound
stc
pop
add
movsb
push
pop
out
jmp
and
lds
xchg
cli
insb
push
dec
mov
push
push
xchg
dec
or
sub
or
clc
sub
loopne
inc
xor
and
inc
or
adc
sub
loop
roll
jle
scas
push
fstpt
outsb
inc
push
leave
sahf
dec
jp
adc
pop
add
sub
mov
xchg
imul
test
and
and
push
arpl
iret
inc
in
in
ret
cmpsb
stos
insl
pop
jb
add
mov
mov
push
js
xchg
icebp
fptan
and
xor
repz
jns
lods
fistl
and
mov
inc
add
xchg
push
test
iret
arpl
dec
xchg
cs
sub
push
pop
nop
mov
lods
ret
dec
jl
or
or
push
pusha
jge
xchg
in
imul
or
call
in
push
pop
mov
lock
gs
pop
fwait
ret
mov
cmp
movsb
das
ja
xchg
mov
ret
sbb
dec
pop
pusha
ss
js
out
mov
and
and
mov
repz
bound
xchg
pop
stos
jp
sarl
aaa
cs
inc
cwtl
adc
dec
xor
ljmp
aam
nop
push
adc
xchg
xor
cmp
mull
cwtl
outsl
addr16
dec
or
sbb
pushl
out
sub
jno
mov
test
sub
xor
cli
inc
xor
lahf
add
push
lods
imul
iret
cmp
and
mov
gs
inc
test
aam
push
push
adc
xlat
pop
jge
nop
dec
add
out
in
ss
cmp
lret
mov
xor
lods
movsl
test
mov
jae
addr16
mov
rorb
jmp
loope
test
push
and
push
gs
testb
cmpsl
scas
cmp
lea
lret
push
fcoml
mov
aaa
jg
dec
mov
outsb
jns
push
leave
sahf
idivb
xchg
dec
ja
push
cli
pand
out
pop
mov
enter
and
cmc
fxch
xchg
xor
testb
push
jge
add
xchg
daa
add
test
push
jmp
ret
cmc
pop
xchg
clc
cmpsl
ljmp
ds
inc
or
enter
push
add
inc
loopne,pt
pop
xor
add
add
fldt
mov
xchg
lds
sbb
inc
xor
in
jb
les
clc
jns
jp,pt
sub
jg
je
int
repz
mov
xor
mov
mov
stc
hlt
daa
jge
dec
mov
aam
dec
dec
and
sub
push
sbb
gs
outsl
jb
or
inc
push
enter
subb
int
lret
imul
adc
mov
pusha
push
inc
je
mov
test
inc
mov
lcall
insb
lcall
sub
push
shlb
and
or
hlt
or
loop
test
sbb
and
adc
repz
jno
mov
cs
fildl
push
xor
ficoml
push
mov
hlt
push
sahf
cwtl
and
outsl
mov
add
push
aad
or
adc
mov
mov
xor
xchg
dec
pop
push
icebp
ficompl
xor
adc
stos
and
int
sbb
add
lret
mov
outsl
inc
int
cld
jle
pop
fdivs
mov
cs
nop
mov
inc
mov
lock
xchg
mov
in
xchg
or
stos
sahf
push
pop
mov
mov
and
dec
xchg
xchg
mov
mov
into
adc
dec
push
xchg
xchg
stos
jge
inc
adc
mov
adc
loope
pop
inc
ret
call
cltd
mov
pop
add
das
dec
ret
enter
mov
hlt
lods
jp
cmp
xchg
cli
cs
dec
pop
outsb
mov
jecxz
mov
loopne
push
in
pusha
jmp
cwtl
pop
test
inc
stos
outsb
add
fdivrs
push
sbb
dec
aam
push
xchg
xor
mov
in
pop
add
insb
mov
loope
and
push
push
scas
bound
sub
mov
dec
insb
sub
fnsave
mov
mov
xchg
cmp
cmc
lods
mov
jns
imul
and
push
fs
out
cmp
enter
mov
xor
push
ret
js
popa
fwait
and
mov
ret
mov
xchg
stos
sbb
lret
jp
jne
or
vucomisd
add
mov
insb
insb
shlb
leave
cmc
std
dec
push
mov
sti
push
jg
xchg
xchg
shll
dec
and
insl
daa
aam
jns
pop
adc
test
sub
and
mov
or
int
mov
lret
scas
test
jge
sbb
ja
xlat
fdivl
xor
xchg
lret
lods
jae
xor
lock
test
xchg
mov
lret
lcall
mov
mov
insl
fiadds
das
filds
and
or
mov
clc
lret
in
mov
rorl
aad
pushf
sub
pop
mov
jbe
xlat
lret
out
shll
cmp
jae
mov
adc
push
loopne
in
mov
ljmp
mov
dec
shl
ds
repnz
negb
ja
push
rol
add
push
sub
cmp
jo
ljmp
add
mov
xor
pop
aam
or
push
or
add
xor
mov
pusha
fnstsw
mov
into
mov
sub
xor
loop
int
mov
and
add
xchg
jl
dec
or
adcl
fidivs
add
mov
lds
xchg
push
mov
call
sbb
jmp
aad
push
jo
movsb
popa
inc
hlt
das
dec
xchg
cwtl
add
dec
cmc
aad
mov
mov
ret
dec
icebp
inc
add
dec
fwait
in
fcoms
mov
ljmp
adc
dec
sub
xchg
xchg
jbe
shll
pop
cltd
mov
adc
aas
movsb
test
ret
flds
push
dec
call
pop
fidivl
mov
loopne
insl
add
fildll
out
xor
sbb
ficoms
les
sti
cmpsb
dec
mov
cli
jns
fisttps
js
inc
jae
out
pop
lret
mov
or
push
test
xchg
push
fwait
xchg
test
daa
into
push
scas
inc
sbb
ret
jnp
cltd
rorb
xor
xlat
adc
clc
lods
fistl
mov
insl
push
inc
pusha
test
popf
mov
mov
and
icebp
fnsave
repnz
clc
mov
aaa
inc
sub
leave
cmp
pop
push
xchg
rcll
rol
stos
leave
or
test
dec
jnp
je
jae
mov
sub
jne
jle
call
test
push
ljmp
xlat
jl
add
aam
push
daa
adc
mov
je
cmpsb
dec
loopne
sbb
add
pop
lahf
cmc
xor
mov
fiadds
xchg
mov
mov
mov
test
cmp
push
ret
cmp
adc
repz
into
int3
sbb
mov
idivl
and
imul
pop
cmpsl
repnz
dec
pop
pop
lret
xor
lcall
jge
inc
in
cld
mov
lods
cmc
adc
sbb
push
in
and
mov
cmc
dec
xchg
cmpsb
lock
inc
adc
mov
cltd
jb
aaa
pop
popa
sub
repz
cmp
rcrl
fimuls
hlt
aam
scas
jecxz
fcoms
stos
lcall
cmc
pushf
fstpt
dec
mov
pop
icebp
cld
lods
out
jo
lea
inc
and
data16
cld
cmp
add
pop
lahf
jns
jb
adc
or
pop
outsl
cld
sarb
push
shll
or
pop
inc
loop
cmp
dec
lds
repz
rorl
xor
icebp
lds
push
mov
fiadds
mov
mov
fidivs
pushf
add
dec
xor
push
ja
xorl
daa
sbb
js
or
xchg
sbb
sbb
mov
sub
push
fldl
out
movsl
jno
sbb
cmpsl
sub
cmp
lret
adcb
mov
xchg
sbb
das
out
cld
addb
lods
inc
hlt
push
dec
sahf
orb
fldenv
add
lret
sbb
jb
jbe
pushl
add
push
loope
imul
ss
push
scas
ret
lds
mov
inc
and
int3
addb
or
in
das
xchg
pop
lock
xor
sarb
and
loope
cmp
imul
jle
test
mov
ja
pop
adc
in
or
mov
adc
fwait
int3
test
addr16
mov
mov
dec
iret
rcrb
xorl
push
test
mov
out
dec
and
sbb
loop
cmpsb
bound
sti
push
mov
pminsw
jle
push
cs
cmpsl
and
fyl2x
out
pop
xor
cwtl
inc
dec
shrl
pop
movsl
push
inc
jns
pop
imulb
xor
or
cltd
inc
loop
sub
jne
sbb
jno
xchg
fistpll
pop
stc
cmpsl
pop
push
xor
add
push
ret
mov
add
dec
jae
cs
inc
outsl
inc
mov
movsb
mov
shlb
adc
jle
mov
scas
adc
cmp
ljmp
pop
and
sbb
adc
negl
jle
inc
test
mov
insl
adc
das
pop
pop
jns
inc
rcr
stc
repz
aad
in
push
pop
into
in
xchg
repz
mov
inc
add
xor
pop
stos
ret
out
jg
cmpsl
inc
xor
addb
xacquire
xchg
and
push
and
sub
scas
xchg
pop
inc
sub
add
aam
xchg
jl
cmpsl
ljmp
lcall
adc
add
sahf
push
jo
sub
inc
fs
jns
stos
dec
sub
push
notb
sbb
sbb
push
push
das
xor
test
mov
mov
outsb
fldenv
lods
pop
mov
mov
movsl
lahf
mov
repnz
and
or
jp
push
dec
mov
lret
lret
shlb
out
jne
ret
shll
inc
ja
push
cs
bound
mov
cmc
fsubl
xchg
mov
fistl
xchg
sahf
ret
fiadds
mov
and
mov
cmp
cmc
cli
outsb
mov
jo
das
mov
or
fwait
cmp
sbbl
sbb
xchg
cltd
cltd
addr16
clc
mov
lcall
mov
mov
popa
or
js
xchg
aam
lds
rcl
xor
mov
divb
movsl
lock
cwtl
xor
lahf
xchg
pushf
and
jns
jae
popa
out
inc
mov
repz
pop
inc
add
hlt
out
inc
in
dec
adc
fnsave
mov
mov
jle
lahf
xor
push
out
jmp
cmpb
test
inc
cwtl
scas
movsl
scas
cmp
push
jnp
pop
mov
xchg
mov
iret
icebp
dec
cmp
sbbl
inc
dec
push
lahf
sbb
lss
mov
out
adc
inc
scas
iret
mov
pop
and
dec
adc
aad
push
sub
xor
and
jg
pop
pushf
pop
inc
or
sbb
xchg
mov
cmp
ss
mov
and
sti
ljmp
aam
imul
dec
jle
cmp
xor
cmp
lods
clc
inc
jb
push
and
add
adc
sti
add
daa
cmp
arpl
frndint
dec
outsb
xchg
in
sub
inc
cli
pop
inc
inc
clc
adc
xchg
add
fidivl
cmc
inc
and
addb
insb
sbb
sahf
in
inc
push
mov
addl
popf
and
pop
loop
push
inc
es
ljmp
test
fdivl
rcr
rcl
jle
mov
add
cld
addr16
inc
xor
lods
mov
mov
or
mov
aam
push
insl
inc
ror
movsl
push
adc
xchg
xchg
mov
sub
shlb
into
cld
jecxz
mov
mov
mov
xorb
out
jge
fmulp
or
inc
and
cmp
data16
jle
stos
push
dec
ljmp
add
push
add
sbb
in
push
int
cwtl
sbb
cmp
iret
adc
sub
cmpsb
popa
pusha
jnp
mov
push
sub
push
mov
insb
pop
adc
cmp
test
inc
push
add
sub
inc
cmpsb
dec
imull
xor
stc
pop
xor
or
lret
push
add
jno
rorb
adc
xchg
pop
aad
and
jge
inc
adc
mov
test
dec
mov
mov
mov
aas
xchg
jae
jl
nop
js
inc
call
push
lds
js
xchg
sub
sub
and
in
jae
jge
pop
push
aaa
or
add
pop
or
cmp
das
imul
outsl
subl
lods
aam
stos
and
iret
in
sti
aaa
sbb
or
lock
iret
insl
pop
test
xor
vminps
xchg
xchg
dec
mov
push
push
pop
inc
sub
push
jle
lods
dec
or
jle
mov
int3
jb
or
mov
jns
je
sub
or
push
mov
push
jns
aaa
dec
fnsave
jmp
fucompp
inc
ret
sti
mov
push
xor
add
and
pop
lret
repz
nop
clc
clc
fidivrl
add
in
and
leave
inc
loopne
repz
xor
lahf
movsl
add
cltd
lahf
in
fistpll
dec
mov
xchg
jmp
adc
inc
daa
jnp
bnd
or
mov
sti
fwait
adc
xchg
and
arpl
jae
stc
push
xchg
jecxz
scas
filds
or
mov
scas
xor
outsl
dec
jns
scas
imul
or
adc
jb
jge
cmp
or
cmpsl
lahf
push
sarb
push
int
push
insl
and
pop
push
or
jl
lea
stos
dec
sbb
out
inc
dec
fnsave
mov
inc
push
add
sti
outsb
jae
sarb
shrb
aaa
pop
shrl
xchg
fiaddl
out
push
xor
pushl
add
cmp
pop
mov
insl
mov
xchg
fs
xchg
jl
cwtl
push
insb
sub
jo
insb
rcrl
inc
enter
sub
jbe
iret
sbb
sti
jg
test
xchg
adc
insb
repnz
mov
xor
dec
sarb
stos
rcl
loopne
adc
cltd
add
mov
xchg
mov
inc
mov
scas
dec
and
mov
decb
cmp
jnp
mov
mov
nop
or
add
sub
mov
push
jne
insl
lret
stos
scas
fldenv
stc
pop
popf
sbb
imul
divb
out
popf
movsl
push
shl
movb
xchg
imul
or
cmc
insb
sub
bound
pop
mov
int3
popf
pusha
scas
popa
rcrl
dec
movsb
jle
daa
aas
movsb
add
js
cmc
push
out
popa
cmpsb
dec
adc
ret
push
xor
sub
int
ret
add
into
jb
or
xchg
sbb
dec
icebp
xor
int3
push
xchg
mov
push
sbb
mov
dec
push
xor
and
stos
addr16
mov
std
in
bound
scas
or
jae
lock
add
fucomi
mov
push
rolb
adc
mul
popa
add
xlat
jb
cltd
les
or
jmp
insl
cmpsl
inc
int
rcrl
pop
lea
loop
mov
ja
in
xor
arpl
and
adc
test
adc
ljmp
repz
movsl
scas
xchg
or
jns
shl
lret
mov
push
xor
cmp
jg
out
sbb
adc
ds
nop
and
pop
rcrb
sbb
enter
and
pop
mov
addl
stos
cmpsb
inc
jno
js
xlat
mov
cmc
xchg
xchg
stos
xor
cmp
loopne
icebp
dec
movsb
std
xchg
pop
test
xor
in
pop
push
mov
sbbb
or
mov
xor
cwtl
xor
or
push
movl
mov
xchg
xchg
out
inc
mov
cmpl
cmp
or
in
arpl
push
in
and
lods
in
test
sub
outsl
or
xchg
mov
out
xor
cmp
aaa
cmp
mov
mov
rcrl
pop
das
shlb
dec
hlt
xchg
out
mov
add
mov
lret
pop
lods
xlat
mov
xor
adc
mov
push
inc
incb
sub
loopne
mov
sbb
and
xor
test
shl
cmpsl
push
push
repz
loop
jbe
fwait
bound
negb
int
push
cltd
sub
int
pop
scas
mov
insb
pusha
dec
sbb
scas
cli
cmp
inc
cs
lea
fnsetpm(287
js
cmp
xchg
sbb
xchg
dec
aas
cwtl
cmp
lds
lds
add
xor
lds
int
in
out
cmp
lret
push
sbb
or
cld
xor
mov
xlat
cs
push
push
sub
or
incb
lods
push
mov
movl
lock
insl
ret
imul
shll
mov
aaa
lcall
in
sub
xor
cmp
sbb
sbb
mov
add
call
push
push
imul
lods
cltd
xchg
mov
mov
mov
push
in
cmp
dec
shll
xchg
jnp
push
addb
inc
int3
jl
mov
pop
lret
push
pop
sbb
sbb
cmpsb
mov
popa
fwait
imul
jbe
sbb
add
enter
rorl
mov
jb
sbb
mov
pusha
shrl
pop
lret
cmpsb
cmp
pop
xor
sahf
out
lret
sub
mov
mov
fstps
cmp
add
repz
mov
mov
pop
xor
ljmp
rolb
lds
add
cmp
mov
push
mov
mov
xor
jp
jo
sbb
cmp
aaa
mov
popf
push
push
mov
mov
test
sbb
loopne
insl
inc
or
addb
and
sarb
add
bound
mov
mov
pop
lock
lret
push
outsb
call
adc
ljmp
addr16
pop
dec
test
add
add
xor
dec
fs
push
jbe
xlat
jmp
data16
pop
out
jne
mov
push
or
dec
out
xbegin
adc
xchg
inc
lock
jmp
cmc
mov
mov
popf
ret
xlat
add
fdivl
shll
xchg
sub
clc
test
dec
lds
xor
mov
or
jo
pop
cmp
and
mov
sbb
pop
loop
xor
insl
sub
hlt
mov
pop
imul
les
mov
cli
add
stos
push
cmp
xchg
sub
pop
mov
pop
insb
dec
and
inc
in
int
ds
out
mov
dec
js
popf
and
add
mov
loope
fistpl
iret
test
enter
stos
stos
sbb
or
data16
inc
add
ficoms
push
js
fnstsw
es
hlt
stos
inc
adc
mov
push
test
bound
jb
inc
mov
jecxz,pn
movsb
test
std
aam
loope
lcall
sbb
das
and
punpcklbw
cmp
stos
dec
das
repnz
lock
sti
je
mov
add
bound
or
cld
adc
test
es
mov
or
pop
fnsave
jne
popa
test
in
sti
out
sbb
xor
loopne
mov
dec
addr16
icebp
insl
jb
pushf
mov
add
outsl
mov
xor
fsubrs
dec
arpl
pop
inc
pop
fstps
sub
mov
and
xor
push
insb
adc
mov
insl
cmp
int
ret
xchg
test
push
xor
ljmp
test
ret
clc
xor
into
adc
dec
fwait
dec
pop
je
adc
or
stos
and
mov
pop
out
push
jne
fldl2t
ss
cmpsb
nop
mov
push
mov
add
loope
jno
les
sbbl
aas
dec
dec
inc
push
jno
sar
rorl
xchg
imul
filds
sbb
push
mov
add
sub
xor
loopne
cli
jbe
orb
out
mov
push
xor
enter
in
push
sbb
push
inc
add
pop
out
and
jbe
or
or
push
imul
pusha
out
leave
test
or
or
add
mov
sti
sub
sub
shl
inc
test
pop
mov
mov
je
sbb
mov
xor
pop
cli
add
pop
clc
sbb
ret
and
outsb
hlt
xchg
adcb
mov
push
sub
loope
enter
arpl
mov
int3
inc
dec
insl
dec
pop
mov
fwait
push
dec
mov
cmp
aas
pop
and
popa
xor
and
jmp
push
insl
in
loopne
ror
cmpsb
or
aam
imul
adc
cmpsb
das
or
test
jae
mov
cwtl
scas
xor
push
mov
and
rcrb
inc
ss
lock
nop
das
divl
gs
loopne
sbb
pop
xor
nop
push
decl
jecxz
adc
pop
and
loope
sub
cmp
fcomi
std
and
icebp
out
and
fucomi
fcmovu
rol
iret
mov
jge
js
xchg
imul
fwait
mov
dec
outsb
sbb
cmp
mov
mov
cltd
out
or
mov
dec
ficomps
xchg
pop
lods
mov
add
int3
imul
ds
jecxz
lret
mov
movsl
sbb
push
pusha
ss
cld
mov
add
in
mov
fcompl
add
rorl
mov
icebp
fs
xor
and
aad
add
xor
jb
push
push
push
fldt
add
cmp
lahf
arpl
jae
sub
rcrl
add
lods
aad
loope
mov
fdivrs
arpl
jmp
pop
mov
sbb
and
xor
add
sub
mov
adc
adc
dec
fisttpl
outsl
out
mov
sub
mov
in
dec
adc
popf
lock
stos
inc
cmp
mov
mov
subb
fisttpl
out
or
add
jae
pinsrw
sub
in
or
icebp
mov
das
int3
stc
jae
pushf
or
stos
lret
push
cmpsb
and
xor
mov
aam
inc
decl
mov
out
mov
ljmp
rolb
cmp
int3
sahf
mov
mov
in
cmpsl
adc
jnp
lahf
cmp
cltd
xchg
stos
push
repz
out
in
loopnew
mov
shlb
aam
dec
mov
xchg
dec
ljmp
andl
out
and
out
outsl
dec
push
stc
lods
jnp
fdivl
out
inc
sbb
repnz
es
push
jecxz
roll
mov
sbb
lret
push
mov
test
outsl
loopne
xor
std
mov
test
sub
ror
cli
int
mov
iret
cmp
in
adc
cs
pop
sub
or
jae
popa
xor
xchg
push
adc
imul
or
insb
dec
fsub
cli
xor
cmp
mov
movsl
ja
outsl
gs
jg
andl
pop
fcoml
loopne
sbb
push
enter
inc
xchg
pop
sbb
fs
or
and
mov
lahf
jp
out
adc
jl
add
sub
movsl
xor
iret
dec
or
popa
cmp
push
mov
std
sbb
jl
and
sbb
jmp
lods
movsb
xor
adcl
sti
negl
jnp
data16
pushf
adc
lret
mov
pop
pop
sbb
das
and
adc
jge
ffree
or
xor
inc
outsl
sbb
incl
loopne
cmp
push
lods
xchg
jno
inc
int
inc
push
ret
mov
lods
aas
add
xchg
push
mov
push
add
lea
mov
js
rcr
lahf
push
dec
sbb
pushf
mov
cwtl
clc
ljmp
loopne
jo
xchg
sbbb
mov
xchg
add
popa
insl
sbb
pushf
push
jp,pn
jmp
and
roll
push
or
jno
adc
pushf
mov
leave
mov
pop
or
mov
xor
jge
dec
or
cmp
shrb
movsb
pop
sahf
inc
xor
pop
jecxz
pop
dec
mov
sbb
pusha
mov
push
push
mov
xor
sbb
pop
in
stos
subl
adc
jbe
xor
scas
lods
das
popa
clc
pop
pop
cmp
lods
pop
jnp
in
jbe
dec
jbe
nop
leave
adc
nop
out
jno
mov
cmp
cs
mov
lods
xor
sbb
inc
add
stos
add
mov
mov
inc
and
sub
mov
mov
call
xor
mov
pop
out
mov
mov
mov
mull
fiaddl
pusha
dec
xorb
repz
rclb
outsl
test
adc
js
xor
in
xor
je
cltd
jg
jg
dec
loop
or
arpl
shrb
sarb
out
jo
insl
and
aas
fstps
cld
ret
call
fsts
outsb
cld
push
jp
push
push
xor
inc
aaa
mov
gs
into
int3
xor
xor
sti
and
loop
inc
cmp
xchg
out
xor
cmc
ja
hlt
pushf
lea
fadds
inc
mov
or
mov
std
repz
scas
mov
iret
enter
xchg
lcall
xchg
push
mov
mov
ja
push
loope
jg
cltd
pop
inc
cmpl
movsl
push
bnd
cltd
inc
cli
push
push
sub
ror
jp
sti
jne
sbb
in
in
inc
push
in
dec
stc
mov
mov
repnz
call
inc
mov
xchg
cmp
mov
loope
inc
out
xor
mov
das
inc
inc
xor
xor
add
into
dec
push
aas
addl
xchg
outsb
rorl
mov
jge
push
dec
cwtl
lcall
fidivrl
pop
loop
xchg
mov
rcr
jnp
shrl
addb
pop
sbb
lea
push
dec
xchg
outsl
pop
cmp
cmp
mov
push
ret
in
pop
xchg
xor
push
lds
ja
mov
sbb
push
into
testl
insl
or
cs
inc
jecxz
pop
mov
lahf
dec
sub
mov
lods
mov
jo
lret
das
sub
iret
movsl
repz
jbe
popf
mov
aaa
jb
lret
push
lds
sub
andb
push
mov
mov
out
add
adcb
rcr
push
jecxz
es
jecxz
jb
sub
fwait
and
loopne
repnz
popf
jbe
adc
adc
lds
jge
push
and
lcall
push
or
fsubrl
pop
fs
andl
or
sub
inc
and
push
pop
jbe
lds
out
rcrb
testb
movsb
ja
aas
loope
pop
push
mov
stos
shll
gs
pop
pop
sub
sbbl
pushf
mov
dec
aad
js
mov
dec
pop
in
fdivrl
push
jae
daa
mov
and
loop
iret
jp
push
mov
add
addr16
out
idiv
mov
push
xchg
xchg
popf
popa
adcl
hlt
inc
fdivl
add
push
mul
inc
xor
icebp
cmc
pop
cmpsl
xor
mov
mov
push
loopne
push
orb
mov
loop
rcrb
pop
adc
dec
inc
es
xor
mov
test
xor
xchg
mov
gs
inc
inc
popf
push
cs
into
dec
push
lret
xor
fs
push
adc
pusha
and
jmp
add
mov
push
dec
out
push
xor
sahf
mov
add
out
adc
adc
mov
ficoml
out
push
sbbl
mov
mov
repnz
xor
lret
xor
pop
or
or
in
in
jns
loope
or
and
imul
jp
dec
outsl
ss
xor
cmc
jle
cli
mov
mov
or
sub
mov
popf
mov
std
and
pop
outsl
dec
push
movsb
xor
xor
cmp
adc
cmpsb
jecxz
int
insb
add
fildll
add
bound
aad
mov
out
add
adc
dec
stos
cmp
jecxz
popa
fistl
lea
stos
arpl
adc
stos
inc
mov
popa
xlat
sbb
inc
cwtl
fsub
mov
add
fdivs
movsl
xchg
xchg
adc
rclb
mov
push
bound
iret
mov
mov
mov
and
fnstcw
pushf
outsb
push
sub
dec
add
int
pop
sub
xor
dec
shrb
and
in
jns
push
adc
andb
stos
shll
inc
jl
push
adc
push
or
insl
fdivl
mov
loope
aam
hlt
sbbl
test
cmpsb
push
std
xor
dec
test
xchg
aad
inc
mov
notl
push
das
jae
outsl
cmpsl
loopne
mov
cmp
in
xchg
push
push
stos
jb
sbb
push
lret
pop
sbb
mov
ljmp
int3
pushl
jno
sbbb
push
cwtl
dec
add
xor
bound
clc
stc
adc
js
or
cmp
pop
mov
push
clc
mov
push
mov
mov
repnz
push
stc
nop
repnz
imul
sub
xchg
jge
cmpsb
lods
aaa
rolb
sahf
popa
add
mov
mov
scas
lock
pop
cld
test
fadd
jge
shrl
sahf
leave
xor
les
mov
das
out
dec
adc
add
inc
cmp
out
xor
mov
add
mov
movsb
je
and
lock
mov
add
shlb
and
xchg
inc
insl
lods
ja
push
lcall
pop
cmpsl
in
lret
cld
pop
lods
test
ja
cmpsl
inc
ss
and
xchg
aaa
jno
jbe
mov
pusha
xchg
mov
inc
imul
pop
je
xchg
cmpsb
pop
outsl
addr16
pop
push
and
add
cmp
mov
fs
insl
push
cmp
lods
stos
add
dec
fcomps
in
mov
lods
int3
or
sub
sbb
cmpsl
xor
or
xor
push
adc
or
add
and
sbb
add
dec
insb
test
cmp
xchg
mov
call
sub
and
xchg
jecxz
out
int
cmp
imul
cltd
sub
pop
sbb
scas
or
xchg
fbstp
mov
push
mov
mov
or
testb
jb
jmp
add
shll
rcl
pusha
lcall
imul
xchg
orl
out
pop
lock
dec
fnstcw
mov
lret
shlb
push
call
mov
push
mov
in
push
rorl
mov
sti
rorb
cmc
ljmp
ret
js
bound
les
js
push
fsubrs
mov
nop
mov
xlat
jg
or
out
popf
daa
mov
xchg
sahf
decb
xlat
shl
pop
out
lcall
call
pushf
in
in
xchg
push
jge
imull
pop
cld
pushl
xor
push
idivb
inc
adc
lret
xchg
enter
fst
adc
aaa
iret
sub
mov
pop
cmp
cmp
stc
jae
push
fwait
test
adc
push
mov
or
data16
xor
adc
fisttpl
imul
dec
sub
fwait
jmp
ljmp
xchg
scas
mov
adc
sub
cmpb
pop
sbb
xchg
cld
cmp
mov
nop
and
ss
push
icebp
push
lea
sub
outsb
push
popa
call
out
or
cmp
movsb
pop
push
outsl
inc
pmulhw
jnp
mov
ljmp
popa
pop
into
into
cwtl
loope
jnp
push
adc
loop
cwtl
sub
or
mov
push
pop
leave
inc
lods
pop
cmp
xor
pop
mov
pop
and
xor
mov
push
pop
fidivs
push
lods
stos
shlb
pop
fs
pop
int
lcall
std
cmpsb
pop
sbb
jp
ljmp
push
dec
movsl
dec
repz
xor
fbstp
cmpsl
mov
rcrb
in
rcrb
out
adc
add
aad
loopne
xchg
cmpsl
aas
lcall
mov
adc
fimuls
cmp
stos
sbb
fld
xchg
stos
clc
fucom
cmpsb
ja
xor
push
add
das
lds
push
int3
inc
cmc
sbb
test
leave
push
repnz
or
mov
jp
adc
pushf
mov
adc
inc
mov
xchg
daa
jo
shl
ljmp
dec
sub
cmc
insl
in
clc
sarl
xchg
sub
pop
mov
fmulp
test
jmp
mov
push
das
fcomps
outsl
push
rcrl
xlat
rcll
clc
imul
push
stc
test
jne
fcoml
lret
adc
shll
in
adc
push
push
dec
xchg
mov
sbb
xchg
fadds
mov
loope
int3
cli
push
add
insl
jnp
addr16
adc
clc
or
movsl
xchg
sahf
and
loopne
mov
daa
mov
lock
test
into
mov
mull
xor
xchg
mov
test
mov
mov
push
es
mov
cmp
nop
lds
es
fmul
dec
jmp
jo
mov
enter
enter
cmp
call
mov
pop
mov
sbbb
mov
dec
push
les
and
inc
lock
mov
cmp
mov
cmp
test
inc
es
xor
lock
aad
ret
dec
ffree
cli
clc
add
gs
sbb
movsb
insl
xchg
out
cmp
sub
push
pusha
shlb
jno
dec
xchg
scas
lret
call
sahf
mov
and
inc
and
pop
sbb
loopne
movsb
in
sbb
ret
rol
mov
xchg
inc
lock
fbstp
adcb
sarl
shlb
push
loope
mov
push
scas
mov
push
xlat
call
pop
aas
inc
fwait
les
popf
cmp
popa
pop
pop
dec
sbb
lcall
or
jae
test
sbb
loopw,pn
mov
arpl
pop
fmulp
stos
divl
je
dec
mov
sbb
es
and
addr16
sbb
cwtl
sbb
jbe
pop
jns
test
adc
out
sbb
xor
icebp
ds
dec
sti
data16
push
xchg
and
adc
push
mov
adc
cmp
roll
daa
add
lock
adc
je
mov
jecxz
xchg
repnz
aas
std
inc
cmpsb
adcb
arpl
sbb
loope
mov
cmp
insb
cmc
fisubrl
xlat
insb
clc
enter
dec
add
frstor
jmp
test
push
imul
adc
test
test
lret
and
int
movsl
xchg
push
xor
out
data16
sub
ficoms
xchg
insl
cli
mov
inc
insb
sub
mov
mov
rcll
xchg
lcall
stos
daa
jg
clc
xchg
rorl
mov
aaa
fwait
xchg
sahf
mov
inc
xlat
insl
add
sub
pop
testl
mov
lods
cmpsl
addr16
mov
repnz
mov
mov
add
mov
in
aam
rcrl
fbstp
or
lcall
aas
out
jg
jle
test
jns
int
arpl
jns
and
add
push
mov
add
xchg
sbb
in
push
rorl
jg
pusha
mov
sbb
sti
pop
add
jp
fld
aas
and
stos
out
jmp
push
adc
push
ret
add
push
push
cmp
pop
dec
mov
aaa
sbb
xchg
cltd
jno
dec
cmp
jmp
pop
ja
inc
jg
ja
pop
std
jmp
mov
mov
test
sbb
xlat
gs
inc
lahf
mov
mov
jo
and
das
mov
mov
movsl
ret
dec
mov
pop
dec
xchg
cmp
mov
adc
dec
cmp
pop
dec
aas
push
lea
xor
dec
mov
into
fst
or
repnz
push
ss
daa
and
insl
adc
out
adc
mov
stos
xchg
loopne
and
dec
pop
sbb
cs
stc
sti
or
xchg
dec
dec
mov
imul
pushf
mov
sub
xor
jge
pop
imul
iret
stos
jg
adc
test
test
testl
pop
sub
mov
push
das
jecxz
and
in
popf
ljmp
add
sub
sahf
fldl
cli
repnz
pop
je
gs
cmp
xor
sbb
sbb
lahf
dec
arpl
loopne
les
rcll
mov
aad
pop
push
xor
cmpsb
insb
fdivrl
lods
adc
xor
mov
imul
roll
clc
cld
mov
inc
adc
inc
add
jle
ret
dec
lea
ss
pmaddwd
popa
addr16
and
test
sahf
pop
int3
mov
cli
mov
push
js
xor
cwtl
lods
push
cmp
xor
pop
imul
jecxz
call
lods
inc
icebp
push
jne
rol
mov
rorb
mov
push
stc
decl
adc
int3
imul
and
pand
add
inc
stc
test
std
inc
dec
mov
std
adc
jp
pop
les
sub
pop
mov
xchg
xchg
add
ss
sbb
popf
push
outsl
pop
fcmovnb
sbb
fidivrl
lcall
and
jnp
fsubl
inc
jp
in
pushf
xchg
mov
jmp
sub
movb
int3
cmpsb
pop
pop
movsb
rcrl
cmpsb
fstl
daa
das
and
xor
xchg
push
pop
hlt
aam
lock
push
aam
stos
mov
andb
inc
mov
mov
inc
outsl
jecxz
stos
arpl
movsb
mov
aaa
mov
jp
mov
std
jl
mov
nop
push
clc
stos
les
loopne
mov
and
lret
dec
outsb
or
cmpsl
fwait
nop
clc
sbb
dec
push
add
jns
adc
dec
lock
or
in
lds
test
mov
mov
aas
imul
jmp
pop
fwait
fistpll
and
sbb
mov
das
add
or
add
cwtl
mov
fbld
imul
lods
cmp
iret
rcrb
push
clc
enter
push
lds
notl
loop
dec
dec
flds
push
dec
je
push
pop
push
cmp
pop
inc
xorl
hlt
out
daa
mov
sbbb
mov
pushf
xchg
outsb
scas
inc
xorl
shlb
or
sbb
je
cwtl
adc
dec
ss
fnstenv
lock
aam
test
push
xor
sub
loop
cmp
mov
iret
sub
sarl
sbb
stos
mov
jno
ljmp
in
nop
shlb
sahf
xchg
scas
jg
js
sub
ret
dec
adc
lock
jbe
dec
or
int
mov
cmp
jl
in
pop
bound
sub
sbb
xchg
fsubs
movsl
jnp
xchg
mov
xchg
lods
mov
mov
mov
lcall
or
ret
rol
in
mov
int3
or
mov
sub
out
dec
or
jp
mov
fstpl
pushf
subl
add
xchg
ror
stc
pop
adc
mov
add
inc
push
into
inc
lods
movsbl
insb
jae
mov
and
pop
or
inc
xor
pop
xor
xor
loopne
push
inc
mov
dec
cs
iret
push
mov
inc
jb
cwtl
mov
jae
lods
jecxz
out
sub
aas
movsb
cmpl
xchg
cmpb
int
pushf
cmpsb
popa
sbb
in
pop
or
cltd
and
pop
test
mov
fs
orl
add
insl
mov
dec
jns
sbb
push
test
inc
mov
out
mov
adc
js
cmp
mov
movl
or
shr
pop
sbb
pop
xchg
pushf
mov
mov
shlb
test
xor
aad
out
xchg
scas
shll
test
xchg
fldt
loop
in
movsl
jmp
ret
mov
xor
in
mov
das
push
into
in
or
sbb
sbb
sub
mov
arpl
sub
jp
adc
inc
and
rcr
inc
ret
popa
pushf
lcall
mov
test
inc
or
xor
push
leave
test
dec
jg
jae
and
push
push
lret
cmc
jns
cmp
xor
mov
jmp
sbb
fldt
add
inc
add
lods
cmc
dec
hlt
int3
decb
adc
test
icebp
pop
ljmp
mov
roll
jbe
jb
inc
jle
add
je
jge
sbb
pop
imul
call
mov
pop
cmp
push
cmp
enter
mov
dec
mov
mov
xor
cmc
ficoml
xchg
or
mov
loope
jb
mov
or
jb
in
into
pop
repz
pop
xchg
mov
xchg
inc
sbb
imul
adc
mov
out
out
cmc
dec
xchg
bound
mov
ljmp
movsb
push
insb
outsl
cmc
loope
jne
call
rol
dec
xor
pop
ret
mov
cs
adc
loopne
clc
iret
sbb
xor
out
addr16
push
int3
ficoml
mov
ja
jp
hlt
arpl
lods
fmul
lea
mov
mov
pop
sarl
adc
js
sarl
cmp
mov
push
adc
push
int3
insl
pop
repnz
mov
xchg
jl
jg
push
dec
lods
imul
mov
push
push
pop
movsb
pop
cmp
gs
add
out
push
mov
xchg
cmp
sarb
aam
cltd
jmp
aas
ret
sbb
ror
pop
insl
mov
xchg
shrl
test
or
aaa
decl
mov
dec
add
in
dec
cld
sbb
jl
mov
sar
outsl
mov
and
add
sti
mov
sbb
push
cwtl
arpl
inc
cld
insb
enter
cmp
cmp
mov
lock
add
mov
and
xchg
mov
addb
cmc
loopne
mov
mov
xchg
clc
xor
push
jns
push
enter
test
sub
shlb
adc
xlat
callw
jecxz
cmp
hlt
leave
fnstenv
mov
adc
lret
push
popa
popf
loope
incb
je
scas
outsb
fistpl
xchg
adc
xchg
cmp
scas
test
sub
leave
enter
lcall
xchg
xchg
std
repnz
gs
push
pusha
push
mov
xchg
leave
fsubrl
ds
test
pop
dec
dec
sub
pop
pop
rclb
fwait
arpl
and
mov
aas
mov
loop
nop
pop
add
inc
fsubl
mov
std
mov
mov
sub
adc
xchg
pop
clc
gs
sbb
xor
call
addr16
pop
xor
hlt
ret
xchg
xor
cli
es
lods
jno
jle
cmc
xchg
pop
and
mov
jae
dec
dec
inc
mov
cmpb
movsb
mov
mov
test
imul
gs
cmp
mov
aas
in
mov
add
cmp
cmp
push
out
dec
xchg
mov
jno
xorb
mov
or
popa
pop
popf
loop
xor
mov
out
pop
rolb
js
cld
pop
outsb
pop
and
movl
inc
hlt
out
mov
mov
mov
or
xor
nop
and
lret
pop
lods
lea
sub
xchg
mov
mov
mov
loope
jp
inc
and
push
aaa
cmpl
leave
call
add
repz
loope
sbb
xor
dec
mulb
pushf
jmp
xor
dec
and
stos
mov
fwait
adc
xchg
or
pop
into
pop
push
xor
imul
xchg
adcb
movsb
repz
jge
pop
push
imul
jecxz
adc
fwait
stos
or
adc
ficompl
call
into
adc
int
dec
in
pop
das
cmpsl
pop
mov
scas
mov
lcall
or
dec
rorb
popf
repz
and
fmulp
mov
in
test
add
divl
pop
xor
mov
push
std
inc
leave
in
sub
xchg
pop
cmp
shr
std
pop
push
mov
mov
mov
dec
cmp
inc
mov
rolb
fisubrs
mov
lock
decb
inc
movsl
jl
gs
sti
jmp
out
lcall
inc
ss
push
lea
test
out
ja
repnz
je
lret
dec
jp
jns
mov
pop
in
mov
jo
test
popf
add
inc
rorb
and
cli
in
adc
es
xor
mov
xor
icebp
sbb
fists
or
jge
push
in
in
loopne
dec
and
rorl
maxps
rclb
mov
push
jp
sbb
enter
and
sti
cmpsb
mov
lods
mov
adc
out
je
push
arpl
sbb
dec
out
es
data16
loop
xchg
je
lahf
or
enter
and
daa
pop
mov
arpl
cmp
cmp
in
adc
lds
movsl
loop
sub
jge
dec
cs
fs
xchg
push
xor
pusha
pop
sbb
pop
xchg
or
push
mov
hlt
cmpb
out
pop
push
dec
inc
stos
and
gs
cmp
xor
mov
loope
jo
mov
cltd
shlb
into
add
fdivl
or
fs
inc
pop
movsb
jmp
testb
sbb
outsb
scas
sbb
mov
or
pop
rcr
sub
inc
xchg
mov
scas
js
aaa
inc
push
movb
xchg
push
cmpps
pop
pop
hlt
jp
add
push
out
arpl
cmp
ljmp
repnz
or
icebp
sbb
ffree
dec
lods
add
enter
subb
pop
out
add
fcoms
push
add
push
cmp
xor
or
or
dec
or
add
mov
mov
iret
rcl
aaa
pop
rcrb
stos
jo
ljmp
inc
inc
add
daa
or
loop
mov
enter
mov
sub
or
sbb
push
insb
push
xchg
add
push
lret
push
lcall
push
push
push
mov
insb
jg
aam
repz
inc
sbb
sub
xor
adc
sbb
xor
gs
andb
jge
das
mov
cmpsl
and
and
push
mov
rcll
sub
bound
adc
stos
add
mov
ret
pop
fs
stos
test
push
mull
stc
out
mov
push
xor
fldcw
add
add
lock
adc
mov
sbb
cwtl
pop
andb
pop
stos
notl
shrl
stc
cwtl
repz
push
int
das
push
shrl
add
and
popa
lret
lahf
jno
push
std
adc
jle
outsb
lret
insb
shrl
xorl
adc
mov
dec
push
fidivs
add
bnd
jns
dec
popf
sbb
and
testb
mov
cmp
cmp
loope
jno
add
xchg
fisttps
jo
xchg
fdivrp
dec
xor
das
scas
push
mov
mov
mov
pushf
ja
or
add
imul
pop
xlat
add
mov
out
fidivl
jmp
mul
in
jne
iret
enter
sub
in
or
insb
mov
sti
inc
insb
repnz
dec
ret
jbe
xor
cld
pop
or
call
sub
and
cmp
in
stos
mov
cmp
icebp
inc
out
mov
cmp
cld
mov
in
mov
and
jb
mov
push
insb
insl
push
enter
dec
xor
repz
nop
repnz
mov
xor
sub
inc
mov
adc
jecxz
ljmp
inc
jmp
lea
rcrl
movsb
fisubrl
sbb
and
out
ds
xor
inc
inc
insl
xor
or
rolb
push
cmc
bnd
mov
js
or
ret
mov
mov
mov
xchg
jbe
adc
cmp
nop
mov
je
lock
daa
daa
mov
mov
ds
rcl
test
lea
lea
rorl
lcall
aad
mov
mov
into
dec
mov
inc
xorb
cmpsb
or
mov
out
cs
imul
mov
or
mov
sub
push
add
pop
xchg
cmp
lahf
push
push
std
aaa
sub
ficoml
xor
sbb
sbb
in
mov
mov
cli
out
loop
stc
loope
jns
sbb
movsb
add
cmp
cmp
shlb
scas
cld
jle
das
das
jo
sahf
faddl
rcll
test
stos
cwtl
mov
in
push
ljmp
stos
mov
test
mov
iret
dec
repnz
aaa
or
cmp
adc
lret
sbb
in
mov
sbb
jnp
or
hlt
insb
push
imul
mov
adc
push
adc
loop
iret
mov
shll
or
ficompl
loop
lcall
adcl
dec
out
sub
sub
cmp
lods
fnstsw
xor
fldt
jnp
mov
shrb
cs
nop
ret
loopne
inc
arpl
and
jns
test
sbb
stc
scas
jb
or
sti
cltd
jae
inc
xor
jg
xor
or
push
jmp
inc
rorb
and
nop
sub
or
pop
sub
dec
xorb
lahf
sahf
jecxz
fld
dec
rorb
insl
mov
outsb
push
outsl
fstpt
jmp
jmp
mov
jmp
xchg
dec
inc
fisttpll
or
movsl
lods
out
mov
add
aam
add
add
mov
neg
jmp
cltd
mov
ja
rcl
aam
das
mul
add
or
inc
sbb
xchg
ficoml
in
leave
pusha
or
mov
pop
cmp
and
adc
sbb
je
sbb
mov
jns
loop
add
mov
dec
push
nop
out
sti
sbbl
out
popf
pop
outsl
push
out
decb
int3
lret
inc
jno
das
lds
into
or
inc
mov
xchg
cld
subb
ret
push
mov
or
lcall
pop
add
pop
test
addr16
push
jnp
adc
shlb
or
mov
fnstsw
out
jmp
xchg
jmp
outsb
addr16
testl
repz
unpcklps
fs
or
iret
mov
cmp
mov
adc
fs
iret
mov
xlat
mov
rclb
dec
std
xlat
aaa
push
sub
cmc
fnstcw
mov
jne
addr16
imul
mov
and
cli
sub
sti
cltd
in
inc
mov
cmp
mov
xchg
outsb
aam
mov
daa
data16
lea
pop
insl
rcll
ss
xor
cli
or
fmuls
cmpb
stc
mov
jmp
adc
jnp
stc
aam
in
scas
push
nop
xor
int
scas
mov
outsl
int3
jg
and
add
cmp
inc
sbb
jp
add
bound
jnp
add
sahf
mov
lods
int3
sbb
mov
fisttpll
mov
mov
into
sahf
mov
xor
ds
jl
data16
cmp
pop
inc
push
add
xchg
lret
xchg
and
mov
cmovge
or
jmp
pop
sub
xchg
aad
test
scas
in
daa
lea
dec
adc
pushf
jle
gs
jo
cmpsb
adc
xchg
xchg
lock
fs
mov
scas
sahf
dec
pop
fs
sub
leave
adc
movsb
cli
lea
jmp
or
pop
pop
xchg
jp
daa
jl
jb
nop
jno
inc
push
mov
out
loopne
xchg
xchg
xchg
std
mov
add
popf
and
lock
adc
xchg
add
mov
or
mov
xchg
sbb
add
test
dec
fisttpl
cmpsl
jg
xchg
out
lock
dec
xchg
lods
mov
jb
lret
inc
xlat
xchg
loop
pop
icebp
pop
mov
pop
mov
xchg
pop
jecxz
loopne
in
sub
ja
stos
gs
dec
mov
lods
push
cmp
in
xchg
inc
lds
imul
clc
movl
push
mov
shrl
xchg
ret
inc
or
hlt
insl
sbb
sub
pushf
repz
mov
scas
das
test
dec
mov
les
or
pop
sbb
shrl
shl
sbb
sbb
add
inc
jmp
out
andl
cmc
cwtl
in
mov
pop
jo
sbb
inc
sub
adc
jge
xchg
pop
inc
clc
mov
mov
jge
add
loopne
push
lock
xchg
lock
aaa
repz
add
stc
sub
sub
or
ja
out
xchg
out
sub
lret
xchg
leave
add
stos
push
xor
push
adc
cmp
xor
out
inc
lods
xor
xchg
push
push
hlt
lea
or
pusha
inc
in
out
fisubrl
xchg
jo
mov
js
jne
aas
push
das
cmp
ja
push
pop
mov
out
inc
dec
ret
sub
int3
aam
mov
mov
sbb
mov
bound
loop
sahf
faddl
adc
mov
mov
push
inc
inc
sub
xor
cmp
push
mov
xor
xchg
test
jbe
mov
or
mov
loope
and
push
shrl
mov
imul
aad
mov
sbb
ss
add
sahf
sbb
inc
add
andb
push
jbe
sbb
ss
push
cwtl
mov
mov
inc
lahf
ret
mov
out
push
jb
roll
jmp
cmp
maskmovq
imull
mov
jo
fidivs
dec
xchg
cltd
das
cwtl
repnz
and
inc
out
mov
or
mov
push
sub
mov
mov
push
mov
dec
fldenv
dec
icebp
xchg
nop
loopne
mov
imul
cmpsb
xor
cmpsb
push
inc
cwtl
xchg
arpl
xchg
pop
mov
mov
les
add
aas
pop
xor
lods
adc
test
sub
xor
arpl
out
adc
loopne
cli
or
adc
sub
out
das
jge
sarl
popf
loop
pop
repnz
adc
sarl
movsb
mov
into
mov
imul
mov
lret
stc
imul
adc
sbb
enter
pop
fs
xor
add
cmpsb
popf
add
data16
sub
mov
int3
sti
imulb
pop
fbstp
adc
sbb
jno
jne
mov
mov
jecxz
adc
es
xchg
insb
cmp
pop
enter
mov
outsl
or
fadds
cwtl
stos
cmpsb
ss
shll
fs
dec
inc
les
and
ss
movsb
cmp
xchg
sub
fwait
test
icebp
cmp
pop
test
lret
lods
int3
pusha
pop
imul
push
dec
fildl
push
lock
fldt
sarb
jns
popf
jge
in
cmc
inc
mov
dec
add
push
push
test
fisttpll
bound
and
mov
dec
xchg
cmpsl
ret
movsb
push
ds
dec
jbe
pop
in
test
inc
imull
or
movsl
sub
in
ret
sbb
lret
mov
adc
sub
xchg
sti
xchg
sbb
je
ss
xchg
mov
mov
call
dec
jecxz
add
lret
sub
ss
orl
stc
mov
dec
cmpsb
xrelease
and
jo
jb
xchg
mov
sub
lahf
movsb
cld
inc
jg
sub
or
push
cmp
enter
mov
mov
pop
jns
faddl
cs
and
daa
out
mov
adc
mov
mov
lock
lret
mov
movsb
jo
push
popa
xchg
fstpl
pusha
insl
pop
in
xor
js
scas
insb
stos
outsl
mov
push
cmp
pop
sti
sub
sbb
dec
js
mov
inc
ja
jne
ljmp
fs
rol
and
lret
pop
jns
cmp
and
fisubrl
or
fnstcw
pop
mov
mov
mov
mov
cmp
mov
adc
into
cmpl
dec
stos
jb
mov
jg
aas
pop
nop
nop
lret
adc
cmp
jae
cmp
pop
je
outsl
out
imul
std
stos
ljmp
inc
push
inc
inc
les
movsb
cmp
push
loop
or
lahf
fxch
push
aam
nop
push
sbb
add
sub
mov
pop
mov
xchg
shll
push
fwait
loopne
in
mov
pop
mov
aam
jo
sahf
lds
test
out
xchg
mov
and
aad
jae
stc
sub
jmp
push
aas
lea
pop
cwtl
dec
and
push
pop
test
sub
divl
mov
mov
decl
xchg
fidivs
and
add
mov
xor
or
enter
not
shr
daa
pop
ror
loopne
push
js
sbb
jge
popf
dec
stc
sub
aad
add
xchg
cmp
fisubs
mov
iret
fcomps
jo
sub
rorl
pop
adc
mov
popa
fists
cmp
icebp
xchg
subb
xor
push
das
fdivrl
rolb
adc
dec
call
push
shl
mov
neg
cmp
call
in
ja
push
push
incl
sub
pop
cmp
mov
insb
insl
mov
mov
xlat
ds
arpl
sahf
gs
pop
push
jg
scas
out
xchg
repnz
xchg
fimull
icebp
sub
jle
cmpsb
pushf
push
aam
jns
mov
mov
outsb
aad
xor
sahf
ss
in
loop
into
es
aaa
push
mov
dec
cmc
sti
xlat
jnp
int3
push
pop
inc
push
inc
mov
pop
mov
fsubp
mov
mov
dec
sahf
bound
jecxz
leave
push
outsl
out
sub
aas
cld
sbb
test
lcall
and
xor
or
stos
and
sub
mov
test
lods
imull
lods
xor
sub
xchg
test
sarl
loope
sub
in
mov
mov
int
mov
mulb
stos
mov
test
pop
adc
push
jg
mov
push
sbbl
dec
in
mov
mov
xor
inc
and
arpl
in
inc
mov
ljmp
jo
insl
cmp
test
xchg
movb
jle
fnsave
leave
test
cmpsb
dec
insl
cmp
jo
sub
xchg
inc
gs
xorb
mov
dec
icebp
jnp
movsb
sub
icebp
in
repnz
add
repz
pop
adc
xor
clc
rcrl
inc
imul
in
cmpsl
notb
ds
pop
inc
add
pop
and
popf
fildll
jge
ror
testb
pop
add
out
inc
jns
sub
fisttps
push
xchg
lcall
data16
push
loope
fdivrl
xlat
mov
inc
sti
sahf
xchg
jnp
ja
mov
pop
adc
cmp
xor
jmp
outsb
or
stos
fnstcw
outsl
push
fnstenv
pop
shlb
orl
lcall
mov
add
inc
iret
push
cmp
cmp
xor
loopne
fidivs
sbb
jl
jmp
mov
add
add
and
divb
sub
inc
adc
and
lcall
ja
or
lea
and
mov
dec
mov
push
jne
jmp
sbb
mov
lret
xchg
fisttpll
subl
fidivrl
repz
sahf
add
adc
sub
pop
lret
es
jp
pop
lret
popf
dec
jns
jmp
mov
call
cmpsl
sarb
in
aaa
cmc
cs
inc
cltd
gs
es
insl
icebp
clc
mov
pop
scas
jecxz
add
dec
out
sbb
lock
pop
mov
sahf
ljmp
push
cs
cmp
adc
or
inc
lahf
mov
ljmp
out
xor
es
fnsave
pop
mov
nop
sarl
push
sub
mov
scas
and
jne
push
addb
cmp
imul
inc
ret
push
dec
pop
rol
sub
sub
pop
repz
inc
cmp
and
iret
hlt
sqrtps
dec
stc
das
outsb
nop
aad
inc
add
aam
inc
pop
jecxz
jbe
fsts
nop
xor
mov
repz
mov
mov
jl
in
xchg
sbb
mov
or
lea
cmpl
cmpsl
xabort
je
pop
mov
adc
and
scas
arpl
mov
sub
fisttpll
pop
xchg
cmp
pop
repnz
push
ss
sahf
je
sub
loop
repz
xchg
enter
in
mov
cltd
mov
jp
and
mov
scas
or
sbbl
loop
lock
je
out
popa
jle
or
test
shlb
pop
lcall
jo
xlat
mov
pop
and
ja
arpl
lea
adc
test
dec
aas
xor
popf
int
mov
sbb
inc
shll
int
xchg
je
mov
push
sbb
lret
inc
scas
or
xchg
arpl
pop
ljmp
pop
inc
in
xchg
dec
cmp
ret
lds
out
cltd
push
pop
sti
xchg
sub
cli
loop
xchg
xor
imul
das
arpl
test
add
mov
lahf
push
push
push
in
shrb
nop
insb
adc
mov
imul
sbb
push
or
push
sub
movsl
fmul
mov
push
jl
cli
xorb
inc
sub
mov
xor
cli
cmpsb
push
sbb
in
jecxz
jecxz
mov
push
shlb
das
dec
in
or
in
lods
shr
lret
pop
lret
or
lret
movsl
xor
lods
mov
add
push
xchg
hlt
lret
inc
ljmp
mov
push
or
cli
test
xor
aaa
push
sbb
add
jecxz
leave
pop
in
adc
lcall
adc
xchg
repnz
sub
push
jge
push
inc
les
insl
fadds
adc
adc
fcmovb
nop
mov
das
out
xchg
rcll
pop
or
xchg
imul
jmp
lods
and
pushw
sbb
aas
mov
enter
mov
xor
in
jae
fcomi
pop
pop
aaa
lea
lock
sub
push
or
outsl
cmp
and
adc
jae
cmp
fists
rcll
mov
lods
sbb
or
dec
jns
loop
daa
sub
cli
movsl
flds
mov
adc
sub
pop
adc
into
or
xor
movsl
lea
loop
fdivrs
mov
pusha
aas
mull
fcoms
mov
shl
out
add
adc
data16
in
std
mov
pop
lods
punpckhwd
fwait
pop
pop
cmp
pop
addb
test
pop
xlat
add
mov
cmp
xchg
inc
dec
fnstenv
mov
loopne
fadds
fdivl
lock
shl
mov
imul
push
fwait
mov
out
jle
xor
daa
adc
mov
les
push
xor
loopne
lret
mov
mov
mov
out
adc
rcrl
mov
xchg
xlat
add
inc
xchg
mov
mov
mov
sahf
mov
xchg
push
arpl
dec
push
add
inc
dec
sub
lds
rcl
lds
push
arpl
mov
push
insb
outsl
sub
adc
inc
mov
arpl
cmp
xchg
push
dec
and
fisubrs
lret
push
mov
std
xor
add
add
pushf
loope
pop
test
mov
outsb
pop
xor
push
popf
pop
push
and
adc
pop
fsub
or
stc
mov
sub
mov
cmp
pop
sub
insb
xchg
sbb
xchg
repz
add
and
pop
mov
pop
push
shl
nop
scas
mov
scas
mov
lods
xchg
add
sub
add
push
mov
xlat
pop
negl
cmp
sub
scas
lret
xchg
mov
dec
mov
dec
jbe
jmp
sub
mov
das
fidivs
pop
enter
push
jge
or
int
add
je
cmp
and
mov
fdivr
out
jo
push
pop
stc
mov
cwtl
xchg
mov
test
fsubp
sbb
cmp
pusha
sbb
pusha
lret
fwait
repz
sti
frstor
bswap
jne
push
jne
jge
xchg
jb
cmpsb
loope
cmp
dec
xchg
cltd
scas
push
jno
sub
and
adc
adc
cmp
test
pop
ret
or
add
add
movsl
lock
lock
or
sbb
lahf
push
aaa
js
fs
pusha
push
mov
push
adc
xchg
mov
insb
dec
jp
mov
mov
inc
jae
test
cli
cmp
lret
outsb
jb
fldl
iret
ds
ss
outsb
into
sub
insl
push
lods
pusha
pushf
rorl
and
xorb
pop
add
xchg
mov
dec
sub
fldenv
fists
xchg
mov
repz
adc
push
fldenv
jne
add
cmp
std
sbb
push
add
or
mov
enter
insb
mov
popf
adc
loopne
int3
in
mov
cmp
sbb
aam
ss
shll
out
cmp
dec
add
ss
xchg
mov
std
testl
icebp
pop
je
xchg
xchg
cld
out
popf
add
int
movsl
cmp
xor
push
popa
faddl
jmp
adc
jo
orb
sub
push
arpl
xor
adc
fstpt
mov
icebp
add
shrb
movsl
xlat
icebp
les
cmc
mov
push
push
cmp
fs
push
repz
popa
pop
aad
lock
mov
data16
aas
sbb
xchg
cs
shrb
ss
adc
push
mov
cwtl
icebp
lds
inc
cld
push
lret
aam
repnz
lret
mov
pop
cmpsl
enter
pop
cmpsl
ljmp
dec
icebp
inc
and
jbe
aaa
adc
mov
mov
adc
arpl
mov
movsb
xorl
dec
ret
lock
pop
xor
test
mov
stos
jmp
xor
cmpsl
aas
jecxz
push
movsb
mov
pop
add
sub
xor
mov
cmc
mov
lods
add
adc
fidivs
icebp
outsl
cmc
add
jno
xor
mov
iret
in
test
loopne
mov
fwait
xchg
out
inc
jnp
xchg
cld
sbb
clc
and
sbb
mov
inc
cld
jecxz
in
sbb
insb
std
xor
stos
xor
add
dec
insl
mov
add
out
push
xchg
inc
test
fnstenv
push
inc
pop
cltd
mov
or
pop
jo
in
lods
pop
jmp
add
mov
ja
insl
pop
scas
adc
push
out
test
shrb
add
xchg
pop
ds
jp
xchg
pop
cmp
ds
xchg
jmp
mov
sub
lcall
out
adc
fstps
jb
mov
mov
and
jns
in
addr16
push
pop
in
mov
jae
notl
sub
sub
popf
out
popf
sarl
or
xchg
push
testb
into
push
dec
adc
nop
shll
decb
sbb
shll
push
cmpsl
adc
xchg
push
movsb
stc
inc
jnp
sahf
insb
repnz
pusha
aam
mov
cmp
aad
sub
in
dec
jb
sub
dec
test
lods
inc
push
fwait
arpl
and
mov
push
xchg
inc
sti
dec
inc
pop
xchg
xchg
dec
jno
push
xor
jo
cmpsb
jns
lods
das
bound
jecxz
movsl
mov
fldl
loopne
jnp
and
dec
ljmp
pushf
mov
ss
sbb
pop
push
test
fisubrs
xchg
dec
or
add
cli
rcll
ror
mov
push
and
xchg
jo
fcmovnu
pop
adc
cmp
ja
sub
xchg
movsl
cld
pop
loope
mov
js
add
or
mov
out
pop
lahf
pop
dec
and
scas
cmc
sub
test
mov
or
fisttpll
mov
xor
xorb
fisttps
mov
test
sbb
addb
mov
adc
movsl
shlb
es
mov
pop
stos
in
roll
loopne
repnz
jbe
jecxz
das
adc
xchg
shl
cwtl
xor
add
sbb
outsl
jp
fxch
sarl
dec
call
iret
sbb
clc
xchg
dec
mov
pop
inc
int
aad
jge
jae
mov
idivl
out
or
out
jmp
aaa
push
lcall
or
pslld
cmc
mov
mov
xchg
sahf
sbbl
mov
je
imul
sub
dec
aas
mov
repnz
or
sub
adc
movsl
das
mov
pop
call
push
push
jnp
dec
inc
cli
mov
fcoml
jecxz
jae
jg
inc
jmp
fdivr
mov
aas
clc
mov
mov
mov
fbld
ja
hlt
gs
in
cmc
insl
push
adc
test
loopne
lahf
dec
sbb
popl
addr16
push
mov
and
push
inc
mov
out
pop
sbb
cmp
mov
mov
repnz
cmc
jne
daa
add
insb
out
cwtl
adc
es
mov
inc
cwtl
lahf
push
and
movsl
pop
add
mov
mov
lods
or
jecxz
ret
out
jmp
dec
imul
and
push
dec
sbbb
sbb
aas
addr16
push
sbb
outsl
xchg
jg,pt
mov
adc
lods
test
xor
inc
sub
cmp
pop
jbe
arpl
add
fdivrl
lods
divl
sahf
jnp
js,pt
test
xor
xor
outsb
lods
cmp
js
loope
bound
push
fdivs
out
or
add
jo
lret
out
outsb
mov
xor
xchg
addl
rorb
arpl
mov
stos
pop
pop
aam
push
pop
mov
sbb
aad
fists
ljmp
and
dec
xor
xchg
das
dec
mov
int
lods
and
daa
push
fisubrs
push
nop
jl
fists
arpl
std
aam
ja
dec
idiv
mov
or
push
cmpsl
add
add
dec
push
pop
mov
das
pop
sub
jl
dec
cmp
xchg
js
dec
and
add
shll
aam
es
das
pop
jmp
dec
popa
dec
ret
xor
fadds
rcll
inc
pop
lds
sub
cmp
xchg
jmp
data16
cmp
xor
jl
jns
or
loop
pop
addr16
fmuls
div
fidivs
je
jp
outsl
jle
cmp
inc
popfw
push
push
dec
mov
test
mulps
stc
sub
sbb
cld
jbe
jno
sub
xor
test
imulb
xchg
push
subb
jle
push
in
adc
or
jno
fwait
mov
mov
adc
push
je
stc
mov
and
hlt
aam
or
mov
push
mov
test
out
push
lcall
out
mov
gs
inc
test
lcall
dec
pop
sbb
mov
sub
mov
repnz
xor
jl
daa
adc
repnz
popa
pushf
arpl
mov
lock
xchg
ret
inc
jmp
cmp
sbbb
fistps
daa
stos
fildll
shrl
xor
repnz
ss
arpl
push
add
xor
cltd
pop
mov
sub
xor
ljmp
in
add
stc
out
arpl
or
add
ds
inc
xor
ret
popf
daa
mov
push
cmp
in
out
inc
shlb
adc
adc
loope
jb
movsb
ret
and
lret
mul
rcrl
test
adc
push
daa
aas
fstpt
add
adcb
pusha
add
mov
aaa
mov
xlat
in
cmc
jmp
adc
inc
mov
mov
addl
inc
push
stos
pop
popa
test
xchg
xchg
iret
inc
mov
add
fidivs
insl
pusha
test
xor
dec
imul
scas
cmpl
pop
mov
push
bound
arpl
std
scas
mov
cmc
adc
popf
and
push
out
inc
xchg
ss
push
mov
xor
out
flds
adc
cmp
mov
in
std
mov
in
ja
out
popf
mov
mov
jne
inc
lock
shll
jo
sub
cmpsb
stos
rorb
or
mov
frstor
push
mov
xorl
dec
fistpll
fdivl
inc
push
shl
adc
xchg
add
hlt
push
and
and
fnstsw
lahf
stos
icebp
fildl
xor
cmp
xor
shr
push
mov
sbb
ret
xchg
mov
push
pop
sub
fimuls
arpl
sub
arpl
icebp
test
lcall
xchg
jg
leave
shlb
sub
or
int3
pop
aam
in
and
push
push
int
out
and
repz
getsec
mov
iret
scas
jge
mov
aas
jp
test
out
andb
sub
sbb
fsubrl
adc
repnz
inc
lods
stc
loopne
sub
insb
negl
andl
aam
cld
jno
push
in
je
cld
jl
in
pop
push
in
cmpsb
hlt
or
dec
sbb
dec
loopne
sbb
cmp
loope
push
test
cmp
dec
iret
xor
inc
and
les
xor
pop
or
sbb
repnz
add
jl
cld
ret
dec
adc
rorl
dec
mov
fsubrs
mov
aaa
cld
mov
imul
xchg
add
xchg
int
xchg
dec
cmp
setl
lods
inc
xchg
and
and
lods
push
pop
cld
sbb
sbb
pop
lods
lea
aaa
fisubrs
insl
aam
shrl
movsb
jb
mov
int3
into
notl
test
adc
scas
scas
push
lock
dec
and
pop
push
xlat
fwait
lcall
mov
pusha
iret
loope
lds
push
dec
insl
mov
mov
push
aaa
rcrb
mov
dec
in
jae
test
arpl
lods
cmp
xor
jbe
imul
cmp
xchg
fcomi
dec
add
call
fildl
clc
out
push
mov
out
cmp
out
movsl
add
ds
mov
jp
mov
std
adc
and
stos
std
jno
call
jo
call
add
les
dec
mov
xchg
mov
sub
cmpsl
cmp
jecxz
cltd
dec
ja
stos
inc
mov
clc
pushf
xchg
sub
mov
icebp
inc
dec
add
xor
ficoms
cmpsb
outsb
push
xor
shll
push
mov
notl
gs
pop
jl
addr16
shrl
out
loopne
cmp
or
jge
cmp
pop
inc
mov
pop
mov
jmp
test
in
lods
xchg
mov
sti
jge
add
dec
mov
sbbl
fs
mov
push
cmp
jno
sub
and
jb
int
pushf
clc
sbb
movsb
ja
shll
mov
fsubrs
mov
ret
push
cmp
gs
jge
jns
mov
cmp
and
aam
rcl
inc
js
rol
fisubl
xor
cs
dec
bound
inc
xor
rclb
jge
lods
jns
add
call
mov
pop
or
insl
imul
push
push
je
add
test
cmp
fdivs
jecxz
mov
inc
ss
or
fisubrs
push
mov
xchg
push
push
cmp
and
rcll
mov
xchg
and
adc
leave
cmpb
jbe
imul
inc
xor
nop
cmp
xchg
negl
xor
repnz
cmpsl
in
enter
mov
jne
scas
repz
xchg
or
and
sbb
test
mov
out
stos
adc
inc
cmpsb
adc
push
sbb
mov
inc
in
sub
enter
mov
and
addr16
mov
faddp
mov
orl
sub
dec
jns
adc
xorb
lods
push
imul
clc
imul
mov
sub
xchg
in
cltd
outsb
adc
jne
loop
dec
arpl
pop
push
push
push
sub
push
xchg
jbe
dec
pop
jns
sub
lods
bound
insl
pop
mov
xor
inc
add
mov
faddl
out
shlb
cmp
rorl
sbb
dec
mov
ret
push
cld
jp
mov
push
inc
shrl
or
mov
repz
popa
inc
xchg
pop
stos
shlb
clc
popa
test
pop
js
lret
xor
xchg
mov
sbb
call
or
iret
std
imul
adcb
xchg
decb
call
out
mov
push
jle
sbb
jns
adc
lret
mov
lret
lods
and
iret
xchg
mov
js
stc
pusha
push
icebp
sarb
in
inc
cmp
pop
push
adc
addr16
inc
jnp
or
xchg
leave
repz
cmp
sub
dec
mov
push
push
test
xchg
jmp
cmp
push
adc
sub
roll
loope
jns
add
add
cmp
cltd
xor
mov
nop
pop
pusha
pop
adc
sub
lock
add
jmp
fdivr
mov
shll
dec
or
mov
and
loop
jae
push
sbb
addr16
inc
xchg
stc
stos
into
mov
mov
pop
cmp
xchg
xchg
xlat
rcrl
rcll
fwait
xor
sub
leave
jecxz
outsb
sub
cld
loop
push
test
or
sub
aam
add
fwait
push
frstpm(287
inc
push
cs
and
shr
jle
add
out
jmp
test
dec
adc
pop
mov
add
cwtl
lds
insl
inc
outsb
cwtl
clc
nop
push
pusha
fistps
jmp
mov
or
push
add
loope
sub
jo
aaa
push
lahf
into
das
add
push
daa
push
mov
enter
jb
fidivrl
xchg
je
int
push
andl
sub
push
lods
cli
fidivl
mov
popa
in
jmp
aaa
stos
dec
and
pop
stc
jl
xchg
mov
in
je
ds
sbb
add
sbb
std
lea
andb
int
loop
cltd
mov
jne
add
loopne
imul
out
mov
es
divb
add
xchg
repnz
sub
push
bound
jecxz
add
outsb
jbe
and
dec
out
sub
cs
mov
repnz
bound
stos
add
xchg
fs
cmp
cltd
pop
sub
and
lock
mov
es
and
and
push
aaa
ja
cmpsl
fs
testl
xor
adc
add
pop
xor
aas
push
pusha
xor
and
pop
lahf
ds
mov
scas
dec
or
bound
push
push
pop
sarl
rorl
mov
pusha
xor
lds
inc
loopne
cmp
fs
inc
repz
in
cmp
push
and
xchg
iret
pop
sbb
sahf
popa
or
jl
pop
std
xor
xchg
xor
subl
neg
ljmp
mov
and
sti
test
jl
mov
pop
mov
out
lcall
cld
bound
stc
push
sti
add
lahf
xor
adc
scas
push
xchg
cmc
or
lret
jl
mov
mov
popf
enter
add
enter
out
fisubrl
mov
jbe
cs
push
aas
mov
and
std
mov
xchg
push
and
adc
fcompl
sbb
inc
call
add
push
pmuludq
and
mov
fadds
add
mul
pusha
mov
ss
push
cmp
cmp
mov
movsl
push
clc
in
into
mov
jge
insb
or
bound
add
sahf
lret
loop
int3
mov
mov
lcall
call
add
mov
push
sub
cmpsb
movsl
push
xor
push
push
pushf
mov
je
gs
stc
sbb
in
xchg
jmp
test
jle
pusha
jmp
mov
xor
jge
call
out
fbld
lcall
outsb
ljmp
enter
xchg
xchg
movl
mov
pop
ss
and
ds
dec
fcoml
js
mov
lea
ret
sub
mov
in
in
cmpsb
adc
cltd
fbld
push
outsl
sarl
dec
lahf
inc
out
mulb
rorl
test
pushf
pop
inc
or
xor
lret
adc
imul
mov
mov
jle
cmp
fstps
out
pop
mov
aas
cmp
sbb
sub
push
inc
xor
faddp
stos
shlb
mov
push
inc
mov
mov
loopne
fwait
mov
mov
int3
xorb
addr16
and
dec
cld
push
fcoml
outsb
cmpsl
mov
nop
stos
mov
nop
fbld
rcll
out
cwtl
push
roll
gs
dec
sti
xor
mov
into
lods
ficoml
sahf
into
cltd
mov
sbbb
sbb
pop
je
mov
and
sarl
sub
hlt
cmp
sub
or
std
adc
aam
push
inc
xchg
rcll
daa
lods
dec
inc
mov
shl
movsb
cmp
leave
scas
jle
xchg
test
dec
popa
fistps
lods
xor
test
dec
inc
and
pusha
fwait
pushfw
jmp
loope
stos
loopne
dec
mov
inc
stc
test
push
mov
jne
rcrl
les
mov
imul
dec
bound
sti
cmp
dec
push
in
js
jbe
mov
cmp
push
daa
or
stos
int3
pushf
popa
cmp
cltd
fstl
dec
jecxz
ret
shl
push
arpl
push
or
cmp
dec
int
inc
cmc
or
sbb
add
sbb
pusha
mov
pushf
dec
rcll
dec
push
jg
mov
scas
cmpsl
or
push
adc
pop
fnstcw
mov
cmp
in
push
mov
pop
lods
lods
mov
cmp
aas
add
mov
push
dec
xchg
xchg
push
fucomi
mov
push
mov
cmc
pushf
ret
jp
push
pop
cmp
aaa
jp
sub
mov
ret
xchg
and
cmp
outsb
xchg
shl
testb
pop
cwtl
addl
mov
icebp
cmpsl
repz
and
mov
test
mov
add
xchg
mov
imul
or
testl
push
xor
jb
and
pop
out
dec
cmp
pushw
clc
mov
mov
rorl
push
inc
fidivl
mov
cmpsl
jge
jno
push
out
jne
dec
ss
rol
popf
mov
mov
out
repnz
iret
adc
push
mov
push
bound
dec
cmpb
xor
xor
fbld
inc
jo
inc
lcall
js
lock
rcrw
push
fdivrp
mov
addr16
bound
add
mov
or
int
enter
pop
and
push
scas
or
inc
mov
xor
adc
pop
sti
scas
push
pop
test
sbb
sti
push
jmp
test
repnz
stos
mov
faddp
fs
inc
xlat
cmp
pop
add
aad
rcr
rol
dec
or
mov
gs
xchg
int
xchg
fidivl
dec
dec
scas
xchg
arpl
fadd
and
cwtl
push
sti
mov
lock
aad
mov
out
data16
sbb
das
lods
and
cmp
mov
cltd
sbb
test
sub
leave
cli
testb
xchg
aaa
rcll
in
jns
pop
inc
add
push
sarl
test
fs
push
lcall
es
pop
push
negl
mov
push
pop
lods
push
movsl
or
cmp
das
insb
and
jecxz
cld
jo
inc
add
test
xchg
jle
adc
xchg
in
test
dec
out
jo
or
jb
clc
inc
ss
dec
hlt
pop
adc
or
xchg
xchg
mov
out
out
loopne
or
pusha
fcom
out
cmp
inc
in
xchg
cmp
dec
xor
mov
and
data16
mov
sbb
callw
lds
cmp
mov
and
or
dec
jne
xor
xchg
fwait
xor
adc
sbb
das
lods
cli
fisubl
or
xor
clc
out
cmc
jmp
je
out
and
dec
or
movsl
and
roll
jae
jle
fisubs
or
sarb
sub
inc
icebp
out
sub
push
pop
icebp
sub
mov
xchg
and
inc
push
aas
out
sbb
mov
int
jg
xchg
or
adc
xchg
imul
xchg
xchg
dec
loopne
push
sbb
lahf
ret
xchg
adc
enter
test
push
jne
lock
cmc
mov
iret
mov
jnp
into
add
inc
push
cmpsl
sbb
or
and
jne
std
repnz
pop
jno
out
inc
movsl
call
call
add
xor
test
pop
pop
sub
test
mov
mov
ds
ficomps
test
jp
outsl
jbe
outsb
inc
jp
mov
popa
push
scas
fstpl
jg
push
iret
ret
es
add
push
dec
scas
sbb
pop
out
add
adc
fbld
xchg
in
push
jmp
jle
fisubl
xor
add
inc
cmpsb
out
stc
inc
pop
xor
and
int
and
out
pop
or
sub
repnz
lret
and
cmp
cs
push
fsubl
and
push
and
jne
pop
cltd
rcrl
push
push
mov
mov
daa
sub
pop
jnp
les
daa
js
add
mov
in
xchg
popa
mov
mov
sub
mov
lds
cmp
xchg
pop
xchg
mov
mov
fistps
add
pop
fnsave
pop
je
int
fidivs
mov
push
mov
cmpsb
stos
xor
jnp
mov
fst
mov
dec
lcall
dec
icebp
mov
mov
cli
aas
popa
cltd
push
outsl
or
add
lret
mov
inc
and
call
sub
mov
lret
or
adc
and
pop
mov
push
jge
jo
ja
imull
dec
xor
mov
loopne
aam
rclb
xchg
mov
xchg
adc
dec
out
push
pop
in
cmp
bswap
clc
xlat
mov
incb
xor
fnsave
enter
sbb
adc
and
movsb
sub
jg
and
push
mov
fcmovnb
test
popa
ds
ret
imul
cli
push
xchg
dec
mov
adc
pop
sbb
push
and
stos
loop
lea
scas
sub
mov
xor
idivb
cld
and
xchg
sub
xchg
pop
pusha
mov
icebp
mov
icebp
pop
addl
ret
movsl
push
ret
xor
and
push
es
xor
jge
push
outsb
aaa
and
stc
cmp
insl
std
xor
sbb
sbb
dec
xchg
jae
sub
xor
cmp
xchg
aaa
jg
sub
insb
mov
xchg
subl
mov
jge
cmp
sub
add
gs
dec
sbb
xchg
cmp
dec
push
pop
ljmp
and
add
xchg
ss
call
clc
pop
int
and
cld
fcmovne
in
push
ss
lock
repz
arpl
test
es
fstpt
pop
fs
scas
clc
sar
jge
int3
in
test
aaa
mov
pop
in
pusha
loopne
lret
mov
xchg
xchg
dec
mov
inc
test
insb
clc
cmp
loopne
mov
inc
fimull
dec
xchg
lods
or
pop
std
frstor
adc
cmc
push
push
xorl
adc
stos
pop
cwtl
pop
and
arpl
sbb
mov
mov
xor
int3
or
mov
pop
imul
mov
test
divl
mov
addb
mov
xor
mov
scas
adc
icebp
push
xor
lahf
xchg
jnp
sub
mov
fsubl
mov
test
dec
stos
movsl
sahf
push
pop
shrl
mov
aas
inc
popl
jecxz
adc
test
mov
mov
out
testl
adc
rcll
jmp
jb
sub
loop
orl
lds
fstpl
stos
jle
and
add
xor
or
and
sub
mov
adc
test
xchg
or
loopne
roll
es
mov
cs
ja
dec
adcl
rol
fsubs
add
movsb
rcrl
mov
cmp
out
pop
or
xchg
sub
sahf
loop
mov
jns
insb
push
or
jmp
pop
or
mov
cwtl
stos
push
push
ja
pop
and
jle
or
cltd
shl
push
dec
int
icebp
out
or
repz
mov
xor
xchg
loop
popl
push
mov
add
push
shrl
cwtl
enter
or
push
sub
jecxz
sbb
push
ja
jg
xchg
xor
fists
imul
pop
push
cwtl
push
mov
call
arpl
mov
mov
jmp
add
jecxz
mov
jns
fsubs
pop
jb
cltd
roll
ljmp
out
pop
ret
imul
pop
es
inc
cmp
je
jae
test
xchg
or
xor
mov
lcall
adc
jle
dec
cmp
leave
adc
sub
sub
xor
inc
inc
les
dec
arpl
fstpt
jmp
sahf
push
or
dec
cli
sbb
lock
pop
dec
rol
out
mov
test
clc
fmul
aas
pop
stos
das
jbe
repnz
lahf
push
popa
dec
fstps
stos
rolb
nop
mov
jns
rcrl
mov
add
push
cld
lahf
mov
xchg
arpl
xor
es
aam
call
bound
mov
jp
iret
arpl
testb
imul
out
fwait
jg
pop
push
js
data16
push
cld
leave
cmpsb
push
mov
xor
pop
cmc
enter
cmp
xor
sub
cli
add
jg
add
sub
xor
xchg
and
cmpb
incl
jo
adc
and
jae
stos
lods
les
subl
syscall
push
jmp
pop
mov
mov
shlb
popa
xchg
rolb
mov
sbb
test
mov
subb
fimuls
and
call
sub
mov
sbb
outsb
sbb
xor
cmc
out
mov
xor
jmp
adc
inc
push
das
lods
push
xchg
inc
jmp
hlt
ss
es
mov
cld
pusha
cmpsb
insb
cmpsl
outsb
push
jo
add
out
or
loop
jp
pop
inc
xor
jns
in
arpl
cmp
sti
sbb
addb
mov
sbb
xchg
ss
js
push
dec
std
adc
mov
add
mov
mov
adc
sbbb
push
mov
add
xor
sbb
mov
dec
cltd
bound
adc
imul
ljmp
and
lock
push
das
cld
xchg
xor
lret
xchg
mov
push
jg
mov
push
jbe
dec
pop
ret
xchg
cmp
jno
sbb
fstpl
insb
cmpsl
ret
aaa
fisttps
lods
outsl
movsl
pop
nop
icebp
lahf
aad
jo
jae
xchg
neg
lret
xor
fistl
or
xchg
xor
mov
or
test
mov
out
jb
daa
stos
aam
mov
mov
or
sbb
mov
cmpsl
mov
mov
mov
or
mov
jg
outsl
xchg
jne
mov
jle
lea
push
mov
mov
test
aam
dec
fwait
xchg
cmc
sub
js
lds
sbb
xor
or
push
add
add
mov
subb
push
stos
add
fbld
aaa
inc
aad
daa
out
xchg
gs
loope
outsb
fxch
sub
cmpsl
aaa
mov
xchg
push
popf
imul
cmp
pop
insb
dec
sbbb
xor
js
xchg
std
cmpsl
sub
jp
sarl
add
adc
inc
mov
jb
imul
insb
clc
add
xor
lret
sbb
setge
inc
pushf
cli
fisttpll
inc
imul
xor
bound
push
adc
call
mov
xchg
push
or
dec
jo
adc
lahf
xor
ss
adc
or
push
pop
stos
mov
dec
negb
ret
lods
ljmp
and
fstpl
negl
add
mov
mov
mov
mov
imul
xor
jge
mov
lahf
lods
sub
lds
mulb
jmp
lods
or
mov
pop
fnstcw
out
xor
add
jg
popf
lret
insb
push
xor
jb
adc
pop
pushf
addr16
mov
and
xor
incb
mov
adc
sub
enter
out
lcall
les
outsb
andl
push
jno
sub
fnsave
adc
ror
pushf
push
add
js
cwtl
pusha
dec
out
xchg
push
push
sbb
cmp
out
push
xchg
mov
cmp
out
cmp
arpl
ljmp
shl
mov
jle
loopne
xor
loope
push
sbbl
and
cmpsb
xchg
out
clc
lcall
lcall
adc
mov
loope
mov
dec
cmpsb
pusha
out
jae
faddl
lret
xor
jae
xchg
lret
mov
fisttps
inc
pop
xor
les
fisubl
test
rolb
xchg
jge
adc
inc
cmpsl
adc
cmp
or
xor
fwait
pushf
mov
or
cmovl
aas
shlb
cmc
jbe
fmuls
std
sbb
int
in
xor
and
cwtl
or
js
pop
ljmp
push
jae
ljmp
inc
pusha
xchg
lahf
test
inc
rclb
cmpsl
push
add
insb
sub
cmpsb
pop
test
mov
cli
lods
mov
gs
jbe
lods
mov
cmpsb
pusha
out
sbb
mov
test
leave
in
xchg
into
std
jmp
in
and
ret
mov
sbb
test
mov
cmpxchg
cli
js
fcompp
and
incl
out
mov
push
inc
mov
or
fnstenv
and
and
push
out
cmp
test
mov
mov
xor
cmpsb
xor
sbb
sub
test
xor
scas
adc
insb
or
loope
aad
aad
sahf
xor
mov
pusha
in
adc
popa
fidivl
inc
sbb
adcl
mov
jmp
sbbb
aad
out
sub
fwait
repnz
lods
fisttps
test
jmp
shrb
jno
sbb
loope
sbb
fnstsw
cmp
ljmp
jno
xor
stos
xor
xor
xchg
lods
adc
push
xchg
sbb
sbb
mov
mov
push
pop
jno
jecxz
sbb
lret
dec
mov
mov
push
adc
dec
jg
sar
mov
jge
test
mov
adc
loopne
mov
call
push
insb
popf
sbb
pushf
add
aam
sbb
or
pop
into
bound
mov
mov
sub
out
adc
inc
repnz
mov
adc
ret
test
notl
jns
call
test
pop
imul
das
push
adc
in
xor
cmc
aaa
xchg
mov
xchg
add
pop
or
xchg
adc
sahf
push
es
sbb
imul
jbe
out
dec
cmpsb
fwait
lock
fistl
lahf
into
test
add
jge
xor
nop
pop
cmp
movb
ljmp
cld
cmp
cmp
popa
sub
add
dec
in
jns
imul
push
int3
loopne
or
inc
mov
outsl
mov
adc
pop
mov
cmc
push
in
movb
or
dec
repz
xor
popf
fimull
loopne
icebp
mov
cmpsb
lock
aas
push
jne
sub
or
lret
jbe
inc
dec
ror
subl
push
out
inc
sbb
outsb
mov
enter
ret
inc
mov
int
mov
imul
aam
mov
sub
dec
jno
int3
mov
subl
dec
test
inc
stc
out
mov
aam
imul
mov
gs
int
out
mov
fiadds
idivl
add
out
push
fildll
int
outsb
outsb
push
cltd
jns
pop
add
push
stos
pop
pop
xor
adc
loopne
and
in
hlt
push
ret
dec
push
in
push
jno
gs
dec
pop
add
sbb
data16
lret
cltd
gs
dec
nop
push
adc
adc
sti
je
sti
pop
push
ret
mov
add
push
les
lret
add
dec
mov
cmp
mov
cs
and
je
data16
stc
bound
test
mov
xchg
inc
push
sti
mov
sub
lods
imul
add
in
and
pop
xor
pop
xor
shlb
adcb
add
dec
mov
ret
lock
mov
rolb
sbb
cmp
lret
movzbl
test
adcl
jae
xchg
add
cmpb
mov
adc
push
jo
cmp
stos
loop
push
addr16
mov
dec
int
jmp
xor
cmp
cmp
add
js
mov
jecxz
add
cmp
pop
in
sbb
mov
mov
fdivrl
adc
cltd
mov
movsb
ret
std
cmc
repz
andl
daa
adc
cmpsl
mov
imul
pop
adc
xor
scas
jmp
sbb
mov
insl
xchg
pop
mov
sbb
fnstsw
pop
pmullw
ret
jo
mov
cs
cwtl
inc
or
daa
or
and
and
loopne
mov
cwtl
mov
shrb
data16
jns
xchg
and
stc
cld
dec
push
mov
xor
push
xchg
pop
jge
loopne
or
jecxz
push
and
aad
icebp
incb
loopne
cld
shll
adc
push
jl
lret
sahf
gs
test
in
mov
inc
adc
mov
lahf
cmp
add
mul
xor
test
outsl
push
push
dec
push
enter
aas
lock
in
stos
xchg
sub
lds
xchg
cld
push
lock
sti
cwtl
xor
jg
mov
and
and
in
mov
mov
pop
mov
or
dec
mov
insb
cmp
adc
sarl
call
lock
mov
sbb
and
lock
pop
incl
pusha
fnstsw
or
cmpsl
mov
cmpsb
mov
mov
sbb
jl
pop
in
in
dec
lret
shl
test
imul
cmp
mov
jp
cmpsl
sub
sbb
popf
shl
push
insb
les
lods
cmc
xorl
out
jnp
push
enter
sbb
mov
and
push
sbb
mov
push
jp
in
test
pop
mov
pop
and
xchg
xchg
xchg
mov
jmp
test
add
sub
cmc
imul
jnp
adc
and
popa
sbb
shll
stos
xor
aam
push
pop
cli
scas
lcall
and
or
add
mov
fs
subps
pop
dec
hlt
push
dec
mov
add
aam
push
fimuls
mov
gs
xchg
rorb
lock
sahf
pop
movl
iret
cmp
addr16
push
add
push
or
js
xchg
or
mov
push
xchg
xchg
stos
in
push
push
lcall
sbb
hlt
test
movsb
sub
mov
adc
cmpsl
xchg
adc
aam
cmc
mov
shl
push
adc
xchg
mov
cmp
jl
mov
xchg
arpl
outsl
jns
aad
xchg
dec
sbb
mov
test
or
stos
popf
inc
push
nop
mov
sbb
mov
sahf
lds
cs
and
jmp
jns
test
cmp
sarb
fwait
push
xchg
adc
and
lea
sbb
mov
add
aad
fbstp
push
mov
aam
cmc
mov
sub
out
xchg
inc
pop
jmp
cwtl
push
xchg
popa
jae
movsl
fs
jno
ficomps
cmpsb
mull
jle
xchg
leave
push
daa
jp
jno
xchg
scas
push
in
popf
mov
out
sub
push
cmpb
inc
ja
mov
repnz
adc
ja
loop
iret
push
loop,pt
push
leave
sub
jo
sbb
dec
inc
das
add
adc
or
enter
sti
xchg
pop
inc
push
sub
fwait
lea
mov
and
roll
je
mov
jg
nop
mov
add
pop
call
daa
sub
sub
add
jo
rclb
leave
add
inc
enter
lea
das
jle
loop
cmpsb
out
jne
cld
rclb
lods
mov
adc
ror
inc
push
xchg
out
push
xor
pop
push
add
mov
ret
dec
arpl
mov
imul
xlat
negb
stc
ret
sbb
imul
mov
sub
jne
inc
std
cmp
xchg
push
mov
insb
and
imul
in
addr16
push
and
ret
and
xchg
call
and
rclb
lahf
mov
adc
lcall
mov
fildl
cmp
mov
mov
ret
push
fisttpll
scas
repnz
cmp
or
imul
int3
and
push
xchg
pop
inc
mov
push
sub
or
cmpsb
inc
push
inc
or
cld
lahf
test
pop
popa
sub
adc
xor
loop
popa
mov
cs
int
pop
sbb
ret
lds
inc
xchg
cld
in
dec
insb
adc
fstp
jo
scas
nop
jno
rclb
pop
push
adc
iret
js
jp
mov
shlb
fs
roll
xlat
stos
add
mov
test
push
fidivl
loop
pop
jmp
ret
or
cmp
popa
std
lods
push
push
ret
adcl
jne
icebp
fmuls
int3
dec
loopne
ds
pushf
and
pusha
bound
lods
out
push
add
adc
mov
enter
or
movsb
je
cmpl
cli
jae
mov
dec
sbb
repnz
aam
shlb
insb
jmp
sub
popa
outsl
popa
lret
mov
add
out
cs
adc
jb
sahf
out
inc
fldcw
dec
mov
xchg
aaa
into
lods
push
or
inc
lods
mov
movsl
adc
adc
das
into
in
inc
es
xor
mov
arpl
fwait
aaa
insb
sub
ja
je
push
push
xor
cmc
jne
jb
enter
mov
imul
fstpl
aad
pop
xor
jmp
jb
dec
call
jb
loopne
mov
xchg
xchg
cld
sub
dec
xor
and
sbb
and
loopne
jno
into
out
push
imul
ds
aas
xlat
xor
jb
xchg
ret
stos
leave
xchg
jmp
mov
push
cli
roll
dec
add
sub
mov
popf
je
jb
dec
inc
adc
pop
push
or
je
xor
or
sub
jp
adc
sub
xchg
jo
mov
pusha
daa
inc
stos
mov
or
in
pushf
gs
jno
and
add
push
jmp
iret
je
test
loope
outsl
pop
xor
xor
dec
xor
or
out
dec
sub
mov
dec
pop
inc
xchg
inc
out
fsubrs
les
cmpsl
fs
dec
xchg
or
cmpsb
jno
mov
ret
imul
cmc
sub
fidivrs
scas
jle
jp
xor
inc
aad
add
imul
out
dec
inc
hlt
xor
mov
push
add
mov
scas
mov
xor
fisubl
push
or
jmp
cmpl
push
ljmp
inc
push
dec
jmp
ss
cmp
add
inc
shlb
imul
les
push
dec
sbb
lock
sbb
les
mov
jp
mov
movsl
cmc
mov
push
pop
ror
jmp
cmp
scas
mov
daa
je
lods
jmp
mov
jle
pop
cmp
push
cmp
in
loope
hlt
cwtl
push
push
lds
cmpsl
dec
adc
mov
push
inc
out
adc
cmc
and
jg
cs
push
ds
clc
scas
repnz
adc
sub
stos
mov
rorl
dec
inc
pop
imul
jmp
mov
xor
adc
dec
cmp
xchg
inc
adc
roll
add
fcoml
btr
std
pop
or
decb
icebp
shll
push
mov
ficoms
repz
cmpsl
inc
dec
insl
xchg
push
mov
mov
adc
dec
pop
fs
mov
jo
xchg
jp
loop
out
out
adc
aas
mov
mov
movl
dec
int3
filds
dec
mov
sbb
push
movsb
mov
out
psubusb
dec
mov
les
ds
int3
negb
xchg
pushf
cwtl
pop
test
xchg
mov
mov
and
fcoml
push
sub
inc
fcmovnbe
arpl
aaa
fwait
push
clc
rorl
test
adc
sti
push
add
call
xor
lock
imul
sti
inc
add
cmp
mov
hlt
scas
xlat
mov
jmp
jne
inc
sbb
nop
add
popa
popf
dec
push
and
bound
pop
dec
push
or
or
js
pop
pop
fucomi
lock
push
in
repz
arpl
test
pusha
sti
mov
and
fdivrs
shll
sub
dec
rcrl
cmp
movsb
jl
adc
clc
jmp
ret
push
xchg
and
dec
gs
or
adc
mov
icebp
sbb
or
cli
fnstsw
xor
roll
hlt
xchg
dec
mov
sahf
add
sub
dec
dec
push
dec
rorl
aad
daa
push
les
cmpsl
daa
rolb
loopne
inc
test
out
leave
movsb
mov
mov
pop
out
sub
push
push
inc
movsb
mov
mov
jp
fadd
subl
into
and
out
push
aam
sub
aaa
cld
cmp
mov
jno
xlat
in
jne,pt
adcl
pop
mov
push
mov
dec
mov
mov
call
idivb
push
inc
lret
loop
ds
data16
mov
cld
sahf
es
mov
sbb
and
inc
add
iret
inc
pop
jmp
rclb
inc
push
xor
ljmp
jb
test
pusha
scas
out
sbb
cmp
int
fildl
mov
add
push
je
enter
xchg
jle
push
push
bnd
in
shlb
ds
mov
out
sahf
enter
or
xchg
imul
and
cmp
ss
mov
js
pop
adc
inc
jmp
cmpsb
mov
in
adc
stos
xlat
mov
fndisi(8087
addr16
mov
test
inc
aas
aas
stos
pop
pop
shlb
sub
jnp
push
sub
dec
sbb
sbb
and
bound
stc
repz
sub
loope
mov
dec
pop
jnp
dec
pop
ret
lods
mov
or
les
cltd
insb
and
aas
xchg
dec
out
in
pop
clc
dec
shll
out
cltd
dec
push
pushf
into
mov
sbb
sub
push
ret
add
inc
dec
mov
xchg
js
pop
push
lret
or
add
sub
mov
push
inc
push
ja
movsb
push
jge
ss
loop
sub
sub
dec
cmp
pop
xor
std
fcomi
call
repz
xor
push
and
pop
jg
pop
xchg
shlb
inc
pop
fbld
mov
cmpsb
mov
sub
or
xor
stos
cmp
stos
in
cmc
stos
in
pop
mov
andb
cmp
sub
in
inc
mov
roll
sbb
adc
aaa
pop
adc
pop
jle
or
imul
mov
jno
pop
mov
js
outsl
mov
out
fmuls
push
stos
outsb
jl
add
jg
dec
mov
je
lret
loop
adc
out
ljmp
jecxz
or
or
inc
sahf
movsl
dec
fs
negb
pop
sbbl
mov
imul
push
mov
xorl
add
negl
sbb
movb
add
push
leave
mov
xchg
or
sub
add
aaa
movsl
vaddsubpd
ljmp
mov
xor
cmpsl
pushf
das
inc
mov
test
jge
mov
lret
push
aam
adc
mov
xchg
pop
pop
adc
js
das
fadd
roll
and
enter
and
call
push
insl
fldcw
mov
stos
pusha
cwtl
jno
mov
daa
rcl
cmp
xlat
adc
testl
and
cmp
cmp
sub
or
xchg
loop
sbb
scas
scas
idivl
add
inc
rcr
adc
push
loopne
subl
jecxz
hlt
push
push
or
fisubl
cmc
mov
call
xorb
dec
add
call
add
pop
cs
enter
dec
sarl
jge
and
add
shr
mov
mov
cmpl
push
cmp
xchg
and
xchg
add
xor
repz
test
popl
jae
xor
mov
jns
mov
push
pop
dec
cmpb
push
xor
popa
or
sahf
dec
pop
out
adc
mov
push
cmp
mov
outsb
push
arpl
stc
mov
dec
subl
mov
pop
mov
ror
iret
ss
imul
mov
jp
push
or
pusha
loop
call
cld
rorb
test
inc
inc
in
shr
push
jb
mov
jge
add
adc
dec
lods
ror
outsb
pop
mov
frstor
mov
insb
or
cltd
iret
add
mov
je
mov
outsb
inc
movsb
out
mov
stos
jbe
jl
mov
mov
dec
push
data16
pop
pop
xchg
into
add
push
lahf
sbb
adc
xchg
xchg
enter
mov
lock
push
dec
mov
scas
lock
sub
sbb
lock
push
push
filds
mov
add
jnp
jp
xor
xchg
das
hlt
fstpt
mov
push
insl
push
aas
adc
mov
dec
inc
fdivrl
rcl
cmp
int
sahf
cmpsb
mov
mov
inc
push
sub
mov
cmp
test
jmp
in
clc
jg
lret
push
imul
adc
sti
push
xchg
mov
and
insl
fwait
push
outsb
sub
adc
mov
in
mov
mov
fistpll
nop
je
pop
insl
mov
fdivs
lcall
sbb
or
mov
jmp
iret
xor
push
not
mov
call
pop
shll
addr16
movb
pop
jle
xlat
psadbw
adc
inc
in
inc
xchg
mov
xor
mov
divb
sti
or
fincstp
adc
sbb
movsb
adc
rorb
icebp
fmulp
jo
int
inc
inc
nop
mov
sub
inc
notl
addr16
mov
cmp
mov
xor
stc
shll
push
mov
mov
or
fimuls
add
fldcw
dec
sbb
jbe
leave
in
jg
and
push
mov
jnp
add
inc
jbe
xchg
subb
outsl
aaa
push
iret
stc
test
mov
xchg
jg
pop
rcrl
mov
lret
lret
add
popa
mov
adc
rolb
outsb
or
jno
lcall
cli
bound
stc
push
or
mov
mov
vpackuswb
jp
inc
sbb
xor
xor
adc
and
popa
ret
sbb
mov
subl
mov
pushl
sarl
testl
sbb
mov
into
push
addr16
xchg
or
xchg
dec
push
jb
xchg
sub
pop
xchg
insb
xchg
add
mov
pop
cs
ljmp
push
icebp
test
inc
mov
mov
outsb
loope
inc
push
into
cltd
push
push
aad
imul
sbb
repz
or
bound
jg
xlat
rolb
dec
dec
jne
insb
lods
adc
mov
in
sub
and
mov
and
jne
sbb
leave
cmp
or
adc
sub
or
pusha
jno
jl
lods
std
dec
out
sahf
adc
pop
inc
or
add
fidivl
push
adc
lods
push
jne
popf
add
stc
pusha
in
into
xor
test
cs
or
dec
xor
sub
rolb
rol
or
cmc
cmc
cmpsb
dec
aas
cli
pop
adc
cmp
push
out
scas
lcall
loop
adc
add
xchg
nop
pop
mov
mov
loope
ret
adc
das
pop
fistpl
sub
xor
jns
push
mov
mov
ficoms
aas
fldl
hlt
int
ljmp
scas
ljmp
mov
inc
xor
ds
or
xchg
test
xchg
stc
out
nop
loopne
mov
cmp
jge
sbb
pop
jl
and
popa
lds
cmpsl
insl
lahf
repz
cmp
insb
stos
inc
jae
stos
sub
add
jno
xor
popf
das
fimull
sbb
pusha
in
sti
inc
cld
and
popf
adc
sbb
movsb
rolb
xchg
xor
mov
cmc
xchg
test
enter
ja
mov
cld
push
push
js
cmpsb
mulb
aaa
dec
scas
inc
les
rcll
pop
imul
push
outsb
pop
push
clc
icebp
ljmp
pop
mov
jbe
lret
xchg
es
lods
push
cwtl
pop
nop
or
add
fs
jmp
jle
popf
ret
sbb
ja
shl
push
xor
in
jne
or
xor
sbb
shl
lahf
mov
dec
in
mov
inc
test
pop
mov
popa
insb
jge
mov
mov
jl
std
pop
imul
mov
add
scas
test
dec
stos
test
nop
mov
jbe
jae
dec
test
addr16
sub
dec
push
mov
mov
dec
jbe
and
cld
jl
mov
rcll
sub
jmp
leave
addb
daa
mov
bound
sub
add
pop
inc
xchg
rcrl
out
decb
ret
mov
add
cltd
inc
push
lcall
mov
sbb
jg
sbb
push
mov
xchg
lods
sar
nop
es
nop
outsl
lahf
addl
cmpsl
sbb
test
sbb
pop
fidivrl
jmp
sar
ljmp
pop
jns
and
fildl
inc
addb
lret
push
xor
adc
lret
xchg
sahf
push
jg
popa
fwait
xor
sbb
push
cmp
stos
gs
sbb
jmp
inc
sti
sub
lds
loopne
scas
shll
xchg
ret
in
cmc
dec
stos
enter
lahf
das
cmp
cmp
mov
into
jno
das
loop
sbb
gs
lret
or
js
pop
inc
mov
xchg
sub
or
scas
movsb
pop
punpcklwd
push
jae
mov
adc
and
cmp
jae
cld
mov
xchg
sbb
jg
add
in
mov
sub
mov
sbb
je
test
sub
mov
xor
add
fs
loopne
push
pop
xchg
insl
fdecstp
mov
sbb
loop
inc
pop
mov
push
rcrb
mov
shll
rcrb
icebp
sbb
rcrb
sub
push
jle
xchg
sbb
xchg
insb
fwait
jae
push
add
jmp
lcall
lret
outsl
lea
push
mov
add
xlat
cld
sub
out
testb
or
mov
fs
add
loopne
fucomip
xor
pusha
sub
mov
icebp
pop
xchg
cmpsl
jmp
je
aas
cwtl
lret
mov
pop
popf
add
shlb
mov
lods
out
popf
lahf
cmp
cmp
fcompl
movsl
push
add
movsl
flds
push
add
shlb
mov
xlat
lods
push
out
or
push
ret
xor
popa
mov
xrelease
lret
push
cmp
adc
bound
pop
jge
mov
popa
cmc
and
inc
pop
stc
add
mov
ror
pop
mov
jecxz
gs
subl
jecxz
faddp
or
mov
mov
pop
or
loop
or
iret
sbb
shll
in
adc
int
xor
inc
sub
mov
adc
mov
pop
fwait
lret
mov
cmp
imul
je
addl
mov
push
sahf
jnp
mov
test
sbb
mov
add
add
push
nop
outsb
and
and
dec
icebp
xchg
scas
fs
cmp
std
lret
lds
mov
and
sub
inc
pop
ss
daa
leave
push
pop
and
icebp
les
and
stos
movsl
xor
enter
les
test
mov
clc
jbe
and
lret
nop
cs
xor
out
inc
shll
idivl
cs
imul
inc
jnp
pop
fildl
stos
mov
mov
mov
push
pop
test
out
pop
ds
and
sarb
clc
mov
test
js
pop
jge
loopne
jo
cmc
xchg
push
jne
sub
jg
das
mov
push
dec
mov
ljmp
or
mov
subl
and
add
sub
in
cmp
inc
fcomp
lcall
mov
mov
push
fistl
inc
icebp
jnp
scas
push
push
sbb
or
mov
or
xchg
lret
sbbb
jge
in
xchg
int3
leave
add
xchg
adc
xchg
leave
fprem
xchg
mov
xchg
arpl
rclb
addr16
push
repz
lcall
pushf
ret
mov
cmc
mov
jp
sti
push
bound
adcl
lret
xchg
push
pop
mov
ret
sbb
out
pop
int3
lret
mov
lret
push
dec
xchg
sbb
adcl
pop
jo
mov
rcr
pushf
lret
fdivs
insb
jl
xor
insb
repnz
jb
aad
stos
pop
out
insl
or
addr16
ret
mov
lret
subb
dec
dec
popf
adc
adc
loopne
adc
mov
test
push
addps
lret
lods
jg
xor
sbb
sbb
sbb
xchg
decb
out
mov
shll
adc
ret
sub
jno
and
rcrb
xor
fs
add
jmp
aad
mov
fmull
rol
je
leave
jae
test
das
cld
push
dec
cmp
xchg
scas
lods
insb
les
inc
repz
push
adc
fsubs
pop
cwtl
xor
inc
mov
gs
ret
movsb
dec
fisttps
sub
xor
js
mov
movsl
sbb
lret
pop
jae
add
xchg
hlt
mov
sti
fs
lods
pushf
insl
jl
adc
subl
cmp
lahf
scas
sahf
ror
es
jg
icebp
push
jecxz
test
or
cmp
movd
sub
inc
mov
lods
jmp
mov
mov
inc
std
gs
cmp
mov
mov
cmp
sahf
das
out
jp
leave
xor
hlt
sbb
shlb
mov
and
not
mov
js
sahf
cld
xorl
cmp
add
out
aad
mov
enter
adc
mov
pop
enter
jns
jnp
xchg
rdtsc
mov
movsb
jae
shll
pop
jecxz
out
inc
push
xchg
es
cmp
stc
dec
push
sbb
mov
cmp
fisubl
add
mov
adc
adc
lret
fldl
test
in
std
ss
push
sbb
gs
cmp
mov
xchg
iret
and
stos
pcmpgtd
stos
push
jg
xlat
dec
push
jo
mov
lcall
cmpsb
aad
mov
mov
fwait
fmull
cmp
sub
inc
bound
imul
into
in
aas
pop
jp
in
insb
nop
pop
mov
jmp
daa
movsl
cmp
lahf
test
mov
sbb
icebp
call
scas
mov
dec
pop
les
dec
pop
and
inc
std
jp
fidivl
push
stos
mov
test
sti
mov
insb
or
xor
or
mov
mov
mov
jle
in
dec
jecxz
or
push
inc
fbstp
cmpl
mov
or
sbb
sub
enter
aaa
ss
push
inc
cmp
and
xor
insb
enter
push
in
mov
je
sub
enter
pusha
sub
fidivrs
mov
push
out
xchg
jne
mov
jl
push
adc
adc
scas
jnp
fsubl
cwtl
pop
inc
fcoms
push
mov
sbb
outsb
je
mov
dec
mov
aas
inc
repnz
or
push
in
outsl
pop
std
pop
push
mov
outsb
popf
inc
sbb
sarl
pop
jle
or
sub
daa
sub
iret
sbb
inc
imul
sub
sbb
ret
push
adc
icebp
lahf
mov
pop
push
in
cmc
cmpsb
test
lret
out
xchg
cltd
mov
inc
dec
rol
xor
rol
xchg
ret
mov
test
jmp
fdivs
pop
mov
and
jmp
inc
pushf
xchg
push
add
pop
pop
out
sub
cmpsb
and
add
std
arpl
and
pop
xor
inc
mov
adcb
daa
mov
loop
sub
add
jle
lods
mov
mov
inc
dec
push
ret
mov
loope
test
cltd
lret
mov
lods
xor
inc
lahf
loopne
movsb
ret
into
fisubrs
xor
js
test
mov
mov
push
mov
scas
lea
enter
push
and
pop
inc
xchg
inc
dec
test
addb
stos
addb
stos
pop
xchg
mov
sbb
xor
dec
and
addr16
cwtl
sub
lea
jne
or
cmc
fcompl
lods
dec
or
int
outsb
xor
mov
cmp
test
in
adc
push
jl
or
gs
out
insl
fisubl
mov
sbb
xor
push
mov
push
icebp
or
xchg
lock
test
lcall
dec
mov
pop
lock
or
lods
add
fwait
test
jecxz
rcrl
lahf
rcrb
roll
stc
inc
lcall
nop
dec
cmp
cmpsb
adc
add
inc
lret
popf
sbb
lds
stos
cmp
and
sub
lds
push
fcoms
aad
dec
push
shlb
xchg
xor
push
lods
mov
jae
movsl
ffree
movsb
and
and
pop
cmp
add
fnstcw
mov
repz
sub
mov
pop
pushf
mov
test
aam
xchg
lea
orl
jbe
scas
cmc
and
out
mull
lret
add
or
sbb
dec
ja
stc
pop
mov
je
icebp
push
cltd
push
jl
addr16
out
mov
pushf
xchg
lods
lods
add
xchg
dec
fwait
das
mov
cld
data16
add
adcb
je
cmp
mov
cli
sahf
xor
lahf
fwait
daa
add
outsl
mov
xor
mov
lahf
xchg
sbb
stos
and
repz
sub
mov
arpl
mov
jno
xchg
xlat
mov
or
in
lcall
lret
jbe
pop
cmpsl
cwtl
insb
cld
pop
sub
xor
imul
mov
mov
shlb
outsl
adc
xchg
jle
andb
movsl
pop
jg
out
mov
add
pop
push
push
sahf
lds
enter
or
xor
fdivrs
xchg
dec
add
fnstenv
mov
cmp
outsl
pop
jge
pop
push
inc
sub
sub
xor
adc
jnp
sbb
imul
dec
sub
fsubrs
repz
xor
xchg
mov
cltd
lret
fistpl
enter
xchg
sub
test
lds
outsl
jl
in
rcrb
out
cmc
push
out
subl
and
roll
les
mov
mov
test
mov
mov
sub
pusha
aas
fstl
fs
push
cwtl
aas
les
push
sub
aaa
lods
daa
rcrb
loope
adc
and
jmp
stc
cmp
sbb
push
hlt
mov
jb
pop
jne
imul
repnz
pop
es
adc
icebp
xchg
cli
sbb
std
das
sub
jns
mov
cltd
or
add
push
out
or
outsl
mov
add
and
call
mov
add
jno
push
sub
lret
inc
mov
arpl
cmp
inc
jnp
and
shll
mov
cmc
movsb
fs
adc
clc
xchg
xchg
leave
stc
mov
movsl
jp
and
loopne
mov
addb
out
ret
xchg
lds
mov
xchg
faddl
loopne
insb
mov
cld
sub
fisubl
fidivrl
rorl
pop
adcl
lea
jbe
test
cmc
jg
fbld
mov
lret
sub
lret
mov
mov
aas
jnp
lahf
xchg
jge
popa
mov
inc
mov
jo
lret
pop
adc
mov
test
imul
stc
xor
rcrl
lahf
mov
negb
add
inc
inc
stos
out
pop
inc
mov
jge
jl
xchg
mov
cmp
or
cmp
add
shll
pushf
sti
inc
movsl
xor
leave
nop
lods
xchg
inc
xchg
out
loopne
loop
push
sar
arpl
int3
enter
loope
sub
fsubs
scas
mov
fimull
adc
adc
lea
add
leave
popf
push
mov
inc
push
push
daa
aam
mov
inc
dec
dec
push
cli
fidivl
popa
idivl
mov
dec
mov
insl
inc
cmp
pop
stos
jno
mov
xor
jb
push
clc
ljmp
es
xor
mov
cmpsl
dec
xlat
lods
cmp
push
aad
cmp
pop
scas
gs
cmp
mov
or
xchg
sub
pop
add
mov
mov
fisttpll
das
loope
mov
imul
pop
or
xchg
andl
stos
scas
push
and
shlb
ret
fs
dec
mov
daa
lods
pop
jmp
ss
jl
and
dec
vpsraw
out
dec
jg
jo
int
loop
mov
icebp
cmc
gs
ss
sub
or
in
shlb
jle
ljmp
add
mov
in
cs
pop
push
aam
mov
sbb
fcoml
js
xchg
mov
sub
js
add
cltd
lods
test
pop
test
sbb
lcall
out
add
dec
iret
sti
int3
cmpsl
out
mov
cs
js
cmp
aas
push
nop
jnp
fsts
pop
div
popf
push
insb
out
test
adc
cmp
leave
or
cmp
in
mov
pop
mov
dec
xchg
dec
push
jmp
ds
in
orl
hlt
idivl
add
rorb
inc
lock
mov
mov
xchg
aam
pop
xor
sbb
pop
push
jecxz
xchg
xor
dec
and
push
andl
adc
mov
and
pop
pusha
je
fistps
pop
dec
loop
iret
outsb
cwtl
mov
std
ljmp
test
sub
call
cmovo
lret
xchg
mov
insb
dec
aad
es
adc
xchg
imul
jns
mov
and
mov
or
mov
stos
ljmp
pop
cmpsb
dec
pop
push
push
fisubrs
and
pop
cmpsl
and
mov
pop
sbb
cwtl
xlat
cmp
dec
test
mov
sub
sarl
push
pushf
and
xchg
cld
mov
mov
xchg
lret
sbb
xchg
push
out
cli
shll
imul
imul
and
mov
xchg
and
fadd
mov
jg
push
repz
add
cmp
jmp
lret
scas
dec
sub
xlat
mov
push
and
mov
and
in
int
and
inc
xor
bound
or
dec
mulb
sub
inc
inc
and
in
fwait
sbb
jecxz
popa
dec
xlat
imull
adc
int
inc
mov
stc
inc
adcb
ret
adc
sub
mov
add
in
add
jp
aad
lret
pop
adc
ss
rcrb
ret
cmpsl
stc
ljmp
test
frstor
enter
gs
pop
sub
divl
mov
outsl
bound
sbb
pop
inc
sbb
aaa
mov
mov
pusha
std
pop
incb
lock
jb
mov
out
sti
in
pop
jg
pop
push
push
stos
push
lock
imul
lret
data16
mov
jns
mov
or
inc
adcb
scas
lds
lock
lods
shl
dec
fisttpll
js
popa
ljmp
or
lods
fwait
push
cmpsl
mov
pop
dec
sub
cmp
lods
inc
cmc
or
pop
insl
push
xor
adc
fidivrl
scas
test
mov
dec
rorb
ret
iret
pop
divb
pushf
repz
sub
xor
jo
dec
inc
pop
js
cs
leave
jp
mov
gs
or
add
les
mov
loope
mov
dec
out
lahf
or
mov
movd
jmp
cmpsb
jne
mov
loopne
andb
mov
dec
in
aas
push
fstpl
mov
bound
adc
pop
in
and
xchg
aam
in
add
jge
cwtl
mov
sahf
es
push
mov
sbb
orl
lods
in
movsl
fsubl
push
in
cmp
in
mov
shlb
pop
sub
adc
out
mov
dec
jmp
gs
ret
mov
xchg
or
test
stos
mov
mov
pop
mov
pushf
sub
and
sarb
ja
push
arpl
pusha
into
xchg
push
cmp
xchg
std
jmp
mov
dec
je
xor
mov
testl
fldenv
cli
fisttpl
mov
mov
jle
test
jmp
pusha
push
add
mov
xor
dec
out
fisubrl
ds
fldl
mov
loopne
mov
sub
je
xchg
cmpsb
test
push
xchg
ds
cwtl
sub
inc
pop
pop
or
mov
jae
cltd
mov
dec
out
jnp
and
fstl
sti
ljmp
sbb
xchg
out
add
sbb
mov
data16
and
test
movsl
out
or
nop
out
cmp
jg
push
jmp
cmp
adc
cmp
mov
mov
aad
or
push
nop
fcompl
leave
pop
insl
sbb
mov
imul
inc
popa
fdivs
mov
insl
xchg
pop
pop
pop
cmp
mov
out
mov
mov
scas
test
aas
xchg
sbb
push
test
ds
sbb
ss
fnstenv
das
test
mov
jmp
cld
pop
sub
sub
xchg
mov
push
loope
mov
aaa
ljmp
bound
ds
sarb
mulb
push
and
sub
adcl
cli
adc
jno
pop
xor
sub
out
in
push
sbb
fnstsw
mov
imul
jns
mov
repnz
xchg
and
and
mov
jb
movsb
xor
dec
mov
push
mov
out
mov
cli
xchg
push
or
fs
imul
push
mov
roll
xchg
push
dec
test
add
cmp
or
adc
or
mov
pop
and
je
cltd
xor
pop
call
aas
idivb
outsl
jbe
ret
sub
jmp
xorl
js
out
pop
mov
stos
xor
dec
leave
dec
ret
stos
push
jg
sub
adc
add
lds
cltd
stc
icebp
mov
or
stc
adc
loopne
sbb
push
cwtl
cmc
sahf
mov
jo
clc
mov
pushf
xor
out
cmp
xor
dec
iret
mov
inc
cmpsb
xchg
dec
insl
inc
xlat
test
push
inc
jecxz
ljmp
push
mul
fcoml
add
cmpsl
scas
pop
lcall
mov
icebp
in
clc
push
int3
sbb
sbb
xchg
add
mov
daa
sbb
xchg
aad
fdivr
xor
pop
push
imul
add
push
sub
ljmp
sub
cmp
mov
push
out
jns
pop
lcall
xchg
cmp
mov
cmp
xchg
jnp
jno
pop
xlat
xchg
mov
loope
mov
addb
ffreep
sub
cmp
icebp
gs
jp
fiaddl
pop
std
jno
mov
sbbl
icebp
and
clc
pop
addr16
cmc
push
jmp
movsb
adc
mov
ljmp
rol
movsb
mov
cltd
cmpsl
aas
cld
dec
ffree
jge
sbb
jmp
out
mov
cwtl
in
mov
mov
adcl
jo
jmp
jno
and
ret
lods
add
xchg
cmp
aaa
xchg
cld
notl
pop
pop
movsb
lret
pop
mov
or
push
sbb
enter
jbe
mov
xchg
adc
movsl
sub
dec
xchg
in
adc
shrl
inc
lock
and
scas
xor
cmp
test
sbbl
cmpsl
cmp
imul
mov
popf
push
sbb
and
negl
push
cmp
out
insb
fdivp
and
inc
inc
in
mov
xor
fidivs
testb
int3
into
lock
jne
xor
add
jns
das
mov
push
or
daa
mov
mov
jnp
ret
movsb
rcrb
fidivl
push
or
and
movsl
int3
ficompl
mov
addr16
leave
or
xor
cld
aam
lds
ja
add
rolb
sahf
push
xor
scas
popa
jecxz
int
inc
dec
cmp
outsb
xchg
neg
pop
hlt
sub
aad
inc
mov
xchg
mov
call
xchg
xor
lds
jecxz
dec
xlat
add
jp
js
mov
sub
bound
and
addr16
add
loope
adc
cmp
inc
and
repnz
inc
iret
or
fstl
pop
rep
cmp
push
lods
cmp
dec
adc
adc
aad
dec
movsl
fcoml
sub
sub
inc
call
cmpsl
dec
lock
cmpsl
loopne
add
aad
out
sbb
cmc
xchg
jg
and
cmp
dec
inc
push
ret
mov
jecxz
pop
mov
popa
and
outsl
and
xlat
sbb
jnp
xchg
in
jb
push
push
xor
mov
cld
add
push
outsb
or
push
sub
xchg
in
cld
lcall
mov
rorl
cmp
pop
inc
cwtl
arpl
cltd
add
sub
add
enter
cmp
xchg
add
inc
imul
xchg
and
sbb
out
and
repz
sti
dec
push
adcl
jp
jnp
call
dec
fisttpl
push
jmp
dec
shrb
pop
scas
or
lods
es
mov
xchg
out
popf
push
or
andl
adc
xchg
mov
cmpsl
test
arpl
std
flds
rcl
gs
rol
test
pop
scas
pushf
rcrl
push
sub
insl
adc
dec
test
jg
repz
test
shr
xchg
sbb
mov
jge
or
mov
mov
inc
mov
xor
mov
xchg
xor
push
add
and
sub
mov
pop
pushf
xor
mov
mov
xorb
ds
xor
mov
add
out
iret
jecxz
fwait
adc
in
lret
imul
xchg
or
jg
xchg
mov
scas
fsubr
mov
push
into
pop
jb
movsl
cmp
xor
stos
hlt
sub
xor
jb
add
xchg
test
insl
cmp
add
dec
sub
ss
dec
or
mov
push
arpl
dec
test
imul
stos
in
outsl
mov
in
dec
fs
adc
inc
mov
and
fmuls
cmp
fisttpl
test
push
jo
mov
jb
loop
sarl
sahf
lods
scas
mov
adc
cld
mov
add
imul
pop
push
and
imul
push
mov
jbe
je
dec
fstl
test
xchg
jb
dec
shrl
xor
or
mov
xor
rcpps
jp
leave
xchg
stc
cmpsb
pop
xchg
inc
push
movsl
xor
mov
xor
mov
in
lret
out
adc
or
push
call
pop
into
cmovp
mov
popa
cmp
xchg
inc
popa
mov
jnp
adc
cmpsb
icebp
loope
imull
outsb
int3
mov
add
add
in
lahf
daa
rorl
popl
scas
mov
mov
adc
fists
adc
cmpsl
in
jae
jg
js
xlat
jecxz
pop
sub
out
jmp
cmc
test
mov
add
aaa
hlt
out
in
mov
inc
inc
xchg
jg
sbb
sbb
and
jae
xchg
xor
repnz
push
cmpsb
push
pop
nop
sbb
mull
out
fwait
jmp
add
xchg
push
add
mov
in
sbb
or
cli
loopne
lods
aam
hlt
sub
dec
das
mov
rorl
dec
roll
jns
dec
pop
cmpsb
fidivs
jl
push
xchg
jno
int3
push
insl
mov
dec
popf
xchg
inc
cltd
inc
lods
dec
sbb
mov
call
lods
or
xchg
test
mov
mov
and
xchg
icebp
add
cwtl
or
insb
cmp
sar
test
dec
xchg
mov
push
mov
inc
fstpt
jae
mov
fs
push
sbb
sbb
out
mov
fsubrl
into
cld
cmp
aam
xor
jbe
int
loope
repnz
sbb
cmc
scas
jne
lret
sbb
xchg
xchg
or
pop
sub
add
and
and
adc
jns
cmp
cli
jle
mov
jmp
loope
push
in
mov
fisubs
jg
lret
xchg
add
xchg
das
add
mov
pop
in
xor
enter
stc
adcb
sarl
rorb
inc
mov
inc
dec
fwait
pop
mov
stos
mov
jb
repnz
cmp
lds
fisubrs
in
cmp
inc
sbb
subl
into
shll
and
cmpsb
pop
leave
test
mov
mov
jbe
ret
in
repz
imul
pop
imul
mov
lahf
mov
jb
jecxz
mov
push
lock
or
and
cmp
and
or
clc
inc
movsl
xchg
or
in
sub
jo
add
push
mov
das
scas
or
xchg
xchg
jns
add
ret
push
mov
daa
add
adc
sbb
dec
push
add
xor
mov
mov
mov
dec
sbb
mov
push
daa
mov
add
pop
es
mov
dec
out
mov
jmp
xchg
jnp
jp
push
jp
pusha
dec
in
jbe
inc
dec
imul
mov
fisubrs
and
mov
dec
jb
mov
lds
flds
fnstsw
sahf
mov
jle
pop
sbb
popa
adc
ret
mov
scas
fadd
cwtl
dec
mov
and
outsl
sub
cwtl
repnz
pop
notl
faddl
xchg
das
ret
or
or
int3
pop
fnsave
fs
mov
mov
mov
adc
xchg
hlt
add
add
js
mov
jne
sbb
add
lcall
push
inc
nop
test
pop
sahf
inc
push
ss
repnz
loope
scas
jge
add
inc
xchg
xlat
cmpsb
xlat
cld
adc
and
xor
imul
ss
pop
and
xor
or
fdivl
gs
and
rclb
xchg
inc
adc
movsl
add
in
sub
xchg
mov
int3
sub
xchg
mov
fstpl
loopne
cmpsl
pushf
aas
or
xchg
adc
dec
mov
cmp
pop
fcoml
rcr
movsl
mov
aad
mov
xchg
pusha
shlb
ja
cs
div
adc
pop
mov
clc
sub
push
scas
std
repnz
in
fmull
pop
loopne
or
mov
xor
jp
adc
insb
js
jne
push
jmp
pusha
pmaxsw
xchg
mov
cmp
inc
xchg
pop
sub
loope
mov
cmp
dec
push
loope
and
cmpsb
popf
stos
sbb
and
scas
pop
push
jmp
add
lods
insb
xchg
and
lods
sub
pop
sar
cmp
inc
push
xor
aam
cld
popa
test
insl
cmp
xor
test
sub
leave
pop
xor
jae
jge
jo
js
fdivs
add
mov
xchg
xchg
jmp
in
add
fisubl
aaa
pop
add
pop
out
lods
hlt
cs
ret
testb
rorl
sub
mov
mov
xchg
add
movsb
iret
imull
mov
mov
rclb
jle
push
mov
or
sbb
sub
outsl
enter
pop
ret
pop
insl
dec
or
jecxz
arpl
adc
in
out
shl
xchg
or
idiv
test
push
push
cmpsb
insl
sub
loop
xor
lods
rcrb
cltd
dec
xor
fs
loopne
lret
dec
loope
sbb
cwtl
and
inc
das
and
test
gs
xchg
sub
call
sub
sbb
or
out
cwtl
jge
cmp
mov
lods
and
int3
dec
adc
xor
jne
test
pop
xor
jnp
dec
jne
pop
push
xor
lods
xchg
lea
cmp
fwait
shr
cld
pusha
stc
mov
pop
imul
dec
loopne
les
imul
and
loop
push
mov
mov
mov
mov
int3
xchg
bound
add
lods
in
push
es
cli
icebp
paddb
test
mov
shrl
jl
mov
mull
mov
clc
les
outsl
pop
pop
sahf
xchg
mov
imul
ror
jle
lahf
mov
ds
mov
out
aam
popl
inc
mov
or
inc
adc
cmp
mov
push
xchg
daa
scas
addl
mov
aaa
aad
and
mov
sar
insb
test
adc
push
aas
lahf
sub
jb
cmp
mov
mov
js
pop
inc
and
out
mov
push
mov
sub
push
or
dec
stc
jle
fiadds
outsl
pop
out
loopne
rcrb
push
aaa
jo
jnp
xchg
loopne
fstp
and
ret
lods
fstps
call
mov
pop
loopne
mov
mov
add
xor
out
lea
loopne
add
xor
inc
push
inc
ss
loopne
xchg
insl
loopne
mov
mov
pop
jbe
mov
pop
push
and
sub
push
xchg
inc
mov
cmpsl
sbb
cmpsb
or
imul
fmull
jnp
daa
movsb
mov
insl
dec
mov
sub
pop
adc
mov
fstpt
mov
pop
test
push
pop
push
nop
or
pusha
lods
xchg
mov
adc
pop
inc
or
cmpsb
mov
fstps
sahf
adc
cmp
std
out
push
push
jge
xchg
mov
pop
jo
cmpl
push
push
inc
pop
jmp
fstl
mov
xor
jo
add
cmp
das
ljmp
ja
xor
xchg
mov
sbb
enter
mov
roll
xchg
xchg
cmp
sahf
popf
sub
xor
pop
bound
cmp
sub
scas
lahf
mov
adc
lret
ljmp
sub
sahf
mov
mov
test
rcll
lahf
ja
push
xor
push
out
cld
sub
hlt
test
int
insb
sub
sub
lcall
or
sub
inc
dec
dec
stos
lods
add
and
es
push
dec
inc
and
es
fwait
jbe
fcmovb
mov
pop
outsb
xor
and
pop
push
mov
cmp
lock
xor
mov
xchg
aaa
ss
dec
and
pop
loope
xor
sub
xchg
pop
pop
pop
or
xor
dec
xor
xchg
pop
adc
mov
and
push
cwtl
sub
leave
mov
mov
and
mov
jge
inc
mov
aaa
dec
xor
adcl
lret
cwtl
pop
mov
mov
movsl
fwait
sbb
aad
mov
dec
adc
or
dec
xor
cmp
lods
push
sub
outsl
fimull
adc
jmp
lods
push
ret
xor
xchg
adc
xchg
inc
adc
xchg
in
hlt
call
mov
iret
fcomp
xchg
scas
add
adc
cli
push
fisubrs
aas
inc
dec
and
mov
shlb
cmp
cld
xchg
call
bound
cmp
fwait
pop
push
sti
sub
push
lret
int3
or
push
jns
mov
cld
lds
cmpsb
mov
mov
stc
mov
call
jmp
cmp
and
mov
call
sub
fcomi
adc
adc
jp
sbb
push
cmp
call
repnz
mov
and
outsb
test
jmp
movsb
iret
lods
nop
dec
gs
push
add
scas
rclb
sbb
cmp
dec
push
loope
lret
or
fcom
rcll
dec
xor
in
movsb
mov
xchg
jbe
or
jns
xchg
lods
lods
inc
xor
movsl
aad
jo
adc
cli
or
lea
adc
xchg
adc
and
pusha
test
out
inc
push
out
adcl
and
fcoml
mov
int3
decb
xor
pusha
scas
push
push
add
xor
dec
xor
sbbl
stc
movsb
mov
pop
push
xlat
adc
push
loope
das
jno
ds
xchg
push
or
or
mov
sbb
cmp
test
mov
and
jl
push
jle
adcb
rorb
punpcklwd
xchg
push
lret
xchg
dec
scas
mov
outsb
sub
test
ss
push
and
jns
imul
scas
mov
adc
fistl
cwtl
or
daa
dec
xchg
test
dec
xlat
mov
icebp
pop
outsl
push
das
push
pop
adc
aam
mov
adc
scas
fcomps
call
stos
neg
add
lahf
mov
jecxz
inc
test
cli
popa
ljmpw
mov
push
or
fscale
ret
sbbb
jb
sub
rolb
ret
pop
out
shl
leave
fs
xor
cltd
ljmp
add
mov
pop
mov
scas
stos
dec
add
shlb
cld
lahf
pop
int3
push
mov
js
stos
insl
push
fcom
xor
lods
jle
dec
jns
xchg
ror
imul
mov
rclb
insl
xchg
enter
js
push
sbb
scas
nop
add
in
or
cwtl
mov
rcrb
mov
fnstcw
call
dec
push
sbb
mov
sub
mov
sub
mov
ds
loope
test
xchg
adc
sub
and
sahf
jge
sbb
vprotq
popa
jo
and
dec
sub
popf
push
xchg
lea
sbb
mov
push
clc
add
cmp
in
inc
cmpsb
nop
pop
out
xchg
rcr
bound
jle
lock
filds
adc
lcall
push
popf
xorb
sti
dec
ljmp
push
mov
xor
push
sub
adc
test
in
xor
mov
leave
jge
mov
xor
dec
sbb
fwait
cmp
push
cmp
test
pop
mov
dec
sbb
dec
lods
in
push
movsb
sbb
jmp
sti
mov
lret
sahf
inc
jo
mov
add
and
into
pop
xor
adc
sti
filds
andl
pusha
ret
js
mov
xor
inc
stc
aad
dec
sub
push
rcrl
test
sbb
jns
jp
sub
out
loopne
pop
call
and
hlt
cmc
incb
ljmp
push
insb
add
xchg
repnz
xorb
ds
mov
in
cmc
xor
and
push
cmp
subl
inc
add
inc
ja
cwtl
sti
adc
mov
jmp
jecxz
mov
cmp
and
hlt
xchg
ret
sbb
jecxz
fcmovnb
dec
xor
xchg
add
mov
test
test
cmp
pop
sub
lds
and
cmp
sti
nop
dec
adc
add
aas
int3
fisubl
lds
mov
imul
mov
mov
movsl
adc
scas
int
andb
sbb
or
call
in
test
stc
lret
dec
outsb
orb
xchg
in
add
out
imul
jae
stc
and
out
xchg
loopne
or
xchg
test
mov
daa
jl
and
pushf
es
rorb
dec
fidivrs
lea
cmpsb
test
inc
cmp
mov
pop
imul
add
sub
dec
in
in
pop
loop
cmp
add
in
and
pop
sti
aam
xor
repz
nop
rorl
sarl
jg
stos
out
pop
shrl
xor
stos
movsb
nop
push
sub
cli
fisttpl
pop
and
bound
das
jb
cmp
insb
in
out
mov
or
imul
xchg
adc
rolb
imulb
push
ja
mov
rcrl
jmp
adc
mov
fidivrs
mov
push
dec
inc
dec
mov
es
lcall
xchg
mov
adc
decl
loop
loopne
and
into
pop
fbstp
aad
je
test
push
cmp
jae
stc
mov
mov
mov
xchg
idiv
in
shll
add
mov
mov
inc
aad
jae
das
xor
out
cwtl
cmc
push
mov
movsl
test
cmp
xor
sub
cli
loop
inc
jecxz
pop
fidivrs
aaa
fstps
add
cmpsl
dec
test
imul
addr16
das
out
fldt
jno
sub
jae
fistpl
dec
clc
outsb
inc
push
pmaxub
jne
std
jbe
inc
sub
sbb
aam
nop
push
mov
insb
jl
fadds
shl
cmpsb
mov
lcall
mov
scas
into
leave
jbe
and
orl
sub
sbb
shlb
fdivs
loope
cmpsl
jg
cmp
cltd
push
pop
mov
std
jle
mov
popf
int
mov
push
or
inc
and
xchg
push
adc
fisubrl
jge
and
mov
test
lea
arpl
daa
inc
cmc
rclb
aas
dec
and
jmp
jo
push
inc
or
pop
out
cmpsb
adc
jge
pop
and
xor
sub
cmp
inc
mov
lahf
cwtl
mov
and
sbb
cltd
enter
inc
or
in
mov
gs
dec
pop
testl
mov
stc
sbbl
jno
shll
mov
pop
loopne
ljmp
or
filds
dec
daa
test
xor
xor
pushaw
repz
push
push
in
lea
jl
lods
push
sub
dec
pop
dec
jns
pop
aas
inc
sti
mov
dec
mov
inc
mov
inc
aaa
pushf
dec
subl
sbb
aad
push
js
repz
lods
call
rcrl
xchg
dec
mov
dec
ret
shrb
ljmp
inc
scas
mov
dec
add
pop
sub
pushf
loopne
pushf
enter
pop
sbb
and
xchg
dec
mov
in
mov
mov
insb
sbb
mov
dec
inc
adcb
sbb
pusha
stos
jae
inc
mov
iret
es
and
loop
scas
bound
fcmovb
lds
push
or
cmp
std
or
push
xchg
daa
repz
and
and
lea
test
jle
gs
pop
iret
adc
in
jecxz
cmp
sarb
cwtl
into
cmc
push
sahf
cmpl
adc
push
push
mov
adc
adc
movsb
aaa
add
sub
mov
shlb
es
nop
pop
mov
incl
aaa
jns
in
es
int3
test
add
clc
sbb
jne
dec
pop
into
jg
xor
arpl
xchg
mov
out
adcb
jecxz
mov
test
xor
dec
jp
jns
test
mulb
xchg
adc
outsl
mov
push
push
push
fnstenv
and
cwtl
fiadds
clc
movsl
jne
ljmp
divb
fiaddl
mov
adc
sbb
xor
lods
movsb
loopne
rcl
mov
hlt
lea
jae
outsl
scas
outsb
sub
push
and
mov
stos
adc
push
push
add
mov
mov
add
lret
add
into
test
dec
or
or
out
dec
aas
cmpsb
in
push
mov
mov
xor
popf
inc
icebp
sub
scas
push
sbb
shlb
sarl
or
pop
std
fbstp
lods
aad
mov
sub
xor
xchg
jno
popa
sbb
bound
xor
jmp
test
inc
mov
lret
sub
imul
rcrl
aad
popa
add
push
ds
jo
xlat
push
ret
negl
inc
xchg
sub
dec
add
or
leave
rolb
mov
inc
test
leave
xchg
cmp
pop
mov
lds
adc
imul
sub
and
outsl
sub
and
sub
fsts
loopne
outsb
ljmp
mov
lcall
jnp
or
shrb
sub
xchg
les
mov
repz
cmp
inc
add
pusha
xchg
add
ds
pop
mov
pushf
xchg
in
in
add
orb
or
pusha
push
outsb
dec
jnp
sahf
jle
movsl
push
mov
stc
push
das
xor
and
popa
lea
gs
loop
pop
test
loop
push
sub
and
push
jbe
lret
pop
insl
imul
in
adc
lahf
fcomps
cmp
push
ret
out
in
cmp
outsb
dec
pop
sbb
orb
cmpsl
in
insb
andb
mov
jo
mov
dec
mov
mov
sub
cmp
jmp
xor
scas
or
dec
jns
xchg
dec
mov
sbb
sub
xor
mov
sub
aas
mov
xorl
repz
mov
mov
add
pop
iret
mov
lock
clc
mov
ficomps
jge
xor
out
add
sub
cli
test
out
out
insb
push
dec
cmpsl
jbe
pop
jbe
dec
movsb
mov
lahf
jmp
ja
das
lock
mov
lret
in
std
adc
sub
and
addb
pop
push
pop
jmp
jmp
push
xchg
xchg
add
cmp
scas
dec
dec
mov
ljmp
inc
fnstsw
aad
lods
pop
decb
mov
int
mov
push
add
pop
negb
std
pop
jge
jg
sub
int
pop
sbb
push
dec
cmp
mov
loope
mov
push
and
loop
lea
int3
or
push
bnd
sub
in
push
test
mov
hlt
cmp
dec
rcrb
add
cmp
fldt
adcb
push
imul
fnstenv
mov
push
sahf
jb
sub
iret
xchg
das
lods
scas
dec
xchg
mov
pop
pop
movsl
sahf
shl
dec
push
iret
jge
xchg
cmp
daa
xchg
mov
outsb
stc
sbb
sub
dec
sub
pop
in
xchg
and
test
fs
outsl
adc
ds
push
and
add
lods
scas
pop
and
sbb
cmp
aas
pop
mov
dec
scas
sbb
jmp
adc
cmpsl
outsb
data16
or
jge
dec
shlb
mov
pop
gs
in
rolb
inc
or
and
pop
fstpt
push
push
mov
jmp
adcb
or
out
std
jne
inc
sti
popf
mov
pop
aaa
xchg
sti
fisubrs
adc
cmp
stc
push
stos
or
adc
dec
dec
imul
xchg
add
jno
mov
mov
xchg
pop
cmp
lock
fbld
fcmovb
xchg
mov
icebp
cmp
sub
scas
xor
leave
lods
lods
arpl
divl
push
cmp
packuswb
dec
nop
enter
lahf
imulb
inc
in
sahf
push
xlat
jno
pop
dec
mov
arpl
in
cli
das
push
insl
lcall
pop
addr16
fs
dec
cmp
and
sbb
scas
lret
jnp
dec
xchg
xchg
xor
pop
fs
stos
jg
es
mov
fsubs
test
aaa
mov
mov
xor
dec
pop
xor
cmp
dec
xchg
push
icebp
sbb
gs
xor
push
les
repz
mov
decl
mov
in
ret
dec
add
in
add
into
jp
orl
insl
push
xor
lret
fmull
rcll
bound
mov
sar
sbb
sbb
dec
cmp
xchg
xchg
int
aam
xor
jmp
cmp
inc
sbb
pop
scas
repnz
dec
inc
jbe
lods
cmpsl
dec
lock
inc
test
push
icebp
jle
movsl
push
pop
ret
sbb
je
mov
bound
dec
sbb
mov
lods
fwait
inc
push
pop
shrl
xchg
inc
sbb
xchg
add
inc
adc
mov
mov
xchg
dec
inc
jo
test
lahf
mull
imul
jae
inc
jnp
mov
mov
dec
cmp
std
push
push
testb
mov
test
insb
pusha
rcl
out
enter
mov
sub
ss
jo
pusha
inc
cmp
push
gs
int
jnp
movsb
addb
sahf
xorl
jno
adc
pop
inc
pop
sbb
pusha
xor
pop
int
and
mov
dec
es
iret
push
lahf
push
inc
xchg
cmpsl
add
lods
dec
stc
mov
inc
jg
out
xchg
xchg
or
mov
mov
fbld
sub
loope
add
xchg
arpl
and
xor
cmp
or
jo
jo
repz
out
ja
imul
lea
int
xor
jno
shll
mov
cmc
sub
xor
imul
popf
call
adc
arpl
and
pushl
mov
test
es
rcr
sub
pop
scas
sub
data16
xor
or
les
xlat
and
pop
movsb
sbb
loopne
cmp
orl
xor
xlat
and
std
mov
fwait
outsl
je
xor
dec
or
pop
pusha
cmpsb
repnz
cwtl
pop
mov
jno
popf
xor
out
sub
das
push
imul
mov
mov
mov
cmp
int
jo
sub
sub
xor
aad
mov
scas
fadd
xchg
xlat
imul
movsb
xor
sarb
sub
popf
lahf
xchg
sbb
cmpsl
push
test
add
mov
ret
add
movsl
xchg
add
stos
movsl
push
sub
dec
xchg
push
inc
aas
mov
sbb
push
mov
mov
lods
pop
mov
xchg
or
out
jne
mov
or
inc
lods
mov
int3
scas
cld
ret
pop
jg
xchg
xorl
cmc
and
and
pop
sbb
xchg
rorl
dec
int3
sub
stos
sar
shll
aas
into
jnp
jmp
fimull
ja
aas
fsubr
test
push
icebp
lret
xchg
dec
and
dec
pop
jns
fiadds
lock
cltd
sub
mov
pushf
xchg
sbb
lea
sub
mov
pop
xor
pop
sahf
daa
cltd
jp
or
dec
cmp
cmpsl
mov
cmp
dec
push
shlb
iret
mov
data16
dec
dec
repnz
test
or
mov
xchg
fsts
xchg
or
iret
cmp
mov
dec
in
xchg
fadd
add
jno
es
xor
adcb
push
ret
or
std
jo
ret
add
stos
arpl
sbb
mov
test
repz
xor
jno
or
xchg
fdivrs
int
mov
push
in
adc
shlb
or
addr16
mov
pop
rcrl
fcomps
mov
push
clc
xchg
popa
outsb
out
cs
mov
fs
imul
adc
repnz
imul
mov
sbb
rcl
sti
push
add
push
fmuls
jbe
cmp
xorb
sbb
insl
lret
insl
mov
jecxz
mov
cmp
jecxz
push
xchg
mov
insl
ficoml
lret
jne
leave
add
push
imul
xor
add
push
into
jg
adc
ja
in
psubq
mov
aad
icebp
mov
sub
mov
in
cltd
mov
add
sub
xor
push
lds
xchg
aad
add
and
mov
out
ret
leave
mov
sub
pop
pop
gs
mov
enter
pop
inc
xor
fnsave
mov
xor
adc
call
mov
sub
push
aad
outsb
es
in
push
fs
and
mov
mov
push
les
pop
add
out
aas
jg
push
cld
out
addl
jl
insb
int3
sub
pop
jge
fisubl
aam
jp
xchg
adc
and
add
fs
in
pop
shrb
js
hlt
xchg
int
cwtl
movb
mov
xor
dec
and
clc
sub
sbb
mov
addl
fiaddl
pusha
std
pusha
movsl
in
push
gs
sbb
mov
mov
stos
ss
shrl
nop
imul
add
jbe
adc
fcomps
inc
sub
pop
or
sbbb
std
sub
mov
mov
adc
push
mov
xlat
fstl
push
mov
sub
xor
dec
les
add
mov
pop
popa
push
fildl
mov
pop
loop
fiadds
dec
push
fsubs
sarl
and
hlt
pushf
call
pusha
data16
push
jmp
fildll
push
pop
xor
push
adc
sub
jns
jp
xchg
test
aad
das
pop
or
out
jp
xchg
push
cltd
movsl
addl
cmc
fbld
pusha
sub
sub
orl
ds
orl
inc
adc
bound
jp
xor
movsl
cltd
mov
mov
pop
xchg
mov
stos
push
sbb
je
sbb
adc
jecxz
js
ffree
das
nop
jae
imul
lea
xorb
testb
incl
add
push
mul
mov
push
int
push
dec
jp
xor
mov
loop
stos
sub
cmpsb
fidivrl
mov
mov
adc
mov
int
xor
mov
arpl
xlat
scas
xorb
adc
cmp
popa
int
ljmp
gs
dec
xchg
roll
mov
movsl
xor
jg
xchg
cmpsl
shlb
mov
jb
sbb
sbb
arpl
mov
adc
mov
loopne
jge
aas
pusha
aad
out
test
in
insl
push
jnp
add
xchg
jnp
dec
dec
cmp
popf
int
jge
xchg
insb
pop
data16
jmp
bsf
bnd
pop
clc
js
xchg
sbb
xchg
fiaddl
insb
and
or
jae
fcmovnb
xchg
mov
pop
inc
mov
mov
inc
cmp
lahf
cmp
or
cmpb
loope
ljmp
andl
jno
in
gs
cld
push
outsb
xchg
cmpsl
sbbb
add
push
fnclex
adc
popf
int
je
xlat
mov
cmp
ffree
arpl
push
pop
leave
adc
arpl
fldenv
imul
les
in
cmpsl
in
cmp
imul
add
dec
dec
pusha
and
shrb
addr16
mov
xor
push
in
mov
xlat
fldcw
pop
adc
mov
adc
mov
daa
push
insl
lcall
incb
sub
adcl
negb
cmp
and
adc
mov
lock
pushf
mov
push
loop
dec
jmp
int3
sbbl
addr16
xchg
inc
arpl
fimull
dec
mov
inc
xlat
icebp
cld
sub
ljmp
or
jb
int3
fldl
adc
mov
cs
cld
daa
mov
cltd
ror
push
jle
pop
xchg
daa
nop
clc
mov
andb
aam
mov
pop
cmpsl
stos
mov
sub
sbb
or
lods
jne
stos
dec
es
or
pop
and
mov
daa
lea
xlat
aas
dec
rcl
sahf
push
sbb
push
daa
movsl
cmpsl
and
out
push
outsl
jecxz
cmp
lahf
sbb
mov
loop
xor
mov
in
jo
dec
int3
sub
insl
inc
xchg
mov
and
sub
pushf
daa
jge
fld
inc
in
pusha
mov
outsl
out
imul
dec
nop
cmpsb
inc
addb
sar
insb
lret
out
cmp
repz
or
mov
pop
adc
pop
pop
movsb
add
popa
jo
add
cmp
sbb
mov
lahf
notl
in
mov
scas
push
push
iret
adc
lcall
jge
cmp
hlt
lea
pop
pop
mov
outsb
subl
imul
fidivrs
popa
xor
pop
sahf
or
inc
fcoms
jmp
mov
pop
sbb
scas
cmp
inc
add
scas
hlt
or
cmp
adc
mov
ret
sbb
xchg
test
dec
mov
int3
or
cmp
lods
std
cli
enter
js
pop
idivl
and
dec
fisubs
push
hlt
stos
jl
shlb
sti
pop
pop
pop
pop
mov
jge
mov
out
test
sub
mov
stos
mov
jnp
push
mov
adc
rolb
int
push
jg
fildl
repz
dec
or
cmp
mov
or
or
ljmp
gs
in
movsb
and
pop
or
inc
push
popf
push
inc
jmp
mov
popf
je
cmc
rcrb
dec
pushf
into
lods
xor
sbb
addr16
jnp
shl
call
outsb
and
push
test
ljmp
dec
dec
fimuls
pop
xor
sarl
fisubl
roll
test
test
lret
mov
adc
adc
es
into
fsubrl
rorl
cli
adc
add
outsl
pop
insb
xchg
iret
je
lods
xlat
cmp
movsl
das
pop
stos
jg
sub
mov
push
adc
lret
pop
pop
pushf
ljmp
insb
lahf
test
out
outsb
jnp
mov
repnz
fistpll
xor
call
pop
cmp
dec
test
cli
fsubrs
dec
fwait
mov
orb
cmp
sti
cmc
jg
inc
aad
xor
push
inc
pop
sbb
mov
inc
es
cmp
xchg
cmp
pop
cmc
and
xor
fwait
add
adc
inc
and
cltd
inc
sub
movsl
out
pop
sti
jmp
fnstenv
ds
sub
mov
push
sbb
cs
mov
pop
mov
jb
sub
xor
hlt
orl
pop
in
cld
sub
mov
js
ja
call
push
inc
xlat
cmp
lcall
cmp
sahf
inc
cmpsl
inc
cmpsb
daa
lahf
push
push
xchg
push
fcoms
lds
jge
and
mov
loopne
pop
negb
jge
fucom
scas
sbb
repz
mov
fiaddl
jmp
cmp
cmpsl
sub
push
adc
sub
inc
add
jge
pop
inc
imull
scas
ss
and
les
adcb
fdivrl
mov
jbe
dec
aad
mov
push
pushf
lock
fwait
dec
out
js
pop
dec
jg
ss
adc
mov
in
push
sbb
mov
mov
imul
int3
mov
add
pop
daa
lea
lods
adc
out
aad
lret
xchg
mov
orps
jl
leave
mov
push
scas
cli
xchg
sbb
ljmp
call
and
cmp
lock
adc
repnz
lock
insb
push
dec
add
jb
mov
dec
adc
clc
jle
les
loope
and
dec
outsb
lds
fs
mov
adc
or
hlt
cmp
call
or
xchg
sub
dec
outsl
mov
lcall
and
dec
inc
sub
and
stos
insl
pusha
xor
push
sub
daa
ss
inc
subb
jecxz
ds
or
xor
mov
dec
or
loop
xor
sbb
cld
xchg
jne
dec
push
sarb
rcrb
sub
loop
cmp
lea
cmpsb
xchg
cmp
sub
repz
mov
pushl
mov
mov
push
int
fidivrs
or
mul
iret
and
nop
push
adc
scas
fwait
arpl
cli
fcmovbe
sbb
or
adc
pop
das
mov
in
lods
jle
jne
les
or
out
pop
in
cmp
xchg
adc
mov
xchg
mov
xchg
pusha
jmp
lods
rcr
dec
nop
mov
inc
mov
sbb
loope
sbb
stos
testl
cmp
shll
inc
xor
pop
push
sub
push
cmp
in
mov
and
fistl
add
mov
lds
fstpl
mov
gs
das
jmp
cmp
popf
sbb
pop
sub
mov
mov
cmp
scas
jg
xor
push
fisubl
xchg
adc
push
pop
pushf
cs
cmpl
mov
mov
int3
hlt
and
ficoml
dec
movsb
pop
cmp
aad
xchg
mov
lcall
clc
scas
divb
lock
pop
jmp
shlb
mov
pop
xlat
pop
arpl
pop
sbb
andb
sahf
scas
push
int
cltd
into
mov
js
add
mov
stos
sbb
lock
xor
jle
xchg
lret
enter
mov
sarl
and
xor
inc
dec
repz
cwtl
xchg
ret
mov
cltd
pop
jb
sbbl
sbb
jae
addr16
lret
inc
shrb
pop
push
sub
sbb
mov
dec
es
hlt
insb
mov
jle
dec
and
shll
arpl
ret
insb
cltd
inc
dec
fcoml
or
or
fidivs
sub
orb
ss
add
pop
daa
lds
popf
mov
pop
inc
dec
pop
push
cmp
xchg
in
je
cmpsb
dec
test
sbb
mov
pop
sub
das
orb
subb
pop
stos
test
test
ds
push
pop
mov
in
add
cltd
fimull
stc
push
mov
xor
mov
dec
inc
cld
fld
push
cmp
xchg
dec
fildl
mov
mov
sarl
xchg
or
sbb
push
mov
inc
lret
jb
dec
pop
pop
jns
mov
pop
lods
rcll
mov
ret
and
xchg
test
dec
stos
push
int
mov
clc
ljmp
jne
repnz
sbb
pop
dec
scas
icebp
push
mov
pop
xor
inc
mov
add
fwait
add
std
mov
pop
jnp
pop
sub
xor
imul
cmpsl
mov
cmp
idivb
pop
mov
das
add
or
or
pushf
rcrl
insb
int
out
test
andl
loopne
pop
mov
dec
mov
and
mov
ret
or
jecxz
mov
inc
aam
sbb
aaa
or
adc
cmpb
and
pop
add
mov
push
lret
dec
dec
das
loope
daa
repz
dec
fcomps
mov
mov
cmc
addb
mov
fnstcw
lea
add
xchg
arpl
mov
sub
mov
sub
out
cmp
addl
push
lcall
push
add
xchg
inc
push
jns
mov
mov
pusha
decb
dec
mov
fcompl
lret
sub
int
sbb
mov
mov
pop
sahf
in
std
scas
arpl
dec
cmpsl
mov
pop
cmpsl
pop
push
test
pop
pop
cmpsl
and
mov
sub
popa
xchg
mov
push
dec
cmpsl
add
adc
pop
inc
pop
sarl
js
mov
lahf
mov
fdivs
std
mov
inc
push
stc
mov
sti
cmpsb
fmuls
fs
pusha
pop
outsl
cmc
sub
pop
jecxz
stc
add
fildll
cmp
mov
jno
test
fsubs
jo
or
mov
clc
push
and
mov
into
pop
dec
push
cmp
xchg
nop
xor
repnz
inc
popf
pop
daa
pop
sbb
test
mov
xor
add
aam
push
lret
cli
pop
testb
je
shl
xchg
dec
jnp
and
call
in
fucomip
sub
xor
outsb
cmp
dec
add
ret
lahf
mov
sbb
push
lea
sbb
dec
pop
add
loopne
mov
push
mov
imul
push
and
xlat
aad
dec
xor
adc
xchg
sub
loope
xorb
pop
cwtl
xchg
sahf
fnstenv
insl
adc
aad
mov
roll
xchg
sahf
cmc
aas
xor
sahf
adc
out
lahf
lods
fldenv
fdivrs
out
jae
in
cli
mov
clc
lods
mov
into
outsl
inc
mov
jbe
stos
jp
test
or
jg
push
ja
jne
sub
mov
mov
sbb
scas
xor
mov
repz
xor
dec
in
inc
pop
repz
xor
int3
sbb
dec
mov
mov
fbld
push
bound
mov
jmp
or
rcrb
dec
mov
jle
push
bound
or
and
sbb
popa
xor
sbb
lods
cmp
out
ror
cs
fs
outsl
in
sbb
mov
test
ja
xchg
xor
xlat
je
jg
adc
sbb
push
jbe
push
add
jle
outsb
hlt
rcr
and
outsl
jno
xor
jne
mov
pop
sub
jmp
fwait
cli
bound
adc
in
xchg
xchg
xor
inc
in
xor
sub
xor
mov
call
or
fisubrs
inc
pushf
inc
aaa
sbb
mov
loope
pop
in
sbb
sbb
fildl
scas
mov
iret
imul
out
xchg
mov
mov
out
pop
pop
xor
fs
pop
cmpsl
pop
sub
and
sar
adc
add
cmpsb
cmc
loopne
jo
mov
lods
shrl
js
lcall
adcb
push
movsb
xor
xchg
repz
out
and
sbb
flds
push
addl
inc
push
repnz
aas
inc
push
dec
mov
jbe
lret
hlt
sbb
andl
pushf
mov
bound
and
sub
mov
mov
inc
sbb
test
push
subb
lods
int
mov
lcall
add
fidivs
cmp
lock
mov
cmp
mov
sbb
fldcw
pop
pop
or
gs
inc
pop
xorb
cmp
push
pop
outsb
daa
sbbl
outsb
mov
data16
test
push
adc
data16
imul
adc
and
mov
mov
adc
sub
sub
mov
popa
push
push
xor
or
jne
fwait
adc
cmp
mov
or
lods
int
jge
mov
adc
inc
arpl
and
push
or
int
jle
jmp
cli
mov
js
ret
jmp
sarb
add
add
mov
push
std
sbb
cmp
mov
mov
je
fnstenv
jnp
adc
scas
mov
sbb
insl
cwtl
cmp
jne
cld
adc
xor
loope
fsubs
push
sti
test
sbb
mov
popa
gs
sbb
js
jb
loop
iret
xchg
jno
add
jb
xor
loopne
loopne
fmuls
out
xchg
mov
bound
sbb
int
pop
pop
jb
sbb
xchg
xchg
adc
adc
mov
mov
sbb
cmp
fsubl
and
cmp
rcrl
xchg
mov
cmp
jbe
subb
xor
jp
in
pop
sarb
jg
push
repnz
cmc
int3
dec
jg
dec
pop
mov
rorl
bound
scas
adc
leave
mov
dec
and
add
xor
mov
xchg
jg
xor
mov
sub
or
cmp
testb
faddp
push
adc
cli
call
push
cmpl
xchg
fcomi
pop
jbe
push
pop
jge
mov
and
xchg
out
xchg
or
push
insl
dec
cmp
xchg
pop
sbb
ret
lcall
push
adc
jnp
xchg
repz
dec
mov
aas
int3
js
decb
jnp
push
cmp
fchs
test
or
jb
std
mov
mov
lea
imul
jo
pop
lahf
push
leave
xor
out
push
ja
lahf
cmpsb
pop
jo
mov
inc
pop
lea
pop
fsub
rolb
lds
mov
cmp
bound
popa
std
arpl
push
ja
xor
push
jnp
or
lods
sbb
ljmp
push
xchg
mov
test
out
pop
outsl
jmp
das
test
jns
cmp
addr16
xchg
or
mov
lret
jp
call
test
mov
mov
shl
add
mov
mov
popa
stos
les
push
out
mov
pop
enter
imul
xchg
pop
cmc
adcb
dec
xor
into
loopne
mov
in
sbb
addr16
scas
out
mov
jge,pt
lea
imul
xchg
add
dec
xchg
mov
rcrb
dec
inc
adc
mov
loopne
xchg
shl
mov
mov
adc
movsl
sbb
dec
inc
or
pop
add
es
mov
pusha
jge
mov
lods
xor
cmpsl
jmp
xchg
sub
cli
int3
jmp
adc
sti
jbe
pop
out
jg
xor
mov
push
daa
ror
mov
dec
jns
sub
cld
inc
xchg
cld
adc
fs
shl
cmp
jp
lock
addr16
pop
les
xlat
das
popf
xchg
add
mov
mov
test
lea
xor
es
cmp
jg
mov
adc
enter
xchg
sbb
negl
pop
push
hlt
xchg
mov
pop
xchg
data16
stc
lods
push
sub
push
xlat
cmpsb
aam
mov
outsb
cmp
je
pushf
cs
inc
loope
mov
iret
pop
insb
lods
ljmp
cmp
mov
addr16
xor
lea
daa
pop
dec
out
jecxz
mov
dec
pushf
les
push
loope
xchg
mov
and
xchg
jmp
insb
int3
cmp
and
int
loopne
pushf
or
lds
mov
push
aam
cld
orl
ds
aam
lods
pop
outsb
les
aaa
insl
push
add
xchg
arpl
je
lods
movsb
sbb
sbb
iret
movb
push
outsb
adc
mov
bnd
sbb
adc
jo
je
cmp
push
loope
loop
sub
push
ds
mov
push
aad
cmp
dec
xchg
mov
sti
or
push
mov
data16
orl
pop
adc
adc
cli
std
fsubrp
js
aam
rcll
dec
iret
hlt
inc
test
push
xlat
movsb
and
or
dec
js
mov
scas
aad
xor
repnz
iret
insb
bound
ja
xchg
inc
sub
arpl
or
clc
ja
cmp
jns
call
orb
lods
dec
test
jnp
fcomps
repnz
add
mov
and
in
shl
mov
sub
shll
outsb
xchg
fists
mov
cmp
leave
dec
or
sbb
cmp
imul
dec
das
cmp
push
test
int
aad
fildl
push
rcrl
jge
xchg
adc
xchg
adc
cmpl
jo
jno
cmp
notb
popa
cmp
mov
ja
xchg
sti
mov
stc
ds
mov
insb
rcrl
in
mov
mov
mov
jle
cmpsl
xor
pop
add
adc
jno
mov
xor
jp
vcvtsi2ss
push
add
dec
or
mov
pop
scas
xor
sub
out
out
cmp
inc
cmpsb
sub
dec
adc
xchg
push
rcr
mov
lods
pop
xchg
ret
jg
aaa
jae
sub
fldcw
arpl
aaa
rcrb
jecxz
mov
iret
fsubs
sbb
dec
aas
mov
aaa
sbb
aas
xor
test
xor
rorb
adc
push
xor
jp
ret
enter
adc
push
push
pop
add
hlt
test
dec
or
ffree
xchg
cmpsb
ret
divb
mov
pop
fwait
mov
push
popa
inc
ds
fidivrl
xchg
roll
xor
testl
dec
mov
adc
xor
addr16
cmp
jmp
or
xor
leave
mov
and
mov
addl
push
sub
fnsave
pop
stos
cmpsb
and
cmp
ljmp
icebp
cmp
mov
or
mov
sub
pop
sarl
push
dec
mov
insb
pusha
out
popa
daa
dec
int
and
jge
pop
movsb
inc
inc
addr16
idivb
mov
pop
xor
subb
adc
inc
mov
lcall
mov
dec
hlt
insl
pop
out
inc
xchg
xor
das
mov
je
mov
lahf
or
ja
push
call
jbe
clc
sti
adc
popf
sub
pushf
and
add
inc
inc
mov
jmp
iret
jno
inc
mov
das
cli
daa
adc
in
mov
movsb
int
mov
jne
xlat
aad
xor
in
pushl
push
jp
fptan
dec
lock
nop
and
or
adc
out
out
inc
push
sarb
sbb
jl
pop
movsb
add
frstor
or
gs
sbb
and
fmull
test
mov
inc
leave
jecxz
xchg
fidivs
inc
jne
pop
push
fcomps
stc
pop
aaa
inc
dec
shr
dec
popf
push
push
sub
inc
pop
sbb
cmpsl
dec
adc
add
cmp
sbb
xlat
jecxz
rcll
cmp
push
push
out
insb
lcall
mov
ds
fs
mov
add
mov
in
aad
jl
scas
lea
test
jecxz
movsl
mov
mov
je
fsubl
sub
insl
mulb
insb
sub
neg
pop
mov
xor
and
sti
sub
ja
js
psrad
sub
scas
orps
push
sbb
mov
cwtl
add
mov
gs
adc
xor
into
jmp
adc
pop
fwait
cld
sbb
sarl
out
mov
sub
jns
call
inc
cmp
jmp
xchg
test
mov
sub
add
adc
loope
bound
xchg
cmpsb
add
inc
test
xchg
or
xor
push
stos
aaa
push
or
xor
dec
dec
or
lea
je
xchg
ljmp
xchg
fs
pop
icebp
add
imull
enter
mov
sbb
out
test
jge
into
sub
out
add
dec
sub
mov
jno
pop
int
inc
fmull
mov
xchg
jge
sbb
in
lcall
mov
pop
outsb
add
mov
adcb
sbb
lods
gs
or
cmc
push
movsb
clc
andb
jnp
sub
xchg
pop
cmp
xchg
push
clc
jle
and
ret
cmpb
mov
dec
sbb
das
add
enter
mov
mov
xchg
xor
data16
sub
mov
gs
dec
ret
imul
and
ss
dec
push
mov
fsubrl
add
xchg
sub
das
out
jnp
xor
ret
jecxz
pop
mov
ljmp
push
loopne
xor
cmp
and
and
mov
push
stos
and
js
push
testb
cs
pop
mov
dec
add
add
xor
inc
sbb
mov
mov
rclb
das
lods
fildll
int3
jle
xchg
sar
fadds
push
cmc
mov
push
fbstp
xor
shrb
and
mov
aad
repz
inc
and
test
mov
jg
pop
mov
movsl
mov
cmp
pushf
cmp
test
inc
push
lcall
push
jae
dec
cld
add
sbb
push
jb
aaa
mov
push
jmp
lea
orl
sub
fmull
pop
xchg
and
jecxz
scas
out
imul
xchg
inc
jg
imulb
sti
in
jae
mov
jae
push
decb
daa
mov
orl
pop
enter
xor
adc
sub
inc
int3
xor
or
inc
push
jecxz
sub
add
cmpsl
mov
je
addl
sub
bound
sub
mov
int3
push
mov
sarb
dec
mov
shll
rcll
jmp
enter
cmp
rolb
pop
cmpsb
xchg
mov
mov
add
xchg
xlat
sub
cmp
es
and
sti
adc
je
sbb
xor
les
das
mov
scas
je
ja
mov
popf
mov
push
iret
in
pop
xchg
add
lahf
test
mov
fisubrs
adc
les
and
in
xchg
xchg
jge
rorl
xchg
mov
mov
jnp
movsl
imul
ja
lods
jmp
add
ds
xor
stc
popf
enter
pop
mov
int
sbb
mov
sti
mov
push
or
std
mov
xchg
xchg
push
lods
xchg
pop
insl
inc
fwait
ret
lock
push
mov
daa
pusha
adc
shlb
mov
inc
jns
aad
insb
xchg
imul
pop
cltd
inc
lock
rclb
sub
into
push
xchg
jb
jmp
lea
xchg
out
dec
mov
push
int
xchg
or
push
stos
jge
fimuls
sbb
mov
fcomps
ja
js
and
mov
addl
sub
ret
cmp
adc
scas
and
data16
data16
or
mov
jge
arpl
pop
mov
mov
icebp
mov
lcall
scas
lock
sub
ja
dec
push
gs
pop
test
inc
into
mov
pop
lcall
mull
pop
repz
adcl
add
stc
jno
lcall
iret
xor
push
sahf
adcl
jle
adc
clc
pop
das
ja
add
push
jle
xlat
insb
lds
sub
cmp
es
cld
cmpsl
mov
or
loop
movsl
mov
sti
xor
mov
test
push
jge
cmp
pop
dec
fstl
and
lods
pop
inc
incb
cmpsb
push
adc
sbb
out
jmp
cli
insb
xchg
jb
push
dec
clc
xchg
hlt
sbbl
sub
lds
mov
and
pop
xor
dec
cmp
jns
sbb
cltd
dec
inc
inc
daa
ror
imul
std
adc
push
cmpsl
mov
and
cwtl
imul
push
jns
ds
lods
jg
mov
mov
xor
clc
rclb
jge
iret
jb
xlat
fwait
fwait
rcr
mov
pusha
mov
lcall
sub
push
iret
pop
xor
adc
cmp
adc
lea
sbb
mov
mov
adc
dec
jo
addr16
mov
rorl
lds
sub
sbbb
hlt
jg
xchg
mov
std
aam
cmp
pop
ljmp
outsl
pop
int3
push
sbb
imul
ljmp
test
wrmsr
rcl
movsb
sub
repnz
push
fdivs
sbbl
outsb
aaa
out
xchg
cmp
fmulp
in
xchg
sbb
mov
aad
loopne
jmp
jg
adc
dec
dec
mov
fwait
cld
cmp
lcall
scas
xorl
fdiv
fs
fs
or
push
push
cmp
dec
loop
stos
mov
pop
sub
xchg
lds
push
data16
fmull
ss
cmp
fidivrl
insb
and
or
fwait
jo
xor
out
xor
mov
rorb
popf
mov
enter
pushf
int
cmp
jmp
push
jp
xchg
add
loope
xorb
push
push
and
in
les
pop
mov
inc
ss
pop
pusha
push
jg
pop
mov
xchg
adc
jp
repz
test
dec
dec
addr16
jb
mov
out
sti
jmp
add
dec
cmp
leave
jge
cmpl
pop
adc
adcb
dec
stos
pop
out
notb
rdpmc
nop
lock
push
mov
insb
pop
pushf
mov
pop
test
push
pop
or
mov
dec
movsb
lret
jo
pop
mov
xchg
mov
or
mov
jbe
mov
lods
clc
jge
pusha
inc
dec
inc
idivb
or
nop
or
inc
loopne
mov
cmp
lahf
jp
mov
inc
sti
sub
inc
mov
adcb
std
lock
xchg
cmpsb
loopne
push
jmp
push
mov
addr16
shlb
xchg
cmp
push
jp
imul
mov
pop
das
push
sub
jo
fildll
pop
bound
test
sub
pushf
int3
call
addr16
sti
sbb
mov
aam
icebp
mov
adc
loop
mov
clc
mov
jge
or
dec
jne
aaa
push
outsb
inc
fcoml
pushfw
xchg
push
mov
stos
lret
subl
stos
lcall
xchg
mov
sub
pop
adc
pop
imull
addr16
stc
hlt
dec
pop
outsb
enter
xor
sarb
sub
out
jnp
xchg
inc
lcall
bound
sbb
xor
hlt
fldcw
stos
add
lret
lds
mov
jmp
in
mov
std
or
mov
push
cmp
in
mov
mov
push
jp
ds
mulb
or
mov
jp
js
loopne
ja
rcr
sub
sub
pushf
or
cmp
sub
mov
adc
pop
dec
das
jo
push
mov
mov
faddl
scas
in
lock
mov
test
and
cmp
dec
clc
les
jl
push
inc
lods
loopne
test
jae
scas
mov
loop
scas
movsl
add
or
pop
sub
in
mov
xchg
and
pop
inc
lods
fs
jge
leave
inc
insl
div
inc
xchg
jmp
xchg
dec
cmp
adc
mov
repnz
je
mov
mov
jle
push
int3
outsb
push
and
mov
imul
push
test
inc
jp
sub
cmp
sub
out
or
hlt
ljmp
or
mov
outsb
inc
out
pop
xchg
cwtl
subl
stc
xchg
adc
lea
out
push
or
push
xor
sbb
mov
jno
cs
filds
in
daa
lahf
inc
jl
in
inc
sbbl
ds
sub
iret
add
push
dec
rcrb
int3
clc
into
dec
rolb
cmp
sub
mov
lods
gs
in
ljmp
xchg
lods
xor
dec
cmp
ja
ljmp
and
inc
inc
push
repz
mov
cmpsl
mov
adc
movsb
inc
test
jp
test
push
or
outsb
stos
dec
lahf
stos
leave
and
sbb
sub
jno
lret
scas
push
jo
popa
jmp
xchg
cwtl
loope
push
mov
adc
insb
fdivl
cltd
lahf
and
mov
ss
cltd
jl
inc
pop
sub
mov
and
mov
pusha
dec
push
aaa
fdivrs
cmpsb
xchg
mov
push
mov
int
jg
dec
pop
fstpt
pop
or
subl
jne
mov
rorl
mov
aaa
jo
lods
pop
pop
or
int3
mov
out
lock
push
lret
cli
sbb
roll
dec
and
xchg
mov
pop
fildl
dec
lds
ret
inc
xor
cs
ret
iret
test
int
jle
adc
aaa
test
mov
sbb
sbb
inc
mov
or
cli
call
jp
fdivl
leave
pop
out
lahf
popa
mov
lret
mov
in
xor
push
int
test
pop
xor
push
xor
ds
loop
sub
repnz
cmp
jecxz
lds
pusha
jns
aas
ljmp
into
inc
jecxz
and
jnp
add
mov
xor
sbb
sub
cs
repz
shlb
imul
in
mov
daa
loope
mov
das
test
or
adc
ret
cs
or
mov
jmp
repz
xchg
out
aas
icebp
and
inc
mov
push
cmp
cld
or
insl
test
fdivl
lcall
bound
mov
sub
xchg
lds
adc
arpl
in
outsl
int
sbb
cltd
or
sbbl
movsl
sbb
ljmp
roll
mov
sub
sub
sub
or
push
gs
inc
aaa
push
sub
jmp
jne
fwait
cli
pop
sarb
cmp
pop
test
dec
mov
jnp
rorb
nop
xor
lods
flds
mov
xor
movsl
mov
cmpsb
pop
and
ret
jne
ds
xlat
dec
or
sbb
sub
nop
mov
clc
out
push
and
out
adc
stos
xor
loope
inc
fidivs
das
ret
or
xchg
xor
cmp
mov
cmp
push
rcl
adc
cltd
cltd
adc
mov
loopne
icebp
fadds
push
lods
jb
int
shlb
ret
and
pop
fcmovne
imul
dec
add
daa
mov
fs
push
add
jp
in
std
jb
pop
sub
icebp
lret
daa
dec
fsubs
lds
mov
or
jp
shlb
fisttpll
xchg
xor
jecxz
test
inc
and
dec
arpl
xor
dec
ja
xor
add
cmp
mov
ljmp
pushf
pop
push
stc
sarl
mov
mov
jmp
shlb
shrl
test
adc
push
mov
inc
lea
inc
mov
xchg
mov
sahf
je
ljmp
add
xorb
fdiv
mov
push
mov
sbb
or
and
mov
add
inc
push
xchg
mov
icebp
cmp
data16
mov
jnp
inc
cmp
hlt
ret
dec
mov
icebp
cmp
movups
sbb
lds
imul
je
lret
pusha
fwait
add
stos
insb
push
jb
pop
pop
lea
in
testb
mov
pop
xlat
mov
into
ss
ret
outsb
insl
adc
fdivrs
cltd
xor
faddl
lock
mov
adc
fnsave
adc
imul
popa
ret
sub
iret
mov
jp
jb
xchg
push
das
aaa
mov
sbb
fnstenv
push
fisubl
jo
fildl
push
int
scas
cmp
stos
pop
add
hlt
xor
adc
outsb
lret
mov
jge
test
xchg
and
data16
xchg
adc
fmulp
out
test
shl
xchg
clc
sub
add
add
jnp
sarl
test
test
and
cmpsb
into
xor
shr
loopne
lea
cmc
into
shll
mov
inc
mov
jb
xor
mov
pushf
inc
xor
jle
pushf
cwtl
pop
or
mov
sahf
mov
fwait
mov
fdiv
movsl
pop
push
lcall
push
inc
jle
lcall
cmp
mov
jmp
add
pop
lods
and
sub
xor
xor
jae
jne
addl
stos
push
dec
andb
hlt
xchg
push
mov
mov
scas
fdivrl
mov
push
push
push
xor
sbb
cmp
lods
cmc
hlt
jmp
repnz
mov
or
pushf
bnd
roll
add
ss
insl
or
mov
shlb
fsubrl
scas
mov
in
jb
jecxz
stos
repz
ljmp
dec
xorl
js
popa
pop
dec
mov
inc
pop
ret
pop
mov
push
sbb
icebp
cli
aas
adc
jbe
cltd
frstor
loope
and
out
dec
push
mov
mov
aam
push
test
icebp
addb
and
imul
cli
mov
mov
pop
add
add
mov
pop
cld
mov
das
pop
repz
mov
daa
adc
cmp
pop
push
push
jnp
sbb
aaa
ja,pn
mov
sbb
sbb
adc
sbb
sarb
mov
scas
in
scas
cmp
stos
sub
xor
syscall
mov
jl
cmp
push
push
push
lock
cs
mov
sbb
pop
mov
out
xchg
daa
cmp
arpl
imul
sahf
les
mov
cltd
movsl
jbe
out
cmp
cli
jb
sbb
mov
lea
xor
xchg
loopne
and
cmpsl
and
sub
out
test
addb
loop
pop
cmp
imul
xchg
adcb
shll
ljmp
divl
mull
sbb
fsubs
jb
jo
push
lcall
sub
in
pop
lods
popa
stos
mov
ret
push
push
shll
lret
push
int
cs
or
adc
add
mov
imul
sub
sbb
call
pop
cwtl
or
pop
loopne
mov
sub
lahf
imul
or
test
aaa
js
test
in
xor
lret
add
clc
adc
xchg
je
arpl
sbb
lret
test
outsl
cmp
test
cld
fstpt
test
ss
call
jns
loop
aam
fisubs
mov
push
or
out
stos
mov
sub
jle
lcall
or
dec
mov
push
insl
mov
ja
or
push
fists
pop
shlb
arpl
sti
jb
out
outsl
mov
jbe
lret
xor
mov
adcb
leave
cli
push
jle
or
ds
fmuls
jae
adc
jb
sub
fs
xchg
jp
fisubl
loopne
sbb
loope
jne
nop
iret
outsb
xor
xor
xchg
sarl
mov
jnp
mov
sub
popf
fistps
fstps
push
addb
mov
int3
int3
cmp
adc
cmp
xchg
mov
ret
mov
sbb
or
mov
aad
xchg
daa
sahf
mov
pop
xchg
mov
sub
fstps
push
dec
je
sub
es
ljmp
out
or
cmp
cmp
out
aam
xchg
push
in
js
mov
mov
and
or
jnp
cli
decl
or
ret
xchg
scas
sahf
int
mov
mov
jge
add
xchg
into
push
ficoms
pop
jno
popf
xchg
xor
pusha
ret
cmc
stos
push
dec
xchg
in
mov
insb
jns
and
repz
sub
ficoml
movsl
rcl
sbb
js
xlat
insb
stos
pusha
dec
fld
push
mov
cmc
jge
clc
dec
test
sbb
sbb
bnd
sub
push
rcrb
cmc
dec
pop
cmpsl
mov
gs
cmpsl
and
out
push
repz
adc
jno
test
cmpsb
ds
dec
stc
adcb
or
inc
push
ds
mov
stos
movsl
pop
lret
bound
in
sbb
mov
push
mov
scas
nop
in
test
push
insl
and
inc
pop
inc
jno
jle
sbbb
pop
and
nopl
pop
fs
xchg
andb
xlat
loopne
insb
jle
sub
into
cmp
sar
mul
out
lcall
addr16
test
stos
cmpb
cld
xchg
test
loop
pop
mov
sti
enter
mov
xchg
push
adc
cmp
test
mov
adc
jnp
sahf
xchg
test
adcl
shll
lahf
or
js
inc
and
arpl
jecxz
mov
lcall
mov
add
dec
decl
imul
mov
aad
xchg
cmp
outsb
sti
mov
push
inc
mov
cmc
fisubl
mov
xchg
jl
push
xchg
cmp
fs
or
cmp
gs
ror
int
cmp
or
or
outsl
shlb
dec
pop
lret
mov
outsb
pushf
lret
scas
pushf
push
push
lds
aaa
mov
cmp
xchg
inc
jnp
mov
xorl
popf
jns
stos
xor
out
cltd
xchg
adc
ret
aas
and
pushf
out
adcb
or
lods
mov
pop
mov
shrb
fwait
ljmp
adc
sub
xchg
test
in
xchg
inc
jb
dec
push
addr16
test
mov
leave
loopne
lods
sahf
in
mov
sub
pusha
incl
or
mov
jg
andl
bound
bnd
or
stc
mov
into
data16
neg
call
jge
push
xor
out
xchg
test
push
adc
jecxz
mov
cmp
pushf
addr16
sarl
gs
lcall
cmp
ret
lret
stos
subl
mov
push
data16
fwait
inc
mov
fsubr
xchg
arpl
incl
iret
pop
call
rorb
cmp
mov
je
outsb
aam
dec
gs
aad
xchg
stc
scas
sub
aam
movsl
lret
sbb
xlat
adc
aam
lcall
int
mov
xchg
jmp
dec
inc
dec
xchg
xor
cltd
mov
push
or
mov
xchg
mov
inc
test
dec
stc
roll
aaa
mov
sbb
dec
jle
mov
add
fs
sub
mov
loop
mov
dec
inc
out
inc
jnp
adc
aas
or
pop
aas
push
adc
sub
add
adc
mov
jle
shl
les
adc
mov
sub
lods
lret
jns
mov
cmp
lcall
loopne
les
cltd
loop
xchg
test
hlt
inc
mov
mov
scas
dec
fwait
aaa
jbe
hlt
ss
inc
lret
insl
adc
cmc
lret
aad
gs
add
movsb
pop
adc
pop
roll
shll
and
pop
pop
push
inc
test
neg
mov
dec
mov
int
xor
or
pop
xor
test
mov
push
fwait
shl
mov
lock
neg
jecxz
jo
loopne
fnstenv
pop
dec
cltd
add
das
cs
sbb
sub
aas
mov
jnp
cld
xchg
or
add
jo
push
mov
rcll
popf
pop
adc
add
test
add
imul
mov
cmp
and
pop
lcall
inc
test
pop
push
push
mov
sub
mul
cmpsl
push
in
std
push
pushaw
bound
or
jo
sub
outsl
xchg
sahf
add
inc
loopne
not
iret
adc
push
mov
fsubrs
sub
test
pop
loopne
push
mov
adc
bound
mov
hlt
sahf
aam
addr16
cmp
sub
enter
pop
fs
and
sbb
mov
mov
ret
and
xchg
ret
sub
les
cmc
loope
daa
sub
inc
in
inc
out
lds
or
xchg
sbb
jge
jge
inc
and
jnp
or
out
iret
lods
stos
jae
iret
jp
dec
sbb
sub
outsl
sub
gs
mov
inc
mov
or
dec
test
xchg
cmpb
xor
insb
mov
arpl
and
sbb
sti
jmp
sub
mov
jne
mov
fildl
jns
inc
std
insb
idivb
decb
lcall
xor
xchg
mov
insl
push
push
mov
add
iret
xor
mov
inc
push
adc
lcall
out
pop
pop
mov
js
cli
cld
adc
and
jb
pusha
adc
add
mov
ja
cmc
nop
adc
repnz
leave
adc
insl
nop
adc
xor
sub
int
jp
push
leave
dec
testl
cmp
mov
mov
adc
dec
enter
test
rcrl
sub
ljmp
mov
popf
adc
dec
jmp
push
test
pop
mov
lahf
sub
cmc
icebp
negl
aas
outsb
cld
xor
xor
pop
jg
cmp
jge
xor
mov
lods
jle
cltd
imul
lds
sub
add
je
in
and
out
push
call
adc
int3
add
nop
push
jge
es
pop
mov
sub
ret
and
loopne
sub
movsl
js
xchg
mov
bound
xchg
xor
mov
aam
out
pushl
fmull
cmp
add
ljmp
out
lcall
sbb
inc
push
adc
mov
rorl
movsb
inc
add
ret
mov
hlt
xchg
enter
addb
sbb
jns
pop
mulb
mov
bnd
call
inc
call
aad
in
outsl
mov
aas
jbe
aam
sbb
mov
push
sti
mov
jo
loopne
sub
in
xchg
mov
pusha
mov
xor
dec
inc
pop
into
movsb
and
cmp
shl
gs
sbb
mov
shlb
lea
pop
test
xor
pop
adc
jmp
dec
rorl
sub
cwtl
loopne
jbe
mov
stc
lods
mov
mov
aas
notb
pop
inc
out
adc
jmp
and
push
cs
arpl
cmp
in
out
mov
sbb
inc
add
sbb
mov
stc
repnz
mov
orl
testl
cmp
out
inc
dec
xor
out
cmp
pusha
mov
dec
ret
inc
jp
add
pop
xchg
adc
in
add
push
cmp
push
js
adc
aam
dec
or
outsl
imul
add
cmp
xchg
out
jle
gs
xchg
jae
notl
dec
les
out
inc
mov
cmp
fs
cs
or
mov
pop
mov
cmpl
xor
fdivs
add
cmpsb
inc
pushf
mov
shll
aaa
loope
fisubrs
orl
data16
loope
fmulp
mul
iret
ss
imul
push
roll
jmp
cs
shrb
js
adc
imul
or
lahf
push
fs
mov
int3
dec
sub
dec
xorb
ja
and
fldenv
scas
sti
pop
cmp
rcrl
ja
adc
jmp
add
sbb
mov
ja
lret
mov
repz
sub
fbld
loop
xorl
jno
out
fnstsw
loope
daa
push
fldcw
jne
adcb
popf
cli
sahf
clc
xchg
cvtpi2ps
dec
or
insl
push
cmp
lods
xor
fcoms
add
int3
stos
fs
mov
sub
add
push
cmp
out
dec
jae
mov
inc
jg
xchg
pop
mov
mov
std
scas
outsl
rorb
cmc
or
cmpsl
lret
jg
stos
fsub
mov
mov
mov
mov
cmc
cli
outsb
jno
inc
cmpb
and
rcll
aad
nop
das
cmp
fidivs
or
jge
pop
xor
cmpb
sbb
mov
fmuls
in
outsb
or
pop
sti
mov
pop
out
repz
out
mov
jmp
jg
sub
movsb
jno
jle
mov
daa
sub
pop
and
or
daa
push
xor
mov
push
adc
mov
adc
movsb
ret
sti
aaa
test
aaa
xchg
imul
lret
lods
sbb
mov
cmp
cmp
xor
dec
fisttps
into
and
in
outsb
insl
push
sub
cli
and
adc
pusha
icebp
mov
mov
cmp
nop
stc
ret
pop
js
cmpsl
lret
pop
pop
loopne
daa
xchg
inc
jmp
dec
mov
loopne
sbb
into
test
jge
jmp
jnp
test
stos
int3
rorl
jno
push
xor
lock
push
dec
pop
mov
sub
mov
push
lcall
dec
daa
cmp
mov
mov
sbb
jo
or
add
and
neg
jbe
mov
or
push
add
loope
test
ja
jecxz
repnz
daa
lea
or
fcom
aaa
idivb
xchg
pop
xchg
repz
loop
rolb
lret
mov
dec
pop
sub
stos
das
xchg
xchg
xchg
lret
jmp
stc
pop
pusha
fstl
les
jno
out
test
pop
insb
inc
sti
enter
out
fadds
adc
xchg
inc
aas
movsb
add
std
jno
sbbl
mov
add
cmp
pop
inc
loop
sub
pop
daa
xor
in
mov
fsubrs
nop
push
rol
sbb
lock
push
mov
fstpt
jb
mov
sbb
mov
fcmovnbe
in
addr16
adc
aas
dec
and
ret
push
and
pop
adc
es
dec
rol
dec
out
push
movsb
jnp
pop
xchg
shll
rclb
arpl
es
push
fsub
fnstsw
mov
xchg
mov
mov
imul
or
nop
test
push
mov
fwait
cmpsb
push
mov
das
jno
je
in
or
jl
pop
and
mov
insb
addr16
cmp
sub
stos
outsl
loopne
mov
dec
fucomi
pop
inc
lock
in
mov
andl
dec
sar
cli
mov
cmpsl
cmp
shll
cs
jl
mov
mov
das
in
les
pop
inc
mov
push
mov
jne
adc
jecxz
out
xor
fdivrs
and
movsb
xor
stos
or
mov
ja
sbb
mov
inc
add
mov
aam
xchg
int
pop
clc
andb
mov
xchg
mov
jl
pop
mov
pusha
sub
xchg
lods
ljmp
leave
sub
out
pop
xchg
mov
outsl
imulb
lcall
push
xor
sub
and
pop
movsl
push
popa
xor
or
adc
ljmp
cmp
mov
push
fwait
mov
push
push
jo
adc
cmp
fidivs
test
mov
into
cld
cmp
ret
icebp
pop
mov
shll
sahf
sub
inc
sysexit
mov
xor
push
lds
xchg
xor
std
push
in
sub
clc
js
xchg
jge
mov
mov
lret
into
sbb
and
lock
xchg
movsl
test
dec
lea
movsb
adc
stc
ret
push
loope
pusha
pushf
scas
lds
xor
mov
orl
cld
hlt
std
fs
jo
popf
push
xchg
call
mov
xchg
mov
xchg
push
or
mov
xchg
push
fadd
sbb
lcall
movsl
mov
pop
sbbl
mov
or
mov
imul
fdivs
pop
imul
pop
or
cmp
push
popf
sbbl
sub
adc
pop
es
ret
dec
scas
divl
sub
pop
jl
jge
insl
cmp
cmp
pop
jno
clc
frstor
inc
jne
cmp
sub
jne
fidivl
cmp
fwait
inc
imul
ds
lods
push
lahf
inc
jmp
or
call
dec
outsb
mov
cli
lcall
cmp
addr16
xor
pushf
mov
cmp
mov
cmp
fcom
aaa
cmc
cmp
xchg
or
push
addl
add
xchg
nop
or
xor
shrl
sahf
push
adc
testl
data16
sub
out
xlat
sub
jmp
or
push
push
lods
sbb
aaa
xchg
iret
gs
pop
orl
fistpll
loopne
lahf
push
les
mov
stc
mov
test
lods
stos
addr16
std
bound
push
push
in
jg
adc
xlat
insl
rcrl
cltd
sbb
movsb
roll
sbb
xor
push
mov
sub
push
std
loop
int
push
or
fisubs
leave
bound
jns
jne
mov
pop
and
jbe
push
iret
mov
fimull
loopne
push
pop
or
mov
xor
add
popa
aaa
or
fdiv
lret
stos
aas
les
int3
xlat
out
mov
adc
jb
mov
pop
pushl
stos
fadds
es
shrl
les
in
pop
sub
and
pop
inc
fnstenv
mov
pop
lock
popf
jo
adc
jl
sbb
jnp
sbbb
mov
mov
fs
dec
fwait
sahf
mov
pop
xchg
pop
imul
rorb
add
dec
lea
mov
push
gs
repz
xor
pop
mov
mov
sbb
fsub
lahf
shlb
add
push
sbb
pop
xlat
inc
leave
iret
leave
xchg
mov
insb
lahf
daa
cmpsb
push
sbb
stos
enter
addr16
testb
lret
jno
imul
fists
movsb
js
mov
fs
lret
push
cmp
mov
stos
sub
mov
pop
sbb
out
sbb
scas
mov
rep
das
inc
ja
stos
xor
fsub
xchg
lock
and
js
repnz
rcll
imul
fstpl
je
mov
lahf
adcl
pop
in
out
leave
push
daa
movsl
adc
enter
pop
repz
lret
xor
sub
arpl
dec
inc
testb
dec
icebp
sub
push
scas
sub
sub
xor
cmpsl
sub
cli
jmp
setge
push
pop
in
testb
jl
sbb
imul
sahf
faddl
xchg
cmpsb
mov
sarl
fs
xor
popa
mov
xor
and
push
push
stc
cmpsl
pop
sbb
arpl
loopne
cmp
pop
stc
pop
xlat
je
adc
add
push
mov
fiadds
xor
adc
xor
popf
int3
dec
mov
int3
cmp
cld
jl
les
fbstp
xlat
push
pop
sbb
xchg
and
call
stc
mov
std
sarl
jae
jns
inc
xchg
insl
xor
leave
lea
push
sbb
inc
mov
sub
aas
rcrl
xor
addr16
jecxz
fidivrl
ret
cmp
pusha
sbb
sub
les
into
cmpb
lcall
pushf
xor
lock
outsb
out
iret
or
jp
jmp
aam
daa
mov
sbbl
sbb
cmp
mov
pushf
aad
adc
dec
push
stc
or
fsubrl
jle
pop
aam
sahf
dec
mov
push
mov
jl
or
into
rcrb
mov
sub
les
push
pop
xor
cmp
and
mov
pop
dec
fwait
adcb
movsb
mov
lcall
push
stos
adc
cmp
dec
or
cmp
push
nop
mov
inc
inc
xchg
push
add
std
out
and
repnz
addr16
cmc
rol
mov
or
ret
mov
sti
idiv
dec
imul
mov
fstp
inc
loop
pop
pop
add
mov
or
icebp
push
pop
push
push
or
daa
mov
lea
add
inc
push
or
add
jl
xchg
jg
inc
test
xchg
jge
scas
jl
jns
call
into
adc
shl
subb
leave
lods
sbb
pusha
in
popa
fistps
popa
xchg
lock
cwtl
sahf
out
nop
mov
push
xor
fisttpl
xor
xchg
insb
mov
mov
idivl
inc
dec
mov
imul
js
xor
lret
fmul
mov
dec
das
mov
push
sub
mov
and
loop
mov
rclb
and
sbbb
adc
ds
into
mov
mov
setns
jne
push
and
loop
in
and
mov
test
subb
iret
push
jmp
ja
ds
sub
inc
out
sub
pop
movsl
imul
and
inc
ds
stos
aam
xor
call
mov
subb
or
sub
test
test
arpl
fnstenv
mov
repz
ja
mov
mov
push
sub
mov
sub
in
in
std
nop
pop
push
mov
shlb
loopne
shl
in
insl
mov
ss
cmp
aam
mov
dec
mov
test
push
ret
lods
ljmp
mov
in
imul
mov
fisubrs
insl
push
ficompl
mov
dec
ss
adc
gs
daa
mov
inc
das
push
mov
clc
icebp
cltd
in
sub
loopne
pop
jbe
jle
push
inc
mov
jae
out
dec
pop
aas
or
push
std
jo
mov
imul
stos
ljmp
jbe
add
pop
icebp
inc
inc
testl
or
mov
in
iret
adc
cmpsl
cld
pop
and
movsb
div
mov
dec
repz
daa
xchg
mov
xchg
mov
lods
sbbb
add
push
subl
push
and
sbb
adc
cmc
addr16
movsl
mov
imul
pop
mov
xor
pop
in
loopne
jb
sbb
arpl
clc
and
mov
ss
scas
outsl
push
hlt
subl
nop
mov
cwtl
int
cmp
cmpsb
stos
inc
outsb
pusha
jl
insl
xchg
cmpsb
sub
dec
sub
bound
lcall
nop
mov
and
dec
nop
enter
cmp
icebp
sub
add
loopne
outsb
inc
pushf
in
push
push
movsbl
push
xchg
pushf
in
mov
sbb
add
es
clc
fistpl
movsl
cmp
push
test
jns
daa
sub
adc
outsb
std
jp
lods
mov
das
inc
sub
cmp
xor
sbb
xorb
mov
in
mov
inc
in
sahf
stos
jmp
aad
jae
jecxz
cmp
inc
xor
add
or
xchg
pop
cmpl
div
je
and
int
inc
cmp
scas
mov
dec
hlt
cmpsl
and
imul
mov
insb
xchg
sahf
jns
lcall
pop
sbb
mov
lret
lods
es
cwtl
decb
xchg
mov
repz
jp
test
cmpsl
rcr
adc
cmpsl
ss
push
or
push
and
adc
mov
pop
loopne
pop
jnp
mov
mov
sub
shll
push
and
rolb
xchg
sahf
popf
fwait
negb
pop
sub
loop
or
add
ror
mov
scas
and
mov
lds
dec
jmp
leave
add
dec
push
dec
out
rcrl
cmpsb
shll
int3
dec
xor
sub
stos
pavgw
mov
adc
xor
xor
test
pop
jp
adc
xchg
scas
sbb
arpl
mov
lret
push
add
sub
pop
hlt
inc
push
sub
xlat
mov
sti
dec
xchg
pop
andb
and
mov
push
or
push
ljmp
insl
popa
cmc
ja
out
mov
sub
out
adc
lods
sbb
insl
mov
cmpsb
into
pop
xchg
jo
hlt
ret
dec
pop
das
add
ljmp
adcb
iretw
jne
ret
xchg
lds
cmp
scas
push
inc
inc
sbbl
xor
repz
mov
or
scas
xchg
push
push
sub
xchg
sbb
push
sbb
pusha
inc
mov
lock
xchg
cmp
jge
testb
addb
push
jne
fnstcw
inc
rcrl
push
jnp
ret
int3
out
aad
or
mov
sbbl
lret
mov
cmc
jmp
and
dec
dec
ljmp
shll
mov
rclb
inc
dec
mov
pop
cmc
xor
out
pusha
popa
nop
sub
test
ret
das
ficomps
call
fdiv
mov
or
xor
test
cmc
in
cld
mov
xchg
fistps
test
cmpsb
push
in
pusha
jns
cs
cmp
data16
and
movsb
xchg
outsb
and
out
mov
cwtl
jp
adc
lea
xor
ficomps
gs
sub
sub
fidivrs
cmp
dec
lock
add
or
notb
or
xchg
out
out
push
cmp
mov
adc
stos
mov
add
rcll
pop
pop
jg
lret
cmpsl
ljmp
mov
fnsave
enter
and
cmc
lock
xor
loope
rcr
imul
imul
xor
push
jge
into
stc
stos
mov
or
outsb
sbb
pop
scas
std
jg
arpl
pop
pop
test
mov
repz
stos
dec
jo
and
mov
push
adc
cmp
lahf
push
mov
dec
les
xor
mov
push
add
fstl
add
add
and
dec
popf
pop
xor
inc
xor
sbb
sub
lahf
outsb
loop
push
inc
filds
inc
int3
fs
dec
daa
fs
aas
pop
mov
rcr
pop
mov
pop
test
cmpsb
vorps
das
movsl
mov
ja
sub
mov
push
dec
sahf
cmp
mov
mov
addb
and
and
xchg
adc
pop
enter
in
imul
icebp
js
cmp
pop
jae
mov
xchg
ret
jns
pop
add
mov
rcrb
xor
jmp
or
call
subb
mov
xchg
and
int
pop
pop
xchg
rcrl
pop
repnz
cmp
loop
cmpsb
xor
cs
dec
cmc
insb
popa
sub
movsb
xchg
or
repz
xlat
jno
lods
adc
adc
mov
hlt
and
dec
ljmp
mov
and
push
xchg
dec
cmp
xor
int3
jae
bound
inc
mov
data16
mov
lret
aad
pop
cltd
mov
sbb
sarb
push
clc
popf
nop
lea
pop
mov
push
pop
push
shlb
jmp
imul
negl
mov
jmp
in
fdivl
dec
xchg
inc
xchg
mov
sub
fs
repz
aam
lret
je
testb
or
js
popf
pusha
pop
cmovb
popf
jno
jnp
ljmp
test
in
enter
fdivrl
je
ljmp
cmp
mov
push
dec
gs
xchg
mov
and
movsl
inc
movsb
sbb
testb
push
ja
mov
out
mov
es
test
jb
out
dec
std
scas
inc
cmpsb
rorb
fnstsw
les
in
popa
ss
dec
lock
sub
push
or
xchg
xor
xor
or
dec
jb
lret
push
shrb
aas
outsb
cwtl
outsl
cmpsl
pop
popa
sbb
divl
incl
mov
xchg
mov
add
push
std
xor
insb
pop
jae
sub
fldl
lods
inc
out
inc
mov
pop
push
out
add
cltd
stc
dec
push
addr16
in
mov
mov
cmpsl
cs
mov
pushf
push
mov
jge
mov
daa
mov
push
fcoml
aad
jb
push
sbb
add
pop
dec
adc
push
iret
movsb
outsb
addr16
outsl
cmp
mov
sbb
or
retw
jl
mov
movsb
std
inc
scas
sub
sbb
and
mov
xor
xor
jmp
iret
lret
daa
jp
bound
push
push
pop
out
movsl
ljmp
or
jecxz
xor
xchg
cmc
insb
or
cltd
js
cmp
xchg
shrb
lods
subb
jbe
hlt
aas
in
pop
push
push
mov
mov
sub
in
cmp
xchg
cmp
test
jo
push
decl
mov
push
pop
push
ret
sbbb
jl
xchg
dec
and
inc
sbb
pushf
xchg
jmp
pusha
add
cmpsl
mov
js
xchg
movsl
mov
inc
test
loop
rorl
mov
mov
mov
jno
dec
push
aam
adc
dec
lahf
or
inc
adc
cmpb
xor
rorl
popf
mov
dec
add
jecxz
jg
sub
cmp
std
sahf
cmp
lds
sbb
lods
es
inc
mov
inc
sbb
mov
dec
sbb
mov
inc
sub
inc
pop
iret
jns
jae
in
pop
and
imul
xlat
lea
xchg
push
repz
inc
jmp
jecxz
dec
popf
aad
nop
inc
and
subl
sahf
lods
pop
rclb
add
xchg
add
xor
push
adc
mov
push
fisubs
lret
shl
xor
es
jbe
ret
popa
pushf
dec
mov
sahf
mov
js
insb
jmp
scas
sub
daa
push
mov
mov
adcl
stos
faddl
lea
imul
push
mov
cmpsb
adc
inc
mov
inc
mov
scas
ljmp
pop
outsl
adc
mov
ret
or
cmp
or
jmp
cld
fists
push
add
xchg
andb
outsl
call
inc
clc
cmp
add
mov
aaa
and
clc
movsb
scas
aam
xor
js
pusha
sub
pop
dec
pop
mov
mov
std
test
mov
test
rcrb
sti
push
out
mov
pop
rcll
xor
lret
jg
pop
ds
icebp
out
rolb
addr16
sbb
push
pop
bound
jnp
pop
push
sti
outsb
cli
mov
or
mov
addr16
pop
sbb
fisubrl
hlt
inc
mov
mov
add
out
or
inc
lret
fwait
notb
bound
mov
call
sti
jbe
pop
adc
xchg
or
data16
jmp
scas
mov
xor
inc
test
int3
mov
shll
add
xor
mov
add
rcl
xchg
xor
and
insl
and
or
fisubl
jp
xchg
mov
mov
jnp
ds
and
rclb
pushf
dec
adc
xor
adc
jno
sub
sub
jo
loop
out
shrl
fstpt
push
subb
dec
mov
fistps
xchg
xor
xchg
aad
stos
jbe
and
loopne
sti
cs
repnz
xchg
leave
pop
jnp
arpl
sub
xor
pop
jl
and
pop
pop
or
in
mov
ss
ss
fcoms
mov
addr16
mov
stc
repz
fwait
scas
xchg
mov
in
push
mov
or
out
xor
call
pop
out
xor
daa
movsb
xchg
sub
jo
xchg
add
in
mov
add
out
in
fcmove
hlt
stos
aaa
or
addb
add
enter
shll
insl
lret
fistpll
inc
outsb
ret
sub
add
fcmovbe
clc
inc
sar
add
imul
or
pop
dec
lret
lret
scas
pop
xchg
aaa
xor
aas
mov
xor
dec
xchg
ds
es
pop
nop
jg
orl
int3
push
shr
add
cwtl
jb
lods
jae
pop
push
cmpsl
cmp
mov
adc
jne
mov
sbb
jo
cwtl
test
mov
test
mov
cld
jnp
or
out
out
mov
dec
xchg
test
pop
inc
push
xorb
in
addl
lcall
into
js
jmp
cli
roll
xchg
pop
jae
inc
and
das
lahf
sub
subb
mov
rep
out
and
sub
cld
scas
sti
and
sub
mov
push
scas
sti
lret
jnp
push
loopne
movsl
push
insb
jmp
popa
pop
inc
cmp
mov
lods
xchg
mov
mov
dec
and
mov
into
or
sbb
out
pop
aad
cmp
pop
aad
mov
fnstsw
mov
cmp
mov
add
shrb
pop
out
adc
loopne
mov
aad
icebp
add
repnz
mull
pop
fistps
fidivrs
packssdw
lods
cmc
pusha
cli
addr16
adc
int3
mov
nop
cmp
das
xor
jno
aad
sahf
xchg
push
test
xor
and
jbe
and
cmp
in
jns
jo
sub
cli
icebp
orl
test
push
pop
insb
mov
push
mov
lret
test
fmul
push
gs
inc
mov
or
push
into
cmp
add
and
xor
jle
pop
xor
jne
xlat
push
xchg
dec
pop
mov
xor
out
pop
lret
sbb
ret
andl
pop
xor
stc
rolb
loopne
pop
cmpsb
in
ret
incb
fcmovnbe
insb
je
test
outsb
mov
push
mov
fnstsw
into
jle
out
pop
cli
xchg
mov
aas
in
jno
and
mov
pop
cltd
das
and
scas
loope
or
and
inc
xchg
sbb
outsb
lcall
pop
pop
push
push
ja
jp
addr16
mov
lea
cmp
out
pop
sbb
or
push
adc
in
mov
xchg
jmp
es
sahf
mov
mov
in
fninit
and
mov
mov
mov
test
xchg
cmpsb
or
rolb
push
xor
roll
and
cmp
aad
pusha
push
scas
jmp
dec
jnp
mov
add
and
fldt
cld
lret
inc
ret
outsl
aad
rolb
outsb
adc
shrb
sbb
in
and
sahf
jb
gs
int
aad
lock
sub
cmp
inc
fisubl
xchg
movsl
cwtl
nop
in
pop
icebp
mov
lahf
jnp
int3
inc
sarb
icebp
aad
aaa
cmpsl
adc
mov
insl
loopne
fcmovnb
jl
ret
mov
or
aam
shll
mov
stc
push
push
out
shlb
mov
pushf
mov
or
sahf
or
sbb
xchg
imul
pop
inc
push
nop
sbb
movsl
shrl
aad
out
ret
and
inc
mov
scas
mov
in
test
dec
and
push
mov
xchg
out
enter
push
mov
cltd
leave
int3
jbe
lret
xchg
adc
cmp
mov
fsubrl
push
lahf
negb
xchg
xlat
inc
insl
mov
mov
xlat
sub
jmp
jp
rol
dec
push
sub
xlat
mov
pop
inc
sub
jl
pop
cmpsl
jnp
pop
movsl
push
mov
pop
std
repz
cmp
aas
inc
loop
xchg
rcll
and
loop
ljmp
shlb
and
inc
in
mov
and
cld
pop
inc
push
lahf
push
xchg
rorl
nop
jo
adc
push
je
push
push
mov
out
or
cmp
test
sbb
aad
addr16
or
loope
pop
jmp
xor
dec
jmp
cmc
cltd
fdivrp
mov
dec
sbbl
add
out
out
loop
icebp
loopne
mov
sti
pop
push
cmp
in
cmpsl
jmp
out
jae
inc
jo
test
fisttps
sbb
inc
popl
or
cmpsl
pand
es
and
fnstcw
sub
or
push
or
cmpb
dec
lret
call
mov
fcoms
ss
xchg
mov
sbb
adc
sti
into
jge
ds
lret
lahf
ror
int
mov
dec
enter
fisttps
jmp
pop
or
and
mov
std
xor
leave
cmp
cmp
lock
testb
push
dec
test
add
pop
jno
sbb
sbbb
aad
stc
dec
xor
jle
mov
jns
mov
xorb
inc
adc
push
and
or
cmpsl
inc
test
imul
notb
pop
flds
or
cmpsb
sbb
cmc
or
aas
mov
inc
ljmp
and
xor
pop
xor
push
in
rolb
jae
jne
mov
ror
inc
or
cmc
mov
cmp
or
or
add
pop
or
in
inc
fdiv
and
xchg
inc
or
lock
ljmp
xor
leave
dec
pop
cmp
push
mov
inc
jbe
dec
xchg
dec
test
mov
and
data16
ds
mov
flds
and
movsb
jecxz
adc
enter
sub
xor
iret
push
roll
test
in
fbstp
mov
mov
pop
movsl
pop
mov
sub
and
js
jb
out
add
cmp
mov
xchg
push
xchg
loop
ret
mov
push
movsb
icebp
mov
loop
or
lcall
jmp
scas
movsl
adc
cli
shl
ret
and
mov
and
popf
dec
aam
cmpsl
lock
push
push
add
shlb
xchg
cli
rcrb
insb
mov
add
mov
lcall
cmc
cli
ja
inc
stos
in
mov
aam
lock
out
xlat
push
decl
outsb
xchg
shlb
adc
pop
mov
aam
xor
leave
mov
xor
cmpb
shll
rolb
mov
inc
xchg
pop
push
mov
inc
imul
lahf
mov
push
aam
jp
loopne
roll
aam
ss
xor
lods
les
scas
xchg
int
pop
inc
icebp
mov
and
pop
mov
lret
std
mov
sbb
add
loop
mov
cmc
and
jae
adc
xor
movsb
push
lods
push
mov
mov
lods
enter
shll
testl
sub
je
rcl
cli
xchg
jmp
adc
call
frstor
mov
out
fistpl
es
int3
pusha
sbb
xor
mov
mov
mov
fidivl
mov
sub
xchg
out
insb
in
xor
xlat
movsl
aaa
jo
mov
push
filds
cmpb
outsl
mov
mov
lea
push
vrcpss
inc
push
addb
jecxz
jb
mov
xchg
int
fmuls
mov
cmpsl
jle
sbb
leave
or
pop
test
dec
sahf
cli
inc
loope
inc
sub
cmp
mov
adc
pop
adc
aad
or
push
pop
add
call
lods
sub
in
xor
insb
jae
ret
adcb
shl
in
cmp
add
repz
and
fnstsw
push
mov
jle
push
xchg
sub
jnp
add
jno
lcall
aas
sub
imul
mov
pop
cmp
ss
lock
fbstp
fsubrs
adc
cmp
mov
mov
sub
data16
cmc
sub
xor
cmp
cltd
imul
push
call
int
pop
and
fcmovb
les
cltd
push
iret
inc
push
add
lds
xchg
mov
inc
es
cmp
add
push
pop
out
push
cli
cmpsl
data16
cmpsb
repnz
in
sub
lock
or
bound
xor
fidivs
sub
xorb
and
pushf
lock
insl
cld
ja
dec
repnz
push
xor
rorb
jge
adc
add
push
jl
mov
pop
and
sub
mov
push
push
xor
movsl
pop
lods
jbe
xchg
movsb
inc
cli
insb
test
jne
xchg
sbb
cmp
inc
or
outsb
jmp
xor
in
fucom
cmp
addl
sbb
and
test
ds
adc
fwait
shr
add
cs
cmpl
out
lcall
dec
inc
sub
dec
and
push
ljmp
pop
data16
and
pusha
cli
es
lret
push
add
test
fisttpll
dec
jg
and
cltd
mov
lods
mov
sub
pop
or
sar
or
in
dec
mov
sub
es
xor
imul
adc
popf
mov
inc
les
rorb
add
lahf
cmp
mov
mov
xor
data16
push
fists
out
fists
jmp
cltd
stos
fcmovnbe
lret
mov
fwait
mov
and
and
es
add
jp
test
and
fs
fldcw
mov
popa
mov
lea
rcrl
aad
outsb
mov
repnz
nopl
test
mov
xchg
push
loopne
mov
adc
adc
adc
sub
mov
addr16
mov
pop
aaa
mov
jl
loopne,pn
fwait
lds
push
pop
mov
lds
or
pop
inc
sar
add
popa
jecxz
xor
and
mov
notl
pop
adc
and
sub
pop
iret
hlt
sub
mov
loop
sahf
jbe
dec
dec
sahf
insb
jne
mov
mov
std
sbb
in
add
adc
dec
mov
test
push
xor
sub
insl
dec
dec
es
out
arpl
cmp
pop
leave
mov
push
fcompl
dec
jne
mov
cmpsl
lods
jl
pop
stos
rorl
lock
adc
and
adc
inc
jl
push
ror
push
xchg
in
jl
lret
jge
test
out
cmpsl
adc
jmp
lods
mov
push
xorb
mov
sub
int
lcall
ret
es
sbb
xlat
adc
cltd
lahf
xchg
mov
imul
rorl
das
sub
cmp
add
in
dec
mov
inc
fists
mov
movsl
dec
mov
xor
cld
sbb
scas
fdivrl
and
sub
inc
push
loope
and
ja
or
repz
inc
shlb
jl
jecxz
das
icebp
mov
or
sbb
pushf
ds
dec
and
mov
lret
sbb
add
xchg
add
cmp
or
and
or
lock
xchg
in
call
test
lret
ret
lea
push
andl
push
fcom
ljmp
jmp
push
into
xchg
in
sub
dec
xchg
ret
arpl
lret
xchg
int
sti
mulps
push
xchg
arpl
push
sti
cs
jmp
mov
lret
mov
jp
imul
ja
in
aad
int3
and
nop
in
sbb
enter
mov
and
shll
outsb
dec
shll
inc
ja
mov
lock
pop
xor
std
pop
popl
bound
mov
dec
sub
test
sbb
data16
sti
int3
insb
pusha
orb
imul
push
mov
or
mov
fs
pop
pop
mov
lahf
cmc
pop
out
add
xchg
mov
sbb
aam
hlt
push
mov
icebp
pusha
cmp
outsl
arpl
xor
adc
xchg
popf
sub
test
mov
cmp
xorb
enter
mov
in
mov
cmp
cmc
or
aad
int
jecxz
sbb
dec
cmpb
xchg
jp
mov
fmul
outsb
lock
cmpl
jns
mov
int3
int3
dec
lret
mov
loopne
jne
inc
test
in
sub
push
xchg
mov
sub
test
sub
cmp
mov
ja
sbb
repz
in
or
fimull
hlt
mov
sbb
mov
xorl
xchg
cmc
into
cmc
repnz
int
sub
outsb
dec
push
cmc
scas
add
adc
movsl
dec
push
mov
stos
mov
pusha
mov
addr16
inc
mov
pop
add
mov
in
out
pushl
xchg
cmc
cs
and
mov
sar
sbb
xor
insb
xchg
out
lea
incl
jb
ja
inc
aam
lea
xor
shl
xchg
add
lea
outsl
xchg
loop
mov
sub
sub
fs
nop
and
fnstcw
cmp
mov
and
fcomps
xor
or
flds
leave
loop
pop
icebp
mov
pop
clc
push
fnstenv
add
imul
mov
out
int3
imul
push
xor
shlb
jae
int3
adc
cmpsb
inc
rorl
adc
js
xor
mov
push
add
leave
nop
rorb
push
lcall
js
jp
sub
xor
jno
jb
and
test
push
mov
cwtl
gs
insb
xchg
jge
popf
arpl
xor
ja
jecxz
xchg
push
push
mov
pop
aam
mov
mov
xchg
loope
cmp
dec
cli
and
adc
es
dec
je
mov
js
pop
mov
std
dec
call
add
push
cmp
sub
pop
loopne
dec
in
push
xchg
mov
jns
sbb
sub
add
dec
jbe
pop
and
je
mov
enter
nop
push
pop
in
mov
jns
sti
roll
jb
inc
orb
clc
cmp
sarb
es
pop
push
ss
xor
xchg
or
mov
cmp
in
ja
mov
int3
adc
dec
repnz
pop
fcompl
leave
ss
xor
and
stc
pushf
push
sbb
and
jg
outsb
sub
call
lds
lahf
lea
jae
and
pop
xchg
push
dec
in
sti
out
in
jle
mov
ja
adc
xchg
cmpl
adc
or
mov
cwtl
jb
xchg
lret
and
stos
nop
loopne
fidivl
cltd
lea
dec
cmp
pushf
or
int
sbb
mov
adc
xor
ljmp
jp
bound
jne
xchg
dec
mov
jns
pop
xchg
imul
rcr
jl
test
sub
call
xchg
jmp
popa
lea
cmp
cmp
pop
pop
das
mov
out
cmp
sbb
inc
mov
xor
repz
pop
mov
lcall
dec
xchg
pop
aam
stos
int3
adc
lahf
sti
cmp
push
jne
dec
sbb
jne
aam
pop
push
dec
sub
stos
and
xchg
outsb
dec
add
addl
cwtl
jecxz
shl
dec
xchg
cs
daa
out
in
scas
jae
jecxz
mov
fwait
push
ret
xchg
sub
xlat
or
cmp
pop
push
out
push
jno
sbb
jae
push
imul
fbld
outsb
adc
xlat
pop
popa
testb
cmp
pop
roll
insl
and
movsb
pop
jne
mov
mov
xor
out
sbb
scas
push
test
or
aaa
fistps
andb
mov
nop
mov
fwait
mov
sub
push
in
daa
notl
sub
pushf
scas
stos
roll
sarl
xchg
mov
fs
inc
jbe
test
shlb
ret
add
sahf
orl
int
inc
test
lcall
dec
insb
pop
pop
push
int
pop
mov
dec
lahf
outsb
not
xor
inc
push
xlat
fwait
sub
int
sbbl
or
call
mov
dec
bsf
push
int
fisubs
sbb
out
jae
push
jno
sub
int3
int
jno
sub
xchg
cli
in
in
mov
fcomps
push
pop
fbstp
add
xchg
int
call
dec
or
fwait
cmp
dec
mov
xor
rep
add
movsl
push
mov
adc
or
push
mov
or
sbb
inc
cltd
repz
rorb
insl
or
clc
out
idiv
rorb
adc
dec
add
cmp
cmpsl
jle
mov
xchg
xor
push
in
jns
fs
loope
push
mov
movsl
xchg
mov
xchg
das
mov
inc
sbb
inc
cmp
insl
stc
mov
das
mov
nop
sti
pop
outsl
jecxz
es
movsb
jno
cmpsl
ret
mov
add
int
jge
mov
or
adc
inc
loope
clc
dec
sbb
and
out
mov
sbb
and
imul
rol
dec
jno
enter
inc
add
jge
ret
lock
adc
or
lock
fsub
cmc
ja
mov
sub
jge
xor
or
adc
in
mov
insl
and
pusha
inc
repnz
inc
cmc
shrl
imul
ds
aas
adc
loopne
pushf
jl
xchg
mov
aas
mov
dec
ljmp
imul
scas
mov
add
dec
rorl
std
test
sbb
and
negl
imul
popa
fbstp
iret
xchg
cmpsl
push
insl
xchg
mov
stos
ja
das
jle
xchg
xor
out
fs
push
andl
lret
push
xchg
jae
mov
inc
sbb
dec
in
dec
jp
jo
and
insl
cwtl
shrl
xor
shll
outsb
or
xchg
out
jno
jp
mov
inc
hlt
push
cs
iret
jle
daa
adcb
jb
lods
and
pop
cld
pop
out
andl
pop
aad
jle
mov
int3
sahf
iret
pop
xorb
stc
inc
leave
jns
fisttpll
add
and
inc
scas
jae
test
mov
pop
dec
lret
xor
dec
ss
fwait
push
aam
fldl
mov
std
inc
and
and
pop
push
pusha
and
mov
rclb
in
sti
pusha
jo
vcomiss
xchg
or
and
jge
jmp
adc
lret
push
pop
mov
and
mov
or
jnp
adc
jg
dec
add
ds
das
adc
push
dec
add
mov
int3
pop
idiv
jl
mov
pop
pop
push
jp
cmpb
popa
andl
mov
hlt
mov
int3
imul
and
pusha
icebp
xchg
das
sbb
jnp
inc
scas
dec
pop
enter
inc
ds
mov
icebp
js
and
push
lock
mov
sbb
pop
test
cltd
in
aam
loop
xor
fndisi(8087
xchg
rcr
shlb
data16
cmpsl
push
adc
sti
jae
popf
sub
push
mov
jbe
lods
dec
and
inc
and
int
imulb
cmp
sub
push
bound
xlat
idivl
cld
dec
shr
ficoml
mov
cwtl
cmp
data16
mov
push
fmull
test
out
icebp
pop
adcl
lret
adc
out
jbe
bound
or
xchg
lds
daa
aam
dec
js
movsb
out
mov
repz
repnz
aas
je
insb
in
sub
movsb
jns
into
cmc
repz
pusha
lds
adc
in
mov
leave
jns
lret
jae
pop
mov
loopne
cmc
cwtl
or
ds
imul
jo
mov
out
negb
fmull
sbb
shlb
adc
dec
js
inc
fdivrl
shll
rorb
add
rcr
inc
push
and
adc
shrl
shll
leave
insl
frstor
scas
testb
call
cmp
ret
mov
and
xor
pop
leave
in
stc
cmpsl
loopne
mov
data16
or
mov
lret
out
cmpsl
cmpsl
andb
insl
or
mov
sbb
push
lods
inc
lock
stos
jge
ret
int3
xlat
jbe
push
and
lods
lods
les
lods
adc
in
lods
pop
test
add
or
cmc
pusha
xchg
adc
xchg
mov
icebp
sti
add
sub
lods
or
push
add
loopne
test
xlat
in
popa
sub
sub
cmc
andb
jns
mov
inc
inc
dec
out
dec
testb
aad
cmp
sub
mov
cmp
push
mov
xchg
push
scas
cmp
ljmp
insb
test
fidivs
sbb
cmpsb
adc
inc
xchg
shr
rol
adc
dec
lods
mov
jbe
push
shl
ja
scas
push
pop
cmp
push
mov
or
and
lods
inc
subl
mov
push
or
xor
pop
push
sbb
int3
icebp
xchg
pop
pop
cmpsb
adc
es
push
bound
cmc
mov
xor
xchg
enter
fwait
je
sub
inc
push
shll
cltd
cwtl
dec
cmovae
fs
mov
ds
xchg
or
andl
jo
aam
inc
push
jp
sbb
mov
es
jne
xor
arpl
iret
push
rol
insl
jg
cmp
iret
cli
dec
movsb
jg
inc
ljmp
and
imul
and
push
push
daa
mov
pop
cwtl
cmp
cltd
sarb
sbb
scas
jmp
xchg
test
cmp
sar
popa
mov
jmp
fistpll
stos
pop
or
ret
add
jne
inc
js
clc
out
sub
lahf
aam
fmuls
icebp
sbb
xor
ret
dec
dec
aas
sub
mov
pop
mov
mov
pop
or
lret
and
cmp
xchg
xchg
mov
popf
sub
cmp
lret
push
pop
cmp
sub
popa
and
out
mov
cmp
xchg
daa
xor
mov
rclb
scas
jns
inc
push
jno
imul
mov
ss
aam
mul
test
enter
adc
sub
pop
cli
int
xor
adc
jecxz
cmp
sbb
dec
rcrl
shlb
popa
test
and
inc
mov
pop
or
jae
into
insb
or
shlb
xchg
push
stos
xor
movsl
adc
les
inc
mov
xchg
sbb
lcall
mov
scas
sub
subb
jecxz
clc
mov
dec
hlt
pop
insl
pop
push
add
mov
push
inc
or
xor
insl
data16
add
sbb
loope
lods
cwtl
stos
xchg
mov
xchg
jmp
inc
neg
test
pop
push
stos
add
add
inc
mov
into
or
pop
sub
mov
inc
push
test
add
inc
cmp
mov
shrl
and
loopne
pusha
fs
cmp
inc
pop
test
sbb
cmpsl
daa
pop
out
pop
jo
sub
repnz
push
ja
push
hlt
loope
add
and
test
cmp
push
nop
xchg
mov
adc
adc
or
stos
dec
jmp
out
pop
rclb
or
pop
jno
add
or
or
fimull
mov
mov
add
pusha
andb
cmp
inc
scas
xchg
imul
mov
insb
cs
jae
sbb
sar
insb
stos
rorb
lret
jmp
fldl
xor
cld
mov
cmp
sbb
imul
cmpb
mov
pushf
add
push
daa
sarl
push
les
xchg
pop
jo
aaa
dec
std
pusha
xchg
lcall
je
and
dec
jle
loope
dec
sub
cli
movsb
mov
mov
rdtsc
jecxz
push
xchg
push
add
inc
pop
push
mov
inc
jbe
push
sub
sbbb
pop
push
sub
rclb
cmp
movsl
xchg
adcl
and
add
pop
leave
xor
pushf
lds
cmp
rorl
dec
pop
aaa
xchg
inc
in
cwtl
xchg
pop
or
or
je
loopne
add
loop
xor
sub
icebp
mov
insb
ds
shlb
cmp
je
outsb
xchg
add
cmp
orl
clc
and
nop
mov
insl
aas
sbb
es
xchg
jne
bound
movsb
loopne
stos
dec
dec
mov
clc
mov
pusha
jb
adc
xchg
sub
add
dec
push
xchg
gs
repnz
adc
jns
cmpsl
test
mov
mov
inc
jb
cmp
inc
inc
icebp
inc
lcall
aas
mov
inc
js
nop
inc
shlb
adc
xor
ljmp
or
movsl
jbe
cmc
mov
test
mov
mov
or
dec
or
rorl
inc
in
pusha
nop
jecxz
jne
xor
mov
pop
push
xchg
add
fimull
loop
xchg
ret
je
cltd
pusha
loope
mov
faddp
cld
mov
and
rcrb
in
jbe
xor
jne
cmp
and
mov
ret
clc
fsubrl
sbb
cmp
push
idivl
sbb
dec
jmp
adc
aas
xlat
repz
dec
xchg
and
and
jmp
mov
fwait
cmc
sbb
ficomps
bnd
push
shrb
xor
dec
xchg
jno
adc
pop
data16
lahf
push
pop
sbb
mov
jbe
pushf
outsl
lods
les
xchg
in
xchg
pop
xchg
shll
push
and
sbb
mov
sub
sti
dec
rcr
mov
push
mov
lods
aaa
adc
push
out
fs
loope
mov
pusha
xor
out
cli
insl
jbe
lea
pop
push
push
dec
pop
xor
xchg
adc
cli
dec
mov
test
mov
mov
dec
dec
cwtl
pop
adc
lea
jns
xchg
sub
gs
js
sub
adc
shrb
ret
das
sub
push
add
into
jnp
xor
rcrb
ret
push
fimuls
push
in
mov
and
int
sbb
mov
imul
outsb
test
into
mov
xchg
insb
jno
sub
push
ss
cld
mull
arpl
dec
testb
in
xchg
ret
push
xchg
add
lods
aas
fcoms
or
add
rclb
leave
cli
jo
lcall
dec
adcl
stos
rcr
cmp
dec
adc
add
lods
jmp
test
in
lea
dec
dec
jns
aaa
lcall
sbb
sbb
mov
int
sahf
test
add
jle
rep
sahf
cmc
ret
stos
adc
clc
inc
ss
test
push
outsb
fwait
jns
pop
loopne
mov
sub
js
cmp
adc
jp
fcompl
in
out
test
leave
mov
sbb
shrl
fs
xchg
dec
into
idivl
or
sbb
mov
movsl
sub
pop
test
stos
dec
jnp
jge
xor
lds
adc
add
xor
and
xchg
fnstsw
mov
inc
cwtl
and
add
stos
test
jl
xor
pop
adc
dec
dec
ss
sub
icebp
push
adc
testl
inc
popa
sti
repnz
sbb
mov
test
cld
daa
adc
adc
sbb
mov
fistl
xor
js
add
int3
dec
arpl
jecxz
push
mov
jp
dec
daa
test
fldl
sbb
pop
jns
insb
stos
adc
in
inc
jle
xchg
inc
mov
icebp
stos
ja
lock
and
or
aad
div
rclb
jp
mov
pop
stc
push
ljmp
and
and
popf
xchg
stos
test
cld
pop
data16
fistpl
ret
fisubs
roll
cmc
or
xchg
iret
test
or
inc
jmp
fdivrs
cmpsb
add
xlat
cld
shr
fcomps
xchg
adc
repnz
stos
add
jae
popf
dec
mov
push
cmp
pushf
fisubs
lret
add
push
adc
icebp
std
enter
and
cs
jne
cmp
or
movsb
ja
dec
jo
pop
loope
adc
mov
ss
daa
mov
inc
in
hlt
ficoml
mov
popf
insl
mov
movl
gs
movsb
or
and
loopne
dec
mov
xchg
mov
mov
xchg
std
xchg
mov
sar
cs
adc
test
lret
cmp
adc
shll
mov
cmp
mov
arpl
je
inc
bound
scas
call
sub
lods
shlb
dec
test
ss
ret
cmpsb
jg
adcb
flds
and
lock
xor
ljmp
test
jb
sbbb
xchg
iret
xchg
mov
hlt
pop
ljmp
pop
push
push
sarl
adc
mov
cmp
jb
inc
stos
aaa
push
test
lret
cld
std
add
inc
push
pop
xchg
add
jno
cld
pop
popf
imul
daa
es
adc
push
imul
or
mov
test
pusha
dec
adc
shll
add
xchg
jb
outsb
icebp
push
fsub
mov
xor
jns
dec
dec
repz
pop
mov
pusha
fwait
leave
pop
mov
xor
mov
add
imul
test
in
jbe
outsl
cmp
aad
sub
lods
out
loop
aad
push
inc
sub
and
std
cmpsl
dec
dec
out
rcll
cmp
push
pop
adc
push
imul
lahf
pushf
jne
or
mov
add
icebp
sbb
push
jo
fwait
sub
stos
leave
enter
add
aam
inc
or
popf
dec
cmpsb
movsb
lcall
lds
imul
sar
loopne
mov
pop
pushf
add
and
sbb
outsl
mov
jmp
or
cmpsb
test
pop
cmp
icebp
in
sbb
pop
push
std
xchg
xchg
xlat
cli
lret
inc
test
aas
mov
mov
cld
sahf
iret
mov
test
jge
loopne
mov
xor
xchg
sahf
dec
in
pop
enter
jo
and
cmp
xchg
rolb
add
cmp
inc
push
maskmovq
testl
xchg
inc
cmpsl
lds
dec
mov
mov
movsb
in
push
and
add
loope
fildl
ss
xor
int
mov
popa
or
test
push
mov
xchg
jge
xchg
pusha
int
add
fidivl
jnp
sub
pop
cmpsb
xor
dec
and
pop
xchg
mov
or
or
jbe
sub
loop
mov
mov
and
dec
mov
cmp
lods
dec
pop
rcrb
push
inc
push
and
fldl
add
push
xchg
roll
scas
shlb
icebp
push
inc
mov
sub
inc
mov
jp
adc
mov
sub
mov
mov
inc
outsl
jge
insl
sub
push
mov
loopne
push
jbe
test
jne
sarb
pop
and
xchg
js
xor
dec
adc
adc
mov
imul
cmpsl
xor
sti
iret
push
lds
push
stos
push
inc
pop
mov
cmpsl
in
enter
enter
xchg
or
sti
pop
mov
movsb
aad
mov
push
mov
jbe
shlb
cs
jnp
imul
out
leave
cwtl
fmul
mov
xor
in
push
mov
dec
dec
test
inc
fs
mov
mov
hlt
sti
sbb
int
pushf
jg
incl
sbb
mov
and
adc
push
fistps
add
push
mov
iret
xchg
mov
add
jge
subl
lret
fisubrs
nop
sbb
and
lds
mov
leave
insl
les
sahf
dec
push
jnp
sub
sbb
or
jl
lahf
sub
pop
inc
movsb
sahf
in
jl
loop
adcb
inc
imul
es
jae
inc
xor
dec
daa
mov
ja
je
pop
xchg
sbb
scas
jmp
mov
xchg
mov
dec
mov
push
sub
data16
lret
shlb
test
xchg
cltd
test
pusha
sub
sub
mov
xor
js
stc
pushf
mov
sbb
out
dec
sub
xor
rorl
xlat
fcompl
pop
pop
xchg
int3
cmpsb
sub
cmp
into
movb
lcall
daa
clc
loop
popa
mov
cld
into
mov
mov
jae
in
xchg
jnp
in
in
mov
add
cli
loopne
jno
jmp
sbb
shl
xchg
xchg
inc
push
or
push
ffree
cmp
rorb
push
insl
jmp
dec
adc
mov
pop
jnp
xchg
rolb
add
inc
inc
jg
push
in
test
xchg
or
insl
dec
outsb
scas
bound
push
cltd
push
data16
sub
push
js
push
xchg
decl
inc
test
hlt
or
push
je
int
mov
mov
out
adcl
rolb
ret
lods
add
and
jmp
pushf
jns
dec
xchg
sbb
lds
pop
fiadds
sti
cmp
sbb
add
stos
and
sub
in
cmpsb
popa
cld
addr16
das
mov
jb
and
repnz
test
mov
std
call
inc
fcompl
in
sub
xor
test
punpckhwd
jg
shlb
test
outsb
cltd
jg
sub
dec
jnp
in
data16
test
mov
mov
xchg
repnz
add
cmpsl
jl
push
add
loopne
xchg
mov
leave
push
in
pusha
cmp
test
jno
lea
mov
sbb
loop
lock
in
mov
push
xchg
pop
and
adc
jmp
lcall
sbb
in
sbb
leave
lret
jmp
das
adc
xchg
pop
fwait
enter
icebp
mov
movb
call
repnz
loop
test
jmp
cli
push
mov
popf
push
lret
scas
and
jbe
pop
fs
hlt
loope
xor
faddp
mov
pusha
jecxz
or
enter
shr
aam
inc
mov
xchg
shll
cmp
adc
pop
jge
inc
or
out
pop
mov
mov
je
or
sbbb
test
mov
test
adcl
nop
or
shlb
insb
cwtl
sbb
or
leave
cltd
sub
arpl
sbb
pmulhw
popf
movsl
xchg
xchg
ficompl
jno
out
mov
test
rcrl
jp
sbb
sub
mov
movaps
stos
pop
inc
push
std
arpl
js
cmp
push
idivl
les
add
mov
xor
daa
scas
add
roll
shll
aas
pushf
out
into
rcl
jg
cmc
sub
pop
push
adcb
and
pop
mov
push
push
imul
adcb
lods
stc
inc
rolb
test
xchg
ret
ljmp
mov
adc
xchg
dec
sbb
test
inc
adc
mov
out
stos
dec
adc
and
into
stos
inc
and
push
adc
push
ret
cmc
loopne
jg
push
shr
repnz
sub
mov
add
in
ret
xchg
push
jbe
jnp
loope
test
jg
sahf
push
lods
lods
sbb
mov
sub
outsb
loope
fnstsw
test
jno
pusha
adc
pop
test
out
inc
pop
test
jae
xchg
inc
mov
roll
cmp
fdivr
cmp
std
ficomps
push
dec
fs
add
je
out
cmp
movsb
in
inc
lret
xor
fcomip
ret
into
cmp
int3
loopne
xor
jne
sbb
fidivs
dec
int3
sbb
sahf
test
repnz
fsubr
xchg
adc
ficoms
xlat
pop
pop
sarl
sub
sbb
sahf
je
mov
into
xor
rcr
not
fwait
push
scas
sub
push
jns
sbb
aam
aad
sarb
aaa
or
mov
inc
lret
push
dec
xor
jb
dec
scas
mov
or
aaa
push
idiv
pop
ss
rorb
push
jnp
xor
xchg
je
shr
out
sti
outsb
mov
pusha
mov
push
jmp
inc
pop
mov
pushf
rcrb
gs
push
pushf
fisttpll
sub
mov
sub
mov
popa
or
sub
xchg
jg
call
repnz
jns
cmpb
push
in
in
xor
and
pop
fbstp
lds
lods
inc
sbbb
repz
pop
enter
ja
cmc
push
loop
and
cmp
push
adc
lods
sbb
daa
sahf
mov
xor
sub
lock
and
je
orb
out
stc
dec
mov
pop
lods
or
or
sbb
lds
jp
popf
inc
push
mov
add
inc
fcmovbe
in
loop
pop
leave
mov
jnp
inc
cmpsb
pop
imul
push
push
cs
imull
in
scas
pop
pushf
pop
xchg
andl
sub
jl
fnstcw
hlt
ret
es
dec
xor
les
enter
and
jg
loopne
in
mov
adc
pop
xor
adcl
jb
ss
sbb
out
outsb
hlt
mov
pop
ficoml
gs
jle
sti
sbb
push
jg
ret
in
xchg
and
ljmp
pop
mov
or
sub
dec
dec
fdivs
push
and
rorb
xchg
xor
sbb
sbb
shll
xchg
push
test
lret
imul
xchg
adc
lods
inc
adc
sub
std
lds
in
pop
dec
inc
fsubs
xchg
stc
in
xchg
jbe
jno
jmp
push
or
js
add
xor
xchg
scas
les
fnstenv
sbb
enter
outsb
ds
inc
imul
cmpsb
outsb
sbb
mov
rol
out
lods
cmpsl
lock
test
imul
push
movsb
rorl
ret
sub
mov
insl
and
xor
sub
jl
negb
repz
push
movsl
data16
cmpsb
xchg
addr16
pushf
sahf
jne
mov
mov
testb
aam
cltd
mov
andb
icebp
sti
push
hlt
sub
icebp
jae
mov
xchg
mov
pop
jno
pop
scas
repz
aaa
sbb
orb
dec
mov
push
lahf
int
mov
pop
scas
js
cmp
sub
mov
lea
pop
or
dec
cwtl
adcb
stc
nop
mov
and
ja
cld
jne
push
pop
aam
ds
loopne
or
fs
sbb
out
fistpl
dec
clc
pop
mov
xor
add
jle
xlat
xor
rorb
sub
cmp
mov
sahf
ficompl
sub
ror
sub
or
push
xor
shrl
xor
scas
cmp
mov
jnp
idivl
sarb
es
ficompl
aas
and
or
addr16
sub
dec
rcll
stos
sub
fcoml
xchg
xor
mov
xor
cmpsl
mov
fisubl
xlat
jecxz
dec
xchg
js
pusha
xchg
mov
idivb
aas
out
std
pop
sarl
dec
xchg
jns
in
fstpl
sub
push
cld
inc
cmp
pop
dec
xchg
mov
xorb
sti
int
and
xor
clc
rorl
dec
pop
pop
jb
cmp
in
insb
jle
and
cmpsb
pop
adc
push
insl
mov
cli
cltd
ljmp
fwait
sbb
push
push
and
sarb
lret
mov
insb
lret
mov
pop
aas
push
fsubs
xor
and
cli
out
int
incb
push
or
icebp
mov
aad
cmp
sahf
out
mov
mov
adc
pop
jbe
pushfw
xchg
sbb
jg
ret
icebp
arpl
or
outsl
fisttps
in
or
mov
fsubp
xor
mov
nop
rcl
xor
push
movsl
jno
adc
in
stos
out
mov
push
dec
in
push
ss
shl
andl
jo
mov
loopne
mov
dec
fiadds
enter
mov
in
mov
jmp
mov
jnp
sahf
adc
mov
pop
mov
test
jns
adc
mov
cmp
cmp
je
cmp
fwait
lods
xor
or
add
fsubp
jp
xchg
fnsave
movsb
jmp
push
loop
mov
sub
jge
das
xchg
lea
inc
insl
adc
sbb
in
sbb
xchg
adc
inc
xor
popa
mov
enter
or
sub
fcmovnu
dec
add
test
push
push
push
out
sti
test
pop
inc
jbe
gs
or
pushf
ret
cmp
inc
add
adc
sbb
push
outsl
ret
mov
jg
subb
xchg
into
jge
adc
mov
dec
cwtl
dec
cmpsb
es
push
pusha
jmp
inc
xchg
loop
mov
ret
dec
pop
icebp
popf
fisubs
add
pmulhuw
xor
mov
jns
scas
les
add
ds
mov
push
ret
fcmovbe
mov
sub
imul
cwtl
cmpsb
scas
loope
sbbb
adcb
jne
sbb
jle
sub
bound
dec
dec
pusha
xchg
into
sti
adc
das
xchg
mov
rol
stos
fnsave
mov
or
lds
jnp,pn
mov
in
mov
int
lods
mov
fsubrl
mov
fs
pop
push
add
movsl
mov
mov
inc
imul
jo
push
cmc
xor
and
cmp
lret
sub
test
jne
in
sbb
enter
sbb
fildll
jbe
jle
xchg
mov
xchg
call
adc
pop
adc
scas
test
mov
and
fildll
pop
ss
movsb
adc
jl
mov
push
mov
popf
orl
shlb
dec
sbb
dec
dec
ljmp
inc
sbb
xchg
sub
shlb
cmove
adc
adc
movsb
mov
popf
cmpsb
xchg
aad
add
xor
cmc
dec
sub
sar
and
jns
stos
dec
in
jne
sub
jns
mov
divb
mov
push
clc
adc
adc
in
add
loopne
aad
dec
cmpsb
sub
lds
adc
jno
pop
push
inc
push
sbb
pop
lahf
push
in
sbb
xor
push
pop
push
fs
xorb
jno
aas
mov
or
inc
xor
popa
pop
inc
cli
lea
xor
filds
inc
mov
das
xor
data16
mov
push
call
loope
push
subb
adc
push
stc
sbb
xor
inc
cmc
jns
inc
pop
adc
sub
inc
dec
cmp
push
cli
gs
mov
test
sbb
hlt
icebp
std
andb
inc
test
fstpt
sub
in
push
inc
jae
inc
xor
cmp
daa
int
lock
fiadds
insb
xor
dec
cmp
test
mov
dec
idivb
cltd
outsb
xchg
push
sbb
mov
and
cld
rcll
and
adc
jl
dec
xchg
leave
and
ficoms
inc
ret
push
push
push
and
mov
jne
sarb
xchg
sbb
aad
stc
pop
in
int
loope
xchg
sahf
movb
not
pop
into
ds
test
nop
mov
lods
push
push
nop
sub
fistpll
or
inc
and
mov
mov
in
sbb
pop
adc
sbb
in
lods
ret
xorb
in
cld
inc
or
ljmp
and
cmpb
add
call
idivl
call
outsb
insl
dec
movsb
cmpsb
into
cmpsl
ljmp
aad
ja
int
ficomps
stos
or
imul
mov
out
ljmp
xlat
push
jmp
hlt
pop
arpl
pop
mov
inc
lock
adc
mov
cmp
mov
int
push
popf
cwtl
xchg
loopne
das
fiadds
and
add
mov
and
mov
adc
mov
sbb
pop
sbb
loopne
sub
xchg
cmpsb
mov
inc
inc
mov
hlt
movsl
lea
js
and
cmp
pop
outsl
jg
mov
shll
loopne
push
xchg
xlat
out
add
pop
stc
fstpt
mull
js
push
cmp
jp
flds
rcrl
dec
fisubs
repnz
adc
addl
pop
mov
inc
cs
lock
and
inc
push
sti
gs
dec
lods
lea
or
add
pusha
loopne
pusha
cltd
and
aam
mov
dec
ffree
push
push
adc
stc
add
sub
shll
popa
or
ret
inc
push
dec
jbe
lret
add
fwait
fimull
dec
arpl
imul
adcl
pop
arpl
ljmp
outsl
mov
pop
enter
in
dec
or
xchg
cmp
in
xor
pushf
cwtl
repnz
inc
dec
test
mov
mov
loop
int
sahf
pop
jle
loopne
jmp
decl
aad
jge
or
jne
ljmp
insb
hlt
test
pushf
fwait
shrd
sbb
add
lret
inc
mov
les
jg
fdivs
cmp
bound
or
and
xchg
in
xlat
fistpl
jns
dec
cli
sbb
mov
cs
xor
stos
arpl
push
adc
mov
pop
pop
pop
mov
pop
stos
ja
sbb
cmp
subl
and
popa
shlb
cwtl
xchg
incl
data16
jl
iret
scas
jbe
lock
gs
mov
push
faddl
mov
mov
ja
aad
outsb
mov
dec
sbb
or
or
lret
ret
cmp
loope
test
mov
xchg
adc
shrl
lds
or
cltd
fisubl
cltd
sub
push
sbb
or
jbe
xchg
or
or
cltd
mov
sbb
sub
loopne
nop
push
sub
ret
ffree
imul
icebp
out
dec
jle
arpl
out
gs
push
icebp
mov
or
xchg
jnp
push
fmuls
ret
inc
scas
iret
fistl
add
testb
cs
clc
mov
js
cmp
pop
cld
lods
scas
sub
mov
cmp
fistpll
adc
xchg
dec
sub
push
test
fdivl
mov
sbb
loope
stos
fimull
lea
mov
xor
pusha
inc
push
jmp
or
inc
pop
je
dec
lods
dec
aam
inc
sbb
in
mov
out
cmp
rcrb
movsb
es
hlt
ret
sbb
or
popf
sbb
test
mov
jg
aad
movsl
cmpsb
jbe
fistpl
dec
cmp
pop
cmovl
rcr
call
adcl
sub
aaa
add
add
sbb
jp
mov
push
ja
js
mov
lds
adc
f2xm1
in
test
pushf
push
pop
ret
mov
xchg
outsb
sub
in
cmp
int
sbb
jbe,pn
sub
popf
sbb
cld
push
sbb
mov
jecxz
movsb
sbb
addl
out
pop
lds
and
mov
sub
insb
lahf
div
jo
pop
stc
and
mov
std
lea
dec
jae
mov
or
push
jne
mov
xor
jg
jno
jns
inc
inc
ja
leave
push
xor
lods
fisubs
movsb
cs
ftst
adc
jl
inc
movb
add
and
stos
push
stc
into
mov
inc
data16
pusha
jnp
gs
gs
loopne
add
mov
ret
nop
cs
jp
das
push
xchg
pop
bound
call
inc
pop
xor
pop
inc
sbb
xchg
jo
scas
in
add
fs
jmp
mov
adc
repnz
push
pop
pop
adc
test
inc
pop
out
or
or
pop
inc
inc
daa
mov
mov
imull
insl
nop
cmp
jno
push
stos
lods
sub
pop
dec
mov
into
je
scas
mov
mov
nop
in
cmp
adcl
out
rorl
jb
lods
shrb
rep
std
push
repnz
cmp
mov
mov
cli
nop
or
fsubl
repz
movsb
mov
das
jae
loopne
or
cli
out
mov
dec
mov
repnz
out
insb
xchg
xchg
jmp
dec
mov
xorb
out
test
mov
pop
inc
ljmp
sar
mov
sbb
in
pop
fdivs
addr16
or
sub
adc
repnz
aad
sbb
lret
cmp
xlat
dec
rorb
push
mov
popf
aas
mov
push
mov
lcall
lods
xchg
push
or
xchg
mov
mov
push
pop
insl
cmp
notl
mov
cmpsl
int3
rcl
cmp
stos
hlt
dec
mov
jl
xor
or
inc
test
ljmp
inc
jge
std
xchg
call
cmp
rclb
or
stos
in
addl
out
jne
sub
add
mov
jg
dec
ret
test
add
push
pop
inc
mov
gs
scas
jns
popf
aas
inc
lcall
enter
mov
arpl
scas
aam
das
andl
movsl
mov
or
lock
sbb
jmp
xchg
arpl
lods
decb
repz
popa
lods
mov
aam
lea
lea
add
xor
mov
testb
mov
mov
inc
cmp
in
push
mov
rclb
stc
sti
cld
jo
rcr
mov
xchg
jecxz
mov
push
les
sarb
ljmp
cs
pop
push
or
add
xchg
lock
mov
shrl
push
dec
push
pop
xorb
mov
sbb
imul
imul
push
dec
sbb
ret
mov
pop
ficoms
cmp
xchg
cli
sub
mov
jo
repz
jp
xchg
and
cmp
push
pop
jno
sub
stc
add
mov
test
mov
pushf
xchg
push
push
mov
mov
ja
aad
push
movsb
dec
pop
out
out
pop
xor
loope
fsts
and
jo
jno
rorb
cmpsl
sub
iret
shrl
xchg
sub
aas
in
pop
xor
sub
push
cmp
pop
push
and
sub
fisubrs
je
adc
inc
sbbl
mov
sbb
pop
add
ds
bound
outsb
push
pushf
vmovdqu
out
push
pop
jno
clc
add
sbb
sub
mov
inc
or
jb
or
ja
push
mov
xor
mov
or
push
add
sub
mov
dec
out
sbb
mov
adc
arpl
lahf
rcrl
or
inc
sub
push
scas
push
add
mov
data16
pusha
push
or
movsb
test
mov
add
mov
adc
dec
mov
iret
push
add
jno
neg
mov
push
dec
jle
xor
imul
sbb
data16
mov
xchg
lods
cmpsb
cld
sub
sub
sbb
push
and
jge
aad
mov
ds
nop
addr16
popf
pop
push
std
fsub
outsb
dec
adc
cmp
call
pop
pop
cmpl
lret
dec
daa
mov
inc
add
cwtl
jnp
leave
push
sarb
push
jle
scas
and
pop
scas
insl
lret
dec
in
lcall
outsw
push
xchg
mov
scas
pusha
xor
cmp
outsb
shll
imul
ss
cmpsl
mov
fcomip
mov
ja
jnp
gs
sbb
scas
sarl
xchg
notl
mov
xchg
push
subb
cmovp
das
movsl
js
stos
shr
ss
inc
rclb
nop
push
add
mov
xchg
or
leave
loopne
mov
iret
test
jae
out
lds
adc
and
cs
popa
xor
add
dec
pop
add
mov
xor
lahf
ljmp
mov
jl
cmp
push
and
leave
dec
andl
lods
loope
test
cmovo
xchg
or
sahf
push
shlb
arpl
or
imul
push
call
call
stos
cld
cmp
shll
xor
mull
stc
xchg
sahf
and
popa
jo
push
hlt
je
clc
cmp
sbb
inc
push
inc
cmpsb
insb
icebp
lods
popa
mov
sub
lea
mov
js
test
aam
pop
fisttpll
and
lret
ljmp
inc
xchg
xchg
enter
lahf
movsb
cltd
mov
and
cli
roll
jg
movsb
fistpll
sbb
daa
dec
mov
int3
leave
dec
in
and
or
cwtl
mov
inc
dec
xchg
sbb
pop
js
sbb
scas
xor
fsubrs
dec
bnd
out
mov
das
or
iret
xchg
out
pusha
out
adc
xor
and
xchg
fstpt
cli
cmp
leave
inc
sbb
cli
ret
stos
xor
rolb
addr16
add
or
lock
loopne
adc
loop
adc
cmp
sub
sub
lds
push
dec
rorb
push
imul
push
jb
int
clc
arpl
cmp
ja
test
fs
pop
sbb
push
int3
pop
int
jb
pusha
or
xor
and
push
or
xchg
push
dec
push
sahf
pop
cmp
or
mov
std
adc
mov
push
xor
imull
mov
aad
ret
int
out
push
mov
popa
push
and
out
shrl
rcl
mov
xor
dec
xchg
divl
or
popf
js
insl
xchg
call
incl
mov
dec
xor
rcrb
fsts
sub
xchg
cli
sub
out
popa
loop
and
jecxz
ss
dec
dec
iret
adc
pop
shrl
in
inc
jbe
scas
cli
mov
sbb
js
xor
mov
and
jg
dec
iret
popf
out
insl
es
popf
nop
and
push
pop
jmp
pop
adc
xchg
loope
xchg
add
mov
lea
testl
test
jo
popa
in
stos
les
lcall
mulb
xor
idivl
adc
sbb
cmp
add
ja
jns
cwtl
aad
dec
fs
inc
inc
jo
xor
lretw
sbb
sub
dec
push
mov
sahf
mov
sahf
sub
rcr
pusha
aam
sti
std
ss
les
xchg
add
je
lods
test
push
dec
hlt
mov
mov
filds
push
inc
shl
outsb
and
pop
int3
test
jb
dec
mov
out
sub
lods
insl
pop
mov
stc
adc
push
lret
push
scas
pushf
jno
ss
xchg
loop
mov
sub
arpl
mov
push
ljmp
mov
int3
stc
lcall
loopne
adc
and
sbb
inc
jg
inc
js
jg
push
mov
jne
and
cs
aaa
push
cmp
jb
enter
mov
dec
les
and
add
add
mov
or
xchg
jbe
jge
xor
push
inc
les
fmull
push
ja
xchg
add
das
mov
lea
xchg
ret
dec
and
mov
lret
insb
inc
adc
push
sbb
arpl
sbb
ss
out
cmp
pop
test
push
aas
arpl
sbb
sbb
pop
jno
push
fldt
and
fildl
mov
mov
push
bound
mov
into
or
mov
add
sbb
int3
aad
aam
iret
cmp
and
ds
push
fbld
pop
jo
enter
sti
cmp
jne
lret
and
leave
jno
adc
push
leave
aas
test
shlb
rol
mov
pop
sahf
les
pop
pop
rcrl
xor
lahf
inc
ja
add
enter
mov
push
jl
xchg
clc
push
sub
inc
xchg
xchg
mov
mov
push
push
lods
data16
sub
nop
xchg
adc
ja
and
lock
xorb
pop
add
lea
cmp
mov
call
outsb
iret
mov
daa
in
cld
mov
sub
cmp
jne
mov
push
arpl
rcrb
out
out
cmp
test
mov
push
push
cmc
xor
push
ret
mov
aaa
adc
push
sub
sbb
orl
out
test
sub
or
fidivrl
cmp
mov
dec
push
lret
movsl
sub
push
inc
jp
loope
inc
jbe
iret
jbe
aam
icebp
int3
aam
pop
jns
push
xchg
xchg
lea
lock
mov
or
jne
adc
xlat
sub
inc
scas
cs
enter
inc
sub
icebp
test
jecxz
mov
add
add
inc
jp
inc
cltd
aaa
dec
nop
insl
mov
mov
dec
jmp
repz
pop
sbb
or
dec
sbb
movsb
stos
dec
lret
loope
orl
bound
dec
pop
xchg
fldl
stc
inc
filds
add
ds
out
add
dec
mov
inc
jo
mov
pop
std
imul
pop
mov
and
movsb
repz
insb
repz
push
bound
cmp
xor
push
xor
int
sbb
adcb
mov
cmpsb
dec
scas
mov
lret
scas
dec
adc
movsb
sti
mov
inc
push
add
and
pushf
cmpsb
jae
cli
cltd
push
in
xchg
fmuls
mov
sbb
lcall
mov
dec
std
lret
mov
sbb
and
pop
dec
push
rorb
frstor
push
hlt
dec
xlat
xor
sbb
xor
dec
pushf
xchg
ret
das
inc
mov
cmc
cs
in
xchg
xchg
pop
adc
movsb
jbe
or
pop
jmp
mov
jns
dec
hlt
push
mov
dec
push
or
xchg
sub
ret
lcall
adc
sub
sti
loopne
jge
cmp
sbb
mov
pop
test
pop
in
hlt
lahf
xchg
sti
mov
dec
mov
test
out
jle
test
inc
jbe
loope
cs
xchg
cwtl
mov
es
inc
push
mov
xchg
hlt
mov
inc
sub
sub
rorb
push
mov
mov
sub
dec
cmp
rcr
ljmp
inc
insb
imul
scas
fldcw
push
dec
push
jp
push
scas
mov
mov
push
pop
mov
mov
adc
in
daa
outsl
in
jbe
ja
mov
sub
out
xchg
jl
adc
ss
gs
add
cmp
loope
dec
dec
jae
in
mov
and
loope
mov
or
stos
cld
mov
mov
and
out
cmc
js
shl
outsb
cmp
inc
insl
int
das
xor
mov
into
and
xor
enter
pushf
jge
mov
mov
pushf
jl
call
sar
addr16
adc
jmp
jno
or
adc
clc
cld
jae
push
cmpsl
lcall
test
cwtl
mov
aas
movsl
ja
add
sbb
mov
dec
push
mov
jge
fldz
xchg
cmpsb
pop
cmp
inc
gs
mov
push
pop
mov
cld
mov
add
xor
testl
sub
lock
pop
lock
mov
loopne
fxch
daa
stos
in
adc
push
xchg
sbb
jmp
icebp
and
out
popa
in
not
push
cwtl
bound
xor
pop
daa
sbb
dec
fwait
push
aas
pop
cmp
jge
call
pop
cmp
cmp
dec
enter
outsl
cld
jl
mov
lods
cmp
adc
and
sub
not
cmp
iret
mov
push
addl
lret
mov
cwtl
xchg
aaa
mov
pop
repz
add
mov
lods
adc
pop
andb
ja
mov
pop
inc
mov
sti
dec
lahf
lods
mov
test
add
xchg
das
cltd
xchg
pop
xchg
loope
mov
imul
call
cmp
mov
xchg
repz
jbe
push
jecxz
cli
out
fsubrs
das
fnstenv
cmp
sub
sbb
dec
add
cmp
and
cli
outsl
cmpl
fisubrs
shll
mov
aas
jno
jecxz
cmp
mov
push
loop
adc
cmp
push
cld
xor
roll
ljmp
clc
mov
into
rclb
in
nop
ss
pop
lret
in
pop
lea
cld
cltd
push
xchg
loope
sub
in
lock
sbb
scas
jle
mov
subb
xchg
clc
pop
outsb
clc
add
insl
mov
push
hlt
jns
in
mov
push
out
mov
scas
popf
lahf
sub
pop
mov
mov
hlt
rcrb
xchg
sub
rcr
sbb
out
push
or
sub
adc
and
mov
out
sub
stos
scas
push
sub
bound
xor
hlt
sti
or
and
cmp
fisubrs
lods
outsl
pop
sub
sbb
dec
jbe
mov
faddl
inc
xchg
in
cmpsb
mov
ljmp
adc
fmul
movsb
cld
into
xor
mov
out
fnsave
inc
dec
lret
push
sti
inc
popa
call
out
inc
xor
in
je
ror
pop
int3
jecxz
addr16
cmp
add
push
icebp
loop
ds
sub
js
push
out
push
sbb
addr16
out
jecxz
frstor
inc
lret
in
into
cmp
shlb
fisttpll
jae
test
cmp
insl
push
sbb
pushf
add
lods
andl
sbbl
inc
or
mov
inc
jb
fs
idivl
adc
repz
setne
jle
mov
push
fwait
push
cs
sbb
pop
adcl
les
cmpb
add
and
add
cld
inc
mov
and
xor
insb
ss
je
loope
pop
and
test
icebp
xchg
orl
jecxz
xchg
in
test
adc
jnp
hlt
and
cs
ss
add
and
adc
jp
test
push
roll
xchg
es
outsb
ja
in
sub
aas
idivb
lcall
cltd
inc
mov
or
push
das
jge
mov
les
pop
arpl
jae
fs
push
sub
mov
push
leave
or
fidivl
rolb
pop
xchg
add
in
daa
dec
mov
cmpsb
xchg
mov
mov
in
insl
cmp
jmp
sbbb
pop
xor
inc
aaa
pop
jp
xchg
inc
adc
jmp
scas
add
in
xchg
repnz
mov
je
or
lds
push
ljmp
les
imul
rcrl
ljmp
out
icebp
xchg
xor
mov
inc
xor
push
aam
adc
movsl
xchg
dec
mov
in
ss
pop
pusha
pop
pop
or
xor
mov
fsubrp
aaa
repnz
sub
sub
or
nop
adc
fmul
inc
je
pop
aam
aaa
les
mov
jg
inc
fpatan
jp
mov
into
xchg
fldenv
loopne
cmp
cmpl
loope
loopne
int3
inc
movsl
repz
pop
pop
xor
or
or
cmp
outsb
push
repnz
xor
adc
pop
mov
mov
jl
hlt
sub
aas
pushf
fidivrl
xor
add
xor
adc
shll
jmp
and
adc
jge
or
pop
dec
sbb
push
into
popa
int3
rcl
pop
pop
mov
mov
sub
inc
and
out
and
cmc
mov
loopne
cmp
dec
add
sub
fstl
iret
mov
push
and
pop
and
loop
cmc
inc
cwtl
popf
in
fwait
movsl
sahf
push
push
loop
mov
jns
ja
sahf
or
pop
subl
loope
fisttps
es
sti
fcmove
mov
in
push
es
pop
es
cmp
xchg
sub
jno
stc
push
pop
xor
inc
pop
pop
or
movsl
and
hlt
out
xchg
pop
mov
cmp
or
or
fstpl
sbb
aad
jae
fbstp
and
mov
ret
insb
mov
pop
lahf
repnz
dec
repz
xor
and
add
pop
inc
and
int
jle
xrelease
enter
gs
cld
push
jecxz
dec
xchg
das
test
clc
mov
aas
lock
outsl
adc
pop
in
enter
les
adc
adcb
aas
jl
jl
cmp
cwtl
andb
jp
popa
mov
imul
outsb
test
dec
push
rcr
fs
inc
pop
jne
inc
cltd
outsb
lcall
not
lds
or
xor
mov
xor
add
cmp
xchg
and
push
js
aas
cmpsb
pop
stos
add
inc
mov
dec
cmp
out
sub
mov
mov
xor
mov
jecxz
outsb
sahf
rcrb
cmp
fisubl
mov
fwait
cmpsl
jmp
nop
aas
adc
pmaddwd
dec
push
mov
cmpsl
lcall
faddp
inc
xchg
adc
leave
fcomps
or
inc
push
mov
jbe
sbb
pusha
aad
push
xor
lock
hlt
ss
mov
ror
sahf
lods
sub
test
jmp
sub
cmp
test
pushf
push
add
jns
cs
pop
jno
mov
sbb
repnz
dec
sbb
stos
cmp
or
mov
mov
push
insb
mov
adcl
and
xor
inc
gs
xor
jnp
push
or
jns
std
push
sub
mov
nop
fidivrs
cmpsl
int3
ficoml
repz
pop
lcall
cmp
cli
or
lahf
hlt
movsl
inc
cmpsb
push
or
push
ljmp
iret
movsl
inc
xor
xchg
push
jo
sbb
lods
pop
cmp
sti
adcb
popf
mov
js
xchg
in
pop
fcompl
lret
or
cmpsl
enter
sbb
ret
cmp
pop
cmp
cmp
aas
loop
hlt
test
push
mov
lahf
pop
cmp
mov
dec
sahf
js
outsl
fdivrl
dec
inc
mov
jo
mov
pop
lcall
pop
gs
fs
enter
daa
xchg
mov
test
lods
or
inc
lods
out
rcl
outsl
sub
mov
xchg
int
mov
xchg
int
popa
push
in
jo,pn
jns
pop
jne
cmp
rol
mov
push
pop
addr16
jge
aaa
stc
jo
sub
lods
adc
mov
les
jg
cmp
cmp
add
adc
cmp
sbb
es
mov
stos
lds
xor
and
pop
pop
and
inc
lret
bound
jnp
repnz
call
fst
outsl
xchg
pop
arpl
xchg
mov
mov
sbb
ss
pop
loopne
in
mov
int
cwtl
test
fld1
sbb
outsl
and
test
adc
xchg
xor
sbb
repnz
mov
ja
lea
mov
ds
xor
mov
into
push
dec
or
jl
push
xchg
jecxz
pusha
rclb
jge
into
xchg
cmp
or
ret
int3
push
pushf
pop
pushf
orl
in
cmp
stos
rol
cli
sub
xchg
test
pop
xchg
scas
in
push
jge
das
int
dec
pop
leave
jg
mov
jno
sbb
out
loop
fucom
dec
mov
mov
and
adc
dec
mov
lcall
addl
adc
push
ret
pop
stc
jl
push
xor
mov
and
jge
in
lcall
stos
ficoms
adc
mov
cmp
insl
fisttpl
int3
mov
les
or
jb
fidivl
mov
mov
mov
xchg
imul
push
dec
into
mov
cwtl
jle
mov
mov
push
or
mov
and
mov
push
or
add
pop
xchg
fwait
out
push
push
daa
sub
push
jecxz
or
out
jno
jno
ja
stc
sahf
pop
pop
xlat
sbb
in
sbb
gs
shr
jo
inc
pusha
in
ret
pop
sti
and
in
jmp
pop
sbb
iret
dec
rcr
int3
shrl
xchg
xor
mov
out
ss
xor
out
dec
sub
aaa
lock
movsl
je
dec
lock
shl
jp
orl
xor
xlat
and
sbbl
inc
lods
cmp
iret
lahf
fnstenv
fs
out
push
push
popa
movb
mov
sbb
inc
mov
mov
ja
jmp
xlat
sbb
aas
repnz
push
pop
mov
stos
jns
jmp
enter
mull
or
pop
roll
xor
pop
les
mov
pop
rclb
mov
daa
lock
lret
aaa
out
inc
data16
push
sbb
mov
jecxz
inc
sti
pusha
and
jp
lods
push
repz
lods
jg
jecxz
dec
pop
jb
icebp
xor
add
subl
bound
imul
outsl
sbb
paddsb
out
enter
dec
push
mov
xchg
cli
fcoms
cmp
lcall
aad
ret
sbb
sub
sub
into
jbe
stc
push
jecxz
enter
mov
arpl
mov
fsub
mov
cltd
mov
mov
adc
loopne
enter
add
dec
jg
rcll
jo
inc
sbb
outsl
cmp
pop
mov
gs
mov
cld
jecxz
lds
add
lret
enter
jmp
fcoms
iret
cmp
jb
pop
or
pop
mov
xchg
pop
lods
mov
out
jl
mov
push
jg
or
pushf
mov
cmp
push
lds
stos
and
in
jnp
xchg
push
sub
mov
mov
xchg
popa
imul
jmp
ret
xchg
pop
test
jae
cmpsl
std
add
addr16
add
ficompl
sahf
sbb
iret
addb
cmp
outsb
add
dec
jg
push
aaa
loopne
and
repz
or
push
adc
mov
out
gs
mov
jg
call
cmp
lret
cmpl
pop
ss
aad
xor
pop
int
scas
jne
mov
lods
or
xchg
jmp
xor
sahf
cmpsb
lcall
in
subb
cmp
xor
dec
pop
ja
push
outsl
adc
das
push
adc
or
push
sti
xor
fnstcw
pop
dec
shll
push
out
out
push
add
repz
inc
push
imul
mov
jle
push
jns
mov
inc
sbb
jo
push
or
sbb
dec
sub
push
mov
dec
push
es
xor
xchg
dec
add
xlat
fstpl
popf
inc
nop
ljmp
aad
das
jecxz
rol
outsb
orl
cmp
add
test
clc
decb
xchg
push
out
mov
fcomi
enter
jb
test
add
hlt
mov
loope
pop
inc
inc
xor
in
ljmp
mov
pop
icebp
rol
dec
mov
iret
mov
push
dec
mov
xor
xor
mov
lds
jg
pop
push
js
in
jae
adc
mov
xchg
inc
lods
daa
ja
out
pop
xor
addr16
add
out
inc
mov
test
cmc
pop
push
insl
xor
icebp
pop
jp
mov
push
jae
js
stos
push
xchg
clc
mov
scas
sub
sub
sarl
adc
mov
push
repz
jp
xchg
pop
lds
jno
push
loope
dec
push
sti
inc
add
ds
imul
add
sub
ficoml
sub
andb
into
mov
les
sub
or
sbb
lock
dec
sti
sbbl
push
sti
insl
lret
sbb
mov
mov
mov
pop
pop
pushf
loop
xor
nop
sbb
ljmp
adc
idivb
jmp
aam
cmp
dec
push
mov
ss
mov
pop
enter
fnstenv
les
dec
add
mov
adc
leave
mov
mov
ds
nop
or
pop
push
push
and
popf
sbb
pop
and
mov
push
push
or
js
jle
pushf
sub
das
sub
fs
mov
sti
bound
int
test
sbb
mov
shll
enter
shlb
orb
ret
imul
in
pop
push
roll
inc
cltd
or
xor
sarl
rcll
sub
out
lods
push
test
addl
sti
mov
xchg
pop
mov
add
decb
push
test
mov
push
mov
xchg
mov
insb
inc
sub
inc
dec
sahf
clc
adc
out
in
icebp
inc
jmp
inc
ret
lahf
out
bound
xchg
pop
iret
xor
or
cmp
into
out
inc
mov
mov
addl
popf
addr16
adc
out
cwtl
mov
mov
rorb
pop
shlb
sahf
or
push
jge
test
mov
pop
movsb
push
add
icebp
test
mov
push
cmp
mov
push
aas
das
icebp
jge
dec
loope
adc
xchg
push
push
and
out
sub
xor
jae
sub
movsl
fidivrl
cmp
nop
push
inc
hlt
inc
xor
cmpsl
pop
and
cmc
or
test
adc
push
and
faddl
in
cmp
mov
ljmp
ds
push
adc
shrb
pop
das
lcall
xchg
add
cmp
and
add
dec
xchg
movsl
pop
mov
pop
mov
das
mov
jecxz
or
sbb
jp
lods
sarl
ds
aam
loopne
xchg
mov
rcrb
insl
push
into
loope
lea
adc
dec
jmp
mov
mov
xor
cltd
imul
and
clc
cwtl
repnz
icebp
jmp
sub
or
pushf
and
sbb
lods
popf
mov
std
orb
sbb
insl
test
shll
leave
cmp
xchg
push
mov
xor
sub
xchg
pop
mulb
add
clc
mov
insb
add
xchg
lock
mov
mov
add
dec
add
cmp
dec
mov
out
push
lret
inc
mov
mov
out
test
adc
daa
sub
leave
xchg
ret
adc
jecxz
cmp
dec
push
mov
scas
pusha
movsb
stos
or
pop
jne
lds
fldl
repz
movsl
push
aam
outsb
jne
or
jne
das
stc
ret
mov
cld
pushl
repnz
inc
mov
ror
jne
cmp
lret
cli
xchg
mov
pop
movsb
xlat
jns
clc
or
inc
sar
inc
mov
enter
xor
pop
cs
push
cmp
mov
js
pop
and
mov
mov
xor
dec
cmpsb
push
xor
mov
cld
pop
mov
js
test
clc
lds
jle
pop
ret
je
sbb
lods
jb
mov
pusha
aas
shrb
xor
mov
and
js
fdivrs
dec
pop
pop
sbb
arpl
aas
add
lock
jle
ret
popa
jns
and
mov
enter
dec
loope
stos
sbb
push
dec
add
mov
xor
sub
lret
into
lcall
mov
push
iret
push
inc
in
inc
jmp
mov
push
stos
xor
aas
mov
in
push
xor
shll
inc
aaa
test
cmpb
cmp
jg
or
push
sbb
or
data16
adc
mov
dec
dec
fdivrs
jne
adcb
pop
xor
push
ud2
popf
mulb
sub
sub
jno
and
mov
sbb
iret
push
movsl
pop
js
sbb
adc
pop
fmul
cmpb
das
aas
cs
pop
aam
pushf
movsl
arpl
fmuls
inc
imul
stos
loopne
outsb
std
fsubs
sub
sahf
jne
icebp
pop
dec
outsb
adc
mov
pop
das
pop
pop
sub
test
repnz
loope
fs
dec
jo
pop
lret
ljmp
lahf
jecxz
ss
outsl
aam
pop
pop
fcmovnb
add
cmp
loope
aam
mov
adc
ret
into
xchg
or
lea
addr16
lods
fisubs
adc
add
inc
clc
push
push
cmpsl
xchg
jle
aam
aas
adc
mov
cmp
cwtl
or
lods
jbe
sub
mov
dec
xchg
jl
je
add
insl
ror
push
cmp
loope
ljmp
dec
and
lods
mov
rcl
mov
dec
enter
cmp
cli
rclb
jnp
test
cmp
leave
add
aaa
inc
gs
pop
push
scas
add
stc
jp
ret
inc
sub
jb
movsl
call
adc
mov
jno
cld
into
xor
ss
dec
jecxz
daa
std
sub
xor
ljmp
cmp
dec
notl
mov
mov
aam
mov
movsl
pop
scas
add
dec
loope
gs
jle
xor
adc
dec
jp
ja
shrb
xchg
pop
repnz
xor
dec
cmp
mov
lock
pop
lcall
cltd
push
sbb
push
mov
pop
push
daa
push
mov
xor
push
pop
sbb
jl
xchg
into
pop
enter
push
push
movsb
inc
push
jle
imul
push
or
out
jnp
or
xchg
sub
bound
rcrl
cmp
je
push
in
mov
pop
lret
add
mov
arpl
push
sub
pop
dec
stc
test
insb
aad
pusha
call
mov
test
xor
popa
fistps
sbb
mov
add
out
into
aam
outsb
movsb
xchg
imul
arpl
fisubrs
or
idivl
pushf
push
ror
jb
ljmp
test
cmpb
cwtl
hlt
leave
out
fucomi
lods
jo
dec
cmc
xor
jmp
fisubs
or
ss
xchg
stos
aaa
imul
mov
mov
loopne
jno
xlat
in
leave
add
iret
jmp
mov
loopne
and
sbb
or
xor
xor
lods
arpl
adc
aam
xchg
imul
test
pop
pop
cmp
add
aas
movsl
pushf
xchg
cmp
jnp
in
add
int
mov
push
mov
div
cmp
outsb
pop
jnp
cwtl
mov
pop
cwtl
lock
enter
aaa
aad
cmpsb
mov
sbb
ret
cmp
sti
push
int
inc
negb
mov
or
dec
adc
jge
mov
out
cmp
jmp
into
out
loop
in
jns
sub
cmp
sub
adc
in
or
sub
cld
push
pop
mov
pop
sub
shll
xchg
inc
movsl
sbb
test
cs
call
test
mov
or
jl
cwtl
icebp
in
adc
pop
mov
mov
cmpsb
mov
sub
pop
and
lahf
cltd
mov
popl
cli
xchg
mov
mov
hlt
jo
insl
lea
cmp
cmpsb
cmp
dec
inc
mov
arpl
enter
jp
aaa
jg
int3
outsb
stos
push
hlt
xchg
mov
ret
fnstsw
push
sub
daa
aaa
ljmp
mov
sbb
jecxz
ja
aad
jge
retw
lret
xor
sarl
fwait
stos
lcall
in
in
fbld
and
jae
sub
aaa
lahf
push
arpl
mov
inc
jge
add
cmp
pop
and
aad
inc
nop
cmp
bnd
repnz
in
iret
xchg
jle
stos
mov
mov
cld
mov
xchg
shrl
add
or
mov
pop
fstpl
pushw
sbb
inc
xor
addr16
push
push
fidivrl
lds
cmp
in
inc
mov
in
stos
push
jmp
divl
out
test
push
loopne
std
fdivrl
addl
iret
int
fwait
mov
xchg
xchg
int3
push
xchg
jae
leave
mov
hlt
mov
lock
jno
in
xor
push
fcmovb
add
shlb
in
ss
and
xchg
and
jo
hlt
popa
pop
inc
xchg
xchg
pop
mov
and
loopne
sahf
add
xchg
rcrb
loopne
lock
jg
ja
rolb
popa
es
test
insl
fs
push
cmp
jle
sbb
xchg
cmpsl
mov
test
mov
int3
or
add
dec
loopne
sub
repnz
test
sub
push
push
imul
cmp
xchg
dec
dec
xor
popf
ss
adc
mov
aad
ljmp
outsl
pop
sbb
jne
fs
mov
mov
xchg
or
je
loopne
test
cmc
jne
and
cmc
fisubl
pop
pushf
das
dec
push
les
dec
int3
frndint
icebp
pushf
outsb
inc
pop
pop
outsl
mov
enter
cmc
push
sbb
lea
dec
cmp
imul
fs
stos
jp
mov
fimuls
jmp
jne
pop
outsb
mov
jne
inc
push
int
cmp
jp
mov
in
shll
cmp
adcb
mov
lock
test
int3
jl
sbb
push
mov
cmp
in
rcrb
ret
push
add
ljmp
stos
and
mov
xor
test
mov
out
add
bound
xchg
pop
sub
mov
daa
js
cld
into
push
jnp
lret
jbe
mov
fstpt
xchg
mov
js
xlat
xorb
mov
push
mov
hlt
cmp
push
mov
lock
xchg
jbe
pusha
add
jnp
or
movsl
scas
add
inc
inc
sbb
push
loop
mov
push
je
mov
imul
xchg
cmpl
add
inc
repz
jae
jecxz
mov
das
push
rcrl
dec
scas
or
and
sub
add
pop
xchg
in
and
or
and
je
cmp
mov
test
repz
sbb
int
push
pop
shrl
jne
aas
lods
dec
dec
imul
roll
test
and
mov
cmp
push
add
lcall
xlat
dec
call
push
sbb
add
pop
pusha
int3
inc
sub
scas
pop
stos
testl
jp
jo
lahf
in
scas
xor
or
pop
pop
mov
scas
inc
ror
ret
movsb
pop
cli
test
push
inc
adc
or
je
out
adc
bound
sbbb
jae
inc
xor
push
outsl
add
adc
test
mull
inc
lahf
sub
shll
test
clc
std
fmul
ret
inc
xor
or
stc
xchg
lea
push
push
scas
add
out
fmull
scas
jge
xor
push
iret
mov
fsubs
inc
adc
push
xorl
lret
fistps
enter
cld
inc
and
out
dec
aam
pop
lret
divb
mov
inc
and
push
push
mov
arpl
inc
or
insb
jl
pop
mov
aam
xlat
cmpsl
sbb
adc
xor
jle
xchg
mov
mov
push
leave
xchg
aam
fxch
pushf
ljmp
sbb
push
repnz
les
inc
push
cli
jl
lea
repnz
or
test
push
lds
loop
test
xor
pusha
int3
cli
add
mov
xchg
mov
rolb
test
add
shll
push
dec
cmp
nop
push
iret
mov
push
fnstsw
arpl
and
jle
pop
mov
sub
adc
cmp
fdivrl
dec
jl
or
test
xchg
mov
xor
mov
rsqrtps
test
mov
mov
sahf
mov
sub
push
mov
sbb
test
xchg
mov
insl
mov
lret
xor
add
xor
push
xor
sti
xor
push
xor
dec
aas
sbb
pop
mov
push
ss
lahf
ljmp
adc
jle
mul
xchg
js
jnp
ljmp
sub
inc
jno
les
dec
pop
mov
dec
mov
xchg
mov
cmp
out
inc
pushf
test
int3
leave
enter
pop
cmp
pop
mov
stos
adc
pop
fistps
mov
jge
ja
inc
inc
mov
sub
incl
jbe
pop
or
cltd
fs
jge
pop
add
push
aam
dec
fdiv
repz
scas
bound
clc
in
or
pop
in
dec
shlb
in
mov
bound
inc
aaa
int3
fnsave
in
push
pop
out
arpl
mov
gs
mov
inc
pop
cmpl
rorl
adc
add
mov
mov
lcall
mov
push
and
jmp
or
fiadds
inc
ret
rorb
test
fs
out
imul
dec
imul
xor
mov
cmpsb
cmpsl
fimull
mov
mov
rclb
sbb
mov
xchg
mov
sti
mov
jae
jmp
lods
inc
inc
cwtl
mov
flds
lahf
mov
out
xchg
add
xchg
xchg
jle
mov
gs
mov
in
clc
scas
rcr
out
cwtl
popaw
sti
push
pushl
jge
lahf
xchg
gs
mov
push
cmp
shrb
jb
cmp
testl
testb
out
cmp
fnstenv
cmpsl
add
cmp
mov
ljmp
xchg
pop
inc
cld
xor
xchg
sbb
loopne
pop
push
add
inc
mov
pusha
sub
sbb
mov
and
xor
xlat
pop
gs
mov
fstps
in
jae
xlat
rcll
push
mov
dec
lds
fbstp
cmpsl
xor
xchg
mov
orb
cld
xor
out
xor
call
lods
xchg
rolb
cmpsl
ljmp
in
negb
ret
ljmp
pop
dec
push
xchg
lret
sub
ss
or
dec
mov
pop
imul
sbb
cwtl
in
adc
pop
mov
jae
or
mov
xor
cltd
aam
out
jno
movsb
in
loope
loopne
roll
push
cmp
popf
test
inc
mov
movl
inc
jl
imul
cmp
push
movsl
int
in
fwait
cmp
adc
cmpsl
and
ret
lds
movsl
aam
ret
jne
inc
shr
adc
cmp
movsl
fisttps
push
ret
aam
mov
inc
in
int
or
cs
in
lcall
or
dec
dec
mov
movsb
pusha
or
fwait
pop
cmp
mov
sub
cmpsl
xor
sti
adc
idivl
lds
adc
sub
mov
pushf
mov
outsb
cld
fdivs
inc
push
enter
xchg
adc
cmp
jle
cmp
cwtl
iret
mov
aad
mov
cmp
add
lea
rcr
je
xchg
lret
pop
cld
add
pop
push
dec
in
mov
stos
pop
rolb
push
mov
popa
adc
dec
mov
mov
ss
popa
or
es
icebp
lret
adc
out
push
sub
dec
icebp
pmaxsw
mov
add
outsl
mov
sbb
inc
sub
pop
je
mov
jmp
repz
adc
rcll
jmp
nop
ss
loopne
mov
add
and
xor
jno
add
addr16
and
daa
xchg
mov
arpl
ss
dec
sub
call
daa
xchg
fisubrl
pop
fxch
addl
mov
sahf
out
imul
mov
imul
cmp
mov
mov
push
fldenv
lods
rcrl
ds
imul
jae
sti
ret
into
mulb
jmp
daa
jle
fwait
cmp
xor
pop
test
and
push
aas
xor
enter
mov
xchg
jno
inc
lret
leave
test
out
mov
inc
out
xchg
out
dec
cmp
pop
fnstsw
adc
ret
movsb
mov
into
popf
dec
pop
xchg
jb
lret
in
jno
shll
add
bound
jbe
dec
outsb
fisubrs
pop
rclb
xor
cli
or
arpl
aam
clc
push
mov
les
mov
test
xor
loopne
add
jmp
mov
lcall
mov
pusha
and
xor
xchg
jae
push
and
cmp
data16
pop
mov
sbb
stos
xchg
repnz
mov
dec
add
leave
jbe
mov
mov
outsl
in
adc
aad
inc
mov
cmpsb
out
fnsave
adc
cmp
jmp
add
inc
mov
fsubs
add
add
sub
ss
jecxz
mov
jb
inc
add
cmp
sti
imul
push
in
xor
inc
sub
and
mov
into
or
mov
dec
jbe
test
and
push
or
push
testl
add
jne
or
jp
inc
data16
clc
in
lods
adc
add
mov
addr16
pop
sub
fnsaves
mov
nop
mov
pop
in
mov
and
je
roll
jl
lcall
inc
inc
paddsw
push
xor
mov
pop
sbb
cs
shrl
out
cs
int3
push
dec
pop
and
ficoml
dec
ss
add
push
imul
mov
push
decb
push
mov
adc
addr16
xchg
cmp
into
inc
loope
pop
mov
push
jnp
cli
mov
or
push
rorb
sbb
cmc
pop
ret
add
ss
and
stc
inc
push
add
into
div
and
pop
test
sar
in
scas
cwtl
lcall
push
pusha
cwtl
lcall
in
push
cmp
and
outsl
push
loop
mov
out
loopne
fnstenv
lcall
mov
mov
fidivrs
sahf
data16
loopne
xlat
or
leave
push
shr
push
mov
jp
cmc
mov
and
enter
in
xchg
push
mov
dec
pop
sbb
jno
arpl
inc
sub
icebp
ficoml
ss
test
in
int
mov
mov
lcall
adc
repz
add
adc
dec
cld
xchg
dec
jle
in
icebp
in
xchg
ret
dec
xchg
lcall
ret
add
or
jnp
sub
adc
idivb
out
fisubs
jbe
lret
xchg
popf
xchg
jb
inc
mov
sti
in
jp
lret
pop
and
lods
sub
mov
sbb
into
dec
pop
and
movsl
mov
add
ss
pop
cmp
jmp
push
push
enter
test
or
adc
fcmovnu
dec
gs
scas
aad
mov
mov
dec
push
cld
clc
cli
jb
xor
jl
imul
outsb
jp
push
fwait
mov
int3
mov
xchg
loope
sbb
bound
sti
mov
popa
jmp
lods
jp
mov
cli
pop
orb
xor
push
xchg
mov
and
pop
sbb
stos
notl
xchg
mov
mov
lea
test
sub
mov
jb
test
out
jno
ljmp
dec
lea
dec
mov
pop
adc
aaa
adc
pop
mov
adc
mov
fdivrl
xchg
and
iret
loopne
inc
imul
das
jnp
sub
mov
sbb
mov
sti
mov
pop
mov
fs
dec
pop
jl
push
movsl
and
enter
pop
mov
cmp
sbb
ds
scas
and
ret
repnz
in
pop
pop
out
je
sarb
frstor
icebp
mov
mov
add
lds
sub
xlat
in
sbb
mov
lea
xor
ds
imul
fidivs
sub
fcomps
xchg
xor
inc
scas
arpl
adc
jmp
jns
out
and
movsl
xchg
pmaxub
pop
cwtl
xor
jge
daa
ss
xor
jge
stos
fstpt
bnd
add
ficomps
sar
xchg
jmp
fistpll
movsl
push
out
cs
and
adc
pusha
ret
and
and
movsl
out
inc
jno
add
pop
adc
fwait
paddsb
lret
sub
sub
int
pop
shll
dec
mov
cld
popf
lock
mov
jbe
push
jmp
in
mov
adc
mov
mov
pop
and
mov
xchg
push
push
imul
sbb
adc
sbb
xor
js
jno
test
inc
cmpsb
cmpsb
jno
or
nop
mov
iret
jb
enter
movnti
es
lock
mov
xor
sub
fwait
arpl
pop
stos
and
push
divl
push
mov
icebp
rorl
sub
or
sub
mov
lcall
pop
aas
add
lret
hlt
jg
jae
pop
mov
and
stos
jl
xchg
push
aas
or
cmp
jge
and
xor
sub
or
mov
mov
fldenv
hlt
ljmp
ficoms
es
test
mov
adc
cli
shlb
out
push
push
jnp
stos
dec
or
sbb
fs
mov
lock
les
or
fnstcw
lock
gs
mov
and
insl
leave
movsb
into
pop
add
and
in
ss
leave
or
cltd
test
dec
mov
inc
scas
xor
lret
jg
stos
inc
call
movsl
ljmp
into
mov
rcl
nop
mov
push
and
push
scas
iret
mov
pop
mov
in
movsl
mov
xor
test
insl
sub
mov
cs
mov
sbb
cmpsb
mov
jg
subb
ss
cmp
in
test
xor
arpl
and
imul
popa
jge
dec
mov
sbb
addr16
aad
pop
or
pop
lods
mov
add
scas
sbb
dec
or
xor
xchg
fld
jmp
or
cmp
inc
data16
mov
ret
pop
cmpsl
mov
scas
mov
fidivrs
pop
xor
dec
push
push
xchg
mov
fsubs
into
addr16
mov
push
xor
add
push
scas
xor
xchg
insb
cwtl
sub
in
adc
stos
lcall
out
mov
in
mov
sahf
ds
in
or
out
xchg
aas
dec
xchg
hlt
movsb
mov
pop
insl
test
sub
dec
inc
push
xchg
mov
xlat
and
jae
scas
push
pop
bsf
sti
imul
push
stos
pushf
aad
add
push
mov
jne
and
dec
adc
lcall
pop
mov
ljmp
add
mov
mov
inc
sbb
fbld
push
xor
mov
filds
sahf
outsl
dec
mov
into
data16
lods
push
add
call
push
test
mov
mov
arpl
pop
lea
subb
lods
idiv
cmp
jb
pop
out
mov
dec
int3
inc
ds
lods
ss
cltd
shrb
mov
jecxz
and
mov
mov
jmp
jnp
or
das
inc
outsb
or
aaa
or
std
jae
nop
mov
mov
idivl
into
aam
jle
orl
lea
add
out
js
movlps
xor
mov
ret
lret
in
mov
jecxz
loopne
push
cmpsb
popa
adc
mov
mov
inc
cmpsl
sbb
ret
jnp
aam
push
mov
mov
hlt
sub
mov
pop
xor
scas
setne
add
repnz
fwait
xor
mov
nop
jne
fisttpl
clc
icebp
pop
ss
pop
mov
rcll
shr
cld
lahf
popa
stc
cmp
mov
sbbb
bound
inc
aas
jl
fwait
movsl
jns
test
iret
inc
jae
test
fcmovne
mov
mov
outsl
sarl
jle
jle
loopne
sub
xor
in
xchg
xorl
jl
out
inc
jmp
cmp
lret
sub
and
outsl
sub
popf
xor
jnp
pop
addr16
xor
mov
push
test
pop
add
shlb
dec
jmp
xor
sbb
sahf
xchg
push
dec
mov
outsb
adcl
daa
ja
mov
stos
in
data16
cmp
mov
rol
push
shrb
fistl
or
cmp
ret
mov
insl
push
cmpsl
push
cmp
jl
movsb
ss
mov
add
aam
push
fsubs
sub
repnz
pop
push
mov
mov
sbb
mov
lods
movl
jge
mov
mov
sbb
movsb
dec
or
sti
jnp
mov
jle
sub
pop
sub
mov
mov
xchg
xchg
add
imul
movsl
cli
add
insb
lahf
fs
xchg
outsl
fldl
movl
popa
jb
adc
cmpsl
hlt
ss
ffreep
cmp
mov
in
add
lock
mov
insl
dec
divb
vmovntps
sbb
bound
rcrb
in
add
bound
and
mov
xchg
jecxz
or
filds
jo
imul
in
pushl
and
add
out
mov
pop
aad
sbb
cmpb
mov
push
and
jbe
xor
notl
mov
jbe
cli
push
addr16
outsb
xchg
lret
jne
sbb
scas
test
andb
add
movsl
dec
sahf
je
mov
jno
out
mov
in
xchg
test
out
insl
add
addr16
ds
pop
pushf
sbb
inc
adc
cmpsb
cwtl
inc
lods
lret
or
aas
mov
adc
fdivrl
shll
lea
xchg
imul
shl
fists
ror
loope
mov
jo
push
push
leave
mov
ja
jns
ret
gs
push
int3
sub
adc
repnz
lods
sub
movsl
pop
mov
jmp
ret
xchg
je
inc
mov
jle
std
adc
ljmp
push
and
pop
pop
mov
pusha
xor
in
mov
loope
pop
and
inc
repz
sbbb
jno
fldl
sub
nop
aam
pop
js
dec
xor
jbe
pop
add
in
inc
mov
or
dec
sub
mov
out
arpl
push
sbb
push
sahf
cld
test
sahf
push
daa
xor
dec
mov
rcr
dec
sti
rcrb
ljmp
stc
imul
mov
inc
cmp
xchg
ret
test
orb
push
inc
cmp
mov
pop
mov
dec
in
fninit
sbb
into
out
lock
mov
cwtl
iret
stc
adc
repnz
pop
xlat
mov
cmpsl
and
mov
inc
inc
sbb
cwtl
les
mov
imul
mov
icebp
xor
imul
in
sub
jg
inc
movsl
jmp
std
hlt
aad
dec
sti
mov
loop
adc
daa
jb
cli
mov
xchg
test
imul
pop
pop
je
inc
pop
inc
xor
ret
fst
incl
xchg
test
push
push
insb
subl
popf
or
xchg
cwtl
mov
call
std
xor
call
or
dec
mov
mov
sarb
jmp
out
jge
iret
xor
fimull
add
test
add
sub
popf
jbe
clc
adc
mull
loop
imul
or
out
in
mov
sbb
fists
fcom
dec
or
addr16
arpl
mov
mov
mov
loopne
mov
in
cmp
jge
jmp
xor
enter
aas
add
lea
fisttpll
cmpsl
test
dec
mov
push
gs
jl
ljmp
loop
js
jl
std
lcall
out
ret
sti
lret
outsb
sub
outsl
scas
push
mov
popf
ljmp
xor
mov
test
lods
shlb
je
bound
xlat
push
cmc
sbb
leave
mov
pop
sbb
rol
xor
pop
stos
lcall
cmpb
testl
or
addr16
iret
jns
mov
clc
xor
adc
and
pop
dec
adc
imul
xorl
das
rclb
inc
push
adc
test
cmp
xchg
or
pop
lret
cmp
mov
jg
dec
cmp
out
arpl
fsubrs
add
outsb
ret
and
cmpsb
jp
push
or
add
lods
push
test
movsl
scas
xor
fiaddl
mov
xchg
mov
bound
movl
pop
gs
inc
lock
mov
imul
push
fisubrl
dec
xchg
mov
mov
mov
jg
insl
hlt
jmp
xor
pop
iret
lret
mov
dec
or
jmp
pop
into
and
or
push
out
mov
mov
push
xchg
mov
or
sub
idiv
dec
stos
subl
idiv
or
jae
rol
mov
int
adcb
pop
out
xadd
in
add
imul
and
rol
ret
mov
jb
int
mov
fidivl
mov
mov
push
pop
pushf
inc
cmc
ret
xchg
dec
ljmp
in
mov
pop
addr16
ss
push
daa
ficoml
mov
mov
sbb
or
jbe
push
nop
neg
push
in
mov
xor
fsincos
notb
lods
jmp
daa
lcall
xor
in
lea
stc
mov
in
mov
xchg
jb
ret
xchg
jge
adc
out
inc
sub
cli
mov
cmpsl
out
nop
xlat
xlat
pop
cmp
stc
pop
dec
rcl
in
ljmp
mov
adc
nop
popa
popa
aam
test
mov
enter
cmp
sbb
dec
sub
cmp
lret
scas
sub
ds
xor
das
fadd
pushf
rcrl
rcrb
or
out
jmp
lret
pop
leave
inc
xor
push
gs
ret
push
mov
jb
mov
jb
mov
popf
in
jl
ret
test
xchg
jg
repz
lret
jl
arpl
jae
lret
mov
mov
xchg
xchg
mov
xchg
cmpsl
popa
ret
xlat
daa
lcall
mov
in
bound
lret
cmp
cmp
cld
lahf
cmp
xor
mov
rol
sub
bound
adc
aad
pop
push
sbb
mov
ftst
or
jmp
mov
repz
das
fsubl
cmpsb
mov
cwtl
sbb
pop
fsubrs
pop
jmp
jae
cwtl
loope
out
xchg
or
and
xor
inc
lea
imul
adc
es
enter
shll
add
inc
lds
inc
mov
je
pop
out
or
add
faddl
xor
xor
in
fs
add
roll
in
add
stos
in
inc
icebp
xchg
or
xchg
xchg
inc
push
imul
sahf
and
in
cs
orl
fwait
push
mov
outsl
cmpsl
rcrb
mov
outsl
andl
in
aas
sub
or
dec
pop
or
push
out
dec
cli
dec
loope
pop
les
scas
sbb
push
xchg
pop
push
jg
jbe
xor
hlt
mov
jb
pop
mov
imul
imul
mov
and
add
int
jno
es
push
dec
je
or
jae
cwtl
jp
cmp
lock
inc
ljmp
sbb
push
rorl
mov
inc
jp
aad
pop
leave
pop
or
ret
arpl
out
push
xor
mov
dec
add
sub
mov
jo
or
popa
jg
fildll
add
mull
pop
subb
or
pop
aad
sarl
mov
out
int
jmp
cli
pop
dec
repnz
dec
lods
fbstp
dec
inc
testl
mov
mov
dec
cwtl
aaa
xchg
mov
shlb
inc
arpl
test
inc
dec
pop
dec
dec
mov
inc
call
subl
es
mov
shrl
and
cmp
sbb
pop
rcrl
push
push
jmp
cmpsl
aam
pop
pop
push
in
dec
jno
fidivrl
and
addr16
mov
call
ja
cwtl
in
xor
icebp
mov
jae
vpunpckhdq
cli
ret
shrl
mov
outsb
repnz
dec
das
mov
sub
pop
aas
js
jmp
cltd
xlat
lds
in
je
decb
bound
clc
mov
and
push
test
cwtl
test
bound
sub
mov
pop
and
sti
movsl
push
das
std
or
dec
jne
andb
add
je
mov
push
or
arpl
stc
xor
and
leave
in
aam
dec
or
cmc
dec
int3
lds
cltd
sub
out
daa
jge
ds
test
xor
repz
pop
mov
mov
ss
pop
imulb
mov
out
scas
jnp
sbb
jns
addr16
dec
imul
popa
aaa
dec
idivb
xchg
outsl
imul
int
ja
pop
or
mov
fistpl
repz
mov
push
push
dec
loop
cmc
mov
dec
mov
push
push
movsb
cs
mov
shlb
sarb
mov
xchg
fwait
xchg
mov
es
dec
ds
cli
pusha
pusha
cwtl
sub
mov
aad
ljmp
adc
test
pusha
xchg
ficoml
jo
loopne
in
xchg
and
mov
mov
cld
sub
lods
sar
insl
dec
insl
or
or
adc
pop
cmp
movsl
jmp
mov
xor
and
pop
mov
push
mov
and
outsl
cmp
xchg
xor
cli
cmp
movsb
call
or
nop
pop
aaa
lret
xorl
pop
loope
and
sti
vcvtps2pd
leave
add
xchg
xchg
aad
pop
xchg
out
push
dec
inc
jb
fwait
arpl
xor
test
add
dec
fwait
int3
dec
sbb
sbb
adcb
fbld
push
lods
inc
sbb
fisubl
pop
add
out
shr
sub
mov
in
lahf
pop
lret
cmp
push
dec
aas
rcl
xchg
outsb
xchg
push
outsl
mov
cmp
inc
push
cmc
sahf
dec
ret
mov
lret
test
mov
or
ljmp
jle
cmpsb
bound
lret
ret
movsl
mov
mov
fisubrs
cmp
xor
rcll
jg
mov
sahf
and
test
mov
cmpsb
fcmovbe
cmp
in
repnz
xor
or
insl
fisubrs
sbb
mov
mov
and
sti
xchg
cmp
pop
add
or
cs
push
jle
push
mov
shll
mov
pop
push
out
cmp
mov
ret
inc
dec
stos
mov
add
xchg
jmp
ss
adc
push
das
and
jge
mov
insl
fs
xor
or
mov
fcoms
ds
mov
adc
push
push
add
mov
dec
mov
cs
lret
add
pop
lock
xlat
inc
ret
leave
lods
out
push
or
xor
mov
inc
aam
in
cmp
mov
out
xchg
inc
ljmp
in
push
stos
call
int
pop
je
aaa
xchg
enter
outsl
inc
imul
cmp
pop
fsubl
loopne
cmp
fmuls
xchg
jp
dec
xchg
outsb
scas
mov
mov
sbb
dec
sbb
ret
testb
pop
cmp
adc
xor
leave
push
push
incl
test
xchg
dec
popf
sbb
imul
mov
test
pop
loope
outsl
mov
jmp
sbb
or
gs
hlt
mov
in
inc
mov
sbb
roll
insb
mov
mov
or
push
pop
daa
imul
nop
ds
and
les
popa
mov
aad
nop
or
stc
lret
xchg
aaa
inc
mov
push
mov
je
pop
xor
dec
aad
leave
fwait
mov
popf
push
adc
push
mov
in
call
test
sti
lods
mov
stos
cmp
out
test
and
cmp
mov
add
pop
cld
das
sti
jae
pop
outsb
dec
into
iret
sbb
adc
add
fisubs
call
iret
mov
or
inc
addl
sub
test
mov
je
in
out
ds
fwait
dec
xchg
adc
add
gs
dec
jnp
mov
push
mov
lahf
lds
xchg
call
push
ret
daa
std
or
ja
aam
test
std
xchg
insl
aaa
cmp
cmp
push
ret
xchg
icebp
push
adc
jg
clc
sub
nop
jp
scas
inc
leave
lock
jne
inc
aas
jno
rorl
scas
push
or
mov
movsl
out
sbb
movsl
cmpsb
cmpb
in
sbb
sbb
jg
add
or
inc
mov
dec
ljmp
push
mov
push
mov
movsl
loop
shr
lea
testl
test
loop
cwtl
sbb
mov
push
aad
push
mov
or
pop
pop
rorl
mov
cmp
push
push
enter
xchg
sbb
scas
mov
sub
cmp
or
sbb
js
mov
popa
pop
xchg
mov
aas
dec
rcr
sub
mov
xchg
cmpsl
dec
les
cmp
push
or
stc
or
fidivrs
or
nop
jecxz
gs
test
jnp
loop,pt
movsl
mov
inc
fdivp
adc
fucomi
xchg
mov
push
jge
sub
gs
inc
pop
mov
push
xchg
sbb
adc
add
mov
jecxz
inc
sub
jnp
icebp
jns
repnz
or
push
adc
xchg
cmpsl
push
sub
ds
lahf
push
bound
aaa
cmp
adc
jo
aad
or
and
movsl
push
sbb
gs
and
loop
sbb
cltd
pop
mov
jae
add
sub
nop
loop
dec
sbb
cltd
mov
mov
idivl
scas
cltd
mov
or
fmulp
scas
lea
inc
jnp
jecxz
je
enter
sbb
push
dec
xchg
xor
sub
mov
cld
mov
lods
jp
sbb
push
mov
ja
jno
mov
in
outsb
jecxz
and
mov
notl
xchg
hlt
push
lods
scas
push
les
aad
pop
repz
mov
loopne
jge
mov
in
and
mov
xchg
and
xor
or
bound
idivl
mov
sbb
das
fstps
test
dec
sbb
stos
sub
repz
mull
popa
test
leave
iret
push
inc
fs
pusha
or
and
push
mov
mov
mov
out
das
xchg
xchg
pop
fwait
loop
mov
arpl
in
lcall
mov
xchg
mov
repnz
lods
and
das
pop
push
int3
daa
in
andb
cmp
cmpsl
mov
xlat
mov
sbb
push
mov
lods
out
lretw
out
and
lahf
loop
jle
or
clc
mov
mov
es
aam
or
or
push
movsb
jnp
dec
dec
std
push
into
imul
pop
nop
in
xor
lahf
rcl
mov
mov
in
push
dec
lods
cmp
out
push
loop
pop
ljmp
movsl
ljmp
sahf
repz
mov
jo
push
fwait
sub
pcmpeqw
loop
pop
push
es
adc
inc
sbb
test
jo
cmpsb
nop
lds
push
cmp
mov
cld
jmp
inc
mov
xor
cmpsb
mov
insb
repnz
or
es
mov
daa
jg
xlat
and
sub
mov
loop
xor
dec
add
inc
mov
sub
jae
sbb
sbb
jg,pt
in
inc
fistps
lret
jp
jge
sbb
divl
std
add
std
lock
lret
faddl
jge
movsl
inc
push
jle
adc
push
mov
rolb
jns
loopne
outsl
in
je
mov
pop
jb
rorl
cmp
or
sahf
sti
sbb
sub
arpl
call
xor
enter
mov
sbb
add
push
dec
mov
mov
lds
stc
push
stos
mov
jb
xchg
cmp
je
inc
jp
sub
jnp
jno
or
sbb
ror
lret
dec
push
jnp
cmpsl
push
out
sbbl
inc
add
push
and
lds
cwtl
sub
xchg
jge
das
add
shll
stc
movsb
call
xor
fildll
out
ret
aad
dec
lea
call
cld
mov
xchg
xchg
fildll
arpl
bound
push
aam
jge
repnz
mov
inc
push
inc
and
pop
insl
push
popa
shlb
jg
xor
js
fsubl
pop
xlat
mov
js
inc
negb
sub
arpl
fwait
pop
or
int3
cmp
inc
sti
loope
cmp
mov
push
jbe
sbb
dec
sub
pop
dec
in
insl
jle
jl
ffreep
int
mov
xchg
scas
inc
scas
js
and
fdivs
xchg
jmp
clc
mov
sub
adc
ss
fsubr
or
and
push
mov
jo
cli
or
aad
push
or
mov
xchg
xchg
stc
add
cmp
aad
mov
jns
ret
stos
jl
mov
jnp
mov
bound
addb
in
mov
movsl
jo
cwtl
sub
and
xchg
pusha
pop
sub
scas
fwait
mov
pop
xchg
inc
xchg
jecxz
xchg
mov
call
sbb
movsb
push
push
adc
jg
mov
mov
in
gs
or
out
mov
add
mov
dec
xchg
inc
add
mov
repz
iret
repnz
and
or
movsb
test
rorb
inc
or
ljmp
outsl
into
scas
jle
inc
xchg
lds
and
stos
mov
jbe
dec
jne
dec
aam
xchg
lods
jns
pavgw
sub
inc
cmpsb
lods
push
jae
jge
sti
dec
pop
call
xchg
pop
loope
push
jne
insl
sub
jnp
lea
cmc
cli
xlat
pushf
mov
mov
daa
int
cmpsb
ja
push
fbstp
sti
das
cli
jae
xchg
es
jne
lods
xor
test
fldt
or
es
js
cmpsb
ja
rolb
inc
roll
lret
popa
pushf
or
aad
adc
fistps
and
xor
or
fidivrs
mov
or
ret
sbb
in
add
fisubl
dec
xor
bound
enter
test
sub
cmp
test
aam
adc
adc
sbb
js
leave
dec
xchg
mov
fstpl
sbb
adc
outsb
sub
ret
nop
fs
outsl
pop
cmp
add
add
jno
ret
jl
inc
fsubl
addr16
aaa
cmp
shll
pusha
jl
jmp
pop
jp
pop
jno
mov
inc
icebp
mov
xchg
pop
xor
dec
test
mov
inc
ret
in
cltd
aaa
push
rcrb
es
ret
adc
inc
push
ret
adc
call
and
in
cmc
test
push
jmp
dec
push
out
jo
sbb
sub
mov
inc
aad
or
sti
push
ret
test
std
cld
lcall
adc
cmpsb
ret
punpckhdq
rcrl
mov
stos
inc
cmp
adc
inc
mov
and
push
adc
mov
loopne
mov
cmp
or
push
leave
push
mov
aam
pop
hlt
aas
mov
pop
push
xchg
jne
pop
clc
jbe
jo
gs
mov
xor
cmp
pop
mov
daa
stos
loop
dec
dec
xchg
xchg
mov
cmp
in
subl
dec
mov
into
std
test
lret
mov
sbb
imul
inc
test
and
dec
sub
jbe
adc
dec
xchg
insb
cmp
inc
lods
sti
clc
shrb
pop
jae
rclb
ret
ds
mov
pop
fwait
push
es
lret
aaa
or
xor
mov
and
mov
or
mov
cs
nop
bnd
add
or
sub
xchg
push
in
mov
xlat
pop
hlt
test
das
repnz
scas
gs
lahf
lods
push
fwait
pop
mov
mov
int3
std
orb
mov
das
aas
or
and
inc
das
pop
cld
cmc
scas
daa
imul
and
es
mov
mov
aas
adc
orb
sti
stos
in
divb
cmp
push
push
jmp
cli
mov
loope
out
jecxz
dec
xor
test
addr16
xorb
scas
push
shrl
dec
pop
add
sub
dec
jns
pop
fiaddl
pushf
pushf
cmp
xchg
mov
out
aad
dec
cmpsb
jmp
fiadds
jne
loop
dec
mov
inc
push
je
clc
adc
lret
jno
jnp
and
stos
jne
imul
and
fucomip
shlb
sub
xor
jb
enter
mov
es
gs
and
sti
mov
int
in
push
mov
add
ja
movhps
push
sub
repnz
xor
xor
or
dec
test
push
mov
pop
fmull
xor
lods
shlb
jmp
cmp
push
mov
sub
mov
or
xchg
and
pop
sbb
lcall
dec
cltd
fwait
cmpsl
jle
mov
pop
lea
ret
sub
nop
popf
lcall
repz
inc
xchg
out
cmp
pusha
and
pusha
sbbl
fistl
mov
aam
adc
xor
loopne
inc
repz
out
call
jmp
divb
pop
pop
xor
xor
cld
or
sbb
pop
cwtl
sbbl
pushf
mov
dec
cmp
xchg
or
inc
inc
jmp
je
jl
inc
lahf
jmp
out
or
out
adc
dec
test
lds
jecxz
sbb
aad
jg
mov
cmp
jno
sub
in
jecxz
cmpsl
xor
sarl
jle
out
mov
js
adc
pop
cmp
mov
dec
pusha
nop
sub
xchg
push
negl
xlat
pop
loopne
mov
adc
add
mov
fsubr
popf
mov
loopne
je
in
popl
movsl
pusha
cltd
push
add
pushf
fcomps
cmp
fcmovb
fildll
and
sub
mov
xchg
cmpsl
bnd
push
outsl
dec
jb
or
mov
pop
mov
mov
pop
mov
jns
inc
or
in
pop
testl
mov
jge
sbb
testl
and
add
jo
add
test
das
adc
lahf
pop
mov
pop
ja
js
out
inc
outsl
push
adc
add
iret
andb
push
lret
cmp
xor
xchg
add
sbb
sub
cmp
xor
into
movntq
jle
xchg
lret
sbb
pop
or
rcll
sbb
dec
mov
repnz
into
mov
xchg
rcrl
inc
into
jmp
sti
mov
jle
push
push
xchg
aam
fcmovnb
jmp
xchg
jp
sbb
in
jp
pop
lods
dec
add
xchg
xor
stos
lods
or
inc
add
and
add
and
out
mov
andb
shr
scas
je
push
lods
sahf
dec
aam
stos
inc
push
push
xchg
orb
jge
fbstp
les
mov
out
cld
adc
add
xor
jmp
dec
add
nop
cli
outsb
cmpb
jns
inc
in
ret
ss
mov
push
mul
or
xlat
pop
inc
dec
push
sti
xchg
sub
adcl
aaa
sub
ficoms
mov
xchg
inc
outsb
pop
cs
inc
adc
into
mov
and
lock
ja
ficompl
inc
inc
sbb
push
sbb
ss
ljmp
add
shl
ret
mov
nop
loopne
jo
pop
sub
aaa
mov
cs
es
inc
push
lret
sbb
xchg
rolb
adc
or
xor
lock
sub
daa
loopne
shlb
fs
jne
jp
xor
jmp
fwait
test
sar
and
nop
data16
adc
outsb
fadd
nop
bound
mov
xor
push
repnz
mov
sub
int
scas
icebp
and
push
or
mov
mov
push
leave
rcrb
cld
gs
xor
movsb
idiv
sbb
call
stos
lods
push
or
es
adc
rcrl
sub
repz
mov
repz
mov
or
adc
mov
ror
jp
cwtl
data16
mov
xor
mov
inc
add
sbb
sbb
mov
pop
testl
xor
mov
jp
cmp
sbb
sahf
dec
imul
push
jae
sbb
jp
push
pop
pop
xor
xchg
lret
mov
imul
xchg
in
and
int
fisubrl
xlat
xchg
je
xchg
mov
int3
mov
mov
mov
sar
mov
cmp
js
or
push
push
push
das
and
in
je
mov
xchg
stc
lds
pushf
mov
xchg
out
mov
jmp
rcrb
pop
cmc
pop
inc
add
xorb
add
push
and
xchg
repnz
and
sub
insb
sbb
in
test
adc
xorb
sbb
sahf
sub
mov
shll
mov
stos
push
jg
daa
mov
pop
push
testl
dec
cmp
add
mov
sub
ficompl
add
scas
std
jecxz
xchg
pushf
ja
cmp
mov
cmpsl
inc
jecxz
int
mov
pop
push
ds
insb
std
icebp
lea
jne
or
adc
cmpsl
cmp
jecxz
mov
scas
hlt
mov
add
fs
mov
cmp
jmp
insb
jle
stos
and
mov
adc
inc
xor
lods
xchg
out
mov
add
mov
test
mov
test
cmpsb
cmp
pusha
fstpl
lcall
add
inc
stc
xor
push
lea
jp,pn
add
dec
hlt
arpl
pop
mov
enter
xor
sub
out
cmp
rclb
insl
mov
xchg
adc
insl
popa
xchg
xor
adc
xchg
adc
add
cmp
sti
mov
scas
sub
pop
daa
mov
cmp
cld
xchg
sti
inc
sub
repnz
push
jnp
inc
mov
lods
jmp
or
sbb
subl
in
cltd
add
sub
ss
stos
pop
outsl
cmp
jae
jnp
fldenv
adc
stc
mov
push
ss
shr
push
idiv
inc
mov
sahf
adc
sarl
add
divb
jg
cmp
aas
hlt
jne
or
pop
aad
push
idiv
xchg
and
cmpsl
data16
dec
mov
add
lahf
pop
paddsw
xchg
out
rclb
fnsave
or
xchg
jecxz
lock
jne
inc
pop
cmp
push
imul
mov
cld
les
not
xlat
push
lcall
loop
push
xchg
in
and
hlt
pop
call
xchg
jle
loop
adc
mov
mov
mov
mov
adc
test
ret
sub
in
pop
fs
mov
das
insl
movsb
xor
icebp
xlat
shl
ss
sub
dec
sub
jle
mov
fidivrs
mov
add
insl
je
inc
adc
js
dec
loopne
jae
ffree
outsl
in
pop
int3
push
xchg
jno
addr16
xchg
repz
jl
flds
std
pop
hlt
xchg
cmc
fiaddl
add
mov
or
xchg
out
sbb
dec
incl
fs
xor
movsb
xchg
adc
cld
mov
adc
iret
mov
jo
rorl
test
mov
lcall
push
xor
ljmp
cmovp
xchg
repz
out
pop
xor
repz
pop
aam
aaa
js
xor
lods
int3
add
in
dec
adc
pop
xchg
xchg
mov
jg
mov
ss
arpl
push
sub
xchg
jg
inc
in
mov
fidivrs
and
scas
fcoms
scas
pop
dec
lea
aam
es
outsl
outsl
bound
aad
addr16
daa
out
movsb
daa
jns
fcomps
push
sub
ljmp
cmc
aaa
jl
daa
mov
push
std
dec
adc
cmp
outsl
rclb
out
lock
jo
push
fwait
fwait
jge
stc
popf
sub
dec
insb
adc
psubusb
lcall
sub
mov
xor
inc
adc
mov
add
mov
push
dec
dec
ja
mov
std
jle
mov
sub
mov
loopne
jmp
jmp
and
inc
pop
test
push
push
lret
jecxz
xchg
int
divb
xchg
push
aam
in
inc
and
sti
fbld
adc
pop
xchg
in
sbb
sahf
mov
loopne
push
mov
test
cmpsb
lods
xchg
xorl
dec
mov
inc
popa
push
push
stos
lret
jecxz
mov
mov
push
mov
adc
add
and
inc
sbb
xlat
xchg
sub
cs
lret
loope
mov
popa
rcl
push
outsw
das
hlt
loop
mov
mov
cli
and
scas
repnz
and
arpl
jecxz
and
cwtl
mov
addr16
imul
mov
push
push
xchg
jmp
xchg
jae
mov
je
imul
and
and
test
push
test
push
jge
push
xor
mov
add
push
sti
jmp
mov
sti
add
adc
lcall
test
xchg
or
push
add
ds
mov
push
jnp
xor
xchg
clc
jmp
test
loopne
fisttpl
lret
movsb
mov
orb
add
xor
dec
aaa
mov
jnp
add
mov
ds
popf
shl
cwtl
js
testb
enter
test
lahf
mov
insb
jp
rcl
dec
andl
out
and
mov
xchg
out
or
cmp
push
cld
fdivrp
shrl
out
adc
fmuls
mov
or
pop
mov
xor
es
dec
insl
repz
xchg
mov
mov
out
lret
data16
pop
les
xor
hlt
or
repnz
sbb
iret
dec
cmp
sahf
dec
out
and
adc
sbb
out
pop
and
or
push
stc
js
sub
test
test
test
std
aas
inc
nop
mov
pop
pop
notl
or
mov
sbb
cmpl
xor
mov
inc
insl
dec
pusha
std
push
jo
rcrb
push
in
jmp
add
push
sbb
lods
popf
lret
push
ljmp
repz
mov
shll
jne
mov
into
movsl
or
ss
scas
cmpl
lock
add
mov
test
or
adc
fs
out
fucomip
add
adc
loope
pop
inc
add
mov
repz
fisubrs
ja
sbb
stos
lds
int
xor
dec
scas
fcomps
jmp
push
inc
lret
jmp
out
xchg
ljmp
mov
xchg
cmp
adc
or
push
stc
and
lahf
cli
sti
xorl
packsswb
outsl
push
cmpsl
leave
cld
in
and
test
cmpsl
pop
test
ljmp
gs
enter
cmpsl
jl
push
fistpll
push
or
pop
cmp
mov
movsl
repz
in
mov
add
or
pop
ja
ficompl
jl
and
or
sti
push
dec
imul
cmpsl
fdivl
cmpsb
xchg
sub
mull
stos
fildl
push
in
stos
pop
loop
clc
and
mov
add
lock
mov
notb
sbb
push
ds
ret
pushl
mov
negb
inc
stos
adc
aam
lds
shrl
call
imul
mov
cmp
mov
popa
les
scas
cli
addr16
mov
or
fsubrl
sub
icebp
int
daa
lcall
or
lea
cwtl
aad
shrl
es
les
stos
cmc
shl
shll
dec
inc
jo
jp
cltd
stos
jae
xchg
stc
setns
push
cld
xchg
int3
xchg
inc
fistps
xor
test
xor
add
stc
mov
iret
sbbl
int
mov
push
pop
sbbl
lods
aaa
dec
sub
cmp
sbb
mov
xchg
push
ret
and
xor
add
pop
push
xchg
mov
push
cmova
cmp
je
js
fistpll
and
nop
cmp
mov
int3
push
or
popa
mov
fisubs
pop
aaa
cltd
arpl
sub
cmovl
lret
add
mov
jle
stos
xor
jecxz
gs
inc
pop
pop
xor
call
out
out
pop
fmul
sub
call
pop
cwtl
inc
shlb
std
push
adc
into
sarb
push
push
mov
adcl
sub
xchg
pop
dec
rolb
pop
pop
fisttpll
ds
out
mov
popa
sbb
pushf
int
jecxz
sbb
lcall
lcall
sarb
jno
shlb
mov
sarl
mov
push
pop
imul
ja
or
subl
xchg
hlt
pop
leave
paddusw
cmp
xchg
dec
repz
out
mov
mov
jns
xchg
cwtl
pop
jg
dec
jecxz
fwait
inc
xchg
leave
call
and
mov
jns
jb
xchg
push
lods
mov
adc
adc
mov
sub
outsb
adc
mov
xor
bound
sub
jl
ja
and
mov
data16
bound
leave
orb
push
adc
aam
subb
push
cli
jbe
insb
sahf
icebp
aad
lock
xchg
mov
dec
in
out
adc
sub
popa
jne
out
movsl
cs
and
xchg
repz
xchg
test
pop
mov
push
sub
add
sbb
fildll
push
push
xchg
cmpsb
inc
sbb
cmp
cmp
push
dec
xchg
inc
add
jnp
int
sub
sarl
xor
sar
es
scas
inc
mov
or
push
mov
outsb
je
scas
xchg
add
xchg
pop
les
xor
insl
dec
repz
dec
inc
add
arpl
mov
pop
jae
push
in
jecxz
repz
cmpsb
sbb
in
xor
imul
sbb
pop
inc
in
sahf
pushfw
push
pusha
or
pusha
xor
adc
xorl
in
mov
pushf
hlt
aam
sub
nop
mov
mov
mov
bound
ljmp
pop
cltd
fucomp
imul
xchg
in
sbb
mov
and
mov
and
xorb
cmp
jo
adc
out
lahf
mov
dec
inc
iret
cmpsl
mov
or
xchg
and
push
mov
xchg
sbb
pop
push
jmp
and
iret
xor
dec
je
insl
pop
ds
outsl
fwait
push
inc
cwtl
xlat
dec
dec
lahf
int3
fldt
js
fisubrs
and
cltd
stos
mov
js
stos
repz
jl
fdivrl
sbb
lcall
push
jl
fistps
in
xor
out
in
ss
loopne
bound
lds
pop
jno
add
or
scas
pop
mov
rcll
inc
out
xchg
pusha
push
push
mov
sub
repz
or
pusha
test
push
push
jo
xchg
je
loope
sbb
inc
sbb
jb
mov
ret
mov
sbb
hlt
test
or
loopne
aad
xor
fdivrl
lods
push
imul
adcl
dec
pop
inc
add
or
mov
dec
loope
push
lret
jo
lret
fisttpl
cli
xor
loopne
das
jmp
jecxz
movb
imul
mov
add
ret
sbb
pop
sbb
jb
scas
sub
fs
decl
lods
inc
in
mov
xor
fsubr
inc
mov
adc
in
jo
sar
xchg
inc
repz
dec
jns
loopne
dec
imul
cwtl
leave
in
cli
into
sub
and
fbstp
mov
nop
inc
int
xor
pop
dec
push
iret
faddl
push
push
sub
sbbl
repz
dec
stos
xchg
lock
cmp
add
mov
jns
cmpsb
add
cwtl
jp
sbb
xor
push
call
jae
add
inc
and
xchg
pop
gs
mov
data16
mov
pop
outsb
mov
aas
and
dec
jno
out
mov
hlt
mov
cld
pop
imul
repz
xchg
xor
movsb
sbb
loopne
in
lods
int3
stos
ss
dec
pop
cmp
jns
inc
lea
outsb
adc
cmp
and
shlb
pop
aam
mov
ficoms
jns
icebp
leave
dec
push
lea
push
negl
sti
lahf
push
dec
clc
loopne
mov
adc
pop
pop
jns
pusha
sarl
mov
mov
popf
and
in
xor
repnz
leave
jnp
std
cltd
or
icebp
ja
add
mov
inc
fwait
and
sahf
std
push
xor
popf
daa
into
inc
pop
mov
ret
jnp
lock
pop
xchg
push
lock
dec
xor
jne
xor
mov
lea
push
mov
jg
xor
pop
cmp
in
lret
pusha
mov
mov
lcall
sarb
rcll
fistpll
cltd
in
orl
fiadds
add
ja
rorl
lea
dec
or
mov
jle
add
js
add
cmp
addl
mov
jl
push
data16
adc
mov
xlat
inc
loopne
sbb
jmp
inc
sub
push
fwait
jl
pop
dec
sti
jnp
mulb
ljmp
lahf
push
add
sbb
cwtl
in
scas
adc
or
jo
nop
adc
cwtl
or
mov
adcl
loopne
outsl
repnz
dec
fcoms
sub
test
inc
cmp
push
sbb
or
jg
repnz
ror
sub
out
pop
pop
jno,pt
addr16
inc
mov
add
adcl
xor
int3
adc
nop
lahf
fbstp
dec
push
into
push
popa
ds
call
push
out
lods
jecxz
jne
mov
jmp
test
pop
addb
jle
js
mov
aad
push
hlt
int
mov
ja
aaa
insl
mov
movsb
sahf
daa
jb
sub
js
les
clc
pop
xchg
add
jp
mov
test
mov
imul
popf
test
sub
scas
rcr
data16
add
adc
aas
pop
pop
jge
jmp
inc
je
adc
xchg
mov
dec
clc
fists
add
xchg
pop
mov
sbb
data16
mov
bound
addr16
xchg
cmpsb
outsl
xchg
add
fldl
lds
sub
lahf
cmp
sub
xchg
test
pop
mov
aas
inc
ds
bound
pusha
in
or
or
adc
mov
out
jbe
aad
cmp
pusha
scas
sbb
in
fsubl
sbb
or
adc
outsb
adc
mov
shrb
mov
sub
cmp
scas
pop
mov
sti
and
lods
xchg
in
int3
insb
ficompl
mov
ds
adc
add
or
loopne
in
mov
out
aas
push
push
dec
insl
cmp
fnstsw
cmp
in
rolb
pop
xor
fsts
dec
lret
mov
jl
adcl
imul
xor
sub
daa
or
sbb
fimull
add
ret
mov
pop
into
mov
fdiv
std
repnz
jns
inc
aam
insl
stos
xchg
xchg
mov
fistpl
sbb
test
mov
inc
int
inc
inc
mov
stc
dec
test
daa
pop
loop
push
and
insb
iret
lea
pop
xchg
fs
mov
or
or
out
adc
lahf
lods
jle
lret
hlt
insl
pop
sub
lods
xchg
sbb
cmp
das
into
lods
or
jns
js
adc
mov
fs
test
and
mov
sbb
sbb
lret
test
sbb
xor
xchg
cmp
adc
inc
or
jne
mov
out
sub
adc
add
iret
gs
lret
stc
dec
icebp
push
movl
add
stos
loop
rorl
mov
push
les
fadd
jge
cs
mov
movsb
add
jge
sbb
mov
rcll
adc
lods
push
daa
sbb
or
in
and
fldt
fwait
bound
sbb
sub
in
adc
stc
mov
mov
jnp
iret
push
outsl
aam
sbb
inc
dec
incl
jnp
cmp
mov
sub
loop
xor
in
test
sbb
push
cmp
mov
dec
xchg
call
adc
xchg
push
fcomps
into
popa
js
bound
jae
in
aam
push
pushf
scas
addr16
cli
adc
cmc
dec
jp
clc
inc
cmp
popa
mov
mov
pop
mov
jo
hlt
cld
mov
rorl
adc
jb
inc
adc
fmull
jns
push
inc
adc
sub
lret
jmp
jno
push
les
push
sbb
scas
pop
push
imul
pop
aas
lds
scas
hlt
mov
jo
cmpsb
sbb
int3
movsl
das
adc
and
sti
and
or
int
mov
outsb
jnp
inc
bnd
int3
movsl
push
out
pop
jne
pop
mov
movsb
push
rcrb
test
loope
adc
mov
or
and
cld
repz
loopne
dec
addr16
xchg
cli
cwtl
mov
cmpsb
hlt
push
call
in
xchg
mov
adc
mov
jns
aad
sarb
int
daa
fwait
ljmp
or
adc
neg
jne
addb
inc
in
movsl
ret
xchg
loop
cwtl
pusha
fs
push
sbb
or
inc
jp
ror
sbb
cs
imul
std
cli
sub
mov
push
in
xorl
lahf
mov
lcall
mov
jp
test
cwtl
dec
data16
fucomp
iret
ds
and
mull
adc
jge
jmp
or
int
push
les
add
out
stos
and
faddl
loopne
inc
inc
add
addr16
loopne
jle
sub
cli
sbb
mov
les
scas
ljmp
cltd
repnz
mov
push
mov
sahf
pushf
and
jne
mov
lds
lods
push
leave
pop
push
mov
jp
pusha
mov
adc
dec
jge
sti
add
adc
xchg
jno
jp
sbb
mov
push
sub
shl
popf
outsl
test
cs
cltd
arpl
jl
mov
lea
dec
mov
out
cmp
cmp
or
jg
call
sub
aaa
sub
cmpsl
pop
push
sbb
incl
jb
repnz
test
inc
pop
push
cmp
jl
call
dec
loop
jbe
js
push
outsl
pushf
mov
inc
loop
in
iret
jnp
cmp
inc
outsb
jmp
pop
add
incl
cli
push
int3
sbb
rcr
outsl
not
mov
inc
inc
xor
xchg
inc
mov
mov
push
xor
pop
popf
xchg
inc
inc
sar
mov
mov
mov
cwtl
inc
pop
cmp
das
aas
iret
jns
movq
push
test
mov
in
mov
sbb
adc
sub
sbb
lds
adc
mov
adc
js
xor
pop
mov
cmp
lods
jb
pop
pushf
mov
jp
xchg
add
aaa
test
xchg
sbb
loop
sbb
mov
cmpl
movd
xlat
daa
add
lea
icebp
and
inc
mov
lods
sbb
outsl
es
int
std
pushf
adc
sub
cmp
dec
and
in
xor
push
mov
adc
lds
ja
inc
ret
aam
cmpsl
mov
fst
test
cltd
xlat
adc
dec
imul
xchg
and
cli
lods
sbb
mov
pop
mov
ds
jecxz
arpl
mov
pop
push
lcall
jno
xlat
mov
jl
fbld
sub
ds
clc
or
sub
mov
hlt
xchg
push
enter
mov
movsb
lcall
sub
cmc
cmp
mov
mov
stos
aaa
push
cmp
sub
dec
jo
sahf
popf
mov
mov
or
or
sbb
jl
out
xor
cmp
sbb
cmp
mov
sub
mov
sub
jecxz
pusha
or
jne
mov
adc
sub
mov
cmpsl
fisubs
adc
divl
fldl
sbb
mov
jns
mov
lds
push
sub
jp
imul
dec
mov
and
scas
fstl
jl
pop
out
xor
inc
fistl
pusha
mov
mov
pushf
cmp
ss
mov
xchg
cmc
mov
subb
leave
dec
and
or
jne
xor
sarl
in
notl
mov
inc
mov
xchg
loope
shlb
sbbl
jg
xchg
jmp
addl
pop
aad
mov
shrb
bound
or
dec
adc
sbb
and
jb
mov
out
and
cmp
cld
jp
lcall
add
xor
cld
lret
xor
push
push
cli
add
mov
cmp
pop
inc
and
bound
dec
enter
je
sbbl
in
shlb
imul
jnp
or
jl
or
pop
aam
je
xor
and
pop
arpl
cmpsl
cli
test
test
sub
icebp
mov
push
and
loope
dec
mov
in
es
push
test
lahf
mov
jns
repnz
cmpsb
outsb
and
or
jbe
xchg
or
mov
and
sbb
adc
lcall
sbb
fldl
cld
not
xor
or
movsl
push
adc
rcrb
int
adc
pop
sub
pop
nop
scas
test
imul
les
pop
ret
sub
pop
lea
xchg
mov
in
xchg
out
or
into
pop
notb
aam
mov
push
sbb
leave
or
pop
out
sbb
jl,pt
sahf
test
faddp
ds
das
add
sub
je
dec
mov
jns
mov
lret
push
insb
lret
pop
shrb
fidivl
cmc
insl
cmp
dec
mov
je
fistl
aad
push
dec
xchg
add
scas
xor
sub
dec
jnp
jo
insl
mov
cli
ljmp
cmpsb
lret
push
movsl
jp
push
out
push
add
rcll
out
fstps
loope
pop
filds
and
lcall
cmpsb
dec
sub
pop
jo
test
sub
xchg
shlb
cld
mov
sub
ret
jl
xlat
jle
mov
sbb
sub
jnp
xchg
mov
mov
push
fbstp
ljmp
jmp
pop
mov
mov
mull
andl
cltd
pushf
push
adc
xchg
cmp
mov
fistl
fists
sahf
popf
jo
shlb
imul
vpmaddwd
sti
sub
notl
rep
pop
daa
xor
push
sbb
add
add
mov
out
push
cwtl
pop
sahf
ljmp
rcrl
ret
js
or
repnz
mov
lock
push
pop
push
out
shrb
adc
xor
sub
inc
loopne
in
xchg
popa
lods
call
push
idivb
aas
mov
mov
in
cmpl
leave
ret
filds
jns
ljmp
lahf
push
sar
dec
push
jmp
into
dec
push
lea
cmp
pop
cwtl
int3
add
jae
pop
lds
jns
and
pop
xchg
cmp
lea
push
cmp
mov
loope
enter
rcll
xchg
fisttps
loopne
js
inc
pop
cmpsb
gs
dec
movups
xor
ficompl
nop
jbe
sub
popf
fwait
add
jle
jge
xchg
push
jle
iret
int3
xchg
loope
stos
flds
sar
or
shl
dec
xchg
js
inc
mov
pmullw
aas
pop
outsl
sub
adc
push
dec
push
leave
pop
add
mov
in
xor
les
mov
jb
dec
pop
test
sarb
aas
test
es
fidivs
xchg
pop
dec
testl
lret
cli
scas
cmp
cli
in
and
push
shll
mov
mov
in
popa
fwait
mov
cmpsl
pusha
or
dec
dec
rolb
cmc
ja
ljmp
js
xchg
jecxz
sbb
fmul
mov
pop
pop
sub
sub
pop
inc
add
fwait
or
lcall
incb
rcr
test
inc
test
and
jmp
cmp
rorl
xchg
jecxz
and
fucomp
es
sub
push
ffree
icebp
insl
test
aaa
stos
sub
lret
cmpl
inc
and
sbb
addr16
cmpsb
orb
cltd
and
testl
loope
add
movsl
jg
jp
xor
sub
xor
xchg
jbe
add
cmpl
push
jmp
dec
mov
outsl
jp
mov
daa
dec
iret
pop
shll
imul
cmp
repz
jmp
popa
mov
fs
sahf
mov
loopne
inc
inc
mov
push
dec
xchg
mov
mov
inc
int
mov
ljmp
mov
mov
xchg
and
sbb
orb
aad
jmp
iret
aaa
outsl
pop
notb
jge
add
and
into
xor
and
in
dec
test
mov
addr16
dec
out
aad
push
stc
mov
aas
or
punpckhbw
xchg
sbbb
and
mov
rorb
mov
xchg
out
std
pop
pop
mov
mov
int3
and
and
mov
mov
or
enter
ljmp
jb
xchg
xor
loope
icebp
mov
paddq
rclb
clc
imul
mov
push
daa
sbb
cmc
fnstsw
add
pushf
and
outsb
or
jae
pop
icebp
xchg
jl
pop
push
jne
flds
sub
mov
icebp
sbb
inc
adc
nop
sbb
fwait
mov
inc
jg
fcomps
sbb
sub
mov
mov
icebp
addr16
nop
ds
pop
jmp
mov
roll
jae
sbb
das
std
sahf
inc
pop
cmpl
mov
xor
inc
xchg
cmp
and
outsl
cltd
xchg
lds
icebp
loope
imul
addr16
sub
add
popf
nop
mov
pop
sahf
ljmp
stos
out
xlat
push
out
mov
sbb
mov
out
stos
int
lcall
inc
jg
or
mov
repnz
ljmp
sub
enter
jnp
mov
lret
pop
dec
inc
add
xchg
scas
push
andl
in
jmp
daa
jge
aad
jae
jbe
loope
or
dec
insl
rolb
and
sbb
adc
sub
int3
rcrb
fildll
sbb
adc
loopne
lods
xchg
sub
push
pop
lcall
ss
jo
mov
cmp
aaa
inc
pop
add
xor
dec
push
cmc
lret
or
jmp
bswap
sahf
inc
aas
aas
inc
push
hlt
sub
sbb
outsl
enter
pop
mov
pop
pop
mov
add
cmp
popf
fdivr
dec
aad
mov
or
push
xchg
test
scas
pop
push
dec
test
cmpb
and
mov
adc
ret
out
mov
std
inc
movsb
fadd
pop
je
mov
mov
xchg
xchg
lock
test
sub
mov
jne
repnz
jno
cwtl
adc
mov
ret
pop
mov
dec
aaa
call
bound
cmp
pop
push
push
lods
in
fidivl
sbb
test
lret
and
jae
adc
mov
dec
cmp
loop
bound
in
rol
mov
bound
mov
shrd
fwait
xor
xchg
loop
mov
push
jp
jp
dec
xchg
shrb
sti
add
pop
cmp
popa
or
pop
movsb
sub
inc
ljmp
repz
lret
fsubs
xor
and
cmp
cmc
scas
push
clc
out
scas
aaa
pop
jno
push
fldenv
loop
xlat
adc
and
xor
push
cmpb
rclb
push
cmp
ror
rcrl
lock
stc
push
into
sbb
push
fnsave
pop
out
pop
idivl
mov
or
imul
pusha
mov
mov
int
sahf
or
mov
mov
dec
lea
mov
xor
lcall
xchg
cwtl
xchg
popa
pop
add
ljmp
dec
mov
cltd
xor
paddw
xor
push
adc
cmc
sbb
aam
data16
cltd
sub
xchg
mov
test
sbb
push
in
pushf
cmp
je
pmuludq
jge
sar
repnz
push
ljmp
pop
add
int
icebp
mov
xchg
cmp
mov
aam
dec
loopne
and
fldt
jns
outsl
add
adc
mov
mov
dec
idivl
jl
enter
dec
jge
xchg
es
jmp
setnp
adc
mov
imul
mov
add
and
mov
das
xor
fdivs
inc
mov
add
jns
sbb
and
cmc
ret
ret
je
int3
das
lcall
jns
inc
or
adc
out
xor
mov
xchg
inc
sub
add
push
inc
jb
aam
add
dec
mov
mov
inc
ja
sbb
jl
sti
ss
mov
dec
push
adc
cmpsl
test
loope
fwait
cmpsl
sbbl
fwait
int
aas
dec
popf
pushl
int3
clts
cmp
lods
inc
jno
andl
xchg
sub
dec
loopne
xchg
mov
std
out
int3
jl
mov
jnp
inc
outsl
add
sbb
sub
and
iret
jl
pop
out
enter
and
dec
xor
pushf
jns
sbb
xor
dec
xchg
out
and
pop
outsb
fadds
mov
lahf
rol
int3
pop
stos
and
rclb
outsl
mov
sarb
push
int3
bound
int
jns
xchg
inc
mov
gs
cli
mov
lods
jo
loope
xor
aam
movsb
dec
ret
cld
mov
and
dec
dec
ja
sbb
push
ds
std
cltd
lahf
add
in
outsb
mov
sub
mov
pop
cltd
jbe
inc
loopne
gs
test
jae
sbb
and
pop
das
xchg
and
outsb
jmp
jbe
jne
adc
fisubl
in
lret
cli
inc
jmp
push
mov
iret
push
push
inc
divl
dec
leave
mov
pushf
mov
adc
shl
outsb
shll
inc
pop
loop
sub
and
add
mov
push
rclb
cmp
add
call
mov
xchg
les
inc
pop
in
push
pop
outsb
cmc
inc
sbb
imul
ret
mov
rolb
xchg
push
xchg
rcll
mov
mov
js
xor
rclb
add
scas
push
icebp
fsubl
into
shr
jp
sub
jecxz
jmp
xor
push
mov
sub
add
push
pop
sub
xchg
pushf
lret
mov
daa
xchg
push
add
add
out
std
pop
xchg
subl
mov
ret
pop
jb
sbb
les
sub
or
pusha
pop
sub
adc
and
nop
adc
sahf
ret
add
xchg
enter
das
or
jge
movsb
mov
xchg
in
loope
sbb
hlt
push
jns
dec
cli
imul
adc
and
push
add
jbe
shrl
or
xor
movsb
cmp
jecxz
test
cwtl
jg
mov
call
cmove
cwtl
pop
ljmp
and
ds
jecxz
dec
dec
inc
je
out
dec
adc
cs
lret
push
or
push
movsl
daa
cmpb
pusha
xchg
xor
je
xor
inc
xor
mov
jl
scas
or
xor
jmp
lahf
mov
mov
adc
or
shrb
dec
rorl
das
orl
mov
shrl
ret
outsb
xchg
push
or
mov
arpl
mov
mov
and
rcr
adc
in
xchg
cmp
xchg
xchg
stos
mov
inc
mov
in
repnz
mov
lods
mov
imul
aad
lret
nop
inc
xchg
inc
call
js
and
es
push
jb
lea
xchg
adc
jns
fisttpl
imulb
dec
pusha
dec
push
std
loope
pop
hlt
out
cmp
and
sub
mov
in
mov
and
cmpsb
ljmp
pushf
or
mov
lock
movsb
and
lds
push
dec
arpl
js
lds
movsl
arpl
and
jle
gs
repz
stos
dec
mov
cmpsl
push
xchg
mov
daa
dec
cmp
adc
mov
xchg
push
das
loop
inc
das
xchg
or
pushf
xor
dec
sti
call
sbb
in
mov
je
ljmp
mov
js
insl
and
jl
sub
divb
jp
pop
dec
ja
lea
loop
popl
jg
mov
popl
in
or
insl
mov
addl
and
hlt
dec
aam
pusha
fisubs
push
imul
sbb
shl
xchg
push
test
fwait
addl
add
je
rcrl
lea
cs
pop
addr16
cmc
aad
les
getsec
sbb
out
dec
clc
jge
popa
pop
pop
dec
in
iret
lret
cmp
cmp
dec
test
mov
push
stos
aas
inc
shlb
mov
cli
xchg
subb
xor
enter
mov
addr16
sbb
sub
jb
enter
lock
pop
cmpsl
out
addr16
push
loope
mov
popa
dec
into
pop
incb
add
lret
enter
mov
call
loopne
mov
dec
inc
es
lahf
pop
movsl
and
mov
sbb
rdtsc
pop
and
push
sarb
add
js
fwait
xchg
jl
xor
adc
shlb
call
or
push
roll
scas
jl
loope
xchg
jno
or
les
stos
push
insb
ret
pop
mov
or
mov
test
dec
into
popf
push
xchg
out
xor
xor
mov
push
jnp
test
shlb
shlb
push
ret
xor
xchg
sbb
mov
push
xchg
lods
push
lea
cmpsb
add
pop
mov
ja
mov
mov
outsl
mov
cltd
out
and
jo
pop
cli
dec
xlat
jp
jmp
mov
pop
pusha
sub
xor
and
cmp
mov
dec
mov
ss
dec
mov
sbb
jge
adc
fsubrl
push
add
add
mov
dec
rclb
and
cmp
cmp
sbb
mov
std
out
rorb
pop
jl
jo
pop
lock
mov
pusha
arpl
mov
stos
or
hlt
aaa
and
out
ja
loopne
inc
inc
jg
jg
call
pslld
and
movsb
in
in
or
sub
sbb
push
add
adc
mov
cmp
xor
aam
fstps
xchg
push
pop
add
xchg
aaa
out
lret
or
int
pop
jl
out
cmpb
mov
jecxz
das
add
adcb
ret
sbb
gs
aam
pushf
fcmovb
sub
lock
test
cld
xor
cmp
push
scas
sbb
mov
xor
scas
clc
inc
mulb
pop
stos
jmp
hlt
stos
sbb
out
cli
repz
je
add
shll
add
pop
sti
pop
mov
xchg
mov
sbb
test
bound
enter
pop
sub
mov
test
mov
in
das
ret
adc
pop
mov
pop
and
xor
sbb
jp
pop
jnp
pop
mov
sarb
fcomp
jg
repz
jecxz
in
loop
sbb
insl
inc
pop
sbbl
or
aad
leave
jmp
cmp
rclb
xor
mov
cli
out
mov
fisubrs
scas
lods
lods
das
jp
or
mov
imul
pop
fiaddl
test
cmp
ffree
push
scas
and
aam
ds
push
mov
push
int3
mov
in
cmpsb
mov
or
lock
test
inc
es
lret
outsb
sbb
add
or
mov
xchg
dec
mov
bound
movsb
stc
test
lcall
dec
lods
jp
imul
inc
fidivs
mov
mov
cmp
dec
adc
call
xlat
imul
gs
aas
inc
xchg
jb
imul
or
lea
clc
sbb
or
iret
roll
pop
inc
cmpl
sub
push
shrl
pop
shrb
xor
and
mov
push
cli
pop
pop
sbb
fldt
sbb
xchg
mov
mov
scas
je
dec
sbb
adc
sub
and
scas
cld
push
push
push
out
sti
loope
ficomps
or
ss
and
push
outsl
adcb
stos
nop
pop
test
mov
paddd
stc
mov
ficoml
mov
cmpsl
lock
cmp
xor
sbb
dec
sahf
sub
mov
enter
inc
icebp
dec
rorl
jp
inc
sub
add
scas
push
shlb
orb
and
lds
pop
test
adcb
pop
push
das
xchg
and
out
movsb
cmp
xlat
cmp
cltd
fcompl
int
loop
and
cld
xor
fstl
ficoms
mov
fldt
sahf
xorl
shl
insb
push
jl
xorl
dec
iret
arpl
add
jo
push
jg
into
rorl
dec
sub
mov
scas
mov
ds
dec
je
mov
cmc
dec
ret
adc
ss
movsb
pop
and
sbb
lea
rcl
jns
xchg
in
dec
ja
int
push
mov
fnstsw
sbb
imul
jbe
dec
mov
fstp
inc
pop
inc
iret
fwait
xchg
mov
add
outsl
push
mov
dec
jmp
jbe
lret
xchg
ret
mov
lahf
mov
xor
lock
std
add
mov
inc
aad
inc
sbb
loop
xchg
jnp
fbstp
inc
xor
cs
loopne
xor
push
ret
daa
or
test
push
pop
xor
add
sbb
iret
mov
inc
pop
jge
dec
mov
dec
fisubs
lods
testl
sti
std
xor
sub
shll
dec
adc
xchg
push
in
cmp
sti
mov
int
mov
sbb
cmp
push
pusha
mov
rorl
psrlw
xor
es
pop
adc
mov
test
pusha
push
aas
shll
inc
popa
add
sbb
mov
cmp
xor
sbb
push
xor
add
add
sarb
xchg
xchg
inc
insb
cmp
sbb
movsb
mov
add
jge
insb
jo
jge
jle
pop
into
test
fcmovnbe
adc
mov
xchg
ljmp
shlb
unpcklps
add
adc
aaa
push
rorb
push
mov
ja
aaa
jl
push
lods
popa
sbb
rorb
jmp
cmova
or
int
inc
mov
adc
add
lcall
xor
daa
jne
mov
jg
dec
sub
rorl
enter
mov
adc
int3
das
lea
jl
leave
mov
es
rcll
xor
sub
xchg
mov
jo
cs
inc
push
lock
or
test
fidivs
out
rep
xchg
mov
test
pop
mov
fcmovbe
pop
jbe
ficomps
or
mov
into
test
sub
js
jb
ss
aam
mov
cmp
xor
or
sbb
jp
hlt
xor
movsl
or
es
or
imul
inc
and
or
imul
and
shll
lods
lahf
lods
mov
icebp
fwait
mov
ficoms
rolb
cmp
or
psrlq
mov
inc
and
pop
out
sahf
dec
xor
and
mov
and
in
push
cmp
in
push
mov
lret
jno
or
test
inc
xchg
pop
fmuls
push
es
aam
xchg
push
mov
cs
and
pop
adc
adc
dec
test
adc
testb
jb
inc
mov
adc
leave
mov
adcb
pop
mov
scas
stos
fcmovu
out
cmp
mov
outsb
mov
mov
movsl
sbb
xlat
mov
jne
jbe
fwait
insb
cli
movsb
fidivrl
dec
xor
dec
push
pop
enter
jg
lea
add
inc
xchg
dec
sti
mov
lods
in
ja
push
sub
sbb
xchg
and
and
mov
iret
insb
jae
cmp
xlat
xor
jl
push
and
jno
out
xor
push
jmp
lret
pop
cmp
xlat
cmp
jbe
repz
xor
push
push
lea
out
jle
dec
mov
pop
cmp
insb
mov
dec
sbb
jle
clc
push
cmp
inc
aad
xchg
jne
stos
dec
stc
insb
adc
and
adc
dec
dec
mov
call
aaa
cltd
and
inc
cmp
dec
or
movsb
jge
ljmp
das
or
sahf
in
adcl
mov
mov
jbe
jnp
sbb
jmp
in
xor
js
inc
fldenv
mov
ret
ja
cmp
int
int
xchg
or
bound
lahf
push
cmp
pushf
outsb
push
out
jle
push
pushf
jl
js
sti
mov
lret
mov
scas
sbb
cli
push
movsb
inc
aad
mov
sahf
push
pop
in
hlt
loope
leave
xor
pop
jbe
or
mov
push
iret
inc
add
sub
rolb
fdivs
icebp
push
std
insb
sub
sbb
push
xchg
jp
fistl
iret
enter
fwait
push
test
dec
or
mov
ficomps
nop
fnstsw
cmp
jge
cmpl
lret
cs
ret
ficoml
loope
adc
fsts
ret
in
mov
cli
ror
xchg
sbb
mov
add
jbe
rorl
add
jae
add
cmp
and
inc
fwait
cmc
outsl
je
sarl
push
sarb
adcb
pop
ja
mov
in
mov
stos
repz
lcall
adc
outsl
add
scas
add
jmp
mov
fwait
test
pop
dec
es
scas
repz
xchg
push
es
push
sub
sub
pop
jecxz
sub
mov
arpl
inc
loop
pop
jno
inc
push
incb
enter
push
mov
and
sbb
sbb
jne
testl
adcl
add
push
jbe
sub
scas
jecxz
enter
jo
sarl
insl
sub
shll
push
xor
push
mov
lret
clc
iret
out
test
aaa
cmpsl
shrb
pusha
mov
xchg
ret
js
or
xchg
cmp
leave
xchg
or
sarb
fs
sub
out
sbb
pop
fwait
inc
sbb
decb
inc
pop
dec
mov
mov
js
xor
mov
inc
scas
fneni(8087
add
cmpsl
sub
push
insb
dec
decl
movsb
push
leave
les
in
test
fcomp
sbb
das
jle
addb
outsb
das
movsl
inc
or
push
popa
jge
mov
and
loopne
ja
cld
pop
mov
ret
mov
sub
pop
xchg
bound
fdivl
clc
mov
jns
lods
inc
adc
imul
mov
mov
loopne
pop
leave
lret
mov
hlt
jp
add
cmpsb
mov
mov
outsb
pop
ja
dec
sub
push
enter
push
or
sub
mov
fs
mov
cmp
push
fstpt
adc
jecxz
mov
stos
cwtl
outsl
jl
or
inc
push
mov
xor
sbb
leave
lret
cld
outsl
sti
adc
adc
sbbl
add
out
aam
adc
orl
fcoml
jp
out
cmpsl
shrl
xor
sbb
aaa
loope
cwtl
sbb
lcall
cmp
jb
mov
clc
xchg
cs
cmp
xchg
popa
js
dec
popl
shr
out
sub
and
inc
cmp
int
arpl
js
fs
cmp
and
sub
pop
leave
fmul
fistl
xorl
mov
mov
aaa
pushf
lods
xchg
mov
addl
fwait
and
inc
adc
ret
xchg
push
fistpll
push
xor
flds
adc
lret
add
inc
es
dec
shll
push
mov
inc
test
inc
mov
pop
inc
pop
leave
adc
cmp
pop
pop
xchg
mov
cmp
mov
int3
daa
ss
push
xlat
add
loop
out
lcall
and
mov
mov
lret
or
xchg
sahf
mov
pop
pop
push
lcall
cmc
dec
movsl
mov
push
add
adc
xor
cmp
inc
pop
mov
daa
xor
mov
imul
or
mov
lcall
sub
or
ds
lods
cmp
jo
cs
sbb
test
and
sub
shll
idivb
ljmpw
pop
out
lahf
scas
sub
push
mov
xchg
push
sbb
ss
jae
das
jbe
jb
pop
vmwrite
xchg
sbb
dec
dec
cs
or
jnp
push
fmuls
lods
dec
push
mov
add
push
pop
cmp
inc
lret
repz
int
lds
insl
in
push
in
dec
rolb
leave
in
mov
sbb
xchg
shr
lret
and
ret
adc
ljmp
imul
pop
nop
xor
dec
inc
inc
jl
jle
fcoms
mov
jo
ss
or
add
mov
pop
insb
shrb
xchg
into
in
fcomip
add
add
pusha
adc
iret
and
insb
mov
in
or
mov
popa
ret
cmpsl
imul
imul
xlat
cmp
scas
sbb
jmp
ret
adc
inc
mov
push
outsl
sub
imul
push
sbb
idivb
mov
or
cmp
mov
add
outsl
adcb
jl
fst
jae
ja
les
out
loope
xchg
inc
sbb
mov
in
sbb
pop
jmp
imul
ja
add
insb
out
cltd
lea
sub
or
jne
inc
int
push
pop
mov
push
xlat
xor
pop
out
mov
out
std
pop
lods
xor
xchg
jae
jp
leave
cmp
cwtl
pop
dec
scas
push
out
jbe
mov
xchg
xchg
or
arpl
mov
add
jmp
int3
sub
xor
mov
xchg
and
push
test
idivl
filds
es
or
inc
xchg
sub
rcll
ss
ret
jb
js
adc
inc
push
pop
mov
push
mov
add
movsb
stos
iret
rorl
dec
adc
fidivs
pusha
pop
insl
and
fdivs
insl
push
mulb
loope
mov
cs
cmp
jo
push
imul
sbbl
mov
push
enter
sbb
cmpsb
pusha
xor
xchg
in
pop
pusha
fstp
ret
mov
inc
push
and
xchg
pop
fs
jl
cltd
xor
lea
cwtl
jle
test
shrl
and
xchg
jbe
add
push
mov
ret
mov
dec
xchg
xor
sbb
mov
inc
dec
mov
dec
jge
mov
mov
lods
iret
ror
js
cmc
or
fldt
mov
sub
movsb
inc
adc
shrb
pop
ja
sub
gs
repnz
sbb
jae
xchg
mov
jns
repz
mov
and
mov
mov
xchg
lods
push
lock
out
jl
xchg
test
jle
aaa
popa
xchg
sti
out
and
cld
rcrl
arpl
mov
inc
mov
orl
cmp
xor
push
negl
addb
cltd
xchg
in
adc
lcall
fwait
cltd
out
mov
xchg
je
cmpsb
iret
xor
test
adc
cmp
sbb
in
pop
sub
pop
hlt
movsb
insb
mov
leave
mov
insb
rcr
fdivrl
xor
sbb
sbb
pop
ret
dec
mov
cmp
or
aam
sar
pop
mov
int3
nop
xchg
mov
adc
sbb
adc
test
mov
sub
or
lds
fnsave
jbe
fsubrl
outsb
and
popa
add
lods
push
mov
aam
call
inc
repnz
aaa
shl
ss
inc
fisttpll
add
jl
stc
ret
stos
mov
lret
addr16
dec
cld
adc
arpl
nop
scas
cld
sbb
cmp
fnstenv
clc
lret
imul
clc
cld
inc
pop
leave
das
xchg
pop
sbb
cmc
pmaxub
jecxz
inc
mov
push
jnp
aam
nop
dec
and
and
xchg
das
mov
lods
leave
mov
xchg
push
call
divl
lret
fs
mov
mov
sub
and
scas
push
inc
jmp
lods
call
push
xchg
push
lahf
mov
cli
push
push
adc
cltd
cmp
dec
les
xchg
das
stc
jns
mov
push
push
jle
mull
xor
fdivl
or
mov
sub
cmp
push
inc
jl
andl
cmp
push
pop
dec
mov
sub
inc
and
pop
adc
outsb
push
adc
aas
lret
je
sahf
inc
popa
dec
imul
iret
sub
jmp
test
cmpsl
std
mov
lcall
in
lfs
jbe
imul
not
inc
decl
fldt
cld
mov
jmp
adc
jo
fwait
mov
pop
stos
or
cmp
push
sti
cmc
sub
data16
gs
lods
add
xor
fcmove
dec
mov
jg
add
and
add
sahf
sbb
dec
fidivs
or
jns
sub
fidivs
and
jb
lods
fiaddl
and
jne
int
xchg
mov
xor
sub
push
js
cld
testl
and
stos
stc
adc
jmp
sbbb
stos
inc
cmp
int3
dec
out
or
and
mulb
cwtl
aam
popa
in
jns
in
dec
mov
jmp
mov
mov
mov
divl
dec
and
call
ss
fnstsw
fnstcw
gs
arpl
lahf
pop
xchg
inc
lret
popa
aam
mov
cmp
or
imul
push
addr16
pushf
sub
cmp
dec
inc
fistpl
clc
adc
inc
push
pop
add
mov
push
pop
lds
and
jg
ficomps
inc
pop
sub
xchg
mov
mov
loop
aas
xlat
cltd
popa
sahf
icebp
inc
push
dec
into
xchg
xor
out
jnp
aam
in
xchg
popf
inc
lds
subl
rcl
inc
and
mov
sbb
mov
pusha
push
rcrl
aam
sub
inc
push
ficoml
cmp
aad
pop
push
mov
dec
leave
cltd
stos
sub
sbb
inc
je
addr16
adc
push
adc
and
inc
xor
data16
xchg
ss
add
adc
ss
pusha
inc
adc
and
cld
into
mov
add
xorb
in
outsl
iret
aam
xor
push
mov
inc
in
and
movsl
ljmp
fidivl
inc
lods
mov
in
adc
iret
xchg
addr16
sbb
dec
xor
sbb
pop
pusha
inc
movsl
push
popw
fstps
inc
mov
cmp
rclb
in
dec
repnz
add
mov
shlb
hlt
inc
add
pop
xor
outsl
mov
inc
mov
lmsw
and
in
sbb
xchg
leave
rorl
and
mov
mov
ret
adc
jns
cmc
jne
dec
test
js
push
xchg
xchg
rcll
cmp
test
mov
cld
cmp
jecxz
inc
decb
mov
xchg
loope
punpckhdq
stos
fsubs
and
ret
mov
mov
pop
adc
clc
add
add
mov
popf
mov
pop
out
inc
andl
ss
hlt
sbb
pop
and
mov
xchg
jb
fisubrl
dec
adc
sbbb
xor
shll
cmp
jns
aas
push
ret
nop
fisubrs
fnstcw
std
and
cmp
cli
mov
mov
aam
pop
scas
pop
in
and
int
sbb
incb
or
std
xorl
mov
je
leave
sub
pop
push
jns
aad
popf
mov
cmpsl
xor
nop
shll
cmc
imul
sbb
inc
scas
push
xor
std
adc
mov
repz
into
movsl
in
into
call
push
inc
fmull
in
sbb
pop
clc
jle
addr16
cmp
pop
pusha
loopne
push
lock
orl
and
or
xlat
jg
mov
and
pop
push
ret
outsb
fwait
repnz
pushf
and
or
rcr
add
je
push
jns
push
in
aaa
movb
push
in
jge
dec
add
jnp
mov
mov
popa
cmp
dec
cmp
pop
xorl
jno
jo
xor
adc
mov
mov
mov
dec
and
in
sbb
mov
mov
sub
data16
ja
pop
xchg
aas
movsl
repz
arpl
in
cwtl
std
out
movsl
in
mov
daa
inc
fucomi
aas
rorl
pop
or
test
mov
lods
add
rorl
int
add
and
cmp
dec
mov
sahf
sub
push
aaa
insl
sub
xor
imulb
ret
movsb
sub
flds
insb
sub
in
xorb
push
pop
pop
mov
test
push
inc
or
push
mov
lret
hlt
xchg
dec
in
push
push
stos
loopne
inc
inc
aad
cltd
outsl
sarb
mov
and
lret
ss
sub
xor
xchg
inc
sarb
shl
ss
jnp
add
sub
cmp
mov
inc
andb
mov
mov
mov
js
pushl
sahf
fstpt
std
or
jbe
add
xchg
cmp
mov
ja
and
fstpl
rcrb
hlt
insl
addr16
add
mov
mov
push
cwtl
push
repnz
jge
pop
push
out
sar
mov
shll
sub
push
mov
add
pop
fbld
xchg
mov
movsb
cmpsl
sub
stc
mov
and
dec
fidivrs
and
arpl
adc
jb
cli
lods
call
inc
shlb
add
addr16
jo
mov
enter
andl
es
insl
faddp
xor
sub
mov
adc
add
inc
lea
mov
negb
rclb
insb
mov
and
rol
sub
and
push
das
aas
jnp
inc
cmp
pusha
xchg
adc
jp
or
mov
mov
lds
cltd
es
xchg
fidivrl
xor
jnp
xor
mov
mov
out
adc
ja
pusha
xchg
pop
or
cmpsl
inc
sub
or
push
and
cmp
insb
test
test
mov
push
fistl
lret
bound
inc
popf
xor
push
mov
and
inc
stc
repnz
inc
jno
push
sarl
aad
jmp
push
jbe
xchg
push
popa
jno
pop
mov
pusha
pop
cmc
dec
movsb
iret
arpl
pop
loope
cmp
mov
hlt
xor
nop
push
sbb
movsl
outsb
das
adc
pop
out
popa
call
in
lcall
jne
adc
mov
test
pop
inc
fiaddl
xchg
or
cld
mov
cs
mov
add
sbb
ds
mov
call
mov
lock
aaa
lcall
outsl
or
inc
jl
or
dec
lock
push
mov
test
push
popa
test
cld
aad
push
out
pop
stos
xor
sbb
pop
and
xor
les
fucomp
fstl
arpl
push
jae
fcoms
fs
or
sbb
lcall
mov
out
add
cmpsb
fucom
jg,pt
cmp
mov
push
xor
cld
pop
movsl
sbb
mov
iret
pop
mov
test
fstpt
or
cmp
loope
insl
negl
push
xorb
test
icebp
call
outsb
loopne
xor
xor
jecxz
pop
aad
push
mov
pop
jg
xor
inc
jo
adc
xchg
xor
mov
xchg
stos
xor
inc
pop
pop
repz
mov
aad
push
sbbl
mov
int3
add
insb
mov
xchg
mov
sbbl
push
mov
push
add
rolb
test
fwait
xor
js
sahf
dec
dec
movsl
shll
popa
push
data16
pop
repnz
pop
pop
sub
jns
pop
fstl
pop
adcb
mov
outsb
push
dec
enter
enter
in
and
insl
in
sub
pop
or
cmp
jo
outsb
mov
aas
xor
into
push
xchg
lcall
popa
push
jmp
push
mulb
dec
sbb
xor
les
or
mov
ljmp
or
js
bound
fwait
test
inc
scas
mov
lcall
ret
insb
imulb
or
inc
inc
add
and
test
stc
pop
arpl
movsl
pushf
xor
stc
or
insb
add
outsb
into
sub
push
icebp
sahf
push
es
fistpl
inc
xchg
dec
push
imul
jno
dec
cmc
scas
add
in
mov
mov
xor
arpl
lcall
mov
pop
cli
xlat
inc
popf
sub
stos
or
pop
adc
add
xchg
loope
inc
jg
push
inc
test
mov
lret
xlat
jge
ret
sub
popf
adc
enter
pop
inc
jle
das
lcall
jo
ret
mov
push
pushf
out
xchg
cmp
push
and
loope
and
test
push
push
sbb
in
inc
xor
pushf
pop
fwait
es
add
pop
xchg
inc
mov
sub
mov
pop
xchg
mov
popa
jnp
cmc
fnstenv
mov
cmp
pop
hlt
inc
push
pusha
in
mov
nop
ljmp
sub
daa
xchg
in
dec
ss
add
push
push
fisttpl
xor
jg
sub
in
adc
push
mov
notb
push
int
es
dec
pmaxub
mov
sar
or
pop
sbb
pop
fiaddl
push
filds
idiv
adc
jge
or
or
xchg
and
cmpsb
incb
push
lds
pop
nop
sbb
loop
shlb
mov
fidivl
lcall
stos
jo
out
data16
ss
outsl
loop
cmp
pop
xor
ret
divb
lret
aad
inc
cmpsb
jbe
mov
mov
insl
and
push
xchg
orl
rcrb
std
inc
fldenv
scas
xor
adc
lds
adc
js
frstor
cmpsb
mov
enter
pop
dec
inc
imul
adc
lods
das
aaa
sbb
ljmp
adc
int
jne
scas
popf
mov
cmpsl
push
sub
mov
dec
push
cmpsb
daa
or
out
insb
add
and
hlt
jge
mov
push
lea
sub
scas
orl
sbb
rclb
jae
scas
repz
mov
inc
lcall
ljmp
sub
xchg
iret
xor
in
aam
cmp
divb
stos
lcall
cld
sub
scas
lock
inc
cmpsb
pusha
in
inc
in
shrb
and
sbb
addl
push
cmc
sub
lods
adc
ja
sub
mov
out
xchg
insb
mov
and
mov
ss
stc
fwait
or
add
mov
cmc
repz
dec
fisubl
ret
leave
xchg
push
mov
mov
sti
xor
push
inc
out
in
cmpsb
push
mov
dec
inc
subl
in
rcl
aaa
xchg
scas
outsb
shll
push
xchg
mov
inc
aaa
imul
and
outsl
subl
imul
cmpsl
scas
sub
aam
sub
or
mov
push
lock
mov
aaa
stc
adc
cmp
jmp
jno
dec
clc
pushf
mov
dec
popf
xor
inc
dec
cwtl
lds
mov
pop
cwtl
jbe
fdivp
xor
and
xchg
jae
add
xchg
pop
shr
leave
das
sbb
adc
pop
stos
jb
ficompl
push
jl
dec
adc
cmp
inc
loope
nop
lea
push
mov
cmp
inc
out
and
imul
or
xchg
stc
bound
mov
fs
push
sbb
sbb
leave
inc
nop
dec
jp
je
iret
mov
insb
dec
xchg
push
mov
jecxz
testb
mov
clc
add
ret
icebp
mov
es
outsb
out
int
int3
test
push
lret
cmp
push
pop
inc
jl
add
lods
mov
sub
and
jp
mov
fs
fdivrs
pop
pop
mov
jg
jo
hlt
mov
push
in
in
sub
icebp
lcall
or
pusha
fs
aas
iret
shlb
inc
and
imul
fwait
jmp
stos
decl
arpl
jns
nop
mov
enter
mov
mov
into
xchg
loope
add
inc
pusha
jno
out
fcomi
scas
shll
ja
mov
popa
sub
push
sbb
inc
xchg
movsl
imul
xlat
cmpsb
sarb
mov
jecxz
mov
daa
mov
enter
daa
mov
push
mov
jno
pop
lret
xor
inc
pop
out
stc
out
inc
add
fdivl
xchg
xchg
xor
aas
std
pop
adc
pop
xchg
mov
or
loope
icebp
jge
or
sub
cmp
call
lret
dec
and
mov
fld
adc
inc
pop
jbe
push
in
mov
out
and
or
shll
fdiv
mov
popa
add
daa
stc
test
rcrb
aad
and
dec
lret
fidivs
or
popa
lcall
outsl
or
cmpsl
adc
dec
leave
or
addr16
repz
cmpsb
and
xor
into
outsb
icebp
or
jmp
inc
out
sahf
fstpt
xchg
mov
clc
inc
jo
push
mov
pusha
add
pop
dec
int3
and
imul
enter
inc
xor
imul
daa
fdiv
xchg
in
pop
pusha
shlb
cs
lret
push
adc
inc
cmp
or
xchg
or
cmpl
pop
sub
mov
adcl
or
test
or
mov
xor
movsl
aam
jecxz
dec
pop
xchg
js
pop
dec
mov
sbb
out
sub
shlb
xchg
stc
mov
or
icebp
mov
ret
or
icebp
hlt
insb
mov
push
cmp
pop
aaa
sbb
data16
jb
cwtl
xor
pop
clc
adc
sub
jb
jae
clc
jg
pusha
sub
mov
mov
mov
aaa
xorl
movsb
je
and
fwait
cmp
adc
clc
and
in
dec
std
jmp
mov
cmp
gs
and
std
out
sar
adc
cld
adc
aas
dec
repz
cmp
xchg
cmc
movsb
inc
xor
pop
rclb
mov
inc
jp
xchg
leave
leave
xchg
pop
pop
popf
jle
out
imul
jl
outsl
dec
ret
mov
stos
popf
adc
xor
jae
adc
push
sbb
into
in
sub
dec
sub
push
pop
xor
inc
popf
shlb
ret
js
bound
mov
sarl
ds
daa
les
ss
adc
and
clc
mov
jo
mov
jle
lret
pop
mov
scas
shll
mov
sub
jg
add
iret
mov
inc
les
cwtl
xchg
mov
je
fldl
call
aas
sbb
mov
add
add
cli
xchg
or
outsl
inc
add
ss
popf
repnz
fcmovnb
xor
jge
ret
lods
dec
cmpsb
out
and
ret
data16
loopne
cmp
cmp
dec
ss
xor
roll
stos
mov
movsb
dec
xor
adc
xchg
addr16
es
mov
call
inc
push
sbb
leave
mov
mov
mov
int
jl
cs
sub
imul
lds
lret
mov
into
mov
sub
lret
imul
loope
or
jae
push
push
push
add
jmp
or
cmpsl
pop
xor
ficoml
jg
add
inc
xchg
add
test
clc
dec
inc
mov
push
jle
imul
dec
and
mov
ljmp
xchg
in
sahf
mov
dec
mov
outsb
aam
dec
sub
aam
push
or
lahf
aam
inc
loope
ret
xchg
ret
fdivs
cmpsb
aas
outsb
in
cmp
lock
xchg
das
mov
xchg
aaa
inc
cmp
ljmp
inc
jno
cmp
lods
lock
xchg
jecxz
mov
fnstcw
jne
negl
sbb
test
sahf
fwait
inc
cwtl
je
mov
sub
xor
mov
fs
pop
push
test
lds
cmpsb
xchg
into
dec
adc
adc
repz
jge
es
mov
hlt
lds
ret
mov
call
scas
pcmpgtw
jae
sahf
fwait
popf
mov
mov
int
icebp
lods
jne
popf
jnp
mov
das
adc
rcrb
imul
inc
fs
icebp
jge
scas
pushf
dec
mov
add
hlt
movsl
in
lahf
or
mov
jno
dec
sub
repz
jno
mov
cwtl
jp
jle
cli
sub
fcomps
fistl
lret
fadd
loope
aad
or
sbb
jl
or
insb
dec
sbb
shll
ljmp
hlt
add
mov
aaa
mov
fmuls
lahf
sbb
jae
and
popf
out
setle
mov
mov
daa
das
inc
sbb
sbb
mov
sarl
dec
imul
cmp
mov
std
adc
test
xchg
shl
jmp
xchg
js
cmp
loopne
leave
adc
mov
lahf
scas
jb
mov
loope,pn
pop
xchg
std
bound
xor
sbb
ds
andb
bound
lock
pop
or
pop
xchg
int3
movsb
mov
jge
ja
sub
ja
push
loope
pusha
jge
xchg
imul
fisttpl
test
add
ljmp
dec
mov
cmc
fisubl
aaa
cwtl
mov
repnz
mov
movb
adc
gs
mov
leave
out
mov
sbbb
aam
or
popa
mov
scas
sarl
dec
daa
sti
cmp
mov
push
les
mov
sub
addr16
daa
test
push
ret
add
scas
sub
dec
jb
push
fwait
jb
test
and
sbb
lret
mov
and
cmp
mov
and
add
mov
adc
mov
test
daa
sbb
ficoml
icebp
dec
sbb
inc
sub
test
sbb
xchg
pop
dec
movsl
inc
pop
mov
and
sbb
push
inc
jns
xor
dec
mov
xor
xchg
hlt
pusha
adc
movsl
stc
ja
sub
pop
add
inc
mov
test
and
xchg
mov
test
sbb
jmp
hlt
xchg
adc
je
jle
dec
or
cli
adc
mov
mov
scas
push
js
mov
xchg
dec
cs
dec
cmp
aas
or
and
shl
fwait
lods
pop
inc
int3
sbb
add
pop
pushf
sbb
ss
aam
aad
aaa
mov
enter
cmovbe
lcall
or
mov
and
inc
adc
cmpsb
mov
leave
insb
adc
sub
cmc
int
sbb
pop
out
nop
push
lds
mov
mov
cmc
les
fdivl
inc
fsubs
lds
jmp
mov
mov
ss
mov
mov
lea
or
and
or
mov
pop
int3
lcall
push
sarb
dec
pop
lds
popf
mov
movsb
dec
mov
pop
xor
add
sub
push
cli
cmp
push
mov
pop
xchg
pop
cltd
in
mov
dec
xor
mov
or
lcall
adc
js
mov
add
inc
fs
and
push
testb
fnstcw
sarb
loop
hlt
xchg
cmp
or
xchg
dec
and
jge
sbbl
dec
cmp
push
int
jmp
popf
pusha
cld
mov
add
ret
jmp
ss
mov
mov
xor
je
jb
ret
sti
fimull
popf
setge
fsts
or
pushf
xchg
pushf
stos
inc
loop
lcall
xchg
inc
dec
sahf
sub
jne
push
push
mov
bound
movsl
out
and
scas
lea
cmp
pusha
mov
or
fidivrl
dec
jp
xchg
sbb
out
adc
add
fnstenv
stos
mov
fisubrl
pusha
flds
xchg
mov
inc
and
popa
jmp
mov
inc
jl
lds
add
js
test
js
ljmp
fucomip
mov
icebp
addb
push
mov
pop
test
or
cmpsb
xorl
push
jle
jb
push
repz
mov
inc
add
dec
pusha
ja
jbe
jge
ficoms
add
xor
mov
jl
lret
pop
nop
ljmp
add
mov
mov
or
adc
push
push
in
jp
jno
test
jne
nop
mov
or
fldt
enter
and
cld
aaa
pop
sbb
and
repz
dec
pop
and
in
mov
and
xor
ffree
std
insb
cmp
push
sbb
add
fsubrl
lea
sbb
inc
gs
pop
cmpsb
outsb
test
and
pop
jo
and
pop
dec
mov
fwait
dec
pushf
pop
cltd
aad
xor
jne
xor
jl
ja
cwtl
push
pop
and
xchg
rcll
fs
arpl
enter
add
jns
mov
mov
mov
test
in
mov
add
adc
outsl
mov
fdivl
lea
sbb
mov
loope
lea
out
imul
mov
jge
inc
mov
adc
out
inc
fdivl
and
sub
adc
dec
pop
mov
inc
and
rcpps
data16
sbb
or
xchg
jo
xor
imul
fucompp
lahf
cli
push
push
sub
mov
xor
pop
xor
call
cwtl
ljmp
jno
mov
or
iret
pusha
lret
lcall
mov
sub
and
cwtl
mov
cmpsl
pop
notb
sub
into
lcall
jmp
pop
lcall
fs
cmp
jno
lods
adcl
push
int3
fsubl
adc
push
cmc
imul
mov
pop
clc
je
lods
test
add
subb
xchg
pop
pmaxsw
data16
stos
sarb
pop
push
sub
push
test
out
push
xor
imul
out
das
outsl
pop
lods
in
mov
add
sub
lods
mov
pop
cmp
push
mov
mov
add
daa
rcll
test
fwait
mov
icebp
mov
iret
lods
inc
sub
test
in
sti
add
sbb
pushf
mov
pop
fwait
outsb
push
xchg
sub
cwtl
andl
hlt
mov
dec
xor
int
mov
outsl
out
data16
cmpsb
out
jb
ret
mov
in
jl
dec
in
pop
je
jmp
mov
push
stos
mov
std
nop
jg
jecxz
and
sbb
addb
xchg
and
int
arpl
dec
lret
sub
loopne
js
inc
jb
cmp
dec
js
data16
enter
or
into
mov
jmp
lret
cld
push
ja
jno
dec
insl
push
lods
int
out
out
movb
push
test
add
lcall
loope
cmp
sub
imul
jl
and
sbb
dec
insb
repnz
push
imul
pop
insl
cmp
xor
fisubrs
shll
lock
scas
xchg
aam
js
ss
loope
push
cmp
in
push
pop
loopne
imul
in
pop
aaa
mov
stos
mov
dec
test
test
rolb
in
push
cld
push
sub
cwtl
xor
push
notb
dec
add
mov
xchg
xor
fdivp
aam
mov
adc
add
dec
mov
sbb
inc
adc
sub
push
ljmp
add
out
or
shl
inc
or
adc
cmpsl
shll
movsl
enter
or
aas
adc
dec
and
pushf
in
outsl
sbb
stos
mov
js
adc
sbb
push
push
ret
ja
pop
dec
pushf
mov
cmpsl
ja
mov
ljmp
jg
jb
stos
bound
inc
into
shr
lods
jae
add
sub
out
hlt
pop
fxch
xchg
cld
leave
popa
add
cmp
and
jp
push
stos
adc
lds
and
mov
cmpsl
xor
icebp
adc
and
popf
mov
gs
lds
or
xchg
adc
into
or
lahf
notl
shl
je
je
adc
xchg
jp
ret
sub
xor
add
mov
sub
notb
sbb
mov
mov
sub
daa
xlat
std
les
push
in
outsl
mov
jno
mov
mov
xor
lock
loope
dec
test
sub
mov
jle
add
jge
add
sub
stc
push
push
sar
cltd
dec
mov
mov
mov
dec
pop
jp
imul
add
mov
sbb
scas
dec
xor
push
sbb
inc
maskmovq
imull
mov
jg
sub
mov
dec
inc
sbb
mov
movsl
dec
cli
push
cmpsl
bound
dec
fwait
mov
mov
cmp
mov
jo
cmpsb
mov
jbe
cmpsl
pusha
lret
sub
daa
stc
test
mov
jge
cmpb
ja
mov
cltd
cltd
into
pop
cmp
aam
add
in
jo,pt
sbb
scas
push
pushf
test
add
es
mov
inc
mov
pop
mov
popa
cmc
loope
sub
push
dec
pop
cmp
jle
arpl
in
stc
les
arpl
lcall
cltd
push
stc
xorb
ret
jge
pop
out
cmp
pushf
jns
jge
pop
fisubl
push
push
xchg
cli
dec
rcrb
xchg
daa
mov
pop
cmp
jae
sbb
inc
sub
sbb
notl
cmpsb
ljmp
fidivl
pop
cmp
daa
xchg
insb
adcl
sbb
and
xchg
test
lahf
xchg
pop
mov
mov
pop
fdivrl
cmp
xchg
adc
fsubp
xor
mov
adc
loope
jmp
in
repz
dec
dec
mov
fsubl
sub
pop
outsb
and
test
loop
xchg
call
imul
sub
sub
jecxz
popf
add
push
xchg
xchg
popa
pop
jmp
inc
jb
inc
sub
daa
filds
xchg
lret
sti
sub
pop
hlt
fnstsw
test
add
out
mov
or
cmp
out
or
popa
lea
inc
mov
jns
and
sbb
add
add
in
imul
out
aam
sbb
lock
out
add
mov
lods
push
cmpsl
ss
ss
repz
test
sbb
fsts
push
xchg
pusha
loop
insl
jno
pop
sbb
outsb
push
jno
sbb
daa
adc
adc
push
imul
push
mov
pushf
jg
bound
xor
repnz
dec
sti
lret
dec
int
bound
push
ljmp
imul
loop
sub
shll
push
mov
shlb
cld
inc
pop
cmpsb
inc
xchg
mov
hlt
add
dec
les
add
xchg
xor
inc
das
and
shr
cwtl
test
rolb
xor
aad
push
das
xchg
xorl
cltd
jb
popa
pop
jo
sbb
iret
cmpsb
pop
lret
or
fs
dec
insl
fisubl
and
cmp
and
mov
mov
sub
mov
lods
lret
arpl
cs
mov
inc
xchg
ljmp
clc
outsb
sub
mov
add
loop
or
and
icebp
mov
or
aad
leave
int
outsb
shll
insb
shrb
jl
aad
hlt
mov
fs
int3
aaa
aad
dec
dec
add
in
insl
lods
xlat
mov
fnop
cli
adc
inc
lahf
cs
repz
add
inc
out
fnstsw
mov
and
push
xchg
jmp
sub
loop
sbb
adc
jns
daa
rolb
push
shr
push
imul
sahf
cmp
sti
addr16
dec
sbb
xchg
repz
xor
ja
xor
sbb
scas
movsb
cli
pushl
fsubrs
mov
ret
out
sti
pushl
es
je
jno
adc
loop
mov
sbb
jb
cmp
arpl
rorl
mov
dec
std
xchg
mov
dec
rorl
enter
dec
dec
or
in
xchg
int3
mov
fistps
test
xchg
dec
sub
xchg
pop
jmp
mov
and
sbb
ret
sbb
mov
fsubs
mov
call
xchg
scas
aad
daa
jp
push
or
sahf
xor
outsb
cmpsb
mov
xor
mov
inc
pop
cmpsl
fidivs
adc
mov
jno
in
adc
mov
mov
pop
shrl
xor
mov
xor
adc
int3
ss
adc
sub
test
sahf
popf
push
outsb
xchg
rcrb
sub
adc
fcomps
dec
roll
dec
fs
dec
mov
dec
push
cld
cmp
outsl
rorl
in
fiadds
lods
rcr
xor
mov
mov
pop
sahf
fstps
test
pop
jecxz
clc
dec
subl
int
imul
or
daa
jp
mov
pop
inc
es
jne
xadd
clc
iret
push
xlat
inc
lds
or
add
mov
push
rcrl
jp
seta
xchg
lahf
adc
push
movsl
adc
jmp
test
mov
sbb
jnp
lods
stos
popa
stc
xor
xor
fwait
out
mov
and
scas
mov
pop
sti
bound
rclb
adc
out
fimull
add
pop
jae
cwtl
pop
lea
les
jne
data16
stos
xor
fdivl
leave
mov
mov
mov
adcl
jbe
dec
pop
pop
aam
or
xchg
call
int
jae
filds
movsl
xchg
call
xchg
iret
xchg
scas
xchg
xchg
scas
dec
or
xchg
shlb
pop
test
mov
push
test
out
hlt
pop
sub
inc
out
push
dec
testb
push
enter
shrb
rorl
nop
add
push
insb
jl
daa
sbb
insl
sahf
cmp
or
add
cli
mov
jbe
ret
out
loop
add
hlt
aas
popa
xor
cs
testl
or
inc
inc
cltd
ret
jl
push
dec
test
mov
xchg
push
dec
push
add
mov
xchg
movsb
pop
daa
fistl
sub
push
std
loop
call
cwtl
add
mov
je
xlat
jne
repz
dec
and
rclb
adc
mov
mov
xchg
pop
jo
loop
cs
xlat
jg
xor
mov
add
or
test
mov
xchg
mov
xor
insb
sub
pop
inc
daa
ljmp
mov
mov
xor
cwtl
dec
ret
das
xor
sti
jp
mov
cli
cmp
push
movsl
fs
dec
popf
out
mov
pop
or
shl
lahf
xchg
sub
xchg
add
mov
dec
jle
ljmp
cwtl
cmp
push
lods
gs
jnp
xchg
xor
es
stc
cmp
push
or
add
fwait
push
push
in
add
xor
xchg
jp
push
es
or
adc
dec
popf
inc
pop
jo
out
mov
and
cwtl
ret
imul
outsl
js
cmpsl
pop
xor
orl
repz
fdivrs
in
fistps
call
xor
mov
push
lds
xchg
outsl
add
pushf
ja
les
push
into
fwait
out
adc
ds
scas
cmp
mov
pop
mov
mov
pop
cmp
or
popl
xchg
sbb
sbb
or
jb
dec
aad
push
pusha
daa
inc
adc
pop
pusha
out
inc
insb
jnp
push
cmp
mov
stos
scas
mov
addr16
push
push
push
je
inc
sub
jge
dec
sbb
cs
inc
mov
or
cmpsb
iret
inc
repz
mov
hlt
mov
scas
cltd
test
push
gs
jb
cmp
andl
enter
pop
xchg
xchg
jle
push
xor
inc
dec
pop
push
push
mov
xchg
pop
mov
enter
pop
pop
das
repnz
lea
aad
lret
add
xor
jmp
sar
mov
push
and
push
out
divl
icebp
movsl
out
sbb
push
ljmp
fildll
cld
dec
xlat
shll
cld
dec
dec
lock
sub
iret
pusha
rclb
sub
push
loop
sub
into
scas
es
pop
cmp
mul
mov
cmpb
xchg
push
pop
xchg
xchg
sbb
shrl
jp
inc
jns
cmp
insb
ds
xchg
cmpsl
sbb
jb
outsl
push
or
xchg
cld
add
xchg
push
hlt
je
pop
push
cwtl
pop
pop
jl
or
dec
out
ficomps
les
mov
add
and
cld
mov
mov
call
clc
push
pop
pop
fdivrl
das
repz
pop
call
mov
adc
and
push
inc
sti
mov
insb
push
cmc
in
insl
xchg
sub
movsl
loope
jns
repz
leave
mov
and
sub
jbe
ljmp
cmc
cltd
pop
aaa
mov
mov
test
test
mov
jl
adc
pop
dec
xchg
jb
inc
sub
inc
rep
inc
mov
pop
cld
push
xor
mov
or
cmp
or
sbb
insl
add
jae
sti
pop
js
insl
mov
pusha
push
adc
pop
xchg
div
adc
xor
add
lock
loopne
cmp
mov
jg
add
imul
cmp
aaa
push
dec
mov
popa
mov
push
lods
loope
add
xchg
call
fiadds
repz
push
sub
addr16
push
xlat
repz
adc
js
fstl
je
aas
dec
mov
pop
mov
and
mov
arpl
push
or
mov
adc
imul
push
inc
pop
enter
outsb
in
aas
sti
push
out
mov
or
fwait
aaa
imul
mov
arpl
inc
imul
rorb
imul
xor
rcrb
sbb
cmpsl
shlb
cmpsb
adc
sbb
jg
sbb
xchg
cmp
pop
mov
fwait
pop
add
gs
inc
cmpsb
sbb
into
cmp
popa
sub
hlt
pop
jne
jne
xchg
jbe
cmc
xchg
mov
cmpsl
xchg
inc
inc
daa
xor
sbb
fstp
cmpsl
jp
jnp
sub
in
and
fistps
inc
push
mov
jb
rclb
ret
lea
mov
call
sub
adc
es
fdivrp
loope
into
stc
or
out
push
and
push
fidivs
fwait
dec
outsb
add
and
inc
adc
int3
sti
xchg
xor
imul
inc
mov
jo
jnp
enter
test
mov
test
inc
int3
jmp
bound
push
and
out
out
cmpsb
add
cmc
mov
sbb
xor
je
dec
cmc
and
jbe
mov
movsl
aad
ds
aam
rcr
or
clc
fsubs
push
jnp
mov
pop
inc
inc
nop
test
test
jl
push
fwait
imul
sahf
repnz
hlt
sub
lahf
je
js
shll
icebp
mov
sbbl
movsb
mov
and
lret
stos
aam
outsb
cmc
pop
or
stc
cli
gs
jne
icebp
fadds
xor
into
push
ds
push
and
pop
mov
or
aas
xchg
mov
sub
sub
push
shr
xor
inc
sub
mov
ds
out
mov
jae
xchg
jp
xchg
xlat
movsl
sub
jecxz
and
lcall
cmp
push
fsts
loopne
add
fcoms
int
or
xchg
popf
sbb
jns
pop
mov
lods
idivl
in
int
mov
sarb
mov
pop
cwtl
adc
and
mov
test
push
movb
add
dec
xchg
shll
ficoml
sbb
sub
into
daa
ret
call
jmp
pop
lock
ja
call
xchg
push
mov
adc
xchg
mov
aas
cmp
out
addr16
in
scas
xchg
fmuls
scas
int3
in
movzbl
sbb
cli
mov
xor
test
and
test
into
push
dec
jnp
inc
push
out
ficompl
add
pop
or
or
cli
cmp
cmpsb
mov
fs
dec
push
mov
leave
add
into
xor
mov
sub
cltd
addr16
inc
push
scas
push
les
add
daa
jbe
jp
sub
outsl
insl
add
mov
mov
sbb
out
push
cltd
adc
or
addr16
loop
rolb
outsl
inc
mov
cmpsl
mov
jae
dec
xor
mov
cltd
into
fidivl
cmc
dec
and
or
cmp
pop
dec
jp
or
addl
aas
fimull
xor
dec
int3
fisttpll
mov
out
cs
test
movsb
xchg
inc
fbstp
cmpsl
outsb
mov
ds
aas
push
inc
call
int3
jp
call
aaa
notb
inc
mov
push
cwtl
imul
add
inc
cld
movsl
mov
dec
adc
mov
mov
adc
xlat
dec
adc
or
bound
rol
inc
in
ja
rorb
dec
sbb
test
imul
add
enter
subl
out
xor
inc
popa
xor
cld
fnstsw
icebp
dec
cmp
dec
mov
mov
pop
into
cmp
sub
repz
push
xchg
in
addr16
push
scas
gs
sbb
cmp
int
lock
and
movsb
divl
add
mov
leave
lock
cltd
popf
ret
movsl
es
mov
push
dec
aam
aad
dec
push
repnz
jmp
sbb
xor
ret
scas
and
push
lock
add
shrl
pop
fadds
std
hlt
cld
loopne
fcoms
cmp
jnp
in
add
in
imul
fs
and
or
sti
or
clc
mov
mov
mov
les
adc
pop
jg
fsubl
add
jo
dec
xchg
mov
pop
pushf
out
dec
mov
lret
or
xchg
jl
dec
mov
lea
xchg
or
mov
movsl
xor
loope
cs
stc
repnz
mov
xchg
rcr
or
loope
or
mov
cmp
cli
arpl
bound
ret
pusha
test
pop
mov
idiv
popa
adc
call
pop
loopne
dec
and
xchg
mov
hlt
cs
dec
out
mov
add
mov
mov
inc
mov
jge
mov
mov
scas
div
mov
dec
add
fcoms
and
xchg
aas
xor
rol
pusha
mov
insl
and
mov
pop
inc
cli
mov
mov
mov
push
hlt
xchg
stos
cmp
jg
dec
mov
pop
adc
cmpl
divl
xor
rcrb
insl
shl
cmpsb
daa
js
ja
xor
or
rcrb
add
test
mov
stos
inc
aad
jo
ret
hlt
in
push
and
pushf
dec
dec
cmp
or
or
arpl
shrb
push
mov
mov
test
dec
dec
fucomip
lods
je
jo
mov
xchg
call
inc
sbb
mov
mov
test
push
out
call
sub
xor
mov
mov
cs
inc
int3
adc
or
cmc
pmaddwd
loope
in
dec
mov
pop
loope
cmp
inc
rolb
ret
push
comiss
sbb
pop
sub
imull
and
pushf
xchg
pop
jbe
sub
mov
xchg
inc
lds
iret
sahf
jne
xlat
fdivrl
mov
adc
cmp
lock
jg
pop
rorl
sub
adc
insl
adcb
jae
aam
fnstsw
jo
and
or
jmp
push
mov
pop
dec
xor
dec
jl
inc
stos
and
inc
roll
sbb
and
dec
loope
dec
in
dec
addr16
fildll
jae
fbld
cwtl
fwait
outsl
dec
sbb
mov
pop
adc
mov
pop
je
lods
or
push
jmp
pusha
mov
rcrb
dec
jg
push
fbstp
push
lcall
int3
xor
iret
orl
jae
and
clc
fstpt
ljmp
cld
imul
adc
xor
sub
adc
das
push
test
xchg
bound
ljmp
cmc
sti
push
aaa
sti
dec
scas
inc
shlb
xchg
pop
into
add
pop
fstpt
js
xchg
loope
pushf
mov
cmp
ficoml
add
push
adc
mov
sub
adc
mov
cwtl
mov
adc
xor
add
dec
fidivrs
test
out
into
sbb
pop
xor
mov
mov
mov
xor
mov
aas
xchg
cmpsb
loopne
mov
out
rorl
jnp
int
mov
adcl
inc
scas
pusha
fimull
xlat
add
nop
mov
std
sub
mov
xor
mov
xchg
ljmp
jp
and
test
outsb
mov
cld
cmp
xor
test
rclb
in
xchg
and
lock
iret
out
sbb
shl
scas
fisttps
scas
or
ds
xchg
or
jge
bnd
ret
stos
and
add
push
lea
cltd
push
outsl
sub
pop
lcall
sbbb
popf
mov
or
repz
shl
stc
fistpll
pop
sahf
inc
mov
cmpsb
pop
sub
lret
xlat
inc
call
addr16
xor
or
addr16
test
dec
fsubrl
lcall
fstpl
call
test
and
pop
push
xor
mov
aaa
inc
adc
mov
mov
push
fldcw
sbb
aaa
xor
adc
xchg
or
leave
mov
jl
hlt
push
mov
leave
add
dec
ss
into
outsb
roll
jns
outsl
push
pop
inc
xchg
or
hlt
pop
nop
ja
lret
cwtl
repnz
add
xor
mov
je
pop
pop
scas
test
ja,pn
cmpsl
pop
shrl
sti
push
or
subb
sbb
mov
push
lret
xchg
iret
push
shll
mov
xchg
loop
xchg
mov
cmpsl
lds
mov
arpl
mov
iret
mov
sbb
pxor
arpl
stc
cltd
cs
or
xchg
stos
sar
xchg
arpl
movsl
mov
push
shrb
imul
pop
xlat
fisttpll
testl
cmpsl
inc
mov
lods
dec
pop
jmp
mov
aad
sub
jae
out
mov
enter
mov
inc
test
mov
cmp
add
cltd
cmp
push
jl
mov
mov
xchg
loop
jb
jg
mov
xchg
jne
push
out
push
mov
dec
adc
fisubs
and
sbb
test
insb
mov
mov
mov
outsl
push
insb
xor
cmc
jl
ret
gs
sti
aaa
jmp
pop
and
notb
test
sbb
adc
push
inc
daa
ret
jb
mov
or
cmpsl
mov
les
or
outsl
sbb
pop
fldcw
pop
nop
xchg
or
or
fisubrs
les
icebp
cmp
push
loope
xor
pop
call
out
fstps
fstl
sti
jno
mov
les
sub
lods
mov
nop
leave
inc
sbb
es
bsf
dec
pop
xchg
mov
incl
xchg
xor
shll
call
push
dec
in
ss
ret
push
push
mov
lods
in
mov
or
movsb
jo
xlat
out
push
cs
cmp
lret
and
pop
in
sbb
out
sbbl
jp
xchg
popa
test
stos
test
adc
inc
xchg
sbb
pop
nop
adc
scas
test
clc
int3
or
and
mov
add
je
inc
out
scas
pop
ret
in
pop
icebp
and
inc
mov
cli
loopne
xchg
test
out
or
insl
mov
lcall
xchg
push
icebp
xchg
mov
in
in
and
cmp
inc
scas
movsl
jae
fisubrs
std
and
pop
xor
stc
xor
xchg
mov
xor
or
mov
outsl
xchg
mov
les
ja
pop
push
jl
fmull
in
jno
pop
data16
scas
out
nop
out
mov
jl
and
pop
push
add
mov
rorb
dec
dec
lock
ss
jns
xchg
js
mov
cmpl
rcr
shlb
dec
xchg
ja
adcl
out
shlb
scas
ret
aam
insb
lret
test
mov
testl
mov
jnp
adc
gs
jae
pusha
mov
push
dec
mov
pop
jle
int3
mov
pop
aaa
ja
lret
cmc
mov
testb
adc
mov
mov
aad
pop
int
das
lds
pop
sbb
lock
enter
pop
cmc
leave
addb
imul
pop
clc
jl
ss
dec
outsl
daa
and
movsb
test
jmp
xchg
cmpsb
push
dec
test
jb
sub
nop
adc
push
fwait
xchg
bound
and
inc
push
push
mov
sub
movsl
dec
bound
mov
orb
mov
xor
xchg
std
dec
cmp
insb
adc
loope
repnz
xor
add
sti
or
pop
lods
ss
jo
pushf
inc
mov
fucom
in
das
cmpsb
push
cmp
mov
add
ss
int
stc
add
xor
or
in
mov
fst
mov
xchg
dec
outsb
stos
xchg
divl
xor
js
pop
lret
cmp
fdivs
xchg
or
xchg
jmp
push
xchg
mov
lret
lcall
jmp
xchg
ja
or
mov
add
subl
stos
push
jne
ja
in
pop
fdivrl
cmpsb
mov
lds
jge
scas
repz
ret
xchg
in
mov
xor
int
jecxz
rolb
jno
es
fstpl
dec
mov
dec
mov
jno
pop
jne
sub
mov
mov
mov
mov
add
mov
in
in
ret
gs
out
pushf
mov
mov
in
xchg
xchg
mov
push
nop
aad
inc
ljmp
daa
add
sbb
rcrb
push
mov
lret
sbb
fcmovnu
test
sbb
mov
shlb
cmc
xchg
sub
shll
movsl
mov
jae
mov
mov
inc
jne
mov
dec
bound
ret
or
or
in
xlat
push
bnd
icebp
adc
cli
push
and
and
adc
in
mov
loop
add
mov
push
stc
jae
loop
icebp
add
sub
mov
lock
adc
mov
jmp
xor
dec
mov
pop
xchg
xchg
inc
ja
inc
arpl
gs
int3
push
sub
cld
hlt
cmc
pusha
cmp
repnz
incl
cmp
stc
outsb
testb
mov
cwtl
jmp
mul
adc
aas
ss
cmp
xor
dec
movsl
jo
fbld
sbb
xchg
dec
test
shlb
sbbl
out
cmp
xchg
cmpsb
loope
jmp
mov
xchg
outsl
pop
sbb
jl
aas
outsl
mov
cmp
and
in
jp
sahf
sbb
cmp
push
sub
clc
cmpsb
jne
scas
and
mov
xor
pop
jnp
ror
frstor
lret
jl
cmpsb
xor
in
imul
add
test
sahf
push
inc
add
aas
test
or
xor
cmpsl
add
aad
jecxz
int3
insb
jecxz
into
lods
outsb
xchg
jmp
fwait
xchg
and
pop
jge
cmpsl
mov
bnd
xchg
xchg
les
cmp
sti
push
xchg
adc
mov
fists
call
sbb
jns
or
mov
lret
cmp
pusha
mov
in
mov
mov
lods
dec
mov
gs
inc
lahf
int3
jbe
mov
xchg
sahf
mov
std
je
xchg
mov
sar
xchg
sub
xchg
fadd
mov
push
jne
adc
pxor
pop
repnz
rcrl
adc
jmp
pop
cmp
sbb
jecxz
or
hlt
jnp
push
loopne
push
dec
rcrb
mov
lods
sti
cmp
addl
je
dec
addr16
sub
mov
push
sub
jmp
jnp
in
adc
mov
jecxz
or
cli
daa
test
fwait
lods
xor
aas
ss
into
outsl
inc
cmpsb
lock
in
or
ss
jl
inc
pop
push
rcl
repz
jle
push
enter
test
push
and
test
pop
lea
orl
adc
or
pop
sahf
fcomip
xchg
test
arpl
test
sub
sub
mov
pushf
pop
pushf
mov
dec
xlat
call
fdivp
jo
jle
aas
xchg
es
mov
xlat
sub
mov
mov
mov
iret
jp
dec
adc
stc
add
and
sbb
pushf
adc
mov
add
xchg
pop
mov
mov
popa
arpl
mov
repnz
and
xor
pop
xor
dec
outsb
pusha
shrb
ret
pushf
out
pop
mov
inc
xchg
iret
scas
fs
push
mov
lret
pop
lcall
jae
xor
outsl
push
lret
lahf
jle
movsb
cmpl
imul
nop
enter
not
push
pop
stos
imul
sub
out
lret
icebp
scas
mov
pop
stos
push
xor
push
xchg
fs
and
faddp
out
mov
aaa
mov
js
xor
pusha
sbb
sbb
lock
mov
xor
daa
enter
mov
cmp
mov
nop
hlt
rcr
leave
mov
mov
push
adc
test
push
add
stos
mov
lahf
roll
lock
or
adc
nop
pop
stc
mov
int
sub
xor
lea
popa
add
gs
jae
lods
pop
hlt
mov
jl
test
add
push
mov
out
jo
push
cmpl
push
push
inc
insl
lea
rcll
lds
cld
and
inc
js
mov
mov
push
or
or
lock
and
repnz
cmpb
jno
mov
pop
fwait
inc
mov
pop
sub
sub
mov
icebp
inc
dec
int
addr16
cld
adc
xchg
icebp
or
pop
scas
jmp
or
pop
jl
inc
adc
push
out
push
hlt
push
pushf
out
scas
or
popf
lea
mov
add
add
sbb
fcmovu
pop
and
inc
out
cmp
cmpb
test
dec
push
xchg
in
push
pop
repz
dec
wrmsr
test
inc
pop
inc
mov
sbb
shll
fisubrl
aam
add
mov
push
mov
mov
sbb
jle
mov
faddl
pop
push
js
mov
cmc
int
test
pop
subl
mov
xor
daa
loop
test
dec
inc
push
jne
sbb
ljmp
push
cmp
inc
aaa
cmpsb
nop
pop
stos
pop
mov
loop
sbb
adc
pop
lea
inc
rolb
inc
cmp
push
adc
jne
add
test
vmlaunch
outsb
mov
xchg
les
inc
les
push
mov
popa
fmull
mov
js
lods
aas
mov
clc
das
adc
fisttps
nop
and
or
inc
lods
push
btc
cmp
lahf
xchg
jae
lds
push
inc
mov
fdivrs
invd
push
push
sub
shr
les
pushf
xor
dec
std
int3
sbb
mov
mov
mov
and
sbb
add
xchg
sbb
jne
lds
and
pop
cli
inc
pop
push
mov
and
inc
fst
sbb
or
xchg
lods
movsl
cmp
adc
adc
push
adc
inc
nop
xor
fcomi
jbe
inc
push
fidivrs
and
inc
jle
fisttpl
jmp
popa
arpl
sub
xchg
stos
test
mov
lock
jno
pop
inc
ja
loope
out
xchg
and
sti
stc
hlt
imulb
lahf
inc
cmp
push
movsl
sti
and
sti
inc
mov
mov
pop
xchg
and
lds
mov
int
add
adc
addl
mov
ds
mov
adc
jle
sbb
ficomps
ss
mov
cmp
out
push
mov
decl
repz
int3
fisttps
adc
js
mov
je
dec
daa
daa
icebp
cmp
xor
push
jno
inc
mov
ret
sub
das
dec
inc
mov
gs
lret
shll
popf
dec
pop
repz
data16
push
ljmp
push
sahf
jl
cmpsl
pop
adc
jl
out
fisttps
subb
call
pop
cli
mov
mov
imul
mov
cmpsl
cs
clc
fwait
or
cmp
add
cmp
adc
sti
test
imulb
insl
pop
fcmovne
aas
mov
inc
mov
subb
mov
inc
rorb
stos
adc
sub
rorl
sti
add
popf
or
sbb
aam
pop
jmp
sub
push
cmp
pop
into
pop
and
or
mov
push
outsl
sbb
or
lahf
mov
xor
adc
shr
std
jmp
sbb
adc
mov
fcomps
out
and
jb
sbb
dec
add
sbb
inc
xor
push
mov
cmp
pushf
fmulp
iret
std
aad
test
inc
adc
xchg
mov
scas
shrl
jns
outsb
das
fwait
jo
outsl
out
fiadds
xor
mov
and
pop
jecxz
pushf
fwait
std
in
bnd
in
mov
adc
jns
mov
bound
test
push
frstor
gs
adc
std
mov
rorl
jmp
mov
inc
out
mov
scas
add
enter
or
jl
pop
movsb
pop
xchg
rcll
stos
decb
pushf
xchg
add
nop
jl
aam
push
adc
add
psllq
or
mov
inc
push
pop
mov
fcomi
lock
mov
inc
fnsetpm(287
add
nop
scas
out
out
lea
pop
dec
iret
pop
sbb
in
es
or
add
xchg
cli
sahf
cld
das
cmp
movb
pop
cmp
jb
pop
sub
popa
sti
pop
inc
cmp
rorb
fs
xchg
std
popa
add
loopne
sti
dec
sbb
call
notb
sub
cltd
inc
sub
pop
add
sbb
add
pop
and
fldl
imul
adc
sahf
fnstsw
jl
pop
sar
ret
imul
in
ljmp
shrb
xlat
jnp
and
adc
inc
pop
jmp
and
mov
jmp
fdivrl
inc
andb
orl
pop
mov
mov
pop
mov
test
fiaddl
pushl
out
push
testb
int3
lahf
loopne
mov
lea
insl
out
mov
adc
repnz
fisubl
cmc
lock
mov
popa
mov
ds
push
sbb
and
pushf
fs
nop
pop
ja
dec
test
adc
or
ljmp
fstpt
call
repnz
int3
int3
inc
hlt
scas
xor
lret
xchg
and
mov
mov
push
pop
ret
lret
sub
adc
ret
movsl
sub
pop
mov
mov
sar
mov
mov
jmp
cli
test
scas
lcall
mov
gs
mov
insl
xlat
aas
cmp
fldl
push
inc
jbe
add
mov
jo
je
lret
mov
mov
into
fxch
loopne
cmc
add
nop
pop
imul
adc
outsb
in
ret
sub
stos
faddl
xor
xchg
fnsave
ds
jns
mov
int3
push
cld
sbbb
dec
push
loop
repz
sar
adc
cmp
adc
dec
cltd
scas
adc
insl
jle
dec
mov
pushf
fisubs
mov
dec
mov
hlt
sub
xor
aas
call
sbb
push
xlat
sti
popa
lods
out
iret
pop
mov
les
pop
bound
popf
addr16
dec
in
mov
addr16
and
fisttpl
enter
les
xor
jb
adcb
or
cwtl
sbb
lock
repnz
cwtl
sub
xchg
nop
dec
pushf
dec
cmp
jmp
mov
cld
es
out
sbb
stc
mov
mov
sahf
dec
adc
pop
loope
lods
mov
lock
pop
repz
or
mov
hlt
std
sbb
int
je
loope
jge
xchg
repz
push
in
cmc
cld
sbb
cmp
mov
ljmp
sub
inc
loopne
xlat
xorps
fs
pop
lock
sub
sbb
dec
cmp
fstpt
pop
mov
xor
push
dec
push
and
pop
rcr
and
add
push
scas
out
inc
scas
mul
aaa
lea
mov
jge
sub
stos
fimuls
mov
dec
sub
sbb
les
pusha
gs
jecxz
mov
into
rcrb
xor
pushf
jp
adc
nop
inc
sbb
add
daa
mov
xor
fisttpl
pop
pusha
add
sub
sbb
push
bound
sub
outsl
or
sbbb
mov
dec
loope
sbb
push
adc
jnp
addl
jo
sahf
stos
lods
jne
loopne
adc
aam
fbstp
adc
aaa
outsl
out
fdivp
pop
inc
movsb
pop
mov
mov
jg
xchg
cmp
dec
dec
mov
mov
cmp
pop
hlt
dec
jne
lea
into
mov
xchg
movsl
mov
mov
push
xchg
sbb
call
dec
repz
mull
or
ljmp
scas
stos
test
js
mov
push
mov
data16
cld
aaa
pop
int3
cmp
in
mov
mov
jle
testl
ret
jmp
pop
sbb
dec
lcall
pop
adc
stos
dec
jecxz
xor
and
scas
mov
mov
mov
je
and
daa
xchg
clc
sets
mov
icebp
out
dec
fucomp
pusha
sti
insl
stos
push
aad
cmp
xchg
mov
das
adc
mov
mov
ss
outsb
icebp
lret
pop
push
in
adc
mov
xor
xchg
add
stc
xchg
xchg
push
int
mov
bound
jg
pmuludq
or
cmp
in
repnz
pusha
in
xor
into
sub
pop
cs
adc
loopne
popa
rol
and
inc
pop
les
dec
sub
leave
mulb
add
adc
popf
mov
dec
mov
aas
cmp
cmpsl
data16
into
mov
xchg
add
cmp
add
jge
mov
push
pop
aad
mov
mov
push
adc
ljmp
mov
push
ja
sbb
or
test
fucom
and
andl
or
mov
push
pushf
sbb
mov
into
faddp
adc
lods
push
inc
mov
pop
inc
ret
jne
xchg
icebp
iret
mov
inc
outsb
std
les
xor
xor
mov
dec
jg
mov
mov
mov
pushf
mov
jo
jnp
push
out
loopne
adc
mov
leave
or
or
movsl
aad
hlt
cltd
call
mov
pop
repnz
xor
fidivs
pop
xor
setno
jge
loope
pushf
pop
inc
cmc
cmpsb
or
or
cmpsl
or
imul
jne
xchg
enter
mov
push
jmp
mov
cld
adc
pop
rcl
xchg
pop
js
push
mov
cs
imul
jecxz
and
bound
call
enter
jae
out
aaa
mov
dec
lcall
push
test
fistpl
mov
fistpl
aas
out
inc
loop
mov
out
adc
and
popf
cmpl
xor
bound
or
cmp
lahf
cld
and
xchg
xchg
jae
int
loope
outsb
mov
in
insb
std
movsb
xchg
in
cltd
pop
flds
and
mov
sbb
jae
xchg
popl
lock
mov
in
sbb
sbb
addl
dec
popf
and
in
sbb
ja
lret
inc
addr16
add
aam
lods
test
adc
jbe
adc
loope
addb
dec
test
adc
dec
aad
ljmp
popa
pop
xlat
lret
test
test
or
fnstenv
loopne
std
pop
mov
inc
cmpsl
in
test
fnstsw
dec
add
repz
div
and
push
adc
ret
adc
fidivrs
push
repnz
sar
scas
mov
dec
popf
aaa
loopne
push
sarl
idiv
and
in
leave
int3
push
ja
aad
out
xor
xchg
leave
popl
test
xchg
adc
adc
divl
inc
adc
push
mov
pop
mov
clc
jb
sub
mov
loopne
pop
rcrb
lret
stos
add
xchg
dec
xlat
jmp
or
jns
pop
rorl
pop
es
aam
mov
dec
mov
das
xor
addr16
pop
scas
fimull
sbb
add
mov
pop
jb
push
jnp
mov
inc
inc
in
xchg
sbb
dec
pop
je
jbe
cli
cmpsb
lret
add
jno
loopne
iret
leave
sub
adc
inc
sub
xchg
xchg
ret
xor
push
ret
stos
hlt
fmuls
push
pushf
inc
sub
scas
test
and
ljmp
dec
pop
cmp
out
insb
cmpsl
or
pop
iret
fsubrl
jecxz
in
in
or
sub
cmp
les
cmp
pop
cmp
icebp
idiv
into
xchg
and
or
adc
in
not
sbb
outsb
mov
and
movsl
cmp
dec
xchg
cmp
sub
cwtl
mov
imul
inc
push
cld
es
loop
jae
add
mov
or
fimull
sub
incl
stos
mull
xorl
bound
addr16
xchg
ja
insl
les
xlat
jecxz
dec
lcall
dec
sub
inc
sahf
jo
mov
lds
lea
mov
xor
mov
dec
xchg
pop
sub
sysret
sub
jnp
cmp
cmp
xor
mov
xlat
mov
cmp
dec
or
pop
mov
pop
insl
pusha
push
addr16
pop
xchg
insl
bound
pop
jnp
daa
jae
jne
cmpsl
jge
add
xchg
add
xor
sbb
and
jmp
pop
inc
adc
fsts
mov
push
sbbl
mov
ficoms
push
stos
dec
inc
rorl
jle
sti
insb
call
hlt
push
adc
mov
xor
mov
mov
test
movsb
pop
arpl
dec
repz
cmpsb
les
or
js
mov
sbb
lods
das
xchg
cmp
imul
mov
stc
lret
xchg
cld
pop
pop
and
rcrb
and
enter
fsubl
mov
outsl
mov
add
sub
les
jbe
xchg
repnz
sub
mov
sub
ret
pop
fcmovnbe
icebp
adc
out
out
ja
repnz
adc
ja
push
xchg
aas
scas
inc
pop
pop
mov
shll
fidivrl
cwtl
fists
push
and
imul
jecxz,pt
test
jecxz
mov
test
or
sbb
and
stc
jle
mov
popf
cmpsl
adc
push
mov
xor
leave
sub
jo
or
and
push
pop
push
outsb
pop
bound
sbbl
jecxz
lret
add
nop
insb
and
dec
mov
in
mov
fnstsw
add
fiaddl
sarb
idivl
xchg
cltd
add
stc
mov
hlt
jbe
add
testb
xor
les
add
cmp
mov
sbb
mov
cs
pop
pop
pop
mov
add
pop
call
lahf
lods
add
xor
cmp
dec
lahf
stos
fs
push
repz
cmp
mov
int
sarl
sbb
scas
jne
inc
or
out
int3
fstpl
jecxz
mov
dec
ljmp
and
or
insl
dec
enter
cmp
iret
pop
es
mov
push
cmp
scas
repz
inc
test
shrl
or
stos
sub
mov
out
outsl
sbb
dec
mov
push
punpckhwd
mov
fidivrs
and
push
dec
push
test
or
xchg
rorb
shl
addl
test
gs
cwtl
mov
push
jge
mov
mov
push
mov
mov
sub
test
repnz
jmp
or
xchg
insl
shrl
jl
xchg
pop
xor
xchg
or
js
sbb
sarl
add
cmc
testb
mov
dec
pop
push
pop
call
inc
out
inc
daa
out
scas
rorl
adc
outsb
ret
outsl
enter
ret
pusha
xchg
mov
das
rol
out
enter
ja
pop
xchg
je
pop
pop
xchg
jae
adc
pop
lcall
push
adc
out
repnz
mov
dec
imulb
mov
fmuls
xchg
push
jecxz
inc
jmp
pop
es
dec
add
push
jle
loope
fwait
pop
js
outsb
or
cmp
mov
inc
push
adc
jle
stc
adc
out
mov
mov
out
lret
lods
out
inc
xor
es
outsl
js
jcxz,pn
cmp
jge
pop
movsl
dec
sub
lret
insb
into
mov
fdivr
push
sub
add
sub
aas
xchg
loop
aas
repz
shll
adc
adcb
sub
cmpsb
ss
mov
nop
xchg
es
mov
fisubs
mov
xchg
jl
inc
xor
push
loope
ret
fimull
icebp
mov
sub
xchg
mov
push
ljmp
rolb
lea
das
in
vpmacssww
add
testb
add
int3
jge
fwait
mov
cmp
mov
outsb
mov
repz
xor
fs
int
sahf
addr16
adc
sub
push
inc
pop
leave
outsb
lock
pop
imul
icebp
mov
sbb
data16
inc
loope
fisttpll
dec
inc
xchg
xchg
mov
fdivrs
adc
sti
fstpt
test
add
sbb
cmp
or
and
mov
jbe
insl
movb
add
sub
sub
lods
es
xor
xlat
inc
jg
pop
movsb
add
mov
pushf
out
pushf
loopne
mov
jg
push
and
pushf
xor
pop
insb
subb
daa
scas
mov
cmp
sar
mov
shrl
push
mov
jno
fisttpll
xor
int3
addr16
scas
mov
iret
mov
cmc
aad
int
repnz
iret
sbb
cmp
mov
or
inc
add
test
xchg
arpl
and
mov
fucomi
test
hlt
jne
pop
fcmovbe
push
push
scas
ja
lret
lret
push
jnp
sbb
sahf
xor
mov
fildll
jb
pop
add
stos
mov
mov
shll
dec
sbb
dec
and
mov
xchg
jp
inc
pop
cmpb
xor
add
hlt
sub
mov
pop
push
call
adc
xor
xorl
fdiv
xchg
sti
lods
pop
imul
repnz
test
sbb
icebp
cmc
cmp
inc
xchg
roll
push
aam
jne
dec
mov
mov
fwait
add
popa
dec
sub
inc
popf
mov
jge
dec
sub
jnp
xchg
insl
imul
push
add
cmp
adc
mov
icebp
std
iret
dec
mov
ljmp
dec
xor
jp
outsl
std
jae
sub
mov
imul
mov
jbe
xchg
mov
push
dec
push
into
inc
xor
repnz
aam
mov
mov
loope
add
pop
pop
mov
iret
fbld
pop
pop
scas
sti
lock
idivl
lock
dec
push
fwait
adc
ss
out
into
out
sub
jne
rdpmc
push
push
cmp
ret
xor
pushf
inc
fidivrs
sbb
leave
loopne
jbe
xlat
dec
jle
notl
jge
cmp
push
mov
mov
dec
jl
mov
xchg
push
movsb
xor
nop
sti
jmp
jb
xor
in
lret
into
sbb
jl
fimuls
jp
mov
xor
dec
cltd
xor
fstpl
aaa
sbb
mov
adc
lods
mov
stos
aad
inc
and
mov
stc
pop
dec
inc
sub
pop
or
or
cmp
mov
leave
shll
inc
pop
cmp
std
sub
or
std
cmp
sti
mov
or
mov
aas
sbbl
inc
call
mov
in
xor
jnp
out
dec
xchg
in
shl
sbb
cmp
rorb
xor
stos
fsubs
fstpl
iret
insb
rolb
daa
jno
iret
repz
lods
xchg
xchg
push
push
mov
fmull
lret
xor
push
icebp
and
cmp
pop
push
lock
aad
in
stos
fiadds
mov
adc
xor
adc
adc
or
call
ret
jmp
dec
pop
mov
cltd
pop
jnp
xchg
test
jge
fcompl
fiadds
rcr
sbb
xchg
pushf
add
mov
jmp
mov
mov
mov
or
roll
mov
and
fwait
iret
ret
mov
lds
xor
testb
pop
pop
popa
pop
and
mov
fdiv
scas
or
out
jg
xor
fbld
icebp
add
jge
adc
shrl
cli
repnz
and
pop
jg
and
pop
sbb
aad
fiaddl
test
mov
push
out
ds
popa
popf
dec
jg
ja
push
das
pop
xchg
xchg
movsl
sub
loopne
sti
pop
fcmovu
lahf
aas
sar
in
outsl
hlt
in
out
bound
arpl
adc
cmp
out
cmp
or
or
or
ficompl
cmp
aaa
lock
pop
bnd
fs
cwtl
sbb
xchg
in
jg
movb
jae
lea
lret
movsl
mov
fdivrs
mov
int
rcr
call
cs
test
adc
dec
dec
lds
push
inc
dec
xchg
dec
cmpsl
in
and
mov
cmp
nop
int3
mov
dec
adc
lds
push
mov
adc
dec
sub
cmp
xorl
clc
add
and
mov
add
xlat
sarl
jbe
jae
add
jo
mov
jg
in
cmp
and
add
adcl
dec
cs
mov
nop
stos
nop
pop
aaa
mov
loopne
pop
ds
rorb
and
mov
pop
leave
dec
pop
in
call
mov
mov
neg
pop
test
pusha
mov
pop
add
gs
insl
aad
xor
mov
jae
mov
inc
adc
dec
mov
jae
jmp
sub
test
mov
jnp
rcll
add
inc
cwtl
pop
call
adc
popa
lret
inc
lock
daa
push
dec
dec
xchg
mov
mov
movsb
adc
and
inc
cltd
mov
cmp
imul
pop
add
mov
fstpt
fucomip
inc
fiaddl
aad
push
mov
inc
aad
push
and
leave
rorl
cmpsl
cmc
xchg
repz
loop
and
inc
stos
xor
leave
or
clc
cmpsb
fidivl
mov
and
movb
jbe
out
adc
das
ficomps
push
stos
xchg
cmp
adc
pop
cmpsl
data16
sbb
xor
and
out
mov
push
or
dec
xchg
fmull
lods
test
aaa
cltd
enter
adc
mov
fisttpl
inc
mov
test
and
sub
jle
or
dec
sub
fimuls
pop
add
dec
fldl
int3
jno
mov
out
repnz
sahf
dec
xchg
dec
dec
out
inc
in
jno
sbb
test
pop
xorl
jge
testb
in
fdivs
push
xor
fstpt
pop
xchg
push
mov
xchg
mov
xchg
xchg
xchg
daa
leave
pusha
xor
jno
or
mov
cmp
adc
stc
jge
xchg
or
leave
adc
sub
and
jbe
cmp
cmp
repnz
sub
ret
sahf
cmpsl
xor
fiadds
dec
push
out
push
jecxz
fildll
leave
mov
jp
enter
insb
xchg
inc
insb
pop
jne
dec
imul
dec
daa
aad
and
jp
dec
hlt
cmp
push
add
lahf
sbb
movsl
repnz
mov
mov
fcomps
mul
mov
pusha
jmp
lahf
lods
out
out
dec
mov
fistpll
fnstsw
and
adc
aas
and
push
pop
mov
mov
cwtl
push
les
cmp
xchg
add
and
addr16
inc
mov
rclb
outsl
lock
jns
jmp
inc
xchg
xor
in
lds
adc
cmpb
sbb
mov
inc
lret
fstpl
jmp
inc
shlb
pop
xor
mov
cmp
xchg
pop
or
push
outsl
nop
pop
xchg
fdivl
jo
stos
push
xor
mov
adc
and
dec
xchg
scas
int
xchg
sbb
shl
sub
sbbl
jb
push
inc
push
pop
lcall
pop
divps
jb
push
jns
and
push
lret
rorb
into
daa
and
inc
xor
inc
mov
aas
or
stos
pop
jno
and
loop
mov
fsubs
jmp
lcall
mov
cmp
or
test
jg
cmp
mov
jbe
ss
in
mov
lret
icebp
push
pop
sahf
addr16
daa
nop
or
cmpsb
repz
iret
movsb
jnp
jnp
pop
ja
mov
xchg
mov
add
xchg
nop
aaa
pop
je
cmp
int
push
sbb
mov
push
dec
test
repz
mov
xchg
cld
sub
mov
jno
cmp
leave
addr16
cltd
sti
or
jge
dec
neg
mov
aaa
add
orb
lret
lahf
repnz
and
inc
fdivr
mov
aad
xor
xchg
and
jo
int3
dec
daa
ljmp
xlat
gs
jmp
loop
fstpl
sub
cmc
pop
nop
push
mov
cs
inc
add
repnz
mov
jne
mov
pusha
imul
push
js
mov
stos
add
int3
and
adc
push
adc
lret
idivl
in
inc
mov
sti
cmp
sti
rclb
push
adc
mov
lds
das
sahf
loopne
shlb
mov
adc
xchg
pusha
lds
into
push
cltd
jnp
subb
mov
dec
jg
cmp
xor
into
jne
push
loop
add
mov
pop
adcb
addr16
push
lods
addr16
in
shrb
divl
jne
das
cmp
mov
mov
or
hlt
js
xchg
pop
sbb
outsb
test
and
push
sub
mov
jb
xchg
nop
orl
pop
xor
pop
mov
ljmp
inc
clc
das
fwait
sbb
xchg
push
test
imul
push
in
test
inc
mov
pop
pop
lret
push
jmp
pop
mov
add
out
xlat
xor
mov
push
adcl
iret
sbb
mov
and
test
les
cmp
cmc
add
mov
int3
sbb
xor
fsubs
mov
mov
push
inc
pop
adc
sbb
push
mov
sub
lea
inc
out
ja
addl
insb
rcll
lock
leave
ja
loope
add
adc
out
mov
push
pop
push
inc
sbb
in
popl
xlat
xor
mov
adc
aaa
xor
inc
dec
add
clc
xor
pop
dec
imul
fidivrs
jb
testl
pop
leave
mov
clc
test
jmp
sti
aam
adc
stos
push
push
dec
dec
push
in
xchg
leave
dec
cmp
xor
nop
arpl
rcrl
aam
jnp
jb
push
sahf
or
out
adc
dec
xor
call
mov
mov
mov
mov
xchg
push
dec
lret
push
xchg
sbb
in
mov
out
shrl
sub
lret
add
aas
les
dec
sub
iret
test
andl
cmp
push
jle
mov
js
pop
gs
adcb
movl
sti
shlb
test
or
jge
sbb
int
mov
xor
aaa
nop
cmp
jns
adc
aaa
xor
movsl
rcrb
or
dec
in
rorl
das
jmp
sbb
and
xor
pop
movsl
pop
fldl
or
aad
daa
pushf
stos
ficoms
or
jb
shll
shlb
jg
add
xor
jno
mov
sbb
iret
repz
ljmp
cmp
push
hlt
mov
movl
mov
sti
mov
sbb
js
cld
fisttps
pop
xchg
fs
cmpsl
adc
add
push
shll
mov
add
mov
jne
add
imul
jns
cmpsb
dec
pop
sbb
xchg
mov
test
inc
mov
sub
sbb
in
jp
jg
in
fisttpll
scas
mov
push
xchg
in
fwait
out
shll
mov
mov
aam
lret
aas
bound
lods
cmpsl
cmpsb
cmp
mov
leave
sub
leave
pop
sub
push
jno
shr
pop
loop
dec
inc
loope
sbb
sub
aad
or
sub
popa
jbe
test
mov
ljmp
scas
jg
jo
jmp
sub
out
gs
mov
iret
mov
jo
mov
hlt
jb
lcall
mov
scas
mov
mov
or
std
cmp
and
mov
push
das
js
mov
notl
adc
and
notl
rolb
push
cmp
pop
mov
es
int
inc
cld
iret
xchg
fstpt
loopne
inc
dec
cs
bound
pop
in
cmp
mov
divl
and
lahf
jg
jbe
and
fbstp
mov
clc
add
mov
or
mov
mov
add
notl
in
push
cmpsl
cltd
adc
pop
outsl
iret
cmc
ret
repnz
and
sub
xchg
das
int3
ss
mov
stos
jne
int3
sub
lcall
imul
xchg
pop
sub
out
ret
jae
pushf
pushf
jecxz
sbb
insl
push
aas
cwtl
dec
sub
dec
ja
insl
mov
mov
je
add
idivb
shl
icebp
add
test
scas
push
jle
sub
shlb
bound
sbb
aas
daa
or
insl
dec
and
ret
push
inc
lahf
sub
sub
inc
mov
nop
or
shll
lahf
pop
add
dec
in
or
cmp
pushf
lret
sbb
call
xchg
test
cmp
pop
push
mov
in
call
mov
adc
test
test
sbb
in
cmpsb
inc
sbb
je
in
ljmp
inc
int
iret
out
jmp
mov
subl
ds
stc
lods
sbb
stos
mov
cmp
es
xor
leave
popa
xor
jp
inc
testb
cmpsl
int
popl
push
mov
push
cmc
rcl
push
mov
add
xchg
in
xchg
sub
mov
push
jg
into
xor
aas
pop
movsl
pop
add
mov
and
push
mov
idiv
lds
clc
push
or
das
dec
insb
pop
aas
push
arpl
stos
leave
insl
xchg
cmp
nop
ret
bound
rcll
out
ror
ret
ret
mov
sub
push
test
xchg
mov
loope
xor
sbb
lahf
inc
adc
add
popa
push
pop
mov
and
dec
dec
inc
and
testb
negl
mov
ljmp
stos
vandps
push
outsb
dec
jp
sbb
in
mov
cmpsb
pusha
jno
dec
aaa
xorb
in
int
outsb
mov
adc
aad
pop
mov
pop
daa
stc
insl
xor
ja
push
push
push
pop
popf
fdivl
mov
sub
dec
fnstcw
xchg
imul
push
iret
push
push
ja
xchg
cli
add
rolb
jb
dec
push
xchg
loopne
mov
cmp
and
push
shll
adc
dec
mov
sub
adc
lcall
mov
pop
mov
add
mov
int3
dec
outsb
pop
mov
scas
add
and
add
and
test
jp
pusha
adc
and
jnp
aad
ljmp
and
int
jmp
rcl
mov
push
scas
in
push
adc
leave
stc
movsb
push
sbb
cli
movsl
push
xchg
sti
adc
sti
clc
and
fisubl
outsb
pop
jo
outsl
xchg
cmp
xchg
in
daa
shll
insb
fisttpll
jo
push
in
push
jg
fstps
addr16
gs
fimull
ret
xchg
lds
lods
jae
divl
addr16
dec
or
imul
inc
jo
popf
outsb
xchg
pusha
xlat
mov
xor
mov
jnp
fldt
hlt
sub
nop
pop
addl
jge
iret
push
dec
mov
ds
push
push
test
mov
scas
dec
pop
out
dec
adc
loope
pop
xor
mov
std
mov
mov
adc
insb
pop
jp
pop
je
ret
jecxz
xchg
cltd
xchg
add
outsl
popl
xor
movsl
mov
addr16
stc
adcb
or
sbb
push
shll
push
and
popa
lods
stc
and
pop
clc
pusha
adc
mov
mov
lods
lods
push
js
les
lahf
shrb
pop
mov
cli
outsl
add
xchg
mov
hlt
mov
xor
jp
jmp
clc
fisttps
ja
and
hlt
inc
and
ficoml
cmc
mov
dec
pushf
or
ja
add
xor
pop
fmul
insb
aam
xchg
enter
cmp
sub
scas
lret
push
popa
add
fnstsw
loopne
into
and
fcmovu
xlat
lret
push
filds
jp
dec
pusha
das
ds
push
inc
sub
dec
fiaddl
push
fisubrl
sahf
mov
fwait
pop
sbb
je
in
inc
test
lahf
pop
pusha
cmp
ss
push
xchg
cld
fsubrp
push
popa
scas
mov
mov
add
xchg
lea
pop
cmp
arpl
xchg
sub
or
sbb
cmc
daa
inc
xchg
shl
test
sahf
inc
stos
xor
mov
or
stos
fcmovnbe
rol
cmp
xlat
pop
adc
das
push
inc
mov
nop
popa
jg
adc
cmp
in
notb
xlat
roll
jecxz
mov
or
rcl
jno
xor
xchg
add
in
jp
lods
pop
icebp
sbb
jl
push
jp
jmp
lret
stos
pop
adc
jae
sub
cmp
inc
out
mov
dec
lock
mov
cmpb
push
pop
inc
je
pop
push
mov
mov
xor
sbb
push
scas
rolb
mov
dec
flds
xchg
and
xchg
mov
loope
sbb
cmp
aad
mov
inc
mov
pop
sub
packssdw
fisubl
cmpsb
inc
pop
pusha
dec
xor
sbb
pushf
push
not
dec
das
bound
ror
or
cmpsb
mov
dec
add
imul
mov
xchg
mov
lods
sub
jmp
adc
add
mov
lret
nop
pop
into
fwait
xchg
es
out
out
lods
xchg
je
jnp
fmulp
ds
mov
mov
lods
xor
lcall
dec
in
rcr
mov
sbb
mov
loop
push
pop
fdivrl
or
dec
sti
cmp
ss
mov
pop
out
pushf
scas
mov
cmpsl
lret
shll
out
cmpsl
sbbb
mov
rcr
data16
cli
stc
or
ss
shlb
mov
mov
lret
stc
out
aaa
loopne
in
out
ret
mov
mov
lret
subl
call
jmp
jbe
lods
sub
or
decl
xchg
ljmp
mov
sbb
iret
cmp
je
mov
leave
arpl
jmp
subl
mov
idivb
jo
mov
cld
fs
inc
mov
dec
mov
mov
jp
out
sbb
pop
mov
sbb
fwait
mov
cmp
lahf
nop
sbb
push
jo
int
lea
sub
enter
es
inc
mov
sarl
repnz
xchg
xchg
or
push
xchg
addl
mov
mov
and
jbe
fnstsw
jnp
fstpt
inc
and
adc
adc
scas
mov
nop
mov
jp
and
cmpsb
xchg
pop
mov
mov
in
jecxz
std
pop
mov
ret
adc
aaa
ret
or
aam
leave
loope
clc
xor
adc
cmp
jl
sahf
ja
scas
ret
sbb
lret
adc
mov
imul
fisubrs
cs
test
in
dec
pop
fnstsw
cltd
or
int3
mov
clc
roll
push
push
aas
inc
popf
sbb
push
insb
out
sub
aaa
adc
dec
loopne
mov
inc
outsl
jecxz
jmp
xor
and
pop
mov
push
lea
int
pop
ror
clc
movsl
add
push
popa
push
cmc
rcr
int3
int3
mov
jbe
push
add
hlt
bound
testb
filds
rcrb
jmp
arpl
or
cmpsb
xchg
xchg
jns
sar
cwtl
clc
add
xor
sbb
add
movsl
fwait
lret
sub
cs
lods
arpl
pop
aas
xchg
es
or
cmpl
push
push
pusha
pop
pop
and
insl
xchg
xchg
cs
pop
jnp
movsl
xchg
divl
add
push
gs
pop
cmpsb
mov
mov
aad
mov
imul
popf
and
movsl
inc
pop
xor
xchg
or
dec
xor
popw
loope
in
cmp
icebp
xchg
mov
and
mov
pop
mov
in
sub
lahf
cltd
jle
into
jle
xchg
movsl
add
daa
fildll
inc
adc
pop
repz
jge
arpl
sbb
pushf
adcb
les
mov
jge
cmp
leave
fcmovnbe
jbe
icebp
mov
nop
and
aaa
adc
jnp
mov
mov
dec
repnz
cmp
nop
shrl
mov
rolb
stos
lret
inc
ljmp
std
fisubs
pop
cmp
mov
inc
icebp
sbb
stos
xchg
inc
insb
filds
pop
incl
hlt
loop
idivl
and
into
test
and
push
mov
sarb
sbb
and
stos
fsubr
adc
mov
lock
in
add
mov
add
dec
shl
or
fldenv
lret
shl
adcl
aad
pop
adc
fs
mov
xchg
pop
lea
xchg
ret
dec
push
push
pop
imul
xchg
add
out
add
jae
jae
or
scas
push
into
lods
xorb
xor
cltd
lahf
mov
js
xchg
sub
push
call
inc
pop
mov
xor
rorl
into
mov
or
icebp
leavew
add
or
mov
pushf
ret
lret
daa
cli
pop
fmul
ds
pushf
push
xlat
dec
xlat
mov
pop
jp
cmp
mov
jecxz
in
pop
dec
xchg
out
cli
sub
mov
fdiv
push
out
dec
mov
js
ret
das
cmpsl
fiaddl
pop
cmc
sar
mov
pop
mov
fisubrl
cmp
jo
int
shr
movsb
jmp
inc
inc
mov
sub
daa
mov
cli
xchg
movsb
push
das
cmp
lods
testl
inc
popf
cli
lock
stc
sbbb
push
pop
cld
in
cmp
mov
mov
inc
mov
sub
cmp
jp
fdivs
pop
inc
shll
dec
inc
fbstp
add
cmp
gs
loopne
lods
filds
xchg
scas
push
mov
es
fwait
cmp
add
int
cmp
dec
sbb
adc
stos
and
inc
int
mov
push
icebp
dec
loope
mov
dec
sub
adc
or
cmpsl
test
jbe
xchg
mov
hlt
lcall
je
sub
xchg
push
ret
fsubrl
aam
inc
call
cmp
add
add
sub
pop
and
xlat
xchg
test
les
outsl
test
ds
mov
js
test
in
and
dec
ficompl
dec
rclb
dec
mov
test
inc
jmp
out
dec
mov
xchg
or
jns
loopne
sti
ljmp
xor
jo
into
in
jne
sbb
sub
add
rcl
cmpsb
mov
cwtl
mov
cmp
addr16
sub
jns
pop
out
test
stos
dec
ror
pop
lds
mov
sbb
or
bound
push
xor
push
mov
sahf
ljmp
fisubl
pushl
sub
xchg
rep
ds
cmp
cltd
push
or
jno
mov
addr16
shlb
inc
or
dec
arpl
mov
inc
lods
imul
push
in
push
cmp
push
adc
nop
les
cmc
sarl
adc
xor
in
test
sub
pushf
ss
jl
add
pop
dec
aaa
outsb
jae
jno
jbe
lods
std
sti
sbb
into
inc
xchg
xlat
mov
push
mov
div
jbe
push
mov
fisubs
popf
or
jb
push
and
mov
sub
and
orb
dec
in
add
lds
push
push
cmp
jns
and
sub
insl
mov
fwait
imul
xor
je
push
xchg
rorl
scas
insl
or
fimull
addr16
fstps
loope
nop
pushf
push
out
aam
stos
pop
out
addb
movsl
or
sub
stc
cmp
mov
sarl
add
loopne
fbld
ss
outsb
fisubrl
add
jl
nop
sbb
mov
les
popf
xor
xabort
sbb
cmp
test
xor
dec
jae
insb
jno
and
sbb
mov
sub
dec
idivl
stc
xorl
outsb
jo
bound
lret
notl
mov
shll
int
mov
sub
insb
mov
std
mov
dec
ret
dec
dec
dec
das
xor
cmp
or
jl
int
push
jl
dec
ds
out
pop
add
and
in
out
ljmp
out
push
sub
xrelease
xor
sbbl
lods
test
cli
inc
pop
lock
in
enter
jle
imul
push
sub
rcrl
shrb
xchg
dec
outsl
ja
gs
loopne
das
lods
cmovg
arpl
mov
xor
sub
sbb
and
fsubrl
push
loopne
mov
push
push
outsl
aaa
xchg
cmpsb
popa
stos
insl
js
adc
mov
and
push
mov
mov
mov
pushf
fdivp
xchg
insl
outsb
into
push
xor
aaa
or
pop
inc
fisubrl
enter
mov
adc
xor
in
stc
outsb
mov
mov
out
inc
mov
dec
repz
jno
mov
cld
lahf
add
add
mov
pop
shlb
ret
iret
jb
pop
pop
daa
std
cwtl
jne
fwait
insl
scas
mov
sub
pop
lahf
mov
and
and
add
pop
xchg
mov
sbb
pop
xchg
pop
and
imul
iret
xchg
mov
adc
mov
iret
adc
push
mov
add
xchg
mov
push
dec
andb
fdivrl
sub
enter
xchg
call
jg
aam
negb
mov
ss
out
repnz
adc
add
lods
sbb
test
cmp
mov
test
std
aas
stos
data16
xchg
lds
out
and
popa
pop
ds
stc
ds
xchg
mov
mov
xor
repz
sub
jge
or
pop
jns
xchg
adc
addr16
add
pop
mov
sbb
mov
or
push
mov
js
mov
sbb
push
pop
ret
mov
and
lea
movb
ret
js
add
lret
scas
or
mov
push
or
inc
sbbb
scas
push
jp
push
mov
pop
imul
sbb
fsubp
adcl
or
jno
mov
adc
aam
inc
das
cmpsb
jb
jmp
ret
mov
fnsave
clc
sub
pushw
sahf
sub
dec
push
aas
fistpl
stos
jge
inc
lods
or
xlat
push
stos
das
fsts
xor
xor
neg
call
jae
push
rcrb
mov
push
cltd
nop
jbe
push
in
mov
scas
stos
inc
or
inc
cltd
pop
stos
mov
push
adcb
cmpsl
cltd
and
sub
sub
in
push
mov
mull
aad
inc
sub
loopne
xor
mov
icebp
aaa
subb
aam
mov
add
fstps
jno
sar
ljmp
fistl
ja
js
adc
fcmovne
mov
mov
xor
adc
add
loop
sbb
sti
dec
push
in
sub
xchg
mov
pop
dec
push
add
xchg
insl
cmp
fsubrl
xor
mov
in
neg
jo
add
das
cmp
dec
enter
jb
ljmp
mov
inc
sbb
and
int3
scas
xchg
test
fbstp
leave
and
in
lds
nop
popa
and
dec
cmp
inc
or
xor
xchg
aaa
stos
xchg
in
bound
cmp
mov
pop
jl
ljmp
rorb
adc
outsb
paddsw
lcall
jmp
inc
insb
dec
sub
and
or
add
cmp
loope
popf
inc
out
test
sbb
mov
fdivrs
clc
loop
mov
test
lea
repnz
xchg
mov
jg
sub
test
divl
push
jecxz
jno
les
bswap
mov
sbb
dec
xchg
inc
loopne
daa
jae
sti
rcr
gs
jg
leave
lcall
dec
stos
mov
xchg
mov
inc
std
lahf
fs
bound
stos
or
in
lcall
pushf
add
push
sti
xorl
push
mov
mov
inc
mov
push
cmp
imul
pop
sar
xchg
out
gs
jg
pop
dec
movsb
sub
icebp
int3
and
dec
loop
sub
icebp
out
ret
mov
push
sahf
xchg
cwtl
jne
and
cld
shlb
cmp
in
clc
jae
in
fiadds
lds
int3
shrl
push
dec
push
add
outsl
jle
ss
mov
inc
cmpsl
inc
inc
mov
nop
dec
sbb
jecxz
add
fidivrl
test
mov
sbb
mov
jbe
iret
push
je
cmp
jbe
ret
call
icebp
pop
subl
add
clc
data16
shlb
dec
push
pusha
adc
aam
push
test
dec
jae
and
and
fcomip
std
sahf
mov
div
aad
sbb
or
sub
mov
cvtss2sd
jle
jecxz
push
arpl
jne
pusha
cmc
mov
das
or
adc
lcall
dec
test
pushl
pusha
mov
ja
adcl
push
mov
adc
adc
dec
mov
xchg
das
arpl
or
jl
sub
shrb
pop
lcall
pop
jno
mov
pop
js
js
loop
out
xor
in
push
aad
cmpsl
out
mov
dec
pop
shlb
mov
mov
ret
rcrb
arpl
jb
fwait
ljmp
outsb
mov
cltd
jae
mov
pop
enter
and
in
in
hlt
xor
mov
ficomps
mov
outsl
ret
sbb
fists
out
xor
or
mov
pop
add
les
out
lret
pop
out
cld
cmp
cmp
mov
cmpsl
jb
inc
iret
loop
xchg
sarb
repz
nop
js
loopne
in
jmp
loopne
pop
jae
popf
xchg
cmp
pop
fstpt
xchg
cwtl
dec
pop
out
jne
pop
jg
inc
shrl
mov
popa
xor
xchg
xor
addr16
jbe
jns
mov
mov
mov
test
mov
ret
mov
pop
dec
add
leave
es
lds
fwait
cmp
mov
jle
dec
ret
dec
push
adc
add
adc
lahf
lret
ljmp
movsb
fs
repz
out
out
test
sti
add
fcompl
push
push
sub
cmp
test
cmp
jb
mov
jbe
clc
mov
sbbl
addb
xor
cs
addr16
push
outsl
int3
lcall
push
or
pop
mov
mov
xlat
sti
bnd
pusha
fldcw
dec
lods
mov
fidivrl
fisttps
sbb
xchg
pop
push
sbb
fldl
dec
je
jecxz
in
add
mov
pop
imul
pop
dec
stc
adc
lds
fucomp
push
push
ljmp
out
xchg
pop
inc
mov
in
mov
ret
loope
inc
push
sub
call
push
adc
out
dec
leave
xchg
das
stos
add
adc
inc
rol
gs
test
std
and
mov
stos
call
or
pop
cmp
jae
jecxz
xlat
mov
jp
xchg
inc
push
std
mov
dec
stc
int
xor
inc
out
arpl
repnz
lock
jge
mov
insl
mov
add
mov
lods
lcall
movsl
scas
pop
in
adc
lock
pop
stc
xchg
xor
pop
push
test
cmp
add
push
pop
dec
mov
jne
jp
leave
in
shll
inc
sbb
jnp
push
daa
dec
inc
out
cli
xorb
xchg
xor
pop
or
lods
testb
pop
dec
xchg
out
pop
jg
add
jbe
mov
rcrb
bound
insl
ljmp
js
sbb
adc
cmc
test
fucom
sbb
imul
xor
bound
mov
inc
iret
add
or
lods
pop
stos
push
xor
js
sbb
lret
fisubs
mov
push
pop
inc
imul
movsb
rolb
setae
iret
cmpsl
jmp
inc
pop
add
fnstcw
jno
out
hlt
mov
mov
adc
mov
and
pop
xchg
mov
fucomip
mov
pop
lea
sbb
sub
jnp
cmp
pushf
int3
adc
cltd
lea
sarb
insb
cmp
sbbb
clc
push
jo
test
sub
and
rcrb
mov
pop
add
mov
test
push
out
int
mov
add
mov
dec
in
jl
rol
mov
movsl
cld
adc
cmc
pop
out
call
fidivrs
rol
scas
adc
or
push
mov
call
mov
xor
mov
stos
inc
sahf
dec
jnp
test
ja
cltd
or
adc
jmp
lahf
in
repnz
outsl
loop
inc
call
lahf
dec
mov
pushf
sbb
jecxz
pop
daa
mov
movsb
out
push
fmul
test
fwait
mov
sub
insb
frstor
xchg
jae
test
shlb
mov
jb
iret
mov
push
cmp
dec
imul
or
xor
test
mov
dec
inc
fnstsw
and
mov
push
dec
andl
call
adcl
cwtl
jle
cmp
cmp
xchg
cmp
scas
cltd
fstl
push
inc
adc
cmpsb
sub
test
and
xchg
ds
stos
nop
jnp
cli
xchg
xchg
insb
and
shr
push
les
sub
fsubrp
ds
push
popl
aas
jne
inc
xchg
sbb
aaa
outsl
into
outsl
es
mov
rorl
mov
cmpsl
ror
cmp
jmp
or
push
scas
imulb
cltd
mov
mov
mov
loopne
fdivrl
popa
jnp
push
inc
pop
mull
inc
ret
pop
dec
adc
out
xor
sbb
insl
cmp
and
mov
rolb
imul
adc
jo
xchg
pop
gs
ret
inc
cmpsl
adc
add
mov
xor
xor
call
or
gs
in
pop
or
add
xor
xlat
xlat
mov
pop
dec
lods
repz
outsb
add
lcall
or
jmp
inc
xor
sub
ret
xchg
mov
aas
sbb
inc
jl
sbb
xor
adc
fwait
into
dec
dec
jg
les
je
cwtl
adc
xchg
or
sub
lods
testl
dec
adc
mov
cmp
adc
cmpsl
xchg
mov
fs
push
or
ljmp
cmp
pop
pusha
out
mov
lret
adc
ja
xor
ret
pushf
inc
dec
add
inc
inc
shll
test
inc
es
icebp
mov
pop
mov
pop
or
sub
fistpll
fs
gs
popa
movsl
filds
test
push
cmp
mov
jge
mov
in
jl
jecxz
xor
stos
pop
pop
dec
sbbb
ja
lods
cmp
out
mov
mov
fucom
xor
int
sbb
cmp
mov
jnp
test
mov
aaa
fwait
nop
into
fsubr
jg
xchg
cmc
out
jmp
jbe
add
inc
fwait
fs
pusha
dec
js
fildl
xchg
fimull
fs
and
push
arpl
jl
xlat
out
mov
pop
repz
jmp
pop
mov
mov
repz
mov
fwait
sbb
jecxz
xchg
sbb
inc
pop
arpl
out
or
aad
xor
lods
sbb
jne
mov
stc
movsl
jae
inc
xchg
dec
fidivrs
jp
inc
xor
lods
repz
push
iret
pop
mov
push
out
shlb
incl
mov
push
aad
dec
call
inc
mov
out
loop
cmp
fisttpl
pop
sub
cmpsl
ss
xor
in
and
popa
stc
fwait
mov
clc
popa
fnstsw
sub
stc
mov
dec
jl
push
mov
sarb
mov
dec
ja
dec
mov
push
dec
pop
add
cmpb
idiv
loopne
stos
shr
jl
mov
rcll
inc
cmpsb
orl
jle
pusha
push
lea
pop
icebp
loop
fcomi
mov
int
xchg
js
in
je
out
dec
sub
dec
stc
or
cmpsb
or
dec
pop
pop
std
mov
inc
or
mov
repz
data16
outsb
sub
dec
idivb
pop
jo
dec
jnp
mov
xchg
shl
inc
xor
repz
movntq
outsl
dec
outsb
or
pop
outsl
mov
jecxz
jp
std
mov
fdivrs
call
pop
xorl
or
dec
inc
pusha
into
fildl
jle
pop
jnp
push
notb
enter
stos
sbb
cld
not
push
fcoms
iret
pop
shrb
push
stos
lods
ja
dec
jbe
mov
repnz
fs
sahf
bndldx
mov
jl
ja
mov
sbb
outsb
hlt
fists
btr
imul
addr16
mov
xor
fs
cld
les
push
in
xor
cli
psraw
xchg
int
popf
nop
jge
sub
push
out
insl
push
push
and
mov
xchg
push
inc
jg
pop
add
sub
lret
jb
add
shl
subb
or
imul
xchg
jmp
push
nop
mov
loope
push
and
sbb
subb
xchg
dec
stos
and
call
insl
jno
push
xchg
jbe
and
add
sub
int3
mov
data16
add
lock
mov
jo
mov
push
in
sti
mov
in
movb
scas
fsubl
aad
cmp
xchg
jmp
scas
scas
imul
or
xchg
xchg
lods
pop
cmc
mov
mov
mov
call
das
testl
cmp
and
xor
add
jecxz
js
adc
sbb
movsl
dec
jae
in
sub
push
mov
add
add
jmp
cmp
out
inc
ss
lret
xchg
adc
jno
test
lret
add
je
outsl
das
mov
iret
call
push
jbe
aad
xor
in
cmp
ret
ret
cmp
jnp
mov
and
test
adc
fcoms
dec
pop
shl
lods
push
mov
jbe
imul
mov
push
cmc
push
xor
stos
outsb
jg
fisubl
sbb
mov
out
push
js
jo
add
xlat
movsl
mov
xor
scas
stc
mov
hlt
jmp
sbb
loop
loope
xchg
fcmovb
push
andl
mov
punpckldq
cld
sub
repz
jle
push
and
les
das
and
in
in
or
push
mull
stc
sub
push
dec
or
add
push
and
cmp
mov
push
inc
nop
scas
int3
es
xchg
sub
pop
lret
dec
mov
push
inc
std
out
jmp
add
xor
cmp
and
adc
xchg
jae
inc
xchg
adc
fwait
xchg
in
shrb
add
mov
enter
repnz
xor
outsb
sbb
pop
je
in
or
cltd
mov
fwait
mov
scas
jae
subl
ss
outsl
push
adc
lods
out
out
push
pop
inc
nop
inc
filds
xorb
rolb
aad
cmove
mov
push
xchg
insb
call
in
insl
lret
add
aam
lock
lahf
aad
cmp
adc
jb
xor
sbb
inc
or
outsl
imul
mov
xchg
sbb
faddp
and
jge
pop
outsl
cmp
xor
cmp
repz
ficomps
push
cmp
dec
xchg
movsl
mov
mov
daa
ret
mov
cmpsb
dec
add
ret
jns
xchg
pop
sti
mov
dec
out
fdivs
inc
sub
xchg
mov
adc
jge
inc
xlat
lahf
ja
negb
mov
stos
mov
out
testb
sub
js
xchg
push
add
push
sbb
or
adc
sbb
cmpsb
add
jmp
jp
pop
ja
mov
cmpsb
pop
mov
hlt
insb
adc
mov
mov
imul
sarl
and
or
lcall
pop
mov
xchg
cld
jns
lds
shrb
push
pop
jne
or
mov
add
ja
xor
cmp
mov
sbb
lret
adc
mov
fwait
sub
xchg
push
sbb
and
xchg
dec
aad
ror
mov
pop
lods
mov
into
pop
daa
or
add
in
fwait
jbe
lcall
imul
push
or
ss
pcmpeqw
jb
lock
ss
jp
sub
inc
loop
xchg
incb
rol
dec
push
cmp
jns
sub
pop
or
ss
adc
jg
cmpsb
xchg
and
xorb
mov
dec
jnp
pop
pop
insb
rolb
faddl
mov
outsl
int3
cwtl
cmp
shll
sub
xchg
test
fisttpl
data16
cmp
jb
fldt
inc
insl
jnp
cmpb
scas
sarl
push
cltd
dec
lcall
pushf
inc
cltd
fimuls
mov
call
add
xorl
mov
lds
nop
dec
push
data16
sub
cwtl
xchg
and
sbb
jg
les
push
lret
fistps
jmp
mov
xchg
lock
cwtl
int3
pop
xchg
push
pop
js
or
jne
bound
loopne
xor
or
imul
xchg
xor
push
cltd
xchg
and
and
repz
adc
xchg
in
testl
loope
sbb
gs
sub
mov
popa
stos
nop
dec
stc
imul
dec
adc
mov
mov
pop
ret
or
gs
cli
pop
popa
enter
cmc
iret
cwtl
push
cmp
pop
fadds
lcall
in
sub
push
adc
ret
das
cmp
xor
lods
jno
pop
cmp
mov
fsubrl
mov
push
mov
aad
pushf
jmp
pusha
out
mov
into
daa
pop
rolb
arpl
lods
insb
call
push
mov
or
imul
jl
pop
sub
shrl
shlb
ret
es
or
call
clc
pop
fstp
push
sub
jno
xor
arpl
in
lcall
ret
mov
aaa
dec
negl
stc
daa
cmp
push
jb
les
or
movsb
jge
lods
or
push
divl
xchg
mov
pop
mov
adc
xor
jne
xor
addr16
dec
push
das
fstpl
clc
lods
lds
repnz
xor
in
bswap
lock
inc
sub
mov
push
loop
lds
inc
mov
mov
push
jg
mov
cmpsb
gs
adcl
std
outsb
jle
jo
out
xchg
sub
mov
rolb
sbb
xor
cli
xchg
test
stc
xchg
mov
inc
jl
mov
sbb
xchg
sahf
push
in
mov
push
or
and
xor
pop
xor
adc
add
adc
adc
sbb
adc
dec
jecxz
test
inc
cmp
inc
ds
cwtl
movsb
outsb
push
cmc
inc
xchg
cs
lock
add
inc
sar
sub
cmp
cli
fisttpl
sbb
hlt
sub
lea
adcl
or
stos
inc
aaa
inc
mov
and
insl
or
inc
scas
jl
push
xlat
bnd
insl
addr16
clc
or
pusha
shrb
mov
add
jmp
fiaddl
fsubrs
int
loope
andb
sbb
std
fsubl
in
ficoms
imul
notl
mov
push
mov
lea
ret
lahf
mov
mov
loopne
push
xor
mov
in
dec
or
ss
lret
test
dec
mov
xchg
ds
das
mov
push
dec
push
push
loope
out
xchg
js
orl
xchg
xchg
sub
call
cmpsb
lods
mov
ss
cmpsl
sbb
jmp
int3
inc
push
sbb
cmp
ja
pop
sbb
scas
loopne
roll
fstpt
xchg
add
or
gs
mov
or
int3
push
bound
mov
sbb
sbb
pop
adc
dec
mov
xchg
pushf
loop
xchg
adc
xchg
das
dec
lods
pop
iret
test
fdivs
pop
in
adc
adc
cmpsb
mov
inc
adc
xor
ret
adc
ret
mov
mov
ret
ret
jae
or
out
lods
xor
cli
dec
fucomip
inc
jae
and
insb
inc
xchg
outsl
cmpsl
sarb
inc
push
out
push
aam
inc
data16
inc
lods
aas
xchg
lcall
lret
stos
jmp
out
mov
adc
sbb
jnp
push
bound
pop
or
iret
std
out
jns
push
jnp
cmpsl
xchg
sbb
jb
mov
and
xor
clc
mov
mov
adc
mov
inc
imul
mov
cmp
push
hlt
sbb
xchg
adc
adc
mov
mov
add
cmpsl
sti
ss
rcrb
xchg
xchg
sub
mov
mov
add
mov
loope
clc
mov
add
icebp
faddl
push
int
pop
in
call
sub
daa
pop
push
bound
xchg
jp
shll
mov
or
inc
push
jnp
pop
aaa
push
andnps
xor
pop
js
sbb
push
fcoml
pop
xor
inc
popf
test
mov
fisubs
insl
les
je
xchg
nop
stos
lods
sbb
lds
inc
sbb
test
ret
fists
lds
xor
mov
sub
push
ret
push
sbb
inc
pop
scas
mov
adcb
adc
inc
lods
stos
lret
sahf
sbb
jl
call
xor
jno
sahf
hlt
push
ret
push
ljmp
lret
or
ds
int3
lods
std
push
scas
add
cmp
daa
decl
mull
xchg
outsl
push
data16
cmpsl
test
cmpsl
jle
fwait
dec
push
rcr
arpl
dec
inc
dec
das
add
inc
cltd
push
movsb
sub
cld
lock
mov
sbb
xchg
add
fildll
mov
lret
push
cmp
fsts
push
dec
jno
pop
lret
jle
mov
mov
mov
cwtl
mov
rorl
xchg
push
xchg
adc
shrb
mov
jae
mov
sbb
es
out
sbb
pusha
lret
cmpsb
xor
xchg
and
pop
fisttpl
xor
scas
shlb
andb
into
jp
xchg
push
pop
je
adc
dec
into
out
mov
shll
clc
jle
dec
test
inc
rolb
pop
sbb
inc
add
jno
lds
cmp
bound
and
xchg
or
lods
xchg
jg
lock
pop
mov
push
xchg
fs
loop
mov
cmp
mov
lcallw
cmpsl
clc
pop
jle
rclb
add
flds
cmp
lret
roll
jmp
jae
cmp
xor
fucomi
mov
mov
sbb
inc
and
push
rol
fisubl
hlt
pusha
out
aad
call
mov
xorb
xor
push
pop
sahf
addr16
test
jno
call
nop
lock
test
inc
mov
pop
mov
jge
add
adc
insb
dec
sub
xchg
mov
movsl
das
xor
push
push
subl
xchg
pop
jae
pop
nop
push
cltd
stc
sarl
add
adc
mov
inc
dec
in
or
xor
prefetchnta
adc
adc
sbb
mov
cld
sbbl
add
mov
enter
inc
mov
ljmp
pusha
push
push
loopne
fbld
or
mov
jo
xor
adc
into
mov
push
mov
and
xcrypt-cfb
cmpsl
cmpsb
inc
fisttps
shrd
scas
xor
je
sbb
push
leave
push
out
sbbl
outsb
xchg
fwait
push
sbb
jmp
popa
movsl
imul
add
jnp
sahf
or
xchg
jno
fmul
and
loopne
adcl
test
inc
mov
mov
gs
add
mov
out
mov
lods
pop
aad
xchg
xlat
inc
adcl
adc
insb
pop
call
jl
jnp
cmpsl
sbb
push
fucomp
iret
test
ret
cmp
jle
call
adc
or
mov
jmp
stos
arpl
jnp
mov
outsb
push
dec
es
decb
es
imul
popf
push
pushf
lea
xor
scas
mov
repnz
sahf
or
sbb
push
mov
adc
cltd
xchg
or
ljmp
mov
mov
stc
jg
push
push
test
popf
stos
push
popf
and
jb
addr16
add
push
and
rcrl
xchg
outsl
movsl
dec
loop
jl
stos
or
data16
adc
daa
xor
jne
xor
nop
push
das
cmpsb
mov
pop
inc
ret
shll
ror
mov
xor
loope
iret
out
fwait
mov
adc
sub
or
rcrl
mov
push
dec
mov
or
into
sub
sti
addb
gs
sbb
cmp
jl,pn
fwait
xor
cmc
sub
rolb
inc
inc
mov
adc
rcr
lods
push
or
and
mov
jnp
out
xor
and
cmpsb
in
aas
xchg
or
mov
adc
out
pop
pop
xor
out
lret
hlt
scas
xchg
xor
mov
cmp
lret
sub
pop
ds
or
sarb
aam
pushf
mov
pop
jnp
iret
pop
lods
scas
mov
mov
jecxz
lret
and
cmp
loopne
rolb
sub
sahf
xor
mov
push
mov
dec
xor
stos
subb
cmp
jne
push
jae
test
popa
andb
add
ja
dec
in
sbbl
pop
jg
push
mov
fdivs
dec
sbb
pop
jne
mov
add
push
rorl
adc
inc
inc
into
adc
jmp
lcall
stc
stos
pop
mov
addb
enter
sbb
jae
lcall
or
in
jnp
into
or
add
gs
mov
sbb
add
add
xor
add
out
pushf
lock
imul
cld
insl
ljmp
add
and
push
sub
pop
mov
mov
and
addr16
repnz
shll
or
inc
mov
js
divl
or
loopne
push
aas
push
pop
daa
push
mov
pop
cwtl
or
aad
jne
or
mov
mov
push
scas
cmpsl
jp
push
pop
adc
adc
inc
jle
sub
imul
add
mov
jp
aad
repnz
out
mov
div
cmp
dec
jns
and
push
jo
add
pop
loop
add
pop
sbb
decl
and
xor
lods
setbe
ret
xor
outsb
lods
mov
mov
cmp
or
ret
aas
mov
push
icebp
xchg
rorl
movsl
jecxz
rolb
notb
mov
pop
gs
popa
sti
ss
pop
jne
setle
sbb
sub
mov
es
push
add
test
add
jmp
sbb
jns
mov
std
test
xor
cltd
sbb
bound
leave
jae
mov
mov
shrl
cmpl
mov
pushf
mov
push
cmp
dec
cmpsb
xchg
or
xchg
sub
jnp
les
int3
inc
and
jb
std
mov
or
ja
das
fwait
gs
aas
sbb
das
mov
sti
cltd
or
cmc
sub
lods
mov
sti
orl
shrl
cmp
or
pop
or
push
push
and
mov
adc
xchg
and
adcb
pop
push
mov
lcall
dec
lods
icebp
cmpl
loope
cmpsl
mov
popa
push
sbb
mov
ret
push
cmc
mov
push
popa
mov
push
push
jle
pusha
ja
cld
sbb
ja
and
in
notl
aam
insb
cmp
nop
jo
ljmp
scas
cmp
add
mov
ds
mov
call
aaa
xchg
mov
push
repnz
dec
pop
clc
test
iret
cmpsl
jmp
push
scas
lock
lods
mov
mov
std
loopne
shr
push
adc
lods
and
iret
and
scas
clc
pop
push
dec
cltd
test
jecxz
inc
insl
xor
je
lahf
dec
fimuls
or
arpl
add
jno
aas
xchg
ss
mov
cmp
addr16
pop
mov
dec
adcl
out
sub
cwtl
je
inc
aaa
dec
dec
outsb
xor
movsb
daa
icebp
stos
ret
sub
imul
subb
scas
insb
dec
mov
jge
jmp
pop
lret
stos
fnstenv
lret
testb
lret
jno
xlat
jo
imul
test
sbb
shrl
xchg
jmp
dec
mov
xchg
cltd
mov
pop
int3
scas
mov
adc
cltd
pop
jns
mov
mov
dec
cs
je
cld
mov
loopne
ljmp
pushf
ret
mov
imull
fwait
push
jecxz
push
dec
ret
push
jb
stos
pop
ds
repz
jae
pop
mov
pop
je
push
jp
fnstenv
mov
or
push
add
push
push
pop
out
je
xor
xchg
pushf
movb
idivb
cmp
sbb
loopne
les
xor
mov
jmp
dec
in
das
push
mov
fnstcw
movsb
xor
adc
cli
je
loopne
or
mov
and
xchg
cmp
dec
cmpsb
jp
imul
dec
out
mov
xchg
sub
pushf
imul
inc
mov
test
pushf
jp
popf
aaa
iret
ljmp
outsb
mov
stos
or
lret
pop
xchg
pop
cs
fld
push
cmp
das
push
notl
fstpl
mov
push
fwait
stc
shll
mov
movsl
mov
cmp
xchg
inc
mov
popa
addr16
lret
shlb
mov
dec
adc
es
ja
ja
lret
push
loop
cmovnp
insl
loop
in
sti
cmp
cmp
sahf
mov
bound
jnp
inc
jmp
push
mov
xlat
fdivs
mov
push
insb
push
loope
ret
inc
mov
dec
repz
push
pop
nop
mov
sub
out
cmp
sbbb
xor
fldl
int3
cmpl
cmpsb
clc
cwtl
imul
cmp
push
fistps
je
sub
xchg
sti
cmp
pusha
insl
mov
lret
dec
cld
outsl
jmp
iret
addl
xchg
push
inc
push
and
mov
xlat
jne
adc
or
cld
jo
xor
repnz
add
or
sbb
test
and
cmp
pop
jmp
ja
push
mov
into
xchg
pop
adc
aad
addb
push
push
mov
dec
inc
sbbl
lds
cltd
repnz
incl
pop
imul
adc
mov
jbe
mov
pushf
jnp
sbb
lcall
push
xchg
ret
push
gs
mov
lret
lcall
imull
jae
jg
mov
add
popf
imul
sbb
iret
loop
cltd
sar
jg
pop
sub
jmp
xor
sub
std
jns
mov
push
mov
aad
xchg
daa
push
out
mov
cmp
add
or
pusha
es
in
in
push
dec
pop
int3
ret
inc
lcall
iret
std
mov
jns
mov
pop
add
mov
mov
popa
shrb
mov
scas
push
mov
or
cmc
faddl
mov
fstl
jg
mov
fisttps
hlt
mov
scas
mov
sar
lcall
mov
mov
je
negb
adc
push
cmp
or
and
xor
or
pop
push
gs
pop
adcb
and
cmpb
je
lock
out
add
or
jg
mov
pop
inc
pop
pusha
mov
dec
packssdw
push
sub
das
jge
cmpsb
push
outsb
fbstp
push
sbb
fwait
add
mov
test
aam
or
inc
aam
movsb
or
fbld
into
jg
std
je
dec
cld
sub
and
add
negl
mov
hlt
cmpl
pushf
sub
into
es
int3
stos
xlat
in
xchg
add
test
jae
repz
push
cwtl
dec
dec
lods
int3
pop
and
stos
loopne
push
hlt
mov
es
inc
leave
sub
push
cltd
jle
lcall
adc
test
xchg
jge
mov
jle
mov
sbb
mov
cmp
pushf
mov
nop
cwtl
inc
fisttpll
cmp
xchg
pop
stc
ss
dec
lret
inc
outsb
mov
ret
add
add
push
push
insb
fiadds
je
push
int3
test
outsl
out
cmp
mov
jnp
fcmovnbe
jns
push
pusha
fidivs
lahf
decb
push
add
push
aad
cs
xchg
sahf
jae
pop
xor
pop
or
jbe
mov
test
xor
xor
aam
and
inc
outsb
bound
and
jl
ret
outsb
dec
xchg
mov
jle
adc
cs
xchg
ficoms
scas
push
xchg
inc
or
pop
insl
nop
mov
or
cmpsl
daa
lds
add
aad
repnz
scas
sahf
bswap
push
mov
lahf
shl
or
or
xchg
sbb
mov
out
or
push
adc
imul
out
call
mov
mov
jmp
sbb
call
push
adcl
sbb
pop
push
adc
xor
jge
or
xchg
aam
outsl
shl
inc
loope
fisubrl
sbb
jne
mov
ds
sti
cmc
fidivrs
xchg
xchg
fwait
mov
test
cmpsb
fdivrs
adc
xchg
out
adc
rcll
out
inc
leave
mov
xor
mov
jle
out
sbb
pusha
dec
and
and
mov
xor
lcall
stos
fdivrs
fdivr
inc
lock
popa
pop
mov
cmc
adc
pusha
lret
test
movsl
jb
xor
in
lods
push
pop
cmc
inc
inc
xchg
fdivrs
sbb
cmc
fnsave
lcall
mov
ss
les
mov
or
add
je
add
jge
test
push
mov
jg
sahf
xlat
cmp
sbbl
sbb
cwtl
hlt
and
movsl
adc
push
mov
aaa
pop
xchg
xchg
enter
mov
xchg
mov
bound
add
adc
fnstenv
push
jo
jecxz
jae
xchg
ljmp
loop
mov
push
mov
or
dec
mov
mov
repnz
push
sub
mov
push
imul
cld
jmp
mov
xchg
jle
pop
dec
jne
loopne
dec
and
add
jg
fsts
dec
aam
leave
test
push
lahf
push
dec
or
es
lret
push
pop
insl
pop
or
popf
push
fisubs
pop
and
xchg
call
sbb
pop
push
push
ret
cwtl
mov
loope
aaa
cli
out
mov
ljmp
pop
cmp
jnp
int
jo
jae
aas
mov
addr16
call
ljmp
leave
xor
lret
leave
or
push
mov
or
ficoml
lcall
xor
mov
adc
js
mov
repnz
or
xchg
pushw
mov
adc
xchg
xor
adc
push
push
testb
pop
cmc
jne
add
dec
jp
js
xor
shr
jmp
and
ja
imul
jb
sub
xchg
push
or
mov
out
lret
push
subb
gs
lods
cmp
mov
imul
push
cmpps
inc
cmc
out
mov
ret
inc
test
sub
mov
mov
out
or
mov
jns
sub
js
push
das
out
xchg
daa
fsts
iret
and
or
xchg
fisubl
jmp
inc
insb
ljmp
lahf
pushf
inc
or
cltd
test
push
sbb
jne
mov
mov
out
shrb
pop
cmp
test
divb
data16
jae
inc
sub
and
jne
adc
xor
lods
div
dec
xchg
fidivrl
imul
in
inc
jg
xor
and
cmp
push
inc
fcomi
lock
iret
aam
test
lods
inc
fucom
mov
lods
lcall
popf
xor
and
mov
in
dec
pop
mov
sbb
mov
arpl
dec
sub
jmp
xchg
mov
imul
loop
enter
and
push
jne
imul
lret
ds
mov
movb
dec
test
or
push
sub
enter
in
sub
and
jns
arpl
cmp
int
xchg
dec
test
mov
test
mov
push
mov
lods
mov
data16
cmp
pusha
cld
xchg
pop
jae
cmp
test
in
sbb
test
jns
xlat
das
inc
xchg
sti
inc
int
cmc
les
fisttps
push
movsl
stos
int3
dec
popa
shll
and
popf
cmp
sub
enter
ljmp
dec
add
pop
jl
or
add
cmp
ljmp
or
fisubl
mov
fsubrs
sbb
mov
inc
xor
jo
cld
ret
jle
xor
imul
lods
insl
in
pop
dec
jb
hlt
ja
xchg
pop
flds
jb
es
cmp
sub
jns
js
dec
push
jmp
and
cld
lods
xor
sbb
aaa
push
push
or
inc
orb
pop
fst
push
inc
movsl
mulb
cmp
sbb
fs
rolb
test
xor
pop
in
arpl
mov
jbe
icebp
dec
xor
or
sub
pop
rcr
cmp
popa
jne
add
jp
push
inc
sbb
mov
in
sub
fcmovbe
dec
cmpsl
lock
jle
pop
sub
sub
xchg
in
leave
pushf
dec
fdiv
int3
adc
sub
cmp
add
xchg
fisttpl
repz
mov
dec
filds
xchg
pop
jge
jne
or
fmulp
jge
fisttpll
inc
das
pop
jp
push
xor
pushf
test
mov
and
and
out
std
cmc
cli
fldenv
mov
xor
dec
fcmovbe
test
addl
sbb
movsb
dec
movsl
push
fsubp
pushl
insl
jnp
dec
mov
in
xor
outsl
mov
sarl
sub
dec
cmc
gs
ret
and
cmpsl
sub
stos
cmp
stos
add
xor
xor
or
add
out
dec
adc
pop
mov
jnp
inc
hlt
ffree
jns
int3
rcrb
pop
lods
cmp
fs
jg
lret
inc
lret
add
sbb
ret
iret
daa
jp
xchg
add
xor
scas
inc
xchg
inc
sub
loope
xchg
sub
pusha
fnsave
mov
push
pop
fcoml
adc
orb
jo
xchg
aaa
xlat
sub
bound
jnp
sbb
clc
shrl
xor
cld
outsl
jnp
or
mov
xchg
in
imul
jg
inc
cmp
hlt
sub
fucomip
push
aaa
popf
sahf
lahf
out
xchg
jg
add
adc
xor
mov
push
mov
adc
aas
popa
std
out
and
add
out
pop
getsec
push
aas
sub
idiv
mov
fwait
lods
pop
and
adc
int3
lcall
rcrb
repz
pop
sub
mov
pop
getsec
push
in
mov
dec
adc
jnp
push
xor
mov
shlb
mov
and
adc
push
icebp
insl
mov
or
hlt
ret
push
xchg
outsb
adc
mov
mov
xsha1
cmpsb
lret
pop
and
and
cmp
lret
xchg
pop
pop
pop
insb
pop
data16
mov
xor
cmpsl
sub
test
jecxz
inc
incl
push
mov
jo
sub
dec
pushf
mov
inc
and
loop
rcrb
lds
inc
lcall
outsl
ficoms
push
insb
sahf
push
dec
outsb
dec
pop
mov
push
inc
cmp
mov
mov
fcomps
fstps
dec
jl
mov
mov
jne
lock
test
mov
iret
lret
inc
cmpsb
inc
sub
sbb
js
inc
and
lret
pushf
push
in
push
popa
lahf
cmpl
add
fdivl
je
pop
jp
push
and
in
jg
sbb
jns
or
and
xor
fs
fst
jmp
rorb
out
cmp
dec
xor
aam
pop
push
push
insl
movsb
test
out
into
loop
add
mov
and
pop
pop
mov
xor
stos
jmp
and
jb
cmpsb
pop
ficompl
xchg
mov
push
lds
imul
and
cmpb
iret
mov
ds
push
jnp
mov
in
xor
add
outsl
xor
sub
add
pop
jb
movsl
xor
scas
fidivrs
in
sub
push
mov
jns
out
inc
push
hlt
jl
iret
xor
ds
sub
xor
mov
cmpsl
addr16
sbb
add
es
lods
aas
lcall
rcr
scas
ret
bound
inc
fldl
insb
scas
insb
bound
push
or
pop
mov
incb
lods
adc
xor
jns
clc
jnp
xor
mov
pop
cwtl
sub
movsl
add
fadds
jl
xor
ret
sbb
mull
add
fwait
or
loope
ret
mov
add
decl
sub
mov
aad
jmp
or
outsl
pop
test
xchg
and
sbb
jmp
xchg
cmp
ljmp
cmpsb
push
fldt
mov
cmp
scas
or
lcall
xor
mov
sti
rcrl
jne
ror
out
mov
sahf
xor
push
jmp
mov
mov
std
xchg
jae
ret
sti
fs
add
fstp
jle
mov
jbe
dec
xchg
sub
add
aaa
stos
fisubrl
adc
inc
dec
xchg
inc
dec
mov
in
push
outsl
dec
out
push
pop
dec
fistpl
push
lods
lret
scas
int3
pop
xor
mov
mov
scas
jmp
jbe
popa
nop
mov
push
gs
and
mov
adc
sub
jnp
add
mov
sub
not
mov
mov
mov
pusha
inc
pop
out
in
in
fidivl
and
inc
fadds
lahf
jmp
inc
sbb
sbb
js
cmp
lea
sbb
movsb
fldpi
fcmovbe
adc
xchg
lcall
ret
mov
sbb
jae
push
mov
xchg
rcrb
fcoms
lds
into
cltd
imul
pop
mov
push
sub
add
outsl
aam
mov
mov
add
add
test
fcompp
ss
xor
test
xor
int3
adc
test
test
mov
shrb
lods
inc
out
mov
loopne
mov
push
dec
jae
mov
cmp
stos
popa
xchg
inc
pop
or
sbb
adc
cli
add
outsb
sub
fs
icebp
les
out
fldenv
and
xchg
xchg
inc
xchg
gs
dec
pop
xchg
xor
jecxz
inc
push
jns
in
xor
jl
sahf
ret
popa
daa
lahf
je
pop
std
jecxz
mov
popf
push
and
and
outsl
xchg
mov
out
and
adc
rcll
mov
aam
enter
and
add
pop
in
aas
paddw
jns
sbb
mov
gs
mov
jecxz
fs
out
bnd
push
xlat
xor
data16
in
pushl
add
adc
jnp
jo
add
xor
pop
jno
scas
pop
cmp
dec
mov
dec
adc
pop
lds
divb
outsb
inc
sbb
jmp
mov
scas
push
dec
fcoml
lods
lock
clc
icebp
mov
sbb
cmpsb
and
jecxz
mov
dec
sbb
cmpsb
notl
or
dec
or
stos
je
outsb
ljmp
xor
fcomi
aad
pop
push
mov
nop
arpl
ljmp
jne
mov
ret
insl
or
push
loope
cmp
imul
adcl
jecxz
cltd
mov
shl
mov
mov
lods
pusha
dec
jp
mov
dec
ficoml
push
sub
jecxz
jl
mov
pop
sbb
cs
and
ljmpw
call
loope
xchg
jle
rcrl
pushl
lods
mov
xchg
xchg
das
js
jmp
je
fs
mov
adc
test
adc
inc
test
cmc
push
mov
sbb
sbb
add
lret
xchg
clc
and
xchg
inc
mov
push
sub
clc
shrb
and
aam
hlt
inc
popa
test
lret
xor
scas
mov
mov
ret
sub
imulb
clc
cmp
add
into
jle
or
adc
jne
popa
scas
or
rcl
repnz
dec
sub
pop
loopne
lods
inc
push
inc
lret
sbb
lea
mov
in
inc
mov
add
scas
mov
cltd
arpl
vhsubpd
loopne
test
fstps
aas
lcall
sub
push
inc
addb
in
xchg
adc
imul
sbb
cmp
sub
stos
data16
and
mov
mov
cmp
add
xor
mov
fidivl
jp
mov
popf
cmp
lods
pop
popf
ret
cmpsb
mov
inc
mov
mov
lds
mov
add
faddl
jns
aam
fistpl
insl
sarl
mov
stos
js
cmp
mov
in
es
pop
scas
fildl
xor
in
xchg
outsb
mov
mov
xchg
scas
pushf
ret
ds
scas
in
adc
xor
lea
repnz
cmpsl
mov
cmp
lock
inc
or
add
pop
fdivrl
or
icebp
lcall
int3
add
inc
dec
lahf
and
das
add
ljmp
xchg
jo
sub
jp
push
pop
popf
jo
call
pop
push
mov
dec
mov
pop
jnp
lock
adc
icebp
sbb
and
cmp
mov
fidivl
movl
cmpsl
std
scas
mov
shr
push
and
adc
icebp
cmp
jne
jb
mov
and
cmc
push
mov
in
add
cs
ret
test
dec
pop
xor
mov
mov
les
rorb
mov
insb
pop
scas
dec
mov
mov
imul
shlb
ret
push
mov
xor
jb
fdivr
sub
popf
sub
dec
inc
aaa
sbb
in
push
push
inc
or
add
jle
mov
inc
push
fists
sub
ja
stos
testb
cmp
mov
mov
hlt
sbb
repz
sbb
adc
loopne
inc
mov
pop
ret
es
inc
mov
lea
cmpsl
add
scas
roll
mov
ss
cmc
loopne
push
mov
ret
lret
mov
test
rep
popf
fimull
xlat
and
mov
rorb
ret
mov
xlat
pop
gs
xchg
push
out
fcoml
mov
fimull
jle
inc
mov
push
in
adc
xlat
test
mull
push
movsb
adc
outsl
mov
jno
push
mov
addr16
cmp
xor
fwait
cmp
jg
mov
in
pop
mov
jle
js
lcall
sahf
lahf
jmp
ljmp
pop
xor
insl
fs
xor
cli
adc
or
outsb
jp
fidivrl
loop
lret
or
sub
lock
sub
ds
jne
out
fisubs
cli
add
adc
inc
into
pop
dec
aad
add
mov
jg
jb
and
push
bound
inc
inc
and
mov
jmp
jns
add
in
jmp
call
mov
mov
or
sti
icebp
inc
icebp
lds
pop
scas
sub
add
cld
add
pop
xchg
add
sbb
mov
iret
mov
fsubrl
inc
fistl
mov
jecxz
inc
fcmovbe
dec
lods
imul
mov
cli
test
push
fstpt
push
std
add
shlb
lea
fbstp
cmp
xor
cmp
xchg
lret
or
add
fadds
out
dec
inc
test
push
jns
and
adc
int
push
and
imul
jle
jne
push
cmp
ret
stos
and
in
fidivs
fmul
cmpsb
push
pop
mov
xchg
cmp
lret
add
or
cmp
or
push
sub
test
or
push
es
xor
rcrl
bound
fisubrs
faddl
or
call
pop
in
test
push
xchg
xchg
scas
mov
and
mov
in
dec
xor
and
xchg
lds
addr16
dec
sub
lods
call
loop
test
fsts
out
jge
push
js
ret
sbb
lret
cmp
call
inc
sbb
lock
js
pusha
pop
pop
nop
sub
add
ja
fnstsw
mov
inc
sub
icebp
sub
or
inc
lds
pop
push
ret
mov
ret
imul
dec
pushf
mov
outsl
xor
aaa
arpl
nop
mov
or
sahf
loopne
dec
push
push
je
mov
push
outsl
cwtl
imul
inc
or
sti
in
ficomps
or
jmp
ljmp
jae
adc
addb
dec
fidivs
sbb
jb
test
dec
jg
lods
xchg
pop
xlat
cmpsb
and
push
jmp
loop
pop
flds
dec
xchg
fcomi
out
lods
dec
stos
lock
push
sbb
inc
jns
adc
jbe
xor
push
sbb
mov
mov
and
cltd
and
xchg
and
pop
or
ljmp
ss
and
aad
push
jle
pop
jp
mov
xor
add
inc
adc
leave
xor
jle
cmpb
xor
scas
pop
insb
adc
divl
mov
adc
mov
mov
xor
call
mov
jecxz
insl
and
mov
xor
cmpsb
jl
xor
int3
sub
xor
pop
or
loopne
movsl
adc
ljmp
cmp
ret
adc
pop
test
cs
stos
jl
dec
gs
add
fiaddl
movsb
repnz
mov
lea
js
mov
mov
jmp
cmp
sub
pop
mov
cmpsl
jnp
push
push
push
xchg
cld
push
out
sarb
cltd
dec
data16
popa
pushf
jne
or
xchg
mov
push
jne
cmpsb
mov
and
jno
mov
and
dec
jg
enter
push
mov
in
sahf
dec
loop
cs
stos
loope
xchg
ret
mov
inc
sahf
dec
jbe
push
popa
add
sbb
in
push
popf
pop
lahf
ds
lret
fisubl
lock
mov
and
jp
pusha
pop
mov
sbb
or
jbe
jb
xor
pop
dec
ljmp
mov
dec
jae
cmp
leave
pop
cmp
or
dec
jbe
addr16
mov
xchg
push
dec
repz
cmp
rolb
mov
call
ret
adc
pop
and
jo
in
adc
mov
loop
push
push
mov
pop
cmp
in
jmp
inc
fidivl
fs
adc
shlb
out
mov
bound
mov
faddl
jbe
mov
mov
xchg
jg
lds
or
and
sbb
dec
test
jns
je
out
or
adc
and
fstpt
mov
sub
push
pop
ficoml
or
in
out
sub
ret
add
push
repnz
rcrl
fs
ljmp
pop
loop
stos
xchg
outsb
jmp
cmp
mov
sub
call
jno
add
or
das
std
add
mov
nop
lea
dec
xchg
inc
add
rcl
rcl
push
dec
cmp
andb
movsb
popa
jns
sbb
bound
add
push
inc
addl
fildl
insb
ret
je
or
fimull
cld
sub
inc
fdivrs
jne
bt
subl
jo
push
test
cli
mov
pop
stos
adc
lret
cmp
aas
inc
imul
and
sahf
xor
mov
daa
adc
jno
sbb
push
test
bswap
fnstsw
xchg
sub
leave
stos
cmp
sub
jg
int3
cmp
inc
sub
rcrl
inc
or
ja
hlt
test
test
scas
icebp
xchg
int
ja
xchg
ss
push
adcb
nop
adc
ss
rorl
test
outsl
sbb
ret
les
push
shll
pop
into
in
mov
pushf
das
and
fcoml
inc
jl
xor
mov
clc
shrb
fstp
cmp
loope
pop
inc
push
jge
rorb
mov
or
cmpsl
xchg
mov
repnz
cmp
mov
daa
adc
loopne
mov
lock
cmc
mov
inc
xor
lea
inc
add
mov
icebp
in
jl
es
cmpsl
sub
sub
and
js
cmp
std
pop
gs
mov
sbb
sub
mull
dec
in
and
fwait
in
pop
xchg
out
jo
jne
ds
adc
stc
ja
test
jo
jl
mov
out
insb
mov
add
ljmp
cwtl
and
mov
sub
daa
pop
outsl
cwtl
outsb
imul
mov
xor
das
jbe
mov
jb
xchg
adc
pop
adc
pop
lcall
xchg
les
lds
or
movsb
xchg
into
clc
daa
call
insl
inc
mov
loopne
sub
pop
mov
aas
xor
mov
mov
and
data16
jo
das
cld
leave
pop
cmpsb
loop
lock
inc
mov
rorb
sbb
push
mov
mov
popf
jle
pusha
pop
cmp
adc
daa
gs
test
adc
out
jle,pt
xchg
fmull
sbb
jmp
inc
out
push
jnp
cwtl
or
out
add
das
jns
mov
and
mov
xor
into
imull
and
mov
clc
fs
shrl
push
xor
leave
xor
sbb
iret
jecxz
stos
pop
mov
xor
lret
dec
jae
popa
ljmp
stos
addl
les
push
call
sarb
adc
dec
bound
inc
iret
int3
mov
jge
jne
mov
mov
es
mov
fadds
lea
xor
jnp
lea
out
xlat
mov
fbld
xor
mov
xor
ret
xlat
insl
push
add
rcll
scas
mov
lret
mov
add
pop
lea
clc
js
lods
scas
fildl
out
rcrl
inc
arpl
lds
test
aas
ja
aad
fs
sbb
add
pushf
mov
dec
sahf
adc
cmp
mov
cltd
jbe
int3
pop
mov
jge
fcoml
cmp
outsb
mov
add
jmp
cli
and
iret
xchg
push
xlat
das
sub
fbstp
loopne
sub
adc
outsb
cmpsb
scas
jecxz
jp
fwait
jecxz
ja
inc
mov
mov
cld
data16
xchg
sub
cmp
xor
add
lcall
in
aad
in
cmpsb
daa
repz
xor
lods
cmp
xchg
lret
cmpsl
mov
inc
cmp
aaa
repnz
pop
insl
dec
xor
movsl
fidivs
sub
mov
ror
dec
xor
shll
xor
sub
out
add
loope
xchg
and
push
aaa
divb
sbb
adc
ss
push
cs
mov
mov
push
or
mov
sub
pop
and
nop
fcmovne
es
lods
aas
dec
mov
imul
inc
loope
idivl
aad
xor
stc
out
aas
ds
in
cld
lods
rolb
sbb
sub
dec
push
sarb
cwtl
dec
jle
xlat
mov
add
stc
les
mov
pop
mov
roll
std
dec
add
and
movsb
out
or
lahf
sbb
jmp
push
push
js
adc
incb
repnz
xlat
filds
sub
ficoms
xor
call
icebp
mov
fistpl
icebp
movsb
daa
adc
in
cmp
cltd
xor
and
cmp
sub
dec
outsl
dec
xor
xchg
push
test
sbb
push
jg
hlt
jecxz
ds
jg
sahf
cld
adc
sub
add
jae
adc
push
push
incl
fcmovnbe
push
adc
jge
inc
pusha
imul
xchg
pusha
pushf
cmpsl
repnz
or
test
js
push
fldcw
lods
enter
mov
jge
and
lock
and
lods
stc
gs
je
xchg
imul
add
addr16
push
lea
or
js
jl
sub
push
mov
loop
sub
ficompl
xchg
jl
xchg
cmp
test
loope
xchg
jo
fwait
push
ss
repnz
pop
scas
test
sub
and
out
push
bound
loopne
mov
jecxz
xor
rorb
push
rcrb
shl
or
out
cld
in
mov
in
jp
les
mov
movsb
ja
lcall
pushf
ljmp
imul
push
sub
lea
xchg
adc
cmp
jne
dec
mov
push
inc
mov
pop
iret
fisttps
aad
fstpl
lahf
out
pop
loope
add
mov
scas
jmp
cmp
hlt
je
mov
pop
lret
stos
sub
inc
lahf
sbb
jbe
out
push
fsubrs
jb
mov
js
sub
jmp
pop
in
add
lcall
inc
shl
xchg
xchg
push
ss
les
popa
push
ret
jbe
xor
leave
cs
add
push
in
inc
dec
sbb
dec
mov
inc
je
mov
loop
mov
mov
xchg
jbe
stc
jmp
fnsave
push
sbb
test
push
push
out
cmp
mov
push
test
scas
cltd
jbe
repnz
cs
mov
sbb
negb
jp
scas
in
cmpsl
jge
dec
and
cmp
mov
je
adc
xchg
sti
or
cmovge
ret
push
int
dec
xor
incb
and
in
xor
pop
les
clc
cmp
shrl
ss
cltd
aam
add
mov
cli
iret
pop
mov
jecxz
call
cmp
ss
sub
cmp
loopne
repz
pop
les
push
insb
ja
lret
in
push
data16
mov
push
arpl
icebp
jb
dec
pop
mov
cli
xchg
pushf
jne
test
push
xor
loope
xor
pop
sbb
or
jb
adc
fldenv
orb
ret
in
adcb
cwtl
jae
iret
std
inc
sub
pop
ss
mov
sub
out
push
movsl
inc
imull
aad
xlat
sti
test
jnp
jg
testl
jae
adc
cmpsb
xor
cmpsb
or
push
xor
jae
mov
cmp
repnz
scas
lret
subl
adc
addl
and
xorl
cmp
ret
stos
stos
test
lahf
xchg
call
push
loopne
out
push
aas
jg
rcll
jb
push
daa
mov
jl
mov
decl
lods
aas
addr16
pop
dec
sub
inc
aam
aam
dec
repnz
adc
add
jmp
ljmp
and
push
sbb
adc
jns
mov
adcl
pusha
xchg
movsb
jmp
mov
sub
sub
repz
imull
out
cmpsl
cmp
cwtl
pop
sub
push
pop
and
push
jb
pop
inc
jmp
outsl
pop
xchg
pavgb
nop
mov
js
jg
lods
or
ret
xor
add
add
dec
push
pop
cmp
push
add
lea
clc
adc
pop
ds
andl
xor
jno
push
orl
jecxz
insb
repz
jl
xchg
mov
ficoml
pop
cli
adc
xchg
movsl
lds
fstps
int
xchg
jnp
adc
sbb
into
dec
dec
out
sbb
sti
push
repz
adcb
mov
cmp
div
inc
add
xchg
aas
shlb
leave
inc
insl
cmp
in
loop
pop
nop
out
fidivrl
ret
xchg
repnz
sbb
xor
repnz
icebp
mov
rclb
xor
and
mov
aam
stos
cltd
mov
imul
mov
add
fsts
mov
and
dec
xchg
rcl
push
out
cli
in
daa
ljmp
jbe
mov
sub
cmp
inc
mov
xchg
inc
insl
mov
in
dec
in
stos
lods
scas
or
sub
iret
jle
mov
jmp
cmp
repnz
jns
push
test
pop
dec
rcrb
mov
pusha
add
adc
xchg
push
leave
dec
pop
in
jnp
xchg
test
movsb
int
rol
add
insl
inc
or
push
inc
inc
or
jae
testl
add
hlt
stos
adc
add
cmpsb
inc
sbb
jbe
fstps
inc
mov
cmpl
pushl
sbbl
leave
subl
rcll
out
nop
cmpsb
mov
sub
push
js
push
sub
pop
xor
inc
push
loope
dec
inc
pop
mov
jbe
andl
dec
xor
lock
loope
mov
push
sub
fld
push
push
add
test
aas
repnz
in
sub
sbbl
lret
aad
das
adcl
mov
incl
sahf
in
and
xlat
jmp
cmpsl
pop
cmpsb
push
outsb
stos
hlt
adc
js
les
sub
ja
and
das
dec
cmp
xchg
lcall
inc
mov
cs
push
push
in
addl
out
sbb
mov
lds
adc
arpl
sbb
add
push
cmc
pop
std
mov
test
push
add
outsb
xchg
leave
add
shll
js
push
adc
out
add
xor
pop
dec
xor
call
cmpsl
push
pop
mov
in
push
in
adc
cmp
cmovp
cmpl
jge
cmc
sub
jl
scas
sub
or
stos
in
je
test
push
add
and
lret
inc
push
movl
roll
shl
sbb
cmp
sbb
and
sarl
push
outsl
and
jns
cwtl
sbb
push
ds
mov
mov
fwait
test
mov
lret
push
cmpsl
push
out
orl
scas
jg
dec
test
pop
xchg
out
lahf
pop
icebp
pop
sar
lcall
movl
aaa
rcl
jnp
je
fwait
mov
popa
cmp
mov
inc
lds
sub
fdivl
xor
dec
sbb
mov
jecxz
insl
cmp
mov
adcl
subb
and
cmp
dec
mov
or
loop
in
sub
inc
punpckhbw
sub
fldenv
and
adc
imul
mov
fiaddl
sbb
jg
adc
mov
rcll
or
dec
fstpl
jmp
outsl
pop
out
inc
xor
mov
enter
test
out
sbb
xor
imul
jecxz
leave
push
jnp
addr16
arpl
xchg
fwait
pop
roll
jecxz
js
aam
repnz
xor
sub
jl
mov
mov
adc
das
mov
mov
mov
inc
pop
sbb
mov
dec
addl
sub
outsb
gs
fbld
inc
jb
mov
and
dec
outsb
xchg
add
mov
cmp
dec
xlat
jle
in
xor
sub
xchg
loopne
ljmp
dec
and
pop
movsb
imul
call
mov
sahf
cld
dec
movb
push
xchg
dec
dec
outsb
mov
stos
adc
out
and
pop
imul
hlt
xor
das
outsl
shl
es
xchg
jecxz
jg
cmpsl
push
and
pop
repz
inc
mov
inc
sbb
inc
lock
in
cwtl
in
mull
adc
loop
test
lock
mov
shll
inc
xor
scas
lods
aam
fstl
js
inc
xchg
mov
scas
push
add
ficoml
dec
cmpsl
bound
cld
fldcw
add
into
xor
or
icebp
mov
pop
xchg
popf
dec
push
imull
sub
cmp
or
fwait
and
and
pop
cld
flds
jb
bound
inc
in
or
iret
or
es
fildl
hlt
lods
push
in
adc
scas
add
rol
cwtl
xchg
xor
push
frstor
push
sbb
mov
add
ds
lds
ljmp
scas
xchg
mov
sub
mov
stc
jno
dec
and
arpl
jp
inc
add
push
popa
jns
pop
cmpl
sbbl
or
jge
sbb
inc
jno
xor
xchg
mov
addb
mov
add
icebp
xchg
mov
mov
ret
gs
imul
push
pop
dec
inc
ret
mov
arpl
mov
scas
push
scas
fstpl
ret
loop
test
sub
arpl
dec
fucomi
mov
test
sbb
hlt
mov
loop
lahf
cmp
mov
cmp
sti
insl
lahf
pop
lea
fisubl
xor
jge
imul
scas
ds
fbld
mov
xlat
and
adc
fidivrl
jne
repz
mov
fsubl
ret
adc
icebp
mov
je
sbb
jle
and
push
in
cmc
pop
stos
repz
mov
mov
lahf
or
imul
fildll
fmull
test
adc
daa
sar
loopne
mov
xchg
jns
test
std
shrl
fwait
push
jno
mov
mov
out
test
fistpll
push
push
out
pop
faddl
inc
loop
ja
ds
subl
mov
orl
into
mov
loope
pop
mov
testl
in
inc
cmp
addb
mov
mov
mov
lock
out
and
dec
and
mov
jno
xchg
subb
pop
xchg
les
mov
push
fbld
movsl
mov
xlat
adc
mov
aam
cld
push
mov
and
sub
les
sbb
adcl
aad
pop
mov
add
sti
jp
cwtl
mov
mov
cwtl
int
push
inc
mov
add
shlb
mov
imulb
sarl
jp
pusha
push
addr16
lret
lret
sbb
nop
gs
jmp
lods
or
pop
xor
outsb
outsl
repz
clc
rorl
call
adc
mov
adc
xorb
roll
xorb
jne
outsl
lods
scas
test
add
test
in
fwait
das
roll
cmp
in
popa
sbbb
pushf
jle
sbb
xchg
jecxz
dec
xor
popf
push
test
push
push
sub
bound
lods
in
add
cmp
mov
or
test
jl
and
mov
out
dec
and
les
cmp
dec
dec
and
pusha
add
out
mov
ja
cmp
scas
push
aad
scas
or
inc
dec
das
inc
sbb
call
nop
repz
clc
ret
inc
xchg
sbb
push
mov
push
adc
lock
add
inc
mov
push
jb
outsl
cwtl
mov
and
add
test
adc
mov
adc
jmp
pop
mov
mov
std
or
or
add
mov
das
popa
out
lods
test
mov
cmpsb
iret
popf
cmp
sbb
or
cli
sahf
dec
inc
pop
adc
dec
adc
fs
mov
in
adc
ja
xor
scas
sub
cmpsl
jb
pop
arpl
sub
inc
insb
mov
or
add
jl
les
jmp
scas
movsl
insl
fidivl
mov
in
sub
in
in
mov
mov
lret
mov
cmp
aas
add
or
call
jmp
push
xchg
rcr
fbstp
cli
or
in
xchg
mov
mov
pop
lock
js
xor
mov
xchg
cs
inc
out
jae
enter
cmc
cwtl
add
sahf
aaa
stos
call
sbb
jp
sub
jns
and
gs
call
hlt
lods
or
mov
pop
dec
hlt
cmc
test
xchg
cmc
pop
ffreep
cmp
push
dec
popf
push
push
mov
data16
push
mov
or
inc
push
fisubl
loope
enter
sbb
ret
loopne
aas
sub
dec
rol
arpl
pop
inc
sbb
sbb
push
je
shll
pop
cs
in
cli
cmp
sub
aaa
or
push
xor
dec
insb
and
mov
push
xchg
adc
clc
in
rcrl
inc
mov
adc
clc
mov
orb
sub
mov
sbb
pop
sahf
and
shl
stos
ja
sub
ss
cmp
or
add
out
and
add
rolb
aaa
lock
in
ja
fsubl
sub
cmp
fldt
pop
fwait
xchg
mov
pop
cmc
jmp
adc
push
lahf
arpl
or
dec
cmpsl
call
mov
xlat
test
mov
or
jge
jp
adc
jns
out
xor
jle
int
adc
mov
call
mov
inc
xor
pop
mov
mov
test
mov
xchg
mov
mov
mov
gs
sti
int
orl
mov
test
ror
in
push
jmp
lea
daa
rcr
loopne
adc
jno
cmpsb
mov
inc
adc
stos
jl
gs
xlat
dec
cmp
pop
inc
mov
mov
xchg
add
cwtl
or
jae
aas
popf
push
mov
dec
push
cltd
hlt
fsubl
mov
aas
mov
div
mov
xor
inc
mov
fwait
lea
test
das
dec
xchg
shlb
add
enter
les
push
loop
mov
inc
sub
je
cmpsl
sbb
jae
push
icebp
xlat
js
jmp
andb
movsb
or
int
pop
in
push
mov
shlb
sbb
insb
int3
movsl
cltd
scas
pop
std
ja
fnstcw
cmp
cwtl
pop
test
mov
aam
inc
xlat
sbb
popa
sti
pop
int3
xchg
jno
sbbb
push
hlt
sahf
mov
push
ret
and
cmc
ret
rcr
daa
jb
fsubrp
mov
cmpsl
add
pop
xchg
je
and
pop
fwait
jnp
pop
adc
cmc
or
adc
sti
sbb
mov
mov
js
push
popf
mov
out
jmp
pushf
or
push
aam
push
fst
fisttpll
xchg
lidtl
ret
sbb
mov
inc
mov
es
js
add
xchg
dec
xorb
test
hlt
rclb
mov
fildl
add
sbb
inc
fwait
dec
lea
push
inc
sub
add
ljmp
es
mov
mov
pop
push
jp
stos
push
shlb
and
mov
test
sti
pop
pop
cmp
sub
ss
or
iret
fldcw
test
jno
js
jbe
jmp
out
iret
lock
pop
test
mov
jns
scas
adc
aad
push
pop
sub
push
hlt
rorb
xlat
in
andb
ret
xchg
cmp
loope
mov
loop
shrl
mov
cmc
test
xchg
les
bound
aad
jmp
cmp
repz
inc
mov
in
ja
in
bound
push
cwtl
and
xchg
xchg
lahf
int3
mov
jbe
ss
out
mov
pop
addr16
jmp
lahf
or
sbb
cmp
xchg
sbb
mov
xor
push
in
jno
or
mov
push
pop
xor
int
and
lods
daa
mov
and
hlt
sbb
test
in
sub
xor
jnp
stos
mov
test
lds
jecxz
pop
enter
hlt
push
test
and
loope
ss
outsb
fsubrp
cmp
mov
adc
push
movsb
or
pop
push
xchg
mov
mov
pop
mov
sub
dec
sbb
push
cmp
les
js
mov
xchg
loop
cmp
std
icebp
test
cmp
jmp
cmc
popf
scas
out
adc
ljmp
enter
je
das
cmp
lods
test
movsl
sbb
jno
mov
aaa
int
fs
out
outsb
adc
inc
pop
push
rclb
mov
in
dec
sbb
test
outsl
and
sti
sti
pusha
or
fnsave
or
or
xor
data16
int
rcl
xor
jae
popa
lock
out
adc
fstl
push
sbb
mov
mov
adc
leave
and
adc
sbb
fisttps
cmp
movsl
mov
shll
push
and
popf
jb
in
push
sti
out
shlb
lcall
sahf
adc
and
jae
pop
cwtl
repz
fadds
out
je
push
pushf
call
sarl
fs
pop
add
cmp
xchg
push
dec
dec
cmp
lret
mov
cli
shlb
mov
jmp
sub
xor
mov
leave
pushf
and
in
icebp
in
lds
in
cmp
inc
pop
fwait
es
pop
jl
cmp
movsl
cltd
iret
movsb
dec
out
jle
mov
pop
fmul
adc
or
insb
mov
and
ja
or
dec
xor
xchg
out
jno
mov
xchg
and
xchg
mov
mov
and
js
pop
cmp
mov
mov
js
popf
scas
lock
sbb
xor
adc
pushf
mov
mov
pop
sahf
ja
cs
filds
imul
pop
ret
hlt
fwait
mov
push
lds
cld
std
dec
inc
scas
dec
dec
rorb
imul
out
or
inc
test
test
shr
xchg
stos
sbb
aaa
fdivs
ja
xchg
ret
xor
test
xor
inc
pusha
pusha
stc
je
mov
mov
xor
imul
cmp
adc
addl
gs
addr16
shr
test
std
jmp
fdecstp
cmpsl
in
clc
loopne
xchg
xor
cmp
idiv
push
aam
jb
sbb
sbb
fimuls
arpl
and
add
push
inc
or
int
jo
popa
lahf
movsb
scas
push
sbb
hlt
or
mov
int
pop
push
pop
jno
xchg
mov
leave
push
popa
cmpsb
lahf
test
dec
insb
xor
inc
jb
mov
mov
pushf
sub
inc
mov
jo
inc
push
cmc
pushf
dec
iret
fwait
sbb
inc
mov
inc
lods
xchg
decl
ret
add
cmp
es
inc
ljmp
scas
les
fnstsw
ret
pusha
xchg
icebp
out
sbb
mov
sbb
cmc
pop
push
push
je
sarb
mov
mov
add
inc
incb
or
fsts
or
cmp
in
and
popw
xchg
sub
enter
bound
jo
add
stos
or
adc
mov
in
fisubl
inc
test
xchg
add
cltd
jle
repnz
mov
push
cmpsb
fs
imul
xchg
mov
mov
scas
es
lahf
lret
add
adc
clc
mov
lahf
inc
int3
cli
nop
fistpll
mov
inc
mov
add
scas
sbb
dec
shrb
jmp
xor
push
add
xchg
pop
xor
nop
dec
es
cmp
fists
pop
scas
xchg
ljmp
pushf
add
out
or
push
popf
xchg
pop
ja
test
mov
bound
jb
xchg
ror
mov
sarb
cmp
dec
pop
rolb
or
mov
xchg
dec
dec
adc
daa
pop
out
mov
cmp
jns
outsl
lret
xor
jl
or
cmp
mov
outsl
push
cwtl
test
out
out
stc
sahf
int
out
mov
popf
movsb
jne
jnp
addr16
mov
in
loop
and
shl
sub
cmp
dec
insl
inc
lea
ret
mov
push
fcmovnb
ret
inc
push
mul
mov
adc
fdivs
mov
or
lods
push
adc
and
push
pop
cmp
out
aam
xor
dec
push
outsl
xchg
dec
add
shlb
cmp
jnp
movsl
fs
in
pop
xchg
xchg
es
in
pushf
int3
push
xor
or
cmp
mov
data16
popf
or
fwait
inc
sub
ret
pop
test
pop
push
rolb
int
pop
or
push
leave
test
jne
adc
add
pop
inc
inc
push
leave
lods
pusha
subl
and
filds
mov
push
pop
int
aas
cmpsl
shlb
push
push
addl
mov
push
xchg
mov
inc
and
out
les
roll
jp
insl
shll
sub
in
mov
int3
in
fistpll
imulb
lods
or
mov
out
or
xchg
mov
fdivrs
xor
in
and
adc
inc
add
adc
nop
jns
mov
jmp
pop
mov
mov
xchg
fnstsw
les
pop
xlat
sbbb
xor
xchg
cmp
or
addr16
neg
lcall
sbb
lods
pop
jge
cmp
js
mov
add
test
sbb
jno
fcomi
inc
ss
jle
adc
or
shlb
xchg
lods
mov
cmpsb
sub
pop
xchg
push
in
inc
imul
mulb
add
and
sbb
dec
xor
call
divl
test
in
or
jl
xor
in
add
adc
push
addr16
jg
and
xor
mov
sub
dec
shlb
call
mov
xor
imul
or
jl
ret
ds
jmp
in
lods
or
xchg
dec
mov
xor
or
cmp
lcall
jne
mov
aad
add
out
or
popa
cs
and
shrl
fcmovnbe
jb
sbb
ljmp
lods
out
and
adc
or
push
outsl
xor
sti
js
daa
pop
cltd
dec
into
in
jne
mov
jb
mov
jbe
or
xor
btc
out
lock
insb
push
adc
cmp
xor
jle
gs
jg
int3
jmp
jae
and
fisubrl
in
mov
sub
insl
sbbb
hlt
rolb
into
lcall
rcrl
mov
scas
mov
dec
xchg
mov
test
stc
pop
pop
movl
adc
aam
mulb
mov
push
sbb
clc
inc
cmp
sbb
ljmp
pop
mov
fidivl
sbb
or
pop
push
das
dec
inc
push
aad
cld
stos
xor
into
xor
mov
add
clc
fistps
enter
int3
jl
fdivs
fists
sahf
inc
xchg
pop
adc
inc
push
pop
psubb
mov
outsb
cmp
fsts
mov
mov
in
push
push
mov
cwtl
jae
ret
fwait
sahf
inc
cmp
das
shll
inc
mull
lods
mov
or
out
push
ds
stos
jo
dec
daa
push
sbb
mov
in
pop
sbb
clc
add
inc
jne
xchg
pop
inc
xor
ret
je
test
sub
fnstenv
lcall
loop
xlat
hlt
out
or
inc
or
and
or
lret
shr
cmp
popa
mov
mov
insl
mov
je
daa
fimuls
mov
and
test
ljmp
icebp
jno
push
push
jae
fidivs
stos
lret
xor
mov
idivb
movsl
push
jno
mov
add
push
adc
xor
mov
bound
cmp
bndstx
sti
inc
out
mov
pushf
push
sub
push
sbb
jnp
sbb
jl
sub
push
test
ds
les
and
pop
mov
mov
mov
addr16
int
dec
mov
outsl
fcmovnb
cmp
sbb
les
icebp
aam
mov
sub
and
cmp
cmp
sub
mov
pop
int
lods
aam
jo
mov
push
inc
xchg
pop
lods
lahf
addl
shl
pop
stos
dec
push
call
outsl
push
pushf
push
or
into
pusha
xchg
xlat
filds
rcrl
push
sti
sub
in
jb
mov
das
insb
aas
cmp
inc
movsl
idiv
pusha
pop
mov
lock
in
jg
out
aad
jne
out
xlat
imul
pop
pushl
clc
push
or
fildl
lcall
dec
sub
popa
xor
daa
out
or
dec
call
cmpsb
cmp
dec
jge
into
dec
out
fstps
out
inc
fwait
xchg
fsubs
into
lret
lcall
imul
xor
jp
inc
xchg
adc
mov
and
clc
xor
imul
dec
cltd
push
or
rolb
fst
jmp
test
adc
mov
mov
repz
xchg
movswl
jecxz
push
popf
mov
adc
arpl
and
add
xor
popa
xor
mov
call
cmpsb
sub
sub
cmp
pop
jg
in
cmpsb
jmp
jp
icebp
push
pop
or
push
mov
movsl
pop
pop
les
lock
dec
imul
mov
cmp
mov
inc
xlat
fld
mov
out
lea
les
pop
jbe
pop
shll
mov
mov
sbbb
lods
shrb
jbe
push
movl
jbe
sti
push
push
inc
add
lds
xchg
fstps
test
cld
imul
sbb
jmp
incl
pop
lods
arpl
aaa
push
int
ss
mov
movsl
mov
jmp
jg
add
std
in
insb
jle
mov
mov
stos
xchg
mov
shrb
and
sbb
imul
cmp
lcall
pop
fisttpll
fnsave
ret
push
out
test
insl
push
or
xor
pop
xchg
dec
mov
push
and
xchg
xor
sbbl
jmp
cmc
xchg
jo
and
xor
rcrb
imul
pop
add
dec
or
sarb
std
xchg
adc
push
out
dec
sub
dec
test
gs
add
fistl
out
ret
push
idiv
xor
cwtl
dec
sub
xor
inc
mov
subl
mov
test
push
sbb
sbb
jle
and
push
outsb
scas
sub
std
in
add
push
lcall
cmp
stos
sbb
loope
mov
dec
lods
mov
adc
dec
fldt
xor
pop
in
inc
mov
out
jecxz
xchg
je
jg
shr
dec
sarb
xor
movsl
test
lcall
mov
or
pop
fwait
mov
das
jp
adc
inc
xchg
adc
fisubrl
in
in
ja
sbb
jmp
mov
mov
lcall
daa
iret
pop
mov
cli
pop
clc
jg
jp
or
mov
in
xorl
push
or
inc
das
lods
sahf
nop
cmp
pop
fs
std
cmpsl
mov
add
jl
in
aam
nop
mov
mov
xchg
xchg
push
dec
mov
push
xchg
cltd
jg
rcrb
or
mov
add
sbb
leave
adc
push
xor
psubusw
roll
xchg
inc
jg
add
sahf
test
push
push
ljmp
add
mov
outsb
sbb
cltd
lret
pop
mov
mov
rcll
enter
out
icebp
and
sbb
fwait
scas
mov
aaa
dec
movsl
test
outsb
popf
mov
cld
fnsave
repz
push
add
mov
mov
mov
rclb
pop
and
xor
pop
enter
inc
inc
and
inc
xchg
repz
mov
ffree
and
lock
jno
std
push
adc
dec
pop
cs
inc
iret
and
push
aad
and
aaa
ffree
mov
cmp
loop
mov
pop
outsl
jns
inc
loopne
hlt
jl
mov
sti
adc
mov
sub
jmp
sbb
xchg
mov
jg
das
movsl
and
mov
sbb
pop
repnz
sbb
jmp
repz
out
int
mov
pop
mov
lods
xchg
lret
repz
leave
mov
mov
pop
loope
dec
xlat
movsb
mov
pop
addr16
push
sub
test
xchg
in
nop
mov
push
mov
lret
movsb
in
add
fwait
or
jae
rcrl
cmp
pop
push
call
repnz
pop
and
cld
mov
out
mov
mov
cld
sbb
mov
and
xchg
out
inc
ds
mov
inc
aaa
push
stos
clc
fbstp
inc
xchg
fidivrs
sbb
mov
lahf
loopne
adc
movsl
lret
xchg
shlb
pop
dec
mov
inc
scas
aam
sub
das
popa
lods
inc
in
mov
or
fimull
scas
or
mov
or
sub
pop
and
cvtps2pd
jmp
ljmp
jmp
clc
cltd
mov
mov
mov
xchg
pop
subb
mov
push
xor
or
cmp
sahf
cmp
lock
stos
push
fldt
sbb
cmp
int
cmp
sub
mov
jno
mov
mov
cmpsb
push
or
sub
jae
mov
jg
jecxz
inc
out
adc
mov
sub
dec
cmp
mov
cmpsb
mov
inc
movsb
sub
popf
add
adc
into
push
xchg
ficoms
sbb
xchg
pop
fs
pop
sbb
hlt
mov
outsb
sbb
repnz
adc
inc
loope
xor
pop
enter
fstps
dec
inc
test
push
dec
or
ss
movsl
jmp
mov
push
or
push
popa
mov
rcll
dec
sub
and
out
jg
jns
xchg
adc
movsb
push
sub
or
or
sub
add
sbb
mov
sub
mov
or
into
push
es
sbb
add
out
clc
and
jmp
push
pop
cmp
enter
add
outsb
and
adc
out
out
in
test
gs
and
outsl
jbe
mov
mov
jle
jecxz
sti
lods
loopne
push
js,pt
daa
pop
data16
or
xchg
sarb
sahf
and
xchg
pop
add
xchg
push
inc
mov
ss
xchg
inc
and
sub
add
into
outsb
orb
loope
or
sbbb
lahf
lcall
dec
cmc
fistpll
pop
arpl
les
mov
mov
bound
push
mov
mov
das
mov
ss
xchg
out
or
roll
in
out
enter
popf
shrb
movsl
fwait
pop
mov
lds
mov
iret
cmp
inc
in
scas
lods
dec
cwtl
sub
fdivrp
outsl
aad
mov
inc
inc
xor
in
jge
xchg
adc
sub
cwtl
enter
sahf
mov
in
or
gs
std
dec
aad
pop
ds
insl
lods
or
dec
or
mov
out
xchg
sarb
lcall
pop
out
sbb
jl
cltd
inc
movsb
mov
mov
andb
ljmp
jl
rorl
push
cltd
inc
adc
fistpll
push
fs
push
mov
popf
arpl
repz
jae
xchg
mov
xchg
in
lods
sub
mov
adc
jl
mov
fdivl
adc
push
stos
xlat
dec
xlat
loope
mov
cmp
mov
mov
test
into
mov
pop
mov
mov
dec
pop
in
push
mov
jmp
xor
mov
pop
aam
adc
jo
dec
ja
inc
and
test
lret
frstor
cmpsl
lods
cmpsl
mov
enter
push
sub
aam
sbb
cmpsb
jmp
dec
push
mov
push
aas
out
mov
imul
leave
out
rorl
sbb
je
xchg
ljmp
lcall
shr
add
adc
stos
mov
outsb
inc
xor
lret
loope
adc
xlat
dec
xorl
inc
lahf
sub
sti
and
fbstp
ret
rol
aam
xchg
aaa
inc
inc
xor
lods
repnz
in
pop
push
scas
dec
in
sub
iret
arpl
or
insl
loope
mov
mov
aas
xor
fstpl
loope
aas
jns
jp
jl
sar
leave
cmc
push
jne
jno
mov
cwtl
cs
jg
inc
cmp
sub
jb
mov
push
xor
movsb
adc
in
gs
movsl
mov
orb
hlt
or
adc
push
xchg
mov
inc
cs
loope
gs
mov
inc
add
bound
scas
es
xchg
mov
repnz
fildl
arpl
dec
test
cltd
sbb
pushf
or
out
pop
loop
enter
jle
lcall
mov
cs
enter
dec
mov
mov
out
xor
sbb
and
stc
mov
dec
inc
xor
jnp
cs
out
shlb
in
mov
and
jnp
lds
jbe
jecxz
ss
mov
int
scas
aam
pop
xor
add
inc
imul
xchg
pop
arpl
clc
pop
cs
sbb
jg
les
jno
xor
cwtl
fst
mov
mov
inc
lcall
mov
ret
loopne
xchg
fidivs
ds
lods
movsb
into
aad
test
mov
inc
loope
in
add
xorb
clc
jae
jae
pop
jnp
or
mov
mov
repz
jge
mov
adc
cmc
fstl
faddp
push
stos
scas
movsl
mov
stos
push
xchg
sub
jmp
insb
jl
rcr
pop
jmp
mov
sbb
or
imul
xchg
std
push
out
fimull
hlt
mov
cmp
jne
orl
fwait
push
in
sbb
cld
nop
lcall
mov
and
lret
push
imul
push
jbe
inc
aaa
mov
jb
inc
add
movsl
out
ret
inc
mov
cmp
mov
and
mov
adc
jge
add
leave
rclb
adc
in
jo
orl
xorb
mov
mov
rorb
test
pop
je
inc
xor
scas
xchg
scas
pop
js
data16
jg
iret
in
outsb
rorb
push
mov
xor
in
stos
rorb
lods
push
inc
or
out
cmp
mov
jg
pop
adc
jbe
or
or
pop
pusha
cmpsl
ljmp
push
adc
test
mov
loope
xor
pusha
and
jle
repz
ljmp
mov
scas
jo
ds
testb
mov
adc
in
inc
cmp
push
daa
xor
ljmp
cmp
insl
jge
pop
sbb
add
aas
pop
mov
adc
fisttps
xlat
test
cmp
cmp
cwtl
cmp
insl
xchg
fldl
adc
dec
roll
in
inc
mov
mov
xchg
push
xchg
pop
and
mov
pushf
pop
rcrb
in
jbe
cld
out
push
jns
sbb
mov
adc
sarl
lcall
pop
xor
or
mov
shrb
add
jno
popf
rep
push
cmc
ja
jb
jecxz
adc
jbe
test
inc
movsb
daa
mov
movsl
or
xchg
push
ja
les
mov
or
cmp
aam
daa
mov
nop
rorl
dec
add
shll
enter
iret
mov
sub
xor
dec
push
xor
or
cmp
sub
cmp
cmp
ret
push
jmp
cltd
in
push
cld
dec
pop
xorl
lea
dec
pop
jne
cmc
mov
inc
ss
mov
repnz
sub
add
or
mov
aad
sub
insb
scas
dec
dec
jecxz
dec
lods
mov
jecxz
mov
push
mov
sub
pop
sub
arpl
cmp
mov
jno
sahf
lock
xchg
jo
repnz
push
js
call
rcl
push
addb
mov
jge
sbb
xchg
popf
mov
push
adc
or
rcrb
jb
xchg
inc
hlt
fisubrs
mov
push
arpl
aam
mov
mov
xor
xorl
jge
lock
mov
fst
clc
ret
loope
ret
mov
mov
imul
mov
gs
cmc
pandn
loop
ss
mov
push
xor
inc
test
in
xor
loope
repz
daa
jno
int3
dec
mov
out
add
lcall
sub
push
hlt
in
imul
xchg
fwait
cld
or
xor
jmp
push
add
inc
jp
inc
js
push
outsl
mov
sbb
popa
sub
fsubs
jp
add
in
mov
push
inc
jecxz
cmp
push
cmp
shlb
out
les
out
ret
dec
aas
pop
bound
cmp
inc
cwtl
outsl
scas
jae
cmp
das
and
cmpb
pusha
jl
pop
sub
roll
sub
sahf
mov
xchg
push
mov
mov
cltd
cs
inc
bound
aas
jb
xchg
pop
loope
fs
out
nop
insl
data16
ja
sub
in
push
loope
mov
aad
mov
enter
orl
or
fistpll
mov
jecxz
fwait
push
and
inc
imul
xor
pop
fmuls
loopne
jl
pop
in
push
jmp
push
sbb
sub
out
mov
lods
std
pop
hlt
mov
cmp
nop
aas
cltd
sbb
cmc
test
fcmovb
loope
xchg
jo
loopne
jbe
or
hlt
jbe
ret
mov
repnz
cmp
repnz
or
xchg
ja
fisubrs
insb
in
jo
test
lock
mov
adc
mov
xchg
insb
mov
add
pop
ret
mov
and
std
and
scas
push
rcrl
and
push
mov
pop
mov
pusha
cmpsb
cli
aad
cmp
cmc
mov
xchg
or
iret
or
es
cld
inc
popf
pushf
pop
dec
pop
pop
out
lea
lret
jae
xchg
jo
roll
sub
jmp
add
sub
pop
or
jge
sbbb
jl
push
es
or
pushf
repz
sub
mov
in
shr
repnz
dec
adc
in
mov
xor
pop
add
cmp
in
xchg
dec
fstl
int3
and
cmpl
xchg
cmc
leave
sub
pop
xchg
jmp
mov
call
out
shrb
jge
sbb
mov
fldenv
cmpxchg
jp
mov
mov
sti
pop
xor
mov
in
xchg
cwtl
fcomps
pop
test
fisttpl
xor
inc
cmpsb
mov
jle
mov
cmp
xor
cli
add
lret
mov
mov
push
roll
cmpsl
in
jp
sahf
mov
mov
mov
in
add
leave
lret
push
lahf
je
push
sub
push
mov
out
sub
add
aam
in
in
mov
add
mov
fldt
scas
mov
jecxz
pop
in
lds
repz
inc
pusha
xchg
pusha
ljmp
out
dec
arpl
lock
or
pop
pop
sbb
inc
mov
xor
arpl
dec
arpl
mov
shrb
out
mov
ja
testb
fisttps
pop
inc
aas
cmpb
das
into
sbb
mov
dec
or
dec
lret
push
test
xchg
lahf
sub
cmp
mov
dec
and
mov
push
in
push
cmp
les
out
xor
adc
leave
ret
push
nop
adc
dec
hlt
inc
sub
pop
cmp
dec
mov
adc
push
inc
jbe
pop
push
test
jbe
push
stc
and
out
adc
pop
pop
dec
movsl
scas
xor
rcr
into
js
fcompl
sahf
cmp
aas
dec
fdivl
das
pop
js
and
and
dec
mov
cwtl
inc
fsubrl
in
addr16
add
imulb
out
jecxz
aas
and
in
sbb
lods
test
and
jae
aaa
mov
xchg
mov
cs
jp
add
xchg
xchg
imul
mov
nop
cld
add
xor
scas
or
mov
push
mov
test
lahf
mov
add
xor
xchg
out
sbb
mov
cmp
mov
cmp
sub
jge
fimull
lock
mov
push
arpl
xchg
xchg
or
ljmp
shrl
cmc
int3
cmp
ds
mov
xchg
mov
lahf
add
jns
pushf
or
popaw
mov
les
pop
loopne
mov
xor
xor
sbb
push
jo
sbb
popa
add
loop
clc
mov
mov
arpl
push
cmp
adc
popa
int3
movl
jle
mov
roll
idivb
pop
mov
enter
call
pop
mov
pop
mov
mov
add
xchg
and
jp
cli
xchg
jecxz
adc
mov
sbb
adc
xchg
mov
test
aad
ja
push
loop
xor
lock
mov
clc
cltd
push
mov
bound
lea
mov
jmp
pusha
xor
jns
inc
pop
push
mov
mov
test
jbe
adc
insl
nop
fisubs
cmp
pusha
cmp
pushf
lret
dec
pop
jne
sbb
jp
and
jbe
cwtl
push
repnz
mov
sub
inc
insb
loop
fstpl
aad
popf
adc
rorl
lret
mov
xchg
fcmovu
push
xchg
mov
push
sbb
stos
je
aad
subb
mov
fisubl
cmp
aas
aaa
cld
dec
test
mov
mov
lret
pop
inc
mov
rol
jne
fdivrp
jle
push
push
or
pop
ljmp
mov
lods
pop
push
inc
xor
dec
pop
sahf
jl
ficompl
loopne
and
cld
push
cmp
mov
jb
pusha
out
stos
int3
jg
mov
jns
aad
jmp
or
mov
inc
xor
in
jecxz
sbb
fs
cmp
cltd
mov
divb
das
mov
dec
xlat
and
push
xorl
lock
xchg
sbb
mov
sbb
adc
orl
mov
mov
inc
pop
mov
cmp
stos
aad
aas
xor
xchg
mov
fimull
inc
fldcw
cmp
not
aad
cld
enter
cmpsb
imul
push
fldt
mov
repnz
xor
jo
push
or
adc
cld
xor
rolb
xlat
cmp
es
or
xchg
jg
pop
jmp
insb
lods
bound
jle
and
pushf
mov
faddl
aam
sub
add
fisttpl
xchg
shlb
mov
xchg
xchg
push
or
movb
pop
aas
das
push
dec
cwtl
push
rorb
dec
push
das
fwait
jae
movsb
jmp
and
pop
addb
mov
add
int3
jmp
je
pop
cmp
mov
push
enter
push
in
pushf
adc
and
out
mov
inc
sbb
push
xor
cmp
dec
inc
sub
lahf
fdiv
stos
sub
jbe
mov
loope
mov
adc
imul
iret
in
push
cmp
scas
push
ficoml
rcr
fiadds
lock
mov
push
push
dec
gs
pop
and
xor
jp
sbb
mov
push
or
xchg
aaa
stos
mov
sub
mov
inc
fidivl
test
jl
xor
xor
clc
lds
add
mov
lahf
shll
sbb
popf
lret
sub
sbb
in
lea
shl
jl
adc
out
pop
mov
out
lcall
cs
pushf
lret
inc
sbb
xchg
push
or
or
and
add
pop
mov
mov
fwait
je
or
xor
daa
ret
inc
jo
testb
inc
pop
call
lock
adc
lods
and
popf
aas
retw
test
inc
push
inc
sbb
sbb
adc
sbb
sub
idivl
dec
push
push
out
jl
loopne
mov
xchg
push
pusha
cmc
aad
cltd
fstp
fistl
test
or
mov
adc
ret
mov
lods
lret
movsb
pop
outsl
xor
and
cmpsl
mov
sbb
jp
and
fidivl
cmp
jo
daa
negb
adc
stc
push
push
mov
xor
cmc
divb
mov
jl
ja
cmp
adc
inc
dec
lea
cmp
insb
gs
add
cmp
adc
inc
popa
dec
or
aaa
lahf
fisubrs
rep
sahf
jmp
and
loopne
insl
add
pop
addb
rol
mov
jo
repz
cmpl
pop
imul
mov
fcomps
inc
cmp
add
jnp
ret
push
ljmp
push
icebp
movsb
and
fsubrl
dec
push
imul
and
pushf
mov
jns
stc
cltd
pop
test
push
adc
mov
int3
aas
je
pop
push
mov
push
pop
std
lods
jno
stos
dec
jae
push
js
adc
cmp
and
push
clc
je
je
repz
adc
jne
into
cmp
sbb
cmp
in
insl
in
addb
pop
cmp
int3
loop
dec
jae
mov
aaa
aam
sti
cmp
test
sub
movsb
lock
mov
jl
addl
cmp
fnstcw
jne
dec
fisttps
nop
in
pop
mov
mov
stos
mov
xchg
popa
in
std
sbb
and
push
push
movsl
ficomps
icebp
cltd
mov
mov
pop
jne
test
push
mov
pop
cmpsb
sbb
clc
mov
loop
sbb
cmp
mov
add
rclb
push
mov
fwait
pop
iret
xor
adcl
sbb
out
xchg
cmp
push
and
jne
cld
andl
mov
mov
or
sbb
adc
mov
mov
push
or
insb
gs
movsl
enter
inc
sub
pop
dec
mov
pop
leave
mov
pop
and
icebp
mov
pop
xor
lock
mov
movsl
out
or
jb
dec
repnz
or
icebp
push
add
hlt
mov
mov
or
ja
inc
push
xlat
xchg
adc
insb
push
mov
ljmp
xchg
loopne
adc
dec
jmpw
cltd
cld
clc
dec
leave
mov
cmp
jp
ret
adc
xchg
shll
scas
add
or
jp
mov
mov
out
cmp
ret
mov
jbe
movb
imul
sarb
loope
jb
pop
adc
push
adc
add
in
fisubl
in
mov
inc
jp
dec
cld
enter
adc
in
clc
lds
mov
in
xchg
mov
outsl
mov
add
and
in
xchg
jo
jmp
sbb
pop
int3
cli
cwtl
or
mov
jns
mov
mov
xor
hlt
movsb
addb
enter
and
or
cmc
lods
add
dec
and
fwait
pop
popa
adc
and
sar
jne
jge
adc
pop
push
mov
pop
popf
jne
or
xchg
jecxz
ret
sbb
pushf
mov
hlt
pop
addr16
mul
and
and
sbbb
nop
out
mov
jbe
pop
lods
int
fisttpl
test
push
nop
lods
test
sub
clc
mov
or
inc
ja
dec
xlat
pushf
out
scas
mov
sbb
cli
and
xchg
pop
pop
jno
mov
out
cltd
mov
lcall
les
mov
dec
xlat
inc
andps
dec
lds
in
dec
mov
in
mov
stc
fldt
push
arpl
movsb
push
pusha
hlt
ret
dec
inc
stos
dec
sbb
jnp
push
iret
scas
arpl
jle
add
cmpsl
call
xor
pushf
repz
mov
jne
rorb
stos
sub
fimuls
mov
call
mov
pop
xchg
push
jle
movsl
iret
xchg
lret
std
sub
inc
js
outsl
lods
mov
arpl
cmp
lds
insb
sbb
pop
jns
cmp
or
mov
arpl
xchg
es
cmp
shrb
mov
sbb
and
cltd
stos
mov
icebp
in
mov
add
je
dec
adc
mov
pop
pop
das
pushf
test
idiv
mov
fcompl
clc
pop
jnp
xchg
or
ret
jno
sub
into
cmc
lds
flds
pushf
xchg
xchg
cmp
cmpsl
lods
sub
jnp
test
dec
dec
shr
subw
xor
fnstcw
insl
repnz
jne
and
mov
insl
xor
and
sti
adc
call
data16
lds
xchg
ja
lock
pop
mov
jns
aaa
rcl
in
adc
ror
and
jnp
inc
das
fcoms
pop
scas
inc
sub
and
neg
fdivl
mov
lret
jg
aad
loopne
adc
lret
dec
and
pop
push
mov
pop
outsl
push
insl
daa
cmc
mov
hlt
mov
jl
call
outsl
sbb
imul
lock
mov
sbb
inc
cmp
or
and
ret
sbb
jo,pt
aas
dec
and
stos
mov
aas
dec
loope
loope
inc
inc
lret
sbb
call
mov
inc
lods
and
adc
fildll
sbb
aad
mov
cld
dec
adc
or
sbb
test
pop
push
sub
xchg
jb
xor
xchg
loop
dec
lock
stos
inc
cmp
cmp
or
sub
pop
add
xchg
push
sub
pop
jl
add
out
adc
push
sub
into
cmp
out
cmp
lock
or
cmp
xchg
cmp
enter
js
loopne
sahf
xchg
fisubl
cmp
mov
inc
xchg
test
dec
jbe
imul
decl
xchg
shl
mov
outsb
and
cmp
shr
call
push
iret
sbb
inc
mov
mov
jle
mov
je
mov
add
sbb
or
pusha
incb
push
clc
mov
rclb
sarb
jns
add
int
popa
inc
mov
daa
hlt
loopne
xor
and
call
xorb
cwtl
dec
xchg
push
sub
pop
in
pop
aaa
xchg
dec
jmp
lret
jmp
lods
xor
rep
mov
mov
adc
fs
sub
xchg
add
es
orb
das
addr16
test
addr16
mov
imul
ds
jg
mov
and
or
xor
mov
mov
stos
inc
cmpsl
cmc
push
or
jg
pop
je
inc
jg
imul
lcall
inc
push
inc
lahf
scas
jo
adc
clc
js
lahf
cld
out
movsl
repnz
dec
push
jle
loopne
pop
fadd
mov
fimull
das
outsb
xorb
jle
movsl
lods
js
cld
jo
mov
ja
dec
add
xor
xchg
aas
iret
xchg
cmp
sar
ret
js
cltd
sub
sub
out
push
inc
adc
cld
fsubl
add
out
std
cmpsl
xlat
les
ja
daa
sahf
insb
das
iret
out
cmp
push
call
xchg
fcoms
or
add
adc
add
pop
push
add
cmpsb
jb
int3
lods
and
adc
aad
ss
jge
js
push
es
mov
adcl
call
mov
pusha
mov
je
nop
cwtl
movsb
mov
mov
pop
mov
enterw
sub
or
mov
mov
lods
js
mov
inc
addb
pop
xchg
pushf
test
int3
cld
icebp
insb
insl
push
pop
scas
lahf
inc
push
jbe
and
je
hlt
add
std
dec
mov
jle
pop
ficomps
jmp
stos
adc
push
fmul
popa
pop
into
fbstp
mov
jl
stc
bnd
pop
in
push
inc
push
gs
or
sbb
icebp
mov
fsubr
cmp
mull
jno
mov
jp
imulb
movsb
arpl
rcrl
xlat
sbb
aaa
jne
imul
jae
or
lcall
movsl
pop
in
jecxz
adc
jbe,pt
mov
mov
arpl
inc
sub
and
mov
mov
dec
push
mov
xor
aam
sub
or
push
dec
sub
lods
outsb
inc
adc
lock
cli
sarb
nop
popf
fstpt
push
fidivrs
add
hlt
inc
push
inc
push
rclb
fsubrs
jecxz
push
scas
movsb
dec
in
or
sub
jns
pop
jecxz
mov
adc
stc
jmp
std
jg
push
stos
sbb
pop
sbb
jo
in
pop
add
adc
loop
mov
and
mov
sub
adc
xchg
xlat
xlat
mov
push
jmp
sbb
cmpsl
jp
inc
inc
jbe
cmpsl
inc
rorb
loope
mov
sbb
cmpsb
xchg
outsb
mulps
cmp
mov
and
leave
sahf
inc
repz
out
dec
es
or
lds
leave
ret
repz
sahf
adcb
popl
div
loopne
bound
ds
cmp
hlt
mov
in
inc
sbb
push
jmp
pop
mov
push
outsl
aaa
sub
add
mov
cwtl
add
adc
xchg
stos
movsb
lods
loope
cmp
add
scas
arpl
sub
int
jl
mov
cli
mov
sbb
arpl
cmp
stc
jg
push
stos
jb
bound
cmp
lret
js
sub
mov
add
or
hlt
ret
xchg
out
push
pop
dec
lret
out
add
mov
dec
fbld
or
xor
or
ljmp
cld
xor
jbe
and
insl
ss
dec
dec
mov
std
fiaddl
mov
and
and
lds
sti
in
dec
cmp
scas
fwait
xor
in
or
mov
lods
xor
jp
movsl
loopne
test
sub
push
sbb
insb
cld
lods
lahf
push
dec
cwtl
stos
clc
enter
or
mov
push
xlat
les
psubw
std
adc
cmc
cmp
cld
jle
adc
iret
rol
xchg
mov
mov
jns
xor
pop
inc
pop
fwait
adc
insb
sbb
popa
stos
lock
jge
fcomps
push
pop
mov
imul
ficoml
jge
daa
mov
add
mov
sub
cld
sub
sbb
and
in
test
arpl
cmp
out
or
push
pop
jae
test
mov
sub
das
insb
pop
and
jl
xchg
sub
sbb
lock
cs
jb
stos
inc
dec
jno
cmpsb
imul
dec
mov
jnp
insb
fldt
test
scas
popf
push
into
aad
jmp
popa
sbb
mov
insl
sbb
lds
cmp
push
push
fidivrs
jle
mov
lods
and
mov
imul
arpl
add
jg
and
pop
enter
daa
cmpsl
imul
adc
in
xor
lock
cmp
inc
mov
xor
nop
inc
daa
or
out
js
mov
aam
lahf
push
add
xchg
out
or
int
mov
xchg
out
negb
lods
bound
js
cmpsb
dec
pop
popa
cmp
test
jmp
dec
es
xor
cs
push
clc
sub
cmp
out
or
mov
mov
adc
sub
mov
or
jb
mov
xchg
pop
orl
outsb
jno
mov
and
or
inc
fwait
xor
push
pusha
add
adc
es
scas
or
xlat
sub
sbb
lods
mov
jae
xchg
adc
fwait
out
call
adc
sbb
xorl
lcall
inc
dec
and
and
in
mov
sarl
gs
inc
cmpsb
in
push
cmp
dec
dec
push
inc
sub
sbb
jle
movsb
pop
mov
mov
cltd
sbb
cmp
push
xchg
out
daa
cmp
dec
incl
ficomps
pushf
jne
adc
or
adc
hlt
enter
xchg
movsb
adc
dec
test
xorl
xor
outsb
scas
or
fwait
mov
incl
cli
push
push
inc
loop
scas
and
dec
cmc
pop
dec
or
mov
scas
push
push
jb
or
push
adc
aad
push
out
inc
dec
xchg
xchg
jmp
adc
fptan
or
and
mov
xlat
add
test
jno
inc
aad
fadd
xor
fnstsw
pushf
fidivl
dec
data16
repnz
fdivl
inc
ret
cmp
lahf
fidivrs
in
and
push
dec
test
inc
repz
in
pushf
loope
fmuls
popf
jecxz
xor
mov
imul
mov
icebp
or
aas
ja
and
sbb
xor
loop
shlb
cmp
or
sahf
mov
popa
jns
xchg
stos
in
mov
leave
or
lahf
loop
sub
push
and
add
insb
and
aaa
loop
inc
cmp
loopne
mov
shl
lcall
lods
push
ret
loope
push
xchg
decb
and
adc
cmp
mov
insb
outsb
insb
dec
mov
push
fs
adc
cmp
adc
imul
mov
add
pusha
lods
dec
fwait
pop
loop
stc
adc
int
movsb
rcll
jg
mov
inc
dec
mov
fwait
xchg
ljmp
sbb
mov
adc
push
pop
xlat
jns
inc
push
fnstsw
loope
mov
add
arpl
push
sub
xchg
les
and
leave
cs
repz
sub
cs
iret
hlt
mov
xor
out
add
cld
cmp
and
jp
push
out
pop
imul
leave
mov
fwait
xor
pop
jle
jg
imull
dec
jbe
lods
cmp
ss
fistps
loopne
out
inc
or
scas
and
fldenv
sub
scas
in
add
sub
pop
sbb
sarl
inc
stos
xlat
push
add
rcl
xchg
xchg
shll
and
pop
and
sahf
es
mov
aam
fistl
pushf
cwtl
aaa
adc
lret
or
push
jecxz
xor
cmpsb
or
in
addr16
cmpsb
cli
xchg
cld
cltd
sub
iret
in
add
cmp
dec
loope
sub
cmp
pop
cmc
ret
ljmp
inc
sub
das
es
loopne
add
in
mov
adc
shll
cmp
mov
ljmp
out
mov
dec
test
add
mov
sbb
jle
rep
mov
clc
mov
out
xchg
fcoms
jmp
push
ret
or
mov
jne
cs
mov
push
test
stc
fiaddl
adc
shll
fst
fisubs
add
pop
shr
adc
push
mov
and
jne
xor
aam
insl
fisttpl
ja
lret
sbb
mov
pop
cli
sub
orb
cmp
and
cmp
ljmp
cmp
inc
scas
xor
mov
clc
pop
das
idivl
loope
xlat
cmp
xor
loop
leave
lcall
xchg
inc
out
aas
mov
push
repz
pop
out
ret
push
pop
add
mov
out
fbstp
fdivs
lea
xchg
fstp
xor
fwait
cmp
mov
fs
addl
int
add
or
imul
aas
adc
pop
nop
xor
inc
aam
cmpsb
mov
pop
push
ss
mov
jno
repz
stos
std
jb
mov
pop
outsb
mov
mov
or
adc
inc
jmp
jg
lahf
cmp
ror
xor
fs
xlat
or
push
andb
inc
push
out
int
and
stos
loopne
cmp
and
inc
repz
jae
sub
pop
js
test
pop
dec
and
dec
xchg
mov
shrl
sbb
in
mov
loop
ja
lock
dec
out
or
sahf
sub
test
subb
jecxz
and
cmp
cmp
test
ds
pop
dec
js
add
out
stos
lret
scas
mov
cmp
jmp
int3
or
xchg
aas
pushf
mov
push
mov
cwtl
sub
lods
fdivrl
xorb
rorb
add
ljmp
cmc
cmpsl
pop
pushf
dec
test
inc
adc
sbb
rcrb
lock
or
dec
fdivl
jg
adc
inc
pop
push
loope
cmpsl
xor
lgs
inc
pop
cmp
and
aaa
adc
jns
daa
adc
xchg
and
pop
daa
inc
xor
lcall
mov
popf
rol
lock
cmc
push
ljmp
in
out
cmc
es
cmp
mov
sub
xchg
fwait
cmp
pushf
push
inc
mul
mov
aaa
jl
aas
sti
jo
mov
mov
test
sub
aas
ret
adc
jne
adc
push
in
dec
lods
push
sbb
aas
test
dec
or
mov
push
or
xor
xor
aam
mov
adc
lock
mov
pop
adcl
and
out
imulb
outsb
push
add
mov
add
mov
decb
les
dec
sarl
sub
jno
mov
mov
xchg
pop
mov
mov
test
add
inc
lea
les
add
shr
or
mov
cmpsl
pop
jl
xchg
iret
mov
xchg
sbb
aas
out
sbb
push
adc
adc
mov
scas
out
or
mov
mov
adc
fisubrs
sub
mov
mov
mov
jo
fldcw
enter
push
out
and
xor
or
out
pop
add
outsl
cmp
add
push
mov
fisubl
pop
fimuls
cmpsw
mov
sub
repnz
lds
pop
and
rcll
xor
pop
daa
out
push
mov
jne
insb
xor
xchg
orl
jbe
mov
xchg
mov
ds
rcl
pop
mov
cmpsl
aad
pop
out
es
rolb
les
loop
inc
jp
or
mov
lds
add
sbb
fnstenv
cs
pushf
aad
pop
scas
scas
dec
cmp
lock
ss
xor
mov
sarl
into
popf
lock
jmp
xchg
pushf
dec
cmp
pop
andnps
adc
xchg
xchg
xchg
fildll
xchg
cmpsb
sbb
inc
out
sub
scas
pop
push
lret
ror
or
or
ficomps
cmp
add
es
push
adc
stos
sarb
cmp
push
adc
out
add
xchg
fwait
movsl
mov
push
fldt
push
jno
push
call
push
scas
push
data16
lock
inc
mov
insb
and
pop
fildl
push
popf
aam
nop
or
movsl
jp
dec
mov
ss
cmp
sbb
ja
stc
rorl
pop
xor
mov
jl
roll
push
inc
loopne
sbb
lods
js
movb
adc
push
cmpsl
cmp
out
lcall
and
test
cmpsb
int3
cmpsl
mov
sub
mov
push
pushf
mov
lahf
shrb
adc
pushf
and
hlt
insb
cmp
mov
push
push
mov
sarl
js
sahf
xor
test
or
cmp
jo
jp
mov
outsl
cmp
jmp
push
loop
cmp
insl
xchg
adc
imul
push
sbb
pop
inc
jg
lret
xchg
sbb
xor
lods
mov
fildll
stos
or
jge
dec
xchg
imul
daa
push
fldenv
push
sqrtps
jg
lret
imul
repnz
xchg
fnsave
jge
dec
loope
mov
mov
push
xlat
in
sub
pusha
or
clc
xchg
sbb
scas
dec
stos
nop
cmc
cmpsl
rcrl
fwait
pop
pop
jecxz
dec
mov
adc
aad
xor
rclb
test
arpl
push
xlat
sbb
xor
and
lods
push
mov
lcall
push
lcall
mov
mov
jmp
pop
jle
test
sti
and
ret
mov
pop
mov
nop
ficompl
push
inc
inc
std
push
dec
loopne
sbb
inc
dec
lret
or
xchg
jl
cmp
cs
jno
xchg
inc
add
rclb
add
xchg
les
push
dec
cld
mov
sub
mov
vpaddw
jno
adc
cmpsb
jmp
pop
or
xorl
sbb
push
mov
xchg
jae
or
push
jns
out
push
and
shrb
data16
imull
popf
jno
aas
cs
xchg
sub
push
leave
pop
mov
pop
jmp
lods
out
std
lret
xchg
sbb
mov
sub
dec
add
pop
adcb
pop
xchg
fmuls
stos
jbe
pop
pop
adc
xor
push
int3
mov
push
mov
or
xchg
or
dec
sbb
push
mov
sbb
sub
es
jle
sub
hlt
in
fcoml
inc
and
fldt
outsl
sbbl
jmp
in
cld
push
pop
sub
dec
addr16
mov
test
aad
xchg
cli
sti
sub
pop
xchg
rcrl
imull
jnp
cmpsb
cs
movsb
pop
adc
je
stc
jne
xchg
roll
fmuls
lret
sti
sti
mov
movsb
push
pop
clc
cld
push
or
push
cmpsl
les
xor
adc
cmc
cwtl
lods
hlt
aas
jns
cmp
ss
rol
xchg
adc
in
loope
pop
outsb
and
sub
fadds
in
enter
jp
insl
js
fiaddl
adc
clc
mov
test
and
sbb
mov
jle
pop
jo
aaa
push
dec
test
jge
jnp
dec
mov
push
ret
pushf
pop
lret
stos
push
jg
emms
dec
add
out
or
sahf
and
cmpsb
xchg
fwait
sub
fldlg2
insl
sahf
add
lahf
xchg
sub
adc
push
arpl
dec
mov
pop
and
sbb
inc
mov
dec
lcall
lea
jns
popa
sub
push
bound
loop
pop
mov
push
and
jg
loope
aas
inc
mov
push
das
dec
jecxz
push
mov
inc
in
data16
idiv
mov
add
popf
cs
jno
cltd
xchg
jb
jge
lds
push
or
dec
jno
enter
sbb
sbb
sbb
add
xchg
sbb
xchg
int3
cmp
lret
sub
xchg
mov
in
xchg
int
daa
xlat
lret
gs
rcrl
jmp
cmp
sbb
das
iret
jmp
ror
fisttpll
mov
ljmp
xor
sbb
inc
push
push
icebp
aad
xor
pop
mov
cmp
popl
cli
shll
and
fabs
ja
in
cmp
mov
insb
mov
incl
imul
jmp
jo
sbb
push
and
sahf
daa
cwtl
aas
push
jl
cmp
daa
repz
outsl
or
rcrl
fistps
aad
fwait
mov
pusha
cmp
incl
repz
ds
sbbb
stos
mov
bound
rorb
inc
sbb
lock
mov
lods
xchg
lcall
bound
pop
and
pop
jo
inc
jns
mov
fs
sahf
lahf
adc
clc
in
into
mov
mov
pop
lea
movsb
loope
in
dec
movsb
out
pop
cmpsb
cld
sub
cwtl
outsl
insb
shl
je
arpl
lds
cli
dec
and
push
and
mov
adc
andl
xchg
aad
xor
ret
push
xchg
cmc
js
cld
mov
ja
out
pmulhuw
add
cmp
addr16
dec
shrb
sbb
cmp
add
push
dec
scas
jecxz
mov
aas
jno
xor
push
push
add
scas
jne
movsl
aas
and
fcoms
dec
mov
scas
sub
aas
pop
int3
js
loopne
popf
fldl
jae
mov
insb
sub
sbb
push
dec
in
pop
scas
arpl
sbb
pop
add
mov
mov
dec
mov
mov
push
lcall
or
into
xor
and
loopne
push
mov
add
push
add
mov
xchg
scas
push
xchg
bound
jge
push
sarb
es
enter
dec
sub
js
out
jmp
dec
sub
jl
mov
pop
dec
jno
sub
mov
mov
fld
loope
in
out
aaa
xchg
aad
push
cli
add
aaa
or
insb
push
dec
aas
or
aas
enter
adc
insb
fidivrs
push
xlat
add
cs
lods
cmp
inc
popa
xchg
test
data16
loopne
cs
gs
jae
shrl
aas
and
xchg
or
push
push
dec
int
push
pop
sbb
out
or
sbb
aaa
and
inc
clc
pop
and
insl
int3
pop
pop
jecxz
in
mov
test
cld
cwtl
cmp
repz
orl
or
sub
jbe
xor
rorb
or
fwait
jmp
sti
test
jbe
sub
push
ret
cmp
xor
lock
push
mov
mov
lcall
movsl
xor
mov
shlb
mov
mov
imul
cmp
cli
out
sbb
push
inc
push
pop
lcall
dec
xchg
lahf
insb
jg
out
xor
cmc
adc
sbb
scas
imul
shll
sub
and
xlat
mov
adc
cld
jns
add
into
imul
cmc
incl
cmp
jbe,pt
dec
lods
test
rcll
mov
xor
mov
scas
or
repnz
push
out
jnp
es
sub
andl
xorl
sub
nop
jns
inc
inc
arpl
mov
ficomps
les
repz
cmp
or
iret
inc
popf
xchg
fs
out
mov
jo
rorb
ja
movsl
ret
add
aad
push
or
loopne
pusha
in
push
shll
popa
push
mov
setg
inc
pop
and
mov
leave
xchg
frstor
sub
into
dec
and
xor
xor
cmp
xchg
test
test
sub
cwtl
icebp
jae
cli
or
pop
rcrl
gs
sbb
addb
ja
push
ret
push
xor
icebp
pop
imul
lds
aad
inc
and
dec
and
inc
inc
xor
mov
aaa
ret
incl
adc
mov
mov
clc
das
sub
lock
pop
dec
mov
dec
out
iret
ficomps
mov
lea
sbb
repz
sbb
cld
cwtl
push
or
std
movsl
mov
cmp
aaa
ja
pop
inc
scas
dec
int3
xlat
in
dec
test
lcall
dec
sarl
adc
lcall
lahf
xor
push
jp
lahf
or
cmp
inc
dec
lock
cwtl
xchg
inc
xor
xchg
add
outsb
pop
hlt
jbe
mov
mov
inc
stc
test
and
xchg
orb
shlb
pop
xchg
and
xor
mov
add
add
xchg
xchg
cmp
mov
pushf
sub
stos
dec
fwait
lret
jp
cmp
nop
outsl
mov
out
sub
xchg
aaa
jmp
pusha
push
mov
movsl
xor
adc
inc
add
inc
push
sbb
lret
into
add
int3
jae
in
stos
push
test
lahf
adc
je
sbb
xor
loop
inc
stos
mov
mov
mov
das
and
andl
enter
push
mov
mov
push
push
sbb
hlt
js
aas
jbe
mov
cmp
push
dec
arpl
popf
subb
cmp
xchg
xchg
mov
into
jo
pop
and
imul
addr16
out
stos
arpl
jle
stos
cmpl
xor
icebp
sahf
jo
rcll
cwtl
xchg
fcompl
add
xor
addr16
and
add
inc
ss
fdiv
lock
ret
sbb
xchg
into
call
loopew
sub
daa
pop
mov
xchg
push
leave
mov
or
pop
test
outsb
dec
push
jns
add
repnz
cli
cmp
or
outsb
mov
push
mov
add
fisubs
xor
ret
mov
mov
push
jae
div
mov
and
cmp
setne
daa
and
push
mov
sbb
lea
pop
scas
jl
popa
push
in
js
jg
fnstenv
and
push
dec
lret
cs
js
inc
mulb
lds
hlt
mov
repnz
or
sbb
divb
inc
test
iret
mov
call
xor
or
out
mov
jmp
xchg
mov
lods
mov
adc
cld
popf
loop
mov
xchg
lret
out
subl
mov
dec
fwait
not
in
push
xor
test
cmc
enter
cli
shrl
repnz
out
sbb
icebp
sub
insb
lcall
cmp
std
push
adc
jge
mov
xchg
lods
jp
push
fistpl
rcrb
mov
xchg
adc
xorb
pop
xor
jne
shr
jecxz
imul
and
sub
out
in
sti
das
or
sbb
mov
xor
adc
dec
ss
or
out
add
and
inc
cmp
rcrb
push
js
loopne
popf
cmp
and
out
add
sarl
out
in
outsb
ja
shlb
in
jl
rcrb
cmp
nop
fs
dec
popf
loop
jecxz
xor
in
in
jno
pop
sub
fistpll
sub
lds
push
push
test
sub
lret
ficomps
and
pop
scas
sub
data16
cmp
push
lahf
cs
pop
xchg
sub
xchg
and
mov
inc
pop
insb
mov
fstl
gs
lret
iret
loop
xchg
and
adc
jbe
pop
into
dec
dec
arpl
pop
lods
mov
sub
std
xchg
out
hlt
iret
xor
mov
jecxz
mov
fdivrl
xor
loop,pt
inc
pop
or
jp
stos
cmp
inc
mov
lea
sbbb
js
xor
dec
iret
outsb
dec
or
jo
cmp
xor
xchg
xorb
in
insl
ret
ficomps
out
sbbb
mov
jl
mov
inc
lret
pop
ret
push
repz
mov
out
js
testb
fs
int3
pop
test
loopne
adcb
or
inc
mov
sub
sbb
rcl
lods
mov
jb
aas
popf
and
cmc
cmp
sbb
aas
ljmp
enter
xchg
ljmp
mov
jbe
sbb
cld
in
push
or
hlt
xchg
jb
hlt
sti
out
aad
aaa
shrl
gs
mov
stos
cmp
mov
sub
add
shl
sbb
adc
and
sbb
adc
xor
out
in
mov
rorb
and
sbb
ja
rcll
cltd
sbb
das
sub
dec
xchg
push
cmp
lods
cmpsl
out
popf
into
inc
pop
mov
out
sbb
inc
inc
inc
movsb
mov
add
mov
push
or
aam
jbe
cwtl
or
mov
mov
nop
enter
cmp
hlt
mov
mov
cmp
lods
mov
aas
jle
aaa
jae
bnd
mov
and
lock
test
mov
stos
xor
pop
or
mov
mov
data16
mov
push
mov
mov
inc
divb
scas
xchg
je
xchg
inc
inc
or
fs
mov
xchg
sbb
and
and
cmp
shlb
and
jo
mov
outsl
test
mov
add
outsb
inc
shll
sub
imul
add
mov
sti
stos
pop
imul
data16
sbb
test
nop
and
adc
xchg
sub
mov
sbb
pushf
subps
adc
sub
jo
gs
mov
push
in
xchg
dec
adc
nop
lods
mov
aad
std
bound
xor
sbb
jmp
jnp
test
sarl
sbb
mov
loopne
push
mov
jae
and
out
push
or
xchg
inc
xlat
adc
sahf
insb
sti
cmpsl
cmp
js
lret
divb
sar
scas
or
dec
out
pop
or
pop
lods
and
sti
pusha
je
mov
lds
loope
rclb
outsb
mov
dec
scas
adc
sti
or
ds
in
dec
fsubrl
pop
rol
leave
xchg
shl
cltd
ret
add
int
mov
sub
cmp
stos
jb
insb
jl
sbb
inc
insl
ja
mov
mov
jb
pop
loopne
in
loop
in
or
int3
inc
sbb
xchg
xchg
mov
loope
mov
mov
xor
add
xlat
cmp
mov
std
mov
int
mov
mov
in
pop
or
sub
push
aam
mov
sub
fwait
adc
xchg
dec
push
loopne
xchg
daa
pop
jno
rcrb
xor
xchg
into
lods
pop
imul
jmp
lret
xchg
test
jo
pop
dec
icebp
adc
imul
push
push
dec
jne
or
sbb
jae
clc
stc
lret
sarl
push
sub
addl
mov
xchg
mov
mov
lahf
fldl
mov
mov
daa
fldl
and
jb
dec
aaa
and
dec
jo
mov
jp
movsb
push
xchg
sbb
sbb
add
mov
cltd
xchg
jnp
icebp
cmp
jmp
or
repz
js
jb
mov
mov
adc
xchg
insl
rclb
xchg
sub
stos
dec
mov
push
pop
jl
sbbl
push
add
or
dec
or
incl
movsb
cmp
dec
xchg
mov
pushf
lods
push
leave
push
and
pushf
xchg
adc
stos
cmc
mov
inc
mov
adc
inc
dec
adc
mov
pop
pop
test
fwait
adc
xor
enter
es
cltd
push
and
jne
mov
or
out
test
xor
xchg
xor
sti
fbstp
mov
mov
mov
loopne
add
shll
bound
mov
inc
mov
jbe
mov
scas
movsl
les
ss
mov
ret
ja
sub
inc
loop
dec
sub
in
cmp
lds
xchg
jp
adc
add
mov
repnz
mov
idivb
push
les
pop
and
repnz
movsb
add
lods
mov
add
xchg
xor
xor
int
sbb
push
loop
pop
sub
push
leave
movsl
daa
mov
sti
pop
scas
and
shlb
cmp
and
cmpb
fcmovnbe
outsl
outsb
push
xchg
xchg
add
or
xor
fisttpl
push
pop
cltd
push
cli
pushf
fstpt
inc
mov
addr16
rorb
adc
dec
lods
mov
aad
sbb
dec
addr16
jae
xor
jg
xchg
sbb
sbb
mov
cmp
mov
xchg
loop
ss
idivl
xchg
xor
dec
mov
sbb
or
mov
xchg
cli
jmp
mov
cmpsb
mov
cs
mov
cmpsb
es
jne
add
adc
jnp
je
js
jl
mov
jae
mov
movhlps
dec
sbb
mov
or
push
push
repz
fwait
test
loop
fdivrs
sbb
mov
out
xor
in
shll
pop
cs
pop
xchg
xchg
mov
movsb
sub
hlt
mov
hlt
mov
repnz
xchg
push
daa
inc
xor
outsl
jns
clc
fs
test
movsb
loopne
push
daa
hlt
sub
sub
dec
push
sbb
aam
inc
inc
jns
and
sub
repnz
je
aas
sub
mov
or
lods
mov
xlat
mov
mov
sub
in
stos
stos
inc
push
out
or
mov
mov
jae
testl
jns
adc
mov
xor
subb
jmp
insl
adcl
test
jl
mul
sbb
sub
stos
dec
inc
adc
repnz
lods
pop
adc
test
nop
push
sbb
mov
mov
fldcw
scas
fcomip
mov
push
sbb
mov
pop
daa
mov
insl
mov
xor
cli
insl
decb
fildl
inc
test
or
pop
ret
pusha
movsl
clc
push
arpl
mov
mov
int3
mov
jnp
loopne
lock
push
call
sub
in
subb
outsb
lock
xor
push
adc
xchg
sarl
xchg
dec
mov
shr
ljmp
nop
loopne
leave
sti
dec
cmp
imul
pop
push
cmp
xor
mov
cld
mov
stos
rol
mov
rol
xchg
mov
sbbb
int3
inc
hlt
jmp
out
mov
pop
xor
fisubrs
mov
cmp
xor
mov
outsb
psrlw
push
pushf
cmp
and
and
jl
inc
cmpsb
mulb
es
dec
and
sub
stos
push
fcomi
in
fucomi
and
mov
mov
mov
push
mov
rcrb
pusha
dec
ss
push
push
push
push
xor
mov
inc
es
dec
dec
call
cmp
cmpsl
ficoml
pop
or
mov
notl
cld
negl
lods
push
addr16
cmp
push
mov
push
clc
cmp
cmpsb
and
xchg
xor
lock
sbb
fsubs
sbb
pop
imul
push
cld
dec
push
xlat
sbb
rcr
lods
stc
icebp
push
or
inc
mov
pop
push
and
in
jmp
and
dec
jmp
push
and
xor
xchg
lret
es
push
fadds
stos
xorl
movsl
push
shl
stos
push
dec
pop
icebp
aam
popa
jbe
sub
lret
xor
fdiv
push
pop
dec
dec
and
add
jmp
stos
in
inc
adc
fldcw
pop
pop
xchg
loop
jecxz
mov
and
inc
pop
ss
pmaddwd
pop
mov
xchg
push
mov
dec
sbb
jl
jno
sarb
je
out
incb
fmuls
fsubrs
icebp
mov
test
nop
jne
in
lahf
add
rcrb
push
cwtl
int
cli
movsl
enter
push
es
push
js
push
dec
jbe
xchg
imul
fidivrl
jbe
mov
js
mov
lods
out
loope
jg
adc
aaa
cmpsl
dec
andl
xchg
mov
decb
push
idivl
pop
scas
cmp
dec
cmp
out
shl
fisttpll
and
lahf
jno
sub
xchg
imul
push
aam
int
subb
sbb
jge
or
and
xchg
and
movsl
mov
xchg
loopne
inc
int
or
hlt
dec
cmpsb
inc
aaa
cmp
mov
pop
push
xchg
call
push
mov
jcxz
mov
jmp
popa
test
cmc
sub
pop
push
mov
ss
and
jge
insb
xor
sub
ret
push
mov
cmpsl
movsb
fxam
loope
and
cld
into
rorl
inc
je
xor
push
xor
insl
xor
fidivs
or
sbbl
insl
or
aad
inc
repnz
fidivs
xor
add
lcall
dec
mov
fisubs
stos
and
mov
sub
pop
dec
add
hlt
xchg
shll
sarb
and
add
call
icebp
dec
flds
ljmp
sbb
pop
shlb
cmp
cmc
jo
push
xor
ds
jge
inc
data16
js
pcmpeqb
loopne
imul
dec
pop
shlb
jmp
out
mov
jp
std
cld
pop
jae
mov
out
es
xor
inc
adc
lods
es
shrl
aad
xor
fdivl
pop
ja
cmp
and
mov
stc
jmp
cmp
xchg
movsb
pop
test
xchg
mov
mov
cmp
mov
cmc
lret
es
adc
pop
pop
ror
and
push
mov
clc
mov
sbb
mov
fildll
push
out
mov
lahf
dec
push
gs
jno
xor
inc
iret
pop
or
adcl
das
sti
lock
in
dec
and
sub
pop
mov
scas
dec
fdivl
addl
fwait
push
in
xor
push
push
adc
fwait
out
lds
mov
std
outsb
add
inc
pop
add
je
lds
lods
push
and
pop
sbb
daa
jecxz
dec
xor
cmp
inc
inc
std
in
mov
jns
imul
mov
iret
inc
je
je
sbb
clc
pop
stc
cs
jecxz
nop
and
mov
fcompl
cwtl
jnp
out
gs
orl
and
and
lret
es
push
mov
add
push
lds
icebp
push
cmc
into
pop
jp
jo
cmpsl
cmpb
sub
js
mov
push
jge
rcrb
and
pop
in
xor
cmpsl
jbe
mov
in
mov
ljmp
js
les
repnz
add
jo
inc
int3
push
pop
leave
dec
mov
push
or
nop
xchg
popa
out
test
scas
push
dec
inc
popa
jp
push
repz
aad
mov
push
les
xchg
fs
lods
in
loope
popa
mov
int3
xchg
xorps
pop
repz
jbe
call
xchg
jnp
adc
gs
mov
pop
sub
lock
sbb
dec
mov
scas
bound
mov
and
cmp
xor
ss
es
movsl
cmpsb
scas
popa
sub
testb
les
not
mov
jp
lea
sti
divl
aas
push
loop
jmp
fidivs
mov
outsb
and
cmp
cmpsl
mov
stos
ja
fucomp
add
mov
push
mov
mov
jns
xor
pop
std
pop
mov
mov
fwait
mov
je
in
jb
adc
stos
nop
movsb
ret
mov
pop
cmpsb
lea
push
fimull
mov
sub
ret
mov
dec
cltd
adc
aad
mov
xchg
mov
cmp
testl
mov
stc
xchg
hlt
lret
push
jecxz
loope
test
fcmove
ss
icebp
aam
popf
mov
xor
cmp
sub
ljmp
xor
outsl
sbb
mov
push
push
jns
popf
jb,pn
inc
push
or
xchg
sahf
adc
test
repnz
and
cmp
lock
cmp
fs
jmp
xchg
addr16
fnsave
xchg
push
shll
mov
inc
mov
cwtl
xlat
sbb
pusha
or
movsb
mov
or
test
lods
idivb
cmpl
mov
rcll
add
mov
movsl
int3
hlt
mov
iret
mov
mov
lcall
mov
or
arpl
cs
test
mov
or
rcl
jge
xor
push
int3
push
mov
test
nop
cmp
loop
js
sbb
mov
mov
movsb
lds
test
jnp
test
push
mov
pop
outsl
sub
xchg
jmp
and
orl
popf
push
mov
in
in
push
mov
lret
aas
movsl
les
xlat
cmpsb
dec
int
out
fs
mov
out
or
dec
jmp
inc
cmpb
adcb
mov
mov
add
paddusb
push
subb
cld
jae
jle
lahf
sub
iret
loope
enter
sbb
add
xor
fdivrl
mov
sbb
cmp
mov
int
ljmp
add
daa
xchg
insl
decl
cld
ja
cmp
dec
jle
xlat
jne
mov
out
mov
xor
ljmp
mov
ret
ljmp
mov
mov
out
ja
ja
movsl
sub
mov
xor
xlat
cmpsl
push
loope
fidivrs
cld
pop
jecxz
inc
out
jo
xor
fdivs
cmp
in
mov
out
or
filds
ret
int3
in
cmp
scas
mov
popa
and
inc
mov
dec
xor
jo
cs
test
mov
push
jb
stos
sbb
pop
push
inc
insb
std
fistps
mov
mov
mov
sbb
arpl
das
and
stos
mov
mov
lea
movb
or
add
cwtl
lahf
dec
mov
push
xor
pop
shl
jne
push
push
call
outsb
mov
pop
xor
mov
insb
dec
mov
es
scas
mov
jmp
lock
dec
adcb
pop
adc
cmp
fcmovnb
jp
std
mov
fsubrs
push
pop
adc
lret
repz
lret
imul
xchg
sbb
in
es
jle
loope
rol
movsb
push
sub
loope
pop
insb
mov
pop
adc
pop
fildll
mov
jno
ss
loop
or
repz
bound
and
cmp
sub
cli
inc
es
sub
dec
mov
add
push
push
adc
sub
bound
mov
pop
aas
mov
pushl
mov
adc
pop
jno
adc
test
pop
mov
xor
imul
test
andb
or
jp
xchg
in
xchg
jg
sbb
insb
in
pushf
fs
in
xor
stos
xor
push
ja
pop
hlt
pop
or
clc
sarb
loope
repz
pop
inc
cmp
imul
mov
outsb
dec
cmc
test
sub
xor
mov
inc
loopne
pop
mov
mov
pop
pushf
sbb
xor
push
outsb
jge
add
jb
or
out
pop
movsb
mov
mov
pop
sub
jae
dec
and
inc
notl
adc
in
int
jo
sub
int
dec
pop
lock
dec
xchg
cmp
cmpsl
cmp
fdivrs
and
popf
jae
and
jns
imul
std
mov
xchg
or
jg
cmp
out
mov
out
mov
fld
mov
add
mov
xor
push
jae
faddl
and
jne
movsb
out
loop
int3
xchg
push
sbb
adc
add
mov
pop
test
mov
adc
cltd
out
in
je
fisubrl
sbb
jns
dec
movsl
xchg
mov
hlt
mov
sarl
cs
rcr
jo
call
push
mov
jmp
add
sahf
inc
xchg
push
pop
das
mov
sbb
and
loopne
push
adc
lret
leave
xchg
adc
sarb
and
aaa
mov
add
xlat
mulb
fcmovu
add
xchg
cmc
push
mov
jno
clc
hlt
rorl
stc
inc
cmp
lds
add
pop
stos
ret
or
jp
push
add
fcoml
fcomi
mov
in
dec
loopne
mov
cmp
sahf
jbe
imul
int
mov
xor
test
aad
inc
cmpsl
mov
mov
stos
mov
pop
push
dec
shrl
mov
aam
push
nop
mov
hlt
int3
popf
loopne
adc
mov
cmp
xchg
xor
sub
sbb
loope
cld
inc
pushf
fcompl
outsl
sub
sub
loope
mov
mov
inc
sti
dec
dec
cwtl
mov
into
lret
sbb
pop
in
xchg
nop
notb
sub
in
inc
mov
aam
je
mov
adc
fcompl
test
movsb
sti
adc
sbb
bound
mov
imul
adc
bound
cltd
pushf
inc
out
push
decb
inc
xor
xchg
mov
bound
sbb
popa
jmp
cmp
push
ljmp
cmp
mov
arpl
or
aam
xchg
rcll
xor
mov
and
dec
push
sbb
mov
aaa
adc
mov
int3
cmpsb
lods
mov
insl
mov
xor
push
test
test
adc
mov
or
fisttpl
insb
call
push
push
xchg
sub
adc
and
js
mov
inc
dec
out
jbe
lods
lods
dec
ljmp
imul
push
lea
lock
adc
fs
or
bnd
or
inc
cmp
mov
insb
cltd
repnz
and
xor
xor
dec
lods
push
jl
or
push
xor
decb
pop
or
or
les
nop
push
subb
xor
ss
push
inc
js
sbb
out
lea
and
out
cmovbe
or
imul
mov
or
push
xor
xchg
mov
mulb
lods
or
or
mov
cmp
cld
dec
in
push
loope
test
daa
ret
xor
in
jecxz
sub
andb
add
mov
mov
outsb
pcmpeqw
dec
movsl
and
mov
fimull
in
mov
xchg
dec
dec
cmp
popa
or
and
cmpsb
sub
fwait
inc
outsl
mov
lahf
pop
xlat
sbb
dec
decl
gs
in
xor
push
bound
mov
imul
jae
sarb
add
cltd
xorl
aaa
push
loop
pop
or
push
shll
add
and
sbb
mov
test
dec
ss
loop
imul
mov
mov
pop
hlt
sti
xchg
fsubr
push
aad
mov
idivl
std
or
mov
addl
pop
inc
adc
mull
lock
out
aas
aas
pop
es
test
pop
mov
repnz
xchg
or
jno
add
cmp
mov
mov
jbe
adc
mov
int3
xchg
or
mov
test
leave
shrl
and
mov
pop
lret
loope
fadds
sbb
cli
push
mov
pop
sti
xor
cmp
les
imul
test
add
mov
les
mov
xlat
icebp
scas
push
xchg
ss
std
pushf
daa
loopne
cmc
xor
ljmp
dec
arpl
js
jae
push
sbb
je
or
push
incb
out
adc
mov
aam
push
sbb
std
test
popl
rcrb
inc
pop
inc
imul
ret
iret
adc
dec
cmp
mov
rol
push
popf
sti
add
scas
loop
cld
and
fisubrl
loope
sub
push
cld
jo
xchg
adc
popf
fadds
or
cmp
mov
inc
daa
fists
and
xchg
clc
xchg
js
mov
rcrl
xlat
daa
sbb
in
cs
lcall
ds
lock
sbb
fwait
pop
xchg
sub
icebp
inc
out
movsl
cmpsl
in
lock
cmpsl
push
sbbl
aaa
xchg
adc
imul
sub
in
inc
xchg
jmp
roll
adc
cmc
in
jmp
dec
dec
mov
test
es
sub
push
xchg
fdivs
mov
icebp
int
jno
out
add
pop
popa
ss
sbb
or
movsb
les
test
cmp
push
xor
pushf
js
xchg
lcall
dec
lods
xchg
mov
fsts
inc
xchg
in
nop
fldenv
jmp
mov
push
lret
fcomps
jle
repz
or
add
hlt
lret
dec
fnsave
lock
fbstp
int3
aaa
es
aam
pop
inc
dec
xlat
xorl
xchg
addr16
mov
inc
adc
orb
inc
dec
loope,pn
xchg
pop
or
js
inc
not
rclb
xchg
inc
xchg
cmpsb
movsl
scas
ret
lret
push
leave
xchg
add
xchg
mov
mov
mov
data16
mov
dec
test
imul
add
loopne
out
gs
mov
lcall
out
clc
cwtl
rcll
pop
adcl
out
and
fmuls
adc
lret
jbe
je
ss
jo
cmp
mov
or
mov
mov
dec
add
pop
testb
or
inc
add
jb
cmpsb
ja
pop
cmp
addb
repz
mov
out
scas
ja
pop
push
js
sti
jbe
cltd
jno
stos
inc
aas
sbb
cmp
inc
inc
and
lret
xchg
cmp
rclb
jg
cmpl
mov
pop
push
xchg
jmp
mov
inc
xchg
jno
jecxz
inc
stos
divb
ficomps
add
inc
cmp
daa
xlat
push
std
iret
or
ret
pop
addr16
daa
adcl
add
pop
push
cmpsb
jo
das
or
xor
scas
mov
dec
jmp
jno
clc
xchg
lea
jl
dec
int
jnp
add
jge
cmp
mov
mov
and
cmp
out
mov
enter
mov
cmp
dec
lds
cmc
or
fsts
clc
jge
mov
xchg
bound
das
rol
jmp
scas
insb
jbe
scas
mov
sbb
fchs
xchg
pusha
mov
daa
jb
ret
es
push
sub
icebp
or
add
and
xchg
jnp
lret
and
mov
push
mov
xchg
xor
addr16
pushf
hlt
mov
jg
push
mov
push
sbb
inc
outsb
mov
clc
or
adcl
in
bound
js
loope
sbb
test
pushf
jl
cmp
dec
test
repz
in
cmp
addr16
fcoms
sub
dec
in
dec
inc
orb
xrelease
xchg
inc
and
imul
rcrb
push
lods
cmp
add
lahf
out
testb
inc
jle
je
flds
xor
push
mov
add
push
jmp
or
into
sbb
and
cwtl
or
jmp
lea
imul
scas
dec
ja
pop
xor
pop
mov
mov
gs
push
or
int
lods
hlt
decb
xor
fldl2t
pop
into
lahf
sub
fsubr
push
repnz
mov
lods
inc
scas
je
sarb
and
scas
es
gs
pop
ljmp
frstor
adc
lret
outsl
jecxz
and
loopw
push
negl
inc
or
adc
fisubrl
clc
shr
call
jbe
imul
xchg
faddl
mov
jb
mul
or
adc
dec
mov
jns
push
sbb
rcl
in
sub
sub
mov
ds
adc
mov
xor
inc
aaa
mov
mov
addl
add
in
lahf
cmp
mov
pop
addr16
ja
mov
mov
fwait
ja
and
mov
in
clc
and
outsb
aas
jg
call
adc
xchg
lds
jbe
imul
es
pushf
add
pop
sahf
dec
dec
shl
xchg
sub
dec
fdivrs
cli
lret
push
lret
jle
out
movsb
push
adc
inc
outsb
cmpsl
mov
push
push
pop
sub
hlt
jno
into
xchg
in
xorl
adc
mov
int
roll
out
mov
push
insb
xor
fimuls
sub
push
push
push
mov
inc
mov
mov
ds
fwait
pop
xor
fwait
mov
mov
push
lods
outsb
xor
mov
scas
imul
cmpb
dec
loop
mov
clc
add
test
cmp
xchg
mov
pop
add
call
or
push
adc
and
imul
sahf
mov
sbb
popf
cmpsl
sub
rcl
add
sub
sub
daa
pop
mov
mov
mov
inc
pop
es
add
inc
dec
jns
jb
mov
mov
xor
imul
mov
sbb
test
aam
out
lock
in
xorb
mov
sub
pop
sbb
ljmp
or
aaa
push
daa
inc
and
shr
mov
in
or
and
cmp
or
sbb
adc
add
out
sahf
cltd
inc
jmp
call
dec
add
and
scas
jne
and
popf
pop
jae
push
dec
jmp
movsb
sub
cltd
jl
lds
lcall
fcomps
xorl
xchg
xchg
cmp
into
rorl
cmp
popf
lock
push
gs
dec
outsb
jle
pop
jns
jnp
lahf
pusha
popf
adc
adc
stos
ds
popa
loope
mov
dec
aam
fwait
mov
jmp
adc
ficomps
mov
push
addl
pop
leave
aad
popf
cltd
pop
hlt
cmove
add
mov
adc
push
ss
pusha
mov
and
mov
in
xor
mov
fldln2
and
imul
inc
sub
lret
roll
mov
repnz
jbe
pop
adc
ftst
jge
inc
es
and
cmp
push
or
and
icebp
xchg
sti
ss
frstor
push
fs
mov
add
mov
adc
fs
push
jmp
xchg
jb
cmovnp
xchg
mov
inc
ds
hlt
call
xchg
repz
and
mov
add
bound
fs
jnp
std
push
mov
loopne
dec
and
sub
push
je
sub
pushf
ljmp
sbb
lods
shlb
pop
cs
push
pop
push
mov
test
cld
mov
std
insl
lret
adc
cmpsl
out
mov
sbb
sbb
clc
mov
add
aaa
mov
jb
aaa
fistps
xchg
test
jo
pop
mov
scas
push
jo
jmp
repnz
repnz
ljmp
add
rclb
add
aaa
clc
in
xor
out
push
pop
mov
xchg
mov
pop
inc
ret
stos
push
rorl
ret
sbb
and
jae
idivl
push
andl
sbb
jno
imul
fisttps
cmp
inc
add
mov
xchg
movsb
scas
and
jae
and
xchg
jge
jp
div
leave
push
or
xlat
test
xchg
adc
xor
mov
xor
adc
loopne
hlt
sub
insb
mov
out
or
fcoms
push
and
std
hlt
push
sub
ret
mov
ds
mov
mov
push
sub
ds
scas
aaa
or
pop
arpl
mov
push
push
dec
lret
add
cmpsb
leave
and
shrb
test
fbstp
icebp
jns
cwtl
mov
dec
rclb
incb
cmp
out
scas
sub
les
shll
sbb
xlat
test
es
lods
push
push
aam
cmpb
cltd
xor
hlt
mov
out
insb
ret
rol
or
jecxz
pop
xchg
out
or
les
mov
jl
cmp
cli
loop
xor
add
pop
sub
xchg
aad
pop
int3
rorl
xor
push
loope
add
lahf
call
loope
inc
daa
cmc
push
jecxz
adc
ret
sbbl
out
sub
pushf
aad
cmp
add
mov
xor
push
cli
fisttpl
pushf
add
sub
outsb
mov
loopne
xchg
repnz
mov
xchg
outsl
adc
pusha
cmpsb
loopne
lods
cmpsb
mov
lock
inc
add
dec
lcall
sub
sub
ret
pop
push
fisttpl
xchg
js
shl
mov
mov
rcrl
inc
shr
add
pop
jae
lret
push
mov
mov
ds
into
push
int
or
dec
sbb
int
ds
mov
inc
xchg
loop
aad
jno
cmpsl
hlt
dec
sarb
in
sti
gs
cmp
shll
mov
fchs
bnd
int
xor
inc
outsl
or
lahf
xor
cwtl
pop
bound
aas
fldt
xchg
shlb
mov
and
sbb
jmp
outsl
pop
fnstenv
fldt
test
dec
xchg
lods
iret
stc
ja
sbb
cld
sub
aas
negb
insl
push
jo
aam
insb
fdiv
test
jl
push
pop
mulb
pop
jle
push
pushf
outsl
pop
inc
cs
or
sub
les
jno
and
pop
mov
cld
movsb
push
imul
ja,pn
popa
sub
js
loope
rclb
int
push
xchg
jge
jnp
pop
mov
dec
out
push
xor
sub
stc
adc
cmp
mov
add
lret
xor
or
pusha
push
jge
decb
cmpsl
xchg
inc
lret
push
pop
adc
xchg
loopne
out
arpl
repz
imul
xchg
xor
scas
inc
sub
mov
inc
cmp
repz
movsl
cwtl
repnz
or
sbb
xchg
mov
pop
adc
pushf
adc
mov
pop
pop
shll
jmp
in
inc
lcall
push
jbe
test
cmpsl
push
test
inc
sub
popf
cltd
xchg
idiv
cmp
mov
lret
pop
or
out
sub
outsb
test
add
or
dec
imul
add
mov
jb
in
pop
imul
xchg
scas
and
pusha
jo
xor
sbb
add
repz
sub
lret
xchg
dec
ljmp
dec
test
fmull
pusha
push
mov
out
mov
stc
jo
ret
and
out
ss
push
dec
xchg
daa
int
and
sub
int
lcall
cmp
out
mov
push
jnp
add
mov
cmpsb
cmp
inc
dec
test
mov
repz
int
mov
mov
and
call
paddusb
cmp
cmp
jl
cld
flds
mov
and
mov
into
outsb
mov
jno
jb
add
pusha
add
call
add
and
and
jmp
stos
aaa
test
ret
jne
xchg
jae
cs
rorb
nop
inc
xlat
mov
jmp
cmc
sub
xor
inc
mov
jb
xor
push
bound
leave
and
lock
sub
adc
fstpl
push
sub
int3
int3
jg
xchg
mov
mov
aad
mov
xor
add
xchg
mov
jmp
dec
sbb
call
jb
sarb
cmp
cmp
mov
sub
cmp
repnz
ljmp
mov
int
fisttpll
js
add
adc
or
jbe
push
arpl
cmc
les
jmp
fldl
xchg
inc
lock
imul
std
das
out
and
es
repnz
fwait
add
lcall
ss
adc
and
icebp
push
je
cwtl
nop
rcrl
or
out
and
ljmp
xor
mov
sub
xchg
or
lret
mov
push
in
je
and
cltd
fwait
imul
mov
inc
lds
andl
add
lea
jno
lret
inc
insl
adc
repz
dec
mov
mov
push
push
notb
movsl
pop
imull
divl
aam
arpl
rcrb
add
arpl
add
test
mov
mov
stos
mov
add
or
mov
repz
mov
testb
nop
es
arpl
mov
loopne
push
xchg
xor
mov
jl
jge
aad
sbb
adc
cmpl
pop
mov
dec
sub
ret
leave
int
dec
aam
xchg
into
sbb
leave
inc
cmp
rcll
pop
or
and
mov
in
jae
fucomip
sub
add
enter
mov
outsl
push
cmc
clc
lret
icebp
scas
sbb
in
mov
xchg
add
xor
xchg
aas
out
fcompl
add
inc
test
cmp
dec
fdivrs
jb
in
xchg
bound
hlt
mov
dec
xchg
std
lock
cwtl
and
int
test
xorb
cmp
fs
leave
xlat
inc
loop
aad
pop
xchg
shll
clc
cli
sbb
je
lret
dec
xor
dec
je
push
ljmp
scas
ja
jl
stc
mov
in
repnz
jb
xchg
adc
ja
outsl
lret
rolb
in
push
mov
fldl
pusha
lret
ret
mov
xchg
adc
dec
jle
ret
dec
mov
add
sti
inc
lret
xlat
bound
ret
push
mov
adc
flds
leave
jg
aad
nop
or
dec
sub
mov
call
mov
cmpsb
pop
jl
push
addl
pop
cmp
std
aas
xchg
cmp
int3
test
pop
and
cmp
scas
xchg
xlat
pop
insl
jle
adc
xchg
rcll
aaa
cmpsl
sub
xchg
int
outsb
fldt
push
lods
hlt
cwtl
fs
test
int
dec
movsb
adc
cmp
out
daa
arpl
add
adc
add
aad
repnz
jbe
scas
int3
dec
mov
dec
lahf
jmp
ficompl
push
lea
sub
sti
mov
movl
xor
jg
sub
clc
adc
popf
popa
shlb
mov
stos
xchg
or
fbstp
jb
sbb
adc
pop
cmpb
pusha
stos
loopne
push
xchg
arpl
je
in
sbb
mov
cmpsl
and
and
dec
rcl
lea
mov
xchg
sbb
out
mov
out
xor
push
push
mov
sub
dec
lods
sbb
mov
add
push
pop
jle
test
fistl
pop
mov
nop
xchg
xor
push
xor
loopne
addr16
call
and
fadd
lods
push
dec
cli
xchg
xchg
jmp
lcall
sbb
cltd
sbb
movsl
sti
outsb
pop
mov
enter
adc
je
push
cmp
rorl
or
jg
std
loope
leave
jmp
aam
fbld
push
es
dec
or
fiadds
xchg
fs
loopne
pop
cs
jl
jno
xchg
sbb
out
std
test
mov
loop
or
inc
call
out
pop
dec
pop
and
je
lret
fildl
sbb
rolb
mov
push
setbe
aaa
dec
iret
ret
mov
cmpsl
push
ss
sub
mov
dec
cwtl
pop
cmpl
or
or
idivb
pop
shll
aad
or
push
iret
into
js
filds
data16
jp
push
sub
ret
mov
cmp
push
roll
mov
add
push
test
call
mov
sub
jg
popf
outsl
cld
aam
ljmp
push
mov
xchg
rorb
ljmp
stos
mov
aaa
inc
xchg
push
pop
cmp
iret
addb
jnp
mov
cmp
out
xchg
adc
adc
add
jg
mov
pop
xchg
inc
cmp
cmp
aas
shl
jbe
mov
pop
es
pop
adc
ja
mov
or
xchg
fdivrs
adc
stos
icebp
in
push
test
sti
add
jns
mov
in
jno
push
push
jmp
dec
iret
lods
sbb
xchg
ret
movlhps
push
not
jmp
cmp
lret
into
jmp
inc
mov
cmp
sub
das
push
add
popf
add
jmp
jp
push
js
in
femms
mov
mov
rorl
pushf
add
inc
sbb
dec
mov
std
lahf
jmp
popa
ret
dec
test
cmp
outsl
dec
mov
xor
cmpsb
xchg
mov
insl
jno
or
lock
xor
ret
ficoms
cmp
inc
mov
ds
cmc
cmove
adc
pop
adc
ror
mov
roll
scas
fidivl
mov
mov
out
lods
inc
in
jge
aam
adc
add
divl
fnsave
pushf
je
mov
in
ljmp
or
xor
outsl
fsubrs
xchg
lea
enter
cmp
xchg
pushf
test
lods
inc
loopne
call
xor
mov
xorl
inc
pop
dec
shlb
sbb
push
mov
mov
gs
and
add
pop
cmpsl
fldlg2
xchg
cmpsl
dec
add
xor
cmp
or
inc
mov
adc
xchg
nop
sub
sub
je
inc
xchg
fcoms
cmc
sub
mov
xor
sahf
push
cmp
dec
sbb
xchg
mov
clts
rol
inc
stos
lods
xlat
mov
fsubrp
sbb
add
popf
data16
test
fdivrs
xchg
in
mov
shl
mov
dec
and
inc
jecxz
lods
jle
inc
clc
popa
divb
push
xlat
fiadds
cmp
lret
mov
fstpl
cmp
loope
out
fildll
push
pop
sahf
aaa
cltd
push
cmp
icebp
mov
add
lds
push
pop
mov
pop
and
stc
mov
sbb
test
mov
pop
fistl
fmull
jbe
or
divb
cmp
addr16
jnp
jnp
and
clc
xor
loopne
ret
xchg
lock
cmp
push
pop
xchg
push
enter
mov
lods
lock
scas
cltd
dec
test
mov
pop
ret
stc
mov
xor
push
pop
xor
xchg
sub
mov
movsb
dec
in
or
mov
xlat
xchg
and
sbb
clc
inc
xor
mov
outsl
hlt
ret
subl
es
test
lret
in
repz
adc
dec
mov
and
xor
cs
inc
and
sbb
and
jno
jmp
and
dec
dec
sub
sbb
push
adc
daa
stos
mov
daa
xchg
ja
pushf
pop
repnz
nop
subb
bound
in
repnz
cltd
adc
jb
jb
dec
lret
mov
pushw
aaa
fmuls
inc
jo
mov
cmp
bound
push
loop
test
adc
inc
sub
mov
mov
jl
or
jge
or
aas
sbb
mov
add
int
pop
and
add
inc
jp
lret
push
pop
jns
sahf
mov
rcrb
mov
rcrb
mov
sub
fbld
xchg
sarb
sub
bound
push
adc
cld
xor
decl
mov
fldt
and
ds
outsb
pop
adc
test
cmpsb
clc
mov
aaa
jl
scas
and
test
mov
repnz
mov
push
adc
jo
pop
pop
sub
cmpsl
add
cmp
jecxz
jnp
int
gs
cltd
pop
push
lods
mov
in
fxch
dec
and
jp
das
mov
sahf
xor
clc
jb
dec
cmp
movsb
test
cmp
fildl
pop
lock
jno
test
pop
mov
imul
jo
stos
mov
cmpsb
adc
jecxz
push
xchg
iret
sbb
push
ret
arpl
das
jmp
aas
lods
mov
shlb
int
scas
imul
ljmp
mov
in
dec
test
or
mov
rclb
in
rol
sbb
inc
movsl
sahf
jbe
lods
testl
xchg
sbb
jecxz
push
loope
push
mov
jns
add
int
out
mov
lds
ficomps
sub
mov
mov
mov
dec
cmp
test
sub
cwtl
rolb
lods
ret
pop
mov
add
lret
rorl
in
ja
rcrb
push
push
jne
cmp
mov
inc
je
inc
sbb
mov
icebp
cmpsb
jae
inc
push
rolb
pop
lahf
pusha
adcl
repnz
mov
or
scas
test
jbe
lret
or
sub
in
insb
push
cmpsb
mov
mov
push
outsb
jo
inc
mov
push
incb
mov
push
pop
loope
jno
pop
nop
mov
repnz
and
sbb
cmc
sub
les
or
test
lods
sub
sahf
stc
cmc
icebp
les
movsl
loop
dec
fs
pop
jnp
ds
or
pop
popf
into
fstpl
popf
cli
outsl
cs
cmp
mov
mov
add
fsub
pusha
cmp
jne
jnp
fisttpl
xor
out
mov
sub
cmp
adc
xor
sbb
cmpsb
add
lds
shl
cmp
cmp
rcrl
sub
data16
xchg
xchg
or
cmp
mov
int
rclb
hlt
rcll
icebp
jne
rcll
xchg
jbe
out
fstl
push
in
jg
in
aaa
rep
sub
test
cmp
jl
leave
adc
push
aad
loop
dec
mov
clc
mov
out
push
stos
push
mov
push
xchg
dec
in
in
ds
and
pop
jb
mov
iret
movsb
jecxz
jne
out
fs
in
movsb
fbstp
test
push
mov
dec
icebp
gs
push
stos
fdivrl
jbe
lods
out
adc
mov
cmp
lret
aas
jne
dec
ret
mov
bound
mov
aam
xor
mov
jnp
cmpsb
and
addr16
inc
cmp
xor
cli
popf
stos
add
lret
pop
xor
push
or
sub
shlb
fmulp
mov
mov
jp
gs
pop
mov
mov
inc
xor
aad
jnp
and
pop
dec
push
ljmp
ret
jle
out
xor
or
imul
mov
je
mov
push
test
mov
and
shl
mov
mov
and
pop
cmpsb
lcall
std
jno
mov
push
mov
test
bt
daa
jg
daa
in
outsb
lods
clc
shl
jnp
out
out
pop
cmpsb
adc
pushf
push
mulb
loope
testb
or
fsubrl
mov
inc
daa
cld
cmpsl
pop
movsl
adc
dec
dec
xor
in
insl
mov
scas
movsb
out
push
js
push
cmc
lods
cltd
lea
arpl
loope
mov
and
test
adc
test
push
xor
sub
loopne
je
repnz
sub
xchg
out
jmp
pop
sbb
repz
jle
mov
icebp
data16
pop
call
sbb
push
negb
les
shll
in
std
jbe
dec
out
icebp
les
mov
sbb
pop
rorl
mov
xor
lds
loop
push
mov
or
dec
or
pop
pop
lods
mov
pusha
mov
das
adc
addr16
xchg
js
daa
xchg
adcl
inc
stos
out
leave
out
fld
pop
fbstp
outsl
pushf
xchg
xchg
in
add
pop
inc
pop
pop
jnp
adc
gs
fists
jbe
aaa
adc
arpl
add
adc
icebp
xchg
pop
mov
add
je
mov
fiaddl
mov
outsl
or
orw
xchg
add
mov
ror
jnp
mov
aam
jb
fsubl
das
icebp
inc
sbb
jmp
push
lret
sbb
rcrl
aaa
cmc
insb
push
jecxz
mov
or
pop
je
fcoml
stos
add
lret
data16
lcall
test
push
push
mov
cltd
mov
fisubs
rorb
sub
push
jle
pop
lods
cmp
fisubrl
ds
lret
mov
int
sbb
xchg
insb
mov
push
push
popa
out
jg
xor
push
mov
inc
cli
ja
not
xchg
mov
pusha
daa
xchg
in
adc
push
xor
pop
nop
lahf
jmp
cmp
enter
cmp
jl
sbb
cmpsl
std
or
push
inc
into
xchg
loope
fldl
fldl2t
ret
out
inc
mov
inc
xchg
fdiv
ret
cmp
and
ds
jae
sbb
jecxz
mov
and
mov
sahf
mov
dec
fsub
es
pushf
cs
pop
or
faddl
out
clc
sub
mov
lahf
sub
dec
rcrl
out
clc
mov
imul
mov
or
call
cmp
repnz
cltd
and
sub
gs
std
add
inc
or
outsl
mov
test
shrb
stos
jne
mov
lea
mov
push
testl
sub
xor
bound
push
pop
or
subl
icebp
nop
sbb
outsl
repnz
cmp
and
pop
xchg
mov
cmp
gs
and
fcmovne
icebp
mov
scas
ret
lret
xorl
scas
mov
and
pushf
jle
enter
pusha
int
out
push
push
jge
cmpsl
stc
xor
sub
nop
lahf
ljmp
mov
inc
jmp
sbb
push
inc
daa
das
call
mov
jnp
int
sub
pop
sub
mov
mov
mov
lcall
pop
movsb
jno
sahf
jns
adcl
xchg
mov
popa
aad
fs
ret
or
dec
xchg
subl
cmp
das
nop
mov
dec
mov
sub
push
mov
inc
inc
mov
insl
mov
pusha
mov
add
push
inc
das
pop
in
xor
mov
mov
lret
idivl
sub
inc
mov
sub
xlat
pop
xchg
stos
sahf
xchg
fs
movsl
add
out
xchg
xchg
pop
lods
jecxz
jmp
pop
sub
fs
out
push
cld
xor
lea
rcrl
fbld
iret
sbb
out
xlat
shlb
pop
insl
mov
pop
popa
sbb
fldt
mov
or
ss
add
lcall
in
test
pop
sbb
in
dec
inc
ficoms
and
mov
or
rclb
mov
mov
imul
outsl
adc
cwtl
sbb
xlat
dec
cmp
fldl
pop
cmp
pusha
cmpsb
push
or
mov
pop
dec
outsb
sub
sub
cwtl
sbb
fxch
pop
stos
test
mov
mov
xor
mov
icebp
int
js
divb
scas
mov
mov
inc
arpl
int3
les
xlat
mov
rcrb
dec
fsub
inc
push
lret
inc
sbb
fldcw
inc
and
mov
sub
jmp
adc
lret
push
mov
lcall
add
mov
arpl
or
ret
call
sbb
add
sub
in
test
scas
das
out
into
out
push
lcall
xor
push
push
les
std
jae
insb
sbb
xlat
dec
sub
mov
rcl
cmp
mull
lods
shll
test
mov
fcompl
arpl
sub
mov
pop
cld
out
out
sahf
js
jmp
adc
js
xchg
adc
cs
outsl
fmul
sbb
mov
or
lods
or
jmp
sbb
add
push
jle
xor
into
ds
sbb
inc
lret
sub
add
sub
inc
out
cmovle
mov
jl
addr16
sub
mov
test
scas
fidivrl
pop
push
fmull
jbe
mov
adc
push
shr
push
pop
push
cld
pop
sbb
sub
dec
jl
in
js
js
sar
cmp
xor
jp
jp
in
imul
arpl
cmpsb
cmp
insb
mov
clc
add
push
pushf
xchg
xchg
call
lds
cmp
ret
gs
call
out
cmpl
les
xchg
daa
sub
mov
jecxz
jg
mov
xlat
add
mov
sbbl
rcll
ss
sbbb
jecxz
jge
push
jb
jne
push
jecxz
pop
popf
xor
or
ffreep
loope
jmp
push
aam
roll
xchg
test
cmp
cwtl
or
jb
filds
mov
int3
inc
push
scas
out
mov
es
inc
push
call
or
das
xchg
jne
ja
jle
repnz
sub
loop
cmp
mov
outsl
pop
ss
addr16
sysexit
outsl
add
pop
add
push
je
pop
jg
jnp
in
das
insb
out
lea
adc
mov
sbb
mov
aam
mov
stc
mov
popa
fprem
push
iret
dec
mov
lret
push
adc
inc
movsl
push
or
mov
pop
cmp
ffreep
jle
cld
test
sets
shll
pop
or
lahf
fcmovnb
jge
jae
jnp
hlt
ror
cmp
aad
mov
mov
and
and
ret
pop
leave
xchg
pop
aam
loope
lock
test
int
fnstcw
mov
insl
mov
mov
pop
mov
jae
movb
stos
and
cmp
dec
aam
dec
push
stc
test
hlt
scas
ljmp
insb
add
mov
leave
mov
mov
adc
lods
cld
cmp
inc
movsl
xchg
dec
lcall
lret
sub
add
add
xchg
rorb
xorb
fstl
call
cmp
lahf
xor
xlat
fildl
xor
mov
xchg
lods
or
outsb
sub
popa
mov
hlt
or
jbe
insl
orl
daa
sub
pop
fdivrl
add
clc
add
push
mov
push
inc
push
or
rcl
lcall
inc
sar
das
outsb
test
outsl
cmp
push
and
out
xchg
sbb
xor
sbb
sahf
pop
mov
jb
xchg
arpl
pop
int
in
inc
mov
js
shll
inc
jnp
loop
test
adc
arpl
testl
ja
outsb
add
insb
jge
pop
pop
pop
test
inc
pop
bound
aad
pusha
inc
cmpsb
arpl
lret
fbld
stos
testl
subl
sub
mov
nop
das
cli
mov
dec
mov
inc
jl
hlt
std
pusha
cmpb
mov
iret
roll
hlt
mov
rorb
rol
enter
pop
aam
lea
dec
xor
cmp
insl
mov
pop
mov
stos
shll
mov
xor
ljmp
mov
pop
inc
dec
or
xchg
pop
jg
pop
pop
dec
fsub
add
dec
or
je
jbe
mov
and
or
jle
cwtl
inc
sub
mov
stos
inc
push
push
jb
fsubl
cmc
pop
imul
fisttpll
xchg
fildll
inc
cld
xchg
movsl
add
dec
cmp
adc
jp
xor
loopne
jecxz
push
dec
inc
icebp
negb
mov
cmp
push
adc
mov
xchg
in
test
sub
test
subb
shl
mov
push
adc
pop
cmp
js
fbld
cwtl
enter
sub
adc
cmpsl
sbb
jl
jb
adc
mov
sbb
mov
jg
stos
dec
pop
or
scas
mov
xadd
mov
popf
add
jo
pop
or
jbe
in
xchg
imul
cwtl
ss
outsl
not
and
addr16
insb
sub
or
inc
into
dec
jmp
mov
sbb
xor
orb
jge
popf
sti
repnz
and
xchg
add
or
cld
mov
xor
int
stos
or
push
xor
adc
cmp
not
repnz
sub
push
aad
cld
ret
movsb
out
fstps
fidivrl
mov
fmuls
outsb
jecxz
push
std
cmp
in
xchg
lods
inc
test
stos
pop
movsl
inc
mov
cld
jge
xchg
or
jns
cli
xchg
aas
sbb
sbb
push
xor
jecxz
shrl
sbb
jns
lret
bound
push
xchg
push
mov
int
pushf
stos
bound
sahf
ss
scas
jnp
arpl
andb
enter
test
inc
xlat
mov
stos
test
xchg
xor
popa
data16
and
lahf
nop
adc
push
lods
cld
in
sbb
cmc
push
adc
negl
fadds
adc
mov
cmp
or
add
pop
push
xchg
aas
aam
xchg
frstor
or
or
out
loop
lret
inc
movsl
cmp
mov
jae
sahf
mov
div
cltd
popf
jno
adc
or
sti
mov
addr16
mov
xor
je
mov
xlat
sysexit
inc
pop
lcall
mov
cli
dec
and
bound
add
jo
push
std
and
lret
iret
fs
push
cmp
dec
cltd
mov
insl
adc
js
mov
popf
ss
lcall
dec
mov
ficompl
insl
and
mov
ja
sub
mov
dec
or
mov
rcll
mov
pop
sbb
xchg
sarl
js
lods
insl
sub
mov
mov
or
dec
sbb
pusha
mov
push
jle
outsb
push
mov
out
jnp
mov
xchg
mov
out
sbb
jns
int
stos
negl
les
jp
ret
jb
sub
roll
pushf
xor
jbe
ja
pop
sub
fstl
arpl
sarb
imull
repz
xlat
enter
lahf
mov
jo
fisubs
repz
cmp
inc
scas
sbb
iret
pusha
aam
xor
jb
dec
cmpsl
add
sub
mov
bound
or
cmp
std
cmpsb
test
daa
push
sti
adc
pop
mov
sbb
insl
dec
cli
iret
add
mov
scas
iret
call
push
and
sub
mov
jb
leave
pop
adc
sti
cmpsb
and
cli
sbb
xor
pop
dec
jmp
mov
mov
adc
movsl
cmp
sahf
adc
and
icebp
ds
push
daa
sub
xchg
cmp
sarb
movb
xchg
pusha
or
pop
or
ja
mov
cmp
rolb
fidivrl
cmpsb
nop
aad
inc
shrl
js
push
xchg
xchg
popa
faddp
movb
push
mov
jle
jne
and
clc
addb
or
jo
xor
mov
ja
addl
mov
inc
xchg
je
sub
pop
hlt
ss
pushf
xchg
inc
or
in
mov
xor
aas
mov
popf
dec
pushf
out
dec
cmp
adc
lret
pop
fldcw
mov
lahf
fidivl
imul
les
bound
iret
dec
fucomip
push
enter
ja
mov
mov
sbb
loopne
xor
and
or
daa
sbb
or
mov
pusha
sub
mov
rdmsr
or
dec
cmpsl
std
outsl
dec
mov
es
mov
test
lret
mov
fcomps
mov
aas
js
adc
scas
lcall
test
repz
dec
lods
cmp
in
cmpsl
cmpsl
mov
int
xor
pop
mov
add
popf
out
xor
addl
mov
outsb
mov
xchg
and
mov
scas
scas
outsl
fs
push
in
jmp
jno
ficomps
xor
cmp
lods
dec
push
inc
je
aad
rorl
enter
cmp
pop
mov
adc
cmpsl
mov
push
insl
mov
addr16
xchg
jns
outsl
mov
clc
jmp
sahf
xchg
cmpb
fdivrs
inc
jl
add
leave
into
cltd
or
or
les
pushf
inc
negb
xchg
sub
cmp
add
jle
int
lea
or
lahf
sahf
mov
lods
imul
call
in
ljmp
rol
mov
repnz
cmpl
mov
and
xlat
fs
pop
adc
adc
jmp
xor
ljmp
lahf
inc
inc
arpl
idiv
dec
icebp
jecxz
dec
hlt
nop
insb
call
scas
aad
or
inc
mov
in
and
pop
rcr
subl
xlat
xchg
and
xchg
imul
push
call
and
cmpsl
xor
jmp
pusha
dec
mov
or
cmc
or
int3
mov
xchg
pop
out
xor
stos
or
or
out
nop
inc
jb
sbb
clc
repnz
cmp
xor
inc
jmp
push
add
mov
mov
sbb
fnstsw
loope
hlt
jge
int
jl
sarb
xlat
mov
cmpb
jno
jecxz
push
or
fists
push
inc
rclb
mov
add
add
and
lea
outsl
cmc
aas
cmpsb
adc
jb
sub
std
or
dec
in
pop
inc
insb
test
fistpl
lret
sub
jge
and
roll
and
or
jo
jle
add
fldenv
inc
and
leave
les
mov
mov
scas
fcmovu
jge
ret
imul
push
jg
cmpsb
mov
test
loopne
roll
inc
js
xchg
xchg
or
in
push
sbb
dec
std
mov
lea
mov
pop
das
imul
sbb
cwtl
jnp
sahf
sub
push
jae
jns
fxch
jo
movsl
cmp
sbb
aas
dec
outsb
aad
ds
daa
test
paddusb
ret
ja
xor
push
scas
sub
cmp
ss
and
mov
lea
cmpsb
or
add
sbb
fisttps
out
jg
shl
push
mov
inc
in
out
jmp
jle
inc
dec
hlt
aad
push
inc
xlat
stos
test
movsb
mov
cs
imul
mov
sar
stos
movsb
or
pop
jle
mov
adc
lret
aad
mov
outsl
int
pop
xorl
es
mov
aas
xchg
and
and
mov
mov
cld
pop
cmp
pop
jb
dec
pop
adc
adc
addl
cli
mov
outsl
pop
push
icebp
add
stc
ss
dec
test
mov
mov
mov
cmp
lcall
inc
loope
pop
rolb
fwait
out
mov
aad
inc
mov
push
dec
xlat
fwait
xor
add
add
xchg
inc
push
jg
and
in
imul
xchg
mov
and
jno
sub
inc
out
in
jge
out
es
imul
cmp
das
or
pusha
aad
es
sub
jae
lcall
cmpsl
rolb
pushf
aam
xchg
mov
aas
mov
push
mov
cmp
mov
pop
es
bound
xor
mov
lock
mov
rcl
leave
xor
adc
out
inc
add
pop
out
mov
out
pop
lods
div
pusha
inc
imul
xchg
arpl
stos
and
fs
arpl
outsb
mov
or
jno
add
mov
hlt
pop
or
or
mov
add
xor
and
pop
mov
pop
cmp
fidivl
test
lods
jmp
push
pop
push
scas
and
cmp
faddl
add
mov
shll
pop
stos
xorl
add
in
out
xchg
ljmp
push
jg
inc
mov
jl
cmpb
xchg
ret
push
lods
or
lret
test
das
adcb
xlat
test
rcll
pop
das
das
dec
dec
out
sbb
xor
jl
sbb
fidivrl
mov
jecxz
fimull
repz
into
das
je
xchg
cli
ja
or
jo
dec
aad
mov
mov
and
inc
and
movsb
dec
inc
mov
push
mov
pushf
pop
xlat
jne
xor
ljmp
xor
or
andl
jle
adc
addr16
xor
pop
jo
lret
adc
sub
outsl
mov
push
ret
push
enter
mov
das
dec
push
aas
push
jmp
in
xor
add
int
mov
mov
popa
jo
cmp
sub
call
cmc
popa
shll
pop
jg
ja
ljmp
subb
sbb
arpl
dec
clc
or
pop
push
adc
mov
sahf
movsl
outsb
jge
mov
mov
and
cmpsl
js,pn
repnz
adc
cmp
inc
data16
cmc
and
ficomps
icebp
lods
mov
pop
loope
push
or
out
in
xor
les
shl
jmp
loope
xchg
xlat
or
jl
arpl
push
and
sbb
es
and
mov
sbb
rcl
adc
lss
adc
mov
mov
xor
fidivl
gs
out
mov
insl
imul
rorl
out
mov
fildl
pop
sub
sub
sahf
ds
pusha
inc
jg
xchg
inc
xchg
in
js
shlb
inc
test
mov
ret
jo
repnz
jecxz
jmp
mov
cltd
sbb
inc
sbb
mov
xchg
push
dec
int3
mov
mov
mov
sub
mov
pop
xadd
pushf
xor
imul
or
pop
mov
test
add
dec
cmp
inc
ret
sub
rcr
mov
scas
into
dec
les
add
mov
pop
out
pushf
je
mov
ret
xor
pop
fidivs
sar
loopne
popa
cmpsb
adc
aas
aam
shll
pusha
out
xchg
mov
sarl
lds
test
outsl
sub
sbb
lcall
pushf
inc
adc
adc
dec
jp
pop
adc
jae
xor
pop
inc
outsl
jno
imul
pop
lret
aaa
cmpsl
imul
das
lret
mov
mov
fcom
stos
push
loope
stc
sub
jl
add
cmpsb
mov
mov
sub
jle
loope
fs
pusha
inc
ret
xchg
cmpsl
add
mov
imul
pop
lds
adc
dec
repnz
jmp
out
xchg
dec
mov
les
push
mov
mov
xlat
dec
jne
cwtl
leave
movsb
ror
adc
and
mov
popa
test
jno
fs
dec
hlt
popf
sarb
inc
sub
dec
jb
test
pop
mov
sub
and
push
mov
leave
adc
insl
xor
mov
daa
int
gs
sub
and
pop
fwait
ds
sbb
aaa
addr16
aaa
lcall
pop
imul
xchg
mov
je
insl
dec
mov
dec
test
bound
xor
mov
mov
jbe
outsl
outsb
lret
fnstsw
xor
fsubr
jg
and
leave
xchg
das
out
ja
push
test
push
rclb
sar
jne
out
enter
push
push
add
mov
mov
bound
stos
mov
sbbl
fldenv
cmp
adc
pop
inc
sub
in
push
roll
rorb
lahf
stos
mov
inc
mov
loopne
in
cmp
and
jno
out
es
sahf
or
pop
lret
ret
cli
pop
jnp
lahf
xor
adc
mov
rolb
xor
inc
jmp
xchg
sub
in
adc
xlat
inc
sbb
and
scas
inc
jae
jl
xchg
dec
mov
or
shr
xchg
clc
xor
outsl
add
cmp
pop
adc
ficomps
movsl
jecxz
call
xchg
sub
bound
lods
std
mov
pop
sub
into
xchg
lock
fidivs
leave
add
jmp
pushf
andw
push
fwait
mov
jg
and
in
ds
cwtl
mov
push
int3
out
pop
imul
jnp
mov
addr16
loope
cwtl
in
dec
xchg
jp
pop
inc
xor
add
gs
loopne
les
clc
push
dec
cmp
sbb
js
add
cltd
jo
mov
int3
mov
les
mov
add
out
test
adc
jmp
lret
sbb
inc
mov
mov
cwtl
fcomi
pop
sbb
sub
xor
xor
int3
jo
inc
xchg
mov
pusha
jmp
mov
fistpl
dec
cmp
cmpsb
out
hlt
pop
pop
mov
mov
or
call
lret
out
sub
mov
cmpsb
mov
cld
push
je
mov
mov
nop
loope
test
shlb
xor
loope
shl
outsl
pop
add
imul
push
mov
pop
insb
sahf
push
mov
jno
inc
mov
or
ljmp
inc
rorl
or
es
jo
jp
xchg
mov
js
fwait
divl
push
push
jge
xor
cmp
loope
pop
iret
repnz
negb
pop
jnp
ficoms
mov
push
jne
jns
cmp
push
sbbl
fs
xor
and
bound
xchg
sbb
inc
test
dec
dec
pop
dec
sbb
sub
rorb
cmp
xchg
dec
xlat
sub
xlat
pop
push
dec
shrb
es
cmp
jns
jecxz
mov
dec
pop
inc
rolb
mov
imul
pop
cmpsl
in
leave
cs
jg
rorl
jl
leave
sbb
pusha
ret
fadds
push
idivb
mov
mov
cmp
cs
cmp
adc
xor
sub
imul
shr
lahf
leave
mov
cmpl
sbbl
add
pop
xor
sub
xchg
in
or
push
sar
stos
cltd
adc
cmp
cs
stos
mov
dec
mov
cld
sbb
mov
inc
test
aam
add
adc
push
mov
adc
lahf
xlat
add
xchg
ja
cmp
fisttpl
xor
pop
inc
dec
sub
mov
leave
loop
mov
cmp
and
rol
jg
test
in
lret
lock
insb
imul
mov
sbb
mov
lock
inc
jge
dec
popa
mov
fwait
or
in
jp
ja
sub
xchg
pop
inc
sub
xchg
ret
pop
lret
aaa
pop
scas
mov
jecxz
stos
lock
jg
shlb
lcall
cmp
lahf
into
sbb
pop
std
cmp
mov
jg
mov
fidivrl
imul
sti
or
repz
jns
xchg
add
daa
popf
sbb
sbb
test
dec
shrl
jnp
pusha
xor
and
loope
pusha
add
shr
pop
sub
fcom
dec
mov
fdivrl
xor
cmp
test
sbb
gs
push
repnz
dec
adc
xchg
push
pop
mov
call
adc
cmpsb
xor
adcb
mov
stos
pop
adc
jecxz
arpl
dec
mov
in
xor
ret
mov
dec
xchg
subl
mov
ja
sub
add
pop
aaa
shl
fstp
push
ret
repz
cmp
add
xchg
fcmovnu
push
jp
mov
out
cmp
cmpsb
ljmp
iret
iret
push
pop
and
inc
adc
fwait
push
sub
adc
mov
insb
out
inc
sti
fdivrl
or
dec
or
or
xchg
sub
push
add
pop
inc
fwait
test
or
pop
jmp
push
push
sbb
in
into
aaa
std
mov
adc
push
sub
repz
jbe
icebp
imul
nop
andb
and
xchg
jl
test
sbb
and
mov
lods
adc
inc
xor
and
lea
mov
clc
roll
xchg
lcall
cmp
lea
shll
sub
pop
cmp
xor
push
pop
test
shll
push
call
call
inc
icebp
cld
in
into
int
ficompl
sbb
ret
ss
test
xor
addr16
movsb
mov
lds
pusha
xchg
dec
xchg
hlt
push
pop
mov
add
inc
es
dec
lods
popa
imul
pusha
ss
mov
add
or
test
fdivr
sub
ljmp
mov
xchg
popaw
jmp
sbb
cmc
popf
xor
add
in
jo
enter
ljmp
jo
in
imul
testb
cltd
cmpsl
sbb
cld
push
lds
test
stos
fsubr
lcall
data16
ljmp
xchg
movsb
pusha
cmp
dec
leave
jo
js
idivb
test
inc
movb
out
cmp
out
dec
mov
pop
sahf
push
je
inc
dec
jg
inc
xor
imul
clc
scas
push
pop
pusha
lcall
jo
aad
icebp
cmp
xor
fdivrp
data16
shll
scas
lods
clc
pop
push
aaa
in
push
pop
adc
fwait
push
icebp
dec
cmp
jbe
cmp
lcall
insl
adc
mov
loope
fbstp
loop
je
mov
sbb
push
push
sub
lds
fdivp
dec
das
push
and
or
xchg
outsb
out
pop
adc
add
or
jecxz
dec
mov
and
stos
leave
sbb
jae
insb
out
sahf
jbe
xchg
mov
cmp
mov
mov
aam
sbb
mov
mov
mov
outsl
in
or
lcall
int3
and
cmp
lcall
jl
sub
jo
or
rcr
push
aam
out
mov
mov
dec
push
lock
jb
or
sbb
inc
orl
loopne
xchg
jl
mov
cli
inc
xchg
aas
ja
ret
push
push
xchg
mov
sbb
cmc
or
add
imul
inc
int3
dec
loopne
dec
mov
push
xchg
and
sub
rolb
jmp
sub
es
mov
bnd
andb
stos
lock
and
dec
inc
sub
jns
in
shll
out
dec
push
test
out
add
rcll
mov
hlt
mov
mov
out
mov
jne
lods
push
int3
stos
stos
iret
xchg
mov
add
pop
xor
add
or
and
mov
movsl
in
mov
fwait
lret
jp
cmc
dec
ret
scas
push
daa
xlat
inc
inc
and
pop
icebp
negb
dec
jge
pop
cmpb
imul
sahf
cld
or
loopne
pop
lret
stc
popf
test
inc
push
inc
daa
fcoms
out
xchg
cmpsl
fstl
outsb
loop
hlt
pop
mov
cmpsb
je
dec
add
dec
xchg
dec
jbe
mov
sbb
add
xchg
loopne
ret
hlt
jne
push
test
jne
dec
jne
les
jmp
sub
mov
scas
orb
mov
mov
stc
jno
dec
aas
xor
inc
jne
lods
fcomip
popa
jl
lret
cltd
daa
rcr
push
jp
pop
sbb
cmp
cmpsl
jecxz
dec
adc
setg
outsb
stos
arpl
rcrb
push
mov
push
xor
sarl
mov
popa
xchg
call
test
jle
aas
pop
cmp
popf
push
mov
adc
aad
mov
mov
ss
insl
test
arpl
into
out
dec
sbb
cmpsl
ficomps
cmp
in
xor
sbb
xor
imul
mov
dec
int3
mov
pop
inc
cltd
int3
dec
xchg
dec
mov
inc
inc
popa
cmp
ja
pop
push
out
xchg
mov
xchg
mov
jb
adc
mov
mov
mov
stos
test
dec
sbb
in
cli
xor
sti
adc
add
aaa
inc
cmp
cmc
popf
jo
std
xchg
xchg
stos
lret
jecxz
sbb
mov
sbb
and
les
lret
push
jo
mov
adc
out
aam
jge
adc
mov
imul
push
and
inc
fcom
or
xchg
and
add
cmc
dec
jmp
ret
xchg
or
jae
jo
pop
imul
dec
sahf
cmp
inc
inc
mov
insl
rcll
cmp
ss
inc
out
and
inc
pushf
insl
mov
test
int
add
xor
and
sbb
daa
jnp
fcomi
mov
pusha
out
push
sub
out
adc
sub
add
aaa
pop
popa
push
out
dec
insb
movsb
imull
jo
imulb
pop
test
addr16
mov
push
rolb
testb
and
lds
lret
inc
jmp
xchg
imul
insl
cmc
shrl
loope
mov
or
out
xchg
cmc
cmpsb
imul
push
rcrb
or
je
mov
leave
mov
popf
mov
stc
and
jg
popa
mov
loop
mov
sbb
mov
arpl
xchg
inc
ja
mov
xchg
push
addr16
fsubr
xchg
adc
out
jno
sub
movsl
pop
pop
inc
mov
test
mov
iret
adc
leave
sbb
aad
jbe
fisubrs
shlb
stc
sub
mov
sbb
sbb
lcall
mov
cmpsb
lret
loopne
andl
mov
je
mov
mov
movsb
jmp
shll
push
push
inc
shll
in
ds
lea
popf
pop
shrb
xchg
aas
ss
sub
mov
movsb
imul
jmp
and
xor
sysexit
add
pop
dec
and
push
in
cs
hlt
and
pushf
cmp
pop
pop
adc
or
fdiv
push
pop
sub
pushf
scas
adcb
push
sahf
mov
adc
imul
push
test
shlb
movsl
inc
mov
push
mov
jmp
inc
xchg
cs
adc
inc
jecxz
pop
das
or
mov
push
shlb
jbe
stc
bound
xor
cmp
jg
pop
fiaddl
xor
xor
jmp
movb
cli
dec
cld
or
jecxz
cli
popl
xor
lea
or
fwait
cwtl
xchg
aas
pushf
mov
cmp
cltd
enter
xchg
mov
movzbl
aam
sub
mov
loop
add
ret
adc
sub
scas
inc
lahf
sub
leave
pop
adc
popa
aam
add
mov
ret
idivb
dec
iret
adcb
pop
imul
xor
popa
lahf
ss
out
push
ret
adc
or
jecxz
movsb
xor
pop
mov
inc
and
lcall
or
adc
loopne
add
jo
int3
divb
lret
inc
mov
add
mov
repnz
out
out
mov
push
pop
cmc
shrl
mov
insl
push
mov
fidivrl
push
int3
xor
dec
cmp
ja
ret
jns
sbb
dec
jo
cltd
mov
push
add
fdiv
add
call
call
mov
jno
test
aam
dec
and
xchg
out
inc
add
mov
clc
jbe
rolb
add
mov
add
cli
fistpl
jmp
rcll
mov
lret
mov
cmp
mov
dec
jle
xchg
in
rcrl
inc
insb
mov
and
pop
jne
inc
lret
cltd
adc
sbb
lcall
aam
jl
pop
das
mov
and
andb
xchg
imul
cmp
dec
sub
icebp
aaa
imul
popa
pop
and
jl
imul
push
cwtl
sbb
dec
pop
notb
rsqrtps
insl
cmp
bound
scas
xchg
mov
xor
add
jo
in
xchg
outsl
js
jo
sub
sbb
jl
mov
inc
jmp
sub
loop
pop
xchg
mov
loope
adc
fwait
sahf
int3
mov
lahf
mov
in
push
insb
lods
les
xchg
stos
ret
lahf
jecxz
shll
mov
or
dec
mov
lods
sahf
pop
pushf
cmp
mov
cmpps
mov
push
movsb
xor
pop
cmpb
stos
pop
fsubs
cwtl
fucomi
mov
fdivrs
pop
sub
and
cmp
jbe
cli
xchg
ja
dec
pop
insb
mov
mov
xchg
push
cwtl
sub
xor
ret
lcall
mov
mov
lret
jmp
push
daa
js
lock
cmpsb
jb
clc
fstpl
in
push
jecxz
enter
push
mov
cmp
mov
jbe
cmp
movsbl
and
repz
lahf
cmc
and
push
push
inc
mov
adc
pop
outsl
or
inc
fisubrl
or
addb
mov
cmp
in
cwtl
sbb
pop
mov
dec
push
mov
xor
ret
cmp
push
popa
pushf
dec
cmp
imul
dec
and
mov
xor
sbb
jno
or
sarl
mov
add
int
int
push
xchg
sub
lea
insb
movsb
ficoms
push
jae
xor
pushf
or
imul
gs
leave
push
leave
jl
int
rorb
into
dec
jecxz
jg
adc
mov
mov
mov
xchg
pop
jge
inc
movsl
lock
mov
cmp
or
jg
cmp
add
fisubs
mov
pop
call
fildll
xor
fnstsw
ds
jns
dec
cs
icebp
sbb
sbb
and
imul
enter
out
push
sbb
adc
xchg
xor
jbe
xor
je
fs
sbb
push
pop
call
and
fdiv
jbe
or
push
gs
mov
inc
ljmp
shll
std
cmpsl
and
jns
xchg
mov
add
sub
xor
pop
jb
push
dec
icebp
aas
cs
fidivrl
shrb
stc
in
ret
fidivrs
pop
loope
lcall
dec
add
xchg
or
push
pop
jo
pusha
add
jl
aad
add
notb
in
insb
xor
mov
sub
xorb
gs
mov
fnstsw
fucom
and
push
adc
cmpsb
ja
dec
adc
pop
jb
cmp
xlat
js
pop
pop
sbbb
lea
adc
out
dec
sarb
pop
mov
out
fmuls
cmc
mov
mov
dec
xchg
mov
lret
pusha
mov
mov
pop
je
jmp
fcmovu
imul
mov
lods
jle
sub
lret
and
inc
jmp
inc
arpl
jl
sub
xchg
mov
cmpsb
jg
and
das
push
rolb
fwait
pop
in
inc
push
mov
nop
sar
cmp
mov
lret
test
mov
or
xchg
mov
add
jns
sub
rcr
ret
jl
mov
sbb
iret
xchg
aas
and
cmp
iret
jmp
into
sub
and
imul
xor
adc
cmp
jbe
rcr
addb
sub
mov
inc
add
inc
out
inc
bound
cmp
ret
add
fwait
cmp
loope
mov
push
jmp
stos
and
cmp
cltd
scas
stc
push
popa
sti
dec
cmpl
scas
jge
add
or
or
test
mov
xchg
pop
mov
clc
push
sub
xor
les
cmc
or
cmpsl
sbb
in
fcoms
mov
pop
in
cs
xchg
mov
push
iret
repnz
in
test
add
xchg
sbb
push
das
in
cmp
or
scas
addl
dec
rorb
bound
mov
rorl
clc
sbb
xor
orb
jl
sub
jb
or
les
mov
cmp
insb
fdiv
xchg
sbb
les
out
cwtl
imul
push
xchg
pop
sub
inc
int
pop
test
jns
xlat
and
and
and
lcall
mov
hlt
out
stos
xor
mov
aam
aad
jp
lret
fbld
cmp
movsl
and
mov
add
jecxz
mov
sub
ret
mov
pushl
movsl
orl
jmp
xor
shl
lahf
mov
sbb
cwtl
inc
xchg
mov
pop
jp
shr
dec
mulb
add
gs
xchg
dec
push
lock
inc
adc
enter
adc
pop
mov
test
lcall
sub
test
test
xor
push
dec
mov
adc
fistps
lret
adc
addl
jmp
mov
xchg
fs
fstl
lahf
shlb
data16
xchg
xor
xor
fsubl
sbb
les
mov
movsb
and
bound
sbb
xchg
mov
or
dec
adc
arpl
add
aas
ffreep
jecxz
and
push
xchg
cmp
pop
dec
mov
mov
sub
jne
xchg
cli
jbe
aam
inc
adc
xlat
xchg
dec
xor
jmp
repz
negb
xor
jns
lods
inc
inc
popa
pop
pop
ret
mov
or
pop
mov
js
jae
shlb
mov
dec
mov
int
sub
pop
out
jne
mov
popa
ss
ljmp
add
add
clc
cmp
std
push
sub
sbb
inc
inc
dec
pusha
mov
lret
inc
push
ljmp
pop
aam
sub
test
pushf
sub
and
sbb
pmullw
stos
movsb
fnsave
pop
adc
mov
xchg
aaa
inc
sub
lret
daa
dec
add
or
dec
dec
mov
mov
cmp
clc
sbb
insb
mov
mov
lds
xchg
mov
lock
jmp
jecxz
dec
and
mov
dec
jl
repnz
xchg
dec
add
mov
and
arpl
add
jecxz
popf
adc
push
jg
lods
stos
cmc
ret
rcrl
subb
add
out
insb
mov
scas
mov
jne
mov
sahf
in
mov
jg
test
push
es
push
sub
xor
movsl
dec
push
in
mov
test
aas
mov
lret
fidivs
and
test
and
orb
jecxz
cmc
mov
push
sub
js
in
enter
sub
adc
pop
cmp
mov
pushf
out
lea
data16
xchg
pusha
push
xchg
andb
push
stos
scas
jl
pusha
pop
push
mov
out
jb
inc
dec
sub
and
mov
mov
cwtl
fisubl
leave
repnz
and
pop
pop
inc
addr16
repz
aam
gs
dec
push
or
push
lock
xchg
xlat
sub
cltd
or
xchg
xchg
xchg
add
inc
mov
scas
mov
pop
repz
ds
pop
in
es
test
mov
fwait
push
sub
clc
fnstsw
insl
imul
jae
lret
fwait
cmp
loopne
imul
sbb
pop
loopne
rclb
popf
xlat
jg
cmp
mov
test
push
pop
pop
leave
xor
dec
add
js
dec
inc
or
loop
ret
and
xlat
jmp
arpl
int3
push
mov
aas
xlat
xor
dec
cmp
daa
xchg
fcompl
sbb
inc
xchg
ljmp
xchg
cmp
inc
xchg
bound
mov
pop
fsubl
imul
cmc
les
lds
shll
into
mov
mov
scas
xor
xchg
pop
inc
sub
pop
jns
sub
mov
adc
imul
insb
fst
lea
pop
aad
push
mov
inc
scas
xor
test
ds
es
add
jl
sbb
inc
pop
adc
ss
mov
or
push
mov
es
fwait
mov
push
or
testb
sub
adc
cmpb
les
xchg
xchg
pop
cmp
add
jne
mov
out
xchg
int
pop
mov
iret
stc
sti
pushf
jmp
mov
popa
push
ret
or
mov
movsb
sub
cld
jecxz
and
test
xchg
int
jne
in
fmulp
inc
jno
sub
inc
push
jne
inc
dec
cltd
dec
sub
jl
mov
jg
mov
aad
lods
sub
ljmp
lock
adc
cmpsl
mov
es
in
popf
rcrb
cs
in
leave
stc
fnstcw
adc
in
mov
push
mov
and
int3
push
shlb
xor
jmp
add
fdivl
aaa
roll
add
insb
rorl
sub
or
scas
pushf
mov
and
scas
das
push
shl
cs
mov
stos
aam
adc
mov
push
xor
loope
rorb
lret
cmpsb
cmp
aaa
sbb
adc
adcb
pop
pop
outsb
enter
sub
sbb
or
sub
jnp
lret
shr
es
xor
fisubrl
push
add
ss
dec
lock
mov
aam
and
bound
rcr
pusha
push
shll
sub
mov
stos
adc
int
lods
pop
cmp
notb
dec
cmp
cmp
arpl
dec
mov
mov
lahf
jae
ljmp
and
xchg
aam
jnp
xlat
and
pop
jnp
or
stos
and
mov
xlat
push
sbb
xor
sarb
sbb
pop
push
sbb
stos
sbb
mov
mov
or
jae
cmp
inc
scas
mov
sbb
cmp
icebp
lahf
rcrb
xchg
aas
sub
test
loope
addl
dec
dec
sub
ja
mov
bound
movsl
mov
push
shll
or
insb
aad
mov
out
leave
scas
popa
aaa
movsl
mov
jne
cmp
mov
push
jno
fstl
add
jmp
mov
mov
sbb
cmp
data16
arpl
push
imul
xchg
leave
jp
aam
lahf
nop
mov
jb
test
in
incb
je
mov
sbb
mov
mov
in
jle
pop
out
push
loopne
sub
dec
scas
cltd
and
fdivs
daa
push
dec
inc
cmpsb
sub
test
lcall
ljmp
pop
jmp
pusha
fs
test
pushf
mov
pop
insl
xchg
in
jmp
ja
push
mull
aaa
dec
xchg
fcmove
and
mov
add
mov
insb
jge
cmp
scas
icebp
test
stc
aam
add
dec
push
jmp
fcoms
pop
dec
cld
fwait
je
mov
loopne
mov
hlt
divl
or
lcall
ss
cmp
rcrl
mov
mov
sahf
jno
into
sub
test
inc
aas
mov
mov
mov
jae
jb
xor
sub
sti
jmp
jmp
enter
mov
mov
and
sbb
jbe
adc
jb
push
or
mov
or
mov
sti
mov
iret
ficoml
addr16
cmp
xor
sbb
sub
xor
ja
pop
mov
xor
fdivp
inc
cmpsb
pop
push
into
pop
cli
inc
icebp
ljmp
mov
jbe
repnz
inc
pcmpeqb
insb
xlat
lahf
push
stc
shll
in
dec
add
lods
xchg
xor
aam
adc
or
sub
sub
std
mov
add
mov
pop
dec
in
into
in
add
push
xchg
pop
add
cmp
sbb
mov
call
sbb
cmp
and
mov
sti
pop
xlat
out
out
push
addr16
xchg
mov
adc
imul
inc
pushl
add
je
das
mov
andl
push
xchg
add
mov
sub
fs
cmp
xchg
xchg
inc
mov
lahf
jbe
add
jmp
insl
jle
lods
stos
add
div
bnd
lds
test
pushf
int
arpl
ja
into
mov
lret
xchg
push
sub
mov
inc
fiaddl
and
push
arpl
iret
add
test
adc
ss
inc
repnz
lcall
ja
mov
jbe
adc
and
mov
sbb
xor
mov
gs
push
inc
cmp
fiaddl
je
adc
sbb
xchg
nop
int3
mov
repz
mov
xchg
ljmp
jmp
les
adc
xor
sub
cli
lret
out
mov
test
mov
adc
xor
jg
movsb
fs
scas
inc
pop
cmp
ret
mov
incl
inc
fisubl
cmp
xchg
xchg
test
mov
sti
xor
xchg
test
jbe
clc
push
mov
repz
and
jb
call
bound
sub
popa
mov
jo
test
stc
stos
mov
adc
fldt
int3
sub
nop
jge
cltd
sbb
test
and
lret
push
sub
sbb
rcrl
fwait
pop
imul
or
sub
aaa
adc
push
mov
dec
add
arpl
mov
lret
push
add
sub
pop
pop
sbb
sbb
jp
push
addb
push
call
cmp
mov
or
pop
or
ret
aas
mov
sbb
aad
cltd
mov
adc
jle
mov
mov
xchg
fdivs
mov
add
fidivrl
mov
out
push
fistpll
sub
sbb
outsb
add
pushf
fldenv
imul
scas
xchg
push
movl
push
mov
dec
dec
or
sbb
cs
ds
push
frstor
push
cwtl
and
push
dec
movsl
pushf
cs
jge
test
mov
cltd
scas
add
popf
adc
mov
cld
addl
dec
jb
sub
add
pop
test
iret
jecxz
inc
mov
arpl
mov
imul
sbb
cltd
imul
xor
nop
jnp
arpl
inc
mov
ljmp
mov
mov
test
inc
mov
sbb
cmp
inc
in
adc
mov
lcall
mov
jecxz
aad
imul
cmp
cmpsb
lret
or
cmc
mov
xchg
mov
movsl
frstor
sub
fldl
mov
sahf
orl
add
sbb
and
sbb
loopne
xor
jnp
cmp
jnp
dec
mov
push
movsb
jge
pop
cs
bound
pop
ss
mov
cli
les
jo
cld
inc
and
test
cmpsl
fadds
push
push
test
loop
fincstp
cmpsb
push
sub
mov
fwait
sub
push
push
scas
into
fisubl
pushf
jns
mov
inc
clc
pop
lea
jnp
lret
xor
ret
jbe
and
mov
xchg
pop
ret
ss
jnp
fldl
xchg
cmp
push
jb
ret
int
stos
ret
ret
sti
jae
push
int3
fidivrl
fadd
test
cld
lods
loopne
and
cld
mov
dec
adc
adc
es
or
jns
arpl
mov
es
and
stos
adc
out
adc
sahf
push
je
bound
lea
pop
fwait
add
adc
cs
enter
loopne
push
and
imul
push
sahf
jmp
mov
ja
in
mov
sub
mov
lods
pop
daa
ret
leave
sbb
dec
sub
inc
scas
push
fiadds
pop
out
mov
mov
pop
mov
gs
dec
dec
mov
mov
pop
dec
rcrl
adc
dec
stos
or
push
push
add
and
mov
fisttpl
aaa
push
jecxz
sub
minps
lret
sahf
mov
gs
sub
fnstsw
loop
push
popf
ds
dec
or
or
loop
in
bound
in
xchg
mov
loop
dec
out
cmp
xchg
cmp
loopne
aam
cld
fwait
jge
sbb
mov
cmpsb
out
dec
xor
xchg
dec
call
stos
and
loopne
adc
dec
mov
add
or
add
aaa
insb
test
jns
ret
ljmp
int3
fimuls
adc
mov
mov
xchg
fisttps
leave
or
mov
mov
push
loope
pop
xchg
push
jge
sbb
adc
adcb
mov
push
cmp
jb
fadd
push
outsb
mov
or
push
dec
lret
cltd
xchg
pop
adc
jecxz
out
fisubs
stos
pop
xlat
mov
mov
clc
push
dec
mov
fsubrl
mov
dec
aad
mov
es
leave
cmp
mov
repz
lods
std
mov
sti
push
fisttpll
icebp
push
insl
fs
ja
sarl
pop
mov
jno
sub
bswap
scas
sbb
adc
fs
xchg
ljmp
jnp
push
or
dec
cmp
pop
pop
mov
xlat
stc
outsl
sub
cmp
ds
mov
std
roll
in
cmp
sbb
add
jbe
jo
iret
inc
pop
mulb
and
push
jnp
jo
scas
push
mov
mov
push
dec
add
loope
dec
shrl
ror
in
js
sbb
mov
scas
xchg
data16
or
xchg
mov
clc
ljmp
or
lret
jg
daa
in
out
ds
std
mov
mov
mov
adc
push
push
fucomi
inc
jo
push
xor
inc
inc
adc
mov
subb
cmc
xor
test
rclb
push
test
enter
out
fxch
sub
iret
pop
ja
dec
lods
xchg
inc
pop
xchg
mov
jmp
xchg
and
mov
ret
into
jmp
das
std
movsl
out
aaa
sub
mov
pop
xor
js
push
orb
ud2
add
loope
std
lods
xchg
aam
or
je
mov
ljmp
fldt
push
lahf
ljmp
cmpsl
lret
mov
add
iret
in
sbb
test
ds
repz
outsb
cld
lods
fstl
mov
dec
sbb
leave
cmc
pmulhw
push
sub
mov
rcll
cmpsb
mov
sub
popa
imul
xcrypt-cbc
cmpsl
xchg
popa
insb
jg
test
fbstp
je
ss
fdivl
xchg
xchg
or
in
and
orl
popf
and
aaa
ud2
mov
fldt
outsb
fdivs
xchg
in
xchg
cli
pop
adc
test
sub
or
inc
xor
mov
jne
test
lret
dec
lcall
icebp
test
mov
adc
gs
inc
xor
sbb
in
enter
xor
addr16
icebp
push
adc
cmp
push
enter
cmp
imulb
jl
gs
dec
jecxz
jecxz
and
xchg
pusha
stc
inc
sbb
and
mov
sahf
or
cmpl
jae
push
mov
aas
bound
leave
popa
inc
into
adc
adc
adc
pushf
or
outsl
lea
add
xor
inc
iret
loopne
pop
stos
stc
mov
aas
adc
out
adc
add
push
lret
subl
or
sbb
fld
add
xlat
inc
rcll
jg
sub
in
pusha
inc
inc
iret
je
frstor
and
pusha
je
mov
sub
fnstcw
sbb
bound
pop
dec
adcb
mov
adc
push
out
ljmp
pop
int3
sbb
mov
mov
sahf
xchg
or
movsl
loopne
cmp
mov
add
leave
push
arpl
mov
out
jmp
ss
push
test
adc
jmp
push
or
in
pop
mov
push
out
outsb
and
xor
sbb
les
pop
adc
mov
push
aaa
adc
inc
aas
jmp
hlt
mov
int3
xor
int3
mov
cmp
xchg
jge
lods
popf
lret
jbe
jl
sbb
push
data16
jnp
add
add
or
or
dec
mov
mov
push
sub
sub
sub
jge
clc
xchg
popf
mov
jb
les
ljmp
xchg
pop
push
aaa
imul
xor
and
inc
mov
xchg
fs
out
mov
fcmovnb
mov
dec
movsl
daa
insl
inc
es
ret
dec
pop
fdivl
std
pop
mov
mov
dec
int3
enter
int3
stc
bound
ds
mov
xorl
mov
repnz
out
test
lods
mov
add
xorb
out
sub
jae
nop
std
sti
lock
add
push
sbb
jo
or
lock
sub
xlat
adc
popf
sub
les
repnz
adc
fdivs
sbb
repz
adc
popf
inc
adc
jg
xchg
lahf
add
mov
nop
mov
inc
add
loop
outsb
stc
movsb
sub
push
in
bound
es
dec
xchg
pushf
sub
scas
test
xchg
cmp
dec
andl
pushf
lcall
gs
lods
into
shrl
nop
iret
cltd
mov
das
repnz
sbb
aaa
or
xchg
push
shl
xlat
aaa
xchg
andl
fs
shrl
cmp
xchg
xor
arpl
ja
inc
jmp
inc
test
rclb
adc
aas
pushl
pusha
pop
adc
inc
movsb
jo
sub
pop
popa
push
enter
lret
or
push
add
mov
xor
loop
xchg
sub
lds
sbb
test
mov
jno
push
outsl
lcall
or
add
push
sub
or
lods
sbb
pop
int
and
xchg
cvtpi2ps
push
cmpsb
int3
inc
popf
rorb
push
or
ret
enter
pop
mov
decl
jl
xchg
or
mov
jp
fildl
int3
add
sti
stos
push
adc
jge
push
xchg
cmp
jl
mov
sbb
xchg
aaa
test
nop
outsb
sub
pop
test
mov
sub
ss
lods
sub
es
jle
les
pop
inc
icebp
bound
lahf
jnp
incl
lret
mov
jp
cmp
mov
gs
xchg
pop
inc
rcrb
inc
stos
xchg
pop
xchg
mov
cmp
cmpsl
mov
shlb
addb
clc
jp
repnz
movzbl
loop
adc
xchg
mul
pop
mull
mov
xor
stos
mov
aam
mov
das
pop
or
add
cmp
int3
jecxz,pn
dec
xor
xchg
xchg
cmp
shlb
rorb
add
inc
cmp
fs
fcomi
lahf
push
movsb
and
adc
or
out
pop
jge
movsl
lahf
fsts
mov
dec
xchg
xor
in
imul
xchg
cmc
pusha
push
stc
or
mov
mov
in
pop
adc
mov
les
xor
xor
sub
loopne
or
stos
test
jne
inc
test
inc
fs
cmp
xchg
mov
add
dec
lcall
test
xchg
lds
test
lahf
fwait
out
idivb
and
inc
popa
enter
inc
scas
xlat
rorb
outsl
pushf
mov
inc
fs
and
mov
xchg
pop
dec
mov
adc
bound
push
dec
inc
mov
int3
lret
adc
dec
xchg
pop
gs
shll
mov
int
sar
sub
jo
sub
dec
or
adc
shrb
xchg
cmc
andb
xchg
stc
stos
mov
stos
orl
xchg
xlat
mov
sbb
xchg
mov
loope
mov
fs
lcall
clc
sti
dec
cwtl
jae
adc
int
jo
ljmp
por
sbb
js
xchg
jmp
push
divl
call
fistpll
cmp
xor
xorl
in
sub
push
xchg
sbb
std
test
push
out
xchg
mov
sbb
or
loope
aad
ljmp
movsl
icebp
daa
data16
xchg
jmp
es
or
dec
fistpll
cmp
leave
loop
dec
cmp
dec
fcmove
pop
jns
xchg
xchg
sbb
pop
push
addr16
dec
fs
xor
push
xor
pop
mov
in
cmp
sbb
out
cmpsl
dec
sub
out
icebp
iret
jp
divl
loopne
jle
pop
mov
push
decb
fisubrs
mov
pop
xchg
adc
inc
sti
xchg
mov
xor
xor
lods
testl
or
sub
pop
imul
and
aaa
imul
xorl
addr16
lock
lret
push
outsl
xchg
mov
xor
or
sti
inc
fsubrl
push
dec
lret
je
lcall
sub
jecxz
insb
outsb
add
aad
or
pop
outsl
loopne
in
cmp
xchg
xchg
dec
in
sbb
arpl
scas
xchg
push
int3
leave
call
imul
sbb
aas
es
lcall
xchg
bound
mov
sbb
outsl
cvtps2pd
rolb
inc
or
mov
inc
pop
int3
shrl
mov
mov
call
imul
add
lea
mov
out
inc
lods
fs
mov
leave
lods
out
ljmp
push
lds
shlb
push
xchg
pop
cmpsl
rcll
insl
leavew
adc
pop
out
and
and
aaa
inc
icebp
ss
pop
xlat
daa
push
lret
push
sub
cmp
lret
out
push
or
or
out
mov
and
popf
pop
test
mov
mov
mov
je
mov
xchg
cmpsb
xor
and
addr16
addr16
pop
popf
ja
fcmovnb
and
jg
lods
aaa
cwtl
femms
ljmp
lahf
ljmp
or
mov
pop
fwait
jmp
xor
cmp
mov
int
subl
outsl
pushf
lock
pop
mov
ss
xor
insl
loop
ret
cmp
fiadds
sub
mov
inc
push
sbbl
out
mov
cmp
shl
or
dec
cmp
inc
pop
pop
sbbb
pop
fsts
icebp
mov
lret
xlat
out
ficompl
outsb
iret
cmc
dec
stos
pop
dec
pop
push
js
sbb
test
bound
testl
shll
cld
fs
mov
sbb
jbe
jno
push
rol
hlt
fcmovne
imul
pop
fdivrl
leave
orb
pop
xor
and
xchg
scas
xor
mov
pop
push
fs
ficompl
pop
jo
lret
sub
jbe
dec
push
dec
ret
add
and
mov
pop
jle
cmp
lret
roll
jnp
cmovge
mov
and
jo
cmp
es
xlat
scas
pop
cwtl
outsl
imul
inc
pop
mov
lock
orl
imul
lahf
jp
mov
inc
add
jmp
popf
and
out
or
push
mov
jge
sub
insl
out
fldt
jecxz
mov
je
inc
stos
test
gs
neg
pop
push
xchg
push
in
push
cld
sbb
mov
clc
shll
mov
sub
shll
and
faddl
sarl
inc
xchg
push
xchg
jecxz
add
out
test
fmull
cwtl
push
lods
pusha
mov
add
pop
jmp
cs
outsb
cltd
push
cmpsl
push
rorl
test
pop
stos
adc
mov
jae
mov
fwait
cmp
scas
mov
faddp
aam
into
cmp
pop
pop
push
cmpsl
arpl
clc
pop
addr16
lret
ljmp
and
push
pop
outsb
xor
dec
mov
add
outsl
jb
test
pop
or
fisubs
add
test
cli
loope
mov
es
xor
xor
ret
xor
and
std
lcall
stc
out
sub
mov
pop
jl
movsl
mov
xor
mov
xor
xor
push
daa
cmc
popa
movsl
stos
adc
lds
dec
loopne
test
push
mov
sub
inc
test
mov
sub
jae
dec
std
repnz
push
insl
loope
iret
out
mov
in
inc
xorb
xchg
cmc
out
out
mov
or
test
addl
pop
test
mov
mov
fwait
repz
lcall
mov
or
stc
and
cld
jmp
xchg
test
xor
sub
js
lods
in
sbb
ljmp
mov
dec
lods
inc
call
jl
xchg
jg
test
call
mov
xchg
insb
nop
stos
and
xor
fsubrs
sarb
mov
jb
push
mov
add
data16
enter
dec
mov
sbb
hlt
xlat
pop
xchg
cmp
int
cmp
addr16
lods
cmpsb
mov
aad
sbb
movsl
clc
stos
xlat
mov
aaa
sub
loopne
cld
mov
cltd
test
ds
imulb
dec
xchg
lods
fdivs
cltd
xchg
fcmove
sbb
ss
mov
lahf
dec
mov
aaa
mov
xchg
jmp
jbe
mul
hlt
and
xor
sub
sbb
pop
aad
jge
push
das
xor
ret
cs
xchg
cmpsl
jns
xlat
leave
daa
sahf
mov
ljmp
inc
ja
pop
incb
lret
test
dec
inc
repz
movsl
sub
mov
aaa
in
imul
jp
adc
cwtl
test
mov
pushf
popl
mov
ret
not
shll
add
pop
mov
gs
add
stc
pop
sub
popf
inc
call
mov
xchg
and
push
pop
xor
hlt
pusha
add
sarl
sub
inc
push
jmp
jb
andl
adc
mov
mov
lahf
lea
les
adc
xor
sub
enter
jmp
inc
std
adc
sarl
lods
push
adc
push
adc
aaa
jmp
in
push
jl
adc
xchg
jno
inc
add
loop
je
iret
mov
test
add
stos
lret
jge
xchg
jae
xchg
aad
dec
dec
pop
aam
jo
cmp
outsb
loope
cmpsl
pop
sub
inc
dec
ja
fsubrl
aad
adcb
inc
push
les
push
daa
xchg
es
or
push
fldenv
das
and
daa
int
lea
jmp
mov
xlat
std
cs
cmp
popf
sbb
movsb
xchg
call
add
mov
or
inc
cld
fmul
mov
repz
xor
inc
xchg
lret
in
popa
cmc
mov
add
push
lods
push
loopne
scas
call
cvttps2pi
xchg
mov
das
shll
dec
out
push
stos
fcompl
or
push
ret
fnstenv
mov
cmp
out
into
sti
addr16
mov
push
gs
pop
les
lahf
ficoml
popf
xchg
push
sub
das
dec
setle
imul
scas
outsb
aaa
mov
xchg
idivl
hlt
mov
repz
scas
push
and
loop
decl
inc
push
stc
cmpsl
cmp
ret
add
sar
push
sbb
dec
inc
xchg
push
mov
test
cmpsl
sbb
test
xor
out
jne
xchg
lds
ret
ret
or
sub
pop
pop
rorl
cwtl
dec
les
pop
fwait
loope
push
push
out
push
dec
mov
mov
nop
and
adc
outsb
ret
adc
mov
mov
mov
add
ss
fldenv
lods
pop
add
out
jmp
ss
add
dec
push
cltd
jecxz
pop
fsts
bound
hlt
out
xor
pop
add
je
add
push
xor
test
inc
sub
add
pop
dec
aaa
lock
and
movsb
jo
outsb
scas
sbb
out
sub
jge
outsl
jecxz
xor
push
inc
push
jecxz
iret
loope
adc
push
test
mov
inc
xor
js
cmp
rcrb
fcmovnu
out
mov
stos
int3
add
mov
mov
jg
mov
xchg
dec
mov
and
inc
pushf
ss
movsl
push
cmc
dec
pop
es
push
xchg
mov
mov
pop
jmp
mov
icebp
push
clc
inc
and
cltd
test
push
lods
mov
pop
xor
lods
movsl
out
or
jb
sbb
fs
pop
add
gs
adc
inc
mov
xchg
das
fsubrl
imul
cmp
push
das
ret
lock
aaa
inc
popf
cmpsl
and
nop
dec
push
dec
shrl
cmp
mov
pop
jb
cmp
fs
and
fistpll
push
nop
sbb
xor
and
or
sbb
sub
dec
aas
jecxz
sub
and
dec
adc
mov
orl
push
dec
fcoml
out
ja
jge
cmp
push
sbb
adc
add
xor
sub
cmp
aaa
cld
lods
mov
ficoml
sbb
xlat
sub
xchg
jno
gs
xchg
sub
hlt
out
leave
aam
aaa
xchg
push
or
jnp
mov
rcrl
push
push
aam
cli
out
mov
xlat
fcoml
movsb
mov
addr16
mov
pop
lret
adc
mov
pop
loopne
mov
mov
imul
fdivrl
mov
cmp
mov
lcall
sub
mov
les
fistl
mov
add
dec
sbb
popf
sub
mov
adc
lock
das
pop
cli
in
jmp
rcll
or
lock
nop
mov
in
cmp
aaa
xor
jle
dec
icebp
or
add
fstpl
mov
and
xor
loope
dec
cmp
inc
sbb
insb
fistps
loopne
cld
iret
sahf
dec
leave
aaa
and
fcomps
sub
int3
cmpsb
pop
mov
dec
xchg
sub
pop
ror
scas
add
cli
xchg
test
stc
das
clc
inc
cmp
faddl
neg
xor
pop
sbb
fistpll
pop
cmp
sbb
push
int3
cli
dec
ret
cmp
dec
mov
push
aaa
mov
or
sti
popf
add
sub
xchg
test
add
jns
push
stos
add
cltd
clc
cwtl
pop
adc
or
call
xor
mov
adc
sahf
jne
dec
rorb
int
call
add
les
cmpsb
fdivp
pop
pop
mov
or
add
adc
movsb
inc
aad
fimuls
cs
mov
lods
loop
push
or
ds
cmpl
adc
loop
adc
notb
xchg
sub
shlb
mov
mov
mov
mov
xorl
sahf
loop
lock
into
push
push
xor
dec
lea
cmp
sahf
mov
and
hlt
pop
loope
ds
outsl
ret
stc
dec
aad
push
pop
cli
imul
jge
mov
lcall
jbe
imul
jle
int3
movsb
dec
jbe
inc
fs
je
pop
pop
lret
xor
pop
lods
adc
ljmp
jbe
movsb
or
push
icebp
loopne
add
xchg
divb
mov
pop
adc
in
pop
cwtl
jecxz
cmpsl
inc
cli
pop
lret
adc
sub
inc
cwtl
idivl
je
mov
or
mov
dec
imul
out
ret
add
ss
loopne
int
or
or
data16
in
cmc
push
addr16
fistps
int3
cli
lret
mov
outsb
mov
mov
lds
mov
js
xchg
lret
pop
out
push
scas
movsl
or
pusha
and
movsl
enter
fcmove
aam
push
leave
pop
pop
out
adc
and
pop
mov
fimull
pusha
ljmp
xlat
insl
popa
insb
inc
in
out
int
push
nop
adcl
mov
jbe
mov
pop
ja
pop
mov
push
or
mov
adc
mov
repz
dec
mov
leave
dec
pop
out
cmp
xor
mov
xor
cmp
incl
cli
add
mov
push
int
shl
push
push
in
hlt
inc
test
sarb
mov
in
sub
ja
jp
movsb
das
data16
ret
adc
push
mov
mov
or
cmpsb
jb
adc
iret
hlt
lcall
repz
or
stos
adcl
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
in
jl
xor
out
xchg
add
adc
push
inc
aam
stos
mov
inc
jmp
dec
mov
es
inc
adc
xchg
add
cmpsb
fidivrs
push
divl
jmp
ss
push
pop
pusha
insl
mov
gs
jle
mov
push
lods
mov
adcl
mov
sbbl
gs
mov
mov
adc
sub
jg
sbb
mov
dec
in
mov
hlt
jecxz
mov
xor
iret
bound
outsl
into
jns
mov
mov
push
std
inc
sub
cmp
jge
pop
daa
xchg
sbb
xchg
shlb
fnstenv
jae
push
divl
cmp
ljmp
aad
repz
mov
mov
cltd
arpl
cs
orb
sub
pop
add
dec
xchg
cmpsb
int3
pop
aad
mov
mov
inc
iret
cmp
out
sbb
lock
fstpl
lret
in
rol
cltd
je
mov
pop
icebp
aam
adc
mov
push
cltd
hlt
mov
sbb
mov
and
cmp
and
mov
inc
pop
ss
mov
repz
stc
addr16
adc
movsb
mov
cli
xor
inc
imul
push
subl
jmp
jns
or
add
add
add
add
inc
xchg
rorl
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
enter
enter
push
insl
