sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
jae
mov
pop
leave
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
mov
call
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
mov
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
cmp
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
testb
je
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
mov
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
pushl
mov
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
pushl
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
call
mov
push
call
pop
mov
call
push
mov
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
cmp
jne
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
cmpl
je
pushl
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
pop
xor
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
andl
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
xor
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
sub
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
cmp
je
cmp
je
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
mov
push
push
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
push
lea
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
lea
call
lea
call
lea
call
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
movl
movl
movl
cmpl
jge
cmpl
jne
mov
test
je
push
call
pop
mov
mov
push
call
lea
lea
movl
call
lea
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
mov
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
lea
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
mov
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
push
push
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
mov
lea
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
pushl
movl
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
call
mov
pop
ret
push
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
cmp
lea
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
lea
lea
call
test
je
xor
cmp
mov
jne
mov
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
lea
call
mov
cmp
jne
mov
mov
mov
push
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
jmp
mov
jmp
mov
push
mov
mov
call
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
jne
xor
cmp
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
mov
test
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
lea
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
mov
mov
loop
cli
push
add
call
add
add
xchg
fimuls
push
add
imul
add
out
cmc
add
icebp
cmpsl
movl
xchg
xchg
hlt
jecxz
aam
lret
andb
loope
add
loope
repnz
push
mov
add
push
push
lea
push
push
call
push
xchg
mov
add
jle
lret
mov
add
push
enter
adcl
mov
add
add
mov
jp
add
add
arpl
add
add
in
add
push
add
jle
fcomi
xchg
stos
add
add
pop
popl
push
push
lea
push
push
push
push
call
test
jge
add
add
stos
add
add
jno
lahf
jno
pushf
aad
push
add
add
add
add
add
add
add
add
lret
mov
add
int3
xchg
add
add
pop
lock
pop
push
push
push
call
add
aad
add
add
enter
scas
subb
mov
clc
mov
add
stc
add
add
xchg
push
push
push
push
lea
push
call
mov
add
add
add
add
add
pop
mov
mov
add
add
jns
call
add
add
sub
pop
call
push
push
push
call
add
add
enter
ret
out
stos
popl
in
add
insb
ffreep
add
add
add
mov
pop
add
mov
push
imul
add
loope
fiadds
jle
mov
pop
mov
repnz
sub
pop
call
push
lea
push
call
arpl
push
jne
mov
mov
mov
jge
mov
test
add
add
add
add
jno
add
add
bound
cmpsl
add
push
add
sti
xchg
add
jge
pop
add
jmp
shlb
xchg
sarl
xchg
add
ret
mov
in
clc
lcall
push
add
add
call
lcall
repnz
add
push
xchg
add
imul
add
mov
fsubr
test
add
scas
add
pop
mov
iret
mov
add
mov
jl
test
jmp
in
clc
lcall
mov
push
push
lea
push
lea
push
push
call
add
pusha
jmp
add
test
arpl
rclb
add
xchg
xchg
mov
push
mov
add
into
cwtl
add
add
mov
add
lcall
pop
hlt
push
push
push
lea
push
push
push
push
call
adcb
aam
add
mov
je
add
out
add
cli
jmp
mov
push
pushf
add
add
std
neg
jecxz
add
scas
xchg
stos
lret
add
add
xorl
add
lods
scas
cmpsl
fwait
pop
add
lock
test
cmc
test
lcall
pop
in
push
push
push
lea
push
push
push
call
mov
add
push
into
outsl
enter
add
pop
mov
add
jp
push
testb
ja
cltd
add
cltd
arpl
add
popf
mov
lcall
ret
add
add
add
push
push
push
push
push
push
push
call
andl
add
add
test
xchg
jb
mov
stos
test
xchg
pop
add
repnz
stos
add
add
lcall
pop
add
repz
add
lea
push
xor
add
sub
sub
lea
xor
pop
sub
not
pop
push
push
push
push
push
push
push
push
call
mov
add
fiadds
mov
push
in
pushf
add
mov
add
outsl
add
push
arpl
cmpsl
clc
add
add
add
pop
mov
mov
test
mov
bound
aam
test
mov
insb
xchg
add
loopne
lcall
jne
push
push
push
push
push
call
add
cli
incb
add
push
in
fidivl
add
into
lahf
in
add
iret
jb
push
mov
test
sub
pop
call
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
imul
mov
push
stc
add
add
imul
pusha
add
jge
add
in
jne
sub
pop
mov
movl
push
push
push
push
lea
push
push
push
call
out
push
les
faddl
je
cmc
pop
jge
nop
push
mov
add
popf
add
lahf
pop
out
int3
cli
stc
mov
xchg
mov
add
stos
mov
add
fldcw
mov
add
sbbb
in
lea
push
push
push
push
push
lea
push
lea
push
push
call
icebp
push
repnz
gs
mov
mov
add
fstpt
mov
mov
xchg
mov
mov
fiaddl
xchg
sahf
add
addl
jnp
leave
cmpsb
add
loop
leave
fisubl
add
std
jno
cld
add
add
add
add
fisubrl
add
test
stos
sarl
popf
add
add
popf
add
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
lds
add
add
data16
jo
jbe
add
rcrl
out
add
mov
add
mov
stos
jecxz
add
push
add
jmp
push
add
add
add
jecxz
push
int3
test
sti
out
add
test
test
push
add
sub
pop
pushl
pushl
push
push
push
push
lea
push
push
push
push
call
add
stos
lahf
repnz
mov
jo
add
add
add
test
add
add
std
pop
add
pop
fucom
roll
lcall
push
pusha
jbe
ja
add
add
sub
pop
call
pushl
push
push
lea
push
push
lea
push
lea
push
call
xchg
mov
add
add
lods
loopne
add
push
addl
lahf
fwait
mov
add
add
bound
add
lods
faddl
nop
out
xchg
add
js
add
incb
flds
mov
push
mov
mov
enter
fcmovnb
add
lret
xchg
add
movb
test
aam
lcall
pushl
push
lea
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
jo
addl
add
int
add
add
add
add
xchg
push
in
shll
jmp
pop
fadd
add
add
add
arpl
pop
call
push
push
push
and
add
xor
dec
sub
sub
pop
xor
ror
add
pop
push
push
push
push
lea
push
call
aad
shlb
push
add
add
add
push
popa
test
jne
add
add
add
add
mov
test
add
add
jle
jne
jns
roll
add
popa
add
leave
add
je
sub
pop
pushl
push
push
push
lea
push
push
push
lea
push
push
push
call
pop
ficoml
add
jo
loopne
out
sbbb
xchg
add
mov
add
in
in
arpl
pop
fxch
push
pop
add
mov
push
add
stos
imul
call
int3
roll
mov
fwait
in
xchg
int
pop
in
add
into
xchg
andl
fdivr
lcall
shll
add
push
push
add
push
sub
add
shr
sub
ror
shr
pop
dec
xor
pop
push
push
push
push
call
jb
mov
add
faddp
test
xchg
add
xchg
fs
iret
stc
add
scas
in
frstor
add
sbb
add
test
pop
shr
jmp
add
add
ljmp
push
jnp
mov
cmpsl
jp
add
not
mov
cli
mov
in
lock
lcall
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
imul
addr16
add
jl
jns
xchg
add
add
out
mov
ja
add
add
mov
sub
pop
push
push
push
push
push
push
push
push
push
call
les
loopne
les
add
push
push
stc
jno
push
in
add
loope
mov
push
data16
add
add
jmp
add
xchg
decb
call
loope
fildl
add
mov
add
xchg
cwtl
sub
pop
call
mov
push
push
push
push
call
mov
cmpsb
xchg
add
add
rorl
cmpl
pop
add
add
sahf
mov
xchg
add
mov
add
add
xchg
xchg
add
roll
add
add
push
pusha
outsl
xchg
add
mov
jo
subb
pop
enter
mov
scas
sub
pop
push
push
push
push
lea
push
push
call
data16
add
add
ret
std
push
add
add
xchg
add
add
jmp
jle
mov
imul
sub
pop
mov
add
push
lea
push
lea
push
push
call
je
rolb
out
addl
add
scas
add
add
je
jge
add
bound
add
add
addr16
add
adc
mov
add
mov
aam
add
add
sub
pop
add
add
push
push
push
push
push
call
add
jns
add
xchg
add
sti
fildl
add
mov
jl
bound
add
fs
jno
add
jmp
loope
movb
in
rolb
rolb
add
add
jbe
test
sahf
addr16
lahf
sti
add
add
pop
mov
cld
cld
add
add
in
in
lcall
xor
mov
push
push
push
lea
push
call
jmp
mov
add
add
xchg
xlat
mov
stos
xchg
fcomp
add
add
mov
in
add
lds
xchg
mov
jo
add
in
lcall
jne
push
push
push
push
push
call
add
add
add
scas
stos
test
jo
scas
aam
jno
add
rcrb
add
xchg
jmp
jmp
addr16
imul
fwait
push
fnsave
out
add
inc
or
or
and
push
push
push
call
add
stc
add
in
pop
add
cltd
enter
mov
pop
mov
insb
pop
add
xchg
add
xlat
add
jp
add
mov
add
div
fs
sar
add
add
lret
add
add
in
call
push
lea
push
push
push
call
mov
out
mov
mov
add
add
add
cmpsl
add
mov
add
fxch
insb
add
mov
mov
push
push
add
mov
jo
cmpsl
nop
add
pop
add
shr
je
andb
in
add
sub
pop
add
push
push
lea
push
push
push
push
push
push
push
lea
push
call
push
push
jp
fsubl
jbe
add
mov
add
add
add
adc
add
test
add
pop
repnz
jns
add
imul
add
push
add
add
sub
pop
add
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
add
mov
mov
loopne
add
lds
jns
add
addl
add
add
add
lcall
mov
push
push
push
lea
push
lea
push
push
push
call
mov
loopne
cld
mov
add
mov
push
add
add
out
add
add
in
add
iret
out
call
jnp
les
add
call
xor
push
push
push
lea
push
push
push
push
call
scas
scas
fdivr
addb
add
jns
call
mov
leave
roll
scas
mov
popl
push
sahf
fidivrl
mov
add
xchg
mov
pushf
movsb
sub
pop
add
push
lea
push
push
push
lea
push
push
call
std
nop
add
flds
roll
pop
add
push
pop
in
add
add
pop
fsubrl
push
push
aam
jb
mov
icebp
add
add
test
cmpsl
xchg
in
in
add
mov
xor
push
lea
push
push
push
push
push
call
xchg
mov
lock
je
jl
bound
add
add
int3
pop
fldl
jae
lock
out
movl
add
imul
add
add
mov
mov
shl
stc
lea
add
out
sub
pop
sub
push
push
push
push
push
push
call
ret
add
add
lods
add
add
pop
add
add
mov
jp
add
add
out
mov
add
add
test
push
lret
add
add
mov
add
push
pop
mov
add
xlat
mov
call
pop
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
add
fnsave
push
add
add
add
add
sahf
jo
xchg
add
nop
je
cmpsb
fdivs
in
fdivr
lcall
movsb
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
add
push
add
pop
addl
add
movsl
mov
movsb
xchg
add
incb
add
sti
test
add
add
nop
xchg
out
in
fldl
push
push
push
push
push
lea
push
lea
push
push
push
call
popa
add
roll
fstpt
add
mov
ret
pop
jb
addb
add
add
add
add
xchg
mov
lcall
pop
hlt
add
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
out
jle
xchg
jle
add
test
add
in
jo
add
cltd
push
test
add
aad
mov
mov
cwtl
push
add
jecxz
ljmp
movsb
sub
pop
add
push
xor
not
rol
pop
add
push
push
call
loope
add
jmp
in
add
jae
add
add
data16
mov
xchg
add
lea
mov
add
scas
add
add
iret
pushf
cmp
out
in
clc
pop
mov
push
push
lea
push
call
xchg
mov
stc
jle
push
loop
add
fs
int3
add
rcrb
sarl
movsl
add
mov
cld
mov
sti
add
add
fmul
je
add
ja
add
add
mov
pop
xor
push
push
call
jbe
pop
add
add
out
cmc
add
imul
mov
in
xchg
add
add
pop
call
add
jno
flds
push
popa
fcoms
jmp
push
add
push
ljmp
pop
add
push
push
lea
push
lea
push
push
push
push
call
aad
mov
add
add
add
cwtl
pop
jp
mov
mov
movsl
pop
mov
jl
add
arpl
add
add
stos
mov
add
aad
mov
loope
scas
mov
add
mov
add
pop
mov
ljmp
in
mov
xor
push
sub
sub
pop
mov
xor
push
push
push
push
push
call
add
sbbb
jmp
negb
cltd
mov
mov
sti
add
mov
std
out
fildl
add
out
call
sub
pop
add
push
add
not
pop
add
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
stos
adc
scas
mov
roll
fldl
mov
add
mov
add
push
test
mov
jle
add
addl
push
mov
shrl
push
in
add
jns
stc
mov
mov
add
lea
push
mov
add
sti
out
add
add
lcall
fsubrs
push
stos
push
lea
push
or
not
add
ror
sub
rol
pop
dec
pop
push
lea
push
push
lea
push
call
add
add
mov
aam
add
test
add
jo
lock
lcall
mov
in
gs
add
add
xchg
xchg
add
outsl
add
add
sub
pop
pushl
push
lea
xor
pop
call
push
push
push
inc
push
and
add
not
ror
not
dec
sub
add
pop
not
rol
pop
push
rol
sub
pop
push
push
push
lea
lea
sub
pop
call
push
shl
pop
mov
push
push
push
push
call
add
mov
lret
add
gs
add
lret
add
ljmp
add
add
mov
mov
jl
in
lock
push
push
add
pop
push
push
not
inc
lea
xor
pop
mov
push
sub
inc
pop
add
add
push
add
add
pop
add
mov
xor
push
push
push
push
push
lea
push
push
push
push
call
push
mov
adcb
ret
add
stos
push
add
mov
cwtl
add
jns
call
cmc
jecxz
fcoml
add
add
add
add
iret
cmc
aad
sbbl
pop
add
add
add
mov
pop
xchg
lea
lcall
jne
push
push
sub
pop
mov
push
push
lea
push
push
push
call
scas
jno
add
add
cltd
hlt
out
push
ret
int
mov
stos
mov
int
add
add
les
sub
pop
xor
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
int
add
add
add
add
add
pop
push
add
add
add
add
add
add
jns
mov
add
xchg
fnstenv
add
jp
push
mov
mov
fsubl
mov
insb
add
mov
add
add
add
lcall
les
add
push
push
lea
push
push
push
push
push
call
fs
add
xchg
js
cli
shl
mov
imul
mov
add
loope
incb
in
add
add
jnp
add
add
add
movsl
fcomps
add
mov
mov
int3
rolb
jmp
jnp
add
jge
add
add
sub
pop
add
push
push
push
lea
push
push
push
call
jae
jne
add
add
rolb
xchg
ja
add
add
add
cmc
js
add
scas
add
add
subl
lahf
mov
in
call
rcrl
dec
and
or
push
push
push
push
push
lea
push
call
stos
testl
pop
int3
mov
jge
add
add
rolb
add
lea
mov
stos
add
add
pop
add
stos
add
xchg
add
add
add
loopne
lcall
or
push
lea
push
push
push
push
push
call
add
add
jmp
add
jo
add
mov
incb
add
push
add
add
shll
mov
iret
add
add
add
std
push
movsb
call
out
ja
roll
jp
popa
lret
int
les
add
add
add
roll
add
leave
add
add
add
les
add
push
push
lea
push
push
push
lea
push
call
lahf
mov
lods
ja
add
add
add
rcrb
add
pop
add
jmp
add
in
mov
add
sub
pop
rep
push
push
push
lea
push
push
lea
push
push
call
stos
out
jb
add
cmpsb
mov
add
scas
mov
mov
xlat
add
add
add
mov
jb
add
ficoms
add
push
sbbb
xchg
pop
add
add
add
add
leave
pusha
lret
add
notl
lcall
dec
and
icebp
cmp
out
shl
ror
lea
pop
or
je
mov
xor
push
lea
xor
pop
mov
xor
push
push
lea
push
push
push
lea
push
call
add
add
mov
add
shrl
les
sti
add
movsb
cmpsb
add
lods
add
add
mov
add
jne
pop
xlat
pop
xor
add
add
add
mov
add
add
movl
pop
rolb
lcall
repnz
add
sub
pop
add
push
push
lea
shr
add
inc
pop
mov
xor
push
shr
shl
pop
add
push
sub
sub
add
pop
pop
rep
push
lea
push
push
call
jp
cmc
pushf
add
ja
add
add
pop
shll
add
pop
rcrb
mov
mov
out
loop
add
outsl
add
push
jl
add
add
add
add
add
xchg
mov
add
mov
push
push
push
push
lea
push
push
push
call
mov
mov
nop
movsb
lcall
add
fiadds
add
add
rolb
mov
add
lahf
jnp
testb
mov
js
mov
in
popa
jo
test
mov
add
in
call
xor
push
lea
push
push
push
push
push
lea
push
push
push
call
outsl
arpl
into
loop
pushf
mov
mov
xlat
xchg
xchg
add
in
add
add
add
mov
scas
add
add
js
add
add
out
mov
add
roll
rolb
mov
add
loope
roll
loop
add
push
je
add
ror
add
lcall
les
add
push
shr
ror
dec
pop
or
je
push
push
lea
push
call
scas
pop
pop
lahf
push
cltd
arpl
add
add
xchg
add
cmc
jl
add
fidivrl
add
pop
add
add
repz
not
pop
add
add
push
push
call
loopne
add
loop
jne
add
lock
fwait
mov
fildl
out
jb
add
pop
loope
popa
call
clc
lcall
movsb
push
push
push
push
push
push
call
mov
enter
mov
cmpsl
add
mov
rolb
in
jle
lret
jmp
imul
xchg
push
out
add
add
jae
add
add
xchg
jmp
add
add
out
outsl
add
lret
add
mov
cmc
scas
sub
pop
pop
push
push
sub
push
or
inc
add
sub
shr
pop
lea
sub
lea
pop
push
add
rol
add
pop
pop
push
push
push
call
filds
xorb
enter
lock
add
fsubrs
xchg
cltd
add
add
bound
mov
mov
add
add
add
mov
mov
add
cmpsl
push
add
add
test
add
add
add
in
hlt
pop
mov
push
push
push
call
mov
add
mov
add
add
add
push
add
add
mov
mov
notb
in
movsl
add
add
xchg
sub
pop
mov
mov
push
inc
shr
pop
jmp
push
add
add
pop
push
push
rol
add
pop
mov
add
push
add
shl
sub
pop
push
push
shl
pop
push
push
sub
sub
pop
push
push
inc
shl
shl
pop
push
push
not
pop
mov
push
rol
rol
pop
pop
pop
push
lea
push
push
push
push
call
add
cmc
cltd
cmpsb
xchg
add
add
sahf
int
xchg
xchg
add
loop
mov
mov
mov
add
lret
pop
insb
test
push
add
imul
in
in
lcall
pop
push
sub
pop
leave
push
ror
pop
ret
push
push
shl
pop
mov
add
push
push
lea
push
push
push
lea
push
call
imul
pop
add
loopne
fldl
pop
add
add
add
add
add
add
pusha
cli
add
mov
fnclex
add
rol
xchg
add
add
add
add
lea
ja
add
aad
mov
mov
in
call
push
push
push
call
mov
jb
movsb
rolb
lret
out
rolb
mov
gs
add
std
add
mov
fildl
in
nop
mov
pop
add
add
add
cmpsb
pop
lock
test
je
add
cltd
lods
lret
aam
add
add
gs
lds
jnp
hlt
sub
pop
push
push
push
push
push
lea
push
lea
push
lea
push
call
xlat
xchg
cmc
xchg
add
std
xchg
lret
sub
add
add
add
jbe
push
in
pop
mov
jl
add
out
push
add
add
mov
add
aam
add
testl
add
add
add
add
jnp
lahf
lods
add
jne
mov
lcall
push
lea
sub
shr
lea
pop
movl
push
ror
lea
not
pop
addl
test
je
push
shl
add
sub
shr
pop
mov
push
lea
pop
pop
push
push
lea
push
push
push
push
lea
push
call
std
xchg
loopne
in
push
repnz
add
add
pop
add
mov
add
mov
jno
fistps
iret
add
lea
mov
arpl
in
lcall
pop
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
add
lds
jecxz
add
add
lods
add
std
mov
lock
mov
iret
pop
jl
mov
lcall
leave
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
arpl
add
add
jle
add
add
add
mov
mov
into
movsb
xchg
add
add
xchg
movsl
test
add
add
add
popf
data16
mov
add
xchg
scas
xchg
idivl
pushf
add
lcall
add
push
push
shl
dec
lea
shr
pop
mov
push
push
push
push
lea
push
push
push
call
arpl
imul
imul
fidivs
leave
mov
add
movsl
add
add
add
jle
jge
add
stos
push
add
lcall
cld
push
lea
push
push
push
push
call
add
int
jecxz
sar
arpl
xchg
nop
mov
add
mov
mov
ficoml
add
mov
xchg
pushf
jae
cld
mov
mov
fisttpll
add
cmc
xchg
add
add
filds
add
in
in
pop
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
add
jnp
add
add
add
xchg
push
add
add
jl
mov
xchg
add
add
jge
data16
pop
mov
add
pop
push
push
sub
pop
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
mov
pop
mov
add
loop
add
test
add
in
aam
add
ret
add
mov
push
mov
add
add
add
mov
pusha
mov
jb
mov
gs
sub
pop
testl
push
push
push
lea
push
push
call
add
add
scas
out
addr16
mov
rcrb
xchg
add
fsubr
jecxz
jge
push
mov
pop
roll
int3
mov
out
add
cmpsl
data16
addr16
add
mov
mov
add
ljmp
lds
rolb
imul
lea
ror
pop
push
call
push
lea
pop
mov
push
sub
add
pop
pushl
push
lea
add
pop
push
push
push
push
push
push
lea
push
push
push
push
push
call
jbe
add
mov
add
jb
hlt
xchg
int3
jb
add
mov
scas
push
pusha
add
add
add
fadds
add
pop
roll
add
add
pop
testb
mov
out
sub
pop
call
push
pop
cmpl
jne
pop
push
lea
push
call
add
xlat
jo
add
rcrb
add
add
test
add
scas
cmpsl
add
add
add
add
in
clc
lcall
push
push
push
push
push
push
lea
push
push
push
lea
push
call
fwait
add
scas
iret
mov
add
addr16
add
add
cmc
lret
leave
pop
add
mov
add
jno
pop
add
add
lcall
push
lea
push
push
push
call
loope
add
add
leave
fldl
add
testb
cltd
in
loope
add
pop
add
pop
xchg
gs
mov
mov
nop
add
roll
add
test
shr
icebp
lcall
fdivs
add
std
push
mov
test
repnz
sub
pop
pop
leave
push
inc
pop
ret
push
lea
push
push
push
call
insb
cmc
imul
mov
add
mov
addr16
add
leave
add
pop
mov
in
mov
insb
sub
pop
push
push
push
lea
push
call
xchg
hlt
popl
iret
addl
pushf
xchg
add
add
jb
add
incb
in
mov
pop
add
mov
cmc
test
roll
xchg
in
xchg
gs
pop
add
test
mov
add
int
imul
in
hlt
pop
mov
add
push
lea
xor
xor
pop
push
push
push
push
push
push
lea
push
push
push
push
push
call
add
jp
in
add
add
add
ficoms
rclb
js
mov
add
add
les
mov
add
mov
shrl
sub
pop
push
push
sub
add
sub
pop
push
push
lea
push
push
push
lea
push
push
call
cmc
je
add
test
mov
stc
add
add
rcl
test
xchg
movsl
cltd
add
shlb
mov
add
add
add
push
add
mov
mov
add
aad
nop
mov
repnz
xchg
add
add
mov
add
je
out
lods
rcr
mov
pop
push
movl
push
rol
inc
add
dec
pop
push
call
push
push
push
push
call
add
mov
add
mov
mov
add
add
lea
fs
insb
mov
cmc
mov
add
stos
jne
in
add
jnp
sahf
jbe
add
pop
add
add
add
jno
add
xchg
ret
movsl
add
call
cmpsl
add
sub
pop
push
call
push
push
call
add
add
add
fcoml
mov
mov
mov
add
sahf
push
add
fdivl
push
arpl
aam
add
add
in
clc
pop
subl
push
lea
push
push
push
lea
push
call
imul
xchg
add
mov
addl
scas
imul
fiadds
mov
mov
addb
add
lea
add
icebp
je
idivb
mov
je
add
push
in
jae
add
sub
pop
cmpl
jne
push
push
push
push
push
push
push
call
fildll
lea
cmc
add
add
add
nop
push
xchg
icebp
jge
fs
sahf
fsub
shll
add
ljmp
imul
int
push
bound
push
add
fadds
xchg
push
add
mov
push
stc
add
pop
pop
push
add
shl
ror
rol
pop
pop
push
xor
pop
pop
push
push
call
inc
mov
add
add
mov
add
add
mov
xchg
mov
mov
add
jae
mov
lret
add
stc
movl
jb
mov
mov
add
out
addl
add
imul
movsl
rorb
addr16
lcall
xchg
jle
mov
mov
pop
leave
push
rol
pop
ret
push
push
push
call
add
scas
addb
add
add
test
add
add
aad
stc
rolb
fnstsw
movb
testl
jge
fildl
pop
add
fmulp
fnsave
stos
addr16
subb
sub
pop
push
mov
push
inc
lea
shr
inc
pop
add
push
push
push
push
push
push
push
call
mov
add
jl
add
add
add
add
add
out
popf
pusha
pop
add
cmp
add
xchg
imul
lahf
cmpsb
clc
add
mov
popf
pop
push
flds
cltd
flds
in
roll
add
cltd
add
lcall
sub
pop
push
push
dec
dec
sub
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
call
jb
jo
sahf
add
mov
shrl
pop
add
lods
xorb
ja
add
jle
pusha
add
out
add
mov
push
rol
add
sub
add
pop
lea
push
rol
inc
rol
pop
sub
mov
push
shr
shr
inc
sub
pop
shr
push
sub
dec
shl
pop
add
push
lea
not
pop
mov
mov
push
push
push
push
push
push
call
add
addl
test
sti
add
add
mull
fwait
add
add
add
add
cltd
add
add
lods
test
pop
add
aad
ficomps
xchg
lcall
inc
or
shlb
push
push
push
push
push
push
lea
push
push
call
add
add
loope
pop
popf
pop
add
add
push
add
fdivr
add
xchg
scas
test
xchg
jle
fstpt
add
push
add
jnp
test
in
add
add
add
add
add
inc
add
add
mov
mov
push
push
push
push
push
push
push
push
call
pop
fcoml
xchg
add
mov
add
in
mov
mov
mov
xchg
popa
iret
mov
jb
add
push
sub
pop
mov
push
rol
pop
cmp
jne
push
dec
xor
pop
cmp
jne
push
inc
inc
pop
mov
movl
push
rol
sub
add
pop
jmp
push
add
lea
pop
mov
push
sub
add
xor
xor
pop
mov
push
lea
push
push
push
call
shlb
add
cltd
mov
out
ret
add
test
pop
add
int
add
icebp
add
add
incb
hlt
repnz
xchg
shrb
ljmp
lahf
cmpsb
xchg
movsb
add
jge
imul
js
xor
jne
mov
push
lea
push
lea
push
push
lea
push
lea
push
call
fldl
mov
roll
add
jl
add
enter
add
lret
xchg
cmpsb
mov
add
add
roll
add
add
add
pop
add
testl
add
add
add
push
push
push
call
add
jecxz
cwtl
stc
pop
flds
lods
out
lahf
push
xchg
jno
into
mov
fcompl
mov
add
insb
popa
add
mov
hlt
mov
out
mov
test
add
icebp
add
jge
testb
test
xchg
push
add
mov
xchg
mov
add
add
add
lcall
mov
add
push
push
push
push
push
push
push
call
add
adc
add
add
cmpsb
add
add
pop
ja
add
mov
nop
add
ljmp
mov
scas
jmp
add
stos
add
lock
mov
add
add
add
std
flds
push
movsl
ja
add
sti
test
sub
pop
mov
push
add
pop
mov
cmp
jne
push
xor
pop
mov
push
lea
push
push
push
push
push
push
push
call
add
add
test
rcrl
add
add
outsl
rolb
out
add
cmpsl
std
fisubrl
test
popf
addr16
add
add
xchg
xchg
mov
jl
cmpb
mov
jmp
add
add
aad
leave
add
mov
test
add
lcall
add
add
add
xchg
or
push
push
push
lea
push
call
add
add
leave
rcl
mov
mov
loopne
xchg
mov
mov
out
arpl
fcomp
out
add
clc
int
mov
jne
jmp
add
add
incb
xchg
rolb
call
int3
add
out
mov
add
insb
mov
sub
pop
mov
push
dec
shr
sub
pop
cmpw
jne
push
ror
xor
lea
pop
mov
movl
push
dec
sub
pop
jmp
push
lea
push
call
sahf
add
add
les
mov
js
add
clc
mov
test
add
add
loopne
cwtl
fcoml
pusha
cmpsb
testb
push
push
in
add
add
in
roll
add
clc
add
iret
add
add
scas
add
mov
clc
lcall
pushl
push
not
not
pop
pop
push
push
push
push
call
ror
add
lods
pushf
lock
sarl
push
add
rolb
xchg
sar
lods
add
lock
jp
add
ja
sub
pop
mov
push
shl
lea
lea
shr
pop
mov
mov
push
push
dec
push
push
pop
add
add
add
shr
sub
add
sub
shl
not
pop
inc
shl
dec
rol
pop
push
push
push
push
lea
push
call
add
add
xchg
in
mov
add
cmpsb
add
imul
arpl
scas
add
clc
xchg
pop
add
imul
mov
xchg
jmp
add
test
rolb
sub
pop
push
push
push
push
push
call
in
add
ret
loop
addr16
in
stc
gs
roll
pop
js
clc
test
fadds
add
lcall
mov
sub
pop
cmpl
je
push
push
sub
add
push
sub
add
xor
sub
shl
sub
rol
sub
lea
shr
pop
pop
push
ror
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
loope
gs
jmp
add
add
add
mov
mov
mov
add
add
jmp
mov
add
lret
lock
mov
in
fdivr
lcall
pushl
add
push
sub
pop
cmpl
je
push
push
shr
push
or
not
add
rol
sub
shr
pop
pop
push
push
push
call
add
cld
hlt
je
mov
mov
cmc
std
bound
add
mov
add
test
add
add
js
lahf
add
push
rcr
data16
scas
jmp
jbe
add
mov
add
xchg
jns
jl
add
push
sub
pop
push
push
shl
dec
add
pop
call
cmpl
je
push
push
dec
inc
push
sub
add
not
dec
sub
sub
rol
ror
shl
pop
rol
pop
push
push
push
lea
push
push
push
push
push
call
lea
jmp
mov
mov
jbe
addl
add
add
jo
ljmp
add
add
add
fwait
addl
xchg
add
test
add
je
leave
movsb
jge
add
cltd
jmp
add
ljmp
loopne
lcall
push
push
push
push
push
push
call
add
add
fucomip
roll
movb
add
add
xlat
add
add
mov
add
xlat
add
add
enter
stc
add
nop
shrb
add
sub
pop
call
cmpl
je
push
push
shl
rol
ror
rol
push
sub
add
inc
sub
inc
inc
not
lea
pop
dec
xor
pop
push
shr
add
lea
pop
push
push
lea
push
push
call
stos
add
pusha
add
mov
cmc
fstps
jmp
fiaddl
add
enter
mov
movsl
jo
out
int3
add
aam
cmpb
pop
cli
add
test
loopne
movsb
add
jge
add
ret
add
add
in
aam
popl
into
fsub
incb
add
pop
add
lcall
xchg
mov
push
push
push
push
call
fcompl
cld
add
idivl
mov
add
cld
movb
roll
cli
outsl
test
add
lock
mov
rolb
mov
xchg
mov
add
aam
jle
je
ja
jno
sti
add
add
scas
sub
pop
cmpl
je
push
push
sub
shl
push
or
inc
add
add
sub
shl
pop
add
pop
push
push
push
push
push
push
push
push
call
imul
icebp
add
add
add
lea
cmpsl
add
add
fnsave
add
int
xchg
movsb
popf
mov
sti
lds
mov
add
enter
adcb
cld
add
loop
in
loopne
push
push
dec
xor
add
pop
call
cmpl
je
push
push
add
push
sub
add
shl
lea
sub
sub
pop
lea
pop
push
push
call
add
add
add
pop
add
flds
xchg
add
add
add
add
add
add
add
lock
out
cld
sti
add
add
lcall
push
add
pop
call
cmpl
je
push
push
shl
xor
push
xor
add
not
sub
sub
sub
add
pop
shl
sub
sub
rol
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
filds
pop
add
into
add
add
clc
rcrl
movb
add
out
movb
idivb
imul
loope
lds
pop
fs
add
add
add
add
fisttpl
out
jp
stc
add
mov
int3
fucomip
add
flds
pop
push
push
push
call
add
roll
push
lods
add
jp
in
mov
arpl
mov
rcrl
out
cmpsb
add
add
stc
aad
test
xchg
add
add
pushf
fldcw
xchg
fldl
int3
jns
add
add
pushl
add
cmpl
je
push
push
not
push
sub
add
add
sub
xor
pop
xor
not
pop
push
sub
sub
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
cld
ret
leave
mov
add
mov
movsl
test
lock
add
sar
addl
lods
cli
jmp
add
movsb
jbe
gs
imul
add
add
call
jae
add
add
sub
pop
call
cmpl
je
push
push
lea
shl
push
xor
add
sub
shr
sub
inc
ror
inc
pop
lea
xor
pop
push
xor
inc
pop
push
push
pop
call
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
loop
push
add
push
in
clc
add
fwait
jp
add
cwtl
push
add
add
jne
lea
add
push
lret
movsl
enter
push
mov
in
in
lret
out
add
add
add
nop
loop
mov
in
fdivr
lcall
cmp
test
add
add
cli
das
mov
inc
sub
dec
push
push
pop
add
inc
shr
sub
sub
sub
pop
shr
xor
lea
pop
push
push
push
push
push
push
lea
push
call
mov
mov
push
add
cwtl
mov
movsl
add
fcoml
lods
jmp
lods
add
jp
add
add
push
xchg
add
les
lahf
sbbl
add
lcall
push
lea
push
push
push
lea
push
push
push
call
add
popa
add
call
add
bound
repnz
add
cmpsl
add
lods
add
out
out
cli
add
ret
jne
int
pop
popf
push
in
add
cli
lret
mov
sub
pop
call
push
dec
add
pop
cmpl
je
push
push
inc
not
shr
not
push
xor
add
not
sub
shr
add
pop
sub
shl
not
inc
pop
push
sub
shr
sub
sub
pop
push
push
push
push
call
add
pop
xchg
lock
jge
mov
insb
push
out
add
enter
mov
add
add
jle
mov
xchg
xchg
add
gs
in
cmp
add
add
fwait
add
mov
jno
addl
jns
add
pop
insb
add
ret
movsl
mov
add
mov
in
push
icebp
add
das
add
push
rol
not
pop
cmpl
je
push
push
shr
dec
not
push
xor
add
rol
sub
pop
xor
rol
pop
push
lea
shr
rol
add
pop
push
call
push
dec
sub
lea
pop
cmpl
jne
push
shr
dec
pop
mov
push
push
push
push
push
lea
push
call
add
outsl
add
add
add
add
in
add
test
jp
add
jno
lcall
add
add
add
insb
aad
push
mov
lea
insb
add
movsl
lret
call
addb
add
add
ljmp
add
in
call
movl
push
push
lea
push
call
je
fwait
add
subb
xchg
xorb
test
popa
add
add
test
xchg
push
pop
add
push
mov
rcrl
add
scas
add
lea
mov
push
rclb
js
in
hlt
lcall
in
add
add
jb
push
push
push
lea
push
push
push
push
push
push
call
add
data16
addr16
add
jle
out
add
xchg
hlt
rcrl
imul
stc
je
int
std
push
add
add
add
add
add
xchg
pop
xor
push
push
push
push
lea
push
push
push
push
call
addb
loop
add
in
mov
sar
add
add
add
loop
popf
stos
int
out
add
mov
cmpsb
add
arpl
add
rcll
jbe
add
mov
popa
cltd
jge
add
add
add
cmp
addb
add
add
add
add
xchg
pop
add
sbbl
in
loopne
pop
pop
push
lea
push
push
push
push
push
lea
push
push
call
pushf
add
ja
call
add
mov
mov
ljmp
add
fs
add
add
add
add
push
pop
xchg
mov
fidivl
xchg
add
add
cli
xchg
add
lcall
push
push
push
push
push
call
leave
mov
movsl
add
mov
loopne
mov
mov
add
rolb
add
in
je
cmc
xchg
scas
lods
push
test
push
add
xchg
aam
mov
pop
call
in
cltd
fldenv
add
add
add
add
add
movb
add
lcall
leave
push
lea
push
push
push
push
push
push
push
push
call
xchg
lods
fldl
push
lods
cltd
jnp
mov
add
jbe
push
push
sti
add
add
add
xchg
pusha
test
movsl
add
out
push
mov
mov
add
add
in
fdivr
lcall
or
push
xor
not
pop
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
pop
out
pop
lds
stos
lret
mov
jecxz
stos
add
lahf
mov
add
add
jnp
add
add
add
add
shlb
add
rolb
add
in
in
lcall
in
push
not
pop
add
push
sub
not
pop
cmpl
jne
push
push
not
inc
ror
shl
push
push
pop
add
add
sub
lea
add
sub
add
pop
add
shr
rol
not
pop
push
lea
push
lea
push
lea
push
push
call
pop
into
mov
loope
addb
add
add
mov
add
push
fildl
mov
add
mov
add
add
jne
mov
int
in
in
pop
pushl
push
lea
push
lea
push
push
lea
push
lea
push
push
call
add
leave
add
lcall
int3
aad
xchg
test
jne
mov
repnz
movb
add
add
iret
lahf
add
add
push
add
mov
add
fwait
add
add
sub
pop
call
push
push
lea
push
push
push
push
push
call
xchg
out
add
ret
add
js
repnz
rolb
jmp
fisubrl
jb
mov
add
lcall
into
test
add
fwait
cmpsl
in
add
add
in
add
add
pop
mov
in
add
mov
pop
sahf
mov
ljmp
lcall
rclb
rol
lret
ret
jmp
push
push
push
push
push
push
push
push
push
push
call
lret
adc
ja
mov
cmpsl
stos
rolb
jmp
stos
mov
test
add
mov
xchg
add
add
add
mov
lcall
jge
add
test
push
push
push
lea
push
push
push
call
xchg
in
add
pop
filds
cmpsb
add
jb
add
data16
lret
pop
add
add
scas
add
icebp
ljmp
xor
ja
mov
iret
add
add
mov
arpl
gs
loop
mov
jne
add
add
lock
add
mov
loopne
scas
jnp
add
add
lcall
inc
or
cmp
add
push
sub
lea
pop
ret
jmp
push
inc
pop
cmpl
jne
push
push
lea
push
or
not
add
xor
dec
sub
lea
sub
xor
pop
add
sub
pop
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
mov
lcall
xchg
jbe
add
add
int
add
hlt
add
nop
roll
movb
je
add
add
add
add
add
add
push
mov
mov
in
add
add
lcall
jne
push
push
push
push
push
call
add
lea
add
xchg
mov
mov
add
loopne
push
pop
push
add
pushf
mov
sahf
jmp
add
add
mov
sahf
sahf
pop
movl
add
add
add
add
add
imul
add
scas
orl
add
out
in
in
lcall
in
add
push
push
lea
push
push
push
push
call
mov
add
nop
int
add
fiaddl
add
add
xchg
add
in
sti
aad
add
hlt
add
fiaddl
mov
mov
cwtl
test
add
push
gs
cwtl
iret
add
add
lock
push
add
out
addb
test
scas
xchg
add
sub
pop
push
push
shl
add
pop
call
push
push
push
push
push
lea
push
push
push
push
call
add
add
push
jb
add
lds
cli
roll
stos
mov
popa
xchg
popa
add
movsl
add
jmp
jp
sti
test
in
data16
test
lods
lods
xlat
mov
fcompl
cmp
add
push
shr
sub
lea
ror
pop
cmpl
je
cmpl
jne
push
push
lea
push
push
push
call
fldl
add
add
pop
add
gs
push
add
jp
add
add
add
in
in
pop
mov
push
add
sub
xor
dec
pop
mov
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
popl
call
sbb
add
add
sub
loope
outsl
add
add
push
add
lds
mov
leave
add
add
cli
push
xchg
icebp
add
add
add
call
or
push
call
popl
push
add
jbe
add
mov
xchg
mov
add
jb
add
add
outsl
jp
push
add
add
stc
cwtl
lds
shrl
pop
add
nop
shrl
add
xchg
add
movl
call
push
push
xor
push
and
add
sub
sub
sub
pop
shr
inc
pop
push
push
push
push
push
lea
push
call
mov
cwtl
xchg
xchg
stos
add
mov
add
cwtl
out
mov
pop
add
mov
add
shr
into
stos
into
call
add
add
stc
add
jne
call
push
push
lea
push
push
lea
push
call
mov
int3
add
add
test
mov
addl
or
in
add
add
xchg
test
add
add
add
mov
out
xchg
add
mov
add
test
popa
mov
in
in
lcall
shrb
jb
cmp
jecxz
inc
push
push
pop
add
rol
sub
not
lea
lea
pop
add
pop
push
push
push
lea
push
push
call
add
add
faddl
add
push
sahf
imul
addb
push
add
sar
add
add
jmp
ja
add
add
lahf
testl
pop
pushl
call
push
sub
xor
sub
pop
call
push
push
add
lea
push
xor
add
rol
shl
sub
add
sub
not
shr
add
pop
sub
not
pop
push
shl
pop
pushl
push
push
push
push
push
push
push
call
jnp
jne
add
add
jge
add
arpl
add
mov
rorl
pop
enter
icebp
add
stos
sub
pop
call
push
inc
pop
call
push
push
sub
not
push
and
add
shr
shr
sub
add
sub
pop
sub
shr
dec
pop
push
push
push
push
push
push
push
call
les
add
jle
add
jge
fadds
add
add
cli
add
add
iret
add
add
add
into
add
add
xchg
mov
add
js
mov
lcall
jne
call
push
shl
add
ror
shl
pop
call
push
push
shr
dec
not
shr
push
push
pop
add
add
sub
rol
sub
add
pop
shr
lea
pop
push
push
push
push
push
push
push
call
add
push
xchg
add
add
add
xchg
add
add
jecxz
add
sti
add
hlt
mov
jbe
int
push
int
add
mov
flds
push
les
pusha
add
ljmp
enter
in
repnz
add
jge
outsl
clc
add
jne
push
push
push
push
push
call
std
add
ficomps
push
mov
add
flds
mov
add
shl
add
out
mov
fs
add
test
mov
push
push
in
leave
lret
add
lcall
add
add
push
lea
push
push
lea
push
push
push
lea
push
push
call
shr
arpl
add
nop
hlt
jne
mov
mov
xchg
add
out
aad
roll
mov
jmp
push
int
filds
xchg
lods
add
movsl
add
add
lret
in
loopne
lcall
shrb
rcll
out
add
add
add
fisubrs
je
or
fadd
lret
xchg
not
pop
sub
pop
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
mov
add
add
add
pusha
push
mov
mov
lahf
add
lock
sahf
add
out
add
add
mov
jp
aad
arpl
add
add
add
xorl
lcall
jne
push
push
push
push
push
push
call
mov
add
adcb
add
movsb
mov
add
xchg
add
hlt
mov
add
add
mov
in
call
call
push
sub
sub
rol
add
pop
call
push
push
inc
push
or
not
add
add
add
add
sub
not
pop
lea
lea
sub
pop
push
lea
shl
pop
pushl
push
lea
push
push
push
call
fcomps
add
lea
sti
pop
jge
nop
add
add
add
add
stos
add
out
add
pop
data16
mov
mov
add
mov
popl
add
pusha
mov
movsl
add
test
add
xchg
push
mov
jmp
jo
push
cli
sub
pop
call
push
dec
pop
call
push
push
sub
push
sub
add
ror
sub
dec
pop
ror
add
not
pop
push
add
sub
pop
pushl
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
outsl
push
lcall
add
lahf
add
fldcw
in
push
mov
add
add
in
loopne
call
call
push
push
xor
lea
push
or
not
add
not
sub
add
sub
ror
xor
pop
lea
sub
xor
pop
push
push
lea
push
push
push
push
lea
push
lea
push
call
push
iret
add
pop
add
add
ret
add
add
add
enter
pushf
mov
mov
cwtl
mov
add
mov
add
mov
add
jb
add
int
addl
add
jne
push
pop
call
call
push
push
ror
rol
push
or
inc
add
not
sub
not
add
sub
pop
inc
rol
lea
pop
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
imul
sti
xchg
shr
cbtw
add
xchg
lahf
pop
data16
push
mov
xchg
push
add
add
stc
lock
test
add
add
mov
sti
add
cmpsl
rolb
jne
call
push
push
lea
push
push
push
push
lea
push
push
call
lret
mov
lahf
add
pop
push
push
add
lret
mov
add
popf
add
sbbb
sub
pop
lea
push
push
sub
inc
ror
pop
call
push
push
lea
push
and
add
not
dec
shr
inc
sub
sub
ror
lea
pop
not
add
pop
push
ror
pop
pushl
push
add
add
pop
call
push
xor
ror
rol
pop
call
push
push
rol
ror
inc
push
sub
add
shl
rol
shl
sub
ror
add
pop
dec
xor
sub
pop
push
sub
pop
pushl
push
push
push
push
push
call
add
push
push
add
lock
out
mov
add
add
jecxz
add
mov
popa
add
ror
mov
leave
imul
jb
add
add
std
sub
pop
call
push
add
pop
call
push
push
shl
push
and
add
sub
xor
sub
rol
not
inc
pop
dec
xor
rol
sub
pop
push
shl
pop
pushl
call
push
push
push
call
shr
out
out
add
mov
subb
fists
lds
jnp
add
mov
add
add
roll
stos
add
add
aam
push
add
lods
jno
add
mov
mov
lcall
hlt
lcall
shrb
mov
rolb
ret
pop
push
sub
add
inc
lea
add
sub
shl
ror
pop
add
rol
pop
push
sub
pop
pushl
push
xor
inc
inc
pop
call
push
push
add
push
push
pop
add
inc
sub
sub
not
dec
sub
pop
ror
pop
push
push
sub
shr
xor
push
and
add
not
inc
inc
add
sub
shl
pop
pop
push
shr
sub
rol
pop
call
push
push
call
mov
add
add
fistpl
pop
mov
mov
mov
test
cli
add
push
movsb
cmpb
imul
iret
rolb
sub
pop
pop
push
rol
pop
dec
jne
push
push
push
push
push
lea
push
lea
push
call
xchg
pusha
scas
mov
add
add
divb
add
sahf
loope
ror
fwait
mov
mov
mov
mov
stc
mov
fwait
test
add
stc
add
lcall
jb
add
push
push
push
call
lret
shll
add
js
addl
add
faddl
pop
add
add
gs
add
cmpsb
add
lock
jmp
xchg
mov
rclb
in
je
addr16
pop
add
add
add
sub
pop
mov
push
lea
push
push
push
call
push
cmpsb
hlt
add
add
loopne
outsl
mov
xchg
ja
add
mov
ljmp
mov
lahf
bnd
ja
fisubl
add
add
jne
mov
sub
pop
int
push
push
lea
push
lea
push
call
add
add
pushf
out
add
add
add
mov
in
popa
jne
mov
add
add
add
add
sub
push
add
mov
add
sti
lret
out
cli
add
add
pushf
add
mov
add
add
xchg
test
lock
lea
push
push
not
add
add
sub
push
or
inc
add
dec
ror
ror
ror
sub
shl
sub
pop
dec
xor
not
pop
push
shl
pop
pushl
call
push
inc
shl
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
add
add
rcr
add
scas
pop
mov
filds
add
fistps
out
insb
xchg
cltd
stos
cli
cld
cmc
in
hlt
cmpsb
jnp
call
imul
idivl
push
in
mov
jb
shlb
stos
jb
in
fcomps
shrb
adc
push
push
add
rol
dec
push
xor
add
ror
shr
add
shl
sub
ror
pop
ror
dec
shr
pop
push
inc
ror
shr
pop
pushl
push
xor
pop
call
push
shr
pop
call
mov
push
push
push
call
jb
std
add
int
pop
push
pop
lods
mov
out
add
add
leave
mov
pop
add
mov
cli
add
pop
add
push
out
push
mov
sub
pop
lea
push
push
inc
add
dec
push
push
pop
add
lea
sub
shl
pop
sub
pop
push
pop
pushl
call
push
push
push
push
call
add
pusha
mov
add
jb
mov
out
rolb
add
mov
add
cmpsb
add
gs
mov
ret
mov
add
jecxz
test
mov
push
pop
test
ljmp
clc
pop
push
add
add
add
lods
roll
add
lcall
test
push
add
inc
ror
rol
pop
push
push
push
call
add
test
pop
fwait
add
add
pop
add
add
add
lret
test
shrb
cwtl
add
arpl
push
add
mov
mov
add
jne
push
test
push
add
lahf
roll
test
in
clc
lcall
add
leave
sub
pop
pushl
push
push
dec
ror
xor
push
or
not
add
rol
inc
inc
sub
sub
add
inc
pop
not
shr
inc
pop
push
inc
pop
push
call
push
push
not
rol
push
and
add
sub
lea
inc
sub
lea
xor
lea
inc
pop
add
sub
pop
push
push
lea
push
push
lea
push
push
push
call
ret
jmp
fcmove
add
add
add
shr
fdivp
iret
les
pop
push
popa
add
cli
incb
add
add
popa
fwait
mov
add
add
add
out
in
jae
in
in
lcall
jne
call
push
sub
sub
pop
push
call
push
push
not
sub
inc
add
push
sub
add
add
sub
dec
add
pop
xor
pop
push
dec
dec
pop
pushl
push
shr
add
shl
pop
call
push
push
push
push
push
push
push
push
push
call
roll
add
jl
mov
add
lods
add
scas
fiaddl
add
add
stos
jecxz
out
push
add
loopne
add
add
jns
add
test
lock
je
rcll
add
movsb
bound
add
lock
add
int3
add
jge
sub
pop
call
push
inc
shl
xor
pop
pushl
push
not
dec
pop
mov
jmp
push
push
shl
shl
dec
push
push
pop
add
shr
dec
sub
lea
ror
sub
rol
pop
sub
add
add
pop
push
push
push
push
lea
push
push
push
push
push
call
add
leave
xchg
je
mov
lods
jo
xchg
add
ljmp
popa
xchg
popa
xchg
mov
add
rolb
addr16
gs
in
fcompl
jne
push
push
push
push
push
lea
push
lea
push
push
push
push
call
pop
push
rolb
add
add
add
add
jo
pop
push
mov
aad
fldl
add
icebp
mov
add
add
add
cmc
fiaddl
lcall
sbb
add
test
jnp
ja
push
push
lea
push
push
push
push
push
push
lea
push
call
xchg
add
cli
lods
add
mov
mov
lret
imul
fldenv
out
add
add
rorl
add
add
lcall
fdivr
lcall
add
pushf
repz
push
call
fisubrs
jne
imul
add
add
pop
in
test
add
pop
mov
add
pop
call
push
push
dec
lea
rol
inc
push
or
not
add
dec
shr
sub
xor
ror
pop
add
rol
pop
push
ror
xor
add
pop
pushl
push
sub
xor
pop
call
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
add
jnp
add
add
mov
mov
nop
loopne
out
add
add
mov
testb
add
add
cltd
add
xchg
ret
add
mov
add
mov
add
outsl
jp
add
add
mov
add
add
in
fcomps
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
mov
in
push
lds
xchg
push
mov
mov
pop
jo
add
add
add
imul
xchg
add
in
add
jp
pop
mov
movsb
mov
ljmp
jmp
add
push
add
jecxz
add
sub
pop
call
leave
push
add
lea
pop
add
push
sub
pop
pop
pop
push
shr
pop
pop
push
push
push
push
push
call
lea
mov
insb
push
aad
cwtl
add
roll
add
pusha
rolb
repnz
fsubl
nop
add
lds
mov
add
nop
xchg
jle
mov
in
outsl
mov
add
lret
push
test
add
fidivrl
pop
add
je
add
add
jecxz
repnz
mov
in
in
pop
xor
push
push
lea
push
push
call
fildl
add
test
rolb
jno
push
lahf
add
incb
jne
xchg
add
mov
mov
int3
in
push
add
lods
mov
push
repnz
add
add
add
push
jne
add
add
clc
xchg
lock
inc
push
push
call
cwtl
add
rolb
add
add
outsl
into
add
add
icebp
pusha
loopne
pop
add
add
mov
add
hlt
cmpsb
add
out
sub
pop
ret
push
sub
add
sub
xor
pop
leave
push
sub
pop
ret
push
push
lea
push
push
push
push
lea
push
push
push
call
sahf
enter
add
add
mov
mov
test
subb
add
add
add
in
mov
add
lea
jno
lds
add
add
pusha
mov
mov
rcll
add
add
add
add
jge
sub
pop
push
push
shl
lea
sub
pop
mov
push
xor
rol
pop
cmpl
jne
push
push
push
push
push
call
int
fwait
into
out
xlat
xchg
cli
cmpsb
leave
add
pushf
stos
add
xchg
movsb
in
add
add
std
xchg
pop
add
fsts
add
add
outsl
jno
lahf
add
add
std
add
jle
imul
jecxz
jo
add
jmp
mov
add
add
sub
pop
mov
jmp
push
add
sub
pop
mov
and
push
ror
sub
pop
xor
push
lea
push
push
call
rolb
int3
addl
testb
add
notl
add
rolb
add
add
mov
mov
sahf
stos
add
add
loopne
jp
push
add
mov
ja
pop
add
add
mov
cmpsb
loopne
add
les
sub
pop
xor
add
push
sub
rol
sub
xor
pop
xor
push
lea
push
lea
push
push
lea
push
call
lcall
roll
add
mov
xchg
in
cmpsl
rolb
fadds
add
add
add
test
popl
mov
add
add
lcall
push
shr
add
pop
sub
jmp
push
push
lea
push
push
lea
push
push
push
call
add
add
fld
add
add
out
add
loop
mov
test
xchg
icebp
add
add
mov
not
add
stos
cltd
fiaddl
popf
mov
add
incb
icebp
mov
mov
add
pop
sbb
leave
add
add
xchg
add
add
pop
add
add
add
add
push
add
add
add
pop
pushl
push
sub
add
shl
pop
pop
sub
push
push
push
push
push
push
push
call
ljmp
add
add
mov
add
bound
add
cmpsb
add
add
ljmp
add
in
mov
push
jno
jle
mov
jmp
add
add
xchg
push
jmp
shrb
ret
fildl
arpl
mov
mov
sub
pop
cmp
jne
mov
push
lea
push
push
lea
push
call
testb
add
ljmp
add
test
int
jb
pop
pop
loopne
lea
add
mov
mov
mov
add
add
bound
add
xchg
in
pop
add
ret
stos
jne
mov
int3
jno
jae
out
add
sub
pop
lea
sub
push
push
push
call
jmp
in
add
add
add
add
in
push
pop
add
xchg
add
add
lret
test
add
add
jmp
mov
add
int3
jl
add
sub
pop
mov
shr
push
shr
dec
sub
dec
pop
add
sub
push
sub
xor
pop
pushl
push
sub
xor
not
shr
pop
pop
push
push
push
lea
push
call
ret
fadds
pusha
xchg
add
add
add
lcall
push
add
add
mov
add
pop
cmc
add
add
fchs
jne
jb
rolb
add
jo
sub
pop
shr
push
push
push
push
lea
push
push
lea
push
call
add
add
lods
lret
add
mulb
add
add
rolb
loope
add
add
xchg
pop
cmc
frstor
xchg
add
add
and
sub
push
push
call
mov
loopne
call
loop
hlt
data16
arpl
mov
add
fnstcw
add
push
add
add
xchg
mov
stos
add
data16
fmul
stc
add
lcall
stc
sbb
test
sti
call
or
ret
push
push
lea
push
lea
push
lea
push
call
jp
fxch
addl
add
pop
add
stc
lods
add
pop
add
fdivl
mov
fisubrs
add
sub
pop
push
push
push
push
call
xlat
xlat
mov
add
add
fwait
add
filds
add
or
push
fiaddl
add
add
add
out
mov
sub
pop
mov
push
push
push
push
lea
push
push
call
add
jecxz
jecxz
mov
icebp
sahf
fnstsw
insb
xchg
add
add
lret
add
fistl
int3
je
in
mov
add
adc
test
insb
scas
add
add
lcall
cld
push
push
lea
shl
add
pop
push
push
push
push
lea
push
push
call
incb
add
push
pusha
lret
jbe
adc
jge
add
rcll
add
push
add
pop
test
sahf
add
sub
pop
push
push
push
lea
push
push
push
push
lea
push
call
add
lock
out
test
int3
add
flds
mov
add
std
add
rorb
add
roll
push
add
pop
push
push
xor
shl
pop
mov
push
push
call
gs
add
rolb
xchg
add
test
arpl
add
add
xchg
add
xchg
scas
out
loopne
add
shl
xchg
add
add
icebp
add
xchg
xchg
lds
push
cmp
ljmp
sti
push
push
push
push
push
call
add
aad
add
fs
add
push
add
into
add
orb
push
xchg
rcrl
rclb
mov
addr16
out
pop
mov
pop
add
add
add
lcall
adc
shrb
push
push
push
push
lea
push
lea
push
call
mov
add
add
add
add
lret
addr16
xchg
add
stos
hlt
add
bound
mov
add
push
add
add
add
add
add
movsl
in
mov
add
ljmp
rorl
add
sarb
add
shrl
push
add
mov
pop
shr
push
push
push
push
push
push
push
push
call
in
mov
push
lret
add
add
xchg
add
xchg
add
jo
add
jb
fcomps
lods
xchg
iret
int
mov
in
adc
add
jno
add
add
cmpsb
add
movb
jp
pop
add
add
in
loopne
lcall
ficoml
xchg
push
push
push
push
push
push
push
lea
push
call
jo
jb
shll
notl
add
add
add
into
add
add
iret
int
scas
fadds
popa
add
push
add
test
aad
add
sub
pop
mov
push
inc
sub
xor
pop
add
push
shr
add
pop
mov
push
add
shl
pop
add
push
push
push
push
lea
push
push
push
lea
push
call
add
leave
add
test
add
popa
roll
mov
add
push
add
enter
add
lcall
notb
sarb
fildll
lea
push
lea
push
push
push
lea
push
call
rolb
add
cld
fld
add
out
add
add
mov
rcl
mov
add
xchg
cmpsl
mov
add
out
int3
icebp
repnz
jne
xchg
add
sahf
add
add
mov
fcompl
xlat
push
add
shr
add
pop
and
push
add
lea
pop
rol
push
inc
pop
rol
xor
push
dec
inc
sub
pop
inc
push
lea
push
lea
push
push
push
push
push
call
add
add
xlat
mov
jns
orl
mov
in
jae
mov
fsubrl
je
fldcw
add
add
sarb
out
sub
pop
cmpb
jne
push
sub
dec
shr
dec
pop
add
push
rol
sub
sub
not
pop
cmp
je
push
sub
dec
pop
add
cmpl
jne
push
lea
push
lea
push
push
push
push
lea
push
call
add
push
lret
out
add
sti
add
test
add
add
mov
add
mov
fcoms
add
mov
test
pop
add
shlb
add
add
mov
add
add
add
movsb
add
add
sub
pop
xor
push
add
sub
lea
pop
pop
push
push
push
lea
push
push
lea
push
call
out
jp
add
add
add
cmc
faddl
clc
sahf
mov
add
mov
out
addb
lret
mov
in
add
xchg
lret
mov
out
xchg
add
out
icebp
data16
popf
add
lods
mov
out
stos
add
in
mov
push
mov
adcb
aad
add
test
add
add
add
add
push
push
push
push
call
popl
flds
je
mov
jo
pop
mov
fdiv
add
iret
in
add
add
jl
neg
filds
lock
pop
pop
push
lea
push
lea
push
call
sahf
jno
ret
add
add
pop
add
add
cltd
in
add
sti
call
jge
ja
mov
mov
push
add
xlat
fs
cmc
jne
add
outsl
mov
add
sbbl
fadds
addb
nop
xchg
xchg
xlat
arpl
add
add
lcall
push
shl
pop
leave
push
push
push
lea
push
call
jbe
out
cmpb
add
push
push
add
add
pop
add
add
add
mov
sahf
stos
mov
add
test
cmpl
in
lock
lcall
or
push
lea
push
push
lea
push
push
call
fadds
xchg
mov
xchg
jb
add
push
add
mov
lock
in
addl
addl
xlat
test
movsl
in
fxtract
jge
lahf
loopne
add
clc
out
add
jns
xchg
in
push
pop
push
add
add
add
push
lds
pop
add
add
add
sub
pop
mov
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
xchg
jbe
sti
bound
add
add
add
mov
add
mov
int3
add
mov
lods
add
int3
aad
add
add
fdivr
lcall
push
or
inc
rol
pop
mov
push
not
pop
push
push
push
push
push
push
push
push
push
lea
push
call
lcall
add
add
add
addl
pusha
js
add
jo
jnp
arpl
les
add
fiaddl
add
jl
imul
add
lcall
and
lret
rolb
xorl
pop
pop
call
push
push
push
lea
push
push
push
push
push
push
call
out
mov
add
add
je
fs
pop
pop
pop
add
adc
int
outsl
jle
in
add
sarb
flds
add
add
fldcw
add
rolb
add
pop
rcll
mov
add
push
rolb
push
push
lea
push
call
xchg
pop
xchg
push
add
add
lods
add
add
add
cld
movb
fiaddl
add
in
add
cmc
je
add
add
popa
mov
pop
call
push
push
push
push
push
push
lea
push
push
push
push
call
mov
push
add
xchg
leave
fmul
add
xchg
push
pop
cld
pop
add
add
add
jbe
add
cmpsl
clc
int3
stc
fcmovb
pop
cwtl
push
add
into
xchg
cld
iret
add
push
push
fstps
loopne
in
fdivr
lcall
xor
push
sub
pop
pop
push
shr
pop
pop
push
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
cmc
testl
push
add
addl
mov
add
pop
fsts
mov
add
xchg
jnp
testb
out
aam
add
in
fcomps
pop
push
not
dec
shr
pop
leave
push
push
push
push
push
lea
push
call
in
add
ret
out
mov
mov
add
add
jle
sarl
add
mov
enter
cmpsb
loopne
jge
repnz
leave
outsl
in
jb
sti
cld
in
add
enter
in
lock
addb
cmpsl
hlt
mov
add
push
sub
pop
ret
push
push
push
lea
push
push
lea
push
push
push
call
pop
add
out
mov
mov
add
lods
loope
pusha
push
add
add
enter
nop
xlat
add
call
popf
lahf
add
pop
test
add
movsl
mov
mov
add
pop
add
lcall
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
xchg
lret
add
add
add
cwtl
add
pop
int
decb
data16
scas
cmc
add
js
add
add
mov
mov
movsl
into
mov
fwait
add
pop
mov
add
push
lea
push
push
push
lea
push
push
push
call
add
lods
add
jp
nop
testb
add
mov
jb
jecxz
add
lods
sti
jnp
mov
mov
shrb
lea
add
iret
mov
iret
add
add
jbe
push
xchg
xchg
mov
add
add
mov
pop
push
push
push
push
call
js
mov
add
push
mov
adc
add
je
pop
add
push
pop
add
jecxz
andb
xchg
jo
add
add
fadds
add
sti
testl
test
add
add
mov
add
lea
sub
pop
push
push
rol
pop
push
push
rol
not
add
pop
push
push
inc
rol
pop
mov
push
push
lea
push
push
lea
push
push
call
add
imul
lret
xlat
add
add
add
add
add
mov
jae
mov
add
fwait
add
add
lahf
add
add
mov
lods
into
pop
push
ja
add
mov
arpl
outsl
add
fdecstp
movsb
imul
pop
add
add
mov
call
lds
divl
push
lea
push
push
lea
push
push
push
push
call
loopne
testb
add
mul
lods
pop
out
cwtl
pop
add
jnp
jl
aad
cmpsl
jnp
add
add
push
add
mov
in
ficomps
add
data16
in
pop
push
in
add
rolb
mov
add
popl
add
les
add
call
pop
push
xor
inc
pop
lea
push
xor
sub
inc
pop
sub
mov
push
push
push
push
push
push
push
lea
push
lea
push
call
pop
aam
add
stos
push
add
stos
imul
aam
nop
jno
jmp
test
add
add
add
add
neg
add
enter
xchg
nop
incb
add
add
negl
push
pop
in
test
sub
pop
shr
push
sub
rol
rol
add
pop
add
push
inc
sub
pop
mov
add
push
push
push
push
push
call
in
pusha
add
test
icebp
add
add
in
add
add
mov
scas
add
mov
call
jae
xlat
stc
mov
sub
pop
pushl
push
not
pop
popl
push
lea
push
push
push
push
push
lea
push
push
call
push
repnz
add
add
cld
cmpsb
add
add
roll
add
jge
fsubs
add
add
fwait
mov
cmc
jae
mov
out
add
out
add
mov
add
into
add
roll
add
add
clc
mov
xchg
fs
sub
pop
mov
push
add
not
add
not
pop
add
push
push
push
call
popf
jo
add
lods
clc
add
sar
add
add
fbstp
add
imul
call
jge
add
add
jl
mov
add
arpl
add
hlt
pop
xor
lea
push
ror
lea
shr
pop
mov
push
sub
not
dec
pop
add
push
push
push
push
push
push
push
push
call
add
ja
cltd
add
outsl
add
mov
jl
scas
add
std
add
stos
add
fwait
push
mov
add
test
cmpsb
hlt
add
cld
test
mov
rol
scas
jno
add
loopne
add
in
in
loopne
lcall
rclb
not
pop
rol
push
ror
pop
nop
push
push
push
call
addl
pushf
add
add
rolb
push
add
enter
test
leave
ljmp
add
rolb
lcall
xor
push
sub
xor
add
sub
pop
nop
push
sub
add
sub
pop
nop
push
xor
rol
sub
inc
pop
inc
push
push
push
push
push
call
std
cwtl
stos
add
xchg
aad
enter
out
in
add
lret
add
addr16
js
mov
pusha
movsl
add
pop
add
add
sub
pop
nop
push
inc
add
pop
nop
push
add
sub
add
pop
cmpb
jne
add
push
add
lea
xor
pop
nop
nop
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
add
jne
mov
int3
add
jne
idivb
push
cltd
insb
add
mov
js
data16
roll
movsl
add
xchg
push
add
vcvttps2dq
mov
mov
test
mov
push
mov
insb
les
add
pushf
movsb
xchg
jl
mov
in
fdivr
lcall
inc
or
test
add
inc
pop
nop
push
lea
push
push
push
push
call
add
rolb
jo
xchg
out
out
fs
fnsave
xchg
js
jle
add
add
xchg
ficoml
ja
out
add
cld
fidivrl
mov
jne
loope
ret
push
rolb
mov
jb
add
add
mov
lret
jmp
sub
pop
inc
nop
push
sub
rol
shr
pop
nop
push
push
push
push
push
push
push
push
push
call
adcb
push
out
loope
scas
icebp
ljmp
xchg
imull
push
test
push
xchg
pop
cld
mov
pop
mov
test
fld
mov
cmc
iret
push
pop
xchg
add
add
mov
add
ja
lahf
aad
in
fcompl
jne
jb
xor
push
add
pop
jmp
push
push
lea
push
call
fstpt
mov
lret
ror
loop
add
add
xor
out
popa
sti
add
add
add
add
jmp
sub
pop
mov
push
sub
pop
add
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
call
xchg
fcomip
add
repnz
add
xchg
lcall
add
imul
hlt
mov
in
bnd
add
shlb
imul
push
add
add
jp
loopne
add
add
push
xchg
loop
mov
arpl
add
popl
lcall
mov
jb
inc
sbb
rol
sub
sub
pop
add
mov
push
sub
pop
xor
xor
push
not
shl
pop
shl
xor
push
push
push
push
push
push
push
lea
push
push
call
jo
add
data16
stos
call
mov
add
add
add
xchg
jbe
repnz
add
loope
roll
out
test
xlat
outsl
add
nop
add
out
add
je
mov
shlb
loopne
shl
add
add
imul
pop
shl
xor
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
mov
add
scas
add
les
hlt
add
rcrb
mov
add
add
int
test
mov
cmc
ljmp
ja
add
add
in
in
loop
mov
loop
mov
cld
jo
cwtl
sub
pop
shl
push
lea
push
push
push
push
push
push
call
mov
mov
hlt
pop
push
pop
add
jo
add
jo
aad
xchg
add
add
mov
add
jge
add
flds
mov
add
aad
add
mov
sub
pop
xor
push
push
call
add
jmp
push
in
xchg
enter
xorl
add
xchg
jae
sub
pop
mov
add
push
not
xor
not
shr
pop
pop
push
inc
not
inc
pop
pop
push
shl
pop
pop
pop
push
sub
shl
sub
dec
pop
leave
push
push
push
push
push
push
push
call
in
hlt
add
add
arpl
mov
mov
add
adc
ljmp
imul
jmp
add
add
add
lods
add
fnstsw
filds
roll
lret
add
mov
mov
lcall
or
push
push
rol
shr
add
pop
mov
push
push
push
push
push
call
push
mov
add
mov
add
out
mov
mov
add
add
sbbb
pop
add
in
in
lcall
push
push
lea
push
push
push
push
lea
push
push
call
xchg
call
out
push
add
add
add
add
xchg
xchg
add
add
lods
fildl
add
mov
ffreep
xchg
outsl
add
mov
push
rol
lret
jl
in
in
push
push
push
add
pop
mov
mov
push
lea
push
call
scas
pop
add
add
ljmp
jge
cmc
xchg
add
add
add
add
repnz
pop
addb
mov
add
mov
add
add
add
jbe
fldcw
add
cwtl
add
cli
add
out
clc
mov
popa
jo
nop
popa
cmpsb
jno
addl
test
sub
mov
mov
jmp
loopne,pn
mov
add
add
mov
add
add
insb
nop
add
addb
add
xchg
xchg
add
iret
add
push
xchg
jb
incb
sub
add
xabort
pusha
mov
pop
test
je
push
shl
inc
not
add
pop
mov
test
je
push
pop
mov
push
push
push
push
lea
push
call
lods
movsb
loop
rcll
loope
lahf
popa
push
pop
rorb
iret
mov
add
addr16
loopne
loop
add
fldl
lret
lret
pop
push
add
mov
add
data16
mov
xlat
popl
add
add
lock
out
add
add
in
lcall
dec
or
push
push
push
push
push
lea
push
push
call
mov
pop
rcrl
add
cltd
add
shrb
add
fs
add
mov
in
add
push
rolb
cmc
pop
add
jb
add
cmc
add
add
add
add
add
aam
add
out
add
add
cwtl
sub
pop
mov
inc
push
rol
pop
cmp
je
test
je
push
lea
pop
mov
inc
push
push
push
push
push
push
push
call
arpl
roll
push
add
fidivs
add
enter
mov
fisubrs
mov
add
add
sbbb
jmp
add
add
in
in
cmp
je
test
jne
push
push
push
lea
push
push
push
call
add
stos
add
mov
add
pop
clc
add
jb
leave
fs
popa
add
add
lods
mov
add
push
sub
pop
xor
pop
push
not
pop
pop
push
not
shr
pop
pop
pop
push
dec
pop
leave
push
add
shr
pop
ret
push
shl
shl
pop
mov
push
not
ror
pop
inc
cmp
jne
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
les
faddl
xchg
add
in
fmulp
add
aam
loope
jl
leave
jge
add
rcl
loope
addb
cwtl
mov
xchg
add
iret
faddl
jne
add
add
stos
addb
mov
mov
pop
jge
shlb
add
cmc
insb
jp
cmpsl
add
lea
jle
push
push
lea
push
call
jl
add
add
xchg
add
cld
mov
add
add
loop
add
push
imul
out
popa
faddl
cmpb
popa
add
add
push
push
push
lea
push
lea
push
call
clc
fadds
out
add
add
add
jmp
insb
testb
add
xchg
mov
add
add
sahf
fwait
add
fwait
add
in
pop
imul
enter
mov
add
add
add
sub
pop
mov
push
push
push
push
push
push
call
add
jmp
add
pop
add
cmpsl
add
lret
lods
lea
xchg
add
mov
mov
push
add
sub
pop
add
cmp
jne
push
push
push
call
push
add
stc
hlt
add
add
mov
int3
add
mov
test
add
repnz
add
mov
jns
in
add
add
pop
mov
push
xor
pop
test
je
mov
push
shr
add
pop
add
cmp
je
push
lea
push
push
push
push
push
lea
push
push
push
call
add
cmc
add
sti
popf
in
mov
pop
push
lock
mov
pop
add
nop
jecxz
add
test
mov
jmp
clc
mov
movsb
xchg
add
add
lods
sti
call
mov
dec
rcrb
push
push
lea
push
push
push
push
push
push
call
mov
rcll
add
mov
add
push
add
imul
add
pop
add
out
add
add
push
add
mov
add
clc
add
cmpsl
push
mov
push
mov
add
call
add
aad
jge
in
fcomps
rcrb
out
loope
jl
in
pop
push
push
push
call
add
add
add
lock
rolb
add
push
jbe
clc
add
mov
add
mov
mov
add
add
lcall
addl
mov
popa
loop
pop
sub
pop
pop
push
push
lea
push
push
push
push
push
call
fadds
cli
out
add
scas
mov
mov
add
add
add
add
add
out
lds
add
in
add
jp
mov
xchg
adcl
test
add
mov
xchg
jge
cmc
add
lock
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
add
into
cmc
mov
add
add
int3
add
push
pop
add
scas
stos
pop
add
add
fs
pop
in
cltd
add
mov
cmpsb
mov
mov
add
sub
pop
leave
ret
push
push
push
lea
push
call
lea
add
add
add
imul
add
cmpsl
add
shl
add
add
je
mov
mov
gs
add
mov
lea
push
not
add
sub
pop
pop
push
lea
push
push
push
call
add
add
pushf
jb
add
imul
js
add
out
push
out
add
xchg
out
add
push
add
movsb
add
push
sub
shl
shl
pop
pop
push
push
push
push
push
push
call
lods
push
add
jo
add
add
lods
add
popf
add
mov
add
add
leave
add
add
add
mov
lret
xchg
add
add
add
movsb
les
movb
pop
pop
push
not
rol
pop
leave
push
inc
sub
ror
inc
pop
ret
push
push
push
push
push
push
push
push
call
add
cmpsl
fld
add
add
add
add
xchg
add
add
les
add
mov
cmc
int
add
cmc
popl
mov
in
push
add
add
mov
jmp
add
mov
mov
add
sub
pop
mov
push
inc
pop
pop
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
jb
lret
test
out
loope
add
nop
ljmp
mov
add
fiadds
add
xor
stos
add
add
add
add
jp
cltd
add
repnz
add
addb
push
fcmovb
jp
jbe
jmp
add
out
add
stos
add
mov
ret
cmc
add
lcall
pop
push
push
push
lea
push
lea
push
push
call
movb
push
add
add
sti
add
add
std
xchg
lds
arpl
add
lcall
test
lret
test
add
add
add
hlt
andb
aam
add
scas
in
add
mov
push
sub
pop
leave
push
lea
push
lea
push
lea
push
push
push
call
mov
mov
mov
add
test
add
jle
xlat
mov
lds
add
add
add
lock
pop
add
out
sub
pop
ret
cmp
mov
xor
mov
mov
mov
icebp
into
mov
ror
mov
mov
mov
ljmp
cmp
lret
dec
enter
add
mov
push
sub
add
addb
xor
imull
aas
jecxz
jecxz
sub
inc
into
aas
shrl
loop
push
je
or
es
push
in
icebp
mov
jbe
jmp
or
loop
mov
or
rcrb
push
mov
daa
cmp
lahf
lds
or
jmp
mov
xchg
mov
push
lahf
repz
pop
mov
leave
es
dec
addl
cmp
sbb
cmp
hlt
repz
loopne
push
pop
push
sbb
insl
pop
mov
xor
outsl
sub
jne
sbb
test
movsl
in
arpl
push
mov
push
repz
cld
jl
icebp
jne,pt
xor
add
jae
push
mov
mov
or
sub
lods
ret
cwtl
cmpsl
xchg
loop
fistl
and
or
mov
xchg
inc
cwtl
push
add
add
iret
ss
lods
cmp
cld
imul
jecxz
push
push
movsb
and
push
cwtl
aam
push
xchg
clc
pop
jl
inc
mov
out
jge
fcmovnb
xchg
mov
xor
or
xor
or
cmp
outsl
pop
and
push
mov
sti
push
or
ret
xchg
sbb
and
xadd
in
fs
jbe
xor
xchg
out
mov
lea
adc
mov
xor
push
loop
test
mov
mov
xchg
das
stc
daa
in
pusha
mov
test
mov
xchg
inc
inc
lahf
cld
inc
jge
fs
push
jns
out
es
cld
mov
movsb
rorl
aam
jbe
out
pop
dec
sub
out
inc
scas
arpl
jmp
pop
rcrb
movsl
inc
int
lods
scas
mov
mov
aaa
mov
je
pop
push
mov
mov
ret
dec
lcall
addl
xchg
ds
mov
inc
sbb
sub
icebp
dec
cmp
ret
daa
flds
push
cld
repnz
addb
fdivrs
out
sar
mov
jb
out
mov
sub
or
jnp
sbb
aad
repz
pusha
mov
clc
mov
pop
mov
xor
dec
stos
sti
sbb
adc
mov
je
andb
sbbl
ret
cli
popa
and
adc
xchg
mov
out
out
and
pop
pop
cmp
fadds
mov
rclb
dec
inc
adc
mov
mov
mov
mov
mov
cmp
and
and
aad
out
in
pop
cmp
mov
fldenv
sub
push
insl
fucomi
addr16
and
push
mov
sbb
int3
in
lods
add
aam
cli
jo
xor
mov
pop
mov
dec
imul
mov
sub
dec
or
xor
out
sti
mov
inc
xlat
ja
aad
inc
sbb
push
jae
mov
or
ficoml
pushl
mov
cmp
scas
aam
mov
rorl
push
shlb
imul
ret
cmpsl
hlt
inc
xor
ja
pop
shll
ds
adcl
data16
push
add
cmp
fdivl
mov
ss
and
lods
jmp
outsl
push
roll
test
xchg
xor
dec
shl
dec
fwait
imul
cltd
mul
push
dec
jae
xchg
xchg
pop
das
addr16
out
lods
sub
xchg
sbb
popf
and
dec
stc
xor
test
cmp
inc
or
cmp
mov
leave
fstps
inc
daa
mov
add
dec
pop
pop
adc
fcomi
push
or
xchg
outsb
and
cs
jo
fwait
jge
inc
bound
insb
adc
pop
mov
sub
pop
xor
outsb
inc
mov
inc
jmp
adc
lret
fisttpl
pop
jno
xchg
cltd
repz
daa
mov
jg
icebp
arpl
xor
call
out
pusha
fs
scas
xchg
popf
gs
mov
jle
and
pop
jne
mov
movsl
je
arpl
in
fdivrl
dec
xchg
testl
inc
das
mov
bound
sar
sbb
pushf
lcall
adc
out
jnp
rclb
rorl
mov
sub
jne
xchg
jns
push
and
add
std
mov
icebp
sub
xrelease
pop
dec
xor
out
fwait
mov
test
pop
ficomps
mov
mov
jns
sbb
lea
jg
int
hlt
cmp
leave
push
in
jp
cmpsl
or
inc
mov
lahf
dec
jecxz
and
insl
inc
loope
sbb
jbe
pop
xor
shlb
adc
add
add
scas
rclb
loopne
mov
xor
mov
test
aaa
icebp
mov
loopne
or
pop
shl
loop
push
xlat
stc
pop
adc
xor
jge
adc
xor
sub
ret
cmp
into
or
cmp
rol
pop
xchg
sub
mov
scas
cmpl
dec
cli
mov
or
or
or
jae
in
in
test
and
jmp
jne
jg
mov
adc
loope
dec
lcall
pop
aad
mov
movsb
xor
insl
mov
sbb
pop
push
xor
mov
cmp
je
cmpl
test
jb
nop
pop
xchg
and
cwtl
inc
test
fbstp
dec
or
lret
add
aas
pop
pop
mov
xor
or
test
cmpb
mov
pop
adc
dec
jmp
lods
mov
xchg
scas
fisubrl
xor
je
xchg
movsb
and
dec
dec
insb
hlt
mov
into
jg
ss
xchg
push
lcall
adc
adc
xor
jno
insb
fistl
out
cmp
sub
add
xchg
push
cmp
jbe
push
push
and
mov
leave
notl
int
jnp
iret
mov
xchg
push
outsl
jp,pt
out
and
push
jb
inc
and
mov
inc
sbbb
out
mov
cs
nop
sub
and
iret
or
and
mov
mov
sbb
add
mov
push
push
loope
cli
repnz
stos
enter
lds
cmp
loopne
and
add
fs
pop
xchg
cli
xor
pop
add
js
dec
loope
sbb
pop
inc
add
int
cmp
sarl
shll
sub
adc
xchg
sbbb
mov
call
mov
mov
outsb
push
mov
jmp
mov
cmp
cmp
and
rcr
jl
lds
adc
fsubrl
cwtl
and
in
and
into
xchg
sbb
add
jle
test
push
cmp
jmp
mov
dec
xchg
call
inc
stos
pop
jecxz
push
in
pop
int3
and
arpl
add
dec
mov
jbe
xor
cmc
xchg
dec
or
add
mov
and
sub
or
ja
sub
mov
dec
out
push
sahf
push
dec
fidivl
mov
push
jb
jnp
or
sahf
or
fsubrp
test
inc
pop
std
sarb
jge
lds
xor
pop
adc
cmp
subl
mov
scas
cs
lret
adc
xchg
stos
call
ficomps
inc
daa
adc
mov
xchg
cmpsl
and
mov
add
lods
sbbb
xchg
movsl
loop
sub
cwtl
jge
add
mov
loopne
xor
mov
push
js
pop
inc
sbb
idivb
jo
mov
es
sbb
xchg
pop
mov
in
les
mov
stc
out
fucomip
imul
sub
ja
es
loope
jnp
push
dec
sbb
jle
fdivs
pop
ss
fists
xchg
push
or
sbb
loope
sbb
and
sub
iret
mov
stc
testl
addr16
mov
xor
or
mov
mov
out
sbb
test
inc
ljmp
rorl
js
arpl
jmp
add
mov
jno
pop
or
pop
xor
and
pop
pushf
and
ja
andl
ffree
jge
fdivl
add
jl
push
bound
enter
nop
ret
cmp
popf
pop
jae
cmp
js
fdiv
in
xor
push
cs
jne
mov
push
lods
popa
push
jnp
inc
add
dec
dec
adc
or
lahf
loopnew
fmull
sbbl
repnz
je
out
push
mov
xchg
dec
xor
adc
jnp
sbb
mov
cmp
pop
dec
jle
fcmovnbe
out
add
subb
fcoml
xor
jl
int3
iret
jmp
data16
arpl
shlb
dec
cmpsb
inc
jo
bound
test
jle
shlb
jmp
cmc
in
mov
push
pop
rdtsc
test
mulb
push
mov
sti
lods
daa
lcall
aas
mov
mov
jns
dec
push
xchg
inc
add
cwtl
mov
or
xchg
lret
jae
and
adc
adc
dec
mov
mov
add
fidivrs
imul
divl
jmp
push
adc
inc
xchg
mov
imul
repz
lahf
mov
push
mov
mov
loopne
fistl
stc
test
xor
cmpsb
fadd
mov
test
mov
dec
int3
imul
lahf
pop
into
xchg
out
adc
xchg
lahf
mov
or
das
fisttpll
push
nop
je
cld
sarb
out
pusha
lods
sbb
fisubl
mov
mov
frstor
jno
lods
lods
ret
xor
adcl
push
lock
cmpsl
push
pusha
or
push
test
cmp
adc
xchg
sarb
fiaddl
mov
xor
rcl
push
sti
jmp
push
int3
into
mov
dec
xor
sub
int3
xchg
push
jne
test
dec
xor
outsb
jge
clc
push
or
jne
das
stc
mov
bound
mov
mov
inc
repz
ret
shll
ret
addr16
mov
sbb
test
push
aam
addb
mull
push
xchg
sub
out
and
xor
mov
push
stos
int3
xchg
inc
ja
jmp
stc
int
ficoms
jge
dec
and
stc
pusha
xor
ficompl
stos
pop
adcb
push
lock
sub
jo
dec
add
add
sbb
pushf
mov
fbstp
mov
push
or
adc
iret
sbb
into
imul
mov
out
add
dec
jecxz
lret
xchg
sbb
inc
lods
fwait
scas
mov
add
pusha
and
icebp
and
std
inc
gs
fisttpl
xor
sbb
sarl
lods
mov
pop
fdivrl
dec
pop
fisubs
xor
mov
sbbb
ss
sub
xor
mov
mov
into
les
je
lods
mov
and
out
sub
in
push
inc
adc
int
scas
mov
mov
subl
lret
and
sub
push
nop
and
adc
icebp
addl
movsb
jnp
mov
arpl
xor
rcr
inc
mov
aam
stc
int
loop
pop
jmp
sub
jo
adc
sbb
leave
pushf
stc
les
mov
cmp
int
mov
xor
xchg
popf
inc
dec
jne
and
clc
pop
andb
insl
and
sbb
and
mov
ljmp
mov
inc
xchg
mov
adc
push
cs
inc
mov
mov
cmp
mov
fisubrs
mov
scas
fs
rol
test
imul
push
repnz
sbb
xchg
and
fwait
or
incb
ja
pop
inc
lock
cmpsl
stc
xor
or
cmp
sub
fstpt
jmp
movsl
mov
or
xchg
enter
inc
xchg
ljmp
lods
gs
push
xor
push
es
mov
int3
aaa
stos
cmp
sbb
push
flds
popf
sbb
mov
mov
repnz
test
mov
repnz
or
stc
aaa
aam
je
pop
js
out
test
mov
cmp
loopne
enter
mov
jne
popf
dec
fwait
adcl
lea
lea
or
cmp
sub
pop
inc
xor
aad
lret
sbb
mulb
rol
call
mov
cmp
mov
push
test
mov
push
fstl
aaa
lret
adc
cld
push
sub
call
xchg
pushf
push
push
dec
push
push
addr16
push
xor
test
leave
cld
dec
repnz
xchg
or
aam
jne
mov
or
xchg
or
mov
sub
decb
pop
sbb
pop
aam
out
adc
jae
stc
cmp
gs
xor
ret
ret
or
std
inc
cmp
dec
sbb
and
clc
push
push
and
add
fdivs
jmp
mov
out
mov
shrb
and
shrl
loopne
js
stos
jne
fcompl
mov
nop
dec
sarb
test
mov
pop
shrl
push
jle
cmp
push
push
int3
repz
jp
mov
mov
push
rol
or
mov
lods
dec
sub
mov
and
mov
ret
pop
aaa
popa
data16
xchg
xchg
enter
lahf
out
inc
mov
or
into
and
and
das
pop
push
mov
inc
jl
outsl
stos
icebp
jp
lret
pop
mov
mov
inc
fmulp
cld
dec
jns
stos
sbb
iret
fstps
hlt
xchg
dec
cs
push
rcll
insl
inc
xor
dec
xor
scas
inc
ret
or
xor
mov
in
cmpsl
in
pcmpeqb
pushf
scas
in
xchg
mov
sbb
cs
pop
mov
push
out
push
mov
test
jmp
insl
push
mov
dec
iret
mov
cmc
adc
cmp
dec
mov
jbe
mov
dec
xchg
rorb
movsl
cmp
xor
out
pop
adc
mov
stc
aam
je
mov
in
mov
hlt
pop
sub
iret
pop
adc
dec
add
jns
mov
mov
cmp
shl
and
push
add
outsb
or
icebp
mov
ds
repz
dec
push
or
push
ss
lods
mov
fstps
add
repz
in
jle
lods
push
movhps
jae
rolb
pop
fwait
inc
xchg
xchg
or
pop
inc
jnp
test
subl
jnp
cld
pop
add
mov
je
sti
fcmovne
mov
addr16
in
xchg
lret
inc
and
cli
jnp
xchg
cmp
pop
push
pop
pop
repz
jmp
mov
pop
sub
fstpl
xor
push
mov
jl
and
pop
inc
pop
movsl
push
lcall
ja
push
in
sbb
xor
sbb
mov
sub
fidivl
imul
dec
jne
xchg
mov
and
rcll
inc
xor
push
add
cld
rclb
ja
iret
mov
or
mov
lods
shl
movsl
pop
lods
das
mov
movsb
or
fs
xchg
cs
popa
or
jo
fdivr
fidivl
shrb
jb
orl
and
fwait
das
js
sbb
adc
popa
or
aam
cmp
out
daa
outsl
lcall
insl
and
adc
loope
push
push
push
mov
repnz
out
xchg
sbb
or
adc
std
pop
xchg
fwait
lea
mov
xlat
mov
xor
aad
test
je
test
in
or
cmpsl
shlb
or
test
add
lds
nop
xchg
cltd
xor
mov
fldl
or
sbb
or
loope
pop
cwtl
test
push
ds
rolb
orb
cli
dec
cli
pop
push
pop
push
dec
ja
scas
add
mov
mov
add
ret
out
adc
in
lahf
and
sub
mov
push
shl
cmp
gs
je
xor
add
inc
adc
adc
in
adc
cmp
pop
cltd
fimull
test
bswap
gs
sub
cmpsb
inc
ffree
adc
mov
jle,pn
mov
clc
mov
imul
sbb
mov
xchg
in
int3
lret
mov
out
shrl
aas
and
test
inc
shll
xor
xor
xchg
add
roll
sbb
dec
xchg
sub
fmul
arpl
cltd
mov
lea
movsl
mov
mov
and
and
loopne
in
sbb
fwait
clc
mov
in
rorb
pop
fidivl
pop
mov
mov
sub
cmp
mov
jg
lock
mov
lock
push
loop
xchg
fsubrl
sbb
or
push
mov
mov
sub
shrb
ss
jmp
hlt
push
push
push
lods
loope
fdivs
jne
jb
test
cltd
in
stos
in
aam
mov
loope
sub
fsub
rcrb
sbb
mov
xchg
idivb
aam
inc
xlat
lods
fnsave
add
pusha
mov
mov
mov
popa
jo
scas
push
add
and
icebp
jge
mov
adc
dec
cmp
xchg
arpl
inc
inc
ret
mov
aad
or
aas
push
mov
fsubrs
pop
jns
and
das
add
mov
mov
pop
cmp
roll
fstl
jge
xor
das
jb
xor
or
sub
leave
lods
das
sbb
jge
or
pop
inc
jb
mov
stos
xor
xor
out
fs
mov
shll
icebp
and
aam
push
xor
dec
mov
outsb
mov
cmp
and
pop
addb
into
adc
iret
loopne
xor
add
loope,pn
mov
les
sbb
push
cld
lahf
push
pop
sub
mov
imul
sti
cmp
lods
push
ljmp
jb
push
mov
or
mov
add
jb
jle
bound
popa
ret
andb
ror
cs
out
xor
mov
idivb
mov
add
adc
adcl
fsub
add
jne
test
jg
dec
xlat
push
sar
scas
cmp
push
sbb
jns
add
jle
dec
shrl
fdivs
mov
mov
in
sub
in
push
dec
sbbb
mov
aad
jmp
mov
mov
push
rcl
add
fisttpl
inc
arpl
lret
push
lods
aam
dec
popa
pop
daa
xchg
mov
repz
xchg
dec
in
in
rcrb
mov
addr16
xor
and
or
jns
or
rol
sub
mov
imul
dec
lret
jecxz
sbb
scas
push
lahf
mov
call
mov
cli
push
lods
push
xchg
inc
cltd
negb
or
mov
xor
jnp
icebp
sub
jmp
in
inc
out
js
sub
mov
mov
in
sub
shll
loopne
cwtl
fwait
xchg
mov
lds
ja
ss
mov
cld
mov
lcall
sbbb
sbb
and
ror
or
sbb
mov
es
jp
mov
pop
loopne
repnz
sahf
add
xor
aad
pop
inc
mov
cmpb
jb
push
pop
pop
scas
fbstp
and
and
pop
cld
pop
out
pop
testb
scas
cltd
popf
mov
xchg
xor
movsl
loope
xor
shll
cs
push
repnz
jne
jp
xchg
dec
ret
je
lcall
push
add
push
out
and
popa
jo
out
gs
ss
add
mov
jnp
jg
imul
lods
enter
mov
push
sbb
xlat
ljmp
aad
cltd
mov
jecxz
int3
sbb
pcmpgtd
xchg
sbb
int
pop
mov
out
or
psadbw
pop
movsb
les
fstpt
cmp
cmc
jb
xor
lret
popa
stos
push
jmp
sbb
leave
fcomps
in
adc
mov
lcall
iret
mov
fidivrl
mov
lcall
enterw
cmp
mov
lds
push
popa
test
test
adc
add
xchg
pop
mov
loope
in
push
and
je
nop
adc
scas
sti
repz
sbb
popf
xchg
lcall
adc
xchg
scas
loope
mov
in
bound
mov
pop
out
nop
cmp
pop
popf
xchg
cmp
and
shufps
in
movsl
add
ljmp
push
xor
dec
or
pushf
cmp
xchg
popa
and
arpl
repz
jecxz
add
lret
leave
test
xor
dec
push
cmp
idivb
add
cmp
iret
add
and
sbb
or
arpl
daa
pushf
sbb
jae
cmc
sbb
std
mov
add
sbb
es
test
cmc
xor
inc
mov
popf
add
sbb
clc
test
sbb
das
gs
stos
insb
idivl
sbb
clc
call
imul
mov
dec
mov
jl
push
xor
aad
add
xchg
cmp
mov
mov
xor
pop
stc
and
and
ds
lods
pop
mov
jno
mov
push
jns
mov
jnp
sub
imul
mov
aaa
pop
faddl
xlat
scas
test
sbb
xchg
outsb
sub
fcoms
gs
mov
jns
enter
add
add
pop
mov
cmp
sbb
arpl
adc
jbe
or
xor
fisubs
add
mov
fldenv
cmp
es
push
jp
fdivp
adc
push
ret
scas
push
inc
in
ret
sar
jmp
addb
nop
sub
inc
sub
sub
sbb
push
dec
sbb
xor
addr16
inc
jp
pop
fisttpll
xchg
mov
xor
insl
jne
push
or
push
inc
jb
call
push
xchg
fisubrl
adc
cmc
push
psubb
mov
cli
push
fwait
or
lret
xchg
sbb
std
and
sub
loope
and
xchg
mov
pop
cmp
xchg
insl
cmp
mov
in
outsb
mov
cmpsl
cmp
mov
nop
add
movsl
push
ffreep
hlt
cwtl
jnp
gs
aaa
pushf
or
jg
das
fs
jbe
shrb
lret
cmpsb
push
clc
dec
jns
mov
adc
xor
jb
sbb
jmp
mov
insl
inc
clc
push
mov
loop
add
inc
pop
test
out
sub
dec
std
fmuls
nop
sar
movsb
jnp
fildll
callw
sub
inc
ret
mov
add
shlb
fs
call
or
or
aaa
loope
push
jmp
push
out
jne
adc
ljmp
or
outsl
stc
mov
daa
sbb
and
push
rorl
push
xor
inc
std
add
imul
enter
orb
push
cmp
lret
leave
test
adc
sar
cltd
push
lcall
mov
in
aas
or
ljmp
lea
push
cld
movsl
jmp
push
pop
pushf
enter
and
and
jbe
adc
xor
cwtl
jmp
in
cmpsl
lcall
clc
xorl
or
sets
repz
cwtl
nop
mov
test
setle
xchg
sbb
loop
int3
stos
negb
pop
negb
out
mov
pushf
lods
lret
lock
int3
fdivl
shlb
addl
jmp
fisubrl
mov
lods
mov
es
xor
jecxz
inc
push
pop
cmpb
insl
lret
fstps
mov
adc
inc
jns
outsb
lret
mov
push
inc
jb
jecxz
jmp
aas
iret
mov
dec
jmp
iret
inc
xchg
sub
das
push
cmpl
icebp
fistpl
out
xor
mov
adc
dec
in
sbb
aas
ds
xchg
aam
adc
mov
outsl
stc
cmpsl
in
shrl
jge
cmp
sub
outsb
sahf
int
jmp
or
popa
out
popa
and
aas
push
push
fs
cmp
arpl
dec
adc
lahf
aas
in
mov
out
and
inc
inc
jo
mov
xor
mov
mov
hlt
jnp
cmp
punpcklbw
sub
sbb
fdivrp
jle
imul
test
xor
insl
jno
imul
dec
cmp
fisubs
out
cmp
aad
lret
out
pop
in
or
jbe
adc
lea
or
popf
xor
lahf
inc
cmp
or
mov
xchg
sti
mov
or
cli
xchg
and
sti
pop
adc
pop
stos
repnz
mov
ficompl
das
push
xlat
mov
cli
jmp
dec
in
aam
jae
xchg
lahf
and
sbb
push
subb
xchg
fsts
jnp
nop
fwait
lcall
add
pop
dec
inc
fwait
ret
jb
imul
dec
adc
push
xor
jbe
stos
pushf
lret
mov
pop
adc
popa
xor
xlat
in
sbb
xchg
enter
les
nop
add
and
data16
imul
jae
call
les
fwait
xchg
mov
xor
cmpsl
mov
xchg
std
fcom
les
dec
negb
lods
jg
sub
mov
cmpsb
inc
push
mov
orl
cmp
sbb
iret
sahf
das
outsl
hlt
lret
lcall
lea
je
mov
dec
fisubrs
mov
ret
pusha
repz
lds
mov
fwait
loopne
js
sub
push
cmp
pop
pop
aam
mov
in
lret
sub
ficompl
xchg
int
out
xchg
xor
repz
mov
inc
movsb
andb
std
inc
ss
jo
icebp
lcall
adcl
push
jmp
jg
xchg
lahf
dec
imul
add
mov
and
fsubl
insb
add
push
and
inc
insl
aam
lods
mov
rclb
inc
inc
sub
jecxz
add
add
sub
dec
ss
mov
vcvtsi2ssl
jmp
shll
inc
ret
add
ret
xchg
filds
dec
pop
scas
fnstenv
adc
jae
mov
in
clc
test
mov
imulb
rcll
cmp
dec
flds
cmp
push
mov
jbe
sbb
ret
sbb
loop
fisttpl
jle
push
leave
cmpsb
sbb
dec
jae
daa
mov
lret
xor
xchg
std
dec
jns
loope
jp
xlat
dec
mov
mov
std
scas
jns
sub
insb
xorb
mov
pop
orl
in
ds
clc
lcall
cmp
loopne
jne
cli
xchg
loopne,pt
and
mov
mov
inc
mov
or
addr16
xor
cli
pop
add
imull
mov
sbb
clc
jecxz
mov
sub
cli
shlb
jno
inc
xor
jno
dec
lods
neg
fdiv
or
jbe
mov
dec
daa
dec
cmp
shlb
or
and
aam
gs
fisubl
int3
mov
jl
push
daa
jb
xor
inc
in
push
adc
mov
test
mov
mov
sub
sub
dec
sub
jmp
mulb
aad
lcall
cmpb
push
aam
enter
sub
cs
dec
in
cmpsl
mov
in
rorb
imul
outsb
std
sti
sahf
dec
mov
lahf
pushf
ds
pop
cmp
push
jge
xchg
ds
icebp
push
xor
or
test
pop
push
dec
push
div
push
leave
es
lds
out
sbb
loopne
mov
cwtl
xor
mov
ljmp
pushf
in
or
cmc
or
lea
lcall
mov
inc
loope
and
mov
stc
les
adc
arpl
in
mov
inc
out
adc
pop
xor
inc
addl
shr
insl
pop
sub
in
out
pop
push
fistl
or
sbb
xchg
shll
dec
dec
dec
push
sub
popf
add
addl
ret
mov
out
push
cwtl
mov
mov
or
loope
sub
ret
pop
es
fldt
shll
jmp
adc
push
outsl
pop
xchg
push
sarb
inc
std
adc
sub
mov
inc
dec
decb
add
shlb
in
mov
hlt
sbb
or
es
outsb
loope
popa
adc
jne
cwtl
push
jns
shll
push
sbb
add
jne
es
daa
nop
mov
sub
adc
jmp
lahf
call
rcrb
out
and
in
out
and
out
mov
mov
hlt
es
mov
cmp
imul
out
push
pop
and
cmpsb
sahf
test
add
clc
jg
sbb
xchg
push
lretw
repz
pushf
ret
xchg
pop
out
xlat
jg
lcall
cltd
test
ss
js
mov
or
pop
arpl
mov
or
adc
aad
mov
push
call
pop
pop
and
jno
repz
xlat
dec
scas
outsw
and
fs
push
push
cmp
and
jl
xor
dec
inc
mov
sarl
je
scas
dec
into
aas
scas
xor
mov
shr
and
cwtl
jne
dec
xor
notl
iret
sbb
mov
add
popl
dec
out
push
in
jl
iret
sub
push
and
jne
cmpsl
in
test
xor
jmp
test
cmp
mov
xchg
lret
sbb
rol
enter
bound
neg
push
xchg
dec
lea
and
insl
or
repnz
rorl
sub
test
push
aas
imull
pop
jle
adc
daa
xchg
push
cld
in
iret
adc
and
out
cmp
notl
jnp
add
outsl
mov
int3
add
mov
dec
mov
add
push
stos
sti
mov
jmp
aam
cmpsb
mov
ss
daa
push
sbb
dec
test
fst
xchg
pop
xor
push
sub
xchg
cmpsl
mov
jno
xor
aad
daa
jo
sbb
sub
jb
add
inc
xlat
fwait
cmp
or
xor
mov
jg
shr
test
jns
mov
ljmp
jae
aam
or
xchg
jle
fcoml
dec
fildll
rolb
lea
lret
orb
fnstenv
mov
push
mov
test
fwait
out
aam
add
xchg
xor
into
notl
rcl
call
mov
cltd
in
out
les
ja
or
mov
pushf
mov
or
dec
dec
aad
loope
push
jns
push
mov
add
jmp
mov
in
pminsw
pop
adc
daa
pusha
xchg
sub
cmp
cmp
loope
mov
lds
pop
add
mov
imulb
jmp
dec
movsb
xchg
jp
fcomps
and
sahf
or
test
mov
mov
idivl
xor
ret
push
stos
into
add
push
outsl
and
shlb
xor
cld
xchg
loopne
clc
imul
cmpsb
sbb
pusha
mov
push
sbb
lock
cmp
in
jge
sbb
sub
ljmp
pop
popa
jmp
dec
ja
add
fstpl
daa
movsl
shll
es
jae
sbb
repz
inc
imul
pop
idivl
fsubl
mov
pop
ss
cmp
es
loopne
or
mov
mov
lods
jl
fwait
lock
mov
in
and
sub
out
fucomi
scas
xchg
add
or
aam
clc
add
cmpsl
xchg
addr16
cmp
sbb
mov
inc
test
adc
mov
movsb
sahf
fsubl
aam
mov
shll
int
nop
addr16
or
push
adc
mov
rcll
adcb
outsb
clc
imul
pop
nop
clc
addl
cltd
mov
sub
pop
fsub
cwtl
lret
jb
mov
out
cmp
test
and
add
sti
xchg
repz
jno
pushf
in
rcr
adc
sub
sbb
xchg
sbb
jne
or
xchg
dec
outsl
sub
leave
push
ja
gs
and
sub
mov
pop
pop
inc
in
mov
insb
popf
push
dec
insl
shrb
push
or
sub
rcrb
xchg
adc
pop
push
dec
popa
stos
xor
nop
insl
pop
or
push
lcall
call
cmp
cwtl
add
jg
insb
pushf
mov
dec
cli
dec
add
mov
pop
mov
mov
hlt
jp
cwtl
cmp
in
incb
xchg
jns
jb
pop
ret
je
cltd
xchg
fsubrs
fs
jmp
cmp
jno
xchg
push
xor
pop
mov
push
aam
cmp
lret
adc
call
into
inc
push
scas
mov
aad
adc
cmp
inc
imul
pop
leave
adc
enter
push
movb
mov
in
jle
ds
pop
xor
jbe
nop
ficompl
push
xchg
jge
xchg
ret
mov
ffreep
mov
jecxz
push
inc
stos
fwait
jb
andl
mov
arpl
sbb
and
outsb
mov
std
adc
pop
jmp
push
enter
cmc
mov
popf
movsb
loopne
mov
mov
adc
ja
aam
inc
test
fs
outsb
and
leave
and
test
push
test
stos
cwtl
inc
enter
or
fxch
push
lret
or
into
push
or
ficompl
push
into
ret
cs
int
test
jno
test
xor
and
mov
mov
das
loope
subb
ja
inc
dec
shrb
mov
cli
lds
jg
out
aad
adc
or
cmp
les
sbb
inc
jns
lds
and
stos
fmulp
xchg
loope
arpl
xchg
add
cmp
mov
in
std
mov
xor
or
jp
movntq
out
adc
jae
pusha
pop
es
js
loopne
fsub
push
idiv
and
lret
pop
repz
inc
jge
cmp
repnz
fmuls
dec
xor
cmp
arpl
pusha
adc
mov
mov
pop
jns
int
sbb
add
inc
je
mov
hlt
stos
add
rcrl
lods
mov
scas
mov
dec
lds
cmpsl
aad
pusha
pop
fwait
mov
inc
dec
or
xor
jmp
pop
jne
pop
lret
add
dec
test
xchg
mov
test
ja
out
je,pt
mov
pushf
cld
inc
stos
je
push
add
dec
and
mov
xchg
sbb
gs
ret
jnp
xor
std
ret
lods
je
iret
push
das
mov
aas
insb
push
xor
mov
mov
cmpsl
fbld
mov
jnp
into
xlat
pop
sub
xchg
cmp
outsl
lcall
inc
adc
pop
inc
push
mov
cs
mov
lods
jmp
or
mov
mov
inc
adc
push
or
ret
pop
iret
out
js
mov
inc
pop
or
rorl
add
xchg
xor
jae
push
out
fs
push
fbld
rorl
add
dec
sti
mov
lods
cmp
cmp
push
insl
cmpsl
loope
sbb
pop
cmp
jle
lock
or
push
lret
push
imul
add
jl
mov
in
jns
jecxz
mov
sub
adc
dec
mov
movsb
call
mov
flds
xorl
je
pop
fwait
je
rorl
dec
ss
cmp
lcall
dec
sbb
lahf
fs
push
mov
sti
cmpsb
shll
add
or
in
jns
leave
or
fistl
push
mov
mov
pop
xchg
push
dec
scas
addb
outsb
call
or
jb
xchg
mov
push
lods
ss
jo
lahf
icebp
clc
test
adc
cmp
je
shll
leave
mov
push
or
out
push
jecxz
xchg
in
rcrl
jmp
insb
push
adc
leave
sbb
dec
shlb
jmp
nop
mov
xchg
adc
cs
ds
ret
xor
mov
add
xchg
and
clc
bound
xor
sub
jmp
cmpsl
jecxz
pop
adc
std
loope
pop
jns
push
pop
arpl
popa
xor
jge
pushf
adc
stc
pop
cltd
mov
sub
mov
jge
xor
push
movsl
cli
popa
push
lret
mov
jne
fs
and
adc
les
pop
cli
shll
xor
sub
jp
lds
leave
shlb
inc
push
inc
popf
data16
mov
jle
rcrl
andl
and
sub
sarb
sbb
jns
push
cmp
fimuls
and
pop
inc
xchg
sbb
mov
xlat
int
xchg
lods
sub
mov
and
jne
lock
sbb
add
mov
subl
inc
sub
jmp
idivl
fdiv
dec
lods
mov
ja
jmp
jae
sub
andl
pushf
filds
jp
sbb
jmp
xchg
sbb
sub
mov
mov
rclb
movl
mov
xor
pop
add
pop
jle
sub
or
in
sub
lahf
imul
jg
insb
push
aam
push
loop
in
testb
cmp
imul
jns
decb
push
xor
movsl
mov
insl
push
push
cmp
pop
lods
scas
xchg
xchg
mov
test
psubb
pop
xlat
ds
push
mov
lods
mov
cli
sbb
mov
sahf
icebp
push
daa
xchg
jns
cmp
call
fidivs
mov
push
outsl
mov
push
pusha
push
cli
pop
pop
fiadds
dec
mov
xchg
std
frstor
stc
cmp
lret
pop
xchg
or
or
jecxz
mov
push
adc
jmp
or
jle
fistpl
push
lea
test
mov
xor
push
cwtl
test
sub
jo
imul
dec
sbb
mov
xchg
repnz
pop
inc
sub
jecxz
jne
xchg
sarl
and
stos
test
pop
and
sub
inc
pop
pop
mov
push
fcom
sub
mov
dec
cmp
mov
inc
mov
dec
push
jbe
mov
std
xchg
std
sbb
ds
push
inc
das
movsl
push
pop
xor
mov
loop
leave
data16
imul
lcall
loope
push
mov
mov
das
jne
cmpsb
mov
out
fcmove
cmp
movb
push
jb
jb
lods
inc
popf
and
data16
sub
nop
sub
fwait
mov
sbbl
mov
or
inc
mov
es
into
jnp
cmp
mov
jg
cmp
aas
ljmp
xor
imul
outsb
daa
test
sub
loopne
jae
sbb
test
add
icebp
pop
or
dec
add
decb
push
call
pop
test
inc
jnp
movsb
sbb
jo
jmp
addr16
dec
push
inc
movsb
mov
test
jle
mov
enter
jg
cwtl
repnz
out
stos
stos
sbb
out
ja
cmp
mov
pop
mov
or
cltd
mov
sub
jne
mov
adc
xor
mov
mov
or
cmc
stos
add
cmc
mov
add
xor
pop
jge
push
dec
jo
out
into
mov
cmc
test
push
pushf
and
inc
sti
lahf
lea
rolb
loope
bnd
jl
dec
jl
sbb
jp
sbb
pop
sbb
in
jo
insb
loopne
jecxz
pop
aad
or
popf
adc
jno
in
xchg
shl
rcl
mov
loop
mov
push
and
test
mov
pop
dec
clc
sbb
pop
mov
dec
rclb
add
add
sbb
inc
js
stc
xchg
cs
mov
adc
in
mov
jns
lock
pop
scas
testl
adc
shrb
dec
mov
mov
repz
xchg
popf
and
call
push
add
or
and
shr
pop
adcb
xchg
ret
sbb
sub
add
aad
fwait
neg
cmpsl
push
or
dec
xchg
loopne
jae
cmpsb
add
push
jecxz
fcmovnu
ja
sub
dec
pop
imul
jmp
cmp
cmp
aas
xchg
jmp
xor
jl
popa
cmp
mov
jns
sbb
push
xchg
push
sub
inc
cmpsl
js
rorb
xor
xorl
stc
adc
decl
inc
dec
outsl
mov
inc
mov
mov
cmpb
out
fwait
addl
cmc
movsl
mov
popa
mov
push
cld
shrb
mov
mov
cs
sub
or
xchg
bound
xchg
add
fsubl
test
ret
jl
push
and
mov
cmp
inc
cmp
jp
fcompl
sub
sub
into
out
insb
jbe
insl
enter
push
aad
sbb
loop
jne
jae
addr16
pop
add
push
je
or
mov
inc
in
lcall
lock
dec
sbb
jl
cmp
inc
hlt
sbb
or
pop
inc
mov
sbb
push
mov
test
psubusb
and
adc
testl
xchg
sbb
xchg
cmp
inc
add
pop
mov
out
jle
clc
ds
mov
pop
pop
sahf
pop
sub
outsl
in
jmp
cs
push
fmuls
ja
mov
test
cmpl
je
inc
out
mov
push
int
rolb
aaa
mov
test
pushf
jnp
insb
icebp
int
pop
mov
add
fs
nop
test
push
in
scas
lock
mov
or
mov
lods
popf
icebp
or
xchg
mov
popa
andl
pop
das
gs
and
push
sbb
xor
ja
arpl
add
test
roll
outsl
js
xor
bound
mov
adc
and
movsl
adc
pop
cmpsb
out
lcall
in
pop
push
sub
fadd
dec
pop
or
gs
arpl
lock
mov
aaa
jae
pushf
add
cwtl
and
xor
mov
sbb
push
xchg
aas
adc
mov
jns
int
xchg
divl
int3
loopne
mov
arpl
mov
or
and
subl
int3
jns
jne
lret
adc
inc
push
xchg
mov
xchg
bound
mov
mov
lds
pop
cltd
push
sti
lods
rorl
lahf
out
scas
pop
jb
lret
cmp
xor
cmp
xchg
testl
movsb
aaa
and
lret
lret
cmp
lcall
lea
sahf
inc
mov
inc
lcall
in
sbb
cltd
pop
and
jno
test
jns
pop
lret
adc
stos
jns
push
add
xor
jno
inc
or
outsb
cmc
adcl
pop
jae
mov
cwtl
out
mov
pusha
insb
and
daa
mov
loope
inc
or
insb
mov
inc
xor
push
cmc
jns
loope
fidivs
mov
push
lcall
xor
or
loope
inc
mov
sti
cmp
mov
leave
orl
dec
loope
loope
insb
dec
add
ret
mov
aad
rclb
inc
sarl
inc
mov
stos
fstps
or
mov
sbb
push
outsl
xor
push
mov
dec
or
sub
adc
repz
jo
cmpsb
mov
push
insl
add
and
aaa
inc
mov
dec
xchg
sarl
out
mov
xor
dec
loop
xor
xlat
mov
mulb
out
ret
and
mov
mov
clc
pop
aas
fildl
sub
xchg
sti
mov
fdivr
fisttpl
push
addr16
mov
out
out
out
xchg
mov
lea
or
mov
mov
lods
inc
inc
push
sahf
push
mov
add
push
dec
pop
mov
das
jne
push
mov
push
or
sub
add
cmpsb
bnd
movsl
lcall
fwait
or
daa
mov
test
push
rorl
lcall
mov
jecxz
or
outsl
pop
or
dec
inc
dec
mov
mov
add
and
xchg
lds
xchg
sub
jb
push
push
fldenv
cmp
ret
mov
in
mov
out
sub
dec
push
jno
pop
push
dec
pop
jb
test
and
insl
es
sub
mov
sbb
cmpsb
add
xor
mov
divb
push
mov
xor
popa
leave
xchg
mov
mov
adc
jle
pop
mov
jl
aam
in
adc
pop
leave
xlat
mov
adc
pop
jp
adc
clc
add
pop
scas
adc
jl
addr16
mov
pop
out
mov
xchg
add
outsl
dec
popa
repz
jecxz
inc
jge
test
fisubl
not
adc
loopne
fnsave
inc
ja
fmuls
setge
pop
outsl
jmp
add
mov
out
test
int
pop
jecxz
lods
loope
cmp
add
cmp
std
pop
add
or
jg
outsl
push
mov
sub
cmpsb
add
mov
add
cmp
bound
call
mov
ficompl
pop
xchg
push
sbb
sub
add
mov
decl
mov
into
sarl
sub
fld
or
and
jl
leave
sub
mov
cmp
adc
and
dec
test
and
push
or
jge
pop
or
mov
sbb
or
inc
aas
test
mov
pop
add
jge
daa
shl
shl
dec
xlat
push
movb
xchg
xchg
subb
inc
jb
add
mov
mulb
bound
dec
imulb
add
insb
pop
mov
dec
inc
int3
sbb
and
push
cmpsl
dec
rorl
nop
xchg
xchg
sarb
push
ss
jg
dec
movsb
cwtl
dec
push
push
mov
push
rcrb
dec
pcmpgtw
ret
out
add
mov
add
sbb
scas
js
jb
lock
sub
push
jo
sbb
add
test
shlb
jl
and
mov
or
xchg
fstpt
roll
cmpsl
movsl
push
fimuls
loopne
mov
pusha
fwait
out
sarb
fldt
ret
mov
fstp
testl
ds
mov
xor
je
int
pop
and
outsl
lcall
adc
sub
pop
jbe
loope
jmp
lods
in
sbb
fldt
add
xor
mov
adc
xchg
out
lret
cwtl
ret
sub
push
rcr
arpl
mov
adcb
pop
jne
cmp
scas
sahf
sub
sbb
out
xchg
enter
sub
mov
mov
jg
sbb
aas
enter
outsl
mov
loop
mov
test
notl
jno
movsl
dec
pop
cmpsb
in
push
arpl
mov
test
adc
mov
pop
je
push
sub
imul
mov
cmp
sbb
inc
sbb
lcall
pop
dec
push
add
pushf
in
lcall
ja
ss
pop
xlat
mov
add
popf
out
je
in
mov
clc
push
pop
sub
into
aad
rol
xor
jle
cld
or
call
mov
inc
mov
push
test
nop
mov
cmpsl
mov
xchg
lcall
in
stos
aas
and
dec
mull
addl
lods
mov
stos
fdiv
mov
xor
and
mov
cmp
adc
imul
inc
out
test
aad
adc
loope
cli
lods
add
hlt
cmp
repz
xchg
jno
popa
rcrl
cmp
int
inc
pop
test
nop
bound
shll
es
lods
sbb
mov
sub
das
add
xchg
sub
dec
mov
fisttps
adc
dec
fnsave
gs
cmp
rcl
cmp
cmpsb
hlt
inc
test
lret
insl
mov
out
ljmp
popf
mov
addr16
imul
imul
fwait
xchg
lods
jp
clc
push
loopne
clc
mov
shrl
lea
addb
pop
mov
ffreep
pop
jl
or
popa
testb
lret
inc
pop
mov
inc
sbb
jnp
mov
test
add
push
rorl
lock
sub
pop
sub
dec
cmp
xchg
in
outsb
cmpsl
add
ljmp
movsb
test
fiaddl
fs
xlat
notb
add
sbb
into
cmp
pop
or
add
pop
shrl
sub
cmpb
mov
stos
inc
fldcw
loop
push
movsl
add
xchg
movsb
insb
xchg
pop
mov
test
scas
cmp
push
bound
mov
xor
sub
pusha
push
hlt
fistl
mov
inc
fildll
cld
and
dec
jmp
dec
adc
int3
dec
pop
int3
daa
nop
jns
or
pop
push
orl
outsl
pusha
push
push
jl
jb
pop
cli
cmp
mov
or
xor
shlb
scas
and
icebp
and
add
jecxz
repz
sbb
test
sbb
cmp
xchg
loop
sbb
lcall
pop
adc
inc
in
or
pop
test
xor
rcrl
and
idiv
mov
enter
mov
add
mov
sub
lea
add
pop
push
scas
lods
xlat
fwait
lea
and
stos
and
das
sbb
cmpsl
in
lret
add
sub
add
push
js
pusha
mov
das
jne
sbb
sbb
pop
push
lcall
fs
lea
test
and
std
cmpsl
clc
sub
xchg
lret
xor
cwtl
and
shlb
fsts
sbb
mov
xchg
call
sub
or
mov
mov
dec
stc
fnstsw
inc
aas
ja
push
and
mov
sub
lcall
sbb
mov
jg
movsl
mov
daa
shll
fnstsw
or
add
jno
ret
stos
fisttpl
jg
scas
mov
pop
lock
jle
stos
mov
sub
dec
and
jne
jns
notl
xlat
movsl
je
es
cwtl
mov
dec
call
popa
mov
push
test
jnp
dec
mov
test
mov
dec
icebp
sbb
out
fsubr
sub
pop
clc
add
jl
lods
shrl
push
sbb
sbb
jo
pop
mov
push
cwtl
mov
inc
inc
out
mov
jle
mov
sti
inc
and
cmp
ds
loope
push
das
daa
sbb
mov
scas
bound
iret
in
nop
into
add
add
scas
sahf
ficompl
dec
mov
mov
or
and
cmp
call
lods
gs
aad
fs
push
pop
addb
dec
mov
push
orb
into
les
popf
push
jns
inc
test
adc
lret
inc
lods
jb
icebp
outsb
adc
das
scas
dec
pop
mov
adc
cmc
std
jbe
inc
xchg
add
out
sub
shl
jne
loope
mov
mov
pop
out
aas
aad
push
mov
jno
loop
pusha
std
imul
jb
dec
popa
les
repz
cli
jb
sub
mov
ss
pop
sbb
or
sarb
inc
xchg
stos
pop
lcall
loop
xchg
xchg
out
mov
in
mov
jl
dec
sbbb
add
pop
cli
loope
mov
cwtl
and
mov
mov
lahf
mov
jmp
dec
xchg
fidivl
mov
mov
push
int3
aaa
mov
mov
es
in
mov
sbb
add
jbe
cmpsl
sub
sub
flds
sub
orl
push
mov
mov
and
aaa
jmp
int3
aas
mov
mov
mov
enter
cli
jbe
jae
add
mul
iret
pop
cmp
pop
cwtl
mov
pop
push
or
nop
push
mov
jmp
mov
xchg
data16
das
insb
or
or
mov
push
push
shlb
bound
int
lret
movsb
ds
push
pop
cmp
pop
cmc
jb
xchg
outsb
nop
pushf
push
fimull
or
decl
jmp
mov
add
inc
fisttps
mov
mov
mov
repnz
ret
scas
xor
enter
sbb
xchg
push
pop
repnz
xchg
testl
repnz
mov
outsb
out
xchg
sbb
cmp
test
cli
in
or
jl
fsubl
shll
popa
xchg
push
sbb
add
jb
xchg
push
xchg
sub
pop
sbb
ret
sub
jle
xchg
scas
mov
mov
loope
xor
adc
cmp
lock
ljmp
pop
cltd
or
rorb
sub
push
jg
hlt
les
fiadds
or
movsl
cs
dec
or
ret
mov
adc
mov
jbe
out
push
jp
and
inc
jl
push
dec
aas
mov
in
jge
daa
popa
icebp
push
test
pop
pop
xchg
jecxz
cmp
mov
iret
ror
dec
jecxz
out
loopne
jg
lcall
jae
push
aam
iret
fisttpl
mov
mov
lahf
pop
pop
movsl
or
btc
and
mov
roll
stos
inc
fwait
add
xor
pusha
cmc
jle
inc
or
pop
xchg
push
bound
out
mov
testb
je
fcoms
lock
or
fildl
mov
rcrl
sub
sub
pop
fucom
mov
loop
call
xlat
call
es
inc
sub
pop
call
xchg
imul
into
mov
xlat
push
inc
notb
jnp
xor
sti
push
push
rcrb
sub
stos
popf
enter
mov
and
or
pop
call
ds
ffreep
push
dec
das
icebp
adc
inc
push
insb
test
inc
leave
pop
mov
fcom
and
pusha
out
nop
mov
pop
xchg
push
ja
xchg
cltd
fwait
shlb
mov
repz
jg
adc
jb
dec
or
repz
inc
and
cs
gs
xor
aaa
sbb
mov
push
pop
add
adc
cld
push
mov
mov
add
lahf
pusha
enter
push
out
adc
mov
nop
dec
add
frstor
int
pop
testb
or
into
addr16
cmp
jno
lret
subl
shl
fcompl
in
lods
adc
pop
movsl
mov
mov
fmul
and
outsb
jl
repz
mov
dec
in
cmp
dec
ret
gs
xlat
fildl
mov
pop
pop
sub
mov
add
push
pop
jge
in
push
fdivrp
bound
jne
inc
cs
mov
aam
outsl
jnp
dec
bound
mov
and
rcrb
lret
movsb
pop
imul
subl
or
jle
mov
in
mov
fistpl
stos
push
imul
mov
cmp
cmp
enter
fsubs
and
dec
scas
mov
or
cmp
or
push
sub
imul
out
jle
push
cmp
pop
lds
mov
adc
int3
cmp
lret
dec
lahf
cmp
jecxz
lods
in
call
icebp
out
push
sarl
loop
in
fstps
imul
inc
fsubrs
and
jae
or
pop
out
aas
or
cmp
xor
xchg
in
xchg
clc
push
aas
pushf
or
cwtl
pop
orl
andl
repz
add
jo
shlb
ja
xorb
lea
jecxz
jb
nop
xor
pop
fldenv
ss
shlb
push
inc
xor
aas
outsb
push
cmp
push
sub
and
je
dec
lds
cmp
lods
inc
push
xlat
jp
mov
es
loope
xchg
cmpb
pusha
jb
mov
adc
mov
std
mov
jb
add
repz
push
add
xor
fcos
push
mov
out
jo
insb
xlat
out
adcb
aas
jae
jg
add
cwtl
adc
stc
xchg
test
push
jecxz
fisubrl
adcl
inc
sbb
aad
mov
cmpsl
inc
test
mov
sub
cmpsl
in
jle
loopne
inc
cli
fists
adc
fisubrl
iret
mov
push
test
jge
das
cld
fnstsw
sub
jge
dec
sbb
pop
daa
sub
cmp
out
jne
adc
mov
sub
lods
xchg
cwtl
sub
dec
jnp
mov
add
inc
add
sub
fsubrl
push
sahf
mov
loope
and
ret
mov
cmp
mov
enter
shlb
dec
pusha
pop
dec
xor
cmp
and
pop
cld
aaa
push
mov
lds
mov
pushf
add
shlb
sub
icebp
sub
les
jge
movsb
xor
jbe
sti
dec
mov
xchg
aam
pusha
aaa
add
addr16
mov
ss
jno
add
sub
sub
out
mov
add
inc
hlt
mov
dec
sub
adcb
nop
xchg
loopne
inc
and
sbb
pop
movsl
fwait
aam
dec
mov
sub
push
push
jne
jl
std
in
xchg
fisttps
and
xchg
imul
jo
or
in
js
test
add
outsb
lea
cmpsl
mov
pop
mov
mov
inc
imul
xor
fists
lcall
mov
nop
jae
adc
add
push
int3
dec
sbb
sbb
in
mov
aad
rol
adc
fs
movsl
sbb
or
insl
pushf
xchg
xchg
add
in
fidivs
mov
mov
das
roll
mov
arpl
sahf
mov
mov
and
mov
data16
cmp
les
in
mov
es
sti
adc
cmp
push
dec
add
cld
scas
pop
iret
xchg
adc
in
and
dec
adc
dec
jae
pop
out
jnp,pn
and
outsb
mov
add
and
gs
xor
lods
pop
icebp
shrb
adc
aam
jge
dec
pop
loop
stc
popf
popa
pop
jbe
adc
mov
stos
cmpsb
jbe
shr
lret
ret
push
lret
lea
in
dec
mov
call
outsb
dec
lods
adc
call
adc
inc
fdivs
pop
jne
ret
outsl
push
insb
jg
cmp
leave
xchg
inc
mov
repnz
lret
sub
xchg
lea
aas
inc
lret
mov
test
sub
int
xor
pop
jbe
jae
xchg
sahf
mov
out
cmp
sub
xchg
iret
ret
xchg
in
out
pop
out
or
dec
xor
imul
mov
cmp
scas
scas
push
out
imul
jl
shlb
insb
sbb
inc
inc
xchg
mov
divb
aas
enter
fsubrs
mov
mov
arpl
xor
mov
pop
sub
fwait
push
add
pop
xchg
ljmp
inc
popf
mov
dec
in
iret
ds
std
jmp
mov
sub
xchg
xor
stc
insl
test
xchg
push
clc
test
adc
xchg
fsubrl
jbe
dec
jge
sbb
jo
push
add
dec
jae
ss
sbb
scas
cmp
add
fstpl
mov
stos
push
jl
test
xchg
aaa
scas
sbb
mov
lret
std
cmpsl
int
mov
cltd
nop
lods
scas
sub
lea
pop
xchg
pop
pushf
ds
push
lods
lea
xchg
popa
lods
ljmp
pop
mov
leave
dec
fldenv
jae
jp
std
mov
adc
ret
mov
lret
sbb
sub
bound
call
cwtl
dec
dec
leave
in
nop
adc
into
or
mov
sub
cmp
jns
xchg
les
lds
inc
mov
pop
popf
inc
fwait
mov
cli
ds
jo
repnz
pop
movsl
fnstenv
sbb
and
jno
rcrb
and
push
pop
call
adc
into
mov
mov
and
aam
xor
xchg
mov
and
push
test
fsubr
xchg
pop
sub
pushf
andb
aas
clc
push
sub
dec
cmp
mov
and
in
push
fnstcw
in
lahf
add
adc
cmp
sub
imul
insl
loopne
xor
aas
shrb
lcall
pop
push
imul
mov
pop
mov
cld
lcall
insb
adc
pop
mov
jbe
je
fld
aas
pop
cmp
adc
aam
dec
jns
fadds
cmp
orb
clc
dec
insb
xchg
jae
and
pushf
arpl
dec
sub
leave
jne
mov
iret
or
mov
les
shlb
and
fiadds
cmpsb
inc
shrb
jecxz
fwait
in
mov
push
xchg
inc
rcrl
adc
xchg
je
pop
out
jo
dec
mov
imul
cli
push
fistl
push
jg
aad
sub
sub
in
ja
rclb
adc
push
jae,pn
cmp
push
dec
sbb
mov
jb
cmp
pusha
xlat
xchg
push
mov
aas
leave
fsub
stos
movsl
je
pop
adc
mov
fidivrl
lea
fistl
xchg
lods
lret
es
test
inc
inc
add
pop
inc
xlat
xor
into
bound
loopne
idiv
jecxz
std
ret
lea
fs
push
xor
rolb
sbb
push
adc
outsl
loope
xchg
bound
dec
inc
ret
int
jb
lahf
sbb
mov
ret
mov
sbb
lock
cmc
xlat
aaa
testb
mov
jo
test
inc
pop
jne
sahf
inc
xchg
pop
data16
push
xchg
shlb
pop
lret
div
mov
inc
xchg
ret
imul
popa
rorb
sbb
shrb
mov
inc
sbb
das
in
lret
pop
int
call
cmp
in
imul
mov
or
and
cmp
in
out
loope
mov
cmc
sbb
pop
imul
test
xor
pop
jg
add
movsb
fwait
sub
lods
popf
sub
push
add
xchg
cmp
fisubrs
insl
nop
mov
mov
xchg
jmp
and
int
call
les
cwtl
rol
xor
push
adc
repnz
cs
les
es
jecxz
push
jp
insl
adc
cmp
mov
sbb
inc
ds
cmp
push
outsl
dec
jg
mov
les
mov
push
sub
lods
xchg
dec
fadds
sub
or
xchg
and
dec
pop
pop
imul
lahf
and
mov
dec
rorl
scas
rol
loop
jnp
mov
or
add
ds
imull
adc
aaa
mov
gs
xlat
xor
ds
es
sbb
imul
sub
ss
bound
sbb
mov
arpl
cli
dec
in
cs
rorl
and
je
inc
movsl
in
and
sbb
and
out
imul
cmp
mov
shl
lds
icebp
mov
sub
or
sti
aam
sub
fisttpl
sbb
dec
and
cmp
jg
push
push
ret
xor
push
hlt
mov
jne
mov
insb
loop
xchg
out
push
add
pusha
sbb
sub
test
cltd
mov
sbb
movl
stos
xchg
adc
pushf
and
or
dec
push
pop
add
or
ja
xchg
movsl
mov
cwtl
push
cli
pop
pop
pop
subl
dec
aaa
dec
insb
popa
stos
xor
sub
out
mov
dec
inc
mov
push
add
nop
pop
loop
popa
sbb
mov
stos
or
test
in
aas
scas
aam
in
mov
adc
sti
lret
lret
mov
popf
arpl
adc
xor
xor
jne
or
jmp
test
fnstsw
mov
jecxz
mov
iret
mov
enter
cmp
insl
mov
cld
imul
rorb
call
push
cmp
test
dec
cld
inc
inc
sbb
adc
fisttpll
cmpsl
jecxz
or
out
mov
out
stos
adc
xor
lock
nop
aam
fimuls
push
lret
pop
enter
jmp
mov
adcl
push
inc
pop
movsbl
inc
push
sarb
add
test
stc
lods
mov
out
gs
pop
mov
iret
and
inc
sub
fistpll
cmpsb
sbb
dec
cmp
hlt
fwait
daa
xchg
cmpb
sbb
cmpsb
bound
and
mov
aas
mov
xchg
stos
ss
pop
jl
xchg
mov
mov
fiaddl
mov
push
fnstsw
shrb
mov
mov
scas
pop
mov
rcrl
das
fidivrl
into
mov
leave
sbb
or
andl
dec
mov
mov
clc
push
add
jg
es
sub
cmpsl
mov
lcall
sbb
test
ret
sub
mov
ja
pop
insb
xor
bsf
mov
cmp
cld
adc
pop
push
mov
mov
jmp
fcmovne
stos
in
pop
xchg
stos
aaa
fidivrl
int
leave
push
sti
mov
imul
nop
in
in
in
jnp
push
xor
test
sbb
sbb
enter
pop
test
insl
or
inc
cltd
js
mov
inc
cmp
pop
mov
mov
or
fwait
push
in
mov
and
jne
je
or
push
divb
inc
sbb
push
sbb
in
xchg
mov
fisttpll
and
mov
sbb
das
mulb
lret
sub
sbb
or
je
mov
sbb
sub
jmp
add
mov
cmp
inc
js
sarl
mov
adc
test
cltd
pop
addr16
icebp
xor
pushf
push
push
push
popf
jbe
fimuls
dec
mov
adc
mov
push
subl
aad
xchg
adc
stos
dec
rcrl
push
rol
inc
mov
sub
repnz
mov
push
aaa
into
pop
rolb
xor
and
add
mov
dec
adc
mov
mov
call
jne
lcall
jp
aaa
sti
add
dec
test
adc
and
movsb
es
push
das
push
pop
popl
repnz
adc
gs
test
pop
jbe
ret
ret
inc
call
movsl
mov
cmp
das
mov
in
adc
and
sbbl
sbb
scas
lods
cmp
shlb
mov
cmc
into
es
cltd
or
mov
ds
sub
int
dec
mov
out
lea
mov
stc
dec
sbb
mov
fists
lods
pop
jmp
jg
push
mov
xorl
cli
test
hlt
loop
outsl
dec
xor
ds
popf
push
popa
sbb
aad
mov
lds
fildll
sahf
inc
dec
fisubrs
mov
adc
lret
fisubs
xchg
cmp
jne
sub
sbb
sub
clc
sub
clc
insl
xor
rolb
mul
add
filds
jp
repz
mov
push
pop
add
sahf
adc
jo
imul
gs
pop
jb
add
add
ficoml
call
std
jne
test
call
std
sbb
mov
sti
dec
orb
and
or
nop
sbb
pop
sti
mov
lds
sub
jo
mov
jge
stos
xor
scas
ud1
sbb
xchg
mov
mov
xchg
jecxz
fcmovne
mov
jno
push
cmp
out
jp
test
mov
imul
add
mov
mov
fisubrs
push
arpl
scas
xchg
dec
cwtl
add
icebp
lret
sub
bound
jmp
mov
mov
inc
sub
xor
jl
andl
sbb
mov
in
les
stos
add
and
jne
lahf
xchg
mov
imul
xchg
cli
xor
daa
test
sbb
inc
pop
sarl
sysexit
and
rclb
int
ss
fstpt
mov
pop
mov
sti
xchg
inc
mov
test
mov
and
inc
mov
cmpsl
push
rcl
pop
cmp
sub
push
pop
insb
imul
js
jno
sub
push
shll
adc
cmp
adc
jns
and
cmpb
lret
sub
das
in
inc
mov
jge
loope
sbb
into
cltd
es
pop
sarl
js
sbb
mov
mov
fiadds
out
lcall
jae
inc
rcrb
jno
sub
cwtl
dec
jp
in
out
out
jecxz
stos
add
xchg
push
xor
add
pop
push
cwtl
mov
xor
jle
in
ss
mov
pop
iret
rcll
mov
add
sub
aaa
adc
out
ljmp
lea
arpl
ds
aam
insl
dec
cs
int3
test
cmp
dec
mov
pushf
xor
int
mov
je
jp
sbb
in
jo
push
mov
sti
mov
push
cld
fnstenv
mov
adc
inc
adc
push
std
dec
pop
push
loope
ret
push
cmpsb
lea
inc
adc
dec
jno
jmp
cltd
pop
or
mov
adc
cmc
mov
xchg
lods
xlat
std
movsb
dec
dec
adc
push
sbb
mov
clc
sbb
fsqrt
idiv
lret
ja
decb
jecxz
sbb
decb
adc
dec
jbe
pop
and
mov
dec
ret
mov
adcl
aad
rcll
jns
es
pop
inc
adc
cmp
call
xchg
sub
rcl
inc
or
xchg
sbb
cltd
adc
xor
outsb
jb
cmp
inc
xor
arpl
aad
cld
rorl
sbb
dec
pop
sub
pop
shrb
jb
fs
push
push
cs
aam
and
aam
push
jbe
sbb
loope
das
xor
push
mov
cmpsl
xchg
nop
or
dec
std
push
add
add
sbb
pusha
xchg
movl
mov
js
pop
cmc
test
das
cmp
fwait
xchg
add
fdivrs
rolb
add
mov
fcomps
imul
mov
xchg
ret
add
std
sub
outsb
jmp
pushw
and
pusha
xor
xchg
inc
or
xchg
leave
test
add
xchg
jae
nop
lret
imul
arpl
mov
mov
lahf
das
and
jnp
in
fs
loope
mov
cmp
sub
adc
adc
je
dec
push
sbb
sahf
aam
inc
jnp
push
xchg
iret
adc
ret
mov
dec
push
sbb
adc
sub
sar
mov
leave
ret
movsl
jle
mov
rclb
ret
mov
es
dec
mov
mov
jge
add
xchg
lods
push
lahf
jno
xor
pop
popa
cltd
int3
adc
gs
dec
cmp
mov
cs
mov
inc
mov
shlb
movsb
popf
sub
pop
push
cwtl
sbbl
fdivrl
mov
ret
mov
jle
and
imul
sub
cmpsl
add
mov
loope
nop
in
aaa
adc
pop
jno
lods
out
js
sbb
dec
scas
adc
pop
in
xchg
int3
cmpsb
cmpsl
nop
pop
mov
xchg
out
jns
scas
loop
les
imul
xchg
test
nop
and
imul
cli
sbb
cmp
push
jo
jns
push
addr16
clc
jb
sbb
arpl
adc
xchg
add
fmul
pushf
das
incb
je
fstps
sub
fstps
xlat
roll
push
addr16
dec
inc
mov
mov
lea
movsl
lret
mov
mov
rorl
add
cld
mov
lods
imul
push
and
mov
cwtl
popf
ret
aas
popl
inc
ja
mov
or
lods
add
jle
negl
cld
mov
aaa
lock
adc
mov
add
popa
fidivs
mov
cmp
movsl
insb
out
imul
shr
in
jb
sbb
pop
mov
xor
push
mov
mov
dec
in
fwait
or
imul
pop
push
xchg
rorb
push
sarl
inc
sarl
mov
loop
jp
inc
cmpsl
lock
push
mov
pop
mov
fwait
loopne
mov
mov
addr16
pop
push
pushf
push
sbb
in
jge
ret
cld
rcll
sbb
pop
pop
push
cltd
or
or
mov
xor
mov
sub
in
dec
pusha
jo
xor
xchg
cmp
movsb
jns
inc
adc
mov
movb
movsl
add
pop
sbb
outsl
push
sub
adc
jle
imul
movsb
popf
and
rcll
lret
nop
mov
stc
aaa
int
inc
inc
mov
and
push
dec
sti
cmp
imul
add
mov
and
bound
data16
out
hlt
shlb
sahf
sbb
mov
ds
pop
pop
imul
scas
xchg
push
jecxz
mov
frstor
mov
inc
xchg
addr16
mov
mov
jne
sahf
out
cmp
mov
xchg
jne
fbld
cmp
sbb
pop
and
lea
fistl
cmp
pop
sbb
mov
call
int3
adc
and
cli
xchg
cmp
xlat
cwtl
mov
ljmp
jnp
xchg
cmc
rolb
pop
push
push
or
lods
jbe
xor
aad
loop
mov
mov
lea
dec
in
fdivl
sub
push
inc
pop
jmp
push
or
push
sub
sub
xchg
jmp
jne
ret
jecxz
inc
lcall
lea
mov
notb
jb
sahf
jp
imul
inc
mov
cmp
je
sbb
or
jmp
out
mov
fs
jecxz
sbb
jnp
jp
inc
mov
out
sub
mov
mov
or
test
loope
xchg
pop
pusha
mov
sub
push
enter
mov
in
enter
mov
jle
jns
xchg
pop
sub
cwtl
inc
loop
mov
xchg
dec
lahf
roll
add
dec
out
sbb
fsts
jae
lods
aam
xchg
adc
fldenv
rcrb
inc
pushf
loopne
ret
movsl
pusha
ss
inc
sarb
xchg
sub
andb
inc
sub
dec
jne
ret
xchg
mov
or
test
xor
sbb
and
out
daa
repz
int
fadd
add
test
data16
cmp
aad
lea
ss
fisttps
jl
clc
push
ds
imul
rorb
pop
fwait
shrl
mov
inc
pop
lea
xor
das
sbb
inc
or
rclb
imul
mov
mov
loopne
pusha
arpl
mov
cli
add
adc
mov
push
jl
stos
movb
push
lea
jae
insl
loopne
mov
cmp
mov
mov
push
jl
mov
setno
insb
adc
sub
scas
mov
test
int
xchg
mov
ret
test
lds
sbb
jae
gs
test
lock
sbb
push
sti
xchg
scas
loope
jno
pop
pop
cltd
xchg
lret
mov
pop
mov
dec
push
push
jo
mov
mov
iret
add
sbb
je
fldenv
dec
shlb
popf
mov
sbb
loopne
pop
dec
ds
dec
aas
mov
sti
sub
leave
mov
lret
fcomip
adc
and
cmc
outsw
jb
mov
stos
bound
pop
sbb
inc
je
out
mov
das
cmp
test
decb
or
hlt
adc
inc
fucomp
fidivs
out
mov
jl
cmpsl
mov
mov
fs
or
inc
mov
lods
sub
fnstsw
mul
pop
adc
pop
aad
xor
mov
mov
inc
addr16
dec
push
neg
fwait
cmp
add
out
cmpsb
leave
pop
cmpsb
ret
addl
data16
rol
ljmp
and
dec
sub
icebp
sub
test
inc
sahf
push
dec
push
roll
push
push
js
dec
lods
mov
add
fisttpl
add
loope
or
xlat
inc
fisubl
push
add
lds
das
fiadds
stc
mov
adc
in
scas
and
sub
mov
mov
mov
dec
lahf
dec
mov
outsl
jne
je
stc
jae
lahf
icebp
xchg
jns
lock
xlat
jo
loopne
xor
jbe
inc
cmp
ds
xlat
push
sub
jno
add
jge
aaa
jno
sbb
test
je
ss
inc
lcall
lahf
test
jbe
mov
shll
aad
scas
mov
add
xchg
adcb
fldt
and
jne
adc
pop
pusha
xchg
mov
adc
ret
push
xchg
mov
adc
popa
and
sub
fisttpl
and
xchg
aaa
out
lcall
or
bound
dec
test
xchg
ss
pushf
cmp
leave
mov
insb
push
mov
in
test
xor
cmc
lods
out
das
sbb
orb
add
std
and
enter
dec
mov
xchg
push
jg
adc
xchg
fldt
and
cld
cmp
scas
mov
xchg
fdivl
sbb
orl
aam
dec
outsb
or
jno
xchg
cld
cli
inc
and
fnstsw
sbb
inc
xchg
xlat
push
testb
fmuls
push
mov
aaa
addb
clc
dec
sbb
je
push
mov
leave
pushf
fidivrl
push
mov
push
test
std
jbe
pop
inc
pusha
pushf
add
jo
rorb
mov
xor
hlt
pusha
mov
sbb
and
lret
in
sub
jo,pt
pop
stos
imul
lods
sbb
lret
ss
xchg
mov
sub
out
pop
popf
movsb
mov
fisubs
mov
sub
mov
shll
int
das
push
jl
push
enter
mov
arpl
stc
lock
popa
xlat
sbb
mov
fldenv
xchg
inc
add
ret
addr16
dec
and
idiv
xor
out
adc
mov
dec
cmp
push
cmp
jmp
inc
pop
jo
xchg
or
imul
fstps
leave
rorb
das
js
pop
enter
adc
push
jno
out
cmp
std
cli
jno
fs
xlat
lods
data16
push
and
and
clc
mov
lcall
xor
sbb
add
cmpsb
pushf
mov
rcrl
push
jge
mov
adc
icebp
lahf
rcrb
sbbb
movsl
gs
dec
arpl
fisubs
jl
push
mov
add
push
fcompl
jbe
add
aam
mov
pop
pop
addb
adc
cld
lock
mov
in
xor
dec
mov
in
pop
xchg
stos
cmpsl
and
jle
sbb
and
sub
ss
test
xchg
or
adc
repnz
divb
cmp
fsubrp
pop
push
lock
sti
aad
cmp
in
movb
fnstenv
dec
js
mov
outsl
pusha
call
mov
add
paddb
repnz
sbb
push
cmp
mov
or
mov
mov
subl
imul
dec
dec
push
icebp
imul
out
mov
out
inc
repz
and
cmp
sbb
mov
pusha
xchg
jg
ljmp
aas
mov
scas
xorl
lahf
jno
or
inc
iret
repz
mov
adc
pop
in
or
push
ja
dec
push
out
pop
push
pop
push
xchg
jne
lods
test
rcll
fdivl
jnp
mov
xchg
xchg
into
decb
imull
mov
or
jge
sub
out
int3
in
inc
mov
addl
inc
sbb
mov
push
mov
or
add
aam
pop
mov
xchg
sbb
mov
mov
jno
lods
cmp
sbb
or
icebp
insb
jge
cld
das
pop
xchg
sbb
repz
add
push
push
fdivr
fcmovne
cli
mov
in
jle
popa
mov
rorb
pop
testl
inc
fsts
and
cmp
in
and
ret
pop
fistps
push
add
push
movsl
adc
idivl
mov
mov
out
xor
stos
iret
loope
mov
pop
adc
stos
std
nop
pop
and
loopne
ficompl
icebp
repz
mov
adc
and
inc
jbe
push
fcomi
ss
mov
inc
mov
inc
xor
jecxz
clc
imul
mov
popf
xchg
dec
and
pop
sti
notb
fldenv
mov
push
dec
xor
mov
adc
imul
iret
inc
pop
scas
test
roll
mov
push
pop
insl
pop
xor
xlat
fsts
sub
inc
pop
cmp
mov
cltd
rorl
sbb
and
test
jecxz
inc
add
add
in
std
push
jmp
mov
mov
aad
popa
cs
sahf
or
insb
inc
ja
jo
aas
insb
bound
mov
lods
pop
or
jne
test
adc
mov
mov
into
dec
jno
mov
fs
pop
jb
or
pusha
mov
jle
inc
sub
pop
lret
lret
fdivr
lods
jns
mov
cltd
dec
dec
int
popf
mov
and
sbb
cmp
mov
mov
sub
mov
fwait
push
mov
shrb
aas
lods
cmpsb
pop
lcall
ja
push
mov
enter
push
mov
adc
xor
mov
sub
dec
fiaddl
fadds
xor
popa
adc
inc
and
pushf
xchg
pop
icebp
xchg
cmpsl
clc
push
popa
jns
dec
add
mov
cmp
mov
jnp
push
xchg
out
enter
jge
xor
sub
jno
mov
sbb
dec
xchg
shll
aad
cmp
jo
push
sbb
push
outsb
gs
sub
lods
mov
dec
aaa
aad
insb
iret
or
pop
dec
add
adcl
add
popf
jge
mov
xchg
adc
nop
aad
inc
daa
pusha
cld
adc
push
aas
ds
fucomip
stc
inc
or
ret
mov
push
sbb
popf
dec
ja
cs
dec
fcmovne
cs
xchg
enter
and
push
movsl
ret
pusha
mov
aas
mov
cmp
mov
jnp
imul
inc
and
mov
dec
jmp
push
cs
leave
aaa
out
dec
xchg
fiadds
sbb
pusha
mov
pusha
pop
xor
aas
add
scas
xchg
shlb
pop
nop/reserved
scas
cmc
adc
push
insl
push
daa
idivl
scas
or
fcoms
mov
mov
aaa
cwtl
inc
fwait
jmp
jg
outsl
cltd
lea
jp
xor
in
sahf
mov
xchg
out
in
mov
dec
push
sub
sbb
sahf
mov
xchg
es
or
jle
push
push
jl
leave
subl
not
mov
dec
pop
xchg
gs
enter
push
scas
clc
imul
nop
push
push
adc
mov
dec
pushf
decl
mov
mov
jge,pn
sti
pop
je
mov
mov
test
aad
sbb
push
jl
or
sbb
outsb
adc
dec
lret
cltd
pushf
or
or
mov
movsl
add
ss
push
out
mov
mov
enter
mov
in
dec
cs
mov
mov
pop
mov
cmc
ljmp
mov
xchg
jmp
jmp
lret
fistl
dec
mov
mov
lock
inc
dec
adc
gs
and
std
leave
shl
int
clc
xor
out
enter
hlt
dec
js
lahf
outsl
sbb
pop
sbb
cs
dec
gs
lahf
jb
and
aas
test
cmp
push
sbb
lret
jb
lods
xor
pop
cwtl
test
cld
data16
mov
push
mov
add
nop
shlb
add
lods
push
icebp
mov
sahf
xchg
inc
adc
xlat
ss
out
dec
add
inc
mov
cmpsl
cltd
mov
fmull
dec
rcrb
in
test
stos
pop
fmull
pushf
pop
ret
cmpsb
je
mov
jge
mov
sti
jns
jl
push
aaa
xor
jp
ficompl
xor
repnz
fildl
sbb
lahf
cli
sbb
xchg
lret
aam
cmp
xor
sbb
stos
add
scas
push
loopne
testb
and
loope
bound
push
je
sub
rorl
fiaddl
and
insb
mov
adc
fildll
jo
xor
pop
test
xor
loope
mov
js
mov
push
imulb
out
adc
in
inc
cmpsl
cmp
pop
sub
mov
or
mov
push
adc
jg
push
dec
aas
mov
scas
sbb
sub
out
sti
call
sub
push
mov
mov
mov
mov
xchg
mov
dec
inc
dec
cltd
inc
mov
pop
aas
mov
je
stc
xchg
push
cmp
aad
bound
xor
push
test
jo
test
xor
adc
loope
arpl
daa
cmpsl
cltd
in
jb
dec
or
add
fsubrs
outsl
mov
inc
arpl
or
test
add
push
or
ljmp
movsb
imull
ja
cs
pop
neg
test
pop
in
cs
std
adc
mov
inc
aaa
cmp
and
xchg
push
dec
fwait
out
or
cmpsl
fbstp
out
das
fcmovb
insl
sub
popa
mov
cmp
loope
test
add
fldcw
insl
mull
daa
or
jg
or
push
inc
mov
out
pop
int3
lods
jecxz
aas
sarb
push
xor
inc
or
fs
lret
cmc
out
out
xor
aam
push
insb
in
or
add
stc
pop
xchg
insl
cmp
pop
cmc
mov
popa
lods
or
aad
mov
pop
xchg
jns
or
das
cmp
divl
mov
arpl
mov
js
aad
fwait
pop
in
sbb
daa
push
bound
cmp
jle
addr16
out
mov
lock
movsl
or
ret
in
inc
or
cmp
dec
int
shr
mov
in
mov
add
fadds
vpsubd
add
add
aaa
xor
jne
and
push
dec
add
dec
mov
lret
jnp
inc
gs
aas
inc
add
mov
mov
dec
leave
mov
mov
xchg
xchg
inc
lahf
and
inc
cld
sbb
or
push
xor
push
imulb
js
and
push
popf
cld
xchg
push
dec
movsl
cmpsb
insb
call
add
jae
jno
and
fisubs
aaa
lahf
mov
mov
mov
inc
mov
aam
or
push
lock
push
or
scas
mov
dec
cmp
arpl
and
add
adc
and
sub
cmp
test
pop
push
enter
cmpsb
jmp
stos
pop
nop
pop
fcompl
sub
mov
xchg
jp
pop
loop
lahf
adc
je
push
jecxz
mov
jns
mov
call
cmpsl
sbb
adc
cmp
push
or
inc
xchg
cli
les
stos
and
outsb
cmpsb
adc
aad
stos
xchg
mov
in
mov
xchg
imul
aas
js
adc
push
sbb
test
add
daa
lahf
add
jo
jo
jge
incl
mov
inc
faddl
or
or
nop
push
test
adc
and
adc
push
jo
pop
je
arpl
lock
fisttpl
and
xor
test
mov
mov
pop
scas
loop
idiv
fistps
add
test
jl
cmpsl
push
out
cmp
loopne
movsb
sbb
pop
pop
sti
xchg
outsl
xchg
xchg
pop
add
mov
icebp
sub
hlt
push
fcoms
mov
ret
add
imul
pushf
cmc
adc
repz
mov
dec
xor
addr16
ffree
mull
push
imul
fidivl
lret
push
not
pop
mov
fwait
clc
in
add
in
and
punpckhbw
adc
xchg
mov
add
ret
sbb
aas
push
mov
inc
xor
xor
push
pop
popf
lcall
ficoms
repnz
dec
sub
les
insb
test
mov
adcl
cmpl
xchg
imul
enter
fnsave
adc
adc
mov
and
pop
push
mov
pop
sbb
ljmp
add
and
daa
jno
mov
xchg
adc
inc
cmp
xchg
out
mov
aam
jg
push
cmpb
jl
sbbl
enter
das
out
js
push
test
int3
or
inc
incl
movl
fcomip
pop
push
push
subb
out
dec
cmp
int3
int3
push
push
mov
jno
fildll
mov
pop
jle
sarl
aaa
cmp
and
push
mov
add
jmp
ljmp
dec
lods
daa
les
or
ss
nop
xor
mov
xor
adc
loope
inc
test
int
cmpsl
dec
filds
test
mov
xchg
jns
push
push
mov
orb
sbb
dec
rorb
jmp
sub
cmpsl
sbb
cmp
xchg
call
mov
cmp
or
pop
or
mov
stos
movsl
or
test
jmp
dec
jo
stos
popa
gs
arpl
imul
adc
inc
push
popa
test
push
iret
or
fidivl
sarb
or
xchg
jge
jno
outsb
movhps
xor
les
repnz
dec
xor
push
inc
lods
xor
sbb
and
ss
jecxz
enter
mov
or
scas
xor
into
sbb
xor
fidivl
or
out
mov
adc
scas
xchg
mov
test
mov
pop
imul
xor
inc
pop
sub
pop
cmc
xchg
flds
adc
dec
ljmp
xorl
insb
xor
inc
test
cmpsl
jl
adc
pop
loopne
out
lret
mov
insb
mov
stos
into
rcll
out
popa
adc
adc
xlat
test
xor
xorb
bound
xchg
sbb
sub
mov
adc
jno
add
jmp
push
fidivrl
cmpsl
into
sub
push
pop
out
xchg
sbb
subl
or
lret
cmp
nop
les
cmp
and
call
jnp
xchg
aam
popf
fisttpll
pop
mov
add
and
lret
add
jb
xchg
xchg
inc
and
ja
mov
pop
xchg
dec
dec
pop
fwait
addl
call
push
inc
adc
hlt
cli
out
jge
adc
sbb
jecxz
push
stc
mov
ss
jle
inc
aaa
fs
mov
stos
dec
cmp
pop
add
pop
xchg
ljmp
xlat
xor
lods
fwait
mov
bnd
popf
mov
and
mov
jecxz
adc
xchg
cs
xor
aaa
mov
push
das
outsb
dec
xchg
xchg
cmp
or
jle
mov
cmc
and
mov
or
lods
das
jg
movl
mov
cmp
test
jae
pop
dec
scas
lods
adcl
dec
fwait
test
mov
ret
dec
fistpl
mov
lahf
and
push
or
subl
xchg
cltd
xorl
ret
nop
cmp
jae
pop
dec
or
jp
mov
es
xchg
shll
mov
insl
stc
sub
sub
jno
xchg
jb
cmp
inc
xchg
cld
mov
fidivs
pop
xor
dec
insb
fldt
mov
lret
pop
je
imul
gs
xor
nop
and
gs
xchg
ret
sub
shlb
cltd
dec
ds
xor
pop
in
lahf
sti
int
xchg
jbe
inc
pop
imul
shll
hlt
pop
and
lods
nop
cmp
jo
sarb
call
in
pop
fcomi
mov
jnp
orb
ret
ss
test
fcmovne
shll
adc
xor
in
push
mov
sub
pusha
xor
divl
out
adc
dec
or
sahf
daa
repnz
mov
popa
jg
sbb
mov
sbb
mov
loopne
lock
nop
mov
mov
cmp
sbb
outsl
and
sbb
out
outsb
push
scas
mov
cmpsb
je
test
add
mov
mov
push
adc
sub
xchg
popf
jns
mov
push
mov
je
sub
jbe
pop
std
lcall
push
std
sarb
xorl
lcall
adc
testb
mov
mov
stc
cmp
push
cmp
add
and
xchg
mov
rclb
rcr
sbb
mov
insb
add
cmp
int3
xchg
bound
adc
lds
add
hlt
pop
jno
or
dec
ss
stc
mov
call
or
imul
jge
push
add
push
pop
jnp
mov
inc
adc
add
in
lock
or
ljmp
dec
pop
rcl
imul
cmp
dec
jns
lret
popf
nop
adc
dec
testl
orl
shr
popf
fsub
lods
out
into
cmp
sahf
jle
xchg
repnz
jne
negl
inc
cmp
dec
pop
rclb
add
jbe
iret
aad
push
iret
ret
jo
add
dec
sub
test
daa
lock
imul
test
cmp
aaa
jno
mov
mov
xor
std
imul
add
push
jne
dec
add
ljmp
loopne
push
out
pop
jbe
ret
loop
cwtl
jb
xchg
cmp
arpl
in
xor
imul
test
xchg
and
pop
js
popa
add
mov
mov
jae
fsubs
lcall
fsubs
pop
hlt
dec
pop
loop
jle
xchg
or
ret
or
or
scas
cmp
add
xor
mov
push
inc
adc
and
in
rolb
add
pop
add
mov
lock
shlb
push
ss
jl
aam
adc
in
or
cmp
movsl
sub
push
popa
adc
xor
cld
pop
inc
rolb
dec
andb
adc
imul
push
stos
mov
scas
mov
into
sbb
dec
inc
dec
xchg
clc
clc
int3
sub
cmp
pop
sub
shrb
xchg
fldenv
jecxz
inc
mov
lcall
push
inc
push
push
mov
and
inc
xchg
call
push
movl
aad
fadds
mull
xchg
fstpl
mov
add
cmpl
add
cmp
test
ja
lret
scas
sub
cmp
cmp
add
gs
and
mov
ja
pop
scas
je
jecxz
into
scas
fs
jmp
jae
aad
out
clc
push
or
inc
mov
xlat
and
fs
cmpsb
xchg
fwait
je
mov
leave
aaa
in
mov
jp
ja
pusha
mov
push
jecxz
cltd
addl
adc
and
ljmp
stc
loop
mov
sub
xchg
sti
aad
jl
pop
or
pop
or
adc
pop
dec
repnz
lock
lahf
sbb
adc
inc
fwait
add
in
aam
cs
cmp
push
xchg
add
xchg
movlps
call
test
test
and
cmp
xchg
mov
ljmp
sbb
inc
cmp
xchg
push
xchg
or
jno
or
enter
stc
inc
mov
mov
incl
test
jno
dec
out
pusha
push
stc
shl
cmpsl
lret
jmp
jmp
jb
sbb
movsb
cwtl
and
pushl
push
push
insb
aas
mov
add
stos
jp
xor
inc
sbb
sbb
xchg
xchg
outsb
inc
mov
push
aad
in
test
pop
inc
sbb
dec
mov
scas
in
jl
cld
xor
xor
insl
xor
push
out
push
into
mov
test
sbb
push
pop
movb
sbb
xchg
add
sbb
repz
addr16
popf
rcll
xor
int3
sub
mov
cmc
stos
or
ljmp
pop
push
andl
xor
add
jne
sub
mov
mov
cmc
jb
fistpl
mov
and
outsl
pop
or
pusha
jne
cmpsl
scas
dec
imulb
leave
mov
jl
sbb
ss
addr16
sub
int
mov
incl
push
hlt
or
inc
push
push
ror
lret
jnp
push
pusha
sarl
jnp
lret
push
imul
pop
xchg
scas
insl
pop
fs
negb
in
mov
aaa
xchg
into
add
jg
out
aas
mov
insb
pop
dec
inc
xor
xlat
loope
sbb
jb
adcb
in
sahf
adc
or
mov
test
adc
jnp
repz
xor
adc
mov
rolb
push
mov
test
mov
jge
aas
aad
lret
sbb
xor
xor
adc
add
push
mov
lock
mov
dec
lret
sbbb
cltd
scas
lret
push
out
push
je
bound
sub
sub
sti
push
xchg
dec
popf
das
stos
sbb
dec
cmp
inc
xchg
lds
daa
pop
mov
push
xchg
xor
jne
mov
imul
inc
rclb
fmuls
lods
push
aas
leave
jle
mov
sub
sub
mov
pop
xor
fisttpll
cmpsl
imul
cmpl
lds
sti
fldt
cld
and
or
fiaddl
xor
jbe
js
sub
divl
leave
pop
dec
mov
jns
bound
dec
ud1
in
sub
mov
lea
popa
insb
gs
push
scas
inc
hlt
pusha
pop
fiadds
dec
mov
lret
faddl
movhps
mov
xchg
mov
add
sbb
dec
xchg
sub
lods
in
sbb
adc
push
pop
mov
sbb
and
cli
stos
pop
imul
mov
test
cmp
mov
pop
daa
mov
roll
loope
sub
idivl
xor
pop
or
push
sbb
lret
or
inc
lods
pop
mov
loope
mov
pop
and
call
in
repz
popa
adc
int3
push
mov
aad
out
or
movsl
cmp
mov
cmc
mov
imul
push
push
es
mov
int3
mov
sub
mov
stc
and
iret
test
pop
sub
or
rcrl
jbe
inc
adc
mov
mov
adc
lods
in
fidivl
lret
fisubs
imul
xor
inc
sti
xchg
jl
and
mov
inc
sub
xchg
lds
pushf
xorb
adc
adc
adc
negl
insb
outsl
push
cmp
mov
mov
push
iret
mov
xchg
aam
cltd
nop
mov
clc
movsb
shlb
sub
adc
cmp
sbb
js
push
mov
test
cld
ret
sarb
pop
xchg
mov
xchg
push
orl
xor
sar
push
decl
mov
jecxz
scas
das
jg
mov
pop
orb
xor
mov
xor
dec
int3
aam
jne
jbe
mov
popf
fsubs
into
pop
lods
cltd
mov
or
xor
loopne
cmp
hlt
aad
test
and
test
iret
fldenv
fnstenv
xchg
or
dec
fstpl
mov
jp
sbb
xchg
enter
xchg
pusha
stc
call
imul
popf
fs
sbb
mov
sub
mov
xchg
aaa
daa
jno
xchg
std
sti
mov
jle
outsb
push
cmpsl
das
das
imul
std
idivl
fdivs
stc
pop
cmc
jne
cmp
mov
stc
mov
pop
push
push
push
andb
xchg
hlt
pop
add
int3
test
cmp
mov
notb
jp
sub
and
mov
mov
inc
push
movsb
bound
rorl
xor
xor
xor
adc
sub
push
fucompp
push
mov
cmp
imul
mov
dec
frstor
cmp
sahf
jb
push
in
cld
movsl
push
fmull
das
cli
imul
decb
pop
jge
adc
fwait
inc
icebp
add
push
fmuls
inc
fldl2t
and
test
or
mov
imul
pop
in
sub
sbb
mov
lock
aaa
jg
cli
mov
sub
aas
das
adc
imul
lcall
popa
sbb
jge
xchg
int3
and
clc
or
in
pop
push
ss
jp
pop
repz
rorl
xor
divb
dec
sbb
std
cmp
cmp
or
xchg
xchg
cmpsl
out
dec
jbe
mov
jmp
jnp
mov
adc
adc
dec
leave
ret
es
pop
mov
es
rclb
mov
cmp
subb
xchg
inc
jbe
fidivrl
jno
mov
inc
add
into
adc
mov
notb
xor
xchg
xor
cltd
or
lock
fwait
jmp
testb
or
ljmp
or
inc
push
fcompl
cmp
lret
aas
pop
nop
jae
xchg
test
in
mov
jp
scas
das
dec
incb
call
fisttps
sbb
sahf
push
mov
push
inc
xchg
xor
pop
cmpsb
rcrl
dec
push
rclb
insl
iret
inc
pop
cmp
das
popa
mov
je
mov
outsl
xor
into
dec
icebp
aaa
insl
push
xchg
pop
in
call
dec
inc
mov
jl
ds
test
movsl
loop
loopne
or
adc
loope
aad
pop
xchg
mov
scas
mov
lea
pusha
and
adc
pmuludq
dec
pop
jbe
mov
sbb
mov
inc
mov
ret
mov
cmp
cld
cmp
mov
push
jb
fldcw
jecxz
out
sbb
add
ret
or
pop
lret
out
lock
mov
leave
pushf
ret
and
xchg
pop
gs
pop
jl
ret
cmp
loopne
jge
rcrb
xchg
int
seta
movb
lcall
outsl
in
jl
jg
sbb
cli
lcall
das
scas
push
mov
test
inc
loop
xorl
ret
jno
inc
add
lea
fs
sub
scas
call
xor
incl
sarb
es
xor
and
cmp
push
notb
push
mov
sbb
aaa
lcall
push
shll
movsl
xchg
sub
jmp
inc
adc
xchg
fwait
pop
sbb
addr16
sub
mov
movsl
mov
cmp
mov
ret
bound
in
fwait
mov
mov
aas
inc
pop
mov
lods
stos
lcall
adc
lahf
scas
int3
push
sbb
clc
add
or
add
imul
inc
mov
mov
xor
and
mov
outsb
imul
mov
je
adc
icebp
iret
insl
or
cmp
imul
sbbl
lahf
dec
xchg
push
xchg
div
xor
xchg
dec
ret
push
and
cmp
subl
repnz
icebp
dec
or
out
inc
inc
push
fstpl
out
dec
f2xm1
push
outsl
test
jne
pop
icebp
aam
and
pop
js
mov
test
movsl
fadd
sbb
inc
inc
dec
inc
mov
pusha
insl
and
mov
pop
mov
cltd
sti
mov
jp
or
xlat
adc
arpl
xor
arpl
lock
or
jmp
adcb
mov
out
stos
push
pop
sbb
je
mov
mov
dec
scas
mov
into
stos
push
out
insb
and
inc
fs
hlt
mov
xchg
fs
cld
or
dec
push
adc
enter
mov
push
lea
nop
leave
adc
mov
aaa
xor
xchg
add
pop
mov
pushf
jbe
and
xchg
test
dec
fisttpll
xlat
js
test
push
pop
sub
lods
out
js
shll
cmc
jmp
and
sbb
add
push
shll
xor
movsl
jbe
pusha
push
xor
jno
sub
roll
rcll
sub
sbbb
les
adc
and
sbb
xchg
push
scas
mov
out
xor
cmp
fimull
jae
sbb
adcb
jp
punpckldq
dec
adc
mov
out
inc
fnstenv
enter
je
mov
mov
push
cmpsb
test
das
dec
shl
movsb
jg
movsb
sub
roll
inc
and
out
cmp
leave
mull
pusha
xchg
mov
jl
mov
call
push
rcrl
into
fisubrl
lods
xchg
cs
sub
adc
loop,pt
push
pop
rorl
dec
mov
cmp
mov
rorl
jnp
cmp
lahf
pop
adc
jmp
cltd
xchg
fmull
lock
enter
ja
push
sub
inc
xchg
cwtl
mov
jne
sub
mov
aaa
hlt
and
cmp
and
pop
sub
and
test
je
sub
addr16
lea
sbb
fmuls
xor
test
inc
pop
fistps
inc
cmp
cmp
jns
out
shrl
jmp
decl
sub
shld
inc
mov
xor
rolb
imul
mov
dec
loope
lods
sbb
push
jl
pop
lahf
lods
push
mov
loopne
lahf
ficoml
jp
pop
hlt
push
clc
add
push
mov
sub
dec
imul
lea
lret
rolb
jb
jp
mov
test
daa
movsb
adc
stos
aaa
dec
xor
pop
jnp
movsb
xchg
mov
fwait
push
add
div
mov
push
and
dec
cmpsb
dec
mov
int
mov
imul
mov
xchg
pusha
mov
bound
pop
daa
push
fdivrs
mov
push
adcb
adc
and
or
add
dec
shr
push
into
das
mov
adcl
or
movsl
icebp
sub
xchg
repnz
aad
data16
add
dec
fucomp
or
push
fcmovb
ret
rcrb
dec
add
movq
add
out
cmpb
xor
lret
nop
inc
xor
adc
sub
xchg
mov
insl
sbb
test
mov
shlb
push
loopne
or
mov
testl
fld
sub
lds
fwait
sbb
loop
cltd
movsl
lcall
addr16
nop
and
xor
mov
inc
out
js
sub
push
negb
dec
or
nop
test
lea
shl
cmp
xor
cmpl
xchg
jae
mov
cld
push
arpl
xor
mov
xlat
push
addr16
dec
pushf
test
repz
pop
andb
sbb
jae
xchg
mov
sub
addb
ret
xor
cmp
cmp
clc
dec
pop
adc
push
lods
int
shlb
out
lods
sahf
inc
xor
lds
cmc
sbbl
fnsetpm(287
in
in
add
jb
inc
sub
cwtl
mov
out
pushf
movsl
mov
and
push
mov
adcb
hlt
push
rol
movsl
xchg
icebp
inc
and
sub
sbb
dec
pop
je
pop
insl
cmp
push
aas
and
out
js
dec
dec
aam
mov
fadds
add
mov
push
lret
sti
xchg
jmp
pushf
iret
sbb
sub
mov
sarl
xor
mov
xor
mov
inc
mov
fyl2xp1
adc
and
call
ret
fdivs
aas
lret
aaa
icebp
cmp
int3
out
jle
jbe
or
loopne
test
cmp
ret
roll
xor
test
dec
jne
mov
into
adc
rcrl
iret
ficomps
mov
repnz
and
cmp
or
repnz
xor
mov
pop
mov
test
jns
mov
out
mov
stos
or
adc
jo
and
ficoms
test
push
or
das
cltd
lcall
inc
dec
ret
push
lea
ljmp
lea
test
in
or
adc
dec
xchg
les
cmc
or
mov
push
push
je
in
imul
mov
mov
das
cmovge
fnstcw
mov
jmp
nop
stos
cmp
insb
add
xorb
mov
mov
xor
adc
in
mov
dec
repnz
and
addr16
mov
sbb
xchg
lret
fs
xchg
outsb
add
hlt
fsubrl
scas
lcall
inc
push
cs
mov
lret
scas
adc
rorb
push
add
int3
ret
dec
xor
pop
adc
test
push
pop
andl
lret
jno
jns
fs
stc
push
xor
in
sbb
aam
and
inc
jg
in
aas
imul
lea
push
and
cmp
pop
push
adc
fistl
add
fisubl
pop
jecxz
movsl
dec
lods
xor
ret
clc
adc
lahf
xchg
sbb
cltd
decb
lret
mov
mov
xchg
jb
imul
lcall
add
push
loope
loope
sarl
mov
movsl
push
pop
scas
lret
or
sub
popa
addr16
movsb
sbb
loope
ds
mov
mov
pop
lds
icebp
dec
mov
loop
dec
mov
pop
icebp
push
push
mov
mov
pop
sub
roll
dec
adc
data16
cld
dec
ret
movsl
adc
aaa
out
setl
loopne
mov
sbb
movb
sbb
push
repnz
scas
mov
cmp
jns
xchg
jg
enter
push
jns
enter
clc
jg
clc
cmc
popf
repnz
mov
push
fidivrl
fwait
mov
addl
mov
iret
daa
mov
jge
clc
pop
mov
je
fwait
insb
or
lret
sub
jno
mov
dec
mov
bnd
imul
cmp
shlb
push
mov
inc
push
lretw
das
sbb
mov
adc
mov
cmp
fistps
jnp
jge
push
repz
int3
rolb
in
test
cmp
cmp
xchg
shll
jo
aam
andnps
mov
fwait
rcll
xchg
xor
and
ss
mov
loope
call
cld
repnz
pusha
dec
sub
adc
ljmp
mov
jge
cmp
aad
push
loop
adc
mov
sbb
sahf
cs
sahf
int3
add
and
dec
push
aad
adcb
imul
addr16
push
mov
mull
mov
jmp
mov
dec
adc
out
fstpl
xacquire
shrb
aad
sbb
stos
jns
xchg
in
int
add
add
dec
fisubl
add
mov
jo
test
jle
push
cltd
pop
leave
inc
out
mov
les
orl
inc
jle
or
rcrb
xor
jmp
jb
push
mov
sub
int
jmp
xchg
repz
mov
test
mov
jg
cmp
xor
cltd
jp
notl
shr
push
aam
cmp
out
sub
mov
mov
rcrb
push
dec
dec
cmp
inc
and
pusha
imul
repz
jnp
sub
xchg
mov
inc
les
xchg
fsubr
jl
cmpsl
cwtl
mov
dec
leave
push
pop
mov
into
or
sub
inc
fimull
cmp
inc
mov
loop
rorb
lods
repz
js
int
mov
inc
mov
scas
scas
mov
fs
std
in
and
addr16
xchg
das
pop
push
mov
pop
mov
adc
adc
push
pop
data16
mov
xchg
xorl
test
adcl
mov
sti
sub
mov
std
mov
rcll
adc
lcall
cmp
inc
ret
and
je
push
call
jno
repnz
testb
dec
and
push
mov
test
sub
sahf
xchg
sub
test
push
mov
popf
xchg
enterw
out
mov
mov
rol
ds
mov
inc
dec
inc
pop
inc
aam
dec
adc
push
scas
ror
icebp
push
mov
xchg
cmp
adc
cmc
adc
pop
push
sbb
out
sub
cs
sub
mov
aaa
push
push
ja
popf
mov
jl
xor
int
scas
fidivrl
xor
or
mov
push
loope
inc
inc
das
out
dec
push
leave
jbe
sbb
push
lods
notl
aas
sysret
dec
and
rcrb
subb
add
jne
into
insb
push
addr16
jl
add
ret
iret
orb
lahf
pushf
sub
mov
and
mov
popa
imul
push
mov
bnd
insl
xchg
push
sbb
push
hlt
stos
cltd
dec
cmp
cmpsl
pop
test
xor
jb
sub
fisubl
std
outsb
shld
insl
test
lods
push
out
sbb
jmp
dec
push
mov
nop
pop
ficompl
add
in
ret
aaa
movb
dec
mov
xorl
ds
fdivs
xor
xchg
enter
into
mov
test
mov
dec
mov
jno
xor
or
xor
gs
movaps
add
mov
ret
jecxz
add
lds
mov
movd
rcrb
add
push
scas
into
xchg
jo
push
mov
jl
stc
mov
fimull
addr16
std
dec
push
adc
in
cmpsl
sub
lret
in
mov
add
xor
lds
out
mov
sbb
shlb
imul
int3
add
xor
jb
mov
jmp
xor
mov
fwait
xchg
push
push
into
jl
gs
fwait
pop
push
and
adc
stos
sub
addr16
sub
jnp
cmp
inc
push
mov
aam
shlb
adc
mov
push
jmp
jns
cs
jg
and
pop
lcall
fisubs
pop
mov
fstpl
test
data16
or
dec
mov
push
imul
jbe
cs
xchg
lahf
inc
fists
cmp
shll
jp
sahf
and
in
scas
jne
or
stos
shl
xor
and
and
pop
xor
sahf
and
lahf
enter
nop
dec
xchg
imul
roll
or
jbe
sbb
push
repz
lahf
push
test
dec
fucomi
mov
aaa
jmp
mov
movsl
xchg
push
lret
imul
sub
les
sub
int3
xor
insb
cmpsl
das
jns
into
test
aas
shlb
pop
test
mov
lcall
push
int
in
movsb
in
jecxz
loop
xlat
push
xchg
call
out
into
jmp
mov
loopne
mov
jnp
inc
sbb
insl
pop
dec
adc
scas
cltd
mov
mov
dec
xchg
and
adc
cmp
clc
xor
test
xor
add
push
add
cmp
sti
out
inc
xor
addr16
pusha
sbb
nop
sub
inc
mov
fildll
xor
xchg
lea
addr16
jge
test
push
adc
jp
cltd
int
mov
sub
addr16
jo
mov
dec
fwait
xor
jp
aam
xor
or
and
inc
ljmp
pop
shlb
sub
imul
inc
xchg
mov
pop
mov
cmc
nop
xchg
or
or
cltd
test
dec
inc
add
sub
addr16
mov
mov
push
fstl
out
and
call
mov
mov
inc
ja
cmp
mov
xchg
mov
xchg
lock
and
sbb
mov
jae
ffreep
sbb
pop
mov
add
dec
iret
lea
fildll
jmp
cli
movsb
fadds
xchg
mov
push
push
mov
je
outsb
stc
stos
inc
movsl
mov
sbb
test
loop
std
or
rcll
xchg
cmp
cld
ja
nop
popa
lret
cmpsl
dec
xor
or
sbb
mov
lods
add
lea
lock
xchg
lahf
dec
jns
inc
out
idivl
jns
pop
in
adc
ljmp
and
or
add
add
adc
adc
push
sbb
adc
pop
movsl
shlb
jge
xor
add
jge
or
leave
jmp
lcall
or
cmp
push
stos
in
push
out
cmp
jb
movb
sbb
inc
cmp
jo
daa
adc
test
xchg
jnp
sbb
adc
push
js
push
das
ljmp
mov
sub
loope
mov
dec
adc
pop
lret
call
adc
sbb
cwtl
iret
pop
pop
xchg
push
push
xchg
cmp
xchg
les
test
inc
in
pop
pushl
cmp
mov
pop
mov
pop
imul
push
shll
sub
negb
ret
jns
pushf
mov
mov
ss
mov
sbb
aaa
adcl
sub
std
mov
add
sbb
popa
inc
sbb
jo
add
faddl
xchg
mov
fisttpl
cmp
pop
add
cmp
imul
sbb
ljmp
out
mov
push
mov
adc
js
aaa
add
add
shlb
in
and
js
loope
inc
div
sub
rolb
fistl
xchg
mov
ds
rorb
sbb
mov
add
fs
jbe
adc
xchg
fwait
bound
sub
lea
pop
jne
pop
in
dec
dec
outsb
call
loopne
jp
and
mov
push
push
jg
mov
pop
mov
hlt
push
mov
loope
sti
scas
outsb
bound
jo
cmc
mov
aad
inc
xor
cmp
pop
or
inc
stos
iret
std
jbe
ss
aam
ja
inc
jecxz
lock
pop
inc
leave
inc
or
iret
jnp
jns
dec
adc
push
jne
idivl
xorb
rcrl
rcll
or
jb
inc
call
std
es
stos
dec
push
dec
in
mov
ss
daa
daa
push
add
aas
in
lods
aaa
std
lcall
and
cmp
jne
jge
jl
int
dec
and
test
jb
movsl
mov
push
mov
divb
daa
jl
lea
mov
ret
aas
adc
push
lods
cli
shlb
sub
out
in
dec
add
mov
mov
sub
sti
and
xor
data16
scas
aas
pop
pusha
inc
inc
inc
mov
push
or
ss
int3
mov
pop
insl
adc
mov
add
xlat
xlat
sbb
mov
mov
inc
lahf
mov
adcb
xlat
sub
dec
cmp
xchg
icebp
psubsb
fwait
mov
push
repz
mov
push
test
mov
cmpsb
insb
push
out
dec
addr16
jbe
or
mov
cld
repnz
add
insb
jae
stc
leave
arpl
sti
push
jg
inc
xchg
rorb
inc
pop
inc
loope
insb
mov
inc
or
fwait
cmp
stos
cmp
out
or
ljmp
mov
mov
mov
and
imul
adc
add
shr
ljmp
aas
jns
xor
adc
sbb
sub
fucomip
sbb
std
jnp
jg
sub
jle
jmp
lret
adc
push
scas
shlb
imul
aaa
cmpsl
adc
mov
mov
leave
sbb
inc
pand
in
adc
and
mov
rolb
or
push
in
jp
daa
int3
lods
xchg
lods
inc
arpl
xchg
dec
or
rcl
xchg
rolb
add
ret
out
sub
lock
inc
dec
xor
cmp
sbb
out
push
and
mov
xchg
ds
lea
lock
mov
jo
test
cwtl
push
cwtl
repnz
outsb
xor
push
mov
shll
adc
out
addr16
dec
mov
mov
icebp
fs
push
add
or
jmp
mov
cmpsb
mov
inc
sbb
push
mov
inc
data16
jmp
xchg
movsb
decb
lods
out
addl
rcll
icebp
and
or
sbb
mov
or
loope
cltd
insl
push
xchg
xchg
hlt
pop
add
imul
sbb
pop
enter
sahf
push
pop
inc
pop
push
loop
stc
or
xchg
pop
pop
les
xor
cmp
mov
int
pop
adc
push
int
push
mov
push
loopne
add
sub
in
push
push
das
jbe
mov
xor
dec
dec
push
pop
jno
dec
xchg
xor
xchg
add
in
push
fidivl
fistpl
xchg
stos
aam
jo
fstl
leave
mov
ficoms
ret
inc
into
cmpsb
xor
insb
test
mov
stos
test
push
push
mov
cmp
mov
loopne
mov
outsl
dec
test
push
imul
jo
scas
and
ja
push
ret
xor
cli
lcall
xchg
mov
cmp
jmp
pop
and
ret
movb
movb
push
imul
sarl
scas
pop
fsts
pusha
jle
sub
add
sahf
lods
pusha
das
jb
sbb
lret
push
mov
stos
or
insl
das
out
add
dec
fists
jae
xor
pushf
dec
out
outsb
daa
sbb
cmp
imul
pop
dec
pop
loopne
data16
out
xor
ret
fisubrs
cwtl
cmp
xchg
jb
imul
lcall
enter
std
outsb
or
iret
cs
hlt
and
rcll
popa
popf
ljmp
arpl
mov
sbb
push
ljmp
int
push
adc
popf
adc
sub
aam
sbb
jae
mov
call
leave
js
jnp
xchg
push
loope
in
mov
add
push
rcrb
loope
lds
mov
cmp
or
call
mov
jns
popf
lcall
je
xchg
jo
mov
lock
aaa
arpl
xlat
cmpsl
pop
inc
mov
ror
enter
lret
sti
aam
xor
xor
ss
xor
cmpsb
leave
les
int3
jp
push
nop
lds
aam
mov
or
icebp
jae
jae
out
mov
and
push
test
pop
pop
fldcw
mov
xor
dec
mov
das
test
iret
pop
repnz
lods
xor
xchg
imul
fcmovbe
cs
cmp
das
in
pmullw
jne
mov
xchg
scas
add
aaa
fmuls
es
test
rcrb
lret
adc
lea
jb
movsl
scas
inc
mov
jb
fsts
sbb
jnp
jnp
cli
inc
pop
ljmp
jmp
repz
mov
insb
dec
je
test
out
mov
xchg
icebp
jp
mov
and
clc
push
push
fdivr
xor
or
cmc
inc
sti
add
les
in
xchg
iret
cmp
push
lods
lds
popf
in
mov
and
add
daa
mov
adc
jae
test
ret
ds
pop
cld
movb
fs
sub
fucomi
in
nop
repz
notb
mov
clc
loop
mov
inc
and
les
repz
into
mov
lods
adc
sti
nop
fnstenv
and
add
push
cmp
xchg
sbb
filds
in
or
repnz
into
in
mul
sub
push
test
gs
and
insb
push
cmp
repnz
orb
adc
pop
fwait
cld
fisttpll
push
sbb
xlat
jnp
xchg
stos
pop
movsb
inc
or
pop
add
loopne
ljmp
xchg
pop
sbb
xchg
mov
clc
lret
xchg
insb
gs
popa
mov
in
sbb
faddl
xchg
sbb
xchg
mov
in
bound
mov
and
fwait
dec
rcll
jp
cld
jno
aas
jb
imul
pop
inc
call
pop
loopne
mov
insl
jae
cmp
or
jb
dec
scas
adc
outsl
les
mov
call
mov
adc
lds
lds
dec
mov
ret
pusha
inc
jns
outsl
mov
cmp
xchg
jl
std
dec
mov
mov
jmp
jno
jecxz
sub
js
add
mov
shrb
arpl
push
ret
outsl
push
add
jge
sbb
repz
lods
dec
out
orb
aas
pusha
xor
inc
and
mov
ss
cmpsb
ret
ret
push
dec
add
rorl
lds
pop
fldcw
jp
mov
mov
mov
shrl
pop
ret
and
mov
dec
jae
inc
gs
int
in
and
mov
and
sub
arpl
shlb
imul
mov
inc
out
inc
sbb
lods
cwtl
pop
xor
lahf
push
jb
int3
pop
fs
inc
lret
hlt
inc
filds
sub
dec
out
clc
idivb
adcl
int3
shrl
lods
and
pop
sub
lea
sub
insb
mov
mov
ljmp
sarl
fisubrl
test
jne
insb
iret
leave
mull
mov
lcall
xor
cli
pop
xchg
aas
fwait
sub
and
jl
jecxz
cld
sbb
lods
dec
fwait
inc
pop
enter
pushf
and
popf
add
std
push
insl
fwait
cmp
push
cmp
rcll
sti
xor
push
lds
cmp
aaa
ljmp
fwait
adc
ret
mov
pop
sub
dec
inc
inc
pop
jne
repz
fidivl
inc
ja
pop
sub
inc
sbb
aad
in
in
add
push
loope
cmc
cwtl
mov
hlt
dec
fildll
cmpb
fcomps
mov
mov
pushf
mov
mov
cmp
stc
lret
into
call
ljmp
adc
ret
add
pop
aas
xor
mov
aaa
xor
stos
shll
pop
mov
push
mov
ret
cmc
cld
loope
aaa
jbe
test
inc
mov
adc
scas
jnp
movsb
adc
cmp
mov
lret
scas
xchg
mov
test
ja
fidivrl
loopne
jo
or
sub
pop
jbe
pop
iret
es
lods
push
jecxz
mov
and
push
xor
lods
xor
sbb
inc
in
add
popa
xor
enter
je
mov
bound
lret
mov
mov
pop
pop
push
test
ret
or
mov
enter
test
cli
mov
shrb
cmpsl
mov
js
scas
out
pop
cmpsl
nop
cli
in
popa
fwait
incb
pop
fnstenv
xor
xchg
mov
outsl
add
jecxz
mov
inc
scas
ja
mov
xor
mov
jmp
rcll
lcall
out
jns
pop
jl
icebp
mov
cmpsl
mov
xchg
and
cltd
icebp
jns
jg
cmp
fisubs
pushf
lret
in
scas
arpl
outsl
insb
mov
aas
cmpsl
sti
mov
add
std
movsb
xorb
jns
popa
rorl
add
in
into
popf
lock
je
ljmp
fbld
dec
orl
hlt
movq
cs
cmp
pop
sahf
xchg
cmpsb
jg
or
out
mov
sbb
cltd
ss
sbb
pop
jo
xchg
jl
xchg
jp
cltd
xchg
movsb
xchg
call
mov
int
sbb
xchg
ret
xchg
outsl
inc
les
xor
xchg
jns
push
xor
xor
inc
mov
pop
cmp
adc
and
add
stc
xchg
or
loopne
sti
insb
inc
xchg
lock
pop
test
rcr
inc
cltd
pop
or
shr
pop
loope
pop
out
xor
cmovge
inc
add
mov
mov
xor
andl
std
leave
dec
pop
leave
subl
pop
mov
mull
shlb
xchg
mov
inc
mov
mov
push
sub
lds
pop
out
inc
xor
cmpsb
mov
push
cmc
xchg
cmp
outsb
or
and
push
stos
pop
push
mov
jp
sbb
xchg
repnz
fstpt
hlt
sbb
mov
mov
sahf
mov
add
outsb
movsb
sbbl
pop
xorl
enter
cmp
jle
cmp
sub
cmp
rcl
icebp
jg
out
push
add
rcl
add
out
imul
sbb
mov
xor
movsb
jmp
data16
cmp
sub
hlt
insb
xorl
shll
adc
pop
jno
test
arpl
aas
jns
sbb
mov
or
sub
lods
sbb
cmpxchg
dec
mov
outsl
fldenv
push
into
sub
fsubl
adc
ret
bound
inc
pop
cmpsb
ja
cmp
popa
jle
mov
inc
out
sub
outsb
sbb
cmp
pop
pop
pop
xchg
lock
mov
jmp
icebp
ds
xchg
test
roll
mov
jle
leave
aam
lret
repnz
push
cmpsl
shll
cmp
sub
sbbl
pop
test
pusha
daa
dec
inc
push
insb
fldl
loope
cmpsl
xchg
jmp
jmp
adcl
pop
cmpsl
out
jg
add
and
not
into
inc
or
icebp
push
repnz
std
out
and
pop
or
sub
mov
test
ja
lock
clc
xchg
sub
mov
mov
aaa
fldenv
fadd
jge
inc
cmpsb
testb
add
int
mov
sub
out
mov
aaa
mov
inc
or
jle
repz
or
shrb
leave
ss
negb
sbb
sub
cmp
pop
mov
fcoml
fistps
test
xchg
sub
insb
mov
das
bound
xchg
mov
mov
cld
ret
stos
dec
sub
fsubl
mulb
sbb
orl
and
mov
js
jns
add
mov
mov
jp
mov
cmp
sbb
cmpsl
mov
imul
sbb
outsl
jl
mov
pop
mov
je
mov
enter
pop
rorl
aad
lock
xchg
test
addr16
mov
lcall
mov
adc
add
loope
jmp
cmc
cwtl
jo
out
push
scas
mov
mov
push
and
shl
jg
mov
push
loope
mov
imul
xor
dec
xor
sbb
in
out
jmp
sbb
or
ret
dec
or
xor
inc
fwait
xchg
and
lcall
stos
es
push
arpl
cld
cmpsb
cwtl
mov
movsl
std
lret
jns
push
push
or
mov
xchg
ds
dec
pusha
orb
fs
adc
jae
jne
push
xor
in
jge
xchg
cli
jge
ja
movsl
mov
and
out
push
push
into
cmpsl
hlt
popf
lcall
in
loopne
jmp
adc
js
fmull
into
fisubrl
sub
jns
scas
aas
scas
aam
push
ret
in
mov
int
ds
rolb
push
cltd
pop
fs
and
sbb
cmp
sub
cmp
inc
xchg
mov
xor
dec
jl
cmp
pusha
xor
testb
movsb
cld
jno
cli
gs
mov
cmp
ja
subb
inc
xchg
into
jmp
sbb
cltd
xlat
test
sub
xchg
movsl
je
xor
xchg
cltd
data16
es
rcrb
lea
cli
sarb
lcall
pop
popa
xchg
jne
jbe
pop
pushf
hlt
jl
push
or
rorb
test
inc
add
sbb
mov
stc
lea
in
mov
xchg
andb
xor
cmp
pop
jnp
mov
gs
sub
adc
sbb
iret
scas
pop
mov
movsb
repnz
xchg
call
sbb
xor
repnz
jno
data16
cmp
pop
mov
jge
fcmovnu
pop
imul
ret
test
and
mov
mov
int3
push
push
mov
cmp
mov
mov
or
scas
adc
shll
or
xor
js
jb
mov
and
shrl
fcmove
lds
ffree
dec
scas
data16
dec
fs
xchg
cmp
push
shrl
xchg
add
cmp
std
adc
inc
jne
xchg
xorb
dec
scas
and
sbb
shr
test
cmp
cs
cltd
inc
sti
cmc
xor
cmp
push
cli
mov
adc
stc
mov
inc
aas
test
ss
jecxz
and
dec
into
xor
mov
lret
test
mov
sub
jne
mov
mov
loop
imul
xor
cmp
mov
jle
cwtl
popf
xor
xchg
xchg
xchg
jle
add
in
dec
mov
je
or
mov
mov
cmp
jne
xor
popa
jno
dec
xchg
push
subb
sub
inc
mov
subl
mov
test
jo
pop
lods
dec
mov
cmp
call
add
lods
pop
enter
insb
fcmovbe
pusha
faddp
xchg
xor
std
icebp
pop
mov
dec
mov
mov
mov
addr16
rolb
cmp
lods
adc
pop
call
aaa
xor
fwait
jmp
lret
pop
xchg
pop
xchg
fsubr
xchg
out
and
cmpsl
arpl
mov
push
mov
hlt
mov
cmpsl
mov
mov
inc
push
sbb
sub
test
aas
push
je
insb
push
xchg
in
mov
lea
push
dec
xor
out
and
mov
rorb
stos
add
sbb
cmp
jae
fsubs
stc
cmp
js
xchg
pop
lods
adc
push
xchg
jno
ljmp
pop
push
jle
sbb
leave
ja
or
int
xor
push
sbb
jmp
adc
jecxz
inc
inc
mov
pop
jnp
sbb
jbe
outsb
add
movsb
or
add
mov
push
fdivrl
ja
in
push
jb
outsb
stos
inc
out
ss
push
dec
mov
mov
cmp
mov
andl
sbb
dec
inc
xchg
mov
pop
mov
xor
ljmp
in
outsb
mov
add
lahf
mov
cltd
push
jl
push
fs
jle
aas
mov
push
bnd
push
sub
and
popf
stos
inc
aaa
movb
inc
xchg
mov
lfs
cmpsl
ss
ret
cmp
mov
adc
scas
std
pop
cmc
and
mov
sbb
call
dec
jo
jl
movsb
jnp
cmp
into
stc
mov
cwtl
or
xchg
jg
dec
orl
out
dec
data16
xchg
inc
xchg
cmpsb
jo
or
arpl
hlt
pop
jno
mov
imul
sahf
push
push
inc
add
or
adc
mov
sahf
imul
jecxz
mov
lods
sub
sub
outsl
notl
enter
jmp
pusha
jg
loope
ljmp
into
cmp
shl
xlat
mov
mov
dec
push
adc
cltd
jl
push
dec
lret
xchg
pop
dec
dec
notl
add
and
cltd
jnp
or
mov
leave
int
int
movsb
fdivrl
cli
cld
or
push
lods
inc
test
and
insb
lods
cli
sbbb
insb
sysexit
movsb
faddp
std
sbb
fidivs
cmp
dec
pop
add
adc
jns
andb
mov
cs
inc
or
xor
cmp
sub
jno
and
fsubr
xchg
jp
jl
mov
inc
popf
mov
pop
call
iret
jbe
pop
pop
mov
rorl
cmpsb
lcall
push
sahf
jp
mov
dec
or
psrlq
add
out
pop
cwtl
jns
mov
clc
and
sub
xchg
dec
sub
jae
insb
inc
outsb
fistps
fdivp
xchg
or
cmp
lahf
add
int
fiaddl
call
fisubrs
shll
shrl
out
pop
add
pop
aad
xchg
xor
mov
mov
imul
xor
hlt
mov
das
ret
inc
adcl
inc
mov
divb
and
adc
pop
test
adc
dec
cmp
mov
pop
sbb
addr16
xor
inc
inc
inc
ror
gs
dec
adc
pop
push
iret
pop
cmp
dec
dec
sub
mov
pop
pusha
mov
pop
mov
or
push
rcrb
jnp
push
cwtl
jmp
ss
push
pop
mov
dec
pop
xor
lcall
or
push
mov
dec
xchg
lcall
dec
scas
inc
sub
push
cmpb
jle
pushf
jo
jg
out
inc
cmc
into
jle
push
mov
add
mov
jne
sbb
ja
test
cld
test
mov
mov
jnp
lods
and
xchg
decb
push
and
sub
out
loope
inc
fistps
xlat
push
and
mov
js
or
imul
push
mov
sahf
lds
mov
fistps
lcall
sbb
push
and
ret
lret
cmp
pop
xchg
out
lods
int3
mov
sahf
xchg
ss
dec
out
subl
mov
in
aas
mov
sbb
mov
rclb
pop
mov
loop
or
mov
sbb
sbb
or
xchg
adc
fisubs
adc
stc
loope
aas
sbb
negb
out
les
scas
fstpl
sbb
jge
sub
sbb
pushf
ret
pop
lods
mov
cmp
xchg
jl
out
call
pusha
fsub
pop
pop
aaa
clc
adc
das
dec
jg
xor
into
push
out
pop
popf
adc
jb
xchg
mov
mov
into
dec
outsb
in
les
inc
mov
jecxz
cwtl
pop
sarl
push
aaa
mov
les
pop
pop
adc
inc
scas
xor
repnz
mov
mov
dec
jns
insl
xchg
pusha
push
mov
out
jp
iret
addr16
movsl
dec
inc
scas
gs
and
adc
std
mov
stos
and
ret
add
push
scas
mov
je
sub
cmp
inc
dec
ja
pop
mov
pop
mov
mov
jle
cmp
xchg
loop
pop
add
sbb
clc
xchg
push
rcll
push
cmpsb
out
fcompl
push
cmc
and
clc
push
inc
imul
sbb
add
push
aas
sbb
sbb
mov
fmull
imul
loopne
xchg
push
loopne
ss
sbb
add
mov
and
add
lods
jo
cli
inc
pop
mov
mov
mov
cltd
mov
jb
lret
outsb
cli
sub
xchg
mov
sbb
inc
lahf
movsb
outsl
into
mov
lods
adcl
sarl
sub
push
into
fcoml
jns
nop
push
ja
mov
push
fnsave
ja
mov
jecxz
xchg
leave
negl
cmp
or
in
ret
out
mov
jbe
jns
popa
or
test
mov
sbb
and
sub
dec
dec
cmpsl
mov
imul
add
mov
sbb
xlat
dec
loopne
push
repnz
ret
xlat
imul
ja
jae
aaa
mov
pop
addl
in
pop
mov
push
pop
mov
and
xor
cmp
in
idivl
mov
mov
xchg
push
adcl
jbe
add
push
int3
xchg
fwait
cwtl
mov
jno
adc
pop
push
in
mov
sbb
or
hlt
sbb
sbb
xor
data16
lahf
inc
shrb
jmp
mov
lret
mov
sub
rcrl
mov
jae
or
imul
add
adc
mov
inc
imul
and
and
xchg
or
xor
je
cmp
les
inc
clc
inc
lret
rorl
xchg
push
pop
insl
shrb
push
es
stc
push
ljmp
fwait
xchg
pop
loop
dec
movsb
sbb
subl
call
push
jo
adc
adc
je
mov
icebp
cmpsl
pop
iret
testb
xor
dec
push
fiadds
inc
adc
nop
pop
push
xchg
daa
lcall
and
lret
pusha
loop
fbstp
loope
or
adc
movsb
lock
mov
es
aas
test
mov
ljmp
shr
dec
imul
pop
lcall
lods
dec
lods
mov
pushf
les
mov
cmp
jae
andl
push
movsl
xor
xchg
sti
xchg
and
test
scas
dec
xchg
push
lea
adc
call
out
sub
inc
iret
fdivr
repnz
push
mull
push
adc
icebp
nop
add
mov
add
sahf
test
dec
xchg
xlat
es
pop
lahf
lods
js
in
lods
arpl
data16
jno
stos
fbstp
aaa
stos
xchg
ljmp
push
dec
lret
ret
mov
rcrb
jecxz
js
fildll
inc
and
cmp
clc
leave
mov
iret
arpl
jp
fistpll
inc
es
add
push
mov
out
loopne
mov
xor
hlt
mov
xchg
mov
jbe
fwait
out
pop
sub
fiadds
popf
out
into
jns
addr16
ljmp
dec
add
leave
out
and
sub
ljmp
popf
fsubrp
push
xchg
into
adc
cmp
lret
mov
pop
scas
jnp
test
movsb
flds
sar
fldenv
gs
jne
cli
fisubrs
mov
mov
adc
in
mov
lahf
testl
rcl
outsl
ja
stos
sbb
add
into
movsl
int3
jae
gs
out
or
iret
icebp
test
orl
mov
or
xchg
lret
cmp
int3
mov
xchg
mov
sbb
push
push
insertq
jns
fwait
inc
into
sbb
clc
xchg
and
sbb
sti
sahf
les
jge
lret
rcrl
add
jp
mov
xor
adc
xor
test
ret
fsubp
mov
xor
aaa
dec
xor
jnp
repnz
or
lea
inc
lock
dec
sbb
xchg
lret
popa
enter
jmp
in
in
xor
and
pop
mov
test
jl
push
xor
mov
ret
xchg
mov
jp
pop
jecxz
movsl
hlt
aad
cmp
or
lods
sub
mov
mov
dec
push
jecxz
ret
fists
and
idivl
mov
mov
adc
fistpll
add
jne
sub
std
push
fwait
mov
ljmp
outsb
mov
and
mov
mov
stos
aaa
stos
fadds
shll
mov
dec
mov
dec
mov
xchg
addl
jecxz
pop
sub
mov
push
mov
imulb
lods
adc
and
push
loope
lahf
lcall
pop
outsl
and
rcll
jg
rep
adc
in
inc
mov
pcmpeqw
sub
ret
cmp
sbb
aaa
iret
insl
and
rcrb
xor
xor
add
jns
jge
popf
or
loopne
call
mov
or
loope
leave
cs
inc
leave
dec
pop
or
mov
sti
lds
sbbl
shrb
pushf
addb
stos
xor
stos
roll
jecxz
roll
in
imul
dec
pop
out
rorb
push
fwait
in
lods
dec
xor
mov
push
lret
mov
mov
data16
jge
jmp
mov
mov
mov
pop
repnz
stc
in
mov
adcl
negl
xchg
movsl
jno
ja
insb
push
out
das
lcall
adc
xor
and
aaa
adcl
jns
push
incb
inc
push
sub
push
fnstsw
adc
dec
popf
mov
lahf
outsb
and
sbb
jge
insl
cwtl
into
roll
loopne
sbb
inc
cmp
mov
sub
jg
adc
lret
cmpsl
pop
lahf
push
pop
repz
push
add
push
mov
xchg
test
fnstcw
jle
in
sbb
or
inc
sahf
mov
and
xchg
xchg
adc
xchg
pop
xor
inc
mov
and
jo
inc
push
jl
mov
sbb
jmp
imul
bound
push
fnsave
xchg
sbb
fisubrl
movsl
mov
dec
pop
sub
fdivs
clc
or
sub
daa
insb
fwait
mov
gs
dec
pop
out
cli
xlat
lds
add
jb
jp
sbb
lea
mov
cld
xlat
jb
jle
shlb
pop
sub
outsb
cld
das
lea
je
insb
jp
pop
fadd
jae
inc
mov
mov
out
push
insb
jae
fistpl
xchg
pop
imul
mov
ss
or
int3
xor
jmp
add
iret
pop
std
loope
mov
test
fidivrs
fwait
cwtl
fnstcw
stos
cmp
in
lret
jns
cltd
dec
mov
jns
cmp
test
adc
or
jge
jb
pusha
gs
pop
lret
fsts
insb
mov
in
mov
data16
cmp
dec
mov
in
lret
pop
addl
std
repz
loop
imul
mul
inc
cwtl
fmuls
es
shll
jmp
or
in
mov
gs
push
rcr
and
mov
jne
mov
ja
sbb
dec
jg
xor
adc
lds
test
repz
cmp
push
iret
xchg
xchg
pop
dec
outsb
jno
push
adc
stos
inc
sbb
mov
lds
repz
and
pop
sub
scas
jno
mov
mov
movsb
jecxz
and
add
inc
push
add
aam
pop
fstl
cmc
andl
icebp
nop
sbb
dec
movsb
leave
and
dec
mov
mov
test
insb
add
js
xor
dec
push
int3
dec
bound
cmpsl
es
xchg
daa
shl
sub
gs
push
in
mov
fbstp
iret
cmp
jg
and
mov
in
outsl
outsb
outsl
shll
and
inc
fiaddl
int
dec
fdiv
in
cmp
xor
push
lds
in
cmpsl
out
xchg
in
lock
adc
stc
mov
repz
xchg
sbb
pop
xor
out
mov
in
imul
mov
fistpl
jmp
adc
test
lret
ds
je
cwtl
pop
lahf
frstpm(287
push
cmp
hlt
idivl
outsb
fsubr
jne
sub
mov
push
jmp
xchg
xchg
or
sarl
mov
jnp
sbb
jg
or
or
and
pop
pop
jl
push
mov
dec
insl
movsl
mov
test
cmp
or
dec
dec
nop
jb
sub
push
rolb
dec
mov
adc
pop
arpl
in
xchg
mov
or
int3
xchg
lret
xadd
pop
cmp
lcall
popa
mov
jno
int
mov
ficompl
out
sti
shrb
mov
cmp
mov
insl
lret
or
mov
imul
pop
sbbb
into
jae
mov
rol
sub
icebp
and
sub
jno
out
or
cmp
stc
loopne
push
pop
sbb
add
mov
mov
pop
sub
dec
loope
fsubs
shlb
lret
mov
mov
lret
fnstcw
pop
rorb
or
mov
mov
adc
jg
sub
or
inc
aaa
ficompl
inc
dec
mov
into
sub
stos
mov
pop
xlat
ret
movsb
icebp
ffree
movsb
das
inc
fidivrs
mov
cmpsb
dec
movsb
xchg
xchg
rcrl
fidivrs
mov
push
aaa
mov
dec
sbb
aam
and
test
xchg
daa
dec
mov
mov
sub
pushf
mov
fistps
or
inc
cmp
and
xchg
or
pop
scas
sub
stos
dec
inc
movaps
repnz
sub
xorl
sbb
ja
sub
in
xchg
adc
cli
sbb
or
sbb
xrelease
push
in
bound
lret
insb
mov
and
ja
shlb
mov
in
rolb
ret
mov
adc
repnz
xor
vpsrld
and
and
pop
fisttps
sub
pop
sbb
popa
cmp
or
push
cld
jmp
mov
cmp
mov
push
push
dec
rcr
mov
repnz
cmp
jae
icebp
push
inc
sub
jbe
xchg
test
xchg
jg
in
loope
cs
popa
cmpsl
cmpsl
call
push
lret
xor
subb
xchg
popa
out
cmp
test
cmp
mov
sbb
insb
fsubrl
mov
sahf
insl
xchg
movlps
test
stos
xchg
sti
or
hlt
pop
sahf
leave
sub
or
pop
sub
cld
push
mov
cli
or
push
fsubrl
out
mov
push
push
pop
test
mov
andl
movsb
xchg
mov
pusha
dec
int
addr16
jmp
add
or
cmovae
push
fwait
inc
mov
jecxz
int
jne
adc
int3
arpl
cmp
xchg
push
pop
iret
jl
ja
mov
inc
pop
pop
and
mov
test
cmpl
test
addr16
or
lods
jge
push
dec
adc
cmpsb
dec
mov
xlat
inc
jge
dec
repz
mov
jl
int3
sbb
loopne
test
lret
out
pop
and
ss
jns
call
xor
and
andl
rcr
adc
sub
or
ds
pop
adc
push
lret
ret
inc
test
test
divb
addr16
int3
inc
jmp
repz
jp
or
out
cmpsl
movsl
fbld
in
notl
mov
fisttpl
adc
mov
popf
and
mov
mov
mov
fidivrl
cmp
cmp
dec
mov
call
std
mov
pop
and
dec
aad
push
rcrb
lea
or
mov
inc
mov
push
aam
mov
loop
clc
xlat
push
ljmp
les
es
imul
xor
mov
xchg
xor
fidivrs
insl
lret
andb
jg
stos
cmc
pop
cltd
add
das
push
out
sub
xor
adc
bound
out
jno
and
jae
push
xchg
jb
jno
and
ds
pop
mov
pop
push
int3
daa
outsl
and
scas
mov
jo
and
cmp
inc
call
testb
pusha
dec
mov
jge
mov
mov
int
jne
xor
or
lods
lret
mov
aas
ljmp
lods
mov
push
dec
shr
pop
sarb
and
cmc
enter
mov
mov
mov
or
lods
test
call
arpl
add
subb
pmaxub
int3
pop
pop
jnp
fldl
call
aad
pop
loopne
cld
dec
sahf
and
es
xor
into
aad
xchg
fldl
sahf
imul
stc
mov
repnz
subb
iret
inc
icebp
inc
repz
aaa
sbb
ds
jge
pop
negl
adc
in
subl
or
stos
jmp
jge
and
jb
add
cmp
jo
mov
jmp
pop
and
loop
test
sbb
xor
pop
jae
dec
movsb
mov
dec
imulb
out
cmpsl
dec
int3
mov
sbbl
adc
push
xor
jb
leave
cmp
jne
mov
test
and
test
pop
mov
xchg
dec
mov
mov
and
nop
adc
mov
xchg
sti
jne
jmp
fcmovnb
andb
or
data16
clc
mov
test
fcmovu
cmp
mov
out
cs
dec
jnp
in
mov
or
fbld
push
neg
loope
lret
outsb
lret
xor
aad
sbb
out
test
gs
loop
mov
in
push
cs
out
fldenv
out
pop
mov
add
test
xor
jmp
ss
mov
aam
test
adc
out
dec
or
add
pop
cwtl
xor
inc
cmc
inc
imul
cltd
gs
and
pushf
cmc
fildll
inc
mov
enter
lcall
ficoms
add
mov
mov
shll
aam
insl
fistpl
cmpxchg8b
fcomip
add
loope
and
lret
fistpll
adc
sub
test
clc
mov
jae
stc
push
inc
out
sub
mov
sub
in
push
sahf
addr16
add
fstpl
pushf
pop
inc
push
or
mov
arpl
pop
jbe
ja
or
push
and
icebp
xchg
inc
loopne
push
push
xor
jl
xchg
xor
mov
ret
mov
jle
roll
out
lcall
ds
mov
lds
inc
push
add
sub
pop
popa
or
push
negl
mov
mov
inc
test
loop
add
notl
inc
lret
int3
adc
aas
sub
inc
pop
push
pop
push
add
push
jbe
neg
add
dec
scas
insb
in
data16
nop
push
das
ret
or
push
add
pop
call
lds
jp
mov
das
dec
add
sti
add
mov
jne
out
xchg
sbb
lret
ret
dec
sti
jns
jb
fdivl
push
in
cmp
xor
push
jmp
lahf
jbe
mov
insl
enter
icebp
jns
loopne
mov
or
adc
into
idivl
push
pop
mov
daa
ss
ss
and
xchg
or
lcall
in
xchg
sti
xchg
daa
mov
and
mov
push
pcmpgtw
xor
jne
cmp
aad
cwtl
jge
enter
mov
inc
lcall
in
push
icebp
cs
mov
sahf
ss
adc
hlt
scas
mov
es
jecxz
sub
arpl
arpl
add
mul
inc
mov
xor
or
jecxz
es
push
or
and
arpl
outsb
jmp
aaa
lock
dec
mov
stos
je
and
xchg
icebp
xchg
pop
inc
pop
lock
xchg
mov
sbb
lret
sbb
scas
cmc
lods
std
outsl
cwtl
add
push
fsubrl
pusha
nop
int
es
jnp
jmp
mov
lods
iret
bswap
decb
test
add
jg
out
jecxz
xchg
shl
adc
inc
dec
les
cmp
cmpsl
xlat
sbb
pop
push
xor
mov
push
pusha
xor
fstl
cmp
test
mov
gs
clc
pushf
cmp
sbb
insb
hlt
in
lret
push
xor
xorps
insl
and
pop
sahf
cltd
outsb
outsb
sbb
push
outsb
movsl
ret
xchg
int
or
pop
mov
push
jecxz
sub
dec
jb
in
push
shrl
daa
outsl
js
int3
sub
pushf
sub
add
lock
or
pop
mov
shrl
lock
or
out
lods
fwait
cli
cmp
cmp
push
jb
lret
or
inc
ficoml
sbb
mov
in
xor
xor
dec
lea
mov
cmp
iret
stos
mov
sbb
push
sbb
xor
es
mov
push
inc
jbe
dec
orl
sahf
enter
dec
jbe
mov
in
mov
mov
pusha
adc
mov
hlt
sti
addr16
mov
fwait
xchg
lods
mov
pop
cli
dec
or
in
fmuls
mov
or
mov
int
popa
cmpsl
xor
int3
dec
mov
mov
loop
lret
or
les
aaa
sti
test
jo
insb
mov
or
sbb
xchg
scas
adc
jmp
rcrl
lahf
gs
and
gs
jnp
sahf
fadds
cwtl
fisttpll
jle
ret
aas
jle
js
jle
xchg
enter
vpmaddwd
push
jbe
in
dec
in
aaa
lea
xchg
clc
push
scas
cmpsl
cmpsb
jbe
repz
inc
mov
mov
pop
fistps
or
test
imul
xorb
arpl
outsb
add
rcrl
mov
pop
pop
lds
mov
fxch
cmp
inc
xchg
shlb
repz
jbe
or
lods
cmp
dec
sub
cmp
stos
shlb
push
sbb
shrb
pop
shl
push
lds
mov
jp
sahf
je
outsl
into
cwtl
jge
mov
ror
jns
shlb
lret
inc
mov
cld
push
in
pop
icebp
test
and
adc
dec
mov
dec
mov
inc
lcall
pop
lea
out
ficoml
pop
jbe
sbbl
jnp
xor
push
in
pop
test
add
std
mov
inc
dec
add
popf
mov
push
cmpsl
pop
ss
xor
pop
adc
cmp
sub
add
jmp
popf
mov
mov
or
dec
and
lods
sbb
push
int3
dec
stc
inc
add
xor
push
adc
movsl
dec
lea
xchg
loop
negb
or
dec
or
jecxz
cwtl
mov
aad
or
out
aam
xlat
lcall
pop
mov
insb
or
and
xor
test
adc
lahf
aad
out
pusha
and
movnti
rcr
cs
dec
in
aad
imul
and
popf
fwait
dec
mov
sbb
test
sub
hlt
lahf
xor
push
stos
inc
adc
pop
loope
mov
and
testl
fbld
jbe
cmpsl
lcall
loope
divl
aad
cli
jne
mov
pop
fdivrl
cwtl
jae
data16
xor
pop
xchg
int
sub
mov
aaa
jp
pop
repz
adc
mov
iret
pop
mov
ret
inc
cs
in
pop
lretw
push
push
or
test
mov
pop
cmpsb
xchg
dec
mov
hlt
ja
shll
lods
sub
in
xchg
push
loope
cltd
sbb
cmpsl
mov
jmp
cmp
xchg
fcomps
mov
push
loopne
imul
add
or
aam
sub
jl
push
adc
cmp
push
fcoms
pop
arpl
movsb
push
test
in
xor
pop
pop
out
rolb
test
test
loop
out
or
shl
pop
shrl
pop
mov
jl
or
adc
lea
sbb
decb
fs
adc
repz
lods
cmpsb
and
not
xchg
ret
push
or
adc
jl
xchg
and
jle
arpl
out
xchg
test
fcomps
xchg
stos
push
mov
pop
mov
lcall
fs
jae
inc
repnz
and
inc
inc
pop
sti
ficomps
je
stc
push
push
mov
iret
jmp
pop
fdivr
test
hlt
sub
mov
dec
cwtl
dec
jle
test
test
cwtl
mov
inc
add
fdivr
dec
push
jb
jge
iret
mov
outsb
pop
xor
dec
out
adcl
mov
in
mulb
sar
or
xor
loop
jb
jne
or
pop
mov
popf
das
push
addr16
mov
mov
sub
push
dec
push
in
ss
pop
dec
sti
mov
adc
mov
push
xchg
cmc
sbb
and
or
adc
fwait
inc
adc
sbb
cmp
inc
inc
push
mov
cmp
jno
sub
dec
mov
adc
jns
loopne
movsb
mov
out
or
mov
div
and
leave
mov
lds
cmp
hlt
lahf
push
sub
pusha
jae
push
fcomps
and
push
add
or
dec
xchg
push
cmp
push
xchg
mov
mov
insb
sahf
insb
rcrb
ljmp
xchg
sub
insb
adc
sub
push
lods
loope
sarl
idivb
sahf
subl
and
outsb
mov
pop
mov
push
add
mov
arpl
pop
sbb
xchg
fists
inc
daa
aam
jmp
repnz
pushf
push
add
jno
lcall
out
jp
xor
jle
add
xor
cwtl
push
xor
int3
mov
push
xchg
push
push
cmp
in
mov
loopne
xor
xor
xor
out
inc
xor
outsl
pop
xor
imulb
out
sarb
cmp
sar
out
push
mov
fdivl
outsb
xchg
fwait
mov
jle
xlat
shrb
cwtl
lret
mov
dec
push
and
aas
pushf
dec
mov
jl
pushf
loopne
daa
mov
mov
hlt
mov
notl
pop
push
mov
fidivs
mov
les
pop
push
dec
decl
xchg
scas
pushf
adc
movsb
cwtl
adc
jae
add
test
iret
pusha
sbb
mov
mov
mov
out
sub
ret
das
pop
jecxz
stos
repz
push
mov
lahf
fs
sbb
cmp
sub
xor
jnp
xchg
push
stos
xchg
add
orl
push
push
add
pop
test
xchg
fwait
xchg
dec
pop
add
std
ret
cld
inc
fwait
push
xlat
or
jnp
mov
sbb
dec
addr16
cwtl
bound
insl
outsl
cmp
mov
mov
mov
sbb
into
xor
inc
pop
lock
xor
ja
notb
sarb
jo
push
xchg
loope
out
in
cs
dec
xor
ds
push
pop
add
inc
xlat
cltd
adc
jmp
test
dec
or
mov
fldl2e
jge
push
aas
shll
aam
ret
les
or
jge
mov
mov
inc
lods
mov
addr16
jp
out
test
and
dec
cmp
icebp
xchg
xor
test
push
daa
or
push
jae
xor
mov
dec
add
xchg
pop
pop
push
add
mov
jge
inc
cmc
push
push
push
int
ficomps
jmp
jae
outsb
push
std
mov
xchg
bound
adcl
sub
dec
mov
sub
sbbl
xorb
aaa
fsubr
mov
fmull
or
dec
jno
lds
sub
lret
mov
rolb
iret
push
out
mov
jmp
pop
movsl
mov
mov
push
cmp
xor
mov
movsb
sbb
das
rcrl
adc
and
jns
aaa
add
cmpsl
int3
std
xchg
add
lock
dec
ror
and
data16
outsl
adc
push
popl
insl
lods
fwait
ret
test
mov
and
xor
mov
fdivrp
mov
add
jecxz
int3
test
shlb
or
add
and
repnz
int3
pop
adcb
xor
adc
jns
add
lds
pop
and
adc
jno
fmul
stc
lea
loopne
and
jmp
sbb
ret
hlt
jg
sahf
std
cmp
lcall
adc
aas
jbe
or
pop
les
fstl
test
mov
leave
ss
pop
mov
ror
iret
lock
sahf
jp
in
xchg
jmp
scas
jbe
push
jle
mov
outsb
inc
or
pop
enter
xchg
ret
mov
stos
sbb
mov
shrb
pusha
sbb
adc
int
pop
clc
repz
rol
xor
dec
pop
dec
out
mov
cwtl
hlt
loop
push
sbb
int
test
imul
shl
adc
inc
xchg
push
jb
dec
leave
mov
insl
cmp
sti
std
or
cmp
adc
xchg
or
aas
sub
addr16
stos
jo
xor
or
sub
push
scas
daa
insb
jge
mov
sbb
xor
lods
rcrl
ljmp
enter
insl
insl
pop
flds
in
dec
jb
xchg
cmpsl
in
mov
or
call
mov
sbb
jne
mov
mov
add
out
xchg
pop
fldcw
push
cmp
cltd
ret
fistpll
pop
loope
pop
dec
mov
mov
push
adc
mov
and
in
dec
mov
push
hlt
cltd
mov
shl
roll
mov
adc
pop
test
pop
scas
sbb
ds
add
mov
mov
std
pop
pop
orb
sahf
xor
mov
cmp
push
mov
in
rcrb
push
cmpsl
movsw
mov
xor
das
out
leave
adc
les
fstps
pop
jp
xor
clc
adc
sub
cmp
xchg
lahf
xchg
xchg
loope
inc
mov
xchg
mov
and
fwait
test
and
xchg
ljmp
dec
int3
shl
call
jge
mov
xchg
cmpsb
and
xchg
cmp
shlb
adc
xor
ucomiss
xor
sbb
fidivrs
out
testb
push
and
sbbb
shlb
into
inc
sub
push
sti
add
repz
dec
lods
repnz
cmp
mov
pop
push
imul
mov
jg
mulb
mov
jecxz
je
xchg
push
sahf
mov
mov
smsw
pop
xor
push
and
push
cmp
js
ljmp
aam
inc
pop
test
adc
daa
or
addb
jne
push
sub
or
out
fidivrs
fnstsw
outsl
mov
jo
lret
das
cmpl
rclb
dec
je
cmpsl
xchg
icebp
push
ljmp
and
mov
xchg
mov
out
push
sbb
mov
movsl
or
fadd
pop
jno
pop
cld
scas
and
pop
mov
or
adc
int3
out
int3
pop
pop
cmc
jns
lcall
aam
jnp
and
add
adc
xchg
mov
dec
push
or
xchg
add
mov
or
pop
outsb
repz
nop
dec
xor
pop
std
adc
aaa
lcall
pusha
mov
mov
imul
push
ja
add
out
negl
ficompl
movsl
dec
and
mov
lods
xor
out
and
add
mov
ljmp
and
pop
and
dec
stos
jge
pop
adc
xor
adc
int
stos
sbb
mov
insb
pop
mov
mov
icebp
mov
mov
leave
pop
or
jle
ret
stos
stos
orl
dec
insb
xor
xor
les
arpl
xchg
orb
mov
in
jnp
cli
sbb
jo
mov
mov
mov
arpl
movsb
inc
mov
rorb
xor
outsb
mov
pop
rcr
and
aam
ja
insl
sub
pop
les
test
imul
push
xor
xor
scas
xlat
add
push
dec
mov
jae
cmp
or
mov
jns
data16
or
push
mov
data16
sub
out
aam
or
repz
das
mov
dec
movsl
jns
lret
jl
mov
pop
ja
std
mov
sub
mov
repnz
or
dec
test
movsb
aaa
pop
mov
sub
and
mov
pop
add
lcall
ret
push
fstpl
and
adc
sbb
add
inc
lods
popa
mov
test
pop
lds
mov
jl
dec
repnz
or
int
loop
xor
test
fisttpl
cld
add
scas
outsl
ret
push
pusha
sbb
jecxz
addr16
cmp
out
jl
imul
mov
mov
sti
jl
movsb
loop
sub
mov
mov
jb
mov
xchg
push
test
cmp
mov
adc
pop
out
fsubs
mov
dec
push
push
in
in
jbe
cs
add
cmp
sub
inc
aam
jge
dec
fwait
adc
cmp
mov
popf
and
or
fcomi
mull
pop
shl
push
clc
xchg
adc
cmp
scas
in
or
das
pop
iret
sahf
pop
test
add
push
dec
xchg
les
data16
push
add
adc
ja
pop
cltd
mov
std
repz
jp
sbbl
inc
notl
pushf
inc
cmp
sbb
ds
mov
dec
fldt
dec
and
mov
aas
and
loop
addb
movsl
fimuls
jo
pop
pop
popf
xchg
add
cmp
cmp
pop
pop
std
stc
sbb
in
in
loop
mov
push
pop
loope
xchg
add
dec
std
notl
push
xor
test
icebp
in
jbe
test
adc
mov
cmpb
add
cmp
xchg
or
out
jle
arpl
addl
loop
cmpsb
into
fwait
std
jl
call
add
stos
adc
testl
push
out
pop
pushf
xchg
jg
movsl
pop
test
test
test
mov
into
sbb
popa
nop
bnd
pop
ror
jnp
imul
jns
inc
bound
push
mov
aam
or
and
jae
repz
dec
popf
ljmp
dec
adc
mov
or
arpl
push
push
mov
divb
sbb
shl
mov
mov
aaa
dec
cmp
out
push
out
cmp
ucomiss
sub
shrb
xchg
mov
dec
aad
and
mov
or
into
add
sti
push
int3
inc
popa
pop
push
shl
arpl
dec
sub
mov
or
movsb
jns
mov
inc
xchg
sbbb
out
clc
cmp
clc
lods
or
adc
mov
jnp
adc
loop
mov
cs
lcall
pop
cmpsl
fs
loopne
jo
pop
push
out
mov
and
add
mov
aas
js
push
inc
jp
dec
cmpsl
lret
or
jle
adc
lock
push
jge
xchg
mov
in
mov
sub
sub
imul
lea
cmp
fsub
fsubrp
loop
jp
fsubl
data16
mov
cmpsb
pop
mov
pop
popa
pop
xchg
and
adc
pushf
iret
loopne
call
rcrl
das
xchg
sbb
stc
int
imul
dec
mov
jno
mov
xor
add
lods
ss
xlat
or
sbb
fwait
push
mov
sbb
xor
insb
cmp
inc
push
fmull
aam
fwait
xchg
push
add
dec
sbb
pop
sub
in
inc
and
test
adc
popa
out
jbe
js
jmp
pop
xor
push
dec
stos
aad
sbb
daa
lahf
push
or
sub
insb
mov
ja
pop
test
das
push
into
jp
pop
outsb
mov
aam
xor
mov
push
dec
mov
adcb
int
out
lds
aad
dec
mov
rcpps
repz
push
sbb
jp
mov
call
and
xor
dec
lret
lcall
out
cmp
and
loopne
dec
mov
xchg
out
mov
xor
mull
mov
shlb
mov
fistpll
loopne
das
out
push
cmp
xchg
adc
jle
inc
push
push
and
mov
in
sbb
dec
cmp
mov
arpl
jb
adc
adc
data16
or
inc
test
and
adc
and
push
mov
lahf
pop
xchg
xor
push
cmc
les
dec
fs
sarl
lds
lea
out
das
sub
mov
push
add
jmp
cwtl
cmp
xchg
fstpl
test
testb
fcmovne
sbb
insl
dec
sub
mov
sbb
stc
sbb
in
ss
out
movl
add
cwtl
pop
cmp
mov
push
scas
cltd
jmp
sbb
sti
xor
push
mov
xor
xor
das
adcl
sbb
int
das
xchg
fnstenv
jle
mov
push
inc
push
mov
mov
adc
add
jecxz
xor
or
or
bound
cmp
lahf
loope
pop
jg
gs
ret
jno
mov
cmp
push
jg
sbb
cmp
jmp
push
inc
add
xorl
mov
jns
xor
or
aaa
mov
sub
dec
push
sbb
ficomps
call
lea
inc
cld
cmp
jo
pop
jne
push
sub
fwait
xorl
inc
addr16
test
push
insl
testb
xor
cltd
repz
jl
movsb
pop
test
lahf
mov
add
mov
xchg
imul
xor
insl
inc
adcb
cltd
in
int3
scas
idiv
and
icebp
mov
lods
cmp
mov
ret
pop
cmpsb
sarb
mov
push
adc
mov
jmp
mov
aad
pop
xor
jne
jle
test
cwtl
and
xchg
cmp
pushf
shlb
push
and
add
push
shll
fimuls
xlat
in
hlt
push
pop
into
sub
stos
cmp
imul
lods
fisubrl
dec
jne
cmp
test
pop
inc
divb
imul
popf
adc
and
shrl
jle
pop
cwtl
int
adc
in
jno
ljmp
dec
cmpsl
jbe
cltd
fstps
iret
add
xchg
ss
cli
iret
sub
mov
pusha
mov
rolb
sbb
ja
sbb
pusha
sbb
push
cmpsb
push
or
dec
add
out
outsb
push
cld
add
in
jle
sbb
shll
lock
sbb
popf
mov
pusha
jg
inc
sti
addl
test
sub
repnz
aas
sbbl
inc
rcr
call
push
mov
movsl
fnstcw
fs
negb
popa
jbe
mov
xor
in
fidivs
or
pop
addb
sbb
push
mov
dec
xor
scas
cmp
frstor
es
pop
mov
jl
mov
ja
inc
std
jb
call
inc
repnz
sbb
scas
dec
pop
dec
clc
push
xchg
jb
mov
sub
fsub
jl
loope
addr16
add
inc
mov
ja
popa
ljmp
idivb
mov
cs
mov
push
jns
movb
inc
inc
inc
mov
xlat
pop
and
rcll
lahf
aas
xor
scas
pop
jp
pop
mov
xchg
mov
ljmp
aam
scas
xchg
push
mov
add
dec
sahf
js
cltd
xor
and
jg
cmc
sbb
and
fs
sbb
adc
inc
cmpsl
xchg
xchg
push
outsb
in
ljmp
cmc
push
pop
jnp
xchg
fs
ret
pop
lret
xchg
pop
pop
xlat
enter
mov
push
sub
add
sub
push
cwtl
shl
xor
add
mov
lods
clc
insl
or
and
mov
dec
and
or
sub
push
jno
cwtl
push
jne
mov
mov
ds
stos
push
cld
jnp
insb
pop
stos
mov
pop
jne
jb
popf
pop
imul
sbb
xor
aas
xor
jne
sub
stc
pushaw
xchg
mov
mov
sub
lret
insl
inc
ja
jp
arpl
js
lcall
pop
cmp
popa
cli
add
jnp
and
dec
faddl
fnstenv
dec
loopne
mov
loop
xchg
mov
cmp
xchg
iret
jnp
mov
andnps
dec
cmp
and
mov
fs
aam
push
fldl
sub
lock
mov
pop
jb
icebp
add
push
sub
imul
xchg
push
dec
push
add
mov
punpckhdq
inc
push
arpl
inc
mov
mov
pop
jae
pop
push
aam
pop
push
fsub
jp
js
imul
ss
testl
nop
pop
pop
jnp
in
les
inc
pop
mov
daa
pop
out
cmp
sbb
js
out
mov
gs
jno
ret
fildll
in
pop
shrb
shl
inc
pop
xor
push
bound
ret
inc
jae
stos
dec
clc
adc
xchg
fmuls
test
mov
icebp
aaa
loope
rorl
add
dec
inc
jecxz
fildl
in
shll
test
pusha
inc
dec
orl
mov
pushf
loopne
es
sub
cmpsl
mov
sub
iret
jl
adc
jecxz
xorb
add
inc
push
iret
jo
pushf
mov
int
pop
js
push
and
and
loope
rdtsc
leave
cltd
and
dec
cmp
pusha
stos
adc
fcoml
jle
aas
push
jle
xor
mov
jns
push
xchg
xchg
cmp
imul
xchg
sub
rorb
push
mov
push
out
jns
stos
fisubl
xchg
repz
and
lret
jo
sbbb
popa
in
xor
lock
mov
rcll
push
jecxz
out
lds
decb
sbb
add
dec
call
cmpsb
mov
xor
in
cltd
adc
adc
lods
mov
or
shlb
popa
adcl
pop
lock
hlt
push
inc
xor
jno
sub
add
mov
xorl
dec
lret
sbb
mov
push
mov
cmpsl
xchg
xchg
sub
bound
leave
mov
dec
and
xchg
sub
push
mov
pop
dec
jp
fldt
push
sub
daa
and
into
add
pop
jmp
data16
mov
cmpsl
push
dec
cmpsl
sbb
int
mov
imul
sub
cld
cld
or
adc
jg
cli
mov
xchg
sbb
dec
fcmovnu
test
aam
jno
mov
daa
out
adc
xchg
cli
test
sbbb
imul
dec
sar
testl
adc
push
mov
out
sbb
hlt
pushf
out
imul
mov
negl
mov
popf
sub
mov
jnp
cmpsl
sbb
xor
jl
in
pusha
inc
jnp
mov
push
mov
dec
push
inc
mov
repz
mov
adc
xchg
rorl
jmp
imul
mov
cmp
cmpsl
jle
push
jge
inc
cmp
mov
and
mov
push
jnp
cmp
lahf
sub
ja
fs
divb
mov
popl
ljmp
jb
mov
dec
icebp
test
sar
gs
movsl
jle
shl
push
gs
jmp
sub
sub
std
out
dec
pushf
fbstp
enter
fs
shlb
jecxz
xchg
jb
decl
imul
sar
push
ret
inc
in
sarb
fcoml
dec
and
sub
mov
aas
out
paddusb
mov
xor
jno
stos
mov
fadd
jmp
xchg
hlt
sub
rorl
push
iret
in
ret
dec
test
imul
popf
pop
sub
dec
mov
sbb
and
lods
xor
mov
sbb
inc
mov
sbb
dec
push
lcall
pop
push
mov
mov
outsl
mov
pop
ss
inc
mov
movl
movsl
mov
popa
inc
mov
xchg
xchg
dec
ret
cmp
shrb
cmp
enter
mov
sti
insb
adc
in
fistl
gs
mov
ljmp
in
inc
add
inc
adc
sbb
sub
enter
in
xor
mov
out
lahf
xor
add
xchg
std
lea
mov
imul
jns
lret
cltd
in
or
jp
popf
loopne
mull
jbe
fwait
inc
lds
fldl
lcall
fwait
jnp
in
and
dec
lods
push
in
out
mov
sub
les
rcrb
out
pop
xor
sbb
sarl
xchg
shl
dec
and
pop
pop
inc
or
cmp
push
rclb
adcb
inc
popa
lds
cmp
test
cs
mov
nopl
xor
mov
push
jb
xor
testl
outsl
dec
mov
popa
push
imul
jnp
add
pop
push
jae
leave
icebp
sub
out
mov
mov
sbb
inc
mov
inc
sbb
dec
sti
push
dec
push
ja
mov
sbb
lods
push
jns
jnp
mov
xor
in
sub
mov
mov
inc
jmp
arpl
inc
popa
je
test
outsl
cli
sarl
xchg
jecxz
mov
ss
mov
enter
and
scas
dec
inc
inc
mov
packssdw
cltd
jge
lods
loope
pop
mov
dec
aaa
mov
outsb
adc
add
xchg
and
cmp
gs
aas
movsl
paddb
mov
and
aaa
icebp
lock
jnp
fsts
in
in
adc
xchg
aad
shrb
stos
mov
outsl
adc
mov
or
push
cmp
shlb
dec
fucomi
and
out
inc
inc
fwait
pop
and
icebp
cmpsb
mov
pop
sub
dec
jae
pop
jo
stos
and
ds
aas
xchg
sbb
add
adc
dec
xchg
mov
aam
out
mov
push
std
dec
lods
call
xor
mov
dec
dec
ret
adc
mov
mov
frstor
mov
call
cmp
enter
cmp
dec
mov
mov
scas
inc
and
jecxz
mov
sub
movsb
dec
js
mov
ret
mov
aam
mov
iret
or
push
repz
in
and
xor
jns
cmp
mov
stos
mov
jl
push
test
into
jmp
add
addl
dec
xlat
jae
aas
add
mov
sbb
lds
jns
xor
cmp
scas
addb
fcoml
dec
clc
movnti
push
outsb
jl
cwtl
ds
sub
in
jl
stc
pop
mov
pop
cmpsb
fnstsw
hlt
push
pop
fidivrl
aas
pop
mov
out
sub
jnp
scas
push
ret
jg
xor
inc
pop
jecxz
into
sub
and
mov
xchg
cmp
jno
clc
sub
push
inc
vmovlps
loope
push
adc
mov
or
in
adc
sub
sub
outsl
notb
fwait
mov
jge
mov
xlat
push
jl
loop
out
cli
orb
sub
adc
mov
shl
rolb
inc
dec
push
jge
jns
pop
pop
cmpl
sarl
mov
jmp
mov
sub
sub
fstl
cltd
popf
out
out
xor
inc
sbb
cmp
lcall
and
sub
movsb
lds
push
sbb
cmpsl
fldlg2
add
mov
jecxz
in
and
sbb
inc
aad
test
xor
mov
inc
mov
push
xlat
push
movsl
jmp
adc
out
xor
cs
test
lods
mov
inc
dec
mov
sahf
inc
pop
jmp
dec
fldcw
push
jp
loopne
jmp
xlat
xor
arpl
jne
jbe
sbb
pop
bound
out
in
push
cltd
jae
in
dec
mov
mov
pop
jbe
or
ret
outsl
pop
out
cmp
aad
xor
fs
shll
sahf
ss
add
cltd
push
mov
and
pop
cs
lock
jmp
sbb
cmp
add
subps
arpl
jp
movsb
mov
movsb
insl
mov
stc
and
or
cmp
test
pop
ftst
add
pop
insl
cmc
add
or
sbb
inc
mov
dec
shl
sahf
sub
aad
pop
out
vcomisd
jno
sbb
iret
imul
pop
test
ja
sbb
outsb
xor
stos
push
pop
sbb
push
pop
or
pop
pusha
add
rorb
adc
movsl
idivb
stos
mov
dec
or
cmp
sbb
and
daa
sub
jecxz
xchg
add
cld
lcall
iret
xor
sub
inc
insb
int3
mov
pop
ja
or
loopne
mov
out
sahf
cmp
xchg
xor
pop
test
add
loop
shrb
jmp
jle
lcall
push
aam
test
std
xchg
data16
adc
sahf
js
or
stos
subb
ja
lea
jno
stos
popf
push
jle
in
xlat
insl
pop
push
jle
ds
lods
mov
ret
mov
jns
outsl
pop
inc
xor
mov
cmp
leave
xlat
pop
scas
adc
pusha
inc
pop
sbbl
popf
mov
sub
mov
jnp
dec
add
mov
cltd
nop
jb
mov
bound
push
pop
mov
sbbb
out
inc
les
test
or
or
mov
dec
dec
adc
mov
and
sub
in
inc
push
mov
jmp
out
or
push
adc
in
sub
xlat
pop
pop
sbb
mov
test
dec
ret
stc
inc
xchg
pop
mov
aas
mov
ret
xchg
xlat
out
pop
fisubl
sbb
or
jno
xchg
pop
clc
xlat
jl
mov
add
das
sub
jecxz
push
rol
jns
iret
stc
jnp
test
xor
popa
out
dec
lds
in
xor
mov
cmp
jmp
in
fdivl
adc
and
or
sahf
cld
aas
aad
xchg
pop
sahf
pop
xor
cltd
mov
xchg
mov
cmp
jmp
or
mov
add
and
and
add
gs
xor
pusha
dec
repz
outsl
and
add
mull
cmp
inc
jge
pop
sbb
loop
cmpsb
mov
sbb
movsl
ljmp
dec
pop
mov
shrb
sti
mov
int
push
fdivr
push
clc
mov
call
or
lock
adc
add
js
adc
push
roll
mov
addr16
pusha
xor
push
mov
sbb
call
or
mov
ficoml
loope
test
jne
test
or
pop
xchg
mov
push
fdivl
mulb
xchg
imul
lahf
dec
jb
mov
stos
sub
and
je
bound
cs
shll
fwait
leave
lahf
add
dec
dec
dec
mov
mov
outsl
or
into
je
sbb
fdivrl
movsl
and
imul
imul
mov
arpl
sub
fidivrl
mov
and
and
lahf
into
stos
dec
les
fldl
jns
pop
mov
fstpt
movsl
repnz
push
mov
test
sbb
push
xchg
int
shlb
push
iret
or
xor
cld
hlt
cmp
adc
pop
sbb
jbe
push
lods
cltd
sbb
jno
enter
shrl
mov
xorb
test
add
dec
jae
xor
daa
xchg
inc
imul
push
loop
loop
mov
sahf
data16
or
jns
out
dec
ret
lahf
push
scas
inc
stos
push
push
sub
js
addb
mov
shrl
push
leave
mov
stos
in
xchg
out
jmp
out
fnstcw
mov
outsb
xchg
mov
xor
sarl
fcmovne
push
cwtl
mov
fnstcw
in
aas
pop
rorb
fs
xchg
fistpl
dec
inc
std
adc
ds
jle
cld
and
scas
and
rcr
nop
and
xchg
xchg
daa
fsubrl
cli
scas
add
sti
cmp
or
in
mov
pavgw
movsb
xor
push
push
outsb
mov
je
hlt
pop
mov
adc
pop
ljmp
mov
ja
es
pop
inc
into
shrb
lea
into
in
xor
mov
mov
pop
movsb
jnp
adc
popa
popl
cwtl
mov
xor
repnz
mov
xchg
ljmp
jge
xor
pop
pop
xchg
lods
mov
jecxz
fnstsw
or
rcrl
js
jo
leave
mov
cld
test
sub
rorb
jecxz
add
lods
shll
das
fimull
push
mov
xchg
sub
jno
fsts
push
add
sbb
pushf
inc
xorl
jnp
jnp
pop
jge
mov
inc
fdivrs
decb
push
fisubrs
lcall
mov
loope
fldenv
pop
pop
inc
pushf
shr
daa
cmc
scas
and
sbbl
and
inc
add
sbb
sbb
in
stos
cmp
cmp
inc
mov
xor
mov
rcrb
xor
inc
sbb
sub
aaa
ljmp
add
jge
fstpl
stos
fsqrt
shlb
xlat
sub
jmp
adc
cld
jp
adc
inc
jle
inc
cmp
fsubs
vpsrlq
sub
pop
fcoml
add
jnp
mov
push
jecxz
push
jl
test
add
stos
fidivrs
pop
pop
call
negl
les
lret
xor
popf
and
adc
repnz
xchg
jle
mov
dec
adc
ja
repnz
mov
mov
cmp
cmp
test
xchg
add
inc
gs
jge
outsb
lds
xchg
pop
ret
or
leave
out
iret
cwtl
std
mov
push
out
outsl
adc
sub
ljmp
jle
mov
xchg
mov
iret
jns
mov
dec
out
lea
outsl
jae
cmp
sbb
jo
gs
sub
push
iret
fcoms
xchg
mov
jnp
xchg
jns
repz
pushf
mov
test
cwtl
bnd
mov
lahf
jge
inc
mov
jge
rcrb
imul
sub
add
pop
pop
jne
cmp
mov
rclb
mov
test
scas
arpl
cltd
pop
mov
ret
cwtl
adc
dec
test
jno
daa
pop
addr16
cmpsl
lret
mov
es
cmp
xchg
add
push
bound
js,pn
jge
sbb
jmp
jle
cmp
flds
cmp
jb
xchg
lcall
mov
bound
and
adc
mov
pop
inc
daa
shll
push
sub
out
cmp
repnz
jg
mov
iret
pop
push
leave
xchg
int
cs
dec
rcr
push
fmull
or
adc
div
pop
dec
pushf
jns
out
mov
sbb
or
xor
lds
repnz
dec
mov
test
nop
outsb
imul
das
cmp
out
insl
mov
mov
jnp
shlb
mov
push
rcrb
cmpsl
mov
imul
add
jecxz
push
int3
xor
int
mov
sahf
dec
icebp
ret
xor
push
lods
or
or
push
das
mov
jge
dec
fsubs
jmp
lods
xchg
adc
jmp
hlt
jmp
or
pop
sub
shrl
arpl
scas
fsubs
pop
jno
in
leavew
xchg
jne
mov
aam
adc
mov
call
je
mov
fbstp
add
jae
inc
rcrb
pushf
xchg
add
out
imul
xorl
loop
lcall
mov
ljmp
fwait
call
cmpsl
xor
mov
mov
loopne
inc
je
repnz
out
lahf
in
and
lods
enter
lret
stos
mov
sbb
sbb
sub
stos
pop
xor
or
cmp
enter
and
fldcw
add
push
pushf
or
pop
lock
es
ds
push
and
sahf
dec
sub
fwait
lock
pushf
add
in
loop
or
notb
popf
movsb
adc
in
jmp
inc
ret
hlt
imul
dec
fdivr
mov
inc
fmuls
pop
in
movlps
pop
dec
iret
inc
jecxz
sbb
sahf
sbb
iret
mov
rolb
inc
aam
mov
mov
and
dec
jnp,pn
jo
pop
pop
data16
or
inc
aaa
xchg
rcrb
ret
xor
push
sbbb
push
nop
jge
xlat
pop
inc
mov
aas
jb
gs
dec
test
push
movsl
scas
jo
cmpsb
sbb
repnz
xchg
push
inc
inc
fchs
push
adc
jle
cmp
mov
mov
cmc
sbb
arpl
xor
in
inc
nop
xchg
ret
xchg
std
xchg
orl
scas
mov
in
sub
adc
pop
pop
jg
xor
cmp
push
dec
sbb
movsb
xchg
add
xor
mov
and
pop
jo
mov
lods
dec
and
push
pusha
hlt
sub
jecxz
inc
and
cmp
bswap
add
add
or
mov
push
sub
add
xor
sub
or
fwait
mov
push
push
es
lret
add
lret
insl
out
stos
cmc
cmp
sub
cmp
lds
stos
dec
das
or
add
push
icebp
cmp
jmp
out
pop
adc
or
and
xchg
gs
mov
scas
loopne
into
and
inc
adc
leave
xchg
pop
mov
xor
fnstenv
aas
insb
sbb
mov
adc
sti
outsl
add
inc
ja
add
loope
pop
ret
mov
sbb
imul
lock
push
ret
and
push
sahf
ror
arpl
cmp
jle
xchg
sbb
push
sub
enter
push
das
push
push
mov
sbb
inc
popa
ret
dec
pop
push
aaa
mov
pop
imul
push
add
xchg
in
cmp
mov
or
movsb
mov
mov
sbb
je
stos
les
jp
inc
inc
cmp
cld
add
into
hlt
xchg
mov
dec
mov
daa
dec
pop
out
xchg
xor
xchg
pop
adc
adc
aas
outsl
push
addr16
out
bound
mov
roll
sti
in
jp
pop
jp
jbe
in
push
ficompl
add
pop
xor
push
divl
push
and
pop
mov
repz
sarl
insb
pop
add
repnz
aaa
add
xor
je
adc
movsl
pushl
shrb
adc
cmpsb
sub
scas
mov
in
cld
add
add
inc
cs
xchg
shll
into
pop
fiadds
sub
insb
push
xor
iret
jge
push
sbb
cmp
sbb
push
jg
pusha
testl
je
cltd
push
aam
ljmp
push
xchg
sbb
jnp
cmpsb
inc
aam
mov
scas
test
sar
mov
cmp
xor
pop
scas
adc
lds
outsb
cmpsl
inc
lods
sbb
sahf
js
arpl
mov
movsl
push
fwait
cmp
xchg
cmp
leave
push
push
push
inc
pop
and
jge
loope
lahf
cmpb
cmpb
dec
or
fwait
sti
mov
les
inc
lret
push
jnp
pop
popa
inc
fsubrs
lret
push
mov
xor
popw
fsubs
movsl
sahf
cmpsl
add
mov
aaa
test
mov
inc
popf
pop
cmp
gs
test
pop
js
es
sub
adc
jmp
imul
mov
jno
mov
mov
fiadds
inc
scas
fsubrp
fwait
cwtl
and
int
mov
dec
gs
pop
sub
xchg
rorb
daa
das
mov
dec
xor
mov
jno
ret
jmp
les
mov
push
out
add
int
mov
and
sub
orb
es
sarb
mov
pop
lea
pop
hlt
int3
inc
push
std
push
lahf
test
out
jle
dec
jnp
dec
out
add
jp
mov
cmp
notb
adc
pop
lahf
int3
pop
jns
pop
int3
sbbl
ficompl
icebp
add
test
cmp
insl
mov
inc
push
ds
sbb
jmp
data16
cmp
aas
mov
test
lret
iret
rcll
lea
shlb
xchg
inc
stos
rcll
mov
jl
sbb
jo
push
add
pushf
es
pop
mov
or
stos
lea
add
jne
imul
mov
or
daa
das
mov
stos
test
sbb
aas
and
scas
movsl
jp
mov
cmp
movsb
jg
mov
leave
pop
inc
mov
dec
lret
or
stos
xor
mov
out
push
add
jl
inc
xchg
or
jecxz
es
cmp
aas
push
xchg
mov
add
cs
xchg
pop
cmpsb
push
sahf
ret
andl
negb
fsubl
adc
xchg
pop
pop
rclb
icebp
andb
sarl
sbb
repz
adc
xorl
cmp
mov
shrl
add
jb,pt
pop
lahf
sub
mov
pushf
pop
pop
pop
aad
push
mov
scas
adc
pop
cpuid
pop
push
and
sub
cmp
add
and
mov
pop
shl
fists
jl
add
pop
xor
test
jmp
mov
or
mov
mov
stc
test
mov
cmp
sub
imul
fidivrs
test
mov
and
push
lret
inc
cld
sub
mov
rorl
xor
ucomiss
testl
in
mov
jecxz
lods
test
loopne
es
in
cmp
pushf
pop
sbb
or
jp
in
ja
insb
out
cmp
push
daa
push
sti
stos
cld
in
xchg
andb
xchg
out
jne
in
lret
cmp
xchg
xchg
fstl
sbb
test
add
mull
leave
mov
xchg
data16
cld
pop
lods
jg
pmaddwd
addr16
push
lock
inc
mov
cmc
mov
fbld
jge
xor
pop
jecxz
imul
cmp
or
and
push
adc
ja
and
push
rolb
mov
bound
pop
cltd
adc
xlat
mov
popf
lahf
xor
sbb
cwtl
divl
std
stc
lcall
call
notl
cmp
mov
outsl
mov
pushf
xchg
fiaddl
fwait
mov
aas
repz
jne
dec
inc
push
xchg
cmpl
sub
push
rolb
sub
inc
cmpl
inc
push
mov
sub
in
out
inc
pushf
lret
repz
jmp
push
inc
outsb
sbb
cmp
lcall
call
or
and
loope
fwait
jl
sti
stc
repz
outsb
push
int3
dec
jno
xchg
mov
sub
icebp
lods
mov
jae
inc
dec
out
filds
add
fdivl
jge
xchg
mov
mov
mov
aaa
cli
cltd
pop
xor
cmpsb
cli
sub
pop
sbb
pop
int
insb
adc
int3
or
or
repz
sahf
jge
or
mov
xchg
mov
shll
push
shll
pop
cmpsb
or
push
jae
pusha
std
icebp
outsb
xchg
pop
outsb
xchg
jmp
decb
dec
sub
or
shlb
in
cmp
add
push
inc
adc
pop
cmp
aad
push
aas
loop
fcmovnu
arpl
out
repz
ret
loope
adc
mov
xchg
mov
iret
xchg
jns
xor
cmp
jb
or
dec
pusha
insb
gs
int
mov
cmpb
pushf
ficomps
and
push
out
cwtl
lock
popa
cwtl
or
add
xchg
call
call
adc
or
inc
xchg
push
incl
shll
fldl
stos
insl
scas
test
mov
sub
inc
mov
fimull
add
fldt
or
rorb
gs
jns
add
stos
dec
adc
imul
punpckldq
adc
insb
popa
mull
add
aaa
inc
jae
mov
push
push
and
pop
in
pop
loop
test
and
mov
pusha
pop
int3
sbb
mov
mov
pop
pop
andb
loop
inc
sahf
xlat
adc
nop
dec
sub
je
mov
insb
push
mov
js
mov
scas
cmp
mov
inc
bound
pop
xor
xchg
mov
jle
iret
iret
lcall
ret
loope
inc
and
lds
movsb
int3
mov
cwtl
xor
fcomps
jne
fxch
aad
cmp
lret
faddp
pop
test
popa
jmp
mov
sbb
aas
in
stc
cmpsb
jle
sub
and
add
fistpll
cmp
sbb
sub
inc
cmp
cmp
mov
add
enter
fmul
adc
xor
test
pop
in
pop
pop
out
rcrl
mov
pop
xchg
inc
cmc
js
mov
sar
inc
xor
ficoms
test
outsl
call
sbb
in
mov
jp
xchg
test
fs
push
addr16
and
mov
mov
movb
ret
test
mov
ret
mov
incb
lcall
rcr
test
sub
mov
mov
in
lods
fisubl
movnti
jnp
sbb
push
cmp
test
push
lahf
inc
bound
cmpsb
inc
mov
aas
outsb
mov
ljmp
movsl
out
dec
fildll
mov
aam
inc
pop
lds
push
xor
pop
lea
add
dec
fstp
lret
dec
fsubrs
sbb
shl
std
sti
mov
and
js
shrl
in
fstpl
push
adc
lods
xlat
andl
and
inc
aam
cmp
mov
cmpb
push
sbb
cmp
shlb
in
or
and
cmpsb
mov
nop
loopne
std
add
cld
les
mov
mov
sbb
mov
push
mov
jmp
xchg
in
inc
sbb
jbe
rclb
dec
arpl
pop
or
cmp
fadds
idivl
ret
inc
fadd
out
mov
sti
pop
or
xchg
cmc
jbe
push
adc
mov
inc
xchg
push
push
adc
mov
int
hlt
lds
in
arpl
inc
mov
add
dec
je
add
mov
sub
add
fmuls
mov
jae
mov
mov
mov
jnp
leave
cmp
xchg
xor
fdivr
test
dec
cmp
sti
into
push
sarl
nop
jg
xchg
cli
in
lret
jb
rcrb
and
stos
mov
imul
icebp
lret
loope
add
inc
xchg
in
out
or
ficoms
inc
mov
add
data16
sbb
pop
push
repnz
dec
cld
aam
adcb
aad
or
hlt
insl
xchg
push
loop
inc
adc
xchg
lea
gs
mov
insl
data16
mov
inc
jge
inc
test
cmp
sbb
cmp
imul
mov
call
fisubrl
shr
arpl
pop
pop
mov
sbb
pop
test
xor
test
into
scas
gs
xchg
add
lods
xor
ret
inc
cmp
repnz
mov
jne
shufps
jl
imul
mov
pop
or
outsb
test
jmp
adc
pop
or
jnp
lea
mov
movsl
adc
jp
xlat
pop
mov
pop
adc
fcoml
repnz
mov
cmc
out
sti
test
aas
xchg
add
pusha
xor
jecxz
mov
jle
shlb
sbb
mov
lds
daa
lahf
mov
cmp
mov
ljmp
ficompl
pusha
addr16
sti
insb
das
out
or
cmp
mul
jle
push
push
insb
ljmp
enter
sub
hlt
xchg
rclb
out
sbb
sub
or
xor
pop
lods
mov
aam
mov
or
ja
or
push
pusha
incl
popa
adc
test
push
divl
add
ret
and
and
fimuls
rclb
shll
in
rorl
mov
cmpl
mov
jge
add
cmp
lret
paddw
aaa
int3
jmp
sub
mov
pop
pop
mov
adc
shrl
and
or
testb
inc
mov
xlat
rcll
xor
inc
mov
jmp
aad
pop
dec
inc
xor
std
les
push
mov
psubsb
imul
adc
les
xchg
add
aam
test
in
or
test
rol
push
les
mov
imul
cmp
xor
dec
mov
mov
lods
xchg
mov
jbe
leave
fadd
fistps
loop
or
movsb
addr16
cltd
jg
adc
aas
pop
in
call
mov
shr
mov
push
adc
mov
insl
jb
and
jne
decl
shl
add
or
out
aad
aas
sub
xor
cld
pop
push
push
call
aaa
ja
xor
mov
mov
dec
sbb
sbb
decb
pusha
add
push
lret
je
mov
push
mov
sbb
fistps
sub
out
rcrl
sarb
out
mov
pop
jae
xchg
push
fsubl
sub
or
and
jb
in
cmp
test
dec
sub
dec
push
and
popa
test
test
insl
mov
inc
xchg
mov
jb
xchg
sbb
je
and
inc
mov
mov
sahf
xor
cmp
stc
aas
or
inc
sub
mov
cli
out
inc
pop
jb
jno
hlt
shrd
pop
push
mov
push
xor
jne
xor
cmp
mov
pop
mov
pusha
fsubs
and
clc
dec
xchg
jae
xor
pop
cmp
pushl
into
push
pop
fsubl
jp
push
shrb
sbb
cmp
inc
les
and
mov
xchg
int3
mov
inc
mov
jo
add
int3
push
ficoms
inc
iret
xchg
outsb
inc
ja
outsl
into
jge
shrb
sub
or
daa
mov
hlt
xchg
adc
push
jnp
outsb
mov
mov
and
jne
fwait
mov
subl
loopne
leave
aas
xor
push
dec
out
aaa
sbb
lods
add
das
mov
pop
loop
mov
mov
arpl
jmp
adc
jb
xchg
popf
ss
out
xlat
mov
sub
mov
xor
cmc
fprem
mov
pop
js
es
lods
aam
add
push
push
ljmp
mov
in
xchg
xor
daa
push
adc
out
popf
inc
lock
mov
xchg
stc
mov
mov
shll
repz
xchg
js
sbbl
push
shll
push
outsl
pop
cltd
fcomps
push
popa
dec
or
sti
fs
jno
push
das
inc
mov
gs
scas
adc
data16
in
les
mov
imul
stos
scas
sahf
mov
imul
sbb
imul
sub
repz
sahf
fdiv
xchg
pop
int3
cli
out
mov
dec
jg
adc
cmp
mov
mov
leave
cmc
je
pop
sti
mov
incl
cmpsl
dec
pop
sbbb
test
cli
sbb
and
mov
lret
dec
call
jle
sub
inc
xor
sbb
or
mov
xor
xchg
aad
cmp
outsl
pop
sub
xchg
push
lock
aaa
and
stos
popa
inc
mov
cmpsb
xor
dec
cmp
pop
and
cmp
xchg
repz
mov
pop
jns
or
lock
sub
add
mov
pop
call
cmp
out
mov
daa
mov
jg
scas
fcmovb
fildll
dec
aaa
sbb
pop
lea
inc
cmpsl
xor
xchg
es
popf
adc
pop
rcrb
cmp
push
jmp
loop
or
fwait
popa
mov
or
iret
jp
mov
pop
fstenv
cmc
dec
add
cld
sbb
inc
dec
inc
inc
pop
dec
mov
iret
and
out
mov
orl
mov
out
and
cmc
lods
in
sbb
inc
pop
in
mov
testl
add
inc
loopne
pop
or
je
pop
jbe
sub
jmp
mov
mov
cmp
mov
pusha
inc
jmp
pusha
pop
or
mov
insb
jnp
mov
cmp
out
mov
shlb
sbb
fwait
sub
or
imul
out
test
pop
xrelease
xorl
imul
movsl
test
jge
cmpsl
xchg
nop
dec
inc
xor
shlb
mov
dec
cmp
mov
mov
loopne
int
lahf
dec
sbb
sahf
js
mov
mov
cs
pop
inc
jb
fs
add
pop
fwait
jb
pop
enter
jle
out
cld
xchg
repz
data16
xchg
lds
mov
test
test
leave
pop
iret
jno,pt
int
addr16
std
stos
cld
ss
fsubs
sub
test
push
dec
dec
mov
push
mov
dec
mov
orb
pop
insl
cmp
cmpb
jmp
bound
lock
aas
in
cmpsb
imul
iret
andb
dec
push
mov
scas
xchg
dec
lcall
adc
xchg
push
mov
in
pop
popf
add
push
fildl
flds
pop
mov
sbb
pop
push
ja
inc
fisubrl
out
sub
and
push
loope
adc
mov
cli
or
mov
xlat
xchg
mov
mov
loopne
je
mov
cmpsb
scas
pop
rolb
aaa
jl
bound
jp
jb
outsb
dec
iret
fisubrs
gs
inc
lret
mov
out
mov
inc
insl
test
mov
xor
and
push
and
jne
adc
sub
add
fstpl
repnz
dec
xor
div
neg
sbb
das
cmc
scas
dec
mov
cld
call
les
pop
jnp
mov
inc
mov
clc
jae
cmpsb
adc
repz
out
add
mov
pop
and
movsl
adc
adc
dec
jecxz
aas
add
test
cmpsb
jo
loope
mov
jo
movsb
addb
xchg
or
je
testl
aaa
push
mov
pushf
fldenv
hlt
dec
jne
dec
pop
mov
xor
jg
mov
dec
mov
shlb
xor
fcoms
fcomip
cmp
jno
pop
xchg
flds
cmp
popf
pop
sti
ss
out
iret
aad
xchg
lea
adc
aam
xor
mov
and
xor
in
xlat
or
xor
and
jns
shll
mov
cmp
mov
mov
pop
sbb
inc
mov
lea
incb
pop
cmp
or
pop
sbb
lcall
adc
jp
mov
inc
push
mov
lret
fisttps
adc
mov
and
scas
cmc
mov
or
das
or
jp
insl
add
mov
pop
cmp
ss
pop
cmp
imul
jmp
dec
pushf
dec
cmp
mov
or
jb
pushf
popf
in
lahf
sub
cmp
pop
jle
les
add
adc
aam
sub
mov
adc
clc
xchg
clc
push
cmp
cltd
es
repnz
push
pop
jb
jmp
xor
subl
arpl
test
lea
stc
sbb
outsl
jbe
jbe
xchg
mov
aaa
lret
and
test
jmp
rcrl
fnstcw
outsb
sbbb
scas
call
daa
mov
cmp
pop
std
cmp
adc
and
stos
xor
lock
or
out
inc
push
nop
repz
mov
push
seta
mov
test
cs
pusha
inc
pop
xor
stos
mov
push
dec
cmp
call
cmp
dec
sbb
jp
aas
and
insl
fdivl
out
jmp
sub
fnsave
xchg
add
xor
movsb
mov
xor
lret
jl
jbe
incb
pop
jbe
push
lods
daa
or
pop
cmpsl
outsb
jbe
jecxz
ljmp
sub
dec
fwait
fs
call
stos
cmp
push
fildll
sub
mov
and
xor
add
and
xor
fstps
pop
xlat
shrd
or
movsb
adc
mov
les
adc
pop
mov
mov
in
scas
subl
ljmp
jle
movl
mov
loop
xchg
add
je
pusha
xor
ss
jae
test
outsb
scas
into
lret
cmp
mov
and
daa
push
aaa
jns
xchg
in
psubb
push
pop
mov
mov
or
scas
mov
mov
push
jge
xchg
adc
pusha
xlat
xlat
addb
mov
stos
jle
mov
push
scas
adc
mov
push
and
cmp
pop
xchg
aaa
call
xchg
jle
loop
icebp
cmpsl
dec
rorl
or
sub
flds
or
movsl
leave
daa
or
sti
mov
shrl
sub
add
ljmp
movsl
test
out
jne
fs
testl
bound
mov
pop
outsb
sub
shlb
adc
dec
shrl
sbb
cmp
or
mov
repz
test
lcall
stos
nop
xlat
ret
push
lods
stc
sahf
mov
into
mov
jns
mov
jle
mov
or
paddsb
dec
adc
test
ljmp
inc
pop
mov
xchg
and
loope
insb
inc
add
lahf
andb
repz
cmp
push
add
xor
insl
and
scas
daa
call
or
dec
mov
testl
jle
dec
push
pop
fiadds
pop
fs
int3
sub
cmp
mov
sbb
xchg
adc
xor
dec
mov
mov
scas
into
imul
jle
push
jne
lods
out
sahf
or
mov
fwait
lahf
adc
xchg
scas
insb
cmpsb
mov
jge
jno
mov
sub
and
hlt
cmc
bound
nop
cmp
enter
ret
xchg
xchg
push
inc
clc
xchg
sub
xor
loopne
pop
out
jns
jb
rcr
hlt
push
mov
and
xor
push
sti
in
push
fnstsw
out
int3
mov
dec
and
pop
and
cmp
les
mov
mov
sbb
imul
pop
mov
dec
test
xchg
shl
pop
push
sbb
dec
insl
ss
movsl
out
sub
jo
pop
xlat
cmp
ja
xor
jl
arpl
popa
lahf
leave
pop
push
pop
xchg
outsl
jl
cltd
mov
add
and
dec
xor
pmulhw
push
or
movsb
pop
jns
lods
sbb
lods
xchg
pop
imul
or
xor
rcrb
mov
add
cmp
in
test
xchg
mov
and
jmp
out
pop
stos
leave
jns
dec
shrl
or
or
add
pop
sub
out
mov
stc
jb
jb
js
cmp
xor
sub
inc
int
movsl
icebp
sub
lahf
push
push
notb
repnz
aaa
jno
sti
inc
scas
xlat
mulb
flds
xchg
lret
rcrb
sub
ret
pop
mov
out
or
sub
pushf
push
xchg
sbb
cwtl
sub
adc
xor
sbb
mov
pshufw
cmp
push
pop
dec
pusha
ljmp
rorl
repnz
cld
xor
adc
cmp
cltd
mov
xor
pushf
push
pop
adc
and
jns
aad
and
clc
outsb
fsubr
rorl
in
jg
movsl
mov
pushf
in
inc
popf
nop
xchg
lds
mov
sahf
fucomi
loope
sub
insb
repnz
ja
push
sbb
xor
add
cmp
push
jecxz
shr
ja
add
popa
cmp
mov
push
es
les
std
popf
lds
mov
jecxz
data16
movl
push
test
and
popa
cmc
mov
push
lds
mov
outsl
mov
push
push
sub
add
jl
push
sub
stos
sbb
insb
pop
outsl
mov
lock
mov
insl
es
push
ljmp
stc
or
cmp
cmp
mov
ja
mov
into
dec
mov
dec
cmpsl
adc
push
xor
xchg
add
sbb
xchg
cltd
mov
imul
jmp
out
mov
imul
insb
push
sub
adc
int
mov
mov
dec
sbb
or
in
pop
sbb
mov
bound
dec
jns
or
xchg
fmuls
jmp
out
je
cwtl
mov
enter
dec
pop
jno
clc
pusha
mov
or
jl
xchg
lcall
and
pop
out
dec
pop
dec
dec
add
daa
sarb
loopne
stc
enter
rclb
dec
or
adc
fwait
xchg
test
int
pop
mov
in
jmp
sbb
sub
rcrb
lea
add
mov
push
or
mov
jecxz
push
in
lds
dec
push
aam
jmp
xchg
xchg
lds
in
ret
inc
stos
add
test
cmp
lret
pop
jmp
lods
in
cmp
and
inc
xchg
dec
mov
fstl
adc
and
mov
fwait
sub
lods
dec
rclb
push
mov
dec
test
lret
or
adc
aaa
xchg
sahf
inc
stos
xlat
cli
mov
imul
mov
fwait
cmp
dec
imul
orb
adc
pop
inc
xchg
iret
dec
mov
cmpb
xlat
imul
outsl
mov
sbb
add
cmp
xchg
xchg
fldcw
push
jbe,pn
and
shr
testb
lahf
push
lea
scas
adc
rclb
dec
les
jbe
mov
fs
cmpsl
xor
push
lret
int3
add
mov
or
mov
fstpl
lret
clc
cmp
jb
jb
mov
jg
sub
push
sub
sub
lret
pop
rorl
jge
mov
sti
idivb
cmp
pop
popa
jl
mov
pop
push
adc
mov
jns
dec
mov
or
mov
sti
mov
sub
xchg
pop
mov
add
popf
xchg
cmp
mov
or
xor
cmpsb
arpl
mov
cs
dec
fisubrl
xor
push
dec
jle
loop
xorl
test
out
int
adc
add
mov
imul
sti
mov
lea
mov
cmpl
or
imul
and
xchg
add
inc
push
loope
push
lret
in
loop
mov
adc
jle
add
dec
and
adc
xor
test
sub
insl
lcall
outsl
xlat
sbb
test
xor
jecxz
ja
push
jb
pmaxsw
loop
mov
gs
push
jmp
mov
loope
ss
cwtl
xor
jle
ja
clc
add
jnp
jge
dec
inc
mov
mov
pop
into
add
jp
push
mov
xchg
rcrl
or
mov
test
cmp
inc
orb
aad
xchg
xchg
scas
pop
sub
xchg
mov
test
leave
mov
and
movsl
sub
orl
or
fistpll
in
jbe
or
inc
decl
mov
xor
aaa
aam
cli
rolb
scas
jp
cmpsb
ljmp
movb
or
mov
imul
or
shll
je
xor
jo
leave
cltd
sbb
addr16
ja
lods
push
mov
out
sbb
aad
mov
jo
dec
cmp
jp
pop
es
repz
sub
cmpsl
mov
sbb
and
fisttpll
cmc
cmpsl
int3
or
hlt
and
push
shll
mov
sub
sbbb
fnstenv
cmpsl
imul
mov
push
lcall
bound
and
and
xchg
dec
push
inc
and
or
bound
addb
sub
cwtl
and
sub
addb
cmp
int
int3
rcrb
out
orb
les
das
sbb
fstpt
add
out
loop
hlt
xor
sub
insl
cwtl
mov
rcll
sub
stos
xchg
adc
adcl
sub
inc
out
ljmp
jae
pop
sarl
lods
fldenv
or
or
mov
imul
movsb
push
fs
scas
call
addl
cli
repz
sbb
jbe
mov
sbb
lcall
pop
adc
push
xchg
test
xlat
jb
data16
or
sbb
jp
enter
jp
addb
out
add
mov
sub
data16
jnp
inc
mov
addps
mov
dec
dec
xchg
jmp
cmp
in
jl
popf
inc
sbb
das
cmp
hlt
les
dec
xchg
push
mov
iret
pop
lods
sti
out
call
or
cld
mov
sub
js
gs
xchg
test
std
jno
jmp
shll
mov
imul
mov
jb
pop
jb
xlat
adc
mov
cmp
fcoml
lock
mov
orl
jae
sub
iret
aas
ret
int3
in
mov
mov
xchg
sub
dec
xchg
or
repnz
out
loope
sub
enter
cmc
cmp
push
in
std
xchg
sub
call
fisubl
pop
scas
pop
adc
sub
int3
mov
cmp
ds
cmp
mov
ds
pusha
popf
shl
sbb
ja
fiaddl
add
ss
mull
sahf
arpl
inc
ret
iret
clc
inc
in
mov
push
ja
sbb
xor
pop
mov
ret
gs
outsl
mov
subl
in
mov
and
dec
sub
jne
fwait
dec
adc
or
movups
jge
insl
iret
fnsave
inc
cmp
fs
lcall
mov
cs
fisubs
pop
adc
out
push
fwait
aas
push
pop
mov
stos
fldl2t
jae
jecxz
push
les
test
sub
cli
leave
sub
mov
int3
push
inc
jle
pop
and
pop
inc
push
pop
cwtl
sub
push
testb
jae
fstpt
and
loope
out
sti
scas
dec
lret
shll
movsl
xor
dec
andb
xor
xchg
out
loop
push
pop
xor
jo
hlt
ljmp
jnp
je
dec
jl
inc
test
fstps
cltd
call
or
xor
mov
mov
out
mov
movsb
xor
call
sbb
in
and
mov
lea
push
ret
inc
pop
fistpl
lahf
mov
fnsave
mov
push
lods
adc
bound
pop
repnz
lods
push
sub
out
xor
push
aad
ret
cmpps
push
or
bnd
jno
std
and
jg
dec
testb
xor
mov
movsl
cmp
inc
sub
push
dec
sbb
clc
mov
sbb
xor
pushf
jecxz
sbb
in
repnz
add
push
andb
xor
ljmp
mov
mov
xor
popa
cmp
sub
inc
cli
mov
subb
cmp
fwait
add
rol
dec
mov
fwait
inc
jl
imul
into
push
inc
scas
mov
xchg
push
mov
or
and
fs
or
dec
aas
lret
sahf
clc
scas
cmp
xchg
loope
test
jne
inc
scas
test
test
stos
cmp
mov
icebp
jmp
xchg
fsubs
in
lret
fsubr
mov
push
movzwl
int
sub
jecxz
mov
scas
push
cli
push
jbe
cli
pushf
lret
repz
arpl
or
mov
data16
iret
pop
rorb
jbe
outsl
lea
popa
sbb
mov
pop
notb
mov
push
into
or
xor
out
rcrb
pop
dec
ret
xchg
pop
int
inc
cs
leave
jnp
inc
mov
popa
loopne
adc
data16
mov
pop
icebp
mov
cli
cmpsb
add
xchg
pop
popf
es
push
ret
and
fwait
outsl
cmp
insl
shl
sbb
dec
jmp
push
inc
xor
dec
pusha
push
stos
adc
inc
mov
xchg
outsb
jns
cmp
sbb
and
adc
adc
in
inc
push
stos
call
popa
and
add
cs
jns
mov
cmp
or
mov
aad
or
scas
je
jge
out
cmp
test
pusha
adc
adc
mulb
xor
gs
clc
cmc
jno
jmp
mov
sub
in
mov
cmp
bound
aas
ja
sbb
shrb
fcompl
xor
mov
das
cmp
push
pop
fimuls
fdivrl
mov
imul
adc
sbb
jns
dec
and
lcall
sub
adcl
test
lods
add
pop
aad
xchg
jl
mov
fldl
cmp
cmp
fnsave
push
pop
fdivp
out
mov
dec
gs
pusha
or
xchg
or
adc
nop
pop
add
mov
das
jp
dec
pop
mov
sbb
mov
fwait
int3
and
inc
pop
adc
xor
sbb
lods
cmpsl
push
stc
ss
jns
loopne
jb
xor
push
pop
lods
jo
movsb
xor
dec
test
fnstsw
dec
andb
hlt
lcall
rorl
in
jge
add
xchg
xor
cmp
orl
mov
mov
sub
jns
enter
jmp
loopne
or
xchg
xor
mov
push
lret
enter
aad
jl
mov
nop
popf
pop
test
and
mov
adc
cli
xor
add
cmp
icebp
test
mov
in
add
lea
fwait
aam
adc
mov
xchg
in
inc
pop
out
out
lea
mov
sbb
movq2dq
cmpsb
mov
test
mov
jo
inc
sbb
dec
rorl
adc
cmpl
dec
pop
out
push
int3
push
and
sbb
mov
adc
arpl
cmp
fstpl
pop
popa
mov
xchg
lods
xchg
cmp
mov
or
int
test
add
pop
xor
faddl
dec
sbb
rolb
out
cmp
push
jg
inc
aam
mov
scas
aaa
enter
movsl
cmc
out
aas
jle
iret
cli
xchg
adc
pop
stc
inc
arpl
rcrb
jl
enter
cmp
in
or
jp
aam
jae
xor
mov
cwtl
pop
call
jne
mov
mov
cmpsb
pop
outsl
js
aam
call
cs
inc
in
sbbb
sub
xchg
fwait
ja
inc
sar
gs
or
cltd
inc
out
lds
cmpsb
add
icebp
cmp
push
roll
fwait
push
mov
add
test
fwait
cmp
add
out
sbb
mov
inc
orl
fs
fadds
dec
sub
mov
pop
rclb
pop
pusha
call
or
gs
xchg
sub
fiaddl
sub
mov
jbe
sub
rorb
mov
inc
sbb
pop
xchg
cmp
test
sbb
sbb
clc
popf
mov
mov
or
sub
ja
push
insl
aad
cmp
pop
fldenv
push
rol
lods
sub
lds
jg
jbe
jns
xorb
ss
in
add
or
or
pushf
mov
add
dec
outsb
sub
push
imul
pop
jmp
int3
mov
jno
adc
push
sub
cmp
hlt
ss
or
dec
fwait
mov
test
xlat
cltd
fnstcw
mull
sbb
cmp
sbb
ret
scas
fisttpl
jo
jmp
and
or
pusha
shll
je
mov
pop
adc
inc
ss
jns
movsl
hlt
jno
aam
mov
and
xlat
xor
fnstcw
xchg
shll
rclb
add
popw
shll
movsb
popa
sahf
lds
xchg
fcompp
fsubs
test
in
ss
sub
fcmove
loopne
or
inc
fimuls
xor
cmp
sbb
sbb
mov
dec
test
xchg
daa
xor
fldenv
cmp
mov
inc
sbbb
adcl
inc
xchg
inc
sub
sbb
shlb
mov
mov
lahf
fucomip
cmc
jge
cmpl
les
push
test
adc
sbb
mov
sbb
std
mov
fidivl
shl
imul
daa
fcoml
popf
mov
movsl
enter
in
xlat
popa
rorl
out
adc
cmp
mov
cli
pop
xchg
inc
mov
xor
lahf
ss
add
or
inc
movsb
test
testl
dec
push
mov
lea
repz
lret
mov
cmp
into
and
adc
pop
mov
mov
and
decb
jecxz
arpl
icebp
pop
or
mov
jmp
push
pop
mov
repz
push
and
repz
mov
dec
lret
pop
sub
stos
mov
je
in
and
sub
nop
testb
data16
aad
les
iret
stos
mov
add
mov
dec
sub
aaa
das
imul
fmul
lods
std
lcall
aaa
roll
ror
mov
and
aam
leave
arpl
pop
sbb
add
or
int
mov
and
or
inc
pop
fidivs
in
sub
shr
sub
inc
pop
andb
jbe
push
lods
insl
cmpsl
shrb
cmc
lret
in
pop
jns
sbb
aam
jnp
xchg
sub
loopne
test
push
cmp
loop
cmpsb
inc
cs
mov
push
pop
jo
fistpll
scas
movsb
or
int
push
loop
enter
dec
cmc
mov
pop
mov
test
dec
jne
xchg
or
test
jle
popa
fdivrs
lahf
push
cmp
mov
mov
outsl
lods
sbb
jne
inc
loopne
sub
fistpl
push
inc
icebp
pop
cmp
popa
cmp
push
pop
push
xchg
ljmp
rcrl
and
scas
je
xor
and
sti
into
jb
push
aad
mov
dec
cli
adc
mov
shll
jno
jp
xor
and
daa
sbb
or
pop
mov
outsl
jp
in
push
and
and
out
nop
mull
pop
daa
or
repz
ljmp
mov
stos
push
fcmovu
mov
addr16
mov
pop
xchg
jo
ds
orb
js
cmp
out
int3
mov
clc
add
test
or
lahf
out
mov
out
xchg
push
fs
mov
aas
call
pop
add
stos
sbb
lahf
push
movsl
lods
xchg
pop
and
pushf
push
call
inc
in
inc
sub
outsl
fwait
lret
push
les
clc
aad
sbb
add
xchg
aaa
or
jne
negb
fistpl
push
nop
int
sets
jno
mov
inc
fcompl
fdivrl
or
push
add
inc
push
cmp
stc
pusha
shl
es
stc
sti
gs
ss
sbb
arpl
mov
movsb
pop
and
std
in
mov
or
push
mov
mov
outsl
shlb
cmpsl
inc
popw
or
dec
mov
addr16
adcl
jl
jbe
mov
xor
add
mov
out
push
int
adc
cltd
pop
fwait
aaa
jne
into
div
pop
fcomi
push
jne
icebp
mov
mov
fidivrl
pop
pop
std
sub
movsb
push
mov
sbb
or
xor
fisubrs
nop
test
sub
add
insb
jne
mov
adc
outsl
cmp
cmp
xchg
fcmovnu
sbb
imul
mov
xor
dec
ja
adc
push
pop
fbld
cmp
cmpsl
inc
daa
jo
es
out
movsb
sub
sbbb
out
inc
andb
popl
adc
xchg
sti
imul
data16
mov
enter
inc
mov
leave
xor
sbb
fmull
jge
cwtl
mov
xor
in
insl
addb
or
xchg
popa
repz
cmc
fistps
cmp
inc
fdivl
xor
xor
adc
inc
pop
xchg
pushf
jns
rcrl
push
dec
xchg
xor
paddb
popa
lahf
cmp
imull
mov
fsub
push
or
notl
push
out
push
adc
dec
test
xchg
push
aad
xchg
lds
add
scas
lahf
enter
std
inc
aas
and
and
mov
mov
jl
and
out
cmpsl
xor
js
xor
shlb
cmp
mov
inc
mov
cmp
or
jo
mov
inc
and
ror
ds
xchg
xchg
test
into
gs
dec
shl
push
sub
and
hlt
test
sub
mov
pop
popa
cmp
push
pop
dec
scas
shll
stos
xor
adc
clc
jne
xchg
and
mov
lcall
ss
imul
test
inc
sbb
bound
mov
pop
pop
mov
test
negl
adc
jecxz
add
dec
push
adc
fmuls
fidivl
fdivrl
int
and
popa
fucompp
push
dec
pop
dec
sbb
push
ffree
lods
jmp
cvttps2pi
xchg
sub
pop
lahf
sti
ds
dec
packssdw
adc
mov
cmp
xchg
pop
into
test
mov
cmp
mov
hlt
ret
mov
mov
std
loop
cmp
shr
jbe
fnstsw
loop
jb
sarb
push
nop
and
sti
fcmovnu
push
jle
enter
mov
call
mov
adc
clc
push
sbb
pop
cmc
sub
out
or
xchg
ds
test
sahf
jo
push
mov
mov
pop
pop
sub
movsl
ljmp
or
aad
rorl
popf
push
out
lret
xlat
pop
out
aas
and
or
loop
mov
inc
cs
repnz
mov
cld
dec
jge
fnsave
fsts
insb
in
ret
popf
adc
inc
pop
in
leave
push
sbb
stc
in
andb
mov
test
sarb
cmp
cli
push
adc
pushf
jno
or
cmpsl
out
mov
sbb
jae
movsl
cmpsl
clc
in
push
and
je
xor
repnz
cltd
xor
dec
hlt
sub
dec
arpl
mov
inc
xchg
dec
or
mov
push
in
push
inc
sbb
gs
sti
stc
mov
xchg
add
ds
call
mov
pop
stos
mov
mov
add
inc
outsl
fldcw
std
ss
sbbb
pop
leave
pushf
push
push
incl
and
cmp
cli
mov
lods
das
call
lods
or
or
stc
push
jp
cs
pop
or
cmpsl
cs
lods
or
pop
sbb
into
xchg
dec
xchg
pop
shlb
imul
fisubl
mov
inc
xchg
inc
and
sbb
adc
cmp
inc
mov
inc
inc
out
push
je
and
out
and
fs
and
iret
ret
fidivl
cmpsb
in
xchg
or
fiaddl
aaa
hlt
lods
inc
daa
push
int
ret
or
sbb
and
push
test
sub
adc
cltd
inc
dec
xchg
cwtl
je
pop
out
mov
fdivrl
cmpsl
sub
add
daa
xor
dec
inc
stos
lea
xor
lret
lods
sub
test
mov
gs
sub
mov
jmp
stc
aaa
jnp
cmp
movsb
fwait
jmp
aad
popf
adc
cmp
ja
and
fs
mov
fwait
or
cmp
dec
xor
mov
jmp
popa
cmpsl
testl
stos
test
sub
xor
dec
loope
shlb
sbb
popf
or
adc
lock
fsub
and
in
cmpsl
cmpsb
rorb
int3
push
lods
push
push
mov
cmp
fidivl
js
mov
mov
jecxz
adc
in
mov
mov
xor
cmc
pop
gs
jge
add
and
cmp
and
sub
fiaddl
nop
lret
scas
fldenv
loopne
in
out
cmp
mov
cmp
dec
aas
adc
ss
jnp
push
cmp
pusha
xchg
xchg
mov
sub
and
sti
xor
mov
pop
movsl
mov
cmc
dec
rdmsr
mov
int3
pop
loope
sbb
push
cmp
mov
dec
lods
sahf
dec
es
mov
daa
mov
mov
sub
push
xorb
sbb
inc
test
add
out
mov
inc
or
add
pop
sarb
push
into
jbe
push
and
icebp
call
call
xor
jae
and
sbb
and
and
mov
stos
mov
aas
aad
adc
push
cld
mov
pushf
dec
adc
in
sahf
subl
bound
testl
mov
adc
sbb
jge
dec
mov
mov
mov
jecxz
mov
mov
xor
jbe
outsl
in
add
das
lds
pop
cmp
push
cmp
push
add
cmp
pop
shlb
pop
and
ljmp
mov
mov
fsub
push
jge
into
xlat
xorl
mov
dec
stos
lods
sub
dec
cmp
xchg
pop
and
adc
xlat
sub
xchg
les
stos
dec
jl
pop
ljmp
nop
xchg
mov
sub
dec
shrl
popf
and
ja
fcompp
cmpsb
test
add
ret
dec
or
jge
outsb
loope
push
sbb
pop
pop
dec
lret
sub
mov
stc
xchg
inc
pop
fbstp
sbb
loop
sub
xchg
lea
mov
test
mov
mov
pop
scas
xchg
fsubl
mov
addl
aaa
push
or
fiadds
in
fs
adc
fdivrs
jo
inc
ljmp
jnp
or
jmp
fs
jp
mov
dec
jne
xchg
pusha
dec
in
add
cmp
xlat
push
mov
push
mov
cmp
push
inc
lods
sbb
mov
push
pop
mov
sbb
push
dec
call
xchg
jb
mov
adc
cli
cs
adc
pop
int
xorb
sbb
negb
sbb
mov
inc
fcmovne
xchg
movsb
fisttpl
shlb
sbb
dec
test
jo
add
inc
test
inc
lret
xchg
xlat
loopne
mov
mov
mov
repnz
shlb
rorb
pop
jb
mov
mov
pusha
adc
out
sti
push
jge
iret
push
es
or
sbb
loop
les
sbb
dec
daa
adcl
xchg
cwtl
lea
mov
dec
pop
enter
jp
cmp
sub
decb
mov
fiaddl
push
loope
sub
jae
outsb
mov
xchg
aaa
adcb
test
add
xchg
push
inc
pop
cld
divl
mov
dec
cmp
and
mov
add
mov
pop
cmp
cli
cmp
int3
pop
mov
adcb
mov
out
ret
scas
push
mov
mov
xchg
and
negl
lock
cs
enterw
int3
or
or
xchg
pop
jle
dec
addr16
jmp
ja
mov
mov
xlat
and
sti
popf
push
fwait
xlat
xor
paddsw
push
and
cltd
cmp
bound
add
movsb
pmaxub
fstps
cs
adc
sub
pop
leave
mov
push
imul
fistpl
repnz
dec
dec
sbb
mov
int
add
mov
jne
sbb
mov
cmp
jno
test
cwtl
dec
sbb
jo
insb
lcall
push
outsl
cltd
pushf
mov
lahf
add
xor
fwait
je
shlb
rcrb
stos
xchg
into
bound
bound
dec
push
xchg
movsb
dec
ret
xchg
cmp
cmpsb
jg
pop
adc
jns
xor
or
test
cs
cltd
push
jne
mov
nop
mov
mov
push
pop
or
or
jge
out
and
jp
push
xlat
or
inc
mov
das
int
insl
mov
cmp
std
ret
mov
data16
xor
mov
mov
jne
mov
cld
hlt
xor
call
xor
mov
lock
imul
push
idivl
dec
add
or
jo
nop
js
push
mov
int3
pop
mov
in
mov
adc
sub
lret
daa
mov
js
xor
out
push
xchg
aad
xchg
add
cs
pop
out
lods
movsb
add
add
aad
mov
inc
sbb
pop
sub
pop
fiaddl
mov
loopne
and
ja
or
adc
nop
popa
rcll
pop
pop
add
sti
lods
sbb
or
popa
ret
inc
ret
nop
cmp
adc
mov
movsl
aaa
in
sub
icebp
dec
mov
scas
add
icebp
cmp
push
and
mov
mov
pand
stos
in
repnz
xor
mov
out
adc
dec
xor
insb
sbb
xchg
cmp
pop
dec
mov
sbb
push
test
dec
loope
ret
mov
fdivrp
pop
in
icebp
popa
dec
ljmp
pop
pop
cltd
adc
repnz
push
leave
shll
lret
aaa
pop
xor
out
push
push
test
outsb
push
fwait
subl
and
inc
test
ret
xchg
xor
and
nop
dec
mov
jge
mov
xchg
or
push
xchg
fs
pop
cmpl
ss
fsubs
cld
and
addl
jle
pop
and
push
sub
xor
into
inc
mov
push
mov
int
retw
or
pop
sarl
push
addr16
jg
clc
dec
addr16
mov
mov
push
pop
add
mov
pop
sti
cli
mov
push
inc
mov
mov
pushf
and
xchg
or
dec
xor
pop
xchg
sbb
push
xor
lock
and
mov
clc
notb
rcr
inc
bound
into
outsb
into
pop
ljmp
jne
xchg
ja
push
pop
push
jg
xchg
cmp
adc
push
into
push
push
inc
inc
pop
push
push
movsb
sarb
lret
mov
mov
xor
ja
aad
incb
mov
mov
pushf
fisubrl
sub
pop
pop
cli
fwait
addb
int3
js
outsb
mov
addr16
fs
pop
imul
test
cld
pop
fidivrl
mov
dec
inc
xor
xor
jae
push
cmpsl
or
jp
sbbl
mov
add
shll
lods
jnp
mov
and
mov
stos
pop
jmp
bound
xchg
mov
push
jl
sub
xchg
pop
or
arpl
jecxz
cmp
cwtl
cmp
dec
xor
jge
jle
test
inc
sub
jg
lea
test
cmp
mov
sbbb
jo
ja
adc
pop
push
and
test
gs
call
mov
mov
faddl
filds
loopne
cmpsl
daa
mov
int3
jge
push
lods
cs
cmp
inc
dec
flds
push
cmp
fnstenv
fs
dec
ljmp
mov
and
fistpll
inc
xchg
jae
insb
add
into
hlt
sub
testl
push
sub
in
ret
cmp
jge
repz
add
pop
and
fists
mov
lea
inc
pushf
xchg
mov
adc
clc
push
or
sbb
inc
jg
mov
ljmp
sahf
jbe
adc
loopne
sarl
movsl
cwtl
cltd
rclb
cmp
dec
xchg
mov
dec
dec
xchg
mov
pop
int3
mov
xchg
mov
mov
pop
push
push
icebp
adc
push
push
mov
pop
or
nop
repnz
xchg
add
dec
test
pusha
stos
icebp
xchg
enter
int
push
jno
xchg
fwait
xchg
xchg
jae
mov
xchg
inc
or
imul
sub
iret
mov
arpl
loop
lods
jb
adc
ficoml
mov
movsl
loopne
add
xor
and
xchg
or
mov
dec
mov
push
ficoml
xor
fwait
bound
inc
cmp
inc
pop
ret
sub
jnp
mov
xlat
mull
mov
adc
ds
xchg
out
fmuls
dec
mov
clc
scas
jae
inc
push
push
mov
pop
popf
test
mov
mov
fcmovnbe
add
enter
xchg
cli
inc
xchg
sub
xchg
les
and
lret
dec
inc
sti
stos
jbe
jmp
mov
cmp
xlat
and
shlb
addr16
push
sbb
jl
xor
dec
sbb
out
sub
in
jg
js
repnz
add
mov
stos
ret
mov
jg
push
add
pop
pop
js
fs
cs
lea
mov
lock
sub
xchg
fdivs
je
loopne
incl
mov
sti
mov
arpl
and
xor
xor
jge
cmp
mov
fcomps
sti
push
mov
mov
mov
cmpsb
into
xchg
inc
xchg
xor
insl
dec
es
cld
shrl
out
stc
or
xchg
push
dec
xchg
shll
out
call
mov
cmp
dec
test
jg
push
sti
sbb
or
push
xor
cmp
xchg
subb
xchg
dec
test
inc
jo
sarl
pushf
inc
in
movaps
or
je
clc
jb
pop
sub
je
inc
loop
jl
lods
aaa
or
push
clc
loope
cmp
lea
pop
test
stos
das
xor
sub
sbb
push
jnp
push
add
enter
les
push
jg
xor
lahf
pop
cmp
xor
popa
sub
das
int3
adc
jnp
test
rolb
lahf
lcall
jle
test
cmpsb
test
repz
mov
and
stos
or
cmpsl
repz
cmp
xorb
in
je
inc
or
mov
addl
jmp
jnp
arpl
jb,pt
enter
hlt
ret
add
stos
cmpl
jns
repnz
inc
add
push
push
sbb
rcrl
nop
subl
add
ljmp
add
fsubp
sub
popl
scas
xchg
sbb
sub
mov
dec
add
out
loop
push
lods
push
ja
bound
mov
test
add
test
fcomi
fs
xchg
mov
stos
out
insb
xorb
inc
fstps
mov
roll
mov
lea
jp
mov
xor
std
in
iret
inc
or
xchg
insb
fnstenv
dec
pop
outsl
das
icebp
pop
and
sbb
mov
sbbl
addr16
sahf
fbstp
and
push
popf
xor
or
out
sti
shrb
mov
pop
dec
addr16
mov
jbe
dec
leave
in
pop
dec
mov
pop
mov
xchg
daa
push
jg
fs
jo
adc
push
sbb
cld
cmp
fidivl
or
shr
nop
xchg
out
xchg
stos
cs
cmp
dec
push
lods
fstl
in
lea
sbb
cmpl
ss
cmp
push
jo
xor
jbe
push
mov
fbld
aad
pop
pop
scas
repnz
popa
sbb
in
jmp
cmpb
jnp
fldt
mov
mov
je
cwtl
push
fisubrs
fisttps
push
ljmp
mov
sub
adc
daa
and
insl
add
push
stc
push
dec
out
or
popf
mov
inc
inc
aaa
aam
jae
mov
xor
lds
fdiv
push
sbb
or
test
repz
stc
jae
stos
sti
lahf
cltd
inc
adc
sti
push
movl
pop
mov
pop
pop
mov
aad
and
adc
inc
pop
repz
mov
movsl
fiaddl
push
xchg
inc
adc
popf
and
xor
push
mov
inc
xor
push
jno
das
shr
pop
test
xchg
sbb
loop
lahf
inc
mov
xor
mov
cmp
icebp
cmpsl
int3
pop
iret
jns
popa
dec
daa
xor
inc
mov
inc
cli
and
lea
jne
push
xchg
dec
push
lea
mov
dec
test
jle
test
mov
leave
pusha
xlat
movsl
or
pop
inc
mov
popf
inc
shll
inc
xor
add
test
and
mov
aaa
in
mov
adc
psubusw
jge
jns
sbb
movsl
addr16
outsl
aas
in
fisubrl
sbb
push
ss
push
mov
std
xor
push
sub
mov
cwtl
cwtl
inc
std
mov
mov
lret
cmpsb
pop
mov
jl
and
push
test
ss
xor
sbb
lods
test
fstl
adc
xchg
add
or
mov
push
dec
or
cmp
lret
xchg
ss
adc
sub
and
loop
rcll
inc
lea
pminsw
lcall
imul
sub
adc
add
leave
insb
fisttpl
fs
pop
test
xor
jmp
or
fwait
pop
nop
mov
cld
xor
dec
xor
mov
inc
push
mov
mov
gs
in
sub
lea
jae
jae
imul
jbe
aaa
fistpll
popa
sub
fcmovne
xchg
rorb
add
lock
xorl
and
cli
into
cmp
shll
testl
lret
call
daa
popf
data16
mov
lods
pushf
xchg
mov
stc
pop
andl
imul
popa
es
inc
std
jne
add
pop
mov
pushf
roll
inc
mov
jmp
lock
test
push
mov
or
test
mov
or
inc
adc
shll
test
adc
cmp
push
dec
stc
push
push
push
sub
adc
jl
scas
out
or
std
or
xchg
push
sub
mov
push
repnz
lcall
mov
sbbl
cmp
add
and
xor
aas
inc
roll
add
xor
ljmp
sbb
sbb
repnz
inc
stos
dec
scas
or
aaa
xchg
mov
cs
movsb
jge
xlat
ljmp
add
jns
pop
scas
mov
cmp
dec
nop
fmulp
mov
pop
and
push
lahf
push
ucomiss
xchg
push
outsb
in
xor
or
mov
pop
into
shrb
sbb
sbb
arpl
dec
jge
jno
mov
pop
hlt
aad
aam
les
push
test
movsb
mov
subl
or
lods
xchg
je
sbb
aaa
icebp
xor
sbb
aaa
jno
xor
mov
pop
ret
jne
push
popf
inc
mov
mov
sbb
jns
ret
ret
imul
mov
push
jnp
test
sbb
pop
and
pop
popf
xor
inc
fdivr
mov
cmp
push
test
clc
inc
mov
pop
mov
rcll
sahf
sbb
arpl
dec
add
mov
pushf
adc
shll
inc
pushf
or
insb
ja
push
xchg
inc
cmpsb
and
stc
or
sub
mov
push
jb
sub
mov
loopne
inc
dec
cmp
jo
pop
mov
dec
je
xchg
lods
cmp
sbb
in
dec
ss
sarl
leave
clc
loope
pop
xchg
add
imul
mov
cmp
push
cmp
cs
cld
xchg
addr16
mov
adc
imul
and
dec
pop
arpl
ret
cmc
sub
xor
mov
dec
xchg
testb
inc
inc
mov
inc
roll
push
movsl
rorb
add
cmp
mov
shll
sbb
cmp
ljmp
pop
sub
test
inc
add
add
add
fistl
push
test
addl
add
add
lahf
test
add
lret
inc
std
test
add
sub
xchg
test
dec
push
dec
insb
in
out
adc
pop
mov
pop
mov
iret
test
mov
flds
xchg
js
lea
movsb
psubb
out
push
pusha
or
aad
mov
lahf
cli
xor
sub
push
and
sub
sbb
jmp
js
cld
addl
jmp
or
ljmp
xchg
or
or
js
cmp
sbbl
push
icebp
xlat
fmull
xor
gs
or
fsts
cwtl
mov
rcl
orb
sub
push
cli
push
movsb
in
xchg
das
std
mov
adc
test
imul
add
mov
push
mov
jge
stos
lcall
int3
and
inc
lea
sbb
popa
sbb
mov
push
nop
cmp
nop
stos
insb
jl
fmull
add
enter
adcb
add
inc
shlb
jo
test
sub
pop
or
mov
cmp
inc
imul
pop
pop
push
lea
clc
test
imul
aam
adc
mov
insl
add
or
addr16
jg
xor
leave
imul
inc
mov
push
in
dec
dec
enter
repnz
stc
fadds
ja
insb
add
in
xchg
fstps
jnp
sbb
mov
icebp
fs
fs
mov
jle
add
mov
sbb
sahf
stc
pop
mov
xor
jns
jg
out
cmp
jbe
inc
adc
mov
dec
xchg
push
adc
cmp
in
sbb
push
popa
lret
adc
sahf
or
sub
xchg
jp
fcomps
test
fstpt
adc
outsl
fmull
int3
ja
sub
and
pushf
mov
sub
rcrl
mov
mov
scas
fists
in
inc
push
out
imul
imul
dec
jns
inc
and
xorl
cmpb
or
aam
out
rorl
cmp
mov
cmpsl
pop
sub
out
adcb
pop
adc
xor
push
clc
cs
out
add
xor
aad
addl
jge
fcoms
pop
inc
adc
mov
add
sbb
cmp
cli
scas
lea
outsl
sti
movsl
mov
xor
aad
dec
sbb
xchg
or
out
imul
ret
shr
lea
cmp
pusha
sub
mov
lds
in
mov
xor
inc
add
insl
adc
or
clc
addb
aas
mov
xor
pop
in
stc
std
push
and
cmp
adc
xchg
sbbb
into
scas
mov
cs
stos
pop
mov
loope
rolb
loop
mov
or
clc
lds
xchg
movl
mov
jecxz
add
adc
loope
or
fidivs
xor
test
sbb
mov
and
imul
rcrl
stos
xchg
ja
adc
repnz
je
xchg
leave
cmpsb
pop
sub
push
dec
jbe
pop
or
lock
sbb
sub
daa
cmp
and
lock
iret
dec
sahf
xor
jae
sbb
in
loop
repnz
daa
sub
inc
mov
daa
push
adc
std
xor
dec
rorl
mov
js
jb
out
sbb
mov
loop
insb
cld
inc
fbld
out
scas
mov
in
jbe
lock
lahf
clc
jnp
xor
jg
in
or
jmp
fcomp
mov
dec
inc
repnz
mul
int3
push
inc
sbb
daa
mov
mov
sub
das
jae
xchg
inc
addr16
or
int
ljmp
jbe
xchg
aas
into
adc
test
dec
mov
es
sbb
daa
adc
dec
je
jg
loope
inc
dec
and
adc
scas
sub
mov
test
and
ficoml
stc
and
inc
jmp
daa
cmp
add
or
sbb
fucomip
in
pushf
addps
in
rsm
pop
loop
loopne
cmc
gs
testl
push
ret
outsb
in
test
out
lds
cmp
rcll
lcall
call
jle
xchg
mov
out
xchg
mov
stos
data16
sbb
sbb
test
frstor
clc
xchg
mov
jno
sbb
sbbl
stc
dec
pop
in
and
lahf
cwtl
adc
sub
fdivl
inc
stc
mov
mov
xor
or
push
jecxz
cmpsb
cmpsl
push
cmp
cmpsl
ss
pop
insl
hlt
sbbb
pop
cltd
insl
lods
sbb
inc
dec
les
inc
imul
cmp
lods
rcrl
icebp
and
pop
loop
push
idivl
insb
outsb
pop
inc
nop
jmp
mov
sti
dec
sbb
jne
push
xor
jle
addr16
mov
cwtl
imul
mov
incb
sbbl
pop
out
addr16
addr16
repz
ret
xchg
sbb
mov
push
leave
push
sqrtps
or
ljmp
ljmp
sub
and
xchg
adc
adc
popf
jp
mov
test
add
pushf
cmpsb
jmp
xorb
scas
cmp
fstl
nop
insl
das
jecxz
pop
lret
cmc
cmpsl
rolb
xor
shrl
push
sub
aas
xchg
loopne
mov
mov
mov
imul
sub
leave
fnsave
fmul
dec
fmull
cltd
mov
icebp
es
aaa
mov
mov
jmp
cs
dec
jns
jb
je
push
mov
lcall
icebp
or
in
enter
inc
or
mov
jo
and
mov
mov
xchg
xchg
mov
push
mov
mov
mov
je
mov
fwait
imul
out
out
sub
loop
sbb
push
sub
fs
sub
add
sub
mov
sbb
sbbb
xor
je
cmp
adc
pop
ret
adc
movsl
mov
bound
sub
jne
cmp
roll
push
mov
sbb
cs
cmpsb
fwait
inc
sub
test
cmp
sbb
notl
test
loop
lret
sbb
cmp
lahf
inc
dec
fdivrp
adc
push
mov
sub
xlat
push
shl
or
adc
imul
iret
sub
mov
dec
xor
sub
fnstenv
xor
dec
ljmp
cmpsb
inc
pop
inc
push
fistpll
scas
xor
and
lahf
or
sbb
sbb
std
adc
loopne
fisubrl
xchg
sub
pop
test
fldcw
push
mov
xor
mov
shrb
sbb
inc
dec
mov
ror
mov
sub
jne
sbb
lea
jmp
repz
mov
mov
adc
addr16
in
mov
jecxz
orb
mov
adc
repz
inc
rcrl
push
stos
sbb
cwtl
loop
dec
cmp
xor
or
mov
jmp
sti
and
lcall
incl
and
or
or
lret
sbb
pop
scas
add
mov
fldcw
test
daa
mov
outsb
pop
jbe
les
aam
push
and
lea
js
push
sbb
stos
adc
cmp
das
jns
cli
popf
aad
lret
pop
repz
jge
scas
mov
mov
nop
lret
xor
sub
cmc
inc
jno
jl
js
or
mov
in
adcb
rcr
or
sti
test
sahf
adc
adc
xchg
mov
imul
xchg
divl
enter
scas
xlat
shlb
pop
nop
sbb
cmc
cmpsb
jmp
es
shlb
and
jb
mov
fnstcw
inc
dec
pop
fwait
or
mov
push
int3
inc
cmpl
inc
mov
mov
dec
xor
xor
outsb
pop
punpckhdq
pusha
lret
ss
inc
pop
aaa
or
lret
mov
insl
pop
shl
xchg
add
pop
leave
sub
xorb
aaa
lret
lahf
push
add
dec
sbb
sub
andb
inc
movsb
mov
xor
in
fwait
dec
inc
push
fstl
fwait
nop
add
dec
insl
adc
sti
vmovaps
loope
fsts
jle
insl
test
test
imul
xor
jbe,pn
int3
in
sbb
stc
loop
ja
es
xor
inc
adc
shll
insl
ds
in
jmp
pop
leave
fwait
lahf
adc
imul
in
out
push
lret
popa
cli
rcrl
shll
fdivr
mov
dec
jnp
push
loopne
mov
bound
mov
jb
repz
push
out
mov
push
dec
mov
jo
shrl
and
lret
push
mov
out
rclb
sub
in
mov
xchg
jae
or
adc
jg
jo
rcrl
sbbb
notb
cmp
mov
andb
jnp
rclb
scas
addr16
sub
pop
push
insb
cmpsl
sub
loopne
or
les
adcl
xor
pop
lret
pop
sbb
mov
aaa
je
pop
aad
mov
fdivs
lahf
jge
rcrl
sbb
leave
int
xor
push
cwtl
push
inc
or
sti
mov
and
add
or
xchg
inc
sbb
shr
test
ss
pop
pop
mov
insb
adc
xor
les
std
xchg
cmp
or
xchg
add
lea
pop
outsl
xchg
push
and
xchg
loope
imul
sub
adc
fisubl
or
out
daa
pop
xor
pop
das
fs
jg
add
pop
js
xchg
fimuls
out
sbb
jle
aad
xlat
in
dec
aad
mov
add
mov
dec
gs
push
shrl
shl
imul
int
test
lds
xor
or
out
jne
inc
into
sahf
test
cmp
push
jno
ljmp
ret
jle
or
cmp
loope
sarb
xor
mov
mov
push
mov
jne
pop
adc
mov
cwtl
dec
aam
aad
dec
enter
addr16
and
xor
push
fwait
out
fwait
xchg
xor
stos
xlat
or
mov
aas
fs
aaa
in
imul
cmp
sbb
negb
jb
cwtl
in
imul
xchg
test
enter
push
lcall
in
das
lcall
push
ret
aam
jg
loop
stos
mov
pop
test
movsl
lea
sub
mov
mov
jmp
jmp
rcrb
mov
int
out
loope
jg
lret
mov
jle
stos
mov
xchg
mov
jnp
and
add
movsb
std
xor
push
push
add
hlt
popa
loope
movsl
inc
addr16
outsl
mov
popf
cld
xlat
pop
aad
mov
pop
sub
sti
sahf
sub
xor
fiadds
inc
jns
call
and
fstpt
lock
inc
lock
mov
sbb
inc
sbb
sub
stos
filds
ja
mov
outsl
mov
pop
adc
lahf
iret
cmp
adc
out
mov
inc
aaa
inc
mov
sub
or
repz
roll
testl
mov
out
ret
pop
in
popf
nop
push
js
inc
cmp
adc
loope
xor
sbb
ja
aas
push
out
sti
sbbl
push
lcall
mov
inc
push
in
sbb
jp
xchg
xchg
pop
lea
cmp
dec
stc
lods
leave
insl
daa
mov
xor
sbbb
mov
iret
gs
leave
or
push
jae
dec
stos
lcall
flds
test
aaa
mov
sahf
lahf
mov
enter
push
ret
add
inc
les
jle
fwait
xor
test
jp
leave
cld
scas
sbb
js
rcrb
mov
popa
adc
aaa
repnz
cld
xlat
xchg
push
in
pop
add
pop
cmc
jmp
ret
clc
mov
test
insb
in
gs
aaa
jns
sbb
movsl
les
adc
scas
rorl
pushf
in
or
mov
outsl
cmp
sbbl
mov
sarb
loopne
loop
lock
xor
push
mov
push
or
adc
pushf
push
and
int3
ret
rcrb
inc
cltd
jecxz
inc
cmpsl
pushf
pop
les
push
jne
sbb
cmp
mov
add
lods
sti
sbb
and
jl
and
adc
xchg
inc
call
test
xor
xlat
xchg
ds
cmp
xor
pop
pushf
fs
and
dec
push
rcrl
dec
rol
lods
daa
mov
addr16
push
mov
cmp
loopne
movl
outsl
sub
dec
mov
clc
out
dec
and
fadd
imul
shrl
push
lret
or
dec
lods
cmp
push
hlt
jb
ret
scas
imulb
xchg
insl
xchg
jno
xchg
xchg
dec
inc
mov
loope
dec
lret
cmp
je
fmull
enter
adc
adc
cwtl
cld
cmp
test
add
xor
inc
cwtl
cmp
fisttps
mov
fidivs
mov
sub
cs
add
outsb
sbb
jnp
sbb
and
sub
pop
cmp
xorb
push
jg
ljmp
and
sub
in
mov
push
pop
xor
xchg
fstl
cmp
or
jbe
stos
idivl
cmp
mov
movsl
mov
inc
rcll
adc
jmp
ret
sbb
loope
data16
stos
xor
mov
mov
pop
sub
fldcw
cmp
cli
adc
ja
lock
fisttps
inc
decb
and
mov
push
push
stos
incb
xchg
jb
fisttpl
sub
pop
inc
mov
test
pop
push
scas
leave
cwtl
popa
xchg
les
pop
addr16
xchg
out
cmpsb
xor
shr
mov
jnp
jae
fwait
mov
adc
pop
cwtl
sub
scas
not
jle
pusha
dec
mov
cli
pushf
ljmp
imul
out
arpl
xchg
jmp
mov
cmp
negb
jl
ds
fdivl
jno
jb
popf
xchg
test
cli
cmp
mov
iret
test
and
cmpsl
hlt
call
mov
mov
cs
ja
lods
test
dec
popa
and
js
inc
or
xchg
fadd
or
mov
mov
dec
mov
dec
inc
adc
or
sub
pop
lcall
ror
push
dec
push
sbbl
movsb
shr
fs
fnstcw
es
mov
dec
cmp
gs
scas
repnz
out
cmp
inc
imul
and
pushf
hlt
data16
xchg
rcr
ret
leave
mov
adc
jno
dec
adc
mov
mov
and
or
add
out
adc
stos
xchg
aas
pushf
out
push
cmc
push
scas
enter
jbe
test
push
bound
sbb
cld
xor
fstp
insl
addr16
push
aaa
cmp
lret
pop
loop
repz
out
ficompl
movsb
lahf
je
cmp
cmp
in
jbe
test
pop
and
mulb
and
and
dec
scas
add
mov
or
add
dec
in
stos
lret
test
aad
cmp
push
sbb
aaa
add
pop
lods
xlat
push
outsb
daa
push
frstor
push
jae
pop
in
xor
mov
lcall
cs
mov
test
mov
dec
mov
push
mov
xchg
mov
push
lods
jne
jae
sbb
jecxz
sub
jecxz
imul
lret
out
mov
and
loope
push
repz
stc
pop
out
lods
lods
addr16
int3
or
xchg
pushf
pop
lret
mov
loop
inc
outsl
movl
stos
iret
pop
jg
sti
inc
cmp
dec
roll
popf
cmpsb
cs
pop
mov
or
lods
repnz
cmpsl
ss
and
shl
add
into
mov
insl
hlt
stos
pusha
das
sbb
cs
push
and
gs
jge
or
gs
add
mov
outsl
sub
cmp
mov
dec
push
cmc
ss
xchg
aas
jp
inc
inc
jns
and
bound
cmpl
adc
enter
adcl
pop
out
aad
test
lcall
das
xchg
sub
rcll
push
scas
cmpsl
xlat
sbb
sbbb
flds
inc
xor
inc
es
leave
pop
cmp
incb
pop
mov
mull
xor
xor
cmp
rcrb
mov
fs
jp
jecxz
mov
rorb
call
mov
scas
hlt
mov
jmp
or
mov
dec
mov
nop
adc
scas
in
pop
lret
sub
leave
lret
loope
add
sub
cmp
jae
nop
cmc
jle
leave
push
and
std
fiaddl
inc
sar
jmp
out
ja
iret
sarl
ja
add
sub
pushf
bound
pop
sub
sbb
loope
sub
popf
cwtl
test
xlat
sahf
pop
jne
ljmp
inc
dec
dec
out
insl
cmpsb
mov
inc
dec
mov
lahf
mov
jmp
pop
cmp
lcall
mov
xchg
add
loopne
pop
adc
xor
in
fists
jg
dec
mov
mov
adc
cli
adc
loop
inc
xor
cmp
fildll
repnz
add
mov
pop
stos
mov
imul
mov
cs
je
push
jmp
cmp
push
imul
movsl
lret
cmp
dec
inc
jmp
dec
je
or
dec
jp
ret
push
cmc
xor
mov
cwtl
insl
inc
out
sbb
fwait
cmpl
stos
jp
jb
setge
cmp
bsr
adc
pusha
idiv
loop
and
jo
decb
stc
and
pop
push
or
adc
or
dec
aas
orl
repz
test
fs
xchg
dec
xchg
mov
mov
loope
and
dec
enter
xchg
hlt
ljmp
sti
pushf
ja
loopne
sub
jmp
repnz
push
sbb
pop
stc
and
mov
push
bound
xor
in
lods
fs
lret
daa
inc
sub
or
out
xchg
pop
adc
aas
lret
sbb
cli
outsb
inc
mov
ds
sub
or
sub
stc
inc
add
mov
mov
mov
cmp
or
mov
mov
test
fstl
repz
outsb
int3
in
cmovb
xchg
lds
jbe
popf
lahf
cmpsb
ja
mov
cmp
add
mov
outsb
out
or
or
in
shrl
xor
mov
dec
sar
add
pop
in
jns
push
sbb
outsl
jne
or
or
push
push
negl
jg
test
in
jmp
xor
out
lock
jo
add
jns
addb
daa
fadds
mov
insl
and
dec
test
addr16
cltd
movsb
and
scas
sahf
xchg
pop
inc
shl
jnp
imul
or
sub
int
ret
jnp
ret
ret
std
cmp
je
add
jle
scas
or
jle
xor
jne
mov
je
push
push
iret
cli
push
cwtl
adc
test
int
xlat
push
pop
adc
clc
xchg
rolb
outsl
xor
lock
xchg
xchg
jmp
fucomp
scas
add
cli
dec
fdivs
hlt
scas
lahf
popa
xchg
testb
sar
dec
jbe
pop
xchg
adc
dec
add
sbb
lock
out
dec
xchg
sub
and
dec
loope
sbb
inc
pop
jp
xchg
xchg
sbb
clc
push
leave
mov
jl
addb
testl
fs
cmpsl
ror
stos
mov
mov
push
fildll
push
dec
xchg
mov
or
xor
mov
pop
call
mov
mov
push
repz
cmp
test
inc
lds
fsubr
xor
and
das
shll
dec
leave
jmp
subl
mov
int
stos
push
in
scas
outsb
out
push
stc
mov
jge
and
sbb
std
sti
mov
dec
sub
es
xchg
sbb
movsl
dec
lock
jae
adc
int
inc
outsb
out
xor
test
ret
les
popf
leave
ss
push
push
pop
or
or
int
mov
lds
es
push
push
mov
jo
jne
xlat
aad
xchg
dec
popa
fisttps
insb
mov
rcrb
clts
subb
aaa
out
lds
cmp
repz
testb
cld
movsb
xor
add
mov
sbb
pop
cmp
cld
cmp
int
movsl
fisubl
jp
cmc
clc
xor
xchg
lahf
sub
int3
repz
rcrl
vpmacssdqh
dec
mov
andl
xor
pop
outsb
fisubs
pop
inc
add
pop
mov
sbb
mov
stos
dec
stos
push
inc
ret
dec
hlt
pop
pop
mov
add
sbbl
mov
les
pop
adc
pop
sbb
jmp
insl
popf
ds
mov
imul
pushf
dec
mov
out
xchg
mov
mov
lock
sub
fldenv
mov
push
jp
bound
out
mov
jb
hlt
ds
pop
leave
lea
pop
push
cmp
dec
push
stc
repnz
decl
push
pmulhw
push
push
aas
jp
stos
dec
or
mov
outsb
fidivrs
add
fidivrl
into
and
and
xchg
fucom
gs
ljmp
je
out
hlt
pop
std
or
push
xchg
sub
xorb
push
bound
push
mov
jae
stos
ja
cmp
hlt
xchg
xchg
mov
shll
inc
test
shr
inc
imul
scas
or
lcall
enter
in
and
mov
jns
mov
dec
mov
lds
inc
enter
mov
xchg
add
pop
inc
orl
inc
ljmp
gs
lods
dec
fdivp
mov
lret
scas
add
mov
xor
mov
sbbl
stos
xchg
je
or
sub
xor
outsl
iret
or
mov
fmul
sbb
xchg
lret
fidivrl
sub
and
add
add
rcrb
sub
popl
test
and
xchg
mov
sbb
sbb
lret
outsl
cmp
push
stc
cld
lds
scas
stos
mov
mov
sbb
clc
xchg
incb
aam
std
rclb
push
lahf
fimuls
push
aas
push
jmp
xor
call
mov
sub
sub
cmp
xlat
addr16
adc
clc
jl,pt
sbb
iret
xchg
mov
push
add
ja
sbb
leave
mov
push
loopne
sub
fidivl
stos
jge
test
mov
test
push
push
jns
add
pusha
repz
push
fdivl
insl
aaa
pop
popa
pop
cmp
push
mov
inc
push
sub
outsb
mov
jmp
xlat
mov
pop
mov
and
push
imul
fdivr
push
testl
and
cmc
imul
sub
pop
inc
les
movsb
xor
in
mov
pop
push
xchg
push
xlat
and
push
jb
sub
dec
hlt
mov
pop
mov
out
popf
fidivl
mov
push
mov
test
push
cld
push
bound
push
movsl
sbb
jle
fwait
push
add
push
dec
sub
cmp
test
in
das
jne
jnp
inc
sbb
xor
mov
adc
addr16
push
xor
fstps
stos
pop
jne
leave
lahf
orb
mov
adc
int
scas
fwait
xor
jecxz
adc
jmp
les
rcl
enter
cmp
mov
mov
movsb
loopne
sbb
lcall
mov
pop
stc
and
mov
xor
repnz
mov
mov
xchg
dec
pop
cltd
out
addr16
ja
cmp
sub
cli
out
aad
fimuls
or
add
faddl
xor
and
mov
imul
jg
ds
lcall
jg
lods
dec
out
jns
mov
xor
jp
leave
xor
fmuls
xchg
pop
xchg
push
push
scas
xor
imul
mov
cld
xchg
mov
imul
and
lret
call
leave
into
mov
icebp
fsubrs
jo
xchg
cltd
xchg
icebp
sbb
adc
xlat
popf
push
adc
test
or
dec
or
or
pop
inc
pop
int
add
fldenv
sbb
mov
sub
dec
jnp
mulb
aaa
hlt
repnz
xchg
mov
jge
sbb
insb
inc
jecxz
cmp
mov
frstor
insb
popf
mov
xor
aad
add
or
ds
frstor
push
fwait
push
mov
dec
cltd
inc
push
mov
pop
inc
xchg
sub
ret
xchg
cmp
mov
xchg
je
and
jge
jg
mov
loope
and
mov
xor
cmp
mov
fwait
jnp
adc
test
or
nop
inc
cmp
sub
xchg
mov
sahf
and
ljmp
jo
clc
mov
fsubs
dec
jnp
sarl
loope
inc
xor
and
xor
mov
push
cmpsb
cmp
imul
pop
xchg
shlb
xchg
sbb
xor
int3
movsb
jmp
push
sti
mov
xorl
cld
mov
mov
inc
sbb
pusha
jge
dec
push
out
dec
test
fsubs
arpl
into
pop
or
xor
dec
notl
mov
mov
and
sahf
sahf
mov
lods
in
or
imul
pop
outsb
cmp
mov
rol
pop
cmp
jmp
cmp
adc
and
mov
aaa
movsl
push
or
pop
jecxz
adc
xor
cmpl
dec
movsl
mov
pop
clc
mov
rcl
pop
lods
pop
fwait
sti
mov
add
shrl
or
lret
dec
push
xor
fs
js
ds
int
mov
stos
shrl
mov
push
jbe
mov
inc
mov
add
or
sub
jno
mov
mov
out
add
dec
xchg
daa
mov
js
andl
mov
mov
add
xchg
div
out
mov
sbb
adc
rcrb
sub
test
adc
pushl
jecxz
cmp
dec
outsb
mov
mov
daa
aad
sub
push
adc
add
insb
inc
test
loop
dec
in
mov
push
fcomp
xchg
cmpsb
pop
shlb
ss
push
push
les
xor
adc
xor
dec
sbbb
xor
loopne
cld
adc
stc
cmpsb
leave
mov
cmp
lahf
dec
jae
mov
push
insl
xchg
mov
jmp
outsl
ret
inc
aam
movsb
out
jns
and
mov
dec
fcmovb
mov
xchg
test
jp
mov
stc
rol
jae,pn
mov
cmp
add
ret
dec
inc
adc
xor
mov
stos
int3
addr16
sbb
out
xchg
in
mov
xchg
dec
add
and
or
aad
cmp
inc
enter
mov
out
insl
cli
add
test
cs
pop
cmp
cmpsb
test
push
jp
inc
dec
xchg
jl
push
test
push
jmp
cli
int
jns
scas
dec
and
inc
push
loope
es
or
cli
stos
out
enter
test
pop
shl
in
incb
jge
pop
adc
push
pop
mov
push
insb
sti
push
or
dec
aaa
mov
dec
scas
in
mov
repnz
rcll
jmp
mov
mov
repnz
pushw
and
stos
mov
std
pop
es
sbb
mov
mov
jp
addr16
dec
out
in
jb
ds
out
daa
pop
lahf
push
mov
outsl
call
xchg
out
cmp
cmc
mov
inc
pop
imul
mov
push
not
ret
cmp
mov
push
mov
add
movsb
xchg
mov
sub
push
push
in
inc
jge
dec
outsb
push
popa
sbb
fwait
in
push
xchg
gs
mov
fs
jo
fbstp
mov
push
fldcw
dec
testb
divl
stos
bound
adc
pop
test
fsubl
enter
fidivl
insb
andb
ret
jg
es
dec
scas
sbb
and
pop
lret
mov
mov
sub
repz
or
inc
pop
sbb
mov
rcr
cmp
sbb
xor
movsb
movsl
lds
push
aad
and
repz
enter
fstl
push
inc
xchg
test
ret
mov
lret
call
gs
xlat
pop
test
sub
jmp
mov
adc
ret
addr16
jg
inc
dec
pop
scas
mov
int3
mov
int
data16
jmp
push
std
out
cmpsb
and
mov
xchg
sti
mov
loopne
shlb
add
cmpsl
pushf
in
pop
add
push
test
fdivrs
mov
cltd
xor
es
testl
insb
add
lods
mov
fs
in
popa
xor
stos
int
leave
dec
cmp
mov
insl
mov
and
jnp
jns
xchg
sbb
int3
xor
inc
sub
lods
xchg
jp
icebp
es
mov
loop
insl
add
cmp
jnp
popf
or
adc
jge
cli
and
fisttpll
mov
cmp
pushf
aaa
push
stc
jns
mov
nop
sbb
je
mov
inc
xor
add
xchg
xchg
push
add
xchg
lcall
loopne
adc
mov
gs
out
jg
push
push
xorb
cmp
pop
cmp
addr16
mov
mov
fists
or
dec
mov
hlt
and
cmp
jp
sahf
stc
ja
sub
lods
test
loope
fmul
test
repnz
mov
test
inc
dec
push
nop
pop
icebp
nop
dec
dec
pop
dec
mov
cld
or
push
cli
mov
push
inc
push
int
clc
cmp
xchg
sbbl
lds
movsb
test
mov
mov
ret
push
testb
test
jmp
andb
std
and
hlt
out
ret
xor
or
jp
jl
shlb
aam
sub
and
jb
sub
sub
mov
mov
dec
jmp
xorl
jle
and
sbb
lock
jmp
je
pop
add
lret
mov
insl
das
ret
jl
cs
jecxz
stc
cwtl
outsb
pushf
repz
iret
jns
mov
push
push
xchg
xchg
aas
int3
sub
lret
loope
lock
cmp
test
xor
lods
push
sub
daa
int3
mov
jnp
or
mov
popf
in
pop
mov
inc
shr
ds
aad
adc
pop
loope
jl
cmp
cmp
cli
enter
push
add
adc
mov
in
inc
mov
dec
jmp
mov
fcompl
mov
mov
xchg
mov
sub
push
shlb
cmp
add
loope
pop
or
arpl
scas
mov
int3
pop
jl
jmp
pusha
inc
je
fdivl
cmp
popa
mov
cmp
mov
stos
dec
cmp
iret
sbbb
inc
std
roll
xor
popa
pop
xchg
call
cmpsb
xlat
mov
lahf
or
mov
aaa
sti
mov
sub
lret
push
notl
insl
mov
in
ljmp
cmp
push
push
jecxz
setp
loop
cmp
icebp
scas
leave
fidivl
xor
rcrl
dec
dec
and
jp
sub
and
dec
jmp
mov
cld
leave
ret
out
arpl
xor
or
test
cmp
sti
out
divb
cmp
call
int
lods
xchg
adc
incl
cmc
outsl
adc
orl
add
lods
ljmp
jl
jnp
push
xchg
rcrl
dec
and
fdivp
xchg
sbb
inc
jecxz,pn
int3
outsb
xorl
xchg
nop
jne
dec
lock
sub
xchg
jl
sub
test
hlt
not
popf
orl
cli
aad
mov
test
push
lcall
cmp
pop
subb
cmp
sub
and
clc
jno
pop
mov
pop
add
in
aad
inc
and
movzbl
out
xchg
mov
adc
push
push
aas
xor
scas
sub
xorb
mov
insb
enter
xor
jae
clc
jno
std
outsl
imul
mov
sahf
add
sbbl
lret
js
pop
repnz
hlt
mov
jg
sbb
pusha
sahf
loope
lea
mov
sub
cli
xchg
daa
jns
dec
jns
xchg
xor
pop
xor
mov
jl
sub
and
movsl
xchg
sahf
jecxz
jecxz
add
jno
ficoml
aam
or
mov
bound
jbe
dec
and
push
mov
mov
xchg
jb
mov
repnz
repz
leave
dec
pop
mov
mov
push
mov
popf
into
pusha
jnp
jae
sbb
fstpl
cmc
popf
and
xchg
cli
lea
in
stc
mov
adc
mov
ror
xchg
push
sahf
pop
int
add
adc
mov
ljmp
sbb
and
popa
retw
xorb
inc
dec
test
dec
xor
mov
out
dec
sbb
lahf
ret
mov
mov
pop
jge
outsl
mov
incb
mov
insb
add
frstor
jmp
sub
adc
mov
std
sarl
pop
call
push
push
cmp
loope
aaa
xchg
mov
stc
bound
je
adc
mov
iret
sbb
sbb
and
bound
sarl
pop
or
inc
sahf
and
or
dec
daa
adc
push
jmp
and
adc
fistl
fistps
stos
dec
sbb
cmp
dec
arpl
jp
dec
cmp
xor
cmpsb
cmc
and
add
fcmovnb
fs
dec
int
int
xchg
mov
lahf
ftst
subb
cltd
jmp
inc
addb
ja
fadds
sub
test
ds
xchg
leave
lea
hlt
cmp
inc
in
inc
arpl
jmp
sbb
xchg
int
mov
adc
xor
add
cmpsb
inc
dec
cmp
je
xchg
sbb
pop
pop
push
subb
cmp
mov
jmp
adc
fsubr
mov
dec
andl
add
push
xor
or
mov
sbb
or
lret
mov
adc
and
and
repnz
shlb
insl
push
xchg
and
mov
lods
imul
in
loope
xchg
scas
insl
arpl
or
pop
sar
sbb
or
lock
mov
and
fbld
sub
mov
pop
fisubrs
aam
mov
inc
push
jb
popf
pop
pushf
and
fsqrt
cmp
sub
and
fidivs
xchg
jns
or
fimull
push
insl
ss
rorl
mov
enter
push
sti
outsb
mov
add
ret
jl
inc
shrl
dec
inc
cmpsb
int3
scas
cmp
shlb
mov
loope
sbb
xor
lock
dec
lods
fwait
movsb
mov
pop
cmpsb
pop
mov
popa
dec
js
outsl
cmp
ror
pop
outsb
mov
bound
jecxz
das
cmpsb
cld
cmp
sahf
pinsrw
or
push
jb
dec
mov
push
cwtl
hlt
add
and
inc
sub
clc
add
mov
fidivs
ret
and
rcll
imul
cli
xchg
inc
orl
js
jecxz
pop
inc
sub
insl
sub
and
dec
rolb
and
sub
add
fistpll
ror
inc
mov
push
sbb
lret
push
jnp
lret
mov
popa
or
movsb
adc
aam
fdiv
rorb
mov
mov
jecxz
inc
fdivl
mov
fdivrl
xlat
leave
mov
inc
imul
ret
add
shl
pop
sbb
imul
push
ficoml
mov
fistpl
push
pop
shll
mov
repnz
xchg
xchg
pop
cli
fadd
loopne
sbb
sbbb
sub
add
icebp
sub
dec
sti
or
mov
fwait
push
ret
fwait
dec
xchg
jmp
push
pop
jle
inc
pop
addr16
adc
shrb
cmp
mov
jmp
xchg
mov
pop
call
fstps
dec
inc
fldt
xchg
xchg
ror
scas
test
lock
andb
int3
popf
shrl
outsl
es
js
iret
lret
mov
fwait
cmpsl
xchg
cli
sbb
adc
adcb
ror
push
xor
mov
inc
aam
nop
rcrl
andb
addr16
pop
popf
aam
movsb
add
ljmp
or
fwait
jecxz
stos
sub
inc
jns
nop
mov
imull
cli
push
sub
pop
sub
fnsave
jp
popa
es
stc
loop
fists
in
adc
sbb
icebp
cmc
fsubrl
mov
xchg
imul
jne
add
clc
adc
roll
test
fcoms
xchg
std
fs
sub
lret
push
in
insl
inc
dec
cmp
mov
lret
pushf
popa
xchg
icebp
aam
lcall
arpl
jno
into
mov
in
scas
lahf
or
aad
mov
aad
movsl
je
mov
xchg
cmpsb
arpl
xchg
inc
daa
movsb
fcoms
jo
mov
rclb
add
out
adcl
xchg
fsubs
movsb
jo
xor
jp
cs
sbb
hlt
mov
cmp
inc
call
jns
jmp
mov
subl
xchg
or
leave
into
jns
pop
lods
xlat
add
push
push
inc
aaa
shrb
adc
cmp
push
iret
and
adc
lods
in
xchg
shl
stc
push
push
mov
inc
adc
sti
sub
jg
and
pop
inc
dec
adc
loope
sarb
stos
sub
subb
sbb
xor
stc
add
xlat
jnp
pop
js
fimull
out
neg
movsl
sbb
mov
hlt
jae
fisttps
mov
fsts
adc
add
mov
lahf
loopne
push
xor
outsl
adc
mov
cs
ret
mov
and
or
fistps
imul
addb
jecxz
data16
push
xor
mov
adcb
xlat
sti
out
ljmp
xor
dec
mov
xchg
ret
loop
lret
mov
mov
add
data16
mov
push
xchg
insl
lcall
inc
xor
mov
iret
xor
jle
ds
dec
lods
jae
mov
test
cmp
xorb
adc
leave
dec
js
out
dec
dec
popa
iret
arpl
jo
or
test
aad
jno
pop
lcall
add
lcall
xor
inc
xor
xor
les
cmp
testl
mov
cmc
fdivrs
xor
dec
dec
pop
lret
jge
pushf
jge
xor
mov
insl
pushf
nop
xor
arpl
stos
stc
ljmp
test
mov
out
jge
test
enter
add
lods
cmp
pop
add
pop
dec
add
xchg
sbb
jns
push
cs
int3
push
shrl
push
mov
cwtl
sub
jo
jb
lret
xor
pusha
cmp
ret
adc
cmpsb
adc
pop
callw
push
addr16
xchg
out
imul
pop
jg
lcall
lea
xor
fsubrp
mov
cld
fs
cmc
arpl
ret
popf
sbb
inc
aad
scas
sti
adc
xchg
int3
xlat
xor
rolb
mov
adc
je
mov
jl
mov
xor
mov
out
jo
xchg
cmp
bound
mov
or
fcomip
xlat
jmp
fisubrs
cmp
xlat
jbe
shl
in
jo
xor
je
nop
xchg
in
setns
imul
adc
xor
pop
xor
in
fwait
or
mov
imul
add
out
daa
std
mov
xchg
cli
hlt
mov
xchg
push
push
rcrb
cli
sti
scas
test
cmpsb
pop
cmp
scas
aaa
iret
outsl
mov
mov
lods
pop
into
sbb
subl
mov
out
cs
aam
or
sbb
mov
mov
mov
push
repnz
mov
mov
stos
add
movsl
ds
bound
aaa
fists
xor
mov
out
xchg
test
xlat
icebp
inc
xchg
stos
mov
subb
in
mov
xchg
add
mov
cmp
or
push
cmp
mov
movsb
lds
repnz
imul
xchg
out
jge
adc
and
sbb
push
leave
mov
mov
cmp
adc
mov
pop
hlt
jae
and
cmp
mov
xchg
sbb
mov
mov
bswap
sub
and
mov
pushf
stc
das
push
push
mov
flds
xchg
mov
lock
divl
xor
xchg
mov
es
sub
ret
inc
lret
adcb
repz
pop
pop
in
testl
jmp
sbb
jmp
or
mov
inc
aas
ja
mov
inc
mov
fbstp
inc
test
or
out
fnstsw
xor
sub
ja
dec
cmpl
movsl
in
lock
mov
cmpsb
sbb
sbb
ljmp
dec
aam
sub
ljmp
mov
enter
cmp
mov
pop
fprem1
xor
sub
mov
ja
mov
jmp
sub
mov
daa
in
pop
out
mov
test
sti
dec
add
movsl
in
in
and
mov
or
fwait
add
pop
outsb
stos
adc
iret
xchg
ljmp
test
sbb
mov
imul
imul
xlat
sbb
mov
mov
test
push
in
xor
outsb
cmp
xor
jge
push
or
jmp
subl
lea
movl
lods
ljmp
push
daa
xchg
cmc
and
in
xchg
adc
loop
data16
lock
mov
fwait
add
ret
enter
mov
into
xchg
testb
pusha
ret
dec
or
dec
int
bound
sub
jae
popa
inc
je
dec
enter
add
decb
or
mov
cmp
fsubl
in
out
scas
cmc
pop
cmpb
lock
fadds
popa
jmp
jg
mov
fimull
jl
pop
rcrl
and
pop
inc
lcall
out
dec
out
xchg
push
pop
inc
adc
shrb
in
jg
mov
sbb
pusha
lret
mov
sahf
hlt
push
loope
sbb
push
mov
xchg
repz
faddl
call
jbe
shll
mov
inc
pop
movsl
cmp
jb
adc
aad
lahf
out
or
xor
mov
pop
push
in
jmp
sbb
testl
ret
test
mov
cmp
mov
idivb
movsb
mov
loopne
dec
mov
popf
sbb
in
out
out
hlt
xlat
fdiv
push
lcall
neg
cmp
jns
lods
mov
hlt
aas
push
dec
popa
xchg
dec
loope
mov
xor
mov
push
mov
jp
mov
xlat
int3
pop
push
sbb
xchg
push
push
lcall
lds
adc
in
ja
adc
jle
cmpsb
sahf
mov
daa
lcall
imul
cltd
push
dec
push
mov
cs
in
xchg
or
nop
cli
dec
cmpsb
xchg
addr16
mov
inc
pop
push
jge
pop
mov
push
sbb
popf
out
je
lods
aam
mov
xchg
push
js
mov
jge
pop
ret
jo
stos
mov
ljmp
sub
mov
fsubs
push
fnstsw
dec
adc
mov
mov
bnd
xor
loop
ds
mov
sti
or
ljmp
shrb
pushf
inc
adc
add
jge
cmp
sub
mov
lret
cmc
xor
dec
push
insl
imulb
pop
and
pop
insb
jbe
cmp
fnstsw
mov
sub
sahf
outsl
ljmp
scas
lcall
sub
mov
push
stos
loopne
mov
out
repz
movsl
mov
and
push
mov
sbb
dec
das
scas
dec
pop
xchg
jmp
jbe
push
mov
imul
mov
insb
adc
inc
mov
push
sbb
nop
jb
and
cmc
insl
jb
add
je
daa
fsubrs
and
rcll
mov
push
xchg
shlb
mov
inc
test
leave
xchg
pop
ret
bound
sahf
jae
mov
test
mov
jecxz
mov
scas
mov
insl
iret
popa
xchg
imul
xchg
mov
out
or
pop
hlt
movsl
icebp
mov
mov
push
les
cmp
icebp
inc
rcrb
xlat
dec
cmp
push
loope
mov
setle
lea
inc
shlb
pop
cmp
cs
mov
xchg
fwait
mov
int
sbb
sahf
insb
mov
loop
push
dec
cltd
daa
and
cmc
shlb
pop
lods
sub
fs
inc
mov
sbb
sub
dec
push
inc
ficomps
loop
dec
loope
push
xchg
xchg
mov
push
sarl
cmc
pushf
inc
aad
jp
jmp
or
stos
add
pop
leave
add
int
jecxz
adc
in
fdivp
fwait
inc
sbb
jmp
roll
outsb
jmp
rcrb
dec
movsb
add
out
and
and
and
sub
mov
iret
cltd
inc
loopne
dec
dec
test
pop
cli
xchg
stos
dec
loope
and
pop
call
adc
xchg
ss
out
aam
fcompl
popa
lds
out
mov
dec
or
or
fadds
imul
push
add
ja
imul
cmp
clc
jle
add
adc
std
inc
cli
je
int3
adc
xor
mov
shr
mov
jbe
inc
mov
inc
inc
pop
loopne
pop
test
mov
push
repnz
out
mov
pop
pop
mov
outsb
rcll
cmp
aaa
add
lcall
lcall
mov
pop
adcl
scas
out
inc
dec
jmp
adc
push
jbe
bound
cmp
loopne
push
sub
or
jle
push
orl
test
add
jae
cmpsb
fldl
addl
jmp
mov
aam
lret
add
or
lock
and
and
fadd
jbe
or
pop
push
jge
and
icebp
outsl
cmp
sbbb
sub
dec
dec
stc
inc
pushf
andl
mov
call
push
dec
popf
cli
fs
daa
push
aas
hlt
pop
dec
adc
cltd
in
outsb
negl
mov
leave
inc
dec
pop
loop
js
xor
in
hlt
ja
pusha
adc
std
aas
subb
jecxz
or
movsl
sub
sbb
cmp
jg
mov
sbb
cmpsb
adc
pusha
repnz
jp
lock
aaa
test
cli
into
add
sbb
mov
mov
jmp
sub
xchg
imul
repnz
scas
mov
inc
gs
dec
lods
xchg
ret
mov
data16
enter
inc
mov
rcr
mov
je
out
jle
out
add
insl
sbb
mov
cmp
fcomi
mov
sahf
outsl
popf
ja
xchg
adc
sbb
sarl
push
mov
jbe
sbb
add
mov
dec
adc
ljmp
sti
dec
imul
jecxz
mov
xor
cmpsb
add
ret
outsl
sahf
sbb
add
mov
add
xor
out
lcall
movsl
rolb
loop
sahf
jg
adc
ret
orl
dec
xchg
push
std
test
pop
cli
mov
inc
xlat
in
dec
xchg
jl
inc
pop
sub
and
lds
mov
mov
fsubs
push
test
outsb
jns
xor
mov
xchg
sarl
jbe
stc
fadds
pusha
or
movsb
cmp
xchg
push
shrb
icebp
dec
xor
out
cld
loopne
mov
mov
ret
ret
xor
popf
push
inc
shlb
call
movsl
inc
or
pop
pop
ds
adc
js
push
repz
shlb
aas
push
add
cmpsb
clc
flds
lcall
jp
loopne
xchg
mov
les
jno
loope
mov
outsb
push
xchg
lds
movsl
sub
inc
out
xchg
out
data16
jne
outsb
sbb
adcb
cli
xor
ret
sub
cld
and
sbb
dec
in
imul
mov
mov
in
add
aas
and
adc
pop
insl
leave
repnz
icebp
cltd
sub
outsl
pop
outsl
add
or
shl
mov
mov
xor
xchg
dec
mov
pop
push
pop
mov
ljmp
pusha
shl
dec
lods
out
sti
pusha
adc
orb
adc
into
andl
push
dec
sub
push
in
lcall
mov
xor
jg
sbb
or
fbstp
mov
xlat
lods
mov
jge
fwait
insl
cmpb
pop
jno
insl
sbb
out
sbb
jae
test
sar
imul
fidivrs
pop
pop
mov
lods
jne
out
orb
je
push
dec
jmp
in
jge
aas
js
pop
lret
mov
mull
push
inc
sub
jecxz
push
mov
mov
pushf
dec
leave
mov
pop
add
pop
push
in
adc
mov
fstl
lods
lcall
in
lods
movsb
aad
orl
jge
fisubrs
outsl
sub
sub
xchg
sti
std
cwtl
pop
mov
push
shll
cwtl
fucomp
loopne
mov
cmp
or
adc
fld
pop
fistl
inc
mov
xchg
xor
and
xchg
pop
push
push
ds
enter
sub
xlat
add
iret
frstor
flds
lds
lods
shrb
inc
jp
es
and
pop
inc
sub
sarl
and
lahf
sti
popa
adc
or
in
inc
xchg
xchg
stc
stos
lret
or
lods
push
std
shlb
xor
push
xor
ja
add
cltd
iret
cwtl
add
jne
lret
pushf
mov
inc
adc
cli
mov
test
hlt
popf
jmp
out
jp
test
inc
lret
cld
jmp
cmp
hlt
jmp
scas
sub
in
or
mov
js
out
imul
lcall
fdivl
arpl
lahf
shl
sub
fldenv
inc
je
mov
mov
iret
out
add
fsincos
push
xor
inc
sar
aad
lock
outsl
loop
imul
mov
xchg
addr16
cwtl
mov
or
inc
js
push
cmp
lods
sbb
jo
cltd
das
scas
jmp
hlt
jns
cltd
inc
shl
pop
data16
jo
ds
cltd
addr16
pop
inc
push
shr
add
lahf
jl
adc
scas
rorb
sbb
xchg
movsb
xchg
pop
push
sub
les
je
mov
dec
repz
lds
cmp
mov
js
or
sbb
pop
arpl
push
inc
shrl
ret
mov
cltd
mov
bound
cltd
mov
xchg
ficoml
push
push
jae
adc
or
inc
mov
aad
xor
sbb
pop
jo
xor
xchg
je
sbb
testb
mov
dec
jle
cmp
pop
das
jb
xor
cmp
repz
push
mov
push
jnp
xlat
popf
sub
daa
movsb
adc
sbb
xchg
mov
or
adc
rep
aaa
stos
dec
nop
xchg
mov
stos
fistps
test
xchg
cli
jnp
inc
mov
cmp
or
mov
xchg
mov
out
outsb
mov
pop
cwtl
inc
push
shlb
fmul
mov
in
jmp
aaa
cwtl
adc
add
cmc
xchg
divps
repz
les
fucomi
xchg
jnp
lcall
jno
shl
jns
ja
jno
pop
mov
loop
jo
xchg
sbb
jae
lahf
push
xchg
ficoms
js
jl
adc
cs
inc
cli
fidivrl
stos
mov
cmpsl
inc
mov
dec
sub
decb
aas
jp
ret
lock
cmpsb
dec
jl
mov
jmp
pop
ret
jecxz
jle
in
xor
xlat
xchg
xor
xchg
les
sub
mov
xchg
in
push
lcall
mov
ljmp
cmpsb
ja
inc
mov
sub
lods
mov
pop
mov
push
cmpsl
sub
or
push
jnp
xchg
xor
jmp
or
inc
fisubrl
movsb
in
scas
mov
cmp
sahf
lock
mov
and
cmpb
sbb
sub
fcoml
in
or
xchg
fucomip
jbe
push
fisubl
ret
mov
test
je
lods
or
xchg
push
jmp
out
sub
faddl
and
mov
push
fdiv
adc
add
mov
push
jg
push
sbb
stos
ret
xchg
pop
dec
js,pn
mov
cltd
sarl
sbb
pop
xor
jecxz
mov
popa
lret
sbb
push
mov
xchg
or
mov
imul
loope
call
mov
push
sub
sub
mov
mov
xchg
imul
into
sub
jp
imul
and
or
dec
mov
push
adc
adc
std
lret
mov
mov
inc
aam
out
jmp
insl
pop
and
lahf
push
push
adc
or
in
pop
xchg
adc
push
inc
je
cmp
shrb
cmc
jno
xchg
xor
test
add
andb
sub
subl
sub
bound
and
inc
add
out
push
xchg
jne
sbb
shl
lcall
add
outsb
mov
bnd
in
cmpsl
jmp
cmpsb
mov
xor
and
pop
cmpsl
loopne
in
das
xchg
cld
inc
ret
dec
and
pop
into
fs
jns
in
cs
xor
popf
mov
pop
inc
lds
lret
shrl
insb
outsb
mov
mov
pop
cld
sub
adc
scas
mov
insl
lret
xor
aad
cmp
or
nop
loopne
xchg
sub
jb
mov
mov
inc
out
popa
sbb
repnz
mul
xchg
push
add
pop
in
pop
dec
push
dec
xor
xor
aas
mov
ffreep
lret
adc
test
cmp
and
sbb
frstor
movsl
and
mov
xchg
shll
adc
cmpsl
mov
cmp
fisubl
out
jecxz
mov
lods
jns
fwait
in
jno
data16
pop
dec
push
in
or
xchg
jmp
mov
pop
js
add
movsl
mov
mov
mov
pop
cs
pop
out
push
loope
jnp
sub
js
jmp
nop
add
mov
loop
adc
pusha
lods
dec
mov
push
jno
xor
push
sbb
fiadds
mov
fistpll
testl
leave
mov
ret
xor
jno
out
xchg
xor
dec
inc
icebp
inc
ss
push
pop
divb
mov
clc
outsl
clc
rclb
outsl
fs
les
push
jecxz
push
lock
pop
addr16
orb
lahf
in
xchg
into
or
psubd
cltd
test
call
inc
sbb
test
lret
and
and
ret
fisttpll
mov
test
cli
gs
inc
arpl
test
inc
fnstsw
lea
xchg
xchg
inc
cmp
insl
lahf
popa
jmp
xchg
out
sub
scas
pushf
lahf
cmc
mov
jp
fstl
cmp
xchg
sbb
std
mov
aad
xor
ret
cltd
repz
rcl
arpl
sbb
cs
sub
pop
imulb
lods
pushf
or
cwtl
notl
push
pop
mov
mov
insb
and
mov
xor
pusha
sbb
pop
mov
ja
dec
leave
jnp
inc
test
dec
je
jnp
and
mov
xchg
pop
loope
idiv
imul
cmpsl
sub
adc
sub
sub
shr
push
mov
test
mov
jae
mov
inc
cwtl
sub
or
daa
pushf
xor
lret
add
inc
sub
jo
lahf
mov
leave
mov
sub
pop
jbe
adc
cmp
sbb
mov
mul
mov
js
scas
sahf
pop
outsb
xchg
xchg
loopne
mov
pop
aaa
mov
pop
mov
adcl
xchg
xor
pop
fisttps
dec
push
mov
shll
shrl
jb
pushf
out
pop
insl
pusha
xor
aam
mov
clc
lea
xlat
aam
or
inc
ffreep
mov
into
pop
xchg
sbb
push
mov
pop
rcrb
cmp
fs
outsb
and
repnz
ljmp
adc
inc
inc
inc
jecxz
push
sub
sahf
sbb
dec
lcall
jo
lcall
mov
mov
cli
or
mov
sub
cmp
mov
idiv
jne
jne
pop
outsl
inc
fiadds
sbb
je
dec
and
adc
mov
subl
iret
mov
cmpsb
stos
lods
xchg
rcrb
js
sbb
popa
dec
mov
push
dec
nop
or
adc
shl
jmp
jecxz
fidivrs
pop
push
push
fcomp
cmpb
xchg
lcall
mov
jno
cmp
filds
xor
push
cmpsb
cmp
fadds
sbb
sbb
lods
divl
int3
in
xor
dec
ret
lcall
ret
shlb
mov
rcl
shll
inc
push
mov
and
inc
outsl
cmp
dec
mov
fistl
stos
insl
hlt
fdivrs
outsl
lcall
cmp
mov
movsb
nop
loop
adc
into
pop
mov
lcall
lcall
jne
push
mov
orl
decl
pop
adc
mov
inc
jmp
inc
sahf
push
mov
lods
ljmp
xchg
push
nop
mov
xor
pop
jmp
fimuls
pop
mov
or
cmpsb
cmp
mov
inc
lcall
cli
fistl
inc
sbb
and
les
sub
adc
sub
pop
adc
andb
jecxz
xchg
xchg
xor
xchg
mov
jno
mov
adc
test
cmpsb
xchg
test
cmp
bound
jnp
push
xor
icebp
cmp
pop
pop
or
jmp
flds
jb
mov
dec
add
out
enter
cmpsl
pop
test
inc
cltd
push
adc
jle
lret
movsb
int3
pusha
mov
out
pusha
add
test
fnstcw
jecxz
push
stos
mov
out
cmpl
ljmp
lds
adc
icebp
cmpl
leave
dec
scas
cmpb
arpl
test
mov
xorl
dec
or
into
fcompl
icebp
jae
pop
xchg
imul
inc
lds
fcmovne
aas
jp
adc
and
pop
ds
inc
jmp
xor
dec
cmpsl
push
and
stos
fistps
sbb
out
imul
js
sti
into
shrl
into
adc
adc
push
mov
sbb
jne
mov
and
mov
pushw
jle
and
jae
inc
aam
outsb
lea
pop
fcompl
mov
das
or
shr
insl
add
fcoms
adc
or
sbb
cmp
cmp
lret
fnstenv
fidivl
jle
mov
imul
add
movsl
and
rcrl
flds
ss
addl
cmp
adcl
out
fisttpll
out
xor
cwtl
mov
xor
pop
aad
push
lock
mov
jmp
sbbb
movsl
jb
mov
adc
popf
sbb
push
cmp
and
and
sub
cmp
mov
testb
adc
int
iret
adc
fistpll
movsb
scas
notl
stc
and
jmp
ret
lods
mov
dec
sbb
adc
or
sbb
fldcw
sbb
sbb
addr16
aas
insl
ficoml
or
inc
mov
jb
push
xchg
sbb
lock
jns
js
mull
shlb
pop
jg
outsl
bound
push
popa
fwait
dec
cmp
sarl
sub
pushf
imul
mov
mov
pop
popa
xor
sub
pop
and
inc
jbe
jae
jae
jbe
test
mov
mov
loope
out
fadds
cmp
dec
pop
out
dec
lcall
lahf
rol
dec
mov
stos
outsl
dec
cli
sub
cltd
push
mov
jge
pop
xchg
int3
bound
call
mov
or
lds
or
cmovp
adcb
lret
inc
push
daa
and
sub
push
or
add
push
lods
notb
push
loope
adcl
ss
shrb
fsubl
out
addb
xchg
cmp
sub
test
add
loope
inc
orl
xchg
mov
aad
add
or
mulb
pop
test
fstp
xchg
or
jae
mov
pushf
sbb
xor
push
psrlw
xchg
aas
faddl
jns
fadd
adc
mov
out
xchg
call
push
ficoml
fcoml
ljmp
subb
and
lret
jae
pop
and
pop
mov
pop
dec
mov
adc
jl
adc
arpl
jp
jge
pop
sub
push
add
or
in
dec
mov
test
fistl
push
inc
cmp
scas
add
mov
xor
incb
jp
imul
scas
arpl
psubw
stos
pop
push
icebp
jecxz
mov
jp
int3
popa
test
cld
cwtl
inc
jg
sub
dec
pushf
or
lods
sub
hlt
sahf
sub
lods
loope
fs
dec
jge
adc
push
mull
out
mull
push
aas
shll
sbb
sbb
cmpsb
stos
stos
std
xchg
pop
inc
pop
enter
sarl
imul
jle
push
inc
sbb
pop
sub
aam
ja
rol
mov
in
mov
test
cmp
fists
pop
jp
mov
cmpsb
inc
loop
dec
sbb
jnp
js
push
loope
mov
add
sbb
stos
and
imul
cmovno
lret
lcall
mov
out
cli
sbb
cmpsb
hlt
inc
mov
pop
daa
das
xchg
fildl
add
icebp
jne
divb
push
pop
push
adc
sbb
and
adc
rolb
push
stc
push
in
dec
push
dec
adc
das
mov
inc
xchg
fimuls
push
add
or
ret
fwait
push
jmp
push
std
inc
mov
xor
sbb
in
dec
shlb
and
pop
pop
cmp
or
loopne
imul
mov
roll
shl
hlt
xchg
push
xchg
dec
pop
in
sarb
mov
lock
enter
rcll
aad
gs
jnp
xor
mov
dec
xchg
xchg
fisubrs
lods
adc
xchg
dec
stos
mov
cmp
lock
adc
add
into
mov
stos
adc
dec
enter
pinsrw
mov
xor
push
xor
sub
xor
leave
mov
jmp
fisubs
mov
inc
cmpsl
loopne
fs
adc
sub
pop
test
mov
imul
in
push
sub
ret
xchg
dec
clc
mov
rcl
or
inc
mov
lods
push
adc
inc
popa
arpl
sti
sbb
cmp
add
pop
cmp
sub
push
fdivl
push
push
jle
aaa
sub
mov
adc
mov
mov
xchg
sub
fildl
int3
iret
fimull
jns
lods
adc
daa
and
and
inc
mov
imul
inc
pop
xorl
loop
xchg
bound
outsl
or
and
add
stos
mov
cli
test
addr16
sbb
ss
adc
mov
sbb
add
lahf
ret
adc
push
sarb
jecxz
cmp
mov
sbb
js
jmp
out
push
les
cmp
lcall
adc
sub
inc
rcrb
jle
lods
nop
repnz
xchg
sub
fptan
jb
inc
xor
int3
dec
stos
pop
and
lods
mov
scas
inc
lea
sub
mov
inc
dec
jbe
pop
lods
mov
jo
sarb
jo
leave
mov
clc
bound
aaa
arpl
mov
inc
pop
les
and
cmp
lahf
xor
rcrl
fildll
dec
xor
std
inc
xchg
outsb
dec
mov
stos
and
pop
jl
iret
std
jp
pop
cmp
mov
cld
pop
testl
inc
add
dec
lods
jnp
mov
shrb
and
icebp
push
xchg
jns
sub
cmp
stos
and
cmpsb
enter
dec
lret
push
cwtl
inc
lods
push
arpl
push
fstps
xorb
xchg
jmp
mov
mov
scas
aad
ret
subb
mov
fs
ret
push
icebp
mov
orl
sub
mov
lock
std
je
fldt
xor
mov
ss
pop
and
xchg
arpl
inc
add
loopne
jno
sbb
push
popa
and
cmc
mov
dec
dec
inc
jno
leave
jg
push
bound
xlat
in
lds
sub
mov
int3
into
cmp
movsb
or
or
dec
add
jl
mov
in
cmp
decb
fs
jmp
inc
fnstenv
lods
push
fadds
jmp
arpl
sbb
call
movswl
std
xor
mov
adc
mov
cmp
xchg
lods
pop
jo
adc
daa
cmpsl
mov
dec
push
lds
or
mov
cmp
xchg
push
cwtl
mov
lods
adc
aaa
out
imul
mov
and
cmp
insl
popf
pop
mov
loopne
cmpsb
ret
lahf
pop
mov
je
addr16
sbbb
push
stc
cmp
cmp
repnz
sbb
std
jp
aas
adc
jl
les
inc
js
or
pop
push
mov
sbb
out
dec
imul
mov
sbb
xlat
movsb
or
adc
movsl
in
xor
push
das
mov
jecxz
ja
std
cmp
daa
ss
sbbl
loopne
lret
mov
jo
popf
sub
cld
adc
aas
xor
jge
fldcw
dec
and
pop
dec
stos
dec
out
scas
fstl
addr16
fld
mov
js
jo
and
dec
test
repnz
enter
filds
xchg
addr16
mov
enter
mov
test
les
stos
jge
call
mov
imul
xor
imul
in
roll
out
movsb
arpl
jbe
add
xchg
sub
ja
or
in
mov
jnp
fldenv
add
or
pusha
mov
cmp
and
daa
lret
mov
push
nop
movsl
daa
ljmp
test
mov
jp
gs
pop
int3
lret
out
shll
movsl
dec
or
mov
movsb
push
stos
xor
pushf
pop
mov
out
push
aaa
xor
mov
pop
dec
in
nop
imulb
mov
jo
shrl
lods
popa
out
xor
or
mov
sub
rcrl
sbb
cmpb
enter
mov
push
test
push
xor
cli
jne
mov
xor
decb
and
xchg
enter
adc
cmpsb
stc
xor
jb
aas
add
aam
dec
loop
add
mov
cmp
cmc
rclb
push
into
dec
jns
test
out
or
xor
loope
and
adc
bound
dec
mov
jo
mov
test
out
xor
xor
xor
and
bnd
out
adc
outsb
pop
pop
test
data16
jmp
xor
cld
stc
inc
subb
inc
or
push
pop
adc
mov
mov
into
cwtl
outsl
jmp
imul
fsubrl
cmc
and
out
mov
sbbl
adc
test
movsb
loope
decb
adc
loop
mov
stos
aaa
inc
cmp
and
mov
push
dec
mov
outsl
push
push
xchg
push
add
inc
cld
pusha
popa
jbe
xor
lret
sbb
icebp
loope
and
mov
ret
out
pop
mov
push
das
or
push
mov
repz
gs
push
or
daa
lahf
icebp
je
dec
xor
adc
shlb
movsl
sub
stc
out
cmpsl
dec
outsb
outsl
nop
das
das
idivl
loopne
mov
je
cmpsb
cwtl
fldcw
mov
cmpsl
loop
aas
adc
jle
jg
outsb
nop
scas
cmc
cmpsb
test
out
test
push
mov
insb
lea
sbb
inc
in
ret
or
mov
and
stc
daa
push
pop
loop
xchg
sbb
in
adc
jmp
aas
cmpl
insb
adc
in
js
notl
addl
imul
inc
adc
nop
push
xchg
movsb
sub
rcrl
push
mov
loop
popf
adc
add
and
lret
mov
dec
lods
push
lock
push
imul
pusha
cmpsl
roll
and
fsts
pop
xor
pop
and
test
xchg
sbb
dec
repnz
inc
cmp
shl
mov
sbb
dec
ss
imulb
andl
mov
bound
mov
sbb
daa
fs
jecxz
adcb
dec
cmp
addl
mov
shr
jne
dec
jae
iret
pop
cmp
xor
cmp
jae
in
xor
mov
cmp
std
lcall
inc
in
add
push
jno
lret
sbb
sarb
push
fs
pusha
scas
add
sub
pushf
xchg
xor
dec
lret
cmpl
mov
lret
stos
xchg
cwtl
sub
in
aam
fdivs
cltd
bound
fwait
push
adc
ds
push
test
into
or
sbb
dec
cmc
lea
popa
inc
pop
ja
outsb
push
fwait
push
jg
mov
jg
pushf
push
decl
dec
mov
stos
into
pop
inc
xor
sub
mov
adc
loop
or
xchg
jbe
push
xorb
mov
add
xor
scas
mov
mov
ror
repz
mov
mov
and
jge
dec
jo
xor
sub
mov
rcrl
jns
call
jb
popa
stc
gs
jl
jmp
scas
cmp
in
cmp
mov
jnp
mov
or
loopne
mov
dec
sarb
out
jmp
aaa
cmp
push
outsl
pushf
repnz
inc
push
aaa
fbld
xchg
bound
data16
xor
dec
test
cmp
sbb
sbb
rcl
test
aaa
aaa
nop
pushf
push
mov
nop
push
repz
mov
push
fstps
adc
loop
push
mov
arpl
xor
inc
out
xchg
mov
std
push
loopne
jno
cwtl
sbb
call
or
fwait
add
mov
push
ret
outsl
in
sbb
sbb
pop
xchg
and
cmp
mov
add
push
dec
ja
add
mov
cs
pop
cmp
mov
jb
push
fsubp
outsb
sbb
add
cld
pushw
fisubrs
adc
mov
leave
dec
sbb
and
icebp
adc
stc
adc
outsl
shrl
pushl
xor
push
ret
loope
jg
in
inc
je
xabort
movsb
or
adc
call
add
aaa
sbb
mov
or
mov
xlat
inc
mov
push
push
dec
lds
lret
mov
setg
cli
sub
int3
inc
mov
pop
cmp
mov
sub
pop
out
stc
xor
xchg
jecxz
ret
cmc
scas
leave
cmp
pop
jg
mov
stc
and
sbb
fcom
mov
inc
cltd
aad
add
hlt
push
xor
mov
cwtl
popf
sub
add
pop
in
lcall
dec
sub
mov
inc
mov
int3
adc
dec
pushf
in
sub
mov
test
inc
clc
adc
jmp
add
and
xchg
adc
jbe
imul
pop
jnp
int3
mov
sbb
dec
cld
and
jmp
jg
mov
xor
sub
outsb
cmp
sub
ds
xor
xor
push
notl
xchg
push
sbb
hlt
lcall
mov
daa
push
ljmp
dec
jnp
or
dec
pop
out
or
popf
push
mov
clc
idivl
out
std
fwait
dec
dec
cmp
add
fisubrl
dec
mov
call
adcb
fs
stos
test
scas
adc
lea
mov
fs
add
lods
nop
in
cli
adc
das
or
not
mov
jge
or
pop
lock
sbb
iret
popf
and
fstpt
fadd
or
sub
movsl
mov
add
lret
dec
xor
and
mov
push
vmaxps
pop
pushf
out
pop
inc
pop
dec
xchg
and
jnp
nop
ficomps
mov
jnp
in
lds
sub
sbb
mov
dec
movsb
jb
jo
mov
icebp
mov
jae
ret
mov
lcall
pusha
mov
sub
sbb
movsb
sub
mov
jae
out
lods
push
clc
and
inc
mov
hlt
dec
push
jbe
pop
scas
lcall
cli
mov
in
mov
dec
scas
mov
lret
dec
ret
inc
dec
test
lcall
loop
js
sub
flds
pop
mov
arpl
jb
dec
or
push
orb
icebp
xchg
lds
mov
jl
out
addr16
xchg
push
pop
pop
popa
sti
vmwrite
mov
xor
cmc
push
mov
cli
mov
jb
scas
xchg
cmp
xlat
mov
mov
cltd
pusha
js
dec
mov
les
ljmp
in
push
lods
call
dec
xorl
mov
xchg
call
loopne
ja
lahf
lcall
in
pop
pop
pop
jne
addr16
push
sub
in
dec
aas
push
test
lods
lods
pusha
insl
inc
push
jno
jp
mov
enter
in
sti
or
adc
pop
int3
js
jno
mov
ficoml
fmuls
xchg
mov
cmpsl
imul
inc
jo
test
dec
test
inc
add
je
shlb
lods
push
fsubl
xor
push
xchg
cmc
pop
and
imul
and
pop
mov
into
ss
jl
lods
sub
add
ficomps
cwtl
cmp
stos
sbb
add
daa
mov
aas
cltd
fwait
inc
cmp
data16
mov
fcom
rolb
inc
std
clc
into
lret
imul
clc
mov
in
or
pop
inc
fs
scas
adc
or
popa
cld
push
mov
fildl
fistpll
adc
push
cli
push
add
cmp
adc
lds
jge
andl
je
jmp
jg
push
fs
push
or
fsubl
sahf
in
cmp
ret
das
push
cmp
pop
cli
xchg
add
nop
addr16
lea
pusha
push
js
xlat
out
push
sarb
xor
stos
int3
or
and
mov
jmp
dec
imul
pop
mov
cmp
xor
mov
std
xchg
xor
das
in
inc
jmp
adc
mov
movsb
sahf
or
cmp
shll
inc
sahf
sub
add
xor
pop
cmpsb
adc
sub
mov
shll
mov
not
mov
push
xchg
rcrl
ret
sub
push
push
xor
pusha
ret
shr
shrl
fsubrs
add
add
test
je
mov
mov
inc
mov
cmp
out
aam
mov
lds
test
in
jo
in
jne
pop
jge
inc
ja
paddq
fisttpl
cmpsl
imul
leave
jbe
pop
cli
fcmovnu
subb
jl
std
pop
jmp
out
pop
xchg
repnz
jp
test
xor
cld
mov
pop
jno
xor
pushf
jne
jns
adc
in
int3
sbb
ret
jmp
push
in
dec
push
es
or
mov
or
dec
cmpsl
aad
jnp
scas
xchg
or
sub
xor
cmc
in
xchg
popf
lds
repnz
iret
js
lea
xchg
sahf
mov
pop
insb
cmp
cltd
add
add
loop
push
lahf
mov
inc
mov
cmpsb
inc
mov
inc
aad
lahf
movsb
inc
stc
aam
add
adc
cwtl
fs
dec
orl
aam
push
sti
mov
cmp
test
call
movsb
test
into
bswap
popa
jl
jmp
and
test
insb
xchg
pop
xchg
pop
out
xchg
call
cmp
mov
scas
cmpsb
fsubl
mov
ja
out
faddl
out
gs
int
mov
out
sbb
testl
ret
fimuls
mov
das
jns
dec
dec
mov
das
xlat
mov
mov
iret
loop
shll
pop
mov
cli
flds
mov
push
mov
add
jbe
jmp
pop
sbb
xchg
sbb
call
dec
pushf
lret
data16
sbb
or
pop
enter
fstpt
mov
gs
jge
dec
cmp
pop
cmp
push
pop
cld
pop
nop
in
push
fcoml
pop
cmp
mov
pop
pop
xor
dec
fcoml
lahf
testb
out
adc
cwtl
cmpsl
cmpsl
dec
loope
mov
jp
mov
mov
jp
push
fisttps
mov
mov
mov
add
test
cmpsb
sub
mov
add
pop
cmp
mov
sbb
je
out
shll
cld
jmp
mov
cli
fdivrs
add
sbb
xor
push
jge
leave
push
cs
xor
stc
pushf
in
fsubrp
or
fcomip
xor
adc
jle
push
mov
fidivrs
bound
paddb
jecxz
into
mov
clc
leave
rol
stos
div
cmp
inc
xchg
addr16
fs
sub
push
cmp
mov
sub
cltd
jns
sbb
jge
xor
dec
mov
out
mov
stc
aad
pushf
jg
sbb
mov
bound
std
lods
xor
mov
add
out
mov
fdivrl
xor
pop
push
jmp
test
xchg
sbb
xchg
sbb
bound
add
sbb
arpl
nop
sbb
push
jl
cld
inc
cmp
jb
stos
fcoml
arpl
pop
and
xor
adcb
sub
mov
pop
je
jbe
or
lret
stos
fidivl
leave
jecxz
sub
in
dec
int3
cmp
insb
inc
pop
mov
fisubrl
pop
mov
into
lock
or
clc
out
add
fisttpll
rorb
mov
push
pop
jb
xchg
mov
mulb
mov
adc
fstps
ds
mov
addr16
jg
movsl
out
ljmp
cmp
lret
fwait
jmp
sarb
rcrb
pushf
in
aas
fistl
repz
int3
adc
cld
sbb
dec
rolb
push
adc
mov
jmp
jns
sub
mov
lahf
shll
daa
sbb
call
inc
or
and
ror
repz
fnstenv
push
stos
mov
das
push
idiv
and
insl
mov
idivl
add
jne
test
cltd
std
ds
scas
jns
push
and
out
xchg
mov
roll
jle
sbbb
adc
xchg
rcll
and
dec
pop
inc
data16
or
aaa
shll
lret
push
xchg
pop
sub
repnz
jno
jns
lret
shlb
jbe
insb
dec
icebp
sub
push
sub
and
pop
test
mov
jle
mov
sti
inc
aaa
test
jb
xchg
pop
inc
xchg
pop
sub
xor
sub
ljmp
sbb
out
in
sub
jmp
push
and
aaa
repz
inc
xor
mov
sbb
call
adc
pop
fnsave
jl
repnz
orb
imul
jp
and
icebp
xchg
cmp
mov
dec
js
notb
sahf
adc
cmp
push
test
ret
movsl
out
sbb
out
hlt
pop
iret
popf
sbbb
or
pushl
xor
inc
sub
mov
mov
mov
lods
test
xorb
cmp
or
xor
in
sahf
push
out
arpl
bound
movsb
outsl
dec
mov
mov
das
ret
bound
lds
mov
gs
jb
sbb
stc
xchg
nop
popf
dec
mov
and
mov
not
push
arpl
ja
push
mov
pushf
jb
out
int
mov
jecxz
xlat
lahf
and
or
cmpsb
data16
add
mov
push
push
pop
sub
js
pop
sbb
push
sub
pop
or
mov
lea
mov
inc
mov
stos
std
xor
pop
and
mov
cmp
fidivs
leave
pop
rcrb
add
ds
push
je
jo
xchg
int
dec
cmp
fisubrl
or
add
mov
out
flds
out
adc
lds
add
cmpsl
cwtl
fldl
xor
fdivs
stos
lds
scas
rcl
in
mov
push
push
and
dec
xchg
fldt
clc
loopne
pushf
and
mov
mov
dec
int
pop
mov
fcmovne
push
neg
xchg
loope
popf
inc
jle
loope
loop
insb
xchg
enter
icebp
rclb
int
pushf
cmp
xchg
fsubrp
cmp
pop
lds
cmpsl
mov
mov
movsb
cld
jae
cld
movsl
mov
insl
mov
adc
or
ljmp
xchg
loopne
mov
pop
xor
fisttps
mov
dec
out
xchg
and
mov
ds
pop
pusha
and
jle
andb
lret
push
push
add
mov
je
out
push
filds
pop
or
shrb
ret
add
pop
mov
daa
jns
sub
pop
dec
add
addr16
scas
pop
or
mov
lcall
mov
mov
mov
ss
push
mov
jmp
mov
stos
push
and
adc
outsl
popf
enter
clc
xorl
jle
lcall
into
daa
aad
adc
inc
add
add
into
mov
inc
xor
mov
cld
mov
inc
scas
jmp
cltd
lcall
adc
add
adc
addr16
jge
ret
xlat
shl
mov
push
or
adc
cmp
or
cmp
lods
push
push
mov
pusha
sbb
push
rcrb
jae
xchg
jecxz
mov
or
ljmp
cli
or
mov
rorb
fistpl
mov
mov
jb
stos
cmpsb
lds
push
push
and
dec
out
iret
pop
pushf
or
loop
xchg
xchg
jl
mov
setbe
push
push
or
fiadds
sub
jg
shlb
sub
iret
imul
mov
leave
inc
lcall
scas
out
mov
add
das
out
sbb
adc
and
mov
int3
and
shll
inc
pop
and
insl
cmp
je
mov
andl
jmp
cltd
fld
mov
push
movsl
stos
inc
out
js
jns
inc
add
or
pop
lea
jge
nop
lods
ljmp
mov
rclb
aas
jmp
rorb
push
dec
ljmp
and
cmp
test
ja
clc
lods
test
rep
mov
shll
sub
jo
rorb
adc
lcall
add
adc
inc
stos
cli
lcall
push
cwtl
xchg
fptan
fbstp
cmp
lds
cwtl
clc
jno
dec
push
push
shlb
cltd
push
or
mov
gs
dec
cld
sub
in
adc
rcl
cmc
scas
pop
ss
insb
inc
ret
and
jg
add
aam
inc
pusha
sbb
sub
inc
fldcw
or
out
lods
jno
pop
dec
sub
adc
and
lods
mov
push
pop
insl
dec
cmpsb
mov
das
xchg
xor
inc
notb
xchg
ja
xchg
sbb
pop
fisubrl
inc
push
dec
sub
jecxz
xchg
adc
scas
in
imul
cld
xor
loopne
cwtl
aaa
dec
lds
pop
push
xchg
call
pop
lcall
das
cld
dec
jae
ret
test
aad
inc
cmc
out
nop
cmp
imul
divb
mov
shlb
lock
and
sub
dec
inc
ljmp
lods
push
sub
lret
or
in
dec
hlt
aas
stos
push
xchg
mov
and
imul
loopne
xor
pusha
sub
mov
and
test
jmp
ljmp
cmp
lods
jmp
xchg
xor
cmp
jp
ds
cli
popf
inc
push
cld
push
jge
repz
daa
add
push
test
mov
cmpsl
mov
cmp
mov
pop
in
sub
in
sahf
cmpl
push
rolb
sahf
ljmp
and
inc
lahf
mov
ret
movsb
xchg
jnp
ficoms
add
sub
js
popf
mov
bound
in
dec
xor
pusha
stc
xchg
sub
mov
mov
addr16
outsl
cwtl
jo
fsts
push
add
ja
mov
mov
jl
jae
mov
jg
test
inc
test
imul
bound
dec
dec
jge
dec
and
lds
pop
movsl
adc
mov
shr
shll
adc
pop
add
or
jno
aad
inc
cmp
sahf
pop
dec
jbe
mov
mov
inc
test
mov
fwait
pop
addb
les
xor
push
fistpl
mov
int3
inc
pop
icebp
jg
fists
xor
fwait
xor
pop
mov
ret
xchg
pop
or
enter
lret
data16
out
das
pop
push
mov
fcmovu
pop
jmp
push
xchg
push
xor
pop
lods
iret
dec
xor
xchg
leave
jle
scas
sbb
call
cmpsb
mov
pop
xchg
cmp
and
add
jnp
out
inc
gs
test
enter
jg
mov
mov
ss
jb
mov
inc
in
inc
cmp
sub
nop
mov
stos
gs
out
pop
pop
jmp
mov
faddl
xchg
int3
dec
mov
sbb
popf
pop
add
lds
fmull
push
dec
add
mov
add
stos
popl
adc
stc
push
mov
push
jmp
gs
adcb
cmp
sahf
pop
aam
fistpll
jl
shll
jbe
push
mov
fists
push
out
mov
insl
or
lods
and
rorb
aam
mov
jge
jg
xchg
loope
call
pop
je
push
sysenter
dec
fisubs
mov
mov
push
jno
daa
adc
aaa
cmpsl
jle
jmp
sahf
mov
test
or
lret
sbb
in
push
sub
or
ret
and
sbb
dec
sti
cmp
fs
inc
in
xchg
dec
in
push
sbb
and
fstpl
ja
mov
stos
jg
add
into
sub
call
daa
sbb
adc
xchg
jle
pop
mov
jns
add
fstpl
bound
cmpsb
mov
xchg
and
lahf
pop
jmp
popa
outsb
or
loope
cmpsb
push
push
add
lock
inc
cld
dec
inc
dec
cmp
aad
sub
jns
pop
push
data16
xor
lret
sbb
outsb
sbb
addr16
je
sub
cltd
clc
inc
cmp
rorb
jnp
test
jl
jns
dec
lret
jns
aam
mov
pop
icebp
add
cmpsl
push
rorb
adc
paddd
adc
out
insb
push
movsl
aaa
and
stos
mov
lock
push
sub
add
fnstenv
cwtl
loope
daa
dec
adc
or
in
pop
or
sarb
jnp
xor
cmc
leave
ljmp
in
xchg
xorl
vmovaps
test
jp
xor
inc
xchg
dec
shrl
and
or
pop
push
pop
lea
mov
cmp
pop
in
pop
push
and
jl
add
add
clc
sbb
push
scas
push
sbbl
mov
ret
adc
test
cmp
decl
pop
or
or
sub
sarl
repz
jge
mov
mov
cmpb
call
and
cmpsb
inc
ja
daa
xchg
sbb
fildll
insl
jb
xchg
lret
cli
jecxz
xor
roll
add
mov
bound
leave
cmpsl
nop
in
sbb
mov
push
lds
out
movsl
push
sub
test
fmuls
inc
jecxz
and
icebp
jg
ss
jl
roll
das
cmp
mov
test
pop
popf
stos
test
outsb
jne
inc
add
sbb
sti
testl
xchg
sbb
push
je
daa
xchg
dec
push
mov
and
mov
pop
adc
mov
fxch
insl
bound
je
insl
fs
fildll
sbb
andb
pop
repz
mov
test
mov
sub
test
or
mov
inc
cltd
or
bound
xchg
mov
push
mov
or
jg
enter
test
add
cltd
mov
push
or
shlb
and
fwait
jbe
mov
or
icebp
scas
scas
fs
add
and
jle
gs
mov
out
ljmp
xor
sarl
int
inc
in
or
inc
idiv
pop
xchg
ret
lahf
and
movb
mov
leave
mov
mov
in
jbe
adc
add
ds
jne
jne
push
shrl
dec
add
in
dec
cmpsb
sbb
jo
out
cmp
mov
push
ret
test
push
cs
xchg
add
sarb
es
sub
fstl
dec
das
jnp
popa
shlb
out
push
pop
mov
dec
xchg
mov
add
xlat
inc
pop
scas
dec
fcmovb
scas
mov
js
sub
mov
ljmp
stos
fs
jmp
call
and
mov
imul
insb
sarb
bound
in
sub
cwtl
mov
dec
mov
mov
rcl
dec
in
daa
enter
insb
sti
mov
xchg
mov
pusha
cmpsb
or
ja
scas
mov
add
xchg
dec
and
pop
cmp
bound
push
pusha
ret
lods
add
in
in
stos
jbe
sub
and
int3
push
jp,pn
push
sbb
mov
sbbb
pop
cli
lock
and
popf
jl
loopne
or
add
xchg
bound
mov
int
xor
aad
addr16
adc
and
mov
aas
inc
imul
xchg
mov
es
jnp
stos
sub
lods
cmp
nop
adc
outsl
cmp
mov
call
or
jb
fnstenv
into
xor
xchg
shrb
sub
add
sar
jb
iret
repz
jns
mov
sti
das
cli
push
adc
out
imull
popl
sub
nop
add
add
push
add
cld
xor
sbb
mov
sahf
push
cltd
pop
rcrl
js
sbb
fwait
lods
mov
mov
sarl
pop
pop
push
pop
xor
mov
aaa
dec
jns
mov
xor
xor
or
or
aam
cmp
xchg
outsb
xor
sub
bswap
xchg
mov
cmp
mov
dec
or
scas
loopne
sbb
repz
mov
outsb
sub
add
pop
inc
fsubrl
bound
sbb
sbb
jmp
jo
out
iret
cmp
inc
lock
adc
in
xorl
sbb
mov
fs
cmp
call
adc
xor
enter
test
cs
das
and
stos
pop
dec
pop
and
hlt
dec
leave
mov
call
adc
fdivs
dec
sub
inc
mov
push
or
inc
daa
xchg
and
dec
bound
push
ja
test
push
xor
add
cwtl
lea
push
sub
es
ja
fcomip
pop
mov
fdivl
test
test
pop
cmp
mov
push
inc
sub
mov
dec
jbe
dec
cwtl
insl
jge
jne
xor
jl
in
repz
adc
cmc
fstps
push
jb
daa
out
mov
inc
lea
ds
inc
push
jns
push
repnz
aas
in
and
push
push
mov
popa
lods
inc
cld
pop
test
das
fs
test
pop
xchg
movsl
sub
out
lcall
movsb
xlat
cmp
and
out
arpl
jb
insl
lock
repz
addr16
fst
fsubl
fisttpll
adc
xchg
push
sbb
inc
into
jne
aaa
js
mov
pop
sbb
insb
mov
xchg
std
movsl
flds
and
jle
sub
sbb
inc
loope
or
add
dec
mov
jbe
dec
mov
lods
out
ret
stc
dec
pop
push
cmp
jne
push
icebp
push
fdivrl
movb
insl
add
outsb
mov
incl
push
clc
add
mov
sbb
cld
and
int
mov
adc
cmpsl
sub
loope
sbb
xor
jno
xchg
push
add
pusha
int3
orb
lock
cmpsb
bound
push
mov
outsb
ss
adc
subl
xchg
sub
mov
out
clc
xor
xchg
lea
push
rcr
iret
movsl
dec
iret
xchg
xchg
out
push
fcoms
add
lcall
cwtl
data16
mov
iret
jg
arpl
sbb
and
push
xorb
call
mov
out
inc
addr16
pushf
popf
xlat
inc
and
lods
pop
xor
stos
or
push
fistpl
aad
test
and
sti
out
pop
inc
in
adcb
jle
jbe
jo
add
fwait
aam
mov
test
out
mov
pop
fcomps
stos
fld
in
push
test
fsubr
in
sub
mov
les
mov
add
pop
push
mov
les
stc
loope
inc
imul
mov
cltd
jno
shll
add
test
orb
into
dec
imul
xchg
jne
orb
jb
mov
pop
xlat
push
outsl
xchg
xorl
push
mov
push
inc
sub
and
push
cld
call
out
test
pop
outsl
movsb
dec
insl
int
adc
pop
inc
push
test
cli
pop
das
sub
sbb
je
lret
test
dec
sub
arpl
rorl
jno
icebp
xor
jge
stos
sub
xlat
pop
or
daa
dec
adc
loope
movsl
into
mov
sti
cmp
mov
movsb
outsl
jno
repz
mov
cmp
nop
lcall
xchg
sub
sub
cwtl
cmp
rep
sbb
data16
sbb
mov
lds
mov
xor
ja
push
fs
test
sub
cmpl
rcrl
idivb
mov
lcall
fcomps
aam
stc
sbb
addr16
mov
repnz
les
fs
jl
sub
mov
adc
jge
jmp
cltd
and
cmp
scas
or
aad
aas
stos
pop
dec
je
sub
xchg
or
mov
out
insb
pop
jns
repnz
adc
xlat
mov
cmp
sti
rcrl
mov
cmp
fisttps
cmpl
mov
icebp
je
sti
mov
push
loope
cwtl
jge
xor
in
add
jle
ret
lods
subb
loopne
xor
cmovl
or
scas
pushf
push
mov
dec
fwait
mov
mov
scas
adc
rcrb
stos
pop
comiss
insb
outsb
push
rclb
daa
jl
cli
into
test
insb
int
sub
fdiv
lcall
cmpsl
imul
movsb
outsb
shrb
ds
jle
jne
or
fwait
jno
call
push
xchg
mov
ds
jb
push
pop
jle
repnz
dec
push
jmp
jnp
cmpsl
out
test
cld
jle
or
and
mov
mov
xchg
sub
mov
call
cmp
xchg
das
cmp
out
mov
mov
dec
jae
pop
and
jbe
pop
mov
sub
push
movsb
xor
loop
mov
jbe
dec
das
mov
mov
mov
push
pop
test
push
aad
dec
out
repnz
jecxz
cmc
fadds
cmpsb
mov
dec
test
xor
xchg
out
jne
xor
cli
xchg
inc
cwtd
cmpsb
cmp
mull
pop
push
insl
and
or
push
mov
scas
mov
repz
addr16
lahf
ja
in
mov
insb
cltd
pusha
cld
lods
mov
mov
pop
or
mov
aas
inc
mov
mov
ljmp
push
jb
mov
sarl
fldt
adc
repz
xchg
jecxz
fdivrs
jnp
and
or
nop
sti
dec
jge
sbb
sbb
xchg
ret
lea
int
mov
call
mov
or
pop
jmp
sahf
cmp
scas
lahf
cmp
pop
shl
imul
loope
in
xchg
dec
cmpsb
and
push
sub
pop
mov
stos
lcall
or
es
test
cmp
xchg
jecxz
pop
into
addr16
out
lods
xor
sbb
sti
xor
ljmp
in
lods
add
cli
shrb
divl
xchg
sbb
xorl
mov
or
xchg
sub
pusha
pop
ret
cs
and
xchg
ret
dec
hlt
popa
shl
push
mov
cltd
aas
testb
or
insl
jbe
adc
test
daa
lea
push
adc
lcall
ret
ret
mov
das
mov
shl
xor
out
outsb
shlb
cwtl
cmp
fsubp
sbb
cmp
das
iret
xchg
inc
and
fdivrs
inc
loop
xchg
in
testb
mov
push
repnz
xor
popf
mov
out
scas
sbb
dec
testb
mov
cld
dec
push
jmp
popa
xchg
mov
cltd
enter
ljmp
mov
test
mov
loop
movsl
jmp
push
or
or
fdivp
lods
rcrl
imul
dec
out
fcomps
shr
arpl
stos
push
stc
jae
add
data16
sbb
jecxz
lahf
jne
fs
mov
or
inc
sbb
mov
lcall
in
inc
dec
in
jb
push
cmc
insb
dec
ret
xlat
repnz
ja
and
iret
dec
or
mov
pop
into
xor
orb
pop
xor
mov
je
jp
fidivl
hlt
lds
lret
fsubrs
nop
movsl
push
xchg
mov
bound
fstpl
mov
call
out
xlat
mov
sarb
testl
and
push
lds
dec
mov
cmp
aas
divl
je
std
andl
bnd
sbb
mov
jae
lcall
push
cwtl
pusha
add
pop
clc
jb
test
cld
pusha
inc
adc
das
dec
or
lds
popf
inc
sbb
ss
int
mov
dec
mov
mov
or
xor
jmp
mov
hlt
loop
pop
dec
je
lods
jp
push
leave
pop
pop
dec
ss
push
imul
das
inc
pusha
decl
fincstp
pop
fcmovb
sub
aas
jae
or
jecxz
or
mov
jae
stos
sub
mov
sbb
test
push
popa
loop
jmp
lret
pop
fwait
xor
int3
andb
inc
cmp
or
inc
aas
mov
inc
pusha
adc
jl
and
hlt
mov
pop
in
fwait
pop
and
and
dec
dec
int3
adc
aad
addb
adc
enter
pop
pop
add
xchg
pop
xorl
lea
jmp
ret
in
in
cmpsb
das
sti
and
lods
shll
loope
dec
ret
jae
pusha
push
mov
aam
mov
call
jl
cltd
xlat
mov
repnz
in
jnp
xchg
jmp
mov
icebp
dec
or
fnstsw
popa
jmp
inc
mov
rorl
dec
adcb
xchg
add
xchg
rcpps
imul
or
adc
fists
repnz
sbb
dec
dec
cmp
pop
push
fisttpll
arpl
cmp
cmpsb
rcl
mov
mov
fdivp
imul
mov
pop
pusha
mov
dec
sbbl
sbb
cli
clc
dec
mov
cli
jno
cmc
cmc
pusha
adcl
inc
in
outsl
pop
jle
or
xchg
std
mov
pcmpgtw
sub
cmp
add
shrl
cmp
pop
dec
cmp
mov
stos
ja
dec
mov
xchg
je
pop
pop
mov
dec
js
cmp
shlb
and
xchg
out
imul
add
icebp
push
mov
and
rcrb
or
mov
loope
and
in
mov
inc
xor
cmc
pop
ljmp
rol
out
idivl
push
xlat
and
pop
lret
cmp
inc
std
lds
adc
push
loopne
mov
je
push
sahf
scas
jle
data16
and
es
or
leave
aam
xchg
hlt
push
adc
jbe
pop
xchg
pop
cwtl
dec
add
scas
xor
mov
loop
add
outsl
dec
les
fwait
dec
jp
jecxz
sbb
leave
cmpsb
mov
mov
mov
jl
dec
dec
fldcw
mov
pop
adc
daa
cld
in
aas
jge
sub
sti
and
ret
or
dec
sbb
xchg
std
ret
mov
out
jmp
aad
mov
mov
cmp
mov
adc
lods
sub
mov
es
outsb
jno
adc
push
xlat
inc
xor
add
jne
arpl
jecxz
imul
js
push
fsts
icebp
adc
xchg
mov
cmp
ficoms
push
in
or
into
mov
mov
ja
inc
int3
cmc
adc
jne
xor
test
outsl
jmp
or
ret
sahf
xor
in
enter
xchg
adc
xchg
loope
sub
test
sbb
fistpl
fsubs
xor
and
je
push
stos
xchg
inc
insb
mov
aad
movsb
inc
and
into
add
mov
cmp
mov
and
dec
jnp
outsl
dec
mov
gs
pop
cld
add
mov
cwtl
sub
lods
jb
add
iret
xorb
shl
push
inc
cwtl
ja
sysexit
cmp
fiadds
jns
test
inc
rcrb
insb
sub
fdivrs
into
mov
nop
lods
ss
xchg
push
inc
in
or
loop
xchg
fs
mov
movsb
out
or
sub
das
pop
aam
test
push
cwtl
data16
aaa
xchg
pusha
pop
lret
jns
jae
and
pop
jecxz
in
xor
push
mov
loopne
sbb
dec
in
mov
mov
xchg
xchg
push
sbb
jmp
in
xchg
ss
jmp
jmp
rclb
addr16
inc
insb
jnp
pop
mov
test
out
divl
arpl
jmp
sbb
in
popl
adc
dec
rcrl
les
imul
scas
stos
dec
idivl
and
cmp
jne
pop
xchg
lea
addr16
subb
jge
jns
je
sbb
movsl
cmp
fnstsw
cmp
jns
mov
mov
out
std
jae
call
xlat
lret
xor
mov
push
sar
scas
xchg
out
adc
inc
loope
xchg
adc
gs
pop
or
fcmove
out
xor
sar
xchg
lds
lock
lret
andb
mov
dec
push
xchg
dec
xlat
mov
fdivrl
fwait
and
sahf
push
neg
ja
cmpsl
dec
andb
imul
inc
xor
xor
cmp
jnp
mov
rcll
mov
pusha
popa
jne
jl
and
les
lcall
fs
sub
aad
sbb
clc
push
pusha
shr
cli
nop
inc
iret
loop
fcmovbe
mov
mov
pop
add
cmc
jmp
mov
nop
sbb
aam
xchg
stc
int
fldt
aad
std
ficompl
gs
adcb
mov
inc
cld
cli
sbb
fimull
xorb
cmp
sbb
inc
mov
scas
movsb
push
and
push
stos
repz
in
xchg
sbb
aaa
sbb
imul
mov
cmp
das
push
shr
fstps
push
jle
lahf
cmp
ret
xor
js,pn
lret
push
mov
inc
gs
xchg
inc
mov
inc
scas
adc
add
inc
std
stc
daa
cmp
mov
cmpsb
pop
fsts
std
mov
into
xlat
popf
and
mov
dec
shr
mov
mov
push
mov
xor
shlb
test
sbb
jnp
jo
pop
mov
outsb
adc
push
stos
sub
lret
jne
aaa
dec
in
hlt
repz
rcl
sarb
inc
fists
negl
scas
and
xor
inc
xor
push
dec
xlat
fisubs
shrl
pop
sbb
icebp
xchg
and
stos
jae
mov
iret
orl
jge
push
loopne
fs
add
enter
dec
cs
mov
mov
fidivs
psrad
or
enter
jb
pop
pushf
or
jae
push
lock
pop
in
bound
jle
fwait
bound
jbe
cmp
cltd
xor
cmp
sahf
fs
pusha
and
sbb
sub
push
mov
and
pop
mov
inc
xor
jge
xchg
outsl
pushf
out
out
cmp
fstps
shlb
lret
ljmp
test
or
clc
sarb
xchg
xchg
icebp
cmp
sub
sti
mov
mov
pop
jae
test
mov
aad
cmp
xchg
add
mov
je
and
enter
xchg
in
adc
and
dec
add
rorl
lahf
xor
insb
jne
inc
call
push
push
jb
xor
outsl
jp
and
push
lds
inc
test
add
inc
in
std
jns
les
lret
xchg
push
or
test
push
dec
xchg
std
pop
xor
jmp
pop
pop
inc
dec
rorb
pop
into
xchg
and
add
adc
inc
cmp
push
xchg
inc
xchg
loope
pusha
out
cmp
xor
sbb
push
mov
orb
lcall
ja
adc
cmpsl
xchg
je
mov
or
lret
out
flds
mov
call
or
popa
dec
dec
cmp
mov
lahf
mov
pop
jge
cltd
xor
ja
or
push
mov
bound
dec
scas
into
movsb
and
xchg
js
std
stc
cmc
int3
pop
mov
jle
lret
mov
pusha
xlat
jmp
mov
mov
mov
add
fwait
fs
gs
dec
add
add
fmuls
cmp
jl
scas
les
sbb
push
lods
out
sub
fsubp
stc
mov
aam
push
std
pop
addr16
sbb
pop
adc
add
jnp
mov
and
xor
scas
test
adc
ss
les
inc
or
xchg
iret
jne
mov
pop
jb
repnz
stc
inc
mov
push
xchg
ljmp
clc
jl
sub
jge
and
pop
fistpll
jmp
or
cmpl
pop
sarl
cmp
jbe
repz
int3
ret
push
imul
pop
fadds
data16
adc
push
xor
mov
inc
sahf
mov
mov
lods
lahf
sub
sbb
pop
sub
inc
aad
out
push
push
push
popf
rclb
mov
loop
mov
or
imul
push
jle
testb
push
clc
jbe
inc
push
mov
in
xchg
movsl
scas
out
sbb
or
push
incl
nop
mov
mov
jg
xlat
push
mov
sub
arpl
mov
out
add
jmp
mov
sub
jo
inc
cmp
mov
arpl
mov
xchg
daa
cmp
sbb
fildl
pop
jnp
sub
insl
mov
fsubrp
int3
bound
bound
aaa
into
gs
or
test
and
mov
es
movsl
out
mov
daa
js
aas
ret
repnz
inc
inc
add
bound
jb
sbb
cmp
push
gs
iret
repnz
cmpsb
cmp
xchg
mov
mov
das
call
pop
mov
in
dec
cmp
dec
pop
stos
inc
movsb
push
push
add
dec
push
and
lods
jae
nop
mov
push
xchg
or
pushf
aad
and
scas
jnp
fs
mov
negl
xchg
out
testl
sub
in
dec
adc
adc
pop
pop
dec
pop
jnp
adc
mov
loope
mov
or
jecxz
pop
roll
adc
lock
ret
add
loope
in
pushf
scas
xor
stc
pop
adcl
imul
scas
sub
and
xchg
int3
stos
cld
inc
pop
data16
sbb
sarl
es
sub
jno
push
jmp
test
mov
mov
cmp
cld
out
mov
test
add
xchg
scas
mov
enter
sub
jae
pop
into
pop
rep
lea
cmp
pop
in
in
pop
jle
lods
cmp
sarl
stos
pop
cmp
incb
mov
and
mov
adc
jg
xchg
inc
dec
pop
pop
in
je
das
ror
scas
sub
ljmp
imul
xchg
js
outsl
in
jmp
sahf
stos
cld
or
add
and
mov
push
decb
imul
and
test
notb
xchg
roll
xor
xchg
mov
out
sbb
dec
mov
pop
sub
push
sbb
xor
adc
adc
xchg
lcall
xor
jbe
outsl
jp
mov
sbb
popf
mov
test
xchg
jmp
in
ret
add
repz
into
jmp
mov
dec
jbe
inc
mov
aad
out
push
jl
fidivrl
dec
and
push
xchg
lods
dec
dec
jmp
push
add
mov
jmp
or
popa
ret
mov
mov
inc
inc
stos
xchg
jae,pn
mov
and
int3
and
dec
repz
push
out
sbb
xor
inc
mov
fxtract
stos
int
cmp
or
dec
rclb
cmp
jle
xchg
mov
repz
out
fbld
shlb
stc
xor
in
test
inc
and
dec
in
mov
rcll
dec
mov
add
cmp
out
ret
sbb
repnz
cmp
pushf
stos
dec
inc
cmp
loop
mov
mov
dec
sub
mov
xlat
cli
adc
mov
push
das
pop
pop
fwait
scas
fistpll
mov
sti
loopne
add
pusha
mov
add
mov
sbb
outsl
popa
popf
jo
mov
mov
aaa
or
outsl
fisttps
add
or
fwait
add
and
dec
jl
fdivp
dec
inc
test
or
pop
in
push
or
jg
pop
fiadds
or
push
sbb
dec
or
popf
cwtl
mov
mov
push
and
mov
inc
rclb
cmc
xchg
add
hlt
insl
add
sti
fsts
sti
test
inc
jb
loop
mov
loop
into
jge
mov
stc
mov
jb
call
xchg
push
in
test
dec
xor
push
pop
movsl
dec
scas
push
imul
shl
pop
pop
hlt
nop
bound
ds
imul
fsubl
shll
cwtl
movsb
mov
roll
subb
mov
mov
and
fsubrp
mov
dec
and
or
cld
inc
fsubl
nop
sub
lock
repnz
mov
aad
add
mov
rolb
pushf
jnp
sub
jle
test
ret
mov
cmp
adc
jl
icebp
lods
pop
imull
push
sub
mov
xchg
insl
push
outsl
out
decl
cmp
mov
mov
stc
cmp
jp
dec
bound
int
faddl
pusha
ja
and
xor
sub
popf
aas
push
call
fistpll
lods
out
inc
les
jne
mov
je
outsl
lock
test
sbb
jnp
mov
sub
mov
cs
ret
mov
pop
xchg
jge
pushf
xchg
aad
cmp
lret
and
adc
in
xchg
mov
out
mov
cltd
insb
in
mov
gs
pop
adc
or
adc
jg
loop
dec
add
xchg
adc
int3
jl
ljmp
xor
push
mov
add
push
pop
mov
fwait
and
cmp
or
mov
ret
cmp
dec
xor
push
push
movb
xor
sbb
fwait
mov
stc
push
fdivs
pop
or
int3
jp
fsubs
bound
pop
cltd
loopne
mov
hlt
mov
loope
xor
lret
nop
mov
sbb
or
test
pop
aas
push
cmp
out
xor
test
mov
jne
push
shr
dec
rorb
adc
cmpsl
dec
fildll
repnz
cmp
mov
jp
jb
inc
and
and
movsl
sbb
mov
arpl
iret
or
add
push
jle
sbb
inc
das
xchg
out
scas
xchg
pop
rorb
xchg
outsl
or
push
dec
mov
out
dec
pop
loope
mov
daa
pusha
dec
xlat
jnp
repz
repz
aad
jno
sahf
and
aaa
insb
sub
sarl
xor
adc
and
mov
cli
decl
fnstcw
adcb
or
es
jae
dec
fnstcw
pop
pop
jbe
adc
outsb
inc
mov
jb
xchg
imul
aas
jle
xor
xor
in
mov
ljmp
movsl
add
mov
hlt
jae
lds
jb
sub
inc
out
shrb
insb
add
adc
mov
cmp
sbb
dec
cmp
movsl
mov
mov
icebp
leave
outsb
ret
jns
push
testb
fistpll
enter
sbb
mov
mov
scas
rcrl
sti
mov
scas
sub
insb
or
adc
jbe
lock
pop
mov
iret
loope
in
fldcw
add
adc
addb
loop
loope
adc
pop
dec
ja
sub
inc
add
push
jl
ret
loope
xchg
mov
lahf
sub
out
test
pop
push
mov
adc
pop
mov
and
xchg
sub
outsb
xor
sub
nop
push
imul
inc
mov
pfcmpgt
lret
xchg
mov
jns
inc
lods
fdivp
pop
push
aaa
and
pop
mov
adc
sbb
or
fldl
dec
lret
clc
into
sub
pop
cmp
in
push
add
add
test
out
test
ss
mov
aas
jle
push
cmp
mov
scas
mov
xchg
ja
int3
pop
cmp
mov
sbb
or
jge
mov
mov
lret
add
inc
out
push
dec
fisubl
lds
add
scas
jecxz
leave
mov
and
dec
push
xchg
pop
gs
icebp
jg
pusha
mov
loopne
lcall
jne
loop
insl
clc
adc
push
les
cmpsl
push
jns
pop
inc
fwait
xchg
mov
xchg
sub
inc
mov
sbbl
fs
sub
pop
xchg
and
xor
notb
sub
std
repnz
fists
divl
cmp
xor
pusha
cmp
xchg
outsb
and
movsl
pop
fbld
rcrl
sbb
lret
imul
test
nop
inc
push
push
out
in
push
mov
insl
jge
and
add
shll
or
faddl
pushf
mov
cmp
pop
push
add
ljmp
lods
loope
mov
fldcw
imul
pop
imul
or
mov
mov
inc
push
enter
add
add
mov
iret
jb
cmp
stos
jmp
stos
movb
cs
mov
inc
inc
push
jmp
in
scas
mov
sub
lea
cmp
test
sub
lcall
dec
js
jle
pop
push
js
ficomps
mov
and
xchg
insl
xor
cmpsb
pop
lret
xchg
inc
icebp
out
mov
test
mov
mov
sub
ljmp
addb
mov
mov
lret
mov
mov
clc
pop
imul
sub
and
or
add
sbb
shll
mov
aam
stc
incb
fs
sbb
sbb
mov
add
je
lods
mov
pop
das
mov
xchg
xlat
sub
outsb
pop
mov
or
decl
mov
out
cmp
mov
push
mov
mov
ss
mov
insl
xor
dec
xchg
jl
fildll
test
mov
cmpsl
jle
popa
cmp
outsl
imul
xchg
mov
or
push
pop
fldl
test
dec
pop
add
lock
fldl
cmc
jo
mov
gs
ljmp
stc
cmp
or
clc
mov
ljmp
sub
insl
orb
les
fbstp
mov
xor
loope
pop
push
pop
repnz
outsb
fisubs
jne
sbb
loopne
push
out
xor
outsb
lea
xchg
mov
cmp
sbb
push
insl
clc
xlat
stos
in
sti
mov
add
movsb
int3
lock
and
jae
inc
adc
je
popa
fs
sub
mov
pcmpgtb
xchg
roll
movd
repnz
test
pop
xchg
add
inc
fisubrs
gs
cmpb
rclb
cs
adc
jp
xor
add
lret
adc
je
cmpsb
lods
mov
int
mov
movsb
or
stc
mov
clc
inc
mov
mov
mov
mov
mov
push
test
mov
int
and
sbb
outsb
sbb
and
scas
hlt
jmp
stos
push
or
cmp
out
pop
outsb
mov
out
xchg
dec
add
xor
cmp
jnp
out
mov
bound
hlt
xchg
dec
add
loope
jns
inc
es
xchg
dec
add
jp
push
jo
movsb
enter
mov
sahf
or
mov
push
cmp
jp
sub
dec
mov
scas
gs
fnsave
subb
imul
lret
pushw
dec
xor
dec
in
movsb
sub
fwait
dec
dec
subl
clc
jbe
adc
mov
les
mov
inc
ljmp
repnz
insl
push
cltd
fxch
test
outsl
insb
int3
and
sub
mov
jmp
push
jl
pop
fisttpl
xchg
dec
dec
xlat
pop
shrb
jbe
sbb
or
je
loopne
dec
cli
pop
aad
aas
les
scas
orb
stos
add
iret
fldcw
fnsave
dec
lahf
shll
xor
dec
and
and
cmp
daa
inc
mov
xchg
out
mov
pop
push
sub
mov
subb
mov
push
repz
hlt
or
pop
dec
enter
xchg
fdivrl
pop
in
jmp
xor
mov
push
in
mov
mov
mov
imul
add
mov
icebp
lcall
sbbb
popf
js
mulb
xor
shr
adc
out
push
jle
pop
call
in
aam
cwtl
notl
popa
jno
fisubrl
cmp
and
mulb
mov
mov
shll
jo
aas
xchg
jnp
jne
push
jg
jmp
in
push
in
fnstcw
pop
jle
iret
js
pop
je
inc
add
jns
lods
adc
xchg
pop
gs
push
movsb
mov
out
fsubs
adc
jno
or
fwait
fwait
xchg
imul
push
jno
cmp
insl
and
loope
popa
fdivs
incb
icebp
in
mov
ret
dec
cwtl
add
xor
xchg
ja
cmp
mov
sbb
sbb
scas
rcl
inc
imull
addb
jp
pop
or
push
xchg
dec
iret
dec
in
push
ja
xchg
adc
xor
mov
lea
pop
mov
xor
not
adc
sub
mov
aam
sub
pop
icebp
in
orl
iret
stos
xchg
push
std
inc
mov
dec
adc
push
enter
push
ljmp
push
cmpsl
aaa
xor
out
add
sub
mov
sub
stc
arpl
sti
cmp
or
scas
pextrw
ja
mov
or
pop
add
push
into
sbbl
add
imul
repnz
cmpl
fimuls
idiv
je
call
jno
and
mov
mov
fbld
sbb
popa
imul
int
in
sbb
push
cmp
rcrb
adc
mov
mov
orb
mov
fistpll
insl
mov
and
push
fwait
dec
lea
aad
jle
push
loope
jb
mov
mov
xchg
inc
xchg
xor
mov
out
outsl
popa
lcall
sub
aaa
xchg
pop
es
je
sti
test
loop
ja
xchg
and
lods
pop
push
pop
test
pop
int3
mov
pop
cmp
add
stc
int
xchg
in
sbb
add
imul
adc
js
lcall
add
je
push
xchg
pop
sbbl
pop
clc
pop
into
call
les
scas
xor
add
dec
mov
stos
add
pop
sub
iret
shll
add
repz
daa
dec
dec
jp
and
adc
sub
sub
xchg
clc
out
ja
daa
aam
in
or
and
push
cmp
lods
in
aaa
imul
movsl
push
mov
iret
out
mov
pushf
mov
jb
out
sbb
test
subb
repnz
stos
stos
mov
test
shl
insb
mov
add
cs
cmpsl
mov
lds
or
test
mov
loopne
adc
rorb
flds
leave
lret
adc
imul
in
mov
insl
jo
addr16
icebp
sbb
cli
pop
jl
sbb
into
in
pushf
cmp
fs
pop
das
push
sbb
loop
inc
addb
mov
pop
xlat
mov
enter
pop
mov
inc
aaa
lcall
sbb
or
adc
pop
subb
imul
pop
scas
cmpsb
fcom
mov
roll
cmp
jo
xchg
jg
mov
mov
aad
aad
jo
inc
and
outsl
test
lss
out
out
mov
push
mulb
loop
lds
fadds
jp
xchg
fcomip
sbb
pop
fldt
sarb
mov
ficompl
test
cmpsl
repnz
push
cmp
jno
sbb
mov
ret
fisttpll
mov
xlat
dec
xchg
lods
pusha
test
fidivrl
out
jmp
pop
pop
adc
in
mov
sbb
fptan
test
scas
cli
call
repnz
jmp
cmp
xor
inc
shr
lock
stos
jmp
rcll
test
adc
jp
jbe
iret
mov
mov
aaa
and
aad
push
cld
stos
add
xor
jne
movsb
and
adcb
mov
int
pop
jns
gs
orb
push
stos
xchg
icebp
xchg
inc
dec
push
into
fsubrl
in
in
sbb
cmpsb
sti
in
jo
mov
lds
lock
out
out
xor
pop
hlt
mov
add
inc
mov
pushf
pop
xchg
push
xor
pop
sbb
hlt
into
mov
push
shll
xor
mov
pop
out
mov
push
xchg
rcll
push
xor
lret
pop
inc
inc
test
or
insb
int
adc
cmc
fucomp
cltd
mov
fdivrl
push
or
sub
xchg
pop
sub
adc
test
insb
ret
adc
sbb
pop
bound
std
sbb
fsubrl
ret
call
mov
inc
pop
lea
mov
pop
xor
repz
push
and
shl
scas
dec
lret
enter
scas
shll
imul
sub
lcall
lods
xchg
or
into
xor
jbe
divb
lcall
pop
mov
stos
sbbb
iret
loop
xchg
adc
dec
clc
lods
xor
pop
and
mov
test
sar
es
inc
push
ret
rcl
mov
jg
fwait
imul
fbld
adc
push
xor
orl
xor
sbb
repz
jle
mov
mov
add
cs
cmp
or
iret
orl
inc
sahf
cmc
enter
insl
xor
jecxz
push
sbb
sbb
mov
lods
mov
mov
lods
out
notl
mov
add
lahf
inc
jecxz
and
lods
fstp
in
push
sbb
mov
cmpsb
sbb
xor
cmp
lret
push
shlb
cmp
movsb
sahf
sti
add
inc
neg
mov
pop
fptan
sub
xor
sahf
cmpsl
push
shlb
inc
dec
mov
sbb
shrl
inc
adc
sarl
cmp
sbb
js
mov
das
test
scas
or
mov
ja
rolb
sbbb
jo
in
cmp
push
cwtl
push
add
jp
pusha
sub
jmp
xchg
popf
rolb
subl
mov
adc
pop
lods
jb
mov
subl
test
xlat
leavew
xchg
xor
mov
aas
mov
sahf
fs
fmull
xchg
mov
outsl
inc
dec
dec
cmp
cmp
inc
or
pop
arpl
stmxcsr
gs
popf
and
cmp
inc
cltd
popa
pop
fdivrp
mov
inc
ret
jle
clc
pop
mov
cmp
lods
xchg
ret
loopne
adcb
push
mov
jbe
les
je
cwtl
xor
or
mov
adc
or
sbb
gs
out
ja
lcall
jne
sub
les
pushf
mov
lea
pusha
movl
adc
shll
mov
mov
dec
stc
sub
mov
dec
ja
movsb
les
push
adc
add
sbb
cli
scas
jbe
clc
cltd
add
pushf
lret
xor
jmp
loopne
out
mov
out
jl
fcomps
ret
movsb
jo
xchg
pop
mov
stc
sub
lock
adc
mov
mov
sub
xlat
aam
push
out
pop
mov
sub
cmp
orl
xor
mov
inc
and
push
cmp
and
ljmp
rcll
jns
imul
and
fwait
scas
push
adc
sbb
orb
inc
jbe
jl
push
aam
sbb
lds
pop
pop
addr16
imul
pop
push
repnz
fldt
adc
sbb
pop
push
mov
push
dec
insl
pop
jle
mov
ljmp
sbb
mov
inc
call
ljmp
sbb
and
dec
mov
inc
outsl
pop
iret
sub
cmp
or
lret
je
inc
or
inc
lods
je
mov
imul
inc
sub
mov
sbbl
pop
dec
jp
jl
ljmp
mov
imul
lahf
iret
pop
inc
aam
xchg
dec
adc
test
nop
pop
xorb
add
ret
mov
and
fnstsw
iret
sub
sbb
fists
cmp
test
xchg
sub
fmull
and
dec
push
jae
mov
lea
mov
jb
and
xor
add
add
adc
xor
pop
or
xchg
lret
cmp
fimull
pop
push
sbb
push
mov
out
insb
cmp
xchg
dec
decl
pop
aaa
sub
out
jns
sub
les
jbe
mov
jns
push
out
ret
iret
jmp
sbb
sbb
dec
incb
ljmp
dec
fs
imul
or
rol
adc
js
je
xchg
cli
scas
add
fadds
bound
mov
shrb
adc
je
sbbl
jbe
movsl
mov
clc
aam
pop
lcall
or
pop
pop
dec
cmp
or
testb
xor
add
mov
dec
fs
jns
out
imul
sahf
xor
push
xor
mov
loop
imul
push
adc
in
sahf
movsl
sbb
adc
jno
fisubs
mov
push
push
repz
mov
sbb
mov
bound
mov
add
mov
das
mov
add
xor
and
jnp
jae
cmp
je
sahf
rcrb
popa
cltd
adc
adc
jne
js
lret
into
rolb
jecxz
scas
pop
repnz
mov
inc
stos
cmp
add
or
and
sbb
mov
xchg
adc
aam
xchg
mov
out
push
and
push
es
mov
divb
xor
sbb
dec
addr16
add
pop
mov
xchg
mov
adc
rclb
or
rcr
hlt
pop
cli
jno
cs
fs
jbe
adc
das
mov
xor
sahf
test
xorl
cmpb
lahf
fimuls
ficompl
outsl
jb
jp
pop
pop
mov
mov
ret
jmp
push
inc
loope
mov
xor
insl
and
icebp
adc
dec
mov
aam
sti
fldt
outsb
inc
jb
mov
cli
lds
outsb
mov
sbb
push
adc
cmp
mov
daa
jp
inc
data16
pushf
add
and
or
mov
and
cmpl
pop
leave
movsl
fisubrs
jge
adc
ret
mov
sbb
insb
or
andl
mov
add
xorl
loopne
lods
and
sti
hlt
mov
sbb
mov
jne
gs
and
adc
cs
jb
jl
push
jne
mov
std
outsl
mov
loop
fstpl
jl
cmp
nop
jl
insb
sbb
call
xlat
or
inc
cmpsb
negl
daa
or
mov
adc
pop
push
les
fwait
xor
add
pop
lret
inc
and
out
popf
and
repnz
test
xchg
or
xor
xor
cs
mov
call
pop
or
dec
gs
mov
xor
xor
addl
xchg
gs
negb
daa
jge
adc
jnp
xor
push
lods
test
bound
pop
push
enter
mov
jae
int3
imul
mov
fdivp
les
loope
js
mov
cmp
imul
insl
loopne
sub
mov
nop
or
lret
mov
adc
xchg
inc
cmpsl
push
pop
in
jbe
daa
fldcw
test
out
call
clc
leave
lds
add
or
xchg
popf
fnstenv
movsb
jl
lock
in
mov
xchg
cld
ljmp
leave
xchg
push
iret
stc
mull
or
xor
pop
popf
in
mov
flds
movsl
mov
aam
xorb
js
int3
push
cmpsb
lahf
pusha
popf
ja
aam
inc
push
es
cltd
xchg
insb
sbb
mov
jne
mov
pusha
cmp
cmc
push
idivb
rcll
std
mov
lock
and
dec
mov
cmc
and
dec
mov
cmp
jg,pn
outsl
mov
shlb
add
test
shl
ror
pusha
fs
scas
inc
ficompl
lock
mov
pop
scas
bound
inc
aad
adc
orl
lods
adc
inc
pop
jecxz
aas
pop
testl
jbe
or
mov
cmp
shlb
dec
repz
sub
add
aas
add
loopne
mov
and
dec
push
pop
mov
sbb
rcl
insl
xor
leave
adc
ficomps
xchg
cmc
insb
enter
inc
push
fidivl
dec
pop
push
pop
dec
and
pop
aas
add
lods
mov
inc
mov
and
dec
mov
rcl
sbb
sbb
or
out
in
je
lock
push
or
cmp
cmp
push
push
lods
pop
jb
in
in
loopne
push
cmp
jge
sub
adc
sbb
scas
dec
insb
mov
mov
lds
push
cmc
pop
enter
movsl
stos
push
adc
xorl
ss
in
add
or
incl
stc
repz
sub
cld
imul
scas
xchg
lods
sub
mov
mov
nop
mov
cmp
shlb
adc
ret
aaa
push
xchg
mov
ja
inc
mov
mov
jmp
mov
imul
mov
inc
outsl
outsl
and
push
dec
jl
push
xchg
xlat
adc
fistpl
mov
aaa
ja
cli
mov
mov
cmp
hlt
xchg
push
daa
mov
loope
xor
or
cld
test
inc
test
arpl
cmp
push
test
mov
add
add
out
shll
fwait
mov
enter
shrl
and
jo
xor
les
cmc
xor
and
and
xor
flds
fdivl
xchg
outsl
fildll
mov
inc
jnp
cs
daa
ds
aad
xchg
mov
sub
insl
in
fs
xchg
sub
out
arpl
es
push
jmp
imul
lods
or
cltd
or
lret
divl
sbb
mov
push
mov
jo
roll
jge
mov
push
jnp
cld
std
aaa
test
sub
adc
insl
imul
cmpsl
popa
rcll
out
sub
sub
lahf
subb
outsl
push
js
pop
push
imul
mov
mov
add
dec
push
sub
fcmovnbe
rolb
jb
jge
push
out
jg
cmpsb
cltd
aad
insb
data16
cmp
out
icebp
dec
push
push
push
xchg
in
xchg
mov
jge
mov
add
cmp
decl
dec
jno
arpl
lea
lret
adc
jae
hlt
outsb
xchg
mov
inc
out
into
inc
dec
push
sbb
xchg
adc
mov
jle
jnp
cmp
xor
in
cltd
and
mulb
mov
test
pop
lret
andl
add
dec
andl
mov
or
fcomps
sbb
xchg
pusha
lea
jg
cmp
and
xchg
inc
push
repnz
mov
mov
sbb
imul
inc
sahf
mov
dec
out
xchg
stos
bound
jb
fdivrl
bound
inc
fnstsw
jnp
stos
outsb
sbb
sbb
xchg
cmpsl
test
testl
pop
pushf
jmp
push
sub
jns
rol
pop
mov
or
movl
pop
jbe
ds
adc
xchg
in
fucom
pop
push
cwtl
imul
test
xchg
rcl
out
pop
ret
fisubl
mov
dec
or
out
scas
aas
lret
or
mov
jae
mov
adc
scas
arpl
mov
cmp
outsl
pop
js
shlb
pushf
mov
imul
pop
and
outsb
add
inc
pop
adc
inc
or
jno
jo
cwtl
jl
and
dec
ja
inc
dec
out
dec
test
fcmovb
stos
xchg
ret
xchg
xor
stc
ret
repz
stos
mov
inc
movsb
andb
push
cmp
leave
mov
adc
sbb
adc
lods
sbb
pushw
ja
in
push
push
pop
mov
add
stos
stc
bound
pusha
mov
in
orl
stc
fnstcw
mov
and
pop
inc
mov
in
mov
andl
out
test
insb
or
cmp
fwait
sbb
jl
out
mov
enter
inc
pop
arpl
mov
mov
add
hlt
push
lds
ja
xchg
test
lahf
and
into
fisttps
rolb
inc
jo
shl
sbbl
sub
push
sub
mov
je
cmpsl
aas
dec
pop
std
addr16
aam
jg
cwtl
inc
add
lahf
dec
or
popa
fistl
xor
clc
adc
test
outsb
mov
jno
leave
cmp
sbb
push
fnstenv
push
mov
mov
inc
cwtl
sti
inc
stos
mov
inc
mov
push
ss
pop
popa
jae
shll
sbb
insl
dec
dec
jle
mov
fdivl
mov
cmpsl
xchg
ds
scas
add
movsl
ja
mov
into
and
mov
pop
ret
add
sti
inc
sbb
sub
ret
jle
insb
loope
push
sbb
lret
stos
adc
pop
rcll
sbbb
test
add
mov
mov
les
cltd
push
in
std
mov
pop
pop
cmp
insl
inc
mov
jle
inc
lcall
stc
lret
xchg
popf
sbb
outsl
jne
ss
data16
xor
ljmp
loopne
dec
jmp
popa
stos
xchg
sbb
lods
or
push
stos
lcall
inc
mov
mov
aad
xor
imul
fwait
mov
xor
outsb
pop
movb
fmul
cwtl
popf
jecxz
int3
in
push
pop
insl
int
stc
mov
sbb
scas
lcall
ret
xchg
and
dec
aas
xor
les
and
add
mov
ds
mov
cmp
mov
shrl
test
mov
in
ret
add
fisubrl
dec
lods
or
orl
pop
jbe
jmp
xchg
outsl
insl
cmpsl
and
inc
jmp
cmc
ljmp
loopne
ret
lcall
pop
fbstp
push
data16
bound
mov
movsb
in
rcll
pop
fiadds
sub
inc
iret
or
pop
push
aad
xchg
pop
pusha
and
dec
mov
and
pop
adc
jnp
mov
lods
ljmp
les
mov
jbe
mov
cmc
inc
loopne
sub
mov
cltd
add
lcall
lret
jge
pop
lock
into
xor
fdivs
shll
mov
sbb
jecxz
mov
push
nop
test
test
out
mov
inc
inc
mov
cmp
xor
mov
call
fwait
out
testb
shll
cmp
pop
inc
mov
outsl
test
ror
inc
arpl
and
scas
inc
jne
jl
add
cmpsl
movsl
or
cmp
fs
push
and
test
das
push
cmpsb
movsb
dec
cwtl
sbb
stos
orl
fsubs
sti
sbb
jae
fwait
push
sbb
idivb
cmp
out
sub
push
and
iret
push
and
mov
xchg
shl
insl
lock
jge
sti
fsubs
pop
inc
pop
jno
jg
push
sbb
push
mov
scas
xchg
fisubs
out
nop
xchg
xor
adc
aam
mov
mov
loope
ret
or
and
shlb
loope
jno
in
dec
test
xchg
mov
ret
in
jmp
push
cmpsb
sub
mov
nop
jge
cld
in
lea
lods
imul
adc
push
pop
adc
push
mov
dec
adc
dec
data16
test
aam
jp
fwait
outsb
decl
push
add
cli
arpl
clc
mov
mov
cmpsb
inc
jp
jns
xor
clc
aad
gs
add
mov
aas
jle
mov
jno
repnz
adc
loope
cs
jbe
xor
ljmp
adc
ss
xor
cmp
loop
xor
and
add
cmp
xlat
repz
fisubs
test
sbb
lock
ja
stos
imul
push
mov
pop
mov
push
cmpl
adc
fiaddl
mov
lock
and
scas
iret
scas
sahf
out
movzwl
ss
lcall
xor
push
jbe
aas
lds
fs
popa
mov
das
mov
inc
pop
lods
movl
xor
decb
and
jl
push
push
lret
add
lods
push
add
jl
push
push
lds
jae
push
add
pushf
jp
insl
subl
and
xor
sbb
inc
sahf
mov
pand
inc
dec
push
int3
les
outsb
sbb
jg
aas
sahf
or
or
shl
push
xchg
outsl
scas
insl
push
sbb
pop
js
xor
mov
test
xabort
aaa
dec
push
dec
aad
repz
hlt
js
test
mov
in
js
nop
int3
das
leave
mov
jmp
sub
push
push
sub
cmp
xchg
xor
sbb
cltd
loope
movsl
add
das
ret
or
imul
fcmovnbe
icebp
pusha
and
push
jmp
xchg
sahf
pop
iret
inc
push
sub
fs
test
ljmp
jne
iret
rcr
iret
enter
pushf
mov
movsl
sub
lds
pop
pop
add
sbb
lret
push
cmp
rcl
mov
test
popa
inc
xor
pop
in
out
push
aam
fsub
jne
cld
lock
frstor
pop
adc
and
mov
jo
sbb
mov
xor
and
lahf
fwait
and
xchg
lock
pop
cmp
pop
inc
push
inc
rcrb
loopne
fldl
push
dec
or
jbe
xchg
pop
inc
xor
dec
push
or
pop
sbb
out
push
cmp
mov
aam
pop
cwtl
push
roll
push
adc
pop
add
test
imul
adc
pop
lock
pop
jae
bound
loopne
inc
jb
aad
pop
lods
add
sub
shlb
lds
jo
pop
adc
pop
xlat
mov
mov
stos
jnp
std
movsl
lret
stos
adc
cltd
fcomi
test
push
das
cs
jmp
and
lods
orl
xorb
test
mov
pusha
mov
clc
sub
stos
decb
daa
and
xchg
dec
sbbb
addr16
pop
ljmp
out
in
movsl
loop
out
test
lea
cmp
andl
xor
or
outsb
and
and
cs
add
push
jmp
xor
xchg
leave
pop
in
imul
and
sub
dec
sub
add
hlt
idiv
jl
lods
sub
ds
adc
dec
orb
test
dec
add
out
gs
push
mov
pop
xor
imul
inc
jb
mov
xchg
mov
imul
add
and
test
cmpl
inc
mov
sub
mov
xchg
stos
inc
loop
jg
mov
fiadds
inc
rolb
cmp
clc
cmp
mov
add
test
out
jl
mov
stc
mov
es
aas
mov
pushf
inc
cmp
outsb
repz
mov
sub
and
in
sbb
jb
adcl
fstl
daa
sbb
jbe
lea
sbb
pop
lcall
aaa
daa
cmp
xlat
cmp
mov
testb
sbb
mov
push
fistl
mov
push
les
mov
or
or
inc
fdivr
push
mov
mov
icebp
sarb
insl
and
sbb
xlat
mov
dec
adc
push
adc
mov
xchg
mov
insb
inc
push
inc
xchg
jbe
int3
pop
mov
pop
and
int
mov
adc
push
xor
xchg
jbe
cs
sbb
imul
int
icebp
inc
dec
jp
ss
xor
sub
xor
add
pop
sub
xor
fs
xor
test
jb
loopne
pop
xchg
sahf
nop
sar
sbb
testl
push
in
or
jl
dec
xchg
sbb
or
cmp
lds
jg
xor
ljmp
int3
mov
adc
cmp
ja
adc
xor
lahf
enter
test
nop
out
adc
inc
lods
in
ds
mov
push
subb
lahf
adc
fsubl
xchg
clc
xor
mov
jnp
pop
sbb
daa
sub
dec
jmp
mov
sub
mov
filds
ss
in
sahf
lods
jns
or
inc
mov
cld
out
pushf
ss
ja
adc
and
fnstcw
fcmovnu
aaa
popf
pop
mov
hlt
xchg
mov
pop
cltd
sbb
and
inc
sti
pop
or
fdivr
dec
lcall
push
popa
cmpsb
mov
test
sub
stos
inc
mov
sbb
pop
fadd
mov
push
and
sbb
in
leave
movsb
repnz
xor
fwait
out
push
mov
std
jecxz
loop
cmc
xchg
cmpsl
xor
in
cmpsl
mov
sub
add
stos
xorb
mov
jmp
cltd
push
pop
and
pop
sub
dec
stc
mov
sub
repnz
insb
iret
inc
inc
sub
popf
sbb
lcall
cmpsl
cmp
xchg
loope
dec
xor
push
fdivs
mov
mov
aam
ret
movsl
cmp
pusha
ljmp
pop
mov
sarb
pop
scas
mov
lcall
mov
and
in
pop
out
pushf
xchg
clc
push
std
enter
out
jge
adc
inc
sar
movaps
push
das
or
clc
shlb
sbb
stos
cmp
cld
push
fucomp
scas
sub
in
and
xchg
addr16
mov
inc
js
cmp
jo
pop
fldt
and
xchg
scas
fsubrp
in
fwait
dec
and
or
mov
leave
fsub
jecxz
aaa
push
push
pop
adc
pop
push
jb
je
and
shll
movl
rcl
push
sbb
xchg
jns
test
mov
push
cmp
pop
push
enter
jmp
xchg
and
push
jge
aam
push
nop
or
sbb
xchg
adc
sub
mov
mov
notb
mov
insb
cmp
data16
insb
lahf
dec
shrl
push
inc
adc
ss
jnp
pop
dec
xchg
cmpsl
hlt
ljmp
xor
lds
sub
mov
loope
sbb
out
movsb
cmpl
xor
add
loope
mov
or
outsl
subb
std
sub
cld
out
call
imul
cmc
rcll
push
shlb
xchg
or
into
clc
cli
jns
adc
sub
jae
dec
mov
xlat
mov
pop
leave
fsubs
and
pusha
sarb
cli
jmp
inc
jo
and
int
mov
dec
inc
jbe
mov
flds
rcll
fldenvs
push
xor
mov
xor
stos
pop
fdiv
hlt
icebp
cld
cwtl
or
imul
sbb
pop
loop
mov
jb
push
jne
pop
mov
repnz
std
pop
out
xlat
push
mov
inc
lcall
aad
mov
xlat
icebp
pop
sbb
ss
xchg
pusha
jnp
xor
dec
adc
adc
adc
adc
std
adc
out
jp
jae
dec
jno
sub
sbb
cltd
repnz
enter
fs
insb
push
icebp
add
popf
lahf
mov
mov
sbb
sbb
adc
adc
clc
and
out
pushf
sub
shrd
bound
in
imul
xchg
mov
cmpb
in
mov
and
cmpsl
adc
mov
inc
scas
out
xchg
push
out
adc
lods
or
push
insl
add
out
pcmpgtb
mov
and
dec
loope
dec
iret
xor
add
fwait
xchg
mov
push
dec
scas
adc
mov
aam
jbe
ret
cmp
nop
rcll
insb
imul
pop
or
adc
stos
lahf
pop
sub
or
sub
mov
inc
mov
mov
loop
mov
sbb
adc
pop
xchg
or
mov
add
lods
cltd
test
push
mov
fmull
cmpsl
popf
ljmp
or
and
jg
xchg
push
lret
add
xor
sahf
out
push
or
std
inc
xor
inc
adc
aad
sub
or
pop
clc
ret
lret
int3
mov
xlat
bound
jo
test
xor
cmpl
sbb
rorb
mov
cli
add
ds
pop
add
iret
in
icebp
cmpsb
lea
mov
pop
jb
fucomp
popf
mov
scas
xlat
cwtl
subl
jae
mov
mov
leave
mov
sbbl
es
std
jmp
ja
sbb
unpckhps
cmp
xor
sbb
out
scas
dec
lcall
in
sti
and
jmp
enter
es
and
cmp
stos
fdivl
imul
jo
add
ljmp
cmp
sub
add
bnd
insl
fwait
dec
pop
xchg
pop
xchg
cmp
int
dec
aas
jbe
hlt
dec
jl
inc
shrl
mov
iret
sub
xor
sub
sbb
repnz
xor
mov
inc
push
addr16
repz
fstpl
push
sub
or
add
mov
ds
xchg
daa
add
xchg
push
inc
inc
mov
mov
pop
movsl
je
cmp
inc
cmp
scas
jo
add
pop
mov
mov
push
or
fwait
mov
mov
ljmp
filds
pop
shlb
and
leave
push
fistl
sub
psllq
and
xchg
dec
dec
rol
pop
push
cmp
or
add
xchg
js
sti
out
std
jge
cmp
push
jmp
mov
mov
cltd
add
out
xchg
and
jg
xchg
fnstsw
push
mov
sbb
and
dec
cmp
pop
sbb
negl
and
jg
mov
mov
inc
mov
lret
mov
mov
stos
ret
mov
daa
mov
imul
xchg
mov
dec
pushf
add
push
in
lock
loope
in
cmp
stos
push
sbb
fldcw
shl
imul
add
je
ret
dec
adc
inc
pusha
mov
xchg
push
in
lods
aad
test
lahf
cmp
push
jl
jb
xlat
sbb
enter
std
stos
dec
hlt
sbb
sbb
sub
pop
add
invd
lcall
std
jl
cmp
lods
daa
push
xlat
inc
push
pusha
loop
or
xor
out
ljmp
add
mov
ja
lods
lods
mov
xor
cmpsl
dec
xchg
js
lret
call
pop
repnz
fiadds
pop
test
xor
xor
aam
das
ret
dec
movsb
inc
out
shl
cmpl
movsl
das
cmpsl
mov
sbb
cmp
ljmp
pushf
xor
mov
cmp
mov
bound
inc
iret
hlt
stos
pop
adc
and
shrl
popa
push
ret
and
jg
and
xor
jae
inc
pop
inc
mov
cmovle
cmp
mov
xchg
mov
test
mov
cli
push
fstp
push
mov
xor
fwait
mov
mov
test
add
mov
imulb
adc
mov
pop
ficomps
lods
insl
repz
outsl
testl
stc
aas
clc
leave
imul
jmp
jmp
cs
lcall
mov
push
and
fidivl
icebp
mov
out
push
jg
mov
push
out
xor
cmpsb
lret
jg
push
sti
mov
addr16
out
or
jecxz
cmp
pushf
xchg
in
loop
and
aad
push
mov
cli
cmpsb
pop
and
lock
popf
and
out
push
add
pop
push
jle
out
jecxz
push
lock
inc
and
pop
or
push
fisubrs
inc
repnz
imul
xor
push
ljmp
mov
mov
adc
xchg
xor
mov
and
pushf
adc
adc
xor
clc
fwait
pusha
fsubrp
jne
sub
jne
sub
lahf
xor
lahf
subb
nop
sbb
cmp
fst
pop
mov
xchg
js
pop
cmp
test
xchg
mov
push
outsl
xor
ja
ja
mov
ja
iret
pusha
push
insl
rol
jge
add
jnp,pt
fdivrs
cmp
mov
test
mov
ret
mov
inc
mov
test
lret
je
cmp
out
pop
pusha
into
push
fnstenv
stos
ja
stc
mov
lea
imul
inc
icebp
loop
push
inc
ret
imul
test
jns
mov
or
mov
nop
mov
in
insl
or
pusha
in
rorb
pushf
data16
mov
hlt
mov
arpl
bt
imull
sub
cmc
ds
cltd
movsl
push
mov
sub
ss
cmp
jmp
negb
jo
in
hlt
roll
push
cli
dec
ja
xchg
fisttpll
push
lds
or
loope
push
xor
xchg
inc
jle
inc
call
outsb
jae
cmp
mov
scas
ffreep
mov
sbb
ret
mov
add
mov
paddb
or
das
pop
ljmp
add
or
mov
add
xchg
or
imul
mov
xchg
loop
fld
mov
xchg
jg
dec
lock
testl
ret
cli
mov
push
enter
dec
es
sti
xlat
jg
jbe
in
sbb
inc
pop
mulb
sub
push
adc
mov
or
insl
addr16
rol
aas
or
sbb
aam
pop
sbb
mov
inc
xchg
push
adc
mov
xchg
punpcklwd
sub
pop
xchg
add
loopne
nop
fwait
mov
stc
test
loop
xchg
rol
divl
sub
in
mov
dec
mov
mov
push
es
lods
ret
push
mov
icebp
rol
add
push
out
jns
mov
int3
iret
lock
aas
movsb
pop
jl
lcall
mov
sub
mov
push
and
scas
fsubrl
jns
in
in
mov
in
clc
insb
xchg
sub
and
cmp
ficoms
outsb
ret
push
clc
jmp
aad
or
sub
mov
mov
pop
xchg
int3
jae
xor
mov
arpl
xchg
adc
or
mov
or
jno
xchg
leave
xlat
call
or
sbb
out
ret
xchg
fisubrs
ss
jl
lret
sub
stc
add
aas
btr
sub
lahf
add
data16
out
mov
jge
lcall
cmpsl
cmp
xor
mov
pop
pop
jnp
jb
subb
jge
adc
push
addr16
es
sub
inc
lods
or
mov
lea
lcall
stc
call
jg
in
push
mov
lret
pop
jae
sbb
orb
out
dec
test
bnd
filds
and
jp
adc
push
sbb
scas
mov
dec
enter
cltd
int3
mov
or
test
adc
outsb
jle
cmp
xor
pop
clc
push
idivl
adc
adc
mov
mov
inc
fisubrl
mov
mull
clc
xchg
cltd
adc
mov
mov
pop
dec
sbb
gs
inc
scas
into
bound
xlat
movsl
insl
cld
test
jb
mov
and
adc
jle
xchg
jl,pt
xor
xlat
mov
out
sbb
gs
outsl
push
lock
push
outsl
xchg
fisttps
pop
mov
sbb
loope
fbstp
xor
and
pop
xor
mov
add
mov
lods
mov
mov
pop
push
push
and
push
subl
out
in
dec
sub
xchg
mov
sub
leave
adc
jg
lods
dec
nopl
data16
jo
lret
mov
insb
orl
or
dec
cld
rcrb
sbb
icebp
lahf
movsb
xor
fdivrl
sbb
mov
xlat
stos
mov
sub
jle
sub
push
lods
add
popf
add
and
lds
ret
xor
jbe
movsb
sahf
fdivs
mov
popf
fdivl
ja
xor
bound
or
push
adc
pop
push
fdivrl
pop
push
ret
das
std
adc
inc
sbb
sahf
mov
cmp
cld
pop
mov
adc
fsubrs
testb
mov
mov
out
xchg
je
clc
lods
dec
data16
pop
mov
scas
mov
mov
in
rolb
jg
adc
and
mov
sti
in
mov
ret
xor
cs
jo
mov
mov
inc
push
xor
cmp
imul
push
inc
cltd
mov
mov
scas
fdivrs
test
test
inc
mov
xor
aas
and
jae
sbbl
stos
adc
shrl
xchg
mov
jo
mov
mov
cmp
push
pop
test
push
jmp
lahf
jne
lods
push
xchg
js
mov
mov
cmp
imul
xlat
pop
sbb
fwait
arpl
dec
push
test
test
adc
rcr
xor
shll
jmp
mov
adc
divl
sbb
sub
rolb
ljmp
mov
in
fwait
mov
pop
xchg
push
ret
adc
sbb
lret
pop
sub
stc
mov
out
inc
mov
shll
enter
rcrl
jbe
dec
bound
sahf
mov
gs
sbb
sti
mov
cmpsl
insb
imul
dec
add
xchg
mov
popf
scas
xor
sub
push
pop
loopne
cwtl
xchg
stos
filds
cmp
jo
xchg
mov
enter
xchg
fldenv
loopne
xchg
add
cmpsb
jmp
mov
mov
add
jnp
jp
pop
out
inc
in
inc
int3
cmpsl
das
or
pop
arpl
mov
jne
jnp
xchg
push
clc
cmp
push
pop
xchg
es
nop
imul
mov
jl
xchg
jle
in
or
mov
adc
movl
mov
outsb
push
push
sbb
lret
sub
rcrb
xchg
das
fisttps
cmp
sbb
xor
imul
cwtl
pushf
mov
out
push
aas
sbb
mov
jg
xchg
jecxz
loope
jge
cmp
or
pop
pop
dec
shll
mov
sbb
add
les
ss
inc
xor
imul
mov
xor
lahf
sub
and
jno
push
call
jno
outsl
cmp
leave
jns
pop
aad
test
das
lods
jae
jl
fdivl
je
cmpsb
cld
add
shlb
mov
aad
and
or
test
jo
sbb
insb
movl
and
xchg
push
xchg
fadds
add
inc
movsl
cmpsb
adc
repnz
scas
es
inc
in
xchg
rcrl
imul
hlt
mov
lods
mov
arpl
sbb
dec
fsub
push
sbb
shlb
lods
pop
aaa
dec
cmpsb
adc
cmp
jne
nop
lcall
iret
arpl
hlt
ljmp
cmc
dec
scas
rcll
xchg
fstpl
mov
jnp
mov
in
aaa
imul
add
inc
idivb
movq
cltd
in
orl
clc
jbe
xchg
stos
push
inc
in
es
cmp
jecxz
adc
and
push
pusha
aam
call
or
jg
hlt
ss
xlat
into
nop
cmp
bound
mov
fdivrl
ss
dec
add
pushf
pop
jl
cmp
loope
and
ret
pop
mov
xor
loope
add
push
jp
xorb
mov
pop
lahf
or
xchg
and
icebp
dec
push
pop
movl
shrb
popa
arpl
ret
inc
movsb
repnz
inc
jl
and
psllw
jb
cmp
cmp
push
xchg
das
inc
test
movsl
pop
push
in
cmpsl
mov
loope
lret
pop
cmp
sbb
push
bound
mov
xor
inc
ljmp
lock
jo
mov
mov
mov
fsubs
lds
cmpl
cmp
inc
fwait
sbb
repz
js
jmp
out
pop
xor
les
call
mov
stos
mov
repnz
cmpsl
bound
or
fwait
addr16
jecxz
push
jnp
xchg
lods
lds
inc
and
mov
sbb
add
cmp
cmc
sub
sbb
ljmp
cmovo
shr
lock
push
adc
cli
sbb
test
push
push
and
out
sahf
jns
xor
xchg
bound
cmp
jno
xchg
mov
loopne
or
sbb
sbbb
cli
iret
mov
mov
jae
mov
lds
add
sub
xchg
or
push
test
mov
pop
aam
shrd
lcall
outsl
fwait
add
inc
mov
jne
fstpt
jnp
mov
leave
dec
push
mov
xchg
push
repnz
add
repz
push
xchg
fsubrl
rcl
rcrb
fsubr
fisubl
arpl
xor
cmp
add
repz
rcll
push
bound
lds
fwait
push
pop
mov
inc
sti
inc
cmp
inc
mov
and
ret
cmp
loop
pop
aad
stos
das
dec
jne
xor
inc
mov
jmp
and
pop
popf
pop
std
mov
popf
clc
and
gs
push
jo
inc
xlat
and
mov
call
insl
and
int
shrb
jg
movsl
mov
jle
cmp
jge
mov
aaa
arpl
fcmove
fidivs
imul
adcl
jne
inc
aaa
jmp
sahf
das
xchg
push
fiaddl
dec
xchg
xlat
shlb
call
fwait
dec
lret
mov
jle
aad
ret
cmp
sbb
out
repnz
iret
int3
mov
dec
push
pop
mov
sbb
add
mov
orb
movsl
outsb
pop
lods
ss
pop
dec
mov
std
mov
push
out
add
sub
flds
or
leave
mov
push
mov
sub
pop
jo
cltd
lret
in
test
jns
pop
dec
rorb
in
jp
leave
cmc
insl
imul
sub
or
cmp
sub
testl
cmpsb
int3
jmp
fdivrl
repnz
call
mov
rep
fdivs
shl
mov
xchg
ja
or
js
add
test
das
xor
xor
xor
sbb
jp,pn
and
cmc
mov
mul
or
xor
hlt
inc
push
clc
mov
int
scas
sti
outsl
mov
ret
xchg
jne
pop
dec
pop
mov
stos
jmp
test
jo
jae
add
cmp
addr16
mov
movsb
testl
test
aam
cwtl
xchg
xor
xchg
add
cmp
push
das
in
ficoms
es
pop
dec
sub
lods
push
add
cmpl
sbb
movb
mov
xor
shll
frstor
push
lea
gs
cmpsl
fidivrl
and
jecxz
es
adc
add
cli
cmp
idivl
faddl
adc
or
out
imul
jge
or
ja
scas
cmc
arpl
leave
sub
jmp
push
fstl
cmpsl
sub
mov
xchg
shr
enter
int
addr16
mov
addr16
xor
cmp
int
ds
mov
cwtl
mov
mov
xchg
pop
inc
adc
mov
jns
insb
push
cmp
push
mov
add
add
lret
dec
and
mov
adc
mov
jg
mov
pxor
push
xchg
cmpsl
aad
cmp
mov
repnz
dec
aad
add
jmp
sti
dec
xor
lock
xchg
mov
jbe
cmp
dec
loope
cmp
inc
inc
push
pusha
pop
cmp
xchg
cmp
xor
mov
mov
dec
into
and
cli
stos
xchg
test
sti
push
pop
sbb
pop
hlt
cli
inc
data16
negb
adc
add
loop
add
andb
mov
stos
movsb
cmpsb
daa
and
xchg
int
int
inc
xchg
fiaddl
mov
or
add
or
testl
adc
call
add
negb
sub
je
xor
sahf
dec
cmp
add
fdivs
dec
push
jp
jp
jns
add
adc
and
add
cmpsl
cli
data16
lcall
push
mov
push
and
lahf
jnp
adc
push
addb
js
mov
jne
sahf
push
loop
mov
inc
or
movsb
xchg
xchg
aad
xchg
xor
jecxz
cmp
fbstp
sub
add
out
fldl
pop
cmpsb
push
jns
outsl
stos
lds
sub
sub
pushf
inc
daa
sub
mov
insb
mov
ret
lods
es
fisubrl
jge
sahf
push
test
cmp
jecxz
mov
pop
stos
mov
xor
jmp
xchg
mov
shll
mov
test
pushf
xchg
mov
or
cmp
cmpsl
jge
dec
inc
jo
mov
fnstsw
xchg
sbb
adc
adcl
xchg
negl
loop
jg
xchg
mov
dec
dec
mov
mov
das
adc
dec
push
mov
lock
out
inc
inc
pop
es
sub
xor
das
repnz
adc
and
addr16
or
shll
jbe
adc
ja
push
adc
or
lods
lcall
mov
mov
mov
loope
sbb
gs
jo
fnstsw
lds
xchg
xlat
ficompl
dec
stos
movsl
fmulp
repnz
push
movsb
fildl
xorl
inc
mov
mov
sub
or
inc
push
outsb
es
dec
scas
cmp
in
imul
pop
pop
and
ret
popa
xor
sub
dec
int3
das
jp
shlb
and
addb
mov
jo
mov
cmpsl
sub
and
shlb
cmpsb
orb
mov
mov
sbb
xlat
mov
test
test
je
cmp
clc
ficompl
lret
jno
ss
jns
add
mov
sub
dec
xchg
out
sahf
xchg
das
cmpsb
or
call
sub
jno
xchg
mov
adc
cmp
into
cli
mov
out
push
rcll
sub
outsb
sub
add
push
add
adc
pop
outsl
mov
inc
or
mov
in
adc
ljmp
outsb
mov
fcmovne
lret
fldcw
popf
mov
mov
stos
dec
or
sbb
cmp
sbb
lods
outsw
add
imul
sub
std
mov
xor
inc
push
push
push
hlt
pop
lods
dec
pop
lods
push
int
or
fnstcw
out
dec
lret
adc
lods
mov
xor
sbb
test
sbb
daa
and
movsb
and
mov
scas
mov
test
stc
push
mov
hlt
in
mov
mov
sahf
call
dec
lahf
sub
mov
pop
int
ljmp
jns
dec
int3
cmpl
clc
jbe
je
hlt
pop
mov
in
jp
loope
das
mov
fwait
inc
out
push
fcompl
in
pop
add
in
data16
inc
adc
mov
sarb
jmp
stos
cmp
push
pusha
icebp
pop
test
sti
addr16
repnz
daa
xlat
xlat
sub
sub
movsb
stos
pop
xor
js
pop
pop
repnz
pusha
sub
out
int3
xor
in
aad
iret
cmpsl
adc
movb
es
sar
mov
rcl
pusha
mov
mov
insb
xor
fsubrl
sub
lods
orb
mov
clc
imul
mov
sarb
out
out
pushf
cs
scas
xor
or
inc
inc
lea
or
lret
andb
inc
mov
and
or
pop
fldl
cmpl
dec
cltd
pushl
ljmp
push
pop
daa
sub
inc
lret
or
clc
push
xchg
or
sbb
push
push
lds
iret
cmpb
mov
sbb
ljmp
cmpl
xor
adc
out
outsb
mov
push
jecxz
inc
sahf
outsl
add
imul
adc
icebp
dec
cmpsb
pop
fwait
mov
lock
mov
out
inc
aas
imull
orps
pop
cmpsl
mov
inc
pop
dec
nop
inc
es
jbe
outsl
aaa
movsb
sahf
pusha
outsl
out
imul
inc
dec
inc
cli
jmp
inc
sbb
xchg
popf
imul
pop
push
dec
jns
jns
icebp
mov
or
out
push
mov
outsl
decl
cmp
daa
loop
lods
or
sbb
and
or
sub
jmp
and
int
inc
mov
jae
fnstsw
and
insb
aam
xor
sahf
je
ja
leave
movsb
aaa
mov
popa
pop
stos
mov
or
in
loope
mov
jb
sub
bound
cwtl
jp
addb
push
cmpsb
mov
push
lret
dec
inc
pop
insb
inc
cld
mov
jno
xor
testb
dec
push
test
stc
je
cmp
jge
arpl
jb
push
sbb
aam
inc
bound
adc
mov
jne
shrb
cmp
frstor
lods
imull
cli
andb
jl
cmp
iret
mov
mov
bound
rcrb
gs
sub
mov
sub
jns
test
stos
push
sbb
xchg
out
xor
jae
repnz
jg
mov
iret
lret
cwtl
or
push
test
xchg
and
or
and
inc
scas
stc
or
rorb
xor
push
and
gs
sub
addr16
cmpsl
pop
mov
xlat
in
xchg
cmp
sbb
and
sbb
mov
cmp
cmp
dec
inc
sti
xchg
ss
imul
jbe
xlat
mov
xchg
sub
push
push
sbb
fdivrs
cmp
dec
pop
loope
test
dec
scas
dec
lcall
mov
fs
ret
and
xchg
in
popa
and
jge
scas
pop
cmp
dec
push
jge
adc
push
push
jbe
or
cli
out
adc
rcrb
sub
leave
lret
imul
dec
xchg
orl
xchg
mov
mov
mov
lea
adc
test
pop
mov
es
jbe
jnp
loopne
xor
imul
mov
jb
stc
bound
xchg
inc
cmc
aas
mov
sbb
jle
stos
pusha
mov
cmp
push
in
fdiv
jle
push
enter
xchg
in
xchg
mov
push
push
cmpsb
popf
jmp
lods
loope
scas
fsub
clc
or
fcomi
xor
inc
aas
pop
aam
cmc
scas
sub
sbb
jo
out
push
aaa
xor
out
mov
fdivs
pop
lock
test
push
imul
mov
mov
iret
add
ret
mov
call
ror
mov
sbb
lcall
xor
add
mov
and
and
push
loop
dec
push
push
fwait
decb
es
pop
add
push
repz
sbb
lcall
mov
inc
sub
arpl
xor
mov
push
lods
xchg
mov
scas
iret
arpl
jecxz
cmp
sysret
xor
fsubl
mov
fcom
sahf
movsb
stos
xchg
and
repz
jae
mov
cmp
add
test
inc
sub
push
jne
ja
lret
sbb
pop
dec
loope
sub
dec
pop
jg
test
dec
mov
pop
xchg
insl
shr
or
in
loope
push
jne
jno
and
pop
cmp
cmpsb
or
push
lds
cmp
pushf
clc
or
cmp
add
jle
mov
ss
int
lds
call
pop
scas
pop
pop
in
les
xor
add
push
stos
jo
pop
jg
sbb
inc
or
fimuls
in
inc
ds
stc
ret
clc
xor
push
and
sbb
test
and
insb
sub
inc
dec
popa
hlt
test
lcall
jae
movsb
add
adc
test
lret
push
or
xlat
repnz
fdivrs
loopne
dec
cld
xor
fidivrs
sub
mov
popa
cmp
iret
xchg
add
fxch
sub
mov
lock
lret
hlt
mov
jl
ret
inc
xchg
in
xchg
movsl
dec
or
test
hlt
xchg
mov
and
loop
mov
add
jl
in
cmpsl
rclb
pop
mov
sub
ljmp
mov
movsb
in
mov
lods
cmpsl
jno
sub
push
mov
pusha
add
sbb
xchg
xor
mov
and
fsub
or
dec
jno
stc
out
pop
stos
cmp
xchg
gs
fists
cmpsl
mov
mov
in
dec
call
stos
aad
sbb
mov
mov
mov
nop
adc
pop
sahf
inc
push
cmp
repnz
aam
negb
not
xlat
movsl
sar
stos
sbb
loop
add
mov
frstor
loopne
loope
rcl
mov
lcall
das
jp
pop
jmp
adc
xor
cli
cli
flds
jmp
mov
popa
inc
push
std
nop
mov
add
push
cmp
sahf
out
cmp
mov
xchg
adc
mov
cmp
and
adc
jb
jg
lods
jbe
popf
mov
ljmp
mov
bound
lock
dec
inc
mov
mov
push
add
scas
dec
push
aad
pop
xchg
jecxz
fcmovnu
orl
mov
pop
sbb
arpl
inc
xor
lds
cmp
push
xlat
sbb
add
mov
xchg
inc
inc
mov
adc
in
mov
into
shr
shrb
int
fstpl
insl
xor
in
and
js
movsb
cmp
mov
movsl
bound
sbb
xchg
mov
iret
cmc
inc
cmp
xchg
sub
mov
nop
mov
aad
xor
test
sahf
int
mov
pushf
test
cs
xlat
mov
cmc
xor
mov
mov
mov
std
fisubl
mov
adc
pop
mov
mov
adc
mov
jnp
add
mov
xlat
adc
sub
outsb
mov
inc
add
jp
xchg
sub
lret
arpl
lds
mov
iret
les
imul
dec
sub
sbb
addr16
scas
jno
sub
jl
pop
xchg
fstl
or
setp
xchg
iret
cmp
adc
pop
add
pop
sbb
cmp
inc
loopne
bound
and
mov
or
sahf
pop
lock
mov
mov
dec
lret
dec
js
leave
xchg
lret
jbe
pop
in
mov
and
stos
daa
jg
sub
mov
mov
stos
push
xor
cli
dec
test
sub
orb
jnp
rolb
add
jmp
adc
inc
jl
mov
divl
inc
cmp
xor
dec
popa
push
out
hlt
les
push
popf
scas
ret
cmp
sbbl
sub
loopne
cmp
fisubs
in
push
sub
cltd
scas
imul
inc
cs
pushf
es
mov
out
rorl
stos
cmp
xor
outsb
addr16
dec
mov
movsb
add
in
adc
daa
jg
fistps
cmp
cmpsb
and
pop
stos
and
inc
xor
add
std
cmpsb
outsb
ret
push
pop
cmp
cmp
pop
sbb
aam
adc
adc
sbb
ret
mov
lds
xor
int
pushf
mov
push
arpl
xorb
inc
lret
lret
and
adc
cmp
test
mov
imull
ret
sub
and
enter
pop
and
jmp
sbb
ret
jl
xchg
stos
cmpps
test
call
test
xchg
jmp
and
mov
inc
mov
xchg
or
js
sbb
adc
lahf
and
jnp
xchg
aad
sub
xchg
clc
outsb
cmp
cs
fcoml
xchg
pop
push
jg
cli
pusha
notl
addr16
testb
mov
xchg
jbe
push
daa
xor
imul
fwait
add
dec
shl
gs
adc
mov
pushf
out
fildll
mov
movsl
xor
popa
popf
lcall
jb
dec
das
js
repnz
in
dec
cmp
xchg
stos
shll
aam
scas
xor
adc
xor
popf
je
insl
inc
sbb
aas
jae
shr
in
pop
sub
mov
lds
in
in
idiv
out
movsl
mov
and
sub
mov
add
push
adc
hlt
in
xchg
mov
pop
stos
pushf
jge
pop
test
xor
mov
add
sub
out
test
nop
add
or
jae
push
cmp
loop
dec
jmp
mov
xchg
rcr
jns
mov
hlt
xchg
rcl
or
xchg
mov
xchg
xor
adc
mov
push
negl
push
call
inc
fucomi
subb
fmulp
dec
cmp
lds
rorb
sbb
dec
mov
push
sahf
jle
dec
jo
inc
push
imul
add
pop
lods
sub
xchg
sbb
fldenv
lods
popf
repnz
pop
or
jbe
jnp
or
xchg
imul
loop
sbb
mov
out
scas
cmp
mov
jl
fadd
push
pop
mov
ret
lds
xor
jb
cmp
sbb
bound
push
or
mulb
mov
sbb
out
dec
lock
shrb
stos
loope
ds
push
pop
les
add
adc
loop
cmpsb
fiadds
add
ret
ja
push
shrb
lds
fwait
and
inc
cmp
fsubrl
push
std
push
rcr
lock
jnp
jns
or
and
call
ja
push
repz
xchg
mov
sbb
xor
addr16
sub
les
test
ljmp
cwtl
mov
sub
or
cs
xorb
arpl
adc
loopne
xchg
mov
ret
mov
adc
lret
cmc
and
rclb
jl
scas
lods
xchg
mov
xchg
adc
adc
out
rcrl
test
pop
sti
leave
sub
std
rcr
mov
xor
or
dec
movsb
mov
ret
int3
jp
lock
iret
out
test
xchg
fs
insl
call
lret
ret
in
sub
aad
xor
fldcw
fsts
lret
fnstcw
add
mov
push
mov
cmpsb
push
addr16
test
push
in
std
out
mulb
lock
inc
cld
fldcw
sbbl
xchg
lcall
nop
xor
xchg
cmp
sbb
pop
pop
pop
add
rolb
pop
cmp
enter
or
cmp
sbb
cld
fs
and
sahf
mov
mov
sbb
bnd
adc
fsub
into
fs
add
and
or
add
aas
ds
mov
sarl
lahf
cmc
cmc
push
adc
repz
inc
sahf
pop
rcrb
dec
gs
push
adc
jge
dec
mov
fs
cmc
inc
mov
jno
outsl
xchg
sub
stc
add
les
sub
nop
jge
aaa
fxrstor
mov
std
popl
jmp
jge
jb
push
mov
push
mov
mov
scas
push
hlt
pusha
sbb
mov
scas
pop
hlt
in
add
jae
sbb
pop
jbe
das
cmc
rorb
test
fdivrp
mov
lahf
pushf
nop
movsl
popf
adc
pop
test
mul
mov
aaa
mov
out
das
inc
lret
mov
in
insl
andl
jbe
loop
das
and
insl
cmp
push
pop
dec
sbb
and
sub
repz
mov
cmp
adc
sahf
add
cmpl
dec
mov
roll
stos
cmp
in
add
hlt
bswap
jecxz
push
arpl
pop
out
jns
lods
pushf
out
movsb
outsb
cmp
lods
dec
sbb
adc
shl
mov
test
xchg
fwait
loop
in
mov
adc
insl
xor
insl
pusha
cld
pop
sub
adc
and
xor
outsl
out
xchg
iret
xchg
ljmp
mov
jl
std
jns
xor
mov
cltd
test
ret
or
xchg
cmpsb
aam
mov
stos
iret
mov
scas
dec
pop
scas
mull
dec
adc
mov
sub
adc
adc
ffreep
es
ja
mov
out
out
insl
int3
lret
mov
test
dec
pcmpgtb
push
mov
insb
imull
fcomip
mov
push
jns
mov
inc
inc
lret
cld
xor
jns
subl
xchg
dec
ret
cli
enter
sub
cli
out
fnstsw
and
push
rol
mov
mov
jno
push
ret
scas
test
fs
jg
popa
jge
dec
mov
data16
sahf
scas
or
xor
loopne
jp
lods
xchg
xor
into
popa
push
stc
ret
ljmp
inc
fldpi
repnz
movsb
shl
arpl
outsb
xchg
kmovw
and
rcrl
xchg
outsl
mov
dec
outsl
inc
push
cltd
pushf
push
lret
and
xadd
xchg
fwait
mov
xchg
mov
aaa
mov
fs
push
loopne
sbb
add
fcoms
movl
and
cld
dec
out
adc
les
cmp
scas
mov
pop
fwait
setno
fwait
and
aaa
sbb
mov
mov
xchg
jge
mov
cld
lods
sahf
mov
in
ret
cli
dec
mov
mov
imul
call
sbbl
xorl
int
lods
lcall
push
fsubs
test
insl
xchg
fldcw
add
cmp
pop
adc
das
mov
outsb
xchg
aad
aam
test
lcall
push
mov
mov
mov
push
pop
test
jb
dec
rcrb
call
mov
leave
mov
or
aam
loopw
push
rcr
adc
push
jmp
mov
mov
inc
mov
push
or
mov
add
cmp
cmc
push
xor
cwtl
push
mov
jns
imul
pop
cmpl
mov
cmp
xchg
sbb
dec
std
add
pop
mov
adc
push
pushf
push
mov
sbb
lahf
sbb
and
or
mov
loopne
int
popa
iret
clc
jns
mov
sbb
mov
imul
out
xchg
sbb
mov
fdecstp
das
sbb
sub
testl
test
sahf
icebp
aaa
jae
xor
dec
or
lea
sub
mov
or
mov
sub
scas
fcoms
and
shll
xchg
aam
jg
adc
xchg
mov
push
stos
lret
fwait
popa
push
test
leave
gs
xchg
and
pop
popa
jb
out
int
ss
repz
mov
gs
cmpsb
outsb
fstl
jg
js
pop
sub
js
mov
lock
jno
mov
shll
test
jne
push
inc
loop
mov
fdivs
movb
fmull
movsl
dec
cltd
sti
inc
cld
jnp
mov
movsl
sarl
shll
int
mov
cmp
ror
repz
repnz
pop
sti
dec
mov
dec
lahf
lcall
xor
xor
pop
or
dec
inc
sbb
sub
push
xlat
dec
and
lahf
or
dec
or
push
repnz
in
pusha
loopne
push
mov
lret
mov
or
sub
push
pop
lds
aas
cmpl
stos
inc
outsb
insb
test
push
in
mov
xor
cmp
lea
push
jnp
sub
xchg
gs
outsb
adc
add
pop
pop
in
lea
push
and
arpl
in
test
or
iret
jmp
test
lock
aas
outsl
lret
inc
xlat
loope
jle
test
roll
cmp
mov
dec
ljmp
adc
pop
data16
pop
negl
mov
push
sti
test
outsb
xor
inc
pop
mov
pop
jnp
sbb
and
mov
jg
fidivl
push
std
push
adc
outsb
mov
loopne
push
adc
adc
loop
sub
push
and
and
dec
int3
xor
jmp
int3
and
push
rolb
lret
xchg
movsl
loope
and
sarl
popa
fists
dec
into
xchg
mov
mov
add
mov
sub
aas
xchg
movsl
mov
inc
mov
cld
aas
push
mov
ficompl
in
xlat
stos
das
add
pop
adc
sub
fdivs
mov
std
cmp
or
lret
xor
mov
xchg
mov
out
call
jbe
xorl
jge
adc
or
lods
dec
out
mov
lods
fcomps
mov
push
shl
jmp
es
pop
xor
lret
xchg
dec
rcrl
outsl
jno
cmp
add
sbb
xchg
js
push
push
fwait
pop
pop
addr16
test
inc
xchg
jno
notl
andl
cmp
sub
rcrl
dec
mov
add
cmp
adc
mov
mov
and
jp
inc
lret
sti
cmpsl
in
mov
pop
mov
fisttps
sub
mov
dec
mov
sub
movl
sbb
mov
mov
dec
inc
cmp
outsl
jp
gs
push
jnp
loopne
clc
sub
dec
pop
int
jo
inc
dec
jecxz
pop
push
jb
jno
inc
inc
xchg
ret
dec
mov
sbb
sbb
in
jmp
xchg
jbe
dec
ja
pop
push
sarb
iret
sbb
insb
daa
ss
popf
push
inc
ret
add
divb
pop
add
mov
outsb
pop
fld1
jge
int
mov
cwtl
outsb
cld
adc
leave
fdivl
aam
mov
repnz
bound
int3
in
pop
jbe
mov
lds
push
sbb
add
sti
cmp
outsl
mov
das
aam
cmc
ja
push
cmpsb
stc
or
fwait
jge
je
jle
aam
inc
mov
xor
xor
jbe
hlt
mov
jae
imul
adc
cmp
mov
repz
cwtl
lock
and
jo
inc
fists
repnz
lahf
mov
ss
fcompl
mov
dec
test
cli
cltd
movsl
lock
sub
fucom
int
outsb
sub
ja
inc
fdivp
andl
lea
fsub
gs
xchg
in
mov
out
aas
push
les
incb
jbe
push
dec
sub
pop
fwait
xchg
sub
push
xor
xchg
cli
repz
sahf
adc
insb
jne
add
push
in
xchg
in
lahf
dec
jl
mov
sub
sti
cwtl
add
idivl
sub
das
pop
cwtl
pop
ljmp
push
push
std
jecxz
jne
and
scas
or
mov
and
adc
dec
daa
push
add
daa
inc
push
xor
nop
push
fisttpll
pop
adc
iret
xor
mov
inc
addr16
cld
xchg
adc
stos
mov
cwtl
xor
rcll
int
sbb
rorb
pop
ret
inc
xor
mov
inc
stos
rcll
jne
addr16
jmp
daa
jo
inc
cmp
jns
inc
sub
mov
icebp
test
mov
iret
mov
idivl
fmull
imul
push
es
fisttpl
sub
xor
sub
in
adc
stos
filds
call
dec
clc
dec
loopne
iret
jg
add
imul
mov
inc
push
cs
enter
mov
out
out
push
loop
in
adc
sbb
cmp
iret
aam
cmp
sub
fcoml
popf
add
push
cmp
jb
adc
inc
xor
outsl
add
in
push
iret
and
paddsw
xchg
mov
popf
test
cmp
mov
xchg
mov
sbb
sahf
outsb
scas
mov
in
inc
jb
dec
pop
gs
push
pop
pop
je
cltd
leave
inc
mov
adc
adc
mov
test
js
push
iret
sub
rcll
xchg
xchg
jns
out
lret
sahf
mov
ficompl
and
push
jae
hlt
mov
fcmovu
test
arpl
fisttps
mov
insl
push
int
push
int3
shll
mov
xchg
push
jbe
fisubrs
sti
loopne
insl
mov
incb
pop
sub
or
cmpsb
pop
mov
push
iret
sti
adc
jo
xchg
cmp
or
bound
mov
or
push
or
cmp
outsl
mov
push
enter
popa
lods
mov
call
ljmp
sbb
inc
push
sbb
aaa
jg
adc
push
pushf
popf
jne
xlat
xor
add
imul
fs
inc
aaa
jecxz
xchg
xchg
jl
loope
xlat
mov
loop
add
div
jno
xchg
xor
aad
cmp
or
push
inc
jns
xchg
mov
pop
mull
dec
mov
nop
pop
enter
sbb
arpl
pop
loope
scas
fldcw
jae
xlat
dec
and
in
fwait
popa
jle
es
push
adc
mov
or
into
nop
addr16
push
push
filds
movsl
dec
and
outsl
mov
inc
push
sub
out
ds
mov
xchg
test
pop
sbb
movsb
add
inc
bound
lea
xchg
cmp
mov
ds
or
gs
mov
push
call
out
mov
cmp
xchg
stc
in
out
sbb
add
inc
flds
add
movsb
adc
mov
test
sbb
xor
in
push
mov
aaa
lcall
in
ficoms
mov
popf
sbb
mov
enter
mov
pop
aad
mov
scas
and
xchg
pop
aam
popa
subl
xlat
loope
out
cmp
push
xchg
jae
add
mov
cmpsb
daa
mov
or
mov
lret
and
stos
leave
jns
mov
fucom
mov
test
jb
arpl
mov
jo
sub
sub
scas
dec
pop
pop
or
push
das
sahf
orl
inc
in
ja
pop
out
push
xchg
cwtl
decb
lahf
push
rcrl
mov
xchg
popa
mov
popf
idivl
fdivp
jbe
inc
inc
into
and
out
dec
sub
push
ja
mov
movsl
adc
data16
in
ret
adc
ret
push
ret
mov
in
adc
pop
jle
dec
adc
xchg
cmc
out
inc
std
in
push
mov
out
cmp
repnz
and
jbe
cmpsl
mov
test
cld
mov
dec
sub
xor
add
adc
daa
jbe
ret
xchg
leave
loop
ret
mov
push
fmuls
outsl
fidivl
popf
fimull
sbb
lret
cmp
push
cmpsl
sahf
in
pop
mov
and
or
adc
fisubrl
jmp
mov
shrb
xor
out
daa
cmpsl
std
lret
imul
xchg
lahf
push
je
sbb
ljmp
movsb
insb
cwtl
xlat
fsubp
add
mov
scas
dec
jmp
jp,pn
mov
push
out
stos
push
mov
aad
xchg
xchg
mov
xor
xchg
pop
mov
shll
sub
inc
push
push
dec
cmp
out
dec
inc
fists
jge
int
repnz
adc
cmp
or
int3
push
cmp
or
mov
xlat
pop
xor
cmp
icebp
adc
cmp
dec
sbb
sahf
hlt
adc
out
add
inc
inc
mov
out
dec
mov
sbb
cmpsb
add
cld
pushf
pop
test
sub
outsb
push
pop
push
inc
push
jp
inc
cltd
inc
int3
and
xor
xchg
popf
fwait
insl
sub
fs
mov
and
test
pop
add
and
pushl
jp
loop
gs
int
aam
push
dec
xor
sbb
clc
sahf
mov
pusha
sbbb
inc
shrl
out
add
cmc
testb
lret
lret
or
ja
adc
push
xor
cmpsb
out
stos
dec
cmp
xchg
movsb
push
jecxz
adc
pop
ret
mov
pusha
ss
fists
sub
mov
ret
test
ja
movsl
test
lret
cmp
and
sbb
mov
shlb
add
repz
jmp
xor
push
sub
clc
stos
test
jae
ljmp
and
inc
stos
popa
jg
or
je
adc
iret
stos
into
xchg
and
rolb
cmp
adc
outsb
jb
pop
lock
cmp
fldt
cmp
test
push
jne
jl
inc
enter
push
mov
adc
sub
lods
jnp
flds
ficoms
pop
push
jns
pop
aas
push
ret
and
popa
sub
mov
jbe
jmp
push
cmc
sub
xor
adc
aas
testl
cs
and
pop
jae
pop
aam
push
sub
shr
mov
cmc
outsb
xor
pop
mov
sub
pop
dec
xchg
outsb
sub
je
and
out
push
nop
fcom
xor
dec
xchg
mov
add
lock
push
inc
int3
test
pop
clc
sbb
sbb
jle
add
xchg
xor
in
adc
inc
xchg
pop
and
loopne
mov
add
in
mov
or
into
jp
and
push
mov
sbb
mov
add
aad
mov
addl
mov
cmp
arpl
fstps
xchg
and
adc
pop
push
sti
shll
nop
lret
xor
push
jle
adc
xor
inc
xchg
movsb
clc
mov
repz
fcomps
sub
mov
ss
in
lock
or
and
push
icebp
jmp
ss
inc
aaa
add
fidivrl
push
aad
push
dec
gs
pop
ljmp
call
jp
fidivrs
repz
call
mov
pusha
push
divl
mov
test
add
mov
and
mov
pop
mov
fcomip
lret
scas
lds
xor
lock
adc
xchg
sub
jg
das
flds
cmp
pop
pop
pop
inc
pushf
push
loopne
dec
or
sbb
inc
jp
xchg
scas
adc
cmpsb
aam
lea
xchg
ljmp
dec
mov
gs
inc
xchg
jb
adc
sahf
add
loopne
xor
pop
mov
sti
roll
add
outsb
sub
mov
pop
cmc
cmpsb
in
pop
mov
orb
jo
xchg
jp
movsb
gs
cmp
rcll
lods
add
push
xor
pop
sub
repnz
mov
int
mov
add
jg
in
mov
mov
mov
add
mov
xchg
jne
mulb
jmp
stc
dec
mov
adc
jp
xchg
cwtl
imul
movsl
mov
mov
and
rorb
cmc
data16
insl
dec
add
sub
jb
add
fldlg2
or
sub
dec
bound
repz
push
add
mov
loopne
xchg
popf
and
and
shrb
push
out
pop
lret
pop
sti
mov
cmpps
pop
gs
ret
jp
xchg
je
in
outsb
js
jecxz
cmp
orl
mov
fnstsw
or
or
adc
or
jecxz
pop
insb
push
aam
movups
and
mov
adc
lea
test
mov
inc
aas
or
gs
idivl
sbb
clc
mov
jl
je
jle
jmp
call
or
mov
mov
jmp
add
jnp
std
xor
inc
xlat
dec
sahf
add
jne
jne
adc
and
mov
daa
or
push
leave
lods
dec
test
inc
mov
outsb
push
inc
dec
mov
push
lahf
icebp
mov
mov
sub
test
push
insl
fldl
sbb
inc
sbb
sti
adc
pop
jns
lea
out
insb
nop
push
or
or
fiadds
xchg
mov
mov
sbb
es
enter
xor
push
jb
mov
inc
mov
rcl
pusha
hlt
adc
test
inc
aas
sbbb
xchg
add
mov
into
hlt
fcomip
mov
incb
add
lahf
and
and
movsb
out
loopne
sbb
xor
xor
or
aaa
cmp
sahf
aam
or
outsl
mov
mov
enter
sbbl
sub
in
psubb
into
push
sub
dec
lret
in
and
or
ds
lock
adc
xor
xchg
xchg
dec
loope
adc
lcall
test
adc
arpl
push
addb
lds
sub
call
sbb
ror
int3
adc
inc
test
pop
sti
cltd
and
mov
jecxz
add
push
addb
adc
mov
aas
cld
sbb
inc
mov
pop
sub
jl
jno
lret
sbb
adc
scas
daa
dec
divl
pop
inc
cmc
mov
pushf
addl
sub
push
hlt
sub
loope
or
or
insl
lods
jg
jle
shr
lcall
push
arpl
add
lds
cmp
in
inc
jnp
push
js
mov
pop
push
call
cmp
cld
daa
add
in
int3
jb
jecxz
push
cmc
mov
inc
test
xor
call
ret
xlat
in
xor
pop
int
cmp
ljmp
sbb
mov
cmp
popa
mov
and
aad
jno
popa
aam
cmp
dec
into
scas
push
cmc
stc
es
mov
push
pop
aam
mov
cmp
xchg
in
and
flds
and
rcrl
ja
sub
xor
dec
and
mov
test
xchg
sub
xor
push
outsl
outsl
out
les
mov
push
xchg
push
mov
jae
and
sbbl
mov
sbb
mov
iret
adc
stos
stc
sbb
mov
mov
mov
dec
inc
addr16
adc
sbb
addr16
xor
push
cmpsl
cmp
roll
push
andl
xlat
mov
test
ss
xchg
lods
fcmovnb
pop
shrb
lret
test
pop
mov
ss
mov
fwait
mov
adc
mov
mov
dec
lds
lock
outsb
shl
xchg
enter
ret
ljmp
je
pop
leave
sub
jl
cli
adc
adc
es
dec
dec
cmpsb
and
inc
cld
popa
pop
add
xor
xlat
fcomps
pop
cltd
shr
clc
out
fistps
insl
pop
inc
add
ret
xchg
or
dec
rcrl
gs
pop
mov
pop
mov
arpl
add
push
cld
xchg
ja
and
daa
leave
ret
mov
lret
xor
xor
out
enter
repz
mov
mov
adc
lret
adc
ret
daa
aad
or
push
mov
cli
roll
mov
popa
mov
fistl
lahf
cmp
call
pop
ljmp
jle
cmp
mov
inc
sbb
xor
pop
xor
sbb
enter
movsl
mov
clc
cmp
mov
mov
out
addr16
imul
push
adc
lods
mov
xchg
mov
lods
stc
and
push
dec
pop
push
mov
push
or
add
pop
jp
inc
jo
inc
scas
push
and
insb
sub
sbb
push
subl
mov
adc
pop
sub
inc
je
pop
rorl
mov
ja
xor
push
aaa
push
mov
sbb
sahf
jle
pop
adc
cmp
in
scas
mov
arpl
pop
push
fisttpl
xchg
mov
int
jg
ljmp
into
repnz
or
xchg
clc
in
adc
loopne
les
xchg
mov
cld
cli
insl
lods
pop
test
xchg
mov
lahf
mov
int3
sub
cmpsb
and
mov
adc
mov
nop
sbb
test
xlat
sahf
inc
dec
je
les
popf
pusha
cmp
insl
inc
inc
les
mov
loop
inc
sbb
mov
aas
xchg
xchg
mov
data16
out
pop
or
lea
in
cltd
push
dec
imul
sbb
add
cmc
mov
stc
mov
pop
movsl
into
dec
dec
subl
jge
gs
aad
ret
ficoml
ja
pop
add
popf
je
pop
and
sti
adc
insb
cmc
scas
std
cmp
adc
and
ja
dec
sub
sbbb
pop
rcrb
mov
jp
mov
xchg
out
subl
or
push
cltd
xchg
xchg
test
sahf
xchg
scas
cmc
push
aaa
pop
ret
cli
mov
out
stc
pop
pop
imul
gs
imul
int
and
rclb
add
stc
jb
push
leave
cmp
call
xchg
push
in
in
idivb
xchg
mov
lock
inc
add
lret
mov
mov
push
push
inc
aaa
lock
pop
out
fsts
addr16
inc
mov
xor
lods
dec
and
inc
mov
popa
inc
jmp
std
es
ret
ljmp
movsb
sbbb
jne
or
and
mov
push
mov
fwait
lods
push
push
mov
fwait
mov
scas
dec
pop
data16
aas
ficoms
ljmp
daa
pop
movsb
dec
jb
fstpl
shll
cmp
movsl
popa
xchg
push
movsl
fmuls
addr16
cli
xor
mov
push
arpl
inc
xor
ret
xchg
jle
sub
insl
adc
sub
sti
les
lahf
je
repnz
adc
dec
sub
repz
pop
and
lret
push
xor
push
fistpll
in
rcrb
dec
sub
outsb
push
fsubrp
ficoms
aas
and
jge
mov
xor
xor
dec
gs
adc
mov
test
or
push
call
push
movsb
xor
jbe
mov
and
in
jb
mov
cltd
hlt
mov
fcmovnbe
cmpsb
mov
adc
xchg
pop
jge
rcrl
jmp
pop
bound
icebp
mov
out
cmp
xchg
test
and
cli
mov
xchg
inc
fsubs
pop
sub
push
inc
push
or
out
pop
inc
in
sub
shlb
jb
jo
cmc
shl
adc
dec
fwait
push
lds
pop
call
mov
sub
fcompl
fildll
cmpsl
dec
rclb
sbb
mov
mov
out
mov
push
jle
jns
cmp
xor
cmpsb
cmp
mov
test
adcl
xchg
lods
mov
lea
cmp
jne
jmp
cmp
jmp
jp
movsb
adc
and
sahf
push
sub
and
sub
mov
ret
cmp
inc
stos
ret
pop
xlat
into
inc
stos
push
movsb
jge
jg
mov
idivb
imul
push
mov
adc
test
jmp
sub
mov
mov
dec
cmp
aam
adc
mov
push
cmc
xchg
jbe
ja
adc
jmp
mov
into
in
pop
lods
sbb
test
in
jl
fdivs
mov
lods
in
js
or
xor
pop
push
fstl
dec
sub
mov
pop
pop
xchg
insl
xchg
mov
dec
xlat
inc
lds
push
cwtl
jns
jmp
mov
out
andb
xor
ret
jno
fnstsw
and
push
pop
aas
shr
and
xchg
imul
lea
fisubl
dec
push
sbb
xchg
clc
sbb
push
or
add
orb
iret
or
pop
push
fs
enter
dec
ljmp
ror
pop
jge
out
sub
arpl
mov
out
enter
in
insb
outsb
insl
arpl
push
pusha
clc
and
je
test
sub
mov
push
data16
sti
sbb
or
je
imul
inc
fiaddl
or
lret
mov
cs
dec
js
in
cwtl
xor
fwait
push
ret
sbb
cli
insl
insl
add
in
stos
sti
cmp
mov
mov
mov
jns
lods
cmp
pop
and
inc
push
push
mov
pop
shl
out
sbb
gs
mov
adc
into
lret
adc
cmp
ds
inc
nop
fwait
lcall
xor
add
mov
je
xchg
push
jb
and
xchg
push
rol
jmp
pop
or
sub
cmpsb
jle
lret
xchg
mov
les
cmp
mov
adc
adc
pop
push
fldl
lods
aas
inc
scas
pop
push
ret
xchg
shrl
ficomps
int
insl
mov
add
pop
xchg
clc
fdivl
cltd
jecxz
adc
or
pop
xchg
cwtl
aam
add
fs
mov
jmp
dec
jg
mov
inc
push
jae
inc
adc
mov
mov
mov
stos
jmp
jle
jns
adc
jo
push
add
seto
dec
stc
out
mov
out
rolb
andl
mov
les
lret
dec
inc
inc
jecxz
xor
xor
add
mov
mov
mov
jmp
inc
scas
add
rcll
and
mov
notl
dec
cmp
lock
arpl
lds
sub
add
outsb
aad
push
mov
sbb
fldt
fnstenv
jge
mov
cmc
mull
pop
insb
add
arpl
fnstenv
insb
adc
sahf
data16
pop
and
pop
cmp
pop
mov
arpl
daa
out
add
lret
in
subb
adc
push
jge
dec
nop
jecxz
or
mov
push
add
stos
mov
adc
lock
mov
push
dec
int
adc
cld
out
pop
mov
das
fadds
icebp
cs
testb
dec
test
xchg
or
imul
sub
shl
mov
shlb
dec
sub
mov
jl
pusha
popf
lahf
and
jl
xchg
add
cmp
sbb
and
call
stos
repz
jle
notl
sbb
mov
pushw
aad
adc
repnz
and
jne
je
jmp
mov
mov
push
xor
adc
bound
pop
mov
out
jno
xchg
cmp
bound
mov
add
enter
mov
inc
ss
jmp
pop
adc
add
xor
sti
fwait
xor
daa
adc
enter
ret
dec
scas
repnz
jecxz
lret
jno
xchg
xor
scas
and
sbb
inc
cltd
jg
scas
push
mov
xchg
add
adc
mov
pop
es
cmpsl
push
pop
scas
mov
push
flds
or
push
scas
out
xlat
mov
loopew
sbb
lea
jp
dec
sahf
mov
pop
jbe
xchg
jecxz
dec
loopne
mov
or
jl
mov
add
icebp
rol
fcmove
mov
push
pop
cmp
push
ja
pop
sahf
fistps
or
aas
push
mov
pushf
xor
sub
pop
mov
xor
lods
dec
or
or
insl
ret
add
stos
movsl
stos
aas
mov
mov
jo
add
adc
lahf
stos
jbe
in
lahf
push
popf
pop
imul
je
leave
xchg
outsl
push
jbe
add
jge
ja
neg
pop
sbb
jmp
inc
cltd
mov
std
nop
lret
lahf
dec
xchg
je
loope
adc
mov
andl
sub
sub
push
pusha
out
ret
xor
repnz
add
pop
imul
in
inc
aad
outsl
dec
mov
sbb
dec
lea
push
jbe
or
mov
cmp
xor
dec
lea
inc
cmp
and
cmp
dec
rcr
cli
mov
ds
gs
add
cmp
filds
adc
dec
push
jne
clc
rclb
dec
ss
dec
stos
add
in
aaa
jecxz
push
subl
xchg
mov
fidivl
push
mov
push
das
mov
popf
repz
insl
test
cmc
sub
pop
lock
gs
clc
xor
add
xor
mov
test
insb
call
popa
xchg
xchg
test
filds
stos
je
loop
fsubrs
and
dec
lret
mov
ss
jnp
cli
adc
add
negl
in
aas
cmp
popa
push
subb
int3
imul
adc
dec
imul
jnp
jbe
and
enter
push
xchg
jmp
fcomp
out
test
push
nop
ficoms
pusha
jo
push
or
lock
subb
divb
push
aas
dec
or
in
outsl
movsl
repnz
or
mov
adc
sub
pop
in
jbe
or
cmc
fimuls
adcb
add
repnz
pusha
or
fcomp
ds
xlat
push
adc
jmp
sub
jge
add
sub
or
sub
int3
sub
lock
pop
decl
rcll
xchg
outsb
push
adc
stc
inc
aas
and
add
aam
out
rcrb
and
out
in
jnp
cltd
add
out
sub
jl
daa
add
ja
sub
pop
lahf
lods
xor
iret
mov
daa
lea
pop
jns
into
xor
out
jb
lret
mov
jp
cmp
push
xchg
mov
test
call
movsl
in
or
add
pop
jb
mov
imul
adc
test
dec
imul
dec
sbb
pop
cmp
mov
dec
je
cmp
cmp
jno
outsb
sbb
sub
lahf
aad
sti
and
test
enter
mov
in
es
out
sub
mov
inc
sbb
cmp
mov
fidivrl
or
ljmp
in
push
ss
mov
and
cmpsb
inc
mov
andb
dec
daa
push
iret
pop
pop
push
xlat
in
jle
inc
scas
into
inc
lds
mov
cwtl
lret
add
sbbl
cmpsb
out
lods
mov
add
call
mov
mov
sbbb
cmpsb
mov
cmp
jecxz
sbb
orl
test
mov
add
loopne
xor
out
cmp
leave
out
add
adc
loopne
mov
sbb
push
push
mov
jne
notl
sub
mov
inc
outsl
stos
pushf
mov
cmp
sub
push
lock
js
dec
jl
inc
imul
cmc
cmp
imul
lret
pop
sub
mov
repz
enter
cld
push
pushf
add
jg
cmp
cltd
push
aam
in
rorl
aad
lds
ficompl
shl
pop
loope
fstp
pop
inc
fisubrs
sbb
lods
add
inc
and
aad
insl
fwait
cmp
dec
sbb
stos
aam
pop
mov
pop
dec
in
ret
jl
sar
adc
ss
xlat
mov
insl
or
xor
sub
mov
pop
adc
lods
in
repnz
fcomip
ret
push
enter
aas
pop
addr16
cmpsb
xor
or
insb
jmp
jp
movsl
out
inc
test
add
jmp
subb
sub
mov
lock
xchg
adc
push
fs
push
push
call
test
fld
mov
push
push
pop
in
mov
mov
imul
xchg
je
sbb
xchg
in
push
inc
imul
cmpsb
cli
loop
pop
push
stc
cli
inc
sub
int3
int
adc
jg
mov
push
outsb
jge
and
lret
imul
dec
jae
stos
mov
lods
arpl
in
sar
lcall
pop
pop
xor
jmp
sbb
adc
cmp
jge
int
enter
faddl
imul
pop
aas
pushf
jbe
mov
icebp
enter
mov
repz
dec
gs
dec
adc
cmpsb
cltd
push
lahf
ss
sub
cmp
into
xor
scas
xlat
movsb
addb
sub
scas
cmp
pause
jb
ds
jbe
enter
jmp
adc
pop
dec
cli
in
outsb
notb
je
test
push
testl
mov
test
jp
dec
sbb
dec
push
cmp
lods
int3
xlat
lea
push
xchg
test
push
mov
lahf
mov
cmp
mov
sbb
sbb
mov
div
hlt
stc
call
push
mov
shr
test
mov
mov
pop
jp
xor
insl
insl
repz
jp
cmp
or
out
xor
xchg
push
mov
inc
and
adc
push
frstor
clc
jb
dec
fsubr
inc
sub
sbb
push
popf
repz
push
mov
pop
shl
popf
adc
dec
cmp
mov
js
jne
cli
dec
push
add
adc
push
aad
bndldx
movsb
pop
int
mov
movsb
movb
push
dec
xchg
movsb
cmpb
mov
dec
and
dec
lock
mov
sbb
push
or
repz
push
xchg
mov
into
shrb
mov
and
mov
add
sbb
dec
js
leave
sub
sub
notl
fwait
xchg
movl
daa
or
sar
stc
mov
mov
pop
das
ret
mov
daa
or
push
add
adcb
push
in
sahf
mov
xchg
sti
sub
adc
fadd
mov
xchg
jecxz
test
in
mov
jae
leave
pushf
imul
or
adc
stc
fwait
out
sub
lret
push
pushf
not
xor
imul
fldenv
cmp
xchg
mov
out
adc
shll
sub
int3
mov
sarb
jns
out
mov
cmp
cmpsb
sub
push
inc
pop
push
imul
scas
xchg
push
vmovq
test
jmp
cmp
stc
js
sub
js
sub
sub
cmp
into
pop
std
adc
cmpsl
mov
loop
roll
sub
mov
mov
test
aam
lds
data16
jge
adc
adc
xor
sqrtps
dec
and
pop
insl
icebp
orl
lret
movsb
int3
mov
lcall
loope
inc
sbb
lods
mov
cmp
xlat
jmp
fwait
jo
and
lret
ljmp
into
js
test
popa
icebp
call
daa
jg
inc
inc
push
movsb
sahf
cmp
mov
das
mov
loope
jmp
inc
and
cmc
mov
icebp
mov
inc
and
jnp
sub
mov
sbb
lahf
mov
sub
int
push
jp
xor
jl
xlat
rcl
jge
sbb
mov
jecxz
pushf
test
jecxz
rcl
negb
rorl
loop
pop
pop
dec
cmpsb
or
and
xchg
in
pop
jmp
dec
cmp
or
pushl
cli
das
xchg
dec
popa
adc
scas
imul
stos
pop
aad
pop
std
mov
jb
popf
cmc
xchg
out
js
inc
movl
jae
aaa
fsubrs
jb
icebp
out
dec
lock
in
call
sbb
add
xor
xchg
hlt
dec
test
inc
inc
ds
pusha
mov
loopne
mov
cwtl
mov
cmp
push
lahf
lret
push
fcmovu
loop
push
sbb
jnp
imul
mov
jle
jg
shr
lahf
push
dec
jo
and
or
and
cmc
out
push
in
sub
adc
ret
cmp
jmp
mov
fs
into
sti
or
lret
and
ja
lods
pop
or
leave
or
fldcw
pusha
icebp
xchg
mov
subb
ds
arpl
cmc
or
sahf
sbb
mov
andb
sarl
shrl
fucom
mov
movsl
daa
outsb
xchg
loop
jp
loop
inc
add
sti
lea
cli
rorl
insl
xchg
jl
fidivrs
movsb
pop
adc
xchg
orb
sbb
dec
dec
add
outsl
adc
insl
inc
fdivs
mov
and
pop
push
xchg
fcmovnu
pop
jg
adc
push
aaa
in
roll
sti
adc
stc
sbb
mov
ror
mov
ror
push
cs
pushf
jg
fiaddl
cmp
nop
sub
lcall
pop
or
in
fs
xchg
fdivr
fcmovnbe
push
push
xchg
mov
leave
scas
lods
xchg
nop
mov
outsb
or
mov
les
in
xchg
in
push
mov
or
and
jno
dec
testl
pop
sbb
add
jecxz
pop
push
mov
cmp
xchg
fcmovne
icebp
jne
cmp
mov
jo,pn
jne
push
jno
xchg
cmp
sar
push
push
add
mov
dec
pop
fucomi
adc
xchg
mov
and
push
push
sbb
out
stos
mov
leave
lret
aas
xor
int
fidivrl
roll
insl
push
int3
sub
xor
ficomps
shlb
mov
ss
xchg
jb
out
gs
movsl
je
cmp
pusha
add
mov
xchg
aad
movb
sti
sbb
popf
cmp
jno
adc
sub
lods
movsl
imul
sub
xchg
jp
test
adcb
jecxz
cld
sub
mov
not
loop
sti
mov
inc
cmpb
or
rorl
jle
cli
push
inc
jne
push
pop
xchg
cmc
sbbl
dec
push
dec
mov
sahf
or
mov
or
mov
aaa
aad
ds
sbb
pushf
pop
sarl
lret
je
pusha
jmp
lds
in
jecxz
cmp
mov
inc
int3
jecxz
jns
lahf
sbb
ljmp
repz
ss
lret
mov
movsb
adc
mov
sub
jmp
js
mov
jno
xchg
sub
xchg
jns
scas
shlb
fcmovnbe
fnstenv
jl
lcall
sbb
xor
mov
sub
inc
aas
pop
jb
loop
push
and
or
cltd
cmp
ss
xchg
cwtl
das
ljmp
add
xchg
fcmovbe
or
loop
out
jb
cmpsl
dec
add
sub
xchg
jg
mov
call
jnp
jb
xor
lret
mov
arpl
stos
in
sub
mov
sbb
lcall
adc
push
and
outsl
jg
scas
sti
setno
pop
fcomps
popf
test
push
sub
dec
push
ds
int
pop
mov
mov
xchg
jp
fisttpl
xor
sbb
or
jno
dec
cmp
fnstenv
or
clc
notl
push
out
test
call
and
or
mov
xor
inc
aad
dec
pop
dec
or
add
fildll
outsb
sti
pop
faddp
xchg
xor
pop
outsb
icebp
decl
ret
mov
xor
andb
jle
leave
jp
jae
xchg
adc
push
mov
popf
add
pop
cwtl
cmp
test
ljmp
into
add
dec
into
test
xor
and
xor
xchg
stos
and
lret
cmp
lea
pop
mov
lods
mov
jo
aaa
xor
fstpl
sub
xor
xchg
xchg
subl
push
dec
xchg
clc
lahf
lea
or
rcr
lcall
sbb
mov
lcall
and
sub
cwtl
add
xchg
and
mov
jno
insl
std
xor
aam
mov
push
pop
adc
iret
adc
jns
mov
ljmp
dec
jae
cltd
fisubrl
int
push
testl
push
jns
push
scas
xor
inc
xchg
mov
or
xchg
mov
ret
fldenv
dec
arpl
push
enter
or
imul
cmpsb
sbb
xchg
sub
nop
nop
subb
mov
ja
jo
jp
call
ja
jle
xor
loope
xchg
ds
sbb
inc
inc
mov
and
xchg
sbb
outsl
lds
fcmove
xchg
mov
add
scas
mov
pusha
shrl
mov
testl
or
adc
sub
pushf
inc
add
aam
adc
fistps
xchg
and
cmp
jl
lods
mull
call
jl
mov
ja
inc
or
lret
mov
pop
pop
fists
and
and
mov
sbb
and
nop
stos
jnp
jmp
lds
push
fistps
jns
loopne
fidivrs
rolb
push
inc
cmpsb
outsb
les
jnp
in
call
or
mov
jecxz
mov
mov
xchg
xchg
subb
dec
pushf
cs
loopne
test
loopne
sbb
xchg
add
fistl
clc
jmp
push
fs
add
mov
mov
mov
aaa
enter
lret
fwait
mov
pop
decl
pop
or
mov
sub
push
loop
lods
dec
mov
push
add
mov
imul
daa
fs
mov
hlt
mov
dec
pusha
mov
js
dec
jnp
xorl
fbstp
pop
mov
daa
mov
out
xor
push
rsqrtps
test
adc
addr16
cs
jo
sub
jecxz
pop
and
fstpl
adc
cltd
out
or
mov
cmpsb
jle
in
loop
out
xchg
xchg
mov
mov
jecxz
pop
iret
into
xor
gs
dec
sbb
pop
xchg
daa
push
xor
aaa
add
iret
ret
int
and
out
mov
xor
mov
stc
aas
cmpsb
test
mov
jae
pop
repnz
out
xchg
fdivs
scas
mov
addl
pop
pop
in
adc
dec
out
out
das
repz
jp
daa
mov
mov
push
imul
push
pop
icebp
xor
adc
popa
rcrb
jmp
mov
shll
mov
insl
cs
mov
fwait
jo
mov
mov
push
in
lods
fbstp
data16
popf
inc
iret
mov
inc
inc
popf
jae
pop
js
test
mov
and
ds
cmp
popf
sbb
cltd
mov
sbb
int
out
pop
daa
add
mov
in
sbb
dec
fs
mov
add
jae
jnp
mov
sarb
dec
std
nop
or
lods
mov
jns
hlt
data16
pop
dec
enter
ds
add
outsb
mov
mov
aad
jge
sub
sbb
pop
mov
cmc
fstp
arpl
test
popa
mov
in
cltd
test
cmc
jnp
xor
pop
stos
dec
pop
and
and
iret
scas
inc
xor
and
std
jns
push
addr16
mov
xchg
test
mov
sbb
xchg
push
pushf
inc
mov
dec
jo
std
scas
push
out
cmpb
es
dec
jno
push
sbb
xchg
sbb
ret
xchg
or
fs
push
xor
mov
in
sub
gs
inc
iret
dec
jns
adc
add
test
mov
mov
mov
test
test
iret
inc
lcall
or
sahf
push
lahf
jo
arpl
mov
xchg
pop
push
test
inc
ret
dec
cmp
add
push
push
hlt
test
add
ret
or
lret
pushf
cmp
xchg
loop
mov
push
cmp
je
std
and
mov
insb
adc
aam
scas
and
ja
sub
adc
adc
cmp
jecxz
xchg
inc
pop
xor
cmp
add
mov
pop
stos
push
popf
jbe
xor
shl
lea
scas
inc
mov
lahf
in
enter
sbb
mov
xchg
fdivrl
call
sbb
or
popf
pusha
mov
xchg
jle
pop
fisttpll
mov
pop
xlat
fmull
push
sub
fs
in
mov
loop
andb
mov
mov
sub
mov
inc
lea
test
mov
loope
adc
sti
sbb
add
aaa
push
int
mov
cmpsl
mov
pop
stc
pop
aaa
jmp
cmc
shll
adc
rcrl
ffreep
stos
push
pop
xor
push
je
leave
nop
fstl
sahf
mov
aam
mov
push
jecxz,pn
out
fdiv
mov
jbe
addr16
test
into
sub
adc
bound
into
mov
dec
pop
mov
ds
mov
into
in
outsl
mov
incb
pusha
push
aam
mov
imul
sub
or
enter
xor
and
mov
dec
in
mov
inc
xchg
push
mov
daa
pop
jecxz
mov
mov
jae
icebp
dec
inc
mov
fcompl
jle
pop
pop
mov
jae
push
ficompl
decl
add
insb
pop
stos
sbb
inc
fcomp
add
pop
jns
cltd
fwait
ret
leave
xor
shl
cmp
add
xor
push
lea
cli
jnp
lret
faddp
and
xchg
cltd
jbe
push
mov
insl
out
jmp
pop
pushf
mov
outsb
jne
arpl
push
mov
filds
stos
cmp
popf
loop
fbld
and
movsl
fbld
jne
clc
jno
out
or
scas
mov
mov
mull
cmc
add
shlb
dec
mov
cmpxchg
ret
xor
stos
popa
push
push
iret
stc
ljmp
push
inc
movsl
test
imul
inc
stc
push
sti
push
es
cmp
sbb
mov
push
sub
out
stc
mov
mov
enter
pop
aam
addps
xor
add
xlat
mov
jb
mov
repnz
xor
cmp
clc
mov
sbb
hlt
xchg
mov
xlat
mov
aad
popf
xor
mov
popl
pop
clc
and
ljmp
stos
add
mov
inc
xlat
sub
xchg
push
shlb
fnstsw
or
lods
loopne
outsb
dec
das
inc
ret
sarl
jge
cmp
or
cmpsl
push
push
pop
enter
outsl
in
jno
iret
jno
jo
mov
pushf
mov
std
std
call
fcoml
addr16
out
push
xchg
loopne
mov
jecxz
sub
inc
xchg
jns
or
rorb
push
andnps
testl
jno
adc
xchg
push
sub
leave
bound
mov
inc
jp
dec
cmp
jg
sbb
ja
mov
test
addr16
es
sarb
loop
shll
sbb
xor
xchg
std
mov
enter
mov
leave
sbb
repz
fucomip
xchg
push
dec
jb
leave
movsl
loope
ljmp
sub
cltd
imul
enter
sbb
daa
adc
fldenv
jno
ja
fstl
aad
div
jae
adc
adc
mov
or
aam
push
cmp
pop
fdivl
icebp
loop
mov
fildl
cmp
mov
mov
and
hlt
in
mov
push
jp
mov
je
in
adcl
or
roll
clc
jl
or
ficoml
jmp
sub
inc
pushl
imul
jmp
fwait
cmp
push
inc
into
dec
fimull
sbb
ss
jb
push
ds
add
mov
xchg
push
cld
add
dec
mov
sbb
lods
dec
jo
mov
adc
cmp
fldt
mov
adc
cmp
add
push
cmp
test
lods
shrl
pop
nop
sbb
push
pop
in
xor
xor
stos
ret
mov
push
packuswb
sub
mov
fwait
cmpsl
xchg
adc
or
imul
out
das
ss
dec
mov
lock
mov
adc
jl
fmulp
repz
scas
ss
addr16
dec
xchg
je
dec
mov
push
mov
gs
aaa
fidivl
xor
sub
mov
cmp
xor
aas
adc
mov
shll
lcall
sti
and
xor
cmpsl
mov
ret
jno
pop
jns
sub
and
sbb
sti
jbe
jb
jecxz
push
int
or
stc
ljmp
into
daa
imul
mov
jmp
iret
hlt
call
out
lcall
mov
xlat
scas
push
cmp
pop
jb
call
sub
inc
mov
sub
loopne
inc
insb
idivl
mov
add
push
stos
test
mov
lds
stos
cmp
xor
call
nop
dec
jns
inc
pop
dec
xorps
cmc
inc
jecxz
mov
mov
xchg
shrb
push
jle
imul
push
rcr
pop
xchg
jmp
call
cmp
addb
addl
cmp
push
adc
sub
fsubp
popf
stos
pushf
cmc
lea
mov
jmp
jae
je
and
lcall
sbb
pop
adc
bound
and
adc
dec
insb
add
xlat
imul
pop
xchg
stos
mov
jmp
add
cli
repnz
sbb
cli
cmpsb
pop
loop
sbbl
jo
push
xor
dec
jnp
insb
rcr
adc
push
bound
cmpsb
push
inc
nop
dec
aas
xor
fldcw
fdivrl
ret
fs
pop
xchg
pop
or
and
sahf
into
mov
enter
scas
xchg
adc
and
xchg
pop
mov
out
cmp
xchg
sahf
xchg
mov
call
mov
add
cmp
dec
leave
mov
lcall
aas
mov
dec
xor
sbb
push
repnz
pop
cmpsb
sbb
addr16
clc
mov
ljmp
adc
xor
andl
int
dec
cwtl
cmc
mov
and
xchg
cmp
sti
sbb
je
js
push
adc
mov
fiaddl
pop
mov
mov
insl
sbbl
mov
call
mov
pop
pop
xor
and
aam
sub
js
fwait
out
or
test
xchg
daa
or
repnz
xchg
in
adc
cmpsb
into
mov
inc
or
aam
pop
icebp
pop
sbb
add
sub
sub
xor
and
popl
test
adc
sub
add
mov
mov
mov
test
arpl
add
shlb
les
sbb
push
mov
xor
es
lahf
push
pop
mov
addr16
clc
add
xchg
notb
fcmovne
inc
and
aad
sbb
daa
nop
cwtl
cmc
das
popf
jb
push
pop
fisttpll
mov
add
cmc
bound
xchg
addr16
stos
add
xchg
cmpsl
ja
mov
int3
sarb
adc
test
pop
push
mov
sbb
je
stos
xchg
or
rclb
int
xchg
ds
xorl
fsubp
xor
mov
les
shrl
add
gs
call
ret
scas
inc
shlb
inc
cmp
fwait
jg
jle
mov
sub
or
pop
lahf
out
scas
cmpsb
push
sbb
sub
ret
sub
pop
mov
mov
daa
push
inc
lahf
in
mov
add
test
jne
in
hlt
or
xchg
dec
cli
mov
cld
add
push
xchg
or
aas
es
hlt
loopne
jno
mov
sti
sbb
aad
mov
cmp
xchg
in
jb
adc
loopne
lahf
jb
mov
scas
xchg
nop
inc
sub
aas
mov
out
fldt
jb
stos
ljmp
lods
js
xlat
xchg
mov
adc
mov
push
jmp
in
and
shll
rcl
hlt
rcll
jmp
jne
sbb
pop
pop
ds
or
jno
aaa
lahf
cmp
stos
subb
popf
fdivrl
fidivrs
cmc
cmp
inc
fistpll
pop
fmuls
pop
testb
mov
inc
out
inc
push
fldcw
daa
sbb
fildl
mov
imul
test
jg
fs
test
mov
push
xor
pop
xchg
cmp
and
loopne
sub
sbb
push
dec
outsl
xor
mov
mov
cli
lock
lods
and
leave
rol
push
mov
pushf
or
xor
mov
mov
dec
hlt
mov
dec
fwait
out
dec
sub
ret
cld
inc
jne
xor
mov
mov
mov
xor
inc
mov
mov
lods
inc
int
xchg
iret
push
lods
pop
xor
and
repz
mov
shlb
je
test
pop
movsl
addb
and
and
pop
out
jb
xchg
jnp
nop
mov
fs
into
pusha
outsl
dec
push
jbe
mov
aam
add
nop
cld
cld
out
insb
inc
mov
push
cmp
cwtl
cmpsb
mov
or
dec
in
test
jb
mov
jo
nop
sub
xchg
imul
aad
popa
adc
shrl
sbb
out
push
jl
pushf
push
ss
pop
es
test
inc
push
stos
in
inc
add
lahf
das
fadds
mov
fdivrs
push
mov
jecxz
int3
lods
in
sbb
mov
negl
or
mov
add
into
add
sub
xchg
orl
jnp
sbb
outsl
leave
mov
fildll
shrl
sbb
dec
gs
ds
inc
shr
shlb
adc
and
push
or
js
pop
and
inc
inc
cmp
adc
xor
fidivl
repz
sub
add
pop
aas
mov
loopne
fsub
xor
lcall
mov
and
or
sarb
lret
lcall
aam
das
sti
push
lret
inc
inc
fwait
adc
adc
push
sub
mov
gs
les
xor
push
shlb
dec
test
mov
and
pop
popa
and
xor
or
sarl
popf
mov
loope
jne
sub
lock
out
xlat
lea
aas
mov
jg
xor
push
push
bound
lds
jnp
jne
inc
call
sbb
mov
inc
push
sti
ljmp
mov
test
notb
ljmp
mov
push
inc
dec
jl
test
fcoml
pushf
fs
stc
and
sbb
mov
sahf
push
loope
mov
dec
lea
cmpsl
mov
sahf
rcr
cs
ljmp
jecxz
sbbb
push
mov
pop
daa
jae
stos
hlt
loopne
mov
lock
xchg
hlt
xor
push
fisubrl
jecxz
bound
out
shl
sahf
test
jnp
in
inc
add
push
in
test
xchg
pop
in
ljmp
test
jg
iret
aaa
dec
pop
dec
cli
insl
test
out
icebp
daa
and
pop
repnz
pop
cmp
or
or
clc
mov
sbb
lods
jecxz
popa
es
int
leave
push
pusha
push
xchg
test
lret
gs
dec
imul
pushf
jle
cvtpi2ps
outsl
add
leave
insl
les
xchg
inc
pxor
fidivs
jp
add
ret
pop
push
mov
jecxz
ret
push
in
js
dec
jb
inc
les
mov
loope
or
loop
pop
insl
mov
and
outsl
dec
movsl
pop
inc
repz
push
lahf
lods
cmp
cmp
cmp
aaa
pusha
fld
push
mov
mov
push
lret
push
aam
mov
mov
xor
aam
arpl
adc
int
lds
inc
push
xchg
jge
jp
mov
testb
das
sub
and
mov
sbb
js
add
jno
inc
out
stos
cmc
stc
mov
cs
cmp
push
movsl
mov
addr16
gs
insb
sub
add
jmp
std
outsl
inc
insl
jle
jno
pop
sarb
sbb
push
fwait
xchg
xchg
into
mov
mov
add
imul
shl
cli
fstl
xchg
adc
add
and
xchg
in
sahf
push
xchg
cmp
cld
decb
cmp
push
and
out
jbe
jmp
divl
test
cld
xchg
pop
push
dec
mov
rcll
scas
mov
mov
nop
cltd
icebp
sbb
sbb
sbb
sub
in
movsb
xchg
clc
jp
xchg
sbb
pop
test
pop
dec
daa
test
and
lret
lahf
mov
or
in
pusha
notb
add
push
pop
mov
mov
xchg
pop
sbb
je
rcrb
sub
mov
adc
sbb
mov
push
das
dec
lcall
jo
lds
push
sahf
cli
test
push
ljmp
jl
xor
xor
leave
push
push
scas
cld
fisubrl
fsubs
push
stos
mov
roll
cmp
xor
cmpsl
pop
sarl
lods
das
mov
pop
stc
cmp
adc
cltd
cmp
aaa
push
cmp
and
mov
jle
notb
mov
insl
dec
insb
das
fsubl
test
es
sbb
pusha
mov
es
jne
jbe
scas
leave
sarw
add
xlat
xor
dec
fwait
cmp
inc
mov
pop
push
lret
or
sbb
lret
neg
sub
dec
scas
mov
dec
pop
sbb
push
iret
cld
mov
xlat
inc
mov
rorb
push
cmp
test
or
cmp
lods
sar
cmpsb
test
enter
adc
push
in
jns
mov
jmp
mov
inc
loope
lods
fldl
sbb
mov
into
push
sub
and
cmpsb
insl
push
icebp
sahf
jecxz
pushf
jns
mov
sub
loop
push
add
and
xchg
cld
sub
iret
pop
push
shlb
outsl
out
cmp
jo
out
das
xor
cmc
dec
xchg
push
ljmp
jo
cwtl
arpl
cmc
mov
push
or
aaa
sahf
call
mov
fsubrs
loopne
dec
test
adc
adc
imul
cmpsl
mov
pop
xor
daa
mov
dec
les
push
add
in
fcoms
cwtl
or
bnd
push
insl
jne
jg
das
daa
xor
jae
lcall
push
xor
lret
lcall
xor
outsl
xor
mov
mov
sbb
push
test
popa
enter
not
sub
ja
loop
rep
jmp
icebp
fmuls
test
sub
insb
xchg
mov
xchg
mov
cmc
lahf
or
pop
aaa
dec
jno
jle
sub
rclb
insb
inc
clc
fistps
andl
pop
mov
cmp
sub
jl
nop
in
push
pop
cmp
ds
sbb
decb
and
and
add
sub
fs
xchg
sbb
mov
xchg
dec
out
xor
jb
xor
inc
in
mov
movsl
andb
dec
popl
rolb
xor
mov
nop
and
pop
sbb
push
sub
jo
repz
pop
cld
arpl
and
xchg
cs
scas
dec
int3
or
std
out
repnz
sbb
roll
mov
movsl
add
ret
sub
dec
and
adc
movsb
cmpsb
gs
and
aam
xor
in
cmc
notb
mov
addr16
or
dec
xlat
lea
mov
mov
rcrb
jl
fucomip
sbb
sub
lock
gs
and
out
jb
shr
sbb
cwtl
xchg
cmc
popa
adc
jns
jmp
cmpsl
aam
sbb
cmp
scas
outsb
mov
xchg
mov
lret
sub
mov
pop
ret
fsts
dec
jg
lods
inc
ljmp
loop
outsb
ficomps
js
adc
outsl
clc
inc
mov
mov
add
bound
push
mov
adc
jp
ljmp
adc
mov
rcll
push
roll
test
or
int
into
cld
in
dec
cmpsb
sahf
popa
push
sub
cmp
inc
loope
adc
inc
fisubs
out
mov
into
mov
mov
xor
or
pop
mov
pushf
leave
stos
jl
mov
cmp
cmp
mov
ds
dec
aam
push
outsl
fs
jle
ss
mov
in
loopne
dec
popf
and
sbb
adc
cmpsl
lods
inc
xchg
ljmp
pop
fildl
xor
or
daa
mov
insb
or
xlat
sub
mov
faddl
jns
push
xchg
ljmp
icebp
or
cld
sub
lcall
mov
jno
xchg
sbb
pushf
or
jecxz
mov
clc
xchg
call
scas
dec
ljmp
sbb
iret
subb
test
inc
hlt
or
stos
sbb
xor
js
push
popf
push
push
xchg
and
push
das
rorl
dec
push
iret
jg
push
sbb
jnp
sbb
and
cwtl
inc
jge
jge
xor
lods
or
or
ss
inc
and
lret
imul
hlt
mov
ret
sub
pop
imul
or
movsb
xlat
rcll
in
mov
mov
std
es
cmpsl
xchg
ds
inc
cmp
pop
andl
dec
sub
ds
ja
mov
add
lcall
pop
xchg
push
mov
lret
lea
inc
outsb
inc
fstpt
xor
testl
lret
push
xchg
arpl
or
rcll
sbbl
and
fisubs
mov
iret
add
xor
in
push
cmc
lret
fidivs
loop
push
clc
and
inc
fldt
shlb
cmpsb
and
mov
inc
inc
dec
divl
jmp
loopne
dec
sti
faddp
adcl
pop
xlat
mov
jo
cs
jbe
or
dec
push
mov
xor
test
adc
xor
and
in
xor
sbb
sti
loope
arpl
daa
cmp
mov
popa
jl
subl
dec
cli
jg
das
inc
pop
lahf
adcl
add
aad
lds
push
lcall
jmp
stos
jecxz
sub
loopne
loope
push
clc
adcb
xchg
pop
aaa
lock
fcmovnbe
stos
rol
popf
adc
sti
ljmp
cmp
cwtl
dec
mov
dec
pop
xchg
or
and
cmp
sub
cwtl
sbb
iret
inc
stos
clc
aaa
lea
das
icebp
add
aas
ljmp
add
xor
sti
sti
xchg
mov
and
add
ljmp
push
jl
imul
mov
std
lock
imul
add
cltd
jecxz
cmp
aad
arpl
add
fs
repnz
arpl
les
lock
aas
and
pop
stos
mov
jno
mov
in
fldln2
and
sti
fstps
fisttpll
inc
xchg
loope
push
cmp
fidivrs
iret
aad
std
aad
das
stos
push
aam
int
inc
ss
decb
sub
adc
ljmp
or
ja
jge
daa
fwait
into
je
push
ds
loop
mov
push
mov
enter
ss
mov
stos
fildll
jmp
dec
cltd
in
xchg
sub
loope
or
pop
xchg
dec
es
sbb
les
add
jno
gs
dec
in
and
cmp
mov
adc
fs
inc
in
repz
loop
js
push
inc
push
cmp
dec
mov
lds
arpl
jmp
stos
loop
pop
fcomp
xor
lea
clc
repnz
jp
xor
mov
push
add
fcmovne
dec
sub
sub
mov
inc
fsubr
movsb
stc
xor
test
mov
sub
jae
lcall
push
inc
sub
sbb
push
lock
das
add
fstps
jp
jno
pop
loopne
xchg
out
pop
inc
mov
jg
ja
pop
mov
push
sbb
cltd
adc
loope
cwtl
bound
scas
les
in
out
data16
repz
mov
out
stos
aam
dec
xchg
xor
into
dec
lahf
data16
test
ljmp
jmp
push
int3
in
scas
push
lret
lahf
lahf
cmp
loopne
mov
sub
imul
xchg
pop
or
adc
lock
mov
xlat
push
mov
xchg
lret
push
lret
imul
lret
test
std
pop
sbb
pop
ja
sub
pop
rolb
adc
jnp
push
shlb
call
bound
jmp
jo
or
fisubs
xchg
outsl
fs
xchg
ret
and
jge
test
dec
js
lock
jne
add
loopne
fcoms
and
push
lret
popa
sub
mov
sbb
repnz
test
arpl
ljmp
or
rorl
jp
orb
xchg
pop
icebp
fsubrs
nop
inc
or
mov
test
out
dec
xor
mov
es
sbb
ljmp
pop
mov
adc
nop
ud2
mov
aaa
sub
xchg
sbb
fcmovbe
lahf
adc
mov
mov
jbe
mov
adc
addr16
fadds
add
xlat
push
sbb
adc
mov
ficomps
adc
sbb
xor
sub
jmp
adc
dec
es
mov
std
std
or
inc
inc
inc
add
cmc
jmp
stos
data16
ds
cmp
rcl
stos
les
xchg
xchg
cmovno
sub
mov
in
pop
fs
and
call
xchg
mov
fcomp
and
iret
xor
sub
adc
mov
sbb
nop
push
or
das
dec
and
stc
mov
cmp
xchg
add
decl
or
mov
push
add
sub
andl
xchg
sub
lret
add
xchg
lcall
cmp
xchg
sbbb
stos
mov
push
fs
pop
out
decb
cltd
out
mov
mov
lret
in
lcall
mov
dec
pusha
sub
mov
add
mov
jp
insl
stos
ljmp
adc
test
mov
xchg
push
shr
inc
push
insl
out
loope
shll
push
push
repz
and
divb
xchg
bound
pop
loop
into
dec
inc
xor
dec
jae
subb
imulb
loop
jecxz
pop
popw
cs
or
add
outsl
cltd
jmp
lds
movsb
cmpsb
jae,pn
aaa
pop
movsb
stos
out
lods
and
je
and
ret
mov
fadds
clc
and
push
lahf
inc
ljmp
shlb
sbb
add
inc
push
add
jbe
pop
sbb
mov
bound
fisubs
test
ljmp
push
fs
cmp
pop
push
int
mov
lahf
movsl
roll
or
out
pushf
fldl
lret
push
fs
jg
sbb
push
shl
cltd
scas
cmpsl
jle
xchg
imul
in
inc
in
movsl
ret
dec
mov
aad
std
cmp
cmpsb
fidivrl
je
pop
aas
push
lret
or
sahf
push
test
lcall
and
xor
adc
pop
sbbb
lcall
xchg
popf
sbb
and
xchg
mov
xor
ljmp
fists
push
std
scas
rcrb
xchg
fwait
jbe
cmp
push
jae
test
je
mov
test
aas
add
pop
ficompl
into
sbb
addr16
faddp
iret
adc
xchg
xchg
pop
push
insb
sbb
shlb
nop
jns
jp
mov
add
and
jmp
push
adc
icebp
jl
mov
cmp
cmp
out
loop
imul
sarb
jns
pop
cmc
in
cwtl
sub
sbb
mov
test
ljmp
pop
scas
shll
push
push
fwait
and
add
dec
sti
push
push
in
idivl
xor
sbb
cmp
xor
nop
dec
sub
pop
fists
sti
gs
pop
cltd
mov
sbb
sbb
mov
pushf
jbe
xchg
je
loope
xchg
sub
inc
push
clc
sbb
xchg
sbb
mov
dec
push
dec
mov
iret
outsl
mov
xchg
fs
and
lret
adc
arpl
sti
adc
inc
add
inc
in
popa
sbb
lret
mov
in
into
lcall
or
add
adc
cmpsb
inc
cmp
sub
shlb
idiv
cld
jmp
iret
jne
cmp
mov
mov
mov
sub
clc
push
sub
sbb
pavgw
fwait
lods
outsb
mov
and
or
inc
pushl
pop
inc
jecxz
push
mov
jne
inc
cs
jno
xor
adc
sbb
gs
xchg
cmp
je
mov
dec
cmp
push
mov
inc
rclb
push
icebp
shlb
push
adc
push
xchg
negl
sbb
sub
js
xchg
xor
jecxz
cld
sbb
imul
pop
xor
add
daa
push
mov
push
mov
inc
mov
mov
cmp
sbb
movsl
xlat
leave
mov
dec
jno
loopne
adc
cmpsb
in
cmp
aas
sbb
iret
js
xlat
inc
dec
xor
mov
pushf
add
insb
insl
fdivr
cltd
jge
pop
outsl
dec
push
xor
xchg
scas
movsl
repz
into
ja
inc
lods
jp
mov
push
add
test
jl
repnz
adc
sub
data16
mov
mov
js
pushf
call
movsl
sbb
sbb
mov
or
xchg
or
cmpsl
pop
mov
push
sbb
lcall
popa
push
sahf
or
fsub
push
insb
outsb
sbb
sar
leave
mov
xor
sbb
in
aam
out
popf
inc
cmp
mov
leave
sbb
pop
adc
fs
adc
adc
inc
cmp
fs
or
jb
gs
inc
adc
aad
icebp
pop
sbb
jnp
mov
adc
es
movswl
sbb
leave
push
data16
clc
movsb
hlt
aam
sub
mov
or
repnz
jb
lock
rcll
in
fwait
mov
scas
jmp
mov
adc
fcom
ffree
xlat
jl
pop
lret
push
cmp
lods
or
jns
repz
roll
das
add
inc
pop
in
mov
sbb
addl
push
aad
adc
cmp
scas
sub
jle
mov
cmpsl
cmpsb
sbb
jmp
out
mov
or
xchg
mov
adc
xor
push
and
int3
das
inc
faddl
dec
fistpl
ljmp
lcall
dec
mov
lock
dec
js
bnd
cmp
mov
scas
sub
aas
jne
mov
add
push
sbb
add
repz
fmuls
cli
or
sub
or
sbb
stos
sbb
test
mov
shr
ja
push
mov
cmpsl
rorb
jl
or
sub
dec
mov
js
dec
jbe
sbb
and
subl
cmpsb
cmp
push
mov
lret
cmpsl
push
inc
and
fisttpll
fidivrl
pop
cmp
jl
or
xchg
dec
adc
sbb
not
call
or
gs
mov
pop
ja
lret
out
jmp
add
fistps
cmpb
cmc
push
test
mov
jbe
mov
mov
gs
xchg
test
inc
lret
es
repz
jo
pushl
xor
jecxz
movsb
mov
loope
add
cmp
cmp
in
mov
mov
mov
in
lods
jae
aas
nop
lcall
popa
jno
ja
jo
xor
ret
cmp
push
xor
inc
xchg
mov
in
xchg
outsb
xor
jbe
aam
push
inc
mov
ss
stos
jns
jl
add
dec
dec
pop
pop
mov
xchg
push
and
xchg
jb
lcall
cmp
jns
sub
xor
mov
mov
dec
push
test
sub
popa
jge
push
test
lock
xlat
imul
testl
xor
xchg
mov
fmull
imul
mov
dec
call
outsb
xchg
and
ds
xchg
sti
adc
movsl
in
xorl
xor
mov
hlt
test
jle
add
sub
mov
and
xchg
shlb
loopne
repnz
int
mov
sbb
xor
stc
hlt
dec
imul
fmulp
cmpsl
push
cmp
jle
jle
xchg
sbb
jno
jno
mov
jg
lret
lcall
test
popa
lahf
testl
mov
daa
pop
aas
dec
mov
ds
out
pop
mov
jmp
pop
scas
ljmp
in
push
ja
push
out
pop
rcll
in
iret
cs
add
fs
cmp
call
push
cmpsl
jp
push
ret
dec
inc
sbb
hlt
or
cmp
loop
push
loop
mov
adc
dec
neg
dec
int3
xchg
xor
test
mov
pop
bound
mov
xchg
sarl
dec
mov
ds
adc
out
cli
js
divb
mov
ds
jns
sbb
fstl
imul
mov
test
addl
pop
lret
mov
call
dec
test
lahf
push
push
jecxz
adc
cltd
arpl
pop
test
imul
xor
hlt
jmp
mov
fcomps
xor
nopl
mov
inc
pop
pushf
push
xchg
mov
arpl
add
jg
sbb
cmpsb
cmp
lods
and
pop
sbb
and
fwait
jg
mov
dec
jp
js
cmp
and
decl
test
and
push
dec
divl
jno
push
enter
je
sahf
cltd
sbb
lock
out
mov
mov
in
pop
mov
fs
push
push
cmpsb
mov
push
arpl
add
or
leave
out
in
repz
pop
inc
xlat
gs
mov
pusha
adc
inc
add
shlb
cli
mov
in
mov
je
shll
mov
aas
out
in
sbb
mov
mov
pushf
xor
popa
mov
mov
add
scas
sbb
dec
dec
push
cmp
les
bswap
jbe
inc
xor
sub
shrb
sbb
pop
popa
dec
xchg
push
insl
data16
lret
pop
cmp
je
fisubl
lock
addr16
push
push
cltd
adc
mov
imul
dec
jo
push
sub
iret
jae
out
test
das
mov
or
aas
loope
and
pop
mov
std
sbb
lret
movsl
push
test
flds
jle
repnz
inc
dec
or
movsl
outsb
pop
sub
lret
xchg
push
movsl
ljmp
popa
xchg
mov
andb
aad
mov
mov
mov
stos
and
popa
lods
mov
imul
inc
push
fwait
dec
xchg
dec
adc
inc
scas
jnp
sbb
iret
icebp
lea
pop
fsubrs
mov
inc
cmpsb
xchg
cmc
jo
rcrb
dec
inc
mov
dec
ret
sar
and
or
add
ss
or
push
popl
pushw
xchg
or
dec
mov
add
pop
jge
sub
mov
ds
xchg
jae
shll
push
cmpsb
shlb
cmc
or
outsl
mov
pushf
dec
inc
cmp
cmp
pushf
sub
fidivrl
inc
lret
push
cmp
push
leave
int
lods
insl
push
aaa
addb
mov
imul
popa
pusha
jl
push
imul
mov
add
cwtl
mov
ss
push
imul
or
pop
dec
mov
ret
ja
je
out
fildll
inc
test
int
xchg
cld
loope
xorl
fisubs
xor
mov
fwait
xchg
sub
jg
xchg
pop
mov
jb
movsb
push
mov
ret
ret
test
repz
ja
ds
insl
aaa
cmp
jbe
test
repz
and
jns
stos
adc
ror
enter
in
cmpsl
orl
scas
in
out
stos
add
push
inc
xorl
dec
add
and
in
ficompl
scas
loopne
lods
xor
clc
dec
adc
or
loop
mov
adc
scas
aaa
loop
lret
push
push
call
jmp
or
jge
add
jns
in
stos
fstpl
adcb
and
mov
add
iret
stos
adc
dec
jge
adc
mov
mov
daa
mov
or
and
mov
ja
popa
dec
mov
lea
dec
mov
lods
or
sbb
inc
data16
mov
mov
sub
mov
or
cmp
test
sti
sbb
into
subl
dec
ds
mov
stc
add
and
jg
shll
and
pop
incl
add
xchg
je
aam
adc
test
jnp
popa
sbb
sbb
push
xchg
sbb
insl
out
sti
dec
pop
xchg
jns
cmp
cwtl
sbb
bound
mov
test
outsl
mov
or
mov
sbb
pop
add
shll
xor
es
pop
xor
cmp
xor
inc
ret
enter
sub
xor
push
out
pop
and
std
mov
fcmovb
pop
pushf
pop
add
sbb
outsb
dec
sbb
cmp
push
xchg
fadds
inc
gs
and
lret
loop
shl
sbb
adc
add
gs
dec
scas
iret
or
xchg
xor
dec
ja
push
push
lcall
sub
dec
rol
or
jl
iret
push
xchg
movsb
or
jg
faddl
outsl
fsubr
jne
sub
xchg
mov
daa
jnp
in
push
add
jmp
into
mov
lahf
sub
fnstsw
pushf
xor
unpcklps
lahf
test
mulb
negb
pop
mov
or
loope
xlat
jmp
and
cmp
imul
push
add
or
enter
xchg
shlb
mov
xchg
mov
xor
std
mov
sarb
cmp
or
pop
mov
cmpsl
les
and
pop
push
std
mov
and
push
mov
leave
and
and
xchg
leave
lret
ss
pop
add
jb
pop
cwtl
xor
sti
sbb
lret
scas
mov
pop
push
lcall
sub
add
jmp
push
inc
mov
pop
icebp
adc
dec
sub
sar
lea
add
xchg
cmp
jg
pusha
dec
leave
jg
test
out
xchg
pushf
cmp
or
arpl
sbb
sbb
pop
mov
dec
lds
pop
push
mov
sbb
test
ret
lds
inc
push
int3
popf
jne
mov
icebp
jo
call
push
inc
push
mov
aaa
pusha
test
loop
gs
pop
xchg
mov
add
mov
push
xchg
bound
add
mov
and
ret
fcmovbe
rolb
pop
dec
pop
sbb
mov
imul
sahf
push
imul
or
fwait
rcl
lahf
sbb
je
pop
mov
mov
push
insb
xchg
push
ror
dec
test
jae
mov
mov
lds
pop
outsl
lods
aaa
fs
adc
mov
xlat
jg
xor
outsb
pushfw
push
sub
outsl
es
inc
sets
and
int3
dec
mov
movsb
nop
imul
jae
loope
imull
pop
mov
inc
lods
test
pop
out
into
test
lret
adc
in
xlat
and
lods
decl
call
je
and
jp
lods
mov
cli
lret
push
lahf
sub
sub
jbe
adc
mov
stos
jge
cmc
pop
sub
out
divb
jo
mov
lds
enter
repz
int
inc
cmp
cmp
and
xchg
lock
mov
xor
adc
cmc
jmp
in
out
sbb
jbe
mov
or
pop
fsubrl
sbb
jl
lods
add
jno
inc
frstor
and
pop
cld
lcall
pusha
xchg
mov
call
sbb
lock
pop
push
xorl
xchg
insb
fiaddl
call
or
mov
fwait
xchg
or
push
add
test
lret
lods
add
int
data16
icebp
jo
or
sbb
sbb
sahf
push
cmpsl
adc
inc
dec
jg
push
outsl
stos
scas
aaa
inc
movl
mov
ret
push
pop
popf
ja
stos
out
int3
sbb
push
sbb
xchg
and
mov
jnp
arpl
pop
xchg
sti
sub
pop
push
mov
call
in
sbb
pop
mov
cmp
mov
xor
xchg
loop
inc
jmp
loop
icebp
in
out
pop
insl
mov
pop
imul
in
adc
and
ret
and
popf
pop
or
push
mov
out
loope
pop
or
push
mov
cld
cwtl
add
push
icebp
cmpl
mov
xor
movl
fwait
in
sbb
jo
lds
mov
xchg
hlt
push
mov
push
addr16
pop
arpl
imul
loop
lret
lcall
xorb
sub
sbb
in
sub
inc
xor
sarb
xchg
pop
in
sub
or
sbb
push
dec
sbb
stos
inc
and
jg
pop
push
push
hlt
into
mov
cmp
insb
jle
mov
lcall
dec
sbb
jl
movsl
stos
dec
pop
mov
adc
arpl
cmc
and
popf
cld
out
jecxz
jl
xlat
sub
outsb
ficoms
mov
xor
lahf
xlat
cmp
and
push
clc
lret
cmc
sub
lcall
xlat
inc
adc
cmpsl
push
repnz
sub
adc
inc
divb
sbbl
xor
pusha
pop
enter
cmp
sub
inc
stc
fwait
push
sbb
lret
mov
ljmp
clc
aad
push
pop
clc
in
hlt
scas
ret
mov
mov
or
dec
popf
and
sub
mov
gs
filds
insb
js
bound
das
sbb
dec
ds
test
mov
jl
cmpl
sbb
mov
push
clc
loop
mov
inc
stc
pop
sub
out
xor
add
pop
movsl
leave
jmp
mov
adc
mov
int3
jmp
cmpl
xchg
test
push
call
adc
aas
sahf
aam
fs
jns
mov
mov
lock
pop
jmp
jb
pop
mov
sbb
in
aas
ljmp
dec
mov
andl
cmpsl
push
data16
or
roll
mov
fldenv
imul
xor
push
sub
mov
in
cmp
inc
sbb
inc
data16
jp
jg
bound
pop
xor
sbb
fiadds
fs
lret
mov
hlt
nop
mov
pop
fdiv
test
add
xor
push
inc
inc
daa
daa
lret
sbb
push
sub
insb
es
mov
popf
nop
mov
xor
cmp
fdivr
ror
jp
ret
loopne
cmp
sbb
mov
dec
cmp
lock
jecxz
mov
pop
mov
cmc
add
lods
push
lahf
dec
lret
add
mov
push
inc
out
shll
lea
mov
push
int3
int3
xlat
sub
xchg
jno
mov
fldl
xor
outsl
insl
les
loopne
aam
scas
mov
sub
pop
arpl
push
mov
xchg
rcr
add
or
ja
xor
push
js
cli
out
das
jp
inc
mov
addl
adc
inc
cmpsl
fdivl
movsl
loopne
inc
addr16
push
pop
js
sbb
pop
mov
stos
imul
mov
xchg
pop
xchg
or
mov
mov
daa
sbb
mov
das
jl
xor
cmp
fwait
cmp
sti
sub
inc
mov
jbe
pusha
pop
out
repnz
pop
imul
mov
fs
inc
fs
int3
xor
or
pop
rorl
repnz
lods
cmc
pushl
mov
imul
int3
std
lcall
aaa
push
sahf
jmp
adc
pushf
fsubs
inc
cmpsl
adc
sub
sub
or
jb
sbb
push
test
lcall
loop
mov
inc
xor
imul
insl
repz
cltd
sbb
and
test
pop
sbb
rorb
sub
cmp
loop
dec
and
popa
jb
pop
pop
mov
xor
popf
movsl
sbb
add
jo
sub
repnz
jecxz
xchg
arpl
sbbb
cmp
negl
cmp
lcall
jae
push
inc
sub
insl
xor
popa
pop
or
inc
shll
add
imull
das
sti
nop
out
test
push
ret
pop
fdivl
icebp
or
repnz
push
enter
ret
cmp
cmpsl
xlat
xor
push
jecxz
inc
or
push
pusha
fcoms
dec
loope
push
lret
cwtl
mov
popf
lcall
sahf
je
jne
dec
inc
or
or
dec
cmc
lcall
and
enter
xchg
ret
jns
sub
jo
xchg
addl
into
xor
scas
jmp
xchg
or
lret
jp
fistpl
arpl
or
inc
mov
add
lret
insb
icebp
add
pop
xor
cmp
scas
sub
lcall
jmp
cmp
jle
and
mov
add
cs
mov
mov
dec
outsl
mov
jg
fisttps
jge
scas
lods
mov
jb
test
cli
adc
pop
cltd
dec
test
loop
add
dec
jmp
mov
int
pop
pop
xchg
nop
lods
inc
shlb
out
bound
sti
ret
pop
imul
repnz
clc
insl
cmpsl
cmpsb
xchg
jno
scas
jno
loopne
imul
out
sub
cmp
lret
or
insb
shrl
mov
adc
sub
or
adc
mov
jnp
call
and
sbb
inc
test
aaa
test
fadds
sahf
scas
adc
mov
lsl
mov
popf
imul
adc
xor
insl
jo
das
jb
cmpsb
out
sub
test
xor
out
sti
sbb
cmc
inc
mov
shl
sbb
sar
iret
mov
movsl
inc
mov
out
push
or
mov
pop
mov
icebp
sarl
enter
loopne
lret
insb
inc
xchg
in
push
mov
inc
jne
adc
lods
popf
out
inc
nop
negb
adc
mov
sub
nop
sbb
int3
shrl
jle
sbb
mov
lock
adc
mov
lahf
mov
jae
es
push
scas
push
xor
es
mov
xor
add
sti
sahf
rol
loop
push
and
adc
repnz
cmp
arpl
lret
add
sarb
inc
adc
shl
dec
lods
jp
inc
loop
clc
fs
xchg
scas
lods
imul
cltd
mov
jl
add
out
jno
pop
mov
mov
fistpll
fstl
out
mov
decb
test
es
mov
adc
adc
js
mov
adc
out
mov
push
iret
test
xlat
xor
shll
or
sub
rcr
dec
test
adc
js
es
cmp
mov
imul
adc
idiv
and
call
mov
iret
rcrl
jns
in
ret
or
and
and
mov
dec
jle,pn
mov
and
mov
scas
mov
hlt
fwait
repz
call
pop
and
sub
or
adc
push
repz
pop
sbb
jne
xor
mov
lods
sbb
mov
mov
test
pop
adc
mov
repnz
lods
aad
xchg
roll
sub
sbb
sti
jo
mov
leave
pop
in
pushf
clc
mov
adc
jb
dec
pop
int3
stos
sbb
xor
mov
push
ss
or
add
pop
and
dec
adc
xor
jo
adc
addr16
cmp
adc
pop
popf
lahf
iret
lahf
sbb
or
jnp
nop
mov
cltd
mov
pop
testb
cmp
das
sbb
mov
pop
cmp
push
xchg
pushf
fstpt
cmp
dec
dec
iret
stc
jg
sbb
pop
and
xchg
sub
add
test
das
mov
insl
push
test
ja
divb
add
xor
stos
sbb
insl
or
push
xchg
daa
ret
test
and
push
out
adc
test
push
jg
cmpsl
rcr
sub
cmp
and
inc
xor
mov
xchg
push
and
sar
xchg
mov
mov
mov
adc
mov
xchg
arpl
insb
int
hlt
cmpsl
or
jns
stc
test
dec
sbb
cwtl
adc
ds
out
int
fs
jbe
testl
push
movsb
insl
mov
scas
int
das
mov
out
daa
xor
mov
stos
aad
mov
mov
fisttpll
mov
jae
icebp
leave
adcb
arpl
xor
in
mov
jno
mov
xchg
inc
sbb
sub
cmp
movsl
ret
xchg
push
push
mov
lcall
ja
or
subl
testb
lods
pop
push
pop
pop
rorb
mov
cmp
div
mov
imul
and
push
or
mov
in
shll
cmpsb
cmp
push
sar
mov
scas
movsb
cmp
and
pop
rolb
loopnew
fmul
xchg
push
cmp
add
jb
or
xchg
xchg
xor
cmpsl
mov
arpl
mov
sub
dec
ror
arpl
popa
jne
dec
aad
loope
inc
cmpsl
sub
mov
mov
loope
jo
flds
push
test
mov
or
pop
push
push
in
or
out
jno
mov
insl
dec
fbld
xchg
mov
mov
or
sahf
loop
fimull
dec
mov
mov
out
pop
bnd
sub
and
push
mov
inc
in
in
xchg
mov
pop
jp
pushf
and
mov
pushf
lods
imul
daa
sbb
jg
dec
xor
xchg
shrb
loope
or
test
jo
leave
call
into
aad
push
lods
xor
add
idivl
mov
testl
and
minps
jns
mov
push
add
lcall
sbb
sahf
imull
mov
cmpb
repz
aam
ljmp
fwait
rorb
sbb
sar
inc
in
and
movsb
mov
out
pushf
je
jge
stos
ret
repnz
sbb
fxch
or
adc
xor
push
sbb
inc
or
repnz
test
dec
xor
inc
pop
fsub
insl
std
xor
push
loopne
push
jge
jl
ret
lods
cmpsb
dec
jae
jno
mov
cltd
inc
sbb
stos
jns
inc
decb
insl
pushf
data16
popf
mov
mov
dec
xor
je
cli
pop
adc
and
sub
or
push
iret
mov
sbb
adc
out
fildl
stos
jae
loope
jbe
xor
movsb
xor
mov
sbb
xor
jo
xchg
cmp
dec
mov
test
lcall
mov
sbb
repnz
cld
inc
std
imull
mov
jmp
hlt
mov
ja
popf
sahf
dec
out
adc
or
or
sti
daa
test
movsb
gs
ret
das
aas
call
ja
lods
adc
imul
in
sub
jnp
add
mov
int3
dec
push
or
sbbl
stos
je
inc
out
out
leave
adc
popf
ret
std
or
sub
push
mov
jmp
mov
shlb
ss
xchg
sub
es
cltd
js
pushf
sahf
cltd
pop
adcb
pop
mov
out
and
mov
rol
mov
dec
in
ficomps
adc
adc
lahf
movsb
fwait
push
cmp
sbb
out
xlat
bound
sub
les
lock
fcmovu
jge
repnz
push
mov
lahf
rclb
adc
and
aad
insb
sbb
std
outsb
mov
sub
jecxz
pop
fistps
mov
int3
xchg
lahf
int
mov
cmp
int3
push
mov
mov
out
mov
lret
cwtl
sahf
dec
jne,pn
jbe
rol
cli
adc
add
fbld
cltd
mov
mov
xorl
lahf
xchg
stc
aam
or
mov
inc
and
insb
and
xor
and
in
mov
xor
lods
inc
push
dec
sti
ljmp
or
movsb
dec
call
es
or
scas
in
pop
push
scas
and
js
sbb
lods
push
lret
jge
add
leave
cmpb
xor
or
sti
outsb
pop
cmp
popf
fdivs
adc
pop
js
jne
lea
add
xchg
aaa
jmp
add
jge
or
popf
or
test
xchg
mov
push
or
lahf
xchg
clc
imul
aam
xor
mov
jns
sarl
mov
dec
repnz
mov
or
or
popf
rol
mov
xchg
mov
fdivrl
cmp
push
adc
insb
popa
and
pop
sbb
repnz
sub
jl
cmp
cs
addb
mov
popa
dec
cmpl
pushl
push
xchg
cmc
rcll
or
jbe
negb
cmp
push
repnz
rcll
mov
inc
mov
in
stos
cli
jb
cmp
andl
add
rep
cmp
mov
push
scas
jmp
repnz
xchg
jnp
inc
out
push
xor
cmpsl
xor
enter
scas
mov
cmp
xor
jne
outsb
fsubrs
lret
lds
dec
cmp
sub
outsb
sbb
xchg
and
aam
cld
pop
es
clc
sti
push
or
push
sbb
and
std
xchg
inc
int3
out
add
jg
xchg
mov
aam
push
test
jns
adc
mov
mov
repnz
adc
xchg
shll
sbb
js
in
stc
dec
repnz
ret
mov
cwtl
sarl
imull
daa
fbstp
inc
jne
mov
dec
mov
jle
leave
fs
xor
mov
and
aaa
pusha
mov
cmp
aaa
xchg
addr16
mov
or
lret
les
movsb
dec
pop
in
lret
cmp
mov
cmp
jg
loope
inc
pop
push
mov
loope
xor
in
mov
cwtl
xchg
mov
xorb
pushf
testl
adc
scas
xor
fmulp
push
and
and
in
xchg
out
fsub
cmp
sbb
test
push
inc
lods
push
pop
inc
cs
rolb
push
push
cli
xchg
adc
in
xchg
push
daa
mov
into
and
and
lret
jb
jl
pusha
fldt
clc
outsb
aad
test
cmp
pop
daa
inc
adc
fs
inc
repnz
pop
pop
mov
scas
clc
pop
test
idiv
sbb
adc
leave
imul
push
push
sub
out
sub
fidivrl
mov
insb
inc
mov
les
shl
movsb
mov
xchg
les
and
repz
fs
cmpsb
xor
fucomip
mov
stc
xor
push
adc
jle
push
rclb
dec
jmp
mov
cltd
fs
hlt
repz
int
dec
adc
cmp
mov
popf
data16
into
ss
dec
pushf
lods
cli
xchg
mov
out
or
imul
call
sbb
adc
mov
cwtl
pop
fwait
mov
xchg
pop
jnp
rolb
inc
jmp
pop
push
shrl
outsb
xchg
das
hlt
push
xchg
adc
mov
shrb
loop
xchg
mov
or
push
inc
xor
aas
out
push
addr16
cmp
lds
xlat
xor
inc
sub
nop
push
or
fbld
mov
adc
js
cmp
cmc
int
dec
out
ja
or
or
and
sarb
lret
sbb
sbb
shll
jmp
add
lret
addl
sahf
fadds
sarl
pop
nop
stos
inc
sbb
cmp
pop
sub
sarl
rolb
mov
push
enter
fcomp
lods
ds
dec
push
inc
push
addr16
mov
cld
inc
scas
push
shll
jl
das
inc
mov
hlt
mov
push
jge
aas
xchg
push
jnp
inc
mov
pusha
push
mov
fwait
mov
fmull
dec
inc
daa
insl
add
jno
nop
cmpsb
popf
sub
lahf
cmp
loope
sbb
stc
movsl
push
sarl
popf
aas
jbe
dec
inc
lahf
or
push
inc
inc
sbb
or
pmulhw
repnz
mov
jmp
gs
sub
jno
mov
add
push
inc
pop
fdivr
in
dec
mov
fdivp
jecxz
xor
sbb
nop
xchg
decb
cwtl
push
jg
add
push
or
jbe
xlat
mov
lock
pop
or
stos
pop
fldl
adc
fcomip
add
fwait
cmp
aad
cmc
pop
mov
jo
sub
sbb
inc
fdivrl
das
popa
jmpw
arpl
ljmp
rol
andb
out
mov
ficompl
addl
xchg
rcrl
rorb
mov
int3
aad
out
pop
jg
fisttpll
sub
push
out
or
or
jb
mov
lock
sbb
neg
pop
stos
imul
ss
lret
xor
push
inc
aam
jnp
imul
inc
lcall
out
fisubrl
mov
out
sub
mov
add
xchg
in
mov
ret
cmp
mov
push
push
mov
xor
lret
fs
cltd
pop
xlat
arpl
pop
add
inc
sbb
sti
fsubl
fbld
test
in
call
lds
add
pop
and
pop
cs
jecxz
jmp
in
add
cs
mov
mov
adc
adc
rcr
stos
imul
jo
push
ljmp
jp
push
loope
mov
out
enter
cwtl
cmpsb
cli
dec
imul
leave
cmp
jae
mov
popa
inc
stos
cli
cs
jg
dec
or
cmp
andl
sub
pop
dec
pop
add
sbb
pop
xor
xor
xchg
js
stos
int
mov
andb
mov
inc
mov
mov
insl
iret
mov
add
or
jl
push
sub
sahf
dec
fidivrl
repnz
sbb
dec
push
jno
mov
or
mov
mov
cld
or
daa
mulb
std
sub
test
cmpsl
inc
hlt
xor
sti
aam
lret
pop
lret
push
into
cmp
lea
out
or
jp
mov
mov
and
dec
jnp
shll
push
cmpsl
loope
popf
mov
cli
sbb
sbb
out
mov
je
imul
data16
and
pop
lcall
or
pop
aam
and
sahf
inc
mov
push
dec
inc
dec
popf
lcall
mov
sbb
call
bound
pop
push
sub
scas
pop
arpl
dec
ret
dec
cli
add
dec
push
pusha
out
or
pop
dec
dec
fisttps
bound
mov
stos
test
mov
cmc
xchg
sbb
ret
adc
ja
mov
imul
pusha
and
xor
xor
insl
jnp
jo
sti
jns
in
xchg
mov
pop
sub
adc
test
xor
and
mov
jmp
hlt
adc
shl
lret
cwtl
in
xchg
cli
adc
cmp
pop
ljmp
shl
mov
lods
in
lea
push
cmc
add
ljmp
pop
pop
and
rcrb
cmp
shlb
jg
xchg
fadd
cli
sbb
or
and
jns
jne
in
xchg
in
sti
outsl
inc
cmp
fsubrl
in
mov
test
dec
xor
mov
mov
fwait
sbbb
ret
sti
mov
loopne
fldcw
stos
js
sbb
bound
insb
xor
pop
xchg
jnp
push
and
dec
fdivr
fnsave
outsb
push
out
movsl
inc
push
or
xlat
pop
repnz
fistps
rolb
ficomps
sbb
dec
loope
ljmp
mov
mov
outsb
out
out
cmpsb
add
stos
les
fwait
cmp
or
cmp
ror
loope
mov
imul
inc
test
add
xchg
arpl
push
shrl
mov
les
cli
adc
je
int3
push
pop
sub
in
jmp
push
into
repz
cmp
shll
mov
dec
bound
hlt
js
sub
or
les
xchg
xorl
adc
add
or
cmp
lods
pop
cli
lahf
movsb
add
cmp
popf
andl
lods
jns
mov
loopne
ret
addr16
xor
loop
xor
pop
push
add
mov
fdivr
or
inc
push
inc
ss
inc
cmp
movsl
sub
nop
call
imul
fwait
dec
imul
repz
and
add
pop
js
jl
adc
adc
test
xor
inc
lds
dec
ljmp
jne
xor
dec
mov
inc
xor
pop
xchg
inc
sub
fcmovu
scas
jb
into
fwait
xchg
or
fisttpll
and
cmp
push
int
xorl
or
testb
jbe
mov
xchg
pusha
and
and
fnstenv
jne
fxam
pop
dec
gs
inc
lret
test
xor
bound
or
loopne
addl
add
test
stos
fstps
iret
inc
mov
cli
fs
push
lahf
int
leave
or
aas
or
outsb
adc
int3
add
add
fsubrs
shll
out
pop
jae
jno
adc
mov
cmp
lret
mov
test
nop
std
xor
jmp
pop
adc
pop
xor
push
xchg
xlat
xchg
add
insl
dec
sub
frstor
in
or
jle
out
testl
ret
ret
movsb
das
sbb
inc
xchg
push
mov
adc
in
hlt
pop
jo
lea
arpl
push
sub
cmc
adc
mov
aam
mov
pop
nop
xor
imul
repz
insl
adc
add
jno
push
hlt
mov
sbb
addb
aam
dec
fiaddl
inc
sub
push
out
inc
add
add
call
xchg
mov
shr
sbb
add
enter
pusha
fidivrl
xchg
test
sub
add
out
movsb
ret
or
dec
pop
insb
mov
repnz
in
out
push
je
insl
xchg
xor
mov
xchg
cmpsl
jnp
cmp
cli
mov
push
xor
xor
lods
imul
ljmp
mov
pop
pop
or
lea
stos
lret
push
fisttps
mov
jge
jno
inc
mov
jmp
push
cmp
jp
fwait
sbb
or
scas
mov
push
mov
es
push
and
out
addr16
fidivs
insb
into
or
negl
ret
dec
pushf
sbb
dec
fldt
pop
sub
clc
fcmovbe
or
stos
adc
mov
xchg
push
shr
lea
rorl
pop
jmp
outsb
jecxz
push
ret
iret
mov
sahf
push
pop
push
jp
lahf
sbb
test
mov
fsubl
mov
pop
cmp
inc
push
mov
cmc
invd
add
xchg
inc
fdivrl
cs
cmp
xchg
icebp
xor
adc
imul
mov
cs
pop
sbb
jmp
xor
sub
jp
jno
mov
sti
out
cmpsl
fnstsw
pushf
mov
cmp
sub
push
sub
push
and
stc
adcl
push
fidivrl
in
mov
stc
pcmpeqd
mov
cmc
sahf
int3
pop
fld
mov
int
mov
cmp
div
lcall
imul
lret
or
movsl
pop
cld
fsubrs
aam
mov
jmp
outsb
inc
call
sub
dec
clc
aaa
mov
or
fistpl
adc
mov
add
push
imul
aas
xchg
push
out
loopne
adc
fldl
jl
ror
and
xchg
mov
jmp
imul
pop
cmp
scas
push
cwtl
jg
push
mov
into
sub
leave
jecxz
add
add
push
inc
in
mov
and
in
fdivr
pop
inc
or
fnstsw
mov
pop
fwait
dec
jae
cmpsl
ss
repz
cmp
mov
pop
jecxz
sbb
mov
into
mov
jecxz
test
test
xchg
stos
mov
pop
push
call
jecxz
dec
xor
stc
ja
test
pusha
dec
adc
mov
dec
jbe
xor
adc
and
imul
dec
outsb
xchg
fwait
push
inc
and
aad
or
aam
mov
stc
mov
pop
dec
or
xchg
test
fstl
mov
xlat
sub
jns
xor
lret
mov
jmp
push
test
pop
ds
aas
or
push
in
xor
or
mov
fwait
test
jecxz
push
imul
in
jl
jmp
jnp
loop
loope
pusha
aas
pop
inc
repz
mov
inc
gs
clc
sub
sbb
mov
ja
and
pop
mov
pop
adc
jb
jmp
outsl
imulb
mov
sahf
test
or
lea
pcmpgtb
adc
or
mov
ret
nop
mov
push
imulb
mov
and
fcoml
and
xchg
sarl
fwait
insl
cmp
in
add
dec
mov
jge
gs
xor
add
or
add
xorl
outsb
add
add
data16
arpl
outsb
lret
leave
cmp
or
dec
dec
and
stc
faddp
fldt
stos
jns
push
std
cmpsl
jo
imul
sti
mov
mov
cltd
inc
nop
call
or
add
jg
adc
adc
aad
ljmp
sbb
lret
push
daa
mov
gs
daa
rcr
xchg
into
loopne
xchg
add
sbb
in
mov
jecxz
xchg
xor
roll
loopne
gs
aaa
cmp
dec
sbb
mov
and
test
iret
bound
and
dec
pushf
pop
iret
xchg
sub
stos
mov
fldenv
and
pop
out
scas
imulb
inc
jae
repz
mov
add
xlat
loopne
dec
cmp
push
jo
aad
and
jo
lods
addr16
jbe
xor
mov
jb
pop
lock
sub
iret
daa
cmpsl
lcall
add
pop
jmp
inc
pop
adc
jge
xchg
leave
jae
std
jg
test
cmp
lods
jmp
dec
daa
mov
fbld
mov
mov
xchg
mov
or
mov
cltd
out
pop
jp
mov
xchg
pusha
jg
lretw
jg
push
in
dec
sub
lret
in
int
mov
xchg
enterw
xor
sub
out
fwait
bound
mov
iret
pusha
inc
ljmp
fucomp
test
adc
xor
sub
das
addr16
adc
stos
callw
mov
fs
in
push
xor
mov
mov
sbb
mov
inc
int3
pusha
cmp
push
vpminub
mov
dec
mov
and
scas
jecxz
and
adc
add
gs
or
and
fmulp
arpl
adc
mov
push
testl
inc
jmp
into
xlat
aam
das
jo
jge
xchg
in
xor
out
int3
testb
mov
jns
push
add
mov
xlat
popa
dec
lea
ja
sbb
ret
push
xchg
adcl
popa
out
inc
jmp
dec
orl
sub
loope
xchg
sub
pop
lods
nop
clc
out
pcmpeqb
loope
jb
mov
sahf
outsl
mov
lea
inc
add
and
dec
call
repnz
stos
test
cmp
xchg
mov
and
scas
or
ja
iret
sti
stos
call
xchg
ficoms
rol
mov
or
sbb
fidivl
add
dec
int3
or
mov
ljmp
icebp
fwait
mov
mov
mov
dec
pop
xchg
xor
push
or
mov
push
xor
lea
add
int3
xchg
gs
xchg
arpl
xor
and
cmpsl
rorl
shll
mov
inc
jecxz
out
adc
roll
cmp
mov
repz
inc
sti
mov
xor
jo
pop
cmp
hlt
jle
adc
xchg
int3
lock
jp
sub
and
sbb
pop
jp
movb
jmp
imul
jnp
aam
xchg
movsb
imul
sarb
push
out
push
arpl
mov
jmp
add
mov
cld
mov
in
mov
pop
in
and
mov
icebp
xchg
je
or
addr16
nop
inc
xor
jmp
cmp
addr16
jo
cmpsl
int3
ds
and
inc
sub
arpl
in
ret
push
add
rorb
jno
cs
int
jns
into
loop
lret
test
push
pop
addr16
fs
xor
add
loope
push
mov
dec
adc
ja
adc
jae
mov
pop
inc
dec
cmpl
pop
lret
jge
fidivs
jbe
xchg
inc
test
dec
mov
mov
daa
cmc
outsl
pop
mov
ret
aas
int3
pop
sbb
outsl
sub
dec
cmc
roll
add
hlt
sahf
add
inc
jns
xor
lock
addr16
jns
lcall
and
in
sub
jge
shrb
push
xor
out
ljmp
or
call
gs
cmp
xor
repnz
cmpsl
lret
loopne
sub
add
jl
jb
mov
and
and
ja
mov
jns
inc
adc
push
xor
test
fldenv
fidivs
or
cmc
sub
iret
mov
cmp
cmp
sub
repnz
mov
mov
or
add
fdivrs
push
dec
mov
lea
mov
and
out
inc
jbe
push
call
shll
xor
loope
dec
sarl
jl
jp
and
adc
repz
xchg
popf
mov
test
sbb
cmpsb
pop
xor
xlat
imul
jb
sub
push
std
push
push
icebp
jl
add
mov
sub
stc
stos
cld
pop
mov
aam
sbb
fs
out
cmp
clc
shr
ja
push
jne
addr16
xchg
popa
push
push
orb
sub
jo
adc
int
jg
dec
xor
sub
sub
loopne
add
shll
int3
cmp
pop
mov
repnz
sbb
dec
sub
and
out
mov
pshufw
test
cmc
jne
xchg
arpl
ja
xor
cmpl
or
sbb
or
iret
or
dec
fstl
shll
arpl
cli
pushf
in
cmp
jno
mov
sub
fisttps
roll
test
out
scas
adc
inc
xchg
sub
dec
ljmp
xor
hlt
out
ds
adc
inc
mov
andl
movsl
test
lods
addr16
mul
les
inc
cltd
cmp
mov
rcrb
sarb
xlat
inc
imull
add
pop
add
arpl
adc
cltd
mov
xchg
popf
test
and
jl
xorl
inc
out
in
popf
xchg
xor
stos
out
add
dec
xchg
mov
pusha
adc
pusha
pop
popf
mov
sar
sub
pop
push
mov
jnp
call
ret
inc
add
and
sbbl
xchg
iret
push
adc
lds
mov
mov
jmp
jbe
aaa
shlb
lea
mov
add
into
sbb
xchg
popa
test
pop
repnz
cmpl
stos
push
jo
add
jnp
and
add
stc
add
mov
insb
cmp
sbb
je
pop
inc
and
es
lods
inc
dec
cld
adc
sbb
sub
xchg
outsb
lods
jne
fcmovbe
sbb
sub
fbld
push
and
popa
mov
xchg
xchg
adc
pushf
xchg
inc
stc
jp
shlb
lds
add
cli
cld
lods
cmp
xor
and
outsb
in
stos
lds
fidivl
sub
ret
fldcw
mov
out
andb
xorb
test
pop
imul
jb
mov
adc
lret
loopne
jb
lahf
cmp
dec
push
xchg
cmp
dec
fsts
dec
push
mov
outsl
sbb
dec
repz
and
test
shlb
jbe
jmp
cli
outsl
sbbb
addb
test
pop
sets
rcl
cmp
or
dec
shll
jg
mov
inc
dec
fxch
aaa
mov
cmpsb
rol
xor
sti
cmp
dec
sub
es
cmp
test
jge
sub
add
adc
add
addb
inc
mov
sti
and
or
cli
inc
aaa
mov
fs
nop
ret
js
test
cs
popa
insb
mov
enter
ds
inc
jle
xor
mov
jl
dec
add
dec
rorb
or
pop
cmpsl
mov
jno
push
sub
jg
cmp
pop
pop
adc
mov
jno
popa
mov
dec
incb
jecxz
aam
subb
push
add
iret
sub
sbb
shlb
insb
xlat
pop
lods
sbb
dec
das
push
mov
std
inc
nop
pop
cmp
jne
jmp
mov
inc
cmpsb
inc
movsl
add
xorb
jo
dec
fisttps
push
rcr
int3
push
bound
cmpsb
js
cmp
mov
xchg
int
ret
test
adc
cmp
jle
sahf
pop
rcr
add
repnz
movsb
rclb
int3
pop
rol
aas
sub
scas
or
in
or
mov
xchg
js
psubsw
mov
pop
push
mov
xor
mov
xor
ljmp
jmp
sti
sbb
loope
inc
and
add
repz
mov
nop
mov
aam
das
addl
leave
nop
xchg
mov
dec
mov
aad
dec
and
or
hlt
test
out
jl
add
or
fwait
lcall
adc
lods
cmp
push
bound
mov
and
mov
sbb
push
lds
js
jl
testb
in
xor
cmp
push
cmc
or
pop
jmp
add
add
and
sarb
add
xchg
clc
in
pusha
movsl
sbb
mov
loopne
scas
adc
popf
xchg
outsl
lret
jge
out
dec
lds
subb
daa
sbb
push
pusha
bound
jo
cmp
pop
adc
dec
mov
mov
xchg
icebp
adc
stos
sahf
push
in
scas
in
push
clc
adc
mov
sbb
jns
mov
mov
enter
inc
jb
and
cmpb
mov
xchg
xor
cs
cld
xrelease
dec
push
sub
std
inc
add
mov
pop
inc
inc
sub
adc
xchg
shl
push
out
es
adc
sub
fildll
mov
xchg
movsb
xchg
imul
imul
pop
push
stos
push
xchg
dec
inc
ljmp
or
pop
nop
aaa
mov
insb
inc
mov
dec
cmp
ja
pusha
dec
in
jg
ret
ucomiss
je
pop
adc
lds
jle
dec
mov
or
mov
in
mov
dec
test
push
or
adc
loopne
out
test
and
pop
lcall
test
fwait
sbb
pop
pop
or
mov
mov
sbb
xchg
rcrl
sbb
lock
sarl
xor
clc
push
add
push
ja
mov
test
pop
jmp
or
xchg
les
sbb
js
xor
add
pop
sub
sub
ret
loopne
mov
mov
jno
push
mov
lahf
icebp
cmp
inc
add
movsb
or
or
fcmovnu
sub
popl
lret
outsl
scas
es
xchg
movsb
and
inc
xchg
inc
push
or
sub
xor
mov
test
nop
mov
cmpl
iret
mov
dec
fnsave
xchg
pop
push
mov
aam
pushf
dec
mov
sub
sbb
mov
sub
mulb
pushf
sub
lods
inc
add
cmp
pop
cmp
xor
jg
push
add
adc
int3
add
cs
jmp
jecxz
incl
sbb
test
clc
or
sbb
pop
outsl
dec
pop
insb
rolb
cmp
mov
push
mov
iret
push
cltd
cmc
sarl
pop
popf
cmpsb
mov
jbe
insl
jb
out
mov
jbe
xorl
jbe
adc
outsb
sub
shlb
mov
lock
pop
das
in
jae
shl
pop
sti
or
fucomp
or
ret
mov
mov
rolb
and
fiaddl
mov
ret
xor
mov
incl
xchg
pop
rcr
cmp
int3
sahf
or
scas
daa
scas
or
movsl
pushf
bound
aam
add
lcall
jge
xchg
or
push
push
jne
sbb
hlt
lea
clc
pop
xchg
out
fisttps
lods
ds
sbb
stc
pop
stc
pop
std
xchg
mov
mov
in
pop
cmpsb
aaa
mov
mov
cmp
aad
adc
dec
pop
mov
dec
out
mov
insb
jbe
xchg
or
adc
jmp
outsl
cmpsw
les
push
dec
push
lret
adc
rcll
rol
cmpb
mov
inc
dec
sbb
xchg
lahf
add
gs
mov
mov
fistpll
decl
dec
sbb
clc
xchg
in
jbe
sub
dec
das
jl
loope
pop
fdivr
std
xchg
aaa
int
in
cwtl
cmp
aam
inc
mov
call
sbb
dec
jns
mov
xor
icebp
mov
inc
fiadds
fdivl
push
cs
mov
lock
push
mov
aam
dec
adc
xchg
jecxz
mov
jns
popf
dec
andl
outsb
pop
loop
push
mov
jmp
outsb
icebp
negb
xor
mov
lds
sbb
into
in
shr
test
lea
add
mov
sbb
in
xor
xor
decb
xchg
ret
ret
rorb
mov
dec
cmp
add
or
fsubl
lds
lahf
cmp
jnp
jl
xchg
cli
pop
inc
mov
inc
repnz
pop
inc
mov
jl
lret
shr
inc
mov
or
bound
mov
lahf
pop
je
sti
lods
daa
pusha
pop
pop
out
ja
and
mov
sub
inc
sbb
pop
scas
xchg
jecxz
pop
std
into
pushl
nop
in
sbb
mov
cmc
inc
or
scas
ss
xor
das
mov
sbb
mov
sub
shlb
pop
hlt
xor
imul
hlt
push
lret
je
cli
dec
or
in
pop
push
xchg
fidivrl
inc
mov
jb
dec
mov
aaa
jecxz
inc
xchg
stos
jb
inc
jb
dec
mov
lahf
and
cmp
mov
je
aam
xor
popa
iret
jae,pt
fnstcw
aas
xchg
push
neg
adc
inc
pop
xor
aad
mov
testl
sub
cmp
mov
jge
add
sbb
pop
xchg
scas
push
in
sbb
push
add
jg
jmp
scas
enter
fs
xor
adc
inc
js
leave
mov
sub
xchg
mov
sub
call
popf
inc
sbb
jns
call
jmp
dec
sbb
mov
cmp
xor
pop
dec
mov
negb
mov
sbb
cld
dec
push
std
mov
pusha
pop
in
sbb
add
sub
out
lods
or
insb
popf
loope
lret
push
mov
ja
push
movsl
mov
pop
mov
mov
ds
inc
pusha
mov
or
jb
inc
mov
pop
imul
push
pop
mov
enter
or
push
rol
sub
cmp
jg
sub
xor
mov
mov
shl
fldcw
xor
cltd
mov
addr16
add
xchg
fwait
out
lds
cmp
repnz
ret
subb
pop
adc
sbb
aas
stc
jg
test
push
decb
fdivl
loopne
push
out
pop
aam
fwait
test
lds
dec
das
repnz
sti
lret
inc
ja
test
dec
xchg
sub
stos
mov
sbb
pop
lds
stc
aam
mov
push
mov
xor
call
mov
jp
enter
adc
mov
xor
shll
xchg
cli
xchg
aaa
shll
sbb
clc
loope
test
into
jo
lahf
mov
arpl
and
je
gs
adc
sbb
inc
cmpsb
and
mov
mov
orb
rclb
lods
stos
jle
mov
out
push
and
jns
mov
addr16
mov
sbb
mov
cmp
adc
das
pop
lock
aas
jp
div
imul
jl
movzwl
sub
jmp
jge
decb
and
sub
fldcw
jp
pop
cmp
xchg
shrl
pop
adc
imul
divl
mull
and
push
cmp
mov
mov
scas
sub
call
ret
dec
sub
sbb
adc
ficoms
sbb
in
pop
scas
mov
jmp
xchg
xchg
adc
jmp
inc
inc
stos
dec
xchg
leave
inc
adc
mov
sbb
clc
push
icebp
negl
jno
or
lret
sub
adcb
pop
pop
out
adc
dec
fcompl
inc
inc
cmp
or
data16
data16
mov
fisubl
jmp
scas
faddl
scas
cmpsb
dec
mov
das
bound
sbb
outsb
inc
mov
sarb
jnp
lahf
shlb
add
cmpsb
push
and
mov
ficomps
test
or
mov
lahf
jmp
add
out
push
sub
xor
lahf
mov
gs
idivl
loop
fwait
xchg
pop
inc
std
test
bound
in
adc
pop
ja
pop
xchg
xor
xor
scas
jnp
mov
pop
outsb
xchg
dec
or
pop
xchg
pop
xchg
pop
fdivs
cmp
xchg
push
push
sahf
shll
cli
stc
adc
out
adc
rorl
jecxz
fmuls
je
push
mov
cs
pusha
out
loopne
jmp
pushf
cmp
mov
mov
fidivrs
push
mov
je
inc
popa
mov
xor
repz
mov
cs
mov
xchg
push
ret
cs
mov
dec
loope
cli
les
mov
xor
mov
adc
sub
mov
xor
jmp
notl
add
add
xchg
sub
xchg
push
sub
inc
in
mov
dec
fs
add
mov
bound
lea
sub
faddl
loope
fs
stos
mov
je
add
data16
mov
push
loope
les
dec
jecxz
adc
sarl
sub
scas
inc
insl
rcrl
mov
mov
outsl
mov
jo
testb
mov
inc
shll
in
dec
pushf
xor
into
addr16
arpl
add
mov
sahf
push
xor
mov
pop
pushf
add
cli
into
cmpsb
jb
add
xlat
and
inc
cli
arpl
sbb
push
push
mov
sysexit
enter
inc
xchg
add
xchg
xchg
outsl
lret
aam
dec
subb
push
sbb
adc
jle
pop
repnz
cmp
xor
pop
push
adc
cmp
daa
jb
pop
ss
and
movsl
push
ficompl
mov
mov
fisubl
mov
dec
or
push
int3
imul
jo
popf
and
pop
insb
lahf
mov
mov
dec
dec
dec
jle
mov
xchg
sub
pop
jb
rcll
dec
inc
sahf
mov
ss
std
lcall
pusha
scas
sbb
lcall
jno
les
xchg
je
and
or
fcoms
outsb
adc
cld
sub
mov
push
idivl
or
and
jmp
adc
and
iret
dec
mov
daa
imul
int3
jb
adc
mov
mov
and
push
and
adc
nop
lcall
imull
or
pop
mov
jmp
dec
test
cli
popa
fldenv
push
std
push
mov
inc
adc
out
stc
sub
inc
out
xchg
sti
outsb
js
sub
call
and
mov
scas
or
fiadds
lods
orb
lret
lahf
add
push
stos
xchg
shr
mov
fsubs
mov
or
and
sub
hlt
mov
icebp
add
jo
cmp
pop
shrb
sub
sub
in
outsl
test
jecxz
sbb
pop
push
add
jae
rclb
call
pop
jo
jbe
mov
sbb
lea
push
fidivs
cmc
sub
std
add
mov
scas
jl
clc
cltd
inc
ret
gs
movl
andb
cmpsl
pop
jmp
outsb
shrb
and
inc
icebp
repnz
mov
and
neg
xchg
div
fmul
sub
dec
orl
subb
sub
fsubrl
ret
lock
aas
jmp
jecxz
pop
add
in
repnz
or
sti
cwtl
fsubrs
call
push
dec
mov
in
jl
add
dec
jg
adc
pusha
loopne
mov
cmpsl
push
sti
push
pop
add
mov
imul
push
push
sti
cmc
dec
jg
or
stos
xlat
xchg
mov
incl
add
loopne
push
in
pop
lcall
clc
pusha
xchg
nop
jge
push
ss
push
cmpsl
cwtl
fadd
push
mov
push
xlat
fmuls
xchg
movsb
shld
stos
es
int3
push
dec
mov
xchg
ret
lds
push
sub
outsl
aaa
movsl
ljmp
ja
mov
rcrb
subb
pushf
cltd
mov
jbe
loopne,pt
icebp
sub
out
xor
inc
mov
fisubrs
subl
rcl
sub
rorb
add
enter
das
outsl
mov
scas
adc
dec
rclb
add
dec
mov
int
inc
repnz
add
push
push
mov
xlat
notb
je
mov
dec
mov
jb
xor
scas
add
adcl
add
ror
xchg
in
mov
cmp
lea
pop
jbe
jmp
or
cmp
jae
cli
sub
inc
adc
and
xchg
xchg
out
movsb
fmull
pop
xchg
xor
mov
scas
sbb
push
fldl
pop
dec
or
in
lret
fistpl
ja
int3
pop
inc
imul
mov
add
jp
stc
inc
mov
adc
cs
aaa
rcl
mov
mov
mov
push
mov
xchg
sub
push
xchg
jno
mov
repz
sti
adc
mov
fildl
fnstenv
jmp
push
jmp
data16
inc
aas
push
fldt
add
or
push
mov
bound
and
mov
mov
mov
outsb
xlat
lahf
or
bound
scas
or
lret
and
xchg
icebp
sbb
fdivl
insb
mov
and
mov
mov
cli
cli
jae
popf
sbb
je
cld
mov
jecxz
or
aam
and
pop
test
clc
mov
cs
push
xchg
cltd
popa
xchg
push
int3
push
cmp
test
outsl
in
loopne
add
sahf
stos
popa
mov
inc
push
idiv
push
jo
adc
outsb
pop
jp
lret
pop
subl
jbe
imul
dec
repnz
mov
xor
inc
mov
mov
loopne
push
loope
push
faddl
push
cltd
lds
icebp
sbb
xchg
xlat
jo
nop
xor
inc
adc
mov
mov
insl
push
imul
les
sbb
aam
pop
cmp
jnp
rcrb
test
push
xor
dec
mov
cs
xor
fstps
or
xor
pop
clc
xchg
loope
fstl
cmc
adc
test
out
ja
xchg
mov
sub
lock
cli
sbb
stos
ljmp
insl
daa
jo
psubusb
or
jmp
std
mov
adc
rorl
cmp
dec
xchg
popa
movsb
cmp
xchg
jnp
xchg
fnsave
ljmp
fsubrl
sub
repz
xchg
mov
cli
pop
cmp
test
js
push
xchg
xchg
mov
aad
movsl
mov
das
pop
repnz
jmp
lret
popa
cmp
movsl
inc
sbb
xor
out
jns
bnd
shll
in
fstpt
jmp
hlt
sub
xchg
add
adc
mov
imul
ret
neg
out
add
xchg
incl
shlb
xchg
and
xchg
dec
mov
push
cwtl
pop
mov
adc
jno
ffree
pop
mov
cmp
xor
clc
clc
fsubrs
sbb
test
das
insb
push
fistpll
shlb
inc
pop
or
pushf
dec
pop
repnz
sub
xchg
and
lds
dec
mov
and
mov
out
out
test
fs
sbb
mov
out
ret
idivl
ds
xor
loopne
ret
lods
mov
jmp
imul
rclb
xchg
ret
std
imul
cmp
daa
or
dec
lcall
xor
pop
ret
insb
pop
adc
fisttpll
push
inc
cli
cmp
shlb
push
sbb
cmp
inc
scas
std
bound
adc
pop
mov
mov
and
adc
je
xchg
adc
push
xchg
xor
inc
iret
sbb
cmpl
dec
fwait
adc
and
js
fisubl
out
test
pop
ja
outsl
jle
xor
cltd
enter
adc
mov
pop
mov
pop
cltd
adc
xchg
mov
insb
adcb
shlb
add
imul
lret
popa
inc
rorb
test
lods
sbb
add
lcall
inc
fsubp
test
jns
sub
lret
stos
mov
jbe
scas
repz
xor
ret
xchg
cld
mov
push
aad
cmp
lds
hlt
in
inc
add
inc
pop
sub
add
sbb
and
push
dec
mov
mov
pop
dec
gs
mov
nop
inc
fwait
rolb
lods
stos
shll
adc
jmp
push
mov
sbb
push
push
add
aas
cmpsb
push
repz
xor
stc
jo
cli
mov
dec
push
mov
cmpsl
sarb
pop
inc
xchg
clc
jnp
pop
mov
inc
or
lcall
mov
test
outsb
fsubrp
mul
mov
orb
mov
pop
adc
mov
sub
fadds
and
test
clc
sahf
or
sahf
mov
pop
and
mov
cmp
sbb
pusha
fbld
adc
fwait
cmp
push
sbb
stc
xlat
int3
inc
dec
mov
or
mov
lods
inc
mov
push
mov
xlat
test
cwtl
loopne
jne
or
sbb
mov
pop
mov
fmuls
out
mov
pop
lret
pop
in
es
ss
pop
lret
test
jmp
fisttpl
int3
push
outsb
into
sbb
xor
sbb
cmp
dec
mov
dec
ja
adc
push
inc
jmp
dec
or
push
je
push
inc
rcrl
mov
or
pop
roll
and
cmp
lods
push
or
rorl
lea
dec
jmp
insb
sub
jle
in
les
std
js
xchg
jg
insl
dec
dec
scas
sub
jo
add
and
sub
xchg
pop
cmpsb
jge
subb
fcompl
stos
jo
pop
mov
sarl
and
jne
lss
push
or
addr16
mov
sbb
or
js
ficomps
sarl
mov
push
outsb
std
and
fiadds
mov
out
icebp
test
mov
outsb
sub
aas
loop
inc
or
adcb
push
test
mov
pusha
loope
add
mov
and
or
dec
aas
clc
outsl
xchg
mov
fmuls
and
repz
lods
cmpsl
mov
das
lds
lret
pop
les
add
mov
das
cltd
ds
in
das
pop
pop
mov
loop
sub
fisubrl
insb
in
mov
jle
jnp
mov
xor
cli
in
imul
jge
pop
adc
test
loopne
insb
inc
xchg
das
lock
fwait
mov
pop
jp
cmp
flds
push
and
mov
add
fcomps
stos
xchg
ret
inc
pop
cmpsl
push
jge
rorb
mov
fildll
mov
xchg
ja
sbb
iret
fwait
add
xchg
xor
pop
mov
ljmp
inc
pop
jecxz
adc
mov
stos
loopne
bound
stc
fdivl
xor
mov
dec
push
mov
mov
cmp
jo
jne
push
push
fwait
xchg
xchg
or
std
addr16
lcall
sub
scas
add
xchg
or
mov
xor
adc
jns
and
pop
insb
xchg
jnp
vpsrlq
mov
and
pop
and
cmp
xor
ret
or
xchg
cmp
and
sub
hlt
bound
and
xor
sbb
dec
out
sbb
cmpsb
ja
push
cmp
enter
imulb
xlat
jge
cs
loop
sub
fs
mov
jp
inc
pop
fsubrp
mov
enter
dec
dec
mov
mov
out
imul
xor
mov
out
sahf
pusha
out
ret
xlat
mov
stos
jl
jp
inc
jno
daa
sub
fwait
aam
push
call
and
hlt
lret
out
sarb
icebp
sub
pop
and
push
leave
test
sahf
into
int
lret
mov
xchg
jmp
fld1
jnp
sbb
arpl
pop
scas
xchg
add
dec
cmpb
jb
cmpsl
inc
pop
dec
fwait
mov
or
adc
xchg
lea
fdivrl
or
push
xchg
loop
lock
sbb
dec
gs
jg
pusha
sub
and
push
mov
ficomps
movsb
test
les
pop
sbb
out
mov
xchg
inc
or
inc
push
and
xchg
add
sub
push
xor
pop
lds
lds
ret
neg
daa
call
jno
and
xchg
adc
xchg
mov
and
addr16
add
ja
inc
movsl
stc
loopne
fidivrl
or
sub
lods
mov
adc
cmp
jo
cld
cmc
out
adc
cs
jle
imul
stos
push
aaa
jnp
xor
movsl
rcrl
aam
pop
mov
pop
sahf
and
jb
adc
mov
mov
dec
pusha
inc
or
or
mov
movl
push
xchg
or
add
xor
syscall
jg
xchg
push
movsb
add
mov
pop
mov
lods
pop
mov
out
push
push
fwait
lahf
cwtl
out
enter
push
ds
jbe
sti
lds
mov
sarb
sbb
ss
mov
xchg
pop
mov
inc
push
and
or
xchg
loopne
push
scas
push
inc
fwait
mov
cmp
inc
nop
inc
out
and
mov
pop
aad
push
pop
ds
clc
out
xchg
cwtl
add
jl
mov
pop
sbb
add
insb
gs
jnp
js
adc
or
cmpsb
aad
and
dec
fstpt
repnz
xchg
push
cmc
fdiv
out
gs
pop
rolb
shll
add
jl
xchg
add
sub
xor
pop
les
lock
test
lea
push
sub
cmp
testl
pop
movsl
popa
int3
mov
sahf
cmp
outsl
dec
and
scas
dec
in
push
push
iret
cmpb
popa
hlt
nop
inc
movb
int3
mov
jg
fisubl
cmp
cmp
out
orb
sahf
ret
les
scas
jnp
les
test
jmp
nop
mov
cmp
cmp
call
rorb
movsl
pop
inc
scas
dec
mov
sbb
stc
out
jge
inc
lods
xorb
sbb
push
mov
dec
popa
inc
jo
sub
imul
rcr
cmp
imul
xchg
pop
pushl
mov
adc
cmc
inc
std
cmp
fsubrs
das
mov
lock
in
aas
push
jge
outsb
mov
jo
inc
add
mov
inc
add
out
sbb
fcos
push
adc
or
ret
pop
aad
push
mov
in
out
inc
pop
mov
lcall
jmp
pop
add
hlt
lds
lcall
lds
mov
movsl
dec
mov
je
cmpsl
mov
das
pop
ret
scas
sub
xchg
test
cmp
dec
and
jne
mov
nop
xchg
pop
out
es
data16
daa
sbb
cmc
jmp
ret
out
faddp
addr16
inc
push
cwtl
icebp
les
xchg
ret
mov
sub
test
mov
dec
xchg
inc
jnp
lods
mov
adc
scas
pushf
sbb
mull
jbe
leave
inc
nop
test
cld
jl
in
xor
test
scas
dec
mov
mov
notl
test
pop
into
inc
jge
and
icebp
mov
push
xor
adcl
std
test
jae
xor
pop
fadds
pop
dec
es
mov
mov
or
lock
dec
repnz
loop
push
nop
pop
cmp
addr16
and
xorl
aam
cmp
dec
test
cmp
sub
loop
xor
jp
jle
cmp
xchg
stc
sub
xor
cmp
bound
in
mov
push
push
in
and
lahf
ja
ret
xchg
ret
fadd
adc
xor
fnstenv
pop
rolb
popa
scas
cltd
or
cmc
jge
test
repz
ffreep
pop
lea
fs
jno
dec
fsubr
or
scas
ret
fsubrs
mov
mov
adc
fidivs
mov
rolb
sub
xchg
roll
cmc
push
iret
sbb
push
into
fimuls
cmpsl
dec
sub
mov
or
daa
call
into
mov
ret
in
sub
push
mov
ja
movsl
xlat
shlb
inc
lds
cmp
cli
or
ret
repz
popa
movsl
adc
dec
in
push
mov
sub
orl
cmp
fsubrs
lock
lret
mov
stos
add
inc
jge
sti
dec
xor
sbb
mov
insl
xchg
orb
mov
sarl
xor
out
nop
stc
or
sahf
xchg
jbe
sub
xchg
xchg
sti
repnz
andl
xor
sti
mov
loop
ret
fwait
mov
lea
fbld
popf
sub
sbb
jl
dec
cs
sub
xor
mov
mov
test
dec
inc
and
cmpsb
or
or
lea
xchg
xchg
imul
loop
fidivrl
mov
mov
pop
lret
pop
cmp
adc
cmpsb
push
mov
test
rorl
sub
adc
lea
je
das
jns
fnstsw
xlat
cmpb
xor
loop
das
aas
popa
dec
out
icebp
xlat
or
imul
sbb
pop
and
test
imul
and
sbb
xor
pop
and
lds
sub
arpl
popa
cwtl
sahf
sbb
shrl
adcb
inc
lahf
lock
pop
add
and
xchg
call
fistpll
arpl
lock
aam
jnp
lcall
das
and
mov
test
repz
jecxz
repnz
add
stos
add
mov
mov
jbe
xlat
xor
jmp
shlb
pop
dec
filds
push
and
sbb
jmp
push
stc
stos
mov
roll
mov
cs
in
mov
in
jo
add
dec
loop
mov
out
cmp
xchg
mov
mov
push
inc
mov
sbb
pop
jecxz
clc
fimull
gs
shlb
sbb
push
pop
adc
pop
lcall
cmp
sub
mov
cmc
fiaddl
sbb
and
pop
dec
std
mov
mov
or
les
fs
add
jl
insb
add
testl
and
mov
ss
shl
sbb
lods
xchg
pop
xchg
and
lock
scas
jbe
insl
dec
sub
mov
cmp
mov
in
and
jge
pop
dec
pop
add
aam
ret
adc
out
in
xchg
xor
xchg
nop
or
aaa
lea
mov
jmp
mov
cli
mov
inc
or
pusha
into
and
jbe
popf
leave
and
mov
out
mov
push
xor
inc
mov
push
movsb
push
addb
outsb
inc
addr16
mov
mov
adc
dec
push
ss
or
data16
or
and
xchg
dec
push
test
daa
sahf
xor
pop
aaa
add
sahf
dec
dec
sub
fwait
xchg
dec
rcll
inc
push
cmp
inc
dec
fstpl
xchg
adc
xor
xor
lret
icebp
aad
inc
mov
push
dec
lret
inc
and
cld
test
ret
adc
cld
sub
js
adc
dec
cltd
dec
adcb
adc
push
and
out
or
mov
test
scas
jge
aaa
icebp
and
xchg
mov
ds
out
iret
mov
out
sbb
jno
xchg
into
jl
mov
push
mov
hlt
mulb
in
cmpsb
pushf
or
pop
or
mov
cmp
iret
jl
xor
mov
js
in
add
into
push
cmp
inc
cmp
data16
je
cs
mov
adc
lods
int
or
xchg
adc
bound
fisttpll
sbb
pop
pusha
jne
jne
daa
dec
xchg
pushf
or
xchg
sub
es
adc
lahf
movsl
fs
inc
dec
and
and
push
les
push
gs
push
lret
pop
arpl
inc
notb
arpl
jg
jg
xchg
insb
cwtl
je
xor
mov
pop
jae
ud2
jle
repnz
jmp
arpl
aam
cmp
sub
loop
mov
or
test
inc
cmpsl
mov
cltd
insb
fldcw
inc
fwait
mov
mov
push
push
int
into
sahf
jns
sbb
aam
add
and
inc
sub
imul
add
stos
lret
jbe
stos
jno
nop
jmp
pop
dec
gs
mov
xor
adc
cli
cmp
mov
hlt
call
dec
fwait
adc
sub
sbb
mov
mov
cli
mov
negl
ret
clc
xchg
stos
shll
fs
ja
mov
or
lea
jmp
data16
jae
cmpsb
cmp
pop
rcrl
xor
xchg
add
xlat
jbe
lahf
cld
and
pop
leave
sub
sbb
mov
das
jne
outsb
jno
adc
or
lock
sub
in
movsl
sbb
in
pop
inc
inc
sbb
ljmp
push
push
and
lods
mov
cwtl
inc
js
jmp
pop
sbb
subb
shrl
pop
lahf
movsb
and
repz
adc
xor
inc
bound
fcom
movsb
jns
jmp
mov
lret
xor
or
adc
jnp
push
jne
shlb
jecxz
lcall
inc
nop
add
and
pop
sub
aad
out
loope
xchg
test
sbbb
xchg
call
fwait
imul
mov
loopne
dec
sbb
mov
cwtl
push
adc
xorl
jp
ja
dec
push
mov
or
mov
push
std
xchg
cmp
xchg
movsl
or
fs
stc
cli
lods
pop
sbb
test
cmc
or
push
xor
mov
js
xor
mov
cwtl
test
mov
sarb
hlt
popa
cmp
ja
jae
aam
adc
pop
lret
fildll
pop
or
dec
pop
xor
imul
lds
jns
movd
insb
adc
cld
mov
add
mov
in
aaa
cmp
cmovg
dec
mov
repnz
lds
sahf
jns
xor
push
mov
inc
lahf
insl
ss
in
les
jg
jmp
xchg
or
cmp
call
int
inc
xchg
jmp
cmpsb
mov
ja
sub
int
test
cmpsb
lods
lret
cmc
xchg
dec
sub
add
arpl
add
cmp
dec
push
jmp
inc
mov
pop
shrl
adc
popf
xchg
divb
sub
insl
mov
push
fisubrl
mov
testl
jne
lds
inc
cli
xor
into
push
dec
rcrl
iret
inc
scas
add
in
imul
push
xor
push
out
push
out
jge
outsb
push
aas
mov
aaa
int
cld
sbb
xchg
sub
push
std
orb
sub
sub
adc
loop
sub
mov
pusha
icebp
popa
shrl
lret
push
pop
cmp
push
in
cli
add
sbb
aam
aam
dec
out
push
cmp
cmp
adc
inc
mov
add
adc
cmp
jle
fcoms
xor
sub
mov
dec
add
adc
inc
sub
xor
add
inc
or
ja
cmp
or
lods
out
lods
rol
test
pop
in
pop
cmp
imul
outsl
out
lea
aaa
xchg
int3
push
inc
or
adc
xchg
mov
push
insl
mov
cs
icebp
pushf
push
cmp
stos
mov
mov
mov
js
ficomps
iret
dec
sarb
xor
cmp
xchg
das
nop
shrb
aaa
cmp
jle
insl
fiaddl
cmp
iret
jne
pop
fwait
add
ret
cmpsb
and
in
arpl
ljmp
pop
mov
mov
jmp
inc
xchg
popa
inc
mov
sub
and
out
push
mov
dec
ja
loope
jno
push
insb
out
inc
imulb
aam
idivl
nop
push
mov
insl
xor
out
call
imul
inc
inc
sub
jp
jno
push
adc
leave
and
push
sub
adc
or
nop
iret
cmp
fwait
inc
mov
jnp
outsl
arpl
mov
xorb
jnp
rclb
pop
mov
xchg
sub
dec
fwait
lea
or
pusha
mov
inc
sbb
add
push
les
cmpsl
cmc
loopne
jns
xchg
clc
popa
mov
rorl
dec
sub
xchg
pop
mov
sahf
sub
mov
sbb
mov
pop
and
outsb
sbb
adc
mov
push
add
aas
push
add
movb
dec
lds
loopne
dec
push
sarl
and
xlat
lods
mov
ss
mov
push
ds
xchg
jbe
cmp
enter
mov
fnstenv
fists
dec
out
add
dec
arpl
jge
sahf
imul
int
sub
out
loope
pop
test
sahf
mov
imulb
pop
push
or
mov
push
jb
cld
out
subb
jp
ja
and
out
xor
ss
mov
jb
mov
inc
jecxz
xchg
sub
popf
int3
gs
dec
sbb
inc
and
sbb
clc
jo
cli
rol
add
xor
divb
ds
lret
addr16
pop
loope
xchg
iret
add
out
cli
mov
mov
mov
fiadds
cld
mov
dec
data16
std
dec
push
lods
ja
xor
push
mov
dec
jae
sbb
push
imul
mov
outsl
mov
push
test
sbb
mov
mov
mov
pmaxsw
int
sub
outsb
adc
adc
pop
fnstsw
inc
les
or
or
repz
inc
sbb
pusha
mov
xlat
pop
mov
icebp
mov
jmp
fcoms
jmp
ss
fisttpll
clc
push
insb
sub
jmp
sbb
cmpsl
push
ret
adc
mov
inc
into
sbb
add
pop
in
mov
mov
lea
in
pop
aam
mov
cmpsb
sbb
inc
mov
adc
jns
test
pop
js
mov
daa
popf
pop
mov
testb
sub
add
addb
jp
clc
xchg
xor
sbb
adc
ss
mov
aad
add
inc
lret
aas
jl
fstpt
mov
xor
push
inc
shlb
mov
add
frstor
jge
dec
inc
push
jp
mov
notl
push
mov
jecxz
lds
or
lcall
xchg
add
and
xchg
add
mov
call
cmp
xor
cli
movsl
jl
lea
xor
xchg
inc
dec
pop
fwait
inc
or
shrb
aad
and
xchg
cmpsl
inc
inc
repz
pop
es
mov
lret
lds
inc
sbbb
fdivrp
cs
pop
and
int
push
iret
or
sub
pop
jns
aaa
pop
stos
fdivrs
les
jmp
or
ljmp
pop
jg
loop
jno
push
mov
pop
xchg
sub
push
jns
cltd
push
or
xchg
xor
mov
mov
adc
movb
or
lods
xor
xor
shlb
push
movsl
xchg
cmp
pushf
jne
jp
pop
xor
jno
out
mov
call
cli
mov
sbb
xor
test
xchg
mov
sbb
outsl
jnp
mov
test
mov
pop
or
push
mov
aad
add
sbb
int
mov
outsb
imul
jp
icebp
cmp
rol
fisubrs
aam
loopne
or
push
push
mov
aas
std
xor
stc
mov
and
outsl
inc
dec
xchg
sbb
mov
pop
shl
aad
popa
push
cs
add
lea
repz
sti
in
or
adc
xor
shlb
sub
sub
jl
nop
in
and
xchg
lahf
cwtl
movsl
mov
addb
inc
dec
mov
mov
cmp
and
pop
pop
dec
fbld
and
ret
push
add
scas
aam
loope
sbb
imul
xor
xor
clc
push
repnz
aas
xchg
rclb
cwtl
stos
hlt
fidivrs
cmpsb
fmuls
pop
xchg
popa
jge
in
aam
insl
ds
shlb
cwtl
push
rcrl
add
fnstenv
pop
mov
mov
lcall
jle
ret
xor
fs
lods
icebp
jbe
fwait
addb
pop
add
lret
sub
pop
sbb
add
sub
adc
sub
hlt
addr16
push
movsb
gs
enter
add
sbb
pop
sbb
jo
pop
bound
cmp
xchg
sbbb
add
out
nop
push
dec
stos
sub
sbb
dec
pop
lock
clc
adc
and
mov
pop
sub
dec
xlat
inc
or
addr16
jg
daa
out
xchg
gs
push
mov
add
cmp
and
popf
pop
push
popa
loopne
loope
stos
jno
dec
xorb
add
add
xchg
adc
cs
xchg
xor
pop
mov
cmp
cmc
push
sub
scas
push
fld
dec
rorl
xchg
std
stos
jge
test
inc
xlat
cltd
sub
lea
lret
or
in
bound
mov
lcall
mov
into
mov
jae
pop
mov
jae
dec
dec
pop
xchg
jb
mov
sbb
int3
sbb
jmp
arpl
and
rcrb
fsubs
std
xor
aam
aaa
push
aaa
dec
jae
ret
xchg
mov
movsb
imul
sbb
sbb
pop
push
je
ja
test
ljmp
lret
imul
in
xchg
nop
arpl
es
mulb
out
mov
orb
jns
jns
sbbb
outsb
pushf
stos
or
xor
lret
in
fmul
sbb
cli
push
test
and
aam
xchg
fcom
sub
rorl
push
cmpsl
sub
or
fiadds
les
test
repz
pop
sbb
mov
in
fs
popa
push
add
mov
lret
cld
sbb
in
sub
repnz
xchg
outsb
xchg
stos
sar
and
jl
push
out
pop
add
jg
daa
ss
or
shll
lcall
or
and
lahf
push
jae
das
mov
add
push
imul
and
fs
scas
rcll
mov
popa
push
les
in
jae
popl
and
or
cmc
repnz
in
addb
xlat
cmpsl
fisubrl
push
mov
jp
dec
repz
mov
cmc
cld
fisttpll
xchg
xor
in
imul
push
pushf
add
add
fs
popa
aad
lods
and
xor
ljmp
jne
lret
out
adc
sub
push
push
add
or
iret
jle
stos
aam
xor
pop
pop
mov
cmp
stos
cmp
mov
mov
fs
mov
inc
test
dec
jae
xor
xor
push
push
dec
je
pop
mov
xor
stos
frstor
push
pop
enter
stos
sub
pusha
imul
sub
dec
fmul
pushf
xor
aas
jnp
jo
lds
cmp
std
loope
pop
lea
xor
hlt
enter
push
jns
ja
mov
std
jo
aaa
cmp
imul
sti
repz
add
inc
cmp
xor
add
or
dec
jae
cli
mov
repz
add
ljmp
std
and
push
cmp
jp
sub
jp
shl
or
ror
mov
xchg
loope
fucomp
int
inc
imul
mov
das
push
vpshufd
xor
pop
sbb
inc
xchg
xor
mov
push
cs
xchg
xchg
loope
jb
mov
push
mov
dec
in
or
xchg
push
ja
adc
jmp
shl
sub
dec
ret
in
rol
lock
adc
and
lods
in
test
inc
test
inc
call
pop
stc
lret
push
lcall
or
or
pop
inc
xchg
mov
xor
push
push
xor
xchg
xor
je
inc
ret
mov
dec
xchg
inc
jmp
xor
bound
push
pop
stos
fwait
mov
mov
inc
inc
fisttps
mov
out
and
pop
push
in
test
xchg
or
xchg
outsb
inc
js
cmc
pop
push
pusha
inc
std
dec
xchg
xlat
dec
adc
lret
lock
jns
cwtl
clc
ja
jae
mov
test
mov
int3
push
pop
mov
arpl
pusha
or
cld
cmpsb
loop
jnp
or
into
add
push
inc
xor
sbb
push
jmp
jo
loop
fstpt
mov
and
stos
jbe
jmp
pop
out
dec
icebp
addr16
arpl
iret
sbb
pusha
jnp
adc
cli
jo
clc
adc
xchg
cmc
scas
pop
pop
jns
pusha
aad
js
and
inc
mov
fwait
into
add
or
iret
or
outsl
push
movsbl
mov
call
bound
mov
scas
scas
aaa
lret
jns
and
out
sub
cmp
xor
mov
cmp
adc
dec
inc
test
pusha
in
sbb
out
es
movsl
xor
jno
mulb
cltd
in
or
arpl
test
cmp
mov
adc
jg
clc
mov
push
jno
insb
jb
sub
sub
insb
aaa
adc
push
outsb
pop
mov
popf
dec
jmp
or
adc
push
mull
jb
inc
outsb
jmp
inc
xor
dec
push
pop
arpl
test
in
iret
ficompl
lods
pop
sub
and
imul
lock
addr16
push
cmp
in
es
sub
rcl
imul
xor
adc
ja
push
rolb
call
out
cmp
inc
scas
stos
dec
popa
xlat
test
int3
xor
xchg
in
dec
xchg
cli
loopw
into
cmpsb
mov
push
insb
out
pop
pusha
pop
rcrb
mov
js
fisubs
xor
jo
cwtl
cmp
push
pop
jl
sbb
adc
dec
jno
test
outsl
or
push
or
out
and
flds
addr16
sbb
push
mov
mov
test
pop
out
pop
iret
popa
or
out
jae,pt
or
xchg
pop
out
push
add
xchg
loope
fwait
xor
in
sub
sbb
push
pop
jne
insl
fisubs
in
mov
lods
pop
add
push
inc
cmpsb
push
loopne
add
cmp
sub
dec
testl
sub
ds
jge
xor
aas
jmp
mov
mov
mov
mov
inc
mov
fisubrl
add
and
imul
lds
mov
les
fistpll
testb
ds
push
add
div
dec
stos
lcall
loop
fwait
xor
mov
les
dec
jne
inc
mov
xor
subl
inc
lea
mov
mov
sbb
or
add
xor
xor
fidivrs
out
insb
frstor
in
in
and
xchg
repz
sbb
cmovno
or
jno
xchg
push
add
sbb
loope
inc
scas
dec
mov
fwait
hlt
xlat
fildll
and
pop
xchg
mov
fidivrl
shll
in
js
push
inc
popf
into
in
das
xchg
xchg
adc
cwtl
pop
mov
scas
je
jo
pop
movsl
aad
jnp
pextrw
mov
lea
cmp
xor
shll
add
mov
sub
cwtl
dec
sbb
fcoms
ret
push
hlt
mov
mov
mul
mov
rorl
jb
icebp
es
jmp
data16
and
jecxz
mov
inc
rcrb
call
jo
popa
pop
mov
stc
push
xchg
inc
call
mov
div
mov
dec
loop
mov
dec
xchg
push
mov
cltd
adc
push
into
sbb
or
jge
push
mov
jp
add
dec
test
nop
int3
roll
sub
mov
in
xchg
or
cmp
pushf
xor
xor
fsts
xchg
roll
hlt
inc
mov
mov
dec
pop
ljmp
jp
ds
out
pop
iret
adc
pop
movsl
lock
jns
adc
fidivs
cltd
shrl
or
push
lock
dec
ljmp
and
rorl
insb
adc
loop
push
aad
pop
xchg
movsl
loope
sub
push
sub
adc
jle
les
ficoml
bound
sbb
in
and
cmpl
cltd
pusha
mov
inc
add
mov
inc
push
cltd
stos
int
ja
int3
ss
pop
sti
in
xchg
loopne
adc
add
pop
outsl
sarl
test
aas
sarl
sbb
fstpt
and
mov
sub
xor
push
pop
dec
mov
push
lock
dec
in
push
outsl
sbb
ret
shll
add
dec
cmp
and
pop
ds
xchg
mov
mov
pop
cmpsl
push
add
sub
lock
pop
into
les
aaa
int3
adc
fs
je
xchg
pushl
cwtl
in
fbstp
push
mov
or
xor
xor
cmp
int
scas
lods
mov
inc
ss
and
xor
push
jae
sbb
pusha
dec
outsl
sarl
incl
lret
add
lcall
mov
gs
inc
lea
test
out
add
pop
jmp
adc
dec
push
imul
leave
outsl
cmp
mov
bound
bound
xor
sbb
shll
loope
inc
lcall
pop
icebp
insb
xchg
out
aad
mov
arpl
outsl
and
jnp
aas
imul
lock
cmp
cmpsl
and
repnz
addb
cwtl
xor
pop
push
stos
das
fsubp
call
mov
dec
xlat
inc
pop
mov
sub
push
out
mov
sbb
loopne
fcoms
fs
in
xor
mov
sub
mov
inc
cs
inc
fistl
mov
sbb
mov
push
sti
mov
aas
rol
cmp
mov
add
xor
push
mov
and
loopne
in
xor
pop
pop
enter
and
dec
ja
dec
aaa
pop
out
int
or
xchg
mov
clc
mov
test
adc
mov
sub
push
and
dec
mov
cmp
cld
add
lret
arpl
sub
pop
xchg
and
xorb
std
sbb
mov
push
add
sbb
imul
pop
aaa
mov
and
mov
or
mov
stos
jns
ret
clc
inc
aaa
adc
arpl
push
add
les
scas
adc
xorl
popa
repz
mov
shrb
mov
shrb
cltd
mov
int3
sahf
dec
cltd
sbb
xchg
insl
jmp
movsb
in
jns
or
inc
es
jb
cmp
jae
faddp
push
mov
neg
sarb
pop
sub
fs
cmpsb
inc
out
xor
pop
pop
dec
stos
jge
adc
sbb
sahf
arpl
lahf
js
std
adcl
insl
sbb
cs
fldcw
jnp
and
ljmp
jne
pop
mov
arpl
mov
fprem
jg
rolb
or
and
cmp
mov
jp
mov
dec
push
fildl
iret
insb
in
lods
add
and
imul
icebp
lock
pop
adc
xchg
push
fidivs
scas
into
es
and
ficomps
cmp
out
shlb
in
aam
in
xor
add
and
pusha
imul
les
mov
xorl
outsb
out
hlt
push
into
inc
and
xor
xor
notb
or
into
mov
insb
ds
jns
repz
lods
jg
je
aam
mov
push
mov
inc
inc
mov
stc
sub
mov
lret
pop
adc
dec
ljmp
mov
jno
xchg
aas
pop
pop
mov
arpl
mov
dec
push
sbb
adc
pop
sbb
shrb
sarb
or
inc
jmp
in
xchg
sub
adc
imul
jnp
enter
fstps
xchg
and
lret
push
push
daa
xor
fadds
dec
jno
inc
add
mov
jne
or
sbb
je
pushf
cli
xchg
inc
dec
movsl
enter
popf
sbb
fidivrl
add
pusha
mov
out
dec
nop
sub
sub
lahf
xchg
test
cmp
xchg
sbb
sbb
add
movsl
mov
inc
pusha
cmp
ret
xor
cmp
fsubrs
inc
jmp
mov
lods
jg
std
cs
in
icebp
mov
insl
mov
int
pop
mov
adc
jl
jp
or
cmpsb
repz
insb
sub
pop
es
add
loop
pop
imul
push
inc
stos
jb
jg
ds
sbb
lods
and
insb
rcr
push
popa
pop
xchg
and
divps
mov
mov
mov
dec
enter
test
jne
dec
int3
xor
cmp
lods
dec
cmpsl
jl
outsb
xor
arpl
repz
mov
shl
arpl
dec
cmp
xchg
cmp
fs
xor
aas
aaa
xchg
cmp
mov
mov
jno
test
lods
popf
fidivs
add
mov
mov
fisttpl
shlb
push
mov
dec
push
cmp
stc
fldt
push
mov
sub
outsl
int
rolb
enter
adc
pop
jecxz
test
jo
fs
lock
hlt
jg
xchg
jnp
jns
enter
cmpsb
lock
shrb
or
push
lret
daa
sub
jle
or
test
dec
xor
pop
push
dec
and
ror
or
jl
or
call
arpl
xchg
jecxz
fldt
pop
ja
sbb
mov
hlt
cmp
ret
movsl
imul
inc
mov
jnp
cmp
add
push
jne
gs
loope
xor
mov
inc
jmp
out
js
icebp
mov
mov
jno
dec
pop
mov
jae
out
test
cmpsl
xor
add
dec
jae
dec
mov
dec
arpl
in
dec
xor
lret
adc
mov
push
insl
jmp
sbb
imul
mov
add
cmp
ljmp
sahf
mov
ds
cmp
push
aam
sbb
jl
lcall
and
dec
sbb
sub
mov
pusha
pusha
xchg
xor
clc
lods
gs
lea
and
cld
or
pop
xor
sbb
and
in
cmp
mov
pop
aas
pop
fstpl
aaa
dec
std
pop
cmpsb
and
fdivrs
es
adc
fistps
cmc
sub
ror
mov
in
lahf
rolb
fwait
call
popl
sahf
push
out
push
inc
and
das
scas
shrl
xchg
pushf
mov
push
or
sub
outsl
sbb
pop
loop
lock
out
movl
or
fists
adc
mov
pop
dec
in
sbb
fmul
xor
sub
fstpt
out
or
xchg
adc
stos
sbb
add
lcall
add
sbb
out
into
jle
and
insl
and
or
lods
jae
inc
push
lock
mov
push
mov
call
ja
pop
inc
sub
sahf
pop
test
sbb
push
shrb
mov
and
sahf
mov
or
cmp
int3
mov
popf
mov
movsb
add
jmp
xor
out
dec
mov
jg
bound
test
fsubl
xchg
mov
mov
adc
cmp
xchg
push
ficomps
dec
mov
popf
mov
jg
adc
out
xchg
lahf
jno
xlat
mov
push
loope
out
fldcw
fs
cld
lds
enter
pop
cmp
push
clc
or
jns
lret
data16
or
nop
xor
jmp
aad
dec
pop
in
test
push
scas
rcl
mov
bound
push
decl
add
movsb
push
jp
into
fwait
jo
repnz
jg
pop
mov
push
ss
lock
pop
arpl
cld
sub
cmp
sub
lcall
outsb
out
dec
fimuls
mov
xor
pop
add
inc
sub
lock
push
orb
dec
mov
jg
into
imul
ds
jg,pn
repnz
push
jg
push
out
ds
or
mov
jecxz
cs
and
out
test
out
call
rcl
jmp
mov
jnp
xchg
ja
jge
stc
out
mov
jnp
jl
inc
xor
xchg
frndint
inc
fisubl
js
in
adc
jp
negl
cmp
xchg
push
or
lcall
lds
or
mov
fsubl
lods
mov
sbb
fiaddl
xchg
add
jl
adc
or
js
repz
jle
or
xchg
adc
xchg
cld
xor
into
adc
aam
aam
push
adc
aaa
flds
ret
out
jge
scas
lahf
jnp
roll
cmp
aam
mov
push
dec
ljmp
ja
movsb
xor
loop
cli
push
xor
mov
adc
cmp
cli
popf
jae
pop
xchg
sub
jp
and
daa
hlt
hlt
popf
mov
aas
repnz
inc
loop
adc
dec
mov
sub
lock
push
lcall
daa
pop
subl
xchg
out
mov
pop
mov
test
loop
imulb
xchg
pop
dec
lcall
sbb
xchg
add
and
inc
lret
pop
inc
jmp
cwtl
hlt
lret
mov
or
xchg
bound
pop
mov
add
pop
sbb
xchg
jbe
mov
push
jmp
imul
pop
adc
lods
mov
jp
sbb
popf
lret
cmp
jnp
pushl
insb
stos
dec
sub
pushf
mov
xlat
test
test
mov
sahf
sub
adc
cmpsb
pusha
pop
cli
dec
push
sbb
mov
cwtl
dec
fstpt
xor
add
in
sahf
pushf
add
gs
ficoms
mov
sbb
jns
leave
ret
daa
daa
stos
lcall
add
dec
loop
outsl
cli
das
insl
pop
and
inc
insb
mov
data16
push
jo
xchg
stos
out
arpl
ja
mov
std
mov
arpl
mov
dec
push
xor
insb
jge
and
jmp
or
cmp
xchg
in
push
fisttpl
dec
lcall
es
jecxz
mov
aaa
fcomps
addl
inc
and
adc
shl
jecxz
cs
dec
mov
mov
outsb
inc
or
imul
pop
stc
inc
or
loop
outsb
mov
fcomps
fneni(8087
loop
pop
mov
xor
cmp
inc
xchg
pop
arpl
in
mov
insb
pop
popa
sub
push
adc
shrb
outsb
push
je
loope
shrb
sahf
inc
outsb
lock
jo
data16
lds
les
into
test
outsl
cltd
insb
pop
cmp
movsl
jg
imul
iret
cld
imul
add
and
cmp
or
fsubrl
mov
or
mov
adc
sub
mov
in
xor
cwtl
mov
into
movsb
sub
dec
push
jecxz
or
sub
stos
loopne
das
push
pushl
mov
push
in
ljmp
insb
jb
sbb
mov
or
out
fs
rorb
addr16
push
fs
into
xchg
xchg
in
cmpsl
sub
and
popa
or
nop
sub
into
mov
frstor
cmp
sub
repz
xchg
mov
jge
cmp
movsl
jbe
dec
or
gs
xchg
in
jae
cmpsl
mov
rol
fcoml
test
sub
lods
or
in
sub
fwait
jae
lds
add
loope
out
sbb
in
mov
push
jg
ret
xchg
cwtl
and
xchg
fcomps
imul
pusha
mov
sub
add
mov
outsb
divl
addr16
ja,pn
dec
jmp
and
stc
fs
dec
mov
sub
pop
test
imul
xchg
pop
sbb
and
mov
or
rep
scas
adc
into
fistpl
cmpsl
fnstsw
lcall
cmp
xlat
fisttps
xchg
xchg
rcrb
pop
in
arpl
xchg
sbbb
inc
scas
lock
cld
xor
ds
pop
inc
mov
mov
hlt
mov
enter
sbb
pop
lods
mov
sbb
sbb
imul
into
daa
fldt
mov
outsb
pushf
sub
push
xchg
add
push
ret
movsl
inc
aas
loop
lret
add
dec
pop
shlb
mov
jbe
sti
fsubrs
and
push
movsl
lock
inc
jnp
repnz
fstpl
fs
jns
cmp
jecxz
sahf
xchg
jmp
xor
and
sbb
xchg
scas
jge
push
inc
ds
push
mov
push
dec
sbb
mov
lret
jmp
lret
sub
je
rcl
sbbl
mov
mov
or
insb
adc
lcall
xchg
xchg
icebp
or
dec
jb
push
out
cs
dec
or
ljmp
popa
mov
mov
das
mov
shlb
insl
lods
xorl
mov
sbb
into
add
dec
das
mov
sbb
popa
mov
rcrl
mov
addr16
push
dec
add
and
push
out
sub
mov
int3
mov
mov
cmc
pop
dec
or
push
aad
rcrb
or
pop
jecxz
jp
mov
xchg
add
inc
loope
outsl
clc
mov
mov
xchg
fisubrs
and
lret
jecxz
sarl
mov
ror
imul
pop
les
pop
jnp
js
ja
je
fidivs
jecxz
jo
xor
ret
ds
pop
mov
mov
mov
jne
xbegin
jno
popf
or
push
aas
lds
clc
push
xor
insl
out
xchg
mov
sbb
xor
jno
cmpsl
insl
lea
ret
fsts
repz
sub
pop
dec
into
cmp
mov
aad
out
push
insl
sbb
sub
and
insb
dec
repnz
ljmp
jnp
sarl
aaa
xchg
xchg
ljmp
or
clc
push
mov
test
adc
loopne
iret
mov
cli
cmp
mov
jge
xchg
push
jmp
lods
not
rolb
mov
adc
stos
imull
dec
and
aaa
mov
adc
lock
cmc
lods
fisubrs
sbb
push
out
imul
jne
mov
test
or
dec
test
lods
and
in
ret
cmp
jne
imul
mov
dec
fwait
and
lret
rcl
push
test
push
jecxz
sbb
and
sbb
rcrb
outsb
aas
xchg
inc
pop
pushf
fwait
add
mov
test
mov
jbe
xor
mov
or
es
outsb
fs
bound
xor
xchg
jmp
out
inc
enter
dec
push
ljmp
cltd
lret
push
jl
push
sbb
imul
cltd
jno
ret
and
in
fcompl
roll
push
lcallw
into
sub
pop
fisttpll
pop
loope
arpl
mov
mov
sub
xor
ret
flds
hlt
and
hlt
sbb
mov
push
in
pop
loope
mov
jne
div
or
fldenv
and
cltd
lods
dec
pop
mov
rclb
jnp
stos
addr16
sysret
call
mov
mov
push
data16
mov
test
mov
dec
cmp
mov
jb
cltd
pop
std
xchg
hlt
mov
nop
ds
jle
and
dec
scas
mov
movsl
dec
jle
repz
aas
xchg
cmp
fcmovne
adc
jg
and
jns
cmp
clc
mov
push
pop
movsl
jno
test
insb
in
aaa
hlt
mov
jo
jnp
lcall
pcmpeqw
mov
xchg
lea
xchg
sub
add
stos
mov
call
adc
mov
xchg
cli
jecxz
sbb
push
gs
mov
enter
mov
out
loopne
fstpt
insl
xorb
mov
xchg
enter
fmulp
aas
add
loopne
jecxz
sbb
xor
or
stos
cmc
push
in
jg
lea
inc
and
rorb
mov
lret
addb
inc
pop
dec
mov
js
mov
pop
mov
lret
add
push
xchg
jp
addb
push
in
ret
sub
cmpsl
in
inc
cmp
mov
add
dec
mov
enter
repnz
pushf
les
mov
or
inc
sub
pop
andb
scas
inc
dec
pop
pop
outsb
cmp
pop
add
inc
push
addr16
cmp
ret
enter
in
sub
sbb
sub
sarb
movsl
sarb
aam
pop
in
push
pop
repz
mov
sub
cmp
adcl
pop
subl
jae
imul
xchg
stos
out
repnz
cltd
xchg
inc
stos
mov
sbb
pop
pop
cmp
dec
pop
fcmovnu
and
ss
cmp
push
aas
mov
imul
enter
ss
sub
xor
xchg
xor
sbb
cli
mov
cmp
fbld
fidivrl
xchg
and
out
push
jo
push
loope
into
mov
loopne
in
pop
and
mov
mov
xor
out
mov
push
cli
in
or
cmp
leave
cmp
sub
addb
inc
jbe
test
jg
bound
sub
pop
fs
stos
lea
add
pop
cmp
xchg
cltd
shlb
imul
xor
dec
add
xchg
mov
jo
and
fwait
rorl
les
dec
push
jge
pushf
inc
mov
lret
test
push
adc
add
mov
mov
int3
push
or
add
lds
mov
insb
lret
js
mov
in
out
pop
inc
daa
in
out
in
out
or
popa
call
and
dec
dec
insb
inc
adc
jp
fldt
lcall
push
repz
push
pop
sti
sbb
jb
cmp
je
mov
scas
push
sub
outsl
scas
sbb
aam
push
sub
xor
sti
or
lret
mov
lret
sbb
cmovb
xlat
xor
jne
inc
dec
sti
push
lcall
hlt
and
cmp
pop
pop
sarl
push
aaa
add
mov
in
movsb
and
jne
imul
and
js
or
cld
sbb
lret
xchg
aaa
movsl
mov
mov
test
push
rcll
pop
push
jecxz
and
out
and
pop
fsubs
enter
ret
ss
pop
push
lods
push
push
rorl
gs
or
pushf
mov
test
sahf
loop
add
roll
xchg
nop
xor
jo
jo
cmpsb
cmc
sbb
mov
out
cmpsl
cltd
jb
pop
sub
pusha
mov
mov
imul
ja
jge
nop
inc
nop
enter
imul
lret
mov
sub
mov
mov
cwtl
je
mov
jl
mov
js
retw
das
and
sub
dec
pop
push
clc
push
test
enter
sub
sub
aaa
shlb
icebp
aam
clc
mov
push
sbb
push
and
mov
pop
mov
mov
push
xchg
xlat
xchg
push
mov
std
fadds
pushf
dec
loop
cmp
xor
dec
addr16
pop
lret
in
pop
in
sahf
xor
or
mov
adc
cmp
scas
bound
lock
mov
imul
pop
int3
push
lock
and
sub
lret
jb
jmp
inc
pop
out
pusha
xlat
movsl
mov
pop
sbbl
ja
icebp
add
repnz
scas
lds
jmp
sub
inc
jp
pop
mov
sub
fwait
mov
push
adc
rcrb
aaa
and
xor
shlb
stc
ljmp
or
xchg
ja
into
sub
pop
test
or
or
imul
popa
stos
fsubrl
xchg
sbb
ss
and
dec
add
fildl
pop
inc
mov
or
repnz
push
loope
add
adc
adc
repnz
xchg
rep
and
xchg
mov
fxch
dec
mov
push
push
mov
leave
roll
xor
add
xchg
in
pop
jp
add
mov
out
jnp
pop
ret
jmp
mov
