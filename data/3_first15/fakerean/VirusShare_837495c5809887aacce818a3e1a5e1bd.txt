cmpsb
pop
inc
push
push
sub
incl
add
add
add
xor
add
fdivr
decl
push
fdivr
test
nop
mov
push
mov
inc
push
mov
rorb
daa
enter
mov
mov
lret
cs
outsb
clc
into
push
jg
stos
push
inc
jne
bound
repz
xchg
and
dec
mov
stos
addl
lock
add
add
push
mov
and
adc
incl
add
stos
mov
fnsave
add
loop
adc
insl
push
adc
jb
cld
fists
movsl
jmp
inc
cmpl
adc
sbb
stos
je
cmpb
clc
xchg
add
sti
jbe
fdivr
mov
cmp
incl
add
mov
push
cmp
mov
ljmp
mov
gs
fiadds
stos
cmp
je
inc
loopne
add
xrelease
mov
pop
inc
cmp
fdivrl
cmp
jge
and
mov
xchg
cmpb
mov
cmp
and
int3
aaa
test
push
sbbl
mov
mov
ds
add
push
add
add
mov
call
sub
inc
push
xchg
subl
sar
mov
mov
ja
or
adc
jb
faddp
mov
lcall
mov
add
add
mov
andb
aas
add
add
xor
push
cmpsb
push
ret
mov
das
movsb
mov
xchg
mov
out
addr16
xor
mov
mov
add
inc
cmp
xchg
es
leave
lods
jbe
js
fwait
stc
test
cwtl
add
test
mov
or
jle
bound
test
jge
push
sub
xchg
sti
and
test
int3
jge
insl
and
arpl
xorl
push
aaa
test
repz
add
cwtl
ss
jmp
and
sbb
es
jl
xchg
roll
arpl
push
add
and
fs
ss
push
add
pop
ss
push
sti
fs
xchg
add
or
popl
jge
xchg
or
adc
cli
test
mov
jns
xchg
add
push
divl
jbe
js
fwait
stc
test
cwtl
cli
test
cltd
or
je
or
push
inc
test
or
push
or
mov
insl
sbb
test
rcll
lods
adc
mov
push
sbb
inc
movsb
sbb
xchg
or
cltd
std
mov
sbb
xchg
add
mov
fstps
stc
pusha
sbb
or
push
or
xchg
sti
and
outsb
sbb
arpl
cli
movsl
adc
add
push
cltd
add
lret
push
aaa
push
sub
or
cld
xor
push
ljmp
sahf
xor
mov
bound
cmpsb
xlat
or
stc
mov
cmpsb
mov
jae
sarb
into
fists
xor
adc
lods
enter
mov
sub
mov
in
or
loope
fdivl
push
leave
xor
xor
jge
push
inc
iret
lds
sti
mov
mov
xor
jge
mov
in
pop
inc
pop
ja
inc
xor
ss
mov
xlat
jne
pushf
sti
jbe
jg
dec
daa
sbb
or
sub
add
mov
clc
lods
jle
aas
out
sub
adc
mov
aaa
xorl
lods
xor
lods
hlt
shl
mov
xchg
repz
fwait
push
cltd
xchg
push
xchg
repz
sbb
ret
popa
xor
std
xor
insl
cmp
or
xchg
int3
lods
pop
loope
test
or
lods
xor
int
pop
loope
or
or
xor
mov
adc
push
loope
xor
sbb
lea
lods
test
insb
sbb
leave
lods
xor
test
xor
cmp
push
mov
sbb
loopne
xor
aad
or
xchg
jae
leave
lods
sbb
and
mov
jns
call
lods
xor
lods
xchg
sbb
test
mov
aas
outsl
les
xor
int
loopne
xor
mov
jb
loop
or
repz
pop
adc
enter
mov
sub
mov
cld
or
sbb
iret
xor
mov
imul
hlt
sbb
inc
out
cmp
lods
xor
fmuls
mov
xor
xor
mov
filds
lods
inc
push
leave
sti
fwait
push
popa
divb
movsb
rcll
cmc
aaa
les
in
xor
jne
mov
inc
adc
inc
push
leave
test
jno
leave
test
xor
jge
xchg
repz
add
in
xor
shll
push
leave
test
xor
mov
or
test
cmp
ret
xor
pop
leave
lods
mov
mov
dec
sbb
scas
mov
lods
xor
pushf
xchg
mov
repz
jno
les
adc
lods
mov
push
pop
lods
pop
add
pop
cmp
mov
add
xchg
repz
adc
xor
xor
mov
jp
clc
push
mov
push
les
pop
les
push
and
outsb
fwait
sti
mov
bound
cmp
xchg
jns
add
sbb
insb
add
aas
cli
and
jb
mov
mov
daa
cmp
or
adc
push
lret
loopne
push
xchg
repz
xor
xor
xor
mov
or
mov
or
adc
sti
dec
pop
sbb
or
cmp
xchg
mov
icebp
xchg
repz
and
mov
decl
xor
xor
rcll
jl
cmp
clc
leave
sbbl
cmp
mov
popa
sub
sub
add
rcr
mov
fcoml
mov
push
mov
adc
shlb
xor
subl
mov
mov
lods
xor
mov
xchg
cli
sub
jle
rcl
ret
mov
scas
test
sbb
sbb
lods
mov
enter
dec
push
xor
in
or
xor
xor
xor
xor
mov
and
aad
mov
add
sub
pop
imulb
pop
fs
movsb
fcomp
mov
aad
leave
lods
xor
lcall
push
inc
loop
enter
push
enter
jp
cmp
jl
pusha
or
and
mov
add
push
xor
imul
jno
inc
in
xor
sub
jecxz
outsb
jge
mov
or
xor
cmp
nop
enter
or
dec
or
push
pop
lods
cltd
mov
dec
test
xchg
test
imul
lods
pop
int
adcb
in
repz
movsb
cmp
leave
lret
enter
test
mov
popa
sbb
cltd
std
imul
frstor
xchg
jne
and
clc
insl
pop
clc
or
xchg
enter
insl
fidivl
fistpll
mov
mov
sahf
or
add
mov
cltd
xor
ja
ret
or
shr
test
adc
add
push
hlt
movsb
popa
pushf
fnstenv
mov
out
cmp
pop
movsb
and
xchg
adc
and
lret
mov
aad
pop
adc
stos
cmp
lret
mov
xor
sarb
fnstenv
arpl
les
sbb
pop
and
push
bswap
or
jae
leave
imul
sub
jge
ja
mov
sub
inc
ljmp
push
mov
jl
mov
jp
ss
pop
mov
mov
ds
sub
cmp
mov
nop
xchg
ja
loopne
xor
sub
cld
adc
lret
pop
sahf
xor
bound
rcr
pop
mov
cmp
add
sub
shlb
fdivs
jecxz
cmp
and
pushf
lods
cmp
push
in
fisttps
test
hlt
sub
inc
fcoml
jae
jne
mov
push
jle
test
push
outsb
cltd
xchg
mov
mov
jg
int3
idivl
subl
sub
sbb
insl
popa
pop
jne
dec
cmc
lods
jle
inc
jno
jle
add
push
bnd
pop
adc
aaa
push
jae
lock
mov
shrl
das
mov
lea
dec
insb
xchg
lock
enter
jno
xchg
loope
stos
jne
mov
mov
popf
cmp
bound
xor
or
loope
cmp
shlb
mov
sbb
push
cmp
push
subl
or
outsw
xor
in
xor
and
lret
mov
dec
cs
mov
cmp
or
adc
icebp
mov
xor
fwait
lcall
and
into
mov
test
in
jns
mov
mov
jg
inc
lcall
mov
fs
and
sub
sbb
xor
mov
add
sbb
xor
scas
les
jecxz
cmp
mov
mov
dec
in
stos
insb
cwtl
outsl
inc
int
cmp
test
xor
inc
out
test
mov
cmp
mov
sbb
sub
jmp
in
repnz
test
popa
inc
sub
in
sbb
and
data16
cbtw
sarb
push
addr16
jb
pop
sbb
aad
xor
dec
mov
mov
loopne
mov
lret
mov
insb
sub
jle
sbb
das
cmp
mov
jo
stos
push
lea
xor
sub
sub
loop
mov
lahf
cmpsl
mov
faddp
xchg
cs
mov
test
cmp
pop
repz
push
dec
xor
adc
sub
jae
insl
xor
into
leave
cmp
cmp
add
jecxz
adcl
xor
mov
lahf
xchg
inc
sahf
test
mov
lcall
in
or
int3
mov
mov
adc
inc
pop
cmp
xchg
stos
mov
add
imul
aaa
dec
sub
insl
aad
pop
rolb
lds
lcall
xchg
dec
fstps
sbb
repnz
and
xchg
sbb
pop
loop
imul
sub
outsb
cltd
mov
jb
hlt
ljmp
repz
loope
sub
cltd
int
mov
loopne
inc
mov
sub
jno
mov
add
xor
test
jo
aaa
out
mov
pop
or
push
int
sbb
lret
pop
pop
push
bound
xor
inc
enter
mov
mov
dec
inc
addr16
fdivs
and
mov
enter
cmp
jne
and
js
outsl
pop
stos
test
dec
push
hlt
push
adc
popa
xchg
mov
push
data16
pop
out
fldcw
in
jmp
lock
notl
mov
stc
testl
jae
cmpsl
and
addr16
lret
lds
int
gs
xor
lcall
mov
fdivr
push
add
in
mov
divl
xchg
mov
sbb
lods
sar
arpl
mov
arpl
cld
mov
scas
div
pop
adc
sbb
cmp
and
aam
aam
adc
decb
aaa
popa
cmp
cli
fs
cmp
cs
scas
neg
lret
scas
rorb
popa
pop
mov
xor
sbbl
jge
fwait
push
jmp
outsl
sub
and
adc
or
cltd
inc
shlb
ja
notb
sbb
nop
add
inc
popf
insl
sti
mov
insb
inc
or
sub
cmp
xchg
dec
xchg
jnp
arpl
roll
in
dec
shlb
adc
xlat
and
sbb
inc
jg
mov
or
fdivs
xchg
aaa
subl
xchg
cmc
push
xor
adc
mov
mov
int
and
es
sub
andb
rol
jns
pop
or
cmp
add
cmp
rolb
fidivl
push
aas
stos
lods
xchg
inc
inc
inc
adc
xchg
out
mov
xchg
xor
xor
ljmp
pop
inc
rcll
mov
call
pop
inc
movsb
out
and
xchg
dec
xchg
inc
lods
xchg
adc
loope
test
pusha
dec
mov
dec
outsb
in
dec
sub
push
add
push
or
inc
das
adcl
gs
dec
stos
std
daa
ss
movsl
daa
add
jle
jnp
dec
dec
lret
out
cld
sub
xor
or
adc
pop
movsb
mov
aam
lret
fldenv
pusha
dec
pop
and
popf
test
dec
push
or
mov
mov
mov
mov
inc
or
lret
jne
jl
ror
ret
loopne
mov
mov
sbb
aam
pusha
fwait
mov
fs
and
and
data16
dec
icebp
fwait
in
sbb
adc
test
xorl
mov
mov
pop
mov
jo
loop
rcrb
fsubs
xor
dec
or
shl
repnz
lahf
sarl
cltd
lea
fnstcw
mov
in
fcmovne
sbb
jge
lods
repnz
jne
mov
ret
push
push
loopne
addl
add
sub
cli
push
aaa
lcall
das
pop
in
inc
mov
inc
das
fisubs
arpl
mov
cmpsl
push
stos
mov
mov
shrl
push
sub
jle
push
mov
inc
push
rcll
lea
jle
movsb
mov
loopne
lahf
xchg
jbe
cmpb
frstpm(287
mov
je
adc
test
adc
cs
out
xor
stos
inc
and
sarb
jl
inc
sbb
das
insl
cmc
mov
scas
add
cltd
xchg
dec
cmp
cld
jecxz
stc
mov
dec
mov
subl
repnz
popf
adc
ds
cmp
fisttpll
xor
dec
pop
pop
or
loopne
lret
out
sub
mov
dec
dec
daa
dec
sbb
push
xor
cld
cltd
data16
inc
inc
sub
push
lods
jnp
cmp
sbb
movsl
orl
pop
test
cmp
loopne
addl
sub
pop
mov
arpl
pop
sti
movsl
call
mov
push
dec
xchg
iret
imul
adc
push
inc
add
push
subb
dec
xchg
cmp
push
stc
imul
sbb
pop
add
xlat
xchg
adc
fs
pop
repz
in
mov
fnsave
pop
outsl
pop
gs
mov
in
mov
cmp
std
cltd
mov
cs
cmp
dec
lret
sub
and
jg
cmp
sbb
sub
lret
push
inc
imul
adcb
cmp
scas
sub
imul
ljmp
cwtl
call
in
mov
mov
out
je
jg
xor
sbb
xchg
ret
adc
and
or
add
enter
inc
xor
jmp
mov
loopne
stos
dec
mov
dec
nop
push
mov
xor
sub
into
pop
push
dec
adc
iret
cs
cmpsb
adc
repnz
or
imul
pusha
pop
push
sub
shrl
loope
insb
mov
imul
jle
fisubrl
mov
pop
sahf
flds
mov
jecxz
test
jns
ss
test
mov
jb
in
sbb
inc
in
std
test
jbe
pop
xchg
ja
dec
dec
jp
pop
stos
sub
stos
and
mov
aad
sub
sub
orb
dec
xchg
stos
mov
test
inc
pushf
pop
mov
pop
push
mov
cmp
sub
adcl
pop
inc
mov
mov
dec
cmp
out
rep
sub
popf
adc
adc
sub
push
pop
repz
add
lea
sub
gs
push
or
pop
sub
ret
cld
stos
inc
sar
sub
mov
lods
out
pop
xor
dec
cmp
cmp
into
shll
or
in
insl
pushf
iret
jmp
mov
jle
gs
xchg
aam
shlb
stc
add
jae
mov
xor
xor
test
out
adc
cmp
pop
into
push
ja
mov
or
add
cli
xchg
int3
add
cmp
jo
js
clc
adc
pusha
dec
pop
scas
cmp
push
mov
sti
inc
mov
mov
jae
mov
notb
push
addr16
iret
mov
fmulp
push
push
lods
das
lcall
xchg
stc
hlt
imul
push
pop
rcrl
pop
sub
sbbb
dec
std
aam
orb
jb
xchg
inc
daa
outsl
out
push
mov
mov
sbb
add
dec
aad
arpl
add
rorb
movsl
jge
je
insb
movsl
push
push
jg
xor
ss
cmp
pop
mov
out
fidivrs
add
std
sti
cmp
xor
mov
or
xor
add
insb
xor
xchg
xchg
je
popa
stos
xchg
insb
sub
and
or
movsl
jmp
dec
mov
jge
cmp
pop
bound
nop
ret
les
rcrl
inc
pop
or
out
xchg
or
imul
ficoms
pop
inc
jae
out
and
adc
xlat
dec
arpl
mov
push
push
leave
push
mov
dec
xchg
dec
push
xchg
popl
mov
or
leavew
xchg
ds
push
js
mov
ljmp
xchg
xchg
mov
call
pop
mov
or
cmp
aaa
andb
mov
sbb
add
lds
pop
cwtl
imul
push
hlt
cmp
xchg
outsb
std
repnz
mov
jecxz
arpl
sarl
cmp
and
fcmovb
sbb
in
mov
lock
jbe
lods
sti
xchg
xor
pop
arpl
sbb
sbb
adc
mov
pusha
jp
mov
dec
scas
pop
push
jle
push
testl
dec
add
les
jmp
ljmp
movsl
mov
imul
push
mov
lea
and
pop
xchg
repz
jb
icebp
sub
jecxz
fs
fisubs
aaa
fwait
mov
cmp
fucomip
and
push
mov
push
or
adc
pop
xchg
dec
and
jecxz
aas
pop
mov
lea
and
xor
sub
aad
pusha
cmp
push
mov
mov
inc
fists
in
outsb
jle
insl
cmp
insl
sbb
and
stc
pop
jae
cld
dec
movsl
fsts
test
mov
pop
lret
js
mov
cmp
and
ljmp
lea
bound
xchg
loope
mov
sub
shr
adc
pop
decb
sub
cmpl
insb
sub
mov
cli
jle
xchg
pop
jmp
xchg
test
outsb
mov
sbb
outsb
je
push
or
jge
dec
mov
cli
fcmovnb
mov
adc
lods
cmpsl
pop
adc
and
inc
out
sbb
dec
daa
lods
mov
popf
jg
dec
lsl
push
pop
ret
xchg
js
iret
mov
ds
adc
xlat
or
popa
inc
jns
add
push
mov
push
fldcw
aaa
cmc
sarb
sbb
sub
xchg
dec
push
mov
pop
inc
ds
add
pusha
loopne
sbb
jl
add
xchg
outsl
test
and
pop
gs
push
and
or
jl
mov
fs
mov
insb
inc
xor
les
cmp
aas
in
mov
and
add
fdivr
rcrl
pushf
jle
push
mov
fcomps
xor
neg
inc
in
je
pop
push
cmp
arpl
movsb
aam
sbb
xor
push
loopne
pop
inc
shrb
insl
dec
jl
pop
sti
xchg
into
dec
and
cmp
jbe
outsb
rol
xor
inc
dec
and
jne
pop
push
sbb
push
repz
and
cld
mov
or
xchg
mov
jns
mov
jle
and
dec
sub
mov
mov
pop
xorl
push
add
push
hlt
cmc
xor
dec
inc
add
inc
sbb
ljmp
out
movsb
jge
int
dec
test
das
lods
sub
add
push
cmpsb
sti
movsb
cmc
jno
inc
jle
in
cmc
mov
inc
mov
inc
stos
pop
xchg
mov
sbb
pop
xchg
jno
ficompl
lret
lret
in
loope
inc
pop
pop
pop
pop
cwtl
loop
add
mov
adc
loope
popf
mov
or
test
jo
xchg
mov
clc
push
add
or
or
loope
fisubrl
jmp
push
outsb
push
gs
cmp
add
aaa
data16
jge
dec
sbb
outsl
lds
dec
jnp
scas
inc
jbe
dec
jne,pn
popa
jle
decl
add
scas
popf
push
or
adc
cld
pop
jg
xor
jge
mov
int3
mov
sub
int3
mov
sbb
pop
cltd
xor
dec
add
lret
xor
mov
test
adc
or
insl
rcr
decb
add
mov
cmp
pusha
fxch
ljmp
mov
leave
xor
push
fwait
dec
adc
pop
in
popf
and
jns
xchg
cwtl
push
pop
mov
or
adc
sub
inc
lock
je
mov
jp,pt
stos
lods
and
pop
lea
pop
sub
loop
fwait
sbb
or
jle
or
scas
lods
mov
shll
lcall
movsb
mov
sbb
jbe
cwtl
sub
int3
inc
outsl
xor
dec
add
and
stos
les
jne
sahf
or
and
jbe
hlt
xchg
pop
jno
lahf
xor
or
pop
jnp
bound
and
cltd
jmp
inc
cltd
lea
out
pop
jl
arpl
cmpsb
sub
pop
mov
js
jg
popa
sti
xor
dec
mov
xlat
cmc
loopne
xor
sub
xchg
push
push
stos
ja
sahf
sub
mov
in
les
out
aad
pop
pushf
fidivs
lret
fsubs
and
dec
in
mov
imul
ja
push
jae
ss
es
sbb
mov
push
dec
push
jle
jo
push
jecxz
les
jns
icebp
xor
repnz
icebp
orl
loope
outsl
fs
je
test
jg
insb
jmp
out
arpl
mov
arpl
in
shlb
xchg
push
test
insl
push
cmp
inc
cmp
test
adc
ficomps
cli
imul
cmpsb
cli
lcall
mov
sbb
add
xor
popa
mov
add
jo
popa
mov
lods
and
push
and
lds
jp
lock
pop
inc
xor
cli
out
je
sbb
addr16
mov
fldl
sbb
mov
jmp
pop
lret
ss
sbbb
jl
test
mov
sbb
cmp
fs
in
mov
js
jge
push
add
into
cmp
test
cmc
mov
pop
push
adc
scas
aam
adcl
rcr
lea
call
jne
leave
xor
sarl
and
notb
sub
jno
mov
add
dec
int
mov
shrb
in
das
inc
add
push
jno
in
pop
push
call
outsb
flds
jne
jp
lods
jno
daa
popa
xlat
mov
loopne
mov
jge
mov
aas
inc
iret
iret
dec
out
fs
mov
mov
insl
fld
pop
cmp
lods
sub
push
cmp
cmp
je
add
dec
daa
xor
and
or
push
cmp
xor
jno
jg
sysenter
outsl
adc
lock
ret
sbb
pop
repnz
add
push
dec
in
popa
cltd
cli
jl
or
jno
pop
je
cmc
imul
clc
in
mov
repz
push
addr16
mov
fistl
popl
icebp
iret
jg
popa
outsl
int3
inc
sub
pop
stc
or
and
cmp
call
jbe
les
jns
fiaddl
inc
jb
cmc
sarl
mov
mov
cmpsb
stc
imul
sahf
mov
and
add
mov
sbb
jge
push
xor
movsb
clc
sahf
mov
fwait
mov
cmp
dec
fisubl
int
push
or
pop
mov
inc
cs
test
or
xchg
xor
mov
cli
iret
je
xor
inc
shll
push
mov
aad
sbb
sbb
test
xchg
jmp
and
addr16
sbb
mov
lds
mov
ret
repz
vpandn
mov
mov
ret
mov
scas
adc
sbb
add
sbb
cmc
fs
mov
ret
xor
mov
sbb
add
aaa
push
fldenv
icebp
lds
in
xchg
jmp
test
testb
pop
mov
mov
inc
mov
jns
test
repnz
cmp
fmuls
mov
or
xor
jecxz
ss
cmp
stos
addr16
repnz
fists
lds
hlt
dec
or
push
arpl
mov
gs
imul
in
xchg
push
sbb
iret
bound
xchg
bound
jl
daa
xchg
mov
cld
fistps
pop
pop
push
mov
adc
popa
sbb
mov
daa
adc
push
ja
jae
loope
mov
mov
pop
orb
sbb
mov
shrl
cmp
call
lods
or
or
subb
pop
add
testb
inc
mov
xor
add
hlt
sub
push
in
or
mov
scas
fwait
adc
fisttps
mov
ret
push
or
les
push
xchg
insl
or
bound
sub
mov
jl
adc
shll
sbb
test
or
dec
mov
or
int3
inc
jb
sbb
sub
bound
insl
incb
xchg
add
es
xchg
jecxz
add
aad
and
enter
loope
jge
cltd
dec
xor
fstpl
or
sbb
repz
fdivrs
pop
fdivrl
nop
jecxz
imul
and
xchg
sbb
mov
iret
shlb
cmc
dec
vorpd
jmp
mov
mov
aas
mov
out
cmc
jecxz
movsb
dec
cmp
jmp
sbb
lea
out
aaa
add
int
ret
ret
sti
in
les
repnz
sarb
out
cli
rcrl
adc
and
in
sbb
sub
mov
and
js
sbb
mov
dec
inc
inc
mov
repnz
pop
outsl
pop
pop
cld
dec
push
bound
pop
push
les
mov
sub
jae
ror
xor
dec
cmp
aad
mov
or
popa
out
fbld
add
pop
xor
fstpl
pop
cmp
jge
pop
rol
pop
or
sub
add
xchg
lods
sbb
jns
mov
jle
push
repz
pushf
cltd
sub
xchg
or
sbb
pushf
aaa
sbb
test
pop
scas
sbb
inc
pop
ds
test
or
lret
fildl
and
ror
loope
ret
add
cmc
add
xchg
cli
xor
stc
cmpsl
sub
mov
dec
cmc
ds
dec
lret
scas
js
shll
or
sub
add
jecxz
fsubrs
and
mov
jp
push
in
aam
pushl
and
loope
add
fcoml
jno
in
or
xor
pop
lock
mov
int3
insl
jbe
inc
int
mov
dec
inc
shl
je
pop
ret
icebp
pop
lods
test
push
xorb
mov
repnz
and
mov
outsb
add
jae
fwait
dec
ficompl
loopne
cmp
add
or
mov
push
bnd
fnstsw
notl
jb
popa
adc
or
mov
fsincos
sub
aad
pop
ficomps
leave
xchg
sub
leave
inc
jno
loopne
fnstsw
scas
xor
loopne
pop
std
mov
inc
push
jbe
notl
xor
jno
or
shl
mov
cmp
mov
movsb
lods
testl
stc
repnz
sub
scas
cmp
stos
mov
cmp
int3
add
cmp
cmpsl
pop
enter
arpl
rcll
lock
cltd
cli
fsubrp
popf
add
lods
push
push
imul
test
inc
imul
ljmp
ljmp
in
ljmp
cmp
mov
sbb
adc
mov
jno
rcr
and
xchg
adc
in
sbb
mov
xor
std
aaa
cmp
or
popf
sub
push
flds
popa
dec
hlt
out
mov
push
aam
movsb
loope
out
mov
pop
inc
enter
clc
call
imul
mov
fisubl
adc
clc
sbbb
outsb
shrb
pop
test
cld
ficomps
pusha
xor
imulb
pop
jl
jnp
adc
dec
aad
jecxz
push
ror
rcrb
mov
mov
scas
stos
addb
jmp
fwait
outsb
cltd
push
popa
inc
lahf
mull
xchg
shlb
sbb
fyl2xp1
ljmp
jle
xorb
fbld
cwtl
xor
pop
mov
push
adc
sub
mov
rorb
int3
pop
rcrl
sub
sbb
into
push
pop
dec
jb
mov
pop
push
sarl
or
adc
into
cli
leave
into
fwait
lock
push
mov
aaa
out
dec
and
xchg
ja
movsb
das
mov
dec
pop
int
xor
mov
jmp
and
rclb
call
dec
outsb
sar
dec
sub
iret
scas
xor
sbb
push
push
and
test
subb
iret
mov
xor
mov
xchg
fsubr
mov
pop
mov
dec
push
outsl
xor
mov
es
scas
pop
or
movsb
mov
and
xor
xor
sbb
xchg
push
or
inc
mov
iret
out
xchg
pusha
clc
lock
mov
cltd
add
xchg
mov
bound
sbb
outsl
repnz
lock
cmp
cmp
aad
je
and
stos
pusha
pop
add
ja
jp
mov
imul
cmp
loopne
test
imul
lret
gs
xor
sbb
dec
pop
call
push
lret
scas
push
into
push
cld
adc
rcl
ficoml
push
push
loop
sarb
dec
popa
sub
add
pop
cmc
lods
or
jae
cmp
dec
adc
jne
pop
xchg
inc
sarl
aaa
xor
xchg
filds
mov
dec
pushf
cwtl
in
movsl
lock
dec
mov
stos
imul
out
movsb
mov
sbb
scas
int
icebp
cmpl
shrb
dec
arpl
loopne
std
rcrb
cli
in
inc
aad
int
sub
and
inc
ss
cmp
jo,pn
inc
and
mov
mov
aam
dec
push
fdivl
into
jle
fnstsw
rolb
mov
icebp
dec
push
mov
push
les
test
cmp
jp
repnz
xor
push
sub
loop
cmpsb
data16
jecxz
or
add
inc
jb
mov
xchg
insb
xchg
sbb
or
fs
and
pop
lahf
fadds
imul
sub
ja
jge
orl
xor
sbb
out
ret
pop
xor
pop
sbb
out
test
lods
jae
movsb
sub
mov
mov
fidivs
out
shlb
add
dec
clc
pop
cltd
jb
sbb
icebp
mov
mov
neg
and
inc
lret
scas
imul
insb
dec
mov
dec
mov
mov
xor
adc
scas
pop
cmc
xor
popa
cmp
inc
cmp
pop
mov
cli
ficoml
push
fnsave
mov
les
lea
pop
push
fnstenv
pop
mov
cltd
lret
es
add
xchg
xlat
adc
test
jle
dec
leave
cld
movsb
loop
inc
iret
mov
inc
lret
and
xchg
sbb
js
aas
ret
cmp
in
scas
sarl
jp
sarb
nop
cmp
cmp
jb
in
dec
sub
add
sbb
pusha
dec
and
enter
nop
in
icebp
mov
stos
push
xlat
aas
adc
push
cmc
pop
mov
lds
mov
data16
dec
mov
insl
aad
test
xor
sbb
cmp
int
sti
inc
iret
gs
out
cmp
out
cltd
ljmp
jle
cmp
jae
lds
pop
add
bound
into
or
lahf
fidivl
je
in
cmpsl
lahf
mov
imul
iret
push
jecxz
out
loop
dec
lock
or
add
movsb
sub
hlt
imul
outsb
popa
test
outsb
sbb
sub
inc
or
inc
xchg
push
in
dec
cmpsb
xor
sub
dec
fnclex
mov
loop
jmp
mov
add
ljmp
shlb
xchg
insb
sbb
xchg
jne
fwait
dec
cmp
aad
pop
sub
scas
andb
pushf
das
xor
jp
les
cmp
mov
icebp
ss
push
scas
sub
fcomp
dec
ret
pop
movsb
push
or
pop
fwait
loope
inc
xchg
sbb
into
and
mov
mov
into
cmpb
movsl
jge
cs
sarl
cmp
mov
add
scas
jno
mov
ds
cmc
push
mov
repz
inc
ret
shlb
pop
push
mov
mov
ds
hlt
in
loopne
or
mov
sub
cwtl
test
add
cwtl
lcall
cmp
jge
fcmovb
lds
sarl
push
enter
call
lea
scas
mov
jbe
inc
mov
inc
stc
mov
test
out
mov
mov
ret
dec
cld
jg
cmp
lcall
in
xor
loope
test
inc
addb
pushf
xor
mov
loopne
mov
sbb
test
add
mov
push
aas
loop
out
sub
add
dec
mov
and
sbb
sub
jns
rol
fimull
dec
out
dec
xchg
sbb
pop
pop
scas
pop
ja,pn
jl
and
in
or
mov
int3
xor
xchg
fnstcw
les
js
sub
or
or
push
cltd
js
xchg
mov
sub
testb
arpl
dec
push
inc
rcll
adc
ss
push
sub
or
pop
adc
imul
push
out
pushf
dec
mov
mov
and
stos
ljmp
cmpsb
pop
and
imul
xchg
push
xchg
mov
dec
nop
fucomi
int
mov
rorb
je
sahf
arpl
ljmp
pusha
jle
movsb
mov
sahf
mov
test
ss
das
adc
imul
and
test
pop
mov
lock
add
xchg
pop
sbb
fisttps
enter
cmp
and
mov
popa
add
mov
call
mov
shlb
mov
mov
sub
sbb
in
inc
xor
mov
jle
sbb
loopne
cmp
daa
or
inc
mov
mov
pushf
sahf
stos
mov
sub
fsubs
nop
ljmpw
push
adc
je
out
dec
sub
xchg
scas
ret
shl
js
cmp
inc
test
mov
enter
rorb
sub
jge
in
ja
mov
inc
in
push
dec
inc
jmp
jo
push
push
lret
call
shll
xchg
pop
addr16
push
pop
mov
inc
stc
xor
fcmovb
adc
pop
xor
fwait
jl
jo
ror
inc
sub
repnz
mov
sbb
fimull
fimull
pusha
in
push
out
sbb
lock
sti
test
lds
iret
sbb
push
mov
xor
std
or
inc
outsb
fldcw
push
dec
mov
ja
test
and
push
add
add
xor
mov
mov
and
push
in
mov
xor
clc
mov
or
jo
sbbb
inc
ljmp
addr16
outsb
xchg
xor
cltd
jno
idivb
in
mov
pop
inc
rolb
pop
mov
cmp
fldcw
movsb
jecxz
lods
les
out
jl
das
rol
loopne
xchg
adc
pop
aaa
sbb
aaa
addr16
scas
inc
mov
xlat
andb
add
jecxz
pop
sbb
push
lcall
lods
test
inc
outsb
mov
call
das
mov
loopne
pop
mov
ret
dec
pop
gs
sub
adc
addl
cmp
es
sbb
add
iret
fcomps
mov
sarl
xor
cmovl
jmp
ret
lcall
flds
push
or
repz
jecxz
and
and
bound
test
jbe
stos
add
das
mov
add
enter
aaa
loope
xchg
cltd
dec
shlb
add
adc
lods
push
mov
stc
ffree
rorb
or
js
add
pop
scas
nop
out
cs
pop
imul
call
lahf
movsb
ja
fs
ja
add
cwtl
mov
cmc
aad
jbe
xor
pop
call
incl
call
scas
mov
idivl
cmc
adc
pop
push
std
leave
loop
and
xor
dec
mov
jbe
and
xchg
dec
pop
daa
orb
dec
fists
jecxz,pt
lods
outsl
imul
mov
add
inc
ljmp
int3
adc
sub
adc
cwtl
push
xchg
out
loope
xor
adc
adc
je
sbb
xchg
xchg
pushf
push
sahf
inc
jae
xchg
stos
lods
push
addr16
stos
sub
dec
clc
jge
js
pop
orl
mov
jno
ret
mov
ror
in
aam
adc
xchg
xchg
pop
push
mov
scas
lods
xchg
pop
sub
adc
cmp
cmpsb
pushf
cmp
fimull
sub
cs
cmp
cwtl
xchg
push
mov
rorb
xlat
shrb
cld
mov
insb
xchg
shlb
in
mov
sbb
sti
fstpl
int
push
and
and
inc
loop
add
jb
lea
andb
push
into
rep
xchg
sbb
xor
adc
inc
mov
mov
loopne
adc
add
hlt
hlt
test
dec
sub
jno
xor
rorb
popf
pop
inc
addr16
adc
cmpsb
ds
pop
adc
sub
ljmp
loop
in
jb
mov
lods
jle
sbb
xchg
int3
add
and
jl
clc
push
fists
mov
sub
xchg
lods
dec
mov
cwtl
dec
sbbb
dec
xor
and
jb
add
mov
ds
mov
pop
pushl
pop
outsb
cltd
lcall
push
push
repnz
insl
ss
cmp
xor
test
sti
add
fiadds
mov
pop
push
pop
in
inc
sbb
sbb
or
outsb
stos
sub
enter
das
imul
cld
fs
dec
cmp
pop
insl
sarb
syscall
jle
adc
out
pop
xor
lcall
push
call
test
xchg
and
ficompl
dec
mov
sub
repnz
mov
pop
imul
arpl
push
push
or
frstor
xchg
and
clc
and
inc
xchg
and
push
cs
lcall
mov
or
mov
xor
iret
clc
fmuls
cmp
adc
mov
lea
daa
insl
imulb
aam
lret
mov
ds
jne
loope
xchg
sub
pop
cmp
out
adc
xchg
mov
shlb
mov
jnp
push
add
scas
stos
iret
arpl
sub
gs
lcall
out
xchg
shlb
dec
nop
scas
push
dec
mov
std
and
rolb
inc
cs
fs
sbb
sahf
cli
jns
lcall
pushf
stc
fmul
jle
cmp
add
jmp
sub
pop
shrb
inc
pop
xchg
je
inc
inc
push
mov
jle
insb
jge
mov
cmpsb
pop
sbb
adc
enter
js
xchg
cmovp
xor
mov
enter
pusha
jle
push
pop
mov
icebp
xor
ficompl
fcompl
mov
subb
pop
mov
popa
push
mov
add
jge
popf
cmp
fwait
adc
leave
mov
jle
pop
movsb
xchg
ret
add
je
push
rolb
or
dec
fsubrl
cmpl
mov
add
mov
pop
js
addr16
mov
or
xor
xor
test
out
fisttpll
add
aad
outsb
dec
test
cs
inc
imul
daa
fisubs
pop
push
lcall
nop
aas
ret
lock
sub
test
cmp
push
cpuid
mov
xchg
xlat
sbb
mov
and
mov
lods
adc
mov
mov
cld
in
test
mov
rcll
xor
adc
and
sub
pop
in
mov
xor
outsl
dec
jne
int3
outsl
push
mov
mov
jge
cmp
mov
daa
jp
mov
xlat
xor
push
sbb
daa
lds
xor
xor
jecxz
inc
call
cmpsl
mov
outsb
jne
testb
mov
pop
and
dec
imul
xchg
sti
popa
lods
mov
fidivs
sbb
mov
push
mov
xchg
push
inc
xor
adc
pop
add
dec
fwait
xchg
test
sub
sub
push
fiadds
test
and
fildll
cmpsl
pop
cmp
iret
jg
and
aam
pop
mov
mov
or
and
fcoms
lods
or
pop
cmp
xor
enter
in
aaa
lret
adc
add
cmpsl
pop
aas
fwait
mov
into
fs
in
ds
cmp
cs
push
push
data16
fadd
out
xchg
cmp
insl
mov
shll
enter
mov
addb
outsl
add
jp
mov
jecxz
repz
test
test
xchg
les
je
mov
xchg
mov
jp
call
dec
pop
ljmp
jle
cmpsb
mov
es
outsl
pop
jns
xor
add
popa
mov
mov
add
jp
hlt
fsubl
in
lret
xchg
jecxz
out
sarl
pusha
ss
cmp
sbb
dec
daa
ss
movsb
mov
out
out
ja
dec
mov
in
cmp
clc
push
into
xlat
inc
jo
mov
mov
sbb
mov
and
inc
fdiv
push
fbld
hlt
and
push
lret
hlt
inc
inc
jp
setp
fs
testb
cmpb
test
dec
push
or
imul
test
pop
inc
les
cmp
int
xor
pop
and
pushf
and
outsl
jg
insl
outsl
push
jle
and
daa
or
cli
lcall
and
mov
push
rol
fs
repz
fildll
push
lods
sahf
pop
jl
lret
or
sti
sbb
sahf
add
out
mov
xchg
pop
ja
lods
adc
mov
ror
insb
sbb
mov
pushf
jno
adc
jo
jl
insb
out
mov
mov
shrl
outsl
subb
xchg
inc
xor
dec
test
sahf
jno
test
or
sub
pushl
push
sub
repnz
push
lret
rcrl
add
sub
and
push
movsl
cltd
clc
sub
shrl
sub
adc
addr16
fnstsw
cli
insb
inc
icebp
cld
xchg
mov
ja
in
shrb
or
jno
xchg
call
test
ja
bound
inc
je
mov
pop
sub
xchg
stos
je
test
loop
mov
loope
lds
popa
fimull
loope
sub
outsb
fcoms
sahf
nop
out
push
ds
test
into
movsb
scas
insb
lock
pop
repz
leave
xor
cwtl
cmp
push
rolb
mov
popf
fwait
xchg
in
cltd
or
adc
pop
pop
fists
mov
repnz
xor
mov
sub
cmpsb
cmp
nop
xlat
in
adc
mov
fpatan
rcll
sub
adc
sbb
test
xlat
scas
jns
sbb
jmp
dec
adc
add
rolb
arpl
inc
add
das
pop
fwait
clc
outsb
daa
pop
sub
jne
xchg
gs
xor
addr16
cmpsl
stos
mov
iret
inc
imul
adc
or
pusha
xchg
jbe
mov
int
lock
test
jecxz
inc
jle
dec
cld
leave
out
add
mov
mov
jp
imull
pop
fnsave
fcmovnb
add
mov
lods
inc
jae
clc
sar
inc
incl
cld
insb
or
aaa
or
cltd
test
push
dec
dec
std
jo
ret
adc
jns
cli
add
mov
and
cmp
jb
or
daa
cmp
repz
xchg
cltd
mov
cmpl
bnd
mov
dec
sahf
loopne
test
test
dec
cwtl
lock
sub
inc
cmp
rclb
pop
aad
pushl
mov
dec
add
xchg
int3
inc
lea
das
cmc
xor
jg
sub
loopne
dec
shlb
cmp
fucomi
in
mull
cmp
popl
idiv
and
pop
stos
mov
je
add
subb
xchg
or
xchg
sub
pop
push
sbb
mov
fcmovnu
jo
mov
fidivl
xchg
jo
add
lret
push
ret
fidivrs
imulb
fiaddl
pop
ds
and
xchg
jno
icebp
xor
fsubl
and
cwtl
sarl
lret
dec
inc
stc
jge
into
xor
fisttpll
dec
daa
dec
add
pop
cmp
int
lea
or
or
int3
mov
roll
pop
pop
out
loopne
out
in
push
clc
pop
loope
mov
aas
push
xor
mov
rcl
pop
xor
rol
sbb
outsb
pop
cmp
test
mov
scas
movsl
out
stos
int3
mov
cmp
mov
les
aam
sbb
fnstenv
mov
cmp
fists
arpl
gs
and
scas
pop
in
pusha
pop
push
jg
popa
or
push
daa
ret
xchg
pop
andl
in
aaa
icebp
pop
cltd
insl
repz
adc
fstl
add
out
cmpsl
loopne
stos
call
repz
pop
insb
sti
sarl
dec
addl
mov
jl
dec
stos
fs
and
inc
sbb
mov
mov
sbb
sub
or
stos
xchg
outsb
fisttpl
shrl
sub
jmp
jb
mull
add
and
sbbl
or
push
lret
mov
mov
outsb
fldcw
mov
popa
dec
xchg
push
fcmove
insl
mov
add
mov
cmp
nop
add
shll
fstps
jae
aaa
stos
inc
repnz
lock
add
std
insb
loope
jmp
adc
cwtl
pop
cwtl
test
mov
outsl
cmp
pop
pop
and
add
push
imul
mov
pusha
and
cmpb
roll
dec
arpl
addl
lret
push
es
loopne
pop
rol
pop
stos
cwtl
and
mov
jl
shll
pop
push
push
cmpsl
jns
inc
xlat
mov
stc
fstpl
jns
sbb
sbb
sub
adc
xor
pushf
jge
shlb
jno
xor
dec
test
ficompl
mov
sub
or
repnz
fistpll
bound
lods
clts
cltd
aas
and
xchg
adc
pop
mov
incl
into
pushf
lock
or
lds
or
loop
pop
in
push
or
sbb
call
aad
push
xor
inc
cmpl
lret
xchg
shlb
dec
faddl
xor
xchg
xor
mov
dec
int3
xor
daa
mov
push
lret
into
cmpsl
jo
outsb
int3
hlt
repz
mov
aaa
adc
aad
sbb
inc
cmp
xor
jg
loope
jns
add
inc
std
loopne
pop
xchg
mov
loopne
add
stos
fsubrs
mov
xor
mov
inc
mov
cmpsb
lds
cs
and
in
les
daa
mov
test
fmul
ret
sub
arpl
xor
push
or
arpl
into
pop
inc
movsl
mov
push
sbb
push
dec
pop
clc
stc
and
mov
lock
mov
mov
push
rorl
mov
push
mov
sub
in
fisttpl
push
sahf
fnstcw
pop
mov
sahf
dec
adc
nop
push
jle
test
pop
movsb
and
jle
mov
add
cmp
lds
enter
and
lahf
mov
jae
rclb
lcall
fldenv
sti
insl
out
cwtl
aaa
cmpb
jmp
loope
int3
cmp
jl
ret
lods
lea
sbb
pop
xchg
addl
mov
inc
fcoms
sub
mov
or
adc
mov
int3
test
in
int
outsl
jecxz
loop
inc
push
pop
jo
jb
dec
xchg
pop
dec
aaa
ss
xor
pop
inc
jmp
mov
arpl
daa
sbb
sub
jbe
and
test
xchg
mov
loope
push
out
xchg
pop
lret
hlt
cmp
mov
mov
mov
sub
mov
push
loopne
fsubl
add
pop
pop
sub
stos
or
clc
int3
mov
shlb
movsl
sub
dec
into
pop
mov
pusha
xor
push
cs
xor
in
adc
xor
insl
mov
xlat
test
cwtl
lods
or
ss
jp
mov
lea
add
xlat
les
xchg
add
repz
add
out
or
xchg
inc
push
mov
enter
frstor
std
inc
xor
sub
out
lea
pop
inc
push
cmc
ror
push
or
xor
or
clc
shrb
fstl
add
lods
xchg
fists
push
lret
and
gs
js
add
fsubrp
mov
imul
inc
popa
bound
imul
sti
insl
jbe
addr16
int
aas
sub
loope
sarb
or
enter
mov
xor
scas
add
mov
cld
gs
mov
cmp
fcomp
pop
and
push
fldt
xchg
orb
sbbb
xorb
mov
sub
jecxz
sbb
lock
fisubrl
loope
xchg
push
call
repnz
sti
lahf
fisttpll
mov
or
cmp
movsb
sbb
xor
add
add
mov
out
or
dec
xor
andl
jnp
popf
fcoms
test
lods
sub
add
adcl
int
adc
jg
lret
mul
pop
pop
aad
sahf
dec
inc
fucomp
adc
and
add
aaa
call
sbb
sub
xchg
cmp
mov
sbb
xor
dec
push
inc
sarb
sbb
cs
imul
cmp
mov
mov
out
or
movsb
fwait
mov
test
fwait
test
popf
andb
dec
shrl
ffreep
mov
cmpsl
rcll
cmpsb
mov
bound
pop
pusha
scas
mov
push
cld
cmpsb
cld
push
mov
fsubr
popa
xchg
mov
xchg
dec
lods
push
jp
and
dec
push
push
or
mov
pusha
pop
daa
outsb
cli
fldt
inc
sub
cli
or
test
dec
jbe
mov
es
pop
shll
pusha
jge
cmp
ret
lcall
sahf
fmull
push
cmp
sbb
aas
lret
xchg
fisubl
jns
dec
sbb
add
cmp
stos
scas
sub
lahf
stc
ss
pop
xor
scas
push
mov
pop
mov
lock
gs
sti
repnz
mov
mov
pop
sbb
adc
lret
pop
in
int
ss
push
push
in
scas
cmp
jge
imul
pushw
dec
adc
into
adc
add
stc
addl
or
loop
jecxz
jmp
xchg
dec
mov
mov
subb
add
lods
and
or
cmpsl
push
out
rclb
or
pop
lahf
fstpl
cmp
ficoms
sub
adc
sub
stos
xlat
outsl
sti
xor
std
shrb
fistps
cld
ret
ds
or
xchg
sub
mov
adc
pusha
xlat
xor
xchg
pop
mov
cmp
dec
jae
aad
mov
stac
jecxz
test
dec
adc
and
mov
add
rcr
ljmp
push
icebp
in
xchg
cmpsb
shl
daa
dec
cld
sbb
aas
mov
sbb
cmp
lret
jmp
shrb
mov
inc
jg
jae
mov
fstps
stos
pop
mov
insb
mov
or
add
jns
insl
adc
dec
cmp
stos
pop
lret
cmpb
pop
push
and
or
push
rorl
xchg
lahf
hlt
movsb
mov
sub
jb
ficoml
and
cmpsb
std
popa
stos
scas
mov
mov
imul
fstp
fcomps
mov
pop
inc
xor
sub
cmc
push
mov
pusha
lods
sbb
cmc
xor
stos
imul
mov
sub
rcl
xor
jp
cmp
mov
cmp
xor
ret
repz
cli
or
out
cwtl
and
in
negb
lods
add
jle
adc
nop
pop
aaa
cltd
fwait
xor
lods
push
and
pop
xor
popa
test
rorl
mov
out
push
cmp
cmp
bound
and
cmp
das
jg
int3
inc
mov
into
xor
mov
and
mov
xor
lods
loopne
arpl
mov
add
shll
sub
pusha
lds
jl
sub
sub
neg
imul
in
inc
mov
popa
or
pop
dec
pop
incb
mov
aam
inc
cmpsb
or
fiadds
lods
push
scas
mov
mov
cmp
adc
pop
icebp
fbld
in
dec
cmp
mov
popf
shll
xlat
xor
push
mov
pusha
or
das
dec
orl
cmp
stc
test
gs
jb
mov
repnz
scas
mov
lret
lods
dec
pop
js
lods
shlb
in
mov
xlat
stc
filds
sbb
push
mov
cmp
dec
pop
dec
sarl
or
ret
enter
fsubl
std
adc
push
mov
jle
mov
fidivs
movsb
dec
sbbb
stc
aas
pop
stos
cmp
dec
cmp
rorl
pusha
lahf
int
outsb
mov
popf
jmp
dec
pop
scas
leave
fs
int
push
nop
ljmp
dec
add
aaa
adc
mov
dec
sti
pop
adcb
enter
xchg
pop
stos
lret
into
in
or
inc
je
push
jns
add
sarl
sub
cmpsl
push
rclb
dec
inc
hlt
insb
add
xchg
lods
xor
sti
push
mov
enter
mov
es
insb
cmp
aas
xorb
fwait
ja
rorl
push
test
imul
test
mov
scas
pop
icebp
xchg
rcrb
adc
arpl
sahf
push
aad
adc
arpl
test
ss
mov
adc
jb
xor
les
push
inc
mov
dec
popf
sub
push
mov
sbb
fidivl
jmp
movsb
lods
mov
push
and
mov
and
mov
loope
push
pushf
mov
sbb
sbb
pop
push
mov
xchg
push
fcmovb
mov
dec
and
lea
lods
insb
sbb
jns
fxch
dec
jae
mov
inc
fsts
stc
pusha
xlat
icebp
into
jns
enter
rcll
and
out
add
fisubrl
add
pop
sbb
hlt
sub
cmp
stos
mov
dec
aaa
adc
imul
push
and
xor
scas
test
add
mov
sbb
incb
lea
inc
add
sub
and
dec
xlat
mov
sbb
xchg
inc
cld
or
jns
adc
cmpsb
cmp
add
mov
es
fsubs
jecxz
push
push
addr16
or
jmp
sbb
mov
or
sahf
inc
aas
or
and
inc
push
loop
xchg
ss
aam
mov
and
sub
sti
push
clc
dec
jmp
xor
adc
or
rolb
mov
aaa
jno
xor
fdivrs
cmp
and
daa
ljmp
nop
ffree
testb
pop
fcoms
sarl
iret
adc
fwait
push
pop
sbb
add
sti
lock
arpl
jbe
and
out
jne
rorl
fsubrs
daa
popa
pmullw
cli
cli
jae
or
or
jle
inc
adc
cld
orl
movsb
push
cmpsb
inc
xor
push
jle
es
int
push
int
int
shlb
test
push
in
sbb
pushf
mov
ret
int3
fisubs
pusha
lahf
mov
jle
rcrl
sub
add
loop
jne
mov
jne
icebp
repz
sub
or
xchg
repnz
jmp
negl
test
mov
ljmp
jle
inc
in
movsb
insb
aaa
filds
and
mov
mov
inc
jae
mov
mov
rcrb
orl
fwait
gs
mov
sbb
add
addr16
mov
jecxz
pop
adc
stos
dec
add
push
fisubs
pop
jb
les
push
sti
mov
fnsave
ljmp
sbb
pop
xor
shlb
sbb
or
fwait
push
or
loopne
cs
stos
mov
pop
jle
aam
pushf
je
pop
mov
xor
dec
imul
mov
or
ret
jmp
sbb
jmp
push
stos
xchg
fisubl
adc
push
fildl
outsb
int
ror
push
dec
or
pop
jo
mov
inc
mov
repnz
lock
mov
jmp
xor
add
and
loopne
dec
popf
inc
xlat
js
ljmp
push
outsl
aaa
out
shl
mov
aam
sbb
inc
mov
or
imul
jb
loopne
push
ja
stos
stc
pop
insl
enter
in
dec
pop
push
xor
sbb
or
fimull
inc
arpl
mull
clc
adc
xchg
mov
or
repz
push
shlb
mov
ss
notl
jp
mov
mov
in
inc
push
mov
dec
mov
push
jp
out
inc
mov
test
xor
sbb
popa
push
gs
mov
nop
sbb
mov
add
jmp
pop
mov
out
push
jno
arpl
sbb
gs
xchg
cmpsb
sbb
push
aaa
popf
cmp
cmp
or
and
in
or
or
iret
nop
inc
jno
rcll
sub
and
test
pop
mov
dec
mov
pop
inc
hlt
and
lcall
mov
imul
mov
lods
loopne
repz
popa
sar
call
jae
mov
repnz
popf
lret
or
xchg
sti
xor
lret
cld
mov
pop
jmp
xor
iret
iret
xchg
lds
vpunpckhbw
ja
mov
addr16
inc
cmp
mov
rorb
ret
stc
cmp
insb
aam
andb
inc
enter
scas
xchg
xlat
lret
fsubs
jp
xlat
mov
enter
or
push
jo
push
addl
ljmp
js
adc
and
inc
mov
adc
pop
mov
pop
sbb
movsb
test
adc
xchg
fdivrs
jne
mov
and
cmp
sbb
mov
pop
push
dec
sbb
cwtl
adc
dec
testb
fstpt
xor
push
mov
in
mov
outsb
mov
mov
push
fdivrp
mov
test
dec
adc
sbb
pop
fisttpl
cs
rcrl
js
push
mov
mov
mov
leave
push
jle
pop
adc
pop
pop
and
and
adc
dec
cmp
std
pusha
mov
into
icebp
lds
sbb
flds
add
hlt
cmp
test
xchg
mov
sub
or
addr16
mov
sub
cmpsl
imul
pop
push
cwtl
pop
inc
or
mov
test
inc
push
out
cmp
inc
cli
repnz
mov
idivb
pop
aaa
and
jle
adc
les
push
xor
push
shll
mov
sub
lahf
mov
adc
xor
lods
std
cmp
jae
xor
and
mov
pop
dec
pop
xchg
test
leave
xor
aad
scas
sbb
xor
aaa
push
inc
mov
shl
xchg
cli
xor
add
dec
adc
cmpsl
into
cwtl
xchg
fisubs
int
ror
call
fcoms
inc
addr16
inc
inc
movsl
pusha
mov
lock
push
das
in
repz
aas
stos
lock
and
mov
inc
mov
and
cmp
aas
cli
dec
inc
lcall
fdivrs
pushf
les
mov
shll
out
frstor
sub
orb
fnsetpm(287
insl
adc
sub
cmp
sub
sub
aam
dec
pop
enter
stos
xchg
push
pop
or
or
enter
movsb
mov
ret
cmp
aad
aam
pop
xor
pop
movsb
in
aaa
or
mov
xlat
ds
cs
or
inc
or
inc
ret
push
aad
pop
jmp
cld
mov
pop
sub
or
mov
cmp
adc
dec
sub
cmpsb
sbb
mulb
loope
in
loope
adc
repnz
out
xchg
cwtl
or
add
repz
and
loop
push
dec
xor
mov
sbbl
repz
xor
xchg
adc
pushl
inc
and
loope
xor
jle
mov
mov
adc
jne
inc
and
and
jnp
lods
push
test
xor
sbb
pop
jle
enter
pop
or
adc
ret
test
inc
lods
inc
push
sub
es
mov
sub
push
fdivrl
aas
dec
call
pusha
arpl
iret
inc
stc
cmc
mov
aas
xor
fcmovbe
fs
pop
xor
jle
subb
outsb
in
les
cmp
push
pop
pusha
mov
ljmp
cmp
jno
stc
xchg
loope
push
sub
clc
pop
stc
push
push
enter
out
and
ret
cmp
arpl
fcmovne
pop
lret
adcb
push
jo
inc
in
ffreep
scas
sbb
mov
into
pop
inc
cltd
mov
push
dec
loop
lock
and
adc
roll
fisubl
out
and
enter
shrb
push
mov
hlt
xor
fcmovbe
pop
icebp
aam
lds
inc
pop
mov
lods
jge,pt
xchg
cs
scas
push
cmp
cmp
sub
xor
xchg
sti
xchg
cmp
addl
testl
adc
dec
fdivs
cmp
sub
leave
fnsave
push
push
aas
or
sti
mov
jge
and
popa
pop
cmp
lret
mov
stc
jae
cmpsl
xchg
ljmp
push
xchg
pop
xchg
ljmp
mov
inc
ret
es
or
adc
jl
add
out
cmp
lret
mov
sbb
jns
dec
sbb
jmp
sti
push
pop
popf
hlt
add
hlt
lea
and
inc
lret
fldt
mov
fnstcw
jns
push
push
xor
cmp
push
mov
or
imul
mov
mov
dec
push
xor
cmp
dec
inc
pop
push
inc
sbb
jmp
je
cmpsl
icebp
aad
sub
xor
mov
jg
push
xchg
mov
insl
inc
mov
aaa
mov
inc
sbb
enter
cli
and
nop
es
cli
imul
cmc
scas
fsubs
out
adc
push
sbb
outsl
popa
icebp
push
push
and
mov
leave
cmp
loop
dec
test
cmpsb
out
xchg
inc
cmp
xor
repnz
shlb
lods
repnz
mov
cli
pop
mov
mov
lea
mov
and
sbb
sahf
mov
in
daa
shlb
sbb
push
ljmp
cmp
repz
gs
jg
lods
sub
pop
push
aas
sti
push
fsubr
and
and
lret
in
or
sub
or
mov
movsb
fnstcw
fsts
aas
mov
and
and
mov
fildl
jo
fists
les
loope
fcmovb
sub
scas
ja
cmp
and
lea
loopne
xor
inc
adc
mov
mov
fwait
push
fldenv
lods
rcrb
cmpsl
cmp
icebp
cld
pop
and
dec
out
es
mov
xchg
and
cwtl
lahf
out
or
cmp
push
add
fstp
and
outsb
pop
push
cs
jno
jle
xchg
mov
mov
cs
stc
mov
add
push
jbe
xchg
and
sahf
sub
mov
inc
out
rorl
movsb
sub
mov
adc
add
sub
js
or
adc
jge
popa
mov
inc
mov
insb
movsl
loopne
mov
enter
push
and
cmpb
pusha
bound
leave
js
test
mov
dec
push
adc
and
xchg
fwait
pop
icebp
das
mov
scas
inc
scas
pop
cmpsl
inc
int3
sub
outsb
and
lahf
adc
push
or
xchg
subl
hlt
xlat
pop
out
add
dec
mov
fmul
pop
les
push
rcrl
push
ret
in
or
ss
mov
repz
xchg
mov
sbb
in
imul
lret
in
mov
adc
add
inc
sarb
cmp
pop
jns
inc
xor
cmpsb
stos
mov
shl
incb
cmpsb
mov
rcll
mov
inc
dec
mov
mov
sub
shl
cmova
das
jb
popa
jns
rcrl
enter
sbb
mov
lds
cmpsl
sarl
sub
into
outsl
aam
mov
lcall
xchg
fistps
mov
into
dec
mov
mov
push
xor
sbb
push
add
jae
sub
add
nop
jnp
shlb
pop
test
out
arpl
pop
sub
outsb
outsl
fists
dec
outsb
in
pop
mov
sbbl
ljmp
or
mov
and
shrl
loop
out
cmp
sub
mov
mov
xchg
xchg
lds
or
or
mov
stos
sub
stos
or
or
jne
idivl
out
xchg
push
jbe
jp
fadd
rcrb
cld
xor
subl
pop
inc
jno
pusha
xchg
jp
or
dec
xor
scas
mov
jecxz
das
jge
pusha
cmp
pop
rcrb
stos
mov
sbb
mov
add
inc
mov
jnp
clc
add
lock
dec
loope
or
inc
adc
in
sbb
adc
push
xchg
pop
iret
inc
outsb
rcrb
lahf
add
mov
loopne
fnstenv
cmpsb
fdivp
testl
cmc
pop
je
sbb
push
push
mov
xchg
mov
stos
pop
bound
dec
pop
jb
xchg
mov
sahf
mov
shr
leave
inc
ja
fs
pop
pushf
and
pop
push
das
mov
fistpll
nop
test
xchg
push
daa
insl
sub
adc
or
mov
jo
fwait
inc
pushf
repz
cltd
inc
sbb
sahf
lea
data16
jp
lahf
xor
fldt
jle
mov
and
popf
test
jo
mov
and
movsb
loopne
fs
mov
mov
aad
sar
jl
and
cmp
inc
sbb
outsb
push
xchg
pop
sub
daa
roll
pusha
dec
jecxz
loopne
lcall
into
jl
cli
pop
jle
in
sbb
lret
mov
in
das
mov
cmp
flds
lds
push
pop
inc
lods
push
cli
and
add
mov
fstl
lret
mov
iret
lock
out
fmuls
mov
es
adc
jp
shrb
clc
cmp
notb
push
into
repz
xchg
loopne
imul
or
rorb
jle
cmp
fcomps
inc
sub
mov
aad
mov
push
ljmp
leave
cmpl
mov
mov
sub
int3
mov
push
lea
loop
mov
pop
mov
enter
dec
mov
and
aas
out
out
sbb
add
mov
cmp
or
les
jno
decb
pop
movsl
daa
fidivrs
subl
lea
outsb
cld
and
jge
push
ret
sarb
in
push
fisttpll
or
mov
mov
sbb
sahf
and
dec
adc
xchg
or
cmp
addr16
push
push
mov
jo
orb
jbe
js
stos
lods
and
xor
add
mov
push
movb
adc
jle
mov
push
pushf
je
sbb
inc
and
sbb
cs
imul
pushf
das
dec
push
ret
pop
mov
lret
xor
push
ds
mov
shlb
aam
jp
mov
xchg
xchg
jg
xchg
sbb
jl
pop
jle
mov
rcrb
ljmp
fbstp
es
add
xchg
mov
mov
clc
scas
sahf
dec
lds
push
lods
xor
in
pop
js
testb
fbld
daa
outsb
pop
mov
lahf
fimull
fcompl
cmp
and
sub
outsl
in
test
mov
notb
loopne
cmpsb
jmp
xchg
or
lods
pop
cmp
jecxz
cwtl
push
sbb
xor
inc
ss
add
jnp
decl
xchg
add
add
insb
sbb
repnz
out
mov
push
scas
pusha
fdivs
and
aaa
outsl
dec
jle
jae
shll
pop
inc
sub
push
pop
jg
xor
cmp
push
outsb
cld
xchg
xchg
or
add
lea
cwtl
sbb
push
int
sti
inc
addr16
outsl
xchg
mov
gs
dec
cli
leave
fimuls
repz
test
mov
arpl
mov
dec
sbb
mov
or
jmp
dec
mov
push
pushf
in
loopne
sbb
sbb
cltd
push
cltd
sub
out
int
cmp
or
xchg
popa
inc
and
mov
outsb
test
call
xor
daa
in
mov
pop
inc
movsl
scas
mov
mov
cmp
push
out
loope
lcall
and
lds
aad
push
dec
mov
nop
cwtl
or
xchg
arpl
aaa
jbe
cltd
pushf
inc
hlt
mov
rol
fadd
mov
mov
push
mov
xchg
lea
cld
int3
inc
ret
mov
push
push
loopne
adc
mov
mov
pop
sarl
cwtl
adc
sahf
shlb
mov
std
mov
xchg
in
ss
jbe
add
xor
or
add
int3
loope
push
in
adc
lret
rclb
inc
int
mov
cld
movzbl
adc
aad
mov
inc
mov
pop
pop
cld
nop
in
test
cmp
add
cli
imul
cmp
sti
clc
add
mov
mov
mov
mov
and
push
filds
mull
aam
sub
xchg
out
arpl
rorl
or
stos
jge
cmp
aaa
xor
movsl
aas
cltd
dec
shl
inc
mov
pushf
inc
push
fiaddl
inc
mov
out
pop
je
push
push
mov
jle
inc
xchg
fisubrl
inc
and
xlat
inc
jmp
cmp
or
lret
popf
cmp
push
xor
xor
cltd
pop
sub
in
jge
je
shl
cmpsl
adc
dec
xchg
adcb
xchg
punpckhdq
imul
pop
or
mov
push
scas
pusha
lret
inc
push
movsb
imul
jnp
aad
dec
or
xor
dec
nop
cwtl
fldln2
ficoms
mov
jl
fs
movsl
jp
cmc
mulb
push
add
and
cmp
mov
jecxz
pushl
jecxz
push
xchg
into
outsl
js
scas
cmp
mov
imul
push
nop
push
add
mov
jbe
mov
xchg
shrb
nop
xchg
pop
fdivs
repnz
or
mov
cmp
scas
xor
mov
insl
test
or
dec
mov
leave
dec
jmp
imul
xor
sub
sbb
add
js
cs
int
rolb
cmp
pop
lods
notb
fcmovnb
scas
mov
add
sub
in
jbe
fldenv
ljmp
lahf
ja
add
push
test
pop
mov
aaa
shrl
lahf
ljmp
sti
scas
pop
mov
adc
cld
push
divl
aad
cmp
or
mov
sbb
int
test
dec
shl
sub
xchg
add
js
daa
int
outsb
mov
rclb
repz
cmp
js
jge
xchg
push
and
fcompl
loope
jbe
xchg
pushf
adc
dec
sbb
cmp
pop
out
push
ret
sbb
dec
scas
bound
and
cld
jl
push
aas
mov
push
dec
cmpsb
ljmp
jp
daa
cmc
xor
xchg
xchg
fdivrs
cmp
fwait
mov
sbb
insw
in
push
xchg
inc
in
pop
mov
sub
inc
inc
jg
xor
pop
sbb
sub
sbb
scas
cltd
pusha
jg
jp
inc
jns
adc
ja
mov
test
inc
test
cltd
jle
adc
pop
pop
sbb
cmp
push
fists
push
push
ss
cwtl
jo
in
inc
mov
lock
test
cs
loope
pop
sahf
mov
movsb
xor
stos
dec
mov
mov
cmp
cmc
adc
add
mov
and
loope
addb
jbe
sbb
imul
mov
fisubl
incl
xor
pop
je
pop
xchg
mov
mov
outsl
xor
and
cmp
insl
scas
pop
mov
sub
sarl
or
mov
jl
les
xchg
mov
cmpb
sbb
mov
mov
stos
out
cli
icebp
push
lock
aad
mov
rcll
pop
jb
dec
sub
jns
inc
adc
into
pop
fwait
sbb
inc
pop
xor
in
cmc
mov
mov
std
das
pop
lds
mov
pop
cmp
cld
inc
js
sub
out
cli
xlat
ljmp
xlat
jbe
loop
add
cld
xor
loopne
adc
shlb
xlat
add
imul
inc
sbbb
pop
sub
movl
sub
adc
add
aaa
notb
inc
inc
dec
fmuls
push
mov
addb
sahf
xchg
in
and
mov
mov
dec
cmp
cmpsb
jecxz
shlb
imul
add
mov
dec
int3
lods
or
imull
lds
fsubrs
sub
insb
addb
inc
jecxz
stos
inc
fsubl
pop
mov
cld
scas
cmp
outsl
cmp
movsl
stc
and
mov
mov
xchg
movsl
xchg
aaa
push
call
cmc
xchg
stos
hlt
clc
mov
fstpt
and
push
pop
mov
pop
push
cmp
sbb
sti
sbb
shll
and
mov
lods
lea
dec
pop
sub
sbb
add
arpl
lock
hlt
pop
jmp
or
fadd
jl
sub
loopne
out
mov
cmp
fcomip
mov
jb
or
inc
ret
jg
sub
cwtl
push
inc
out
cmp
lret
push
xchg
jecxz
add
pop
mov
pop
cmc
cs
xchg
negl
cltd
sub
icebp
out
ja
std
dec
jge
xor
dec
add
push
jle
lret
mov
push
les
pop
or
and
sti
xor
push
xor
push
sbb
stc
aaa
xchg
add
mov
adc
sbb
cmp
call
out
aam
dec
cs
jl
cmp
adc
push
lds
and
call
adcb
jge
scas
aad
cmp
mov
and
pusha
mov
js
ret
ds
mov
cmp
cli
iret
adc
stos
push
push
pop
mov
push
imul
push
inc
push
dec
fxch
and
scas
jle
les
aad
sub
f2xm1
cmpsl
fistps
mov
cld
sbb
jns
sub
enter
scas
imul
pushf
stos
pop
lahf
loope
and
aam
ljmp
add
jb
xor
pop
cld
test
and
outsb
shlb
sbb
mov
leave
and
mov
test
xor
pop
test
adc
xor
jg
lret
cld
in
sbb
dec
add
mov
popf
adc
pop
test
cmp
imul
in
mov
dec
dec
push
fwait
pop
xchg
aaa
dec
ds
daa
mov
adc
pop
sbbb
addr16
jg
test
adc
and
xchg
mov
jle
mov
gs
sub
int3
xor
or
xchg
movsl
pop
out
cmp
add
jnp
ljmp
or
shlb
daa
xchg
lcall
add
and
mov
loop
insl
xchg
or
test
sub
movsl
jne
daa
icebp
sub
inc
lds
sbb
dec
mov
into
aas
fstp
in
pop
mov
fs
push
je,pn
mov
outsb
bound
add
sub
mov
sub
int3
adc
xor
mov
sub
xchg
sbb
jmp
rcrl
lahf
mov
pop
xchg
movsl
inc
outsl
push
or
dec
pop
sbb
mov
and
out
fisubs
xor
nop
inc
mov
dec
ljmp
mov
cmp
fnstenv
push
aaa
xor
xchg
mov
push
cli
cld
mov
aad
xorl
push
out
aam
and
mov
jg
mov
popl
and
out
push
or
inc
cmp
jns
dec
sbb
pop
testb
inc
sbb
cmp
and
adc
xorl
movsb
mov
shr
mov
leave
pop
cmp
out
fsubrl
or
popa
sub
dec
bound
loope
cmp
fdivl
int3
les
xchg
mov
cmpl
mov
js
loopne
jb
mov
scas
sub
mov
ret
loopne
adc
fnstsw
inc
adc
cmp
sub
loopne
push
add
psllw
insb
out
cmp
ret
ljmp
aaa
xchg
mov
jae
loopne
sti
idiv
adc
shrb
jp
inc
int
pusha
push
loope
lcall
divb
subb
stos
adc
dec
push
sub
mov
mov
inc
jmp
cltd
sbb
sub
lret
mov
outsl
ss
pop
lret
stc
enter
jbe
xlat
in
pop
jae
rorl
xor
pop
mov
pop
cmp
fsubr
adc
and
sbb
insl
dec
or
test
ret
in
loopne
xor
addl
int
pop
cmp
les
mov
sbb
aas
popl
icebp
lods
add
pop
decb
es
mov
popa
divl
inc
mov
or
dec
arpl
stc
dec
cmp
outsb
roll
shlb
fstps
pushf
sbb
cmp
scas
dec
sti
popa
roll
cmp
lcall
outsl
pop
mov
inc
pop
mov
lea
pop
jns
insl
push
ja
les
pop
stc
das
sbb
out
in
pop
inc
aas
in
insl
insl
scas
pop
dec
ret
sub
add
and
xor
fs
cmp
mov
scas
mov
lods
mov
push
cmc
cmp
pop
cmp
mov
dec
jnp
jl
cmp
mov
inc
mov
aad
scas
enter
cltd
push
out
jecxz
out
or
mov
jnp
push
push
pop
mov
jle
add
adcb
popf
pop
fnstsw
addr16
sub
mov
sub
inc
loope
xchg
ret
jb
pop
xchg
add
ljmp
mov
rcr
lods
insl
ss
xor
sbb
xor
and
sub
les
fistps
mov
cld
mov
call
addr16
jb
cltd
hlt
imul
sti
out
and
lods
and
loope
mov
sbb
mov
mov
inc
cli
cmp
rcrb
sti
arpl
push
sbb
pop
loop
cmp
enter
std
sbb
enter
lret
mov
scas
dec
scas
testl
out
aas
movsb
outsb
fs
and
fs
in
push
iret
sub
adc
lahf
popf
pop
aaa
icebp
add
mov
ja
notl
push
iret
mov
outsl
mov
dec
loope
lods
dec
add
mov
dec
std
mov
pop
hlt
aaa
mov
xchg
test
mov
mov
cltd
aam
mov
pop
in
nop
outsb
push
pop
mov
sub
pop
xchg
cmp
loopne
jge
xchg
mov
aam
jbe
inc
roll
cmp
and
mov
loopne
push
imul
imul
sub
shrb
repnz
cmpsb
and
xlat
and
jno
ficoml
in
or
sahf
mov
pushf
mov
hlt
jp
inc
add
mov
movb
dec
xchg
inc
mov
or
xor
mov
clc
cmpsb
data16
mov
pop
sbb
jns
arpl
das
xchg
in
or
je
pop
das
cmc
sub
movsl
add
stos
dec
test
jno
xor
popa
dec
xchg
loop
in
inc
lock
pop
sub
cmp
add
and
inc
jge
int
not
sarb
outsb
pop
and
aas
dec
popa
rolb
jnp
and
inc
inc
mov
add
sub
push
cmp
jp
xchg
jl
xorb
pop
daa
fsubs
sub
jbe
pop
sbb
aam
idivl
test
scas
sbb
out
adc
xor
outsb
jle
test
lock
push
xchg
test
pop
lods
xchg
fnsave
testl
pop
fiaddl
mov
int3
sbb
lods
xchg
mov
gs
lock
xchg
hlt
movsl
pop
out
ja
sbb
cmpsl
pop
fdivp
jg
xor
in
cli
push
loopne
lret
push
mov
imul
jle
mov
mov
sarb
lret
push
cmp
mov
mov
sbb
push
xchg
or
adc
lcall
cmp
add
scas
pop
cmp
pop
shrl
jp
cmp
mov
dec
in
loope
loop
fbstp
imul
pop
inc
int3
fs
mov
out
adc
ss
cwtl
jmp
int
movsb
dec
scas
out
jns
push
and
mov
test
cmpsl
gs
aaa
ret
clc
lcall
fdivrs
enter
shrl
aad
std
dec
dec
cmp
enter
mov
cli
dec
xchg
hlt
mov
ret
add
dec
and
hlt
das
pop
addr16
in
jge
push
jle
aam
cs
mov
mov
add
test
cmp
insb
lods
movsb
mov
cmp
cvtps2pi
stos
shl
stc
shl
and
jb
jp
or
clc
in
xchg
fucom
mov
fidivrs
insl
iret
int3
pop
fdivrl
jp
xchg
sbb
sbb
xchg
adc
bound
aas
mov
jbe
dec
daa
mov
cmp
or
lret
out
int
js
mov
dec
js
sbb
xor
push
and
cmp
pop
cmp
or
lret
sub
sub
rorb
fnstcw
inc
mov
stc
xchg
stc
in
jmp
push
xor
and
and
push
outsb
adc
sbb
inc
mov
push
data16
rol
cs
mov
pop
adc
mov
push
outsb
pop
outsb
jo
subl
sbb
xlat
fistpl
pop
mov
push
cmc
and
jmp
push
sub
cmpsb
mov
pushf
insl
popa
in
sbb
in
pop
insl
dec
xor
add
pusha
pop
addl
sub
add
fs
je
aas
lods
dec
mov
inc
mov
dec
out
mov
enter
pop
es
ret
cmpsb
shll
loop
xor
cs
push
loopne
mov
test
mov
mov
mov
mov
fcompl
dec
mov
dec
sbb
push
dec
out
rcll
sub
inc
pop
mov
mov
fs
mov
and
lret
or
call
add
mov
ret
loope
sub
or
sbb
and
mov
cmpb
ret
daa
adc
adc
cs
enter
sbb
jge
pop
insl
xchg
inc
test
test
repz
pop
jns
mov
fcom
add
jns
fstps
xchg
xor
decl
push
cs
ret
sbb
mov
inc
subb
cmp
outsb
sub
sbb
cmp
inc
and
lods
push
jp
sub
inc
je
mov
push
orb
cmp
hlt
scas
mov
add
push
pop
dec
lock
lcall
and
into
aaa
sbb
fdivrs
xor
push
mov
in
xor
push
mov
mov
pop
mov
cmp
and
lods
push
jns
pop
outsb
push
cmpsb
mov
xchg
loop
hlt
imulb
cmp
insl
sub
jmp
sbb
inc
mov
cs
insl
jo
xor
mov
sub
pushf
out
xor
jecxz
call
fbld
cwtl
push
adc
xchg
sub
pop
jecxz
mov
test
in
add
xchg
xchg
pop
dec
out
ret
add
addr16
sar
sbb
int
inc
lock
pop
inc
lock
inc
mov
and
push
test
pop
cmp
fwait
or
and
lods
push
jns
pop
jo
test
nop
or
sub
stos
clc
jecxz
mov
add
shrl
call
rcl
and
pop
addb
fdivs
insl
xchg
ret
xchg
add
lea
rolb
dec
xchg
adc
fimull
fisubrl
mov
aaa
pop
lock
inc
pushf
and
mov
push
cmp
adc
adc
adc
addr16
into
jne
scas
int3
mov
scas
in
adc
pop
hlt
out
out
into
fstps
sub
pop
out
in
push
inc
enter
rcrl
dec
hlt
stos
in
shll
mov
pop
out
inc
les
and
fdivrs
andb
jae
leave
in
insl
sbb
lods
jl
xchg
js
lcall
push
xchg
add
or
xchg
popa
push
popf
add
xchg
add
jge
xor
and
adc
loopne
dec
mov
fldenv
fbld
pop
sbb
push
dec
into
cwtl
xor
in
loope
push
ja
cltd
add
and
push
cmpsl
aam
push
lock
xchg
mov
jne
call
mov
js
or
mov
scas
mov
mov
pop
fsubrl
ja
iret
rol
jg
lods
and
xlat
jecxz
pop
lea
mov
movsl
jb
mov
sarl
and
lret
test
in
add
adc
test
push
cmp
mov
xchg
mov
adc
lret
push
fidivrl
mov
push
mov
cmp
and
xor
repnz
push
mov
movsl
paddsb
lahf
mov
dec
sub
mov
push
dec
inc
or
lods
dec
jns
pop
mov
inc
sub
imul
pop
mov
mov
mov
out
cmpsb
fldcw
mov
mov
test
rcl
movsl
mov
or
lret
fsubrs
mov
inc
mov
jmp
sub
iret
dec
push
pushf
cmp
pop
push
or
adc
xchg
mov
push
imul
ror
les
push
addr16
lds
es
dec
fisubl
insb
pop
mov
enter
cmp
jle
outsl
lret
push
mov
fldt
sub
loope
mov
hlt
xor
popf
rcrl
rorb
pop
mov
ret
pop
add
stos
rorl
pop
jp
data16
rol
cld
dec
cmp
and
xor
cmc
adc
jbe
mov
cmpsb
loope
pop
and
int3
or
and
js
aad
addr16
dec
ret
scas
data16
fmul
and
ret
jno
xor
sbb
adc
pusha
int
cmp
cli
repz
jb
jo
out
out
cli
add
or
rolb
mov
jmp
cmp
mov
xchg
out
pop
cmp
mov
cmp
jp,pn
dec
inc
cs
ror
fisubl
daa
shl
mov
xor
pusha
mov
lods
dec
and
fidivrl
push
loopne
xor
ja
sbb
mov
dec
aaa
push
in
pop
popa
fstps
and
leave
pop
aam
subl
rcll
xor
xchg
shll
js
sub
enter
stos
or
ljmp
xor
fisubrl
push
inc
lds
pop
test
mov
in
and
movsl
mov
or
mov
jno
mov
imul
lods
gs
into
mov
shll
sahf
lds
or
out
sahf
sub
icebp
xor
subb
arpl
cld
cmp
push
lret
ljmp
loop
ss
mov
dec
mov
aam
clc
rorl
xchg
mov
loop
or
adc
jle
push
mov
aam
push
fldl
fsubrs
leave
push
cmp
ret
mov
in
inc
aam
lods
mov
fsubs
add
push
mov
dec
inc
fisubrs
push
out
push
xor
sbb
push
aam
pop
cmp
ds
cmpb
push
idivl
jge
je
loope
sub
add
cli
inc
in
cltd
divl
fmuls
cld
rolb
pop
xchg
add
push
mov
lret
xchg
cmpsl
mov
adc
pop
nop
stos
jno
sar
adc
xchg
loopne
mov
jbe
popa
adc
dec
cli
xchg
add
std
mov
bound
xchg
jge
or
add
insb
or
or
dec
jbe
dec
jle
cmpsl
pop
ja
icebp
mov
push
lods
mov
xchg
adc
push
ret
jmp
xchg
into
mov
inc
scas
popa
fidivrs
cli
mov
out
bound
push
addl
shlb
rcrb
hlt
mov
fsubrs
push
lret
pop
arpl
push
cld
stc
cmpl
divb
xor
add
sub
jecxz
out
dec
inc
ljmp
dec
xchg
mov
lods
sahf
jnp
push
ret
pop
push
enter
jl
or
testl
adc
sbb
inc
xlat
enter
bound
sbb
dec
dec
mov
les
or
jmp
push
js
cltd
add
and
aaa
das
push
jno
jp
dec
adc
sub
push
cmpsb
mov
push
mov
test
leave
fdivrp
cli
sub
loopne
cmp
fcomps
orb
mov
sbb
jl
js
pop
mov
movsb
ret
lret
jae
pop
jl
popf
adc
fildll
bound
gs
popa
push
dec
cld
cwtl
mov
cmpl
inc
mov
pop
negl
inc
inc
js
cld
mov
cltd
sbbb
xchg
mov
sarb
cltd
gs
adc
dec
push
and
sbb
imul
test
cltd
ljmp
dec
lock
pop
inc
ret
xor
cmc
std
lret
and
mov
sbb
and
sub
cmpsl
stos
mov
sbb
ljmp
stos
pop
jne
dec
xchg
dec
aam
gs
not
stos
fcomps
xor
ret
fistps
daa
shlb
fs
into
int
pop
jmp
mov
pop
xchg
es
frstor
shrb
inc
mov
cmp
and
gs
sub
scas
fnstenv
divl
sbb
scas
in
mov
cli
fbld
mov
insb
sti
and
jb
sub
insl
sbb
insb
push
mov
dec
stos
push
xchg
sahf
or
test
test
lahf
push
lcall
orl
inc
in
in
scas
scas
push
cwtl
cmp
cmp
mov
xchg
pop
das
pop
cld
jno
int3
arpl
stos
adc
data16
inc
push
pop
cld
aam
scas
and
jecxz
dec
aaa
pop
and
daa
imul
leave
rcrl
pushf
adcl
out
mov
mov
mov
inc
dec
movsb
lret
je
outsb
jo
ret
push
mov
adc
sub
cmc
enter
addr16
xchg
fmuls
stos
push
pop
fstps
add
sub
jle
addb
add
lock
clc
outsb
adc
insl
aaa
mov
jp
fwait
lds
mov
add
in
shrl
jae
cs
dec
mov
loopne
cli
pop
les
adc
jbe
in
filds
and
sahf
adc
inc
push
push
bound
fidivrs
jle
push
jecxz
jae,pt
push
stos
jp
popa
or
inc
mov
loop
ljmp
adc
mov
inc
pushl
test
xor
dec
aas
ret
inc
mov
or
push
out
mov
test
test
push
pop
cmp
mov
movl
and
adc
jmp
outsl
jmp
jecxz
lea
es
and
out
xchg
jg
or
jmp
sub
jae
xchg
sbb
sub
adc
cmp
int
scas
orps
and
aam
or
or
js
addr16
subb
add
push
popf
arpl
insl
inc
movsl
pop
pop
int
addr16
inc
cmp
mov
and
pop
cld
nop
mov
add
mov
shl
jo
repz
inc
loope
and
arpl
mov
mov
dec
jecxz
test
push
cmp
rclb
and
inc
push
out
nop
jns
in
bound
jne
iret
sub
cld
mov
aam
cmp
orl
mov
jo
mov
xor
stos
fs
in
jno
pop
jle
nop
cld
stos
sub
cmp
push
aad
mov
and
and
jg
repz
adc
cmpb
ret
pop
jns
jg
ds
cmp
add
or
imul
mov
or
or
add
sarb
ja,pn
xchg
insb
cli
iret
xor
das
inc
push
lods
ret
and
movsl
sbb
mov
inc
fnstsw
sub
mov
jecxz
in
insb
js
mov
pop
push
popf
aam
xor
mov
xchg
xchg
mov
inc
gs
jbe
pushf
sti
ret
and
mov
mov
cmp
aad
jle
into
jb
int
lea
inc
jmp
mov
dec
addb
xor
mov
push
mov
add
or
int3
nop
dec
insl
sbb
sub
stos
insl
clc
push
filds
dec
push
insl
lcall
imul
jge
pop
add
flds
mov
or
mov
xor
loopne
aam
enter
das
jae
lret
repz
cmc
imul
adc
mov
mov
pop
xchg
dec
and
sub
xor
dec
daa
shll
mov
push
sbbb
ds
repnz
xor
iret
cmp
stos
add
cmc
and
push
jl
sbb
popa
mov
scas
and
cwtl
mov
pop
push
inc
scas
int
jo
pop
fidivrs
mov
rcl
sbb
shlb
fcoms
mov
sub
mov
pusha
out
pop
mov
push
hlt
lcall
add
pop
fstps
addr16
xor
dec
insl
and
test
int3
jmp
xchg
stc
fisttps
adc
jns
std
jmp
inc
test
or
xchg
pop
scas
mov
out
sub
and
pop
into
sti
testb
push
cmp
sarb
test
test
sti
sarb
cmp
cmp
mov
add
lahf
bound
sub
popa
shlb
scas
sub
aam
mov
push
nop
data16
scas
push
outsl
cmp
ret
pop
sbb
mov
xchg
add
pop
arpl
popa
dec
fcomps
cwtl
outsl
outsb
and
adc
dec
jne
dec
jge
cmp
hlt
ss
arpl
mov
xchg
mov
sub
mov
call
add
sahf
dec
jle
sub
mov
jb
cli
pop
rorb
sbb
jo
cmc
push
jns
xchg
repnz
lea
mov
popl
push
aam
push
ja
sti
out
xor
out
dec
cltd
cli
mov
pop
pop
stc
jno
mov
jmp
lods
rclb
pop
xor
sub
mov
push
das
daa
lcall
repz
add
sub
mov
push
insl
popa
imul
flds
outsl
sub
aam
cmp
pop
pop
adc
xchg
in
dec
lcall
push
inc
jp
iret
stos
lret
aam
add
imul
fnsave
cli
gs
mov
std
or
xchg
jp
cwtl
mov
fwait
ret
sti
pop
mov
stos
or
lds
add
loopne
adc
cmp
mov
sub
mov
and
adc
inc
or
stc
pop
leave
test
rcrb
xchg
rorb
ja
test
sbb
push
call
enter
jo
adc
popfw
mov
and
fldl
fdivs
xchg
push
dec
mov
test
ja
cwtl
pop
xchg
adc
lods
push
pop
iret
jmp
mov
mov
dec
in
adc
push
fidivl
lahf
add
dec
mov
mov
push
xor
mov
movsl
pusha
add
cmp
mov
jnp
mov
pusha
aam
popl
cld
sbb
cltd
mov
andb
cmp
stos
insl
and
adc
xchg
and
dec
popa
es
or
jno
and
mov
sti
cli
sbb
mov
sub
insl
testb
movsb
mov
push
shrb
fs
rolb
sub
and
cld
mov
adc
cmpl
and
add
fxch
sbb
rolb
cmc
cmpsl
les
pop
movsb
inc
xor
les
lea
ds
and
adc
fistpll
xchg
sarb
or
cmp
rcrl
ficoms
test
push
sbb
xchg
xchg
xor
pushf
xchg
test
xchg
pop
jl
lcall
sbb
mov
les
add
jle
loop
loopne
imul
cltd
movsl
int
mov
gs
and
lahf
dec
mov
gs
add
xchg
movsl
in
xchg
rorb
push
xor
and
cmp
enter
popa
rsqrtps
bound
rorb
jne
adc
cmp
sbbl
mov
dec
jmp
jg
push
sbb
cmp
mov
add
sbb
popa
push
mov
add
adc
cmp
popf
add
outsl
test
mov
dec
ret
sub
and
mov
push
imul
or
sub
and
arpl
and
insl
mov
fwait
mov
pop
rcrb
mov
adc
cli
mov
cmp
push
add
loopne
mov
ficomps
pop
leave
and
iret
clc
pop
stos
pushw
mov
mov
xchg
fnstcw
pop
add
mov
sbb
pop
sbb
insl
or
push
popf
divl
incl
in
outsl
dec
jbe
lcallw
sbb
into
sub
push
loopne
pop
sub
and
xchg
and
js
mov
ret
xchg
outsl
std
rcl
fs
fsubrl
sbb
jl
into
cmp
cmp
mov
sbb
faddp
adc
mov
or
and
add
sahf
test
add
sbb
mov
rcrl
call
or
xchg
mov
mov
pop
inc
mov
dec
aam
push
sbb
stos
outsb
roll
stos
cmp
test
adc
push
cli
xchg
dec
xor
inc
dec
dec
shl
sbb
push
arpl
in
cli
push
sbb
sub
jg
bound
ss
jb
or
mov
test
xchg
and
sub
and
rcrl
ret
subl
pop
rorb
test
insb
push
push
ss
inc
stos
cmpsb
xor
add
push
or
push
xchg
mov
in
inc
inc
add
sub
dec
sub
inc
push
sarb
push
test
push
call
out
mov
cmp
jo
sub
stos
dec
push
mov
fldl
out
mov
sub
mov
inc
out
scas
adc
push
jns
cwtl
mov
dec
int3
push
nop
scas
xchg
push
mov
mov
mov
aad
jno
inc
ds
add
in
sub
iret
dec
inc
pushl
iret
insl
ret
lret
je
repz
push
jl
insl
pop
daa
sbb
aad
das
pop
dec
add
cmp
adc
out
into
leave
sbb
jl
xlat
pushf
dec
insl
lea
aaa
stc
out
loope
xchg
adc
xchg
cmp
sbb
aad
pop
int3
mov
mov
dec
js
fisubrs
sbb
fnstenv
xchg
outsb
fwait
lock
dec
sbb
cmp
inc
outsb
rcr
dec
nop
inc
jns
icebp
sarb
sub
out
mov
clc
push
pop
enter
test
lock
and
lods
jl
clc
mov
aaa
int
sub
jne
insl
mov
and
lods
sbb
push
pop
cmp
lea
fbld
mov
shll
mov
out
movsl
lahf
les
pop
fcomps
cmp
les
pop
cli
les
sahf
mov
hlt
sub
nop
test
fucomp
and
aaa
inc
mov
xchg
xor
add
push
fnstenv
ds
dec
popl
in
cltd
mov
mov
jns
jmp
cmp
sbb
sub
rclb
stos
cmp
repz
js
xlat
loopne
and
decb
and
push
or
enter
in
insl
sahf
sub
sbb
push
adc
into
test
mov
cli
gs
dec
jns
js
loopne
mov
and
pop
or
cmp
hlt
aam
adc
mov
jb
mov
and
xor
fmul
in
push
xor
jne
dec
inc
stc
pop
cwtl
and
scas
dec
sbb
jno
add
cltd
add
dec
push
maxps
pushf
out
mov
dec
arpl
dec
sub
fwait
inc
push
pop
int3
pushf
out
push
jb
es
lea
in
cmp
mov
and
jmp
repnz
inc
sahf
dec
sub
lods
clc
cs
sar
pop
or
cs
jae
sbb
xor
sbb
cltd
js
aad
outsb
out
stos
out
sahf
jb
int3
aad
adc
sub
or
mov
mov
sub
or
sub
jo
aaa
mov
xchg
sub
mov
aad
jmp
aas
lcall
mov
push
dec
arpl
inc
cmc
mov
jnp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
push
nop
nop
nop
push
nop
nop
nop
nop
nop
push
nop
nop
nop
nop
nop
call
nop
nop
nop
nop
nop
push
call
nop
sub
nop
nop
nop
nop
lea
nop
nop
nop
push
nop
nop
nop
nop
push
nop
nop
nop
push
nop
nop
nop
nop
nop
push
nop
push
nop
nop
call
nop
add
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
mov
nop
nop
shr
jmp
nop
nop
nop
lods
nop
nop
add
nop
nop
nop
nop
xor
nop
nop
nop
nop
nop
mov
nop
dec
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
jmp
pop
nop
nop
pop
nop
nop
pop
nop
nop
nop
jmp
