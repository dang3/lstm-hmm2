jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
fists
inc
add
enter
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
adc
inc
add
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
sub
mov
mov
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
adc
mov
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
adc
add
addb
add
add
add
or
lea
mov
add
mov
add
clc
inc
add
add
push
add
add
push
add
mov
add
add
add
add
add
add
or
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
and
inc
add
mov
mov
mov
mov
mov
mov
push
movl
mov
mov
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
test
inc
add
xor
mov
push
mov
push
push
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
mov
lods
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
cld
sbb
ret
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
adc
mov
cmp
je
jmp
push
mov
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
jns
inc
add
cmp
je
mov
inc
adc
pusha
xor
push
inc
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
pusha
sbb
add
ds
rolb
add
jg
inc
sub
add
je
and
and
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
call
lea
mov
mov
inc
and
inc
adc
sbb
pop
and
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
rclb
add
add
mov
mov
push
push
call
test
js
lea
lea
mov
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
aas
icebp
inc
add
xlat
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
repnz
add
add
cld
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
or
mov
inc
sub
shlb
or
dec
xor
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
inc
add
das
iret
adc
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
pusha
push
call
mov
mov
fcmovnu
pop
clc
lret
mov
data16
add
stc
fiaddl
add
add
call
enter
push
mov
add
push
push
push
push
call
mov
add
stc
lock
enter
jne
mov
fwait
push
add
aam
push
add
insb
mov
mov
mov
add
out
add
stc
fs
loop
add
jle
add
add
add
je
add
hlt
pop
popl
push
lea
push
call
les
enter
pop
stos
mov
addl
pop
je
cld
add
mov
std
loopne
push
mov
add
shrb
testb
push
call
add
add
add
jne
mov
add
movsb
add
in
sahf
addb
add
add
out
jb
mov
xchg
lock
lods
out
add
clc
pop
push
push
push
push
lea
push
push
push
push
push
push
push
call
jnp
add
jl
xlat
fcomps
out
cld
push
pop
rolb
lcall
jmp
add
loopne
loop
mov
in
add
fdivrs
add
out
add
sub
pop
push
push
push
lea
push
push
push
call
add
shr
pop
pop
nop
add
jne
clc
pop
ja
add
jp
add
pop
mov
fucomip
fists
add
pusha
add
add
lret
jns
ja
lds
add
in
nop
add
add
add
movb
add
leave
icebp
pop
add
xlat
sub
pop
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
mov
add
cltd
jb
xchg
jp
add
loop
jmp
addr16
add
mov
jns
add
add
mov
out
jns
add
loop
nop
add
push
add
push
add
add
add
xchg
sub
pop
call
call
push
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
mov
fiadds
scas
out
pop
icebp
lods
xchg
loop
movb
mov
add
repnz
add
into
push
ljmp
sub
pop
push
push
lea
push
push
call
xchg
scas
sti
roll
add
mov
lods
flds
add
loope
mov
loope
push
stos
add
mov
sahf
add
jmp
insb
add
cli
add
add
xchg
jp
add
pusha
hlt
add
add
add
add
mov
in
hlt
lcall
popa
add
jmp
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
clc
add
add
add
add
pop
mov
loope
fs
add
mov
mov
je
add
loopne
push
bound
add
ljmp
popf
add
sti
data16
xchg
xchg
testl
push
out
mov
in
mov
scas
mov
pop
ret
push
push
push
push
push
push
push
push
call
jo
add
add
loop
add
mov
add
fcom
lods
add
mov
shrb
pusha
clc
testb
iret
add
outsl
mov
lock
stos
orl
add
cmc
test
pop
mov
cli
cld
addb
push
jne
xchg
sub
pop
mov
push
push
call
add
cli
add
add
mov
aad
rolb
add
lahf
jl
add
add
lret
out
fdiv
loope
xchg
orl
movsl
outsl
roll
add
add
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
push
push
push
call
testl
lea
movsl
mov
add
div
call
add
jnp
clc
movb
mov
lahf
addl
push
add
sub
pop
add
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
loop
add
jl
div
lds
icebp
jl
add
mov
jmp
lret
clc
fsubrl
icebp
sahf
add
loope
add
stc
pop
js
icebp
mul
add
stc
movb
xchg
add
loope
js
add
fiaddl
pop
stos
mov
ret
add
add
push
push
push
push
lea
push
push
push
push
lea
push
push
call
loope
mov
add
add
xchg
in
cltd
add
add
pop
mov
xchg
push
cmpl
add
fucom
add
fsubs
add
add
add
gs
sahf
add
addb
sub
pop
add
mov
push
push
push
push
push
lea
push
lea
push
call
cltd
fadds
add
add
jle
mov
pop
add
push
jns
mov
add
xchg
jmp
add
cld
int3
cmc
clc
jbe
imul
lcall
sbb
push
push
call
fcomps
mov
add
add
jecxz
test
add
add
in
add
add
out
add
mov
add
imul
imul
add
add
xchg
imul
mov
add
add
push
push
add
push
and
add
inc
sub
dec
pop
pop
push
push
push
push
push
push
push
push
push
lea
push
call
add
mov
pop
mov
jbe
cltd
add
add
fadd
lret
test
add
add
add
mov
add
xchg
pop
imul
popa
add
test
jns
xchg
scas
mov
addb
in
fcomps
jne
push
push
push
push
call
mov
nop
scas
data16
scas
push
add
test
add
add
mov
cwtl
pop
jecxz
add
add
add
sub
pop
call
push
push
lea
push
lea
push
call
outsl
call
int3
lds
lock
in
mov
add
push
sti
lea
flds
stos
arpl
fsubrp
shlb
fiaddl
clc
testl
lcall
inc
lock
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
push
hlt
mov
jl
xchg
add
mov
pop
imul
add
gs
jno
sti
fwait
xchg
stos
orb
jge
clc
add
add
fiaddl
pop
add
mov
add
out
add
nop
movsb
lahf
fcmovne
pop
xorb
subl
rolb
lcall
inc
call
push
push
lea
push
push
push
push
lea
push
push
push
push
call
aam
add
icebp
add
add
add
jbe
xchg
add
mov
test
mov
cwtl
into
ja
add
std
in
cli
add
shlb
mov
addl
add
jo
add
add
js
sub
pop
lea
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
add
add
imul
add
std
add
add
add
lods
fldl2t
add
popf
add
cltd
xchg
mov
std
mov
rolb
push
lea
push
push
push
push
push
push
call
push
fs
add
call
add
mov
rcrb
outsl
lret
add
xchg
add
imul
add
add
jno
mov
pushl
push
push
push
push
push
lea
push
push
call
add
int
fisubl
rcl
mov
add
je
add
fildl
int3
push
add
xorl
les
add
fcoml
add
add
add
cld
fldenv
jno
sbb
mov
fstpl
add
jle
in
in
pushl
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
pop
mov
push
add
push
mov
add
dec
mov
add
jnp
jmp
push
nop
enter
add
add
arpl
add
add
or
jnp
add
mov
mov
in
fcompl
mov
add
push
push
call
mov
gs
mov
in
xchg
out
mov
mov
add
push
pop
cmpsb
add
add
add
int
rolb
lahf
add
add
add
cld
fwait
add
add
iret
mov
xchg
lcall
jne
push
lea
push
push
push
lea
push
push
call
add
lcall
add
xchg
add
fwait
add
out
into
add
add
add
add
add
add
pop
add
popf
arpl
cltd
imul
pop
add
lahf
aad
add
push
xchg
sub
pop
pushl
push
lea
push
push
push
push
call
add
add
filds
xchg
movl
cli
stos
test
clc
jae
pop
data16
add
add
je
add
jecxz
pop
pop
add
mov
add
rol
out
pop
add
iret
add
iret
jno
mov
jge
sub
pop
call
push
push
xor
inc
xor
push
xor
add
shl
sub
inc
sub
pop
not
not
pop
push
push
push
lea
push
push
push
push
push
push
push
call
roll
add
int
add
in
xlat
stos
add
stc
call
testl
out
mov
mov
xchg
in
data16
jnp
popf
lods
sahf
scas
xchg
push
popf
add
outsl
data16
sub
pop
pushl
push
push
push
push
push
lea
push
push
push
push
push
call
pop
out
lret
fcmovnbe
xchg
add
popa
add
add
ror
shl
jle
add
int
add
je
bound
cmpsb
lahf
add
lret
jmp
add
add
cmp
add
push
lea
push
call
add
lcall
mov
mov
lods
add
aad
add
cmpsb
pop
cmpsb
add
add
pushf
addr16
cmpsb
push
add
cmpsb
sahf
xchg
add
lcall
inc
push
push
rol
push
and
add
ror
rol
shl
sub
add
xor
pop
not
not
pop
push
lea
push
push
call
add
iret
mov
stc
lret
lods
test
add
add
cmpsb
push
call
lahf
add
gs
add
fbstp
in
hlt
pop
push
push
push
push
push
lea
push
push
call
add
add
pop
add
pop
add
add
add
scas
mov
loope
add
add
pop
add
add
add
mov
add
add
add
test
jnp
add
add
xchg
add
pop
push
in
xchg
int
fnstsw
arpl
add
testl
push
lea
push
call
jae
jb
pop
add
jmp
lret
gs
shlb
in
add
add
add
pop
add
add
cld
add
add
lock
lcall
clc
push
push
push
push
push
push
push
push
lea
push
call
add
push
pop
mov
fadds
loopne
add
fadds
add
xchg
pop
cwtl
aam
mov
add
out
pop
add
movsl
shll
mov
shlb
mov
add
add
xchg
xchg
add
lret
movsl
add
add
pop
scas
fimull
filds
lcall
push
push
push
lea
push
push
call
add
add
add
mov
jbe
mov
nop
out
ficompl
add
ljmp
pop
add
test
imul
add
mov
jge
sub
pop
push
mov
push
push
push
push
lea
push
push
push
call
add
insb
idivl
add
push
add
data16
je
enter
add
lret
add
jl
jbe
add
cmpsb
mov
cmc
add
clc
add
add
ljmp
lret
lahf
rolb
fistps
outsl
jge
leave
pushf
add
add
mov
mov
sub
pop
add
add
push
push
lea
push
lea
push
push
call
add
jle
add
add
add
xlat
data16
push
mov
add
jmp
test
add
add
pop
data16
push
add
in
jnp
pop
pop
pop
add
push
sub
pop
add
push
push
push
push
push
push
call
add
push
add
xchg
mov
imul
ja
int
jns
out
addb
mov
fcom
enterw
int3
add
fidivs
enter
shl
mov
in
add
xchg
aam
xchg
aad
outsl
add
out
add
test
jbe
testl
arpl
lds
in
pop
sub
pop
mov
push
push
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
xchg
add
lods
add
ja
leave
lock
add
add
add
outsl
add
add
ret
pop
lret
add
add
stc
add
xchg
sub
pop
xor
push
push
push
push
push
push
call
pop
xchg
iret
mov
ja
add
add
add
add
add
xchg
add
add
mov
pusha
jecxz
mov
xchg
fiadds
les
push
lea
push
push
lea
push
push
lea
push
push
call
xchg
cmp
rolb
jp
shlb
add
jle
fnstcw
fs
add
jno
add
add
add
loopne
add
in
add
outsl
add
add
sub
pop
add
push
push
push
lea
push
push
call
loopne
mov
pop
add
fstpl
add
lds
mov
add
lcall
test
jbe
fiadds
cmpsl
roll
push
add
roll
add
mov
rcr
add
xlat
add
lret
jbe
sub
pop
push
mov
push
push
push
push
lea
push
call
mov
mov
loope
xchg
call
loopne
loopne
pusha
fcomip
mov
lds
mov
jns
jle
add
push
je
add
jge
arpl
mov
add
mov
in
lock
lcall
add
push
push
push
push
lea
push
push
call
add
nop
add
mov
xchg
hlt
jge
stos
mov
test
movsl
shl
ret
add
push
push
add
add
push
push
lea
push
push
push
push
lea
push
push
call
cltd
ret
mov
cmpsl
add
pop
push
test
mov
in
fs
rcl
adcb
loop
filds
jp
push
xlat
jl
pop
mov
jp
push
add
add
roll
add
mov
add
call
push
arpl
enter
cli
jl
fdivl
add
sub
pop
add
pop
push
push
push
call
add
jecxz
push
loopne
mov
mov
shl
ret
lahf
jl
js
cli
lret
mov
fwait
jns
add
popa
aad
mov
xchg
lahf
ljmp
add
add
cmpsl
testl
addl
add
add
add
scas
mov
xchg
add
sub
pop
mov
push
push
lea
push
lea
push
lea
push
call
jne
jl
xchg
add
cmpsb
add
add
nop
addr16
lock
movl
fs
insb
loop
add
push
fiadds
mov
pop
xchg
stc
jle
sub
pop
xor
push
push
push
push
push
call
bound
and
int3
mov
jmp
push
call
movsl
repnz
mov
and
addl
add
sub
pop
add
push
push
lea
push
lea
push
lea
push
push
call
push
addl
cli
pushf
pop
in
cmc
jmp
fs
shl
add
add
add
add
add
add
add
push
scas
mov
jno
add
pop
add
movsb
add
movsl
mov
add
bound
xchg
add
add
shr
add
add
xchg
cmpsl
sub
pop
push
mov
xor
push
push
push
push
push
push
push
call
pop
loopne
add
add
sahf
add
pop
test
iret
mov
add
push
movsl
test
mov
popl
pop
push
in
lcall
enter
call
lods
lods
add
mov
add
mov
jmp
add
fs
add
pusha
sub
pop
pop
push
push
push
push
push
call
add
mov
in
xchg
add
add
add
fcmovu
testl
mov
add
mov
mov
mov
leave
data16
out
rcl
out
add
sub
pop
rep
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
call
leave
fwait
lret
lds
bound
push
lods
add
pop
pop
out
add
jle
add
mov
mov
ret
test
rolb
mov
mov
lcall
push
push
push
lea
push
lea
push
call
add
add
add
insb
rclb
xchg
stos
add
test
lock
add
movsb
xchg
jge
fnsave
jae
outsl
push
cmpsl
stc
add
pop
add
sub
pop
mov
add
push
lea
push
push
call
add
add
fwait
push
add
out
add
add
add
out
add
jb
add
leave
arpl
hlt
bound
cwtl
bound
pop
movb
rolb
hlt
mov
nop
add
std
fiadds
add
add
add
add
add
loop
fsubr
scas
int
imul
add
sub
pop
add
push
push
push
push
call
jne
add
add
out
loope
mov
mov
cmpl
add
add
push
add
add
add
test
sub
pop
add
mov
push
push
lea
push
call
add
and
add
add
mov
fistpl
add
add
in
testl
add
arpl
out
add
stos
push
hlt
xchg
scas
jno
orl
add
sub
pop
xor
push
push
push
push
call
roll
add
imul
addl
xchg
jecxz
int
pop
jns
out
jo
std
stos
lret
add
add
pop
cld
icebp
flds
mov
in
add
shlb
cwtl
xchg
add
cmpsl
int3
and
add
lcall
les
add
push
push
lea
push
push
push
push
lea
push
push
call
pop
xchg
add
xchg
add
add
int3
add
je
gs
mov
sub
mov
mov
testb
add
outsl
mov
repnz
mov
rcrl
sub
pop
mov
xor
push
push
push
push
push
push
lea
push
call
lods
pop
xchg
add
int
je
add
cld
add
add
pop
jno
jecxz
mulb
push
xchg
add
mov
fadds
add
add
test
add
push
fdivr
add
mov
push
add
cmpsb
fmuls
push
int3
lds
mov
add
imul
push
sub
pop
mov
xor
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
add
add
add
lcall
jno
mov
mov
mov
iret
add
add
lahf
xchg
cltd
mov
xchg
add
pop
add
add
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
call
fldlg2
pop
add
pop
pop
mov
mov
fstl
stos
add
add
pop
stos
lods
ffreep
repnz
add
mov
testb
xchg
jecxz
testb
add
addr16
lret
ja
add
out
stos
mov
test
jp
repnz
popl
in
add
cmpsl
add
lock
pop
add
push
sub
pop
mov
push
push
not
push
and
add
lea
rol
shl
add
sub
shr
pop
shl
xor
lea
pop
push
push
lea
push
call
push
add
add
xchg
test
mov
lods
pop
xchg
cmpsl
mov
add
sahf
cld
aam
bound
jp
pop
add
add
xchg
pop
push
popa
stos
add
mov
mov
add
add
add
test
sub
pop
pushl
push
add
pop
call
push
add
lea
dec
pop
push
push
push
xor
sub
push
or
not
add
add
rol
shl
sub
ror
shr
pop
lea
pop
push
shr
pop
push
push
push
push
push
push
push
push
call
add
mov
add
gs
fucomp
aad
data16
leave
xchg
add
stos
add
xchg
imul
gs
push
clc
add
add
lods
hlt
add
enter
add
mov
add
lret
in
call
add
mov
lahf
add
add
stos
push
cltd
pop
push
add
cld
add
ljmp
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
les
add
push
mov
leave
test
mov
add
lock
add
cld
pop
mov
xlat
scas
add
add
in
mov
add
add
add
loop
add
ret
mov
mov
pop
call
push
push
push
push
push
push
lea
push
push
push
push
call
jns
repnz
roll
mov
add
add
fldl
push
ret
add
add
outsl
scas
scas
add
lcall
clc
push
add
lea
sub
pop
push
push
push
push
push
push
lea
push
call
add
int3
test
stos
shll
scas
add
add
jge
add
add
jnp
push
jno
in
imul
pop
hlt
push
add
dec
pop
add
push
rol
rol
ror
pop
add
add
push
sub
sub
add
ror
pop
mov
xor
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
out
add
sahf
cwtl
popf
add
cmpsl
push
into
cld
pop
rorb
mov
mov
add
shl
mov
add
xchg
add
jne
push
push
lea
push
lea
push
push
call
int3
add
add
pop
mov
aam
int3
pushf
cwtl
add
cli
add
add
add
mov
add
int
add
jne
mov
enter
aad
mov
in
in
lcall
push
ror
pop
mov
push
push
lea
push
lea
push
call
pusha
mov
add
ja
shl
add
mov
mov
add
cmpsb
add
out
addr16
add
roll
sub
pop
xor
push
push
lea
push
push
push
push
push
call
fs
into
jle
add
add
flds
push
pop
mov
add
add
add
adc
aad
add
neg
scas
std
in
mov
jmp
add
add
push
shr
pop
add
push
not
dec
add
pop
pop
push
lea
not
pop
mov
xor
push
inc
pop
rep
mov
push
push
push
call
into
cli
add
pop
add
push
movsl
add
add
xchg
push
lret
stos
fimull
scas
add
test
faddl
mov
scas
mov
lcall
or
push
push
push
lea
push
push
push
call
add
arpl
shrb
add
add
pop
test
popa
add
bound
testl
add
add
add
add
add
mov
add
call
add
add
enter
pop
or
je
push
push
push
push
call
add
hlt
in
std
sahf
ficoms
cmpsl
mov
mov
add
mov
subb
lcall
mov
add
add
push
stc
add
add
mov
add
add
stos
jae
add
add
sub
pop
mov
xor
push
push
push
push
push
push
lea
push
push
call
sub
shll
push
jge
in
push
mov
add
jecxz
scas
ljmp
add
add
add
fs
xchg
repnz
outsl
add
add
repnz
nop
add
xlat
push
jle
sub
pop
mov
push
push
push
lea
push
push
push
call
push
add
mov
jb
mov
add
add
push
imul
aad
adcb
add
lcall
adc
push
push
push
lea
push
push
push
lea
push
call
add
ja
stos
imul
loop
mov
int
add
fs
sub
pop
add
push
lea
push
push
push
push
push
call
dec
add
pop
add
bound
add
mov
mov
add
add
iret
push
clc
cwtl
add
add
add
out
add
call
int3
aad
add
test
cwtl
add
add
add
lcall
repnz
lea
push
push
push
push
lea
push
push
push
call
push
pop
add
add
cld
addb
xlat
add
mov
lods
add
add
cmc
jnp
add
insb
add
push
add
add
enter
lds
clc
filds
mov
scas
add
add
xchg
add
mov
pop
sahf
roll
sahf
clc
add
fldl
roll
in
sub
pop
add
push
push
sub
add
xor
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
call
cwtl
add
add
add
fiaddl
add
mov
sahf
mov
pop
pop
incb
add
sub
mov
mov
push
stc
add
add
stos
add
add
icebp
mov
cli
fildl
add
movl
int3
add
repnz
mov
fdivr
lcall
add
push
push
push
push
push
lea
push
lea
push
push
call
xchg
add
movsb
fcoms
pop
xchg
fiaddl
add
popa
add
add
aad
add
insb
cmc
add
js
sbbb
lret
push
scas
pop
jnp
jge
test
xchg
cmpsb
push
test
add
xchg
jmp
sbbb
jne
add
imul
add
lcall
les
push
push
lea
push
push
lea
push
call
out
in
add
nop
mov
test
mov
add
jle
mov
jge
movsb
add
add
leave
add
rcrl
scas
sti
add
add
xlat
mov
hlt
cmpsl
add
roll
data16
jmp
int
push
sub
pop
add
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
leave
scas
addl
and
pop
add
pop
mov
xchg
add
add
ret
addr16
mov
xchg
cli
into
sub
pop
pop
push
sub
pop
rep
push
shl
rol
pop
mov
push
push
push
call
push
addr16
add
push
push
pop
jle
mov
mov
int3
into
add
scas
push
mov
push
lahf
jl
push
pop
mov
add
test
imul
add
aam
rcr
stos
mov
fildl
lcall
or
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
loopne
mov
add
out
add
add
add
loope
mov
add
add
movsl
test
popf
sub
pop
add
push
push
push
lea
push
push
push
push
call
call
add
add
int3
add
movsl
popf
add
add
xlat
cmpsb
mov
add
add
jne
add
add
sarl
add
scas
pusha
mov
movsb
aam
add
leave
je
mov
push
inc
pop
add
push
ror
pop
add
rep
push
sub
dec
sub
sub
pop
pop
push
push
add
inc
shl
push
sub
add
ror
xor
sub
dec
pop
sub
add
sub
pop
push
lea
pop
pop
push
not
add
pop
mov
mov
push
not
inc
sub
xor
pop
mov
jmp
push
lea
push
push
push
lea
push
call
out
std
add
fadds
into
add
rcr
xorb
jne
add
add
int3
leave
mov
add
mov
add
lock
int3
add
jp
mov
add
add
jle
addb
mov
fisttpll
xchg
in
test
addl
add
lcall
push
add
rol
sub
add
pop
mov
push
lea
push
call
xchg
add
add
stos
cmpsb
cmc
add
ja
jmp
jb
xchg
in
push
add
add
add
add
in
mov
mov
add
add
nop
add
out
in
clc
lcall
cld
push
lea
push
push
push
push
push
push
push
call
add
shl
jl
divl
negb
test
cmc
add
add
add
add
movl
add
std
roll
add
jae
shrl
cmpsl
add
out
push
jle
stos
add
notb
add
add
imul
jmp
add
in
loopne
push
push
lea
push
push
push
push
push
push
call
xchg
sti
add
add
cwtl
mov
mov
cld
add
push
mov
add
add
add
add
hlt
jae
add
add
add
fdivl
add
rcr
iret
in
jo
add
stos
sub
pop
push
push
dec
pop
push
push
not
pop
push
push
rol
sub
dec
shr
pop
mov
pop
push
push
push
call
lret
movb
fildl
ret
imulb
add
add
mov
fiadds
pop
add
imul
add
xchg
mov
arpl
icebp
jmp
add
in
hlt
pop
pop
push
shr
pop
pop
push
lea
push
call
add
push
add
jns
out
add
andl
insb
roll
mov
iret
add
movsl
imul
mov
hlt
add
cmpsb
push
add
push
xchg
add
cmc
into
add
mov
lcall
leave
push
push
push
lea
push
push
push
lea
push
push
call
add
jb
jbe
in
mov
jp
cmpsb
add
cltd
int3
fistpll
mov
push
push
clc
stc
divb
add
push
add
jecxz
add
jbe
mov
add
out
in
test
jp
pushf
mov
add
stos
xchg
add
add
addl
jecxz
in
loopne
lcall
or
push
ror
add
pop
push
push
xor
sub
not
pop
mov
push
lea
push
call
arpl
push
lods
mov
jge
mov
popl
out
mov
mov
add
add
add
xchg
push
mov
roll
leave
xchg
addl
fsubrl
insb
add
pushf
jae
add
sti
test
add
pop
sub
pop
add
push
push
push
push
push
push
lea
push
push
lea
push
call
test
jns
bound
mov
mov
add
jge
pop
add
add
add
add
pusha
add
push
test
push
movsb
cmpsl
add
add
add
fs
int
add
test
lock
pusha
lods
mov
xchg
add
lods
ret
mov
push
rolb
add
add
movsl
sub
pop
push
push
sub
rol
pop
push
push
push
push
push
push
push
call
add
add
xchg
add
add
add
add
jge
mov
fwait
addb
cmpsb
jge
in
stos
add
sub
pop
push
push
lea
push
push
lea
push
lea
push
push
call
mov
add
add
cmpsb
push
bound
add
add
testb
jle
pop
add
mov
mov
add
decb
test
lods
add
add
add
add
pushf
mov
into
cmc
pop
sarl
add
add
call
movl
push
push
call
add
popf
pop
in
rorl
jl
lret
imull
add
call
cld
add
pop
add
add
add
out
pop
in
add
jp
in
add
mov
mov
add
mov
pusha
add
lods
jnp
add
jne
add
cmpsb
jne
sub
pop
addl
test
je
push
ror
rol
shr
pop
mov
push
inc
dec
add
not
pop
pop
pop
push
lea
push
lea
push
push
push
call
add
jge
add
fiaddl
lret
add
add
add
mov
add
leave
leave
add
jge
jl
mov
scas
add
add
xchg
add
lahf
jno
add
pop
incb
add
mov
lcall
pop
push
lea
push
push
push
push
push
push
push
push
call
add
mov
mov
fadds
add
ja
add
xchg
add
jbe
push
lds
mov
mov
add
pop
imul
addl
xchg
jge
repnz
ja
add
sub
pop
leave
ret
push
lea
push
lea
push
lea
push
call
scas
add
fnstsw
push
nop
mov
mov
add
arpl
mov
testb
add
add
add
jl
add
add
mov
pop
pushf
add
mov
into
add
hlt
jbe
pop
mov
cmpsb
add
in
lock
push
push
inc
pop
mov
push
push
push
call
leave
fcoms
add
add
add
fiaddl
jge
add
js
add
in
lcall
in
add
add
lds
add
lcall
mov
add
push
add
stc
pushf
popf
jge
add
add
hlt
out
sub
pop
add
push
push
push
push
push
push
call
icebp
add
add
add
loope
pop
push
fidivrs
lods
add
add
loop
mov
add
lcall
push
sub
shl
pop
push
push
push
lea
push
push
push
push
push
call
popa
mov
fwait
int3
add
pop
lock
cmpsl
pop
add
add
xlat
incb
clc
xchg
jbe
scas
leave
mov
test
clc
icebp
add
mov
arpl
add
add
add
loop
add
sbbb
add
push
add
sub
pop
push
push
shr
pop
testl
push
dec
pop
addl
push
ror
sub
add
pop
push
push
inc
not
ror
shl
pop
call
push
xor
sub
not
shl
pop
mov
pushl
push
shl
add
pop
push
push
push
lea
push
lea
push
call
jne
stos
add
test
loop
add
add
add
add
add
add
ljmp
stos
push
lret
aam
outsl
add
add
cli
mov
hlt
pop
call
push
add
add
pop
cmpl
jne
push
sub
pop
pop
push
push
push
push
lea
push
push
push
push
call
sarl
xchg
add
mov
mov
jae
add
add
mov
pop
xchg
mov
xchg
mov
ror
add
push
sub
pop
pop
pop
push
sub
add
pop
pop
push
lea
push
lea
push
push
push
call
pusha
add
push
add
mov
mov
popf
addr16
sahf
movsl
icebp
iret
imul
pop
data16
add
add
jecxz
imul
lcall
push
push
lea
push
lea
push
call
in
mov
jmp
int3
imul
sbbb
add
cmpsl
add
add
add
icebp
filds
xchg
sahf
fidivl
faddl
add
add
add
add
mov
jno
lea
ret
push
push
shl
rol
pop
mov
push
pop
add
push
lea
push
push
push
push
push
push
call
push
add
fwait
shlb
ret
add
add
mov
iret
je
jo
out
ja
push
stos
mov
in
add
add
in
movl
jp
add
add
mov
in
in
lcall
push
push
push
push
call
insb
repnz
jle
mov
add
add
mov
mov
fisttpl
add
xlat
sub
pop
push
push
push
not
pop
push
push
sub
pop
movl
push
push
rol
sub
pop
call
push
push
push
lea
push
push
push
push
push
call
xchg
add
into
cltd
cli
addr16
add
loope
fiadds
add
imul
je
add
jo
jp
add
arpl
ret
fcom
test
mov
lcall
mov
add
int3
add
data16
add
add
addb
add
lcall
sar
incl
lea
shr
add
ror
pop
cmpl
jne
push
sub
sub
inc
pop
pop
push
shr
dec
pop
pop
push
lea
push
push
lea
push
lea
push
lea
push
call
xchg
add
cmpsl
cmpsb
add
add
add
into
add
jnp
add
sahf
add
mov
add
jnp
imul
int3
sub
pop
pop
push
push
push
push
push
push
push
lea
push
call
add
in
add
add
addr16
iret
fldt
outsl
add
add
add
add
jbe
cwtl
jo
mov
jmp
ror
add
add
out
add
jb
into
add
add
push
pop
int3
xchg
push
add
add
imul
pop
pop
leave
push
not
xor
add
pop
ret
push
push
push
push
push
lea
push
call
add
add
test
lods
mov
in
jle
lret
add
add
xchg
mov
mov
add
add
addl
add
fwait
jp
test
enter
lcall
in
push
lea
push
push
lea
push
push
push
call
add
add
addl
push
add
lea
add
add
add
push
pushf
add
add
add
rolb
add
in
call
push
pop
push
push
sub
pop
push
push
push
push
call
mov
jge
add
add
fidivs
loop
test
add
outsl
popf
jne
add
add
add
mov
popa
js
add
lret
add
push
sahf
add
xchg
data16
push
push
push
push
push
push
push
push
lea
push
push
push
call
fnsave
add
fistpll
add
andl
aad
jmp
fwait
add
add
mov
mov
add
add
xchg
mov
add
add
ja
add
add
mov
add
pusha
push
add
sti
add
in
roll
cwtl
clc
pop
pop
mov
lea
push
shl
rol
pop
sub
push
add
sub
shl
pop
mov
shr
push
push
push
lea
push
push
push
push
push
push
call
add
xchg
xchg
push
movsb
mov
test
arpl
cli
push
addb
add
int3
add
add
add
call
testb
testb
add
xchg
cmc
cmpsb
js
imul
xlat
add
add
mov
xchg
jne
add
lcall
inc
or
add
add
xor
pop
mov
push
ror
sub
pop
mov
add
push
add
pop
add
push
push
push
push
lea
push
push
push
lea
push
call
cltd
mov
add
add
add
jp
xchg
add
mov
loop
mov
ja
iret
add
add
add
add
pop
repnz
mov
mov
repnz
scas
sub
pop
mov
mov
push
shl
add
pop
cmp
jne
push
ror
pop
cmp
jne
mov
push
push
lea
push
push
push
push
push
push
push
call
add
loopne
push
xchg
fisubs
mov
in
jae
add
push
push
test
les
add
jmp
add
js
add
add
aad
mov
sub
pop
movl
jmp
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
jmp
add
clc
add
add
out
add
int3
ret
ja
cmc
fs
arpl
xchg
ficoms
push
cmc
mov
add
jbe
add
add
add
in
aad
fldt
sub
pop
mov
mov
push
xor
inc
pop
sub
jne
mov
push
push
push
push
lea
push
push
lea
push
lea
push
call
test
add
add
in
outsl
mov
fs
addl
xor
clc
in
jge
add
ljmp
add
add
mov
lcall
add
add
jmp
push
shr
shr
add
pop
mov
push
push
call
add
pop
mov
push
aam
fadds
mov
repnz
add
pop
mov
popa
in
jecxz
leave
jbe
call
mov
add
test
in
je
mov
in
mov
pushf
sub
pop
mov
push
push
push
push
push
push
push
push
push
call
add
filds
filds
mov
loop
out
pop
mov
add
xchg
mov
add
add
movsb
les
add
add
addb
roll
pop
test
ret
sahf
arpl
addb
add
xlat
add
pop
cmp
jne
push
push
push
push
lea
push
push
lea
push
push
push
push
call
incb
push
fucomip
add
fsts
mov
add
add
push
add
mov
call
add
add
mov
push
push
push
call
gs
pop
xchg
add
xchg
jl
add
mov
scas
add
add
add
jae
idivl
sbbb
cmpsl
or
mov
mov
lahf
add
add
in
decb
mov
test
mov
test
pop
imul
pop
movl
jmp
push
sub
rol
pop
mov
push
push
push
push
push
push
lea
push
call
mov
loope
mov
add
lahf
sti
add
gs
add
imul
mov
add
movsb
mov
out
add
add
imul
add
testb
js
add
test
lea
lea
pop
mov
movl
push
push
push
lea
push
push
call
addl
int
mov
loop
add
xchg
lds
mov
scas
lret
xchg
in
popf
scas
add
aam
jecxz
add
cmpl
xchg
add
cli
mov
add
sti
data16
add
call
mov
add
add
add
add
in
in
lcall
sub
add
pushl
push
sub
pop
pop
push
ror
pop
mov
push
push
push
push
push
lea
push
push
call
add
pop
add
pop
mov
cwtl
add
mov
add
aam
add
fwait
jmp
add
add
roll
js
xchg
testl
sbb
inc
sub
sub
pop
mov
push
push
sub
add
sub
push
xor
add
lea
sub
pop
shl
pop
push
sub
xor
pop
push
push
inc
shr
pop
call
push
not
sub
shl
pop
cmpl
je
push
push
shr
not
push
xor
add
rol
sub
shl
pop
shr
sub
shl
rol
pop
push
push
push
push
push
push
call
add
mov
add
pusha
lds
xchg
data16
cmpsb
add
add
roll
add
mov
js
add
add
shlb
push
pop
add
add
pop
add
leave
add
add
push
pusha
add
mov
mov
lcall
push
not
inc
sub
ror
pop
call
push
ror
shr
pop
cmpl
je
push
push
shr
push
and
add
rol
inc
sub
not
pop
add
rol
pop
push
push
push
push
push
push
push
call
jbe
iret
jnp
subl
add
test
add
add
add
jno
mov
cltd
adcb
xchg
add
jmp
addb
cwtl
mov
add
lret
sar
imul
push
lea
push
lea
push
push
push
lea
push
push
push
call
std
add
mov
pop
add
in
push
fwait
addb
mov
mov
add
add
jbe
add
stos
add
pop
add
add
add
jp
add
add
add
mov
add
jle
add
jnp
mov
call
push
push
call
mov
fwait
add
jbe
add
add
add
mov
add
pop
lret
mov
fiadds
pop
out
into
push
jbe
lock
mov
push
add
add
add
add
out
popa
add
stos
add
fistl
push
pusha
repnz
in
test
xchg
sub
pop
cmpl
je
push
push
shr
push
sub
add
add
ror
add
shl
sub
ror
add
pop
shr
add
rol
add
pop
push
shr
xor
not
pop
push
call
push
not
pop
cmpl
je
push
push
shl
inc
inc
push
sub
add
dec
sub
not
shl
pop
not
lea
sub
pop
push
pop
push
call
push
xor
add
sub
pop
cmpl
je
push
push
add
push
or
inc
add
ror
sub
not
pop
lea
sub
shl
rol
pop
push
lea
inc
pop
push
push
push
call
add
add
ljmp
in
pushf
add
ja
cmpsb
cmpsl
movsl
pop
jp
js
int3
add
add
movb
ret
mov
jb
movsb
add
xchg
fadds
loopne
add
mov
lret
add
push
add
mov
mov
mov
sub
pop
call
push
push
call
add
lea
xchg
add
add
add
add
add
mov
add
mov
add
add
jl
add
pop
mov
jecxz
int
out
mov
jb
mov
mov
add
add
fistpl
rcll
sub
pop
cmpl
je
push
push
dec
lea
push
or
not
add
sub
shr
sub
xor
shr
not
pop
shr
rol
pop
push
ror
add
lea
pop
push
call
push
rol
pop
cmpl
je
push
push
xor
rol
push
push
pop
add
not
sub
sub
dec
sub
add
rol
pop
inc
pop
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
mov
xchg
add
add
fisubl
xchg
push
lret
xchg
mov
scas
add
add
add
les
loopne
mov
mov
stc
pop
in
mov
add
test
add
divl
add
add
add
sub
pop
push
push
sub
dec
pop
call
push
ror
sub
pop
cmpl
je
push
push
xor
push
sub
add
add
sub
pop
shl
pop
push
lea
push
lea
push
call
in
popa
add
shl
xchg
data16
add
idivb
lahf
add
add
add
in
push
add
movsl
rolb
jp
add
lods
add
ficoml
xchg
arpl
xchg
fdivrp
add
xchg
add
add
in
add
loopne
mov
cwtl
add
lds
cmpsb
add
sub
pop
push
push
push
push
push
lea
push
push
call
testb
movsl
ficoms
add
add
add
enter
js
add
add
add
int
mov
add
add
call
jp
add
add
add
push
push
push
push
push
call
js
add
push
cld
adc
jbe
pop
insb
popa
add
mov
cmpsl
mov
jl
ljmp
shl
mov
cwtl
icebp
sub
pop
cmpl
je
push
push
lea
push
xor
add
add
sub
dec
ror
dec
pop
lea
add
ror
pop
push
push
lea
push
push
push
push
call
loop
xchg
mov
add
mov
int3
jmp
add
add
mov
cmpsb
jae
nop
pop
fcom
cwtl
cli
cwtl
push
mov
add
add
jae
in
push
shr
lret
add
add
sub
pop
push
push
lea
push
push
call
les
xlat
add
pusha
add
mov
pop
cmc
add
push
push
popa
je
fiaddl
add
fistl
lods
add
jnp
addl
mov
jne
add
add
add
mov
movsb
in
add
movsb
shrb
divl
xchg
fstpt
lcall
mov
add
cmpl
je
push
push
ror
rol
push
or
inc
add
lea
sub
sub
dec
sub
inc
pop
xor
pop
push
add
pop
push
push
inc
not
ror
pop
call
push
dec
pop
cmpl
je
push
push
dec
rol
push
or
not
add
add
sub
rol
xor
pop
rol
pop
push
push
lea
push
push
push
push
push
push
call
mov
add
add
add
mov
in
xchg
jp
add
add
add
add
mov
mov
std
jo
je
add
mov
add
cli
add
ljmp
add
mov
in
loopne
push
call
push
push
push
lea
push
call
xchg
in
add
add
out
jmp
scas
xchg
xchg
lret
cwtl
mov
push
add
out
xchg
add
add
push
add
pop
fucompp
add
push
faddl
xchg
add
stos
clc
cmpsl
xchg
mov
loop
xchg
push
lea
in
lock
lcall
js
jmp
les
je
push
push
ror
push
sub
add
xor
sub
ror
lea
pop
add
add
not
add
pop
push
not
rol
pop
push
call
push
sub
ror
pop
cmpl
jne
push
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
lret
jnp
lock
loop
add
std
cmpl
push
outsl
arpl
xchg
add
add
add
add
pop
add
pop
mov
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
lcall
out
test
xchg
add
jns
add
ror
push
xchg
mov
add
rcr
xchg
iret
pop
xchg
jle
xorl
mov
add
jge
add
add
mov
sahf
into
mov
jns
mov
cltd
add
push
js
add
fcomps
add
add
add
push
lea
push
lea
push
lea
push
push
push
push
push
call
xchg
rolb
addb
add
int
pop
jmp
add
mov
push
icebp
shr
fadds
add
enter
cli
add
stos
jnp
add
cld
push
cmpsb
testl
ja
les
addr16
mov
mov
movb
enter
fdivr
lcall
push
add
add
rclb
dec
lea
pop
pop
pop
push
inc
dec
shr
pop
pop
pop
push
push
push
push
push
push
push
push
push
call
cltd
roll
scas
add
add
add
ret
bound
add
cltd
add
mov
add
cmpsl
outsl
pop
fidivrl
filds
add
shlb
mov
add
add
shll
add
out
in
fcompl
ret
push
push
push
push
push
lea
push
push
push
push
call
stc
add
add
fmulp
jo
xchg
cld
add
pop
add
add
mov
lods
mov
add
xlat
add
add
add
add
push
jae
add
lea
shlb
push
test
ja
mov
add
mov
jb
add
add
add
fidivs
in
fcompl
mov
push
lea
push
push
call
cli
add
pop
std
push
lret
push
rcl
mov
add
add
aad
add
test
add
add
add
pop
add
push
push
push
push
push
call
add
add
ljmp
int3
push
out
bound
hlt
fsub
mov
xchg
adcb
add
add
pop
jle
mov
lods
mov
jmp
sub
pop
cmpl
jne
push
push
lea
push
xor
add
ror
sub
pop
shl
not
shl
pop
push
rol
inc
pop
pushl
call
push
push
lea
push
call
repnz
jp
addr16
ljmp
add
fistpl
loop
add
stos
loope
stos
pushf
add
in
mov
add
add
ja
sub
pop
push
push
add
rol
pop
call
push
lea
push
push
call
push
scas
jmp
jecxz
cmpsb
cld
test
in
add
incb
jnp
add
xchg
imul
test
popa
hlt
cmpsb
bound
jns
add
add
mov
mov
fdivrs
movsb
add
add
push
lods
cld
frstor
add
fnsave
imul
lcall
rcrl
add
cmpl
je
push
push
push
lea
push
call
nop
data16
add
or
add
add
hlt
add
add
push
add
add
aad
faddl
add
fstp
cwtl
roll
pop
lahf
jmp
icebp
outsl
xchg
add
sub
add
mov
jge
add
add
push
push
push
push
push
push
push
push
push
push
call
nop
add
add
mov
add
add
add
mov
add
mov
roll
popl
add
mov
add
push
add
add
add
cmpsl
add
add
gs
sub
pop
leave
add
push
lea
push
push
lea
push
push
call
popa
cltd
imul
mov
ljmp
push
lret
add
pop
mov
pop
add
add
add
mov
aam
imul
mov
add
cwtl
add
mov
call
sub
pop
pop
push
inc
pop
pop
pop
push
lea
push
push
push
push
lea
push
call
sti
mov
mov
add
add
mov
mov
add
add
pop
sbb
imul
ljmp
add
add
mov
add
add
shrb
add
mov
rolb
lcall
leave
push
sub
inc
sub
pop
add
push
push
lea
push
call
sahf
leave
add
movl
mov
add
mov
add
popf
xlat
add
add
out
add
mov
pop
mov
push
in
mov
push
pop
add
scas
lret
add
lcall
jmp
push
push
lea
push
push
push
push
push
lea
push
push
push
call
aad
lcall
add
add
cltd
ror
add
add
mulb
add
xlat
add
xchg
push
cmpb
add
loope
xlat
add
scas
add
jno
pop
imul
in
fcomps
jge
add
test
outsl
addr16
not
sub
sub
push
or
inc
add
not
sub
sub
dec
ror
pop
sub
add
pop
push
push
push
push
call
iret
lds
pusha
repnz
addl
mov
mov
add
mov
into
add
add
add
jne
push
push
push
push
lea
push
lea
push
push
push
push
call
sahf
arpl
add
push
insb
stos
jl
cmpsb
jle
pop
test
add
lock
popf
fidivrl
jns
pop
add
test
add
in
push
mov
mov
lret
cld
loopne
mov
mov
add
mov
add
lods
sub
pop
call
push
sub
pop
push
push
push
push
push
call
jns
aad
test
and
cmpsl
add
add
ret
mov
gs
pop
add
add
xchg
add
std
je
jno
mov
in
lock
lcall
rclb
movsb
xlat
aam
push
push
push
push
push
call
add
add
popa
add
rolb
add
je
pop
ret
test
ljmp
add
add
cmpsl
push
out
xlat
add
imul
mov
mov
add
test
jnp
add
add
mov
add
jno
lock
mov
fwait
add
lcall
xchg
sbb
add
ret
rol
sub
pop
cmpl
jne
mov
push
push
push
lea
push
call
icebp
add
lods
sahf
scas
test
test
add
add
add
clc
fwait
pushf
add
addb
pop
ret
fcmovnb
xorb
je
add
test
lods
arpl
xchg
lea
jl
in
lock
lcall
add
add
push
add
sub
pop
jmp
push
sub
add
pop
push
push
push
add
lea
shl
push
sub
add
rol
sub
sub
add
shr
pop
sub
pop
push
inc
lea
pop
pushl
push
sub
inc
shl
pop
call
push
dec
shr
xor
pop
call
push
push
sub
shr
inc
xor
push
xor
add
not
shr
sub
inc
pop
add
pop
push
sub
not
inc
pop
pushl
push
lea
push
call
lcall
cmc
in
pop
rol
mov
add
outsl
add
add
mov
stc
add
pop
fwait
mov
je
test
add
add
movb
sti
add
movsl
in
enterw
leave
lock
rolb
pop
call
call
push
push
lea
dec
add
sub
push
push
pop
add
xor
sub
inc
ror
pop
sub
pop
push
shr
add
shl
inc
pop
pushl
push
lea
push
push
push
push
push
call
fidivrs
test
add
roll
add
add
mov
ror
pushf
rolb
jns
fwait
add
sub
pop
call
push
sub
dec
pop
call
push
push
ror
ror
inc
shl
push
sub
add
dec
ror
dec
not
sub
shr
shr
pop
xor
pop
push
push
push
lea
push
push
push
lea
push
push
call
add
add
push
js
mov
int3
js
push
mov
add
popa
cmpsb
add
push
test
pushf
in
add
xchg
outsl
add
pop
add
add
fsts
int
jmp
add
mov
shlb
repnz
mov
pop
popa
jle
mov
filds
mov
mov
pop
loope
in
loopne
pushl
push
push
push
push
lea
push
push
push
call
add
jge
mov
add
frstor
add
add
add
add
lea
add
add
add
lcall
push
sub
pop
call
push
shl
rol
pop
call
push
push
dec
inc
lea
push
sub
add
lea
sub
dec
pop
lea
inc
pop
push
rol
sub
pop
pushl
push
shr
dec
pop
call
push
inc
pop
call
push
push
add
push
and
add
add
sub
inc
pop
shl
sub
ror
pop
push
push
lea
push
call
add
in
testb
add
leave
add
scas
outsl
loope
sti
js
xchg
pushf
fdivrs
add
xchg
lret
push
scas
add
mov
in
add
add
bound
add
lcall
jne
call
push
push
push
push
push
push
lea
push
push
push
call
scas
repnz
rorl
xchg
movl
jne
add
add
shll
aad
in
sub
pop
call
push
push
sub
xor
xor
push
or
not
add
shr
rol
rol
sub
inc
pop
sub
sub
pop
push
not
rol
pop
pushl
push
xor
shl
pop
call
push
sub
pop
call
push
push
rol
sub
dec
push
or
not
add
sub
xor
sub
sub
sub
lea
pop
dec
lea
not
rol
pop
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
jae
add
stc
add
lahf
out
add
cmpsb
push
xchg
jmp
add
add
ret
mov
add
mov
scas
cld
lea
scas
add
add
jne
call
push
not
pop
call
push
push
sub
shl
push
xor
add
shr
sub
shl
sub
dec
inc
pop
sub
rol
pop
push
push
lea
push
lea
push
push
call
add
add
push
ret
push
sti
fadds
aad
add
sar
mov
add
roll
mov
test
add
loop
mov
add
in
in
add
testb
in
add
add
mov
pushl
push
push
push
push
call
xchg
imul
add
repnz
mov
mov
scas
add
pop
add
mov
xchg
xchg
push
add
add
add
out
add
roll
jo
jge
pushf
out
cltd
add
cmc
pop
xchg
push
sub
pop
call
push
add
sub
sub
pop
call
push
push
rol
sub
push
push
pop
add
dec
sub
ror
pop
add
lea
shl
add
pop
push
ror
sub
not
pop
pushl
push
ror
pop
call
push
push
lea
push
push
lea
push
call
add
push
push
mov
add
cld
int3
mov
sbb
cmp
pop
ja
imul
lret
scas
xchg
add
jp
imul
add
add
nop
xchg
add
stos
add
add
add
test
les
xchg
add
add
nop
cwtl
xchg
add
add
fildl
sub
pop
lea
push
push
push
push
lea
push
push
call
addb
je
add
pusha
add
xlat
ret
add
lock
lret
scas
out
jmp
mov
js
sti
pop
out
add
add
push
add
add
adc
pushf
add
jecxz
push
filds
jp
add
add
cmpsb
add
fs
stos
scas
lret
jl
add
sub
pop
push
push
dec
inc
pop
call
push
push
sub
ror
add
push
and
add
xor
sub
sub
pop
dec
add
not
pop
push
lea
push
push
push
lea
push
lea
push
push
call
pop
shlb
aam
add
add
add
ret
into
push
mov
stos
ljmp
test
jnp
pusha
clc
sub
pop
pushl
push
rol
pop
call
call
push
push
add
not
push
or
not
add
rol
add
rol
sub
rol
shr
pop
add
shr
pop
push
push
lea
push
push
push
push
call
in
add
pop
repnz
add
add
outsl
jbe
ja
add
stos
fwait
add
add
enter
jge
in
add
pop
push
add
rclb
pushl
call
push
push
lea
push
push
push
push
push
push
push
push
call
add
mov
mov
add
sahf
add
add
hlt
rolb
add
adcb
add
lods
cmpsl
mov
pushf
add
add
in
js
mov
flds
add
jl
add
lcall
shrb
and
push
add
lea
ror
push
push
pop
add
shl
sub
sub
ror
sub
inc
sub
add
pop
inc
sub
shr
pop
push
push
push
push
push
lea
push
push
push
push
push
call
add
jecxz
loop
xchg
xlat
les
add
jns
imul
mov
loope
sarb
mov
jnp
xchg
mov
jne
imull
jecxz
add
mov
les
bound
pop
add
sub
pop
pushl
push
push
push
lea
push
push
push
push
call
test
add
add
xlat
add
movsl
test
cwtl
lret
add
pushf
add
xchg
enter
lret
js
clc
imul
mov
push
mov
lds
add
add
ficoml
lds
in
add
add
loopne
ja
add
call
lea
push
push
push
push
push
push
push
push
call
add
add
push
add
add
loopne
pushf
add
ja
add
popf
js
push
sbb
jbe
add
add
push
add
add
out
add
mov
out
fsubrs
add
push
popf
mov
pusha
mov
popf
add
fdivr
lcall
rorb
ljmp
addr16
push
xor
dec
add
add
push
or
inc
add
shl
ror
add
sub
lea
pop
sub
pop
push
not
pop
pushl
push
inc
dec
pop
call
push
shr
not
pop
push
call
push
push
rol
push
xor
add
add
shl
sub
rol
shr
pop
inc
rol
pop
push
push
push
lea
push
push
call
mov
pop
add
jns
jge
cmpsb
add
test
add
xchg
out
mov
pop
jns
clc
addl
or
ljmp
call
call
push
push
lea
push
push
push
push
call
add
faddl
std
loopne
jbe
aad
cwtl
jae
out
add
mov
xchg
add
push
add
mov
loope
mov
std
incb
add
lahf
cmc
sub
pop
mov
push
push
inc
inc
rol
push
push
pop
add
sub
add
sub
pop
lea
add
xor
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
sti
add
fwait
mov
jno
cmpsb
mov
add
mov
add
in
add
lea
add
add
xchg
add
pop
aam
add
add
add
add
mov
test
mov
sub
pop
pushl
push
push
push
push
push
push
push
push
call
test
std
mov
fldenv
mov
add
lret
fucomip
add
add
mov
add
pop
push
enter
mov
push
ret
xchg
add
clc
pop
out
pop
add
cmp
add
push
push
not
ror
add
sub
pop
pushl
call
push
push
not
add
shr
push
and
add
not
add
add
dec
sub
add
xor
pop
pop
push
lea
push
push
push
lea
push
push
push
call
add
shlb
js
filds
xchg
pop
je
add
add
mov
hlt
lea
lea
ror
fs
call
add
add
imul
in
add
scas
add
add
mov
sub
pop
pushl
call
push
push
dec
add
sub
add
push
or
inc
add
lea
sub
shl
sub
pop
shr
inc
shl
pop
push
push
sub
push
xor
add
add
inc
shl
sub
sub
pop
shl
pop
push
sub
sub
sub
pop
call
push
push
sub
push
and
add
inc
sub
sub
add
not
add
sub
pop
sub
ror
rol
sub
pop
push
shr
pop
pushl
push
shl
pop
call
mov
push
not
rol
shr
pop
lea
push
pop
lea
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
leave
add
add
pushf
add
push
lahf
add
pop
add
ja
xchg
flds
add
add
xchg
add
int
add
add
add
mov
add
xchg
add
subb
loop
add
insb
rcrl
test
lcall
push
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
lock
pushf
add
aam
adcb
shl
add
shll
lea
cld
add
pop
add
add
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
add
mov
mov
mov
lods
add
cld
fldl
pop
add
add
add
imul
lods
jmp
in
fdivr
lcall
add
cmp
iret
xchg
pop
push
push
xor
xor
pop
pushl
push
shl
pop
push
push
push
push
push
push
call
add
hlt
add
rcrl
imul
add
add
fsub
addl
pop
loop
popl
mov
add
cwtl
sub
pop
call
push
push
not
inc
push
sub
add
add
dec
shr
xor
sub
shr
shl
pop
add
rol
dec
add
pop
push
push
lea
push
push
push
call
xchg
add
add
clc
in
clc
cld
add
pop
mov
frstor
repnz
add
pop
add
imul
in
movsb
add
int3
enter
push
arpl
gs
arpl
mov
xchg
pop
test
add
addb
add
pop
push
arpl
mov
fldenv
sub
pop
pushl
push
lea
push
push
push
lea
push
push
push
call
add
idivl
lcall
add
arpl
cwtl
pop
xor
out
add
test
add
stc
add
add
jecxz
sub
pop
call
call
push
push
push
push
lea
push
call
fs
add
add
stos
in
imul
add
sti
lcall
fmul
cld
xchg
movl
sub
pop
mov
pop
push
sub
pop
dec
jne
call
push
push
shr
sub
push
or
not
add
xor
xor
not
sub
inc
pop
shl
rol
pop
push
push
push
call
xchg
ret
pushf
add
add
mov
leave
jecxz
ljmp
leave
lcall
add
test
add
push
add
add
xchg
add
add
out
hlt
cltd
xchg
repnz
cmpsl
xchg
cld
sub
pop
pushl
call
push
push
lea
push
call
fisubl
add
add
add
add
add
xchg
movsl
stos
mov
ljmp
add
add
out
mov
in
hlt
pop
push
push
push
push
call
js
jle
add
add
add
mov
xchg
in
push
xchg
iret
popf
jmp
enter
jae
add
out
frstor
add
shlb
add
roll
add
add
in
lea
hlt
pop
call
mov
push
push
call
out
add
add
add
mov
add
mov
mov
roll
jmp
add
add
mov
lock
mov
add
add
add
pop
add
push
mov
js
mov
add
sarb
imul
lret
leave
addl
cmpsl
out
mov
add
add
add
sub
pop
lea
push
push
lea
sub
push
or
inc
add
add
shr
not
sub
pop
rol
add
sub
ror
pop
push
shl
pop
pushl
call
push
inc
pop
push
call
push
push
sub
push
xor
add
lea
sub
shl
sub
inc
pop
add
pop
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
clc
mov
add
pop
pusha
vpmullw
add
pop
jl
add
add
mov
add
add
add
add
add
les
sahf
ret
mov
test
mov
in
fdivr
lcall
jne
push
push
push
push
push
push
push
push
push
lea
push
call
hlt
jmp
je
add
mov
add
add
lock
lret
add
test
popa
add
lcall
icebp
sbb
add
rclb
rcrb
inc
cld
push
lea
pop
lea
push
push
shl
push
xor
add
shl
sub
inc
pop
dec
shl
not
pop
push
pop
pushl
push
push
push
call
pop
add
mov
movsb
add
add
nop
fcmove
push
mov
add
addr16
add
jne
add
aad
add
stos
call
add
add
add
sub
pop
call
push
lea
not
rol
pop
lea
push
push
shl
shl
sub
pop
push
push
lea
push
push
push
lea
push
push
push
call
add
mov
add
mov
add
push
mov
add
add
add
xchg
jp
add
xchg
add
mov
in
in
lcall
add
jne
push
push
shr
xor
push
or
not
add
lea
rol
sub
sub
sub
lea
sub
pop
ror
add
xor
dec
pop
push
add
sub
pop
push
call
push
push
rol
sub
push
or
inc
add
shr
sub
lea
rol
sub
shl
inc
lea
sub
pop
inc
pop
push
push
push
push
push
push
push
call
push
mulb
xchg
shll
cltd
mov
mov
add
aad
stos
lcall
stos
fisubl
pop
popl
cmpsl
add
add
add
add
add
push
add
mov
mov
hlt
jmp
pop
pushl
push
shr
pop
call
push
push
lea
push
call
add
je
test
out
add
bound
jge
add
les
xchg
popl
fidivrl
pop
imul
hlt
pop
push
call
push
push
push
and
add
sub
inc
xor
shl
pop
add
xor
pop
push
push
push
push
push
lea
push
push
push
push
call
add
push
add
lds
add
loopne
add
pop
mov
add
add
push
xchg
pop
int3
rolb
add
bound
add
jle
fyl2x
jb
pop
pusha
aam
bound
add
add
mov
insb
push
add
xchg
xchg
bound
add
add
add
sub
pop
pushl
push
sub
shr
rol
pop
call
push
push
push
push
lea
push
push
call
fadds
add
ljmp
lds
add
add
add
arpl
xchg
add
pop
add
jmp
add
cltd
lock
add
xlat
lods
push
pop
add
add
add
mov
jle
mov
or
xchg
mov
pop
call
push
push
push
call
push
enter
repnz
add
movsb
add
add
add
add
add
add
cmpsl
loope
add
add
iret
hlt
mov
mov
sub
pop
jmp
pushl
push
lea
push
push
call
leave
clc
lcall
lahf
add
xchg
add
add
mov
add
add
test
test
imul
xchg
xchg
in
xlat
mov
jp
sti
add
jne
add
add
pop
mov
jmp
push
push
push
push
pop
add
sub
rol
sub
inc
pop
sub
dec
xor
pop
push
push
call
cwtl
mov
aam
aad
xchg
enter
pushf
add
hlt
shr
add
pop
fsubrp
fcmovb
addl
data16
xchg
mov
push
ljmp
add
clc
add
add
add
add
lcall
jne
call
push
xor
pop
push
push
push
push
push
push
lea
push
push
call
add
out
std
add
add
add
add
mov
add
mov
out
iret
cltd
imul
add
mov
add
in
lcall
shrb
out
xlat
push
sub
push
xor
add
shl
sub
ror
add
pop
shr
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
call
fbld
jecxz
add
movsb
rcrb
add
nop
add
push
lock
flds
add
lea
add
add
add
xchg
pop
add
add
xchg
into
stos
in
fiaddl
into
mov
mov
sub
pop
pushl
push
sub
shl
add
pop
call
push
inc
pop
push
push
add
shr
dec
pop
call
leave
push
push
push
push
push
push
push
push
call
repnz
push
add
nop
pop
xchg
add
jle
arpl
mov
jge
add
test
xchg
add
out
movsb
mov
jecxz
mov
scas
testb
add
jmp
mov
popf
push
div
mov
fcmovnb
in
push
mov
loopne
lcall
les
push
lea
push
push
push
push
push
call
test
add
in
add
push
cmpl
test
testl
out
jo
add
roll
add
sub
pop
pop
pop
push
rol
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
lods
xchg
test
add
jl
add
add
popa
div
fidivrl
std
add
jecxz
add
add
add
add
add
lcall
xlat
shl
jbe
add
add
add
add
sub
pop
leave
push
push
push
push
push
push
push
call
jae
mov
out
mov
bound
mov
sar
add
add
into
add
aad
leave
repnz
hlt
push
add
add
data16
mov
push
arpl
add
imul
mov
sub
pop
add
push
lea
push
push
push
lea
push
push
lea
push
push
call
rolb
add
pop
add
ja
sar
add
fbld
mov
add
add
mov
mov
enter
cwtl
lods
rolb
add
in
loopne
ret
push
not
inc
pop
leave
push
pop
ret
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
push
stos
add
pop
outsl
jmp
push
in
add
cmpsb
mov
add
mov
mov
jmp
add
add
sub
pop
push
mov
push
ror
ror
xor
shl
pop
cmpl
jne
push
push
push
lea
push
lea
push
push
push
push
push
push
call
scas
add
xchg
add
in
out
in
xchg
mov
add
add
lods
add
cli
add
fwait
mov
je
movsb
jmp
gs
pusha
push
rolb
add
add
loop
aad
xchg
add
add
add
inc
and
push
add
shr
pop
jmp
push
push
push
push
push
push
push
lea
push
call
mov
hlt
add
add
mov
rclb
add
add
add
add
fnstsw
movsl
mov
lcall
inc
or
loopne
push
push
push
call
push
shrb
out
add
pop
cmc
add
vpunpckldq
add
shll
add
add
add
pushf
add
fldcw
scas
mov
jne
add
add
add
jge
clc
add
mov
add
mov
les
hlt
pop
xor
push
lea
dec
pop
xor
push
push
push
push
call
add
cli
add
jl
aad
in
shrb
stos
pusha
mov
sti
add
imul
fadds
cmpb
mov
xchg
add
out
mov
add
lahf
xchg
in
lods
mov
push
add
lock
lcall
rolb
dec
call
dec
inc
push
push
push
call
jbe
add
jl
mov
jbe
mov
add
add
push
addr16
add
mov
pop
jne
jl
add
add
add
rcll
lahf
add
sti
xchg
add
pop
mov
add
filds
push
add
jl
add
lock
lcall
push
sub
pop
sub
jmp
push
lea
shr
sub
xor
pop
sub
push
push
push
push
push
lea
push
push
push
push
push
call
movsb
popa
push
add
add
popf
mov
lods
xchg
pusha
mov
add
add
call
jbe
add
icebp
loop
jne
add
lret
lret
jmp
loop
jns
lahf
data16
mov
roll
mov
xchg
popa
lret
add
hlt
movsl
shll
mov
mov
jne
add
add
pushl
push
push
lea
push
push
push
push
push
push
push
push
call
add
leave
add
jle
leave
hlt
add
add
add
aad
lret
repnz
mov
stos
hlt
testl
sub
pop
pop
push
push
push
lea
push
push
push
push
push
call
lcall
add
mov
add
ja
jmp
add
pop
pop
add
add
rolb
mov
add
xchg
add
mov
push
mov
sub
pop
sub
push
lea
push
push
push
push
push
push
push
call
jo
push
add
gs
add
in
add
mov
lcall
ror
xchg
bound
pop
fadds
add
jle
add
test
jno
add
fldl
add
add
cmp
jne
push
lea
push
call
jbe
add
andl
mov
cld
in
fldl
add
push
mov
loope
cld
bound
add
add
lahf
movl
add
pop
sub
pop
mov
lea
push
sub
add
inc
ror
pop
sub
mov
push
lea
push
push
push
lea
push
push
push
push
push
push
call
add
pusha
add
add
cwtl
bound
stos
add
jge
sbb
jbe
out
loope
add
lcall
jmp
cmp
lea
push
push
push
call
rol
mov
add
pop
add
mov
jo
je
add
pusha
xchg
add
lods
add
add
mov
push
fldl
leave
add
add
jmp
add
lcall
enter
ljmpw
jbe
lea
push
push
lea
push
lea
push
call
xlat
out
add
bound
mov
xchg
scas
pop
mov
add
fidivrl
mov
mov
repnz
xorb
std
movsl
pop
insb
add
add
add
pop
sub
pushl
push
lea
push
push
lea
push
push
call
xchg
test
add
add
mov
mov
add
pop
js
mov
rolb
add
add
scas
add
rolb
sti
mov
pop
sti
movsb
add
mov
pop
add
scas
add
xlat
jnp
add
imul
mov
add
add
add
in
in
lcall
push
push
lea
push
push
lea
push
call
push
enter
call
cld
lcall
add
add
push
add
mov
popa
add
add
mov
add
in
add
mov
push
add
sub
pop
shr
push
dec
not
pop
and
push
pop
sub
push
lea
push
push
lea
push
push
lea
push
push
call
add
mov
add
add
add
add
loop
add
idiv
add
aam
ret
loope
push
mov
cwtl
insb
jb
add
arpl
fxch
mov
clc
test
add
add
sarl
jns
pop
bound
add
stc
sbb
test
push
lea
push
push
push
call
lds
add
jge
add
rcl
add
xchg
mov
push
test
std
cltd
add
add
add
fmull
push
cltd
add
lock
ret
push
lea
push
lea
push
lea
push
call
add
hlt
jb
mov
push
jb
mov
ja
add
add
add
mov
add
out
add
loopne
add
push
add
out
aam
add
push
shl
pop
mov
push
push
call
icebp
lahf
add
fbld
add
roll
add
pop
add
arpl
lret
mov
add
out
add
add
add
add
mov
movsb
pop
mov
xchg
add
lret
roll
iret
add
pop
add
add
mov
add
mov
insb
pusha
test
js
mov
call
lcall
cld
push
inc
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
push
call
je
lock
add
push
negl
add
add
cltd
add
nop
add
arpl
add
add
xchg
add
push
add
cli
add
add
jno
add
movsb
movsl
xlat
mov
pop
add
stos
sub
pop
push
push
sub
add
pop
push
push
push
call
add
add
add
rcr
add
mov
add
fsubrp
call
add
add
test
mov
add
mov
mov
push
add
add
jecxz
nop
pop
data16
add
jne
in
clc
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
mov
add
roll
faddl
add
push
xlat
loopne
addr16
test
add
jp
test
movsl
add
insb
add
lcall
pop
or
sub
push
rol
sub
add
pop
mov
push
lea
lea
lea
pop
shr
add
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
out
mov
jbe
add
cmpb
stc
add
movl
in
in
xchg
add
pop
add
lods
add
lea
mov
push
movl
lea
lahf
add
imul
addb
add
addb
shl
add
mov
push
lea
push
push
call
add
add
add
add
jbe
cltd
add
add
jbe
add
add
xchg
sub
pop
add
xor
push
sub
xor
sub
pop
mov
push
lea
pop
and
push
dec
shr
rol
ror
pop
rol
push
push
push
push
call
loope
lret
jnp
pop
jle
add
mov
pop
pushf
lock
jnp
stos
add
in
mov
mov
push
add
add
hlt
jae
je
add
into
add
mov
add
fdivrs
mov
push
add
add
roll
push
fwait
add
rolb
sub
pop
xor
inc
push
pop
cmpb
jne
add
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
add
fiaddl
test
add
pop
testb
loop
add
xchg
mov
add
add
mov
cwtl
sahf
aad
shl
add
cmpsb
add
mov
jnp
add
add
push
in
add
pop
jecxz
mov
add
inc
or
test
add
add
push
call
add
test
add
xlat
push
add
add
sarb
xchg
pusha
in
rolb
js
pusha
je
int3
mov
jns
cmpsl
stos
add
sub
add
add
jne
lods
scas
add
jno
in
leave
add
add
add
jbe
pushf
lds
aam
add
add
hlt
pop
add
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
int3
imul
lds
add
pushf
add
add
movl
movl
gs
cmc
divl
add
cmpsb
out
mov
lcall
mov
jmp
add
add
add
imul
pop
add
sub
pop
cmpl
jne
push
lea
push
push
push
push
push
push
push
push
call
test
mov
add
jne
add
loopne
add
in
add
mov
mov
add
int
addb
roll
add
add
lcall
rcrb
dec
lea
push
push
push
call
lds
add
add
hlt
addl
pop
add
pop
cld
add
scas
xchg
add
fiaddl
add
icebp
mov
mov
shlb
push
add
addb
add
add
add
popf
mov
add
pop
lock
cld
jbe
add
xlat
add
sahf
add
in
pop
pop
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
pop
add
pop
imul
add
cwtl
lea
push
add
mov
mov
add
div
mov
sahf
add
pop
mov
add
xchg
fdivrp
fldl
mov
mov
add
pushf
add
lds
sub
pop
pop
push
sub
inc
dec
pop
pop
push
push
push
push
push
lea
push
lea
push
call
stc
mov
add
add
add
add
add
scas
pop
add
rolb
jo
pop
push
sub
pop
pop
push
lea
inc
pop
leave
push
push
push
push
push
push
push
push
push
call
add
roll
fs
add
icebp
add
add
add
add
jno
add
fldl
add
outsl
add
lcall
or
push
not
pop
mov
add
push
add
inc
pop
push
push
push
push
lea
push
call
add
add
fs
in
add
mov
add
add
int3
add
cld
add
add
jbe
mov
cltd
rcrb
out
add
jnp
bound
lock
lcall
add
push
lea
push
push
lea
push
lea
push
call
aam
sti
add
push
add
arpl
mov
rcl
addr16
mov
xchg
nop
add
mov
mov
nop
xchg
add
add
add
add
addb
add
add
push
push
push
lea
push
push
lea
push
push
call
add
mov
arpl
fwait
mov
add
popa
add
in
mov
out
mov
add
add
std
add
add
mov
xchg
add
int
movb
add
loopne
lret
pop
leave
mov
imul
mov
add
push
in
pop
jae
add
mov
mov
bound
jbe
mov
out
in
in
lcall
push
lea
push
push
push
call
enter
add
repnz
add
xlat
xchg
std
jp
ret
cltd
add
add
jae
sahf
in
test
add
out
in
int
pop
cwtl
add
out
pop
add
mov
cmc
enter
add
xlat
in
out
add
add
pop
push
sub
xor
pop
mov
push
ror
add
inc
ror
pop
push
push
dec
shl
sub
pop
call
push
add
rol
pop
xor
push
shl
shr
inc
pop
pop
push
sub
dec
sub
pop
pop
pop
push
sub
pop
pop
push
lea
push
push
push
push
push
call
add
mov
add
mov
add
add
xorl
into
xchg
mov
stos
mov
enter
add
rcrl
jl
add
imul
add
add
lcall
leave
push
lea
xor
pop
ret
push
push
push
lea
push
call
add
cwtl
in
add
js
add
pushf
lods
cwtl
add
in
lahf
leave
in
out
add
add
lods
data16
add
push
xchg
test
lcall
push
inc
sub
pop
mov
push
lea
push
push
push
lea
push
push
push
call
loop
jl
mov
mov
ror
add
jno
popl
jle
add
add
add
xchg
add
jnp
lock
test
add
in
sub
pop
add
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
stos
sahf
pop
test
xchg
add
sbb
mov
cltd
enter
mov
ficompl
add
mov
in
add
add
int3
add
lcall
push
push
push
call
clc
cli
aam
hlt
imulb
fldl
call
jne
add
xlat
imul
add
mov
idiv
into
add
test
add
push
push
rol
dec
sub
pop
mov
push
rol
add
rol
lea
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
mul
fadd
add
fidivs
out
add
in
lahf
add
add
add
std
lds
loope
mov
lcall
mov
popl
pop
imul
shr
sub
dec
pop
lea
push
shl
xor
pop
sub
push
not
inc
sub
pop
mov
push
xor
pop
shr
add
push
lea
push
call
add
out
pop
add
mov
mov
add
roll
sbbb
in
push
add
addl
outsl
sub
pop
mov
push
lea
push
call
xchg
add
jne
jnp
jbe
iret
jb
mov
push
mov
add
add
xchg
lods
mov
mov
bnd
add
lock
popa
gs
jns
jge
add
add
in
clc
lcall
fsts
div
dec
pop
pushl
popl
push
sub
sub
pop
mov
push
rol
shl
pop
add
push
lea
push
push
push
push
lea
push
push
push
call
mov
add
add
lods
push
pop
push
add
out
push
add
add
push
mov
frstpm(287
add
js
mov
add
lcall
notb
push
push
push
push
push
push
call
mulb
fadds
add
fsub
pop
push
jmp
mov
leave
add
in
lcall
xorb
sub
pop
lea
push
push
push
lea
push
push
lea
push
call
jnp
in
xchg
jmp
mov
pushf
insb
mov
add
mov
add
add
jmp
mov
shrl
ret
shl
push
movl
lea
push
call
stos
fildl
lods
xchg
cmpsb
loopne
xchg
add
add
add
add
rcrl
stos
mov
addl
aam
shrb
add
jo
add
add
stos
test
add
add
push
js
jp
cli
add
mov
loop
mov
insb
jge
add
sub
pop
xor
push
dec
rol
add
xor
pop
rol
push
inc
pop
nop
push
lea
ror
add
rol
pop
nop
xor
push
push
lea
push
push
push
push
push
call
lds
fstpt
add
jge
push
push
add
pusha
xchg
add
xchg
mov
add
pop
cld
xchg
mov
xchg
testl
jns
add
jbe
mov
sahf
lods
add
sub
pop
nop
push
lea
push
call
add
mov
add
jmp
jns
out
js
add
int3
loope
jnp
sahf
add
add
mov
mov
add
xlat
mov
jae
xchg
add
lcall
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
sarb
add
gs
mov
add
stc
les
sti
fildl
add
mov
test
xchg
jbe
nop
jb
mov
add
mov
add
rolb
add
test
add
mov
jno
loopne
add
add
in
fcomps
nop
push
lea
push
lea
push
push
call
shll
out
shrb
add
add
add
fs
jne
add
fld
jecxz
jne
scas
mov
xchg
nop
sub
pop
nop
push
push
call
add
in
std
add
push
add
mov
orl
add
mov
ror
add
and
std
add
pusha
lahf
add
roll
add
add
mov
pop
jle
out
jle
add
add
add
scas
mov
add
sub
pop
cmpb
jne
add
push
add
not
add
pop
nop
push
push
call
mov
add
mov
mov
mov
cmpsl
xchg
xchg
push
add
filds
add
arpl
jno
push
scas
add
add
loopne
les
add
in
clc
lcall
push
push
lea
push
call
add
add
lret
jmp
add
pop
popa
mov
addb
aad
test
popf
mov
add
je
lods
add
add
xchg
add
add
add
in
hlt
lcall
inc
or
test
push
add
dec
not
pop
nop
push
push
lea
push
push
push
lea
push
call
push
add
xchg
stos
data16
add
add
mov
add
outsl
add
push
pop
shr
add
aad
add
add
xchg
xchg
les
divb
cltd
in
test
icebp
mov
pop
aad
jne
add
pop
add
lcall
push
push
lea
push
push
push
push
call
fisubs
popa
xchg
push
into
add
bound
test
add
mov
add
add
add
add
int
addb
scas
subb
sub
pop
nop
nop
push
add
shr
not
sub
pop
cmp
jb
push
lea
push
push
push
lea
push
push
push
push
push
push
call
mov
add
add
loopne
shrl
jmp
pusha
add
add
mov
fwait
add
lds
fiadds
add
add
push
pop
fmuls
add
jle
add
add
xchg
add
popf
mov
add
les
add
add
mov
add
add
cmpsb
out
std
out
sub
pop
xor
jmp
push
push
call
add
popl
mov
xchg
rclb
cmpsl
je
aad
mov
into
lret
add
add
scas
push
mov
lods
add
add
lcall
push
and
shl
not
pop
add
movzwl
push
shr
shl
pop
mov
push
ror
xor
add
pop
add
push
push
push
push
push
call
add
cmc
popa
mov
add
out
rcll
imul
je
add
fwait
add
add
out
add
insb
add
mov
mov
cwtl
add
push
lods
cmp
xlat
push
int3
loop
addl
lcall
dec
hlt
push
push
lea
push
push
push
push
call
shll
sahf
add
fdivrp
rolb
testb
ret
push
xchg
filds
mov
add
jae
in
add
mov
add
add
mov
xchg
ja
add
jmp
add
add
jp
stos
bound
add
jecxz
jl
jne
pop
add
push
xchg
in
call
inc
lea
pop
xor
push
push
push
lea
push
lea
push
push
call
pop
add
add
add
nop
add
jmp
add
add
pop
add
imul
add
push
add
test
add
xchg
idivl
xchg
add
outsl
mov
pop
shl
push
ror
pop
xor
push
not
ror
pop
shl
push
add
not
pop
xor
push
push
lea
push
lea
push
push
push
push
push
push
push
call
into
std
gs
out
ja
cli
push
pop
add
push
add
add
call
stc
mov
add
repnz
pusha
imul
mov
pushf
int3
add
in
icebp
popl
fdiv
add
roll
in
popl
add
mov
aad
xchg
std
lea
fisubrs
add
sub
pop
shl
push
lea
push
push
push
call
add
out
js
mov
add
mov
push
movsl
lret
add
add
push
add
arpl
add
stc
add
cmpsb
add
push
in
cltd
imul
mov
cltd
add
pop
mov
jns
add
jae
in
lock
lcall
or
push
lea
pop
mov
push
lea
push
push
call
lods
add
add
add
add
add
mov
mov
adcl
jecxz
les
xlat
andb
jns
pusha
adc
add
xchg
add
mov
mov
add
add
xchg
in
add
mov
jge
add
add
lcall
inc
hlt
push
push
push
push
push
lea
push
push
call
pop
outsl
rcr
add
add
add
add
add
ja
add
add
stos
outsl
cltd
mov
mov
les
jnp
jcxz
push
in
jo
push
sahf
stc
ret
add
add
stc
add
add
nop
fsubrl
add
pop
push
dec
pop
pop
push
dec
pop
pop
leave
push
push
push
push
call
add
xchg
imul
mov
fnstsw
cld
lds
add
xchg
movsb
rolb
add
fidivs
sub
pop
ret
push
lea
push
push
push
push
push
push
call
imul
xorb
ja
nop
sti
xchg
icebp
add
mov
jbe
cli
jo
add
jae
sub
pop
push
mov
push
inc
lea
ror
ror
pop
push
push
lea
push
call
mov
add
ja
add
add
mov
fldcw
xchg
jecxz
pop
add
lret
incb
push
not
ror
ror
pop
push
push
push
lea
dec
pop
mov
push
sub
sub
sub
pop
mov
push
dec
pop
mov
push
ror
xor
shl
pop
test
je
push
add
shl
lea
pop
mov
push
lea
push
push
call
mov
add
test
jbe
mov
rolb
adcb
add
iret
add
add
add
add
popl
testb
mov
add
dec
mov
push
lea
push
push
push
call
fiadds
add
flds
lret
cmpsl
popf
fcmovnbe
push
add
out
add
cld
pusha
add
add
jae
mov
pusha
add
testb
add
add
les
add
in
in
mov
push
sub
lea
lea
pop
mov
inc
push
not
ror
add
pop
cmp
je
test
je
push
push
push
lea
push
call
enter
xlat
mov
add
xchg
mov
lock
jecxz
cltd
mov
add
add
mov
add
bound
add
add
add
mov
jp
xchg
xchg
sti
jbe
cli
fwait
lret
jnp
pop
mov
mov
shlb
mov
push
scas
lods
leave
xchg
push
scas
add
fs
stos
add
out
push
sub
pop
mov
push
ror
lea
dec
pop
inc
push
add
add
pop
cmp
je
push
sub
sub
shl
pop
test
jne
xor
push
pop
pop
push
push
lea
push
call
ret
test
add
push
fs
add
lock
add
pop
mov
cli
cmc
mov
mov
add
mov
aam
je
add
lcall
push
add
add
pop
pop
pop
push
xor
add
pop
leave
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
mov
cld
push
push
mov
add
aam
add
add
xchg
xchg
add
lods
pop
mov
add
push
icebp
cld
aam
xchg
mov
add
add
insb
mov
sub
pop
ret
mov
push
inc
sub
inc
pop
inc
push
shr
ror
xor
pop
cmp
jne
lea
push
lea
pop
mov
push
pop
test
je
push
pop
mov
push
push
call
add
add
add
mov
scas
add
cld
in
mov
add
push
movsb
mov
fs
in
mov
push
rcrb
add
jecxz
add
push
add
rol
arpl
out
add
std
movsl
add
pop
test
jmp
in
clc
lcall
movb
loopne
test
std
call
lea
push
push
lea
push
lea
push
call
add
faddl
mov
jno
pop
repnz
add
add
cltd
xlat
scas
push
insb
mov
mov
ljmp
add
jb
loop
add
add
add
mov
add
push
loopne
incb
pop
sub
pop
mov
test
je
push
lea
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
push
pop
mov
je
imul
arpl
stos
ret
push
add
out
add
mov
movsl
add
loope
fwait
cmc
iret
stc
add
pop
cwtl
jle
movsb
int
enter
test
pusha
add
add
add
add
addb
add
mov
sub
pop
mov
add
push
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
call
mov
cmpb
stos
add
rolb
add
icebp
add
mov
push
lds
mov
lcall
loopne
test
std
call
jg
push
push
lea
push
call
pop
pop
add
fcomi
add
mov
out
rorl
scas
add
pop
stos
add
lea
mov
add
add
scas
xlat
leave
fiadds
add
lcall
jl
call
into
shr
shl
pop
xor
pop
push
shr
add
pop
pop
push
lea
push
push
push
push
call
mov
cmpb
add
add
frstor
add
loope
in
flds
cltd
lret
lods
enter
mov
pop
pop
scas
add
add
add
stc
add
push
add
pop
pop
add
hlt
mov
add
lock
testl
sti
mov
add
add
add
lcall
pop
push
push
push
push
push
push
lea
push
call
push
js
movb
jae
add
mov
mov
call
jl
testb
push
add
add
mov
add
mov
add
in
in
leave
push
push
call
xchg
xacquire
mov
clc
add
add
add
pop
iret
add
clc
add
xchg
add
leave
add
mov
add
lret
xchg
in
add
pusha
ficoml
add
xchg
add
add
lret
add
hlt
add
mov
add
add
in
add
add
add
jbe
jne
sub
pop
ret
lea
push
push
push
call
cltd
mov
fnstenv
cwtl
add
add
scas
fs
js
mov
mov
cld
mov
add
lcall
push
xor
lea
rol
pop
pop
pop
push
push
push
push
push
call
nop
lock
add
fldl
into
xchg
add
jge
mov
xlat
scas
mov
xchg
add
movsb
add
add
add
jno
insb
xchg
jns
add
mov
sub
pop
pop
push
push
call
push
add
add
rolb
add
fsubrp
add
add
add
mov
loop
pop
scas
icebp
lock
cmpsl
push
xchg
pop
add
mov
int3
add
add
scas
pop
in
mov
add
push
les
popf
add
leave
ret
push
push
call
arpl
sarb
cltd
enter
add
add
cmc
lods
add
cwtl
push
add
push
loopew
pop
add
int3
add
xchg
push
lock
pushf
shlb
aam
fs
add
out
xchg
mov
add
mov
add
jnp
pop
flds
rcll
jl
insb
add
lcall
push
inc
lea
sub
pop
pop
push
dec
xor
add
pop
pop
push
lea
push
lea
push
push
push
push
push
call
cld
test
rorl
loope
jl
jb
mov
add
in
push
loope
pop
sbb
lahf
scas
fiaddl
f2xm1
in
testl
hlt
mov
pop
cltd
add
loopne
hlt
add
and
popa
add
mov
clc
ljmp
add
int
scas
add
pop
jle
jns
in
in
pop
push
push
lea
push
push
push
push
call
call
jmp
add
int3
xchg
pop
ror
cmpsb
add
ret
stc
push
xlat
cmpsb
imul
cld
add
add
js
fisttpl
xchg
pushf
pop
add
testb
sub
sub
pop
leave
ret
test
jae
xchg
sbb
test
jo
test
jb
dec
sbb
jg
jae
stos
shlb
test
jae
mov
add
add
cmpsb
es
loopne
mov
sbb
ret
mov
test
sahf
les
and
adc
scas
sti
inc
gs
push
ret
sahf
mov
jb
push
fdivl
cmpsb
add
mov
cmpsl
jo
jle
das
sub
xor
mov
mov
pushf
push
pop
pop
imul
adc
inc
xchg
and
mov
sbb
lret
repz
js
xchg
sub
lret
mov
sbb
and
mov
inc
aas
cmp
push
and
hlt
xchg
xchg
adc
xor
fcmove
mov
pop
mov
inc
mov
xlat
mov
ffreep
pop
sarb
cmpsl
mov
xchg
scas
cmpsl
push
add
in
call
rolb
fs
lret
add
inc
loopne
push
mov
dec
addr16
mov
xchg
mov
push
jl
enter
push
add
divb
cmp
loopne
inc
jns
adcb
sbb
test
xchg
jmp
test
pop
mov
add
jl
dec
sub
jl
dec
and
call
pop
inc
lock
and
adc
rcrl
sub
xorl
mov
jg
adc
mov
mov
sbbb
sbb
gs
push
pop
mov
lret
insb
das
pop
adc
cmp
dec
inc
mov
push
lret
mov
sbbb
jno
das
mov
pop
fdiv
rolb
test
mov
add
mov
add
and
stos
into
pop
enter
js
add
mov
out
xchg
sbb
movsb
add
sub
push
loopne
data16
mov
mov
daa
or
xchg
adcb
std
ss
adc
sub
rorl
push
xorl
ret
jne
sarl
fs
jge
mov
sub
aad
dec
shll
into
in
icebp
mov
mov
aaa
jno
push
icebp
sub
or
lret
sub
sub
add
roll
push
push
add
pop
imul
and
jno
repz
jb
shl
pop
cld
cmpsb
pop
jns
mov
xor
pop
mov
call
cmpsb
xor
sbb
inc
data16
xchg
push
push
js
shrl
test
xor
mov
imul
icebp
mov
test
pushf
loope
cmp
popa
sbb
mov
mov
fs
dec
lahf
mov
xor
sbb
cli
cmp
push
pop
mov
lret
push
xchg
fdivs
out
test
fistps
cmp
call
out
xchg
xor
ds
xchg
sub
hlt
stc
test
insb
and
stos
in
push
andl
jbe
lods
cmp
xchg
cmc
out
cmp
dec
jnp
adc
jno
int3
xor
je
cs
dec
fiaddl
mov
and
into
cmp
mov
add
cmc
mov
jp
dec
scas
test
mov
add
pop
mov
pop
or
aas
cli
popf
pop
adc
cmpsb
andb
push
xor
adc
cmpsb
pop
cmc
add
add
xchg
and
add
pop
fmul
or
imul
push
in
addr16
pop
mov
sarb
pop
sbb
jnp
jg
dec
dec
out
sbb
in
push
fisttpl
movl
stos
gs
loop
arpl
push
lret
push
cmp
pop
test
mov
push
movsl
push
inc
xchg
scas
or
or
xor
xlat
test
push
sbb
or
mov
addr16
stos
inc
dec
insl
push
andl
scas
mov
hlt
shll
mov
sbb
dec
sub
sub
mov
pop
aas
cmp
sbbb
add
jns
jno
mov
mov
xchg
or
loop
test
pop
mov
cwtl
dec
pop
clc
loope
rol
cmp
xchg
movl
mov
xchg
stos
sub
sub
loope
sarl
jl
neg
or
mov
pop
dec
aaa
adc
jns
mov
shrl
jg
aad
idiv
xchg
push
pop
movsb
and
mov
cli
or
fists
push
add
xchg
cmc
sbb
in
xlat
fmull
or
sahf
jbe
pusha
stos
nop
sub
fisubrl
dec
inc
cmp
mov
add
or
xchg
cmp
cmp
mov
add
adc
pop
inc
cmp
xchg
das
pop
sbbl
push
aas
mov
jmp
fwait
std
nop
mov
xchg
sub
mov
push
fisttpll
mov
scas
or
outsb
pusha
es
inc
stos
inc
mov
or
mov
cli
pop
fistl
fwait
lock
mov
outsb
adc
xor
cmc
imul
arpl
add
mov
jbe
dec
dec
jne
dec
into
fs
jl
cmpsl
xor
or
int3
pop
bnd
fimuls
les
sbb
lock
mov
out
mov
cmpsl
int3
in
lcall
cmp
arpl
shrl
lcall
pop
pop
mov
xor
mov
lret
cmp
ss
xor
pop
inc
push
fwait
js
outsb
ds
pop
xor
nop
popa
aas
sub
sahf
xor
cmp
das
mov
scas
inc
pop
popf
negl
mov
cmpl
sbb
xchg
mov
or
xchg
inc
jnp
out
int
and
and
shlb
mov
cmpsl
jle
rcl
pop
sub
pusha
cmp
dec
adc
addr16
xor
fcmovbe
mov
xchg
mov
xor
nop
inc
mov
arpl
or
std
xchg
dec
insl
cmpsl
insb
push
cmp
subl
out
aaa
lds
in
popa
dec
dec
lods
mov
adc
je
push
jge
bound
pop
in
stos
scas
pop
ficoml
rorl
pop
pop
sbb
loope
dec
jmp
jmp
leave
sbb
iret
lds
scas
stc
movl
sub
call
loope
inc
jbe
inc
stc
mov
pop
les
cmp
mov
cltd
incb
ret
push
sbb
rcrl
into
cmp
shl
lahf
test
xlat
orl
outsl
call
fwait
scas
outsl
movsl
push
mov
mov
sub
pop
xchg
xchg
iret
adc
cmp
imul
xchg
jmp
jns
or
push
xchg
repz
sub
jge
sub
sub
mov
outsl
fdivr
pop
pusha
or
pop
popa
xchg
dec
int3
dec
pop
xor
fsubrl
ljmp
testl
sti
movsb
lret
stos
jb
sub
pop
iret
cwtl
mov
mov
jp
iret
bound
pop
or
sub
xchg
test
pop
test
push
push
cmpb
ss
int
imul
adc
fwait
inc
adc
add
pop
fidivs
push
in
push
push
inc
rclb
mov
sbb
jae
scas
push
sbb
push
aas
mov
pop
in
bound
push
add
outsl
mov
jb
sbb
dec
cmpsl
jmp
fdivp
push
adcb
ss
pop
lds
dec
fwait
lcall
or
or
cmp
push
cmp
xchg
jno
dec
adc
cs
sub
adc
test
pop
jbe
mov
or
sbb
enter
jo
int3
sub
jmp
mov
lds
jnp
jmp
and
ja
test
mul
into
mov
dec
dec
dec
iret
movsl
fcmovu
mov
out
sub
and
into
divl
pusha
lret
movsl
arpl
rcl
jno
dec
push
imul
mov
jmp
mov
in
iret
scas
nop
pop
int
xchg
lock
xchg
cwtl
xchg
mov
mov
cli
out
dec
adc
dec
stos
out
les
pop
mov
je
push
xchg
out
pop
fnsave
xor
sbb
jb
pop
ficompl
out
lds
cmp
ret
mov
mov
pop
arpl
jno
add
aaa
idivb
fdiv
push
imul
pop
in
push
sub
xchg
mov
fcmovnu
cmp
adc
scas
aad
in
push
clc
pusha
dec
int3
loopne
icebp
int
lods
mov
jnp
sahf
mov
xchg
dec
nop
and
data16
inc
in
adc
mov
mov
xor
adcb
sbb
lock
or
adc
shl
mov
or
jo
fisttpll
shll
test
pop
push
outsb
fnstcw
mov
cmc
loop
fiaddl
mov
lods
movsl
sbb
mov
and
sbbb
push
mov
into
adc
test
mov
pop
stc
mov
aad
push
add
push
sbb
data16
out
es
jle
rol
ret
push
push
or
dec
shl
jge
insl
xchg
inc
repnz
pushf
lds
fistpl
mov
outsl
adcl
push
mov
jne
push
mov
adc
and
sbb
mov
ljmp
push
or
sbb
imul
lcall
add
sub
daa
icebp
xchg
jl
int
scas
lods
pop
pop
xchg
outsl
test
inc
lcall
mov
jle
jmp
pop
mov
jg
notb
out
jbe
push
imul
or
xlat
cmp
fstpl
xchg
and
movsb
leave
mov
inc
sub
clc
adc
jbe
mov
decb
cmpsb
pusha
adc
lods
push
rorl
push
mov
outsl
testb
lods
xchg
sbb
movsb
scas
pop
sahf
push
adc
mov
cmpsl
xchg
jge
cltd
scas
mov
mov
or
das
jle
pop
or
jge
movsl
xchg
xchg
or
lahf
in
enter
pop
jecxz
push
fwait
xor
mov
mov
insl
aad
sbb
dec
sbb
lcall
mov
les
jecxz
loope
out
xchg
dec
jge
cmpsl
sub
iret
insb
adc
nop
sbb
inc
adc
divl
dec
pop
mov
je
int3
sbb
test
pop
jle
jne
add
fisubl
dec
in
jmp
sub
loopne
sub
roll
outsl
lret
push
test
mov
pop
out
cli
push
pop
loopne
xchg
cwtl
in
test
mov
fcmovu
pusha
mov
cld
std
scas
xadd
inc
stos
mov
dec
xor
scas
pushf
mov
push
mov
adc
mov
loop
imul
std
dec
pushf
std
adcb
lds
mov
add
ds
jg
je
fisttpll
cmc
aam
sti
ficoml
jge
mov
and
mov
stos
push
mov
dec
add
aas
pop
test
xchg
add
sbb
and
fstpt
sbb
cmpl
or
test
ljmp
xor
in
or
push
sub
adc
lds
add
inc
or
ja
sbb
filds
repz
pop
imul
inc
lock
pop
fdivrs
xor
xor
pop
lods
push
stos
mov
xor
xor
cltd
dec
lods
xchg
sub
add
sahf
bound
clc
inc
push
iret
mov
mov
mov
insl
xor
xchg
cmp
in
push
out
xlat
cmp
mov
repz
lock
pushf
aad
test
faddl
jbe
out
pop
imul
out
xchg
cld
loope
or
std
mov
mov
pop
test
sub
pop
and
dec
jg
push
adc
test
popa
adc
addr16
fwait
leave
inc
imul
adc
jae
jo
lcall
adcb
jmp
xchg
stos
cmc
fisubl
push
shrb
inc
popa
push
mov
testb
fbld
lea
aam
iret
lfs
jbe
cmpb
into
xor
xlat
push
cmp
add
and
fildll
sbb
in
repz
aad
rcrb
add
pop
mov
icebp
push
clc
add
punpckhdq
add
or
stos
pushf
popa
cltd
sub
pushf
add
hlt
jbe
mov
sbb
loopne
pop
adc
out
leave
xor
ljmp
out
dec
inc
xchg
inc
fimull
clc
or
pop
loope
mov
outsl
shl
les
pop
and
enterw
cmp
stos
mov
repz
orl
popf
test
or
repz
repnz
cmc
mov
rolb
cmpsb
inc
outsl
aam
js
inc
sti
jae,pt
push
pop
sti
adcl
fwait
xchg
add
pop
mov
sbb
insl
cltd
pop
xor
cmp
mov
mov
add
scas
rcl
xor
or
in
adc
cs
into
in
je
jne
nop
mul
push
push
stos
xor
sub
mov
sub
sub
iret
pop
cmp
mov
pushl
push
dec
int
pop
mov
into
negb
rclb
pop
ret
inc
xchg
enter
shl
add
mov
and
movsb
mov
inc
movsb
jmp
lea
cmpl
sbb
loop
xchg
sbb
pop
pushw
faddl
jne
sbb
repnz
mov
and
mov
mov
loopne
push
xchg
mov
ds
mov
rorl
pop
fistps
or
adc
imul
inc
es
andl
or
sbb
call
test
aam
outsb
adc
mov
sbb
adc
and
jg
sub
mov
test
adc
imulb
aam
addw
inc
inc
jl
cmp
push
or
push
pop
sbb
push
mov
or
clc
push
add
jae
mov
lcall
cltd
dec
inc
push
and
add
mov
adc
fwait
mov
mov
and
xor
das
cld
cwtl
pop
add
cli
sbb
std
lahf
mov
cmp
jp
jnp
xor
stos
fsubp
jae
adc
xor
mov
mov
lds
js
call
out
dec
sbb
jge
test
repnz
jnp
fistps
lock
jecxz
lea
and
xor
or
test
add
pop
sub
push
or
add
jmp
stc
cmpb
push
jno
inc
xchg
xchg
mov
sbb
inc
dec
lret
fbstp
pop
xchg
cld
and
sub
jle
inc
sbb
xlat
scas
sbb
ret
jp
jl
scas
fucomp
sahf
mov
add
dec
push
or
mov
testb
sub
push
jne
adc
jl
stc
test
mov
bound
xchg
scas
test
dec
pushf
imul
out
stc
sub
push
jle
test
jmp
and
jne
loope
sbb
movl
aam
aaa
fsubrl
in
sbb
xchg
std
cwtl
imul
jnp
lea
shl
cmpsl
pop
push
pop
add
jge
pop
inc
loop
rolb
jno
pop
shrb
loopne
xchg
cmp
or
fldl
dec
push
push
dec
adc
out
jge
sub
push
sub
int3
andl
lcall
xlat
mov
jb
data16
pop
scas
dec
orb
sub
ret
outsl
lea
sbb
fsub
inc
movsl
cwtl
mov
jp
imul
rcrl
jb
xchg
aam
inc
btr
stos
mov
mov
sub
sub
sbb
mov
mov
stos
xor
lock
enter
dec
cmp
das
push
push
vpor
xor
push
in
push
andb
pop
jle
adc
mov
pop
mov
gs
mov
scas
cmpsb
jne
jb
aaa
dec
out
lcall
sub
orb
mov
push
jge
sbb
xchg
xor
sbb
mov
int3
js
dec
movsb
pop
mov
fbstp
sub
call
and
sar
and
ss
adcl
add
pop
fistps
fldenv
lahf
jmp
cltd
test
adc
adc
loop
inc
popa
mov
push
notb
inc
xchg
insb
in
mov
inc
pop
jns
sub
into
push
jmp
jno
push
xor
fs
mov
add
dec
pop
rcll
lock
stos
add
fstpl
sbb
dec
movsb
mov
or
mov
stos
or
sub
xchg
je
push
fsubs
mov
rorb
inc
adc
add
lock
out
adc
inc
ss
adc
or
cmpsl
cmc
sbb
xor
hlt
pop
inc
xor
mov
mov
push
outsl
popa
imulb
stos
loope
cmp
aaa
push
ret
lds
mov
lcall
pop
adc
divl
andb
aam
mov
cmp
dec
jp
mov
and
adc
pop
and
andl
inc
dec
pop
inc
test
fcomps
addb
mov
imul
stos
das
enter
sub
xor
sar
int
add
adc
and
dec
jne
xor
or
pop
in
pop
aas
mov
repnz
rorl
jo
push
outsl
add
std
push
aaa
mov
mov
cltd
mov
xchg
test
push
xor
daa
dec
das
mul
jg
inc
repz
jae
jnp
mov
lret
and
hlt
mov
lret
inc
fisubs
out
out
int
and
int
outsl
mov
jecxz
cmp
pop
push
std
adcb
loop
fadds
and
inc
jno
in
iret
sbb
imul
cmc
and
dec
mov
jp
int
repz
adc
pop
jno
xchg
or
pop
adc
push
mov
sbb
aam
add
ss
push
pop
jmp
lods
sub
dec
cwtl
fdivp
ja
dec
mov
int
jne
push
out
and
mov
inc
add
fstps
out
add
or
mov
inc
test
and
icebp
aam
cld
or
push
lret
ret
mov
ja
and
les
jmp
dec
cwtl
jo
or
sbb
bnd
shlb
aaa
fs
test
fists
cmp
push
movsb
cs
insl
pushf
das
loopne
pop
mov
insl
int3
mov
xchg
scas
mov
out
data16
mov
popa
ljmp
pop
nop
jo
mov
mov
push
pop
add
in
popf
cld
adc
cmp
jp
imul
cltd
shrl
cmpsb
icebp
jmp
pushf
mov
sahf
ja
sbb
les
inc
xchg
lahf
aad
mov
pop
fidivrl
mull
out
repz
sbb
mov
incl
mov
jno
xorl
fs
sub
xor
and
xchg
jne
add
cli
xchg
jne
adc
out
xchg
hlt
mov
fwait
push
shl
adc
add
mov
bound
rol
xchg
sbb
pushf
loope
and
outsl
jo
imul
mov
dec
mov
xchg
and
pop
adc
mov
push
sub
cmp
in
pop
shr
rorl
adc
insl
cmpsl
aam
js
jae
int3
sbb
dec
mov
aas
sbb
xor
adc
lahf
mov
lea
test
mov
push
xchg
fisubrs
push
mov
mov
inc
jmp
ret
lret
mov
fbstp
lods
subl
movd
push
stos
pop
sub
sbb
xchg
test
inc
scas
dec
xchg
ret
sbb
insb
inc
push
stos
filds
mov
jno
invlpg
loop
popa
mov
sarb
mov
incb
jnp
je
inc
pop
popa
cmp
prefetchw
or
cs
fimuls
or
sub
jno
xor
imul
cmp
pop
mov
stos
cwtl
xchg
xchg
jmp
xchg
inc
mov
negl
push
lcall
jno
ljmp
jne
cmp
data16
stc
pop
jae
dec
xor
pop
loop
js
jbe
xor
leave
jne
ja
mov
mov
mov
add
dec
sbb
mov
das
xchg
mov
or
out
into
addr16
xchg
lcall
mov
insl
std
xchg
aas
mov
sub
xchg
aas
mov
add
mov
or
lods
ss
mov
ret
push
or
push
dec
imul
cmpsl
add
dec
into
jecxz
inc
add
call
xchg
mov
mov
std
jl
ja
lret
aas
add
clc
push
nop
test
out
cli
insb
lock
or
fidivrs
insl
outsl
lret
xor
stc
divl
cld
pop
fsts
lret
and
and
jg
jg
xchg
jnp
inc
mov
das
je
inc
leave
pop
mulb
ljmp
scas
insb
pop
cld
xchg
push
ja
lcall
pushf
push
test
test
xor
xchg
push
inc
xorl
jmp
mov
sbb
add
cmp
push
xor
xor
mov
aas
shll
incl
sbb
test
or
lods
push
push
inc
rorl
mov
cmpsb
or
je
xor
popa
in
mov
xchg
pop
cwtl
fsubr
mov
jle
xchg
cli
mov
inc
in
sub
jbe
ds
pop
sarb
pushf
jae
cmc
sub
rorl
dec
aaa
movsb
mov
mov
in
cli
hlt
popa
popa
mov
in
aas
gs
in
loop
pop
mov
into
lods
add
ss
call
leave
cmpsb
and
call
cmpsl
loopne
mov
shlb
inc
mov
pop
lret
icebp
inc
or
popa
fisubs
das
lods
in
dec
or
xor
mov
stos
and
in
xchg
shlb
mov
and
movsl
push
out
int3
and
mov
std
xlat
dec
pop
jmp
mov
pusha
ret
pop
sbbl
xor
pop
pop
cmpsl
xor
outsl
out
or
jle
mov
inc
mov
lcall
lret
xchg
repz
jae
pop
inc
adc
and
xor
sbb
and
imul
scas
repz
ret
cmpsb
xchg
mov
ret
and
mov
into
out
inc
sub
ds
das
pusha
mov
xor
sbb
jmp
cmp
loope
incb
loopne
in
jb
mov
jnp
cltd
xchg
xor
cli
add
lods
jl
dec
into
xor
push
mov
mov
adc
ss
and
inc
dec
sbb
mov
lock
inc
fmul
xchg
outsb
aam
out
outsb
movsb
fldcw
pop
sub
stos
ja
mov
adc
ljmp
xor
push
movsb
outsb
sarb
stos
pop
jg
pop
mov
ss
adc
mov
sbb
cltd
fildl
jg
pop
test
jne
addl
mov
aad
arpl
mov
out
or
and
and
and
loopne
sbb
or
cwtl
lahf
stos
pushf
jge
sbb
and
xor
inc
inc
adc
in
dec
int
cmp
mov
jbe
insb
lret
sub
aam
cltd
ss
int3
fimull
std
ja
jg
ss
or
popa
sub
cmp
or
jae
and
ja,pn
inc
scas
sub
loopne
icebp
stos
stos
push
inc
xchg
mov
adc
cmp
cmp
and
int
add
mov
or
out
jae
jb
and
rcrb
jne
popf
inc
mov
mov
inc
repz
mov
and
push
or
lcall
mov
aam
loope
fdivs
pop
clc
mov
pop
and
outsb
or
fidivs
scas
push
ljmp
jge
sub
bound
jne
inc
stos
imul
push
repz
cmpsl
or
adc
mov
aam
push
mov
xchg
xor
mov
pop
sbb
mov
int
andl
or
add
jmp
jo
fidivs
xchg
mov
pop
jecxz
inc
jb
fwait
add
fisttpl
push
pop
dec
push
xchg
stc
lock
pop
dec
lock
dec
mov
lahf
aam
popa
xor
jb
fnstsw
test
pop
mov
mov
subl
jno
sub
push
pop
testl
pop
jecxz
pusha
fs
enter
popl
stos
sbb
push
cmp
shr
pop
xchg
daa
cmp
dec
cmp
int
bound
push
add
sub
aam
add
adc
pop
jno
dec
into
push
push
mov
rclb
add
pop
movsl
sbb
jle
dec
int
and
jnp
xor
adc
dec
cmp
jmp
add
xchg
jl
xchg
in
lret
scas
filds
or
xchg
dec
jb
cltd
and
movsb
adcl
scas
push
imul
cmp
aad
lcall
out
cmp
dec
in
add
pop
or
sbb
lret
and
add
es
outsl
scas
cmp
xchg
mov
adc
pop
push
pop
jg
inc
enter
out
pop
cmp
popf
lcall
loopne
lock
mov
ja
dec
push
shlb
shll
scas
inc
mov
lret
jno
xchg
inc
in
pop
pusha
mov
push
call
add
push
mov
test
cmpsb
cmp
xor
xchg
sbb
test
dec
filds
arpl
and
mov
iret
hlt
int3
subb
xchg
loop
mov
lcall
mov
adc
shrl
addr16
mov
jno
adc
xor
or
mov
or
inc
clc
popf
das
sub
insl
icebp
test
lds
and
mov
aaa
ret
sar
negb
imul
stc
scas
mov
ljmp
stos
sti
movsb
loopne
cmp
out
das
inc
inc
xchg
push
pop
push
movsl
inc
inc
pop
jne
rcrl
xor
hlt
jp
sbb
in
scas
fucomi
div
stos
test
add
xor
sbb
in
mov
popf
xor
xchg
out
das
inc
pop
sbb
int3
adc
xchg
int3
dec
pop
aam
fsubs
mov
and
xor
imul
in
in
or
sbb
xchg
imul
inc
shll
xchg
xchg
xlat
dec
and
pushf
stos
add
dec
aaa
sub
mov
lcall
xlat
shl
bound
shll
cmpsl
mov
stos
sub
cvtps2pd
sbb
pushf
pop
int3
mov
mov
int3
fwait
movsl
fsubrs
xchg
inc
cmp
je
jo
pop
xor
sub
loop
mov
lea
ljmp
repz
cltd
out
xchg
fmuls
mov
push
cmpsb
negb
inc
loope
mov
mov
ret
leave
je
push
push
jne
test
aas
lds
das
mov
mul
pop
xchg
enter
or
jnp
add
cmp
fs
dec
mov
add
mov
mov
jmp
adc
lock
pop
mov
inc
push
push
in
psubw
lods
sbb
cmp
cmp
rorb
jo
xor
adc
inc
push
or
cmp
ret
push
lea
movsl
push
lods
lret
dec
jg
hlt
fwait
jnp
sbb
jns
insb
inc
test
data16
pop
jl
mov
or
cmc
gs
add
out
lret
rolb
mov
stc
dec
sub
repz
popa
fldcw
test
xor
rcrl
mov
call
dec
in
insb
loopne
xchg
pop
cmc
sahf
ljmp
add
mov
xor
or
stos
cltd
jle
in
out
add
xchg
mov
leave
xor
and
jge
mov
loopne
sahf
mov
push
sbbb
add
inc
push
pop
mov
mov
pop
mov
out
loop
adc
push
sub
pop
cmp
inc
fsubs
jne
mov
nop
data16
dec
inc
test
adc
add
movsl
sub
cmc
push
in
xchg
mov
adc
xor
mov
xchg
mov
adcb
jb
mov
inc
sbb
out
daa
ucomiss
in
aam
jb
cli
push
push
and
inc
movsl
add
jl
dec
arpl
push
adc
in
adc
sbb
jle
mov
ss
stos
dec
cmpsl
mov
jle
and
jno
fwait
add
jbe
pop
cmp
mov
push
imul
push
cld
add
push
adc
xor
and
out
pop
cmp
lahf
daa
test
lret
push
cmp
sbb
xchg
inc
xchg
lret
call
jecxz
mulb
cmp
dec
incl
leave
insb
lss
stos
cmp
sbb
popl
addr16
test
outsb
or
shlb
inc
add
ret
lea
mov
sbb
ss
and
lahf
adc
roll
push
lahf
mov
cvtpd2dq
sti
mov
dec
test
cmp
into
loope
mov
sbb
pop
and
movb
mov
lret
inc
cmp
pop
pop
fs
mov
mov
out
inc
sarl
add
sbb
adc
loope
dec
inc
pop
push
jmp
or
jl
sub
lds
pslld
jg
pop
enter
loopne
mov
divl
popa
imul
scas
daa
or
mov
cs
jb
and
adc
inc
ss
add
sbb
push
int
lahf
fdivr
shr
add
lret
mov
xchg
mov
cwtl
dec
sbb
mov
bound
ljmp
mov
dec
lahf
cs
mov
dec
fs
pusha
scas
jb
jge
jae
dec
pop
lcall
add
or
cwtl
dec
xchg
int3
sarl
das
mov
jnp
jecxz
sub
or
out
ds
inc
icebp
pop
fmull
jns
adc
push
jle
mov
stos
xchg
push
and
sub
inc
pop
dec
cwtl
jb
or
push
out
pop
mov
sti
lea
ret
stos
lods
aaa
pop
cld
scas
adc
pop
bts
gs
ss
xchg
sbb
in
lods
sarl
dec
and
lcall
out
sub
rolb
push
push
push
and
and
sti
aaa
scas
dec
sahf
pop
cmp
jl
pop
inc
or
push
push
repnz
dec
shrb
mov
lock
mov
dec
inc
push
inc
lret
mov
lods
jg
mov
gs
push
mov
inc
ja
push
mov
or
jp
jmp
sbb
movsl
movsb
in
xchg
icebp
xchg
push
in
test
inc
and
daa
shrb
in
mov
push
stc
int3
lahf
movsl
sbb
cmpsb
stos
out
in
inc
sub
in
push
movsl
and
cltd
dec
xor
dec
pop
and
ja
leave
jmp
push
cltd
aaa
dec
dec
das
jne
xchg
adc
shl
fidivs
xor
je
icebp
shll
rorl
cmp
in
pop
call
jbe
and
popa
lcall
js
inc
fstl
mov
inc
mov
inc
sbb
mov
pop
into
mov
lahf
repnz
jle
jno
jnp
scas
jo
push
push
sbb
sub
loopne
jg
add
shl
mov
or
add
scas
fiadds
loop
ficoms
sahf
jle
mov
mov
adc
mov
movsb
dec
mov
test
push
inc
or
out
push
mov
pop
enter
mov
inc
movsl
and
adc
or
mov
push
inc
mov
push
mov
loope
dec
push
cmpxchg
push
loopne
js
es
cmp
scas
sub
mov
js
jle
mov
movsl
test
inc
addr16
rorb
adc
sbb
mov
xor
movsl
in
dec
iret
sub
jnp
xchg
rcll
and
sub
jge
pop
or
add
push
lret
mov
ret
lods
out
adc
fwait
test
cmpsl
clc
shll
xor
push
or
xor
push
pop
loope
xchg
add
push
fnstsw
pushf
inc
js
pop
cltd
jp
into
xchg
mov
mov
xchg
inc
dec
mov
mov
or
je
je
lock
and
hlt
inc
fsubs
cmc
and
sub
movsl
jge
sbb
push
xor
xchg
fistpl
mov
push
pop
xchg
inc
movsl
movsb
roll
mov
jmp
inc
add
and
repnz
dec
jbe
mov
outsb
insl
outsb
repz
fistl
dec
dec
mov
hlt
clc
and
jbe
in
sbb
loope
xchg
addr16
push
fdiv
push
movsl
push
xchg
decl
adc
fsubrl
dec
aas
in
aam
mov
mov
ss
das
mov
lret
ss
mov
add
push
sbb
out
sbb
imul
add
inc
jo
aas
inc
inc
and
das
leave
test
mov
cmp
in
sub
lods
cmp
and
and
dec
and
arpl
push
imul
jmp
inc
das
inc
adc
stos
push
out
pushf
push
fsubs
leave
hlt
pop
pop
sbb
loope
push
push
ds
and
lret
repz
sub
jo
mov
sub
je
adc
movsl
hlt
and
pop
push
sbb
adc
outsl
cld
push
jno
pop
mov
test
pop
mov
adc
sti
pop
sbb
outsl
sbb
jbe
int3
test
lock
lcall
mov
repz
loope
lret
inc
inc
cld
js
pop
mov
das
pop
dec
lods
xor
mov
popf
test
aas
push
dec
inc
cs
addb
idivb
cmpsb
test
cmp
sarb
out
lods
into
enter
out
adc
leave
pop
xor
lahf
pop
jae
gs
jo
xor
sub
cli
sbb
xchg
out
xchg
dec
jne
xchg
mov
jg
adc
inc
mov
pop
fwait
loopne
pop
in
mov
cmpsl
mov
xchg
stc
mov
sub
fstpl
push
je
out
sbb
cwtl
jmp
test
sub
and
add
lret
sbb
adc
and
ja
sbb
xchg
cmp
mov
cmp
cmp
in
dec
sbb
scas
xchg
mov
cmp
sub
jmp
cmp
enter
inc
bound
scas
addl
xchg
mov
pop
cwtl
push
orb
rolb
hlt
sub
aaa
loope,pt
or
mov
ret
cmp
in
mov
out
sti
icebp
divb
xor
push
cmc
pop
pmaxub
mov
fcoms
adc
mov
hlt
jno
fsub
loop
adc
in
mov
cmp
jo
inc
xor
sbb
push
add
jae
and
push
stos
fcmove
sbb
lea
dec
out
aam
stos
cmp
pop
pop
xchg
loope
cmp
scas
adc
fildll
add
adc
cmp
sarl
mov
pop
nop
sbb
sbb
pop
out
daa
jmp
les
jb
cltd
sub
sub
fisubrs
ljmp
je
inc
lods
mov
add
add
dec
in
stos
mov
mov
in
mov
scas
sbb
ficomps
or
jge
daa
jmp
dec
sbbb
cltd
js
pusha
shrl
fnstcw
aam
lret
xor
push
mov
mov
gs
mov
mov
insl
inc
iret
push
add
sub
mov
lret
mov
clc
in
xorb
es
or
push
repnz
rcr
xlat
in
xor
lock
popf
xorl
adc
lea
popf
gs
cwtl
cmpb
pop
xchg
mov
iret
insb
mov
pop
inc
push
pushf
lds
dec
out
and
outsl
gs
cmpb
imul
fimull
dec
sbb
loopne,pt
mov
sub
mov
mov
add
sbb
out
call
sarb
sahf
test
insl
jns
ret
je
rorb
std
xor
cmp
pop
xor
scas
comiss
add
pop
xor
divl
cltd
xor
add
das
or
jmp
pop
sub
cld
push
insl
xchg
sub
int
std
pop
dec
cmp
or
cld
in
mov
mov
scas
enter
adc
pusha
pop
pusha
add
mov
xchg
and
aaa
sub
xchg
cltd
adc
inc
into
je
insb
popf
aaa
push
or
dec
cwtl
lret
sahf
adc
in
xlat
or
or
adc
pusha
cwtl
and
xor
cs
cs
ror
pop
xor
mov
lods
nop
adc
or
popa
ret
xor
push
es
mov
sub
push
xor
fstl
pop
insl
ljmp
movsl
andl
jns
jno
movl
mov
lods
int3
xchg
leave
jmp
push
push
jmp
repz
jbe
out
adc
jnp
xorb
repnz
lcall
fsubs
lods
out
das
pop
xchg
clc
outsb
ficomps
out
xchg
xchg
inc
sub
pop
add
repz
dec
push
mov
inc
sbb
ss
and
jo
faddl
in
jno
mov
mov
addr16
das
jmp
rcll
sub
shrl
xchg
or
hlt
lret
test
loop
iret
cmp
sbb
xchg
les
xlat
mov
adc
ljmp
loope
mov
add
shll
stc
sbb
jnp
mov
pop
lahf
out
pusha
popf
leave
stos
lds
ja
fs
ror
sbb
sub
ret
or
add
xchg
cmp
xor
and
loope
insb
lret
adc
push
and
xchg
jmp
icebp
ficoms
mov
outsb
pop
mov
out
dec
add
iret
dec
pop
fwait
and
push
mov
shll
or
push
arpl
cltd
mov
stos
cmp
cmp
clc
dec
adc
sub
xor
mov
popa
int3
xchg
mov
and
lcall
mov
push
jecxz
cmp
inc
inc
in
aam
out
stc
jns
sub
sar
insb
pop
mov
arpl
arpl
in
shrl
insb
arpl
int
pop
adc
add
js
mov
jb
mov
sbb
cmpsb
xor
sbb
inc
jge
dec
cmp
inc
xchg
scas
ja
stos
out
sbb
dec
sbb
lret
xor
fidivrl
inc
xor
mov
aad
pop
pop
fcomip
mov
pop
and
add
lods
filds
in
xchg
pop
mov
imul
cmpsb
dec
dec
jle
mov
sti
sub
ss
push
jo
push
outsl
adc
adc
call
sbb
jo
dec
mulb
ficoms
add
xlat
mov
jb
in
sahf
loop
or
jg
lcall
sub
in
or
dec
repz
stos
icebp
dec
cmp
aam
enter
adc
movsl
mov
jae
mov
test
xlat
mov
mov
and
dec
or
pop
rcll
lcall
dec
aad
mov
aaa
or
sbb
movsb
jns
mov
mov
sbb
inc
call
cmpsl
push
test
sbbb
xor
and
idivl
push
sub
fwait
jb
pop
add
aad
stos
dec
cmp
lods
dec
popf
inc
movsb
pop
jle
popf
ds
xor
cli
addb
sub
das
jecxz
push
add
lds
lds
mov
inc
negl
sub
stc
mov
jae
popa
js
fwait
inc
dec
dec
in
jbe
in
sti
xlat
mov
loope
aam
dec
in
ret
sub
outsl
add
jnp
jo
nop
std
push
scas
sbb
cmp
push
je
pop
in
mov
xor
dec
sahf
xor
inc
mov
inc
cmp
push
xchg
sbb
fs
mov
pop
jmp
jl
push
lock
mov
sbb
loop
hlt
cmp
inc
push
jg
sub
dec
xchg
mov
outsl
xor
lods
lods
sub
adc
push
mov
jo
cmc
les
adc
lock
je,pn
mov
xlat
xchg
push
in
into
std
xchg
push
outsb
jns
mov
lcall
or
or
add
xor
in
bound
add
mov
xor
ds
int
lock
in
pop
sub
push
fbstp
pop
adc
and
mov
pop
mov
mov
mov
idivb
mov
mov
pop
into
inc
mov
faddl
push
cmp
xor
xchg
fucomp
sub
mov
mov
lock
pop
cmp
fwait
rcrl
test
cmp
pop
cmp
pop
ret
popf
call
jnp
adc
rcl
xor
loop
bound
scas
daa
or
inc
sbb
pushf
imul
pop
insl
sub
jp
andb
test
in
divb
in
call
adc
mov
lret
out
xor
inc
push
inc
pop
outsl
ljmp
cmp
arpl
lret
mov
jb
mov
sbb
loope
xchg
cmp
mov
hlt
sarb
mov
sub
add
fmull
int3
pop
and
fnsave
jmp
jnp
pop
xchg
ja
shll
inc
sahf
cmpsb
imul
xchg
imul
xchg
or
jmp
nop
outsb
aas
and
pushf
mov
icebp
sbb
pop
rcrl
pop
mov
rolb
push
scas
sahf
pushf
xor
cmp
xor
int3
or
lret
aad
test
or
xorb
xor
subl
sahf
jecxz
leave
mov
or
jns
xchg
dec
pushf
xor
dec
popf
int3
push
push
xorl
enter
inc
mov
enter
dec
mov
ret
outsl
or
jl
adc
jmp
mov
xor
cmp
add
cmpsb
lods
out
jae
xor
sbb
push
jecxz
or
xchg
int3
mov
idivb
dec
mov
lds
shr
jp
add
hlt
jecxz
cs
int
es
xor
stos
pop
sub
sub
in
mov
jl
mov
mov
mov
dec
xor
mov
inc
dec
ljmp
aaa
mov
rclb
sub
dec
xlat
push
popf
rsm
add
and
adc
mov
int3
mov
jmp
adc
mov
shr
push
cli
push
mov
add
lret
loop
xchg
jl
repz
mov
int
outsl
xchg
xchg
test
xchg
push
inc
loopne
test
cmp
sub
bound
loop
xchg
pop
cmp
push
mov
mov
inc
pop
mov
cli
aas
lret
or
adc
dec
inc
pop
pop
fwait
les
sub
subb
jnp
xchg
cmp
pusha
popa
jbe
dec
repz
xchg
andl
fs
sahf
fistps
out
xchg
adc
pop
push
xor
jno
in
roll
and
mov
pushf
xchg
dec
cwtl
xor
pop
dec
insl
test
sbb
adc
xor
lahf
shl
adc
cwtl
mov
jbe
push
dec
loope
dec
cmpb
sub
pop
xchg
out
and
adc
adc
mov
push
sub
or
pop
rcrl
scas
xor
inc
lcall
cmpsl
dec
flds
jge
dec
popf
jnp
jg
cli
sbb
sbb
stc
push
in
xchg
pop
lods
movsl
popf
sahf
stos
xor
or
mov
jae
test
and
jb
mov
jge
sub
sub
shrl
xlat
lahf
dec
mov
es
mov
lahf
into
inc
fwait
stos
mov
mov
pop
push
pop
jno
aam
push
jns
or
xor
mov
add
nop
add
sub
pop
cmc
jle
inc
testb
mov
push
ja
jno
loop
std
push
adc
andl
or
and
mov
arpl
mov
inc
cmp
stos
mov
dec
and
jo
cmp
inc
mov
xor
adc
mov
popa
pop
jae
xchg
jge
mov
mov
mov
and
repz
mov
iret
jb
addr16
aaa
and
or
outsl
mov
cltd
cltd
push
mov
ja
mov
fimull
push
popa
mov
xor
inc
jg
mov
cld
insl
xor
cli
xor
jae
cltd
mov
js
xchg
insb
mov
pop
popa
outsb
movsb
inc
jmp
cmp
or
add
outsb
add
cmpsl
or
scas
inc
aam
movmskps
lock
sub
std
mov
jae
sbb
lods
sub
test
fdivrl
sbb
cmpb
mov
sub
mov
dec
and
cmp
movsl
jg
aam
gs
adc
xlat
jg
outsl
fimull
or
popf
fwait
out
pop
leave
shrb
adc
loopne
nop
or
xchg
ret
jmp
xchg
jo
outsb
push
in
stc
xchg
int3
out
and
stos
adc
inc
or
xchg
dec
es
cli
les
dec
es
pusha
dec
call
test
push
push
inc
mov
add
mov
push
cmp
jmp
jp
fidivrl
mov
pop
test
hlt
ja
mov
jmp
aas
loop
add
fwait
pop
push
scas
call
into
popf
es
or
sub
ja
push
cmp
movsb
mov
in
fists
movsl
pop
inc
call
loopne
cmp
popf
dec
mov
adc
gs
xchg
scas
std
and
loope
test
movsb
cmp
ss
xchg
leave
leave
xchg
add
jne
cmpsb
jae
mov
es
in
out
sbb
xor
daa
fwait
fsts
std
cmp
and
or
and
or
adc
pop
mov
dec
vmread
mov
ret
push
mov
mov
in
enter
shrl
mov
mov
stos
pop
ret
lea
pop
jl
fdiv
fmull
fs
or
subl
mov
sub
mov
sar
mov
adc
sbb
ljmp
sbb
test
mov
stc
lds
xchg
xor
pushf
mov
mov
int
jecxz
xchg
lret
out
inc
test
jno
jmp
outsb
xchg
mov
jg
dec
cmp
cmp
mov
les
rcrl
or
and
push
shrb
jle
mov
xor
jae
dec
sub
sbbb
dec
popa
pusha
jecxz
jb
int
sahf
fdivp
jns
fidivrs
xchg
jecxz
fists
scas
adc
das
inc
mov
mov
mov
clc
push
cs
stc
lods
pop
xchg
cmpsl
imul
xor
shll
sub
adc
adc
imul
add
das
push
addr16
mov
shll
jo
leave
cmp
mul
ss
cmp
rolb
leave
je
mov
xor
pusha
mov
ljmp
mov
push
jecxz
in
cmp
adc
shrb
pop
out
popa
subl
push
ror
or
jbe
arpl
push
or
lods
loop
faddp
faddl
mov
add
insl
cmp
ja
movsb
imull
mov
mov
mulb
adc
inc
aaa
jmp
xchg
jo
jns
xchg
fildl
lret
or
enter
stc
addl
add
push
loope
lahf
mov
jno
adc
test
dec
test
mov
jl
outsb
pop
cmp
lea
and
adc
cmp
pushf
mov
call
std
sub
mov
out
test
push
xchg
pop
mov
push
xchg
push
mov
loopne
jl
fbstp
insl
loopne
sub
gs
or
cmp
pushf
in
jg
push
aam
mov
dec
inc
dec
lret
daa
cmpsl
out
insl
push
aad
out
sub
bound
flds
or
xchg
es
shll
pop
ret
data16
mov
nop
ret
sub
es
cs
xor
enter
xchg
stos
sbb
shlb
movsl
adc
mov
sub
adc
mov
inc
and
test
scas
xor
enter
call
inc
ljmp
add
push
ljmp
xor
jo
xor
pop
mov
ja
hlt
sbb
loope
outsl
lret
loope
rorb
icebp
aad
or
popf
outsl
mov
jp
frstpm(287
mov
dec
cltd
sbb
enter
xorb
mov
adc
cmc
add
cmp
pop
xchg
sbb
jnp
jnp
jbe
sub
insb
roll
ret
cli
lcall
fs
mov
mov
sub
push
pop
cmp
or
mov
or
inc
xchg
push
into
roll
ljmp
popf
pop
push
sub
repz
adc
sub
cmp
movsb
test
enter
push
xchg
rclb
add
mov
bound
stos
dec
sahf
inc
pusha
push
xchg
in
in
shlb
or
loope
or
mov
arpl
pop
gs
fldl
cmp
jnp
mov
jno
sti
stc
mov
ss
sub
jbe
js
mov
jp
loope
push
stc
xor
jno
test
jae
mov
mov
sahf
movsb
pop
xchg
dec
add
lods
mov
xor
cs
in
shrb
andl
fldl
ret
in
sub
ljmp
bound
popf
mov
scas
aaa
mov
jmp
add
mov
loopne
insb
insl
adc
enter
insl
jb
stc
or
js
divb
aad
push
ds
rcrb
rcrl
mov
mov
clc
and
lcall
call
inc
fldt
mov
sbb
data16
pop
mov
shl
lahf
dec
imul
xor
int
call
xchg
cmp
cld
push
fistpl
movsl
pop
mov
and
xchg
cmpsb
cmpsl
pusha
mov
rclb
cmp
js
leave
push
lods
add
addr16
int
clc
lret
mov
ljmp
pop
andb
imul
pop
mov
and
and
push
xor
lea
xchg
mov
imul
dec
cltd
xor
pop
scas
inc
test
test
lret
icebp
add
sbbl
out
ret
addr16
and
inc
mov
sub
sti
push
jg
cmp
ljmp
jl
out
bound
dec
rcrb
xchg
ja
sbb
pop
sti
idiv
jne
or
mov
das
add
fucom
out
xchg
nop
inc
scas
ret
xor
mov
pop
add
mov
mov
mov
mov
test
or
mov
jg
dec
mov
adc
nop
add
dec
pop
mov
insb
icebp
dec
mov
mov
stc
and
bound
mov
hlt
dec
pop
lods
or
orb
cs
in
clc
cli
jb
cwtl
push
clc
sbb
addr16
sbb
aaa
xchg
repz
fdiv
in
lret
fwait
ljmp
clc
insl
daa
addl
push
inc
inc
out
sub
pop
xor
mov
jg
test
add
mov
xorb
fwait
bound
nop
out
out
and
ljmp
mov
push
mov
std
scas
mov
fistl
or
mov
leave
cmp
mov
out
cmp
addl
fs
adc
add
imul
test
call
lods
jae
pop
imull
cmp
cmp
inc
push
leave
jns
pushf
xor
adc
pusha
vpsllw
adc
pop
or
xorl
adc
cmc
adc
shlb
dec
add
pop
loop
xor
loop
pusha
cmp
lret
and
out
mov
xchg
pop
ja
bnd
inc
movsl
scas
repz
mov
aam
je
cmovb
jo
xchg
enter
add
mov
mov
jmp
inc
aas
and
pop
in
dec
cmp
loope
lahf
ret
cmp
call
cmp
dec
ja
mov
push
push
bound
popf
icebp
sbb
dec
int3
mov
xchg
push
stos
push
mov
inc
jle
mov
xchg
icebp
jne
cmc
jle
add
adc
fcoms
ret
shlb
inc
lret
dec
cmp
push
jmp
push
out
in
movsb
test
lcall
cs
dec
push
inc
adc
and
push
xorl
or
or
das
inc
cltd
xchg
cmp
repnz
cmpsl
je
lods
xor
xsha256
cmpsb
rcrl
jp
cmp
xor
jns
adc
sub
negb
jae
das
mov
sbb
add
test
sub
pop
sbbl
lcall
sbb
out
lahf
cmp
and
sub
pop
mov
or
or
dec
cmpsb
in
arpl
cli
insl
mov
aad
stos
push
or
mov
dec
pop
ret
and
out
push
in
outsb
pop
add
inc
mov
and
subb
cltd
xchg
repnz
scas
sbb
scas
mov
sub
jno
bound
add
dec
hlt
dec
outsb
out
add
xchg
mov
lods
mov
mov
inc
sub
jp
insl
out
stc
cwtl
pop
and
cmp
adc
inc
inc
pop
aas
fsubs
loopne
xor
leave
lret
mov
popa
sbb
jns
into
sbb
test
mov
jno
xor
sub
inc
push
fimuls
mov
add
rcll
imul
test
dec
xchg
loop
jne
out
incl
cmp
add
add
das
test
in
mov
shll
push
mov
movsl
mov
arpl
push
sub
sbb
sbb
shlb
outsl
sub
mov
xor
fdivs
push
mov
test
add
mov
cmp
xor
fiaddl
pop
xor
lods
fcoms
pop
mov
jb
cmpb
push
push
addr16
pusha
ja
xlat
out
cld
popl
incb
inc
pop
jecxz
or
cmp
add
pop
outsb
and
add
push
jmp
add
lcall
leave
imulb
cmpsb
mov
pop
adc
xor
ret
ret
testl
and
cmp
inc
inc
fdivs
jp
data16
mov
xchg
sbb
adc
lret
or
mov
enter
add
xchg
popf
dec
push
and
ljmp
subb
mov
xor
jo
loopne
push
jl
outsb
pop
test
add
aas
or
and
lret
out
data16
add
rolb
jecxz
out
push
lret
cmpl
push
jmp
add
shl
cltd
jno
lcall
push
mov
test
mov
cmc
and
sbb
out
jb
jno
xor
mov
stos
mov
dec
or
xchg
push
mov
movsb
ljmp
dec
gs
push
or
pop
out
jae
cli
push
cmp
cmpsl
in
push
inc
sbb
aad
ss
or
push
outsb
adc
out
out
adc
movb
cmp
and
mov
fdivrl
dec
insl
pop
loop
adc
add
ss
rcrl
notl
fstpt
addl
mov
or
dec
sbb
dec
loop
fisubrs
out
cs
push
shll
enter
lret
insl
and
mov
jnp
in
mov
add
notb
in
pop
loop
pushf
movsb
test
xor
loop
and
inc
cmpsl
ljmp
or
mov
es
or
aad
cwtl
cmp
aaa
xchg
lods
xchg
push
or
out
push
sub
push
into
xor
ja
adc
inc
mov
sub
mov
mov
outsl
inc
add
movsb
mov
push
nop
iret
or
sar
jecxz
inc
cld
sbb
push
xchg
dec
xchg
push
hlt
pop
inc
fimuls
sub
push
dec
lods
outsb
adc
sub
inc
mov
push
iret
sbb
sti
stc
mov
gs
xor
in
dec
mov
xor
cmp
xor
xor
lcall
inc
int
cld
int3
lods
pop
fidivl
mov
and
iret
stc
dec
dec
fidivs
mov
inc
inc
sbb
xchg
test
mov
sbb
xchg
xchg
shll
cwtl
push
mov
int
sbb
rorl
orb
xchg
enter
lock
cmpsb
mov
aaa
sbb
xchg
incl
shr
pop
loope
sbb
je
xchg
mov
push
or
imul
push
jnp
es
push
or
push
sub
js
das
dec
sub
lea
ja
shl
add
xor
or
ja
outsb
hlt
cli
dec
mov
xchg
or
cmp
insl
sbb
sbb
lret
pop
add
jnp
lahf
adc
dec
mov
pushf
cmc
mov
xchg
pop
xchg
cld
into
subl
dec
dec
sbb
scas
push
cmp
imul
sti
or
inc
pop
jg
push
stc
scas
pop
mov
insb
int3
sbb
mov
sbb
push
fistps
push
xchg
popf
lock
out
and
jp
xchg
insb
addr16
add
rclb
sbb
ret
test
and
fcomip
nop
and
pop
push
jno
cltd
push
outsb
xchg
inc
mov
addb
arpl
or
pop
fst
xchg
ficoms
cmp
add
xchg
jmp
clc
imul
stos
mov
dec
xor
push
and
arpl
aas
jge
ja
jl
lret
aad
mov
push
push
fistpl
sar
shr
mov
sub
mov
test
sbb
lret
push
mov
imul
xlat
enter
gs
lock
insb
cwtl
fimull
cld
cmp
rcrb
sbb
pop
fidivrs
nop
inc
imul
pop
pop
lret
aad
adc
cmp
lods
ret
xchg
sbb
sub
lret
shl
gs
dec
pop
movsl
rorl
call
ficomps
add
test
stos
mov
xchg
dec
mov
testb
lods
fadd
push
std
add
stc
mov
cmpl
mov
enter
add
test
pushf
push
clc
lds
cli
arpl
lods
sub
dec
pop
dec
sbb
xor
jb
iret
movq
leave
sub
adc
pop
sbb
push
mov
lret
repnz
xchg
js
pop
and
test
aam
fwait
sbb
imul
cmp
xchg
jmp
test
ret
in
and
or
xor
adc
push
hlt
xchg
xchg
xchg
mov
adc
out
push
dec
xor
adc
adc
ja
aad
and
arpl
mov
rclb
or
sub
sarl
ds
mov
push
clc
mov
nop
jecxz
push
mov
jns
lds
scas
outsb
or
jae
xchg
mov
push
add
lret
inc
lret
xchg
in
pop
ud1
test
xchg
pop
je
xchg
mov
add
es
js
cmp
ja
adc
adc
addl
or
call
sbb
xor
dec
insb
xchg
sub
scas
outsl
push
and
cmp
cmp
jle
xchg
and
fisttpll
mov
and
mov
sub
xchg
sub
pusha
xchg
sub
push
push
insl
decb
jo
call
dec
lret
cmp
push
call
inc
repnz
leave
jp
cmp
mov
push
push
in
push
loopne
sub
jmp
adc
xorb
out
jmp
out
outsl
ss
mov
mul
or
xchg
inc
adc
js
mov
mov
aaa
pop
fs
inc
cmpsl
daa
fisubrl
jmp
inc
adc
arpl
add
mov
inc
das
dec
and
mov
or
pop
jle
xor
movsb
test
dec
push
and
mov
test
xchg
add
sbb
mov
sbb
and
test
cmp
in
xlat
mov
in
in
and
mov
push
lret
lods
test
std
xchg
shlb
sbb
dec
mov
sbb
andl
leave
mov
mov
fidivl
aad
sub
fisubs
pop
hlt
pop
sbb
insl
mov
in
cmpsl
mov
push
xor
enter
adc
adcb
mov
pushl
jp
dec
and
idiv
and
pushf
xchg
adc
bound
divb
dec
mov
mov
jo
pop
add
pop
add
xorb
add
fwait
mov
sahf
dec
mov
inc
mov
push
imul
arpl
sub
mov
ds
mov
cmp
pop
data16
xchg
inc
or
dec
and
lods
ss
mov
leave
aam
adc
cwtl
cltd
in
int
insb
pop
call
mov
dec
ret
cmpsl
rcll
data16
aas
adc
lcall
icebp
jb
subl
lock
ficomps
outsl
scas
imul
jecxz
or
adc
push
xor
xor
scas
ret
popa
nop
jg
filds
outsb
cwtl
pop
cmp
out
out
xor
hlt
mov
mov
xchg
xor
adcb
mov
testb
mov
pop
or
dec
and
jg
mov
pop
sbb
sbb
cmp
xlat
loop
mov
adc
daa
pop
loop
mov
xor
icebp
sbb
out
dec
jge
fiaddl
push
push
mov
lods
test
add
fdivrp
lret
fsubp
js
jle
xchg
xchg
pop
mov
cmpb
ss
dec
push
fwait
xor
jae
and
fsubrs
fisttpl
call
add
xor
sbb
jns
pop
push
mov
mov
mov
mov
push
inc
popa
xor
and
xor
jle
js
push
mov
or
ljmp
mov
test
fstpl
xchg
push
imul
ljmp
je
pop
call
jbe
mov
pushf
jle
sub
rolb
imulb
dec
sub
mov
inc
jne
clc
ljmp
xchg
pop
pop
or
xor
dec
int
dec
add
cli
jp
pop
jmp
xchg
lods
xchg
jle
sarl
or
stc
dec
push
xlat
inc
adc
scas
lds
call
xchg
cmp
mov
mov
ret
outsl
adc
add
add
iret
cmp
sub
push
and
sti
sub
ds
xchg
dec
mov
out
mov
jnp
cwtl
es
push
sbb
fs
mov
jl
hlt
ja
lcall
adc
cmc
add
cs
insl
or
pop
push
or
push
addr16
in
popa
pop
mov
jo
xor
mov
push
out
sub
cmp
ljmp
and
flds
cmp
xchg
sti
daa
add
add
fdivr
jg
notl
adc
sti
std
addps
pop
push
pop
or
loopne
lods
das
inc
sub
push
dec
sub
iret
cs
and
jg
sub
or
cmpsl
mov
lret
sbb
sbb
lods
movsl
cltd
or
or
dec
or
andb
pushf
dec
push
das
mov
dec
xchg
jl
jmp
sub
push
nop
inc
pop
mov
stc
cmp
movsl
pop
jle
sbb
and
add
ret
pop
ret
jae
inc
pushf
pop
inc
fisttpll
adc
sbb
push
inc
test
aaa
fwait
mov
or
out
dec
sbb
aam
pop
sahf
dec
and
enter
adc
xchg
sbb
xchg
push
push
xor
cmp
or
cmp
inc
call
adc
inc
lret
cmpl
test
nop
and
movsb
mov
into
repz
je
movsb
jmp
nop
push
insb
sub
jge
insb
ficompl
cmc
fs
cmp
add
xchg
mov
jp
cs
je
loopne
mov
pushf
aaa
data16
sub
movsl
mov
pop
dec
imul
lods
in
and
jg
mov
or
mov
mov
jno
arpl
ds
and
cwtl
sub
ds
insb
mov
out
sbb
adc
push
jge
inc
ror
dec
leave
inc
pusha
movsb
in
icebp
xchg
ss
add
mov
shll
xchg
les
hlt
or
das
cwtl
outsb
out
dec
push
inc
cmp
mov
icebp
lret
cwtl
out
pop
inc
ret
cmp
int3
xor
lret
mov
cvtps2pi
pop
mov
cmp
addl
std
sbb
addb
std
sbb
mov
shlb
inc
loop
mov
jae
lcall
sbb
arpl
cmpsl
sbb
mov
repz
cmp
repnz
add
mov
lds
pop
roll
ret
stc
jl
cmp
sub
pop
and
cltd
mov
aam
int3
jg
xor
je
out
sub
addl
lret
stos
int3
movsl
add
into
mov
mov
hlt
pop
and
ljmp
enter
xchg
adc
adc
adcl
inc
jp
dec
inc
pop
mov
mov
sbb
leave
nop
insl
popa
jl
mov
rorb
je
push
fisubrs
adc
dec
scas
pop
outsl
das
je
and
movsb
xor
aam
sahf
pop
cmpsl
dec
rorl
push
cmp
jns
ror
dec
mov
cmp
inc
pop
push
or
rorl
xchg
add
cmp
lea
push
inc
arpl
imul
adc
test
mov
movsl
shlb
mov
add
jp
xchg
or
and
mov
inc
cmp
repz
xchg
inc
dec
pop
aad
adc
xorl
jmp
mov
imul
push
xor
xchg
or
adc
in
xchg
in
fsincos
incl
mov
das
sub
push
cmp
imul
and
adc
mov
les
add
lds
dec
add
pop
mov
mov
xchg
loopne
les
sub
cmpsl
mov
sbb
cs
std
xor
mov
and
push
outsb
lret
or
xorb
inc
jle
fldl
xchg
sub
dec
inc
sbb
xor
inc
xor
mov
fstpl
sbb
repz
mov
clc
sbb
push
pop
lock
fs
insb
cmp
push
roll
push
incb
mov
loop
lock
inc
fdivrl
push
ja
adc
test
sub
xchg
jle
lahf
mov
lods
and
rolb
or
arpl
inc
shlb
mov
xchg
rorl
push
lock
and
imul
or
cwtl
ss
sti
or
add
or
iret
movsb
das
push
or
jbe
xor
addr16
mov
pop
or
sti
int
enter
lahf
jmp
je
inc
in
push
repnz
sbb
xor
or
outsb
sub
push
out
test
call
mov
stos
push
jns
push
add
mov
loopne
inc
and
cwtl
ffree
ja
xchg
rolb
std
jne
sub
mov
sub
aam
enter
testl
stos
or
lea
or
scas
push
fsubrs
int3
js
aaa
sub
sbb
and
mov
in
aas
push
pop
outsb
stc
inc
push
or
xchg
or
into
pop
inc
mov
bound
aad
rcl
repz
test
stos
rorb
popf
pop
cmp
sbb
xchg
leave
adc
mov
jecxz
std
in
outsl
dec
xor
sub
loope
cltd
adc
xchg
mov
test
cmp
pop
mov
ret
add
inc
pop
lods
gs
adc
aas
mov
jecxz
notb
or
pop
fildll
movsl
add
test
lea
sub
fstpl
pushl
xor
neg
sti
mov
push
lahf
pop
push
push
push
lods
and
les
adc
sbb
pop
and
jbe
out
pusha
js
pop
mov
cwtl
pusha
inc
or
jge
mov
out
or
movsb
jmp
mov
mov
lret
andl
sub
insb
popf
mov
add
imull
pop
cmp
outsb
xchg
es
mov
jecxz
sbb
inc
stos
stos
jmp
ret
cmp
dec
call
xor
cmp
clc
jae
jne
mov
cld
imul
sub
add
push
xor
cs
inc
add
outsl
xchg
mov
dec
scas
ret
test
xor
fldl
sar
inc
fstl
negl
je
loope
into
call
cmp
pusha
negb
push
mov
mov
enter
adc
call
lods
out
sti
lock
mov
xlat
or
sub
mov
jmp
mov
mov
and
leave
mov
iret
sub
push
cltd
mov
frstor
negb
jl
mov
inc
scas
push
je
cmpsl
xor
arpl
hlt
pop
lods
ljmp
pop
and
nop
ljmp
js
mov
jbe
mov
ja
iret
sbb
nop
jbe
addl
add
sbb
jl
jo
xorl
xchg
pop
dec
inc
lods
aad
push
lods
sarb
stos
sub
fidivrs
xchg
inc
mov
mov
lcall
loopne
sbb
loope
andl
xor
pushl
sbbb
lods
mov
adc
mov
test
aam
in
lock
xchg
jecxz
cmp
aam
std
add
pop
cmp
pop
cwtl
jns
inc
fsubrs
jge
subps
push
xor
jb
sub
stc
pop
adc
insb
call
movsl
mov
fistpll
or
and
inc
xchg
pop
fnsave
mov
and
or
int
mov
out
and
mov
int3
cmp
idivb
das
mov
and
xchg
mov
pop
testb
fdivrp
hlt
pop
fdivr
popl
out
stos
loope
dec
xlat
loop
icebp
jmp
ss
in
add
dec
and
sti
in
fisubl
mov
xlat
push
lods
repnz
mov
out
lods
adc
fsubrl
jle
repz
jne
sti
add
mov
mov
je
jbe
and
push
sub
mov
int
push
cmc
push
add
jb
xchg
je
leave
xor
add
sub
xor
out
cmpsl
add
mov
mov
inc
mov
cmp
movsb
out
mov
dec
dec
push
loopne
fnstenv
push
addr16
pop
popa
in
enter
xchg
add
xchg
andb
cmpsl
add
leave
jns
aam
cmp
adc
mov
xor
cmp
push
les
lahf
pop
jge
push
cwtl
je
cltd
dec
fwait
repnz
cltd
andb
jb
pop
in
stos
jp
aas
jmp
pop
add
bound
cltd
stos
cmpsl
fcomps
pusha
mov
sub
mov
inc
push
shrl
add
pusha
lea
mov
xchg
pop
mov
imul
clc
push
divl
cmc
sbb
pop
dec
call
xor
xchg
sub
stos
adc
push
cmc
mov
outsl
ss
test
pop
mov
mov
dec
loop
jnp
notb
lret
inc
in
sbb
cmpsl
das
repnz
mov
ss
arpl
mov
add
mov
pop
dec
xchg
addl
sub
frstor
jle
sbb
incb
jmp
into
jl
je
mov
sub
in
je
or
mov
stos
pop
xchg
mov
out
xor
inc
out
push
add
xchg
rorl
rolb
push
mov
pop
ds
out
mov
pushw
mov
fidivrs
inc
es
int
fs
mov
mov
xorb
add
xchg
fildl
ret
sub
arpl
sub
adc
mov
lret
mov
cmp
push
jge
jg
or
repz
aaa
dec
clc
add
scas
aad
lods
adc
mov
pminub
scas
jge
imul
aaa
xchg
addb
in
fisubs
cmc
lcall
jecxz
or
je
xor
loopne
dec
pop
scas
in
aam
std
mov
inc
sbb
shrb
aad
jmp
in
dec
pop
dec
mov
sbb
dec
pushf
lods
push
ficompl
xor
pop
decl
or
lea
push
decb
or
inc
fs
sub
je
enter
and
das
test
ret
push
add
cwtl
arpl
or
sbb
lret
or
dec
shrl
or
xchg
and
jmp
inc
sub
fwait
mov
mov
push
sti
gs
out
cmp
mov
xchg
or
pusha
stos
mov
jnp
push
xchg
dec
lret
getsec
mov
mov
sbb
mov
inc
sbb
lods
cwtl
dec
push
popa
push
clc
sbb
cmc
sbb
ja
mov
clc
adc
fistpl
push
ljmp
cld
out
ret
or
fstpl
out
or
in
xor
popf
cmp
enter
pop
sahf
mov
into
xchg
jbe
sub
and
pop
ja
rol
lret
or
inc
inc
stc
add
mov
dec
ss
dec
push
mov
imul
add
pushf
std
inc
andb
jns
out
sbb
outsb
adc
aas
add
add
mov
data16
movsl
mov
jl
loopne
add
sbb
insl
xor
xchg
nop
ficompl
cltd
push
inc
push
fsts
loop
xchg
mov
fistpll
mov
and
in
mov
mov
repnz
mov
cmovge
iret
jmp
sub
std
out
add
arpl
leave
fwait
mov
xchg
ljmp
cmpb
inc
outsb
ljmp
jns
mov
out
add
lret
sbb
mov
lcall
sahf
push
pop
dec
mov
fldenv
sub
mov
jne
xor
push
std
out
es
adc
jbe
aaa
jae
insb
hlt
xchg
cmp
cwtl
call
enter
jbe
sub
pop
xchg
jae
inc
fstl
push
pop
popa
ljmp
mov
popf
lea
ret
sub
mov
mov
inc
orl
mov
or
fcomps
xor
or
clc
mov
xor
fadd
outsb
dec
ljmp
pop
addr16
aaa
mov
jae
movsl
int
dec
outsb
jp
rcrl
pop
iret
int3
jp
push
insl
xor
xlat
mov
mov
insl
mov
jle
loop
rcrb
cmpsb
int3
bound
push
xor
sti
sbb
ret
add
mov
movsb
jno
std
sub
lods
push
aaa
test
mov
cmp
das
adc
mov
mov
rcrl
dec
in
pop
jno
or
xchg
sbb
fadd
xorl
es
bound
loope
sbb
mov
pop
jb
dec
loopne
test
mov
cwtl
pop
gs
daa
int3
insb
jmp
stos
imul
jle
montmul
cmpsb
test
adc
stc
pop
xchg
xor
in
mov
aam
loope
sub
jmp
stos
mov
shrl
icebp
inc
mov
jne
jb
xchg
ss
loop
addr16
cmpb
shrl
inc
xor
jmp
mov
nop
dec
pop
or
ljmp
es
jne
adc
sbb
cltd
mov
add
loopne
mov
sub
or
test
push
or
in
cmpsl
data16
xchg
mov
popf
ja
pushf
daa
mov
mov
fimuls
jae
int
inc
loopne
xchg
pop
sbb
and
lahf
pop
fistl
xchg
jno
pop
xor
out
inc
outsb
adcl
pusha
mov
fstps
jg
inc
imul
dec
xor
iret
mov
insb
popf
mov
cld
jb
out
sbb
jnp
rcll
mov
or
fidivl
push
stos
lods
insb
xchg
cmp
sbb
in
icebp
orb
cmp
aad
jle
xchg
cmpsb
jae
jo
inc
in
shlb
loope
out
and
dec
addr16
mov
hlt
clc
jecxz
repnz
insl
lea
mov
jge
push
insl
call
jmp
jno
fdivl
xchg
push
stc
mov
mov
rcll
cltd
subl
push
sbb
insl
or
push
lods
push
add
mov
and
subb
pop
jb
inc
aam
xlat
rol
adc
mov
sub
jmp
aam
ja
sahf
movsl
inc
movsl
ss
mov
pop
jo
adc
dec
sub
xor
and
mov
call
adc
sub
shrb
jne
inc
stos
out
in
mov
mov
rcrl
pop
ja
sub
sub
xchg
pop
pushf
dec
ret
dec
cmp
add
pop
jb
cmp
push
push
sbb
imul
fs
sbbl
mov
or
mov
jno
or
jmp
dec
sbb
pop
mov
ja
cmp
add
pop
nop
movsb
sub
out
imul
aaa
add
int
sti
xchg
push
push
testl
jbe
stos
sbb
mov
sbb
rol
ljmp
xchg
push
push
inc
out
das
push
xor
adc
test
pop
sbb
pop
je
es
xor
ljmp
insl
xlat
jb
and
push
inc
xlat
push
loop
ja
ficoml
iret
movl
mov
dec
ss
add
fs
jmp
jg
dec
xchg
out
ucomiss
insb
loopne
mov
pop
inc
mov
stos
nop
loope
mov
les
mov
into
inc
jae
ret
xor
imul
lret
dec
push
aas
dec
aad
push
push
leave
jae
add
xchg
ret
andl
jb
aad
or
xor
mov
ret
mov
or
daa
add
fistpll
jmp
out
imul
jmp
sbbb
xor
movsb
movsl
adc
shrl
jb
adcb
int
push
mov
cmpsb
add
out
add
addr16
inc
push
fistl
or
mov
dec
mov
push
xor
xchg
mov
popf
mov
jnp
cs
dec
mov
mov
inc
ficompl
mov
and
clc
sub
mov
xchg
xor
leave
and
mov
sbb
cli
int
and
xor
pop
push
pop
lods
lret
mov
jmp
hlt
add
push
in
cs
sub
out
or
cmpsl
jg
xor
pop
lret
clc
adc
outsl
or
cli
fwait
negb
mov
and
std
lret
movsb
scas
scas
mov
push
jo
lods
or
popf
into
cmc
and
inc
jle
push
pop
mov
ror
sub
aas
xor
ret
daa
out
stos
popa
mov
xchg
cmc
scas
shlb
leave
pusha
mov
xor
and
sbb
gs
push
in
adc
jmp
dec
or
ja
adc
sub
das
in
xorl
loop
lds
mov
push
jecxz
data16
push
jne
jl
lds
sbb
enter
imul
sub
insl
mov
adc
jno,pn
in
pop
pop
scas
bound
ret
test
sub
or
ret
xor
fstl
into
rolw
jbe
gs
bound
add
cmp
inc
or
rcll
add
movsl
stc
jo
jno
xor
mov
repz
xchg
pop
cmp
sub
enter
pusha
cmpsl
xchg
mov
xor
cli
add
pop
push
outsb
ds
pushf
xchg
xchg
mov
xor
push
je
add
xor
ja
jb
outsl
dec
mov
xlat
cli
xchg
fsubrp
in
loop
imul
out
mov
loopne
test
jbe
fiadds
test
xchg
sbb
adc
lock
sub
cmp
aam
push
dec
orl
inc
jmp
push
jl
inc
jp
pop
dec
icebp
nop
or
pop
mov
rcrb
test
shlb
xchg
add
das
shll
shll
mov
rcr
mov
jmp
cld
std
out
cmp
clc
js
fisubs
or
in
push
aad
cmp
add
xlat
xchg
jge
iret
fwait
cmp
mov
in
lods
jnp
push
sub
addb
jecxz
add
insb
adc
jmp
leave
dec
lcall
sbb
dec
and
push
xchg
pop
push
cwtl
addr16
stos
add
cmp
dec
out
mov
xor
mov
arpl
shlb
xor
add
or
jg
mov
xchg
cmp
sub
fs
add
repnz
insl
cmp
mov
int3
push
and
sub
sti
das
jae
push
ret
or
cmp
ds
lcall
int
pop
rorl
ret
add
lahf
jge
mov
cmpsb
inc
lahf
enter
out
imul
and
lods
jae
stos
add
xor
sub
fcomps
gs
enter
sub
fbld
repnz
adc
jnp
jne
stc
jge
xor
xchg
xor
aam
ljmp
or
pop
mov
leave
out
jp
mov
sbb
dec
aaa
or
sbb
mov
out
or
dec
or
insl
mov
inc
rcrl
jge
ret
bound
sti
into
mov
jle
jg
pop
lock
cmpsb
fs
andl
mov
dec
inc
mov
dec
test
repz
sbb
mov
fwait
cmpl
fsubl
inc
call
sub
mov
xor
mov
push
xor
dec
sub
ss
ret
mov
pop
fs
inc
pop
mov
or
jmp
fimull
jns
fnstsw
xchg
clc
fimull
jae
das
and
pop
inc
fistl
test
mov
das
test
ss
push
pusha
mov
mov
aaa
mov
sbb
add
ljmp
mov
add
je
aad
lcall
add
fldcw
sbb
enter
or
push
stc
sbb
jp
cmp
and
inc
dec
pop
cmp
mov
xchg
repz
pop
cltd
lret
push
hlt
lea
lret
push
hlt
stc
dec
mov
xchg
fdivrs
and
inc
data16
push
dec
addr16
fwait
insb
loop
iret
mov
mov
push
push
pop
jecxz
mov
mov
or
les
int3
jp
pop
test
mov
aam
sub
dec
ror
cs
inc
std
into
aaa
jbe
jmp
sub
cltd
pop
shll
shll
pop
data16
pop
pop
add
jecxz
shll
adcb
jb
add
test
arpl
mov
sarl
in
and
lds
xchg
imul
sub
pop
stos
mov
sahf
popf
and
sub
fstl
int
jnp
in
push
xor
jo
cld
sub
adc
dec
fcmovb
ljmp
xchg
xchg
fwait
lret
cmp
dec
inc
sbb
add
dec
inc
lds
rcrl
hlt
fcmovu
jg
pop
mov
jno
dec
cmpsl
fsubs
enter
les
mov
or
scas
imul
les
adc
or
ficoml
lea
push
fists
xchg
and
rorl
ret
push
sahf
pop
xor
pop
dec
je
pushf
jp
cmc
test
mov
sbb
enter
push
and
pop
mov
jmp
push
and
scas
jne
jnp
xchg
mov
imul
inc
cmp
shr
cmc
insl
js
add
add
pop
int
mov
mov
jp
pop
fisubrl
add
cld
xchg
xchg
xlat
sbb
imul
dec
fs
sbb
fistpl
or
push
movsl
aam
cmp
in
cmp
push
xchg
adc
sub
jne
adc
lock
jge
mov
into
lods
jae
mov
jl
out
push
add
push
xor
jne
xchg
lret
cld
ret
sub
lcall
popl
mov
xor
imull
xor
cmp
sahf
mov
aaa
aam
daa
test
dec
pusha
in
scas
sub
adc
lods
adc
xchg
lret
scas
fs
xchg
mov
pop
fcompl
pcmpeqd
or
dec
jg
push
sub
pop
sub
jg
push
lahf
shrl
inc
jmp
enter
mov
jle
int
ret
das
mov
hlt
or
dec
out
push
push
andb
lods
orl
aam
arpl
mov
mov
int3
addr16
push
mov
jmp
push
pop
dec
push
push
rolb
pop
popa
mov
or
push
adc
aaa
in
jmp
mull
pusha
adc
sbb
test
shll
mull
push
mov
in
pop
movsl
and
stc
xor
jp
movsb
xchg
pop
fisttpl
in
push
xchg
pop
dec
es
jge
aam
mov
mov
xchg
mov
icebp
mov
inc
pop
inc
sub
jnp
xor
mov
ret
mov
mov
outsl
jp
icebp
inc
ljmp
cmpsb
bound
jmp
popa
sbb
cs
jg
out
test
addl
cmc
cmp
cltd
test
push
jecxz
or
cmp
pop
ds
cmpsl
in
cltd
fwait
xor
jp
call
stos
aam
call
and
inc
aas
in
sub
hlt
ds
sbb
xor
xchg
ret
sbb
jbe
xchg
xor
shll
jg
loopne
push
jno
enter
adc
mov
repz
inc
movsb
in
lret
pop
test
ljmp
sub
in
scas
int
or
imul
loope
mov
ljmp
cmp
rorb
mov
xor
inc
adc
idiv
sbb
jl
bound
jb
mov
subb
xchg
jo
mov
pop
push
sub
and
mov
lds
inc
pusha
aaa
mov
mov
cli
popa
cmp
in
dec
mov
xor
adc
mov
mov
insb
jle
dec
mov
cmp
adc
mov
cmp
in
inc
push
lods
in
lods
lods
addb
ds
vpshuflw
lds
mov
ret
imul
mov
pusha
mov
add
lods
lds
movsl
jbe
lock
mov
sub
int
dec
dec
mov
adc
cmp
in
mov
xchg
push
mov
hlt
xchg
imul
movsl
shl
aam
shll
lahf
adcb
nop
mov
dec
cmp
cmp
fcomp
and
cmp
aas
mov
mov
push
jae
and
flds
xchg
pusha
xor
daa
fwait
mov
cli
and
jb
test
pusha
push
sub
sub
mov
fnstsw
stos
cmp
gs
cmc
icebp
aam
sbb
inc
and
stos
daa
push
inc
mov
ret
out
cmp
adc
dec
mov
int
jp
mov
ffreep
inc
push
mov
fstpl
bound
xor
add
outsl
int
rorb
push
cmc
shrb
nop
cmp
cmp
sub
cld
jle
dec
mov
aaa
sbb
loopne
lock
insb
mov
adc
mov
in
mov
lret
repnz
in
in
inc
imull
lret
or
cli
inc
add
mov
cli
or
mov
stos
dec
push
jp
test
leave
int3
popa
jb
mov
jmp
int3
jg
sub
mov
daa
mov
inc
adc
fwait
mov
andb
daa
pop
xchg
inc
stos
mov
add
test
stos
sub
pop
fs
dec
pop
mov
mov
out
mov
cmp
pop
inc
xchg
add
pause
outsl
or
pop
movsb
xchg
lea
add
sti
sahf
push
or
add
ficompl
mov
int
leave
insl
rol
scas
rcl
and
mov
push
pop
fwait
les
sahf
stos
mov
shl
adc
scas
dec
pop
inc
cwtl
pop
clc
jnp
mov
jae
mov
push
jae
mov
out
clc
and
jne
mov
cld
fimull
in
fimuls
mov
inc
sub
jp
ret
subb
xlat
or
dec
test
mov
pop
std
fists
jmp
mov
inc
sub
call
pop
xchg
sbb
shrl
push
test
xchg
out
add
jns
add
xlat
xor
adc
fdivl
setp
mov
pop
scas
cmp
inc
in
fiaddl
movups
iret
pop
inc
adc
daa
and
inc
shll
testb
add
add
xor
out
test
xchg
test
and
xor
or
ss
lea
and
jmp
cmpsl
sbb
add
inc
notl
scas
in
pop
cwtl
sub
mov
xchg
xchg
jge
xor
jp
mov
scas
cmp
add
jno
das
das
fcom
mov
pop
inc
mov
enter
test
and
cs
enter
push
imul
out
dec
or
jmp
xchg
jmp
xchg
dec
mov
stos
push
cmp
loopne
xor
daa
jnp
mov
js
iret
repz
add
jbe
fwait
nop
mov
or
out
push
jno
stc
pop
or
dec
scas
aam
ss
sbb
test
in
test
int
xlat
lret
dec
cmp
jmp
mov
sbb
and
push
subl
pushf
jb
lods
int
icebp
push
and
adcb
pop
or
clc
mov
and
mov
mov
adc
movsl
cmp
xor
or
mov
hlt
inc
pop
es
cmp
cs
imul
test
push
lods
add
adc
mov
xchg
fsubl
xor
or
and
jnp
testb
sub
adc
data16
cld
mov
ret
lods
sub
into
dec
jne
pop
lret
popf
loope
adc
inc
and
sqrtps
shll
sub
dec
sub
mov
stos
cmp
pop
push
mov
dec
cld
nop
jl
ds
sub
sbb
jo
mov
jmp
mov
jecxz
mov
inc
cmp
dec
scas
xchg
mov
ljmp
inc
movb
andb
sub
popa
jl
ret
int3
mov
iret
je
bound
mov
test
subb
enter
mov
sahf
mov
int3
mov
int
dec
xchg
fnstcw
push
pusha
xchg
xlat
jbe
dec
add
dec
and
push
sbb
fdivrs
notl
cs
mov
xor
imul
dec
or
les
je
fwait
xor
sub
xchg
push
aaa
dec
push
sti
jae
je
mov
add
ror
maxps
push
sbb
xor
or
xor
adc
push
rclb
sahf
es
jmp
ljmp
cmp
imul
ljmp
lods
sbb
pop
xchg
js
add
aad
xlat
clc
and
xchg
sbbb
rcll
mov
adc
stos
rorl
pop
lods
xor
or
pop
dec
pop
pop
cltd
mov
lock
mov
or
pusha
test
shll
push
outsb
ror
outsb
xor
aad
out
popf
push
dec
push
mull
jg
jne
xor
pop
das
popf
push
gs
push
or
fistpl
repz
in
nop
ja
or
sbb
mov
clc
inc
pop
movsl
popf
clc
xchg
xor
orb
add
movsb
jmp
cld
imul
mov
out
cmpsb
adcb
mov
loop
decb
test
jo
sbb
js
nop
pop
sbb
mov
xorb
pop
xor
pop
and
cwtl
push
push
addr16
fucomip
loope
enter
and
rolb
iret
gs
adc
std
test
test
jnp
ds
sar
xor
nop
mov
cwtl
mov
push
sarl
nop
and
adc
sti
cmp
xor
inc
xchg
cwtl
push
sbb
jb
sub
pushf
mov
mov
xchg
xor
push
es
out
sbb
xor
sbb
push
or
js
pop
sbb
orl
inc
out
xchg
sbb
cltd
mov
pop
popf
lea
jmp
add
cwtl
lret
xor
popa
icebp
add
push
sti
clc
imulb
pop
xor
loop
jo
and
xchg
imul
aas
add
cmpsb
lods
cwtl
scas
mov
jb
lret
xchg
adc
aas
pop
fadd
in
test
cmp
mov
je
subl
out
mov
xchg
add
mov
insl
ds
mov
mov
addr16
mov
test
mov
xorb
ret
mov
mov
xchg
aam
xor
scas
int
mov
lcall
outsb
fisubl
mov
in
or
pusha
and
inc
stc
fnstsw
cmp
in
cmp
fcoms
fisttpll
push
mov
and
clc
cwtl
push
mov
scas
scas
pop
scas
inc
gs
ret
and
push
bound
rclb
inc
xor
int3
cmp
cmp
movl
jo
int3
xor
cld
adc
aam
or
outsb
fs
mov
lods
mov
das
adc
andb
stos
mov
dec
das
adc
pusha
pushf
movsl
sbb
loop
cmp
adc
cltd
push
mov
scas
outsb
dec
adc
je
mov
popf
jle
pop
in
inc
lock
jb
jb
pop
arpl
jns
push
xchg
jnp
cmpsb
in
jbe
mov
adc
filds
inc
add
push
pop
or
lods
xlat
xor
push
inc
std
arpl
jae
sbb
int3
insb
in
pop
push
jecxz
xchg
cltd
add
int
and
adc
xchg
pushf
in
mov
dec
imul
and
mov
xchg
mov
or
pop
pop
jl
adc
inc
cmp
sbb
mov
push
mov
sbb
scas
js
repnz
inc
jp
mov
jbe
or
jns
and
sub
fistps
popf
xchg
sti
test
jne
test
jmp
or
mov
mov
cmc
lret
mov
test
push
jecxz
adc
pop
push
mov
xchg
add
lahf
scas
and
cmc
mov
in
aaa
imul
dec
xchg
bound
pusha
je,pn
pushf
fsubs
jno
test
fabs
js
xchg
movsl
hlt
test
test
adc
mov
sbb
pop
jmp
cmp
jne
adc
mov
mov
or
cli
inc
cli
mov
arpl
jp
sub
clc
and
jp
fs
andb
xor
mov
jg
int3
add
jno
pop
mov
jle
mov
sbb
pop
mov
mov
movsb
dec
je
inc
push
shlb
orl
xchg
xor
adc
shlb
push
cmp
xchg
movsb
cltd
aas
in
pop
mov
push
outsl
sub
add
lahf
cmp
aas
adc
mov
push
xor
shrb
jno
inc
jae
cmp
test
mov
cmp
pop
pop
sub
mov
xchg
pop
aas
xchg
mov
inc
mov
mov
fisubs
sbb
adc
sub
xchg
mov
xor
out
push
sbb
and
int
fldcw
cmp
lock
imul
or
dec
sahf
bound
jae
xchg
repnz
mov
dec
mov
mov
jb
fmull
arpl
popf
sub
lcall
call
icebp
xchg
or
sub
sbb
sub
cmp
xchg
mov
out
jo
push
arpl
mov
loopne
jecxz
scas
fistl
xlat
loop
pop
fldt
push
push
ret
pop
mov
scas
mov
xor
iret
das
psrlw
mov
mov
xchg
jo
js
jb
fdivrp
or
xchg
dec
cmc
ffree
or
cmp
int3
inc
out
fdivrl
inc
popf
cmpl
daa
movsl
xchg
mov
aaa
in
sub
inc
scas
scas
jbe
sbbb
fildll
pop
mov
jns
lahf
repnz
ret
cwtl
jno
test
pop
push
mov
jl
cltd
jmp
adcb
pusha
pushf
shrb
pop
movsb
jne
push
es
ljmp
movsl
add
test
rorb
pop
test
cmp
add
dec
es
in
fisttps
mov
dec
dec
lcall
pusha
imul
les
mov
mov
cmp
adc
pop
insb
mov
sub
jne
shr
xorb
leave
inc
fldt
jmp
pop
fadds
loop
or
out
or
rorb
dec
shr
mov
cmp
sbb
mov
stc
sbb
mov
fisubrl
rcr
gs
xor
mov
ret
jg
push
sbb
arpl
xchg
cld
xor
mov
mov
fidivl
fmul
mov
std
push
sahf
sbb
inc
cmpsl
cmp
out
insl
loope
push
jb
testb
pusha
mov
sbb
push
xchg
dec
int
and
int
xor
jp
xchg
mov
std
out
add
stc
rclb
xchg
lods
int3
mov
sub
fsubl
and
imul
decb
push
mov
into
test
mov
shl
mov
sub
xor
sub
ficompl
je
lds
insl
mov
inc
push
cmpsl
inc
leave
xlat
into
outsb
and
sti
aaa
xchg
cmc
pop
add
xor
xchg
pop
lret
sub
add
cltd
lods
push
xlat
in
jle
dec
and
cmp
lds
add
xchg
cltd
inc
xchg
bnd
xchg
adc
jle
mov
rclb
pop
sub
cwtl
andl
mov
js
cmp
pop
sbb
stc
dec
inc
stos
pop
inc
push
shl
gs
jne
int3
in
mov
idivl
mov
push
sti
dec
xlat
mov
mov
mov
enter
jg
test
inc
mov
sbb
div
cltd
popf
or
popf
scas
ds
lods
addr16
ret
jle
mov
adc
dec
mov
xor
mov
xchg
fistpll
mov
lcall
jge
fisttpll
dec
jns
sbb
and
sar
mov
pop
loope
addr16
jge,pt
clc
rcrl
push
out
add
mov
push
es
sbb
push
lods
mov
cmp
cs
jb
mov
fisttpl
fmul
mov
mov
insl
mov
adc
inc
sbb
jge
aas
push
pop
into
arpl
push
jmp
loopne
ja
dec
nop
das
ds
arpl
xchg
add
scas
adc
pop
mov
mov
int
repz
xchg
inc
out
out
out
in
scas
inc
mov
inc
or
lods
inc
inc
or
inc
push
jmp
fiaddl
lock
sub
mov
lock
into
pop
adc
das
and
leave
or
jp
inc
mov
xchg
or
xchg
pushf
dec
mov
rcl
or
pop
insb
or
lahf
paddq
sbb
sbb
ficompl
xor
mov
ds
ljmp
icebp
ds
sahf
sub
adc
leave
loop
ret
insl
push
xchg
imull
lea
in
test
add
pop
xchg
and
jg
push
cmc
arpl
fistl
aad
fildll
jbe
fbld
cwtl
xchg
pop
jg
sbb
xor
sbb
mov
adcb
add
rcrl
lock
popf
pushf
stc
movsl
fidivrl
push
mov
popf
adc
xorb
push
pop
shlb
jecxz
fisttpll
fsubl
clc
inc
pxor
fsts
xor
xor
mov
std
mov
gs
sbb
daa
cmp
int
mov
in
insl
jecxz
imul
mov
scas
xor
popf
push
jnp
xor
and
pop
daa
mov
sub
mov
test
pop
pop
ljmp
test
insb
lcall
cld
fmulp
aad
and
aad
jnp
jbe
test
std
jno
or
repz
fwait
mov
sbb
mov
fiaddl
cmpb
xchg
pop
flds
rolb
stos
mov
push
jmp
jecxz
mov
imul
mov
sbb
rclb
mov
add
push
mov
lret
insb
pop
or
xor
dec
cltd
lds
xor
cwtl
js
jo
inc
iret
fistps
push
into
popf
jp
lds
mov
popf
pop
mov
add
pop
cmpsl
mov
inc
mov
loope
mov
push
jnp
in
cs
imul
inc
pop
fisttpl
dec
or
pop
mov
scas
xchg
sbb
das
cs
je
or
jp
data16
xor
into
shll
int3
shll
adc
das
jecxz
leave
dec
pushf
cmp
fidivl
rcr
sarb
jg
sub
adc
push
aas
movsl
loope
in
dec
push
fdivrl
les
mov
mov
push
fcomi
dec
sub
xor
mov
movsb
les
pop
cmpsl
and
fidivl
lmsw
push
pop
orb
jmp
repnz
jae
std
leave
add
sbb
or
mov
mov
pop
jg
dec
xor
mov
jl
xor
mov
cs
jle
movsl
inc
jno
and
pop
bound
orl
cs
repnz
sub
push
fcoml
jo
xchg
jl
sbb
dec
loope
mov
cs
jle
push
push
mov
mov
stos
cs
cmp
jp
add
mov
mov
mov
out
ror
and
out
sbb
daa
or
mov
jge
push
faddp
nop
imul
notb
lret
xchg
xchg
sub
arpl
lods
push
sarb
lods
xchg
aad
pop
stos
push
gs
adcb
mov
addl
aaa
lret
addl
out
mov
mov
sub
ss
pusha
xchg
sbb
sbb
ja
int3
sub
addr16
mov
ret
and
aad
fnstenv
pop
xor
xchg
fsubr
popa
lret
test
jns
je
test
movlps
inc
mov
pop
jbe
fcoms
lret
xchg
push
into
ja
mov
outsb
xor
movsl
push
in
test
or
and
fcmovbe
jo
sbb
cli
mov
lods
stos
pushf
xor
mov
cmp
imul
cs
outsl
xor
ja
push
cmpsl
shrb
mov
stos
pop
cs
cli
pop
push
push
xor
outsl
inc
push
jbe
aad
in
outsb
inc
inc
cmp
call
out
mov
popf
dec
mov
sar
dec
fucomi
gs
adc
dec
sar
mov
aas
add
in
pop
out
nop
loope
cmp
pushf
addr16
fimuls
sbb
mov
xor
aaa
fs
push
inc
pop
int3
push
jae
lahf
xorb
lret
pusha
adc
dec
add
sub
xor
adc
or
xchg
inc
add
push
sbb
push
dec
movsl
mov
call
data16
adc
rcrb
jns
inc
aaa
cli
push
stos
lods
xchg
jmp
pushf
mov
jge
xor
enter
mov
add
in
rcl
enter
cmp
mov
aad
cmpsb
sarb
test
or
jmp
adc
mov
les
jl
gs
pop
mov
fidivrl
subl
inc
mov
cs
jmp
nop
push
scas
pop
add
inc
arpl
xchg
imul
or
fcmovu
xor
inc
fidivl
insb
sub
jge
pop
dec
inc
les
mov
idivb
and
movsb
xchg
mov
xor
inc
test
ret
int3
mov
xorl
pushf
push
lock
xorb
cmpsl
std
sub
outsl
add
mov
add
loope
lods
pop
and
xchg
adc
aas
push
rcll
pop
push
sbb
aad
push
push
nop
jg
sub
leave
ss
call
mov
hlt
xchg
stc
stos
pushf
xor
adc
mov
mov
rorl
mov
push
insb
push
stos
test
adc
and
xor
or
adc
mov
mov
test
insb
dec
out
jl
push
loope
sub
cmp
fiaddl
adc
fstl
rep
outsb
fists
daa
push
fbld
sti
mov
lret
rcr
test
cmp
out
bound
andl
mov
loop
into
sbb
ja
arpl
mov
jno,pt
sub
ss
aad
or
stos
scas
sub
lret
inc
bound
mov
mov
scas
gs
push
dec
loopne
fdivrp
jge
add
aas
ss
and
into
lods
adcb
jecxz
push
jns
jg
or
cmp
negl
xchg
inc
rclb
adc
mov
mov
xchg
les
pop
mov
ficoml
pop
les
fstpt
testl
ds
sbb
dec
pop
nop
subb
loope
lock
pop
cmp
cs
stc
test
dec
xor
dec
pop
mov
mov
xchg
mov
cmp
adc
in
fildll
iret
je
sbb
fdivrs
dec
lcallw
add
loop
sbb
mov
push
sbb
enter
inc
insb
jae
push
mov
cmc
shlb
ficomps
lods
dec
sub
jp
outsb
lcall
xchg
push
lods
xor
push
jb
popa
cmp
out
sbb
jl
adc
push
jbe
jle
daa
xorb
mov
loop
incb
and
lock
or
cmp
orb
or
jmp
or
dec
test
ret
mov
mov
xchg
outsl
inc
push
add
dec
call
add
mov
jne
arpl
sbb
add
jg
inc
cvtdq2ps
mov
xor
leave
decl
mov
cmpsl
and
outsb
es
pop
stc
dec
or
cmc
jno
xchg
inc
push
outsl
das
cld
aas
int3
mov
je
mov
loope
add
jbe
mov
cmc
xor
push
in
sbb
push
and
decb
and
sub
xor
xor
add
mov
adc
std
mov
jae
filds
or
xor
dec
push
jbe
cmpsl
std
push
data16
inc
popf
ret
or
cmpsb
sub
adc
sbb
dec
and
mov
mov
inc
push
adc
mov
les
pop
iret
jl
xor
mov
xor
sbb
test
mov
stos
stc
shrl
mov
cld
jb
mov
dec
xor
jle
and
mov
and
loop
sub
pop
pop
rcrb
pop
sahf
add
lods
testb
push
setge
or
dec
mov
mov
int
rcr
mov
sbb
or
stc
mov
or
mov
hlt
add
add
and
nop
and
pop
loope
movsl
mov
data16
lods
xchg
mov
pop
test
and
daa
mov
imul
ds
in
xchg
inc
stos
adc
mov
popf
push
hlt
adc
pop
les
insl
jg
hlt
xchg
ret
js
leave
mov
leave
daa
enter
pop
loop
call
js
jmp
jecxz
mov
dec
push
sbbb
das
push
mov
inc
mov
icebp
fimuls
push
inc
xor
add
dec
scas
popa
pop
or
and
inc
xor
inc
dec
inc
out
idivl
test
mov
iret
mov
aam
out
lcall
inc
cld
out
xchg
orb
sti
or
jo
cmp
repnz
fdivrp
sbb
hlt
mov
add
sub
rolb
mov
cmp
pop
out
add
sub
push
xchg
repnz
scas
sub
pusha
call
pop
xor
xchg
push
in
sbb
adc
inc
jmp
push
ss
sub
mov
mull
ss
data16
or
mov
jb
push
fmull
mov
stc
jmp
jnp
pop
inc
in
jbe
add
inc
mov
scas
xchg
fsubr
out
fcoml
repnz
enter
lret
leave
aam
cmpsl
xor
popa
cwtl
jp
xchg
pop
sar
dec
jl
xlat
inc
jne
sub
mov
pop
sbb
xchg
dec
push
fnsave
les
jne
mov
outsl
or
adc
jbe
jne
cmc
push
pop
or
scas
mov
hlt
add
jle
jbe
sbbb
out
push
insb
adc
cmpsl
mov
in
pop
cld
notl
mov
roll
into
test
xchg
add
pop
sub
mov
loope
ljmp
jne
insb
cmp
lea
mov
dec
pop
es
sti
adc
cwtl
lret
dec
mov
add
push
dec
pop
inc
cs
mov
mov
adc
dec
nop
jae
xlat
dec
mov
and
loopne
mov
aad
popa
xchg
push
cmp
std
jp
mov
or
inc
mov
stos
lahf
dec
mov
push
jne
hlt
xchg
inc
pop
ret
ret
addr16
mov
xchg
sub
dec
adc
push
js
and
lret
cmp
das
mov
dec
add
or
cmpsb
in
mov
fs
sbb
popf
jecxz
je
adc
xchg
lods
or
cmp
jle
mov
push
adc
sbb
pop
loope
jp
daa
or
and
cld
push
divb
insl
mov
xchg
out
out
jns
and
call
push
icebp
or
push
out
xchg
addl
jns
add
imul
fs
mov
adc
fidivs
sbb
cmp
xor
pop
sbb
aaa
sti
jmp
and
in
add
insl
push
mov
adc
add
fdivs
shlb
xchg
mov
xor
loope
in
pop
lret
test
pop
push
shl
lret
jg
daa
push
add
sub
mov
or
xor
out
pusha
sbb
roll
adc
jmp
fidivrs
inc
iret
in
int3
fiadds
cmpsl
jmp
cs
subl
push
sti
push
dec
xchg
push
inc
mov
fisttpl
inc
push
mov
js
xchg
shr
fmuls
sbb
cmp
nop
idiv
inc
and
fcomp
xchg
xchg
mov
pusha
test
pop
sarl
jmp
hlt
dec
insb
lahf
push
add
jecxz
mov
jne
xchg
rolb
jmp
push
lcall
sbb
and
add
repnz
dec
mulb
mov
mull
ljmp
int
cwtl
mov
add
dec
xchg
outsl
std
mov
push
push
sbb
fwait
inc
inc
xlat
lock
stos
leave
xchg
popw
ja
test
movsb
xor
pushw
add
sbb
sti
sub
rep
fnstsw
neg
push
pop
sub
inc
push
inc
rolb
push
test
push
bound
ds
cmp
mov
sub
into
loopne
aam
sbb
add
popf
les
mov
sbbb
cmpsb
fmuls
fwait
inc
repz
jae
xor
jb
imul
ljmp
and
stc
pop
scas
dec
mov
pop
cbtw
mov
sbb
xchg
and
dec
outsl
jg
test
pop
sbb
bound
rclb
sub
pushf
xor
insl
js
int
insl
sbb
push
arpl
fnstcw
and
mov
mov
adc
and
dec
inc
cmp
addr16
xchg
in
xor
in
inc
data16
mov
cwtl
xor
pop
cmpsb
les
sbb
test
push
ds
ja
mov
add
mov
mov
pushl
idivb
rcll
daa
hlt
cmpsl
mov
mov
int
mov
and
mov
lods
and
fwait
into
fs
push
repz
xor
outsb
cltd
filds
data16
lock
sbb
sahf
fs
cmp
adcl
mov
inc
inc
sbb
or
mov
rcl
mov
mov
pop
dec
lods
in
aam
inc
mov
sub
xchg
mov
xchg
or
sarb
mov
mov
popa
mov
mov
aaa
loope
inc
inc
testl
cmc
jge
xchg
mov
int
xlat
pop
cmp
inc
clc
cmp
add
or
mov
push
adc
in
scas
ja
cli
pop
jecxz
shl
js
sbb
add
iret
int
iret
cs
pop
lcall
stos
lods
xlat
push
add
pop
xor
xlat
aad
sahf
xchg
test
stc
sahf
fcoms
js
mov
push
cmp
aaa
mov
jp
jo
cmc
mov
lret
or
pop
jmp
int
in
lock
jae
insl
inc
cmpl
xor
loop
idivb
mov
movsl
stos
aaa
orl
popf
mov
inc
outsb
adc
push
adc
pop
and
cs
subl
movaps
push
or
loop
es
popa
jle
daa
movsl
test
dec
adc
std
call
mov
sldt
push
lret
cli
iret
int3
cli
jg
mov
cli
add
mov
or
cmc
inc
inc
jns
mov
cmp
mov
xorl
movsl
sbb
fs
jb
lods
lahf
shlb
push
xchg
xchg
mov
lret
inc
enter
movl
sbb
mov
xor
je
les
fs
int
cmp
cmpsb
sub
sahf
xchg
mov
gs
or
xchg
jns
imul
jno
mov
mov
xchg
clc
js
fcoml
inc
inc
sub
jne
pop
xor
out
lds
mov
int
jae
idivb
int3
gs
idiv
neg
jae
and
jo
repz
jbe
pop
jl
jne
mov
cmpsb
rcr
leave
dec
pushf
push
xchg
out
insl
jp
add
pop
lahf
add
aaa
int
out
aaa
sub
xchg
pop
adcb
repz
mov
dec
xor
movsl
outsl
test
mov
ds
mov
in
jmp
enter
inc
mov
inc
mov
stos
daa
mov
add
xor
mov
cmpsb
and
mov
add
xchg
mov
mov
sti
push
stos
jb
cltd
scas
jno
std
movsb
mov
into
pop
dec
movsl
scas
fisttpl
in
iret
push
sti
stos
test
mov
adc
dec
push
xchg
test
sub
and
movsb
cmp
add
pop
js
inc
inc
push
cmp
xchg
lods
movsl
jns
jge
ret
sub
and
pushf
pop
ljmp
or
pop
pop
ss
xor
out
push
outsb
mov
jns
jle
movsb
jo
push
add
je
popa
ficompl
nop
push
jg
and
cmpl
pop
mov
adc
ljmp
adc
jne
insl
mov
or
dec
into
xor
aas
or
sbb
pop
cld
enter
cwtl
cmp
in
jns
push
clc
insl
aam
mov
mov
es
add
pop
out
cmpsl
stos
pop
jle
mov
sbb
xor
roll
vmovmskps
add
cmpsl
fdivrs
xchg
or
push
xlat
rorb
fsubrp
jb
cmpsl
js
test
stc
das
outsb
inc
lret
pop
mov
insl
and
shl
and
mov
addl
or
rcl
xchg
inc
imul
in
or
dec
and
and
pop
add
daa
in
lret
pop
scas
jb
cld
jge
mov
adc
add
rcl
xchg
dec
ja
inc
xchg
sub
jbe
lods
loope
or
mov
or
je
add
pop
xchg
fwait
pop
pop
pop
arpl
push
repnz
jns
xor
ds
subb
iret
lds
mov
int
or
fcom
int
xchg
jbe
mov
fstpt
lcall
xor
rep
scas
rcrl
pop
mov
jg
icebp
jmp
enter
xor
mov
jle
cltd
and
test
mov
mov
mov
and
mov
cmp
inc
daa
xchg
jl
sub
mov
divb
or
sub
sbb
or
imul
pusha
push
xor
dec
lcall
mov
flds
inc
sub
pop
shll
mov
add
repz
lods
lret
dec
dec
repz
push
or
outsl
jg
push
pop
repnz
push
push
inc
inc
outsl
arpl
leave
rcll
adc
push
in
push
hlt
xchg
in
mov
hlt
pop
test
call
jge
adc
lcall
cs
ret
xchg
mov
cmp
mov
mov
push
out
push
xor
lea
les
lret
mov
gs
dec
jl
daa
nop
sub
popf
jle
je
ja,pn
and
mov
jg
enter
inc
ds
pop
in
pop
adc
mov
push
lods
push
scas
cmpsl
sarl
cmp
nop
pop
adc
xlat
push
jmp
fsubs
adc
aas
lahf
iret
out
cmpsl
in
int
lret
aaa
lods
jp
test
je
rorb
mov
push
sub
ds
mov
jne
pop
les
aas
iret
inc
push
cmp
fcoml
icebp
and
aaa
loope
mov
cmp
and
xorl
adc
dec
push
ljmp
out
jecxz
sbb
and
ret
daa
and
daa
outsb
inc
movsl
aaa
cmp
cwtl
sbb
and
inc
flds
sbb
shl
jb
dec
leave
push
cmpl
aas
jnp
int
dec
mov
sahf
push
or
ja
xchg
and
cmp
jle
dec
xchg
add
sbb
jbe
jo
lret
sbbb
pop
push
mov
daa
inc
sub
ja
xlat
fidivl
dec
mov
xor
push
xchg
ss
sub
arpl
sti
es
sbb
fisttps
mov
icebp
add
lahf
lods
and
inc
stos
push
stc
add
xor
push
jle
mov
sbb
outsl
push
ud0
sub
push
mov
lea
jo
movsl
addl
mov
push
mov
rcl
push
andl
sub
repnz
xchg
scas
fldt
shrl
push
loop
dec
xchg
data16
push
lods
xor
je
mov
jns
cld
sub
sarb
lods
pushf
out
loopne
iret
and
pop
fistpll
adc
xchg
adc
ret
mov
dec
rorl
inc
xor
xchg
jp,pn
movsb
xchg
cli
sub
mov
movb
out
sbb
jle
adc
clc
cli
fs
xchg
pusha
cmp
outsl
fldz
insl
sbb
push
arpl
out
xor
xchg
int
movsl
mov
mov
or
les
mov
sbb
in
inc
mov
outsl
insl
dec
xlat
fucomi
mov
out
loopne
dec
xchg
orb
inc
jae
jmp
out
shll
dec
lock
out
adc
sub
gs
adc
lret
mov
dec
outsl
test
jle
push
mov
push
jle
push
sti
push
test
out
xchg
rcr
stc
pop
xchg
and
adc
cs
cmp
icebp
and
adc
jae
or
stc
addl
xor
or
jmp
jbe
pop
in
xchg
pushf
test
pop
lret
fistpll
jae
dec
lret
push
cmp
popa
or
xchg
movsl
xor
push
and
lods
into
mov
xchg
fnsave
cmpsb
sub
adc
nop
mov
fsubrl
jbe
popa
dec
mov
pop
jnp
inc
fisttpll
pop
lret
aad
jo
bnd
jo
testb
int
xchg
insl
inc
and
pop
push
jle
mov
xor
loopne
movsb
push
mov
or
xchg
adc
jbe
rcrb
mov
ja
cmpsl
sbb
push
in
hlt
nop
fisubrs
xor
and
fists
rorl
inc
sbb
pop
xor
mov
aam
mov
cwtl
xor
bound
stos
push
sub
sbb
gs
push
cmp
pop
mov
jecxz
mov
xor
push
dec
mov
mov
ss
push
push
cwtl
je
adc
jmp
pop
sub
mov
fsubrl
call
fdiv
and
pop
xor
inc
mov
xor
in
mov
jmp
std
xchg
xlat
pop
jne
es
mov
sbb
aam
repz
lds
cmc
fwait
in
cld
cli
test
and
in
mov
or
addr16
pmovmskb
xchg
cmp
test
cmp
dec
sub
xchg
sub
xchg
inc
in
push
inc
movsl
in
sbb
dec
stos
cmp
into
loope
mov
test
stc
mov
pushf
sbb
xor
jnp
cwtl
cmpb
pop
lldt
mov
out
pop
in
push
push
mov
mull
lods
push
dec
js
mov
into
popa
jl
xorl
inc
data16
dec
mov
es
stos
cli
ret
frstor
pop
lahf
roll
adc
adc
sahf
or
adc
mov
sub
jno
mov
pop
sbb
cmpsl
sbb
mov
icebp
leave
mov
fldt
xor
or
divb
test
sahf
mov
fcmovne
aaa
icebp
push
outsb
or
sti
mov
fcmovbe
push
or
lods
sub
imul
stos
pushf
sub
sbb
lcall
push
fimuls
fcmovu
dec
fs
sub
or
ljmp
mov
int3
in
xor
adcl
cltd
dec
xchg
inc
leave
add
out
arpl
adc
inc
xchg
sahf
xchg
cmp
inc
pop
add
xchg
mov
fldcw
negl
test
pop
test
sbb
mov
and
cld
jmp
in
icebp
lock
inc
ja
xor
popf
lcall
mov
or
jecxz
sub
daa
stos
dec
adc
imul
loope
nop
cltd
fildl
imul
fwait
adc
push
fldt
jge
mov
pop
mov
inc
arpl
insl
cwtl
movsb
data16
loopne
inc
push
xchg
sbb
inc
loopne
aaa
test
cmp
notb
pop
add
push
adc
jnp
inc
mov
ja
and
lret
fxch
cmp
mov
movsl
fwait
mov
stos
xchg
fnstcw
out
mov
or
jle
pop
inc
jae
add
pop
adc
pop
fsubl
cmp
stos
xchg
bound
insl
lock
jmp
rol
icebp
lcall
ret
cmpsb
push
xor
loope
cmp
add
xchg
ljmp
mov
test
sarb
push
insl
mov
mov
xor
push
sbb
mov
xchg
lock
cli
cmp
sub
sub
jecxz
jmp
and
idivl
out
jg
or
or
mov
sti
std
arpl
fldenv
mov
sub
jge
cmc
cmp
sbbb
inc
lock
je
mov
arpl
sbbb
adc
mov
push
xchg
fcomip
insl
dec
or
or
adc
sub
imul
lock
sub
lds
rcll
iret
inc
xchg
xor
mov
js
inc
xor
in
fnsave
mov
dec
sbb
xchg
sbb
fldenv
push
xchg
xlat
inc
push
mov
sbb
xor
shlb
test
popf
sbb
xor
jl
mov
jnp
mov
cmp
and
imul
push
mov
mov
mov
mov
add
gs
mov
add
jns
and
sti
addr16
bound
dec
gs
mov
cli
xor
push
int3
dec
dec
xchg
push
xchg
mov
sbb
adc
mov
jmp
push
outsl
lcall
stc
jp
nop
loope
cli
adc
xlat
sub
stos
dec
pop
add
and
sbb
lea
mov
push
mov
insl
push
jg
sarl
out
and
adc
in
je
dec
fidivs
sbb
adc
sbb
hlt
leave
dec
inc
lock
jmp
dec
push
fsubrs
testl
inc
repnz
outsl
out
push
fs
mov
dec
sbb
out
test
mov
jbe
jo
inc
push
es
nop
add
dec
sub
rclb
xchg
in
or
jb
add
int
sbb
jno
adc
insl
sub
jne
xchg
iret
loop
mov
stc
sub
repz
pop
jecxz
jmp
push
dec
jo
xchg
push
out
xchg
mov
adc
xor
pop
dec
and
insb
sbb
push
lret
cmpb
mov
popa
fmull
mov
stos
hlt
lret
das
test
ret
xor
ljmp
xor
mov
lods
hlt
aad
inc
xor
shrb
gs
pushf
imul
mov
in
push
jmp
gs
xchg
and
mov
mov
jmp
cli
loopne
gs
jns
movsl
mov
fwait
mov
loope
mov
pushf
and
inc
push
and
mov
mov
pop
movsl
jmp
rcll
into
sbb
dec
sub
adc
or
js
add
sub
inc
clc
xor
ret
sti
jecxz
std
push
mov
or
scas
movl
and
aas
test
push
cmpsl
loop
pop
adc
sti
jns
mov
pop
xor
mov
inc
orb
loope
jmp
mov
enter
lods
loop
rclb
pushf
mov
or
testb
pop
dec
imul
xchg
cmc
inc
cmp
jp
leave
loope
out
jecxz
andb
mov
stos
and
mov
loope
mov
xchg
sub
ret
mov
mov
inc
or
add
inc
and
sahf
loope
jnp
push
arpl
mov
pop
adc
and
inc
shll
shrb
add
icebp
lds
std
push
clc
add
inc
test
bound
testb
jecxz
popa
dec
pop
call
and
andb
sub
int3
fnstsw
andb
jle
sub
ljmp
lods
ret
cmp
mov
aad
mov
outsl
inc
lds
lds
rsqrtps
fwait
push
mov
ds
xlat
lock
arpl
xchg
into
dec
in
lock
inc
add
rorb
out
xor
push
lds
add
pop
jmp
push
and
ficoml
pop
movsl
ds
mov
xchg
mov
pop
pusha
repz
movsb
pop
mov
dec
cmpsl
ret
add
push
ja
insl
xchg
xchg
in
lock
push
fwait
push
lods
dec
scas
sub
idivb
std
push
push
popa
sti
fiadds
xchg
pop
mov
fisubs
sub
pop
js
aaa
fwait
mov
out
adc
js
push
sti
push
daa
mov
pop
mov
ljmp
ficoms
mov
sub
push
cmpsb
sti
inc
fcoml
push
xor
pop
jo
fs
mov
aaa
mov
cmp
push
ja
adc
or
or
shl
adc
pop
xchg
sbb
pushl
sbb
lcall
cmp
sub
stos
mov
dec
int
loope
jle
leave
add
shlb
cmp
inc
dec
dec
sahf
subl
or
pop
aam
int3
inc
ds
aaa
adc
dec
adc
insl
nop
push
sub
mov
inc
popa
aad
popf
call
mov
sahf
loope
xlat
dec
loope
sahf
pop
mov
daa
imul
sbb
xchg
shll
xchg
cli
fsub
lock
and
scas
inc
dec
adc
outsb
int3
arpl
xchg
lods
mov
lahf
gs
dec
sub
cmp
push
fistpll
std
imul
jo
adc
push
push
pop
daa
aam
fsts
add
jle
cmp
jno
sti
mov
aad
mov
dec
jg
fs
mov
and
mov
cmp
cmp
mov
dec
and
cmc
or
mov
dec
adc
adc
outsb
push
es
inc
js
xchg
mov
movl
mov
or
mov
popa
cmp
leave
push
pop
xchg
test
mov
test
test
cmp
cli
mov
push
call
or
fs
movsl
dec
xor
push
aas
mov
jmp
inc
ss
arpl
push
pop
inc
ret
mov
mov
mov
cmp
cmc
or
mov
and
fistpll
sub
mov
arpl
lcall
pop
rcll
ret
or
pop
int3
call
sbb
inc
insl
movsb
dec
decl
push
add
jbe
outsl
ss
mov
xorb
push
lods
outsl
aad
cmp
lcall
xchg
cltd
dec
inc
push
mov
mov
inc
push
lret
or
nop
and
ds
sub
insl
ret
push
pop
sub
dec
ljmp
or
mov
mov
fcomps
jg
xor
or
faddp
dec
sarl
or
mov
pop
pop
hlt
jg
mov
or
mov
inc
pop
out
shlb
and
aam
data16
in
pop
out
ficomps
mov
pop
mov
xchg
pop
aam
dec
dec
add
xor
sbb
fnstsw
addr16
imul
push
jmp
mov
push
shrb
xchg
jmp
call
movsb
rclb
adc
repz
iret
add
pop
jnp
lods
jae
lcall
and
or
mov
hlt
es
xchg
insl
mov
xchg
push
push
add
lret
xchg
sub
push
or
jecxz
jnp
loopne
testb
mov
cmp
inc
pop
mov
cmp
cmp
mov
outsb
ss
jno
mov
jns
push
sahf
inc
jge
adc
inc
nop
pop
rcl
add
or
int3
repnz
cmp
and
mov
cmp
xchg
jns
push
cmp
push
sub
fdivr
inc
sbb
loop
ja
and
add
rorl
cwtl
test
dec
cmp
lds
sub
xor
ljmp
jae
aam
jge
sbb
jo
outsl
aam
jo
rcr
aas
test
sbb
mov
pusha
sbb
fmull
add
mov
mov
jge
sub
mov
rorl
jecxz
ret
ja
data16
movsl
or
loop
push
push
fsubs
xchg
xchg
sbb
cs
xchg
xchg
stos
xchg
add
mov
lds
lods
cwtl
push
insb
mov
xor
push
iret
push
aaa
dec
and
ljmp
dec
and
cmp
mov
ret
nop
and
pop
ret
popa
shll
xchg
sbb
movsb
push
fdivl
into
dec
push
and
stc
pop
shr
fstps
inc
mov
fs
das
push
sbbb
out
jno
call
mov
mov
cmp
fisttps
pop
cwtl
aas
repz
mov
cmp
xchg
mov
xor
sub
lret
cld
incl
popa
loopne
inc
and
pop
jp
inc
shrl
inc
test
push
sub
ror
sub
scas
fildl
cltd
jecxz
jae
push
cmp
pop
sub
mov
lahf
push
mov
jp
mov
push
jo,pt
mov
sar
stos
icebp
mov
sub
lret
xchg
pusha
cwtl
not
push
mov
call
cwtl
xchg
add
psubsb
mov
rorb
lcall
shlb
mov
cs
xchg
or
mov
sub
stc
mov
cmp
inc
loope
push
sti
je
dec
inc
jne
push
pop
pusha
fucomip
mov
mov
aam
push
dec
sbb
lods
int
loopne
shrb
imul
or
adc
cli
push
test
std
fldenv
adc
jle
lods
fwait
movsb
mov
mov
push
mov
pop
xorb
jmp
testl
jne
mov
sbb
sub
les
inc
icebp
adc
mov
std
xchg
sahf
push
movsb
ss
clc
mov
test
mov
push
pop
imulb
fs
sbb
cwtl
pop
push
cmp
ds
cmp
mov
jno
movsb
in
mov
inc
or
or
imul
mov
sbb
daa
add
add
int
push
hlt
or
mov
dec
std
mov
leave
sbb
js
dec
subb
je
sub
data16
iret
pushf
push
mov
fnstenv
and
ljmp
and
testl
imul
xlat
mov
mov
es
scas
mov
mov
pop
jne
cmp
fidivs
adc
outsb
xor
dec
dec
push
sbb
push
fucom
push
adc
out
mov
or
jl
outsb
insb
loop
xor
dec
insb
insl
int3
xor
jb
mov
push
mov
int3
and
movsb
jp
into
imul
sti
daa
pop
inc
mov
jmp
idivl
dec
adc
mov
lcall
cmp
xlat
in
jg
xchg
sub
fs
cmc
xchg
imul
imul
cmc
or
jle
leave
les
pop
lret
sti
fnstcw
test
mov
aaa
pop
pop
cmpb
sbb
xor
or
sahf
xchg
popf
xchg
pushf
cmpsl
sub
pop
pop
mov
push
dec
dec
mov
pop
sub
repnz
xchg
xor
xchg
test
pop
lcall
sbb
aad
lods
mov
out
movsb
loop
repz
cmpsb
test
je
sbb
jno
lea
xchg
mov
push
push
pop
cmp
incb
cli
mov
push
repz
adc
cltd
das
sub
sub
xchg
push
ljmp
lods
and
in
xor
xor
jno
jecxz
push
xchg
cli
fisttpll
popa
inc
outsl
rolb
addr16
xchg
aam
xlat
into
xchg
dec
xchg
outsb
nop
out
xor
gs
mov
jecxz
push
sti
pop
xchg
adc
jmp
and
dec
push
popa
push
sub
fldenv
movsl
fcmovne
cmp
call
mulb
lods
sub
push
ss
jb
or
add
test
pop
out
ljmp
jno
cmp
testb
cwtl
ljmp
enter
decb
jp
data16
dec
data16
mov
in
dec
cmp
daa
inc
dec
add
add
fwait
mov
xchg
adc
xchg
xor
xchg
insb
pop
jbe
pop
mov
push
push
push
jno
push
or
shlb
adc
outsl
xlat
add
jbe
stc
xchg
hlt
push
pop
movsb
push
call
pop
repnz
mov
fs
icebp
loope
shrb
xor
and
xorl
ret
testb
mov
jnp
lret
inc
pop
into
fstpl
and
mov
cld
mov
lret
call
sub
jo
stos
test
ja
adc
lahf
dec
insb
rclb
fcompl
cmp
loopne
pop
sub
mov
dec
or
mov
pop
mov
je
in
insb
pop
stos
mov
xchg
adc
push
outsb
out
movsb
jbe
lcall
mov
pop
in
cmpsl
data16
fwait
arpl
mov
mov
jmp
data16
lds
pushf
addb
and
les
sbbl
sub
out
xor
fisubrl
pop
addr16
fbstp
cmp
mov
rolb
sbb
jl
adc
sub
fucomip
add
lea
decl
dec
pop
negb
scas
xchg
stc
lods
push
inc
pop
inc
cmp
adc
popa
pop
hlt
aaa
lods
add
pop
dec
hlt
shlb
push
enter
add
push
and
pop
fnstcw
push
add
jg
aas
out
pusha
loop
imul
jle
mov
xchg
pop
mov
mov
mov
outsl
rcrl
mov
push
lret
cmpsb
in
mov
insb
mov
stos
in
pop
cmp
and
dec
fiadds
lahf
pop
pushl
nop
xlat
std
pop
and
fsts
jns
inc
sahf
out
jge
test
inc
xchg
iret
jbe
out
sbb
push
lea
cwtl
mov
ret
adc
xchg
and
aas
xor
leave
jmp
mov
push
test
xchg
cmp
add
sbb
cli
adc
cmp
je
mov
imul
sub
es
in
push
stos
and
adc
sbb
xchg
sub
icebp
mov
cmpsb
add
and
outsb
mov
fnstsw
push
inc
inc
orb
shrl
icebp
rcll
cld
sbb
fsubr
jge
cli
out
into
movsl
lret
push
add
sub
test
in
mov
pusha
dec
inc
pop
inc
sbb
sub
pushf
or
sub
loope
dec
fdivl
cltd
out
in
das
xchg
push
dec
sub
jns
mov
xor
sbb
sub
mov
cwtl
cld
xorl
and
xor
ljmp
xor
cmpsl
push
ret
fwait
mov
mov
xchg
out
and
and
add
pop
lret
repz
popa
sbb
sub
rorl
mov
pop
push
pop
lcall
movsl
loop
test
ret
mov
aaa
jg
cmpsl
mov
mov
out
fwait
scas
stc
and
dec
sub
ret
into
repz
sub
dec
cmp
lock
sbb
add
xchg
ss
push
outsb
js
push
sbb
sti
mov
lcall
or
scas
push
mov
ret
jns
and
add
inc
repz
push
jle
mov
mov
int3
fcoml
vxorps
xchg
outsl
dec
dec
mov
clc
stos
or
ss
pop
add
es
sbb
cmp
mov
xor
xchg
cli
negb
outsb
out
fs
js
rolb
mov
xchg
mov
jo
nop
int
pushf
jns
xchg
push
mov
jno
movsl
and
push
dec
fcomps
adc
mov
ds
mov
cwtl
lcall
dec
das
sub
xchg
mov
subb
sub
inc
insl
cwtl
sbb
dec
fmulp
adc
adc
dec
pop
out
orb
jnp
sub
and
hlt
jo
push
loopne
ds
fisubrl
dec
mov
sub
hlt
push
ss
mov
dec
sub
loop
es
jl
fildll
or
rcr
in
push
scas
sub
cmpsl
pop
push
jo
mov
rorl
and
push
sub
sbb
fiaddl
jns
adcl
push
sar
out
movsl
add
cmpb
adc
gs
std
test
out
inc
push
push
xchg
dec
inc
sbb
sbb
aaa
les
and
in
sub
mov
mov
mov
push
popa
cmpl
sbb
inc
cmp
pop
popa
dec
jbe
jbe
test
adc
clc
std
mov
outsl
ja
xchg
xchg
push
dec
xor
dec
adc
adc
sbb
sbb
add
sub
outsb
dec
dec
inc
iret
sub
cmpsl
push
dec
xor
ret
mov
mov
dec
daa
mov
mov
add
mov
loop
daa
jmp
and
inc
rcll
push
jbe
gs
movsb
loopne
gs
pop
and
xchg
or
xchg
push
jo
dec
mov
sbb
daa
movsb
mov
cmp
inc
push
imul
pop
inc
pop
xor
mov
cmp
xchg
pop
inc
cli
sbb
mov
pushf
outsb
dec
repnz
cmp
cmp
leave
jmp
push
mov
mov
cwtl
sub
arpl
xor
or
jle
cmp
sti
icebp
and
pushf
nop
lods
fidivl
pop
aas
or
out
std
mov
nop
lcall
into
mov
cmp
lret
cmp
adc
pop
xlat
lcall
das
cmc
dec
jg
pop
cmp
or
or
ja
xor
shr
ret
push
cmp
testl
pop
inc
hlt
test
aam
or
ljmp
lret
cmpsl
inc
push
mov
aas
mov
ss
ret
shlb
push
push
mov
and
mov
pop
dec
push
lahf
push
pop
pop
cmpsb
popf
outsb
lods
movl
cld
push
and
in
call
in
mov
push
lret
adc
or
push
mov
xchg
mov
fs
adc
or
cmp
fldenv
dec
popa
iret
cwtl
cld
mov
pop
sub
or
in
sub
xchg
adc
fistpll
das
std
outsb
andl
mov
lret
mov
scas
mov
leave
push
sarl
cmp
mov
loope
hlt
scas
lds
dec
fistpll
bound
movb
fistl
je
mov
xchg
in
inc
sbb
mov
dec
mov
mov
inc
sbb
out
push
cmpsb
lock
in
and
in
leave
les
rcrl
lods
lret
repz
lret
mov
push
outsb
push
popa
mov
and
test
push
adc
daa
inc
loopne
jne
lahf
shrb
sub
scas
imul
mov
pop
daa
mov
in
int3
rol
sbb
inc
sbb
jnp
add
in
stc
sbb
lret
mov
adc
pusha
xor
lea
jne
cli
fists
scas
mov
pushf
adc
add
mov
mov
cld
pop
adc
sar
sbb
jae
ret
arpl
xor
shrb
leave
add
test
sub
fdivrl
ja
cmp
scas
sub
int3
jno,pn
or
mov
cmpsb
mov
mov
aam
mov
xor
divl
rorb
mov
adc
lods
jg
testl
dec
inc
cs
lea
repz
push
data16
insb
cmp
dec
sbbl
es
cltd
xchg
shl
xchg
dec
mov
inc
mov
loopne
cmc
into
in
jmp
mov
lods
inc
xchg
ret
cmp
sbb
test
roll
aad
mov
xchg
mov
sub
sbb
xchg
pusha
rcl
test
or
and
add
or
jecxz
into
lods
push
jns
dec
bound
xchg
push
xlat
stos
enter
lret
xlat
push
pop
cmp
sti
inc
ret
cli
ficoms
xor
int
sub
sbb
mov
out
add
sbb
mov
jns
jnp
sub
test
mov
pushf
mov
jns
ret
adc
jg
inc
imul
popf
or
or
ljmp
push
push
xor
dec
ss
xchg
repz
and
pop
pop
dec
sbb
jo
lret
pop
mov
xor
sub
xchg
cmpsb
or
mov
inc
inc
cmpsb
imul
fadd
jl
and
into
lds
or
jecxz
add
cmp
lods
rclb
enter
mov
data16
int3
leave
sahf
out
jmp
fs
sub
mov
jae
mov
stos
add
inc
pop
pop
sbb
in
lcall
mov
popf
add
loop
sbb
dec
and
in
sahf
mov
and
aas
xchg
mov
xchg
xor
rol
aaa
and
adc
daa
inc
jns
xor
mov
mov
xchg
sti
sub
inc
inc
leave
xchg
jmp
lcall
mov
push
push
aam
ficoms
pop
cmp
mov
jbe
fcomps
mov
movsb
outsb
mov
fs
pop
sub
insl
add
and
pop
jg
out
push
ret
in
cmpl
jecxz
lret
pusha
mov
xor
test
lds
rol
push
cli
lret
stos
pop
lcall
into
lock
ficoml
dec
fdivp
or
sbb
inc
and
sbb
push
jmp
scas
and
push
cmp
imull
imul
loope
or
sbb
aaa
sahf
adc
fdivl
data16
shlb
jo
cmp
and
inc
std
or
or
and
or
cmc
xlat
jge
out
mov
adc
cmp
lds
lcall
stos
mov
cld
inc
gs
jecxz
fldt
adc
jb
jle
out
in
lea
or
jmp
and
call
sbb
in
jno
xchg
ja
or
test
leave
incb
popa
lcall
mov
inc
sub
mov
syscall
push
fistps
and
or
jno
sub
loope
arpl
or
in
mov
or
push
das
adc
sbb
das
mov
aaa
cli
pop
insb
pop
arpl
sub
mov
add
test
sar
test
push
jne
arpl
push
repnz
adc
lret
dec
adc
push
push
lcall
lds
sbb
xor
sub
cmp
sti
ja
cmp
jae
cmp
mov
sub
xor
or
fsubs
push
adc
fwait
int
loop
imul
xchg
hlt
out
jmp
cmpsl
pop
mov
or
jp
andb
jno
sahf
inc
lret
loopnew
add
pop
or
sahf
rorl
push
sub
hlt
loope
inc
xchg
mov
push
sbb
test
add
outsb
daa
loopne
jae
fldcw
jbe
mov
sbb
fnstcw
int3
sub
or
push
test
aas
dec
out
sahf
cmp
cmpsb
xor
or
scas
sub
cli
nop
pushf
pop
jnp
mov
ret
loopne
jno
fimull
sarl
shl
out
mov
sub
mov
xor
test
push
jbe
mov
xor
cli
stc
out
push
jle
fdiv
mov
sub
lret
mov
pop
jns
sbb
pop
inc
or
repnz
in
in
cmc
push
adc
inc
mov
clc
inc
and
pop
xchg
lret
js
mov
push
push
push
push
rcll
xchg
xchg
jbe
test
arpl
push
fists
push
and
mov
popf
fwait
gs
pop
int3
xchg
fs
mov
int3
xor
mov
pop
outsl
jmp
movsb
das
lods
or
xor
mov
mov
or
xor
mov
aaa
rorl
pop
leave
cmp
mov
pop
xor
or
add
push
adc
pop
jl
incl
push
test
xchg
in
mov
call
jns
pusha
mov
xchg
test
in
repz
stos
xor
mov
dec
call
sbb
inc
or
lcall
mov
scas
sarb
lock
pop
cmp
int3
andl
mov
aad
jno
mov
iret
xor
sub
or
daa
push
pop
sarb
dec
cmp
sub
fisubs
or
aad
shl
ss
dec
xchg
insl
aam
xlat
push
loope
addr16
ja
or
jbe
repz
pusha
rol
push
xor
incb
popa
mov
dec
mov
outsl
adc
jmp
aam
insl
lock
lock
inc
test
lret
jnp
jne
pop
sbb
in
or
gs
mov
cli
xorb
icebp
adc
pop
test
arpl
ss
mov
jne
sbb
ss
fwait
sahf
cli
shld
hlt
scas
mov
push
adc
or
scas
pop
test
rcll
mov
pushl
lcall
es
mov
cvtps2pd
and
push
repnz
pop
fbld
fwait
movsb
jns
das
outsb
mov
iret
xchg
insb
repnz
dec
leave
mov
and
test
repnz
inc
jle
push
adc
lret
sub
std
sbb
adc
repz
shr
or
pop
hlt
adc
xor
subl
movsl
js
fbstp
xor
xor
sub
movsb
repz
inc
inc
jbe
dec
mov
mov
in
inc
jns
pop
sub
sbbl
push
inc
jo
sbb
xchg
inc
jle
dec
xchg
xchg
jge
jno
xor
xor
cmc
fistpll
bound
aas
mov
jb
sbb
jle
les
int
mov
jecxz
cmp
mov
mov
pop
jg
dec
cmpb
lea
int3
pop
mov
mov
int3
sub
and
loope
xor
aaa
adc
xor
sub
xchg
stc
xor
movsb
jecxz
sbb
daa
in
mov
aad
cs
test
mov
cli
or
test
rcl
loopne
pop
sbb
add
dec
jmp
inc
jo
xchg
imul
rorl
lcall
adc
outsb
imul
push
pop
ror
xor
in
shrl
mov
xchg
add
and
imul
jo
hlt
aaa
jbe
andb
sbb
jmp
mov
lret
cmpsl
cmp
stos
xchg
push
pop
jecxz
and
and
and
jl
sbb
and
aaa
mov
js
jo
cmpsl
sub
cmp
pop
ret
push
dec
orb
push
aas
incl
icebp
and
ljmp
xor
cmp
daa
movsl
lcall
mov
call
es
sahf
sahf
pop
mov
imul
mov
inc
aad
pop
pop
orb
jl
sub
cmp
mov
sbb
das
leave
and
aaa
sub
incb
pop
inc
data16
int3
test
jo
cmpsl
iret
mov
in
dec
mov
daa
adc
add
lret
cmp
sahf
or
mov
jmp
push
test
sub
push
movsb
lret
std
mov
xor
xchg
push
push
stos
and
pop
movsl
adc
stos
mov
xchg
shlb
lahf
fwait
lcall
sbbb
out
dec
fists
icebp
cmp
outsl
add
pop
scas
cmp
xchg
dec
shlb
add
cmp
les
jnp
mov
jle
jle
dec
gs
dec
data16
cmovns
out
sti
xlat
repz
push
insl
scas
test
add
dec
pop
hlt
lret
jnp
xor
fdivs
jb
psllq
mov
mov
jnp
movsl
addr16
int
and
insb
jp
out
nop
cld
and
mov
mov
or
loop
pop
jecxz
mov
xchg
daa
push
and
cmp
mov
and
xchg
pop
daa
sbb
inc
loope
xchg
push
insl
inc
inc
sub
push
in
xchg
in
dec
fldt
cmp
lret
inc
mov
lds
mov
repnz
push
pop
pusha
jmp
scas
int3
xchg
stos
xor
cmp
push
and
js
lret
fs
jmp
aam
stos
jne
dec
inc
pop
int
pop
scas
repnz
int
imul
inc
lea
adc
push
out
mov
sub
movsl
xor
bound
sub
adc
xlat
ret
dec
sub
sub
outsl
aas
xchg
fldt
in
sti
jo
sub
sub
cmp
dec
pop
jmp
jle
jg
lea
dec
push
shrl
adc
mov
xor
mov
pop
int
fwait
xchg
xor
xchg
inc
pop
pop
imul
mov
sbb
icebp
pop
dec
shl
mov
xor
andb
repz
add
call
xchg
mov
mov
sbb
aam
mov
sub
adc
lods
sarb
push
xorb
aam
lock
inc
fwait
aas
cli
loop
push
add
sub
jp
cmpsb
mov
stc
pop
imul
sub
mov
int
in
out
or
jno
cmp
sub
push
mov
cmpsb
sub
jbe
out
std
ljmp
and
sti
cmpsl
pop
cmpb
sbb
shrl
push
sbb
xor
ss
mov
stos
and
sbb
stos
les
sbb
gs
mov
lods
push
sub
dec
dec
xor
add
fsubl
xor
nop
inc
aaa
inc
xor
mov
add
mov
pushf
jae
cmc
or
add
aaa
push
xor
jmp
jb
or
push
cmpb
fadds
les
add
popa
add
scas
movsb
and
mov
jne
stc
sbb
cmp
stos
aam
gs
addb
aas
mov
xor
addb
fldt
test
arpl
into
enter
mov
aad
arpl
stc
cmp
sub
push
dec
xor
xor
xor
in
nop
out
jge
inc
add
divl
enter
xchg
aam
lahf
add
lcall
adc
cmp
jae
mov
aad
inc
push
mov
sbbl
ret
push
shld
pop
dec
mov
test
pop
insb
leave
jg
mov
jp
pop
iret
inc
xchg
test
pop
sbb
shlb
mov
cmp
and
loope
lcall
hlt
xchg
in
cmpsl
js
rcr
jle
lock
adc
or
or
pop
in
mov
arpl
inc
add
nop
and
fildl
sbb
xchg
cmp
aad
inc
imul
xor
js
loopne
movsb
fmul
inc
in
fimull
jno
jb
in
in
out
dec
movsb
sbb
mov
bnd
mov
and
xor
addr16
mov
mov
repz
add
mov
mov
ja
jno
das
sub
and
dec
out
out
loope
test
cmpsb
pusha
ffree
stos
out
in
dec
cmpsb
sarb
sti
pop
pop
dec
cmp
lods
je
outsb
stos
popf
js
and
jne
and
not
pop
scas
pop
mov
ljmp
cmp
sub
push
sub
and
push
or
push
or
rcrl
loope
cltd
in
js
icebp
adc
cli
icebp
sti
lods
adc
push
jp
jle
ss
insl
es
aaa
popw
outsb
pop
jmp
xor
stos
std
mov
test
mov
mov
adc
imul
cmp
push
push
xchg
sbb
inc
negl
in
jno
xor
jb
sbb
mov
pop
pop
test
inc
jge
add
in
mov
int3
fwait
scas
aas
mov
aas
mov
xchg
xor
addr16
test
repz
adc
aad
inc
jecxz
push
lods
bound
inc
stos
leave
jl
fbstp
fnstenv
js
aad
cmp
or
xchg
inc
pop
jno
or
xchg
addr16
or
or
fcompl
mov
or
or
cmp
movsb
out
cli
xchg
hlt
imul
push
mov
add
aaa
jnp
sub
sbb
jecxz
sub
rdpmc
data16
and
push
scas
sub
pop
sbb
js
xor
or
mov
xor
xchg
push
pop
sbb
movb
jg
inc
mov
fimull
sarl
jmp
lods
cmc
aaa
cmp
jge
int3
lock
ja
adc
jecxz
jae
push
int
repz
stos
mov
fisubl
sahf
loope
mov
call
orb
shrl
push
test
test
pop
scas
ror
mov
mov
popa
sub
mul
mov
jne
ret
cli
push
out
aad
popl
jns
jmp
dec
repz
mov
jns
call
imul
push
bound
sub
in
mov
xlat
sub
js
adc
jge
inc
pop
lods
or
in
mov
jae
cld
js
push
ret
mulb
sbb
mov
adc
sub
inc
pop
ss
jp
loopne
mov
pop
std
dec
test
xlat
sub
out
add
sub
cmp
mov
add
pusha
pushf
movsb
sbb
xor
mov
adc
mov
daa
push
push
clc
fldt
adc
clc
jecxz
and
loope
popf
aaa
sbb
in
clc
push
xchg
mov
xchg
popl
es
lret
push
mov
sub
cmp
xchg
ficompl
in
nop
pop
in
iret
adc
mov
or
cmc
push
cmp
inc
inc
cmp
dec
daa
jmp
inc
or
in
or
cltd
jns
xor
lret
xchg
sbb
loopne
mov
mov
jmp
imul
pop
fsqrt
sub
nop
jns
inc
cmp
cmp
int
repz
xor
push
sahf
add
adc
lds
inc
mov
jg
hlt
inc
pop
and
inc
dec
scas
lods
cli
cmc
lock
push
lods
and
in
jge
jne
mov
cltd
cmp
outsl
addr16
add
shll
push
mov
icebp
inc
mov
fisubrs
xchg
popa
popa
pop
inc
pop
xlat
add
mov
jecxz
les
xor
sbb
xchg
sbb
xchg
push
idiv
fisubl
in
fistl
stos
sub
sbb
cmp
lret
rcrl
sarl
cmp
aad
mov
imul
mov
xchg
sarb
jnp
das
push
adcb
inc
inc
add
insl
cmpl
nop
stc
pop
jle
push
push
or
push
pop
ja
mov
sarl
movsb
dec
sub
sub
insb
popa
sub
cmp
in
aas
scas
sahf
adc
pop
cltd
push
jg
mov
cmc
mov
sbb
xor
xchg
fwait
sti
fisubs
pop
int
mov
sub
xor
les
dec
xor
lods
mov
xchg
cltd
mov
xchg
mov
mov
fsubr
mov
add
ja
mov
add
sbb
xor
std
add
ret
movsb
push
push
cmc
lea
xchg
shl
add
pop
push
mov
orl
mov
cmp
imul
cld
cmpsb
mov
push
mov
stos
icebp
enter
inc
notb
pusha
push
add
dec
js
cmp
mov
scas
xor
pop
lods
out
stos
mov
cltd
mov
cmc
fwait
jp
pop
cmp
xlat
sahf
mov
adc
mov
test
fwait
cs
xor
test
and
loopne
scas
popf
cmp
rcl
jl
xor
add
cltd
xchg
mov
sbb
hlt
mov
mov
mov
hlt
ss
inc
mov
jp
sbb
ret
xchg
push
and
sti
or
jnp
push
and
sub
xchg
push
push
cmp
xlat
or
push
dec
in
andl
and
out
xchg
sbb
addr16
push
into
data16
aad
push
popl
out
std
std
aas
adc
dec
jecxz
add
xor
ss
push
and
fs
lret
mov
jbe
sahf
lock
jns
test
xor
mov
rol
sub
fs
rclb
adc
cmp
dec
sub
shrl
pop
pop
add
xorb
xor
xchg
or
jnp
mov
push
adc
loopne
adc
sub
xchg
cmp
xor
xchg
lods
add
popa
negl
mov
mov
mov
pop
je
test
hlt
clc
jns
arpl
jnp
sbb
sbb
dec
enter
inc
jnp
pop
les
stos
cmp
pop
mov
ret
rcrb
inc
les
cmc
inc
inc
push
jno
femms
out
mov
inc
mov
mov
inc
aaa
stos
xchg
sbb
mov
cmp
inc
shlb
mov
outsb
pop
push
or
jge
mov
sub
out
cmpsb
pop
and
xor
lds
or
jle
and
out
shr
pop
in
dec
xchg
lret
lcall
mov
sub
or
data16
xor
jbe
sahf
mov
outsl
movsb
xchg
sbb
inc
popf
cli
jns
push
add
and
inc
test
stc
dec
pop
push
sbb
iret
mov
aas
push
out
push
pop
pop
ret
sbb
adc
in
mov
mov
dec
insl
mov
fisubs
push
inc
rcrb
adc
std
test
xchg
pop
ret
int
cmp
mov
adc
mov
dec
cmp
mov
aaa
mov
xchg
jb
xchg
jno
or
mov
bound
bound
xor
sbb
scas
xor
adc
idivb
imul
andb
and
popl
jne
enter
inc
ficoml
inc
aad
das
cli
pop
adc
fiadds
pop
jb
popf
inc
pop
add
divl
jp
jmp
inc
fdivrs
sub
dec
std
clc
bnd
popf
and
mov
pop
jb
mov
mov
out
mov
int
sbb
dec
mov
shr
insl
mov
push
add
mov
stos
add
push
inc
cmp
pop
fdiv
inc
add
leave
push
jp
daa
and
shlb
aam
xor
std
bound
iret
xor
daa
add
test
loopne
stc
shll
jmp
add
ficoms
jnp
ja
cld
push
fisttps
addl
imul
jmp
cmp
mov
or
int3
pop
mov
cmp
adc
cwtl
test
jns
mov
mov
sti
fisttpl
ljmp
mov
xchg
cmpl
fsubl
fsubs
mov
xchg
ficomps
fsubrs
xorb
test
inc
adc
out
lds
or
pop
lahf
dec
cmp
iret
insl
xchg
je
mov
popa
adc
movsb
xchg
adc
inc
add
sub
xchg
mov
dec
or
adc
les
xchg
aas
loopne
je
pop
and
mov
jnp
cmc
ljmp
sahf
sti
jbe
jge
xchg
inc
push
shl
xchg
push
jmp
sahf
xor
xlat
jbe
testl
xchg
mov
pop
ljmp
aad
mov
loope
ret
xor
out
sbb
into
jmp
jno
mov
popf
mov
mov
fimuls
mov
stos
fisubl
mov
mov
adc
std
sbb
pusha
push
jo
pop
cld
in
cmp
hlt
lahf
push
mull
add
push
insb
mov
jecxz
push
shr
jg
pop
loop
sbb
ljmp
jns
xchg
add
mov
push
in
cmp
lods
js
lock
leave
out
sbb
shrb
loop
dec
sbb
pop
test
inc
jecxz
cmp
bound
dec
mov
adc
push
mov
sub
mov
rclb
push
cmp
repnz
repnz
push
sub
push
or
mov
jns
push
dec
in
cltd
testl
fcmovnbe
dec
mov
add
xor
movsl
add
aaa
sbb
imul
sbb
add
ds
jl
add
mov
xor
xchg
and
pop
loop
push
movsl
test
push
sub
add
dec
out
and
add
jo
mov
xchg
mov
int
adc
mov
pop
push
fwait
push
pop
mov
cltd
push
push
xor
push
ror
es
add
pop
jecxz
adc
popa
mov
inc
xor
cmp
push
sub
fcomp
xchg
adc
inc
fwait
leave
clc
jnp
aaa
add
inc
and
lock
lret
mov
out
mov
cmp
mov
mov
mov
testl
sbbb
inc
push
loope
mov
dec
inc
clc
in
sti
stos
std
and
and
cmp
push
loopne
jnp
xor
pop
push
xor
xchg
pop
mov
out
adc
inc
loope
out
pop
fsubrl
pop
enter
insb
popa
arpl
xchg
outsb
fildl
outsb
sub
negb
addl
xor
into
fidivs
out
in
ja
rorl
shrb
pop
mov
adc
or
daa
mov
push
pusha
es
stc
fdivl
fs
out
aaa
aad
mov
dec
push
lret
add
add
sti
adc
lmsw
adc
pop
mov
movsb
xor
pop
xchg
scas
dec
out
iret
adc
and
neg
mov
and
add
enter
push
test
cld
jo
adc
add
add
test
mov
jae
hlt
cmc
push
test
xor
dec
jns
popf
jae
jg
pop
testl
add
in
xchg
les
push
xor
imul
scas
push
push
cmp
mov
jno
xchg
xor
push
push
movsl
mov
push
call
mov
int3
fdivrs
jge
add
push
fidivrs
adc
test
sub
sbb
jo
lahf
xlat
inc
adc
push
sub
sbb
cmp
lea
lret
sub
add
push
jle
cmp
dec
sub
movsw
mov
push
xlat
fnstenv
push
mov
mov
mov
loopne
pushf
mov
pop
add
sahf
in
sbb
lods
push
das
sahf
lods
mov
shrl
sarl
pop
mov
jg
jge
repnz
and
lahf
add
xchg
pop
sbb
je
inc
aad
orb
mov
and
xchg
mov
xchg
dec
cltd
dec
sub
xchg
mov
ss
repz
out
mov
cmp
aas
subb
sarl
and
out
push
test
and
imul
test
imul
or
sbb
enter
sbb
inc
lahf
mov
push
xor
in
out
ja
arpl
insl
xchg
or
push
pop
fwait
xor
mov
adc
xchg
add
bound
cmpsb
test
dec
clc
sti
inc
test
test
jge
inc
push
and
dec
lahf
adc
and
jg
sub
sub
inc
insb
dec
ret
push
fidivs
sub
mov
sub
or
imul
adc
imul
mov
sti
fdivrs
repnz
inc
mov
and
xchg
shlb
fisttps
xchg
jecxz
dec
lock
inc
dec
lods
insl
scas
jle
fnstenv
sub
sbbb
mov
pop
aam
ret
add
or
cmpsl
int3
mov
mov
push
mov
sub
push
mov
jnp
xor
jmp
pop
xor
jp
mov
subl
scas
jle
cmpsb
aad
cmp
or
jns
pop
mov
push
nop
push
push
jo
adc
ljmp
push
jno
or
into
jns
xchg
add
sub
imul
and
mov
scas
outsb
adc
or
shr
or
dec
idiv
out
mov
mov
mov
pushf
cmp
movsl
icebp
mov
les
push
adc
pop
cmpsl
push
jp
push
dec
add
hlt
fnsave
sbb
cmp
clc
pusha
into
pop
movsl
and
rcl
roll
sbb
out
push
ljmp
cli
lods
sub
jns
and
pop
jno
push
jno
in
frstor
lea
xor
xchg
cmp
dec
push
adc
mov
push
repnz
roll
orb
inc
mov
sahf
cmp
cwtl
je
into
leave
out
push
push
pusha
insl
push
ret
or
clc
neg
inc
xchg
sahf
ljmp
xlat
jnp
mov
lahf
leave
mov
mov
xor
test
mov
inc
out
arpl
fucomip
xor
push
stc
add
out
hlt
inc
dec
xor
imul
sub
int3
enter
sub
aaa
loope
xchg
adc
out
mov
loop
xor
mov
push
lods
repnz
mov
or
iret
ja
lret
push
sub
scas
in
fiaddl
cmpsl
mov
adc
push
mov
sub
subb
jle
lods
mov
imul
pop
mov
ret
adc
clc
int
ficoms
add
inc
ret
or
add
xchg
icebp
rorl
lahf
jne
cmp
jnp
ja
jmp
repnz
xor
mov
out
mov
add
mov
lret
popf
imul
out
aas
push
scas
jecxz
movsb
out
stos
or
hlt
sbb
jae
bound
push
movsb
adc
adc
add
insb
out
inc
cli
outsb
pop
dec
dec
push
insl
test
push
aam
int3
cmp
scas
loopne
sbb
fcmovnbe
and
aas
xchg
xlat
push
out
jg
into
lahf
dec
or
pop
mov
fidivs
sub
int
dec
movsl
mov
outsl
repz
fdivl
xchg
mov
mov
adc
imul
xlat
mov
push
mov
fldenv
and
xchg
jae
ja
push
outsb
push
adc
rcll
loop
dec
scas
mov
leave
mov
push
mov
xchg
adc
sbb
inc
scas
int3
dec
mov
popf
lcall
add
adc
pop
inc
and
addr16
ds
repnz
push
pushw
xlat
arpl
sub
mov
mov
lea
scas
es
or
arpl
jns
add
jg
mov
bound
jle
scas
mov
pop
shr
cli
push
jg
xor
fisubrs
pop
test
insb
test
stos
xor
stos
out
adc
addr16
loopne
mov
xchg
out
push
mov
mov
inc
inc
push
add
rcrb
add
or
clc
fwait
test
pop
hlt
inc
test
cmp
cs
mov
fstpt
dec
sahf
xor
add
mov
cld
mov
scas
dec
lea
push
add
dec
repz
xchg
sti
sub
sti
shlb
push
pop
jg
int3
push
leave
sub
push
cmp
or
sbb
add
pop
mov
lret
mov
jecxz
sahf
adc
pop
mov
push
pop
or
and
mov
sbb
ja
ljmp
negb
push
decl
mov
call
insb
popa
push
int
dec
ljmp
inc
xor
and
int3
loope
mov
gs
push
mov
sbb
sti
fs
push
icebp
and
and
inc
call
xor
adc
test
sub
lret
mov
add
repz
aaa
add
cmp
xchg
addr16
inc
stc
mov
push
lret
jbe
xchg
xor
rorb
push
xor
mov
ljmp
out
shl
ljmp
fsubrl
outsl
or
fnstenv
mov
jbe
push
xor
fbstp
cwtl
mov
lods
cmp
ja
adc
lea
leave
out
ljmp
rcll
lds
adc
adc
fs
loopne
pop
daa
xor
in
popa
add
inc
sub
loop
pop
in
cmp
incb
imul
mov
sbb
push
inc
imul
data16
gs
push
lea
adc
es
push
jge
stos
jg
mov
jl
cs
lock
jg
imul
mov
cmpsl
xor
xor
xchg
outsl
add
insb
cmp
bnd
ja
lods
pop
in
sbb
out
pop
fs
movb
jno
fcoml
mov
dec
and
cmp
addr16
jl
lods
dec
mov
mov
xchg
insb
loop
out
pop
iret
test
sbb
mov
inc
imul
or
mov
pop
cmp
adc
lock
or
dec
loop
imul
inc
aaa
add
jo
add
lea
ja
cmp
push
lcall
push
push
movsl
ss
jne
orl
pop
cltd
btr
lret
xor
dec
ds
fidivrs
sub
dec
movsb
pushf
scas
dec
adc
dec
and
outsb
sbb
push
add
jne
pop
push
and
inc
mov
xor
sub
loop
lcall
sub
fwait
ds
or
sbb
jmp
xor
loope
insb
jo
dec
pop
sbb
jnp
repnz
aad
ds
mov
fld
pushf
mov
inc
inc
mov
and
or
pop
and
sub
cmp
sbb
shll
scas
push
and
outsl
push
js
pop
ret
dec
jo
xor
dec
push
adc
push
sub
daa
cmp
sub
mov
xchg
iret
cmp
xchg
mov
std
js
out
mov
or
and
test
lret
sub
inc
adc
jmp
jb
push
popl
mov
fsubs
call
movsb
cwtl
shl
fwait
test
loopne
sbb
pop
cmc
jmp
insl
aam
push
ret
add
cmp
push
adc
cmp
rorl
jp
inc
mov
jae
in
or
add
movsl
cs
or
cmc
leave
addr16
push
sub
push
test
in
sub
mov
inc
or
inc
cltd
inc
xor
mov
cmp
insb
xchg
ljmp
inc
inc
adc
stc
pop
jl
andl
mov
cld
test
mov
or
add
rclb
aaa
out
stos
push
call
cmp
and
scas
hlt
movsb
test
sub
or
cmp
or
arpl
inc
mov
popa
dec
push
push
fwait
adc
insb
pop
addr16
rcll
fisttps
fnstsw
and
ret
pusha
in
cs
movsl
jg
shl
or
jo
jb
out
pop
stc
jb
add
addr16
in
aad
add
repz
adc
sbb
push
ret
mov
stos
lcall
xor
into
lock
scas
or
subl
and
xorb
xchg
je
test
add
and
mov
xchg
and
arpl
jl
out
sub
jno
jle
mov
lock
mov
push
mov
add
inc
cli
fdivrs
xchg
lcall
ljmp
cmc
xor
mov
and
mov
adc
adc
mov
out
aaa
adcl
repz
popa
std
pop
pop
xchg
cmp
push
mov
bound
push
arpl
and
xchg
test
cmp
std
movsb
pop
cmp
aas
jb
out
or
fs
int
in
mov
pop
andl
shlb
mov
les
fnstsw
repz
fsubs
push
pop
jmp
mov
xchg
push
push
sbb
rolb
clc
xor
out
pusha
inc
lret
leave
dec
cmpsl
out
or
jb
shr
stos
mov
jnp
add
mov
sub
fistl
cli
int3
dec
pop
fs
or
and
push
mov
dec
movsb
add
rorb
or
enter
movsb
mov
sbb
outsb
add
pop
push
jbe
out
mov
mov
pop
jle
mov
dec
sbb
mov
add
lret
sub
adc
or
adc
dec
xchg
and
xchg
dec
push
sahf
test
mov
pop
lea
lds
bound
push
add
mov
push
xor
iret
adc
fidivs
inc
movsb
lret
je
lods
lock
outsb
and
sub
mov
pop
insb
jle
mov
cmp
jae
enter
sarb
dec
mov
jbe
xchg
popa
pop
pop
sub
aas
subb
into
sahf
ficomps
push
pop
add
and
pop
enter
test
scas
xchg
push
jp
add
out
jnp
jne
leave
fwait
and
or
fdivr
mov
xchg
inc
jg
loop
push
or
faddl
or
mov
pusha
bswap
sub
xchg
inc
and
jns
addb
in
fisttpll
and
das
xor
mov
cmp
insb
in
bound
fwait
push
rorl
divb
rcrl
xchg
aas
sahf
dec
sbb
or
negl
inc
pop
rcrl
push
or
inc
add
dec
test
mov
xor
mov
insb
mov
je
pop
imul
stos
push
xor
mov
xor
inc
out
cmp
mov
or
dec
sub
subl
pop
and
mov
dec
mov
mov
xchg
test
push
mov
sbb
fwait
inc
sti
shl
loop
push
call
push
int3
jmp
test
pop
sbb
push
push
jbe
xor
and
push
rcl
jnp
add
xor
pushf
push
and
mov
cli
pop
roll
ret
sbb
and
xor
jne
stos
dec
mov
and
mov
insb
xor
jno
mov
jbe
cld
push
out
test
cwtl
adc
loope,pn
movsb
sbb
rorb
sarl
inc
and
or
dec
lods
xlat
test
cmc
arpl
pop
inc
dec
xchg
subb
cld
and
sub
jmp
test
sbb
cltd
aad
and
cltd
shl
jge
jp
mov
stos
and
pop
outsl
je
push
add
lret
popa
jno
in
fdivr
or
xor
insl
sbb
inc
jb
cwtl
inc
ds
in
outsl
jmp
add
pop
pop
aas
or
loop
sbb
lea
sbb
imul
jne
and
aam
iret
mov
inc
rcl
ds
mov
aaa
add
jmp
adc
sub
call
mov
inc
xchg
in
add
cltd
push
cs
cmp
mov
test
xor
leave
aaa
sahf
mov
fidivrs
mov
dec
add
pop
addr16
adc
xor
jecxz
xor
add
or
adc
gs
jns
push
cmp
loope
jb
push
dec
adc
add
rorl
insb
push
mov
out
pop
rolb
idiv
or
cmpsb
and
push
repz
jb
imul
fisubrs
test
jg
adc
push
sbb
mov
adc
mov
and
adc
outsl
xor
push
cmp
or
xor
lcall
xor
mov
in
inc
or
xchg
jno
mov
aaa
jb
outsl
test
js
stos
test
adc
fiadds
loop
sbb
push
aas
je
gs
and
cli
jg
out
push
adc
es
ja
cmp
and
in
mov
rolb
ja
lret
jmp
shrl
movsl
inc
fisttpll
sub
adcl
jbe
mov
adc
jle
adc
xchg
push
xchg
push
ret
lcall
sbb
xchg
xchg
cmpsl
in
push
jbe
add
cltd
push
cmp
mov
jl
enter
movsl
insl
inc
add
dec
jae
and
xor
xchg
les
xchg
add
push
adcb
cltd
dec
xchg
xchg
xor
sbb
push
cmp
jmp
adc
enter
aaa
fyl2x
mov
add
andb
jae
mov
mov
and
pop
cmp
std
das
loopne
idivl
add
ljmp
call
in
and
xchg
pusha
stc
adc
push
add
inc
repnz
mov
addr16
sub
js
mov
ds
mov
inc
out
das
push
cmp
mov
xor
stos
mov
movsb
add
out
xchg
push
test
into
mov
add
setno
inc
pusha
shll
cmc
pop
loop
nop
adc
xchg
popa
repnz
movsl
push
icebp
movl
xor
rol
out
cmpsb
pop
ljmp
test
shr
inc
sub
aas
insb
outsl
andl
jo
arpl
mov
adc
dec
sbb
stos
or
pusha
xor
push
dec
incl
rolb
orb
jb
aaa
aam
fiadds
add
xchg
ss
jp
loope
mov
jno
sbb
jmp
arpl
mov
pop
ficomps
pop
call
out
add
xchg
jno
call
arpl
mov
inc
clc
xor
mov
out
fdivl
mov
push
test
das
sub
frstor
and
jne
icebp
dec
mov
fdiv
jns
movsl
and
mov
jl
dec
gs
mov
xor
scas
xchg
mov
int
fimuls
jns
dec
popf
inc
test
mov
aas
jae
fiadds
lahf
mov
and
imul
cwtl
pusha
jne
cmp
xor
inc
jns
bound
dec
dec
aam
pusha
lahf
mov
and
adc
add
mov
or
mov
aam
pop
mov
in
xchg
movsl
mov
push
push
imul
cwtl
loope
push
ja
or
ret
test
jmp
mov
xor
outsb
dec
dec
mov
xor
in
sub
and
mov
jb
scas
dec
sub
pop
push
jecxz
daa
js
mov
shlb
fwait
stos
movsb
lds
xor
pop
adc
mov
and
or
pop
test
aad
pusha
aas
cwtl
enter
ljmp
mov
wbinvd
cmp
ja
les
mov
and
adc
mov
dec
xchg
push
xchg
out
or
or
mov
cmp
xor
xor
push
lods
add
jbe
or
xchg
pop
cli
ficoms
push
and
lea
jae
jne
and
and
add
jae
je
jns
mov
mov
xlat
sbb
mov
movsl
sub
shlb
mov
jne
dec
repnz
repz
cmp
adc
repz
outsl
add
adc
popf
jmp
xchg
jo
insl
xlat
in
insl
jae
in
repnz
cld
sbb
mov
push
or
push
test
lea
jmp
popf
loop
adc
iret
and
pop
in
imul
xchg
jne
int
jne
fistps
dec
cwtl
psubsw
mov
scas
mov
pop
and
sbb
xchg
jo
push
cmp
js
cltd
xor
rorl
dec
push
jmp
mov
out
push
mov
rolb
adc
pop
add
scas
into
adc
out
pop
add
icebp
adc
movsb
cmp
jns
mov
adc
pop
pusha
movsb
call
mov
fs
dec
stos
cld
adc
xchg
sub
xor
sbb
out
addr16
mov
addb
loop
in
add
xor
sub
icebp
mov
cmpsl
mov
fdivrp
roll
sub
test
push
dec
add
dec
mov
cltd
mov
call
mov
mov
addb
jge
lcall
inc
or
inc
xor
dec
sarb
jmp
adc
lret
out
orb
cmc
mov
je
cmp
dec
je
jno
pop
scas
or
push
pop
mov
sbb
xchg
jl
or
jae
push
inc
ds
xchg
lret
lcall
push
xchg
or
adc
xchg
cwtl
mov
sarb
cmc
mov
dec
xchg
lret
pop
adc
adcb
inc
ljmp
adc
nop
stc
roll
push
notb
pop
into
aas
sbb
cmpsl
or
fcmovnu
lea
rol
adc
fisubrs
sub
fsubs
pop
lods
sbb
push
fistl
xchg
or
fmuls
cmp
xchg
popf
imul
ss
in
iret
push
or
das
mov
icebp
jbe
mov
das
sub
mov
jae
mov
mov
iret
fs
xor
xor
rol
test
and
divb
push
and
or
jno
jle
xor
rorb
lock
lret
jmp
dec
jecxz
jle
and
ficomps
mov
jmp
mov
add
sub
jo
push
xchg
sub
cmpsb
mov
not
out
sti
push
gs
xor
pop
mov
or
shrl
nop
xor
or
sub
fiaddl
fisttps
fistpl
xorb
shrl
push
push
dec
std
and
push
mov
js
mov
pop
arpl
dec
cli
cmp
cmpsl
test
push
pop
enter
fmull
xor
push
lods
mov
cmpsb
mov
adc
lods
sarb
pop
add
and
int3
std
fcmovu
dec
fcom
cltd
or
lods
xchg
inc
jmp
add
xchg
sbb
imul
popf
xor
test
push
xchg
jl
bound
dec
inc
outsl
push
adc
test
xchg
rolb
enter
ss
sbb
roll
jne
fdivl
mov
inc
mov
rcll
xchg
xor
into
inc
aad
out
jl
mov
and
xor
adc
mov
jle
mov
pop
or
hlt
mov
popa
and
jno
scas
aaa
mov
sub
pop
dec
int
mov
xchg
bound
mov
int3
pop
pushf
aam
pusha
cmpsl
sub
push
aaa
dec
pop
pop
or
dec
jp
loop
xor
lods
cmp
fidivrs
out
inc
pop
jecxz
pop
divl
pop
imul
mov
dec
xor
xchg
mov
lds
cmp
rcr
sub
daa
push
es
movsl
pop
ret
push
mov
adc
lds
and
mov
sub
xchg
pushf
aam
icebp
push
shrl
test
cmpsb
imul
fisttps
inc
xor
adc
push
jle
pop
xchg
shl
inc
push
jno
stos
pop
leave
cmp
mov
scas
mov
xchg
pop
lahf
sahf
insl
dec
cmp
inc
jg
add
adc
inc
lds
push
filds
es
xor
sbb
lds
pusha
mov
psubb
test
sub
lods
or
aad
xor
insb
sub
je
mov
sub
shlb
loop
dec
fsubs
lea
dec
inc
fldt
pop
iret
sbb
shrb
xlat
pop
and
dec
pop
mov
xchg
loop
push
push
and
or
mov
enter
ja
in
cmpsb
ja
mov
imul
mov
mov
mov
lods
popa
cmp
jne
sub
shl
mov
sbbl
in
lea
sbb
and
mov
ret
sbb
enter
fnstenv
in
xor
pop
test
int
cltd
rorb
testb
inc
test
fisttpll
or
imull
and
in
sbb
adc
cli
outsl
shr
jne
pop
add
scas
cmpsl
xor
stos
popf
loop
into
icebp
lcall
and
shl
std
xchg
sti
insl
aas
sbb
sub
push
nop
cmp
lcall
sahf
sti
xchg
jmp
add
mov
test
clc
dec
push
add
or
push
mov
xchg
xchg
mov
enter
mov
movsl
mov
test
jo
into
cmp
or
pop
lods
int
jb
or
out
lcall
mov
inc
jb
ja
lret
push
pop
sbb
int3
or
out
or
leave
cmp
fwait
lret
jno
std
add
cwtl
and
xchg
or
ja
cmpsl
jg
pushf
iret
jb
xchg
ds
sub
inc
add
mov
hlt
cmpsl
out
mov
es
movl
test
lahf
dec
popf
dec
jbe
stos
jp
inc
dec
pop
sbb
xchg
enter
adc
xchg
mov
outsl
pop
sub
sub
or
jne
pop
imul
cltd
sbb
es
xor
lods
popa
xchg
std
xchg
mov
xor
gs
scas
or
popa
jge
dec
je
js
test
jb
jo
rorl
int3
xor
shll
aas
xchg
pop
addr16
dec
jmp
sub
in
sub
loop
jnp
ret
sahf
xlat
pushf
or
jg
je
test
decb
in
test
int3
sub
or
pop
scas
notl
loope
pop
insb
mov
aaa
xchg
popf
lock
jp
and
dec
sti
and
dec
loopne
cmp
insb
cmpsb
stc
cli
mov
dec
xor
cs
lret
mov
jecxz
push
xor
and
scas
test
mov
lret
rcrl
cmpsb
inc
daa
daa
ljmp
jmp
movsl
dec
dec
mov
call
or
pcmpgtd
dec
sub
add
push
notb
pop
mov
dec
mov
jb
les
mov
inc
fstpt
stos
iret
fildl
or
stc
rcl
inc
into
in
sahf
js
sub
lcall
jp
notl
idivl
and
loopne
jo
pop
repz
cmp
add
xchg
xchg
push
inc
xor
sti
adc
cmp
push
cmp
jno
iret
jmp
jo
push
pop
and
push
jo
fdivrl
cld
sarb
sub
aas
jp
add
adc
aaa
dec
adcl
inc
mov
inc
shrl
or
mov
bound
jae
xor
addb
sbb
je
jl
ja
xchg
sbb
mov
jmp
lds
addr16
sbb
shl
jae
popa
and
add
sbb
dec
dec
mov
stos
push
jne
es
pusha
mov
inc
sub
jno
imul
pop
lahf
shlb
in
jnp
mov
loope
adc
insb
mov
pop
mov
sarb
icebp
dec
push
mov
dec
test
shll
mov
pop
lahf
pop
jo
pop
data16
arpl
or
divl
mov
sub
lea
fwait
or
mov
adc
and
xor
daa
fmull
iret
addb
subb
lock
test
push
and
xor
adc
ja
push
and
pop
call
mov
add
xchg
cmpsb
mov
scas
pop
mov
cs
imul
cmp
inc
lahf
sbb
sbb
xchg
int
mov
clc
int
or
comiss
flds
cmp
and
movsl
dec
cmp
lods
or
mov
dec
div
cli
popa
nop
dec
aas
pop
jbe
loopne
test
adc
mov
sub
xor
or
sub
in
addr16
pop
push
adc
shll
pop
xlat
loop
xchg
cmp
rol
cmp
dec
dec
in
sub
lds
addr16
push
mov
rcrb
fadds
push
add
jo
mov
test
addr16
fsubrl
adc
adc
sbb
cwtl
mov
cs
or
cwtl
shll
push
push
and
mov
add
shr
addr16
pushf
stc
test
ja
mov
rcll
jg
int3
js
stc
lret
sub
out
inc
inc
pop
sbb
push
shlb
sub
ja
fs
or
mov
int
jle
xor
out
xchg
xchg
and
xor
jge
add
data16
push
in
in
icebp
mov
dec
fistps
lock
mov
in
push
imul
daa
inc
fwait
pop
rcrl
mov
inc
call
loopne
push
xchg
cmpsl
addr16
cmpsb
xchg
jo
jecxz
js
arpl
jmp
mov
fiadds
mov
sbb
mov
mov
aas
mov
xor
jne
mov
push
jns
repnz
mov
pop
pusha
xor
sbb
adc
int
outsb
gs
push
scas
gs
fldenv
xor
sub
xor
mov
cmp
pop
xor
pop
cmpsl
sbb
xlat
outsl
jmp
lret
cmp
jg
mov
xor
xor
lea
mulb
scas
jle
hlt
push
sub
cwtl
jns
daa
fs
or
jae
jecxz
push
sahf
pop
mov
and
or
fstl
mov
enter
push
jle
stc
sub
sbbl
ja
mov
mov
inc
sub
mov
mov
fiadds
mov
ljmp
ret
and
orb
fcomps
lea
fistps
pop
and
and
scas
add
lods
fmull
ret
and
imul
aad
cli
stc
icebp
daa
aad
popa
xor
pop
mov
jge,pt
mov
add
iret
adc
fisttps
mov
cmp
adc
inc
jbe
fwait
nop
inc
shrl
xchg
addr16
sub
sbb
testl
jnp
pop
add
jo
dec
gs
scas
shlb
lods
cmpb
in
dec
sbb
xor
outsb
in
ljmp
or
jg
test
cmp
mov
sbb
andb
mov
lea
push
test
xchg
mov
sub
lret
xor
dec
shrl
jg,pn
adc
das
sahf
sbb
jle
dec
flds
mov
dec
icebp
jl
jo
and
mov
pop
sbb
shll
xchg
cwtl
sti
add
bound
cmp
jo
ret
mov
call
ja
int
cwtl
mov
sub
add
imul
mov
add
fsubrs
shlb
adc
inc
in
scas
add
cmp
cmp
push
adc
xor
rorb
insl
adc
or
ja
push
aam
aam
xchg
unpckhps
xchg
testb
aas
adc
pop
int3
mov
mov
in
fdivrl
gs
fmull
adc
test
pop
lcall
test
arpl
inc
test
addl
test
xchg
stc
xchg
or
cmovs
add
add
sbb
repnz
sahf
sbb
jl
mov
fcoml
es
sbb
lods
and
and
arpl
xchg
lds
mov
push
int
mov
dec
lods
data16
ds
inc
hlt
pop
icebp
testb
mov
pop
fwait
iret
sbb
ja
mov
inc
jno
int3
cmp
jmp
loopne
les
inc
pop
imul
fs
xchg
inc
pop
lret
aaa
mov
cmpsb
jb
pop
clc
out
mov
mov
add
inc
lret
fisttpl
stc
xchg
adc
inc
out
in
ja
ret
std
hlt
aad
xchg
lret
cmpb
pushf
jle
jge
fldenv
xchg
in
in
jo
sbb
shrb
xchg
gs
xchg
aam
popw
pop
and
movsl
cmp
xorb
pop
push
xchg
mov
jg
push
das
inc
loopne
cmp
aam
pop
or
jbe
cmc
inc
push
add
jo
jo
nop
fcmovnu
mov
xchg
xor
out
mov
adc
js
shrl
in
lahf
cmp
or
push
push
add
mov
and
ja
test
cmpsl
mov
sub
xchg
rep
bound
inc
add
in
mov
test
in
add
rclb
xorb
dec
data16
mov
jg
out
into
inc
jge
mov
pop
test
pop
in
outsl
fsubrs
shl
lahf
lea
mov
loope
xchg
push
mov
mov
mov
pop
and
in
xchg
in
call
ret
mov
scas
sbb
cmp
addr16
subb
pop
xorb
dec
shll
xor
mov
ret
pop
call
push
xor
addr16
stos
adc
sti
pop
fidivrl
sub
push
dec
insb
sub
jns
movsl
out
xchg
jae
hlt
fbld
xor
std
out
inc
or
popa
lea
ret
test
cmp
adc
pushf
and
movsb
shrw
push
push
and
sub
dec
or
sti
or
dec
pop
adc
cs
mov
ds
push
test
imul
popa
andb
push
aad
mov
ret
fidivs
out
lret
outsl
add
xchg
clc
adc
into
fiaddl
or
sbb
or
sahf
jno
jle
push
imul
fdivl
scas
mov
mov
inc
lods
jecxz
imul
scas
adc
fsubs
cld
cmp
aam
and
aas
inc
push
call
jmp
push
lods
dec
fucomip
roll
cs
push
aaa
xchg
xchg
lock
inc
cltd
repz
in
imul
filds
inc
add
sub
test
bound
subb
push
sbb
push
rcll
insb
xor
aaa
mov
pop
sarl
notb
adc
out
xchg
test
loop
push
xchg
pop
cmp
fldl
loope
push
test
sub
cmp
and
xchg
adc
jmp
cwtl
cmpsb
in
dec
adc
mov
jg
jo
and
xchg
das
push
loopne
loop
or
das
xor
aad
fidivl
js
fistpl
mov
dec
adc
or
cmp
or
push
cmp
cmp
jne
lods
jbe
xor
xor
lret
int
popa
mov
ljmp
mov
shr
sti
mov
adc
jle
push
sub
aaa
loop
sub
cmp
jmp
arpl
push
or
daa
push
loopne
out
mulb
push
je
out
dec
out
inc
and
add
mov
leave
shll
fs
es
stos
ds
ret
stos
ja
and
scas
or
fstpl
push
in
rorl
push
dec
dec
mov
hlt
dec
ror
pop
ljmp
lock
pop
mov
iret
add
xchg
inc
inc
mov
int3
cmc
jb
push
icebp
xchg
sbb
lods
jg
xchg
mov
insb
fs
xlat
pop
sbb
xchg
in
ss
fwait
sub
sub
push
pop
xor
les
hlt
mov
rcll
fildll
inc
push
mov
push
and
jl
pop
add
das
mov
ss
and
lcall
dec
mov
std
and
mov
lods
add
cmp
push
mov
mov
popa
push
push
cli
enter
fyl2xp1
dec
outsl
push
jmp
xchg
dec
leave
sub
mov
repnz
and
dec
push
ja
inc
stos
lods
test
push
push
addr16
rcrb
sbb
rcll
into
aas
cs
mov
jle
mov
mov
sbb
and
and
cmp
xor
jae,pn
lret
ss
out
cmpsb
xchg
std
xor
xor
fwait
cld
loopne
or
or
xor
xorb
pop
pop
sbb
jecxz
xchg
out
dec
scas
mov
mov
int3
sub
shr
movsb
push
fdivrp
pop
cmp
jmp
movsl
mov
sarb
movzbl
pop
and
inc
xor
or
sbb
insb
sbb
jle
mov
pop
ljmp
jbe
jle
pop
or
pop
dec
sti
mov
aam
jle
mov
add
mov
cwtl
pop
sub
mov
mov
jb
fwait
mov
lret
es
inc
sbb
sub
inc
dec
lret
ja
jmp
sbb
adc
adc
cmp
xchg
cmc
ret
popf
sub
mov
push
mov
jg
adc
mov
mov
or
data16
mov
lods
pop
jg
in
inc
mov
add
das
ficoml
fisubl
pusha
mov
xchg
mov
movsb
lds
sub
sarb
bound
movlps
mull
or
jb
add
loope
loope
shlb
fsubr
or
ficompl
mov
lods
add
mov
loopne
push
mov
push
dec
sahf
test
add
mov
outsl
jns
test
jns
xchg
cld
lcall
mov
sbbl
or
out
and
jae
out
inc
sbb
pop
repz
xor
lods
loopne
jno
sbb
popa
int
xchg
push
pop
imul
mov
jmp
arpl
sub
daa
push
jg
nop
inc
inc
sbb
dec
and
sbb
dec
xor
cmpb
adc
mov
mov
mov
cmp
jl
pop
into
sbb
jns
push
out
jbe
cmp
cli
mov
push
pop
xchg
mov
clc
in
repz
jne
in
xor
adc
and
mov
mov
imul
and
xchg
movsl
xchg
inc
ja
xchg
insl
dec
add
cmp
inc
dec
jns
stos
outsl
xlat
rcrl
test
out
sahf
scas
or
sbb
repnz
orl
in
pop
push
nop
mov
les
jns
inc
and
bound
jno
clc
dec
jb
movsl
xchg
or
bound
call
fnstenv
mov
out
popa
repz
hlt
sahf
sarb
sti
cli
add
jle
stc
outsb
cmp
sbb
int3
lret
pop
cmp
jno
dec
push
cmp
pop
cld
jmp
repnz
aaa
ficoms
add
ja
addr16
sub
inc
cmp
in
ret
jno
mov
mov
lds
sbb
inc
inc
test
sbb
jnp
mov
xlat
sbb
cmp
pop
push
adc
cs
movsb
sub
and
push
test
lcall
sub
addr16
mov
cmp
leavew
push
mov
pusha
mov
inc
movsb
subb
imul
cmp
adc
fldenv
push
and
push
or
inc
dec
adc
leave
fmull
fcomps
jg
inc
enter
dec
adc
sahf
pushf
or
xor
sbbb
xchg
aas
sbb
es
sti
leave
dec
loopne
xor
cmc
je
inc
bswap
cmp
aam
setno
es
inc
inc
dec
pop
ljmp
dec
ret
jecxz
sti
jae
repnz
das
xchg
inc
pop
outsl
sub
push
xor
lock
test
jecxz
inc
repnz
pop
jb
pop
or
dec
mov
cs
jnp
loop
sub
mov
cs
or
mov
loop
imul
push
adc
cmc
inc
std
cltd
rcll
cmpsl
xchg
jbe
icebp
sbb
mov
cmc
push
cmp
repnz
add
pop
lock
xchg
jnp
mov
lods
pop
jmp
mov
push
push
pushf
in
loopne
lcall
mov
mov
or
add
mov
pop
call
jo
push
inc
fldt
adc
out
movsb
in
jp
dec
stos
call
jno
adc
movsb
aad
clc
inc
rcll
sub
aas
mov
popa
sub
sbb
jecxz
in
out
scas
lods
xchg
iret
mov
insl
pop
outsb
sub
push
sbbb
or
lret
stos
xchg
int
sub
call
out
cmp
xor
test
and
stos
leave
ljmp
in
add
bound
or
cmp
outsb
cmpsb
xor
mov
out
movsb
xor
daa
ljmp
or
je
xor
mov
mov
adc
arpl
mov
fisubl
pop
mov
push
in
repz
mov
cmp
movsl
jmp
mov
insb
mov
rcll
testl
stos
cld
mov
test
lahf
in
sub
int3
mov
inc
pop
pop
mov
in
push
lds
and
daa
cmp
xor
inc
push
sbb
data16
movsb
mov
inc
sub
and
jle
inc
push
or
dec
pop
and
jns
subb
sarb
ret
add
dec
jmp
repnz
pop
dec
data16
and
sbb
lahf
inc
push
les
imul
add
into
adc
jb
push
cmp
adc
mov
sahf
pop
scas
mov
xor
loope
hlt
orl
outsl
bound
sar
lcall
in
xchg
xchg
xchg
xchg
or
aaa
inc
and
and
js
insb
mov
imul
lock
fildll
mov
xor
pop
imul
sahf
push
sub
push
mov
xchg
xor
int3
sbb
push
mov
or
movsl
mov
sub
and
and
xlat
pop
xchg
jno
adc
aaa
cmp
fwait
lret
aad
sahf
dec
adc
xor
scas
cmp
call
pop
push
stos
inc
movsb
pusha
xchg
loop
sub
push
outsb
sub
arpl
mov
lret
adc
icebp
or
xchg
dec
inc
xchg
test
cmp
insl
cmp
xchg
inc
enter
out
insl
rol
xchg
jmp
sub
xchg
mov
or
xorb
sbb
inc
gs
mov
arpl
cld
mov
pop
psrlq
adc
mov
sti
jmp
stos
pushf
inc
push
push
mov
mov
or
movb
add
std
jnp
push
adc
mov
test
xchg
adc
adc
cmpb
push
fdivrs
mov
sub
test
int
mov
ret
movsb
std
mov
mov
dec
cli
subl
mov
insb
dec
call
xchg
and
sti
fildll
in
in
jmp
out
mov
cmpsl
aaa
or
sbb
cmc
push
or
jl
lcall
imul
bound
hlt
loop
xor
inc
and
sti
aas
adc
add
loope
xchg
sub
xorb
lods
push
jno
imul
popf
nop
roll
mov
push
into
mov
insl
daa
or
test
pop
xor
jnp
das
cmp
push
jae
dec
pop
test
cmp
mov
ja
insl
xchg
bound
pusha
ljmp
sub
ror
cmp
adc
dec
push
mov
lds
andb
repnz
and
mov
mov
add
jno
lods
cmp
hlt
sub
xor
test
sub
sub
cmp
addb
icebp
mov
push
lods
outsb
dec
fs
imul
xchg
aas
repnz
mov
cmp
and
cld
loopne
jae
dec
mov
sbbl
mov
loope
inc
or
fnstcw
int
incl
imulb
cmp
in
fisttps
inc
ret
les
fisubl
dec
idivb
mov
inc
in
and
insl
test
cmpsl
aaa
adc
jmp
cmp
inc
loope
imul
sahf
push
mov
xor
addl
in
popf
push
dec
jecxz
add
int3
jns
cmp
mov
gs
xchg
notb
cmp
xchg
fs
std
xchg
push
cmc
dec
es
ljmp
mov
movsb
jle
fistpl
call
das
rcl
add
mov
pop
test
xlat
jne
sbb
push
push
imul
xchg
out
mov
test
xchg
neg
lods
or
out
inc
int3
and
test
mov
into
addr16
je
mov
cmp
hlt
enter
loope
idiv
and
cwtl
cmpsl
push
test
loopne
and
mov
xchg
sti
stos
xchg
rolb
pop
adc
xchg
lret
and
andb
dec
mov
jl
stos
push
test
jg
addr16
cmp
fisubrl
mov
sbb
mov
jno
mov
popf
icebp
sbb
and
push
call
pop
jl
lea
sbb
mov
fiadds
stos
ficompl
pop
shlb
unpckhps
stos
movsb
mov
fwait
pop
std
repnz
jge
jbe
cmc
rol
sub
jb
mov
xchg
mov
clc
cmp
test
xchg
repz
ficomps
or
ja
jb
inc
sti
inc
mov
cmp
sbb
popa
loope
push
repz
fiadds
fcmovnb
mov
loop
jle
and
mov
popf
ret
loop
cmp
in
inc
mov
cld
push
cwtl
int3
ljmp
sbb
stos
ja
cmp
inc
fs
xchg
fiadds
test
sbb
and
lods
movsb
idivl
sar
fdiv
and
cmp
sub
dec
stos
sub
mov
dec
test
jno
adc
stos
out
mov
hlt
mov
or
inc
out
shlb
clc
xor
inc
out
fdivrs
and
push
icebp
test
aaa
pop
fisttpl
pop
mov
xchg
mov
mov
adc
loopne
ds
stos
out
aam
mov
push
jbe
mov
outsb
out
xor
sub
iret
xchg
mov
mov
movsl
stos
inc
js
push
iret
iret
dec
in
mov
movsl
sub
mov
dec
mov
mov
push
gs
mov
rcll
and
adc
push
fst
rcrl
sub
loopne
aam
ljmp
orl
xchg
push
pop
aad
test
pusha
aas
call
mov
movd
aam
push
into
jno
icebp
cmp
pop
mov
out
dec
stos
bound
repz
xchg
lret
movsb
int
enter
xor
jle
cmp
push
arpl
push
add
inc
stos
jne
mov
sub
pop
dec
xor
sub
jno
mov
mov
jnp
inc
out
xchg
or
js
and
cltd
dec
daa
mov
fnstenv
jne
sbb
lods
sub
sbb
movl
and
dec
inc
aad
sub
xchg
outsl
cmp
bound
sub
sahf
xor
or
and
xchg
mov
in
and
mov
add
popf
mov
mov
nopl
xor
repnz
sub
or
mov
jo
fwait
leave
scas
fiadds
mov
leave
dec
mov
push
or
scas
pop
push
xorl
sarl
in
cmc
movsl
or
decb
out
jl
roll
out
inc
stos
mov
inc
leave
mov
icebp
inc
movsb
xchg
lods
mov
adc
dec
jle
test
and
cmpsl
push
sbb
stc
test
mov
adc
pop
push
jl,pn
out
sbb
dec
lret
sbb
sub
pop
pushf
out
xor
pop
and
cld
adc
stos
aad
test
adc
scas
xlat
xor
cmp
xchg
lret
lahf
and
shr
jmp
pop
subb
leave
sbb
add
in
add
xchg
cmp
or
and
adc
dec
ja
ljmp
mov
and
in
xchg
icebp
mov
xor
rorl
test
jecxz
cmp
jo
je
ja
loopne
gs
test
mov
mov
leave
xor
out
xor
test
out
and
cli
or
js
jns
lods
add
mov
ss
rclb
shrl
fmul
mov
mov
jg
sahf
ret
inc
pop
and
int3
aaa
enter
dec
inc
insb
movsl
nop
push
aaa
int
gs
lret
sti
or
mov
pushl
mov
aas
push
idivb
sti
and
cli
push
jecxz
lahf
andb
cmp
add
xchg
lods
in
and
loop
inc
data16
bound
negb
addl
jae
lds
fwait
test
pop
insb
lods
and
push
fimuls
lret
dec
out
test
add
xchg
push
rcll
push
jns
fdivrs
dec
pushf
pop
add
sahf
insl
jae
add
dec
in
scas
pop
cmpsb
lahf
scas
push
test
rcl
popf
push
cmp
sbb
frstor
xlat
xchg
les
stos
mov
dec
movsb
mov
jmp
cmp
jg
mov
in
testl
push
test
sbb
fcomps
ret
adc
push
inc
cmpsb
dec
cmp
popa
outsb
repz
lock
mov
pop
adc
lock
push
add
pop
test
xor
sar
sbbl
sahf
sub
sub
dec
xchg
sub
int
pop
ret
dec
adc
mov
jge
xor
add
inc
dec
nop
pop
pop
test
sub
dec
and
pop
call
and
in
ffree
movsl
push
daa
dec
fisubrs
add
sarl
cwtl
pop
xchg
inc
dec
or
jl
cmp
addr16
aam
in
stc
in
dec
mov
adc
xchg
mov
loop
mov
ficoms
xchg
repnz
or
das
repz
and
ss
pop
xchg
rcll
dec
aad
pop
stos
cltd
pop
sbb
jg
mov
mov
mov
sahf
lret
inc
pop
std
arpl
cwtl
jmp
or
leave
jecxz
push
das
xor
in
outsb
cmp
cmp
loope
mov
loope
mov
jbe
mov
mov
push
mov
and
sub
ret
icebp
not
dec
arpl
cmpsl
pop
and
inc
mov
add
cwtl
cmpsl
inc
and
aad
movsb
jp
jmp
pop
arpl
mov
xchg
xchg
call
jecxz
lds
movsl
aaa
xchg
jae
shll
pusha
sub
lret
mov
loope
repz
push
roll
pop
push
sbb
inc
lea
pop
jae
push
rclb
outsb
xor
aas
jle
add
das
mov
fsubrl
sbb
mov
mov
loop
cmpl
addb
and
stos
mov
ffree
lods
popf
xchg
and
inc
fdivr
xchg
adc
mov
sarl
fmuls
adc
shlb
xchg
sbb
jecxz
add
dec
mov
lret
jg
lahf
cs
stc
mov
test
cli
hlt
das
mov
int3
fisubrl
pop
pop
sbb
xlat
stc
xor
mov
mov
sub
cmp
xchg
xchg
pop
dec
shr
mov
push
pop
dec
mov
and
mov
inc
push
ljmp
lret
sbb
test
xlat
mov
scas
lods
push
out
out
dec
test
popa
dec
jno
and
mov
addb
push
dec
mov
dec
gs
shrl
call
imul
movsb
shlb
xchg
je
mov
or
in
add
test
mov
push
je
jg
and
add
and
or
es
mull
fsubl
mov
mov
in
pop
fwait
rorb
jge
xchg
sarl
div
fwait
and
jle
jecxz
jmp
sub
faddp
inc
jno
enter
icebp
outsb
jl
jae
pop
pop
loop
xchg
fisubrs
es
mov
push
in
mov
sub
dec
loop
push
test
cmp
int
test
hlt
add
nop
push
and
jae
jno
lcall
in
in
jno
push
pop
xor
dec
outsb
shll
lods
arpl
add
rcrl
sbb
jmp
repz
in
dec
jp
pop
dec
les
bound
push
repz
add
mov
mov
adc
faddl
mov
into
out
test
mov
mov
aaa
rcrl
jne
sub
jae
popa
mov
add
add
sbb
xor
inc
jb
std
lods
xor
mov
sbb
or
test
sti
xor
mov
adc
sub
scas
rorb
movsb
mov
sub
cld
scas
rcr
sub
fdivrs
xor
not
mov
iret
lahf
shlb
cmp
cmp
mov
ror
or
sub
mov
loopne
dec
cwtl
out
sar
xor
add
push
ret
push
lcall
sub
cltd
ffreep
repz
push
stos
pop
push
lock
fiadds
dec
dec
stos
lret
cmp
fbstp
cmp
fsubrp
push
out
in
stos
sub
insb
pop
inc
push
jns
add
stos
and
ja
add
out
sti
jne
rcrb
xor
or
mov
mov
push
inc
jge
pop
inc
xchg
test
mov
std
fistpl
arpl
flds
stc
lret
dec
pop
pop
inc
inc
hlt
popa
nop
adc
mov
push
jmp
xorb
shr
fadd
mov
push
xor
leave
loope
fadds
cmpb
in
sbb
push
sub
loop
enter
int3
mov
add
mov
repnz
aas
sahf
xor
jbe
push
sbb
ss
jmp
xor
xor
mov
mov
iret
cmpl
sbb
or
insl
idiv
int
cwtl
add
bswap
add
cmp
mov
xchg
out
pushf
adc
and
dec
sbb
jmp
aam
orl
and
sbb
adc
fbld
fs
lds
sti
outsl
jmp
xchg
jns
sbb
jns
inc
pop
lods
push
xor
cmc
push
xlat
shlb
jno
cltd
hlt
dec
cmp
fimuls
xor
add
push
mov
test
je
out
xchg
out
mov
outsl
movsb
adc
jnp
mov
daa
ja
sub
aam
dec
popa
fisubrl
and
sub
sbb
xlat
test
push
lds
fs
out
pop
mov
mov
or
std
dec
mov
out
sub
sub
aaa
sbb
inc
repnz
or
adc
mov
mov
jbe
data16
add
mov
pop
daa
ret
out
sbb
dec
mov
inc
cmp
push
inc
mov
rclb
ds
fwait
jg
cmc
mov
sti
xchg
sbb
jb
ficoml
push
xchg
adc
lret
test
rorb
addr16
xor
loopne
aas
sti
add
jle
out
cmp
xlat
sub
dec
pushf
sub
push
into
repz
ret
mov
dec
sar
add
ret
into
fsub
les
adc
and
test
and
test
rorl
lods
xchg
ror
jae
cltd
sub
loope
mov
jmp
mov
mov
test
icebp
fnclex
outsb
dec
jb
jb
sbb
xchg
cmp
dec
or
push
and
push
dec
hlt
xor
movsb
xor
sar
cltd
fldenv
mov
dec
jns
mov
mov
or
jbe
or
cld
add
inc
aam
pop
sbb
rep
dec
mov
mov
inc
adc
pushf
sub
loopne
ror
scas
data16
push
ret
adc
mov
fdivrs
dec
das
push
lods
in
notb
dec
in
call
mov
ficoml
push
add
aam
es
loope
mov
mov
dec
inc
jb
adcl
mov
decl
das
lods
out
sub
in
push
add
cmp
mov
fildl
outsb
loope
addr16
xchg
addr16
pop
daa
jno
pop
out
add
dec
jg
dec
sbb
sub
inc
sbb
flds
shrl
lods
push
popf
out
xchg
insb
dec
xlat
xchg
mov
cmp
mov
jno
sti
xchg
test
mov
sub
insl
in
jg
outsl
scas
mov
mov
addr16
pop
sbb
dec
xchg
cmc
callw
xchg
lods
movsb
xor
subl
fs
int
out
leave
jmp
inc
mov
stc
add
cltd
add
pop
xchg
jmp
lret
mov
jae
push
push
inc
pusha
pop
jmp
out
xchg
xor
or
iret
jl
mov
mov
test
fimull
lds
or
jae
call
cmpsb
or
dec
push
mov
out
clc
int3
cmpsb
cmp
mov
sub
add
gs
shll
sub
pusha
addb
jb
sarl
repnz
je
and
fadd
xchg
gs
add
jmp
es
scas
inc
push
add
and
test
pop
push
pop
addr16
mov
sub
xor
loopne
dec
jp
jg
mov
shlb
xchg
imul
add
add
push
divb
sbb
cmpsb
sbb
push
add
addr16
in
mov
mov
push
and
mov
add
jae
or
dec
dec
stc
push
clc
in
cmp
pop
xchg
adc
add
sbb
movsl
push
jne
test
jmp
dec
test
fs
mov
pop
ljmp
dec
push
out
stos
rcrl
addr16
daa
xor
xchg
clc
xchg
std
enter
movsb
mov
adc
cli
push
notb
aam
push
mov
mov
jo
hlt
xchg
into
je
testb
nop
xchg
sti
push
mov
cmp
or
pushl
fs
dec
std
dec
movb
fildll
sub
addr16
xlat
leave
sbb
repz
mov
lret
dec
cltd
mov
lock
test
or
rol
insl
lods
jle
adc
daa
mov
pusha
popf
push
pop
sbbb
and
pushf
lea
fistps
add
faddp
xor
int3
cmp
aaa
and
sbb
pusha
dec
sub
call
pop
lret
mov
shrl
lock
jne
add
xchg
stos
psubd
jne
dec
mov
pop
fisttpll
xchg
leave
or
dec
rcrb
push
mov
sub
cli
adc
fnstcw
sbb
ss
iret
adc
push
cmp
xor
jp
in
push
sbb
js
add
mov
mov
cmp
pusha
mov
inc
and
aam
jmp
mov
mov
xlat
rorb
sti
gs
add
jb
mov
mov
outsl
out
aad
icebp
das
jno
inc
mov
sbb
scas
xchg
and
xor
loope
mov
call
inc
arpl
rorb
jo
xor
insb
jge
sbb
pop
cmp
adc
std
jns
int3
mov
enter
movsb
adc
inc
jb
nop
outsb
cmp
inc
jae
pop
lods
dec
pop
sti
push
stos
jge
aad
in
cs
cmp
inc
dec
push
std
xor
rorl
xchg
inc
lret
shll
mov
scas
ror
sbb
cmp
and
in
jmp
lods
stos
fildll
loop
add
inc
rol
imul
inc
das
cmp
jmp
scas
pusha
xor
or
xor
mov
out
js
mov
and
fwait
rcrl
mov
xchg
inc
sub
push
fisttpl
pop
hlt
adc
xchg
dec
out
pop
loope
aaa
arpl
pop
push
stos
pushl
outsb
ficoms
loop
shrl
mov
mov
sbb
leave
push
outsl
xchg
mov
ret
daa
outsl
iret
xchg
pop
xor
insl
jb
mov
sub
sub
cltd
cmp
add
stc
and
mov
bound
mov
jp
jl
push
scas
outsl
sbb
mov
bound
lods
adc
mov
aad
call
scas
cmp
imul
inc
shl
push
push
test
or
mov
sbb
cmp
mov
push
mov
xor
stos
ret
jns
daa
mov
out
aaa
cld
iret
sbb
movsb
or
das
add
sub
filds
dec
mov
pop
xchg
addl
inc
inc
andb
jmp
test
push
aad
cmpsb
out
cmp
jle
push
and
hlt
push
adc
dec
mov
fistpl
or
push
jb
daa
xchg
add
push
mov
or
push
decl
xor
add
addr16
or
add
insl
sbb
mov
sbb
adc
inc
sarl
int3
mov
aam
adc
test
je
mov
rorb
in
lds
add
clc
call
pcmpeqd
jo
aaa
xor
push
and
jecxz
nop
xchg
in
imul
add
les
cmpsb
incl
daa
fildll
adc
push
mov
iret
mov
jge
cmp
pop
xor
ret
jns
lods
jo
mov
dec
in
hlt
in
adc
aam
loop
adc
cltd
arpl
sbb
arpl
mov
addr16
arpl
hlt
or
pop
out
add
imul
jp
aam
rcrl
adc
dec
jo
stc
jg
add
fistpl
adc
inc
cmp
loop
mov
fsubp
aaa
sbb
sahf
pop
daa
movsl
pop
xor
ss
and
pop
lods
fdivs
mov
mov
sarb
dec
sbb
dec
push
or
das
pop
lret
push
fsubrl
sbb
in
cmp
mov
sub
mov
rolb
push
jns
mov
fisubl
dec
dec
pop
xor
sbb
stc
scas
adc
push
shrl
sbbl
aam
mov
cmp
and
inc
xlat
pop
dec
and
gs
and
cmc
mov
test
cmp
mov
in
jb
inc
rorb
gs
jnp
loop
idiv
sbb
pushf
inc
rorb
mov
pop
call
lcall
dec
lea
pusha
sbb
mov
loop
cwtl
enter
sub
aad
mov
cs
into
fcomps
push
xor
jae
mov
movsl
test
nop
sub
ss
cwtl
pop
push
pushf
sub
rorl
or
push
pop
movd
int3
ds
in
jmp
sbb
ds
cmpsb
ret
ret
mov
or
dec
mov
enter
push
aas
unpckhps
pop
das
outsb
rcrb
push
movb
pop
jo
sub
xchg
sbb
test
bound
xor
sbb
mov
cmp
sub
and
in
jmp
dec
and
pop
scas
pop
imul
and
ret
pop
in
arpl
mov
or
popa
mov
ss
fwait
xorb
push
adc
fimull
push
sarl
out
and
test
je
loope
fnstsw
jne
push
sub
pop
dec
xchg
pop
sarb
adc
xchg
mov
sti
daa
mov
add
enter
out
pop
inc
arpl
into
sub
inc
and
jle
add
and
rorb
out
pushf
fwait
movsl
fisubl
mov
ficompl
scas
in
test
call
adcb
mov
pop
scas
aaa
jns
push
xchg
inc
je
cltd
ret
mov
outsb
adc
pushf
mov
inc
fistl
push
mov
call
pop
cmp
mov
mov
sbb
or
clc
fstpt
mov
sub
xorb
sub
add
jns
cmpsb
imul
pop
imul
push
and
lret
arpl
in
andl
dec
leave
cld
imul
popaw
xor
mov
jnp
add
or
add
jecxz
jo
js
out
or
insl
xor
fldcw
sub
fwait
inc
and
popf
jl
xlat
lea
inc
add
mov
jo
sbb
repz
ret
and
outsl
jae
into
clc
sub
or
sub
insl
iret
stos
pushf
cmovbe
fsubrs
xor
pusha
loop
and
push
cwtl
pop
mov
cmc
push
cmp
mov
inc
rol
push
ror
push
sub
cmp
dec
mov
out
push
pop
add
shl
pop
push
add
lods
je
adc
imul
push
xchg
xor
and
adc
test
popa
imul
shrl
scas
or
adc
jno
jecxz
subl
imul
gs
hlt
push
dec
cmp
xlat
sub
dec
popa
sbbb
inc
and
fldenv
jl
xchg
in
xchg
scas
pop
inc
xor
jmp
cmp
cmp
out
test
pop
pop
dec
mov
adcl
sti
mov
sti
and
lds
sbb
inc
lea
fsub
bnd
dec
xchg
insb
insl
rolb
into
cmp
xor
add
inc
ret
cmpsl
stos
or
enter
mov
popf
in
push
aas
jnp
xlat
addl
mov
hlt
dec
lock
mov
je
and
clc
in
inc
stos
push
mov
sbb
inc
lret
mov
cwtl
push
fildl
leave
jge
sbb
pusha
cmp
mov
or
push
xchg
sub
ret
jne
js
sti
aas
pop
push
lea
xor
ja
push
jbe
test
clc
mov
mov
ret
cs
xchg
sar
pop
sub
pop
mov
roll
or
inc
sub
roll
stos
setnp
ret
xor
and
not
mov
xchg
leave
dec
loope
jns
xor
and
mov
add
call
aaa
adc
or
adc
fdivrl
daa
cld
xlat
out
add
fcompl
lret
adc
mov
addl
jmp
ja
inc
inc
nop
movsb
mov
je
and
push
dec
adc
mov
sbb
test
leave
mov
loope
lods
mov
inc
mov
jno
and
lods
test
jp
add
add
sti
repnz
sub
sbb
add
mov
out
mov
lcall
addb
adc
adc
imul
aad
dec
imul
loope
xchg
aam
mov
xchg
push
mov
xor
pop
push
rcrl
push
jmp
cs
pushf
mov
lods
comiss
cmc
xchg
dec
cmp
aam
stos
dec
test
mov
jle
inc
decb
mov
rcr
push
cwtl
inc
roll
sub
pop
cmp
xchg
mov
scas
scas
bound
inc
sub
push
sub
gs
jno
jle
jns
xchg
lcall
sbb
repz
outsl
orb
icebp
mov
mov
sbb
mov
popf
pop
lret
in
mov
je
ret
sbb
or
ja
ja
or
lcall
adc
iret
outsl
inc
xchg
ficompl
sti
xor
inc
pusha
lcall
scas
mov
sub
add
mov
and
or
add
xor
and
cwtl
mov
push
out
lret
pop
mov
inc
mov
jl
mov
in
and
popf
lods
mov
and
and
call
dec
enter
lds
lods
add
xchg
sti
adc
pop
or
xor
sub
mov
stc
loopne
iret
or
sbbl
push
insb
popf
negl
pop
cmpsb
arpl
mov
jg
push
jmp
mulb
dec
xchg
add
out
push
mov
xchg
jb
mov
mov
addl
inc
pause
pop
pop
xchg
pushf
mov
push
and
ja
and
mov
xor
jp
cmp
jp
loope
jnp
and
je
sub
fidivl
xchg
sbb
call
movsl
idivl
lods
cli
pop
xor
mov
sbb
dec
push
lea
dec
outsl
adc
xor
xchg
arpl
jnp
adc
pop
pushf
xor
jb
mov
icebp
les
mov
sub
add
data16
out
add
xchg
xor
dec
loop
idivl
pop
cmpsl
fucom
xor
in
loop
clc
dec
cmp
lods
leave
xchg
sub
mov
lahf
or
cmpsb
dec
lods
incl
test
mov
add
jbe
cs
mov
dec
shl
inc
push
sbb
repz
movsl
je
insl
fmull
fadds
or
stc
lahf
push
mov
jle
sub
shll
std
call
rcrl
xchg
and
pop
ret
fnsave
jecxz
or
and
lcall
mov
inc
clc
push
inc
call
pop
jl
arpl
inc
mov
push
call
pop
test
pop
mov
dec
frstor
outsl
rolb
push
adcl
xlat
in
xlat
aad
add
push
jmp
fisttps
xor
iret
sbb
mov
fcoml
and
scas
mov
dec
outsb
jnp
sbb
and
mov
mov
mov
ret
pop
mov
lods
add
cmp
fcompl
mov
hlt
xchg
jle
data16
cmpsb
js
clc
mov
cmpsl
lods
test
dec
inc
fistpl
orl
mov
lock
pushl
and
lret
xchg
popf
mov
push
enter
dec
lods
fcmovbe
stos
scas
adc
xchg
push
inc
cmp
aad
shll
call
and
add
and
sub
inc
adcl
mov
shll
outsb
jp
xlat
lret
xchg
fnsave
pushl
pop
imul
pop
sahf
leave
and
fiadds
popa
xchg
icebp
fimuls
dec
sub
leave
xor
aam
in
jb
scas
clc
jp
sbb
push
or
es
loopne
jne
jecxz
daa
sub
repz
mov
dec
xchg
repz
mov
xchg
push
test
cmp
dec
pop
outsl
jne
scas
stos
pop
out
addr16
rcrb
mov
mov
testl
pop
hlt
push
jno
das
jmp
adc
xchg
outsb
add
movsb
or
mov
out
pop
inc
fcoms
sub
adc
dec
or
enter
inc
stc
icebp
mov
into
daa
sub
pop
sub
xchg
add
cmp
lahf
gs
inc
ljmp
xor
sarb
test
adc
push
add
sbb
sbb
xchg
idivb
fdivr
xor
xor
popa
rcrl
testl
xor
dec
or
pop
push
in
push
rorb
mov
jno
shrl
sbb
cmpsb
inc
lods
std
test
sarl
stc
ret
les
pushf
aad
and
stos
push
es
mov
int3
out
or
xchg
xor
je
add
lahf
mov
push
fdivrp
js
repz
inc
adc
push
mov
ret
cmpsb
jmp
mov
jp
lock
inc
into
lret
in
ret
or
pop
push
push
xor
xor
aad
fildll
xchg
test
dec
arpl
dec
mov
xorl
mov
int3
icebp
out
mov
icebp
sahf
repz
mov
sub
iret
mov
push
dec
ds
or
adc
lret
and
pop
lock
push
movsb
shr
push
pop
xchg
xchg
pop
les
cmpsl
pop
or
or
lods
xor
cltd
mulb
scas
loop
fsubrl
je
and
adc
pusha
mov
sbb
movsb
jno
dec
inc
push
xchg
sbb
fdivrs
cmp
cmp
aas
add
inc
test
fs
push
cmp
mov
int3
xor
fsubs
mov
ja
inc
sub
out
hlt
dec
fs
mov
in
mov
xor
jle
xor
jmp
sub
arpl
sbbl
fs
cltd
mov
pop
xor
shl
hlt
or
dec
adc
je
sub
sub
add
iret
repz
ret
fidivs
in
pop
xchg
ljmp
mov
push
out
scas
jne
mov
hlt
mov
in
sti
jge
add
inc
leave
fmull
mov
push
xchg
movsl
sbb
insl
in
pop
shlb
jg
insb
out
sub
sbb
pushf
pop
pop
jge
sbb
dec
ljmp
push
repnz
add
pusha
add
in
sbb
fs
and
in
je
arpl
sub
jne
jns
hlt
icebp
mov
add
push
out
mov
sbb
mov
sub
mov
ss
call
rcll
jae
or
add
dec
jp
mov
lahf
aad
sbb
sbb
cld
and
jae
xchg
dec
mov
scas
shlb
mov
mov
popa
jbe
jbe
cwtl
push
sbb
mov
jp
ds
pushf
jns
popa
xor
je
mov
mov
mov
lock
mov
cwtl
cmp
sahf
cwtl
rorb
xchg
call
rcrl
in
jecxz
or
jns
mov
mov
jl
ret
icebp
test
and
lds
hlt
aas
vmwrite
xchg
out
sar
or
sbb
cmp
scas
lahf
mov
xor
mov
dec
jns
pop
je
inc
data16
les
mov
push
push
adc
testl
daa
jmp
pop
shll
incb
fdivrl
mov
lret
sub
push
add
mov
lods
lock
das
out
or
lret
dec
stos
jae
sbb
int
dec
sbb
jnp
icebp
call
adc
dec
rcl
in
mov
dec
hlt
add
lods
sub
pop
jb
cmp
cmp
mov
mov
insb
xchg
xor
pushf
cmpsb
loop
leave
mov
cmp
lods
mov
jae
sbb
sub
xor
mov
out
adc
je
mov
adc
flds
pop
inc
mov
or
cli
jne
aaa
movsb
in
cwtl
icebp
cmp
jmp
xor
mov
and
xchg
sub
sub
push
or
push
insl
int
sub
in
cmp
mov
lahf
sbb
daa
push
jp
sub
test
ja
loope
cmp
arpl
orl
push
std
cwtl
push
pop
gs
flds
pop
mov
jg
fnstenv
shll
add
testb
jecxz
movsl
lods
imul
lret
addb
loope
divl
adc
mov
mov
and
jno
sub
sub
xchg
fwait
lods
xchg
in
hlt
js
repz
in
das
sti
sbb
in
pop
repnz
imul
enter
or
les
fmuls
adc
popa
jns
sbb
jp
push
mov
xchg
imul
add
andb
sub
js
mov
mov
add
fwait
cltd
push
xchg
fs
and
adc
or
stc
lcall
jge
mov
mov
rcll
std
pop
jp
mov
xchg
inc
dec
and
stc
xor
mov
dec
jecxz
push
adc
clc
xor
aam
push
movq
mov
movsl
pop
ret
popf
jnp
sbb
nop
shl
xor
jb
mov
sbb
clc
jmp
xchg
mov
xor
and
subb
loopne
movsb
add
ja
xlat
andb
shr
dec
sbb
cmp
mov
cld
lea
or
rcr
loopne
movsl
xor
inc
xlat
push
or
loopne
push
test
cmp
lret
mov
xchg
push
jb
sbb
stos
fdiv
aad
sbb
xor
xor
pop
icebp
fsubp
jae
in
sbb
test
push
mov
adcb
pop
push
mov
cmp
sbb
pop
ja
rolb
hlt
in
dec
pushf
cwtl
popf
and
mov
ret
enter
mov
loop
mov
add
sbb
push
iret
cmp
add
or
arpl
or
fimull
cmpsl
lods
sbb
mov
clc
dec
je
icebp
mov
cmpsl
arpl
ds
push
shlb
cwtl
icebp
loop
or
test
and
mov
mov
pop
jno
dec
pushf
stos
mov
lcall
movsb
adc
cmpsb
insb
mov
sub
jg
xor
addr16
cmpsl
imul
dec
in
or
int
cmp
inc
push
cmpsl
test
mov
adc
jo
pop
and
and
mull
push
jno
insl
push
push
mov
mov
pop
rclb
sub
and
in
rorl
and
cmp
and
clc
lods
adc
pop
ss
inc
ja
mov
leave
push
pushf
xor
out
in
jmp
fwait
dec
cmpsb
scas
xchg
mov
jne
and
dec
push
incb
mov
fmull
sbb
inc
in
xor
icebp
sub
adc
jmp
push
in
test
call
out
in
mov
push
ss
sbb
jmp
fcoml
in
in
mov
jne
mov
ret
mov
mov
ds
mov
int3
cmp
fsubs
fdiv
lods
fisubrl
cmp
fs
test
sbb
out
add
pop
les
pop
dec
popa
sub
jecxz
ljmp
test
or
scas
mov
xchg
fdivrp
lds
lcall
cmp
fildll
dec
add
pop
iret
push
and
adcl
lea
inc
xor
pushf
arpl
pop
jmp
nop
lcall
xchg
je
mov
mov
gs
aam
add
mov
data16
imul
mov
test
mov
mov
inc
clc
pusha
adc
add
add
lahf
lods
test
mov
test
add
shrb
loope
lahf
orb
cmp
fwait
in
xor
cwtl
push
dec
cmp
pop
movsb
imul
pop
xchg
stc
or
in
les
daa
xchg
push
mov
xchg
cmp
inc
jl
pushf
xchg
es
or
dec
pop
or
push
dec
mov
pop
popa
outsl
cld
inc
mov
and
lock
mov
ljmp
popa
and
sar
adc
out
sub
fimuls
iretw
repz
xchg
and
pusha
lcall
mov
jo
xor
mov
cs
inc
jge
fsubrs
rcll
pop
and
imul
decb
mov
sbb
aad
shlb
xchg
xchg
decb
js
in
inc
dec
or
xchg
xor
movq
cmp
shr
pop
fwait
orl
mov
mov
adc
mov
jmp
dec
es
insl
out
cmc
ret
jmp
mov
leave
or
ds
xchg
out
popf
shll
adcb
jg
insl
std
popf
cmp
xor
add
test
les
inc
mov
cli
mov
jp
popf
pusha
insl
inc
mov
push
mov
mov
push
pop
mov
in
scas
pusha
movsb
sub
jecxz
shll
pop
cmp
repz
mov
insl
ljmp
or
ret
cmpsl
mov
testb
mov
jp
xor
clc
fisubrl
adc
mov
mov
add
jnp
lds
fdivrs
insl
out
movsb
sti
and
push
cltd
add
sbb
xchg
xlat
mov
mov
les
stos
xchg
adc
pop
push
test
cmp
sub
les
jbe
push
and
mov
push
add
and
xorl
inc
push
sbb
ss
adc
inc
mov
lods
test
cmc
pop
inc
das
add
lret
inc
lret
pop
fmuls
mov
xchg
andl
xchg
xor
pusha
sub
sbb
test
in
fld
movsl
fdivr
repnz
mov
inc
push
mov
xchg
arpl
dec
sub
xchg
lahf
or
and
or
fstps
insb
mov
jecxz
sub
jl
pop
cld
mov
es
mov
cld
aaa
ret
or
scas
adc
dec
pop
add
jae
repnz
sahf
mov
pusha
jne
xchg
adc
pop
sahf
jbe
movsb
dec
out
push
lods
rcrb
sub
push
bound
adc
add
and
sbb
lock
gs
jecxz
jno
stc
push
cli
and
push
call
cmp
mov
jmp
dec
les
insl
negb
mov
aam
ret
aas
loop
mov
testb
lock
jle
testb
pop
jno
or
fcoml
or
xchg
mov
mul
dec
pushl
popa
ror
mov
std
dec
sub
push
imul
repz
xchg
out
dec
cwtl
sub
cli
pop
imul
bound
jp
aad
jmp
xor
cmp
mov
imul
push
mov
or
in
pop
lea
test
fdivr
cmp
or
xchg
inc
lret
and
out
xchg
lods
add
and
rcr
pushf
dec
rclb
push
sbb
xlat
mov
mov
int3
sub
fsubrs
xchg
inc
jns
xchg
cmc
nop
popa
sub
pop
mov
in
push
cmp
sbb
mov
mov
mov
mov
test
xor
adc
insl
or
insb
movsl
fwait
mov
xchg
mov
daa
pop
ss
movsl
cmp
jl
jmp
leave
push
push
add
loope
bound
jle
mov
stc
outsb
lcall
dec
enter
jno
push
aad
ja
ret
and
div
outsl
movsb
inc
outsl
adc
jmp
ret
inc
sbb
or
imul
cmpsl
dec
adc
call
mov
or
cs
sbb
mov
repz
adcb
loope
jmp
dec
rcll
jmp
add
xchg
mov
cmp
mov
add
or
pushf
mov
sbb
xchg
imul
bts
js
scas
sti
in
jl
ret
ficompl
or
push
aam
cli
push
aad
loope
mov
inc
xchg
int3
loopne
push
ret
popf
or
jge
inc
inc
push
or
cmc
lahf
ret
adc
js
fildll
std
jo
cmpsb
sub
jle
sub
inc
mov
stos
call
mov
push
xor
xchg
mov
jnp
jp
popf
xadd
cmpsb
xchg
out
push
scas
rcl
add
popf
mov
or
xchg
insb
add
sti
or
je
xor
dec
or
icebp
andl
mov
cmp
xor
inc
dec
dec
roll
pop
jge
mov
sub
or
inc
outsl
adc
std
sub
sbb
mov
outsb
add
je
fisttpll
aas
push
sub
mov
xchg
mov
inc
shr
jg
mov
mov
ja
inc
nop
push
inc
mov
ss
jg
mov
mov
stc
cmp
mov
loop
sbb
add
or
orl
push
cmp
sti
pusha
pop
adc
inc
sub
repnz
jle
xchg
cwtl
insl
mov
inc
and
mov
xchg
aad
scas
stc
sub
push
dec
bound
jae
sub
inc
mov
sub
clc
cmpsl
push
cmp
sub
push
push
sbb
pop
adcb
sbb
push
adc
dec
fsubl
imul
mov
fldt
test
sbb
mov
xchg
jp
stc
or
adc
ss
subl
lahf
mov
add
inc
jns
push
adc
clc
aam
pop
dec
fstpt
fs
sub
and
pop
adc
push
icebp
inc
js
int
sub
fistps
sarb
rcrl
push
mov
xchg
aam
mov
bound
es
popf
lods
imul
xor
inc
int3
in
cmp
outsl
adcb
xchg
nop
cmp
movsl
and
xchg
das
jle
xchg
cld
add
mov
sub
stos
pop
dec
fwait
int
cmp
icebp
pushf
xchg
cld
sub
pop
fidivrs
sar
loop
jbe
mov
iret
mov
insb
test
stos
and
movl
pop
ret
add
cltd
cmpb
push
dec
je
mov
in
cmp
add
lahf
mov
scas
push
scas
ret
add
jmp
push
cmpsb
mov
xchg
jb
add
es
add
mov
daa
cmp
sbb
dec
mov
xchg
pop
lea
sbb
sbb
dec
sbb
rorb
fidivrl
or
or
ret
rcrb
popl
inc
cmp
popf
xor
pop
push
cmp
in
add
cs
xor
ljmp
jl
fisttpll
adc
push
jne
div
inc
and
int
or
addr16
sbb
jo
lods
ss
mov
mov
call
mov
xchg
cmp
cmp
dec
fcmove
std
cld
in
aaa
mov
rol
mov
adc
xchg
ret
sub
fstps
fistpll
or
and
pop
aaa
inc
add
pop
jbe
clc
ret
xor
xchg
in
lret
loope
sub
pop
dec
ja
jb
xchg
pop
sbb
stos
mov
cmp
dec
jle
mov
and
mov
pushf
lcall
add
cld
or
adc
cltd
fnstcw
xor
or
push
out
xchg
mov
pop
mov
mov
test
inc
sbb
daa
or
fdivrl
sbb
lea
dec
test
push
sbb
jp
in
mov
lods
test
push
into
mulb
pop
and
push
es
xchg
inc
or
cmp
dec
loopne
rolb
insb
loopne
push
inc
inc
imul
jns
jno
mov
push
push
and
jb
jb
xchg
movsb
stos
add
aam
ss
ljmp
mov
scas
sbb
add
dec
fcmovne
test
mov
mov
fwait
or
loop
mov
pop
inc
sahf
popf
sub
cmpsb
xchg
add
fistl
leave
mov
mov
or
cwtl
sub
jo
fs
popa
cmp
push
push
loopne
push
xchg
decb
addr16
lea
cmp
mov
add
push
sub
mov
cmp
ret
int3
xor
sbb
lds
cmc
notl
cwtl
sbb
sub
cmpsb
js
movb
shrl
jae
sbb
xchg
xlat
mov
adc
cltd
add
pop
and
xchg
push
push
sbb
daa
xchg
insb
lret
test
sbb
xchg
cli
sbb
outsl
and
sub
cltd
addl
xchg
dec
add
imul
add
hlt
pop
ja
push
js
imul
mov
orl
adc
mov
cmp
lods
cs
pop
inc
mov
mov
pop
out
das
pop
sbb
fiaddl
orl
mov
inc
xchg
mov
mov
scas
or
shll
xchg
shrl
inc
fistl
jle
aad
sbb
jb
or
dec
fwait
pop
pop
cld
in
sbb
inc
gs
dec
mov
imul
inc
mov
ficoms
pop
adc
sbb
inc
mov
bound
test
xchg
lret
pop
iret
sahf
xor
pop
push
stos
adc
jge
movsl
xor
cmc
sbbl
jge
push
fldl
lret
mov
jne
mov
cltd
sub
push
adc
xchg
in
mov
sbb
in
adcb
int3
push
bound
repz
pop
lcall
or
bound
popf
mov
mov
mov
mov
fwait
push
pop
lret
add
imul
jecxz
cmp
push
cmp
jecxz
aad
inc
mov
outsb
mov
xor
jmp
in
push
mov
adc
outsl
rcll
sub
push
or
insb
cwtl
cmp
adc
cmp
imul
repz
in
xor
js
cmp
mov
jne
inc
inc
mov
jb
or
xor
cs
in
sub
cmp
imul
sbb
push
mov
cmp
xlat
fcompp
inc
pop
pop
decb
std
xor
lods
jg
mov
mov
lods
lahf
or
add
mov
jbe
mov
lret
pop
mov
subl
ret
lret
insb
xchg
xor
fcoml
stos
xchg
or
mov
jb
xor
and
lret
mov
iret
mov
test
popf
and
int
push
pusha
icebp
inc
add
mov
cmpsb
addr16
in
adc
pop
pop
jmp
xlat
push
nop
sub
loope
aad
xchg
jecxz
mov
jle
mov
jb
ja
setp
lds
in
jb
je
jg
xchg
loop
aam
xor
lds
inc
xor
xchg
mov
jnp
add
fsubs
imul
sbb
mov
push
fdivs
inc
xor
movsl
out
cmpsl
xchg
xchg
fs
gs
lret
push
mov
jbe
mov
jb
jecxz
fld1
inc
xlat
xchg
out
mov
jo
jmp
mov
mov
or
int
mov
pushf
shrl
movsb
jmp
mov
lahf
xlat
and
fwait
inc
inc
inc
dec
sahf
lods
inc
mov
mov
mov
push
js
repnz
xchg
nop
and
loopne
jge
fnstenv
sub
fs
fldl2e
add
dec
mov
test
add
mov
pop
dec
pusha
ss
add
mov
fisttpll
mov
jecxz
sbb
adc
sbb
push
inc
mov
xchg
mov
mov
mov
xor
ret
stos
faddl
pop
push
pop
pop
es
inc
or
lods
inc
push
daa
int
dec
rcll
icebp
jbe
in
push
mov
sbb
int3
lea
add
cmpsb
or
inc
mov
jg
sti
insl
and
stos
clc
dec
popa
sbb
and
ss
jmp
push
aad
lods
call
jne
or
xchg
xor
sub
xor
push
inc
inc
jo
dec
leave
xchg
mov
daa
shlb
test
les
mov
cmpsb
cld
and
pop
pusha
or
dec
jae
ljmp
movsb
pusha
das
sbb
loopne
xor
xchg
push
adc
push
lods
shrl
popf
sbb
sahf
push
mov
inc
fs
dec
mov
add
out
lock
push
outsl
add
mov
sbb
sti
das
xor
daa
adc
cs
cs
xlat
sahf
jb,pn
lret
add
mov
ds
or
mov
mov
xor
inc
adc
xor
sti
repz
and
sub
mov
dec
sbb
das
ds
lds
pop
ret
mov
cmpsl
pop
inc
pop
imul
dec
and
dec
cltd
mov
fnsave
sub
lods
cmp
mov
data16
rcll
cmpsb
or
cmpsb
adc
jno
mov
inc
out
jg
movl
xor
sub
mov
not
mov
scas
stc
pop
es
fcomp
in
dec
inc
mov
fs
mov
stos
js
rcl
pushf
dec
outsb
testl
jecxz
jns
pop
push
out
cmpsb
push
shl
xchg
adc
xor
push
jb
xor
or
adc
add
shll
arpl
or
dec
mul
jg
or
or
pop
dec
pop
mov
shll
jbe
aad
xchg
xor
aam
mov
dec
or
mov
jo
jae
sbb
or
scas
pushf
aam
dec
fwait
imul
cmp
ljmp
cmp
xor
insb
cs
in
xchg
stos
les
mov
xlat
xor
mov
leave
sahf
xor
js
jmpw
sub
in
mov
mov
jecxz
scas
cmp
xlat
and
xchg
mov
adc
mov
fwait
or
pushl
dec
mov
pushf
loopne
fnstenv
dec
icebp
sub
cmpsl
cmp
icebp
sub
adc
jg
xchg
testb
push
jp
mov
out
lahf
and
and
xchg
add
sbb
pop
out
aas
aaa
xchg
add
sub
addr16
sbb
shl
sub
and
adc
das
dec
bound
dec
int
cmp
and
aaa
sub
int3
inc
cmpb
ds
data16
inc
daa
mov
seto
or
xor
inc
rcll
and
sbb
cld
imul
les
movsl
mov
mov
pop
pop
ljmp
and
mov
xchg
repnz
ss
dec
xchg
xchg
movsb
and
decb
out
mov
sub
shll
sub
push
dec
jbe
orb
outsb
loopne
pop
sarl
add
loopne
loope
jo
lret
stos
cld
push
aas
sarb
insl
inc
mov
test
test
adc
and
js
dec
mov
mov
or
xchg
xor
ja
daa
cmp
jbe
add
fs
add
stos
mov
mov
rcl
sbb
or
inc
repnz
pop
mov
mov
sahf
cmp
jne
shll
xor
mov
hlt
xor
cmp
push
dec
ret
sub
sub
imul
lods
out
dec
push
scas
cwtl
cmp
inc
in
pop
sub
sbb
mov
xor
xor
mov
mov
mov
enter
imull
ss
jb
sbb
adcb
mov
fistpll
bnd
inc
mov
fnstcw
mov
sbb
stos
lahf
cmp
and
mov
dec
and
add
xchg
test
pushf
mov
daa
xor
clc
xor
movsl
pop
adc
js
xorb
push
ss
ss
repnz
dec
jns
adc
adc
cmp
lock
xchg
jo
and
inc
pop
insl
cmp
add
inc
pop
notb
sub
lahf
xchg
xor
push
das
icebp
push
clc
es
cli
or
popa
je
cmpsl
pop
jbe
fimuls
add
cmp
mov
mov
jl
dec
cmp
in
orb
cmp
and
mov
or
repz
or
in
push
ljmp
fs
mov
mov
in
je
jb
or
or
pop
test
mov
xchg
sbb
adc
rcll
and
cmc
dec
js
mov
push
and
xor
int3
fcomps
push
addr16
jge
into
mov
dec
dec
and
and
sbb
mov
and
xor
mov
pop
jg
mov
loop
sub
loope
xchg
sbb
push
cmp
clc
adc
and
clc
outsb
sbb
xchg
jnp
test
cmp
adc
std
scas
mov
xchg
push
sub
add
jmp
jo
test
lcall
shr
int3
mov
sbb
jecxz
push
lcall
jno
mov
sub
jl
sti
jbe
cltd
push
fs
xor
insb
xor
mov
jle
fbstp
scas
push
add
fiaddl
sub
leave
xor
push
ds
sub
cmpsb
inc
xor
and
or
push
loop
jo
loope
sarb
xor
nop
add
xor
mov
int
sub
aas
mov
push
vpcmpeqd
inc
insb
push
shlb
mov
int3
and
outsl
cmpb
ret
add
xchg
xor
xchg
push
inc
cltd
jl
orb
dec
push
arpl
int3
leave
gs
or
aas
scas
lea
test
imull
pop
pushf
sbb
aad
ret
sbb
cmp
shr
inc
sbb
cmp
xlat
repz
ds
cld
das
mov
into
or
fstps
dec
lret
orb
add
mov
mov
xchg
dec
mov
pop
push
fdivs
cmp
dec
cld
push
lahf
iret
in
lods
jge
ret
int
fisubs
mov
notl
fwait
push
dec
loope
mov
imul
cmpsl
out
mov
or
mov
out
or
push
cmc
lea
out
mov
repnz
in
stos
nop
ljmp
xor
je
repz
cmp
mov
mov
cwtl
adc
pusha
dec
test
cmc
data16
shl
faddl
or
xor
fisttps
aaa
movsb
mov
call
dec
mov
les
mov
jmp
or
mov
xchg
mov
lods
xchg
rcll
sub
fiadds
test
sbb
mov
je
pusha
inc
cs
sbbb
mov
pop
fcompl
arpl
or
es
aaa
dec
test
or
and
adc
xchg
movsl
or
cli
ret
mov
repz
inc
pop
mov
mov
and
sbb
data16
stc
arpl
push
mov
xor
pop
mov
or
push
mov
cmp
sbb
mov
dec
dec
shll
xor
rclb
shl
lock
pop
lods
inc
xchg
cmp
int3
add
data16
mov
testl
dec
add
sub
dec
pop
ljmp
pop
xchg
pop
xor
mov
and
and
push
mov
popa
mov
xchg
pop
pop
inc
imul
addr16
scas
mov
int3
jbe
add
ret
rolb
adc
sahf
jne
pop
pop
ret
lds
push
xchg
and
jbe
testb
jg
cli
shlb
ds
jp
pop
xor
and
pop
addr16
dec
fistps
dec
popf
test
test
push
loopne
lret
cmp
and
ror
dec
pop
inc
sub
sarb
mov
or
adc
jge
mov
jnp
aaa
cld
ret
add
fcompl
and
or
xorb
bound
xchg
out
jae
in
cli
pop
lods
loop
aaa
ret
xchg
hlt
fs
cmp
xor
jo
idivl
push
add
inc
jl
gs
fistps
push
scas
xor
mov
pop
pop
call
sarl
mov
movsl
cmp
insl
dec
insb
lods
dec
pop
mov
ja
mov
xor
ja
nop
pop
outsb
pop
shl
lock
loop
mov
xor
mov
cld
out
in
push
xchg
das
cmp
xor
out
push
mov
lahf
mov
loopne
gs
push
pop
pop
adcl
xchg
jns
pop
jae
mov
pop
imul
scas
inc
xchg
jno
aas
stos
lds
xchg
jmp
insb
xor
imul
sbb
sbb
add
cmpsl
sarb
pushf
xor
and
lahf
pop
mov
mov
sbb
movsl
in
lea
jg
cmp
or
mov
outsl
mull
data16
js
cmp
and
cmp
sbb
cmp
push
mov
rorb
lahf
xchg
incb
imul
stc
mov
into
popf
push
ss
orl
inc
add
dec
aas
mov
jne
inc
jmp
pushf
mov
roll
daa
out
addr16
gs
jge
xchg
cmc
in
mov
mov
cli
and
addr16
fcmovne
js
addr16
inc
push
shlb
mov
les
xchg
js
mov
pop
loope
xchg
inc
jg
xor
mov
push
inc
pop
mov
lock
sti
aam
pop
add
xor
outsl
mov
inc
add
xor
bound
lret
imul
orl
mov
dec
in
xchg
mov
data16
jp
pop
add
adc
clc
in
mov
aas
pop
push
out
cmp
loop
xchg
in
dec
inc
xchg
jne
adc
ficoml
repnz
xor
and
and
mov
add
mov
or
sti
cs
lds
lret
lods
mov
or
add
in
in
lahf
iret
mov
xchg
add
inc
dec
ds
shll
enter
add
xchg
mov
xor
lods
andb
mov
sub
or
inc
push
in
shll
or
psubusb
inc
jno
cltd
into
mov
mov
gs
iret
shrb
lods
adc
sub
pop
pop
cltd
and
mov
popf
movsl
jno
push
fnsave
pop
pop
cwtl
cmpsl
hlt
leave
mov
mov
xor
lret
ret
hlt
scas
mov
mov
mov
call
adc
jne
out
cmp
lret
push
xor
cmp
inc
clc
adc
pop
pop
inc
js
cmp
mov
sti
out
cmp
lea
push
out
cmpsb
pusha
xchg
in
dec
lahf
scas
rcrl
fsubrl
push
xor
add
jne
pop
repz
dec
aas
and
sub
aam
mov
out
mov
scas
rorb
loope
popa
pusha
shrl
shr
xchg
dec
lea
push
xchg
sub
push
mov
or
cmpsl
jecxz
xchg
pop
shlb
outsl
mov
inc
add
loop
sub
lock
hlt
mov
stc
jp
add
cmp
push
dec
cmp
cmp
movb
add
push
inc
das
aad
jmp
mov
sub
dec
sub
in
sbb
pop
lods
mov
cmp
add
stos
scas
fsubrs
lret
mov
dec
and
jecxz
add
mov
jno
jg
outsb
popa
test
mov
push
jecxz
test
int3
movsb
insb
cmp
lcall
mov
mov
gs
mov
ljmp
insb
mov
daa
mov
pop
cmpsb
stc
orb
sbb
cmp
ret
jecxz
mov
rcrl
aad
mov
xor
ret
mov
mov
mov
out
je
mov
ds
dec
mov
dec
je
sbb
aam
xor
rclb
pop
inc
cltd
lods
xchg
add
outsl
adc
jge
add
and
push
or
push
push
push
arpl
inc
insl
fnstcw
ss
sub
mov
push
push
and
adc
fwait
arpl
call
sti
rolb
jp
mov
xchg
jne
loop
sub
sub
xorb
jl
cwtl
cmp
jb
dec
cmp
ficoms
js
mov
ffreep
dec
sub
fmull
and
ret
cmp
stc
clc
idivl
inc
jge
stos
adc
aad
adc
daa
fstpl
scas
fstl
bound
xor
dec
push
adcl
mov
iret
add
push
add
jmp
fcoms
sub
cmp
mov
mulb
pop
jns
call
xchg
dec
xlat
inc
mov
rolb
push
fwait
test
fdivrl
mov
ss
pop
cmp
push
cmp
imul
sbb
sbb
mov
push
and
testb
leave
aaa
data16
and
mov
movsb
mov
cli
cmp
cltd
lret
aas
jge
sti
fiadds
hlt
cwtl
xor
xchg
mov
mov
mov
mov
xchg
xchg
push
mov
fs
jmp
je
in
ja
cmp
imul
dec
push
loopne
inc
pop
aam
dec
lds
bound
les
mov
and
out
mov
push
icebp
xor
loope
mov
pop
jbe
jo
lahf
jp
cmpsl
lock
add
cmp
dec
insl
inc
pop
dec
test
ss
cltd
in
negl
pop
push
jb
jmp
sub
dec
or
xchg
sub
adc
xchg
and
jb
and
jo
sub
test
mov
jle
loope
hlt
shlb
xor
adcl
sbb
daa
std
pop
aad
jae
fs
movsl
rolb
insl
adc
pop
dec
inc
stos
and
pop
mov
fstps
test
in
fdivl
test
mov
cli
and
mov
mov
sub
insb
scas
adc
jno
popa
jo
fdivp
xorl
jp
xchg
mov
aaa
xchg
shlb
movsl
xchg
sbb
js
jecxz
sbb
and
xor
or
fs
sar
mov
mov
pop
std
mov
sub
std
adc
push
es
cli
inc
les
jae
or
lret
shlb
mov
jle
xor
int
mov
aas
enter
ror
push
jns
sbb
inc
jns
lock
sbb
int3
fldenv
sahf
adc
pop
push
mov
xchg
andl
lods
rorl
or
or
mov
dec
pop
xor
mov
cmp
and
add
ds
ja
xor
mov
hlt
pop
fcompl
cwtl
stos
stos
jne
rorb
or
insb
outsb
lock
psrlq
sbb
out
daa
push
outsl
jns
pop
in
fwait
aaa
clc
sarb
xorb
rep
xchg
jle
cmp
cltd
xchg
xor
scas
mov
cmp
add
fdivr
xchg
push
pop
inc
lret
roll
aaa
and
clc
out
stos
adc
idivl
arpl
fcmovne
movsb
outsb
xlat
push
xor
enter
lods
scas
xor
fidivrs
aam
popf
jge
das
mov
inc
mov
faddp
idiv
repz
and
mov
pop
fiaddl
inc
std
imul
es
fsubr
cld
xor
add
mov
xchg
or
or
imul
das
call
adc
cmpsb
pop
xlat
cmpsb
lods
inc
in
sbb
cli
and
imull
mov
cmp
inc
js
and
in
ret
sbb
iret
rcl
push
sub
fs
pusha
cmpl
push
xorl
into
xor
pop
sti
loopne
xchg
gs
xlat
out
insb
mov
and
adc
or
push
sub
ljmp
outsl
shrl
jae
xchg
imul
in
mov
rorl
in
pushf
cmpsb
scas
lret
incl
cld
xlat
inc
sbb
movsl
popa
sbb
push
adc
lret
aas
lods
xchg
or
push
mul
stc
mov
rorb
lds
xor
mov
faddl
xchg
push
shrb
aaa
inc
test
ds
into
xchg
in
fsts
push
mov
fwait
cmp
repnz
push
fstp
and
push
leave
sbbl
ja
dec
test
and
pushf
leave
xlat
jmp
addr16
fwait
dec
int3
out
sub
enter
push
inc
xlat
lcall
adc
popa
cltd
cmc
test
rolb
popa
or
pusha
add
sti
seta
mov
es
or
ret
mov
push
adc
mov
pop
jg
or
lahf
mov
fwait
dec
es
or
jbe
sbb
lods
push
xlat
xlat
dec
mov
add
xrelease
sbb
or
push
scas
sub
repnz
dec
bound
push
sti
dec
cltd
sub
mov
test
lret
inc
mov
lds
add
inc
xchg
pusha
jae
dec
dec
subb
pop
cmpsb
mov
iret
rol
mov
xor
ja
clc
ss
jg
mov
pop
repz
into
jmp
push
cmpsb
in
adc
lret
and
lods
cmpsb
jo
dec
mov
jl
dec
or
fisubrs
jle
xor
loop
dec
xor
aam
xchg
sbb
leave
push
ret
inc
imul
add
stc
imul
push
or
int
sub
or
cmp
xor
add
cmp
sbb
push
sub
iret
xchg
mov
and
push
les
mov
lds
nopl
ret
addl
pushf
xchg
jle
sub
outsl
xchg
push
cltd
mov
ds
imul
repnz
int3
into
lds
cmc
mov
adc
in
gs
imul
pop
out
xchg
jg
inc
jb
and
nop
mov
mov
repz
les
jmp
ret
je
xchg
ror
call
and
outsb
mov
and
inc
mov
xchg
pop
mov
or
in
cwtl
adc
mov
out
inc
mov
inc
jge
push
xchg
push
outsb
cld
mov
aam
dec
or
cltd
lds
icebp
xchg
lea
or
mov
xchg
push
jae
jmp
cs
ret
inc
arpl
mov
inc
mov
xor
popf
push
ror
jbe
arpl
mov
add
pop
jg
xor
cmc
sbbl
jne
leave
clc
ror
insb
out
xchg
jnp
ja
push
mov
dec
jle
mov
mov
inc
inc
das
dec
mov
lds
mov
and
adcl
cmp
mov
pop
dec
sahf
adc
lock
rcrb
scas
pop
cwtl
mov
bound
adc
lock
jnp
pop
outsb
mov
stc
mov
dec
inc
sbb
mov
mov
loopne
int3
add
pop
fs
fwait
adc
sahf
nop
cltd
jb
and
js
cmp
imul
fcmovu
mov
mov
rcrl
mov
push
xor
popa
sbb
or
push
push
and
mov
loop
je
movsl
pushf
sub
pop
pop
cmp
fbstp
pop
add
icebp
pusha
popa
movsb
sub
pop
pop
xchg
and
mov
adc
pop
jle
mov
lock
cmpl
shrl
fsubrs
mov
and
mov
subl
and
or
sarb
lcall
jae
iret
outsb
and
test
dec
mov
adc
add
push
mov
cwtl
xchg
add
je
inc
mov
push
or
xchg
add
clc
add
or
and
or
mov
mov
sti
push
mov
inc
inc
and
inc
mov
sub
add
mov
test
cltd
stos
xchg
lahf
std
add
nop
loope
mov
loope
mov
sti
adc
or
push
inc
push
inc
stos
lret
rolb
mov
sbb
aad
gs
cmpsb
ret
bnd
pop
stos
jl
lea
scas
lret
add
mov
cmpsl
mov
hlt
push
mov
test
sub
cmp
mov
clc
push
inc
cmpsb
mov
push
lock
mov
das
mov
push
mov
add
mov
lea
cmp
mov
fdivrs
aad
lret
inc
xor
xor
adc
inc
and
test
sbb
mov
shll
jns
stc
jo
jl,pt
xchg
out
jne
and
cmp
das
int
gs
and
pop
cmp
mov
imul
aaa
adc
xchg
jl
out
stos
or
xchg
push
imul
push
push
std
dec
out
add
jno
out
dec
xchg
imul
mov
jle
push
test
lahf
fldenv
xchg
mov
add
mov
sub
adc
cltd
std
mov
sbb
push
shl
fldcw
ds
pop
mov
hlt
jg
dec
sub
xchg
pop
add
es
push
or
jb
call
sahf
jecxz
fbld
mov
sbb
jbe
pop
addr16
xchg
clc
push
push
fcomi
pop
push
jne
sbb
jle
mov
sub
imul
hlt
dec
add
push
idivb
sbb
xor
pop
xor
pop
pop
cmpsb
in
pop
popf
leave
pushf
or
add
nop
dec
imul
mov
pushf
xor
js
dec
stos
pavgw
dec
in
aam
sbb
lock
cs
jecxz
mov
sub
cmp
sub
aad
push
jp
js
jno
or
in
test
loop
ret
fnsave
xchg
mov
xchg
xor
sbb
and
movsb
daa
adcb
test
xor
lret
push
push
pushf
test
cwtl
sub
inc
mov
icebp
test
adc
imul
sub
roll
mov
lds
add
or
mov
add
out
cmc
xchg
lcall
movl
insl
xor
or
jo
out
addr16
ds
push
xchg
sbb
les
pop
push
scas
arpl
sbb
sub
jb
cmpsl
ficoms
sbb
movsl
push
mull
popf
dec
stos
adc
pop
mul
add
mov
inc
xchg
fs
movl
mov
sti
mov
int
test
popa
scas
lcall
jecxz
jmp
sbb
pop
jae
xchg
std
jbe
lods
jnp
lret
notb
stos
mov
movsb
adc
mov
pop
or
jge
pop
cmp
cmp
and
cmp
lahf
std
adcl
lods
popl
cmp
lretw
ss
push
lods
xchg
faddl
imul
fidivrl
xor
or
enter
mov
add
sub
xchg
in
punpckldq
push
pop
inc
stos
daa
pop
outsl
jg
mov
xor
jl
shrb
rclb
add
cld
xchg
subl
sbb
and
inc
dec
fcomps
pop
shll
addr16
lods
xor
popa
pusha
or
dec
out
push
and
out
lea
loop
push
mov
shrb
mov
sub
inc
ss
in
push
lahf
adc
mov
inc
sarl
mov
jo
pushf
js
aam
sbb
dec
je
xor
lret
push
mov
sti
sbb
push
rcrb
idivb
call
insb
shr
sub
mov
push
scas
std
popf
xchg
cmp
bound
inc
push
jp
rorb
lock
aaa
push
pop
stos
pop
add
add
mov
mov
cld
test
inc
cwtl
dec
lcall
pop
lret
xchg
insl
gs
repnz
je
mov
inc
jo
out
adc
jns
adc
fwait
sub
pop
repnz
or
lea
mov
push
sub
pusha
bsr
and
jl
push
push
mov
fsubl
add
je
mov
icebp
outsl
cli
xorl
ficoms
aad
mov
push
loope
ret
add
rorl
mov
imul
and
inc
cmp
imul
mov
mov
ret
imul
pop
dec
cmpb
cmp
dec
add
ljmp
pop
stos
sub
in
mov
inc
dec
mov
sub
std
mov
mov
inc
push
mov
nop
xor
or
lock
push
fsubr
mov
inc
sub
adc
xchg
mov
push
cmp
mov
xor
in
fs
outsb
sti
mov
fisttps
nop
enter
lret
imul
or
jnp
jmp
mov
sbbl
ret
push
xchg
mov
lods
cmp
mov
mov
dec
das
sbb
mov
inc
adc
xor
add
or
sbb
std
jecxz
test
cmp
add
out
mov
sub
daa
inc
push
vmwrite
dec
sub
aam
mov
adc
sahf
mov
mov
cli
push
mov
jb
fiadds
int3
pop
sahf
ret
es
aaa
and
shll
and
shlb
in
out
mov
shlb
int3
mov
popf
lcall
sbb
push
jno
adc
xchg
mov
mov
inc
xor
jae
sub
xor
addl
jp
subl
loope
loopne
fisttps
push
xor
addr16
jge
repnz
outsl
jecxz
mov
dec
cmp
mov
add
bound
inc
outsb
sub
sbbb
stos
and
out
insb
stc
loop
adc
stc
data16
mov
jbe
pop
or
push
jbe
mov
or
js
inc
out
shll
mov
mov
movsl
js
or
cli
xchg
insb
xchg
outsb
mov
fs
sub
rcl
movsl
sub
sarl
roll
and
xchg
in
jae
push
pushl
jmp
mov
mov
add
mov
xor
lea
push
jns
std
insl
imul
in
insb
add
and
xchg
add
dec
enter
std
cmc
pop
xor
fisubl
adc
addl
out
iret
pop
aad
sub
pop
mov
push
ret
mov
xchg
xorl
jg
cwtl
repz
out
cmp
stos
pop
int
mov
test
nop
and
mov
sahf
adc
loopne
pop
movsl
adcl
push
in
jne
jno
adc
push
add
push
mov
jo
mov
mov
sbb
insl
pop
cmpsb
sub
cmp
shlb
adc
push
shrl
sub
call
pop
adc
dec
fiaddl
aas
loope
xchg
addr16
dec
pusha
popa
cmp
sbb
xchg
add
dec
adc
pusha
push
movsl
mov
lret
lea
inc
mov
pop
xor
mov
push
pop
lret
sub
pop
lcall
and
dec
ret
pusha
stos
rcll
scas
dec
jne
jmp
je
cmpsb
pop
and
ss
pop
js
jp
adc
ds
test
or
push
adc
lds
insb
ja
mov
pop
push
lea
inc
in
popa
push
lods
xor
lods
add
ficoms
mov
mov
pop
or
push
ret
xor
jmp
xor
sbb
dec
pop
shl
pop
mov
and
fbstp
cltd
scas
lcall
jle
das
xor
je
cltd
sahf
cld
jmp
push
mov
xorl
loope
mov
stc
jle
pmaxsw
int
jae
fidivrl
js
add
cmp
jns
add
add
lret
cs
imul
in
xor
sarl
inc
pusha
lcall
int
int
xor
hlt
insb
pusha
shr
and
sub
sub
imul
jno
push
out
mov
jno
lahf
out
cmp
orl
and
sbb
adc
lods
imul
divb
mov
call
adc
inc
ja
hlt
mull
xor
testl
xor
inc
and
ret
int3
jne
enter
dec
into
nop
or
or
jmp
lahf
xchg
addr16
lods
lods
insl
jo
xchg
xchg
stc
mov
sahf
dec
jae
lods
std
xchg
arpl
jle
sub
and
adc
fdivrs
add
pusha
mov
mov
lods
and
pop
jle
pop
mov
adc
pop
ja
pusha
jecxz
dec
sbb
ljmp
loop
push
xchg
lcall
xchg
inc
popf
dec
jae
jns
add
gs
pop
add
sbb
pop
in
das
cli
js
mov
dec
shll
push
lea
andb
xchg
jmp
lods
mov
inc
xchg
mov
xor
mov
jne
mov
rcll
inc
adc
xorb
adc
lods
cltd
and
sub
daa
sbb
push
jg
dec
cmpl
mov
nop
sub
jns
xchg
add
sub
sub
es
adc
jecxz
test
sti
xchg
mov
fs
iret
dec
push
pop
imul
cmp
addr16
popf
jmp
popf
in
int
xor
out
push
mov
sbb
lahf
into
fnstcw
cmp
cli
pop
xchg
push
mov
mov
mov
xchg
cwtl
in
pop
gs
adc
testl
fsubrs
lock
popa
mov
cmp
xchg
mov
mov
out
xor
push
sbb
mov
xchg
jle
xchg
sbbl
push
loope
push
in
pushf
mov
pop
pop
test
add
repz
push
cld
dec
lahf
in
movsb
push
ror
outsb
sbbl
out
pop
lret
jmp
push
jmp
mov
inc
imulb
call
in
sub
add
daa
aam
cltd
sub
mov
dec
std
cmp
jmp
or
movsl
sbb
out
and
movsl
aaa
bound
inc
jp
mov
and
test
sub
mov
push
mov
cmp
mov
je
xor
sbb
adc
xchg
jae
mov
out
or
adc
mov
pcmpeqb
pop
sbb
mov
push
jbe
out
lahf
mov
mov
mov
in
jge
aas
xlat
pop
aaa
jl
inc
cltd
rol
inc
xor
dec
mov
cmpsb
cmp
adc
je
jmp
in
dec
scas
or
push
mov
xchg
add
gs
rcr
add
cli
popf
mov
aas
sbb
push
xchg
or
in
or
mov
adc
lods
and
aad
cmpsl
daa
std
out
mov
ret
pop
testl
iret
fwait
mov
adc
jmp
mov
lcall
sub
iret
dec
push
xchg
idivl
loop
std
sbb
mov
xor
pop
pop
jno
mov
ss
or
jp
mov
shl
pop
imul
push
cmc
les
xchg
scas
ss
mov
test
jg
rcrl
add
jno
iret
mov
cmp
lret
and
inc
jnp
jle
add
enter
dec
sti
lret
push
lods
js
call
xor
and
sbb
fists
pop
lahf
xchg
and
sbb
mov
adc
pop
testb
jg
inc
mov
les
ficomps
leave
out
pop
cs
dec
inc
rcll
and
in
fistps
mov
popf
push
pusha
jecxz
les
and
or
push
cs
ret
sub
adc
cltd
sub
cmp
xor
das
aaa
imul
andb
movsb
out
test
xchg
adc
push
cmp
or
cmc
aaa
loope
push
sub
jmp
push
push
lods
push
xchg
add
adc
pop
pop
outsl
enter
dec
dec
stc
pop
mov
loopne
mov
lcall
out
fistps
dec
mov
loope
inc
js
mov
push
and
pop
push
dec
mov
outsl
sbb
add
xchg
cmp
out
jmp
lahf
cmp
mov
sbb
cmp
loopne
out
hlt
in
stos
mov
jle
loop
jp
jae
dec
xchg
lcall
outsb
cmpsb
movups
pop
idiv
sub
pushf
xchg
lret
xorb
cmpsb
ret
sbb
cmpsb
dec
sbbb
sahf
inc
fdiv
sbb
ret
push
add
shl
rcl
lea
jb
fistps
mov
stc
or
xchg
mov
lock
dec
mov
jnp,pt
inc
outsb
push
addl
cld
js
stos
sti
clc
sahf
pop
enter
test
xchg
mov
mov
lods
xchg
xor
frstor
ror
movsl
icebp
adc
repz
mov
into
out
lret
loopne
lds
frstor
adcl
add
cmp
orl
or
fdivrl
xor
dec
push
pop
inc
or
in
pusha
cs
cmp
push
xor
icebp
out
or
xchg
cld
out
xchg
dec
rorl
insb
scas
push
repnz
ds
stc
lock
push
cmp
fisttpll
scas
pop
pop
xorb
sub
fs
or
adc
cmpsl
adcb
push
sahf
test
bnd
jb
jle
mov
jg
fsubs
ret
inc
ret
daa
in
mov
leave
mov
jne
fidivs
rcl
jae
push
pushf
sbb
aam
pop
rol
pop
cmp
daa
pop
cmp
addl
daa
out
stc
pop
ret
pop
xor
cmpsl
cmp
push
sbb
aam
cmpsl
std
xor
es
mov
pop
fdivl
sub
jmp
push
sti
popf
out
ret
xchg
cmp
in
imul
add
jbe
lcall
mov
jmp
push
fnstsw
pop
jecxz
fisubrl
test
dec
outsb
lcall
cld
cwtl
int3
jo
push
lods
push
flds
push
and
cld
xchg
and
push
mov
inc
xchg
in
jae
and
sub
repz
pop
pop
pop
adc
fbstp
adc
bound
aam
loope
in
pop
mov
lods
stc
xor
dec
loopne
in
repnz
in
sbb
shl
sahf
test
lds
fs
cmovle
test
dec
int3
push
sbb
pop
mov
dec
mov
stc
mov
sub
mov
cmp
adc
fidivrs
dec
cmp
out
xor
xchg
sbb
mov
js
popa
push
sub
mov
and
mov
cmp
jo
and
or
and
xor
loop
pop
nop
jae
xor
inc
stos
popa
lock
neg
das
xor
mov
cltd
test
pop
repz
jge
inc
mov
mov
popa
mov
pop
sbb
or
or
je
add
lods
clc
clc
inc
mov
push
jecxz
mov
insl
pop
out
lock
std
push
push
cmp
js
cli
add
cmp
mov
lds
jnp
jb
cmpsl
fnstenv
and
insb
aas
or
sub
test
popa
jp
push
jae
or
dec
in
pop
jl
pushf
ljmp
cli
popa
fistl
js
dec
or
dec
sub
inc
rcrb
outsl
es
inc
scas
or
lea
mov
cmpsl
fwait
inc
test
inc
push
inc
fstpt
cs
es
fsubrs
cmpsl
add
mov
xchg
icebp
mov
add
dec
sub
mov
xor
xor
cmpl
mov
movsl
repz
addb
ret
clc
jp
push
push
rcll
in
push
inc
mov
sbb
pop
testl
jo
and
inc
sbb
sub
sahf
in
push
jle
mov
pop
and
mov
subb
xchg
cli
cmp
push
lds
pop
fwait
mov
mov
and
fiadds
mov
incb
inc
stc
cwtl
xchg
jne
lock
js
sub
data16
sbb
cmp
out
xor
mov
or
inc
pop
mov
or
out
push
movsb
and
cmp
push
loope
cld
mov
or
xchg
push
inc
push
pop
xor
jb
adc
xor
lahf
repz
out
test
inc
lea
pusha
gs
arpl
je
pop
inc
insl
push
cmc
ds
popl
stos
push
adc
mov
stos
iret
jns
imul
sub
ljmp
pop
add
dec
sbb
cld
add
xchg
or
jno
jmp
dec
jmp
pop
in
sbbl
push
pop
jecxz
xchg
ja
add
iret
jmp
shr
aaa
sbb
shll
fsubrs
das
cmpsb
dec
xchg
decl
stc
push
jmp
jae
push
xchg
loope
add
imul
dec
fwait
or
ret
sub
xor
loopne
lock
and
mov
cltd
push
aas
movsl
xchg
in
outsb
fisubs
movsb
push
bound
adc
fisubrl
inc
jp
stos
sub
jnp
bound
xor
xchg
jge
out
mov
punpcklbw
jle
lcall
lea
das
mov
add
jns
imul
mov
fisubl
mov
dec
imul
mov
popf
nop
pusha
fdivrs
fwait
aam
je
push
iret
mov
dec
adc
jp
in
shlb
mov
je
pop
jg
lret
gs
leave
pop
sbb
jbe
xchg
sub
push
pushf
sub
sub
lret
aaa
scas
fwait
adc
insb
and
or
cmc
inc
add
jp
adc
mov
cwtl
inc
das
mov
jge
pushf
jno
test
out
pop
mov
in
cmp
sbb
ret
stc
pop
es
mov
mov
mov
aaa
test
pop
and
pop
xchg
dec
int3
jmp
jg
mov
bound
adc
xor
into
lea
jns
popf
imul
mov
jecxz
mov
fisttpll
xchg
dec
adc
mov
mov
in
test
loop
xchg
sarb
pop
neg
cld
js
int3
jne
mov
fisubrs
and
dec
jb
aam
fisubrl
push
xchg
mov
ret
sub
jg
cmp
mov
mov
mov
and
mov
out
push
in
mov
or
push
mov
add
fs
and
mov
sub
mov
push
mov
bound
inc
or
jne
push
das
mov
mov
adc
loop
fstpl
ds
movsb
pop
jg
fsubrp
xchg
cmc
cmp
cld
lock
jmp
in
out
add
insl
test
loopne
mov
cmp
inc
sub
adc
shlb
mov
mov
xorb
lea
fistps
outsl
pushf
push
xchg
xchg
push
and
icebp
mov
insl
lret
xor
mov
inc
fnsave
push
loopne
iret
out
bound
negb
popf
sti
cmpsb
pop
fdivl
xchg
fldl
sarl
push
mov
adc
mov
vdivss
inc
adc
sub
sbb
mov
es
stc
pushf
add
inc
push
ret
fildll
mov
or
test
cmp
addb
in
add
push
cmp
std
adc
add
xchg
ss
adc
call
jne
adc
in
in
or
mov
inc
loop
dec
adc
push
stc
fimuls
daa
jbe
xchg
jae
xor
jnp
xchg
mov
aas
adc
lods
cmpsl
inc
inc
sti
jnp
sub
subl
movsb
icebp
ja
enter
stc
addr16
sarl
in
int
adc
inc
stos
and
outsl
imull
mov
xchg
into
in
adc
leave
cltd
xchg
bound
push
cmp
mov
nop
dec
fcomp
ficompl
mov
push
into
ja
pop
mov
decb
or
xchg
inc
cmp
pop
xchg
test
cmp
dec
fs
dec
ss
popf
jo
imul
lret
push
push
fmul
repnz
mov
das
scas
lds
adc
jo
sahf
push
xchg
test
aam
mov
inc
push
xchg
dec
ss
mov
call
cmpsb
mov
fwait
loope
xchg
push
lcall
adc
mov
nop
test
cmpl
ficoml
int
test
dec
pop
sub
stos
jo
cld
mov
cmp
ret
xchg
repz
xchg
add
xchg
insb
adc
mov
push
dec
cmc
cmpsb
xlat
mov
or
mov
xchg
inc
push
inc
mov
pop
xor
mov
fdivr
fadd
aaa
and
sbb
unpckhps
int
aam
jp
sbb
in
jecxz
in
popa
icebp
mov
xchg
loopne
out
dec
ja
mov
int
into
sbb
insl
inc
inc
xchg
sbb
lcall
push
sbb
cwtl
or
sub
stc
dec
ds
cmpsb
mov
add
mov
gs
lret
or
push
mov
jne
push
stos
cmp
ret
jp
jno
jno
idivb
arpl
stos
sub
mov
bound
jbe
fildll
lock
add
mov
fwait
add
inc
jge
and
or
cmp
outsl
pop
mov
mov
mov
es
or
xchg
sub
gs
or
pop
mov
lret
outsl
dec
inc
lcall
mov
mov
xchg
addr16
xor
aaa
out
xchg
pop
inc
sub
inc
mov
lods
xchg
out
pop
push
cmp
addr16
and
pop
jmp
popa
and
sti
inc
iret
in
vmulpd
mov
sbb
daa
jne
cmpsl
lcall
lcall
cld
mov
ljmp
xchg
push
in
loop
adc
xor
int3
mov
addr16
rolb
cmp
in
dec
rcrl
dec
call
mov
movsb
repnz
sbb
xchg
add
mov
xorl
lock
jl
js
cwtl
faddl
pusha
cmp
jecxz
add
bound
sti
xor
add
mov
icebp
fdivs
ljmp
xchg
mov
or
push
ja
cmc
cmpsl
mov
aam
xor
or
dec
push
loop
pop
fs
aad
int3
aas
fsts
dec
out
fildl
hlt
sti
sbb
mov
aaa
jo
test
popa
nop
outsb
orl
imul
repnz
xchg
jne
push
clc
fs
cs
dec
jl
fidivs
mov
push
out
imul
ret
mov
xor
sub
and
fnstenv
xchg
test
loope
lahf
jo
cltd
int
cmpsb
in
es
cmc
mov
sub
add
mov
loope
sub
in
jbe
js
jp
add
mov
xor
flds
push
mov
loope
mov
int3
pop
cmp
data16
int3
icebp
dec
cmc
push
mov
dec
sub
fstl
push
test
xor
pop
inc
lock
add
jle
nop
pop
ret
mov
mov
xchg
gs
std
leave
scas
cmc
cli
jmp
xor
cmc
cmpsb
pop
add
push
cmp
add
int3
mov
sbb
add
arpl
scas
out
sbb
test
fsts
loope
jmp
and
sub
inc
add
out
mov
cmpsb
adc
stc
rol
jmp
int3
or
push
es
pop
stos
test
sbb
out
inc
pop
add
and
fisubrs
cltd
adc
ret
xor
mov
stos
in
sub
les
test
cmp
push
shll
aas
mov
inc
lahf
xchg
mov
lods
lret
mov
iret
cli
mov
out
jecxz
jae
out
inc
mov
xchg
lcall
test
shrb
lret
cmp
pop
sbb
rorl
push
pop
shl
je
pushl
cmpl
fsub
aam
orl
mov
adc
mov
xchg
lahf
mov
jp
cmpl
outsl
cmp
testb
popf
les
pop
sub
inc
inc
std
bound
test
pushf
xchg
and
dec
insb
add
dec
lahf
inc
push
lea
fsubrs
mov
std
call
jecxz
cltd
inc
andl
aaa
mov
negl
icebp
inc
or
xchg
cs
in
adc
inc
jmp
enter
cmp
jp
mov
xchg
mul
lcall
xor
divb
sti
cmp
add
push
jb
je
inc
dec
sub
jmp
xor
add
nop
out
pop
xlat
dec
loope
js
xchg
rcl
pop
sbb
push
inc
or
movsb
mov
fisubs
and
outsl
xor
aas
ljmp
mov
and
inc
sahf
cmp
mov
sbb
mov
movsb
in
cs
lock
loope
movsb
orb
fstpt
aas
leave
loope
in
notl
sahf
leave
iret
pop
outsl
cmp
sub
sbb
pop
loop
mov
mov
mov
jno
or
xchg
icebp
xchg
mov
mov
cmp
repz
jge
sbb
and
mov
sub
popf
out
adc
add
jl
or
xchg
sbb
dec
sub
sub
sub
mov
sub
mov
std
jno
sbb
push
jl
ret
xor
sbb
in
mov
adc
mov
icebp
sarb
mov
shl
dec
inc
test
and
je
and
sbb
popa
inc
or
add
fs
in
jmp
andb
mov
mov
xchg
hlt
push
xor
or
and
addb
clc
lods
setne
shrl
or
rcrb
sbb
xchg
mov
xor
inc
negl
cmpsl
bnd
dec
aad
insb
stos
shll
inc
mov
xchg
add
jge
mov
jg
dec
addr16
push
or
or
popa
lea
sti
cmpsb
cmp
fsubrp
orl
mov
pushf
and
push
popf
xor
inc
mov
sbb
xchg
jle
sub
pusha
movl
pop
shll
or
loop
or
sbb
push
xchg
adc
loop
cmp
in
inc
fwait
add
cmp
clc
push
into
push
adc
cld
orl
orb
and
jmp
and
dec
push
mov
arpl
push
sbb
push
add
pop
xchg
pop
cmp
add
shlb
xor
or
mov
inc
cmp
cmp
test
call
out
test
or
dec
aas
addl
in
dec
add
pop
jmp
test
sti
sub
pop
movaps
sub
mov
outsb
mov
mov
hlt
or
aas
push
roll
adc
cmp
mov
mov
inc
inc
lret
push
addr16
mov
sahf
pop
lods
stos
loope
popa
je
sahf
inc
loope
jbe
push
fistps
iret
dec
sbb
add
test
mov
sub
and
sub
add
adc
xor
sub
or
pop
cs
mov
decb
cltd
and
std
test
pop
test
mov
leave
mov
pop
in
in
adc
sbb
pop
sahf
mov
cltd
inc
jmp
add
bound
aas
xchg
sbb
dec
sub
movsl
push
loopne
or
xor
out
pop
sahf
loope
mov
and
pushf
pop
imul
andl
jae
dec
mov
jae
mov
fwait
ret
in
cmc
pushf
mov
jo
pop
jg
mov
lods
mov
das
test
pop
lea
dec
jle
sub
popa
div
jno
popf
mov
sbb
mov
mov
xchg
push
mov
mov
in
jnp
or
inc
inc
dec
inc
fsub
repz
inc
shr
subb
xor
pop
outsl
jne
cmp
repz
lret
sbb
mov
in
shlb
gs
leave
outsb
out
mov
mov
cmp
mov
sahf
shrl
mov
test
out
mov
lea
bound
movsb
dec
xchg
pop
jbe
mov
lea
sahf
cmp
mov
fldt
xchg
xor
fptan
mulb
insl
gs
aas
repnz
ret
jecxz
out
mov
out
cmp
iret
push
sahf
push
int
aad
jo
fistl
shll
mov
cltd
vmovlpd
cmpb
jns
cmpsl
cltd
jns
mov
xchg
push
jno
mov
mov
mov
sub
orb
jge
push
fadds
sbb
mov
jns
xchg
jbe
jg
cmpsl
pop
jle
dec
inc
faddp
mov
adc
sub
test
icebp
add
pop
adc
iret
sbb
push
mov
adc
xchg
inc
into
push
pushf
push
ja
sub
ds
push
adc
sbb
or
fwait
int
jg
fildll
movsl
push
popf
inc
jg
dec
dec
sub
scas
int3
daa
sub
add
mov
aas
cli
inc
jnp
or
jecxz
mov
push
and
sub
mov
pop
or
xor
and
push
sbb
lds
or
xor
rcrl
mov
out
xor
sbb
sbb
lret
xchg
adc
loope
mov
mov
mov
push
or
inc
ficompl
xchg
jmp
loop
inc
push
push
in
jmp
mov
xor
rclb
push
cltd
int
das
rcrb
add
mov
inc
inc
insl
addr16
xchg
pop
ret
jl
aaa
adc
les
lret
repnz
mov
scas
dec
mov
jmp
add
in
lods
xor
jg
cmp
push
xor
add
repz
lods
fwait
dec
push
and
pop
mov
jnp
out
mov
into
pop
cmpsb
inc
push
inc
inc
test
push
push
jbe
mov
adc
sub
xor
aam
shl
adc
xchg
and
xor
lods
push
stos
or
jnp
push
sub
inc
jnp
xor
cmp
xor
inc
push
mov
lds
fdivl
sarb
aad
xlat
pop
mov
sbb
test
in
jno
sbb
sarl
sub
push
cmp
push
testl
clc
dec
repz
sti
rcrb
xchg
pop
sar
mov
pop
rorb
imul
mov
ret
mov
ss
and
add
dec
fs
mov
fucomip
arpl
out
push
subb
dec
nop
dec
cmp
testb
movhps
xchg
mov
fistps
cmp
lock
aam
adc
std
jge
push
inc
and
mov
insl
and
dec
lods
pop
sub
add
add
push
cmc
clc
dec
out
nop
push
movsl
cmp
and
push
inc
lret
sbb
ljmp
mov
sub
ds
loop
mov
push
bound
daa
push
mov
push
jmp
leave
lret
outsl
push
gs
popf
jo
jl
mov
pop
loopne
lret
arpl
inc
out
add
cmp
adc
inc
fisubs
std
mov
pop
jb
or
push
sahf
daa
inc
scas
mov
jl
cmpsl
inc
popf
stos
aas
jbe
pop
inc
cmp
and
xchg
cmpsb
data16
xchg
jl
jl
aas
je
and
mov
mov
int3
out
addr16
or
je
xchg
jmp
test
push
imul
mov
mov
adc
add
rcl
pop
outsl
rcrb
xor
dec
out
cmp
out
inc
mov
ja
imull
fistps
pop
inc
mov
push
or
outsl
daa
mov
xor
lcall
aam
pop
xchg
fdivl
lods
and
pop
fucomi
mov
lds
mov
jmp
sahf
mov
xor
jb
push
lods
and
aas
out
jl
sahf
addb
jp
pop
mov
ja
mov
je
cwtl
push
test
mov
bound
xchg
xor
out
inc
jge
pop
test
dec
enter
cmc
sub
sub
and
popa
mov
jl
lds
jnp
cmp
mov
sarl
ror
scas
dec
dec
sahf
pop
jmp
sbb
push
cmpsb
into
dec
sub
inc
mov
cltd
nop
push
jmp
pop
subl
sar
mov
daa
jmp
dec
loop
adc
stc
jp
cs
sbb
mov
or
in
or
leave
in
inc
pop
sbb
hlt
test
mov
out
jns
test
stos
cmp
sbb
out
fmul
lcall
jae
stos
mov
idivl
sti
sti
push
les
fsub
xchg
pop
inc
mov
push
inc
sub
sar
lahf
insb
lds
das
and
sbb
insb
sub
mov
dec
shll
std
and
jecxz
jo
ljmp
nop
mov
pop
lock
clc
cwtl
imul
fwait
push
inc
push
test
fidivs
dec
cwtl
push
les
adc
in
test
jmp
fwait
pusha
ds
adc
mov
or
xor
inc
sbb
xor
lds
call
xor
push
add
out
cmp
call
push
ficompl
inc
mov
scas
dec
or
cmp
sti
mov
inc
lds
inc
test
cmp
out
add
push
add
sbb
pop
popf
and
pop
bnd
pop
push
add
add
rcl
outsl
stos
test
pop
sahf
mov
iret
push
xor
sbb
or
rclb
hlt
insl
adc
adc
xor
mov
push
leave
sbb
inc
test
jb
xchg
in
movsb
or
jmp
in
loope
lret
cs
sbb
mov
sbb
push
mov
adc
mov
ss
jo
neg
je
andb
jb
popa
and
add
push
pop
aam
lret
bound
pop
xlat
adc
jnp
add
mov
push
insb
lret
outsb
inc
lods
adc
xor
lahf
mov
xor
out
lods
mov
and
shl
mov
bound
mov
divl
fsubp
inc
imul
sbb
mov
push
pop
sbbb
mov
int3
in
pop
addl
rcrb
in
xchg
push
xor
iret
enter
pop
mov
push
sarl
mov
aas
jle
je
mov
cmp
movsl
stos
push
ja
pushf
dec
lods
xor
in
addr16
daa
jecxz
bound
fsubp
push
jns
lahf
push
jg
or
inc
add
sbb
iret
xchg
xor
out
and
enter
mov
data16
and
jns
push
sbb
inc
imull
test
mov
out
aad
arpl
fmull
or
nop
imul
or
stc
sti
call
mov
add
lahf
mov
les
xchg
cmp
and
lea
fmuls
push
out
cmp
push
or
adc
pop
cmp
fidivs
cltd
sbb
aad
ret
call
ficomps
cmc
lcall
push
bound
hlt
cmc
in
int3
jno
sarl
cwtl
leave
xchg
loop
sbb
popf
shll
imul
movsb
add
out
mov
dec
adc
mov
mov
inc
lock
and
xorb
ret
stc
cmpsb
hlt
add
xor
xchg
cld
pusha
mov
lods
addr16
dec
sbb
es
test
in
ret
xchg
jle
lcall
lods
adc
clc
sbb
fists
pop
lods
dec
pop
rcl
je
dec
push
mov
dec
push
lcall
les
fisttpl
in
cmpl
icebp
xchg
mov
insb
in
push
and
fists
ljmp
stc
fs
rorl
jge
adcl
jo
es
mov
and
daa
sahf
fstps
pop
and
and
cs
or
add
or
dec
inc
test
out
cmp
pop
std
cwtl
sub
xor
shr
movsl
imul
out
mov
mov
dec
mov
push
mov
or
in
test
adc
insl
or
adcl
sahf
mov
xor
and
sbb
cmpsl
fidivrl
fstpt
mov
xor
xor
js
repnz
push
clc
jb
sbb
adc
fisttps
shlb
jbe
popa
data16
cmp
mov
cmp
fs
repz
mov
cmp
sahf
cmp
sbb
mov
aam
add
loopne
in
mov
pop
or
xlat
cmp
nop
enter
dec
iret
iret
xchg
divl
push
test
insl
mov
mov
call
adcb
sub
loopne
sub
jae
sbbl
dec
push
add
push
ds
in
adc
icebp
xchg
mov
xchg
cli
test
scas
push
sbb
sub
jns
aam
mov
adc
cltd
xor
test
lods
or
test
push
fsubrs
fildl
push
sub
lcall
mov
adc
mov
xor
mov
dec
push
and
jge
add
adc
fstpl
mov
cs
or
sahf
imul
jnp
add
in
stos
mov
lock
dec
add
std
imul
test
lcall
aaa
pushw
scas
xchg
sub
pop
cmp
mov
stos
notb
jno
cwtl
test
add
sahf
loope
adc
jnp
add
mov
sbb
cwtl
icebp
out
xchg
add
adc
cwtl
push
mov
inc
test
xchg
aas
xchg
ljmp
das
pop
push
adc
or
xor
jmp
adc
std
enter
lock
xor
pusha
aas
inc
pop
movsl
dec
dec
inc
test
ss
xchg
test
inc
rorb
movsl
adc
les
test
push
int
sti
rclb
cmpsb
jnp
cmp
jno
pop
or
sub
mov
dec
cmp
imul
jns
cli
dec
jnp
sub
fisubrl
pop
sub
cs
out
xchg
jnp
mov
mov
cltd
cs
pop
das
repnz
mov
sub
stos
pop
mov
idiv
andb
sbb
xchg
xchg
rclb
outsl
negl
das
cmc
loop
dec
dec
mov
mov
sahf
scas
testb
push
inc
push
jne
push
loope
shl
fisttps
inc
out
push
insl
pop
cmpsl
popa
incb
mov
mov
dec
cli
dec
mov
jle
addl
out
mov
sub
mov
jo
jae
test
aam
cmpsb
cltd
pop
iret
xor
shrl
dec
add
sti
inc
cmpsl
lds
shl
xor
inc
sub
in
in
sarb
sub
movsl
xor
stos
sahf
lods
adc
popa
sub
fnstcw
in
push
push
jl
iret
mov
aaa
pop
jp
popf
push
mov
test
int
sarb
xor
out
xor
sahf
jbe
xchg
fisttpll
stc
lcall
cwtl
dec
popa
sbb
in
jl
dec
pop
sbb
xor
xor
xchg
sub
int3
iret
fdivr
mov
jo
inc
xor
cmp
push
pop
aaa
rorl
and
scas
notb
test
pop
out
jg
faddl
or
xor
fstps
shlb
dec
icebp
pop
adc
fwait
andb
test
or
shrb
pop
pushf
mov
push
jmp
pusha
jno
and
lret
push
sub
mov
push
lock
sub
xchg
jmp
push
pop
cld
sarb
push
leave
shl
loope
mov
scas
push
ja
mov
xor
stos
ljmp
addr16
mov
gs
adc
adc
cmp
icebp
xchg
push
dec
test
xchg
bound
nop
out
aas
inc
sbb
lea
enter
sahf
push
movsl
push
pushf
mov
sbb
sbbb
sub
jmp
xchg
dec
pop
cld
imul
rcrl
shrl
sub
cmpsl
xor
inc
or
adc
lahf
pop
cmpsl
dec
lret
pcmpeqd
sbb
loope
popf
push
xlat
add
push
inc
jecxz
and
mov
sub
in
lret
pop
jl
push
fcoml
ss
jno
mov
xor
push
repnz
cmp
and
mov
push
fldenv
sbb
or
push
adcb
xchg
cwtl
outsb
inc
cmpb
fnstsw
jb
pushf
test
mov
aam
inc
sub
mov
cltd
sbb
adc
mov
xchg
icebp
mov
mov
loope
je
lock
xchg
js
shll
mov
stos
ljmp
sub
std
arpl
insl
inc
add
mov
mov
jne
test
addr16
push
outsb
jmp
lret
cmp
mov
sbb
dec
adcb
mov
and
fiaddl
arpl
jg
xchg
repnz
bound
mov
and
sbb
jae
and
stos
xor
jns
cmp
sub
jnp
shrl
mov
loop
lea
roll
cmp
test
daa
inc
andb
addr16
push
jmp
inc
cld
jb
jno
inc
dec
inc
jecxz
mov
mov
in
icebp
or
or
mov
in
in
mov
ja
xor
in
sbb
scas
cmp
xor
adc
mov
sbb
bound
push
xchg
stc
icebp
and
loop
and
and
inc
mov
mov
ja
rclb
cmp
out
lds
pop
sub
negb
jno
js
jle
dec
cmp
adc
add
mov
push
imul
sbb
movsl
and
mov
jge
xchg
lahf
imul
test
push
xchg
mov
pop
mov
sbb
cmp
test
out
stos
lods
out
pop
inc
xor
push
iret
popf
pop
loop
lcall
push
insl
jns
mov
mov
fcoms
and
add
mov
add
aam
ror
cli
jmp
int3
inc
fcoml
push
xor
je
xlat
xor
jecxz
or
rcrb
mov
imul
imul
clc
xchg
clc
in
cld
xchg
mov
lret
or
mov
ret
movsl
push
shrl
out
inc
daa
add
fisttpl
ss
addl
xchg
pop
sub
jle
mov
fiaddl
add
iret
push
loop
clc
jmp
push
std
in
jp
test
and
xchg
add
inc
push
ss
fwait
imul
or
push
dec
sbb
mov
fmuls
inc
inc
pop
sub
stos
fisttps
fdivrl
ret
sbb
xchg
orl
test
fcom
and
stos
xchg
in
lods
and
mov
test
pop
addl
pop
loopne
imul
int
insb
test
add
es
jg
test
cmp
or
pusha
movsb
popf
jns
stc
rcrl
pop
leave
adc
out
test
xchg
int3
or
xor
mov
jo
test
inc
pop
mov
pushf
cli
sub
sub
sub
ret
lret
lcall
jl
inc
lods
aaa
push
stos
add
or
jmp
mov
push
mov
dec
ljmp
aaa
jecxz
in
repz
stos
ret
xor
inc
out
test
or
or
pushl
pop
dec
or
loop
mov
fcoml
inc
xchg
or
sbbb
pop
dec
adc
icebp
int
cmp
or
lods
sahf
pusha
pop
adc
cmc
xor
fwait
pop
jne
dec
pop
jmp
mov
jg
in
cmp
fmulp
push
into
and
or
mov
adc
mov
lods
fldenv
jg
mov
jbe
jno
pop
xchg
mov
or
fs
jl
inc
loopne
pop
pushf
xor
jb
jno
push
dec
xlat
or
xor
push
push
jnp
fldenv
dec
inc
sbb
xchg
push
fsubl
push
and
jae
mov
rcr
scas
push
push
int3
sub
sbb
sub
xchg
add
shl
dec
pop
sub
ret
jl
mov
or
loope
leave
cltd
xchg
imul
mov
sbb
out
pop
mov
cltd
jg
cmc
sahf
out
roll
jecxz
jle
cmp
adc
sarl
addr16
mov
mov
mov
or
test
pop
or
leave
pop
xor
and
pop
cmovg
mov
hlt
and
testl
mov
mov
ljmp
arpl
mov
dec
dec
movsl
inc
xchg
addr16
dec
lock
cmpsl
xchg
daa
mov
bound
adc
xor
out
push
loope
insl
loopne
test
hlt
inc
xor
cltd
fbld
jno
pop
sbb
pop
movsb
jecxz
xchg
xor
iret
or
push
inc
mov
inc
sub
or
push
push
or
and
jb
popa
pop
jmp
push
push
ret
pusha
xchg
mov
ret
fcmovnu
je
sub
aaa
push
imul
int
cld
pop
mov
hlt
cmpsl
dec
xchg
mov
repz
mov
das
mov
jmp
mov
ret
mov
mov
and
imul
adc
ds
jmp
sahf
dec
mov
cmpl
icebp
cmp
mov
pop
cmpsb
dec
jno
mov
scas
nop
inc
popa
imul
int
inc
mov
push
mov
pop
mov
subb
inc
movsl
pop
push
sub
cs
ds
in
adc
xlat
mov
mov
mov
divb
jp
jecxz
sbb
sbb
sub
test
mov
inc
push
and
lcall
push
dec
jnp
sbb
pop
rorb
outsl
fwait
xor
int3
mov
mov
mov
das
and
test
lahf
jo
or
addr16
aad
call
iret
and
push
xchg
cli
adc
jp
fisubrs
fwait
xchg
in
cmpsb
sahf
pop
xorl
push
popl
cmpb
cmp
cmp
mov
adc
out
mov
push
mov
sub
sub
bound
iret
cwtl
xor
xor
inc
mov
dec
sti
cli
jge
sarl
xchg
cltd
push
pushaw
aad
pop
nop
inc
pop
sahf
sub
outsb
add
pop
rorb
pop
fdiv
in
and
and
dec
addb
or
loop
mov
add
sti
sbbl
imul
rcll
cmpsb
in
mov
mov
xchg
lods
push
popf
fstpl
push
jge
fs
push
cmpsb
scas
scas
cmp
fadds
inc
jbe
in
pop
pop
lock
push
xchg
iret
and
mov
fldt
sbb
sti
push
xchg
in
push
lods
nop
cltd
lds
cmp
push
dec
dec
sub
clc
ljmp
mov
scas
add
and
les
xor
push
les
lock
mov
js
ja
fstl
hlt
addl
lock
add
push
push
push
and
mov
or
test
pusha
add
mov
cmpsl
and
sbb
mov
enter
sub
notb
test
adc
add
ret
cmc
mov
daa
add
cmp
loopne
dec
imulb
jne
jecxz
push
aas
cmp
jnp
ret
adc
add
lods
pop
push
add
mov
dec
insl
push
dec
mov
stc
xchg
pop
pop
fs
xchg
inc
lods
push
rclb
push
adc
insl
mov
jle
mulb
je
cmp
cmp
lds
lods
popf
pop
xchg
mov
test
in
test
ret
ljmp
and
sbb
testl
xchg
sub
adc
imul
repnz
jp
jecxz
cmp
ja
mov
pusha
test
leave
call
sbb
shl
daa
sahf
aam
xor
or
ss
xchg
mov
aad
mov
jmp
cmpsl
xchg
cmpsl
adc
pusha
cmp
sub
jb
mov
adc
lds
sbb
mov
lret
inc
or
mov
dec
loope
pop
mov
fcomps
push
xchg
xchg
test
lahf
movsb
and
push
adc
jno
cmp
push
xor
adc
and
sub
mov
bound
sbb
and
ja
push
or
clc
ja
insl
ficoms
or
ja
cmc
arpl
es
rclb
or
adc
sub
pop
pextrw
decl
mov
mov
and
dec
sbbl
insb
push
push
testb
mov
mov
daa
jb
xchg
push
adc
addb
and
push
mov
cwtl
fwait
in
xor
aas
popf
lods
and
inc
inc
arpl
repnz
push
loop
push
jno
and
xchg
into
push
addb
ss
add
clc
add
fs
stc
idivb
ret
shrb
mov
push
das
cltd
add
andb
and
popa
out
scas
inc
mov
and
leave
sub
dec
mov
in
dec
pushf
jnp
push
ljmp
mov
push
clc
in
or
push
loop
jp
push
data16
mov
pop
rcrb
data16
test
mov
cmp
lock
aam
dec
cs
sbb
cltd
in
test
inc
jmp
aam
pop
sbb
mov
pop
fidivrs
xchg
mov
fistl
aad
add
stos
mov
loopne
pop
cmpsb
jl
lods
push
adc
fcmovnbe
xchg
add
out
fisttpl
mov
fnstenv
ret
imul
int
sbb
mov
sbb
aaa
adc
or
add
and
mov
sub
jbe
sbb
adcl
insb
iret
cli
cltd
mov
cmpsl
lea
les
dec
mov
xor
xor
lds
hlt
pop
js
repnz
addb
adc
ds
and
mov
or
jmp
mov
nop
mov
mov
cmp
jb
mov
popf
or
cmp
repz
fcmovnu
out
pop
jp
jp
sub
stc
mov
sub
fldt
and
fadd
mov
outsb
int3
fisubl
mov
inc
sbb
jne
cs
lock
fs
and
sti
outsb
scas
dec
xor
imull
push
cltd
dec
push
or
ss
adc
xchg
jecxz
adc
adcl
lods
pop
mov
test
mov
xchg
out
mov
pushf
and
pop
xchg
test
cmp
cmp
xor
mov
or
sub
push
xchg
push
cs
fstp
pop
hlt
xlat
inc
fucomi
bound
lods
repnz
fdivrp
xchg
pop
into
push
push
jmp
mov
aad
std
dec
fstl
scas
inc
jno
mov
jmp
ret
pop
mov
jg
push
mov
inc
pop
call
xor
xor
xchg
outsl
and
pop
push
xor
adc
ficoml
enter
stos
cs
cmp
addl
cmpb
pop
mov
fwait
mov
mov
jb
test
fnsave
loop,pn
shll
or
cmp
daa
mov
mov
dec
fcmovbe
out
push
mov
hlt
je
jb
push
xchg
in
out
pop
push
notb
imul
imul
jnp
pop
fsubl
pushf
mov
mov
adc
jno
xchg
xchg
stc
add
test
inc
mov
aas
insl
lock
sub
ljmp
sbb
cmp
test
xor
xor
pop
pop
mov
push
mov
roll
adc
adc
nop
pop
roll
cmp
cmp
xor
jmp
mov
mov
jp
push
or
lahf
add
mov
popa
mov
cmc
in
mov
xchg
dec
clc
insl
add
rorl
mov
shr
imul
mov
movsb
mov
icebp
aad
push
loopne
fisubrl
cmpsb
add
push
pop
push
pop
push
mov
pop
jmp
scas
cmc
addl
pop
mov
jne
dec
inc
mov
lret
or
cmp
in
loopne
lret
aaa
xchg
jbe
loope
in
mov
cmpsl
jge
cmp
out
dec
lcall
lahf
mov
or
iret
aad
call
add
cwtl
and
decb
cmpsb
and
mull
and
jns
lcall
or
xor
mov
mov
mov
es
shlb
sub
popf
cltd
loope
lods
sbb
stos
imul
jne
pop
sub
xchg
mov
test
mov
fwait
rcrb
sti
mov
int
arpl
push
adc
xor
pop
out
lea
leave
xchg
xchg
outsb
nop
mov
shl
xor
bound
push
mov
pop
push
jle
inc
imul
xchg
jle
movl
bound
pop
test
adc
fwait
mov
xchg
sbb
push
cmp
nop
jmp
jmp
arpl
sbb
subl
pushf
fisubrs
mov
loop
inc
pop
pop
xchg
add
mov
xchg
and
cli
imul
pop
mov
sub
jns
add
mov
mov
dec
sbb
mov
dec
in
mov
push
hlt
outsl
push
aad
sbb
sbb
push
subb
mov
xor
call
fs
jnp
mov
lret
in
add
push
jmp
mov
inc
mov
adc
popf
dec
pop
aas
or
push
lock
adc
out
pop
adc
mov
sarl
sti
call
jmp
push
sub
mov
pusha
sti
dec
stc
cmp
ds
rorl
sti
mov
adc
mov
loop
mov
popa
push
bound
sti
and
push
pop
fs
daa
fs
mov
cld
iret
pop
xchg
shlb
pushw
push
xchg
sbb
aaa
lds
insl
les
adc
fwait
mov
jmp
adcl
pop
xor
cld
outsl
rcr
test
mov
sbb
aad
or
out
dec
cmp
sub
loopne
ficoml
hlt
push
push
pop
ret
fdivl
inc
fcomps
dec
push
mov
int
jmp
sub
jl
test
mov
inc
push
leave
cmp
gs
pusha
adc
add
dec
push
inc
testb
lds
xlat
lods
adc
add
and
xor
aad
dec
jl
mov
cmp
mov
cmp
mov
call
xchg
and
jno
cmp
leave
fldt
mov
xorl
idivb
mov
pop
sub
dec
jg
out
repz
pop
mov
ret
repz
sub
testl
fs
adc
dec
jmp
aam
mov
scas
iret
cmp
mov
dec
cmp
mov
insb
cmp
push
sbb
filds
faddl
aam
pushl
out
adc
push
jae
sti
jecxz
push
cs
enter
dec
out
es
dec
fndisi(8087
adc
jne
adc
test
lahf
in
aaa
das
jbe
loope
test
inc
mov
jl
mov
dec
imul
das
add
iret
mov
lret
in
and
fcomip
mov
fcmovnu
addr16
ja
xor
test
jae
pop
cmp
cmpxchg
jmp
xchg
push
js
jg
fs
jne
iret
cmpb
clc
xchg
cmpb
ret
push
movsl
pop
decl
xchg
push
lret
das
mov
pop
fmul
movsb
pop
mov
mov
dec
push
add
aaa
dec
jmp
xor
mov
add
and
fistl
sbb
xor
cmp
test
push
sub
push
cmc
xchg
or
cs
hlt
enter
nop
push
out
push
lret
cld
pop
or
rcrb
movsl
jl
fdivs
jle
arpl
mov
inc
xchg
cmc
push
test
jmp
daa
leave
push
pop
test
add
or
adc
lds
leave
dec
add
add
add
lea
mov
xchg
sbb
int3
sahf
pop
xchg
fnstcw
lea
and
orb
jecxz
cltd
ret
sbb
mov
ljmp
add
push
jle
std
cltd
adc
jnp
stos
lcall
pop
sbb
xor
ret
lock
test
xchg
sub
lock
adc
dec
and
dec
in
sahf
sub
rclb
add
popf
popf
jno
out
cmp
xor
lock
xchg
or
shll
dec
stos
fdivs
push
add
repz
and
jns
jb
ss
stos
ret
xor
fmull
xchg
mov
lcall
outsb
adc
mov
in
pop
pop
es
rclb
sub
std
and
popl
imul
mov
outsb
scas
fstp
and
pop
mov
pop
sti
dec
sbb
push
add
addl
mov
sbb
pop
and
mov
xor
pop
sub
adc
ret
cmc
in
push
sub
je
imul
shll
pop
loopne
lcall
pop
cmovg
adc
push
fimuls
jle
sti
add
cmp
adc
mov
and
adc
adc
movq
xor
je
mov
ljmp
test
loope
mov
pop
jecxz
aam
pop
dec
mov
cmpsb
dec
jne
and
adc
das
mov
daa
or
xlat
jp
push
mov
and
mov
jno
lea
mov
imull
jno
add
jae
mov
adcb
mov
mov
cwtl
rorl
mov
mov
pop
mov
jg
mov
fiadds
adc
push
fsubrl
jnp
rcrb
sbb
loopne
pop
cmp
adc
ds
je
jns
rcrl
mov
sbb
lahf
mov
adc
gs
leave
clc
mov
xchg
add
push
jp
cmp
ficoms
cwtl
mov
fisubrs
mov
inc
mov
push
cmp
sub
aam
dec
aam
xchg
out
mov
mov
pusha
push
stos
jne
mov
rol
mov
into
pusha
fs
xchg
cld
repz
push
adc
cmp
stc
lret
push
xchg
sbb
sbb
pop
stos
mov
imul
mulb
or
fwait
ret
arpl
add
xor
mov
jbe
lea
fdivp
es
rorb
inc
cld
negb
dec
daa
add
stc
test
enter
and
jae
push
xchg
std
adc
jmp
add
repnz
sub
notl
sahf
out
roll
xorl
adc
mov
jge
lds
xchg
mov
cmpsl
lods
std
fsubs
add
and
xlat
popa
mov
push
mov
outsb
faddl
add
lods
xorl
hlt
inc
rcl
push
add
cs
xor
lods
add
push
mov
jp
mov
movsl
ret
stos
cmp
sbb
cmp
adc
stc
sbb
or
popa
rcrb
push
leave
dec
cld
cmp
mov
pusha
rcll
std
jo
pop
repnz
push
in
in
mov
sbb
notb
shl
out
int
pop
dec
repz
ja
adc
adc
xor
pop
mov
inc
je
push
xor
jmp
pop
insb
jecxz
movsl
repz
mov
clc
mov
jo
dec
jle
adc
into
les
dec
pop
mov
das
lock
or
jns
or
das
adcb
dec
mov
sbb
inc
adc
xchg
fistpll
xor
push
lahf
xchg
mov
outsl
inc
std
popf
insb
mov
inc
int
xchg
scas
cwtl
sub
inc
je
sbb
jecxz
or
or
add
fcom
test
jl
repnz
xchg
xchg
inc
movsb
fildl
mov
movsl
and
dec
out
into
jno
test
inc
jg
jne
movsl
adc
mov
int
jecxz
cmp
adc
xchg
sub
das
ja
ss
xchg
stos
mov
cmp
cli
cmp
push
lds
pushw
push
cmp
into
mov
andb
cmpsb
int3
mov
sbb
push
sub
movsb
jmp
dec
cli
dec
cmp
sbb
arpl
sbb
stc
cmpsl
jle
stos
xchg
shlb
add
sbb
pop
jle
icebp
shrl
divl
xlat
jge
lret
or
and
psadbw
xchg
jg
je
adc
data16
repnz
xorl
or
sub
popa
push
inc
popa
adc
iret
push
popf
aas
pop
dec
int
push
fucomi
outsl
cmp
push
sahf
test
push
xchg
dec
ret
ds
pop
mov
fidivl
cmp
lret
jne
cmp
mov
and
xchg
jae
cmp
negl
sbbw
cwtl
add
hlt
popf
leave
fiaddl
or
fwait
enter
sub
popa
mov
call
cwtl
push
aam
lock
jecxz
les
addr16
in
int
inc
lds
leave
or
cltd
xchg
fmul
movsb
rorb
mov
mov
subb
xchg
pop
scas
and
adcb
sub
push
rcrl
shll
xchg
mov
lock
pop
repnz
dec
inc
shrl
sbb
xchg
out
xchg
xchg
mov
inc
stos
sbb
cmp
dec
sub
dec
cld
jl
call
push
gs
popf
sub
out
pop
mov
inc
cs
mov
add
repnz
lods
loope
jg
imul
cltd
lcall
sub
cld
jnp
jne
sub
imul
pop
pop
push
es
or
hlt
add
xor
shl
leave
sbb
nop
push
and
sbb
sub
dec
mov
adc
loope
lret
in
or
push
in
je
loopne
sbb
mov
stc
push
xor
sbb
jge
in
xor
pop
arpl
sbb
int3
mov
movsb
adc
sbb
mov
xchg
xor
and
lss
ljmp
movsl
and
sbb
push
aaa
mov
out
jmp
sub
cmpsb
and
cmp
pop
call
cmp
stc
in
mov
push
or
out
bound
pusha
subb
add
adc
fsubl
in
pop
outsb
dec
adc
cmp
popf
mov
cmp
cwtl
cmpb
jg
jns
data16
mov
inc
jl
dec
in
cmpl
inc
cmc
pusha
data16
dec
addl
pop
dec
add
mov
sbbl
pop
ret
aam
lret
aas
jnp
jmp
lcall
sub
stc
jno
dec
xor
mov
insl
xor
es
mov
aam
fisubl
pop
adc
out
je
adc
fs
mov
mov
add
std
sbb
xor
mov
aaa
addr16
aaa
sub
sar
add
jno
add
add
outsb
sbb
outsl
dec
clc
aad
fcoms
js
clc
inc
xor
bound
loope
cmp
or
aad
loope
fucomp
adc
add
in
inc
lret
std
push
inc
xor
sbb
push
pushf
int
pop
mov
popf
jl
shlb
mov
shrl
xchg
adc
and
ret
in
mov
dec
cmc
addr16
add
xchg
mov
outsb
daa
sarl
xchg
sbb
jne
inc
call
push
xchg
xchg
cmp
shrb
imul
mov
sbb
sub
cmp
or
pop
pop
sub
sub
jns
xchg
mov
push
cmp
stc
sbb
cwtl
lea
xlat
fistpl
ds
sub
push
add
aas
pop
lret
aam
dec
out
fisttpl
sbb
jle
jno
fadds
out
aaa
andb
add
and
loopne
push
add
pop
inc
mov
xchg
sub
mov
xlat
pop
mov
sbb
popa
cmc
mov
mov
insb
sbb
lret
pop
movsb
pop
call
push
jp
out
bnd
mov
fiadds
sbb
push
cmp
push
add
ficoms
cmp
repnz
pop
or
mov
outsl
add
add
fldenv
lahf
mov
or
ljmp
test
test
push
loope
sub
cmpsb
imul
rorl
out
iret
push
inc
mov
test
and
mov
rorl
mov
stc
jl
lods
push
ret
mov
or
pop
stos
fidivs
mov
out
lret
je
sub
stos
sub
sbb
xor
mov
ds
mov
dec
nop
and
jl
xchg
lcall
daa
push
pop
sub
mov
popf
push
subl
fcoms
inc
and
cmp
lds
jl
push
add
dec
fsts
mov
gs
mov
pusha
hlt
jge
ret
stos
mov
xor
pop
jmp
cmp
push
push
add
aaa
sets
and
insl
pop
cmpb
add
fwait
scas
mov
ret
lods
mov
andb
adc
mov
pop
mov
push
nopl
adc
popa
xchg
add
push
fdiv
mov
clc
popf
sbb
xchg
xchg
and
jmp
and
mov
jp
insb
fisttps
imul
cmpsb
jns
xorl
maxps
sub
pop
mov
sbb
mov
dec
xchg
push
into
aad
jp
les
sub
and
ret
loopne
mov
test
mov
sbb
aaa
jecxz
lret
mov
cmp
je,pt
cs
shll
xsaves
mov
out
mov
lret
inc
xor
addb
outsb
mov
mov
xor
push
or
dec
add
push
dec
adc
aas
mov
lcall
test
fwait
adc
dec
mov
cs
xor
loopne
aas
outsl
mov
jo
mov
and
mov
adc
sub
jp
cmc
loopne
arpl
sahf
pshufw
dec
leave
cld
movsb
inc
ds
mov
loope
mov
sbb
out
popf
ja
xchg
inc
inc
mov
and
fs
idivl
cmp
les
jb
jbe
mov
jne
and
filds
push
mov
push
pushf
fidivs
add
jbe
mov
pop
notl
outsl
push
mov
sbb
iret
cmpsl
cwtl
mov
and
ja
data16
sti
les
popf
push
orl
mov
dec
mov
and
mov
test
mov
outsb
mov
cmpsb
shrl
inc
arpl
inc
test
int3
mov
adc
mov
fcompl
pop
sbb
or
mov
fidivrs
out
lret
mov
xchg
push
and
xchg
cmp
outsl
push
jnp
outsb
shl
lcall
iret
mov
mov
aam
sbb
dec
int
cmp
imul
ds
insb
adc
popa
inc
lock
dec
data16
inc
movsb
int3
lods
adc
js
mov
xchg
insl
inc
lahf
in
jae
xorb
popa
hlt
inc
aam
mov
into
stos
mov
js
in
out
dec
je
incb
sbbl
je
sbb
xchg
icebp
lods
aaa
cli
mov
adc
mov
pop
lcall
and
push
jno
and
pop
hlt
add
xor
lods
stc
xchg
add
jo
jne
insl
lock
pop
mov
sub
punpckhbw
fnsave
addl
loopne
loopne
or
dec
pushfw
push
fisttpl
es
and
jae
sbb
scas
nop
inc
sub
mov
lret
cmp
mov
pop
test
cmp
mov
shl
mov
scas
movsb
loopne
mov
aas
xchg
xchg
jo
pop
jo
inc
fwait
lea
repz
mov
out
cld
mov
leave
xor
lods
and
es
js
loopne
cmp
movsb
mov
stos
in
adc
push
pusha
ret
cmpb
es
loope
enter
add
jne
add
imul
iret
push
lret
fildl
pop
push
xchg
mov
repnz
mov
xchg
pushf
int
inc
jns
adc
xchg
popf
into
jno
out
push
das
repnz
jno
dec
in
mov
jno
and
mov
sbbb
pushf
jg
hlt
out
lret
add
cmp
pop
in
xchg
push
mov
mov
mov
ret
or
adc
aad
dec
and
push
push
in
and
lods
adc
jmp
je
jns
sbb
mov
and
es
ret
pop
dec
dec
sbb
and
jg
cmpsl
mov
test
mov
jecxz
push
popa
adcl
cmp
mov
sbb
push
xor
lods
fsts
sbb
dec
ret
repz
sub
imul
push
inc
pop
xchg
mov
mov
loopne
xor
mov
sbb
sahf
xor
or
push
ret
fidivs
xchg
xchg
lds
cld
push
mov
addr16
cmp
fs
int3
or
mov
cwtl
idivb
or
aas
sub
sub
add
movsl
jns
mov
pop
cmp
scas
xchg
or
mov
mov
shlb
insl
jns
adc
out
out
push
popa
sbb
jg
mov
jne
pop
out
arpl
js
pop
and
sbb
jbe
jge
jecxz
les
pop
int
stos
subb
lahf
aad
ss
cmpb
test
setle
fbld
push
sbbb
jge
fmuls
add
arpl
push
mov
sbb
pop
jns
and
insb
add
mov
sub
dec
out
sbb
jnp
pop
jae
mov
cmp
mov
imul
xorl
imul
inc
jb
imul
xchg
adc
in
mov
popf
outsl
shrb
fnstsw
fisubl
xchg
out
loope
sub
jnp
dec
subl
adc
sbb
sarb
mov
or
push
int
push
push
std
ds
mov
mov
das
push
out
dec
packuswb
inc
push
push
in
and
ss
out
imul
fists
jge
lret
cmpsl
ret
mov
sub
push
scas
adc
jecxz
mov
xchg
inc
aas
xlat
mov
sub
xchg
xlat
or
std
cmp
push
and
mov
subl
xchg
lock
mov
rorb
add
insl
fstps
fimull
xchg
push
popf
mov
inc
insb
push
add
jbe
xchg
xchg
cmp
enter
sahf
push
arpl
add
cmc
rcrb
cmp
xor
push
andb
shl
clc
push
repnz
pop
mov
lret
mov
xchg
mov
push
subl
test
data16
jl
adc
adc
rolb
js
stos
arpl
mov
sbb
je
test
in
dec
mov
sub
repnz
int3
pop
icebp
sbb
filds
stos
ja
stos
add
cmc
hlt
clc
xchg
jmp
cmpsl
push
push
mov
mov
sbb
push
test
fst
test
out
or
mov
mov
mov
sbbb
int3
push
inc
adc
mov
push
inc
cmp
mov
or
mov
sub
sub
pushl
loopne
cwtl
jae
cmp
mov
leave
cltd
inc
bound
jp
lcall
cmp
inc
jg
loope
lret
xor
mov
jno
addr16
shll
inc
dec
cmp
leave
movsb
mov
fcmove
into
movsl
mov
pop
inc
push
inc
movsl
adc
mov
xchg
sub
fnstenv
pop
imul
dec
rclb
into
adc
push
push
xchg
divl
aaa
mov
scas
pop
pushf
xor
cmp
cmc
xchg
xchg
fsts
cmp
ret
and
mov
ret
push
push
ror
test
fbld
pusha
push
into
xchg
lret
adc
cmp
or
cmp
lock
clc
push
push
cmp
xchg
or
mov
ja,pn
add
push
mov
mov
mov
loope
cmp
shl
in
pop
dec
mov
iret
pop
xor
nop
xor
sbb
fwait
jp
xor
arpl
out
jne
loop
sub
movsb
xchg
aaa
mov
int
mov
inc
shlb
xchg
bound
dec
xchg
and
jae
lcall
fwait
jecxz
je
cmpsl
jae
cwtl
jp
mov
es
daa
addb
push
ret
aas
stc
fmuls
pop
loopne
rcl
cld
iret
clc
pop
xor
sbb
imul
adc
out
imul
adc
enter
xchg
sub
int3
cltd
sbb
sub
jmp
outsb
out
dec
test
mov
mov
pop
xchg
fwait
dec
mov
repz
push
daa
rorb
push
adc
aas
popf
pop
scas
outsl
inc
mov
or
jmp
cli
jno
xor
ja
inc
mov
mov
jnp
xor
ja
dec
jg
push
xorl
cmp
fsubs
or
dec
test
jae
aaa
pop
dec
push
pop
sarb
es
fwait
pop
ret
insb
mov
add
iret
lock
test
fwait
jo
inc
inc
mov
jg
push
ds
xor
jl
aam
inc
pop
call
jp
mov
ljmp
addr16
call
push
shl
mov
int
inc
mov
js
pushf
es
add
cmp
enter
lcall
shrb
decb
out
push
dec
insl
dec
add
aam
outsl
stos
push
in
dec
inc
ja
inc
jae
cmp
pop
addr16
shlb
jnp
xchg
insb
inc
sbb
sub
ja
in
test
sahf
clc
pop
lods
add
jle
inc
andl
out
adcl
xlat
xor
adc
inc
adc
sbb
mov
pop
test
sahf
les
cli
pop
inc
in
test
or
cltd
in
les
push
insb
cmp
xor
dec
mov
adc
mov
test
cmpsl
mov
and
filds
jg
mov
pop
jno
imul
stos
inc
pop
add
ret
xorl
in
cmpsb
xchg
mov
dec
scas
xor
mov
mov
mov
pop
fwait
jne
cmp
call
lds
sahf
jmp
jl
add
cmpsb
inc
pop
xchg
icebp
test
cmp
push
dec
cmp
dec
xchg
in
push
push
and
push
ret
test
jg
pop
out
dec
push
inc
inc
hlt
aas
and
outsb
fwait
arpl
pop
js
push
fisttpl
xor
mov
cwtl
inc
nop
push
adc
loope
rorl
or
xlat
sarl
insw
jge
mov
mov
pop
cmpb
fisttpll
std
stos
je
fcos
push
xchg
outsl
mov
shlb
mov
push
pop
aas
sti
pop
out
ret
push
mov
mov
ret
popa
mov
cmp
aad
xor
jb
mov
lahf
mov
arpl
and
pop
push
inc
movsb
loop
les
adc
sarb
and
xor
adc
inc
loopne
out
int
xor
add
aam
pop
addr16
lods
pushf
out
jp
cmp
mov
xchg
scas
mov
or
xor
add
jae
movsl
xchg
pop
push
jnp
push
inc
mov
dec
or
cmp
lret
cwtl
sbb
andb
test
inc
mov
adc
lods
repz
test
aam
out
pusha
aad
cmc
aaa
rorl
inc
push
sti
or
dec
pop
mov
std
fldt
mov
jle
or
aad
mov
jb
and
aaa
call
xchg
into
xchg
pop
jmp
orl
xchg
xchg
dec
ret
cmc
test
dec
adc
push
mov
sub
xchg
ljmp
test
push
cmp
call
test
adc
lods
jno
not
icebp
push
ljmp
push
xchg
xor
pop
mov
popf
rolb
xchg
xlat
popa
and
movsb
xor
mov
inc
mov
jo
and
mov
xor
cli
sahf
fs
loop
es
xchg
pop
mov
add
enter
pop
jno
push
push
test
inc
cld
xchg
mov
ficompl
mov
push
or
sbb
jb
ljmp
push
mov
dec
inc
xchg
inc
mov
pop
pop
inc
and
dec
inc
cmp
mov
bound
xor
out
pop
shrl
push
daa
repz
sub
xor
mov
and
daa
enter
aas
nop
addl
push
or
mov
cld
dec
int
and
mov
ret
adc
leave
sub
in
push
jp
scas
cmp
push
fidivrs
mov
outsb
xor
je
and
fdivl
pop
dec
sub
addr16
push
movsl
out
sbb
xlat
les
push
xchg
jp
pop
sub
addr16
fucomp
js
aam
lcall
mov
add
in
arpl
lock
idivb
add
xor
or
ret
xchg
dec
fisubrl
sbb
and
ljmp
dec
scas
call
mov
inc
push
and
add
dec
int3
mov
push
in
add
jae
cmpsb
mov
mov
test
insl
aam
arpl
pop
xor
je,pt
test
loope
xor
adc
insl
lcall
imul
mov
cwtl
aam
push
push
setbe
cli
aaa
push
mov
pop
mov
push
mull
xor
xor
outsl
pop
divl
sub
jno
lret
mov
imul
mov
mov
arpl
mov
sub
pop
sahf
sub
add
mov
mov
xlat
push
or
sarb
push
mov
jae
push
pop
inc
sub
push
outsl
addr16
xchg
fidivl
xchg
cwtl
test
in
outsb
cmp
cmc
into
pushf
jae
cmp
subb
cld
fs
ret
imul
cld
stc
test
pop
push
mov
push
bnd
push
js
dec
dec
jae
sbb
into
imul
cmp
xrelease
jmp
fmull
push
push
mov
mov
or
and
dec
js
mov
rorb
nop
repz
ret
xchg
jmp
loop
pop
push
dec
enter
mov
jge
cwtl
hlt
sbb
pop
out
aaa
xchg
jmp
xchg
xlat
insb
pop
dec
mov
pop
mov
daa
test
xchg
rcll
sub
mov
repz
popf
mov
push
dec
sti
mov
in
test
dec
insb
pop
aad
call
cmpsl
push
and
or
push
out
in
xchg
add
sbb
gs
push
cmp
popa
mov
mov
aas
test
and
stos
cmpl
mov
jae
pop
and
sbb
xor
je
or
fucomi
adc
xlat
pushf
push
shl
aad
push
movsb
nopl
clc
mov
ss
es
sub
fnstcw
stc
xlat
pop
scas
jmp
push
jmp
sub
mov
cmp
stc
ds
lea
push
inc
popa
sbb
push
jae
fdivs
sub
cmpb
push
scas
dec
outsl
mov
loop
fwait
in
mov
adc
dec
pop
pop
stos
test
xchg
nop
testb
daa
mov
scas
test
mov
inc
jnp
rcrb
cs
xchg
and
mov
dec
pop
mov
movl
gs
xor
cltd
cmp
aam
jl
inc
out
mov
mov
jno
dec
sarl
faddl
ret
adc
cmc
push
ror
mov
sub
ret
aad
test
pop
lret
out
das
movsb
dec
scas
adc
pop
loope
or
in
cli
xchg
int
xor
push
int
jb
xchg
int
stos
push
push
cmp
mov
ja
hlt
sub
orb
adc
xchg
aaa
cmpsl
scas
jge
add
push
stc
pop
pop
mov
pop
inc
mov
pop
adc
sub
xchg
dec
and
inc
sbb
sub
pop
repnz
inc
insb
sbb
pop
adc
adc
daa
sarb
xor
sub
nop
dec
add
addr16
test
lods
pop
je
rclb
xlat
je
jp
xor
loop
pop
jns
pop
and
or
fwait
dec
cwtl
fistpl
fsub
insb
pop
pop
or
push
sbb
repz
mov
push
inc
out
loop
xor
sarb
jno
xor
inc
sahf
inc
xor
scas
popw
lret
inc
mov
or
and
jnp
fstpt
aas
repz
or
and
jno
push
jnp
inc
lahf
mov
sub
xor
mov
sub
jns
or
xlat
add
adc
fs
ljmp
pop
push
lods
xchg
add
adc
mov
xchg
xchg
mov
cwtl
sbb
in
adcl
lahf
and
mov
push
inc
stos
jl
cmp
cmpsb
sbb
adc
and
out
pop
lea
xchg
inc
or
mov
jo
in
hlt
lods
arpl
lret
loop
shlb
mov
clc
push
lods
test
adc
or
adc
cmp
movsl
xor
pop
adc
cmp
aas
jmp
cmc
shrl
outsb
shrb
test
popa
ss
inc
and
loopne
outsb
or
xchg
inc
popf
jo
fadds
int3
out
les
cmp
jno
stos
pop
mov
inc
out
repz
sbb
mov
ja
daa
fsub
adc
outsl
icebp
test
test
push
les
ss
inc
jle
dec
jnp
adc
mov
or
cmpsb
push
les
leave
ljmp
add
add
mov
movsl
notb
repz
and
inc
dec
aaa
mov
int3
mov
scas
fisttpll
mov
shll
lcall
jae
mov
jge
js
js
adc
mov
xor
out
incb
cli
sbbl
inc
pop
in
xor
repz
repz
jbe
clc
mov
cli
outsb
lcall
mov
push
shll
jne
mov
outsb
cld
mov
es
pop
adc
sbbl
out
adc
mov
fs
stos
stos
cltd
cltd
leave
sub
cmp
int3
stos
stc
aad
push
fsubl
pop
data16
inc
ret
rcll
push
out
push
jecxz
fcompl
pusha
adc
xchg
xchg
push
push
fisttpll
mov
lods
dec
push
or
sbb
jecxz
mov
int
dec
push
ret
jno
scas
jns
adc
xchg
roll
add
xchg
jle
into
mov
in
loopne
mov
xchg
lds
jb
lods
cmp
inc
outsl
xchg
imul
rcr
and
inc
imul
sbb
xchg
in
jb
sbb
cmp
repz
ja
mov
out
les
movsl
xlat
mov
jle
pop
aas
ss
and
insb
pushf
pop
add
mov
scas
jne
shlb
adc
imul
testl
jno
jae
nop
dec
dec
adc
jae
loop
adc
dec
or
aaa
cmc
out
pop
push
dec
xchg
or
inc
xor
movsl
sub
pop
cwtl
jp
mov
add
dec
shlb
jbe
cmpsl
mov
sbb
cmp
mov
cmp
push
pop
jb
push
lea
repnz
in
dec
test
ja
ror
pop
les
lret
cmp
pop
out
fsubrl
lret
cmp
inc
pop
das
inc
imul
and
pop
repz
mov
jl
dec
in
movb
cmp
imul
cmp
jns
out
mov
sbb
inc
out
dec
fidivl
inc
xchg
ja,pn
outsb
out
loope
test
cmpsb
test
in
dec
shl
lret
lods
popa
addr16
fwait
mov
scas
pop
inc
popf
dec
in
movsl
jmp
cld
pushf
adc
sub
ret
jge
lods
push
mov
lods
mov
xchg
mov
push
mov
pop
pop
jmp
inc
gs
mov
mov
clc
mov
xchg
idiv
out
inc
es
ficomps
mov
lcall
sarl
into
repz
and
xchg
into
ss
cmpsl
inc
mov
xchg
das
sub
test
cmpsl
mov
xchg
inc
test
into
cmp
fsts
xor
testl
cmpsb
repnz
and
mov
sarb
outsl
shl
lret
pushf
es
clc
aam
popa
pop
hlt
and
jae
inc
xchg
repz
es
sbb
mov
in
push
jg
inc
aas
jp
lret
imul
stc
in
mov
scas
sub
mov
adcb
ss
dec
bound
cmpb
out
mov
mov
lods
ficoml
fisttpl
xor
cmp
into
push
and
sbb
sbb
jp
aad
daa
int3
mov
adc
push
cmpsb
sbbb
pop
xor
mov
sarl
aas
cmp
movb
add
sub
or
push
iret
arpl
cwtl
or
sbb
dec
pusha
push
andb
in
pop
les
xchg
aad
mov
scas
mov
fdivr
mov
lods
mov
pop
cmp
pop
pop
fistl
dec
lock
mull
in
loope
sbb
inc
xchg
mov
cmpsb
popf
jp
or
inc
cmc
ds
std
jne
adc
sub
and
stos
mov
mov
jne
push
test
or
xlat
adc
inc
pop
movsb
jle
stos
imul
sub
cmpl
loopne
pop
imul
hlt
push
out
pop
cltd
mov
cmp
pop
mov
cmp
sub
fs
sub
inc
cmp
loopne
push
sbb
jnp
push
mov
push
pop
sub
cmp
icebp
cmp
pop
test
push
xor
jg
cmp
xor
cmp
test
ja
rorb
test
mov
dec
gs
int
and
push
pop
pushf
loope
insb
push
or
pop
inc
sbb
lods
jl
es
pop
into
jecxz
pop
push
aad
mov
dec
ja
in
add
cmp
sbb
dec
push
scas
cmp
inc
mov
dec
push
shlb
inc
mov
rol
push
into
scas
xor
jae
aad
std
mov
jle
call
jbe
dec
fdivl
jb
rolb
aas
pop
cmp
pop
fprem1
xchg
add
les
mov
loop
xchg
and
test
lods
shll
popa
sti
sub
lcall
and
mov
push
insb
push
jb
ret
scas
das
repnz
push
dec
inc
push
or
and
xchg
aaa
mov
repnz
xchg
outsl
rorl
cmc
nop
dec
and
loop
test
mov
cmp
cmp
mov
cmp
jle
mov
in
and
insb
mov
or
js
in
xchg
mov
pop
dec
gs
sbb
ljmp
insl
adc
cld
add
and
fstl
std
lods
jecxz
dec
add
mov
mov
outsl
xchg
cmpsb
lods
sbb
push
mov
fdivrl
add
mov
xchg
push
daa
push
imul
insl
dec
arpl
push
add
cld
xor
xor
inc
jb
inc
rol
repz
dec
push
push
xor
bound
stos
fdivrl
sahf
jb
ja
or
dec
repnz
fimull
add
jne
push
add
cli
cmp
adc
cmpsl
lret
lret
dec
or
roll
xor
adc
mov
sahf
push
popf
ja
or
sarl
jne
jne
in
jo
pop
rcll
xchg
push
mov
push
mov
inc
gs
lds
xor
scas
shlb
jnp
add
mov
xchg
ja
cmp
xor
dec
bound
dec
pop
insb
ret
cmp
adc
dec
xchg
sub
xor
mov
lock
in
push
les
cld
jno
out
cmc
enter
js
cld
loope
lds
jmp
xchg
push
dec
das
jle
pushf
cmp
xor
dec
xchg
out
add
inc
jmp
pop
cmp
add
and
divl
loopne
int
fildl
push
aaa
and
pop
mov
out
pushf
jmp
scas
xor
inc
imul
sub
xor
popf
lods
dec
shll
pop
repz
or
mov
dec
stos
sub
adc
and
push
scas
imul
inc
leave
xlat
test
mov
dec
sarb
mov
pop
in
push
mov
je
andb
mov
xlat
out
mov
adc
mov
fsts
xor
rol
sub
cmpsl
pop
addr16
jge
cmp
jo
pop
sbbl
scas
enter
cwtl
jmp
pop
int3
je
jp
outsb
xchg
stos
test
loopne
sbb
add
scas
mov
mov
in
jl
ret
xchg
inc
sbb
loop
cli
cld
push
ljmp
inc
imul
pop
xor
sub
outsl
mov
xchg
movsl
mov
in
dec
loop
xchg
dec
loopne
push
dec
loope
cltd
les
push
sbb
add
std
mov
movsl
sub
jne
jo
jl
or
into
test
mov
or
movsl
daa
add
xchg
in
out
lcall
rorb
clc
enter
cmpl
aaa
pop
xorb
jae
out
roll
xor
int3
push
jmp
aad
ret
xchg
dec
mov
cmpsb
pop
hlt
mov
ret
mov
push
movsl
mov
fnstsw
addr16
popa
xchg
and
lea
xlat
mov
mov
lret
leave
sbb
aad
jae
outsb
push
inc
mov
sbb
lret
mov
push
imul
sbb
in
dec
mov
cs
push
push
push
gs
jmp
push
popf
popf
sub
lods
jb
or
and
push
loop
loopne
jae
shrl
ret
std
jne
leave
sub
cmp
xlat
cld
pop
sbb
push
jg
or
ss
pushf
punpckhdq
imul
cmp
pop
dec
xchg
cwtl
bound
ficoms
arpl
ljmp
add
pop
dec
cld
mov
dec
jecxz
mov
xchg
cmp
and
adc
hlt
mov
inc
jp
aaa
ss
jbe
or
push
call
cmp
mov
mov
mov
dec
lods
cmpl
jb
xchg
sbb
ja
dec
daa
popa
mov
mov
add
loope
mov
mov
mov
loope
mov
psadbw
lcall
rcl
mov
cmpsl
xchg
push
clc
in
fmuls
mov
pop
add
punpckhwd
mov
push
inc
xchg
add
mov
add
inc
fsubrl
stc
popa
lahf
aam
pop
mov
jle
xor
lods
mov
push
ret
pop
fildl
cwtl
xor
xor
fwait
xor
push
mov
push
ljmp
inc
out
adc
sahf
fsubr
cmpl
sbb
cmp
insb
std
into
xor
ret
dec
in
mov
int3
subl
or
jne
sbb
mov
sbb
loopne
icebp
jb
xor
loope
adc
sub
xchg
sbb
stc
lock
lahf
xchg
inc
call
mov
rcr
aas
pop
int
and
movsb
addr16
pop
push
and
fldl
je
sbb
rorl
dec
adc
jp
push
push
push
stos
xor
scas
jecxz
outsl
pop
mov
xor
mov
rcll
cli
adc
or
pushf
pop
add
xchg
or
repz
sub
push
xchg
mov
xlat
adc
lods
mov
fisubs
les
inc
or
inc
test
xor
mov
test
test
push
sbb
mov
stc
dec
jno
shll
dec
sub
test
cmc
or
lods
mov
dec
add
fildll
dec
pop
inc
std
push
ror
jmp
lods
jp
scas
jnp
mov
dec
pop
mov
mov
xchg
ja
test
rorb
lcall
in
xor
cltd
enter
jnp
data16
call
mov
mov
mov
leave
sub
mov
ljmp
lret
dec
inc
stos
imulb
fcomps
rcrb
mov
scas
outsb
mov
jb
jecxz
adc
xor
pusha
cmp
rorl
sbb
push
mov
jnp
cmc
subl
mov
std
mov
mov
jl
ja
in
sarl
pusha
mov
jl
mov
jns
pop
xchg
shll
fcomp
fistl
cmc
pop
jbe
jl
gs
mov
jecxz
add
das
es
popf
clc
add
push
adc
outsb
test
and
mov
clc
jns
mov
movsb
dec
sbb
ret
sar
jp
cwtl
cmc
and
mov
mov
mov
fdivl
push
in
inc
inc
jbe
out
xlat
ds
lods
push
popa
movb
imul
mov
test
test
call
jb
ficompl
out
aam
xchg
jne
lods
leave
and
sbb
sub
imul
cli
push
xchg
sbb
lahf
aad
mov
sub
adc
dec
dec
repz
out
mov
sub
xrelease
cmpsb
fsubl
push
fs
sti
mov
dec
mov
or
jo
push
and
repz
xchg
push
xchg
out
fimull
js
scas
add
pop
xrelease
test
sub
or
pop
or
cmpsl
sub
jle
push
inc
mov
jo
insl
jae
aas
mov
push
fimull
aad
mov
push
mov
cmp
jo
sbb
outsb
daa
pop
mov
mov
sub
mov
sahf
adc
jo,pn
out
push
push
neg
inc
shl
ret
and
xor
ds
sub
mov
mov
xchg
aam
je
enter
mov
push
rolb
push
jge
mov
repnz
jp
sbb
jle
dec
out
mov
push
stos
das
movsb
rep
ljmp
imull
stc
out
sbb
psrad
cmp
jb
hlt
mov
cwtl
add
xor
push
sbb
adc
int
mov
fstpt
jnp
imul
ljmp
imul
sub
insb
push
xor
mov
lock
xor
in
sti
fcmovbe
mov
mov
lret
repz
xchg
fsubrl
cmpsb
xchg
gs
dec
dec
pop
ret
push
mov
xchg
pushf
lret
inc
test
adc
cmpsb
dec
shlb
mov
pop
outsb
push
f2xm1
hlt
pop
xchg
fstp
cmpb
ret
mov
pushf
cmp
add
dec
addr16
sbb
sbb
inc
pusha
fstpt
sahf
fnstsw
out
stc
add
push
push
dec
clc
idiv
int3
in
mov
inc
add
mov
push
in
gs
sub
ds
sbb
ja
in
pop
filds
jp
pop
out
mov
and
in
call
adc
addl
mov
pop
imull
push
jl
nop
mov
jl
in
mov
jnp,pt
call
cmp
in
mov
rcl
fisttpll
pop
sti
pop
inc
mov
jle
je
mov
mov
sub
cmp
or
mov
cmpb
int3
gs
xchg
mov
data16
adc
lret
inc
lock
mov
std
loop
femms
lahf
and
cltd
jo
ljmp
lods
imul
pop
xor
and
mov
pop
popl
xor
xlat
and
jmp
push
insb
ds
lret
jp
mov
fs
sarb
jp
jge
cmpsb
mul
icebp
lret
out
add
stos
jg
mov
push
mov
mov
lret
arpl
pop
add
arpl
and
enter
jb
jg
jbe
mov
mov
in
adc
pop
testb
js
push
mov
test
rcrl
mov
addr16
hlt
inc
fstps
daa
jo
push
aaa
out
int
cmc
dec
and
push
notl
ret
sbb
xchg
xchg
dec
je
loopne
divl
je
sub
pusha
loope
xchg
dec
ja
pushf
lods
sbb
dec
sub
daa
xor
xchg
inc
out
fwait
push
sbb
mov
mov
push
testl
jmp
dec
dec
cmp
subb
push
scas
adc
inc
jp
cmp
xchg
inc
mov
jmp
inc
arpl
inc
xchg
push
cmp
jbe
test
test
pop
adc
rep
out
cwtl
sub
mov
sbb
es
adc
stc
faddp
sbb
fistpll
inc
cltd
aas
cld
movsb
stos
fnsave
dec
sahf
jb
inc
jg
push
movl
test
mov
mov
out
mov
xlat
imul
ret
leave
in
sbb
push
out
mov
out
sub
xchg
cmp
mov
hlt
xchg
scas
fcmovnb
repz
dec
daa
aaa
cltd
fisttps
mov
or
shl
cmp
mov
decb
mov
cmpb
pop
dec
jo
jp
or
jecxz
cld
lahf
pop
les
sbb
xor
mov
or
sub
mov
shrl
mov
enter
movb
inc
xchg
pop
mov
loope
fistl
gs
sahf
lret
or
xchg
lock
lea
jg
shll
sub
push
std
orb
jp
or
dec
iret
insl
dec
loop
sbb
adc
lahf
cmpsb
mov
lods
push
cld
adc
pushf
adc
stc
adc
insb
jmp
test
or
loope
xchg
stos
orl
loope
push
jmp
inc
add
pop
dec
pop
pop
std
mov
push
repnz
into
push
inc
les
jecxz
fiadds
cmc
pop
or
mov
push
mov
sbb
cli
in
jbe
mov
mov
ljmp
daa
adc
imull
dec
ljmp
ret
sub
jp
xchg
lds
dec
mov
push
xchg
adc
into
jne
bnd
data16
sub
repnz
and
shlw
xchg
xor
mov
clc
add
in
jbe
adc
call
fmul
or
add
popf
clc
and
pop
xchg
dec
scas
adc
clc
pushf
loopne
cwtl
insb
ljmp
adcl
dec
call
es
mov
int3
xchg
mov
jne
inc
mov
mov
sti
dec
ds
loop
int3
stos
lock
je
dec
mov
xchg
pop
cli
popf
jo
xor
jmp
xchg
ficoml
adc
popf
pop
out
pop
or
repnz
out
ja
icebp
cmp
jg
mov
xchg
outsl
pop
cmp
pushf
stos
jl
faddp
fs
cmp
mov
stos
rcl
and
gs
jecxz
insb
loop
dec
sbbb
cmp
jg
repnz
jno
es
or
add
inc
fdivrl
ja
test
popa
xchg
mov
fstp
mov
xchg
lret
adc
jnp
into
mov
dec
shrb
jo
cs
std
jne
xchg
lock
je
sarl
bound
dec
and
adc
dec
shrb
mov
pop
aam
dec
xchg
sbb
lret
push
inc
enter
outsl
xchg
or
lret
adc
jge
or
hlt
jle
jbe
adc
test
lahf
xor
cwtl
push
inc
jg
xchg
sub
xchg
lret
lahf
popa
rcr
add
rorl
out
in
jo
jns
xchg
push
fisttps
jmp
test
adc
das
push
sub
push
mov
cmpsb
or
testb
lods
movsb
ljmp
or
in
dec
add
cmp
out
inc
psllq
inc
mov
cmp
cmpsb
adc
lret
in
in
cmp
push
fildll
repnz
xor
jmp
xchg
clc
arpl
jno
adc
add
cld
jge
ds
lods
ljmp
and
aam
pop
fiadds
mov
movsl
mov
mov
insb
xchg
test
xchg
imul
sbb
inc
and
push
xlat
stos
adc
lods
cld
and
popa
loope
rclb
inc
pop
add
cmp
xor
lods
fstpl
das
jns
add
dec
add
push
add
clc
adc
xchg
cwtl
mov
cltd
pushf
call
int3
and
subl
sbb
into
pop
test
adc
aas
pop
jge
imul
fidivrs
in
pop
xchg
jmp
dec
loope
subb
push
inc
push
xchg
sub
dec
cwtl
mov
jne
daa
adc
decb
dec
xchg
mov
jnp
sub
mov
test
pop
cmp
lcall
and
daa
mov
pop
adc
lods
push
and
adc
lcall
mov
daa
xchg
inc
enter
dec
scas
scas
pusha
out
aam
or
out
push
pop
pop
mov
mov
push
test
pop
insb
jbe
cld
adc
dec
emms
cmp
faddp
push
hlt
test
jo
icebp
jns
add
cwtl
pusha
mov
mov
ss
jmp
jge
imul
cmp
and
test
add
ds
mov
jnp
andb
push
ficompl
cltd
inc
adc
mov
insb
int3
or
adc
mov
mov
mov
fs
into
push
inc
cmp
arpl
mov
imul
hlt
insl
in
cli
sbb
mov
xchg
add
lods
dec
fidivrl
add
fstpt
mov
popf
and
mov
cmpsb
xor
jle
jne
xor
jns
push
add
xchg
pop
lcall
test
imulb
mov
inc
jo
data16
movsl
xchg
jge
xor
repnz
sub
je
mov
pop
pop
xor
mov
test
adc
lea
inc
lea
outsb
mov
imul
lds
add
cmp
xlat
cmpsl
es
xchg
push
fucomp
hlt
aad
fldl
sbb
sbb
push
mov
aaa
jecxz
popa
dec
push
xor
adc
jno
xchg
mov
sarl
mov
or
mov
outsb
lret
xchg
dec
in
ficoms
imul
mov
push
or
gs
pop
dec
fcmovnu
jp
sti
or
mov
dec
adc
lret
xor
mov
mov
pop
sub
mov
xor
in
dec
in
inc
and
adc
iret
push
jae
cmp
out
xor
mov
or
fs
adc
xchg
inc
jg
jae
push
in
enter
xor
jnp
popf
cmpsb
fs
and
test
add
push
cmpsl
xchg
sbb
cmp
or
xor
cmp
pop
sub
push
lods
test
out
test
gs
aaa
flds
icebp
push
or
aad
jle
or
dec
push
push
adc
into
pop
lods
cmp
dec
popf
inc
dec
ja
test
int3
pusha
pop
mov
add
outsb
dec
mov
imul
mov
aam
pop
add
shll
pop
gs
shrb
jne
je
roll
gs
jo
sbb
and
and
pop
repnz
and
fs
outsw
xor
jb
adc
pop
xor
fldl
xchg
es
xlat
xchg
push
dec
mov
cmp
sub
xchg
dec
rclb
addb
jecxz
pop
jp
sbb
outsb
data16
xchg
inc
addb
rorb
mov
sbb
or
push
add
mov
ret
mov
xor
xlat
pop
divb
pusha
jo
sbb
outsb
push
je
dec
dec
stos
sbb
dec
sbb
ljmp
mov
xchg
sbb
subb
and
pop
sbb
add
call
xor
enter
lret
icebp
out
es
int
std
jecxz
inc
andl
mov
jge
out
pop
push
mov
sti
cwtl
repz
cli
int
xchg
inc
xor
or
ljmp
and
aad
bound
fmuls
aad
xchg
mov
dec
pusha
int3
and
and
in
mov
cltd
jp
aad
xor
cltd
mov
cltd
fistpll
imul
fistpll
insl
xor
inc
or
mov
xor
dec
cmp
mov
ret
jno
mov
cmpsl
cli
sarl
leave
cmp
mov
das
push
mov
xor
xchg
rorb
les
xor
rep
adc
shlb
outsb
mulb
iret
fcos
adc
imul
xchg
cmp
stc
fwait
xchg
cs
imul
ret
inc
cmp
lahf
jmp
mov
sub
jo
dec
scas
xchg
scas
dec
xchg
hlt
mov
cs
inc
lahf
mov
icebp
hlt
pop
clc
cmpb
arpl
mov
test
insl
dec
ret
arpl
cwtl
and
push
push
inc
and
inc
mov
rcrb
sti
or
mov
fucom
xor
in
and
fcmovu
push
xchg
jp
jae
mov
hlt
add
pop
mov
lods
out
sub
sti
dec
add
int3
and
xor
in
fnstsw
xor
jno
jne
frstor
lea
rcrl
mov
jge
sub
xor
pop
sbb
mov
inc
adc
loopne
sahf
out
lods
popa
push
and
sbb
cs
and
repnz
imul
push
loop
pop
in
loop
hlt
cmpsl
inc
mov
fdivl
sbb
xchg
movb
loope
or
ret
imul
shr
cmp
push
or
out
adc
lahf
std
lock
xchg
mov
ja
mov
mulb
dec
inc
je
fstpl
addr16
ret
vandnps
shlb
mov
and
clc
loop
mov
pusha
push
mov
lds
dec
jns
jge
test
daa
aad
mov
xor
inc
stos
lea
scas
push
xor
jecxz
cld
adcl
and
repnz
je
icebp
sub
jecxz
add
outsb
ss
ja
aaa
pop
test
pop
push
pop
mov
cmp
xlat
cmp
cmp
aad
arpl
test
mov
scas
xchg
push
mov
les
orl
adc
pop
cmp
pop
xchg
ja
fcomp
pop
mov
mov
add
xchg
mov
adc
lods
mov
adc
adc
scas
ret
gs
push
arpl
jl
sbb
add
inc
adc
inc
sbb
xchg
hlt
push
inc
pusha
mov
mov
jg
or
push
mov
aad
jmp
es
rcll
outsb
cld
sub
pop
dec
lret
ljmp
lea
mov
mov
ds
icebp
xor
lahf
repz
insb
jae
sti
cmpsb
pop
sbb
movsb
fsubs
mov
xchg
xor
sbb
xchg
add
xor
repz
or
mov
packssdw
xorb
ja
mov
arpl
add
data16
cmp
arpl
shl
pop
cmc
test
fdivrl
and
xchg
jne
xor
adc
stc
push
leave
cmp
arpl
jge
push
push
xchg
inc
push
sahf
cmp
mov
arpl
and
adc
popa
dec
test
jmp
leave
out
pop
dec
cs
sti
fiaddl
pusha
sbb
mov
data16
cmp
push
pop
ret
int
pop
dec
arpl
fldcw
sahf
lret
jo
cmp
pop
ret
mov
into
cld
jmp
pusha
testb
xchg
cmpsl
adc
inc
loop
mov
pop
les
sub
loope
popl
jg
lahf
ficoms
inc
push
mov
out
and
add
dec
cmpsb
add
inc
pop
int3
cmp
mov
xor
sar
sbb
jl
push
cmp
icebp
cltd
jp
push
adc
cmp
sub
hlt
orb
pop
movsb
push
sbb
aas
and
fptan
notl
sub
inc
jne
add
repnz
push
popf
xchg
scas
cmc
fsubl
add
out
fsubr
int
scas
inc
movsl
and
lods
aad
in
push
scas
push
pop
and
and
les
fnstsw
mov
shll
movsb
add
push
es
in
jb
sub
add
cmp
lea
clc
mov
dec
add
test
ljmp
jae
cltd
in
stc
jb
sub
mov
jne
pusha
push
nop
add
mov
ja
dec
mov
ja
xor
jbe
fs
and
loope
sti
ret
jmp
repnz
ret
mov
cmpsl
test
testl
pop
andl
dec
mov
push
addr16
dec
ret
movsl
mov
sarl
repz
cmp
aas
lahf
loope
xorb
repz
in
jae
int
in
or
jp
jg
cs
push
out
push
imul
inc
lcall
popa
jo
push
test
jge
push
fldl
aam
dec
icebp
popf
adc
mov
inc
sbb
pop
int3
test
jge
xchg
pop
lcall
jo
add
out
adc
xadd
lods
stc
fsts
inc
cmpsl
push
test
out
sahf
push
popf
adc
test
sub
mov
add
je
negl
mov
pushf
loope
mov
loop
sbb
dec
xchg
aam
cmp
cmp
outsb
sbb
mov
mov
mov
push
jmp
mov
pushf
dec
lock
bswap
std
jp
outsl
cmc
xchg
cmp
mov
ret
xor
je
not
xor
in
jp
insb
testl
xor
xor
cld
jmp
jb
flds
dec
or
dec
cmp
outsb
cwtl
inc
dec
xchg
int
push
jnp
mov
add
xor
repnz
movb
insb
xchg
jmp
mov
mull
xor
loopne
xchg
push
rorb
mov
je
sbb
pushf
incb
xor
mov
je
std
and
sub
popf
mov
sti
insb
cltd
test
cs
ret
xor
fdivl
push
mov
inc
pop
fwait
mov
icebp
gs
hlt
mov
xor
jne
popa
shlb
hlt
push
pop
xchg
sub
repnz
test
out
cs
mov
mov
cmpsl
sub
and
loop
mov
sub
pop
xchg
out
cmp
imul
js
repnz
ficompl
mov
push
and
dec
daa
cmp
and
scas
int
jg
mov
dec
rcl
inc
fcom
ret
arpl
jecxz
rcll
cmp
test
fsubrp
aam
xor
xchg
cli
pop
popa
int3
arpl
sub
test
lock
ss
dec
xor
insl
rclb
fs
test
repnz
mov
and
mov
push
jecxz
push
ja
fcoml
mov
lea
icebp
cmp
sbb
dec
ret
pushf
xchg
and
and
rcrb
icebp
arpl
pop
xor
loopne
mov
scas
push
loopne
fdivp
push
cmp
ja
lods
or
jne
aas
imul
into
cmp
cld
rcll
adc
fidivrs
and
insb
xlat
je
fsubrl
xor
adc
int3
scas
scas
pop
icebp
or
add
cmp
jnp
mov
fldz
or
or
jmp
adc
pop
out
aad
xchg
add
scas
mov
aaa
cmp
pusha
mov
or
mov
ss
setbe
sbb
cwtl
jo
mov
addl
ret
push
lret
xchg
add
xor
push
pop
dec
cmp
fwait
test
divb
mov
xchg
or
ja
ret
sbb
push
inc
and
movsb
lret
leave
cwtl
iret
shl
add
mov
popa
stos
pushf
mov
stos
push
outsb
mov
out
enter
shll
mov
ss
jmp
pop
cmp
roll
ret
pop
mov
enter
es
ss
sbb
lahf
dec
sub
xchg
cs
jg
es
divl
adc
dec
sbb
mov
xchg
ds
mov
test
pop
xchg
sarb
lods
sahf
sbb
and
sarl
fldl
pop
cli
xchg
mov
or
xchg
mov
sub
in
jno
stos
add
andl
add
insl
xchg
loopne
xchg
cwtl
js
cmp
fnstenv
cs
add
mov
mov
fwait
lcall
insl
jmp
lods
cmp
mov
enter
imul
test
cmpsb
test
aaa
pop
fwait
inc
and
adc
lcall
mov
pop
pusha
mov
sub
das
xor
out
mov
psubsw
lea
push
dec
push
sub
out
enter
mov
mov
cmpsb
in
mov
or
enter
testb
insl
or
imul
mov
sbb
cmp
sbb
data16
bound
inc
sub
xchg
jp
inc
fnsave
or
mov
jge
mov
or
adc
mov
push
repnz
adc
inc
aad
xor
test
aaa
dec
loopne
es
mov
iret
mov
hlt
movsb
adc
cmp
xor
sub
xchg
insb
jle
fists
clc
out
sub
call
jmp
lcall
jl
insb
mov
add
bound
int3
clc
leave
imull
ja
mov
sub
jmp
and
icebp
jp
outsb
mov
dec
mov
cmp
out
mov
imul
movsl
dec
pop
add
sub
push
add
ljmpw
mov
push
push
adc
fs
sbb
int3
movsl
scas
adc
push
fisttps
rcr
sub
xchg
mov
lods
in
xor
int
sbb
lret
movsb
hlt
imul
add
mov
mov
sub
sub
fisubrs
or
jmp
into
and
mov
lods
and
pusha
cmp
fidivs
das
sbb
mov
inc
sub
adc
add
jl
in
xchg
imul
scas
lcall
and
dec
dec
adc
adc
shll
jecxz
xchg
xchg
das
fstps
jo
int
mov
test
pop
pop
stc
aam
adcl
fwait
inc
cmp
jmp
frstor
mov
mov
ljmp
mov
mov
xchg
mov
daa
jno
sub
dec
in
leave
inc
inc
cmpsb
pusha
xor
dec
jo
push
loope
sbb
sbb
arpl
xchg
xchg
flds
jmp
testl
jmp
jne
mov
sbb
mov
in
jecxz
cwtl
cmp
clc
or
arpl
xor
out
xor
sbb
mov
and
scas
stc
sub
aaa
xor
jb
cli
mov
ss
daa
xor
ret
adcl
cmp
fldcw
stos
inc
sub
adc
test
push
jne
push
test
outsl
mov
std
dec
mov
popf
mov
sub
imul
leave
gs
mov
push
mov
mov
pop
push
ljmp
out
jge
jae
sti
adcl
fdivrp
lods
fldenv
stos
sarl
sub
adc
fstps
xchg
dec
in
adc
in
mov
jb
mov
movsb
cmc
xchg
mov
popf
shl
jl
push
inc
add
movsl
fcoms
xchg
outsb
add
mov
std
lods
jge
pushf
xchg
push
orl
mov
scas
pop
out
es
xor
mov
inc
test
xor
pop
mov
push
mov
xchg
std
adc
ja
mov
bound
push
inc
inc
std
inc
lods
daa
dec
loope
xchg
daa
xchg
or
mov
loop
add
fistps
ljmp
mov
and
sarb
sbb
popf
add
int
out
insb
dec
jne
mov
adcl
pushf
pusha
mov
push
shll
in
jg
loop
movsb
sub
aam
test
adc
mov
fisttpl
cli
out
cmp
das
hlt
push
cld
sub
cmp
and
cmp
repz
js
cmpsl
mov
stc
and
mov
add
in
pop
fcmovne
test
mov
or
xor
sub
cmp
pusha
jae
aaa
add
sub
and
data16
enter
inc
push
xor
add
adc
ret
adc
ljmp
xchg
das
or
jp
pop
pop
adc
fs
test
xchg
or
int
out
inc
mov
lret
jnp
ret
push
sahf
push
sbb
dec
fdivrl
into
and
ss
leave
cmpsl
jecxz
inc
dec
mov
push
ljmp
gs
xchg
push
push
adc
sarl
and
cld
je
mov
jmp
into
cmp
hlt
ss
fiaddl
mov
sbb
subps
sub
test
xchg
ficoml
lcall
negb
push
gs
dec
jns
sahf
and
lret
or
es
lods
ja
mov
cs
add
mull
adc
lea
mov
out
xchg
pop
xlat
xchg
ret
mov
sahf
sub
mov
popf
int3
dec
pop
pop
enter
jge
or
fstpl
pop
pop
hlt
dec
bound
dec
fistpll
sub
and
movsl
xchg
push
in
stc
dec
mov
add
pop
mov
call
mov
lods
lock
pusha
icebp
leave
ds
cmp
sti
outsb
out
lcall
xchg
pop
jns
iret
add
aam
test
push
push
dec
fistl
mov
test
leave
push
and
ljmp
mov
je
lret
xchg
pop
cld
mov
rcrb
lods
pushf
movsb
inc
ret
test
push
inc
test
jl
mov
std
in
jge
in
fmuls
popa
cwtl
xor
or
popa
xchg
lret
dec
outsb
and
or
pop
sbb
fstpl
cmp
jmp
repz
repz
adc
frstor
push
jnp
sub
cmp
lods
loop
mov
cmpsl
inc
jae
mov
cwtl
sbb
aaa
dec
xor
mov
pop
lret
call
stc
sub
dec
mov
and
xchg
loope
test
pop
jecxz
loopne
pop
adc
cmp
jle
sub
xor
je
sub
test
mov
adc
cli
cwtl
adc
inc
or
ss
fadds
arpl
data16
cmp
xor
fcmovnb
out
clc
lods
in
cmpsl
xor
xchg
out
sbb
pusha
pusha
push
pop
aaa
inc
or
pop
outsb
lea
and
mov
gs
test
rolb
jae
and
or
push
gs
test
cmp
rorl
icebp
test
sahf
sub
mov
roll
les
pushl
inc
jle
add
mov
jb
mov
or
jecxz
mov
mov
pop
dec
dec
fisubrl
daa
adc
pop
sbb
ffree
shlb
les
lods
add
cwtl
movsl
pop
push
out
sahf
xchg
push
push
sbb
sub
xchg
mov
inc
in
lock
pusha
xor
fmull
xchg
mov
or
xor
ds
mov
insb
mov
mov
pop
movd
xlat
inc
jp
in
lcall
mov
lcall
mov
negb
cli
xor
out
jecxz
lock
sbb
sbb
pop
sar
xchg
sbbb
add
scas
ljmp
out
test
inc
dec
shll
xchg
stos
xor
push
jb
pop
xchg
adc
add
push
xchg
mov
scas
shl
daa
mov
imul
or
rcrl
adc
es
adc
fnstenv
cmp
ret
sbb
xor
cli
pop
and
ss
bound
stos
enter
or
mov
sub
inc
inc
idivl
movsb
adc
fs
enter
shrl
pop
into
cmp
xchg
push
aam
pop
sahf
and
outsl
mov
insb
cld
je
add
cmpl
pop
inc
mov
sbb
imul
inc
dec
out
out
pop
sahf
repnz
mov
cmp
ss
dec
imul
mov
mov
imul
fsubrs
movsb
dec
cli
inc
sub
mov
or
imul
mov
imul
in
ja
lods
out
mov
jae
pop
cltd
add
jg
stos
xlat
data16
ret
mov
dec
daa
aad
test
jl
rcll
test
dec
fcmovbe
ror
mov
dec
pop
in
or
add
repz
mov
cs
popa
pop
xor
mov
and
ss
xor
jne
stos
mov
std
sbb
lcall
adc
jns
jne
sbb
mov
pop
push
data16
xlat
in
fisttpll
cltd
pop
arpl
push
mov
cli
rcr
mov
lret
es
in
pop
enter
aad
rorl
dec
sbb
insb
lret
daa
call
lods
adc
mov
incl
hlt
insb
fnstsw
push
xlat
pop
push
xchg
jnp
jge
ljmp
mov
int3
xor
shl
lret
loop
daa
push
add
imul
sbb
pop
sub
xor
xor
jo
jle
or
cli
xchg
movsb
sub
andl
test
pop
mov
pushf
fsubs
mov
and
push
add
xchg
cltd
xlat
mov
sbb
pop
or
iret
out
popa
sti
unpckhps
jmp
push
fwait
xchg
mov
xchg
mov
and
push
cmp
les
std
fwait
mov
or
idivb
aam
push
inc
lods
jb
jmp
mov
fnstenv
ret
pop
dec
pop
mov
das
testl
cld
push
inc
pop
ss
jb
mov
xor
and
sub
int
push
or
rol
xor
popf
bound
jg
jmp
xor
jnp
scas
mov
lods
push
popa
pusha
sub
clc
mov
ljmp
xchg
push
dec
cmp
icebp
xor
cmp
sbb
into
push
dec
push
imul
inc
sub
xchg
data16
data16
xchg
daa
inc
adc
pusha
sbbb
push
adc
jns
adc
lcall
xor
and
xchg
das
into
rcl
inc
jle
xor
hlt
pop
cltd
inc
jl
mov
sbb
mov
scas
in
int3
xchg
xor
imul
fsubr
adc
in
sub
mov
lock
pop
popa
fldl
fdiv
mov
push
test
mov
or
push
stos
adc
xlat
negl
and
add
jecxz
pop
add
jmpw
xchg
xchg
loop
sub
int3
lods
or
imul
xor
mov
jg
stos
and
aad
in
test
xchg
cmp
imul
cwtl
fisttpll
jns
out
pop
loope
sub
or
jecxz
aad
movsl
jbe
jle
push
sarb
mov
push
test
sbb
mov
pusha
dec
stc
jmp
pop
push
daa
jmp
stos
scas
lret
cwtl
mov
insb
inc
ds
bound
pop
ss
or
insb
push
mov
jg
stc
mov
and
pop
xlat
bound
xor
or
fsub
pushf
cmp
jmp
call
inc
jmp
int3
out
pop
pop
andl
mov
jecxz
or
out
aas
push
push
mov
sub
sub
aas
or
cmp
rcll
sti
add
sarb
xor
cli
add
mov
fs
mov
in
or
in
mov
and
je
jle
pop
iret
dec
xchg
mov
pop
xlat
stos
cmc
pop
inc
sub
scas
jno
push
push
or
mov
or
or
xchg
mov
out
fwait
jnp
push
imul
lds
cmovg
std
fwait
movsb
pop
aam
subl
iret
sub
dec
arpl
cmpl
lock
stos
int
push
aaa
sub
stos
rcrb
sbb
add
mov
push
lds
popf
push
in
fstpl
ret
aas
push
and
inc
jecxz
shl
andl
adc
aas
lods
out
add
push
xchg
ss
mov
mov
xchg
ret
dec
xchg
xchg
mov
mov
pop
adc
daa
or
pop
or
insl
mov
roll
mov
push
adc
xor
lea
mov
adc
sub
mov
push
mov
xor
mov
data16
and
stos
mov
inc
lcall
inc
jecxz
xor
out
push
xlat
add
enter
sbb
dec
or
data16
sbb
jno
xlat
xchg
inc
enter
or
test
jl
es
cli
sbb
lods
and
mov
cmpsl
jno
cs
mov
dec
ds
cmc
aad
sbbb
in
mov
xor
and
mov
ss
cmpsb
push
and
lods
cs
roll
push
loopne
jae
out
add
jbe
cmp
jno
and
lods
call
fwait
xchg
xor
sub
and
and
sub
enter
add
mov
xor
mov
into
jp
mov
lahf
call
pop
cld
mov
jmp
outsb
bound
xor
ljmp
or
sarl
rol
mov
clc
cs
mov
shr
cmp
mov
lea
or
test
ds
mov
repz
pop
sub
movsb
ret
push
orl
mov
arpl
sbbb
pextrw
adc
xchg
repnz
out
pop
xor
div
nop
pop
dec
pop
inc
in
jnp
and
loopne
inc
mov
imul
scas
ljmp
mov
popa
ffree
dec
cld
dec
xchg
inc
xor
out
dec
lods
iret
insb
into
xor
clc
push
add
lret
mov
mov
mov
xchg
sbb
add
or
adc
nop
jo
dec
xorl
xchg
pop
xor
lahf
pop
xchg
inc
rcr
stos
and
xorb
in
push
into
cwtl
jg
mov
stos
fmul
add
fucom
rorb
lock
jecxz
inc
or
lods
into
mov
dec
dec
xor
rorl
mov
xchg
jno
lahf
out
pop
aam
aam
decb
pop
cmp
popa
inc
xorb
lret
inc
sti
mov
mov
movsl
shrl
cs
or
arpl
mov
popa
imull
cmpb
pop
and
cmp
cmc
mov
mull
sub
std
jb
pop
pop
imul
arpl
sbb
push
outsb
mov
push
call
xchg
and
pop
jnp
mov
xchg
sbb
sbb
sub
push
inc
or
dec
loopne
jecxz
imul
paddb
jnp
jmp
loope
jno
lds
pop
loopne
adc
xchg
xor
mov
subb
or
adc
dec
xor
arpl
je
push
push
pop
out
cmp
je
lret
pop
hlt
sub
bound
push
iret
cmpsb
xchg
movsl
test
and
cmc
rcll
into
lret
lea
cmp
and
lock
jecxz
fldl
jnp
xchg
mov
loop
testl
xchg
sbb
xchg
add
adcl
sbb
stos
in
mov
das
dec
dec
enter
rcrl
mov
inc
jne
and
ja
push
hlt
outsb
shrl
bound
je
dec
sbb
cmp
jns
xlat
dec
pop
shll
cli
mov
fwait
pop
loopne
and
mov
jp
or
idivb
leave
test
dec
out
and
sub
cmp
push
rorl
fcompl
loope
movsl
jge
dec
popa
in
in
lcall
pusha
mov
push
push
fs
jne
fwait
js
test
cli
loopne
adc
cmp
jecxz
add
popa
movsl
pop
xchg
dec
mov
sbb
daa
xlat
or
pusha
out
add
sbb
cmp
data16
xor
loop
loopne
std
fstpt
stos
mov
aas
ficomps
xor
and
js
mov
out
adc
bound
jmp
sbb
aas
repz
cmp
mov
cwtl
cld
xor
sub
inc
mov
inc
jne
jnp
jle
jmp
sub
inc
add
xchg
in
push
jb
test
xchg
dec
mov
jmp
add
fisubl
int
iret
or
xchg
ja
xor
notb
adc
das
lods
in
adc
fnstcw
repz
sub
lret
icebp
sub
repnz
jae
popa
daa
mov
movsb
movsl
xchg
inc
fdivrl
in
imul
jg
xor
add
not
insl
ljmp
enter
stos
nop
jno
xchg
push
mov
inc
or
cmp
test
enter
jnp
jge
call
leave
xlat
push
or
sub
xchg
hlt
incl
arpl
cwtl
mov
repz
pop
outsb
insl
xchg
sub
mov
pushf
dec
ljmp
cmp
mov
xchg
jl
movsl
inc
imul
jmp
inc
push
push
out
fwait
mov
stos
or
jecxz
rcrb
imull
inc
cmpsb
sbb
adc
pusha
mov
inc
or
lcall
out
inc
leave
mov
leave
repz
add
jo
xchg
pop
inc
xchg
sbb
fimuls
mov
in
imul
nop
xor
sahf
dec
mov
mov
xchg
test
cmpsl
sbb
inc
popf
xchg
out
das
sub
dec
xchg
xchg
movsb
mov
fcoml
mov
push
xchg
inc
jbe
js
jns
pusha
andl
and
add
and
test
adc
inc
or
sbb
mov
lret
lcall
cmpsl
cmp
cmc
push
push
stc
lret
sti
ss
int
or
jecxz
cmpsl
mov
loope
dec
in
test
fwait
lods
xor
inc
test
lock
cmp
out
imul
inc
cmc
in
test
xor
xchg
movl
mov
adc
xchg
addr16
jp
adc
int3
push
mov
fs
sub
out
sahf
sub
push
sbbb
mov
lcall
andb
repnz
mov
out
lds
pushf
and
inc
inc
jno
adc
lret
out
insb
ficomps
pop
sub
mov
and
repnz
xchg
sbb
daa
dec
fnstcw
sbb
mov
sbb
jg
mov
sbb
sub
dec
adc
dec
fwait
sbbb
int3
lods
fcomps
add
ja
add
jns
push
test
pop
fdiv
incl
scas
dec
aas
pop
ret
stos
outsl
pop
push
or
pusha
mov
sub
inc
fdivr
jnp
leave
jb
repnz
ss
fiadds
xchg
jnp
cmp
call
or
jecxz
sbb
xchg
ljmp
or
push
ret
or
sti
mov
dec
inc
cwtl
push
insl
mov
mov
dec
or
cwtl
leave
sub
repnz
mov
movsb
inc
cmp
jo
cmc
push
or
add
mov
ret
sub
or
sub
xor
cld
push
push
ret
add
mov
jp
xlat
pop
push
pop
hlt
pushf
lret
or
xor
or
mov
sub
xor
mov
subb
test
add
lock
pop
cmpsb
dec
cwtl
cmp
test
es
mov
xchg
cmp
xor
adc
mov
mov
sub
repnz
lock
or
jge
aaa
cli
jl
enter
cmp
inc
pop
inc
outsb
lea
or
fsubp
push
and
ret
inc
neg
pushf
std
rcrb
inc
pop
xor
scas
test
dec
add
int3
pop
xor
fisubl
cmp
mov
movsb
inc
jo
pop
mov
in
fucompp
pop
adc
mov
xor
inc
nop
mov
movsl
xor
out
in
lock
and
cltd
fimuls
loope
fsubl
test
cmpsl
insb
push
jns
pop
cmp
and
scas
pop
rcll
adcb
xchg
addb
xor
faddl
lret
repz
ror
sarl
in
sbb
xor
fnstsw
jge
dec
pop
jb
in
push
rorb
scas
sbb
call
push
cmp
adc
imul
and
scas
mov
mov
mov
ret
pushf
xchg
faddl
mov
pop
pop
jg
scas
es
in
mov
and
adc
repnz
inc
adc
sti
xlat
out
orb
call
fldl
mov
xchg
mov
clc
gs
outsl
arpl
lea
ss
or
adc
and
and
pop
or
xchg
sub
cmpsb
clc
and
push
in
jmp
push
fcoms
push
xor
push
std
loop
or
sub
mov
aas
movsb
inc
inc
inc
loop
addr16
lods
and
jl
movsl
sub
in
arpl
frstor
sub
sbbb
jb
sbb
push
push
mov
fwait
lret
repnz
add
jb
add
dec
inc
or
sarb
je
in
mov
imull
std
shr
stos
pop
out
movsl
mov
cltd
mov
bound
loopne
cs
xchg
fstpt
fld
lret
jne
mov
mov
fistps
mov
jmp
in
adc
jns
cmp
cmp
adc
xor
and
inc
fisubs
lret
lock
xor
insl
call
nop
jle
push
cs
divb
add
fdivs
je
mov
cli
inc
add
ja
push
pusha
ffree
subb
loopne
sub
jb
fimuls
and
push
and
sbb
cmpb
sahf
and
repnz
push
fstp
fstl
pop
jae
jge
imul
pusha
std
inc
sbb
or
push
mov
mov
push
mov
xlat
out
sub
sub
add
ror
cli
outsb
test
popf
sbb
sbbb
out
daa
mov
or
inc
data16
mov
push
sbb
nop
mov
jae
add
fucomip
bound
cmp
jno
loopne
cs
scas
pop
push
fcoms
cmp
inc
sub
sub
pop
icebp
jae
daa
aam
mov
lods
out
jmp
mov
jno
cli
into
mov
shlb
icebp
xchg
lods
xchg
mov
jle
notb
int
inc
mov
enter
nop
mov
push
sbb
add
and
pop
and
sti
adc
jge
dec
mov
mov
sti
cmp
adc
push
bt
jo
inc
pop
mov
imulb
and
jmp
fsubl
push
cmpb
fbstp
ret
lods
lret
scas
in
out
cmp
aam
pop
cld
push
aam
test
repnz
adc
shr
pop
lret
pop
push
pop
pop
rol
cs
test
lcall
cs
dec
xchg
jns
and
icebp
or
lods
in
sub
adc
fidivrl
mov
push
aam
push
lods
mov
lods
sbb
xor
inc
sbb
pop
add
out
xchg
ja
or
xor
inc
les
jl
addl
xor
mov
popf
roll
pop
push
cmp
dec
jns
jne
std
sbb
pop
outsb
insl
ds
cmpsb
aas
mov
repnz
fs
pop
mov
sub
add
aaa
stc
xchg
mov
xor
sbb
out
or
call
xor
lds
setns
jbe
les
adc
lcall
stos
mov
push
test
cmp
jo
fisubrl
pop
xor
mov
cwtl
adc
repz
cmc
cltd
cli
repnz
or
pusha
pop
out
sarb
std
dec
cmpsb
mov
ret
out
push
test
dec
and
mov
outsl
andl
sub
fstpl
sub
ljmp
into
push
ja
int3
fisttpl
lahf
daa
pop
ret
adc
lret
unpcklps
pop
sbbl
in
nop
inc
call
cs
lahf
or
push
shl
jp
cmp
push
and
xchg
dec
mov
shrb
nop
cmp
cmp
mov
fistpl
scas
das
scas
dec
shlb
add
testl
inc
movsl
out
arpl
popa
cmp
adc
push
in
es
mov
ds
pop
cmp
test
dec
jge
or
sbb
mov
cmp
test
push
hlt
dec
lret
lods
orl
fxch
adc
lods
stc
stos
push
xor
shr
add
mov
cwtl
and
pop
in
cmpsl
fcoml
imulb
in
sub
out
mov
jge
lret
mov
mov
jge
clc
push
shl
repnz
test
enter
sbb
icebp
mov
xchg
jo
pop
sbb
cmp
iret
inc
push
push
jl
and
jb
test
outsb
iret
in
add
lds
out
ret
divb
push
daa
adc
test
icebp
fisubl
or
repnz
stos
ds
loope
add
sbb
int3
xchg
inc
mov
mov
ret
das
mov
sti
pandn
sub
repz
mov
and
mov
sub
in
push
sti
add
fsubrs
mov
jo
adc
push
movntps
cs
jmp
sbb
pop
jo
mov
sbb
or
loop
inc
or
clc
cmp
push
nop
fldenv
jae
pop
pop
push
push
sub
adc
push
out
rcll
ret
jno
clc
add
jns
cmp
push
cli
mov
inc
out
xor
xchg
mov
addr16
ja
divb
mov
dec
mov
cmp
icebp
cli
add
xchg
sti
mov
jb
push
or
mov
in
push
jmp
je
adc
int3
add
pop
add
sub
addl
jae
jle
xorb
aas
mov
lea
mov
adc
aaa
shll
mov
dec
stc
jmp
cs
mov
sub
mov
stc
push
mov
int
add
mov
push
ret
push
pushf
sub
jmp
jge
call
and
lock
add
push
outsl
ret
and
fwait
push
shll
adc
lds
les
xor
adc
ret
out
orb
add
push
lret
je
mov
movsb
fpatan
mov
lret
sbbl
adc
inc
in
jge
test
cli
inc
jbe
cmp
adc
icebp
dec
xor
sbb
movsb
mov
iret
and
and
cmpsl
push
icebp
sub
adc
mov
outsb
jae
movsb
idiv
pop
jns
mov
in
or
inc
les
fcompl
push
sbb
stc
cmp
dec
test
dec
lods
icebp
test
out
js
jl
jge
jno
mov
xor
xchg
icebp
adc
jg
leave
push
clc
and
icebp
lods
fnstsw
jecxz
fs
mov
lock
dec
pop
popa
add
out
push
and
sbb
pop
movsbl
mov
movsb
int
stos
std
popa
cmp
add
lods
fsts
xchg
or
jnp
je
shrl
jb
mov
xlat
push
cmp
cwtl
jae
mov
add
js
push
dec
mov
and
mov
jmp
repnz
sub
sbb
inc
aas
add
inc
sbb
cmp
inc
inc
notl
xchg
into
xor
aas
jne
loope
xchg
xchg
rorl
xor
test
mov
test
pop
push
cmp
and
fs
fildll
xchg
dec
mov
push
nop
xchg
fistl
jmp
outsb
sbb
jo
xchg
cmp
inc
inc
xchg
push
arpl
scas
push
xchg
jmp
and
inc
sbb
rorb
xchg
fisubrl
les
sub
or
push
or
scas
jmp
popa
test
stc
jb
xlat
outsb
ss
pop
fdivl
rorl
sub
repnz
orl
dec
pop
lret
xlat
add
and
in
xchg
adc
inc
push
outsl
mov
mov
or
imul
leave
xchg
push
pusha
rcrb
mov
mov
inc
xor
movsb
inc
mov
xlat
jbe
sub
pop
aad
sbb
ds
pushf
xchg
push
push
xor
inc
xchg
bound
pusha
movsl
dec
adc
mov
jg
xorb
cld
data16
fisttpl
ret
int3
bound
lea
repz
push
and
shll
jbe
pop
ss
sub
sub
or
add
lods
push
jns
inc
cmp
inc
and
lret
fmuls
add
inc
or
cmpsl
call
pop
pop
mov
loope
xor
sbb
jg
mov
outsb
pmaxub
and
arpl
imulb
popa
clc
cs
inc
xchg
xor
push
push
in
push
adc
jmp
ja
movsl
aas
or
loopw
je
pop
call
outsb
popa
fsubrs
cwtl
push
xchg
push
es
sub
cmp
loopne
cmpsb
shr
aam
rcr
aad
mov
fcmovb
ret
outsb
cltd
andb
loope
mov
cmp
cltd
fsubrl
xchg
pop
and
push
cs
lock
out
les
pop
jne
push
jmp
cltd
jmp
ja
mov
sbb
test
lds
test
or
bound
cmc
iret
sbbl
stos
sbb
test
xor
mov
sub
mov
adc
lsl
sub
movsb
mov
cmc
sub
pavgb
into
mov
ja
hlt
pop
ljmp
sbb
push
ret
movsl
ja
aaa
jns
cmpsl
cltd
sar
addr16
cltd
push
and
cmpsb
xor
test
setp
sbb
mov
xchg
insb
mov
shlb
push
scas
inc
sub
adc
pop
jl
or
mov
loopne
dec
loop
imul
push
arpl
and
or
dec
jno
imul
xchg
cli
fistpll
add
jmp
cmp
enter
fsubs
xlat
jecxz
dec
push
ficoml
and
loopne
mov
int
into
jns
scas
sbb
daa
dec
push
xchg
inc
popf
push
cli
loop
shrb
dec
loope
ljmp
pop
add
imul
jmp
popf
cmc
hlt
dec
repnz
mov
iret
adc
scas
stc
lcall
dec
ja
lahf
push
ror
sub
ret
pop
dec
mov
cmp
insl
mov
loop
mov
push
rcrb
stc
shrb
in
arpl
push
insb
orb
lods
sub
dec
cmp
jecxz
push
iret
out
rcll
add
sti
jmp
cmp
dec
cwtl
stc
gs
sbb
int
sbb
leave
mov
fnstcw
stos
pusha
jmp
mov
ljmp
or
dec
jmp
daa
sbb
inc
add
xchg
pop
mov
cmp
int
lods
movzbl
pop
jmp
sbb
jns
rol
jo
push
daa
xchg
push
fbstp
xor
mov
mov
cli
xor
jge
dec
xchg
or
sbb
or
and
inc
sarb
insb
int
cld
pop
cmp
stc
mov
add
xlat
push
lds
fwait
mov
inc
add
sbb
mov
js
cmp
scas
in
sbb
cmp
xchg
pop
arpl
ds
push
int3
ror
adc
dec
mov
imul
pusha
adc
mov
movb
pop
jb
mov
mov
into
jb
call
fwait
lods
push
cmpsl
dec
jns
cmp
or
add
and
inc
sti
sbb
test
inc
insb
pop
sarl
arpl
addr16
add
ret
movsl
push
int3
sub
fidivs
jecxz
sbb
mov
loope
jo
lods
jmp
mov
loop
dec
sub
add
dec
fst
insb
jne
insl
dec
xlat
pop
xor
lret
mov
in
cmpsb
lods
pop
enter
das
cld
call
pop
outsl
sub
mov
adc
ds
movsb
outsl
xor
push
mov
cwtl
shlb
cli
mov
mov
in
mov
outsb
mov
cmp
clc
jecxz
fs
jl
dec
loope
cltd
inc
ds
ljmp
ja
cmp
push
xor
xchg
movsb
jle
fsubr
jnp
shrb
in
sub
daa
call
aas
push
popa
push
arpl
lock
loope
push
mov
add
jle
inc
inc
test
push
subb
out
sbb
lcall
or
insl
sub
jge
xchg
lods
