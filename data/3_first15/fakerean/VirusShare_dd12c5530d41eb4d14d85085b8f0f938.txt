subb
jnp
mov
jnp
xchg
test
dec
cmpl
sbb
lret
sbb
jl
xchg
test
mov
jnp
adc
mov
jp
jnp
sbb
jnp
je
jnp
int3
mov
ret
mov
in
mov
add
add
add
add
adc
jle
shl
jle
shl
jle
loopne
jle
loope
jle
int
jle
inc
icebp
jle
mov
lock
and
jle
xchg
jle
je
jle
sub
mov
in
jle
out
jle
leave
in
jle
js
jle
into
in
jle
jle
push
icebp
jle
add
add
add
add
sub
push
addr16
jle
sub
inc
pop
lock
lock
movsb
in
jle
in
jle
or
jle
in
jle
lock
shl
jle
cs
jle
push
icebp
jle
push
in
jle
shl
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
gs
xor
fs
insb
add
adc
add
add
add
cmp
cmp
add
jo
add
add
add
pop
xor
push
xor
add
add
je
outsl
arpl
push
imul
jb
je
inc
outsl
outsb
jae
insb
gs
jne
jo
je
push
je
jb
add
add
fs
imul
js
add
add
outsb
fs
imul
jne
gs
add
add
insb
outsl
arpl
imul
inc
insb
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
add
gs
je
dec
popa
jb
dec
imul
push
outsb
jb
imul
outsb
jae
insb
gs
dec
inc
add
add
gs
je
inc
imul
jns
js
add
add
je
outsl
insl
push
insb
jne
push
popa
arpl
addr16
outsb
jae
popa
insb
insb
push
je
je
jae
add
inc
gs
jbe
jb
popa
jo
gs
gs
insb
je
add
push
gs
imul
bound
push
arpl
add
je
popa
jo
push
popa
jb
insl
gs
jb
add
add
je
jns
je
insl
inc
imul
jns
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
je
imul
gs
js
add
inc
jb
popa
je
inc
imul
jns
add
add
jae
insl
gs
push
add
add
je
insb
insb
inc
imul
jns
add
add
inc
popa
fs
je
imul
add
add
je
gs
imul
gs
gs
jae
dec
jne
gs
add
inc
gs
jb
insl
gs
jb
arpl
add
inc
gs
outsb
arpl
je
jb
add
inc
outsb
jns
outsl
jo
jo
add
inc
gs
jb
outsl
jb
je
inc
insb
imul
inc
outsl
jb
popa
je
add
inc
gs
insb
imul
inc
outsl
jb
popa
je
popa
insl
gs
add
add
popa
jb
outsl
ja
jb
add
add
fs
gs
imul
jae
add
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
inc
imul
outsl
ja
js
add
add
fs
je
imul
dec
outsl
imul
inc
add
add
je
outsb
je
jb
popa
insb
push
imul
jae
add
inc
jb
popa
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
insl
push
outsl
inc
push
data16
add
add
jne
inc
insb
imul
inc
outsl
jb
popa
je
add
add
arpl
outsl
jo
jo
outsb
jne
add
push
popa
imul
je
jo
add
inc
push
gs
js
add
add
fs
outsb
jne
outsb
imul
add
inc
gs
insb
imul
je
add
inc
push
popa
imul
outsb
add
add
je
jo
inc
outsl
insl
jo
je
insb
popa
addr16
add
add
fs
insl
popa
addr16
add
add
jne
insb
push
arpl
add
outsl
ja
ja
gs
outsl
jo
jo
add
add
je
outsb
jne
je
imul
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
jne
gs
inc
inc
insb
push
popa
jb
insl
add
add
je
outsb
jne
je
insl
push
arpl
add
je
imul
add
je
outsb
arpl
je
jb
add
push
gs
jae
addr16
add
add
imul
ja
jb
insl
push
outsl
imul
imul
je
gs
add
inc
imul
outsl
ja
js
add
les
pop
inc
inc
inc
sub
add
lea
imul
inc
inc
sub
add
add
lea
movswl
dec
dec
sub
call
call
call
add
sub
lea
mov
call
dec
sub
inc
dec
sub
lea
mov
inc
call
call
dec
push
inc
call
dec
and
call
lea
mov
dec
inc
add
add
or
lea
movsbl
pop
dec
inc
sub
add
inc
pop
or
lea
pop
mov
dec
inc
dec
pop
dec
add
lea
mov
dec
inc
inc
dec
pop
or
lea
pop
mov
sub
mov
inc
inc
call
inc
and
lea
mov
ret
sub
add
push
inc
dec
push
or
lea
push
mov
inc
push
inc
sub
push
dec
sub
mov
lea
imul
push
inc
ret
push
sub
sub
add
add
lea
mov
inc
dec
dec
add
xor
lea
mov
sub
add
dec
inc
xor
lea
sub
dec
dec
dec
add
lea
add
inc
inc
jmp
fwait
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
jo
add
xchg
add
fwait
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
add
add
jne
add
xchg
adc
add
add
int
add
loop
add
repnz
add
adc
add
adc
add
adc
add
add
addr16
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
xor
add
inc
adc
add
imul
add
xchg
adc
add
mov
add
add
add
add
fiadds
roll
and
inc
and
movzbl
lea
mov
xor
add
inc
inc
dec
dec
or
lea
imul
add
inc
dec
dec
and
dec
jne
lea
mov
movswl
add
pop
inc
inc
pop
inc
or
pop
lea
imul
inc
add
add
dec
add
lea
mov
inc
inc
add
ret
push
add
dec
and
lea
mov
dec
sub
inc
push
push
push
push
inc
add
lea
push
mov
inc
dec
inc
add
xor
lea
movswl
dec
mov
add
push
sub
dec
xor
and
lea
push
movzbl
dec
push
dec
dec
pushl
add
call
or
add
lea
mov
dec
dec
inc
add
and
pop
ret
lea
mov
inc
add
dec
cmp
jb
inc
xor
and
lea
mov
dec
mov
add
add
inc
add
sub
lea
mov
sub
inc
mov
dec
dec
cmp
jb
or
mov
lea
mov
xor
dec
add
xor
dec
add
pop
xor
lea
test
jbe
movzwl
add
add
sub
sub
sub
lea
imul
sub
dec
inc
inc
or
lea
mov
inc
dec
inc
inc
inc
and
lea
movzbl
add
and
inc
inc
mov
inc
or
movzbl
lea
mov
add
inc
add
and
add
add
mov
xor
lea
mov
mov
inc
mov
inc
inc
mov
dec
add
lea
sub
dec
dec
jne
dec
mov
inc
xor
lea
mov
inc
dec
inc
dec
xor
lea
mov
imul
sub
add
dec
sub
sub
lea
mov
mov
dec
add
test
jbe
inc
inc
add
lea
mov
dec
add
dec
dec
xor
lea
mov
add
inc
inc
inc
dec
add
lea
mov
dec
inc
and
sub
inc
mov
and
lea
movzbl
imul
add
add
inc
add
and
dec
or
mov
lea
mov
movzbl
dec
inc
mov
inc
add
mov
sub
lea
movzbl
mov
jmp
dec
add
lea
movsbl
inc
inc
inc
sub
add
lea
movzbl
add
inc
dec
inc
or
lea
mov
pop
ret
push
add
dec
dec
dec
sub
lea
mov
sub
sub
inc
dec
add
sub
lea
imul
inc
dec
dec
inc
or
lea
mov
inc
inc
sub
inc
and
lea
movsbl
dec
push
dec
inc
push
dec
and
push
lea
call
mov
sub
dec
sub
add
mov
add
lea
push
mov
add
pop
inc
add
or
sub
sub
lea
mov
inc
dec
cmp
je
inc
push
dec
call
xor
int
lea
movsbl
ret
dec
add
pop
sub
ret
push
add
push
or
lea
push
mov
push
add
push
add
dec
push
inc
xor
lea
mov
inc
call
add
push
add
add
add
mov
lea
mov
mov
inc
mov
sub
inc
test
je
inc
sub
lea
movzbl
inc
inc
inc
inc
sub
mov
lea
imul
sub
dec
inc
add
xor
lea
repnz
mov
inc
add
inc
jmp
jmp
sub
dec
or
lea
mov
inc
add
add
add
sub
lea
movsbl
pop
pop
ret
push
inc
inc
inc
inc
and
lea
imul
add
inc
add
add
xor
lea
imul
add
sub
dec
inc
sub
lea
movzbl
inc
sub
inc
add
and
lea
imul
pop
ret
sub
dec
mov
add
inc
mov
dec
add
mov
lea
movzbl
mov
inc
dec
xor
inc
inc
mov
and
lea
inc
mov
add
inc
dec
inc
add
cmp
jb
lea
push
mov
dec
push
sub
inc
push
sub
sub
mov
lea
mov
xor
dec
add
xor
add
inc
xor
sub
lea
push
movsbl
add
xor
inc
add
mov
add
and
mov
lea
imul
movzbl
sub
inc
dec
dec
add
add
lea
add
imul
dec
movzbl
inc
sub
add
xor
lea
mov
dec
inc
inc
inc
inc
mov
and
jmp
int
inc
pop
sbb
jecxz
test
dec
mov
rcll
jnp
imul
lock
fwait
rorb
or
sbb
add
sahf
jbe
das
scas
jl
ja
push
hlt
mov
jnp
jb
leave
sti
xchg
icebp
jb
icebp
nop
xchg
push
mov
test
mov
adc
xchg
cmc
push
jg
arpl
sub
rcrb
inc
cwtl
dec
lcall
jmp
sub
hlt
jge
out
out
xchg
xor
jecxz
cwtl
int
adc
stos
inc
lret
push
pop
repnz
cmpsb
mov
fcom
xlat
int
pop
lahf
into
or
add
xor
mov
dec
adc
test
aas
xchg
mov
fistl
pop
cwtl
xor
xchg
addr16
aad
adc
aas
xor
xor
rcrb
push
jbe
or
pop
test
jge
stc
jl
xchg
push
lret
pop
push
idivb
out
mov
aaa
xchg
loope
mov
aam
scas
cwtl
xlat
fstp
mov
push
leave
pusha
jns
push
sub
jbe
and
push
je
jno
ljmp
test
mov
sti
int
sti
push
or
add
xor
xor
ljmp
stc
mov
fcomp
mov
xchg
xor
fdiv
jecxz
jno
xchg
mov
test
xchg
add
enter
push
sbb
das
and
stos
imul
int3
pushf
cli
and
jl
lds
xchg
pop
out
cs
pop
nop
dec
push
sbbl
cmp
bound
dec
mov
jns
jmp
roll
or
ds
decb
sbb
or
xor
xchg
pop
psubusb
or
jne
aam
xor
rolb
ficomps
add
repnz
mov
xchg
pop
mov
movsb
jp
lahf
xor
stc
fstl
movsl
loopne
and
rclb
fxch
filds
push
loop
rclb
mov
fwait
pusha
loop
jecxz
inc
in
xchg
jae
jne
fsubrl
mov
add
pop
fnstcw
out
add
add
mov
inc
in
lds
pop
das
inc
repnz
mov
repnz
sub
dec
jle
add
test
pop
cld
jecxz
sbb
xchg
cmp
xchg
xor
sub
cltd
push
push
lea
push
rorb
decl
stos
pushw
movsl
cs
add
mov
das
inc
icebp
add
dec
mov
mov
sti
outsl
lock
xor
jle
insl
repnz
adc
rorl
or
shrb
inc
mov
outsl
push
outsb
adc
cmpsl
cwtl
iret
mov
outsl
shl
jo
adc
xchg
jbe
into
mov
push
insl
and
repz
pop
push
inc
adc
cmp
jo
and
xlat
adc
insl
push
icebp
ljmp
ror
hlt
in
add
mov
nop
cmp
aaa
shll
pushf
rorb
mov
pop
out
pusha
push
mov
ret
pop
lods
cmp
mov
insb
xchg
push
pop
push
arpl
imul
mov
jle
mov
sbb
jns
fdivr
stc
or
test
mov
pop
sub
xchg
fmulp
inc
imul
rorl
mov
sbb
lods
mov
fcoml
mov
mov
aam
test
mov
cmpsb
test
fwait
dec
pop
enter
pop
je
cmp
inc
insb
out
mov
test
pop
pop
mov
je
fadd
decb
jbe
push
adc
or
dec
adc
xchg
xchg
rcrl
lods
add
lret
xor
mov
xchg
fwait
push
mov
clc
mov
mov
push
dec
jle
das
lock
xor
sbbb
or
pusha
das
sub
ud2
dec
mov
or
dec
and
xor
rcr
movsl
sbb
xchg
call
push
mov
lret
pop
xchg
jns
push
lods
or
sbb
adc
fidivrl
int
adc
push
popa
fs
sti
push
shll
dec
enter
jno
or
jae
loop
sbb
in
movsl
adc
ljmp
lahf
sbb
aad
add
mov
add
mov
cmp
mov
lret
ret
cmp
mov
xlat
ret
cmp
rcrl
dec
test
pushf
pop
sbb
sub
dec
push
es
lret
and
cmp
nop
lcall
pusha
xchg
cmp
andb
adc
xor
imul
enter
in
call
test
inc
mov
add
hlt
mov
arpl
sbbl
jp
enter
jge
push
xchg
cmp
stos
fdivs
in
and
xchg
scas
pop
test
xchg
jl
testb
gs
and
xchg
xor
or
rclb
push
std
mov
xchg
les
sub
test
mov
push
and
sub
repz
dec
rcr
mov
shll
push
fcom
data16
stc
xchg
aad
leave
cmpsb
adc
xchg
cld
aam
mov
ds
add
sub
sahf
jg
jnp
fsts
adc
mov
xchg
insl
fsubs
sub
cmp
push
dec
jno
or
das
mov
xchg
xchg
dec
addr16
xchg
mov
jno
ret
mov
mov
pop
jns
inc
cwtl
loopne
inc
fmulp
adc
add
xor
rcrl
jno
adc
pop
sub
hlt
rcrb
mov
test
out
inc
imul
xchg
and
mov
add
mov
pop
jl
mov
popf
daa
pop
ja
xchg
mov
mov
dec
das
xor
lods
xchg
mov
and
and
decb
test
aaa
jbe
insb
into
aaa
lods
enter
jnp
mov
or
enter
cmp
repz
push
movsb
arpl
sub
cmp
mov
xchg
out
pop
pusha
mov
jl
js
mov
xchg
mov
nop
out
insb
mov
add
int3
imul
pop
frstor
sbb
jnp
pop
xchg
clc
mov
mov
mov
push
cltd
xor
hlt
and
pop
ror
aam
pop
pop
push
mov
sbb
fsts
and
jne
add
or
outsb
xor
ret
jmp
xchg
cmp
bound
xchg
je
mov
ret
orl
xlat
pop
sub
fdivrs
sti
xor
cwtl
lret
inc
scas
ret
jmp
and
pushf
add
int3
out
mov
sbb
js
sub
sti
cmp
xor
test
aaa
xchg
mov
cmp
add
lods
sub
fwait
push
adcl
rorl
test
pop
mulb
rorl
sub
leave
sub
mov
rcll
push
inc
xchg
fwait
jmp
adc
les
adc
push
push
xor
xchg
xchg
jecxz
es
xchg
pop
push
xor
jg
adc
call
jb
in
mov
ret
ljmp
stc
pop
jp
push
stos
sub
movsb
iret
push
jge
dec
cmp
push
cmpl
dec
jle
test
jp
pop
popf
dec
and
lods
dec
xchg
sahf
cmp
and
fisubrl
dec
jge
sbb
movsb
fmull
les
jbe
pop
iret
loop
andb
add
xabort
add
sub
gs
data16
cli
icebp
xor
dec
out
lds
push
inc
adc
bound
push
sub
push
les
fistps
mov
and
add
incb
das
mov
sbb
add
imul
in
pop
pop
or
jmp
inc
sub
out
xchg
push
out
lret
xchg
pop
dec
jo
daa
test
insb
or
mov
pop
lret
mov
enter
dec
xchg
push
xor
fs
jp
pop
pop
cld
bound
xor
movsb
xchg
xchg
clc
dec
cmc
lods
mov
fcomp
adc
push
pop
or
test
xchg
mov
int
or
ficoml
out
fucomi
imul
push
push
lret
sti
scas
enter
inc
jae
push
popa
inc
push
js
and
das
cmp
push
mov
xchg
lret
test
dec
lods
or
mov
dec
push
gs
jge
adc
mov
mov
sub
aad
loop
loopne
mov
loop
fsts
and
and
push
out
xchg
movups
add
leave
das
addl
jmp
dec
fsubl
jb
and
xchg
jns
ja
mov
mov
dec
pop
frstor
pushf
hlt
jle
movl
enter
xchg
negl
roll
adc
movsl
and
pop
lds
adc
cmp
inc
cmpsb
pop
divb
cltd
mov
push
cmpb
or
xchg
jno
mov
mov
nop
cmc
mov
es
sbb
addl
popa
mov
mov
ss
sub
sbbb
or
out
bswap
std
fsubrs
shl
cmp
mov
das
imul
test
lods
jg
mov
dec
es
mov
std
push
mov
push
addb
aam
mov
arpl
lock
xor
enter
pop
int
in
and
lret
les
subb
jp
xor
inc
xchg
ret
imul
push
daa
and
dec
or
cmpsb
in
push
push
scas
icebp
push
out
fcmovbe
push
in
movsl
aas
scas
push
or
xchg
push
leave
mov
and
sbb
ja
pop
jecxz
push
inc
push
add
pop
xchg
pop
cmpsl
test
scas
pop
add
dec
add
xchg
test
dec
test
jp
aaa
fs
dec
lock
jo
pop
and
inc
popf
and
mov
mov
pop
ret
loopne
popa
adc
sahf
cmpl
fadd
std
cmp
push
adc
mov
std
jle
and
jg,pn
cmp
test
out
sti
lret
sahf
lcall
mov
mov
rcl
add
adcb
inc
iret
inc
mov
shrb
arpl
and
stos
aad
cli
pop
push
cli
dec
cmp
cmp
shlb
xchg
mov
cwtl
mov
sbb
pop
mov
clc
mov
in
mov
mov
repz
sbb
test
jmp
aaa
dec
jns
add
dec
mov
pop
dec
adc
cltd
sbb
andb
in
sbb
out
sarl
ljmp
jp
ret
into
pop
cli
xorb
ret
loope
cli
push
cltd
mov
mov
fcomps
inc
sub
lds
sub
pop
daa
pop
psrlq
and
push
mov
adc
cmp
divb
mov
and
jnp
aad
xorl
lret
push
sbb
fisubrl
lds
movsl
es
jb
jbe
cltd
inc
in
nop
push
retw
cmp
rorb
jle
pop
jg
push
sub
xlat
ss
jecxz
ljmp
jge
sbb
mov
xor
dec
sbb
push
shlb
adc
decl
insl
rcrl
mov
jae
mov
push
mov
sbb
insl
mov
cmp
loopne
outsl
lret
jl
sbb
inc
sahf
cltd
sub
icebp
mov
inc
sub
pop
int
aas
sbb
mov
pop
hlt
sbbb
pop
pop
in
push
and
sbb
push
pop
mov
push
inc
sbb
xor
es
jno
data16
or
movsb
xor
scas
mov
adc
sub
lcall
fnstcw
or
cmp
mov
repz
mov
test
pop
xor
mov
lods
push
bound
mov
xchg
inc
ret
daa
cld
test
sub
mov
push
pop
sub
aas
lods
addr16
mov
jmp
test
dec
cli
mov
pop
outsb
pop
and
dec
lret
jl
jg
emms
in
shl
sbb
hlt
dec
iret
clc
jl
aaa
sbb
fnstsw
or
mov
jno
call
loopne
outsl
pusha
lcall
in
ret
insl
push
cmp
pop
icebp
stc
adcl
xchg
dec
inc
cld
mov
je
mov
sbb
scas
adc
and
sbb
sahf
jnp
mov
push
ds
jno
bound
lret
mov
std
cmp
imulb
fdivl
push
lret
hlt
xlat
inc
sbb
jp
mov
mov
push
inc
ds
jg
xchg
aam
sub
daa
or
inc
cwtl
and
add
add
sub
iret
push
push
sub
aaa
iret
jmp
pminub
sub
enter
lods
push
mov
jmp
fcoml
adc
call
aas
mov
and
enter
adc
and
vpperm
pop
outsl
pop
pop
mov
icebp
and
add
jbe
mov
aad
sbbb
lea
jg
shll
push
xchg
cmpsl
inc
push
fnstsw
fs
jne
int3
int
fsts
dec
aam
popa
xor
clc
dec
dec
ja
aam
stos
jl
insl
add
add
mov
sti
shll
jle
push
repz
setns
jno
push
into
and
iret
dec
mov
cmp
test
cld
ret
pusha
push
xor
sbb
mov
or
sti
fiadds
testb
add
imul
cmp
dec
fistpll
in
mov
sub
mov
out
int
shll
into
sub
mov
mov
jecxz
pop
jo
and
cmpsl
lret
cmp
inc
aam
test
js
jmp
enter
jg
cltd
xchg
cmp
stos
pop
mov
and
and
cwtl
imul
pop
imul
mov
cs
repz
jo
test
setae
jo
sti
adc
dec
add
xchg
dec
icebp
stos
add
in
pop
pop
mov
inc
es
ja
in
pop
aaa
in
imul
imul
jne
dec
cmp
je
gs
jne
xor
xchg
adc
add
sub
out
xchg
stos
add
adc
test
mov
nop
push
add
jae
mov
mov
push
xlat
test
fwait
dec
mov
xchg
adcb
add
cmp
insb
and
cmp
pop
mov
mov
pop
ja
push
sbb
fildl
pop
sarl
mov
inc
sbb
fisttps
ja
and
je
lods
gs
push
fcmovbe
dec
or
pop
gs
daa
lods
mov
mov
imul
mov
ficoml
sub
dec
mov
add
ret
shrb
adc
mov
imul
sbb
mov
mov
mov
enter
jo
sahf
mov
push
or
or
inc
es
mov
dec
pop
adc
mov
xor
aaa
mov
xor
stc
cmpsb
cmp
mov
xchg
inc
xor
arpl
orb
push
sbb
jp
sub
jle
mov
inc
add
mov
jge
sbb
aad
mov
inc
push
int
cmp
int3
mov
add
js
pop
aaa
pop
int
mov
cmp
fmuls
and
cli
jle
xchg
pop
test
popf
js
sub
sbbb
mov
or
mov
and
or
dec
fmull
aad
pop
aas
jmp
push
cmp
push
sar
dec
cmp
cmp
jecxz
je
dec
btr
pushl
sub
js
push
cwtl
sub
pop
imul
pop
jns
mov
adc
stos
incb
pop
xchg
push
cltd
ds
addr16
sbbb
loopne
popf
imul
cmpsl
cmp
imulb
outsl
aam
aaa
repnz
out
fcomps
icebp
sub
shll
inc
sbb
cmc
add
jo
lods
jae
pop
mov
mov
jg
enter
xchg
inc
andb
aam
pop
aas
addr16
and
mov
dec
sub
jne
cld
or
shll
mov
jo
ja
aam
data16
push
push
cmp
lea
out
jg
test
es
lds
jnp
ljmp
scas
dec
into
std
rcrb
scas
testl
xor
loop
dec
out
pop
data16
cmp
fisubrl
sahf
jg
in
lcall
mov
xlat
mov
adc
xor
fadd
and
inc
pushf
pop
sbb
nop
inc
push
in
or
or
into
xchg
sub
dec
int3
mov
sbb
xchg
jae
lret
shrl
and
xchg
mov
dec
ds
insb
filds
popf
jl
dec
idivl
pop
call
shrl
out
push
mov
rolb
cwtl
lods
inc
mov
dec
sbb
aas
fsubrl
mov
mov
fdivrs
test
repz
jnp
clc
ret
cltd
fwait
mov
mov
push
rorb
fs
xlat
int3
outsb
movsb
inc
dec
push
cltd
jle
push
jge
out
add
inc
mov
add
pop
xlat
push
pop
xor
xor
ds
sar
jp
in
sbb
out
cld
repnz
inc
js
mov
das
arpl
stos
and
mov
xchg
and
push
mov
sti
adc
jno
push
and
std
inc
mov
and
jp
inc
pop
repnz
adc
inc
pop
jne
mov
xchg
cltd
aam
mov
in
arpl
faddl
stc
stos
call
loope
or
or
decl
or
ja
cltd
sbb
fistps
fnsave
movb
aad
inc
pop
push
movsb
jne
lret
adc
xchg
mov
imul
jp
pop
gs
imul
pop
pop
imul
mov
push
rcr
cmp
adc
loop
dec
pusha
loopne
jecxz
stos
addr16
sbb
out
jno
and
push
push
out
ret
out
ds
push
sbb
inc
div
sarl
test
fdivl
cmp
int3
call
int
lods
or
sub
lds
sbb
cmp
cmp
sbb
sub
jnp
loope
sub
hlt
mov
xor
ficoms
xor
mov
mov
ss
push
or
outsb
dec
add
nop
mov
xor
ja
imul
jle
xor
push
out
mov
and
cmp
cmp
mov
sbb
jbe
int3
aad
lret
cmp
lods
sub
rolb
lret
or
sub
dec
faddl
ret
sbb
add
jb
or
xor
or
popa
lds
xchg
data16
nop
or
stos
cmp
push
mov
mov
and
insl
pop
xor
rcll
je
ljmp
fstpt
mov
fsubrs
mov
in
sub
xlat
addb
insl
push
pop
iret
pop
sbb
push
pop
leave
add
sub
dec
or
rcll
dec
push
cmp
ljmp
fdivrl
sub
sub
jae
inc
test
or
out
or
iret
fwait
leave
jns
mov
adc
add
pop
xor
mov
cmp
lret
rorb
adc
mov
std
or
mov
stos
add
and
loopne
add
daa
sbb
into
push
pop
push
sbb
cwtl
mov
jp
inc
enter
rcr
mov
out
stos
ja
inc
js
or
test
andb
mov
js
dec
jne
aas
idiv
aas
es
out
rcrl
ret
dec
dec
xchg
icebp
test
rcl
push
adc
sbb
pop
out
test
push
cmpsl
mov
xchg
mov
bound
outsb
cmp
dec
testl
dec
mov
daa
sahf
jo
xchg
cmp
rcrb
loopne
add
xchg
iret
incl
mov
push
pop
dec
or
jge
jp
pop
cmp
xor
lret
mov
and
jmp
ja
lds
mov
sub
call
xor
cmc
int
inc
adc
fadds
push
ror
inc
ret
sub
xchg
jecxz
arpl
out
fwait
imul
xor
adc
stos
rolb
ds
mov
xchg
inc
mov
aam
fisttps
clc
push
mov
and
sub
clc
jae
mov
pusha
xchg
loope
and
std
mov
jno
incl
dec
daa
jp
gs
mov
daa
add
or
fwait
std
add
push
mov
jp
xchg
cltd
sbb
inc
pusha
mov
cmp
inc
and
sti
loop
subb
xchg
push
mov
jo
pop
mov
orl
test
and
sbb
movsb
sahf
pop
jle
cltd
and
and
cld
mov
hlt
xchg
pop
insl
jne
adcb
js
aad
mov
scas
into
fstpt
ds
test
dec
outsb
jae
stc
rorb
and
mov
daa
repnz
fwait
in
stos
jecxz
pop
xor
lret
xchg
testl
out
sbb
jo
int
mov
mov
lret
data16
sub
jne
loope
pop
xor
push
mov
jnp
leave
pop
xchg
inc
pop
push
sti
lock
cmpsl
mov
mov
sbbl
testl
in
adc
pop
mov
xchg
sarl
pop
insb
lods
bound
repz
inc
imul
sub
test
sbb
in
jb
icebp
and
push
push
jge
lods
push
loopne
pop
mov
xor
je
pushf
dec
mov
jb
fstl
iret
pop
ret
sarb
adc
push
xor
sbb
cltd
cmpsb
test
lods
in
stos
cmp
cmp
je
cmp
sbb
stc
out
mov
ds
mov
xchg
mov
sub
xchg
xor
push
test
push
sbb
out
lret
mov
mov
lcall
or
fldl
std
dec
dec
fadd
inc
in
sub
int
movsl
shl
lds
xchg
push
mov
std
ja
in
jb
inc
mov
sub
dec
movsb
rcrb
popf
scas
out
push
cmp
sbb
xor
and
ja
bound
pop
insb
jb
das
rclb
xor
out
pop
test
gs
fcmove
fs
push
cs
inc
mov
fsubl
mov
dec
pop
cmp
call
es
jb
add
adc
add
enter
aam
or
or
mov
mov
addr16
popa
adc
xchg
mov
mov
jae
push
sti
sbbb
sbb
pop
push
lret
add
stos
frstor
sbb
scas
fnstenv
push
sbb
sbb
scas
dec
jmp
aas
pop
fiadds
adc
pop
out
and
jb
mov
lods
jo
mov
std
jmp
int
push
leave
ja
push
mov
cmc
mov
pop
push
add
lcall
mov
push
mov
fisubl
sub
das
mov
sbb
or
mov
lcall
push
mov
popa
xchg
lods
pop
fistps
aad
xor
push
and
inc
sbb
xchg
mov
mov
inc
cmp
mov
jno
xor
cmp
adc
add
add
and
add
cwtl
pop
cwtl
push
add
movd
pop
stos
outsb
xchg
sub
nop
out
pushf
incl
cwtl
xchg
outsl
ret
cmpsb
negl
push
nop
je
pushf
cld
into
loopne
dec
sub
inc
mulb
adc
cmp
lahf
scas
sub
pusha
sub
inc
cmpsb
cs
testb
push
daa
push
popf
cs
inc
adcl
push
xchg
cmp
out
std
dec
jae
cmp
mov
or
xlat
jl
pop
dec
in
dec
movsb
sub
pop
mov
ljmp
jns
push
fisttpll
add
inc
cmpsb
add
scas
rorb
lahf
jg
cmp
jnp
fsubrl
or
popa
cli
rcr
iret
loopne
mov
cs
arpl
divl
push
add
out
shl
test
scas
add
cwtl
sbb
scas
pop
cmp
jne
add
mov
cli
stos
ja
insl
cmpsl
bound
cs
add
mov
je
repnz
pop
sub
jae
xor
out
lcall
ja
jo
sarb
lock
and
mov
sbb
or
sub
add
call
mov
push
xchg
cli
outsl
jmp
addr16
aas
aad
cmp
inc
xchg
jp
xchg
and
cwtl
popa
int
adc
in
add
aaa
xchg
sar
andl
jp
mov
mov
push
push
cmpl
and
jle
scas
popf
xor
dec
std
jo
and
stos
jbe
mov
mov
push
mov
dec
push
enter
or
sti
dec
sub
sbb
movsb
pop
les
sub
js
mov
popf
dec
add
pop
je
add
test
xchg
aam
popf
icebp
jle
dec
andl
in
pop
pop
fistl
add
cwtl
mov
cmp
push
mov
jns
push
sub
and
or
movsl
mov
clc
push
popf
mov
xchg
repnz
arpl
jmp
subb
out
dec
scas
mov
dec
mov
xor
pushf
leave
jle
cltd
xor
sub
or
pusha
lret
cmp
sub
roll
or
push
xchg
in
mov
outsb
insb
sbb
shl
dec
iret
rorl
fs
push
push
mov
nop
pop
pushf
mov
lret
xlat
lea
lahf
sbb
add
xchg
pushf
repz
push
xor
pusha
dec
inc
sbb
jecxz
sub
test
pop
cmp
cli
dec
jb
stc
pop
loop
add
mov
sub
dec
adc
mov
js
mov
xor
jae
mulb
scas
push
cmp
xor
jmp
xchg
xor
loopne
sub
sbb
mov
ds
mov
jnp
adc
add
xchg
jmp
arpl
jl
pop
xor
mov
dec
adc
repz
scas
mov
adcl
int
sub
aad
pop
dec
adc
cs
out
testb
push
mov
test
jb
adc
mov
sub
popa
sbb
pop
lods
and
stos
andl
out
adc
into
out
arpl
and
arpl
ja
push
cld
ss
pop
mov
xchg
push
xchg
repnz
sub
mov
es
stos
cmp
cwtl
daa
jbe
xor
push
test
sahf
push
fistps
out
sub
dec
fincstp
jbe
inc
push
into
jo
test
mov
inc
mov
push
xchg
xchg
jb
fucomi
jno
adc
sti
test
fwait
sub
fistps
aad
test
pop
into
push
push
lods
push
inc
les
jle
mov
xchg
ss
repz
add
sbb
jle
lods
ret
cmp
pushf
push
mov
daa
out
mov
cmc
jmp
mov
mov
inc
sbb
ds
shll
jne
xchg
loopne
out
mov
pop
mov
cmp
dec
pop
mov
popl
and
jle
adc
lods
push
nop
sub
mov
js
xor
rorb
xor
inc
icebp
cmp
rcrl
xchg
cmp
jl
es
fisttpll
push
mov
mov
xchg
dec
loop
dec
out
cwtl
and
mov
nop
scas
fldt
icebp
scas
xchg
sub
pushf
cwtl
gs
lock
adc
pop
xor
std
push
xchg
insb
jae
in
or
std
pop
call
clc
aas
cmpsb
int3
cmp
hlt
sub
sub
jae
sub
fcomp
push
adc
xchg
sbb
popa
sbbl
mov
fwait
pop
in
fcmovb
lcall
in
in
mov
sub
outsl
push
xlat
xor
and
movsb
cmp
ret
pop
xor
test
inc
movsb
rol
imul
testb
rcrb
sub
sub
xchg
je
pop
push
sub
pop
and
mov
mov
sar
repnz
imul
imul
out
addr16
shl
add
je
pop
jp
xor
mov
inc
jle
pop
mov
into
popa
lods
jb
jnp
cmp
cmpsl
mov
shlb
sbb
pop
add
jnp
cld
das
jo
cs
sbb
adc
dec
dec
xlat
mov
pusha
cmp
jmp
lret
adc
or
les
rclb
sbb
jge
call
out
out
mov
mov
adc
pop
jecxz
and
mov
nop
jge
call
mov
cltd
je
test
sbb
pop
mov
orb
mov
add
add
xchg
dec
add
mul
cmc
lea
mov
es
pop
ds
shl
and
inc
dec
push
bound
aad
insl
and
sbb
or
loop
add
sub
lds
xor
mov
mov
shll
movl
pop
inc
pop
jne
movsb
notl
or
pop
jbe
add
or
lcall
dec
sbb
aas
fmulp
xor
int3
mov
jo
cli
pusha
pop
mov
adc
push
das
dec
push
sub
jns
pop
fs
jbe
cmp
dec
sub
outsb
push
icebp
pop
sub
cs
cld
jmp
push
or
es
dec
lds
sub
loop
imul
jge
out
sbb
fs
jno
je
xor
add
popf
icebp
cltd
movsb
mov
mov
mov
movsl
push
sbb
xchg
rcrb
cmp
lods
mov
adc
xchg
lods
rolb
mov
mov
out
mov
and
xor
mov
loopne
loopne
inc
mov
insl
outsb
mov
dec
mov
lea
cld
insl
sti
xchg
mov
cmc
push
sub
aam
push
test
jb
adc
out
popa
rclb
nop
jmp
mov
ja
and
xchg
outsb
add
jmp
pop
pop
push
push
adc
in
push
mov
pop
xchg
sub
mov
gs
xchg
jl
add
mov
sbb
mov
xor
enterw
pop
and
pop
sbbl
and
mov
lret
push
pop
xor
cmp
out
and
pop
mov
mov
addr16
dec
inc
xchg
xor
loopne
outsl
sti
xchg
or
jp
popl
xor
mov
add
popf
mov
push
pop
xlat
or
jle
cmp
scas
fnstcw
or
js
xchg
sti
mov
lea
push
xchg
push
dec
popa
stos
test
push
jle
les
iret
jmp
stos
mov
pusha
push
and
test
test
add
jge
stc
sbb
mov
in
dec
flds
push
jo
mov
jo
nop
or
add
js
das
xchg
dec
mov
roll
push
outsl
lahf
pop
bound
inc
das
dec
punpckhbw
je
jl
mov
scas
je
and
imul
add
mov
nop
push
shl
mov
inc
push
xchg
cmc
test
cmp
scas
cmp
cmp
jno
push
insl
mov
xor
jmp
jg
dec
out
push
adc
outsb
pop
jo
and
inc
jns
das
aad
ret
les
shlb
push
popa
xchg
pop
aaa
arpl
hlt
repnz
pushf
xchg
push
cwtl
iret
mov
les
roll
insl
lret
movsl
inc
outsl
inc
imul
inc
add
ret
jge
sub
popf
sbb
repz
das
ret
mov
pop
jnp
sbb
mov
xchg
mov
cmp
xchg
test
pop
out
add
repnz
nop
mov
popa
in
mov
xor
pop
xor
sbb
sarl
dec
lcall
stos
xchg
xchg
in
ss
xorb
mov
loop
fs
dec
outsb
scas
divl
pushf
shlb
mov
stc
or
pop
int3
ret
jl
xor
fwait
cmp
xchg
dec
in
gs
and
out
fidivs
mov
mov
outsl
mov
cli
movsb
sti
iret
outsl
sub
pop
test
ret
xor
mov
fcomps
cltd
cmp
mov
stos
xlat
xor
in
std
ja
or
dec
mov
jbe
arpl
sub
ss
lahf
scas
mov
mov
jns
pop
lret
push
mov
or
daa
cmp
ret
mov
jo
ds
pcmpgtb
adc
jno
lods
aam
add
pop
xor
ret
es
adc
inc
jmp
rcrb
shll
lds
sbb
mov
int
std
fsubrl
repz
js
hlt
popf
mov
mov
dec
and
clc
push
mov
adc
jg
push
push
push
test
nop
lods
daa
adc
orl
jle
popa
loop
aad
and
es
jnp
mov
xor
cmp
xchg
cmc
jl
xchg
les
mov
loop
xor
or
mov
les
mov
xchg
cmp
xlat
ss
out
sbb
and
lds
xchg
jmp
cmp
clc
outsb
fisttpll
dec
cmp
mov
pop
mov
insl
shll
xchg
xor
dec
xchg
js
add
bound
pop
nop
mov
dec
sub
call
xchg
fsubs
cmp
or
xchg
lods
imul
xor
cltd
push
mov
mov
ja
jns
pop
adc
lahf
aad
xchg
fwait
push
decb
lahf
stc
cli
fldenv
xchg
sub
repnz
or
cmp
cmpsb
fucomi
or
lahf
inc
dec
loopne
ret
fucom
lea
or
cltd
cmp
dec
sub
mov
push
pop
xchg
daa
imul
jp
std
sbb
or
test
pop
pop
jo
movsb
lcall
and
mov
aaa
push
dec
sbb
insb
or
std
xchg
in
xchg
leave
adc
shrl
mov
aam
push
icebp
push
push
popa
subb
or
xchg
mov
pusha
les
repz
cli
cmpb
pop
pop
jg
std
push
jmp
or
xor
lret
dec
fistps
fsincos
icebp
inc
mulb
xor
mov
pop
sbb
addr16
inc
lret
mov
jmp
movsb
iret
in
jge
cs
stos
mov
push
or
pushw
repnz
and
mov
add
cmpsb
inc
push
addr16
loopne
sti
out
push
or
int3
sbb
mov
or
xor
inc
jl
outsb
push
frstor
je
xchg
test
or
gs
sbb
cwtl
test
jnp
pop
adc
ljmp
mov
jns
ss
or
xchg
mov
std
shll
test
jl
sbb
mov
or
mov
sub
sub
jmp
cltd
lret
je
push
lcall
push
push
aas
clc
push
int3
push
mov
and
jb
cld
or
into
out
push
adc
lods
jnp
mov
fwait
mov
mov
sub
in
dec
mov
lods
and
ret
insb
out
push
push
jb
lds
push
jno
lds
aam
movsl
js
leave
mov
fdivrl
adc
pop
arpl
rcr
mov
out
movsl
inc
movsl
jmp
sub
mov
outsl
roll
and
scas
jns
jae
jmp
lods
cs
in
push
in
out
insb
in
imul
inc
in
dec
adc
adc
pop
cld
loope
sbb
jmp
scas
adc
xor
mov
data16
mov
rcll
in
pusha
push
mov
xchg
mov
sub
cmp
in
dec
jp
xor
inc
int
stos
cmp
lcall
xchg
mov
push
outsl
sbb
xchg
inc
dec
lock
cmpsl
outsl
or
data16
scas
outsl
stos
fs
cmp
ja
ljmp
test
cmc
lods
popa
inc
in
pmulhw
mov
pop
mov
add
push
rolb
inc
mov
mov
cmp
rcl
notl
xchg
and
adc
cmp
add
or
xchg
mov
mov
ret
or
dec
sarb
iret
daa
lret
outsb
or
enter
pop
cmp
mov
add
mov
sub
mov
repz
mov
test
or
cmp
pop
addr16
out
leave
sbb
test
ret
cmp
in
gs
jbe
das
ljmp
mov
leave
pop
sbb
arpl
push
and
stos
jg
cmc
sbb
xchg
lods
and
and
push
es
out
pop
jbe
sbb
imul
pop
dec
out
in
sldt
xor
and
cwtl
fs
sbb
mov
or
pop
test
cwtl
daa
test
rcll
dec
das
mov
into
mov
data16
mov
sub
xchg
flds
xchg
pop
sub
and
sbb
sub
je
stos
sub
pop
in
aaa
mov
xor
sbb
out
flds
addr16
mov
lret
mov
dec
jnp
add
iret
pop
lea
add
and
into
or
ljmp
inc
sbb
enter
aas
std
popf
lea
pop
jbe
adc
add
and
sbb
add
aam
push
and
lock
out
jnp
fdivrp
sbb
daa
adc
pop
dec
xor
ret
shr
xchg
cli
idivl
into
outsl
fisttpll
push
icebp
lahf
mov
dec
in
add
mov
dec
mov
and
pushf
incb
jb
cld
or
mov
and
mov
les
enter
jmp
clc
pop
xor
sti
push
in
inc
aad
jp
xchg
aad
ljmp
stos
inc
sbbl
fdivr
notl
idivb
mov
add
test
xchg
faddl
push
andb
or
lds
cmpsl
cmp
cmp
aas
leave
sarl
test
push
loop
inc
clc
push
sahf
inc
out
les
lret
loope
push
sbbb
jecxz
imul
cmp
xchg
lock
mov
imul
mov
bound
xchg
jl
mov
fsubr
adc
jmp
push
pop
sub
rol
add
lcall
push
push
cmpsb
inc
or
xchg
mov
or
mov
loop
mov
xor
sbb
fldt
pop
loop
xor
stos
xchg
xor
jp
push
pusha
lea
pusha
out
dec
xor
popa
in
outsb
mov
ret
lea
jno
lods
dec
jge
inc
push
cmpsb
push
jge
in
or
ret
mov
jbe
ja
ljmp
jne
mov
std
xchg
dec
push
xchg
inc
cmc
jno
int3
stc
rcrl
inc
jl
fiaddl
je
push
sti
mov
add
imul
in
addl
insl
punpcklwd
ror
pop
mov
stos
pop
daa
ljmp
jbe
mov
leave
stc
jle
mov
and
imul
xor
movsl
jb
pop
std
cmpsb
cs
pop
or
rclb
lahf
add
or
imul
mov
pminsw
mov
ror
mov
scas
mov
cld
aas
fmul
inc
pop
add
jbe
test
test
ja
dec
and
add
insb
fnstenv
adc
or
data16
and
mov
ja
jp
lods
pop
andl
mov
scas
mov
ds
dec
xchg
jno
popf
fstpl
add
mov
push
call
mov
les
sahf
push
and
ret
ja
inc
sub
xchg
sub
pop
lret
cmp
pop
adc
in
add
out
test
lahf
shll
fcom
cmp
inc
sbb
dec
cmp
mov
addr16
insl
mov
rcl
push
mov
lods
mov
orl
shll
insl
ds
std
fists
out
adc
push
and
out
cli
jmp
in
outsb
jle
pop
repz
out
mov
mov
fsubl
inc
enter
ja
gs
pop
xchg
sbb
aaa
add
mov
pop
test
mov
idiv
cwtl
pusha
rorl
scas
pop
popf
femms
rclb
dec
nop
pop
mov
nop
sti
into
sbb
jecxz
cmp
mov
mov
adc
js
or
std
or
daa
jbe
sub
adc
leave
hlt
jp
inc
or
ret
hlt
cli
pop
pop
mov
inc
and
fimull
xchg
push
out
push
jle
xchg
xchg
inc
fcom
fisubl
add
dec
inc
arpl
sti
and
and
mov
ss
ret
lahf
jge
dec
out
ret
ret
pushf
ret
jle
sahf
jns
xchg
cmpsl
adc
jns
lds
lret
sbb
bound
or
sbb
add
dec
es
movsl
rclb
xor
ret
mov
xorb
notl
jae
sbb
and
or
xor
lcall
std
inc
rclb
in
es
cld
mov
fcmovb
add
and
das
and
add
out
xlat
mov
jb
mov
fadds
xchg
ljmp
jge
js
scas
pop
push
xlat
and
mov
mov
sbb
xlat
adc
mov
ret
fldt
daa
jmp
imul
shlb
ljmp
pusha
test
shlb
lods
test
not
jp
popf
arpl
push
or
and
pop
loopne
pop
adc
insl
add
mov
shlb
add
pop
inc
inc
jge
inc
xchg
and
adc
xlat
inc
mov
out
lock
cmpsl
aad
add
mov
inc
je
movsb
je
pop
stc
inc
add
pop
test
inc
mov
mov
cmp
pop
loop
rol
in
and
inc
loope
fildll
mov
lea
ret
sub
cs
xlat
mov
push
mov
in
in
jge
test
fdivp
jae
fwait
jo
and
inc
scas
xor
or
sub
push
repz
in
adcl
fcmovu
fbld
ljmp
bound
fwait
lahf
pop
cmp
jae
in
es
pop
ja
int
outsb
jle
popa
xchg
imulb
mov
shrl
inc
adc
icebp
adc
and
jmp
lea
inc
sbb
cld
cli
jns
jmp
cmpsb
sti
stc
in
imul
imul
pop
ja
flds
or
lods
jp
mov
ss
stos
sahf
nop
and
popf
popf
shrb
stc
pop
les
cmp
dec
mov
out
mov
push
aas
jecxz
mov
int3
mov
mov
enter
pushf
jbe
je
arpl
dec
subb
lret
push
jns
push
cmpsl
jbe
outsl
add
cltd
cmovg
arpl
lret
imul
hlt
adc
cmpsb
add
fsubl
sub
std
loopne
mov
mov
jl
or
dec
pop
ss
dec
lret
inc
adc
das
dec
jle
pop
or
fadd
or
inc
outsl
push
cmp
dec
and
roll
cmc
lret
push
scas
dec
vshufpd
adc
pop
cld
pop
push
sbbl
pop
clc
pop
ret
inc
adc
mov
xor
push
popa
inc
add
jne
cli
fidivrl
shrb
dec
or
setle
xchg
cmp
push
dec
fimull
in
push
mov
lock
xchg
mov
gs
add
or
cs
ss
lea
popa
mov
xchg
lock
bound
xor
xchg
ds
pusha
mov
aad
incl
in
les
stc
push
fcom
jbe
jmp
testb
outsl
test
cltd
sub
jae
dec
loopne
out
mov
int3
sub
add
pmulhw
xchg
cmp
push
scas
js
xchg
loope
aad
loop
dec
shr
jo
mov
fisubrs
add
jo
push
out
dec
fstps
lahf
xor
ss
scas
popa
lret
mov
std
sahf
jg
ds
lods
jmp
cmp
cmp
sbb
adc
jecxz
pop
int3
xchg
imul
adc
xchg
stos
in
sbb
lock
fdivs
nop
movsb
rorl
cmp
add
add
mov
and
mov
fidivrs
out
inc
popa
push
jne
btc
arpl
fldt
ss
mov
sbb
jl
rcr
dec
dec
jns
mov
aaa
jnp
outsl
aad
add
cmp
mov
icebp
jbe
bound
adc
andl
mov
sub
enter
add
jo
loop
and
and
adc
std
shll
aas
jl
ss
add
mov
cmpsl
push
mov
arpl
cld
loopne
push
fimull
push
imul
xchg
inc
shl
sti
cwtl
xor
dec
mull
pop
pop
movsl
cmp
fs
cld
out
and
jp
sub
dec
and
out
test
push
jge
dec
adc
loopne
mov
mov
movsl
cmp
dec
sbb
test
lcall
iret
and
lea
add
dec
out
dec
loope
push
fnstsw
imul
jmp
or
dec
outsl
addr16
daa
jno
or
xchg
dec
and
int3
jnp
push
fsubrs
mov
inc
xor
aas
push
out
bound
mov
jb
clc
push
xchg
out
rcrb
pop
cmpsb
stos
iret
movsb
popa
sub
push
jecxz
movsl
insl
inc
leave
mov
push
jmp
fimuls
pop
pop
repnz
sub
push
sub
icebp
jmp
inc
mov
sti
and
inc
enter
and
arpl
mov
lret
sbb
push
add
lds
adc
mov
aaa
pushf
add
jo
mov
cmc
adc
push
inc
in
add
movsb
pop
popf
pop
xchg
cwtl
into
pop
inc
jns
test
data16
cmc
je
lahf
jl
sbb
xchg
leave
adc
xchg
mov
xchg
mov
sbb
insb
cmpsb
sub
aaa
stos
xor
xor
cs
movsl
sbb
fisubs
mov
mov
pusha
addr16
in
adc
add
jp
inc
lea
stos
mov
cmpsb
aad
fidivs
adc
add
sbb
mov
add
loope
lahf
enter
fs
lods
addr16
mov
gs
cmp
pop
ret
pop
jl
jmp
pushf
mov
addr16
xchg
clc
pop
fs
xor
push
cld
lahf
adc
jl
adc
les
ret
cmp
movsb
push
dec
lock
cmp
xchg
jle
add
xchg
inc
dec
sbb
cmp
scas
push
mov
lods
dec
sub
and
adc
aaa
gs
mul
ljmp
leave
pop
shlb
ret
add
jno
cwtl
scas
lods
data16
jns
fbld
mov
xchg
leave
movsb
ficomps
in
aam
adc
inc
neg
inc
sub
inc
aam
icebp
je
test
xchg
sub
in
int3
xor
jns
push
hlt
inc
pop
call
inc
ss
jno
mov
mov
xchg
jmp
xor
inc
jne
xor
mov
cmp
pop
pop
inc
and
jnp
int
pop
xor
sbb
pop
mov
sbb
scas
xchg
xchg
fiaddl
mov
fwait
pop
fistl
jle
ud2
push
fxch
fimull
fwait
cltd
stos
gs
cs
pop
adc
cmp
mov
xlat
jmp
sbb
pop
sub
sti
push
xchg
dec
xor
int3
jno
subl
pop
mov
and
leave
test
mov
rcl
aas
mov
mov
pop
pop
les
adc
cmpsb
push
pop
mov
or
int3
aam
push
outsl
rorl
jmp
es
adc
frstor
mov
pop
mov
and
ja
je
shl
and
mov
cmpsl
mov
orl
jae
lret
inc
shlb
aad
repz
cli
ss
roll
dec
ficompl
mov
stc
dec
cld
leave
repnz
in
lret
shll
add
jecxz
cmc
pop
aaa
call
sub
ja
xchg
xor
lock
and
aam
xor
mov
sti
ljmp
lret
les
loop
idivl
arpl
push
movsb
ja
insb
fldt
xlat
push
test
xor
int3
jmp
push
cld
dec
divb
cltd
movsl
mov
jo
fcoml
jno
xchg
cmp
add
and
outsb
imul
xchg
pop
lahf
xlat
fwait
lds
push
cli
dec
mov
push
push
in
mov
jae
pop
adc
test
mov
mov
clc
xor
inc
shll
data16
lods
push
push
cmp
adc
imul
jno
cmc
push
push
les
hlt
xlat
push
mov
xchg
in
add
sub
std
das
mov
imul
dec
jge
inc
and
add
push
int
loop
or
cltd
mov
dec
mov
out
out
sbb
loope
repnz
addr16
jmp
mov
movsb
call
fwait
aam
lahf
das
add
pusha
out
in
fsubs
faddl
or
cmp
pop
cltd
mov
imul
dec
jbe
pop
daa
pushf
js
dec
ret
stc
test
xor
push
arpl
adc
les
jp
lret
mov
xchg
insl
andl
lret
addb
inc
push
dec
pop
push
cmp
cmp
sub
mov
int3
fiadds
subb
pop
dec
push
fdivrs
fdivrl
imul
sub
lock
popa
enter
lret
and
rcrl
inc
pop
xor
test
sarl
das
mov
into
dec
mov
data16
ja
and
lcall
lods
push
pop
adc
xchg
les
fldt
mov
leave
shl
cld
push
jo
jp
mov
dec
aam
push
fdivr
xchg
shrl
add
cmc
cmc
test
movsl
fdivrp
push
jecxz
adc
inc
inc
cli
loope
jle
xchg
dec
mov
fwait
push
mov
ss
sub
mov
bound
and
cmpsb
orb
xorl
or
in
lds
rolb
cwtl
enter
mov
movsl
lock
push
daa
and
jnp
scas
dec
jb
cmpsl
jg
mov
daa
cmpsl
push
in
jmp
jg
adc
mov
shll
mov
mov
dec
stc
out
mov
iret
push
fdivrs
jmp
jne
daa
jnp
mov
xor
adc
or
xor
shl
xchg
iret
pop
push
xor
jmp
push
jmp
ja
mov
iret
pop
lods
xchg
dec
popa
push
cli
adc
pop
ljmp
outsb
mov
adc
ret
sbb
sbb
cmp
gs
mov
addr16
cmp
pop
ds
xchg
adc
xor
add
les
icebp
jmp
test
inc
sbb
xchg
inc
xchg
cli
outsl
aam
leave
mov
cmp
dec
add
push
adc
cmpsl
into
pop
pushf
mov
sti
jl
add
push
rcr
shrl
scas
imul
popa
push
inc
pop
push
jmp
test
insl
adc
push
rclb
push
out
mov
and
xor
fs
or
lret
mov
outsl
or
iret
cli
xor
xor
movsb
dec
je
sub
mov
sbb
mov
imul
xchg
std
je
inc
pop
rolb
push
outsb
push
in
shl
imul
xor
or
cwtl
insb
stos
jne
and
cmp
stos
and
imul
and
xlat
ret
sbb
mov
adc
fsts
sub
dec
test
mov
test
cmp
inc
sub
pop
outsb
xchg
pop
mov
stos
outsb
shlb
mov
pop
xchg
pop
jo
push
push
je
add
lret
mov
out
das
out
js
fisttpl
or
out
xchg
mov
js
jne
inc
adc
push
sbb
cmp
cmpsl
iret
addb
jecxz
repnz
orl
ja
xchg
pop
sbb
lock
sahf
inc
ud2
rcll
push
and
jns
mov
push
roll
cmpb
lretw
push
or
adcl
rclb
mov
pushf
and
mov
test
into
push
jne
out
ret
inc
sarb
dec
pop
popa
jp
or
rolb
xchg
adc
xchg
jge
shl
xor
push
repnz
dec
jp
mov
repz
xchg
mov
daa
xor
mov
xchg
inc
shl
shl
add
cmpl
gs
loopne
jecxz
mov
leave
mov
add
mov
add
hlt
notb
add
mov
push
and
add
mov
mov
xor
es
xchg
cmp
sbb
mov
inc
test
dec
or
mov
mov
pop
sbb
loop
clc
ja
pop
inc
jp
mov
pop
cs
mov
push
repnz
ficoml
cmp
add
push
fsubrl
mov
adc
mov
ja
pop
add
mov
andb
jae
inc
shll
or
test
pushf
lcall
mov
in
mov
ffreep
jg
insb
mov
jg
sbb
mov
dec
neg
or
dec
cmp
out
sbb
sti
ja
xchg
or
or
mov
es
add
ljmp
xchg
cld
in
adc
add
insl
mov
dec
shrb
scas
popa
popa
fimuls
dec
push
loopne
mov
sbb
insl
mov
or
adc
sarl
test
loopne
inc
sub
mov
dec
orb
cmpsb
in
ret
jecxz
inc
or
iret
pop
mov
and
mov
xchg
inc
mov
cmp
push
fwait
mov
jns
mov
lret
cmp
clc
daa
roll
adc
cld
jmp
cmpsl
lcall
add
cli
sbb
fcom
in
jnp
lods
and
adc
mov
mov
stos
lods
loope
cmpsb
xor
int3
inc
jns
push
aad
add
in
push
pusha
sub
jl
and
xor
mov
lea
jle
clc
inc
fwait
pop
ds
xchg
decb
mov
js
sub
cmpsb
mov
lods
xor
adc
dec
sub
sbb
repz
shlb
sbb
mov
scas
cmp
es
movsb
fiaddl
xchg
xchg
mov
stos
lea
idivb
fbld
fnstcw
sahf
add
dec
jp
adc
push
lods
mov
jmp
mov
test
pop
xor
out
leave
sub
ja
seto
test
daa
adc
sbb
aaa
leave
inc
insl
rorl
outsl
sub
sarl
daa
in
andl
push
sti
shll
ret
push
ss
popa
test
ds
imul
scas
fnstcw
inc
pop
test
aad
xchg
sub
andl
jnp
das
jae
mov
jl
stos
mov
jno
sbb
int3
pop
pop
mov
cmpsl
es
gs
dec
or
movsl
rolb
das
jno
ficoms
adc
mov
sbb
pop
mov
cmp
scas
lret
adc
mov
fwait
sbb
jno
test
icebp
sbb
and
mov
mov
and
gs
sub
ss
rcrb
enter
inc
sub
or
sbb
adc
pop
jo
insb
pop
jecxz
sub
sbb
lret
xor
scas
lods
imul
jae
aam
filds
lods
jmp
fs
add
xlat
ds
out
or
lcall
mov
mov
xchg
scas
mov
xor
cmp
ja
and
fcomi
ss
dec
std
mov
cmp
mov
int
mov
in
cltd
push
data16
sbb
jo
sbb
loop
test
imul
xchg
out
adcl
push
int3
and
mov
push
imul
leave
mov
and
pop
clc
scas
jo
add
cmp
leave
push
cmp
popf
or
leave
pop
mov
sbb
test
call
inc
jnp
push
adc
sub
fnstcw
scas
lds
test
or
or
pxor
decb
stos
cs
cmp
mov
ficomps
loopne
fwait
mov
adc
jg
movl
and
outsl
xor
xchg
mov
cmp
push
and
pop
ljmp
inc
test
scas
mov
lret
lds
xor
sub
mov
sub
mov
sbb
push
imul
or
negb
sub
xchg
mov
jae
mov
push
lcall
and
jns
add
jmp
stc
jp
add
pop
sbb
scas
cltd
repnz
aam
push
pop
jmp
das
adc
push
pop
push
add
enter
ljmp
mov
repz
dec
data16
or
sub
fstl
jo
arpl
daa
or
sbb
and
cs
shl
outsb
mov
or
pop
je
dec
inc
xorb
mov
dec
add
jns
cmp
hlt
pop
cs
pop
sub
dec
mov
cmpsl
adc
cmc
jg
mov
lds
addr16
jbe
out
mov
push
fs
loope
dec
lods
or
cmpsb
inc
sbb
adc
mov
outsl
cmpsb
les
or
jge
test
fisttpl
mov
pushl
sbbl
cmc
jg
cmpsb
push
das
or
or
rdmsr
dec
es
std
xchg
inc
cli
fdivrl
dec
scas
int3
xchg
jge,pn
and
adc
pop
pop
xor
add
ret
xor
dec
fs
roll
or
inc
jbe
mov
cltd
push
or
cli
xlat
sbb
std
push
lea
jbe
outsb
data16
dec
test
arpl
adc
xchg
jne
addr16
sbb
or
adc
jns
pop
jecxz
fs
subl
xchg
mov
popf
push
jbe
adc
out
push
jns
sub
push
les
scas
hlt
fdivrs
jno
pop
das
inc
repz
xor
mov
rcrl
lret
fistl
hlt
mov
pop
lahf
fstps
fwait
nop
dec
mov
fsubr
in
imul
push
out
and
push
nop
fnsave
cmp
cltd
sub
push
rcr
sbb
in
lret
sbbl
mov
pusha
mov
adc
fistpll
pop
ss
sti
mov
jmp
loope
push
out
int3
adcb
ljmp
xor
xor
mov
movsl
clc
or
and
jp
mov
incl
ret
std
inc
jl
sbb
cmp
jno
pop
push
cmpsl
mov
pusha
sub
addr16
push
dec
sbb
ret
repz
dec
mov
or
nop
ds
data16
enter
cmp
dec
inc
test
fnstsw
push
mov
pop
push
sahf
inc
movsl
loope
subb
stc
push
clc
mov
mov
call
lods
int3
das
cld
aaa
inc
adc
lret
push
aam
imul
mov
xchg
mov
or
inc
inc
sbb
les
movsl
sbb
in
mov
std
push
jae
fstl
xchg
push
sbb
mov
lods
sarl
mov
arpl
mov
test
pop
and
sub
xchg
aaa
into
mov
ret
pop
dec
lcall
inc
jbe
sbb
test
scas
out
sbb
subb
jns
stos
bound
jle
mov
jns
icebp
xor
push
push
adc
cli
inc
or
push
mov
gs
adc
xchg
and
cmp
pop
imull
or
push
and
and
inc
mov
add
in
pcmpgtw
add
or
icebp
push
fcomps
loopne
pop
push
pop
or
cmp
je
test
mov
stos
jle
out
ror
mov
dec
nop
ret
sub
movsb
fcomps
push
std
mov
jne
or
jecxz
scas
sub
ds
dec
data16
jmp
leave
sub
cli
mov
loopne
lds
push
dec
dec
adc
mov
pop
xor
mov
jo
jmp
xchg
insb
loope
lods
xor
out
dec
outsl
cmp
pusha
fildll
bound
enter
or
and
cld
pop
add
packssdw
cmp
and
jb
xor
shll
dec
adc
jl
lea
mov
xchg
shr
nopl
fistps
rcrb
add
ljmp
pop
xchg
fildll
test
insb
or
fadd
jo
shld
sub
scas
xor
dec
jnp
mov
add
cltd
mov
fcomps
mov
loopne
pop
mov
gs
pop
aam
dec
cmc
scas
sub
fistpll
pop
jp
push
fstps
xorb
jl
push
sbbb
mov
jno
lods
ss
imul
je
daa
orl
or
mov
pop
subl
mov
lods
fcmove
pusha
insb
dec
mov
jo
jbe
cmp
lret
push
aad
pushf
rcll
fs
adc
shrl
and
pop
push
fcompl
iret
mov
movsb
inc
jnp
add
jns
xor
xchg
clc
outsb
fwait
addb
shrx
jnp
ds
cmp
or
stos
jg
lods
imull
inc
iret
fwait
test
xchg
mov
sbb
shl
scas
or
cmp
push
sbb
test
and
out
xchg
sbb
mov
cmp
sbb
sub
xor
int3
push
cmp
daa
rorl
pop
or
les
bound
xor
push
lods
je
xor
xchg
mov
sbb
mov
mov
ljmp
cmp
mov
dec
cmpsb
xor
sbb
xor
pop
int
xchg
xor
mov
and
mov
mov
mov
push
mov
ret
loopne
inc
and
bound
sub
sub
lds
add
dec
mov
out
pop
ret
movsl
cmp
and
dec
mov
std
incb
rolb
mov
rclb
in
sbb
xor
jnp
fucompp
mull
lods
jge
mov
fisubs
and
and
xor
jne
insl
hlt
cmp
fdivrs
scas
cmpsb
pop
mov
and
sbb
mov
cmp
shl
jg
loopne
icebp
fs
in
and
sbb
icebp
call
fnsave
xlat
add
out
mov
iret
movsb
sbb
or
sahf
xchg
pop
xchg
ror
xchg
orl
int3
xchg
adc
cld
icebp
rcrb
ds
test
ret
movsl
xchg
add
movsb
lret
add
mov
addr16
xor
xor
stc
push
in
add
in
mov
stc
mov
call
dec
pop
fucom
mov
and
gs
push
orl
xchg
push
call
movsb
in
sub
adc
pop
out
les
sub
pop
xchg
mov
cmp
cmpsl
loopne
cwtl
in
shrb
fbld
mov
push
cmp
icebp
xorl
data16
and
imul
sub
insb
cltd
xchg
mov
rcrb
jge
mov
jmp
das
and
sarb
mov
fists
dec
rorb
jno
and
leave
dec
shrl
dec
addb
xor
jle
lcall
push
push
sub
add
jp
jg
popf
rolb
mov
or
xor
dec
sub
fistpl
mov
test
lahf
mov
mov
in
push
mov
mov
push
cmpsl
call
addl
stos
std
pusha
pop
mov
mov
cmp
mov
dec
mov
adc
xor
jmp
push
ss
pop
adc
pop
or
aaa
stos
mov
adc
sar
shlb
xchg
test
lret
mov
and
cmp
mov
loope
or
hlt
xor
lcall
dec
cmpl
push
push
in
popa
mov
dec
fstps
xor
jno
adc
std
xchg
mov
add
add
test
js
xchg
mov
ret
int
jns
sub
rorl
shrl
mov
mov
loope
pushf
mov
and
jns
std
js
and
inc
insb
pop
cmpsb
jae
int3
std
dec
or
jno
std
xchg
shrb
sub
fs
inc
push
or
xchg
inc
repnz
cli
divl
or
jl
test
icebp
daa
insb
idiv
test
mov
xor
push
pop
jmp
dec
xor
mov
stc
mull
std
mov
lock
dec
mov
fadds
push
and
xor
shll
pop
mov
lret
mov
dec
pop
repnz
xchg
ret
notb
mov
sub
xlat
jae
xchg
insb
mov
fs
daa
loopne
test
cmp
jp
or
fwait
push
pop
pop
xor
adc
and
test
es
dec
stos
fidivrl
cli
in
test
jo
sbbl
ss
pop
fcoms
popa
lods
rcll
repz
cmpsb
pushf
push
pop
and
movsl
cli
xchg
test
pushf
cmpsl
pusha
mov
sar
out
neg
dec
xlat
push
mov
jmp
mov
pop
loope
cld
xchg
daa
dec
inc
jle
mov
mov
jge
jmp
aas
lahf
jnp
xor
xor
add
sbb
mov
mov
gs
aaa
shll
movsb
mov
and
xor
pop
test
shrl
xchg
call
cmpsl
mov
fcomp
xor
mov
ret
dec
pushf
pop
inc
in
dec
add
pop
pop
mov
pop
adc
movsb
mov
jno
fsubl
aas
notl
cmc
in
in
mov
xor
adc
cmp
out
testl
cwtl
popl
cmc
and
insb
pop
and
orl
aas
xlat
mov
icebp
mov
inc
inc
jmp
inc
clc
pop
fdivl
sub
loopne
dec
jle
out
icebp
sbb
xchg
xchg
xchg
jmp
inc
fwait
mov
js
pop
lcall
movlhps
jmp
adc
out
pop
pop
push
es
xchg
mov
cmpsl
and
lods
sbb
les
sbb
sahf
mov
dec
xchg
push
cmpsb
xchg
pop
pushf
mov
add
and
push
aam
pop
fdivrs
and
lock
lcall
xchg
mov
insl
pop
or
add
jbe
pop
scas
imul
and
int
shrb
mov
push
iret
mov
loope
sub
push
fdivl
leave
sub
pop
push
icebp
sub
sub
ja
movsl
dec
dec
popf
lcall
sub
mov
in
movsb
or
add
inc
sbb
stos
cmpsb
sti
shlb
das
inc
pop
jns
sub
dec
add
sub
jnp
movsb
mov
pop
xchg
dec
out
or
adc
sbb
jg
repz
push
jecxz
fldt
push
jp
push
mov
popf
into
push
cmpl
inc
xchg
jne
sti
addb
pop
cmp
inc
xor
sbb
js
cmpl
mov
insl
sbb
and
ljmp
inc
rcrb
pop
mov
dec
sbbl
pusha
loopne
in
es
mov
pop
inc
push
jns
icebp
ror
adc
call
cs
and
lahf
in
jo
test
mov
insl
clc
int
lahf
rcrb
cli
mov
mov
cld
add
sub
cltd
and
popa
jp
cmp
out
lods
add
pop
and
jns
inc
pop
pop
xor
cmpsb
add
jle
loopne
pop
inc
jne
sbbl
sbb
xchg
aam
push
jge
dec
lret
pop
and
xchg
int3
fldt
mov
mov
adc
es
nop
and
mov
add
jno
cmp
xchg
fsts
sub
push
dec
das
jg
push
push
cmpsb
sbb
repnz
push
push
mov
ss
lods
xchg
mov
mov
pop
add
mov
xchg
leave
push
xchg
fs
jae
push
loope
lods
or
out
out
je
out
loope
out
sub
mov
insl
imul
cmc
xchg
dec
insb
into
jbe
jo
fsubrl
push
push
sbb
dec
stos
out
inc
outsl
mov
sub
pop
imul
push
fcomps
insb
shll
jne
cmp
mov
cwtl
push
jo
popa
ss
je
push
call
adc
jne
mov
dec
fcmovne
push
cmpsb
mov
dec
mov
xchg
pop
cmp
fidivrl
fimuls
shll
enter
jnp
push
adc
push
inc
ss
jmp
leave
subb
mov
mov
in
dec
shr
ret
adc
jecxz
mov
xchg
push
mov
lds
inc
ljmp
psubd
negl
call
lret
mov
xor
std
sti
xchg
inc
rorb
inc
xchg
mov
sub
imul
shl
repnz
add
ss
pop
dec
inc
inc
out
jl
mov
adc
inc
jno
jg
pop
mov
movsb
mov
ficoml
in
aam
es
push
pop
push
jmp
jg
fldenv
mov
out
add
out
aam
test
inc
ja
jge
pushf
int
pop
outsb
or
push
movsb
inc
cmpsb
cmp
int
xor
pop
int3
data16
repnz
out
into
jb
in
push
sub
aaa
rolb
inc
sbb
jecxz
jle
gs
jns
insl
sub
jmp
subl
xor
pop
test
cmpsb
add
mov
sbbb
dec
fidivl
push
mov
int
inc
sub
ds
inc
adc
sub
aaa
stc
push
and
jbe
test
leave
out
xchg
in
xchg
dec
divb
adc
nop
inc
push
int
fstl
movsl
in
loopne
stc
push
push
or
ja
hlt
lods
mov
aaa
stc
cs
test
and
push
jo
cmc
pop
mov
jbe
adc
xchg
cmp
mov
push
inc
cmpsb
fidivl
xchg
ljmp
adc
ss
cmp
add
jb
mov
adc
pop
testl
cmp
lret
ret
and
add
push
aas
pop
inc
adc
faddl
dec
sarb
mov
sub
inc
xchg
adc
aas
je
data16
sub
lods
dec
nop
adc
imul
jg
test
ds
mov
fwait
jae
jnp
cmp
test
xchg
call
and
iret
push
int
lods
mov
lds
in
in
lret
mov
push
aaa
sbb
lock
or
xchg
aas
mov
xchg
pop
pop
je
mov
repnz
scas
mov
adc
addr16
pop
jb
loopne
jns
mov
sub
cmpsb
jl
ret
sub
adc
mov
cli
and
icebp
inc
mov
cmpsb
insl
sar
bound
test
or
jne
jae
fimuls
fcoms
sbb
mov
scas
xor
inc
push
sub
fmull
dec
nop
xchg
mov
dec
mov
dec
push
mov
mov
daa
mov
fcoml
js
cltd
ds
jmp
jne
push
lcall
xchg
adc
dec
pusha
roll
and
and
inc
int
sub
ficoms
xor
dec
gs
jp
xor
hlt
imul
cmp
xchg
mov
adc
push
xchg
ljmp
xchg
lcall
hlt
add
out
test
push
iret
cmpl
push
int
insb
jae
xchg
xor
int
sub
add
in
dec
sbb
popa
xchg
aaa
push
inc
cs
fs
xchg
inc
mov
in
nop
scas
jno
xchg
sbb
mov
sar
stc
fdivrs
clc
call
fbld
dec
ret
loope
into
daa
push
inc
adc
adc
cmpsl
fistpl
mov
or
and
imull
cltd
xchg
jge
xor
mov
jp
jecxz
dec
in
or
adc
subb
inc
movsb
out
jnp
std
popa
lret
pop
sbb
inc
sar
dec
jnp
jmp
cld
cmp
or
jns
imul
dec
out
sbb
pop
outsl
repz
aad
xor
cmp
mov
out
jns
push
out
xlat
sbb
jb
aam
adc
xor
adc
pop
inc
sub
dec
dec
mov
es
mov
xor
fwait
test
cmp
adc
fisubs
mov
inc
shl
ret
cmpsl
mov
sbb
cmpsl
decb
add
mov
jl
fistl
push
xor
sub
testb
stos
or
mov
stc
bound
or
jb
inc
shlb
mov
mov
out
jp
jne
insl
out
xchg
lock
or
jmp
sbb
mov
sub
arpl
fstp
jl
lds
loopne
outsb
ret
xchg
sahf
dec
arpl
jns
or
push
mov
pop
lods
lods
outsb
sbb
xor
add
sub
inc
and
jmp
sub
xor
xor
in
ss
stos
mov
stos
js
loop
or
mov
mov
or
sbbl
aaa
shlb
or
cmp
pushf
xor
jns
stc
jae
mov
dec
inc
fsubl
pop
es
int
add
stc
fs
popf
movsl
xchg
inc
mov
cmp
outsl
aaa
inc
pop
lahf
sub
jmp
jg
cmp
dec
mov
pusha
scas
lods
xchg
xor
mov
das
pop
std
pop
gs
sub
xchg
mov
push
mov
sub
mov
jb
cltd
imul
ss
aad
inc
lahf
gs
inc
lret
or
pandn
pop
or
sbb
or
data16
into
addr16
in
sti
es
pop
gs
add
adc
stos
popf
or
sbb
mov
adc
jo
repz
jae
in
addb
xor
lea
cwtl
fstl
mov
adc
repnz
arpl
jp
bound
add
and
hlt
fs
lea
aad
stos
push
push
xchg
pop
movsl
adc
mov
jb
sbb
push
push
sbb
bound
pop
sub
dec
cmpsl
cltd
mov
fisttps
divl
in
dec
and
mov
jo
cmpsl
mov
and
lock
fildll
inc
or
shlb
adc
out
fwait
mov
loopne
inc
cwtl
aas
push
push
popf
into
lock
mov
push
cmpsl
mov
mov
push
cld
sub
jge
pusha
in
imul
add
int
jae
icebp
mov
hlt
add
fsubr
bnd
lods
stos
stos
pop
das
ficomps
inc
into
mov
mov
push
add
xchg
dec
jmp
ds
outsb
jmp
inc
or
rolb
xchg
loope
sar
or
daa
jmp
loopne
xor
testb
ljmp
or
sub
movsb
test
xor
mov
js
pushf
outsl
inc
lods
sbb
jns
in
ret
lahf
mov
fistl
dec
shll
dec
insl
xchg
mov
fs
data16
rcl
fsubrs
pop
nop
xchg
test
pop
jl
jl
add
add
int3
jnp
or
mov
adc
or
rcrb
clc
in
lret
fstps
jo
xchg
mov
in
gs
mov
jge
add
fucomip
jbe
xor
fiaddl
outsl
sbb
sbb
inc
dec
imul
mov
pop
ss
lahf
xor
aad
jns
jmp
lods
add
jp
into
outsl
sbb
inc
inc
rcrb
pushf
inc
inc
pop
sbb
lods
dec
imul
pop
sahf
ja
lahf
in
xchg
pop
imul
inc
frstor
jl
fcompl
jnp
fnstenv
adc
cmpsl
popf
lea
mov
cmp
ja
imul
sahf
jno
and
outsl
rolb
in
push
inc
int3
movsb
inc
hlt
and
cmp
cmpl
jb
pushf
enter
cmp
ficomps
xchg
xlat
add
push
mov
repnz
sbbb
jne
cmp
push
div
mov
ds
in
push
stos
dec
outsl
in
push
or
jle
ja
jp
mov
sti
sahf
xchg
out
test
cmpsl
stos
addr16
les
outsl
dec
data16
ret
pop
and
movsb
xchg
fildl
sub
dec
addr16
imul
mov
in
es
mov
mov
pop
lahf
sar
sahf
jp
jg,pn
sbb
smsw
and
repnz
push
jmp
mov
gs
jns
sahf
pop
pop
add
dec
add
and
add
fstpl
or
ljmp
mov
xor
push
fcomps
xchg
mov
lods
mov
lods
imulb
mov
imul
jp
sbb
or
add
aas
popf
fsubrs
cmp
pop
jae
shlb
mov
mov
pushf
xchg
imull
xchg
hlt
xor
cmc
mov
ds
xchg
inc
lret
mov
lcall
sbb
and
aam
popa
add
cmpsb
loopne
add
ljmp
jecxz
scas
rorb
xchg
out
push
iret
inc
call
js
and
push
arpl
imul
jp
cld
sub
dec
sub
call
in
std
dec
jbe
or
or
pop
scas
mov
push
add
pushf
xor
insb
inc
mov
ljmp
push
mov
fwait
scas
mov
mov
xor
mov
and
xchg
jne
jns
pushf
lock
cli
int3
mov
inc
je
lahf
insb
jbe
adc
adc
loope
sub
xor
mov
fistps
add
mov
loopne
xchg
sub
push
dec
dec
push
ret
mov
rcrl
hlt
jmp
mov
cld
xchg
lock
adc
fwait
mov
fldcw
and
int
mov
stc
add
xor
push
add
inc
lahf
bound
push
out
mov
jg
add
mov
jne
pop
test
mov
sbb
cmpsl
cli
push
aaa
inc
push
scas
or
mov
scas
stos
je
inc
add
sarb
jecxz
arpl
dec
ss
dec
cld
out
pop
stos
mov
ss
leave
push
or
or
test
daa
out
pop
jmp
and
imul
out
push
xor
mov
and
dec
sbb
test
adc
ss
in
sbb
loop
lcall
imul
ss
in
mov
out
pop
fxch
mov
leavew
shll
daa
xchg
lret
jle
add
xchg
pusha
enter
jae
aam
stos
jno
int3
inc
sub
cmp
push
adc
or
dec
add
xor
pop
sbb
lret
idivl
inc
adc
gs
in
adc
fcompl
lahf
push
cmp
scas
xchg
pop
cli
lods
mov
adc
inc
fnstenv
out
fildl
rcl
clc
xchg
adc
mov
movsb
mov
lods
sub
push
sahf
dec
inc
sub
rolb
mov
scas
ds
or
pusha
sub
setg
mov
in
push
inc
jne
fstpl
loope
cmp
sub
inc
push
rcrl
or
cs
sti
ds
sub
iret
inc
hlt
sub
data16
mov
and
lods
mov
cmp
or
inc
xchg
in
aad
loopne
push
insl
sbb
push
call
shll
dec
into
lock
mov
sub
test
and
pushf
outsl
inc
testl
movsl
pop
mov
adc
and
ret
imul
in
dec
and
add
sbb
mul
and
loop
adc
popa
mov
fwait
xor
orb
stos
aas
xor
push
dec
xchg
jns
dec
cmpl
in
push
add
sub
scas
push
clc
rcrl
in
sti
pop
divl
pop
mov
push
or
lock
cmp
add
or
jg
arpl
lds
in
fiadds
xchg
mov
nop
adc
ds
in
push
sub
cmc
jae
or
repz
in
icebp
xchg
cltd
das
add
repnz
inc
cmpsl
nop
ljmp
cmp
in
fmull
cmpsb
mov
xchg
test
aas
mov
mov
cmp
rcrb
pusha
push
mov
je
xor
hlt
outsb
pop
ret
out
mov
cmp
mov
push
jge
mov
lods
mov
in
dec
in
in
in
push
and
mov
imul
fwait
test
leave
xchg
xor
rorb
scas
jle
inc
push
mov
mov
jg
cmpsl
sti
jmp
fdivs
fiaddl
xchg
cmc
imul
icebp
cmp
xchg
sbb
cwtl
movb
mov
xchg
mov
pusha
rolb
jb
inc
inc
cwtl
jl
rcrl
push
lcall
int
stc
dec
inc
out
daa
cmc
stos
fwait
sbb
rorl
jo
mov
and
mov
cs
decl
lahf
stos
push
sarl
fldcw
mov
pop
sbb
jnp
cs
or
mov
push
lods
popa
xchg
xchg
idivl
add
add
push
mov
inc
jbe
jmp
mov
cli
jp
dec
mov
fwait
loop
or
dec
push
out
nop
hlt
adc
and
loop
push
cmp
pop
lcall
cld
in
mov
mov
dec
pop
or
sbb
cmp
sahf
mov
ja
jmp
sbbl
insb
arpl
sub
and
mov
out
shlb
xchg
push
in
popa
into
cld
xchg
aaa
pop
std
push
jne
outsb
outsb
xor
bound
jl
and
loope
mov
jns
dec
jae
stc
subl
add
leave
das
mov
jge
xchg
inc
in
xchg
fists
push
ret
mov
aaa
pop
loop
mov
out
mov
scas
ror
mov
xor
test
dec
cmp
movsl
sti
jecxz
clc
jno
xchg
ss
dec
mov
jnp
loope
fidivrl
dec
adc
or
fcoml
mov
clc
inc
nop
fiadds
mov
sbb
push
popa
fs
dec
mov
or
aam
inc
outsl
pop
leave
sbbl
movsl
adc
fnstsw
or
cmp
in
inc
fidivrs
lcall
imul
inc
mov
cmp
pop
xor
mov
pop
stos
cwtl
xchg
int
popa
inc
mov
mov
cmpsl
fnstenv
sub
and
frstor
stos
stos
push
roll
inc
pop
lea
mov
pusha
pop
arpl
popa
xor
mov
pop
lret
mov
addr16
in
or
sub
add
push
push
test
out
sbb
enter
xor
jno
mov
cmp
fcmovnu
adc
xor
push
sbb
cmp
push
lret
xor
insl
sti
aad
bound
jp
lds
jae
xchg
lret
dec
dec
dec
gs
dec
mov
mov
pop
mov
jecxz
lret
add
insb
push
cmp
mov
filds
mov
mov
lret
push
mov
loopne
fmuls
dec
sbb
test
js
in
std
ret
addr16
bound
push
scas
in
push
pop
test
or
in
inc
push
or
cmpsl
mov
xchg
cld
jl
push
mov
mov
add
js
clc
lea
push
insl
mov
and
in
ret
cs
addr16
ja
and
cmp
imul
inc
dec
lock
jo
ret
pushf
xchg
or
in
js
jo
mov
push
cmpsl
inc
leave
inc
or
repz
and
shlb
in
mov
pop
mov
cmp
aaa
dec
inc
cmpl
adc
shlb
sub
test
xor
leave
jae
dec
sbb
aaa
pop
sahf
mov
pop
fcomps
xchg
mov
testb
or
andl
jo
repnz
mov
lods
test
inc
imul
inc
mov
xor
outsl
icebp
mov
sub
mov
jo
push
popf
addr16
sub
adc
cmp
mov
push
and
fnsetpm(287
mov
jo
lods
iret
fisttpl
lret
add
lods
xchg
les
cmp
pushl
mov
aad
ss
cmp
test
jg
mov
sbb
jne
dec
push
dec
and
mov
rcrl
mov
out
dec
pop
mov
adc
in
loop
dec
in
cmpsb
ss
shlb
ljmp
sub
stos
mov
inc
jecxz
movhps
gs
cmpsb
outsb
pop
push
xor
aas
sbb
ret
dec
mov
movb
sub
inc
f2xm1
shlb
mov
push
cmp
push
aas
push
push
sahf
add
xor
jne
adc
add
inc
shrl
repz
shr
push
fwait
cmpsb
and
icebp
push
ret
and
xor
and
push
mov
pop
or
jl
lret
mov
test
jae
and
xchg
cmpl
scas
add
cld
mov
mov
test
mov
mov
pop
rcll
ss
iret
cld
jne
xchg
out
cmpsl
aam
dec
scas
pushf
sbb
repz
movsl
mov
into
into
mov
data16
cltd
mov
or
lahf
fs
push
mov
iret
jns
mov
fldt
inc
dec
repz
hlt
sbb
push
daa
xlat
js
ret
sub
lahf
inc
jbe
sub
mov
call
push
xchg
lahf
xchg
jmp
mov
cld
fisubs
fdivrs
pop
fstl
cwtd
imulb
movsb
xchg
cmp
in
cld
enter
cmp
or
mov
sub
mov
es
push
in
mov
sub
mov
scas
pop
out
jge
addr16
data16
push
xchg
xchg
mov
jmp
sbb
jmp
jle
out
sub
fiadds
addl
add
adc
cltd
mov
pop
adc
in
push
xor
adc
inc
add
push
cmp
cmp
or
fs
nop
mov
xchg
les
out
pop
jne
imul
adc
push
pusha
shr
xor
sbb
inc
adc
icebp
xchg
mov
aaa
xchg
add
inc
in
cmp
insb
pop
xor
mov
pop
aad
mov
dec
sbbb
mov
js
or
inc
ss
mov
and
sub
pop
fwait
xor
inc
adc
in
movsl
jnp
xchg
jns
mov
rol
xchg
push
mov
aas
sbb
sbb
mov
mov
and
fwait
push
dec
cmp
or
mov
xor
mov
stos
punpcklwd
cli
test
out
and
dec
adc
adc
dec
xchg
std
sbb
fsub
mov
leave
mov
push
or
sbb
pop
xchg
movsl
pop
add
mov
adc
or
aaa
adc
aam
pop
fwait
inc
jbe
mov
pop
xor
shrl
pop
movsl
in
jno
call
iret
cltd
in
pop
cmp
pop
aaa
push
dec
push
jo
addl
je
das
inc
jnp
setle
or
mov
pop
scas
test
lahf
xor
ret
imul
inc
and
pushf
scas
sbb
cmpsb
addr16
mov
add
dec
in
jne
xchg
pop
jns
dec
dec
push
ss
jo
cmp
xchg
lret
lods
adc
sbb
mov
imul
mov
loopne
test
jmp
push
push
cmpsl
pushl
adc
push
adc
into
std
mov
or
push
clc
jecxz
and
pop
and
orb
pop
adc
jge
cmc
gs
in
mov
push
int
ds
jl
arpl
fbstp
adc
add
dec
imul
pop
loopne
xchg
pop
cmpsl
in
xchg
push
dec
clc
aaa
or
jo
cmp
or
inc
jge
jp
call
mov
mov
arpl
mov
icebp
pop
mov
xor
xchg
lea
inc
aaa
pop
cmc
iret
sbb
popf
jbe
fwait
jae
aaa
scas
inc
js
pop
popa
in
jmp
movsb
hlt
dec
dec
and
push
sti
aam
in
and
sub
pop
icebp
loope
test
lcall
lods
mov
movsl
orl
and
imul
push
push
int3
out
push
xchg
xchg
dec
pushf
mov
bnd
jmp
cwtl
jae
gs
inc
int3
arpl
rorb
addr16
pop
test
cld
rcl
adc
fcmovnu
dec
daa
sub
cmp
and
adc
lret
jmp
or
popf
mov
xchg
sahf
jle
popf
mov
ret
cld
mov
jmp
mov
fs
ss
and
iret
and
ret
push
mov
mov
adc
mov
ss
mov
std
mov
and
xchg
jmp
in
push
jp
scas
mov
cmc
sbb
dec
adc
movnti
cmc
adc
hlt
pop
dec
fisttpll
mov
cmp
paddd
in
xchg
fwait
hlt
push
xor
fstps
adc
cmp
punpckhdq
in
repnz
cs
mov
mov
movb
dec
pop
aam
mov
xor
or
in
ljmp
aas
in
xchg
call
inc
les
add
add
fs
lret
std
nop
push
pop
jg
ret
jnp
xchg
pushf
lods
pop
jg
int3
sbb
fbstp
decb
mov
mov
adcb
mov
jnp
inc
out
pushf
inc
xchg
or
ret
iret
add
add
movsl
fsubrs
xchg
sti
loop
fisubs
sbb
call
inc
push
fidivrs
push
jg
mov
test
mov
push
test
iret
sbb
lods
pop
pusha
or
push
outsb
ret
push
gs
das
in
sub
pop
and
daa
jp
daa
jae
push
idivl
xchg
insl
dec
inc
repnz
lcall
mov
loope
sub
xor
aam
inc
xchg
adc
lds
movsb
aas
icebp
adc
out
adc
cmp
addr16
cld
sbb
aad
xor
sub
and
add
jp
loope
jmp
out
adc
pushf
test
inc
loope
mov
mov
sbb
cmp
xor
or
cli
sub
push
inc
stos
mov
jp
mov
fsubrs
fstpt
nop
pop
dec
insl
xor
mov
pop
insb
or
xor
jmp
mov
popf
mov
dec
push
and
in
stos
fcmovb
hlt
out
and
sahf
adc
inc
movsl
bound
jbe
popa
outsb
xchg
mov
sbb
ret
pop
adc
leave
add
jle
int
ret
cmp
mov
push
ret
mov
js
je
mov
dec
jae
lahf
mov
fsubrl
cs
jge
dec
insl
pop
adc
out
je,pn
dec
jge
push
daa
dec
xor
adc
or
fisubl
pop
cmp
dec
es
jne
cwtl
mov
addb
into
dec
jl
das
lods
xchg
test
cmpsl
inc
xchg
cmpsl
mov
dec
jge
xchg
jo
sub
das
push
lea
scas
ret
popf
decb
stos
mov
fwait
scas
daa
adc
outsl
push
stos
loopne
lcall
lds
mov
adc
mov
std
shl
adc
pushf
cmp
jmp
push
xchg
inc
mov
push
dec
sbb
dec
out
ds
sub
push
add
adc
mov
out
dec
add
mov
movsb
sub
xchg
cmp
mov
repnz
mov
pcmpgtb
pop
and
ret
ja
js
push
fwait
iret
scas
pop
xchg
sbb
daa
pop
out
mov
adc
stc
test
out
sbb
inc
aas
mov
mov
imul
push
scas
jge
push
int
add
inc
int3
nop
mov
mov
aas
push
pop
stc
inc
std
das
iret
and
rcll
add
adc
call
mov
sub
loop
lods
or
mov
adc
cmc
shlb
pop
jmp
sbb
pop
add
xchg
dec
fbld
inc
sbb
ss
or
movhps
dec
inc
dec
daa
inc
out
xlat
mov
repnz
inc
or
pushf
aad
or
shlb
flds
adc
jle
cmp
xor
mov
das
add
js
enter
cmp
ss
push
out
sub
mov
mov
scas
pop
adc
mov
lret
loop
dec
xor
dec
shll
cwtl
out
out
adc
or
std
mov
inc
ret
aaa
aad
pop
xor
lds
pop
sub
jge
jae
fiadds
cmp
adc
fcoml
lods
inc
ret
scas
mov
call
push
imul
pop
sahf
fisttps
push
mov
push
sub
lret
dec
mov
shrb
or
gs
stc
jae
lock
xor
iret
sbb
and
and
lret
movsl
and
dec
ret
cmp
jg
pop
bound
stos
jbe
mulb
lret
or
pop
inc
js
pop
andb
cmp
sub
and
rorb
enter
pop
js
sbb
out
cmp
inc
lock
enter
push
mov
mov
lret
inc
pop
popf
and
or
insb
and
scas
icebp
sub
inc
sbb
pop
js
orb
xchg
lea
nop
movsl
jmp
pop
adc
fsubrl
pop
stc
std
arpl
sub
mov
adc
lock
xchg
and
jb,pn
notb
mov
sahf
inc
sti
push
pop
notl
cmp
cmp
loop
dec
lock
fisttpl
push
xchg
and
xor
loopne
xor
inc
xor
pop
jmp
inc
and
repnz
gs
jl
pop
lods
push
iret
in
mov
rorl
mov
inc
fsqrt
stc
mov
or
fdivrp
hlt
inc
pop
mov
inc
inc
xchg
cmp
in
out
nop
jle
lahf
sub
pop
fs
imul
mov
jb
loope
xchg
pop
inc
lds
or
adc
scas
sub
scas
add
mov
cmp
pusha
jge
mov
data16
and
push
jle
shlb
cmp
shrl
mov
nop
int
fimuls
mov
adc
push
push
outsb
sub
adc
call
pop
insb
inc
push
xor
mov
out
cmp
loopne
sub
push
mov
popf
insb
xchg
shll
jmp
add
daa
jno
dec
pop
cmpsb
cld
push
cmp
insb
or
jne
mulb
fsubs
lock
or
mov
sbb
pop
out
aad
ss
pop
jmp
lret
lods
insb
sub
fadds
xchg
rorb
cmp
lcall
sbb
mov
xor
iret
mov
dec
les
push
repz
cmp
dec
test
cmp
inc
imul
daa
jbe
pop
out
aam
sub
lods
popf
adc
movsb
addr16
mov
adc
icebp
rolb
jle
push
sarl
pop
mov
cld
xor
and
cwtl
out
mov
scas
popf
shlb
and
fcmovnb
imul
imul
in
pop
pushf
jge
fmulp
push
fildl
addr16
jp
mulb
sbb
lods
and
stc
js
pop
cmpsb
movsb
ds
in
and
mov
enter
mov
mov
sbb
cs
xchg
or
fidivl
test
dec
aad
std
sub
xchg
cmp
rcrb
push
mov
or
mov
or
ss
in
cmpsb
iret
out
cs
push
cli
mov
mov
gs
sub
pop
ficoml
and
sahf
arpl
jle
mov
cld
mov
repnz
jle
push
mov
pop
cltd
xor
sbb
mov
push
mov
sub
outsl
push
sbb
or
fsqrt
sahf
xor
jge
rcll
or
leave
push
and
sub
jg
xor
add
fnstcw
leave
pop
dec
pusha
xchg
cmp
mov
rcl
xchg
sub
in
stos
movsb
daa
insl
pop
sub
push
add
and
adc
push
sub
mov
gs
ret
fwait
push
pusha
jbe
arpl
and
int
mov
cmp
clc
push
pop
int3
mov
xchg
mov
fisubs
ret
cmp
les
scas
xchg
add
int
loopne
xlat
mov
mov
sbb
into
xchg
pop
xlat
dec
cltd
hlt
je
dec
lock
xchg
adc
jae
sbb
mov
sbb
jle
pop
cmp
fwait
jg
sbb
lret
dec
inc
cmpsb
dec
xor
sahf
or
addr16
lahf
pop
sub
and
sub
adc
lods
icebp
shrb
add
inc
push
cmpsb
popf
leave
pusha
and
faddp
dec
cmp
aas
or
mov
frstor
out
daa
ffreep
fcomip
aaa
loopne
divl
outsb
iret
fdivs
nop
adc
pop
je
das
les
imul
aam
push
cltd
sbb
and
mov
das
xchg
jo
push
mov
or
aas
or
mov
pop
or
dec
or
mov
aas
cmp
out
call
fnstenv
int3
fildl
faddl
pop
xchg
mov
scas
xor
pop
jno
pop
jge
in
mov
pop
lcall
mov
in
inc
mov
nop
cmp
stos
leave
icebp
jle
pop
mov
add
aam
inc
inc
shll
pop
fs
mov
cmp
or
ja
add
mov
andl
mov
cmp
pop
push
dec
jp
jle
xchg
jb
pop
popa
lds
inc
into
mov
xor
and
push
dec
inc
xchg
in
inc
scas
ficoms
out
mov
jne
loopne
inc
ljmp
notb
mov
dec
test
push
sbb
fistps
fnsave
push
cmpsl
pop
cmp
lret
lret
scas
inc
mov
push
jp
in
xchg
sbb
cmpxchg
xchg
imul
or
or
shrl
ds
scas
icebp
mov
rol
test
aaa
push
ret
icebp
mov
repnz
imul
cmc
mov
in
jg
sbb
push
jle
scas
jns
data16
cmp
enter
es
mov
test
pop
sbb
dec
inc
jg
mov
sbb
dec
out
cmp
lahf
push
inc
pusha
daa
jmp
shlb
leave
jo
mov
in
cwtl
mov
fisttps
jle
dec
imulb
insl
jl
adc
cltd
fdivr
sbb
push
jecxz
pop
inc
fisttpl
testl
fiadds
lock
and
jle
leave
repz
test
inc
push
xchg
scas
mov
fmuls
mov
sub
faddl
arpl
jnp
iret
sub
mov
adc
je
pop
inc
in
shlb
add
fs
xor
mov
cmpb
sbb
mov
fwait
push
rcrl
cmp
shrl
lret
lahf
mov
add
xor
jp
inc
jae
mov
push
mov
popa
call
or
lock
cli
sbb
add
shr
mov
stc
inc
dec
lret
mov
xor
or
fsubr
andb
cmpsb
mov
ss
adc
and
lret
xor
das
xchg
dec
std
jns
lods
sub
jo
ljmp
or
in
int3
jbe
and
or
ljmp
or
xchg
jmp
mov
cltd
cmpsl
test
adc
xor
fdivl
pushf
jg
sub
nop
adc
ss
push
mov
mov
cmp
ja,pn
lea
and
arpl
mov
frstor
dec
sbb
push
das
shlb
adc
jbe
push
inc
mov
cmc
xor
cltd
cmc
dec
or
mov
nop
push
mov
xor
jg
pop
sub
jp
pop
into
push
nop
les
test
push
subl
or
cmc
sbb
idiv
dec
cmpsl
popf
dec
inc
out
fildl
jns
cltd
sarb
cmpsl
std
sub
in
jne
scas
mov
xchg
das
cmp
out
scas
lds
cld
jo
shrl
sub
pop
ja
pop
int
and
mov
stos
arpl
jae
in
cli
push
movsl
adc
sbb
fistpll
jne
mov
sub
cmp
adc
mov
xor
jne
pop
inc
pop
add
xchg
mov
std
test
loop
mov
imulb
jb
xchg
aam
lret
mov
cmp
push
int3
dec
adc
leave
fidivrl
daa
xchg
test
aaa
leave
pop
mov
dec
loope
dec
push
and
rcll
add
dec
mov
jmp
stos
scas
mov
std
enter
mov
mov
or
lcall
insb
inc
and
ljmp
add
sbb
cmpsb
aam
mov
fnstcw
das
mov
inc
leave
fisttpll
and
inc
aas
cmp
aad
jg
fcomp
test
push
sbb
pop
xor
cmp
ficoml
jbe
pop
fwait
or
std
and
fmuls
push
aas
shl
jmp
ds
pop
fimuls
mov
test
add
cmpsb
cld
fldt
or
and
or
xchg
pop
mov
add
in
push
fdivl
pop
gs
gs
pop
das
inc
adc
stos
cmp
push
test
sbb
fiadds
iret
pop
in
inc
xor
int
xchg
ret
jno
mov
mov
jecxz
rcr
popf
pop
sub
xlat
jo
jle
xchg
mov
and
test
stc
jo
or
and
inc
and
sbb
cwtl
ret
push
mov
push
pop
hlt
mov
subl
inc
cmp
dec
out
or
xchg
ffree
mov
adc
lret
aaa
data16
ss
cltd
arpl
pop
js
xchg
mov
adc
arpl
lret
sub
fwait
xor
add
xchg
jo
subl
pop
pop
aad
movsb
inc
push
jecxz
shl
sub
inc
inc
or
inc
add
idivb
int
and
jp
mov
dec
dec
mov
inc
test
pop
gs
cwtl
scas
ja
rol
jae
pop
call
or
lea
lahf
mov
ss
jmp
popa
fstpt
shrb
arpl
ret
mov
popl
outsl
or
roll
push
push
jmp
pop
push
xchg
and
or
roll
outsb
lahf
mov
dec
xchg
clc
out
inc
sub
xlat
ret
mov
fcmovnbe
fs
ret
call
fs
push
mov
cmpsb
or
int3
scas
inc
jle
mov
es
mov
sbb
cmc
pop
icebp
subl
push
in
or
pop
sti
hlt
and
je
add
in
push
cmp
sbb
cmpsb
shl
repnz
call
fwait
popa
and
pop
mov
out
adc
pop
test
or
cmp
icebp
push
inc
dec
xlat
pop
jne
mov
mov
jl
in
pushf
mov
roll
aaa
sbb
aaa
or
jg
dec
push
push
test
mov
ds
mov
cs
pop
dec
test
mov
cld
jnp
add
std
xchg
mov
mov
xor
sahf
lds
repz
cmp
xchg
push
pop
out
adc
xor
mov
ss
and
add
int3
in
xor
out
xchg
pop
push
xchg
adc
test
loopne
ficoml
daa
add
mov
and
adc
jbe
out
xchg
inc
in
aam
xor
insb
jmp
rorl
pop
ss
or
or
sub
lods
outsl
xor
pop
xchg
and
out
negb
adc
xchg
call
fnstcw
sbb
stos
cmp
cmpsl
fstpl
shlb
fcmovbe
test
rcrl
addb
lahf
xchg
sbb
lods
ss
and
push
nop
insl
push
mov
mov
test
pop
push
fdivl
std
jae
adc
into
movsb
pop
movsb
push
insb
loop
xchg
xchg
mov
shll
sarl
fs
lret
jg
push
and
fcoml
rol
dec
xchg
adc
cmpb
cmp
bound
sbb
inc
mov
idivb
adc
js
dec
pop
jl
jnp
ds
adc
inc
sbb
out
daa
sub
lahf
dec
dec
xchg
repz
push
pop
dec
mov
shl
jg
push
mov
xchg
push
gs
bound
cmpsl
fcmovb
mov
outsl
inc
pop
xor
cltd
in
shlb
sbb
adc
scas
hlt
jmp
fbld
dec
shlb
xchg
sbb
fisubs
add
test
iret
jl
cmp
sub
sbb
mov
cmpsb
int3
stc
jmp
jae
and
mov
or
jle
cmpsl
cld
inc
lods
dec
loop
rcll
cmp
lock
movsl
push
orl
jnp
push
aaa
les
das
cmp
inc
mov
sub
int3
adc
mov
pop
inc
mov
imul
mov
das
or
sbbb
mov
in
jp
fisubs
adc
mov
lret
movsb
gs
fldenv
repnz
mov
scas
push
jo
inc
inc
cmp
inc
xor
dec
sub
pop
pop
negb
scas
mov
and
cwtl
fidivl
mov
or
test
cmp
and
mov
xchg
cmp
lcall
and
mov
jbe
adc
lds
mov
dec
mov
inc
orl
out
xor
add
sub
push
or
xchg
mov
xchg
sub
scas
fs
sarb
jb
xchg
clc
neg
sub
scas
add
nop
push
in
mov
outsb
fs
adc
push
mov
mov
data16
cltd
cmp
sub
repnz
in
icebp
ret
inc
mov
pop
adc
ds
bound
adcb
test
add
leave
sbb
icebp
add
shll
in
jae
cmp
out
test
rorl
push
mov
fs
adc
sub
out
ret
nop
sbb
rolb
gs
je
bound
notl
push
jl
xor
and
xor
nop
ja
push
mov
mov
iret
sub
lret
adc
add
adc
imul
add
test
mov
bound
mov
pushf
mov
leave
mov
rcrb
mov
cmp
aaa
sub
mov
adcl
lahf
xor
mov
in
jl
mov
sahf
pop
inc
jae
dec
xchg
idiv
js
jmp
jge
into
cld
pop
adc
shr
pushf
add
test
cltd
daa
jae
mov
mov
push
popl
add
sbb
mov
mov
dec
jno
mov
mov
lcall
jp
pop
test
push
xor
mov
mov
es
mov
or
xlat
inc
mov
imul
xchg
xchg
jne
add
ljmp
push
stos
leave
pop
cmp
fwait
ljmp
jbe
cwtl
loope
mov
adc
push
xchg
add
jmp
or
shlb
popf
add
lcall
mov
daa
pop
imul
sub
ja
push
xchg
das
nop
sbb
cmp
sbb
imul
cli
test
stc
enter
jge
adc
mov
testb
mul
pop
add
imul
adc
mov
pusha
inc
lar
add
leave
loopne
and
jne
jne
pushf
or
inc
jmp
lcall
cmpsb
xchg
cld
or
push
outsl
test
stos
lret
fbstp
jge
mov
xchg
adc
pop
xlat
xchg
mov
popa
and
cmp
insb
sub
mov
and
fidivrs
neg
pop
xchg
test
push
shll
lret
ljmp
scas
cmp
mov
jae
iret
dec
add
loop
mov
or
lahf
cs
xlat
sbb
sarb
mov
pop
icebp
ja
mov
pop
sbb
cltd
pop
xor
jae
dec
ljmp
xor
out
adc
hlt
gs
ret
xorb
enter
dec
rorl
add
inc
dec
mov
xchg
xchg
sbb
mov
jge
mov
jnp
or
add
pop
cli
mov
out
ret
fdivs
sbb
stc
mov
xchg
pop
mov
pop
or
in
fcomp
js
shr
mov
aas
sub
loopne
test
add
dec
dec
les
lods
push
or
add
add
into
out
or
mov
scas
imul
fwait
rcrb
mov
scas
pop
dec
mov
ret
pop
xor
jns
pop
push
xchg
sarb
aaa
jle
mov
test
inc
pop
fisubl
mov
ret
xor
and
push
jns
out
addr16
xchg
bound
mov
mov
in
outsb
aas
jae
inc
jmp
inc
mov
nop
mov
std
maskmovq
divl
lahf
jge
jle
clc
mov
mov
dec
in
loop
and
push
xlat
cmp
mov
leave
mov
push
dec
dec
jmp
das
in
jbe
xchg
cli
gs
mov
jno
into
adc
jne
adc
add
ret
add
mov
xchg
xchg
jae
scas
fidivs
cmp
adc
dec
jge
icebp
pop
out
mov
add
std
xlat
fwait
mov
ja
enter
push
out
pop
and
cwtl
movsl
and
pop
nop
xlat
push
repnz
push
cmp
ss
mov
je
mov
dec
inc
imul
ljmp
push
and
xchg
mov
cs
repnz
les
aad
push
xchg
dec
addb
inc
icebp
mov
adcl
sub
ret
dec
push
push
mov
call
cltd
xorb
out
cmp
fistps
stc
js
dec
xchg
mov
cmp
std
push
mov
adc
movsl
pop
and
push
dec
xchg
mov
mov
add
sub
cltd
dec
adc
scas
sub
xor
jp
enter
add
push
test
fidivl
adc
jo
mov
mov
mov
rcrl
inc
imul
sbb
lods
push
mov
push
and
xlat
and
pop
out
sti
sbb
je
aam
mov
sub
mov
lock
call
lret
xor
cwtl
sub
dec
enter
ja
mov
mov
mov
popa
sub
popa
aad
aad
push
pop
push
lahf
stc
or
movsb
dec
mov
cmp
dec
xchg
pop
sbb
ljmp
pop
xchg
adc
pop
int3
enter
roll
inc
cmp
mov
push
repnz
ja
test
pop
inc
cmp
jmp
sarb
push
adc
lahf
pop
inc
popf
insl
add
xchg
add
or
in
lea
sahf
pop
insb
add
xor
or
jo
cmp
push
inc
insl
in
addr16
fidivrs
inc
and
adc
idivl
mov
std
xor
cmpsl
adc
mov
outsb
and
adc
aam
je
inc
pop
incl
pop
xor
xchg
push
repnz
std
rorl
dec
aad
out
xor
sbb
dec
repnz
xlat
sbbl
in
mov
lds
adc
pushf
jno
rcl
push
rcr
mov
mov
into
xchg
out
add
rorl
fidivrl
mov
or
ret
inc
and
push
sbb
cld
cmp
jne
add
fs
xorl
add
ret
xor
push
inc
ja
scas
mov
xor
stos
outsb
rclb
dec
subb
idivl
mov
in
mov
ds
pop
sbb
outsb
sbb
ja
fs
and
xor
repz
sbb
jp
pop
mov
xor
sbb
fists
add
cld
inc
adc
outsl
inc
mov
jecxz
add
sub
ss
fnsave
mov
mov
mov
pop
xchg
cmp
xchg
xor
mov
lret
mov
leave
fwait
repz
jne
aad
imul
mov
xchg
sahf
popa
lea
or
jle
inc
in
cs
lods
into
xchg
cmpsb
pop
jp
pop
sahf
aam
cld
repz
das
push
in
insb
insb
fwait
adc
fidivl
stc
insb
das
pop
inc
aam
je
fcoml
clc
adc
mov
xor
loop
bound
pop
stos
inc
aaa
sar
lcall
adc
mov
mov
and
test
pop
dec
stos
icebp
mov
rclb
jb
xor
or
addr16
rolb
cltd
divb
or
jnp
sar
cmp
call
sbb
jecxz
sbb
flds
imul
mov
sub
xor
stc
push
sbb
repnz
push
mov
xchg
fimuls
xchg
jmp
fwait
or
mov
jl
add
andb
in
sbb
push
out
loopne
bound
js
data16
mov
mov
div
inc
pop
aaa
pop
pop
sub
mov
adc
shlb
push
or
popf
out
int3
inc
clc
sub
xchg
into
jmp
lahf
sbb
int3
add
xchg
arpl
pop
pop
dec
jmp
rolb
test
mov
dec
cmp
push
adc
ficompl
jbe
iret
push
pop
xor
jae
cltd
lea
insl
pop
dec
repnz
into
imull
sub
stos
xchg
inc
aas
cmp
ficoms
repz
dec
sub
or
dec
dec
loopne
clc
dec
mov
fucomip
dec
cwtl
xchg
scas
jne
test
fildl
xchg
repz
sub
mov
cmc
nop
cmp
xchg
add
xor
push
jmp
jle
jp
and
xchg
sahf
aam
jmp
sub
sbb
dec
pop
push
dec
loopne
lret
pop
clc
loope
sub
mov
stc
mov
shl
inc
and
dec
mov
out
out
sti
rclb
cmp
sahf
jae
add
mov
jb
fisubrl
adcl
add
stos
add
xchg
in
adc
cmc
jne
and
sbb
out
imul
pop
pop
mov
pop
andl
loopne
xor
mov
fcompl
push
je
sarb
jmp
jmp
pop
xor
dec
sub
inc
popa
add
lock
push
sbb
mov
xor
xchg
and
movsl
jbe
xor
scas
mov
cli
pop
jle
jmp
pop
mov
mov
dec
sbb
cmpsl
sbb
lret
pop
lods
aas
jae
cli
cmp
pusha
cmpsb
ljmp
xchg
movsl
arpl
iret
cs
and
call
pop
dec
icebp
sbb
sub
mov
mov
insb
mov
xchg
xchg
adc
jnp
cli
outsl
sub
push
jp
nop
push
jle
out
lock
mov
mov
mov
fistps
mov
ds
pop
push
outsl
in
scas
or
sub
mov
xchg
pop
sub
leave
popa
add
ss
pop
cmp
test
jl
cwtl
out
mov
or
or
jb
pop
and
xor
xchg
xchg
cmp
outsb
xor
mov
pusha
xor
xchg
mov
in
jb
lahf
fmul
in
mov
sar
xchg
ds
scas
lds
fstl
out
and
call
mov
ljmp
stos
lahf
inc
push
or
xor
lods
xchg
push
pushl
int
dec
clc
xchg
lahf
and
cld
or
data16
push
mov
sti
fmuls
js
mov
fsts
arpl
cmp
ds
rorl
inc
pop
jecxz
xchg
adc
pushf
lods
pop
dec
lret
test
cmpsb
xchg
mull
push
cmp
fistpll
loop
jb
xchg
test
jne
push
sub
fsubs
cmpsb
xor
push
mov
das
xor
push
add
lods
out
sub
and
xchg
repz
mov
leave
xor
call
jns
ljmp
xchg
cltd
cs
sahf
gs
dec
mov
xor
rorl
test
xlat
lods
mov
inc
adc
or
lods
imul
sahf
sub
je
xchg
or
push
jno
push
rcr
mov
repz
push
push
popa
leave
cmpb
dec
mov
xchg
mov
int
and
dec
sti
fildll
xor
or
dec
sub
mov
stc
push
adc
fwait
mov
mov
dec
leave
mov
adc
fstps
sbb
bt
mov
mov
icebp
and
cmpsl
cmp
add
xchg
movsb
xlat
out
hlt
lret
nop
pushf
inc
mov
push
xchg
pop
test
and
cmp
js
stos
inc
cmp
test
das
stos
push
xchg
mov
mov
fwait
test
xchg
xchg
xchg
into
inc
out
fldt
or
or
lret
lahf
cmpsb
xchg
pop
mov
psubusw
inc
push
data16
ds
and
rol
cmp
stos
push
mov
fimull
ret
lret
jae
cmp
adc
ss
push
inc
fwait
sub
or
push
fwait
sbb
int
sub
dec
aas
xor
imul
aad
push
jl
and
dec
outsl
ficoms
xchg
xchg
pop
aam
xlat
pop
sbb
jge
dec
xlat
xor
sub
ljmp
adc
jae
sub
mov
hlt
fldt
negb
lahf
fs
sub
inc
das
xor
scas
ljmp
mov
inc
pop
ss
call
xor
inc
xchg
mov
inc
dec
cmp
andl
add
cmpsl
dec
dec
int3
xchg
jg
call
jb
push
subl
outsb
out
jle
sbb
call
mov
push
nop
addr16
xchg
fs
rorb
mov
push
jno
loopne
dec
ds
xchg
mov
mov
xchg
in
xor
mov
in
mov
adc
lcall
inc
bound
xor
sub
and
jg
mov
xorl
stos
cmpsb
test
push
das
loopne
adc
mov
jp
xchg
push
sub
idivb
add
icebp
sub
mov
mov
mov
inc
sub
ret
inc
mov
fldt
pop
inc
imul
sub
push
dec
out
out
push
daa
push
mov
stc
and
mov
call
xchg
cmp
icebp
cmpsl
or
add
mov
leave
ficoms
lods
pusha
mov
sub
enter
dec
cmpsb
xchg
or
cmpsb
je
add
xor
and
and
cmpsb
sarl
sbb
xchg
rol
mov
in
rclb
xor
xchg
push
outsl
lds
or
push
js
repnz
stos
stos
xor
aad
mov
add
enter
ljmp
push
stos
not
pop
in
push
lcall
sbb
mov
jecxz
push
dec
mov
fcomps
icebp
inc
jmp
xchg
xchg
push
mov
inc
pusha
fisttpl
out
pop
in
cli
sahf
dec
test
adc
jnp
sub
jp
sub
mov
inc
mov
jbe
fidivrs
pop
mov
inc
sub
jecxz
jns
in
cwtl
movsl
call
mov
outsb
push
in
out
imul
xchg
mov
fidivl
lret
mov
add
ja
lods
and
mov
mov
inc
inc
lods
int
rcrl
sub
pop
xlat
mov
sub
pop
iret
sub
cld
inc
xchg
aam
fwait
lahf
aad
adcb
xchg
adc
lret
jb
mov
xor
nop
jns
adc
jb
ficompl
mov
bound
xchg
inc
and
insl
cmp
add
dec
fwait
mov
xor
nop
add
insl
push
loopne
ds
lods
push
int
decl
mov
loope
mov
fisubl
mov
jge
jle
sahf
fld1
xlat
jle
xchg
imul
rcrl
andb
gs
mov
fwait
pop
loopne
mov
jle
push
pop
test
jl
aam
aad
mov
sbb
cmc
push
cmpsb
fistpl
std
repnz
sbb
gs
cwtl
mov
adc
mov
lret
push
adc
xchg
xor
sub
jne
adc
jmp
into
mov
cmp
mov
cmpsb
out
mov
inc
jb
mov
cmpsb
inc
shl
out
imul
rolb
add
cmpsl
loope
insl
mov
push
aad
push
inc
int3
or
push
popaw
jle
xchg
cmp
ja
std
loop
aas
ret
add
xor
lea
mov
sbb
xor
adc
movsb
adc
sub
mov
mov
fldpi
shrl
inc
inc
xchg
adc
dec
ret
sub
stos
loopne
roll
sbb
or
pop
aad
fdivr
dec
movsb
cwtl
mov
fdivr
cmp
jle
push
xchg
xor
sbbl
stos
xchg
cmp
fldlg2
push
mov
iret
adc
ss
and
xchg
scas
icebp
shll
fisttps
int3
mov
in
aam
mov
adcl
repnz
int
fcompl
pop
push
mov
fdivrs
pop
jb
jmp
ret
fcoms
dec
push
mov
mov
cmp
pop
inc
inc
stos
add
push
xchg
inc
lock
mov
push
rol
xor
test
sbb
aaa
sbb
jecxz
inc
mov
adc
jo
add
stc
das
mov
and
sub
stos
pop
mov
mov
jnp
inc
arpl
add
jge
imul
mov
ljmp
inc
bound
mov
leave
dec
jns
push
sbb
dec
xor
loop
push
xchg
fimull
enter
xchg
cmp
dec
andl
lret
leave
pop
push
mov
mov
inc
lock
lods
sub
lea
fs
ret
sbb
jae
or
clc
ficoml
mov
cmp
ja
mov
arpl
mov
and
cmp
lahf
negb
cmpsl
mov
inc
dec
xchg
loop
cvtps2pd
mov
mov
jle
xchg
adc
sub
popa
out
iret
pop
pop
call
or
inc
cmp
jne
jecxz
mov
sub
push
movsl
dec
test
mov
or
mov
xchg
lcall
mull
adc
stos
jge
scas
stos
add
cmp
mov
push
outsb
movsl
cmp
and
or
push
mov
xor
int
mov
cltd
sbb
dec
xchg
dec
mov
mov
pop
lock
pop
stos
cmpsb
and
shrb
das
sbb
add
cmpsb
xchg
nop
mov
dec
dec
je
pop
pusha
inc
pop
mov
xchg
inc
ss
sbb
stos
addl
inc
dec
xorb
mov
xchg
dec
jecxz
mov
push
and
popf
addl
cwtl
addl
sub
ja
lret
test
add
je
fsubrs
push
sbb
inc
sub
fsubrl
mov
mov
push
pop
dec
mov
fldl
enter
lock
jge
std
lahf
inc
mov
notl
pop
cltd
jecxz
mov
in
jp
rcll
mov
or
push
mov
mov
xchg
outsb
mov
dec
popf
xor
lock
xor
push
data16
mov
push
test
sub
rorb
outsl
xchg
mov
inc
add
es
cmpsl
and
test
adc
in
xchg
sahf
dec
loop
fisttpl
dec
outsb
les
mov
stos
ret
jae
xor
js
sub
jg
rcrb
stos
push
scas
mov
mov
sti
lcall
push
mov
lahf
outsl
mov
xchg
imul
sbb
je
shr
out
js
movsl
scas
sbb
popa
or
xchg
push
loope
pop
repnz
xor
loop
mov
pusha
cmpsb
cmpsl
clc
imul
inc
imul
push
inc
out
mov
lods
pop
scas
rcll
adcb
lcall
sbbb
mov
daa
push
mov
aad
push
js
lret
xor
insl
pop
push
push
stos
pop
ficompl
rclb
push
xchg
testb
pop
pop
jecxz
loopne
sbb
and
xor
jle
mov
fcmovbe
sbb
xor
jge
mov
sub
inc
or
inc
mov
adc
xchg
inc
jb
push
out
fdivs
roll
lods
sub
in
js
and
pop
in
int
mov
mov
call
mov
add
stos
or
add
mov
ror
pusha
out
out
xor
fs
xchg
lcall
ljmp
mov
push
push
adc
gs
pop
ja
mov
pushf
pop
jmp
fsubrs
dec
pop
mov
inc
test
dec
xchg
jnp
mov
incb
mov
loope
inc
lret
lods
imul
mov
cmpsl
push
enter
ljmp
cmpb
into
add
ret
and
testb
inc
xchg
movntps
adc
jbe
push
cld
jnp
mov
mov
jl
test
jp
xchg
movb
or
outsl
push
cmp
dec
ret
push
pop
mov
stos
jnp
js
xor
xlat
push
mov
jno
jb
sub
push
adcb
cmp
cmpsb
adc
jne
clc
mov
sbb
rolb
fiaddl
fldenv
jno
sbb
es
jp
sub
jb
movsb
sbb
pop
movsl
pop
sub
push
cli
jecxz
stc
inc
xchg
sub
stos
cltd
adc
cmpsl
jmp
pop
movl
push
and
mov
sbb
cld
mov
sub
xchg
fisubrl
mov
cltd
adc
je
ljmp
xchg
mov
push
loopne
pop
or
cli
cmp
add
push
icebp
out
mov
xchg
aas
fstl
into
mov
pop
add
data16
mov
pop
jle
xchg
pop
pop
lods
cmp
fsubrl
mov
stc
rorl
push
xlat
and
lcall
mov
xorb
jnp
daa
xchg
inc
mov
loope
jae
out
xor
imul
cmp
pop
xchg
mov
fiadds
lret
fsin
jnp
fidivrs
pusha
sahf
adc
popf
cmp
stc
add
mov
adc
jb
js
arpl
push
daa
xor
gs
inc
lds
ret
xor
mov
shll
pop
push
push
or
mov
in
inc
mov
cld
cmp
push
jge
sbb
sbb
outsb
mov
mov
xchg
in
test
jecxz
shrb
dec
pop
popa
xor
inc
pmuludq
dec
push
sbb
jnp
gs
aad
push
shl
xchg
add
mov
inc
xchg
mov
mov
push
adc
int3
repz
dec
dec
out
mov
mov
xor
or
loopne
std
in
dec
lds
mov
daa
outsl
or
xchg
stos
cmp
sahf
and
add
out
nop
inc
aam
mov
and
or
mov
repnz
sbb
cmpsb
or
cs
or
aaa
fstpl
flds
mov
lods
aas
sub
ljmp
gs
mov
jbe
test
xchg
fbstp
stos
lahf
fldcw
xor
cmp
test
loopne
loopne
jmp
call
mov
add
and
dec
es
push
das
cs
std
lret
shll
ljmp
ja
cltd
sbbl
mov
or
xchg
xorl
pop
push
lcall
push
movsl
fsubrs
push
lret
out
pause
mov
or
push
mov
scas
mov
mov
xor
lret
outsl
sub
ficompl
shlb
fisubrl
push
mov
cltd
or
or
and
leave
lcall
test
in
scas
dec
loopne
or
sbb
fcmovne
rolb
xorl
lods
scas
pop
mov
cmpsb
lods
pop
sub
out
aad
xor
push
sub
dec
mov
jp
push
sbb
mov
add
in
mov
rol
dec
mov
xchg
xchg
add
push
dec
insb
dec
arpl
hlt
pusha
sbb
pushf
fwait
and
mov
call
mov
enter
call
out
xor
and
out
in
cmp
cmp
pop
push
aas
jp
push
cmpsl
mov
adc
lock
fnsave
inc
xor
mov
or
lods
xor
das
ret
cmpsl
in
xorl
fisubrl
or
add
ficompl
xchg
lods
jno
out
push
pushf
add
leave
jp
sbb
mov
xor
xchg
test
inc
jb
xchg
mov
das
inc
add
xor
or
mov
add
ret
subb
cmp
dec
or
je
mov
sbb
add
out
pop
push
pop
jmp
int
cmp
and
pop
fildl
cli
xor
lods
jbe
lock
or
mov
pusha
push
fadds
jecxz
orb
add
cli
test
xchg
scas
lds
push
inc
inc
or
cltd
ja
cmpsl
cmp
popa
add
sub
push
push
adc
cmpsl
xchg
mov
sti
sar
and
pop
sbb
in
repnz
dec
call
push
sub
mov
dec
fwait
not
mov
or
shr
cmpsl
cld
dec
dec
inc
mov
les
inc
jns
adc
mov
cmp
rolb
clc
stos
ss
inc
adc
xchg
sbb
mov
nop
aaa
lods
inc
and
or
mov
leave
arpl
mov
xor
ret
rclb
jmp
cltd
push
push
test
loop
mov
fcomp
jnp
or
testb
fwait
adcl
negb
iret
xlat
inc
jbe
add
lock
jnp
mov
insb
pop
insb
dec
mov
and
les
test
cli
stos
scas
cmc
fildl
pop
push
mov
clc
cmp
lock
xor
xlat
test
push
jg
lahf
dec
cmpsb
ljmp
xchg
jae
je
adc
dec
push
pusha
ficompl
mov
pop
icebp
cmp
daa
inc
and
mov
mov
push
nop
lods
add
mov
adc
lea
std
ljmp
dec
stc
pushf
pop
push
dec
div
sti
mov
arpl
pop
push
pop
movb
sub
fistpl
sub
inc
mov
sub
sbb
lret
loopne
push
repz
repnz
add
cmp
lea
jl
adc
adc
movsb
and
insb
stc
pop
aam
es
enter
scas
repnz
lcall
cmp
xchg
fsubs
add
sbb
xchg
in
fidivl
mov
push
fdivs
dec
inc
call
fcoml
fwait
imul
pop
mov
fiaddl
or
xor
cmp
push
lods
or
loop
xchg
xor
jp
mov
in
pop
andb
int
push
lock
or
loopne
jl
sar
test
lcall
rol
cli
imul
and
in
faddl
dec
xor
iret
ljmp
and
scas
arpl
mov
mov
xor
pop
inc
imul
js
ja
xchg
xchg
lods
int
daa
xor
or
jns
jp
cmp
cwtl
xchg
fisubs
hlt
pop
and
or
jne
addr16
dec
xlat
stos
lcall
cld
xor
pushf
cltd
xchg
sbb
in
mov
adc
test
xor
pop
inc
repnz
and
mov
jmp
pusha
dec
push
add
push
pop
mul
adc
pop
and
mov
dec
xlat
push
imul
push
bound
mov
add
push
lret
pop
shll
mov
mov
add
leave
shl
nop
clc
add
jae
jnp
out
adc
enter
popa
jg
cli
push
bound
subb
sub
popf
lods
mov
push
ss
ror
mov
push
xchg
mov
mov
mov
jp
imull
xlat
push
movsb
jne
dec
dec
outsb
addr16
xchg
sahf
sbb
inc
cmp
gs
jno
outsl
mov
pushf
xorl
stc
lods
shr
pop
inc
ja
mov
and
scas
adc
sub
fistl
pop
jns
sub
ret
pushf
lret
push
ret
or
cmpsl
add
cmc
adc
pop
popf
mov
mov
outsb
mov
clc
mov
jmp
mov
push
sbb
ffree
mov
jecxz
idivl
mov
push
popa
out
insb
aad
and
xchg
jnp
mov
push
pop
mov
cmp
fists
testb
xchg
pop
js
clc
sahf
sub
pusha
or
inc
mov
ret
outsl
sub
shrl
loop
add
adc
std
xorl
insl
inc
cmp
xor
xor
mov
pop
cmp
loopne
nop
dec
jle
fildl
sbb
inc
stc
push
fadd
xchg
lret
xchg
fsts
loop
cmp
jnp
xlat
add
sub
xchg
fisubrs
sbb
and
xor
andl
lret
shlb
mov
fdivrl
aaa
add
sbb
and
dec
insl
push
lea
movsb
inc
push
cmp
sbb
sbb
push
popa
xlat
mov
pop
mov
dec
inc
xor
insb
stos
cld
push
jp
sbb
stc
sbb
inc
mov
ljmp
sar
lock
pop
stos
dec
mov
cmpsl
lock
addl
sbb
sbb
push
lods
jnp
push
inc
or
imul
idivl
pop
or
push
mov
and
jp
repz
cmp
je
rcrl
push
std
enter
and
cmpsl
outsl
outsb
aaa
or
es
adc
fnsave
test
ret
jae
ffreep
xchg
push
mov
cmpsb
bound
popf
inc
clc
rclb
jg
lods
push
fsubr
stos
sarb
outsb
jae
cs
cmc
rcr
ljmp
jae
mov
ret
cmp
in
std
imul
xchg
xchg
push
jmp
pop
test
js
add
push
je
ljmp
push
mov
out
daa
sbb
inc
sub
sbb
xor
mov
sbb
xor
outsb
dec
in
jnp
fnstcw
aam
call
in
dec
xchg
mov
aad
adc
mov
int
mov
in
dec
inc
mov
push
mov
aam
out
fmuls
test
mov
sti
push
rcr
shlb
pusha
push
daa
enter
xchg
add
std
fldenv
lcall
push
add
lods
daa
mov
pop
and
jl
dec
push
push
jecxz
xor
cmp
scas
mov
fcomip
sub
push
add
mov
fnsave
and
in
sub
pop
ss
rcll
mov
adc
dec
insb
pop
xor
inc
sub
add
in
cld
dec
sub
add
lds
outsb
rcll
adc
jg
dec
mov
inc
push
pushf
scas
jle
jg
stc
mov
ret
xor
lret
push
iret
ret
int
xor
xchg
lret
xchg
mov
ret
or
mov
pop
inc
xchg
aaa
xorb
stc
xor
insl
dec
inc
ret
jb
cmpsb
ja
sbb
pop
out
dec
xor
loopne
dec
or
ljmp
pushf
cmp
out
pusha
jne
xchg
cmp
add
xchg
adc
and
sbb
xchg
pusha
add
and
xchg
in
adc
jne
subb
je
test
xchg
adc
jg
pop
lds
in
aas
pop
jl
subb
mov
pop
hlt
cmp
mov
add
shlb
lock
imul
repz
ret
mov
jbe
or
daa
mov
incl
xchg
xchg
nop
or
jle
xchg
jp
mov
add
in
dec
enter
and
sbb
push
xchg
popf
mov
xchg
bound
adc
ss
into
pop
lahf
xor
mov
xchg
rep
leave
ds
push
xchg
movsb
ret
inc
jbe
out
xchg
mov
in
mov
push
dec
add
jmp
mov
in
dec
push
cld
mov
not
sub
ret
popf
sbb
nop
adc
ret
lds
repnz
lahf
push
add
mov
jl
or
or
aas
shl
jns
mov
ljmp
push
test
fwait
dec
and
cltd
jnp
testb
clc
jno
inc
mov
and
jmp
jg
pop
lcall
adc
pop
imul
mov
mov
cld
shl
pushf
iret
sbb
repz
pop
outsl
cmp
popa
or
std
adc
xchg
sub
jmp
ja
or
sbb
lea
clc
jo
sub
lods
mov
dec
and
test
cmpb
popf
jo
pop
and
js
jecxz
jae
fstl
inc
cmp
clc
in
test
push
fcoms
or
jle
divl
jne
cmpsl
adc
sbb
xchg
pop
inc
test
add
pop
inc
in
mov
enter
dec
mov
in
out
jno
stos
or
cli
xchg
push
inc
mov
lds
pop
sub
and
and
sub
mov
mov
mov
daa
xlat
jb
and
adc
and
into
cmc
je
mov
inc
les
inc
sub
hlt
inc
xchg
icebp
aam
jne
inc
pop
jnp
mov
es
imul
jo
leave
mull
fistpll
sub
in
jo
scas
popl
xchg
addr16
adc
out
adc
xor
rdtsc
or
mov
push
loop
repnz
imul
ljmp
out
pop
push
push
iret
mov
leave
stos
or
hlt
hlt
lods
pop
mov
add
rcrb
std
xchg
pusha
sub
shrl
mov
pushf
push
rol
push
add
adc
cwtl
outsl
cltd
gs
cltd
cmpl
pop
push
push
lods
inc
test
arpl
adc
or
mov
insl
or
add
in
and
inc
mov
and
or
mov
adcl
mov
out
jns
loopne
xor
pop
fs
icebp
xor
imul
inc
cld
mov
xor
lahf
icebp
stc
pop
add
cmp
xchg
imul
sbb
call
push
cmp
cmp
ljmp
adc
dec
sarb
pop
imul
jo
pop
jno
sub
movsl
xor
push
jae
insb
insb
shll
mov
lea
es
jmp
jmp
fwait
int
popf
cmpsb
mov
dec
push
test
std
mov
imul
cli
cltd
sub
in
or
push
jae
pop
push
add
test
sbb
movsl
dec
jae
xchg
pop
stc
xchg
push
adc
and
lods
hlt
dec
mov
shll
test
sbb
push
pushf
mov
fidivs
jg
mov
out
lods
adc
inc
lods
out
cmp
sub
sub
ret
sbb
inc
lds
jb
dec
popa
pop
push
loopne
movsb
cmc
pusha
push
shll
fidivl
hlt
scas
mov
sub
push
push
es
jp
lds
ror
xchg
sub
jnp
xchg
aaa
cmp
js
add
sbb
xlat
dec
test
icebp
decb
pusha
and
cmc
push
dec
test
jle
das
push
cmp
es
pop
adc
gs
mull
lea
sbb
pop
mov
xor
test
imull
sarl
jno
out
ja
push
inc
rolb
enter
dec
add
call
outsl
xchg
push
test
ljmp
cmp
notb
cmpsl
cmpsb
out
ror
lcall
loopne
out
inc
sbbb
popf
outsb
jle
jb
fcmovnb
adc
pusha
sub
xor
lods
fiadds
push
jl
push
dec
push
ret
pusha
ret
push
sbb
cmpsb
jecxz
sbb
fsubrp
sbb
fldl
popl
sahf
cmp
xlat
or
rcrb
push
andl
inc
rcl
idivl
ss
iret
test
pop
inc
push
lock
les
dec
lods
aam
fstpt
xchg
fwait
rcl
jo
adc
scas
add
jecxz
mov
adc
xor
inc
inc
or
push
pop
adc
jb
jl
and
pop
popa
mov
mov
add
fldenv
into
out
cmp
mov
in
push
in
mov
fisubrl
pushf
lds
xor
cmp
insb
stc
or
inc
push
fs
cmp
rol
xor
cmp
xor
loope
mov
mov
sbb
stc
ss
pushf
sub
shlb
push
sarl
mov
push
mov
out
pop
fcoml
mov
ficoml
push
shll
je
data16
daa
loop
push
aam
pop
xor
or
scas
dec
jo
fmulp
mov
scas
jbe
mov
xchg
mov
nop
dec
sbb
nop
stc
jle
jle,pt
rcll
push
int
movsl
vmovntdq
ret
dec
data16
xor
xor
or
or
mov
push
mov
jmp
addl
scas
das
push
data16
jmp
xchg
int
sbb
fcmovne
cs
sti
sub
stos
lds
loop
mov
sahf
jns
mov
aaa
aaa
cmpl
lea
jne
sub
jp
sbb
mov
aaa
popf
call
lahf
xor
clc
aaa
cmpsb
fwait
push
jb
filds
and
fistps
out
jl
sbb
imul
lods
add
cmpsl
in
add
sahf
popa
scas
pop
xchg
sbb
or
sbb
push
mov
js
popa
rorl
push
popa
sbb
pop
es
xchg
jge
push
mov
or
cmpsb
push
fwait
pushf
imul
jbe
jl
pop
mov
xor
push
addr16
xchg
fs
add
popf
rclb
sbb
jg
test
lds
test
dec
shlb
and
clc
push
mov
fcomp
add
pop
xchg
xchg
pop
dec
in
push
cwtl
test
pop
fnstenv
and
jmp
lods
sbb
add
in
or
mov
arpl
sbb
inc
dec
in
ret
repz
pushf
cmp
fisttpl
test
push
and
jne
pop
fildll
dec
jmp
nop
into
inc
add
pop
cmpsl
pusha
arpl
sub
fldcw
mov
sub
sub
jo
adc
idiv
mov
shr
mov
bswap
insl
pop
fs
jno
loopne
scas
outsl
xchg
je
mov
imul
in
out
add
cmp
push
pop
adc
mov
decl
sub
jmp
or
out
js
push
dec
inc
lea
jb
jmp
lcall
dec
cld
imul
mov
enter
in
in
repz
lcall
repnz
hlt
enter
hlt
jnp
add
xchg
inc
test
or
inc
mov
je
mov
das
test
fsub
pusha
mov
push
add
and
sbb
jns
xchg
sbb
push
lock
inc
jmp
je
xchg
jae
ficoml
xor
insl
imul
mov
sbb
fstpl
push
iret
mov
push
fwait
and
mov
scas
imul
scas
clc
pusha
faddp
sub
enter
loope
adc
push
jnp
rolb
push
stos
rorl
mov
adc
jge
dec
shl
into
inc
push
into
lret
enter
dec
and
in
cmc
jnp
roll
loope
cld
repnz
dec
sbb
adc
dec
inc
inc
mov
test
shl
mov
test
stos
pop
or
push
scas
and
mov
rcl
or
outsb
pop
addb
cmp
xor
call
sahf
data16
popf
adc
pop
arpl
inc
adc
fldt
pop
pop
jp
sub
outsl
dec
sbb
mulb
dec
jl
push
jbe
xchg
xor
nop
xchg
fisubs
aaa
test
jns
push
jle
mov
jp
add
mov
xor
cltd
mov
jl
sbb
aaa
popa
jb
push
cmp
sub
into
mov
mov
insl
jecxz
push
fstpt
adc
cmp
shrb
add
jecxz
cmp
inc
jb
insb
xor
in
sahf
sbb
daa
cmpl
pushf
jp
inc
jno
fsubrl
cld
sub
in
pop
pop
nop
out
mov
adc
sub
sbb
or
xchg
xor
mov
jo
sbb
sub
imul
sub
push
clc
test
dec
loope
decb
jb
jno
fisubrs
xchg
sbb
dec
hlt
adc
xchg
dec
or
rcrb
xlat
out
lret
fsubp
gs
out
adcb
add
in
xor
sti
faddl
jno
and
xchg
leave
pop
dec
lds
xor
adc
mov
fdivrs
lds
jge
fdiv
sahf
cmp
adc
insl
or
mov
das
sub
pop
ret
mov
pop
mov
sbb
xor
xor
movsb
fadds
xchg
je
pusha
push
dec
adc
inc
iret
and
gs
test
jle
shld
lock
dec
in
or
xchg
inc
pop
lods
adc
jne
sbb
in
inc
es
add
bound
xchg
adc
dec
insl
scas
or
mov
pop
mov
add
fstl
add
adc
sbb
out
inc
push
rclb
xor
stos
adcb
outsl
mov
sub
and
sahf
inc
dec
mov
je
fxch
addr16
loopne
dec
sbb
add
xchg
popf
jmp
clc
cs
fbld
push
push
jecxz
nop
cmp
sbb
lea
fcmovnu
les
lods
out
sahf
shlb
shll
dec
ja
xlat
mov
mov
or
jne
insb
cmp
and
pop
inc
xchg
rolb
ds
pop
test
pop
stos
jb
rolb
out
push
lods
orb
or
int3
int3
jg
pop
icebp
ffreep
dec
fnstenv
push
nop
stc
call
jl
fldcw
xlat
lods
rcl
arpl
pop
xchg
das
cli
int3
xchg
out
xchg
push
pop
sbb
xchg
mov
add
sub
push
stos
out
scas
mov
mov
or
adc
sub
dec
jl
cmp
sub
mov
sub
mov
testl
pop
and
inc
xchg
sbb
dec
ljmp
ljmp
lods
sahf
push
aaa
xor
push
hlt
mov
mov
adc
lock
mov
or
jg
cmp
sub
leave
lods
sarl
out
movl
into
mov
cli
das
and
mov
lahf
or
mov
or
cmpsb
sbb
adc
imul
push
in
fcmovnb
dec
sub
xor
push
mov
hlt
cmpsl
xchg
rcll
dec
mov
test
mov
je
mov
in
pop
ja
inc
clc
mov
loopne
addr16
jmp
nop
mov
push
icebp
in
in
fdivs
dec
sbbb
jns
rorb
xchg
fwait
dec
out
or
rorl
dec
dec
sbb
or
pop
ja
fldt
jno
jl
push
xor
insl
stc
mov
mov
pop
push
add
call
dec
inc
xchg
mov
push
adc
mov
push
mov
pop
dec
cmp
jle
lahf
add
sub
push
mov
imul
das
xchg
jecxz
std
aad
loope
mov
ss
mov
std
std
cmp
mov
les
or
jno
aad
clc
adc
fwait
mov
shlb
sub
fildl
rcrb
js
cmp
test
xchg
addr16
cmp
dec
js
icebp
cmpsb
fstpt
inc
gs
inc
dec
adc
in
movups
ja
ds
out
xchg
xchg
cltd
pop
idiv
adc
out
loope
icebp
aam
and
ret
aas
dec
push
ret
and
push
and
and
pop
sub
xchg
inc
or
insl
fidivrl
lret
sub
stos
shrl
sbb
push
lods
aas
mov
out
xchg
or
xor
xor
mov
mov
iret
lods
ss
out
mov
xor
jge
mov
fadd
int
es
shlb
cmpsb
pop
nop
sbb
inc
daa
inc
clc
enter
mov
sbb
jle
stos
mull
xchg
test
in
mov
stos
in
rclb
addr16
push
outsl
adc
jno
roll
adc
pop
lock
jge
inc
mov
or
dec
mov
mov
cltd
addl
jbe
scas
test
test
pop
and
adc
push
pusha
adc
inc
inc
loopne
les
dec
incl
xchg
lret
mov
aas
pop
adc
ret
mov
mov
inc
and
fs
je
sub
and
xchg
adc
xor
and
cs
and
not
repnz
mov
xlat
dec
bound
and
ja
dec
outsb
daa
ja
cmp
jle
std
pop
pop
or
and
fdivr
repnz
pop
sub
mov
adc
mov
orl
push
mov
arpl
emms
and
in
jnp
fwait
sbb
pop
xor
cli
sub
and
out
sub
xor
xor
enter
pop
mov
inc
inc
push
test
sbb
stc
add
pop
add
jp
lret
cmc
test
call
aaa
daa
je
fstp
jge
push
test
xchg
pop
mov
addr16
mov
lock
push
mov
push
inc
push
mov
add
sbb
fstps
cmp
pop
mov
or
jo
xor
sub
xlat
ror
aad
cmp
lock
sbb
jns
mov
loope
clc
cwtl
fbld
mov
stc
loope
in
cmp
fwait
jmp
or
push
xchg
pop
in
xor
rol
mov
int
mov
mov
vpshab
inc
leave
dec
sub
iret
popf
clc
ficoms
push
mov
clc
jp
clc
test
fwait
sbb
cli
adc
pop
mov
xor
int
mov
cmp
test
cmpsl
sub
mov
lods
or
out
std
aam
shlb
test
test
aad
out
push
sub
aaa
jno
outsl
inc
inc
inc
add
jbe
xor
mov
sbb
aad
fs
or
mov
hlt
lods
and
mov
push
sbbb
inc
or
dec
pusha
mov
mov
mov
adc
decl
sbb
popa
addr16
test
xor
ret
cwtl
push
add
sbb
inc
js
je
sub
inc
sbb
pop
fidivrs
mov
dec
or
push
pop
xor
cli
adc
gs
imul
addr16
in
push
mov
xchg
cmpsl
xor
and
pop
loopne
or
jnp
lahf
fcomps
mov
mov
cmc
cmp
xorb
test
dec
adc
mov
jmp
push
mov
mov
add
ret
clc
test
adc
lods
test
or
jl
sbb
sub
mov
roll
and
sbb
push
jp
ss
in
fsubs
push
adcb
jge
sarb
imul
dec
arpl
mov
inc
mov
adc
iret
jge
fistps
lods
aad
aad
pop
adc
sti
cwtl
push
dec
sbb
lcall
shl
and
sbb
test
add
mov
dec
push
mov
xlat
xor
call
dec
mov
ds
add
sub
mov
filds
mov
loopne
sub
ljmp
shl
pop
sub
sub
lods
mov
out
mov
push
sbb
inc
jo
and
ret
insb
scas
jbe
sub
push
and
insb
scas
push
arpl
pusha
movsl
cmp
into
idiv
lahf
call
mov
jnp
jo
add
sti
push
sbb
add
xchg
daa
pusha
jns
stos
mov
std
jg
cmpsl
mov
xchg
stc
jge
or
insl
stc
repnz
sahf
mov
jge
ja
add
add
bound
jecxz
repnz
sbb
mov
xchg
mov
mov
xlat
jno
outsb
mov
mov
into
adc
adc
and
dec
dec
sub
std
adc
push
aad
sbbl
jb
push
xor
inc
pushf
idiv
ja
adc
ficoml
mov
mov
std
mov
out
and
xchg
fld
xchg
movsb
adc
mov
jg
ja
jl
jo
data16
in
and
int3
pusha
and
ret
push
aad
sub
sub
push
aaa
cs
rorb
stos
sbb
xchg
jecxz
lock
mul
fcoms
lret
xlat
lods
lcall
hlt
and
out
xchg
shll
insb
mov
add
out
rclb
mov
jo
mov
inc
sbb
adc
inc
adc
lds
ja
mov
hlt
mov
jbe
popa
sarb
aad
xlat
arpl
in
jbe
dec
xchg
sahf
mov
std
dec
std
gs
cmp
lods
pop
dec
mov
test
inc
nop
in
test
mov
clc
hlt
addl
shl
mov
inc
nop
cltd
xchg
clc
ds
mov
adc
fidivrs
pop
inc
cmp
xchg
inc
js
xchg
je
mov
ds
mov
pusha
out
add
lret
notb
fcmovnbe
bound
dec
mov
mov
push
test
and
or
ret
pop
imul
testl
addb
xor
loopne
jno
arpl
mov
scas
pop
mov
fisttps
rolb
int3
xchg
lods
or
sub
jbe
sbb
sbb
pop
std
dec
out
adc
es
push
cld
pop
and
xor
jno
scas
js
and
xor
mov
int3
jge
mov
cmp
mov
repz
out
sbb
dec
mov
adc
subb
or
scas
inc
mov
cmp
mov
pop
fcmovb
and
cvtdq2ps
dec
scas
js
jp
mov
mov
sahf
cmc
call
vpsrlq
cmp
inc
jo
clc
nop
sbb
test
fabs
repz
sbb
cwtl
and
or
push
shrb
not
in
pop
fldenv
sbb
xchg
push
adc
push
pop
xor
jecxz
cld
cltd
lahf
add
pushl
or
mov
inc
jne
or
cwtl
inc
imul
mov
dec
or
sbb
jmp
cmpsl
jo
movsl
add
pop
push
fsubl
or
mov
cs
jmp
mov
enter
test
jmp
cli
int
jo
sub
cli
sub
adc
and
mov
dec
pop
js
fmuls
jbe
add
cmp
sbb
aas
mov
sarb
lahf
jg
jmp
jmp
sub
mov
sub
lahf
jmp
pop
mov
xor
dec
jne
xchg
mov
inc
lea
adc
inc
xchg
test
sbb
rclb
push
ljmp
fisubrl
inc
dec
xor
sbb
mov
sbbl
vpunpcklwd
or
mov
pop
push
push
insl
jb
xor
fwait
mov
cmp
cli
ret
dec
in
lret
mov
outsb
mov
fistl
lahf
in
shll
lods
pop
inc
ja
inc
repnz
popa
pusha
out
mov
lods
fsts
dec
and
fs
cmp
stc
and
jmp
mov
and
fs
loop
mov
dec
adc
cmp
push
add
testb
test
std
sti
adc
mov
dec
mov
scas
xor
jns
push
mov
gs
out
repnz
push
cld
jp
push
xor
in
hlt
sub
mov
mov
test
push
repz
out
mov
sti
lcall
inc
sub
pop
and
fstpl
or
add
out
xor
xor
cmc
enter
sbbl
fcmovnu
mov
jl
pop
ljmp
pop
loope
out
outsb
std
inc
stc
mov
adc
popf
sub
xor
sbb
add
add
and
stos
mov
mov
icebp
xchg
arpl
mov
out
mov
clc
lret
xchg
stos
push
or
or
rolb
xchg
push
push
jecxz
add
sbb
mov
push
inc
lret
aaa
mov
out
pop
jno
addr16
cli
cmp
movsl
mov
and
aaa
cmp
jae
and
adc
dec
jae
pop
cwtl
mov
fstpl
js
mov
cmc
hlt
pop
push
pop
sbb
jo
inc
je
hlt
add
add
fistpll
sbb
aam
cmp
dec
mov
jg
adc
test
les
add
ret
dec
mov
aam
mov
cmp
dec
pop
das
add
lock
fnsave
jne
dec
ret
pop
call
sbb
sub
cmpsb
pop
shll
push
mov
sub
xchg
shlb
call
mov
lea
roll
in
jb
divb
push
call
sub
call
lds
jl
xor
push
sub
push
insl
out
call
icebp
out
jno
pop
jbe
pop
jnp
jo
lcall
cld
lret
mov
jns
inc
jp
test
push
out
ficompl
mov
icebp
std
fwait
aaa
inc
pop
dec
xchg
fcompl
adc
mov
ret
lods
fdivs
fdivl
jle
aaa
leave
aaa
xchg
pop
mov
push
scas
outsb
jne
shrb
fidivl
push
rcll
mov
lods
xlat
push
imul
inc
mov
stos
into
xchg
ja
dec
xor
jl
mov
jp
test
das
pop
dec
mov
inc
rcrb
adc
inc
shrl
out
push
mov
ret
add
push
pop
jbe
roll
xchg
frstor
outsl
call
xor
jb
and
pop
movsb
lahf
loopne
dec
dec
inc
and
mov
fcmovu
dec
xor
mov
jo
mov
fcomps
pop
int
jo
xlat
pop
test
cmp
ljmp
ficoms
mov
ret
daa
inc
lcall
js
mov
in
add
adc
jb
lock
shll
pushf
xor
xor
jo
aad
imul
or
jge
dec
lock
mov
adc
pop
sbbl
jns
jp
push
sbb
mov
sbb
push
arpl
outsl
sub
jnp
add
rcll
jns
pop
fxtract
aad
xor
push
aad
in
in
cmpsl
movsl
jp
cwtl
pop
fcoml
nop
push
inc
addl
hlt
sbb
pop
and
arpl
adc
xchg
stos
ds
sbb
std
push
dec
enter
mov
adc
sub
int
inc
sti
mov
pop
shll
les
adc
dec
mov
test
and
xor
data16
jg
or
imul
jnp
jg
bound
subl
add
les
xor
adc
mov
inc
xor
aas
int
or
loop
inc
pop
jb
aas
out
jo
cwtl
test
outsb
xor
or
xchg
aaa
cmp
dec
jno
cmpsl
push
and
mov
movsb
xchg
mov
leave
mov
idivl
pusha
outsl
dec
sbb
mov
gs
push
addr16
mov
pop
es
push
or
mov
and
and
mov
dec
or
cmpsl
mov
dec
sbb
cmp
dec
pop
imul
push
sbb
sbb
ljmp
int
mov
inc
mov
xchg
pushf
dec
repnz
repz
sbb
xlat
xchg
push
imul
xor
lds
mov
sbb
fs
hlt
popa
xchg
cs
mov
stos
xor
or
ret
out
outsb
sbb
push
xchg
and
arpl
cld
inc
sarl
cmpsl
jo
lods
lcall
cmp
loop
ficomps
sub
ret
clc
std
or
repz
das
test
jno
jecxz
int3
in
fdivl
jmp
idivb
sbb
in
ss
andb
jno
jmp
sbb
xchg
iret
or
mov
dec
je
aad
push
mov
mov
movsl
mov
sti
cmp
dec
push
sub
std
push
lahf
fcompl
out
xchg
subl
xor
ds
mov
dec
inc
mov
add
and
int3
pop
xor
push
pop
bnd
jge
and
out
lret
add
adc
cwtl
lret
jno
cmpl
pop
jmp
push
fbstp
inc
fcompl
int
pop
pop
ret
pop
or
mov
or
outsb
mov
aad
out
test
pop
je
rorb
cmp
gs
xor
movsb
xlat
cltd
out
jne
add
jecxz
aas
push
clc
lahf
sub
pop
mov
test
in
sbb
adc
into
jbe
popf
add
adc
lahf
mov
inc
call
pop
xchg
push
das
adc
xchg
add
aaa
dec
add
jae
bound
cmc
test
dec
or
cmp
fnstsw
mov
xchg
ja
pop
xlat
inc
cmpsl
sub
scas
into
mov
xchg
faddl
vpcmpeqb
jbe
inc
sub
bound
and
cs
cmp
out
cmp
sbb
sbb
jle
xchg
add
jns
mov
push
xor
cmpsb
loop
sbb
or
and
lcall
xor
dec
ja
dec
movsl
mov
sub
jae
pop
or
mov
jmp
mov
pop
add
mov
test
sbb
negb
fcomps
inc
push
adc
jecxz
inc
inc
fs
ljmp
fdivr
lahf
pop
je
mov
stos
jnp
dec
pop
dec
pop
xlat
mov
adc
push
pushf
test
jne
and
jbe
xor
sub
xchg
xchg
lret
dec
out
dec
lods
jne
ljmp
imul
cmp
push
sub
aad
pop
fs
or
add
xchg
lods
repnz
shr
ss
xchg
add
xor
sbb
pop
lahf
xor
xchg
mov
and
fcomps
pusha
dec
cwtl
pop
add
fwait
xchg
cmp
mov
and
mov
dec
lods
mov
xor
sub
scas
mov
scas
mov
pop
icebp
cli
lret
xchg
leave
cmp
dec
mov
lock
pop
jp
jb
test
nop
pop
sub
lahf
adc
add
or
add
add
adc
cmpsl
or
sub
push
in
ret
mov
rcr
add
sbb
xor
mov
push
aad
mov
cltd
xchg
jmp
mov
sti
mov
add
cmp
push
add
mov
movsl
add
jmp
repz
cs
movb
xor
cmp
xor
sbb
dec
push
xchg
popf
ficompl
sbb
xor
enter
and
push
and
or
das
adc
ret
test
repnz
pop
fsubl
mov
mov
mov
mov
ret
loopne
iret
int
fisubrl
xchg
xchg
mov
les
ret
lea
pusha
fdivr
rolb
mov
push
scas
lock
jnp
xor
inc
pop
out
dec
sub
mov
fwait
xchg
pop
xchg
xchg
jo
fmuls
pop
and
adc
jg
xchg
ret
pop
mov
dec
lcall
cltd
sbb
imul
andl
jl
ret
and
cmpl
mov
lahf
shlb
push
aam
sbb
es
mov
lock
mov
cli
xchg
lods
pusha
repnz
add
test
xchg
sub
cmpsb
jno
jae
repnz
ret
xor
mov
lods
pop
hlt
jmp
les
jbe
loop
repz
xchg
xor
daa
mov
cs
dec
and
mov
lahf
push
lds
repz
sbb
pop
imul
loop
mov
shrl
and
aad
fistl
dec
ret
xor
inc
jge
gs
lahf
std
cmp
xchg
loope
lret
sti
sub
fiaddl
dec
sahf
stos
mov
jnp
lret
leave
insl
hlt
jmp
rolb
cmp
or
fwait
ljmp
sub
adc
repnz
faddl
pop
ss
fistpll
push
dec
call
cltd
inc
test
scas
and
jae
int
js
ljmp
or
pop
lret
add
adc
sub
pop
add
mov
int3
les
jge
cmc
pop
aas
fstpl
repnz
xchg
add
or
lds
daa
jecxz
inc
jo
shll
dec
ficoms
lds
test
mov
sbb
sbb
and
iret
fld
stos
xor
repnz
out
pop
mov
push
ja
hlt
stos
test
fnstcw
sar
cmpsl
das
fs
cld
jle
dec
cmpsl
lods
cs
js
and
push
rorb
mov
movsl
enter
mov
inc
xor
xor
repnz
jns
in
push
hlt
xchg
js
jg
je
inc
add
stos
test
xchg
imul
mov
mov
xchg
mov
dec
push
ds
sarl
fmull
jb
in
mov
push
test
pop
dec
xor
aaa
dec
ljmp
add
mov
mov
cmp
dec
pop
fs
js
fnsave
mov
imull
inc
or
mov
loope
mov
cli
scas
mov
gs
pop
push
es
enter
sarl
int3
dec
cmp
and
mov
add
out
add
scas
or
xor
jns
pop
lds
arpl
adc
aas
std
cmp
mov
shl
jge
push
lds
cmc
test
test
xor
jne
outsb
daa
rcrb
loopne
adc
rdpmc
inc
cs
popa
into
and
daa
decl
add
adc
add
cwtl
outsl
pop
sub
daa
sbb
je
repz
lds
sbb
pop
mov
xchg
jbe
sbb
jmp
xor
mov
sbb
mov
or
sub
fwait
stos
movsl
test
insl
aam
mov
dec
inc
mov
je
idivb
stc
ret
xchg
add
push
inc
lret
std
add
pop
add
outsb
lahf
dec
push
cmpsl
insl
orb
inc
dec
frstor
cld
pop
xor
pop
ja
push
add
flds
out
cs
xor
adc
and
fsubrl
xchg
jae
pop
ret
xchg
stc
or
push
insb
mov
add
or
pop
ret
lds
cmp
jecxz
fisubrl
jmp
fistpl
and
lret
insb
pop
cli
jecxz,pt
sbb
mov
cltd
push
test
stc
cmc
daa
cmp
hlt
push
jge
pusha
cmp
out
mov
sarb
sbb
cmp
ror
in
arpl
das
mov
xchg
repnz
std
sbb
in
dec
xor
mov
jle
lods
ljmp
insl
xor
repz
cmp
andps
movsb
mov
inc
jb
int3
xchg
fsubs
push
push
test
lahf
lahf
mov
xor
outsl
cmp
pop
mov
aad
sbb
xchg
ljmp
mov
push
sbb
in
mov
cld
and
lods
adc
insb
pusha
das
and
xor
cmp
outsl
jbe
sbb
mov
lret
or
setns
push
bound
jl
xchg
inc
stc
mov
fs
in
dec
fucomp
imul
or
mov
jge
jb
fldenv
push
in
xchg
adc
lea
arpl
cmp
cmc
jo,pt
fisubl
xchg
or
xlat
or
inc
mov
test
movsb
jp
push
sub
ror
jbe
pop
xorl
inc
mov
in
push
mov
dec
xchg
fcomps
sahf
in
dec
pop
in
dec
jae
stc
andb
sbb
les
adcb
mov
stc
aaa
and
dec
cmp
and
or
xchg
sub
mov
adc
inc
sbb
jno
mov
or
jecxz
pop
daa
out
jne
jp
sbb
sub
mov
movsb
int3
je
sub
mov
sbb
xchg
scas
loopne
addr16
addr16
test
xlat
popa
mov
imul
adc
xor
adc
test
mov
pop
jge
stos
xor
xor
dec
cmp
sub
mov
push
rorb
add
into
mov
mov
gs
dec
push
pop
ret
outsl
lret
inc
or
sub
test
add
and
out
dec
int3
mov
lods
mov
fnstsw
xor
mov
xchg
shl
adc
adc
adc
mov
mov
pop
arpl
pop
dec
inc
das
mov
leave
xlat
cmp
stos
xlat
int3
adc
in
jmp
and
xor
scas
stc
icebp
aas
cmp
sub
jo,pn
mov
or
pop
mov
clc
fwait
dec
cld
jnp
inc
push
or
movsl
add
jbe
mov
arpl
out
dec
xorl
out
push
cmp
dec
in
std
pusha
movsl
cli
arpl
cmp
push
rorl
xor
push
push
aaa
nop
push
xor
stos
insl
addr16
or
fiaddl
inc
add
pop
fcoml
and
push
mov
lea
lret
in
int
shrl
rclb
jge
repnz
mov
scas
test
lods
xchg
test
aad
sub
aad
push
push
pop
lods
test
cmpsb
rorb
les
xchg
push
aad
cli
adc
movb
and
jecxz
dec
mov
int
mov
mov
inc
fwait
in
xchg
pop
push
iretw
bound
inc
pushf
imul
rcr
push
cmp
sub
pop
ss
lods
roll
icebp
pop
in
add
mov
dec
rorl
mov
stos
int
and
jns
mov
nop
jb
or
popa
int3
mov
push
push
hlt
lods
mov
xchg
pop
cmp
mov
divb
dec
clc
jbe
cs
imul
into
xor
mov
and
loop
xor
test
imul
js
movb
mov
pop
movsl
adc
inc
movsl
xor
push
nop
sahf
je
jge
sbb
enter
xor
mov
out
sbb
js
or
mov
testl
pop
fstpt
pop
push
mov
add
in
push
jo
jg
das
inc
mov
sub
daa
insl
sub
loopne
push
push
push
in
sar
sub
sbb
ret
xchg
mov
dec
sub
push
sub
sbb
leave
in
popf
mov
int3
push
leave
je,pt
ja
add
stc
mov
sbb
movq
mov
test
jno
aas
sbb
in
fwait
mov
movsb
mov
mov
hlt
das
push
insb
and
inc
cmpb
jne
jl
stos
fistl
nop
pop
adc
lock
pop
in
mov
xor
adc
sbb
in
xchg
cmpsl
jb
shl
inc
xchg
fldl
cwtl
cmpsb
xchg
cmp
addr16
push
imul
cmp
bound
lret
jle
insl
ja
add
ja
es
xchg
pop
xor
push
mov
fimuls
inc
lods
mov
ss
sub
add
fucomi
pushf
mulb
xchg
pop
jns
jl
inc
sub
mov
call
fwait
rol
dec
das
xorb
addr16
mov
cmc
jae
push
pop
dec
fldt
cltd
xor
sub
mov
insb
pop
sub
cmp
mov
lods
in
cmp
fwait
test
jb
cld
push
fmul
in
fisttpll
add
mov
repz
mov
mov
outsl
fmuls
xor
sarb
mov
push
mov
dec
iret
adc
dec
lret
lods
pop
repz
js
rorb
xlat
jp
mov
enter
popa
sbb
cmpsl
cs
sub
test
or
arpl
popl
fs
fs
popa
dec
mov
mov
rcll
icebp
popa
push
mov
jb
dec
xchg
mov
cmp
aas
rcll
andb
jns
push
push
dec
int
mov
lret
jbe
hlt
fsubl
xor
jns
jnp
adc
stos
mov
sti
dec
jno
adc
adc
dec
in
cmc
push
pop
mov
dec
add
dec
gs
xchg
pop
cmp
pop
fsts
adc
test
lds
jo
jl
cpuid
mulps
sbb
push
lahf
add
icebp
outsb
mov
mov
fsts
enter
aam
mov
mov
sub
jno
mov
inc
push
push
mov
add
addr16
lea
cs
jle
mov
inc
dec
mov
adc
inc
mov
loope
pop
pop
mov
add
add
adc
or
sub
loope
mov
cwtl
sub
add
xchg
std
mov
push
mov
mov
lret
enter
push
loope
mov
jae
test
das
insb
insl
push
jge
and
jo
adc
sahf
pop
jne
fstps
imul
insl
inc
dec
pop
mov
outsb
mov
sbb
jae
xchg
xchg
js
and
dec
sub
dec
sbb
mov
cld
fcompl
cmpsb
inc
mov
lds
jp
xor
out
fcomps
xor
test
dec
test
mov
mov
mov
loope
adc
lahf
les
mov
jp
cmpsl
cltd
in
mov
jg
sbb
stos
pop
lods
ljmp
sarb
ftst
testb
mov
int
fnsave
dec
shl
and
dec
xor
sub
xchg
mov
insb
cld
sbbl
and
fwait
mov
arpl
pop
das
adc
inc
movsb
and
push
xchg
loopne
cmc
dec
pop
mov
push
fcmovnu
orl
push
les
fs
cwtl
or
pop
pop
mov
subl
inc
jno
inc
sub
adc
and
push
repz
ss
in
xor
shll
call
cmp
pop
or
jecxz
pop
mov
inc
pushl
mov
loope
xor
pop
push
add
out
push
sti
in
adc
daa
and
mov
push
sub
mov
lea
xor
xchg
ret
popf
sub
mov
xchg
adc
fdivr
sub
pop
movsb
mov
mov
outsl
adc
jb
sub
jl
stos
sub
dec
cmpsb
addr16
int
pop
xor
inc
or
aam
jp
movsl
pop
shr
test
add
and
lret
pop
inc
mov
pusha
cwtl
lea
movsl
cld
outsl
or
sbb
or
movsl
test
jne
push
cmc
repnz
push
scas
in
mov
jo
mov
add
pushf
xor
cmc
lret
rolb
cmp
rolb
enter
jne
xor
cmp
and
mov
test
lods
push
call
add
mov
cmp
cltd
int
sbb
repnz
mov
add
jno
iret
or
push
rcrb
jnp
sub
mov
lods
lahf
fwait
mulb
fsubs
int
std
add
data16
ja
out
pusha
mov
ret
stos
sti
movsl
decb
xor
rcrl
sub
xchg
scas
mov
mov
and
in
lods
push
testl
mov
cmp
pop
or
ljmp
les
pop
push
ret
hlt
lods
hlt
cmc
jl
das
and
rcrl
test
imul
pop
cmp
test
lea
mov
loopne
jecxz
gs
sub
adc
mov
push
int3
or
hlt
test
adc
icebp
insl
cwtl
scas
outsl
adc
stos
call
jne
fstpl
test
das
int
insl
pop
repnz
jbe
inc
mov
imul
mov
testl
mov
mov
cwtl
and
pushf
mov
dec
adc
nop
in
and
cmp
mov
mov
cltd
push
mov
shrb
and
stos
fwait
outsl
push
sub
xchg
in
sub
and
xor
mov
gs
fdivr
jne
std
pop
insb
subl
je
addl
push
xor
in
xchg
mov
xor
subl
fs
push
sbb
xchg
jg
pushf
cmp
arpl
adc
test
adc
fdivrs
sbb
loopne
jb
adcl
jmp
decl
mov
xchg
jnp
lods
adc
adc
sub
dec
dec
lock
pop
out
cmp
xchg
data16
lea
pop
pop
hlt
daa
testl
les
mov
ss
push
sub
xor
insb
or
xor
add
and
insl
fidivl
or
jns
cmp
into
pop
xor
dec
mov
or
xchg
hlt
cmp
cmp
ret
inc
out
sbb
mov
cltd
mov
push
aam
sub
pop
push
pop
arpl
sti
pop
sub
std
xchg
iret
fstpl
push
loopne
lea
jns
sahf
jne
mov
adc
cmc
add
inc
repz
mov
std
decl
cmc
decb
cmpsl
pop
xchg
andb
push
test
jle
cmp
in
add
jnp
dec
jae
or
jecxz
pop
jg
push
sub
movsb
test
ds
inc
lret
push
js
cmpsb
sub
ljmp
movsl
scas
sub
sbb
stc
mov
imul
push
hlt
pop
jmp
cmp
pop
in
cmpsb
aam
sahf
iret
pop
mov
sub
cmp
mov
cmp
sbb
scas
fdiv
fbld
roll
daa
test
scas
mov
mov
es
sti
xchg
xor
lods
jl
xchg
sub
les
cmpb
enter
les
mov
mov
adc
in
lret
mov
xor
mov
fsubrs
pop
cmpsl
sub
aad
inc
mov
mov
mov
mov
lds
add
shl
or
fdivs
dec
rcl
dec
mov
push
mov
gs
popf
js
rol
mov
iret
pop
cmpsl
daa
aaa
xlat
insl
jmp
rcrb
ljmp
jno
push
jl
push
daa
xchg
rcll
pop
mov
lods
or
loope
sub
xchg
sub
adc
pop
sub
mov
inc
mov
test
lret
lods
mov
xchg
mov
or
and
mov
pop
gs
push
lcall
out
xor
cwtl
adc
and
je
adc
xchg
mov
and
inc
xlat
data16
pop
xchg
push
test
dec
and
push
lahf
cld
out
fucomi
jo
xchg
xchg
imul
sbb
pop
jmp
jnp
ret
rcrl
push
xchg
cmp
in
jnp
scas
xchg
mov
mov
jne
mov
mov
test
pop
in
mov
pop
call
xor
sbb
lea
sbb
scas
mov
clc
into
xchg
leave
mov
stc
subl
scas
addr16
pop
pop
jae
adc
pushf
cmpsb
mov
mov
shll
iret
fs
loop
or
adc
xchg
pop
push
aas
add
in
sbb
movsb
pop
out
adc
pop
imul
mov
fwait
adc
jnp
mov
xlat
pop
call
ret
mov
cmpsb
popf
push
es
stc
add
and
add
xchg
pushf
out
fld
lret
xlat
push
sub
and
fbld
sub
aaa
imul
dec
push
in
data16
add
repnz
jno
shl
jl
stc
pusha
pop
popf
test
adc
ret
es
dec
imul
cmp
sbb
or
add
fwait
std
lahf
mov
in
sub
jge
inc
das
lret
lods
outsb
ljmp
jle
movsl
in
movsl
adc
int3
movsl
add
test
push
lds
in
lret
js
jb
sti
clc
jbe
rcrl
mov
negb
repz
sbb
cmp
mov
addr16
cmp
bound
cltd
push
xor
enter
out
pop
aas
pop
fldcw
push
jae
add
lret
icebp
test
ret
cmp
push
andl
outsb
jmp
cmp
xchg
mov
cld
ja
imul
stc
dec
mov
xchg
jecxz
cmc
xor
jp
ss
dec
sub
and
outsb
pop
sbb
or
xlat
push
cltd
push
jnp
jb
std
daa
orl
in
fcomi
mov
mov
imulb
stos
test
jbe
out
out
sub
adc
sub
mov
out
cmpsb
xchg
cmc
int
cwtl
call
inc
and
test
inc
arpl
push
cmpsb
and
stos
pusha
add
xor
sti
fimull
mov
and
loop
addr16
dec
insb
adc
or
mov
adc
call
imul
cmc
mov
pop
pop
xor
or
cmp
ljmp
pop
cmp
inc
xlat
dec
sub
imul
cmpsl
jno
or
mov
in
aam
sub
add
push
inc
cmpsb
mov
xor
pop
pop
call
mov
mov
fwait
call
jnp
jo
lods
clc
push
repnz
lea
sub
xchg
xchg
stc
test
loopne
fmuls
push
sbb
cwtl
aaa
add
mov
push
inc
adc
mov
pop
aam
test
mov
adcb
dec
cmpsl
pop
inc
leave
daa
pop
inc
mov
sub
cmpsl
loopne
pop
or
jae
hlt
leave
cmp
gs
arpl
or
icebp
fdivrs
dec
es
sub
xchg
lds
sub
sub
clc
loope
dec
in
dec
jo
xchg
jbe
stos
icebp
call
and
xchg
push
scas
fnstsw
inc
push
imul
xlat
inc
movsb
subl
fld
add
push
lret
jbe
loopnew
lahf
pop
push
cs
ja
xor
shlb
and
ljmp
dec
vpunpckhwd
or
movsb
push
clc
xchg
sarb
jp
adc
pop
jle
pushf
std
js
inc
fistpll
sbb
push
add
andb
jns
mov
mov
xchg
push
lahf
mov
push
rcpps
mov
xor
adc
push
jecxz
or
in
mov
xlat
dec
inc
lods
data16
fdivrl
dec
lahf
pusha
into
js
push
pop
nop
ja
xor
inc
sbb
in
sub
mov
mov
lcall
out
mov
inc
test
cmp
xor
and
imul
shll
adc
lods
or
or
fidivrs
pop
jl
pop
arpl
pop
in
nop
push
aam
mov
enter
or
scas
inc
sbbb
shl
adcb
cmpsb
icebp
popf
xchg
hlt
sbb
das
mov
adc
in
mov
add
imul
mov
popf
xchg
mov
sahf
lahf
mov
test
push
pop
dec
loopne
sbb
stc
cmp
xlat
jns
mov
jle
sub
hlt
dec
jnp
leave
loop
sub
arpl
stos
pop
lcall
xor
enter
jl
lods
dec
mov
xchg
add
scas
pusha
xchg
xor
xor
sbb
xor
ljmp
fadds
mov
xchg
and
into
lea
shlb
jmp
push
push
mov
inc
add
mov
movsl
jae
xor
sub
inc
fsub
fldenv
cmp
loop
push
cmpsl
and
rcrl
pop
cmpb
repz
xchg
cmp
imul
add
loope
mov
scas
lods
std
sbb
in
xchg
add
into
pop
jmp
in
clc
jle
jle
faddl
cs
ljmp
pop
sub
push
dec
hlt
insl
mov
cs
decb
mov
dec
fsubp
decb
fstpl
xlat
mov
js
jl
movsb
mov
xchg
imul
sbb
or
and
jl
mov
jl
mov
mov
inc
lods
jmp
mov
mov
cld
cld
icebp
push
call
ret
sbb
fcompl
cmp
cmp
mov
cwtl
pop
jae
pop
xchg
hlt
mov
sahf
movsb
cmpsb
je
sbb
pop
lret
loope
scas
adc
dec
fwait
xchg
mov
jbe
mov
mov
jb
movsb
test
aaa
xchg
cld
pop
push
dec
ret
cli
inc
xor
and
clc
and
push
sbb
sti
test
mov
sbbl
inc
pop
repz
pop
lret
xor
xlat
das
xchg
cmp
push
sti
mov
aaa
add
pop
cwtl
xchg
std
inc
data16
xchg
cmp
movsb
sub
lahf
popf
add
clc
cld
loopne
push
test
gs
dec
jg
xor
xchg
loop
iret
cmpsb
adc
inc
jl
lahf
mov
push
adc
cmp
pop
jmp
push
iret
sub
les
pop
xlat
repnz
mov
and
jb
rcl
lock
shlb
xchg
inc
std
daa
or
jno
or
mov
minps
arpl
cmpsl
sti
imul
cmp
call
jle
jmp
movsl
es
loopne
popf
sbb
imull
subl
call
mov
mov
fdivl
fbstp
adc
cmp
xor
std
pop
ficomps
xchg
pusha
inc
clc
shll
mov
inc
adc
cmp
push
mov
fstpl
mov
mov
fcomps
mov
rorb
mov
lret
movb
gs
cmp
mov
jns
pop
mov
mov
and
or
outsl
mov
jl
dec
pop
sti
nop
push
aad
pop
or
mov
stc
push
cli
test
mov
and
lods
cmp
add
int
callw
add
rcr
hlt
bound
cmp
push
daa
push
sti
test
std
inc
xchg
rolb
dec
add
pop
pop
testl
daa
push
dec
scas
stos
and
sbb
adc
push
repnz
xchg
push
and
jnp
mull
cmp
and
imul
jecxz
push
addr16
inc
insb
xchg
arpl
rol
xchg
test
sub
mov
aad
xor
cmp
cmc
mov
sbb
rcrb
mov
xchg
cld
icebp
cmp
mov
sbb
and
addr16
xchg
sub
inc
icebp
xchg
lods
sbb
jl
or
jmp
mov
fsubl
pop
push
repnz
push
xor
push
mov
daa
push
pop
in
cmp
sbb
packuswb
rclb
jmp
es
cmc
in
fadds
push
in
ret
and
or
sbb
loopne
int
and
movsl
addr16
mov
inc
shl
loope
sub
stos
jg
mov
cs
in
cltd
dec
jle
insb
xchg
sbb
arpl
ret
aad
setne
xchg
jg
arpl
xor
repnz
ret
aad
sub
ss
lret
mov
rclb
push
mov
leave
pusha
and
in
sub
pop
stos
outsl
ja
clc
ficoms
lds
inc
push
gs
arpl
mov
jo
xchg
pop
hlt
mov
xchg
pusha
add
mov
jbe
cmpsl
push
push
shrb
fmull
and
cmp
in
push
pop
fiadds
repz
lods
xor
mov
aad
xchg
addr16
or
btc
mov
jnp
lds
mov
adc
jge
sti
fucomip
popa
mov
lods
add
daa
push
mov
mov
mov
cmp
out
adc
pop
outsb
out
xlat
ret
sub
dec
xchg
ljmp
loop
test
ss
shlb
sbb
out
and
inc
and
aaa
push
std
push
jg
mov
addl
cmp
dec
sub
cmp
or
inc
or
pushf
cld
cmc
and
icebp
pop
xor
ret
out
cmc
and
mov
out
pop
mov
movsl
and
pushl
sub
mov
test
popf
jns
xlat
gs
pop
add
adc
fisttps
add
jno
ret
gs
push
jmp
addr16
jg
fs
adc
xchg
popf
add
sbb
in
mov
cmp
divl
mov
jno
cmpsb
mov
adc
inc
iret
in
jne
mov
test
or
les
clc
add
out
ret
lcall
movsl
ss
sub
fcomi
dec
jle
mov
push
jp
int
scas
dec
or
cli
subl
cmp
jnp
fcomps
test
scas
lahf
adc
loopne
test
sahf
sub
fistpll
lahf
inc
aas
popa
out
mov
pop
into
loope
push
or
or
std
addr16
aad
jae
pop
cmp
popf
pop
popf
add
mov
and
test
call
cmpsl
push
inc
icebp
aad
ds
aad
xchg
xlat
in
dec
rcll
inc
xor
pop
sub
push
push
rorb
lds
pop
mov
fsubrl
mov
xchg
lods
jmp
pop
rcr
xchg
enter
stos
pop
adc
xorb
fnsave
and
jno
ja
lds
xchg
sbb
out
fwait
iret
ret
sbb
sub
dec
xchg
xchg
add
lock
nop
mov
inc
rorb
aad
imul
andl
test
nop
or
push
sub
gs
and
jmp
movsb
div
jno
xchg
mov
stc
rolb
cmpb
add
in
inc
cmp
mov
mov
mov
rorl
popa
jmp
lret
popa
mov
ret
in
fisubrl
es
inc
int3
sub
push
add
imul
popa
ja
jl
or
push
jb
xor
bound
jb
insb
mov
adc
xlat
je
lahf
lock
dec
push
pushl
pop
pop
pop
mov
incl
and
nop
test
inc
inc
sbb
dec
ds
dec
push
mov
fdivl
push
adc
fabs
fcomp
mov
lret
sbb
std
xor
int
xchg
repnz
pop
ja
xlat
lock
lret
nop
push
jnp
jle
mov
cmpsl
lahf
and
cmpsb
movsl
leave
in
aad
push
mov
push
jnp
push
and
nop
pusha
mov
pop
bnd
aas
imull
pushf
mull
sbb
mov
aas
mov
lret
ds
enter
cmpsb
mov
mov
jecxz
imul
pop
cwtl
jmp
insl
adc
push
je
mov
dec
call
loop
lahf
pop
push
ljmp
push
aam
and
mov
pop
xor
in
pop
cmp
inc
cwtl
leave
aam
test
cmpsb
xor
and
dec
mov
jbe
dec
xchg
add
xor
xor
xchg
popa
ds
lcall
cmc
and
sahf
lods
mov
in
cmc
repz
daa
ja
imul
jp
ffree
inc
push
push
inc
mov
hlt
push
cmpsl
dec
pop
shlb
xchg
int3
xchg
cwtl
sbbl
sub
xor
fwait
jle
sahf
mov
xchg
lcall
sub
mov
in
in
filds
adcb
cs
popf
dec
xchg
stc
jp
dec
cmc
insb
ret
push
sub
or
in
cmova
shlb
repnz
es
or
sub
inc
cmc
inc
push
mov
mov
cmp
out
stos
ja
cmp
sub
cltd
mov
ss
pop
xchg
stc
imul
ret
push
jno
xchg
push
stos
lahf
dec
addr16
inc
mov
xor
fimuls
cmc
shrb
cli
scas
pop
int3
movsb
cs
mov
push
loope
sub
dec
push
dec
mov
iret
fildl
fidivrl
loopne
jecxz
push
std
mov
addl
mov
test
mov
mov
dec
cmp
or
cld
push
sub
inc
push
std
mov
mov
test
and
bound
hlt
pop
add
ja
xorl
mov
imul
in
loope
xorl
inc
mov
xlat
clc
or
push
mov
xlat
jae
inc
in
popf
mov
iret
jecxz
loope
jne
xchg
lahf
jne
int3
push
mov
out
sbb
test
jg
daa
mov
int3
sbb
push
sbb
mov
xchg
dec
andl
xlat
inc
jmp
add
or
push
xchg
std
mov
push
insb
bound
or
std
pop
jg
inc
ret
roll
out
xor
lret
add
jnp
xchg
mov
lock
push
out
test
add
xchg
jecxz
xchg
push
mov
int
dec
in
lahf
dec
call
fisttpll
add
sbb
in
pop
loope
inc
daa
pop
mov
fistps
and
pop
andl
adc
outsb
cmp
in
enter
stc
test
scas
sbb
aas
cli
call
sbb
outsb
cltd
mov
bound
cmp
andb
ja
pop
dec
notb
or
stc
imul
stc
sarl
jl
ret
rclb
addr16
lea
adc
mov
ds
fistps
popa
sbb
add
jmp
add
dec
lods
or
jbe
sub
fistl
mov
mov
loop
dec
cmpsb
or
imul
mov
cltd
xor
aad
loop
pop
testl
or
jmp
push
into
sub
mov
popa
and
shl
jg
inc
jmp
lea
mov
icebp
imul
jmp
frstor
popa
out
xor
inc
ret
popa
mov
mov
push
dec
xor
mov
and
inc
clc
dec
sahf
adc
push
sarl
add
mov
xchg
sbb
inc
in
inc
or
adc
lcall
pop
cmp
sub
or
in
sahf
fwait
pop
fwait
daa
lods
icebp
jecxz
out
cltd
and
out
add
popa
test
call
push
fisubrs
rcl
jl
mov
in
in
mull
shlb
xchg
aaa
pushf
loopne
gs
andb
push
jecxz
in
cmp
mov
add
inc
cmp
scas
jg
lcall
ljmp
imul
stc
xchg
repnz
cwtl
or
jp
mov
shrb
sbb
jge
fdivr
lcall
mov
adc
push
mov
imul
sub
xlat
cwtl
ret
stos
in
and
sub
xlat
add
and
rcrl
jg
xor
cld
sti
insl
adc
sbb
loope
xchg
jo
bnd
xor
cli
pop
scas
sahf
push
jge
xor
pop
mov
adc
xchg
aam
and
loopne
pop
lock
movntq
fs
mov
pushf
cli
dec
stos
push
jp
pop
jmp
stc
add
ror
xchg
fdivs
jb
jmp
sar
mov
ret
pop
int3
lret
jl
ret
pushf
jp
idiv
lret
lds
lea
lods
imul
loopne
ds
mov
pop
fs
dec
pop
sbbl
mov
pop
cmp
sub
aad
dec
nop
shrl
xor
dec
adc
cmp
pop
out
mov
dec
addl
xor
and
ss
add
pop
inc
mov
inc
mov
rcr
clc
adc
push
iret
cmp
sub
jns
out
pop
leave
jl
dec
popf
mov
jnp
lcall
ljmp
shlb
and
adc
add
stc
ds
push
and
in
aad
dec
cld
pushf
adc
mov
hlt
and
mov
or
xchg
or
aas
jo
sub
or
aaa
cmp
xchg
inc
std
mov
sbbb
sub
test
xchg
xchg
adc
fcmovne
mov
ret
xorl
lods
mov
cmp
lea
fbstp
arpl
jns
loop
or
or
pusha
leave
mov
sub
xchg
mov
ljmp
jno
sbb
cs
movsl
inc
pop
jmp
push
cmp
imul
into
jle
test
dec
out
stos
lcall
jne
jl
jne
jns
dec
inc
push
mov
xor
stc
dec
sbb
xor
sub
dec
sub
dec
jb
loopne
push
sbbl
clc
cs
clc
aam
push
repz
ss
fwait
push
icebp
jg
int3
sub
xor
push
sarl
xchg
aas
sbb
dec
mov
insb
and
xor
mov
dec
aas
mov
xlat
sub
push
inc
sbb
xchg
pop
push
push
mov
jecxz
sub
xor
jmp
ja
xchg
mov
cmp
andb
mov
push
cli
sbb
lods
lret
je
xor
sbb
mov
outsl
arpl
lods
mov
in
je
pop
daa
mov
mov
lea
add
mov
scas
sti
pushf
dec
pop
loop
inc
inc
cs
sti
jae
cld
push
in
sub
and
mov
fsts
shr
in
jl
mov
repnz
lock
je
xlat
jl
cmc
pop
sub
xor
push
scas
xchg
push
mov
fwait
insb
js
jbe
pop
fwait
cmp
cmpb
inc
lods
cwtl
cmc
aad
sahf
mulb
aas
jb
mov
out
mov
loopne
lock
test
sbb
subb
fprem
add
repnz
add
cmp
add
sub
fwait
mov
fucomip
pop
clc
shll
fwait
les
pop
dec
push
and
test
push
insb
dec
cwtl
sbb
adc
ss
gs
sbb
sub
cmp
rorl
xchg
sub
cltd
adc
push
fs
test
pop
popa
mov
es
cvtps2pi
and
mov
insb
mov
dec
addr16
stos
and
pop
fidivrs
push
sub
clc
outsl
and
test
hlt
fwait
ret
sub
pop
dec
fs
xor
js
mov
mov
movsb
imul
push
scas
jnp
cmpsl
nop
xchg
shr
mov
movsb
pop
cmpsl
add
dec
pop
sbb
jnp
xorb
xchg
ret
repz
neg
and
ja
gs
in
mov
and
das
xor
dec
fistpll
sti
insb
mov
cs
les
jle
retw
jno
pop
rcl
adc
xchg
mov
rorl
inc
xchg
insl
push
dec
into
insb
int
mov
push
pop
mov
mov
inc
push
rcll
popf
xchg
cli
lret
arpl
movsl
pushf
xchg
dec
bswap
hlt
lea
pusha
adc
add
mov
dec
push
mov
ret
jecxz
outsl
insl
mov
push
cmpps
es
jnp
int3
mov
hlt
insb
add
add
aas
mov
xor
gs
cwtl
xchg
mov
xor
and
inc
mov
ljmp
leave
int3
pop
icebp
and
inc
scas
pop
xor
xchg
int
jle
sbbl
cmp
mov
es
inc
shl
mov
in
cmpsl
imul
mov
pop
fstpt
jp
lea
dec
rcrl
jbe
pop
insb
adc
out
push
push
mov
add
test
adc
subl
pushf
lret
xor
xchg
icebp
cld
ja
xor
push
adcb
mov
rcll
jb
cmp
xor
scas
aam
or
test
idivb
mov
dec
pop
pop
addl
pop
inc
cltd
add
xor
call
outsb
jmp
dec
test
imul
cmc
jg
adc
repnz
push
aaa
scas
gs
jb
xchg
dec
sbb
stc
xchg
and
cmpsb
xchg
aaa
popa
les
and
lahf
jmp
sti
push
insb
sbb
jg
sub
js
add
call
xchg
mov
cmp
sub
dec
cld
in
ret
aad
out
adc
pop
mov
sbb
xor
dec
adc
xorl
mov
dec
insl
cs
lods
fcmovu
mov
cld
push
testb
pop
jp
jp
and
jmp
sbb
pop
das
dec
mov
das
lret
shlb
fsubl
shrb
sub
movsbl
shl
and
and
mov
imull
stc
fwait
or
inc
aam
or
out
mov
fdivrl
insb
ret
je
cwtl
repz
imul
inc
enter
movsl
inc
mov
aas
int
sub
testb
fistpll
cmpl
push
add
xchg
js
pop
lods
pop
xor
mov
sub
xor
ljmp
lock
inc
les
sub
xor
inc
xorb
das
or
push
push
rcll
test
call
inc
mov
dec
mov
or
imul
jecxz
iret
inc
pop
jl
dec
cld
sbb
pop
sub
pop
enter
pop
lret
jle
cmp
rcl
pusha
or
mov
int
inc
stc
mov
sbb
es
dec
inc
xor
cmpsb
cmc
loope
add
call
mov
fmull
imul
stc
sarl
mov
adc
push
in
inc
or
lods
jmp
test
in
cmp
mov
aas
pop
outsl
adc
movsl
sub
repz
and
mov
push
inc
cmc
sarl
outsb
and
jbe
ret
mov
fwait
sbb
mov
pop
stos
lods
scas
pop
fsubs
xlat
inc
and
push
in
sbb
mov
lahf
xor
outsb
in
mov
or
shl
insl
sbb
in
jmp
mov
jbe
les
cmp
dec
in
aas
adc
pop
das
int
add
repnz
cmp
mov
and
jmp
testl
aad
jno
mul
jp
pop
ret
mov
jmp
ljmp
fcoms
psrlw
add
data16
xor
outsb
in
loopne
dec
leave
mov
mov
lret
hlt
and
jmp
out
sahf
adc
cmc
adc
mov
cmp
jnp
or
cmp
mov
mov
sub
sbb
adc
int3
push
cmp
stc
add
push
fisubrl
lahf
xchg
mov
out
mov
es
fisttpl
filds
cmc
sbb
outsl
fwait
pop
add
imul
lret
lods
shlb
js
shlb
sti
leave
jbe
mov
aad
add
push
mov
aad
jmp
aaa
and
push
dec
sbb
ljmp
add
jb
bound
scas
sbb
and
popf
inc
daa
pop
dec
cmp
pop
sbb
sub
and
shlb
sbb
sub
pop
dec
fstpl
xor
xor
subb
mov
loop
adc
es
sbb
cmp
pop
jne
xchg
mov
mov
ret
and
push
jnp
iret
iret
imul
inc
adc
stos
bound
xlat
add
xchg
and
fnclex
xor
in
insb
ret
push
js
pop
xor
pop
mov
outsb
push
mov
jecxz
test
jg
push
or
cwtl
icebp
into
cmp
rclb
stc
insl
mov
fs
insl
repz
cltd
stc
fs
inc
adc
sub
das
cmp
mov
sub
loopne
mov
inc
add
jbe
xor
jbe
int3
dec
in
mov
insl
or
sahf
sub
sbb
fsub
outsl
sub
mov
fidivs
call
out
test
mov
sbb
jmp
inc
or
lea
or
mov
push
sahf
mov
adcl
rorl
dec
icebp
jecxz
lods
sbb
dec
dec
dec
add
cmp
jge
xchg
xor
negl
cmp
and
cmp
lds
int
in
aam
xor
incl
pop
adc
jb
dec
mov
dec
test
cmp
add
or
mov
iret
mov
or
insb
mov
jmp
xchg
sub
mov
sbb
jae
jl
inc
mov
sub
lods
ljmp
data16
movsl
adc
sti
int3
leave
iret
rcll
repz
dec
jne
push
add
lea
std
mov
xchg
aas
dec
push
xchg
pop
in
push
jmp
sti
outsl
push
jmp
cmp
or
icebp
dec
xchg
js
push
dec
js
aam
sahf
inc
movsl
push
fs
aas
dec
sbb
out
and
insl
xor
nop
push
sbb
pop
addb
xor
cmp
test
pushl
add
out
cld
mov
sbb
or
dec
loopne
sbb
or
push
in
sbb
jge
ficoml
or
jmp
add
and
out
add
mov
arpl
test
adc
sahf
add
cmp
lret
lds
lock
hlt
pop
mov
rorl
in
test
gs
mov
jmp
data16
push
std
fadd
xchg
pusha
pop
inc
fwait
das
or
push
sbb
or
mov
mov
pop
pop
mov
iret
pop
mov
fdivrs
push
fs
out
add
inc
jmp
bound
fs
dec
int
inc
or
inc
fdivrs
clc
jae
std
mov
mov
imul
lret
idivb
mov
mov
maskmovq
testl
lea
in
or
imull
ja
dec
scas
inc
pop
push
inc
arpl
dec
sub
insb
push
sub
call
xchg
fwait
pop
sti
data16
lods
popf
mov
out
xlat
xorl
js
xchg
outsb
inc
sub
aaa
pop
inc
call
hlt
dec
mov
out
sub
xchg
or
or
push
lret
push
mov
test
cmp
in
push
sbb
rcll
mov
popf
fdiv
icebp
or
or
push
xor
clc
dec
dec
dec
adcl
into
jae
inc
jne
popa
push
scas
addr16
jg
leave
outsb
shr
fistpll
mov
mov
mov
les
pop
xchg
xchg
fsubs
nop
push
gs
add
or
ljmp
fbstp
cmp
pushf
dec
mov
pop
cmp
xor
lret
fdivl
inc
divb
nop
xor
xorl
les
bound
sub
in
pop
lcall
fcomps
movsb
test
int
cltd
jne
outsb
fcoms
enter
daa
adc
push
add
ds
jno
jae
mov
stos
xor
add
lods
inc
and
mov
mov
loope
jecxz
into
cltd
mov
scas
mov
jae
popf
mov
pop
inc
cmc
insl
mov
adc
or
jecxz
rcrb
mov
xlat
xchg
sub
test
aas
jb
mov
push
daa
xlat
xor
add
mov
mov
movb
xor
lea
cmp
fisubl
test
iret
mov
or
inc
mov
int3
xor
into
sarl
scas
cli
inc
mov
push
dec
cmc
jl
loopne
xchg
sub
jl
cmc
xor
mov
xor
sahf
daa
or
bound
out
xor
out
js
sar
daa
jmp
sbb
dec
dec
sbb
mov
or
nop
jg
add
cmp
mov
popf
mov
inc
mov
pop
push
mov
fcmovnbe
jp
inc
push
outsb
jl
pop
mov
pop
fdivrs
inc
cwtl
rorl
xchg
or
push
jb
insb
xor
adc
sti
cmpsl
insb
cmp
outsl
sub
xchg
repnz
f2xm1
dec
rclb
aas
jge
outsl
jl
lret
icebp
add
jae
sub
sbb
push
repz
mov
push
pusha
cltd
jae
fildl
sti
std
mov
das
cmp
clc
and
ficoms
mov
aas
imul
mov
pop
mov
jge
ja
test
pop
rorl
movsb
mov
dec
sub
dec
rorl
testb
xchg
jecxz
pusha
mov
adc
pop
std
insb
jp
inc
fidivs
jmp
outsb
fs
push
imul
jmp
gs
inc
mov
sahf
fcompl
xor
sbb
sbb
lahf
popa
and
cmp
xor
xchg
dec
or
sub
sbb
inc
xor
xchg
enter
data16
mov
hlt
call
push
dec
pop
dec
cmp
xor
push
lods
push
sbb
stos
addr16
mov
lahf
lcall
repz
test
and
lret
fildl
jns
lcall
insl
stc
pop
lods
call
cmp
pop
aas
pop
jb
sbb
shrb
out
stos
sub
push
ret
notb
fisubs
jns
xor
inc
push
scas
repz
movl
cld
jl
jp
push
add
adc
lock
xchg
pop
xchg
insb
push
push
mov
ja
mov
and
adc
test
test
add
cltd
movsl
imul
lcall
jbe
repnz
adc
cs
jo
xor
cmp
adc
push
xorb
xor
sub
mov
pop
mov
scas
test
inc
test
shl
jecxz
jo
fcmovnu
mov
cltd
jl
cltd
jb
xor
adc
xor
into
dec
xchg
in
xor
push
in
xor
subb
sbb
out
push
pop
outsb
xchg
in
scas
or
ret
dec
adc
enter
inc
cli
movsb
popa
inc
mov
add
pop
sub
orb
idivl
jle
inc
xor
movsl
mov
icebp
popf
pop
jbe
cmc
or
imul
cmp
sub
mov
outsl
rclb
inc
stc
jl
xchg
inc
jle
std
data16
xchg
push
pop
fmul
dec
stc
add
xchg
lcall
scas
insb
inc
mov
and
ss
popa
icebp
pop
push
inc
or
cmp
xchg
rcll
or
sbb
adc
cmp
jae
fstp
sbb
cwtl
and
es
movsb
jmp
dec
into
dec
mov
int3
sub
test
out
scas
jno
add
sbb
in
adc
fwait
mov
dec
loope
mov
in
cli
sti
lock
ret
jmp
insl
mov
adc
sbb
das
addr16
inc
inc
in
xchg
jmp
push
push
xchg
iret
xor
movsl
out
insb
pop
fimuls
mov
inc
xor
and
mov
sub
andl
aaa
add
adc
push
jae
sub
fisubrs
cmp
insl
addr16
loop
pop
into
stos
or
sub
jge
xchg
daa
mov
jb
jnp
sub
loope
mov
ficomps
mov
hlt
jle
add
es
repz
mov
js
shlb
cmp
imul
inc
lcall
rcrb
push
mul
push
gs
pop
loope
xor
jbe
test
movups
insl
loope
sbb
pop
xchg
aas
mov
jp
fwait
out
call
pop
mov
jae
lea
mov
add
cmpsl
lea
or
mov
mov
loopne
mov
dec
cmp
aam
dec
daa
or
mov
mov
addr16
ret
push
or
push
test
xor
xor
in
loop
shrb
sbb
ret
sbb
cmp
inc
loopne
pop
outsl
inc
or
mov
pop
lds
jno
cmp
and
in
loopne
xor
mov
hlt
je
cmpsb
xor
mov
fmuls
push
pop
enter
sbb
fnstsw
dec
sbbl
or
adc
lea
test
cmp
jnp
adc
sub
jl
jg
ret
adc
sar
mov
fstps
test
add
mov
dec
mov
stos
inc
imul
cs
ss
imul
mov
test
lret
add
in
lds
clc
jb
and
jge
pop
sub
rorl
dec
sarl
fidivl
test
jle
rorl
and
scas
sbbl
adc
dec
inc
pushf
out
sub
mov
cmp
arpl
mov
pop
fnstenv
push
sub
repnz
loopne
popf
pop
lret
mulb
jg
faddl
dec
sti
les
mov
push
add
jl
jne
aas
mov
int3
dec
push
jg
ljmp
add
mov
in
fcomi
jo
jmp
loop
mov
popf
data16
dec
pop
iret
mov
pop
push
mov
mov
fs
push
dec
sti
out
and
cmpsl
fidivs
imul
xor
insl
pop
js
cmpsb
ret
xchg
xchg
out
aas
test
xor
mov
jle
push
dec
fisttpl
jb
cmp
addr16
inc
cld
insl
aad
ljmp
inc
shlb
js
popf
mov
inc
jne
jne
add
fbstp
jae
jb,pt
repnz
insb
mov
sbb
stos
fs
xchg
or
jp
ret
subl
andb
scas
jo
fstpt
jecxz
inc
mov
test
dec
mov
push
cltd
sarb
scas
aas
xor
call
in
roll
iret
out
cwtl
adc
or
dec
popa
pop
cmpsb
adcb
push
push
xor
mov
aaa
adc
jae
xchg
in
cmp
arpl
cli
int3
dec
xchg
dec
fs
push
shlb
mov
and
cmp
adc
lock
xchg
xchg
cmp
fldt
sbb
out
js
xchg
stos
sbb
and
pop
in
xchg
push
cmp
outsb
cmp
cmpsb
ffreep
aas
xchg
shl
cltd
jns
push
test
adc
fistpll
add
mov
shlb
mov
rorl
lahf
push
sub
sub
sbb
cmp
sub
repnz
mov
mov
mov
cmp
shrb
out
pop
xchg
shlb
cmp
stos
sbb
adc
jecxz
lods
dec
outsl
pop
sbb
xchg
cmp
leave
pop
mov
xchg
test
dec
hlt
lock
lods
in
mov
out
xor
mov
loope
push
dec
je
adc
mov
pop
inc
sarb
xor
mov
aaa
dec
in
xor
test
xlat
xchg
xchg
or
push
in
adc
cwtl
fists
push
pop
dec
stc
or
es
fsts
std
cs
fwait
mov
in
icebp
jo
fists
mov
dec
mov
popa
cmp
stos
sub
js
out
imul
jo
ret
inc
mov
repz
cltd
stc
shl
in
xchg
out
cvtps2pd
shrl
shl
adc
adc
ljmp
call
leave
lods
adc
cmp
and
or
adc
cmp
sbb
movsb
dec
roll
fcoms
mov
aaa
cs
flds
popf
pop
xchg
mov
ljmp
dec
mov
ljmp
in
dec
mov
ss
inc
cltd
out
push
or
cli
sub
stos
je
loope
sub
fs
push
or
aas
fiaddl
call
nop
cmp
in
add
pop
fsubrl
outsl
scas
insb
cmpsl
fsubl
mov
test
mov
gs
fmulp
testb
das
out
stos
leave
ss
xchg
test
push
jle
pop
xchg
cmp
xor
sahf
add
dec
xchg
ljmp
shll
mov
cmp
imul
dec
mov
mov
push
inc
dec
cmp
aas
mov
cwtl
fxtract
push
repnz
jbe
mov
stos
add
cmpsl
push
adc
inc
and
or
and
cmp
inc
clc
loop
out
call
xor
rol
jns
xchg
xchg
test
and
jg
pop
lds
lret
in
sarb
das
adc
adc
add
xor
mov
adc
jmp
and
int3
jb
cmc
shr
and
cwtl
mov
sbb
icebp
mov
es
scas
jo
adc
or
inc
push
sbb
cmc
mov
leave
test
lahf
and
outsb
arpl
adc
cmp
fadds
push
pop
dec
inc
pop
test
mov
push
cmp
add
dec
and
fldl
in
inc
jg
xor
push
sub
jae
xchg
sbb
xchg
fstl
je
fmulp
das
mov
dec
ret
das
jle
pop
mov
add
mov
mov
or
xchg
mov
mov
ds
jecxz
mov
mov
lret
sbb
inc
sub
mov
shlb
xor
xor
aaa
bound
xor
xor
mov
push
fcompl
cwtl
push
xchg
jae
inc
adc
mov
cmp
push
pop
mull
hlt
nop
repz
sbb
stc
add
ficoms
or
and
cmp
or
inc
sti
fs
stos
mov
lret
enter
xchg
stos
cli
dec
xor
mov
loop
pop
jge
jbe
add
movsb
add
ja
shll
out
and
jmp
cmp
jne
sub
test
pop
sub
xchg
fistl
imul
cmc
dec
movsl
mov
fbld
inc
jne
or
mov
xchg
jne
jp
sub
loope
push
stc
mov
call
lods
insl
xlat
sbb
out
jbe
aam
mov
adc
gs
scas
into
push
xorb
mov
mov
cmp
std
xlat
xor
scas
in
lahf
lahf
sbb
jp
cmpsb
out
stos
fcompl
scas
xor
rolb
outsb
les
pop
ja
lock
fisubs
aas
mov
cltd
dec
cmpsl
ljmp
xlat
ret
into
cmpsb
scas
rcrb
aad
negl
jmp
push
push
popf
test
pop
mov
adc
fwait
aaa
jp
sub
lds
daa
xlat
jnp
aaa
mov
out
and
jp
mov
hlt
fsubl
cmp
pop
mov
call
sbb
lea
ficompl
lods
sub
pop
push
outsb
ja
daa
and
addb
mov
scas
popf
inc
xchg
sbb
jnp
aas
pusha
xchg
aam
addr16
lods
out
or
xchg
lock
scas
push
pop
in
inc
pop
and
sti
jnp
push
mov
inc
lahf
mov
dec
and
scas
pop
pop
fmul
mov
dec
adc
mov
sbb
dec
lret
jb
enter
and
push
mov
jmp
sub
sbb
jo
xchg
mov
hlt
mov
lods
ds
mov
inc
mov
mov
pop
lret
xchg
loop
pop
iret
push
and
leave
ret
pop
mov
xchg
jne
hlt
in
into
sbb
out
int3
sarl
cmp
aam
cwtl
cmp
mov
sub
mov
imul
push
pop
cmpsb
pop
add
mov
cld
enter
test
jnp
adc
sub
mov
xchg
sub
roll
jg
xchg
jge
sub
sbb
mov
or
shll
adc
lret
mov
adc
je
outsb
shrl
adc
lcall
mov
push
stos
repnz
ror
mov
lods
cmp
or
jp
test
bound
pushf
mov
mov
mov
push
lods
pusha
insb
int3
jge
ljmp
dec
jne
add
popf
aam
lret
rorl
push
mov
and
movsl
lret
jb
sahf
xor
lret
push
decb
inc
jbe
int
mov
mov
sbb
pop
mov
pop
dec
out
inc
xchg
push
leave
out
lods
cltd
aad
in
test
or
repz
and
jg
cwtl
loope
xor
sbb
mov
adc
stc
dec
add
out
xor
pushf
aaa
pop
mov
adc
push
pop
lret
dec
imul
push
int3
jae
je
mov
mov
call
mov
mov
mov
cmpsl
ja
xorl
mov
repz
fwait
lcall
hlt
xlat
outsl
je
nop
xchg
sub
fildll
adc
sub
and
dec
xor
pop
push
or
and
jmp
and
xchg
into
insl
sub
push
rcl
inc
push
scas
lcall
dec
out
aaa
cld
and
scas
sbb
popf
adcl
in
pop
jmp
inc
in
jg
cld
dec
cld
out
mov
push
mov
aad
jo
movsb
lcall
jmp
jmp
push
enter
mov
xchg
cmp
in
sahf
or
xor
adc
mov
mov
sbb
and
aaa
sbb
or
mov
jb
stos
sbb
sahf
pop
iret
loope
outsb
sub
loopne
jnp
dec
inc
outsb
jge
or
ss
int
call
les
pushf
imul
mov
hlt
clc
push
scas
cmp
fsubl
daa
in
xor
test
bound
xor
pop
push
idivb
mov
test
adc
mov
enter
repz
sub
sub
inc
dec
xor
xchg
outsl
aam
jmp
or
testl
call
pop
subl
cmp
dec
dec
std
in
mov
dec
jmp
shll
icebp
or
loope
in
push
cmp
jne
sbbb
xorl
xlat
data16
adc
setl
pop
dec
inc
xchg
lods
test
fcmovbe
or
cmp
and
shlb
xchg
adc
out
lret
xchg
mov
lret
lods
dec
mov
xchg
pop
icebp
sub
loopne
je
xchg
xor
test
xor
fwait
mov
add
inc
ljmp
or
in
mov
dec
inc
pusha
xchg
mov
push
stc
jns
ret
jmp
movsl
pop
loopne
mov
or
push
mov
mov
xor
fstl
lret
fidivrs
roll
and
mov
inc
jnp
scas
mov
movsb
lea
jg
dec
icebp
outsl
jmp
fldt
mov
push
stos
pop
out
add
aad
dec
push
in
bound
inc
cwtl
pop
rcr
cmpsl
jp
mov
int3
mov
dec
outsl
inc
adc
xchg
jmp
add
dec
js
xorb
fstps
sub
test
das
int3
mov
or
ret
xchg
std
sbb
sti
adc
orl
mov
iret
stos
xlat
roll
imul
out
in
or
sub
dec
jp
iret
xor
imul
sahf
sub
arpl
mov
daa
jl
ficoms
pop
sarw
jnp
lret
cmc
xchg
cmpsb
adc
mov
std
inc
hlt
and
cmp
mov
jno
imul
mov
mov
mov
xlat
stos
push
xor
lds
push
inc
enter
int3
les
cmovle
loope
xlat
insl
bound
imul
mov
jae
sbb
hlt
lahf
or
lods
pusha
outsl
sbb
lret
test
bound
push
sub
mov
int3
and
xchg
rorb
cmpsb
fs
jmp
out
imul
xor
push
push
iret
in
mov
cmp
cmp
lcall
popa
mov
sar
ljmp
cmp
rolb
and
push
arpl
shl
mov
negl
xchg
into
push
repz
push
dec
adcb
pop
loope
lcall
shl
sbb
cmp
adc
es
ds
push
adc
inc
mov
cltd
cmpsl
ljmp
jb
jnp
adc
cs
fs
mov
cmp
imul
mov
dec
adc
push
aaa
xorb
xor
out
pop
or
call
fdivs
cltd
push
and
xchg
mov
daa
mov
stos
pop
add
add
mov
test
pop
test
pop
iret
lock
icebp
nop
bound
int3
cltd
add
pop
or
jno
mov
mov
iret
arpl
mov
in
in
jg
pop
and
stc
stc
bound
dec
dec
lds
mov
notb
into
mov
mov
enter
stos
popf
fisttps
dec
cmp
cld
ss
ficomps
push
sub
test
add
mov
movsl
or
cmp
add
inc
xchg
faddl
sub
repz
and
movl
dec
ret
jb
xor
cld
push
mov
lds
aas
push
fidivrs
pop
rolb
mov
xlat
js
mov
mov
jne
mov
loop
xor
aam
popf
cld
sub
xchg
insl
pop
xchg
ja
int3
popf
mov
cmp
or
out
lcall
inc
dec
push
push
lods
jo
xchg
loopne
jno
xchg
andl
sub
mov
and
jmp
xchg
jge
xlat
loope
inc
arpl
sti
adc
hlt
int3
test
notl
lock
repnz
imul
shr
or
xchg
lahf
repnz
aam
jg
test
cmc
add
gs
mov
adc
imulb
lock
clc
or
jns
inc
sub
or
data16
lods
bound
dec
adc
adc
xlat
push
sbb
jmp
popf
pop
inc
jae
lcall
mov
xor
arpl
into
test
add
sub
mov
push
in
or
outsl
ds
sub
mov
shll
incl
loopne
mov
fucom
and
mov
inc
push
pop
jbe
lret
pop
ljmp
adc
cmpb
pusha
rcl
loop
ror
jg
popf
scas
and
stc
pop
lcall
cmpsb
sar
and
cmp
mov
and
xor
xchg
mov
ds
imul
movl
and
or
push
sub
xor
loope
int
outsb
mov
fstl
mov
mov
rclb
inc
cmp
pop
push
mov
addr16
cli
cltd
jecxz
add
leave
jb
je
mov
mov
aaa
ret
aad
js
idivb
repz
push
hlt
inc
push
push
hlt
bswap
mov
or
fisubs
cs
popa
insl
out
mov
push
nop
push
inc
pop
out
xor
cmc
jle
fcoml
jbe
aam
notl
adc
test
jp
sbb
pop
add
mov
aaa
out
mov
and
dec
das
jle
sub
mov
fisttpl
out
xchg
test
jl
int
lds
adc
mov
and
lods
jns
clc
lcall
enter
imul
jmp
mov
mov
fwait
jge
mov
repz
mov
ja
repnz
es
jecxz
cwtl
sti
pop
sarl
shll
xor
ficompl
fst
cmp
jecxz
stos
ds
int
push
fcmovu
cmp
cmp
sarl
cli
dec
adc
cmpl
push
push
adc
in
cmp
push
xor
inc
cmp
push
insl
insb
repnz
jecxz
orl
inc
cmp
push
cwtl
iret
jge
mov
or
cmpsl
rcll
mov
inc
lret
cltd
fmul
fiadds
aas
mov
dec
xor
sbb
rcl
or
sti
repnz
arpl
stc
xchg
mov
or
movsl
and
pusha
outsl
hlt
fdivp
cmc
and
sbb
ja
sbb
lods
adc
xchg
add
sbb
out
cmp
dec
sub
and
inc
push
fisttps
jge
data16
pop
sbb
push
cmp
and
lret
icebp
mov
aam
pop
movsb
push
jge
mov
pop
inc
push
ret
push
ja
mov
mov
test
adc
fs
popa
popa
mov
sub
mov
fisubrl
pop
outsl
fcmovne
xor
and
lea
cmp
aas
inc
in
cmp
and
inc
push
insb
mov
sahf
xor
std
xchg
mov
add
fcompp
mov
xadd
rcrl
mov
mov
sub
ljmp
jno
pop
mov
add
push
inc
mov
imul
pop
test
cmpsb
sbb
nop
adc
add
outsl
cmp
icebp
insl
mov
adc
sti
add
push
repnz
cmpsb
push
adc
xchg
sub
pop
xchg
stos
sbb
jae
dec
imul
add
ret
mov
je
es
iret
es
cmp
mov
pop
das
dec
andb
push
pushf
mov
jmp
mov
mov
mov
mov
out
in
cltd
mov
mov
dec
xor
in
jp
xchg
inc
imull
out
daa
inc
je
sbb
lret
stc
jns
cli
push
dec
cltd
dec
adc
sbb
xchg
fbld
mov
scas
xor
inc
out
jns
and
cmp
fdivrs
add
rcll
sub
inc
pushf
sbb
cwtl
mov
iret
out
dec
bound
ja
cld
mov
clc
std
loopne
pop
pop
inc
adc
test
loop
or
daa
fs
or
push
adc
sbb
outsb
movsb
imul
sub
xchg
int
icebp
into
cmpl
or
mov
jp
arpl
jb
int
mov
fdivrs
xor
out
shrl
or
aam
fdivs
dec
outsl
mov
and
lods
add
sahf
mov
leave
jl
add
mov
jne
dec
push
test
movsb
roll
loop
movb
push
xor
adc
cs
xor
push
rcrb
add
and
adc
jge
icebp
xchg
pop
xor
test
inc
pop
adc
inc
iret
in
aas
pusha
jo
std
lods
ret
xchg
push
mov
sar
mov
mov
rorl
pmulhuw
push
push
jg
in
inc
in
pop
xor
repz
adc
fisubrl
mov
sub
push
add
xor
jae
pop
mov
stc
bound
hlt
sbb
out
xlat
shl
cli
push
das
or
loopne
and
es
mov
pusha
push
mov
mov
sbb
iret
daa
mov
sub
mov
imul
cmp
jle
mov
sub
push
ret
loopne
cmp
lret
shlb
bound
push
lods
mov
xchg
mov
dec
cmp
cmp
idivb
xor
sub
add
inc
push
cmp
xor
adc
inc
xor
pop
xor
aas
std
sahf
adc
mov
sti
loopne
xchg
xchg
or
dec
fsts
cli
inc
inc
mov
rorl
scas
outsl
hlt
fldcw
jno
push
jbe
sbb
sahf
xchg
lcall
popf
cmp
lock
aas
ja
mov
into
lods
xchg
scas
xchg
add
jns
fbstp
cmpsl
mov
pop
lock
roll
push
fs
or
jae
push
add
pushf
mov
sub
ds
xor
inc
pusha
rcr
shlb
jl
rcrb
pop
jecxz
cwtl
repz
ljmp
addr16
out
mov
adc
push
sbb
push
xor
out
ret
jmp
jl
pop
cmp
rolb
sbb
inc
rclb
mov
xor
test
mov
sub
xor
push
out
js
mov
or
add
gs
jle
mov
in
push
push
inc
imul
dec
adc
out
insl
adc
sub
hlt
inc
aas
push
inc
and
insb
inc
jge
les
call
and
sarb
shrb
std
push
ds
je
fs
lock
sub
dec
out
cmp
mov
and
and
daa
aad
pop
call
adc
fstpl
pop
fldcw
fdivrl
lahf
addr16
xor
fwait
cmc
outsl
dec
xlat
fs
into
cs
mov
movsl
adc
in
cmc
shlb
cmpl
cmpsl
and
pushf
int3
sbbb
mull
sbb
mov
or
imul
aam
scas
jbe
rorl
clc
aaa
outsb
push
negl
xchg
push
mov
mov
adc
out
clc
or
std
mov
mov
out
xchg
jge
push
popa
sbb
dec
rorb
jp
xor
adc
and
movsb
test
lcall
in
test
jno
cmpsl
ss
test
scas
xchg
or
jecxz
dec
test
jge
ljmp
in
push
sub
filds
pop
inc
dec
out
xchg
adc
mov
pop
jmp
lds
das
sub
dec
movsl
mov
mov
mov
clc
xchg
sub
insl
loopne
jnp
add
mov
daa
gs
xchg
in
pop
push
ja
incl
data16
push
roll
mov
pop
lahf
jae
shr
adc
pop
push
int3
lret
add
push
add
dec
sub
in
mov
and
pop
enter
xor
scas
cmp
mov
push
mov
sbbl
movsl
push
mov
pop
clc
jp
jecxz
jmp
add
in
cmp
jns
loop
pop
cltd
xor
jle
dec
test
inc
aaa
pop
mov
fmulp
mov
jae
xor
daa
dec
cwtl
fadd
and
pop
les
stos
xor
cmp
add
std
or
js
movsl
sub
mov
jle
xchg
cwtl
dec
pop
sbb
xchg
dec
scas
icebp
or
lret
mov
pop
clc
enter
jns
in
add
lret
loop
repnz
sub
dec
shll
xchg
xchg
out
daa
inc
into
jo
inc
xchg
xor
pop
aaa
loop
mov
dec
test
push
loopne
adc
das
imul
inc
outsb
ret
sub
pusha
pop
dec
mov
mov
repnz
lcall
adcl
fisubs
sahf
or
jo
jne
pop
ror
popa
or
jg
push
rcr
outsl
leave
xchg
outsl
andl
adc
xchg
mov
ljmp
mov
or
mov
cmp
stos
cmp
cmpsl
fdivl
jae
xor
pop
adcb
cmp
clc
dec
movsb
call
nop
out
loop
push
int3
sub
mov
sub
mov
les
cmpb
pop
int3
cmp
dec
dec
fwait
cli
sbb
jno
sbb
insl
leave
jbe
pusha
popa
sbb
mov
loopne
dec
mov
fisttpll
jge
jp
jbe
jb
roll
ret
xchg
inc
adc
lds
xchg
test
push
jl
in
js
cs
lods
aas
lock
xchg
out
repz
pop
inc
imul
push
sub
mov
inc
fisttpll
lret
inc
xchg
stos
push
roll
sub
xor
decl
adc
out
pop
data16
xchg
aam
notb
sub
cmp
push
jecxz
subb
icebp
fmull
add
sbb
jmp
push
mov
adc
mov
jno
subl
adc
add
and
les
and
xor
add
and
lods
jns
ds
jbe
lret
xor
int3
aam
dec
inc
pop
or
inc
dec
jge
pop
xchg
rcl
dec
mov
jl
scas
xor
cmp
and
mov
mov
fcoms
lea
ljmp
data16
cs
leave
jo
loop
aad
adc
mov
les
divb
add
pop
icebp
roll
mov
xchg
or
inc
add
fisubs
dec
data16
iret
or
jge
sub
cmp
xchg
arpl
mov
inc
aam
out
outsb
clc
adc
dec
out
dec
ljmp
cld
fists
cmc
test
cmp
pop
inc
adc
arpl
adc
mov
ds
sub
sahf
or
jl
mul
xchg
push
dec
lret
aam
mov
mov
sar
add
aaa
mov
call
xor
mov
popf
pushf
mov
arpl
mov
push
out
sub
rcll
dec
data16
jo
fdivp
add
mov
dec
mov
jne
fs
repz
fildl
xor
push
int
fdiv
xor
cwtl
repnz
inc
sti
fst
les
dec
push
mov
mov
or
iret
push
bound
xchg
les
push
nop
mov
adc
daa
dec
jae
test
cmpsl
fwait
inc
das
sub
push
xor
das
mov
pop
cli
lret
xchg
jl
pushf
aas
dec
inc
xchg
dec
cmp
jo
push
xorb
stos
pop
fadd
stos
mov
xchg
insl
mov
sub
aaa
mov
rcl
cmp
lods
xchg
pop
mov
jmp
outsl
rol
popa
cs
sub
inc
push
push
mov
cmp
adc
sbb
push
mov
adc
push
inc
mov
inc
xchg
aas
push
pusha
and
fldl
sbb
push
adc
inc
lret
jbe
sar
outsl
insb
sar
stos
je
outsl
ret
xchg
mov
movsb
xorb
or
xchg
in
fs
mov
sub
shll
pop
cwtl
movb
movsb
mov
in
out
sub
aaa
push
hlt
push
gs
lret
dec
mov
cmp
sbb
push
popa
sub
inc
add
in
lahf
loop
pop
stos
lods
mov
lds
or
inc
fdivl
fdivl
pop
decb
loop
pusha
push
mov
scas
lds
gs
jnp
lret
std
int
imul
icebp
fstps
idivb
leave
adc
leavew
iret
pusha
orb
dec
mov
xor
mov
lds
add
add
xchg
in
xchg
sub
xorb
xchg
fwait
xchg
push
sub
rcrb
lcall
rolb
xor
add
in
lcall
jp
leave
adc
mov
push
or
push
iret
lret
inc
xchg
into
pop
xor
pusha
adc
testl
lea
jno,pn
adc
pop
aaa
cmp
jmp
ds
aad
je
mov
lahf
arpl
aam
jl
popf
xor
add
cltd
shll
out
lcall
and
inc
mov
or
int
arpl
lret
into
js
sub
pop
insb
mov
xor
adc
insb
cmp
mov
mov
jns
dec
push
jecxz
xchg
jmp
xchg
jmp
sub
repz
push
inc
out
imul
leave
insl
inc
pop
mov
fxam
repz
xor
andl
push
fdivl
dec
loopne
sub
imul
or
pop
mov
test
jge
push
loop
xor
in
and
pop
and
add
cmpsl
add
aas
adc
fistpl
pushf
stos
xchg
insl
std
add
shlb
scas
fwait
rdmsr
jno
std
and
mov
in
negl
xor
pop
out
sar
push
push
fcoml
cmc
pop
ss
sub
push
jo
xor
test
cmpsl
inc
cmp
aas
out
into
dec
mov
cmp
fisubl
out
loopne
popf
int
idivl
sub
mov
pop
jge
push
sub
int3
ljmp
loope
adc
cmpsl
adc
push
lret
lds
inc
xchg
test
cld
lods
adc
add
mov
and
cmc
sub
lods
js
inc
and
into
xor
dec
fbld
adc
popa
pop
jecxz
inc
loop
popf
loop
jle
mov
in
aam
stos
imul
out
xchg
decb
push
shrl
and
adc
pop
inc
movsb
mov
jnp
add
sbb
mov
stos
mov
cs
push
inc
mov
cmc
cmpsl
dec
pop
push
pop
rcll
fimull
sti
shl
fwait
xchg
add
sbb
addr16
dec
mov
pushf
in
ret
movsl
xchg
jecxz
jnp
fsubp
push
cmpsb
push
jmp
out
mov
cmp
pop
or
jae
sub
xor
loope
pop
sbb
mov
cli
push
xor
jbe
rorl
arpl
ds
mov
pop
pusha
push
dec
and
mov
jge
repz
ret
jnp
cmc
in
and
inc
out
push
sbb
and
inc
in
or
shrl
ss
aad
sub
cld
addr16
push
iret
testl
leave
jg
sub
test
jb
xchg
pop
pop
pusha
or
test
sbb
fbld
imul
outsl
pop
pop
lret
inc
mov
adc
das
aaa
inc
lahf
inc
inc
aaa
call
fsubl
dec
or
fldenv
das
push
pop
push
push
repz
daa
int
stc
int
jecxz
pushl
scas
add
shrl
ss
jns
cltd
add
ss
pop
adc
dec
lds
pushf
xor
clc
lcall
pusha
push
mov
mov
das
cs
cwtl
xor
test
pop
or
sub
dec
inc
fildll
or
pop
xor
scas
mov
mov
and
cmpsl
and
inc
or
sti
insb
cwtl
adc
push
popf
cmc
and
test
xchg
dec
mov
xchg
mov
mov
or
sbb
rolb
fs
jecxz
rcll
testl
clc
push
testb
dec
and
pop
cmc
repnz
jle
sbb
das
call
mov
sbb
ljmp
in
lods
subl
xchg
xchg
adc
add
vunpcklpd
in
push
leave
pop
mov
loope
xchg
daa
push
and
sub
out
inc
jnp
adc
xchg
add
xor
js
adc
lds
call
cld
pop
stos
pop
test
test
pop
aaa
out
pusha
gs
cmp
mov
inc
xchg
push
cmp
mov
xchg
and
mov
cltd
add
test
out
xchg
dec
enter
inc
outsb
loopne
je
mov
xchg
push
fcoms
inc
mov
aas
fcmovbe
or
movsl
mov
nop
mov
cmp
push
outsl
arpl
jno
roll
jnp
push
mov
pop
mov
jle
xor
or
push
test
sub
jle
mov
popa
dec
jge
out
mov
lods
pop
out
push
xor
rorb
sarl
mov
sbb
sub
xor
jl
outsb
cmp
xor
xchg
ret
std
sbb
clc
cld
sti
in
mov
inc
pushf
movsb
inc
add
mov
inc
jae
nop
inc
push
cmp
aad
fcmovu
pop
addr16
xorb
loope
mov
xchg
aam
arpl
es
pop
mov
cmpsb
dec
inc
mov
inc
es
in
in
aam
sub
repz
inc
iret
cltd
sti
leavew
iret
push
les
mov
cmc
sahf
arpl
pop
cmp
adc
xchg
jns
xchg
pop
xchg
sbb
push
fmull
icebp
xchg
movsb
xor
pop
pop
xchg
jl
pop
js
lods
mov
lock
xchg
xor
jo
xor
adc
cmp
jge
fsubrl
outsb
xor
movsb
jbe
loopne
movsl
ss
std
cmc
loopne
rcr
ret
cli
les
fadds
mov
je
mov
add
push
cld
lods
adc
push
adc
std
mov
cmpsb
in
mov
cmp
push
je
mov
addr16
adc
out
jecxz
sub
adc
out
sti
dec
lret
addr16
lret
mov
div
leave
lahf
xor
or
dec
outsl
sub
insl
fadd
push
mov
movb
das
and
pop
sub
or
add
fsubp
push
cmp
fisttpl
xchg
adc
fwait
sbb
in
cmp
mov
xor
xchg
imul
inc
fidivrs
pop
stos
push
test
negb
aas
mov
xchg
dec
fmulp
sbb
sub
outsb
jmp
mov
bound
or
xor
cmp
ret
pop
jne
filds
sbb
xor
push
mov
pop
add
in
and
cmpsl
dec
lods
dec
mov
pop
aaa
mov
mov
nop
inc
add
or
int
mov
test
aas
lret
negb
movsb
xlat
jnp
inc
sahf
hlt
scas
mov
sub
loop
ljmp
lods
inc
jno
int3
pop
jo
and
or
cmpb
sbb
loop
sub
and
out
cmp
hlt
arpl
call
xor
movsb
jae
popf
into
sub
insl
out
inc
dec
int
mov
xchg
ret
aaa
addr16
mov
mov
push
pusha
mov
and
mov
loopne
mov
ror
xchg
or
dec
adc
add
lock
andb
cmp
push
mov
adc
adc
pand
mov
sbb
popf
jl
int
push
mov
ficompl
rol
std
push
aaa
lock
lcall
jmp
xchg
jl
dec
jg
test
int3
and
jecxz
daa
or
inc
call
mov
adc
xchg
jbe
imul
pop
popa
clc
or
adc
aas
inc
push
sarl
dec
push
mov
and
pushf
out
divb
dec
push
dec
cmp
fwait
or
pop
xor
aad
xchg
and
repz
mov
loop
fcomps
in
mov
test
pop
stos
jns
jmp
lods
inc
ret
mov
mov
jmp
mov
int3
inc
loop
add
lcall
pop
adc
test
dec
faddl
or
test
pop
iret
lret
rol
sti
add
pop
imul
js
mov
adc
push
xchg
sarb
ja
add
cmp
push
imul
clc
pop
das
inc
and
daa
add
rcrb
pop
xchg
js
test
add
in
dec
out
lcall
icebp
push
sti
out
test
jbe
loope
pop
mov
inc
enter
nopl
cmc
sahf
data16
mov
int3
sub
fs
ljmp
adc
fdivrp
jle
out
cmp
flds
mov
pop
scas
add
adc
shrb
pop
loopne
mov
fdivrp
orb
ret
push
adc
loopne
es
les
cltd
or
push
or
test
jge
and
xor
pop
and
call
loope
xchg
push
push
hlt
in
inc
or
sub
xchg
inc
pop
xchg
xor
sbb
xchg
jmp
sub
push
ds
dec
mov
inc
daa
pop
lods
mov
xchg
movsl
or
movsl
inc
fildl
mov
cltd
pop
repnz
loopne
push
mov
add
nop
pushl
cmp
sahf
pop
addr16
mov
stos
sti
xchg
ds
cld
inc
outsl
inc
add
inc
lahf
les
scas
pop
adc
mov
fimuls
jmp
push
push
jnp
stos
pop
cmp
lock
cmpsl
rcrb
xor
dec
inc
xchg
lahf
jbe
fcoml
mov
je
ret
cmp
pop
pop
xchg
or
jnp
jb
fistps
out
adc
xor
repz
stos
test
xor
loop
fs
ds
mov
push
outsb
fnstcw
push
into
pop
cli
iret
and
mov
add
adc
pop
mov
sahf
xchg
pop
pop
sar
push
jb
adc
ret
lret
inc
sbb
sub
stos
not
sub
pop
jo
cmp
movb
aam
mov
pop
imul
add
leave
aas
subb
lret
jmp
sub
add
push
or
inc
fcoml
jmp
lock
mov
gs
call
ja
push
les
add
lcall
arpl
jl
pop
mov
dec
push
pusha
int3
add
mov
cld
idivb
in
pop
sahf
cmp
and
and
inc
add
xchg
imul
xor
xchg
mov
xchg
xchg
push
xlat
lcall
test
mov
movsl
jo
dec
bnd
sbb
dec
nop
mov
sbb
jno
movsb
pop
imul
inc
dec
xor
js
aam
jbe
daa
or
push
test
mov
cmpsb
add
xchg
out
add
enter
loopne
push
lahf
inc
pop
mov
mov
cs
inc
inc
pop
sub
mov
imul
std
das
cwtl
cmp
xchg
scas
call
repnz
lret
mov
sub
mov
mov
mov
cmp
cli
jbe
and
xchg
jg
xchg
lods
jp
lret
jg
shlb
mov
nop
negb
comiss
pop
sbb
stc
aad
in
xor
js
call
es
and
loope
mov
dec
push
ret
sbb
mov
mov
sub
dec
mov
jle
sub
pop
jmp
lcall
dec
mov
mov
xchg
arpl
sub
mov
pop
lcall
and
popa
pusha
and
inc
push
push
test
xlat
push
push
add
sub
pop
pop
inc
jmp
push
inc
daa
ret
sbb
cwtl
dec
repz
nop
imul
fwait
cmp
out
pop
xor
xor
decb
inc
leave
push
adc
pop
xor
insl
mov
sbb
sbb
ljmp
cmp
and
and
ficoml
loopne
xor
ret
les
sti
leave
dec
xor
mov
jmp
movl
jno
test
mov
cmp
push
out
out
mov
mov
push
xor
sub
mov
seta
xchg
sbb
sahf
inc
sarl
pop
push
test
inc
outsb
xor
in
dec
std
mov
bound
push
jbe
repz
in
sarb
mov
pop
insb
sti
arpl
movmskps
xchg
xchg
mov
push
in
add
imul
xchg
arpl
arpl
sahf
sbb
fldenv
imul
sarl
mov
fbld
xchg
cmp
add
stos
sbb
pusha
incb
lock
push
shlb
sub
ret
mov
jmp
arpl
ljmp
jo
adc
dec
dec
push
adc
mov
mov
hlt
cmp
xchg
std
push
ds
xor
jns
in
and
mov
sub
pop
mov
subb
pop
xchg
mov
sbbb
js
nop
lock
out
into
lea
xor
and
sbb
inc
mov
popa
jno
push
add
rcrl
mov
hlt
cltd
mov
pop
jns
push
push
clc
outsl
iret
adc
dec
push
sub
and
mov
push
leave
mov
sub
xchg
xchg
js
fdivl
leave
mov
cs
cmp
dec
popa
lahf
lock
sub
cmp
aad
dec
or
ret
fdivrp
iret
cmc
mov
and
sbb
bound
cmc
test
sub
adcb
sub
mov
cld
xchg
aas
repz
sub
pusha
cmp
jmp
popf
aas
dec
lock
or
ja
scas
inc
fsub
jne
cmpsb
push
mov
mov
outsl
mov
sahf
pop
sar
sbb
xor
and
and
or
sti
jnp
mov
outsb
popa
pop
int
sbb
jns
mov
adc
test
sbb
mov
mov
dec
sub
add
add
add
and
dec
cltd
adc
pop
mov
rorb
ret
fisttpl
cmpsl
sbb
mov
mull
test
adc
mov
xchg
jb
jo
mov
jbe
clc
mov
daa
cmc
inc
std
pop
jecxz
jl
mov
jg
mov
add
insl
xor
xlat
daa
dec
leave
xchg
dec
inc
add
sbb
mov
cli
rolb
lods
dec
dec
rol
ret
jp
fwait
dec
imul
insb
or
jo
pusha
push
pop
adc
sbbl
das
mov
sahf
and
pop
ds
clc
and
clc
jmp
shll
test
xor
push
xchg
adc
icebp
xor
test
shrb
xor
test
hlt
jp
imul
mov
fsubrp
fs
mov
pop
ret
xchg
pop
mov
adc
xchg
aam
pop
cmp
and
or
xchg
mov
out
jno
sub
push
cwtl
fs
imul
ds
mov
stc
dec
dec
incb
sbb
mov
push
xor
mov
cmp
hlt
fsubl
imul
jge
lret
cmpsb
icebp
and
or
lods
and
mov
adc
push
push
pop
iret
daa
lret
shll
cmpsb
aaa
mov
insb
or
lock
push
rcrl
cs
outsl
enter
ret
loope
movsb
es
xor
sbb
mov
or
mov
icebp
shrb
add
popf
add
sbb
xor
pop
push
in
sbb
sub
ja
ret
stos
xor
lcall
jo
push
hlt
add
int
mov
inc
test
mov
vpmulhw
insb
and
xor
jae
cmc
fmuls
pop
dec
out
inc
cmp
enter
lock
xlat
xchg
jg
add
mov
imulb
js
fnstenv
int3
pop
adc
push
xlat
mov
je
iret
mull
add
xchg
scas
outsl
pop
iret
mov
jp
pop
das
inc
shll
outsl
add
push
and
mov
scas
fldcw
movsl
notb
xor
stos
test
inc
addr16
test
mov
outsl
mov
mov
pop
pop
inc
push
dec
jo
adc
divl
divb
call
mov
mov
or
aaa
xchg
sub
xor
mov
cmpsl
xor
mov
in
stos
push
mov
data16
clc
add
xchg
aaa
repz
popf
or
jnp
das
mov
inc
cmp
sub
dec
loopne
lock
mov
mov
iret
int
in
adc
mov
pop
push
subb
push
in
dec
mov
imul
mov
mul
sub
jae
insb
lds
mov
push
mov
lods
shrb
pushf
and
addl
or
mov
inc
lret
xchg
dec
mov
jb
iret
xor
push
dec
push
ret
jecxz
ret
shr
sub
jae
jl
outsl
cmp
inc
push
xchg
rclb
dec
inc
cmpl
sub
pop
lea
jmp
xchg
jg
and
decb
mov
aad
mov
cmp
jb
cmp
inc
movsb
mov
or
pushf
lds
enter
sub
ret
jl
xchg
and
out
das
xor
lods
pop
inc
jnp
test
aaa
mov
pop
add
aad
std
or
pop
sbb
sbb
pusha
arpl
push
xor
icebp
lds
dec
dec
sti
aaa
mov
sbb
dec
cmc
rorl
mov
dec
inc
and
mov
nop
push
fsubp
add
ficompl
push
xchg
ja
je
dec
xchg
dec
subl
and
mov
jae
or
aas
sub
inc
leave
ss
mov
je
mov
int
sub
and
and
adc
popf
hlt
inc
mov
stc
andl
mov
data16
fucomp
xchg
imul
stc
stc
mov
fsubrp
in
mov
inc
ficoml
inc
cmp
jmp
pop
and
mov
mov
mov
add
dec
mov
pop
and
pop
inc
aam
cld
jo
dec
stos
fdiv
out
or
fcompp
lds
xchg
pusha
sub
clc
jg
pop
imul
insb
push
push
ss
jmp
xchg
punpckhdq
push
dec
sahf
jl
stc
push
inc
sbb
rcrl
cmpsl
movsl
cmp
sbb
push
loope
insb
leave
cmp
call
xor
cmp
inc
xlat
mov
lods
popf
jg
hlt
stos
mov
cmpl
and
mov
dec
test
dec
push
ficompl
repnz
mov
dec
cmpl
jmp
fsubr
xlat
ss
incb
sub
jg
pop
mov
aas
rclb
in
adc
inc
lahf
and
inc
sub
adcb
shll
divl
add
cmp
xor
mov
cmpb
mov
dec
jmp
rol
lahf
sub
les
incb
mov
rcrl
adc
repnz
jbe
ds
adc
lret
imul
dec
arpl
lods
testl
adc
subl
xlat
testl
nop
push
int
pusha
cmpsl
push
sbb
cmc
jns
jmp
adcl
sahf
mov
cltd
xlat
sub
popa
arpl
mov
imul
dec
mov
adc
xchg
pop
hlt
push
add
mov
cmpsb
jnp
inc
imul
mov
mov
xlat
lret
push
adc
jns
testl
andb
inc
arpl
push
mov
leave
shll
pushf
sbb
rolb
add
jne
mov
lcall
dec
pop
lret
mov
and
sub
ds
rcrl
arpl
sub
outsl
push
repnz
dec
rcrb
push
push
jae
out
aaa
fs
pop
jmp
push
jnp
adc
cmc
in
sbb
xchg
sbb
cmpsl
data16
stc
imul
pop
or
test
sbbb
test
cmp
pop
xorl
sbbb
movb
test
fwait
or
jge
pop
ror
ds
pop
leave
js
adc
sti
sbb
out
xlat
and
inc
jb
movsb
adc
mov
xchg
ret
outsl
mov
push
pop
mov
xchg
arpl
dec
pop
ror
lahf
nop
xor
pop
and
addr16
push
divb
push
mov
ret
daa
hlt
bound
xor
sbb
push
arpl
sbb
mov
or
neg
pop
ja
xor
mov
push
cld
roll
daa
cmp
repz
test
notl
lea
in
xlat
loopne
mov
test
pop
in
mov
aaa
push
pop
cmp
ljmp
adc
mov
pop
or
sub
sarb
movsb
popf
repz
xor
sub
imul
cld
icebp
or
mov
shrb
inc
pop
jns
xchg
fmull
fstpl
adc
jle
mov
ljmp
mov
xlat
pop
je
divb
mov
lret
xchg
icebp
and
stc
xchg
xlat
leave
sub
jno
push
shlb
iret
sti
aad
adc
cld
imul
sbbl
in
inc
push
call
lds
jge
adc
jg
mov
in
clc
stos
sbb
push
fcoml
mov
lea
sbb
mov
aaa
sbb
and
aas
add
dec
push
imul
or
stc
js
scas
adc
in
xchg
negb
inc
cmp
add
dec
fs
mov
mov
hlt
sub
add
mov
movsl
and
sbb
incb
pop
xchg
mov
sub
inc
pop
pop
dec
mov
push
fdivs
adc
jne
or
jo
add
scas
xchg
cld
call
jnp
cmp
sub
pop
lds
int
xchg
scas
push
jg
fists
or
into
test
mov
cs
cmp
rcr
dec
push
stc
fsubr
pop
and
dec
sub
cli
lcall
push
fnstcw
and
enter
icebp
push
mov
inc
addr16
notl
xor
pop
nop
push
lcall
gs
add
sahf
mov
xchg
or
mov
add
mov
mov
push
mov
dec
jecxz
jmp
add
lret
out
cmp
mov
jmp
div
inc
or
ret
adc
dec
mov
xchg
call
mov
dec
push
in
mov
lret
mov
and
rcll
je
jl
sbb
aad
push
mov
cwtl
sub
sbb
test
sti
sbb
lods
nop
call
popa
xchg
sub
icebp
orb
iret
std
adc
out
sbb
arpl
fstps
xchg
es
cmp
aas
dec
ret
push
lahf
sahf
sahf
jmp
dec
fcomi
invd
xchg
mov
bound
mov
cmp
cmc
loopne
nop
int
xchg
orl
repnz
inc
sbb
jl
fstps
shrb
adc
test
add
mov
rcr
sub
repz
sub
adc
mov
adc
leave
dec
pop
pop
jge
sti
mov
outsl
pop
rcr
stos
in
inc
jg
adc
jbe
fstl
sbb
rcrl
clc
add
dec
push
jg
in
add
aas
inc
out
add
pop
mov
aad
sahf
push
imul
push
jbe
xor
dec
xor
push
popw
in
lods
jmp
adc
mov
loope
leave
pop
pop
adc
stos
sub
mov
xor
jg
popa
cltd
mov
jo
mov
test
dec
mul
pop
jecxz
enter
dec
push
cmc
pop
in
dec
out
fdivl
xchg
jle
or
mov
mov
jns
mov
loopne
fstpl
gs
sbb
ret
cmp
jl,pt
inc
adc
xor
pusha
insb
and
sbb
sbb
outsb
sub
leave
sub
js
rcrl
mov
aad
adc
cli
orl
mov
movsl
popf
stos
dec
divl
adc
adc
and
outsl
mov
pop
loopne
lahf
cmp
fcompl
adc
and
fcompl
pop
leave
mov
shlb
lea
or
mov
add
push
negb
cmp
pop
hlt
mov
pop
je
sbb
cmp
add
dec
arpl
sub
loop
jns
gs
insl
pop
mov
xchg
mov
dec
dec
inc
jmp
aam
sub
cli
add
loope
or
dec
vminps
xorb
cwtl
pop
fisttpll
jo
stos
insl
sub
sbb
popf
insl
mov
cmp
shl
arpl
adc
xchg
std
dec
popf
sahf
pushf
repnz
out
dec
xchg
jg
in
jbe
sub
mov
dec
dec
push
push
adc
or
mov
lea
stos
xchg
pop
lret
sbb
push
mov
in
dec
outsl
cmp
dec
outsb
mov
shll
lret
imul
push
mov
outsl
loope
pop
pop
cmp
paddusb
jge
dec
scas
inc
es
pop
add
or
mov
dec
push
inc
cmp
mov
lcall
test
push
inc
mov
into
mov
sub
dec
pusha
aaa
fmulp
fldcw
hlt
xchg
lret
stos
sbb
pop
lods
add
inc
imul
push
lods
cwtl
and
lods
jle
stos
cltd
mov
push
jne
push
rcrl
mov
scas
dec
adc
popf
jge
push
cmp
mov
movb
call
bound
fsts
loop
xor
sub
cmp
jne
mov
xchg
jno
push
xchg
iret
fsubl
adcl
and
std
orl
pop
popf
cmp
dec
movsb
popf
das
mov
jo
popa
je
mov
pop
mov
aam
inc
ss
push
pushf
jb
mov
arpl
mov
leave
dec
or
je
ja
test
daa
lret
ds
mov
loop
and
inc
popf
into
mov
out
notl
xchg
xchg
es
scas
fcoms
cmp
or
scas
adc
lds
mov
pusha
lods
lock
jae
dec
js
ss
push
gs
dec
jo
mov
mov
sbb
dec
out
daa
sub
shlb
dec
test
or
js
xchg
sub
push
add
mov
repnz
rol
in
int
sti
outsb
and
inc
sub
les
testl
nop/reserved
dec
testl
mov
mov
pop
jae
outsb
enter
mov
inc
cmpsb
or
lret
aam
xor
xor
insb
and
nop
mov
test
mov
cltd
lods
andb
adc
or
or
mov
push
adc
or
mov
inc
jno
sub
sub
mov
adc
or
cmp
imul
subl
and
inc
stc
lods
cmp
xlat
rorb
adcl
sbb
mov
outsb
mov
ficompl
mov
fdivrl
fcmovnbe
outsl
xchg
lods
les
pushf
add
sbb
fs
cmp
cli
push
mov
or
es
js
xor
mov
loope
clc
lds
dec
fistps
pandn
mov
cmp
jmp
fldcw
pop
insl
cmpb
sub
hlt
lcall
aas
sbb
push
xor
pusha
push
pop
gs
pusha
dec
lsl
subb
loopne
pop
jg
inc
out
lea
jg
adc
out
xlat
insl
xchg
xor
cmp
push
in
jo
xor
pop
jg
add
xor
or
mov
inc
adc
adc
cmp
adc
mov
inc
out
xor
sub
adc
in
orb
dec
cmpsb
sbb
cwtl
xor
cmc
shrb
arpl
ret
cltd
cmpsl
inc
jbe
clc
hlt
ss
popa
pop
insl
bound
hlt
inc
cs
push
and
add
add
jb
outsl
ret
icebp
adc
xchg
jmp
push
push
out
inc
dec
xchg
pusha
and
xchg
js
cli
push
scas
jo
testb
xchg
stos
fs
data16
mov
or
rolb
xchg
cwtl
popa
in
pop
in
push
push
mov
ljmp
lods
xor
loope
or
or
inc
mov
xor
ret
xor
subl
or
rorb
mov
push
push
jbe
pop
jae
mov
lret
and
mov
mov
dec
cmp
jne
mov
test
loopne
push
ljmp
xchg
lds
mov
jg
out
pop
in
push
mov
xor
pop
imul
and
mov
lods
ja
leave
scas
fstpl
xchg
inc
les
cmp
popf
push
sub
jbe
sbb
jne
mov
gs
in
inc
mov
addb
repz
mov
mov
add
inc
xchg
cmp
mov
mov
out
test
inc
pop
mov
push
mov
insb
cld
sub
xchg
in
cs
jp
cltd
imul
clc
mov
pop
adc
push
rclb
pusha
pop
fwait
loop
shll
lds
pop
push
xchg
es
push
hlt
ja
sbb
and
scas
scas
stc
xchg
ljmp
push
xchg
lahf
xchg
push
lds
data16
mov
inc
inc
and
repz
xor
das
aas
adc
adc
or
movsb
pop
fs
sarb
jecxz
clc
mov
xchg
mov
shl
call
xchg
pushw
shll
clc
jno
cmp
sub
nop
scas
out
or
rcrb
imul
push
adc
js
sti
rcll
stos
loop
jl
mov
mul
clc
dec
ret
stos
add
fadds
pop
xchg
imul
adc
xor
or
push
mov
push
push
lret
pop
mov
pop
div
sbb
dec
mov
daa
sub
adc
out
add
inc
mov
jb
cmp
push
add
push
pop
pop
out
jmp
inc
insl
or
xlat
push
leave
xlat
cs
bound
test
popa
pop
sub
stos
test
jle
daa
fstps
jb
inc
cmp
sbb
stc
mov
sub
sarb
push
sub
cwtl
in
push
cmp
or
fsubrl
jbe
lock
je
xlat
test
movsb
cmp
adc
int3
dec
js
pop
lea
cs
repz
leave
mov
sbb
mov
sar
or
mov
and
loope
adc
ror
nop
cmp
out
test
in
repz
cltd
out
push
dec
add
mov
adc
lcall
pop
in
or
loope
loope
fst
lods
or
and
or
push
imul
aam
lahf
dec
fisubrl
xor
adc
fsubl
adc
push
pop
rorb
inc
fwait
loope
jns
xor
ja
clc
dec
fimull
ja
imul
xchg
xchg
into
shlb
xlat
fcomi
popf
jns
adc
cmp
scas
xchg
in
mov
stos
adc
mov
sbb
scas
jg
sbb
push
pop
or
rolb
xchg
ret
dec
inc
or
xchg
inc
in
pop
insb
jle
loopne
cmp
outsl
jmp
mov
fildll
and
push
stos
sbb
sub
push
or
aas
out
or
call
mov
inc
loope
cmp
sbb
cmp
dec
sarb
xor
jecxz
fwait
pusha
pop
test
mov
stc
sub
jns
pushf
jl
popf
shlb
cmp
sbb
pop
jnp
ljmp
je
sub
out
cmp
mov
sbb
jne
sarb
push
je
pop
adcl
and
lods
test
dec
push
imul
addb
adc
iret
mov
or
xchg
jl
lods
pop
daa
jmp
adc
jns
jo
mov
push
test
mov
lea
cmp
dec
sbb
xor
imul
jo
mov
mov
test
cs
movsb
sahf
enter
loope
pop
repnz
shll
dec
cwtl
push
adc
inc
pop
cmpl
push
mov
jne
lret
repz
outsl
and
cs
or
cmp
cmc
sarl
pusha
jbe
dec
mov
dec
pop
dec
lret
dec
pop
jmp
ds
mov
dec
jbe
cwtl
mov
jg
js
jo
rcll
scas
jno
pop
push
jbe
iret
add
push
sub
dec
popa
xlat
stos
sti
mov
lods
mov
test
push
push
add
mov
jne
sub
jecxz
xchg
pop
mov
mov
adc
rcrl
andl
xchg
push
out
or
cmp
out
mov
push
iret
fsubr
fldcw
mov
cmp
xchg
jae
lahf
pop
or
adc
stc
loope
mov
ja
mov
xlat
cmp
and
xchg
pop
mov
aaa
iret
repnz
mov
fsubl
xchg
and
mov
sbb
sar
sub
pop
pusha
xchg
adc
mov
pop
xor
fnsave
xor
mov
fildl
push
enter
in
jmp
push
push
stc
mov
or
dec
in
cmp
cmp
dec
jno
test
add
adcb
or
scas
subl
aad
sub
cmp
aaa
scas
push
jnp
dec
inc
pop
outsl
dec
push
jbe
pop
sbbb
ret
jo
xchg
mov
in
out
jb
pop
cmp
