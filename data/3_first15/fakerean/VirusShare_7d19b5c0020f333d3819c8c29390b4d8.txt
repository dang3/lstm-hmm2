sbb
add
mov
xchg
cwtl
int
and
mov
sbb
sub
notl
or
jecxz
add
int
mov
insl
jae
adc
dec
mov
xorl
jp
dec
cmc
push
jl
xchg
mov
shlb
sub
bound
jb
cmpsb
mov
push
mov
imul
imulb
add
mov
adc
pop
cmp
loope
inc
cld
out
mov
stc
movsl
push
movsb
aad
stc
push
sbb
fstps
xchg
jbe
imul
lds
call
cmc
mov
iret
sahf
sarl
in
ret
imul
inc
cmp
addl
pop
cmp
push
push
stc
data16
dec
push
inc
int3
popl
sbb
test
out
cmp
jne
and
daa
mov
cmp
popf
and
nop
lods
stos
pop
and
movsl
push
fs
outsl
xchg
lock
in
loopne
push
aam
stc
dec
mov
mov
rclb
dec
enter
inc
aam
dec
pop
mov
mov
lock
cmp
mov
xor
js
lods
pop
inc
std
mov
pop
loop
cmpb
fldcw
xchg
mov
add
push
mov
sbb
sti
xchg
push
mov
pop
push
int
jge
cmp
popa
fiaddl
mov
and
fucomi
xorl
pop
cmpsb
push
cmpb
dec
andl
into
and
syscall
mov
inc
rolb
pop
nop
mov
lahf
pop
aas
fs
pop
push
lock
lds
ja
in
fisttps
test
cli
mov
jbe
js
dec
sub
stos
jecxz
scas
lcall
sbb
cwtl
jl
and
hlt
pop
sbb
in
or
adc
lcall
mov
mov
out
jae
insl
mov
inc
lods
and
pusha
scas
loopne
mov
popl
insb
movsb
pop
or
jae
das
sub
fisttps
inc
lods
jl
inc
shrb
xlat
jo
lods
cmp
stos
idivl
or
push
bound
pop
xchg
push
jl
push
aaa
ret
mov
cwtl
ljmp
stos
insb
mov
je
sbb
out
adc
movsb
subl
push
lahf
lods
ljmp
popa
cltd
mov
call
pop
rorb
mov
jo
sbb
push
fnsave
call
add
adc
mov
sub
xchg
push
cld
ljmp
stos
fldenv
xchg
sahf
and
add
fs
mov
mov
ror
clc
insl
dec
fmull
cmc
stos
sub
jne
loopne
popf
xor
jmp
and
and
push
xchg
add
mov
loope
lds
stc
mov
xchg
push
decl
hlt
movsb
in
cmp
cld
mov
push
cmp
clc
jge
les
enter
xchg
mov
outsb
ror
xchg
inc
les
out
inc
ret
lods
test
cmp
aas
sub
rcll
mov
rcll
push
sub
or
mov
push
mov
or
rclb
pop
pop
sub
pop
mov
pop
aad
mov
insb
mov
ret
insl
or
sbbb
mov
xchg
inc
push
mov
into
les
lret
mov
mov
popf
mov
pop
pop
jae
and
leave
mov
mov
inc
xchg
fsts
test
add
dec
sbbl
sbb
insb
mov
mov
subl
roll
mov
fidivs
add
shrb
mov
mov
mov
push
fisubl
add
pop
inc
or
test
add
test
push
mov
jo
mov
mov
pop
mov
and
fs
insb
scas
or
adc
mov
inc
and
es
stc
test
dec
cmp
inc
jo
dec
neg
sti
fstl
inc
cli
pop
cmc
ljmp
mov
adc
mov
cmp
mov
nop
and
movsl
xchg
xchg
xlat
subb
daa
lret
testl
gs
ficompl
push
hlt
movsb
cmp
mov
push
cmp
mov
jo
push
xchg
out
cld
ss
dec
dec
xchg
das
pusha
cmp
dec
mov
sti
pop
mov
lods
xchg
xchg
xchg
mov
mov
movl
mov
adcb
cmp
scas
adc
add
mov
out
mov
out
aad
addl
cmc
cld
cs
push
fisttpl
dec
push
and
out
ljmp
add
cmpsl
sbbb
mov
out
pop
or
push
inc
pusha
dec
inc
addr16
popf
xchg
or
es
xchg
pop
mov
cmp
add
in
jmp
imul
sti
call
ret
jo,pn
cltd
jl
inc
and
imul
mov
mov
and
cmpsl
push
xchg
adc
notb
xor
push
push
sub
pop
movsl
mov
mov
je
xchg
xor
pop
xor
mov
imul
cmp
filds
imul
in
xchg
loope
stos
outsb
xchg
dec
sarb
iret
dec
mov
sub
mov
insl
fwait
andl
mov
loop
fdivrs
pop
sahf
add
stc
jp
clc
sub
add
inc
sbb
add
inc
ja
cmp
push
or
inc
mov
test
mov
or
cmp
jecxz
or
cmp
mov
cmpsl
sahf
pop
insb
xor
test
push
sub
lret
xor
jnp
lret
movsb
adc
push
pop
fsubl
xlat
add
inc
les
in
es
sub
test
popa
xchg
scas
out
out
or
dec
adcb
dec
or
mov
or
xchg
inc
cmp
sbb
mov
out
jle
sub
scas
or
pop
popf
mov
add
xchg
loopne
fnstsw
mov
enter
cmp
aad
mov
inc
cmpsl
cmpsb
rcll
mov
repnz
pop
add
repz
pop
push
sbb
das
ja
das
dec
testb
mov
bnd
ret
popf
xlat
mov
fmuls
shlb
cmpl
mov
push
fimuls
mov
fldcw
add
mov
outsb
add
rol
mov
push
mov
jne
lods
cmp
mov
aam
or
ja
nop
lret
xchg
pop
pop
leave
lods
jnp
test
sub
popa
in
aam
xchg
pop
loop
add
jo
mov
inc
sahf
dec
push
shl
repz
cld
sub
pop
dec
mov
or
fisubl
inc
jo
adcb
into
lcall
out
int
push
testl
inc
add
aam
repz
mov
adc
pop
sbb
mov
mov
test
xchg
int
je
xor
outsb
mul
jne
imul
inc
mov
and
popf
jno
fucomip
leave
mov
stc
repz
aaa
sub
aam
inc
mov
cmc
call
pop
ds
adc
cmpl
popa
or
mov
and
rclb
inc
in
setge
and
xchg
cmp
mov
mov
pop
adc
fldenv
std
pop
and
popl
adc
dec
and
and
or
adc
adc
in
dec
mov
negl
je
adc
xchg
mov
and
es
pop
jmp
pop
ret
adc
xor
fucom
lahf
test
stos
mov
ss
int
mov
aam
pusha
push
add
pop
ret
mov
and
sub
cmc
pop
pop
dec
stc
jne
add
pop
in
test
lods
xchg
clc
test
jae
cmp
and
bswap
push
and
xchg
jecxz
mov
cmp
mov
xchg
jge
or
loopne
mov
testb
mov
mov
or
dec
fsubrl
push
scas
pop
lret
addr16
fimull
imul
rolb
jns
dec
xchg
aaa
in
les
mov
jmp
sub
and
or
shlb
jne
push
gs
lea
mov
jp
shr
repnz
fnstsw
shl
fwait
xchg
in
movsb
data16
test
pop
mov
filds
and
pop
sbb
cwtl
mov
and
mov
or
push
lock
adcl
std
or
repz
jp
je
pushf
outsb
ljmp
xchg
and
xor
push
xchg
xor
fwait
ds
adc
mov
test
andb
and
pop
lahf
pop
div
orb
mov
xor
xchg
sub
add
xor
xchg
std
rcll
dec
jnp
rorb
mov
cltd
lret
push
mov
out
in
fnstenvs
outsl
mov
bound
xchg
mov
loopne
cmp
pop
icebp
lcall
xor
sbb
imul
add
or
aas
je
xor
push
daa
lret
push
int3
cmp
mov
mov
mov
push
lret
xchg
mov
stos
adc
dec
mov
sarl
or
aas
cmp
xchg
ja
fwait
mov
ds
mov
sub
sbb
jo
subb
xchg
addb
int3
pop
call
adcb
lds
fcom
or
sti
lds
mov
fdivr
inc
lcall
fstps
aaa
and
and
rcrl
jo
push
jge
es
or
and
cmp
test
push
and
cmp
cwtl
ja
or
or
sahf
push
mov
sub
pop
mov
fisubs
jp
jo
sub
mov
cs
xlat
mov
add
pop
icebp
and
pop
sub
test
xor
sub
cltd
cmc
xor
dec
fwait
out
lcall
adc
xor
in
insl
lods
movsl
sysexit
iret
test
mov
in
adc
rcl
push
cmc
and
sar
or
sbb
fsubs
js
or
push
ja
xor
pop
mov
movsl
mov
cld
pop
and
cmp
repnz
pop
lret
add
popa
repnz
cmp
icebp
mov
mov
jno
daa
test
xor
lret
mov
xchg
fmulp
cmc
mov
lahf
xchg
fs
sbb
fwait
add
cli
call
cmp
mov
xchg
repnz
mov
in
data16
xor
push
addr16
push
jb
cmpsb
addl
mov
shl
lret
js
or
mov
scas
lods
mov
fs
enter
cmc
ds
cmpsl
xchg
push
in
rolb
outsb
jno
out
cmp
outsl
sub
mov
mov
aam
iret
push
mov
add
cmpsb
sti
and
enter
pop
mov
into
mov
sub
or
and
fsubr
mov
jae
add
inc
add
and
in
data16
call
jecxz
push
cltd
daa
inc
mov
adc
ret
and
mov
jmp
lahf
xorl
xchg
add
mov
es
jb
ljmp
out
mov
stos
inc
rcrb
mov
das
push
fldenv
mov
pushf
pop
fsubs
xchg
and
sub
dec
sbb
daa
pusha
aas
sahf
jmp
push
mov
lea
push
imull
inc
ja
aaa
xchg
repnz
sub
scas
aam
or
pop
mov
adc
in
test
cmpsl
xlat
jne
mov
movsl
ljmp
mov
or
pop
into
sub
sbb
dec
cmp
adc
sti
push
push
loope
pop
lods
je
sub
pop
add
in
inc
jp
clc
dec
imul
cmp
pop
push
cli
push
mov
arpl
xor
mov
pop
sbb
adc
test
xor
testb
sub
jne
mov
adcb
push
sbb
xor
cld
mov
clc
popa
in
insl
shlb
lea
dec
scas
repnz
add
mov
mov
sub
pop
jae
inc
sti
sub
xchg
mov
jae
mov
in
mov
and
and
mov
or
popf
aad
jecxz
cwtl
pop
jle
test
les
pop
or
and
lcall
pop
mov
int
dec
iret
jns
dec
add
add
rorb
fwait
loopne
add
cmpb
sub
out
jge
xor
aad
mov
pop
sub
adc
xchg
or
lods
dec
fistl
mov
sbb
xor
dec
mov
movsl
jp
out
imul
cmp
les
inc
pop
pushf
dec
adc
mov
adc
test
lock
jp
xor
and
mov
lock
adc
ds
adc
orl
repz
ljmp
in
and
test
cmp
cwtl
loopne
mov
bound
sbb
mov
cltd
mov
mov
loope,pt
ds
in
andl
add
add
loope
popl
iret
shl
lds
lods
pop
pop
xchg
je
arpl
lahf
push
push
fwait
sarl
test
inc
mov
mov
adc
lods
je
test
inc
xchg
push
or
add
aaa
push
mov
popa
leave
xor
add
push
sbb
mov
outsb
xchg
lcall
push
pop
add
insl
mov
gs
mov
repnz
neg
lea
test
jecxz,pn
mulb
mov
test
dec
cmp
iret
cmp
xchg
aas
loop
scas
push
jne
push
insb
je
out
gs
maskmovq
mull
xchg
in
cmp
aaa
arpl
add
mov
xor
pop
dec
push
pop
lds
adc
and
or
cmp
loopne
sbb
gs
out
inc
fiaddl
cs
lcall
pop
arpl
push
je
scas
test
mov
sbb
adc
pop
shl
sbb
xor
cmpsl
mov
mov
mov
cmp
les
mov
cs
inc
and
cmp
jecxz
aas
push
xor
dec
push
pop
mov
pop
test
and
dec
xor
dec
push
push
mov
dec
outsb
mov
mov
jno
cld
cli
jl
stos
insl
test
sbb
mov
and
xchg
pop
add
sbbb
std
cmp
out
jbe
ret
dec
loope
mov
loope
test
cmpsl
sbb
mov
loop
push
popf
es
adc
rcr
les
leave
adc
mov
inc
mov
imulb
push
lret
pop
sub
or
stc
pop
shlb
repz
addr16
pusha
and
aas
ljmp
pop
push
stos
lahf
mov
inc
push
arpl
cli
and
ud1
xor
pop
bound
mov
xchg
stc
mov
jg
sub
pop
mov
fucomip
push
movsb
cs
mov
mov
jp
add
mov
dec
test
mov
mov
mov
dec
movsb
mov
inc
repnz
repz
add
imul
jmp
gs
adc
or
and
aam
dec
in
lds
or
ja
dec
mov
ds
testl
shrl
xchg
adcb
ja
stos
and
push
push
inc
ret
into
imul
shlb
and
ret
into
ret
fdivl
or
pop
pop
mul
popa
jp
xor
mov
aam
pop
cmovg
push
mov
xchg
dec
add
mov
subl
adc
add
push
pop
push
loope
pop
ffreep
or
sbb
sbb
pop
cli
xor
inc
and
repnz
cmp
push
dec
add
pusha
adc
insb
add
popa
xchg
mov
int
sbb
fists
fldenv
pop
xchg
pop
lock
or
dec
jno
subb
dec
fdivp
dec
fs
sbb
jmp
jge
mov
js
in
push
jmp
mov
adc
loopne
jl
dec
in
sub
jnp
jns
icebp
mov
sarl
pop
lods
fwait
adc
xchg
int
subl
testb
mov
pop
dec
imul
repnz
ficoml
sub
scas
pop
cmp
xchg
or
mov
pop
cli
fildll
loop
add
pop
xchg
mov
fmull
pop
inc
test
fmul
push
addr16
push
xchg
stos
repnz
push
out
jp
xor
mov
cld
sarl
in
adc
mov
add
addb
repnz
push
xchg
std
pop
or
xor
sub
pop
inc
ljmp
pop
push
lret
mov
jbe
push
pusha
loope
jb
jae
xor
pop
icebp
sbb
daa
dec
fldcw
inc
jae
aas
jnp
jp
jo
call
sub
jne
mov
rol
and
push
in
fwait
shrl
jne
sarb
aad
sub
xchg
inc
outsb
cltd
mov
jmp
xchg
inc
or
push
pop
jle
mov
dec
es
into
push
daa
and
mov
pop
jae
fsubrs
or
cmp
daa
push
filds
cli
jnp
mov
in
cltd
jnp
xchg
in
sahf
push
or
imul
add
xchg
dec
push
cmp
sub
inc
cmp
fisttps
sub
repnz
push
loop
adc
stos
repnz
fcompl
paddb
dec
sbb
pop
jp
fidivs
jne
lahf
hlt
push
xor
sub
mov
inc
xchg
addb
outsb
fidivs
mov
xchg
cld
lret
xchg
in
idiv
sub
daa
ja
jge
popa
xor
lods
lret
xchg
dec
in
iret
ficoms
fstpl
test
dec
cmpb
jae
loope
fcom
sarl
push
sarl
and
cmpsl
andps
sub
fiadds
lods
add
sbb
mov
add
ffree
mov
mov
push
add
inc
or
mov
inc
shr
adc
mov
repnz
mov
jge
test
pop
clc
cmp
sub
mov
addr16
movsl
es
lods
mov
jg
and
mov
bound
xor
mov
push
out
cs
data16
cwtl
clc
out
and
xlat
xor
pop
push
sbb
loope
mov
jl
clc
dec
scas
pusha
adc
sub
jmp
inc
dec
int3
mov
jle
int
or
sahf
inc
sbb
push
and
cmp
mov
scas
pusha
aam
sbb
push
mov
lret
cmp
mov
fwait
lret
popa
lods
mov
dec
and
fstl
and
sti
fistl
cmp
scas
insb
jne
push
clc
push
test
js
out
gs
aad
mov
mov
or
mov
jae
dec
dec
ljmp
shll
test
cmpsb
jb
sub
fbld
xchg
push
or
fwait
in
cmp
arpl
outsl
mov
cmp
add
xchg
ja
ljmp
hlt
adc
shrb
pop
mov
ja
test
mov
es
mov
lds
jns
sahf
fstl
jg
add
or
xchg
cmpsb
das
in
or
cmpsb
or
pop
cmpsb
aas
inc
fcmovnu
leave
ficoml
dec
scas
push
cmp
lea
cbtw
mov
lahf
shrl
sbb
xlat
add
xchg
pop
scas
js
in
es
in
sar
fstpt
jp
mov
outsb
adc
mov
cwtl
out
fnstenvs
lret
dec
sbb
fstpl
push
and
ss
jmp
sbb
cmp
mov
jl
ret
cmp
pop
loop
mov
lahf
clc
pop
or
mov
sti
in
and
inc
jb
xor
cwtl
int
ljmp
clc
fidivrs
arpl
mov
add
xchg
lods
fdivs
popf
push
dec
or
test
or
jne
shrl
xor
das
cmpsb
inc
popa
dec
mov
pop
ret
imul
jge
cmp
or
sarb
adc
sbb
pop
adc
xchg
sbb
cli
xchg
jl
adc
aam
call
lret
and
cmp
imul
mov
shll
aaa
movb
fiaddl
sub
ret
pop
mov
cmpsb
lods
push
negb
xchg
shlb
iret
adc
in
rcll
xor
sbb
mov
je
push
inc
jg
add
loope
mov
mov
jo
pop
les
addr16
xchg
adc
sbb
jns
sub
dec
fstps
outsl
sub
lcall
outsb
or
mov
movsb
imul
or
fiaddl
mov
pop
add
fstl
jno
lods
mov
xchg
pop
scas
aas
cmp
loopne
mov
mov
push
pop
pusha
jbe
mov
add
jbe
mulb
add
test
jg
std
negl
mov
mov
ficoms
push
fcmovbe
fsts
test
push
mov
fimull
mov
into
neg
adc
in
jge
xchg
mov
cmc
rolb
jp
lahf
fwait
add
push
pusha
sbb
mov
das
mov
out
pop
inc
incb
js
inc
and
sbb
sbb
push
test
push
std
sbb
xor
fildl
outsl
and
scas
cmpl
jmp
push
push
or
mov
in
imul
jp
aaa
sub
loope
inc
pop
lods
out
enter
sub
cmpsb
es
sub
push
pop
push
xchg
mov
les
and
rol
pop
sbb
sbb
test
inc
popf
dec
addr16
inc
stc
push
mov
ss
mull
or
ret
std
xchg
sbb
bound
test
inc
pop
push
mov
push
xchg
mov
xor
sbb
push
out
shrb
out
cld
jnp
push
mov
sub
or
xchg
mov
dec
insb
ror
mov
imul
and
or
or
stc
mov
ljmp
andl
add
loopne
jne
mov
nop
stos
and
rcrl
cmp
add
mov
mov
cmp
mov
fidivs
xor
aaa
xchg
sahf
jo
jb
mov
or
mov
xor
mov
cmc
popaw
fidivrl
and
fidivl
lahf
addl
adc
xchg
push
xchg
mov
xchg
lret
daa
cmp
les
sub
imul
fisttpl
repnz
sbb
or
xchg
pop
mov
or
sbb
lods
imul
daa
cwtl
ljmp
pop
sub
xchg
lcall
xor
fistpll
std
mov
mov
cmp
sub
cwtl
cmp
mov
insl
lock
sub
dec
mov
xor
mov
cmc
inc
nop
mov
enter
jno
arpl
jns
jmp
push
mov
sbb
hlt
sbb
jbe
dec
inc
scas
movsb
mov
hlt
mov
push
into
imul
cmp
aaa
and
mov
push
fdiv
mov
cmpb
dec
ret
outsb
jns
mov
and
aaa
adc
add
mov
loop
popf
addr16
leave
sub
mov
push
xor
dec
push
into
add
fwait
lock
scas
ss
cli
sbb
gs
imul
fstpt
sbb
pop
cmpsl
or
mov
ret
xor
es
icebp
or
push
aaa
sbb
shl
cmp
and
enter
mov
dec
loop
add
inc
pop
sub
inc
lret
push
scas
xor
add
in
cmpsb
push
adc
test
add
lahf
aam
mov
push
sbb
cld
fwait
lcall
pop
xor
enter
xchg
adc
jbe
in
add
push
mov
xchg
pop
inc
shll
xchg
jg
je
addr16
les
pushl
filds
push
dec
psubusb
sub
es
das
xchg
icebp
mov
test
insl
paddusb
adc
test
jecxz
inc
jne
xchg
add
xor
inc
maskmovq
testl
xor
fsts
jg
iret
jbe
push
jecxz
pop
mov
ret
mov
cmp
mov
cld
pop
cmp
sahf
adc
jb
imul
int3
inc
mov
jmp
pop
push
xor
test
mov
pushf
jge
aas
aas
sti
stos
or
push
and
jle
mov
test
mov
push
jge
loopne
mov
mov
outsb
cs
and
lret
ds
sub
add
orl
dec
adc
mov
scas
popa
cltd
js
adc
inc
or
es
xor
fisttpll
adc
adc
sub
inc
or
scas
ret
test
inc
mov
cwtl
cmp
fdiv
nop
and
mov
mov
sub
cld
mov
test
aaa
dec
out
mov
adc
loop
mov
and
jns
jmp
xchg
cmp
cwtl
dec
ret
inc
mov
xor
add
push
push
or
add
push
in
shrl
sub
xor
dec
lods
lds
lods
push
sahf
pop
add
pop
sarl
xor
inc
outsl
aas
jns
mov
ss
out
outsl
leave
gs
in
adc
adc
push
out
sub
mov
in
jmp
jo
add
lcall
rolb
fiadds
leave
push
sbb
shll
das
loop
ljmp
inc
fimuls
das
and
js
sbb
and
mov
mov
pop
mov
and
add
in
dec
xor
push
pop
fsts
cltd
push
scas
xchg
jg
xor
das
push
dec
cmp
inc
ss
mov
dec
add
mov
add
lea
mov
popf
inc
in
dec
mov
ja
pop
stos
outsl
xchg
arpl
int3
scas
cwtl
adc
or
clc
je
push
or
push
and
out
mov
mov
mov
scas
push
lock
pop
jo
add
pcmpeqw
leave
out
mov
cltd
xor
testb
sbb
sub
cmp
pop
sub
mov
adcl
ljmp
das
push
js
add
jle
jecxz
jle
sub
test
ja
jl
in
pop
and
hlt
repz
add
mov
xchg
add
cmp
or
mov
pop
je
sub
jecxz
cmpsl
test
loopne
or
pushl
dec
aas
outsl
repz
mov
push
inc
fwait
or
mov
jecxz
ror
xchg
lds
mov
and
jp
inc
jne
mov
lahf
dec
cmc
mov
pop
sbb
and
mov
push
pop
dec
pop
adc
testb
pop
pop
cmpsl
in
jb
inc
fisttps
pop
insb
repz
imul
cmp
call
cmp
cwtl
pop
push
add
int3
aas
mov
mov
jbe
out
inc
dec
cld
jae
aaa
jne
mov
xor
pop
dec
xchg
cmp
dec
and
xor
gs
sbb
orb
or
aad
repnz
js
incb
mul
sahf
shrb
jp
lcall
add
sub
mov
inc
ret
dec
scas
stos
daa
ret
cmp
inc
rolb
jl
or
std
add
mov
mov
dec
push
inc
xorb
sub
adc
movsb
adc
je
je
test
xor
adc
adc
lock
cwtl
fsubrl
xchg
push
dec
les
or
mov
sahf
cli
clc
out
icebp
dec
repz
inc
mov
movb
jmp
cltd
fmull
pop
fwait
mov
fxam
xchg
scas
mov
jnp
inc
sub
push
sub
int
mov
add
aad
shrl
pop
addb
mov
shl
mov
sub
rolb
dec
out
add
mov
lret
and
lods
xchg
cld
push
mov
fstl
fildl
in
rcll
idivl
ljmp
cmpsl
jge
out
lcall
cltd
shrl
xor
push
xor
lret
jnp
stc
dec
xchg
adc
leave
pop
fucom
ljmp
sbb
dec
out
adc
ret
mov
daa
sub
dec
jbe
ret
sbb
out
inc
scas
xchg
or
mov
sbb
push
adc
or
andb
pop
dec
adc
xor
push
and
testl
xor
mov
icebp
gs
mov
sub
std
aam
mov
lds
dec
mov
into
add
and
cmp
out
je
inc
or
add
mov
outsb
sub
jne
fwait
int
cmc
and
cmpsl
gs
mulb
inc
push
jle
xor
roll
decl
xor
jae
test
xor
mov
mov
sub
hlt
out
mov
mov
cmpsl
in
scas
ja
adc
push
clc
push
push
inc
mov
data16
sbb
dec
adc
shl
sbbb
pop
mov
cmp
push
xchg
data16
push
adc
push
add
sbb
dec
jmp
or
lods
jge
sub
sbb
dec
inc
cmc
or
jb
lock
mov
push
mov
jp
mov
pop
ljmp
jo
arpl
push
or
mov
mov
mov
ficoml
es
cld
inc
sub
testb
pop
xchg
jle
inc
pop
test
in
cltd
enter
test
inc
inc
in
mov
mov
mov
iret
cltd
icebp
in
adc
xor
dec
je
pop
or
scas
mov
mov
cmpsl
cmpsb
cltd
shlb
in
sub
mov
add
ret
inc
push
jecxz
push
push
push
mov
pop
inc
int3
sbb
jae
pop
lds
mov
daa
scas
cli
push
push
xor
push
sub
xor
xchg
fistpll
xorb
das
test
shl
pop
jbe
jne
insb
data16
jns
dec
mov
xchg
lcall
mov
lahf
xor
ret
xchg
sub
xchg
mov
addr16
adc
lods
insb
sahf
loope
pop
in
or
call
stc
pop
push
inc
test
push
jge
iret
jno
movsb
or
fs
ljmp
popa
data16
xor
lock
xor
lahf
into
inc
popf
ljmp
mov
pushf
fwait
cmp
push
pop
insl
mov
loope
jmp
xchg
adc
dec
rcrl
out
mov
and
fs
outsb
ja
add
ret
push
dec
add
aad
dec
mov
out
fwait
in
test
dec
ficoml
into
pop
fcmovbe
movsl
mov
ret
call
mov
jo
scas
push
ds
cld
or
shufps
jb
jp
push
cmpsl
jb
lahf
in
insl
sub
ja
shll
subl
ret
scas
push
call
repz
mov
sti
test
push
or
fld
inc
push
push
xchg
insb
pop
and
lock
aaa
jmp
jae
cmp
adc
inc
push
fucomip
popf
flds
xchg
js
mov
ja
dec
es
push
insb
xchg
fdivrp
mov
into
pop
roll
cli
lods
cmp
cmp
xlat
cld
mov
notb
jp
aam
cmp
xor
push
mov
das
repz
test
sbb
inc
cltd
sti
pop
daa
xorl
xchg
lcall
mov
roll
xchg
sarb
pop
imul
aas
loope
int3
faddl
fidivs
xchg
ss
jns
inc
push
jecxz
out
int
pusha
or
clc
sbb
mov
mov
or
or
dec
xchg
mov
push
push
mov
jno
pop
cmp
mov
mov
dec
fcomps
xor
sbb
pop
sbb
orb
and
insb
mov
inc
ret
filds
jg
pop
fcoms
dec
in
cmpb
or
mov
in
cmc
mov
cwtl
pusha
fistpll
push
call
sarb
imul
pop
jnp
push
mov
test
fwait
sarl
aam
sbb
addr16
adc
adc
add
fwait
push
lret
fwait
mov
xor
dec
cltd
xor
lods
addr16
scas
cmp
jp
pop
mov
or
dec
rolb
pop
in
mov
cmp
js
lret
xchg
mov
cvtpi2ps
outsl
testb
nop
sbb
cld
xchg
mov
popf
in
aam
lret
xchg
xchg
mov
aas
loop
lds
add
addr16
xchg
mov
pusha
inc
popf
scas
push
mov
subl
add
push
inc
sbb
push
testb
add
scas
call
lods
cmp
cmp
or
rorb
roll
ret
ljmp
push
ror
mov
and
movsl
sbb
and
loop
pop
add
movb
fs
scas
dec
outsb
ss
mov
lret
mov
pop
pop
out
jae
fwait
add
daa
fisubs
cmp
stc
mov
out
imul
test
mov
sub
cli
jmp
cmp
cmpsb
jno
outsb
lret
mov
and
sahf
pop
pop
push
filds
jg
mov
xlat
jle
cmc
or
fldcw
xor
jae
jnp
and
fs
imul
pop
faddl
orps
loopne
or
mov
cmp
mov
adc
or
pop
jno
and
xchg
repnz
cmpsl
push
sbb
adc
je
ficoms
xor
jb
stc
dec
ds
repz
mov
lahf
idivl
mov
mov
scas
ficoml
push
les
dec
mov
outsl
push
or
jno
shlb
sub
mov
addr16
mov
scas
sbb
sbb
inc
jg
inc
into
pop
imul
adc
gs
addr16
add
loopne
ret
loopne
mov
sub
xchg
cli
jo
add
and
aam
push
adcl
imul
mov
dec
and
push
mov
repnz
ret
setno
scas
sbb
pop
ljmp
lret
hlt
dec
push
pextrw
pop
mov
clc
cltd
fidivl
dec
mov
mov
outsl
push
in
jle
push
push
andb
push
jae
push
inc
sbb
mov
cmp
sub
mov
cmc
popf
mov
jecxz
das
push
lret
xchg
loopne
mov
in
adc
out
mov
aas
cmp
mov
jo
pop
cmp
ja
dec
push
leave
pop
js
mov
and
outsb
xchg
xor
enter
mov
sub
test
rorb
push
outsl
xor
sahf
push
xchg
ja
mov
push
fdivr
inc
mov
cmpb
pop
sbb
xor
fs
bound
push
mov
das
insl
mov
ljmp
shrb
dec
xchg
gs
pop
adc
xor
loop
cmp
sbb
pushf
dec
jp
fadd
pop
and
push
leave
or
cmc
jnp
add
mov
fmul
mov
and
leave
into
dec
pop
and
cmp
pop
scas
mov
gs
idiv
adc
inc
mov
or
and
jp
dec
mov
subb
pop
inc
loopne
cmp
xchg
xor
inc
call
out
call
inc
and
lret
adc
mov
out
mov
rcrb
insl
lcall
repnz
sbb
cmpb
stos
test
push
sub
popf
adcb
push
jo
sub
dec
out
push
and
shl
loopw
inc
xlat
pop
xor
lret
or
into
mov
lods
xchg
ljmp
ss
repz
inc
in
test
ja
ret
mov
repz
or
mov
jno
lcall
cltd
int
mov
repnz
ror
sbb
cltd
ljmp
cmpsl
jbe
int3
sub
loopne
xchg
loop
hlt
adc
cmp
dec
je
scas
pop
cmp
jnp
pop
add
testl
in
out
xchg
jle
clc
out
push
pop
roll
in
es
mov
stos
cmp
or
push
sbb
mov
lods
cltd
pop
aam
jns
pop
test
fwait
jge
mov
loope
add
bound
es
pop
and
add
mov
lret
pusha
xchg
add
mov
popf
pop
rorb
out
lcall
pushf
lods
in
sub
or
pop
addb
jne
inc
mov
aas
ds
mov
mov
inc
add
mov
mov
xlat
inc
inc
jne
dec
popa
add
push
pop
push
fs
aad
push
daa
push
xor
mov
pushf
popf
inc
cs
jno
nop
pop
xor
adc
in
aas
sub
mov
mov
sti
cmp
mov
out
add
jno
inc
mov
mov
test
add
cli
mov
ret
lcall
cmp
test
lahf
jg
sub
fwait
xor
cli
aad
test
stos
adc
add
adc
in
frstor
les
mov
pop
daa
dec
xchg
loop
and
add
and
scas
add
testb
mov
sub
mov
lret
or
and
pop
fs
dec
sbb
sbb
jne
sbb
subb
lds
mov
mov
test
sbb
pusha
in
xchg
sub
stos
pop
call
movsb
test
mov
aad
mov
mov
mov
enter
push
scas
sub
xchg
sahf
cmp
push
js
sarl
jno
cmp
push
lcall
add
and
cmpb
inc
in
dec
jo
cmc
shlb
sbb
loopne
and
ds
aaa
adc
popa
jge
and
jl
mov
mov
daa
cmpsb
inc
aad
loope
jecxz
fcompl
int3
sbb
sub
push
mov
outsb
es
ror
pop
xchg
enter
mov
jns,pt
mov
ret
mov
xor
divl
mov
aad
cltd
mov
andl
xchg
cmp
lret
pop
and
rclb
jb
inc
adcb
mov
cld
shll
mov
bound
jg
cmp
fwait
or
rolb
fwait
xchg
stc
into
lds
into
xor
fldcw
decb
xchg
lahf
movb
pop
inc
xor
push
xor
jne
clc
jmp
mov
fildl
lret
roll
xchg
inc
cmpsl
pop
xchg
lret
xlat
pop
xor
fcoms
push
mov
or
hlt
push
inc
jnp
push
cmc
push
lcall
pop
ljmp
idivl
test
dec
sbb
test
cmpsl
cmp
jo
fwait
jnp
out
ret
call
push
lret
test
sbb
add
js
xchg
fadd
sti
clc
add
jp
aam
push
lret
or
stos
repnz
sbb
ret
xchg
xlat
adc
mov
adc
sahf
mov
xor
dec
les
ss
mov
dec
repz
fsubr
lret
mov
packsswb
jns
lock
xchg
jge
cmp
or
les
mov
movsb
fcom
insl
push
js
imul
hlt
add
lahf
aaa
sub
fstpt
ret
or
xor
mov
jne
icebp
dec
es
sbb
inc
pop
cs
sbb
adc
mov
pop
jo
xchg
popa
push
pop
cmp
jb
mov
call
ja
sub
mov
sub
dec
lods
push
xor
push
sbb
test
pop
sub
mov
lret
jp
adc
push
imul
scas
xchg
jns
mov
imul
and
outsb
dec
pushf
or
leave
mov
add
jnp
fidivrs
push
jnp
lahf
pushf
mov
hlt
cld
imul
inc
roll
xchg
lret
jae
mov
in
aas
xlat
outsl
jmp
jge
mov
jo
sub
mov
test
std
cmp
sbb
adc
in
jle
sub
jbe
int3
lret
mov
mov
sbb
repnz
aaa
xor
insl
pop
cmpsb
mov
mov
cmp
push
mov
fimuls
xchg
pop
cmp
xor
cmp
adc
mov
in
mov
jle
jb
mov
cld
cld
popf
jns
xchg
push
je
mov
adc
movsl
dec
push
xor
sub
jg
xor
clc
in
fucomip
mov
mov
xchg
push
sbb
inc
mulb
sbb
and
in
lcall
addr16
adc
inc
out
push
pop
jno
shrl
xlat
mov
fistl
ja
sub
fs
addr16
xlat
pushf
push
divb
aad
push
imul
cltd
inc
imul
lahf
sbb
dec
das
cmc
sub
mov
xchg
nop
xchg
es
ret
pop
lods
mov
das
adc
pop
fmuls
popf
addl
enter
fsubs
mov
mov
dec
cmpsl
xchg
out
daa
ret
icebp
mov
hlt
add
rcrl
jo
ret
in
sub
movl
cmpl
xlat
mov
fcomps
imul
rcll
inc
pop
add
mov
dec
push
aas
fmuls
popf
mov
jge,pn
sti
ljmp
jno
imul
or
sbb
push
cmovb
lock
xchg
and
std
aas
es
js
stos
sti
mov
add
pusha
mov
fildll
and
sbb
and
rcrl
ds
pop
rclb
ss
cltd
stos
cmpsb
ljmp
stos
gs
pusha
push
int3
mov
xchg
or
xor
inc
cmp
jnp
or
push
insb
test
xchg
fsts
dec
push
mov
pop
pop
and
fdiv
cmp
dec
xchg
add
cmpl
insb
cmpsl
push
test
iret
jl
mov
ljmp
mov
or
dec
add
mov
fcmovnbe
inc
ret
push
add
pop
xchg
add
ret
jo
push
and
jmp
mov
dec
je
rcrl
shl
dec
xor
mov
ljmp
test
jae
test
pop
and
lods
int3
data16
pushf
mov
iret
lods
aas
in
inc
aam
and
mov
imul
jl
aaa
std
mov
push
addr16
mov
mov
and
jbe
imul
js
xor
mov
mov
clc
push
xor
sub
call
cmp
add
sbbl
add
test
push
test
je
lods
and
sub
dec
std
test
test
inc
or
xchg
mov
stos
mov
cmpsb
fstpl
fisttpl
pmulhuw
cmp
sti
mov
sub
clc
jg
jl
pop
int3
cmpb
dec
fwait
movsb
pop
push
pop
fwait
or
outsl
pop
xchg
pop
mov
inc
jne
pop
int3
pop
pop
sub
loopne
and
call
mov
xor
mov
xor
pop
push
repz
jns
aaa
int
push
xchg
movl
aad
pop
lcall
inc
push
ds
scas
xor
push
enter
adc
sbb
xor
ret
mov
je
or
sbb
mov
js
push
cwtl
mov
xor
mov
fnstcw
lds
js
dec
xchg
jne
sub
out
push
je
or
stc
repnz
cmp
sub
cmp
mov
mov
mov
rolb
adc
and
mov
cld
inc
aad
in
cmp
enter
mov
test
mov
shr
js
cmpsb
xor
faddl
jno
data16
mov
xchg
xor
pop
leave
nopl
push
xchg
pop
movsb
inc
in
xor
insl
loop
repnz
out
lret
cmp
imul
adc
and
pop
pop
mov
lock
mov
mov
dec
adcl
xorb
lret
xlat
jb
mov
cli
repz
cli
sahf
dec
mov
outsl
test
scas
xchg
or
loope
and
cmp
out
pop
out
inc
fs
shrl
jb
mov
or
and
into
or
imul
test
jmp
adc
inc
xchg
sti
and
xchg
cmpsb
int
mov
mov
pop
iret
jle
push
jnp
mov
decl
xor
movsb
lock
loop
cmpsl
adc
cli
and
mov
dec
cwtl
andl
divb
cs
jge
cmp
dec
pop
arpl
outsl
mov
jnp
mov
pcmpgtw
fs
sbb
ss
cmp
inc
lret
dec
xchg
inc
sub
and
aad
and
mull
pop
xor
xor
dec
pop
daa
mov
or
scas
stos
push
pop
out
mov
pop
loopne
xor
adcl
push
add
push
mov
push
adc
bound
jno
mov
push
lds
pop
push
into
sbb
mov
sbb
sbb
xor
jbe
mov
pop
loope
xchg
lods
fisubl
leave
dec
fcompl
shlb
lods
popf
dec
push
fiadds
mov
js
lock
and
xchg
scas
pop
out
dec
xchg
dec
or
dec
jns
popf
clc
add
jge
sbb
mov
sbb
xchg
mov
fwait
pop
sbb
inc
push
adc
and
mov
pushf
push
stos
jmp
and
cwtl
adc
in
pop
mov
jbe
ss
jae
and
sub
xchg
cmc
and
mov
pop
jmp
cmp
mov
mov
bnd
std
ret
outsb
movnti
repz
aaa
mov
push
xor
clc
adc
adc
orb
roll
das
sbb
fisubrs
mov
pushl
rcll
mov
test
shll
dec
jb
adc
leave
sbb
mull
lods
mov
xchg
es
xor
fnstsw
stc
jl
jbe
scas
movsb
lea
jl
flds
add
lcall
fwait
sti
mov
out
and
push
mov
push
flds
push
inc
jns
push
jno
pop
hlt
test
push
fildl
sbb
dec
les
out
nop
sbb
add
test
sub
scas
dec
add
adc
addb
aaa
lret
xchg
movsl
fs
push
sub
ds
pop
int
pusha
sbb
push
aad
cmp
out
in
jmp
js
mov
sbb
negb
sub
and
jg
jmp
mov
fisubs
ret
andb
xor
add
icebp
into
rorl
add
je
jmp
loop
xchg
and
pop
cwtl
xchg
daa
xchg
inc
pop
or
jnp
adc
out
out
shr
divb
inc
arpl
inc
add
cmpsl
popa
inc
call
fildl
jle
dec
mov
xchg
or
test
dec
xor
pop
pop
stos
call
adc
dec
cld
rolb
adc
mov
aaa
mov
xlat
inc
sub
punpckhdq
add
pop
fsubl
or
stos
push
or
push
sub
in
xor
jl
pop
test
jno
mov
jg
or
arpl
lds
sbb
push
fucom
fistl
and
sub
pusha
cmp
sub
mov
das
icebp
xor
push
hlt
aad
stos
cmp
movsb
sti
movsb
and
jmp
adc
jle
mov
mov
mov
sarl
inc
mov
pusha
iret
lcall
aad
jg
out
cmp
cltd
out
shl
les
aam
xor
decl
mov
sbb
subl
fs
and
rcr
bound
cld
shll
cmp
std
cmp
mov
enter
or
test
inc
mov
cltd
pusha
sub
nop
loopne
jne
mov
jb
data16
cld
test
sbb
inc
fiaddl
sbb
data16
xor
mov
adc
insl
mov
icebp
fdivl
lret
aad
adcb
xchg
movsl
filds
and
loop
mov
lret
cmp
call
aaa
repnz
mov
movups
sahf
jne
cs
fmul
pop
sub
push
xchg
divl
jecxz
sub
adc
or
mov
mov
jno
cltd
outsl
test
add
push
insb
adc
mov
cmp
cmp
into
cmp
dec
fucomi
inc
adc
push
orl
pop
lahf
inc
das
cmp
xchg
cwtl
jmp
fwait
movsb
ss
aam
adc
es
mov
shll
add
sbb
dec
fisubrs
push
xchg
push
xchg
adc
and
adc
mov
xor
push
jns
lock
fisubl
inc
jns
and
inc
outsl
push
or
jmp
xor
icebp
sbb
mov
push
gs
std
out
loope
andb
fldl
das
or
test
sbbl
mov
mov
adc
orb
push
outsl
xor
dec
movsl
push
jmp
lods
pop
sarb
xor
sub
dec
daa
cmp
call
sbb
cmc
adc
leave
mov
test
test
jnp
enter
aas
js
loope
dec
lret
add
push
xchg
scas
mov
sub
shlb
push
sbb
xchg
scas
xchg
mov
call
mov
jg
fdivs
imul
jnp
sbb
adc
cmp
inc
andl
ljmp
xchg
push
cwtl
xchg
faddl
mov
push
sbb
mov
in
and
inc
jp
pushf
das
lea
mov
xlat
shl
and
lock
inc
lds
pop
pop
int3
push
mov
out
or
jl
dec
xchg
mov
xor
xchg
jno
enter
out
pop
sbb
xchg
xchg
cmp
aas
mov
add
sub
or
jo
mov
pop
pop
in
punpckldq
daa
aas
cwtl
xchg
pushf
dec
mov
pop
popf
jo
dec
loopne
iret
xchg
sbbl
bound
ret
sub
xchg
push
inc
scas
insl
adc
inc
inc
lea
fidivrs
add
out
mov
jne
sbb
or
jl
aas
addr16
xor
sbb
adc
sti
test
dec
je
imul
pop
pop
push
add
xlat
inc
dec
iret
or
fs
xchg
cmc
jle
push
mov
xchg
mov
jmp
in
jp
lret
mov
mov
addr16
lahf
pop
data16
inc
ds
idivb
stos
adc
sbb
pop
imul
ja
sbb
scas
xchg
adc
pop
push
xchg
adc
test
inc
adc
adc
shlb
ljmp
mov
or
pop
gs
dec
dec
cmpb
shr
not
xchg
cmpsb
scas
out
loope
xchg
and
out
leave
gs
sub
push
and
or
pop
movsb
pop
push
mov
add
addr16
test
mov
push
std
push
adc
scas
jno
rolb
shlb
add
xorb
jno
mov
in
cli
jge
mov
sub
pop
imul
mov
das
inc
or
cmp
inc
adc
out
jo
scas
imul
sub
and
ficomps
inc
dec
pop
int
cmp
fmul
in
inc
enter
icebp
xor
lret
es
aad
sbb
test
dec
pop
pop
add
shll
inc
or
movsb
adc
cmp
jnp
sarl
and
rorl
jae
std
fmulp
in
mov
fsubl
iret
lret
lret
jg
add
repnz
cmpsl
addr16
movsl
pop
test
dec
xor
push
nop
adc
cwtl
jge
jb
popa
adc
adc
insb
mov
fisttps
mov
addr16
adc
xchg
repz
or
push
loope
xchg
bound
add
sarl
jbe
cld
aad
mov
rol
sbb
lods
je
mov
push
and
sub
shll
dec
shrb
fildl
pop
xchg
jl
jge
xor
xchg
xor
aas
lret
rorl
fstps
arpl
inc
outsb
xor
cmp
out
dec
mov
ljmp
mov
stos
jne
mov
push
xor
pop
sar
mov
cli
mov
dec
or
cmpxchg
xchg
and
xor
cmp
sahf
jb
fidivl
loope
sti
or
or
push
pop
cs
test
jo
sarb
mov
cmpsb
aad
pop
in
cltd
cmp
push
mov
in
push
adc
push
or
je
outsb
clc
mov
test
xor
mov
outsl
or
mov
imul
and
dec
enter
inc
adc
sahf
sbb
test
xchg
cmpb
push
push
dec
mov
dec
push
jle
inc
inc
fldt
cld
adc
nop
scas
mov
fcmovbe
inc
rcll
pushf
xor
xor
jp
adcb
stos
or
mov
fs
daa
push
mov
sbb
jge
inc
mov
jae
sub
xor
sti
leave
inc
aaa
cmp
and
push
aas
cmp
xor
ret
clc
or
mov
sahf
cmp
xchg
mov
mov
test
add
push
sub
push
std
lds
ret
or
in
cmp
ja
xchg
push
cmp
fmull
mov
add
loope
or
je
lcall
sti
ffree
jmp
cmp
fiaddl
idiv
sub
sbb
and
sarb
inc
test
lods
xchg
arpl
idivb
sahf
arpl
jl
cmc
sub
shlw
dec
dec
cmc
mov
fisttpl
push
popf
jbe
cmpb
cmp
inc
sub
xor
cmp
mov
mov
inc
inc
jle
mov
in
add
pop
mov
lock
mov
dec
xchg
sbb
fwait
outsb
pminub
es
imul
stos
pop
idivl
jge
out
pop
sbb
daa
mov
lcall
iret
fdiv
dec
pop
cmc
xor
jo
add
nop
nop
mov
adc
incl
mov
mov
lcall
aam
push
jmp
fsubl
ja
test
dec
pop
sub
jp
ja
and
mov
fistl
fucomip
push
aam
mov
cmp
cvtpi2ps
fnstsw
rclb
and
mov
xchg
cmp
lret
pop
xchg
mov
mov
and
dec
mov
int3
push
pop
pop
sbb
leave
mov
xor
push
xor
stos
pop
dec
add
gs
push
lea
loopne
xchg
cltd
fwait
call
mov
je
fisubl
fdivp
clc
mov
out
dec
sbbl
shrb
push
mov
fbstp
cld
jno
cltd
push
fdivl
out
movsl
cmp
dec
dec
movsl
mov
jl
dec
into
es
push
pop
xchg
popa
mov
dec
jno
adc
jns
inc
push
pop
lea
sub
data16
jnp
mov
pop
int3
mov
test
loope
push
rol
mov
or
mov
sub
dec
data16
xor
dec
add
xchg
inc
jmp
cli
jl
jle
inc
aas
dec
loop
ja
sub
fwait
rcrl
push
out
lret
sbb
cmpsl
sub
add
pop
lods
out
cmpsl
lahf
fsubs
movsb
xor
dec
addr16
sbb
jmp
cmp
pop
cmp
mov
inc
sahf
jb
jae
xchg
andb
pop
addb
out
jge
push
mov
inc
lahf
popf
cmp
aam
and
jno
xor
stc
or
and
clc
lcall
mov
jg
test
call
fdivs
jp
test
enter
sub
dec
cltd
andl
sbb
enter
popa
repnz
rclb
pop
outsb
in
pushf
mov
pop
mov
xor
pushf
adc
and
adc
adc
addl
sahf
inc
sbb
sbb
sbb
insb
lret
in
cld
andnps
pusha
add
int
ret
arpl
std
jmp
sbb
mov
sbb
repz
out
ja
stos
mov
jns
jmp
scas
sbb
movsb
mov
xor
loop
movsb
ja
sub
mov
scas
stos
pushf
outsb
cmp
push
je
in
adc
xor
jb
addl
rol
dec
jl
xchg
cld
loopne
adc
movsb
jge
jecxz
jmp
fs
test
inc
jl
repnz
jl
fwait
pop
nop
and
push
or
push
mov
decl
push
mov
gs
sbb
subl
fdivrs
lretw
mov
lahf
fstps
mov
push
push
movsl
mov
ret
sub
cli
xchg
rcrb
xchg
sbb
sbb
daa
outsb
mov
add
mov
aam
out
movsl
ja
popa
insb
sbb
inc
mov
mov
mov
jae
jmp
test
leave
add
jecxz
call
nop
daa
in
adc
pop
push
outsb
ficompl
fbstp
inc
out
fcoml
pop
lcall
rolb
adc
xchg
adc
inc
jno
js
test
movsl
xlat
mov
leave
dec
xchg
cwtl
sub
enter
or
add
jne
cs
add
or
vmulsd
imul
mov
ret
pusha
sub
jg
xorb
sub
test
cmp
insb
loop
sahf
jb
std
cmpsl
popf
and
lcall
dec
js
dec
in
fidivrs
shrb
dec
inc
pop
aaa
sbb
std
dec
cmc
icebp
sub
cs
push
hlt
push
test
sbb
xchg
mov
push
pop
test
cmp
movsb
sub
sub
mov
sub
mov
stos
jns
dec
inc
out
lahf
mov
inc
je
addl
shll
sbb
in
shll
pop
sub
xor
adc
inc
sbbl
js
dec
cmp
push
mov
jg
mov
bound
adc
andb
inc
loop
mov
jmp
mov
jbe
jne
test
hlt
mov
data16
dec
inc
fwait
pop
stc
xlat
add
inc
das
imul
sbb
mov
notl
pop
jge
add
rol
jb
add
pop
mov
jb
hlt
movsl
push
mov
dec
xor
fistpl
sti
fsubrs
fsubrs
popa
scas
jns
icebp
mov
xchg
jecxz
pop
adc
nop
inc
js
inc
mov
add
add
sbb
loop
pop
addl
adc
lret
xorb
xor
or
repz
push
fidivs
adc
mov
stos
pop
repz
pop
shrb
fwait
adc
xchg
mov
mov
sbb
jne
je
xor
pop
add
bound
hlt
mov
popa
rolb
inc
rcll
xchg
call
call
jle
mov
into
mov
xor
dec
dec
xchg
mov
push
mov
push
scas
int
inc
xchg
sbb
outsl
fisttpll
pop
or
insl
xor
inc
imul
mov
call
rcr
inc
xchg
mov
adc
or
push
dec
test
loopne
jo
push
bound
mov
stc
cltd
outsl
aaa
test
jbe
orl
cmp
jb
lods
add
dec
cld
in
int3
inc
xchg
fisttps
test
fldenv
ja
jnp
adc
pop
dec
and
jmp
xchg
imul
sub
stos
shr
addb
pop
insb
sbb
scas
xchg
add
mov
push
in
mov
dec
mov
insl
xchg
sub
mov
jae
and
jge
out
xchg
inc
pop
mov
xlat
mov
push
iret
xor
jns
lods
stos
in
ret
push
inc
aaa
repnz
cli
sub
daa
das
dec
test
out
aad
clc
repz
je
inc
ljmp
int
mov
aaa
xchg
jne
and
sub
jae
int
add
and
stc
mov
jbe
and
mov
clc
mov
rorl
sbbb
cltd
xor
dec
out
clc
cmp
fld
adc
dec
pop
hlt
popa
movsb
and
cmp
imul
adcb
add
packuswb
dec
lock
sub
sbb
pop
jae
sub
insb
in
sub
clc
inc
xor
xor
jno
sub
in
ljmp
cmp
cli
push
or
repz
dec
test
sbb
jg
iret
out
add
jp
les
mov
cltd
cmpsl
lret
rclb
or
ja
sti
mov
pop
movsb
dec
mov
cmp
pop
fidivs
movsb
push
mov
mov
fnstenv
and
data16
int
cmc
sub
dec
cld
pop
clc
mov
hlt
daa
xchg
ret
stos
dec
jnp
repz
call
movl
jb
dec
ret
sub
outsb
add
adc
add
push
enter
loope
mov
aad
adc
push
mov
fdivl
mov
cmpsl
adc
aaa
xchg
push
fwait
in
inc
or
test
stc
iret
data16
sbb
fistl
sub
inc
sbb
vpshufhw
jecxz
add
insl
cmpsl
jmp
xor
mov
out
loope
sbb
pushf
cmp
ds
out
cs
dec
adc
add
iret
hlt
pop
loope
or
xchg
enter
in
enter
jp
pushf
sti
into
or
xchg
mov
xor
ljmp
cwtl
mov
rolb
dec
cmp
and
xor
sbbb
pop
xlat
xor
xchg
inc
sub
imul
clc
scas
lahf
stos
outsl
sub
arpl
push
push
pusha
movsl
inc
mov
cmpsb
fistl
test
mov
std
cmp
dec
inc
cmp
pop
jp
sub
dec
mov
call
imul
pushf
or
lahf
into
loope
ss
fs
std
jle
dec
fdivs
jl
cmp
cmpsl
jbe
xor
icebp
daa
or
inc
movsl
sub
mov
out
stos
or
inc
int3
repnz
sub
xchg
cli
mov
daa
fdivs
fmull
lds
popf
in
std
dec
test
cs
jge
imul
mov
mov
or
xor
idiv
push
xchg
xchg
movsb
xchg
jecxz
push
js
test
dec
or
pop
lock
je
sub
lret
out
sarl
ret
mov
divb
adc
outsl
jle
adc
popa
and
addr16
adc
mov
dec
subb
inc
lods
adc
ss
sti
movsl
js
lods
adc
in
ret
sub
imul
mov
push
in
adc
aam
push
jnp
js
adc
aad
push
shrl
mov
aas
scas
xchg
xor
mov
xor
jns
aad
add
ljmp
and
jne
mov
dec
sbb
sub
sahf
popa
test
stc
ret
xchg
xlat
les
sub
xor
in
cmp
fiadds
mov
rorb
jmp
mov
es
pop
push
fwait
mov
add
fs
mov
movsl
inc
jecxz
mov
in
inc
dec
lret
outsl
fwait
pop
inc
aas
adc
xorl
shll
mov
mov
or
xchg
mov
xor
xor
fadd
mov
cmp
sbb
sar
and
dec
push
cmp
jae
xchg
dec
lods
add
test
sub
or
dec
pop
test
imulb
xchg
or
xor
jno
das
fldt
or
cmp
mov
jge
inc
sub
inc
test
adc
or
or
cmp
cmp
outsl
inc
sbb
movsl
xchg
sbb
scas
frstor
jge
paddsb
or
sub
adc
inc
xor
rol
dec
xchg
push
push
addr16
xchg
mov
imul
ficompl
sti
ja
mov
jns
cmpl
mov
outsb
int
xchg
call
cs
fimuls
jge
ds
mov
testl
insb
sbb
bound
jmp
rolb
push
dec
stc
aam
mov
cwtl
sarl
bound
add
mov
cmp
insb
dec
cmp
aaa
test
push
fdivrs
loope
adc
es
sbb
sbb
aaa
ss
call
loop
mov
adc
push
fninit
adc
cs
xlat
inc
hlt
call
jl
xor
call
push
mov
loope
cmp
je
mov
fistpl
cmpxchg
faddl
sbbb
fildll
lcall
int
ja
test
loope
bound
sarl
popl
inc
jae
ret
mov
mov
or
mov
mov
mov
mov
scas
insb
div
stos
xchg
inc
movsl
lds
xchg
mov
imul
adc
ds
dec
lret
adc
in
mov
adc
xor
or
adc
mov
and
inc
push
mov
out
jmp
mov
push
scas
cmp
and
test
arpl
mov
rorl
cmpsb
inc
cld
mov
sarb
pushl
jp
ret
xor
pop
cmp
xchg
sbb
je
fisubs
sbb
mov
enter
movsb
mov
cltd
sbbl
push
and
xor
fiadds
pop
jne
idivl
xchg
aam
shr
push
movsb
xor
dec
and
stos
shll
xchg
jmp
gs
mov
cmp
jmp
loope
pushf
popf
sbb
orl
cwtl
add
pop
sbb
xchg
adc
mov
out
push
mov
in
stos
and
lret
mov
ja
mov
add
ret
fdivrl
clc
jmp
jp
stos
or
xor
andl
out
pop
xchg
and
in
mov
cmp
push
addl
dec
and
and
mov
repnz
xchg
loop
and
ret
sbb
andb
mov
loope
mov
imul
pop
repnz
stc
pusha
or
xchg
and
mov
lods
ret
and
xchg
roll
mov
mov
call
pop
addl
mov
push
movsl
dec
int
es
fwait
aam
jg
or
iret
pop
mov
insl
xchg
mov
sbb
pop
fldcw
sbb
add
lea
ds
js
cmp
push
jl
dec
mov
inc
repnz
stos
mov
ret
xlat
adc
fmuls
xchg
mov
mov
mov
pop
ficompl
adc
dec
imul
dec
iret
and
dec
js
cld
out
pop
sbb
cmp
cld
push
pop
lcall
decl
inc
dec
push
sbb
lods
sbb
push
cmp
and
sbb
push
scas
lret
into
sub
test
xchg
xor
lods
push
pop
push
out
lret
pop
aas
adc
stc
popf
xchg
test
icebp
xchg
xor
dec
adc
add
mov
or
push
clc
in
xor
mov
add
xor
adc
outsl
fucomp
add
in
dec
int
repnz
adc
out
jns
cmp
cmpl
and
cmp
rcll
ret
mov
lods
adc
push
mov
inc
mov
cld
cmp
mov
xor
xchg
sahf
mov
ja
jnp
in
sbbl
inc
cmp
add
in
fstp
and
shlb
push
cs
imul
inc
outsl
mov
xor
jns
jnp
stos
aad
push
xchg
bound
or
lret
push
lcall
stos
dec
in
iret
scas
gs
dec
cmp
fwait
out
sbbb
mov
jae
movsl
daa
arpl
into
dec
add
fsubrp
mov
cmp
dec
or
and
popa
jp
in
sbb
fistpll
xor
cmc
ror
into
add
aaa
stos
push
cld
adc
fildll
scas
cltd
testl
mov
stos
imull
adc
jmp
shlb
fstps
push
add
xor
mov
cld
jno
aam
push
adc
cmp
loopne
mov
mov
cmpsl
sbb
cltd
clc
mov
outsb
pop
xchg
cmp
xlat
or
cld
push
or
loop
scas
bound
pop
cld
push
xor
pusha
adc
scas
stos
pop
sub
ja
orl
insb
mov
push
add
adc
mov
jno
dec
loopne
push
inc
xchg
and
ret
cmp
movsb
popa
xlat
mov
in
jno
dec
lret
pop
adc
pusha
nop
iret
cmp
push
aam
sub
repnz
xor
jns
sbb
sub
call
movl
xor
jns
pushf
dec
out
sbb
imul
outsl
pop
jg
sbb
jno
call
shrb
inc
mov
inc
pop
adc
stos
icebp
dec
scas
rcl
push
push
mov
lahf
add
stos
cwtl
pop
scas
jbe
inc
and
sbb
pop
jb
mov
push
leave
xchg
daa
das
mov
sub
inc
sub
jbe
and
lods
pop
subl
push
mov
fcomps
test
adc
xlat
test
cmp
dec
add
aaa
xchg
add
outsb
stos
iret
mov
pop
int3
push
pusha
inc
and
mov
jle
inc
lcall
out
sbb
mov
jmp
outsb
mov
mov
dec
mov
stc
cmp
cltd
out
lret
ljmp
imul
xor
in
and
adc
lcall
jno
test
mull
fisttpll
xor
stc
sahf
js
jb
mov
gs
orb
cld
in
mov
push
mov
rolb
dec
sub
pop
icebp
cmp
xchg
xor
push
out
mov
mov
push
insl
dec
test
mov
dec
ss
mov
lret
pop
and
add
pop
movsb
mov
mov
pop
push
jno
inc
das
andb
push
fs
mov
arpl
pushf
dec
pop
sub
and
fsub
stos
mov
scas
rcr
outsb
inc
inc
push
pop
pop
push
arpl
cld
lods
jno
stos
ljmp
push
test
push
adc
fdivp
xchg
in
mov
mov
ret
in
mov
fldt
out
mov
adc
and
jo
add
push
and
sub
movb
scas
xchg
dec
mov
dec
dec
sub
mov
insl
push
cmove
jmp
bnd
sbb
pop
fcomi
mov
jecxz
jp
or
scas
jmp
or
push
jmp
mov
push
movl
push
xchg
add
jae,pn
and
addr16
scas
push
jmp
ret
push
push
pop
xchg
or
mov
or
adc
fdivrl
test
jle
jns
fidivs
pop
cmpsl
mov
add
mov
and
push
sbb
jmp
xchg
ret
mov
je
jp
dec
lock
insb
push
pop
out
dec
add
xchg
dec
fadds
rolb
repz
fistps
loopne
hlt
bound
add
jg
out
sarb
push
bound
jmp
pop
lods
es
push
out
lret
jb
and
ds
or
nop
xor
jle
mov
hlt
xchg
and
shll
lea
in
mov
mov
cli
jl
pop
inc
jo
mov
sbb
rorb
loop
inc
sahf
push
mov
xchg
in
data16
sahf
insl
fcoms
adc
mov
jle
push
mov
data16
pop
stc
inc
ss
and
mov
outsb
stos
dec
push
mov
pop
mov
add
adc
fs
jmp
ja
mov
mov
xchg
stos
or
fldcw
push
out
enter
mov
mov
popf
and
and
outsl
mov
cmp
cmp
fxch
pop
xchg
pop
loopne
repz
jmp
sbb
movsb
mov
cwtl
mov
fs
xor
arpl
and
int
roll
test
inc
fsubl
cmp
xor
xor
jno
fstpl
es
das
push
push
jl
add
pop
add
and
aas
inc
pop
mov
dec
pusha
cmp
ret
jns
add
mov
bound
outsb
jle
sbb
pop
rorl
cmp
stc
sub
pop
icebp
add
es
dec
mov
jae
dec
bound
mov
orl
jle
pop
cmpsb
xchg
mov
in
jecxz
je
sbb
sbb
xchg
sbbl
xchg
fisubrs
xchg
mov
fdivs
pop
xor
mov
not
lahf
xchg
dec
and
fwait
mov
push
pop
mov
mov
jnp
cmp
out
inc
sbb
mov
lcall
loop
cmp
pop
jl
cmpsb
or
pop
clc
cltd
int3
cmp
sbb
cli
movsl
sbb
movsl
cld
movsb
add
add
sti
xlat
add
insl
dec
bnd
dec
sbb
fisubl
rol
dec
mov
xor
sbb
stos
or
mov
jge
jg
fdivrs
sub
xchg
das
jne
push
push
cmp
sahf
and
sbb
mov
xchg
push
or
jb
cltd
andb
movsl
and
fs
cmp
jb
outsl
mov
loopne
insl
call
pop
add
loop
dec
out
inc
in
mov
pop
and
inc
mov
fisttps
mov
test
and
call
mov
loop
sbb
movsl
or
or
data16
jnp
std
fwait
leave
and
inc
jnp
rorl
loope
ret
mov
mov
or
xchg
gs
je
mov
cmp
repz
add
xor
and
mov
test
push
cmp
jmp
inc
push
xchg
insl
test
mov
popa
out
pop
loop
jmp
insb
arpl
dec
mov
xchg
adc
int
pop
xor
xor
lods
cmp
push
xchg
mov
xor
jno
inc
into
enter
ret
pop
mov
stos
xchg
dec
sarb
mov
daa
adcb
out
outsl
and
pop
push
push
or
js
ss
jo
add
pop
lahf
fldl
sbb
add
je
cmp
add
inc
cmpsb
inc
push
or
lret
inc
dec
out
stc
movsb
xor
rclb
xchg
push
xchg
dec
inc
mov
cmp
idiv
sub
loopne
push
test
in
fildl
xchg
cmpsl
pop
imul
dec
mov
fcmovne
sbb
xchg
mov
mov
cmpsb
mov
out
cmp
and
out
mov
fdivrs
mov
cld
and
jo
incb
mov
nop
xlat
in
les
xchg
cmp
ds
adc
mov
rolb
fwait
push
mov
stos
enter
xchg
cmpl
adc
sub
inc
mov
aad
outsl
rclb
mov
mov
movsl
mov
mov
ja
jb
mov
sahf
and
int3
popf
int3
js
sub
adcl
sbb
jle
dec
je
mov
enter
fs
and
sub
cmpsl
sub
fsubl
xor
in
test
mov
xor
std
insl
xchg
mov
mov
add
xchg
and
push
or
mov
mov
aas
xor
jo
push
sub
or
push
or
jp
divl
cmc
and
push
xor
jbe
test
and
pop
les
das
test
cltd
enter
dec
aaa
cmp
ret
cltd
test
mov
mov
pop
std
cmp
xchg
mov
inc
sbb
ljmp
xlat
add
fwait
dec
and
scas
outsb
js
inc
fmulp
dec
lret
push
cmp
popa
jmp
mov
test
and
cmp
cmp
leave
mov
or
fisubs
pop
jne
mov
mov
fisubrs
or
jge
or
in
cld
sub
lds
pop
repz
hlt
dec
xchg
aas
dec
sub
jle
rorb
mov
pop
outsb
test
nop
js
dec
inc
inc
jecxz
push
push
sar
jle
push
rcr
iret
decl
loop
je
xchg
ficompl
xor
movsb
aad
stc
dec
bound
mov
aas
test
mov
jnp
pop
fnstcw
in
repz
out
int3
mov
and
xchg
and
mov
lret
or
xorb
dec
pop
push
rcll
and
ror
xor
out
lcall
lahf
imul
pop
cltd
and
push
jle
inc
cmpsb
mov
ror
aad
cmp
fs
arpl
test
jl
dec
rol
loopne
ficoml
dec
mov
xchg
test
and
test
lds
gs
sub
or
inc
out
rorb
ret
repnz
mov
sub
sub
popa
dec
das
add
inc
adc
mov
loope
lahf
cs
rolb
push
notl
mov
sti
mov
mov
jmp
cmp
sti
cmp
cltd
cmp
or
sbb
mov
jg
stc
push
xlat
int3
test
xchg
pusha
fdivl
jmp
and
leave
fs
stc
jno
jmp
mov
mov
add
mov
fstpt
jae
into
in
lea
xchg
adc
mov
arpl
pop
push
test
cmp
xchg
xor
pop
lahf
mov
gs
adc
mov
inc
adc
inc
push
cwtl
inc
aaa
push
das
fcos
cmpsb
cmp
push
push
mov
xor
push
add
push
sbb
inc
xchg
filds
ret
dec
rolb
test
lret
clc
adc
or
imul
addr16
cli
jae
loope
aam
rolb
callw
or
aas
jmp
xchg
arpl
js
daa
les
mov
outsb
in
mul
xchg
cwtl
mov
or
rorb
jle
sbb
xchg
hlt
movsl
jo
lcall
in
inc
mov
and
cltd
or
pop
adcl
inc
dec
add
inc
popa
std
pop
mov
adc
test
xor
out
mov
in
loop
sbb
inc
rcll
sbb
fs
aas
out
jne
mov
mov
ljmp
in
mov
mov
lret
enter
jecxz
test
shrb
xchg
rorb
mov
and
xlat
mov
mov
xchg
stos
imul
inc
jp
enter
pushf
ljmp
or
aam
xor
fstpl
xor
inc
stos
jle
imul
call
pop
jbe
jb
or
pop
push
xchg
dec
mov
or
notl
popa
in
sub
jg
rcr
sbbl
sbb
sub
mov
xchg
xor
int
jle
mov
imul
or
ss
cli
mov
dec
or
adc
dec
mov
movsb
inc
adc
xchg
sti
push
int3
sub
call
movups
sbbl
xor
daa
fisubl
xchg
push
subl
or
rorl
mov
jae
mov
and
jecxz
in
mov
mov
xchg
movsb
xchg
imul
sub
imul
push
cli
cmp
imul
out
or
das
sahf
aaa
xchg
push
push
add
mov
push
imul
push
or
dec
pop
mov
cwtl
std
sbb
sarl
xchg
inc
jle
push
add
xor
xchg
inc
loopne
pop
mov
out
sub
cmp
lea
andb
jne
shrl
pop
test
in
repnz
arpl
int
or
mov
cli
mov
mov
in
mov
iret
add
xor
stc
inc
mov
dec
mov
xorb
sbb
mov
mov
add
add
mov
flds
int3
inc
push
or
adc
xchg
sbb
jns
pop
adcb
fdivrl
cmp
aaa
je
ret
bound
jns
cltd
xor
into
in
outsl
xchg
mov
fwait
xchg
mov
inc
cmpsl
xor
divb
cmp
pop
nop
test
or
lret
sbb
lods
shlb
sbb
gs
popf
inc
mov
imul
and
ja
ja
shrl
sub
in
js
es
ss
mov
daa
mov
cwtl
cmp
xchg
fiaddl
mov
inc
rclb
mov
jmp
fsubrs
popf
cmp
jl
inc
jo
dec
loop
into
or
lock
add
push
insl
jbe
in
or
and
push
adcb
and
xor
dec
mull
pop
push
or
shlb
cwtl
mov
push
imul
pop
clc
aam
add
imul
mov
jno
pushf
jecxz
inc
mov
das
jl
call
mov
push
fwait
clc
outsl
fcomps
cmpsb
mov
adc
aas
push
jb
cwtl
imul
jb
sbb
in
mov
jne
pop
test
push
std
stos
dec
sbb
pop
pop
lret
test
leave
xor
sub
push
and
enter
push
push
or
cmpsb
les
es
aas
lds
add
aam
xor
pop
adc
outsl
pop
xchg
sti
data16
arpl
adc
ljmp
out
xchg
into
mov
fldl
fwait
sub
pop
sub
jne
fcoms
cmc
les
lret
pop
jmp
cmp
push
pop
fisttpl
repnz
xchg
jae
imul
daa
mov
loop
inc
icebp
sti
jle
mov
inc
cwtl
in
popa
pop
or
push
loope
mov
stc
xor
push
aam
incl
mov
lods
out
cwtl
aas
mov
mov
jb
push
addr16
std
sbb
pop
inc
xchg
add
inc
dec
movsl
ds
push
leave
xchg
sbb
jne
sbb
mov
sti
mov
lods
fsub
pop
sub
decb
jcxz
ds
lds
popa
adc
push
cs
cld
or
mov
sbb
divl
mov
pop
sub
add
xor
add
js
roll
ljmp
inc
jl
mov
dec
arpl
sarl
icebp
aad
sbb
inc
sub
lds
and
push
stos
inc
jns
shll
arpl
popa
outsb
xchg
cmp
sbb
mov
subb
ljmp
sub
mov
push
shrl
jno
sahf
jmp
test
jae
insb
daa
movsww
data16
arpl
jmp
or
dec
pop
int3
cmp
insl
dec
add
fcompl
scas
sub
push
out
xlat
lea
cmc
mov
adc
xchg
xor
cmc
hlt
loope
mov
jo
mov
cltd
sbb
sub
mov
pop
dec
jb
pop
fiadds
jmp
xlat
jl
int
dec
inc
cmpsb
out
lods
and
repz
jp
pop
addr16
insb
inc
in
shl
out
fimuls
mov
jl
add
fwait
mov
sti
mov
fists
lret
lret
int
int3
adc
inc
xlat
pop
mov
mov
jb
vrsqrtss
enter
sbb
push
pop
push
aaa
cmp
bound
mov
imul
and
or
add
lret
sbb
shrb
jnp
add
rclb
fwait
jns
int3
nop
push
test
lods
jmp
ficoml
cmpsl
outsl
push
ja
insl
jmp
ret
int3
stos
out
js
dec
cmpsl
jmp
int
jo
pop
mov
stc
push
insl
mov
jp
test
fwait
or
addr16
add
mov
and
jno
xchg
cli
fcomi
cmpsl
inc
push
insb
dec
lret
mov
inc
mov
pushf
jb
cmp
xor
jp
sbb
outsl
pop
mov
stos
sbb
adc
ds
adc
adc
arpl
sub
inc
aas
pushf
dec
lret
in
mov
enter
xor
popa
fistpl
inc
inc
xchg
xchg
bound
hlt
insl
push
leave
fwait
and
ljmp
push
test
test
jno
leave
scas
mov
aam
mov
sub
push
imul
out
test
ret
fsubrs
lea
xchg
pop
mov
fdiv
jl
or
inc
jbe
mov
pop
fiadds
fbstp
rcrb
mov
sbb
out
sti
mov
and
dec
rclb
lahf
ret
adc
ret
mov
inc
ss
lea
jp
xor
inc
mov
ret
push
push
mov
xchg
test
xor
mov
sar
mov
cmp
sbb
nop
dec
mov
icebp
mov
stos
fdiv
cmp
insb
mov
pop
mov
into
push
repz
js
and
mov
inc
leave
scas
pop
lods
mov
adc
inc
add
fs
or
call
push
imul
mov
rolb
leave
and
sbb
std
mov
popa
mov
fdivrl
sbb
push
or
sar
mov
das
insl
mov
and
mov
test
enter
cmp
movsb
mov
cmc
inc
xlat
mov
push
insl
xor
xchg
fs
mov
lret
mov
inc
or
sub
jne
ficoms
jge
push
call
cmp
into
jo
jb
push
scas
pop
xlat
jb
in
xor
loope
xorl
inc
mov
jne
jae
out
loopnew
sub
out
push
ss
mov
scas
mov
rorl
inc
pusha
xlat
inc
clc
mov
sub
inc
push
arpl
xor
inc
adc
fldt
ss
cmp
es
stos
fmul
leave
adcb
dec
les
add
loop
lret
xchg
mov
fadd
pop
pop
push
and
add
jb
sarb
adc
and
xor
xchg
jns
push
pushf
adc
enter
lds
aad
mov
sub
hlt
out
test
js
add
mov
jne
and
push
int3
lret
dec
jecxz
lahf
mov
or
out
dec
xchg
repnz
test
cltd
outsb
lret
ljmp
pop
popf
shlb
mov
loope
or
sarb
cmp
fcomip
scas
data16
fsts
ds
lock
sub
js
inc
inc
pop
aad
cmpsl
xor
outsb
xchg
xor
xor
fxch
scas
imul
inc
cli
cmp
push
jle
scas
outsb
push
xor
mov
sub
leave
mov
and
xchg
xor
adc
or
mov
pop
cmp
mov
pop
inc
rol
jle
das
jle
bound
push
ror
dec
mov
sbb
push
addr16
rorl
add
lods
xor
jl
pop
scas
jnp
and
sub
in
stos
mov
jg
mov
cs
mov
cld
add
rcrb
outsb
rcrb
fimuls
aad
jne
arpl
push
push
adc
jno
into
out
fsubl
idivb
loope
push
jnp
mov
cld
imul
out
and
cld
ret
push
ss
inc
or
pop
lret
xchg
add
jnp
pop
out
dec
fprem1
in
vpcmpeqb
pop
dec
ret
stc
cmp
and
popa
das
xor
or
inc
outsb
push
sbb
fsubr
arpl
lret
pop
cmp
jl
dec
imul
push
push
inc
pop
mov
xchg
stos
push
sbb
inc
outsl
dec
lds
mov
out
mov
push
ss
push
stc
or
inc
push
lcall
mov
jbe
xor
icebp
mov
adc
pop
adcl
subl
std
lret
push
pop
pop
mov
arpl
push
and
ljmp
cmp
fldl
mov
ret
mov
les
mov
sbb
cld
testb
lret
add
push
dec
xor
push
dec
in
dec
pop
addr16
inc
jg
jp
dec
js
jle
ret
insl
add
xchg
jmp
dec
mov
nop
push
aam
inc
inc
js
pop
insb
into
and
cmpsl
bound
iret
aaa
mov
rolb
mov
or
and
inc
dec
iret
ds
cli
pop
in
sti
in
mov
fxch
stos
fwait
push
cmp
lods
mov
adc
loop
and
loop
xchg
mov
daa
test
out
dec
xor
xadd
nop
scas
ret
cmp
test
push
lcall
mov
sbb
mov
mov
mov
add
push
jnp
aad
or
cmpb
jae
leave
jmp
xorb
gs
lret
test
ret
ljmp
clc
jb
pop
stc
js
xchg
lds
lods
popa
cld
lds
call
cmp
mov
xor
mov
stos
jle
aam
jmp
push
cwtl
outsb
popf
arpl
cwtl
dec
xchg
jnp
push
jp
mov
jl
jnp
pop
stos
fs
in
inc
xchg
gs
movsl
or
mov
divl
ret
imul
jno
mov
and
idivl
pop
test
push
pushf
or
icebp
ja
dec
cmp
lcall
aaa
andb
push
adc
clc
pop
mov
lret
adc
dec
jbe
fcoml
lret
sub
sub
and
test
out
jns
mov
fadds
sbb
ret
or
pusha
stos
lock
mov
adc
loopne
or
ss
or
jb
dec
ret
rcrl
sub
in
fs
sbb
lock
out
mov
fchs
leave
out
mov
mov
jp
pusha
push
jnp,pt
mov
ficoml
jns
fsubl
mov
mov
clc
cmp
bound
movsl
jle
push
dec
ret
or
push
roll
mov
sbb
negl
nop
push
hlt
add
fldt
shll
mov
push
pop
test
outsl
inc
xor
cmp
mov
inc
pop
or
stc
xchg
jp
fcompl
mov
js
js
cli
inc
mov
and
jp
js
mov
and
and
fists
mov
mov
in
subl
jle
sbb
adc
outsb
jmp
out
incl
loope
mov
dec
sahf
stc
out
sbb
cwtl
in
iret
or
jmp
mov
jge
dec
mov
out
test
shl
rcrb
sub
jmp
pop
insb
sub
xlat
cmp
ja
scas
and
mov
sahf
mov
or
cmp
idivb
ja
decb
pop
fildl
sub
push
fnstsw
push
mov
test
imul
xor
cld
and
mov
mov
sub
add
xorl
push
jo
dec
push
pop
or
sti
loopne
or
mov
in
ret
in
repz
imul
ret
jmp
call
sub
pop
push
mov
mov
icebp
int
ds
mov
adc
and
xlat
es
int3
loopne
movsb
lcall
xlat
sub
fwait
sub
push
xlat
inc
inc
mov
jnp
push
loopne
jg
test
mov
push
fcomip
pop
arpl
int
out
pop
pop
loope
stos
test
pop
sub
mov
les
mov
push
add
test
mov
pop
cmp
lods
jbe
or
push
dec
fdivs
aad
fnsave
jl
test
in
jmp
rolb
std
loopne
adc
subb
outsb
push
inc
scas
nop
in
aas
mov
push
xchg
leave
lock
icebp
pusha
xchg
mov
mov
sbb
mov
lods
ljmp
adc
cmp
or
push
mov
lds
es
xorb
les
repz
scas
sub
sub
cmp
jb
fs
jmp
in
cmp
test
or
std
cs
aam
fimuls
sbb
outsb
shlb
cmp
sbb
fmuls
gs
mov
push
imul
imul
inc
arpl
dec
pop
std
inc
mov
notl
mov
aaa
aaa
pop
inc
insl
int3
inc
inc
sub
ret
dec
repnz
repz
jo
inc
je
dec
add
and
push
mov
inc
fs
cmpsl
mov
pop
int3
test
or
mov
jp
lcall
les
test
dec
movsb
xchg
dec
push
push
in
cmp
movsl
rcrl
push
jge
mul
add
mov
jnp
and
pop
out
leave
and
pop
out
sarl
in
in
or
xor
test
mov
inc
aad
insl
mov
sbb
popl
push
adc
mov
mov
mov
out
inc
out
sub
fcompl
lods
ds
sub
movsl
sbb
cld
xchg
gs
ret
fistl
mov
xor
loopne
add
mov
sub
jns
pop
daa
jl
push
adc
bts
repnz
sbb
stc
or
int3
pop
pop
in
psrld
aam
pop
les
and
mov
fidivrs
in
imul
aaa
push
push
fwait
lods
loope
xchg
test
inc
mov
sub
fdivl
jge
je
shlb
mov
scas
or
in
call
xor
aaa
hlt
mov
or
popa
xchg
mov
jne
das
inc
mov
nop
xchg
mov
repnz
cmc
add
mul
stc
inc
push
lea
xor
push
sbb
icebp
lret
loop
inc
mov
enter
push
orb
cmpsl
std
xor
push
inc
ja
js
xor
xlat
pop
in
mov
cmp
or
shrl
mov
sub
sub
pop
sti
push
loop
insb
std
cmpsl
mulb
setbe
and
ficoms
bnd
add
fwait
push
xor
ss
je
gs
cmp
cmpsl
das
cmpsb
addb
test
push
and
bound
test
into
stos
xor
jmp
dec
inc
mov
lcall
xchg
cmpsb
dec
imul
mov
outsb
push
xchg
mov
idivb
and
int3
insl
arpl
out
aam
xchg
xchg
sub
data16
or
in
shlb
or
adc
sbb
fisubrl
add
pushl
inc
test
sbbl
ja
sahf
xchg
pop
mov
mulb
pop
dec
stc
push
push
add
loopne
hlt
cs
int
push
hlt
int3
push
test
dec
inc
ss
push
add
pop
daa
jge
inc
mov
lock
sbb
lahf
popa
daa
mov
cmp
mov
test
or
mov
dec
aas
or
fs
or
inc
sbb
ret
out
mov
in
arpl
cs
xchg
adc
jb
lock
mov
xchg
insl
mov
nop
sub
lea
leave
lods
icebp
xchg
push
xchg
xor
loope
fucom
fmuls
fldcw
leave
jg
add
pop
daa
mov
sbb
push
ret
adc
in
fs
out
shrl
imul
inc
sbb
int
js
adc
pop
stos
insl
cmp
lea
es
xchg
addr16
lret
aad
pushf
jl
push
outsb
xor
xchg
test
push
cwtl
ret
insl
aam
adc
dec
ret
clc
outsl
jl
mov
mov
icebp
cmp
lcall
pop
lds
adc
jmp
out
sahf
arpl
je
or
repz
inc
pushf
inc
roll
mov
mov
out
nop
stos
dec
pop
ds
repz
xchg
pop
rcll
fisttpll
push
cmp
cmpl
push
nop
popa
imul
xchg
sbb
pop
xor
in
loop
xchg
or
cld
fwait
inc
insl
and
cmp
insl
aad
in
adc
mov
sbb
or
xchg
lods
rclb
insb
adc
outsl
xchg
pop
mov
mov
std
pop
add
pop
aad
fcompl
pop
clc
repnz
repz
loop
jge
mov
daa
js
sbb
add
shr
or
sub
mov
and
test
sbb
cmp
mov
inc
outsl
jae
daa
sub
xchg
pand
mov
add
mov
lcall
dec
sti
ja
xchg
xor
jne
or
lahf
bound
cmp
out
in
cltd
cs
xorl
movsb
repnz
aam
sbb
sub
scas
test
imul
cmp
inc
test
mov
outsb
mov
enter
in
xchg
inc
pop
adc
adc
hlt
orb
cmp
push
dec
das
lret
loop
push
ds
pop
mov
pop
nop
push
and
dec
int3
add
mov
test
shlb
and
mov
call
sbb
cmp
push
movsl
mov
stos
andb
test
push
les
inc
aas
mov
loopne
xor
xchg
push
add
div
mov
shrl
aad
rolb
std
jmp
xchg
push
xchg
or
jne
adcb
call
roll
hlt
adc
add
mov
pushf
ror
jo
js
xchg
pop
out
sti
inc
push
test
xchg
movsl
cmp
add
mov
sarb
int
add
repz
loop
add
mov
lock
jb
mulb
cmp
cld
pop
les
sar
sub
pop
idivl
xchg
push
outsb
cmpsb
jo
fsubr
pop
dec
ret
mov
and
cli
xor
test
and
enter
adc
ljmp
out
sub
pop
sub
mov
cmp
lret
mov
pop
cmp
shrl
cld
add
lcall
clc
into
xor
pop
repnz
xor
jge
mov
jmp
xchg
mov
les
xchg
inc
pop
jg
xor
pop
xorl
pusha
dec
or
les
rorl
shr
in
mov
stos
pushf
jmp
mov
push
lcall
in
dec
dec
hlt
push
sub
cmpl
fcmovb
loop
adc
mov
xchg
rcll
jp
pop
frstor
insb
fidivl
scas
xchg
in
xchg
sub
sar
xor
cmpsb
lds
outsl
or
je
icebp
pop
ret
stc
imul
stos
push
xchg
xchg
push
aad
xchg
inc
pusha
stos
call
daa
fldt
dec
mulb
mov
mov
adc
or
loop
iret
in
cmp
loop
aad
cmp
loope
mov
subb
ljmp
insl
scas
dec
pop
push
std
repnz
add
bound
repnz
xchg
jne
mov
aas
adc
iret
mov
dec
roll
cmp
mov
and
adc
mov
push
push
fsts
push
jnp
mov
xchg
call
mov
xlat
dec
xor
push
pop
push
je
pop
repz
sub
into
jmp
cmp
push
in
scas
out
out
jg
adc
pop
add
movsb
ret
sub
mov
repnz
lcall
mov
ds
call
cmp
psubusw
loopne
movb
pushf
stos
jns
sub
imul
mov
sub
aam
sbb
add
xchg
fsubrl
xor
or
jl
xchg
gs
inc
fcomps
imul
push
hlt
inc
or
mov
int3
xchg
mov
lods
arpl
push
push
lds
inc
inc
jle
xor
popf
sub
xchg
push
mov
inc
push
inc
add
repnz
ret
xchg
jb
stos
test
imul
sbb
jecxz
pop
ret
mov
loope
ja
sbb
out
fstps
mov
push
scas
movl
sbb
dec
dec
sub
mov
loopne
loop
or
fs
dec
arpl
push
out
cmp
lods
cltd
fwait
pop
outsl
addl
fidivl
clc
xlat
cmpl
jnp
xor
jle
xor
push
xlat
push
xchg
rcl
cmc
loopne
imul
mov
popa
ret
xor
leave
mov
dec
inc
push
mov
ret
aas
add
sub
mov
lds
mov
pop
pop
cmp
lds
test
mov
adc
jns
jae
pop
xchg
inc
push
fldenv
insb
xchg
push
ljmp
xchg
aas
stos
inc
inc
mov
unpckhps
add
aam
shlb
pop
gs
adc
ret
cld
fcmovb
mov
jl
cmc
jb
je
aaa
cli
push
push
cmpsl
mov
lret
jmp
lcall
ja
or
sub
sub
sbb
pop
mov
and
je
cmp
ss
mov
mov
das
jo
and
cs
imul
outsb
xor
push
into
clc
sub
and
int
aam
pop
xchg
or
jae
icebp
xor
lcall
pushf
ds
lret
xor
sbb
jne
xor
incl
inc
popa
mov
inc
xchg
mov
popf
mov
pop
fcoml
aad
je
xor
mov
and
adc
into
jmp
mov
jmp
mov
mov
pop
addr16
or
repz
loope
movsl
or
push
ljmp
cmp
sub
xchg
loope
and
xchg
mov
jge
push
push
mov
xlat
outsb
aad
cmp
sub
jmp
test
sub
test
or
aam
lds
push
fistps
sbb
xor
insl
aaa
lret
dec
jmp
shrb
lahf
jns
dec
jno
repnz
gs
or
and
jmp
outsl
mov
or
adc
adc
stc
leave
into
mov
mov
inc
aaa
mov
cmp
sub
jno
fisttps
or
mov
push
mov
or
xchg
xor
loopne
cmpl
mov
or
cmp
repnz
lock
jno
mov
pop
test
loopne
jae
xor
aam
jl
mov
push
sbb
mov
push
movsl
addb
rorl
add
fstl
pop
fstpl
test
and
jne
sbb
lock
loopne
lock
xchg
and
stos
test
cld
xor
jo
cmp
fucomp
fstps
dec
sbb
loop
mov
xor
cmc
add
cmp
sub
sbb
sti
mov
and
rolb
ret
jl
mov
loope
arpl
adc
jnp
add
push
movsl
ja
lahf
loope
push
pop
and
decb
push
jg
aam
and
xlat
std
pop
lret
test
mov
mov
int3
orl
outsb
ret
push
nop
add
jl
push
mov
add
xchg
jnp
roll
xchg
jge
sbb
xchg
xor
lea
shrl
jmp
test
inc
push
in
pop
in
punpckhwd
cmp
push
xor
push
cmp
lods
cmpsb
rolb
test
movb
add
fwait
jb
dec
enter
mov
bound
mov
push
lret
mov
std
imul
push
sub
mulb
sub
divl
cmpb
pop
movl
insb
lret
rorb
cmp
pop
dec
xchg
scas
dec
dec
dec
testl
mov
inc
outsl
cmp
push
add
insl
pusha
jl
xchg
aas
xchg
test
addl
loope
ret
jp
and
shrd
jae
jnp
push
lret
mov
nop
mov
sub
repnz
pop
xor
dec
clc
test
mov
dec
insl
dec
fdivs
in
mov
xchg
lcall
rclb
adc
ret
or
cmpsb
daa
stc
fs
dec
andb
loope
notb
addr16
and
xor
jb
leave
sbb
push
or
movsl
outsb
test
sarb
bound
outsl
jbe
repnz
cmp
xor
xchg
xor
pop
push
ds
dec
rcrl
or
mov
push
and
fsubl
pop
mov
andb
dec
stos
lret
movsl
mov
and
sbb
test
cmp
leave
clc
arpl
and
jnp
lcall
mov
imul
push
pushf
hlt
fiaddl
ja
cmp
cmpsl
mov
out
sub
and
sti
test
lcall
insl
popa
sub
in
addr16
sbb
mov
or
lret
pop
push
addr16
add
dec
outsb
sub
pushl
test
jge
mov
add
aam
pop
fs
loopne
out
cwtl
or
jo
pop
into
dec
pop
sbb
fwait
into
cmp
sub
adcl
pop
ja
mov
cmp
pop
daa
in
push
aad
scas
xchg
cld
stos
mov
mov
jl
lock
leave
stos
xchg
mov
sub
addb
pushf
bnd
and
pop
add
mov
lea
das
lock
cld
and
cwtl
or
mov
outsb
ja
sarb
push
xor
or
add
nop
jbe
push
mov
outsb
aas
mov
test
mov
rcrb
shrl
fs
loopne
shll
xor
out
popa
ljmp
js
pop
movsb
mov
mov
mov
push
inc
imul
adc
jmp
cli
scas
mov
cmp
inc
fadds
adc
call
nop
jns
dec
xchg
repnz
sbb
movsl
mov
or
dec
jg
jmp
mov
lret
inc
imul
mov
repnz
out
xlat
lock
fidivs
stos
sahf
out
mov
loopne
fnstsw
shll
cltd
jnp
dec
pop
pop
addr16
out
mov
mov
pop
cmp
out
pop
dec
lret
stos
ret
jg
pop
aaa
pop
jne
cmpsb
and
xchg
xor
xchg
cmp
fs
and
jae
imul
or
adc
inc
mov
xchg
fstpl
fldl
adc
xor
pop
stos
jne
mov
mov
mov
inc
pop
xor
fstl
cmp
in
inc
out
fisttps
dec
jp
lcall
cmp
imul
and
dec
push
cwtl
sbb
inc
imul
sbb
push
and
addr16
inc
shrb
xchg
cwtl
mov
push
mov
cmp
sahf
mov
xor
mov
test
sbb
imul
inc
xchg
lcall
shrd
mov
aaa
mov
mov
sub
jl
and
mov
mov
push
fiadds
dec
inc
setns
insb
jne
stos
xor
in
imul
std
dec
insb
push
ret
and
push
mov
push
xchg
adc
or
xor
in
lods
cmp
sub
ret
xchg
mov
imul
mov
jecxz
inc
xchg
outsl
xchg
or
shrl
xor
cmp
sarb
adc
stos
cltd
int
in
loopne
ret
sub
aaa
movsb
sub
int3
cmp
xchg
incl
cmp
or
stos
fisubrl
and
scas
mov
fwait
hlt
push
cmp
lea
lcall
nop
aaa
in
mov
sub
fld
ja
fs
mov
sub
imul
jb
push
sub
inc
cmpb
push
in
mov
add
clc
mov
jle
inc
mov
popf
cmc
test
jmp
xor
dec
inc
jb
cld
cli
dec
cld
and
ret
cld
ljmp
sub
aaa
jp
ret
push
push
outsb
fstpl
sbb
add
add
hlt
aam
push
out
shrl
cmp
xor
ss
sbb
mov
lcall
subl
imul
arpl
sbb
test
or
out
dec
xchg
fidivl
and
xchg
pop
icebp
sbbl
mov
jmp
pushl
dec
mov
scas
lret
jecxz
pusha
sahf
push
mov
sbb
or
dec
xlat
xlat
mov
or
ljmp
dec
test
and
sbbb
repz
sbb
xchg
notl
and
pop
cmpsb
or
xchg
cmp
sbb
fists
stos
mulb
pusha
dec
enter
pop
lret
mov
inc
icebp
mov
test
xor
les
addb
adc
lahf
jbe
fildl
repnz
pusha
sub
jno
inc
jge
ret
mov
sub
push
es
call
mov
mov
add
xchg
mov
mov
jnp
xchg
shrb
mov
and
les
jp
sub
push
iret
mov
mov
mov
and
outsb
fisubrs
lret
in
in
inc
out
sbb
test
fistps
or
int3
je
mov
mov
xor
push
mov
lods
adc
outsl
imul
cmp
or
xlat
sbb
pop
sub
jle
mov
pop
or
mov
fcmovnb
inc
cmc
jbe
inc
dec
aaa
cmp
jl
lret
sti
pop
filds
add
push
lret
inc
mov
cmp
pop
sahf
mov
in
push
cwtl
movb
fidivrs
aad
fnstsw
jbe
fisubs
or
cwtl
aad
jp
nop
test
sbb
jl
mov
mov
inc
mov
pop
mov
cli
or
outsl
dec
lret
mov
add
mov
aas
or
mov
adc
jmp
sbb
cli
fdivrs
addr16
pop
andb
cmp
ja
xlat
inc
cmp
ficoml
rclb
mov
aaa
cmp
inc
sbb
xchg
test
enter
gs
ret
mov
lahf
xor
out
mov
das
sbb
dec
pop
mov
jbe
fistpl
aas
mov
jecxz
cmpsb
sbb
stos
lcall
aaa
addl
es
mov
mov
sti
test
jp
fcomps
or
addb
xorb
mov
ss
mov
insl
loopne
test
mov
shll
out
jecxz
adc
add
or
mov
call
jmp
out
cmp
test
jecxz
imul
push
push
push
movsb
jae
repz
cmp
pop
pop
push
push
cmp
push
ljmp
js
mulb
sub
sarl
std
pop
test
cmc
clc
dec
movsb
addr16
movsl
cli
cld
pop
mov
mov
lret
les
enter
push
sbb
push
aaa
scas
enter
sarb
shl
das
iret
dec
adc
xchg
cld
inc
pop
cli
add
adc
test
pop
mov
mov
jae
xchg
mov
mov
push
mov
inc
push
pop
out
jge
in
pop
in
adc
fwait
push
into
jno
add
ljmp
jge
cmpsb
lds
vmread
cmpsl
cli
add
xlat
adc
movsb
push
cmp
xchg
mov
pop
and
fists
or
fisttpl
and
xchg
push
xor
or
aas
push
inc
sub
enter
loop
ja
cmc
addb
adc
adc
rcrl
mov
jb
inc
loope
sbb
mulb
popf
xlat
fistpll
xchg
dec
xchg
push
jmp
gs
dec
imul
ss
jp
jb
test
mov
pop
mov
cmc
in
add
imul
cmp
ret
mov
mov
cmpsb
mov
cmp
popa
loope
inc
add
inc
rcrl
out
in
mov
lcall
out
imul
push
add
sbbb
and
and
add
push
out
cwtl
scas
imul
call
pop
pop
fcom
jo
jae
pop
int
aad
xor
pop
dec
dec
repnz
mov
and
add
push
add
testb
cmp
in
mov
jecxz
int
stos
sub
jg
pop
lret
les
addb
fwait
cmp
in
and
cmpsl
mov
subb
imul
leave
lcall
mov
add
xor
call
and
fcmovbe
cmp
bound
xor
jne
fcompl
mov
dec
fs
sbb
xor
xchg
mov
inc
movl
push
repnz
or
cmp
mov
push
insb
shl
stc
ss
stos
cld
into
jecxz
mov
push
test
icebp
fptan
mov
loope
sub
orb
sbb
sbb
shr
bndstx
ret
fisubl
insl
mov
xchg
popa
xchg
xlat
or
push
sbb
pop
iret
mov
aad
or
aas
jbe
loopne
mov
pop
lea
and
clc
setae
loopne
jle
mov
test
cltd
call
mov
push
aad
xchg
xorl
mov
push
push
pop
add
mov
cmpsb
inc
loope
scas
add
push
int
xchg
pop
ror
and
ret
mov
loopne
add
pop
mov
xchg
cmc
stos
lods
test
adc
dec
imul
pop
negb
adc
jp
mov
adc
enter
xchg
scas
mov
aaa
jp
mov
stc
lods
mov
loopne
stos
lods
ret
push
fld
xchg
push
jbe
test
movsl
cmp
clc
inc
and
enter
xor
rclb
mov
data16
mov
or
sub
mov
out
add
push
sub
mov
ljmp
cmpsl
sahf
outsb
idivl
mov
pop
mov
dec
jle
lret
sti
fsubr
pop
arpl
adc
fcomps
repz
clc
lahf
inc
xchg
cltd
cmp
cmp
cmc
ret
mov
xchg
lods
sbbl
scas
ljmp
xor
lret
leave
sub
mov
jnp
mov
adc
pop
push
lds
mov
mov
mov
mov
notl
dec
xor
mov
jmp
imul
sub
mov
xor
fs
lods
adc
jae
mov
dec
in
sub
movsb
leave
aas
dec
pusha
addr16
dec
sub
sbb
and
lods
test
cmc
and
cmc
lcall
bound
jne
hlt
shlb
test
push
enter
fsubs
xor
jmp
fcomps
in
mov
xor
adc
movsb
movq
popa
jle
pop
mov
dec
mov
dec
cmc
and
lock
add
add
mov
and
repnz
sub
sbb
jle
sub
in
or
out
adc
pop
nop
in
mov
stos
sub
shll
out
cltd
push
xor
sub
pop
cltd
or
je
outsb
std
or
jno
cs
inc
jl
adc
xor
sbb
sub
test
out
xlat
and
mov
mov
out
sub
xchg
jno
cld
and
repnz
inc
cmpsb
scas
pop
mov
pop
mov
add
test
sub
pop
dec
adcb
push
jo
das
adc
pop
pop
shrb
or
sahf
fnstsw
aad
mov
shrb
push
outsb
sub
cmp
push
sub
mov
ss
fs
cmp
repz
gs
dec
sbb
mov
add
jmp
and
mov
mov
inc
adc
xchg
fucomp
mov
jecxz
cwtl
nop
dec
inc
sub
test
and
cmp
pop
out
pop
xor
ljmp
jp
test
out
xchg
pusha
adc
loopne
sub
ds
inc
outsl
icebp
fistl
mov
outsl
push
jae
insl
or
sub
inc
and
xor
sub
fsubl
sbb
or
in
lcall
insb
mov
add
xchg
popf
or
test
push
sbb
xor
out
push
hlt
loope
scas
cmp
xor
ljmp
push
cli
dec
js
imul
sbb
or
pushf
insl
add
pushf
add
call
cwtl
mov
inc
xor
push
cmc
insl
arpl
int3
test
mov
lret
cmp
lahf
jbe
es
arpl
popf
cmp
pop
scas
in
into
pop
xchg
xchg
out
popf
sub
or
mov
mov
sub
mov
inc
ja
sub
add
push
ret
push
push
aaa
rcll
hlt
cmpsl
jbe
dec
std
mov
push
push
js
insb
xchg
ja
lock
stos
push
scas
dec
in
outsl
dec
inc
js
mov
stos
push
jle
pop
iret
jbe
ja
outsb
jle
mov
sbb
mov
scas
pop
in
mov
ret
sbb
aam
push
sti
mov
xchg
aad
xor
mov
push
mov
cmpsl
jbe
js
add
ja
jmp
mov
dec
mov
test
sbb
push
push
lock
pop
or
jmp
aas
scas
push
arpl
pop
jmp
xchg
xchg
push
addr16
sahf
push
or
mov
push
in
pop
mov
pop
js
mov
movsl
arpl
popa
and
pop
push
negb
cmp
fnsave
and
pop
popf
cmp
js
aad
dec
xor
jle
iret
fs
xchg
sbb
push
adc
rorl
jmp
sbb
add
idiv
xchg
loope
mov
imul
ror
sub
rcll
xor
enter
shlb
int
mov
add
lret
cld
mov
lds
imull
mov
out
outsl
fwait
mov
fadd
sbb
push
call
ss
sub
mov
cmpsl
lret
mov
jmp
stc
mov
ret
sub
xchg
jne
mov
inc
je
dec
mov
pop
out
dec
cltd
test
cmp
push
mov
jp
adc
jle
test
lret
lods
nop
sbbl
mov
cltd
iret
xchg
test
jecxz
cmpsl
mov
sub
and
fwait
jae
cmpsb
dec
fisttps
add
pop
lret
push
cmp
mov
jbe
rcr
mov
mov
push
sub
sbb
jbe
sbb
hlt
fldl
test
adc
cwtl
aad
mov
pcmpgtb
sub
cmpsl
and
or
fcmovnu
jle
add
and
in
push
aam
sub
test
in
lea
pop
jnp
and
mov
rcl
cltd
mov
bound
stos
out
xchg
sbb
loope
stc
loopne
mov
repz
mov
sbb
push
add
push
push
enter
xlat
mov
adc
or
popf
hlt
out
xlat
cmp
out
jle
loopne
sarb
sahf
call
shll
lret
push
sub
push
adc
clc
pop
and
pop
lret
mov
bound
daa
add
lods
mov
mov
and
xor
sbb
or
shrb
cmp
sti
ljmp
in
stc
and
or
jns
cli
scas
test
pop
dec
sbb
sbb
rclb
test
das
cmp
cli
xchg
daa
adc
jb
fdiv
or
sti
into
and
fdiv
mov
adc
testl
clc
mov
sub
pop
dec
inc
or
shrl
xor
jl
pop
out
cli
repnz
cmp
sbb
lret
pop
push
or
cmpsb
hlt
call
inc
push
das
cmp
imul
jmp
adc
mov
aam
mull
pop
and
movsb
dec
adc
loope
adc
xchg
scas
fs
pop
lds
mov
test
jmp
stos
outsb
fldenv
jg
mov
cmp
pop
adc
js
inc
inc
mov
push
pop
dec
mov
cmp
or
call
inc
and
test
lock
out
cmp
cli
shl
loopne
dec
bound
and
mov
push
jbe
aam
lock
stos
popf
jo
push
hlt
cmpsb
jmp
xor
and
jae
jp
scas
imul
call
add
mov
sbb
or
aad
push
pop
push
push
hlt
push
loopne
inc
test
pop
fcmovnb
int
test
loope
sbb
jo
pop
ret
push
insb
jmp
sti
shrl
push
sti
in
dec
adc
clc
ucomiss
push
into
mov
jg
out
lods
mov
addr16
lods
cmc
out
movsl
mov
jns
jbe
jp
aas
mov
xchg
xchg
shll
loope
jbe
xchg
lcall
mov
adc
add
dec
add
popf
cmp
cmc
clc
inc
mov
sbb
pusha
fsubs
jmp
lcall
lods
inc
in
sub
notl
scas
mov
cmpsl
ror
cmc
rcrb
add
dec
rorl
push
cmp
cmp
popf
sbb
or
add
lea
cltd
stc
int3
push
sbb
enter
aad
scas
mov
fists
xor
arpl
pop
push
xor
jo
mov
mov
and
loopne
add
les
push
cmp
fdivrs
inc
fwait
push
loopne
mov
dec
xchg
and
fsub
mov
pop
int3
push
pusha
dec
int3
jle
dec
dec
out
cmp
dec
sub
inc
stos
or
cs
push
jge
test
mov
sti
mov
push
pop
mov
adc
cmp
pop
adc
cs
hlt
fs
mov
fcomip
das
xlat
and
add
int3
cltd
jne
and
xchg
stos
arpl
mov
mov
and
mov
sbb
xchg
mov
lcall
push
sub
jno
out
push
cmc
movsb
and
push
push
inc
pop
and
xor
xchg
pop
stc
filds
rcr
outsb
mov
outsb
int3
movsb
mov
push
pop
lods
mov
inc
lret
insb
aaa
mov
insl
cmp
push
lret
lret
outsl
jbe
fcmove
fsubrs
in
mov
incb
jle
daa
mov
imul
rorl
insb
pop
cltd
mov
jmp
lds
cltd
pop
jne
sarb
repz
lcall
mov
cld
call
push
mov
dec
inc
shl
push
fdivrp
fs
repz
int3
push
xchg
xchg
xchg
mov
dec
scas
xchg
cmp
cmp
xchg
fwait
add
mov
kmovw
inc
imul
daa
and
scas
roll
fisttpl
dec
xor
cmp
lea
mov
sub
call
cmc
jecxz
in
lods
mov
sbb
sbb
inc
mov
adc
arpl
and
adc
popa
shll
sub
cmp
mov
pop
xlat
push
adc
sub
add
lock
pop
pop
loop
pop
xlat
leave
insb
fcmovbe
xor
and
dec
movswl
cmp
jb
sbb
test
and
dec
leave
pop
sub
pushf
cmp
or
lret
lcall
sbb
mov
mov
cmp
in
add
mov
mov
mov
add
addr16
or
or
xchg
or
data16
shll
loopne
aaa
jbe
and
lcall
add
leave
movsl
nop
mov
test
add
lods
pop
loope
jne
push
xchg
outsb
sbb
mov
into
notb
out
outsb
jnp
loope
lret
fsubr
jp
subb
repz
leave
push
clc
ja
inc
and
in
je
pop
lahf
sarb
dec
xchg
mov
mov
in
xlat
jnp
sbb
ret
jmp
pusha
mov
sub
iret
sub
lcall
sub
rol
rolb
push
fdivs
adc
insb
and
stos
xor
mov
repz
fwait
clc
xor
dec
push
dec
dec
leave
ficomps
loope
outsl
mov
mov
std
or
xor
xchg
and
xlat
in
push
popa
pop
push
jmp
sbb
rcr
inc
pop
out
lcall
int3
push
xchg
dec
es
sub
dec
aad
mov
push
ds
div
cmc
xor
jne
push
adc
inc
out
xor
neg
pop
mov
push
jns
push
pop
dec
std
inc
xor
mov
insl
pop
xor
or
inc
lret
dec
fisubrl
mov
mov
dec
pop
lahf
lods
dec
pop
stos
mov
dec
sub
and
sub
xchg
sub
sti
stos
into
outsb
outsl
and
int3
jg
xchg
es
arpl
cmp
into
or
fsts
repnz
stos
scas
daa
pushf
add
dec
inc
mov
sbb
fnstsw
flds
xor
lret
push
jae
dec
sti
mov
xchg
cmp
adc
fsubs
popa
push
xor
dec
push
clc
jno
mov
sarb
orb
fisttpl
stos
aas
loopne
mov
cmp
cmp
mov
in
push
sbb
jae
cmp
lods
inc
or
scas
add
imul
inc
inc
jmp
popf
outsb
ret
or
inc
pop
sahf
insl
sub
jge
insw
jle
pushf
jmp
test
imulb
outsb
mov
mov
jbe
pop
popa
out
mov
and
jo
in
iret
xchg
dec
fwait
push
mov
popf
js
cmpsb
mov
push
cmp
cmp
std
add
cmc
dec
sub
lock
and
dec
ffree
scas
jecxz
lock
out
ljmp
mov
fildl
sub
adc
or
push
and
sbb
and
cmp
and
pop
or
dec
dec
rcrb
stos
push
ds
shll
add
xor
aad
and
inc
cltd
cmp
js
lret
ds
lods
aas
std
in
stos
mov
insw
add
mov
sbb
mov
pop
jp
jmp
adc
add
fstl
dec
sti
push
and
cwtl
xor
jo
mov
and
fldl2t
pusha
push
push
psllq
mov
sbb
std
add
arpl
adc
jl
push
test
jecxz
movsb
loop
add
pop
xchg
inc
nop
and
scas
lret
insb
xorl
jecxz
cli
mov
dec
rorb
jae
les
fs
sub
push
push
fwait
mov
mov
fsubl
in
jle
xor
test
mov
inc
loopne
shll
in
fcmovu
mov
pop
cltd
dec
int
mov
jp
dec
or
stos
mov
xor
out
or
sbb
pop
cmpb
popl
xchg
jne
push
icebp
jp
adc
pop
call
and
call
outsb
into
repnz
jo
cmp
int
xchg
xchg
dec
or
jg
fmull
sub
into
sbb
stos
mov
addl
cmp
int
orl
cld
mov
pusha
lahf
mov
lcall
xchg
sbb
es
fcoms
adc
lea
add
movsl
push
scas
xchg
movsl
jne
clc
push
mov
push
pop
pop
fldenv
adcl
je
mov
in
pop
jge
dec
pop
sub
imul
adc
shl
jns
gs
add
push
scas
and
push
sarl
jae
pusha
push
jae
ja
mov
mov
ljmp
fcompl
loopne
mov
pop
pop
imul
insl
pop
or
divl
outsb
loope
mov
out
in
movsl
and
add
inc
jmp
aad
xorl
aaa
mov
push
fwait
xchg
add
rol
imul
mov
mov
cmp
adc
mov
inc
lcall
mov
xor
int
push
inc
push
cmp
movsl
cwtl
cmp
cmc
lds
xchg
leave
inc
pop
shrl
cmp
add
mov
cmp
jb
pop
fsubs
cmpsl
adc
dec
daa
dec
pop
sbb
or
mov
and
es
sub
or
lds
ljmp
jnp
or
pusha
ret
sbb
loope
dec
xor
dec
outsl
aas
leave
stos
lods
xchg
int3
cld
xlat
scas
adc
sub
xchg
icebp
mov
mov
xchg
inc
cmc
mov
xchg
xchg
adc
into
call
mov
sub
mov
cmpsb
clc
fnsave
xor
adc
ds
cld
fldcw
adc
add
fwait
bound
xor
bound
cwtl
leave
cmpsl
in
into
js
lcall
shlb
js
xchg
repnz
pop
sub
iret
leave
dec
jbe
xor
aam
in
push
inc
cmp
or
jo
and
mov
inc
jns
sbb
stos
push
mov
mov
cmpsb
sub
imul
xor
iret
rcrb
push
addr16
nop
cmp
mov
lds
add
sbb
loop
iret
sub
notb
int
es
bswap
or
ljmp
idivb
cld
cmp
call
sub
jae
sub
decb
and
aas
adc
in
and
jge
push
pop
mov
push
test
jnp
add
stc
xchg
imul
add
mov
mov
cli
shrb
jb
test
je
icebp
popa
push
mov
mov
inc
sbb
imul
jae
in
or
jb
or
mov
out
sub
pop
stos
mov
push
mov
int
dec
or
fstpl
pop
xchg
cmp
out
mov
add
out
mov
jp
in
xor
repnz
fcom
add
push
pushf
stos
popf
out
xlat
add
test
jge
sbb
js
outsl
scas
inc
jg
sbb
dec
push
pop
in
movsl
push
sub
hlt
jge
jl
add
movsb
cmp
pop
mov
fadds
aaa
cmp
ds
je,pt
fisubs
inc
rorl
sti
push
fucom
xor
sbb
dec
mov
push
mov
xchg
jbe
sbb
mov
pop
into
sbb
ss
testb
int
mov
xlat
mov
fsubl
mov
iret
cmp
jno
pop
aas
pop
sbbb
dec
sarb
data16
cli
mov
xchg
aaa
mov
lret
lds
js
push
jnp
pop
xor
push
or
dec
mov
pop
jnp
fnstsw
insb
push
loop
pop
jl
inc
pushf
push
and
aaa
imul
and
out
movsl
imul
jecxz
xchg
and
out
jmp
or
jl
outsl
out
imul
out
sarb
jecxz
sti
lret
pusha
xchg
pop
sub
jmp
sti
and
scas
push
mov
sbb
dec
push
cmp
aaa
mov
test
fwait
cs
mov
mov
jnp
jb
loope
mov
lcall
xor
ret
xor
sub
lcall
xchg
cwtl
pop
mov
add
or
mov
cmp
lret
test
ret
orl
packuswb
xor
mov
sbb
stos
xchg
pop
or
xchg
mov
jbe
sbb
pop
mov
adc
mov
and
sbb
decl
cmp
push
lea
lcall
hlt
aad
jae
aas
mov
icebp
xchg
jo
jmp
rcr
jl
mov
xor
lahf
out
sub
fsts
adc
cmp
xor
or
xor
or
ljmp
mov
cmp
cmp
add
addr16
repz
dec
or
leave
scas
jns
lds
cmp
dec
je
and
push
pop
mov
data16
mov
xor
das
testl
jno
or
fsts
fnstcw
mull
dec
add
mov
loopne
into
xchg
pop
les
dec
cs
jg
jo
scas
arpl
or
mov
es
in
ds
dec
xorl
adc
mov
pop
andb
roll
push
insb
outsl
pop
cmp
int3
mov
xchg
xor
add
fisttpll
mov
out
in
es
xor
xor
jbe
push
aam
inc
xor
insl
test
jp
inc
scas
sbb
jp
mov
insl
cmp
and
aaa
ljmp
rcl
jp
ss
outsl
int3
scas
mov
or
push
aam
push
push
daa
arpl
incl
push
jmp
cmpsb
hlt
pushf
xchg
jbe
loop
inc
mov
mov
aam
mov
mov
sarb
mov
out
mov
pop
jg
cltd
stos
cs
inc
mov
ret
lret
xchg
pop
je
sti
or
pop
imul
loope
sbbl
insb
mov
jg
in
lahf
push
xor
xchg
movsb
adc
push
jg
sarb
fbld
adc
jbe
mov
bound
fnstsw
es
inc
comiss
es
xor
and
mov
ljmp
sub
pop
push
cld
cmp
cwtl
mov
sbb
sub
scas
jle
xorl
fdivrl
iret
rclb
loopne
clc
jge
ja
push
adc
mov
aaa
icebp
in
lea
aam
jbe
ja
sub
jmp
push
idiv
xchg
push
sahf
jg
mov
in
and
dec
daa
int
and
shll
jmp
sub
mov
inc
rclb
ja
jp
mov
loopne
xor
fisubs
sub
adc
js
add
adc
loope
adc
imul
orb
ljmp
fucomp
insl
and
scas
lods
std
dec
mov
cmp
cltd
dec
arpl
and
jo
out
push
in
xor
mov
add
pop
inc
jne
cmpsb
pop
push
fistps
pusha
adc
or
push
mov
in
mov
clc
in
cld
cwtl
stc
push
sahf
mov
jno
hlt
pop
adc
cmp
jb
das
ljmp
cmp
pminub
adc
adc
js
xor
mov
loopne
mov
mov
aad
mov
cmp
push
mov
add
insl
pop
sbb
lahf
jle
and
fsubrl
jne
pop
mov
cwtl
dec
lods
loopne
movsb
movsl
sysexit
js
sbb
cmp
xchg
dec
popf
rorl
loop
repz
loopne
mov
imul
outsl
out
out
lret
lds
dec
add
dec
push
xchg
fs
jl
repz
pop
or
fnstsw
xor
movsb
or
mov
fwait
xor
push
dec
mov
fiadds
fs
xchg
ficompl
repnz
and
lock
lahf
inc
cmp
outsb
push
popl
or
dec
mov
fcompl
lahf
push
cltd
pop
pushf
mov
adc
xor
adc
inc
fcmovb
or
dec
insb
jecxz
xor
sbb
mull
jbe
test
pop
sub
in
mov
mov
add
mov
sbb
adc
add
push
fcomip
nop
dec
push
or
and
sbb
call
lea
push
aaa
cmc
xor
sahf
xor
cwtl
cmp
mov
xchg
cmp
adc
mov
mov
testb
dec
outsl
dec
test
in
push
pop
sar
les
in
inc
or
push
sarl
ret
dec
nop
ret
lret
mov
push
leave
and
xor
mov
pop
sub
notb
add
fdiv
xchg
push
push
mov
cmp
loope
lods
inc
lods
mov
rcpps
jbe
cmp
push
jg
add
fcoms
mov
and
and
icebp
outsb
subb
dec
pop
mov
lcall
leave
incl
pop
push
cwtl
insl
mov
or
out
lods
dec
xchg
sbb
ds
pop
push
inc
mov
mov
mov
out
or
out
xchg
imul
inc
bound
shlb
xchg
sub
xor
jle
int3
cmp
test
dec
push
in
cmp
dec
xor
xor
int
jecxz
jmp
push
sub
test
shlb
test
add
inc
out
push
out
xor
mov
sbb
dec
cmp
fs
sub
out
nop
mov
out
jmp
fldcw
int3
lock
mov
push
movsb
ret
jp
or
add
fstl
pop
in
inc
pop
dec
xor
sub
aad
pushf
enter
pop
push
mov
xchg
push
cmp
cmp
push
xlat
xchg
imul
jne
inc
xor
fcom
int
fdivs
and
testb
js
stc
negl
orb
imul
push
adc
mov
in
jnp
cmp
sarb
mov
mov
cmpb
xor
mov
add
pop
outsb
jl
mov
mov
inc
pop
adc
aad
in
jnp
pop
ja
jmp
push
add
lods
push
jns
loop
scas
cmp
enter
out
fmuls
add
pusha
pop
mov
and
sub
fidivs
loop
jl
cmpsb
loopne
pusha
lock
inc
xor
cs
pop
cli
or
shlb
jg
pop
imul
nop
arpl
cltd
jmp
cmpsb
xchg
pop
mov
enter
xor
and
pushf
out
out
xchg
xchg
and
popl
divb
mov
sbb
sarb
xchg
jnp
loop
xchg
jne
es
shl
shr
or
test
test
cmp
and
or
sbb
push
mov
sbb
cmpsb
add
jmp
inc
mov
iret
or
sarb
in
imul
dec
push
or
and
jo
int3
push
test
mov
out
sbb
nop
jae
test
fwait
ret
dec
mov
mov
fwait
shrb
mov
cli
ljmp
or
and
ss
pop
ja
push
jl
shlb
sub
jp
cmpsb
add
mov
or
cmp
test
push
div
push
sbb
mov
cmp
stos
xchg
shl
pop
cmp
shlb
jmp
push
cmp
xchg
cltd
mov
xor
jecxz
add
xchg
push
lods
ja
dec
lcall
cld
mov
pop
jl
pop
cmp
add
cmp
iret
xchg
popf
jne
push
mov
mov
lahf
cmc
mov
pop
mov
mov
cli
incb
scas
roll
dec
leave
repnz
push
push
out
or
and
push
add
add
push
adc
inc
sbb
cmp
and
cmp
pop
int3
imul
pop
cmc
in
or
outsb
out
lahf
xchg
push
test
outsb
xchg
outsl
jp
test
clc
fsubl
mov
sbb
stos
xchg
sar
cwtl
jmp
and
test
dec
adc
ds
pop
rcrl
ret
in
je
mov
pop
out
jmp
sbb
mov
test
out
sbb
push
cltd
jnp
push
push
mov
xchg
cmp
out
pop
cmp
inc
dec
lods
xchg
mov
hlt
mov
push
jge
mov
das
add
mov
push
cmpsb
sub
aaa
scas
sbb
jb
out
mov
psubsw
and
mov
jp
fisttps
int3
push
and
cmpsl
push
clc
filds
add
lea
and
movsl
cmc
movsb
push
fisubrs
imul
push
mov
adc
mov
add
ss
push
pop
aaa
and
cs
pop
xchg
adc
inc
scas
sub
pop
add
and
enter
clc
adc
pop
mov
and
js,pn
and
or
cmp
lahf
and
aas
jge
sub
std
dec
add
sbb
pop
mov
mov
daa
jmp
push
pop
icebp
pop
mov
mov
or
insb
and
fistl
sub
dec
lret
pop
loop
mov
mov
scas
sbb
pusha
pop
jno
mov
sti
push
arpl
xchg
mov
imul
data16
cld
movsb
jge
cmpsl
out
sar
pushf
sub
xchg
loope
out
aad
fidivs
insl
add
lahf
cld
add
jbe
mov
sbb
jg
out
popa
adc
stos
inc
cmpsb
cmp
cld
cli
into
mov
inc
orb
in
cmpsb
movl
pop
loope
mov
mov
leave
sub
out
push
sub
sbb
fadd
xchg
lcall
scas
mov
stos
pop
inc
xchg
ud1
gs
fimull
or
xor
push
int
enter
mov
jg
lock
loope
iret
movsl
push
bnd
sub
cmp
lret
test
fimull
mov
adc
gs
or
mov
cld
in
cld
mov
ds
sar
rclb
mov
rorb
rorb
dec
add
cmp
push
mov
movsl
cmp
pop
imul
int
loop
jmp
idivb
arpl
pop
mov
cmp
daa
les
jne
fisttps
fs
jle
scas
lds
sti
in
jl
inc
jne
test
jle
fsubl
pop
jne
xchg
jl
pop
push
pop
cmp
jge
xchg
popf
jnp
cmp
sub
sub
inc
sbb
jle
ret
jl
mov
jbe
mov
in
adcb
imul
jg
andb
adc
xor
dec
xchg
imul
pop
aaa
push
cmp
jg
ljmp
in
cmp
insl
and
adc
and
fs
in
xor
mov
add
cmp
bound
pop
push
xchg
rcrb
ljmp
inc
je
fisttpll
jne
push
pop
js
or
lret
scas
pop
cltd
shr
loop
xchg
sbb
or
loope
xchg
leave
movsl
inc
pop
mov
inc
or
outsb
stc
cmp
mov
adc
fbstp
loopne
testl
fs
dec
fs
inc
mov
jbe
add
out
out
test
mov
aam
and
xchg
incb
xor
mov
loope
ret
ljmp
out
fsubl
test
fucomip
push
adc
sub
or
bound
pop
pop
imul
mov
push
cmp
pushf
ja
je
out
imul
cmp
inc
cmp
loop
xchg
orl
pop
xchg
mov
xchg
cwtl
jae
out
inc
rolb
shrb
mov
enter
aas
addr16
and
push
and
nop
fcmovnu
cltd
mov
rcl
xchg
cmp
mov
les
mov
iret
push
sbb
jno
push
pop
push
fstpt
rcr
inc
xchg
in
ds
fists
outsb
enter
mov
sub
jl
push
inc
jl
hlt
mov
inc
fidivrs
adc
lret
inc
inc
outsl
pop
les
xchg
jge
jo
and
adcl
imul
sub
aas
outsb
imul
fnstcw
add
xor
and
dec
es
cltd
ret
out
stos
nop
mov
dec
mov
das
push
nop
nop
filds
mov
xlat
push
pushf
cmp
lret
inc
mov
mov
and
sub
test
mov
add
push
inc
add
sbb
xor
push
lods
sbbl
dec
sbb
jns
sbb
push
xor
push
and
in
test
xchg
push
adc
movsb
add
cmc
repz
xchg
mov
in
sub
andb
push
jo
mov
not
push
push
and
movsb
clc
and
xchg
lock
adc
mov
loope
test
ja
stos
mov
sbb
movsl
push
imul
sarb
aas
xchg
xchg
leave
xor
es
push
into
or
xor
outsb
das
pushw
mov
into
ss
cmp
jbe
sbb
roll
add
xchg
mov
fmul
inc
cltd
inc
jle
sub
jge
adc
push
or
push
ljmp
mul
pop
pop
pop
sub
xor
mov
int3
leave
jmp
sbb
xchg
int
inc
lret
xchg
xor
xor
aaa
cmc
int
adc
xchg
sbb
cmpl
and
push
adc
dec
sbb
pushf
ljmp
push
sbb
jmp
or
xor
pop
jge
mov
sub
sbb
mov
call
lods
pop
sbb
imul
int
mov
fucomp
data16
jmp
xor
sbb
iret
jne
or
dec
dec
adc
pop
lock
stc
mov
mov
pop
movsb
vpackuswb
jl,pn
mov
enter
xor
in
mov
sahf
and
cli
or
out
inc
cmp
lcall
cmc
stc
and
orl
and
xchg
flds
aaa
lahf
pushf
xchg
out
xchg
pop
cwtl
cli
mov
adc
and
add
lahf
out
out
jl
andl
sub
mov
out
sti
and
test
ja
xchg
dec
addl
js
pop
call
out
sbb
mov
pop
mov
jge
movsb
shlb
mov
or
outsl
pop
mov
pop
xor
es
roll
idivl
adc
in
add
popa
fdivs
xor
inc
repnz
cmp
mov
addr16
outsb
ljmp
std
or
sub
rol
out
mov
aas
xchg
sub
movsl
and
inc
pushf
adcb
movups
dec
sarl
int3
pop
clc
push
call
and
jmp
jns
inc
lock
adc
adc
pushf
jg
mov
fcompp
subb
pop
cwtl
pop
int
pop
and
cli
add
add
dec
pushf
cmc
mov
adc
lret
jmp
insl
cmpsb
lock
pop
lock
insl
lock
hlt
inc
pushf
orl
add
mov
sbb
or
inc
and
mov
outsl
jg
fisubs
mov
daa
call
mov
addr16
cmp
xchg
inc
out
push
rcrb
cmp
test
hlt
scas
stc
sbb
sub
dec
test
pop
outsl
xchg
lcall
pushf
add
mov
mov
add
xchg
iret
pop
xchg
bound
mov
and
outsb
aas
shlb
mov
mov
dec
call
sub
xchg
iret
mov
ss
adc
clc
pop
sbb
movsl
jg
rorl
cmpl
pop
push
adc
jg
dec
push
ds
and
adc
aas
mov
jb
add
or
ficoms
jae
xor
lock
pop
jne
sti
int
adc
mov
sub
cmp
mov
icebp
or
dec
sub
sar
xchg
stos
andl
xor
sbb
sti
out
sbb
add
aad
fwait
in
pop
xor
mov
mov
dec
push
xor
ret
xor
add
dec
in
sub
mov
xor
iret
jle
gs
loop
xor
adc
push
adc
andb
inc
loope
scas
push
dec
aam
ret
jmp
or
adc
je
pop
mov
lods
mov
lret
xchg
loopne
sbb
mov
scas
and
ljmp
xor
jns
in
movsb
pushf
stos
sahf
in
dec
es
and
pop
xchg
or
sbb
adc
je
adc
sub
sub
push
insl
out
aad
pop
fs
jne
mov
pop
mov
and
dec
insl
mov
test
loope
dec
daa
jnp
or
ds
and
jno
and
test
sarb
sbbl
add
ljmp
divl
scas
inc
lcall
cwtl
hlt
pop
jno
sbb
stos
xor
mov
scas
add
rclb
jg
and
cmpl
sub
pusha
mov
and
ret
xor
int3
adc
fwait
dec
xor
sbb
cwtl
jo
andb
pushf
les
mov
js
mov
and
jg
in
imul
sbb
movsb
shll
add
out
dec
popa
lcall
or
mov
mov
fucomi
call
int3
rcr
mov
sub
cld
adc
lahf
movsl
ret
repz
and
mov
jnp
jmp
dec
imul
push
ret
add
mov
dec
xlat
pop
int
ds
pushf
flds
mov
inc
scas
sbb
xchg
rcrb
jle
xor
sbb
mov
sbb
loopne
push
in
hlt
scas
shll
mov
cmp
sub
xor
and
and
jno
ret
jns
fnsave
lahf
js
push
adc
xchg
adc
bound
repnz
sub
lds
mov
fs
xor
and
cmp
je
cmpsl
push
repz
test
in
sti
and
cmp
mov
out
xor
inc
jmp
pop
xor
push
inc
into
inc
mov
xchg
jno
pusha
lcall
or
mov
testl
inc
shlb
inc
lock
imul
inc
sbb
mov
mov
mov
es
pop
sbb
test
adc
lds
hlt
fwait
or
xchg
mov
fcoms
dec
pop
inc
leave
fstpt
stos
cmp
or
je
xor
jle
mov
sti
pop
out
sub
cmp
push
lds
cmp
push
out
stos
or
js
push
dec
jns
jne
sbb
in
cmp
aad
push
int
pop
fs
push
jmp
out
cmc
mov
xor
test
push
in
and
jmp
fwait
cmp
bound
dec
loope
shll
sub
cmpsb
adc
nop
fisubrl
jne
mov
orb
push
sbb
aas
inc
inc
int3
xlat
xchg
push
mov
push
mov
cmp
int
mov
loope
mov
dec
out
dec
fistps
movsl
mov
xor
fisubrl
dec
fstl
lods
xor
cmp
sub
daa
pop
fidivl
jb
icebp
js
movsl
pop
popf
pop
pop
mov
ljmp
sbb
adc
call
mov
mov
or
inc
adcb
jb
in
popf
pop
adc
jbe
pushf
xor
inc
xor
shrl
adc
xchg
mov
jp
or
pop
push
pusha
add
pusha
cmp
mov
jge
sarb
fmuls
neg
daa
lahf
mov
shrl
pop
mov
lret
mov
daa
or
xor
cmpsl
cmp
xor
mov
cli
mov
rcrl
jno
into
xchg
mov
xor
xor
inc
out
mov
and
cmp
call
cmc
mov
pushf
sbb
lret
fwait
das
xchg
bound
out
fiadds
sti
push
dec
popf
push
xor
push
mov
clc
adc
outsb
and
mov
xor
decb
pop
fs
xor
in
outsb
cmp
adc
scas
mov
push
cmp
pop
ret
sbb
push
adc
xchg
jae
leave
dec
jge
stos
clc
inc
dec
mov
mov
and
xor
mov
lock
sbb
sbb
sbb
xchg
and
in
in
cmp
ljmp
mov
or
mov
mov
inc
mov
mov
inc
or
jno
out
inc
jle
insl
lods
sub
mov
jle
dec
pop
cmp
jp
lods
shl
push
dec
jne
mov
add
dec
and
fidivl
pop
sub
pop
insl
test
pop
mov
adc
adcb
sub
pop
push
xchg
adc
lods
inc
cltd
add
pusha
sub
pop
cmp
ret
aaa
adc
dec
mov
cs
pop
sbb
jmp
jmp
push
xchg
dec
inc
mov
test
in
mov
insb
push
int3
dec
and
lock
jmp
cld
cmc
dec
shrb
pop
leave
fldenv
in
psrlw
add
aas
inc
in
aaa
dec
sarl
pop
enter
pop
jbe
clc
and
jge
aaa
mov
lds
adc
cmp
mov
dec
pusha
pop
insl
pop
and
push
mov
mov
sub
fwait
daa
adc
and
enter
rcr
addl
pop
clc
mov
lds
shrb
fimuls
repnz
rcrl
dec
dec
cmp
push
daa
lods
or
out
jno
stos
mov
or
in
adc
adc
push
pop
mov
fadds
cmc
out
enter
mov
jge
mov
ret
sub
popf
mov
push
cmpl
or
sub
mov
in
adc
subl
cli
in
dec
jmp
mov
xchg
jecxz
push
fistl
loop
pop
fdivs
out
pop
or
cltd
sub
xchg
pop
xchg
cli
mov
cmpsb
jmp
out
negl
xchg
mov
inc
idivb
jecxz
daa
mov
mov
dec
xor
jmp
cmp
ret
mov
mov
xchg
outsb
cmp
add
push
call
mov
loop
scas
cmp
scas
add
push
frstor
and
dec
bound
xor
loop
jno
dec
test
jae
dec
test
test
jne
stos
mov
sub
push
fbstp
sub
jmp
hlt
movsb
testb
jp
lods
out
adc
je
shlb
repz
in
inc
les
out
popf
jbe
cli
xlat
int3
ret
xchg
cld
mov
loop
lds
sbb
cmpsl
outsl
mov
mov
insl
pop
loop
call
fwait
loopne
push
ja
loope
repnz
sbb
cltd
push
scas
sub
mov
sub
fwait
les
lret
cmp
and
out
cld
adcb
push
inc
loop
sbb
mov
addr16
fmuls
insb
rorl
jnp
mov
icebp
fcoms
pop
jecxz
xor
push
jp
cmpb
lret
cli
in
fldenv
movsb
mov
lea
pop
dec
adc
inc
lods
mov
inc
outsb
fs
inc
insl
fsubr
lds
scas
sti
dec
xor
xchg
mov
addr16
scas
ret
call
mov
mov
adc
cld
xor
jnp
mov
mov
cmp
mov
and
jge
jb
test
jmp
and
mov
xchg
aas
push
mov
or
sbb
add
sub
xchg
inc
dec
and
sahf
inc
add
push
rep
cld
lahf
in
shlb
jp
into
push
pop
or
inc
and
jg
lods
push
cmp
insb
xchg
lcall
jae
cmp
jle
popf
daa
sub
cmp
jge
sub
xchg
out
pop
jmp
jmp
fisubl
cmc
das
movsl
mov
dec
test
arpl
add
daa
jne
mov
leave
xor
in
mull
or
iret
push
ds
clc
test
subl
es
jo
out
cmc
shll
ret
test
shrb
out
xchg
outsl
mov
mov
xchg
inc
sbb
dec
push
adc
sub
pop
adc
test
xor
mov
inc
int3
sbb
mov
sbb
cmp
mov
jmp
das
push
pop
into
out
xchg
and
outsb
and
jnp
and
rorl
mov
les
ljmp
jne
sahf
data16
push
rcll
icebp
or
inc
int3
add
xchg
mov
jg
mov
adcl
out
dec
out
insl
ret
xchg
sub
push
int3
sbbl
adc
sub
outsl
mov
fistpll
and
mov
mov
jne
or
mov
push
movsl
test
inc
int3
mov
sar
xchg
xor
pop
rdpmc
int3
mov
inc
ds
mov
daa
xchg
push
fsubrp
cmp
xor
dec
fcomp
test
inc
mov
loope
adc
pop
mov
jb
insl
test
xchg
mov
les
mov
fmulp
pop
imul
dec
in
mov
lea
aas
ds
mov
mov
add
dec
dec
clc
jno
xlat
mov
mov
fisubrs
pop
nop
mov
pop
mov
popa
scas
sub
aaa
mov
int
frstor
xor
sbb
xchg
jnp
into
mov
cmpsb
and
dec
push
imul
test
fsubrs
movb
mull
cmp
jl
mov
lods
js
pop
add
push
jle
sbb
addb
inc
and
out
push
iret
xchg
cmovl
add
xchg
xchg
test
jbe
test
jns
cwtl
push
pop
outsb
out
adc
xchg
lcall
add
cmpsl
aaa
pop
lcall
clc
or
pop
and
adc
mov
mov
rolb
mov
enter
scas
enter
jne
dec
add
loopne
dec
loopne
ret
daa
dec
add
mulb
mov
add
rcr
lods
lods
sti
xor
push
sahf
inc
das
pop
int
je
repz
aaa
dec
mov
fdivrs
lods
andl
pop
sub
or
enter
iret
imul
fdivs
sarb
xor
mov
shrl
xchg
out
mov
jnp
popf
in
repnz
pushf
imul
lret
lock
outsl
aas
sub
insb
repnz
fldcw
xlat
or
cmp
clc
push
push
test
cwtl
enter
sti
popf
cmpsl
popf
or
lret
rorb
leave
adcb
ljmp
cmpsb
aad
jl
xlat
repnz
xchg
rorb
push
pop
aad
sahf
pop
dec
pop
mov
mov
dec
stc
dec
mov
shrb
dec
mov
sub
xchg
xchg
aas
cmc
lods
push
out
mov
mov
data16
jmp
mov
divb
pop
mov
repz
adc
pop
dec
insl
pop
pop
mov
js
fdivp
or
in
fwait
lcall
cwtl
mov
or
pop
outsb
outsb
jg
clc
cltd
in
ret
mov
push
lea
addr16
aam
nop
lahf
add
xlat
cltd
pop
pop
pop
aas
leave
mov
imul
imul
dec
in
lods
adc
mov
mov
stc
mov
pop
adc
movsb
pop
push
push
cmp
fisubrl
add
popf
inc
ss
dec
jae
push
jbe
push
push
jmp
jge
rcrl
dec
sub
sbbl
pop
and
xor
pop
sbbb
mov
mov
fucomip
sbb
xchg
loopne
cmp
mov
xchg
scas
notb
and
sub
notl
jmp
push
popa
or
cmc
jp
in
mov
sub
xor
sbb
test
data16
jno
je
xor
mov
jnp
jae
and
out
stos
jg
and
mov
jl
ljmp
sub
imul
sarb
xlat
out
stos
xor
popa
fsubrs
jle
or
data16
mov
mov
lea
add
or
adcl
mov
inc
jle
test
sahf
std
loopne
repnz
icebp
add
jge
adc
sbb
aas
xor
adc
push
sbb
adc
movsl
push
dec
jno
loopne
out
push
mulb
cmp
adc
test
hlt
leave
int3
sub
xor
je
mov
je
mov
sub
movsb
adc
lods
push
nop
fistl
xchg
in
push
dec
enter
mov
pop
mov
mov
addb
and
pushf
sbb
sub
push
pop
inc
shlb
scas
sti
xlat
jae
popa
pop
mov
ret
pusha
xchg
outsb
mov
sbb
repz
inc
or
xor
adcb
loopne,pn
fldl
mov
mov
scas
pop
adc
imul
insl
fisttpll
sub
int
sbb
jnp
jae
cmc
wbinvd
repnz
inc
pop
mov
decb
jae
inc
fiadds
fucomip
xchg
push
insb
mov
mov
fisttpl
gs
push
xor
leave
or
push
inc
jo
mov
dec
dec
out
ret
lret
sub
cs
pop
xor
jo
in
sub
xor
adc
dec
pop
addb
mov
inc
sub
pop
cmp
xlat
sub
jl
pop
xchg
subl
hlt
jo
cmpsb
lcall
es
imul
dec
inc
push
sbb
cmp
aad
adc
out
test
jecxz
jecxz
cmp
jnp
dec
cli
dec
and
jge
sub
pop
and
bound
daa
cmp
lcall
incl
xor
mov
adc
sub
push
push
jae
jno
repz
loop
jl
jns
inc
loopne
push
mov
mov
dec
mov
sarl
ffree
repnz
mov
cli
xor
pop
pop
cmpsl
cmpb
inc
iret
fistl
sbb
sub
pop
leave
push
and
mov
ja
clc
and
mov
and
hlt
les
pop
or
adc
or
bound
dec
and
repz
int
test
int
xchg
hlt
pop
xchg
jbe
rorl
mov
arpl
mov
inc
xchg
repnz
loopne
aaa
jns
es
sbb
jle
out
loop
cli
movl
and
int
daa
pop
inc
push
cmp
cs
cli
scas
sub
inc
pushf
jmp
pop
mov
dec
test
dec
dec
sbb
xchg
andl
dec
jmp
loop
popf
add
mov
inc
scas
cmp
mov
sbb
mov
mov
hlt
cmc
jae
ret
insl
int3
xor
lea
dec
addb
popf
decl
adc
fcos
mov
mov
stos
pop
push
ret
cmp
and
and
adc
or
stc
pop
add
out
lods
loop
mov
inc
xchg
shlb
push
out
mov
scas
cmc
and
add
inc
jge
repnz
icebp
mov
adc
jae
dec
add
mov
ret
shll
stos
cli
cmc
movsb
sub
xor
dec
das
jns
cwtl
lea
and
mov
bound
jp
add
xor
test
xorl
stos
jbe
jmp
lods
xor
mov
xor
fists
aas
push
loope
push
push
inc
push
mov
sahf
rcrl
jg
jne
push
les
lock
xor
xchg
and
push
pusha
subl
pop
aad
dec
and
inc
inc
push
push
cltd
pop
sbb
mov
pop
mov
mov
xchg
loop
cwtl
mov
adc
sahf
jae
subb
shrb
and
lcall
nop
das
sub
addb
aam
push
cltd
add
fs
dec
inc
call
xor
mov
mov
repnz
cli
cmpl
mov
push
xchg
in
clc
pop
xor
dec
sbb
mov
test
call
mov
testb
mov
and
aad
inc
stos
push
push
add
popa
dec
in
loop
bound
mov
repnz
sahf
cmp
iret
cltd
push
int
ss
mov
pop
cmp
lret
pop
lods
repz
add
xchg
je
jb
jg
dec
es
dec
es
xchg
pop
repz
test
xchg
lahf
jp
repz
in
cmc
test
mov
iret
rolb
dec
pop
push
call
mov
mov
cmpsl
inc
add
ljmp
cmpsb
rorl
or
fsubs
loopne
jno
lcall
stos
inc
add
and
pop
sahf
lods
cmpsb
or
inc
jg
pop
jno
scas
int3
fwait
loope
dec
xor
sbb
jp
sbb
in
mov
or
mov
outsb
out
pop
loope
mov
nop
shrb
shll
jb
adc
scas
pop
cmp
jne
xor
dec
sbb
dec
out
movsl
int
shlb
out
sub
jno
repnz
xor
movb
pop
dec
inc
test
mov
jae
aaa
ljmp
pop
nop
xor
lods
xchg
pop
stos
jo
ret
ret
mov
pop
not
stos
or
repnz
mov
loope
scas
fldcw
in
subb
jns
pop
pushf
int3
push
xchg
sbb
popa
sub
loopne
loopne
popa
xchg
xchg
int3
fmuls
imul
inc
fbld
dec
jae
mov
mov
adc
jbe
mov
pusha
jne
ljmp
xchg
mov
rolb
push
out
in
sahf
test
push
nop
jmp
out
cld
mulb
or
scas
xor
and
lret
mov
mov
mov
dec
fimuls
mov
inc
adc
stc
cmp
call
pop
negb
loop
ja
insl
pop
dec
pop
xor
scas
xchg
out
jae
xchg
aaa
imul
cmc
fsubrp
sbb
mov
pop
ja
add
jg
call
repz
dec
fnsave
rcll
cwtl
ss
pop
call
push
sbb
sub
cld
rcrb
imul
rcl
lahf
mov
inc
arpl
jmpw
mov
jae
adc
jmp
add
notb
notl
xchg
repnz
lret
outsl
xchg
sub
adc
ret
ljmp
test
mov
ja
push
lcall
adc
popf
xor
mov
jo
add
bound
jo
jp
leave
and
aad
jae
icebp
cmp
je
dec
dec
movl
orl
jbe
jmp
cmp
inc
out
jmp
mov
and
push
push
jle
movsb
inc
orb
shl
iret
jo
sub
mov
mov
cmp
jp
cmp
or
add
adc
aaa
pop
pop
lahf
xor
jl
scas
leave
inc
jo
fcmovu
jae
addb
ljmp
add
add
jo
dec
imul
push
xor
in
stos
xchg
and
inc
add
and
dec
push
xor
stos
lock
es
jb
push
lcall
dec
inc
or
inc
int
clc
push
xor
cmp
cmp
cmpsl
mov
pop
fwait
dec
and
push
push
aas
cltd
or
ss
push
jmp
lock
stos
push
inc
cmpsl
insb
push
inc
hlt
cld
leave
shrb
dec
jb
xor
push
in
cmp
arpl
iret
pushf
dec
lock
in
jae
int3
add
testb
cmpsl
shlb
mov
push
aam
lds
and
ja
mov
mov
cli
jmp
idivl
stos
ja
sub
cmpl
sub
or
xor
add
inc
dec
lock
push
pop
add
popa
push
loope
flds
and
push
mov
loopne
sub
dec
dec
mov
in
fstpt
and
mov
ss
iret
and
lcall
pop
pop
mov
adc
lods
call
inc
dec
es
hlt
mov
cmp
sbb
push
push
stc
mov
mov
cmp
sbb
add
nop
jp
xorb
stc
mov
mov
loop
in
ret
popa
and
pop
nop
sbb
mov
mov
popa
sbb
jecxz
mov
imul
sbb
and
xchg
mov
sahf
test
cmpsb
pop
lahf
pop
jnp
or
fistps
cltd
push
lahf
lcall
mov
xor
std
inc
clts
adc
jo
mov
sub
es
inc
lods
in
jmp
adc
dec
dec
and
dec
rolb
and
push
daa
xor
loope
xchg
adc
lahf
inc
mov
push
imul
cs
mov
and
dec
pop
ror
cmc
mov
jb
xchg
call
mov
mov
xchg
loop
cs
int
in
out
sbb
adc
das
push
shll
ljmp
js
ret
and
sub
xchg
dec
test
push
xchg
jne
cmp
xor
mov
sbb
rcll
shrl
adc
insl
mov
xchg
clc
ficomps
inc
ret
add
loope
sub
fwait
sbb
push
mov
hlt
rcl
popf
test
popf
lea
cmp
cmp
push
fildl
and
pop
out
dec
unpcklps
jbe
jl
sbb
xor
fmulp
xor
or
sub
add
push
stos
mov
pushf
push
mov
ljmp
adc
sub
test
bound
pop
pop
jne
das
cs
sub
aas
enter
mov
lea
lahf
out
pushf
push
jo
pop
push
mov
out
adc
inc
xor
cmp
or
dec
imul
add
mov
lds
xchg
push
jle
adc
cs
repnz
scas
outsb
mov
jnp
mov
stos
xlat
movsl
and
arpl
and
xchg
jl
addr16
push
inc
in
ficompl
inc
pusha
popf
mov
add
and
ja
mov
fwait
lcall
mov
and
xor
mov
ss
scas
adcb
in
xorb
pop
adc
bound
lock
ss
push
pusha
jnp
mov
ret
sbbb
pop
push
xor
jno
popl
xor
addl
sub
or
jmp
or
mov
add
and
xchg
test
add
pop
xchg
out
jne
pusha
hlt
adc
jle
dec
jp
pop
cmp
adc
push
sub
lock
jle
xchg
loop
hlt
aad
sub
mov
test
dec
pop
jle
pop
imul
pop
sub
sub
mov
sub
pop
xor
add
jo
notb
lret
mov
xor
stos
popf
arpl
loopne
sub
call
loopne
inc
add
lcall
jmp
pop
xor
lcall
dec
imull
out
loopne
pop
imul
cmpb
adc
and
cmp
sub
push
add
push
mov
mov
push
mov
jb
mov
mov
inc
aaa
popa
call
sar
sub
cltd
adc
cmp
xchg
or
inc
mov
imul
dec
push
jp
pop
cmc
pop
cmp
mov
nop
int3
je
bound
shl
sbb
lret
cmp
dec
sub
int3
lods
push
fisubrl
lds
ljmp
add
pop
sbb
sub
pop
inc
lock
dec
and
push
lock
and
movzbl
add
and
popa
cmp
idivl
mull
inc
or
mov
and
in
pop
fstpt
lods
pop
and
hlt
das
pop
insb
popa
and
xchg
sub
dec
jmp
add
aad
or
add
aam
jbe
jmp
gs
jp
push
mov
out
add
mov
mov
movsl
cmpsb
ret
pop
cmp
call
orl
inc
lret
sbb
jnp
mov
mulb
pop
mov
and
jl
nop
es
js
jns
repnz
push
sub
sbb
jns
aad
sbbl
lods
jp
cmovs
sti
jmp
cltd
rolb
mov
jae
mov
jp
pushf
or
sbbb
pop
aam
push
pop
icebp
pop
les
loop
test
icebp
mov
and
and
pop
into
cmpsl
out
sbb
sbb
mov
mov
adc
sbb
das
adc
out
sbb
cmp
loope
push
fcompl
pop
test
add
aam
cmp
sub
xor
mov
xchg
dec
or
fs
jmp
bound
imul
test
mov
mov
inc
scas
pop
outsl
mov
or
dec
into
push
xlat
outsl
dec
pop
lds
leave
aas
rcrl
sbb
fnstcw
and
or
inc
push
orb
test
inc
add
adc
fld
inc
shll
jmp
and
dec
pop
mov
aaa
or
stc
jmp
cltd
sbb
sub
cmpsl
jbe
mov
adc
mov
cmp
mov
loope
lahf
lock
jno
push
imul
cmp
sti
cwtl
inc
insb
xchg
cmp
bound
xchg
inc
cmpsb
jo
and
pop
pop
jns
pop
fsub
inc
xchg
xchg
adcl
test
bound
popa
add
test
test
inc
mov
fimuls
mov
out
test
mov
aaa
xchg
mov
mov
test
mov
push
cs
add
insl
mov
and
sarl
ja
add
sbb
or
sbb
push
jmp
adc
inc
push
mov
push
push
mov
mov
jo
sbb
out
shlb
xor
cmp
fs
inc
mov
jb
lea
lea
arpl
and
adc
add
in
pop
xchg
out
ss
mov
subl
fmul
fisubl
cmpsl
adc
lock
xor
adc
cmp
lret
add
lret
andb
and
roll
popf
pop
iret
mov
mov
push
cld
mov
sbb
mov
sub
lods
int3
push
push
push
std
sbb
pusha
mov
and
pop
cld
pop
push
xchg
inc
xchg
xlat
ret
cli
adc
cmp
cmpsb
dec
andb
push
pop
jecxz
mov
in
hlt
mov
mov
jp
pop
sbb
pusha
jb
xor
aad
adc
push
jmp
cs
inc
pop
int
jmp
sbbl
pop
xor
push
seto
mov
add
dec
je
clc
sarl
loopne
jle
pop
mov
mov
push
sub
ret
inc
movsl
adcl
inc
xchg
push
repnz
mov
or
pusha
mov
or
aaa
add
mov
cmp
pusha
subb
out
lcall
cltd
or
aas
inc
jecxz
fnstcw
xchg
and
cltd
mov
push
add
loope
mov
push
mov
repz
je
push
push
in
les
jno
mov
push
jg
lods
in
faddp
out
test
cmc
sbb
jo
loop
pop
inc
pusha
fstps
lods
mov
pushf
pop
add
xchg
daa
dec
cmp
jecxz
jns
xor
int3
popa
push
daa
push
push
or
xor
aas
cltd
es
data16
and
jl
inc
daa
dec
out
pop
call
test
arpl
aad
in
xchg
add
add
mov
and
jae
fistpll
push
cmpb
push
stos
sbb
inc
cmp
cmp
sub
adc
testb
push
cld
das
ficomps
aas
cmp
xchg
leave
negl
jbe
mov
sub
pop
adc
add
inc
jmp
cld
sub
cld
pop
arpl
shl
cld
and
add
rclb
pushf
xchg
mov
pop
inc
aad
faddp
fwait
pop
int
and
scas
movsb
pop
ss
and
jb
xchg
push
fs
add
loopne
addr16
ret
nop
jns
pop
in
sbb
cltd
repnz
cmp
rcll
inc
cmpsl
pop
sub
out
dec
in
push
ss
and
and
mov
mov
jae
aas
cmpsb
cmp
sti
faddp
pop
dec
fs
outsl
cmp
jg
push
adc
pushf
sub
outsb
push
inc
mov
or
inc
cli
fisttpll
pop
das
sbb
pop
xchg
mov
dec
adc
fisubrs
imul
das
add
popf
sbb
repnz
negb
fmuls
out
in
xchg
push
inc
orb
int
cmp
int
mov
rcr
stc
in
xor
outsb
ret
mov
lods
js
pop
inc
scas
pusha
shll
out
xchg
inc
push
cld
xor
nop
cltd
ret
dec
incl
mov
mov
mov
das
cmp
add
mov
out
lar
into
pushf
leave
add
orl
cwtl
xlat
iret
popa
arpl
iret
pushf
aad
push
jb
adc
add
in
mov
leave
popf
fidivs
mov
imul
push
subl
in
arpl
mov
push
xchg
xor
inc
add
jmp
jno
jge
sbb
push
cmp
test
jecxz
jno
mov
divb
rorl
cmp
flds
jmp
pop
or
jo
sahf
int
rcrl
and
adc
and
sbb
nop
daa
nop
xlat
jo
xor
lret
jne
pop
lret
xor
xchg
mov
aas
dec
jns
push
mov
push
nop
cmpsl
das
aas
adc
dec
pop
push
inc
test
and
mov
das
or
jg
xlat
stos
lods
call
or
jb
pop
pop
mov
push
pop
pop
rcrb
mov
sbb
lea
jmp
mov
mov
mov
ret
mov
jge
inc
fnstsw
scas
xor
push
mov
in
jge
jmp
mov
add
mov
shll
ljmp
mov
mov
sahf
sub
fldenv
mov
xor
push
cmpsl
ljmp
push
mov
push
enter
pop
push
pop
out
sbb
outsl
shlb
in
fwait
int
jnp
enter
sbb
push
mov
shll
push
cmp
mov
iret
inc
pushf
in
out
inc
in
out
jg
aas
adc
adc
scas
ljmp
stos
sbb
fimull
dec
sbb
movsb
add
aad
out
testb
enter
xor
mov
out
xchg
or
jno
jmp
sbb
in
sub
mov
xchg
and
pop
in
and
cmpl
jecxz
test
sub
lcall
aas
mov
mov
dec
inc
iret
push
xchg
test
loopne
orb
out
dec
shll
adcb
jne
fs
repz
loope
data16
loopne
imul
mov
fwait
dec
mov
das
inc
scas
pop
ds
iret
or
add
out
jp
out
jno
adc
insl
inc
mov
mov
lock
push
rolb
mov
in
loopne
and
sub
dec
pushf
dec
xorl
vdivpd
pop
jnp,pn
add
ljmp
fstps
add
out
mov
insb
push
in
inc
bound
mov
mov
fs
push
push
scas
sbb
xlat
testb
xchg
ja
or
mov
jmp
or
and
xor
ja
sbb
inc
and
leave
scas
dec
xchg
cwtl
cmp
push
and
sub
stc
mov
xchg
mov
adcl
fcomi
dec
cwtl
xchg
fwait
jmp
cmp
inc
push
cmp
pop
gs
aad
xor
mov
push
lds
sahf
fs
adc
adc
hlt
and
imul
dec
in
xor
aad
adc
dec
outsl
std
nop
add
je
aad
out
movl
push
nop
jbe
shll
mov
xor
movsl
lret
pusha
and
cld
insb
add
mov
ds
movsl
inc
cs
or
fsubr
repnz
xchg
aaa
scas
shrb
xchg
xor
pop
das
pop
imul
lock
dec
fisubs
out
xchg
pushf
mov
mov
push
insb
jno
fstpt
sbb
jl
sub
pop
test
pop
mov
inc
stc
sbb
adc
subl
fistpll
dec
xor
loopne
dec
adc
sbb
sub
nop
cmp
fucom
aam
push
jmp
dec
repnz
aaa
out
pop
test
or
dec
loopne
xchg
cmp
aas
mov
xlat
in
push
adc
mov
adc
shll
in
ljmp
popf
fadds
sbb
xor
and
outsl
inc
negb
xchg
inc
loope
or
lods
test
cs
xor
pop
push
adc
out
xchg
imul
add
cmp
xor
loopne
fnsave
enter
loop
lea
jbe
mov
lods
cmp
adcl
shlb
movsl
bound
adc
mov
iret
scas
mov
aaa
cltd
aam
cmp
xchg
xlat
loopne
mov
mov
ja
inc
scas
push
fsubr
cmp
inc
push
push
in
push
fbstp
fidivl
inc
gs
push
pop
cmpsb
push
pop
or
mov
jbe
fldenv
fildll
dec
jmp
dec
pop
out
ds
js
pop
loopne
mov
out
addb
loope
mov
sbb
ret
andl
mov
fnstcw
sbb
inc
xchg
dec
inc
inc
pop
adc
mov
lret
jl
repnz
or
jmp
iret
mov
testb
ds
mov
mov
test
inc
cltd
loopne
ja
and
fsubr
out
push
cmp
jle
mov
add
cmpsb
mov
mov
sbb
les
cmp
pop
stc
nop
fcmovbe
fcom
cmp
icebp
pop
ja
clc
mov
daa
xchg
sbb
pop
movsl
jg
cwtl
mov
mov
enter
or
in
pop
arpl
not
mov
divl
fnsave
inc
clc
cli
test
fwait
sub
int
or
stos
push
jmp
cld
std
repnz
mov
adc
dec
adc
repnz
mov
mov
pop
ljmp
add
mov
mov
mov
or
outsb
xchg
cwtl
cmp
fadd
jge
or
adc
loopne
rolb
sub
inc
and
adc
daa
jno
lret
stos
and
dec
lds
int3
cmc
repnz
push
into
cmp
or
shrl
test
mov
pop
es
xor
rcl
jns
sahf
fwait
xchg
push
and
dec
jg
int3
xchg
mov
and
dec
cmc
cltd
movsl
xchg
and
xor
mov
push
leave
xchg
clc
les
mov
in
and
daa
sub
sub
popf
dec
mov
push
jmp
push
scas
flds
inc
push
push
out
mov
dec
inc
data16
pop
adc
or
lret
pop
jl
and
sbb
movsb
in
fcomps
xor
add
push
cmp
iret
shrb
daa
push
mov
push
push
fwait
jns
movsb
mov
popl
mov
or
mov
sub
xchg
jb
jle
popa
or
push
add
jle
jmp
mov
mov
enter
shlb
xor
pop
jg
in
mov
lahf
fsubl
in
xchg
mov
mov
loop
xor
test
xchg
in
and
ja
lcall
sbb
or
out
in
test
and
sub
pop
and
std
dec
jmp
loop
sbb
leave
fisttpl
call
mov
adc
stos
dec
sar
and
lret
add
subl
les
cli
sarb
pop
cli
cli
lds
and
bts
inc
iret
outsl
or
cwtl
fmull
test
pop
scas
sub
or
insl
push
pop
hlt
fsts
in
xor
mov
push
and
lahf
sbb
jns
out
jnp
xchg
fwait
pop
push
cmp
lods
adc
sub
das
gs
mov
sbb
inc
idivl
cwtl
sub
stos
leave
test
xchg
addr16
out
jmp
pop
mov
out
push
mov
dec
push
out
cltd
shlb
repnz
add
jne
popf
jnp
int
jns
xchg
push
xchg
sahf
jne
mov
cmpb
dec
sub
jecxz
xor
pop
sub
inc
lock
shlb
or
jmp
adc
jl
mov
jl
js
inc
mov
xlat
add
clc
testb
call
test
imul
mov
mov
data16
loop
int3
lret
test
inc
addr16
popf
rclb
int3
insb
jl
mov
add
pmulhuw
paddsb
push
cmc
mov
or
sub
test
cwtl
jecxz
and
cwtl
push
pop
or
xchg
inc
stos
pop
fsubrl
push
xor
shr
mov
sub
je
push
cmc
lock
leave
push
aaa
out
mov
out
out
xchg
add
pop
pop
cmp
add
push
adc
cmp
movb
inc
push
insl
xchg
sbb
and
xor
sub
fists
loop
xor
popf
nop
fs
rcrb
adc
jg
add
sarb
jne
sub
mov
leave
mov
sbb
cmp
adc
cmp
dec
xchg
sub
loopne
push
jle
lret
pop
xchg
sar
mov
dec
sbb
cmp
jg
adc
ret
les
or
sub
imul
shl
pop
push
mov
cmc
add
faddp
cmp
loope
shl
arpl
cmpl
movsb
arpl
in
sahf
movsb
jo
test
jns
ja
in
pop
xor
in
in
cwtl
add
xor
jne
sub
int3
pop
sbb
iret
jmp
ficoml
xchg
into
inc
in
arpl
dec
inc
xor
push
movsb
xor
or
push
mov
les
or
add
call
testl
add
push
pause
inc
stc
adc
jnp
lods
aam
mov
pop
push
add
negb
or
or
xor
popf
imul
or
ret
jns
or
ljmp
pop
and
mul
das
fwait
inc
xchg
ss
fs
cmp
sub
and
hlt
mov
push
insb
mov
mov
scas
mov
dec
mov
fsubl
inc
and
popa
add
mov
pop
jmp
sub
xor
addr16
mov
mov
add
lret
and
pop
jno
add
xor
jbe
cmp
sbbb
lock
movsl
add
popa
insb
mov
lds
push
das
xchg
das
ret
adc
push
pop
in
and
cmovbe
adc
popf
lret
pop
jg
leave
inc
nop
je
out
mov
mov
mov
pop
cmp
jl
movsb
cmp
loope
xchg
insl
stos
andl
inc
cld
adc
pop
jbe
stos
pusha
xor
push
xor
inc
push
fcoms
flds
add
mov
add
xor
jb
or
rcrb
mov
adc
imul
lea
enter
sub
lret
xor
sub
push
test
jbe
mov
orl
mov
fsubrs
dec
and
mov
fcomps
es
fdivrs
cmp
mov
mov
mov
jmp
and
pop
stos
bnd
dec
iret
fnsave
loope
dec
bound
ret
test
dec
fsts
cs
sbb
push
dec
dec
xchg
or
das
push
std
pop
inc
arpl
pushf
mov
and
mov
lret
sub
fwait
mov
leave
mov
testl
and
in
or
add
in
repz
stos
xor
loopne
mov
sbb
mov
mov
in
addl
cmp
add
out
aad
inc
dec
rcrl
aad
fs
out
insl
repz
ret
into
sbb
inc
roll
scas
push
insb
insb
sarl
mov
dec
adc
es
xor
add
int
jae
test
aaa
out
adc
lahf
sub
xchg
fbstp
outsb
sbb
sub
cmpsl
xor
sub
xor
cmp
loop
aas
test
xchg
push
push
stos
out
pop
pop
fisubs
cs
and
pop
or
jl
stos
dec
sub
lock
stos
mov
mov
ljmp
fcmovnu
pop
ds
cwtl
lahf
and
sbb
loop
xor
sub
ja
jns
nop
pop
pop
data16
push
mov
mov
cltd
icebp
cs
push
sbbb
cmp
fldcw
cmp
mov
or
mov
push
dec
popf
inc
imul
jle
dec
in
push
mov
ss
fdivrl
add
cmp
jmp
loopne
jo
jp
negb
add
or
in
sbb
jns
stos
jle
aad
lods
cmp
pop
fisubs
pop
xor
mov
rcll
mov
movsl
sbb
sub
mov
mov
cmp
sbb
pop
shr
dec
enter
fbstp
jecxz
or
icebp
and
andb
jmp
adc
lahf
roll
mov
sbb
cmp
out
add
mov
mov
das
fneni(8087
insl
scas
pop
sbbl
outsl
in
dec
stos
cmpsb
xor
pop
push
mov
cli
imul
inc
jge
jne
idivl
push
decb
pop
shll
fcmovnbe
sub
cmp
push
or
mov
cmp
mov
std
sahf
popa
ds
or
mov
xchg
pop
cmpsl
bswap
out
jg
aam
add
xchg
lahf
fcompl
push
imulb
popa
or
or
push
mov
and
repz
xchg
jno
jge
in
pop
cltd
shrl
push
mov
mov
and
mov
icebp
insl
push
mov
push
rcrl
ja
or
fsubrs
mov
mov
pop
and
dec
push
inc
xchg
mov
mov
mov
mov
ja
xor
mov
mov
adc
cmp
adc
repnz
xchg
mov
pusha
dec
test
enter
sahf
rcl
and
cli
inc
mov
push
inc
mov
scas
rclb
mov
testb
xchg
xchg
dec
inc
xchg
cmc
imul
cmp
push
and
daa
fldl
mov
cli
mov
icebp
orb
lret
pushf
mov
imul
jno
or
cmc
movsl
pop
jp
jle
adc
jl
lock
lods
clc
and
cmpsl
in
sbb
jecxz
mov
pushaw
jo
jle
adc
loopne
cltd
nop
adc
jae
push
sub
out
push
mov
and
mov
mov
jp
repnz
xchg
fs
filds
dec
mov
fld
or
jbe
push
inc
xor
cmp
insl
orb
in
mov
psrlq
stc
repz
push
xchg
or
fstpl
xchg
pop
lods
push
pop
ds
push
hlt
pop
imul
pop
add
mov
stc
ss
mov
outsb
xlat
gs
jecxz
stos
jae
add
push
push
or
mov
idivb
pop
dec
adc
out
sub
push
cmpsb
push
loopne
int
jl
cli
subb
dec
or
pop
cmp
xchg
mov
cwtl
icebp
mov
xchg
xlat
jne
xor
lock
imul
dec
ja
cs
sub
inc
pusha
jecxz
mov
mov
sarl
out
jno
in
push
sbb
mov
sub
cmpsb
mov
dec
ljmp
pop
mov
lret
in
daa
jns
mov
pop
jl
push
mov
sbb
data16
xchg
ret
orb
sub
sub
call
adc
sarl
fstp
push
mov
mov
push
test
jmp
jp
je
out
je
cltd
push
repz
push
mov
mov
xchg
nop
inc
add
repz
mov
inc
lock
jne
mov
cld
int
pop
adc
arpl
lods
idivl
orb
aam
dec
out
pop
push
in
outsb
inc
scas
mov
lret
mov
add
push
dec
inc
or
sbb
aas
pop
inc
into
add
jae
jnp
test
add
push
insb
or
dec
movsl
test
pushf
mov
sub
xor
js
roll
jo
push
pop
loope
dec
cwtl
jge
xchg
xor
test
mov
xor
pop
lret
push
arpl
into
leave
xchg
inc
pop
or
push
rorb
fistps
sbb
mov
mov
popa
dec
xor
fnsave
cmp
ficomps
sub
mov
mov
pop
xchg
xor
push
fnstsw
mov
mov
push
mov
cwtl
enter
and
test
or
in
add
inc
lock
into
imul
js
daa
std
cwtl
je
sarl
mov
and
mov
adc
cmpsl
cmc
andb
sbb
movsb
and
fiadds
shl
cs
push
adc
mov
inc
fiaddl
adcl
lcall
pop
pop
cmpb
fs
inc
sub
cmp
cmp
or
cmp
xor
xchg
jmp
fistl
mov
shll
push
sbbl
dec
cmp
adc
jns
cltd
and
push
push
decb
push
test
xlat
lods
sbb
mov
add
sbb
sub
sub
jnp
pop
hlt
jbe
test
jnp
and
int3
dec
fnsave
mov
ret
jl
sbb
dec
push
inc
xor
fs
cmp
test
dec
or
test
rclb
cmpsb
xor
mov
inc
mov
das
arpl
fcoml
lret
sbb
iret
mov
fdivr
cmp
adc
inc
push
call
test
cmp
leave
mov
lret
in
cli
cmp
dec
or
push
sub
sbb
adc
daa
nop
je
sbb
aam
add
xchg
adc
add
fnsave
jl
ret
gs
xor
dec
sub
xchg
adc
rclb
andb
out
inc
popa
int3
loopne
inc
jg
adc
push
leave
dec
lret
popf
outsl
xlat
or
sbbb
mov
xchg
test
mov
push
fisttpl
inc
adc
jo
leave
repnz
mov
scas
in
or
push
pop
cwtl
xor
cmp
mov
leave
mov
pop
sub
lds
xlat
jo
ror
movsb
sub
mov
lret
sbb
cltd
ljmp
mov
in
inc
dec
in
int
xor
mov
lahf
mov
xor
jle
lock
fsubrs
fs
cmc
inc
shll
out
mov
loopne
fwait
add
push
loope
out
xchg
jnp
lret
sbb
mov
loope
mov
mov
mov
push
scas
data16
cmpsb
ss
fistpl
jne
popa
push
hlt
pop
mov
xchg
jge
rclb
sub
out
sbbb
sbb
pushf
push
lahf
in
mov
xchg
aas
je
shrl
mov
xchg
cltd
mov
xorb
lods
fwait
cmp
inc
xor
les
add
mov
popf
push
lahf
clc
dec
daa
cld
or
fxch
xor
push
pop
fbstp
mov
adc
out
aam
xchg
fsubs
mov
int
imul
in
subb
push
mov
cmp
and
jo
mov
sub
xchg
inc
adc
dec
repz
loop
gs
jmp
inc
cli
push
add
jne
xrelease
je
mov
sub
jnp
leave
pop
loope
or
push
pop
jne
outsl
cmpsl
jl
in
insb
dec
jnp
push
mov
xor
sub
nop
mov
xchg
push
iret
aam
pop
mov
inc
adc
lea
cmc
icebp
xchg
xchg
dec
mov
les
aaa
dec
cmp
mov
rcll
in
and
or
xor
loope
add
int
idivb
dec
in
and
test
jb
cmp
dec
mov
jg
mov
mov
out
dec
and
and
out
and
jmp
dec
repnz
mov
cltd
and
pop
inc
call
mov
adc
push
push
repnz
fmuls
iret
pop
add
xchg
movsb
pop
mov
inc
xchg
xchg
adc
icebp
sbbb
and
test
lds
nop
xchg
das
adc
lods
pop
int
leave
test
aam
incl
mov
ficomps
cmp
lds
movsl
inc
mov
fdivrl
mov
mov
lret
push
andb
ds
push
mov
dec
mov
adc
mov
xor
lock
pop
mov
add
inc
outsb
mov
mov
data16
inc
mov
jg
dec
and
lods
inc
mov
ds
mov
push
pop
push
cmpsl
push
add
xchg
xchg
and
inc
jno
pop
insb
repnz
stc
cmp
imul
inc
frstor
xor
or
pop
mov
mov
jo
jnp
dec
test
jmp
cwtl
add
and
xchg
mov
xchg
cmp
jmp
jmp
push
dec
xor
jmp
lods
mov
test
sahf
lods
in
jecxz
xchg
ret
jnp
dec
add
dec
xor
mov
lods
cli
inc
mov
dec
hlt
mov
mov
loope
xchg
call
adc
dec
hlt
xor
popf
pushf
leave
rorl
das
mov
cltd
cmpl
dec
sub
cld
jge
push
loop
js
and
addr16
or
jp
out
lcall
mov
cmp
arpl
push
xchg
nop
mov
xchg
popa
jne
mov
xchg
ja
ss
sbbb
jg
jbe
insb
lret
sbb
das
insl
push
das
xor
push
jnp
aad
and
clc
jns
dec
into
fs
cmp
or
movsl
cmp
lahf
mov
jno
add
adc
mov
jecxz
test
xchg
push
lret
sub
outsb
cmpb
lds
mov
mov
daa
lret
in
xor
or
filds
lret
push
or
xchg
push
mov
cld
out
xchg
mov
cmp
pop
mov
adc
in
pop
pop
jp
inc
aam
push
xchg
imul
cmp
call
xchg
dec
idivl
ret
cmc
leave
xchg
sbb
mov
daa
test
push
jne
pop
adc
pop
mov
inc
loop
je
out
cmp
pop
mov
mov
adc
xchg
and
sbb
pop
lock
mov
adc
pop
mov
ljmp
aam
pop
xor
shrl
imul
jmp
les
jg
ret
dec
push
cmpsl
add
fdivr
popf
fadds
sahf
mov
cld
repnz
sbb
imul
add
lret
sbb
adc
mov
rcll
je
int3
jp
idivb
cmp
or
jae
das
mov
scas
les
or
add
adc
push
scas
loope
jg
push
pop
and
icebp
int3
lret
or
stos
loope
les
push
shrl
ret
push
xchg
dec
xchg
fisttpll
mov
xchg
popf
sahf
sub
js
in
push
push
or
cmpl
mov
loopne
andl
cs
jb
dec
sub
clc
pop
aam
pop
mov
lea
mov
sbb
mov
test
jbe
arpl
arpl
and
sbb
repnz
pushf
jp
dec
mov
lcall
test
mov
sysret
aad
insb
sahf
cld
fs
add
jge
adc
mov
mov
jno
push
es
or
cmpsl
and
loopne
or
movsl
stos
pushf
xor
out
arpl
and
scas
push
mov
xlat
jecxz
xchg
fs
ljmp
xor
js
jmp
jle
fistpll
insb
xor
jle
mov
mov
xor
stos
inc
dec
daa
jnp
mov
jle
popa
rcrb
dec
inc
pushf
mov
xchg
pop
lods
stc
bswap
jns
pop
mov
jge
sahf
inc
and
jle
dec
push
add
fmuls
ret
sbb
mov
icebp
jno
jne
sub
sub
mov
test
adc
stos
dec
jne
push
in
cmp
xchg
hlt
sbb
xchg
pusha
stos
add
data16
bound
call
test
es
pop
nop
mov
add
repnz
subb
jle
inc
inc
jnp
xor
or
pusha
ss
out
jno
pop
int3
jno
or
sub
aaa
or
add
mov
rcl
incl
das
sbb
imul
out
sub
gs
fmul
cmp
cmp
add
mov
fcomps
data16
jns
insl
add
movsl
movsl
in
fsubrl
or
jmp
xor
sbb
into
pop
or
jp
jno
pop
test
cmpsl
pop
subl
mov
jbe
sahf
xchg
repnz
add
cmp
inc
lods
out
or
fisttpl
fs
or
notb
frstor
mov
or
fs
jmp
nop
push
scas
les
rcrb
gs
jb
loope
mov
sub
add
sbb
push
xchg
loop
xor
jle
add
mov
lret
imul
mov
filds
push
sahf
mov
iret
rcll
mov
fs
aad
jp
testl
and
inc
mov
js
in
pop
sbb
loop
call
xchg
ror
ja
jge
call
mov
mov
pushf
iret
lds
bound
arpl
imul
xor
test
inc
mov
pusha
outsb
push
lds
cmc
repnz
cmp
jnp
arpl
cmp
outsb
sbb
inc
lcall
mov
xor
or
and
cmp
sbb
test
fidivrl
xor
dec
rcrb
mov
push
les
xchg
clc
xchg
push
pop
xchg
xchg
or
pushf
in
jb
or
pop
adc
das
cmp
daa
sub
cwtl
daa
jge
loop
cmpsb
jmp
xor
sbb
inc
mov
dec
jno
adc
aam
dec
lea
icebp
mov
cmp
mov
pushf
jg
inc
push
stc
add
cmp
mov
add
xchg
xchg
add
and
fdivrl
aam
push
xor
xchg
jae
and
adc
stc
mov
pop
add
pop
gs
sbb
ss
pushf
xchg
stos
cmp
add
in
jp
xlat
in
mov
fcomp
jp
pop
jp
fistpll
push
divl
pusha
jge
popf
aad
mov
inc
jnp
mov
pop
push
mov
push
adc
mov
ds
jo
repz
mov
dec
enter
dec
fstp
mov
outsl
inc
push
inc
push
xchg
xor
dec
mov
movsb
popa
pop
lret
dec
popa
sbb
cltd
test
mov
lea
jo
mov
cmp
shrl
addr16
sub
aam
test
ret
mov
fadds
xchg
insl
pop
cmp
pop
movsl
cltd
adc
cli
sub
dec
xchg
dec
adc
dec
bndstx
sbb
mov
jns
out
inc
imul
jecxz
test
lods
test
xchg
lds
in
ja
mov
mov
fucomp
push
addl
ds
jo
sub
cmpl
pushl
mov
nop
clc
imul
lock
mov
mov
test
popl
cmp
imul
sub
shlb
or
cmp
fs
or
lret
sbb
loop
mov
pusha
stos
add
inc
inc
dec
in
adc
xor
push
jg
inc
add
icebp
jbe
clc
push
movsl
mov
push
test
imul
mov
push
and
pop
cld
dec
jg
mov
pushf
fnsave
and
cld
popa
mov
in
ja
add
outsb
xchg
rclb
or
bnd
xacquire
jnp
test
sub
test
jae
add
int
fwait
add
stc
adc
sbb
xchg
pop
bound
rorb
add
lret
add
mov
mov
cmp
and
or
lods
gs
ljmp
xor
sbb
sbb
rcl
inc
jmp
test
pop
sub
xor
decl
add
mov
test
cmpsl
dec
xlat
add
mov
xchg
xchg
es
inc
xchg
subb
lret
popa
andb
mov
in
fistpl
test
xor
in
cs
daa
ret
sbb
inc
hlt
divl
lods
pop
loopne
in
xchg
fnstsw
jmp
add
push
data16
out
push
sub
cmpsb
cmp
pop
mov
sbb
cmc
pop
cmpl
xor
movsl
lret
movsl
sub
jg
dec
ja
or
push
push
inc
xchg
fxch
mov
jle
ss
fnsave
lcall
sbb
roll
xor
mov
loop
adc
fidivrl
jle
adc
jae
idivb
xchg
mov
rcll
and
mov
aad
dec
mov
dec
sub
xchg
sbb
pop
imull
test
jg
sbb
in
cltd
add
sbbb
xchg
pop
gs
lock
inc
pop
mov
xchg
adc
shl
pushl
push
xor
dec
cmp
jecxz
push
lock
sbb
ja
dec
lods
sarl
adc
ja
push
int3
jp
push
mov
xchg
pushf
inc
push
mov
adc
xlat
movsb
dec
lods
stos
sbb
outsb
inc
leave
loope
fucomp
or
shl
mov
sbb
div
jns
inc
xchg
outsb
in
dec
inc
xchg
or
xchg
or
pop
shll
xor
inc
and
xchg
les
push
or
dec
daa
cmp
push
mov
mov
sbb
sbb
jne
sbb
lcall
into
jb
jbe
xor
ret
mov
stos
lods
ljmp
and
adc
mull
rcl
xorl
mov
orl
dec
cltd
cs
popa
clc
mov
sbb
pusha
adc
inc
mov
icebp
mov
addr16
add
xlat
das
mov
movb
dec
test
dec
pop
out
fcmovnu
xchg
dec
imul
ljmp
push
movsb
inc
pushl
cltd
out
das
push
repnz
mov
dec
sbb
xor
and
xchg
lds
cmp
loope
cwtl
mov
lock
mov
dec
popa
arpl
pop
aam
xchg
pop
cmpsb
les
inc
adc
xchg
leave
sbb
jmp
sbb
les
mov
ret
xor
mov
cmp
std
mov
xor
lret
int3
imul
push
shll
push
adc
push
ret
mov
mov
iret
subl
andb
fdivrs
mov
cmpsb
push
leave
mov
inc
adc
lods
mov
divb
pop
mov
inc
fsubl
sub
aaa
ds
out
dec
dec
mov
adc
imul
mull
xor
inc
mov
sti
cld
addr16
lret
js
test
adc
xor
add
call
dec
rclb
fldenv
xlat
mov
or
sbb
jns
fcompl
mov
pusha
mov
mov
jge
lret
sbb
mov
mov
out
gs
mov
loope
ret
mov
repz
mov
or
inc
jmp
ficoml
std
lods
adc
jmp
repnz
sti
push
les
arpl
dec
cmpsl
mov
or
nop
sbb
sub
cli
shlb
arpl
xchg
test
sbb
add
jp
ja
nop
lods
outsb
xor
mov
push
push
push
inc
push
in
out
inc
xor
ds
or
mov
pop
ljmp
adc
xor
jmp
jmp
aaa
xor
cltd
aam
test
sub
adc
pop
xrelease
mov
jae
outsl
adc
in
out
lock
ret
lcall
scas
push
sub
test
popf
inc
insl
ja
pop
pop
dec
shr
pop
dec
sarb
daa
lock
rol
cmp
sbb
out
mov
fsubrp
mov
fadd
jb
popf
mov
inc
rcll
jmp
mov
les
dec
mov
mov
orl
xchg
mov
inc
mov
repz
pop
xlat
repz
out
mov
sti
xchg
ljmp
xlat
pop
add
sbbb
insl
adc
mov
dec
sahf
mov
repz
aam
or
fldenv
call
shl
push
repnz
lahf
mov
fmul
hlt
pushf
jle
outsl
add
mov
mov
pop
mov
jnp
mov
push
lahf
sbbl
jg
xchg
into
call
jno
fiadds
xor
jno
out
and
add
sbb
test
es
jp
pop
mov
and
out
dec
out
fisttpll
sbb
movsl
pop
xor
les
nop
je
ret
pop
mov
lock
stos
fcoms
push
sub
lods
sbb
das
cli
movsl
outsb
pop
int
scas
mov
jae
movsb
movb
sbbl
addl
sbb
iret
xor
enter
loop
divb
jge
cmpsl
xchg
cmp
cmc
sbb
xor
enter
add
dec
jno
flds
out
xor
leave
push
stc
enter
arpl
cld
add
jmp
pop
pop
adc
xor
inc
push
enter
push
adc
xchg
std
stc
pushf
adc
cmp
jle
sbb
pop
sbb
loopne
into
dec
mov
test
pop
add
add
inc
jbe
aaa
gs
jb
aam
lcall
xor
adc
pop
ljmp
mov
inc
mov
adc
cli
pop
cmc
stc
jle
repz
mov
repz
inc
ficomps
test
aas
out
insb
cs
jns
pushf
pop
push
adc
push
lock
sbb
scas
insb
xchg
mov
sub
enter
daa
aaa
pushf
xor
add
in
loope
out
mov
or
mov
dec
rorb
ljmp
and
push
jg
dec
mov
inc
pusha
mov
pop
and
leave
je
scas
mov
mov
stc
jne
adc
aaa
add
xchg
jge,pt
jno
inc
dec
pop
cmp
xchg
dec
jno
jb
jg
and
pop
push
add
jb
ljmp
sub
cld
daa
fst
xor
inc
inc
push
push
mov
insl
fisubrs
sbbl
cmp
fmulp
fdivrp
in
js
ds
cmovnp
push
jmp
cmpsb
jle
pop
xchg
fidivl
mov
pop
loope
inc
add
jno
rol
inc
clc
jno
push
ljmp
lods
push
mov
sbb
push
or
je
in
push
adc
repnz
lock
pop
sbb
je
inc
sub
push
test
sbb
push
dec
mov
adc
inc
lods
xchg
sub
rcrl
out
leave
or
add
out
inc
xor
mov
je
adc
mov
hlt
jle
das
fcompl
arpl
cmpsb
cld
pop
mov
dec
and
sti
or
mov
jmp
adc
xchg
cltd
or
cmpsl
xchg
cld
jmp
mov
inc
out
push
lret
mov
into
sbb
inc
push
dec
push
fists
sbbb
mov
popa
or
xor
push
sbb
adc
jb
fstpl
cmp
cmc
js
inc
insl
outsl
pop
repnz
jo
mov
adc
sub
pop
mov
mov
jbe
nop
inc
in
out
fisttpl
or
mov
sbb
or
ljmp
enter
out
dec
dec
sbb
lds
rorl
pop
sti
pop
jbe
dec
ficompl
aam
mov
dec
mov
mov
jmp
adc
mov
add
loope
arpl
dec
call
stos
cmp
fisttpll
mov
rorb
les
cmp
xor
or
jb
lret
std
pop
jg
outsl
lret
decl
insl
sbb
cmp
dec
je
lahf
cmp
in
call
pop
xlat
inc
dec
inc
push
daa
pusha
push
mov
cmpsl
rcrb
rcl
adc
mov
out
pop
jne
iret
sub
ljmp
repz
sbb
push
nop
test
xchg
stos
sahf
jnp
and
mov
sbb
outsb
lahf
add
imul
fstps
sarl
iret
repnz
stos
js
mov
arpl
mov
mov
pop
and
mov
call
xchg
xor
jg
jnp
shrl
ss
ljmp
or
xchg
cmp
mov
jg
sub
and
or
mov
aam
cltd
mov
cmp
insb
cmp
mov
xchg
fidivs
inc
mov
jl
dec
dec
subb
push
cmp
subl
jnp
mov
or
xchg
xchg
lods
imul
pop
dec
and
fisubs
jg
push
mov
add
in
sbb
dec
outsl
test
jb
dec
mov
push
mov
adc
or
dec
cs
mov
push
sbb
pop
sbb
aaa
mov
jg
orl
inc
sbb
mov
dec
rorl
adc
pop
sbb
ud0
fstpt
push
jge
xchg
dec
sar
aas
dec
mov
aas
jne
aam
xchg
pop
mov
stc
mov
cmc
popf
mov
mov
shr
inc
jle
mov
jno
push
jb
bound
sub
roll
loopne
sub
xor
xor
ret
leave
mov
in
dec
test
int
sub
leave
out
int3
sbb
push
xor
aas
mov
jmp
rcrb
push
mov
ror
mov
iret
mov
pop
lcall
adc
mov
or
lret
aas
icebp
inc
jne
cmp
fimull
pusha
mov
test
xlat
or
in
lcall
std
pop
lock
mov
cmp
jnp
pop
push
ds
mov
add
dec
insb
jb
rcrb
div
push
xor
sbb
stos
xor
imul
cmp
inc
inc
or
sbb
rcrb
push
add
lcall
incl
sub
add
mov
inc
xchg
das
out
lea
jne
inc
fsts
jne
mov
aam
mov
push
jp
push
sbb
scas
sbb
add
inc
es
mov
insl
and
imul
fwait
dec
xchg
clc
nop
add
push
mov
cmc
vpunpcklqdq
dec
popa
sub
in
aas
loop
lahf
add
int
push
scas
cmp
int
xor
sbbl
inc
vcvtss2si
imul
std
fs
ret
xlat
adc
test
test
jge
mov
popa
pop
inc
adc
xor
rolb
xchg
pop
jne
jl
jnp
adc
pop
out
pop
adc
mov
enter
sbb
or
pop
mov
fs
push
in
jl,pn
shlb
aam
into
dec
mov
push
loopne
xchg
cmp
stos
push
and
stos
jb
in
popf
fildl
in
dec
add
scas
xchg
jecxz
jge
fldl
loope
pop
sbb
dec
lahf
dec
lods
mov
sub
pop
cmp
push
dec
and
push
insb
mov
popa
imul
pop
push
adc
push
loop
aad
iret
xor
add
push
and
pop
stos
pop
movsb
arpl
adc
jge
lcall
mov
std
and
xchg
lret
ja
mov
or
cltd
mov
jnp
cmpl
adc
jae
push
popa
inc
xchg
or
lcall
popf
mov
popa
jne
xchg
fsub
rcrl
loop
ja
add
mov
mov
inc
das
pusha
decl
es
xchg
inc
dec
pop
cmp
mov
fmuls
jno
pop
scas
add
jl
sbbb
stos
dec
aam
out
jle
mov
jb
gs
stc
adc
jbe
push
mov
and
xor
outsl
out
add
aam
cmpsb
fs
shr
push
or
adc
popf
hlt
sahf
sub
mov
orl
dec
test
test
sub
lret
repz
push
mov
mov
fs
cmp
shll
mov
dec
rorb
test
mov
xchg
xchg
cmp
push
dec
push
scas
popa
dec
test
js
adc
daa
inc
repz
mov
inc
pop
mov
inc
and
scas
aaa
cltd
adc
popa
and
add
sub
mov
jg
ret
mov
scas
fcomps
data16
jnp
push
mov
aaa
imul
sub
add
ficompl
lods
gs
mov
test
bound
pop
movsl
pop
das
cmp
lret
sbb
jbe
cmpsb
or
ljmp
xor
insl
rcr
ficomps
mov
mov
rolb
outsl
pop
dec
pop
push
es
inc
dec
test
ficoml
mov
iret
jae
inc
sti
inc
jge
std
inc
dec
push
cs
or
jge
mov
popa
jbe
ds
repnz
dec
cmp
fidivl
out
xchg
jo
jge
psrlw
lcall
rorl
xor
xchg
inc
mov
rcr
cld
leave
test
aam
mov
add
aaa
cmp
das
or
cmp
cbtw
ret
mov
into
bound
jns
xchg
and
imul
xor
cmp
mov
in
mov
mov
or
rclb
scas
je
test
fisubl
es
lock
adc
xchg
xor
cmp
subl
mov
rcrl
dec
mov
in
aas
int3
stc
arpl
cli
fcoms
mov
loopne
scas
push
pop
mov
mov
sbb
repnz
jge
repz
stos
jae
add
pop
arpl
mov
sti
out
xchg
sub
pop
sbb
std
inc
jecxz
xchg
std
sub
ret
je
daa
xchg
mov
sbb
mov
outsb
arpl
popf
add
stos
js
sbb
or
add
and
sub
sarb
lcall
push
fnstenv
mov
push
mov
push
add
and
push
mov
jle
int
xor
or
sbb
mov
loop
outsw
leave
jae
in
xchg
addb
mov
inc
sbb
aaa
insl
add
loop
push
jnp
fnstcw
adc
imul
jecxz
dec
arpl
movsb
jecxz
pop
mov
out
mov
js
repnz
dec
adc
fimuls
or
sbb
dec
rolb
push
scas
sub
xchg
mov
adc
lret
aam
or
aaa
lods
iret
fimuls
add
adc
clc
sub
dec
orl
enter
out
andb
sbb
xor
mov
xchg
repnz
scas
scas
mov
jbe
fcoms
stos
inc
mov
sbb
adc
dec
lret
jbe
sub
icebp
mov
sub
lods
sub
ss
sbb
clc
aam
xor
test
xor
or
cltd
dec
pop
sbbl
inc
iret
notl
dec
daa
pop
adc
dec
push
cltd
or
lahf
imul
cmp
jle
out
and
fcmovb
add
mov
mov
xor
dec
adc
outsl
push
and
das
cmp
loop
rclb
sub
add
adc
sub
rclb
enter
and
cmp
jp
loop
xor
xlat
out
add
xor
sub
inc
lcall
dec
xor
pop
ljmp
data16
mov
adcl
xchg
or
mov
rcrb
cmp
icebp
fsts
je
or
in
addr16
push
sbb
gs
cmc
inc
icebp
shlb
cmp
mov
mov
ret
sbb
mov
push
mov
cli
dec
icebp
jnp
pushl
sahf
pop
xor
mov
pop
pop
ja,pn
test
mov
lods
pop
lret
fs
and
or
xor
das
add
stos
iret
mov
mov
mov
repnz
jmp
gs
push
cwtl
pop
icebp
fiaddl
mov
dec
loopne
pusha
push
pop
push
lock
iret
scas
xchg
sbbb
into
inc
test
mov
imul
xchg
test
cltd
push
xchg
cld
test
push
popf
sbb
into
cmpsl
push
jns
pop
sbb
aaa
or
ret
mov
mov
adc
rol
push
fldcw
ljmp
sbb
cmp
insb
hlt
sbb
imul
in
cmpsl
mov
or
rclb
popf
add
cmp
into
orl
sbb
inc
add
addr16
lods
jge
pushf
pop
xchg
fsub
ss
pop
inc
cmpsb
sarl
and
push
pop
clc
mov
cwtl
movups
inc
dec
cld
lds
scas
ret
cltd
adc
roll
add
ret
dec
dec
outsl
test
imul
das
iret
sbb
loopne
xchg
push
cmp
push
jns
and
fiaddl
mov
fistps
push
or
repnz
cmp
ror
jbe
in
xchg
cmp
nop
xchg
jmp
mov
or
push
lea
dec
arpl
rcrl
pushf
pusha
pop
dec
mov
add
push
daa
loop
and
je
je
jo
sbb
sbb
loopne
popf
repnz
daa
in
pop
scas
inc
loope
sbb
cmp
pop
icebp
and
ja
sub
and
ss
sub
xor
scas
pop
aas
iret
sahf
insb
lahf
js
iret
lret
and
fdivrs
test
jbe
and
cmp
jbe
push
loopne
orl
dec
mov
dec
in
push
sbb
pusha
les
les
cmp
dec
ret
cmpsl
jmp
jl
das
cmp
shl
or
fdivrl
mov
dec
xor
jle
inc
cwtl
or
in
sub
xlat
mov
mov
or
gs
xchg
xor
jno
xor
dec
adc
out
sarb
jge
inc
push
rclb
cmpsl
stc
lock
aaa
inc
push
orb
insb
xchg
mov
ret
cmp
xor
mov
movsl
stos
push
sbb
inc
dec
inc
xchg
fs
hlt
or
pop
cmp
xchg
sbb
ds
popa
cmpsl
pop
dec
in
inc
pusha
cs
cmp
push
and
into
shlb
push
jge
imul
mov
dec
mov
and
fsts
adc
push
fnstsw
pushf
dec
xor
aam
mov
pop
adcl
cltd
lret
pop
dec
and
cs
aam
es
cmp
mov
add
and
push
cwtl
push
or
hlt
sub
inc
std
lock
sub
dec
xchg
jge
mov
das
mov
lea
imul
sbb
and
mov
pop
pop
addr16
jne
repz
dec
dec
ret
xor
add
inc
loopne
and
jmp
or
dec
fcompl
hlt
jo
repnz
roll
stc
ret
cs
ror
in
adc
or
inc
adc
data16
push
lret
or
pop
and
or
mov
cmp
jns
gs
xchg
add
inc
mov
decb
inc
loope
mov
insl
mov
sub
jmp
or
repnz
adc
rcrb
movsb
loopne
test
std
dec
insb
stos
cli
arpl
jl
aaa
test
inc
mov
repnz
mov
cltd
and
xlat
mov
call
pop
popa
inc
rcrl
xor
mov
mov
mov
cmp
add
popf
into
test
jmp
mov
ret
xor
push
jb
mov
pop
lret
out
and
xchg
nop
mov
shrb
mov
js
fs
sbbl
leave
out
sarl
adc
rcrl
cmp
bound
push
mov
sub
push
ss
push
pop
ljmp
test
gs
sub
sbb
adc
xchg
out
dec
fs
or
jns
movsb
xchg
xor
shlb
in
mov
fsubs
jae
ficompl
movsb
in
push
mov
fldt
rol
es
imulb
xchg
js
adc
xchg
mov
out
in
into
in
inc
add
dec
rcll
mov
jmp
ja
ljmp
push
bound
lret
fidivrl
scas
pop
bound
mov
pusha
dec
and
es
dec
pop
mov
pop
mov
sbb
add
inc
pop
arpl
pop
pop
out
std
fstpl
test
jbe
inc
je
lcall
xor
adc
jmp
jbe
cwtl
sub
push
test
cmpsb
mov
mov
fnstcw
mov
fmulp
ss
je
das
push
inc
les
cli
popf
and
adc
mov
rol
fnsave
sti
mov
fistps
sarb
fmull
jmp
lcall
clts
inc
mov
mull
jno
xchg
gs
cmp
fistpll
inc
dec
xchg
push
xchg
fldt
mov
push
mov
lahf
mov
insb
ret
cmp
adc
xchg
mov
pop
ret
sbbl
stos
mov
jb
lret
adc
test
dec
or
xchg
or
xor
xor
test
test
test
xlat
std
or
mov
cmp
jno
xchg
push
lahf
je
stos
dec
push
into
cwtl
repnz
inc
add
ret
xor
inc
ja
or
inc
scas
pop
mov
mov
andl
ja
rorb
xchg
cmc
lock
andb
dec
test
rorl
and
loop
fwait
sbb
in
xchg
in
imul
mov
cmp
das
ljmp
repnz
je
ja
cmp
pop
ss
jecxz
mov
ja
jmp
xor
out
or
enter
mov
jl
jp
ja
fildl
aad
lea
push
add
mov
sbb
and
jno
das
ret
cli
inc
enter
and
add
and
mov
adc
call
mov
xor
jmp
mov
data16
add
add
mov
sub
inc
pop
lcall
mov
sbb
lret
push
sub
enter
mov
sub
cmp
das
or
push
pop
inc
and
or
addb
cli
insl
or
out
arpl
mov
rorl
imul
incl
aas
xlat
jno
cmpsb
int
jne
mov
subb
insl
insl
and
or
jmp
push
or
xchg
lock
adc
scas
loopne
and
stos
shll
int
inc
or
sbb
in
pop
out
movsl
out
mov
pand
jge
jle
aas
and
lds
jmp
ja
inc
jns
or
mov
mov
shl
stos
daa
fcmovnu
test
jns
cld
in
mov
and
jge
push
leave
aam
out
cmp
cld
or
push
lret
ffree
cli
cmp
fdivs
pop
cmpsb
fistpll
and
mov
inc
iret
aam
mov
xrelease
cmp
xor
sti
mov
icebp
xchg
mov
xor
jp
push
xchg
push
out
push
lea
dec
xlat
and
insb
cld
inc
adc
movsb
notb
add
xor
popa
pop
aad
lods
loopne
mov
imul
mov
stos
cmc
stos
adc
xchg
vcomiss
std
inc
mov
gs
loopne
xchg
aas
push
dec
imul
push
cmp
inc
sub
mov
pop
lret
ret
or
add
add
and
outsb
pop
xchg
fisttps
jmp
sub
sub
mov
lret
jg
int3
inc
or
mov
jno
push
mov
pop
inc
push
sbb
ja
gs
cmp
popa
adc
cld
out
mov
out
mov
test
jge
sub
loope
jne
lahf
or
mov
pop
jp
clc
jge
dec
xor
push
mov
clc
sahf
orb
arpl
cmpl
mov
into
les
mov
and
xchg
add
lahf
mov
push
dec
lahf
loopne
mov
les
sti
ss
jbe
inc
bt
mov
push
daa
dec
pop
jg
mov
int
jge
mov
cmp
and
insl
test
inc
cs
or
pop
xchg
sbbl
in
adc
ret
addr16
push
lcall
jae
xor
rol
cmp
gs
mov
enter
fs
imul
js
dec
ljmp
mov
push
and
jmp
fs
inc
ret
les
pop
dec
mov
sahf
in
enter
xor
nop
or
xorb
imul
fdiv
jb
in
pusha
lret
test
fstps
faddl
pop
daa
cli
xchg
in
cld
inc
cmpsl
daa
lock
addr16
iret
dec
inc
mov
js
add
adc
out
or
cmpl
inc
mov
sbb
je
scas
popf
pop
test
shll
ljmp
adc
lcall
mov
stos
scas
jae
sub
add
movsl
stos
xor
push
fnstenv
cmp
or
imul
cld
inc
dec
sbb
xchg
cmp
test
mov
mov
insb
dec
pop
inc
pop
mov
dec
sub
add
inc
jmp
into
pop
mov
enter
mov
cmp
out
mov
movsl
std
or
jo
pop
xchg
pop
imul
out
jo
test
mov
into
pop
fsubrl
shrb
mov
movsl
mov
xchg
mov
shrl
pop
shufps
add
or
ja
mov
fstl
adc
dec
pop
or
cli
jl
jno
add
xchg
inc
sbb
jnp
shll
push
adc
pusha
jno
or
sub
jecxz
dec
je
xchg
jae
fildll
shlb
ficompl
cmp
cwtl
sub
pop
jmp
sbb
insb
pusha
mov
cli
mov
xor
sbb
lea
inc
mov
xchg
jp,pn
data16
jecxz,pn
mov
jbe
sbbl
xor
arpl
xor
mov
xor
movsb
jo
subb
fbstp
xor
or
pop
sbb
fcomps
out
and
pop
cmpsl
push
pop
push
sub
and
pop
and
pop
pusha
sbb
dec
dec
adc
ljmp
int3
fldcw
pop
xchg
add
repz
sbb
shlb
stos
repnz
ret
bound
enter
pop
push
xor
adc
sarb
push
cmpsb
cwtl
jg
adc
insb
subl
dec
lea
decb
xor
xchg
fmuls
push
jmp
mov
and
inc
sbb
push
push
mov
dec
jbe
je
scas
push
xlat
or
loop
std
enter
cmpsl
lods
cmpsl
ja
int
jge
into
inc
inc
mov
inc
popf
pushf
pushf
imul
sub
cltd
mov
cmpsl
dec
dec
insb
inc
dec
xorb
outsl
inc
hlt
cmp
jecxz
lret
ret
xor
outsb
mov
mov
test
inc
flds
inc
cmp
pop
pop
hlt
adc
pop
cmp
pop
push
test
lds
xchg
scas
adc
jmp
jge
mov
dec
and
es
xor
js
inc
pop
test
xchg
arpl
subb
sub
rorb
push
cvtps2pi
popa
stos
das
pop
icebp
imul
ljmp
xchg
loopne
cli
int3
and
inc
cmp
adc
and
in
shlb
xlat
mov
dec
bound
push
jno
push
mov
jae
or
pop
fistps
mov
mov
faddp
add
movsb
insb
shr
and
les
in
into
jge
jmp
out
fisubrs
fistps
lds
jb
stos
jg
xchg
add
loopne
rol
orb
jnp
gs
enter
in
sbb
mov
pop
cmp
js
jmp
inc
pop
dec
jae
cmp
fsubs
push
mov
xchg
mov
xor
movsl
lcall
in
addb
jno
sbb
jecxz
sbb
in
cmp
adc
out
xchg
int3
mov
ljmp
outsl
in
ret
outsl
loop
push
ret
pop
test
pop
inc
test
jnp
mov
inc
add
mov
add
dec
adc
mov
or
adc
sbb
push
push
adc
jmp
dec
movsl
dec
push
andb
fdiv
pop
xor
lret
es
shlb
loopne
xchg
dec
xchg
xchg
mov
jge
mov
psllq
stos
cmp
xor
mov
mov
dec
add
mov
stc
jg
inc
or
inc
inc
cmpsl
adc
inc
std
mov
fisubrs
pop
sub
sbb
push
dec
push
cmp
mov
push
mov
rorl
lahf
inc
sbb
fwait
in
lock
repnz
inc
sbb
out
hlt
mov
popf
push
dec
adc
movsb
add
mov
xor
xchg
loope
stos
xor
pop
divl
shl
mov
data16
inc
push
ja
sti
push
loopne
pop
xor
jb
adc
lods
cmc
cltd
mov
and
das
pop
jmp
call
xchg
imul
in
cmpsb
cli
or
call
nop
sub
adc
pop
ss
push
xchg
pop
push
dec
push
or
mov
dec
hlt
or
fs
adc
lahf
pop
movsb
sbb
sbb
inc
scas
loop
xchg
mov
dec
loopne
mov
dec
test
cmp
mov
inc
adc
out
test
xchg
mov
leave
loopne
cltd
jl
inc
sbb
orl
mov
ss
mov
test
mov
add
adc
call
int
and
pop
add
mov
jle
inc
mov
adc
hlt
pushf
jge
jne
movsb
sub
lcall
xor
add
pop
sbb
ret
out
jb
pop
inc
call
pop
js
aaa
cld
sub
out
fdivrs
lock
dec
nop
sbb
xchg
iret
sub
lahf
or
jle
in
pop
iret
xchg
lea
das
ljmp
rcll
xchg
sub
dec
sbb
aam
jg
jmp
in
pop
pop
loop
lret
arpl
cld
mov
push
out
push
vcmppd
movb
ljmp
cltd
dec
js
mov
flds
dec
pop
jae
jno
outsl
lret
clc
xchg
jbe
lcall
cmc
add
mov
mov
jns
xchg
call
jg
mov
pop
sub
or
add
pop
xchg
jp
xchg
jmp
adc
daa
xor
mov
jp
into
gs
jne
imul
mov
out
xor
in
lahf
add
dec
pop
test
inc
inc
pop
fsubrl
or
inc
test
inc
jbe
xor
out
cmp
xchg
pop
add
pop
cmp
pop
and
mov
sub
fcoml
add
icebp
cltd
scas
fdivl
sub
mov
out
xor
ret
and
sbbb
sub
or
add
mov
pop
je
out
xorl
lret
push
inc
sub
pushf
jne
jae
push
dec
mov
dec
mov
leave
push
pop
push
subl
dec
fistps
jnp
pop
js
cmp
add
xor
dec
inc
pop
stc
ret
bound
outsb
push
pop
gs
pop
jmp
int3
and
shr
mov
rcrb
xchg
imull
sub
mov
or
loopne
push
loope
fisubrl
mov
lods
push
mov
ss
test
mov
jl
in
call
ljmp
aam
jne
push
test
mov
push
scas
shl
mov
push
repnz
stc
push
or
lcall
loopne
xlat
lahf
adc
call
mov
sub
jg
sub
icebp
scas
std
sbb
dec
mov
ret
lret
jne
adc
dec
in
adc
shrb
rorl
push
fsts
scas
mov
push
inc
pushf
mov
ss
aaa
cmp
cwtl
mov
cwtl
xorb
xchg
aad
sub
push
pop
mov
fdivp
scas
inc
cmc
pop
xchg
loope
jp
ja
test
add
or
and
cmp
insl
mov
inc
xlat
jmp
or
push
pop
sub
icebp
movsb
push
sub
mov
arpl
push
call
add
rorb
cli
repnz
fisttpll
adc
fidivs
jno
mov
mov
mov
sub
cs
loope
dec
or
outsb
mov
adc
add
test
mov
in
imulb
addr16
inc
xchg
adc
jbe
cmp
sub
push
stos
inc
roll
mov
ja
jl
shl
aaa
adc
rclb
adc
popa
andb
pop
out
or
jl
les
xchg
or
push
shll
outsb
rcll
andb
push
data16
mov
int3
xor
mov
mov
bound
cmp
adc
dec
iret
aam
dec
push
jns
inc
inc
loop
add
sub
xlat
sti
je
fisubs
leave
pop
push
inc
pop
arpl
or
xchg
cwtl
pop
orb
mov
movups
sti
or
pop
xor
add
mov
fbstp
mov
sahf
mov
push
stos
mov
fisubs
shll
into
sahf
movsb
sub
iret
add
fstl
jno
pop
fsubr
sub
mov
push
mov
mov
cli
xor
add
xor
aam
sti
fidivl
push
icebp
loope
icebp
mov
pop
outsb
inc
add
inc
stos
mov
cli
inc
lret
push
push
loope
scas
in
hlt
mov
sbb
mov
pop
std
adc
adc
xchg
ds
cs
mov
clc
and
hlt
test
and
xlat
cmpsb
mov
mov
pusha
icebp
addl
jg
cmpsl
imul
push
jno
cmp
push
andb
sahf
mov
sub
adc
and
fnstenv
xor
mov
and
push
jo
aaa
mov
sar
mov
mov
inc
mov
jg
in
lret
fwait
mov
xchg
and
sbb
sbb
daa
mulb
lret
pushf
pop
push
das
inc
and
shl
xchg
dec
jecxz
mov
jecxz
fwait
hlt
jb
cltd
push
inc
inc
xchg
les
sbb
jle
pop
imul
jne
rcl
mov
and
hlt
push
jno
outsb
pop
ret
bound
fs
inc
out
sbb
in
mov
aas
fmulp
repnz
mov
add
cmc
and
dec
lea
adc
stc
out
xchg
mov
jmp
es
or
mov
sub
dec
dec
lock
sub
lcall
sti
js
adc
mov
push
sub
out
out
fisubs
movsl
push
xchg
ds
fbld
lahf
inc
sub
inc
or
arpl
and
clc
mov
jno
mov
lds
fsubr
int3
cmp
sub
push
mov
bound
aad
stc
xor
inc
adc
movsl
sti
lods
push
je
push
sahf
sub
xchg
fisubrl
jo
inc
sub
adc
add
mov
mov
sbb
ret
inc
call
clc
jo
cmpsb
add
xchg
scas
dec
mov
shrb
xor
jmp
add
pop
mov
dec
push
sbb
std
lret
pushf
pop
and
lcall
jl
inc
aam
xor
in
push
xchg
cmp
adc
stos
add
jnp
pop
pop
call
movsl
or
xchg
iret
mov
stos
arpl
xor
add
int3
lret
js
and
mov
jbe
push
insb
out
adc
cmp
cli
sbb
pusha
outsb
pop
xchg
add
mov
mov
cltd
jge
pushf
fwait
bound
jns
mov
xchg
xor
orb
adc
mov
add
add
mov
add
inc
insl
jne
cmpsl
inc
imul
mov
adc
mov
cmp
je
jo
dec
test
int3
add
sub
out
adcb
mov
lods
xor
sahf
adc
dec
repnz
jo
or
cs
nop
sbb
fsubrs
cmp
sub
cwtl
loope
jge
lret
lret
gs
lret
adc
not
adc
icebp
ds
out
xchg
add
fidivrl
mov
pop
call
jecxz
sahf
pop
aad
push
mov
popa
sbb
mov
mov
pop
and
cltd
ljmp
rolb
movsl
pop
stos
test
stos
es
xrelease
cmp
jmp
jmp
fcomps
mov
jmp
sbb
data16
cmp
xchg
es
stc
jo
mov
jnp
cmp
lods
dec
cmp
js
jle
pop
jbe
jae
sbb
push
out
dec
out
sbb
cmpsb
lods
int
rcll
mov
dec
cld
enter
mov
cmp
in
pop
sti
mov
mov
cmp
xchg
fld
sahf
push
and
movsl
pop
lods
mov
cmp
inc
mov
cmp
push
inc
jo
sbb
or
xchg
cmp
aaa
or
roll
mov
sub
scas
aas
push
outsl
pop
dec
aas
fsub
jecxz
iret
jmp
lahf
xchg
fildll
and
dec
sbb
fwait
int
xchg
mov
in
or
xor
add
mov
sub
dec
lret
jle
int
xor
xchg
and
sub
adc
sub
add
xor
fs
dec
push
loop
or
ljmp
mov
rcrl
jecxz
and
jmp
and
jmp
and
dec
pop
jp
and
ds
pop
mov
push
bound
jns
jb
push
push
lcall
cmp
lea
mov
fistpl
icebp
mov
xchg
fimull
out
negl
pop
mov
sub
mov
sbb
mov
mov
testl
adc
ror
jl
sahf
fwait
pop
movsl
int3
sbb
movsl
into
push
shrb
pop
or
aas
sbb
popf
fwait
subl
jb
mov
lret
movsb
inc
mov
jns
stos
jnp
leave
out
adc
and
pop
jae
xchg
rolb
pop
out
and
mov
mov
cmpsl
lock
aad
push
pushf
mov
mov
aaa
push
sub
jecxz
lcall
sbb
ret
pop
jl
add
imul
aad
repz
inc
faddl
xlat
in
and
mov
mov
and
ret
in
mov
aam
es
mulb
push
scas
in
lcall
scas
in
out
push
push
leave
mov
xchg
inc
test
cmp
ficoml
andb
dec
sub
scas
loopne
lock
movsb
sub
sbb
sbb
lret
daa
nop
dec
arpl
dec
mulb
jo
jg
pop
dec
lea
and
int3
in
jmp
sub
mov
inc
jle
jge
cwtl
or
push
jae
bound
cmp
xchg
sbb
pop
sarl
cmp
dec
xchg
mov
and
sbb
xchg
outsl
iret
inc
mov
xchg
mov
or
push
call
xchg
or
xchg
sbb
inc
inc
pop
sub
stc
xchg
sub
dec
and
pop
hlt
and
mov
xor
inc
sbb
jno
cmp
lds
mov
imul
sub
loope
cld
xchg
cvtps2pi
outsl
movsb
lods
push
addr16
out
pop
aas
lcall
mov
pop
lahf
and
test
int
dec
rolb
shll
push
rorb
add
add
lcall
in
cmp
sbb
loopnew
sbb
idivb
and
stc
and
xchg
mov
add
out
rolb
cmc
stos
adc
iret
inc
xor
test
xor
lods
lret
pop
fsubrs
test
xchg
rorb
dec
leave
mov
xor
cmp
cmp
pop
inc
dec
outsl
sar
jne
aad
mov
cwtl
mov
dec
sub
movsl
add
xchg
lret
sti
and
jae
sti
inc
cmp
add
xchg
mov
add
jne
add
inc
mov
in
mov
adc
add
push
dec
xor
orl
jnp
movsb
adc
mov
or
addb
sub
mov
push
xchg
inc
mov
sub
xlat
stc
iret
clc
mov
je
mov
adc
jne
jbe
add
outsl
jle
insb
push
push
or
jle
das
or
inc
repz
push
insl
mov
mov
out
mov
cmp
loopne
cmp
push
jg
test
cmp
sarb
xchg
and
inc
repnz
add
jns
shll
jb
nop
mov
rcrb
in
ret
xlat
sbb
mov
scas
xor
sbb
and
mov
in
cmp
add
int3
jb
cld
mov
into
in
pop
shlb
int3
xor
push
sbb
xchg
and
xchg
mov
adc
and
sbb
mov
dec
jne
sbb
daa
xchg
es
pop
mov
scas
jns
and
rorb
mov
add
mov
cmpsl
rolb
mov
pop
outsb
mov
sti
ret
inc
xchg
int3
cld
xlat
in
lret
push
loopne
enter
pop
fdiv
adc
xchg
jnp
jne
mov
mov
pop
sub
dec
pop
jge
sub
mov
filds
sbb
lods
cmp
lret
jb
test
cmp
stos
dec
fs
lods
imul
adc
adc
or
cmp
inc
movsl
dec
and
lret
loop
leave
mov
leave
and
cld
fsts
push
shll
dec
inc
dec
add
push
inc
mov
mov
inc
jb
xor
mov
stos
stos
sub
mov
push
pop
mov
call
into
jp
inc
push
xor
push
cmpsl
ret
xor
mov
pop
sti
mov
dec
icebp
outsb
in
test
cmpsl
push
or
cs
stos
jge
pop
stc
mov
inc
push
aas
dec
adcb
inc
add
xchg
adc
fsubrs
notl
scas
jno
jmp
gs
xchg
scas
and
inc
sbb
pop
imul
cmp
lahf
jle
jecxz
xchg
sub
add
fisubs
inc
xor
ret
or
inc
push
outsl
xor
cli
mov
lcall
enter
jp
mov
js
out
aas
jno
xchg
movsb
cmpsl
gs
cmovns
add
pop
mov
orl
sub
dec
mov
in
rorb
push
aam
pop
pop
in
mov
pop
adc
aam
push
inc
mov
pop
repnz
mov
aad
push
lret
cmpsl
iret
movl
insl
xor
jo
cmpb
or
and
nop
push
inc
or
sbb
lds
js
sbb
repnz
adcl
rcrb
fwait
cmp
bound
cmp
mov
jne
hlt
fwait
sbb
insb
inc
test
dec
or
fildll
push
adc
fwait
or
cld
imul
push
push
in
jo
inc
sti
adc
cltd
jne
shll
rcr
jle
int3
jae
xchg
mov
in
jg
cld
mov
dec
push
movsl
mov
orb
xor
xchg
aaa
clc
gs
cmc
xchg
inc
int
xlat
fiadds
stos
fisubs
test
jne
inc
fs
xor
push
loop
stos
ret
fisubrs
or
mov
ljmp
mov
inc
jecxz
cld
adc
push
jmp
cwtl
aaa
inc
cs
nop
insb
jmp
in
mov
or
aas
movsl
adc
xchg
imul
and
stos
lods
xor
fwait
push
das
shll
sub
sbb
dec
and
in
ret
push
lods
pop
cmc
pop
add
jnp
mov
scas
mov
mov
fisttpll
dec
push
sahf
out
xor
mov
stos
push
sub
push
mov
cmp
je
sub
or
add
pushf
mov
mov
pop
xlat
mov
xor
or
clc
popa
sub
dec
inc
iret
mov
push
or
enter
push
iret
inc
sahf
in
stos
cmp
push
es
mov
lods
sub
xor
inc
mov
les
inc
add
cmp
xor
fistpl
xchg
loope
jmp
daa
push
sbb
dec
cmc
xchg
es
push
insb
pushf
inc
mov
pop
adc
jge
jns
push
fistps
stos
call
lock
xor
lods
es
je
pop
inc
inc
adc
ret
jle
sbb
xor
push
xchg
mov
mov
filds
ljmp
aam
cmp
mov
xchg
sub
cltd
pusha
incb
mov
pop
push
bound
sub
out
jcxz
stos
addr16
or
adc
cli
ficoms
test
xor
imul
jbe
cltd
cwtl
mov
pop
sbb
lea
aaa
pop
loope
repz
inc
out
popf
fs
ret
arpl
push
daa
mov
das
pop
mov
dec
sbb
sahf
shll
jecxz
test
jno
inc
sar
dec
sub
mov
xchg
mov
mov
and
mov
add
test
adc
imul
sbb
in
jae
repz
xchg
test
pop
xchg
in
or
pop
imul
loope
ss
imul
shrb
das
add
sub
xchg
jecxz
ds
std
jnp
dec
aaa
fisubrl
sbb
test
jg
mov
and
pop
jg
sbb
jbe
aas
lods
movsl
lret
adc
ficoms
inc
cmp
push
test
jno
jmp
sbb
cli
jmp
scas
in
ds
and
push
aad
rcl
das
jge
add
mov
and
repz
add
mov
mov
test
aas
test
xchg
jmp
test
stc
push
add
das
dec
jmp
xchg
pop
xchg
mov
fisubrl
fistpl
mov
leave
pop
mov
xchg
xchg
sub
data16
or
pop
data16
ds
cwtl
in
adc
jmp
ja
push
movsb
xchg
xor
push
pand
adc
adc
xchg
js
jmp
sahf
or
pop
xor
jge
xor
dec
jmp
daa
leave
les
mov
inc
cmp
or
aas
sub
or
jo
cmp
mov
jmp
cmpsl
or
xchg
cmp
sbb
mov
jle
fnstsw
aad
mov
jge
cmp
sbb
dec
repz
test
cmp
roll
fdivrl
push
rcrl
std
xchg
mov
jmp
sahf
std
dec
rolb
dec
adc
or
xor
aam
cmp
and
lods
decl
aad
pop
xor
jb
arpl
inc
out
stc
mov
cmp
dec
and
ret
fidivrl
lret
movsb
push
xchg
cmpsl
daa
or
imul
pushf
in
cmpsb
cwtl
out
cmpl
mov
jns
xchg
sub
cmpsl
sbb
and
addr16
mov
das
leave
sbb
fldl
push
iret
hlt
add
pop
repz
popa
mov
in
adcb
fimuls
sub
in
cmp
in
dec
out
ret
in
jnp
ja
mov
lahf
and
pop
sub
das
mov
pusha
fdivrl
lock
pop
lret
mov
add
addl
mov
scas
cmp
decl
sub
jne
mov
cmp
shrb
jns
jle
adc
lahf
and
xchg
xchg
sbb
mov
xchg
mov
or
push
rorb
sub
mov
xchg
out
mov
lret
add
xchg
cli
and
pop
mov
std
jg
mov
push
fisubrs
mov
sub
mov
rclb
inc
push
adc
mov
es
in
dec
and
repz
jnp
out
add
imul
jg
push
js
fimull
jecxz
dec
outsl
loopne
and
push
test
cmp
mov
mov
jno
dec
stos
pop
xchg
popa
mov
mov
lcall
movsb
nop
out
lock
movsb
fldenv
ja
dec
push
lea
mov
daa
xor
mov
clc
mov
pop
pop
mov
arpl
mov
mov
push
leave
std
cmpsl
movsl
and
push
adc
lcall
imul
add
jae
push
sbb
fwait
push
mov
jns
jl
xchg
scas
and
xchg
mov
les
mov
data16
ja
test
pop
jae
mov
sub
mov
fistl
jo
xchg
test
dec
enter
jo
imul
leave
lock
xchg
or
push
add
pop
dec
call
fidivs
int3
mov
mov
mov
xchg
mov
out
imul
imul
and
xor
lea
and
add
mov
or
mov
mov
inc
aaa
inc
fnstenv
insl
gs
sub
in
mov
add
push
cltd
jmp
push
dec
mov
fnstenv
inc
ret
test
stos
iret
add
in
sub
or
mov
test
test
cmp
push
add
lret
push
sbb
mov
push
jb
ret
addl
in
sub
and
xor
cld
cltd
inc
jo
sub
xlat
add
lret
add
std
pop
addr16
adc
sahf
sbb
adcl
fdiv
into
push
out
dec
cmc
popa
push
stos
mov
loopne
push
repz
mov
pop
xchg
jmp
add
push
xchg
fs
xor
mov
push
lahf
arpl
aam
lcall
inc
xchg
adc
movsl
xchg
xchg
and
xchg
dec
pop
fwait
pop
xchg
cmpb
clc
sub
dec
xchg
std
shll
mov
push
pop
mov
das
cld
call
inc
push
push
repz
xlat
inc
mov
loope
adc
cmp
jecxz
jns
or
add
insl
mov
or
cmp
or
sub
orl
dec
in
mov
inc
push
pop
scas
lock
pop
in
arpl
cmpsb
icebp
or
mov
rcl
stos
mov
daa
push
paddd
lahf
xor
adc
movsl
test
pop
ret
aaa
cwtl
and
mov
sub
and
jp
pop
sub
stc
xchg
in
pop
mov
int
into
addr16
lock
in
scas
cmp
sbb
inc
jge
pop
daa
xor
mov
stos
ret
ja
adc
in
outsl
and
mov
popa
jecxz
cwtl
out
cmpsl
fidivl
movsl
enter
jbe
or
jno
scas
int
les
mov
jge
cli
xchg
in
mov
iret
in
inc
xchg
mov
mov
cld
fsubl
inc
add
imull
jne
js
popf
cmp
clc
movsb
xor
adc
mov
push
adcl
jge
inc
out
jb
dec
imul
iret
dec
je
in
or
subl
call
adc
outsb
adc
mov
sahf
push
mov
stos
cli
add
inc
sbbb
sbb
mov
sbb
xor
pop
push
out
jmp
inc
cmp
repz
shrl
sub
push
int3
int
loopne
faddl
lcall
or
mov
mov
lcall
outsb
jo
jmp
inc
mov
jb
js
ret
xlat
cltd
xchg
dec
mov
inc
ja
inc
icebp
jns
and
daa
jp
fildl
int
loopne
pop
cmpsb
lods
xor
iret
mov
mov
push
jg
std
lret
ljmp
cmp
aam
ljmp
iret
adc
and
fcompl
cmp
pop
mov
pop
inc
ljmp
enter
adc
inc
scas
jecxz
andb
outsb
outsb
xorl
std
mov
and
cltd
adc
fadd
cmp
dec
push
arpl
mov
pop
inc
into
jbe
or
sub
mov
and
push
pop
mov
cmp
sbb
ret
aam
stos
jge
xor
pop
or
xor
into
loop
inc
dec
add
jno
mov
loope
fldenv
xor
jo
arpl
subb
sti
mov
inc
cmp
pop
jb
std
rclb
out
cld
jbe
ds
jno
adc
es
cmc
aas
and
push
mov
cmp
es
popw
daa
repnz
mov
vpaddsb
sub
add
pop
lret
call
or
fstpl
push
mov
js
add
cs
loop
sub
xor
mov
das
test
mov
cld
add
pop
pop
out
sub
and
mov
push
loopne
push
int
cwtl
ljmp
mov
test
push
cltd
or
fcoms
dec
test
je
xor
sbb
mov
pop
nop
mov
sbb
out
adc
pop
lock
icebp
lock
mov
int
icebp
orl
jmp
push
inc
and
insl
xchg
mov
int
fiaddl
ja
mov
lock
cmp
movsl
jl
mov
fiaddl
mov
xchg
imul
push
jle
imul
dec
add
jbe
push
jecxz
mov
imul
ss
cmp
dec
cltd
push
lods
xlat
push
and
push
fst
ljmp
add
and
imul
lock
movsl
in
xchg
inc
adc
xchg
insb
outsl
stc
push
bound
add
leave
ljmp
pop
pop
stos
mov
imul
push
push
dec
jl
pop
jno
xchg
imul
fcompl
incb
ljmp
add
adc
scas
or
xor
fwait
jecxz,pn
ds
add
and
mov
bound
mov
pop
dec
pop
movsb
or
fnsave
or
lock
fstps
or
mov
nop
out
jo
pop
mov
or
lcall
push
int3
stc
pop
cmp
xor
pop
jl
mov
adc
xorb
ret
mov
dec
gs
sti
cltd
pop
mov
icebp
mov
in
data16
jae
sbb
adc
fcoml
movsb
push
xor
shll
insb
sti
sub
hlt
add
mov
mov
adc
out
add
popf
adc
cwtl
in
rolb
out
push
jecxz
inc
add
push
das
rolb
cmpsb
inc
stc
movsb
xor
and
inc
xor
dec
cli
mov
in
lods
xor
in
jo
fcompl
cmp
sti
add
mov
ljmp
pop
jp
adc
int3
subb
add
icebp
daa
dec
pop
jmp
notb
sbb
out
daa
popf
or
or
mov
cmp
inc
stos
mov
fwait
aaa
fnstenv
pop
out
sub
mov
sbb
rorl
mov
dec
movsb
nop
orl
xchg
and
ss
leave
mov
cmpb
aas
mov
and
inc
sti
sub
push
jge
jb
imul
cs
adc
mov
in
push
xor
xor
stos
outsl
aas
scas
and
lods
jp
push
sti
bound
testl
dec
sub
lret
dec
fiadds
push
mov
pop
cmp
dec
inc
hlt
daa
xchg
lcall
dec
inc
cmp
call
xchg
mov
cltd
push
xor
mov
jae
xchg
push
mov
in
jecxz
sub
xlat
xchg
add
sub
repz
stos
fists
xchg
cld
repz
test
ja
addr16
sub
inc
loop
push
sbb
push
ret
jne
sbb
jg
pop
sub
test
lret
daa
mov
bound
imul
lret
ds
mov
jno
mov
lock
pop
cmp
jno
fsubl
inc
mov
fnstenv
lcall
adc
pop
and
cmp
xor
mov
jecxz
mov
pop
andl
lret
xor
out
mov
aam
movb
mov
lea
cmpsl
add
sub
mov
and
mov
jne
cmpsb
push
cmp
in
gs
mov
dec
pushf
movsb
cmp
jbe
test
cmp
jecxz
cltd
cmp
jne
test
lahf
rcrl
mov
sbb
leave
push
leave
popf
mov
sub
out
dec
inc
fistpll
rcl
loopne
dec
push
mov
cmp
xchg
jno
pop
ret
int
mov
and
mov
insb
sub
mov
outsl
push
jecxz
jnp
sub
scas
jle
cmp
call
fwait
mov
ja
lahf
mov
bound
push
inc
add
mov
cmp
icebp
fwait
pusha
stc
xor
or
lcall
les
pop
daa
imul
loopne
stos
cmp
fwait
xchg
gs
xchg
jno
jbe
fmull
add
cwtl
mov
push
pop
add
arpl
sbb
testl
into
popf
push
icebp
icebp
subl
push
lock
mov
pop
push
arpl
aam
add
or
jo
sbb
mov
and
rorl
xchg
fwait
movsb
adc
pop
xor
add
xlat
mov
imul
jnp
nop
lods
sti
leave
addr16
aad
xor
push
push
inc
xor
loopne
and
add
cmp
loope
mov
repnz
add
aas
js
std
cmpsb
xchg
xchg
pusha
xchg
xchg
dec
jle
pop
push
std
ds
mov
xchg
cmc
adc
es
jae
call
jg
dec
rorl
test
das
loopne
or
hlt
dec
andb
cmp
xchg
xor
shl
in
push
fsubrs
shl
scas
rorb
xor
or
int3
mov
pop
repnz
adc
add
cmovb
fmuls
ret
call
outsl
ss
lret
xor
adc
or
aaa
into
jmp
movb
mov
fstps
fwait
ljmp
adc
push
enter
jb
dec
jge
gs
push
movsl
or
std
cmp
out
das
les
sbb
pop
sbb
mov
out
lahf
fwait
push
adc
fistps
inc
inc
or
inc
leave
dec
mov
inc
lahf
addr16
and
push
out
adc
movsb
aam
dec
mov
lcall
out
mov
ss
std
mov
jle
data16
jecxz
test
in
xchg
mov
mov
and
add
mov
or
je
outsb
mov
lcallw
mov
insl
stos
scas
inc
nop
adc
out
enter
std
cli
sbb
mov
mov
in
xor
mov
dec
xor
lods
leave
enter
js
lret
cs
pop
xchg
std
push
push
xor
int3
in
xor
inc
xor
mov
push
imul
cmp
popl
xchg
sarb
mov
add
shlb
stos
or
lea
ja
mov
or
lods
ret
xchg
movzbl
call
mov
imul
testb
sbb
xor
mov
test
test
cli
in
mov
pushf
sub
sub
inc
xchg
sub
xor
inc
dec
dec
xor
add
jbe
ret
insl
adc
dec
cmp
xchg
cli
mov
adc
xchg
arpl
mov
jecxz
add
inc
fstp
fwait
jp
jp
js
popa
sub
adc
int3
jne
sbb
aas
out
ret
cld
adc
mov
popf
enter
mov
notl
mov
into
ret
bound
mov
or
push
mov
push
sub
aas
xor
push
gs
cli
les
cmp
pop
jecxz
nop
rcl
add
test
xchg
xor
sti
sahf
xchg
pusha
add
jl
add
jecxz
push
shlb
sbb
sub
pop
fstps
cltd
fiadds
dec
in
lcall
and
mov
dec
call
xchg
jnp
pop
stos
dec
aam
in
adc
stos
test
iret
cmp
xor
jl
adc
mov
inc
fwait
mov
out
dec
jl
leave
cli
add
outsl
xlat
cmp
out
sub
dec
int3
imul
outsb
inc
pop
insl
mov
push
dec
sbb
lea
add
and
lods
jecxz
mov
cli
test
push
xchg
ffreep
adc
xor
xor
cmpsb
pop
inc
scas
pop
std
imul
aaa
das
fisttpll
sbb
push
in
and
addb
repz
sbb
inc
fsubs
pusha
push
jmp
jge
xchg
cmp
fdivl
pushf
cmp
xor
fsubr
scas
scas
inc
dec
inc
incl
or
inc
in
outsb
into
stc
mov
lret
push
inc
mov
stos
cmp
test
adc
sbbb
mov
jp
mov
xor
stc
test
movsl
dec
stos
xor
pop
fnstenv
icebp
jmp
adc
jp
xor
push
mov
out
push
sbb
loopne
sub
dec
push
fstps
jne
xor
jecxz
shll
ja
fucom
hlt
int
jmp
js
adc
inc
insl
stos
outsw
imul
jae
or
cmp
xor
pop
inc
mov
xchg
lcall
inc
add
sub
inc
push
out
cmp
imul
fdivr
call
icebp
pushf
cmp
popa
ds
inc
lret
and
testb
lds
pop
adc
sti
lcall
pop
jo
stos
shr
cmp
sbb
dec
fistpl
jne
out
adc
ja
sahf
xchg
cmp
mov
loopne
stos
dec
jbe
insl
sub
mov
jbe
push
imul
or
jg
ljmp
stos
mov
sub
dec
inc
cmpsl
push
or
inc
outsb
lods
push
mov
sub
pop
pushf
pushf
ljmp
repz
std
cld
jno
inc
sbb
mov
sbb
sahf
mov
fisubs
outsb
loop
in
inc
dec
repnz
scas
xchg
mov
das
pop
das
sbb
add
aaa
adc
testl
stc
dec
mov
pop
scas
xor
jne
pushf
inc
pop
imul
mov
mov
popa
xchg
outsb
sub
dec
sbb
jge
imul
jmp
sbb
cmp
pop
ss
jg
gs
test
stc
outsl
orb
shl
loopne
xchg
lahf
and
or
int
loope
enter
fistpl
sub
xor
and
in
pop
lret
clc
adc
in
es
rclb
inc
lahf
jl
hlt
das
cwtl
cwtl
mov
jmp
in
jge
mov
fdivrl
add
es
je
idiv
or
push
mov
dec
pop
xchg
callw
lods
daa
ds
aad
ficomps
addr16
int3
in
sbb
fldt
sti
sub
mov
fildll
mov
addr16
jecxz
icebp
out
mov
cmp
scas
cmp
adc
add
or
pop
lcall
in
mov
xlat
fdivrl
adc
loop
jnp
fucomip
lret
scas
cmpsl
and
lcall
push
mov
cmp
xlat
jmp
popa
xchg
xor
xor
gs
scas
les
imul
add
jl
mov
xor
cmpl
aaa
rcll
or
or
pop
popf
mov
mov
into
xlat
outsl
sub
cltd
inc
lods
add
xchg
flds
imul
push
call
int3
popa
mov
icebp
jg
popa
cmp
je
out
jp
shll
xchg
loop
ljmp
pop
outsl
cmp
mov
jae
sahf
mov
push
cmp
mov
xorl
sbb
xchg
mov
int3
push
in
mov
mov
aad
jnp
jnp
andl
arpl
xchg
cmovp
pop
nop
or
test
push
adc
out
xchg
jle
jnp
jae
inc
push
xchg
cmp
into
in
xor
in
mov
adc
ljmp
pop
imul
cld
enter
bound
mov
js
mov
fimuls
mov
add
push
in
and
mov
or
lret
mov
push
je
test
rorb
pop
or
scas
icebp
lods
add
adc
dec
std
clc
arpl
mov
repnz
mov
das
jge
into
int3
add
hlt
shl
les
sub
adc
dec
sbb
lcall
mov
push
xchg
add
imul
aaa
jnp
lods
or
hlt
add
icebp
mov
ja
add
add
insb
jo
sbb
mov
fiadds
cmp
decl
in
and
dec
xlat
add
int3
jo
stos
mov
ret
xor
shrl
jmp
lds
pop
stos
xor
jg
rclb
aas
or
loope
repz
fsubl
pop
mov
pushf
add
fwait
push
sub
insb
or
xchg
xor
repz
fdivrl
jno
mov
xchg
mov
xor
lcall
lret
insb
mov
fmull
adc
imul
cmp
dec
sahf
repz
insl
xchg
sub
sbb
mov
outsb
dec
sub
call
repz
xchg
sbb
mov
lds
sub
mov
sbb
data16
out
sahf
or
jb
push
pushw
jns
int
mov
cmp
jl
push
add
stos
xor
inc
jecxz
sbb
popa
ds
mov
jecxz
or
mov
inc
jo
jmp
das
test
sbb
mov
bound
data16
pop
xchg
scas
mov
dec
addb
ds
mov
mull
leave
push
cmc
add
mov
dec
xchg
lods
fxch
xorl
adc
insb
mov
adc
mov
adc
shrb
xchg
aas
xadd
adc
mov
test
je
les
and
stos
jge
mov
fabs
sbb
xchg
mov
in
cltd
sub
adc
aam
aas
out
and
cltd
add
lods
in
jge
add
pop
popa
in
fdivs
ds
dec
enter
movsb
mov
adc
adc
bound
out
jb
or
mov
sti
sbb
popf
pop
xor
ja
push
scas
cltd
test
sbb
mov
push
fs
pop
and
pop
sahf
repnz
push
clc
lret
outsb
or
imul
rorb
cwtl
inc
cmp
adc
jo
pop
ljmp
loopne
outsb
lcall
aam
pop
loopne,pt
or
push
decb
pop
mov
int
bound
inc
cmp
xor
mov
scas
out
popa
es
xchg
pop
dec
and
addl
mov
sbb
test
or
mov
mov
xor
fldl
lret
cwtl
push
jb
add
dec
inc
mov
in
cli
fwait
clc
mov
loopne
out
divb
xorb
movq
mull
sahf
rorl
ss
out
xor
mov
adcb
cs
icebp
in
cmp
in
mov
test
test
add
push
pop
jns
jne,pn
hlt
sub
xor
sbb
mov
out
push
sub
aas
pop
arpl
sub
jnp
repz
test
into
bound
sbb
jg
dec
cmp
jns
rcl
add
pop
and
dec
or
sti
xor
dec
xorb
cmp
add
movsl
mov
and
std
jmp
mov
loopne
adc
xchg
je
sbb
pop
pop
pop
sub
mov
jno
cmpsl
rol
sbb
sbbb
jns
addr16
xchg
dec
push
pushf
orb
mov
rolb
sub
ds
xor
mov
lahf
popa
cli
pop
or
xor
subb
sub
pop
xor
cmp
and
loop
push
fldt
aaa
call
xchg
jl
sub
aas
movsb
test
pop
andb
mov
test
std
cld
or
test
mov
ret
or
push
mov
mov
push
jp
sbb
xchg
outsb
mov
ljmp
cmp
outsb
dec
push
inc
outsl
and
mov
inc
cmc
es
int3
call
mov
out
add
pop
daa
lea
jge
in
lods
add
gs
push
mov
xchg
cmp
jg
test
mov
ret
cmc
test
enter
dec
xlat
fcmove
sbb
mov
mov
sub
mov
stos
mov
xor
inc
lahf
roll
mov
push
rcpps
nop
shrb
jp
arpl
mov
fbld
dec
sbb
inc
fdivl
pop
movl
push
jp
cmpsl
xchg
loop
and
out
movsb
xchg
repnz
xor
int3
dec
sub
cmp
mov
jae
movsb
sbb
arpl
inc
mov
mov
in
pop
lock
pop
gs
pop
jmp
arpl
pop
std
pop
add
popf
ljmp
cld
and
xchg
imul
mov
or
sbb
pushf
mov
roll
mov
lahf
call
push
test
xor
int
sub
neg
adc
push
fildl
mov
out
orl
filds
add
xor
jbe
andb
add
mov
lods
subl
xchg
es
adc
enter
inc
xchg
lret
icebp
addl
sbb
jmp
cmp
dec
xor
stos
ficompl
mov
jmp
ljmp
add
add
add
xlat
inc
cltd
and
pop
cmpb
xchg
insl
or
scas
test
test
dec
inc
outsb
jne
neg
sub
jle
push
lret
inc
push
outsb
lds
or
adc
or
add
xchg
lods
fwait
loope
jge
cld
std
sbb
lea
int3
shlb
outsl
xor
xor
jge
jo
jno
inc
lods
dec
lock
dec
add
push
sub
fnstsw
out
add
shlb
pop
jo
repnz
xchg
aad
cmc
dec
scas
rcll
aas
test
add
mov
mov
loop
out
push
clc
fdivs
mov
adc
mov
aas
imul
jg
bound
push
jae
sub
dec
cli
ds
add
enter
mov
lods
lea
add
push
arpl
xlat
test
lds
fcmovnb
dec
lds
push
inc
sbb
jg
adc
xor
pop
cmp
xor
or
jecxz
pop
rcrb
dec
insb
iret
push
adc
fadd
test
pop
ds
inc
pop
fwait
test
test
xchg
push
lahf
rcll
inc
out
test
loope
add
inc
mov
aas
cmp
repz
add
sbb
cmpsl
pop
stc
jp
sbb
adc
add
outsb
mov
add
or
xchg
dec
cmp
lcall
xchg
xor
fcomps
inc
sbb
sbb
out
sub
inc
dec
gs
mov
and
test
xor
lret
dec
cmp
popf
ficoml
jno
mov
nop
bound
dec
test
inc
mov
pop
inc
addr16
pusha
hlt
stos
mov
aad
mov
add
and
xor
sub
pop
push
sahf
scas
xchg
or
mov
and
add
jecxz
pop
ret
imul
leave
shll
adc
imul
popf
sahf
clc
or
xchg
cld
adcl
inc
jl
or
add
and
pop
ret
push
cmpb
adcb
push
push
jg
shrb
adc
mov
loope
test
cmc
insl
push
adc
add
cmp
fwait
lds
and
and
inc
sub
ret
mov
xchg
repnz
movsl
pop
fcmovnb
test
mov
cmpsb
mov
scas
bnd
cmp
dec
addb
ret
mov
inc
mov
fsubrs
xor
push
loopne
sbb
data16
add
mov
aad
adc
or
cld
neg
jl
leave
mov
and
xchg
int
insb
pop
mov
lret
shll
mov
mov
cmpsl
sbb
mov
aad
adc
xor
maskmovq
testl
cld
popf
aas
push
mov
push
lahf
loop
lods
negl
xor
stos
and
pop
inc
sbb
and
arpl
out
or
loop
mov
fbld
xor
mov
pop
push
xchg
jne
test
mov
jecxz
and
repnz
push
into
mov
jmp
ljmp
js
push
push
dec
adc
outsl
sub
aaa
sub
pop
pop
xlat
loopne
cmpsl
hlt
cmp
push
sbb
mov
loopne
or
adc
pushf
mov
addb
addl
adc
xchg
loopne
or
jne
lds
repz
push
out
cli
mov
fisttps
mov
flds
dec
cmp
cs
insl
fisttps
sbb
subb
clc
add
or
mov
inc
stos
inc
lock
addl
xchg
push
mov
or
push
popa
cmp
xlat
sarl
mov
test
mov
movsl
cmp
mov
ds
cmp
xor
cmpsb
sub
mov
jecxz
sbb
pop
mov
lcall
fcoml
in
les
out
xchg
add
inc
js
or
push
push
lods
xchg
pop
dec
movsb
sbb
push
mov
jl
jge
cmp
jl
aam
test
mov
iret
jne
dec
cmpsl
and
mov
loope
lea
and
or
push
lods
pop
jmp
aaa
aam
pop
ljmp
mov
ret
gs
mov
lods
int3
fptan
repnz
hlt
arpl
push
pop
and
fs
sahf
lcall
xchg
pop
popf
fdivrs
pop
test
cmp
pop
std
sti
into
or
or
sbbl
mov
imul
sbbb
into
push
jne
push
push
jmp
push
je
mov
and
push
xchg
les
jbe
movsb
das
push
xor
in
roll
push
movsb
lret
stos
iret
imul
mov
enter
xchg
ror
mov
inc
arpl
outsl
lret
adc
filds
xacquire
hlt
in
or
loopne
das
inc
mov
mov
mov
subl
cmp
sbb
sbb
push
je
push
push
in
pop
dec
xor
out
fsubrl
inc
inc
shr
inc
adc
or
pop
inc
jecxz
inc
jns
incl
and
cmp
in
outsl
pushf
sub
pop
adc
xor
je
int3
push
xchg
cmpsb
sbb
ret
jecxz
insb
call
mov
test
nop
pushf
or
mov
sbb
outsb
test
ret
out
bound
adc
ret
imul
in
xchg
mov
or
pop
pop
js
fiadds
cmp
mov
cmp
sbb
push
clc
push
out
aam
xchg
mov
pop
dec
fwait
cmp
xor
cltd
lods
inc
adc
jmp
int
jb
xor
mov
adc
leave
jnp
mov
dec
in
push
andl
fiadds
xchg
mov
xchg
pop
lea
add
adc
sub
or
mov
mov
popf
push
cmp
sti
aad
popf
clc
xor
stc
popa
addb
sub
push
mov
mov
pop
enter
mov
ret
inc
repz
pop
push
xor
lea
pop
stos
cs
movsb
in
xchg
or
lcall
test
lods
xor
add
jl
mov
mov
mov
mov
lcall
sbb
daa
and
das
jo
jbe
sarb
mov
inc
icebp
lret
jp
mov
cmpsb
sbb
mov
int3
inc
in
insl
test
call
cmp
cmpsl
adc
in
movsl
int3
or
stc
scas
xlat
imul
sbb
mov
sbb
dec
cmpsl
sbb
sbb
nop
mov
inc
imul
sarl
ret
faddl
fcomps
out
aam
cltd
hlt
pop
pop
dec
cmp
into
sub
jg
movsb
mov
cmp
sub
pop
stc
push
inc
mov
push
ret
or
lea
inc
sub
les
sbb
xchg
mov
repz
out
dec
and
stos
daa
inc
cmp
pop
and
enter
inc
pop
inc
cmp
push
fs
dec
out
dec
notb
insl
repnz
adc
inc
pop
fs
mov
test
dec
push
cld
idivl
sbb
hlt
xchg
aam
sub
rcrb
cltd
inc
lcall
popf
xchg
jl
add
popf
test
lret
jae
sbb
adc
test
js
jge
mov
inc
mov
in
fldl
les
scas
mov
scas
adc
xchg
gs
fisubrs
sahf
lods
pop
sbb
pop
xor
mov
stc
les
mov
arpl
xchg
lret
orb
or
rolb
push
stos
dec
pop
inc
test
lds
adc
xchg
sti
xchg
iret
shl
push
movsl
in
call
leave
and
leave
inc
adc
cmc
mov
ss
mov
or
repnz
mov
or
movsb
popf
cmp
pop
rcll
das
xchg
lods
add
push
adc
pop
mov
cmp
fiaddl
std
lret
adc
fldenv
loop
push
gs
jecxz
lods
jecxz
jmp
push
aaa
dec
mov
and
adc
ret
mov
add
mov
pop
repnz
mov
add
or
int3
cmp
stc
or
movsb
jbe
popa
xlat
sub
dec
add
jmp
inc
jae
lret
or
mov
dec
add
cmp
dec
repz
mov
mov
rorb
jle
jle
jl
mov
mov
int3
push
mov
jge
inc
lds
pushf
es
enter
xor
loopne
and
jp
jns
mov
fisubrs
dec
xchg
fimull
stos
pop
jmp
sbb
mov
je
cmp
pushf
ds
add
loop
jnp
inc
xchg
lods
shl
movb
mov
icebp
fmuls
mov
jmp
push
mov
jle
ljmp
cwtl
cli
lods
sub
push
cmp
ds
push
nop
add
jg
cli
mov
jmp
pop
cmpsl
lds
lret
icebp
xchg
aam
xor
mov
imul
in
jmp
mov
adc
ss
sbb
das
add
pusha
sbb
dec
and
mov
jns
data16
and
sub
rcrb
mov
add
push
push
sbb
and
inc
mov
lahf
or
je
mov
in
mov
jae
cld
lea
lods
sbb
lret
ljmp
out
imul
inc
pop
movsb
mov
adc
ucomiss
inc
in
push
inc
out
mov
sub
sbb
fwait
xchg
imul
pushf
or
jne
in
mov
xchg
jg
out
xor
in
add
or
or
lcall
add
lods
jb
fs
sbb
jp
scas
adc
ds
sahf
mov
sbb
stc
xor
aaa
xor
out
add
notl
inc
ss
dec
sti
jns
imul
mov
sbb
mov
jo
sti
xlat
cmp
cmp
mov
inc
test
jge
push
outsb
leave
jns
dec
aam
loop
inc
in
ds
les
shr
add
js
pop
nop
arpl
rclb
push
xor
dec
out
les
data16
ret
adc
loopne
rcll
dec
addr16
dec
dec
jge
xor
cmp
clc
loope
cltd
cmpsb
lods
int3
call
push
xchg
cmp
push
orl
mov
lret
ss
lcall
lock
gs
push
das
pop
int
mov
cmpsb
aad
sbb
fst
or
mov
jo
loopne
addr16
or
ret
es
lret
test
xchg
push
cmpsl
popf
jns
push
sub
insb
pop
jae
push
mov
cmpsb
dec
push
sub
pop
shlb
push
push
test
or
sti
mov
or
fidivl
sub
sbb
mov
mov
sti
mov
jae
or
int
repnz
popf
mov
xor
and
xor
sbb
xlat
xor
inc
sbb
nop
jl
shlb
lahf
adc
pop
stos
ret
jl
pusha
idivb
and
xor
jp
scas
call
jns
mov
xchg
in
cwtl
hlt
push
mov
sarb
call
ss
fs
inc
cmp
outsb
roll
sbb
imul
push
mov
aaa
xchg
mov
lea
ret
adc
cmp
lret
mov
pop
jo
outsb
inc
stc
in
icebp
gs
repz
cmpsl
shrb
push
xor
push
fsubs
dec
or
imul
fs
mov
push
mov
ret
test
and
roll
xor
xor
movsb
sti
xchg
xchg
mov
push
stos
dec
imul
and
add
mov
or
clc
jne
loope
pop
mov
sub
cmp
mov
xlat
mov
cmp
push
pop
mov
add
pop
jo
insl
jp
cli
std
pusha
aam
scas
cmovb
inc
out
ror
jl
insl
mov
test
mov
sub
jns
and
movups
mov
jle
cmp
test
pop
in
jp
mov
mov
pop
jge
popa
inc
push
in
sub
mov
ljmp
cld
enter
push
inc
lea
subl
hlt
imul
out
push
jp
fisubs
lock
shrb
cltd
xchg
or
or
insl
mov
rorl
dec
into
sbb
sub
add
jns
into
dec
into
popf
xchg
push
fiaddl
pop
outsl
sti
jmp
sub
ja
mov
dec
push
fstpl
mov
in
xor
add
in
mov
pop
mov
pop
adc
or
lock
enter
jp
cmpsl
pop
or
gs
sbb
imul
scas
sbb
jmp
or
imul
jp
mov
lahf
mov
and
call
push
int3
xor
cmpsb
adcl
jno
cmp
js
or
repnz
mov
es
push
lcall
dec
sti
pop
in
push
xor
aam
repz
out
lret
add
pushf
push
jb
push
push
jmp
mov
add
sub
lret
mov
xchg
call
xchg
rorb
inc
in
dec
xor
jb
fdecstp
mulb
into
push
std
shrl
push
daa
mov
dec
or
and
testl
xor
push
lcall
add
jbe
icebp
add
mov
dec
fidivrs
jge
nop
sahf
daa
and
mov
mov
xchg
leave
mov
outsb
mov
insb
insb
mov
dec
stos
ss
in
inc
mov
inc
mov
mov
frstor
jg
in
out
int3
gs
and
out
andl
add
pusha
orb
xchg
mov
aad
fiaddl
or
inc
out
mov
lods
xor
pop
inc
inc
js
jg
xchg
adc
xchg
mov
jb
mov
inc
pusha
xor
loope
mov
push
arpl
stos
mov
mov
jmp
std
xchg
sarb
stos
aaa
jecxz
scas
subl
jns
or
pop
mov
aad
add
cmp
or
sub
ret
daa
sahf
cwtl
inc
call
icebp
jecxz
addb
lds
repnz
bound
push
push
out
and
sbb
sbb
xor
in
sbb
add
mov
push
fucomip
sarl
xchg
ds
jns
mov
wrmsr
mov
loope
xor
jbe
cmp
orb
dec
repnz
roll
dec
push
lds
sbb
test
mov
fs
cmpl
imul
test
test
popa
jb
pop
mov
sub
mov
cmpsb
lret
mov
test
pop
xchg
cmp
mov
es
jg
pop
pop
stc
fimuls
inc
pusha
pop
sub
add
cld
pop
xchg
cwtl
insl
cmp
mov
add
fmulp
ja
sbb
out
aad
jg
xor
inc
into
cmp
add
push
and
mov
lret
imul
scas
cmp
mov
sub
cwtl
je
adc
mov
adc
cmp
mov
mov
xchg
sahf
xlat
loop
cmpsl
shll
jge
push
fiaddl
cmp
sbb
popa
sar
fiadds
and
add
lahf
and
cli
push
les
pop
jg
daa
pop
cmc
inc
sub
adc
cmp
inc
cli
jmp
or
and
xchg
pop
or
pop
dec
cmp
mov
mov
xchg
int3
mov
mov
fwait
daa
aam
xor
dec
pusha
or
rcrl
ficomps
cli
out
out
pop
gs
jb
inc
movb
aad
negb
sbb
cmc
sbb
jg
sub
mov
loope
lods
jae
xor
in
xlat
nop
and
add
idivb
or
cld
push
pop
iret
push
fldcw
mov
mov
out
lcall
lea
add
idivb
mov
dec
push
ss
pushf
lret
std
scas
stos
orl
xchg
push
ljmp
push
rorb
cmp
push
pop
fildll
cmpl
push
les
adc
sahf
dec
ret
mov
cwtl
pop
dec
jp
pop
jnp
lods
sti
sub
jb
sub
dec
mov
int
mov
and
loopne
and
in
jecxz
loope
inc
pusha
icebp
lahf
add
lahf
xchg
and
and
shrb
sbb
ljmp
or
cwtl
out
and
add
xchg
dec
push
and
gs
mov
aaa
jno
push
dec
in
mov
cs
pop
add
cmp
popa
and
icebp
add
clc
gs
cwtl
dec
sahf
lret
stos
mov
jecxz
jno
lock
push
pusha
in
dec
sbbb
ficoml
mov
sub
and
sahf
lcall
sub
js
mov
push
jp
iret
repz
push
xchg
lret
in
xchg
inc
addr16
cwtl
pop
arpl
enter
xor
fnstenv
xor
xor
daa
mulb
cmc
repnz
incl
mov
out
pop
mov
jge
push
ret
out
je
jne
mov
ffree
and
jne
mov
sahf
insb
sbb
mov
sti
xor
sub
stos
mov
imul
inc
cmpl
jno
jne
insb
mov
mov
out
test
xchg
sub
sub
gs
or
in
mov
jae
movsb
cwtl
in
push
gs
mov
aad
add
add
push
mov
inc
int3
lret
js
cmp
xor
mov
std
cmc
repnz
lcall
andps
fsubrs
pop
and
jo
aaa
adc
push
cmpsb
loope
sub
hlt
icebp
sti
sbb
rcrb
test
mov
aas
mov
inc
nop
pop
into
dec
mov
imul
addr16
push
andb
sbb
fsubs
mov
or
jno
or
push
popa
push
push
sub
pusha
jae
dec
cmp
mov
dec
push
and
jbe
lret
mov
aam
push
add
test
iret
sbb
dec
cmp
andb
in
in
xor
pusha
outsb
aaa
or
mov
scas
fsubs
mov
out
lret
jbe
test
int
arpl
es
mov
push
dec
arpl
jo
add
imul
clc
cmp
mov
bound
scas
add
jmp
push
sub
or
jecxz
ficoml
mov
in
aas
ret
stos
mov
push
lods
in
jno
mov
add
mov
cmpl
push
pusha
dec
mov
pop
fisubrs
lea
lods
cs
repz
fsubs
dec
mov
shll
data16
pop
out
xchg
loope,pn
push
dec
cmpsb
jnp
movsl
shlb
push
pushf
cmp
jno
fld
add
mov
xor
test
jmp
ror
xchg
fwait
push
call
test
xlat
mov
dec
sub
mov
fidivl
enter
push
inc
jae
mov
or
dec
mov
test
pusha
mov
inc
mov
push
icebp
loop
add
cmpsl
imul
imul
fistl
pop
add
out
lds
mov
orb
push
cltd
aad
loop
jnp
stc
lcall
push
dec
lock
sbbb
sbb
lods
out
pop
xor
hlt
jbe
ret
ss
adc
pop
shrb
xchg
xchg
xchg
dec
repz
roll
and
sbb
inc
insb
mov
ja
jmp
scas
into
jmp
lea
ret
cmpsb
adc
movsl
inc
inc
jne
in
lds
cmp
add
into
and
push
out
rclb
push
dec
add
dec
jmp
dec
sub
call
fs
dec
xchg
movsb
pop
test
sbb
pop
mov
movsb
adc
dec
mov
pop
mov
xor
push
packuswb
out
ss
mov
lock
mov
call
loope
mov
daa
mov
mov
sbb
lahf
dec
add
or
mov
jnp
les
lahf
sub
test
aam
test
jnp
and
in
cwtl
mov
nop
xchg
mov
adc
repz
rclb
shl
dec
mov
aam
repnz
mov
test
push
dec
sahf
fcoml
cld
sarb
xor
dec
stos
shll
lods
mov
into
rol
adc
nop
ss
lgs
sbb
aaa
adc
inc
pop
jbe
dec
xor
sub
sbb
sbb
icebp
adc
ret
mov
mov
faddl
add
mov
ffree
jno
mov
jl
faddl
pop
mov
pop
cmp
cmp
or
mov
sub
jb
and
fsubrs
fistl
xchg
inc
and
cs
or
and
or
sub
movsb
jne
sahf
negl
pop
repz
sub
jecxz,pn
push
jmp
xor
fcmovb
jne
mov
xor
popf
jle
shrl
inc
lds
jo
pushf
pop
insb
jge
hlt
in
sbb
push
push
scas
xchg
lods
cld
fnstsw
xchg
les
jnp
and
test
int
xchg
mov
lods
and
inc
mov
das
cmpsl
cmp
cmpsb
pop
es
or
mov
mov
je
out
adc
adc
push
mov
insb
rolb
mov
sub
mov
jns
mov
xor
or
add
push
xchg
mov
xchg
jecxz
adc
or
or
andb
ds
mov
lock
mov
xchg
xchg
lods
imul
int3
das
add
xchg
dec
test
lods
xchg
fs
mov
pop
adc
inc
xor
inc
ss
xchg
in
or
push
loopne
mov
push
es
fs
mov
push
inc
xchg
dec
loop
aad
cmp
sbb
sub
loop
je
mov
sub
sbb
int
push
mov
lcall
sub
cli
pop
xlat
push
outsb
jnp
pusha
sbb
testl
add
jmp
movsb
sub
and
mov
sub
bound
lock
cld
mov
and
rorb
shlb
cmova
loope
add
push
dec
xchg
and
adc
mov
or
gs
mov
imul
negl
cld
mov
into
popa
adc
shll
jmp
xor
enter
std
cmp
lock
int3
fistl
loope
mov
jmp
test
mov
cs
push
enter
in
fldenv
shrl
push
cmp
hlt
mov
jb
pop
les
push
pop
loop
mov
cmc
fidivs
rorb
mov
fcoms
loope
mov
sbb
insl
ja
xchg
xchg
imul
jge
in
or
rcrb
push
frstor
adc
xor
fisubl
add
and
xlat
push
cmc
rcrb
cs
rorl
imul
test
js
call
outsb
adc
cmp
stos
sarl
add
mov
xchg
mov
dec
aas
inc
lods
stos
add
nop
idivl
jnp
lock
ds
pop
inc
test
outsl
pop
push
cmp
push
cmp
adc
mov
rorl
movsb
outsb
js
pop
outsb
dec
xlat
jo
insl
in
jbe
pop
xor
and
sub
nop
or
sbb
mov
xor
insl
push
mov
arpl
push
test
imul
mov
sahf
in
jp
and
push
dec
popa
ret
sbb
adc
jb
mov
pop
and
test
push
daa
lds
jecxz
lret
repz
pop
jp
and
push
call
js
mov
rcr
jno
add
add
add
icebp
fidivrl
scas
jno
xchg
or
push
jbe
ret
push
sub
jne
fmull
out
inc
addr16
and
sub
repz
popa
shlb
and
mov
add
mov
jle
test
rcl
push
push
into
in
sbb
push
inc
adcb
pop
or
xchg
push
daa
int
mov
xchg
fcoms
aad
xor
dec
aaa
sti
cmc
lods
nop
scas
xor
mov
jo
insl
mov
jae
and
push
notl
cmp
arpl
test
divl
js
mov
fnstenv
sbb
mov
cmc
pop
cmp
pop
and
jl
sarb
or
mov
mov
dec
xchg
dec
aad
lret
insl
or
push
fcomi
ja
aas
nop
out
int3
movsb
jno
push
or
mov
jle
sbb
jnp
pop
mov
insl
sbb
ret
test
or
xor
testb
adc
int3
xor
xlat
xor
jp
enter
xor
pop
lds
inc
mov
sahf
cmp
jp
cmp
adc
enter
in
or
sub
shlb
imul
jg
sbb
dec
inc
rcll
pop
stos
jle
int3
int
jp
jne
addr16
loop
in
aam
aam
out
push
mov
push
mov
ljmp
mov
cmpsl
adc
jbe
adc
add
mov
jb
inc
mov
add
mov
pop
xor
mov
jecxz
mov
fimull
or
push
and
je
sub
cmc
subb
xchg
push
push
push
leave
add
sbb
out
xchg
and
test
inc
pop
add
xchg
mov
dec
in
leave
inc
or
jno
mov
lret
jp
fistpll
stc
iret
mov
inc
fmuls
std
pop
bound
aaa
jl
and
or
dec
cwtl
daa
and
push
sub
leave
jecxz
push
push
cmp
jnp
sbb
das
mov
scas
or
inc
sarl
pop
mov
mov
and
push
scas
mov
push
repz
outsl
sbb
enter
pop
and
sub
test
mov
jg
add
push
lahf
inc
idiv
adc
or
cmp
cs
stos
stos
mov
rcr
ss
jp
neg
cmc
loope
dec
mov
sti
or
push
stc
xlat
mov
stos
pop
bound
xorl
test
pushf
mov
pop
rclb
mov
adc
ret
mov
push
in
xorb
or
sbb
lods
or
test
jne
pop
jo
xor
pop
sub
add
push
cmp
push
sbb
les
ffreep
test
cmp
addb
inc
inc
std
mov
cld
add
xchg
mov
dec
add
add
inc
add
imul
dec
mov
stos
shl
or
sub
xchg
mov
add
lea
jns
push
cmp
inc
data16
shlb
or
xchg
jae
pop
jae
mov
cmp
sbb
sub
insl
inc
push
popa
jns
das
inc
push
inc
enter
mov
iret
jg
and
addr16
dec
in
jle
and
jecxz
push
cmp
push
int
mov
pop
stos
ficoml
popf
test
outsb
cmp
in
nop
xchg
aas
sbb
mov
leave
aam
ret
aas
scas
lds
test
fadd
cmp
push
xorb
je
mov
sub
int
add
cmpsb
xchg
popf
mov
add
stos
mov
push
mov
imul
out
inc
cmp
lea
mov
inc
cmpsl
adcl
sub
stos
jecxz
aaa
cli
outsb
and
cli
ja
cltd
jp
and
pushf
in
ja
std
iret
out
or
adc
jge
xchg
sub
fldenv
mov
sub
notb
repz
cltd
icebp
and
stc
scas
mov
pop
push
sbb
dec
or
inc
out
sti
dec
int
add
jge
xchg
jae
sub
or
aad
stc
sub
xchg
lods
mov
dec
data16
mov
dec
mov
xor
ja
mov
mov
sarb
jnp
fwait
mov
jecxz
sbb
jecxz
jmp
je
nop
or
lret
fs
inc
sbb
mov
cwtl
jns
aaa
push
mov
xor
xor
jecxz
das
fistps
mov
add
imul
sbb
or
sbb
push
adc
scas
cmp
xor
push
jg
mov
push
fadds
lcall
xlat
add
pop
push
or
pushf
pxor
popa
leave
mov
pop
pop
fs
ret
mov
shll
sub
push
mov
lea
pusha
pop
out
ss
push
adc
dec
mov
mov
pop
and
out
shll
shrl
mov
xor
sbb
xchg
inc
in
cmp
jo
fs
lea
in
fwait
loop
inc
in
push
sbb
and
lcall
or
cmp
clc
mov
jbe
sbb
popf
pusha
leave
jo
cmp
faddl
out
jae
pop
pop
fisubrl
add
fildl
push
sbb
ret
dec
pop
pop
add
pop
push
dec
stos
lock
jns
fs
imul
mov
and
pop
add
jns
ja
int
rcrb
lret
jle
outsl
test
pop
inc
mov
pop
inc
nop
inc
inc
lods
call
jae
aaa
mov
jb
ljmp
pop
sub
and
popf
sbbb
push
into
xchg
subl
icebp
out
dec
jecxz
xchg
pop
mov
aas
inc
lret
pop
test
lds
xchg
push
sub
push
jmp
insl
cwtl
outsl
int
cmp
mov
in
add
dec
sbb
movups
jg
lea
adc
jl
fidivl
mov
sbb
cmp
movsl
lret
stc
add
fisubl
mov
push
push
mov
cmp
aaa
addr16
jg
push
shlb
cmp
stos
jnp
mov
dec
test
xchg
fidivrl
in
sti
leave
jle
inc
xchg
push
in
and
jnp
rorl
cs
lods
lahf
mov
lock
xchg
jg
imul
mov
pop
xor
xchg
push
sbb
adc
aam
add
mov
pop
insb
sub
bound
inc
xchg
mov
ret
in
int3
pop
shlb
daa
add
inc
or
loope
mov
outsl
jo
in
scas
mov
sub
or
lea
push
inc
loope
pushf
fdivl
call
xchg
cmp
or
ljmp
sbb
inc
in
in
sti
sub
inc
mov
je
jecxz
arpl
in
fdiv
gs
inc
dec
push
popa
inc
mov
jo
pop
loope
inc
add
lcall
sbb
mov
lcall
xchg
pop
arpl
or
daa
mov
pop
add
mov
imul
xchg
loop
mov
pusha
mov
lcall
cmp
push
fisubl
aas
mov
fdivp
or
xchg
jns
adc
xchg
add
inc
jmp
adcl
and
aaa
mov
xchg
outsb
xchg
dec
add
xchg
mov
xor
icebp
stos
js
inc
aas
sub
or
jp
inc
jg
push
pop
in
push
lock
fistpll
mov
es
test
stos
cmc
in
jmp
pop
repnz
aaa
add
iret
jns
and
mov
mov
jg
add
lret
cmp
ljmp
adc
jmp
dec
xchg
orb
sbb
inc
rorb
add
cmpsl
add
xchg
xchg
loop
cmpsb
scas
add
enter
lret
andb
in
mov
cmp
in
xor
sub
adc
out
icebp
icebp
or
jb
int
pop
mov
mov
hlt
ja
xor
push
gs
sbb
fmull
pop
jp
pop
or
dec
lret
add
and
insb
repnz
or
je
or
into
js
call
aas
icebp
or
mov
mov
xor
jnp
int
inc
mov
or
mov
daa
mov
std
loope
subb
loopne
insl
aas
fistpll
in
cld
cltd
inc
iret
cmp
mov
fwait
test
and
push
xchg
shlb
sub
jle
mov
pop
mov
and
lea
testb
push
repnz
xorl
mov
push
addb
xchg
shll
sbb
mov
pop
push
pop
out
and
fcomp
mov
push
enter
scas
sub
lea
push
fistl
aas
in
mov
ret
aaa
ret
test
xor
cwtl
testb
mov
scas
xchg
test
push
lahf
pop
xchg
stos
push
outsb
mov
dec
lea
sbb
cld
fwait
loop
cmc
jb
mov
xchg
icebp
ja
push
mov
movsl
sahf
or
ds
bound
or
mov
cmp
add
mov
push
xchg
test
xor
jle
mov
cmp
ja
cmc
ss
mov
js
jbe
ret
sub
movsl
iret
cmp
fidivrl
cmp
sub
rcl
xor
push
xor
xchg
sub
inc
popa
mov
lahf
mov
fwait
push
push
inc
andb
dec
cmp
jge
fcoml
pop
adc
loope
add
jle
scas
dec
xchg
xchg
shll
or
int
imul
repz
inc
and
stos
push
pop
int
mov
scas
aas
xor
lret
mov
cmpsb
mov
or
addr16
jae
bound
sub
repnz
inc
push
fstl
inc
aam
dec
test
dec
sti
add
adc
cmpsb
dec
xor
ret
ret
xchg
push
sub
insb
gs
aad
test
pop
mov
jle
sub
fwait
movsb
mov
push
ficoms
test
and
and
dec
sar
sub
push
sti
sbb
pop
es
xchg
sti
xlat
mov
sahf
mov
mov
sub
test
adc
jmp
mov
mov
mov
push
jp
dec
and
in
out
stc
arpl
pusha
push
adc
pop
pop
in
adc
in
stos
repnz
mov
cmp
stc
hlt
fwait
pop
jo
sbb
out
cmpsb
daa
nop
loope
cli
aad
imul
loop
cmp
data16
shlb
inc
jno
imull
mov
fs
sbb
mov
pop
adc
dec
rolb
call
cmpsb
push
jne
dec
notl
mov
sbb
dec
jnp
jmp
pop
jae
rclb
adc
cmp
das
mov
adc
leave
fsubrl
lods
cltd
xor
insb
jne
add
mov
aad
cltd
repz
cs
and
and
outsl
sbb
mov
testb
sub
pop
inc
push
dec
and
or
rcrl
sub
fiaddl
jg
repz
outsb
mov
add
movsb
pop
lea
insl
mov
pop
out
in
mov
insl
add
rcrb
movsl
inc
rcll
lds
sub
xchg
cmpsl
add
ret
cld
push
mov
aad
int
jae
mov
add
or
push
loope
fiadds
imull
into
mov
sti
and
sbb
fisttpll
dec
cmpsl
push
sti
or
jecxz
mov
shrl
stos
adc
divb
sub
jp
xor
addr16
sub
pop
sbb
mov
mov
push
jmp
jle
enter
xchg
push
push
subl
cmpsb
sub
popf
loope
jbe
inc
gs
in
lret
leave
addr16
add
aaa
dec
lahf
test
sahf
ljmp
repz
sbb
xor
jo
sbb
pop
scas
mov
or
sbbb
test
cmp
pop
mov
add
jmp
insl
inc
mov
test
inc
xor
in
xchg
and
sub
or
fsubs
hlt
sbb
adcl
pushf
repnz
out
mov
pusha
into
push
hlt
lds
pop
xlat
scas
dec
xchg
add
pop
jge
lret
insl
test
xchg
push
xchg
imul
imul
sub
aas
xchg
mov
inc
insl
sub
out
daa
scas
fs
cs
push
and
sbb
lahf
mov
push
jl
push
adc
xor
jl
xor
stos
sub
repnz
inc
roll
inc
mov
jmp
pop
mov
in
lods
fnstsw
xor
add
mov
popf
call
in
call
addr16
rorb
loopne
xchg
sbb
cmp
cmp
nop
inc
cmp
iret
cwtl
push
adc
xor
test
mov
mov
inc
test
pop
enter
call
dec
iret
subl
xor
inc
jmp
imul
adc
negb
outsb
rclb
dec
sbb
add
sti
or
fwait
push
fidivrs
xor
mov
aam
mov
js
push
cmp
cmp
jb
mov
out
les
lcall
out
fs
jae
rorl
test
shll
pop
loop
cwtl
jmp
es
pop
dec
cmp
test
sbb
arpl
leave
pop
out
je
and
stos
jle
sub
cmp
pop
dec
push
dec
icebp
gs
push
jg
jae
cmp
mov
out
pop
lods
xchg
cmp
and
add
add
push
sbb
mov
lock
or
ret
das
cmpsl
push
andl
das
add
std
pop
mov
lret
inc
mov
roll
fldenv
pushf
lahf
sub
adc
cmp
inc
dec
cmp
insb
or
outsb
inc
jmp
and
or
pop
lret
repz
andb
clc
and
jl
cmp
test
sbb
dec
mov
cmpsl
lock
dec
aam
aad
imul
mov
mov
sub
loop
popa
or
and
pushf
and
adc
daa
test
inc
repnz
es
fiadds
aas
in
pushf
lret
mov
lds
das
addr16
ret
enter
xor
xor
orl
lahf
repz
pop
xor
cmp
cwtl
xchg
mov
cltd
add
rdpmc
sub
jbe
mov
cmp
sbb
mov
je
adc
cwtl
lret
mov
sbb
pusha
push
scas
mov
sbb
sbb
outsl
out
stos
or
adc
and
sub
adc
lret
loop
push
sahf
add
in
inc
cs
push
and
mov
jno
add
add
flds
fstps
psrlw
sbb
pop
ja
dec
xchg
testb
xchg
push
push
out
dec
lds
scas
les
lock
cmp
lret
movsl
xor
cmp
jns
test
and
hlt
dec
mov
sysenter
inc
or
or
mov
mov
fildll
popa
test
xorl
xchg
mov
movsb
dec
cld
repz
push
out
pushf
jnp
xchg
nop
push
mov
std
cmpsb
xor
fbld
dec
dec
xchg
jae
xorl
cmp
push
fstpt
mov
xlat
sub
aas
xor
loopne
test
jecxz
add
dec
and
rorl
mov
imul
pop
fstpl
inc
lea
stos
idivl
das
cli
ds
outsl
inc
fstl
and
aad
adc
gs
mov
push
xchg
sub
xchg
lret
fnstenv
or
and
xor
xchg
mov
push
cmp
mov
mov
dec
in
test
xchg
push
shll
sub
push
daa
iret
or
lods
mov
lret
or
push
stos
mov
cs
mull
jle
or
mov
sbb
in
test
add
sub
or
dec
in
mov
sub
mov
jo
or
roll
call
inc
sbb
pop
fwait
addr16
sti
adc
data16
xlat
xor
shll
fisubs
in
outsb
ret
insl
sub
pop
xor
xor
jno
call
xor
mov
adc
aas
or
rcr
adcb
mov
js
je
out
stc
xchg
into
push
sbb
jns
push
mov
inc
sti
cmp
jae
pushl
xchg
dec
push
arpl
xchg
test
shlb
pop
adc
test
mov
out
aaa
pop
and
add
mov
add
push
jns
push
test
fwait
mov
std
lods
add
jae
lods
hlt
jge
in
scas
xlat
mov
mov
and
fcomps
mov
enter
mov
call
xchg
lods
mov
out
pusha
cmp
jnp
in
decb
cltd
sbb
or
mov
leave
lods
jle
es
xacquire
mov
xor
push
stos
and
adc
rorb
jne
sbb
add
mov
sti
je
and
lahf
lret
es
adc
je
jb
or
sarb
icebp
push
push
loope
or
cli
sbb
ljmp
out
aaa
repz
cmp
xchg
mov
cmp
outsb
mov
pop
scas
stos
jne
int3
push
cmp
insl
mov
repnz
outsb
loop,pn
inc
inc
stos
js
mov
mov
adcl
ss
cld
popf
jp
jg
gs
push
arpl
pop
push
xor
inc
arpl
dec
fadd
sbb
into
lret
shrb
test
pxor
cwtl
xor
cld
xchg
inc
mov
sbb
xorl
cmpsl
in
ss
test
jle
scas
in
cwtl
shlb
push
push
sbb
scas
jl
test
xchg
add
add
sbb
xchg
mov
popl
xchg
daa
adc
loopne
das
pop
popa
fisubs
lea
inc
inc
lahf
sub
lret
mov
mov
xchg
mov
aaa
or
xor
arpl
sti
pop
mov
pop
jno
test
jmp
sbb
or
ds
pop
popl
test
xchg
mov
fwait
adc
xor
daa
mov
movsl
sbb
es
dec
push
xor
psubd
sbb
dec
adc
stos
adc
jmp
xor
pop
cmc
pop
arpl
mov
jo
cwtl
stos
fistps
push
xchg
cmc
sbb
push
mov
or
dec
imul
mov
mov
xchg
cmp
mov
lods
mov
adcb
out
push
or
xchg
mov
or
sub
lcall
cwtl
or
xor
mov
mov
subl
mov
shlb
mov
dec
hlt
jne
aam
test
insb
insl
js,pt
and
inc
inc
mov
fiadds
mov
mov
fistps
or
repnz
cmp
loope
pusha
lock
sub
lock
pushf
lock
cli
dec
test
adc
iret
mov
outsb
pop
pop
mov
mov
mov
adc
adc
es
jecxz
push
push
mov
add
les
call
int3
xchg
and
dec
cltd
cwtl
aam
out
popa
repz
jns
in
sub
scas
mov
push
lds
cmpl
inc
lea
xor
jb
lods
add
pop
push
push
adc
aas
push
pop
xchg
sbb
mov
cmp
fdivrp
enter
hlt
mov
loopne
push
pusha
lds
mov
pop
inc
in
sub
mov
repz
imull
aad
xor
das
mov
inc
arpl
xchg
out
mov
cltd
jno
xchg
pushf
pushf
lret
mov
pop
ljmp
incl
dec
sahf
push
or
xor
gs
jecxz
in
pop
add
loope
shl
xor
movsl
mov
push
movsl
pop
movsb
jno
loope
stos
stos
cmp
mov
aas
jae
int
ret
stos
pop
pop
push
push
jl
lahf
pop
xchg
jle
add
mov
inc
jge
shll
les
inc
and
sbb
test
in
lods
inc
outsb
fldl
out
loope
and
push
jge
jno
les
cmp
mov
sbb
lods
xor
xchg
shl
aaa
add
mov
loopne
adcb
adc
and
into
test
or
xchg
push
pop
mov
cmp
rcll
add
fsubr
push
xlat
dec
sbb
xor
dec
push
jp
and
mov
gs
imul
call
mov
loop
in
stos
add
lock
xchg
int3
pusha
jae
sbb
sahf
subl
xchg
popf
ret
xchg
icebp
or
fbld
inc
push
mov
test
ljmp
inc
test
test
inc
jb
adc
cmp
nop
out
int3
les
pop
dec
js
ljmp
test
push
xor
xlat
ja
aad
test
mov
lret
fdiv
sbb
xchg
fistpll
imul
add
add
iret
xchg
adc
jns
ljmp
sbbb
add
outsb
add
adc
bound
dec
push
scas
adc
pop
xor
hlt
imul
inc
cmp
jae
into
das
pop
xlat
add
enter
shl
fs
pop
adc
mov
scas
and
mov
sbb
adc
aad
inc
sbbl
ret
mov
lods
xchg
adc
arpl
push
pop
xrelease
sbbl
cmpsb
mov
sbb
aaa
cmp
jnp
xchg
cmpsb
and
in
bound
xchg
pop
adc
xchg
jp
dec
es
ret
clc
sbb
pop
sarl
hlt
js
test
mov
push
cmpl
loope
lea
and
add
insb
sub
mov
mov
jae
insb
jo
inc
pop
sti
aaa
inc
mov
sub
xchg
movsl
mov
cmpb
aam
push
add
add
sub
hlt
adcl
rorb
stos
daa
ret
rorb
pushf
or
loope
sub
xchg
mov
inc
jae
jne
xor
push
push
mov
cmp
push
daa
call
cmp
fistl
loope
sbb
xor
aam
icebp
push
rcll
sbb
xor
push
jnp
sub
xor
lock
insb
ds
add
dec
mov
xchg
mov
stc
jle
inc
mov
mov
xor
lret
and
jne
mov
test
test
jae
ss
or
add
icebp
shl
adc
cmpsl
hlt
xchg
movsb
popf
xchg
jns
orl
or
cmp
test
lcall
inc
aad
in
mov
outsl
cmpsb
dec
aaa
add
cs
and
jp
xchg
push
fdivr
mov
dec
adc
outsb
call
xchg
mov
xor
test
aad
adcl
dec
arpl
cmp
jmp
lret
ds
inc
cltd
push
mov
orl
out
xchg
pop
lock
fcmovnb
jl
out
sbb
cli
mov
mov
mov
xor
xchg
jg
push
stc
movswl
js
int
fs
add
loop
inc
loope
push
loopne
test
pop
cltd
and
lea
bound
clc
jbe
adc
test
push
lock
jmp
addr16
shll
push
lahf
test
sbb
es
jl
xchg
jge
outsb
add
and
rorb
mov
inc
shrb
lahf
outsb
dec
inc
cmp
xor
sahf
enter
jne
cmp
cmpb
inc
jle
push
inc
lret
out
loope
nop
leave
jno
js
inc
iret
stc
push
lret
in
nop
out
pop
xor
pushf
jle
inc
or
pop
ja
sbb
inc
loope
dec
lahf
jno
pop
ds
icebp
xchg
pop
jle
imul
pop
mov
push
fxam
cmp
js
mov
cwtl
xor
aad
or
js
inc
int
jge
push
sub
jl
mov
sbb
xor
mov
sbb
adc
inc
xchg
gs
mov
divl
data16
cli
jno
jp
mov
and
and
sarl
repz
stc
popa
iret
mov
jns
paddsb
add
cmpsl
insl
push
lret
and
xor
mov
jmp
je
lret
fucompp
mov
loop
ja
fisubrs
jnp
into
inc
xchg
mov
mov
add
sub
push
cmpl
scas
sbb
adc
inc
inc
push
fisttpll
repz
mov
dec
mov
aas
xchg
xorb
push
push
lods
adc
sbb
pop
mov
cmp
sbb
or
jo
sub
add
dec
loope
outsb
ljmp
push
popf
arpl
mov
arpl
mov
cmp
mov
out
cld
cmp
mov
hlt
int
bound
push
std
push
aad
gs
add
mov
data16
adc
js
aaa
mov
outsl
dec
jno
dec
sub
lock
xchg
fcoms
nop
je
dec
rclb
and
jle
stos
fstl
sbb
pop
or
xor
mov
sub
mov
out
aaa
je
sarl
mov
outsb
jb
jo
mov
adc
adc
cwtl
push
inc
mov
movsl
sbb
inc
xchg
fisubl
fisttps
xor
push
das
cmp
xlat
sbb
pop
jle
jo
insb
sti
je
jno
cmp
stos
ss
dec
inc
cmpsb
repz
imul
push
xchg
and
or
loope
sbbl
gs
xchg
sar
call
mov
out
cs
mov
xchg
sub
and
mov
lahf
or
xchg
mov
push
push
cli
pop
mov
inc
ss
test
dec
popl
lods
push
mov
int
sub
inc
add
pop
inc
xor
in
push
orb
cmp
sahf
jns
jl
push
sbb
lods
jae
adc
add
xchg
bnd
pop
ret
jle
cwtl
out
inc
insb
push
jnp
pop
xchg
mov
mov
dec
jge
inc
in
int
mov
stos
inc
dec
outsl
je
mov
rcrb
bound
addr16
sahf
xor
mov
xor
shlb
add
jge
popf
push
hlt
xchg
sbb
aas
out
scas
add
pop
inc
mov
fiaddl
addr16
sub
push
mov
aad
popa
lret
xchg
cmp
xor
ss
jne
in
loopne
pop
fnstenv
inc
xor
std
jno
sub
add
add
add
nop
cmp
jne
push
icebp
add
aam
mov
jb
push
adcl
sub
gs
in
pop
xor
pusha
repz
insb
push
mov
aad
clc
mov
loop
cmc
pop
cmp
xchg
jns
inc
push
jl
adc
xchg
lcall
xlat
cmp
repnz
test
sub
and
add
pop
add
cmp
sbb
mov
repnz
mov
iret
loope
insl
pop
sbb
cld
notb
inc
xchg
mov
add
mov
icebp
fdivs
fnsave
mov
fucom
pop
adc
test
xor
dec
pop
popf
test
or
push
idiv
loope
add
pop
mov
mov
lcall
lds
ds
adc
lcall
fists
ljmp
adc
adcl
sti
stc
adc
bound
mov
adc
sub
out
pop
pop
xor
jmp
lcall
hlt
sbb
add
mov
call
shlb
scas
out
out
int3
movaps
mov
leave
xchg
lahf
stc
popf
xor
sbb
mov
cli
scas
jns
add
sbbb
in
call
sub
pop
arpl
sbb
sqrtps
jp
ja
mov
mov
ss
sbb
push
and
fldt
inc
sub
dec
push
negl
or
mov
loope
icebp
aam
push
lcall
cltd
je
test
test
adc
lds
jns
lods
push
inc
jo
daa
bswap
fcoml
dec
insb
push
xor
or
push
das
jp
xchg
rcl
jge
dec
push
mov
mov
and
mov
repz
lods
xor
lret
fstpl
mov
shrl
cmpsl
dec
fldcw
test
lcall
lock
insl
fldenv
mov
sub
add
push
mov
fcoml
xchg
jb
rolb
mov
into
inc
inc
ffreep
sarl
iret
xchg
mov
sub
jo
mov
sbbb
inc
xor
jno
mov
pop
add
out
sub
inc
ds
insl
inc
sub
imull
leave
int
fcomps
push
xchg
and
shrb
adc
out
pop
dec
cmp
adc
fs
xchg
dec
jne
cmpsl
std
iret
hlt
andl
xchg
popf
stos
repnz
cmp
frstor
lods
jns
fldt
call
int3
sub
sub
and
dec
xor
gs
or
push
mov
dec
cmp
outsl
and
gs
jae
sti
xor
jmp
ret
inc
sub
leave
popl
ss
push
ret
lcall
rol
push
and
sub
daa
sti
fldt
pop
pop
rolb
rcl
adc
sti
push
test
repz
test
push
mov
inc
icebp
es
movsb
clc
in
lods
push
rclb
sbb
jns
loop
add
js
mov
mov
insb
xor
cmp
mov
push
xchg
rcl
add
out
sti
mov
sbbb
sbb
cli
sub
dec
fucomi
les
sbb
push
pop
and
push
push
push
mov
fs
into
sub
ret
mov
fcom
mov
dec
push
jle
or
pop
sbb
jno
in
sbbl
xor
movsl
data16
adc
shlb
into
scas
mov
nop
cvtps2pi
xor
movsb
or
mov
inc
sarl
lret
xchg
es
adc
push
insb
xor
js
mov
sub
lret
mov
mov
bound
cwtl
out
cli
dec
xchg
shrl
in
js
inc
nop
jns
bound
lods
ds
shld
subl
out
push
inc
mov
out
arpl
mov
sub
jbe
negb
bnd
stos
xor
cmp
dec
jne
mov
aaa
mov
repz
mov
das
cli
xor
bound
ljmp
push
outsb
pop
in
insl
cmp
lret
fidivs
adc
fnstsw
or
dec
iret
js
sub
ljmp
add
xchg
mov
cmc
cli
mov
cmp
into
dec
ja
popa
mov
imul
insl
mov
sub
cwtl
je
add
pop
fs
cmp
stos
shl
sar
rcl
jmp
push
scas
mov
cmpsb
push
xchg
pushf
xorb
fsubrl
push
mov
xchg
mov
insl
pop
into
pusha
and
jecxz
bound
mov
push
adc
sub
movsb
push
in
cltd
les
xchg
push
fistpll
mov
xor
rorl
sar
and
les
into
sbb
and
jbe
bound
test
test
fadds
adc
lea
dec
fiadds
ds
pop
loope
out
dec
daa
sti
jmp
jns
or
pop
lods
aaa
outsl
inc
jne
ret
fists
iret
jno
push
mov
pop
mov
xchg
imul
fldcw
ret
movsb
push
out
test
push
icebp
std
popa
xorb
jge
out
mov
test
push
fs
imull
and
lods
mov
sub
arpl
fs
jae
fnsave
pop
ljmp
adc
cmp
out
stc
fistpl
aam
mov
push
jne
xchg
insl
sbb
dec
out
add
cmpsb
std
out
sbb
dec
adc
je
imul
adc
sbbb
mov
popl
stos
push
adc
lds
xchg
icebp
mov
call
cs
mov
in
xchg
push
mov
fcomps
lret
imul
push
add
push
push
pop
dec
jp
add
and
jmp
push
int
mov
pusha
mov
and
xor
clc
xchg
lods
push
fcmove
fs
push
xor
cwtl
push
and
xchg
shll
push
cmp
div
cld
add
jb
test
aas
push
jecxz
sbb
add
aad
mov
shr
jmp
mov
stos
pop
pop
int3
sahf
sbb
mov
mov
imul
or
dec
push
leave
push
inc
lea
xchg
frstor
fcoms
ds
mov
insb
cmc
mov
pop
lds
push
xor
clc
shrb
xchg
test
repnz
cmpsl
mov
xlat
out
push
iret
mov
les
cltd
jno
imul
lcall
cmp
jl
xchg
stos
sbb
js
push
fwait
xor
inc
jle
ret
jnp
adc
rcl
decl
add
jp
pop
neg
add
xlat
jns
pop
aam
mov
mov
lea
call
cmc
retw
cmp
xor
sbb
adc
call
shll
and
jb
fwait
insb
addr16
sub
loop
sub
sbb
sub
push
je
ror
mov
pop
adc
cmp
pop
or
pop
repz
jne
mov
jnp
jg
xor
pop
pop
cs
shrl
jmp
repz
sub
xor
sarl
movsl
fisubrs
pop
arpl
pop
fdivs
xchg
lret
hlt
insb
pop
cwtl
roll
jmp
add
pop
mov
mov
jbe
add
lea
pop
fcmovbe
neg
fdivrs
xor
cwtl
imul
pop
call
and
pusha
stos
sub
cwtl
xlat
cltd
mov
rcrb
sub
push
call
insl
xor
push
mov
mov
inc
ljmp
pop
and
lahf
std
sbb
lods
int3
pop
xor
scas
xlat
in
ljmp
cmp
adc
rorl
testb
jbe
push
xor
test
adc
mov
loope
mov
ja
stos
jge
lcall
and
xchg
testb
pop
arpl
mov
and
mov
inc
aas
jnp
lret
jb
jns
add
adc
pop
pop
adc
rcrb
mov
enter
pmaxub
repz
aas
rclb
fmuls
inc
mov
rcl
lods
outsb
dec
test
xchg
push
and
movlps
mov
test
adc
jl
in
sbb
jg
xor
push
mov
or
loope
mov
push
stos
sahf
mov
jg
push
mov
pop
mov
dec
in
enter
push
ljmp
aam
daa
inc
xor
ret
dec
cmp
cmp
sbb
mov
insl
data16
ret
jae
lret
lret
sbb
fwait
lods
jg
lds
gs
pop
clc
jge
ret
adc
fists
cmc
mov
xchg
and
sbb
pop
pop
push
sahf
push
pop
xor
insl
and
inc
push
in
jp
dec
repz
mov
icebp
nop
push
mov
push
dec
mov
mov
dec
test
push
std
cmpsl
mov
inc
int3
scas
testb
cmp
mov
out
mov
pop
jo
dec
cmp
mov
mov
cltd
xchg
mov
mov
in
cmp
dec
adc
jb
mov
xchg
inc
dec
cld
and
imul
stos
leave
pop
xchg
fsubp
incl
lret
mov
adc
cld
in
mov
mov
xchg
jo
xor
insl
adc
or
popf
mov
push
jl
xlat
clc
mov
in
mov
jae
sub
fcomp
cmp
shlb
dec
inc
mov
jl
sub
test
sbb
xor
push
movsb
push
lahf
into
xchg
inc
push
outsb
pusha
pop
insl
sub
cli
test
addb
lret
adc
push
insb
adc
jne
fdivs
add
stc
xlat
push
jmp
testb
aad
mov
mov
and
mov
mov
and
jmp
dec
es
ret
or
into
js
push
imul
dec
imul
and
pop
push
sbb
mov
iret
fnsave
test
fucomp
mov
imul
int
push
or
rcll
and
fnstsw
mov
out
xor
movsl
mov
gs
fsubs
fiadds
insl
je
cmpsl
push
jns
test
cld
jnp
stc
int
inc
adc
inc
or
xor
sub
jp
rorb
icebp
pop
jmp
dec
ret
xchg
mov
cmp
insl
jns
ja
xor
cmp
cmp
mov
out
sub
jle
test
sbb
lcall
inc
cmc
cmpsl
mov
xor
in
ret
das
add
xchg
insb
jae
mov
and
mov
push
movsb
jecxz
xor
jp
inc
movsl
xor
inc
xor
fs
xlat
daa
or
mov
in
mov
pop
adc
insb
lods
into
nop
iret
jne
ljmp
add
push
je
push
arpl
mov
movsl
mov
sub
cmp
inc
mov
rorl
je
mov
jns
push
xor
jne
insb
mov
out
xchg
mov
call
lods
xchg
mov
test
cmp
jle
out
lods
adc
inc
xor
fstpt
mov
je
mov
mov
fildl
mov
mov
pop
or
or
adc
and
popa
dec
sbb
cli
cmc
fstps
mov
loope
jbe
or
jae
xlat
sbb
mov
mov
gs
or
and
push
stc
arpl
pushf
pop
push
sub
xchg
filds
or
add
shll
jne
scas
xchg
scas
lahf
push
arpl
dec
adc
ficoml
hlt
jb
fadds
rcrb
insl
xor
pop
in
dec
movsl
sbb
jne
in
xchg
xchg
cmp
add
push
adc
movsb
inc
adc
gs
push
loop
xor
jecxz
in
jae
pop
roll
cmpsl
pop
cmp
sub
fiadds
adc
outsl
cmc
mov
mov
jb
sarl
movsl
ffree
gs
ja
pop
cmp
dec
test
bound
pop
xchg
testb
or
inc
mov
or
ds
mov
stos
test
out
jecxz
dec
jl
jge
adc
loope
loope
lock
jecxz
imul
das
fldl
dec
sub
nop
adc
xor
repz
scas
pop
jno
adc
cmc
lret
int
lea
js
lret
add
sbb
insl
xchg
arpl
pop
mov
jne
cmp
or
sarl
pop
ljmp
or
adc
pop
adc
push
mov
dec
daa
cli
dec
rorb
inc
shlb
push
push
fstl
sbb
into
in
dec
push
jne
mov
jbe
and
jmp
jno
fwait
mov
add
loop
adc
adc
jns
inc
mov
scas
ret
and
pop
mov
pushf
or
xchg
outsl
js
ja
repnz
or
and
xor
mov
imul
leave
jnp
enter
scas
inc
sub
aaa
xor
or
dec
mov
xor
xchg
mov
lock
movsl
sbb
aaa
pop
cmp
fldl
fimuls
call
ss
bound
call
data16
mov
mov
call
inc
cs
mov
dec
pop
inc
gs
xor
jp
ret
sub
shll
int3
lods
mov
or
fadd
idivl
dec
mov
arpl
loope
or
lock
or
cwtl
inc
mov
push
lret
pop
jae
hlt
jo
sbb
repz
jp,pt
ret
icebp
mov
cltd
xchg
jbe
cli
les
add
insb
mov
mov
popf
jecxz
sub
push
cld
sub
jb
lods
sbb
ret
jg
cmp
imul
sbb
js
sbb
cmp
cmpsb
cwtl
and
inc
xchg
sub
mov
push
adc
pusha
stc
fiaddl
xor
lods
push
das
inc
cmp
xchg
fs
ljmp
push
cmp
xor
lods
jl
xchg
mov
scas
scas
push
and
pop
mov
dec
mov
mov
iret
in
xorb
inc
sbb
push
or
sub
pop
js
repz
mov
xchg
dec
cli
lock
cmp
cmpsl
inc
sbb
sbb
jmp
fistpll
mov
mov
std
ret
push
stos
in
leave
fidivrl
inc
xor
scas
sbb
out
add
lea
inc
or
push
dec
mov
sahf
mov
test
test
pop
outsb
fsub
jmp
sbb
rclb
imul
and
imul
rol
ret
xchg
push
cmpsb
aad
ret
jp
cs
sub
or
mov
mov
lock
inc
push
and
int
popf
cmp
sbb
test
lods
or
clc
out
dec
bnd
push
cmp
push
gs
jo
movsl
lcall
test
scas
ja
push
divl
in
pop
aas
cltd
scas
push
xchg
ja
mov
test
and
je
dec
daa
mov
adc
imul
or
xchg
jecxz
ds
mov
arpl
sbb
xchg
out
js
cli
fstpt
testl
xchg
sub
dec
divb
ljmp
mov
jmp
jmp
or
dec
cld
add
imul
sbb
sub
lods
cmpb
sti
push
out
roll
and
xchg
nop
mov
xchg
mov
xor
pop
fnstenv
filds
mov
fcmovnbe
mov
sub
mov
adc
sub
dec
test
and
or
lock
mov
jmp
push
pop
jo
js
out
rcrb
fdivr
add
dec
je
cs
cmp
jne
repnz
xor
adc
dec
push
jae
cltd
fldcw
sbb
movsb
mov
arpl
add
push
in
mov
sub
or
jl
jecxz
int
fmulp
xchg
push
fidivl
addr16
mov
mov
mov
mov
jae
popf
out
push
test
out
pop
pop
imul
pop
fildll
adc
scas
outsl
dec
subb
mul
sub
ss
je
pushf
in
pop
and
push
push
sbb
pop
jmp
das
shlb
pop
pop
and
gs
jmp
loopne
xchg
push
sbb
and
aas
das
cmc
repnz
mov
lret
cmp
jb
popf
les
and
xor
testl
cwtl
test
sub
jmp
into
negb
data16
fnstsw
out
je
shll
ja
mov
sbb
dec
int3
idivl
fisubl
daa
xchg
jbe
addr16
jae
addr16
mov
cmp
inc
jne
lcall
and
and
out
jne
sahf
fdivs
fdivrp
in
pop
mov
pusha
testl
jbe,pn
insb
add
xchg
xchg
adc
xchg
jge
nop
shrb
mov
adc
adc
out
and
or
pop
and
inc
and
lahf
sbb
mov
adc
xorb
dec
outsb
out
sbb
dec
movsl
mov
mov
mov
fiaddl
test
in
adc
push
jnp
lds
dec
je
push
out
jge
xor
push
xchg
shll
das
jmp
cltd
movsb
mov
mov
cli
push
clc
adc
cli
xor
or
hlt
inc
push
cmp
inc
ljmp
xlat
mov
insb
adc
out
sbb
fnsave
jecxz
sbb
sub
divl
mov
mov
and
pop
pop
jle
adc
js
push
mov
mov
dec
out
imul
mov
sbb
mov
jnp
cwtl
jl
push
stos
lahf
sub
push
push
pop
or
mov
jnp
ret
sub
cmpsb
movsb
jle
xorb
scas
aaa
or
ret
pop
testl
adc
xchg
lods
stos
in
lahf
jns
pop
jo
ljmp
cmp
stos
loop
paddsb
add
cli
ds
imul
jae
mov
and
cmp
dec
or
div
mov
add
leave
or
pop
cmp
sbb
popa
fsts
jge
lods
test
dec
xor
stos
inc
cmp
dec
jb
addr16
jbe
add
inc
add
cwtl
enter
add
mov
xor
mov
repnz
add
inc
fidivs
pop
lock
xchg
dec
pop
dec
repz
xor
lea
sbb
in
jge
bt
loope
std
jno
push
xchg
arpl
hlt
popa
cmp
out
out
mov
sub
push
mov
stos
mov
mov
push
clc
fwait
xlat
xchg
movsb
in
mov
fsubr
popl
lret
mov
lret
pop
xor
sbbl
adc
mov
fisttpll
or
outsb
sub
or
pop
jbe
fidivl
out
push
sub
xchg
mov
jno
cmp
aad
cmc
fsubrs
mov
clc
test
lea
fsubrs
rcrb
inc
pop
popa
in
pop
dec
lret
shrl
add
lds
repz
jmp
in
loopne
mov
adc
daa
aad
pop
lds
push
mov
daa
and
cmpsb
push
mov
xchg
xor
sbb
pop
dec
push
cmp
das
test
or
iret
cwtl
cmp
xor
xchg
lock
xchg
push
push
sbb
pop
inc
addr16
stos
call
lret
add
xor
jge
enter
lret
sub
into
cmp
imul
xchg
addb
test
mov
loopne
cmpsl
out
subb
push
add
ficomps
dec
ret
xor
push
popf
sbb
xchg
or
hlt
aad
cmpb
in
and
and
adc
pop
xorl
push
mov
mov
sbb
mov
dec
add
or
xor
xor
xchg
cld
ret
pop
mov
mov
dec
inc
in
jnp
imul
inc
inc
or
sub
in
mov
adc
mov
test
push
xor
adc
inc
icebp
sarb
ljmp
inc
mov
test
sub
hlt
xor
fs
push
mov
iret
xabort
pop
jns
push
loop
or
fwait
jl
or
out
push
and
jbe
cmpsl
outsb
jl
leave
mov
pop
loop
cs
cmpb
xchg
negl
das
iret
add
in
divl
mov
dec
xchg
inc
movd
dec
pop
mov
mov
ret
arpl
fisttpll
inc
or
pop
push
and
mov
fadds
orl
ret
mov
outsw
popf
inc
loopne
cltd
cli
loope
xchg
dec
lock
cmp
adc
fisttps
adc
popa
cmpsb
add
sbb
test
push
iret
xchg
add
inc
mov
ret
out
or
and
cmpsl
add
leave
lods
rolb
std
into
movsb
cmp
xor
push
out
bound
pop
mov
xchg
cltd
push
out
daa
nop
mov
or
sahf
mov
dec
inc
mov
dec
sbb
in
outsb
xor
lcall
in
call
and
and
scas
aas
sub
jns
dec
mov
aaa
xor
stos
sahf
imul
fld
aam
rclb
mov
mov
adc
or
int3
push
test
rorl
lock
int
repz
pop
xchg
dec
scas
les
pop
clc
addr16
sbb
and
push
jo
int
and
push
pop
iret
add
mov
sbb
xchg
inc
jl
xor
fs
sub
mov
xor
inc
mov
lods
es
pop
adc
pop
jl
jae
add
xchg
push
lods
fiaddl
dec
mov
sbbl
dec
sub
pop
aad
push
xchg
lahf
daa
add
push
and
or
mov
outsb
sbb
std
mov
mov
test
sbb
inc
xor
jno
cwtl
push
cmc
pop
jmp
movsb
add
pop
mov
inc
xlat
cmp
xchg
movsb
addb
push
je
aad
movsl
ret
sbb
fldt
jbe
icebp
out
mov
mov
and
call
mov
push
shl
std
adc
aas
jg
mov
pop
ret
push
or
push
jecxz
out
pop
xor
and
sub
xor
add
sub
orl
dec
sbb
lcall
movsl
in
idivb
cmp
cmpl
add
and
xorl
das
jae
sarl
mov
sub
ret
test
into
in
xchg
mov
std
imul
sbb
mov
sub
xchg
imul
mov
mov
pop
out
movsb
repnz
negb
fsubp
cltd
dec
push
push
jbe
mov
outsb
pop
jo
push
je
cltd
insl
push
enter
mov
out
mov
hlt
loope
sub
popf
mov
into
loope
mov
int
cmp
sub
aad
repnz
cwtl
and
clc
adc
xor
jge
pusha
dec
fistpl
mov
inc
add
jne
cltd
push
call
movsl
and
testl
outsb
shlb
inc
mov
aas
and
aaa
or
adc
xchg
loop
mov
sub
ret
inc
pop
cwtl
ficoml
jae
push
mov
jl
adcl
sbb
mov
push
xchg
test
push
mov
pop
sarl
inc
loopne
xor
mov
bound
dec
push
push
add
adc
hlt
pop
and
fwait
mov
out
cmp
sbb
xorb
cmp
out
and
sbb
dec
mov
xchg
rcl
lea
adc
aas
ret
xchg
cmpl
cmp
mov
in
mov
add
mov
int
adc
out
xchg
xchg
mov
inc
sub
add
add
mov
out
out
shlb
push
pop
inc
rclb
and
fs
push
inc
dec
fiaddl
pop
pop
rcll
dec
xor
popf
cli
les
jne
fwait
push
and
inc
pop
pop
xchg
push
popa
test
sbb
adc
bound
or
adc
xor
jge
cwtl
mov
pushf
negb
in
sbb
jmp
push
adc
shll
xchg
xchg
xor
insl
mov
adc
adc
mov
add
out
or
and
daa
dec
cmp
dec
cmp
dec
cmp
jbe
inc
lahf
add
push
push
aaa
cmp
pop
push
mov
cmc
pop
addr16
xchg
mov
sub
ret
sbb
sbb
shlb
sbb
push
or
sub
xchg
ror
clc
sub
sbb
rolb
mov
push
inc
dec
aaa
movsl
daa
mov
mov
push
dec
or
mov
jns
mov
imul
cmp
cli
test
cmp
adc
add
repnz
int
adc
xlat
cwtl
mull
xchg
mov
pop
repnz
divl
or
sbb
jecxz
roll
mov
sarl
fisubrs
pop
movsl
imul
loop
out
cli
adc
scas
mov
fcomip
dec
mov
and
inc
outsl
push
movsb
fcomps
loop
xlat
push
out
outsl
mov
adc
jns
cmovs
inc
dec
mov
fnstcw
pop
out
test
movsb
add
dec
dec
aaa
lcall
adc
arpl
fs
push
mov
pop
push
jb
and
and
adcl
adc
add
scas
sbb
or
btc
out
pop
in
lss
mov
std
jg
lret
out
adc
insl
push
mov
push
mov
lods
push
movsb
cmp
mov
cmp
and
and
cmp
lcall
sub
testl
movsl
das
gs
sbb
nop
xchg
mov
jp
mov
or
inc
dec
push
dec
inc
add
rolb
filds
out
loopne
loope
lret
pop
xchg
in
sbb
cli
fcmovb
loopne
lock
add
cli
mov
rcr
addb
outsl
rcl
mov
gs
pop
pop
xchg
cmpsb
inc
and
pop
push
pusha
pushf
out
add
cmp
sub
jmp
mov
jmp
and
aaa
pop
stc
insb
scas
dec
xor
addb
lds
push
ret
mov
sub
mov
lret
into
bound
mov
inc
sbb
ljmp
jg
xor
add
mov
aaa
xchg
cmpsl
testl
out
mov
lcall
andl
sti
inc
imul
mov
mulb
fadds
lret
xor
mov
sti
fcoms
aaa
std
pop
icebp
pop
addr16
orl
dec
or
push
sub
or
cmp
jle
lods
or
in
aad
push
adc
sub
mov
mov
sub
ficoml
pop
ljmp
sbb
push
out
pop
dec
fistps
cltd
push
mov
imul
mov
loop
pop
jge
nop
ret
or
xor
shrb
xchg
cmp
das
leave
mov
or
adc
mov
add
sbb
adc
out
xor
fcoml
push
sbb
pusha
jns
sbb
xchg
ljmp
sub
leave
cmp
xchg
pop
addr16
pop
rorl
adc
push
sbb
ljmp
repnz
lea
inc
loope
sar
pop
push
pop
mov
adc
xor
jb
in
dec
or
cmp
ds
das
loope
int
ss
mov
add
jnp
out
pop
out
shll
aam
mov
scas
js
jae
cmp
sub
js
std
fwait
pop
sub
fadds
fidivrs
cltd
rcrl
adc
adc
mov
sahf
cmp
outsb
jne
fidivl
pushf
fisttpl
fcompl
lds
add
pop
inc
and
add
add
in
mov
jge,pn
imul
shrb
imul
or
push
dec
xor
adc
add
sbb
fbstp
mov
xchg
jp
pop
je
rcrb
rcl
enter
fnstcw
jae
or
not
shl
cmc
out
es
std
and
loope
data16
arpl
inc
or
out
jmp
jmp
orl
jo
mov
cmp
sarb
mov
sbb
push
es
test
je
push
dec
pop
incl
xlat
out
mov
xchg
jge
ss
lock
cli
insb
cld
jns
pop
call
mov
jg
stos
push
in
jmp
or
mov
loope
cmp
ds
jae
pop
addr16
loopne
pop
jo
pop
mov
movsl
adc
and
pop
add
jp
in
negb
push
jnp
stc
rcrb
popf
sbb
cmp
leave
ljmp
push
mov
or
sbb
adc
jae
into
cmp
push
xchg
xor
jbe
mov
or
rorl
or
imul
dec
mov
xor
lahf
mov
ja
dec
out
jbe
sub
xor
mov
scas
sahf
pop
negb
and
mov
scas
inc
daa
mov
sub
or
iret
cmp
fdivrs
xchg
ss
sub
in
add
inc
std
pop
ja
fcoms
arpl
mov
or
js
mov
adc
pop
inc
js
add
pop
adc
push
and
sub
sub
jo
mov
cld
dec
mov
ja
or
test
xchg
sbbb
lds
xchg
mov
cltd
jbe
xchg
ret
pop
testb
filds
push
push
icebp
mov
mov
dec
scas
fmull
ficoms
xor
test
inc
lret
or
push
sbbl
push
scas
inc
out
push
dec
test
mov
inc
js
lahf
enter
adc
cld
outsb
fcomp
lahf
divb
jle
sbb
dec
aam
jnp
mov
mov
sbb
inc
add
nop
and
inc
adc
loopne
fldt
nop
push
and
rep
call
ficomps
push
push
sub
push
lcall
xor
aas
cmp
mov
sub
mov
scas
or
lret
cmpsb
fstps
fwait
iret
negb
out
cmp
push
adc
ljmp
sbb
xor
mov
mov
mov
psubb
lcall
xchg
aaa
push
sub
mov
mov
inc
lret
push
das
and
les
or
out
add
pop
imul
cmp
cmp
jle
xchg
outsl
mov
daa
std
xor
sub
jl
icebp
adc
test
popa
push
push
movsb
xor
mov
jo
cmp
or
mov
jmp
sahf
mov
jo
inc
push
push
outsl
xchg
or
push
pop
push
xchg
mov
xchg
int3
fnsave
ljmp
sbb
dec
les
mov
out
das
lahf
cwtl
fiadds
pop
cs
rorl
add
jg
xchg
cmpsb
rclb
and
movsl
xor
mov
sbb
jg
jns
jb
pop
dec
leave
jecxz
loope
xor
cmc
xchg
or
or
ficoml
pop
mov
jmp
fdivrl
loopne
jmp
insl
cmpsb
jle
mov
add
sahf
enter
test
push
and
insb
cmp
ss
mov
je
out
fwait
inc
sub
ja
call
ds
popf
mov
cmp
dec
out
iret
leave
loopne
jp
ljmp
and
push
and
dec
or
and
shr
int
mov
lahf
out
mov
loop
lahf
movsl
pop
jbe
cwtl
int3
xchg
pop
dec
push
fnstcw
cs
sub
pop
insl
push
in
imul
leave
add
cmc
sahf
mov
sbb
gs
mov
xchg
stc
jle
pusha
xchg
jg
xor
jo
cmp
dec
cltd
push
iret
lock
out
lahf
pop
jb
lods
or
mov
inc
lds
call
or
xor
gs
cltd
shll
dec
int
cli
xchg
loope
icebp
dec
outsl
in
or
iret
lock
cmc
call
and
adc
fwait
or
xchg
xchg
cmp
lds
ds
out
push
xchg
fs
cli
push
cmpsl
sub
fs
and
xor
dec
clc
xor
js
movsb
jbe
jno
mov
aam
test
mov
movsl
dec
and
or
iret
mov
jno
add
xor
ja
incb
enter
insb
cmpsl
nop
popf
repz
sbb
test
call
mov
mov
xchg
xor
xchg
pop
or
add
dec
das
pop
into
add
mov
adc
mov
les
or
xchg
pop
cli
sahf
test
xor
addb
adc
jge
xchg
push
scas
andb
cwtl
faddl
dec
jg
push
andb
mov
loopne
push
or
dec
mov
jp
jecxz
jno
mov
dec
jbe
test
xor
fisubl
in
repnz
sahf
dec
mov
test
cmp
icebp
movsb
cli
adc
mov
xor
fadd
int
fcomps
push
jl
in
or
mov
out
add
outsb
xor
mov
jbe
add
ss
mov
mov
jae
aad
inc
jle
rcrl
mov
mov
jmp
xor
jle
aam
stos
mov
stos
pop
push
adc
ret
rolb
mov
dec
mov
jae
jmp
cmp
or
push
inc
rclb
je
xchg
cs
out
pop
addl
push
push
loop
cmp
pop
outsl
xchg
fidivl
and
stos
inc
fsubrl
or
sti
adc
inc
fidivrs
sahf
fadds
push
pop
test
pop
or
loopne
inc
leave
sub
or
inc
push
sub
lods
ja
xor
pop
adc
push
decb
shrb
in
cmp
bound
daa
push
sub
stos
pop
in
inc
scas
xor
fists
aaa
aaa
lock
xor
and
cmpl
mov
mov
aas
sbb
and
jg
mov
stos
and
push
bound
or
sub
stc
xchg
rcrl
push
shl
cltd
and
push
jecxz
shrl
clc
stc
xchg
sahf
movsl
mov
xchg
repz
mov
jo
add
mov
shl
out
adc
dec
push
jle
jle
jae
loope
hlt
out
push
cs
outsb
les
fwait
or
sub
in
mov
ja
ror
add
aas
lcall
por
push
fs
mov
or
insl
push
mov
fld
xchg
jne
jg
lret
pop
mov
push
sub
pop
pusha
adc
test
call
mov
xor
repnz
test
ja
mov
dec
inc
push
xchg
test
adc
int
mov
fwait
cwtl
push
sub
xchg
jle
hlt
push
cmp
out
aam
repnz
inc
xchg
xor
dec
fwait
std
fisubrl
sarb
popf
mov
jge
xchg
inc
mov
outsl
std
sub
es
subl
gs
xchg
push
and
mov
or
xchg
jb
pop
push
test
push
pop
jno
xchg
mov
lahf
pop
das
xor
and
mov
push
lods
popa
or
inc
sti
repnz
sbb
es
inc
in
sbb
aam
mov
xchg
jo
cmp
das
cmp
mov
add
insb
aam
test
cld
cs
jmp
xor
aad
cmp
xrelease
daa
mov
out
arpl
fadd
and
insl
pop
mov
jns
sub
mov
inc
movsl
gs
add
sbbl
xor
bswap
pop
sbb
lods
dec
mov
stc
mov
repz
sub
or
cmp
dec
rcrb
cmp
js
add
jo
xchg
push
or
push
cs
in
aas
shll
aad
sub
mov
cli
sahf
in
fnstsw
mov
in
in
shrl
and
inc
sahf
out
push
lcall
std
lret
imul
xchg
jge
lock
ror
out
mov
fbstp
rolb
cmc
mov
adc
dec
mov
sbb
lods
cli
mov
decb
xchg
outsl
pop
scas
shrb
dec
xchg
cmpsl
jo
push
shrl
xor
jnp
add
repz
mov
push
mov
shlb
mov
or
sbb
idivb
push
pop
cmpsl
push
out
and
fabs
dec
xor
cltd
enter
lahf
inc
mov
or
dec
ret
cmp
push
js
add
arpl
pop
xor
adc
mov
jnp
in
movsl
popa
cmp
shlb
cmpsb
push
or
mov
jnp
mov
pop
aam
ficoms
arpl
jae
mov
mov
cmp
nop
push
jbe
xor
aaa
jne
ljmp
sub
and
mov
mov
bound
scas
xchg
cwtl
dec
testb
insb
cltd
stos
dec
push
or
xlat
mov
repnz
std
adc
add
dec
pushf
jle
mov
xor
pop
outsb
scas
push
lret
jle
cli
sbb
push
paddsw
cwtl
lods
and
ffree
fcmove
imul
xchg
mov
lds
push
call
dec
sbb
push
call
ds
leave
je
push
int
sub
lods
pop
cmc
cmp
in
lods
ljmp
inc
jmp
mov
lds
into
add
cmp
int
imul
lea
inc
adc
jnp
sub
xchg
pop
out
imul
mov
nop
lcall
pushf
jg
cmp
dec
jmp
movsl
jno
enter
push
jns
icebp
cmp
jb
shr
mov
insl
icebp
icebp
pusha
stos
dec
add
mov
cli
aad
xor
cmpsl
fldcw
mov
ret
das
les
pop
popa
cmp
jns
sub
cmp
cmpsb
mov
sti
jg
mov
enter
adc
sahf
add
out
pop
jp
pop
cmp
xchg
cmpsb
mov
lahf
pop
loopne
mov
mov
pop
cmp
in
or
ja
dec
jmp
adc
jbe
push
shlb
jecxz
dec
sbb
stc
xor
sti
out
std
clc
xor
jle
ja
and
or
push
in
bound
dec
mov
cmp
ret
mov
pop
inc
xlat
lret
mov
push
std
sbb
add
stos
xchg
int3
and
jg
cmp
orps
mov
adc
cmp
inc
call
fs
sub
mov
dec
rorl
xchg
stc
mov
fmuls
xchg
filds
lds
std
scas
aad
xchg
daa
mov
inc
mov
dec
ficomps
repz
push
xchg
sub
mov
pop
daa
inc
jge
push
inc
sub
lahf
or
or
adc
add
or
push
stc
pop
gs
insb
in
dec
cld
cmpsb
sbb
imull
mov
adc
mov
add
mov
inc
pop
mov
lahf
nop
in
lea
ja
std
test
inc
jno
push
jp
xlat
inc
sbb
dec
shrl
mov
mov
push
ret
or
sub
in
dec
mov
into
lea
std
and
aam
sti
dec
test
xor
mov
pop
movsl
mov
jne
adc
out
jbe
and
push
arpl
and
and
mov
cmpsl
mov
fst
je
inc
cli
xorl
cwtl
fidivrs
test
add
adc
mov
add
sbb
std
mov
xchg
push
int3
and
rorb
loopne
push
jl
nop
cmc
dec
ss
fcom
add
dec
mov
jmp
lcall
into
mov
sub
pop
pop
mov
cmp
cmp
inc
mov
iret
clc
xchg
insb
push
cmp
daa
mov
fidivs
or
sub
inc
cs
daa
pop
pop
push
aam
jge
fidivrs
mov
data16
pop
outsb
out
xchg
pop
lock
fdiv
imul
mov
dec
jne
rcll
cmpsl
dec
sub
fmul
movsb
mov
push
lock
or
adc
xor
in
sub
pop
cmp
mov
mov
or
pop
xor
inc
inc
mov
cli
adc
mov
push
push
andb
and
sbb
mov
push
aad
popa
adc
test
cmp
fcmovnbe
push
inc
insl
xor
repz
xor
call
mov
or
out
mov
add
push
fadd
rcll
gs
outsl
test
cmc
mov
ljmp
jns
insl
sti
test
in
imul
ja
in
cmp
addr16
stos
shlb
or
cmp
fnstcw
push
pusha
mov
and
xchg
push
cmp
push
lahf
jecxz
out
insl
jnp
sti
out
and
xlat
push
imul
clc
es
inc
and
push
bound
and
sarb
mov
mov
xor
xor
int
repnz
nop
out
adc
mov
ljmp
stos
das
mov
pop
xor
rclb
scas
adc
push
cltd
dec
mov
cs
fsts
shlb
mov
cltd
pusha
out
orl
rorl
xor
lahf
mov
sbbb
adc
mov
or
inc
lret
add
pop
sahf
aam
inc
hlt
push
out
stos
xchg
adc
pop
lahf
pop
dec
jo
push
push
pop
adc
test
push
push
addr16
clc
sbb
xor
push
mov
scas
mov
mov
shlb
insl
cs
jo
xchg
adc
sub
xchg
xchg
test
adc
int
outsb
or
pop
das
ja
sub
and
xor
cmp
sbb
xchg
cltd
cmpsb
out
mov
push
jg
fisttpll
lcall
adc
bound
lods
dec
std
xchg
jne
jecxz
jae
lea
xchg
inc
inc
mov
mov
dec
mov
inc
sbb
leave
insl
push
xor
inc
jb
xchg
push
rcl
mov
xor
pop
ja
jb
outsl
orl
rcrl
testl
cmp
leave
pop
dec
test
jo
adc
mov
mov
mov
fidivrl
adc
mov
jle
xchg
sti
adc
pop
sbb
shl
push
mov
mov
mov
and
sbb
jg
or
test
lods
push
iret
inc
sbb
mov
sub
xor
cmc
mov
addr16
daa
mov
xor
or
sub
xlat
xor
fstpl
aam
ficoml
sub
cld
and
xor
mov
hlt
inc
xchg
imul
nop
ljmp
pusha
xchg
lret
pusha
jmp
push
or
mov
fsubl
aaa
jmp
iret
adc
ja
sbb
push
xchg
je
js,pn
adc
les
in
sbb
sub
cmp
scas
cmp
and
mov
icebp
jge
sbb
lds
arpl
insb
mov
dec
scas
addr16
xor
pop
sub
lcall
insb
xchg
je
add
inc
adc
lods
sbb
dec
mov
dec
and
rcrb
out
and
scas
in
xchg
jl
js
mov
scas
mov
mov
fs
mov
xor
loopne
mov
movsl
sub
into
jge
jb
cmpsl
clc
or
cmp
imul
cmp
or
inc
cmc
inc
insl
xor
adc
add
xor
pop
das
cmp
repz
mov
add
adc
aaa
dec
cmp
push
xchg
dec
pushf
or
push
ljmp
sub
mov
rcl
lcall
mov
lods
repnz
add
cmp
insb
stc
mov
arpl
shlb
add
sub
inc
shrb
xchg
push
enter
outsl
push
adc
push
cmp
stos
data16
mov
jge
ficomps
mov
lret
pop
mov
dec
in
xor
and
xor
lcall
fiaddl
test
repz
sub
pop
and
mov
jmp
out
repnz
ds
lock
aas
inc
sbb
shl
pop
xchg
push
ud2
pop
jno
stos
adc
inc
push
sub
dec
jg
jb
je
in
addr16
cmpb
mov
dec
adc
in
lret
cmc
mov
mov
and
in
push
popf
rclb
lahf
or
and
mov
out
push
faddl
fistpl
icebp
inc
loop
cmp
repnz
test
adc
xchg
popa
adc
es
sarl
repnz
movb
cltd
test
inc
pop
repnz
xor
dec
test
fsubl
mov
sbb
sub
fidivs
inc
into
fs
and
loopne
mov
lret
fildl
nop
jne
push
pop
lcall
jae
rol
jns
xor
fwait
sbb
hlt
sub
jge
outsb
mov
or
push
and
out
and
repz
test
lahf
in
inc
mov
jae
and
cld
aaa
add
out
and
pmulhw
icebp
push
xor
lods
adc
xor
lock
adc
fisubl
or
insl
repnz
popf
pop
sub
aas
mov
stos
jge
xor
mov
pop
lds
test
std
mov
inc
lcall
pop
fiaddl
cmpsl
push
jno
sarl
insw
pop
fldenv
pusha
pop
dec
movsl
data16
shll
lea
lcall
cmp
mov
ds
out
mov
ss
xchg
sti
icebp
or
iret
f2xm1
sub
pop
fsubrs
mov
ret
xchg
pop
ss
cwtl
push
imul
cmpsl
scas
adc
lods
xchg
add
pop
push
xchg
sub
test
stos
sbb
stc
idivl
add
lcall
mov
push
mov
jnp
cmp
mov
and
dec
repz
stos
shlb
or
test
pop
outsb
push
sbb
leave
add
push
xchg
dec
jmp
sbb
push
out
test
lret
fldcw
push
addb
imul
push
inc
subb
negb
rcrb
xlat
mov
in
xor
lahf
jge
pushl
cwtl
xchg
pop
movsb
shrl
lret
sbb
daa
mov
pop
pop
std
sub
xchg
jge
out
and
into
and
dec
inc
add
iret
xor
mov
lods
push
or
cmp
popf
mov
sub
mov
pop
mov
shll
mov
sbb
lea
pop
rcrb
scas
push
mov
js
mov
pop
xchg
cmpsb
test
add
enter
outsb
fcompl
mov
or
sub
sbb
jmp
push
mov
arpl
outsl
sbb
inc
push
and
aam
repz
pop
loop
mov
sbb
aaa
ljmp
movsb
int3
ss
test
cmp
pop
or
xor
mov
pop
fwait
mov
push
pop
lea
add
xchg
sub
fs
lods
cmp
fisubl
iret
pop
cmpsb
fldcw
add
inc
movsb
int3
lds
mov
popa
mov
dec
shlb
hlt
jecxz
mov
and
adc
aad
sbb
loopne
enter
pop
jmp
xor
out
icebp
jo
ja
or
sbbl
psubusw
loop
or
dec
ljmp
add
leave
out
cmp
ss
jns
adc
mov
xchg
sti
dec
lea
ret
inc
mov
test
inc
es
cmp
jb
pop
cmp
enter
push
lds
stos
pop
jg
outsl
cltd
jge
daa
fwait
and
into
hlt
mov
fnsave
insb
imul
and
dec
iret
ficompl
or
mov
icebp
sub
and
out
adc
add
imul
jno
push
mov
mov
dec
cltd
add
add
mov
add
iret
enter
pop
ljmp
inc
xor
outsl
in
adc
sbb
and
or
out
mov
add
lds
je
mov
jo
push
mov
mov
mov
call
test
cltd
in
push
mov
pop
imul
pushf
xchg
in
popf
pop
cld
push
xor
pop
jne
adc
xor
out
aas
pop
and
jbe
das
ret
call
ss
jno
sub
xor
xchg
xchg
push
push
inc
aad
pop
xchg
jbe
lds
movsb
je
lret
pop
mov
fisubrs
mov
xchg
mov
outsl
mov
sbb
mov
iret
cs
sub
jmp
mov
inc
xlat
imul
pop
std
in
je
in
jae
pop
push
daa
add
outsb
out
xor
pop
out
push
jge
insl
enter
jge
xchg
aam
fisttpll
mov
cmpsl
les
inc
xor
repz
call
sub
and
mov
xlat
jns
cmc
fwait
shll
sbbb
push
jl
ret
pop
xchg
loop
xchg
and
popf
loope
dec
call
movsb
repnz
add
loopne
mov
rolb
mov
or
pop
dec
or
push
call
inc
mov
iret
cmp
cmpsb
cmp
int
loope
popa
lds
ja
imul
hlt
jnp
es
fwait
mov
popa
and
xchg
movsl
jmp
imul
push
pop
popl
int3
mov
bound
pusha
inc
popf
xor
inc
gs
jns
cmp
decl
mov
cmp
cld
clc
and
push
insb
xor
jge,pt
orl
aam
stos
mov
out
cmp
dec
in
cmpsb
xor
push
jmp
scas
test
or
mov
cld
jno
ret
dec
xor
repnz
in
xchg
pop
jb
adc
jno
adc
xor
add
pop
icebp
jb
loop
jno
cld
xchg
jecxz
into
sub
cwtl
outsl
aad
sub
push
stos
es
push
mov
sub
mov
inc
and
dec
stos
pushf
filds
cmp
jle,pt
aam
sbbl
std
adc
out
jecxz
adc
add
cld
popl
stos
xchg
pop
test
mov
jge
mov
das
pop
repnz
mov
lcall
lret
dec
mov
pop
inc
jno
jg
cli
int
mov
pop
dec
jnp
ret
mov
scas
mov
pushf
aad
dec
mov
or
cs
lock
or
push
adc
mov
adc
testb
mov
lea
pushf
fidivl
aad
xchg
sbb
adc
add
add
call
adc
cmp
cmp
mov
fnstcw
xor
loopne
dec
fbld
or
imul
jne
dec
adc
sub
sbb
stc
push
mov
fmull
pop
in
cld
mov
div
data16
xor
fcoms
inc
lods
test
adc
int3
dec
ror
mov
jl
and
push
sub
iret
jle
lcall
push
or
cmp
lds
jl
and
add
jae
popf
and
adc
pusha
add
mov
sbb
int
ds
inc
xchg
push
es
pop
xor
push
int3
sbb
outsb
cmp
repnz
pop
fimuls
fiaddl
mov
push
add
aas
xor
inc
add
enter
adc
mov
andl
not
in
xor
je
inc
and
in
nop
rolb
cli
mov
push
xchg
or
test
cli
outsl
push
xchg
push
into
daa
dec
leave
push
shr
lret
mov
pop
mov
jo
je
mov
inc
mov
in
shll
out
jnp
iret
inc
mov
int3
jmp
mov
stos
inc
es
or
inc
inc
cmp
adc
sub
mov
push
push
sbb
xchg
sar
inc
pop
adc
mov
inc
push
add
xchg
in
dec
shl
xor
dec
push
sarl
pushf
adc
jae
and
mov
pop
int3
int
in
pop
cmp
jae
dec
mov
not
mov
dec
mov
mov
mov
das
arpl
loope
adc
cmp
mov
inc
ret
sbb
ret
es
repnz
movsl
mov
mov
cltd
lods
cmp
mov
xor
clc
fadd
jnp
jo
stos
lods
or
into
dec
test
scas
mov
jge
pop
adc
js
jno
inc
pop
bound
and
cmpsb
in
lret
inc
add
xchg
mov
rolb
jne
add
jg
frstpm(287
popw
mov
mov
inc
mov
idivb
push
push
repz
movsl
inc
scas
mov
xchg
aaa
inc
setns
jo
cmc
in
jnp
sbb
adc
rcrb
stos
ficomps
shrl
push
jno
dec
xor
ja
push
jle
mov
enter
adc
add
int3
pop
out
cmp
push
or
mov
sbb
sbbl
jb
mov
and
pop
test
sub
add
sbb
sti
push
inc
dec
cmp
xchg
es
out
push
sub
cmp
mov
int
and
icebp
cmp
lea
add
adc
cmp
sbb
inc
enter
inc
ret
pusha
test
movsl
pop
call
mov
or
loope
sub
rcrl
aaa
mov
inc
mov
pop
jmp
mov
push
daa
jp
and
lahf
pop
jns
shll
pop
cmp
push
cmc
imul
fisubrs
inc
pop
and
leave
sbb
pop
dec
add
lret
incl
into
and
inc
sti
in
push
dec
sbb
pop
js
lcall
sub
sub
clc
shlb
pop
pop
mov
cmp
xor
add
sbb
testb
add
test
mov
roll
jb
jmp
jmp
out
mov
ljmp
xchg
sbb
sbb
arpl
out
fwait
mov
xor
dec
enter
aaa
xchg
sti
sub
fbstp
movsl
rclb
push
cmc
popa
and
dec
shll
cs
cld
inc
fstl
push
mov
sbb
dec
push
mov
inc
push
jecxz
or
sub
xchg
jl
adc
call
mov
aad
outsb
or
scas
enter
mov
filds
mov
dec
aam
sbb
test
fldcw
ds
imul
mov
mov
jb
cmpsl
outsl
pop
sbb
and
adc
jmp
pop
mov
ds
add
rorb
xchg
and
xchg
jae
mov
jne
call
fcmovu
adc
jp
mov
jnp
inc
dec
pop
xchg
arpl
xor
stos
pop
out
inc
pop
sub
inc
inc
sbbb
sbb
sub
insl
cmc
fucom
fisubrs
lahf
mov
lods
jp
mov
dec
mov
jge
icebp
adc
stos
pushf
xchg
popf
jns
fcmovnb
mov
adc
loope
in
sti
outsl
mov
pop
sbb
dec
or
mov
and
cmp
push
fwait
push
push
mov
inc
mov
jne
aaa
adc
loopne
jns
xchg
sub
popa
xchg
pop
adc
or
das
fcomps
ja,pt
fsubrl
cwtl
fidivrl
bound
ret
dec
jne
sub
lods
addl
jg
sahf
sub
fsubrl
icebp
push
in
dec
daa
fldl
rcrl
adc
sbb
mov
adc
inc
push
adc
popf
xor
ja
js
mov
fstl
pop
jno
in
sti
dec
cwtl
push
sub
or
enter
addr16
cmpsb
mov
fdivrs
cs
mov
jmp
mov
mov
je
and
add
lret
cmpsb
mov
pop
jb
mov
ret
cmp
mov
ret
popa
xor
aam
mov
sbb
mov
add
mov
jbe
add
inc
loope
fldt
in
ljmp
fbld
cmpb
cld
cmc
push
hlt
inc
imul
inc
cmp
jns
fsubl
stc
flds
fdiv
sbb
mov
mov
dec
dec
das
xchg
adc
arpl
xlat
lds
jge
jmp
ds
jmp
cld
sub
cltd
mov
ret
testb
jl
fbld
xchg
mov
mov
cmpsl
xchg
xchg
dec
cmp
insl
pusha
xchg
decb
imul
pop
clc
lcall
imul
inc
repnz
sub
xchg
ds
jge
daa
cltd
mov
pusha
out
lods
dec
movsl
scas
or
inc
out
out
test
xchg
sbb
xchg
cmp
jb
xchg
pop
sarb
mov
repz
out
or
shlb
mov
outsl
mov
sub
xchg
pusha
push
dec
sahf
jae
sahf
add
test
test
hlt
cmp
xchg
cmp
xchg
sbb
inc
mov
sub
jne
fstps
xor
mov
sub
dec
sbb
ja
lods
or
test
push
lahf
sbb
jbe
push
xchg
inc
lods
movsb
push
stos
sub
cmpsl
mov
fisttpl
sub
sub
jno
or
or
mov
loop
pop
pop
mov
push
sbbl
inc
add
ret
mov
fnstenv
fisttps
xchg
repnz
scas
ljmp
inc
shll
or
xchg
lret
push
ficompl
jae
lods
sub
icebp
push
cmpsl
lock
adc
or
nop
jae
pop
jmp
les
gs
rcl
cmp
jns
pushl
scas
dec
push
add
dec
sbb
cmpsb
mov
mov
scas
lcall
cmpsb
jmp
clc
add
ret
or
loop
cli
pop
xchg
push
into
leave
cmp
imul
dec
push
out
add
jp
sub
scas
push
inc
ret
in
sub
imul
adc
jmp
outsl
xchg
lods
push
adc
inc
je
clc
adc
xchg
out
icebp
sbb
jmp
addr16
or
and
es
xchg
mov
fadds
call
xchg
jnp
sbb
jg
jp
dec
loopne
mov
cli
push
fildll
pop
pop
stos
jb
ds
lods
fdivrl
jp
pop
mov
movsb
push
mov
popf
inc
ret
xchg
je
pop
clc
scas
sbb
faddl
add
xchg
fisttpll
cmp
xchg
push
stos
sbb
sub
je
and
lds
fsubrp
and
fwait
xchg
mov
nop
pushf
sub
test
push
fnsave
dec
cmp
mov
mov
dec
add
imul
jp
call
out
into
mov
mov
xchg
xchg
pop
mov
xchg
push
cmp
and
push
cltd
sub
adc
subl
pop
sub
dec
jae
mov
cwtl
xchg
push
lcall
jne
movsl
push
repnz
arpl
jnp
adc
mov
xor
and
pop
xchg
xchg
adc
cmpsb
mov
mov
test
push
lock
pop
sarb
dec
xor
mov
sub
xor
jmp
adc
aas
xor
test
ds
or
sub
xor
or
dec
arpl
xchg
int
sbb
push
pop
outsb
ljmp
cmc
leave
add
fcmovu
dec
sahf
fadd
div
loope
cmpsl
pop
jnp
lods
xchg
aaa
stos
fstl
call
cmpsl
ret
jb
jo
mov
sbbl
inc
xor
xorl
loopne
cmp
int
popf
mov
aaa
mov
or
adc
mov
ja
aad
jp
sbb
es
test
add
movsl
clts
in
mov
cmpsl
xchg
test
imul
xor
push
fcoml
jne
mov
out
sub
rcrl
fldl
pop
jo
gs
test
enter
xchg
in
inc
mov
fistpll
cmpsb
testl
sub
jmp
popa
push
jmp
cmp
xchg
sub
clc
push
jle
outsl
adc
or
pop
or
sbb
movsb
add
and
push
imul
popf
mov
faddl
daa
stos
shl
rclb
hlt
xacquire
repz
mov
add
xor
repz
mov
aaa
push
lock
enter
jnp
mov
fisubl
pop
shll
and
adc
scas
sub
add
fwait
xor
iret
mov
mov
jle
mov
roll
dec
jmp
mov
mov
in
popa
pop
jns
lret
mov
sahf
sbb
xor
or
add
add
ljmp
cmp
popa
adc
inc
or
movsl
push
add
js
xchg
imul
cltd
sub
add
mov
dec
jmp
mov
add
lods
cmp
je
arpl
jle
ljmp
inc
inc
cld
jbe
arpl
fdivs
mov
dec
rclb
sbb
sub
lock
scas
inc
and
daa
cs
ja
mov
repnz
sub
mov
cmp
fsubl
cmp
enter
scas
adcl
jge
enter
lret
sub
push
cmp
lods
pop
lret
out
mov
cwtl
int
aaa
xchg
lret
mov
jmp
pop
mov
nop
inc
cltd
jno
cmp
gs
push
push
inc
pop
test
push
adcb
cmp
std
xchg
xchg
into
cwtl
jp
mov
jne
xchg
mov
fs
addr16
xchg
in
jmp
cld
mov
mov
arpl
sbb
outsb
sbb
lods
repnz
push
std
dec
sahf
aad
mov
jbe
pusha
icebp
ss
or
sbb
sub
stc
dec
mov
cmp
aam
pop
inc
cmpsl
add
mov
iret
push
push
addr16
jg
sahf
xchg
arpl
ds
cltd
aam
cli
in
mov
addr16
clc
out
mov
cmp
insb
fistps
cmp
inc
inc
out
mov
in
fcomip
push
sbb
cs
daa
outsb
stc
push
xor
aaa
andl
test
daa
daa
orl
sbb
mov
lds
pop
mov
jno
jecxz
xchg
loop
mov
and
daa
xorb
movl
insl
mov
jb
xor
jmp
adc
xor
ljmp
pop
xchg
adc
daa
mov
jae
sbb
add
insl
add
jo
ret
mov
mov
dec
out
inc
cli
dec
mov
jbe
fists
push
movb
repz
aaa
data16
sbb
sub
dec
or
lods
adc
sub
xor
dec
jae
out
outsl
repz
dec
push
dec
and
daa
sbb
pop
rclb
test
xlat
test
or
in
fisttpl
pop
test
xchg
bound
sub
xchg
adc
xchg
push
bound
cmpsl
cmp
add
adc
test
and
dec
loope
mov
enter
popf
aad
cmp
divl
sarl
pop
push
sbb
push
int3
test
dec
ds
enter
les
dec
mov
pusha
pop
aam
jmp
ror
inc
in
test
repz
sub
mov
arpl
imul
pop
mov
fadds
cmp
les
jne
idivl
cmp
fidivl
sub
push
repz
add
push
orb
call
cmp
test
adc
sahf
push
xor
mov
push
icebp
loope
nop
arpl
ficoml
sar
pop
pop
push
or
xor
xchg
icebp
jmp
scas
fildll
imul
shlb
mov
pushf
test
lods
insb
xchg
pop
jb
addl
hlt
pusha
cltd
xor
inc
mov
adc
pop
sbbb
lods
push
sarl
data16
pusha
mov
ja
daa
sbb
cld
aam
inc
sbb
adc
mov
arpl
adc
imul
xor
push
inc
mov
jnp
je
dec
mov
lock
adc
xlat
outsl
fisttpll
pushf
outsb
or
test
mov
dec
mov
jle
or
sub
or
inc
add
out
pop
inc
cmpsb
xchg
sahf
jne
push
repnz
xorb
andl
scas
adc
ret
loopne
cld
add
pop
mov
lcall
sbb
into
dec
repz
test
cltd
aam
lock
push
divb
mov
xchg
icebp
add
out
movsl
jbe
sub
bound
adc
mov
sbb
fldl
fs
xchg
test
fcoms
fidivs
cltd
flds
jp
aaa
js
clc
rorb
push
pop
pushf
orl
aad
xor
sub
sub
mov
and
pop
rcl
push
imul
cmp
inc
sub
and
pop
inc
mov
rcrb
orl
xchg
add
ss
fnstenv
cmc
mov
dec
xchg
aam
sbb
and
dec
repz
push
or
in
lahf
lahf
scas
dec
aaa
je
mov
ljmp
adc
cmp
push
das
ss
push
sti
hlt
add
andb
or
sub
pushf
mov
pop
neg
loope
insb
in
xlat
add
pop
inc
imul
xchg
popl
mov
pop
jl
es
pop
xor
or
push
adc
sub
daa
push
cvtpi2ps
cs
frstor
push
adc
and
int
sub
outsb
xor
hlt
mov
lahf
add
adc
pushf
sbb
stos
adc
mov
stc
dec
test
sub
in
sub
push
test
mov
test
daa
or
jnp
in
mov
outsb
cmpsb
pop
add
jno
sbb
stc
mov
std
pop
xchg
sub
xchg
pop
mov
add
clc
call
mov
hlt
push
test
sub
gs
mov
cwtl
lods
mov
imul
in
mov
rcr
mov
sbb
adc
jg
insl
mov
in
jbe
add
fwait
and
mov
icebp
sbb
mov
loopne
mov
sahf
jbe
sbb
roll
shrb
jmp
mov
sbb
xchg
mov
jnp
mov
cmp
out
cmpsb
mov
or
xor
xchg
int3
cmp
or
test
mov
mov
mov
int3
mov
push
pop
dec
outsl
stos
sbb
cmc
insb
subb
mov
dec
pop
mov
pusha
push
aam
and
mov
decl
adc
sub
jno
mov
icebp
add
sub
aad
or
lret
xchg
xchg
lcall
mov
cld
cmp
mov
mov
icebp
add
inc
es
mov
push
leave
mov
jns
sub
pop
xor
cmp
stos
addr16
shl
add
imul
ss
lahf
jecxz
scas
test
xor
and
mov
icebp
sub
cmp
nop
shr
ja
push
xchg
repz
add
cmp
stos
dec
rcrl
or
xor
aad
in
int
in
stc
sbb
dec
movsb
add
mov
lds
in
repnz
inc
je
repnz
xchg
fdivr
mov
xchg
cs
popa
mov
and
push
mov
aas
inc
mov
neg
movsl
mov
outsb
test
xor
shr
adc
mov
xchg
mov
gs
sahf
fidivrs
repz
not
movsb
popa
in
pushf
push
aad
in
mov
lods
out
jecxz
fbld
mov
inc
subb
xor
cmp
dec
xchg
cmp
fnstsw
clc
idivl
loopne
test
pshufw
mov
fxch
fcom
inc
dec
test
fwait
jg
sbb
mov
mov
pop
aaa
rolb
mov
pop
leave
push
sbb
cmp
or
add
mov
roll
push
subl
sub
fisttpl
xchg
ljmp
or
imul
shll
lea
fldcw
mov
adc
xchg
aas
sahf
sub
push
adc
mov
xor
xchg
sub
insb
adc
gs
lods
sbb
lods
imul
push
fsubl
mov
or
sub
arpl
xchg
push
aam
stos
mov
push
aas
adc
loopne
out
xor
and
mov
je
loopne
and
push
sub
out
xchg
daa
dec
dec
cmp
inc
dec
adc
test
mov
push
dec
jns
out
push
xor
mov
mov
in
inc
insb
fistps
mov
fldl
and
and
add
aas
insl
test
xchg
xor
xor
cmp
or
xor
popl
jg
ret
ljmp
ds
int
inc
movsl
mov
lock
outsl
pop
arpl
xlat
lods
rcrl
push
push
dec
sub
ficoml
outsl
test
loope
sti
mov
shrl
movsb
push
pop
rclb
stos
inc
mov
push
rcr
push
xor
cs
xor
push
aas
std
dec
popf
pusha
or
pop
popf
ret
xchg
and
jge
pop
mov
jno
popf
repz
push
xor
inc
add
cmpsl
and
sub
mov
lahf
push
fnsave
mov
mov
in
push
push
lods
adc
das
bound
jp
test
and
mov
jne
dec
mov
in
pop
mov
call
push
jmp
cmp
outsl
push
cmp
and
ljmp
jns
mov
adc
movsl
arpl
mov
mov
movb
dec
stos
push
mov
mov
pushf
or
lret
lret
int
push
xchg
pop
mov
mov
enter
hlt
jle
xor
and
popa
fcompl
es
loopne
adc
jecxz
outsl
mov
ja
mov
mov
push
mov
aad
int3
xchg
lods
push
icebp
xchg
xchg
popa
jno
iret
in
data16
xor
insb
push
into
in
xcrypt-cfb
cmpsl
and
lods
xchg
out
shlb
popa
jnp
push
bound
cmp
cld
cs
ds
imul
or
pop
aas
int3
mov
pop
sbb
popa
mov
fstpt
stos
stc
push
cmp
mov
aad
ret
sbb
xor
push
or
subl
xchg
push
or
divl
shll
cmp
aad
into
or
cmpsl
inc
pop
movsl
cmp
stos
dec
ljmp
cmovg
mov
and
mov
inc
and
xchg
out
iret
out
shr
jb
mov
inc
xchg
test
jg
mov
in
mov
loope
lea
aaa
repz
loope
push
push
push
popa
sub
sbb
sbb
jns
jb
not
adc
pop
or
cli
bound
cmc
das
imul
das
sarl
push
lret
insb
dec
aaa
addr16
test
fiaddl
adc
mov
dec
lret
jmp
sbb
out
fwait
push
mov
push
push
cmpsb
cmp
and
or
jo
insl
aas
rorb
mov
enter
sub
cmp
mov
repz
xchg
imul
aaa
inc
outsb
sub
and
ret
das
add
pop
inc
cltd
pop
xorl
cmp
movl
push
cmp
jge
sbb
das
mov
call
imul
test
cmp
push
stos
movsl
fcmovnu
push
jo
mov
sub
test
mov
mov
shlb
nop
std
xchg
pushl
stos
mov
fistps
xor
dec
mov
lret
pop
mov
loope
cmpsl
je
aaa
popa
or
push
lods
es
mov
rcr
fdivp
jle
cmc
aaa
xchg
cmpsl
lea
lea
inc
cmp
cs
xchg
lds
scas
xlat
push
xchg
xchg
add
push
sub
test
jne
std
inc
mov
fisttpl
pop
push
outsb
rorb
imul
sbb
decb
repz
aad
pop
sarl
mov
pop
jns
push
jo
inc
sbb
mov
jns
test
xchg
dec
popa
test
mov
addr16
cmpl
in
ffree
add
sahf
dec
jmp
scas
or
call
rcll
mov
dec
adcl
insb
enter
ret
insl
repz
lret
pop
call
cmp
dec
and
mov
jp
mov
arpl
jmp
sahf
mov
imul
pop
jns
xchg
sbb
push
xchg
lods
mov
ss
sbb
pop
or
cmp
xor
or
dec
sbb
cwtl
jmp
fninit
in
inc
ret
out
inc
loop
mov
xor
loope
test
push
stos
or
lea
dec
es
or
in
mov
fs
xchg
or
and
pop
push
pop
and
mov
ljmp
pop
inc
push
inc
xor
test
inc
push
or
xchg
sbb
add
mov
stos
loope
sahf
cmp
push
std
test
or
fiaddl
cmp
mov
out
xchg
lds
int
cs
xchg
mov
mov
push
leave
push
int3
xor
call
add
push
pop
pushf
mov
mov
repz
push
or
push
hlt
bound
pop
add
mov
pop
push
push
push
jns
mov
push
pop
jp
jp
iret
xor
cmp
add
dec
loope
mov
hlt
mov
lea
lcall
icebp
fidivrl
sbb
cmp
xchg
fstps
and
and
adc
mov
sahf
enter
inc
in
mov
add
mov
or
test
hlt
ss
leave
xor
arpl
test
sbb
xor
leave
inc
addr16
push
sub
xor
int3
dec
xchg
popa
daa
insl
dec
or
cwtl
lret
fsubrl
jnp
dec
and
lcall
sbb
leave
outsb
xchg
sbb
pop
andb
mov
icebp
fbld
add
mov
dec
mov
cmc
xor
fwait
out
sahf
jecxz
repnz
cmp
mov
stos
jno
mov
xchg
jmp
sub
add
add
mov
inc
std
clc
sbb
icebp
push
xor
push
movsl
jg
push
rcrb
int
out
and
push
add
sub
adc
xor
cmpsl
movsb
xchg
and
nop
fnstsw
sahf
jl
aaa
lret
xlat
jo
scas
in
jne
add
adc
sub
mov
repz
into
sbb
push
in
push
push
stos
jns
mov
test
xchg
jp
mov
stos
sub
fldt
xchg
ret
mov
pop
sbb
xchg
mov
sbb
out
mov
jns
add
fcoml
jne
dec
mov
xchg
addr16
idivb
and
lods
push
lret
xchg
lods
sub
dec
dec
js
dec
fisttps
addr16
add
mov
push
icebp
pop
in
imul
pop
cld
movsl
das
das
stc
outsb
mov
out
pop
pop
orl
push
add
mov
xlat
fcmovu
sub
add
pop
dec
popa
inc
dec
adc
ljmp
inc
push
mov
sub
mov
lds
rcrl
lahf
aam
and
push
stos
ret
sub
out
dec
adc
xor
cmp
out
dec
daa
ret
mov
fisubrl
enter
adc
cmpsl
pop
mov
adc
mov
or
cli
sbb
lret
or
mov
repnz
sub
mov
scas
and
cmc
add
and
out
cld
pcmpgtd
repnz
clc
dec
shll
aaa
mov
push
pusha
mov
cs
stos
xchg
pop
int3
mov
inc
push
and
mov
loop
adc
mov
dec
rclb
rcl
test
out
mov
gs
cmp
pop
testb
leave
push
or
outsl
and
sbb
shlb
sbbb
es
push
cmp
es
cmp
daa
scas
xchg
push
pop
xor
out
cmp
imull
outsb
clc
in
jmp
test
xor
aas
hlt
xor
arpl
mov
roll
movl
mov
push
mov
je
jb
xchg
mov
sti
or
sarl
jns
push
sbb
mov
icebp
jmp
xorl
jmp
popl
pop
test
pushf
fistpl
mov
popa
ret
mov
adc
roll
fistpl
leave
aam
pop
xchg
std
sbb
mov
mov
or
ds
mov
out
add
push
cmp
adc
xor
pop
rcrb
ficomps
sub
mov
mov
es
sub
add
fisubs
out
insl
mov
stos
mov
mov
jne
jp
addl
xchg
or
notl
sti
andb
mov
stos
ljmp
mulb
stos
cmp
sahf
mov
jle
pop
ret
adc
das
sbb
popa
test
es
daa
pop
or
push
adc
pop
loopne
scas
jle
shll
scas
xor
jp
adc
out
ja
cmc
mov
lret
mov
negl
lahf
fistpll
mov
orb
sbb
sub
or
test
movsl
lret
popa
shrl
dec
dec
add
insl
addl
and
sbb
fiaddl
lret
lock
sbb
loopne
arpl
cmpsb
mov
stos
les
fidivrl
fstps
fmull
sub
cmp
popf
or
fnsave
add
xchg
mov
imul
jo
adc
mov
stos
leave
nop
add
ret
popf
loopne
icebp
pop
mov
movsl
fs
pop
aaa
or
pop
mov
aam
inc
push
and
sbb
jnp
xchg
insb
stc
mov
push
sbb
stc
adc
dec
testl
sbb
repnz
adc
scas
into
fsubrs
fs
or
imul
test
add
rcll
outsl
les
iret
test
sbb
inc
sub
mov
into
add
lea
sub
out
out
shr
loope
inc
repz
xor
add
adc
jnp
stos
je
sub
fstps
rcrb
push
and
xchg
cs
mov
mov
xchg
aad
stc
pop
adc
mov
cmc
sarl
fildll
lock
pop
cmc
int
mov
adc
sahf
dec
mov
lcall
bound
outsb
cltd
adc
mov
mov
lods
xchg
sub
jmp
test
sbb
pushf
imul
pusha
pop
in
cli
cwtl
rep
dec
push
and
xor
jg
in
cwtl
test
xchg
int3
push
mov
mov
sbb
ret
pop
mov
ret
jae
jp
mov
xorb
les
xchg
out
lea
mov
cmp
fcom
movsb
sbb
xorl
mov
xor
mov
div
ret
data16
sub
or
jo
cwtl
sti
imul
mov
hlt
into
daa
popa
sbb
outsl
ja
leave
mov
in
std
or
xchg
jmp
cli
jmp
imul
pop
xor
popf
mov
aas
push
dec
loope
lcall
add
add
add
push
lret
fmul
jg
popf
xchg
ret
xor
or
pop
pop
jle
rcr
rclb
mov
xchg
jmp
sbbl
js
clc
movl
xor
iret
adc
sar
sbb
ficompl
push
pop
call
ret
push
cwtl
inc
dec
insb
jmp
mov
push
push
cltd
xorb
addb
adc
fisttps
pop
inc
arpl
dec
xor
push
arpl
fstpl
loope
push
pop
fbstp
in
add
inc
push
mov
insb
andl
scas
aad
fdivrl
adc
gs
cwtl
mov
inc
xchg
divl
aaa
addb
leave
pop
adc
repnz
enter
int
inc
pop
mov
mov
push
xchg
sarb
inc
adc
xlat
mov
clc
or
mov
popa
ljmp
inc
inc
xchg
pop
push
int
int3
insb
pop
pop
ret
dec
mov
pop
test
sub
inc
imul
adc
jg
mov
or
shl
dec
dec
cld
fcmovbe
and
push
mov
cmpsl
aad
in
adc
mov
sbb
clc
xor
mov
rcrb
push
cmp
sarb
sbbb
xlat
cmp
jae,pt
cltd
jmp
sahf
or
cmp
pop
mov
dec
cmp
stos
push
cli
adc
push
xlat
insb
ss
outsb
cmp
inc
dec
popa
mov
pop
or
sbb
mov
add
inc
jp
add
inc
lret
call
lock
mov
xor
hlt
dec
fisubrl
mov
xchg
push
arpl
imul
subl
cmpl
pop
mov
mov
inc
pop
mov
scas
scas
mov
stos
mov
int
and
push
jg
je
mov
imul
pop
mov
push
scas
inc
sub
repz
cmpl
ds
or
and
cmp
xchg
xchg
jnp
lock
xchg
mov
adc
mov
adc
pusha
pop
jbe
test
dec
cmp
ds
sbb
pushl
push
xor
mov
mov
shrb
jno
mov
mov
fists
xor
or
popa
sub
and
orl
cmp
enter
dec
repnz
movsl
loop
iret
jnp
loopne
subl
lods
cmp
fwait
mov
push
int
jnp
in
sbb
mov
bound
loopne
pop
push
loopne
pop
push
or
shrl
fldenv
pop
xchg
dec
push
mov
mov
dec
fs
aaa
mov
bnd
mov
repz
lcall
fwait
push
and
and
push
mov
mov
jae
add
sahf
daa
mov
jl
pop
sub
pop
scas
mov
cmp
mov
mov
fldenv
cmc
mov
push
push
xchg
mov
sub
in
add
push
push
adc
call
outsb
push
lea
bound
inc
adc
aam
incl
stos
loop
lahf
cmp
cli
lods
pop
sub
lahf
cs
sub
or
mull
rolb
dec
fsub
lea
test
cmp
xchg
jb
not
stos
test
mov
aad
push
push
aad
add
mov
hlt
jbe
jp
les
dec
fildll
pop
cmp
jp
mov
ds
mov
cwtl
xor
push
sub
in
mov
movb
mov
iret
and
and
push
loope
rorl
les
into
int3
jmp
pop
mov
fcompl
adc
iret
xlat
push
cmp
gs
inc
push
inc
or
xchg
mov
push
idivb
subl
popf
arpl
pop
mov
add
mov
fs
jb
sub
cwtl
sub
jge
icebp
out
jbe
punpckhbw
cmp
cwtl
lock
test
hlt
inc
lods
loop
mov
mov
inc
out
loopne
mov
jmp
je
jg
leave
ja
rcr
sbb
fnstsw
hlt
adc
out
js
mov
dec
in
pop
lea
jns
xchg
in
push
inc
mov
or
addr16
lods
mov
pop
stc
aas
daa
mov
pop
and
bound
jnp
testl
push
dec
stos
je
aaa
cmp
jns
add
inc
or
cmpsl
mov
mov
inc
sbb
sbb
inc
xchg
test
jno
jno
lcall
shr
xor
pop
add
ja
dec
mov
fwait
popf
mov
add
jmp
jnp
in
or
pop
adc
push
adc
and
sub
das
pop
lret
adc
sar
fxch
rol
mov
add
and
inc
pop
std
loop
lods
imul
sti
push
pop
jle
movsl
fildll
pop
hlt
bound
pop
fidivrs
xchg
gs
mov
jns
xor
fst
jl
subb
mov
cmpsl
inc
sbb
cli
cmpsb
and
fsubrs
or
inc
iret
mov
or
or
ss
xor
dec
push
jbe
aam
or
xor
std
adcl
mov
jo
addb
pop
lahf
fsubrl
pop
lea
xor
inc
xor
xchg
daa
js
call
cmp
pop
mov
xchg
loope
fnstcw
cmp
inc
stc
jo
ja
lcall
sub
divb
jmp
repnz
sub
xor
sbb
mov
test
test
or
inc
test
stc
imul
shr
scas
lcall
imul
sub
inc
aad
adc
adc
ds
or
movsbl
enter
mov
lods
dec
movsl
and
and
xor
jge
xchg
lods
stos
jl
scas
sbb
popa
push
jmp
loopne
iret
fsubp
mov
inc
fdiv
jge
mov
push
pop
movsl
lods
cmp
fiaddl
push
addr16
sub
inc
add
in
loopne
mov
gs
jb
cmp
push
inc
push
add
xor
xchg
fildll
mov
test
xchg
pop
cmp
arpl
or
addr16
loop
dec
leave
mov
ss
cmp
xor
pop
icebp
iret
cld
rol
fisubrs
pusha
fwait
outsl
xchg
adc
vmulpd
or
std
jne
mov
lds
cld
xchg
mov
mov
pop
lcall
loope
inc
bound
stc
jns
mov
mov
aaa
jne
xlat
loopne
clc
dec
in
xchg
push
inc
movsb
sub
cld
inc
lret
xor
mov
dec
mov
cvttps2pi
add
idiv
sub
shl
les
jb
pop
and
ss
push
or
xchg
sub
iret
add
rcrl
ss
orl
lods
mov
fwait
aas
xor
jns
fdiv
mov
notb
cli
inc
je
call
inc
aad
test
add
dec
dec
sbb
fisubs
jbe
out
test
dec
aam
clc
jns
xchg
push
adc
adc
inc
inc
pop
aad
movsl
adc
mov
fcompl
pop
outsl
iret
xchg
enter
xchg
xor
cmc
les
xchg
push
mov
dec
mov
int3
mov
rorb
mov
pop
repz
sbb
mov
lea
and
dec
pusha
scas
xor
sbb
test
mov
into
mov
mov
lods
out
cmpsl
cmc
pop
nop
lahf
sbb
sub
mov
mov
cmp
les
xlat
mov
pop
push
mov
fwait
or
bound
pop
into
and
stos
bound
push
out
into
mov
mov
mov
movl
fwait
dec
fisttps
xchg
pushf
addr16
in
dec
mov
cmpsl
outsb
xchg
jb
ja
out
mov
or
sete
sub
pop
jmp
cmp
cmp
xchg
pop
dec
push
dec
gs
cmp
adc
sbb
pop
or
test
and
in
leave
xchg
inc
cmp
cwtl
scas
jb
repz
imul
jp
xorb
xchg
sub
push
daa
arpl
cmpsl
push
aam
outsb
mov
pop
je
test
orb
mov
sahf
insl
test
cmp
movsl
clc
imul
xor
mov
push
xor
imull
cmp
cltd
in
push
sbb
and
enter
bound
out
subl
or
pop
add
dec
jb
adc
ret
sub
xlat
and
fidivrs
cmp
pop
mov
cmp
fs
jmp
inc
cltd
in
jecxz
out
pop
mov
lretw
aaa
mov
add
push
stc
sbb
push
inc
mov
icebp
and
stos
ret
fldenv
movsb
adc
mov
arpl
nop
iret
dec
jecxz
pop
jne
test
into
std
outsb
fcomps
push
sbb
pop
les
dec
and
mov
cmp
shrl
cmp
in
popa
mov
pop
sub
jmp
adc
jmp
div
loopne
cmp
xlat
sub
out
gs
and
add
repz
xor
jne
sbb
aaa
jo
icebp
mov
jb
shll
ljmp
pushf
pushf
xor
enter
add
sub
repnz
dec
sti
sahf
imul
lods
jb
xchg
cltd
sbb
mov
mov
gs
es
dec
add
les
stos
adc
and
jmp
xchg
cmc
sbb
cmpsl
add
sbb
jmp
inc
in
idiv
mov
mov
mov
fs
mov
jbe
or
sub
fidivrs
and
cmp
les
pop
decl
insl
outsb
icebp
cmpsb
push
mov
mov
adc
andl
mov
mov
add
sbb
iret
addl
jg
pop
xchg
not
jg
outsb
insl
ja
shll
cwtl
inc
add
jmp
test
mov
pushf
les
fdivr
xor
push
hlt
imul
xor
sbb
pop
pushf
ds
movsb
sbb
lret
repnz
cs
les
movsb
push
and
shlb
fwait
ja
jbe
adc
jae
pop
and
loop
xchg
dec
arpl
mov
fisttps
fildll
xchg
aaa
adc
mov
imul
dec
scas
mov
pop
sub
pop
dec
fdivs
out
jns
in
mov
xchg
mov
shll
out
dec
mov
adc
out
dec
sbb
push
addl
loopnew
out
jmp
sbb
out
cltd
xchg
push
movsb
or
mov
cmpsl
inc
add
subb
sub
xchg
fld
add
into
fstpt
mov
nop
jmp
rcr
push
sub
addb
jno
mov
jg
jge
mov
popa
cmp
mov
lock
dec
outsl
pop
mov
sahf
xor
imul
adc
lock
movsb
mov
jl
daa
add
sub
fsubp
push
mov
cltd
mov
xchg
adc
int3
jne
jns
dec
sbb
lea
stc
dec
adc
pop
jb
in
cli
aaa
add
outsb
imul
cmp
push
out
inc
xor
mov
dec
out
and
mov
pushf
subl
mov
jb
xchg
imul
fimull
sub
pop
mov
pop
mov
je
dec
mov
jno
mov
pusha
mov
push
mov
xor
jnp
popa
cmp
stc
inc
jno
in
fnstenv
and
mov
ficomps
jecxz
les
inc
push
cmpsl
in
xchg
leave
in
test
pusha
std
xor
loopne
and
jl
jo
fidivrl
aam
mov
rcrl
pmuludq
sbb
loope
mov
pop
outsb
stos
cmpl
insl
mov
sub
xchg
lods
and
ffreep
jne
daa
sub
aaa
adcl
into
dec
fs
sub
fidivrl
sbb
push
adc
loope
shll
jp
xchg
ja
cmpb
xchg
xor
mov
insb
add
out
dec
dec
scas
mov
out
das
xor
popf
dec
mov
inc
adc
push
jb
dec
addr16
and
repnz
and
aas
data16
sub
add
push
std
lret
dec
adc
mov
lods
mov
jg
sbb
mov
lcall
xor
sub
enter
mov
lods
xchg
jne
cmp
mov
sbb
and
clc
cmc
pop
insb
gs
popf
movzwl
sbb
lret
mov
dec
fisubrl
cmp
add
nop
movsb
int3
icebp
sbb
pop
loope
sahf
inc
int
data16
and
pop
xor
push
and
pop
out
push
andl
test
jle
stos
leave
inc
mov
push
dec
cld
or
rclb
imul
mov
js
popf
mov
outsl
es
push
lock
dec
dec
xor
roll
mov
sbb
loopne
aaa
push
outsl
push
repz
xor
popa
jle
push
jecxz
andb
inc
mov
mov
jb
xchg
jo
xchg
inc
das
out
int3
mov
and
cmp
adc
xchg
popf
mov
adc
repz
dec
xor
cmp
cmp
jae
mov
adc
sbb
outsl
lea
xchg
xor
test
shlb
fists
lods
pop
push
pusha
xchg
pop
imul
jecxz
push
sbb
loopne
pop
jnp
xor
into
cmp
ja
in
pusha
mov
lret
dec
or
sahf
mov
lret
cmpsl
jb
and
cmp
lcall
imul
jg
pop
xchg
dec
lret
cmp
fs
dec
inc
add
sbb
mov
icebp
loope
outsl
or
adcb
inc
jle
enter
rcl
xor
popa
pop
das
inc
sbb
mov
mov
loop
jo
sub
mov
icebp
fldt
iretw
movsl
inc
test
xor
fstps
push
fs
push
adc
dec
jbe
mov
mov
adc
fadd
lock
loop
aad
dec
mov
pop
push
and
cmpsb
xchg
jne
dec
enter
mov
dec
andl
mov
test
lods
test
repnz
fidivrs
mov
lcall
xor
pusha
icebp
mov
pop
ficoms
cli
daa
or
ficoml
clc
add
mov
sbb
inc
mov
mov
and
xor
xchg
iret
cmp
sti
cmp
rcl
arpl
icebp
rorl
push
mov
lahf
or
pushf
inc
in
repnz
out
orl
movsb
lcall
mov
aaa
jecxz
in
pop
xchg
mov
push
leave
mov
or
inc
adcb
cmc
popf
push
pop
sub
loope
loopne
loop
sarl
push
mov
lea
lods
dec
sbb
dec
cmc
insl
jl
or
fstl
leave
shrl
int
and
cld
ss
xor
out
adc
inc
or
les
push
pop
push
mov
testb
dec
push
insb
push
jmp
jb
jne
dec
cmp
push
fsubl
inc
int
push
add
call
pop
test
pop
test
je
mov
push
pop
fmul
xlat
jle
pop
cmp
in
int
stos
xchg
js
push
scas
sar
cmp
sbb
adc
dec
xor
iret
loope
fucomi
cli
daa
sub
cmp
mov
cmp
or
add
fcoml
pop
sub
xchg
sub
push
jns
outsl
xor
insb
cmp
push
add
test
hlt
ret
cmpsb
jmp
lret
mov
mov
out
cmp
pop
xor
gs
in
push
lds
out
add
sti
mov
or
mov
add
mov
addb
insb
popa
and
cs
orb
and
mov
push
cmp
imul
mov
insl
mov
rorb
cmp
inc
dec
mov
push
mov
sbb
push
mov
mov
sub
xor
ja
pushf
inc
hlt
xchg
dec
pop
push
int3
xor
jo
jns
and
mov
scas
adc
sbb
mov
sbbb
dec
test
pop
je
jae
pop
jp
shl
fdivl
sbb
outsl
mov
pop
outsl
repz
dec
xchg
mov
cmpsl
pop
pushf
lcall
push
addb
out
daa
gs
int
sub
jg
sbb
arpl
lret
rorl
adc
scas
subb
pushf
stos
movsl
mov
and
loopne
cld
inc
inc
shll
push
loop
clc
jo
or
pop
sbb
sbb
mov
inc
lds
jnp
inc
insb
jmp
add
mov
cwtl
mov
in
addb
cmc
arpl
sbb
sarl
cmp
out
roll
dec
stos
rcll
rorb
mov
lret
sbb
mov
jge
rep
xor
push
lcall
xor
lahf
ss
push
jbe
or
out
xor
pop
or
cs
cmp
adc
lods
cmp
insb
je
clc
out
pop
call
adc
dec
xchg
movsl
xchg
lds
pop
push
lret
aaa
push
add
dec
call
les
in
or
decl
rol
xor
scas
mov
in
lahf
mov
mov
cli
mov
cs
dec
movsb
adc
xchg
mov
add
mov
adc
outsl
in
addr16
fldcw
sub
rorl
adc
inc
and
cmp
jle
lods
push
cmp
test
clc
pop
sub
fstpt
jns
mov
mov
push
mov
or
jmp
call
jb
out
pop
lods
movl
dec
inc
daa
es
inc
mov
xlat
dec
jo
sbb
roll
sbb
jnp
sub
imul
cmc
test
mul
xchg
or
stc
cmpsl
stc
adcl
xchg
push
mov
sbb
adc
xor
leave
in
and
cmpsl
arpl
ja
push
jnp
sbb
mov
push
push
adc
stos
pop
mov
push
mov
pushf
bound
inc
loop
mov
inc
push
shll
outsb
mov
xchg
loopne
adc
pop
lea
xor
outsl
cmpsl
xchg
inc
imul
sub
aam
inc
mov
popa
sbb
out
jp
bound
or
sub
cmp
iret
mov
fsubs
shl
mov
cmpsl
int
fnstenv
fmuls
mov
stos
dec
mov
mov
cwtl
adc
inc
sbb
sbb
leave
mov
pop
mov
test
push
in
xchg
bound
mov
mov
insl
in
mov
and
call
push
rorl
jnp
and
aaa
inc
stos
push
ret
addr16
add
pop
jne
xorb
and
jle
lea
sub
dec
mov
iret
sahf
imul
daa
stc
mov
lret
jo
jg
or
dec
testl
ljmp
bound
mov
je
test
inc
jmp
pop
out
mov
jmp
push
or
add
pop
ja
jb
mov
test
add
or
mov
or
jge
cmp
aas
mov
xchg
mov
addr16
ja
mov
and
pop
lock
je
and
xor
xchg
stos
out
push
out
in
xchg
roll
subl
and
ss
roll
int3
sahf
sbb
and
roll
xchg
lahf
dec
inc
inc
in
imul
push
mov
fadd
and
loop
pop
mov
add
dec
xchg
jbe
push
pop
adc
in
loopne
aam
jle
push
jbe
ja
test
shll
push
cmpsb
sbb
pop
aam
adc
push
in
inc
ret
push
mov
mov
lcall
addr16
mov
adc
shll
sub
arpl
mov
enter
push
sbb
in
mov
std
imul
in
into
add
std
or
negb
inc
inc
mov
push
into
std
cwtl
insb
or
mov
pop
sub
enter
and
movsl
mov
xor
pop
cld
aad
jl
call
cmpl
aad
add
sbb
dec
repz
sti
daa
mov
lods
inc
nop
inc
test
jecxz
jg
fsubs
xchg
test
imul
fsts
ret
jb
cmpsl
in
negl
lahf
pop
sbb
or
nop
dec
imul
enter
cmovo
xorl
pop
jp
mov
push
aaa
dec
push
mov
sub
leave
lock
dec
mov
xchg
mov
mov
push
jno
pop
push
scas
dec
loop
imulb
mov
dec
imul
insb
mov
add
inc
xchg
mov
xchg
orl
data16
in
jmp
sbb
mov
cmp
in
dec
int3
shl
mov
ss
cmp
pop
call
mov
fwait
icebp
mov
mov
ds
xor
arpl
jbe
pop
arpl
jae
hlt
inc
push
rorb
lcall
stos
out
xorl
and
dec
mov
mov
dec
ror
and
and
shll
pop
test
xchg
lahf
bound
imul
mov
sub
dec
ljmp
mov
scas
xor
dec
push
pop
push
lret
mov
mov
mov
xchg
loope
call
test
mov
test
lret
icebp
jne
or
adc
and
cmp
adc
inc
pop
out
lcall
push
jg
dec
xor
lahf
dec
push
std
lds
pop
mov
push
mov
cmp
loope
dec
xlat
push
jl
aaa
mov
sti
ficomps
or
ret
pop
sbb
jl
mov
and
or
sbb
lret
jle
out
repnz
rcrl
movsl
cmp
and
hlt
mov
xor
or
mov
bound
or
lds
ljmp
or
dec
cli
inc
cmpsl
dec
cmp
shlb
aam
push
ret
incl
jb
inc
lds
xor
pop
outsb
adc
icebp
mov
adc
imul
pop
jo
xor
lods
inc
fidivl
push
cmp
imul
pop
mov
adc
jne
dec
aam
int
out
out
daa
aam
mov
mov
into
enter
inc
cmp
mov
mov
xchg
mov
mov
xchg
bound
ds
lret
push
insl
dec
adcl
aam
mov
fsubr
xorb
test
data16
adc
stc
fstpt
and
sbb
aam
add
in
jmp
loop
and
mov
bound
push
jg
dec
or
cmp
jne
pop
inc
adc
mov
fst
adc
popf
jns
pop
lcall
mov
dec
lea
and
data16
dec
repnz
cmpb
mov
aam
test
fldln2
sub
inc
pop
jp
pcmpgtw
jmp
scas
dec
push
cmp
shll
pop
mov
shlb
inc
inc
jmp
les
jne
push
stos
das
leave
decb
mov
fcompp
dec
lock
lahf
test
std
mov
mov
stos
shrl
shl
push
icebp
xchg
movsl
popf
sar
and
xor
sbb
sahf
dec
xchg
adc
mov
repnz
ret
and
cmc
mov
and
pop
xchg
or
mov
jns
call
sub
xchg
imull
ds
push
and
lahf
cli
pop
sub
or
ret
xchg
scas
icebp
pop
inc
dec
rcrb
and
sub
ret
adc
sbb
mov
hlt
add
mov
jo
mov
inc
xchg
and
jb
scas
sbb
mov
sbb
xchg
cmpsl
inc
pop
xchg
iret
lods
mov
and
jg
adc
test
movsb
rcrl
add
popf
jb
xchg
and
clc
mov
out
std
xchg
add
imul
xchg
and
sub
adc
fwait
mov
xor
pusha
test
mov
lock
lret
lret
in
lahf
mov
jge
sub
leave
fisubrl
add
push
ss
mov
imul
stos
fists
std
mov
fstl
sarb
inc
xchg
push
adc
popf
mov
ljmp
xor
daa
call
jecxz
inc
rclb
add
sbb
imul
dec
and
std
in
jl
sub
push
orb
test
jnp
dec
sub
mov
cltd
push
das
and
dec
sub
subb
jae
lret
or
in
add
cmp
cmc
mov
test
push
or
movsb
inc
inc
aas
add
lods
xlat
xor
popf
xor
sbb
jecxz
mov
push
push
addr16
fs
jo
xor
push
add
xor
scas
mov
insb
sahf
mov
jl
popf
aaa
sbb
xlat
mov
mov
adc
pop
lret
insl
cmpsl
repnz
push
imul
xor
es
mov
lret
stos
and
xor
rorl
mov
sub
cmp
daa
and
inc
fmull
cmp
fimull
xorb
push
or
add
or
lods
or
cmp
out
lods
call
adc
mov
je
mov
jnp
stos
sbb
das
mov
jbe
outsl
xor
fistl
cmp
lret
test
sub
dec
xlat
cmpsl
dec
cmp
cmp
or
popf
aas
cmc
int
lret
in
xchg
in
fists
fildll
xchg
xor
daa
cmpl
jg
aas
mov
push
cld
bound
xor
cmp
ss
mov
out
cwtl
xchg
fmuls
fistl
dec
arpl
sbb
mov
jle
outsb
push
and
or
mov
sbb
pop
ljmp
leave
bound
sarl
xchg
icebp
push
mov
decl
xorb
in
daa
call
adc
adc
out
in
mov
cmp
lret
mov
or
xchg
rolb
scas
outsb
push
inc
sbb
cltd
popf
sbb
xchg
sub
addr16
jl
sbb
xor
cli
repz
shl
add
cld
mov
mov
clc
xchg
jle
add
imul
xchg
out
add
dec
mov
cltd
jmp
fldl
mov
icebp
mov
shrb
lcall
push
push
clc
cmpsl
out
jno
dec
mov
push
test
fsub
imul
and
or
xchg
out
push
insl
jns
lsl
insb
mov
inc
clc
daa
rcll
sub
inc
mov
cmpsl
sbb
jnp
dec
adc
and
hlt
lret
inc
mov
lahf
test
sbb
jb
loop
sub
out
dec
pop
jb
ds
out
mov
hlt
sub
mov
xor
dec
out
repnz
mov
pop
push
into
jae
and
xchg
xchg
push
lret
and
into
cwtl
sub
fidivl
popa
sbb
inc
imul
inc
les
ss
cmpsl
lds
in
pop
jns
mov
shr
xchg
shl
mov
inc
push
xchg
pop
movsl
xchg
mov
pop
arpl
sbb
pop
push
fnstcw
nop
mov
gs
notb
sbb
xor
push
cmp
pop
imul
mov
sbb
mov
jl
in
pop
cmp
mov
out
stos
cmpsl
test
sub
inc
lea
cli
into
lret
gs
cmp
loop
in
add
call
mov
adc
mov
pop
je
jmp
pop
movsb
andl
insb
subb
or
push
push
xor
mov
in
add
mov
lds
add
jl
divb
mov
in
pushf
mov
push
int
repnz
push
mov
sahf
cmpsl
dec
mov
lods
cli
dec
push
push
sbb
sub
xor
push
ds
xchg
jg
nop
sub
jns
jecxz
xor
shlb
icebp
imul
lea
movsb
pop
push
cmc
push
xchg
stos
out
mov
sbb
jns
test
or
push
in
int
jecxz
add
cmp
and
push
jmp
je
ss
inc
lcall
xchg
out
and
pop
pushf
dec
sbb
mov
cmp
dec
ljmp
fstp
aas
cs
lahf
jl
enter
add
xchg
inc
mov
imul
sti
xchg
test
dec
push
sbb
jns
je
mov
xlat
adc
mov
inc
cs
xchg
cltd
loop
faddl
cmp
out
dec
add
lahf
and
push
orl
or
and
push
das
xlat
daa
aad
cmp
ret
push
dec
es
xchg
xchg
pop
cmp
and
mov
and
jae
dec
fisubs
push
push
test
stos
xor
jo
mulb
fxch
int
dec
adc
cltd
jmp
fisubs
hlt
xor
addr16
notl
and
movsl
inc
xor
in
cmp
testl
sub
mov
pusha
testl
adc
mov
bound
dec
cmpl
xchg
ds
xchg
mov
sbb
cmp
es
js
sbb
int
dec
pop
dec
rolb
mov
sub
in
mov
pusha
add
test
mov
rcll
pop
jo
mov
fisttpl
mov
test
push
adc
sub
xchg
notl
aas
mov
outsb
add
and
roll
loop
xchg
fstpl
mov
mov
dec
sbb
xor
pop
daa
das
and
lahf
mov
lret
int3
xor
outsb
cli
mov
lret
rcll
inc
mov
stc
shr
aas
jae
cld
mov
jae
ret
test
pop
mov
pop
mov
cld
shlb
aas
fistpll
xchg
push
or
pop
jnp
loop
stos
add
int3
rcrb
mov
mov
je
lahf
jle
push
xlat
flds
aas
push
scas
push
outsb
lock
insb
mov
cs
scas
aaa
jmp
or
jb
shll
shll
enter
xchg
pop
and
cmp
mov
andl
sahf
hlt
in
dec
sti
popa
movsl
mov
pop
mov
dec
lock
mov
cmp
sub
stos
or
xchg
dec
les
nop
add
aam
pop
sub
add
stos
cmc
xlat
xlat
loopne
je
mov
movsl
scas
jo
call
pop
fprem
rolb
mov
push
insl
pushf
mov
in
add
lcall
or
add
add
movsb
fldcw
mov
mov
sbb
xchg
add
xlat
sti
cltd
add
adc
in
in
addl
push
aad
push
mov
popa
mov
ja
pop
mov
inc
sahf
int3
das
mov
scas
das
sub
push
mov
andl
outsl
fistpll
jecxz
daa
hlt
aad
ja
leave
popf
testl
test
ficoms
cld
inc
scas
rcr
mov
je
sbb
les
mov
bound
int
cmc
jmp
pop
rcll
pop
imul
andl
pop
pushf
aad
add
popl
or
xor
pop
dec
sbb
push
das
dec
mov
loop
push
repnz
xlat
lea
popa
shlb
xor
orl
dec
out
xlat
jp
jnp
adc
aas
out
and
xlat
mov
cmp
repnz
pop
inc
sbb
lods
clc
push
es
push
mov
daa
jae
add
push
pop
rol
adc
inc
hlt
cwtl
mov
jle
add
cmc
pop
cmp
pop
sbb
sub
sub
rorb
and
cli
fwait
fwait
clc
cwtl
and
lahf
ret
sti
cmpsl
aam
in
push
and
xchg
adc
movsb
enter
jbe
mov
into
and
out
push
addb
jle
push
push
sahf
jno
jmp
add
repz
mov
add
pusha
mov
scas
inc
lret
and
xchg
movsb
xchg
lock
mov
test
ljmp
push
rolb
fwait
add
pushf
adc
out
push
cmpsb
sub
or
sbb
sbb
mov
push
ss
fimull
push
aad
enter
add
mov
mov
push
mov
xlat
bound
ja
xchg
dec
push
jmp
xchg
cwtl
add
push
sar
fwait
gs
cld
mull
pushf
rolb
mov
stos
jg
aad
add
mov
xchg
stos
in
stos
fwait
xor
idivl
and
aad
ja
push
xchg
xchg
jo
ss
movsl
in
fcompl
push
xchg
pop
pop
xor
cmp
scas
pop
dec
jo
pop
jg
arpl
je
rol
out
xchg
pusha
mov
sbb
mov
clc
add
sbb
and
movsl
enter
and
cmc
cmp
pop
mov
loopne
xlat
mov
cmpsl
fnstcw
mov
and
in
ljmp
fs
test
mov
xlat
ljmp
jae
movsl
jmp
push
push
out
xchg
fidivrs
cltd
mov
push
je
adc
mov
scas
xchg
rolb
pop
and
xor
shlb
adc
pop
iret
iret
loope
dec
cmp
jle
lahf
imul
push
cmp
lea
ja
xchg
fbstp
xchg
and
stos
mov
mov
int
dec
or
push
bound
push
rclb
xchg
jo
cmpsb
rcll
lock
sar
outsl
push
pop
in
cmp
cmpl
add
cmp
stos
push
jno
cli
mov
mov
icebp
insl
stos
fs
or
sbb
push
mov
mov
push
and
fwait
jg
add
mov
sti
pop
sar
ljmp
lret
fdivrl
sub
mov
bound
mov
xchg
rolb
das
imul
and
lods
fldl2t
mov
in
cltd
mov
pop
gs
lret
cld
and
jo
scas
cmp
dec
lret
out
sub
js
adc
mov
mov
ja
into
movsb
xchg
outsl
das
jecxz
test
out
cvtps2pd
inc
mov
bound
xchg
mov
aad
test
sar
int
pop
push
xchg
mov
adc
add
subb
push
cmp
xchg
add
leave
jnp
popa
mov
daa
lods
lods
jae
xor
jne
adc
out
lods
imul
loopne
mov
mov
data16
fs
mov
add
ja
in
in
hlt
sub
and
jbe
adc
js
xor
sub
dec
scas
mov
pop
lock
lret
mov
pop
nop
pop
mov
cmp
push
add
icebp
jecxz
cmp
lea
cmpl
add
es
sbb
cmp
push
lods
movsb
out
in
flds
push
dec
jl
movsb
int3
fucomp
sub
jge
daa
pop
xchg
mull
xchg
test
cwtl
cmp
fildll
lcall
in
popa
mov
mov
inc
push
stos
in
in
or
leave
mov
scas
mov
push
mov
xor
lcall
aad
lock
out
loopne
inc
and
inc
sub
arpl
std
imul
repz
loopne
popa
mov
popf
outsb
int
jb
and
lahf
xchg
xchg
pop
mov
orb
and
sbb
aam
lds
loop
jo
outsl
dec
mov
int3
xchg
inc
inc
mov
jle
imul
mov
dec
and
adc
cmp
mov
loope
mov
rolb
sarb
mov
mov
and
cwtl
push
xchg
popf
repnz
and
and
mov
sbb
or
sahf
aaa
int3
push
hlt
adc
cmp
in
call
or
hlt
jl
push
lock
daa
nop
mov
into
xchg
imul
pop
mov
add
mov
insb
jae
cmp
ficoms
push
ja,pn
in
sbb
xchg
cmp
les
pop
push
ror
mov
mov
leave
loop
xlat
outsl
cwtl
pop
adc
sub
mov
lcall
scas
nop
mov
je
adc
cmp
sub
out
cmpsb
shll
and
adcl
mov
ja
pop
and
iret
xchg
sqrtps
mov
aam
lcall
imul
push
cmpsb
sub
les
lahf
shlb
inc
cs
mov
ja
ds
xchg
lret
dec
and
into
test
adc
sbb
sbb
add
es
ret
jae
inc
repz
je
push
cwtl
cmp
pushf
std
xchg
test
mov
push
pop
mov
popf
in
ss
test
test
pop
aaa
cmp
xchg
cwtl
arpl
lds
push
repz
repnz
add
pop
pop
shrl
out
sub
cmp
xor
aas
pop
jno
jnp
jb
movb
shlb
rol
mov
std
mov
and
enter
mov
ja
mov
mov
cmp
stc
sbb
push
leave
sti
icebp
adc
mov
sbb
mov
loopne
xor
xchg
lahf
fs
mov
ret
fnstsw
lods
cmc
cli
jae
mov
lret
jae
nop
push
xor
sub
cli
jmp
mov
gs
sub
pusha
scas
cmc
addr16
sbb
push
andb
cmpsb
js
push
cmp
fwait
jns
gs
and
nop
rcr
xchg
ret
fcmove
mov
popa
mov
sub
jmp
call
sahf
repz
cmp
les
xchg
push
cmp
imul
out
dec
sbb
lock
enter
popa
repz
pop
fs
mov
lahf
xchg
ds
popf
jo
sarl
inc
mov
faddl
rolb
dec
in
cwtl
inc
out
icebp
xchg
mov
fnstenv
out
js
cmp
int3
or
pushf
sub
clc
loop
jle
test
mov
lret
shrl
out
fistl
test
test
and
mov
clc
loopne
in
xchg
andb
xor
xchg
rolb
aad
pop
cmpsb
bound
movsb
fcmovb
imul
cltd
mov
cmp
aaa
dec
dec
leave
ret
push
mov
imul
aas
add
or
adc
ds
fs
xor
jg
in
roll
sbb
shr
adc
andl
and
or
mov
mov
leave
inc
mov
cli
or
xor
push
lret
iret
jno
hlt
std
cmpsb
push
jecxz
add
cmp
dec
in
insl
sbb
test
in
push
mov
in
sbb
in
adc
mov
pop
mov
sti
lcall
or
mov
adc
mov
sub
cltd
jnp
testb
cmp
sub
and
adc
call
jl
movsb
icebp
push
xor
jne
pop
jge
int
sub
pop
ja
mov
cli
ret
mov
lea
testb
dec
test
xchg
jno
call
mov
xor
cmp
in
icebp
push
loope
int
rcrb
outsl
inc
in
movsl
mov
andl
mov
fcomi
mov
pop
lods
iret
add
enter
test
cmp
jecxz
pop
loopne
lret
pop
adc
mov
loopne
pushf
je
and
iret
mov
rorb
jb
mov
mov
fisubrs
decb
push
jg
jb
nop
inc
scas
xlat
adc
ret
fsubl
jns
stos
dec
pop
push
test
jecxz
jbe
out
inc
leave
mov
or
mov
push
push
cld
call
ljmp
insl
cwtl
lock
out
pop
idivl
lock
fstpt
cltd
add
inc
imul
jo
jo
std
psllw
mov
enter
movsb
xor
jg
enter
lods
sub
inc
pop
cli
or
filds
cli
mov
lock
sub
mov
or
cmpsb
dec
or
mov
dec
mov
enter
jl
mov
das
daa
mov
sub
xchg
jnp
or
fs
es
das
lcall
addr16
loop
jg
mov
addr16
cmp
pop
push
dec
icebp
or
and
push
movsb
push
mov
inc
int
dec
cmpsb
test
fcmovne
data16
testl
outsb
dec
loopne
aas
or
cmc
std
and
movsl
push
push
mov
repz
push
mov
in
scas
jne
dec
adc
jae
sbb
fwait
inc
pop
jg
jo
repz
xor
xor
mov
inc
bound
lock
dec
jnp
bound
lret
mov
pop
std
pushf
mov
mov
leave
jecxz
xor
xor
jg
adc
xor
lret
loopne
ret
mov
sahf
out
and
and
notl
adc
cmpsl
aam
mov
push
cwtl
sub
ss
scas
mov
fcoms
bound
insb
cmp
xor
add
push
mov
lcall
insl
mov
add
push
out
test
repnz
jne
cs
sbb
divl
dec
rcr
scas
call
dec
orb
pop
push
inc
mov
dec
add
xchg
dec
sub
fildl
shrl
dec
cmp
stos
dec
mov
lahf
or
fldl
sbb
xchg
adc
mov
push
push
sub
lds
loopnew
sub
sbb
cmpsb
sti
adc
test
int3
subl
leave
arpl
je
out
push
js
outsb
cmp
arpl
mov
cmpsl
push
cltd
mov
sahf
sar
aam
pop
jb
repz
dec
fwait
daa
hlt
lcall
imul
jae
jo
fbld
sub
sbb
jae
jne
dec
ds
push
sub
mov
and
sub
mov
repz
jo
fidivs
mov
lcall
mov
mov
cwtl
icebp
and
sbb
xchg
jmp
xor
lds
push
fwait
xor
inc
cmp
das
imul
stc
faddl
std
cmp
xor
jbe
jecxz
jmp
shrb
mov
stos
cld
pop
sub
xchg
push
sahf
loopne
push
cmp
cmpb
adc
sub
testb
ja
pop
pop
imul
loope
movsl
lods
dec
pop
iret
into
insb
mov
sub
sub
mov
dec
inc
lret
mov
sbb
push
adc
sub
dec
dec
imul
or
pop
in
enter
cmp
push
iret
mov
jne
sub
daa
sub
inc
rclb
bound
dec
lock
repnz
cli
lods
into
outsl
sub
sbbb
cwtl
push
or
jp
dec
lock
out
frstor
inc
push
imulb
dec
add
jns
ret
push
pop
sahf
lret
inc
or
xchg
mov
xor
pop
mov
mov
aam
or
das
sub
jmp
repnz
push
pop
pushf
dec
ljmp
xor
pop
xchg
into
aas
and
flds
cmpsb
mov
cmc
xor
into
sub
and
sbb
add
add
or
std
jmp
add
mov
daa
mov
mov
into
aas
outsb
xchg
mov
dec
fidivs
test
mov
mov
aaa
in
into
sarb
or
cld
pop
dec
jbe
aaa
cmc
dec
xchg
enter
xchg
roll
shlb
sub
js
insb
pop
pop
cld
jge
lods
lret
push
call
sarb
lahf
xor
push
test
pop
flds
fnstsw
push
shll
into
cmc
push
push
adc
sbbb
sarb
push
mov
inc
icebp
ror
and
pushf
dec
lods
and
dec
pusha
test
inc
loopne
xchg
xchg
aad
add
push
sub
fsubl
loopne
loopne
popa
fsts
sub
xchg
cmp
in
sub
push
push
hlt
add
leave
insl
mov
pop
sbb
int
or
push
xchg
repnz
push
dec
clc
dec
mov
stos
xor
adc
es
mov
jmp
lds
push
push
fiadds
or
lea
cmove
std
cmpsl
in
add
mov
and
imul
mov
add
mov
jb
jle
add
cli
dec
and
sbb
fidivs
mov
jl
inc
aam
inc
add
xor
and
dec
pop
jnp
mov
repnz
jne
dec
and
inc
loop
dec
rcrl
pop
mov
xchg
pop
adc
pop
inc
dec
mov
sarl
movsb
inc
fildl
push
add
insb
lds
fsubs
xchg
mov
xor
pop
cmp
daa
jo
frstor
adc
mov
mov
mov
xchg
pop
roll
lds
adcl
call
scas
xchg
dec
hlt
testl
lock
ficompl
inc
iret
cmp
jmp
inc
test
jo
mov
loop
shlb
stos
movsb
jg
clc
daa
push
call
insb
out
nop
sbb
sub
data16
dec
adc
shlb
mov
mov
ret
push
pusha
mov
cmp
lods
fs
jo
cmp
fwait
jle
popf
mov
pop
dec
popf
arpl
test
cmp
lcall
and
into
scas
bound
and
xor
int
lds
out
clc
sub
pop
stos
cmp
dec
adcb
test
xor
icebp
pop
clc
mov
mov
lds
test
ja
push
popf
add
mov
push
out
mov
mov
imul
cmp
mov
sbb
hlt
imul
repnz
pushf
sub
popa
xor
push
pop
inc
pop
sbb
jnp
fstps
xchg
xchg
lret
mov
loop
jecxz
cmpsl
out
ss
mov
scas
std
gs
dec
lret
fidivrs
fsubrp
push
rcll
loop
sub
shr
jb
adc
test
adc
hlt
enter
sti
cmp
mov
adc
out
stos
xchg
es
pusha
adc
jne
cs
xchg
enter
pop
jp
je
idivl
xchg
cli
or
fstpl
jmp
pusha
test
imul
lock
lahf
xor
jo
mov
and
fdivrl
orb
and
ret
in
adc
lods
in
ds
sbb
add
and
mov
addb
pop
arpl
rorb
mov
mov
gs
add
jl
mov
sub
stc
jb
push
lea
mov
pop
pop
xor
icebp
sbb
push
lea
mov
fbstp
aas
into
or
sub
lds
iret
pop
mov
cmpsb
xchg
pop
imul
fistpl
cwtl
xor
inc
or
or
lahf
and
fsubl
dec
clc
adc
mov
loope
xchg
lcall
call
jmp
fisubs
inc
pop
outsb
lds
push
imul
lds
pop
push
xor
cmp
ljmp
and
mov
pushf
insb
and
andl
mov
sub
jge
lcall
pop
adc
sub
gs
and
fsubrl
sub
loopne
idivb
ret
mull
mov
pop
nop
pop
dec
pop
jb
mov
sub
cmp
cmp
andl
in
xchg
mov
js
pop
push
into
std
sbb
inc
sbb
insl
stc
adc
fcomps
push
test
leave
push
leave
push
leave
mov
lea
lods
roll
jge
imul
jbe
push
mov
lea
dec
repnz
mov
aam
pop
sbbb
push
inc
ja
xlat
xor
jbe
aaa
rcrl
mov
dec
test
lret
inc
inc
xor
push
rclb
addl
add
push
mov
xor
cli
jmp
hlt
cld
jge
in
ficoms
fdiv
push
not
or
and
lea
add
dec
and
xlat
add
inc
mov
xor
in
pushf
lods
lods
gs
pop
fildl
mov
es
mov
xchg
mov
add
daa
push
imul
cmp
lahf
ret
scas
xor
xor
jl
sbb
lock
idivb
or
xchg
clc
fstpt
test
cmp
scas
mov
mov
mov
pushf
jp
adc
int3
push
orl
mov
call
js
add
push
je
add
mov
and
dec
into
bound
js
js
pop
fistl
sti
repnz
xor
outsb
xchg
xchg
mov
cmp
xor
add
push
sub
addr16
ljmp
xchg
hlt
sub
mov
addr16
jb
or
movsl
push
dec
arpl
and
lcall
and
push
das
pop
dec
lahf
std
dec
loope
loop
cltd
xor
mov
inc
adcb
or
push
cmp
or
and
stos
movsl
sub
xchg
xlat
cltd
inc
aad
repz
jnp
push
pop
cmp
loope
stos
ja
scas
scas
jns
sbb
cs
sbb
ficomps
dec
imulb
in
ss
mov
inc
mulb
cmp
lods
jno
xchg
pushf
mov
lahf
xlat
push
and
mov
push
sbb
leave
adc
sti
pop
por
push
mov
mov
xor
pushw
sbb
push
jnp
fistps
mov
lea
mov
shll
int
sarb
mov
sti
icebp
or
lods
inc
test
jb
push
cs
clc
les
shr
mov
out
push
push
sub
cmp
ss
push
push
sahf
inc
pop
push
sbb
mov
cli
ja
leave
movsl
pop
fidivrs
dec
shll
sub
call
fldt
or
bound
mov
lcall
pop
and
cmp
mov
add
push
inc
sbb
xchg
push
das
shrl
or
loop
pop
inc
sbb
mov
inc
outsb
sahf
fistpl
add
push
sbb
add
je
loope
js
stc
fxch
popf
push
pop
es
jecxz
mov
fildl
jbe
inc
stos
push
mov
lds
call
lods
loopne
fidivs
les
in
int3
inc
or
sbb
sbb
hlt
or
getsec
out
and
cmp
sti
stos
idivl
sub
shlb
insb
pop
cld
pop
inc
inc
inc
call
ss
outsl
lock
stos
cmp
mov
add
fsts
ljmp
push
or
lods
and
gs
add
out
aad
jnp
jge
or
aad
iret
int
jle
mov
in
rorb
mov
fists
cmp
movsb
push
mov
mov
in
add
cmpsl
out
out
fists
sub
cwtl
mov
lock
xchg
mov
sub
popf
cmc
inc
cmp
test
sbb
cmp
icebp
rorl
push
mov
add
addr16
pop
sbb
adc
or
push
std
inc
mov
hlt
adc
popf
or
out
cmp
imul
rorl
mov
imul
push
sub
cmp
sbb
fistps
aam
fcoml
lock
push
add
fcoms
insb
cld
or
test
add
pop
cmp
xchg
push
in
lret
sarl
jbe
xor
imul
push
jb
out
pop
lea
mov
scas
jp
sahf
mov
inc
jne
jmp
mov
sbb
rep
ja
or
push
inc
mov
hlt
xchg
cli
xchg
out
inc
mov
jmp
dec
inc
or
pop
movb
cmpsb
aaa
or
jne
dec
js
jno
aas
jno
imul
mov
push
repz
ljmp
xor
fwait
out
in
xchg
mov
cld
sub
cmp
shll
test
aad
jae
cmpsb
stc
jmp
mov
pop
psubusw
adc
cmp
insb
lock
adc
add
pop
fisubrl
push
call
add
pop
lcall
push
mov
lcall
cwtl
outsl
xchg
mov
dec
mov
cmpsl
stos
sbb
dec
sahf
gs
nop
push
fists
mov
mov
jae
out
ret
xor
es
sahf
stos
int3
push
xchg
mov
mov
and
das
pop
inc
jnp
and
fisubrl
aas
out
scas
mov
pop
xor
mov
push
into
repz
mov
xor
or
es
pop
out
xchg
mov
fstp
loopne
sbb
push
inc
cmp
lcall
add
cmp
and
jb
pop
lock
loope
push
subb
arpl
cltd
push
or
in
push
in
in
int
sarl
out
test
lret
insl
inc
jecxz
gs
aas
jg
dec
loopne
loope
ret
les
leave
add
push
je
mov
xor
sbb
dec
push
fwait
mov
enter
aas
cmp
jg
cmp
mov
into
inc
lcall
cmp
mov
adc
shrl
mov
hlt
lcall
into
inc
stos
and
mov
ljmp
icebp
jae
sbb
rorl
sbb
cmc
mov
pop
ja
xchg
or
fiaddl
cmp
loopne
nop
sahf
divb
inc
in
loope
push
add
lods
jnp
push
test
adc
mov
xchg
adc
mov
lea
dec
jns
add
or
ficoms
xchg
pusha
out
pushf
xchg
mov
outsb
popa
out
fsin
or
xor
aaa
inc
adc
push
inc
outsb
jne
popf
jae
xchg
shl
push
jb
fs
mov
pop
jp
psubq
addr16
add
repnz
rorb
sbb
and
or
bound
push
jmp
enter
cmc
in
pop
mov
mov
sub
mov
push
ss
xor
js,pt
sub
in
push
movsb
mov
push
rorl
in
jecxz
pop
das
les
xchg
in
push
outsb
jno
xor
movsl
cmpsl
push
outsl
daa
notb
pop
mov
xchg
outsb
neg
outsb
fadds
sbb
in
mov
cmp
inc
or
pop
xor
mov
pop
in
jb
lahf
sbb
sbbb
in
fs
jmp
xchg
insb
cld
fstp
aas
jl
arpl
sub
jbe,pt
inc
push
icebp
movsb
cmp
and
rorb
je
cmp
es
and
loopne
push
pop
test
mov
popf
test
dec
fnsave
pop
sbb
repnz
sub
or
rorl
lcall
iret
cmp
hlt
into
addl
fsubl
sub
add
icebp
fidivrl
pop
fldl
mov
jl
add
aam
cmpsb
fdivrs
cmp
sub
out
and
test
stos
dec
rclb
adc
sub
das
and
jle
mov
push
sub
jae
decl
daa
add
sarl
xchg
push
push
push
mov
xchg
aam
push
jnp
mov
jo
mov
test
mov
pop
inc
stc
xchg
das
mov
push
cmp
jae
mov
jle
adc
sub
pop
sbb
mov
dec
jge
ror
dec
sub
in
jae
shll
fbld
out
mov
outsb
and
cmpsl
scas
xchg
out
inc
xor
xor
sub
es
push
iret
sbb
arpl
pop
fistpll
or
mov
push
lock
rcrb
add
dec
add
lcall
imul
xchg
in
or
xor
mov
xchg
pop
pop
push
daa
push
mov
in
cli
in
lock
call
lods
mov
or
std
js
sub
pusha
and
ret
in
popa
pushf
fnsave
cmp
pop
std
sbb
jae
add
pop
pop
mov
nop
fstpl
xor
repz
jle
imul
cmp
sbb
cmp
not
cmp
or
push
dec
fdivs
ficomps
xchg
aas
ds
and
cmp
push
dec
ss
push
mov
imul
rorl
cmpsl
repz
xor
adc
and
mov
push
or
lds
fildl
push
aaa
pop
call
test
or
out
and
inc
stos
test
push
shlb
dec
pop
mov
and
dec
jns
jp
lret
ljmp
mov
add
jp
pusha
push
outsb
aam
jae
sub
pop
test
inc
mov
insl
jnp
mov
inc
ret
or
imul
jns
stc
inc
scas
shr
js
addl
repz
cmp
sbb
cmpsb
xor
pusha
imul
in
mov
je
pop
mov
popf
enter
out
pop
mov
and
xor
sbb
stos
cmp
push
movsl
fsts
push
bound
ljmp
notl
push
push
shll
fmul
xchg
lcall
xchg
mov
lret
push
inc
mov
call
out
xor
dec
addr16
out
mov
mov
mov
icebp
xchg
fsub
mov
xchg
xor
out
mov
mov
add
fidivrl
lcall
pop
cmpsb
xchg
mov
outsb
clc
insl
addr16
dec
xor
addb
mov
push
mov
shlb
cmp
sbb
mov
mov
pop
adc
dec
imul
adc
repz
sub
hlt
cmpsb
das
lcall
or
out
inc
xor
jno
popa
loope
adc
ds
leave
push
push
jge
pop
sarb
stos
dec
das
or
inc
mov
or
mov
mov
xor
jmp
jbe
pop
cmpl
or
mov
icebp
call
jne
fs
lea
enter
mov
cs
out
sub
je
adc
push
inc
add
inc
cmp
jmp
or
das
and
nop
in
inc
mov
test
cmpsl
jnp
aad
mov
mov
loop
lret
mov
sbb
leave
iret
push
xlat
adc
in
push
adc
jecxz
inc
inc
popa
out
xchg
in
sbb
loope
pop
insl
movsb
mov
out
inc
es
sub
iret
mov
xchg
addr16
inc
lret
mov
jl
int3
dec
and
shlb
pop
pop
andl
test
xor
insl
xlat
cli
cs
push
ret
mov
dec
push
xchg
push
addb
pop
push
pop
dec
dec
add
cmp
pusha
sbb
test
push
outsl
fdivr
daa
add
aaa
xchg
loopne
daa
cmp
dec
ljmp
or
xor
pushf
cmp
push
sti
adc
and
jecxz
xor
repnz
nop
fprem
mov
lret
jecxz
lock
cld
push
sub
inc
in
js
or
cmpsb
jnp,pn
pop
add
mov
pop
mov
sub
xor
push
out
push
jge
inc
arpl
xchg
data16
inc
mov
cmpsl
or
mov
mov
and
mov
pop
xchg
xchg
adc
dec
fstpl
aaa
arpl
jle
popl
in
pop
fidivl
rorb
dec
mov
mov
stos
jb
stos
enter
outsl
and
loope
sbb
aas
lret
pop
ja
cmp
xchg
jmp
mov
push
dec
daa
stos
out
hlt
outsl
stos
mov
adc
add
mov
push
or
loope
xchg
test
mov
cwtl
call
shrb
push
scas
pop
pop
add
pop
jns
push
mov
jo
test
xchg
mov
xchg
out
cmpsl
js
mov
shrb
bound
lret
mov
push
xor
and
xchg
push
out
gs
iret
push
fistpll
test
jne
imul
icebp
jbe
cs
sti
bound
aad
jg
cld
icebp
clc
or
out
test
mov
rorb
adcb
loop
push
pop
pop
push
cmp
add
int
mov
arpl
and
sub
jmp
fistps
repz
mov
inc
mov
mov
mov
enter
das
loopne
jmp
lahf
sbb
push
aaa
adc
xchg
lods
aaa
add
popf
mov
pop
xchg
adc
and
sbb
out
cmp
inc
lret
shrl
sub
dec
cmp
xlat
adc
xor
adc
inc
pushl
std
aas
orl
fnstenv
fldl
jno
dec
add
sbb
push
sti
iret
fwait
xor
sbb
lcall
jmp
push
cwtl
pop
pop
sbb
jg
sub
mov
adc
inc
les
mov
xor
push
dec
pop
add
push
xor
in
jle
ljmp
hlt
push
adc
fstl
in
mov
mov
jmp
mov
sbb
sbb
mov
je
ljmp
out
test
js
ficompl
in
push
ds
fistps
xor
lcall
cmp
push
add
insb
sub
addr16
outsb
pop
cmp
xor
adc
lods
adc
add
mov
movsl
push
bound
test
sub
aas
cmp
movsb
mov
int3
adc
push
mov
jg
mov
and
or
adc
cld
out
xchg
mov
aaa
fistpll
stos
xchg
mov
xchg
adc
adc
outsb
shll
xchg
and
jbe
cmp
into
outsl
addr16
repz
push
sub
mov
xchg
mov
or
lods
pop
ja
add
cmp
sub
and
xchg
scas
orb
cmpsb
pop
adcl
xchg
insl
mov
shll
inc
mov
inc
cmp
ret
mov
call
nop
fcoml
xchg
fs
adc
inc
cmpsl
decb
lea
mov
xchg
xor
jl
sbb
mov
rolb
clc
dec
sub
dec
pop
repnz
sbb
into
fwait
bnd
adc
loop
jne
stos
sbb
xlat
lret
mov
mov
cmp
rcrw
mov
inc
push
aas
mov
adc
loopne
lea
cmpsl
clts
shrb
popa
or
hlt
iret
ja
cli
sbb
push
clc
inc
inc
movsb
add
add
jbe
cmp
pop
and
inc
stos
enter
ljmp
inc
aaa
in
pop
mov
fwait
rorb
out
inc
gs
jne
pop
rol
inc
add
fildll
insb
out
mov
jns
dec
testl
mov
aad
shl
out
pushf
imul
mov
lock
outsl
cmp
cmp
push
jno
push
ret
and
xor
aam
out
or
sub
cmc
pop
loop
shlb
mov
xchg
lea
mov
or
int3
cmp
sbb
rorl
cwtl
mov
mov
popl
stos
movsb
xor
mov
jae
pusha
pop
xlat
loope
dec
addl
xchg
mov
les
sbb
sbb
xor
fwait
js
adc
cltd
and
rcll
fistps
mov
clc
pop
lret
test
dec
xor
mov
jg
and
xchg
stc
out
das
loope
ds
mov
xor
movsb
fwait
repz
push
pop
subl
mov
jne
pop
jmp
lods
dec
addr16
sub
outsl
dec
ljmp
lret
push
aam
aaa
pop
das
dec
enter
aas
cmc
jl
movsb
test
or
push
jb
xchg
nop
xchg
fnstcw
out
mov
test
fcomps
mov
sbb
lret
sub
and
mov
sbb
pop
cmp
or
std
gs
adc
xor
sbb
jnp
ret
adcl
adc
mov
mov
dec
or
inc
pop
scas
add
and
in
ja
out
mov
daa
fbld
cwtl
jp
jl
cmp
cmp
pop
das
mov
sbb
adc
std
push
push
or
clc
sbb
ds
fs
and
ret
flds
lea
push
ret
sbb
imul
xlat
int
jbe
pop
lcall
mov
add
sbb
lock
lock
mov
lret
imul
lock
mov
clc
insb
in
mov
icebp
in
mov
inc
inc
mov
xor
xchg
loopne
cmp
jns
add
sub
add
je
and
out
stc
push
test
cld
in
cld
adc
es
dec
push
aas
xor
outsb
sub
ret
fisttpll
push
or
lea
cltd
adc
push
mov
mov
cmp
push
xchg
lods
cld
jbe
mov
sbb
or
pop
pop
pop
pop
lock
xor
test
fnstsw
das
int
or
jge
gs
faddl
hlt
dec
rolb
push
mov
adc
fisubs
cmp
jne
fisubl
pop
pop
scas
inc
mov
jmp
lret
out
cmc
popa
adc
jb
push
jg
mov
pop
add
insl
sbb
sub
jb
inc
inc
lret
nop
test
js
xlat
aaa
out
fwait
sub
nop
flds
cmc
mov
lock
pop
mov
push
outsl
push
repz
ret
outsb
mov
fdivp
aas
outsb
mulps
jp
idivl
scas
sbb
lods
adc
adc
std
aam
lds
into
push
fstpt
push
roll
jle
or
pusha
into
pop
mov
or
in
das
call
mov
notb
jp
sbb
cmc
cmpsl
lret
xchg
mov
out
sti
sarl
into
push
dec
aad
aaa
aam
je
pop
sub
cwtl
add
jmp
push
and
subl
and
cmp
cmp
dec
mov
in
repnz
in
andl
pop
out
xor
insb
sbb
pop
sub
cwtl
popf
mov
xchg
pop
repnz
sub
loop
pop
shlb
in
fsubl
and
or
mov
mov
inc
sub
clc
jecxz
cmpsb
pop
ds
sar
sahf
mov
push
inc
or
outsl
sbb
adc
cwtl
rorl
into
imul
fldenv
push
push
ss
xchg
mov
xchg
inc
xor
jp
mov
test
je
jnp
push
sub
cmp
inc
cmpsb
or
xlat
fdivrl
icebp
outsl
pop
add
test
fstpt
push
push
pushl
ficoml
inc
mov
inc
inc
mov
mov
jae
push
sbb
pop
cmp
rcl
cmp
cmp
ljmp
fs
add
clc
add
subl
movsb
cmc
cmp
loop
jl
push
scas
mov
sbb
cmp
out
aad
scas
std
xor
dec
and
xor
push
addr16
cwtl
or
fldlg2
ss
dec
push
xchg
pushf
rclb
lock
mov
jge
enter
lds
stc
xor
jns
add
orl
push
adc
mov
insb
pop
addr16
ds
cmpsb
dec
dec
lcall
or
test
cli
mov
adc
ljmp
je
in
sbb
pop
sub
outsl
or
mov
gs
sub
mov
cmpsl
xor
ret
cli
sub
pop
jl
aaa
push
arpl
popf
mov
cmp
rcl
lock
imul
jp
push
stos
je
cmp
pop
sub
xor
negb
mov
push
cmc
pop
adc
fnstenv
stos
jno
aas
out
xor
mov
sbb
push
je
push
xchg
mov
push
rdtsc
xchg
push
pop
cli
addr16
mov
addr16
ds
adc
int3
sahf
jp
cmc
fsubr
jg
movb
xor
xor
jge
push
sbb
inc
pop
jbe
les
mov
mov
into
scas
push
push
lds
fimuls
pop
nop
leave
sub
sti
test
sub
cmp
adc
enter
mov
pop
jmp
movsb
dec
cmp
sbb
xchg
mov
push
pushf
icebp
jbe
push
outsl
fadd
pushf
mov
push
pop
jo
fistpll
dec
loope
movsl
rclb
jg
push
jb
idivl
test
add
das
xchg
andb
mov
imul
daa
lock
push
and
popf
xor
lret
mov
push
xlat
inc
mov
mov
out
pop
mov
mov
pop
push
fwait
jnp
mov
or
jne
pop
shrl
xlat
ljmp
nop
stc
decb
jmp
inc
adcl
pop
in
test
xor
out
call
shlb
je
jmp
lea
pop
mov
xor
test
jle
mov
stos
jne
and
push
mov
addl
dec
popa
dec
sub
add
mov
pop
fists
cmpsl
mov
inc
mov
stos
xchg
sub
mov
pop
popf
jns
add
mov
int3
jb
lcall
movsb
cmp
pop
test
cmp
stos
scas
mov
inc
aam
iret
mov
adc
inc
fiaddl
or
mov
imul
lcall
aad
dec
xchg
jno
jge
mov
push
loop
sub
lea
or
scas
mov
jne
sbb
ljmp
scas
mov
aam
mov
pop
sub
xor
mov
sbb
or
pop
adc
mov
lods
adc
rolb
fsts
mov
fs
out
incl
xchg
mov
imul
push
jl
push
cltd
dec
add
ja
inc
push
andl
addl
inc
icebp
jbe
mov
push
sub
xor
popf
scas
adc
sbb
clc
scas
jmp
in
and
fiaddl
ret
ljmp
jne
sbb
pop
into
test
movsb
imul
and
test
repnz
dec
add
sub
das
inc
push
add
daa
insb
andb
int3
fistpl
or
xchg
mov
cmp
mov
setl
xor
insl
aad
add
jg
inc
jae
xchg
lcall
loopne
jge
xor
fstl
jle
and
xchg
out
jp
fstpl
movsl
and
sahf
inc
imul
push
lods
inc
leave
mov
or
outsl
je
int3
lahf
cmpsb
xchg
push
or
cmp
pop
leave
cmpsl
cmp
in
mov
cwtl
outsl
rol
lret
xchg
popl
stos
cltd
jmp
shlb
aam
jb
repnz
testb
mov
aam
mov
dec
js
or
xor
movsl
insl
and
aad
push
pop
lea
sahf
fcmovb
sti
ljmp
push
mov
subl
cmp
test
pop
call
cmp
cs
lret
xor
lea
pop
push
jns
imul
adc
xchg
push
shr
cmpsl
add
lret
out
or
outsl
lods
jno
cmpsl
ret
jle
inc
pop
pop
mov
in
out
fidivs
pop
aas
les
iret
orb
cld
cld
push
or
dec
fadds
sub
xor
mov
out
fsubs
test
sub
movsb
mov
or
and
daa
cmp
mov
lods
and
add
push
cmp
dec
add
cs
pop
pop
sbb
mov
dec
push
cmpsl
or
les
mov
cwtl
cld
sbb
sub
cmc
mov
ror
ret
xchg
out
mov
dec
xor
aad
jne
aam
data16
es
decl
xchg
pushf
repz
test
mov
xor
movsb
mov
and
and
dec
ficoml
mov
movsb
sahf
lods
or
leave
and
push
pop
ret
mov
add
xor
cmp
insl
fnstsw
jbe
or
add
push
notb
gs
hlt
mov
xor
loop
adc
mov
fimull
pop
jo
inc
js
int3
cmpsb
fcmovu
pop
outsl
or
idivl
cld
xlat
sarl
sub
mov
pop
mov
outsl
push
or
pop
cmc
adc
inc
sti
add
dec
or
aas
sahf
xor
test
inc
lret
sbb
lods
xor
call
pushf
mov
stc
hlt
stos
pop
fstpl
out
int
xor
inc
inc
pop
xor
sub
arpl
es
mov
and
idivb
sbbl
in
xor
jp
jp
hlt
xor
into
ficompl
mov
jl
mov
sbb
sarb
pusha
pop
mov
pop
outsb
push
mov
cmp
daa
push
movb
and
fucomip
and
call
sbbl
sub
dec
stc
clc
lret
in
xor
mov
lret
fstps
dec
jne
xchg
jb
mov
xor
jne
hlt
adc
es
out
adc
mov
fcmovb
out
adc
rcrl
pop
mov
add
lock
les
shll
in
std
sbb
in
and
mov
imul
fucom
add
jle
mov
cmp
ljmpw
lea
push
add
add
jp
cmpsl
lret
mov
sub
mov
xchg
mov
push
sbb
and
jno
adc
mov
push
pop
pop
push
mov
mov
fdivs
xchg
data16
insb
ja
jbe
mov
sub
sub
pop
xor
dec
fimull
adc
lret
out
push
mov
dec
aam
mov
and
imul
movsb
cmp
jnp
sahf
add
push
mov
pcmpgtb
rolb
mov
pop
xchg
je
xchg
test
mov
mov
mov
lods
cmc
lods
inc
pop
negl
ds
jge
shrb
lret
cmp
dec
inc
mov
cmp
pop
out
jle
rcrl
ljmp
in
dec
negl
jae
jno
dec
out
push
orl
cmp
leave
sub
stos
mov
sbb
sbb
test
int
mov
mov
iret
jo
inc
scas
jo
fnstsw
jno
xchg
cmp
sbb
push
xor
push
imul
add
jbe
loop
int
sub
fucomip
scas
mov
push
mov
push
xchg
cmpsl
jno
push
scas
adc
or
ja
push
cmc
xchg
push
sarb
cmp
aad
or
aad
sub
sbb
stos
mov
int
repnz
mov
out
lcall
fildll
pushf
mov
xchg
mov
nop
mov
jg
scas
orl
scas
inc
jo
adc
mov
icebp
imul
rep
outsb
pop
lret
pop
and
add
outsl
daa
pop
xchg
jb
xchg
pop
cmpsl
xchg
adc
jg
mov
pop
cli
cmp
data16
inc
cli
xchg
in
subb
or
lret
push
cmp
mov
dec
jp,pn
iret
pop
dec
pop
xor
jge
push
repz
pop
repnz
and
pop
push
push
cmp
int3
adc
pop
aas
or
push
sbb
loopne
push
daa
stos
ficoms
jecxz
cltd
addr16
cmpsb
jp
ret
push
push
adc
pop
push
loope
mov
mov
aaa
inc
cli
aas
lds
push
mov
aas
push
testb
popa
mov
pop
mov
xor
inc
jecxz
mov
fnsave
cli
in
push
mov
imul
aam
sti
push
xchg
push
mov
fimuls
leave
dec
dec
imul
nop
fldt
inc
and
cmp
xor
addl
xor
stos
negb
mov
shlb
lahf
mov
jmp
mov
xchg
andw
loopne
jmp
jmp
call
mov
stos
xchg
stc
loope
insb
addr16
sub
pop
outsl
and
jns
popf
push
adc
adc
je
dec
pop
cmpsl
insb
out
inc
and
xchg
mov
subb
adc
or
lods
shl
and
jecxz
int3
lret
xchg
mov
jo
leave
jl
dec
lahf
and
mov
cmpsb
int3
jne
sbb
jle
mov
popa
xchg
inc
xor
std
mov
loopne
lea
sbb
dec
lret
inc
push
jge
insb
sub
fs
xor
push
push
adc
cmc
in
add
push
aas
neg
pop
add
mov
call
ret
pop
sbb
mov
test
push
add
sub
pop
add
insl
test
shll
jno
cmc
pop
cld
mov
push
cli
mov
loop
inc
mov
cmp
xor
or
mov
rcll
mov
dec
mov
sbb
fcmovb
mov
jl
and
inc
je
xor
repnz
test
gs
cli
adc
lods
jae
rcrb
out
fsubrs
outsb
frstor
bound
arpl
pop
cwtl
mov
and
xchg
add
cmp
inc
jecxz
leave
ret
js
jecxz
lock
inc
fildl
inc
jg
sahf
cmpsl
lret
or
or
pop
mov
sub
mov
movsb
push
mov
cmp
sbb
arpl
cmpsl
inc
dec
fwait
dec
dec
xor
mov
jmp
add
cmp
loope
cmpsb
inc
inc
mov
bound
dec
mov
popf
or
push
jecxz
mov
mov
mov
shrb
xchg
sbb
pop
fstpl
fnsave
or
dec
pop
ljmp
aam
loop
mov
rcrl
inc
scas
sbb
fwait
rcl
andl
push
out
add
cwtl
pop
mov
jle
cmpsb
shll
rcll
adc
inc
pop
movsl
add
pop
clc
fs
lods
mov
std
shlb
fdivl
xor
pop
mov
mov
jo
sbbb
jae
out
push
scas
cmpsl
pusha
lds
pop
mov
adc
adc
jmp
sarb
pop
or
jge
movsb
sub
or
jp
orb
and
sbb
test
fistpl
pop
lahf
lock
out
cwtl
push
inc
enter
mov
pop
stos
fmuls
mov
cmp
data16
mov
pop
fidivrl
sahf
lea
push
imul
dec
movsl
and
lahf
shll
out
adc
ss
loopne
dec
push
or
add
or
push
loop
mov
push
pop
imul
aas
fmuls
cmpsl
test
inc
out
fstp
mov
add
mov
or
pop
call
pop
or
bound
and
insb
fidivrl
xchg
cmpsb
ss
aad
stos
mov
jmp
dec
jae
xchg
or
mov
js,pt
mov
pusha
mov
sub
push
mov
pop
mov
imulb
adc
mov
ret
push
pusha
jns
aaa
cmp
cmp
in
imul
mov
jb
into
xchg
out
push
scas
jge
cmp
adc
pop
fbstp
mov
push
xor
in
push
sbb
fldt
leave
lds
pop
pop
cmpsb
xor
adc
into
out
or
mov
mov
and
cmp
loopne
out
iret
push
iret
repnz
add
aaa
orl
add
and
insb
fwait
mov
push
and
sbb
imul
inc
xchg
mov
test
mov
push
xorl
arpl
sub
rorl
ss
adcl
sti
fsub
jns
sbb
pop
roll
sbb
jne
mov
adc
jmp
das
sbb
mov
shll
fwait
sbb
xchg
cmp
inc
lea
lret
pop
push
sbbl
jg
mov
imul
pop
jmp
push
inc
xchg
scas
shl
adc
gs
popfw
jle
and
es
jle
adcl
inc
sub
xchg
in
aam
popa
add
sub
xor
mov
push
cli
lods
push
mov
xchg
fs
jnp
push
xor
jp
xchg
mov
adc
addl
add
mov
cmp
jp
pop
iret
sbb
lods
test
mov
andl
jp
fcmove
sbbl
mov
in
mov
aaa
sbb
inc
sbb
loope
int3
mov
loopne
repnz
mov
in
lret
cmp
ds
mov
das
xchg
pop
xchg
das
int3
push
test
push
fstps
nop
cmp
test
clc
and
dec
daa
nop
out
jo
push
mov
in
dec
repz
jbe
adc
movl
jo
outsb
push
jno
jle
sti
inc
std
push
xchg
mov
loopne
stos
sub
xchg
or
int3
push
movb
insl
mov
ljmp
push
insl
outsb
cmpsl
sub
out
in
lcall
pop
pop
cmpb
sti
mov
mov
sarb
lret
fs
arpl
sahf
mov
mov
jo
push
popa
popa
add
mov
ljmp
imul
out
loopne
sahf
enter
sub
stos
mov
pop
cmpl
sti
cmp
popa
mov
in
jno
cmpsl
aad
inc
lods
sub
loop
mov
xchg
ss
sub
adc
pop
mov
jno
jle
inc
mov
or
xchg
stc
mov
scas
xor
rcrl
or
mov
mov
push
mov
dec
push
push
sbb
sub
popf
or
in
arpl
jge
xchg
lea
hlt
sub
ret
pushf
adc
fidivl
jne
pusha
jae
or
inc
add
inc
sbb
xor
daa
in
iret
in
mov
flds
pop
adc
fisubrl
out
or
shrb
rcrl
jb
sub
out
mov
jno
mov
adc
repnz
insb
std
jecxz
icebp
pushl
cmp
push
mov
aam
xchg
lcall
dec
sahf
push
jne
xor
add
pop
inc
lcall
test
add
jle
insl
shl
dec
or
dec
leave
mov
imul
fs
inc
dec
subl
cld
pop
sub
mov
adc
aaa
sbb
into
test
int3
mov
inc
push
es
sti
repz
lock
shr
adc
adcl
sub
xchg
add
and
ffreep
popl
aam
ljmp
cmp
mov
mov
jb
shr
adc
and
or
out
inc
xchg
ret
into
ljmp
mov
mov
jae
xor
adc
je
test
xor
sub
in
rcrl
jecxz
test
mov
pop
stos
lcall
xchg
aam
pop
jae
push
xchg
xchg
sub
scas
and
and
adc
adc
ja
insb
jae
hlt
mov
cmp
fimull
add
sbb
sbb
pop
in
inc
pop
sbb
add
into
jl
push
fisubl
mov
and
jbe
xchg
std
pusha
dec
stc
jmp
pop
rol
je
js
or
add
es
sub
lods
mov
scas
mov
push
int
sbb
inc
xlat
es
mov
cmp
xor
shrb
out
loopne
mov
dec
mov
mov
add
cmp
out
insl
ret
stc
aas
add
xchg
dec
and
test
inc
mov
dec
add
or
je
sub
lods
pop
mov
cmpb
stos
push
daa
insl
mov
jns
lds
in
sahf
xchg
adc
shlb
push
ret
mov
in
insb
sbb
push
xor
cmpb
add
inc
pop
dec
shrb
ljmp
out
adc
cmpsl
dec
jne
adc
cli
pusha
inc
sub
mov
pop
cmp
mov
mov
in
xchg
js
rcr
insl
cs
jne
xor
cmp
pop
mov
lds
inc
fisubrl
dec
push
push
adc
call
sbb
mov
sub
or
sbb
adc
or
mov
cmp
jmp
clc
dec
mov
ret
in
sbb
sub
lret
insb
jae
mov
mov
jg
mov
mov
insb
fnsave
rorl
cwtl
lods
inc
lahf
push
mov
cmp
xchg
adc
lahf
out
rcll
add
sbb
ret
xor
mov
sub
or
dec
jbe
call
cmc
pop
fildl
xchg
jb
std
xchg
icebp
inc
je
mov
dec
sub
dec
pop
ja
inc
out
lcall
dec
push
and
testb
loopne
dec
add
in
adc
or
or
mov
jmp
mov
add
adc
cmp
fs
gs
push
fdivrl
mov
adc
xor
dec
lds
inc
nop
dec
shr
into
xchg
aad
shl
out
sbb
enter
in
inc
push
push
pop
xchg
ret
cld
ljmp
mov
mov
sub
mov
lret
sbb
loope
fdivr
or
sbb
mov
gs
iret
fbld
scas
stos
aaa
test
pop
out
adcl
outsb
push
sub
std
cli
test
jno
insb
inc
cmpsl
cmp
nop
inc
movsl
xor
add
rorl
inc
std
mov
popa
mov
insl
jns
lea
psrad
jle
or
mov
mov
add
pop
dec
jbe
orl
xor
jg
xor
and
xor
mov
aam
sbbl
xchg
mov
mov
movsl
pop
inc
inc
loope
sbb
aad
inc
mov
cmp
xchg
pusha
dec
call
in
add
jle
test
sub
pop
cmp
js
sbb
aam
xor
pavgw
push
xor
jo
jb
push
mov
jge
sub
orb
mov
sub
jle
jns
rorb
orl
fisubrs
inc
pop
pop
mov
pop
loop
lds
mov
push
push
js
repz
fnstcw
push
fistpl
add
inc
mov
sbb
loop
push
dec
lahf
xor
leave
clc
faddl
dec
pusha
loope
jae
mov
loop
repz
sbb
pusha
rolb
jecxz
daa
xchg
ja
aam
push
adc
cmp
dec
lcall
mov
test
popf
outsl
push
or
and
daa
in
shrb
das
into
lahf
push
sbb
mov
loope
adc
loope
adc
enter
jmp
test
lahf
es
mov
mov
dec
or
pop
enter
es
push
jge
insl
out
inc
xchg
ficoml
mov
pop
shl
xlat
xchg
xchg
cmp
mov
shll
add
or
popf
ss
dec
inc
push
loope
lods
cmpsb
fs
jp
xor
data16
push
xchg
loope
add
mov
mov
fsubs
and
nop
adc
inc
mov
push
or
and
inc
fimuls
xlat
lretw
insl
or
jae
pop
cmp
and
js
inc
addr16
cltd
movsl
sub
push
cmp
push
inc
outsl
inc
jecxz
mov
cmp
ljmp
jg
sub
or
jne
jae
cmp
cmp
cmpsl
rcll
sbbb
mov
push
mov
sti
es
cltd
popf
push
xchg
jb
dec
es
fisttps
jecxz
in
aas
orl
lahf
pop
es
daa
adc
hlt
cmp
in
gs
xchg
inc
and
sub
lea
jmp
lahf
dec
ss
dec
test
aaa
les
aam
cmp
iret
push
test
les
mov
mov
lds
pop
inc
shll
movsl
push
sub
lret
lods
mov
push
ja
movsb
adc
clc
jecxz
cmp
push
xor
lret
repz
inc
cmp
out
ja
outsl
mov
fwait
or
jecxz
mov
decl
mulb
mov
fwait
xchg
xchg
dec
dec
jne
push
jp
xor
mov
push
loopne
jmp
and
inc
scas
inc
ja
pop
test
pop
sbb
movsl
in
loope
pop
fxch
lods
mov
sub
int3
xchg
pop
xchg
outsb
pop
push
pop
inc
outsb
pushf
push
sub
sub
fdivs
push
outsb
out
ja
xor
add
int3
mov
aas
inc
test
bound
dec
push
js
fcompp
jne
dec
sub
clc
ret
mov
hlt
mov
push
mov
bound
inc
push
lods
or
pushf
lock
hlt
mov
mov
movsl
decl
out
jmp
push
lcall
imul
out
mov
icebp
xchg
sub
popa
lock
sub
push
das
jmp
jae
add
inc
decl
cli
mov
fists
inc
roll
mov
int
push
ljmp
popf
xchg
push
repnz
or
rorl
mov
scas
icebp
pop
sub
xor
ljmp
xor
lods
sub
push
divb
push
out
andb
aaa
in
add
sub
inc
lods
mov
daa
repz
jo
mov
test
test
lods
xor
mov
ret
dec
cmp
orl
mov
dec
inc
repz
imull
and
adc
xchg
lds
mov
cltd
das
rorb
in
aas
adc
push
stos
mov
mov
ss
mov
mov
fnstsw
icebp
and
fbld
cmp
cltd
roll
hlt
stc
adc
xchg
ss
mov
sub
and
sub
mov
pushf
xchg
xchg
push
pop
data16
push
pop
in
inc
stc
mov
pop
cmpb
dec
jne
fs
daa
out
push
scas
mov
mov
js
dec
mov
xor
iret
arpl
lods
cmpsl
negl
loopne
xchg
stos
lahf
cmc
jo
pop
jo
ss
cmp
adc
ja
jg
xchg
outsl
mov
shll
scas
in
notl
cmp
mov
adc
xchg
movsb
data16
xchg
xor
sbb
daa
jecxz
and
push
outsb
push
mov
push
shlb
gs
fs
mov
orl
push
xchg
aas
jle
pushf
std
mov
mov
negl
jmp
les
leave
shll
fbld
mov
arpl
stos
pop
and
jmp
call
cmp
enter
inc
xlat
testb
or
xchg
rolb
mov
sub
in
xchg
xchg
add
adc
test
lret
jns
or
xchg
mov
dec
mov
or
sub
lret
xorl
movsb
add
inc
aad
jno
out
add
das
push
std
cmp
dec
pop
loope
and
call
test
pop
mov
fdivr
push
lret
mov
push
test
mov
rcll
out
jle
pop
pushf
adc
xor
mov
cmc
lock
xchg
roll
mov
cmp
aam
jl
adc
sbb
sbb
lds
jne
je
ljmp
mov
push
aad
and
cmc
test
cld
es
adc
pop
les
sub
jmp
jecxz
sahf
test
andl
sub
clc
lea
inc
inc
jp
repz
cwtl
and
pop
pop
sbb
cmc
popa
jg
mov
inc
icebp
repnz
mov
sbb
data16
xor
insl
out
loope
adc
insl
mov
addl
jl
fmull
pop
mov
push
lret
pop
adc
or
aad
mov
mov
outsb
mov
adc
dec
sbb
lret
push
ss
mov
pop
jo
in
test
mov
push
cmp
sarl
outsl
lock
and
push
lods
inc
pop
sub
lahf
or
xchg
loop
pop
stos
repnz
nop
cmp
fdivp
push
fdivs
lea
pop
pop
push
xor
mov
gs
mov
push
xchg
lods
mov
inc
mov
repnz
jo
icebp
cwtl
mov
test
mov
or
mov
xor
add
or
pop
mov
inc
pushf
add
sti
sbb
ss
cmp
mov
mov
xlat
or
inc
aam
sbb
push
mov
add
nop
ja
call
mov
xchg
xchg
dec
dec
mov
das
add
xchg
mov
pop
push
dec
shrb
add
rcll
aas
enter
and
icebp
cmp
movl
in
pop
pop
dec
out
lret
mov
int3
push
ss
or
sub
stos
or
popf
lret
sbb
roll
inc
addr16
dec
push
push
dec
cmpsl
jmp
add
mov
jo,pn
mov
aas
sub
cmp
stos
or
mov
leave
mov
jle
sub
add
pop
das
jns
int3
xchg
push
ficomps
inc
xchg
xlat
out
mov
roll
sub
shrl
mov
lahf
in
mov
cmp
fs
or
int3
jno
mov
sbb
jne
push
mov
xchg
sbb
dec
fwait
ds
imul
mov
popf
cld
xchg
mov
insb
aas
int3
jmp
arpl
lods
cwtl
jge
leave
in
inc
les
adc
xor
ljmp
andl
push
mov
mov
xchg
mov
cmp
ret
sub
push
pusha
xchg
repz
pop
pop
scas
shrb
xlat
in
rcr
repnz
call
fdivp
adcl
xor
sahf
xor
es
mov
xor
push
dec
jae
sub
cmp
mov
out
inc
sbb
sbb
adc
popf
sbb
imul
cwtl
mov
jns
xor
lds
fisttpll
lcall
lods
sub
insl
pop
mov
cmp
xchg
cld
adc
pushf
inc
pop
scas
inc
xor
cld
js
es
arpl
jbe
into
push
clc
dec
scas
adc
inc
jne
jmp
insb
adc
jp
call
mov
inc
es
sbb
nop
out
ffree
push
or
mov
ret
dec
pushf
push
push
aam
mov
dec
fwait
test
dec
ret
pop
push
sarl
stos
dec
pop
mov
sub
std
inc
loop
aad
xor
sub
int
faddl
int
pop
iret
scas
mov
and
popf
test
loopne
repz
sub
mov
xchg
and
push
xchg
fucomp
adc
call
xchg
lds
out
clc
pop
xlat
out
sbb
add
js
cmp
jl
aaa
in
push
xor
xor
mov
add
je
aad
iret
cmp
cld
xchg
leave
xchg
mov
lods
into
mov
jle
mov
ljmp
push
dec
xchg
call
cmp
and
mov
sub
mov
adcb
or
lods
and
adc
outsl
push
in
call
cmpsb
mov
loop
ss
outsl
into
sub
pushf
push
stc
inc
sarb
adc
inc
adc
or
pop
popa
mov
jecxz
xor
adc
jl
loopne
push
aad
lcall
and
dec
loop
adc
out
pop
xchg
push
mov
imul
add
jecxz
jne
shll
sbb
dec
mov
in
cmpb
in
pop
js
mov
lcall
pop
xor
pusha
mov
cmc
movb
or
push
jg
in
jb
arpl
mov
jbe
stos
or
loopne
push
mov
sbb
mov
lret
rcl
xchg
sti
into
xor
mov
mov
out
mov
popl
cltd
pop
sub
mov
xor
and
dec
fdivrl
and
cmp
push
pop
fidivrs
push
cmpsb
clc
je
dec
fs
cmp
mov
pop
dec
sub
xor
int3
jmp
loopne
adc
lcall
imul
pop
add
and
mov
inc
push
out
mov
inc
xchg
push
push
jmp
adc
pop
push
repz
sub
mov
fstl
inc
scas
add
or
mov
cmpsb
aas
out
ds
pop
pop
not
ja
mov
push
inc
pop
imul
jecxz
sbb
pushf
xchg
xor
daa
and
fld
jmp
out
bound
push
add
sub
xorl
je
add
and
sbb
mov
insb
outsb
xchg
or
mov
mov
into
mov
repz
push
dec
sub
jmp
mov
mov
add
or
and
lods
push
jecxz
ficomps
stos
xchg
outsb
mov
out
or
daa
loope
mov
scas
cmp
xor
movsl
xor
mov
out
add
xor
mov
daa
fnclex
ret
inc
popl
jo
mov
jge
xor
push
jae
mov
aam
mov
mov
data16
jge
dec
xor
neg
mov
mov
mov
fiaddl
inc
mov
outsl
adc
ds
or
inc
out
leave
jg
or
es
enter
jg
mov
scas
xchg
cmp
movsl
andl
pop
nop
decl
not
mov
pop
pop
mov
lock
cmpsl
xchg
lea
push
scas
aam
pop
stc
jno
cs
and
in
repz
shr
jno
mov
jae
ret
xchg
fwait
insl
ss
dec
stos
movsb
pop
test
cmp
inc
mov
lret
pop
push
sub
adc
ret
mov
adc
mov
push
push
add
imull
dec
arpl
and
adc
inc
out
stos
out
sbb
popa
test
ja
sbb
cmp
and
lcall
and
iret
popa
rorl
or
push
into
lods
mov
in
mov
aas
mov
fldl
inc
ljmp
rcrb
test
js
daa
mov
cmp
fnsave
mov
sbb
mov
push
loope
jns
dec
cld
xor
hlt
pop
test
pop
pushf
sub
movsl
mov
dec
or
mov
mov
mov
arpl
inc
inc
cmpsl
rcl
test
cld
pop
sub
fs
test
fucom
fisttps
movsl
sbb
xor
push
rol
mov
and
mov
push
sub
or
sbb
repz
xchg
leave
cli
dec
lock
jmp
icebp
xor
sbb
test
xchg
out
out
lea
cmp
xchg
into
fwait
iret
notb
add
and
and
sbb
add
mov
mov
jae
inc
xchg
mov
sbb
divl
xor
dec
cmp
pop
cmp
sub
push
push
inc
push
or
xchg
or
mov
shll
pop
pop
jb
lcall
addr16
inc
orl
popa
pop
xor
inc
lcall
cwtl
or
sub
or
inc
inc
popa
std
dec
mov
jecxz
cltd
test
mov
or
sbb
adc
cwtl
mov
sbb
je
bound
adc
jo
mov
mov
fisttpll
pop
mov
fidivl
mov
lahf
push
jmp
out
cmp
cmpsb
stos
push
mov
pop
mov
pop
lods
xor
xchg
or
gs
push
mov
cmc
bound
inc
mov
movb
jnp
into
mov
add
push
adc
scas
xor
xchg
push
imul
inc
sub
rorl
xor
sti
pushf
and
push
adc
push
pop
pop
cltd
rcr
xor
push
push
pop
mov
xchg
jecxz
adc
test
push
out
add
jl
mov
inc
mov
mov
repz
inc
add
sbb
mov
pop
leave
and
jns
push
insl
test
add
test
das
stos
test
insl
nop
mov
aas
rcr
pop
out
pop
movb
mov
jno
inc
lods
dec
dec
lret
popf
xchg
enter
xor
mov
clc
ds
int
xchg
iret
popa
mov
dec
push
add
aad
dec
push
imul
std
or
fwait
lds
mov
jecxz
xor
jecxz
test
jmp
mov
ret
dec
push
cmc
xchg
jmp
sub
lea
mov
cmp
cli
sub
mov
cmp
mov
idiv
push
sub
add
into
pop
sub
stos
and
subl
jno
push
nop
daa
subps
iret
into
adc
xchg
test
rorl
lret
pusha
push
mov
sub
inc
scas
inc
xor
repz
push
out
mov
outsl
mov
xchg
mov
icebp
sbb
pop
mov
mov
in
xor
filds
cltd
decb
sub
dec
aaa
fmul
push
pushf
ret
inc
add
out
inc
shll
pop
insl
cwtl
lret
test
cltd
xor
addb
pop
imul
sub
mov
add
sbb
subl
movsl
xchg
and
adc
pusha
dec
inc
mov
sti
push
jmp
sub
pushf
andl
add
push
cmp
and
lock
ja
es
lret
pop
or
xchg
es
je
dec
call
push
test
lcall
sub
lods
lret
sbb
push
pop
arpl
adc
inc
and
leave
dec
mov
rorl
sub
dec
fiaddl
fmul
fcmovbe
push
sahf
jns
mov
out
icebp
cmp
mov
push
pop
pop
insl
sbb
push
mov
and
xor
aad
stc
adc
mov
mov
mov
sub
or
and
push
mov
jae
arpl
mov
push
ret
jb
mov
movsb
iret
rclb
cmc
in
sub
hlt
movsl
mov
lcall
adc
xor
test
jl
leave
add
jae
cmp
movsb
imul
call
or
cmpsl
and
test
hlt
lret
mov
ljmp
dec
dec
jb
insb
cmp
add
adc
gs
push
in
cmpsl
int
push
mov
xchg
shlb
test
call
roll
pop
pop
mov
ucomiss
jg
and
clc
push
adcb
push
repnz
ret
andl
pop
repnz
fidivs
mov
out
xor
xchg
bound
popa
setns
cmp
xchg
mov
dec
xchg
notb
mov
xor
jg
in
popa
inc
call
push
push
jle
jmp
xchg
xchg
inc
mov
and
mov
pop
cs
repnz
mov
flds
or
out
jo
add
inc
mov
cmp
jb
dec
aam
and
xor
push
sbb
outsl
ljmp
mov
xchg
push
push
scas
and
mov
inc
fmulp
xchg
iret
rolb
ss
mov
cltd
mov
inc
fwait
pushf
sub
popf
outsl
outsb
mov
les
cmp
jnp
subl
popa
cmpl
in
jnp
pop
add
mov
adc
cli
imul
fs
shld
repnz
jp
mov
aas
push
ja
xchg
testb
test
clc
cmp
mov
mov
leave
out
dec
nop
shll
sub
mov
jge
jnp
aad
mov
icebp
cli
pusha
add
arpl
sub
mov
cmpsl
lret
inc
aaa
daa
ja
shl
add
ss
lret
fisubrs
mov
inc
rcr
aad
xor
or
push
bnd
sbb
sub
jno
cmp
imul
loope
push
xchg
ds
cmp
shrl
out
and
pop
mov
jb
jge
fstl
loopne
jge
or
loope
mov
lds
sbb
sbb
leave
and
mov
cmpsl
mov
andb
je
dec
out
cmp
lods
dec
mov
mov
ret
lods
imull
icebp
js
mov
shrb
pop
mov
ljmp
adc
cmp
xor
out
aam
add
movb
add
jo
pop
lret
fwait
push
ja
aaa
imul
mov
cmp
push
dec
xor
xorb
xchg
into
inc
cli
js
pop
xor
sub
push
leave
jbe
adc
movsb
loop
lcall
outsb
repz
mov
or
ds
mov
xchg
stc
push
cld
pop
clc
sbb
push
fs
mov
xor
es
or
push
xor
test
or
xor
xchg
lds
fincstp
jb
and
gs
mov
subl
push
push
xchg
or
idivl
out
enter
es
lahf
ss
mov
sbbb
aas
jmp
lcall
add
pushf
xor
loope
and
shrb
insl
jmp
mov
sarb
stc
lahf
test
jp
in
add
xchg
add
xlat
xchg
mov
pop
adc
and
jle
sbb
bnd
fisubl
jne
mov
jnp
cmc
or
mov
xlat
hlt
jbe
jg
add
push
mov
aaa
jb
xchg
out
out
jnp
adcb
data16
cmp
or
stos
lret
pop
mov
xlat
ret
lods
in
xor
or
outsb
push
fbstp
and
mov
jmp
dec
fdivl
adc
ret
gs
aam
dec
mov
test
cmp
popa
and
cltd
das
mov
add
inc
fcoml
mov
loop
out
sarb
decl
inc
mov
sbbb
arpl
inc
xorb
add
in
push
movl
cltd
pop
add
dec
fs
and
inc
xor
xchg
cli
adc
rcrl
jle
int
dec
divb
push
cwtl
xor
pop
je
call
push
punpckhdq
rcrb
psubusb
leave
fs
add
add
pop
pop
cwtl
hlt
sbb
mov
mov
sbb
or
xor
mov
push
sub
mov
adc
sbb
out
inc
ss
rol
xlat
or
scas
adc
sti
xadd
rcr
and
repnz
jbe
pop
mov
or
add
jbe
sti
dec
sbb
test
and
xchg
cltd
pop
sbb
mov
pop
lret
add
aas
jno
ret
mov
xor
loop
cmc
xor
add
sbb
mov
cmp
lea
test
lods
mov
pop
xor
cwtl
es
shll
repnz
sub
lcall
mov
or
lgs
loopne
push
aad
add
into
cmp
mov
push
inc
out
xchg
or
loop
push
test
nop
lods
pop
xchg
sarb
pop
cmpsb
mov
inc
insb
mov
rcrl
in
cs
adc
fstps
mov
outsb
out
inc
enter
insl
dec
cmp
je
ds
in
sub
mov
cmp
data16
std
mov
sbb
adc
mov
mov
loope
jnp
outsb
ja
xchg
add
lahf
jp
push
dec
imul
test
lock
xchg
movsl
fadd
daa
jge
jae
imul
mov
in
sti
fsubs
lahf
jo
jl
mov
and
add
out
mov
add
inc
notl
mov
push
fildl
clc
lods
mov
add
shrb
push
imul
or
aaa
movsl
nop
pop
cmpsb
sbb
cmp
insb
inc
mov
scas
or
adc
les
clc
lret
sub
adc
repz
scas
mov
pop
jbe
jno
adc
rorb
or
outsl
xchg
cmp
cmp
pop
adc
negb
in
jecxz
leave
push
adc
mov
dec
mov
negb
ja
mov
push
loop
sahf
ljmp
xlat
sbb
jnp
dec
fwait
cld
jmp
adc
or
fcmovu
outsl
int3
or
sub
cmp
lret
sahf
mov
ss
dec
jle
iret
dec
stos
push
jns
iret
fsub
push
push
dec
scas
push
nop
enter
imul
mov
ja
mov
aad
sarb
push
js
sahf
mov
lock
cmpsb
in
sbb
mov
inc
in
lea
cmp
mov
dec
lods
sahf
or
js
loope
insl
aam
iret
scas
inc
cmp
fadd
jg
sub
loope
adc
sub
fcmovu
into
lahf
jns
xlat
adcb
sub
xchg
sub
psllq
sbb
pop
arpl
das
les
mov
adc
fldenv
mov
insb
daa
repz
ret
push
adc
gs
sbb
mov
push
hlt
aaa
aas
xlat
loope
es
adc
pop
pop
inc
or
mov
shrb
cwtl
xchg
test
test
or
add
dec
aaa
jecxz
mov
lret
jle
jl
adc
xor
in
ljmp
test
and
cmp
add
sbb
cmpsl
inc
mov
pusha
push
add
push
gs
loopne
rcr
jp
xchg
ret
dec
jmp
dec
mov
ds
shr
lds
test
addr16
cmp
pop
adc
xor
mov
push
fstl
arpl
push
aam
shll
jle
sbb
fldenv
js
mov
ja
movsb
notl
pop
dec
xor
out
jno
xlat
inc
pop
push
arpl
adcb
mov
pop
inc
insb
mov
and
xchg
adc
mov
addb
js
rcrl
pop
inc
loopne
lods
lret
xchg
or
mov
pop
inc
dec
cmp
in
pop
or
out
inc
mov
sbb
ss
mov
std
ss
popa
aaa
shll
add
shrb
xchg
int
pop
mov
xchg
bound
or
out
jbe
mov
adc
and
lret
jge
sahf
fstpl
jbe
insl
in
cmp
fidivs
lods
icebp
mov
inc
aaa
push
fldl
movl
mov
sbb
mulb
push
pusha
dec
pop
gs
bound
and
ret
negl
sti
call
out
lret
aad
push
jmp
test
push
jo
lahf
sarb
cmpsb
cli
cmp
pop
mov
out
push
dec
into
mov
fmul
or
xor
cmp
push
push
add
data16
mov
aaa
or
xchg
xor
scas
or
dec
ret
imul
movsb
in
in
xchg
lahf
icebp
adc
mov
insb
jg
aad
sub
icebp
pop
shrl
pushf
das
aas
dec
jg
and
mov
inc
adc
adc
mov
jne
jmp
or
mov
jmp
xchg
mov
clc
xor
vpshufd
scas
dec
or
push
jns
addr16
negl
ret
fistpl
push
push
nop
nop
push
add
pusha
sub
leave
xchg
aaa
les
movsl
addl
int3
imul
xor
mov
iret
mov
test
dec
and
dec
xchg
cmp
cmp
jecxz
sub
sbb
xlat
or
scas
inc
cld
lods
pop
mov
push
nop
and
push
cmpsl
stos
push
pop
stos
sbb
cmovl
mov
int
test
insb
loopne
pop
adc
push
cmc
je
je
inc
dec
lea
repnz
das
iret
orb
inc
sarb
arpl
or
imul
xor
mov
xchg
loope
rcr
mov
sub
in
xor
mov
lret
mov
or
xchg
sub
cmpsl
and
add
push
add
push
mov
cmp
sub
test
push
fdivr
adc
pop
mov
je
icebp
xchg
arpl
int
loop
loop
jno
ss
aam
xor
sbb
sub
es
pop
sbb
mov
add
lea
into
xchg
mov
fs
sbbb
cld
fs
and
adcl
jle
push
xor
pop
int
or
in
lahf
or
push
xor
pop
cmp
jmp
mov
movsl
out
mov
fldt
add
adc
cmpsb
std
repz
loope
xchg
ss
or
add
das
fwait
dec
incl
shr
popf
inc
push
pop
adc
sub
sbb
int3
leave
adc
pop
mov
fidivrs
mov
pushf
xchg
in
shrl
cmpb
push
fwait
cmp
xchg
pushf
and
mov
nop
adcb
lahf
insl
sub
out
push
fnstenv
cs
xchg
push
call
imul
stos
sub
inc
xchg
add
aam
sbb
loopne
clc
add
xchg
lods
sahf
jecxz
rolb
cmc
mov
mov
mov
push
xchg
jmp
adc
and
jle
pop
loop
jmp
push
ss
jle
xor
shll
daa
lret
dec
push
push
jle
shl
mov
es
sbb
xchg
call
or
jge
fisttpl
call
push
xchg
sub
cli
add
pop
xchg
add
dec
add
cli
add
mov
add
cmp
xchg
mov
or
inc
out
repnz
sbb
lods
fldcw
sbb
outsl
adc
out
jbe
insl
xor
mov
inc
into
jo
enter
gs
leave
jno
imul
enter
dec
xchg
enter
jo
inc
xor
aaa
jo
fisubrl
cld
push
fistpl
dec
and
jp
sbb
stos
dec
dec
mov
enter
xchg
fs
jb
push
mov
aad
mov
shrl
sahf
bound
aam
jecxz
ror
ja
xchg
push
js
clc
xor
cmp
add
dec
cld
inc
out
cmp
xchg
dec
mov
jp
xchg
mov
add
pop
jecxz
mov
mov
sti
jne
xchg
sbb
pop
movsb
jbe
jae
bound
xor
or
mov
xchg
mov
movsb
xor
jmp
rolb
fimull
or
negb
sbb
mov
xor
in
xchg
sub
xchg
pusha
fisttps
jg
aam
push
sti
ficoms
dec
and
test
mov
mov
fadd
xor
dec
dec
fldcw
es
gs
xchg
jno
iret
popa
add
mulb
push
push
fiadds
mov
xbegin
jno
aam
pop
lea
xchg
lret
or
jge
mov
ja
dec
cltd
fidivrs
repnz
imul
fstl
push
push
ficoms
sbb
fidivrl
jae
jbe
pop
push
push
fwait
sarl
out
cmp
les
push
ja
inc
inc
test
push
cs
testl
pop
push
push
pop
int
xor
mov
pop
jbe
ret
xchg
cwtl
xchg
data16
jmp
fucom
dec
sub
sub
xor
jge
xchg
mov
add
mov
repnz
xchg
add
cmp
sbb
fisubs
aad
shlb
aad
jg
and
mov
push
jns
inc
in
dec
push
loop
and
movsl
cmp
or
jle
cmp
pop
jbe
int3
nop
fldl
jne
sbb
or
stos
inc
add
pop
movsb
cltd
lahf
sub
cltd
mov
xor
sbb
inc
xor
pop
repz
sbbl
lret
mov
movsl
mov
cld
mov
pop
inc
adc
add
outsb
ret
mov
mov
clc
cmc
fcomp
xor
test
dec
xchg
mov
sub
mov
fldt
mov
in
imul
and
xorl
jl
jno
mov
mov
add
out
stos
xchg
movsl
and
ret
push
cmpsb
or
xchg
cmp
push
cmpsb
movsl
push
jmp
scas
mov
mov
inc
xlat
or
js
cmp
rcll
inc
jmp
incl
pop
ja
outsb
imul
dec
leave
push
je
push
or
ret
repnz
outsb
and
sub
or
faddl
pop
sbb
dec
dec
mov
xchg
pop
sarl
and
lods
jmp
test
sub
add
hlt
enter
je
xchg
mov
out
mull
and
sbbl
mull
jl
stc
daa
mov
adc
loope
push
mov
xchg
sub
lea
xchg
jne
je
sub
sbb
scas
incl
push
xor
negl
add
cmp
push
fistpl
sub
in
adc
xor
mov
pop
mov
adc
mov
mov
enter
out
jnp
jge
fs
jbe
lahf
popf
dec
jp
dec
inc
push
das
imul
aas
gs
cli
mov
push
cmc
enter
repnz
sbb
imul
mov
data16
gs
sub
sub
push
pop
and
sahf
lds
pop
das
adc
rcrl
jg
outsl
inc
cmp
insl
orl
dec
cmp
sub
and
or
aam
cld
xchg
mov
outsl
sub
aam
adcb
add
mov
and
shlb
xchg
outsl
jne
fisttpll
ficoms
bound
call
mov
sahf
jecxz
add
inc
cmc
jo
jne
ret
ds
lods
cmc
stos
sbb
imul
lret
pop
sub
mov
repz
jns
push
imul
nop
mov
or
sbb
outsb
aaa
out
xchg
ficomps
push
arpl
xor
arpl
sub
inc
test
es
stc
jg
andl
push
mov
xchg
sbb
sarl
int
adc
outsb
fwait
repz
das
mov
inc
sahf
cwtl
lea
xor
adc
shll
in
pop
sbb
pushf
aaa
fisubl
in
adc
pop
cmp
xchg
mov
mov
movsl
adc
jbe
mov
or
and
mov
repnz
rcr
je
pop
pop
js
sbb
test
inc
rcl
push
lods
dec
cmpsl
popf
arpl
mov
pop
and
jmp
or
cli
out
add
sarl
out
imul
pop
hlt
lea
call
add
dec
dec
fldenv
push
fs
pop
fcmove
xor
imul
pop
xor
dec
push
mov
push
xor
pop
jae
sbb
cmpsl
bnd
adc
ficoms
ds
dec
rorb
in
xchg
in
pop
mov
cmp
shlb
mov
scas
add
push
out
jmp
xor
pop
push
pop
fldt
int3
fdivp
xcrypt-cfb
cmpsl
out
arpl
cmp
mov
mov
gs
cmp
xchg
dec
add
out
aaa
and
dec
lcall
push
mov
movsb
mov
adc
lea
adc
fisubrl
adc
outsb
sbb
lds
sbb
add
leave
sahf
imul
xchg
jmp
xor
sahf
jecxz
add
fdivl
je
sub
xlat
and
js
and
in
jno,pn
xor
test
notl
stc
ja
and
adc
push
mov
scas
jno
lods
movsl
orl
mov
out
cmp
jl
hlt
fists
push
push
je
push
cmp
loop
and
mov
dec
push
mov
adc
hlt
paddsb
sbb
stos
and
mov
int3
daa
jecxz
popf
notl
pop
nopl
adc
dec
int
mov
idivl
pop
ret
scas
xor
cmpsb
inc
andb
out
fcoml
sub
lds
push
xchg
jp
and
cmp
xor
dec
and
adc
daa
mov
or
dec
addb
into
dec
or
sbb
sbb
je
sub
cmp
ljmp
lret
daa
sahf
out
int
sub
xor
adc
sbb
arpl
scas
push
sbb
outsl
or
cmp
sbb
mov
inc
xor
shlb
andb
out
or
jae
inc
arpl
out
or
dec
and
test
cltd
test
out
and
mov
adc
dec
test
repz
imul
mov
mov
jmp
sub
mov
leave
mov
into
push
fistpl
in
orl
mov
pop
pop
das
sub
xor
adc
les
mov
jl
adcb
into
dec
pop
pushf
cmpsl
mov
shll
ss
push
xchg
iret
jno
popa
ds
movsb
and
mov
bnd
arpl
movsb
jmp
loop
pop
scas
xchg
cmp
fidivrl
or
mov
out
push
jecxz
inc
loope
scas
push
dec
pop
loopne
sahf
leave
ja
mov
push
arpl
push
aam
cmp
xor
jns
cmpsl
sub
mov
add
sbb
mov
cmc
mov
and
repz
pusha
push
jp
ret
cmp
pop
jne
dec
imul
aad
nop
xorl
push
pushf
push
decb
cmpsl
jo
cltd
aas
dec
cmp
les
push
jne
inc
loop
push
ljmp
pop
ret
outsb
fsts
jmp
ret
xor
pop
ljmp
arpl
arpl
mov
ret
call
cmp
int3
xor
cmp
daa
adc
and
xor
or
pop
cmpsb
and
push
push
jae
and
push
jo
js
xor
shll
adc
inc
sub
sub
sbb
bnd
sti
daa
push
pop
lret
lahf
aam
shll
repnz
fiadds
out
add
mov
stos
or
std
sbb
adc
pusha
std
add
js
int
stos
xor
mov
repz
in
ret
mov
cltd
mov
loopne
ljmp
out
loopne
leave
dec
add
adc
adc
inc
stc
ret
push
cld
scas
out
and
es
jbe
sub
sbb
mov
call
inc
mov
call
out
jns
pop
sub
cmpsl
adc
fcompl
pop
iret
cmp
xlat
lcall
pusha
cltd
movsl
mov
fs
mov
imul
dec
inc
jmp
adc
jne
movsb
add
call
mov
js
into
xor
xor
or
and
out
loop
out
imul
arpl
cmp
nop
inc
adcb
pop
sbb
sub
mov
dec
jo
les
in
fs
mov
sub
mov
xchg
jg
mov
xchg
out
sbb
inc
sub
lds
fmull
ljmp
insb
push
imul
xor
sbb
dec
cmp
push
inc
pop
pop
lret
pop
cmc
fwait
mov
shlb
in
js
out
inc
out
lret
daa
inc
xor
or
mov
fists
add
add
push
dec
dec
jle
enter
outsb
ss
dec
push
xchg
rol
test
adc
mov
js
xchg
push
push
pop
sub
or
pop
lcall
pushf
mov
mov
data16
cld
call
rcr
jge
xchg
jo
shrl
jb
mov
xchg
push
jns
pop
lcall
pusha
or
push
stc
dec
sub
stc
cld
mov
push
cli
out
sbbl
and
pop
cmpsl
roll
push
fadd
fistps
icebp
dec
stc
mov
mov
adc
push
inc
mov
and
mov
cmp
mov
int3
insl
xlat
sbb
xor
scas
pop
sbbb
inc
fidivrl
dec
gs
lods
in
dec
sahf
mov
cli
les
fildl
in
push
js
jge
push
xchg
jae
popa
push
ss
shlb
sbb
sbb
ret
mov
movsl
cmp
xor
xor
movsb
cmc
sub
jae
mov
or
mov
adc
sbb
sub
jmp
fwait
dec
inc
dec
xchg
mov
adc
mov
push
push
mov
cmp
sbb
scas
mov
test
mov
jmp
into
imul
imul
mov
inc
or
jle
xlat
adc
xor
daa
sarl
into
adc
inc
test
sbb
popf
test
pop
inc
sub
sbb
daa
mov
sbb
mov
in
cmp
sub
data16
pop
push
push
aam
stos
push
jmp
stos
aad
mov
sub
fcmovnbe
mov
push
mov
jnp
in
stos
pusha
int3
out
test
mov
or
les
mov
mov
jecxz
fmull
int
adc
mov
shl
test
lahf
or
loope
jge
adc
cmp
lods
jnp
shlb
rolb
int
inc
push
pop
or
mov
jnp
stc
jnp
adc
mov
jecxz
mov
lahf
leave
sti
sub
repz
adc
xchg
std
fnstsw
or
inc
mov
imul
sub
movsl
mov
popa
fldlg2
cmpsb
dec
dec
jg
pop
sub
mov
in
faddl
pop
and
ds
jmp
lods
shlw
popa
ret
adc
sub
out
sbb
lods
aas
outsl
pop
pop
lock
jb
xchg
xor
push
lret
shrl
pop
jnp
scas
cld
pushf
mov
cmp
fildl
mov
dec
or
daa
sbb
sub
cmp
out
outsl
mov
fs
sti
push
fsubs
scas
jnp
sub
test
stos
xchg
test
cmp
nop
push
ss
test
loopne
ret
jb
fsubrp
hlt
xchg
mov
outsb
push
nop
ret
adc
or
jnp
mov
jb
push
cmpb
jmp
jle
out
in
mov
lret
or
mov
jge
dec
sbb
negl
cmpsb
xchg
mov
jmp
arpl
lds
pushf
mov
xchg
xchg
imul
outsl
mov
imul
pop
outsb
xchg
js
xor
jnp
leave
sub
daa
jmp
push
mov
cmp
fists
test
pusha
adc
cmp
popf
insl
mov
sbb
cmp
sarb
sbb
loopne
push
cmp
mov
pop
push
jmp
fwait
xor
scas
mov
and
pop
or
mov
and
push
xor
and
iret
iret
fnstsw
and
repnz
sub
sti
movsl
fucomip
dec
or
sbb
and
sub
cmp
ret
cld
mov
test
push
mov
sbb
mov
call
and
mov
mov
sub
dec
shlb
xor
jb
push
xchg
jne
pop
mov
pusha
mov
out
test
in
jmp
or
fimull
jb
mov
jge
fistpl
push
mov
add
shlb
mov
pop
lods
fmuls
es
jmp
test
pop
cmpsl
mov
mov
sti
dec
push
adc
and
jle
and
pop
mov
pop
out
dec
ss
cmp
imulb
jne
dec
mov
ds
adc
adc
jmp
in
leave
jmp
dec
jge
or
jns
jp
pop
or
push
inc
out
cmp
popa
jo
cmpsl
pop
test
das
pushf
mov
sub
cmpsb
in
mov
lods
ja
pop
popa
faddp
jg
testl
mov
jecxz
daa
repz
dec
or
sti
or
xor
jne
sbb
pop
andb
fwait
mov
mov
jbe
fists
jbe
and
jb
sub
mov
insb
dec
imul
stos
shll
rorb
ss
clc
jle
mov
sarb
cmc
imul
outsl
xchg
and
adc
pop
inc
insb
add
xor
gs
or
aaa
xlat
cmovns
dec
mov
jecxz
mov
push
aad
pusha
fstpl
dec
adc
jbe
jns
aam
outsl
js
add
shlb
push
repnz
cmpb
dec
xlat
pop
or
mov
outsl
fsubr
sahf
jmp
adc
xchg
cmp
pop
jnp
sub
fsts
mov
push
xchg
adc
adc
xchg
xor
inc
test
clc
or
jns
or
push
popa
lds
outsl
and
or
cld
shl
xlat
addr16
cmc
and
pop
imul
cmp
lahf
int
setge
sbb
push
pop
and
cmpl
roll
mov
pop
or
xchg
sub
das
mov
je
xchg
jbe
in
add
fstpl
outsb
fsubrl
add
out
subb
add
sub
aam
pop
mov
cmp
stos
add
push
stos
clc
inc
dec
insl
dec
fldl
lods
xor
mov
inc
pop
dec
push
loope
mov
jne
orl
cli
sbb
stc
daa
data16
cmpsb
int3
arpl
test
mov
jle
adcb
push
mov
fwait
and
cmpsl
leave
std
mov
clc
cld
mov
inc
popf
xchg
adc
loopne
and
mov
or
scas
loop
ret
xchg
cmp
cmpsb
xor
mov
int3
jb
mov
or
pop
adc
arpl
or
loope
jo
sbb
inc
loopne
scas
cmp
pop
iret
filds
push
inc
test
in
pop
sti
js
jno
pop
cltd
mov
mov
stos
loop
and
xchg
cltd
aad
mov
faddl
stos
lahf
and
add
outsb
inc
pop
hlt
mov
daa
mov
insl
test
mov
repnz
mov
mov
pushl
dec
xchg
mov
mov
xchg
push
xor
mov
daa
out
subl
imul
or
popf
sbb
outsl
repz
out
out
loop
sbb
add
aad
mov
pop
test
jns
sti
cmc
aas
mov
sti
shll
sbb
arpl
fildl
sbb
cmp
cmp
insb
rol
inc
insb
ljmp
outsl
xchg
xchg
sub
out
in
test
lea
or
and
imul
cmp
and
and
cltd
xorb
and
sbb
dec
cmpsb
in
dec
icebp
sbb
loopne
movsb
pop
mov
and
dec
rep
pop
dec
jbe
push
in
add
repz
add
lods
sub
imul
mov
cmp
pop
adc
out
fs
adc
push
sub
cmp
and
cmpsb
pop
cmpb
ss
in
mov
lds
cld
aaa
rcll
sub
cli
popf
or
rorl
dec
repnz
scas
shll
mov
cs
inc
or
cmp
push
adc
xlat
cwtl
inc
adc
testl
jecxz
bound
add
cmp
sti
add
xchg
leave
cli
inc
scas
es
add
dec
or
out
and
cmp
dec
push
mov
pop
push
scas
jae
jl
sub
sub
fwait
repnz
imul
or
negb
idivl
out
rcr
movsl
xor
in
add
dec
xchg
push
mov
pusha
jmp
adc
lock
negl
pop
outsl
push
cs
lods
in
add
enter
xor
cltd
sbb
pop
insb
ljmp
push
fimull
jno
pusha
add
push
adc
push
xor
test
mov
testb
ret
xor
out
cmpsb
popa
jo
test
clc
xor
xchg
sbb
movsb
ficomps
dec
fistpl
dec
daa
push
ja
ja
jmp
aaa
xchg
xchg
pop
add
daa
jae
ljmp
movsl
andb
aad
inc
mov
mov
add
test
and
fcmovnb
fwait
das
inc
sbb
inc
leave
aad
sbb
scas
aaa
pop
mov
pop
jmp
sar
adcb
jl
stc
out
inc
cs
cltd
insl
mov
cli
adc
jne
lods
pusha
mov
out
test
fmuls
fsubrl
or
add
xchg
push
cs
in
js
outsl
adc
aad
mov
inc
int
mov
pop
adc
pusha
call
out
jo
dec
rcll
jb
orl
das
mov
fucom
mov
fcmovnu
xchg
push
iret
pop
pop
push
push
push
bound
fcmovb
lcall
pslld
sub
xchg
mov
xlat
sbb
icebp
add
mov
add
lahf
movsb
les
iret
and
fs
ja
addr16
popf
ficoms
xchg
and
mov
inc
jecxz
push
push
jle
push
push
inc
cld
pop
pop
add
sbb
leave
fldl
xchg
stos
mov
mov
dec
sbb
aaa
popf
push
lahf
imul
cmp
leave
sub
mov
push
sqrtps
jno
add
mov
inc
stos
jmp
cli
ss
xchg
jl
scas
lods
mov
inc
or
xor
xchg
popf
xor
stos
outsb
jle
daa
pop
mov
pop
leave
fdivp
ss
xor
pop
into
inc
mov
and
push
movhps
jns
fs
ret
in
cli
clc
push
jmp
jmp
jbe
ret
mov
pop
jno
ds
mov
pop
ljmp
imul
jo
lahf
xchg
call
jmp
xchg
imul
sarl
in
cmpsl
sbb
pop
or
adc
mov
mov
add
or
out
sbb
push
test
popf
pop
add
sbb
adc
sti
ret
or
test
jmp
push
out
pushf
in
xor
cwtl
mov
jae
jnp
ficomps
push
filds
mov
aas
xchg
testl
std
leave
xchg
inc
out
push
sbb
pop
xchg
loop
out
sub
jae
xor
jo
mov
ja
into
xor
fcom
cwtl
sahf
xchg
mov
in
xor
sub
fcmovnb
ljmp
xchg
test
outsb
insl
fisttpll
insl
rcrl
pop
adc
sub
cs
inc
aad
test
xlat
loop
and
mov
jno
out
outsl
les
je
fisttpll
mov
mov
mov
pop
cmp
outsb
sbb
addr16
mov
cmp
divb
dec
cmp
xor
sbb
jnp
popa
mov
dec
mov
cwtl
out
push
pop
mov
cwtl
ficoms
inc
inc
test
push
and
mov
enter
xchg
cs
xchg
cwtl
std
xchg
xor
dec
arpl
lea
in
iret
jae
adc
pop
ljmp
push
fs
lret
add
sarl
cmpsb
add
lahf
cli
jbe
or
lods
sbb
push
repnz
pop
repz
add
ja
daa
leave
xlat
or
cmc
xchg
cmp
add
in
jne
test
or
int3
bound
sub
insl
rcrb
mov
mov
fidivl
leave
pop
shll
cmpl
xorl
and
mov
xor
mov
scas
sub
sbbl
inc
into
stos
adc
add
cs
ja
mov
push
xor
jns
sahf
push
cmp
es
in
jb
push
inc
loopne
xor
xor
mov
add
das
outsl
sbb
jmp
in
sub
cltd
sub
movq
inc
ja
ja
stc
cmp
push
sbb
pop
fnstsw
rclb
add
push
push
cmc
xlat
push
gs
data16
into
je
sub
je
adc
adc
cmc
mov
lock
data16
aam
cmpsl
jl
push
in
jl,pn
xor
push
dec
adc
in
lds
mov
into
add
mov
sub
cmc
jnp
xor
push
push
mov
lcall
test
aam
fisubrl
rorl
das
sar
mov
mov
mov
loop
add
push
sub
popa
mov
push
test
xor
test
inc
push
push
mov
xchg
mov
out
dec
pop
gs
hlt
inc
and
mov
pop
loopne
in
jo
xorb
mov
and
shrb
inc
adc
xor
dec
iret
cmpsb
or
popa
outsb
sub
enter
mov
jns
std
pop
inc
push
jl
mov
cli
les
sub
sub
xlat
adc
add
ret
shlb
lcall
pop
popa
xchg
ds
jle
lods
pop
inc
ja
jo
adc
add
add
or
shll
mov
pop
push
adc
icebp
push
fucompp
adc
fwait
pop
jg
pop
or
push
orb
or
push
cmp
cmpb
mov
imul
cmp
pop
das
lcall
inc
cmp
call
push
push
out
arpl
cltd
loop
pop
into
pop
lds
xor
loopne
fwait
movsl
pushf
jg
pop
sbb
pop
sub
push
cmp
loopne
push
imul
in
jge
mov
iret
adc
pop
lods
cmc
imul
aam
popf
mov
jp
sbb
shll
sti
int
in
mov
push
sub
lods
xchg
lret
fmuls
fmuls
cmp
mov
xor
or
adc
xchg
pop
and
pop
rol
pop
lds
sbb
xor
orb
and
fdivl
or
and
or
pop
dec
or
aam
lea
push
ja
dec
cltd
dec
rorb
and
scas
out
std
pusha
ret
scas
jno
dec
orl
jo
xor
insl
or
and
pop
es
lahf
das
mov
sbb
xor
test
je
ficompl
lcall
loope
sub
inc
scas
pop
mov
jnp
cmpl
mov
lret
and
pop
setge
push
je
popf
dec
int3
test
jns
jmp
inc
mov
xor
test
lahf
pop
xor
pop
imul
xor
mov
adc
jo
jbe
push
pop
fidivl
outsl
sub
lahf
and
adc
xor
bound
push
sub
push
out
call
mov
in
inc
mov
ss
pop
pop
pop
mov
push
mov
sbb
push
js
repz
leave
jns
insb
and
jecxz
test
add
xchg
pop
jno
aad
fwait
adcl
idivb
loop
mov
adc
daa
add
in
lcall
mov
clc
pop
xchg
pop
std
outsb
dec
rorb
hlt
repz
adc
cmp
adc
sbb
sub
mov
loop
cmpsb
jnp
loopne
and
push
xor
pusha
lret
cmpsb
shlb
and
adc
sub
add
sbb
inc
jle
adc
push
add
cmp
jg
adc
mov
jge
aas
test
xor
mov
inc
dec
cmp
xchg
aam
sub
add
lcall
das
sub
mov
push
sub
mov
add
test
lea
and
pop
repz
cmp
inc
outsl
dec
aas
mov
sbb
add
movsb
jp
push
push
aam
jne
xchg
mov
les
sbb
sub
mov
adcb
xchg
sbb
pop
sub
std
cli
fidivrl
mov
xchg
outsl
or
mov
xchg
leave
imul
add
repz
int
test
push
pop
cs
mov
dec
das
outsb
scas
or
mov
push
xchg
popa
arpl
cmp
sbb
pop
in
push
inc
xchg
mov
sbb
ficoml
cli
sti
xor
out
push
aad
inc
jo
sub
lock
fcmovbe
in
cmc
cmpsl
and
mov
leave
push
pop
inc
cs
adc
fs
imul
pop
notb
fiadds
pop
in
pop
xchg
jle
mov
cmc
jns
adc
dec
or
mov
push
aas
dec
enter
sub
cltd
cmp
adc
stc
imul
stos
dec
push
push
es
push
cmp
inc
mov
ja,pn
repnz
fsubrl
lea
int
in
hlt
add
pusha
cmp
inc
xchg
stc
jp
orb
pop
adc
clc
mov
mov
sbb
pop
mov
btc
and
in
xor
pop
and
xchg
mov
fs
arpl
loope
cmp
or
addr16
inc
sbb
cmp
in
adc
sub
pushf
mov
inc
pop
stc
dec
xchg
xor
sbb
mov
xchg
mov
imul
sub
dec
jp
fwait
xor
aas
rclb
mov
mov
xor
mov
dec
mov
out
and
adc
dec
dec
mov
push
xchg
popa
mov
daa
or
pop
iret
add
scas
notl
mov
addb
test
push
and
icebp
add
outsl
or
pushf
int
lods
mov
out
outsb
nop
pop
jle
dec
loopne
cmp
sbbb
jb
daa
inc
incl
pop
je
loope
clc
push
mov
sub
lea
push
jne
dec
pop
decl
lock
addb
push
cwtl
mov
sub
jmp
and
test
inc
loope
lds
nop
lcall
pop
cmpsl
sub
lds
xchg
mov
cltd
pop
mov
mov
adc
mov
push
aam
insb
cltd
inc
shlb
and
mov
dec
cbtw
iret
rcrb
and
int
dec
jmp
out
push
insl
mov
mov
fsts
mov
xor
and
inc
aad
inc
xor
adc
adc
in
pop
inc
iret
mov
repz
mov
sbb
pop
cld
or
stos
pop
jnp
add
loopne
add
mov
es
lds
loopne
enter
daa
xor
xchg
icebp
or
cmp
mov
movsl
push
out
lock
test
add
cmp
jmp
ds
cmc
mov
icebp
jns
jbe
cli
fstps
push
cmpb
jne
sbb
cmp
sub
int3
arpl
mov
sahf
int
inc
adc
fildll
imul
xlat
mov
and
xchg
das
inc
sub
and
sbb
mov
std
clc
pop
jne
rclb
ds
addr16
das
imul
mov
cmp
movl
sbb
push
cmpsl
sub
jecxz
dec
adc
pushf
in
jl
xor
adc
test
push
movsl
push
pop
mov
insb
add
xor
test
cmpsl
cld
cmp
pop
xchg
jg
cmpsl
cmp
popa
pop
pop
movsb
sbb
in
add
inc
adc
nop
mov
adc
cwtl
repnz
sbb
sub
cmp
popf
out
stc
sbb
mov
stos
mov
shr
sub
rorl
adc
push
add
outsb
int3
mov
out
jp
popa
outsb
push
adc
aas
adc
rol
call
popa
div
ficoms
std
shlb
push
rcrb
int
jle
lods
xorl
in
pop
jb
fidivrl
or
hlt
lret
test
mov
jp
push
push
ret
or
test
inc
outsb
movsb
in
pop
loop
shrb
icebp
jne
xchg
xchg
push
ret
pop
faddl
mov
repz
cltd
shrl
push
push
lods
pop
mov
jmp
mov
int
and
cwtl
gs
push
lcall
cltd
icebp
outsl
sub
pop
xor
sbb
pusha
sub
jmp
aam
mov
lds
xor
stc
imul
add
xor
sbb
sbb
sbb
jl
mov
push
gs
jbe
fcomp
cmpsl
xchg
cwtl
xchg
in
aas
sub
mov
cmpsb
cmc
push
jge
push
pop
xchg
arpl
mov
movsb
lcall
inc
sbb
daa
dec
sub
or
nop
test
sub
and
flds
aam
outsb
jae
shlb
es
mov
shll
enter
cli
divb
mov
notb
jmp
stc
decb
push
leave
jno
jp
add
imul
enter
add
mov
adc
fwait
popf
into
loop
jbe
adc
js
loope
fmull
push
ljmp
rcrb
jl
or
sub
inc
mov
inc
stos
jecxz
ret
mov
push
and
pop
sahf
test
adc
sbb
mov
test
arpl
test
lret
xchg
cli
mov
lcall
in
jns
push
lock
rol
mov
packsswb
inc
aad
sub
mov
xchg
mov
inc
ret
jb
xor
dec
fisubs
rcrb
out
mov
fmuls
push
in
lock
pop
fcompl
jae
mov
mov
dec
add
rolb
adc
fbstp
push
imul
mov
xchg
mov
andb
pop
cmp
arpl
jno
jg
pop
cld
outsb
mov
or
es
iret
xchg
sub
jb
int
inc
xor
dec
pop
test
add
inc
out
rcr
lods
lea
push
push
jp
jne
insl
sbbb
pop
std
mov
stos
push
xor
movsb
pop
cmp
pop
cmp
jge
cltd
enter
lret
popf
adc
cmp
xor
push
mov
mov
jnp
push
mov
cwtl
push
inc
or
ja
and
ja
jecxz
mov
mov
in
cmpsb
les
push
lahf
out
xor
int
pop
shll
popa
cmpsb
fmull
mov
push
int3
pop
sarl
jae
cmp
mov
add
clc
xor
cmpsl
loopne
lahf
out
iret
add
ficoml
xchg
out
sbb
and
rcll
repz
mov
sub
bound
xor
les
push
cmp
inc
cs
out
popa
sarl
and
je
insb
dec
add
dec
cmp
ds
mov
mov
scas
call
add
pop
jne
mov
jle
cltd
mov
clc
jae
mov
ret
or
dec
cmpsb
or
js
xor
aaa
subl
les
adc
cli
pop
gs
dec
dec
insb
inc
mov
xor
mov
ret
in
iret
cmpsb
rcr
mov
jnp
aam
stos
xchg
xor
neg
fistpl
and
mov
cmp
mov
cmp
or
xchg
and
pop
test
pop
insb
or
add
cmp
int
and
pop
rcrl
cld
rol
arpl
fdivrp
pop
inc
loope
push
data16
test
adc
adc
and
scas
push
int3
jmp
mov
mov
push
mov
push
hlt
xlat
pushf
lcall
in
lretw
push
xchg
ret
sbb
jb
and
loope
out
or
jl
test
xor
cmp
xchg
sub
push
fdiv
xchg
sbb
sub
push
mov
mov
std
stos
fnstcw
loop
stos
shlb
loope
fistps
pop
cld
ffree
leave
dec
xchg
inc
in
dec
jmp
leave
lcall
lret
mov
xchg
subl
inc
push
outsl
xor
aas
test
daa
jge
addr16
sti
notb
cwtl
imul
and
xor
sbb
int
cltd
insl
shlb
loope
repnz
movsl
mov
adc
fldcw
jnp
in
adc
mov
lods
dec
das
shlb
mov
xor
cmp
call
jge
sub
imul
ljmp
jge
pop
stc
sbb
int3
rorb
stos
xor
ss
jg
or
insl
mov
mov
test
lock
add
lahf
xchg
pop
push
fs
mov
inc
pop
add
cwtl
adcb
incl
add
mov
sbb
lahf
in
and
inc
adc
int
adc
mov
cmp
imul
dec
scas
mov
ret
push
inc
or
adc
es
xchg
dec
push
cmp
ljmp
lcall
movsb
imul
lret
sarl
adc
inc
call
lahf
dec
adc
sbb
dec
xchg
jp
lret
push
jmp
adc
add
jge
cltd
repz
xchg
pop
dec
loopne
jns
fdivrp
cmc
xchg
and
out
clc
and
arpl
addb
es
icebp
lahf
int3
jbe
lcall
ds
ljmp
rcrl
inc
fisubl
sbb
fmul
int3
inc
push
add
out
mov
outsb
lretw
mov
add
aaa
adc
imul
iret
lahf
sub
imul
inc
mov
out
xor
out
add
sti
lahf
pop
jns
sbb
push
std
mov
jecxz
cwtl
dec
fisttpl
aad
call
cmp
ljmp
in
inc
pop
push
ret
mov
add
adc
jecxz
nop
cmpsl
fidivrs
outsb
xor
pop
inc
sbbl
icebp
pop
lea
sahf
or
pushf
sti
push
xor
inc
sbb
mov
or
jne
arpl
dec
jae
jmp
jo
push
and
lret
insb
cmpsb
mov
jmp
and
leave
lds
adc
ds
in
imull
mov
mov
pop
lahf
mov
xlat
mov
rcpps
inc
fwait
movsl
pusha
stos
push
jge
gs
data16
jbe
and
pusha
cmp
negl
int
out
mov
dec
jnp
xor
mov
jmp
repnz
scas
into
xchg
mov
repnz
insb
ss
or
roll
scas
fsubrs
xchg
cmp
sub
fcmovu
test
pop
push
lds
sbb
std
jns
sbb
out
push
sub
cli
mull
cmp
subl
push
mov
xor
pop
jae
push
lds
xor
aaa
xchg
xor
orb
mov
gs
enter
int3
lds
adc
inc
sbbb
sub
sbb
fxam
mov
adc
lods
movsl
mov
jle
push
jmp
xchg
into
inc
loopne
test
adc
mov
test
push
add
divb
inc
jae
or
lods
mov
xchg
inc
ret
jge
nop
mov
test
scas
push
adc
dec
ljmp
out
insl
inc
adcl
cmpsl
jbe
inc
mov
sahf
daa
push
mov
sub
mov
sarb
adc
out
mov
fwait
add
mov
mov
push
mov
or
mov
xchg
xchg
shlb
fadd
dec
mov
aam
cmp
lret
mov
mov
xchg
cmpsb
cmpsb
inc
sbbl
mov
aam
xchg
sub
mov
mov
xor
or
in
or
roll
lahf
fsubs
pop
lret
lret
and
adc
in
adc
and
cmp
out
xor
adc
ret
mov
or
popa
and
mov
outsb
lods
push
addr16
mov
mov
cmpsl
xor
je
and
jo
movsl
call
cltd
pop
sbb
stos
push
addb
pop
hlt
lret
movsl
mov
clc
fnstenv
cmp
mov
mov
jb
mov
inc
xlat
jo
cmpsl
imul
iret
rolb
or
cmp
jnp
mov
stc
push
adc
cmpsl
je
sub
pop
xlat
lock
icebp
xchg
orl
hlt
mov
test
or
repz
dec
enter
test
sub
push
inc
sub
les
and
jp
pusha
xlat
popa
cmp
xor
insb
jns
rclb
dec
and
dec
push
jmp
or
out
xchg
jmp
int
mov
out
ret
jae
inc
fcmovnbe
enter
xchg
andb
sbb
xchg
adc
sub
adc
addb
or
cmc
sarb
jne
add
add
push
fimuls
into
roll
fimuls
jae
xor
dec
dec
pop
int
or
fisttpll
stos
cmpsb
adc
inc
pop
pop
imul
cmpsl
orps
test
cli
sbb
add
subl
pop
outsl
push
jae
shrb
rorl
sti
xlat
in
mov
mov
jns
push
push
push
or
iret
pop
lds
adcb
pop
lahf
cmp
gs
mov
adc
fdiv
test
clc
cmc
mov
push
lods
dec
pop
leave
mov
pop
lea
ret
outsl
aas
in
or
mov
xchg
sub
mov
clc
and
cmp
scas
mov
jbe
in
scas
fwait
push
jmp
mov
jns
mov
stos
xor
fcmovne
in
shll
pop
es
push
pop
sbb
sbb
mov
jb
push
xchg
leavew
rcr
cmp
sti
mov
in
mov
into
dec
jns
jo
jns
dec
ljmp
out
lea
lcall
adc
cld
add
adc
cmpsl
dec
les
sbbl
fs
push
jnp
xchg
mov
stos
lds
push
and
adc
fs
sbb
jl
jmp
ss
ror
pop
sahf
xchg
mov
loop
insl
inc
jmp
push
inc
rcr
sbb
aam
test
fadds
inc
adc
out
sbb
cmpsb
pop
mov
fstps
rcll
int
jae
xchg
fidivrl
inc
mov
popw
es
or
hlt
roll
pop
shlb
ljmp
mul
lods
xchg
out
and
dec
sub
add
xor
pop
lods
std
std
or
add
mov
jb
repnz
mov
imul
roll
lret
cmc
push
inc
adc
loopne
rcrb
or
aas
ljmp
pusha
mov
fidivl
inc
loope,pt
insb
lret
jp
adc
shll
sbb
jl
fucom
cltd
push
addr16
cmp
dec
add
mov
xor
idivl
pop
in
scas
popa
insl
mov
jge
and
mov
and
test
lods
out
pop
mov
mov
xchg
cmc
lds
fucompp
add
lcall
pop
xchg
aad
scas
lret
lods
xor
mov
leave
xor
mov
dec
sbb
xchg
push
sub
inc
push
mov
and
and
dec
mov
shrl
cli
mov
callw
mov
add
sbb
mov
lock
xchg
sarb
cwtl
xchg
dec
addl
xchg
adc
ret
or
xchg
jle
cltd
nop
add
dec
xchg
mov
add
divl
mov
outsl
movsb
cmpsb
push
xchg
js
mov
mov
push
pop
imul
cwtl
out
mov
stos
and
sub
subl
mov
insb
mov
outsb
and
je
cmp
movsb
loopne
stos
push
adc
push
mov
hlt
in
popf
mov
inc
jmp
push
aaa
and
fnsave
and
call
mov
mov
outsl
or
mov
or
mov
stos
mov
fscale
or
ss
idivl
pop
mov
es
pop
movsb
jo
dec
add
ret
mov
cltd
sbbl
in
add
mov
mov
sbbb
imul
fiadds
sti
or
in
push
push
enter
incb
je
js
movsl
inc
repz
jecxz
adc
call
addr16
aas
xor
adc
xor
dec
add
cwtl
xor
loope
cmpsl
xchg
sub
push
jns
bound
and
jnp
orl
jnp
lret
pop
jns
fidivs
and
push
dec
mov
xchg
pop
xchg
adc
mov
xchg
popa
orb
push
lods
repz
sub
inc
arpl
cltd
cmpsb
stos
or
loope
cmp
cmp
clc
jp,pn
mov
jnp
test
lock
xchg
iret
mov
and
dec
pop
xchg
or
arpl
sbb
pop
add
out
in
dec
dec
dec
jge
add
jge
pop
pop
fistpl
mov
daa
add
inc
shl
push
xor
out
lahf
dec
xor
aas
imul
xchg
jg
into
and
fwait
sbb
push
jp
movsl
mov
rcrb
dec
or
hlt
xor
imul
mov
or
imul
popa
jno
jp
cmp
in
lods
insl
mov
mov
push
and
mov
xchg
test
xchg
and
js
dec
xchg
xchg
js
xor
xor
sub
loope
mov
push
inc
into
jge
jle
add
mov
in
add
movsb
in
rolb
mov
jp
push
imul
sbb
call
lods
push
lock
mov
xchg
popf
dec
add
cmp
out
nop
sub
pop
add
outsb
dec
fsubrs
aad
imul
push
cmp
stc
mov
pop
and
xor
push
mov
jl
leave
inc
mov
jno
cmp
fsubr
js
pop
ret
and
out
je
fwait
sbb
or
jg
xor
iret
pop
pop
mov
xchg
fidivs
into
push
pop
and
cmp
inc
jbe
jno
outsb
shll
lahf
jp
call
outsb
push
movsl
xchg
adc
in
lret
js
mov
outsl
jno
add
push
sbb
jb
inc
cld
xor
jp
jge
decb
mov
push
in
xchg
jmp
cltd
mov
pop
shll
mov
sbb
add
mov
and
in
jns
mov
cmp
movsb
mov
aam
js
hlt
push
sarl
xchg
js
fdivrs
ja
addb
aas
mov
jns
dec
cltd
ret
sub
repz
xchg
pop
cmp
sbb
push
fimuls
enter
out
mov
mov
fistpll
cli
fcomps
enter
shl
mov
mov
push
and
hlt
hlt
in
xchg
repnz
popa
scas
mov
mov
loopne
or
ljmp
mov
arpl
inc
cmc
push
xchg
jbe
or
pop
and
jecxz
mov
or
mov
jne
and
xlat
dec
push
inc
js
xlat
push
scas
rclb
xchg
add
fisubl
jbe
adc
mov
adc
into
xorl
fisttpl
repz
mov
xor
insl
int
jno
mov
jmp
rclb
lods
mov
cmp
inc
fcompl
ja
shrl
das
push
pop
cwtl
pop
jmp
shll
insl
clc
ss
sbb
or
in
arpl
jl
fstl
sahf
ss
scas
fcoml
xchg
pop
xchg
sub
ret
out
pushf
rclb
lret
imul
aas
add
shlb
cwtl
mov
into
in
inc
cli
fldl
outsl
mov
xchg
jge
push
or
sub
sbb
add
cmp
fisubrl
or
sbb
xor
sbb
ds
fdivrs
in
push
pop
cmc
xor
jecxz
outsl
scas
sbb
jp
jb
aad
adc
adc
icebp
xlat
mov
fsubrs
aaa
mov
mov
iret
adc
cwtl
xchg
or
or
push
les
clc
icebp
in
jns
cltd
out
cmp
add
xlat
and
dec
test
xor
or
xchg
and
cmpsl
cld
jns
ljmp
stos
push
stos
icebp
loopw
sub
cmp
ljmp
cmp
push
lcall
in
sbb
adc
scas
fbstp
jns
fnsave
std
jo
cli
dec
add
xor
mov
daa
dec
std
cltd
pusha
lret
hlt
imul
shlb
aaa
jecxz
mov
xor
pushf
icebp
or
add
inc
fnstsw
dec
idivb
insb
lock
xchg
pop
test
rclb
push
jmp
ficoms
mov
mov
dec
cmp
popl
stc
add
xchg
and
into
xchg
add
ss
out
cmpb
bound
dec
jmp
shr
loopne
or
iret
pop
aam
daa
sti
xor
mulb
sbb
loopne
xchg
and
cmc
xor
repz
push
mov
sahf
lcall
and
test
data16
dec
dec
mov
insl
xlat
mov
bound
into
outsl
dec
pop
jne
xchg
adc
push
aam
mov
fisttpl
pushf
pop
lods
and
jne
push
fstps
xor
ret
or
cmc
push
inc
cmp
mov
es
popf
cmpsb
in
ds
inc
push
repz
add
push
jge
mov
mov
inc
sti
imul
ror
je
pop
mov
or
mov
icebp
mov
dec
or
sub
adc
and
xor
inc
jno
inc
stos
jl
mov
lds
xchg
in
xchg
xchg
ljmp
xchg
mov
sbb
movsl
mov
and
adc
ja
insl
clc
xchg
and
mov
lods
mov
subb
stos
lcall
mov
push
push
push
sub
jbe
cmc
push
loop
bnd
xor
cmp
xchg
popf
jnp
fcom
imulb
test
push
rclb
sub
stos
add
inc
sti
push
xor
scas
push
outsl
cwtl
sti
inc
out
mov
pop
nop
roll
pop
ret
xor
fcomps
and
mov
movsb
sub
test
repnz
and
mov
lds
iret
dec
fwait
add
pushl
add
test
jns
les
stc
cmpsl
repz
add
adc
or
adc
loop
mov
flds
push
or
test
and
xor
iret
mov
pop
arpl
jno
cltd
dec
into
dec
je
jecxz
cmp
cltd
js
popa
mov
xlat
or
ds
es
add
adc
jmp
push
adc
insb
xor
inc
aaa
movsl
arpl
ret
mov
adcl
or
aas
in
jne
push
cwtl
inc
lock
mov
adc
inc
imul
push
insl
lods
xor
dec
lds
dec
pop
jne
lds
in
sub
sub
out
cmp
jmp
shlb
shrl
pushf
int3
stc
and
or
inc
sar
pop
leave
jl
ljmp
inc
mov
loope
xor
inc
stc
mov
dec
in
mov
mov
filds
mov
sub
test
mov
or
loope
and
or
sbb
cmp
jbe
pop
mov
xor
je
adc
sub
push
mov
sbb
add
add
inc
fs
test
lret
dec
xchg
xor
fs
stos
mov
cmpsb
and
adc
or
test
fadd
dec
sahf
sub
sbbl
pop
jmp
sub
pop
pop
pop
cmp
pop
mov
pop
call
inc
movsb
push
fiadds
and
vpavgb
pmulhuw
mov
or
lret
notb
or
xchg
pop
xlat
sub
dec
sub
stos
popl
inc
outsl
cmp
inc
add
ret
cwtd
pusha
mov
aas
or
inc
push
cmp
int3
xchg
lds
mov
jb
fdivrp
out
pusha
fs
mov
pop
and
push
inc
aam
mov
xchg
and
lea
dec
mov
fcmovnbe
pushf
mov
mov
in
bnd
mov
mov
jbe
push
pop
int3
shr
fisttpl
movsl
mov
xor
rorl
and
push
mov
aas
jl
dec
adc
pushf
push
add
mov
and
jmp
jge
mov
aam
mov
push
scas
in
mov
xor
rolb
inc
out
cmp
lcall
inc
dec
in
add
push
and
xchg
xchg
add
bound
xor
xor
pop
inc
mov
aad
jl
pop
push
std
pop
lods
jae
lds
jle
or
push
cmpsl
cli
cwtl
xor
jnp
aas
pop
idivb
aam
test
add
inc
xchg
imul
stc
pop
int
add
imul
aas
es
arpl
lods
push
lret
mov
scas
jp
jns
pop
sbb
mov
les
jle
out
pop
fs
jo
test
push
movsb
mov
pop
je
lock
movsb
fistl
fsts
xchg
adc
cmp
out
jp
loope
xchg
mov
cmc
mov
mov
or
pop
sarb
pop
xchg
stc
jl
pop
cltd
or
jle
inc
pushf
cmpsl
or
push
mov
mov
mov
push
jne
inc
out
repz
outsb
mov
cltd
mov
fisubrl
mov
xchg
aas
in
mov
sub
arpl
aaa
out
and
mov
mov
data16
lret
sbb
inc
xchg
das
fwait
cmp
or
movsb
xor
add
sub
ja
jae
xchg
xchg
dec
cmp
repz
inc
fwait
sti
insl
loop
clc
cmp
jb
hlt
add
cmp
inc
cmp
add
mov
lock
sub
mov
xor
test
in
xchg
frstor
mov
mov
out
xor
cmp
or
push
fmul
sbb
mov
cwtl
shl
push
cmp
inc
mov
lods
jmp
popf
mov
cmp
cmp
mov
add
fwait
inc
pop
arpl
and
iret
xchg
mov
sbb
inc
sti
dec
aad
insb
and
aaa
sahf
fildl
bound
ljmp
and
pop
in
stc
fincstp
add
sub
movsl
stos
movsl
sbb
push
ja
sar
push
pop
pop
add
jg
insl
mov
int
out
aaa
jg
in
cs
adc
jg
pushf
sti
out
mov
in
es
dec
imul
cmp
jnp
jecxz
or
or
push
call
outsl
jecxz
and
mov
pop
mov
dec
sbb
dec
pop
and
incb
mov
inc
inc
xor
pop
adc
je
lcall
negl
arpl
aaa
cmp
pusha
lret
lods
mov
sbb
clc
add
test
ror
inc
ficomps
push
stos
stos
jmp
pop
mov
call
notb
and
xor
cmp
roll
iret
das
pop
xor
enter
cli
dec
inc
sbb
pusha
repnz
inc
movsl
lods
fmul
dec
mov
ljmp
or
in
and
popf
or
loope
mov
rolb
int3
xchg
fdivrl
sbb
sahf
push
adc
rcrb
inc
shlb
sub
mov
sbb
insb
cmp
cltd
orl
mov
imul
dec
push
inc
cmp
xchg
pop
insb
jae
push
sbb
mov
jecxz
pop
lods
push
mov
shr
movsl
nop
pusha
pusha
or
xor
lret
xor
iret
push
sbb
outsb
ss
clc
and
loop
push
test
std
les
pop
mov
ss
pusha
lahf
or
jg
aas
push
fdivp
cmp
xorl
lds
push
jl
jl
mov
clc
int3
cmp
loop
sub
enter
fstpl
push
push
repz
cld
push
adc
ret
cmp
fs
mov
popa
ljmp
cltd
mov
shll
lods
fldt
aaa
add
inc
lret
nop
mov
jl
icebp
mov
push
adc
pop
jl
cmp
aas
cltd
push
jns
push
icebp
push
mov
loopne
mov
dec
xor
clc
cmp
movsb
or
cwtl
lods
into
out
dec
cmp
push
push
sbb
fists
lock
mov
imul
adc
sub
ret
sbb
adc
rclb
push
sub
das
or
ret
sub
sbbb
aad
cmp
lret
add
cli
sub
lahf
pop
sub
and
xor
inc
ucomiss
shlb
in
xchg
mov
adc
dec
xor
insl
xchg
mov
and
aam
rcrl
pop
fbld
xchg
xor
or
sub
xor
dec
clc
rorl
mov
mov
xlat
cmpsl
push
addl
outsb
mov
push
mov
out
or
and
pop
call
addr16
dec
js
ds
push
jo
gs
jmp
rorb
stc
aas
scas
mov
xor
mov
pop
dec
hlt
pop
dec
jle
pop
dec
test
pop
int3
xchg
xor
stos
and
jne
mov
leave
ret
out
loope
movsb
inc
cmp
cmp
movsl
js
in
loope
lds
jb
addr16
pop
adc
fidivs
lahf
daa
add
shll
and
mov
dec
sbb
sub
cmp
inc
adc
mov
negb
xor
movl
jmp
fs
push
jmp
sub
or
xorb
out
xor
jb
cwtl
cld
mov
dec
mov
enter
mov
adc
fiaddl
and
incb
ljmp
push
jo
fistpl
and
or
in
loope
cmp
or
pop
in
pop
je
add
lret
sbbl
pop
push
mov
aaa
cmp
fsubrl
mov
dec
sub
mov
xchg
sbb
and
leave
movsb
test
insl
push
int
adc
leave
lahf
and
mov
mov
mov
xchg
mov
repz
push
aam
push
imul
dec
stc
pop
cmp
mov
mov
push
sti
ds
notl
rolb
rol
xor
adc
inc
lahf
mov
add
mov
mov
fmull
and
xchg
testb
ljmp
sbb
and
xchg
popf
jne
movsb
fimuls
or
cmp
test
in
in
cmp
jg
into
inc
mov
sub
sarl
jne
inc
pop
imul
sbb
cmp
and
add
pop
shl
test
and
pop
addr16
pop
xchg
rcr
lcall
loopne
pop
inc
incb
jg
popa
decb
rclb
cmp
dec
test
mov
add
pop
cmp
test
mov
loope
inc
andl
lock
rorl
cmp
loop
sub
test
jb
cmp
push
idivb
mov
loopne
adc
int3
dec
jp
and
xor
clc
push
xor
mov
andl
int
xchg
ja
and
sahf
sbb
pop
mov
mov
lcall
mov
movswl
jecxz
js
les
fcoml
inc
shrb
adc
dec
test
shlb
jmp
dec
out
cld
cmpsb
mov
xchg
jns
cmp
adc
and
mov
or
jmp
pop
jp
cmp
inc
gs
pop
fldt
jg
fwait
shrl
dec
imul
xchg
xchg
xchg
adc
mov
jecxz
repz
sub
sti
mov
hlt
sub
jbe
jbe
xor
ficoms
movsl
xor
jb
inc
das
mov
imul
mov
jmp
sub
sarb
cs
ret
push
jge
mov
repz
pop
inc
inc
fucomip
subb
loop
hlt
xchg
or
xor
mov
daa
scas
insl
mov
pusha
lcall
addr16
sbb
push
jb
jb
mov
fwait
adc
addr16
push
adc
out
sub
fiaddl
jg
test
sbb
outsb
mov
lret
dec
nop
dec
sarb
test
insl
jbe
sarb
or
mov
fwait
test
jno
repnz
aam
into
dec
add
imul
mov
pop
xchg
int3
add
mov
mov
xchg
mov
sarl
stos
cmp
and
push
ret
cmp
mov
insb
jmp
push
mov
loope
mov
int
xchg
sbb
scas
jo
mov
lret
push
or
lds
xor
xchg
cmpl
jne
mov
lret
fs
push
cmp
push
dec
dec
add
jns
adc
sbb
in
lock
xor
push
push
shlb
mov
cmp
or
shlw
mov
xor
scas
ffree
mov
lds
cmc
mov
js
clc
push
rcll
push
mov
in
mov
movsl
fidivl
dec
test
jg
mov
aaa
sub
dec
shr
pop
sub
push
int
mov
ja
cmpsb
dec
dec
jg
jno
fstp
cli
imul
dec
jns
lahf
das
orl
aaa
mov
jmp
cmp
rcpps
mov
adc
jl
in
mov
cmp
jge
es
punpcklbw
jae
pop
jmp
push
fisubs
cmc
xor
mov
loopne
and
cld
xchg
adc
adcb
cld
pop
mov
sub
imul
pusha
daa
cwtl
mov
addl
dec
jl
out
pop
sub
push
jg
jle
jb
imul
and
xchg
xorl
repz
hlt
push
jns
cmp
shll
lret
nop
mov
std
xchg
popf
vmwrite
sub
into
sarb
bound
imul
jp
xor
int3
loop
int3
imul
pop
in
loop
ret
cmp
pop
adc
inc
addl
inc
fidivrl
dec
add
mov
push
out
and
xor
jge,pn
imul
sub
subl
inc
aas
cmpsb
add
add
enter
aas
fwait
cpuid
jle
mov
jle
test
ss
mov
dec
ret
inc
mov
mov
repz
cmp
push
mov
jae
push
jecxz
jo
daa
dec
mov
push
test
dec
adc
xchg
bound
xor
sbb
fisubrl
mov
add
pushf
cwtl
push
cmpsl
lcall
and
pusha
int
and
repz
sbb
stos
and
pop
cli
orl
scas
sbb
loopne
loope
jmp
inc
es
dec
push
pop
mov
push
loopne
out
sub
jg
cltd
lock
and
jg
aad
pop
jbe
test
add
js
das
fisttpl
fnstenv
inc
mov
mov
dec
push
xchg
imul
dec
mov
lea
imul
lods
out
xchg
fsubrl
sub
out
mul
ljmp
sarb
out
lods
adc
test
shrl
in
mov
xor
shlb
pop
int
jbe
push
inc
imul
fsub
in
cld
aad
pop
rclb
dec
push
icebp
rcll
hlt
adc
mov
andl
jbe
inc
and
push
aas
out
jnp
xchg
mov
and
cmc
shrb
sbb
testb
xorl
fidivl
mov
jnp
xchg
mov
xor
add
pusha
xchg
jns
dec
test
dec
inc
xchg
mov
pop
mov
or
xchg
lods
xchg
orb
leave
fdivl
lret
lods
pop
std
push
rcrl
pusha
jge
jae
fsubs
jne
sub
cmp
xchg
std
nop
repnz
sub
dec
jno
popf
arpl
out
ret
inc
outsl
repz
jge
jb
adc
xchg
mov
loopne
and
xor
adc
jbe
push
xchg
call
jns
xchg
xor
rcr
out
pop
lcall
cli
lock
dec
sbb
pop
push
sbb
push
fsubrs
aad
sbb
aad
inc
sub
rcrl
and
pop
pop
and
inc
cmp
fbstp
lret
push
cmp
aam
popa
mov
stc
push
imul
xchg
jl
arpl
or
flds
fs
lods
cltd
negb
pop
pop
in
pop
loop
loope
shrb
push
xchg
aaa
ret
xor
or
mov
push
mov
jp
xchg
mov
mov
bnd
cmpsb
mov
jg
int
test
mov
xchg
mov
pushf
fwait
cmp
test
fidivrl
or
add
int3
sub
sub
pusha
testb
pop
sub
inc
or
lods
fisubs
add
xchg
in
sbb
mov
and
notb
add
pop
ljmp
xchg
pop
iret
xlat
dec
aad
cmpsb
leave
arpl
adcl
cmpl
add
cmp
scas
ret
pop
addl
pop
or
sti
sbb
rolb
repz
push
jl
push
loop
jge
cli
fldenv
jne
mov
mov
pop
insb
add
cltd
inc
stos
and
pusha
or
and
orb
lods
gs
leave
scas
mov
and
outsb
jmp
add
outsb
filds
aas
movsl
mov
inc
xor
cmp
sub
out
scas
gs
dec
dec
mov
pop
insl
mov
sahf
sbb
aas
lcall
andb
sbb
orb
inc
adc
jg
add
xchg
xchg
mov
add
mov
cmpsl
jo
ret
std
stos
jae
loope
xchg
jb
and
stc
clc
pop
jle
addb
add
add
sub
in
lcall
hlt
add
outsl
fdivr
push
and
rol
mov
cltd
add
sbb
and
mov
data16
push
pop
sbb
daa
xchg
cmp
or
mov
aam
insl
add
push
das
mov
lods
mov
adc
dec
aam
xchg
sub
xchg
mov
imul
pop
jmp
mov
adc
movsb
cmpb
in
addl
inc
fldcw
nop
jg
sbbb
add
test
daa
mov
dec
ret
sbb
aas
out
and
scas
add
pop
in
popf
sub
dec
inc
cmp
mov
in
icebp
cmp
cs
scas
sbb
sbb
xor
sarb
xchg
xchg
adc
mov
pop
and
stos
add
cwtl
pop
inc
xor
mov
push
icebp
add
mov
hlt
add
and
sbb
jae
int
xchg
pop
xchg
imul
fdivrp
movsb
ss
cli
and
push
adc
and
out
iret
es
mov
hlt
and
in
xor
pusha
fiadds
lahf
mov
push
lock
flds
out
rcrb
inc
dec
daa
movsb
ds
jbe
add
test
pop
rorb
and
movsl
iret
jae
fcmovb
pop
mov
cs
pop
insl
mov
xor
xchg
adc
aad
addr16
pop
lods
xchg
les
sub
dec
clc
loope
inc
lods
rolb
jne
push
mov
dec
scas
gs
cmp
test
out
into
xchg
js
mov
popl
pop
jae
push
push
imul
pop
repnz
into
pextrw
orl
fs
mov
push
add
subl
sub
mov
sbb
outsb
cmp
dec
or
jo
xor
stos
cmp
daa
xlat
jnp
mov
xor
or
fistl
mov
jle,pn
push
xor
push
scas
fisubs
cmpsb
or
gs
and
and
fnsave
push
add
outsl
lret
rol
pop
stos
fnsave
push
pop
ret
test
cmp
xlat
ljmp
xor
test
pop
aas
and
and
mov
sahf
dec
ds
sahf
pop
mov
xor
dec
test
push
push
adc
add
in
je
scas
jae
xchg
jne
inc
push
adc
repz
push
cmc
mov
out
jge
loope
lea
sbb
fildl
imul
mov
gs
and
and
pop
je
jo
push
repz
sub
loope
pop
les
lods
fimull
dec
inc
stc
rorb
mov
dec
in
movsb
loope
movl
sub
mov
cwtl
sbb
rcll
pop
pusha
or
aam
fimuls
aad
pop
ficompl
jp
fistps
out
adc
mov
cs
in
adc
popl
xchg
lahf
inc
sbb
dec
icebp
in
mov
loop
in
mov
lods
xchg
jmp
mov
cmpsl
test
aas
int
push
xchg
lock
adc
push
sti
push
jae
mov
test
es
or
and
jle
mov
addr16
add
jmp
add
xchg
outsb
cmp
inc
jno
lds
add
cld
xchg
mov
sub
sbb
pop
fisubrl
lds
rcl
jg
add
pop
mov
test
sti
data16
adc
adc
lret
js
dec
subl
in
pop
mov
push
cmpsb
jmp
xlat
xlat
xchg
dec
je
mov
mov
mov
xor
adc
fwait
in
push
fstpt
sub
xlat
movsb
test
leave
inc
xchg
jmp
xor
out
mov
xor
push
sub
test
or
dec
xchg
mov
and
fisttpll
mov
jge
xchg
call
hlt
mov
and
sbb
lcall
jae
in
mov
in
lret
test
lods
xor
xor
dec
push
or
cmp
cmp
loope
xor
ret
es
test
push
sbbl
or
mov
imul
inc
sbb
inc
sarb
add
jne
add
adc
andb
in
jl
mov
adc
mov
andb
adc
jge
imul
sbbl
outsb
gs
stos
jnp
or
clc
daa
mov
js
imul
aam
xor
loop
lea
arpl
inc
jo
mov
jg
add
adc
inc
lret
sti
jle
mov
xor
scas
ljmp
mov
cltd
decb
into
daa
and
aas
mov
repz
or
sub
into
pop
jne
mov
push
mov
xchg
div
loop
mov
xor
inc
pop
cmp
mov
xor
insb
cmpsb
aad
push
inc
lods
outsl
cwtl
fmul
imulb
shrl
test
les
mov
add
dec
cmpb
in
scas
cmp
mov
mov
mov
sub
cmp
pop
and
push
cmp
movsl
adc
or
xchg
std
cmp
jb
mov
loop
adcb
or
movsl
in
ja
ljmp
outsb
mov
adc
shl
sub
out
pop
mov
sbb
int3
call
dec
pusha
fucomip
dec
out
nop
xor
int
mov
scas
mov
xchg
xchg
mov
fxch
in
aaa
sbb
andl
in
lret
pop
push
je
jmp
dec
adc
rcll
in
cmp
and
pop
aas
aam
int3
xchg
push
hlt
cwtl
and
and
js
mov
popf
sub
inc
xchg
in
in
int
jecxz
out
jl
sbb
adc
mov
push
cmp
test
pop
push
rcrl
das
adc
rcl
sub
push
xor
inc
pop
cli
fwait
sbb
leave
inc
or
pop
mov
adc
mov
lods
shr
xchg
inc
enter
or
mov
cmp
sahf
dec
or
mov
daa
ds
pop
cwtl
ds
cltd
fisttpll
jp
dec
cmpl
xlat
stos
lock
pop
stos
mull
push
jmp
push
jo
aaa
xchg
push
mov
sbb
lods
push
das
xchg
rcrl
ret
rorb
cmc
push
divl
fmull
sub
mov
xor
push
mov
sbbl
dec
jne
inc
adc
subl
addr16
call
lea
repz
leave
addb
or
imul
popw
out
addr16
sbb
push
jo
insl
mov
push
out
sub
dec
test
mov
push
and
xlat
ss
sbb
jmp
inc
inc
push
jmp
lods
jecxz
loopne
push
xchg
cs
sbb
stos
sbb
adc
jno
shlb
hlt
cmp
je
lods
sub
movsb
dec
cltd
lods
push
std
push
mov
mov
rorl
inc
hlt
push
cmpsl
inc
mov
dec
into
out
dec
sbb
lods
xlat
lods
sub
or
fdiv
cmp
cvtpi2ps
xchg
mov
gs
loop
test
mov
out
scas
rcrb
loop
add
dec
dec
insl
sub
or
push
inc
scas
xchg
push
lds
call
inc
ror
ja
sti
xor
insl
add
jmp
cwtd
jb
add
hlt
mov
enter
cmc
es
hlt
scas
pop
jge
es
dec
adc
cmp
sub
push
xor
or
cmp
push
test
andl
mulb
mov
les
push
sbb
mov
in
hlt
jmp
mov
icebp
in
push
pop
adc
sbb
mov
sub
adcb
cmp
inc
cmpsl
ljmp
mov
adcl
adc
jle
clc
cld
dec
mov
inc
mul
enter
mov
aaa
add
rep
dec
mov
sub
in
dec
scas
jmp
outsl
popa
je
notb
mov
cmp
arpl
jbe
int3
lock
sahf
ds
test
data16
push
add
dec
out
cmp
dec
mov
outsl
lds
sub
lods
jle
mov
jg
mov
lret
or
stos
cmp
aaa
repnz
call
or
repnz
leave
sbb
push
push
pushf
push
iret
jl
rcr
leave
clc
mov
es
popf
clc
repz
xor
xchg
add
lods
mov
push
adc
sti
lods
inc
out
jge
rorb
ljmp
pop
cmovge
in
inc
lea
dec
out
outsl
in
test
add
subb
jne
push
incl
inc
cmpsb
enter
mov
fdivrl
pop
or
lods
pop
movsl
inc
push
je
in
push
mov
cwtl
aam
sti
clc
ljmp
mov
adc
jne
inc
cli
push
cwtl
push
or
test
adcb
xor
or
sarb
cmpsb
fldcw
cltd
xchg
nop
rep
push
loop
pop
scas
sub
int
cmpsl
lret
mov
insl
xor
repz
pop
mov
mov
pop
ret
jne
aas
inc
imul
inc
lahf
mov
fwait
cmp
hlt
cmp
push
xchg
sub
xchg
push
lds
es
imul
inc
push
and
or
xchg
loop
inc
xor
cmpsl
cld
repz
out
push
into
icebp
or
fnstsw
mov
pop
jne
shlb
sub
mov
dec
dec
addl
mov
mov
dec
fldcw
shrb
popa
clc
xlat
test
test
out
hlt
divl
mov
lcall
shr
ss
dec
ds
testb
mov
xchg
aas
call
xchg
stos
mov
pop
jecxz
mov
stos
xlat
fs
jl
xchg
fs
push
inc
jp
sbb
cwtl
fwait
movsl
push
in
dec
lcall
into
cmp
movsl
sti
test
pop
aas
sbb
jmp
fs
push
lahf
inc
pop
ss
sti
xor
mov
scas
adc
lods
lods
sbb
and
lret
adc
xchg
inc
scas
cmp
out
movsb
faddp
aam
and
xchg
adc
mov
lock
push
out
int3
int3
dec
cmp
dec
enter
popf
arpl
outsl
fnstcw
test
push
xor
mov
jne
imul
cmp
mov
fstps
push
iret
fwait
sbb
test
xor
arpl
mov
pusha
push
aas
or
mov
jl
sub
push
js
repnz
push
rcrl
mov
lods
mov
stos
xor
mov
push
adc
jbe
out
or
or
pop
cltd
lea
inc
add
jp
cmpb
and
mov
sahf
data16
cmc
les
mov
int3
adc
add
roll
cmp
aaa
inc
popf
or
daa
inc
int3
sub
add
gs
sbb
pop
incl
xor
jo
add
xchg
data16
xchg
ss
ret
imul
or
cmp
mov
mov
jns
aaa
iret
sub
mov
je
je
clc
dec
lret
in
jbe
pop
dec
cmpsl
sub
repnz
in
mov
push
cli
clc
and
add
scas
enter
mov
addr16
dec
filds
mov
hlt
dec
in
scas
mov
mov
repnz
xorl
sbb
or
add
stos
inc
hlt
mov
out
add
subl
push
or
pop
fnsetpm(287
xor
sbb
add
and
xor
enter
fcomps
jl
push
test
mov
scas
mov
imul
fwait
xchg
loope
xchg
sub
mov
addr16
div
clc
lea
repz
sub
leave
xor
rorl
scas
push
fnstcw
mov
stos
ja
shl
xchg
and
cwtl
rorl
stc
inc
sbb
inc
adc
xchg
mov
xor
es
add
push
cltd
outsb
imul
aaa
stc
test
xchg
in
js,pn
mov
pop
out
pop
stos
jb
movsb
nop
mov
fisttps
aas
imul
push
xchg
in
adc
sbb
inc
jp
add
adc
test
in
pop
push
daa
jns
movsl
leave
mov
adc
shlb
cltd
mov
cmp
insl
lds
jns
aas
enter
ds
mov
notl
push
cmc
fildl
cmp
es
js
scas
inc
lds
mov
mov
pop
test
stc
jge
add
insl
inc
cltd
push
stos
add
lret
sbb
movzwl
pop
arpl
mov
dec
xchg
insb
popf
call
dec
fbstp
push
cwtl
or
lods
mov
mov
add
inc
fidivrs
js
lock
cmp
push
mov
sub
fnstenv
stos
ds
push
mov
pop
aaa
ret
bound
in
push
cmp
mov
es
push
mov
mov
xlat
or
sahf
aam
popf
cmp
add
jns
sbb
fisttps
xchg
mov
mov
and
dec
sub
daa
cwtl
out
lret
pop
daa
dec
xchg
test
and
wbinvd
inc
and
cmpsb
sbb
inc
in
popa
ss
sub
das
mov
call
out
or
bound
stc
push
ret
cwtl
int
push
jl
dec
fisubl
mov
mov
fdivr
in
negb
xchg
push
sub
xchg
jmp
cmpsb
sub
aaa
pushf
mov
or
jb
sbb
add
sub
mov
out
fwait
sbb
ret
or
out
jmp
xor
dec
lret
push
xchg
lret
dec
int3
jle
sti
lods
stos
into
mov
out
cltd
mov
cmp
das
sbb
pop
add
push
xchg
inc
outsl
pop
xor
xchg
arpl
jl
dec
dec
popf
nop
scas
cmp
pop
jns
dec
pop
gs
adc
mov
in
movsb
cwtl
xor
pop
fs
ds
pop
cmp
pop
and
cmp
mov
cltd
add
ds
mov
bound
inc
scas
scas
push
int
je
adc
xchg
fiaddl
lret
xchg
pop
xor
ret
shlb
xor
mov
mov
rorb
fdivrp
inc
dec
xchg
subl
fldenv
or
push
xor
cmp
mov
mov
mov
mov
fildl
sbb
andb
sbb
add
or
push
sub
jo
rorl
lock
sarb
jbe
shlb
cmp
mov
test
insl
push
and
dec
cli
popa
into
call
aaa
lods
pop
jbe
mov
push
pop
mov
mov
inc
cmpb
fsubs
xchg
cmp
in
fdivrl
nop
cmp
mov
jns
xor
arpl
pop
js
jecxz
fsubrs
mov
ds
call
add
inc
add
push
mov
push
nop
mov
jns
dec
push
mov
pop
adc
loope
push
push
cs
pop
adc
mov
pop
mov
mov
dec
sub
adc
aas
add
fsubr
daa
jbe
inc
push
lds
fstps
cmp
cmpsb
lcall
xor
or
les
xchg
jne
in
test
mov
xchg
cmp
dec
das
rcll
lea
add
testl
popf
out
pop
popa
xchg
pop
push
outsb
js
scas
mov
lahf
mov
imul
xchg
pop
and
leave
pop
adc
lock
dec
jnp
lds
mov
hlt
sub
xchg
xchg
pop
roll
mov
hlt
mov
jae
push
je
mov
or
in
xchg
out
push
xor
dec
mov
test
lcall
sub
es
inc
xor
cld
cmovs
fnsave
loopne
inc
xor
mov
mov
or
ds
jg
ljmp
fs
jl
nop
mov
xor
add
outsl
push
insl
xor
adcb
in
js
xor
fists
repz
inc
inc
push
cwtl
shl
mov
sub
andb
fcmovu
pop
push
popf
mov
dec
scas
jg
out
push
inc
cwtl
mov
sub
adc
push
gs
push
mov
dec
popf
lahf
lock
rolb
jg
jb
scas
mov
adc
sbb
jecxz
out
repnz
mov
or
ret
xor
mov
sbb
and
std
push
pop
pop
xchg
cmpsb
ja
fbstp
arpl
mov
jns
dec
insl
movsl
push
or
pop
out
pop
dec
fnstsw
sarl
ret
addr16
sub
out
push
ja
jmp
movsl
push
and
fsubrs
loop
mov
mov
pop
adcl
or
and
adc
fsub
xor
icebp
push
pop
scas
scas
fnsave
mov
jmp
cmp
jb
xlat
test
mov
stos
adc
cmpsl
test
inc
flds
mov
stos
repnz
cli
pusha
mov
cmp
ret
adc
lods
mov
stc
or
in
cmp
push
push
inc
lds
push
sbb
ss
mov
push
push
and
out
mov
add
mov
cmp
jne
pop
mov
inc
sti
mov
mov
mov
aaa
inc
sub
xor
sbb
loop
push
out
loopne
cmp
test
stos
mov
or
mov
cmp
cmpsb
loopne
jb
cmpsl
test
lods
or
jae
push
iret
dec
fistpll
cli
cmp
xchg
sbb
add
das
mov
popa
mov
dec
add
xchg
xor
jb
push
aas
mov
xchg
adc
adc
mov
xchg
xor
jle
dec
stos
mov
add
gs
insl
sbb
arpl
test
push
mov
mov
pop
insl
pop
aad
fcoml
and
cmp
xor
sbb
negb
in
andl
lahf
shl
incb
clc
push
in
xor
mov
mov
frstor
cld
or
sbbl
insl
xchg
cs
outsb
fstpl
fsubl
jmp
idivl
test
dec
das
shll
fisubrl
xchg
mov
jge
sbb
jecxz
pop
bound
sub
hlt
sub
inc
or
mov
loopne
jl
test
xlat
in
shl
push
stc
xor
in
inc
hlt
out
out
aam
test
pusha
ss
cmp
jmp
pop
pop
xchg
jb
sub
les
ss
out
out
lods
inc
pop
mov
clc
jecxz
ljmp
dec
mov
sbb
outsl
add
scas
cmp
mov
stos
adc
imul
call
xlat
adc
add
pop
push
xchg
js
rcrb
xchg
daa
jecxz
aad
leave
add
dec
mov
mov
pop
filds
or
push
aam
sahf
pop
jo
test
push
addb
mov
das
fimull
cltd
scas
sbb
pushf
lea
jb
lret
mov
negl
imul
sti
data16
and
mov
mov
xchg
xor
mov
push
sub
cltd
rcrl
inc
push
sub
and
in
adc
movsl
rcl
mov
stc
and
cmp
jo
xchg
test
mov
xchg
fisttpll
mov
loope
xchg
jle
popf
popa
xchg
aad
fs
pop
cwtl
ds
mov
sub
in
add
push
ljmp
test
iret
cwtl
pop
ds
stos
ret
jmp
push
push
jl
mov
ficompl
and
sarl
pop
mov
dec
lret
fcmovne
mov
and
mov
fisttpl
adc
or
pop
lods
jg
cmpb
jl
or
add
popa
scas
mov
mov
xchg
cmpsb
cwtl
out
mov
in
lret
lea
das
and
sbb
jo
jmp
or
mov
add
shrb
andl
loope
pop
pop
xlat
jno
loope
sub
icebp
aam
lea
imul
pushf
mov
popl
jle
xor
leave
cmpsb
movsl
das
sahf
dec
adc
test
out
arpl
or
decl
xor
cli
pop
xor
add
fsubs
push
pop
out
pop
lock
je
cmpsl
lret
push
in
sbb
dec
inc
and
sti
and
call
hlt
cmpsl
mov
jno
push
jbe
cmp
stos
stos
mov
xlat
push
jge
sahf
addr16
jbe
fidivrs
sub
mov
sahf
ljmp
xor
imul
mov
xchg
push
push
mov
sbb
inc
insl
mov
dec
add
adc
jp
jne
std
sub
ja
xlat
insl
test
cld
pop
out
sub
sub
fsubl
xchg
mov
mov
mov
xor
nop
jns
mov
aam
dec
and
sbb
or
jmp
jne
andl
leave
jg
add
imul
add
xor
data16
push
mov
push
cmp
fstl
fmulp
addr16
fdivs
scas
inc
adc
sub
inc
hlt
sbb
dec
pop
fwait
repnz
bound
loope
mov
lret
mov
popf
sbb
xor
lock
sbb
imul
cmpl
push
mov
xorb
mov
cmp
in
mov
shll
nop
rcrb
xchg
data16
insl
sub
inc
cli
gs
mov
shrb
push
flds
aam
hlt
xor
lret
ja
pop
adc
jl
dec
leave
pop
inc
or
cmp
xchg
inc
notl
sub
pusha
push
mov
pop
ret
outsl
test
je
movsl
and
orb
outsb
subl
sub
add
cli
hlt
and
sub
add
shl
sbb
arpl
push
cmpsl
inc
inc
ss
mov
mov
dec
leave
pushf
ret
add
pop
inc
sbb
daa
nop
mov
ja
xor
outsb
jp
mov
add
loope
xchg
mov
orl
xor
pop
mov
lods
jle
cmpb
sub
inc
mov
frstor
fidivrl
jne
bound
sbb
out
pop
mov
hlt
out
inc
cmpsb
es
cmpsl
cli
shl
mov
jmp
add
mov
pop
fchs
scas
or
cs
or
cmp
outsb
fldcw
mov
dec
xor
mov
mov
in
and
mov
mov
pop
cwtl
push
mov
imul
into
stos
adc
or
sbb
sbb
cs
sbb
or
je
xchg
mov
aam
in
aaa
gs
std
jae
add
imul
scas
sbbb
add
pop
fnsave
rorl
jge
insl
les
add
or
out
sbbl
xor
popa
and
adc
mov
int3
mov
sbb
push
pop
pusha
cwtl
shl
inc
add
cmp
subb
mov
push
int3
add
dec
sbb
repz
sbb
inc
and
inc
mov
cld
adc
xchg
jo
mov
sbb
sbb
in
dec
sahf
jecxz
cmp
int
popf
jns
sub
in
in
mov
jl
or
jne
insb
in
test
call
mov
icebp
add
int
enter
dec
sbbl
in
mov
and
ss
out
xchg
jnp
dec
pop
add
lret
pop
mov
outsb
jle
push
inc
or
stc
xor
ficompl
xchg
addr16
test
xlat
push
inc
push
ficoml
push
mov
mov
jecxz
imull
pop
aad
lds
pop
pop
pusha
cmp
mov
xor
push
and
jle
adc
and
inc
shll
adc
mov
push
jl
clc
cmc
cwtl
pop
lahf
in
fmuls
nop
jno
push
loope
pop
rcll
in
lods
aam
jb
pop
pop
xchg
cmp
int3
mov
mov
enter
rcrl
aam
cwtl
adc
fildl
mov
repnz
out
pop
fcoms
bound
cmc
adc
dec
neg
mov
mov
ja
xor
rep
fstpt
dec
ficomps
mov
pop
jl
inc
imul
out
out
mov
mov
dec
test
rcl
inc
arpl
bound
js
mov
pop
mov
into
jge
jecxz
pop
xchg
mov
lods
les
stc
pop
xchg
rclb
jo
and
adc
xchg
mov
or
leave
mov
xchg
push
push
cmpsl
pop
insb
dec
test
and
xchg
arpl
out
daa
out
cwtl
mov
push
ja
js
iret
mov
pop
iret
sarb
mov
arpl
clc
fisttps
shrl
sub
mov
and
std
scas
push
gs
fsubl
mov
pop
add
mov
cli
repnz
jecxz
imul
movsl
cltd
inc
lock
hlt
lods
js
fcom
ret
imul
push
add
dec
lret
into
push
jl
out
push
dec
pushf
jbe
jg
push
jb
mov
hlt
mov
or
sub
mov
push
mov
mov
xchg
inc
or
adc
mov
test
push
cmp
sahf
push
arpl
fs
insb
jb
pop
jmp
push
ret
fsub
stos
cmp
sahf
mov
add
nop
stos
test
add
dec
xchg
jle
sub
jnp
cld
mov
testl
ja
lea
or
in
ljmp
push
and
mov
lahf
or
sbb
aad
ja
pop
jp
addl
push
inc
sub
jno
in
add
lret
xchg
test
gs
or
fsts
ljmp
mov
and
mov
pop
add
adc
mov
pushl
lods
les
hlt
add
dec
dec
sti
mov
jae
out
jbe
fadds
js
loop
mov
mov
mov
adc
or
sub
pusha
push
fisttps
push
inc
testb
xlat
arpl
imul
push
mov
push
clc
lds
jb
les
cmp
sbbb
nop
and
add
lods
aad
subb
mov
loope
xlat
or
fnstenv
ljmp
bound
test
fildll
add
inc
fistps
mov
pop
lods
push
jmp
add
in
mov
push
stc
xor
iret
pop
out
or
adc
aaa
mov
sti
or
andb
xchg
and
ret
mov
cmp
sbb
or
mov
fmul
in
add
test
mov
or
mov
loop
ret
shlb
outsl
xchg
xchg
dec
faddl
inc
popa
icebp
loope
pop
mov
sub
push
mov
shl
shl
push
jo
adc
cs
fs
sub
fwait
stos
xor
mov
loope
push
out
mov
inc
mov
imul
ret
adcl
sbb
push
ret
cmp
xchg
xchg
and
stos
je
ret
lahf
ret
mov
inc
into
call
adc
icebp
pop
jmp
rorb
mov
cmp
push
cmp
scas
mov
xor
int3
xchg
mov
lods
inc
outsl
into
sbb
mov
sub
jmp
int3
push
in
iret
adcb
xchg
pop
mov
push
pop
mov
test
ret
dec
dec
adcb
xor
sbb
adc
and
pop
mov
mov
push
test
scas
cmpsb
sbb
in
rorb
mov
aam
jb
adc
les
pop
pop
mov
test
into
or
leave
push
cmp
fimull
mov
inc
ds
cltd
nop
mov
clc
xor
outsl
inc
xchg
fcmovb
outsl
jbe
dec
out
or
dec
lret
mov
dec
loopne
fs
stos
xchg
cltd
sub
sbb
jl
add
aaa
sub
into
faddl
inc
scas
push
mov
arpl
push
into
add
std
je
je
and
xchg
insb
mov
mov
lret
aam
adc
inc
outsl
inc
hlt
jmp
push
and
push
inc
iret
adc
daa
push
jne
adc
pop
call
dec
aad
fs
cld
and
push
lahf
les
scas
push
push
mov
lahf
repz
xchg
fcmovu
jmp
outsb
in
cmp
xor
push
inc
pop
add
add
sahf
inc
fwait
mov
xor
jle
sahf
xchg
push
xor
je
jge
mov
and
jno
cld
push
inc
xor
cwtl
je
inc
jne
mov
push
fmulp
pop
mov
pop
nop
or
dec
push
sub
adc
fisubs
rsm
pop
hlt
repz
lds
mov
xorb
mov
popf
inc
repz
mov
call
mov
lock
sbb
mov
fidivl
push
push
inc
out
jecxz
stc
lock
dec
imul
sbb
or
movsb
movsl
cs
and
dec
mov
jb
hlt
repnz
int
dec
adc
mov
dec
mov
jmp
xor
mov
or
cltd
xchg
loop
subl
out
cltd
mov
sub
xchg
sbb
sbb
push
aam
rorl
fstl
sarb
scas
sbb
test
mov
pop
dec
inc
shlb
xor
mov
or
xchg
loopne
mov
and
mulb
movsb
jge
push
mov
out
stos
scas
push
ficoml
xchg
stc
scas
sbb
fstpl
mov
jae
inc
or
es
lods
outsb
lahf
mov
fidivrs
loop
sub
adc
jecxz
pop
int
mov
inc
pop
out
pop
nop
pop
shr
daa
jge
in
sbb
scas
adc
sub
sub
inc
xor
into
nop
je
outsl
add
mov
pop
mov
sub
pop
cmpsb
movsl
push
mov
flds
das
mov
cmc
call
pop
jp
pop
dec
add
dec
aas
je
pop
ret
jae
jbe,pt
idivb
fiaddl
fildl
popa
loop
aas
hlt
fidivrl
mov
mov
xchg
aas
and
inc
ds
push
xor
mov
enter
test
loopne
sbb
xchg
inc
les
pop
fisubl
jecxz
lea
inc
outsb
jp
pop
dec
mov
xchg
xor
sub
imul
inc
fcomps
cmp
outsl
dec
cmp
pop
sub
repz
addb
mov
cmp
or
jl
pop
mov
dec
push
sbb
lea
cli
int
mov
fidivrl
jle
out
popf
mov
or
dec
and
repz
pop
jmp
pop
dec
lret
pop
clc
push
repnz
out
sbb
mov
add
ret
mov
dec
mov
and
xor
jle
lcall
aaa
popf
and
insl
pop
mov
fs
int3
test
pop
inc
inc
push
or
adc
mov
push
call
dec
mov
jmp
pushf
fsubr
popa
xor
outsb
sahf
mov
jae
pop
mov
cld
cmpsb
icebp
sbb
dec
pop
cmp
out
xchg
test
nop
xor
push
mov
mov
push
aam
lcall
jmp
push
lret
scas
mov
sub
add
jo
pop
inc
sbb
inc
loopne
aad
sub
push
mov
dec
outsb
inc
lahf
jg
roll
testl
jns
xor
cmp
nop
fidivl
mov
jmp
ja
mov
das
inc
stos
push
movsb
sub
xlat
xor
fcmovnb
dec
lret
push
mov
pop
cmpb
add
cwtl
and
dec
xchg
pop
pushf
xchg
cmp
aaa
mov
hlt
sar
or
repnz
cmp
xor
fildll
push
rclb
sarb
into
mov
jl
rolb
add
and
mov
aaa
jne
xchg
pop
adc
or
sbb
jge
push
add
jbe
arpl
jno
pusha
sub
mov
lahf
test
scas
icebp
sbb
iret
aam
call
push
sbb
rclb
push
fadds
adc
rclb
stc
cmpsl
push
shlb
arpl
aaa
sub
dec
ljmp
jle
mov
in
gs
int
addr16
insb
inc
ds
sub
push
push
sbb
in
out
sub
push
orb
popf
lcall
js
cmp
push
je
xor
cwtl
repz
stos
lds
lock
lock
sbb
orl
in
int
loope
pop
ss
scas
pushf
push
loop
loope
rcrl
aas
sub
ror
rcrb
sbb
pop
sbb
fidivl
cmp
adc
sahf
clc
ljmp
pop
jnp
movsb
sbb
rolb
push
add
mov
and
test
jnp
popa
inc
xchg
jg
repz
gs
mov
sbbb
adc
mov
ret
psadbw
enter
stos
or
enter
mov
mov
dec
das
loope
jecxz
in
test
xor
cmpsl
cmp
add
into
push
jb
adc
jo
and
ljmp
leave
cs
leave
scas
mov
and
test
inc
pop
icebp
pop
pop
push
out
lock
pop
add
jg
xchg
imul
xor
mov
pop
fstpt
mov
inc
and
xor
xchg
xchg
inc
xchg
jns
pusha
arpl
je
fsubrs
lret
test
xchg
insl
sbb
inc
addl
sub
sarl
das
out
loop
or
and
and
jecxz
mov
adc
mov
outsb
jmp
cmpsl
and
push
call
cmpsb
call
loope
inc
and
inc
lock
imul
push
sbb
inc
imul
lea
mov
in
dec
sub
cmp
enter
fld
in
out
xchg
cld
jg
into
xchg
loopne
popa
lock
cs
push
jnp
and
sub
cmpsl
sbb
stos
xchg
lahf
xorb
pop
inc
pop
lods
mov
dec
bnd
cmp
cmpsl
nop
jmp
ficompl
mov
dec
mov
sbb
mov
inc
daa
cmpsb
call
xchg
inc
scas
repnz
mov
and
inc
sbb
xor
or
push
sti
cmp
mov
pop
in
mov
icebp
out
ja
pusha
xchg
in
out
enter
testl
ret
pop
xlat
cmp
xchg
and
orb
lcall
sub
fildll
dec
jo
scas
andb
mov
ss
xor
shrl
pop
mov
dec
pop
insb
add
add
xchg
rolb
iret
shlb
cld
orl
pop
mov
jbe
pop
jns
mov
ret
adc
stos
mov
push
sub
pop
or
cs
ss
movsl
and
popf
test
cmp
mov
jno
adc
fdivl
lock
mov
jno
pop
inc
xchg
pop
out
or
aas
daa
add
dec
fwait
sbb
mov
faddl
sbbl
arpl
sub
out
lahf
dec
andb
fnstsw
fs
sub
mov
inc
es
push
jmp
inc
dec
in
mov
mov
xor
loopne
popf
jmp
lret
into
daa
lahf
imul
mov
stc
jo
mov
icebp
ret
pop
das
int3
arpl
or
out
neg
in
inc
lret
lods
out
xor
dec
and
inc
and
loop
aad
movsb
insb
push
rolb
orl
dec
imul
mov
add
inc
sahf
pusha
push
stos
rcr
sub
and
fldt
rcll
push
ss
lds
stos
and
fucomp
mov
lock
mov
add
inc
adc
aad
mov
sub
cmp
cmpsb
out
cmp
cli
sub
mov
rcll
jbe
sub
adc
fisttpll
hlt
add
fs
jne
add
push
mov
popa
int
out
xor
xchg
aad
adc
and
les
loopne
inc
pop
hlt
test
frstor
pop
outsl
clc
ret
cmp
cwtl
call
repnz
sbb
jno
sbb
nop
jge
pop
lea
leave
imul
sub
mov
mov
rcrl
dec
stos
lcall
push
push
mov
dec
lahf
dec
rclb
ud0
outsb
adc
sahf
cmp
sarl
fcmovnu
addr16
in
xor
stc
xor
insb
xchg
cli
subl
test
rep
test
dec
pop
into
popf
mov
aaa
lods
roll
popf
mov
outsb
inc
out
andl
and
ret
mov
cmp
clc
cmp
in
mov
out
adc
push
scas
jne
test
or
nop
nop
imulb
jg
in
inc
inc
rolb
call
lods
push
fmul
pusha
add
lea
stos
mov
and
aas
mov
repz
cli
jp
rolb
xchg
mov
sub
inc
mov
or
pop
cmp
and
mov
cli
xor
cmp
push
bound
push
jns
sub
mov
xor
push
pop
mov
movb
rcr
popl
push
jne
xor
roll
push
and
inc
pop
test
loope
int
movsb
in
mov
ficompl
add
jp
test
or
push
gs
add
out
jb
or
pop
clc
and
loope
push
adc
xchg
xchg
loop
inc
cmc
adc
mov
push
sub
jno
sahf
js
sbb
test
std
or
push
outsl
mov
mov
xor
jb
sbb
ds
out
mov
test
pushf
movsb
jae
hlt
pop
pop
pop
mov
adc
icebp
xchg
and
sarl
push
dec
pop
xchg
adcl
mov
sub
cmpsb
jne
aam
sbb
out
mov
arpl
cltd
jae
dec
out
fcoml
das
out
lea
or
inc
int3
scas
cltd
jns
sub
lea
fnstsw
mov
cmp
fisttpll
cmpsb
mov
inc
push
addl
push
call
out
mov
fwait
or
inc
fwait
mov
pop
fsubrs
fsub
imul
call
mov
adc
push
or
loop
jno
int
or
sbb
sbb
xchg
sub
push
insl
out
dec
mov
push
dec
jle
in
inc
aas
add
cwtl
lret
dec
mov
or
mov
cmc
loopne
and
push
ret
stos
jmp
and
or
pushf
out
pop
call
les
sbb
leave
aas
es
dec
pop
add
xor
test
xor
mov
jnp
pop
jecxz
cmp
ret
stos
or
mov
call
jbe
xchg
push
ds
fidivl
rcr
mov
xchg
add
rclb
je
popa
add
lret
test
hlt
js
cli
mov
sub
sbb
aam
or
dec
xlat
cmp
out
pop
int3
lock
push
call
or
stc
mov
cmpb
popa
rclb
ljmp
xor
std
sbb
shrb
enter
mov
adc
adc
stc
pusha
daa
jnp
enter
imul
xchg
jmp
mov
mov
xchg
mov
lods
cwtl
jno
outsb
jg
push
inc
fistpll
gs
xchg
aaa
sub
mov
scas
pusha
add
stos
aas
mov
xchg
jnp
imul
mov
inc
andl
xchg
icebp
push
clc
mov
mov
gs
adc
jne
jnp
pop
xor
aam
in
mov
mov
shll
mov
sbb
js
scas
outsl
iret
dec
cs
out
adc
ljmp
jae
into
add
mov
stos
insb
ja
repnz
mov
leave
cmpsb
fsubl
sbb
xchg
mov
inc
mov
pop
pop
lret
xor
lret
adc
lcall
popf
lock
jb
push
out
mov
or
ja
aam
xor
lods
mov
mov
or
jmp
push
or
nop
fcomps
mov
jne
decb
pop
xor
pop
iret
and
ds
dec
push
add
mov
loop
addr16
fcomps
fucom
loope
lods
sbb
jp
icebp
dec
insb
ret
inc
sar
add
pusha
arpl
jne
cmp
out
push
shrd
mov
sbb
jo
cs
add
mov
push
in
dec
mov
and
xor
push
push
pop
into
jmp
adc
push
repz
rcll
add
sbb
mov
lret
adc
jae
push
ret
cld
test
ja
clc
stos
push
pop
lds
loope
ljmp
cmp
dec
aas
adc
jb
insl
shll
jo
fld
insl
dec
out
adc
mov
adc
repnz
xor
enter
push
dec
iret
and
out
data16
mov
mov
ret
sbb
imull
pop
lahf
inc
sti
cltd
fwait
std
cmpl
push
lcall
cltd
mov
imul
dec
daa
pop
xor
dec
pop
jecxz
lea
sbb
inc
jge
dec
addb
loope
scas
and
gs
mov
fucom
nop
jo
loope
cmp
xchg
xor
xchg
push
fmull
jg
dec
mov
mov
test
out
adc
repz
jp
faddl
add
push
cmpsl
inc
jp
ljmp
xchg
dec
shrl
inc
out
mov
inc
stos
je
rorb
xchg
add
pop
jg
sbb
sti
mov
dec
cmp
rcll
jle
sarb
pmullw
xlat
xchg
mov
push
lahf
inc
dec
mov
pop
sar
out
xchg
shrl
jl
xchg
mov
push
inc
cmpsb
imul
xchg
in
cs
popf
arpl
iret
cmp
scas
adc
xor
mov
mov
pop
xor
jbe
nop
adc
dec
les
ret
into
inc
int3
cmp
adc
inc
test
mov
inc
cmp
stos
subl
add
jne
lea
lock
sahf
scas
push
lods
stc
enter
lret
inc
dec
add
mov
out
and
xchg
outsl
outsb
jl
fsts
les
and
pop
hlt
mov
or
gs
dec
sahf
dec
adc
cmc
pop
push
add
sbb
repz
cli
test
jno
xchg
sub
rcrb
ret
and
cltd
ret
jp
inc
pop
call
hlt
xchg
and
mov
sahf
pop
dec
scas
int
mov
jl
std
cmpsb
imul
js
xchg
mov
in
lret
mov
push
dec
cmp
data16
dec
pushf
movsl
cmpsl
pop
dec
clc
aaa
xor
push
idivl
mov
stos
inc
enter
dec
into
cmp
in
mov
out
dec
cwtl
shlb
add
cmpl
je
in
pusha
jmp
push
xchg
stos
addr16
sbb
pop
frstor
loop
repnz
push
mov
and
xor
and
mov
and
jg
mov
leave
rcrb
inc
xchg
mov
mov
push
test
fdivl
sbb
adc
add
mov
dec
jae
daa
jg,pt
add
sub
xor
fucompp
sub
aaa
lods
jl
pusha
gs
xor
ret
lea
jne
mov
jmp
fs
in
cmp
leave
dec
mov
xor
dec
mov
sahf
mov
jmp
aas
lods
dec
xchg
scas
add
imul
cmpl
push
sub
push
sti
xchg
jae
dec
push
fs
xchg
and
outsl
out
add
mov
das
lods
in
test
lods
pop
or
inc
mov
jne
les
xor
je
inc
scas
repz
jle
nop
push
js
push
aas
jnp
push
test
cli
fistpl
mov
xor
jb
or
mov
icebp
cmp
and
pop
jmp
sbb
fbstp
and
test
lret
ds
je
mov
ds
mov
adc
mov
out
dec
mov
pushf
push
or
inc
mov
push
inc
loope
cmp
sbb
xor
push
inc
xor
outsb
outsb
xchg
jg
pop
sahf
sbb
xchg
insl
mov
repnz
rcrl
lods
push
pop
inc
int3
mov
mov
and
inc
or
push
xor
xorb
cmp
cmp
xchg
sahf
and
adc
jns
adc
ror
fwait
xchg
call
and
lret
xchg
jne
mov
cmp
test
insl
sbb
inc
dec
or
dec
in
dec
mov
pop
mul
mov
test
jl
lods
data16
repz
push
fwait
pop
rclb
stc
push
in
mov
mov
popa
adc
inc
add
mov
fucomip
fcom
inc
imul
pop
out
mov
iret
cmpsl
imul
xor
call
aaa
and
jb
xlat
hlt
jbe
jmp
test
push
cmp
mov
ljmp
xor
cmpsb
mov
or
fadd
lahf
jb
push
sub
and
ja,pt
sub
arpl
adc
mov
and
popf
cwtl
fsubs
xchg
jle
pop
fdivrp
cmc
or
adc
dec
pop
cs
jl
mov
cwtl
cmp
jp
mov
cmp
push
clc
mov
pusha
nop
imul
adc
int
fcmovnb
out
rcll
lods
push
cmp
push
dec
sbb
cltd
xor
loopne
insl
cmp
jge
imul
or
sub
sti
pop
and
arpl
pop
cmp
int3
jmp
add
pop
or
push
push
mov
jae
imul
popf
je
pop
rorb
cs
adc
add
outsb
scas
sub
sbb
lods
in
addb
add
sbb
lods
outsl
ss
dec
rcll
pop
jmp
idivl
stos
loopne
mov
dec
lea
nop
std
outsl
mov
dec
push
push
fstps
jnp
xor
or
loop,pt
inc
call
mov
rolb
pop
in
cmp
loopne
rol
push
cli
inc
sub
jg
sahf
xlat
mov
leave
mov
sub
addl
lret
jle
stos
into
cmp
cld
fildll
cmpsb
enter
sbb
arpl
adc
insl
xor
int3
adc
cwtl
sbb
jnp
add
or
and
push
cld
push
push
sub
sub
sub
add
orb
sbb
pushf
aam
addb
dec
mov
mov
imul
push
popf
jbe
sub
jae
in
xchg
js
ljmp
lcall
repnz
add
aam
mov
gs
xor
add
jbe
mov
or
inc
in
mov
jmp
pop
mov
pop
aad
in
and
sub
add
sbb
jl
rorl
add
fdivrs
jbe
addr16
lock
dec
sub
dec
cli
ss
mov
mov
or
daa
repnz
fwait
popa
fcoml
mov
push
sub
mov
loop
dec
cmp
or
insb
cwtl
stos
icebp
out
pusha
lret
mov
mov
cmpsl
iret
sbb
jecxz
sti
lret
cmc
push
inc
icebp
xchg
inc
add
cmp
aas
decb
sbb
mov
mov
mov
outsl
push
sbb
jmp
adc
mov
pusha
and
or
inc
in
mov
dec
lds
ljmp
mov
xchg
pushf
dec
xlat
jne
or
nop
cmp
and
push
shrb
cmp
pop
in
inc
pop
stos
cltd
jecxz
clc
cltd
add
pop
cmpsl
ljmp
xlat
mov
lods
popa
adc
shlb
pop
scas
gs
push
imul
mov
add
les
inc
add
mov
repz
and
je
cmp
adc
cmc
push
pop
les
pushf
adc
shl
push
mov
rcl
inc
jl
xchg
movsb
jbe
pop
and
mov
inc
xchg
fisttpl
inc
push
arpl
lds
ds
lea
cmpsl
into
cwtl
imul
notb
adc
out
mov
xor
shlb
pushf
add
push
jecxz
jmp
cmp
sar
sub
lds
jb
mov
mov
scas
cltd
call
imul
nop
in
or
clc
jo
sub
inc
enter
inc
cmp
adc
mov
cmovns
jae
xchg
and
lods
or
or
jp
pop
pop
push
adc
gs
ljmp
or
and
int3
mov
mov
push
rclb
adc
dec
sbb
xlat
sub
fld
and
mov
jbe
or
or
cmp
inc
sbb
mov
mov
and
sub
stos
cli
sbb
inc
orb
lds
xchg
popa
jecxz
insl
out
loopne
movsl
loope
inc
and
mov
movsb
movsl
bswap
jge
mov
or
xlat
pop
sbb
or
and
and
int
push
loop
outsb
and
xchg
popf
cmp
lret
cmp
adc
or
add
xor
cmpsb
je
out
add
cld
dec
lods
cld
dec
or
push
in
fstl
loope
dec
mov
jge
ja
outsl
push
pop
pop
fwait
rcrb
aaa
das
xchg
repnz
jmp
sbb
dec
outsl
popa
out
push
icebp
push
mov
ret
dec
mov
movsb
push
xchg
dec
cmp
cltd
push
inc
and
lret
pop
pop
jbe
imul
cmp
repnz
push
cmpsb
jmp
imul
sbb
in
int3
push
loopne
cmp
pusha
push
push
dec
mov
sbb
xchg
pop
add
mov
scas
adc
dec
in
jecxz
jmp
mov
push
stc
aam
cli
dec
xchg
mov
push
sbb
sub
lret
adcb
dec
sbb
mov
hlt
pop
mov
aam
ljmp
push
je
jb
jbe
imulb
jbe
ret
inc
jge
frstor
xchg
xlat
gs
inc
stc
and
push
jg
fs
hlt
cmp
shlb
or
ret
adc
cld
xor
into
inc
mov
push
data16
mov
scas
sbb
cwtl
or
mov
mov
nop
jno
mov
sbb
outsb
or
insl
pop
pushf
mov
test
in
rorb
mov
popa
icebp
add
sahf
shrb
out
ss
into
push
cmpsl
int3
mov
fbld
dec
aam
inc
push
xor
js
push
aaa
hlt
sbb
in
aaa
ds
stos
xchg
enter
jb
or
pushf
sub
inc
mov
inc
call
aaa
xor
fistps
push
aas
xchg
adc
outsl
sub
adc
mov
pop
xchg
ret
ja
add
mov
divb
mov
xor
cmpsl
sti
hlt
add
je
push
int
mov
inc
sbb
jae
xor
pop
repz
ljmp
pop
daa
enter
inc
adc
ret
popf
mov
nop
shrb
mov
xchg
ljmp
es
sahf
sub
mov
push
ret
out
ljmp
movsb
add
aad
arpl
add
xor
mov
mov
and
or
sub
pop
frstor
hlt
loop
dec
jge
jne
icebp
xchg
movsb
ja
int3
push
sub
aas
add
stos
mov
stos
stos
jecxz
xchg
and
xchg
fsts
ja
rclb
scas
sbb
push
fs
cmp
jno
or
dec
jo
imul
sub
mov
sub
xchg
sub
pop
fstps
fnsave
in
and
inc
mov
xchg
rolb
fs
pop
inc
adc
mov
fwait
sbb
jne
or
ficoms
outsl
outsb
xchg
mov
mov
lods
and
jbe
fimuls
xchg
into
call
popa
sbb
xchg
sbb
push
nop
xor
fcomip
add
jbe
out
jae
lret
sbb
xor
push
out
mov
cmp
ss
mov
push
inc
xchg
ret
test
add
fiadds
adc
pop
add
xchg
cwtl
push
add
adc
add
cmpl
push
outsb
pusha
outsb
fcomps
add
xor
add
jmp
imul
sti
pop
or
push
je
nop
and
jl
lds
pop
stc
pop
push
jmp
ret
aaa
daa
imul
dec
test
lods
sub
cli
out
fadds
sub
jge
fsts
lea
jae
cmp
pushf
ss
and
roll
and
loop
or
push
jno
testb
hlt
sub
push
loop
sub
leave
push
aaa
ret
adc
dec
cmpsb
dec
mov
pop
sub
das
xor
imul
push
and
pop
jecxz
test
and
cmp
mov
push
cmpsl
xchg
cltd
stos
test
dec
dec
inc
divl
mov
xor
or
and
stos
and
into
sbb
ja
imul
dec
and
sub
es
subl
fcomip
mov
jae
in
fwait
adcl
aas
and
adc
fimuls
dec
xchg
mov
cmovl
add
fidivrl
mov
sub
xor
sub
sbb
mov
pusha
jg
mov
add
jbe,pn
and
icebp
fstpt
push
jle
mov
mov
sbb
in
ficoml
add
ret
int
jle
push
xchg
or
leave
pushf
xchg
pop
test
mov
mov
xorl
and
dec
sub
lods
lea
popa
jnp
jnp
fsts
add
ret
shll
or
fs
movaps
mov
in
push
std
in
stos
jecxz
push
or
and
or
push
push
push
xchg
icebp
inc
test
pop
fsub
mov
outsl
mov
js
mov
insl
mov
pop
xor
bound
xor
out
fnstenv
cwtl
jns
xchg
ret
imul
sbb
ss
or
test
sbbl
loop
xor
pop
loopne
lahf
loope
adc
pop
outsl
and
jmp
mov
inc
mov
scas
pop
push
je
test
xchg
orl
cmp
movsl
fstps
test
into
shll
inc
mov
jnp
push
dec
add
or
mov
or
xor
mov
jecxz
xlat
movsl
inc
dec
fwait
add
loope
sti
aam
cmc
mov
rolb
addl
fs
cmpsl
in
adc
inc
cmp
push
outsb
dec
jbe
add
mov
leave
dec
in
push
test
jns
out
je
jp
ror
inc
jecxz
in
addr16
push
cmp
inc
add
dec
or
push
into
ror
fwait
jge
cltd
dec
mov
mov
leave
jb
xor
mov
mov
insl
or
sub
or
sub
xchg
cmp
pop
lar
insl
int3
add
outsl
fstpl
imulb
lds
cmpsl
fnstenv
sbb
mov
sbb
mov
stos
ja
shrl
or
scas
mov
loope
jne
sub
and
adc
lock
lds
lock
pop
add
adc
push
xor
sub
pop
jo
mov
nop
rdtsc
pop
movl
jp
stos
push
pop
pop
test
sti
sbb
mov
shrb
or
push
lock
or
icebp
sti
mov
sbb
loope
mov
push
nop
stos
mov
pop
xchg
aas
add
cmp
mov
xor
pop
out
loope
test
or
inc
mov
in
lret
rcrl
inc
inc
jge
shll
lea
xchg
xor
add
pushf
xchg
orb
lea
leave
test
sti
out
mov
mov
int3
fsubs
jno
dec
outsb
jnp
mov
andl
sub
and
jmpw
pusha
dec
lahf
add
xchg
sub
xchg
nop
jno
lret
or
mov
sbb
and
dec
int3
dec
push
out
cmp
mov
cmpsb
dec
mov
ret
add
je
add
push
inc
sub
aad
dec
add
dec
dec
mov
and
pop
push
jmp
pop
xlat
adc
movsb
je
push
add
outsb
rclb
xor
out
mov
inc
mov
push
fucomip
mov
mov
in
lds
pop
push
fprem
sbb
icebp
jb
imul
mov
sub
add
push
xchg
push
cmp
rorl
fadd
dec
cmp
aas
inc
frstor
push
insb
and
movsl
dec
fidivrl
pop
daa
inc
mov
loope
sbb
push
test
push
push
sbb
inc
adc
mul
dec
inc
in
les
lea
outsb
popa
add
jo
sub
stos
dec
mov
arpl
push
adc
sti
idivl
les
fcmovb
inc
pop
jmp
dec
mov
mov
pop
sahf
lock
in
and
lods
ds
cld
rcrl
add
fwait
pop
adc
pop
call
jb
mov
mov
fwait
loop
push
loopne
jae
lock
adc
aam
aaa
ds
or
inc
inc
cmp
imul
fwait
cmp
movsl
cld
cmc
lds
mov
adc
sbb
mov
jne
mov
and
sbb
mov
jge
sbb
mov
lods
xchg
fs
mov
and
insl
sub
test
xor
mov
daa
sbb
in
push
sbb
iret
pop
pusha
subl
popa
jge
clc
and
das
and
lcall
sub
adc
out
cmp
outsb
std
ljmp
sti
ret
or
xlat
subb
push
fs
dec
mov
jno
shl
js
jne
push
dec
fwait
jno
popl
repnz
jo
jecxz
shll
insl
push
rcrb
mov
xlat
cmpsl
mov
fnstsw
mov
test
cmpsl
testb
rclb
jnp,pn
cmp
lea
and
fstps
pop
mov
cltd
aaa
ja
xchg
add
jns
pop
mov
sub
mov
dec
sub
repz
sahf
add
lea
test
sub
repz
pop
shr
xor
dec
leave
mov
mov
and
out
les
xchg
xor
sub
orl
push
fistl
sbb
iret
sub
scas
jbe
decb
ret
sbb
loop
pop
mov
mov
add
cmp
out
mov
jno
push
mov
xorb
add
in
pop
sbb
mov
out
pusha
cmpsl
ljmp
jecxz
jae
mov
dec
or
jmp
in
cmp
pusha
push
movsb
xchg
cli
xchg
loop
add
sbb
sarl
or
leave
loopne
sbb
rcll
pop
btsl
scas
sbb
jbe
push
ljmp
xchg
dec
pushf
dec
mov
jbe
cmp
and
bound
jae
sub
ljmp
sub
pop
lahf
dec
inc
xchg
sbb
hlt
std
in
divb
out
scas
mov
push
jb
xor
dec
hlt
out
aaa
jmp
fs
add
out
adc
push
jo
movsb
stos
fs
pusha
popa
in
mov
add
xor
ret
cwtl
das
jp
pushf
sub
sub
les
int3
mov
ret
mov
imul
xchg
into
mov
aad
lcall
mov
arpl
orb
mov
js
xchg
jmp
in
mov
xchg
cmc
mov
mov
sbbl
push
jge
mov
sbbl
call
push
mov
jecxz
or
and
cmp
pop
pop
sbb
test
mov
std
aaa
xor
pop
mov
push
cld
movsl
add
add
xor
scas
inc
fists
cli
mov
inc
inc
fnsave
lock
mov
dec
lea
cmpsl
repnz
cs
jle
or
cs
cmpb
sbb
clc
out
sbb
mov
arpl
ja
arpl
rcl
pop
lock
rcll
lock
add
in
iret
insl
cmp
cmpsb
xchg
pop
hlt
push
push
stc
sub
sub
mov
addr16
push
arpl
pop
mov
xchg
lea
sbb
jb
fs
jbe
xor
inc
addl
cmp
pop
fs
adc
hlt
in
add
leave
lahf
dec
pop
clc
call
stos
mov
add
imul
xchg
add
xchg
lods
fldcw
push
push
flds
call
test
xor
push
test
xchg
fisubs
insb
jmp
mov
pop
dec
sahf
test
ljmp
cmpsb
jae
add
pop
fcoml
sub
jg
fcmovnb
popf
dec
out
xlat
into
fldcw
jo
imul
inc
out
xchg
push
sub
push
push
fsubs
jne
inc
xor
push
negl
test
loope
int3
lahf
cmp
sub
xchg
adc
cs
sub
data16
rcrl
enter
cmpb
add
nop
popf
out
jo
std
jb
pop
cmp
lret
inc
sub
out
pop
iret
lock
in
jg
cmp
adc
and
call
xchg
and
stos
repnz
cs
ja
jne
mov
dec
je
mov
lock
mov
insb
adc
fdivs
push
leave
jmp
stos
xor
xchg
adc
test
and
fs
outsl
add
ret
js
sbb
data16
xchg
xlat
cli
pop
cmpsl
mov
pop
sub
push
mov
mov
imul
enter
out
fstpt
push
or
fstp
push
ret
jne
dec
adc
or
xchg
aad
dec
pusha
xchg
xchg
dec
fsts
das
mov
stos
dec
jecxz
icebp
push
and
insb
mov
lods
cld
sub
call
lea
ficomps
mov
jnp
sbb
jb
ret
das
or
out
sbb
xor
lods
mov
and
or
push
xor
mov
push
pop
cmc
adc
inc
stos
popa
push
ficoml
mov
mov
fwait
push
pop
mov
cmp
imul
or
pushf
fidivs
mov
add
sub
fsubrl
fsts
push
fldl
sub
dec
dec
daa
in
cmp
mov
and
push
add
cmpsl
scas
mov
aam
push
sbb
add
arpl
cmp
pop
dec
jae
add
xchg
insl
cs
dec
push
mov
sub
push
mov
inc
xchg
mov
and
push
add
mov
jae
sub
cmp
gs
mov
push
dec
imul
push
outsl
imul
rclb
push
fstpt
dec
mov
rorb
mov
sar
pop
pop
mov
add
inc
pushf
imul
dec
test
push
dec
movsl
rcrl
xchg
add
pop
sub
ja
outsl
push
loope
movsl
lret
dec
jmp
xchg
andl
and
lret
pop
cmp
adc
push
les
adc
dec
xchg
mov
jmp
pop
adc
addr16
push
inc
nop
jle
or
incl
nop
jl
clc
mov
fwait
aas
icebp
adc
aaa
cmpsb
lds
and
into
and
dec
sub
je
sub
sti
and
lret
insb
add
leave
xchg
cmp
out
cmpsl
ja
cmp
dec
idivl
fcoml
mov
aam
stos
aaa
enter
sub
pop
xchg
cmp
lea
jnp
cmp
iret
out
dec
xchg
xchg
jns
push
cmp
mov
ret
js
daa
sub
ss
sub
ficoms
fbld
cmp
pop
dec
push
outsl
mov
sbb
cmp
mov
cmpsl
dec
pop
ja
out
xchg
fdivp
loope
xchg
push
jae
loopne
loope
inc
enter
mov
lcall
pusha
push
or
iret
inc
icebp
lahf
pop
or
imul
out
jbe
loope
nop
lods
adc
adc
fst
fsubrs
xor
lea
in
orb
popa
and
push
imul
inc
or
negb
jge
ficoms
inc
push
xchg
sbb
jae
mov
dec
push
and
xchg
mov
add
and
cwtl
add
rorl
in
mov
ljmp
fwait
js
movsb
les
das
pop
inc
cmp
sub
push
js
push
pop
sub
adc
xchg
sahf
pop
cmp
aad
jmp
cmpsb
addr16
jge
fimull
add
hlt
mov
aas
mov
lret
test
cmp
and
pop
fcoml
daa
and
sahf
adc
bound
je
jl
test
enter
dec
ret
mov
es
inc
in
pop
and
aas
jge
adc
cs
aaa
fbstp
push
lahf
rorl
test
jmp
aad
xchg
jae
cs
cmpsl
stos
aaa
mov
cmp
movsl
sbb
mov
fwait
add
insb
dec
pop
sti
mov
sub
cmp
xor
int
out
in
inc
rorb
jl
cld
sbb
or
sahf
fadds
sbb
pop
push
xor
lea
aaa
rcl
push
add
scas
inc
mov
mov
ljmp
sub
in
or
xor
sti
scas
xchg
fistps
shll
fmul
xchg
lock
pushf
stc
repz
mov
fs
scas
dec
rcl
pop
mov
mov
cmp
or
cmpsl
mov
out
in
sahf
repnz
push
adc
cli
movsl
out
mov
xlat
cli
loopne
push
inc
jp
testb
fdivrp
mov
popf
js,pn
xor
xchg
dec
lock
fcomps
or
sti
sub
push
jmp
mul
inc
dec
out
or
xor
xchg
stos
arpl
lods
das
pushf
or
ja
cld
push
xlat
out
ret
dec
ja
je
repnz
inc
mov
loope
sbb
xchg
call
mov
dec
gs
idivb
mov
adc
jg
popf
and
and
cmp
iret
or
pop
aam
fldcw
or
aaa
in
sbb
mov
fwait
xor
xor
decb
dec
pop
aam
mov
sub
push
push
jb
lods
jp
insl
push
icebp
push
mov
mov
xchg
fidivrl
mov
push
mov
xor
mov
mov
pop
and
pop
pop
or
into
in
iret
ljmp
mov
sbb
xor
std
push
adc
xchg
out
int3
ja
jmp
xlat
out
das
cmp
jle
daa
jae
daa
outsl
call
push
movsb
fiaddl
dec
mov
sub
test
adc
jmp
mov
loop
mov
movsb
push
and
sbb
dec
jo
xchg
sbbl
xchg
mov
dec
jns
inc
cli
in
xchg
inc
inc
lret
bnd
add
jl
sub
mov
outsb
mov
gs
ljmp
adc
mov
pop
sub
dec
int
jb
shl
lret
xchg
cmpsl
roll
sub
pop
push
fcoml
cmp
xchg
cltd
mov
dec
dec
lahf
shrb
shlb
mov
sarl
inc
jbe
mov
adc
cmp
inc
clc
cwtl
psllw
sub
int3
pop
jne
adc
push
mov
cld
mov
jmp
and
es
push
lock
out
sbb
outsb
in
ror
dec
pop
iret
imul
int3
loopne
mov
popa
add
xor
aam
loopne
cmp
ss
dec
mov
lahf
sub
mov
nop
mov
sbb
shll
dec
sbb
inc
div
push
sbb
cmc
loope
push
lcall
in
pop
dec
adc
jp
in
add
jae
jb
ret
aas
lret
repnz
xorl
xchg
sub
jmp
in
xor
push
arpl
cld
push
jne
add
in
sti
xchg
in
test
or
nop
outsb
sub
sbb
and
test
ret
imul
enter
mov
push
sbb
mov
in
mov
incb
mov
mov
ss
ljmp
sbb
and
sbb
sbb
out
arpl
jmp
sub
mov
ficomps
aam
add
mov
outsb
add
cmp
outsl
adc
pop
lcall
dec
movsl
ja
sbb
push
nop
pop
loope
jmp
out
xchg
dec
mov
push
daa
bound
les
jecxz
gs
rcrb
aad
push
rcrb
xor
lods
ficoml
addr16
mov
cmpsl
adc
xchg
js
cmp
add
loope
fs
fisubl
mov
inc
lods
push
add
push
sbb
shrl
int
mov
rclb
les
enter
cmp
mov
sub
jge
push
pop
jnp
loopne
movsb
mov
jecxz
xor
mov
out
lods
push
add
outsb
push
push
inc
dec
sbb
cs
sub
pop
clc
cmp
pushf
loopne
imul
push
cmp
and
lock
add
xor
add
or
mov
insb
subl
cmpb
aam
or
mov
xorb
aam
aad
dec
out
push
pop
add
xchg
sahf
into
cmp
repz
cmp
inc
negb
scas
or
cmc
jns,pn
jb
fsubr
lcall
and
mov
ljmp
adc
inc
cmp
or
jmp
std
lock
test
out
cmp
in
loope
and
mov
scas
sbb
sbb
pop
xor
mov
inc
and
je
lret
jae
mov
movsb
mov
lods
sarl
sbb
mov
and
in
inc
jb
pop
rdmsr
cltd
cmp
sbb
xchg
push
sub
das
sub
push
gs
cmpsl
add
xor
mov
pop
mov
jbe
cmpsl
sub
ret
into
ds
push
sbb
mov
inc
loope
lock
cld
inc
mov
aad
out
dec
sbb
fisubrl
imul
sub
int
mov
fldcw
aam
sub
popf
loopne
jb
movsb
xchg
inc
push
pop
add
xor
push
and
lahf
fcmovnb
iret
jle
test
fsub
add
aad
in
push
pop
dec
mov
notb
or
mov
jns
inc
xchg
lock
iret
test
mov
add
cmp
jmp
stos
jnp
dec
outsb
outsl
addr16
xor
sub
xchg
lock
sub
cmp
scas
mov
cmc
cmpsl
mov
out
testl
add
jmp
jp
stos
cmp
mov
je
sub
cmc
xchg
ljmp
mov
xlat
lock
xor
push
ud0
insb
loope
cmc
enter
and
mov
mov
in
cmp
cmp
xchg
xchg
cmp
dec
fisttpll
or
test
arpl
sbb
mov
es
out
add
fistpl
sub
xchg
or
pop
xchg
adc
and
dec
pop
das
fcompl
pop
popf
jg
ror
dec
pop
mov
pop
sub
fstp
test
insb
and
jecxz
xchg
lret
mov
dec
push
xor
in
or
mov
adc
out
inc
movsb
dec
cltd
push
clc
and
xor
push
icebp
dec
xchg
icebp
dec
add
sub
jecxz
ret
and
mov
push
loope
cmp
or
fcompp
jp
sbb
or
mov
mov
orl
xor
xor
scas
jne
les
out
fsubrl
mov
push
cmp
jno
enter
test
inc
mov
cmp
popa
jp
pop
mov
aad
das
mov
clc
pop
sarl
push
jnp
lcall
ds
sub
movsl
aad
dec
xchg
xchg
sub
add
inc
sub
mov
stos
or
sbb
out
and
cltd
bndstx
lods
mov
sbb
orl
hlt
cmp
xor
dec
sub
sub
push
test
mov
push
sub
ds
mov
adc
js
fwait
mov
add
push
pop
push
fisubl
inc
sbb
or
xor
push
aam
enter
rorb
test
add
ja
fstpl
jge
cmpsb
mov
mov
xor
std
mov
mov
movl
cmp
mov
mov
ror
cmpsl
mov
pop
dec
das
sahf
sub
push
fwait
js
ja
cmc
dec
pop
mov
pop
jmp
inc
jecxz
mov
adc
fdiv
imul
mov
into
loopne
mov
xchg
mov
xor
jmp
xor
jg
jb
fnstsw
xchg
jecxz
pop
adc
mov
jbe
mov
cmpsb
dec
ret
mov
and
or
scas
outsb
mov
aam
je
ljmp
sub
js
mov
lods
sbb
out
jmp
ljmp
xchg
fwait
cmp
cmp
lods
mov
in
movsb
pop
mov
push
scas
cli
movb
add
scas
push
xchg
js
inc
mov
mov
sub
not
pop
lcall
pushf
pop
outsb
out
mov
fisttpll
ds
mov
cmc
imul
das
dec
fnsave
mov
addb
fcomi
inc
mov
xor
push
sub
insb
repz
test
dec
fistl
pushf
adc
pop
add
pop
fildl
ret
cmp
ffreep
or
sbbb
hlt
cld
ret
push
jmp
mov
iret
or
mov
xor
sub
mov
sbb
fiaddl
pop
push
sbb
or
sahf
jle
add
mov
jne
pop
xor
adc
mov
mov
dec
mov
mov
mov
out
mov
arpl
mov
xchg
imul
sub
adc
or
test
inc
outsl
sbb
aad
mov
jge
int3
xlat
mov
popf
insl
sbb
insl
dec
cmp
adc
imul
stos
cmp
cmp
jl
cmpb
dec
in
dec
and
int3
out
test
into
and
push
outsb
std
fwait
mov
cld
or
popl
push
cld
div
xchg
sub
jbe
and
mov
and
xchg
pushf
in
or
jg
lret
or
pop
mov
fiaddl
rolb
dec
in
lea
mov
out
jno
movsb
shrb
jno
sbb
jl
sub
bswap
insl
inc
sub
into
mov
js
clc
xor
gs
in
loopne
stos
mov
sub
mov
and
adc
push
sbb
jns
lahf
inc
fdivs
hlt
jno
push
test
ja
jo
outsl
testb
xchg
push
sub
xor
mov
and
mov
adc
cmp
xor
sysenter
mov
and
int3
xchg
push
cmp
mov
fs
sbb
aaa
xor
mov
pushf
shlb
mov
test
inc
cmp
mov
adc
xlat
test
or
aas
lds
and
xchg
cwtl
mov
cmpsb
mov
jmp
cli
sahf
pop
dec
push
pusha
in
jnp
xor
mov
lret
je
cs
test
mov
popa
jbe
rcr
sbb
adc
sbb
or
in
and
and
pop
push
xor
and
jnp
sbb
lods
daa
in
add
nop
jg
out
in
mov
lcall
xchg
pop
jb
shrl
mov
pop
ret
int3
adc
testb
xchg
inc
mov
movsb
dec
dec
jbe
mov
orb
jg
push
sub
sub
jno
sbb
in
pop
call
ja
andl
cli
adc
adc
imulb
popf
in
fbld
xchg
mov
arpl
fistl
add
jmp
cmc
mov
loopne
popf
insb
mov
mov
sub
in
jb
stos
or
fildl
into
pusha
leave
lea
clc
jnp
in
or
jb
push
shlb
insb
lea
xor
sarb
mov
xlat
aaa
mov
imul
mov
ss
add
test
js
std
cmp
pop
mov
shlb
test
adc
xor
clc
mov
inc
add
push
adc
nop
jecxz
ds
jle
mov
outsl
aam
cltd
filds
push
adcl
dec
xor
setne
mov
and
ror
mov
mov
incb
jg
or
fbld
mov
xor
xorl
sub
test
mov
push
push
out
loopne
and
push
enter
cmc
ljmp
mov
icebp
dec
addr16
sbb
fiaddl
in
jg
inc
cmp
sbb
pop
jno
jl
mov
out
and
lea
add
cmp
jne
or
cmpsl
sub
pop
std
arpl
inc
fisubrs
cwtl
push
fildll
stc
or
xchg
or
push
test
jle
sbb
adc
nop
lock
fisttpl
dec
jo
shlb
xorl
ja
test
and
mov
cmp
aam
inc
sbb
out
lea
cmpsb
fiaddl
push
or
push
cmp
rorb
loop
fnstcw
pop
lret
hlt
sti
pop
stc
lea
xor
aad
bnd
xor
test
fidivl
shlb
xor
inc
push
ds
pop
sbb
adc
scas
jmp
mov
in
inc
xchg
add
fdivrp
mov
inc
into
insl
call
les
push
mov
push
push
ljmp
aam
imul
add
in
movsl
xchg
shll
rcl
outsb
ljmp
sbb
rorb
imul
fcmovnbe
ss
sbb
cltd
jne
addl
mov
jo
pop
mov
shrl
rcr
test
lcall
jmp
sub
add
cmc
stc
add
scas
cmp
mov
jle
and
push
movsl
mov
jmp
or
lahf
out
cmp
cmc
rol
cmpsb
cmp
push
pop
jne
jp
mov
lcall
sub
adc
sub
nop
jo
hlt
inc
nop
cmpsb
mov
bound
xchg
clc
cmp
jecxz
adc
std
inc
mov
push
and
inc
outsb
xchg
xchg
jg
inc
pop
das
cmp
andb
add
jbe
sub
test
sub
jb
test
notl
stos
push
in
mov
jae
mov
push
jmp
ficoml
or
subl
fisttpll
ja
adc
xchg
adc
xchg
xchg
divl
arpl
cmpb
or
add
sbb
push
pop
inc
jne
xchg
stos
lods
fimuls
pop
cltd
mov
les
loopne
int
repnz
adc
sarb
and
les
inc
xchg
add
mov
cmp
push
mov
jb
xchg
into
push
lods
dec
shll
cmp
cmp
sbb
std
outsb
cmc
fcoms
fnsave
push
push
cld
inc
sbbl
pop
inc
sub
sahf
in
cmp
dec
popf
add
cmp
sub
dec
jne
ret
outsb
inc
lods
insl
jb
ret
jge
cltd
xorl
xchg
repz
inc
jbe
pop
sbb
cli
sub
mov
cmp
aaa
mov
adc
in
stos
jnp
sbb
jne
popa
xor
inc
mov
sbb
mov
sub
cmpsl
fnstcw
popa
popf
push
nop
pop
jp
and
mov
sti
cmp
fwait
mov
jle
nop
test
sar
adc
out
mov
in
lahf
insl
dec
sbb
dec
add
mov
shl
aam
cwtl
insb
mov
andb
cmp
mov
je
xor
int3
insb
push
fcmovne
jne
cli
nop
rol
adc
lods
lock
pop
mov
in
fistpll
inc
ljmp
cwtl
jmp
roll
add
ss
inc
pop
enter
in
inc
jns
ss
jmp
pop
nop
mov
xor
add
jmp
arpl
insb
mov
xchg
mov
and
outsb
movsl
js
fidivl
mov
lcall
nop
cltd
icebp
jecxz
jmp
lock
sbb
add
test
push
fstpt
ret
sti
xor
xchg
je
jbe
push
pop
jb
jns
push
and
test
pop
cwtl
mov
xchg
mov
call
lsl
aaa
dec
xorl
sbb
inc
das
mov
fsts
or
addb
xchg
cmpsb
lods
outsb
inc
shlb
into
pop
ds
sub
nop
and
movl
iret
ss
xor
xor
xchg
nop
daa
cli
xchg
jge
xchg
pop
sub
mov
leave
je
aam
dec
push
mov
or
jnp
jo
pop
jg
fildl
gs
inc
ror
xchg
inc
dec
cmp
mov
cmp
and
sahf
test
inc
or
pop
inc
jbe
mov
cmp
daa
mov
sub
jno
dec
adc
push
pop
movsl
dec
push
call
pop
mov
pusha
arpl
mov
mov
mov
mov
scas
imul
mov
imul
lock
xrelease
jmp
jnp
fcmovbe
and
xor
std
jg
cmpsb
pop
insb
xor
ficoml
pop
sub
popa
xor
frstor
cmp
cmp
enter
mov
rolb
jl
xchg
cmp
or
add
test
mov
adc
bound
bound
push
add
mov
xchg
vrcpss
pop
push
icebp
fstpl
xchg
shlb
push
and
xor
jb
out
addb
add
std
sarl
loop
push
es
gs
sub
and
xor
pop
xchg
int3
xchg
ss
inc
je
call
mov
jmp
bound
jp
push
inc
add
das
dec
sahf
push
stc
int
jmp
sub
adc
imul
add
lock
mov
adc
popa
subl
mov
pushf
xor
jnp
pop
jne
popa
rclb
lds
push
and
add
mov
jp
adc
movsb
gs
aas
mov
clc
cltd
mov
fiaddl
cmc
push
neg
and
lahf
push
mov
std
and
push
jnp
mov
pop
loop
stos
iret
rcll
addr16
adc
ficompl
fdivrs
push
idivb
div
sub
ja
loope
stos
sbbb
sahf
movsl
lret
sub
ja
xchg
pop
jp
call
test
xor
adc
bound
addr16
xor
aaa
inc
cmpsl
and
pop
cmp
or
dec
in
pop
ss
jo
cmp
aaa
fisttpll
and
lea
mov
stos
push
in
hlt
or
push
xchg
cmpb
repz
push
pop
or
aam
fwait
xchg
sar
popf
mov
xchg
into
ljmp
sbb
cwtl
nop
xor
sbb
or
xchg
dec
jbe
mov
not
cmp
and
push
xor
adc
int3
push
sarl
mov
sbb
not
in
fcoms
in
mov
xchg
aad
or
in
mov
mov
push
pop
cmp
icebp
aas
imul
cmp
cmp
sbb
rcll
mov
test
cmpsb
pop
mov
lea
mov
in
or
add
xor
lds
xlat
or
mov
cmp
xchg
and
or
scas
subb
stos
jo
insl
pop
inc
hlt
or
xor
inc
imul
jns
push
cmp
or
lock
sub
jge
fisubl
xchg
sub
mov
in
mov
pushf
iret
mov
inc
jae
mov
pop
inc
sarl
add
add
popf
pop
xchg
adc
add
mov
das
std
and
out
es
pop
cmp
and
clc
inc
cli
sub
into
popa
test
hlt
popf
mov
test
aas
int
xchg
push
add
test
jmp
push
out
lea
pop
adc
adc
mov
sbb
push
push
insb
adc
mov
mov
mov
aam
inc
lea
int3
push
xchg
push
ds
pop
jecxz
pushf
repnz
adc
and
icebp
iret
ror
jg
add
mov
mov
dec
xor
xchg
aam
faddl
pop
pusha
test
std
adc
ja
pop
or
cmpb
mov
inc
jmp
in
jge
int
cmpsb
xchg
sbb
and
shlb
mov
xor
jbe
jne
mov
mov
adc
mov
testb
sub
inc
sub
enter
push
pushf
mov
dec
fcmovnu
or
push
sbbl
lret
aam
lcall
sub
ret
add
jecxz
out
mov
xchg
sarl
and
pop
sahf
jno
adc
adc
pop
mov
movsl
sar
fidivl
lods
sub
sub
jmp
add
sbb
arpl
lds
pop
call
or
dec
sbb
push
mov
fadds
ss
pop
pop
in
test
dec
sub
adc
icebp
sti
mov
dec
lds
jno
icebp
outsb
dec
jge
or
adc
push
testb
inc
pushf
mov
pop
out
sbb
out
fildll
scas
ljmp
sub
loopne
cmp
xchg
sub
nop
sarb
inc
dec
cmovno
jg
les
xlat
aas
sbb
out
inc
ljmp
lahf
out
fwait
mov
jnp
cmpl
sbb
pop
aas
add
movsb
aad
fcoml
pop
inc
loope
out
xor
paddusb
js
lret
mov
sbb
pop
push
cs
cld
jcxz
js
jnp
mul
sub
or
add
mov
andl
fldl
push
cs
sub
push
fsts
jne
mov
jmp
adc
pusha
stos
movq
adc
or
sub
dec
xchg
jmp
orb
mov
and
pop
repnz
inc
enter
out
inc
clc
daa
sbb
cmp
and
add
scas
cmpsb
or
test
mov
mov
pushf
lahf
icebp
mov
je
imul
rorl
fldl
jbe
xchg
push
aaa
add
push
xor
pusha
mov
mov
ds
scas
cli
imul
mov
jle
push
and
outsb
mov
stos
in
xchg
xchg
dec
ds
lea
aas
push
or
xlat
and
js
add
or
arpl
lock
arpl
xor
cs
arpl
jle
cmp
jae
aaa
aam
fwait
aas
dec
inc
rcr
mov
lock
out
pop
into
mov
fwait
pop
adc
adc
pop
fldl
test
sbb
sub
es
cmpsl
dec
cmp
popa
repz
and
movl
jl
sbbb
lods
mov
xchg
xor
cwtl
add
gs
mov
mov
popf
or
icebp
outsl
jb
mov
dec
sbb
pushf
es
cmpsb
ret
adc
sbb
addr16
xchg
fsub
xchg
pop
mov
insb
cmp
jbe
sbb
xlat
dec
inc
xor
add
scas
xchg
mov
sbb
xlat
xchg
dec
sub
aam
jnp
push
pop
outsl
dec
ja
adc
adc
data16
das
mov
adc
scas
sbb
imull
push
mov
jecxz
xchg
xchg
jae
and
and
push
and
sub
xor
push
push
pushf
xchg
lcall
jno
inc
mov
test
mov
add
xchg
mov
cs
js
fmuls
cmp
jae
loope
inc
insl
insl
jns
mov
fidivl
out
fcoml
outsb
orb
out
cmp
ds
addr16
outsb
jns
and
xchg
in
stos
and
jo
mov
clc
sar
sub
ja
repz
xor
sti
adc
dec
test
int3
xor
add
icebp
out
test
jle
lahf
mov
lods
out
cmp
mov
dec
jne
mov
bound
dec
or
jno
addr16
add
icebp
jb
or
arpl
fdivl
pop
sub
dec
mov
pusha
push
rorl
adc
lcall
sbb
xchg
mov
pop
into
cmc
pop
pusha
imul
sar
inc
xor
sub
jbe
lret
mov
movsl
lahf
mov
popa
movsl
cmp
int3
mov
push
fnstenv
or
mov
xchg
hlt
push
je
daa
xor
incl
idivl
jp
push
push
test
loop
ss
xor
ds
pusha
xchg
cmpb
sub
adc
jl
data16
lea
adc
add
push
mov
in
sub
xor
push
add
insb
adc
roll
and
push
sbb
jmp
rcl
iret
or
pop
aad
xchg
xchg
fsubrs
xchg
popf
pop
rol
cld
sub
clc
mov
aas
imul
jb
shr
or
adc
pop
sub
lea
ftst
or
xchg
outsl
dec
mov
pop
repnz
xchg
xchg
sub
leave
jle
out
scas
dec
imul
inc
mov
push
pop
decb
out
lcall
sti
imul
adc
pop
push
xor
dec
xchg
push
cmc
and
mov
push
fcoml
or
pop
inc
mov
cmp
xlat
ret
es
lock
push
jne
mov
test
hlt
movsl
mov
stc
push
sub
and
mov
test
cmp
mov
and
lock
or
mov
js
lret
stos
xor
and
dec
xchg
fisubl
cltd
sbb
scas
mov
fdivp
pop
jl
in
fsubs
mov
dec
lcall
ljmp
cmp
mov
cmp
xchg
mov
data16
clc
cwtl
test
outsl
pop
inc
mov
or
sti
and
addb
push
dec
pusha
mov
inc
cli
lods
mov
xchg
dec
jl
xchg
scas
cli
inc
cli
xor
push
push
pop
ljmp
or
imull
lret
lock
ljmp
mov
jnp
shlb
js
popf
mov
dec
sub
cmpsb
fistpl
mov
lea
sub
in
mov
xor
inc
mov
push
repnz
scas
mov
mov
fnstsw
mov
loopne
mov
in
sahf
jns
pop
addr16
sbb
push
mov
out
push
faddl
push
ret
ja
insl
mov
lock
movsl
jg
pop
pop
shrl
jno
scas
mov
mov
addr16
adc
push
mov
add
cmp
fldl
fistps
les
pop
data16
xchg
ljmp
data16
lcall
dec
ret
jns
mov
leave
gs
pop
dec
lret
sub
hlt
jg
cmpsb
das
andl
scas
adc
and
mov
and
aaa
pop
jno
icebp
test
ja
nop
jecxz
inc
xchg
icebp
or
sbbl
push
xchg
sbb
push
mov
rcl
xor
sbb
jmp
or
dec
loopne
mov
movsb
mov
in
cmp
mov
gs
out
enter
adc
cmp
sub
mov
xchg
jge
mov
lcall
fisubs
cmc
dec
sbb
xor
popa
mov
hlt
sbb
mov
cmp
aam
add
in
mov
xor
dec
jmp
jae
call
xchg
int3
mov
mov
pop
add
outsb
pop
sbb
mov
and
cli
mov
jp
fcoml
sbb
into
jmp
je
movsb
push
lods
cmc
mov
call
inc
fldcw
sub
ret
out
and
push
dec
cmpsb
dec
das
xor
sbb
cmp
dec
mov
and
push
hlt
mov
leave
or
stc
addb
mov
ja
cmp
xchg
cwtl
scas
xchg
repnz
enter
outsl
test
and
add
sbb
inc
fnsave
sub
lea
xor
push
or
mov
jo
mov
jo
mov
test
std
cmp
je
push
mov
out
add
pop
scas
lea
xor
sti
jns
xorl
xchg
pushf
pushf
adc
jmp
mov
fisttpll
sbb
in
test
xor
jnp
jno
pop
adc
dec
jbe
pop
pop
fucom
inc
pushf
ljmp
ds
pop
lret
movsl
xchg
nop
dec
imul
aad
inc
out
repz
test
ljmp
rcrl
mov
sahf
adc
ds
es
sub
or
gs
push
loopne
test
pop
shl
rorb
jmp
je
out
leave
aaa
shlb
cli
add
movsb
sub
jno
jecxz
sub
push
jmp
sbb
std
xchg
in
movsl
in
in
out
push
aad
rclb
sub
lret
sub
sub
scas
inc
sub
mov
push
mov
and
aaa
cmpsl
imul
pop
mov
and
popa
lret
or
loopne
pop
sbb
gs
repnz
lcall
pop
mov
fiaddl
xchg
stos
sbb
out
and
ficompl
adc
std
stc
mov
inc
cmp
outsl
xchg
dec
push
ret
test
mov
mov
pop
push
pop
dec
jo
inc
shll
and
mov
xchg
cltd
xchg
inc
arpl
lea
dec
xchg
add
pop
pop
mov
mov
pop
dec
out
mov
sbbb
enter
fsubr
xchg
adc
sub
adcl
mov
push
xchg
mov
pushf
jns
pop
push
lock
daa
jecxz
or
pop
pop
shlb
cltd
out
cli
popf
leave
jle
pop
adc
stos
stos
mov
sbb
and
cmp
jmp
pop
movsb
or
cmc
mov
popa
adc
sub
in
inc
ret
sub
mov
jno
sub
hlt
loope
fstl
jo
jae
int3
lea
std
cmp
lods
fimull
sub
cld
orl
adc
test
ficoms
fldl
cltd
sbb
or
sbb
cbtw
inc
sub
in
adc
push
inc
mov
mov
notl
es
inc
jo
test
das
out
sti
or
xor
movsl
cmpsl
fwait
adc
lcall
negb
daa
in
sbb
dec
mov
imul
mov
adc
fnstenv
cli
lahf
test
addr16
enter
andb
jne
outsb
lock
dec
fldcw
mov
xchg
fnsave
lds
mov
xchg
subl
inc
jno
lahf
xchg
or
mov
sbb
add
test
push
mov
push
sbbb
out
mov
stos
or
mov
pusha
sti
insb
inc
lock
ljmp
fwait
push
adc
leave
mov
dec
movsb
rorb
mov
and
xor
push
fadd
pop
aad
push
push
insb
inc
xor
add
xor
mov
fnsave
jg
int
addr16
xchg
dec
nop
shll
adc
lock
add
stos
test
cmp
fs
fdiv
ds
mov
inc
jae
pop
mov
cmpsl
push
fisttpll
cmp
fnstsw
mov
and
push
sub
das
int
cmp
jnp
fisttpl
push
mov
inc
test
inc
or
push
jg
cmp
mov
stc
ja
xor
mov
fisttpl
stos
and
leave
mov
inc
aaa
dec
inc
out
enter
adc
stc
mov
in
std
push
mov
mov
jns
rol
fstps
dec
popf
mov
mov
outsb
xchg
movsb
dec
int
push
inc
fs
jne
add
push
call
jmp
into
arpl
pop
mov
icebp
xchg
in
xor
inc
and
ret
pop
call
adc
inc
test
jecxz
and
jle
je
stc
or
mov
ret
mov
cld
imul
or
ret
and
jle
mov
test
mov
scas
nop
mov
aas
pop
sbb
bound
push
xchg
jl
clc
and
pop
add
scas
imul
popf
push
repnz
push
and
lret
ret
cltd
lds
js
shll
ficomps
dec
adc
adc
out
and
lahf
and
into
sti
lock
call
orb
xor
cmc
xor
dec
push
cmp
mov
xor
or
psadbw
xchg
das
or
cmpsl
xchg
fwait
jno
and
sbb
or
sub
mov
into
dec
sub
repz
in
enter
add
lcall
cmp
insb
scas
bound
arpl
or
in
push
mov
lds
add
add
mov
jne
sub
cmp
push
xchg
mov
push
cmp
ds
rcll
loope
ljmp
dec
and
arpl
mov
out
mov
pop
mov
clc
stos
movsl
lea
jnp
negb
xchg
pop
lcall
enter
mov
xchg
loop
cmpsl
adc
sbb
imul
mov
cltd
jl
test
push
int3
push
test
ss
add
aas
aas
andl
pusha
and
mov
cmp
popf
pop
sub
cmp
xor
aas
pop
jl
xor
pop
inc
xchg
jnp
sub
orb
jg
xor
sub
fs
test
xor
incb
cli
dec
out
inc
push
xchg
sub
cltd
testb
or
jg
jmp
loope
and
nop
aad
popf
repnz
fcomps
push
cmpsb
mov
xchg
mov
test
adc
fsubrl
insl
cmp
leave
add
jbe,pt
call
movsl
cmp
xlat
sub
stc
repnz
ja
inc
lahf
mov
fisttps
cmpsb
adc
sbb
ljmp
jno
fwait
in
lods
xchg
stos
push
popw
cmp
mov
mov
lods
xor
das
xchg
xchg
ret
test
jnp
mov
nop
cmp
int3
cmp
jnp
scas
cmp
and
fisttpl
sbb
xor
sbb
add
push
ss
xchg
fsub
in
fstl
and
lods
fstps
jo
imul
cmp
mov
ficoml
mov
out
ss
ret
jp
add
cmpsl
push
cmpsl
and
and
repnz
push
inc
jle
xchg
and
lahf
movsb
mov
popf
jo
jl
clc
pop
jmp
or
cmp
mov
push
adc
cmpsl
mov
es
roll
mov
jo
daa
adc
stos
iret
aaa
pop
push
inc
dec
stc
enter
popa
sub
mov
icebp
mov
jb
and
iret
xchg
lahf
orl
ljmpw
subl
push
rolb
mov
rcr
jmp
cmpsb
fisubrs
pop
test
pop
dec
dec
jmp
jb
fisttpll
xchg
es
mov
mov
jmp
mov
mov
mov
les
inc
cmp
lods
loope
mov
mov
pop
lret
inc
arpl
imul
adc
push
lea
comiss
cmp
loope
mov
shr
fst
jmp
xchg
enter
pusha
sbbb
rcl
and
mov
and
maxps
mov
cmpsl
dec
mov
fwait
sub
mov
sbb
outsb
xchg
iret
js
mov
rol
lea
js
in
push
pop
pop
mov
idivb
insb
das
and
inc
mov
pop
ljmp
js
sbb
inc
aad
test
cmp
sbb
cli
and
add
dec
into
iret
push
xchg
mov
add
shlb
setne
sub
out
xchg
xor
lahf
je
aas
rolb
ficoms
dec
sub
xor
lea
mov
cmp
sub
call
ret
cmpsl
enter
xor
cmc
dec
xor
loope
out
xor
adc
or
test
and
mov
mov
mov
in
pxor
mov
pop
std
bound
movsl
sub
ss
mov
jae
inc
mov
or
imul
ret
in
test
jge
mov
sbb
and
mov
jge
and
cmp
and
outsb
mov
stos
movl
popf
mov
in
add
mov
pop
xchg
dec
cli
cmp
cli
test
stos
popa
aaa
pop
adc
xchg
insb
push
lods
jge
mov
pop
lods
cmp
shrb
sub
ret
add
add
dec
pushf
xor
rcrl
rol
xchg
mov
scas
cmp
inc
and
dec
push
imul
icebp
cmpsb
add
xchg
pop
sbb
subb
inc
les
cmp
or
out
mov
mov
nop
scas
addr16
xor
xchg
sti
pop
repz
in
pop
cwtl
arpl
and
test
mov
in
and
push
adc
les
cltd
push
or
ja
mov
loope
jecxz
push
sbb
xchg
mov
add
ud0
or
loop
xchg
and
xchg
mov
jns
mov
xchg
fnstcw
push
push
test
gs
mov
mov
push
test
pusha
in
push
mov
rep
pop
cld
and
sub
data16
rcr
js
mov
mov
add
cmp
inc
mov
sti
xchg
mov
add
cmp
popa
pop
adcb
ja
xchg
sti
pop
lea
pop
xor
push
fs
cmpsb
ficoml
lods
idivb
andl
xor
inc
mov
fwait
sbb
rcll
into
loope
ds
mov
sbb
xchg
and
dec
xor
cmp
pop
cmpsb
inc
mov
fs
add
mov
out
in
and
push
push
dec
sahf
push
add
fistl
fldenv
or
mov
mov
jmp
xchg
int
in
pop
adc
dec
inc
aad
lcall
lods
ja
inc
inc
dec
xor
inc
mov
mov
scas
add
xchg
mov
imul
inc
fs
arpl
cmp
mov
xchg
or
jae
stos
mov
or
dec
clc
fidivrl
mull
sbb
sbb
out
jge
or
rolb
andb
jae
xor
and
push
int
cmp
mov
mov
mov
or
or
nop
mov
dec
xchg
ret
jb
dec
inc
repnz
pop
stos
dec
test
cwtl
mov
int
xor
stc
xchg
stos
movsb
mov
out
dec
movsl
loop
mov
rcrl
cmp
insl
mov
pop
dec
sub
xor
pop
push
push
push
cmpsb
and
fsubr
movsl
mov
add
xor
lock
pop
loope
imul
add
cld
sti
inc
jle
inc
inc
outsl
push
bound
in
rclb
mov
xchg
pop
adc
xchg
jecxz
fildl
push
mov
ficoms
jmp
sbb
stos
hlt
shl
cmpsb
daa
fisttps
cwtl
xchg
in
stos
lcall
push
push
in
repz
mov
cmp
enter
scas
mov
xor
or
in
in
daa
popf
dec
jecxz
fs
pop
ja
mov
lcall
or
loop
xlat
sahf
pop
cmp
das
cltd
rcr
push
test
lock
mov
dec
mov
jge
loopne
insb
and
jmp
sub
xchg
js
mov
mov
out
sub
and
das
cli
xor
add
add
fidivl
divl
out
jno
mov
int
mov
outsl
dec
xchg
dec
fsub
mov
jecxz,pn
out
sbb
mov
fmul
or
push
ss
test
mov
inc
adc
add
cmp
mov
cltd
and
xor
jno
fldcw
pop
jne
mov
and
adc
and
push
movsl
inc
xchg
jbe
rcrb
arpl
popa
lahf
fimuls
push
int
dec
push
mov
jmp
loop
cld
adc
cli
ljmp
inc
dec
fsub
cmp
dec
mov
in
dec
lret
roll
cmp
push
fs
sbb
jg
push
sbb
mov
sbb
inc
jo
mov
cmp
and
pop
mov
outsb
xor
sub
jecxz
xchg
ds
and
movsl
fdivr
insl
or
xchg
scas
ljmp
pop
cltd
adc
jo
xor
lods
inc
pop
out
aam
xor
hlt
int3
mov
mov
lods
and
inc
lcall
sahf
shll
cld
outsb
dec
inc
int
hlt
data16
mov
sub
out
xor
shl
test
inc
pop
jae
push
movsb
scas
and
inc
out
xor
fadd
jle
push
movsl
xor
mov
push
and
lods
in
xor
xchg
enter
jno
xchg
es
mov
pop
lret
ds
mov
ss
repnz
inc
stc
jmp
clc
pop
sbb
mov
in
out
js
iret
cmpsb
in
pop
xchg
mov
adc
gs
sbb
aas
mov
jmp
fucomp
cld
inc
add
mov
jmp
jl
xchg
jno
cmp
std
movsl
jne
lock
ret
fsave
rolb
push
test
sbb
push
xlat
cs
ds
popf
xchg
pop
push
xor
loopne
dec
hlt
xor
inc
adc
xor
cltd
lds
jo
xchg
mov
mov
pop
and
das
mov
xchg
jbe
scas
jns
push
inc
or
je
xlat
sub
cmp
out
enter
xchg
imulb
orl
lcall
mov
adc
or
lods
jle
js
cmpsb
jge
movsl
jg
lea
xchg
stc
lods
data16
push
add
imul
mov
inc
pop
imul
test
sbb
jge
pop
es
xor
lock
jl
push
mov
mov
jne
jge
mov
imul
ljmp
xor
or
out
lods
cmp
cmpsb
sub
sarl
jns
add
aaa
test
sub
and
in
inc
push
or
out
dec
mov
rclb
int
dec
and
pusha
pop
push
fstps
jmp
inc
dec
push
mov
or
xor
adc
loop
mov
fwait
sub
call
adc
in
into
dec
andl
adcl
repnz
pop
repz
sti
sarb
push
sub
mov
stos
fildl
jae
or
mov
repz
push
xchg
fisubrs
les
sbb
stc
aas
cmp
stos
addr16
jp
lret
ret
and
fldenv
jg
jge
jle
mov
xor
inc
jmp
jg
push
flds
or
ror
jbe
cmp
adc
push
jb
test
cmpsl
cld
lds
xchg
mov
loop
adc
jmp
jecxz
repnz
fcmovb
mov
and
xchg
orb
hlt
bound
out
rolb
sahf
sub
sub
filds
ljmp
cwtl
sbb
outsl
lock
and
adc
push
cltd
mov
jb
push
fstpl
sub
jge
out
add
lds
and
lock
lcall
sbb
xchg
mov
mov
fimuls
inc
mov
shr
popf
addb
test
fwait
xchg
in
push
jmp
cmpsb
lods
fistpl
ljmp
idivb
out
sbbl
iret
pop
push
add
imulb
out
cld
repz
push
mov
ret
cmc
rorb
xchg
pushf
xchg
lahf
fmull
mov
mov
ret
xchg
in
js
das
gs
cmp
cmp
in
push
icebp
mov
and
sub
add
hlt
push
push
test
cmp
addb
cmc
pop
mov
or
cmpsl
mov
xchg
push
mov
pop
cmp
iret
ss
dec
test
or
inc
mov
fsubrl
sbb
in
and
ljmp
sbb
xor
sti
mov
repz
mov
dec
sub
imul
xchg
dec
jmp
aad
sarb
add
xchg
adc
mov
and
into
push
cmp
sub
arpl
mov
push
cltd
ljmp
push
addr16
or
dec
cmpl
out
bound
idivl
xorl
test
or
popa
jl
mov
or
push
std
test
cmpsb
dec
hlt
or
ret
mov
adc
fidivl
ja
ficomps
pop
fdivl
adcb
outsb
sub
mov
push
rclb
pop
lods
in
mov
and
or
xor
call
or
sub
ret
icebp
insb
mov
cmp
xchg
cmp
std
sahf
scas
aaa
mov
paddb
mov
scas
jg
mov
outsl
ja
mov
pushf
imul
mov
jne
int3
fidivl
inc
push
jae
mov
add
roll
xor
lods
hlt
sahf
or
cs
fisubs
andb
lahf
lock
mov
insl
jnp
sub
xor
jbe
mov
adcb
aas
dec
jns
imul
pop
mov
push
or
leave
xchg
aas
data16
mov
add
cmpsl
push
into
test
mov
cmp
outsb
xchg
dec
or
sbb
call
lods
sti
int
and
sub
lea
mov
mov
div
add
cmc
adc
mov
jge
fsts
stos
and
js
pop
lds
cmp
pop
cmp
incb
imul
lahf
xor
cmp
push
push
add
xor
cs
mov
loop
jmp
add
aam
scas
jae
lods
fimull
nop
xor
jb
lods
icebp
sbb
xchg
adc
inc
adc
pop
xor
bound
push
jb
gs
int
cli
xor
push
cmpl
pop
and
push
sbb
lock
dec
xchg
push
outsb
dec
sbb
je
mov
arpl
xchg
std
mov
pushf
data16
cmp
push
mov
cmp
fdivl
ds
div
sti
jbe
sub
pushf
arpl
xchg
pop
sbbb
arpl
pop
fdivrl
pop
jge
mov
cli
inc
sahf
stos
mov
jnp
or
in
imul
fldl
clc
repnz
pusha
jns
out
into
rorb
xchg
cmc
daa
adc
aas
pusha
mov
adc
dec
jns
bound
ljmp
outsl
sahf
in
fisttps
fs
inc
adc
mov
lea
scas
addr16
sub
fcmovnu
adc
cmpb
outsb
mov
xor
sbb
iret
jecxz
in
cmp
jbe
inc
add
lret
dec
push
js
sti
or
clc
and
sub
xchg
cmpsb
mov
mov
mov
aas
jnp
dec
jbe
xchg
mov
rcrb
rcrb
or
repnz
mov
adc
mov
stos
das
lcall
pop
popf
xchg
bound
xchg
push
add
adc
lods
mov
pop
mov
or
sbb
es
sahf
into
push
scas
cltd
out
or
mov
cmp
scas
mov
cwtl
arpl
fstpt
mov
pop
sbb
xorl
movb
xchg
xor
shll
jnp
decb
int3
aaa
xor
ret
cmpsl
bound
and
sbb
icebp
fnsave
rclb
jl
cmpsl
out
xor
and
aas
test
ljmp
mov
mov
iret
insl
jmp
or
sub
sbb
iret
jnp
hlt
mov
js
stc
xchg
mov
pop
cld
mov
dec
testb
mov
popa
rorl
push
ja
add
mov
dec
jae
clc
pop
popf
add
inc
cmp
std
mov
mov
stos
cmc
mov
or
push
dec
push
sbb
mov
mov
shlb
ficomps
or
cmp
out
movsl
mov
xchg
fldcw
add
lock
in
jmp
sub
pop
jbe
aad
sbb
mov
cmp
cmpsb
test
pop
xor
aam
fcomp
mov
leave
sbb
lods
mov
out
hlt
xor
out
iret
jbe
iret
mov
xor
xorb
fwait
and
push
sbb
fs
int
sti
xor
xor
push
xlat
sub
and
sahf
into
rorl
loopne
imul
mov
orl
adc
sub
ss
cmpsb
scas
enter
push
cld
cmp
add
pop
mov
or
cmp
mov
hlt
pop
das
xchg
mov
sub
and
push
cmpsb
jnp
add
frstor
mov
repnz
cmp
in
ljmp
dec
mov
pop
rol
sub
lret
push
scas
jp
xchg
push
test
mov
pop
out
adc
xor
mov
pop
mov
ret
fisubs
pop
and
pop
add
mov
add
insl
sahf
push
pop
inc
and
cmp
sar
cmp
fs
pusha
cmp
xor
inc
inc
mov
or
add
cmp
pop
or
sar
iret
dec
inc
mov
xor
xor
dec
xchg
jle
ds
cld
cwtl
orl
lret
dec
lret
rcrb
addb
xor
les
loopne
leave
lods
lcall
sbb
pop
mov
into
ds
es
xchg
mov
in
mov
movsb
xor
je
scas
jp
cmp
test
pop
je
insb
jae
mov
xlat
lahf
lcall
jle
mov
test
dec
out
pop
lret
mov
ss
or
jmp
int3
insl
xchg
sub
cmp
popa
fwait
sahf
int3
pop
mov
shlb
test
mov
pop
adc
and
adc
insl
je
adc
inc
add
cmp
test
into
stos
loopne
insb
and
mov
test
inc
outsb
loop
push
lods
cmpsl
and
scas
popa
cmp
sahf
cmp
mov
pusha
add
pop
nop
movsl
jno
mov
mov
xor
rclb
lods
daa
cld
or
rcll
jb
rep
sti
cmp
sbb
fmull
adcl
iret
lock
cld
mov
les
mov
jl
scas
arpl
mov
jnp
shrb
mov
lods
xor
pop
das
mov
mov
sbb
into
daa
icebp
scas
xor
mov
cld
xchg
add
dec
js
push
mov
in
and
js
nop
daa
pop
insb
fnstsw
rol
scas
shrb
and
js
dec
lock
mov
inc
inc
sbb
mov
in
push
test
inc
daa
mov
mov
fisubl
xchg
sbb
xchg
and
movsb
lea
shl
nop
clc
inc
arpl
adc
adc
mov
mov
outsb
or
sbb
fadds
test
mov
stos
negb
lret
jecxz
cmp
addb
iret
dec
icebp
push
mov
push
inc
imul
sub
jle
mov
testl
loop
xchg
push
test
mov
dec
cli
pop
shlb
dec
mov
mov
jns
jo
cltd
mov
test
std
inc
mov
push
mov
mov
fmull
scas
sti
cmp
scas
push
rdpmc
dec
lahf
hlt
push
mov
sbb
pop
pop
aas
mov
je
mov
mov
push
stos
dec
push
add
gs
xor
xor
pop
int3
repnz
out
jle
movsb
lcall
mov
test
sbb
aad
cmp
lcall
mov
pushf
roll
int3
inc
xchg
sbb
rorb
fistl
fsubl
ss
rcl
mov
in
dec
je
pop
cmpsb
into
imul
movsl
fstl
jae
sbb
aad
and
stc
dec
sar
cmpsb
cmpsb
lods
ja
adc
out
and
mov
mov
sbb
repnz
negb
sub
mov
pop
test
pop
insb
xchg
popf
sbb
test
sbb
dec
addb
out
push
dec
xchg
fbld
lret
push
mov
fists
addr16
push
add
sbbb
and
push
or
pop
fsubrl
rorb
cmp
pop
stc
push
push
das
add
push
cli
cmp
iret
test
xchg
popf
push
push
scas
sarb
leave
sti
or
lret
das
cmc
or
cmpsb
and
movsl
pop
xchg
int
lcall
dec
int
pop
mov
sahf
cli
sbb
lea
add
dec
lret
sub
pop
pusha
call
out
push
jbe
insb
mov
ret
mov
hlt
adc
int3
inc
insb
je
ret
std
adc
pop
mov
bound
stos
in
addr16
mulb
in
call
into
push
pop
xor
and
pop
hlt
enter
mov
test
cmp
fstp
ja
sahf
out
inc
test
sub
arpl
sbb
mov
hlt
sub
xchg
xlat
daa
ret
out
mov
ret
pushf
cmpsb
fwait
cmp
pop
xor
or
xchg
icebp
int
insl
cs
pop
cld
adc
xchg
jmp
pushf
repz
cmp
adc
imul
jg
js
pop
jne
xor
sub
loope
inc
sbb
inc
add
xlat
or
movsb
loop
stc
daa
cs
int
mov
inc
loopne
pop
or
inc
push
leave
or
cmpl
lock
out
xchg
sti
mov
pop
in
cmp
sbbb
insb
cmpsb
dec
dec
inc
cmp
cwtl
mov
dec
jge
xchg
mov
add
pop
pop
lods
cmp
jo
add
fcmovnu
xchg
jb
movsb
add
test
mov
pop
das
or
fisttpll
cli
add
cmp
mov
cmp
mov
sbb
ret
push
jne
dec
dec
and
test
int
cltd
or
js
ret
mov
mov
xor
adc
mov
sub
dec
mov
adc
hlt
adc
pop
mov
ds
sub
jmp
push
lock
loopne
sbb
adc
push
mov
nop
shl
into
sub
mov
cmpsb
decl
mov
dec
add
cwtl
sub
je
in
xchg
sbb
push
xchg
mov
xor
push
das
test
outsl
ficoms
mov
mov
dec
mov
push
sub
test
push
push
xchg
pop
jnp
push
ja
dec
cwtl
insl
repz
pop
push
mov
xor
ljmp
mov
fnstsw
out
pop
sarb
mov
outsb
push
push
stc
jle
ss
sub
mov
add
rcrl
fwait
andl
loop
xchg
das
push
inc
sbb
pusha
mov
mov
adc
push
add
xchg
mov
inc
rcrb
je
adc
xlat
sti
xchg
andl
sub
mov
sub
lret
imul
push
outsb
out
mov
jbe
rcll
pop
lods
aas
xchg
faddl
sub
lock
adc
xor
inc
popf
or
dec
cs
cwtl
out
push
sbb
leave
mov
push
fnop
mov
sbb
or
add
and
loope
sar
rcrb
and
xor
daa
lahf
xor
inc
cmp
cs
dec
mov
sub
pop
push
dec
jae
mov
dec
adc
icebp
je
xor
fmul
hlt
cmp
mov
lock
ret
adc
out
jmp
xor
nop
mov
std
sahf
scas
fnsave
pop
arpl
push
imul
in
pop
jb
or
pop
loopne
ljmp
sbb
fiaddl
jne
je
cwtl
and
mov
jecxz
mov
adc
fwait
mov
jecxz
ja
dec
mov
inc
shl
sub
fistps
in
icebp
addb
add
push
test
jb
push
ss
mov
cltd
cs
mov
xrelease
cmp
in
cld
imul
jl
inc
movsl
cld
popf
jg
add
dec
xchg
sub
outsb
subb
mov
or
and
cwtl
sbb
mov
in
add
push
popa
jl
dec
ja
mov
sbb
shrl
rorb
ret
repnz
adc
jmp
dec
jmp
jns
cmp
lods
int
cmp
xorl
mov
rorb
shrb
movsb
pop
imul
cmpsl
cmp
cmp
push
shrb
inc
dec
es
out
cmp
sar
jns
mov
xchg
or
mov
and
int3
sub
aas
jecxz
xchg
fdivrs
andb
cmp
fdivs
mov
dec
or
xor
ror
pushf
lret
es
lret
clc
xchg
xchg
lcallw
jle
pop
sti
pop
cwtl
lock
cmp
and
in
jmp
jg
mov
jne
jo
and
jle
out
stc
xchg
in
pop
addr16
jnp
repz
add
jns
pusha
fidivrs
out
repnz
pop
imul
jle
adc
mov
add
xchg
fwait
ret
nop
in
jmp
test
clc
nop
std
jmp
mov
add
hlt
inc
cli
xlat
inc
pop
mov
push
jmp
pop
jmp
cmp
push
dec
scas
inc
pop
leave
jae
push
popa
push
pushf
imul
lcall
dec
into
into
test
sub
xor
push
in
push
mov
jbe
repnz
adc
add
ds
jne
lock
xor
xchg
or
add
mov
sarb
test
inc
jbe
or
movsb
cmp
xor
or
in
arpl
mov
jmp
fcoms
repnz
daa
dec
jno
loopne
and
push
test
test
inc
aas
jb
movsl
iret
xchg
xor
cld
cwtl
sub
lods
adcl
out
sbb
dec
push
or
lret
sbb
lahf
mov
fdivrs
setns
sar
pop
xchg
jnp
dec
subl
cli
in
jb
shl
cmpsb
loop
adc
int3
push
cmp
sub
loopne
sub
xor
xor
mov
mov
or
ljmp
or
sti
jno
pop
outsl
pop
mov
jns
test
xchg
mov
add
insb
aad
pop
aas
fs
int3
in
xchg
cs
xchg
fisttps
jge
jbe
jg
mov
aaa
mov
cmp
lret
xor
dec
bound
add
stos
push
jle,pt
dec
inc
loopne
add
or
js
or
push
movsl
enter
dec
dec
gs
rorl
rorl
rcll
es
mov
push
lock
sbb
data16
fs
xchg
cmp
xchg
es
jmp
popf
data16
lods
iret
add
inc
and
xor
sub
das
xor
push
gs
popa
in
mov
sub
fsubrl
jns
mov
push
sbb
pop
cmp
faddp
ja
mov
mov
pop
test
or
aam
orb
dec
push
xchg
jne
mov
cwtl
add
dec
push
dec
mov
aad
mov
jo
out
addl
sbb
mov
push
cs
xor
lcall
push
lods
sbb
outsb
jge
icebp
add
int3
popf
push
call
sti
jno
cltd
filds
fldl
stos
jp
in
cmp
popa
dec
mov
lods
outsl
mov
movsb
or
outsl
and
xor
xor
sub
rcll
add
outsl
push
into
cmp
sahf
test
jl
out
out
rorb
and
test
mov
shrl
cmc
aaa
fimuls
cmp
jae
cmpsb
and
int
or
mov
sbb
adc
test
sbb
popf
filds
add
cmp
daa
inc
clc
adc
pusha
xchg
in
and
sbb
jne
ja
outsb
outsl
lret
fimuls
mov
xchg
test
mov
push
mov
shll
imul
ja
xor
xor
pop
xor
fincstp
aam
call
cmpsl
cs
int
xor
jno
xchg
lret
mov
sti
cmp
std
push
int3
mov
test
mov
aas
and
cmp
dec
test
fmulp
int3
or
jg
sbb
std
push
and
cmp
sbb
add
inc
inc
sub
cmc
movsl
frstor
xchg
sub
dec
add
flds
test
ret
bound
dec
jne
mov
push
sub
xor
and
sbb
stos
and
cld
jnp
or
mov
leave
iret
adc
negl
lea
fs
lods
in
fdivrl
in
add
adc
lret
shr
xor
test
gs
jp
fcom
lods
add
xor
xor
add
in
dec
mov
mov
ret
in
jne
add
push
scas
hlt
cmp
inc
jmp
fistps
pop
shlb
dec
stos
int
and
shrl
mov
es
mov
stos
or
sbbb
ja
ljmp
sub
std
mov
pop
or
lcall
into
push
and
testl
sub
out
add
xchg
xchg
add
xchg
scas
cmp
or
in
cmp
pusha
mov
sub
mov
sub
mov
insl
pop
je
xor
test
mov
pop
andb
mov
pop
fwait
scas
xchg
jg
fincstp
sbb
dec
add
jl
mov
sbb
jbe
out
shrl
dec
jp
adc
xor
xchg
push
jmp
test
pop
xlat
mov
mov
sub
pusha
lret
mov
push
stos
push
inc
or
pop
adc
dec
out
push
add
mov
cli
addl
lock
mov
xchg
imul
mov
xchg
pop
pop
loope
adc
enter
movsb
std
cmp
mov
imul
fstl
pop
xchg
mov
sbb
sbb
xlat
mov
aad
xor
cmp
jp
das
sti
or
lds
lock
cwtl
mov
out
mov
fildl
fmul
and
mov
jle
lods
lahf
popf
cmp
in
rorl
mov
jle
shrb
and
lahf
adc
mov
ds
mov
insb
push
outsl
inc
xchg
test
pusha
mov
xor
addl
mov
pop
sbb
sbb
outsb
pop
xor
and
sbbl
test
adc
hlt
divl
mov
fldl
into
inc
mov
pusha
xchg
lea
xchg
rolb
xor
int3
inc
cld
xchg
cmpsb
gs
sub
pop
daa
mov
arpl
add
add
hlt
xchg
jb
cmp
push
push
testl
adc
mul
in
mov
outsb
push
cltd
pop
adc
mov
add
iret
pop
pop
add
add
fcomps
mov
into
and
and
imul
mov
ret
movsl
or
xor
popf
sbbb
mov
lods
sub
xor
dec
or
jge
imul
xchg
push
in
xor
insb
inc
nop
cmp
lret
aaa
insb
outsl
lcall
pop
ja
cmc
lcall
ret
inc
pop
repz
bound
add
sti
lods
xchg
mov
push
xchg
loopne
hlt
inc
je
aad
pusha
lcall
or
enter
testb
in
fistps
mov
daa
sbb
push
subl
mov
adc
inc
rcrb
arpl
adc
cmp
stos
shl
inc
pushf
loop
rcl
push
call
xlat
jge,pn
lds
add
jmp
mov
inc
arpl
bound
rorb
mov
fiadds
push
add
add
loop
inc
mull
mov
or
iret
jne
mov
sub
xlat
jge
lret
std
ds
stos
xchg
adc
ja
sbbl
lods
fstpt
mov
mov
mov
and
loope
add
nop
cs
mov
ss
loop
sub
inc
jo
add
xchg
mov
add
pop
dec
push
into
push
xor
inc
enter
xchg
inc
mov
pop
jns
enter
mov
fcmovnu
lea
popa
inc
outsb
loope
mov
or
movsb
push
jnp
mov
shrl
push
pop
lret
mov
pop
cs
mov
inc
jmp
aam
and
data16
xchg
jb
jmp
rorb
ja
pop
adc
shrb
xchg
mov
mov
jecxz
inc
shrl
sbb
in
jbe
lea
lret
inc
push
adc
sbb
push
lahf
mov
mov
xorl
cmpsl
in
mov
test
ja
cmc
mov
pop
nop
rcrl
dec
pop
cwtl
mov
rclb
call
inc
lret
cmpsb
scas
xchg
insb
add
mov
sbb
mov
inc
mov
and
cmpsl
fldenv
cmpsl
or
mov
adc
add
pop
sahf
cmp
mov
push
push
push
push
cmpsb
ficomps
and
xchg
jecxz
xlat
in
sub
cmpsb
jno
adc
sbb
jg
push
std
out
daa
sahf
lods
vmovaps
jg
outsb
jae
jmp
arpl
xor
jbe
xchg
add
insb
fmul
lret
aaa
push
xchg
xchg
mov
pop
dec
nop
cmpsl
adc
flds
data16
push
mov
xchg
push
je
pusha
mov
mov
out
decb
pop
and
inc
mov
sbb
mov
mov
movb
and
jmp
ljmp
jo,pt
sti
nop
or
xor
pop
sahf
movsb
fiaddl
cli
scas
pop
xor
lcall
xchg
fwait
nop
mov
pop
shll
push
and
mov
adc
lahf
push
mull
sub
dec
dec
stos
shl
pushf
das
addr16
shrl
or
pop
add
dec
cmp
mov
je
or
test
inc
outsb
mov
pushl
pop
cs
sub
or
adc
std
std
mov
xor
test
dec
xchg
into
adcb
pop
xchg
imul
xor
push
adc
sub
and
xchg
loop
sub
jmp
ds
push
and
xchg
cmc
adc
iret
pop
cmp
jmp
in
mov
pop
cmp
fwait
ret
jne
adc
mov
pop
jle
addr16
inc
inc
iret
mov
daa
mov
enter
pop
jecxz
pusha
sub
adc
test
pop
fimuls
cmpsb
mov
and
push
jnp
popa
fmul
and
adc
mov
fisttpll
pop
jge
pop
jmp
and
cmp
cmp
gs
enter
fisubrl
out
pop
add
dec
xor
mov
arpl
in
push
cmpsb
xchg
out
enter
push
je
pop
repnz
jmp
or
xor
and
add
dec
aam
or
or
js
lods
shl
push
adcl
lods
xor
cmp
jno
push
mov
pop
jge
cli
mov
scas
dec
inc
cli
or
push
add
pusha
pop
or
out
pop
sbb
xchg
data16
pop
push
or
rcrl
sbb
stos
push
stos
fsubs
aad
fstpl
popa
stos
cmc
jp
int3
dec
roll
push
roll
sahf
fnstsw
sub
and
aaa
pop
jno
mov
loopne
test
xor
pusha
sbb
push
jmp
scas
mov
adc
sar
or
xor
sub
popa
repnz
mov
ss
push
jb
pushf
movsl
es
lret
cmp
inc
push
xor
add
out
cmpsl
and
cmp
and
bound
jecxz
sub
arpl
and
xchg
stos
pop
idiv
into
inc
cltd
popf
ficoms
xchg
add
pop
out
jg
xor
cmpsb
loop
stos
mov
sti
fstps
hlt
scas
repnz
add
scas
nop
lea
push
cs
shl
fsts
dec
arpl
repz
mov
ficompl
scas
and
xor
and
pusha
out
aad
lret
dec
dec
cwtl
cmpl
jbe
pushf
icebp
out
jmp
mov
xor
lahf
sbb
cmp
cmp
dec
mov
mov
les
cwtl
cld
mov
je
mov
mov
pop
repnz
sub
addb
sarl
lea
sbb
push
push
aas
pop
lds
pop
test
jg
int
into
jo
mov
cmp
dec
mov
iret
inc
adc
scas
xchg
adc
add
cwtl
dec
andl
and
xlat
or
push
daa
rolb
or
test
push
dec
movsl
mov
jno
xchg
out
add
push
mov
pop
clc
jecxz
add
sub
lds
pop
xchg
scas
mov
imul
icebp
inc
out
or
and
incl
rorl
mov
aam
sbb
pop
or
mov
push
adc
fldt
bound
xchg
lods
insl
subl
cmp
loope
add
adc
push
lea
lea
and
jo
push
leave
aas
add
lcall
jno
outsl
out
decb
lret
idivl
enter
fistpl
leave
scas
add
bound
push
loope
sarb
sbb
push
fnsave
inc
scas
xchg
leave
pop
ret
addr16
movsl
int
movsw
push
lds
mov
inc
adc
fs
test
xor
call
cmp
dec
ficompl
and
or
jbe
adc
out
inc
in
sahf
test
clc
movsb
pop
mov
sti
cltd
pop
xchg
test
nop
push
lea
cli
pop
cmp
pushf
xor
mov
std
pusha
xchg
xchg
clc
ds
arpl
adc
dec
int
add
sbb
push
mov
xchg
dec
jne
clc
jmp
in
sbb
inc
xchg
dec
aas
pop
fcoms
push
test
int
mov
add
test
cmp
unpckhps
js
mov
jg
cmp
add
mov
pop
shlb
pop
add
pusha
test
dec
rcrl
rorl
inc
push
or
mov
dec
lods
outsb
mov
push
pushf
push
fdivrl
test
mov
mov
xor
xchg
mov
xor
sbb
or
negl
hlt
push
aad
pushf
mov
jmp
sbb
ljmp
xor
in
cmp
mov
dec
data16
pop
loope
aam
jle
outsl
jo
int
cmpsb
push
and
dec
cmp
inc
pushf
pop
push
das
add
sub
or
jb
sbb
mov
adc
inc
inc
jne
outsb
sub
mov
ds
es
iret
sub
mov
push
int3
ret
xchg
ja
and
xor
outsb
es
or
dec
sbb
jo
jne
insb
shll
jno
mov
je
leave
shlb
jg
rcr
or
insl
inc
fnstcw
adcl
stos
sbb
mov
xchg
fwait
push
mov
jb
jne
mov
xchg
pop
out
ret
and
inc
std
test
call
pop
mov
rcll
cmpl
adc
arpl
cmpsb
push
or
lds
xor
repnz
push
bound
cmp
or
mov
and
xor
jge
loop
xchg
mov
addb
xorb
dec
jg
lret
dec
and
inc
out
inc
inc
xchg
cs
out
cmp
dec
push
lds
outsb
inc
adc
jno
loopne
sbb
les
sahf
jb
test
insb
xchg
das
dec
lods
adc
mov
insb
fs
adc
mov
dec
in
shlb
pop
push
iret
pop
and
add
push
iret
pop
ficoms
xor
jb
and
cli
ficompl
push
insl
xchg
dec
cmpsl
and
mov
pop
xor
fcoml
sbb
mov
out
xchg
popa
inc
imul
roll
sbb
enter
pop
in
mov
loope
xlat
inc
popa
mov
cltd
adc
rcl
test
inc
xor
hlt
sub
push
ss
sub
je
gs
sbb
mov
mov
xchg
ret
shr
in
inc
mov
int
cld
and
xor
cli
daa
cmpsb
rcrb
xchg
popa
daa
mov
cmp
lds
add
lahf
xor
jae
in
dec
mov
dec
mov
pop
sar
out
mov
mov
daa
loope
pop
mov
mov
fistps
mov
add
cmp
loopne
dec
jbe
movsb
jle
insb
push
jle
movl
mov
pop
xchg
jno
add
xchg
sbb
mov
lea
mov
sub
shll
sub
add
push
sub
xchg
cmp
xor
cltd
inc
fistl
sti
lock
data16
xchg
and
cmp
gs
mov
cltd
dec
xchg
lcall
cmp
xor
mov
arpl
and
pop
movb
push
ja
popf
into
cld
mov
xchg
dec
fldenv
pop
fstps
cmp
rcrb
add
addr16
ret
mov
adc
inc
iret
enter
or
subl
inc
jl
fcmovne
adc
pop
mov
dec
mov
sub
dec
sbb
mov
adc
push
enter
imulb
enter
mov
inc
mov
xorb
call
push
add
inc
adc
jae
xchg
pop
jg
mov
xchg
jl
pusha
jp
inc
dec
xlat
scas
repnz
add
mov
sub
xchg
jae
fadds
cld
daa
jecxz
and
cmpsb
sbb
mov
mov
jmp
or
sbb
aam
push
stos
add
icebp
pop
sbb
push
out
xchg
call
enter
sub
sahf
cmp
jge
mov
push
jg
cld
popf
pushf
test
xor
repnz
jmp
and
stc
loop
int3
mov
jge
fs
push
push
ljmp
adc
dec
out
and
es
mov
mov
pop
ss
clc
lods
mov
mov
nop
cmpsl
and
out
mov
push
lret
fbstp
jae
insl
or
inc
rcrl
cmp
daa
scas
stc
jge
pop
jl
mov
sub
push
mov
dec
cwtl
cmpl
cmp
into
movsl
repz
ds
mov
jmp
ret
cs
imul
out
int
lahf
ret
sbb
cld
xchg
pusha
mov
dec
fstpt
push
xchg
aam
xor
call
jmp
jne
scas
pop
xchg
loope
sub
adc
test
imul
dec
xchg
jp
pusha
adc
pop
ljmp
push
inc
or
aam
movsl
xchg
or
fmull
cmp
shlb
lcall
ret
idivl
stos
shlb
les
test
mov
outsl
jno
mov
rcrb
jl
pop
mov
popa
mov
test
iret
fstpt
cmp
lahf
jg
pop
icebp
call
pop
sbb
aas
jbe
add
push
pop
jmp
lahf
push
push
jns
stc
aam
sbb
pop
jbe
cli
aad
outsl
jge
insl
cmpl
xlat
mov
xchg
mov
popa
jns
cs
insl
sbb
xchg
int
sub
aas
mov
adc
lret
and
xchg
sub
mov
jbe
in
mov
add
hlt
xchg
sbb
movsl
fs
aam
enter
sarl
inc
notl
sub
push
daa
sbb
mov
es
add
push
cmp
stos
pop
adc
cmpsl
cmp
xchg
rcll
fcmovnbe
movsb
insl
jnp
push
lods
sahf
or
sub
mov
push
sub
jmp
dec
sbb
mov
dec
stc
push
jle
mov
inc
lahf
test
fdivl
test
and
call
xchg
sbb
jbe
test
xchg
jo
cs
mov
divb
stos
stos
jno
fadd
dec
sarb
aam
mov
stos
loope
pop
xor
mov
jecxz
aaa
or
adc
mov
std
out
fwait
lcall
pop
lods
fs
inc
xchg
mov
leave
pop
mov
movsb
mov
mov
das
pop
lahf
mov
push
in
mov
adc
cmp
shr
cmp
in
lret
xchg
hlt
gs
inc
out
xchg
inc
stc
sub
or
subb
pop
mov
loopne,pt
loop
adc
insl
testb
inc
dec
sbb
xchg
jnp
dec
inc
push
jmp
pop
or
out
icebp
testb
or
xor
mov
cmp
mov
aad
jno
loope
pop
cmp
xchg
xchg
mov
xor
jmp
adc
stc
jnp
and
mov
and
jmp
mov
sub
mov
aad
rorb
jle
adc
cmp
mov
ss
incb
sti
cld
adc
loop
popf
enter
and
gs
popa
loop
clc
cmp
pop
pop
pop
aas
fsts
cmp
std
fs
xor
shrb
data16
xchg
add
clc
xchg
es
scas
pop
xchg
sub
test
jecxz
jnp
xor
in
dec
stc
fmulp
lcall
lahf
mov
mov
int
scas
mov
cmpsb
or
and
mov
out
cmpsl
std
jno
or
mov
add
movl
lock
fwait
das
inc
pop
out
cmp
sub
roll
sbb
mul
cli
mov
adc
pop
int
mov
jno
mov
xor
jmp
in
xchg
cmp
sbb
xchg
fistl
lds
jge
icebp
dec
das
sbb
mov
jnp
fisubs
sahf
inc
out
xor
mov
scas
ljmp
fisubl
push
fdivr
fistpl
jmp
fdivl
js
icebp
sub
repz
lea
or
dec
out
sub
cs
ds
mov
mov
dec
add
push
cld
jmp
lods
fwait
sbb
sbb
jl
jle
outsl
fildl
add
std
movsb
enter
bound
cmpl
cli
sar
mov
inc
pop
daa
fdivrl
push
lds
int3
nop
sbb
mov
pop
push
stos
add
dec
mov
jecxz
movsb
test
repz
or
or
or
and
movsl
push
stos
dec
mov
or
and
adc
xor
pop
cmp
or
add
or
mov
mov
pusha
fcomip
aas
shll
jb
xchg
xor
sub
icebp
add
lods
dec
shrl
and
rorb
jb
push
into
xchg
mov
imul
inc
lahf
jge
xchg
das
aas
imul
rcrb
xchg
mov
nop
repnz
sub
pushf
xor
dec
xacquire
icebp
sbb
enter
push
xchg
cmp
in
nop
stc
popf
flds
dec
or
icebp
mov
imul
and
lahf
mov
lds
mov
cld
pushf
xchg
cmp
enter
iret
push
rdtsc
lods
sub
jbe
imul
test
les
push
xchg
push
mov
push
lret
sbb
and
mov
aad
lret
jne
or
mov
sub
or
in
cmp
imul
mov
sti
adc
jb
hlt
addl
ljmp
jl
loope
push
jo
ffreep
data16
push
pop
mov
in
cmp
rorl
jno
mov
pop
and
inc
pop
jne
stc
mov
or
push
mov
xchg
daa
cmp
sbb
sbb
xor
ret
popa
pop
cld
iret
pusha
sbb
insl
or
xor
test
and
lret
inc
pop
sbb
js
mov
xor
add
ficomps
lods
pop
sub
loopne
mov
add
sub
outsl
adc
push
aam
jl
jb
mov
sub
or
loope
scas
aad
mov
dec
mov
subl
xlat
out
cmpsl
add
rcrl
dec
fwait
lock
and
test
sub
clc
jp
lahf
jmp
mov
adc
mov
fimull
outsb
ffree
xor
mov
mov
dec
inc
xchg
outsl
adc
aaa
cmpsl
inc
das
arpl
loope
sub
mov
dec
roll
rolb
aas
dec
pop
jecxz
std
xchg
xlat
fisttps
or
inc
outsl
mov
sub
hlt
jb
sbb
cs
push
jecxz
inc
pop
cmp
xchg
jp
mov
add
popa
inc
test
imul
call
add
loopne
mov
int3
mov
aam
xor
ja
call
lea
jle
sub
push
nop
add
fimull
hlt
sbb
mov
mov
push
cmpb
roll
xor
mov
push
std
jle
sub
loop
out
mov
xchg
xchg
test
mov
daa
push
pop
push
xor
jge
adc
or
mov
adc
add
add
stos
imul
cmp
sbbb
xchg
hlt
out
js
imul
xchg
add
jae
sbb
or
movsl
pop
daa
cwtl
fsincos
add
lea
xchg
dec
jno
icebp
add
and
inc
shlb
stos
add
jo
or
sbb
xchg
lcall
fcoml
sub
jno
stos
xchg
movsb
jg
fdivs
adc
frstor
mov
popl
gs
fstl
mov
and
ds
sub
mov
mov
imul
rolb
xchg
out
and
or
inc
scas
mov
add
movsb
int3
jnp
xchg
push
pop
sub
mov
mov
xor
sub
imul
xor
push
mov
pop
cmp
add
mov
xor
push
mov
lcall
mov
sti
xchg
and
loopne
mov
pop
jmp
add
shlb
jl
mov
jbe
sti
outsb
arpl
incl
pop
fwait
stos
popa
cmp
enter
push
std
dec
push
mov
cs
pop
mov
adc
out
push
ss
push
xchg
mov
jg
push
jbe
jns
push
rcl
pop
fdivrl
rdmsr
xor
jb
xchg
lods
arpl
pop
and
mov
shrl
icebp
sub
in
pop
and
push
repz
stc
xor
or
fldenv
shll
inc
mov
mov
jecxz
inc
outsl
jo
std
mov
fidivrl
add
sbbl
into
xchg
or
fwait
je
jmp
and
push
lods
mov
xchg
das
jp
pop
jecxz
sub
in
jae
sti
lret
xchg
jge
push
jnp
mov
gs
or
es
mov
sbb
or
stos
or
cmp
les
test
test
ret
sub
cs
inc
aad
mov
sub
ret
pop
or
fidivl
push
ret
add
rorb
test
insl
fdivl
dec
lock
push
ret
and
shrl
cmp
cwtl
xchg
clc
bound
nop
jns
ret
xlat
psubsb
addr16
pop
and
outsb
adc
daa
leave
mov
mov
sti
in
adc
hlt
dec
mov
mov
dec
and
push
pop
out
enter
sub
mov
ljmp
mov
mov
std
addr16
xor
dec
dec
pop
xchg
dec
xchg
rol
push
addr16
sub
out
mov
popf
in
adc
sub
mov
shr
in
or
push
or
cmp
dec
inc
sahf
mov
das
inc
loope
data16
repnz
cmpsb
push
aad
fstps
xor
sub
mov
pop
nop
add
xchg
lds
lock
outsb
jl
sbb
daa
sub
mov
cmp
mov
fxch
sbb
cmp
sti
sub
pop
pop
mov
iret
daa
stos
insl
stos
lahf
push
jp
cld
lds
cmp
mov
cs
dec
xchg
pop
adc
fnstenv
and
out
xor
lcall
data16
mov
ss
mov
mov
and
ljmp
xlat
jae
testb
mov
das
das
xchg
pop
cmp
push
ja
xor
sub
repz
push
inc
sbb
mov
das
je
sbb
fdivrs
or
cmpsb
ljmp
shrb
ja
mov
stos
jne
or
ficompl
cs
sbbl
mov
cmp
and
stos
mov
sbb
sbb
add
pop
mov
xchg
dec
sarl
outsl
orb
push
test
jae
pop
mov
pusha
sbb
outsl
or
push
out
adc
pusha
js
aad
pop
jno
std
push
xor
adc
jmp
cmpl
or
inc
or
rclb
xchg
and
sub
or
dec
arpl
fcomip
ds
inc
mov
push
js
repz
and
subl
pop
leave
icebp
sub
loopne
aad
jne
shl
mov
pop
mov
ds
sub
adc
and
mov
rcll
dec
adc
outsb
mov
cld
les
mov
adc
mov
in
pop
jg
mov
push
sub
cs
mov
movsl
sahf
cmp
movsb
sti
popf
mov
dec
fisubrs
dec
lahf
and
push
mov
rol
jae
fucomip
jmp
push
pusha
pop
int3
cs
push
sbb
lds
dec
insb
mov
pop
dec
pop
cmc
push
xor
test
inc
dec
movsl
jecxz
cmpsl
cli
or
add
and
or
push
push
outsb
jnp
leave
out
sbb
cltd
jno
inc
dec
pop
lret
mov
scas
gs
inc
ret
loopne
and
cwtl
dec
cld
call
sub
cmp
mov
jno
add
sti
stc
inc
mov
imul
out
cmc
das
sbb
sbb
sti
mov
sbb
cmpsl
or
lret
repnz
int
test
jb
jge
gs
mov
outsb
mov
fisttpl
jge
push
clc
fldt
aas
xchg
inc
rcrl
stos
mov
pop
lea
sbb
xchg
fisubl
inc
fldenv
inc
mov
in
imul
dec
sbb
dec
sbb
mov
addr16
mov
cli
add
xchg
nop
aas
arpl
mov
scas
les
fists
in
js
repnz
sbb
lods
outsl
adc
js
int3
sub
jle
pusha
push
sbb
mov
push
fwait
push
jecxz
jnp
aam
shlb
leave
jmp
xchg
lea
test
orl
mov
sbb
jge
jp
dec
add
jb
push
sar
mov
inc
cmp
out
sbbl
cmp
cmp
adc
mov
dec
add
popf
push
or
out
dec
jmp
lret
fsubrs
jbe
mov
xor
pop
sbb
addr16
xchg
arpl
jge
mov
aaa
lock
add
out
int3
cld
adc
shr
push
pop
xchg
fnstsw
jmp
pop
jecxz
outsl
xor
lock
jns
pop
sahf
loopne
sbb
push
push
into
push
add
push
divb
xchg
inc
add
popf
aam
push
mov
inc
mov
cs
xchg
pop
mov
or
addb
mov
inc
outsb
jmp
mov
cs
pop
icebp
test
xchg
and
repnz
jae
imul
aaa
popa
stos
gs
jnp
sub
fmuls
in
insb
sub
xchg
add
push
jo
mov
repz
cmp
inc
loop
sub
mov
mov
jge
outsb
dec
nop
push
mov
arpl
or
dec
sbb
fucomip
or
ds
test
mov
push
add
jmp
sub
mov
out
fnstenv
sub
cmp
int3
or
mov
in
les
into
daa
popaw
lahf
pusha
xor
shll
and
rorl
mov
adc
fcoml
cs
test
cltd
pop
popa
loop
adc
add
xchg
jp
outsb
push
cvtps2pd
xor
aaa
int
mov
orb
pop
dec
push
jno
jb
jmp
add
jg
scas
push
cmpsb
mov
xchg
inc
ja
out
pop
inc
es
and
cmpsb
orb
dec
push
cmp
lret
adc
insl
in
arpl
push
adc
das
insl
mov
sbb
arpl
sub
outsb
pushf
xchg
xor
add
and
mov
adc
and
push
stc
inc
mov
clc
pop
lock
js
jg
cmc
jg,pn
and
dec
pushf
lret
mov
adc
popf
aam
pop
addr16
mov
mov
lret
and
jne
cmp
pop
aaa
pop
adc
out
dec
fisubrl
shr
push
push
mov
cwtl
insb
js
xor
cmpb
pop
dec
in
mov
scas
cmp
in
fidivs
push
ret
xor
push
addr16
mov
cmpsl
jp
cs
push
je
leave
mov
dec
pushfw
adcl
jge
bnd
je
ret
mov
mov
neg
jecxz
fsubr
call
ljmp
add
jne
and
jmp
xor
scas
or
mov
outsl
push
shlb
mov
leave
repz
faddl
shrb
clc
lods
ds
xchg
daa
jl
add
mov
mov
test
call
lret
inc
repz
mov
adc
jb
pop
push
cmp
outsl
loop
das
sti
es
xchg
adc
lea
stos
js
inc
addr16
xchg
xchg
mov
xor
mov
mov
mov
cltd
ret
inc
cmc
in
push
dec
pop
aad
mov
sbb
icebp
out
hlt
data16
jge
out
xor
lret
cmpsl
adc
adc
imul
into
xchg
dec
out
popf
addl
sub
sahf
dec
in
incl
push
sbb
jle
aad
ret
lods
and
xor
adc
xchg
subl
loop
rorb
adc
cmp
mov
popf
xchg
repnz
xor
mov
cmp
stos
stos
sbb
cmc
sbb
das
imulb
imul
pop
jae
xlat
xor
inc
orb
sbb
xchg
neg
int
cld
push
adc
movsl
dec
dec
fistps
dec
aaa
int3
fidivrs
lcall
pop
bound
cld
add
mov
mov
push
pop
jb
push
mov
lahf
out
sbb
jo
mov
jo
in
xchg
xchg
push
in
cmp
iret
cmp
mov
add
pop
mov
adc
sbb
dec
jmp
clc
notl
dec
sub
or
adc
jb
pop
imul
push
sbb
js
enter
pop
enter
sbb
mov
repnz
sub
xchg
pop
push
pop
and
push
pushl
aaa
xor
push
or
and
dec
or
pop
jmp
cmp
jl
mov
mov
push
sbb
cwtl
xchg
and
sub
outsb
jns
mov
mov
stos
mov
lcall
cwtl
out
bound
jb
das
imul
in
test
xor
lahf
inc
pop
pop
test
inc
lods
lret
bound
and
aad
fwait
les
cmpsl
or
cs
pop
adc
lret
push
shll
fldl
mov
popa
loopne
out
jbe
adc
fisttpll
insb
scas
inc
outsl
push
jmp
inc
out
aas
push
adc
lods
mov
stos
mov
adc
cmp
mov
pop
movsb
fstps
mov
xchg
jo
and
jne
ret
sahf
mov
mov
sub
data16
frstor
das
xor
ret
add
fs
movb
cld
adc
cwtl
cmp
pushf
sbb
ds
xchg
mov
test
cmp
mov
inc
icebp
cmpsb
stc
jne
scas
pop
jno
lcall
testl
sub
add
mov
xorb
aaa
jp
push
push
ffree
cli
inc
sar
mov
jl
test
pop
mov
repz
les
sahf
add
sub
add
daa
pop
test
xchg
fcomp
xor
in
icebp
jmp
or
fwait
xor
iret
push
xchg
test
lods
fwait
test
xor
push
sbb
mov
sub
pusha
pushf
pop
pop
push
dec
fiadds
int3
sub
outsb
mov
sbb
dec
mov
dec
aam
repnz
stos
xchg
pop
lea
repz
ja
xor
sahf
ja
lret
dec
movhps
idivl
lcall
es
or
mov
sub
xchg
xchg
std
hlt
js
add
inc
mov
cld
or
push
or
clc
inc
mov
in
inc
mov
out
rol
add
pop
dec
aas
dec
add
inc
das
or
imul
push
pop
int
sbb
pusha
adc
and
pusha
ret
out
loop
pop
sub
pop
xor
sti
mov
in
icebp
aam
andb
mov
jmp
out
hlt
push
fisubrl
hlt
arpl
test
mov
or
insb
insl
ficoms
mov
sahf
dec
lcall
std
pop
das
jne
lods
push
push
sub
lods
aam
inc
mov
dec
dec
insl
test
loope
mov
pop
xchg
and
dec
call
mov
inc
mov
lock
inc
jno
xchg
jp
and
cmp
mov
test
lock
jge
int3
aas
jg
or
addl
cmp
sub
test
and
call
xor
test
aas
jb
dec
loope
outsl
push
push
adc
int
icebp
outsb
das
mov
icebp
aad
mov
cltd
out
in
bound
out
adc
cmpsl
pop
into
push
test
loope
jo
fcomps
cmp
inc
and
push
into
push
sub
movsb
or
cli
insl
out
sbb
inc
test
outsb
and
or
pop
xor
pop
stos
fsubrl
pop
lret
lds
mulb
and
adc
mov
mov
loope
idiv
inc
xchg
ljmp
in
scas
add
dec
sbb
insb
and
pop
xchg
loop
fcmovnb
push
ret
ror
xchg
cmp
dec
mov
xchg
mov
test
mov
pusha
or
shrl
in
and
inc
dec
mov
sti
lret
andb
je
mov
fwait
xchg
sub
xchg
mov
add
push
push
cltd
xchg
sbb
mov
test
ret
fbstp
push
out
mov
lods
enter
orb
or
cmp
jg
push
add
push
into
mov
cld
hlt
fdivrl
pushf
fsubrs
cmp
dec
test
sub
mov
inc
mov
push
insb
rcrl
loop
mov
and
sub
and
jg
xchg
and
ret
adc
xchg
dec
cmp
jg
fldenv
mov
adc
pop
cli
adc
sahf
std
ficomps
es
cmp
insb
jp
xchg
mov
lret
adc
loopne
ror
shrb
mov
push
mov
mov
and
add
inc
pop
movsl
ja
mov
out
or
dec
dec
cmpsl
outsb
cmp
mov
and
push
push
xchg
inc
cmp
gs
clc
sbb
xor
lret
or
mov
stc
leave
lock
int
push
mov
fucom
divb
std
ds
push
ja
cld
inc
lahf
imul
popa
inc
lods
sbb
inc
xor
mov
sub
xor
xchg
xchg
push
into
mov
int3
int
lret
mov
sbbl
mov
jge
insb
pop
add
pop
das
jb
jl
cmp
mov
sti
and
inc
fwait
dec
lods
fwait
out
mov
push
rep
or
out
xor
push
call
lret
mov
insl
mov
adc
aad
jbe
aaa
pop
outsb
sub
or
scas
cmp
xchg
jns
pextrw
add
in
jns
rcll
dec
gs
stc
jmp
sbb
stos
fidivrl
xchg
insl
xchg
fdivl
leave
mov
pop
xlat
popa
sbb
cmc
out
sarb
inc
cmc
add
inc
andw
add
outsl
std
dec
inc
stos
pushf
cmpb
mov
push
faddl
shl
sub
not
pop
jb
js
repz
push
js
cmp
mov
pop
mov
sbb
lock
fcmovnbe
push
mov
or
repnz
lods
outsl
out
sub
sbb
inc
inc
pop
xorl
add
nop
in
test
add
or
ss
stos
pop
xchg
clc
jl
fcmovnu
cmp
add
cwtl
rol
add
push
lret
mov
dec
sub
jno
mov
mov
cmp
test
sbb
call
jne
add
sbb
xor
pop
pop
or
fucomi
pop
or
cmp
mov
pop
daa
mov
dec
mov
mov
scas
sub
aas
cmpsb
ds
sbb
in
ret
test
and
sbb
push
dec
je
add
mov
xchg
xchg
xor
shrb
popf
xor
insl
mov
adc
pop
or
dec
out
push
sub
popf
inc
mov
test
mov
test
mov
xchg
in
out
xchg
push
daa
divb
cmp
popa
xchg
dec
sub
addr16
cmc
xchg
out
push
ss
das
out
in
push
fstps
xor
movsb
mov
mov
sub
rcr
std
mov
hlt
rcrb
mov
add
jg
pop
add
and
imull
lret
cmp
rorl
mov
jp
fildl
mov
push
xchg
fisttpl
or
loop
lret
imul
popa
rcrl
mov
dec
fldenv
xorl
pop
loop
mov
sti
call
popl
arpl
push
scas
lret
mov
mov
adc
fdivs
fsubrp
push
cmpsl
inc
idivb
push
mov
mov
sbb
push
out
add
mul
and
lock
push
xchg
pusha
xor
xorl
rol
jmp
and
movsl
pop
imul
sbbb
lds
cmc
lret
aam
push
call
sub
xor
xchg
fisubs
aas
dec
inc
inc
xchg
inc
ja
inc
into
push
loope
bound
dec
pushf
xor
pusha
or
xchg
cmp
cmp
and
jnp
in
xchg
mov
imul
jmp
jne
outsl
add
and
mov
test
pushf
push
cmp
xchg
enter
fwait
je
inc
lret
mov
das
push
inc
imul
xchg
testl
mov
data16
jl
and
loop
imul
cmp
xor
mov
js
dec
paddsw
loopne
cmp
and
add
rcll
mov
add
inc
or
mov
or
sub
sub
nop
into
sub
mov
add
or
push
xchg
pop
lahf
xchg
and
mov
test
pop
div
pop
in
dec
leave
mov
xor
mov
ret
sub
push
ret
and
jecxz
push
ficomps
add
pop
sti
jae
xor
aaa
jb
mov
sub
subl
repz
or
cmpsl
mov
fists
ds
adc
jge
adc
or
add
int3
imul
add
mov
lds
punpckhbw
fs
movsb
sbb
test
pop
push
jnp
sbb
inc
in
ret
mov
call
cs
push
pop
ja
je
adc
test
add
das
arpl
mov
adc
xlat
sub
dec
jl
popf
xchg
loopne
mov
xchg
inc
stos
and
mov
ss
push
dec
leave
xor
jle
mov
or
in
jp
in
mov
bound
stc
jo
fs
cld
push
cld
popa
jb
cmpsb
repnz
rcll
daa
sub
or
ds
movsb
pushf
jmp
and
sub
jp
notb
test
xor
popa
ljmp
les
fcomps
xchg
pop
mov
insl
int
pop
xlat
outsb
adc
mov
fwait
cli
imul
jmp
std
push
incb
or
pop
mov
inc
mov
shlb
adc
xor
daa
fiaddl
sbb
outsl
scas
and
leave
mov
jo
jl
sub
push
mov
mov
call
insl
pop
std
sahf
cwtl
ficompl
scas
pushf
out
pop
xchg
adc
pop
in
insl
add
or
insl
ss
dec
pop
push
cmp
mov
leave
cmpsb
jl
imul
push
xchg
or
test
cmp
add
xlat
testl
push
cmp
in
jns
xchg
popf
shrl
push
lea
pop
dec
lods
andb
dec
sub
daa
inc
icebp
and
inc
xchg
mov
xor
data16
pop
addr16
mov
leave
jmp
daa
lea
pop
mov
imul
xchg
outsb
push
cmc
xchg
iret
inc
test
lret
test
xor
pusha
inc
mov
enter
test
fs
icebp
daa
cmpsl
hlt
push
and
les
push
cwtl
notb
jae
testb
push
sbb
cmpsl
mov
sahf
jne
push
int3
jne
jno
scas
adc
xchg
lods
xor
pushf
sub
test
in
cmp
imul
xor
and
icebp
in
mov
jecxz
pop
or
mov
push
lcall
mov
push
icebp
lahf
pop
cmpsl
dec
insl
push
int3
std
ss
roll
sub
jne
cmp
cmpsl
adc
fs
addr16
shll
loope
and
insl
inc
dec
cmp
fidivrs
std
mov
adc
xchg
sti
pop
jecxz
cld
and
mov
sub
sarb
scas
lods
xchg
inc
push
cmc
ds
iret
fisubs
lds
mov
pushf
mov
push
pop
mov
xchg
cwtl
popa
xchg
jmp
mov
pop
aaa
adc
cmp
jo
sub
cmp
pop
aaa
dec
fidivrl
adc
mov
mov
pop
adc
cmp
cld
cmp
addr16
fldt
js
aaa
sti
imul
scas
push
les
je
cmp
and
stc
fisubl
mov
mov
cmp
xor
hlt
mov
insl
push
loopne
callw
xorl
mov
cmp
ret
inc
sti
xchg
repnz
xor
jge
adc
in
and
call
pop
aam
nop
or
xchg
or
jmp
rcll
jmp
lods
roll
jp
fistpll
int
xor
cmpsb
mov
add
sarl
jle
mov
or
push
loopne
sub
repz
loopne
mov
std
fisubrl
lods
or
out
mov
adc
je
popf
aaa
inc
jle
pop
imul
pop
dec
movl
jp
insl
pop
out
push
pop
pop
jge
leave
imulb
and
das
out
mov
sub
add
fwait
cmp
fs
jmp
add
sbb
mov
jle
adc
psubq
fwait
add
aaa
push
pop
jg
sub
or
push
inc
push
repnz
xchg
pop
and
movups
loopne
add
mov
xor
aad
hlt
or
arpl
cmp
xchg
sub
pushf
mov
mov
lret
jnp
push
dec
sub
dec
jle
dec
stos
pop
iret
gs
mov
leave
movntq
out
mov
push
iret
jae
xor
test
xchg
mov
rcrl
jns
aam
outsb
add
lods
lods
insb
cmp
adc
and
iret
sbb
rep
sub
mov
js
fs
adc
lret
iret
repnz
xchg
jo
mov
popf
cli
push
pop
rolb
inc
test
add
aaa
dec
push
scas
fidivrl
lea
and
fyl2xp1
fildl
mov
sub
lods
cltd
jecxz
cmp
shl
into
das
adc
cli
jo
add
mov
call
push
push
lods
jmp
pop
outsb
dec
pop
ja
pop
or
cmp
subl
pop
int3
out
sarl
sub
pop
ljmp
mov
pop
adc
dec
push
cmp
or
pop
and
loopne
mov
pop
mov
inc
jo
pusha
push
jno
push
inc
nop
jle
pop
filds
gs
push
fwait
rclb
in
push
clc
cld
jae
xchg
mov
dec
aas
call
loope
push
sbb
out
pop
inc
pop
sbb
inc
icebp
pop
fldenv
jmp
outsl
shlb
data16
loope
push
jecxz
rcrl
inc
int
and
cmp
and
lock
mov
imul
pop
les
jl
xchg
insb
xchg
push
jle
sub
sbb
fwait
or
jb
mov
lods
fs
ds
shlb
xchg
jle
leave
xchg
jae
scas
ds
inc
jg
and
and
loop
add
sbb
mov
iret
addr16
cmp
push
sub
and
dec
dec
loopne
xor
loope
and
xchg
pop
mov
jmp
je
sub
dec
push
xchg
jg
ss
mov
rorb
shlb
imulb
push
sbb
mov
push
cwtl
mov
jecxz
push
mov
jmp
scas
push
leave
lock
hlt
dec
loope
xor
mov
adc
xchg
inc
fldl
add
ja
mov
imul
adc
scas
popa
fs
out
dec
clc
mull
ficompl
jl
out
mov
mov
cmpsl
popa
cwtl
aas
movsb
insl
or
rcr
mov
rcl
imul
mov
dec
ret
in
mov
aam
ret
cmpsb
scas
add
xor
jo
jo
addr16
adc
cmp
jg
mov
ss
or
or
push
jg
xchg
xchg
sbb
cmpsl
jmp
enter
jae
movsb
and
ja
loop
fiadds
js
mov
cmc
xor
mov
bound
filds
inc
ret
jb
mov
xor
enter
or
and
out
pop
dec
int
sbb
jmp
inc
pushf
and
mov
aad
xchg
scas
dec
imul
mov
outsb
cli
pushf
push
inc
aam
js
add
pop
mov
jno
mov
adc
pop
decb
gs
adc
cmp
mov
jmp
cmp
std
jo
adc
jecxz
push
jl
adc
xlat
mov
scas
ss
mov
mov
adc
mov
fcomps
aad
push
dec
fisttpl
xchg
sub
adc
sub
pop
dec
mov
sub
adc
sbb
int
cmp
adc
add
sub
andl
in
or
mov
or
and
test
sbb
popf
mov
movsl
lods
lcall
fists
jecxz
outsb
cmp
fsubrl
mov
int3
push
cmp
std
adc
mulb
iret
leave
jbe
push
aas
pop
and
dec
mov
mov
in
xchg
addb
cmpsl
mov
ds
xchg
push
lock
mov
jbe
mov
xchg
cmpsb
iret
lea
js
mov
ror
xor
pusha
daa
and
pop
lret
jge
mov
xchg
pop
std
bound
sub
mov
call
in
adc
adc
neg
xorl
push
imul
std
mov
cmp
inc
bound
scas
pop
mov
push
sti
sub
fdivl
mov
ss
rcrl
cld
in
xchg
adc
aad
dec
jecxz
pusha
imul
lret
push
push
loope
add
cmp
inc
mov
mov
cmp
mov
add
and
sbb
mov
insb
sti
push
sub
popa
mov
pusha
push
mov
out
xorl
jg
je
jo
pusha
dec
xchg
jle
adc
popa
loope
sub
push
cmp
std
sbb
fstl
das
or
xchg
pushf
sahf
lahf
insl
lret
imul
cmp
inc
pop
test
pop
or
cmp
inc
cmp
jbe
mov
shll
sbb
repz
leave
mov
bound
mov
mov
jg
rcr
ret
or
push
dec
out
flds
mov
push
in
sub
cltd
push
std
ret
insb
mov
in
pop
pop
inc
adc
enter
sbb
shll
adc
cli
fimull
scas
inc
cld
loopne
loopne
push
dec
push
xor
lret
inc
push
mov
lret
xchg
push
xor
jns
popfw
inc
or
cmp
das
xor
cli
popf
or
call
add
mov
sarl
dec
xchg
sub
loopne
repnz
lods
lods
inc
icebp
mov
std
mov
sub
repz
or
and
push
jmp
out
test
sub
sbbl
test
popf
stos
adc
out
inc
pop
in
mov
clc
cmc
xchg
jmp
and
sarl
mov
and
aad
push
inc
sbb
jne
mov
jo
shl
sub
mov
mov
and
je
and
xchg
jb
sbb
adc
push
pop
mov
lea
mov
mov
adc
sahf
clc
cmp
cmpsl
jb
sub
xchg
in
sbbb
out
lods
enter
test
sti
mov
or
pop
cmpsl
xchg
dec
enter
sbb
mov
and
xor
ja
negl
xlat
xchg
orl
push
in
rorb
test
mov
sub
sub
xor
mov
jb
mov
add
aad
shl
mov
pusha
jae
push
scas
xchg
add
inc
jno
xor
sub
dec
jmp
shlb
jp
lahf
imul
imul
pop
adcb
mov
outsb
movsl
cmpsl
lcall
rcrl
pop
addl
mull
insb
popa
sbb
lods
call
lea
push
movsb
andb
fs
adcb
sbb
out
scas
ja
dec
fisubrs
pop
and
cli
pop
dec
xor
add
mov
adc
outsb
jp
jge
inc
aas
nop
cmp
shrb
iret
or
fisttps
rolb
mov
fisubrl
inc
xchg
test
jge
mov
add
subl
xchg
stos
cmc
gs
ljmp
cltd
scas
lock
pop
insl
test
out
idiv
sub
out
aaa
shrb
jne
out
adc
fisubrs
mov
ds
pop
in
insl
enter
mov
adc
mov
pop
adc
mov
movsl
out
mov
xor
lcall
mov
dec
xor
loop
cmc
cwtl
shl
in
fsub
rorl
xor
insl
mov
addl
loope
sub
dec
cmpsl
stos
jno
mov
lahf
cli
insl
in
inc
inc
mov
add
imul
test
push
jae
iret
lcall
in
sbb
adc
nop
adc
jle
ljmp
jge
xor
lods
in
xor
mov
orb
adc
test
pop
inc
inc
out
into
dec
or
fs
push
xchg
and
push
sbb
pop
js
scas
lcall
dec
adc
gs
pop
iret
sub
ret
pop
fwait
repz
orb
int3
mov
pop
adc
sbb
xchg
sbb
jge
jg
cmpsb
pop
push
xorl
jno
jae
push
test
fwait
adc
dec
rol
jne
adcl
adc
pop
jmp
popf
imull
testb
cmpl
icebp
cli
scas
jo
test
mov
mov
jp
in
faddl
pop
xchg
aaa
jmp
cmp
xchg
inc
add
into
cmp
mov
jle
sub
jecxz
repz
cmp
popf
cmp
inc
and
jle
mov
and
mov
cmpsl
icebp
in
leave
out
xor
pop
pop
ficoms
push
or
test
outsl
cmp
mov
xchg
mov
repz
sbb
jge
ljmp
mov
es
jmp
xchg
inc
test
stos
ret
ss
insl
in
test
add
mov
pushf
test
lods
stos
ja
cmc
push
mov
xchg
push
push
sbbb
lea
inc
outsb
mov
push
push
jo
fnstcw
xchg
mov
rcll
std
int
pop
sbb
in
and
push
int
inc
xor
add
pop
xlat
ljmp
jo
les
xchg
xchg
dec
pop
in
push
call
pop
out
iret
xchg
lahf
inc
xchg
dec
sub
rorl
movsb
cmp
push
out
ret
push
arpl
fbld
add
xchg
adc
in
xchg
rcrl
stos
xor
sahf
add
test
cmp
push
push
rorl
push
or
ret
stos
adc
leave
lods
in
xchg
or
jae
dec
je
in
xlat
pop
add
divl
xchg
or
jns
xchg
mov
jl
fwait
inc
lods
mov
add
out
inc
sahf
push
int
and
push
xchg
mov
cmp
out
iret
setae
movsb
pop
jne
xor
and
and
adc
add
push
mov
dec
push
mov
inc
loop
pop
scas
sbbl
cwtl
dec
xchg
cli
inc
test
xchg
mov
jb
pop
cmpsb
cs
mov
mov
inc
cmp
push
cs
leave
dec
pusha
mov
fs
ja
push
jg
mov
or
dec
dec
mov
or
rcrb
and
dec
sarb
repz
mov
jmp
je
pop
test
fstps
pop
pushf
test
sbb
cmp
sbb
mov
sahf
jmp
jge
pop
arpl
push
iret
test
sti
in
shlb
mov
push
sbb
mov
int
xchg
fucomi
jae
push
cltd
leave
imul
mov
xchg
and
mov
mov
or
xchg
or
sub
dec
in
mov
xchg
leave
jnp
and
imul
cmp
jge
mov
xchg
xor
pop
inc
pop
pop
or
lock
sbb
dec
fwait
xchg
mov
xchg
outsl
jl
rcr
mov
push
shlb
and
lods
xor
stc
stos
addr16
sti
dec
xor
addr16
inc
mov
fcmovne
cld
lcall
mov
fnsave
stos
jge
cwtl
inc
sbb
cltd
pop
sbb
pop
insl
pusha
imul
sub
hlt
xor
das
mov
in
js
repnz
cmp
mov
dec
aas
ret
pusha
out
lahf
sarl
or
sub
mov
fwait
sub
fcmovb
leave
cwtl
add
outsl
dec
sbb
add
orb
popa
popa
jecxz
iret
insl
lea
cmpsb
cmc
hlt
inc
push
iret
leave
fildl
cmp
pop
cmp
cmp
cld
mov
jo
mov
sahf
ljmp
xlat
jmp
xor
addr16
cld
movsl
bound
pusha
in
cmpsb
xchg
aam
ss
enter
xchg
into
or
stc
pop
in
sub
in
std
xchg
fsub
mov
inc
push
cmp
rcrl
repz
daa
sti
xor
jbe
inc
out
call
and
popa
lret
jmp
inc
pop
xchg
scas
and
inc
or
sbb
pop
hlt
rclb
dec
push
dec
xor
push
inc
push
cmpsl
dec
mov
add
lea
xor
cmp
test
xor
adc
mov
xchg
and
outsb
mov
icebp
out
xor
test
xchg
jae
jmp
xor
dec
sbb
out
imul
mov
xchg
inc
pusha
mov
loope
push
stos
push
pushl
push
in
mov
xchg
jle
mov
pop
aad
cltd
leave
icebp
mov
sub
inc
ss
dec
movsb
or
inc
xor
fistps
ljmp
ficoms
add
inc
pop
outsb
ret
jnp
push
xchg
xor
sahf
js
cs
xor
lock
sub
inc
jecxz
pop
pop
pop
mov
mov
xor
pop
in
lods
mov
bound
push
or
jle
and
jno
js
sbb
mov
fsubp
xor
mov
shrd
dec
sub
imul
and
in
or
pop
inc
adc
scas
fidivrs
mov
imul
aas
in
pop
jp
stos
mov
test
lods
loop
jnp
lock
pop
gs
call
jp
cltd
addr16
xchg
mov
pop
jae
call
cmp
or
mov
shl
xlat
sub
nop
cmp
push
aaa
inc
pop
inc
sbb
sub
sbb
dec
mov
lock
cmp
daa
mov
lds
aaa
das
test
push
inc
xlat
dec
out
test
pop
push
mov
inc
cmpsb
loope
shll
xor
fnsave
sub
add
out
ficomps
adc
mov
inc
cmp
sbb
out
hlt
xchg
xchg
out
or
jmp
mov
adcl
rolb
sbb
pop
dec
push
ljmp
xor
mov
inc
mov
mov
repnz
and
popa
cmp
mov
and
loopne
mov
inc
cmp
cmpb
jge
mov
subl
pop
pusha
outsl
jmp
xor
movsl
fildl
xor
mov
repnz
xor
stc
cltd
fidivl
sub
mov
add
adc
inc
sub
and
sbb
mov
add
lahf
add
hlt
jo
imul
fwait
movsl
bound
dec
xlat
bound
jae
negb
push
dec
aam
faddl
loopne
pop
pop
out
inc
pop
adc
cmp
xor
loope
divl
out
ds
icebp
in
jg
int3
xchg
subl
xchg
dec
jmp
dec
dec
stc
and
cmpsb
stos
xchg
loope
std
xor
or
jmp
xor
ja
jle
xchg
mov
sbb
sub
cmpsb
ret
mov
movsl
cmpsb
add
sbb
clc
mov
ss
sahf
add
jbe
add
daa
jge
fucompp
xor
jae
mov
ljmp
out
outsb
in
jno
push
out
inc
in
dec
dec
insl
cmp
lea
jge
jbe
dec
and
jle
jne
push
mov
mov
inc
or
mul
jmp
out
adc
ja
push
arpl
adc
mov
test
orb
jbe
lea
jb
outsl
mov
jne
out
xchg
or
mov
ds
mov
adc
push
rcll
aad
test
mov
mov
sub
roll
sbb
jg
jae
fwait
shll
push
sub
aad
cmpsb
mov
mov
mov
xor
scas
jnp
cmpsl
mov
call
fs
jl
mov
in
out
xor
jns
stos
and
cmpsl
cmpsb
jle
testl
jge
add
or
sar
and
xchg
pusha
sub
daa
js
inc
inc
xor
mov
sub
mov
inc
sti
ss
in
cmp
out
push
jo
or
push
cli
cmp
push
imull
dec
call
inc
mov
xchg
lcall
sub
cmp
rcrb
mov
mov
aas
jl
jnp
mov
out
fwait
dec
push
sub
pop
hlt
xchg
mov
aaa
dec
outsl
and
sbbl
adc
xorl
pop
or
lods
pop
fistpl
repz
or
adc
in
ds
dec
or
imul
lret
outsl
xchg
outsb
aaa
or
mov
xor
bound
jge
sbb
xorl
xor
adcb
ss
xchg
int
pop
in
cmp
and
pusha
fldcw
add
mov
movsb
out
in
lods
mov
loop
out
xor
adc
pop
sub
sub
fstp
outsl
xor
sahf
xchg
pushf
orl
pop
aam
cmc
leave
jae
xor
push
loope
jno,pn
add
push
scas
mov
fistpl
pop
xor
adc
loopne
adcb
mov
add
mov
push
pop
in
jbe
es
and
xchg
fwait
aad
xchg
int
or
insl
hlt
cmp
inc
rcll
xchg
popf
push
sahf
outsl
add
lock
mov
mov
mov
xorb
mov
popa
sub
sbb
loop
icebp
addr16
push
movsl
outsl
cmp
or
addr16
mov
and
mov
mov
in
je
dec
aad
push
fsubs
mov
movsb
das
adc
push
and
pop
subb
inc
ss
jecxz
test
xchg
lcall
arpl
pop
into
imul
rcrb
test
aad
push
add
xor
aaa
push
and
das
sarb
push
xor
sbb
aas
xchg
call
out
push
xchg
lret
mov
fistpll
cltd
ds
les
hlt
aam
mov
push
mov
cmp
enter
xchg
jmp
xor
cmp
dec
jns
das
or
mov
fisubl
cmp
cmpsb
jo
cmpsl
lahf
hlt
leave
pop
lahf
lea
dec
pop
je
aam
jnp
inc
sub
int
imul
ficompl
add
into
repnz
scas
out
sbb
mov
mov
pop
fadds
addr16
divb
daa
inc
and
mov
or
fstpt
pop
dec
and
popa
sub
mov
lds
int3
les
mov
outsb
js
add
gs
mov
xor
bound
xor
arpl
mov
sbb
cmp
out
icebp
fwait
xor
pop
mov
imul
insb
dec
cmc
xor
jns
xchg
lods
dec
repz
pop
cs
sti
xlat
jns
jmp
cmp
xchg
dec
movsb
insl
and
sbb
cmc
adc
dec
mov
outsb
and
inc
sub
sbb
push
jb
aad
cwtl
push
imul
dec
dec
push
add
or
aam
mov
imul
ds
push
jecxz
and
enter
sbb
in
and
loop
push
or
mov
cmp
je
push
push
or
in
mov
popf
popl
and
ja
loope
mov
dec
stc
or
and
cmc
cmp
xor
cs
add
out
mov
push
sbb
sahf
leave
inc
xor
cmp
mov
push
loope
mov
xor
push
mov
jbe
icebp
pushf
inc
in
jo
pushf
lret
xchg
sub
ret
xchg
and
xchg
sarb
adcb
xchg
lds
lret
jmp
xchg
add
aam
sbb
xlat
ret
std
jne
cmp
adc
or
sbb
ja
mov
mov
add
in
dec
sbb
jg
movsb
fldl
pop
sub
shlb
mov
adc
push
cld
shr
movsb
jge
addr16
repnz
gs
outsb
test
pop
cli
push
inc
sahf
seto
mov
cs
rorb
or
mov
stos
loop
rcll
xchg
repz
fsubrl
adc
mulb
popf
lret
ss
lock
mov
fldl
mov
fmuls
jo
arpl
cmp
add
pop
loopne
sti
ret
jl
mov
sbb
jecxz
mov
pop
cmp
lcall
ljmp
add
mov
les
xchg
ja
xchg
inc
in
std
test
xchg
mov
lea
dec
testb
pop
lahf
call
sub
dec
xchg
add
xor
sbb
xor
std
inc
xor
xchg
nop
pop
dec
sbbl
out
mov
mov
cmpsl
bound
push
xchg
xchg
cltd
insl
inc
jl
mov
movsl
hlt
pop
in
xchg
ret
data16
cmpb
loop
xor
add
cmp
mov
mov
xlat
sub
loop
push
lea
jmp
push
jge
sub
mov
pop
icebp
imul
cmp
mov
cmpsb
or
minps
mov
or
and
out
xchg
icebp
stc
sbb
stos
mov
dec
int3
test
cmp
lret
pop
pop
loop
mov
mov
clc
ret
jg
shlb
lahf
pop
int
and
or
xor
xor
fstl
mov
mov
scas
mov
sbb
adc
loop
stos
cmp
or
mov
adcl
add
out
inc
cmp
mov
enter
ror
sub
mov
shl
inc
sub
fists
pop
jmp
addr16
jo
das
jae
mov
sub
mov
pop
sbbl
out
mov
add
aaa
aas
clc
lods
fucomi
or
mov
dec
sbb
int3
out
insb
xor
fwait
jmp
mov
push
add
aad
popf
fmuls
rol
pop
gs
rorl
inc
and
fcomps
aad
cltd
inc
ja
nop
into
mov
pminub
mov
int3
mov
fstpl
ljmp
xor
mov
jbe
dec
add
inc
jg
dec
sbb
out
push
movsl
aaa
shll
sbb
xor
inc
and
pop
sub
mov
xor
movsl
test
mov
aaa
xchg
push
fdivl
in
pop
push
pop
in
mov
cmc
rol
idivb
fiaddl
cmp
inc
das
xor
scas
cmp
stc
jns
pop
lret
dec
mov
cmpsb
test
mov
hlt
mov
add
lcall
mov
or
and
mov
sarb
scas
out
xchg
repz
add
xchg
aad
aam
mov
fisttpll
std
icebp
js
mov
pop
ret
mov
dec
es
mov
lds
xchg
clc
ja
in
movsb
xor
std
xor
inc
push
pushf
subb
or
add
inc
fadd
push
test
mov
push
inc
inc
mov
dec
sub
mov
mov
data16
mov
xor
push
add
push
lcall
inc
out
xchg
adc
xchg
xchg
imul
mov
cmp
setne
frstpm(287
outsb
cltd
mov
fiadds
xor
jmp
xchg
data16
ljmp
or
inc
imul
push
test
movsb
sub
jle
cld
cltd
sahf
jp
in
scas
pushf
jmp
xchg
in
or
push
sbb
sbb
and
out
ja
pop
cmpsl
push
jnp
dec
ds
and
inc
sahf
dec
add
cmp
jp
push
add
push
cmp
inc
ds
and
mov
jbe
mov
pop
lea
test
andb
outsl
jecxz
push
xor
stos
xor
pop
pop
mov
js
sub
jle
scas
and
aas
xchg
cld
pop
pop
xor
std
call
das
in
xor
adc
push
mov
or
ret
cmp
ss
inc
outsb
adc
cmp
out
jecxz
aad
fimuls
dec
inc
mov
sbb
insb
adc
enter
loopne
sub
div
std
rolb
int3
out
ds
arpl
aaa
sbb
fstps
mov
lods
xor
cltd
xchg
gs
inc
sbb
or
cwtl
mov
loopne
sarb
push
pop
sub
jne
xlat
xorl
mov
or
cmpsb
scas
call
mov
jns
lods
fnstenv
sbb
xor
jns
add
xor
filds
jnp
in
xchg
loop
cld
push
testl
test
movlhps
bnd
jo
pop
imul
lds
lods
mov
inc
sub
and
incl
xlat
scas
sbb
sbb
rcrl
mov
mov
push
or
sbb
ja
add
xchg
mov
iret
jo
or
outsb
pop
pushf
adcb
xchg
stos
or
in
mov
jae
in
mov
sbb
int
xlat
scas
jle
pop
sbb
adc
imul
add
mov
hlt
ds
mov
inc
adc
cmp
js
inc
sbb
icebp
lea
add
bound
insb
andl
mov
sbb
jmp
mov
pop
cmp
lock
hlt
push
jle
sarl
test
jnp
push
out
push
dec
cmc
pop
cmp
out
inc
jb
mov
or
pop
out
cs
sub
pop
mov
dec
test
jo
dec
push
push
cwtl
out
ret
ja
cmp
push
and
nop
mov
in
pop
ja
adc
rdpmc
mov
jge
out
es
xor
sahf
enter
popa
in
mov
sbb
add
stc
inc
nop
out
add
scas
mov
fimuls
dec
mov
mov
lods
addw
rcl
lods
popa
jno
jnp
mov
sbb
popa
sbb
mov
movsl
sbb
cmp
out
push
xchg
lods
test
xchg
and
or
xchg
lcall
pusha
mov
mov
jge
mov
cli
subl
pop
movb
sub
lds
cwtl
andl
fwait
lds
inc
xchg
pop
or
mov
sub
and
insb
fwait
fisubs
int3
or
add
sti
inc
adc
adcl
pop
push
xchg
mov
rcrl
push
and
es
into
fwait
std
test
fisttpl
or
incb
cmpsb
adc
add
popf
clc
lahf
outsl
inc
in
mov
and
movsl
jmp
xorb
cmc
mov
lea
mov
push
stos
jne
pop
mov
jo
sub
push
cmc
scas
push
or
jmp
aas
jno
mov
das
dec
xchg
js
sbb
dec
push
stc
or
adc
dec
inc
mov
push
and
cmp
jno
xlat
lret
aad
test
adc
in
pushf
loope
ret
push
mov
das
or
jb
push
and
pop
sub
aas
outsl
mov
subl
subl
clc
fsts
in
fwait
pop
adc
jbe
cmpsb
push
lea
fs
pushf
mov
in
inc
cmp
sub
xchg
push
stos
and
dec
push
fsubrl
push
mov
outsb
fldl
fdivs
pop
sub
scas
inc
jp
mov
movsb
jmp
test
test
fisubrs
adc
pop
mov
dec
loope
test
adc
xchg
xchg
mov
mov
xchg
add
call
fwait
push
dec
bound
lahf
hlt
mov
add
into
xchg
jmp
ds
pop
mov
es
pop
rolb
push
pop
shrb
xchg
nop
jns
and
aad
test
pop
mov
lahf
fdivp
pop
repz
mov
jne
inc
in
dec
insl
mov
pop
push
or
pop
nop/reserved
pop
scas
and
test
xlat
pop
jecxz
dec
or
jbe
pushf
cmp
ret
push
sub
daa
add
push
inc
push
push
sbb
outsb
outsb
repz
dec
in
cwtl
xor
lret
add
add
ret
push
sub
shrb
leave
in
and
out
mov
fldcw
pop
lahf
mov
rsqrtps
sbbl
pop
ss
inc
jo
dec
xor
and
sbb
mov
adc
xchg
xor
stc
sub
orb
aas
push
mov
xchg
shll
push
decb
adc
pop
cmpb
xchg
xchg
lock
ja
mov
shrb
aad
mov
or
mov
xor
sbb
xor
xchg
pusha
sbb
push
dec
je
mov
sbb
js
cmpsb
ljmp
xchg
pop
mov
mov
fwait
jge
daa
pop
jo
in
push
push
mov
cmc
sub
pushf
mov
mov
and
or
stos
imul
jno
fwait
cmp
inc
sub
mov
dec
mov
ja
dec
in
arpl
inc
xchg
outsl
in
push
lock
pop
xchg
popf
xor
push
cli
pop
ret
das
mov
add
add
jmp
ja
mov
pop
cltd
sbb
hlt
xchg
jmp
sbb
into
jnp
add
fwait
and
inc
or
jl
jns
sti
fld
inc
out
enter
and
lods
pop
bound
sbb
sbb
stc
sub
xchg
fnstcw
aad
fwait
xchg
sti
out
mov
pop
xchg
sarl
sub
es
addr16
lods
hlt
xchg
and
mov
mov
in
push
add
push
mov
rcr
pop
fstp
xchg
add
daa
mov
stc
cmp
push
add
dec
dec
js
movsb
fwait
and
inc
adc
dec
repnz
fbld
outsb
lahf
faddl
insl
hlt
jbe
pop
lds
lock
lret
mov
push
mov
sub
dec
mov
dec
and
mov
test
or
xor
loop
push
lea
scas
jmp
push
rclb
xlat
aas
pop
jl
or
push
sub
dec
jge
jge
scas
inc
mov
sub
lock
sub
adc
or
or
xor
roll
repz
leave
hlt
sahf
sbb
jecxz
jnp
stos
les
fwait
add
leave
fnstsw
push
push
test
and
add
mov
inc
mov
and
jle
dec
call
hlt
xchg
pop
pop
xchg
lcall
xchg
cmp
cmpsl
mov
lcall
mov
das
jmp
xchg
je
xchg
int3
aam
loope
insl
fistps
sarb
lock
push
jecxz
repnz
mov
inc
scas
pusha
xor
mov
lods
shl
mov
aam
shlb
xchg
inc
divb
jecxz
cwtl
sbb
push
adc
arpl
hlt
mov
or
xchg
cmpsl
push
dec
ror
inc
add
lods
inc
lcall
out
cmp
stc
xchg
push
dec
sahf
and
push
jp
mov
push
inc
das
or
and
or
jg
mov
jae
aad
aam
ficomps
sbb
daa
cmc
and
sbb
dec
push
sub
aas
sbb
xchg
push
xchg
xor
pop
push
mov
pop
mov
popf
lahf
add
or
mov
push
dec
or
testb
outsl
ljmp
mov
insl
add
icebp
sbb
hlt
test
repz
jle
adc
pop
dec
popa
dec
mov
cmp
cmp
test
pop
mov
push
mov
test
imul
jbe
jo
cmp
test
jecxz
mov
mov
inc
lahf
inc
ror
jge
push
lcall
jnp
xor
push
push
pop
lahf
ret
inc
fmull
stos
adc
into
xor
lcall
not
fadds
push
aam
push
xorb
les
rclb
dec
xor
mov
clc
push
mov
sbb
add
or
daa
imul
mov
pop
mov
add
dec
and
jne
cmpb
xor
or
std
push
fsubl
insb
dec
outsl
add
inc
mov
loop
loope
and
xor
clc
pop
mov
pop
fcmovbe
dec
repz
pushf
cmp
xchg
xchg
sub
idivl
mov
sbb
adc
push
imul
loop
ds
scas
mov
pop
sbb
and
inc
hlt
scas
fwait
dec
adc
mov
adc
out
fs
outsl
jecxz
pop
and
cmp
jne
lods
sbb
push
shrl
jae
aam
xor
pop
xchg
imul
in
mov
ret
dec
imul
pop
and
sbb
lock
jbe
test
lock
push
mov
insl
int3
out
push
rorl
jnp
mov
mov
icebp
js
or
cmp
lahf
xchg
movsb
mov
cmpsw
mov
dec
push
xor
and
push
jns
insl
lds
lods
and
adc
mov
ret
mov
mov
or
push
and
test
lods
xor
ss
nopl
call
xchg
sub
inc
inc
rorl
inc
lret
xchg
xor
pop
xchg
mov
sbb
shrl
icebp
scas
cmpb
xor
lret
push
jle
mov
inc
sub
adc
dec
push
test
dec
out
push
movsb
rorb
jb
sbb
ds
lcall
call
xor
and
inc
sub
push
add
push
lret
loope
sbb
inc
jmp
jnp
je
shrl
add
sbb
mov
sti
aam
out
outsl
std
lret
lret
stos
popf
dec
jae
mov
stos
xor
test
iret
stos
jae
sbb
push
inc
xchg
aam
imul
notb
jp
mov
popa
xchg
or
movsl
movsl
aaa
cld
xchg
or
mov
and
pop
fcomps
cmpsl
sarb
fucomi
fsts
inc
mov
sbb
out
push
js
xorb
test
dec
lods
fidivrl
fists
or
xchg
add
das
fs
add
fs
movsl
cltd
cmp
xchg
dec
jl
int3
cs
sbb
ljmp
sbb
test
mov
dec
lods
scas
sti
xchg
or
jge
pushf
dec
mov
imul
test
pop
clc
jns
or
or
pusha
lahf
int3
xchg
in
cmp
mov
and
xchg
scas
lret
jmp
notl
and
inc
lods
lcall
lahf
cmpsl
jne
or
pop
jg
or
xor
xlat
lea
jbe
xor
lea
aad
loop
imull
fbld
pop
sti
pop
popa
leave
shlb
dec
mov
inc
loope
dec
pop
xor
jns
sahf
lahf
pop
outsb
repnz
mov
das
sub
adc
clc
xor
mov
mov
sub
sub
outsl
xor
jmp
pushf
in
mov
pop
outsl
mov
loop
roll
call
int3
xor
mov
dec
xor
inc
and
scas
xor
fcompl
add
popa
cmp
lds
nop
cmp
into
not
test
push
push
enter
adc
fcoml
out
shrl
adc
out
push
cltd
inc
stos
aaa
test
xor
push
cwtl
jnp
mov
sbb
subb
cmp
mov
in
cmp
push
out
mov
in
adc
out
push
out
adc
xchg
dec
dec
data16
adc
movsb
imul
dec
push
bound
jmp
lock
mov
push
xchg
jbe
mov
lea
filds
ljmp
fistl
scas
xchg
cmc
sbb
test
fdivrl
mov
sub
jg
insb
cwtl
test
ss
or
sub
xor
xchg
and
mov
out
pop
shlb
shll
push
movsl
sbb
pop
push
push
or
xlat
js
cli
xchg
cmp
dec
cmc
leave
mov
mov
test
scas
gs
xchg
out
mov
xchg
adc
sub
stos
incl
xor
mov
dec
mov
jle
push
mov
out
loopne
push
pop
ss
pop
xchg
icebp
pop
or
inc
adc
push
mov
mov
sub
out
ja
pop
sub
jnp
lods
mov
pop
jge
popa
dec
ljmp
pop
fidivs
sbb
pop
mov
xor
mov
dec
lods
rorl
adc
sub
mov
outsb
shrb
outsb
in
mov
add
rcll
or
movsl
repnz
call
insl
push
ret
mov
pusha
in
std
std
inc
ja
out
dec
fdivp
xchg
loop
xchg
mov
out
mov
inc
mov
in
fxch
imul
jo
loope
pop
jmp
push
adc
scas
mov
xor
xor
push
pop
xor
je
sub
dec
adc
add
jns
sbb
push
leavew
dec
pusha
jmp
loop
addr16
dec
or
xlat
push
xlat
gs
lcall
lcall
gs
in
pop
ficomps
ljmp
mov
into
out
mov
and
xchg
stos
aas
addr16
out
in
add
int
or
lret
mov
xor
dec
jl
mov
adc
fwait
adc
test
inc
outsb
add
ss
dec
xchg
lods
push
sbb
xchg
aas
loope
outsl
inc
movl
rcrb
cltd
imul
std
cmp
inc
pop
cmp
push
jge
xchg
add
and
or
push
xchg
inc
jle
jle
lret
fdivrl
cmp
xor
inc
mov
dec
aad
js
hlt
push
jnp
fbstp
pushf
jns
lret
mov
in
mov
xchg
lock
nop
push
cmp
pushf
nop
cmp
pushf
std
dec
call
punpckhdq
and
cs
jmp
ja
jle
iret
data16
push
lret
jecxz
outsb
cld
scas
and
push
mov
or
and
pop
xchg
dec
jmp
pushf
repz
xor
adc
insl
imul
cwtl
mov
xchg
imul
xchg
pop
scas
jg
aad
cmp
sub
xor
dec
pop
mov
dec
push
nop
cmp
mov
lds
xchg
cmpsb
mov
cmp
mov
daa
call
js
outsb
mov
lods
mov
stos
pop
out
push
adc
dec
add
jae
xor
mov
cmp
jae
es
dec
movsb
sub
insl
addb
ss
add
icebp
sbb
jge
sahf
inc
clc
into
in
mov
or
inc
sbb
adc
test
mov
sbb
imull
out
lds
jns
jp
xor
dec
jle
das
enter
daa
icebp
sbb
jno
mov
sub
push
popf
mov
jno
test
adc
jns
xor
cmp
push
push
jne
xor
sahf
outsl
lcall
cld
gs
pop
cmpl
mov
or
dec
jle
movsb
add
clc
movsb
jns
sarl
gs
sub
adc
pop
cld
jnp
mov
arpl
out
rcrl
repnz
out
mov
mov
or
scas
das
mov
or
xchg
stos
cwtl
outsl
cli
in
xor
lds
xor
movsb
aas
dec
ret
out
pop
movsl
loope
push
addr16
sbb
ss
in
push
aas
in
push
adc
stos
addb
rdtsc
xor
ret
inc
mov
mov
lret
push
fildll
push
je
imul
inc
mov
xor
mov
nop
pop
xlat
dec
xchg
jg
mov
mov
and
cmpsb
dec
es
loopne
push
xor
dec
jno
cmp
lahf
loop
ljmp
pushf
negb
das
xor
pop
jnp
inc
xor
lods
cmp
movsl
insb
xchg
cs
cmpb
push
sub
and
test
sub
or
outsl
repnz
punpcklwd
jmp
test
rcrl
jmp
jg
dec
and
mov
shll
jo
inc
lahf
adc
mov
sbb
sarb
pop
test
ss
xchg
orl
and
aas
btc
pop
pop
lds
xor
dec
pop
lds
fsts
pop
jmp
pop
mov
into
mov
lcall
imul
ja
testl
sahf
and
or
rcrl
jno
pushf
mov
and
inc
mov
adc
scas
jecxz
jnp
std
mov
dec
xchg
xorl
mov
neg
lcall
in
les
xor
xor
lods
pushf
xchg
sahf
mov
daa
add
clc
sbb
sbb
dec
pusha
inc
pop
outsb
and
jb
jl
push
insl
sahf
ds
fisttpll
pop
xlat
mov
mov
xlat
sahf
adc
and
inc
and
pop
cmp
mov
scas
outsb
pop
movb
xchg
pop
or
or
jae
pop
mov
jg
xchg
mov
push
sbb
es
addl
or
inc
cmpsb
mov
pop
sub
adc
jae
jmp
inc
and
dec
mov
cmp
dec
inc
mov
xchg
xchg
mov
lods
es
xor
add
fs
mov
add
add
or
loopne
adc
sub
lds
push
cli
fstpl
repnz
sbb
mov
psrlq
push
xchg
mov
js
adc
imul
mov
clc
mov
push
pop
sub
scas
pusha
xor
push
ret
stos
call
outsl
icebp
sub
std
mov
inc
add
mov
jae
push
icebp
push
sahf
sbb
cwtl
std
pop
adc
or
lret
insb
add
imul
jmp
push
js
int
fmull
jecxz
dec
das
shrb
cwtl
jmp
roll
jmp
mov
pusha
or
xlat
es
repnz
pop
inc
pop
mov
push
lahf
push
rclb
in
mov
jmp
data16
addr16
fistpl
lock
popf
testb
cmpb
lahf
iret
and
in
inc
lahf
sbbb
rcrb
popa
inc
pop
mov
inc
add
jecxz
and
push
clc
dec
lret
pop
jg
lds
pop
stos
es
mov
xchg
mov
mov
popa
les
xor
scas
out
inc
push
xor
subl
inc
jg
js
xchg
push
lds
or
push
cmp
jb
clc
mov
int3
xchg
inc
sahf
ljmp
loope
es
cmp
sbb
push
dec
sbb
mov
xchg
negb
push
pushf
xchg
call
pop
nop
out
or
dec
mov
push
dec
fstpt
lcall
xor
xchg
pop
pop
pop
ss
pushf
sahf
out
jb
xchg
pop
lcall
mov
or
mov
xor
dec
int3
xchg
iret
push
mov
sbb
lcall
into
push
rol
dec
dec
test
fwait
or
popf
ret
xchg
inc
adc
jne
ret
push
adc
xchg
inc
popf
int
outsl
jno
mov
call
mov
xchg
cli
xor
lcall
outsl
mov
lods
adcb
mov
ja
xor
mov
test
cmpsl
leave
fisttpl
push
jno
push
sti
push
ret
icebp
jl
lds
fwait
lds
xor
popf
jno
dec
aas
cmpb
mov
push
shrl
test
flds
dec
sbb
mov
fsub
mov
and
mov
pop
mov
mov
gs
ret
inc
pop
xchg
leave
mov
leave
or
sbb
ja
inc
jb
clc
cmp
xchg
in
int3
and
lock
or
push
les
and
loopne
mov
xchg
mov
scas
dec
fnstcw
sbb
sbb
inc
xlat
xchg
cli
fs
pop
cmp
es
aad
lods
xlat
fiaddl
mov
stos
mov
stc
xor
ret
pop
popf
cmp
mov
push
xchg
mov
lods
pop
cs
fcomps
dec
pusha
insl
cwtl
and
jmp
cmp
popf
add
stc
dec
add
sub
mov
jbe
sub
xor
or
imul
cld
cmp
sbb
inc
inc
jp
cmpsb
call
out
add
ret
ds
faddp
sub
mov
pop
stos
imul
xor
aad
add
aas
cmc
fwait
xor
cmpb
imul
pop
jo
xchg
in
pushf
push
rcrb
ja
es
test
xchg
jnp
in
das
mov
cmp
sub
dec
outsb
sub
jl
pop
xor
in
cmc
sarb
faddp
ljmp
es
mov
outsl
int3
mov
lea
js
fmul
clc
hlt
mov
incl
fstpt
xor
dec
inc
cmc
inc
sti
push
adc
vmwrite
les
enter
fimull
add
jle
inc
cli
inc
inc
inc
mov
mov
imul
push
mov
aam
mov
cmp
dec
mov
dec
pop
pop
sar
pop
pop
mov
fidivl
mov
add
aas
cmp
shll
mov
pop
lret
xchg
xchg
and
stos
mov
btr
push
xchg
jns
les
mov
pop
and
mov
cmpsl
or
lds
pop
adc
pushf
outsb
jmp
or
pop
lock
inc
dec
jns
or
xchg
imulb
mov
inc
shlb
outsl
mov
xor
push
enter
pop
out
out
popa
idivl
adc
icebp
scas
or
sti
xchg
push
hlt
sub
dec
mov
mov
pop
jmp
adc
shl
aam
pop
jnp
sbb
enter
sub
mov
and
popf
dec
pop
sub
xchg
stos
jmp
jge
add
xorb
push
jns
inc
scas
push
cmp
or
lea
xlat
push
xchg
popa
sbb
sub
shrl
rclb
rcr
jp
scas
and
cwtl
iret
aam
jmp
add
rcll
push
push
je
mov
sub
ss
mov
xchg
mov
push
shrl
or
daa
lea
sbb
mov
cmp
cmpsl
rol
lret
into
jo
fidivrl
shl
push
lret
or
sarl
das
popf
jo
jmp
xor
fisttpll
fwait
xor
outsb
outsl
sahf
rcrb
into
mov
sbb
cmp
fimull
adc
or
jne
push
sbb
mov
and
mov
mov
mov
fcmovbe
jb
cwtl
stc
testb
fildl
push
jle
cmp
mov
iret
and
sbb
cld
notl
mov
jae
shlb
ljmp
cli
pushf
push
fcmovnb
or
mov
les
pop
popa
sbb
lret
dec
cmpb
bound
mov
xor
lcall
jecxz
mov
pop
fildl
imul
fdivl
push
cmp
scas
pop
add
movsb
xchg
nop
sub
arpl
testl
dec
jne
add
xor
ret
data16
sbbb
test
stos
lret
xchg
hlt
sub
cmp
movsl
inc
mov
mov
fsubp
insl
fnsave
push
push
adc
fisubl
loopne
dec
mov
fmull
xchg
push
pop
sbb
pop
fldt
in
cmp
es
mov
mov
or
es
pushf
xlat
test
sub
icebp
js
jmp
inc
push
dec
push
cmp
sub
jae
xchg
xor
outsb
test
rclb
mov
aad
push
int
add
or
cmp
aas
rol
pop
std
dec
inc
jmp
out
clc
mov
or
jmp
sub
std
in
and
and
jns
aaa
insl
pop
and
iret
cmp
or
xchg
pop
stos
addr16
mov
add
sub
inc
xor
dec
shlb
adc
in
push
test
daa
fnstsw
push
aaa
cmp
jns
xchg
pusha
cli
lret
std
mov
pop
cmpsl
xchg
ficoml
inc
aas
jns
aas
rclb
ss
in
fwait
mov
push
filds
rol
add
add
in
ja
mov
pushf
lcall
and
inc
inc
int
ljmp
mov
dec
sub
adc
pop
add
fdivrl
cvtpi2ps
lds
sti
insl
fistpll
inc
cmp
loopne
sbbl
jbe
scas
or
ds
and
push
xchg
mov
in
cltd
mov
xlat
mov
aad
dec
pop
sbb
push
add
sbbl
pop
and
call
adc
daa
inc
dec
jp
cmp
adc
add
lea
and
pop
jb
mov
mov
lea
lcall
jmp
fisubl
movsb
pop
out
iret
cmp
cld
mov
into
inc
or
fmull
mov
inc
and
add
das
jae
push
xchg
jo
inc
xlat
fsub
std
out
inc
test
mov
outsb
mov
aad
lahf
movsl
push
dec
sbb
andl
pop
jmp
pop
push
cmpsb
fadds
inc
dec
mov
pop
divb
gs
test
push
push
movsb
or
cmp
pop
lret
outsl
in
in
dec
test
jne
mov
call
leave
cmp
push
lods
add
xchg
mov
hlt
or
cmp
aaa
mov
or
fisttps
rcrl
shrb
loopne
pop
mov
rcrb
push
jae
or
push
test
popa
loope
push
comiss
faddl
jnp
and
lret
jp
ljmp
cmc
push
into
xor
jmp
jge
add
sub
and
movb
xchg
call
arpl
lods
imul
jle
push
cmc
sarl
das
jns
mov
and
xchg
cmp
sbb
cmpsl
popl
and
pushl
inc
pop
stc
cmp
fdivrl
adc
in
mov
or
outsb
push
adc
cmpsb
in
dec
add
xchg
jmp
mov
ljmp
inc
std
and
ss
or
pop
xor
sub
mov
mov
test
add
mov
jb
aaa
jecxz
aas
pop
xor
jae
jno
daa
int
mul
shrl
mov
loop
jp
adc
fidivl
lret
cltd
lea
mov
or
addl
mov
ficoml
pop
or
pop
mov
popf
leave
fdivrl
jns
push
pop
jo
sub
mov
push
jne
shll
jmp
xor
inc
adc
insl
xchg
dec
push
and
pop
ss
xchg
jle
pop
cmpsl
shrl
sub
push
enter
aas
inc
shr
jmp
pop
test
outsb
rcrb
lret
mov
gs
mov
test
push
ja
mov
in
jg
loope
mov
mov
pop
and
mov
mov
jo
gs
andl
dec
or
imul
imul
add
mov
dec
xchg
std
js
mov
xlat
aaa
pop
inc
sub
pop
jmp
sti
lods
and
fsubr
mov
stos
add
insl
cmpsl
cmp
add
jp
xchg
jbe
subl
popf
jg
sbbb
xor
adcl
outsb
in
addl
ret
jmp
dec
rcrb
mov
mov
push
les
std
push
inc
insb
pop
xchg
loop
xchg
dec
adc
mov
mov
fdivs
jno
fisttpl
jg
and
jnp
sahf
or
cltd
dec
outsb
jns
mov
popf
testl
xchg
into
sbb
pushf
xchg
pop
stos
rol
mov
push
mov
sub
or
inc
call
test
xchg
jmp
out
pop
inc
sub
sub
call
cmp
enter
pop
sub
inc
mov
jo
jae
cmp
push
inc
gs
out
sbb
xorl
or
mov
mov
dec
adc
mov
mov
add
dec
pop
push
mov
add
loopne
pop
xor
xchg
jb
ljmp
test
sub
push
jnp
adcl
inc
xchg
mov
adc
fmul
ds
pop
imul
ret
or
or
add
vmwrite
pop
shrl
dec
pop
xchg
stos
push
sahf
xorb
dec
and
mov
jg
mov
jp
bound
xchg
jge
lock
xchg
nop
adcl
mov
filds
push
push
xor
sbb
inc
std
aas
xchg
gs
cmp
and
push
push
mov
adcb
lods
mov
cmpsb
iret
push
test
scas
std
or
imul
in
or
cmpsb
mov
pop
xchg
lret
les
test
iret
ret
jl
les
subl
xchg
rcrb
inc
sub
mov
mov
scas
mov
mov
sti
push
push
push
xor
xchg
ja
and
faddp
cmpsl
mov
out
fimull
sub
outsb
orl
popa
fs
in
js
shlb
mov
aad
es
dec
xor
push
sbb
rorb
lahf
loop
loopne
jecxz
rcll
push
xchg
aad
ljmp
push
lcall
int3
and
jl
mov
mov
dec
aas
xchg
je
mov
inc
fcmovb
loop
cltd
mov
and
stc
dec
cmp
repz
ja
sub
dec
aad
sbb
js
fyl2x
mov
inc
jo
imul
stos
mov
enter
mov
addr16
call
adc
stos
add
lods
and
jge
push
dec
push
mov
int
lea
popf
xchg
mov
and
jne
addr16
scas
repnz
imul
add
stos
ret
jecxz
xchg
scas
mov
test
pop
fisubrl
dec
sbb
xchg
jl
or
push
mov
add
cld
fildll
jo
xor
seto
mov
ret
adc
dec
cmp
shrb
pop
push
or
int
mov
fwait
dec
mov
outsl
mov
test
fmuls
into
cmp
and
jmp
jns
add
mov
loop
push
cwtl
adc
jg
fwait
xchg
mov
inc
and
leave
dec
outsb
mov
test
jge
cmp
push
inc
stos
sub
cmp
aad
repnz
pop
fsubl
jl
and
lea
ret
dec
mov
pop
mov
fiaddl
dec
mov
int3
in
enter
outsb
sbb
das
int
mov
cwtl
fisubl
std
fs
adc
test
push
dec
in
adc
popa
fs
aad
push
mov
mov
or
pop
jne
fidivrl
ljmp
sub
mov
jle
add
jne
add
xor
icebp
nop
fyl2x
pop
mov
add
pop
xchg
and
dec
jne
rcr
mov
pop
imul
scas
and
inc
rcrl
ds
insb
or
push
in
push
xchg
and
xchg
ret
or
xlat
std
mov
fisttpll
in
leave
lods
and
stos
inc
out
push
cmc
lret
ss
mov
pusha
mov
js
mov
insl
lods
xor
fildl
pop
mov
add
adc
fs
fistps
std
cmp
das
es
je
mov
clc
mov
push
mov
mov
pop
repnz
xor
sbb
fs
aam
in
call
lods
aam
push
jae
repz
push
inc
mov
xchg
stc
mov
stos
movsl
ss
mov
je
or
ret
xor
or
pop
cmc
adc
add
lret
jl
mov
into
shll
sbb
xchg
cs
pusha
mov
faddp
addb
cld
ja
sub
arpl
jbe
cmp
outsb
lock
add
jns
nop
sub
cmpsb
test
scas
push
mov
jbe
scas
push
and
mov
cs
aad
mov
repz
filds
push
sbb
pop
dec
adc
leave
cmp
mov
xchg
out
pop
cmpsl
mov
jecxz
cmp
mov
cltd
fisttps
push
fs
dec
aaa
lret
cmp
cmpsb
mov
sub
stos
stc
lahf
mov
pop
das
test
push
add
shrl
lds
scas
and
pop
mov
or
imul
loop
lods
popf
xor
roll
cmpb
cmc
mov
out
fsubr
jne
or
xchg
das
repnz
xchg
cmpsl
fld
ret
mov
insl
pop
lret
sbb
sub
push
loop
loope
pop
imull
mov
das
xchg
sbb
scas
sub
cmp
dec
or
out
jp
aas
push
iret
mov
sbb
xchg
sub
stc
or
arpl
pop
mov
in
xor
aad
pop
clc
mov
scas
lock
out
xor
ljmp
mov
sub
add
das
inc
out
leave
sub
mov
and
mov
sbb
add
xor
sub
cmp
int
xor
dec
icebp
filds
push
push
bound
sub
or
dec
aas
sub
xor
and
mov
mov
xchg
push
jp
or
sbb
cmp
inc
in
aas
insl
add
dec
jmp
filds
test
fbld
pushf
mov
xchg
in
cltd
rcrl
pushf
ja
sub
cmp
popf
andnps
jecxz
sub
dec
out
or
lea
xchg
popf
ljmp
jne
push
pop
mov
fld
sub
mov
xchg
in
push
outsb
add
outsl
lret
stos
popf
enter
inc
rcr
sbb
push
cs
xchg
jno
shlb
mov
rclb
xor
je
bound
pop
xor
jo
dec
and
jns
jo
in
mov
pop
jg
adc
cli
enter
add
pushl
mov
xlat
lahf
sub
cwtl
push
sub
jb
add
jge
mov
das
popa
out
xor
mov
dec
outsl
out
push
and
ss
jbe
push
inc
xchg
push
sub
aaa
or
pop
mov
jp
andl
mov
in
dec
xchg
sub
fdivl
lret
ret
test
pop
mov
jbe
cmp
cmp
adc
sbb
mov
inc
xor
rcr
adc
dec
mov
xchg
push
mov
lahf
sub
mov
lods
lds
fisubrl
pop
sahf
and
ss
inc
sbb
push
sub
inc
int
mov
cmpsb
adc
sbb
lret
jns
jle
pop
popa
sbb
adc
cmpl
inc
dec
mov
mov
ss
lret
out
push
jae
outsb
leave
jl
push
cmp
in
push
jmp
sub
in
scas
adc
mov
cmp
and
lcall
into
les
addr16
mov
cmpb
mov
and
xor
aam
jne
adc
and
lahf
hlt
or
pop
sub
sub
fs
test
xor
mov
jns
cmp
stos
dec
xor
sti
xlat
sub
popf
push
mov
jo
push
cmp
dec
dec
shr
dec
mov
cmc
xchg
xlat
pop
sbb
fldl
jge
jae
pextrw
inc
push
fists
loopne
call
cmpsb
pop
mov
jmp
add
push
inc
daa
mov
add
mov
out
mov
sbb
jecxz
dec
popf
jnp
outsl
jmp
adc
out
push
xchg
jnp
or
jecxz
movntps
xchg
lret
xchg
pop
fisttps
mov
push
sahf
xor
notb
into
cmp
imul
enter
scas
add
dec
mov
mov
pop
loop
inc
cmp
mov
lods
mov
xor
nop
test
inc
xchg
lock
push
xchg
in
cmc
je
stos
push
stos
mov
scas
decl
or
ds
xchg
addb
in
pop
mov
jle
popf
mov
imul
js
pop
inc
sub
rcrb
mov
mov
imul
std
arpl
clc
pop
data16
leave
dec
shrb
dec
in
rol
fbstp
jbe
push
in
cltd
push
imul
es
mov
pop
fistpl
jecxz
xorl
adc
loope
pop
dec
pushf
cmp
adc
mov
xor
pop
lods
aas
cmc
aas
xchg
outsb
sub
shrl
add
scas
test
sti
cmp
push
jle
mov
mov
pushf
mov
divl
cmp
jl
fdivrs
mov
mov
jg
push
fucom
pop
gs
or
movsl
pop
cmp
mov
lds
inc
test
je
lcall
sub
jne
sub
fnstsw
dec
arpl
cld
jge
movhlps
add
andl
int
sub
lock
pushf
add
roll
pop
xor
or
aam
fbstp
or
sub
mov
lcall
cwtl
nop
and
add
ds
negb
mov
push
bound
shlb
or
sti
mov
in
ja
movsl
dec
adc
sbb
and
addb
xor
dec
sbb
xchg
or
sub
test
push
mov
cmp
jecxz
int
xor
lea
lret
push
outsb
pop
add
jg
xchg
jae
inc
dec
in
popa
inc
pop
mov
sarl
ss
mov
aam
and
rol
push
cwtl
xor
cmpsl
pop
lds
outsb
pop
jne
mov
cmp
sub
fcoms
aas
or
xlat
ds
sti
xchg
ret
int
adc
push
je
mov
jb
sub
adc
mov
shlb
or
jo
stos
dec
jp
push
inc
loope
hlt
adc
push
outsb
jmp
push
inc
push
mov
lods
inc
or
fwait
push
arpl
int
add
ds
sub
xchg
dec
inc
mov
leave
sbb
in
add
mov
mov
out
imul
push
fs
fldl
int3
cli
or
add
fstpl
pand
push
mov
imul
insb
arpl
call
cwtl
and
sarl
and
outsl
sub
mov
sub
aas
loope
out
std
mov
xchg
push
sbb
xor
stos
xor
in
inc
inc
jns
dec
fwait
ss
add
sub
popa
pop
in
loop
fwait
dec
cmpl
sub
push
repz
inc
inc
in
fmull
in
mov
ret
adc
arpl
test
and
dec
or
sub
out
push
ffree
cmpsb
add
xchg
in
int
insb
shlb
addb
data16
loopne
push
xchg
testl
sbb
sar
stc
dec
inc
arpl
and
ud1
push
mov
jge
mov
or
push
mov
idivl
movsb
test
add
sti
inc
pop
pop
cld
sbb
pop
fcomps
or
mov
adc
lahf
clc
mov
jl
xor
and
stos
lcall
inc
aam
lock
jg
cmp
scas
inc
lds
sbb
test
fs
add
mov
es
mov
or
push
inc
pop
adc
pop
repnz
sub
jp
popf
ja
mov
push
mov
mov
insl
enter
test
jge
pop
test
shlb
ss
sub
and
stos
shrl
push
push
mov
lods
jmp
cmp
insl
mov
std
out
pop
inc
daa
xor
rolb
mov
mov
inc
nop
or
jbe
xchg
pop
ljmp
adc
cli
push
aas
pop
testb
outsb
clc
and
inc
dec
sub
sti
icebp
xor
mov
pop
jno
imul
cli
and
popf
jne,pn
xchg
pop
add
mov
cli
ret
jbe
jle
jmp
xchg
or
test
jnp
push
les
fists
fcomps
leave
jb
xor
inc
shlb
cmp
iret
cmp
in
fnsave
xor
daa
loop
out
jno
out
icebp
sbb
lods
push
pop
xor
int
shlb
sub
or
xor
repz
sti
mov
aas
sbb
sarl
sar
test
mov
imul
inc
loop
dec
bound
movl
pushf
sub
test
mov
pop
lock
jmp
jo
mov
pop
repnz
movsl
orl
das
add
scas
push
push
add
push
mov
xchg
popf
push
jo
into
pop
dec
inc
mov
inc
shrl
pushf
jbe
xchg
pop
pop
jnp
in
ficoml
sti
and
insl
enter
rcll
test
dec
lods
repnz
mov
mov
xor
dec
leave
push
fldt
ret
bound
jecxz
movsb
stc
mov
arpl
dec
inc
push
jle
in
adc
mov
fistpl
jne
xchg
mov
mov
das
xor
xchg
or
in
xchg
adc
pushf
pop
mov
and
sbb
les
int
call
imul
or
nop
outsl
dec
insl
add
cld
xchg
xor
sub
decb
inc
test
pop
sbbb
imull
dec
dec
cmpsl
movl
sub
sbb
cmp
xchg
xchg
sub
sbb
in
push
xor
das
call
jl
mov
jae
aam
outsl
pop
sub
lcall
scas
inc
pop
mov
push
xchg
arpl
dec
call
mov
mov
sub
fsubp
lret
push
jg
mov
and
loopne
mov
dec
mov
fs
dec
sub
cmp
ljmp
xor
cltd
cmp
push
push
adc
pop
pusha
scas
add
call
xor
loopne
lods
lahf
mov
aas
cmp
aam
pop
out
push
retw
xor
xchg
in
or
loopne
xchg
pop
push
push
ret
add
jo
add
mov
dec
scas
nop
mov
add
loopne
data16
mov
adc
xorb
or
and
jo
inc
incb
jge
repz
scas
xor
mov
xor
pusha
rcll
loope
scas
dec
loop
into
pop
cld
dec
lods
dec
fbld
pop
jo
fwait
adc
jg
hlt
setp
ret
cmp
dec
mov
loop
jo
xchg
jecxz
stos
push
jns
insl
push
push
and
dec
in
sbb
sbb
or
adc
xor
xor
push
icebp
or
add
fs
lods
cli
cmpsb
pop
sub
xor
jle
xchg
adc
inc
test
pop
lret
cmpsl
xchg
mov
pushf
es
mov
test
movsl
dec
pop
mov
fwait
rcrb
adc
aaa
in
pop
add
pop
xor
imul
adc
and
mulb
lret
and
sub
add
scas
lods
cmp
or
xor
dec
test
push
add
fs
jae
jns
aam
cmp
xor
cmpsl
add
xchg
adc
jmp
or
or
sbb
dec
jbe
cmp
lret
stc
cltd
fisubrs
or
negl
das
out
sbb
dec
or
cltd
or
dec
sti
std
mov
push
fistl
sub
mov
and
mov
pop
fisttps
sbb
in
xchg
lock
mov
sbb
push
fnstenv
cmpsb
xchg
iret
bound
sbb
outsl
jns
cmp
dec
adc
sbb
jo
xor
mov
and
and
sbb
arpl
jmp
lahf
sbb
fsubrp
xchg
ljmp
icebp
xor
call
pop
mov
rorl
or
or
outsb
leave
xor
adc
cmp
stos
mov
push
mov
xchg
std
xlat
adc
jg
or
repz
rclb
jbe
bound
mov
fs
mov
jo
in
push
bound
cmp
shlb
scas
sub
pop
and
dec
and
inc
stos
cmp
clc
mov
xor
stos
incl
das
cmpsb
xchg
or
sbb
inc
jge
adc
xor
leave
js
and
out
popf
into
iret
push
das
addr16
lods
in
jae
sbb
mov
or
cmp
cmp
xchg
ljmp
repnz
inc
mov
stos
mov
int3
and
movsl
popf
imul
pop
lret
lret
andb
inc
push
sti
adc
sbb
aam
cmp
and
sbb
add
xchg
das
aas
arpl
sbb
push
stos
stos
adc
mov
dec
out
or
outsb
test
dec
adc
cmpsl
cld
insb
fdivs
mov
fiadds
or
lock
jne
iret
jo
out
and
xor
pop
mov
pop
dec
gs
inc
mov
and
loop
fdecstp
cmp
lahf
aas
lcall
xchg
cli
ret
dec
mov
jbe
test
jbe
push
imul
sub
stc
inc
loop
or
lret
cmpl
adc
sub
ds
adc
adcb
push
sub
or
ror
aad
lods
adc
imul
dec
jae
xor
push
lahf
and
dec
jg
dec
out
test
data16
inc
add
push
shl
jbe
adc
addb
or
ljmp
aaa
add
stos
std
icebp
and
lret
push
xlat
add
jmp
xor
xor
je
fsubl
sbb
dec
sub
mov
repnz
mov
sub
ret
xor
adc
icebp
mov
mov
dec
push
jmp
sar
leave
push
andb
xchg
notl
cmpsl
movsb
pop
inc
in
fwait
rcrl
pop
dec
xrelease
test
fdivr
inc
scas
cltd
xchg
enter
je
mov
mov
aaa
scas
push
xor
mov
push
xor
out
jno
lcall
sbb
mov
gs
xor
pop
pop
pusha
repz
out
mov
mov
push
adc
jecxz
sbb
sbb
xchg
insl
add
mov
aam
jno
xor
and
dec
push
lcall
test
out
frstor
adc
and
js
repz
jmp
nop
or
lods
insb
sub
sub
push
insl
cmpl
cmp
mov
adc
shl
mov
stos
mov
subl
mov
mov
sbb
xchg
xchg
fcmovbe
out
mov
jg,pn
push
xchg
xor
repz
mov
dec
nop
loop
insl
push
ret
ret
and
sbb
xor
xor
jns
mov
jno
repnz
add
bound
adc
mov
ds
xchg
jle
fwait
outsb
xchg
andl
adc
xchg
mov
jmp
fadd
jb
pop
fdivrs
mov
mov
push
xchg
adc
and
in
pop
xor
cmp
in
pop
fcmovnb
or
and
add
cltd
xchg
int
xchg
pusha
push
push
adc
imul
fistl
fs
sti
mov
and
int
jb
insl
stos
enter
and
and
scas
lcall
sti
adc
mov
je
lcall
jae
outsl
xchg
mov
arpl
adc
sbb
inc
push
testl
int
sbb
mov
jno
shl
lock
jmp
cmpb
mov
sbb
movsb
xchg
lahf
pop
ja
scas
add
mov
mov
xor
into
dec
leave
inc
lahf
lret
jmp
cmp
lret
pop
pushf
cmp
sub
ret
push
cmp
and
lcall
sbb
adc
cli
iret
shll
pop
cmp
mov
adc
ds
or
mov
jae
sbb
push
dec
pop
dec
xchg
jmp
movsb
mov
shl
mov
outsb
inc
cmp
inc
lds
daa
in
aad
jmp
mulb
cmp
xor
adc
mov
insb
and
jne
fmuls
aaa
push
aam
sti
inc
data16
inc
sub
pusha
loope
cltd
push
in
mov
pushl
adc
pop
pop
pop
push
pop
cwtl
aam
popa
notb
into
xchg
mov
int3
je
jmp
jo
sub
mov
mov
add
sub
mov
jo
cwtl
pop
in
insl
paddw
movsb
mov
mov
ja
lods
enter
iret
in
pop
out
les
xor
xchg
popf
repz
cld
ds
add
iret
or
test
pusha
aam
xor
fcoms
adc
icebp
mov
out
pushf
mov
mov
sub
dec
je
aas
push
and
fstl
sbbl
insl
pop
mov
add
sbb
adc
cmp
and
dec
es
popl
repz
sahf
sbb
add
fsubs
sub
pop
pop
add
xchg
cltd
out
imul
repz
xor
lcall
cld
ret
sbb
lret
xor
mov
and
adc
xor
cmp
lds
sbb
push
cmpsb
aam
mov
mov
pop
jecxz
cmpsl
iret
inc
mov
mov
xchg
repnz
cli
sbb
cld
pushf
movsl
bound
mov
gs
jbe
fisttps
jne
push
pop
dec
int3
pop
dec
mov
mov
in
mov
pop
mov
xchg
mov
in
scas
mov
loop
sub
or
repnz
lahf
inc
or
rcll
push
aaa
sbb
mov
dec
jo
repz
ror
loope
pop
mov
lea
arpl
mov
or
jb
mov
push
pop
inc
ret
fisubrs
sbb
lds
xchg
sub
adcb
out
xor
out
adc
jg
add
idivb
mov
iret
jae
sbb
cltd
inc
ljmp
dec
sub
ljmp
push
out
nop
das
test
mov
ljmp
loop
inc
test
jmp
pop
subl
addr16
xchg
notb
cmpsb
cltd
testb
insb
cmp
dec
push
fidivl
mov
ret
decl
outsl
push
popf
mov
and
and
enter
pop
cmp
popa
mov
xchg
inc
scas
mov
pop
push
xchg
inc
inc
push
orl
ja
xorb
call
pusha
loop
mov
pop
mov
jp
popf
leave
mov
int
mov
and
push
adc
test
outsl
adc
adc
sbb
mov
das
jno
loope
mov
pop
filds
xchg
aas
jnp
or
push
cmp
push
aad
inc
push
xor
and
jp
shlb
bound
imul
mov
pop
lods
nop
cmpsl
ret
fdivl
mov
imul
xor
jl
roll
lock
jp
sti
mov
fldt
mov
push
fcmove
ja
outsl
aad
jmp
push
lahf
insl
sbb
mov
mov
sti
lret
out
data16
fs
mov
xlat
lahf
mov
in
adc
sub
std
mov
xchg
orl
mov
fs
aad
jo
xlat
scas
in
cs
cmp
cmp
ret
xchg
pop
mov
pop
jne
in
mov
int
sbb
je
push
ret
push
jle
inc
stos
test
fadds
sub
dec
dec
lods
mov
pop
cli
mov
cmpb
rcll
sahf
or
data16
fsub
cmp
inc
mov
sub
sub
mov
mov
cli
xor
inc
incb
shl
cld
sbb
xorl
out
test
ret
jnp
add
xchg
jno
loop
sbb
ja
test
mov
or
rorl
mov
or
movsb
cmp
bound
test
xchg
ret
mov
dec
sub
arpl
xor
adc
leave
imul
pushf
jns
pop
mov
popf
insb
dec
out
das
mov
and
pusha
data16
movl
ss
cltd
insl
pop
and
cltd
stc
adc
ret
scas
cmpsl
jmp
sbb
mov
mov
pop
out
sbb
fmul
adc
push
cwtl
popa
dec
sub
lods
iret
movsb
icebp
pop
leave
cli
imul
mov
sbb
movsb
into
pop
into
insb
in
or
mov
mov
mov
movaps
pop
decl
fldt
mulb
jmp
push
dec
xchg
xor
jo
or
pop
loop
sti
in
jmp
jb
cltd
sub
pusha
adc
add
mov
ljmp
or
and
cmpsb
push
aaa
pop
jbe
sbb
scas
ja
add
jp
mov
xchg
push
and
inc
into
ficomps
mov
outsl
aam
loopne
jb
xchg
lds
aaa
fcom
jb
jne
imul
cmp
dec
sbb
sbb
add
adc
mov
push
cmpsb
sub
test
mov
push
sub
jae
sub
mov
nop
fstl
outsb
stos
pop
out
mov
aad
int
ljmp
lret
fsts
fists
push
push
dec
inc
outsb
adc
roll
nop
arpl
xor
mov
jb
inc
add
int
adc
mov
les
fisttpll
gs
dec
pop
ss
jo
mov
adc
mov
mov
xor
testb
in
jmp
cld
cli
sbb
or
je
movsl
jle
pusha
dec
jae
mov
pop
jns
cs
mov
jge
xchg
mov
pusha
jb
stos
pop
pop
lret
cmp
push
xor
adc
inc
jmp
pop
jge
or
mov
outsb
mov
pusha
ljmp
popfw
jge
add
leave
pusha
outsl
xchg
repz
and
push
push
ljmp
in
cmp
mov
lock
mov
mov
xor
pop
scas
xor
mov
dec
aaa
mov
test
add
imul
test
push
adc
inc
leave
xlat
jl
sub
and
aad
cmp
jle
add
cmp
fcomps
test
cmpsl
vpslld
mov
mov
das
push
add
pop
and
fisubl
jb
adc
clc
sbb
loope
xor
or
xor
sbb
xorb
adc
or
sbb
mov
push
loope
ljmp
loop
or
dec
fidivs
mov
xor
push
rcrl
movsl
imul
int
adc
out
out
movsl
cmp
aam
es
cmc
jg
and
shl
dec
xchg
and
xchg
lea
fdivr
mov
les
or
or
dec
cmp
repz
sub
clc
in
cmp
gs
mov
outsb
cmp
sub
sti
popa
repz
sbb
ret
add
lock
outsb
xor
xor
mov
add
mov
cmp
push
and
lea
dec
dec
xor
sbb
int3
add
pushl
addr16
enter
xchg
jo
cmp
xchg
dec
inc
rcrb
icebp
test
jmp
sub
mov
add
bnd
decl
xor
pop
je
dec
out
dec
push
stc
xchg
inc
test
push
ss
js
dec
jge
mov
lods
sub
pusha
dec
int3
test
hlt
mov
bound
outsl
mov
sti
stc
mov
call
js
lret
fisttpll
sbb
les
and
sub
xchg
adc
in
jno
push
lahf
movsl
dec
mov
xchg
sub
jle
push
ja
mov
fsts
pop
sti
cmp
xor
repnz
vandnps
push
aam
mov
push
inc
jle
push
add
adc
or
mov
dec
rcll
mov
inc
inc
out
divl
mov
or
push
sub
aad
in
adc
mov
and
cmp
fs
pop
jecxz
jg
daa
rorb
les
enter
mov
aad
mov
mov
lret
jne
mov
fs
mov
stos
loope
fistl
es
lods
movsl
mov
push
jo
js
outsb
sub
cmp
jg
repz
cltd
cli
cmp
jae
adc
out
pop
mov
insb
or
mov
pop
pop
jae
push
fs
and
clc
imul
lds
cli
enter
hlt
add
mov
mov
imul
mov
sbb
mov
shll
xchg
ljmp
rcrl
into
mov
mov
nop
mov
xchg
in
lock
pop
scas
cmp
nop
outsl
pop
inc
xor
inc
mov
xor
jne
dec
xor
xlat
cld
xor
out
das
aaa
adc
es
rorl
mov
sub
mov
sbb
dec
mov
negb
pop
out
js
and
subl
fmuls
inc
pop
test
sbb
outsl
into
scas
jno
and
pop
jl
insl
dec
inc
cmp
out
xchg
in
pop
sahf
xor
jo
not
fnstcw
push
push
sub
mov
arpl
imull
andb
xchg
sub
das
mov
mov
jbe
test
cmpsb
jae
cmpsb
imul
icebp
stos
addr16
mov
fstpt
xchg
mov
lds
insb
mov
shll
adc
mov
xchg
shll
ret
loop
inc
ror
sub
jnp
movsl
push
addr16
dec
lds
sbb
rol
shll
mov
jle
push
int
daa
sbb
cld
mov
xchg
fistps
xchg
lahf
xor
jno
aaa
sahf
mov
push
outsb
test
pop
jno
adc
dec
aaa
xchg
push
sbb
cmp
mov
cmp
mov
sahf
lods
dec
imul
fcmovu
cmpsl
pusha
pop
push
pop
in
jge
cmpsl
or
pop
dec
lahf
xlat
push
das
call
lods
and
sub
test
xor
dec
repnz
jmp
ror
add
push
sbb
imul
out
shll
jne
xor
scas
fldcw
xor
add
scas
in
lods
aas
scas
testb
cld
fldt
fsubrs
cs
mov
cs
adc
sub
xor
cs
repnz
cmp
ret
push
addb
inc
inc
mov
andl
fwait
push
adc
int3
mov
inc
imul
adc
lods
xchg
push
leave
hlt
and
shrl
fdivrs
and
hlt
pop
xor
pop
jp
ja
and
lahf
aas
lret
iret
sarb
mov
inc
add
in
cmp
jae
mov
pop
lods
dec
test
cmpsl
or
sbb
lods
sbb
in
add
or
lods
or
add
pop
sub
pushf
lods
cs
int
lock
fmulp
xchg
loopne
add
cmp
cld
push
pushf
js
in
and
in
sub
jg
cmp
sahf
dec
push
cltd
dec
or
add
dec
jge
loopne
mov
sub
cli
mov
iret
push
ds
sub
mov
ret
mov
adc
popl
mov
mov
test
xor
jb
mov
jecxz
sar
jle
lods
push
in
mov
xchg
dec
xacquire
xchg
jg
pop
jae
jne
les
das
mov
pop
dec
inc
jp
jne
pop
lret
mov
cmc
mov
movsl
cmp
mov
outsl
and
xlat
add
aas
js
nop
and
jne
xchg
push
lds
sub
push
pop
or
lods
mov
repnz
sbb
loope
sub
pop
fisubrs
xchg
test
pop
shlb
fnstsw
mov
fucomip
add
fdivrs
cltd
xchg
decl
mov
push
clc
xor
fwait
mov
jno
enter
inc
inc
ds
ljmp
sarl
mov
jge
clc
inc
mov
cmpl
aas
imul
gs
fnsave
sub
enter
xor
mov
outsl
adc
pop
mov
loop
pop
inc
std
fucom
pop
icebp
lcall
aaa
dec
ljmp
ficoms
cltd
dec
adc
js
int3
mov
sub
std
mov
dec
pop
inc
gs
push
and
mov
out
sahf
fldl
test
xchg
adc
in
stos
mov
ret
je
or
dec
jecxz
xor
add
lock
insl
push
xor
divb
jne
insl
les
and
or
repnz
mov
imulb
into
mov
loop
testl
pop
xchg
adc
ds
jp
shrb
sarl
iret
mov
xchg
xor
sti
mov
jecxz
int3
mov
repz
pop
loope
adc
rcll
cmp
dec
and
xchg
and
pusha
inc
xlat
shr
push
out
dec
jl
mov
mov
and
push
into
sarl
loopne
sub
inc
gs
pop
dec
and
inc
je
mov
out
shrb
inc
addb
push
and
or
and
pop
pop
mov
mov
xchg
inc
in
push
adc
out
decb
jp
scas
jmp
mov
loop
scas
imul
pop
loopne
adc
cltd
push
mov
imul
lret
subl
aas
lret
pop
dec
push
mov
sbb
jns
push
das
gs
xor
daa
sbb
test
loopne
icebp
popf
mov
daa
sub
loope
or
or
inc
dec
in
lret
lret
adc
jmp
cmp
popa
jno
pop
pop
pusha
dec
ja
pusha
mov
mov
lcall
xor
xor
mov
cmpsl
icebp
dec
add
fs
cmpsl
mov
dec
dec
xor
and
icebp
icebp
loope
mov
in
push
lock
adc
cmp
hlt
jle
in
push
and
movsb
mov
push
shlb
les
jno
test
xor
mov
in
in
add
push
push
shlb
mov
ret
mov
push
hlt
loopne
push
in
daa
and
and
sbb
pop
pusha
lods
xlat
ja
push
mov
pop
inc
push
push
lcall
shll
mov
test
inc
xor
pop
jb,pn
adc
mov
rorl
jg
stc
mov
or
dec
mov
imul
subl
push
push
mov
xor
icebp
or
xchg
in
ljmp
icebp
loop
mov
orl
decb
bound
in
dec
jo
fwait
inc
mov
adc
ret
sbb
xchg
pop
mov
cltd
sbb
fwait
add
lods
or
jg
test
leave
jns
dec
mov
push
inc
hlt
movsl
pop
mov
pusha
cwtl
jb
call
xchg
xchg
inc
dec
int
pop
cmp
xor
mov
mov
mov
push
mov
mov
into
movsb
inc
pop
sub
rol
mov
pushf
and
sbb
out
das
enter
int3
or
adc
ficoms
sub
inc
dec
jle
icebp
mov
fldcw
pop
pop
mov
icebp
mov
and
xchg
cmp
push
xchg
push
aad
insb
fwait
repz
mov
rclb
lods
xchg
mov
movsb
cmp
fnstsw
push
idiv
pop
std
frstor
xchg
and
scas
mov
in
stc
xor
inc
mov
sub
or
pushf
mov
adc
jo
cs
insl
roll
jne
adc
mov
mulb
sub
add
rorb
mov
or
mov
arpl
mov
push
cli
inc
mov
sbb
add
xchg
rcrl
clc
jae
repnz
dec
cs
mov
dec
inc
xchg
repz
shl
movsb
lds
arpl
xlat
mov
pop
jp
jo
mov
cmp
mov
push
test
aas
mov
lods
push
adc
xor
lds
jbe
mov
or
dec
dec
scas
pop
mov
lret
lock
std
xor
cmp
mov
adc
ret
xchg
popa
rcrl
adc
xchg
fs
inc
ja
orb
icebp
mov
or
fcomip
mov
mov
pop
sbb
xchg
loopne
js
repz
ss
mov
sbb
pop
xorb
push
xlat
popa
pusha
call
xchg
cmp
cmpsl
inc
sub
push
mov
jg
int
out
imul
and
xchg
mov
lahf
jb
xchg
aas
and
mov
jmp
je
mov
adc
pop
mov
ja
je
daa
movb
jl
insl
push
sbb
dec
das
push
mov
lds
xchg
movswl
jmp
xor
das
or
jo
push
dec
inc
movsb
fsubrl
dec
adc
mov
aas
push
mov
imul
es
cmp
aad
aam
outsb
mov
or
mov
cld
repnz
pusha
or
dec
les
fistps
xlat
cltd
movsl
in
add
jmp
jns
cmpsl
cltd
dec
nop
ret
jnp
cmp
jne
jnp
push
pop
mov
ret
sarl
pop
mov
outsb
ds
popa
xchg
fstps
insb
and
popa
dec
test
jle
inc
xor
xor
out
aam
fcmovnb
scas
dec
cmp
js
cmp
outsb
jb
sahf
rorl
decl
daa
sub
ds
cmp
aas
mov
cld
adc
cmp
daa
mov
adc
ror
and
lret
sarb
cmp
leave
iret
jae
lea
mov
add
cmpsb
mov
fucomi
sbb
adc
adc
insl
pop
addr16
sub
adc
in
stos
negl
mov
xchg
sub
adc
sub
dec
dec
jnp
pop
cli
shlb
mov
sub
cmp
in
hlt
lods
jmp
adc
popf
faddl
fldl
out
rcll
data16
jp
lretw
and
fwait
jmp
jge
sbb
stc
mov
push
sbb
pop
popf
scas
sub
mov
loopne
mov
push
std
cmp
ret
adc
data16
popa
xchg
or
sbb
repnz
in
dec
sbb
outsl
mov
mov
test
sub
xor
popf
adc
xchg
xchg
bound
add
mov
or
loop
mov
adcl
xor
iret
add
rcr
inc
shll
notl
mov
adc
inc
and
cmp
push
xor
or
xchg
pop
xor
adc
sub
adc
mov
and
sti
insb
add
add
adc
cltd
fstl
cltd
pop
dec
cld
xor
add
iret
gs
sub
mov
stos
add
push
dec
mov
jb
mov
gs
out
jns
mov
cmp
jecxz
aad
stos
sbb
filds
setp
or
sbbl
fistl
or
stos
dec
push
push
gs
xor
mov
lods
arpl
mov
rorb
cmc
jbe
out
gs
push
lret
adc
xor
dec
dec
mov
sbb
iret
pop
inc
and
adc
xchg
scas
mov
sub
in
push
mov
cmp
mov
push
mov
imul
or
cwtl
out
or
or
pop
adc
test
adc
mov
hlt
decl
ror
sbb
jnp
cwtl
scas
movsl
out
dec
popf
pop
ljmp
adc
jle
jbe
popa
testl
push
jp
xor
insl
add
cld
out
xchg
cmp
gs
or
add
xchg
jns
into
popa
sbb
lock
and
and
lret
ja
and
lcall
dec
rorl
jo
leave
push
mov
leave
sahf
cs
sti
mov
mov
mov
push
aas
shll
or
sbb
rolb
fs
ror
and
lahf
testl
sarl
xchg
xor
xor
adc
das
push
pop
mov
sbb
pop
add
aaa
adc
repnz
inc
in
dec
leave
mov
ret
test
aam
addl
jle
out
add
xchg
fidivl
das
dec
xor
jbe
gs
pop
into
subb
pop
fisttpll
pop
mov
mov
call
jb
stos
cs
cwtl
xchg
shlb
add
repnz
jge
mov
in
jmp
dec
ss
cmpb
ljmp
ret
dec
fyl2xp1
mov
adcl
sbb
imul
xor
jnp
fidivrs
mov
jge
or
fs
push
mov
mov
lcall
xchg
mov
xor
dec
shll
mov
push
xchg
scas
cs
xchg
jg
xchg
mov
icebp
mov
outsl
call
sbb
sub
fsubs
addl
sbb
in
cltd
or
fmuls
dec
mov
sub
gs
cmp
jnp
mov
aaa
dec
add
pop
mov
popf
mov
jmp
iret
stos
mov
xchg
cmpl
dec
fwait
xchg
mov
loopne
xor
dec
xor
sub
cmp
fadds
loope
push
mov
sbb
inc
jg
push
gs
inc
xchg
arpl
push
bound
push
jmp
outsl
pop
rcrb
das
jp
loope
mov
adc
cli
xor
loop
subb
mov
lcall
sahf
imul
lret
lcall
add
dec
lods
hlt
cli
clc
and
mov
cmpsl
fwait
cli
xor
enter
mov
call
add
stc
mov
jnp
outsb
ljmp
pop
lret
push
mov
dec
idivl
mov
jne
sbb
es
jno
jp
cmp
mov
xchg
sub
push
rcrb
jecxz
das
and
cmovnp
mov
or
shl
fdivl
cli
in
and
adc
ss
ret
pop
fcom
sbb
xchg
inc
xor
out
mov
and
pop
shl
push
push
jo
cmpsl
xchg
xchg
mov
mov
xlat
dec
add
jbe
aaa
jge
xor
dec
scas
int3
xchg
mov
sbb
mov
cmpsl
push
jmp
lcall
fimuls
jecxz
cmp
jmp
xchg
cmp
lret
idivl
adc
push
scas
in
jo
xchg
push
mov
data16
mov
or
out
shll
out
test
addr16
xlat
loopne
hlt
xor
insl
mov
incb
repnz
gs
add
repz
push
ss
xlat
mov
lret
out
mov
jne
cld
into
int3
enter
inc
ja
push
repnz
sub
test
in
stos
xor
repnz
es
mov
into
clc
addl
sub
cmpsl
jbe
xchg
inc
subb
xchg
mov
shlb
sub
jb
push
rcll
pusha
sub
out
xor
jle
aaa
push
inc
mov
dec
movsb
pop
mov
les
je
popa
loope
les
jo
daa
clc
test
push
add
cmp
sub
xor
lock
ss
and
mov
add
scas
xlat
fldt
mov
mov
test
repnz
stos
inc
pop
outsl
inc
dec
mov
xchg
mov
adc
and
adc
or
adc
adc
push
inc
decb
add
gs
pop
sbbl
lea
dec
xor
jo
mov
mov
es
pop
sahf
push
or
mov
out
jmp
mov
push
js
mov
out
out
int
roll
shll
dec
add
xchg
scas
cmp
pop
mov
out
and
test
pop
xchg
negl
and
ljmp
arpl
lock
ret
fcoms
adc
xor
push
or
and
mov
and
hlt
dec
mov
push
push
aaa
jecxz
ror
or
out
mov
repnz
mov
xor
test
fildll
in
push
pop
mov
test
icebp
adc
mov
stc
pop
jge
dec
rorl
in
ja
fbstp
adc
dec
rol
out
add
js
fs
fistpll
push
sbb
in
jno
pop
xchg
pushf
outsb
or
push
enter
arpl
lea
lcall
fiadds
inc
out
cmp
adc
mov
mov
push
in
mov
insb
push
fsubrs
in
push
pushf
jbe
sahf
xor
push
je
and
mov
adc
pop
lods
into
cltd
js
scas
in
pop
mov
cli
hlt
mov
in
xor
mov
scas
pop
pop
and
insb
xor
aaa
mov
pop
dec
xorb
mov
lock
mov
push
jnp
test
push
cmp
popf
xor
xor
add
inc
mov
cmp
out
scas
dec
pushl
cmpsb
pop
test
bound
push
dec
insb
popa
mov
and
dec
addr16
test
xor
cmp
gs
fs
dec
div
scas
and
dec
pop
lods
pop
iret
dec
js
shll
iret
push
xchg
push
fsubrs
xchg
push
cmp
xchg
jmp
inc
sbb
cmp
in
popa
leave
in
jno
push
xchg
movsl
xor
cwtl
mov
xchg
movsl
dec
call
fwait
fs
roll
pop
mov
popa
xor
cwtl
mov
push
shll
insb
sbb
add
push
mov
mov
ret
push
in
pop
insb
std
lahf
repnz
daa
sbb
out
xor
aas
cltd
push
mov
test
mov
add
push
pop
push
mov
and
cmp
aaa
jp
lods
aas
std
cltd
dec
scas
cmp
xchg
loop
pop
repz
cmp
sub
daa
loop
mov
pop
in
ficompl
std
dec
fmull
ds
out
out
shlb
jno
bound
lods
lds
outsl
pop
cmp
pop
or
mov
sbb
test
data16
xchg
rcr
inc
test
adc
lahf
sub
jge
jns
loop
cli
push
mov
mov
sbb
xor
jmpw
mov
fnsave
ret
mov
mov
pop
pop
les
and
sub
iret
fidivl
jmp
push
xchg
or
arpl
stc
jmp
xor
dec
mov
sub
xor
xchg
mull
imul
insl
dec
nop
lret
lahf
sahf
mov
icebp
pop
add
fdivrs
in
sbb
push
sbb
pusha
iret
sub
subl
push
stos
pop
repnz
or
and
shlb
fsubp
sbb
icebp
into
orb
andb
cmpsb
icebp
xor
ja
or
data16
mov
mov
out
jns
je
push
mov
movsl
cmp
xor
repnz
pop
lahf
push
repnz
jns
daa
cmp
fadds
sbb
sti
xchg
adc
mov
in
clc
clc
xor
adc
iret
loopne
js
leave
mov
dec
or
shrl
adc
jle
xlat
imul
js
jo
sbb
in
jmp
push
arpl
cltd
sbb
xor
dec
je
lods
stc
addb
vcvtpd2dqx
sbb
xor
xlat
or
int
mov
call
movsl
or
int3
enter
pop
jns
dec
insl
push
mov
orb
test
push
in
popa
in
call
mov
out
out
fmulp
pop
addb
sbb
jmp
dec
mov
in
adc
insl
fwait
adc
and
or
mov
push
jbe
mov
or
mov
push
xor
fmuls
jae
jge
cmp
mov
call
mov
mov
test
adc
pop
mov
cwtl
mov
jmp
in
pop
out
mov
outsb
add
cld
cmp
push
aad
fs
mov
xor
sub
mov
pusha
in
sbb
jo
daa
pop
in
sbb
or
pop
das
xor
jnp
insb
in
arpl
fldlg2
or
ja
push
in
testb
mov
mov
jbe
aam
and
jmp
add
mov
push
mov
mov
jo
xchg
adc
std
mov
daa
push
test
or
mov
dec
mov
movsl
sbb
and
pop
mov
add
jl
sbb
sbb
mov
aad
loop
or
lock
or
filds
sub
mov
lcall
in
sub
insl
and
pushf
lea
dec
pop
mov
mov
pop
pop
adc
xlat
add
sbb
lock
xorl
cmp
out
stos
push
sbb
push
mov
jp
jbe
mov
push
jg
and
mov
inc
pop
jbe
sub
repz
dec
in
shl
cmp
ja
cmpsb
gs
out
pop
adc
cmp
in
movsb
test
scas
cwtl
les
xchg
mov
jne
aad
mov
loop
sub
int
out
hlt
sub
sti
stos
inc
xchg
xor
shrb
cmpsb
or
jbe
leave
pusha
jmp
shrl
js
jae
out
pop
rolb
sbb
adc
daa
clc
pop
fisubs
arpl
enter
push
jne
jg
pop
int3
sbb
repnz
pop
or
hlt
shrb
iret
and
push
lock
mov
fisttpll
xor
pushf
xorb
inc
xor
imul
cmp
outsb
lcall
sahf
lods
mov
and
xchg
or
lock
filds
mov
adc
xchg
pusha
inc
clc
mov
mov
add
pop
scas
jl
or
lret
dec
les
dec
fisubrl
or
bound
test
xchg
jg
adc
inc
mov
rorb
out
faddp
adc
pop
xlat
fdivrl
mov
fwait
repnz
icebp
test
data16
or
add
lahf
jl
dec
mov
dec
int
lcall
dec
cmp
xorl
jne
mov
jbe
aas
movsl
add
cmp
leave
lret
iret
sbb
bound
mov
adc
mov
push
and
lods
jle
scas
je
mov
add
cmp
sub
dec
sbb
daa
in
mov
jge
or
and
imulb
mov
sarl
add
popa
push
addr16
fsubrl
and
mov
inc
cmpsb
cmp
push
pop
aam
enter
mov
mov
popl
jnp
or
fsts
mov
jb
sub
add
imul
cltd
adc
jmp
add
xchg
fnstcw
adc
sub
repz
rcl
pop
fsubp
inc
mov
mov
out
mov
paddusb
xchg
adc
jge
sbb
inc
pop
push
cmpsb
inc
cwtl
mov
pop
pop
mov
aas
dec
imul
jg
push
xchg
scas
mov
movd
adc
out
ss
and
aad
stos
sub
add
adc
ljmp
xchg
shll
xchg
xchg
inc
out
or
or
ss
fcmovne
std
and
std
sbb
pop
arpl
mov
mov
out
test
jle
dec
fldt
adc
out
mov
mov
pop
cmp
fdivs
push
sahf
sub
add
gs
push
cmp
xchg
adcl
xchg
int
mov
push
aaa
nop
jge
dec
test
aad
lds
and
mov
lret
cmpsb
cmpsl
dec
test
and
nop
or
sub
pop
sub
fincstp
out
dec
push
adc
fsubs
xor
push
mov
ror
bnd
or
push
dec
in
pop
stc
pop
icebp
xchg
lcall
push
cmp
imul
xorl
xor
aad
mov
out
cmp
das
movsb
mov
ret
mov
aam
sbb
or
scas
cltd
sti
cmp
lock
cltd
ret
inc
adc
inc
pop
dec
sub
mov
jge
testl
pop
dec
movsb
das
inc
pop
and
jns
scas
push
or
in
in
test
and
rcll
mov
mov
inc
xchg
int3
pop
cli
push
jno
rcrl
gs
aad
js
cld
mov
nop
inc
xchg
push
mov
dec
mov
jns
gs
repnz
mov
mov
jbe
xlat
or
inc
in
aam
sbb
push
aam
lcall
inc
xchg
mov
and
adc
loope
jne
mov
incb
sahf
adc
pop
xor
arpl
pop
movsl
xchg
pusha
ljmp
xor
ficompl
movsl
aam
lret
jmp
fisubs
jb
repnz
into
add
mov
sti
sbb
je
and
mov
fwait
movsb
pop
fimull
cltd
pop
mov
pop
xlat
ficoml
out
insl
insl
or
insb
rorl
stc
ret
cmpsb
in
mov
jno
and
stc
mov
cmp
mov
imul
or
add
cmpsb
xor
out
adcb
fbld
mov
insb
add
or
and
lock
gs
xchg
sub
fisttpll
out
sbb
mov
jmp
mov
dec
popa
ljmp
sbbb
pop
mov
idivl
mov
mov
lahf
mov
iret
xorl
dec
sub
dec
inc
in
cmpsb
in
push
inc
inc
push
or
dec
or
jmp
xchg
xchg
xor
daa
mov
cmp
sbb
hlt
xchg
pop
fmull
mov
xchg
ss
xchg
mov
dec
stos
shlb
push
ljmp
rep
daa
mov
xchg
inc
aad
js
cmp
cld
mov
cld
mov
sbb
sbb
pushf
cli
cmp
subl
xchg
add
lods
xchg
dec
ljmp
pop
mov
notb
pop
shl
shlb
jnp
add
inc
mov
adcl
xor
fldt
push
shl
nop
in
xor
push
pop
dec
lahf
xor
testl
andb
rolb
cmp
push
mov
xlat
and
pop
jo
scas
in
xor
sub
sub
popa
jno
push
push
fimuls
xchg
or
xor
inc
xchg
repnz
loope
out
pushf
popa
lea
push
pushf
nop
mov
dec
pusha
je
movsb
dec
movsl
pop
adc
jge
psubd
inc
cs
orl
xor
rcrl
repz
fucom
sti
xchg
cmpl
pop
adc
inc
mov
mov
xor
mov
sarl
jg
mov
loope
xlat
mov
out
mov
out
cmpsl
in
dec
fdivrp
arpl
arpl
xchg
lcall
inc
sbb
jmp
lcall
xchg
addb
mov
cmc
mov
movb
push
les
cwtl
repnz
cmp
cwtl
xchg
clc
je
push
fdivp
xchg
add
pop
aad
dec
mov
stc
das
andl
cmpb
sub
fcomip
or
jnp
or
enter
inc
into
xchg
gs
repnz
int
push
std
pop
mov
es
daa
rclb
xor
repnz
push
add
aas
xlat
fstl
dec
fwait
pop
movsb
fdivs
mov
mov
bound
and
sbb
jo
push
xor
ja
shl
adc
cwtl
sbb
pop
sbb
es
xlat
call
and
jnp
xor
jg
mov
cmpsb
pop
popf
lcall
in
or
sub
mov
aas
push
addr16
push
jge
bound
gs
fdivrl
mov
or
xchg
pop
test
push
jle
xorl
xor
cmp
popf
in
sub
sub
cmpsl
loopne
and
sub
cltd
adc
div
in
mov
test
lret
mov
push
mov
inc
pop
cmpsl
shll
mov
insl
mov
out
cmpsb
dec
ja
call
mov
xor
leave
sahf
in
dec
loopne
mov
cltd
push
cmp
inc
in
cmc
imul
loopne
aam
xchg
fadd
or
xor
inc
daa
mov
test
or
xor
repz
addl
cmp
push
lahf
push
andl
mov
cmc
inc
add
push
cli
jae,pn
cmp
xchg
sbb
mov
ffree
push
jnp
lock
pop
repnz
pop
mov
mov
push
imul
mov
inc
call
jp
mov
lret
popf
dec
mov
jg
push
pop
pop
rolb
sub
clc
cmp
push
dec
adc
inc
sub
mov
sbb
jge
push
inc
adc
or
imul
stc
repnz
cld
adc
dec
sub
aaa
cmp
sarb
sbb
add
push
fsubrs
jae
js
shl
enter
iret
loope
xchg
cmp
and
les
mov
xchg
scas
jns
mov
lods
push
iret
in
mov
pop
mov
mov
xchg
iret
test
fdivs
out
mov
mov
jno
cmp
sahf
sbb
cmp
mov
push
pop
je
cmp
jp
cmp
xlat
faddl
stc
rcr
out
or
xchg
std
mov
sbb
pusha
mov
mov
sbb
call
dec
add
adc
lods
xor
pop
outsb
mov
fwait
cmp
xchg
jge
scas
or
push
xchg
lcall
mov
loopne
mov
cmp
push
dec
pop
imul
sub
pop
dec
insl
data16
arpl
adc
cltd
imul
frstor
popf
jnp
push
pushfw
loopne
mov
pop
fisubs
mov
add
je
or
lea
sbb
sbb
cmp
lock
jecxz
jmp
xchg
les
add
mov
xchg
cmp
dec
jne
add
pop
dec
in
push
shll
cwtl
sbb
mov
ror
inc
movsb
sbb
test
call
add
dec
inc
lret
pop
pusha
mov
xchg
xchg
push
sbb
mov
enter
mov
in
jle
cmpsb
imul
mov
push
xchg
ret
mov
and
mov
loopne
and
xor
pop
ja
lods
mov
cwtl
mov
sarl
or
mov
cmp
dec
and
push
jmp
cmc
aas
icebp
imul
nop
ja
icebp
out
insb
mov
aaa
sahf
ret
test
imul
int
pop
dec
test
inc
test
dec
leave
jmp
sbb
mov
sub
mov
jo
hlt
and
aam
sbb
jo
out
fcomp
add
sbb
fcmovnu
sub
insb
jle
mov
dec
or
cmp
mov
cmp
sub
mov
xor
pop
mov
push
cld
jb
mov
imul
fs
loop
xchg
ljmp
and
gs
pop
dec
in
test
outsl
dec
lret
sbb
lea
pop
mov
mov
lods
cmp
jmp
test
push
iret
out
adc
mov
jg
aad
add
cmp
mov
xchg
stc
xchg
jae
jno
xlat
mov
jg
xchg
xchg
and
add
rolb
add
movsl
test
cmc
mov
jae
jp
ljmp
imul
sbb
rcrb
sbb
or
sub
adc
sub
stc
add
popf
mov
mov
je
push
in
popf
mov
inc
aas
repnz
xchg
cld
dec
popf
mov
iret
sub
xchg
cmc
push
out
dec
cmp
rcrl
mov
push
out
jnp
xor
test
in
mov
adc
int
testl
ss
js
orb
xlat
sbb
pop
std
sub
jle
ss
pop
sub
xor
sub
gs
push
int
add
imul
push
aad
add
insl
mov
negl
daa
lea
push
in
mov
sbb
mov
aam
push
pop
pop
call
fiaddl
mov
jo
mov
dec
je
jno
lret
dec
pop
outsl
dec
into
clc
jb
mov
and
sti
mov
push
cmp
dec
shr
imul
and
imul
mov
dec
dec
gs
adc
add
outsl
mov
stc
push
push
popf
pop
shrl
or
clc
pusha
jg
and
pop
outsb
divl
cltd
jns
sub
pop
out
negl
es
fdiv
scas
outsl
jl
xor
add
sbb
inc
mov
lret
scas
nop
lcall
paddb
dec
daa
xlat
data16
jo
sbb
xlat
sub
and
dec
ret
mov
mov
dec
loop
sub
ljmp
rol
dec
daa
nop
mov
sub
pop
mov
fst
jge
repnz
mov
lods
dec
jg
ds
hlt
ljmp
push
adc
cli
icebp
xor
andb
sarl
in
inc
push
push
mov
int
inc
rcll
push
add
and
ret
sub
ficoms
sbb
jns
aas
shlb
cmpsb
mov
xchg
decl
imul
adc
lret
out
inc
inc
add
xor
rol
lea
sbb
add
push
pop
arpl
xor
divb
and
xor
push
adc
push
in
imul
dec
sbb
xchg
aam
fdivl
mov
xchg
push
je
lds
fwait
mov
and
pusha
cli
push
xor
in
iret
add
cli
movsb
xchg
push
or
addr16
insb
sub
adc
and
push
mov
das
mov
sbb
push
sub
jg
mov
ss
sbb
mov
mov
xchg
sub
mov
js
sub
mov
push
xchg
sbb
mov
dec
jge
mov
add
add
cmp
xor
std
enter
movsb
mov
push
ret
imul
out
aas
inc
loopne
jp
inc
lcall
das
iret
jg
pop
imul
mov
icebp
aaa
bound
inc
xchg
dec
push
push
sbb
popf
ficomps
mov
in
push
mov
lea
sub
aas
jns
jbe
fcmovbe
push
pop
test
les
and
pop
fdivl
adc
dec
stos
jg
ljmp
jp
lahf
in
mov
adc
jp
movsb
pop
shlb
cwtl
xchg
xor
inc
inc
push
xchg
ret
dec
imul
jp
fdivrs
sbb
add
ljmp
jnp
push
sbb
or
icebp
insl
ud2
cmp
pop
ljmp
lock
jg,pt
inc
lods
jns
nop
dec
xor
mov
jecxz
shll
orb
jmp
sbb
jne
ss
pop
inc
cmp
sbb
out
pushf
bound
dec
je
mov
mov
inc
incb
imul
fists
clc
js
pop
dec
scas
shrb
jmp
add
rcrb
out
shr
ret
xor
xor
sub
adc
inc
into
sti
jle
or
leave
and
bound
les
nop
inc
push
xchg
fs
movsl
push
out
and
mov
gs
out
xchg
int
push
pop
cmp
arpl
mov
mov
and
and
aad
mov
xchg
adc
jmp
sub
mov
adc
cmpsl
sub
adc
xor
adc
out
fs
inc
aam
rcrb
ljmp
inc
inc
lock
push
sub
cmp
sub
xor
cmp
mov
in
mov
fsubl
fldl
test
popf
jbe
fs
mov
call
and
cmp
and
push
mov
icebp
push
pop
aad
rol
xlat
std
push
cld
popf
or
in
adc
mov
nop
sbb
xlat
xor
sbb
rcr
adc
sub
daa
in
aad
inc
pushaw
mov
loope
dec
aaa
outsl
pop
dec
jo
loopne
xchg
cmpsl
push
stos
notb
xor
pop
rorb
sbb
sahf
out
rcrl
pop
or
lahf
sub
std
jl
popa
scas
pop
fwait
mov
pop
aam
mov
out
jo
in
shll
adc
and
cmp
xchg
jbe
or
stos
push
cwtl
mov
out
test
mov
adc
icebp
out
test
mov
lret
movsl
cli
dec
loop
insl
inc
cs
mov
add
cs
call
out
jg
gs
cmpsl
int3
push
stos
inc
push
xchg
cmp
lcall
outsl
into
rcrb
jmp
jo
loopne
popa
rclb
pop
adc
es
mov
sbb
dec
or
mov
jg
adcb
scas
fwait
ret
mov
jo
cmp
mov
gs
dec
lret
icebp
xchg
sub
cmp
xor
sbb
or
fstps
pop
sbb
mov
fdiv
gs
xchg
jl
scas
dec
xchg
cli
cltd
push
xor
mov
xlat
imul
out
andb
data16
loop
sub
fldenv
jne
add
jno
sbb
mov
es
test
adc
sbb
sub
xlat
mov
loop
push
jl
push
jmp
cwtl
mov
push
jo
jno
std
dec
in
cmpsl
inc
inc
roll
sub
pushf
loopne
adc
ficoms
cwtl
test
mov
mov
loop
jl
clc
ss
dec
popf
leave
push
shl
shrb
pop
sub
dec
inc
push
test
popa
dec
xchg
insb
and
mov
lods
sbb
add
inc
cmp
jo
outsl
xchg
bound
jns
pop
fmul
fistps
cmp
imul
mov
aam
out
mov
jmp
in
inc
jne
mov
xchg
add
jle
outsb
mov
int
fcmovb
repz
arpl
or
xor
dec
jbe
pop
xchg
push
sbb
cs
adc
or
jnp
xchg
pop
or
shll
fs
js
cmpsl
out
inc
insl
push
outsb
pop
clc
jbe
lds
pop
and
push
sti
pop
fdiv
jp
cmc
data16
mov
and
subb
aaa
sahf
cbtw
inc
push
out
jmp
pmulhw
mov
and
scas
std
cs
sti
sub
lock
ficoml
ret
in
cmpb
imul
dec
sbb
scas
jns
xchg
lods
mov
icebp
lock
aad
xchg
pop
jo
sbb
cmp
aaa
xchg
xchg
dec
sarl
xor
adc
mov
outsl
lahf
out
xor
dec
mov
pop
dec
faddl
fs
adc
jns
sub
js
xchg
fs
adc
dec
pop
aaa
orl
mov
negb
mov
dec
and
sahf
outsb
imul
push
cmc
jnp
dec
and
ljmp
sbb
testl
test
pop
jo
lret
cld
cmp
rcll
shrb
dec
and
mov
cmp
adc
xor
adc
das
loope
push
sbb
daa
sbbl
xor
jbe
stos
stc
in
jle
sbb
inc
nop
dec
mov
cmpsb
sub
je
repnz
movsb
jno
mov
cmp
jg
int
jle
les
dec
push
ret
xor
hlt
push
xor
test
sahf
lods
xchg
fstpt
xchg
js
and
inc
loope
push
cmpsl
lods
shlb
xor
stc
mov
outsb
jb
push
adc
dec
icebp
call
mov
and
mov
les
and
mov
add
cmp
dec
stc
pop
mov
test
insl
scas
cmpsl
cltd
xchg
nop
popf
aam
test
add
dec
fcmove
adc
pop
mov
pop
divl
inc
inc
mov
pop
test
add
lock
mov
adc
adc
stc
lds
cmp
xorb
pop
into
int3
dec
popa
enterw
pop
loopne
and
mov
xlat
mov
mov
adc
sub
je
das
scas
popa
jae
pop
jb
dec
sub
inc
push
mov
call
lret
popf
pop
loope
push
push
notl
cmpsl
or
outsl
or
mov
xor
cmpsb
test
xlat
out
cmpsb
je
or
pop
adc
push
cmp
bound
mov
les
add
popl
add
pop
flds
xchg
pop
dec
jmp
inc
ss
jbe
adc
and
fstps
mov
sub
cpuid
xchg
xchg
in
mov
fbld
test
lret
jb
stos
mov
xor
aas
cmp
jo
gs
inc
mov
xchg
dec
push
movsb
pop
sti
lods
repz
xor
into
add
int3
clc
icebp
push
mov
daa
pop
mov
or
rcrl
xor
push
dec
imul
test
gs
dec
xlat
nop
shll
lcall
sbb
cmp
rcll
pusha
dec
jae
cltd
xor
in
stc
adc
pop
adcb
jle
ja
adc
out
jmp
and
cmp
jle
je
aam
mov
pop
into
mov
push
cmp
inc
push
jno
rcrl
or
adc
icebp
jne
fsubrs
cwtl
in
jmp
es
sbb
cwtl
mov
sarb
inc
pop
ficomps
testl
jle
add
call
sbb
data16
sub
aas
test
add
aas
push
movsb
scas
jp
fdivs
or
or
test
arpl
hlt
mov
sarb
push
stos
int3
pop
and
dec
adc
pop
lock
mov
movsl
inc
mov
int
mov
mov
fistps
lock
and
int
jle
mov
push
jae
pop
inc
stc
pop
inc
rcll
xchg
fwait
test
jnp
mov
dec
in
nop
lahf
int3
adc
inc
xchg
test
loop
jae
lret
jne
mov
in
mov
ss
ficompl
in
cwtl
in
daa
mov
rolb
enter
pushf
sub
cmpsb
fcoms
in
mov
in
int3
mov
into
and
pop
arpl
mov
imul
push
sub
clc
pop
icebp
sub
xor
movsb
sbb
gs
mov
out
dec
test
dec
and
je
aaa
jmp
fidivrs
test
stos
testb
xor
xlat
or
jnp
xlat
lahf
xor
std
mov
mov
dec
outsl
inc
sub
lcall
xchg
nop
pop
push
rcrb
dec
sub
mov
fs
inc
mov
test
jnp
daa
test
xchg
mov
cmpsb
jecxz
dec
das
ret
inc
jmp
subb
fisubrs
mov
mov
xchg
mov
loope
xor
daa
xchg
dec
xchg
pusha
mov
std
mov
cwtl
cmpsl
mov
pop
imul
jecxz
xchg
outsl
mov
xchg
adc
push
mov
pop
insb
idiv
js
aam
lahf
pop
ds
imul
jle
adc
les
aam
lahf
cmp
push
insb
lock
or
lahf
mov
and
jmp
popf
push
pop
in
mov
into
dec
pop
and
pushf
sbb
and
jns
call
ret
mov
addr16
out
xlat
clc
rcrb
jg
sbb
fcmovne
xor
push
lock
xor
leave
ja
push
sbb
sbb
add
fidivrl
xor
or
je
cmp
lock
mov
arpl
mov
loope
mov
mov
mov
jbe
cmpsl
lret
cmpsb
push
lock
or
cmc
pushf
in
into
sahf
nop
push
cmp
sbb
stos
push
mov
adc
jg
ja
daa
mov
xorl
lea
inc
mov
adc
ss
cmp
fidivs
and
jns
out
xchg
and
test
out
push
ja
out
cltd
andl
add
bound
ret
pop
ret
cli
inc
sub
inc
add
test
or
adc
adc
divl
shl
xchg
loopne
cmp
sbb
scas
push
cmp
sbb
pop
mov
bound
jl
mov
mov
mov
lret
sub
aas
mov
sub
daa
int3
jbe
jne
jno
jecxz
ja
or
cmp
jns
aas
pop
xchg
xchg
fstl
pop
dec
nop
mov
ja
or
inc
fld
jne
xlat
mov
cmp
jo
popa
sub
imul
pop
jne
dec
push
push
movsb
xchg
and
int3
add
push
divb
jg
and
jp
dec
lds
jns
fisttps
loopne
aad
arpl
out
inc
push
jns
push
fdivrs
fwait
call
clc
cli
inc
mov
punpckhdq
insl
push
rcrl
mov
lahf
pop
adc
adc
push
pop
fs
adc
jne
mov
loop
mov
sbb
push
aam
scas
pop
movsl
int3
sbb
add
repz
mov
cmp
in
xor
into
test
inc
outsb
fidivrl
cmp
pop
aaa
in
leave
mov
bound
xchg
leave
or
ja
cmpsb
iret
jbe
rcrb
push
fbstp
xor
adc
std
out
rcrl
mov
lock
rcrl
lcall
sti
xchg
ss
sub
add
sti
mov
push
mov
arpl
subl
pusha
pushf
adc
push
jae
cmp
lock
xorl
and
cmpsb
cld
shll
pushf
ret
push
mov
pop
jno
push
scas
adc
lret
mov
cmc
ret
mov
andb
jae
test
daa
ror
jle
sbb
xchg
add
mov
sub
cs
cltd
push
push
adc
popa
add
popf
rcll
pop
test
push
call
aaa
xchg
dec
push
sahf
lcall
and
mov
das
insl
sahf
adc
sub
ret
scas
push
inc
jge
or
dec
jne
mov
push
lcall
push
xchg
xor
lock
adc
dec
pusha
mov
pop
mov
das
push
jle
lods
movsb
jno
inc
jbe
mov
daa
inc
pop
push
subb
or
pop
dec
icebp
repnz
xor
dec
gs
push
mov
mov
test
pusha
and
push
or
inc
lds
mov
lds
shlb
clc
mov
fwait
inc
popa
pop
push
aam
mov
rcrb
xchg
imul
cmp
cmp
lock
jns
and
or
dec
jb
out
cmp
add
mov
inc
push
jb
into
fwait
add
mov
popf
jmp
ljmp
mov
xchg
shrl
iret
stc
jb
es
mov
pop
pop
pop
add
sub
pushl
push
dec
popf
in
ficomps
mov
call
shlb
aam
stc
test
out
adc
inc
rorb
and
fadd
mov
pop
scas
loope
jp
sbb
push
push
in
scas
test
sub
xchg
and
push
loope
push
mov
shlb
lods
inc
add
nop
cwtl
inc
inc
imul
xchg
fxch
mov
popf
xchg
ret
push
pop
hlt
jp
and
mov
inc
push
insl
push
xor
dec
or
stos
mov
pop
das
pop
pusha
and
dec
inc
je
cmpl
leave
push
ja
cltd
inc
push
incl
inc
inc
xor
xor
lcall
std
dec
call
xchg
bound
in
adc
pop
imul
inc
sbb
loopne
mov
mov
mov
lods
mov
mov
jp
aad
bound
adc
adcl
data16
jmp
mov
inc
out
pushf
mov
push
jmp
dec
sub
ljmp
add
pop
jns
out
stos
sub
nop
and
push
cltd
cli
daa
into
or
data16
out
cs
dec
faddp
push
outsl
jge
jns
inc
mov
lret
xor
mov
sbb
push
and
fidivrl
lds
pop
pushf
add
ljmp
int3
mov
mov
sbb
bound
repnz
addr16
pop
xchg
mov
scas
dec
pop
clc
popa
jmp
hlt
inc
mov
cmp
or
push
adc
lahf
in
imul
and
sbb
mov
sub
movsl
inc
mov
jecxz
outsl
inc
movsb
stos
dec
adc
bound
pop
pop
dec
imul
fmul
mov
jmp
out
cmpl
xor
sbb
fisubrl
and
sbb
loope
mov
jne
xchg
mov
lea
cmpsl
lret
test
mov
dec
es
fwait
mov
fprem1
adcb
xlat
pop
push
sub
or
sub
popf
movsb
aas
sbb
div
or
mov
scas
push
ficoms
call
jp
sbb
hlt
xchg
xchg
jo
dec
lock
mov
cld
inc
mov
cmp
out
add
aad
out
test
xor
shrl
add
sti
inc
outsl
icebp
popa
sbb
sub
xchg
fs
popa
aad
push
jmp
dec
fbstp
sbb
add
and
inc
pusha
dec
push
push
pop
push
sbb
ja
xchg
stos
call
jecxz
stos
inc
dec
or
movsl
xor
jnp
sbb
ljmp
mov
sub
xchg
inc
lods
jg
fwait
add
pop
ja
xlat
push
sbb
cmp
fiadds
sti
orl
add
mov
and
stos
jg,pn
data16
in
dec
or
dec
jmp
mov
dec
popf
cltd
and
lock
pop
lock
leave
jl
call
addr16
pusha
inc
rcrl
xchg
xchg
sbb
ja
sbb
cltd
movsb
data16
mov
cmp
mov
xchg
outsb
and
jg
or
das
sbb
repnz
stc
aaa
push
mov
adc
outsb
lds
nop
repz
ficoml
jmp
repz
ret
xchg
add
repnz
or
leave
cmp
adc
dec
addr16
repnz
mov
pop
int
sbbb
jnp
xor
pop
rclb
call
fisubrs
sub
mov
sbb
loop
adc
sbb
jge
fdivl
shl
aam
mov
inc
or
call
int3
fs
inc
dec
call
add
cmp
mov
jl
ljmp
call
int3
dec
dec
rclb
jle
es
mov
addb
daa
inc
xchg
cli
out
or
or
jne
add
inc
cmpsl
adcb
ds
outsl
mov
adc
subb
sub
add
jecxz
add
popa
pop
icebp
in
push
lods
inc
imul
mov
es
xchg
pushl
je
and
mov
addl
test
sub
mov
and
jbe
push
cmp
out
aaa
hlt
inc
repz
cmp
lods
mov
sbb
sub
insb
push
xchg
scas
out
lds
cmp
ffree
push
dec
mov
stc
cwtl
cmp
sub
jmp
add
pop
jecxz
xor
das
gs
int3
jmp
inc
aaa
hlt
mov
cmp
mov
iret
fdiv
lds
leave
dec
xchg
jne
jl
add
lods
dec
xchg
fisubrl
lahf
imul
out
mov
or
mov
inc
leave
xlat
pop
out
or
xchg
fmull
negl
push
insb
rcrb
repz
insl
sti
push
orb
daa
xor
dec
fcmovnb
loope
call
lret
aas
mov
fbstp
or
lcall
movsb
inc
cmp
or
cmpsl
bound
add
lret
int
jmp
aad
int
mov
into
cmp
fbld
aad
add
insl
cli
xchg
fsubr
adc
cmc
xchg
jne
mov
je
jmp
pop
test
xchg
bswap
or
sbb
mov
das
sub
sarl
outsl
into
pushf
lcall
dec
sti
out
dec
xchg
sahf
cwtl
aam
dec
lods
js
or
shl
jne
movsl
fsubrs
xchg
call
das
outsl
pop
push
push
inc
in
or
push
adc
sub
lcall
xor
mov
add
ljmp
aam
mov
shll
loopne
das
popf
rcpps
add
out
jg
out
and
add
mov
mov
loop
in
repz
movsb
cmp
icebp
std
popa
pop
xor
sti
pop
fisttps
add
jno
adc
mov
negb
mov
adc
stos
pop
inc
push
pop
fstpt
cwtl
in
push
mov
loope
jns
push
jne
lods
mov
ret
pop
cmp
xchg
cmp
ret
imul
or
dec
mov
popa
prefetch
sti
inc
lahf
xchg
push
mov
jmp
mov
mov
fcmove
jns
shr
fdivrs
data16
xchg
inc
cmp
fwait
jnp
dec
mov
push
loopne
ds
out
inc
push
and
add
or
xchg
xchg
and
jb
push
pop
push
stos
mov
inc
mov
loop
aad
ljmp
xor
push
xchg
mov
lods
outsl
shl
test
nop
stos
xchg
loopne
mov
clc
fists
push
sbb
pushf
xchg
inc
xchg
pop
insl
xchg
test
push
call
test
scas
dec
les
push
mov
mov
inc
insl
fcompp
jb
xor
mov
ja
icebp
sub
cmc
push
addr16
roll
int
xchg
loop
mov
pop
pop
mov
fmuls
or
jl
out
cltd
adc
outsl
test
scas
lret
arpl
lods
cmp
repnz
xchg
jge
lods
pmaxsw
sub
aad
inc
ljmp
inc
incl
jno
nop
push
cmp
repz
adc
inc
iret
or
push
pop
mov
or
add
xchg
cmp
xlat
fwait
shll
inc
sti
jle
jns
inc
mov
mov
adc
adc
loopne
test
test
lret
jne
aaa
jbe
xor
test
and
jmp
lret
test
mov
add
mov
jp
mov
mov
push
loop
loopne
xor
xchg
cmp
sbbb
inc
jae
mov
inc
mov
lods
fwait
xor
lea
shrl
or
dec
ret
stos
lds
mov
enter
pop
or
cmpsl
and
add
or
call
sub
mov
pop
jge
je
in
out
mov
addr16
pushf
pop
pop
sbb
ret
cmp
out
movsl
pop
sbb
inc
pushf
pushf
fdivs
or
shlb
jbe
fisttps
icebp
pusha
pusha
scas
fucomp
test
xchg
inc
lods
adcl
rcll
or
cmp
xchg
fcmovne
je
jecxz
inc
xchg
add
push
and
insl
lods
fmul
or
push
xchg
add
mov
or
mulb
mov
lret
push
and
sbb
or
sti
pop
popa
sbb
xor
jle
jle
popa
jp
and
gs
add
in
jmp
insl
in
insl
lods
or
pop
into
dec
arpl
inc
pop
jb
enter
push
xchg
lea
mov
mov
pop
cltd
mov
xchg
insb
pop
mov
leave
ret
or
push
adc
cmpb
scas
mov
test
inc
push
inc
push
xchg
pop
sbb
inc
insl
les
lods
in
mov
jbe
pop
cmpsb
push
push
ja
adc
dec
pushf
cmp
int
xor
mov
xchg
cmpsl
icebp
add
pop
jg
shr
in
outsl
hlt
shrb
mov
les
cmp
test
cmp
inc
cmp
jmp
push
and
xchg
xchg
jecxz
sbb
enter
fldt
cmp
mov
mov
adc
bound
mov
stc
sub
push
cmp
movsl
add
icebp
fiadds
data16
insl
cmp
in
imulb
xchg
sahf
das
adc
push
adc
in
cmp
fldcw
pop
jg
jne
adc
pop
jne
pop
out
daa
xor
ficoms
pop
leave
push
movsl
push
aam
icebp
addl
adc
inc
mov
or
and
lea
pop
stc
dec
daa
xchg
stos
mov
repz
popa
lock
push
pop
test
cltd
ret
fcmovnb
fnstcw
icebp
hlt
jl
in
imul
nop
pop
mov
push
inc
mov
xlat
sub
shlb
dec
in
fsubp
jns
xchg
jno
aas
mov
and
lock
add
dec
inc
dec
or
jae
mov
sahf
inc
aam
mov
fs
inc
sbb
mov
or
push
sbb
push
icebp
test
dec
mov
sub
scas
or
mov
mov
out
pop
arpl
jno
xor
je
stos
enter
xor
stos
adc
inc
test
lahf
outsb
ja
or
test
inc
inc
iret
xchg
inc
shrl
mov
sub
mov
jecxz
push
popa
pop
cltd
repz
mov
inc
imul
jge
shll
imul
das
in
shl
lds
sub
shlb
bound
aaa
je
pop
rep
pop
in
adc
cmpsl
add
inc
and
out
jmp
rclb
xchg
rorl
fcoms
iret
mov
enter
ljmp
add
mov
jmp
movsl
and
test
push
les
outsl
movsb
stos
dec
pop
and
movsl
pop
pop
outsb
dec
sbbl
jmp
inc
jle
fucomi
iret
add
icebp
xlat
mov
addr16
js
std
xchg
cmpsl
stos
negb
sti
hlt
mov
jecxz
int3
push
xor
jbe
mov
lods
das
xor
sub
inc
lods
inc
lcall
push
mov
das
cld
push
xchg
sahf
xor
cmpsl
cli
ds
push
cmp
mov
or
push
sub
cmp
ds
and
out
xchg
cmp
sub
sub
xor
call
inc
ficompl
shlb
xor
leave
shl
inc
sub
sbb
test
push
pop
xor
adc
insb
aam
insb
fistl
jg
cwtl
or
push
lahf
in
out
fildl
fadds
stos
rcrl
and
mov
add
mov
stos
dec
aaa
push
mov
mov
cmp
or
scas
xlat
xor
cmp
add
push
je
adc
test
outsl
lds
hlt
scas
ljmp
nop
pop
mov
jb
xchg
icebp
cltd
sbb
mov
mov
clc
outsl
and
bound
push
in
ljmp
and
pushf
dec
fsubrl
cmpl
test
lcall
mov
int
ret
rolb
adc
add
push
cmp
xor
repnz
or
arpl
mov
subb
arpl
ret
aad
movb
lahf
iret
sub
and
push
lds
in
int3
frstor
xchg
sarl
in
frstor
orl
and
add
lods
stos
xchg
enter
fnstenv
jno
cmp
fcompl
mov
add
aas
dec
mov
and
cmpsl
sub
pop
loop
fsubrl
add
sub
outsb
jb
sub
and
mov
push
in
pop
ss
es
jbe
pop
lahf
mov
push
mov
lock
loop
push
mov
mov
jmp
lcall
add
sbb
sbb
xchg
lahf
sti
aas
adc
cli
push
jns
lock
jecxz
stos
ss
test
adcb
sbb
cmp
inc
pop
or
out
scas
push
xor
movsl
push
cmp
mov
or
scas
pop
enter
or
lahf
push
or
popa
mov
add
ret
out
aas
movsb
mov
xchg
ret
ficoml
loop
jae
data16
inc
or
lock
inc
sub
andl
push
imul
jmp
inc
inc
loope,pt
push
inc
aas
mov
inc
add
and
mov
xchg
mov
imul
call
xchg
scas
cmp
mov
mov
push
adcl
mov
testl
dec
sbb
test
push
xchg
jle
jle
mov
in
push
sub
dec
xchg
pop
test
ret
fwait
stos
in
shlb
rolb
xor
cmp
cmp
push
test
lahf
cmp
les
stos
int3
mov
pop
xchg
add
loop
xor
outsb
ret
sbb
cmc
popa
movsb
sbb
andl
pop
jge
dec
mov
jp
add
fwait
notb
fisubs
scas
lahf
sti
jae
adcl
pop
out
sub
leave
pop
cld
movsl
or
xlat
shrb
faddl
pop
sahf
and
les
push
mov
lcall
lret
mov
lock
xchg
dec
imul
aam
adc
test
loop
inc
dec
push
jns
xor
push
add
fdivrs
pop
clc
dec
fldl
inc
dec
fld
ljmp
pop
jae
mov
push
adc
mov
scas
push
xor
and
push
adc
fstpl
imull
in
add
sti
ss
dec
in
data16
arpl
pusha
enter
movsb
mov
incl
pop
dec
cmp
decl
decb
sbb
call
adc
and
inc
hlt
mov
xor
adc
mov
setbe
mov
push
adc
xor
test
in
andb
jb
pop
add
sub
push
cld
sub
fmul
push
int3
or
in
lods
sbb
jne
insb
rclb
ljmp
das
pop
jno
mov
and
popa
sub
mov
adc
pop
dec
xor
out
inc
aas
fnstsw
ret
push
rorb
hlt
loop
xor
mov
push
xchg
jns
mov
jmp
xor
xchg
dec
hlt
xlat
jbe
popa
cld
mov
sti
jbe
push
ds
pop
daa
xchg
mov
mov
xchg
cmp
negl
fsts
adc
test
xchg
bound
or
movsb
jecxz
in
pop
movsl
jno
into
jno
dec
out
inc
movsl
jo
mov
icebp
mov
lods
stos
push
loope
out
cli
sub
movsb
pmaxsw
pop
jge
cs
leave
xchg
inc
lock
mov
movsb
jnp
lret
sbb
or
and
xor
out
test
test
cmc
clc
and
stos
rcrb
pop
andl
pop
and
cltd
cmc
test
cli
pushf
fucomip
ret
xlat
lret
add
lock
int
adc
sbb
outsb
add
lahf
mov
push
mov
push
mov
adc
sub
xor
add
shll
dec
inc
push
inc
cmp
dec
sti
sbbb
cs
sbb
repz
mov
and
mov
mov
xorb
jp
call
jge
xor
or
nop
ficoml
add
stc
inc
aas
xor
roll
aam
loopne
ror
adc
and
dec
mov
pop
clc
jp
rorb
sbb
and
jmp
nop
jns
ja
adc
flds
mov
fs
xor
or
pop
sbb
insl
ds
add
fucomip
xor
inc
xor
lea
repnz
mov
aaa
jno
add
imul
pop
dec
sahf
std
mov
cmp
test
sbb
hlt
add
lret
mov
outsb
mov
pop
add
pop
push
inc
stc
lret
add
push
push
addr16
pop
and
data16
outsl
mov
push
mov
inc
cmpsb
jns
ljmp
mov
add
mov
jmp
adc
repz
add
and
jne
shrl
or
mov
rorl
sub
mov
and
push
jnp
sbb
and
rcl
in
dec
std
sbb
mov
fnsave
clc
in
xor
mov
cwtl
fsubl
cs
push
mov
or
shrb
xchg
jge
sub
call
dec
adcl
mov
push
jbe
sbb
pop
in
push
in
dec
add
pop
push
fadd
pusha
iret
sbb
in
mov
aaa
jle
in
mov
cmpsl
sbb
outsb
popf
sub
sbb
adc
shll
xlat
dec
into
pushf
pop
je
pop
jg
mov
and
test
jb
or
sbb
sbb
jle
out
push
out
cmc
jnp
stos
daa
ss
pop
sti
daa
add
adc
in
lahf
jle
in
jbe
add
orl
mov
xor
lea
cli
andb
inc
mov
adc
cmpsb
mov
mov
adc
lods
into
aas
mov
push
mov
dec
sbb
mov
push
cmp
in
push
pop
repnz
dec
cmpsl
xor
mov
arpl
dec
jae
fsubr
pop
inc
shr
adc
jmp
add
jge
mov
and
add
adc
std
out
pop
jge
cmpsb
mov
adc
repnz
movsl
lea
sbb
push
inc
or
fisttps
jle
xchg
and
call
out
mov
std
jecxz
or
jo
jecxz
push
pop
bound
pop
xchg
jae
test
dec
mov
outsb
aad
inc
dec
nop
xchg
add
dec
cld
ss
ljmp
sbbl
cmpsb
pop
push
cmc
mov
cmc
push
and
jae
pop
jle
xchg
lea
jg
or
lret
add
fbld
fbstp
pushf
mov
inc
xchg
xor
add
outsb
sub
jecxz
lret
mov
push
pop
jle
pop
stos
in
int
adc
inc
jge
ret
xor
cmp
mov
lods
int
or
dec
arpl
add
mov
and
inc
in
stos
and
and
orb
mov
dec
mov
iret
mov
scas
jecxz
test
xchg
cmc
in
inc
inc
pop
in
jge
loope
cli
inc
push
and
add
fs
sbb
ret
or
sbb
cltd
cmc
push
pop
push
insl
popf
leave
or
and
sbb
mov
nop
ds
outsb
ds
push
push
fscale
xchg
out
sbb
xorb
je
loop
xchg
lret
loope
inc
and
or
push
das
xor
jne
jno
xchg
push
leave
outsl
aas
add
or
jns
add
addr16
and
jo
and
in
notb
dec
lret
or
cmp
test
outsl
arpl
orb
movsb
addb
lcall
fcmovnb
xor
outsb
scas
ret
lahf
push
lret
imul
and
decl
aaa
jno
push
movsl
leave
iret
mov
mov
nop
and
das
fcoml
decb
pop
bound
jl
flds
insl
popf
xor
or
mov
and
ret
xchg
jl
addl
lahf
inc
xor
mov
stc
out
call
adc
dec
cmp
and
ret
out
xchg
test
xchg
fucomip
ret
sbb
mov
pop
jg
mov
data16
add
push
sti
sbb
ljmp
pushf
and
aas
cmp
daa
sub
subl
xor
dec
pop
xchg
mov
int
dec
mov
ret
and
cmp
lds
or
or
mov
and
sahf
xchg
jle
adc
repnz
ret
adc
push
aaa
jbe
lret
lds
lods
adc
xor
outsl
shrb
cmp
call
into
fsubs
cs
mov
mov
loop
mov
in
dec
sbb
push
add
inc
pop
lea
pop
cmp
push
imul
jne
inc
insl
jno
and
ljmp
cmp
cli
pop
fnsave
xor
mov
hlt
clc
fnstcw
and
out
mov
dec
rcrl
into
and
pop
sub
aam
movsb
sub
sbb
jge
lret
fmull
jne
or
or
dec
addr16
ss
lahf
dec
mov
cld
sarb
aad
daa
lods
sub
mulb
xchg
dec
push
xchg
cmp
sti
mov
in
mov
andl
pop
fs
stos
fisubl
xchg
stos
insl
pop
mov
mov
out
sbb
test
dec
mov
push
loop
jo
rol
jecxz
push
cmc
std
mov
cld
test
mov
shll
jns
dec
pusha
in
xchg
and
pushf
push
inc
xor
push
sbb
stc
jecxz
or
fcmovb
pop
movsb
pop
js
mov
lret
jle
dec
cmp
pop
mov
gs
clc
xor
or
inc
mov
mov
mov
cmpsb
loope
lods
aad
ds
push
cmpsl
int
lods
dec
gs
cmc
outsl
xchg
mov
xchg
jmp
gs
into
pop
fcoms
xchg
into
aam
dec
outsl
pushl
imul
inc
adc
shll
xchg
xchg
les
and
mov
aad
out
out
push
mov
xchg
add
fdivs
dec
push
cmpsl
pop
xor
ret
aas
sub
rcll
adc
pushf
mov
std
adc
jbe
mov
lret
mov
xor
movsb
sub
popa
shl
or
test
mov
imul
shlb
je
movsl
mov
aam
fisubs
cld
mov
in
dec
fmull
mov
loopne
in
bound
or
mov
mov
into
mov
mov
ret
pop
adc
icebp
es
mov
mov
push
and
cmp
dec
pop
dec
int3
std
inc
push
jmp
int3
hlt
adc
jne
jae
fadd
push
out
adc
out
sbb
loop
lcall
xchg
sub
aam
loop
in
stos
xor
xchg
es
add
adc
cmp
movsl
das
lods
xchg
or
ret
adc
pop
xchg
clc
das
icebp
or
insb
sbb
and
dec
xor
test
jne
push
in
adc
jl
sbb
and
dec
sub
movsb
ja
clc
fldcw
jnp
cld
jge
push
cmp
mov
xorb
mov
leave
pop
jnp
jmp
push
int3
pop
pop
out
jl
push
dec
push
sbb
xchg
mov
out
dec
leave
mov
callw
jge
fcompl
fs
shlb
dec
pop
mov
adc
xchg
fcoml
and
sarb
sahf
adc
or
test
mov
xor
test
mov
and
xor
movsl
and
mov
dec
lret
inc
jo
xchg
insl
mov
mov
dec
push
mov
aas
js
push
lahf
jge
lahf
fisttps
inc
push
mov
and
jnp
test
add
incb
clc
push
not
adc
je
or
xchg
int3
pop
sub
js
cli
in
xor
mov
jmp
mov
in
pushf
or
lret
dec
daa
hlt
mov
imul
ljmp
addr16
in
sub
mov
dec
or
in
xchg
adc
jg
je
in
pop
lods
inc
sub
add
push
sub
xchg
movsl
push
and
icebp
aam
xchg
mov
jmp
jge
je
and
and
dec
adc
or
mov
inc
push
cmp
iret
dec
addr16
outsb
cmp
jnp
mov
and
adc
mov
mov
jns
lods
popf
das
xor
lods
mov
in
and
icebp
cld
cltd
fiaddl
xor
loope
inc
jp
jno
test
push
pop
mov
add
jmp
clc
cmp
or
xorl
adc
test
fcompl
lods
and
and
xlat
test
mov
add
mov
in
sub
sarb
mov
push
mov
into
iret
scas
pop
xchg
mov
mov
push
pop
add
jmp
sub
stos
add
inc
adc
adc
sub
int
mov
push
in
cli
push
jns
rcrb
movsb
pop
pop
stos
dec
push
jbe
lret
sbb
iret
jne
testl
push
testb
push
ljmp
push
inc
adc
mov
cmp
cmp
push
inc
ja
or
push
mov
mov
lret
lret
xadd
sti
adc
pop
cmp
mov
icebp
and
popa
xor
pop
gs
xlat
cmp
mov
cmp
fbld
sbb
adc
add
mov
lret
add
out
movsb
cld
add
push
pop
ja
repnz
sahf
xor
xor
xchg
int3
ja
dec
test
or
test
mov
xchg
addr16
sbb
je
jl
enter
mov
jg
mov
adc
cmpsb
lock
pop
out
or
out
call
sub
pop
mov
test
or
dec
cmp
adc
clc
adc
out
xlat
lock
jbe
add
daa
ja
pop
mov
scas
cmp
rclb
lahf
and
cmpsl
fmul
push
bound
cmp
mov
leave
jg
or
xchg
insb
in
out
or
push
dec
enter
hlt
outsl
mov
ror
cmp
enter
mov
or
and
and
into
sbb
sarb
cmp
cmp
xor
test
lock
aad
cli
sbb
mov
test
xchg
ds
dec
adc
inc
mov
gs
add
test
xor
lahf
mov
shl
dec
ficomps
dec
std
repnz
leave
jmp
mov
mov
xor
xor
add
dec
outsl
les
inc
add
ljmp
enter
gs
mov
inc
adc
fscale
push
dec
push
stc
cs
mov
std
cltd
xchg
arpl
movsl
loop
addr16
mov
cltd
dec
loopne
pop
shll
rorb
in
push
out
pop
add
add
stos
dec
push
jecxz
xor
enter
and
mov
jns
add
aaa
dec
jb
call
orb
hlt
sub
repz
sbb
sbb
cli
addr16
test
jl
mov
adc
or
jmp
lahf
xchg
sub
loop
xchg
dec
cmp
mov
into
fwait
push
fisttpll
ret
lods
mov
sub
sub
into
or
jl
push
dec
cs
lcall
push
fdivr
out
adc
fidivs
ljmp
pusha
and
push
or
movsb
cs
dec
adc
add
jl
mov
in
fildll
dec
mov
je
decb
call
push
rorl
movsl
and
dec
test
cli
jmp
repz
test
xor
cmp
cmpsb
add
aad
inc
dec
mov
fs
and
lret
ljmp
aam
push
fmulp
bound
gs
adc
sarl
dec
pop
std
jecxz
data16
js
mov
test
icebp
add
mov
ss
jae
out
fsubrs
cmp
subl
aam
mov
iret
fnstsw
ds
rcll
jmp
pop
test
pop
ljmp
adc
daa
mov
mov
faddl
or
out
lret
cmpsb
movsl
jb
out
lods
pop
push
aad
jg
enter
jbe
push
out
sbb
cs
xchg
outsb
mov
ret
mov
fdivs
push
and
stos
in
cmp
in
add
mov
rcrb
nop
enter
inc
or
sub
aas
xchg
push
xchg
push
sahf
lock
sbb
call
leave
movsb
jae
xor
hlt
inc
jge
call
jp
mov
test
stos
cmp
stos
repz
fldln2
xchg
adc
frstor
jp
test
int
cltd
and
gs
mov
js
andl
cld
shr
int
clc
push
inc
add
jp
stos
shl
add
rcrb
jecxz
jbe
push
int
movsl
add
inc
jl
xor
cmp
les
out
sahf
pop
rorb
adc
jmp
imul
lea
in
xchg
pop
call
xor
pop
fidivrs
imul
mov
sbb
xchg
mov
aas
fwait
add
hlt
pop
jns
push
loop
lret
addb
xor
or
mov
fsubrs
mov
inc
lcall
outsl
mov
lods
add
std
jo
sub
cs
jb
pop
xlat
push
cs
sub
hlt
lcall
popa
jnp
xchg
rclb
cmp
into
cmpsl
adc
lea
sbb
jle
aad
jne
pop
icebp
call
jnp
cltd
idivb
std
inc
in
push
sub
pop
popf
pop
push
lods
xchg
leave
mov
push
push
xor
inc
and
shrb
imul
pop
jnp
inc
inc
pop
int
in
insb
repz
lret
les
out
test
cmp
jne
fs
jp
ja
call
and
sub
add
inc
mov
pop
divl
sbb
mov
insl
inc
push
adc
or
jno
insl
adc
adc
notb
inc
inc
cmp
outsl
sub
inc
sar
dec
ret
das
sahf
vaddps
mov
dec
add
dec
shr
loop
add
or
mov
hlt
mov
lcall
sub
dec
hlt
sahf
clc
dec
clc
aaa
in
adc
pop
push
and
mov
sub
jno
lea
mov
fwait
aaa
iret
lea
dec
pop
mov
push
stos
cmp
jno
iret
xchg
out
insl
es
xor
push
cmp
fisttpl
jg
mov
bound
xor
xchg
mov
cmpb
std
mov
insb
in
repz
aam
loop
cwtl
pushf
mov
sbb
sbb
stos
ffree
les
cli
sbb
jne
xor
push
ret
jmp
mov
sbb
lods
xchg
mov
lret
jo
scas
and
int3
movsb
mov
mov
mov
adc
test
and
push
lret
adc
sbb
test
mov
or
lock
and
fldenv
shlb
sbb
out
lcall
mov
cmp
xlat
jb,pn
pop
fwait
xchg
insb
andb
push
sbb
in
mov
fmul
cmpsl
nop
lock
sarl
cwtl
jae
or
out
lods
or
mov
mov
push
mov
dec
fistpll
enter
in
jns
fnsave
fcompl
out
cltd
mov
inc
frstor
xchg
scas
lahf
cld
push
mov
or
push
adc
xor
outsl
xchg
add
and
jmp
sub
xchg
outsl
test
icebp
and
xchg
add
sbbb
xor
out
movsl
lret
adc
bound
ljmp
es
loopne
mov
push
sarl
jae
fs
sbb
enter
adc
icebp
xchg
add
repz
into
jp
dec
int
jne
cmc
pop
sub
adc
push
out
mov
mov
cli
mov
cmpb
mov
adc
call
in
lret
adc
or
ficoms
mov
pop
jecxz
ret
movsb
xchg
xor
adc
addl
cwtl
xchg
adc
and
call
push
jg
cmpsl
sbb
add
pop
sbb
mov
jl
loopne
ds
add
mov
mov
sar
or
sub
incb
dec
aad
sbb
fistpll
sbb
arpl
icebp
mov
out
mov
cmp
repz
and
loopne
sbb
xchg
sbb
mov
mov
scas
jg
faddl
mov
rcll
test
out
adc
mov
sub
sub
rcrb
xchg
xor
mov
fs
dec
fisttps
fnstsw
xor
inc
xor
movsb
inc
push
clc
test
stos
add
shll
cmp
gs
int3
lds
repnz
push
xor
insb
cld
pop
fsub
mov
lock
stc
xor
ljmp
cmpsl
cmp
mov
sbb
cmc
sbb
push
push
hlt
lahf
xchg
lcall
sbb
cmp
sub
pop
fisttpl
inc
addl
stos
push
scas
fdiv
cwtl
mov
outsb
test
insl
jge
enter
xchg
neg
clc
adcb
pop
jbe
lods
scas
scas
cmpb
fisubl
cmp
lds
pusha
mov
cmp
in
nop
pop
xor
leave
ss
dec
push
jnp
pop
jne
pop
push
push
push
pop
jge
mov
flds
rclb
xchg
inc
mov
test
in
lods
movsb
cmc
je
xor
imul
test
inc
stc
dec
test
int3
push
mov
adc
imul
popf
testb
and
movsb
movsl
rorl
test
in
adc
cwtl
nop
push
inc
mov
mov
lcall
repnz
adc
mov
cmp
iret
inc
push
stos
test
pop
dec
mov
je
iret
mov
mov
insl
pop
xor
cld
out
scas
lea
inc
data16
sub
add
leave
pop
push
sub
add
add
or
push
popf
mov
xchg
add
mov
push
jl
sbb
cli
dec
int3
xor
ljmp
mov
xchg
rolb
in
out
add
pop
loope
lods
cs
cld
mov
dec
pop
repz
push
aad
push
push
and
dec
repz
jns
loop
pop
cs
repnz
or
icebp
and
outsl
dec
xor
lret
dec
cwtl
inc
repz
xchg
sbb
pop
in
aad
enter
xchg
stc
inc
sub
lds
loopne
pop
mov
data16
aad
loop
push
stos
movsb
push
mov
ret
sti
xchg
mov
xchg
push
addl
int3
insb
ret
je
pop
mov
fistpl
test
xor
mov
cmp
jae
in
flds
adc
inc
xchg
mov
xchg
test
mov
sub
gs
mov
clc
mov
xchg
movsb
js
mov
fidivs
xlat
push
int3
jp
iret
jb
xor
xchg
repz
dec
xor
xchg
rcl
mov
and
repz
out
addr16
popf
aam
adc
pop
gs
jmp
test
xor
je
loop
xchg
out
push
push
xor
ljmp
pushfw
adc
lods
lahf
insb
pusha
outsl
sub
jb
outsb
gs
aaa
shll
pop
xor
xchg
cmp
cmp
pop
xchg
into
mov
pusha
lret
addr16
repnz
jg
or
jbe
shll
and
outsb
dec
push
rolb
fdivp
xlat
les
dec
add
mov
ds
or
gs
decl
dec
mov
sti
mov
sbb
sub
sub
jbe
clc
scas
repz
mov
test
dec
lcall
mov
bound
mov
xor
sarl
jno
lcall
sub
int3
sbb
addr16
jns
jl
mov
inc
loope
mov
lods
popa
mov
fsubrs
dec
mov
sub
sti
mov
inc
lods
aas
add
push
mov
scas
daa
jae
imul
and
push
fnstenv
scas
dec
packuswb
lahf
push
lds
outsl
push
movsb
add
pop
and
mov
out
lcall
mov
leave
mov
inc
and
movsl
aaa
pop
or
jg
xchg
lock
icebp
imul
pop
cmc
cmpsb
mov
int3
stos
loop
stos
js
mov
sub
mov
sti
adc
mov
loopne
in
cmpsl
pushf
aaa
outsl
adc
es
cltd
mov
es
sub
inc
rorb
mov
js
push
cmp
stos
out
push
insl
and
fnstenv
decb
sti
pusha
mov
test
mov
mov
mov
imul
mov
xchg
dec
aas
mov
sbb
mov
test
adc
mov
pop
adc
mov
loop,pt
mov
push
aad
loopne
add
mov
gs
inc
das
fstpl
mov
inc
sub
fdivrp
shlb
std
push
mov
push
adc
sub
cmp
cmpsb
mov
pop
popa
out
adc
out
and
lock
fidivrs
push
mov
mov
popf
push
inc
mov
dec
add
mov
jbe
test
pusha
adcb
js
and
jo
add
mov
dec
xor
cmp
adc
jmp
ljmp
push
dec
ret
out
xor
mov
mov
xchg
and
jb
sub
sub
test
xor
fisubrl
loop
ret
movsl
roll
jae
mov
je
movsl
jmp
outsb
push
mov
out
mov
and
pusha
mov
jne
aaa
push
lcall
push
mov
leave
daa
fistpl
pop
jb
dec
test
imul
cmp
mov
aad
std
or
push
icebp
pop
nop
mov
xchg
or
scas
ljmp
addb
cmp
dec
andb
addb
test
iret
sub
pop
fidivs
cmp
imul
mov
pop
pop
push
mov
adc
lret
lock
nop
jmp
sbb
das
jne
sbb
and
push
lcall
adcl
jo
fistpll
sub
cmpsl
outsb
cmpl
aam
push
adc
push
cvtps2pd
lret
jae
mov
icebp
out
cmp
jnp
testb
sti
pop
cltd
bound
lret
aas
hlt
jnp
push
xchg
mov
push
jae
sbb
and
jg
pop
rcrl
lods
mov
xchg
leave
rol
inc
movsb
jae
pop
cmpl
dec
xlat
jns
cmp
in
out
xor
aad
ret
push
push
lret
jne
cld
sbbb
and
cli
add
into
xor
sbb
roll
fisttpl
cmp
add
sbb
rolb
push
aaa
jbe
jb
in
sarb
push
dec
pop
prefetch
mov
cmc
cmp
mov
pop
push
sub
adc
lcall
pop
pushf
inc
xchg
addr16
jge
mov
insl
fildll
aas
les
add
out
inc
int3
or
sub
lcall
icebp
cmp
aam
push
aaa
xor
iret
xchg
gs
hlt
insl
inc
arpl
enter
loop
iret
pop
fmuls
fnstcw
push
inc
sbb
out
repz
jp
cmpsb
mov
or
ret
mov
popf
adc
sub
mov
addl
dec
and
lcall
xor
gs
jg
and
jp
mov
les
sarb
dec
xchg
orl
movsl
jg
pop
add
fwait
add
xor
pushf
pop
and
in
inc
popf
pop
bound
add
shl
ds
test
or
adc
or
push
pop
mov
fs
xchg
sub
or
dec
jns
lahf
pop
push
aas
nop
mov
sbb
cmp
or
mov
mov
and
push
push
outsl
jns
push
into
add
mov
lds
push
and
jg
insl
dec
jb,pt
mov
xchg
insl
cmp
pop
call
xchg
in
sti
mov
jle
jge
popf
test
cs
dec
dec
popa
fwait
xor
sbb
push
push
dec
push
add
andl
dec
push
push
in
adc
sahf
shl
inc
sub
nop
push
stos
push
nop
iret
scas
jno
mov
ja
adc
outsl
cmp
xchg
shll
push
cmp
ret
je
pop
add
icebp
popf
jne
lea
ret
jb
cli
cmpsl
or
and
add
les
dec
dec
popf
loop
in
mov
into
cltd
cs
out
nop
adc
mov
dec
subb
or
call
xchg
iret
jecxz
cmp
jbe
jnp
mov
pop
rorb
call
clc
outsb
test
jns
pusha
sub
xor
and
xor
mov
dec
push
push
inc
leave
dec
popa
cmp
fcoms
jbe
mov
je
cmpsl
sbb
sub
or
pop
pushf
dec
jb
aam
aas
sbb
push
in
pop
pop
js
fldenv
push
ljmp
or
loope
sub
cmpl
pop
inc
data16
xchg
and
shrl
cld
jnp
shll
push
adc
out
test
aas
hlt
sbb
add
push
mov
cli
mov
lock
jmp
out
adc
mov
jp
sbb
cmp
pop
testb
stos
jo
stc
roll
divl
xchg
out
scas
repnz
pop
daa
movsl
adc
mov
inc
fmul
test
punpckhwd
js
inc
enter
xchg
lea
test
rclb
push
or
dec
push
xor
mov
hlt
or
dec
sbb
sbb
aas
push
inc
cld
icebp
xor
or
inc
call
xor
loop
movsl
es
cmp
loopne
sbb
mov
out
mov
xor
test
inc
or
ffreep
ljmp
mov
stos
or
xor
popf
push
mov
and
push
pop
fdivrs
mov
mov
das
jns
push
pop
mov
pop
mov
jg
stc
fisttps
inc
add
sti
add
mov
cmp
adc
std
mov
lock
mov
scas
pushf
stos
jbe
jg
test
pusha
arpl
sarl
sub
or
repz
or
sub
or
loope
sbb
jp
fs
or
dec
in
mov
jecxz
sbb
stc
jo
int
cmp
mov
fcomps
jno
jo
in
ljmp
test
imul
sub
lods
notb
lds
jle
gs
lods
jge
ljmp
cmpsl
sub
pop
popf
xor
jg
mov
cltd
into
sub
outsb
add
adc
pop
mov
push
addl
shlb
xor
bound
mov
mov
stc
push
aaa
scas
xchg
inc
inc
lcall
dec
mov
sub
xor
jno
imul
add
pop
lret
dec
dec
mov
cmc
outsb
cmp
cmpsl
nop
pop
jge
jb
cmp
out
xlat
xlat
js
nop
or
cmpsb
pusha
aas
push
lea
pop
jecxz
subb
cltd
mov
fs
dec
mov
push
and
stos
lahf
dec
mov
mov
and
decb
scas
pop
push
xchg
ja
cmp
in
ss
lods
mov
ret
or
sub
std
push
faddl
xor
pop
inc
out
jge
xor
xor
ss
and
push
jne
pop
adcl
ret
js
dec
mov
cld
ss
shrl
icebp
orl
pop
iret
imul
jns
push
adc
iret
das
insb
mov
rorb
inc
push
inc
and
pop
xchg
orb
pop
insb
leave
popa
imul
add
subl
in
jne
or
into
push
fisubs
repz
cmp
shl
sub
outsl
mov
orl
push
incl
mov
jle
inc
or
push
xor
in
cmpsb
popf
add
loope
inc
movsl
mov
jae
lods
jb
add
push
cmc
sub
es
das
pop
test
aad
push
mov
stos
push
ljmp
test
xchg
fadds
fidivrs
cmp
pop
scas
daa
push
aam
cld
xchg
xchg
in
or
cltd
xchg
sub
fdivs
sub
mov
lods
inc
cmp
jo
mov
cld
ficoms
in
sub
xchg
leave
inc
loop
shl
shl
or
pop
fimull
pop
in
xor
aaa
and
mov
inc
add
imul
cmc
mov
filds
add
jg
pop
bound
xor
push
pop
pop
mov
dec
rcrb
bound
roll
and
adc
sbb
pop
mov
lahf
and
movsl
cmp
addr16
dec
ljmp
movsb
test
shll
out
push
xchg
sbbb
mov
pop
jge
xchg
into
mov
xor
fadds
into
insb
pop
mov
lods
mov
mov
insl
jb
mov
xchg
insl
jns
pushf
or
mov
lods
cmpl
lods
fistpll
cltd
and
xor
adc
sub
pop
outsw
inc
orb
mov
mov
push
or
adc
cmp
pop
push
gs
inc
ret
xchg
push
sub
bound
mov
jno
call
or
dec
pop
and
xor
and
jns
add
dec
in
jecxz
shrb
mov
sub
rcl
sbb
jns
inc
insb
mov
and
bound
cmovae
iret
sbb
lahf
push
lret
xchg
gs
daa
das
xchg
mov
je
xchg
sub
jnp
lcall
sahf
in
sub
inc
dec
stos
dec
push
insb
ljmp
xchg
int3
fstpt
pop
cmpsb
inc
fld
repz
rcll
sbb
into
lahf
jns
ficoml
int3
pop
fstpl
add
inc
sub
pop
nop
scas
add
es
inc
out
sbb
scas
fldl
inc
mov
dec
jp
lods
mov
mov
aaa
lds
das
mov
rorb
push
jno
mov
pop
push
lcall
dec
aad
enter
ret
pop
push
mov
std
test
or
push
pop
dec
or
fnstenv
xor
inc
mov
in
cmp
ficoml
sub
out
dec
in
or
clc
sbb
test
add
push
fs
mov
nop
fldl
jecxz
adc
cwtl
stos
add
mov
mov
pop
dec
addr16
dec
popl
sbb
arpl
cs
xchg
jle
out
test
or
pop
std
xchg
push
xchg
mov
xchg
jmp
add
xchg
mov
mov
bound
push
xchg
sbb
mov
lds
stos
pop
fwait
push
mov
mov
mov
movsb
push
dec
mov
lds
mov
sahf
out
fnsave
sub
addr16
clc
imul
sub
or
xor
add
leave
outsl
dec
mov
cltd
ss
xchg
iret
repnz
fnstsw
cmp
jbe
mov
sub
inc
std
push
mov
ja
rcrl
dec
stc
test
insb
inc
xchg
adc
test
lods
jno
ja
dec
mov
cmp
push
test
cmp
repz
adc
cmp
sahf
adc
pop
fs
iret
pop
test
imul
lock
imul
out
and
and
push
sbb
mov
shlb
out
pop
outsl
cs
inc
js
pop
jb
mov
test
xchg
mov
pop
cltd
jne
andb
sub
pop
jge
inc
pop
test
xor
icebp
mov
pop
pop
sub
inc
and
cli
ret
mov
jnp
pop
xorl
mov
pop
pushl
hlt
sub
push
dec
out
add
xchg
jb
push
dec
scas
popa
test
sbb
insb
inc
orb
and
sbb
lods
inc
data16
lods
xchg
mov
out
push
dec
jo
sahf
mov
fcomip
aad
ret
outsl
fildl
xchg
andb
mov
ljmp
jg
lds
mov
aad
lods
lea
pushf
out
sbb
call
out
cmpb
subl
jno
imul
xchg
shl
fstl
pop
mov
lcall
mov
lss
pop
and
jge
stos
in
cmp
mov
lahf
lret
xor
ret
insl
stc
xorl
adc
dec
mov
sbbl
nop
shll
sbb
inc
negl
cmc
cmp
pop
mov
in
pop
mov
jb
leave
pop
in
aam
cs
sub
mov
cmc
adc
lcall
xchg
mov
lea
inc
dec
xor
mov
hlt
xchg
ss
pusha
and
cld
lcall
lds
test
outsb
or
les
jae
cmp
mov
mov
gs
add
dec
or
xorb
push
mov
lcall
rclb
je
dec
xchg
and
xchg
insb
lcall
xchg
xor
insl
lds
push
push
fwait
adc
sbb
pop
aam
incb
mov
bound
sub
cmpsb
insl
pop
mov
fsts
cmp
shrb
jns
add
lock
inc
add
mov
adc
cli
jo
fistpl
imul
test
hlt
inc
or
adc
insl
nop
shrl
jo
in
mov
loop
insb
lods
ret
lcall
or
lds
xchg
jg
lea
fldl
dec
ss
sbb
orb
xor
mov
adc
cld
ds
add
cmpsb
stos
cmp
jne
cmp
sub
pop
inc
xchg
xor
xchg
out
stc
mov
lcall
sbb
imul
mov
xor
sub
push
inc
lods
clc
loope
add
pop
cmp
push
pop
xchg
or
and
into
xchg
addl
mov
mov
jmp
adc
out
sub
sub
outsb
and
xor
lcall
push
aaa
sbb
xlat
mov
das
push
xlat
push
adc
inc
loope
cmc
imul
mov
push
dec
mov
jmp
mov
outsb
xchg
jb
cmp
inc
add
addr16
add
and
loop
pop
pop
mov
mov
jno
pop
push
mov
xchg
adc
mov
cmpsl
inc
cmp
ret
loopne
xchg
cwtl
insl
enter
jl
mov
xor
add
repz
pop
fcmovb
xor
add
sbb
ficomps
test
js
rcrl
test
push
outsl
jne
sbb
outsb
into
js
push
mov
cmp
fildll
imul
sarl
cmp
push
inc
cmp
out
shll
pop
les
dec
sti
push
gs
insl
mov
mov
ds
add
mov
sbb
pushf
ret
movsb
inc
xor
loop
int
mov
add
push
cmpsl
outsb
mulb
pop
inc
adc
in
cmp
jg
std
test
xor
out
adcl
inc
xor
lods
lods
push
adc
shll
inc
mov
pop
xchg
scas
mov
sub
push
xlat
adc
xchg
jmp
push
cs
or
xchg
mov
out
je
fistpll
cmp
inc
negb
xchg
shl
inc
imulb
push
or
fstl
rcrb
mov
inc
pop
jp
jne
sbb
das
popf
mov
inc
mov
inc
xchg
mov
ret
mov
dec
dec
add
addr16
push
xchg
out
push
dec
leave
add
loope
xlat
aaa
clc
out
add
idivb
sub
xchg
sarb
xor
mov
mov
sbbb
or
out
test
jns
xchg
addr16
movsb
or
stos
insb
negl
mov
test
adc
mov
rep
out
cmpxchg
out
inc
mov
and
xorl
lret
cs
ss
mov
push
or
xchg
out
xlat
cmp
cld
sub
es
stos
dec
loope
sahf
cltd
out
gs
out
stos
adc
cmp
imul
js
movsl
adc
aam
int3
mov
xchg
mov
inc
pop
push
push
lods
and
aam
std
inc
jmp
test
test
xchg
mov
push
mov
inc
dec
ds
test
rcrl
adcb
push
or
pop
ret
lods
out
xor
imul
push
idiv
sarb
jae
sbb
inc
or
xlat
sbb
pop
aas
sub
mov
mov
inc
mov
pushf
add
lret
ss
loop
inc
jo
inc
movsb
jge
stos
hlt
addb
dec
or
pop
sbb
jae
add
call
pop
jbe
or
fcmovbe
into
shrl
jl
mov
dec
pop
pushf
push
pop
cmp
xchg
xlat
insb
sub
int
es
scas
pushf
inc
sub
rorb
mov
push
jp
dec
imul
stos
and
scas
mov
scas
test
push
loopne
mov
push
leave
jne
dec
mov
rcll
xchg
mov
rclb
push
pushf
jg
imul
pop
jl
mov
clc
dec
movsb
mov
orl
xor
mov
mov
aaa
addr16
cmc
outsl
movb
mov
mov
mov
push
fsubrp
rclb
mov
xchg
addr16
or
or
mov
inc
rorl
lock
dec
dec
lds
mov
sub
ror
push
cmp
shl
xor
and
sub
mov
mov
ficompl
je
xor
xlat
hlt
mov
mov
hlt
add
adcb
leave
or
jne,pt
jmp
push
xchg
arpl
mov
paddusw
and
and
gs
pop
push
mov
dec
repz
add
adc
je
dec
inc
cmc
or
mov
aam
xor
sub
jl
sbbl
movsb
jl
mov
dec
adc
outsl
rcll
dec
xlat
sub
andb
jmp
sbb
clc
in
sub
lret
lods
ds
cmp
and
loop
aad
pop
insb
negl
in
cmpsl
loop
sub
mov
or
outsl
pop
mov
mov
shl
sahf
or
rcrl
mov
lods
popa
mov
out
sub
sub
sarl
ror
in
push
mov
push
in
insb
leave
cmpl
or
ret
nop
xor
and
je
or
hlt
ret
test
push
addr16
sbb
adc
pusha
out
sub
cmp
pusha
cmp
pushf
test
push
test
or
out
sub
or
push
and
sti
push
and
adc
loop
daa
sbb
pop
clc
shlb
jmp
imul
mov
test
push
push
dec
adc
xor
jl
out
lea
hlt
inc
lea
or
ljmp
jg
lret
cltd
add
stos
imul
push
stos
int
cs
in
mov
fistps
lock
fs
pop
add
cmc
and
data16
daa
in
inc
push
dec
call
mov
bound
cli
mov
add
data16
int
bound
xchg
pop
add
xchg
lods
arpl
xchg
es
test
mov
mov
or
ficomps
jp
rcl
test
je
pushl
data16
cltd
loopne
xchg
add
sbb
repnz
mov
aas
sub
dec
shl
add
mov
xlat
jp
addl
jg
mov
dec
inc
iret
pop
mov
jae
je
fwait
or
call
lcall
or
flds
mov
mov
cli
cmp
mov
push
imul
lock
xchg
sbb
shrb
movsl
jno
and
sbb
mov
cmp
inc
xchg
cmp
add
fistps
sbb
popf
mov
jge
or
push
inc
leave
push
iret
inc
int
outsb
and
ss
lds
imul
out
and
sti
sarb
or
lcall
mov
lea
subps
cmp
fisubs
mov
leave
push
mov
pop
dec
rol
rorl
hlt
dec
sub
jp
scas
pop
mov
jbe
bound
enter
mov
incl
cmp
and
leave
stos
mov
pop
jecxz
sbb
inc
mov
jmp
enter
pusha
add
inc
dec
dec
dec
cmp
adc
mov
inc
cltd
and
and
rolb
cmp
push
mov
lahf
cmp
imul
sub
dec
shr
out
pop
push
pop
movsb
mov
jbe
mov
mov
sbb
stc
les
add
xchg
scas
jl
ds
pop
adc
in
fwait
xor
dec
jns
scas
fidivl
testl
adcl
sub
add
in
adc
mov
mov
gs
les
dec
jl
rol
push
pop
shll
jg
inc
pusha
sbb
aad
add
pop
sbb
insl
fwait
aad
xchg
mov
push
dec
pop
push
lahf
scas
and
pop
test
mov
mov
stc
push
jg
dec
test
mov
jmp
pop
ds
xlat
stos
mov
loopne
pop
jae
mov
jp
xlat
out
pop
mov
lret
mov
cmp
mov
icebp
add
sub
sbb
push
icebp
or
fwait
ds
fisubrs
testl
inc
cmp
sbb
std
aas
or
push
or
cltd
sarb
rcll
add
int3
mov
mov
lgs
sub
rclb
loope
add
inc
ficompl
xchg
test
jo
pop
push
aas
push
pop
lods
sbb
insb
cmp
adc
jecxz
inc
shlb
out
mov
aam
fidivrl
inc
sbb
je
outsb
jnp
sub
and
scas
insl
arpl
inc
subl
add
out
sbb
shlb
sbb
movsl
js
inc
out
mov
mov
fisubl
jecxz
push
xchg
mov
jns
pop
xchg
cmpsb
cmp
and
push
mov
and
and
mov
cs
adc
xlat
dec
ss
pushf
clc
mov
sub
test
mov
jmp
insb
jno
pop
pop
out
dec
dec
pop
fildll
mov
insl
mov
ja
xchg
mov
andb
lret
notl
in
push
notb
inc
push
inc
aam
push
add
mov
xchg
xor
mov
jp
or
loop
jnp
cwtl
mov
popa
pop
incl
ljmp
xor
push
enter
popf
lods
lcall
xor
je
add
inc
cmp
ljmp
mov
arpl
xchg
loop
std
sub
push
fcomi
push
xchg
js
jecxz
scas
jns
adc
xor
mov
xor
mov
pop
hlt
fadd
xchg
aas
xchg
arpl
rol
int3
icebp
shrl
xchg
sbb
in
cmp
xchg
lea
lock
pop
inc
nop
inc
dec
cs
mov
mov
sub
mov
or
jl
pop
push
jo
inc
dec
stos
ljmp
inc
fisubrs
and
jg
xchg
call
dec
sub
cmp
inc
mov
repnz
xor
mov
outsb
inc
imul
repnz
add
push
or
imulb
or
inc
aam
repz
js
and
sbb
sti
int3
jae
ret
add
es
ror
cmc
mov
fidivrl
scas
negl
popa
enter
aas
fs
mov
into
push
mov
and
xchg
or
sbb
mov
outsl
lahf
test
xlat
divb
add
mov
sbb
mov
aaa
nop
maxps
push
movsl
outsb
call
in
aam
int3
addr16
xchg
pop
arpl
ret
sub
lahf
ret
push
into
hlt
dec
fstpt
or
movsl
divb
push
cmp
cmp
mov
rcll
loop
inc
mov
repz
adc
push
cmp
inc
adc
mov
and
cwtl
inc
jns
dec
xor
jmp
rcrl
or
cmp
mov
xchg
cltd
dec
pop
dec
pop
xor
mov
adc
mov
insl
inc
cmpsl
aad
pop
std
mov
mov
mov
inc
popf
sarl
inc
jb
lock
push
fucom
out
cs
scas
fisubl
push
dec
stos
pop
dec
popa
pop
out
enter
sub
movsb
inc
pushf
mov
xchg
ljmp
and
push
xchg
lock
sub
inc
fsubs
clc
mov
sbb
mov
cmp
xchg
cmp
add
cmp
jp
iret
rclb
xchg
push
and
popf
insb
add
push
icebp
dec
fildll
push
or
push
loope
test
adc
mov
mov
xchg
mov
mov
repnz
pushf
mov
sahf
cmp
movsb
cltd
outsb
jecxz
pop
add
mov
pop
mov
sahf
fidivrs
jge
lds
jb
and
imul
xchg
xchg
sbb
and
jg
adc
sti
inc
dec
repz
loopne
pop
mov
cmp
sub
imul
add
pushf
loop
leave
inc
pushf
mov
loopne
imul
dec
icebp
mov
arpl
lahf
test
imul
popa
repz
ret
mov
les
pop
sub
mov
in
rclb
mov
clc
roll
loopne
and
lods
push
movl
loop
mov
cs
jle
repnz
sbb
dec
jnp
and
adc
sub
jmp
flds
loopne
mov
out
js
jmp
outsl
adc
inc
or
aas
xchg
jb
stos
fdivrs
mov
cmp
movsb
es
shrl
add
and
ljmp
arpl
js
jo
xchg
pop
jge
aam
mov
into
xor
in
jnp
adc
push
mov
movsl
xchg
and
sti
sbb
mov
icebp
adc
adc
or
add
mov
lods
xor
mov
xor
jbe
inc
movsb
add
fimull
push
and
push
mov
mov
aam
je
xchg
cs
mov
xchg
sub
adc
mov
lea
adc
dec
lods
sahf
std
addl
jmp
mov
xchg
mov
js
out
push
enter
sbb
sbb
sub
sub
movl
es
push
xchg
out
jle
cmc
es
pop
fcmovnb
xchg
sbb
inc
movsb
sbb
push
mov
neg
or
cltd
dec
mov
xchg
dec
mov
call
in
xor
insl
mov
leave
mov
push
jo
outsl
sub
pop
stos
gs
adc
gs
jne
xchg
movsl
nopl
mov
cmp
cmp
sar
jb
sar
pop
bound
push
pop
insl
and
jecxz
js
lcall
lret
popf
xor
test
add
les
xor
push
fistpll
sbb
aas
in
pop
mov
sahf
insb
mov
stos
loope
icebp
cli
xchg
mov
cld
mov
xor
aam
in
mov
lods
test
daa
test
pop
repz
pop
insl
mov
sbb
inc
cmpsb
inc
mov
xor
js
iret
scas
xor
xor
test
call
mov
xchg
cmp
jb
mov
push
lahf
xchg
jbe
pop
in
lock
adc
jmp
daa
call
pop
les
enter
out
push
push
pop
test
mov
ss
dec
push
ret
repnz
es
push
in
xchg
iret
dec
movsb
js
xchg
jbe
push
sub
scas
gs
xor
andb
aas
icebp
lock
adc
inc
mov
sbb
dec
hlt
inc
pop
lahf
lret
adc
push
rolb
bound
jnp
insb
enter
push
lret
dec
lret
cmp
popf
or
in
push
cmpsl
cmp
pop
xor
pop
mov
cld
mov
dec
mov
or
aam
inc
out
out
xchg
call
repz
mov
mov
dec
nop
pop
jmp
int
push
mov
int3
lea
jbe
jnp
js
aaa
fsubrs
or
cltd
arpl
or
push
inc
xor
and
syscall
call
mov
lods
mov
ficomps
mov
call
rorb
insl
mov
push
into
jne
call
or
popf
loopne
mov
mov
cld
cmc
popa
and
xor
vdivsd
sti
loope,pn
pusha
push
inc
inc
clc
fstpl
dec
orb
aaa
mov
inc
mov
adc
cmc
adc
popf
mov
push
sbb
push
rclb
xchg
cmp
jle
mov
xor
dec
leave
fstps
bound
cwtl
fnsave
adc
cmp
and
mov
mov
mov
popa
push
cli
push
dec
push
jg
stos
sahf
mov
dec
lcallw
addl
fildl
aam
arpl
out
das
cmc
fdivp
push
mov
jns
repnz
scas
mov
add
fildll
cwtl
mov
ret
mov
repz
sub
pop
jg
call
scas
loop
dec
rcr
pop
xchg
mov
or
fwait
mov
call
jl
adc
aaa
pop
adc
insl
arpl
aas
test
xchg
xor
outsl
in
bound
jp
push
aam
repnz
jns
icebp
rcll
jecxz
jmp
ret
int3
xor
push
int
mov
es
jle
xor
out
testb
movsb
push
clc
pop
sub
in
push
scas
outsl
mov
or
loopne
dec
test
idivl
mov
scas
test
and
das
daa
repnz
push
iret
cmp
mov
mov
rol
je
sbb
leave
pop
or
fiaddl
add
add
pop
into
lret
jns
xor
inc
mov
sbb
mov
pop
adc
jmp
jp
lret
xor
clc
out
ljmp
pop
xchg
sub
dec
mov
and
incb
imul
ljmp
pop
add
enter
push
test
cli
hlt
sbb
mov
iret
dec
cmp
push
gs
pushf
inc
adc
pop
ret
mov
sbb
mov
push
jmp
pop
mov
dec
push
loop
jl
test
cmp
call
mov
xor
adc
mov
test
das
mov
scas
sbb
scas
addr16
ljmp
cmp
jle
pop
sarb
jns
push
push
push
jo
adc
sahf
lret
xchg
sbb
mov
loop
dec
in
rorb
pop
inc
inc
lods
leave
inc
sbb
dec
xor
lods
push
adc
jbe
add
dec
call
or
mov
pop
iret
or
dec
pusha
mov
inc
mov
data16
in
in
stos
mov
and
shll
mov
cmp
mov
je
sub
inc
lock
sub
imul
aad
jg
test
mov
cmp
mov
push
pop
sub
and
popa
test
daa
rep
aam
cmp
enter
or
jecxz
imul
xchg
sub
xor
sti
repnz
ror
cmpsb
xor
test
pop
outsb
fwait
cmp
mov
or
add
and
jne
pop
jb
cmp
dec
ret
mov
ficoml
scas
ljmp
rcll
sbb
jbe
sub
shll
mov
push
lods
inc
jecxz
pop
mov
and
loop
push
je
movsb
adc
push
mov
mov
pop
cmp
cwtl
and
nop
std
das
jle
adc
sub
cmp
cmp
popf
movsl
mov
mov
mov
or
push
hlt
mov
mov
lahf
in
pop
xor
mov
cmp
enter
leave
sahf
jno
pop
mov
aas
fcos
loope
pop
js
out
mov
cltd
mov
sub
or
es
cmp
fstps
bound
adc
jecxz
or
ret
fwait
movsb
sub
enter
jmp
xchg
pop
pop
imul
pop
mov
mov
xor
mov
lret
mov
pushf
shlb
push
leave
aam
imul
sub
sub
and
cltd
jmp
ret
cmp
mov
and
pop
mov
jle
fdivrl
mov
mov
das
gs
xchg
fidivrs
data16
icebp
stos
mov
in
sub
lods
fs
adc
in
iret
mov
daa
pop
adcl
or
lea
out
nop
test
jb
dec
push
test
adc
push
pop
loop
lcall
xor
orb
imul
inc
or
xchg
loop
orl
sub
testw
jg
mov
dec
test
rcll
rcl
testl
sbb
fcom
js
dec
shrb
pop
lret
xlat
les
int
scas
jge
nop
ljmp
ficomps
pop
in
cmp
xchg
stos
pop
das
nop
sub
mov
xor
dec
pop
push
jne
stos
or
or
test
shll
adc
lds
pop
cmp
or
sub
xor
sbb
cld
int3
stos
imul
call
cmc
and
lahf
push
and
ja
inc
arpl
ret
mov
test
cmp
or
sub
in
mov
insl
out
decb
ss
push
inc
jmp
xchg
clc
in
pop
int
dec
mov
mov
lods
adc
shll
inc
iret
dec
inc
adc
out
cmpsl
pop
movsl
cmpsl
in
rolb
loopne
dec
addr16
push
cld
adc
int3
push
xor
jecxz
add
stos
mov
xor
lea
and
js
push
cmp
addr16
and
xchg
pop
xorl
mov
icebp
rcl
and
inc
pop
sahf
div
jmp
push
push
sahf
push
mov
inc
cmc
ss
pop
push
fcmovne
lods
sub
mov
pop
inc
xchg
mov
sbb
cmp
aaa
or
mov
inc
xchg
mov
daa
test
insb
ja
push
cwtl
adc
mov
mov
mov
popf
dec
add
mov
popa
xchg
out
mov
movsb
push
das
mov
xor
jmp
sarb
adc
xlat
lock
imul
es
je
or
rorb
pop
test
xchg
adc
in
fistpl
iret
fstpl
icebp
shrl
mov
stos
jle
cwtl
adc
xchg
mov
ljmp
stc
mov
sub
int3
call
lcall
or
cmp
fildl
pop
fwait
test
xlat
pop
sbb
data16
cmpsl
lret
scas
cmp
hlt
pop
xor
inc
mov
lock
lods
xor
jnp
js
jl
pop
aam
scas
test
push
lock
push
inc
out
in
call
lods
stos
jno
mov
cmp
inc
repnz
add
xchg
clc
sbb
mov
testl
xor
pop
mov
ret
push
mov
jbe
in
push
and
xor
cmpsb
jle
pop
mov
mov
inc
pop
lahf
scas
lret
cmpsb
pop
and
cmp
insl
dec
adc
xchg
mov
jne
ret
inc
shrb
adc
xor
insb
and
jg
mov
notb
movsb
cwtl
shll
mov
out
mov
inc
inc
xor
sbb
stc
pop
xor
nop
add
andb
cmp
shlb
shrb
mov
mov
loop
or
inc
test
pop
icebp
sbb
sete
popf
mov
add
or
push
fnstcw
and
sbb
jae
icebp
out
cltd
and
xchg
jne
add
cli
call
xor
test
outsb
cs
or
sub
cmp
sub
add
inc
test
jae
xor
subl
popa
inc
pushf
xor
mov
jbe
sbb
jb
xchg
shll
adc
pushf
pmaxsw
mov
fnstcw
lock
dec
ds
test
push
rclb
testl
and
pop
pop
js
pop
mov
cmp
dec
loope
lcall
das
mov
push
xchg
pop
inc
je
ret
xlat
pushf
sub
or
fidivs
mov
orl
cmp
jmp
xor
out
push
addb
dec
or
dec
and
xor
xchg
mov
aas
add
push
push
dec
and
cmpsl
stc
inc
iret
div
repz
adc
cmp
fdivl
xchg
add
cmp
adc
mov
stc
mov
daa
xor
xchg
std
rorl
aaa
div
xchg
iret
inc
sbb
loop
mov
mov
sub
adc
pop
push
adc
popf
and
mov
test
rorb
rcrl
rcrl
rcrb
jno
xchg
or
je
sarb
faddl
cmp
notb
js
lds
pop
add
mov
jne
inc
stos
push
fimull
mov
inc
mov
fwait
outsb
ds
mulb
push
ret
adc
mov
pop
int3
ljmp
add
adc
fdivrs
adc
push
das
sbbb
iret
jnp
sbbl
mov
stos
lret
add
xor
adc
les
iret
iret
adc
mov
adc
and
outsl
test
lcall
cmp
inc
sub
add
add
addb
in
fwait
and
or
mov
in
fstl
xor
or
push
xor
mov
xchg
mov
xor
aaa
pop
xchg
shl
mov
push
pop
outsl
shrl
sub
sub
daa
repnz
sti
pop
subl
push
sahf
xchg
ja
sub
push
dec
out
cmpsb
ja
jo
ret
dec
lock
adc
push
aas
mov
test
test
in
mov
in
cltd
push
add
jbe
inc
ja
scas
vmwrite
xor
pop
jo
jp
cmp
les
dec
nop
outsl
jne
push
pushf
fisttps
int
das
mov
adc
jp
repnz
mov
dec
loopne
xlat
adc
cmpsb
dec
popf
in
loope
pop
mov
enter
xor
aaa
sub
push
insl
stos
arpl
out
add
test
mov
xchg
ljmp
sub
orb
mov
rcll
jecxz
imul
dec
in
out
inc
inc
push
or
jl
push
add
in
inc
insl
lea
jno
aas
insl
add
fldl
dec
inc
push
mov
and
std
inc
dec
jo
dec
fcoms
fstpl
cmp
in
out
dec
popf
fwait
and
push
shr
fisubl
stc
adc
cmc
mov
jns
inc
inc
popf
aad
int3
xor
or
dec
popa
push
fcompl
dec
sub
ficoms
pcmpgtd
sbb
adc
dec
rclb
jl
cmc
filds
push
push
sub
pop
imull
inc
mov
cmp
sbb
int
inc
pop
fidivl
mov
jae
rcr
arpl
repnz
mov
shl
sbb
adc
mov
dec
mov
push
cmc
sub
inc
cmp
lods
xchg
ja
or
inc
insb
cmc
enter
xor
jp
xchg
mov
add
jp
jp
roll
ja
fld
dec
xchg
pop
push
out
xchg
aad
stos
xchg
mov
fdivs
out
and
mov
shll
mov
add
jno
ja
and
rclb
xchg
rorb
ja
pop
cmp
mov
cli
xor
out
cmp
mov
sbb
testb
push
loope
ret
push
inc
cwtl
or
in
jecxz
and
idivl
mov
and
jne
loope
mov
pop
sbb
clc
fdivrp
push
cmc
cmc
in
mov
imul
adc
mov
sub
dec
fs
test
outsl
dec
test
rcrb
ljmp
mov
pop
xor
shlb
frstor
cwtl
jne
cmpb
cmp
lds
gs
mov
cmp
in
cmp
push
mov
lea
nop
imul
fwait
fwait
repnz
cmp
repz
ja
pushf
sub
sub
test
add
xchg
rcrl
popf
lcall
pop
inc
cmpsb
arpl
xor
fnstcw
mov
adc
jnp
push
popa
ljmp
std
fbld
es
sarb
les
xchg
mov
mov
and
std
popa
addb
jge
adc
add
pop
cmp
mov
sahf
push
cli
jmp
xchg
dec
inc
in
mov
push
addr16
in
mov
and
push
mov
fisubrl
ds
iret
jbe
xchg
push
in
add
ret
dec
call
out
jmp
ljmp
rorl
cmp
je
cmp
sarb
in
movsl
adc
lds
shrl
cmpsl
adc
shl
inc
in
inc
inc
arpl
stos
mov
in
xchg
out
sub
adc
sbb
rolb
mov
inc
or
sbb
xchg
loope
sahf
arpl
pop
fadds
clc
in
cmpsl
data16
sbb
cmp
imul
mov
mov
aad
sub
xchg
jecxz
pop
fists
add
push
shlb
daa
hlt
lret
stc
loopne
aam
ret
dec
mov
std
cmp
iret
pop
adc
popf
inc
xor
gs
mov
scas
adc
imull
in
xor
cmpsl
pop
stos
jbe
js
dec
sbb
fldln2
aas
mov
cs
fadds
test
into
fadds
cmp
sub
mov
les
and
jno
dec
movsb
in
daa
dec
aad
cmp
stos
les
jb
mov
stos
add
pop
jno
int
xchg
fldcw
sarb
loop
das
push
test
ja
aaa
xor
leave
mov
xorl
inc
rcl
pop
fisttpl
mov
stos
aam
leave
sbbb
push
repz
ret
daa
lret
add
sbb
pop
test
in
mov
mov
mov
or
push
rorl
out
inc
push
adcb
aad
sub
cli
dec
popf
js
scas
push
sbb
xor
adc
gs
mov
cmp
outsl
fwait
sbb
push
fildll
xchg
rolb
dec
je
mov
xor
mov
lods
rcrb
pop
push
test
sbb
rol
out
ds
xor
and
insl
repnz
pop
xchg
sub
push
rcl
jnp
ret
lods
sarl
jns
pop
jecxz
sbb
test
out
inc
into
mov
pop
out
stc
xlat
scas
add
out
adc
out
andb
arpl
or
aaa
imul
sbb
cmc
imul
andl
cmp
jle
sbb
cwtl
dec
das
push
or
inc
cwtl
xchg
inc
or
lret
out
ret
in
lret
or
xchg
add
sub
sub
inc
and
ds
pop
dec
adc
adc
or
jp
aaa
mov
fmul
push
enter
faddp
and
cmpsb
mov
imull
js
adc
cmpb
test
and
jno
sarl
pop
mov
test
js
push
pop
daa
loope
sbb
add
gs
add
pop
lods
cmc
mov
jg
shlb
sub
jge
push
jecxz
inc
int3
int
mov
scas
mov
push
jnp
imul
push
fmull
outsl
int
mov
xchg
push
jbe
ret
unpcklps
mov
mov
pop
test
sahf
jno
nop
sub
stc
dec
and
movsb
mov
iret
mov
out
cltd
mov
mov
in
jns
or
sub
fidivrs
aad
mov
sbb
iret
out
sub
push
pop
aas
mov
and
in
jns
hlt
les
cmp
aam
mov
in
rcll
test
mov
cmpsb
push
adc
shrl
dec
inc
add
inc
push
jbe
cmp
test
push
sbb
je
loop,pt
add
loop
xlat
lock
lea
xchg
mov
adc
mov
stos
mov
lahf
sub
repz
jg
push
pop
in
sbb
inc
clc
pshufw
pop
jbe
sahf
mov
fistpll
ror
lcall
lods
mov
in
addb
loop
mov
notb
aas
sub
outsl
and
mov
pop
push
cmpsl
push
into
xor
add
mov
push
sbb
sub
push
mov
push
or
icebp
dec
lret
mov
mov
and
lds
into
sub
xor
cld
mov
ficoml
jbe
lock
pop
or
pop
cmp
imul
cs
mov
push
sub
cmc
sbb
fldenv
fwait
sbb
lds
sub
mov
lahf
inc
lret
cwtl
ja
fnsave
add
cmp
sbb
lods
aas
dec
jl
xor
aas
sub
mov
cmpsl
cmp
jp
cld
xlat
sbb
jl
push
subb
sti
inc
jl
daa
mov
add
pop
push
fcomps
pop
shl
ja
or
sbb
lock
cmp
aad
ja
push
xchg
mov
mov
or
test
push
fcomp
out
add
jnp
lock
sbb
out
cld
push
mov
lret
inc
enter
xchg
xor
inc
sbb
mov
xchg
sbb
jne
out
jmp
or
xor
ljmp
cmp
xchg
stos
lods
add
iret
cli
ljmp
arpl
sub
and
dec
int
mov
lods
cwtl
add
xchg
jno
insl
push
pop
xchg
mov
inc
inc
jo
mov
sarb
loopne
adc
js
call
test
add
xor
push
adc
push
push
dec
lret
fistps
in
xchg
pop
inc
xchg
xchg
xlat
in
mov
mov
mov
push
imul
add
jb
leave
insl
dec
out
add
lahf
add
or
xor
jmp
add
mov
xchg
or
sbb
adc
adc
mov
sbb
mov
cwtl
fisttpl
xchg
iret
fcoml
mov
mov
adcl
jl
mov
test
pop
push
sbb
xor
fists
pop
cwtl
popl
jge
arpl
into
pop
sbb
in
sahf
adc
out
push
inc
push
sub
cmp
mov
xlat
cmp
outsl
jmp
movsb
and
pop
cld
push
mov
or
test
push
insl
mov
mov
cmpsl
movsb
push
les
cmc
xor
adc
das
std
dec
outsl
enter
cmp
or
dec
pop
mov
mov
aaa
into
cmpsl
xlat
mov
jns
dec
sbb
inc
vphaddubw
bound
popf
imull
lea
mov
xorl
xor
mov
mov
push
mov
jae
mov
outsb
nop
mul
mov
dec
or
pop
outsb
or
fildl
add
jns
jno
adc
mov
mov
and
int
inc
mov
test
mov
insb
mov
sub
imul
push
movsb
leave
lds
mov
das
cli
jne
inc
xchg
and
jbe
mov
pop
lds
push
xchg
jae
mov
inc
pop
cld
ds
or
andl
adc
adc
xlat
jmp
push
enter
jmp
popa
mov
movsb
les
jecxz
cmp
jmp
into
jae
ret
fwait
mov
loop
sti
add
inc
cmc
test
inc
inc
leave
lods
cmp
fstpl
pop
bound
and
pop
inc
mov
outsb
dec
test
mov
aaa
mov
incl
mov
cmp
dec
mov
jl
movsb
mov
movl
call
imul
in
adc
sub
rep
ficompl
mov
xchg
mov
add
add
movsb
data16
fcomp
out
jno
jns
stos
xor
adc
loope
incb
mov
imul
stos
stc
mov
dec
clc
lret
jle
sbb
push
jne
mov
mov
shl
jne
ds
aas
loop
mov
es
xor
cltd
outsb
mov
iret
das
lret
popf
sub
mov
int3
jmp
inc
cwtl
je
sub
loop
pop
insb
fucomp
das
jecxz
jp
inc
daa
cwtl
insl
pop
lcall
push
or
pop
push
into
movsb
add
cmp
pop
lret
add
stos
xor
int
outsb
or
sub
cld
inc
jmp
push
xor
fldl
repz
test
or
cltd
and
or
insb
or
clc
mov
add
icebp
cli
sub
int3
sub
jg
mov
pop
push
and
mov
stos
sub
sub
insl
icebp
mov
xor
negb
inc
pop
dec
and
mov
xchg
pop
jmp
cld
pop
jl
xchg
mov
orl
lret
stos
inc
shrb
fwait
xchg
shll
mov
pop
int3
dec
mov
rcrb
lock
loop
mov
adc
fs
push
inc
cmpsb
and
or
clc
xchg
add
mov
lret
loop
repnz
xchg
hlt
cmpsl
cmp
fidivl
repnz
sbb
and
mov
mov
loop
cmc
in
push
pop
cmp
popa
adc
jae
pop
test
cmp
ljmp
js
xchg
popf
jns
pushl
sbb
ds
pop
jo
mov
fdivrl
xlat
mov
add
mov
lahf
jbe
leave
lea
push
xor
pushfw
pop
lahf
lock
fcomp
pop
mov
in
pop
jns
jg
xchg
sbb
add
mov
out
jge
and
and
dec
inc
or
pop
push
int
addr16
mov
or
call
in
jno
mov
fwait
stc
sub
add
decb
stos
adc
lods
scas
fcoml
jne
dec
mov
ret
div
push
repnz
push
push
inc
and
or
adc
inc
sbb
cs
dec
xor
jmp
jg
aam
mov
fstpt
mov
jl
xchg
and
pop
mov
insl
mov
xor
sbb
pop
dec
sbb
mov
sbb
ss
cmp
adc
or
xchg
dec
fidivrl
lds
xor
pushf
mov
pop
ss
iret
pop
sbb
lret
daa
jae
das
pop
mov
test
daa
push
fcoms
lods
aam
insl
lea
jnp
hlt
int
lret
cli
xchg
sahf
inc
aas
inc
mov
addr16
testb
cli
insb
jne
xchg
add
sub
dec
pop
xchg
iret
lcall
lea
shll
jecxz
fwait
sbb
daa
adc
mov
dec
xor
imul
sarl
test
pop
mov
jmp
bound
jns
cmc
sub
push
ja
push
push
incb
add
xor
arpl
mov
adc
pop
mov
pop
xor
mov
sbb
fdivs
fstpl
cmp
fsubs
and
dec
add
jnp
lock
and
lods
push
mov
aaa
leave
mov
pop
and
push
push
push
jno
jbe
jae
call
sti
pop
inc
imul
inc
sbb
dec
int
popa
lock
sbb
push
push
popa
loopne
push
push
outsl
pop
inc
pop
fstpl
jg
roll
das
movsl
jle
mov
lods
fsts
insl
xor
cmp
sbb
jle
fstps
bound
jmp
inc
nop
fstpt
in
in
cmpsb
pop
lock
addr16
mov
movsl
ffreep
shr
int
lds
inc
shlb
in
xor
sbb
adc
repnz
rolb
icebp
in
pop
mov
das
clc
or
jnp
stc
ljmp
sbb
repz
dec
out
shrb
addr16
subb
mov
sub
in
mov
out
and
and
mov
or
scas
cmc
push
inc
sarb
testl
aas
inc
mov
fcomp
cmp
mov
lds
xchg
hlt
shrb
cld
test
dec
fldl
jmp
daa
icebp
mov
movsb
icebp
sbb
inc
push
add
cs
fsincos
std
stc
xchg
pop
pop
lods
sub
dec
lcall
mov
adc
loopne
mov
iret
repnz
mov
cwtl
arpl
dec
mov
rcll
sub
mov
gs
push
in
mov
loope,pt
mov
in
int3
sub
enter
jle
xor
and
aad
mov
fldenv
mov
fcompl
add
insb
hlt
movsl
push
cs
dec
ret
cmc
imul
inc
mov
adc
fildll
mov
mov
fidivrl
push
lock
sbb
inc
cld
xchg
pop
cmp
or
stos
jne
fmull
insl
rorb
pop
lds
or
dec
inc
loopne
adc
nop
mulb
pop
out
sub
das
jne
push
clc
das
sbb
pop
cmpsb
adc
lret
vandnps
lret
push
icebp
inc
bound
scas
push
jbe
and
scas
in
movsb
mov
cmp
lods
aaa
lahf
and
imul
or
in
jbe
enter
xor
int
mov
jecxz
clc
mov
aad
aad
lcall
push
dec
rcrb
and
push
daa
jb
cmpsl
movsb
idivl
cmp
nop
aad
xor
adc
xchg
test
aas
into
rorb
push
or
mov
popl
dec
cwtl
push
push
mov
inc
mov
mov
xor
stos
add
popf
test
add
hlt
pop
xor
fs
pop
sbb
pop
in
push
and
xchg
out
pop
add
add
mov
mov
out
and
sub
mov
mov
xchg
adc
jne
jb
arpl
ss
or
jle
dec
push
outsb
nop
les
stc
and
loope
aas
pop
dec
xor
aas
pop
aad
mov
jle
mov
pop
test
jg
inc
fistpll
pop
js
loope
scas
and
jnp
or
outsb
push
xor
in
add
test
push
and
jno
cmp
dec
and
xor
xchg
mov
lahf
cmpsb
fiaddl
xor
add
lahf
ror
stos
imull
iret
xchg
cmpsl
shll
shll
xchg
iret
jns
fbstp
rcll
iret
jmp
mov
roll
shrl
ret
lret
aaa
xchg
ljmp
dec
cmp
cwtl
push
jg
sub
call
mov
in
push
mov
les
ret
mov
aad
sbb
imul
inc
push
loop
std
inc
sub
lock
inc
xor
lods
xlat
out
shl
fmuls
lock
repnz
sbb
fldt
and
les
sbb
stos
pop
in
test
ss
push
mov
sub
sub
dec
in
outsl
mov
repnz
mov
jae
cli
js
inc
sub
in
sub
fisttps
jle
xchg
mov
pop
cmpsl
mov
pop
jb
movsb
test
mov
repz
sub
andb
gs
mov
subl
sub
lcall
push
xchg
pushf
lods
sbb
out
sahf
sub
inc
dec
and
je
test
test
or
fdiv
push
dec
mov
sub
sbb
sub
xchg
loope
and
fwait
inc
ret
adc
pop
lods
mov
imul
jge
dec
scas
mov
inc
iret
test
ret
jno
jmp
mov
and
fbld
enter
add
mov
movsb
push
mov
call
inc
xor
mov
shl
jecxz
wrmsr
cwtl
or
xor
pcmpgtd
cld
into
jb
push
pop
jmp
xor
test
pop
mov
mov
sti
mov
ret
dec
inc
mov
add
and
or
push
es
js
mov
dec
es
rclb
push
sub
cmp
sub
jl
adc
shll
into
mov
inc
out
cmp
jne
stc
loopne
xor
xchg
mov
nop
cmp
inc
dec
fs
add
pushf
ret
push
out
ret
outsl
stc
fmull
cmp
pop
ret
push
cmp
cltd
roll
lret
mov
inc
ret
push
ss
xchg
push
js
adc
out
inc
and
bnd
aas
test
mov
in
loope
imul
cli
movsl
or
jl
sub
call
xchg
into
repz
or
outsl
push
inc
daa
and
sbb
push
xor
stc
xor
adc
sbb
add
mov
and
mov
inc
ror
lods
sti
scas
addb
sub
push
sub
push
add
popa
adc
cmp
cmp
fistpl
and
shrb
rcrl
in
loop
outsl
imul
jle
loope
fstl
push
mov
std
fnstcw
sahf
pop
rcr
addb
lods
aaa
ret
fs
jecxz
add
fsubs
add
cli
sub
insb
jecxz
sbb
pop
inc
cli
or
adc
adcl
add
lahf
loopne
pop
cmpsl
rorl
sub
stos
fsub
shrl
faddp
cld
movsl
mov
lret
sbb
cmp
mov
repz
or
pop
idiv
loop
mov
pop
mov
push
xor
add
test
xchg
push
and
das
mov
add
xor
lahf
aad
push
insb
cmp
lea
rcrl
or
cmp
js
lea
in
and
xor
scas
lods
test
inc
pop
mov
rcl
adc
rorl
fst
lods
jns
test
and
xlat
shlb
and
std
mov
les
fcmovnbe
fists
int
faddl
jl
jne
add
adc
or
stos
cmp
fadd
pop
roll
shrb
xchg
jb
out
cmpb
and
inc
iret
mov
inc
push
rcrl
dec
icebp
stos
fsts
out
pop
push
fnstcw
insb
shll
imul
pop
add
cmp
pusha
data16
mov
jg
cmp
or
into
fdivrl
xchg
mov
push
cmpsb
je
daa
roll
jb
xchg
mov
pop
push
js
js
subl
test
dec
fbstp
jle
or
mov
xchg
pop
fs
push
addl
stc
hlt
pushl
loopne
lods
pop
mov
pop
mov
scas
out
stc
lods
insl
shll
jecxz
aad
imul
mov
lret
sbb
out
cmpsl
out
lods
cmc
lds
sub
push
lcall
xlat
shl
cs
inc
addl
pmuludq
cmp
cmp
ret
push
add
stc
mov
jge
aaa
lcall
jno
pop
fcompl
mov
scas
xor
out
sub
sub
sub
add
incl
mov
lds
add
repz
andb
pop
push
fsts
in
add
push
fwait
mov
test
inc
fs
pop
arpl
fsubs
cmp
xchg
add
inc
sub
jae
gs
sub
sub
add
daa
cmp
pop
dec
xchg
pop
fwait
cmp
cmpsb
mov
clc
ds
lock
mov
movsb
imulb
fcmovb
das
fildll
mov
clc
xchg
mov
xor
mov
xchg
xchg
mov
loope
jns
loope
inc
outsl
push
xor
mov
sub
mov
arpl
dec
and
int
mov
ja
or
scas
shll
repnz
das
dec
icebp
lods
test
stc
push
cmp
bswap
test
scas
fbstp
inc
loope
ret
jne
xor
adcb
cmp
and
jmp
pop
int3
push
cwtl
lea
aas
push
cmp
pop
and
ljmp
mov
popf
out
arpl
rcrl
inc
loop
dec
loope
push
loope
testl
mov
fisttpll
and
mov
mov
hlt
add
ffreep
mov
imul
int3
inc
insl
int
ret
lcall
xchg
js
aad
mov
loope
stos
scas
leave
add
cmpsb
ret
sbb
inc
imul
pop
scas
lds
dec
loop
cmc
or
push
aam
fcompl
lea
addr16
sbb
push
push
stos
arpl
lock
jb
fwait
ja
pop
fdivs
lods
movsl
mov
jno
cmpsl
test
test
cmp
je
and
mov
scas
jae
sahf
iret
jge
dec
decl
inc
push
xchg
sbb
lret
insl
test
xchg
jno
xor
daa
int
mov
pop
test
decl
int
pop
mov
cwtl
jp
jno
scas
xchg
dec
xlat
mov
iret
xchg
jmp
in
dec
pusha
std
mov
andb
push
mov
int3
aam
xchg
scas
imul
push
jmp
ror
push
mov
cli
inc
subb
sti
in
sub
inc
into
jg
ret
cli
jb
int
mov
out
push
inc
dec
sbb
inc
adc
and
xchg
data16
push
pop
mov
add
mov
pop
popa
inc
ljmp
jl
xor
xchg
push
dec
jl
pop
cmpsb
jmp
adc
sub
cmp
or
pop
or
rclb
lock
sti
stos
rol
addr16
ror
cmpsb
dec
dec
or
jmp
pop
or
add
fcoml
sbb
fiadds
fwait
mov
into
pop
clc
insb
or
and
jecxz
mov
out
sub
mov
cltd
dec
cmp
jns
imul
call
mov
jle
jge
sub
push
push
xchg
jb
test
incb
add
testl
jno
fcomi
inc
mov
stos
mov
rcrb
lea
sub
orb
lret
in
add
mov
pop
mov
loopne
inc
test
repnz
pop
sahf
mov
mov
mov
ret
aam
mov
and
adc
add
mov
jb
pushf
push
call
aad
and
scas
jp
scas
push
stos
lods
stc
cmp
cli
mov
movsb
bound
int3
xor
cld
out
sub
cmp
pop
sbb
mov
add
xchg
adc
jb
fwait
sti
xchg
xchg
xchg
imul
dec
scas
les
fwait
clc
sub
scas
fisttpl
mul
fs
ljmp
loope
and
lods
cmpsl
push
out
push
xlat
sbb
ffreep
cwtl
or
and
insb
xchg
pop
mov
dec
nop
loopne
mov
or
lret
loope,pt
adc
stc
arpl
cld
sbb
add
adc
loope
push
iret
sbb
fstl
mov
inc
jle
ds
jg
jge
and
mov
arpl
cwtl
or
int
pop
sarb
test
mov
jae
mov
stos
inc
js
mov
cwtl
sbb
fmull
push
and
adc
scas
push
dec
adcl
dec
push
les
js
arpl
dec
out
aaa
push
mov
popa
in
negl
ljmp
pop
fnstenv
imulb
sub
cmp
or
and
xor
fucomip
jge
adc
xchg
push
lahf
mov
testl
leave
add
test
pop
pop
daa
xorl
std
inc
imul
mov
sub
daa
adc
clc
xchg
or
orb
addr16
jecxz
adc
push
push
data16
and
shr
pop
popf
pop
xor
movsb
cmc
fwait
xor
testb
into
outsb
mov
or
push
inc
adc
faddl
jp
adc
in
and
js
push
jmp
sbbl
xchg
pop
clc
fs
pop
inc
popa
pusha
scas
fidivrs
js
dec
sub
xorb
arpl
mov
adc
jae
inc
cld
sbb
fisubs
cmp
mov
mov
inc
mov
loopne
inc
cmp
popf
sub
xchg
inc
orl
dec
gs
xchg
lock
neg
xor
pop
aas
icebp
fs
mov
lock
addr16
popf
pop
xor
push
fsub
test
cli
popf
testb
pushf
movsb
cmp
test
pop
jno
jle
test
aam
int
pusha
fldt
inc
shlb
fcompl
repz
push
mov
enter
add
imul
mov
cltd
cmpsb
push
test
cmp
popf
lods
mov
out
add
inc
sarb
pop
cmc
xor
add
fs
repz
neg
lock
mov
adc
mov
sub
sub
or
mov
aad
mov
mov
test
sahf
add
aam
cmp
dec
jae
test
pop
pop
cmp
xor
cmpsb
jg
adc
dec
dec
mov
lahf
mov
outsl
in
cli
test
sarl
adc
dec
mov
xchg
lret
dec
rclb
aam
stos
jmp
cmpsl
sub
cltd
ljmp
jg
sahf
hlt
add
outsb
stos
ds
inc
pop
and
dec
pop
dec
pop
aaa
and
hlt
lods
push
loop
adc
adc
dec
fidivl
imul
in
xor
test
movsl
cmp
lahf
popf
and
aad
mov
and
aad
pop
movl
test
loope
mov
lret
pop
mov
cmp
inc
mov
xor
jmp
mov
adc
bound
and
shrb
and
mov
xchg
inc
enter
xchg
adc
dec
add
pop
cmpb
in
mov
addr16
pushf
das
sub
push
cs
xchg
pop
jl
mov
and
je
and
sub
dec
insb
scas
into
cltd
jbe
pushf
data16
dec
cs
lret
push
loope
jbe
in
out
out
sub
dec
mov
mov
xchg
movsb
pop
xor
jg
adc
dec
xchg
cmp
pop
out
push
cmpsl
addr16
and
inc
sbb
rcl
int3
jo
out
pop
ret
mov
iret
dec
into
pop
mov
push
push
incb
fcmovb
fsts
and
xor
sbb
imul
das
jbe
ror
sbb
mov
mov
or
lds
cli
inc
cld
mov
push
jp
insb
test
add
adc
cmpb
push
or
call
das
jle
mov
popf
or
xchg
add
adc
loopne
stos
jmp
mov
mov
dec
in
rclb
and
mov
arpl
jno
aaa
test
cs
and
stos
jl
dec
shll
stos
adc
out
arpl
xor
ljmp
add
and
popa
and
mov
lods
push
sbb
lods
fsubs
sbb
cmp
ret
mov
subb
gs
in
mov
imul
mov
adc
cmp
sbb
pop
call
inc
mov
xchg
pop
stc
sub
and
cmc
push
inc
movsb
cmp
lds
pop
ljmp
test
inc
lods
jbe
testb
jns
aad
mov
mov
add
mov
scas
inc
pop
mov
push
xor
inc
mov
fadd
imul
fcoms
mov
jg
shl
roll
dec
mov
call
rcll
imul
pop
dec
divps
lahf
insb
or
fstl
mov
and
mov
or
push
jbe
sbb
int3
inc
add
shrl
lock
cmp
jmp
inc
inc
dec
jb
fnstcw
lahf
xchg
xchg
xchg
pop
cmp
push
pop
out
bound
jge
cmp
pushf
push
xchg
pop
sbb
jns
mov
sub
iret
push
in
jns
bound
call
mov
pop
aas
mov
inc
pop
push
adc
out
sbb
daa
inc
int
insl
inc
xchg
addr16
mov
add
leave
in
in
sub
xchg
ljmp
stos
push
cmpsl
aaa
inc
or
ret
sub
call
cli
aad
aaa
popa
or
xor
daa
lret
js
aam
insl
pushl
andl
xchg
and
inc
insl
sub
jl
aam
adc
ds
cltd
test
mov
or
ror
out
rolb
sbb
ds
or
mov
mov
mov
cmpsb
enter
mov
nop
adc
xchg
clc
addb
push
or
test
xor
inc
ret
addr16
lock
scas
sahf
aad
xchg
xchg
push
add
aam
imull
les
mov
dec
ss
xor
sahf
and
cli
outsb
inc
nop
mov
mov
nop
loop
icebp
xchg
scas
imull
pop
les
nop
or
inc
fcoms
xor
cmp
inc
mov
ja
sarl
jp
movl
mov
cld
out
cmp
xchg
dec
adc
xorl
xor
js
xchg
add
xchg
pop
dec
cli
inc
add
je
sbb
rcll
jnp
jge
loopne
lods
jne
dec
fildl
xor
imul
nop
rorb
jae
push
mov
xor
ljmp
lea
mov
jnp
pop
adc
cltd
mov
int3
push
scas
data16
in
dec
bound
ss
mov
dec
sbb
std
adc
lods
loop
sahf
hlt
int
jecxz
das
xor
dec
mov
leave
cmp
pop
pop
push
mov
sub
xchg
sti
lret
inc
loop
repnz
push
sbb
or
ret
mov
and
jp
enter
push
jno
and
out
mov
or
fidivl
call
mov
arpl
jb
cmp
pop
inc
push
add
mov
or
leave
cmpb
mov
pop
mov
mov
adc
iret
pushf
lret
adc
add
sahf
mov
mov
cwtl
mov
std
push
xor
cmpsl
mov
add
scas
mov
movsl
cli
xor
test
cmp
aam
push
int3
fdivr
stos
stos
xor
out
mov
xor
test
pop
xchg
mov
jle
jne
lcall
ds
shrl
data16
fisubrl
cs
xor
fcomps
push
out
adc
fs
imul
push
sbb
lods
push
pop
sbb
testl
scas
iret
aad
out
ret
mov
mov
sbb
stc
call
cmp
cmp
sahf
daa
inc
out
sub
mov
ja
gs
insb
std
add
sbb
lret
inc
adc
add
aas
cwtl
hlt
jmp
arpl
sbb
jg
jle
leave
inc
push
aad
inc
xchg
sbb
mov
call
sub
in
addr16
loope
sbb
dec
into
in
enter
js
xchg
lea
pop
lret
or
in
inc
dec
imul
test
add
int3
adc
lret
xor
and
int
clc
cmp
or
fstl
push
xchg
xchg
jmp
test
loopne
push
xor
and
or
sub
iret
dec
mov
push
loop
leave
sub
enter
xor
aaa
outsb
jmp
arpl
mov
adcb
jge
int
xchg
icebp
inc
loope
push
jbe
in
andl
mov
notl
lret
mov
sub
pop
mov
nop
adc
mov
push
and
mov
ficomps
lahf
add
ja
lock
into
arpl
in
out
mov
dec
adc
mov
or
add
pop
arpl
cli
mov
adc
bound
imul
insl
shrl
xor
jl
out
fisubs
pop
popf
popf
push
js
jns
subb
push
test
xchg
out
sbb
aaa
nop
stc
jge
icebp
imul
sbb
dec
xor
lea
int3
cmp
call
pop
xchg
outsl
cmp
mov
adc
cmp
imul
ret
fmuls
iret
shr
inc
lods
or
je
dec
fdivrp
add
fcoml
sub
das
xor
subb
sbb
dec
dec
lds
jno
lret
mov
fwait
nop
xchg
mov
ja
addr16
and
dec
lock
fs
fldenv
mov
mov
cwtl
jo
ret
ds
xorb
cmp
shrl
andl
cmp
push
ficoms
in
add
dec
jl
iret
mov
add
mov
daa
mov
push
shll
hlt
pop
dec
sbbb
fstpt
fs
cmp
jno
adc
adc
mov
dec
adc
xchg
imul
ljmp
adc
mov
mov
and
fwait
outsl
mov
jo
ljmp
stos
lods
xor
loop
repnz
loope
xchg
fstps
xchg
xchg
cld
int3
xchg
xchg
les
xor
dec
ja
mov
sub
rcll
sti
scas
pop
or
ret
xor
xchg
es
sahf
xchg
mov
movsb
pushf
sbbl
xchg
not
cmpsb
mov
mov
bnd
enter
pop
sbb
sub
mov
xchg
js
sbb
mov
inc
and
ljmp
adc
shr
and
push
test
cmpsl
aas
xor
cwtl
or
dec
daa
lahf
stos
hlt
loop
push
jns
sub
int
xor
fcompl
rcr
mov
mul
mov
push
pop
das
cmpsl
push
int
sbb
outsl
push
inc
jl
add
clc
aad
call
es
and
mov
xchg
jns
or
sub
push
xlat
pop
mov
imul
mov
mov
sbb
stos
pop
pop
dec
fmuls
ficomps
adc
aad
mov
std
sbb
test
inc
scas
lahf
push
dec
test
add
or
loopne
je
xor
test
inc
shrb
jae
in
inc
xor
pusha
int
loop
stc
pop
mov
xor
fadds
push
and
xor
pop
pop
mov
dec
or
cmp
mov
xor
out
dec
adc
add
clc
sti
mov
imul
movb
mov
xchg
and
lock
add
and
insl
xchg
int3
test
jmp
sub
arpl
adc
loope
mov
aad
in
inc
rolb
cmp
mov
jns
cmp
xchg
cltd
loop
in
dec
les
orl
sbb
xchg
push
mov
sub
pop
inc
rcrb
subb
int3
rcll
dec
mov
dec
movsl
mov
scas
hlt
and
mov
dec
mov
mov
in
xor
fs
cmp
lret
jnp
add
jecxz
nop
lds
sbb
out
test
or
add
cwtl
jno
hlt
mov
iret
add
and
jecxz
inc
sub
and
daa
or
mov
and
jne
and
sub
jbe
stos
or
sub
into
pop
xchg
push
test
push
std
imul
das
ljmp
pop
fmull
stc
cs
sti
pop
int
lret
pop
sahf
stos
push
js
adc
imul
ret
je
cmp
sub
sbbl
test
jecxz
inc
push
lea
mov
jbe
aad
test
push
ds
mov
mov
mov
loop
in
push
stc
push
add
out
jmp
xchg
fldenv
adc
lcall
inc
gs
repz
xchg
aam
shrl
add
inc
outsl
jp
or
lret
fdivr
mov
or
popa
fs
pushf
or
mov
cmpsl
sahf
loopne
movsb
lahf
sbb
fnsave
fnstenv
sbb
lret
mov
add
pop
lds
sub
bound
jo
fs
sarl
ror
cld
mov
xchg
pop
ret
pop
push
clc
or
cmp
xor
out
fbld
in
shll
pop
xor
ficomps
aam
cmp
jp
jge
cs
hlt
add
push
out
loopne
cmc
dec
mov
dec
stc
mov
mov
add
shrb
mov
movsb
inc
sbb
sbb
xchg
sahf
inc
int
push
and
or
inc
xor
out
in
div
xor
sahf
push
aas
mov
frstor
mov
sub
adcl
dec
mov
xchg
and
cld
xchg
or
lods
xor
mov
mov
jo
xchg
pop
inc
and
xor
and
dec
cmp
xor
and
pop
and
subb
fcoms
pusha
add
je
xor
out
scas
je
xorl
in
ret
cmp
rcl
and
pop
adc
mov
push
mov
in
ret
xchg
scas
cmpsb
sbb
xchg
addr16
sti
hlt
sub
mov
mov
data16
sbb
sbb
mov
call
cmpsb
add
xchg
xchg
cmp
or
add
dec
imulb
inc
pop
shrb
mov
std
push
icebp
adc
out
mov
or
ficomps
pop
cld
test
fisubrl
imul
jo
mov
stc
inc
adc
push
test
test
sbb
pop
insl
pop
adc
repz
push
mov
mov
inc
xor
sub
push
cmp
push
sub
inc
sti
lods
stc
or
daa
jecxz
mov
and
cwtl
lea
mov
mov
idivb
jp
cmpsl
mov
rol
xor
add
icebp
mov
jbe
mov
sub
xlat
add
enter
popa
sti
in
insb
jg
push
jnp
xor
xor
mov
adc
daa
sahf
sahf
sub
adcl
sub
push
out
and
shrb
dec
divb
sbb
fldz
roll
inc
xor
sub
sbb
rcl
shlb
add
mov
scas
pushf
repz
in
insb
test
dec
xchg
cmp
outsl
xlat
pop
setl
bound
stos
ja
xchg
mov
pop
sbb
xchg
ret
xchg
xlat
out
movsb
adc
cmpsb
sti
clc
add
adc
pop
cmp
loopne
mov
push
dec
pop
sbb
lods
fstl
lret
or
int
jnp
push
mov
jge
fisubl
sbb
xchg
mov
mov
jb
jns
xchg
scas
inc
lods
sub
imul
sbb
in
inc
cmp
mov
lret
call
outsb
xchg
mov
jl
xor
mov
mov
sub
sub
cmp
dec
int3
cmp
sbb
jmp
xchg
and
jbe
jns
ja
push
pushf
data16
mov
or
int3
pop
dec
pop
mov
mov
mov
pop
dec
add
lea
adc
mov
outsl
mov
out
imul
fsubrs
adc
scas
mov
sbb
adc
popf
sarb
fwait
sbb
push
movsb
lcall
ss
xchg
cltd
push
cmp
es
in
std
xchg
aam
fistl
orl
incb
ljmp
sbb
das
add
fisubrl
mov
xor
jns
out
mov
repnz
xchg
pop
addr16
jbe
mov
fldenv
lcall
inc
sbbb
icebp
roll
fmull
push
push
fwait
mov
add
cmpsl
fnstenv
adc
or
pop
addl
shl
add
push
iret
shr
xor
push
or
cs
add
add
aad
je
jno
cmp
sbbl
ja
out
std
out
or
sub
les
xor
mov
mov
aam
jno
sub
out
int3
ljmp
cmp
aad
into
out
push
cmp
imul
scas
js
mov
ret
sub
clc
call
adc
add
jne
cmp
push
jo
xchg
push
addr16
insl
movntq
ljmp
cs
dec
adc
stc
add
pop
in
test
or
xor
lret
and
fsubl
leave
cld
mov
cmpsb
bound
sub
fidivrl
es
mov
pop
hlt
push
mov
rorl
fs
mov
leave
or
fcmovnbe
incl
pop
mov
insl
cmc
mov
mov
imul
bnd
xlat
test
and
add
push
addr16
outsb
xor
or
hlt
daa
subb
daa
inc
int3
lret
lock
mov
mov
movsl
out
and
pusha
cmp
push
push
and
outsl
fdivrs
mov
mov
jae
ficoml
add
jb
push
xchg
mov
adc
mov
push
loop
outsl
outsb
loop
mov
and
out
cltd
mov
clc
jnp
inc
adc
test
and
and
dec
jecxz
mov
ret
dec
cmp
jg
stc
mov
xchg
pop
mov
mov
mov
jg
pop
xlat
inc
js
jno
shlb
pushf
and
negl
pop
fcomps
pop
sub
xor
and
dec
pop
mov
push
sub
test
mov
push
std
mov
jecxz
rol
hlt
popa
ret
jle
loope
orl
jno
in
mov
add
cmp
leave
adcb
mov
pusha
and
sub
cmpsl
ficomps
mov
cltd
clc
enter
out
es
xor
ljmp
dec
mov
cmp
push
and
cmc
fcos
add
outsb
pop
out
sub
dec
rcrl
push
imul
xchg
sub
int3
mov
ss
and
cltd
jnp
scas
lock
ret
xchg
imul
cmc
adc
dec
mov
loopne
sbb
imul
jae
mov
dec
jl,pt
push
jmp
sub
leave
test
push
loop
repz
sbb
movsb
mov
rol
ss
mov
fisttpll
sub
jo
aad
sub
dec
pop
adc
pop
enter
arpl
sub
mov
push
in
adcb
xor
mov
and
push
in
mov
das
arpl
ret
std
aad
sbb
sbb
fstpl
int
cltd
rolb
int3
nop
out
or
adc
negl
xchg
iret
ficompl
jecxz
cmp
pop
mov
sti
adc
lahf
popf
sti
scas
sbb
out
sarl
xchg
test
pop
pop
inc
jp
lahf
insl
lret
inc
int
ret
adc
jge
sub
aas
dec
movsl
mov
pop
pop
loopne
jo
lcall
leave
popf
or
add
adc
imul
and
ljmp
xor
rorb
stos
aaa
iretw
ficompl
pop
jecxz
adc
push
movsb
mov
cmp
fsubrl
push
sbb
stc
leave
insb
out
ficomps
repnz
jmp
in
jp
es
sbb
leave
in
insb
fistl
jecxz
adc
and
ss
movsl
aam
jl
add
scas
inc
and
sub
mov
adc
sbb
adc
xchg
out
mov
jne
add
cmp
jne
loopne
sub
fistpll
test
test
sub
leave
adc
ss
inc
mov
mov
in
ror
out
insb
xchg
or
sub
sbb
shll
nop
push
repz
pop
cmp
jnp
loopne
out
jmp
sub
mov
xorb
jnp
inc
xor
jb
js
cmp
add
mov
call
insb
sbb
stos
cld
loope
adc
jg
pop
xchg
adcb
or
in
out
mov
inc
aam
mov
loopne
pop
aas
iret
test
push
lea
aaa
sarb
pop
idivl
inc
cmp
sub
lret
fidivrl
xor
insb
loop
adc
addr16
sub
mov
out
mulb
loopne
mov
test
mov
faddl
sub
addr16
mov
lods
aam
jle
daa
mov
ror
mov
push
push
mov
out
clc
xchg
xor
mov
call
xor
push
pusha
push
loopne
test
inc
out
jecxz
stos
cld
mov
inc
inc
adc
lret
inc
lahf
push
ss
mov
xchg
xchg
jmp
aas
dec
cwtl
adc
pop
repz
cmp
add
rcrb
lea
inc
inc
pop
scas
ljmp
lods
sub
in
pop
jg
sbb
fwait
push
push
fisubl
pop
cmp
loop
roll
cmp
out
frstor
mov
les
ret
mov
addr16
and
lds
push
lret
pop
add
adc
mov
sbb
push
add
in
and
mov
or
cmp
fld
pop
mov
dec
mov
fwait
xorb
sub
scas
rolb
push
mov
fdivl
imul
lret
mov
sub
pop
loope
jp
int3
sbb
adc
push
lret
dec
fmull
nop
pop
popf
xchg
or
xchg
mov
mov
jecxz
mov
adc
leave
xchg
pop
dec
ret
shrl
adc
idiv
mov
add
adc
pop
sub
in
in
mov
and
push
shrb
jecxz
jns
lds
pop
pushf
subb
mov
or
fcompl
andb
push
fstpt
push
adc
fldcw
jle
shl
fstps
nop
dec
pop
ljmp
mov
je
cld
pop
mov
jbe
jmp
mov
mov
add
in
lea
sti
clc
push
ss
inc
test
fldt
pop
sub
or
stos
lret
jmp
in
fs
jmp
lods
jne
add
dec
inc
fstps
xchg
and
movsl
stos
sbb
sbb
cmp
push
pop
fwait
cmp
adc
xchg
jl
test
and
bound
jle
ret
inc
xorb
ret
push
aaa
push
lods
pop
pop
cwtl
mov
mulb
call
data16
mov
shlb
xor
jge
push
inc
loope
mov
jbe
jle
mov
pop
jbe
xchg
jl
jne
popl
scas
mov
test
sub
lcall
int3
imul
popf
sub
stos
stc
push
int
stos
fadds
pop
lcall
fidivrl
jmp
fsubl
out
or
push
mov
addr16
add
rcrl
mov
fimuls
add
xor
jns
push
ss
mov
daa
sub
xor
mov
test
sub
add
xchg
je
mov
es
adc
push
jle
push
gs
lret
inc
cmp
sahf
cwtl
hlt
jo
fldt
pop
insb
mov
pop
shll
call
pop
daa
mov
popf
xchg
xchg
movsl
ds
dec
mov
xchg
cmp
test
enter
fsubrs
popf
daa
int
jns
mov
mull
mov
jne
sbb
pusha
rorb
in
lods
push
insb
lods
add
in
ljmp
or
test
xchg
push
mov
inc
out
movl
or
test
adc
je
dec
or
jmp
cmc
shlb
xchg
out
out
and
mov
int3
pop
mov
fsts
cwtl
loop
stos
jmp
pop
xchg
lahf
sub
xchg
int3
popf
fisubrl
push
ret
js
sbb
fldenvs
push
shlb
imul
loopne
pop
mov
jae
pop
cmp
aas
inc
movsb
std
mov
push
sbb
xlat
test
sub
or
in
jb
aaa
scas
pop
popa
fdiv
and
or
mov
lea
jg
cli
dec
in
mov
insl
mov
add
lret
push
add
aas
push
dec
push
lahf
ret
fcmovu
jl
dec
jbe
sti
jae
jnp
addr16
mov
daa
xchg
or
test
lahf
inc
cli
test
shll
pushf
mov
enter
cmp
test
fisubrl
scas
or
mov
ficoml
lea
ds
test
add
lds
mov
cmp
pusha
pop
imull
xchg
cli
arpl
push
les
inc
mov
sbb
sbb
in
sbb
pusha
cmc
fmuls
ficomps
outsb
popa
dec
jbe
mov
lods
cmp
add
push
sub
cmpsb
loopne
push
inc
lcall
aas
jg
addr16
movsb
cld
outsl
out
jle
jno
test
test
sbb
shl
sti
sahf
or
xor
push
pop
ret
mov
ret
lds
das
xchg
aas
cmp
ja
mov
or
icebp
cmp
xor
cmc
inc
scas
push
popa
mov
jnp
gs
sbb
xor
out
jmp
fs
imul
pop
sub
bnd
mov
mov
rorb
cmp
push
adc
adc
aam
mov
sub
dec
jo
loop
and
rcll
mov
mov
daa
sbb
dec
jl
sub
sbb
jmp
call
pop
cs
imul
cmpl
xchg
out
xchg
sbb
or
and
jl
and
xchg
push
xchg
test
push
stos
iret
jl
sub
sbb
and
shr
pop
cmpsb
ret
and
mov
sbbl
cwtl
daa
inc
in
push
pop
gs
es
cmpsb
push
in
lahf
stos
outsb
pop
or
push
pop
jns
ss
mov
pop
dec
jg
dec
js
fidivl
jno
mov
push
push
mov
mov
out
dec
subb
mov
rol
xlat
mov
lds
mov
inc
imul
test
les
leave
loopne
ret
int3
pop
int3
cmp
push
leave
loopne
out
sub
jg
shll
jge
lret
jbe
pop
mov
scas
cmc
popf
sub
cmp
lret
lcall
xchg
lahf
dec
pushf
outsb
or
gs
mov
mov
cli
xor
push
lds
ljmp
mov
leave
xchg
sbb
stos
cmp
inc
sub
add
lods
push
pop
into
lods
hlt
push
xchg
add
andb
pop
dec
mov
repz
jp
and
ss
or
sbb
cs
xor
popf
movsl
xchg
and
sahf
fiaddl
and
je
or
adc
sub
loop
jne
cmp
sbb
sbb
cmpsl
pop
xor
sbb
cmc
inc
xchg
insb
fistpll
cmp
adc
xlat
int3
std
jge
addr16
aas
pop
jl
out
fdivs
int3
or
or
data16
fimull
push
jmp
ds
dec
movsl
xchg
ficomps
push
stc
int3
or
mov
out
push
inc
xchg
xor
sbb
mov
pop
fildl
rolb
imul
or
cli
lock
xor
or
inc
imul
addr16
xor
mov
idivb
in
loopne
sbb
ljmp
and
subl
sub
popf
mov
cmp
sbb
sarl
and
outsl
dec
cltd
push
mov
adcb
ds
push
rclb
stc
inc
sub
xlat
add
xchg
or
mov
daa
and
in
push
insb
add
adc
sarb
and
in
outsl
mov
test
push
cmpsb
mov
add
incl
sbb
mov
sbb
jb
lods
mov
or
jo
mov
incb
scas
mov
push
es
mov
cmp
and
mov
xchg
adc
mov
aaa
pop
enter
or
clc
pop
push
pop
adc
sub
sbb
loope
scas
dec
lods
insb
cmpsb
stos
std
push
ret
push
outsl
push
fisttpl
jbe
mov
fsubl
xchg
rorl
pop
sbb
cmp
jne
les
dec
push
lret
je
sub
pop
imul
pop
shll
mov
inc
xor
xlat
jmp
loope
add
ja
adc
or
xchg
jle
lcall
dec
adc
ja
inc
pop
sub
mov
movsl
and
adc
add
shrl
mov
fs
sbb
inc
sbb
mov
shlb
mov
mov
inc
sbb
ljmp
push
pusha
push
pop
sub
pop
test
into
into
push
cmpsl
mov
add
aam
fdivs
out
dec
icebp
mov
cli
xlat
pop
shrl
jns
scas
xor
dec
xor
clc
nop
aas
mov
ds
out
inc
mov
xchg
std
sti
setae
add
jl
outsl
mov
push
testb
and
int3
or
mov
outsb
and
fwait
dec
lcall
pop
test
push
cmp
das
add
popf
popa
mov
jmp
ljmp
pop
mov
je
es
icebp
mov
xor
loopne
xchg
sub
test
push
mov
scas
sbb
or
mov
adc
cwtl
mov
gs
ret
aam
int
mov
or
in
aam
cli
mov
ljmp
mov
jg
cli
or
adc
mov
scas
add
arpl
inc
sub
movsl
cmp
push
movsb
je
or
clc
popa
inc
rcl
in
pop
dec
mov
mov
adc
stos
in
ret
jmp
imul
popf
mov
out
or
stos
sbb
ljmp
inc
stos
push
ds
mov
aaa
xor
cld
jge
int
out
frstor
frstor
inc
and
inc
pop
pusha
negb
hlt
sbbl
sub
in
or
pop
call
and
je
xchg
call
les
lahf
inc
iret
fadds
jle
test
inc
arpl
mov
es
into
lea
push
inc
or
xor
cmpsl
loopne
cmpsb
dec
mov
sub
pop
and
xchg
iret
loop
inc
adc
hlt
adc
lds
outsl
mov
mov
xchg
jnp
add
or
mov
les
mov
adc
push
dec
je
xchg
ret
and
incb
and
adc
dec
cmpsl
mov
ja
repz
push
test
inc
jae
jns
sbb
dec
lods
in
test
xor
push
cmp
ret
mov
in
ret
pop
sarb
mov
int
cmp
stos
lret
div
fimull
dec
sub
sbb
inc
mov
pusha
stc
sub
and
and
cmpsl
sub
lea
aaa
push
or
out
jge
jl
mov
ja
sbb
rcll
shll
sar
push
cmp
pop
add
add
leave
add
inc
or
lret
mov
pop
jge
hlt
mov
sub
add
mov
adc
insl
or
push
sbbb
out
mov
mov
sbb
incb
sti
adc
int
lret
fs
jnp
hlt
adc
shr
dec
push
xor
pusha
cltd
pop
add
fsts
or
dec
imul
dec
mov
xor
jbe
cmpl
mov
lods
pop
stc
jb
push
fnstcw
xor
imul
pop
sbb
or
nop
lahf
test
jmp
sub
insl
out
cmpsl
nop
mov
fnclex
sub
daa
pushf
in
cltd
mov
insl
lahf
cmpsb
jmp
adc
mov
aad
loopne
and
lds
repz
insl
or
inc
cld
mov
aad
cltd
leave
lret
mov
iret
mov
aas
jae
sbbb
addr16
inc
xlat
loope
sub
out
aas
push
mov
testl
out
pop
xchg
mov
movsl
jmp
mov
lret
or
sub
sahf
dec
mov
lret
cltd
cmpsb
xchg
int3
aad
and
dec
adc
mov
mov
fisubs
push
mov
cltd
xorl
cmc
push
cwtl
pop
ret
mov
cmpsl
cmp
add
push
mov
aas
jmp
fisubs
add
cmc
dec
leave
dec
sbb
in
jg
int
pop
pushf
aam
test
and
loopne
in
std
repz
mov
xchg
int3
jp
leave
imul
roll
and
in
movsl
scas
jle
mov
mov
sbb
mov
call
insb
es
push
cmp
cltd
pusha
add
divb
out
loopne
cmp
adc
lahf
icebp
mov
adc
leave
enter
jbe
sbb
es
and
mov
mov
jecxz
jmp
mov
dec
adc
aas
push
adc
or
dec
je
mov
inc
fldt
bound
es
vpsrad
jmp
scas
call
inc
sti
lcall
loop
inc
push
stos
sub
ss
js
or
in
popf
out
cmp
mov
push
jno
repz
xor
aas
mov
pop
mov
shrl
loope
jns
push
dec
out
test
jns
movsl
stos
sbb
pop
push
push
push
in
or
outsl
insl
mov
sub
add
adc
imul
fdivrl
mov
pop
cwtl
neg
andl
cs
dec
push
rolb
pop
cmc
enter
mov
adc
adc
cmc
jg
pop
and
and
mov
fs
dec
cmp
jae
mov
push
popa
arpl
inc
popa
xor
lahf
fs
xor
sbb
mov
cwtl
inc
popa
cmc
loop
leave
sub
add
out
xchg
inc
scas
adc
add
pop
ret
ljmp
mov
dec
andl
add
fidivs
mov
clc
dec
xchg
push
pop
adc
leave
mov
ror
cmp
push
jle
push
jge
cmp
push
into
loop
inc
pop
lds
jo
jb
jnp
frstor
add
mov
sub
lods
pop
sbb
jno
jmp
push
xchg
inc
dec
mov
mov
pop
cmp
xchg
shlb
inc
or
xchg
cmp
fstl
mov
dec
jg
jmp
and
insl
or
jb
sarb
cli
or
xchg
or
cmp
mov
xor
xchg
mov
aaa
out
add
int3
bound
add
cmp
mov
mov
pop
pop
aaa
sahf
xor
mov
outsb
mov
pop
outsl
pop
add
or
dec
fstps
enter
sbb
pop
das
jns
sarl
jge
sbb
jnp
push
shl
shlb
in
arpl
idivl
outsl
in
addb
sbb
mov
movb
js
mov
hlt
cmpsb
pop
stos
jge
add
repnz
cmc
ds
loopne
ja
arpl
dec
jl
scas
aaa
addr16
mulb
or
mov
pop
rclb
insb
mov
in
popa
ss
cmpsl
mov
dec
rcr
cmp
repz
mov
mov
pop
mov
je
in
gs
test
out
push
pop
dec
pop
sar
xchg
cmp
pushf
mov
data16
lahf
imul
pop
cld
mov
mov
add
jg
jbe
enter
xchg
fcmove
mov
aaa
or
stos
insl
popa
icebp
jo
faddp
divb
cmc
negl
adcb
mov
int3
fwait
test
pop
cli
shr
adc
mov
add
fistpl
mov
mov
cmpsb
shll
lahf
lock
stc
pop
mov
mov
das
outsb
xor
ss
sbb
lcall
pop
sbb
pop
sti
push
lret
xchg
push
sbb
pop
shr
push
stos
call
push
dec
jo
bound
idivl
push
xor
daa
test
sub
aam
jo
stc
mov
repz
iret
push
cmp
jo
push
dec
mov
or
aas
xor
inc
mov
pop
je
test
xor
test
pop
popa
outsb
rolb
add
or
mov
aaa
push
in
ret
lcall
xchg
inc
mov
mov
mov
shlb
not
jg
mov
mov
adc
inc
insl
jl
cmc
fbld
jmp
mov
sbb
pop
enter
xchg
push
mov
popa
xor
out
std
inc
push
cltd
in
adc
or
dec
add
push
clc
es
cmp
pop
test
movsb
sub
aad
mov
sti
bound
jecxz
jmp
pop
rcll
sti
adc
push
enter
hlt
or
insl
jmp
ja
test
iret
pop
add
icebp
jno
lds
gs
ss
insb
aas
push
jne
dec
and
out
inc
fwait
iret
scas
sub
lods
je
mov
xor
pushf
das
cmp
jg
mov
jmp
inc
lds
lods
into
lahf
jl
popf
test
data16
daa
cwtl
jno
inc
js
and
inc
add
lock
pop
inc
popf
out
xor
das
jb
xchg
jns
mov
inc
aad
xchg
test
loop
lret
mov
add
adc
jmp
mov
orb
sub
mov
stc
jecxz
lea
jnp
pop
vmulpd
cs
pushf
add
pop
popf
mov
stc
pop
xor
iret
es
rcll
aaa
fwait
push
pop
cmp
mov
pop
pop
add
or
sbb
std
mov
loope
adc
ret
mov
cli
andb
bound
sbb
pop
jg
jp
cli
bound
push
lds
mov
roll
push
cmp
jo
hlt
repz
dec
aam
inc
mov
mul
mov
or
pop
jns
or
mov
sahf
push
insb
nop
int
ljmp
lea
cmp
inc
jo
mov
aas
mov
mov
imul
jb
in
loop
fiadds
rorb
rclb
xchg
lods
movsl
jmp
outsl
into
popa
jnp
nop
push
jb
ret
inc
dec
test
aas
and
mov
xchg
cmpsl
iret
cmpsl
clc
xchg
enter
lahf
gs
add
adc
fcomps
push
jmp
xchg
or
sub
push
sub
adc
jae
lods
xchg
rcll
fisttpll
nop
mov
or
leave
dec
dec
push
jbe
xchg
inc
lcall
pop
sbb
rclb
fcompl
add
add
fs
mov
cmovle
shlb
imul
xchg
js
mov
insb
cmpsb
jg
in
cmp
movsl
mov
lahf
loop
jne
inc
cmp
into
in
aas
rclb
fadd
adc
xrelease
push
imul
cmp
mov
mov
or
dec
lret
out
cli
hlt
mov
mov
push
setae
idiv
ret
out
mov
pop
inc
add
dec
pop
push
repnz
dec
shlb
into
jns
push
mov
cli
mov
jae
sub
mov
sbb
lea
mov
jo
inc
xchg
xchg
lds
pop
push
or
adc
add
xchg
scas
pop
fisubrl
pop
mov
dec
pop
push
and
push
cld
xchg
fisubrs
xchg
sbb
outsb
mov
inc
mov
fisubrs
movsb
out
xchg
out
dec
lret
push
hlt
leave
ds
cld
jb
mov
xchg
in
xor
faddl
lods
mov
mov
adc
xor
fdivrl
pusha
lock
int3
cli
outsl
sub
adc
dec
imul
std
out
jne
mov
in
aaa
insb
or
sub
jg
pushf
pop
std
dec
jg
jae
cmp
adc
jge
sub
inc
call
fwait
push
cmp
mov
sub
adc
pop
jp
push
imul
arpl
out
add
sbb
stc
in
lods
neg
mov
call
sub
das
int3
sbb
scas
pop
cmc
xchg
dec
aas
xchg
aaa
cmp
pop
fildl
inc
dec
pop
arpl
movsb
sub
xchg
push
clc
fwait
add
cmp
mov
inc
jge
stc
imul
adc
out
call
cmp
inc
push
xchg
cmpsb
pop
push
cmpsb
xor
pop
lds
mov
jne
cmpsb
bound
pop
xor
xchg
sbb
ja
fmuls
sub
lret
or
call
sahf
test
and
das
dec
mov
stc
dec
movsl
and
add
mov
push
fucom
jl
mov
pop
pop
lahf
loopne
hlt
cmp
inc
cmpl
gs
sbb
les
jl
pop
xchg
sbb
ficomps
sub
jnp
jmp
leave
xchg
jnp
inc
insb
js
orb
lods
sub
xor
mov
mov
jne
sbb
mov
mov
gs
rdmsr
mov
pop
sub
mov
mov
lret
adc
sbb
add
cmp
adc
sub
imul
roll
mov
adc
js
jb
nop
or
xchg
fildll
mov
es
xchg
fimuls
dec
or
iret
lahf
mov
or
mov
sbb
iret
mov
jno
ss
push
pop
pop
shr
scas
addr16
jns
jp
arpl
add
xlat
adc
cmc
out
addr16
push
rclb
mov
dec
nop
mov
push
hlt
fucom
dec
jns
push
add
jle
sbb
out
push
dec
imul
sub
push
inc
sbb
shll
xchg
pop
mov
mov
fstpl
xor
aad
mov
lahf
and
add
xchg
adc
fistps
pop
mov
in
add
pop
sub
adc
out
push
int
fndisi(8087
es
or
and
ja
or
jl
xor
adc
imul
xor
flds
pop
push
dec
xor
ret
adc
cmp
mov
jl
ss
popa
int
fcomp
add
jnp
imul
jns
sbb
pop
mov
cwtl
rolb
jnp
stc
into
pop
dec
mov
mov
dec
add
lods
inc
xor
mov
pop
outsb
push
cmp
and
jecxz
adcl
cmp
loopne
mov
or
fbld
out
xorb
jb
fistl
addr16
hlt
push
sub
lods
cmp
mov
out
sbb
jae
mov
ret
sub
and
jp
dec
add
xchg
daa
adc
adc
pusha
add
shll
dec
pop
repz
into
repz
mov
xchg
mov
dec
into
or
gs
daa
fidivrl
jb
lea
scas
out
cmp
pop
aam
outsb
xchg
pop
mov
mov
mov
stos
xlat
jne
daa
loopne
rorb
lds
jnp
jbe
pop
aad
jmp
or
jae
cmp
mov
dec
loope
sbb
push
jns
push
inc
xor
and
push
push
push
push
or
sti
or
stc
or
lods
in
xlat
pop
xor
adc
rorl
into
cs
cmp
js
test
shrl
pop
mov
dec
movsl
movsl
fwait
xchg
sub
inc
cli
mov
inc
push
lahf
sub
stc
xor
xlat
das
in
stc
orl
int
mov
add
test
xchg
paddd
mov
jl
mov
roll
inc
and
lods
add
pusha
inc
pop
pop
jns
loopne
mov
cwtl
jns
lahf
shl
fimull
inc
inc
inc
pop
cmp
add
adc
loope
or
dec
fsts
xor
cmp
fnstenv
sub
stos
std
pop
mov
divl
nop
sti
pop
sub
inc
gs
add
adc
push
cmp
fsubr
fmul
cltd
pop
cmc
push
or
js
mov
insb
imul
int3
in
xchg
xor
fnstenv
icebp
inc
mov
mov
push
int3
repnz
cmp
pusha
pop
pop
xchg
fwait
push
xor
jl
leave
cmp
icebp
push
lods
jo
mov
mov
pop
push
dec
inc
jo
or
addr16
mov
sti
adc
adc
dec
ljmp
imulb
cmp
pop
push
adc
pop
push
push
sbb
push
and
add
insb
scas
dec
lret
loope
out
inc
sbb
dec
sbb
dec
nop
aad
fsubp
fadds
push
and
bound
mov
popf
dec
insl
jne
bnd
adc
loop
fsubl
ret
sbb
sbb
andb
pop
icebp
jne
lahf
pop
repnz
dec
push
xor
std
inc
decb
inc
add
xchg
lock
dec
das
adc
shl
adc
insb
rorb
xchg
xchg
clc
adc
xlat
in
shlb
repz
pop
cmp
push
jns
imul
mov
xchg
icebp
ds
imul
aaa
pop
xchg
loopne
in
mov
jae
push
sub
daa
push
popa
fistps
xchg
les
add
leave
out
in
pop
sbb
bswap
arpl
int3
fists
sbb
mov
sbb
bound
dec
fmull
ljmp
lahf
ss
pop
dec
sbb
out
cs
add
push
or
mov
call
call
pop
dec
in
push
pop
test
fildl
sub
leave
mov
decb
subl
adc
xchg
cmp
sti
xchg
btrl
into
jnp
in
imul
bound
xchg
js
mov
mov
popf
mov
add
rclb
shlb
cmp
push
daa
ljmp
mov
push
lret
clc
ljmp
shlb
cmp
ljmp
xchg
mov
rcrl
fidivs
push
lds
push
cmp
adc
add
jb
cs
push
jmp
mov
xor
arpl
fidivl
sbbl
pop
sbb
clc
and
popf
fsubrs
xchg
adc
dec
shlb
jmp
push
cmc
inc
inc
mov
pop
dec
xlat
orl
out
loop
out
mov
ret
jns
scas
mov
push
dec
int3
adc
lods
xchg
fadd
jbe
fldcw
hlt
and
pop
adc
mov
das
or
sub
dec
mov
mov
stc
ret
scas
sub
add
mov
mov
out
jo
push
cmp
fmull
or
jbe
movsb
stc
fcmovbe
test
jle
and
insb
xchg
gs
mov
data16
inc
repnz
and
mov
mov
call
cli
or
mov
fcmovnbe
dec
movsb
nop
adc
mov
push
hlt
sbb
mov
out
xor
and
and
je
daa
mov
cli
dec
mov
outsl
shll
inc
ret
push
sar
leave
loope
repnz
int3
lock
outsl
aaa
adc
fs
fucomip
lods
pop
adc
mov
pop
nop
mov
cwtl
push
movsl
xorb
jb
mov
mov
scas
popf
roll
fiadds
outsb
in
mov
popa
push
adc
stc
out
out
call
cmc
cltd
insb
add
mov
mov
js
push
inc
mov
jns
inc
fiaddl
add
xchg
xchg
jecxz
mov
dec
in
stos
mulb
xchg
out
push
arpl
sbb
ret
xchg
popf
mov
pop
leave
sbb
jb
outsl
mov
xchg
pop
fisttpll
xor
test
xor
bound
js
adc
sbb
stos
sub
xchg
rcrl
inc
les
pushf
pop
jbe
xor
mov
sbb
pop
jae
jnp
js
mov
sbb
sahf
outsl
push
arpl
xchg
xrelease
mov
mov
out
push
mov
sbb
add
push
xor
aam
ret
int
and
loop
inc
xchg
ja
push
jb
in
cmp
fsts
in
push
sub
addr16
inc
cwtl
arpl
scas
psrld
sbb
inc
sub
mov
jo
ja
test
bound
lods
orl
test
cmp
pop
push
fisubrl
mov
fsubs
stc
sbb
arpl
mov
dec
cld
sub
pop
and
add
jmp
fadds
fwait
cli
imul
sub
insb
test
add
cmc
ret
mov
xor
cmp
xor
pushl
sub
xchg
jp
imul
push
inc
push
mov
or
and
dec
pop
pop
mov
xchg
scas
mov
pop
movsb
cmpsb
inc
sub
inc
mov
add
out
dec
popf
out
scas
push
xor
in
jnp
cmp
out
jg
jge
cmp
cmp
lahf
dec
add
dec
inc
out
lea
push
mov
lea
ret
xchg
mov
pop
std
add
and
jg
in
jns
push
imul
in
xor
jge
push
sbb
push
xchg
movsb
xchg
add
insb
in
pop
fsubrs
add
sub
out
and
inc
scas
sub
pop
cmp
adc
pop
shll
js
and
inc
pushf
and
inc
test
add
pusha
push
fwait
adc
js
pop
sub
insl
cwtl
fs
dec
cld
ljmp
movsl
mov
mov
mov
pop
and
in
pop
test
andl
popf
jmp
daa
jg
scas
adcl
lea
in
orl
or
sbb
shl
sub
psraw
pusha
xchg
sub
sbb
call
cli
mov
shlb
xchg
or
and
mov
push
cmp
fisubs
mov
mov
pusha
je
loop
cltd
test
inc
cmpsb
push
xchg
and
dec
xor
push
movsl
sub
and
fsts
add
imul
cmp
mov
imul
pop
cs
adc
adc
shrb
push
cmp
add
insb
or
les
push
cwtl
enter
cmpsl
pop
loope
into
cmpl
add
add
fsubr
sub
lcall
inc
pop
popa
xor
mov
push
adc
scas
sub
ret
jne
dec
lods
ds
fcomps
mov
mov
and
arpl
pushf
out
je
jo
in
stc
in
jo
imul
adc
lahf
push
pop
mov
jecxz
add
jb
loope
mov
mov
int
inc
test
mov
push
push
sti
test
push
add
test
in
cltd
arpl
xchg
test
popa
enter
mov
call
cli
mov
scas
mov
mov
cwtl
xchg
ret
sbb
xor
imul
mov
inc
daa
je
push
ret
sbb
adc
mov
in
leave
pop
mov
adc
pop
int
fwait
push
mov
sub
jge
scas
jl
mov
xchg
push
xchg
test
sbb
fxch
aad
adc
xorl
test
inc
push
push
dec
lods
rorl
dec
pop
or
and
notb
xlat
lahf
enter
in
ds
insl
adc
inc
mov
in
adc
dec
filds
mov
cwtl
loop
cld
cmp
sbb
pop
bound
repz
cmp
outsl
push
mov
ljmp
mov
pop
xor
popf
cmp
sbb
add
aad
adc
leave
cs
mov
jae
scas
fdivrs
push
jne
loope
dec
jns
xchg
push
popa
xor
jno
xor
dec
mov
xor
pop
cmc
out
jns
fnstenv
icebp
sbb
and
insl
xor
movsb
das
cmp
mov
sbb
mov
outsl
cmp
out
pop
xor
mov
and
mov
jge
ljmp
xchg
adc
insb
scas
mov
push
shrl
daa
int3
mov
imulb
sahf
shrb
mulb
inc
sub
mov
mov
jmp
js,pn
insl
dec
shrb
sub
pop
movsb
stos
imul
sub
mulps
mov
pop
out
mov
inc
mov
test
inc
pop
push
adc
inc
sbb
jg
out
addr16
gs
cld
mov
pop
and
rorl
gs
test
loope
add
std
je
pop
leave
cmp
outsl
push
mov
jbe
pop
enter
rcll
addr16
mov
les
jge
sbb
adc
mov
xchg
xor
popa
ljmp
push
test
cmc
sub
aas
or
in
jle
outsb
cmpsb
mov
sub
jge
enter
jne
adc
cmp
jbe
xchg
fadds
lds
inc
push
push
push
test
orl
push
stos
out
fistpll
ret
ja
add
loopne
notb
scas
mov
cld
mov
jmp
lahf
xchg
pop
test
addr16
pop
fucom
dec
sub
bound
xchg
test
adc
movsb
mov
xchg
out
and
in
insb
adc
scas
hlt
imul
mov
and
sbb
nop
test
pop
sub
sahf
stc
mov
out
sbb
cmp
and
jp
addr16
inc
jle
push
pop
jle
add
push
pusha
aam
je
jo
test
nop
push
shll
jge
ss
aaa
outsl
pop
xor
mov
aam
jno,pt
mov
cmpsb
lret
int3
pop
pop
push
out
stos
out
add
sub
xchg
stos
sub
pusha
incb
pop
adc
das
xchg
loope
cs
pop
jns
iret
rcrl
pop
jl
ljmp
xchg
std
pusha
ljmp
movsb
outsb
jo
push
cltd
sbb
cmpsl
cmc
sub
aam
fcoml
push
aaa
int3
push
pop
cmp
jnp
cwtl
jl
push
repz
push
aaa
jmp
cmpsb
pop
push
popa
xchg
enter
pop
lea
mov
mov
cltd
sub
mov
in
pop
fs
mov
sar
xor
loopne
dec
mov
into
repnz
lret
mov
xchg
popf
cs
mov
adc
pop
push
jns
adcb
jae
insb
xor
fimull
leave
js
jge
inc
mov
gs
or
into
or
xlat
in
inc
daa
aas
mov
shll
sbb
xor
inc
icebp
sti
pop
or
xor
ja
daa
outsl
xor
lds
enter
int3
in
pop
cmpsl
xchg
pop
sub
xchg
and
nop
mov
xor
lock
xchg
dec
and
add
mov
push
xchg
mov
lea
mov
push
mov
je
and
rep
sar
fmuls
pushf
jns
loopne
ret
pop
mov
mov
out
sub
stos
js
xrelease
sbb
mov
cmpb
and
psllw
mov
popl
arpl
sub
inc
lahf
mov
jp
jle
adc
add
sub
and
xor
cmc
jo
paddsb
sub
popa
js
aas
repnz
sarb
outsb
push
in
pushf
lods
mov
cmpsl
push
inc
mov
mov
pop
jae
pop
ss
push
sbb
test
pop
push
cli
aas
faddl
or
dec
push
and
movsl
les
xchg
mov
pop
jle
lds
ljmp
in
hlt
rcrl
mov
sub
lret
cmc
popa
aad
scas
scas
push
xchg
cmp
inc
pushf
je
jecxz
xor
add
cmp
dec
sub
nop
xor
mov
aaa
ficoms
fs
add
inc
xor
xchg
sub
cmp
aas
jmp
push
fwait
lods
js
outsb
push
mov
jmp
inc
lret
repnz
inc
mov
mov
insl
push
dec
inc
shl
aam
mov
stos
je
cmp
dec
fildl
es
movsb
hlt
dec
push
xchg
xchg
pushf
or
xchg
sbb
sub
insl
mov
and
push
cld
xor
inc
stos
movsl
int
ret
jb
cld
in
sub
loopne
faddl
mov
int3
rclb
dec
enter
stc
mov
sub
repnz
dec
movsb
inc
cmp
mov
sahf
inc
jo
dec
adc
test
fwait
aaa
adc
sbb
mov
mov
ja
dec
add
int3
mov
dec
push
nop
lret
popa
ret
lret
sahf
repnz
sub
ljmp
sbb
push
clc
sarb
dec
xchg
les
gs
sbb
stos
call
mov
pop
and
stos
cs
popa
or
add
scas
cmp
orl
cmp
mov
or
je
push
mov
test
push
xor
and
stos
scas
inc
fidivl
mov
mov
ja
leave
mov
data16
repnz
dec
fsubr
lcall
jnp
mov
das
rorb
and
sub
clc
lret
jae
dec
out
packuswb
pop
js
dec
in
add
push
xor
dec
inc
sar
add
cmpsl
leave
sbb
jns
leave
jmp
cwtl
fimuls
sub
and
sbb
inc
shr
jbe
mov
imulb
pop
add
add
aam
mov
loopne
in
add
test
clc
push
adc
sub
insb
mov
sbb
daa
push
mov
std
es
in
test
call
rcr
in
mov
dec
mov
pop
imul
roll
fnstenv
xlat
inc
out
sbb
pop
rorb
movsl
fistpll
mov
ror
lret
fsubp
pop
sbb
arpl
cmpb
mov
hlt
push
mov
or
fdivrl
loopne
ret
add
adc
repz
loop
pop
jle
add
mov
or
or
jbe
cs
cmp
xchg
push
or
and
add
cmpl
fdivl
daa
jae
add
loopne
mov
mov
cmpsb
subl
mov
and
mov
jo
sub
mov
jecxz
sbb
xchg
xor
xlat
fsubs
dec
fisubrs
fprem1
imul
xor
mov
mov
sub
add
jnp
xchg
xchg
xor
mov
inc
fisubl
push
add
xor
pop
les
lret
out
inc
or
xor
ficoml
push
cmpsl
jnp
sbb
bound
mov
fisttps
dec
mov
loopne
pop
jl
cmp
push
mov
pop
out
outsl
out
mov
add
clc
ljmp
in
or
leave
popa
divb
pop
mov
in
sub
sahf
push
int
mov
int
mov
or
dec
mov
loop
mov
cmp
pop
xor
cld
xor
test
pop
push
pop
jnp
sti
nop
jg
xchg
jae
jo
insb
into
cli
es
jp
xchg
add
aam
sahf
sub
sbb
cli
lea
pop
mov
xchg
pop
cmp
nop
stos
fdivs
dec
lds
arpl
add
jne
cmp
nop
mov
pop
adc
in
shrb
cmpsb
add
out
aam
clc
inc
jmp
push
std
aad
int
sbb
js
js
shll
mov
xchg
sub
xor
hlt
mul
les
jnp
dec
and
push
fs
mov
pop
leave
or
je
inc
cwtl
dec
cmp
in
jo
add
loop
jne
pop
cmc
je
aad
cwtl
in
mov
popf
jns
sbb
push
int
bound
out
push
mov
push
insb
pop
enter
in
js
pop
jle
xor
lret
cmp
xchg
mov
leave
push
sbb
cs
add
jo
shl
add
xor
gs
or
stc
sbb
vmwrite
ret
push
cmpsl
inc
jge
cmpsl
inc
aaa
loope
icebp
jae
test
mov
jle
cmp
push
pop
jmp
movsl
movsl
lcall
loope
lret
in
popf
mov
mov
rclb
mull
push
cli
mov
push
aas
test
scas
arpl
je
push
push
ret
lcall
push
push
inc
popf
or
out
and
pop
mov
and
repnz
push
es
dec
dec
jge
daa
jl
cmpsb
and
addr16
xchg
in
sub
push
repnz
das
movsb
add
jne
mov
xchg
iret
sti
repnz
cwtl
xor
sbb
cmp
cmp
jge
adc
test
inc
push
stos
aas
and
mov
pusha
mov
add
pop
push
xchg
in
mov
and
jne
add
out
or
ljmp
or
mov
add
popl
arpl
fmull
add
push
mov
scas
adc
xchg
push
push
ret
jo
or
addl
mov
repnz
lret
xchg
fwait
cwtl
popf
mov
pop
sti
pop
pop
dec
lret
loope
pop
cmp
push
inc
push
fistpl
fmulp
out
cmp
sbb
sub
mov
jns
outsl
add
sbb
out
sahf
pop
int
in
add
aam
sbb
pop
adc
jne
push
sub
push
sbb
inc
scas
roll
jno
mov
fcmovu
xor
ficomps
shl
outsb
sbb
mov
mov
data16
shrl
cli
fidivs
or
xchg
and
imul
sub
aad
cwtl
int
xor
xchg
int
lahf
and
fistl
outsl
jl
mov
cmp
push
shll
mov
outsb
pop
push
xor
arpl
or
stc
and
lcall
leave
scas
pop
ja
dec
insl
stos
fistps
push
mov
cli
pop
mov
push
mov
pop
adc
sbbb
lret
popf
add
inc
imul
sub
popa
mov
cmp
push
sub
jbe
lods
lret
adc
bound
cmp
jo
pop
js
lea
jl
mov
push
push
xchg
fsubrs
js
popa
in
aaa
mov
jg
push
jne
mov
icebp
aam
push
fadds
or
rorw
push
fs
mov
push
mov
cmp
ret
mov
dec
jns
enter
cmp
pop
mov
das
scas
cmpsl
repz
and
jp
sahf
pushf
fadds
mov
xchg
in
jnp
loop
stc
daa
xchg
sbb
rcll
test
aam
ret
dec
jo
in
xchg
mov
aam
enter
and
inc
or
inc
fisttpll
push
or
hlt
pop
pop
clc
pop
jne
jno
addr16
inc
repnz
insl
xor
mov
outsb
lret
xchg
mov
push
scas
push
xor
sub
mov
rcrb
cmpl
push
xorl
ljmp
in
aaa
push
xchg
std
mov
lds
stos
and
xor
scas
popa
dec
cs
mov
mov
lcall
mov
pop
stc
mov
pop
enter
adc
xchg
cltd
shrb
xchg
int3
pushf
arpl
mov
mov
push
call
xchg
dec
leave
dec
out
adc
cmpsb
cmp
inc
jg
cmpsb
frstor
mov
push
xchg
or
cmp
test
ss
lcall
or
sub
scas
in
popf
jle
clc
fsubrp
loopne
jne
mov
pop
sub
lcall
fisubl
push
jne
jmp
jno
imul
cmp
xchg
ss
push
js
std
pop
pop
test
dec
iret
or
mov
aad
test
outsb
subl
xchg
lretw
pusha
and
adc
inc
add
testl
addr16
das
stos
int3
mov
push
lret
daa
ljmp
mov
dec
test
cmp
call
lds
std
xchg
addr16
pusha
inc
shr
dec
mov
mov
stos
loope
mov
fsubrs
sbb
xchg
movsl
sub
sub
adc
hlt
ret
shll
inc
sub
cmp
cmp
push
scas
lods
xchg
std
cwtl
fnsave
xor
inc
mov
call
enter
sbb
cwtl
dec
idivb
inc
and
cmpsl
or
inc
cld
mov
rcrb
cld
sbb
and
test
push
addr16
shl
jle
or
sub
mov
pop
add
lds
ljmp
aam
das
loope
jne
adc
jne
xlat
cs
mov
sbb
in
adc
push
xor
mov
clc
dec
cmp
cmp
xor
and
faddp
popa
and
push
adc
push
mov
mov
sub
mov
add
jbe
imul
aas
xor
les
into
sbb
pop
jno
mov
in
jnp
adc
and
or
shlb
inc
sbb
popa
loope,pn
add
and
scas
lock
dec
fcmove
popf
in
into
adc
outsl
lds
jne
bound
in
inc
cmp
lahf
adc
or
sahf
hlt
test
pop
repz
pop
imul
mov
xchg
pushf
xchg
ljmp
inc
sbb
outsb
pop
cmp
loop
jbe
enter
cmpsl
repnz
icebp
add
pop
fcmovbe
shlb
dec
pop
ja
lret
and
mov
push
popa
sar
in
adc
sti
dec
or
jb
adc
sub
adc
in
add
fnstcw
jo
movsl
adc
test
test
mov
fnstcw
aam
data16
mov
mov
loop
in
pop
std
jae
xchg
xchg
lret
sbbl
or
outsl
int
cs
jns
ss
andb
fistpll
aad
rorb
mov
jne
in
pop
imul
pop
and
jo
lea
or
mov
int3
in
testb
add
and
dec
cmp
es
mov
inc
push
stos
sub
bound
xchg
fsubl
mov
movsl
sub
push
notl
pop
std
lret
and
jno
adc
sbb
xchg
xchg
dec
pop
andl
xor
repz
andl
jle
cli
jns
and
in
sub
subb
sub
sbbb
mov
fisubs
mov
je
push
enter
cld
in
bound
or
fstpl
mov
mov
je
sarl
cwtl
and
jb
sub
pushl
popf
lahf
jno
repz
in
mov
jne
adc
jo
dec
in
loopne
jb
lods
sbbl
incb
push
pop
int3
in
sbb
movl
add
mov
ret
cmpsb
cltd
test
into
leave
lret
cmp
test
adc
rcr
cmp
mov
lods
and
mov
ss
dec
mov
dec
pop
scas
mov
lret
and
mov
mov
aaa
daa
rcr
mov
stos
fstl
sub
adc
fwait
dec
test
adc
ljmp
jns
push
xor
cwtl
fsubrs
inc
outsl
flds
shlb
imull
push
aas
dec
jmp
loopne
mov
rcll
lcall
push
xor
in
push
into
test
shll
mov
push
stos
pop
push
mov
outsl
adc
pop
bnd
xor
lods
int3
jae
rcl
xchg
xorb
inc
jae
sub
les
fcomp
mov
stc
jno
xchg
je
aas
in
pusha
pop
fildl
add
and
lods
js
push
jl
repz
add
ss
in
clc
fisttpl
mov
jp
arpl
pop
scas
ds
dec
xchg
dec
xchg
mov
jl
and
jmp
push
mov
sub
inc
cmpsl
sub
test
out
ret
rcll
push
xchg
stos
bound
mov
ret
cmp
out
in
sub
push
addr16
inc
xchg
add
xor
adc
sub
fldt
xor
mov
jmp
inc
pop
xchg
mov
push
adc
xchg
sbb
jno
xor
jl
ret
call
jg
inc
cli
inc
or
xor
dec
jae
jmp
or
in
inc
out
aaa
repnz
mov
leave
inc
mov
scas
mov
in
xor
imul
daa
ficoml
test
pop
inc
loope
shl
xchg
and
lods
imul
mov
ss
jnp
mov
sbb
imul
xor
xor
dec
mov
pop
mov
cmc
ds
xchg
xchg
shll
add
jns
push
add
shr
inc
rcll
xorl
repz
inc
ja
imul
scas
lahf
into
stc
psubd
out
fs
lret
notb
jg
pop
cwtl
sub
pop
lret
dec
arpl
insb
jno
pop
in
sub
repnz
jmp
les
or
add
mov
out
add
push
rclb
push
das
xor
add
jns
stc
mov
lock
dec
stos
call
add
push
sbb
fistl
outsb
icebp
lcall
jge
dec
or
jno
pusha
dec
jbe
xor
popf
jp
cmp
xorb
cltd
das
sti
mov
insb
pop
fnstenv
sti
lret
in
subb
and
fsave
scas
in
pop
shlb
mov
stos
jnp
mov
sbb
jbe
fildl
and
addb
pop
cmp
or
inc
or
jge
lret
pop
or
loopne
into
inc
dec
pop
xlat
gs
adc
jnp
lods
rcrl
and
ss
mov
rcrl
xchg
inc
dec
aad
or
fsubr
pinsrw
js
addr16
jle
outsb
cmp
ret
mov
dec
fwait
add
pop
cltd
xchg
stos
cmpsb
push
mov
insb
loope
push
sbb
out
int
pop
ss
or
sbb
jno
push
mov
ret
cmp
int3
inc
adc
xchg
js
mov
mov
inc
mov
jg
cmc
dec
ljmp
dec
and
stos
sub
cmp
fdiv
pop
mov
pusha
inc
lock
inc
call
xchg
pop
or
push
fs
negl
js
popf
into
push
pop
dec
add
adc
mov
mov
movsb
jp
xor
mov
sbb
xor
sbb
das
pop
add
movsl
sahf
cltd
or
xchg
dec
xor
aas
add
sbb
jae
fidivrl
sbb
mov
xlat
xchg
push
ljmp
aam
lret
add
imul
cmp
int
daa
pop
inc
rorb
lods
cmpsl
icebp
rcr
push
mov
test
arpl
xchg
pop
mov
mov
bound
repz
cmp
mov
mov
movsb
mov
jmp
xor
push
push
sbb
pop
cmp
cmpsb
int
pop
sub
sbb
push
je
lods
ljmp
cmp
incl
jne
add
mov
int3
sub
pop
dec
out
rclb
stos
jo
ret
repnz
lret
out
arpl
lods
and
mov
adc
ret
pop
or
jle
cmp
stc
push
inc
sbb
adc
faddl
loop
rol
xor
pusha
lock
cmp
cmp
sbb
inc
jae
iret
mov
or
leave
mov
mov
push
xchg
movsb
pop
jmp
ror
test
imul
mov
and
movsb
push
out
jb
hlt
mov
cltd
addr16
mov
dec
mov
icebp
shr
shll
ret
aad
inc
pop
jnp
dec
iret
in
movsb
pshufw
mov
adc
xorl
testb
mov
mov
mov
add
mov
movsl
mov
call
incb
loopne
xchg
or
push
mov
aas
aas
lret
fwait
push
mov
add
ds
fadds
adc
ret
push
iret
or
enter
sti
sub
mov
jp
and
dec
lret
lret
inc
jl
cmc
inc
cmp
prefetchwt1
push
test
inc
in
mov
scas
cmp
pop
in
aas
cmpb
jle
out
xchg
jae
int
aaa
iret
je
xchg
pop
pop
sub
push
cmpsb
cmpsb
pop
hlt
je
mov
mov
sbb
lock
jns
xor
mov
in
xchg
test
push
inc
xor
xchg
sbb
cmp
jmp
int3
cmp
cli
push
adc
jno
push
push
dec
sbb
push
push
sbb
mov
fdiv
or
adc
cmp
jmp
lahf
in
and
stc
inc
cld
jmp
in
or
add
xchg
loopne
aad
mov
hlt
add
sarb
arpl
std
add
adc
xor
cmc
adc
sbb
inc
js
insb
and
addl
in
jg
mov
lods
ljmp
add
daa
push
imul
loope
out
and
int
push
push
insl
test
mov
mov
inc
pusha
in
pop
jo
push
imull
cmc
jnp
les
shrl
or
or
jne
cmp
lock
or
push
fidivrl
sub
cmp
addb
add
js
std
cmpsb
cmp
mov
dec
push
xchg
imul
shl
jnp
scas
int3
loope
fwait
enter
or
dec
inc
xlat
mul
sbb
cmpsb
cwtl
cli
or
outsl
pop
xor
imul
cmp
pop
jp
mov
mov
inc
aas
repnz
pop
outsb
in
shll
pop
mov
adcb
push
jb
aam
fwait
sbb
lea
pop
sbb
in
mov
add
nop
add
xchg
iret
arpl
iret
xor
jle
negl
addl
mov
fidivrl
cmp
push
jmp
pop
inc
jb
or
mov
inc
pop
out
imul
ljmp
or
add
test
lods
mov
jl
and
sbb
push
ret
addr16
aaa
jp
dec
sub
sbb
adc
inc
ljmp
shrl
push
arpl
outsl
arpl
in
jbe
xor
xor
pop
aad
add
outsb
aam
repnz
push
pusha
mov
aam
push
outsb
test
rcll
lcall
and
aas
in
inc
outsl
aam
pop
popa
call
cld
les
cmp
cmp
cmpb
mov
inc
add
adc
pop
pop
ljmp
fidivrl
sbb
loop
mov
dec
dec
sub
aaa
xchg
mov
mov
cli
mov
fmul
inc
ja
sbb
leave
sbb
sbb
data16
and
push
sbb
cli
imul
cwtl
adc
cwtl
sub
jb
out
mov
test
adc
cmp
fstpl
push
or
xor
lcall
sub
add
cmp
shll
outsl
cli
lahf
je
adc
lds
mov
mov
out
int
loope
dec
cmp
add
ret
shrl
pushf
fsubrs
nop
sub
or
and
jnp
add
call
enter
aam
pop
enter
iret
movsb
hlt
xchg
push
mov
out
lds
pushf
or
out
decl
test
hlt
mov
pusha
rclb
sub
fisubs
jge
incl
xchg
adc
ds
push
sbb
stos
jmp
and
loope
or
iret
imul
cmpsl
sub
cs
push
int3
and
fs
cltd
or
imul
lods
add
pop
mov
sbbb
xor
mov
lahf
inc
add
xlat
jno
jp
data16
pop
arpl
pop
mov
xchg
mov
icebp
adc
movsl
inc
cmpsl
je
or
jae
testb
mov
push
lret
popf
int3
out
cltd
imul
rol
sub
push
insl
pop
xchg
and
pushf
repnz
int
hlt
test
pop
adc
lea
cli
sbb
adc
cld
xor
inc
sbb
sti
std
mov
inc
adc
leave
mov
and
pop
in
add
imul
pop
sbb
sub
mov
push
inc
sbb
xchg
lret
xchg
imul
mov
fiadds
repz
out
int3
cmp
add
stos
out
xchg
ficompl
repz
loopne
jnp
cwtl
push
push
cld
lds
in
js
js
scas
inc
aad
pop
jg
leave
jns
subb
adcl
inc
into
xor
faddp
sbb
fimuls
shrl
xchg
sub
adc
adc
iret
stos
mov
ror
mov
sub
pop
bound
and
add
and
mov
stos
dec
cld
and
push
adc
ror
sar
jb
lahf
dec
jb
dec
adc
jns
push
lahf
push
push
push
mov
mov
cwtl
cmp
or
mov
jecxz
pop
cs
jecxz
dec
and
mov
es
mov
lods
inc
and
and
idivl
movsb
aad
sbb
cmpsb
lds
ret
fwait
stos
xor
push
mov
outsl
imul
dec
push
xlat
sub
insb
inc
inc
into
jbe
popf
or
pop
popa
jmp
fcoms
leave
jbe
movsb
addr16
and
cwtl
xor
push
insb
into
pushf
aad
pop
rcl
subl
sbb
sub
add
xor
cmp
ss
push
sti
cltd
mov
cmp
inc
bound
js
sahf
jmp
sti
pop
ficoms
movsl
movsl
pop
mov
insb
cmpsl
shr
jle
stos
dec
outsl
data16
enter
cmc
out
aad
out
dec
fsubrl
call
imul
xchg
cmp
lret
shlb
xor
mov
negb
xchg
mul
loope
cmpsb
ret
mov
lock
sub
rclb
sbb
push
inc
jno
loopne
cmp
xchg
mov
xchg
adcb
fbstp
add
inc
cmp
pop
aaa
add
out
push
pop
aad
add
or
pop
cmp
add
scas
add
mov
mov
cmpsl
add
cmc
insl
std
xor
adc
test
lahf
filds
cs
std
lds
jb
mov
sub
sbb
adc
xor
les
and
jl
dec
fsubs
ret
popf
addb
stos
dec
and
sbb
mov
xorl
in
in
jp
jmp
das
inc
pushf
dec
or
js
add
push
adc
or
rcrl
sahf
inc
scas
enter
mov
pop
test
xorl
push
mov
ret
scas
xchg
lods
xchg
int
shrl
aas
fldcw
adc
dec
jle
push
jno
test
xor
rcrb
xchg
out
sub
cwtl
sbb
mov
push
dec
stc
xchg
mov
cmp
mov
and
fisttpl
inc
pusha
mov
sub
rol
pop
mov
inc
arpl
clc
nop
sbb
shl
aas
mov
sarl
inc
lcall
jecxz
test
jno
sti
dec
fistpll
mov
outsl
inc
lea
shlb
addr16
xlat
add
xchg
add
lock
leave
jle
push
repz
add
cs
xchg
xchg
or
les
push
jecxz
add
aas
mov
mov
fs
push
xlat
lcall
sbb
mov
dec
push
mov
imul
aaa
out
cs
out
inc
sar
sbb
aas
out
push
pushf
test
js
dec
arpl
adc
and
ds
adc
adc
cmp
mov
in
cmp
sbb
cmp
mov
sbb
pop
xchg
notl
mov
xor
pop
jecxz
das
mov
push
push
loopne
xchg
xor
sarl
negb
mov
jl
push
ret
sbb
xchg
hlt
dec
stc
jnp
fidivrl
icebp
hlt
into
xor
mov
push
pop
inc
icebp
or
xchg
jecxz
cwtl
movsl
out
repz
sub
mov
es
add
dec
adc
shll
push
xchg
cmp
movsb
or
xor
or
mov
jg
leave
lahf
addr16
cli
cmpsl
mov
mov
test
push
scas
addb
iret
rclb
xor
xlat
cmc
push
adc
or
mov
mov
cmp
pushf
push
lea
repz
int
add
movsb
or
dec
pop
dec
add
es
imul
arpl
jg
dec
flds
aad
dec
sub
out
out
cmpl
jnp
popf
mov
add
sbb
rorl
insl
arpl
mov
stos
cmc
push
adc
in
mov
push
andl
or
data16
mov
lcall
mov
clc
ret
popa
dec
jns
add
rcll
mov
xchg
or
mov
cld
popa
movsl
imul
gs
and
lahf
mov
int
out
cwtl
cltd
test
mov
pop
mov
inc
mov
je
aas
mov
sub
push
mov
fidivs
shll
loop
notl
or
not
jg
in
mov
sbb
mov
aas
lods
sub
jmp
loope
scas
xor
mov
inc
push
ljmp
inc
xchg
pop
aas
sbb
sub
inc
ret
pop
xchg
jmp
pop
pusha
test
cld
arpl
and
test
pop
in
sub
nop
test
jns
in
push
adc
sub
pop
jo
jne
xchg
sarb
sbb
outsb
push
test
push
mov
fwait
imul
out
jns
push
adc
jecxz
xchg
ret
mov
pop
iret
cmc
aaa
mov
adc
and
cmpsl
shll
mov
cmp
dec
mov
pop
inc
test
negl
and
data16
sti
fdivr
pusha
imul
jnp
mov
cmp
xchg
test
mov
mov
int
xor
scas
pop
scas
imul
out
cld
lods
push
cmp
jle
arpl
pop
mov
loope
in
addl
mov
mov
pop
xchg
pop
ss
dec
das
jmp
ljmp
in
push
gs
rcl
push
into
icebp
jecxz
push
mov
jae
sub
mov
pop
fbld
imul
pand
repnz
aas
inc
jl
xchg
pop
or
or
icebp
pusha
fs
sbb
cmp
or
inc
aas
fidivrs
push
je
xchg
cwtl
movsb
cltd
aaa
dec
or
mov
mov
inc
cltd
or
lret
adc
les
dec
stos
sbb
ret
or
dec
adc
jns
mov
jmp
icebp
out
aas
dec
push
loopne
outsb
mov
ja
sbb
add
pop
ror
inc
sub
pusha
jo
jp
repz
jmp
sub
pop
push
jne
movsl
pushfw
xchg
or
xor
mov
jae
and
jns
mov
gs
mov
xor
call
mov
cltd
and
xchg
jno
int3
jae
and
fcmovb
lret
pop
xchg
and
inc
movsb
cmpsl
inc
mov
xor
dec
sbb
js
stos
std
add
pushf
and
sub
aad
out
repnz
mov
lret
cmp
das
rcl
out
mov
mov
rorl
int3
cmpsb
outsl
lods
loopne
subb
pop
mov
pop
inc
mov
lcall
repz
sbb
xor
push
pop
dec
dec
stc
scas
mov
pop
rorb
sbb
adc
outsl
and
out
mov
sub
repz
jl
adc
jns
push
xorb
mov
mov
in
dec
sti
out
and
ja
movsb
push
sbb
movsb
in
lods
inc
test
xchg
sub
mov
xchg
push
mov
xor
add
inc
or
dec
fsubp
stos
lock
add
fs
aam
jle
adc
sbb
jmp
adc
mov
fdivrs
pop
adc
and
push
pusha
pop
push
insl
cmp
xor
lods
and
add
sbb
xchg
push
add
cmc
repz
push
xchg
test
in
xchg
shlb
lahf
dec
lds
pop
mov
adc
jg
jb
ljmp
int3
and
and
cmpsl
arpl
stc
jmp
fisubrl
jmp
inc
sub
cs
jo
lods
mov
jg
jb
cmp
lahf
mov
add
jg
es
dec
repnz
or
sub
daa
lahf
jmp
mov
jne
dec
stos
and
cltd
cld
xor
int
xlat
gs
jl
hlt
in
mov
leave
cmp
sub
adc
popf
scas
aam
pusha
out
iret
xor
xchg
sub
lea
jb
lods
std
dec
jns
push
and
and
mov
pusha
loope
add
pushf
push
test
shlb
add
dec
cmpb
inc
xor
cmp
es
insl
jecxz
inc
inc
stos
sub
add
out
fidivl
in
push
fsub
gs
ret
jno
int3
lods
ret
ret
cmp
data16
sub
sub
pop
clc
test
add
push
xor
pop
lret
aad
out
jnp
jo
lret
rcrl
mov
mov
and
and
push
mov
stc
sub
sti
cmc
lret
pop
lcall
xchg
push
push
push
push
imul
jne
mov
arpl
pop
add
repz
test
fwait
test
mov
xchg
mov
xchg
negb
movsl
jb
aad
mov
inc
sbb
pushf
ljmp
xchg
jp
or
popf
dec
cld
loopne
fiaddl
mov
test
gs
movsb
idivl
fdivrs
sub
lcall
xlat
aaa
xor
xor
inc
out
fisubs
jp
jge
xor
xor
or
adc
imul
arpl
test
sahf
xchg
pop
jbe
sbb
cmpsl
xor
mov
scas
sahf
sub
outsb
mov
xchg
dec
xor
push
mov
xchg
dec
cmp
lock
cmp
lock
mov
pop
adc
js
ficoml
mov
push
cmp
shll
cmp
inc
dec
jg
cli
test
add
stos
addr16
insb
scas
push
inc
out
sub
push
cmp
movsl
xor
stos
sbb
add
cmp
out
cwtl
mov
mov
jb
push
adc
subl
sub
jmp
test
dec
push
lea
nop
cmovb
mov
leave
aas
push
adc
js
xor
aam
insl
pop
int3
pop
jne
mov
mov
movb
mov
sub
sub
dec
clc
add
and
cltd
xor
pop
lea
adc
xor
lods
jg
sbb
xchg
int3
xor
jae
out
push
jle
je
ds
lret
pop
enter
or
inc
lahf
pop
data16
mov
push
dec
add
xor
data16
call
and
rcrl
iret
out
daa
aam
gs
dec
jns
mov
cmp
cmp
scas
popa
lahf
push
adc
popa
add
arpl
pop
mov
mov
inc
add
mov
lods
mov
cltd
cli
pop
push
and
push
add
or
enter
cmp
push
ret
and
mov
out
arpl
xchg
push
je
clc
lds
inc
push
je
ret
ffreep
cmp
push
jnp
jo
mov
rcr
and
sub
xor
dec
inc
decl
and
xor
dec
roll
xchg
dec
es
pop
lds
fbld
jnp
mov
loopne
and
cmp
scas
sbb
adcb
jmp
sub
stos
jnp
jno
test
jle
les
add
in
sub
jb
cwtl
ja
fidivrs
cs
push
test
xchg
insb
lods
push
movsb
sbb
mov
push
pop
jae
or
cmp
push
add
mov
push
pop
jmp
mov
add
adc
jp
je
mov
lds
fxch
aad
xchg
adc
popf
adc
mov
es
cmp
ret
sbb
fiadds
aad
or
or
cmpl
cmpsl
sub
call
ret
adc
dec
sbb
dec
mov
mov
fisttpl
pop
int
into
pop
push
adc
ret
sub
xchg
sub
fs
xchg
xlat
pop
xlat
scas
data16
mov
fwait
and
pop
add
adcb
in
ret
mov
ljmp
jnp
outsb
arpl
cmp
pop
push
jp
and
mov
pusha
mov
push
mov
cmpb
test
mov
xor
cmp
movsl
add
inc
fs
mov
into
in
aas
push
ret
das
lahf
out
movsb
cs
pxor
or
pop
bound
xchg
hlt
fsubrs
sbb
mov
fsubp
insb
mov
add
les
lcall
lret
adc
dec
ja
popa
or
aas
stc
pop
inc
lahf
mov
mov
adc
mov
sbb
mov
imul
xchg
cld
js
cmpsb
mov
xlat
sarb
cwtl
jb
sbb
scas
es
lcall
in
add
out
jno
and
rorb
mov
test
sub
psubusb
cmp
mov
or
nop
clc
xor
je
pop
push
mov
push
xor
xchg
aaa
sahf
les
pusha
sahf
stos
push
shll
or
out
mov
fnstenv
sbb
dec
push
mov
enter
imul
clc
ja
jae
popfw
mov
sub
rorl
add
test
movsl
add
jge
or
add
or
push
stc
adc
sbb
mov
mov
fisttpll
or
sbb
js
inc
ds
push
inc
jecxz
sbb
rol
inc
in
push
sub
jl
xor
es
sbb
dec
sbb
jae
in
mov
jmp
pop
scas
cmc
popf
lret
leave
cmpsb
pop
xchg
add
cltd
sub
jp
je
call
jne
xor
ljmp
or
enter
mov
dec
push
inc
mov
lea
dec
out
inc
xchg
push
lods
mov
lock
or
sbb
push
aam
mov
cmp
fldt
pop
sahf
mov
xor
gs
jecxz
xchg
scas
inc
in
out
popa
cmpb
out
lret
or
mov
adc
jg
mov
fs
cmpsb
fidivrs
pop
test
xor
dec
dec
sub
inc
popf
into
adc
push
or
pop
hlt
inc
loop
push
sti
mov
je
mov
mov
or
mov
ljmp
arpl
push
mov
and
insl
imull
popl
mov
mov
pop
mov
into
dec
jbe
pusha
xchg
push
add
jns
pushf
xor
jp
out
and
fnstcw
inc
inc
push
lret
xor
test
mov
andb
jo
cmc
iret
cmp
rclb
testl
js
adc
je
push
jne
push
adc
jmp
mov
lock
sahf
inc
cmp
or
nop
adc
cmp
pop
jl
fistpl
fdivrl
leave
je
out
inc
imul
xchg
mov
icebp
cmp
movsb
jge
inc
mov
jae
repz
in
aam
dec
push
mov
aaa
pop
jecxz
jg
mov
aam
sarl
or
leave
lock
js
sbbl
int3
jae
pop
bswap
ja
adc
movsb
push
xchg
out
popf
push
jb
push
jne
fdivrs
loopne
mov
fstps
movsl
in
jl
mov
cmp
mov
fsubs
sbb
sahf
inc
mov
adc
ja
mov
fisubs
sub
lds
xchg
cmc
stc
lret
push
add
jp
add
xchg
xor
test
mov
clc
jecxz
or
iret
jb
xchg
mov
ret
sub
arpl
sbb
jl
neg
or
repnz
xlat
add
xchg
mov
cmpl
dec
sbb
jne
out
mov
pop
mov
pop
mov
outsl
mov
popf
inc
pop
mov
out
xchg
sub
cmp
push
xchg
push
and
sbb
fcomi
jge
pusha
sbb
jmp
dec
data16
inc
adc
popa
addb
inc
call
xchg
cmc
scas
sub
ret
add
push
mov
fwait
aaa
sub
push
sbb
adc
inc
mov
dec
js
fwait
xor
dec
adc
outsb
xchg
test
mov
push
fwait
push
rcrb
ret
mov
fcompl
clc
popf
cmpsl
lret
repz
adc
mov
and
scas
outsl
mov
cmpsb
push
repz
sub
jecxz
scas
sbb
ds
incl
icebp
lods
lret
ds
xchg
bound
cmpsb
shrb
fisubs
jnp
pop
mov
xor
inc
pop
xor
add
dec
outsl
add
xchg
in
pop
gs
mov
xchg
lret
push
ds
lods
cmpsb
outsb
cmpsb
adc
sbb
lds
fstp
jnp
xchg
lahf
cmp
dec
pop
jnp
and
rcrb
scas
outsl
pop
add
stos
mov
test
loope
iret
in
pop
loop
sub
push
sub
std
outsl
sahf
sub
jns
jbe
test
test
dec
out
mov
push
push
out
push
icebp
ss
cli
or
jge
inc
xchg
popf
test
push
aaa
fnsave
int3
push
xor
add
sti
and
mulps
mov
mov
iret
dec
mov
mov
mov
std
xor
test
lods
sbb
shl
dec
lcall
or
test
fs
push
fldl
xor
scas
xchg
nop
aam
shl
ret
xchg
adc
or
inc
outsl
mov
jno
xor
pop
int
push
jle
jb
imull
inc
mov
adc
adc
adc
int
fs
add
fiaddl
jmp
adc
lret
sub
sti
scas
mov
or
sub
add
mov
xchg
fwait
imul
aas
mov
movsb
sti
movsl
ljmp
sbb
and
inc
andb
lcall
nop
jg
jmp
inc
pop
adc
push
jae
inc
mov
in
cmc
sahf
ds
stc
sbb
je
or
ja
xchg
sbb
add
jecxz
adc
mov
mov
cmp
lods
rcrl
stos
mov
sbb
xchg
lcall
mov
icebp
stos
scas
push
test
lret
neg
pop
cmp
cld
mov
push
into
sbb
jbe
cmpsb
mov
add
add
lahf
aam
das
mov
fildl
ljmp
sub
es
fwait
pop
jg
mov
cmp
and
xor
pop
ret
xor
mov
or
mov
xor
mov
or
mov
adc
scas
stos
inc
pop
push
insb
mov
mov
xchg
fmul
cmp
movsb
pop
fidivrs
aad
adc
sbb
sbb
cli
lahf
fbstp
ds
mov
insl
mov
rcl
shll
flds
and
cmpsl
inc
xchg
mov
popa
push
mov
pushf
das
push
sbb
dec
or
jecxz
lret
xor
mov
loope
popf
jg
dec
enter
mov
cli
xchg
jns
fsubl
mov
mov
loopne
xor
xchg
push
mov
mov
test
and
pop
pusha
sbb
and
jl
divb
push
cmpsb
je
and
sub
jo
rorb
pop
shrl
es
idiv
lds
mull
mov
aaa
pusha
add
arpl
mov
jmp
and
stos
dec
addl
jbe
mov
push
mov
mov
or
stos
mov
jge
sub
out
xor
push
lret
sub
sub
or
jmp
pop
mov
jmp
lret
sbb
shrl
mov
nop
add
pop
out
jae
lret
fisubrl
xor
xor
mov
add
mov
loopne
es
pusha
shlb
push
inc
add
mov
adc
inc
repnz
js
cmp
mov
adc
mov
sahf
or
push
cmp
iret
dec
lods
mov
shr
push
lret
pop
xchg
lcall
fbstp
sbb
sub
mov
pop
mov
xchg
mov
int
cmpsb
xchg
push
push
repz
repnz
mov
dec
popa
fs
or
dec
jle
push
lret
jno
cmp
mov
stos
add
jae
mov
fnstenv
cs
faddl
stos
push
cmp
adcb
pop
loop
ror
sub
pop
pop
push
dec
fistpll
and
iret
mov
pop
dec
dec
inc
sub
arpl
out
or
aaa
add
fstpl
out
and
cmp
clc
fxch
andb
xlat
loop
or
dec
daa
adc
jg
sub
jecxz
lds
ljmp
test
push
test
mov
push
pop
mov
xor
addr16
loopne
and
xor
mov
jne
cmp
jg
out
fcomps
fistl
push
pushf
repz
pop
jp
aas
inc
out
cmp
lea
lea
inc
jne
jb
sbb
mov
xchg
adc
push
ds
mov
dec
lcall
les
imul
enter
push
push
sub
mov
mov
sbb
loopne
fmuls
lds
je
cmc
adc
xchg
adcb
ja
bnd
movsb
into
mov
inc
iret
push
sbb
aaa
cs
mov
fiaddl
dec
out
xchg
xor
push
daa
loope
jg
aas
push
jle
mov
push
jno
std
stc
xor
imul
decl
xlat
pop
cmp
les
popl
loope
push
cmpsb
outsl
ljmp
dec
in
les
adc
cmc
lods
or
fbld
out
adc
push
imul
sbb
mov
sti
fmull
mov
into
sub
das
xchg
jne
dec
mov
inc
dec
inc
mov
shl
aad
cmp
lcall
bound
push
add
and
adc
call
xchg
into
xchg
popf
das
adc
imul
test
xor
mov
cmp
jbe
jb
adcb
mov
imul
pop
movsl
loopne
add
mull
xlat
imul
cli
lods
lret
push
sarb
mov
int3
rol
adc
inc
jb
rcrl
xor
or
xor
cli
jb
repz
adc
sbb
xchg
sar
push
hlt
push
shufps
cmp
or
cli
and
mov
ficoms
ds
adc
mov
sarb
insb
jmp
in
xchg
mov
dec
push
ss
sub
test
jae
sahf
call
sub
mov
pop
test
push
add
xlat
inc
int3
mov
mov
mov
or
xorl
mov
pop
push
fisubs
push
ss
adc
fs
mov
enter
dec
xchg
pop
fiaddl
xor
push
adc
outsb
cmp
adc
sbb
aas
push
push
daa
sbbb
ret
xchg
loope
push
mov
mov
add
push
mov
xor
and
aaa
dec
cltd
xchg
leave
push
add
cmp
int3
inc
rclb
lock
lcall
rcll
adc
imul
popf
push
mov
test
data16
jg
ja
data16
mov
imul
aad
push
sub
inc
lea
and
xchg
cmp
and
cmp
roll
pop
out
fisttpll
lea
and
adc
add
popf
inc
xchg
rolb
jmp
xchg
add
jo
dec
test
pop
adc
insl
pop
add
mov
mov
loop
cwtl
test
sub
jle
pop
sbb
pop
pop
xor
fstl
inc
xor
xchg
out
xchg
loope
popa
cli
stc
jp
lds
add
inc
pop
mov
cmp
and
mov
cltd
jae
insl
pop
jo
ja
inc
mov
xor
dec
cli
outsl
sub
test
daa
cld
inc
dec
xchg
pop
inc
xchg
popa
iret
shlb
loop
xchg
inc
mov
mov
xor
hlt
pop
or
dec
or
mov
ds
inc
xor
popf
sahf
fsubl
xor
out
or
aas
outsl
movsl
inc
xchg
sbb
int3
fcomps
loopne
and
mov
lods
dec
stos
repz
inc
test
js
jo
mov
adc
les
les
mov
mov
push
pushf
inc
arpl
adc
jge
mov
arpl
lretw
and
sbb
jb
aad
jle
test
and
aas
mov
shll
ljmp
mov
arpl
inc
adc
dec
test
cmp
xchg
ds
and
jns
fbstp
cmpsb
jae
add
jp
test
enter
rcll
out
or
jp
or
test
push
dec
int3
cmc
daa
xchg
js
jg
push
fdivl
inc
inc
insb
fcomps
popa
out
push
mov
xor
sub
xchg
insb
pop
cmp
sti
sahf
pushf
pop
cmp
fcomps
jecxz
leave
sub
gs
xor
pusha
push
add
add
out
and
daa
js
cwtl
imul
paddd
ss
daa
into
in
sbb
mov
adc
sar
jmp
into
adc
notl
outsb
pop
pusha
sbb
dec
jle
repnz
pop
mov
adcl
or
mov
rolb
cmp
pop
push
lods
jnp
inc
inc
popf
cmp
fbld
dec
int3
lahf
mov
xchg
cmpsb
leave
mov
and
mov
dec
insl
push
scas
adc
repnz
cmp
jl
je
adc
test
mov
push
dec
fstl
cmp
mov
popa
sbb
or
repz
jge
lret
mov
mov
int
cmp
outsb
sarl
sahf
and
cmp
loopne
push
aas
mov
out
arpl
cmp
fldl
dec
outsb
mov
inc
cmc
fistps
push
adc
scas
jl
movsl
or
xchg
es
leave
pop
call
sahf
int3
mov
push
mov
mov
xchg
enter
mov
jge
mov
dec
push
hlt
push
push
test
nop
jb
jl
int
mov
xor
jne
popf
adc
clc
or
leave
xchg
out
scas
cmp
ficompl
pop
pop
loop
mov
les
rol
adc
ljmp
push
pop
push
lret
pusha
inc
pop
das
push
js
rcll
sbb
mov
lret
dec
jae
inc
push
cmp
push
jge
sbb
shr
or
pop
test
int3
pop
adc
xchg
in
out
cmc
loopne
andnps
mov
icebp
or
lahf
sti
lds
scas
cmc
mov
fs
in
inc
pop
jmp
outsb
and
and
push
and
fwait
adc
mov
test
add
cmp
mov
jnp
dec
into
cld
out
test
out
outsl
pop
sbb
setge
xor
dec
push
xchg
sbb
add
inc
cwtl
sub
add
xor
lds
fnsave
sbb
ds
cmc
mov
xlat
mov
add
dec
dec
adc
ja
xchg
cmp
ss
push
add
bswap
push
fcmovb
cmc
jge
mov
jb
loop
jbe
push
mov
pop
loop
sbb
adc
aaa
add
sub
loopne
es
fcoml
mov
add
arpl
push
arpl
push
insb
cmp
adc
or
das
and
dec
dec
and
fldl
mov
and
and
pop
push
nop
cld
mov
pop
sbb
cltd
stc
dec
sahf
lods
stos
out
jecxz
test
movsl
pop
jmp
cmp
fildl
adc
jnp
andb
pop
rcll
inc
ljmp
ret
fiadds
leave
popf
cmpl
das
setp
and
mov
mov
push
mov
xor
scas
movsl
test
loope
fs
pop
xlat
imul
add
mov
xchg
clc
cmp
xchg
movsb
mov
les
addr16
cmp
test
sti
lock
lods
mov
je
add
xchg
in
mov
and
rclb
das
cmovns
and
ds
push
in
mov
jb
xchg
dec
inc
gs
pop
into
imul
pop
subl
shl
subl
add
pop
pop
xchg
out
mov
jmp
enter
jno
adc
xlat
lahf
adc
jno
rcl
mov
lret
mov
es
xchg
push
jns
das
jno
lcall
cmpsb
mov
cmp
inc
in
inc
mov
mov
mov
pop
jl
stos
xchg
jmp
pop
jecxz
add
enter
or
cs
sbb
push
push
jbe
shl
js
push
xchg
inc
adc
mov
sbb
pop
lods
mov
iret
sbb
cmc
cmc
sub
cmpsl
inc
das
dec
sahf
jb
sbb
xchg
inc
or
sub
adcb
aas
push
iret
fs
sti
fmulp
push
mov
xor
push
sahf
test
jbe
out
mov
aas
cli
lods
mov
lret
fisttps
faddl
lcall
or
push
pop
insb
inc
div
push
xor
scas
adc
xor
aas
stc
outsb
sbb
out
jg
pusha
push
movsb
andl
jnp
negl
xor
sbb
nop
jp
cmp
imul
push
mov
adc
dec
fimuls
lahf
adcb
pop
int
add
stos
xchg
js
lods
in
lds
popa
repnz
push
test
cmp
jg
cmp
lods
ret
cmpsb
jbe
inc
fists
inc
aas
pushf
xchg
ficoms
stc
pushf
pop
push
outsb
xchg
rcrl
mov
push
outsl
pushf
sbb
ja
mov
popf
mov
jo
xchg
mov
dec
testl
adc
ljmp
and
ss
jle
movb
mov
repz
and
leave
popa
adc
xchg
loop
xchg
mov
xchg
jae
push
xchg
pusha
jae,pt
dec
jmp
ds
xor
jmp
lret
jns
pop
pop
cmp
mov
lret
inc
loope
shll
pusha
es
inc
mov
xlat
xchg
popf
out
add
inc
push
repz
fsubrl
dec
scas
xchg
pop
jnp
jl
jbe
sbb
xor
icebp
stc
out
int
popa
jbe
cmp
jecxz
aas
ret
setg
jno
jnp
inc
cwtl
iret
jmp
je
popf
xor
xchg
out
push
loop
insl
adc
jno
and
cmp
rcrb
sahf
xchg
fsubl
cltd
mov
cld
test
flds
mov
xchg
mov
and
mov
sub
sbb
shl
repz
lret
cs
cli
cmp
pop
mov
loop
pop
test
mov
cmp
lcall
pop
cmp
sahf
test
cmp
or
sub
add
mov
mov
push
into
call
filds
fxch
sti
mov
js
jno
mov
and
clc
xor
jnp
xor
sub
out
jo
xor
mov
adc
insb
aad
or
pop
stos
imul
test
adc
cmc
push
mov
jmp
outsl
fwait
and
ja
cmp
inc
dec
rorl
lahf
test
fcmovnbe
mov
adc
push
cs
imul
shlb
aam
pushf
mov
fadd
add
sub
adc
lods
dec
jle
pop
or
andb
jnp
xor
lea
js
loope
pusha
sbbb
pop
movd
push
aaa
nop
lods
into
push
add
aaa
cmpl
push
sti
pusha
addr16
xchg
xlat
test
push
test
mov
imul
cmpsl
push
cld
adc
inc
jg
cltd
repz
cmpsb
cmp
push
lcall
lret
inc
sbb
rcr
loop
cltd
push
mov
cmp
push
dec
mov
add
push
inc
lds
dec
sti
test
jp
outsl
mov
cmp
pop
lock
mov
and
jo
inc
cltd
inc
mov
and
xchg
insb
rorl
daa
aas
sarb
inc
xchg
stc
inc
adcb
daa
ss
add
mov
or
xor
je
subb
xor
iret
mov
mov
pop
mov
mov
mov
adc
pop
subl
mov
jnp
or
jno
sub
in
sub
test
inc
mov
std
das
adc
jle
in
ljmp
cmpsl
add
pop
mov
test
enter
mov
sub
fdivr
add
adc
insl
out
sbb
hlt
pop
cmp
ljmp
push
or
adc
adc
out
add
les
xlat
ret
hlt
scas
jmp
lods
movsb
fsubrs
adc
push
push
mov
mov
out
pop
push
jne
sub
sbb
push
dec
aad
into
mov
mov
jne
test
mov
stos
pop
movsb
mov
or
adc
mov
bound
jl
jge
notb
cmp
adc
in
push
mov
daa
test
mov
cmp
test
push
in
lods
int
cld
or
adc
pop
xor
lahf
cmpsl
fstpl
fcomps
xor
adc
mov
ljmp
hlt
test
pop
dec
out
imul
outsl
movb
dec
mov
jp
and
fcoml
imul
cmpsb
xchg
ss
xchg
popf
stos
daa
adcb
ja
push
test
push
cmp
add
dec
push
pusha
inc
pop
dec
mov
bound
test
int3
divb
sbb
insl
and
dec
cmp
or
push
sub
inc
xor
sti
inc
sub
fcoml
cltd
outsb
dec
movsb
les
enter
xorb
mov
jo
xchg
cmp
lock
repz
push
inc
mov
mov
sub
push
enter
push
mov
xor
push
out
lods
sti
dec
push
inc
stc
out
sahf
stos
mov
mov
push
jbe
fisubl
aam
cli
aad
add
jecxz
jae
cmpsl
aaa
hlt
insb
jecxz
pop
fistpll
pop
sub
test
fwait
dec
test
int
mull
push
loopne
mov
mov
push
push
lock
push
sti
shll
fwait
add
push
pushf
cmc
sub
cltd
std
cld
dec
pop
xchg
inc
push
mov
xor
jbe
sbb
xor
lcall
aaa
push
mov
negl
popl
cmp
inc
ffreep
mov
cwtl
sub
push
daa
mov
out
xchg
repz
sahf
test
sbbb
cmpsl
pop
test
out
sub
cmpsl
push
add
xchg
jnp
inc
and
lods
enter
stc
add
movsl
lret
aad
mov
jnp
inc
fadd
out
das
insl
aam
add
xchg
jno
or
fnstenv
mov
nop
add
or
dec
add
mov
or
fidivs
mov
push
sbb
pop
cmc
mov
jns
ljmp
fucom
adc
lret
jno
jne
jno
push
jge
push
jecxz
stos
loopne
adc
add
push
or
cmp
push
xor
mov
sub
adc
iret
ret
iret
idivl
mov
push
jb
push
repz
inc
or
xor
or
adc
jb
sub
inc
idivb
scas
xchg
xchg
imul
lret
lods
mov
movsl
mov
mov
sub
xchg
and
arpl
jl
scas
sbb
push
ds
mov
or
lods
xchg
cltd
add
jge
fdivl
fmuls
loope
inc
sahf
mov
insl
push
xchg
hlt
mov
jne
daa
sarl
mov
adc
cmp
jmp
push
mov
jmp
jb
sub
in
mov
fldenv
xor
push
sub
mov
xchg
adc
imulb
stc
jg
shrb
jne
repnz
dec
mov
movsl
cld
mov
cmp
popf
in
inc
loope
scas
cwtl
lahf
and
and
add
sub
jbe
lahf
mov
cmp
mov
sub
clc
lcall
movsb
jo
mov
fwait
in
fisubrs
movsb
xchg
pop
cld
push
mov
jl
inc
jp
fsubrp
add
sub
push
xchg
aas
xchg
pop
jge
jecxz
cli
aad
in
pop
mov
not
test
cmpsl
xor
pusha
lret
ljmp
xchg
cmpsl
jno
mov
dec
add
in
popa
mov
fwait
mov
push
cmp
inc
adc
sbbb
jae
xor
loopne
call
inc
push
and
pop
mov
shrl
xor
popf
pushf
dec
xor
in
cmp
cmp
movsb
mov
add
inc
ss
sbb
jl
flds
subl
insl
mov
mov
xor
mov
leave
fsubrs
cmp
inc
jnp
leave
scas
dec
mov
aam
mov
insl
add
pop
shlb
cmp
scas
int
test
jge
lret
in
cmpsb
in
loope
dec
in
int3
ljmp
jb
dec
push
fs
ljmp
loop
dec
xchg
bound
out
movsb
push
mov
mov
hlt
test
sbb
movsb
sub
fsub
mov
jle
je
loopne
mov
icebp
cmpsl
out
jne
push
mov
sub
push
mov
push
fnstcw
xchg
ljmp
pop
and
push
or
movsl
fwait
jae
ljmp
xor
dec
pop
or
inc
xchg
scas
dec
cmp
sub
aad
stc
push
dec
dec
iret
or
cli
leave
negb
xchg
incl
cmpsb
test
shr
iret
or
scas
stos
mov
or
mov
push
iret
sbb
inc
and
scas
or
mov
dec
into
and
rclb
pop
pop
lahf
pop
pop
xor
mov
pop
inc
jmp
sbb
add
xchg
inc
in
cld
pop
pusha
mov
pop
je
jne
sbb
add
in
popf
or
sub
xchg
bound
rclb
sbb
roll
cmpb
push
mov
or
not
jne
movsl
inc
adc
mov
dec
lds
sub
pop
pushf
sbb
lcall
lcall
in
testb
fildll
pop
pop
cs
jl
xor
sbb
jno
xchg
testl
jg
xchg
push
movsb
fsubrs
jg
test
fldt
test
ret
scas
or
fs
daa
dec
enter
js
pushf
imul
mov
sub
fstpl
jns
xor
adc
or
test
xor
stos
mov
mov
mov
and
daa
es
push
jnp
subb
cmp
or
pop
sub
mov
pop
xor
adc
adc
inc
xchg
roll
cmp
pop
jecxz
cmp
dec
dec
insl
dec
aad
xorb
stos
push
sbb
flds
lret
dec
ljmp
pushf
push
and
inc
test
mov
aam
movsw
cltd
nop
out
sbb
mov
mov
inc
in
sub
add
negl
mov
pop
xor
repz
ret
lea
popa
aam
lret
das
and
sbb
pop
jle
jae
ret
mov
ficoms
pop
adc
cmpsl
sahf
mulb
rcll
bound
das
shlb
aas
mov
in
hlt
imul
pop
adc
rcr
add
lods
movsb
push
pop
fadds
xchg
gs
xchg
push
outsl
dec
inc
inc
push
clc
sti
adc
add
pop
les
adc
rcll
inc
ljmp
popl
lea
in
mov
sbb
cs
fwait
out
fildl
daa
jecxz,pt
not
adcl
and
jmp
xor
pop
push
in
push
xor
push
pop
testb
rorl
aaa
inc
xchg
aaa
cmp
dec
xlat
fldl
insb
and
repz
fldt
mov
movsl
xchg
out
xchg
ja
push
mov
mov
cmpsl
call
scas
pop
les
xor
mov
leave
shlb
pshufw
pop
push
fidivl
jae
push
lock
adc
or
sub
insl
test
adc
popf
fcmovu
sarb
mov
add
inc
loopne
les
sbb
fcomps
ja
es
je
aam
cwtl
aad
fstps
or
das
rorl
lret
or
xchg
adc
push
add
mov
sub
mov
xchg
inc
ret
daa
test
andb
or
mov
les
adc
int
adc
shll
pusha
or
mov
adc
jbe
mov
movsb
or
mov
mov
insb
sbb
out
inc
mov
scas
pop
test
les
sahf
sbb
jl
mov
mov
loopne
jno
adc
in
lret
or
wrmsr
push
mov
icebp
bts
jp
cs
inc
test
orb
adc
test
inc
mov
inc
dec
out
mov
test
inc
lahf
lret
xchg
test
xor
ljmp
lcall
in
std
jge
repnz
mov
sub
mov
sub
call
in
cmp
test
push
je
add
xchg
push
in
xchg
mov
roll
sbb
shrl
scas
jns
mov
push
xchg
push
jle
out
jl
int
dec
sbb
fwait
mov
loope
inc
aaa
inc
mov
adc
out
sti
cs
loop
xchg
addr16
lods
pusha
jb
xchg
std
sbb
fmull
mov
lcall
mov
fldcw
stos
lahf
sbb
mov
pop
xchg
push
cltd
sbb
pop
or
cmp
scas
push
pop
and
lcall
lahf
push
sub
xchg
add
sbb
aam
add
xor
fldcw
std
push
cwtl
push
mov
mov
pop
and
add
add
notb
push
sahf
movsb
adc
cli
xchg
push
mov
add
jbe
movsb
mov
push
sub
stos
inc
pushf
pop
inc
les
jmp
loop
lds
and
push
fistpl
cmp
sub
inc
xor
mov
cs
sbb
bound
scas
mov
push
jb
movsl
pop
adc
imul
inc
mov
xchg
ret
pop
jns
sub
fucom
pop
and
inc
xchg
movsl
lds
mov
jmp
push
nop
mov
push
nop
sbb
ret
mov
movsb
je
mov
fisubl
mov
cmpsb
cs
iret
pop
mov
push
pop
bound
and
rolb
ret
cmp
or
mov
jno
aaa
fimull
push
stos
xchg
aas
inc
roll
jmp
je
ret
sahf
sahf
dec
and
sbb
je
in
repnz
pop
out
xchg
rcrl
imul
cltd
insb
out
imull
sbb
sub
fcomps
in
lret
dec
pop
clc
sbb
xchg
out
push
push
mov
xchg
cmp
mov
sbb
mov
out
dec
movsb
mov
inc
loop
push
outsl
add
add
mov
xor
mov
and
out
jmp
sub
mov
or
mov
outsl
dec
dec
dec
loop
cs
adc
int
push
leave
ud0
inc
lret
mov
lods
pop
les
and
and
mov
movsb
push
out
jns
jo
xchg
mov
mov
mov
xor
jp
fdivs
xchg
fnstsw
iret
or
outsl
daa
roll
fwait
mov
sbb
out
sub
cmpsb
mov
pusha
daa
notl
pop
dec
xchg
xchg
icebp
pop
cmpsl
mov
sub
xchg
jle
inc
cmp
pop
inc
xchg
imul
sub
mov
mov
mov
shlb
sbbl
insb
stc
jge
out
xor
mov
lahf
test
adc
nop
adc
in
pop
mov
fisubrs
jmp
mov
fmuls
sbb
jno
cwtl
push
pop
fnsave
stos
mov
adc
into
clc
xor
pop
ja
sbb
inc
xor
scas
dec
shlb
adc
das
mov
xchg
or
push
sbb
inc
xlat
push
sub
data16
xor
fldt
and
pop
sub
sub
jne
mov
jno
adc
in
cltd
es
sbb
mov
mov
popa
repnz
inc
add
in
jg,pn
pop
andb
mov
sti
jge
fisttpll
cs
sahf
jnp
out
mov
movsl
sbb
pop
imul
pop
mov
scas
jns
fldl
lock
sub
mov
pop
xor
nop
cli
movsl
push
xor
xor
xor
dec
push
inc
xor
xor
xor
push
xchg
fsin
mov
ljmp
mov
jle
insl
jge
pop
out
aaa
push
sub
push
jns
push
bnd
loop
repnz
cli
les
xor
int3
leave
or
mov
dec
stc
pop
sub
push
mov
dec
xor
mov
vmwrite
testl
in
insl
dec
dec
inc
add
fimuls
mov
push
test
das
mov
dec
loopne
jge
push
mov
cmc
aam
bound
nop
lret
and
mov
scas
imul
mov
add
sub
lcall
xchg
pop
and
push
mov
cmp
sbb
jp
pop
lea
imul
sbb
xchg
dec
push
test
pop
insl
mov
mov
into
fwait
mov
sbb
dec
mov
sbb
mov
adc
push
lea
mov
sbb
in
inc
movsb
mov
or
sub
int
xchg
cli
es
insl
push
sbb
out
leave
lea
cli
mov
ds
jl
rclb
fcomps
in
int
rclb
out
add
xor
loopne
enter
loopne
stos
ret
lods
clc
sub
aad
or
sub
dec
mov
sbb
fidivl
pusha
xchg
jno
in
addr16
xchg
or
and
or
jg
add
ficomps
sbb
cli
push
cmp
jecxz
cmpsb
dec
movsl
adc
inc
scas
or
outsl
cmp
cmp
sti
sbb
xchg
sbb
pop
loope
cmp
cmpsb
test
clc
icebp
sub
pop
jge
addr16
je
lods
dec
pushf
in
shl
outsl
jle
andb
ret
xchg
je
sub
lcall
fsubrs
mov
xor
dec
adc
mov
or
rcl
fdivr
add
sbb
lret
ss
sub
pop
loope
ja
out
cld
cmp
mov
add
xchg
mov
dec
mov
xchg
cmp
inc
or
jbe
iret
call
fs
or
push
xchg
insb
jle
mov
idivl
shrl
push
loop
adc
xor
mov
orb
mov
out
xchg
sub
test
and
push
das
mov
xchg
popa
inc
inc
mul
hlt
mov
xlat
mov
jne
in
push
stc
push
or
sbbb
and
sarb
fnstenv
js
adc
loope
iret
inc
ret
add
cmp
cmp
popa
xchg
sbb
aaa
inc
outsl
in
mov
or
push
pop
inc
adcb
dec
jecxz
push
add
data16
jo
adc
daa
sbb
lcall
dec
pop
lock
xchg
dec
stc
js
fadd
outsb
jo
stos
push
adc
call
jae
xor
sbb
shrl
xor
fsubrl
ret
cmp
add
xor
or
lret
mov
adcl
xchg
dec
fwait
pop
jge
loop
push
int3
pmulhw
adc
pop
mov
dec
pop
jmp
shll
jg
and
aam
mov
pop
add
add
addr16
sbb
jns
arpl
out
fcoml
pop
pop
xchg
mov
add
in
jne
sub
and
das
mov
fimuls
and
pop
imul
dec
out
es
pop
pop
push
in
les
sub
lods
outsb
xchg
inc
xchg
insl
pop
jne
inc
mov
insl
push
insb
andl
mov
sub
add
negb
mov
hlt
jl
push
and
inc
sbb
or
and
nop
repz
xor
xchg
mov
or
dec
jne
sub
mov
movsl
cmc
test
divl
add
call
mov
xlat
jle
push
jo
cld
cmp
jo
jp
push
frstor
mov
icebp
jb
cmp
imul
int
ljmp
cmp
xchg
lods
in
inc
sbb
xor
xchg
daa
push
cmp
adc
adc
and
mov
popf
pop
push
dec
mov
aaa
lock
push
out
lea
add
push
test
pushf
inc
int3
mov
cmp
pop
test
mov
dec
dec
xor
and
jle
lret
mov
push
daa
or
sub
std
loope
loopne
enter
in
mov
pop
fisubrl
jne
imul
or
ss
insl
push
and
fsubl
jo
fs
jp
ljmp
ljmp
mov
xor
sbb
bound
pop
outsl
mov
jne
aaa
out
pop
sub
sub
sarl
push
imul
test
pop
daa
pop
fldcw
cmp
mov
adc
in
mov
rcl
cmpl
sub
addr16
and
ret
push
mov
xchg
and
xor
xchg
pop
aam
xchg
push
movsl
lahf
mov
xchg
mov
fcoml
add
push
mov
or
je
pop
or
movsb
repz
jns
fistpll
mov
outsl
jmp
mov
or
inc
sbb
cmc
pop
andb
shr
fldt
push
xorl
loopne
mov
subl
cmp
sbb
push
aas
hlt
xchg
mov
nop
mov
inc
enter
andb
mov
inc
push
xor
mov
addr16
push
pop
das
addl
imul
ds
lahf
mov
ret
inc
dec
pop
sbb
jmp
push
cmc
jle
and
loopne
jl
fildl
sahf
push
pop
xchg
xor
xlat
dec
repz
mov
ljmp
inc
xor
fisubl
xchg
xor
xor
dec
aas
xor
aaa
mov
jbe
jecxz
xchg
cld
xchg
jg
mov
ret
adc
sahf
insl
dec
sahf
test
cmp
push
inc
xchg
sbb
cmp
mov
mov
shrb
pop
xchg
inc
fdivs
mov
hlt
pop
test
stos
pop
and
dec
inc
mov
in
mov
mov
sbb
aas
push
icebp
dec
scas
jne
xchg
and
mov
mov
cld
loope
or
pop
jg
mov
fimuls
cli
je
aas
lret
pop
sub
adc
ficomps
enter
pop
dec
fdivrl
mov
je
jno
jecxz
aaa
stc
and
cmp
push
mov
int
xor
push
ss
xor
mov
in
jmp
fsts
cmpsb
icebp
arpl
hlt
mov
popa
add
xor
clc
icebp
jb
jl
add
inc
xchg
xor
pop
pop
mov
pop
cmp
out
into
scas
cmp
test
add
push
dec
adc
inc
cld
lcall
rolb
xchg
out
xchg
shrb
pop
out
outsb
sub
outsb
jl
xor
add
in
jge
mov
mov
int3
or
jg
popa
std
or
addl
hlt
sub
sbb
and
push
push
mov
sar
andl
shr
jp
rorb
out
test
clc
mov
popa
fstpt
xchg
loop
sahf
add
incl
cmp
mov
mov
dec
adc
cmpsb
cmc
mov
sbb
pushf
andb
jno
cmp
test
notl
enter
mulb
xor
decl
jle
pop
xchg
lret
mov
fstpl
jp
js
xchg
fxch
es
and
pop
pop
sahf
or
add
pop
sub
stos
fistpl
icebp
xchg
mov
into
aas
adc
cmp
pop
push
sarl
cmc
test
ss
xlat
pop
testb
sub
arpl
xchg
lea
ffree
pop
push
pop
out
and
jmp
movsb
fnstenv
add
adc
mov
mov
pop
sbb
push
add
fcompl
inc
popf
subl
mov
in
mov
mov
aad
or
out
add
scas
add
pop
mov
fistps
push
mov
movsb
js
xlat
push
lahf
xor
push
icebp
jl
cmovne
mov
jbe
mov
loopne
dec
sbb
jl
inc
andl
gs
push
cmpsb
pop
out
push
pop
jl
sub
cmpb
hlt
cwtl
clc
push
cltd
cmp
pop
gs
negb
rcr
cld
push
push
xor
pop
iret
pop
shlb
mov
add
mov
cwtl
in
nop
mov
xchg
sbb
imul
pop
add
lods
mov
xor
test
repz
or
cmpsb
cmp
sub
imul
jg
inc
dec
neg
add
pop
bound
jbe
push
inc
hlt
jae
dec
jg
arpl
pop
xchg
adc
add
loope
push
cmpsb
and
lods
mov
pop
push
cmpl
stos
cmpsb
jnp
ret
inc
xchg
cltd
mov
mov
add
jo
orb
add
or
mov
les
mov
enter
mov
add
fucomp
sarl
mov
or
jb
mov
jo
lret
mov
add
aad
push
pop
test
sahf
cld
adc
and
inc
pcmpgtw
and
cmp
add
lret
or
fcmovnb
or
push
cs
fisubs
iret
ret
xchg
push
sahf
xchg
test
nop
pop
addr16
dec
popf
lock
inc
pop
popf
cmp
sbb
fstpl
test
cmp
pop
jnp
mov
mov
packssdw
adc
stos
out
cmp
xchg
sarl
or
xor
lods
cwtl
inc
lcall
outsb
mov
pop
xchg
inc
sub
mov
dec
mov
xor
movsb
shlb
out
fsubrl
sub
loopne
xor
lock
add
popa
or
cmp
or
pop
stc
inc
out
loopne
inc
push
mov
pop
or
pop
popa
loop
xor
in
pop
pop
bound
ljmp
les
dec
insl
dec
mov
sti
mov
push
cmp
mov
pop
test
inc
ficomps
dec
pop
inc
push
sub
iret
dec
and
jp
ss
mov
ret
stos
xchg
or
imul
in
inc
fs
push
push
mov
test
loop
not
sub
sub
mov
jge
push
xor
daa
pop
in
fmul
mov
cmpsb
les
mov
in
cwtl
cli
aad
adc
sbb
push
mov
xchg
sub
inc
out
adc
fstpl
scas
test
add
jge
cltd
jae
jle
inc
fisttpl
aad
sub
adc
add
jmp
inc
adc
fwait
add
scas
dec
imul
pop
adc
fmull
add
icebp
mov
pop
jg
mov
mov
test
mov
out
arpl
fwait
sub
in
fidivl
jne
mov
push
rcl
push
fcoml
in
xchg
inc
jno
sbb
js
scas
fsubs
cmp
stc
mov
jo
in
pusha
pop
sbb
rep
xchg
pop
daa
xor
fsubrs
cmpsl
jecxz
and
inc
and
sahf
aas
ret
cli
aas
into
inc
cmp
mov
push
aas
lock
fidivrs
push
jg
sbb
jmp
pop
das
jbe
popa
mov
stos
xchg
insl
out
stos
dec
sbb
lahf
in
mov
imul
jle
rcl
mov
clc
adc
bound
mov
cmp
or
outsl
sbb
inc
inc
out
cwtl
sbb
ds
push
lea
xor
daa
pop
into
add
cmpsl
fsubrs
stos
loopne
test
out
lds
mov
jns
dec
insb
xor
sbbb
mov
imul
xchg
clc
cmp
push
sbb
add
bound
or
clc
mov
lea
lods
imul
fidivl
stos
adc
mulb
mov
mov
int3
push
jmp
lret
cmc
sub
cmp
adc
clc
lret
mov
out
mov
rolb
pushf
mov
xlat
xchg
lret
xor
cmpsl
sbb
dec
mov
pop
in
xchg
sub
lahf
mov
iret
sbb
add
fildll
mov
repz
aam
testl
mov
mov
out
mov
push
lds
fimull
aam
call
fiadds
in
or
mov
xlat
mov
insl
test
inc
push
push
and
shlb
lods
lcall
test
pop
push
pop
push
push
dec
or
cmp
jb
dec
adc
js
and
dec
and
loopne
xchg
sbb
pushf
jle
jge
imul
test
xor
clc
in
aam
pop
jne
push
out
sbb
dec
sar
bound
aam
out
mov
loopne
xor
sbb
scas
mov
cmp
lret
scas
mov
dec
rcll
and
and
inc
dec
dec
push
mov
and
out
cmpsl
flds
jmp
add
xchg
mov
dec
push
adc
lahf
lock
pop
into
jns
mov
sbb
imull
mov
jmp
add
xor
mov
pop
add
insl
push
pop
jp
pusha
mov
mov
in
pop
into
cmpsb
push
bound
cmpsb
or
mov
dec
mov
roll
cs
movsl
mull
pushl
push
push
jnp
sti
fstps
inc
loop
gs
out
in
cmp
cld
dec
movb
ss
pop
repz
push
ljmp
pop
jo
stos
inc
and
add
add
sarl
loopne
pop
sarb
or
push
out
inc
fimuls
cwtl
sahf
push
fcmovnb
mov
scas
and
fldl2e
dec
out
cld
jle
xchg
jo
aad
shr
dec
in
outsb
stos
mov
aaa
xor
nop
xorb
inc
test
adc
xchg
cmp
loop
data16
repz
mov
out
in
pushl
ss
or
mov
add
cmpsb
mov
inc
add
ret
pusha
nop
sti
sub
mov
jg
aam
sarl
push
sbb
mov
mov
mov
pop
push
and
pop
pushl
shlb
mov
in
loope
mov
icebp
repz
roll
xor
mov
das
stc
sbb
mov
call
pop
adc
mov
rolb
pop
mov
dec
xchg
dec
inc
cmc
out
sarb
mov
mov
mov
fcmovnb
pusha
outsl
xlat
fs
sahf
jno
sub
lods
xlat
sahf
push
mov
mov
testl
mov
pop
push
cld
sbb
mov
add
les
ret
add
jecxz
pop
in
stos
fidivs
shll
fidivrl
cmpsl
jecxz
rcrl
add
call
inc
push
mov
xchg
xor
imul
mov
adc
jecxz
dec
imul
addr16
shl
aam
in
mov
push
out
cmc
cmpsl
xchg
dec
mov
pop
dec
adc
add
xor
ljmp
pop
sub
mov
outsl
ds
cmpsl
adc
add
movsb
lock
ljmp
mov
rorl
fistl
aas
push
pop
outsb
pop
movsl
gs
or
add
jne
push
or
test
movsb
test
pushl
je
jns
adc
sub
jmp
adc
clc
out
bound
out
adc
xor
cltd
jg
add
mov
popa
scas
cmp
orb
ss
cmp
mov
adcb
pop
imul
mov
mov
cmp
xlat
es
adc
or
outsl
mov
push
test
dec
into
stos
push
aad
mov
xchg
cmp
dec
sub
pop
loope
and
mov
sub
outsl
out
or
sbb
fsubrs
test
insl
sarb
je
or
shl
pop
aad
jg
fcmovnbe
repz
psubsb
in
cmc
dec
imul
xchg
mov
sub
cmp
xchg
and
xor
adc
lret
jnp
mov
mov
nop
sbb
insb
sbb
mov
lds
lds
add
pop
outsb
push
enter
mov
mov
lods
xor
xchg
dec
pushf
test
mov
out
pop
fwait
push
dec
mov
inc
insl
std
lahf
fstps
inc
sub
data16
popf
mov
outsl
mov
sbb
xlat
pop
test
les
fstpl
sub
mov
sbb
cmp
shrb
setbe
lcall
int
add
je
xacquire
je
fcmovnu
add
loope
sbb
xchg
int
push
adc
push
neg
cmp
dec
ficoml
in
dec
das
xor
cmpsb
mov
test
push
mov
sub
bound
stos
cmc
jno
leave
aam
addl
push
mov
mov
inc
aas
orl
xchg
addr16
mov
jmp
adc
cmp
cmc
dec
push
xchg
cmp
push
lods
mov
addr16
sbb
jecxz
out
and
dec
jbe
push
jno
xor
jae
sub
jge
stc
fists
jb
call
cmp
pop
jne
int
scas
inc
and
jbe
fcmovnu
in
add
dec
popa
leave
xchg
push
mov
mov
dec
test
int
dec
inc
xor
push
add
icebp
dec
aas
inc
jns
adc
jle
push
out
adc
stos
lock
aam
mov
cmpsl
mov
mov
xchg
fldcw
dec
es
or
pop
push
js
sub
push
xchg
cld
sbb
mov
clc
daa
out
xchg
xchg
out
xor
push
mov
jmp
das
test
sbb
sar
sub
sub
mov
out
jb
push
cmp
or
add
mov
ret
or
xor
mov
inc
outsl
stos
xor
mov
sar
dec
outsb
gs
mov
push
mov
es
ja
dec
inc
imull
mov
sub
sahf
lds
xor
scas
pop
xchg
aaa
lods
hlt
fimuls
call
jne
mov
mov
dec
lds
pop
pop
mov
jno
xor
mov
decl
push
push
mov
out
xlat
pop
scas
sbbb
shl
test
pop
shlb
lret
movsb
jbe
inc
inc
dec
call
adc
pop
iret
bound
roll
pop
inc
lahf
std
outsl
pop
rcrb
cmc
adc
ret
xchg
aam
and
pop
movsl
mov
xor
jne
mov
imul
pop
push
xor
outsb
out
cmp
cmp
and
jecxz
std
and
loop
adc
das
add
outsb
loop
add
fs
and
loope
jbe
negb
fnsave
cs
sub
outsb
mov
inc
sbb
sbb
push
icebp
lock
pushf
cmp
ljmp
cmp
pop
jae
xlat
dec
jbe
cmp
movsl
mov
or
xor
inc
lcall
mov
popf
sub
jge
cld
add
movsl
pop
aaa
sub
fldl
cwtl
out
or
cli
dec
pop
stc
xchg
adc
repz
jbe
scas
push
cwtl
or
mov
and
ss
jge
mov
push
notb
test
xor
imul
mov
int3
enter
in
pop
ljmp
in
stc
hlt
test
sbb
mov
or
out
lock
push
subl
or
cmpsl
add
outsl
and
dec
movsl
pop
lods
ds
or
lds
inc
lock
not
dec
mov
out
out
aas
pop
mov
push
pushf
and
subb
xchg
xor
jbe
mov
js
aad
push
mov
fdiv
sbb
pop
cmpsb
mov
adc
fcmove
lds
and
xor
push
add
sub
repnz
inc
pop
xor
cmp
dec
mov
jbe
out
lret
es
adc
jns
fwait
adc
sub
adc
cli
ret
fadds
jb
lret
adc
std
mov
dec
pusha
pop
out
pushaw
dec
incl
test
arpl
add
adc
pop
out
in
out
add
inc
and
insl
sub
aas
les
inc
push
pop
add
inc
out
lock
lret
aam
ljmp
inc
shll
lods
cltd
rcr
bswap
out
pcmpeqb
fistps
sbb
psraw
mov
jns
stos
movsb
mov
fwait
cli
std
mov
xchg
out
push
cmpsl
cmpsl
mov
pop
daa
mov
insl
fimuls
call
xchg
inc
xchg
in
or
scas
outsl
cmc
test
jp
imul
imul
jno
rcll
push
jl
pop
mov
nop
and
add
pop
insl
mov
and
adc
imul
jge
add
movsl
aas
fisubrs
lea
inc
cmp
loopne
jmp
cmp
jmp
mov
push
push
fisubrs
inc
lds
mov
fstpt
jmp
and
mov
lret
bound
andb
cmp
mov
xchg
addl
mov
fsub
into
lahf
jb
call
in
push
add
mov
rcll
mov
out
pop
jo
je
and
cmp
mov
fistl
sub
movb
pusha
out
movsb
mov
int3
mov
test
mov
mulb
inc
pushf
xchg
inc
mov
imulb
sahf
and
jp
adc
adc
movsl
push
mov
in
add
jae
nop
pusha
add
jmp
mov
xlat
jecxz
loop
add
std
stc
dec
fisubrl
insl
clc
or
and
xchg
pushf
insb
jbe
dec
cs
push
scas
adc
nop
pop
das
lods
inc
pop
rolb
pop
insl
in
adc
imul
mov
jnp
adc
test
lret
addr16
addr16
cld
sbb
fists
mov
or
jns
inc
and
ss
cmpsb
inc
jns
enter
push
jecxz
push
cmc
adc
test
in
dec
adc
mov
ja
sub
test
cld
aam
out
insl
mov
cmp
lea
mov
mov
pop
mov
std
cmpsl
mov
in
sub
xor
mov
fcoms
mov
jnp
mov
inc
or
in
movsl
cli
or
in
mov
cwtl
out
into
aam
xchg
imul
pop
icebp
jmp
loope
add
mov
je
lcall
pop
push
or
cmp
inc
test
or
fildll
push
out
push
jnp
test
cli
aaa
pop
sbb
cs
daa
mov
sub
mov
sbb
mov
das
scas
lds
sub
mov
fnstcw
add
call
xor
iret
xchg
adc
mov
push
clc
mov
mov
pop
loope
xor
sub
ljmp
lock
jns
inc
sbb
sbb
push
jno
ja
dec
dec
jne
fcoms
sub
mov
sahf
pop
lahf
mov
add
jecxz
pusha
lods
add
pop
and
sub
lock
jno
fldl
lds
repnz
scas
jbe
push
mov
sbb
xchg
push
and
fisubrl
testl
push
fwait
insb
pop
mov
adc
das
subb
leave
outsb
add
add
jae
lret
sbbb
jge
jne
icebp
and
mov
inc
mov
xor
jbe
outsb
lret
pop
mov
outsl
fstpl
and
sub
mov
gs
xchg
icebp
inc
jmp
jecxz
cmp
es
hlt
test
fistpl
sub
mov
test
cmp
cmp
adc
shll
mov
adc
js
and
xchg
mov
xchg
push
ja
clc
lret
xchg
iret
into
leave
lock
fucomp
inc
bound
push
jp
fwait
insl
ret
sub
dec
fsubrs
inc
push
sub
lods
cld
jp
das
xchg
stos
xchg
jo
push
sbb
outsl
push
jne
enter
out
inc
pop
xor
inc
sbb
popf
mov
mov
cmp
fisttpl
xor
pop
sahf
mov
std
pop
push
pusha
jmp
pop
pop
cwtl
cli
ret
shrd
inc
insl
sbb
mov
hlt
int
push
xchg
jp
mov
out
jb
pop
arpl
outsb
addr16
negb
rolb
popa
mov
push
cli
push
in
pop
sub
cld
int
pop
rolb
add
cs
shll
jno
movsl
lea
movsl
out
mov
pop
xchg
inc
mov
daa
sub
mov
iret
cmp
mulb
xchg
adc
push
in
xchg
in
mov
int3
adc
mov
mov
cmp
test
mov
push
in
ret
mov
xchg
push
jo
fwait
icebp
lock
lahf
pop
add
xor
jno
sub
int3
loopne
dec
fidivs
mov
lock
adc
pop
xchg
jl
neg
push
xor
mov
fimull
fisttpll
clc
pop
mov
jle
mov
sub
and
push
mov
pop
mov
outsb
loop
scas
jg
and
pop
and
mov
lret
lret
data16
xor
jp
push
inc
or
mov
xchg
xchg
push
and
inc
out
xor
xor
adc
xchg
pushf
push
stos
push
sub
repnz
jnp
stos
out
loopne
and
cmp
nop
jb
mov
lret
out
arpl
pop
and
insl
xchg
jmp
add
mov
lret
jae
pusha
inc
les
lods
pop
jnp
xchg
fildl
jno
adc
sbb
sub
cli
pop
sub
mov
cmp
adc
xor
or
add
imul
outsb
sub
test
pop
ret
xor
and
pop
adc
mov
xor
bound
inc
or
cmp
scas
dec
cmpsb
fs
mov
mov
xchg
repnz
jne
pmuludq
dec
and
mov
and
mov
nop
xchg
jns
cli
lret
jo
cmpsb
es
mul
clc
mov
sahf
xchg
ljmp
mov
pushf
lcall
sbb
mov
repnz
leave
sarl
test
dec
inc
iret
sti
cmp
ljmp
mov
xor
cmp
daa
cltd
and
fdivs
push
cld
sub
mov
push
and
sub
aam
jmp
int
je
sbb
xor
jb
and
inc
sub
imul
addb
dec
mov
sub
mov
fcmovbe
push
popa
imul
push
bound
mov
cs
push
mov
clc
cmpl
cmp
mov
push
lods
aam
inc
mov
mov
and
aaa
mov
mov
popa
aaa
pop
mov
push
push
cs
std
mov
inc
imul
adc
inc
and
inc
je
push
andb
movsb
pop
pop
or
mov
push
sub
fcoms
fnstcw
add
pop
jp
sbb
pop
lds
data16
insb
repz
ffreep
mov
mov
notb
mov
sub
jp
stos
or
lds
jne
push
lcall
and
jp
dec
mov
mov
out
data16
or
jge
shlb
popa
xor
loopne
pop
and
mov
push
in
scas
notl
inc
dec
mov
out
cmp
xchg
lret
lcall
arpl
mov
addl
fsubrl
lods
sbb
sbb
or
inc
roll
pusha
test
xchg
scas
mov
pop
mov
mov
loopne
mov
pop
and
stos
mull
nop
ficoml
xlat
or
aad
sub
or
mov
stc
mov
xchg
cli
out
mov
mov
mov
cwtl
push
cmc
sub
jle
pop
push
fs
ja
mov
mov
sub
aaa
push
in
xchg
adc
mov
and
dec
loopne
cmp
rcl
fcoms
scas
push
mov
sub
lahf
pop
push
pop
jle
ja
mov
arpl
push
lods
pushf
incb
xor
mov
push
mov
sub
inc
adc
mov
and
inc
loope
mov
in
dec
or
outsl
push
jg
xor
cwtl
subl
mov
sub
in
lds
xor
pop
sbb
dec
mov
jl
dec
loope
xchg
test
rcr
ja
aam
mov
inc
lret
dec
popf
inc
push
hlt
cld
pop
dec
jl
sbb
cmp
push
mov
inc
pop
mov
xchg
adc
cmpsl
add
pop
test
mov
fsts
add
and
aas
adc
loop
loopne
repz
pop
mov
data16
cli
inc
push
test
mov
push
aaa
sbb
dec
cld
xchg
adc
scas
sahf
push
mov
ret
inc
xchg
xchg
lret
sti
lock
test
movsb
push
repz
aad
xor
mov
in
and
sbb
aad
or
roll
ja
push
ja
sbb
xlat
mov
mov
aas
mov
shlb
jns
pop
mov
into
pop
test
push
push
fists
push
xchg
push
insb
fbstp
or
repnz
jae
dec
xchg
sub
lods
or
mov
or
mov
push
and
cli
or
pop
cmp
lcall
out
je
mov
sti
dec
es
sub
lock
mov
pushf
adc
fisubrl
hlt
test
ret
adc
rcr
pop
jle
fiadds
and
and
fisttpl
mov
cmp
loop
and
push
pop
mov
movsl
ret
popf
sarb
lea
lret
loop
sbb
cwtl
aas
idivl
xlat
call
movsb
cwtl
iret
mov
push
push
xchg
push
mov
mov
mov
lahf
dec
inc
andl
jae
add
push
xorl
sbb
cmp
test
cltd
mov
mov
mov
inc
out
test
insl
push
pop
add
jmp
pop
sbb
sbb
dec
pop
mov
pop
dec
add
out
out
jle
loop
fwait
jp
sub
movsl
mov
stc
pop
jl
mov
inc
popf
and
enter
fidivs
jg,pt
movsl
xor
aam
fldl
shrl
int
test
insl
data16
orb
and
xor
jo
leave
je
cwtl
dec
inc
jle
xchg
test
add
mov
lods
cmp
movsb
cmp
fmul
cmpsb
push
in
sbb
sub
repz
ljmp
add
js
mov
or
cmp
rcll
cmp
cld
pop
fstl
stos
mov
xor
repnz
enter
xchg
inc
into
sti
mov
and
push
push
test
lock
mov
push
xchg
xor
push
sub
pop
push
xchg
outsl
addb
lcall
pop
adc
mulb
mov
mov
mov
imul
test
mov
stc
inc
jmp
lods
fistpl
and
lret
inc
rcll
es
mov
out
mov
cmp
add
inc
adc
push
notb
dec
aam
rorb
inc
dec
pop
roll
jmp
or
jmp
stc
int
or
roll
lds
jnp
xlat
inc
dec
mov
push
push
movsb
aad
mov
xchg
daa
and
sbb
pop
adc
pop
scas
sbb
imul
fstps
aaa
les
fwait
mov
cs
inc
pop
adc
mov
jo
pop
dec
pop
cli
cmp
mov
lret
push
push
arpl
mov
push
subb
in
lock
stc
inc
subl
out
jbe
xchg
out
testl
cmp
adc
jns
inc
stos
jnp
dec
sbb
dec
hlt
push
dec
sbb
xor
in
sub
mov
mov
push
xchg
mov
or
imul
pushf
mov
adc
outsl
enter
hlt
lods
mov
pop
and
inc
jle
mov
out
popa
cmc
mov
or
sub
imul
pop
rcrl
pop
lcall
rcll
cwtl
loopne
mov
mov
stos
in
mov
dec
repz
scas
lahf
cmp
inc
pop
aas
mov
add
xchg
inc
ja
sub
cmp
jo
push
lahf
mov
xchg
cmp
ds
jae
pop
fwait
xor
mov
in
add
dec
sub
popf
call
stos
sub
jb
fisttps
sub
cwtl
fbstp
adc
mov
shrb
cltd
dec
test
test
xchg
pop
in
scas
lock
sbb
ljmp
out
or
pop
pop
push
cmp
pop
shr
or
cmp
jb
imul
dec
jge
inc
repz
dec
cmp
jns
sub
cmp
sbb
testl
inc
dec
rcrl
sub
add
jns
push
adc
inc
fdivp
test
hlt
clc
int3
jnp
test
lahf
adc
fwait
jo
imull
sahf
dec
es
push
mov
das
mov
aad
aas
lods
repz
dec
jns
dec
stos
ret
scas
lods
mov
adc
push
xchg
add
cli
fs
mov
adc
add
out
mov
filds
adc
inc
ds
fdivl
mov
or
in
push
inc
popf
pop
xchg
test
fldl
aad
pop
jns
cmp
jge
pop
sub
add
addr16
cltd
sub
cmp
jae
arpl
addr16
jbe
push
mov
rorb
in
and
ret
nop
dec
inc
dec
fldl
icebp
mov
jmp
add
sbb
out
jg
pop
insl
rcll
mov
cld
outsl
lret
mov
incb
mov
and
jg
mov
movq
cltd
push
fildl
push
sub
jecxz
push
imul
pop
test
mov
rclb
cmp
pop
cld
push
enter
rclb
arpl
adcb
xchg
mov
ret
cld
fists
fsubl
cltd
mov
push
add
leave
lods
test
xchg
ss
test
cmc
fistpl
in
jae
mov
out
cltd
dec
and
lahf
dec
in
mov
add
xor
popf
ljmp
or
es
cld
out
or
adc
insl
gs
dec
push
das
dec
aad
stos
sahf
pusha
out
push
jnp
mov
shlb
in
jnp
ja
sub
stos
andb
popa
in
out
xor
pusha
push
fnstenv
sub
xchg
jp
mov
clc
flds
sbb
fists
bound
xor
cmp
pushf
inc
sbb
or
jmp
pop
jl
in
ja
fisttps
loope
in
jle
jo
daa
dec
pop
adc
sbb
cmc
xlat
and
cmp
aam
pop
sub
cmc
dec
xchg
sahf
ret
scas
jecxz
test
cmpsl
sub
dec
cmp
sbb
inc
cmp
mov
pop
mov
sub
out
call
mov
mov
aaa
and
mov
pusha
mov
insb
push
push
sub
xor
cs
add
mov
mov
scas
jmp
mov
into
mov
nop
mov
jecxz
cmp
push
cwtl
rcrb
sbb
push
pop
fs
addr16
nop
icebp
mov
add
xchg
xchg
in
fs
fiadds
pop
out
add
jo
mov
sbb
or
push
mov
inc
movsl
aaa
cmp
stos
fiadds
rol
stos
push
mov
sti
clc
outsl
rcl
xchg
push
fs
out
not
ljmp
push
rolb
and
pusha
scas
xor
lret
nop
hlt
adc
mov
xor
mov
mov
dec
xor
rcrb
inc
adc
adc
scas
add
xor
stc
inc
xor
cmp
mov
outsb
neg
sub
adc
aaa
mov
std
mov
add
mov
xchg
lea
pop
xor
cwtl
jge
jg
xchg
orb
jno
and
xchg
movl
mov
mov
lcall
push
ret
adc
sub
imul
mov
sbb
aaa
pop
into
jecxz
test
ds
push
icebp
or
pop
hlt
mov
sbb
and
mov
neg
adc
adc
scas
sub
mov
mov
pop
jecxz
hlt
inc
mov
push
inc
in
mov
push
cmp
negl
inc
lret
mov
getsec
xchg
insb
popa
cmp
sub
lock
cmp
fdivrl
mov
outsb
or
xchg
dec
xor
pop
sub
in
jle
and
in
and
or
push
cmpl
or
and
xchg
into
or
ret
fidivrl
inc
xor
cmp
xor
adc
inc
and
cmpsl
push
das
cmc
and
pop
adc
sbb
push
mov
loopne
out
int
add
and
mov
aam
mov
mov
pop
stos
inc
sbb
in
xor
cmpsb
jp
and
sbb
add
pop
jb
movsl
mov
adc
mov
pop
rolb
xor
pop
shll
test
cs
sub
xorl
hlt
jmp
inc
or
nop
getsec
out
inc
adc
mov
or
push
push
inc
cmpsl
std
xor
pop
push
scas
or
mov
cmc
and
inc
hlt
jae
push
dec
sub
cld
bound
push
xor
lret
mov
test
and
mov
out
mov
add
sbb
mov
xchg
nop
into
and
fstpl
xor
inc
lret
ja
push
xchg
inc
cmpsl
pop
cmp
mov
xor
mov
xlat
call
pop
dec
adc
dec
mov
lods
mov
sbb
pop
inc
mov
xor
mov
dec
jecxz
cmp
ja
popf
cmp
mov
fsubrl
pop
fs
xlat
dec
mov
cmpl
xlat
and
sbb
rcl
jp
inc
xor
out
loopne
inc
xor
mov
or
cmp
add
fisttpll
subb
cld
push
lret
jp
add
enter
fwait
aad
fldl
jb
addl
cmp
mov
test
pushf
mov
sahf
adc
test
adc
xchg
inc
pop
adc
ret
ror
mov
push
xchg
xor
leave
js
push
pop
dec
mov
and
add
insl
fisttpll
leave
add
rcrb
andb
lcall
pop
std
dec
push
or
mov
sub
mov
cmp
push
add
jb
xchg
leave
cs
rclb
inc
pop
into
sub
xchg
or
push
adc
sbb
test
clc
call
aam
ljmp
xchg
mov
sbb
es
rorl
ja
aad
loop
jbe
popa
fs
imul
xchg
mull
ficoms
in
push
loop
popa
into
test
jns
push
cmp
inc
sub
popf
push
sbb
insb
inc
enter
out
inc
and
and
mov
in
popl
ud0
lea
fsts
inc
mov
add
mov
pop
lock
jmp
mov
and
mov
jb
fnstenv
xchg
and
out
movsl
fadd
lcall
jge
jns
jns
popa
cmp
jae
mov
mov
mov
bound
lea
lret
enter
xor
inc
pop
mov
mov
inc
rclb
adc
mov
fwait
or
inc
add
into
add
push
jmp
add
xchg
inc
and
into
inc
mov
lahf
in
xchg
xchg
xlat
mov
and
fstps
rclb
sub
sbb
sti
enter
sbbl
cmp
outsl
sbb
lds
pop
mul
ja
leave
pop
pushl
mov
imul
cmp
lds
adc
and
mov
push
mov
pop
outsb
jle
and
mov
mov
mov
or
cmp
aad
or
loop
dec
lock
mov
sti
xor
push
push
push
xchg
insl
mov
add
dec
scas
loop
dec
pop
enter
les
aad
adc
fwait
test
sub
pop
mov
jo
bound
add
aas
or
or
jg
ret
ljmp
in
imul
outsb
sbb
mov
cmp
sti
mov
cld
gs
test
repz
jle
arpl
ja
dec
movsl
pushf
cmp
inc
out
rcll
cmp
ja
sbb
addps
cltd
test
test
add
lcall
sti
or
fsts
lods
push
notb
push
mov
je
mov
xor
sbb
insl
pop
cs
jg
cmpl
ret
mov
sub
cmp
xor
lret
xchg
inc
add
test
lods
addr16
out
nop
xlat
cmp
add
inc
dec
mov
fidivrl
push
sbb
into
push
popf
imul
scas
jp
jno
sbb
sub
push
out
ret
inc
in
lds
dec
push
fildll
scas
xchg
push
jnp
sub
sub
pop
mov
orb
stos
movsb
jmp
sub
jno
lods
and
jne
adc
pop
sbb
mov
mov
bound
pop
dec
adcb
xchg
xchg
test
icebp
adc
in
push
int
inc
mov
cmp
xor
or
dec
cmp
enter
rclb
inc
imul
adc
sarb
xchg
nop
mov
test
pop
sbb
in
sbb
outsl
mov
cmpsb
pusha
imull
outsb
pop
out
sub
inc
sti
mov
into
xchg
mov
bound
sbb
shr
shll
jne
xchg
adc
add
push
xchg
inc
iretw
aas
push
aad
cltd
cs
dec
pop
jno
jg
fidivs
mov
jb
pop
sahf
test
sub
pusha
jmp
rorb
insl
dec
repnz
imul
cmp
sub
hlt
and
popf
add
xchg
sub
pop
cmpsl
call
cmp
test
sub
xchg
scas
pop
xchg
std
or
sti
into
jae
outsl
imull
ja
data16
mov
mov
jg
adc
sbb
jae
mov
arpl
js
lds
in
lret
cmp
mov
cmp
in
xchg
std
sbb
mov
jge
xchg
sbb
jl
or
xchg
lret
rcll
jmp
inc
movl
js
xchg
adc
out
gs
adc
xlat
mov
ficoms
inc
dec
pushf
cltd
jl
sub
sub
test
sub
or
cmpsb
adc
dec
pop
les
lcall
push
push
fidivrl
and
testb
dec
xlat
jle
adc
xchg
jecxz
cmpsl
sbb
outsb
into
loopne
ja
sub
aas
xchg
jp
in
stc
inc
out
add
adc
push
stos
loopne
jnp
mov
and
not
lock
fidivl
inc
je
fbld
cmp
push
adc
cmp
jecxz
jge
mov
push
mov
jp
xchg
cs
rclb
pop
scas
xchg
mov
pop
lock
adc
pop
sub
adc
pop
fiadds
or
mov
jns
fwait
mov
sbb
adc
add
cmp
inc
loope
add
xchg
jne
inc
push
adc
push
push
cmp
mov
mov
ja
inc
mov
xchg
lret
test
es
inc
pushf
inc
and
and
dec
aad
outsl
lret
sahf
rorl
mov
push
mov
sbb
cmp
or
adc
xor
mov
and
mov
daa
subb
sub
addr16
add
aad
data16
xor
movsb
mov
mov
pop
pop
adc
mov
dec
push
lret
cmp
ret
add
test
jnp
iret
adc
ret
in
adc
in
xchg
sub
outsl
xchg
lods
dec
gs
pop
fldenv
bound
or
cmp
pop
sbb
pop
inc
xor
mov
lret
sub
insb
pop
xlat
inc
xchg
sbb
xor
jnp
mov
mov
mov
ror
mov
pop
mov
push
push
mov
cwtl
xchg
push
ror
cmp
aad
insb
cmpsb
dec
sub
shlb
cli
push
outsl
cmpsb
xchg
es
ds
daa
push
testb
inc
fiaddl
sbb
hlt
or
push
inc
lods
sbb
frstor
jae,pt
cmp
jge
test
ret
xchg
push
inc
and
xchg
fldenv
repnz
gs
cld
mov
lsl
xchg
insl
mov
xor
std
sub
pushf
jp
popa
sub
gs
sti
test
adc
shl
lcall
fdivrl
cmp
rclb
idivb
iret
out
pushl
push
aas
loop
xlat
or
mov
push
pop
xor
loopne
cmp
mov
sbb
lahf
xchg
pop
and
mov
test
cld
fcoml
or
insb
xchg
mov
aad
add
mov
mov
inc
filds
mov
fsubrl
aad
popf
int
add
mov
daa
mov
or
adc
dec
mov
fs
mov
jg
jo
pop
ljmp
cld
loope
cmc
rcll
pop
cmpsb
dec
leave
fidivrl
inc
xchg
cmp
inc
inc
pusha
movsl
add
ficompl
call
pop
sub
mov
push
stos
mov
or
xchg
psubusb
push
loop
push
lret
or
pop
in
icebp
int
js
mov
push
sub
bound
faddp
aam
sbb
fmull
outsb
and
loop
imul
nop
inc
add
repz
dec
out
xchg
out
cld
pop
daa
xchg
test
sbb
push
sub
fsubrs
fldl
sti
fyl2x
loope
or
inc
repz
iret
movsl
mov
icebp
ds
nop
push
adc
push
outsl
pop
cli
mov
pop
lea
push
mov
into
mov
cltd
sbb
insl
jo
sahf
pop
mov
pop
jno
sub
xlat
xor
call
push
inc
lods
mov
jae
xor
or
or
mov
bound
push
sbb
in
fninit
adc
sub
repnz
arpl
loope
inc
aaa
jp
or
jmp
inc
aaa
jp
dec
or
sahf
and
and
loopne
mov
adcl
sbb
ljmp
clc
xor
jnp
or
pop
jp
mov
repnz
adc
dec
repz
jg
dec
jle,pn
push
jle
fildl
and
ret
mov
shrb
or
xchg
ss
scas
and
xchg
fbld
roll
sbb
outsb
call
jge
jp
xor
xchg
xchg
lods
jnp
add
mov
mov
inc
cmpsb
repz
clc
push
lods
pop
pop
arpl
je
int
mov
fimuls
mov
or
pop
or
inc
jb
mov
jmp
inc
mov
rclb
and
leave
inc
adc
jne
fs
add
pop
out
push
sub
cmp
sbb
adc
jne
hlt
add
js
push
add
mov
das
xchg
cmpsb
xchg
jecxz
test
repnz
push
dec
fildll
movsl
dec
sahf
movsb
add
or
inc
add
mov
mov
xor
in
xor
lods
add
mov
fs
ret
jns
leave
xchg
ljmp
push
popf
bound
mov
int3
fs
pushf
iret
jle
add
dec
xchg
push
cmp
push
aad
and
jmp
sbb
sbb
or
daa
insb
cwtl
out
hlt
mov
mov
decl
mov
dec
and
arpl
cwtl
pop
hlt
or
fstpl
mov
mov
push
or
stos
sbb
iret
stos
push
xchg
dec
fsubrs
xchg
pushf
pop
aad
mov
or
sub
js
ss
jmp
into
loope
inc
out
call
insb
in
mov
xor
ds
lock
and
out
popa
xchg
cmp
and
mov
bswap
push
inc
rcrl
movsl
cltd
mov
pop
jmp
xchg
sbb
lret
mov
fs
mov
mov
imulb
popl
bound
jmp
in
testb
sahf
fcoml
aam
test
inc
clc
push
je
ss
cmpsl
es
and
dec
sub
mov
movsb
mov
push
inc
and
mov
jnp
lcall
in
push
fwait
push
mov
jno
add
std
pop
test
xchg
popf
pusha
pop
pop
fiaddl
and
xlat
loopne
adc
xchg
imul
sbb
insb
xor
in
xchg
jnp
cs
sub
cmpb
rcll
in
mov
enter
mov
bnd
call
fwait
jge
inc
aas
ficomps
int
shlb
push
pop
clc
xor
repz
loopne
xor
imul
in
and
int
mov
push
push
popa
aad
xchg
inc
test
mov
notb
xchg
aaa
negl
push
nop
and
fsubrs
cmp
xlat
popa
xor
push
dec
sub
inc
aas
pmaxsw
push
stos
mov
imul
and
mov
sub
mov
xchg
dec
sub
or
and
add
daa
sbb
jp
sbb
sub
mov
lock
aas
out
test
cmpsl
je
mov
cmp
sarl
iret
mov
and
imul
add
pop
pop
and
push
outsb
pop
les
dec
or
mov
flds
aas
or
mov
dec
inc
jbe
ficomps
insl
cs
std
xchg
out
cmp
and
or
sub
push
loop
loope
icebp
mov
cmpsl
add
mov
pop
mov
xor
rcll
ds
icebp
fmull
notl
xor
ret
in
lock
in
push
loop
arpl
stc
fcomip
mov
xchg
xchg
movsl
mov
jns
in
repz
fisubl
sub
rol
mov
adc
aad
add
in
repz
jg
lahf
push
stos
push
jno
mov
cmp
int3
outsb
inc
pop
pop
xchg
pop
adcb
js
jge
mov
xor
add
mov
push
and
mov
push
jp
inc
mov
test
sub
filds
mulb
pop
out
test
movsb
xchg
push
test
imul
cs
addr16
inc
xchg
out
xorl
mov
sbb
daa
cwtl
sub
mov
adc
xor
mov
dec
sub
imul
loopne
cmpsb
mov
mov
xor
pop
enter
sarb
scas
lret
scas
daa
das
pusha
jecxz
lcall
jae
push
outsb
into
dec
js
pushf
shl
jo
adc
mov
cs
pop
push
mov
jb
mov
shr
push
xchg
jb
and
pusha
xchg
mov
subb
leave
inc
out
xlat
push
jp
hlt
mov
add
insl
fimuls
jl
mov
repz
cmp
pop
fs
mov
push
dec
sub
push
jecxz
sub
cmp
push
xor
outsl
jb
or
inc
push
jb
jno
in
idivb
popf
dec
lock
shlb
into
icebp
loope
pop
lock
and
in
rcl
jno
push
loop
xor
dec
and
leave
sbb
mov
dec
and
rcrl
mov
xchg
stos
add
cmp
xchg
mov
xchg
mov
or
mov
or
xchg
les
ss
cltd
scas
mov
cmpl
stc
fucomp
mov
imul
dec
out
movsb
xlat
ljmp
mov
pop
jg
push
mov
loope
jbe
fwait
adc
adc
adc
mov
inc
adc
pushf
jecxz
xchg
aaa
mov
mov
in
das
or
rcll
jecxz
add
adc
lods
pop
cmp
clc
jl
jmp
push
or
pop
insb
in
pop
out
nop
xor
add
repz
and
adc
ffreep
aam
pop
aam
loopne
push
jge
dec
lret
int
aaa
push
xchg
repnz
sbb
icebp
mov
shl
lret
call
dec
mov
aam
fnstcw
xor
pushf
popl
xor
and
and
lret
cli
rcrb
jl
mov
clc
cmp
sub
lret
pop
shlb
xor
mov
xchg
pop
ja
dec
dec
lods
xchg
cmp
std
mov
cltd
cmp
je,pt
mov
jmp
in
iret
mov
sti
shrl
lock
rol
movsb
cmovne
fstps
icebp
or
adc
cmc
cmp
nop
xor
cmp
pop
ljmp
call
xchg
sbb
mov
stos
roll
mov
sbb
mov
jae
fistl
pop
ret
push
xlat
dec
cmc
xchg
pop
sub
push
push
fwait
mov
filds
mov
cmpsb
pusha
jecxz
ja,pn
lcall
sbb
int
add
loop
scas
jns
dec
jle
pusha
dec
or
lret
mov
loop
jmp
cmp
bound
xchg
push
sbb
inc
xor
ret
mov
ljmp
adc
sbb
mov
add
push
mov
and
fwait
insb
fisubrl
cmp
pop
push
adc
jecxz
call
dec
cmp
dec
scas
imul
repz
xlat
inc
clc
dec
icebp
sub
aaa
std
and
lret
imul
cltd
cmp
pop
mov
push
mov
and
out
pop
adc
pushf
jle
xchg
push
out
add
inc
test
mov
out
inc
insb
jne
ja
aam
ret
sbb
pushf
push
mov
sbb
mov
cmp
cltd
lret
popf
cmc
and
push
xlat
mov
pop
call
ss
lcall
subb
cmp
dec
sahf
das
dec
add
push
add
jne
ss
psllw
test
mov
out
nop
roll
pop
sub
inc
adc
scas
ss
xor
push
push
shr
outsl
pop
lret
add
nop
aad
cmpsl
pop
into
in
icebp
dec
jns
movsl
mov
xchg
js
dec
out
insl
jge
add
mov
cltd
shlb
sbb
dec
jmp
out
cwtl
xor
cmpsl
sbb
popa
jl
push
sub
pop
test
idivl
xor
mov
in
fimuls
pusha
jnp
cmp
cld
in
jno
jae
aas
cmp
mov
popa
and
imul
stc
icebp
pop
and
aam
and
mov
lahf
xor
add
fsubrs
or
out
call
sub
pop
and
lods
push
push
and
in
push
add
out
inc
mov
repnz
add
push
adc
jbe
cmc
call
inc
dec
shrb
dec
jb
mov
jg
push
test
cli
call
ja
outsl
fcompl
xor
cmp
push
push
fwait
push
ret
sahf
clc
or
push
arpl
ljmp
or
icebp
xchg
gs
and
dec
inc
mov
sbb
pop
xor
cli
xchg
lock
dec
xor
pop
imulb
add
jne
pop
mov
lret
push
call
movsl
pop
aam
rolb
adc
xchg
out
dec
je
movsb
add
lods
in
inc
clc
stos
mov
jmp
loop
and
cmpsl
mov
idiv
lret
jnp
inc
xlat
xchg
or
sbb
jmp
pop
or
cmpl
xchg
shlb
insb
lcall
movsb
jno
test
xlat
inc
xchg
pop
mov
or
push
jl
sub
sbb
add
adc
cmpsl
and
mov
push
int
jns
pusha
mov
pop
ret
pushf
insb
fists
push
xor
mov
out
adcb
pop
mov
lds
stos
xchg
mov
lahf
daa
sbb
jg
fs
xchg
xor
pop
fidivl
out
mov
in
pop
stos
stos
inc
cs
ljmp
ds
dec
dec
cmp
aad
push
push
sbb
mov
adc
test
aad
shl
scas
in
xchg
aad
inc
mov
inc
lods
jns
jns
add
jle
or
icebp
sarl
push
lret
inc
xor
xor
fcoml
fnstenv
sbb
and
fbstp
fs
and
lret
popa
pop
lods
test
stos
pop
cmp
movl
push
ljmp
mov
adc
in
call
mov
push
lea
xchg
mov
inc
mov
jbe
std
pop
in
adc
add
xchg
push
mov
adc
ret
inc
pop
lods
pop
xchg
and
add
pop
clc
push
ret
dec
or
adc
mov
jmp
jno
adc
lods
inc
cmp
mov
aad
add
lret
popf
inc
movsl
sub
mov
sub
pop
iret
dec
push
les
out
xor
cmp
in
pxor
in
inc
fadd
xor
popf
roll
stos
pusha
ds
insb
mov
dec
mov
jmp
imul
repnz
ficomps
mov
scas
xor
imul
xchg
mov
aad
sbb
cld
pop
push
mov
stos
mov
mov
shr
push
cmp
and
rol
popa
pushl
jno
inc
jnp
or
fcomp
ret
lea
mov
cmpb
aad
out
and
icebp
adc
fsts
and
jne
cmp
mov
push
xor
clc
lea
cmp
fmull
addr16
outsl
js
jno
sub
xchg
movsb
cmp
ds
cli
lock
scas
mov
mov
popf
pop
jp
fnsave
and
ljmp
inc
sbb
pop
adc
loopne
xor
or
pushf
gs
dec
jb
shl
ljmp
pushf
scas
sub
or
adc
and
out
mov
rcrb
cwtl
add
out
mov
inc
nop
xchg
and
sbb
mov
xor
push
ficoml
push
or
dec
push
mov
dec
outsl
aas
cmp
js
int3
in
pop
fs
and
ljmp
and
pop
loop
lea
sbb
out
add
jnp
push
dec
stc
inc
out
and
cmp
fistpll
or
sub
sbb
sarb
mov
lock
js
cmpsb
in
fnsave
iret
shll
sbb
int
sub
stc
cld
test
add
dec
shll
dec
pop
sub
cwtl
or
sbb
push
lock
mov
jae
xchg
leave
arpl
into
aaa
mov
in
sbb
fcmovu
xor
data16
pop
mov
pushf
mov
push
xchg
cmp
push
movsl
flds
aam
lcall
sbb
add
xor
mov
aaa
cltd
pop
pop
jns
jb
cltd
mov
cwtl
push
stos
scas
ret
mov
fcmovbe
ss
jo
fistl
mov
fwait
and
roll
inc
aaa
addr16
mov
xor
xor
ds
push
xchg
push
fwait
test
dec
daa
lcall
xchg
push
and
aad
xchg
addr16
repz
mov
cmc
fwait
lods
addr16
sbb
push
dec
popa
popf
fsubrs
dec
mov
dec
imul
push
mov
bound
cmp
shlb
hlt
es
inc
dec
into
dec
cmc
add
push
repz
das
sub
daa
xlat
incl
xchg
xchg
stc
jle
test
cmpsl
in
mov
pusha
cmp
out
out
imul
push
orl
inc
mov
clc
cmpl
addl
fldt
lret
cltd
or
cmp
imul
lcall
pop
inc
mov
push
xchg
or
lcall
fldt
jae
mov
out
mov
repz
or
ret
jne
or
test
pop
aam
out
and
adc
stos
je
cmp
leave
adc
push
out
inc
and
pop
jmp
xchg
sahf
adc
clc
sub
shlb
inc
dec
adc
xchg
sti
xor
aam
pusha
sti
insb
insb
mov
mov
adc
and
and
fbstp
jl
repz
mov
xchg
pop
iret
pop
call
jle
push
ja
enter
fnstenv
jle
push
xor
inc
gs
test
testl
lahf
ljmp
jo
push
bound
lcall
rcr
push
gs
mov
rcll
lcall
hlt
iret
and
sarl
mov
je
lock
jecxz
into
in
rdpmc
add
sbb
icebp
or
mov
mov
push
fwait
dec
pop
sete
fmuls
push
cs
ljmp
mov
shll
xchg
sub
jne
inc
les
and
imul
sbb
xchg
xchg
movsl
sub
add
xchg
mov
cmpsl
into
add
popf
mov
loopne
or
pop
sbb
jmp
sub
or
mov
loope
cmp
jle
iret
mov
dec
or
mov
mov
sub
in
iret
test
mov
mov
std
insl
mov
in
mov
and
divl
push
cmc
cmp
pop
or
jb
subl
ds
mov
jecxz
inc
mov
adc
sub
push
repnz
cmpsl
test
pushf
repz
push
jg
jle
jmp
sub
or
and
or
xchg
jle
mov
mov
mov
mov
es
dec
push
out
sbb
test
test
push
stc
mov
lock
mov
mov
cltd
xchg
inc
pop
mov
pop
jbe
lret
scas
pusha
imul
into
pop
repnz
push
bound
jb
pop
lcall
iret
pop
xchg
cmpb
mov
mov
insl
mov
ljmp
cmp
rcrb
cmp
call
adc
mov
jp
pop
out
mov
jae
xchg
insb
xor
or
lods
or
mov
jno
sub
xchg
inc
cmp
inc
out
pop
ds
cmpb
cmc
stc
adcb
insb
push
adc
ss
jg
jbe
bound
mov
fisttps
stc
pop
pop
pop
mov
jb
cmp
xchg
aad
stos
push
or
add
cmpb
sub
out
ja
xor
cmp
jge
aas
dec
jecxz
les
mov
filds
add
popa
jb
dec
xor
add
push
lock
cmpl
jge
call
push
xchg
rcrb
mov
stos
popa
mov
pop
jo
sbb
cltd
fwait
or
or
rorl
incl
idivl
push
jge
sbb
addl
test
cli
xorl
adc
into
or
sbb
cltd
or
add
iret
mov
pop
dec
lods
xor
lcall
sahf
jecxz
jae
inc
daa
adc
push
xor
inc
daa
xor
stos
test
test
push
jo
shl
ss
lea
mov
xchg
xchg
push
lcall
mov
aas
fucomi
add
pop
lret
daa
jp
add
jnp
leave
sbb
and
sahf
in
enter
fucomp
xor
lods
xchg
pop
das
jae
jecxz
dec
xor
leave
adc
cmp
xchg
shrl
or
xor
outsl
movsl
mov
int3
in
incb
dec
je
aad
cli
mov
push
mov
adc
shll
mov
add
or
clc
gs
push
stc
sub
xchg
and
push
lods
mov
dec
in
das
sub
popa
jo
xor
repz
pop
sbb
repnz
xchg
dec
daa
push
vpsubq
add
and
mov
sahf
loopne
push
outsb
push
sub
inc
fwait
xor
cs
inc
sub
mov
das
sbb
pop
mov
das
mov
shll
cmovae
pusha
test
adc
pop
inc
leave
push
in
adc
stos
mov
mov
mov
out
jecxz
out
jb
test
outsl
in
arpl
or
sbb
loope
dec
pop
push
sbb
dec
je
sub
inc
xlat
cmp
inc
add
and
or
out
std
cli
ss
jns
adc
repnz
cmp
fnstcw
mov
cmp
addr16
mov
testl
or
jecxz
inc
add
test
mov
mov
or
rorl
push
or
cmp
xlat
outsb
fisttps
mov
push
xlat
dec
inc
pop
iret
movsb
or
in
daa
push
ss
pop
repz
aaa
clc
or
in
lods
mov
js
mov
and
testl
push
out
sbb
ds
pop
and
scas
mov
adc
mov
enter
shll
fwait
notb
xchg
lcall
out
push
xor
and
pop
fwait
add
and
xor
in
icebp
bound
fwait
das
cmpb
add
pushf
jae
mov
sub
and
cmp
ret
andl
in
xchg
cli
mov
test
and
std
sbb
cltd
lcall
push
mov
push
insb
xchg
shlb
or
lret
jg
ja
xor
cmp
xchg
dec
adc
cld
or
jne
imul
push
jle
mov
sti
pop
pop
rolb
pushl
dec
adc
push
add
dec
push
adc
add
iret
sti
mov
xor
outsl
and
jecxz
clc
inc
cmp
call
inc
sub
or
in
gs
jp
test
das
xor
add
test
cmp
sbb
ljmp
push
aam
sbb
test
imul
leave
decb
aam
mov
rclb
sub
and
xor
xchg
pop
inc
insb
int3
in
enter
je
por
push
cltd
sbb
lds
in
rcrl
leave
ss
je
and
nop
mov
ljmp
mov
push
sub
cld
or
xor
inc
ljmp
push
push
pop
xor
jae
fnsave
call
outsb
inc
les
lods
jp
push
aaa
pop
xchg
sub
loopew
bswap
xrelease
sarb
xchg
iret
shll
hlt
loop
push
loop
jle
sahf
dec
add
xor
and
cli
add
data16
sub
add
inc
mov
inc
daa
int3
pop
gs
mov
inc
xchg
pop
lret
loop
inc
sbb
in
fdiv
or
mov
add
hlt
adc
inc
out
nop
mov
cmc
jg
ja
dec
movsl
cltd
rorl
sbb
mov
shll
push
cmp
jbe
mov
add
mov
in
sahf
in
loope
or
dec
cmpl
dec
out
rcrl
pop
add
adc
pop
push
cld
mov
xor
stos
cltd
mov
aas
jbe
pushf
push
mov
xor
cld
dec
cwtl
iret
xchg
in
clc
popa
icebp
stos
sub
mov
ret
ss
push
inc
lock
dec
jmp
into
push
pushf
loopne
stc
xchg
aam
loop
inc
jg
sarb
cmp
xor
dec
test
fsubs
fisttpll
lahf
add
pop
jl
shlb
lods
frstor
push
pop
cltd
jae
pop
mov
call
out
sub
jo
lret
dec
mov
aaa
xchg
inc
hlt
ljmp
mov
das
sbb
inc
inc
loope
jnp
data16
push
outsb
imul
out
leave
mov
mov
pop
dec
sbb
inc
and
sub
fnsave
insb
lret
push
push
mov
pop
xor
rorb
inc
sbb
mov
jecxz
and
stos
lea
sbb
loope
daa
add
pop
push
je
push
push
sub
inc
test
or
test
ja
dec
dec
xchg
js
fnstenv
ret
gs
sub
out
cmp
dec
test
add
mov
mov
jno
fistl
jl,pn
cmpl
xchg
lret
pop
xchg
fwait
clc
pop
rclb
or
mov
or
iret
fs
mov
mov
dec
cmp
rcrb
imul
test
pop
dec
mov
mov
addl
ss
mov
fs
lcall
or
nop
ljmp
dec
enter
adc
clc
shr
lods
jns
movsl
push
movsb
mov
std
negb
shrb
xor
and
mov
lea
pop
andb
sub
dec
cmp
jno
inc
push
loope
in
mov
xor
psllw
orl
inc
or
stos
and
rcrl
mov
test
cmp
aaa
jle
ss
mov
sbb
inc
xlat
enter
sub
data16
fidivl
add
dec
out
jno
mov
pop
sbb
mov
sbb
nop
xchg
or
mov
dec
ret
icebp
push
mov
scas
inc
fcmovbe
pop
in
inc
xor
push
dec
push
aad
xchg
inc
lock
mov
mov
shr
dec
jmp
sti
or
imulb
jne
fcmovbe
ja
movsl
xchg
jecxz
sub
rcr
xchg
call
sub
fcompl
mul
adc
jbe
xchg
jnp
stc
cmp
cmc
fstps
mov
aaa
ja
xor
jb
enter
xlat
int3
fdivrl
cmp
divl
and
mov
mov
dec
fcmovbe
xchg
add
orb
mov
mov
pushf
frstor
daa
scas
adc
rorb
rol
imul
cltd
cld
test
insl
lock
mov
mov
push
les
les
cs
adc
mov
insb
xor
in
xor
insl
add
xor
movsb
jb
sahf
scas
cld
ljmp
xchg
jecxz
mov
jno
and
popa
fs
cmpsb
and
sbb
inc
jne
sbb
mov
xchg
and
nop
or
cmpsb
fucomi
mov
cmc
mov
negb
lock
mov
xor
jne
adc
ljmp
jle
xchg
lods
or
and
movsl
fwait
subb
into
adc
das
dec
arpl
fcomip
ds
fldcw
out
mov
xor
sbb
fcmovne
xor
ret
lret
sbb
inc
pop
int
adcb
sbb
push
mov
je
or
mov
fsts
out
mov
xor
pop
pop
dec
and
xor
xor
jnp
sbb
out
and
inc
sub
shlb
pop
mov
push
ret
shll
adc
pop
jbe
mov
jnp
pop
mov
mov
out
xchg
int
add
push
xchg
sbb
sbb
hlt
mov
ret
cmp
enter
mov
lahf
sub
bound
mov
fmul
mov
rcl
sbb
test
mov
or
movsl
add
mov
ret
jnp
shll
jmp
fmull
dec
jnp
clc
fnstcw
fwait
sbb
adc
mov
daa
mov
sub
out
test
and
push
jge
hlt
js
popa
cld
push
cmpsl
arpl
mov
arpl
and
and
push
mov
jge
stc
cmc
sbb
jns
xlat
push
outsl
push
pop
mov
push
insl
mov
cmp
inc
bound
rcrl
push
mov
jbe
adc
arpl
or
push
dec
sub
imul
mov
aam
leave
jecxz
pop
fldenv
mov
xchg
ret
adc
dec
add
in
lods
and
add
mov
ret
sbb
sbb
inc
mov
mov
jle
push
xchg
cmp
sbb
bound
fs
leave
daa
mov
bound
movb
xlat
dec
call
or
adc
mov
xchg
nop
inc
adc
or
cs
sti
mov
pushf
cmc
subb
xchg
fsub
leave
push
xchg
jb
mov
ret
fldcw
xchg
mov
shrb
xchg
pop
and
iret
pop
pop
lock
mov
fistpll
jge
lods
sbb
adc
pop
mov
dec
lea
nop
fsubl
mov
scas
add
push
les
loope
test
test
movsb
out
lcall
repnz
pop
outsl
int3
in
cmc
test
cld
add
jmp
adc
loop
ja
dec
hlt
and
sub
pop
jmp
cli
rorb
inc
loop
inc
in
hlt
sbb
lret
ret
test
mov
sbb
mov
test
sub
xchg
lods
imul
cld
mov
jo
rclb
sub
in
push
push
cmp
int
inc
push
sub
mov
or
faddl
mov
sub
stos
mov
jg
mov
aas
mov
shr
xor
jne
xchg
in
das
shr
inc
xor
push
adcb
enter
jne
cltd
daa
insl
inc
cmp
in
cmp
mov
mov
or
sub
arpl
jg
adc
pmuludq
push
dec
dec
xor
imul
xchg
adc
jg
or
mov
decl
idiv
in
loopne
daa
rcr
sub
add
nop
mov
mov
sub
cltd
or
lods
cmp
inc
pop
test
pop
jne
dec
jle
iret
scas
add
sahf
sub
sub
fmul
adc
daa
pop
cmp
mov
scas
fmuls
dec
lahf
dec
pop
test
mov
inc
std
shrb
xchg
mov
adc
jmp
dec
adc
push
dec
xor
inc
jmp
xor
loope
xor
cli
int
xor
into
aad
ret
push
dec
movsl
mov
xchg
mov
pop
mov
lahf
divl
xor
fs
xchg
ds
push
fdivs
cmpsb
test
cli
std
lods
sbb
ret
xchg
xor
pop
pop
lcall
mov
leave
pop
negl
sbb
cmc
push
cwtl
andl
or
add
insb
jno
scas
cli
xlat
mov
pop
std
adc
mov
rcr
aad
scas
xor
shrl
dec
pusha
clc
pop
xor
adc
mov
sahf
ja
cmpsl
cmp
stos
cmp
ja
adc
les
xchg
add
or
push
mov
fwait
outsb
xor
lods
scas
sbb
push
popa
int
sbb
loop
dec
pop
xchg
int
popf
mov
add
icebp
adc
test
and
outsl
inc
mov
mov
push
xor
loope
bswap
fmuls
imul
fcoml
cmp
jno
xchg
jne
mov
pop
mov
mov
sub
nop
imul
std
mov
cmp
jbe
mov
mov
cmp
es
lock
fs
add
into
push
sub
div
fisttpl
pop
jae
cmpsb
dec
frstpm(287
dec
cld
das
pop
sbb
ljmp
adc
mov
mov
arpl
or
stos
push
cmp
mov
mov
pop
pop
xlat
push
lret
pop
movsl
daa
push
mov
in
fbstp
mov
loopne
icebp
repnz
movsl
pop
mov
imul
adcb
mull
xor
lds
test
out
aaa
nop
test
in
movsl
xor
sti
stos
push
adc
mov
fisttpll
insb
lods
sub
dec
and
int3
arpl
sarb
clc
mov
push
mov
stos
dec
pop
fwait
lahf
xor
insl
adc
dec
xchg
insb
mov
xchg
lods
pop
int
mov
inc
shrl
and
popa
loopne
insb
and
fistpll
pop
inc
pop
mov
mov
xchg
pop
sbb
pop
mov
leave
mov
out
sbb
or
das
add
aas
mov
mov
jnp
arpl
outsl
outsb
in
cmp
adc
popf
test
test
or
and
stos
or
xor
xor
cs
enter
adc
push
pop
push
add
gs
stos
jge
inc
xchg
fs
mov
mov
cmpsb
cmp
das
push
rcrb
shrb
sub
fldl
fwait
mov
stc
out
js
dec
sti
repnz
dec
inc
inc
aam
in
fidivrl
mov
sbb
mov
adc
inc
and
xor
pop
fdiv
mov
sbb
dec
push
ret
mov
push
mov
xchg
int3
pop
push
inc
fdivs
imulb
pop
in
jl
mov
cli
nop
and
ret
push
inc
fs
inc
pop
sub
loope
mov
add
and
cmp
push
push
jo
xor
outsl
je
ror
push
jno
roll
pop
rcll
std
aas
xchg
jge
or
sbb
jecxz
and
cmp
clc
add
imul
push
imul
cwtl
inc
out
sub
mov
int
ror
mov
inc
out
dec
leave
aas
out
nop
dec
daa
add
lods
cmp
mov
int
fsub
fadd
insb
or
adc
ljmp
je
mov
es
cli
inc
jg
repnz
lea
pusha
mov
or
stos
insb
insl
lods
cld
and
test
shlb
arpl
pop
imul
cwtl
push
adc
mov
xor
std
xor
add
jb
shll
xchg
and
xor
sbb
adc
lcall
cmp
sub
nop
mov
push
movsb
pop
mov
mov
and
int3
push
pop
fisttps
xchg
into
ds
or
jmp
stos
mov
or
xchg
mov
repz
cld
xchg
mov
addl
in
push
lock
mov
mov
loope
xchg
imul
mov
inc
or
jge
or
and
sub
aas
jno
test
cmp
pushf
negb
dec
ja
xor
sbb
cmp
sub
testl
sarl
pop
sub
xor
inc
and
cld
mov
dec
xor
hlt
push
or
jg
dec
fisubrs
inc
es
inc
dec
mov
loop
cmp
ffreep
in
push
xchg
pop
push
lds
and
push
testl
add
call
sub
ror
lock
adc
fadds
fisttps
stc
into
movsl
lahf
and
movsb
inc
data16
sub
sti
ret
out
mov
push
out
adc
jmp
outsl
repz
mov
add
inc
popf
xlat
mov
pop
cld
jp
test
stc
aaa
push
mov
and
cmp
gs
push
scas
mov
adc
mov
xchg
add
jno
xlat
cmp
aam
sahf
jmp
mov
mov
or
mov
sarb
aad
pop
jne
dec
mov
pushl
pop
mov
fcomps
mov
pop
xlat
fidivl
fstpt
outsb
ret
stos
hlt
xchg
rorl
mov
in
test
dec
aaa
movsl
mov
push
fcmove
sahf
fmuls
adc
test
mov
or
fs
cld
and
dec
jle
lret
add
push
movsl
jbe
and
and
addl
cli
and
dec
push
jo
out
xchg
mov
enter
mov
movsb
sbb
dec
dec
rorl
cmp
sub
sub
fs
movsb
in
push
xchg
jne
jl
jb
sub
inc
inc
inc
push
xchg
pop
sbb
cs
xchg
pop
adc
andb
sub
pop
insl
imul
loopne
cwtl
gs
mov
or
pop
insl
in
mov
adc
jg
movsb
int3
push
fisubl
or
inc
les
xchg
dec
clc
or
mov
in
or
insb
sub
adc
cli
adc
in
fldenv
inc
jmp
add
into
inc
fwait
shrb
adc
xchg
mov
and
jge
das
push
cmp
sarb
mov
mov
jns
mov
mov
sub
cmpsl
int
outsl
inc
adc
loope
cmpsl
out
dec
aam
or
shlb
in
add
outsl
inc
pusha
lret
inc
pop
add
cwtl
cmp
hlt
repz
subb
xchg
xlat
test
ja
insl
push
std
mov
fwait
add
jne
mov
sub
aam
outsl
movsb
jne
pusha
sbb
jge
insl
idiv
pop
xor
and
push
ljmp
scas
mov
lea
and
push
out
insb
in
sub
jp
mov
stc
xor
or
add
lahf
cmp
xchg
lahf
scas
andb
cs
xchg
loopne
out
push
cmp
ficomps
popf
mov
dec
sbb
cwtl
xchg
dec
cld
jge
sbb
dec
mov
in
dec
cltd
rcr
dec
popf
or
sub
maskmovq
lock
mov
sbb
inc
xor
ficoml
ja
jno
aaa
lcall
sbb
xchg
dec
roll
mov
pop
mov
pop
pop
fldl
jg
pop
lahf
cwtl
repz
mov
mov
and
ljmp
sub
or
xchg
int
test
orl
addr16
pop
popf
jmp
lret
xchg
jb
add
les
mov
xor
xor
std
scas
cmpsl
mov
mov
pusha
add
push
in
call
mov
hlt
lods
inc
fcomps
xchg
lods
and
push
inc
mov
test
pop
push
int
test
cmp
or
pop
test
push
cltd
jmp
loope
dec
ficoms
sub
mov
xor
cmp
mov
pop
xlat
sbb
pop
xchg
push
pop
xchg
pop
sbb
cwtl
mov
std
cmp
push
adc
fistps
push
push
mov
popa
xor
std
sbb
push
xor
cmc
outsl
mov
mov
xchg
out
and
fstpt
sbb
or
bound
sub
enter
push
rolb
sub
out
mov
rcrl
mov
add
in
xchg
mov
stos
xor
insl
sbb
inc
adc
pop
cwtl
aas
adc
dec
sbb
xor
rcrb
lret
jle
push
jl
inc
adc
push
int
nop
insl
sti
fwait
lahf
arpl
decl
iret
lret
pop
push
daa
into
pop
or
mov
xchg
and
out
in
scas
inc
js
xor
insl
and
inc
dec
ja
cmpsl
sbb
push
loopne
push
jmp
shlb
adc
cwtl
das
cmp
iret
or
bound
mov
add
or
inc
xchg
das
push
enter
cs
ss
add
cmpb
movsl
sub
leave
cmp
and
lods
fildl
cmp
lock
repnz
xchg
imul
nop
shll
mov
sub
and
js
pusha
rolb
sub
jnp
data16
mov
lret
add
lock
sar
push
dec
ret
xchg
jl
jge
aas
aad
enter
popf
lock
sbb
mov
inc
movsl
mov
dec
ret
dec
loope
mov
fcomp
fsin
cmc
mov
mov
sbb
gs
int
sbb
or
jno
jl
dec
cwtl
in
adc
shl
xchg
insb
je
leave
cmp
mov
pop
test
sbb
push
sbb
xor
jnp
out
jbe
sub
and
aam
mov
test
xchg
fiaddl
adc
testb
popa
dec
pushf
pop
add
inc
leave
int3
dec
push
test
mov
iret
filds
pop
incb
cld
dec
jecxz
mov
out
xor
inc
mov
and
jbe
out
mov
sbb
repnz
add
jecxz
je
adc
fmul
test
push
jae
sbb
aaa
xchg
jno
ret
mov
cmp
fisubs
inc
cmpsb
popa
stc
xor
ljmp
je
insb
jl
icebp
mov
pop
jo
mov
lds
sub
push
cmp
xchg
adc
pusha
sub
push
test
fldt
jle
mov
pusha
subb
lds
cli
sub
add
dec
repz
sbb
jge
sbb
fadds
sub
loope
ljmp
mov
mov
setnp
mov
mov
nop
fisubl
jbe
xchg
arpl
std
ljmp
push
dec
aaa
or
mov
inc
cmp
or
pop
sub
test
and
lahf
xchg
pop
inc
jle
insl
inc
outsb
dec
dec
aam
out
sub
add
xchg
aas
cmpsl
pop
add
clc
or
or
cmp
ja
cmp
adc
pop
jl
mov
stc
dec
mov
adc
loop
jp
addr16
push
cmp
movsb
mov
xchg
inc
std
addl
add
dec
push
insb
mov
mov
testb
nop
dec
add
decl
sahf
jbe
fimull
clc
notl
jae
cwtl
fcmovnb
add
sti
mov
jge
cltd
push
lcall
icebp
jae
dec
inc
aaa
adc
fisttps
roll
and
loopne
stos
mov
cmpsl
lea
xchg
int3
lds
push
icebp
pop
pop
icebp
push
mov
outsl
cmpsl
outsl
bswap
xor
jmp
stos
push
inc
ror
mov
xchg
xchg
push
in
stos
fsts
cmp
and
hlt
pop
xchg
xor
pop
call
push
inc
xchg
add
cmpsl
bound
cmovnp
movl
and
lcall
cmp
lea
jnp
popa
lret
cmpsl
xchg
imul
add
pop
addr16
xlat
sbb
push
ljmp
mov
mov
mov
mov
in
mov
pushf
mov
bswap
jmp
xor
in
mov
adc
xchg
mov
inc
addr16
cwtl
jb
jns
test
aad
inc
pop
cmpsb
lods
dec
jle
std
sub
movsl
sti
pop
push
and
xchg
ljmp
mov
mov
sti
sti
lods
sahf
stos
pop
push
movl
in
icebp
jecxz
ds
push
inc
jle
sub
or
sbb
inc
addb
lea
popa
sub
mov
push
lret
imul
push
push
xchg
leave
pop
into
mov
or
xchg
mov
les
push
out
lret
xchg
fists
mov
add
jp
movsl
pop
test
cltd
adc
fxch
dec
imul
js
dec
pop
call
push
imul
out
jae
jge
cs
cld
ret
dec
add
insl
cmp
imul
aad
mov
sub
and
daa
mov
sub
mov
inc
inc
lods
vandps
orb
mov
jle
imul
cmp
sti
add
retw
sbb
push
cmp
xor
sub
in
addr16
in
call
cltd
add
cmpsb
dec
sbb
sub
mov
shlb
push
shl
fisubs
mov
cmp
fnstenv
stos
push
pushf
in
xor
leave
sbb
dec
mov
ds
and
push
and
fsts
jl
add
xchg
test
xor
cmp
and
repz
cmp
iret
adc
sub
lods
sbb
pop
add
out
sahf
dec
pushf
adc
je
sub
test
gs
jmp
cmp
fwait
xor
fists
push
std
and
ljmp
je
jbe
clc
add
fisubrs
in
gs
fnsave
dec
adc
cmp
sbb
repnz
push
xor
or
or
sbb
fiadds
hlt
out
in
mov
cld
in
push
jg
xchg
or
mov
jnp
ret
push
lods
sub
in
jb
jle
rorb
loope
pop
es
sbb
test
insl
add
xor
rorl
lods
push
repz
push
xchg
mov
mov
sub
pop
xchg
das
cmc
ja
adc
jge
lcall
inc
and
nop
addr16
add
inc
push
cmp
cs
add
scas
push
loop
xor
lret
das
movl
push
ss
dec
ds
pop
in
fdivp
pop
sahf
lea
repz
aam
lods
add
mov
scas
sub
add
sbb
xchg
shll
movntq
out
rclb
push
pop
aam
cmp
mov
xchg
fwait
xchg
popa
roll
sbb
icebp
iret
jge
loopne
dec
bound
or
dec
out
cli
fs
xor
sub
mov
nop
leave
sbb
and
mov
push
mov
cmp
inc
adc
in
icebp
insl
std
push
xor
sub
ja
repnz
loop
push
jmp
mov
insl
jb
int
bound
mov
dec
and
clc
inc
fdivrp
add
int
xor
sbb
cmp
push
adc
xor
mov
dec
xor
cmp
dec
mov
xor
imul
inc
dec
mov
mov
clc
ss
mov
xchg
ljmp
inc
add
xchg
pop
mov
sbb
dec
jb
sbb
insb
fstps
push
rcr
sub
xor
add
xchg
dec
jl
outsl
jp
cmpsb
insb
pushf
into
test
add
cmp
jae
adc
out
cltd
int3
push
pop
popa
repz
test
xchg
jl
mov
imul
mov
sbb
inc
jbe
das
mov
jo
clc
and
xorb
pop
mov
enter
xor
mov
add
test
adc
pusha
fs
adc
loope
mov
sarb
fsubrs
inc
or
xchg
cld
or
and
dec
call
sub
push
jae
test
and
testl
dec
mov
sbb
sbb
mov
sub
inc
pop
int
sahf
test
xor
mov
flds
jecxz
mov
sub
and
push
pushf
hlt
pop
mov
outsb
divb
mov
sbb
cmp
bound
loope
add
and
xlat
jae
mov
jecxz,pn
and
daa
jge
scas
imul
push
data16
lcall
cmp
mov
or
outsl
pop
scas
ljmp
mov
ret
int3
arpl
xor
bound
iret
push
pop
sub
xor
add
lret
xchg
orl
out
xorl
xchg
pop
test
mov
dec
cs
adc
imul
arpl
das
fiaddl
and
aad
jge
fwait
mov
mov
xchg
xlat
xchg
jne
lock
test
or
pop
lcall
ret
stos
outsl
out
popf
push
ds
jg
mov
push
repnz
sbb
xchg
addr16
inc
loopne
je
aas
and
lret
push
pushf
fisubs
dec
fdivp
dec
add
fwait
add
inc
scas
icebp
and
sub
push
mov
pop
mov
sub
ret
popf
loop
cmc
pop
aad
sub
push
popf
lods
and
xor
mov
into
or
lcall
xor
inc
sub
push
xchg
bound
jmp
fnsave
or
sarl
leave
imul
fwait
add
arpl
je,pt
mov
mov
mov
cmp
adc
jge
outsb
pushf
clc
sbb
shlb
mov
dec
lret
or
pop
hlt
and
inc
das
xor
test
int3
enter
fwait
cli
push
jge
test
xor
pop
add
data16
sbb
daa
insb
outsb
sti
out
jmp
push
fisubrs
cli
shrb
xor
sbbl
stos
add
sti
push
notl
inc
loopne
pushl
jo
mov
mov
xor
clc
sbb
cmc
fcomps
shrl
out
sub
adc
xchg
inc
cltd
and
loop
in
iret
add
adc
adc
fdivrl
pop
or
nop
in
lret
adcb
mov
lock
sbb
push
aas
loope
test
lea
shrl
mov
test
add
loopne
in
push
shll
xchg
jecxz
inc
mov
mov
jne
test
scas
mov
pop
xor
adc
jp
test
scas
jns
movsl
mov
fists
pop
cmpb
add
push
out
mov
lret
and
insl
lahf
inc
jecxz
pop
out
dec
and
fbld
mov
fidivrs
adc
daa
push
icebp
cmpsb
lret
mov
sub
mov
mov
ja
test
mov
push
lock
xor
sbb
cmc
jge
push
imul
daa
jne
push
out
push
add
jo
call
test
out
cmp
mov
xor
xor
movsl
stc
pop
aad
outsb
insl
scas
fldcw
xchg
lock
pop
stos
les
push
xchg
adc
or
jae
add
dec
inc
es
lods
fwait
pop
dec
ret
repnz
lret
lahf
jb
fwait
mov
or
inc
push
clc
fidivl
rcr
push
icebp
cmp
push
fsub
inc
cmp
out
mov
xor
sub
push
data16
xor
xor
call
pop
out
sub
dec
or
incl
out
pop
adc
push
pop
mov
jg
clc
inc
inc
dec
repnz
test
gs
jp
sub
fsubrl
inc
ret
jge
pop
adc
movsl
or
adc
jl
sub
ret
mov
ret
xchg
fmul
lea
and
mov
pusha
adc
ret
push
data16
or
mov
into
cmp
pushf
xchg
hlt
mov
add
push
mov
cmp
cmpsb
in
adc
decl
inc
mov
imul
xor
pop
mov
mov
cmp
or
xor
mov
push
sub
scas
clc
in
loop
xchg
ja
in
add
call
scas
jno
mov
mov
cmpsb
push
inc
inc
push
ffreep
sbbl
mov
mov
hlt
mov
xor
jle
sbb
fldenv
lods
out
sbb
lods
arpl
ds
sub
cmpb
ss
bound
push
inc
mov
xor
xchg
lcall
mov
mov
in
pop
sti
xchg
pop
cmp
jne
fimull
xchg
sub
and
inc
shrl
nop
mov
es
push
or
fs
cld
mov
xchg
ljmp
dec
jg
mov
xlat
fptan
xor
aam
mov
push
sbb
add
hlt
inc
jbe
cltd
inc
sub
pop
sbb
nop
mov
hlt
ret
push
cmp
outsl
call
sub
dec
dec
cmovns
dec
scas
loopne
or
cmpsb
repnz
push
pop
fstpt
jae
inc
ffreep
hlt
dec
testb
or
bound
push
ds
xchg
lds
and
sbb
lock
mov
xor
jle
xor
test
cs
mov
int3
lret
dec
cmc
jns
std
jno,pt
arpl
frstor
and
insl
add
sarb
inc
pop
data16
jge
lods
lock
mov
pop
or
or
adc
pop
push
dec
adc
or
ret
push
test
call
xor
push
or
insb
push
sbb
icebp
xchg
push
out
or
popf
lahf
cmp
pop
and
xchg
or
fs
sbb
in
lods
das
lock
mov
pop
imul
imul
dec
cli
ljmp
incl
jle
cli
cmc
scas
pop
mov
fstpt
push
outsb
sbb
test
js
cmp
cmp
xchg
adc
pop
xchg
rcll
das
xchg
sub
xor
aas
jno
add
add
mov
mov
out
adc
mov
mov
lock
out
sti
mov
mov
fs
inc
inc
mov
mov
je
mov
in
sbb
cmc
jmp
jle
xor
sub
lcall
mov
push
jl
stos
adc
dec
cmp
loopne
lahf
and
rcr
mov
mov
movsb
data16
add
add
push
stos
jge
shlb
test
ja
in
mov
inc
lods
popf
add
aam
call
hlt
bound
cli
mov
test
pop
rep
rolb
push
pushl
mov
adc
sahf
push
mov
sahf
mov
mov
add
or
jne
mov
cltd
call
mov
ret
and
sub
or
xor
or
je
call
mov
js
pop
aam
enter
cld
inc
out
gs
out
scas
and
repnz
sub
repnz
shr
pop
lahf
jp
popf
and
jne
in
mov
pop
add
pop
cmp
or
call
js
cmp
cmp
ret
les
in
sub
xchg
push
movsb
xor
outsl
xchg
adc
and
test
subb
xor
ss
inc
adc
outsl
fcompl
sti
adc
imul
mov
leave
gs
rclb
stc
sbb
dec
add
ljmp
inc
mov
out
xor
arpl
inc
or
fcmovu
aam
bound
ja
dec
scas
lret
inc
and
adc
xor
pop
in
shlb
repz
in
jns
jge
mov
add
mov
mov
insl
movsb
push
xorl
lret
fildl
xor
stos
or
add
dec
ret
aaa
in
add
jb
sarl
lods
call
out
setbe
cmp
test
mov
call
loopne
pop
inc
stc
cwtl
lds
fldl
and
pop
jmp
push
jl
ret
repnz
lea
movsl
lea
push
cwtl
push
jge
rolb
sbb
or
xor
loope
sbb
mov
push
mov
cmpsb
rcll
mov
sti
add
in
xchg
dec
cwtl
pop
add
and
inc
dec
dec
mov
mov
cmc
adcl
jb
shll
pop
sbb
test
roll
scas
inc
aaa
sub
add
ret
dec
subl
mov
dec
mov
xlat
xchg
xor
pop
mov
mov
xchg
dec
jecxz
add
jns
cs
pop
xor
mov
unpcklps
push
and
out
lahf
jl
mov
xorl
lock
sub
xor
in
mov
mov
ret
add
jae
or
pop
sbb
push
push
cwtl
push
push
test
mov
loopne
mov
mov
mov
xchg
cmp
jg
ljmp
out
dec
xchg
xchg
rcrl
movsb
cmpsb
roll
aad
xor
movsb
and
setbe
pop
fsubs
fs
pushl
sub
rcrb
mov
pop
test
bound
into
jge
lods
mov
test
mov
xchg
add
insb
and
sbb
sub
push
gs
lret
inc
lods
stos
lods
movsl
dec
shrl
pop
outsl
jb
sti
mov
scas
int
imul
ds
out
mov
imul
inc
ret
sub
sbb
lret
xchg
pop
in
pop
lds
fisttpll
sbb
dec
push
into
inc
xchg
in
cmp
pushf
jbe
sbb
stos
add
mov
xor
std
jb
lods
das
xchg
pop
movsl
cmp
lods
xchg
jmp
ret
sbb
fs
nop
push
jbe
add
adc
mov
hlt
pop
jmp
out
aaa
jno
dec
dec
adc
adc
pop
or
adc
fs
ret
or
cwtl
arpl
jno
in
mov
jecxz
ficompl
sub
and
aad
insb
ja
jl
adc
push
push
jecxz
rolb
sbb
int3
icebp
jb
lea
mov
add
push
push
pop
mov
xor
orl
lahf
mov
push
shrl
mov
orl
mov
loopne
mov
daa
add
js
rcr
sub
fwait
inc
and
subl
jne
gs
cmp
lcall
lahf
dec
pop
lret
out
andb
fildll
in
sub
push
cmp
jl
dec
fdiv
aas
add
mov
imul
push
add
std
add
jne
inc
neg
cld
or
insb
hlt
sahf
or
cld
sub
push
mov
imul
push
out
sti
xlat
and
mov
sub
sbb
xchg
adc
add
xchg
cmp
push
clc
lcall
push
cmc
mov
push
sub
out
lret
icebp
lret
fidivl
fbld
mov
add
pusha
add
jecxz
mov
pop
xor
sahf
in
mov
gs
adc
adc
js
icebp
mov
pushf
imul
xor
dec
bnd
sti
pop
pop
adc
out
sbb
pop
push
xchg
cwtl
ds
cmp
imul
in
xchg
push
sub
lds
jmp
or
gs
add
out
sbb
in
popl
mov
das
lret
fwait
das
jb
in
push
inc
jne
popf
fildll
jno
sbb
dec
adc
push
xchg
das
stc
adc
loopne
and
jg
xchg
cmpsb
jne
mov
sbb
xchg
jle
xlat
cs
in
orb
lahf
setno
call
fistl
popf
nop
out
and
mov
jl
cmpsl
mov
push
push
jge
adc
mov
shl
out
mov
lods
in
sbb
sbb
lods
scas
aam
roll
and
addr16
das
aam
outsb
cwtl
mov
jmp
mov
jecxz
push
jae
jno
fbstp
sarl
add
or
in
ja
leave
dec
stos
xchg
xchg
fimull
mov
iret
inc
jns
fidivrs
test
lock
inc
pop
rolb
lret
std
cmp
hlt
adc
mov
inc
cmc
es
fsub
mov
jns
inc
xor
lea
or
nop
sbb
ss
xlat
mov
sarl
lods
mov
jge
pop
dec
cmpsb
ret
jo
pop
std
mov
cli
inc
adc
hlt
xorl
testb
xor
pop
cmp
data16
sarb
and
popf
sbb
mov
movl
jmp
loope
and
lock
pop
int
stc
inc
dec
cld
mov
notl
bound
inc
out
xor
push
inc
fldenv
cltd
in
mov
stos
sbb
xchg
mov
lods
jae
leave
push
cmp
dec
push
pop
outsb
insl
aas
pop
dec
test
jecxz
mov
xchg
test
pusha
or
add
aaa
ss
dec
rorb
xchg
mov
scas
or
jge
stos
test
sbb
aaa
divl
mov
xor
push
in
pop
xor
in
loop
inc
cmp
lock
lret
arpl
shlb
es
add
adc
std
aam
loope
out
ljmp
xchg
inc
in
xor
jbe
sbb
dec
add
push
sti
cltd
or
add
ret
or
jmp
mov
leave
test
fwait
add
xchg
push
xchg
fnstenv
aaa
fs
xchg
adc
dec
xorl
push
sub
or
xchg
adc
cli
mov
fcmovnbe
sub
cmp
arpl
clc
lock
cmp
jo
pop
arpl
ds
bound
lahf
movsl
test
fdivrs
push
inc
jns
imul
xor
and
push
push
insl
mov
jle
cwtl
aas
dec
push
repz
push
dec
je
dec
adc
jp
xor
std
mov
inc
mov
dec
cmp
fistps
sahf
cmp
mov
xchg
rorb
push
cmp
stos
dec
mov
ret
inc
in
ss
in
mov
int3
jl
and
push
xchg
inc
mov
mov
jmp
pop
loop
in
lock
rcrl
js
inc
sub
outsb
lret
popl
add
int3
lock
pop
sbb
cmp
jle
mov
je
xchg
jbe
fsubrp
ljmp
js
test
and
jne
cli
loop
mov
mov
scas
addr16
xchg
insl
push
fisttps
lahf
loope
iret
cmp
loop
and
mov
fs
out
and
gs
out
xchg
mov
xor
out
sbb
cmpsb
negl
in
loopne
mov
test
stc
xchg
xor
and
popa
mull
stc
daa
xor
push
dec
pop
pop
insb
jg
jmp
inc
or
mov
adcl
push
sbb
aad
mov
mov
mov
mov
jnp
push
cmp
fiaddl
pop
je
imul
adc
popa
adc
clc
popf
std
sub
outsl
loope
sbb
stc
mov
movsb
insb
adc
popf
adc
sbb
push
fldl
mov
sbb
mov
notb
shr
movsl
and
sub
into
cs
and
jno
aas
pop
loopne
mov
into
in
or
inc
imul
js
aam
or
mov
mov
or
xchg
fstl
iret
les
add
and
jb
js
jnp
imul
dec
lods
add
sub
scas
pop
ds
push
movsl
mov
in
inc
notl
pop
jge
mov
ss
fsubr
xchg
mov
jecxz
jbe
jecxz
adc
movsl
mov
adcb
andl
fsubr
inc
sarl
out
insl
nop
jmp
aas
outsl
loop
jbe
inc
mov
mov
sbb
nop
cwtl
scas
addr16
hlt
pusha
testl
sti
out
sub
add
pop
and
or
adcb
push
test
sbb
push
mov
cli
insl
cmc
testb
and
icebp
cmpsl
push
stos
lea
cwtl
jmp
cmpl
lods
xor
inc
subb
and
inc
add
mov
jp
jne
enter
xchg
cmpsb
mov
mov
add
cmp
xor
popa
jne
mov
enter
imul
fs
sub
inc
hlt
fwait
std
sbb
push
out
or
jne
cmp
mov
cmpsl
stos
xchg
dec
mov
loope
sbb
xchg
xchg
inc
xchg
and
adc
je
cmp
mov
ds
add
aaa
test
std
jg
or
and
das
scas
adc
sbb
or
test
test
addl
sbb
out
jge
mov
test
push
or
inc
arpl
into
and
add
cmpsb
adc
adc
cmp
movl
orb
dec
xchg
mov
mov
jge
mov
nop
test
dec
rolb
dec
fwait
cltd
mov
adc
mov
push
jle
cmp
rorb
aas
decb
mov
mov
fstpl
adc
dec
push
data16
ljmp
sbb
push
in
pop
adc
leave
dec
xchg
pop
adc
cwtl
pop
dec
fnsave
dec
rol
and
xchg
pop
inc
jmp
cmp
mov
adc
call
aaa
and
pop
xor
push
mov
mov
add
rcrb
mov
loopne
int
adc
mov
mov
lds
loope
negl
imul
mov
inc
cmp
mov
dec
notb
jmp
stc
mov
fidivl
dec
mov
icebp
add
js
iret
cltd
or
adc
push
sub
ret
rcrl
or
cwtl
cwtl
outsl
js
mov
je
and
dec
jns
inc
inc
movsl
xor
push
cmp
add
push
aaa
ss
jge
int3
lock
mov
stos
xchg
cmp
std
inc
andl
sti
scas
xchg
clc
mov
std
ljmp
popf
idivl
cmp
dec
sbb
xor
dec
sub
stc
ret
jno
mov
ret
push
adc
daa
outsl
aaa
dec
inc
outsl
pop
inc
loopne
jo
pusha
stos
pop
lock
int3
push
iret
lea
xchg
push
and
stc
xchg
mov
xchg
test
test
push
jb
in
xor
adc
sbb
inc
ss
xlat
sub
mov
sub
xlat
xchg
lock
and
lret
jo
push
push
inc
repnz
fadd
jno
fcmovnbe
sahf
add
lds
js
loopne
addr16
adc
jbe
and
leave
icebp
sbb
aad
mov
setns
mov
add
mov
lret
addb
inc
pop
call
scas
inc
ja
add
fs
xchg
lret
aas
push
push
dec
pop
or
jmp
cmp
and
mov
sub
xor
cld
add
pop
xchg
pop
xchg
push
movsb
jae
lds
cmp
mov
popa
hlt
andl
mov
fidivrs
or
dec
inc
test
lret
inc
sub
cmp
lock
sbb
sbb
outsl
xor
orl
xchg
xor
dec
xlat
pop
inc
popl
xor
test
xor
cmp
sti
into
mov
cmp
mov
dec
mov
repz
cmp
jno
jge
daa
mov
jbe
hlt
sahf
mov
mov
es
pop
mov
bound
add
and
int
or
out
std
cmpsb
xchg
inc
lods
adc
dec
or
insl
cli
sbb
ss
jo
pop
dec
jmp
push
mov
repz
test
push
and
insl
idivb
or
mov
mov
gs
int3
push
lret
arpl
ljmp
sub
mov
xor
ljmp
jne
pop
leave
pop
js
add
or
mov
sub
pop
addr16
dec
and
sub
adc
push
adc
pop
mov
sbb
rcl
shrb
dec
shll
cmpb
xor
cwtl
xor
test
iret
repnz
cwtl
lret
cmc
push
enter
lahf
add
xor
push
vpmovzxbw
mov
pop
mov
test
in
xorl
mov
inc
cmc
mov
or
enter
fildll
js
mov
pusha
mov
outsb
lcall
jns
cmp
ljmp
cmpsl
ja
loopne
test
push
adc
pop
adc
cmp
jns
movsl
push
and
push
jg
mov
jl
test
imull
std
jp
iret
or
or
mov
je
and
mov
jbe
in
push
adc
add
push
xor
xorl
jmp
in
sbb
add
sbb
push
fisubl
fwait
das
rcrb
mov
outsb
int
in
int
scas
std
push
popa
enter
int
ja
adc
inc
fcmovnu
mov
or
jo
dec
fidivs
cmp
cltd
psubw
jle
inc
icebp
les
lahf
scas
jne
mov
popa
fistps
jo
outsb
out
lret
pop
inc
leave
sub
sub
je
xchg
ret
mov
pop
mov
mov
cld
xor
repz
notl
fldl
hlt
aaa
pop
push
pusha
insb
jl
cmp
mov
fcoml
test
inc
xor
add
mov
sahf
enter
mov
lods
mov
pop
cmp
add
or
scas
jmp
popf
xchg
xor
mulb
popa
sti
not
mov
hlt
mov
shr
inc
dec
cmp
adc
in
daa
sub
or
sbb
mov
es
into
cmc
jo
mov
ljmp
pop
clc
xor
mov
stos
shrb
fsub
mov
in
or
xor
jmp
pop
mov
pop
sub
push
fucomp
push
std
js
inc
push
dec
hlt
aad
cmp
sub
inc
enter
rcrb
sbb
movsl
xor
and
orl
jmp
negb
add
lods
repz
in
cmc
fmuls
add
call
jp
pop
idivb
cmp
sbb
loopne
ficoml
lock
in
xchg
lock
lret
xchg
test
sub
repz
std
ds
jmp
inc
pop
pop
pop
sub
repnz
lock
mov
ja
imul
inc
les
xor
xchg
pop
repz
jg
adc
outsl
sub
out
lea
insb
js
add
mov
adcb
mov
inc
mov
xor
loope
adc
mov
inc
mov
sahf
push
nop
aad
mov
fwait
xchg
dec
jae
sbb
stos
lods
jae
mov
mov
dec
in
adc
out
jp
push
lcall
pop
pusha
lods
jl
pusha
inc
sub
dec
and
insb
xchg
imul
xchg
rolb
mov
or
and
jns
ds
ficomps
std
jne
inc
je
mov
or
adc
mov
mov
ror
jbe
idivl
inc
enter
mov
in
loopne
adc
xchg
test
lods
arpl
push
sub
ljmp
enter
push
clc
or
mov
mov
or
sbb
cmp
fnclex
cmp
pop
insb
inc
sub
rorl
jecxz
in
cmc
mov
cmpsl
or
mov
mov
cmp
nop
or
insl
mov
sbb
jle
pop
cwtl
pop
pop
and
and
cmp
mov
adc
into
repz
xor
mov
push
lret
dec
pop
jns
or
fidivrl
and
sbb
gs
js
int
inc
int
adc
dec
fsubr
push
add
ret
int
jg
mov
add
icebp
loope
pushf
shlb
pop
aam
cmp
sarb
scas
lcall
adc
lcall
xchg
jp
fs
mov
jns
outsb
cwtl
and
jbe
xchg
lret
and
fstps
xor
idivb
add
repnz
and
ss
jo
test
icebp
push
shll
bound
dec
mov
std
ss
add
add
sub
cwtl
mov
mov
mov
incl
cmpsb
rorl
or
dec
nop
loope
je
shlb
sub
add
mov
xor
jno
mov
xor
inc
adc
lds
xor
adc
or
pusha
xor
jle
sti
push
scas
xchg
insb
xor
cmp
push
mov
bnd
ret
mov
lret
or
fisubs
jecxz
cmpsl
out
fldcw
add
or
lods
imul
jle
jecxz
mov
sbb
enter
rorb
in
insl
mov
pop
jmp
jnp
inc
in
outsl
cmc
mov
js
cs
push
xor
or
jl
popa
insl
test
lods
jp
test
and
xorb
in
mov
outsb
add
mov
les
adc
pushf
cltd
pop
sub
popa
add
movsl
roll
insl
mov
lcall
popf
outsb
sbbb
push
add
add
fwait
jnp
arpl
ret
inc
cmp
dec
gs
xchg
cmpsl
xchg
jns
pop
adc
dec
je
shrb
sbbl
mov
or
in
fs
cmp
lahf
hlt
xlat
cmp
pop
inc
push
dec
dec
xchg
js
add
addb
adc
shl
std
psubd
hlt
dec
xor
xchg
mov
popf
dec
pop
xchg
sbb
xchg
xchg
fnstcw
jmp
cmc
adcb
adc
in
cmp
xchg
in
sbb
ret
insb
fstpt
jns
imul
push
jo
or
aad
lods
xchg
jmp
pop
scas
stc
pop
jle
hlt
mov
pusha
dec
js
testb
aam
cli
mov
sub
pop
insb
fwait
call
les
sbb
sti
jno
lret
pop
push
insl
push
in
repnz
arpl
jno
push
xor
dec
and
and
sub
dec
test
nop
sar
xchg
sti
jns
hlt
sub
sub
inc
mov
fcmovu
movsl
fnstenv
push
xlat
in
test
dec
inc
mov
std
add
dec
imul
fwait
jle
out
jge
rorl
dec
jnp
pop
cmp
loop
inc
xor
xchg
sbb
sub
addl
inc
jp
add
hlt
jecxz
out
xchg
cmc
insb
adc
jns
call
inc
cwtl
and
stos
cmp
iret
rorl
test
jne
movsb
ret
in
fdivrs
pop
pop
mov
cmpsl
gs
lcall
mov
jecxz
inc
pusha
lcall
clc
dec
in
shl
and
fwait
cmp
pop
pop
cmp
es
jmp
negb
sbbl
push
sub
sbb
pop
cmp
push
xchg
mov
aam
adc
leave
jl
outsb
mov
lds
push
push
mov
test
and
add
scas
adc
data16
mov
cmp
xor
sub
rorl
js
xlat
jnp
inc
into
out
adc
jno
nop
xchg
pop
mov
adc
xchg
rorb
jnp
adc
jo
add
add
pop
push
mov
imul
jae
mov
int3
jp
xchg
bound
aad
mov
shlb
mov
push
shl
xchg
leave
and
add
and
mov
pop
scas
mov
jle
js
sbb
pop
push
in
imul
dec
xchg
or
or
pop
or
xor
mov
stc
jo
jae
cmp
sti
and
add
pop
mov
addr16
or
mov
mov
dec
pusha
mov
and
push
push
jmp
xchg
aam
lds
mov
test
fwait
in
jbe
and
sbb
push
jne
dec
adc
flds
jmp
mov
scas
lods
test
and
mov
mov
jb
mov
or
sbb
fidivrs
scas
push
inc
pop
movsl
xchg
test
or
mov
ret
aam
sti
sti
call
fidivrs
mov
inc
sbb
es
sbb
movsb
cs
aaa
fs
mov
stos
mov
mov
mov
push
repnz
xor
rcll
mov
pop
pop
add
pop
or
xchg
cmp
push
cld
push
mov
xor
shr
incb
and
lds
out
ret
mov
test
inc
cmp
mov
cld
icebp
adc
test
push
push
add
dec
sbb
sub
inc
pop
loop
pop
out
pop
xor
pop
push
push
mov
xchg
xchg
dec
add
pop
or
xchg
out
fildl
or
cmpsl
lcall
das
push
imul
and
mov
shrd
call
push
scas
inc
out
mov
fcmovnu
pop
jmp
mov
leave
pop
sub
popf
xchg
in
mov
xchg
inc
dec
mov
sbb
inc
xor
cli
lret
mov
dec
jb
dec
ss
call
push
add
lock
pop
arpl
xchg
adc
jno
xor
inc
dec
lahf
xchg
repnz
and
xchg
in
clc
std
jmp
xor
push
adc
imul
push
subb
jbe
popa
insl
scas
pop
push
in
movsl
int
popa
pop
jle
sahf
loope
ds
add
jmp
sub
push
mov
in
notb
sub
push
sahf
jg
xchg
ja
cmp
ds
enter
cld
movsb
cltd
inc
or
gs
jb
mov
jne
xchg
out
sub
and
scas
adc
push
lahf
je
shrb
insb
stos
pop
femms
insb
jno
loopne
int
daa
mov
ja
jecxz
xchg
sbb
cmpsl
scas
pop
sbb
push
mov
mov
cmp
mov
cmpsl
inc
mov
mov
inc
add
add
lock
jne
jno
mov
popf
or
and
sahf
jnp
mov
push
orb
das
lret
jecxz
sbb
repnz
dec
rep
mov
aam
or
sbb
shlb
das
mov
and
lret
int3
hlt
outsl
push
movd
clc
stc
pop
pop
inc
outsl
jae
and
arpl
ljmp
xor
mov
hlt
in
sbb
jecxz
add
xchg
dec
push
lret
popf
sub
mov
xchg
mov
jp
xchg
cmp
mov
cli
inc
leave
pushf
rorl
mov
mov
scas
pop
aas
and
jno
sarl
inc
popa
push
pop
sbb
mov
jmp
std
test
mov
ljmp
xchg
jmp
sub
or
cmpsb
sbb
xchg
cli
ret
pop
xor
adc
xchg
pushf
or
jmp
fdivrs
sub
mov
push
test
dec
xchg
lds
sub
inc
adc
icebp
jge
mov
sarl
xor
adc
or
push
gs
mov
shlb
mov
ror
jno
mov
mov
xor
int
dec
fistl
pop
mov
xchg
leave
push
jne
sbb
pop
cmp
out
jecxz
inc
clc
sahf
cli
clc
sub
sbb
sub
out
add
push
pushf
xor
jae
mov
dec
lock
stos
mov
or
push
out
mov
ljmp
mov
mov
aas
add
out
pop
ret
xor
fnstenv
lea
xor
idiv
xchg
iret
dec
push
cmpsb
xor
or
loopne
and
lahf
inc
mov
jo
mov
push
das
popa
cmp
lds
cs
inc
loopne
sbbb
mov
adc
cmp
or
xor
fldt
inc
in
or
mov
xchg
cmp
mov
jnp
cld
push
sbb
xor
out
nop
cmp
xchg
gs
pop
mov
push
mov
add
shlb
fnstcw
xor
aad
test
or
test
mov
lcall
push
scas
adc
xchg
jbe
xor
mov
fwait
pop
adc
in
push
aad
mov
mov
clc
xor
adc
sub
or
add
xor
inc
stc
pusha
mov
cwtl
int
push
cmp
loopne
or
movsl
cmp
loope
popf
push
bound
and
leave
inc
in
mov
inc
mov
sub
inc
aam
imul
xchg
jne
and
adc
insl
fdiv
stos
lds
je
aaa
and
dec
sti
adc
inc
aas
sub
cmp
xchg
jge
aaa
stc
mov
loopne
aam
scas
cmp
js
pop
jl
lahf
push
inc
aaa
push
loopne
fadd
mov
stc
lahf
test
shll
mov
stos
xor
loop
xchg
lret
mov
add
repz
faddl
out
sbb
in
mov
ret
mov
pop
loopne
push
inc
ljmp
xor
daa
jl
mov
cltd
cmp
call
add
and
and
push
ja
xlat
adc
cmp
xchg
push
loopne
add
movsb
imul
clc
mov
add
movnti
stc
cmpsl
and
mov
pop
sbb
stc
lods
rcrl
xchg
and
adc
xchg
xchg
add
fcmovb
mov
cmp
push
inc
leave
inc
imul
mov
pushl
mov
jo
stos
popf
mov
insl
dec
aaa
std
push
inc
push
xchg
ret
adc
out
cmp
xor
push
testb
or
dec
mov
cmpsl
filds
xor
pop
dec
mov
push
fwait
loopne
call
aam
test
cmp
pop
push
add
rcll
sbb
sub
fldcw
sub
fstpl
sbb
fs
inc
les
dec
jle
fbstp
pusha
movsl
mov
mov
es
les
aaa
mov
fnsave
daa
into
jmp
mov
xchg
fs
push
aaa
outsb
ret
mov
test
sarb
pop
sub
movsb
inc
lret
dec
movsl
loopne
add
es
shl
push
cmp
mov
jne
jb
popf
sbb
sbb
mov
mov
jne
sar
loopne
scas
lret
filds
push
imul
mov
lcall
imul
ret
xchg
fdivrp
xor
shll
and
push
jg
xor
test
push
sbb
xchg
dec
adc
push
adc
xchg
mov
das
sbb
jae
adc
pop
test
jp
cmp
lahf
mov
stc
ffreep
cmp
repnz
daa
lea
addr16
shll
pop
dec
loop
and
imul
mov
movsl
add
xchg
jge
mov
fwait
cmp
mov
add
pop
inc
mov
cmp
mov
xchg
movsl
jne
mov
jbe
push
mov
out
jl
or
pop
enter
inc
imul
mov
test
ljmp
leave
push
mov
jg
ss
outsb
adc
mov
adc
add
xor
pop
jecxz
xchg
sbb
xor
pop
scas
jmp
js,pt
jle
sbb
mov
xlat
aaa
mov
inc
fwait
sti
pop
std
xchg
add
out
repnz
adc
adc
add
outsb
fcomps
push
jns
add
mov
jne
xchg
cmp
push
aaa
sub
shrb
or
ret
pop
jb
das
fmull
sub
sub
imul
cwtl
sub
mov
push
pushf
push
rcl
jne
add
hlt
mov
cmovs
scas
xchg
cmc
mov
sub
push
lods
dec
aaa
and
stc
adc
les
sbb
push
test
jle
out
std
jge
fs
sbb
cli
out
shr
jo
jb
cltd
ficoml
jnp
push
scas
test
mov
jb
cmp
sub
adc
mov
int3
mov
insl
cs
push
or
sbb
fs
sbb
icebp
jl
mov
sbb
mov
in
and
xor
in
lods
cmp
clc
loopne
inc
fwait
xchg
imul
imul
mov
mov
movsb
add
mov
cli
mov
inc
outsb
mov
and
cmp
pop
data16
or
inc
imul
add
xor
and
lcall
mov
and
adc
leave
les
lods
leave
and
outsl
jg
repz
pushf
cwtl
sbb
dec
mov
shlb
ret
mov
insl
add
dec
jno
cltd
out
mov
inc
daa
mov
call
xor
notb
xchg
inc
subb
dec
leave
add
out
sbb
dec
xlat
push
mov
dec
jle
xchg
xchg
xlat
loop
pushf
mov
roll
inc
and
add
data16
das
cmp
or
mov
jnp
push
stos
lds
add
inc
sub
testl
mov
sbb
hlt
lods
bnd
aam
xor
mov
scas
outsl
jp
pop
jne
lods
cmp
dec
jg
stos
test
adc
jl
mov
xchg
idiv
or
jb
jae
adc
stc
jnp
mov
lcall
mov
popf
sub
xchg
jno
pusha
xchg
into
push
data16
push
mov
mov
cmp
enter
jl
push
insb
cld
jno
inc
rcrl
xchg
mov
or
lcall
xor
adc
cwtl
test
fbld
dec
sarl
or
pop
out
cmp
mov
aam
push
inc
sti
jo
sbb
jb
fisubrs
jmp
sbb
fistl
mov
jmp
pop
adc
das
cwtl
cmp
cmp
int
insb
mov
add
jl
mov
mov
data16
pop
fiadds
insb
lret
or
sbb
adc
jb
mov
xorl
adc
dec
dec
mov
aaa
or
xor
pushf
and
xor
and
daa
lret
mov
cmp
or
push
cmp
xchg
fcmovnb
movsb
dec
inc
or
push
jb
int
insb
and
mov
pop
sbbl
cmp
mov
mov
mov
movsb
test
adc
out
les
mov
mov
jae
jo
sub
fdivs
mov
fdiv
sub
sbb
sbb
bound
leave
sbb
jge
mov
int
mov
inc
xor
sub
and
mov
imul
sbb
add
or
sub
test
adc
outsb
inc
fnstcw
dec
iret
aam
sbb
aam
sahf
mov
repz
sub
gs
bound
out
in
pop
dec
in
add
jb
dec
je
cmc
add
and
ss
mov
xchg
sbb
pushf
sarl
mov
sbbl
push
push
ret
push
cwtl
mov
jg
dec
push
call
imul
xchg
inc
cltd
fistps
push
sbb
jmp
cli
loope
rcrb
das
mov
xchg
pop
dec
sbb
mov
loop
pop
loopne
and
lcall
xor
int
fisubs
fiadds
mov
sbb
inc
addb
out
dec
adc
mull
sbb
loopne
pushf
pop
xor
je
cmp
sub
sub
mov
jbe
cmp
mov
scas
xor
lcall
fldenv
idivl
mov
lock
out
push
push
and
push
push
push
pop
leave
rcrl
cmp
lods
into
or
xchg
aad
repnz
movsl
jo
add
cli
idivl
jb
mov
cmp
mov
mov
dec
jae
out
sahf
leave
leave
push
ja
daa
push
sbb
cmp
xchg
leave
push
mov
push
sbb
bound
mov
out
sbbl
rorl
inc
xor
dec
mov
sbb
sub
aas
cmp
hlt
and
sti
cli
sbb
cwtl
pop
loope
push
mov
jmp
push
inc
pop
xchg
test
loopne
push
movsb
fbstp
cli
pop
mov
loope
jbe
int3
lods
and
mov
jno
jnp
inc
in
out
or
add
or
data16
pop
aas
enter
push
stos
jnp
lods
dec
pop
cmc
outsb
sbb
dec
sbb
mov
or
adc
data16
rolb
adc
xchg
xor
ret
push
add
pop
jae
xchg
sahf
xchg
daa
sbb
sub
popa
dec
push
mov
jne
das
or
data16
or
lea
or
cmp
cmp
or
dec
das
shlb
pop
sbb
mov
add
sbb
push
jno
hlt
push
lcall
ds
add
xor
cltd
outsl
movsb
sbb
cltd
imul
sbb
fwait
sub
das
pop
cmc
mov
test
pushf
movb
adc
and
mov
test
push
xor
std
icebp
sar
leave
lea
pusha
pop
int3
pop
ss
shr
sub
xchg
mov
in
iret
daa
out
add
pushf
das
pop
ds
in
jp
lahf
push
xor
stos
inc
inc
mov
lahf
addr16
imul
mov
fistpll
mov
pusha
js
cmp
or
lea
rorb
cmp
into
adc
movsl
pop
inc
jmp
dec
push
js
cmp
cltd
adc
pop
cli
or
jno
push
sbb
xor
dec
push
push
int
mov
jno
add
push
jo
xchg
xchg
or
daa
out
stos
test
dec
xchg
add
test
mov
ja
sarl
les
or
ret
sahf
xchg
dec
cmp
sub
and
cmp
test
rcrl
mov
loope
or
and
js
jns
popf
mov
lds
adc
pop
dec
xor
divl
and
stos
jl
mov
mov
outsb
or
sbb
lret
push
pop
cwtl
andl
pusha
dec
lock
js
test
div
cld
add
jp
xor
mov
insb
xchg
aas
orl
lea
out
cmp
cli
mov
inc
xchg
ret
adc
fucomi
stos
fdivrs
add
jmp
fwait
sbb
mov
cli
outsb
cmp
sbb
pop
dec
jbe
or
les
ljmp
sbb
sbb
xchg
pop
add
xor
inc
jae
es
jb
das
dec
rcrl
scas
aas
mov
stos
cmc
inc
inc
push
out
cmpsb
mov
fwait
decb
dec
test
in
xlat
test
icebp
insl
inc
xor
aaa
add
test
js
jge
jns
fstl
adc
inc
int3
push
out
stos
lods
iret
nop
imul
shrb
xorl
sub
fucomp
sbb
dec
dec
into
cli
or
in
fsts
mov
int3
nop
mov
jnp
dec
push
lds
inc
xchg
into
mov
mov
jbe
mov
mull
push
jb
jle
vrcpps
loope
aaa
jp
enter
fsubr
pushf
push
in
adc
insb
mov
imul
fisttpll
jecxz
ljmp
push
nop
repnz
lret
cmp
jecxz
or
and
in
pop
std
call
mov
dec
mov
pusha
fs
xor
and
fmuls
mov
and
or
rorb
jg
add
push
pop
inc
inc
ja
or
lret
movsb
mov
mov
in
popf
fildll
gs
or
adc
rclb
ja
sbb
inc
std
adc
jmp
dec
subb
arpl
sbb
rorl
mov
loopne
adc
jne
outsb
mov
xlat
outsl
xchg
testb
and
out
xchg
mov
repz
sub
jg
push
sti
dec
into
pop
xchg
dec
xchg
das
inc
and
aaa
add
cmp
cmp
sub
mov
push
std
sbbl
mov
jne
into
stc
xchg
mov
cmc
or
mov
cmp
pop
sub
aas
out
aam
orl
stos
lahf
out
push
pop
mov
loope
ds
iret
add
mov
jle
out
es
inc
push
adc
mov
mov
push
push
or
wrmsr
std
xlat
xor
and
addr16
xchg
psadbw
imul
cld
add
loopne
cmpsb
pop
iret
iret
mov
pusha
data16
scas
sub
xchg
mov
mov
xchg
aam
popf
shll
es
xor
in
cmp
cmp
lret
lcall
ss
cmp
sysret
and
leave
retw
jmp
mov
ret
mov
jecxz
xchg
mov
inc
xor
add
rclb
inc
xchg
pop
cmpsl
inc
enter
or
dec
mov
mov
in
push
das
jae
js
pop
sub
mov
pop
stos
lcall
pop
pop
into
jmp
addr16
loop
dec
mov
outsl
xchg
stos
pop
mov
shlb
add
push
popa
sbb
shrb
add
cmp
jg
enter
pop
jb
ret
cmp
pop
mov
push
xlat
les
push
xor
push
mov
movsl
cmp
cmp
and
pop
je
dec
pushf
daa
and
push
jo
push
ja
adc
scas
sub
adc
push
ja
cltd
add
rorl
xor
xrelease
ss
push
fwait
sub
and
ljmp
pop
in
mov
sbb
pop
ret
test
fbld
xor
jnp
mov
shll
enter
adc
dec
xor
sbb
mov
loop
inc
sub
mov
in
jb
lret
xchg
adc
cld
mov
cmp
bound
fbstp
add
lds
les
push
loope
xchg
pop
dec
adc
mov
cmovae
fsubs
inc
vxorpd
add
mov
push
cwtl
jl
jb
pop
pop
cmpsb
aas
pop
mov
stc
push
push
outsl
pusha
je
gs
dec
popf
inc
in
mull
cwtl
cwtl
stos
and
sahf
sbb
inc
push
add
lcall
mov
or
mov
int
xor
mov
mov
imull
jnp
shl
stos
add
mov
loopne
inc
leave
pop
scas
clc
jne
shrl
ficomps
jge
jg
push
mov
xorl
das
mov
lock
stc
fwait
cs
xchg
cmp
in
outsb
push
push
mov
cmpsb
sbb
insl
adc
push
inc
jecxz
cmc
xor
jno
and
daa
xchg
sarb
jb
inc
aas
aas
push
cmpsb
or
mov
aad
xlat
jbe
pusha
add
stc
fdivr
stos
mov
adc
rorl
dec
orl
mov
mov
imul
xor
outsl
rep
lahf
jbe
xor
and
cwtl
cmpsl
mov
scas
insb
mov
ret
sub
pop
xchg
mov
scas
lret
fdivrs
pop
xchg
sbb
mov
adcl
pusha
sub
cmpsb
cmc
or
ret
movsl
jb
mov
dec
mov
xchg
test
fadds
fstpl
push
mov
cmc
adc
push
xchg
call
cmp
jb
dec
stc
hlt
leave
iret
mov
fstps
in
das
daa
jmp
xor
inc
insl
btc
add
fcoms
loope
and
lods
xor
jge
rorl
dec
pop
data16
aad
lods
pusha
or
mov
mov
cltd
pusha
jg
xchg
fwait
pop
test
int
arpl
frstor
lcall
shrl
pusha
inc
push
repz
into
call
orb
mov
negb
fwait
sbb
xlat
jne
nop
jp
add
stc
and
fsubrs
jp
fsubl
les
pop
insb
push
jb
mov
scas
mov
push
test
push
std
push
repz
fwait
dec
into
sbbb
adc
inc
aaa
repz
jb
pop
mov
nop
sti
into
int3
cmp
popf
mov
adc
pop
cmp
dec
bound
jae
push
mov
subb
insb
popa
ljmp
jbe
inc
push
cmp
cmp
scas
adc
add
sarb
cltd
es
pop
pop
jecxz
mov
pushf
mov
sub
and
out
rolb
push
mov
mov
fwait
add
cmp
cmp
xor
iret
add
xchg
pop
sbb
cmp
ds
aam
ficoml
xchg
ss
inc
jb
leave
ret
js
fldenv
and
inc
insl
cmp
xchg
loope
lds
mov
push
pop
push
xchg
pop
cmp
lea
out
cmp
and
push
pusha
jne
mov
push
sub
ret
imul
gs
shlb
int3
pop
cmp
pusha
cltd
aas
cmp
add
push
push
and
outsl
in
mov
data16
insb
mov
push
xchg
ljmp
and
inc
loop
sahf
inc
fisubl
adc
mov
xor
add
push
cmpsb
or
std
mov
roll
jle
jge
push
leave
jno
fistpl
jg
leave
dec
sbb
das
adc
and
cmc
into
push
mov
sub
adc
or
pop
and
data16
mov
sbb
jno
ficompl
inc
xchg
lahf
cmp
insl
ljmp
movsb
cmp
popf
sub
lret
int3
push
gs
das
mov
cmp
out
outsb
shlb
aad
jge
adc
movsl
imul
fsub
jmp
test
outsl
movsb
mov
or
ss
mov
and
adc
addr16
bound
mov
jnp
push
xchg
mov
aad
add
and
cmp
gs
sahf
shl
push
out
loopne
xor
test
sub
popf
add
pusha
jo
mov
push
vmptrst
das
clc
bound
mov
nop
inc
repnz
push
xchg
pop
jnp
ja
je
or
mov
popa
icebp
roll
pop
inc
cmpsl
out
dec
jecxz
adc
pop
sahf
in
or
les
imul
fwait
loopne
jmp
popf
popf
jp
arpl
jne
data16
mov
mov
cmp
lret
icebp
jge
inc
mov
pop
sbb
adc
mov
pop
popa
and
test
sarb
or
nop
mov
addr16
xlat
dec
es
dec
cmpsb
test
pop
movsb
mov
inc
sti
frstor
cmp
lret
test
loope
int3
add
rorb
in
or
or
cmpsl
bound
mov
scas
lea
popf
or
repnz
fsub
movsl
mov
xor
movzwl
ljmp
imul
pop
notl
cmpsb
dec
mov
or
test
mov
sub
mov
sbb
mov
inc
add
fisubrl
in
add
sbbb
cmpsb
adc
jmp
jge
cli
pop
xor
and
popf
jo
neg
lods
std
pop
adc
incl
sub
fisubl
dec
testl
js
jbe
push
jle
jb
outsl
jns
lea
mov
shrb
daa
lret
mov
cwtl
sub
imul
mov
inc
sbb
adc
jbe
imul
js
lret
inc
mov
test
mov
dec
pop
dec
push
pusha
sarb
cld
insl
inc
movsb
adc
fwait
jle
addr16
lds
jmp
and
inc
xor
inc
or
pop
sub
adc
push
pop
scas
enter
aas
pusha
push
mov
pop
stos
outsl
test
pop
rclb
cmpsl
and
pop
dec
mov
mov
mov
call
cmpsl
lcall
push
ljmp
mov
cmp
and
cmp
je
idivl
mov
inc
mov
das
inc
rcl
xchg
lods
fld
push
sub
flds
repnz
adc
fistpl
pop
cmp
cmp
push
mov
adc
dec
icebp
sub
cli
test
jne
pop
mov
repz
in
push
cmc
add
jnp
inc
in
scas
jae
xor
loop
sahf
movsb
out
pop
add
xor
inc
adc
xor
mov
in
lcall
xor
nop
aaa
int3
lret
dec
fstpt
loop
fisttpll
jmp
and
leave
add
adc
aaa
imul
sub
dec
ss
icebp
sbb
fldcw
fwait
sahf
dec
inc
gs
push
loopne
js
mov
xor
mov
sub
lret
dec
lods
sub
movsb
mov
pusha
sbb
push
mov
jo
cmp
jle
outsl
sbb
rcr
add
adc
and
xor
test
and
pop
sub
jb
xchg
cmp
inc
inc
sahf
aad
xchg
or
push
pushf
in
xchg
mov
xchg
jae
jo
mov
xor
pop
dec
hlt
mov
cltd
in
adc
scas
movsl
push
jne
inc
lock
mov
mov
or
sub
push
call
mov
jg
roll
mov
xorl
mov
rorl
xor
ss
push
dec
xor
jno
mov
sub
add
mov
mov
inc
int
sbb
sahf
cmpsb
ljmp
jb
out
jbe
add
sub
push
and
mov
push
icebp
test
pop
dec
neg
shl
in
mov
icebp
sub
dec
cmp
jae
test
and
xchg
add
rorb
js
sub
inc
lods
mov
xchg
cmpsb
mov
mov
loopne
pop
or
mov
dec
lock
cs
ret
mov
and
xchg
adc
or
push
pop
add
dec
push
enter
pop
or
popa
jle
and
cmpsb
js
fldcw
pop
cmpsb
add
and
out
outsb
test
xchg
cmpsb
test
lret
cs
pop
fwait
pop
lcall
test
mov
popl
sbb
jns
cmp
xbegin
and
mov
cmc
cld
xor
add
dec
or
out
call
pop
int3
mov
xchg
push
dec
cmc
call
jae
insb
jp
pop
ret
test
pusha
aas
sbb
andb
int
rorb
xorb
aaa
mov
jecxz
mov
ret
in
enter
xor
and
mov
cmc
jecxz
aam
cmpsb
ljmp
mov
or
push
ret
cld
loopne
enter
pusha
iret
xor
cmc
std
inc
or
insb
xor
add
jg
add
cmp
ss
adc
dec
cld
btr
or
out
inc
sub
push
jno
lret
adc
jnp
xor
and
push
stc
jg
imul
inc
lds
push
test
dec
xchg
sbbb
xchg
mov
xor
mov
loop
leave
xchg
jl
inc
inc
fmuls
nop
rorl
out
ret
std
stos
cmp
xchg
hlt
mov
test
sbb
cmp
out
iret
lcall
ret
xor
mov
dec
inc
test
mov
push
jge
outsb
jae
adc
stc
add
out
xor
roll
pusha
xor
push
scas
or
pop
insb
inc
mov
fadds
inc
fdiv
and
in
mov
and
loopne
push
dec
fs
loop
pusha
mov
fnstenv
repnz
mov
dec
dec
dec
mov
mov
jp
inc
std
pinsrw
stos
sbb
adc
mov
jo
mov
add
xorl
pushf
repnz
jl
dec
movsb
xchg
mov
xchg
je
mov
inc
test
int
ds
js
outsb
jae
or
sti
xchg
xor
decb
cld
and
and
dec
test
sub
or
outsb
into
fnstenv
inc
in
xor
in
jo
loope
nop
mov
aaa
cmp
int3
pop
pop
xor
push
popa
mov
jae
mov
and
push
fstpt
sbb
and
cmp
or
data16
pop
pop
inc
hlt
push
add
mov
ss
rcll
mov
jecxz
sub
pop
cmp
into
mov
or
inc
in
repz
test
sub
mov
cmp
test
seta
and
imul
lcall
ljmp
and
in
mov
xchg
in
fistl
iret
pop
cmp
pop
xor
in
mov
xchg
ja
pop
pusha
cmp
lea
stos
or
sahf
stc
ret
fsubr
pop
cmp
push
adc
push
jne
cmp
add
pop
pop
hlt
mov
call
mov
shlb
adc
test
test
leave
popl
loop
sbbb
loope
cmpl
and
push
add
movsb
push
pop
xor
mov
imul
aaa
mov
jle
xchg
into
mov
mov
lret
shrl
loop
sbb
mov
cli
inc
dec
enter
cmp
shlb
cmp
xchg
jg
inc
or
add
add
cmpsb
mov
arpl
mov
jg
or
mov
popf
push
mov
add
jl
lret
call
xor
movsb
pushf
mov
out
lret
mov
xchg
lea
lret
fcoms
cli
cs
cli
sbbb
adc
leave
repz
das
jae
mov
sar
dec
lcall
push
aad
sahf
mov
aaa
xorb
dec
mov
xchg
push
add
inc
outsb
push
cmp
sub
sub
and
sbb
stos
movsb
jno
iret
jg
mov
insb
jb
sbb
dec
inc
pop
fstpt
icebp
xor
push
out
sub
xchg
add
mov
adc
iret
mov
clc
jbe
fs
cmp
lea
mov
xchg
mov
jo
or
roll
flds
cmp
lods
outsb
inc
sbb
add
mov
sbb
arpl
mov
pop
cs
jg
push
stos
jp
rol
push
pushf
push
dec
aam
cwtl
ds
dec
mov
adc
push
inc
movsl
push
fcom
inc
sub
mov
les
jl
scas
lods
gs
in
movsl
push
ret
es
or
inc
enter
cwtl
aas
add
cltd
pop
lahf
test
push
adc
movsb
iret
mov
sarl
insb
pop
imul
adc
dec
test
xor
pop
arpl
movsb
jne
mov
jns
sub
inc
loopne
mov
ficomps
and
mov
pusha
and
or
icebp
pop
inc
in
push
jg
out
dec
js
subl
mov
ja
push
adc
adc
in
or
jg
int
inc
rolb
push
cmp
in
mov
enter
fistpl
push
in
sbb
cmp
pusha
subb
mov
sbb
xor
jecxz
ja
ret
push
add
push
das
fisubrl
xchg
xchg
push
fadds
sub
xchg
cmpsb
and
xchg
xchg
inc
iret
jl
inc
aad
sbb
jle
arpl
test
or
ss
lods
push
jne
xchg
push
in
sub
scas
mov
fwait
cmpl
call
add
push
add
pop
cmp
fistpll
mov
pop
push
cmp
xor
cmp
pop
rorb
push
adc
xor
sahf
mov
mov
rcrl
or
sbb
repz
fisttpll
mov
ja
cmp
loopne
rcll
mov
or
pop
push
fwait
push
and
cmp
outsb
xchg
mov
ficoms
push
aaa
int3
cmc
test
or
ds
cmp
xchg
dec
rolb
mov
add
lods
add
pop
pop
sub
pop
and
outsb
push
pushf
push
jmp
outsb
sub
mov
and
xchg
fnstcw
scas
adc
jp
test
pop
jb
mov
and
es
leave
sub
neg
subb
push
add
sbb
outsb
adc
add
push
sarl
rorb
cmp
loope
or
ja
mov
cmpsl
loop
inc
mov
push
mov
out
pop
mov
sbb
mov
fcomps
inc
lds
pop
stos
daa
dec
call
or
dec
mov
ljmp
pop
cmp
dec
sub
inc
sbb
in
clc
mov
push
jl
lods
add
mov
dec
push
shll
jbe
cmp
push
sub
xchg
xchg
aaa
pop
and
nop
push
add
or
rcl
aam
imul
cltd
adc
push
sub
mov
jge
gs
jecxz
movsb
mov
pop
out
cmpsb
mov
jb
aaa
inc
add
xor
and
lock
out
pop
xor
jne
ror
sti
jle
cmp
jmp
icebp
jge
cwtl
bound
out
imul
xchg
mov
xchg
add
jnp
jmp
fdivp
sbb
leave
movsl
movsl
test
sbb
sti
jp
jmp
inc
and
mov
test
outsb
cmp
aam
and
test
cwtl
fs
notl
pop
ret
ljmp
fnsave
sub
imul
mov
out
sub
movd
pop
mov
cmp
push
xor
and
or
jno
out
sub
or
fdiv
movsl
add
inc
loope
push
mov
cs
popf
adcb
xchg
leave
ljmp
mov
or
mov
push
pusha
loope
loopne
mov
jae
sub
es
aas
loope
into
insb
dec
gs
sub
push
or
and
adc
cmp
adc
sahf
mov
inc
sub
lds
mov
pop
cwtl
shrd
cmp
pushf
fistl
test
popf
sub
inc
jmp
jmp
test
inc
xorl
in
jnp
sar
push
mov
dec
xchg
sbb
jbe
mov
dec
enter
aam
into
mov
or
add
add
lea
or
loop
lds
adc
mov
stos
jno
mov
push
repz
cmp
mov
mov
out
in
add
xchg
mov
repz
xchg
mov
rolb
mov
cmp
rolb
mov
xchg
adc
mov
aam
lret
cli
arpl
push
ficoms
mov
fcmovu
jge
int
push
cs
mov
insl
mov
adc
lds
fwait
dec
cmpsb
in
adc
icebp
inc
shlb
jbe
pop
sub
cmp
adc
dec
clc
pusha
or
push
push
and
inc
stos
push
dec
mov
out
das
roll
pop
mov
dec
pop
mov
fs
cmp
mov
aas
mov
pop
pop
cwtl
xorb
xchg
lahf
inc
xchg
stos
test
mov
in
cmpsb
inc
lcall
xchg
subl
stos
push
arpl
idivb
lcall
je
jnp
sub
xlat
ficompl
cmpsl
inc
pusha
jle
sbb
cmpsb
sarl
jge
jns
ret
lcall
cmpsb
mov
cmp
pop
imul
stos
in
mov
pop
arpl
push
dec
mov
or
int
add
inc
movb
ret
xchg
lock
into
push
das
sbb
pop
popa
sbb
or
jmp
mov
fildl
add
push
mov
xor
test
gs
out
cmp
mov
inc
imul
mov
out
mov
out
push
xor
aam
cmpsb
dec
stos
add
lea
dec
fwait
das
aas
stos
fisubrs
stos
sbbl
or
ret
pusha
push
mov
cmp
out
xchg
rclb
mov
dec
dec
add
lcall
pushf
test
loope
adc
inc
cwtl
push
sub
rorl
mov
add
dec
pushf
xchg
cmpsb
cmp
push
and
inc
ljmp
fistps
mov
xlat
jge
mov
repnz
leave
sbb
jb
and
jno
push
sub
push
fadds
jecxz
push
int
mov
xor
xchg
iret
inc
push
sub
ss
fmul
int3
daa
lock
rol
stos
xchg
and
inc
imulb
lock
sub
lea
jle
xchg
subl
or
xor
outsb
icebp
shll
testb
sub
daa
es
icebp
leave
daa
stos
mov
std
js
int3
pop
inc
lret
ds
adc
in
xchg
inc
cmpsb
out
mov
cli
jns
sub
subl
adc
cs
icebp
clc
aam
push
es
scas
movsb
fdivl
pop
leave
sbb
test
sub
ljmp
jb
into
pop
test
inc
push
cmc
jmp
dec
pop
arpl
in
pop
loopne
mov
repz
sbbl
cmpsb
bound
inc
ds
inc
push
xor
je
stc
fstps
jge
movsl
cmp
sub
jg
inc
sbb
outsb
push
xlat
mov
rcrl
adc
mov
out
sub
dec
sbb
test
mov
repz
leave
stos
mov
fstpl
out
scas
gs
pop
mov
pushf
cli
lret
xchg
add
pusha
sbb
jmp
cmpsl
jmp
cmpsl
jg
push
sub
andb
fsqrt
ds
sub
push
movsl
mov
sbb
clc
outsb
test
imul
stos
add
mov
fldenv
cmc
xlat
inc
mov
inc
ja
div
dec
push
outsb
inc
or
add
cmp
movsl
xchg
sbb
adc
inc
xor
nop
mov
add
clc
lods
mov
dec
add
or
and
insb
sbb
popa
pusha
dec
sahf
mov
not
add
ficomps
hlt
mov
ds
sti
sti
test
mov
ljmp
adc
mov
push
cmp
and
jbe
stos
std
imul
push
or
and
nop
dec
dec
inc
lcall
mov
fnstcw
mov
add
push
cmp
ficomps
in
mov
push
jg
movl
jp
push
in
rol
stos
mov
xor
mov
xchg
mov
push
cli
push
cmp
sub
sti
movsl
cmp
je
fimull
sbb
jo
mov
pmullw
push
mov
push
cwtl
jnp
jp
out
movsl
mov
mov
dec
inc
popf
add
fs
lea
adc
shlb
mov
push
mov
fidivrs
push
push
push
push
xchg
cmp
mov
mov
int3
insb
ljmp
mov
ret
add
enter
stc
lret
cltd
setnp
push
pop
jmp
leave
inc
ror
popa
mov
xchg
les
lock
or
enter
rcll
mul
hlt
stos
mov
mov
jns
push
cmpsl
inc
or
in
scas
js
mov
or
lcall
pop
test
movsl
arpl
mov
ret
out
mov
sbb
xor
dec
dec
pop
inc
xor
test
mov
mov
rclb
add
xchg
ljmp
sbb
add
inc
and
or
cmpl
dec
dec
mov
dec
or
or
inc
lods
ljmp
pcmpeqd
icebp
lcall
stc
and
xchg
call
push
cwtl
fs
out
mov
in
or
dec
push
insl
mov
rcr
lods
inc
fwait
shrl
pop
scas
test
mov
insb
sbb
scas
loopne
gs
xor
ss
insl
push
jmp
lds
arpl
into
xchg
das
jo
aad
je
aaa
iret
notb
in
stos
dec
and
pop
cmp
in
and
mov
jp
loopne
imul
std
jle
nop
inc
push
lea
es
cld
cmc
inc
lret
mov
push
mov
aad
into
xchg
rcr
sti
rol
fldenv
test
mov
out
push
sub
and
insb
jno
mov
enter
and
and
mov
push
add
mov
sbb
push
mov
mov
jp
cli
pop
sbb
js
jo
inc
pop
jecxz
mov
loopne
nop
cmp
icebp
push
xor
negl
ja
icebp
das
fdivl
sbb
mov
add
jb
test
xor
lret
ljmp
in
aad
inc
jg
mov
cmc
repz
jo
mov
inc
outsl
and
adc
mov
mov
stos
jp
jge
xchg
subl
pusha
push
pusha
push
in
xlat
sbb
js
pusha
mov
outsl
icebp
rorl
pusha
lahf
les
inc
mov
or
popf
sub
and
ret
std
jg
xor
cmp
lret
cmp
jle
xlat
lods
push
fdivrl
ret
addb
cmp
mov
les
mov
jno
push
xor
cli
inc
aam
xchg
scas
imul
jp
leave
out
cmpsb
or
hlt
sbb
inc
jp
jo
leave
pop
jbe
sahf
cmp
or
or
push
repnz
adcl
jbe
cmp
jno
hlt
ja
mov
sub
cli
fists
shll
imul
cmp
jb
aaa
adc
call
popf
jo
cld
cs
arpl
movsb
imul
xchg
cs
mov
int
lcall
incl
pop
jbe
stos
arpl
lret
push
add
and
bound
lea
or
ds
pop
pop
push
pushf
and
mov
addr16
scas
stos
xchg
sbb
dec
aaa
sub
xor
jnp
movsb
push
fs
nop
sbbb
loope
lods
jno
push
sahf
lods
leave
mov
ret
pop
fists
dec
add
mov
nop
aaa
sbb
lret
push
sub
clc
pop
lea
sahf
lods
lcall
stos
mov
stos
pop
add
pop
jecxz,pt
dec
lea
jecxz
rcll
in
mov
lds
imul
pop
stos
add
jo
imul
dec
push
sub
pop
fcoml
arpl
jo
daa
lock
std
pop
test
adc
test
or
leave
push
loope
cmp
jmp
push
xchg
insertq
jns
pop
push
imul
scas
insb
aaa
rorb
loop
pop
fnstsw
pop
or
push
adc
shr
gs
jg
jg
es
and
lds
bound
sbb
push
and
lret
jecxz
lock
test
push
pop
jecxz
imul
dec
lock
push
leave
loop
imul
addr16
xchg
fwait
add
repz
fcmove
adc
js
sbb
in
test
xchg
lret
add
sub
and
je
pop
test
cmp
fsub
decl
jg
cmpsb
mov
jb
fiaddl
pop
hlt
les
out
sbb
dec
pop
ret
mov
cmp
call
es
daa
mov
rcrb
mov
fidivs
aam
cmp
dec
mov
xor
mov
and
or
shll
cmp
movsb
andb
std
and
adc
ljmp
lea
sti
jae
rorl
addr16
dec
adc
leave
sbb
and
ljmp
in
lock
sub
sbbl
fldt
jbe
rolb
imul
hlt
insl
imul
cmp
adc
mov
outsb
or
push
movsl
mov
stos
mov
jl
adcl
mov
xor
nop
std
mov
cli
lock
cmc
cmp
jge
sti
cmp
push
sub
inc
mov
sub
idiv
mov
cli
shl
popf
sub
mulb
js
repnz
std
scas
and
sub
add
inc
add
sar
jbe
mov
mov
inc
jg
pop
int
ficompl
mov
and
lret
fidivs
mov
lea
call
sub
push
xor
sbb
xchg
pop
or
ret
in
xorb
pop
sbb
lret
lcallw
out
sahf
iret
ljmp
push
daa
push
push
pop
bnd
mov
xchg
incl
int3
flds
adc
xchg
test
mov
scas
test
jmp
in
lret
jg
sub
shll
insb
test
out
mov
hlt
ss
jnp
fwait
lock
int3
hlt
imul
jle
enter
xor
xor
pop
xchg
mov
dec
mov
push
mov
dec
add
popa
push
dec
xchg
cmpsl
and
adc
push
iret
mov
fldcw
fcoml
mov
ret
xchg
in
ljmp
movsb
ds
mov
mov
cmp
cli
cmpl
cmp
pop
ss
jge
sbb
fs
fistpl
pop
call
clc
cld
rcll
push
xor
dec
push
mov
add
sub
jmp
cmpsl
mov
or
xchg
incl
xor
fs
je
in
stos
hlt
xor
xlat
cld
lods
sub
xor
push
push
addr16
pop
dec
out
jb
push
test
push
pop
jl
aaa
fwait
dec
les
sub
jno
cmp
xor
lahf
xor
sub
outsl
jge
imul
sbb
imulb
clc
repz
lods
sbbb
shll
pop
cs
arpl
jle
lret
cmp
dec
pop
mov
add
std
dec
push
dec
add
repnz
aas
lcall
mov
sbb
aam
push
xor
mov
dec
sbb
jmp
ud0
outsb
sub
xchg
push
push
insl
stc
repnz
or
loop
cwtl
add
mov
mov
jb
and
scas
xlat
add
cmc
sub
mov
cltd
imul
outsb
mov
imul
out
mov
push
sub
push
inc
cmc
movsb
lcall
arpl
adc
xor
mov
fsts
sti
out
cmp
leave
imul
hlt
xor
and
mov
repnz
addl
arpl
dec
mov
jae
mov
adc
popf
dec
popf
dec
pop
std
jo
xchg
xor
sbb
pushf
push
loop
xchg
cmp
adc
pop
mov
or
xchg
lret
inc
sbb
pushf
insb
xchg
add
lret
ret
mov
cmc
out
xchg
xchg
loop
lcall
cmp
lds
in
add
arpl
pop
sub
inc
add
lcall
adcl
ror
repz
fmuls
and
imul
mov
and
lret
in
xchg
test
int3
dec
mov
ljmp
call
in
int
in
std
mov
mov
leave
sub
test
data16
xlat
mov
sub
jmp
lods
loopne
xor
jns
test
inc
add
cmpsl
fdivrl
bound
out
lods
or
mov
lcall
xor
dec
hlt
pop
out
dec
rclw
add
or
mov
dec
jp
nop
sbbb
lds
addr16
inc
icebp
sarb
cmp
addb
dec
jge
cld
jmp
or
iret
flds
xchg
mov
mov
pusha
or
adc
xchg
dec
jbe
mov
pop
mov
icebp
addb
dec
mov
mov
insl
cmp
jns
mov
mulb
mov
and
mov
jnp
out
push
sbb
dec
in
loopne
adc
lret
sbb
mov
sbb
leave
lds
fnstcw
or
into
leave
shl
test
dec
fdiv
in
int3
fs
test
cmp
mov
shrb
rcrb
push
jle
mov
push
insb
iret
xorb
mov
dec
and
pop
xor
sbb
leave
pushf
scas
push
in
xchg
test
inc
andl
sbb
test
inc
push
sbb
pop
pop
daa
pop
mov
or
xor
nop
push
lds
dec
push
xor
in
test
mov
dec
out
pop
xchg
icebp
xor
sub
lods
mov
das
sarb
push
push
lods
cmp
hlt
mov
idivl
mov
aam
int
add
arpl
cmp
shl
hlt
dec
push
cmpsb
mov
pop
xchg
add
loope
jmp
aas
sub
hlt
jb
cmp
outsb
mov
push
movsb
pop
mov
inc
sbb
stc
jl
adc
adc
pop
leave
xlat
and
sbb
outsb
mov
in
rcrl
sbb
les
pop
add
in
outsl
shll
xchg
dec
test
xchg
xor
sub
sub
inc
mov
mov
cltd
clc
aas
push
or
pop
push
and
daa
aam
shll
push
sti
xchg
add
jbe
popa
mov
push
push
xor
lcall
sub
lea
add
out
imul
in
and
dec
mov
pop
xchg
ljmp
out
ss
out
enter
je
cmc
xlat
fsubrl
daa
rolb
xor
add
sbb
push
daa
dec
lcall
xchg
sbb
adc
jo
lcall
fmull
mov
test
and
iret
sahf
inc
popf
loope
aas
mov
or
data16
mov
imul
out
outsl
pop
mov
push
add
dec
mov
ja
pop
mov
jl
imul
in
rorb
xlat
outsl
fbld
fildl
jno
xor
lock
jp
imul
sbbl
pop
or
add
dec
es
xor
ret
xor
fadds
mov
jg
shll
orb
subl
out
jo
mov
jmp
mov
jp
roll
jle
stc
into
pop
and
test
loope
push
mov
mov
xchg
popa
add
andb
lods
outsb
mov
inc
or
fsubs
fs
jnp
cmc
ret
pop
push
lea
push
add
adc
jno
sub
xor
xor
cmpsb
xlat
loope
jg
popf
subb
pop
fwait
adc
in
cmp
ret
leave
fs
xchg
mov
stos
jl
add
add
mov
jecxz
cmp
sub
inc
sub
fs
jne
out
and
adcb
or
cli
out
mov
and
jl
adc
int3
sti
cmc
add
lea
call
popf
sbbl
inc
stos
das
add
jb
shrl
loope
pop
test
loope
pop
mov
fwait
cmp
stos
dec
in
sarl
xorl
jbe
fsubl
jle
pop
xlat
mov
push
xchg
mov
inc
cmp
cmp
mov
cltd
sub
out
dec
dec
xor
add
jl
dec
popf
mov
test
adc
clc
xlat
icebp
data16
mov
or
or
dec
mov
cmp
dec
ljmp
mov
into
stos
lea
lods
in
sbb
pop
fwait
sub
loope
fsts
shrb
cwtl
div
sub
lds
and
pop
add
inc
stos
incl
movl
stos
pop
bound
sub
pop
xor
pop
jo,pt
inc
mov
lock
cli
push
mov
in
jb
push
loopne
hlt
inc
pop
imul
pop
cmp
gs
fnsave
lods
xchg
lds
inc
jge
xor
shlb
mov
loopne
xchg
xchg
lcall
lahf
and
sub
inc
and
mov
mov
pop
jne
sbbb
ss
sub
rorb
sbb
in
mov
leave
xorb
cwtl
inc
cmp
sti
add
push
fnstsw
pop
or
pop
ja
dec
cmpsl
add
je
loope
xor
pop
pop
dec
sbb
roll
mov
fdivrl
ja
sub
xor
jae
and
inc
test
sub
ss
call
sub
jnp
push
xchg
jnp
push
data16
inc
std
in
lods
inc
add
push
sti
movsl
xlat
fists
shrb
jb
fwait
test
mov
repnz
xchg
lods
gs
xor
mov
jle
fisttpll
push
xchg
in
mov
ror
and
and
dec
push
test
mov
dec
sub
dec
lcall
aad
adc
mov
inc
lods
pop
jmp
stos
pop
loope
push
rcl
cmp
sub
addl
ja
sahf
mov
inc
mov
push
mov
and
cmp
clc
mov
dec
xlat
jb
xor
lahf
imul
xor
adcl
sbb
lock
and
xor
outsb
push
rclb
outsb
push
and
or
add
xchg
jns
sbb
sbb
imul
mov
xor
and
dec
hlt
mov
ss
jnp
pushf
push
jl
aaa
jns
jae
movsl
cmp
mov
lds
push
cmp
xchg
je
pop
add
or
cli
inc
cltd
fs
xchg
xchg
ret
daa
inc
jp
dec
ss
inc
mov
cmp
cmp
std
lcall
outsb
push
mov
cs
int
xor
das
lds
inc
ja
out
push
mov
sti
ja
lretw
sbb
pop
rorl
lods
in
mov
sbb
and
dec
aam
lret
cmp
repnz
cmp
jnp
cli
and
adc
push
mov
inc
xchg
push
jno
lock
fwait
xchg
adc
push
test
das
sub
aaa
adc
ffree
insb
xchg
dec
pop
ja
mov
xchg
or
shll
test
ret
jnp
arpl
aas
mov
fs
movsb
test
inc
pushf
aad
cmpsb
mov
pop
sub
dec
and
pushf
mov
adcl
cs
rorb
mov
add
jl
out
or
in
xlat
cld
sar
mov
cmpsl
and
ret
pop
push
add
mov
nop
ds
sbb
sbb
and
addr16
inc
cmp
icebp
addr16
dec
inc
arpl
pop
or
pop
cmpl
add
cmp
loopne
insl
cmp
xlat
movsl
aaa
jne
mov
ljmp
pop
sbb
loope
jb
sbb
addr16
or
adc
cwtl
pushl
jns
loope
mov
arpl
xor
data16
lcall
xchg
fcompl
push
cmc
mov
int
mov
jle
loop
mov
and
lret
cmc
mov
push
pop
dec
push
cltd
ja
imul
out
cmc
mov
imul
jo
loopne
or
push
mov
mov
test
dec
ret
inc
stos
mov
lea
cltd
movsb
inc
push
fsubrl
cmp
xchg
imull
sbb
cmp
scas
in
mov
aam
in
xchg
leave
and
add
dec
xor
mov
pushf
loope
push
inc
sub
pop
int
cmpsb
popf
pop
test
shll
and
xor
push
rep
pop
xchg
xlat
jae
or
jb
hlt
rcl
cli
fcoml
or
adc
xchg
adc
dec
lahf
cmp
pushf
mov
rol
sub
sub
mov
ja
jne
mov
sbb
fcompl
pop
push
sbb
add
jmp
fildl
or
iret
fnstcw
rolb
mov
dec
add
mov
mov
loopne
in
bound
int3
lds
jmp
mov
jl
xor
cmp
rol
mov
jns
out
cmp
iret
and
dec
int
cmp
cs
dec
pop
in
push
inc
sysret
jp
ret
sbb
data16
shlb
into
jp
daa
fimull
clc
mov
orl
outsb
xor
ficomps
adc
jno
cmc
fiadds
sbb
incl
int3
fnsave
test
dec
je
lea
dec
call
bound
bound
scas
lahf
jge
ret
idivl
lcall
xchg
test
jge
hlt
cltd
sub
sti
in
rcll
icebp
subl
dec
std
adc
loop
mov
jp
data16
int
dec
jp
dec
inc
cmp
mov
dec
leave
jge
addr16
clc
lods
cmp
subb
jo
inc
es
call
jns
mov
xor
andl
sbb
adc
aas
call
cwtl
shll
inc
add
test
jmp
insb
incb
xchg
xor
scas
pop
sub
pop
push
repz
repz
adc
xor
mov
flds
rorl
inc
xchg
jl
and
xchg
add
es
sub
sub
out
test
adc
jl
and
adc
jl
ss
pop
dec
cmc
lcall
xlat
jne
cmc
stos
sarl
jmp
mov
pusha
pop
push
outsl
push
push
fadds
inc
sbb
lcall
scas
mov
jmp
mov
mov
stc
lret
dec
je
and
cmpsl
aam
cmc
xchg
in
sbb
adc
mov
mov
scas
jno
push
clc
add
push
ljmp
dec
add
loope
test
xor
xchg
aad
jge
jno
cs
rcrb
lock
cwtl
out
cmc
push
fbstp
sahf
inc
ds
int3
push
cmp
repnz
sbb
sbb
adc
arpl
dec
jnp
fwait
mov
sbb
pop
xor
cmp
pop
jae
mov
sbb
or
aaa
les
or
mov
dec
pushf
lea
pop
arpl
and
repz
jg
mov
scas
sarb
dec
or
mov
add
jecxz
stc
mov
push
sub
fdivs
out
xchg
stos
sti
lods
xor
or
sbb
pop
gs
mov
gs
sbb
seto
cmp
push
sbb
mov
push
jg
cwtl
repnz
and
push
pop
jne
pop
pop
xchg
or
or
into
cltd
popa
mov
adc
fcompl
add
aaa
jmp
pop
xchg
fs
pop
popa
inc
lahf
shl
and
in
cmc
and
mov
jb
pop
xor
pop
push
jecxz
cmp
adc
mov
xor
sbb
into
cmp
pop
push
nop
add
dec
sti
pop
loopne
leave
mov
das
sub
nopl
mov
mov
jne
cwtl
fwait
sbb
inc
mov
dec
mov
jo
leave
popl
or
cmp
ss
fistpl
shlb
lret
push
cltd
and
or
arpl
jg
rol
ljmp
dec
mov
lea
arpl
shr
pop
dec
jg
lret
pop
and
adc
test
cli
cwtl
xor
jae
jb
mov
and
insb
sbb
jmp
pop
lock
ds
les
xchg
mov
fiaddl
daa
xor
aas
jmp
js
stos
adc
iret
or
add
cmp
enter
or
mov
push
adc
adc
insb
xchg
div
test
enter
cmp
mov
inc
mov
pop
pop
test
orb
andb
pop
xchg
push
dec
xlat
lods
rorb
add
incl
sub
lret
sub
lods
pop
out
pop
add
sub
xor
pop
cmpps
inc
add
decl
dec
jns
or
mov
and
pop
inc
sarl
sub
rclb
inc
jmp
clc
scas
sub
sbb
xchg
fwait
push
jp
idiv
addr16
imul
in
fistl
js
inc
imul
push
rolb
jp
and
gs
div
movsl
ja
cmc
fs
mov
insb
sar
mov
stos
push
dec
addr16
pusha
ret
cmc
or
push
or
mov
mov
sub
adc
mov
mov
xchg
pusha
cmp
xorb
adc
ljmp
out
add
loopne
and
or
dec
sbb
fisttpll
stc
and
push
loope
push
mov
mov
push
and
andb
in
lcall
lcall
push
adc
scas
cs
sbb
ljmp
cmp
dec
push
mov
and
stc
enter
jecxz
cli
mov
es
stos
movsb
cmp
cmp
sar
adc
cmpsl
pop
loope
inc
xchg
mov
jne
loopne
push
mov
add
mov
jg
mov
test
push
sub
xor
and
adcb
xchg
mov
pop
mov
mov
scas
stos
dec
in
ss
imull
aas
push
lods
test
mov
enter
sbb
mov
stc
push
mov
xor
imul
jge
pop
jl
mov
cmp
sbb
xchg
hlt
push
sub
jmp
call
shr
mov
xlat
mov
pop
and
rclb
ljmp
jno
insb
cmp
sbb
push
out
out
jne
mov
stos
clc
sub
fcoml
push
sub
mov
sbb
dec
orb
xor
xor
jecxz
add
loope
test
push
xchg
inc
jns
or
shl
cwtl
xor
js
jl
insb
sub
pop
movsb
mov
push
cld
pushf
or
mov
das
rcll
stos
jae
incl
mov
mov
imul
lahf
xor
xlat
sub
popa
or
or
cmp
mov
xchg
mov
xor
xchg
xor
fs
or
sbb
ss
rol
clc
or
imul
adc
jb
cwtl
cltd
sti
mov
jp
adcl
popf
pop
sahf
cmp
loop
pop
pop
sub
sbb
xlat
pop
testl
cmp
in
and
adc
outsl
xchg
xchg
xchg
dec
int3
xor
push
into
pop
test
cmc
insl
in
roll
sti
enter
jae
pushf
pop
jbe
or
cltd
pop
add
rcrl
js
jl
mov
out
ds
jnp
les
jno
out
and
jo
sbb
xor
pop
mov
cld
inc
mov
jbe
sub
hlt
jb
mov
mov
sub
push
aaa
stos
ja
in
mov
stc
mov
xchg
fmull
sti
xor
test
cmp
fdivr
xor
dec
mov
fucom
fmuls
into
lods
jle
push
mov
sarl
out
jbe
mov
sbb
stos
dec
jp
push
das
push
mulb
or
or
loop
xchg
jns
jl,pt
pop
sub
dec
adc
inc
inc
xchg
sbb
jg
inc
aaa
adc
adc
or
xchg
out
mov
cmp
mov
movsb
sub
out
dec
jbe
mov
xor
subl
xor
pop
roll
add
ds
jp
aas
sbb
xchg
shlb
test
cmc
fwait
jae
loop
xchg
xor
ss
mov
je
cmpsl
pop
mov
outsb
lds
push
std
sub
xorb
pop
fcmove
pop
scas
mov
cld
addr16
cmp
nop
fld
sub
xchg
cli
adc
dec
into
pop
nop
push
testl
ljmp
mov
daa
fs
xchg
xchg
ljmp
cmc
fisubs
xchg
mov
mov
outsb
mov
mov
inc
scas
jno
pusha
stc
rclb
mov
jp
mov
pop
cs
sbb
pop
sub
cli
push
push
jno
inc
xchg
jl
cwtl
lds
aaa
pop
cli
pusha
xor
add
pop
test
dec
xchg
out
mov
scas
push
pop
mov
lea
xorl
mov
jecxz
jecxz
mov
xor
or
push
inc
lea
cmp
insl
je
imul
call
add
ret
push
subb
gs
cmp
aam
popa
popf
movb
xchg
sub
add
out
adc
ret
cs
xor
je
pop
dec
adc
add
mov
add
xor
jecxz
sub
xchg
pop
cli
inc
mov
mov
xor
imull
inc
popa
orb
in
lret
push
sahf
clc
cld
enter
out
pop
call
insb
mov
mov
ret
dec
jecxz
repnz
sub
int
xor
insl
lods
sub
mov
inc
jp
mov
in
fsubrs
jle
cli
rcrl
orl
adc
cli
jecxz
mov
in
testl
notl
push
add
lahf
scas
or
xchg
or
mov
and
loope
and
adc
inc
adc
test
cli
lret
jnp
mov
mov
sahf
xchg
loope
sbb
sub
xchg
jns
dec
mov
xchg
cmpsl
in
test
ret
mov
jno
insb
inc
cltd
jne
testl
fisttpll
mov
add
lock
jnp
xor
test
and
dec
jno
inc
inc
ja
pop
scas
lds
xor
push
inc
loopne
divb
test
das
cmp
fdivrs
pop
sub
mov
push
fs
fwait
test
sub
push
sub
mov
push
add
stos
mov
sbbb
stos
sbb
jg
les
jne
test
xchg
insl
insb
jbe
lds
mov
out
mov
dec
jns
inc
mov
outsl
aaa
or
xchg
shll
std
push
mov
jle
cmp
out
jbe
lods
add
mov
mov
les
callw
sub
mov
xor
idivl
out
dec
addb
xchg
icebp
stos
out
outsb
mov
scas
test
sti
cmp
movsb
ss
stos
icebp
int3
or
push
fists
dec
pop
sub
sbb
daa
daa
and
fucom
out
lret
notb
clc
mov
push
std
xor
std
jnp
rorb
int3
or
mov
pop
xchg
imulb
sub
les
cmpb
shlb
add
pop
and
loop
dec
or
std
fidivl
std
incl
fimuls
loop
dec
sbb
cs
jmp
cwtl
mov
call
xchg
push
cs
iret
leave
arpl
dec
cmp
ds
pop
or
js
andb
pop
and
cmpb
jmp
repz
cmp
xor
sbb
xor
jnp
push
cmc
jae
mov
add
lret
aad
adc
ss
imul
push
mov
and
jae
adc
aaa
inc
pushl
movsl
cwtl
or
std
icebp
fmull
push
sub
lods
cmc
imul
mov
mov
mov
sub
notl
sbb
mov
test
push
mov
mov
jmp
sbb
insb
pop
bound
push
add
and
xor
jbe
cmc
dec
pop
frstor
popf
xchg
scas
push
nop
xlat
imulb
imul
cmc
je
mov
pop
xchg
cmp
je
push
ljmp
adc
or
pop
inc
enter
stos
jecxz
icebp
cmp
loop
out
fidivrl
sbb
aad
pusha
and
push
dec
shlb
imul
aam
in
dec
hlt
inc
and
ret
xchg
test
mov
imul
push
mov
and
mov
adc
dec
add
push
push
mov
push
adc
xchg
xchg
fisttpl
jl
cs
jge
popa
dec
and
xchg
jl
cld
aas
ret
lods
add
out
std
stos
cli
jno
ret
das
int3
pop
sub
insb
insb
dec
pop
xchg
shlb
out
adc
xor
mov
loop
xchg
sbb
mov
xchg
andb
ss
nop
je
daa
fsubrs
push
rorb
rclb
dec
jge
sub
sub
cmp
bound
shll
pop
mov
mov
push
pushf
xchg
mov
int3
lret
test
psrlw
cmp
mov
adc
iret
mov
stc
add
jl
movsl
fistpll
push
aaa
pop
cmp
in
daa
popa
cld
inc
in
lcall
sarb
fsubrs
out
test
cmpsb
sarl
cld
stos
aaa
insb
xor
jnp
icebp
xchg
mov
stos
push
addb
jno
mov
adc
loop
adc
and
mov
shll
mov
popf
add
push
mov
sbb
js
or
mov
xor
js
sti
lods
cmp
cmp
jbe
jbe
jle
xchg
ljmp
jmp
cmp
pop
hlt
negb
ficomps
mov
push
push
mov
adc
cmpsl
pop
pop
cmp
cmp
fsubrs
adc
clc
loop
pop
cli
xor
bound
in
mov
inc
mov
inc
scas
jl
cmpl
jle
in
inc
out
adc
call
icebp
ja
cmp
and
cld
scas
lea
mov
pop
mov
aas
mov
fbstp
mul
add
fcompl
mov
ljmp
cli
mov
cmp
add
xor
sub
xchg
push
dec
xor
in
into
cmpl
popf
push
aas
das
jns
xchg
cmc
pushf
out
cltd
lcall
inc
or
push
cmpsl
out
les
cmpb
inc
mov
aaa
es
add
clc
hlt
adc
loopne
jne
ret
js
aaa
pop
into
ret
test
pop
out
jbe
or
mov
push
iret
filds
pushl
pop
leave
fucomi
pop
insb
sbb
dec
mov
into
test
aad
into
xchg
adc
nopl
push
add
sbb
mov
jo
xchg
mov
lcall
xchg
call
in
stos
xor
add
cmpsl
jp
mov
fidivs
push
jae
clc
xor
and
out
aam
out
out
cmpsb
pop
cltd
push
inc
scas
stos
xchg
sti
cmpb
and
pushf
and
adc
pusha
mov
subl
pop
cli
xor
ret
push
mov
outsb
mov
insb
leave
xlat
cmp
cmp
xchg
jns
mov
es
mov
mul
jns
sub
mov
adc
icebp
cmp
jns
flds
mov
jl
sub
into
movsb
pop
push
dec
and
femms
or
adc
lcall
sbb
adc
paddsb
cmp
dec
cs
pushl
push
adc
fwait
xor
sub
fcom
jl
scas
push
pop
scas
addr16
mov
jo
fdivp
sub
push
jnp
jp
xchg
xlat
iret
emms
mov
sub
loopne
push
or
mov
cmp
or
cs
or
rolb
cmp
nop
in
jl
adc
mov
fistl
mov
xchg
push
movsl
sahf
mov
sbb
rorl
cmp
outsl
ret
pop
inc
in
cltd
shl
fldcw
or
out
stos
jns
mov
cmpl
adc
scas
or
test
and
jb
jae
cli
fs
dec
insl
adc
mov
jecxz
test
xor
arpl
push
clc
jg
jg
jmp
fldcw
int
and
dec
pop
xlat
fsubrl
xor
cmp
ficoms
pop
xchg
add
test
ds
push
shll
inc
jbe
mov
popl
test
dec
and
xchg
adc
nop
js
mov
out
jmp
jae
pop
in
mov
in
add
inc
pusha
in
mov
xor
mov
rcll
inc
sub
mov
dec
add
sbb
dec
mov
cmp
imul
test
pop
fldt
cli
dec
popf
pop
cmp
stos
push
shlb
sub
lods
aad
sub
ja
movsl
filds
out
add
sub
rcrb
and
mov
clc
das
push
movsl
mov
popa
push
jne
iret
mov
push
daa
fwait
test
and
dec
hlt
inc
lret
in
ret
and
sub
inc
movsl
pop
iret
iret
pop
push
dec
pop
xchg
stos
inc
cmp
in
imul
orb
mov
mov
push
insl
lret
pop
cmp
sbb
aam
sub
test
test
sbbb
dec
je
cld
xchg
out
popf
test
test
filds
imul
pop
ja
add
stos
and
pop
sti
ljmp
aaa
push
in
cltd
scas
fistpl
add
fwait
shrl
outsl
mov
add
push
pop
movsb
jg
cmp
outsb
lcall
cmp
rcrl
popf
mov
dec
int3
faddl
sub
sahf
fcmovbe
out
mov
xchg
push
inc
enter
arpl
jns
lret
or
arpl
daa
pop
dec
inc
dec
adc
lods
adc
mov
sahf
mov
mov
mov
mov
sub
mov
scas
cli
adc
inc
cmp
jo
cs
push
std
aas
lods
dec
xchg
push
inc
pop
rcll
cmpb
test
fsubrl
sub
push
aad
aaa
push
jge
cmp
ds
test
push
stos
jne
mov
mov
fs
inc
push
mov
mov
arpl
xor
mov
or
gs
cmp
xlat
cmp
push
out
out
xor
mov
cmp
repz
pop
xchg
adc
add
mov
xchg
out
jne
mov
int3
adc
cmp
pop
fisubl
push
cwtl
call
inc
jns
or
xchg
inc
addr16
cli
sub
inc
jnp
cmp
inc
out
add
inc
add
sbb
jmp
negl
loope
inc
cmp
mov
loopne
jno
adc
adc
inc
js
mov
push
push
and
sbb
rolb
jnp
leave
mov
fnstsw
fwait
inc
dec
lods
push
popa
aas
sub
cltd
ret
aam
test
rorl
push
cltd
jne
and
mov
cmpsl
xor
in
jecxz
pop
out
cli
xchg
adc
push
aam
mov
push
push
test
lret
pop
testb
jg
lcall
and
add
mov
ja
ja
mov
inc
notb
adc
and
mov
arpl
or
ja
lods
mov
out
fs
or
pop
stos
stos
imul
adc
roll
sub
arpl
sahf
lret
cmpsb
loopne
jae
loopne
xor
ljmp
je
mov
mulb
pop
data16
out
mov
fldcw
js
mov
adc
inc
xor
sahf
imul
mov
imul
addr16
push
sub
mov
out
adc
pop
insl
popf
imul
aam
inc
orb
dec
cmpsl
cs
rorb
out
gs
add
xchg
mov
push
nop
xlat
outsb
jmp
xchg
cmpsl
sub
pop
sbb
or
movsb
stos
cmpsb
out
loop
jno
into
xor
sbb
dec
fsubr
or
cltd
movsb
popl
xchg
mov
les
ss
cmpsb
lock
mov
ljmp
and
testl
dec
enter
in
push
and
pusha
int
mov
mov
in
mov
imul
int
or
in
push
adc
sub
jp
push
sarb
imulb
in
mov
out
cmpl
lods
sub
mov
sub
aad
xchg
push
out
out
cmc
ja
outsl
repnz
nop
inc
scas
int
mov
push
dec
sahf
inc
xchg
popf
ss
outsl
mov
jge
call
jmp
dec
das
mov
add
jne
jne
les
shll
adc
rcrl
cmp
loop
nop
aam
cmp
pop
movlps
test
or
aas
inc
pop
pop
adc
test
int
lock
mov
mov
lcall
cmp
or
cwtl
repnz
popa
mov
adc
pop
shrl
mov
mov
fimuls
mov
std
pop
dec
lret
int
or
lahf
push
xor
cmp
pop
fcoml
cmp
rcrl
jmp
enter
dec
lock
hlt
fldcw
movsb
mov
adc
sub
and
cmp
and
mov
jnp
cwtl
xchg
gs
mov
js
cmpsl
fdivs
das
mov
cltd
repz
cmp
xor
adcb
in
or
ja
fwait
rcrl
shlb
mov
sahf
out
in
insb
div
or
vcvtsd2si
mov
push
or
inc
loop
and
mov
push
cmp
jle
scas
shl
mov
cmp
adc
jmp
push
rorl
nop
mov
dec
mov
cmpsb
mov
cltd
popa
mov
or
or
and
xchg
add
dec
sub
mov
or
push
dec
push
mov
dec
mov
mov
ret
mov
js
ds
shlb
fnstenv
rclb
adc
das
adc
outsl
cmp
sbb
roll
push
sti
push
dec
out
push
jb
aas
imul
push
inc
push
jo
cld
lock
mov
add
lcall
push
es
mov
jecxz
cs
push
dec
and
js
and
mov
sub
shll
mov
fidivrs
xchg
dec
mov
jo,pt
jno,pn
lock
insb
inc
and
xchg
imul
icebp
loope
loope
mov
sub
cld
ds
loop
jbe
orb
into
jl
mov
sub
or
mov
out
aad
cld
inc
jb
mov
adc
leave
inc
jb
or
fstps
inc
test
fsubl
test
ret
lods
jbe
jge
lods
icebp
mov
dec
inc
jb
jns
stc
mov
rclb
push
dec
fs
leave
add
sti
jae
jle
std
or
cmc
jo
out
es
sbb
cmpsl
bound
clc
stc
mov
jae
in
femms
jmp
dec
movsb
stos
je
xchg
call
scas
inc
xchg
cltd
add
add
jnp
movsl
pusha
and
in
cmc
mov
xor
pop
adc
xchg
lret
sub
xchg
stc
test
sbb
dec
jecxz
pusha
hlt
addr16
xchg
out
loop
out
xchg
out
lea
inc
iret
ja
fdivs
push
bound
aas
sbb
push
mov
pop
mov
push
mov
outsb
flds
mov
mov
dec
or
jbe
aaa
bts
adc
push
mov
mov
adc
cld
scas
add
mov
mov
test
mov
out
and
stos
jo
sbb
inc
and
push
sbb
hlt
movsl
ficomps
adc
pop
sbb
mov
pop
xor
and
jmp
cltd
push
dec
sbb
jp
xor
dec
inc
add
jge
fiaddl
test
xor
fdivl
lcall
in
imul
ficoms
cld
sub
pop
rolb
lea
in
loope
cwtl
in
mov
jbe
fiaddl
push
loope
stos
push
xor
add
push
pushf
in
pop
fldcw
clc
ljmp
pop
mov
scas
inc
loop
cwtl
push
adc
lea
pop
outsl
mov
cmp
fs
mov
pop
jns
gs
push
stos
rep
stc
push
bnd
jecxz
pop
gs
push
pop
inc
add
stos
cmc
mov
jnp
subb
dec
dec
sub
dec
push
es
mov
in
sahf
outsb
imul
and
popf
mov
mov
jmp
fsts
sbb
lret
mov
lahf
push
aam
jp
sbb
fdivs
fbstp
jae
smsw
lret
cmp
mov
jl
fnstsw
cmp
fcmovu
fwait
jge
dec
mov
mov
outsb
and
psubw
imul
sti
cmp
inc
out
jmp
leave
lods
es
in
dec
sub
daa
loope
ds
xchg
cwtl
adc
sbb
mov
xchg
mov
fidivrl
aam
ljmp
push
mov
sbb
mov
adc
call
or
xor
inc
test
outsb
stc
repnz
leave
nop
in
pop
mov
stc
into
pop
roll
pop
insl
mov
je
xor
adc
jecxz
les
jge
cmpsb
cli
jp
mov
sti
arpl
add
ficompl
cmc
mov
idiv
sti
jo
cld
jp
xor
loop
fdivrl
mov
jns
shl
scas
scas
mov
nop
cmp
xchg
push
cmp
xor
inc
movl
add
lds
xchg
bound
sbb
jno
stos
decl
jecxz
stos
sub
jo
jbe
sbb
arpl
or
xchg
lods
stos
add
sbbb
sbb
lret
and
mov
sbb
adc
push
adcb
aam
bound
xchg
jns
push
int3
test
add
dec
pop
iret
rcr
fdivl
int3
enter
les
mov
call
xlat
jne
fs
mov
mov
sub
fistpl
jg
das
fwait
xor
js
jg
sbb
xchg
sbb
imul
xchg
in
cltd
xchg
and
push
sbb
inc
leave
sbb
in
push
ror
sub
mov
and
push
push
ret
sbb
pop
sub
daa
aad
sarb
loope
je
cld
mov
cmp
push
shll
inc
mov
jge
iret
lret
ss
fisttpll
xchg
add
movsb
jo
outsl
and
inc
xchg
loopne
shrb
xchg
or
push
cld
sub
or
cmp
dec
in
dec
push
out
inc
pop
stos
push
andb
mov
ss
fadd
out
aad
jecxz
dec
and
push
jae
xchg
je
ss
fisubl
mov
scas
imull
add
xchg
or
sbb
xor
cmp
push
div
xchg
jecxz
fstpt
jno
pop
pusha
loope
jne
cmp
mov
adc
inc
jp
sub
loopne
loopne
arpl
sub
push
mov
daa
lods
xor
cmp
xchg
mov
push
pop
pop
sbb
daa
lahf
push
in
fiaddl
push
push
cmpl
dec
jg
and
lret
mov
fnsave
pusha
out
ljmp
je
roll
popf
jle
js
loope
fcomps
mov
movsb
mov
outsb
inc
mov
pop
push
cmpsl
int3
sbb
lret
mov
mov
pop
xchg
cmpsb
mov
repz
cmp
add
mov
cltd
adc
cld
jmp
int
mov
mov
ljmp
add
dec
cltd
mov
mov
mov
or
xchg
cmpsl
aas
fidivl
cmpsb
and
pop
insb
into
xlat
out
and
mov
cltd
lods
dec
mov
sbb
cmpsb
incb
fadd
test
mov
mov
cmp
insb
xchg
cmc
sbb
mov
lret
jg
push
mov
imul
adc
and
xchg
in
mov
pop
repz
inc
pop
cmp
iret
xor
leave
ret
jno
sub
mov
pop
nop
mov
sbb
stos
mov
bound
dec
cmp
and
std
scas
pop
inc
lahf
adc
or
mov
or
or
arpl
xor
mov
ret
fiadds
pop
clc
or
test
mov
negb
decl
jecxz
jmp
jo
pop
test
xor
fcmove
sbb
or
stos
jno
push
and
dec
jne
mov
sbb
cmc
cmp
mov
hlt
incl
add
sahf
adc
test
push
loopne
bound
sahf
mov
clc
data16
dec
mov
shll
sti
dec
push
xlat
cmp
inc
pop
cmp
fidivrl
push
cltd
outsl
jbe
mov
int3
lods
pop
jo
pushf
insb
sub
in
movsl
aas
es
dec
popl
sbb
fsubrl
push
mov
in
mov
in
mov
hlt
popf
outsb
cmpsb
push
daa
jge
pop
adc
insb
pusha
loop
fstpl
push
std
fbstp
dec
int
int3
cmpsb
gs
dec
ds
dec
ja
in
sub
xor
mov
jns
loope
sbb
adc
sub
xor
sbb
fsubr
ss
xorl
js
scas
int3
and
ljmp
add
das
stc
and
mov
mov
push
ljmp
incl
add
clc
adc
arpl
rorl
or
mov
jnp
sti
outsb
lret
inc
cmpsl
loop
call
inc
push
in
push
testb
icebp
sub
mov
clc
lret
repnz
hlt
fsubrl
cmp
mov
sti
mov
jecxz
sub
push
test
mov
mov
int3
mov
xchg
inc
cmp
or
das
jmp
mov
and
insl
sbb
cwtl
xchg
cmp
mov
mov
lods
repz
xchg
push
sub
hlt
aad
jo
mov
or
fbstp
adc
adc
imul
out
lea
mov
add
pop
xor
jecxz
xchg
sbb
xor
out
int
addr16
pop
mov
bnd
fidivrs
vpmaxsw
jb
repz
lret
mov
ret
test
je
pop
xchg
dec
and
scas
sub
popf
or
xor
stos
pop
push
push
xchg
pop
and
push
mov
call
out
adc
push
lods
shll
cmp
jecxz
clc
mov
push
cli
rol
and
dec
je
sub
xor
mov
xchg
adc
cmp
mov
and
xchg
adc
and
ljmp
call
sub
push
scas
ds
movsl
leave
mov
and
cmp
mov
sbb
or
clc
movsl
sarb
mov
jno
iret
sahf
mov
int3
push
sahf
sbb
in
popf
adc
dec
xchg
lret
jle
lods
movsl
push
fildl
and
or
cmp
mov
adc
and
jno
mov
xor
test
sub
inc
push
scas
inc
lret
ljmp
stc
adc
lods
imul
cmp
inc
adcl
lahf
inc
pop
pop
inc
imul
popf
sbb
xlat
movsb
into
add
mov
xor
jg
cwtl
fidivs
imul
xchg
mov
mov
shll
dec
rcll
inc
sarl
or
pop
std
arpl
lods
mov
lea
mov
add
lock
cmpl
pop
test
movb
mov
fnclex
je
mov
adc
push
fbld
test
cmp
fimull
mov
dec
pop
mov
push
jo
mov
mov
cwtl
adc
std
lea
mov
fistpl
or
les
clc
je
dec
xchg
push
lds
rcrb
cli
mov
lock
jle
movsl
jo
mov
dec
adc
dec
sub
in
and
call
imul
push
mov
fidivrl
push
push
fstpt
scas
xchg
fnstenv
movl
mov
test
jle
outsl
sub
insb
aad
bound
ss
cmp
jp
lea
mov
mov
add
ja
or
adc
sub
data16
cs
mov
pushf
testb
ljmp
xor
loope
mov
idivb
inc
outsl
push
push
xlat
test
mov
pop
push
enter
out
aaa
xchg
mov
and
pop
std
jb
add
and
mov
jmp
push
int
dec
dec
call
into
sahf
ja
je
nop
outsl
cld
mov
ss
mov
lea
jle
in
jmp
inc
and
jp
insl
out
mov
pop
std
sub
cmp
fnsave
stos
push
cmovnp
cmp
xor
lods
mov
adc
jge
fimuls
in
scas
cltd
in
adcl
cmpsl
pop
mov
or
inc
aam
push
cmc
sbb
or
mov
jge
sbb
cli
filds
dec
pop
sub
xchg
pop
or
popf
mov
lds
int
scas
xchg
jge
push
arpl
jno
pop
out
and
mov
pop
in
mov
inc
mov
je
sub
data16
xchg
cs
push
and
dec
je
mov
test
daa
jmp
xor
decb
into
xchg
stc
mov
out
sbb
aas
pop
lret
lret
loope
inc
or
iret
xchg
xchg
push
pop
mov
int3
jbe
lods
pop
fsubs
stos
fwait
cmp
cld
out
iret
sti
sub
dec
jns
jp
in
sub
push
and
jae
adc
xchg
popa
js
bound
mov
lcall
mov
mov
in
mov
fldl
rcl
lods
jns
aad
insb
mov
inc
or
outsl
jl
das
faddl
arpl
rorb
dec
repz
push
pop
les
jnp
dec
ds
dec
inc
out
das
iret
push
or
mov
and
cmpsb
add
ss
cs
mov
repz
xchg
xor
xor
jae
and
dec
scas
xor
mov
xchg
xchg
ja
adc
imul
push
popa
jbe
mov
mov
jnp
xor
in
push
aad
jns
lcall
push
sub
push
movsl
jnp
jecxz
and
cmpb
shrl
bound
in
int
scas
sahf
mov
ror
nop
aas
push
sub
arpl
js
xchg
push
pusha
sbb
mov
stos
sbb
lea
xchg
idiv
or
mov
jl
sbb
int3
xor
loope
aad
mov
aas
pop
cli
test
jo
loopne
and
xchg
inc
mov
roll
popf
jmp
in
sub
sbb
clc
sub
mov
xlat
cltd
inc
jecxz
jge
hlt
lcall
int
dec
add
lds
jb
xor
inc
xchg
sub
cmp
rorb
dec
cld
lcall
push
test
inc
xchg
push
rcr
push
inc
shlb
jns
cmp
xchg
ret
lret
dec
sbb
dec
pop
xchg
adc
push
lds
repz
mov
mov
lods
fisttpl
dec
pop
sbb
sahf
fxch
or
adc
je
lods
sub
es
mov
inc
ret
fisttpll
xchg
fsubr
dec
push
enter
jle
push
mov
mov
inc
pushf
clc
rcll
ror
les
test
scas
xor
push
sbbb
sub
push
cli
inc
jno
or
aas
cmp
lea
fucomi
lds
xlat
bound
push
jne
mov
out
xchg
push
cmp
inc
push
pop
cli
xchg
mov
in
test
imul
daa
stos
or
mov
sahf
mov
imul
out
xchg
arpl
inc
xchg
out
or
push
daa
xchg
jmp
icebp
mov
pop
sub
in
push
outsb
push
cli
jnp
inc
popa
cmpsl
ret
dec
jno
rcrl
out
push
adc
push
dec
push
test
sbb
inc
fisubl
jne
rcll
sbbb
out
outsl
jg
push
mov
dec
mov
sub
dec
add
data16
scas
dec
or
shrl
pop
aad
push
pop
sahf
loop
jo
sub
mov
jle
mov
shlw
or
mov
jo
xchg
mov
xchg
push
push
mov
xchg
sbb
adc
pop
mov
fstl
loop
mov
mov
mov
mov
fcoml
xchg
mov
xchg
and
in
and
imul
jecxz
sub
mov
xchg
cmp
add
add
out
pop
jmp
pop
sbb
jae
out
mov
jns
lcall
test
lods
clc
or
dec
xchg
and
push
dec
cld
pop
sub
cltd
adc
mov
icebp
call
jl
mov
xor
pop
movsl
push
inc
fcmovnbe
adc
repnz
adc
inc
enter
sub
xchg
das
cltd
pusha
lods
into
popl
enter
pop
pop
mov
xlat
push
xchg
dec
bt
scas
outsl
adc
inc
cli
push
into
shlb
push
push
xlat
test
int
jmp
xchg
adc
mov
add
orl
push
mul
push
cmp
rcl
lods
jns
icebp
cmp
sti
subl
das
jle
ret
jne
jle
rorb
xor
xchg
pusha
xor
movsl
dec
jmp
sub
pop
lcall
pop
ja
cli
pop
adcb
add
sbb
sbb
lea
lods
scas
jno
inc
lods
iret
mov
in
and
int3
mov
es
push
add
test
gs
rcrb
int3
imul
xchg
pop
loope
push
dec
movsl
dec
fsubp
repnz
fists
xor
ja
pop
pop
insb
ljmp
lds
jbe
fwait
mov
insb
mov
in
pop
aaa
insb
pop
cmp
and
sbb
ret
dec
imul
cmc
jge
dec
xchg
mov
adc
pop
mov
ret
lds
faddl
add
mov
push
lock
adc
je
add
jmp
or
xchg
insl
push
lods
add
push
mov
mov
pop
adc
mov
sub
lods
in
nop
and
enter
mov
xor
mov
inc
test
aaa
push
mov
pop
lea
movsb
or
jmp
jmp
gs
xchg
insb
push
dec
mov
pop
inc
loope
push
xor
jle
jbe
sarl
adcl
mov
jb
sbb
adc
or
ret
xchg
dec
push
mov
adc
sub
cmc
xor
imull
test
mov
push
ss
inc
and
pop
pop
add
xlat
xor
scas
push
jp
stc
addr16
inc
xchg
pop
icebp
cld
js
ljmp
xor
fcomps
inc
rclb
xchg
mov
add
lret
repnz
rcrl
sbb
cmp
mov
in
xchg
mov
push
jnp
push
inc
jo
lret
in
push
sahf
rcrl
dec
sub
add
jnp
clc
xchg
scas
push
popa
xorl
cmp
enter
inc
xor
arpl
xchg
addb
sub
mov
mov
mov
fwait
das
testb
sub
mov
sub
insb
cld
fwait
outsl
orb
cli
pop
pop
and
rcr
cmp
pop
xchg
jl
sub
std
dec
mov
int
xor
sbb
mov
and
mov
and
sbb
xor
ret
dec
push
push
or
and
adc
in
xchg
pop
jecxz
and
fcomi
push
sahf
xchg
xchg
jbe
lods
cltd
and
adc
enter
insb
sub
jb
in
imul
jecxz
xchg
jmp
xor
popa
loopne
movsl
mulb
into
inc
les
mov
mov
lds
lahf
in
int
std
fldenv
test
in
pop
or
in
cwtl
mov
and
add
jmp
and
jns
popa
jno
pop
lret
cld
out
out
shll
cld
data16
inc
jmp
inc
lea
insb
sub
mov
mov
or
fadds
jno
scas
cmp
cmp
jl
popa
push
sub
lods
pop
cwtl
mov
aam
sbbl
ret
jns
repnz
sti
fwait
mov
loop
jecxz
sub
jno
cmp
cli
sti
cwtl
enter
and
mov
cwtl
mov
xchg
add
rcrl
mov
int
pop
ucomiss
in
cmp
in
into
cmpsb
jae
dec
xor
mov
jg
test
mov
jnp
mov
sub
fmul
loopne
push
ret
stos
add
dec
xchg
repnz
test
cmp
stc
add
popf
aaa
adc
test
imul
in
std
xchg
xchg
add
dec
and
inc
jmp
push
pop
fsubs
cwtl
ds
pushf
out
cmp
pop
pop
imul
sar
cmp
sarb
int3
out
out
xor
es
mov
xor
mov
bound
shl
cli
cmpsb
pushf
dec
jmp
cmc
call
and
add
sbb
mov
lods
inc
jae
icebp
jnp
js
fstpt
xchg
repz
fcmovnu
aad
jg
gs
add
and
lock
inc
lcall
push
fistpll
js
pop
cli
dec
jae
sub
stc
jp
mov
pusha
out
sti
test
sub
ljmp
mov
add
sub
adc
into
inc
mov
sub
xchg
or
xor
das
shr
xchg
repnz
leave
xor
mov
adc
jle
xor
test
jae
adcl
xlat
je
or
mov
add
loopnew
mov
stc
les
jecxz
pop
cmp
push
mov
xchg
popl
inc
mov
push
push
or
jp
in
outsb
inc
imul
sub
xor
loopne
inc
jle
jp
and
sub
mov
test
jno
mov
jbe
xchg
dec
xchg
or
lock
je
add
insl
rclb
and
xchg
push
decl
fisubrl
or
fwait
add
loopne
test
loopne
rol
idiv
lret
jle
pop
test
mov
pop
aas
sub
or
fldcw
out
mov
lcall
xchg
js
mov
outsl
jl
mov
aaa
stos
cs
ljmp
mov
orb
mov
aad
sbb
push
cmpsl
mov
jno
sbb
imul
pop
dec
or
out
lret
jecxz
rolb
fsubl
mov
inc
sahf
xchg
add
jae
nop
cli
mov
or
add
addl
test
std
cltd
xchg
imul
or
into
jno
inc
dec
xor
mov
and
mov
jbe
mov
les
ja
pop
mov
dec
imul
inc
xchg
test
add
lea
test
cmp
div
push
fistl
sahf
in
pop
movsb
add
adc
inc
and
jecxz
mov
inc
jne
outsb
lea
push
jmp
js
scas
inc
ds
pop
pushf
cltd
sub
scas
imul
push
repz
int3
mov
cmpsl
aam
mov
aad
cmp
cmp
sbb
sub
je
push
push
ljmp
pop
lcall
out
addl
and
lret
mov
incb
xorl
js
fidivl
stos
or
shlb
jp
sbb
pop
xchg
jnp
pop
xor
daa
out
xchg
inc
scas
int3
mov
xor
iret
add
jle
test
sbb
pop
stc
mov
iret
pop
fsubrs
lods
inc
xor
jno
lods
and
das
mov
push
push
xchg
popf
xchg
cld
mov
ret
or
lea
movsb
aam
push
xchg
inc
fiadds
ret
inc
inc
add
pop
sbb
xor
mov
sub
ret
pop
sbb
push
lds
ljmp
cmp
stc
rcll
mov
jae
jmp
jmp
xor
inc
in
jg
mov
insl
outsb
out
dec
mov
scas
daa
mov
xorb
ret
inc
xor
xchg
std
push
pusha
mov
jmp
mov
popa
pop
enter
fldt
insb
addl
hlt
add
or
lahf
xchg
and
fwait
xlat
or
and
push
push
das
notl
mov
cmc
cmp
mov
test
dec
inc
adc
xchg
add
inc
mov
pop
in
cmpsb
mov
pop
jle
cld
push
aam
mov
xchg
mov
jmp
jne
scas
xchg
imul
aas
xor
out
cwtl
mulps
jg
subb
lds
ljmp
jge
jns
dec
out
push
hlt
cltd
mov
adc
jge
sub
cmp
enter
pop
pusha
call
lods
xor
and
or
xchg
lds
fstpt
sbb
enter
pop
mov
pop
and
data16
rol
adc
jmpw
pushf
jae
cli
outsb
je
xor
in
or
loope
js
inc
jnp
hlt
cmp
stos
orb
sti
inc
mov
push
scas
cs
movsb
jmp
cmp
pop
ds
dec
inc
pop
js
es
pop
inc
popw
stos
je
dec
sub
pop
sub
in
inc
jno
mov
sahf
sbb
dec
imul
pop
out
dec
adc
sub
xchg
imul
cmp
jmp
pop
loopne
adc
or
adc
into
shlb
jne
loop
sahf
ljmp
out
and
cmp
pop
mov
mov
loope
scas
cmc
or
cmp
out
jle
cmp
loop
mov
xchg
into
daa
das
addr16
sub
and
hlt
push
xchg
push
cmp
popf
xchg
cmpsl
in
push
sbb
loope
ja
mov
sub
push
cmpb
cmp
sub
dec
test
cmp
repnz
test
faddp
lret
lds
loope
push
sti
push
dec
clc
xor
jl
gs
adc
je
fisubrs
lahf
mov
dec
pop
fs
push
and
sahf
aad
shr
mov
mov
ret
mov
js
lods
xchg
hlt
push
rcrb
das
imul
mov
aas
inc
pushf
add
and
je
pop
stos
mov
aas
jo
aad
sbb
scas
add
insl
icebp
in
fmuls
fmuls
cmp
mov
mov
test
cwtl
loopne
dec
cmp
pop
jmp
insb
test
test
push
sbb
insl
add
loopne
ljmp
pop
stc
pop
mov
push
lods
mov
dec
rcl
mov
popl
push
jge
cmp
mov
sbbl
cmp
adc
sbb
iret
and
dec
aad
adc
data16
iret
inc
shlb
jecxz
les
push
arpl
adc
adc
cmp
mov
push
movsl
jo
jge
push
push
sbb
mov
in
dec
in
jns
and
mov
imul
xlat
mov
xor
cmpsl
aad
dec
daa
xchg
fisubl
pushf
or
fst
cli
scas
in
cmp
adc
ret
pop
fldcw
mov
mov
insb
add
push
ja
pop
insb
inc
pop
insb
mov
jge
lahf
in
imul
mov
outsb
rcrb
arpl
popf
shrb
mov
movsb
pop
cmp
push
dec
out
or
neg
jno
sbb
mov
jae
ficoml
mov
repz
clc
push
insl
and
std
cmp
popa
dec
jno
scas
daa
xor
mov
arpl
test
test
xor
rorl
lods
scas
pop
dec
pop
fistl
stc
imul
adc
cbtw
or
mov
add
mov
mov
shrl
dec
mov
lcall
pop
xchg
rcrl
dec
mov
gs
mov
adc
push
test
pop
adc
xlat
pop
jno
sbb
adc
jno
jb
lods
int3
xor
lods
pop
stos
jg
cs
cmp
fs
inc
mov
jmp
mov
test
cmc
repnz
fs
pop
nop
dec
ret
arpl
add
push
cmp
dec
mov
fnstcw
into
sahf
push
insl
outsb
enter
into
sub
lea
lods
sbb
fwait
hlt
shll
sub
pop
ret
int
sub
xlat
negl
xor
xchg
pop
mov
pusha
jno
pop
imul
repz
in
dec
mov
fstps
outsl
cli
sub
or
dec
out
out
mov
inc
cltd
pop
lret
std
jge
mov
xor
and
arpl
mov
sbb
or
cmp
and
lret
xchg
sbb
fstpl
cld
adc
fimuls
xor
in
jne
sbb
inc
lret
mov
les
scas
dec
shll
lods
sub
incb
mov
pop
sbb
out
and
sub
jl
notb
out
fbstp
inc
or
and
and
into
mov
sbb
cld
add
fisubrl
sbb
adc
orl
adc
mov
jl
sbb
mov
mov
mov
in
cli
adc
cs
mov
scas
pop
addr16
push
mov
jo
mov
or
fsubrl
push
mov
add
dec
xor
ss
pushf
int
sub
scas
mov
sti
and
lods
stc
xor
pop
add
sarl
ret
nop
pop
xchg
dec
mov
mov
dec
mov
adc
in
cmpsb
sbb
scas
shr
xor
cmpsb
popf
and
push
inc
and
test
fisubs
sbb
addr16
jo
add
mov
int3
add
out
js
push
mov
pop
jle
je
inc
sub
sub
push
push
sahf
lret
pop
xor
outsb
sbb
mov
inc
xchg
xor
push
and
sub
pop
push
leave
stos
lods
xchg
jmp
sbb
lcall
icebp
popa
adc
mov
repz
adc
cltd
das
or
pop
and
push
int3
mov
inc
das
clc
adc
dec
int3
arpl
dec
in
cmc
push
addr16
movsb
imul
dec
add
push
cmpl
cltd
push
pop
sbb
cmp
dec
in
xor
add
xchg
je
jnp
xchg
mov
insl
pushf
mov
dec
test
push
pop
inc
inc
loop
sub
ljmp
push
dec
push
mov
xlat
sub
vpaddd
push
adcl
test
xchg
rcll
mov
push
mov
ljmp
cmp
sbbl
movsl
vmptrst
mov
daa
cmpsl
sarb
cmpsb
jbe
out
dec
xchg
aas
imul
mov
push
ja
dec
dec
lret
xchg
push
popf
sbb
fldenv
cmpsl
repz
decl
mov
ds
inc
popa
pop
and
inc
mov
xor
rolb
and
clc
xor
data16
sbb
aad
out
lcall
fwait
enter
push
sahf
mov
into
sub
nop
cmpsb
inc
fisubrl
add
sahf
lcall
popa
movsl
nop
lods
ljmp
xor
sbb
push
lahf
scas
or
je
rcrb
add
pop
repz
pop
je
imull
stc
mov
mov
ljmp
ret
adc
jns
jg
dec
sbb
nop
push
aam
pop
push
out
call
addr16
jmp
fs
iret
or
jp
popf
mov
dec
call
adc
fadds
mov
push
add
dec
lahf
sti
adc
jb
insb
jmp
and
and
sub
mov
lret
sub
cmp
sub
cmp
movsl
pop
je
in
mov
scas
lahf
cli
and
ss
xchg
bound
rorl
hlt
int3
cmp
arpl
ss
adc
xlat
push
mov
and
test
pop
mov
inc
inc
mov
ss
gs
fbld
pop
xchg
jp
mov
das
adc
ficoml
adc
shr
xor
add
dec
lods
mov
leave
xchg
cli
mov
sub
fnsave
pop
pop
sub
add
pop
outsb
dec
icebp
jg
dec
push
xchg
xchg
clc
mov
loopne
inc
sub
push
jbe
add
mov
jg
add
or
mov
cmp
ret
cwtl
xchg
or
push
jns,pt
adc
fsubr
cmp
jne
rcl
inc
pop
push
imul
jmp
mov
jmp
stos
mov
mov
jmp
inc
int3
cmp
cwtl
or
cs
je
inc
inc
push
les
add
sbb
roll
xchg
and
pop
or
cld
and
jp
jnp
sub
stc
mov
mov
hlt
mov
sti
test
leave
out
jno
popa
mov
imul
jne
cmp
cmp
mov
movsb
into
ds
outsl
jno
or
jns
ljmp
jecxz
fidivrs
mov
insb
mov
repnz
ficoms
iret
popa
punpcklbw
sbb
sub
lea
sti
add
cmpsl
lds
scas
mov
mov
mov
pushf
pushf
xchg
test
jns
add
outsl
test
fisttps
push
lret
test
pop
popa
fnstsw
mov
je
xchg
shl
test
mov
out
push
inc
jno
push
daa
lret
aad
push
shrb
movsl
outsb
sti
xor
fcompl
sbb
dec
movsl
sub
cwtl
jns
push
push
inc
sbb
adc
push
mov
sbbb
sub
jnp
iret
inc
sub
add
ljmp
push
inc
in
shrl
fnstsw
int3
lea
pop
jno
call
push
fnsave
or
mov
xchg
daa
les
ret
mov
and
repnz
xor
aam
mov
cmp
fldl
dec
imul
daa
and
jge
pop
xchg
mov
loop
xchg
shrb
sbb
fnsave
add
cwtl
das
cmp
mov
jnp
push
push
jae
sub
loope
arpl
outsb
push
jmp
push
add
add
js
mov
mov
dec
sub
add
nop
xlat
fimuls
rep
mov
ret
add
data16
jge
aam
xchg
push
push
stos
sub
jmp
sbb
pop
subl
xchg
cmc
jae
pushf
jbe
jge
popf
mov
mov
stc
dec
arpl
push
dec
cmp
sbb
or
dec
adc
dec
fisttpll
xchg
cwtl
cmpsl
ja
pop
inc
mov
ja
and
popa
jp
dec
ss
enter
mov
pop
sub
and
xchg
out
adc
jbe
sbb
jmp
daa
jae
or
fcomi
push
sbb
faddl
pop
les
push
pop
inc
fnstcw
sbb
clc
mov
test
stos
mov
sarl
dec
inc
push
adc
shlb
in
movsb
jno
fnsave
js
ficoms
sbb
push
int3
aam
jb
outsb
xchg
adc
and
into
adc
cmp
cmp
repnz
fcompl
idivb
mov
stos
enter
paddsw
sub
js
cmc
or
inc
lret
pop
call
cmp
jp
jp
idivb
into
jge
icebp
cmp
rcll
push
mov
mov
ret
mov
push
xchg
xlat
jp
loopne
lods
lcall
loope
loope
aaa
popa
rorl
cmpl
fincstp
fmuls
clc
inc
gs
mov
in
sarb
push
or
cmpsb
mov
fiadds
jno
mov
std
and
leave
cwtl
push
jae
mov
shrl
xor
mov
xchg
imul
pusha
fsubl
das
adcl
push
pusha
sbb
pop
inc
outsb
imul
lock
ret
mov
xchg
outsb
xchg
push
push
and
xlat
xchg
jecxz
dec
jg
call
push
lods
outsl
aas
es
fdivr
xchg
lcall
adc
aaa
sub
inc
aad
shlb
icebp
cli
dec
test
stos
pop
lret
jae
leave
jmp
sahf
and
scas
xor
mov
ret
sub
js
gs
xchg
scas
dec
hlt
sti
rolb
ja
xor
insb
sub
pop
cmc
call
cmp
ret
inc
outsb
sbb
repz
push
cwtl
insb
or
std
cmp
inc
sub
jne
cmp
push
scas
gs
adc
addb
idiv
adc
imul
mov
mov
jne
fistpl
xchg
and
nop
adc
mov
sub
or
add
outsl
sar
daa
dec
je
rcrb
or
vpackuswb
stos
repz
jecxz
pop
into
das
push
fists
icebp
adc
shl
lods
cli
ja
or
cli
out
stos
pop
sub
mov
xchg
mov
pop
inc
fbld
lock
orb
dec
jae
pop
xor
lret
mov
cld
cwtl
sub
push
mov
in
xor
adc
mov
jmp
not
mov
xlat
add
punpckhbw
push
popf
xor
pushf
testl
fidivrl
pop
mov
pop
dec
adc
push
test
leave
adc
pop
stos
mov
jae
push
aaa
fwait
lcall
mov
add
ljmp
repz
mov
ss
aaa
cmp
ret
sub
mov
fchs
mov
mov
jno
inc
or
dec
mov
ja
inc
stc
pop
mov
movsl
dec
stos
outsl
jmp
push
xchg
mov
dec
and
inc
jno
cmc
dec
push
test
stos
in
cmpsl
push
inc
movsl
aas
rol
test
int
emms
cwtl
adc
aam
movl
adc
dec
scas
ret
sub
js
cld
rcrl
dec
inc
push
les
pop
mov
jmp
adc
cld
cmp
xor
pop
jp
int
sub
sbb
inc
pusha
jle
sbb
es
mov
addb
fsub
fs
push
jae
rclb
in
decl
mov
xlat
jmp
dec
shlb
in
test
adc
aaa
faddl
dec
in
sbb
out
loopne
les
cmp
movsl
pusha
scas
ficoms
push
mov
hlt
xchg
inc
leave
das
aas
out
mov
stos
aam
jl
ds
inc
mov
push
dec
xchg
jno
mov
or
out
movsb
mov
lods
xor
rolb
xchg
sbbb
jae
sbb
cltd
jne
jle
repz
push
ret
into
fdiv
popa
stos
dec
push
mov
xchg
cmp
lock
or
out
inc
lea
stc
pop
aas
pop
ljmp
mov
mov
out
dec
sahf
in
and
xchg
mov
add
jae
cltd
push
in
sbb
dec
scas
bound
add
ds
lret
mov
add
ret
inc
adc
and
mov
xlat
mov
xchg
sub
int3
ds
push
lock
movsb
int3
sub
inc
loope
mov
repz
sub
stos
int
cmpl
pushw
xor
ljmp
xchg
fs
ja
mov
std
call
lods
mov
mov
testb
mov
push
mov
pop
jmp
push
xor
ficoml
adcb
mov
imul
mov
and
js
or
fstpl
and
cwtl
sarb
adc
mov
jg
xor
mov
or
xchg
scas
cmp
push
xchg
ss
sub
mov
daa
mov
xor
stos
cmpsb
and
cwtl
jmp
inc
std
xchg
das
pop
aad
cmpsl
scas
jmp
push
mov
arpl
mov
loop
push
fldcw
jle
int3
outsl
neg
push
out
jecxz
mov
iret
cmpl
bound
arpl
nop
clc
sbb
arpl
in
addr16
fsubr
sbb
push
xchg
and
mov
test
ss
push
addb
sub
test
mov
lods
xchg
bound
ds
adc
pop
test
testl
test
mov
loope
inc
jecxz
cmpsb
jmp
pop
and
imul
mov
pop
mov
ds
imul
stc
lret
aas
test
cmp
lcall
std
xor
mov
sbb
mov
or
xchg
push
mov
ss
out
sbb
sbb
icebp
repz
arpl
mov
out
pop
push
jbe
xchg
scas
mov
inc
clc
mov
sbb
and
cmp
call
mov
inc
and
imul
scas
pop
sub
jmp
add
cld
or
or
or
and
icebp
jno
nop
test
test
mov
in
jbe
mov
dec
aaa
repz
leave
sub
xchg
fisttps
xor
mov
ljmp
lds
dec
hlt
lahf
cld
or
inc
add
lea
cmpsl
gs
stos
push
popa
sbb
out
arpl
pop
push
cmpl
stos
sti
ret
aas
aas
test
shlb
pop
sbb
adc
aad
int3
clc
mov
or
sbb
lods
and
aam
xor
incl
out
or
dec
add
icebp
xchg
ret
inc
popf
lret
cmp
movsl
sub
in
insl
aad
push
jecxz
loopne
out
jmp
cltd
movsb
add
mov
dec
cmpsl
mov
inc
xchg
pop
ljmp
std
mov
or
pop
adc
test
sbb
jno
adcb
incb
repz
mov
dec
mov
ljmp
push
jne
or
out
mov
jae
adcb
mov
popa
popa
sti
clc
jo
mov
sbb
stc
lds
in
mov
dec
ret
stos
iret
mov
loopne
push
mov
xorb
sbb
adc
dec
cmc
xorb
shrl
addr16
lcall
lods
xor
push
fwait
cmpsl
mov
jl
lds
int3
insb
jne
push
mov
out
adc
jmp
sahf
mov
jo
sub
in
jae
dec
mov
aam
mov
pop
and
insl
es
enter
dec
into
and
lea
out
mov
jae
inc
and
shr
push
int
sub
xchg
cmp
mov
out
pop
push
push
sar
mov
outsb
in
pop
hlt
xchg
nop
xor
mov
add
xchg
and
mov
cld
cmp
adc
mov
pushf
add
pop
push
cmc
add
sbb
lods
pop
pop
push
sahf
mov
into
mov
mov
shrb
dec
or
lds
ret
push
sarb
or
mov
lods
out
scas
pop
lods
jne
ja
mov
mov
ret
sub
xchg
pop
xor
dec
cmpsb
and
cmp
test
aad
in
add
movsb
sub
clc
dec
out
fdivl
or
jo
movsl
pop
sub
clc
xchg
or
int3
out
loop
push
or
xor
repnz
inc
dec
cltd
ss
cmp
insb
repnz
mov
daa
pop
call
mov
repz
inc
inc
scas
sub
lcall
adc
fcoms
jle
mov
iret
notl
inc
movsb
pop
sbb
push
jp
sbb
mov
add
mov
inc
push
xchg
jg
dec
cmp
xor
ds
mov
add
or
jecxz
cmc
ret
aas
incl
push
movsl
xor
push
bound
pop
ds
mov
lret
ljmp
lret
jle
xor
bswap
test
pop
jp
and
cmp
jle
testb
xor
sbb
loope
ja
dec
jmp
aas
mov
pop
push
add
loop
jle
jo
inc
cmp
fcmovnu
lea
sbbl
inc
mov
xor
mov
cs
mov
and
mov
mov
in
inc
aas
imul
das
ja
es
int3
xor
out
cs
xchg
insl
pop
jnp
pop
adc
adc
dec
mov
pop
add
push
mov
lock
in
imul
cmpsl
ret
dec
lods
loope
adc
repz
outsl
jmp
push
xchg
fwait
in
and
or
ja
shlb
pop
xchg
fsubl
mov
ret
lret
inc
mov
dec
gs
or
xchg
mov
rolb
iret
inc
mov
mov
xor
sti
push
adc
lods
dec
aaa
or
subb
loop
in
mov
mov
dec
std
into
popa
aaa
cmpsb
ja
dec
or
out
stos
sti
clc
and
pop
mov
inc
xchg
negl
lret
add
pop
out
mov
mov
scas
lahf
test
inc
test
pop
lods
and
or
dec
mov
xor
lods
sub
sti
jmp
nop
cmp
leave
ret
pop
xchg
jle
jl
idivl
mov
fisttpl
cmp
int3
gs
lea
cmpsb
add
jp
mov
xorb
lea
xchg
mov
test
dec
pushf
repnz
int
test
cmp
or
sub
loopne
pop
cmp
lcall
rclb
test
push
movl
jl
out
popf
lcall
cmp
jmp
or
mov
fs
sbb
sub
int3
cld
mov
xchg
loope
xor
xchg
ja
jbe
xlat
ja
adc
pop
xor
jb
loop
divl
test
sbb
adc
mov
lock
ret
in
xchg
mov
pop
adc
adc
jecxz
shlb
mov
lea
mov
xchg
movsl
jno
fnstcw
push
mov
lahf
bound
mov
pop
xor
mov
push
icebp
pop
mov
cmp
jmp
icebp
iret
xor
dec
cmp
mov
push
out
hlt
pop
pop
inc
sahf
and
test
mov
sub
frndint
pop
or
jle
jo
sar
in
mov
aas
fmuls
es
icebp
test
in
dec
pop
mov
call
lock
repz
in
push
push
add
rorb
ja
mov
inc
sub
push
mov
pushf
adc
and
cli
jp
dec
cmp
inc
cmpsb
dec
cwtl
jb
or
pop
xor
sbb
insl
stc
add
mov
pop
sub
mov
push
sbb
pop
daa
clc
test
jmp
js
add
xor
mov
mov
cvtps2pi
jmp
mov
mov
mov
ret
xor
and
jp
adc
test
mov
fdivr
outsb
hlt
inc
sub
mul
jge
add
nop
clc
loop
jns
aad
mov
scas
dec
mov
pop
mov
push
fwait
aaa
testl
dec
pop
sbb
mov
loopne
push
dec
inc
adc
aas
aaa
sub
or
fidivrs
outsb
dec
or
dec
sub
mov
in
cmp
icebp
leave
mov
jge
mov
or
adc
push
adc
dec
add
mov
repz
mov
and
fiaddl
stos
or
xor
mov
dec
xor
jp
pusha
sub
sub
int
dec
sub
and
adc
or
push
cmp
sub
cmp
adc
stos
pop
sbb
pusha
push
popa
add
jmp
and
bound
or
pop
and
repnz
lods
pop
hlt
stos
jle
pop
inc
mov
add
scas
imul
shll
sub
adcl
jns
pop
sbb
fldl
lock
ja
stc
and
clc
sub
add
dec
mov
std
add
dec
cli
push
sub
int3
stc
push
jnp
sti
push
dec
pop
mov
mov
cmp
iret
movsl
rolb
xor
fbld
jp
jge
les
sbb
int
cmp
pop
popa
inc
push
outsb
and
or
xor
mov
mov
pushf
and
ret
inc
lods
es
sbb
aad
lods
outsb
lods
add
fs
stc
dec
mov
mov
xor
lret
not
out
stos
ret
add
repz
fists
pop
mov
adc
lock
sti
xor
xor
mov
jecxz
cmc
inc
xor
outsl
into
sbb
imul
sbb
pop
cmp
les
data16
lahf
inc
mov
in
in
clc
xchg
test
cld
mov
in
daa
and
mov
ret
pop
xor
shll
outsb
ja
push
fmul
adc
add
mov
aad
lods
jle
shlb
lahf
push
inc
out
mov
test
cmp
or
add
ljmp
cwtl
pop
cli
or
fisttpll
sub
sub
pop
mov
scas
push
aas
pop
insl
dec
imul
loopne
jge
mov
xchg
pop
jmp
xchg
dec
xchg
dec
cmp
int
shlb
dec
push
clc
ss
fs
out
sub
adc
in
loopne
xor
mov
test
daa
or
jnp
fs
mov
ds
and
daa
mov
push
insl
pop
jl
iret
aad
mov
dec
push
cwtl
icebp
or
stos
cmp
add
push
pop
and
cmc
cmp
into
mov
fiaddl
mov
xchg
iret
shr
cmp
fnstenv
sbb
and
and
outsl
xchg
jo
mov
inc
jo
sahf
jl
gs
mov
pop
arpl
or
push
mov
xor
push
lods
pop
test
mov
ja
sbb
data16
test
dec
ljmp
push
xchg
mov
push
inc
shr
sbbl
imul
js
cmpsb
pop
sbb
xchg
jne
dec
sub
mov
or
fwait
xor
inc
scas
and
test
xchg
adc
loopne
cmp
sahf
in
stos
addr16
pop
repz
xor
or
adc
enter
fs
lea
pop
jae
or
cmp
shlb
sub
pop
push
pop
cmp
insb
xor
outsb
adc
dec
push
test
in
push
es
cli
mov
lahf
lods
fists
add
jge
add
into
cmpsb
movsb
test
xlat
jne
ret
mov
frstor
loop
mov
ss
call
call
stc
imul
push
and
mov
mov
inc
les
xchg
xchg
push
pop
stos
xchg
xchg
pop
mov
cli
add
sub
shll
jge
dec
idivl
push
pop
aam
int
adc
add
rcl
sub
outsb
add
jno
int
lea
and
xchg
fsubl
bound
xor
fwait
jo
lahf
stos
lods
das
dec
mov
xchg
xor
push
int3
jge
repz
bound
xorl
das
add
iret
push
fwait
sbb
cmp
xor
xchg
iret
out
aad
lds
cmpsb
cmpb
scas
xor
loope
mov
xor
inc
or
pop
popf
popf
add
loopne
cmp
mov
lds
jg
fs
repz
in
loope
or
dec
pop
movsb
adc
pop
lds
orl
lret
and
pop
push
fwait
xor
dec
mov
xor
mov
stc
stos
mov
mov
cmp
push
fimuls
out
shlb
in
inc
push
lods
inc
push
ror
add
loopne
xchg
inc
in
repnz
ja
dec
push
mov
nop
inc
out
mov
nop
call
cmc
aaa
and
cmp
aam
movsl
xchg
pop
adc
orl
jp
mov
jno
stos
inc
jle
popa
nop
cmp
clc
jnp
mov
mov
out
addr16
sub
pop
xchg
std
jle
inc
lcall
scas
inc
stc
jp
xorl
mov
cmp
pop
fmull
repnz
inc
out
clc
push
cmp
fwait
popa
pop
mov
out
mov
adc
jle
sbb
rcll
xor
xchg
mov
shlb
and
xor
test
xorb
movsb
sbb
mov
bound
out
popf
cmp
pop
cmpl
lahf
cmc
xchg
ja
xor
mov
jg
sbb
or
cmpsb
inc
mov
add
xlat
or
jl
sbb
push
aam
popf
or
cmp
mov
add
jno
sub
sbb
inc
mov
jge
rorb
faddl
ret
sbb
jbe
jge
fisubl
movsb
lds
add
xchg
loopne
in
cld
mov
push
stos
leave
and
xor
lea
mov
out
xlat
cmp
les
or
mov
mov
sahf
xchg
jne
movsl
aad
cmp
add
fsubs
mov
mov
cs
push
ja
out
pop
mov
mov
push
aas
add
into
adc
xor
fwait
push
lahf
popf
push
mov
pop
xchg
leave
add
ja
popa
add
and
inc
push
test
ja
adc
inc
pop
rclb
push
mov
bound
mov
mov
inc
cmp
mov
dec
mov
imul
loope
adc
cmp
movsl
imul
dec
cmp
push
sbb
decb
add
in
ljmp
inc
bound
sahf
jmp
xor
xor
call
inc
leave
adc
pop
mov
in
pop
sub
adc
dec
push
jbe
xor
xlat
inc
adc
dec
pop
mov
mov
rcrl
or
sub
and
divl
mov
pop
sub
clc
ret
outsb
xchg
js
fsubs
rol
in
sub
inc
jge
fwait
xchg
ret
sahf
test
lods
cmp
and
fs
inc
movsb
xlat
popa
jne
xorl
pushf
fisubl
pop
push
sbb
mov
fisubrl
pusha
xchg
cmc
jb
mov
data16
fcomp
and
fstl
cmp
adc
pushf
in
popa
popf
ss
dec
pop
inc
lret
push
xlat
and
je
xchg
test
mov
inc
std
mov
xorl
push
dec
popf
pop
insb
jmp
cwtl
sub
ljmp
push
jmp
xor
fidivl
xchg
jns
xchg
lcall
out
mov
jg
push
outsb
loopne
xchg
jns
xor
adc
test
fs
pop
sub
xchg
notb
sub
mov
or
out
std
hlt
lock
cltd
xchg
sbb
push
dec
movnti
mulb
gs
inc
in
js
mov
ljmp
pop
push
movsl
outsb
aad
mov
cltd
cmp
inc
stos
xor
test
xchg
or
cmp
mov
gs
in
cs
sub
mov
ret
arpl
popa
push
outsl
rclb
add
jno
lods
enter
sbb
pop
add
outsb
adc
popa
js
sub
jns
xor
repnz
push
xchg
imul
or
add
or
sbb
adc
jg
movsb
aaa
rclb
sub
mov
xor
lcall
xor
shll
int3
psrlw
fiadds
sub
jmp
test
lods
xlat
shr
mov
jecxz
sub
sbb
xchg
dec
cmp
repnz
out
ss
popf
mov
dec
data16
push
lahf
jb,pt
inc
push
sbb
fildl
sbb
pop
xchg
adc
push
and
sbb
lcall
mov
dec
daa
mov
pop
inc
sarb
aad
mov
out
and
in
mov
loope
mov
mov
cmp
rorb
ret
add
mov
mov
mov
fnsave
ret
sbb
movsb
jo
mov
dec
sub
fidivs
fs
push
add
push
sti
or
int3
sbb
stc
movsl
mov
mov
jnp
and
sbb
pop
or
push
roll
add
inc
lods
dec
xchg
test
pop
jmp
mov
mov
jne
or
xchg
das
or
mov
mov
fists
inc
and
lock
sahf
hlt
sahf
int
xor
lock
repnz
in
mov
add
jl
test
dec
fdivs
mov
sbb
gs
pop
and
outsb
sbb
adc
mov
mov
inc
adc
and
movsl
fs
push
les
incb
cld
out
mov
xchg
sub
ljmp
jnp
jne
scas
outsb
push
mov
enter
das
cmp
cld
inc
test
inc
in
outsb
xor
dec
mov
insl
movsl
ss
push
aam
pop
out
mov
popf
lea
in
inc
gs
sub
inc
mov
dec
xchg
nop
in
adc
les
loope
movsl
fs
pusha
scas
fbstp
pop
dec
gs
or
jl
mov
roll
mov
inc
lret
sub
xchg
out
xor
push
push
mov
out
popa
or
stos
add
loope
cmc
in
psrlq
cwtl
sbb
fsubl
cmp
insb
dec
cs
insb
inc
ja
cld
pop
mov
and
cmpl
add
adc
not
adc
in
push
jno
mov
inc
add
push
popa
dec
aas
xchg
dec
dec
inc
ret
cmp
adc
shl
dec
jle
push
xchg
push
mov
repz
jecxz
adc
repnz
cmp
test
dec
int
pop
dec
inc
shlb
jmp
or
jne
lods
xchg
dec
shrl
dec
in
mov
dec
ret
mov
pop
rcrb
mov
mov
cmp
pop
cmp
cmp
iret
out
or
daa
dec
andl
sbb
push
mov
mov
jmp
pop
or
xchg
xchg
jnp
test
push
mov
cmp
xor
lahf
and
ljmp
dec
stc
sub
nop
dec
xchg
test
lahf
gs
arpl
cmp
dec
aam
jae
fstpl
mov
dec
xchg
xchg
and
test
test
cli
sbb
insb
fisubs
fisubrl
repnz
fbld
es
jnp
and
fimull
mov
push
lret
outsl
push
test
cs
xor
daa
mov
push
clc
xchg
stos
mov
jbe
and
jmp
fbld
or
pop
add
xchg
pop
jl
arpl
or
sub
andb
adc
xchg
add
push
mov
pop
lret
cmp
xor
mov
jp
mov
ret
lock
mov
cmpsb
int
add
call
pop
or
push
sti
mov
stos
daa
fdivl
test
inc
adc
ret
jl
sti
fadds
pop
int3
pop
mov
ffreep
mov
fnclex
lcall
into
loope
dec
dec
psrlq
fcmovb
mov
stc
lods
unpckhps
xor
pop
aaa
jl
jle
xor
sbbl
stc
push
pop
jne
sub
adc
inc
sub
and
adc
sub
cld
add
push
mov
lcall
add
ja
les
int3
push
rcrl
ds
xor
mov
lods
scas
nop
adc
enter
jnp
mov
jo
jg
lcall
pop
jecxz
xor
pop
loop
inc
sbb
pop
add
out
push
scas
mov
jns
mov
out
pop
mov
clc
push
pop
cltd
dec
mov
lods
stos
imul
aas
mov
ss
mov
push
add
int
hlt
ds
sbb
cmp
pop
cs
out
sbb
sbb
push
out
ret
mov
jae
push
movsb
leave
rcrb
cmpsb
adc
push
fldt
cmp
pop
jge
mov
or
outsb
mov
hlt
lods
fxch
adc
fs
test
xor
in
and
in
cmp
jb
cmp
aaa
out
cmp
jmp
imul
rcl
push
sub
pop
xchg
mov
lods
dec
xchg
fcompl
in
mov
cli
mov
rcr
or
adc
repz
mov
add
mov
or
xorb
lds
inc
cmp
sbb
or
lret
mov
shll
mov
push
mov
xor
cwtl
mov
pop
dec
lods
jge
jnp
test
dec
xchg
jno
push
cmpsb
sbb
aam
fcoml
or
loope
jbe
enter
int
mov
or
push
aad
dec
xor
repnz
in
cltd
adc
lret
popa
icebp
ss
ror
mov
inc
in
aad
push
dec
xor
push
lahf
cmp
mov
sbb
and
int
pop
xchg
loopne
rol
scas
aam
mov
pop
jp
jg
jns
cmpsl
rolb
mov
xchg
push
cmp
popa
cmp
push
in
inc
out
stos
scas
jecxz
mov
dec
scas
add
xchg
scas
mov
and
fstl
cmc
mov
out
cmpsb
pop
jg
jno
sahf
sub
cltd
imul
add
out
pop
cmp
sbb
cmp
lods
dec
notl
adc
in
xor
xchg
jecxz
arpl
fidivrs
xchg
xchg
xchg
dec
mov
mov
mov
inc
pushf
jno
pop
push
ret
mov
cmp
cli
sub
shlb
add
or
mov
fsubs
or
or
xchg
push
adc
adc
loopne
sub
mov
mov
jmp
add
xor
inc
int3
adc
loop
imul
mov
pop
daa
shl
jmp
mov
aad
and
cmp
out
sub
leave
stc
and
cmpsb
fcomps
test
fiadds
xor
mov
mov
nop
sbb
sub
inc
add
push
mov
and
int3
mov
push
outsb
imul
jo
pushw
dec
cmc
out
push
push
and
jge
addr16
jnp
rorl
push
lahf
stos
push
jg
sarb
bound
push
pop
ljmp
mov
push
lret
mov
jae
in
or
les
push
xor
adc
cmp
ds
dec
lret
push
push
cmp
mov
test
mov
jecxz
ljmp
mov
and
dec
repnz
loop
aad
pop
aas
lahf
mov
push
jns
jbe
mov
cmp
rorl
ljmp
inc
push
jb
loopne
les
mov
adc
fcom
mov
and
daa
add
cmp
adc
xchg
aam
imul
push
mov
stos
addr16
add
cmc
pop
jl
sti
mov
nopl
stc
push
add
lods
rorb
mov
bound
pop
into
aas
pop
in
pop
and
and
outsl
cltd
or
rcrl
xor
xor
adc
ds
int
jge
mov
pop
movsb
mov
mov
out
sbbl
and
mov
and
or
dec
ds
and
xor
in
pop
jmp
jge
repnz
rorl
cltd
lret
pop
xor
dec
shll
movsb
inc
in
inc
push
cmp
lret
xchg
and
in
out
lods
sub
clc
mov
in
or
jbe
test
jae
arpl
in
cmpsl
sbb
pop
out
loopne
push
cld
xor
enter
xchg
movl
mov
and
out
movsl
pop
push
in
aam
lret
pop
repnz
xor
decl
test
jb
out
inc
pop
int3
mov
ret
and
cld
cmpsb
push
addr16
stos
pop
and
iret
adc
scas
lahf
jae
sub
std
and
scas
hlt
xchg
mov
jb
adc
fwait
pop
push
cmp
cmp
cmpsl
pop
ss
or
iret
loopne
jecxz
xor
or
or
test
pop
out
outsl
or
jecxz
inc
shrl
cwtl
inc
xchg
lea
dec
push
jne
js
jge
inc
push
lret
pushf
gs
sbb
faddp
pushf
jmp
test
out
add
sahf
add
adc
jno
loope
dec
dec
out
out
fs
ficoml
lcall
leave
inc
pop
and
data16
mov
xchg
cmp
pop
jne
pop
repz
pop
fs
aaa
push
push
push
dec
mov
imul
sbb
xchg
inc
icebp
mov
add
xchg
into
popa
adc
lahf
mov
inc
or
mov
outsl
not
lcall
mov
mov
mov
pop
hlt
mov
add
ror
mov
mov
xchg
jl
xchg
ss
leave
mov
xor
cmpsl
sbb
adc
fidivrs
inc
cwtl
dec
inc
std
push
pushf
pop
sub
insl
mov
push
sub
andl
cmp
int
ror
mov
cmp
mov
sub
lcall
xor
push
jnp
pushf
outsb
repnz
dec
jbe
adc
sbb
mov
sbb
punpckhdq
lods
jle
icebp
mov
inc
out
insb
pop
aaa
inc
lods
cltd
xor
xchg
aam
in
fs
mov
and
mov
daa
fimuls
test
mov
cltd
pop
mov
jmp
xorl
adc
push
dec
rcrb
imul
test
fs
movsb
add
cmp
pop
jg
in
xor
add
jmp
add
adc
int3
mov
clc
add
dec
jns
sti
stc
data16
arpl
adc
mov
sets
cltd
push
jmp
out
adc
mov
div
test
jnp
adc
loope
fs
xchg
sub
jo
dec
daa
fdivrl
arpl
xchg
popf
pop
add
lahf
sarl
cmpsb
rolb
ljmp
dec
rol
push
sqrtps
lods
xlat
mov
adc
or
pushf
jmp
dec
rsqrtps
movsl
nop
ret
outsb
es
subl
ud0
pop
push
ds
divl
push
mov
add
dec
mov
ret
jmp
ds
sahf
nop
cmp
sbb
mov
or
xor
addr16
xchg
ret
pop
jns
xor
push
shlb
addr16
jmp
pop
insl
xchg
fsubs
jle
cmpsl
add
jno
fwait
scas
repz
movsb
mov
scas
ss
mov
pop
insl
lds
pop
and
shl
pop
aad
shrl
pop
movsb
and
push
fmull
iret
aad
mov
out
ljmp
mov
in
fldcw
jl
adc
jbe
cli
and
adc
xchg
pop
out
or
stc
in
add
mov
fs
imul
rorl
lea
ljmp
adc
pop
mull
out
sub
aas
dec
and
scas
xor
or
popf
arpl
mov
imul
test
push
xor
stc
add
mov
xor
xchg
sub
mov
stos
outsb
and
cmp
fstpt
xchg
cld
dec
sub
cmp
shll
adc
mov
xchg
jle
push
call
fwait
and
cwtl
pop
jp
jbe
adc
adc
mov
pop
xlat
subb
mov
enter
mov
or
mov
cld
jl
int
inc
cmp
ficompl
bnd
add
pushf
mov
into
jecxz
push
sub
mov
push
adc
out
cmpsl
push
dec
mov
or
mov
repz
pop
push
dec
rcrl
push
sub
pop
push
dec
aad
shl
pop
xchg
ljmp
and
loopne
arpl
lcall
flds
int
and
out
inc
jge
jae
sub
movsl
inc
in
jbe
scas
xchg
ljmp
pop
jmp
pop
leave
lods
inc
xlat
push
mov
mov
xchg
add
xor
out
dec
testb
hlt
and
adc
push
or
inc
popa
sub
rorb
icebp
xchg
mov
int
dec
xor
pop
or
sarl
test
dec
test
repnz
cmp
stc
scas
jo
xor
mov
and
test
dec
mov
fistps
ficompl
loope
inc
pop
jl
dec
xor
push
cmpsl
pop
aam
mov
cmp
sub
imul
fsubl
aaa
jne
lcall
mov
fisttpl
cmp
into
ret
or
shrb
sti
es
pop
cwtl
les
test
jno
jne
sub
xchg
outsb
repz
imul
dec
cmp
push
adc
andl
lret
psubsb
mov
mov
jmp
sahf
lret
fidivrl
sbb
leave
out
hlt
inc
dec
je
pop
jne
adc
cmp
add
jbe
cmp
imul
xchg
outsl
mov
lcall
ljmp
xor
imul
lea
jbe
mov
fsts
in
pop
aad
shll
mov
lret
mov
sbb
mov
pop
cmc
cmp
rorb
test
dec
mov
pop
cltd
cmpsl
nop
roll
fisubl
mov
add
add
shufps
popa
jmp
adc
shlb
sbb
inc
pop
push
push
fbstp
aad
lods
cmp
mov
loope
lods
pusha
mov
imul
nop
cld
in
out
jl
cmp
inc
sub
sub
push
mov
cmp
jg
outsb
jbe
pop
out
jle
jne
cmpsl
jbe
inc
call
stc
cld
sub
pop
hlt
in
or
dec
cs
test
daa
rcrl
fstpl
or
jne
repnz
dec
and
jo
pusha
pop
stos
jecxz
cld
xchg
lock
push
movsb
jmp
daa
or
mov
mov
push
fdivrl
fidivl
push
mov
mov
pop
cmp
les
cmp
ret
cmp
leave
lods
add
andl
or
adc
fmuls
pushl
cmc
fs
cmp
jnp
int
or
lds
pop
subl
add
add
xchg
stc
ficoml
xchg
jne
jle
decb
push
push
icebp
aaa
imul
or
adc
sbb
jp
mov
cmc
mov
add
es
fwait
and
pop
sbb
mov
xchg
test
xchg
pop
negl
cltd
jge
dec
mov
shll
push
pusha
scas
loope
hlt
in
jge
sub
jg
test
mov
cltd
mov
repz
push
in
das
imul
rcll
pop
cmp
push
mov
mov
jo
mov
jbe
push
cmp
lods
cli
inc
push
xchg
dec
arpl
mov
insb
std
fcompl
xchg
jecxz
jae
sub
add
pop
call
xchg
fstp
jae
out
lock
pop
scas
shll
xor
xlat
mov
sub
dec
pop
sub
jnp
mov
push
lret
sbb
jl
mov
pop
xchg
cmpl
jb
stc
inc
or
roll
addl
lret
jp
cli
xor
or
adc
icebp
popf
lret
popa
call
jno
mov
cmp
mov
in
pop
movsl
lret
xchg
das
popa
mov
pop
and
pop
adc
mov
sbb
sbb
ss
mov
push
inc
pop
movsl
cmp
fsubrs
dec
xlat
cltd
fst
push
pop
add
adc
mov
lret
lret
enter
push
roll
inc
sub
mov
sub
cmp
pop
cli
cwtl
ja
loope
repz
out
mov
or
adc
cmp
push
outsb
sub
and
jae
add
out
mov
test
mov
test
shlb
arpl
inc
insb
push
xchg
shll
insl
lods
mov
xor
cmp
or
nop
repz
add
ds
aad
mov
aad
ljmp
xchg
cmp
dec
loop
sbbb
sub
add
cs
pop
sub
cmc
in
rorl
nop
icebp
push
xor
ret
ljmp
fcomps
cmp
inc
mov
pusha
fstpt
movsl
ljmp
xor
mov
das
stc
aam
repz
add
repz
data16
shlb
xchg
sub
mov
jno
adc
fmulp
out
rol
mov
insl
sub
inc
xor
cmp
sub
idivl
xchg
sub
je
inc
lret
mov
xchg
pop
or
int
mov
subb
xor
hlt
mov
je
js
xor
insl
out
cmp
ljmp
testl
test
pusha
inc
add
jmp
cmp
inc
jp
hlt
icebp
lods
insl
subl
cmp
sbb
ret
mov
cmpsl
lods
add
js
dec
testb
stos
loopne
xchg
in
adc
jno
adc
xor
inc
shll
fs
inc
lahf
add
cld
push
int3
dec
mov
xor
cmp
shr
idiv
cmpsl
test
xchg
ret
bound
pushf
bound
fstl
and
addb
das
mov
add
mov
xchg
mov
mov
addr16
stc
ret
pop
push
mov
jne
xchg
pop
mov
dec
push
imul
ficompl
aam
inc
mov
jns
push
aad
push
mov
inc
push
jle
push
mov
add
ret
sbb
xor
stos
pop
call
jmp
pop
pop
dec
xchg
inc
imul
inc
push
push
dec
jp
pop
pop
sbb
imul
adc
sub
pop
test
popf
cmpsl
ja
lock
cmpsl
int
adc
or
adc
enter
aad
bound
cmp
sti
sbb
adc
adcb
fadd
add
jecxz
fistl
ja
in
push
out
push
out
cs
adc
jecxz
test
repnz
sub
test
leave
mov
push
divl
leave
push
push
push
sub
push
xchg
adcl
insl
or
popf
mov
pop
push
add
test
add
test
or
and
lea
push
xchg
add
jp
ss
movsb
movsb
sub
lret
scas
mov
sbb
inc
leave
adc
and
adc
mov
mov
jnp
in
push
and
inc
pop
mov
int
cli
adc
aas
into
xchg
cmp
dec
leave
or
xchg
das
addr16
mov
repz
pop
push
dec
shlb
nop
insl
je
add
mov
push
sub
sbb
daa
pop
pop
xchg
lods
inc
and
inc
sub
idivb
in
rcl
mov
inc
std
or
je
inc
push
mov
rclb
jae
mov
mov
mov
test
pop
push
adcb
pop
jb
mov
ljmp
out
mov
pop
mov
push
sbb
adc
call
ficomps
aam
adc
loope
cmc
xor
scas
js
adc
fisubrs
stc
imul
in
fists
push
repnz
lock
push
popa
mov
mov
rolb
fwait
xorl
and
scas
in
incb
sbb
jl
mov
jmp
movsl
push
adc
out
test
out
dec
sahf
cli
xchg
sti
sbb
and
mov
scas
xor
push
mov
mov
bound
fstpt
lahf
inc
cli
out
inc
in
inc
push
jg
inc
das
inc
ret
popf
adc
push
inc
adc
mov
push
test
dec
or
subb
stc
pusha
lret
adc
cmp
and
jnp
mov
aad
jle
jbe
jb
pop
rorl
mov
daa
repnz
int
mov
and
decl
addr16
fsubr
mov
ds
lret
jl
popl
lahf
inc
adc
jno
xchg
into
mov
shrd
mov
xchg
jbe
sbb
xor
dec
das
mov
sbb
outsl
mov
pusha
mov
dec
pop
shll
sbb
push
outsb
pushl
inc
jg
jnp
lods
leave
loope
sbb
dec
insb
push
aam
cmpl
or
ja
sbb
lret
shrl
loopne
mov
cmp
sub
loope
addr16
out
test
cld
stos
cmp
jnp
in
ds
cld
push
sub
inc
add
sbbb
pushf
les
out
shlb
sbb
fstp
push
xor
dec
push
sbb
ljmp
inc
les
xor
fisttps
xchg
pop
pop
cli
mov
aam
notb
cmp
out
out
test
out
or
icebp
and
push
xor
int3
mov
push
push
pop
lods
lret
je
imul
outsb
fsubrp
mov
mov
jle
out
ret
ljmp
aad
mov
xchg
mov
pop
pop
push
push
mov
pushf
xchg
xchg
out
ret
lods
mov
jle
mov
pop
xor
mov
sbb
ficoms
iret
jb
add
dec
xchg
pusha
xorb
sbb
mov
subl
shlb
inc
fcmovb
xchg
lods
sub
das
jecxz
iret
inc
addb
stos
ja
inc
movsl
push
in
xor
das
sub
adcb
imul
inc
jle
scas
cmp
popa
iret
ss
pop
out
loop
and
cld
jnp
and
in
dec
xchg
cmp
repnz
gs
jb
xchg
mov
sub
jo
rcrb
cmp
fistpl
push
loop,pt
fs
dec
shlb
ja
jle
les
fstps
add
dec
cltd
rorb
cld
pop
mov
and
jle
icebp
lock
xchg
jbe
shll
sub
inc
pop
ds
and
fwait
cmp
dec
add
repz
inc
int3
cmp
push
push
xchg
mov
adc
popf
ds
mov
gs
rcll
divb
loopne
repz
inc
test
addr16
cmc
arpl
or
clc
push
jmp
out
adc
xchg
jge
adc
iret
clc
xor
aaa
insb
repz
mov
dec
mov
sbb
lock
imul
popa
iret
imul
movsl
ljmp
mov
cltd
mov
mov
sub
or
into
shl
mov
in
pop
mov
xchg
adc
fcompl
mov
inc
lret
sbb
mov
dec
pop
fisttps
hlt
xchg
mov
adc
push
push
mov
cmp
cli
push
mov
push
jno
xor
insl
sbb
jmp
mov
ja
bnd
cmp
jge
lods
pop
cmp
fists
dec
imul
fwait
push
andl
outsb
pop
and
cs
pusha
or
mov
icebp
pop
jge
push
adc
fisubrl
sbb
add
cmpsl
int3
outsl
std
inc
daa
xchg
cli
push
mov
out
mov
int
jns
stos
lock
shl
nop
pop
cmpsl
fdiv
idivb
push
xor
jnp
add
ret
cld
pop
sub
fdivrp
jns
mov
fs
insl
or
cmpsl
push
loope
xchg
mov
sub
push
inc
jmp
inc
aaa
jnp
shrb
vmread
das
xor
fwait
enter
nop
inc
aas
popa
xlat
es
jecxz
cmp
pop
cmpsb
push
xchg
sysret
pop
test
ret
pushf
inc
out
pop
loop
jo
in
xchg
ja
out
ret
sub
scas
outsl
test
data16
adc
and
adc
cmc
sub
pop
lock
in
enter
mov
sbb
pop
pop
iret
call
cmp
cmpsl
pop
dec
pop
xor
pusha
das
aam
dec
mov
out
xchg
mov
adc
or
in
fimuls
sbb
pavgw
and
lahf
test
loop
cmp
mulb
shlb
cmp
adc
int3
jl
loop
pop
fucomp
in
pop
xor
cmp
aad
dec
cmp
dec
mov
add
nop
adc
push
dec
mov
mov
sbb
mov
inc
mov
mov
xchg
loope
and
fs
jb
inc
pop
and
fmulp
jecxz
sti
push
stos
jbe
call
add
sbb
hlt
js
test
dec
dec
fs
and
fidivs
cmp
pop
add
shl
mov
jl
into
inc
js
or
xchg
dec
xor
sbb
lods
mov
in
out
outsl
sub
rcll
call
mov
iret
inc
push
rorb
imul
and
iret
inc
fdivl
aad
push
fbstp
les
pop
mov
xor
xchg
fcompl
rcrl
xchg
leave
adc
jmp
dec
pop
aas
notl
jne
mov
jne
outsl
mov
rol
cmp
xchg
inc
lock
jbe
xor
adc
les
into
xor
push
testl
mov
dec
repz
inc
nop
sub
addl
jno
push
jmp
push
shl
mov
outsl
push
inc
xor
mov
cmpsb
rorl
mov
loope
pop
xchg
cli
mov
sub
test
mov
das
pop
push
cmpsl
fbstp
sar
push
in
cmc
fwait
mov
out
push
std
lcall
mov
les
shll
lcall
xchg
out
sbb
jbe
add
inc
xor
mov
fs
inc
xor
clc
jae
add
addl
mov
stos
mov
imul
enter
or
add
lea
adcl
pop
mov
pushf
push
adc
lock
xchg
les
pushf
jb
push
movsb
mov
jmp
lcall
pop
xchg
or
movsb
add
mov
loope
mov
adc
xchg
or
jae
das
lea
xchg
xlat
adc
dec
fcoml
je
repnz
aad
filds
repnz
inc
jl
mov
xchg
cmc
cmc
xchg
sub
ficoml
xchg
xchg
mov
push
xorb
je
jns
mov
imul
and
dec
aam
mov
adc
int3
loopne
adc
or
xchg
cmpps
aaa
sbb
sbb
xchg
mov
xor
stos
mov
ret
xchg
das
popf
xor
mov
test
or
testl
pop
cmc
out
cmp
jnp
jbe
xchg
cmp
xchg
jmp
ljmp
add
in
xchg
or
call
jecxz
lea
mov
fdivl
mov
mov
cs
cmc
fistps
xchg
cmpb
dec
cltd
push
mov
imul
in
xchg
xor
sbb
or
cmp
jmp
jl
lea
jp
cld
in
xor
pop
push
mov
push
inc
aam
mov
xor
imul
jecxz
cmp
call
imul
int3
dec
repz
loopne
adcl
lret
xchg
lahf
sbb
push
mov
and
int
or
cmp
cmc
add
inc
inc
aam
jge
jl
mov
pop
cs
xchg
dec
push
fnstcw
repnz
rcrb
push
call
inc
je
sbb
jne
lea
pop
and
das
sbb
pop
sbb
ljmp
fsubrl
adc
nop
pop
and
loopne
cwtl
and
jl
cwtl
push
mov
cmp
xor
jmp
dec
and
mov
mov
mov
in
jo
nop
lret
sub
sbb
clc
jmp
fs
add
pop
stc
test
or
jecxz
pop
add
and
or
sbb
add
and
aaa
xchg
fidivrs
leave
into
add
outsb
xchg
js
jne
pop
dec
dec
xchg
sbb
jecxz
in
mov
cmp
lahf
and
gs
push
loop
sbb
ret
mov
mov
rol
mov
or
sahf
stos
push
loope
sbb
jno
dec
mov
push
push
call
add
push
dec
repnz
jg
mov
and
xchg
inc
add
inc
lods
jge
data16
loop
cmp
push
int3
mov
cmpsb
and
inc
std
cmc
imul
xor
test
mov
cmp
cs
push
ja
pop
into
jo
cld
pop
xchg
ja
repz
scas
repz
mov
test
mov
and
xchg
xchg
push
fiadds
xchg
cltd
aas
push
das
rcrl
js
enter
inc
loopne
or
pushf
dec
inc
rclb
mov
cmp
lcall
imul
ljmp
cmp
cmc
fsubs
out
push
xchg
sbb
sahf
xchg
dec
cld
test
xchg
mov
les
jnp
scas
in
or
jmp
les
push
sbb
bswap
addl
mov
into
xor
xchg
push
add
xor
push
fdivrl
sbb
mov
xor
insb
loopne
shlb
mov
fcomp
pop
lock
jle
adc
rorb
jb
xor
jl
hlt
mov
imul
test
and
dec
mov
jg
jle
pop
shll
inc
inc
daa
lock
push
lds
outsb
and
fptan
fdivs
pusha
xchg
int3
nop
cli
out
popa
enter
data16
or
push
mul
in
imul
jae
bound
push
outsl
pushf
inc
xor
inc
cmp
sbb
adc
lds
pushf
jp
sti
mull
test
insl
lock
mov
in
rcrl
faddl
fs
mov
inc
sbb
stc
cltd
xor
cmp
mov
push
inc
rol
sbb
scas
push
ret
mov
fdivr
shrb
lods
adc
push
sub
outsb
jmp
out
pop
mov
add
rorl
in
js
cmc
cmp
popa
jno
xchg
jnp
add
insb
das
jbe
xor
loope
insl
ret
mov
xchg
push
lock
xor
add
cltd
ss
aad
xor
sub
or
cmp
out
test
add
xlat
aad
jns
loope
rclb
inc
sub
push
jb
cli
imul
aas
mov
and
jmp
xchg
pushl
int
jo
ja
nop
es
in
mov
push
add
add
into
mov
insb
insl
ss
icebp
adc
push
repnz
and
mov
pop
ss
rclb
xor
fisubrl
mov
dec
sbb
icebp
xchg
clc
out
ret
ret
scas
jnp
sub
lea
cld
rcr
jne
jp
sahf
jecxz
mov
sub
cld
scas
insl
or
push
xor
pop
je
mov
movsb
loopne
mov
mov
fdivl
es
stc
mov
fmuls
dec
aam
in
sar
lea
pop
repz
mov
in
lea
cmp
enter
daa
pop
ja
lock
sarl
jns
je
lea
pop
clc
adc
pop
mov
push
mov
int
jnp
jl
mov
into
call
shlb
push
mov
mov
ret
adc
ja
xchg
shl
dec
je
dec
andb
jmp
outsb
push
idivb
push
push
stos
push
mov
addl
xor
sub
cli
es
addr16
es
cwtl
fcoms
mov
adc
pop
inc
push
js
add
out
cld
cmp
call
mov
inc
lea
inc
sbb
xchg
scas
dec
xorl
data16
es
mov
inc
lahf
mov
fadds
mov
adc
cmp
xor
sbb
cmpsb
mov
sbb
xchg
and
cltd
popa
shl
xchg
pusha
push
xchg
inc
das
outsl
dec
fnsave
mov
std
out
hlt
add
and
std
pop
push
jecxz
pop
jp
sbb
rcl
inc
adc
jle
add
call
rcrl
inc
cmc
and
dec
imul
xchg
pop
daa
push
or
or
mov
test
pop
push
ja
leave
jecxz
xor
ret
pushf
ss
in
jae
pop
loope
jle
movsl
pop
sub
jecxz
pop
outsb
pop
cmp
cmp
scas
xchg
dec
sub
in
xchg
fs
insb
rcll
fndisi(8087
and
mov
aad
ret
push
sbb
rclb
pop
and
xchg
and
xor
test
inc
add
pushf
cmp
xchg
data16
gs
in
pop
movsl
dec
xlat
sbb
adc
mov
loope
pop
fdivs
sbb
adc
dec
aad
stc
inc
addl
outsb
jae
outsl
pop
adc
in
mov
sbb
pop
repnz
mov
xlat
sti
mov
cwtl
movsb
inc
sub
idivb
cmpb
sti
add
cmp
shrl
sahf
hlt
data16
mov
pop
nop
dec
and
adc
enter
jae
aas
sub
pop
imul
jecxz
rclb
daa
xchg
mov
add
lahf
sbb
inc
jb
jnp
lock
nop
shr
mov
movsl
iret
test
andb
mov
mov
or
xchg
ljmp
xor
or
push
sub
jno
add
sbb
jae,pn
sbb
movsl
test
shll
cwtl
mov
mov
pop
bound
mov
test
mov
stos
xchg
sub
cld
rcrb
xchg
out
aad
dec
loope
stc
daa
lcall
divl
sub
movsb
cs
push
cwtl
jp
xor
push
pop
fsubp
aam
mov
cli
push
std
hlt
push
xorl
icebp
jns
pop
mov
add
dec
push
dec
nop
lahf
xchg
jbe
inc
and
aam
jnp
jb
nop
sbb
sbb
xor
popa
add
outsb
jno
gs
aad
mov
xchg
lret
or
jmp
outsb
xchg
sti
push
mov
iret
daa
arpl
dec
push
sbb
dec
popa
vptestnmw
and
aas
shlb
clc
shrb
movsb
xor
push
sbb
divb
insb
movntq
out
pushf
insb
nop
scas
push
sub
mov
pushf
lcall
sub
xchg
xchg
mov
cmpsb
or
scas
sbb
xor
lcall
push
pop
pop
dec
push
rol
pop
dec
fnstcw
dec
shrb
inc
inc
pop
and
jne
cli
and
xlat
inc
nop
in
xor
repz
add
aas
test
mov
inc
cmp
inc
adc
adc
ds
outsb
mov
mov
sbb
cmpsb
cld
scas
out
and
cmp
lods
mov
adcb
dec
rclb
push
xchg
addr16
mov
imul
or
test
pop
aam
fisubs
cld
fdivl
xchg
add
add
cmp
lods
fwait
mov
jmp
rorl
push
mov
push
outsb
sbb
out
mov
in
aad
cmp
jl
loop
sbb
out
stc
das
cltd
dec
movsl
add
test
and
sub
push
cmpsb
dec
mov
adc
or
push
es
jg
cltd
aas
movl
gs
jge
mov
pop
and
mov
xchg
mov
addr16
test
cmpsb
mov
repnz
imul
movups
inc
scas
ja
push
lock
mov
popa
jp
push
sub
cmp
mov
xor
push
and
dec
daa
dec
jno
xchg
pop
test
sti
jb
ficomps
adc
add
sub
mov
mov
xor
subl
push
nop
mov
jae
push
sub
dec
scas
lods
rcrl
rcr
subl
and
jl
mov
xor
lods
mov
ss
fldln2
dec
jmp
mov
cmp
xor
pop
sub
adc
cmpb
pop
add
aas
aad
mov
jns
lds
in
rcrl
inc
pop
xchg
xor
sbb
hlt
pop
inc
or
out
ss
mov
repz
out
mov
mov
pop
enter
xor
jnp
ret
cli
cmp
adc
xchg
cli
in
and
inc
xor
jo
xor
cmc
mov
cld
sub
inc
aam
sarb
call
dec
dec
xchg
test
jnp
inc
jne
es
mov
int3
inc
out
ja
add
shr
out
or
lock
and
or
bound
sbb
jnp
jmp
mov
stos
popf
imul
xchg
sbb
iret
not
push
cmp
cmc
xor
stos
jno
in
test
stos
and
nop
pop
cmp
fsubrl
adc
xchg
gs
xchg
lods
jbe
repnz
in
rcll
mov
rorb
push
loope
jnp
in
cwtl
xchg
neg
pop
cwtl
movsb
sub
xchg
test
int3
in
xor
pop
mov
ret
xchg
sbb
or
cmp
call
or
shll
lret
aam
inc
ja
add
scas
sbb
pop
arpl
jnp,pt
out
ljmp
mov
cld
lea
and
std
bound
fadds
fdivrl
je
cmpl
pop
popa
add
cmp
dec
inc
in
cltd
jb
rcrb
push
pop
jmp
mov
mov
out
lock
jg
jo
inc
fisttpl
adc
ljmp
pop
inc
pop
xchg
ss
sub
sahf
mov
xchg
test
mov
xor
jmp
jle
std
mov
mov
mov
popf
jp
outsl
push
dec
push
mov
ljmp
push
inc
pop
inc
add
stos
outsl
and
and
inc
fwait
sub
dec
fldl
je
aam
pop
aam
sub
sub
or
adc
mov
mov
mov
fstl
test
xchg
cwtl
test
pusha
pop
or
roll
mov
adc
add
or
jbe
insl
push
test
jl
andl
mov
sub
pop
aad
lock
ds
and
in
clc
movsb
sub
dec
lret
jg
call
lea
xchg
stos
addr16
les
in
push
fists
push
mov
repnz
pop
and
imul
inc
mov
sub
cld
sub
inc
xlat
cli
cmc
cld
fisubs
imul
cmc
sbb
fsubs
mov
cltd
push
mov
sub
jg
mov
xor
stos
scas
scas
imul
xor
xchg
ds
inc
outsb
sti
push
cmpsl
mov
mov
push
mov
mov
loopne
mov
mov
sub
fstpl
mov
ljmp
nop
inc
and
xchg
ss
sub
adc
or
inc
ds
pop
inc
in
out
les
add
jecxz
xor
movsb
inc
repnz
or
mov
push
sbb
ss
xchg
mov
mov
sub
mov
sti
fildll
rcrl
cs
pop
in
push
jl
in
dec
clc
jge
cmpsb
inc
inc
test
lods
jnp
inc
test
mov
sub
push
and
cmp
adc
cmp
enter
inc
into
cli
loopne
ficoms
aas
and
sahf
jp
in
sub
xchg
mov
enter
sbb
popf
mov
out
and
push
and
mov
ja
gs
movsb
cmpsl
xchg
jle
sub
cmp
mov
in
cmpb
push
fistpl
imul
ficoms
mov
iret
inc
inc
iret
and
xchg
mov
rcr
stc
mov
cmp
mov
add
xchg
lds
lahf
test
mov
inc
sbb
scas
lods
sub
jecxz
das
cld
mov
pop
bound
sub
mov
and
pop
repz
fstps
inc
adc
imul
lret
pop
xchg
sbb
ds
pusha
dec
jmp
icebp
push
hlt
sbb
inc
inc
loope
jno
rclb
pop
mov
ficompl
out
addr16
push
or
fstpt
and
and
rcrb
push
xor
mov
int3
fcoms
mov
dec
fsubl
and
sbb
dec
daa
bswap
xor
dec
loopne
pop
sbb
subb
addl
pop
test
aam
neg
mov
dec
push
inc
mov
in
into
rclb
add
xchg
dec
and
in
add
pop
jbe
ret
jge
jno
es
jns
mov
jle
cmpsb
pop
pop
dec
add
out
pop
dec
lcall
adc
mov
test
or
xchg
stc
sbb
pop
fwait
fwait
push
mov
sub
mov
jb
xchg
clc
cwtl
pop
clc
xchg
add
popf
cmp
pop
icebp
xchg
jmp
pop
sub
scas
xor
rcrl
mov
mov
dec
inc
pop
pusha
inc
rclb
pop
ljmp
or
inc
inc
daa
push
inc
pop
add
jb
xchg
inc
sbb
jg
idiv
aas
cltd
adc
movsb
stos
cltd
pop
mov
je
xor
pop
out
outsb
mov
test
and
ljmp
aam
insl
data16
insb
enter
cmp
outsb
pop
dec
xchg
movsl
pop
aaa
jnp
ja
or
pusha
test
dec
shl
mov
ret
inc
jnp
cs
mov
pop
mov
je
stc
mov
xor
sub
int
pop
out
mov
orb
aad
aam
adc
popa
dec
sub
sbb
mov
mov
icebp
fidivrl
mov
leave
es
mov
xor
out
ja
pop
icebp
jge
jecxz
mov
iret
pop
dec
sarb
add
add
cld
int
es
pmulhuw
scas
mov
and
ret
cmp
lds
xor
mov
dec
and
int
xor
mov
cli
lock
jg
ljmp
fstpl
add
mov
sub
lods
lret
sub
das
mov
xorb
sbb
xchg
jl
and
pop
sub
mov
sub
daa
ja
int3
sbb
or
gs
scas
popf
push
push
cld
cmp
jp
jns
rcll
shr
sbb
addr16
pop
jecxz
shlb
fldenv
pusha
dec
data16
pop
and
and
adc
add
jbe
int
and
dec
xchg
sbb
leave
dec
nop
mov
push
push
lret
sbb
and
jmp
adc
jmp
cmpsb
iret
dec
pusha
xchg
arpl
add
loop
mov
sub
sub
in
push
mov
mov
scas
xchg
jae
lds
clc
rcl
cwtl
mov
jmp
cmp
pop
xor
mov
orl
out
inc
mov
cld
out
adc
ffreep
jbe
iret
adc
shl
ljmp
cmpsb
leave
pop
scas
mov
out
rolb
lods
repnz
mov
mov
pop
data16
daa
movsb
sub
ret
fbstp
and
adc
add
sub
jge
sbb
mov
mov
test
pop
adc
movsl
xchg
data16
out
xor
iret
cmp
fsubs
repnz
xchg
imulb
lea
aaa
leave
jl
mov
xor
adc
xor
repnz
out
iret
inc
sarb
ror
sub
in
cld
and
incb
sub
push
js
jecxz
add
mov
stos
loopne
fdivl
adc
push
outsb
push
xchg
add
xorl
xchg
fcomps
bound
jp
mov
insl
push
sbb
shrl
mull
dec
fistps
movsb
scas
add
push
stos
shlb
outsb
insl
jle
xchg
imul
inc
jb
lret
jbe
cmp
inc
ret
inc
cmp
int3
outsb
xor
sub
push
subl
cli
and
add
adc
add
sbb
imul
pop
imul
int
xor
ljmp
mov
out
out
add
mov
pop
cmp
xor
mov
aad
insl
test
in
jno
popf
test
lods
movsb
in
out
xchg
push
mov
push
xchg
imull
popf
fldenv
aam
sbb
popa
or
ror
fs
je
aaa
xchg
and
jl
dec
shlb
ret
jecxz
ljmp
aad
push
jmp
je
cmp
in
sbb
sti
int3
adc
mov
sub
loope
lock
lods
insl
stos
adc
lds
insb
sbb
mov
and
mov
in
pop
popa
sub
adc
cmp
aas
lcall
sbb
mov
in
push
enter
aaa
inc
arpl
out
shrl
lds
adc
cwtl
in
jbe
clc
fldenv
jns
lahf
fsubrl
fadds
cmp
pusha
dec
xchg
mov
dec
popf
mov
push
adc
or
or
nop
rol
pop
les
hlt
fwait
xchg
sub
xchg
xor
ds
jbe
nop
sbb
pop
and
pop
insl
mov
inc
push
dec
xchg
fs
out
repz
outsb
add
daa
and
jp
pop
mov
fadd
push
cltd
sbb
jmp
ret
adc
xchg
insl
clc
push
sahf
or
mov
mov
sub
int
loope
push
lcall
cmp
or
inc
arpl
push
ret
lock
mov
ja
xor
repz
shlb
inc
xor
loop
add
push
fcompl
int
pushf
xchg
push
insl
and
mov
dec
xchg
sbb
mov
adc
and
mov
orb
cli
lret
xor
fists
inc
pop
andb
fnstcw
mov
sub
or
pop
xor
jnp,pt
stos
addb
leave
cmp
xor
mov
sub
mov
adc
imul
nop
xor
icebp
sbb
mov
ror
lods
add
xor
sbb
fsts
mov
mov
test
jns
gs
pop
add
out
repz
add
dec
and
mov
adc
jmp
push
mov
sbb
lods
inc
sbbl
or
rorb
scas
insb
cmpsl
aam
pop
sbb
stos
inc
cmp
xchg
enter
cmpsb
push
jecxz
push
sub
clc
divb
mov
push
pop
and
xchg
mov
rorb
jno
xchg
xchg
ret
andl
test
sub
pushf
cs
mov
ljmp
jg
cmc
mov
icebp
decl
mov
in
mov
stos
imul
xchg
out
iret
fldl
daa
daa
push
testb
call
andl
sbb
pop
aad
emms
push
mov
outsl
aam
cmpsl
mov
inc
push
sub
cld
add
jmp
sbb
adc
pop
and
ds
nop
es
sahf
or
push
jno
imul
pop
xchg
cli
loop
push
icebp
and
cmp
xchg
push
in
adc
mov
push
and
aas
cmpsl
test
ss
jo
aam
dec
pushf
dec
add
add
mov
mov
mov
push
cmpsl
imul
mov
sub
cmp
stos
cmp
jae
sub
xlat
add
jle
mov
pop
sbb
push
divl
and
mov
dec
inc
ljmp
rorl
scas
popf
push
cmp
push
push
scas
repz
push
jg
adc
pop
xchg
mov
cwtl
in
inc
aas
test
call
scas
test
imul
dec
xchg
std
sbb
iret
xchg
in
pop
mov
jmp
push
shll
inc
mov
mov
ss
mov
ljmp
scas
iret
int3
mov
test
subl
sahf
jnp
mov
xor
sub
sbb
and
adc
mov
cli
lods
xor
pop
inc
decb
jl
mov
dec
xor
xchg
cmp
cmp
lret
cmpb
sbb
pushl
lahf
out
jbe
or
adc
repnz
sti
andb
insl
cmpsb
xchg
xchg
out
xchg
jns
pop
inc
and
adc
mov
add
and
es
testb
mov
enter
adc
hlt
pop
sub
ret
scas
cmpsl
add
loopne
popa
out
out
stc
ljmp
sub
jl,pt
gs
aam
push
push
test
scas
mov
mov
cmp
in
arpl
cmp
pop
ljmp
outsb
mov
call
lahf
adc
outsl
push
xchg
lret
push
push
repz
inc
push
xchg
pop
mov
lds
pop
stos
jg
sahf
in
push
jge
lock
adcl
or
loop
and
ljmp
cmp
imul
jl
dec
jae
adc
inc
xor
adc
inc
adc
add
lret
xchg
lods
iret
cli
jle
push
call
or
clc
push
rorb
push
mov
push
imul
fwait
inc
mov
cltd
es
lret
sbb
lret
out
adc
jno
mov
pop
cmpsl
sub
mov
call
iret
push
test
pop
cmp
jnp
jge
mov
lods
scas
pop
ret
out
push
pop
ret
das
lahf
mov
orl
inc
jp
int3
push
pop
rol
popa
rcll
je
mov
pop
pop
jmp
aas
lods
lret
ficoms
mov
sbb
mov
stos
or
insb
mov
lahf
scas
pusha
es
out
jecxz
mov
cli
sbb
adc
pop
xchg
mov
int3
mov
pop
xlat
icebp
mov
pop
cwtl
adc
mov
in
dec
sbb
icebp
es
mov
dec
es
jmp
loop
push
int3
pop
std
stos
daa
ret
stos
out
add
mov
and
jnp
xor
neg
jl
out
pop
iret
mov
cmpsb
mov
test
hlt
pop
setae
aam
sahf
mov
out
push
insl
sub
cwtl
jmp
jecxz
pop
je
negb
push
aad
jecxz
arpl
test
sar
gs
icebp
ljmp
or
xchg
shll
jg
lds
outsb
std
xor
mov
lret
into
les
xchg
mov
loope,pt
out
into
mov
mov
insb
out
sbb
ja
mov
in
mov
lods
mov
inc
lds
and
lret
mov
or
jno
mov
orb
scas
rcrb
sub
and
xchg
xchg
stc
push
mov
iret
adc
addb
loope
insl
xchg
lret
cs
rolb
jne
mov
ror
outsl
sbb
popa
data16
outsl
test
mov
xor
inc
xor
es
jns
les
xor
cld
jns
test
subl
jmp
into
lods
xor
fwait
push
ret
ror
fnstsw
fnstsw
mov
arpl
movsl
fcompl
jae
fidivrl
sub
push
sub
shlb
and
mov
and
sub
jp
ja
lods
cltd
mov
inc
lahf
adc
mov
or
insl
jge
pusha
movsl
pop
int
popf
push
push
das
out
inc
or
jecxz
fnstcw
sub
subl
out
mov
fsub
lcall
ds
in
dec
pop
xchg
fistps
jnp
test
cmp
dec
ret
cmc
or
insl
nop
punpcklbw
mov
mov
aas
xlat
pop
outsl
loopne
sti
js
cld
inc
pop
add
stos
mov
sbb
mulb
scas
jecxz
inc
jb
xor
ret
aaa
jnp
fsincos
push
scas
inc
push
pop
xlat
aas
ret
jno
inc
mov
sbb
movsb
aaa
sarb
sarb
scas
sbb
mov
mov
in
mov
mov
repz
shl
rcl
ds
rorb
repnz
flds
dec
data16
lds
mov
xchg
lret
jg
ret
pop
pop
jo
pop
das
xor
sbb
mov
cmpsl
test
dec
sub
in
xchg
dec
push
aas
rcrl
std
jge
xor
imul
dec
loopne
adc
mov
xchg
push
call
or
mov
cmc
sub
imull
mov
or
lea
xchg
das
push
into
xchg
filds
cmp
adc
lcall
xor
data16
mov
mov
add
mov
cld
repnz
xor
cmp
add
xor
mov
mov
sub
ss
daa
dec
decb
js
xchg
das
xor
out
mov
sub
adc
pop
jmp
dec
mov
fstl
xor
stc
pusha
lret
mov
cli
outsb
int
mov
mov
loope
neg
jl
daa
lds
dec
mov
and
bound
hlt
mov
and
cmpsb
push
hlt
push
bound
fcoml
imul
inc
lret
rcrb
lods
adc
jp
push
mov
lods
cs
rolb
cld
divl
sbbb
xor
add
nop
daa
pop
fcmovb
push
dec
xchg
hlt
xchg
mov
mov
sub
xchg
in
sub
mov
insl
or
mov
movsb
push
cmp
mov
sbb
dec
ss
and
jnp
adc
and
push
or
std
fidivrl
sub
lea
addr16
call
and
pushf
in
pop
add
mov
pop
pop
cmpl
outsb
in
test
push
loope
xchg
sub
mov
mov
adc
arpl
stos
add
insl
mov
and
xchg
sub
dec
scas
xor
and
xchg
mov
mov
clc
aad
inc
cli
popa
jb
cwtl
outsb
xchg
loopne
lds
cmovne
push
js
mov
and
push
fstp
pop
shll
jle
leave
fisubrl
orb
sub
mov
adc
pop
addl
sub
ss
mov
fstps
mov
mov
push
sbb
cwtl
mov
out
sbbl
push
dec
xchg
sbb
pop
jg
pusha
ret
fcomps
jecxz
dec
das
inc
lcall
cmp
arpl
sub
or
test
add
stc
xchg
inc
sbb
dec
pop
push
sub
pop
pushf
test
inc
clc
push
cmpsl
leave
adc
or
fdivr
popf
inc
mov
imul
rorl
rolb
add
xchg
xor
adc
sti
shll
out
jb
push
imul
jo
sbb
mov
jl
adc
js
inc
jb
test
out
out
inc
mov
test
or
pop
lcall
popa
scas
dec
and
scas
bound
mov
push
fcmove
add
insl
dec
ficomps
pushf
icebp
in
jns
mov
sti
add
rcll
rol
and
clc
loop
imul
orb
and
notb
adc
dec
orb
sub
int3
sbb
push
mov
inc
xchg
jae
adc
mov
cmc
dec
call
hlt
hlt
jb
loopne
adc
xchg
adc
sub
jns
into
mov
leave
adc
jmp
xor
sub
dec
loope
sbb
mov
test
push
push
scas
ja
repnz
lcall
xor
imul
lahf
out
loopne
and
clc
loopne
pop
daa
lea
push
loop
push
in
sub
outsl
mov
adc
push
sbb
mov
or
cmp
sub
cwtl
loop
loopne
inc
push
mov
adc
lds
push
shlb
ss
mov
ja
roll
dec
mov
inc
repz
sub
insb
cli
stos
rcr
ret
and
and
icebp
enter
lock
dec
jnp
pop
mov
add
jg
pop
orl
or
mov
insl
test
mov
pop
divl
filds
xlat
loopne
cltd
nop
sbb
sbb
stos
xchg
sbb
imul
mov
lods
shrl
mov
or
inc
dec
out
fdivrl
imul
sarb
in
ret
repnz
xorb
test
bound
lahf
xchg
loop
js
scas
sbb
pop
fisubrs
xor
push
fadd
push
xchg
and
fwait
out
loop
aas
imul
push
lea
lahf
in
aaa
aaa
sti
enter
outsl
into
mov
outsb
stos
addb
add
stc
pop
sbbl
test
adc
aas
repnz
stos
ja
imul
ja
test
push
add
or
mov
popf
scas
xor
insl
ds
test
sbb
daa
mov
stos
clc
and
pop
sahf
fbld
pop
jnp
mov
cltd
int3
insl
pop
jmp
mov
cmp
aad
pop
push
hlt
stc
and
dec
test
lods
out
cltd
sub
or
data16
lret
xchg
lods
pusha
jmp
lret
stc
mov
xchg
jmp
pop
cmp
jb
inc
add
popf
xor
bound
cmp
outsb
inc
addb
jmp
xchg
popl
adc
pushf
imul
xor
cli
ja
out
lret
popf
movsb
xchg
sbb
call
repz
js
lcall
int3
fisubs
adc
xor
sbb
push
xchg
sbb
cld
mov
mov
stos
add
mov
mov
cmp
dec
push
div
data16
adc
mov
or
repnz
in
ret
push
xlat
fsubrl
dec
cmp
ss
xor
popf
push
cmp
out
fwait
lret
lret
mov
xchg
mov
mov
data16
jmp
xlat
aas
sarl
inc
sbb
jnp
data16
icebp
mov
ss
inc
in
adc
popf
mov
lods
mov
xchg
test
and
sub
jecxz
jne
cmp
push
addr16
inc
push
jge
pop
push
nop
aaa
pop
mov
cmc
cmp
outsl
dec
dec
cmp
popa
mov
dec
out
rolb
add
jae
arpl
fs
push
outsl
dec
mov
cwtl
insl
inc
mov
push
icebp
xchg
nop
cmc
xchg
bound
pop
mov
notl
fldl
fcoml
push
mov
mov
and
jge
ljmp
popa
pop
inc
jmp
in
bound
fidivl
mov
sub
movsl
inc
call
dec
sbb
sbb
sbb
xor
imul
pop
ss
sbb
pop
repnz
jne
add
sahf
imul
in
ss
inc
lret
in
push
push
aam
lret
andb
sub
outsb
mov
pop
dec
aas
mov
sbbb
sub
and
stos
arpl
fisubrs
scas
pop
xchg
adc
outsl
test
xchg
jo
pop
addb
cmp
xchg
int
inc
mov
hlt
jno
push
sub
leave
leave
lea
cwtl
das
push
push
jl
stos
dec
xchg
bound
mov
inc
mov
or
lods
scas
lock
adc
testb
cmc
pop
adc
lods
lods
aad
add
push
imul
sub
add
lds
xchg
mov
stos
rorl
std
mov
and
pop
add
add
add
add
xchg
jnp
scas
in
adc
les
lods
cld
outsb
sbb
aam
ss
stc
jg
or
fsubrs
loop
add
push
xor
popf
xor
movsl
push
cmp
jmp
mov
mov
leave
call
jl
sub
mov
jle
jns
lods
sbb
hlt
jno
pop
lahf
aam
es
or
sub
insb
inc
pop
dec
lret
push
jnp
repz
jp
mov
jo
xchg
lods
nop
lea
call
jns
sbb
je
adc
cmp
mov
mov
sub
mov
js
jno
cmpsb
and
cmp
sbb
daa
lret
outsb
mov
lcall
pop
mov
push
xchg
fwait
cwtl
outsl
mov
sub
xor
insl
sbb
lods
push
stc
jns
loopne
aas
fwait
aas
rolb
inc
sarb
ds
jmp
mov
mov
jmp
inc
sub
pop
mov
mov
outsb
rcl
mov
xor
shr
into
rcrl
push
in
adc
aas
cmp
aad
xlat
leave
push
outsb
out
and
and
and
xor
insl
lds
idiv
pushf
daa
addl
mov
repz
cmp
pop
scas
mov
jno
push
cmp
nop
push
lea
and
mov
ds
mov
cmpsb
aad
cmpsl
cld
adc
dec
jmp
leave
int3
sarb
lock
ds
push
fcomps
negb
je
xor
dec
lods
xor
push
add
cmpsb
imull
or
pop
pop
add
scas
inc
outsb
frstors
mov
mov
jb
lods
std
dec
mov
test
adc
jp
insb
cmpsl
jg
insb
aaa
mov
push
xor
inc
sub
lds
sahf
in
in
loope
test
or
or
push
into
dec
or
and
fnstenv
int
or
xchg
cmp
mov
xor
data16
into
xchg
xor
or
dec
xor
pushf
mov
mov
mov
fs
add
shrl
mov
mov
out
rcl
imulb
add
popf
cmpsl
test
aad
xchg
cmp
test
push
sbb
fistpl
or
ss
pop
xchg
divl
loope
stos
mov
push
outsb
nop
push
cwtl
dec
sbb
sbb
add
in
jp
enter
sbb
lods
jmp
push
mov
les
ljmp
inc
rcrl
adc
lahf
jae
and
lret
divb
test
jle
in
imul
pop
divb
pop
jb
je
repnz
sub
sbb
dec
xchg
lock
aam
and
fimull
mov
outsl
cmp
adc
mov
fdivl
xchg
imul
mov
notb
push
pushf
pop
or
movsb
inc
cmp
lret
ret
ret
mov
push
outsb
aas
lock
into
lea
js
cmp
dec
rorl
xlat
xchg
fidivs
lods
dec
inc
xchg
sbb
add
cltd
popa
xlat
push
dec
push
inc
add
out
inc
mov
dec
iret
dec
mov
inc
inc
mov
pop
mov
dec
push
add
push
push
out
push
in
insl
inc
mov
xchg
mov
jl
jbe
lods
enter
cmc
dec
pop
in
addr16
mov
and
rolb
in
popf
fwait
js
dec
stc
cli
mov
lcall
cwtl
das
or
adc
repnz
out
stos
push
sti
xor
mov
in
sub
and
std
test
cmp
mov
and
sbb
xor
test
dec
xor
shrb
jecxz
les
pop
leave
out
fists
repnz
pushf
in
lret
xchg
inc
cmc
inc
or
mov
or
bound
mov
cmp
pop
pop
aas
out
pop
subb
fistps
sbb
sub
std
out
pop
mov
mov
mov
gs
int3
in
sub
pop
test
push
ficomps
jno
dec
mov
test
or
nop
adc
or
ret
sbb
iret
xchg
cmpsb
adc
jno
mov
adc
std
sbb
stc
shrl
roll
sub
mov
cmpsl
clc
aas
xor
or
std
xchg
shr
mov
fcom
inc
add
scas
inc
mov
aad
sbb
insb
mov
in
mov
mov
aaa
rolb
dec
test
addr16
mov
pushf
push
ljmp
sbb
or
notb
test
mov
loop
mov
js
xchg
pop
and
icebp
fs
inc
in
push
jbe
arpl
sbb
inc
cmpb
xor
dec
cmp
mov
and
xchg
xchg
mov
push
pop
inc
or
fsubl
mov
sbb
mov
inc
pop
mov
cmp
arpl
loop
push
lcall
fildll
push
pop
jns
orb
in
dec
jns
dec
pop
fistps
cmp
or
jno
je
gs
arpl
dec
andl
fdivp
addr16
je
fcoml
scas
out
jns,pt
movsb
dec
addr16
inc
push
repz
jno
add
shrb
pop
arpl
mov
repnz
xchg
xchg
xor
popf
shrl
cmp
pop
cmpsb
inc
pusha
fcmovbe
cmp
hlt
sub
inc
mov
fbld
pusha
jg
inc
pusha
dec
cmpsb
xor
add
and
sgdtl
or
push
mov
stos
mov
cmp
inc
mov
fistps
push
cmp
leave
push
sub
sbb
mov
cmp
es
sub
xchg
fldl
pop
or
fcomps
fs
mov
hlt
pop
dec
push
add
aam
or
fwait
in
lock
mov
mov
sub
jne
adc
daa
xor
add
sti
cmpsb
and
mov
hlt
int3
negb
xchg
ret
cmp
and
sbb
mov
call
fdivrp
push
and
hlt
cmpb
les
mov
push
sbb
cmpsb
adc
mov
push
adc
pop
pop
inc
sbb
mov
sahf
aam
xchg
xor
mov
cmp
sbb
test
or
fmul
sub
scas
cmpsb
movsb
sti
sti
loope
dec
out
jbe
test
dec
test
sub
aam
mov
jns
and
jmp
lret
cmpsb
adcb
mov
scas
mov
into
sub
push
cmp
or
arpl
sbb
inc
jmp
jae
in
xchg
lods
aaa
cmc
mov
dec
dec
mov
sbb
loop
out
pop
sbb
xor
fidivrs
pop
imul
mov
push
mov
xchg
pop
cmp
xor
fcomps
andb
ja
popa
mov
sbb
dec
push
test
mov
mov
sbb
xor
dec
add
or
sbb
lret
ret
test
add
mov
iret
rcrl
clc
mov
repnz
mov
insl
adc
jb
lcall
lock
fiaddl
fidivrl
sti
lret
push
cmp
jmp
mov
xchg
dec
lds
dec
jnp
dec
nop
or
sti
cs
popf
and
push
or
lret
mov
imul
cmp
mov
pop
sub
fsub
add
in
mov
add
inc
jo
push
cs
pusha
scas
repnz
cmp
roll
int
sub
add
cwtl
xchg
insl
push
es
outsl
mov
push
mov
sarb
fidivrl
mov
fucomp
imul
jecxz
lahf
pop
xchg
in
xchg
insb
sub
jns
pop
repz
je
cmp
lea
cmp
fisubs
fbstp
or
insb
ljmp
jecxz
pop
mov
pop
fisttpl
dec
mov
mov
outsb
xor
in
mov
sub
popa
inc
decb
popa
jmp
leave
lods
jle
add
mov
lods
repnz
je
lahf
or
xchg
movsl
pop
frstor
rolb
push
push
adc
movsb
sbb
add
test
out
mov
lcall
in
das
inc
push
mov
in
xchg
cmp
push
lock
and
add
movsl
loop
push
bnd
mov
cmpsb
pusha
cmc
adc
cs
sarl
mov
mov
pop
insl
cmp
mov
mov
xchg
pop
fsub
cld
dec
mov
pop
shll
ja
pop
sahf
movb
pusha
mov
xchg
repz
std
pop
rorb
into
fcoms
sub
mov
bound
ss
mov
int3
xchg
cmp
fwait
or
adcl
fdivp
fwait
cli
xlat
dec
icebp
data16
dec
std
jbe
popa
pop
outsl
in
sbb
or
call
push
add
jecxz
mov
das
add
cmp
pop
mov
js
enter
pop
dec
mov
jns
data16
andl
mov
push
aas
xchg
fucom
lock
pop
dec
jno
pop
sbb
and
add
loop
add
xchg
sahf
add
mov
xchg
fisttpl
imul
addr16
iret
inc
loop
sti
inc
push
shlb
test
sub
fsub
xchg
mov
mov
sbb
lods
lods
inc
jmp
or
dec
ds
xor
pop
ret
and
sub
out
mov
jg
xor
pop
into
in
loopne
in
testb
into
lods
imul
adc
lea
pop
inc
xor
loopne,pt
lret
inc
adc
repnz
aaa
jo
lahf
sub
dec
mov
out
jecxz
and
ret
rclb
dec
call
rcrl
push
cmpsl
iret
or
xor
xchg
cld
repz
lret
incl
imul
dec
mov
lock
add
daa
mov
es
push
inc
inc
sub
int3
sahf
cld
ficoms
cltd
mov
pop
mov
xchg
mov
mov
test
mov
inc
mov
stos
mov
push
mov
scas
nop
mov
add
fimull
roll
nop
fwait
mov
mul
repz
mov
xchg
inc
clc
scas
inc
xchg
adc
aad
mov
add
cld
mov
enter
jnp
xchg
cltd
xchg
lret
fnstsw
pusha
add
xlat
faddp
xchg
jo
xchg
mov
jle
add
xchg
xor
pop
mov
nop
aad
inc
wbinvd
out
cmc
jg
shl
cmc
fnstsw
out
ficompl
test
jge
jg
jmp
stos
int3
push
jecxz
mov
push
iret
mov
add
scas
jns
jl
adc
ficoml
xor
repnz
icebp
push
aas
fildll
mov
sbb
pop
mov
out
data16
sbb
shrb
loopne
dec
bnd
xchg
movsl
xor
inc
fildl
sahf
pop
and
fidivs
fcoms
cmp
mov
and
mov
pushf
push
in
add
jg
bnd
mov
ret
lahf
pop
and
mov
ds
jb
shlb
cmp
add
mov
inc
call
inc
sub
test
stc
add
push
mov
pushf
or
outsb
push
ret
adc
jo
sti
xchg
mov
xchg
push
jp
fidivs
movsl
pop
mov
push
pop
call
pop
dec
pop
inc
dec
inc
jecxz
shll
mov
mov
aas
loopne
enter
sub
jbe
mov
stc
lret
std
mov
add
fwait
dec
jg
sbb
lds
adc
xor
sub
mov
movsb
inc
push
mov
lock
push
ds
outsb
ljmp
inc
cmp
inc
popa
loopne
lret
rolb
cltd
mov
subl
lcall
sbb
es
push
dec
jae
inc
mov
daa
lock
add
jg
mov
jmp
divb
test
or
popf
mov
test
fildll
jp
ret
mov
mov
les
xchg
dec
ficompl
adc
rcll
and
cmpsl
push
pop
xchg
inc
adc
in
insl
jae
fs
xor
or
lds
and
pop
sub
and
mov
xor
mov
ret
xor
and
in
int3
xchg
push
inc
mov
xor
add
mov
mov
push
jle
imul
mov
xchg
cmp
dec
pop
fcompl
js
addr16
lock
sbb
mov
xor
test
lret
xor
add
jnp
mov
sub
jl
outsl
hlt
aaa
popf
mov
mov
sbb
pop
jae
inc
lret
sti
add
jns
push
lds
push
pop
inc
pop
cli
subb
sub
mov
test
cli
out
push
and
pusha
addl
push
ror
or
push
into
inc
cmc
xchg
sub
clc
out
in
xor
sbb
pusha
pop
stos
mov
mov
mov
paddusb
lahf
int3
fsubrl
stos
iret
add
jne
push
pop
jo
jmp
pop
xor
scas
mov
int
pop
add
sub
xor
mov
add
cld
daa
sub
nop
fistpl
sbb
std
fiadds
in
fcoms
push
lock
popf
iret
jg
lahf
lock
xchg
jno
push
lcall
rcrb
push
and
adc
arpl
mov
sub
lea
outsb
inc
pop
push
inc
xchg
les
xor
scas
pusha
pop
pop
sbb
in
inc
push
cli
mov
and
sti
or
inc
sar
test
adc
scas
jo
cmpsl
fs
stos
std
je
jae
lods
fwait
or
xchg
xor
jge
lcall
add
jge
adc
push
jb
xchg
sbb
fwait
aad
cmc
cmp
adc
iret
jae
jg
lret
mov
idiv
in
xlat
cmp
mov
outsl
or
xchg
jecxz
insl
pop
jo
push
fadds
test
or
mov
jnp
mov
dec
dec
mov
or
jg
mov
das
repnz
xor
dec
inc
inc
pop
xor
cld
lds
mov
adc
mov
mov
scas
push
or
inc
rcrl
mov
out
xchg
inc
out
es
pop
rcll
popa
add
imulb
test
dec
gs
lods
xor
push
jb
maskmovq
testl
enter
jb
sbb
hlt
mov
insb
sub
and
sarl
mov
pushf
adc
or
ljmp
das
adc
cld
lahf
mov
push
fisubrl
shl
in
mov
sarl
sub
repnz
stos
in
xchg
bound
les
mov
aas
mov
cmp
subl
mov
lret
je
jne
mov
test
dec
scas
inc
into
andb
bound
icebp
dec
out
mov
xor
shlb
dec
fadd
push
mov
cmp
dec
push
push
pop
arpl
push
cltd
subl
xor
mov
add
popa
add
jg
dec
iret
mov
push
dec
push
repnz
add
mov
inc
in
fmuls
cwtl
test
dec
aas
sbb
mov
mov
xchg
sti
adc
je
insl
and
mul
adc
push
pop
xchg
cmp
ja
inc
and
icebp
addr16
adc
and
in
ret
add
push
jecxz
jmp
add
dec
dec
shlb
jmp
ret
loop
push
rclb
mov
mov
sbb
jg
adc
sbb
cmp
sub
popf
adc
adc
push
dec
mov
pop
mov
mov
data16
inc
fmull
push
jg
xchg
adc
lahf
xchg
xor
jecxz
push
jb
aaa
out
je
sub
pop
xor
inc
lods
xlat
sbb
loope
cld
sub
dec
popa
pop
movsl
push
push
sbb
jp
sub
jg
in
nop
add
test
sbb
outsl
jne
je
ja
jae
lahf
adc
lods
popa
inc
dec
hlt
or
xor
daa
adc
push
data16
mov
test
jmp
dec
daa
iret
dec
pop
bound
dec
dec
xor
sahf
popa
rcrl
ret
clc
xchg
loope
mov
pop
or
pop
adc
arpl
cltd
repnz
idivb
xorl
test
mov
mov
pop
adc
es
mov
sub
dec
enter
mov
mov
adc
sbb
xchg
mov
pop
mov
inc
jmp
in
push
mov
cli
xlat
mov
fs
mov
jp
mov
mov
and
jl
insb
jne
cmp
fidivrl
adc
push
lods
out
xor
ljmp
xor
jb
push
test
jo
xchg
jp
iret
fldcw
pop
aaa
mov
xchg
sbbb
mov
arpl
scas
xchg
dec
in
sti
add
out
cmc
xchg
cli
pop
sbb
test
in
addr16
pop
or
adc
add
jg
bound
in
sahf
stos
or
inc
shrl
int3
xlat
sbb
jns
jle
pop
repz
or
sub
scas
mov
add
mov
in
test
or
jmp
mov
ss
add
inc
mov
jle
xchg
out
mov
popa
mov
test
sub
mov
ret
add
sbb
daa
sub
lea
shrl
sbbl
mov
aas
cmpsb
jns
fcompl
cltd
lds
cmc
sub
sub
xchg
call
push
aad
pop
lods
js
mov
push
mov
insb
popa
sub
jno
xchg
or
jae
pop
icebp
sti
add
rclb
jle
xor
add
cmp
sub
xchg
pop
fidivs
xlat
mov
xchg
les
mov
mov
mov
jmp
outsb
fistps
ud2
dec
push
adc
sbb
aad
mov
jle
sub
fidivrl
shl
mov
leave
pop
mov
push
mov
dec
mov
pushl
stos
les
jp
ljmp
push
jbe
push
enter
jbe
cmp
gs
jg
or
ret
push
pop
and
into
add
lea
mov
addb
sahf
inc
inc
mov
sub
imul
ret
pop
out
or
lods
ds
dec
cmpsl
pop
cmp
pop
int
clc
lahf
dec
xor
dec
jbe
pop
mov
cmp
movsb
jbe
push
es
and
jmp
sbb
dec
andb
lods
pop
lods
adc
pushf
push
into
push
repz
sbb
je
pop
mov
das
dec
fstpt
jbe
sub
in
fdivrs
mov
sti
and
aad
test
addr16
enter
and
push
mov
test
or
outsl
cmpsb
popa
mov
loope
clc
lds
imul
out
push
pop
and
inc
neg
inc
mov
insb
ds
inc
mov
xor
and
aas
cmp
out
mov
outsb
rolb
jns
out
mov
loopne
aad
insl
mov
xchg
test
test
xchg
xor
add
or
jbe
scas
cmp
ficoms
and
int
int3
iret
cmp
movsb
push
mov
push
xor
or
sbb
ret
pop
inc
jle
lcall
or
or
imul
cmp
add
or
mov
pushf
mov
int
test
or
pop
insb
fldl
ds
out
inc
pop
mov
sahf
dec
push
jb
push
xor
sub
cmpsb
push
adc
ss
bound
adc
push
fsubl
cmp
cmp
mov
xchg
call
bound
idiv
push
xchg
out
or
jae
cmp
hlt
rcll
aas
mov
gs
jo
xchg
or
push
mov
pop
xchg
push
pop
cltd
xchg
inc
mov
cmp
insl
or
incw
std
add
mull
fwait
jg
push
ret
jo
out
fwait
cmp
enter
cld
adc
mov
cmp
xchg
xchg
fadd
shrl
pop
inc
dec
sysenter
jbe
lcall
sahf
sbbl
jns
stos
cmpsb
dec
cltd
adc
push
out
dec
lock
es
jbe
popf
mov
cmpsb
fnstcw
xchg
std
roll
in
mov
sub
sub
fwait
pusha
data16
repnz
ss
and
ret
push
js
add
daa
push
or
pop
loope
sbb
aam
adcl
dec
pop
out
pop
and
cmpsl
xor
jae
jcxz
push
lds
dec
mov
sbb
xchg
mov
inc
sbb
out
xorb
inc
dec
inc
dec
cmp
push
add
into
pop
pop
fsub
aas
ficoms
mov
mov
ret
jns
jo
mov
push
push
and
lods
dec
add
push
cmc
fwait
ret
aam
sbb
inc
lods
mov
into
les
les
and
xchg
pop
adc
cmp
movsl
xor
cmp
jns
sub
xor
inc
std
push
xor
push
and
icebp
cmpl
jle
xchg
loope
mov
and
jge
outsl
add
and
xor
movsb
xchg
cmp
mov
xchg
jl
sub
pop
sub
sub
xchg
jecxz
sub
push
dec
hlt
dec
dec
mov
dec
inc
lods
xchg
sti
fmulp
data16
mov
je
add
pop
in
int3
jle
jb
clc
lods
das
icebp
loop
movsb
or
idivb
jbe
jbe
int3
jb
inc
hlt
je
iret
xor
iret
mov
cltd
inc
push
loopne
pushl
xlat
in
mov
test
xchg
iret
push
stos
sbb
inc
fidivs
or
or
xchg
movsb
lret
test
sub
bound
inc
les
in
aad
xchg
in
or
xor
in
loope
ret
rorl
push
push
jnp
pop
dec
dec
fnsave
inc
push
pop
dec
out
cwtl
test
mov
outsl
lahf
in
jae
sub
xor
push
into
ss
adc
inc
inc
and
int
mov
adc
sbb
or
jnp,pt
or
stos
cmpsl
add
mov
jne
xchg
lcall
adc
sbbl
and
mov
lods
stos
scas
mov
xchg
jmp
mov
stc
sbb
fldcw
cmp
sbb
push
jnp
xchg
adc
fwait
mov
add
pop
pop
jle
aam
pop
jb
adc
imul
dec
cmp
and
pop
lock
add
push
jns
call
pop
bound
add
mov
lret
sbb
in
jae
mov
pop
adc
mov
mov
xchg
and
addr16
repnz
addr16
loope
stos
mov
mov
ds
fdivrp
mov
gs
fdivrs
push
addr16
outsb
mov
jp
negl
jne
xchg
dec
loopne
imul
adc
mov
stos
mov
pop
push
mov
enter
call
cmpsb
rcl
adc
push
mov
jg
lret
adc
repnz
mov
idivl
inc
lds
popa
jo
pop
inc
pop
aam
pop
ret
movsb
inc
stc
mov
sbb
or
sub
out
jbe
in
mov
jp
ss
jmp
mov
xchg
mov
mov
movsl
stos
adc
push
shr
mov
cwtl
fcomps
xor
aaa
mov
push
add
xchg
xor
mull
dec
sahf
mov
popf
jg
hlt
add
sub
out
loop
lcall
daa
xlat
pop
jbe
push
mov
mov
repnz
rclb
push
xchg
jo
jl
mov
sub
in
adc
inc
sahf
lcall
jecxz
inc
pop
in
sub
sbb
mov
scas
scas
ret
pop
out
fs
and
sbb
xchg
aas
out
test
movb
jnp
mov
xor
add
mov
incl
rclb
xchg
push
adc
lret
fisttps
jns
jno
outsl
aaa
xor
cmpsb
xchg
mov
mov
lea
repz
mulb
faddl
sahf
inc
in
mov
jnp
std
sbb
iret
and
je
add
clc
mov
shlb
mov
jae
pushl
xor
rcr
enter
and
daa
push
cmp
aas
sbb
cmp
mov
mov
adc
movsb
je
mov
cltd
xchg
mov
mov
push
int3
out
aaa
adc
out
mov
fsubr
repz
loopne
inc
adc
and
push
dec
and
sbbb
xlat
xor
ficoms
mov
xchg
je
sub
push
add
lret
pop
out
xor
push
hlt
movsl
xchg
into
test
stc
dec
sti
adc
fucomp
cmp
out
push
fiadds
jb
lds
shll
push
pop
push
jp
sbb
int
imulb
xchg
jb
adc
and
pop
dec
push
outsb
in
xchg
sbb
pop
sahf
aad
or
or
test
js
loop
clc
adc
pop
mov
es
data16
into
insl
push
cmc
and
mov
xchg
fisubs
mov
cmp
jp
lret
or
inc
mov
decl
jnp
pop
xor
repz
outsl
jp
xchg
or
and
inc
orb
es
cltd
pop
repz
test
push
mov
sahf
mov
aaa
cmp
int3
sub
lea
imul
std
xchg
mov
popa
jl
pop
adc
in
sarb
sti
xchg
cmpsl
cmp
in
pop
mov
jmp
aas
je
dec
fistl
pop
cmc
and
mov
pushf
sbb
adc
or
mov
cmp
pop
movsl
push
aam
xor
sub
test
sub
sti
inc
mov
mov
pusha
ret
pop
mov
in
mov
mov
fsubrs
lock
cmp
data16
cmpb
mov
push
pop
outsb
or
jnp
dec
and
outsb
mov
sbb
fcom
ret
adc
stos
hlt
mov
xor
scas
jo
into
sub
dec
mov
push
mov
int3
mov
xchg
jge
dec
pop
or
mov
outsl
dec
ds
mov
push
jne
jmp
adcb
les
pop
je
jbe
stos
mov
sub
fs
bound
jae
jmp
lret
out
xor
mov
mov
sahf
adc
loope
lahf
test
lods
cmp
rcll
push
inc
mov
or
mov
in
fcoms
int3
or
inc
sbb
sbb
and
gs
sub
mov
dec
fnstcw
aam
cmp
sbb
mov
inc
adc
inc
dec
jl
cs
sbb
daa
loopne
push
xorb
shl
sbb
push
pop
pop
rep
adc
loope
dec
icebp
sbb
int
loop
jnp
cmp
xcrypt-cbc
cmpsl
xchg
call
mov
or
pop
pop
popa
pop
sub
subb
fiaddl
sbb
push
xchg
fiadds
xor
std
inc
call
stos
mov
jp
aas
out
scas
gs
mov
push
pop
dec
push
push
lods
jno
xor
mov
testb
and
pusha
inc
add
push
jo
xchg
push
xchg
cmpsb
and
xchg
or
rol
stos
aam
sarb
das
jo
roll
sbb
fwait
sahf
adc
mov
in
imul
bound
dec
mov
rol
pop
in
mov
js
cmpb
fld
je
xchg
pushf
sti
jns
scas
mov
cld
pop
push
pop
jns
or
jns
call
dec
aad
aaa
orl
mov
out
addr16
idiv
jo
xchg
mov
rorl
js
jmp
sbbl
push
dec
imul
std
jnp
lahf
ljmp
pop
stos
mov
xchg
loope
int
push
enter
mov
ja
sub
dec
out
xchg
shl
into
mov
xchg
inc
sub
test
dec
xchg
and
lods
mov
cmp
movsl
fnstcw
dec
dec
sbb
popa
pop
jb
jp
test
or
lahf
pop
dec
push
sbb
sub
js
lahf
jle
rcrl
jmp
movsb
sbb
pop
jae
lods
test
in
pop
cmp
or
leave
test
sub
xchg
out
fistpll
pushf
or
shll
cli
mul
das
push
inc
cmpl
stc
test
dec
xchg
lahf
xor
lret
jbe
clc
adc
std
sub
push
aam
or
pop
xor
mov
add
addr16
int
mov
cmp
mov
popf
adc
orb
sub
sub
dec
mov
dec
lock
jecxz
stos
aad
cltd
imul
pop
mov
pop
or
or
mov
addl
sbb
fwait
adc
rep
jb
je
ret
and
int
mov
lock
add
xchg
sbb
cmpsb
xchg
rolb
pop
xor
adc
lds
add
mov
sub
mov
js
sub
sbb
cltd
mov
mov
pop
xchg
je
jns
mov
add
inc
pop
mov
shrl
lea
pop
jecxz
in
leave
sub
push
jmp
notb
push
loop
addr16
lods
dec
hlt
addb
out
dec
call
fisubrl
outsb
aad
push
jmp
xchg
cld
in
jne
cld
xchg
loop
xchg
aas
pop
shr
movsl
push
outsb
stos
jmp
dec
insl
pop
fstl
mov
pushf
jno
cmp
lea
out
cmpsb
fwait
push
pop
into
notl
inc
xchg
xchg
fwait
pop
mov
mov
fildl
out
mov
insb
test
mov
fstpl
add
cmp
mov
or
sub
arpl
pop
pushf
or
jp
lret
movb
in
in
out
cmp
sbb
add
mov
adc
adc
loope
dec
xchg
and
pushf
or
jns
push
add
lea
pusha
cmpsl
mov
lods
scas
outsl
cmpsb
add
fldl
xor
add
xchg
jnp
jmp
sbb
ret
mov
cmc
jae
and
mov
jecxz
dec
fstpt
pushl
decb
mov
jle
or
outsb
or
dec
adc
mov
sbb
insl
inc
mov
cmp
stos
fsub
mov
push
or
mov
ss
int
sbb
arpl
push
push
fnsave
adc
mov
mov
sub
loop,pt
mov
lea
mov
sub
shll
xchg
push
ds
cmc
das
push
ljmp
ds
mov
outsl
sbb
imul
push
mov
imul
fidivrs
popa
aam
lahf
xchg
fildll
iret
push
out
push
sbb
hlt
rorb
lods
pop
stc
pusha
lret
pop
fwait
adc
jl
xor
repnz
pop
movsl
into
stos
dec
mov
lods
popa
xor
dec
and
fcmovnb
xor
outsl
sbb
mov
push
call
fs
push
mov
fwait
inc
fstps
mov
das
loope
incb
xchg
inc
inc
lcall
pop
sub
clc
jp
push
pop
sbb
sbb
mov
lahf
loop
addr16
out
insl
sbb
mov
mov
std
lods
pop
dec
fs
and
out
inc
test
cld
or
and
mov
sub
das
test
subb
fstpt
mul
lret
cltd
mov
pop
ret
sub
cmp
pop
adc
jecxz
andb
dec
int3
xchg
shrl
adc
pop
jo
sbb
arpl
adc
je
push
andnps
test
outsl
movsb
mov
jo
mov
and
rol
push
xchg
rcll
cmc
pop
pop
adc
leave
cmp
jg
and
or
inc
iret
sbb
jge
imul
stc
push
jne
or
mov
inc
jns
adcb
xchg
bound
cmp
popa
adc
sbb
sbb
pop
cmpsb
fisubl
mov
dec
push
inc
push
inc
and
lret
xchg
jne
movsl
xchg
sub
jle
sbb
or
sub
cmp
lcall
mov
loope
cmp
fwait
cmp
sub
sub
insl
xchg
jae
lret
mov
pop
iret
sahf
mov
movsb
or
cmp
lock
insb
dec
dec
mov
sbb
adc
popf
mov
adc
test
inc
and
rcr
nop
xor
push
xchg
mov
fwait
sbb
or
std
scas
mov
cmpsl
dec
shrl
add
mov
ss
leave
je
mov
addr16
out
test
jle
mov
mov
js
call
ss
push
sbb
dec
repz
bound
aaa
and
mov
xchg
jnp
xor
lret
inc
ja
sub
int3
adc
inc
cmp
stc
sub
sub
shr
push
inc
sbb
or
cmp
pop
push
or
sbb
sbb
push
jmp
lods
sub
push
js
pop
into
mov
cwtl
and
repz
push
sub
xchg
fwait
ret
xchg
ret
in
out
push
repnz
outsb
xchg
pop
sub
es
jle
lcall
fsubl
pop
mov
gs
lea
loope
pop
lea
sbb
xor
fidivs
lret
sub
lea
mov
jmp
daa
int3
pop
jge
mov
xchg
dec
fs
cmp
and
xlat
clc
sbb
mov
or
addr16
mov
cmp
jecxz
push
rorl
cld
dec
xor
pop
cli
fcomps
or
sub
cld
pop
adc
add
rcll
insb
sbb
bts
lahf
cld
jo
add
out
nop
mov
sub
lea
dec
or
movl
xchg
jbe
pop
out
ret
add
movsb
int
outsb
mov
sbbb
rcl
sbb
test
lds
sub
out
and
sub
lahf
addr16
sub
push
sub
lahf
inc
cmp
push
lcall
mov
notl
xlat
dec
sti
push
add
jle
nop
sbbb
insl
mov
mov
push
cwtl
and
cmpsl
add
sbb
test
int3
subb
xlat
push
leave
insl
loop
movl
xor
jb
jnp
leave
pop
lods
xor
cltd
jg
nop
pop
add
jno
xchg
jl
jbe
add
sub
sbb
mov
push
sub
add
sbb
movsb
xor
jne
and
out
daa
lock
loop
inc
add
imul
or
push
hlt
jle
sbb
mov
fsubs
push
and
and
dec
ret
add
mov
stos
jae
lds
add
sub
add
jp
in
aaa
stos
mov
orl
adc
sub
leave
pop
data16
testb
int
cli
rcll
jg
imul
jle
push
shlb
popf
loope
stos
add
ret
dec
pushf
out
into
imul
mov
sbb
push
je
shll
push
or
dec
jno
hlt
mov
idiv
ret
sub
jnp
push
sbb
and
outsl
test
xchg
adc
xor
xchg
sbb
jae
subl
iret
xchg
pusha
jl
fwait
push
add
outsl
push
fists
setne
push
mov
and
fcoml
in
pop
nop
fcompl
or
fadds
dec
dec
and
js
aam
fs
arpl
mov
outsb
jnp
xchg
sub
cmp
sbbb
cmp
dec
pop
cmp
dec
xchg
add
rcrl
out
or
das
insb
and
cwtl
out
xchg
daa
stos
add
add
push
jecxz
mov
lock
mov
movsb
adc
inc
cmp
dec
add
pop
cltd
inc
pop
scas
aad
insb
dec
leave
push
imul
jno
lahf
js
push
adc
xchg
or
sbb
cmpsb
popl
cmp
push
sub
inc
jp
xor
nop
in
inc
rcrl
push
fstp
jnp
lods
add
xchg
jns
outsl
mov
sbb
pop
jge
aam
in
adc
push
lahf
cld
movsl
mov
inc
xchg
adc
mov
es
ds
sbb
ret
jle
out
jge
jbe
xchg
adcl
out
push
jl
mov
and
adc
push
add
adc
sub
cmpsl
lds
sbb
pushf
adc
and
or
daa
jg
xchg
mov
sbb
popf
out
mov
fildl
jbe
into
aam
xchg
push
ret
xchg
iret
aam
movsb
sub
movsl
add
add
test
fcmovne
ds
add
jnp
xor
inc
xchg
shr
das
ffree
jle
xchg
addl
jecxz
rcl
jle
adc
or
jne
setbe
and
fnstenv
pop
clc
fistl
jne
icebp
mov
sahf
mov
insb
cmp
cmpsl
push
push
add
in
std
sub
mov
out
invd
aas
and
lret
enter
pop
dec
es
or
aad
or
gs
test
imul
neg
call
ja
sub
fidivrs
cwtl
push
cmpl
mov
pop
iret
pop
data16
mov
or
jmp
shrl
aam
into
aad
xchg
pusha
loop
mov
clc
out
mov
adc
pop
je
push
inc
push
xchg
stos
ss
jne
push
orps
xchg
dec
lret
mov
lods
push
aad
pop
xchg
push
and
push
xchg
movsl
stc
in
cmpsl
jbe
dec
cli
jle
push
arpl
int
sbb
outsl
jecxz
mov
fsubs
orb
push
push
and
lret
push
inc
inc
aaa
decl
sbb
xor
mov
outsb
jno
and
or
push
xor
lahf
push
push
cmpsl
cmp
jnp
lret
sub
subl
xchg
sub
xor
test
or
pop
test
ds
rolb
xor
fdivrs
loopne
pop
xor
mov
dec
jbe
rclb
and
adc
sub
xlat
and
mov
negb
push
inc
mov
pop
loope
mov
loop
mov
dec
mov
mov
dec
mov
je
or
imul
push
test
sub
xor
icebp
and
fsubr
jg
and
dec
clc
and
aaa
std
jne
out
xchg
stos
repz
and
ss
fdivrs
cmp
mov
and
mov
mov
icebp
push
insl
cli
xor
cmp
das
push
pop
inc
push
add
mov
sahf
jns
jae
sub
pop
adc
jb
pop
pop
pop
sarb
insb
ret
cmp
into
add
aaa
cmp
jl
sahf
fucomp
dec
mov
add
stc
sar
das
stos
pop
pop
fisubl
and
xor
pop
push
stc
popf
je
mov
aas
pop
pop
shll
xchg
jno
or
ljmp
mov
andl
dec
add
data16
repz
pop
xor
adc
je
and
jb
pop
shrb
mov
data16
ret
xchg
cmp
xchg
lods
adc
mov
aas
mov
cmp
aas
or
inc
push
aam
es
jmp
imul
dec
dec
int3
fdivrl
jns
call
jnp
jne
orl
mov
add
cmpsl
pusha
xor
push
adcl
cmp
sub
cmp
int
lret
repz
sub
sub
aad
fwait
pop
shlb
mov
and
int
mov
xor
mov
stc
push
stos
clc
inc
jns
sub
mov
dec
cltd
aas
shlb
test
push
ret
mov
lds
sbb
mov
js
jbe
maskmovq
negl
imul
push
push
ljmp
loopne
mov
pop
ret
cmp
nop
pushf
inc
shlb
out
xor
add
les
jnp
mov
cmp
shlb
jno
push
cmc
and
or
imul
add
pop
pop
pushf
cmpsl
mov
sub
lods
pop
add
mov
ss
adc
inc
xchg
xchg
mov
dec
jmp
pop
inc
fs
mov
dec
test
in
fsts
cmp
out
push
fisttps
adc
adc
mov
outsb
es
shrl
mov
into
inc
xchg
imul
mov
clc
rorl
or
mov
push
pop
sub
hlt
sub
jnp
fistpl
xor
imul
push
cmp
pop
aam
add
dec
in
add
daa
adcb
xchg
mov
adc
icebp
push
pop
dec
inc
mov
lahf
or
mov
xchg
neg
push
cmp
sub
adcb
sub
and
push
sbb
int
addr16
addr16
test
out
clc
dec
jns
sbb
xor
ss
ds
xor
imul
push
xor
cmp
pop
hlt
ja
je
insb
or
adcb
dec
jp
pop
sub
cld
cmp
xlat
iret
ret
sti
inc
dec
xor
scas
inc
sub
aam
popf
daa
cmpb
mov
cwtl
in
fucomip
ficompl
xlat
fiaddl
or
imul
cmp
add
or
sbb
mov
lods
sub
jle
out
mov
adc
inc
pop
jl
adc
mov
cld
or
pop
inc
adc
pop
xchg
push
pop
pop
icebp
inc
sub
fs
nop
aad
and
add
jecxz
mov
jp
xor
cmpsb
sub
dec
cmp
pop
fsubrl
inc
mov
aad
pop
shll
mov
jle
test
clc
mull
lods
sbb
ficomps
lcall
stc
jmp
call
popf
dec
jmp
add
jecxz
adc
jo
outsb
push
xchg
pop
add
xchg
fists
dec
cmp
sbb
in
mull
sbb
push
add
sbb
lea
jo
and
xor
icebp
and
dec
das
xor
cmp
subb
xchg
adc
jg
ficoms
add
ja
repnz
and
into
arpl
push
lret
push
sbb
pop
cld
pop
lret
or
pop
adc
adc
unpckhps
jo
popa
fucomi
or
addr16
sub
aas
jno
nop
jne
sub
loop
jae
fidivs
cs
xor
cmp
and
test
adc
scas
cmp
push
fstpt
mov
movsb
ss
roll
repnz
mov
mov
sub
insl
mov
int3
push
dec
jp
or
jbe
scas
stos
or
fnstenv
push
das
pop
inc
push
shll
movsl
inc
cs
xor
sahf
mov
adc
sti
out
mov
lock
sbb
cwtl
lods
lods
pop
inc
mov
sub
rorb
ss
mov
and
stc
loopne
movsl
sub
xchg
scas
movsl
es
sub
popf
mov
cmpsb
out
int
fwait
mov
daa
push
jmp
adc
lcall
outsl
mov
lret
add
int3
es
pop
sub
jmp
loop
dec
fistpl
cmpb
pop
stos
mov
pop
xchg
mov
or
mov
sbb
test
je
push
jl
in
nop
push
dec
pop
pop
fimuls
loopne
lods
lahf
les
cmp
ds
or
sub
jmp
ljmp
mov
pop
stos
gs
xor
pop
leave
mov
loop
loope
or
sti
idivl
push
sbb
jle
pop
sbb
out
sub
adc
xorl
and
jecxz
adc
sub
adc
out
enter
bound
xor
jmp
mov
leave
pop
push
hlt
pop
lret
fists
cmc
cs
ja
or
shll
repnz
lcall
jmp
cs
addr16
cmp
inc
imul
inc
dec
fisubs
mov
shrl
cmc
and
fsin
mov
mov
out
sbb
cmp
sub
jno
pop
daa
push
dec
and
push
popl
and
andl
popf
addl
inc
jb
inc
mov
mov
add
inc
sti
jo
in
mov
push
pushf
insl
jno
or
loop
xorb
loop
dec
cmp
and
out
outsl
adc
jmp
jno
daa
gs
loop
rcll
xchg
dec
flds
add
mov
jne
adc
popl
addb
sbbl
in
repnz
xchg
loopne
sbb
mov
sbb
lods
out
push
mov
lahf
in
inc
jmp
int
clc
call
stos
sbb
cs
push
lcall
dec
test
ds
xchg
sbb
xchg
std
jno
addl
and
adc
ret
jo
loop
lret
lret
push
pop
sahf
jne
enter
sbbl
aad
or
icebp
add
or
cld
bound
hlt
mov
loope
hlt
jg
adc
xchg
jmp
lcall
rolb
jnp
ja
aad
call
or
pop
xor
xor
lret
fiadds
pop
xchg
cmp
mov
push
pop
xchg
addr16
jnp
shr
cmc
mov
scas
jle
sahf
jnp
outsb
je
bound
sbb
sub
adc
js
or
jb
dec
pop
hlt
jo
push
dec
cmc
inc
stos
cmpsb
jnp
jg
dec
fimull
or
dec
je
jns
cmp
push
fdivrl
push
adc
sub
lods
sbb
mov
dec
dec
inc
mov
ja
fsubl
inc
pop
xor
inc
data16
jmp
xlat
fldenv
cmc
ds
push
mov
idiv
loopne
xchg
push
fildll
pop
pop
and
or
mov
inc
sub
lods
inc
or
pop
lret
repz
sbb
movsl
mov
push
push
mov
js
and
jge
xor
lret
sub
add
cmp
mov
mov
push
mov
in
cmc
ja
mov
dec
cmp
es
push
pop
js
add
outsl
ljmp
add
jne
mov
xchg
xor
in
xorb
add
ret
or
mov
ljmp
mov
add
stos
fsubs
inc
fldl
cld
test
out
inc
and
je
out
ljmp
mov
in
cmp
and
jcxz
jae
es
xchg
js
icebp
fistps
int3
and
out
mov
jae
insl
sub
in
push
push
adc
cmpsl
in
xchg
inc
pop
fldt
xor
shlb
or
dec
je
mov
and
ret
dec
sti
jns
push
fwait
movsb
mov
lods
cmc
adc
adc
adc
lret
insl
and
add
bound
cmp
mov
mov
fisttpll
int3
js
mov
addl
popf
lret
cmp
inc
inc
out
popf
add
mov
jne
adc
shlb
xchg
pop
js
jg
inc
jne
movsl
jno
push
out
and
inc
cmpsl
aaa
dec
mov
insb
sbb
inc
cmc
xor
aaa
cltd
jge
stc
scas
jle
push
mov
add
shrb
lret
push
cmp
and
dec
mov
mov
sub
testb
test
add
fmull
push
and
cmpb
cmp
add
test
out
lcall
imul
lea
and
jnp
je
dec
sahf
lcall
loop
push
scas
fiadds
sub
sbb
and
or
or
ds
push
stos
xchg
sbb
push
dec
mov
shrl
and
push
repnz
xor
lret
out
in
aas
out
or
sub
loopne,pt
mov
jl
adc
xor
scas
dec
pop
jno
jecxz
dec
jmp
adc
xchg
xlat
pop
shr
mov
add
push
rorl
add
ficomps
ljmp
xor
idivl
sarl
mov
add
pop
mov
jmp
xor
jle
dec
xor
pop
cmpsb
mov
pop
jno
jnp
arpl
sub
sbb
jg
pop
mov
test
ds
mov
jmp
push
fs
stc
xchg
or
leave
sbb
stos
sbbl
inc
adcb
xor
cltd
jp
ror
sub
aaa
shlb
xchg
cmp
push
insl
rorb
xor
cmp
enter
push
andb
mov
icebp
cmc
adc
aad
pusha
cmpsb
and
sub
rorb
paddsw
xor
ja
out
mov
mov
mov
repz
mov
cmp
or
into
in
push
dec
out
outsb
stos
sbb
jo
jns
pusha
out
lret
insb
fnstenv
cwtl
repz
cmc
loop
popa
dec
inc
mov
fsubr
push
and
sar
mov
sbb
adc
push
inc
mov
jge
jle
lahf
in
into
out
mov
adc
mov
in
push
rcl
mov
xchg
ja
bound
add
sbb
stos
insl
mov
cld
aam
mov
mov
mov
add
push
repz
lods
insb
lcall
shlb
xchg
jg
sbb
lds
and
mov
pop
push
call
mov
sbb
fcoml
ss
jo
mov
inc
lock
dec
dec
push
js
popf
jge
pop
add
loopne
push
cmp
lds
movsb
jl
fistpll
out
or
and
loope
jmp
inc
fbld
cmp
ret
pusha
inc
push
cmp
add
mov
outsb
adc
popa
ljmp
push
test
add
mov
pop
sahf
std
sub
movsl
lods
in
pop
push
jae
sub
es
mov
insb
sbb
xor
lret
inc
jne
mov
sbb
stos
jo
mov
fidivs
enter
aad
fsub
pop
mov
xor
mulb
or
mov
repnz
test
and
lods
rorb
lea
pop
mov
test
inc
push
fcompl
mov
movsl
sub
sub
pop
inc
jno
sbb
xchg
dec
jg
sbb
aaa
loopne
aam
cmp
or
daa
cmpsb
mov
push
xor
shll
mov
mov
pop
lock
outsb
cmp
pop
push
cmc
mov
stos
xchg
test
cmp
in
loop
mov
sar
xchg
test
out
adc
dec
xchg
mov
cmp
sub
add
or
or
pop
inc
dec
pusha
jnp
cmp
dec
jbe
pop
xor
gs
jb
bound
je
push
push
mov
jb
cmp
mov
cmp
xchg
or
dec
cmpl
mov
lock
insb
dec
outsb
orl
or
xchg
mov
lods
cmpsb
push
cmp
cmpl
cmp
sti
sti
adc
int
jecxz
notb
lock
xor
push
sub
sarb
cmp
mov
pop
insb
jmpw
pop
insb
cmp
add
cwtl
out
rcrb
or
out
mov
in
roll
ret
push
fldt
sbb
mov
adc
imul
sub
inc
xchg
xorb
mov
pop
push
inc
xchg
repnz
fsubl
xor
cmc
xor
dec
sub
xor
inc
sti
rcl
shl
mov
dec
imul
stc
mov
inc
pop
mov
std
ret
sub
mov
jp
sub
xchg
inc
sub
and
xor
mov
subl
fwait
jbe
sub
ret
enter
pusha
push
sahf
sub
outsl
or
cs
dec
push
fcoml
aas
push
ss
pop
aam
xchg
pop
inc
sbb
das
cli
ds
jecxz
jae
jle
mov
dec
jb
call
roll
dec
ficoml
mov
sbb
jp
mov
stos
or
adc
cld
xchg
xchg
xchg
jle
sbb
fstpl
repz
mov
jecxz
dec
imul
lcall
xchg
cmp
je
push
mov
xchg
dec
fbld
or
push
mov
clc
cli
cmpsl
or
loope
sub
sarl
imul
dec
mov
xorl
mov
push
pop
mov
push
leave
mov
dec
mov
push
mov
jl
push
lret
repnz
xor
and
push
cltd
sahf
dec
mov
cli
jo
dec
pop
rcrl
je
dec
jmp
leave
mov
stos
popf
push
dec
divl
hlt
and
cmp
jmp
mov
xor
pop
push
jge
icebp
in
cmpb
sub
out
lahf
lods
and
xchg
ljmp
xchg
sbb
nop
repnz
test
fcomi
sbb
xor
out
xchg
pushl
insb
repz
scas
add
pop
shl
mov
fwait
xor
fldl
dec
loope
push
insl
xor
dec
ffreep
pop
xchg
insl
into
gs
sbb
addr16
divl
or
xchg
xchg
cltd
sbb
dec
inc
mov
lea
ret
mov
add
jae
out
add
xchg
jecxz
and
mov
add
cmp
mov
and
jl
mov
adc
dec
push
add
pop
fadds
xor
xchg
aas
fcmovne
adc
inc
mov
clc
inc
dec
sub
jbe
sti
stos
push
loope
pop
mov
sbbl
push
jmp
aad
mov
and
cltd
xchg
popa
mov
mov
xchg
das
sub
movsb
jo
adc
ret
push
mov
cmc
repz
les
mov
or
popa
mov
cmpsl
jg
push
ljmp
data16
iret
ret
ret
imul
dec
add
jl
aaa
js
inc
out
inc
dec
xchg
clc
push
scas
sub
cmp
and
inc
and
scas
or
adc
jnp
inc
add
dec
or
xlat
pop
jbe
inc
push
dec
out
push
out
sub
clc
cmpsb
pop
lahf
jae
movsl
cmp
xchg
mov
sub
jae
dec
mov
add
and
pop
mov
or
push
xchg
jle
push
or
jmp
inc
or
fs
sub
and
aad
fldlg2
rcll
repz
sahf
subb
dec
jle
scas
push
fdivl
add
jne
aaa
jecxz
ret
int3
jg
loopne
jne
arpl
pop
and
dec
loop
xchg
scas
xor
int
sub
setae
mov
aam
dec
fdiv
arpl
pop
add
jns
mov
jne
in
inc
lcall
xchg
adc
std
adc
mov
pop
mov
inc
add
fdivr
pop
cmp
sti
inc
xchg
inc
lea
outsl
pop
jge
dec
dec
push
xchg
push
mov
cmp
pop
push
sub
fistps
in
inc
pushf
nop
jp
data16
cmp
mov
in
mov
sbb
jp
jo
movsl
out
adc
lahf
int3
icebp
dec
shrb
mov
enter
or
mov
sbb
mov
inc
ja
jp
mov
cmp
push
mov
out
inc
lea
rcll
add
and
jge
movsl
fdivrs
jp
and
pop
in
test
cmp
mov
xor
dec
mov
sbb
sbb
sub
scas
sahf
jno
sbb
add
add
dec
addr16
and
subl
lods
xchg
movsl
push
es
popa
fidivrs
push
mov
xchg
pop
into
push
sbb
cmp
or
and
mov
outsl
dec
mov
cmp
mov
out
out
int
cmp
hlt
jecxz
mov
or
es
push
mov
mov
xchg
pop
pop
out
mov
stos
scas
pop
dec
fs
cmpsb
dec
call
iret
flds
mov
in
and
push
xchg
gs
push
cmp
lods
out
xor
aam
xchg
and
stos
lcall
ret
xor
popf
xchg
dec
lods
sbbb
or
pop
or
push
mov
movsl
and
mov
push
fs
fstpl
loopne
or
fdivrp
xlat
cmc
popa
sub
adc
pop
sub
cltd
adc
or
jnp
xchg
bound
xchg
lea
outsl
loope
stc
or
xlat
and
pop
cmp
push
dec
cltd
add
jb
cmpsl
mov
fisubl
adc
inc
mov
adc
cmpsb
cli
mov
sbb
shl
adc
neg
aas
cltd
xchg
mov
mov
jo
fcomps
insl
mov
lret
pextrw
mov
xor
mov
jb
ret
pop
push
shl
jnp
xor
popf
xchg
bswap
in
or
loopne
pop
dec
stos
leave
ja
inc
aas
data16
pop
jmp
fxtract
aad
inc
sbb
jg
jl
mov
rorb
shl
jnp
aaa
mov
mov
iret
inc
lods
jecxz
jge
add
lcall
jp
lret
repz
sub
xchg
scas
in
xchg
int3
arpl
add
ds
jbe
fsubl
mov
jl
stc
mov
xor
cmp
jno
push
xchg
xor
push
push
inc
xlat
mov
lea
daa
outsb
or
sbb
fstl
jle
push
xor
pop
cmp
jb
lret
shrb
lahf
testl
sbb
xchg
mul
cmp
and
sub
mov
adc
out
add
inc
add
push
rclb
add
push
adc
push
movsb
pop
pop
sbb
push
insb
inc
sahf
lret
mov
or
cmp
cli
lods
add
loope
pop
jge
rdpmc
fiadds
sbbb
movsl
das
adc
mov
push
das
xor
das
sbb
jle
or
test
inc
jnp
negb
jnp
sbb
push
movsb
mov
xchg
dec
and
das
test
iret
xchg
inc
push
out
dec
xor
and
or
test
sbb
popa
push
loop
sub
lcall
popf
scas
and
fisttps
pusha
pop
fdivl
dec
push
and
shl
sbbl
divb
adc
xchg
fisubrl
jge
orl
inc
dec
pushl
loopne
sti
dec
sub
jge
sub
jns
out
lahf
mov
inc
movsl
push
cmp
sub
shlb
outsl
xchg
cmp
loope
fstpt
in
mov
xchg
shlb
jle
and
sbb
dec
xor
or
cltd
dec
mov
mov
xor
inc
xor
jp
aad
xchg
mov
fldl
jno
or
jl
or
gs
cmp
mov
sbb
mov
out
jge
jbe
lret
mov
mov
stc
xor
adc
and
scas
scas
insb
jg
dec
ficoms
lock
pop
adc
add
dec
lcall
lods
adc
inc
lods
push
and
push
or
dec
push
testb
scas
xchg
out
mov
push
roll
push
scas
xorb
and
out
hlt
mov
jle
push
jp
outsb
cmc
xchg
ja
fsubr
ja
cmp
xor
js
in
and
mov
sbb
push
pop
dec
dec
fisubs
jns
push
fsubrs
cs
sub
push
int
in
adc
fdivp
jmp
inc
add
sbbb
test
in
push
fdivr
or
mov
repnz
inc
mov
xlat
xor
add
adc
imul
xor
mov
dec
mov
shl
mov
xor
and
jns
call
xor
jnp
scas
out
add
cmp
fs
dec
repnz
xor
mov
xchg
in
or
sahf
push
sbb
xchg
mov
or
shl
nop
cmp
and
nop
adc
stos
cs
idivb
cmp
hlt
iret
pop
movsl
pop
mov
jecxz
shl
inc
jecxz
push
mov
fucom
pop
gs
adc
mov
mov
and
lret
out
mov
orb
adc
sahf
mov
repnz
add
mov
pop
pop
jbe
les
cmc
cltd
and
daa
test
out
xor
or
cwtl
jns
insl
aaa
and
sub
lea
adc
sbb
hlt
nop
fsub
xchg
push
mov
icebp
jecxz
dec
pop
jmp
push
jo
sub
dec
dec
mov
paddb
jae
ret
lock
std
inc
or
in
aad
mov
mov
mov
push
mov
adc
or
add
sub
ljmp
xor
xchg
outsl
mov
fsubs
push
fimull
cmp
loop
or
jo
or
mov
aam
insl
cmp
pop
imul
dec
dec
lock
sti
or
stc
mov
addl
fisttpl
pop
mov
stos
lahf
andb
loope
jne
outsl
sbb
imul
sub
xchg
out
inc
lds
and
adc
inc
push
aad
sbb
divb
jmp
les
fildll
sahf
sub
adc
fsub
scas
test
mov
int
mov
cmpsl
insl
xor
mov
pop
aas
adcb
xchg
and
sub
mov
call
sahf
cmp
inc
inc
int3
ret
or
push
sbb
aam
or
dec
mulb
in
or
lods
sbb
dec
lock
push
sti
sbb
stos
jg
add
rcrb
call
push
push
test
in
pop
push
dec
fstl
popf
leave
out
cmp
xchg
push
sbb
adc
inc
jnp
rorb
push
mov
popa
and
xor
in
jno
mov
mov
dec
mov
mov
xchg
pop
mov
mov
mov
xchg
add
mov
dec
push
ret
les
xchg
cmp
inc
push
cwtl
fimuls
std
bound
and
fdivrl
xchg
push
sub
push
mov
shrl
test
adcb
fs
popa
mull
aad
cld
aam
arpl
sub
int3
lret
mov
decl
mov
pop
test
or
loop
les
sti
loopne
test
sub
dec
pushf
pop
add
dec
mov
clc
push
scas
loopne
push
push
js
add
into
mov
xor
or
imul
bound
enter
mov
cmp
orl
data16
lret
mul
jmp
xor
addr16
lret
pop
cli
shrl
sbb
pop
pop
aas
scas
xchg
sbb
bound
call
jp
pop
xchg
in
lret
jo
cmp
outsl
inc
mov
out
enter
push
and
repnz
repnz
mov
mov
dec
sbb
and
dec
jg
dec
mov
mov
cmp
repz
sub
in
lcall
iret
jmp
iret
add
lret
push
into
adc
mov
cmpsb
fcoms
data16
pop
scas
mov
dec
jmp
jmp
das
pop
popa
and
pop
pop
mov
sti
mov
xchg
and
cwtl
scas
out
jle
push
pusha
fidivrs
push
inc
add
aad
out
push
movl
jae
xchg
adc
movsl
test
bnd
or
mov
ja
push
pop
aad
outsb
mov
mov
pop
mov
shll
add
push
js
xchg
push
int
orl
jecxz
movsb
arpl
test
xchg
jb
sbb
dec
cwtl
dec
daa
aas
pushf
jg
cmpsb
push
shrl
jecxz
insl
imul
mov
sbb
fldt
out
dec
mov
mov
xor
aam
pop
das
mov
imul
addr16
push
xchg
dec
lods
jmp
xor
sub
sub
scas
dec
inc
into
mov
nop
cs
insl
adc
mov
icebp
push
sbb
cmpsl
sti
daa
les
pop
in
enter
xchg
lret
adc
mov
or
es
sarl
xchg
ljmp
loop
cmc
jmp
mov
sarl
ret
push
fwait
dec
popa
push
es
ja
jo
inc
rcpps
fldt
shlb
test
je
xchg
test
and
adcb
ss
mov
enter
mov
cmp
xor
jns
mov
dec
mov
adc
push
cwtl
or
mov
jecxz
mov
pop
mov
sbb
sbb
mov
jmp
inc
inc
mov
xchg
int
gs
lahf
mov
inc
notb
or
lds
ret
in
js
sub
xor
or
inc
push
out
daa
mov
xchg
sarb
push
xchg
repz
in
ret
mov
ret
jne
in
pop
inc
je
push
mov
sub
dec
mov
es
or
scas
xchg
pusha
stos
cmc
nop
lock
inc
cmpsb
loope
lcall
xor
mov
and
cwtl
jnp
test
and
xchg
sbb
bound
cs
or
and
movb
ficoml
andl
sbb
mov
cmpsb
or
andl
or
push
inc
and
ret
mov
add
leave
out
test
inc
fs
std
dec
sub
cmp
mov
add
loope
dec
fcompl
dec
std
xor
or
adc
or
adc
test
jo
lock
ret
push
mov
jmp
fcoms
repz
push
xor
xchg
pop
hlt
sbb
mov
inc
cs
dec
dec
push
scas
fimuls
daa
pop
fistl
inc
and
push
inc
xorb
sbb
stos
lret
cmp
scas
jnp
push
dec
std
insl
xor
pusha
xor
aad
mov
cli
dec
jnp
push
or
and
clc
cmp
lds
ja
inc
ficomps
push
sbb
mov
push
cmp
jnp
addb
adc
mov
mov
dec
fiaddl
push
negl
adc
mov
cld
push
push
aam
faddl
push
fldenv
dec
cltd
hlt
xchg
popf
pop
into
imul
pop
push
jl
xchg
mov
inc
subl
jae
insb
jb
mov
push
imul
mov
mov
adc
in
sbb
scas
aam
sbb
push
loope
xlat
mov
in
dec
int3
out
push
xchg
xchg
mov
and
or
icebp
add
jne
add
cmpb
fwait
adc
in
stos
xor
popf
dec
insb
or
jl
jecxz
sahf
shlb
mov
cli
ficompl
loope
test
cmp
sbb
insl
dec
xchg
sbb
imul
nop
and
add
inc
cmpsb
cs
sti
sub
push
das
xor
adcl
sub
sahf
push
pop
mov
fsubl
popa
dec
repz
sbb
and
int
cmp
mov
lret
push
cmp
add
cmp
test
and
xchg
pop
lret
testb
test
in
int3
gs
ljmp
mov
xchg
mov
out
sbb
pop
shrb
ss
xor
inc
jne
adcl
cmpsb
push
pop
sbb
mov
rcrb
cmpsl
adc
dec
sti
or
xor
out
cmp
insl
push
cwtl
jl
add
sbb
pop
add
push
in
mov
inc
lahf
push
add
mov
mov
push
xor
adcl
stos
inc
mov
mov
xchg
mov
add
sub
add
into
sbb
adc
mov
jb
add
dec
mov
rcrl
jle
jno
movsb
mov
mov
inc
fstl
mov
inc
test
fadds
jne
or
cmp
cmp
and
add
jmp
movb
cmp
sub
dec
mov
lea
push
pop
jno
xor
push
push
jnp
inc
filds
addl
mov
push
fdivs
mov
xchg
cmp
jbe
push
std
rcrl
popa
ljmp
pop
push
xchg
push
mov
andb
dec
jnp
push
popa
jl
adc
cmp
in
cmpsb
pop
sub
sti
cmpsb
out
xor
xchg
out
mov
in
push
loop
loopne
test
xchg
mov
jae
ja
sub
xchg
popa
ljmp
push
adc
mov
fs
jb
push
cmp
inc
sbb
xor
jmp
repnz
jae
shrb
pop
push
mov
in
adc
jo
rcll
out
cmp
mov
cmpsl
sbb
aas
push
iret
aaa
mov
jae
mov
jmp
js
loop
inc
dec
fmul
dec
or
and
sarl
dec
push
cmp
test
flds
dec
fcomps
jmp
in
push
loope
adc
mov
lods
pop
or
sbb
in
rcrl
xchg
mov
cmp
mov
and
addr16
xor
imul
ja
mov
jns
mov
ret
ss
aad
mov
movsl
mov
ss
xchg
jo
xor
dec
pop
adc
sti
imul
data16
pop
sub
lret
xchg
lea
and
mov
cmovo
add
sbb
inc
lahf
int3
jle
lds
push
mov
ret
movsl
or
mov
in
in
cmc
xor
inc
icebp
mov
sub
lcall
lret
jp
loopne
mov
pop
cld
loopne
xchg
adc
les
cwtl
movsl
or
fiadds
sbb
inc
fisubl
pop
ret
or
stos
addr16
mov
dec
leave
fs
push
cld
xchg
lock
push
outsb
insl
es
notl
sub
dec
out
mov
jnp
sub
cltd
lea
lret
leave
sti
mov
pusha
outsl
cmpl
jecxz
pop
cmp
sarb
push
out
cmp
fnstcw
icebp
mov
mov
sbb
lcall
pushf
lret
push
and
mov
mov
mov
or
push
movsb
pop
fwait
sbb
sbb
sahf
mov
lds
jl
out
add
add
out
imul
mov
mov
or
and
push
push
in
mov
xor
xchg
hlt
or
add
dec
stos
lcall
inc
les
mov
out
adc
stos
imul
fsub
sbb
dec
das
fiadds
xchg
xchg
or
clc
inc
pop
sahf
xchg
insb
or
data16
xor
faddl
push
xchg
fistpl
jle
rorl
lahf
ficompl
xor
ljmp
jns
push
scas
bound
adc
or
clc
cmp
mov
in
pop
fistpl
mov
xor
adc
cwtl
push
imul
mov
lock
sub
in
shrb
call
mov
sbb
fcomp
popf
pushl
cltd
dec
push
xchg
or
or
test
addr16
mov
ficoml
mov
out
adc
adc
scas
mov
mov
imul
int3
std
arpl
dec
jno
xchg
and
push
rdmsr
in
leave
push
push
mov
cmp
fidivs
int
push
or
cmc
dec
xor
shrl
call
and
sarb
sbb
enter
std
xor
xlat
xor
lds
adc
sub
lret
mov
xchg
or
cmp
cld
jb,pn
stos
movsl
lock
or
out
jmp
or
out
shll
xchg
pop
lahf
mov
arpl
sub
fs
repnz
add
mov
pop
jecxz
jle
shll
shll
and
test
aad
xchg
nop
lret
lea
xchg
adc
aam
sub
mov
ret
movl
jle
stos
stos
int
insb
mov
dec
imul
cmp
es
mov
in
mov
rcr
cmc
stos
mov
inc
shrb
add
and
vunpcklps
push
shll
roll
push
jg
xchg
ret
das
fisubrl
idiv
or
mov
adc
or
stc
jae
stos
mov
or
inc
sti
sbb
movsb
adc
push
pop
mov
sub
mov
add
loope
mov
jp
mov
dec
mov
out
jl
jno
xchg
add
adc
or
xchg
cmp
cmp
adc
adc
je
jns
sbb
enter
dec
pop
inc
ss
dec
jp
sub
ficoms
mov
sbb
inc
xchg
mov
inc
mov
lods
pop
test
jns
test
xlat
push
fnstenv
testb
push
adc
subl
idivb
mov
sbb
xor
stos
sbb
dec
pop
mov
sub
jge
xchg
ljmp
xor
sbb
xorl
push
repnz
movsb
movsl
aaa
cwtl
push
cmp
shrb
leave
mov
pop
mov
inc
dec
jecxz
test
fnstenv
jmp
cmpsb
inc
cld
sbb
jecxz
mov
dec
mov
or
inc
xchg
imul
mov
sahf
test
push
jp
mov
sbb
test
les
stos
inc
dec
sub
mov
movsb
outsb
outsb
shlb
bound
lahf
repnz
xchg
dec
jg
out
pop
nop
xchg
mov
adc
or
and
loop
sub
xor
xor
lret
xchg
and
sbb
fnstenv
and
lock
fcmovnu
jge
orl
shr
sub
jb
lods
cmpb
push
dec
adc
add
scas
fsts
cmp
in
nop
jb
sub
sbb
sub
cmc
adc
data16
dec
test
loope
mov
jp
les
or
push
push
sbb
mov
cmp
mov
lock
mov
cs
push
lahf
pop
out
hlt
fisubrl
or
jns
mov
mov
scas
push
jo
enter
cs
jno
sub
int3
test
dec
mov
adc
sub
lods
cmpsl
dec
push
aam
rcrl
sbb
mov
jle
xor
je
jl
insl
push
cld
int
cmpsb
fs
push
xchg
lcall
mov
lahf
sahf
and
xor
sbb
dec
xchg
insb
popa
dec
sbb
mov
inc
data16
cltd
pop
loope
lcall
aaa
push
pop
es
mov
addl
out
pop
idivl
pop
lret
test
mov
cmp
cmp
pusha
pop
fidivs
fildll
mov
ds
jg
ljmp
rcrl
sub
pop
sar
jno
out
mov
lahf
sub
or
movsl
cld
in
pushf
jne
mov
movsb
push
cs
fwait
aad
add
fsubr
pop
push
push
fbld
popf
sbb
and
sub
outsl
push
adcl
js
pop
mov
cli
aas
and
mov
daa
mov
push
cmpsb
fwait
pop
mov
call
adc
rcll
xor
cld
sbb
cmp
movsl
pop
negl
cvtpi2ps
or
gs
xor
mov
add
xor
cmp
adc
xchg
cmpsl
and
xchg
addb
sbb
push
repnz
mov
pop
inc
ljmp
cmp
stc
pop
mov
add
xor
add
pop
mov
lahf
fidivrs
push
xchg
lds
push
dec
add
stos
scas
enter
test
repnz
notb
fldt
movsb
mov
adc
add
out
and
icebp
and
or
dec
rol
or
pop
and
jo
sub
lahf
xchg
popa
leave
push
test
stc
lahf
mov
push
test
push
push
and
addl
adc
add
mov
repnz
lahf
sub
jbe
inc
shrl
test
mov
dec
xor
repnz
sarl
cmpl
jge
hlt
dec
fmuls
popa
arpl
push
or
icebp
andb
enter
push
mov
mov
push
fmuls
in
es
fidivs
sub
sub
pop
fcmovnb
and
sub
jnp
fwait
xchg
filds
push
mov
cmpb
fldcw
ret
es
cmp
ds
data16
sub
dec
mov
stos
in
les
mov
jb
loope
clc
push
or
add
loop
mov
stc
cmp
mov
inc
xorb
outsl
int3
cmp
lret
pop
mov
pop
dec
repz
adc
sbb
xchg
into
and
fs
imull
mov
or
and
sbb
pop
loopne
xchg
subb
cmp
pop
pop
pop
mov
ret
leave
xchg
insb
pop
mov
xchg
add
or
dec
xlat
fsubrl
or
mov
bound
fdivrl
cmc
jmp
mov
add
cmp
or
lods
jle
pop
out
push
loope
cmpsl
loop
ret
and
mov
pop
test
push
fwait
cmc
jno
pushl
or
out
lods
mov
leave
das
int3
xchg
shlw
fbstp
lret
fcmovnu
test
xchg
ss
mov
in
mov
pop
stos
adc
cmc
in
cli
pushf
stos
xchg
pop
adc
adc
pop
pop
and
lods
test
cmpsl
push
push
xchg
adc
leave
xor
adc
lods
test
xor
test
int3
movsb
pop
js
aam
or
cltd
jo
xor
jnp
in
mov
dec
fildl
and
pop
or
or
mov
or
nop
test
inc
icebp
repz
sub
or
xor
in
mov
cmp
loope
mov
cmp
xor
push
mov
cmp
popf
xchg
push
mov
ret
xchg
jno
push
shlb
or
lcall
cltd
adc
mov
test
mov
mov
xor
adc
je
in
lea
inc
arpl
arpl
test
xor
scas
mov
sbb
fs
dec
mov
cmp
sub
in
mov
mov
aas
mov
pop
xchg
pop
in
pop
inc
sub
sub
and
sbb
lods
mov
mov
sahf
mov
mov
mov
cli
fcmovnu
and
call
out
sub
cmpsb
push
mov
inc
int3
dec
in
iret
dec
test
cli
or
jp
aaa
int3
pop
hlt
sahf
add
adc
sbbl
fadd
push
ss
jge
jnp
insb
push
popa
push
stos
xchg
scas
xchg
vmwrite
mov
out
pushf
mov
push
jnp
sub
bound
js
xor
or
popf
lcall
lods
pop
pop
push
pop
mulb
mov
or
dec
loop
sbb
mov
adc
xor
pop
jge
xchg
mov
dec
sbb
outsl
xchg
xor
dec
popa
xor
mov
xchg
inc
xor
jo
pusha
lea
jp
sbb
xor
lods
decl
xor
es
xorl
mov
xchg
hlt
push
push
movsl
xchg
fucomi
mov
gs
xchg
mov
in
push
mov
fiaddl
int3
fwait
mov
inc
fsubrl
xchg
repnz
mov
cmp
mov
jae
int3
sbb
das
ret
mov
insl
out
arpl
in
inc
cmc
mov
add
je
pushf
ds
cmp
adc
push
mulb
cmpsl
lods
push
mov
imulb
in
or
adc
repz
lcall
push
sbb
aas
inc
cld
call
xor
adcb
add
stc
enter
add
in
shrb
cmpl
movsb
aam
into
out
dec
cltd
imulb
pop
unpcklps
sahf
ret
or
fisttpll
inc
ss
mov
and
xchg
pop
or
iret
mov
lcall
mov
imul
cmpsl
test
cmpsl
scas
call
loope
xchg
push
push
arpl
and
ffree
push
jae
jo
push
out
push
inc
repz
xchg
push
int3
dec
and
or
push
sub
pop
fidivrs
pushf
sbb
jg
xchg
andb
xchg
fndisi(8087
orl
cwtl
das
movsl
adc
and
sub
cs
gs
repnz
pop
add
sub
jle
pop
addl
xchg
insb
pop
push
ja
mov
test
cmpl
in
jp
pop
pop
aaa
sub
mov
cmpsl
adc
andl
leave
shrb
fistpll
xchg
sub
lods
loop
flds
cwtl
ja
pushf
lods
ficompl
fsubrp
add
xor
pop
mov
das
fstpt
jge
pusha
push
push
pop
add
iret
sbb
xchg
in
test
xchg
rcll
call
sub
push
push
cld
incb
test
mov
pop
push
mov
sub
lret
das
jne
pop
adc
scas
pop
das
inc
idiv
mov
mov
daa
push
sub
pop
mov
insl
ds
push
out
dec
push
xchg
jnp
imul
scas
dec
pop
test
lea
sub
rorb
sub
icebp
sbb
pop
push
push
leave
dec
imull
xchg
insb
dec
loop
in
je
push
pop
pop
xor
out
pop
sti
cwtl
adc
lds
lods
jb
jecxz
jg
ret
push
pushf
test
adcb
xchg
inc
xchg
jns
aad
or
pop
xlat
xor
xchg
xor
mov
xor
int3
adc
test
xchg
pop
pop
out
fs
inc
xchg
inc
in
scas
xchg
mov
rclb
xcrypt-ecb
cmpsl
dec
push
fists
fwait
movsl
xchg
lcall
subl
imul
mov
pop
cmp
xlat
stc
pop
into
push
bnd
cmc
std
les
mov
std
push
xchg
xorl
shrl
dec
xor
cmp
ja
cltd
cmpsl
add
and
or
cwtl
clc
xchg
jp
inc
int
adcl
or
ss
ja
mov
push
out
scas
or
nop
in
sbb
out
gs
fucompp
or
repnz
mov
jl
mov
fwait
xlat
add
lods
syscall
outsl
pop
es
mov
sbb
inc
push
jge
sub
cmp
sub
repz
movl
ret
and
popa
jo
jnp
jns
cltd
lahf
inc
sbb
inc
mov
jmp
mov
les
int3
pushf
jmp
negb
xor
xchg
dec
push
addps
testl
stos
jo
std
cmp
pop
mov
pop
test
cmp
and
jecxz
bound
xchg
sbb
lret
xlat
repnz
sarb
mov
mov
push
stos
mov
dec
rorb
xor
add
jle
cmp
ljmp
out
in
and
cmpsb
outsb
fcompl
push
xor
jg,pn
mov
popa
mov
mov
push
jbe
or
jge
pusha
mov
inc
jmp
dec
push
stc
mov
test
dec
lea
jp
pop
ror
pop
ja
outsl
add
ss
push
cld
push
aam
cmp
push
mov
shll
test
push
es
jl
mov
pop
pop
mov
neg
push
cs
fwait
pop
mov
cmp
je
pop
xor
cmpsb
cmp
xor
bound
fdivrs
cmp
xor
cmp
push
jne
es
rorl
jmp
and
pop
sub
pusha
daa
aaa
xchg
mov
cmp
and
dec
out
ds
mov
arpl
mov
jae
ret
jle
dec
sub
xchg
cs
fucomip
fwait
pop
aas
pop
jl
inc
pop
push
sub
rcll
imul
pop
mov
jge
shrl
mov
pop
mov
jle
xchg
dec
xchg
cmp
push
movsl
xchg
pusha
mov
in
mov
test
pop
repz
jns
or
je
test
ret
dec
inc
nop
popa
push
push
stc
dec
jg
int3
mov
es
movsb
out
pop
xadd
imul
mov
jae
inc
dec
enter
das
repnz
out
mov
push
sbb
popa
jns
repnz
jns
insl
mov
dec
loopne
dec
xor
mov
and
loopne
mov
setae
fwait
push
jb
sbb
hlt
or
push
pop
xor
sbb
xchg
add
stos
xchg
lahf
jbe
nop
lds
and
inc
adc
lods
fs
cmp
jp
mov
adc
xlat
es
insb
inc
hlt
enter
iret
ret
xchg
cli
push
sub
mov
test
out
in
mov
xchg
nop
push
jbe
mov
addr16
pop
test
jmp
sahf
mov
jmp
jecxz
mov
jg
or
mov
push
mov
sahf
or
out
sub
inc
test
loope
repz
sbb
or
pop
insl
in
out
insb
push
xor
push
mov
sub
mov
fcoml
btsl
aad
jge
inc
es
sub
decl
imull
scas
mov
cli
int
lea
mov
jp
sbb
sarb
lea
and
jno
bound
and
lock
aaa
sti
jmp
bound
inc
inc
std
xchg
leave
lock
cmp
test
aad
dec
mov
in
cli
adc
insl
outsl
mov
pop
xchg
xchg
int3
sbbl
rorb
popf
cs
jl
sub
mov
sbb
fnstsw
mov
mov
lods
cmp
jne
test
fiadds
mov
mov
xchg
iret
dec
cmpsl
jbe
out
enter
push
gs
shll
dec
andb
es
mov
lldt
fstp
popa
dec
and
inc
mov
leave
aas
push
out
mov
je
or
mov
push
fxch
loope
fadd
in
lds
lods
pushf
push
int
xor
pop
mov
out
fs
sub
or
sub
and
push
out
stc
ja
cmpl
jge
ds
add
xchg
adcl
scas
ja
sub
movsl
push
dec
scas
in
add
ja
rcrl
or
xor
into
subl
or
mov
add
xlat
or
sarl
xchg
aas
loope
xor
sub
flds
inc
mov
fdivrs
mov
fcoml
popa
lods
addr16
out
jnp
fidivrs
jnp
dec
inc
sub
dec
out
flds
out
xchg
push
mov
jo
out
lds
pop
sti
sbbl
mov
scas
xchg
lods
cmc
lods
decb
sbbb
jg
and
push
and
cmpsb
jg
loop
repnz
pmaxsw
and
xchg
mov
xor
rcrb
mov
dec
aaa
js
fsubs
adc
cmp
fsubrs
jae
push
cmp
cltd
pop
mov
outsl
mov
add
mov
stos
sbb
rcr
movsb
in
pop
jno
sbb
aam
loope
push
in
ljmp
stos
inc
roll
and
fcoml
repnz
fisubrl
push
stos
and
and
xchg
test
sbb
mov
rcrb
mov
mov
fisttpl
sub
das
sub
add
scas
insl
ds
gs
ficomps
aam
jle
fldl
mov
jne
mov
lcall
cmp
xor
aas
sub
add
nop
bound
inc
pop
mov
rcrb
cmc
mov
cmc
xor
rolb
jle
hlt
inc
js
dec
ds
cwtl
add
es
iret
ds
test
adc
dec
push
sahf
test
addr16
loop
dec
pop
or
and
rolb
addr16
pop
pop
pop
inc
xor
dec
jb
xchg
xchg
fwait
call
push
dec
adc
xchg
xchg
movsb
inc
xchg
inc
dec
add
movb
repnz
push
sub
std
outsb
nop
add
xchg
repz
fdivl
xchg
inc
addr16
int
xor
mov
sub
push
dec
sub
inc
leave
and
lock
les
or
and
push
das
jnp
dec
inc
daa
andl
lret
mov
cs
movsb
inc
mov
xchg
aad
mov
xor
jp
testl
in
sbb
sahf
mov
outsb
loopne
inc
xchg
les
stos
or
arpl
dec
jmp
xorb
jg
cli
mov
cmp
cwtl
jmp
imul
cltd
icebp
and
mov
mov
ret
xchg
out
mov
cmp
scas
gs
sbbb
mov
push
sbb
out
shl
call
ret
test
out
xor
xchg
pop
out
jmp
mov
and
xor
js
or
fsubrp
adc
jae
ljmp
push
inc
push
daa
les
or
loopne
cwtl
cmc
jl
dec
out
mull
fnsave
adc
and
xchg
stc
arpl
xchg
aas
adc
sahf
nop
in
lcall
les
lock
rcr
sbb
aas
loop
aaa
dec
fwait
imul
jl
call
mov
test
sahf
xchg
sbb
jb
fs
faddl
ljmp
dec
movsl
adc
mov
xor
cmp
loopne
ljmp
mov
aas
cwtl
outsb
enter
cmp
frstor
inc
jg
jns
mov
jmp
pop
test
ds
xchg
in
not
icebp
sbb
cltd
adc
add
mov
inc
movsb
cmp
movsb
mov
mov
mov
push
dec
popf
push
push
orb
push
sub
popf
pushf
js
out
mov
mov
dec
int3
repnz
and
dec
in
movsb
and
imulb
fnstcw
and
or
pop
mov
xchg
ficoms
ret
rcr
jg
xchg
inc
shll
mov
mov
or
jno
ret
adc
cld
mov
mov
or
mov
scas
mov
lahf
ss
scas
and
mov
push
xchg
add
push
cmp
inc
and
mov
int
popa
sahf
xor
pusha
pop
dec
push
xor
mov
sbb
scas
les
icebp
add
xor
mov
insl
inc
dec
int
xlat
xchg
mov
or
movsl
mov
pushf
xchg
mov
and
das
sahf
jl
push
mov
data16
hlt
ret
xchg
xor
xchg
in
xchg
in
mov
dec
shrl
rcll
les
mov
push
mov
fstp
adc
mov
jp
ret
rcl
xchg
xchg
xchg
das
into
in
adc
aaa
push
dec
inc
loopne
inc
add
fcmovnbe
jbe
dec
popf
dec
aas
push
sahf
pop
jg
jecxz
cmc
jmp
xor
add
or
jl
lods
xchg
movl
jbe
fsubs
xchg
das
aaa
or
lds
lret
into
ret
cli
filds
fistpl
out
or
push
enter
mov
add
add
loope
test
dec
xor
xor
scas
imul
pop
push
mov
sahf
and
cmp
inc
shll
lock
data16
add
iret
mov
pop
and
lds
mov
pop
je
pop
cmp
mov
data16
mov
xchg
insb
mov
dec
rorb
and
je
sub
dec
clc
in
into
icebp
and
mov
xor
push
mov
sub
pushf
lds
push
and
inc
mov
inc
fbstp
and
repnz
lods
jle
cmp
outsl
fwait
std
fwait
xchg
xor
les
push
add
push
inc
lea
outsb
adc
push
fnstenv
scas
pop
sbb
sti
sub
sti
jne
xchg
andl
jne
insl
ja
xor
ds
pop
das
dec
sbb
jge
or
mov
dec
add
mov
xchg
js
sub
add
out
mov
imul
scas
xor
adc
dec
push
pop
addr16
adc
pop
add
ret
clc
mov
xlat
ss
sbbl
sub
adc
movsl
xor
pop
sbb
jns
aas
shrb
and
jns
mov
cli
jae
sbb
rclb
lods
xor
mov
sbb
jge
in
notb
sahf
call
mov
xchg
mov
mov
inc
xchg
insb
into
dec
int3
lods
int
sub
movsl
push
into
outsl
adc
stc
bound
xlat
inc
pop
xchg
sub
orl
add
je
xchg
xchg
adc
in
mov
push
enter
daa
out
mov
pusha
cwtl
push
imul
push
add
shr
inc
test
test
jne
jl
flds
cmc
je
pop
aad
es
mov
pop
cmpb
lds
add
xor
sbb
sub
aad
pushf
shr
orb
sub
sahf
in
push
add
mov
mov
and
daa
mov
xor
loope
push
dec
xchg
fisubl
jno
sub
out
outsb
jp
sbb
fxsave
cmp
cmpsb
mov
int3
lret
stc
mov
ficomps
fsubrp
push
mov
sbb
test
lcall
loopne
add
mov
data16
dec
mov
pop
test
xchg
xchg
add
sub
lcall
jg
clc
or
or
call
adc
mov
leave
xor
jno
leave
mov
not
jle
sbbb
push
nop
mov
fstps
sub
mov
xchg
sub
jg
pop
push
ljmp
inc
decl
loopne
push
pusha
xchg
dec
push
push
mov
gs
hlt
add
xchg
add
cwtl
ds
cmp
adc
popa
icebp
sub
add
clc
dec
out
in
dec
mov
pop
add
in
cmpsb
sub
cli
add
push
mov
xchg
cmp
sub
inc
stos
sub
sub
in
movsl
imul
aad
hlt
dec
pop
out
fmul
clc
jnp
add
dec
lahf
bound
push
jmp
mov
pushf
aad
xor
in
jns
mov
push
mov
push
xchg
add
rolb
mov
in
fildl
jg
fdiv
and
xorl
lret
mov
jbe
insl
je
pop
decb
dec
popa
out
xor
push
fisttps
ja
out
push
xchg
sub
xor
pop
inc
mov
movb
or
mov
popf
cli
cmp
mov
xor
inc
dec
mov
xchg
loope
out
adc
stos
test
dec
cmpsl
pop
aaa
pop
mov
loopne
enter
sub
clc
mov
fwait
inc
imul
pop
xchg
fwait
xchg
incb
jp
movsb
stos
cld
ret
mov
lret
sahf
enter
es
mov
mov
cld
aas
lea
cmpb
out
jne
das
pushf
test
or
adc
push
cld
mov
test
test
repnz
addr16
aaa
dec
xchg
pop
mov
int3
mov
cltd
icebp
dec
pop
push
xor
sub
cmpsb
push
std
mov
adc
cli
xlat
xchg
das
ljmp
in
ret
ljmp
or
jmp
aam
repz
inc
orb
cmp
sub
pusha
mov
ss
sub
inc
std
out
push
pop
cltd
cltd
hlt
jp
jle
push
dec
imul
pop
es
push
lcall
inc
xchg
enter
push
or
or
mov
outsl
push
jo
iret
idiv
int
mov
aas
push
push
sub
idivl
or
sub
adc
push
add
sbb
icebp
test
sbb
pop
in
cltd
movsl
cmpl
xchg
push
dec
mov
adc
cltd
pop
lock
inc
aas
mov
in
fisttps
inc
dec
lahf
pop
jno
int3
add
aas
mov
and
scas
fbld
mov
xchg
ffreep
imul
mov
adc
rorb
mov
stos
lahf
xchg
cwtl
xchg
inc
adc
or
lcall
pop
and
sub
pop
xchg
push
and
pop
icebp
xor
adc
pop
cli
jecxz
or
inc
insl
enter
pop
sbb
cmp
ja
inc
loope
xchg
imul
ret
je
fs
push
cld
sub
lret
les
js
xchg
or
mov
or
arpl
stos
or
inc
and
or
and
cmpsl
icebp
inc
pop
inc
jg
or
dec
loope
icebp
push
push
mov
mov
mov
rorb
adc
jb
mov
imul
imul
andl
loopne
cltd
lods
xorb
push
push
sbb
pop
mov
loopne
pop
sub
or
inc
addr16
push
mov
dec
in
mov
adc
fs
icebp
int
sbb
fstpl
sbb
xor
repz
jle
mov
jge
and
pop
push
daa
leave
aad
xor
lcall
xchg
sti
imulb
in
arpl
outsl
fldcw
lea
out
imul
adc
cld
inc
adc
inc
test
sbb
mov
rclb
test
mov
push
cmp
cmc
fnstenv
or
xchg
pop
gs
ret
xor
ficompl
ss
mov
test
and
pop
push
mov
mov
and
test
dec
mov
pusha
loop
daa
cli
repnz
cs
xchg
mov
mov
push
out
push
adcb
insb
adc
jo
mov
aam
pushf
in
xchg
nop
ret
adc
push
repnz
jbe
test
mov
test
adc
adc
add
outsb
sub
cmp
int3
outsb
arpl
outsb
and
nop
cs
xchg
jno
scas
aam
popf
cld
das
sbb
ret
stc
adc
mov
lret
rorb
adc
fwait
out
add
cmp
int
jo
das
pop
inc
pop
dec
or
fs
push
push
xlat
sub
stc
loopne
pusha
jae
pop
fstps
lds
fimuls
or
xchg
mov
hlt
adc
inc
inc
pusha
test
pushf
ja
push
loop
ret
xchg
and
add
pop
and
dec
mov
mov
stos
lods
fmul
aam
les
and
push
fmuls
jl
mov
dec
das
leave
sbb
pop
jl
fsubs
dec
in
out
adc
mov
repz
fwait
dec
or
loop
and
push
ss
jb
jo
mov
ror
add
mov
push
push
mov
stc
lcall
jg
sub
shll
not
push
pop
rcrb
push
jle
cmc
add
mov
mov
pop
movsl
sub
inc
pop
shlb
xor
mov
or
cmp
repz
cmp
xchg
sub
jb
jnp
js
cmp
lock
jns
sub
scas
mov
and
insb
adc
insl
add
in
adc
in
pop
pop
icebp
sbb
pop
jo
jge
add
and
ret
daa
inc
movsl
mov
subb
fsts
xchg
loop
aas
cmpsb
in
jmp
int3
aam
in
roll
push
in
pop
dec
or
shl
add
cmc
adc
or
sbb
shl
icebp
add
push
rcl
sub
or
mov
and
cmp
pop
xlat
inc
int
outsl
push
sbb
aam
pop
or
dec
inc
add
sub
cmp
mov
sbb
mov
loop
stos
xor
jmp
int3
push
and
aaa
shll
decl
mov
add
rolb
and
xor
inc
pcmpgtb
mov
filds
push
scas
jne
dec
movsb
pop
nop
inc
jbe
add
sahf
cmc
jge
les
sbb
ret
xor
jnp
mov
pop
adc
fisubrs
mov
fdivs
cmp
push
icebp
daa
add
fcoml
ds
push
aaa
cmp
fmuls
loopne
jmp
or
dec
shlb
pop
dec
jp
cld
mov
sbb
jl
stos
jg
lahf
pusha
sub
dec
xchg
jae
pusha
daa
jb
mov
aaa
out
and
stc
aad
lods
ftst
sbb
pop
fimull
sti
es
and
push
push
and
ljmp
jp
adc
mov
and
dec
cmp
iret
les
sbbb
sub
push
xchg
sub
xor
int
xor
jmp
test
insl
ja
pop
mov
cld
jge
adc
aas
xchg
cs
ret
into
mov
movsb
sbb
sub
in
mov
mov
cmp
fwait
xchg
pushf
sub
cmp
shlb
or
in
fsubrl
div
cs
mov
adc
push
sti
sbb
pushf
adc
pushf
inc
stos
popf
push
mov
cmpsl
cmpsl
sbb
lret
stc
divl
dec
outsl
push
xchg
ret
dec
push
lods
dec
aam
mul
jp
and
imul
sbb
ja
push
mov
mov
xorl
pop
push
mov
iret
loopne
lock
lahf
pop
addl
xchg
xchg
jne
loope
adc
pop
or
sbb
fwait
mov
mov
loopne
add
ret
mov
popf
sub
inc
adc
not
insb
mov
sub
iret
pop
cmpsb
test
lea
sbb
nop
dec
dec
sbb
inc
sub
mov
in
xlat
pushl
jb
xchg
in
adc
xchg
add
jae
sbb
mov
cmp
arpl
and
xor
call
into
xchg
xchg
stos
es
or
ret
stc
dec
pop
pusha
ja
inc
mov
into
jnp
inc
xchg
jnp
push
mov
or
jg
mov
mov
sbb
fdiv
rcrb
add
xchg
adc
outsb
adc
cmp
dec
jp
mov
iret
adc
push
xor
imul
stos
ja
es
cmp
mov
mov
add
fs
push
xor
mov
mov
push
push
mov
lea
pop
icebp
add
jae
fisubrs
jmp
test
faddl
cmpsb
sarb
data16
xchg
add
pop
add
shl
inc
jns
shlb
outsl
push
push
bound
adc
lods
cmc
aad
add
mov
sti
mov
lock
dec
int
dec
pop
sti
orb
movsb
add
xchg
pusha
jecxz
push
fwait
mov
addr16
fwait
xlat
sti
ljmp
cltd
test
inc
lahf
imul
insb
add
push
repnz
xchg
in
aaa
xchg
mov
add
scas
lock
xor
push
dec
outsl
mov
sub
lcall
int3
inc
cld
inc
pop
cmp
jnp
pop
scas
idiv
adc
pop
pushf
mov
icebp
jno
out
das
int3
inc
into
pop
jmp
cmp
add
sub
push
syscall
aam
addl
xchg
fnstcw
stc
stos
dec
cld
sarl
mov
std
xchg
addb
dec
nop
stos
pop
dec
cli
clc
sahf
outsl
dec
push
or
notb
and
clc
dec
pop
mov
jmp
push
sbb
ss
jecxz
sub
insl
incl
outsb
test
cmp
adc
pop
je
sub
pusha
mov
jmp
ljmp
dec
cmp
loope
mov
sub
cmp
rorl
icebp
mov
insl
dec
shl
icebp
dec
repz
pop
int
jb
inc
mov
jmp
push
loope
and
movsl
test
es
dec
lret
cltd
pushf
mov
das
and
and
enter
mov
mov
jne
add
jno
mov
jecxz
mov
das
inc
movsl
add
addr16
fxam
cltd
pop
pushf
ret
icebp
inc
repnz
out
dec
fcoms
xchg
cwtl
stos
in
fsubp
adc
jle
inc
roll
pop
arpl
inc
lds
or
cltd
sbb
jle
pop
xchg
xchg
repz
fstps
add
nop
cmp
enter
ds
inc
pop
sarb
roll
jge
xor
cld
inc
push
and
xor
and
daa
lea
dec
pop
mov
rcrb
les
mov
test
lret
repz
xchg
mov
push
fsubs
idivb
je
mov
mov
inc
ret
sub
and
test
mov
dec
pop
push
xlat
stc
jl
cltd
mov
bswap
decl
xor
adc
popa
adc
and
imul
push
shl
inc
add
mov
fdivp
xlat
ds
in
cld
aaa
pop
or
fistl
push
nop
dec
into
arpl
shrb
aam
cli
and
in
xchg
sahf
cmp
sbb
xchg
mov
xchg
mov
fadd
std
addl
push
dec
cwtl
jle
rorl
or
push
push
inc
lret
call
inc
xor
sub
cmp
arpl
cli
test
cld
xchg
sbb
in
cmp
jle
mov
mov
loop
ljmp
loope
pop
scas
cmp
gs
and
push
pop
or
cmp
dec
daa
mov
mov
in
insl
xor
filds
xchg
test
aad
push
out
xchg
mov
ret
ds
sbb
push
gs
dec
ja
cmp
scas
jns
fcmove
imull
dec
xchg
xor
mov
loop
push
xor
xor
pop
mov
lods
push
cmpsb
leave
xchg
xor
sub
xlat
movsl
insb
inc
adc
imul
fstps
cs
push
pop
xchg
sub
mov
xchg
cmp
push
or
lods
sub
jb
inc
andl
add
iret
push
sub
add
inc
aas
jno
mov
adc
fsubrs
daa
data16
pop
aad
loopne
jb
mov
mov
pushf
outsl
loop
xor
fildll
shrl
mov
in
pop
movsb
cwtl
cmpsl
imull
xor
adc
add
je
nop
cli
das
movb
movsl
test
push
insb
xlat
shlb
cltd
mov
xchg
stc
rorl
cltd
outsb
sub
xor
cmp
not
mov
adc
jmp
lret
jmp
pop
cmc
ljmp
pusha
jl
mov
push
stc
mov
pop
iret
pop
jl
inc
sub
pop
xor
fs
pop
dec
inc
xchg
fsubs
lcall
and
imul
xchg
pop
add
cmp
ds
addr16
loopne
push
mov
or
inc
sub
icebp
lea
inc
cmp
sahf
push
movsb
sahf
mov
xchg
shlb
ja
pop
mov
lods
add
inc
dec
mov
imul
push
inc
rclb
out
enter
nop
in
jp
pop
lret
sub
into
movsl
xchg
iret
dec
idivl
inc
jbe
jns
mov
shlb
cwtl
notl
inc
sbb
nop
fldlg2
in
iret
ljmp
cmp
movsl
cld
add
ljmp
or
sti
pop
jo
jae
mov
lea
cwtl
jecxz
xchg
mov
gs
lahf
push
add
sub
std
loope
scas
mov
sub
ret
jecxz
sub
shl
dec
pop
cmc
out
test
mov
or
cld
push
mov
std
push
inc
or
jl
mov
stc
lret
into
sub
sarb
pop
mov
sbb
ret
fidivrl
dec
push
jl
aad
aas
int
dec
mov
add
clc
lcall
aas
xchg
and
pop
cwtl
icebp
pop
outsb
popf
lret
mov
pop
stos
xlat
imul
push
outsl
inc
repz
add
incl
inc
insb
insl
pop
inc
das
scas
test
enter
mov
mov
js
push
dec
sub
xlat
mov
xlat
loopne,pn
orl
out
xchg
frstor
xchg
std
int3
clc
sub
inc
shlb
mov
jno
cmp
jl
mov
pop
add
xor
movb
push
add
inc
pop
push
cltd
test
movsb
lods
push
jg
pop
insb
int3
cmpsb
pop
and
jne
jmp
jmp
movsl
add
outsl
pop
push
mov
scas
ret
dec
adc
push
shrb
cwtl
cwtl
jo
int
lcall
push
mov
lods
ja
add
lods
inc
loopne
stc
and
push
add
adc
xor
jge
jge
mov
insl
stc
loope
ret
push
push
jle
inc
in
in
fistpll
jmp
je
rorl
lahf
push
clc
mov
leave
rorl
stos
xchg
add
insl
add
sarb
rcrb
lret
int
adc
sbb
out
sahf
test
cltd
inc
lea
inc
mov
pusha
pop
imul
testb
add
ret
subb
adc
jb
int3
push
pushf
shlb
movsl
mov
jae
push
movsl
xchg
dec
cli
cmpsl
jns
sbb
test
add
hlt
xlat
and
and
push
sbb
insl
push
fsubrp
mov
fstpt
rcl
scas
inc
ficomps
ljmp
xor
insb
imul
loopne
push
push
or
arpl
inc
sbb
dec
cs
pop
and
mov
pushf
aaa
loope
sahf
cmpsl
aad
out
mov
cwtl
imul
lret
arpl
out
outsl
sub
lods
jno
jp
sub
fsubr
popa
pop
ljmp
xchg
scas
stc
push
jae
gs
filds
add
sbb
lea
rcl
lret
ljmp
daa
adc
movsb
movsl
insl
and
xchg
push
jp
mov
inc
adc
xchg
mov
lock
ret
adc
popa
paddb
arpl
jg
jg
cmp
pop
movsl
popa
out
test
mov
mov
xchg
xchg
fcomps
and
test
sbb
inc
dec
test
into
sub
loopne
jns
outsl
mov
stos
inc
inc
xlat
fldenv
daa
test
adc
fstpt
xchg
mov
cmpsl
or
pop
cmp
pop
inc
out
ja
leave
movsl
dec
dec
fldt
fwait
mov
enter
mov
mov
pop
test
inc
mov
xor
fcomps
mov
pop
mov
xchg
je
into
adc
int
pop
mov
dec
pop
inc
repz
jle
in
or
mov
test
ds
mov
cwtl
mov
lock
pusha
shll
mov
cltd
dec
shrd
jl
adc
stos
es
stos
es
ret
aas
mov
jecxz
cwtl
xchg
cld
loop
pushl
mov
xlat
xchg
cmp
iret
jb
push
aad
cmc
push
cmp
aad
mov
test
mov
int
cmc
std
pushf
push
push
stos
outsb
and
daa
in
mov
push
jecxz
jmp
sub
movsb
dec
cli
mov
repz
or
das
das
and
inc
xorb
cmp
call
ss
imul
sbb
mov
cs
fnstenv
sbbl
pop
push
vhsubps
jge
dec
sbb
loope
leave
inc
pop
mov
jnp
pop
stc
jnp
cmp
inc
dec
add
movsl
aas
cmc
mov
mov
add
les
sub
xor
and
enter
push
aaa
cmp
int
add
jae
adcl
sbb
pop
into
mov
jo
test
sbb
das
push
notb
push
int3
sub
push
xchg
inc
lea
mov
xor
arpl
add
inc
std
daa
push
mov
loope
mov
mov
mov
xchg
and
ficomps
pop
nop
aaa
les
stc
sar
int
mov
movsb
lret
inc
leave
or
and
in
sbb
cmpsl
dec
out
leave
mov
or
adc
jno
xchg
add
jmp
aas
inc
mov
mov
outsl
movsl
bound
adc
cmp
in
and
test
arpl
or
outsb
in
cmp
or
loopne
ret
and
das
mov
and
stos
pushf
mov
mov
ret
jecxz
mov
out
xchg
arpl
jmp
clc
add
es
in
xor
mov
sti
gs
loope
sub
fidivrl
insl
mov
mov
xchg
lock
mov
cmp
aas
xchg
xor
adc
test
mov
sub
test
mov
xor
xchg
loope
xor
vpacksswb
mov
mov
gs
cmpsl
jne
lds
nop
cwtl
jecxz
std
add
cmp
in
cmp
ss
xlat
jae
cmpl
ss
sub
inc
push
jg
mov
inc
gs
or
mov
pop
lea
int
adc
xchg
cmp
sbb
adc
jecxz
pop
cmpl
imul
mov
mov
jl
mov
aad
inc
pushf
add
iret
adcl
cwtl
sbb
mov
scas
xor
fisubs
cmc
adc
fwait
adc
xorl
loope
in
xor
xor
popa
incb
es
cli
inc
pushf
jle
xchg
sub
inc
mov
inc
pop
std
mov
jecxz
loop
cmpsl
dec
mov
arpl
mov
dec
xchg
daa
and
int3
mov
pop
mov
lods
dec
pop
nop
outsl
or
loope
fidivrs
xor
pop
sti
cltd
pop
cld
fimuls
sub
lahf
push
cmp
hlt
das
mov
fidivs
movsb
fldt
into
push
xor
aam
xor
in
push
je
imul
dec
dec
xchg
inc
jp
out
add
mov
pop
test
js
popa
xchg
mov
scas
popa
add
add
adc
mov
stos
sub
mov
mov
mov
leave
andnps
pusha
mov
lea
xchg
jne
lret
or
jo
dec
mulb
xor
push
out
pushf
sub
les
pop
cmc
xchg
ss
push
sbb
cld
loopne
pop
xor
pop
mov
xor
jae
pop
dec
sub
mov
in
lea
pushl
sbb
dec
shl
push
mov
jnp
int3
adc
jle
sbb
cmp
add
pusha
test
fld
ljmp
ss
cmc
jg
lcall
std
loop
adc
xor
repz
in
dec
out
mov
lret
push
push
and
mov
hlt
mov
push
insl
dec
and
add
ret
push
mov
lahf
or
dec
ss
pop
fndisi(8087
aaa
scas
cmpl
stos
adc
inc
pushf
and
mov
sub
std
das
lds
fidivs
adc
shr
mov
cltd
movsb
movb
loope
jb
cmc
jb
pop
xchg
notl
mov
imul
inc
fs
lahf
jae
shr
xor
xchg
and
lock
mov
push
in
and
adc
sbb
jp
push
cs
xchg
inc
lds
jno
fiaddl
repnz
bound
push
das
xchg
sub
xchg
das
cmp
sub
pop
outsl
pmaxub
jp
cmpb
inc
lods
jmp
pop
xor
or
shll
cld
mov
scas
xor
xor
sub
pop
push
scas
adc
stc
outsl
push
sbb
movsl
rolb
push
pop
jbe
popf
mov
push
aam
push
iret
lcall
push
jne
adc
lret
sub
pop
adc
stos
mov
and
xor
out
sbb
cmp
fldcw
xchg
lea
sub
sub
pop
in
fcoml
jle
lods
cmp
cmp
pop
leave
sub
xor
pop
xchg
iret
pop
sbb
lcall
cwtl
loopne
or
xlat
pop
call
es
adc
lret
or
lods
xor
sub
mov
in
push
push
into
mov
mov
and
sub
int3
cmp
stc
xor
and
or
fldcw
mov
push
sbb
or
ds
sbb
jp
daa
es
dec
loop
add
scas
inc
or
push
jae
lahf
mov
js
pop
scas
jne
dec
and
icebp
mov
pop
lods
mov
arpl
mov
mov
shll
dec
cmp
xor
fs
mov
arpl
mov
sub
pop
sub
mov
mov
and
cmc
mov
sahf
push
adc
push
mov
out
das
sub
roll
loop
repz
xlat
lret
sbb
pop
cltd
sub
jo
in
cwtl
movsl
out
jo
inc
fmuls
jae
jnp
cmp
dec
push
aad
mov
enter
and
xchg
icebp
mov
loope
int3
rcl
inc
mov
out
inc
sbb
or
orl
mov
bound
adc
mov
mov
bound
xchg
inc
inc
test
jne
je
mov
shrl
add
sub
loopne
in
xchg
scas
inc
xlat
jmp
jb
xor
xchg
aas
or
data16
imul
je
sbb
dec
xor
mov
mov
mov
jae
into
jno,pn
or
or
xor
mov
dec
mov
enter
iret
enter
dec
sahf
loop
or
or
mov
fdivr
sub
lcall
dec
cld
sahf
mov
inc
dec
push
test
clc
fwait
js
cmp
out
mov
insl
pop
and
sbb
cmpsb
loop
dec
fdivrs
stc
stos
sub
call
dec
xchg
push
popl
push
mov
push
sub
out
aad
testl
cli
mov
xchg
or
cmc
das
pop
iret
pushf
lds
and
mov
sbb
xor
jge
push
sub
jns
pop
inc
jb
xchg
mov
mov
mov
dec
lods
mov
sti
aad
subl
mov
and
or
cmp
inc
es
push
mov
and
xchg
xchg
mov
sarb
orb
jne
mov
je
rcrl
std
cltd
or
mov
test
xchg
daa
add
sbb
in
and
mov
mov
dec
mov
ret
push
mov
cwtl
and
xlat
repz
sub
add
sbb
daa
stos
sub
ja
adc
out
jg
sub
cli
jl
adc
add
call
mov
adc
add
cmp
lock
xor
push
mov
mov
fsubs
dec
in
cmpsb
cmp
fadd
insl
leave
inc
jl
dec
mov
push
adcb
push
cmc
nop
mull
das
mov
inc
bnd
fisttpl
and
roll
cmp
mov
sub
pop
and
add
push
pusha
and
dec
mov
out
mov
ja
jbe
and
mov
add
nop
bound
out
add
aas
sti
scas
sbb
int3
pop
leave
mov
lahf
out
xlat
jecxz
adc
adc
int3
sbb
cmp
xchg
rcrb
inc
mov
and
jno
ds
pcmpgtd
pop
mov
test
orb
xchg
sarb
decl
fadds
iret
roll
pop
inc
int3
fisubrs
in
mov
push
and
test
popf
iret
xor
mov
mov
fildl
scas
lcall
shrb
out
rcrb
jecxz
into
mov
and
sub
pop
dec
or
loopne
add
lods
jnp
clc
dec
push
popf
out
xor
xlat
mov
stos
ja
push
push
rcrl
push
fsts
or
push
mull
dec
not
in
push
or
push
test
sbb
mov
lcall
movb
sub
bound
ljmp
stc
stc
movl
mov
imul
inc
jne
aad
xrelease
push
add
pop
cmc
and
jp
notl
ffree
pop
add
jo
sti
add
xor
test
shlb
lock
lret
cmpsb
stos
mov
push
ret
fisubs
mov
mov
push
lock
ds
int3
mov
inc
xchg
xchg
dec
into
inc
cmp
aam
mov
lock
loope
arpl
jo
jmp
jl
pushf
cltd
sbb
dec
cltd
mov
roll
leave
mov
pushf
dec
mov
pop
testb
imul
dec
mov
pop
movl
in
jo
incl
jne
pop
shlb
popf
imul
add
or
arpl
mov
mov
fstpt
jns
lret
xor
push
jo
sbb
icebp
jle
cmp
popf
cmpsb
cmp
fucomi
dec
loopne
dec
testl
xlat
inc
cli
mov
shlb
jge
idiv
pop
in
push
cmp
out
cmp
sbbl
negw
aam
loope
in
jb
push
push
mov
loop
leave
sbb
ret
movsb
shlb
lea
lea
pop
test
ss
xchg
push
mov
lret
or
es
jb
cmc
gs
inc
outsl
cmp
jl
xlat
push
dec
dec
ljmp
cmp
add
in
mov
arpl
push
cmp
lcall
mov
xchg
lds
daa
orl
lds
in
jo
out
mov
sub
cmp
jb
inc
dec
movsb
pop
push
mov
daa
mov
in
test
fldcw
out
inc
addb
bnd
push
dec
sub
or
mov
int3
bound
pop
mov
aam
rep
imul
push
mov
lock
jne
sbbb
movsb
cmpsl
dec
xchg
insb
inc
push
cwtl
inc
xorb
stos
shl
imul
cmp
pushl
aam
adc
pusha
orl
lods
daa
ljmp
add
daa
inc
test
pop
push
out
call
pop
and
jb
mov
in
inc
inc
scas
xchg
movsl
test
sub
iret
adc
mov
pop
xchg
xchg
ret
inc
inc
outsl
mov
or
icebp
mov
add
push
jnp
insl
jp
sbb
mov
shll
pushf
xchg
jecxz
mov
pop
daa
dec
sti
fdivl
jns
push
cmp
pop
jmp
cmp
xchg
bound
or
icebp
sbb
inc
ss
jge
aad
loope
imul
ds
adc
pushf
push
adc
add
mov
push
lret
ja
inc
add
mov
jge
xchg
pushf
push
push
fsubrs
push
cld
sbb
insl
test
mov
lret
dec
dec
daa
adc
je
mov
adc
or
push
shrl
push
fadds
push
hlt
rcll
nop
lods
or
mov
je
movsl
repz
sarb
repnz
push
xor
push
out
cld
divb
or
push
jae
scas
mov
out
addl
dec
mov
imul
push
push
ljmp
and
repz
mov
movsl
into
insl
std
mulb
pop
movsb
mov
and
xchg
jmp
pop
sub
push
in
std
cltd
sbb
popf
lret
pop
pushf
add
xchg
inc
rcl
ljmp
xchg
mov
add
lret
pop
in
and
push
cltd
mov
cld
xchg
inc
lahf
xchg
sub
dec
enter
push
pop
jle
push
ss
jo
clc
loop
xchg
pop
xchg
sub
rol
mov
mov
ret
xor
mov
add
jno
and
mov
in
sbb
negl
mov
das
in
push
mov
mov
stos
imul
cmp
mov
xor
lcall
hlt
and
insb
jb
stc
aad
jg
pop
pop
jno
jbe
dec
pop
loop
or
sub
dec
in
rol
lea
jle
hlt
sbb
xchg
enter
xchg
ljmp
in
jmp
add
sbb
cmp
push
cmpsb
xchg
test
js
addr16
pop
xchg
call
sbb
push
inc
rorb
in
xchg
cmp
sbb
rclb
arpl
mov
and
dec
adc
test
je
jle
jne
movsb
cmp
xor
addl
lret
cmp
ret
repz
or
xor
xchg
inc
cld
pushf
or
add
ss
mov
mov
inc
int3
and
jmp
inc
push
out
lcall
popa
pop
push
inc
repnz
sub
dec
movsl
jns
xchg
out
setl
inc
inc
sbb
imul
into
insb
pop
cld
lret
xchg
push
or
jb
mov
jecxz
sbb
js
pusha
cmp
inc
movsb
ja
nop
movlps
cltd
inc
adc
sub
lock
rcll
push
pop
adc
hlt
pop
je
shl
out
mov
pushf
push
stos
shrl
and
xor
jle
loope
sbb
add
cmp
xor
xacquire
add
les
fsubrl
and
mov
mov
mov
mov
sbb
bound
cld
shrb
cmp
mov
mov
xor
mov
pop
orl
imul
test
mov
fs
mov
sub
jle
ss
jnp
or
mov
movsl
daa
or
or
adc
push
xor
mov
mov
xchg
in
repnz
sbb
aaa
pop
pop
adc
sbb
outsl
sub
scas
aas
sbb
dec
call
int3
mov
std
loop
popf
stc
and
pop
mov
and
push
push
xchg
and
pop
mov
sbb
mov
push
mov
fwait
mov
sub
movsb
push
shlb
int3
pop
xor
jl
in
mov
sub
aaa
jo
rol
out
jle
in
xor
sub
sbb
fs
inc
loopne
sub
sub
insb
xor
mov
dec
mov
push
xchg
divl
and
sti
mov
jecxz
js
hlt
dec
and
loop
arpl
add
aam
out
outsb
cmp
loopne
jae
and
jmp
dec
inc
adc
test
imul
mov
sub
xlat
and
sar
or
mov
shrl
cltd
push
sbb
test
mov
jmp
sub
mov
fnstenv
cmp
mov
bound
mov
pusha
push
leave
pushf
and
les
cmp
xchg
js
clc
scas
pop
jmp
imul
mov
fbld
lret
or
cmp
vcvtdq2pd
movsl
jp
sub
test
lret
push
fadds
xchg
js
iret
sahf
jns
mov
es
push
push
mov
or
add
in
pop
pusha
js
into
xchg
bound
orb
loop
aam
fiaddl
out
pop
cs
arpl
jo
les
adc
fldl
in
aad
pusha
inc
mov
or
inc
lahf
dec
cli
or
sahf
xor
fnstcw
mov
jae
jns
imul
outsl
mov
cwtl
aaa
lea
adc
adc
fsubrl
push
pop
pop
xchg
jmp
or
and
and
rcrb
adc
cmc
push
xchg
xchg
test
mov
xor
dec
pusha
mov
fs
shr
add
jne
call
in
lcall
mov
insl
movsb
loop
dec
imul
push
xor
lds
std
jp
out
push
pop
xor
popf
dec
mov
adc
or
out
insb
std
sbb
add
sub
ds
repnz
mov
sbb
incl
mov
lret
jno
idivb
inc
dec
sub
or
fprem
xlat
arpl
add
xlat
mov
ja
mov
sub
push
lret
ja
loopne
sbb
loop
stos
push
dec
mov
sbb
fists
cli
outsl
xor
ds
pushf
dec
icebp
outsl
push
clc
enter
cmp
out
xor
loope
shl
add
addl
push
out
mov
xor
push
fsubrl
lea
imulb
outsl
das
xor
ds
sub
and
ljmp
inc
and
xor
or
test
adc
add
pop
loope
and
sub
popf
and
mov
dec
fstl
push
push
pop
jge
dec
dec
and
mov
inc
sub
push
dec
inc
enter
jnp
fcmovnb
cmpsb
add
fs
or
lcall
sbb
push
mov
add
lods
adc
rorl
cmp
ljmp
iret
pushf
lret
push
push
int3
lock
and
push
or
dec
adc
mov
pop
jmp
testb
not
cmp
and
push
je
mov
mov
inc
jecxz
pop
fistl
jmp
sub
mov
daa
sbb
lret
push
fidivrs
loope
into
ja
pop
push
fistpll
jnp
xchg
mov
bound
xchg
mov
fwait
mov
lret
xlat
fisubs
pop
pop
lods
iret
mov
sub
bound
inc
int
aas
subb
xor
inc
clc
or
xlat
cmp
js
inc
scas
and
call
dec
icebp
sub
mov
dec
or
push
xor
xor
cwtl
adc
adc
pop
and
fdiv
sbb
iret
xor
xor
roll
xor
sbb
or
jae
sbb
orl
mov
bound
pop
add
xchg
call
in
nop
std
cltd
push
je
jns
test
push
and
dec
cmp
inc
jne
xchg
out
jno
adc
inc
xchg
push
jae
add
and
test
jno
aaa
sti
aad
mov
lcall
pop
aaa
subl
je
in
dec
int3
mov
pop
fisttpll
popf
mov
lea
xor
loope
xor
outsb
sbb
cmp
test
outsb
jne
dec
std
cmp
iret
and
push
ss
mov
pushf
and
jg
das
outsl
scas
or
imul
subb
push
sub
std
icebp
repnz
push
push
pop
inc
fwait
adc
out
divb
dec
lcall
jne
mul
push
cli
xor
test
mov
xchg
lds
ja
sub
mov
arpl
fildl
mov
cwtl
push
sub
js
in
cmpsl
fistps
dec
add
rcr
sbb
dec
xchg
iret
lock
in
cmp
loope
iret
std
movsb
mov
adc
push
aaa
sub
pusha
push
arpl
leave
test
sub
fsubs
mov
data16
or
enter
aam
jae
xchg
mov
xchg
leave
mov
mov
ljmp
and
jno
insl
pop
int
or
push
nop
sub
stc
hlt
inc
or
fisttpl
outsl
mov
or
add
adc
jmp
jge
sbb
sarl
jno
push
movntps
jecxz
es
and
mov
jnp
jle
pop
xchg
pop
push
xor
cmc
mov
out
lret
mov
adc
repz
inc
test
jle
lds
lret
inc
and
adc
orl
mov
xor
loopne
mov
daa
mov
je
cmp
pop
inc
movsl
inc
push
test
cmp
pop
and
call
xor
sbb
scas
or
adc
add
sbb
sub
fimuls
add
pop
pop
and
stc
xchg
and
sub
sub
pop
adc
pop
jle
or
sarb
and
mov
ret
arpl
push
mov
add
lock
jb
aas
popa
xor
ja
ret
jp
mov
ret
es
pop
cmpsl
scas
aam
insb
pop
push
mov
push
cwtl
pop
lock
push
adc
inc
pop
mov
ror
mov
pop
or
popf
sub
sbb
nop
pusha
movsl
ret
arpl
inc
fucom
test
xchg
mov
push
add
cmpsl
mov
mov
pop
lret
outsb
mov
inc
xchg
xor
mov
mov
mov
xlat
or
cmp
cmp
cmp
push
movsb
pop
inc
imul
leave
movsl
xor
pop
pop
aaa
mov
lahf
fdivrp
cmc
jne
cwtl
stos
pusha
nop
pop
mull
jge
lods
cltd
inc
pop
aam
mov
popf
jecxz
jne
sbb
sub
std
je
in
inc
push
pop
xchg
push
lret
sbbl
push
sub
cld
call
cmp
cmpsb
lock
sbb
dec
fnsave
fistps
dec
data16
jmp
aas
cmp
fadds
pop
jb
fs
stos
dec
shrb
jo
lods
or
sbb
or
out
push
lods
cmpl
outsl
cwtl
cmp
jno
ffree
aaa
fistpl
mov
sub
cmp
inc
test
fdivrs
adc
daa
fisubrl
sub
mov
sub
cmpsb
or
in
scas
push
orl
inc
mov
lret
or
ljmp
push
mov
add
imul
or
mov
xorl
mov
mov
mov
cmp
jg
mov
push
mov
test
mov
sarb
push
sbb
cwtl
inc
or
inc
ret
mov
scas
mov
fwait
jb
pusha
imul
or
les
mov
mov
es
xchg
jmp
xlat
ret
mov
mov
jns
cmovne
lret
mov
pop
fs
icebp
push
out
nop
xchg
leave
pop
or
or
dec
js
mov
and
test
pop
pop
jmp
adc
push
in
cmp
cmpsl
pushf
cmpsb
cld
cmp
aam
cwtl
and
fbld
mov
icebp
sbb
loop
sbb
test
and
jecxz
jb
inc
pop
cli
mov
out
dec
sbb
adc
pop
ljmp
addr16
insb
cmp
sbb
ds
and
mov
fisttpl
or
pop
pop
scas
test
in
add
xor
mov
xchg
or
adc
cmp
sbb
or
xchg
hlt
int3
nop
xchg
shll
mov
or
xchg
imul
inc
call
pusha
mov
stos
add
mov
loopne
sub
cmp
mov
sbb
leave
push
hlt
xchg
pushf
leave
push
andb
and
add
sub
add
push
jae
dec
outsl
cmp
nop
add
mov
mov
in
xlat
pushf
mov
inc
push
xchg
dec
mov
mov
jb
clc
into
aad
xchg
leave
inc
fs
dec
scas
xlat
pusha
push
adc
out
add
push
xor
call
or
inc
inc
jl
dec
shl
mov
pop
insl
insb
aas
pop
popf
add
xor
xor
ljmp
es
push
mov
iret
push
pop
shrl
or
lods
fsubrl
leave
dec
aaa
xor
fmul
jns
adc
gs
fs
andl
xor
adc
mov
add
outsb
xor
xor
add
roll
jg
out
dec
adc
scas
inc
in
add
pop
sub
ret
scas
adc
jnp
repz
mov
cmp
movsl
popf
out
fwait
call
addr16
cmp
mov
test
andl
push
fildl
jns
cld
mov
ret
fwait
push
flds
push
jnp
mov
or
cli
fildl
mov
mov
xchg
popl
adc
inc
mov
shrb
testb
xlat
loope
jp
push
scas
aas
xchg
ds
stos
sbb
out
inc
sub
jno
loopne
lcall
sub
lcall
jp
adc
cmp
call
sarb
and
call
fistpll
cmp
xchg
push
sar
hlt
rcll
jb
and
sarl
lahf
sub
hlt
jae
mov
mov
mov
push
and
add
pop
pusha
push
out
jp
call
jg
mov
xchg
jmp
dec
inc
les
mov
lods
ret
jne
mov
adc
lds
hlt
cmp
ret
jb
pop
xor
sahf
push
push
je
and
shlb
xor
mov
jb
cld
out
cmp
rorb
mov
aad
sbb
xor
in
jnp
scas
inc
ljmp
les
mov
inc
jle
into
jno
dec
movsl
or
xor
idivl
mov
mov
cltd
push
clc
test
mov
xor
mov
inc
push
outsl
aaa
push
mov
div
ja
inc
loop
popa
jae
in
pop
lds
or
std
mov
into
mov
pop
sub
dec
xchg
adc
cli
cli
pop
and
pop
jmp
pop
push
ja
mov
jnp
xchg
dec
xlat
mov
mov
jno
jl
mov
push
call
lods
pop
or
mov
jne
loopne
pushl
bound
push
shl
cli
ficoml
adc
aam
sub
pop
cmc
push
push
and
pop
jcxz
cmp
mov
mov
sbb
pop
fldenv
dec
in
rcr
fildl
push
sub
imul
fisttps
and
scas
push
bound
pusha
and
arpl
sbb
push
int
test
scas
jge
dec
cmc
jp
mov
sti
add
xchg
mov
cli
jae
adc
das
imul
std
mov
xchg
outsl
mov
lea
lods
push
subb
push
pop
call
shrl
jo
loopne
imul
dec
mov
sbb
push
rcll
je
dec
in
pop
scas
xchg
out
outsb
in
mov
shl
movsb
sub
inc
cmp
cmp
insb
popa
stos
pop
fisubs
mov
iret
iret
adc
loopne
mov
pop
mov
std
dec
outsl
iret
rcll
loop
xor
or
das
rcrb
stos
and
inc
lods
jge
mov
mov
adc
leave
into
icebp
mov
js
sbb
js
fcoms
das
mov
mov
mov
movsl
xor
aas
and
cltd
cwtl
dec
out
dec
mov
inc
ja
pop
pop
pop
loope
aad
cmc
loopne
mov
out
loopne
mov
stc
decl
outsl
loopne
cmp
cmpsl
std
outsb
lahf
fs
push
jp
enter
xor
jns
mov
jl
mov
dec
cmp
xchg
sub
enter
pop
lret
imulb
pusha
mov
mov
outsl
je
cmpsl
pushw
xchg
in
cltd
jnp
mov
add
int3
lret
mov
xchg
loope
xchg
imul
and
cli
repnz
addb
pop
hlt
pushf
jmp
jno
push
mov
gs
popf
icebp
sbb
out
inc
jno
mov
push
adc
stos
and
les
inc
pop
xor
inc
int
or
mov
xor
rorb
out
jnp
lret
pop
push
clc
gs
push
pop
inc
outsb
int3
test
fsts
xlat
sub
or
mov
mov
inc
les
sub
icebp
mov
dec
test
outsl
jbe
mov
arpl
mov
adc
mov
outsb
and
aam
insb
mov
ds
mov
or
stc
inc
je
iret
dec
cmp
adc
adc
mov
cmp
pop
inc
imul
mov
psubusw
lahf
or
jb
inc
mov
jnp
je
int3
jp
push
pop
sub
mov
ret
pop
sub
gs
in
out
xor
gs
scas
pop
xchg
xchg
jle
ja
mov
sbb
dec
lods
sbb
lahf
in
dec
and
negb
arpl
xchg
insl
jae
fs
pop
mov
xchg
adc
enter
dec
sbb
out
repz
xchg
xor
push
inc
imul
int
stos
mull
lods
imul
adcb
pop
ret
xchg
mov
pusha
inc
sbb
popf
jo
imul
pop
add
js
imul
xor
xorb
sub
das
mov
xlat
dec
mov
cmc
push
fnstcw
pop
std
insb
mov
cmc
cmpsl
cld
xchg
sbb
xchg
add
or
mov
pop
lds
xlat
gs
add
popf
sbb
aam
push
sahf
roll
call
mov
inc
push
pop
rcl
lret
pop
scas
fdivs
in
jo
cmp
mov
stc
adc
loop
add
lea
fidivrl
mov
das
xorl
adcb
lods
icebp
pop
cmpsl
outsb
sub
mov
lcall
sub
adc
mov
int3
cmp
adc
in
cltd
push
mov
stos
xor
js
dec
inc
sub
dec
ljmp
sub
xor
inc
mov
int
pop
insl
insb
les
mov
fucomp
insb
push
jae
es
add
das
out
addr16
jecxz
and
and
jp
jns
test
adc
fidivs
js
movsl
lret
std
cs
xor
repz
aam
lret
xlat
xorl
sub
loope
aam
xchg
scas
sahf
mov
cld
sti
fwait
cs
enter
in
cmp
jnp
fdivrs
cmpb
xchg
out
push
rorb
pop
mov
inc
xchg
in
flds
into
shrl
popf
sti
dec
es
test
cmpsl
pusha
mov
nopl
test
mov
jge
mov
sbb
cmp
or
cmpsl
mov
fildll
inc
mov
pop
test
test
daa
xor
in
lret
sub
sbbl
cmc
shl
imul
cld
into
and
inc
dec
cmpsl
das
jg
mov
testl
jae,pt
xor
enter
js
rcll
adcl
scas
in
sarb
jno
jmp
push
cld
inc
enter
stos
mov
lret
sub
xchg
inc
test
cld
adc
and
pop
imul
out
fldenv
rcll
clc
addr16
cmp
or
mov
mov
dec
cli
lds
leave
sbb
outsb
mov
jne
mov
addl
inc
enter
fcomps
push
sub
scas
push
sub
jg
xchg
fildl
mov
jbe
mov
insl
cli
pop
aas
jb
outsl
fmull
pop
sbb
mull
sub
mov
enter
loope
insl
cmpsb
xor
jb
xchg
pop
lcall
cwtl
pushf
sub
and
in
lods
fsubrl
pop
sub
jns
sbb
insl
in
pop
pop
dec
pop
fldt
adc
ficompl
pop
xor
in
idivb
jp
out
rcr
stos
mov
push
je
jns
cmp
setae
adc
insl
push
mull
cmp
pusha
xor
pushf
push
cmp
fwait
outsb
scas
push
insl
mov
add
data16
pusha
adc
movsl
test
cld
orb
sub
push
orb
dec
je
sahf
das
into
fdivs
bound
dec
push
xchg
and
jne
xchg
inc
sub
ss
stos
in
aam
mov
adc
jo
mov
sarl
jns
inc
sub
addb
sbb
pop
sbb
lea
shl
fsts
or
in
gs
lcall
pop
add
and
mov
ret
stc
test
pop
rorl
movsb
adc
andl
mov
rcrl
push
dec
mov
cmp
daa
into
imul
add
mov
push
mov
cmpsl
xor
out
xchg
cmc
mov
dec
sbbb
cmc
test
jae
push
dec
xor
add
push
xor
mov
test
sub
cmpsb
or
jmp
daa
pop
lret
adcb
lea
test
push
fsubr
cmp
andb
xchg
sti
aad
aaa
into
movsb
cmpl
pop
movsb
iret
jnp
xlat
in
mov
sbb
lret
push
jl
cmp
cmc
mov
lret
adc
sbb
xor
aas
xchg
cli
and
out
jecxz
test
jp
and
mov
mov
adc
mov
nop
dec
dec
inc
mov
or
xor
push
test
push
jle
sbb
dec
gs
inc
or
mov
cli
rcr
sbb
mov
ret
jl
ficompl
push
in
lds
cmp
test
sahf
rolb
inc
fstps
sub
or
mov
pushf
jle
jo
mov
and
das
aad
and
or
inc
xchg
dec
sub
fdiv
push
adc
enter
sti
mov
fimull
popa
lret
lret
bound
lods
pop
xor
cmc
sahf
shrb
inc
test
jp
push
pop
push
ljmp
mov
or
jae
adc
mov
in
ds
mov
push
test
jno
cmpsl
xor
pop
sbb
movsb
cmp
pop
shrl
cs
fld1
inc
inc
mov
aad
lcall
fwait
mov
and
xlat
sub
xor
sarb
cmp
add
jle
test
jns
adc
aaa
out
stc
add
sbb
testl
inc
jge
inc
pop
test
sbb
orb
and
cmpsb
sub
dec
mov
ljmp
sub
daa
repz
cmpsb
fadds
ror
add
int3
mov
dec
int
dec
sbb
int
shl
rcrb
cltd
insb
es
fsubs
pop
hlt
int3
or
sahf
rcrl
cmp
pusha
add
test
mov
xor
dec
sbb
shrb
add
into
push
lock
xchg
or
popf
pop
adc
rorb
or
mov
sub
fs
pop
loop
and
jecxz
decb
xchg
push
inc
loope
enter
adc
push
lcall
daa
dec
mov
and
cmpsl
mov
loopne
push
or
adc
mov
pop
pusha
pop
push
loopne
or
mov
enter
mov
mov
dec
push
pusha
ds
loopne
xor
or
stos
push
movsl
sbb
gs
imul
insl
inc
cmp
sub
jg
sbb
shlb
xchg
cmp
stos
mov
jnp
cltd
outsb
enter
mov
or
inc
inc
subb
mov
pop
xlat
imul
not
ret
cmp
mov
aad
adc
jge
cs
mov
pushf
ja
adc
repnz
pusha
cmp
nop
iret
inc
icebp
sub
arpl
lea
jno
fsubr
jmp
lcall
dec
sub
inc
test
icebp
mul
insb
or
out
loopne
test
idivb
imul
ret
out
shl
xchg
call
mulb
push
fmuls
insb
stc
lret
mov
mov
mov
pop
mov
adc
lahf
jb
outsb
fucomip
ret
fsubrs
ret
daa
or
je
loopne
test
in
jp
je
leave
cmpsl
and
fistps
push
jmp
aas
pushf
and
in
add
rcrl
xor
sub
jae
sub
mov
inc
cld
inc
xchg
xchg
dec
mov
jge
jge
adc
dec
ljmp
or
sti
clc
fucom
add
sbb
add
enter
cmc
pushf
mov
dec
and
shl
test
xchg
addl
out
cmp
inc
mov
stos
lock
call
notb
movsb
ljmp
or
std
out
test
mov
jecxz
std
js
rcr
or
ss
std
inc
in
cmp
cmp
pop
aas
xchg
sbb
mov
mov
inc
and
cmpsb
push
or
fadd
adc
mov
loope
into
ret
addb
in
xor
cmpsl
cwtl
aaa
mov
fbstp
pop
push
dec
push
fdivrs
inc
ja
repz
and
in
rcrb
sarb
adc
inc
gs
lahf
mov
outsb
imul
inc
addr16
int
test
iret
cs
add
mov
stos
pop
dec
outsl
test
lea
jecxz
add
inc
notb
aaa
jmp
push
mov
xchg
cmc
adc
lds
push
shl
and
xchg
and
das
test
mov
jne
shr
pop
inc
pop
fists
cmp
push
add
mov
in
fmuls
nop
ret
out
lahf
mov
es
pop
das
dec
out
int3
outsl
dec
stc
lods
pop
leave
mov
setl
push
xchg
mov
ds
imul
cmpsl
fstp
lds
out
scas
sub
jp
aaa
xchg
mov
orl
sbb
mov
mov
insb
cwtl
popa
scas
xchg
dec
stos
dec
push
cmp
jo
outsb
test
popa
int
add
and
cmp
pop
xchg
jb
cli
mov
cwtl
cs
into
adc
sbb
lcall
mov
pop
mov
adcb
lock
xor
inc
je
js
push
gs
sub
sbb
mov
int3
imulb
jae
and
sbb
mov
imul
ret
out
dec
fwait
add
cmp
test
cmp
jo
addr16
mov
dec
stos
fists
mov
bound
dec
inc
clc
outsl
lret
add
xabort
dec
lods
push
xorb
test
hlt
xchg
or
gs
jnp
push
and
arpl
out
cwtl
rol
jecxz
adc
inc
shrb
or
imul
ss
jecxz
daa
or
into
ficoms
pop
imul
add
mov
mov
outsb
call
adc
repz
leave
pusha
mov
movsb
push
rorb
mov
push
movsl
loop
jl
scas
mov
or
xchg
xlat
xchg
sbb
inc
mov
sbb
jne
lods
pop
sbb
inc
cltd
push
ja
getsec
mov
sbb
inc
sub
cmp
lods
ds
cmp
mov
repnz
dec
fwait
addr16
and
sbb
jno
mov
xlat
roll
cli
cli
lods
push
mov
mov
jp
pusha
push
or
xchg
mov
cmp
aam
mov
pop
dec
daa
and
stos
jge
out
add
leave
out
mov
pusha
jecxz
fdivl
sub
or
jle
rorb
inc
sbb
lcall
pop
lea
push
shrl
mov
js
test
mov
lods
adc
ret
adc
dec
xchg
cmpsb
icebp
jl
aam
cmp
sbb
or
loop
jae
adc
xchg
jecxz
cli
ret
pop
out
movl
cwtl
cmpl
fistl
les
fdivr
sbb
jb
clc
ds
out
test
test
shll
or
sbb
cmp
mov
mov
es
or
inc
daa
xor
nop
popa
cwtl
insb
xchg
sbb
rorl
sub
pop
icebp
mov
in
dec
cltd
icebp
or
aad
mov
mov
sahf
loope
bound
xchg
cmpsb
repnz
or
inc
add
stos
xor
pop
cmp
jnp
and
stc
and
pop
jg
pop
inc
ret
pop
xchg
jle
jo
inc
out
xor
ljmp
js
dec
fiaddl
lret
and
int3
fadd
dec
es
shll
lock
test
jmp
jecxz
sahf
out
arpl
add
dec
mov
dec
fwait
idivb
cmp
add
stos
adc
xchg
cld
mov
lea
aas
cmp
movsb
dec
cmp
sbb
xor
or
outsb
and
std
jb
out
lock
add
sti
sbb
es
test
inc
xor
cs
loop
inc
das
mov
push
pop
add
or
add
dec
adc
pusha
push
fld
inc
outsl
inc
cmp
add
popa
adc
push
or
nop
cmp
push
es
push
pop
dec
inc
push
xor
xchg
test
add
addr16
push
imul
pop
xlat
xor
or
mov
jno
mov
xchg
jbe
xor
mov
push
pop
add
fdivrl
xchg
and
loope
cmp
pop
push
in
push
mov
or
shl
lcall
xchg
mov
xor
data16
and
add
cltd
sub
or
rorb
outsb
arpl
sub
gs
arpl
mov
call
pop
inc
jb
scas
mov
pop
lock
lahf
adc
ds
pop
das
mov
arpl
mov
mov
push
movsb
xor
in
loope
and
sbb
iret
sbb
sbb
add
mov
pop
push
jns
ss
js
or
mov
dec
jp
lret
mov
xlat
jb
stos
arpl
insl
ljmp
and
pop
or
shl
xor
mov
hlt
cmp
mov
mov
jl
jae
mov
in
add
mov
and
cli
push
cmp
add
stos
fucom
adc
pop
push
int3
mov
mov
xchg
cmpsb
out
cmp
sub
jno
or
stc
mov
rclb
sub
push
loope
lret
sbb
mov
je
mov
and
mov
sbb
ret
negl
ljmp
pop
jecxz
jns
jb
or
mov
and
movsb
inc
prefetch
jne
jge
dec
pop
mov
lds
sbb
testb
sub
out
ljmp
inc
sub
jmp
stc
iret
je
cmp
mov
jns
rol
add
jo
or
jb
mov
push
add
sub
sub
mov
and
cmp
mov
mov
jecxz
lods
pop
adc
jg
sti
cmp
cli
cmpsl
and
das
lcall
pop
imul
das
insb
xor
xchg
xchg
xchg
nop
in
inc
cmp
sub
sub
mov
mov
outsl
bound
stos
cmp
sbb
lret
in
cs
fimuls
push
outsb
sub
insl
inc
mov
pushf
lods
cmp
jmp
and
stos
sarl
outsb
mov
cmp
push
jb
pushf
adc
aaa
mov
lcall
aas
add
and
dec
aad
jl
addl
cmpsl
mov
mov
fidivs
cs
sbb
adc
push
cmp
stc
loope
cwtl
mov
mov
lret
call
mov
aam
jbe
enter
pop
fcoml
sub
push
jl
test
mov
das
das
sbb
cltd
xor
repnz
add
sarl
xchg
scas
jg
push
mov
push
pop
bound
jo
cld
mov
jp
xchg
mov
iret
clc
jbe
repz
sarb
loop
mov
sti
shr
rolb
das
scas
push
shll
add
imul
sub
cmpsl
mov
xor
nop
outsl
loope
xchg
fadd
mov
in
in
mov
pop
add
dec
sbb
dec
or
sti
test
jmp
xlat
or
xchg
lea
pushf
mov
push
test
lds
cmp
in
rcrl
cmp
ret
scas
and
out
or
test
subl
shrw
cmp
mov
mov
sahf
fsub
mov
repz
out
mov
mov
iret
pushf
inc
sub
inc
orb
mov
lret
bound
testl
scas
int
push
fstps
pop
les
cmp
testb
mov
pop
arpl
cmp
pop
icebp
sbb
xchg
add
aad
clc
fnstsw
and
out
cld
iret
inc
sub
das
stos
mov
loope
and
js
inc
and
cmp
cbtw
lock
movsl
cs
adc
dec
mov
xchg
push
popa
andl
push
jnp
adc
mov
test
lods
fucom
ds
xor
jp
mov
inc
cs
add
mulb
ret
outsb
data16
xchg
sub
xchg
dec
cmp
ficomps
stos
pop
mov
add
lods
xchg
shl
in
in
shr
mov
mov
dec
add
or
adc
mov
push
xchg
pop
js
cmp
pop
out
and
aad
test
jbe
xlat
add
in
test
mov
pop
dec
insl
jne
cld
push
pop
adc
shll
das
and
push
flds
aam
add
pop
mov
sahf
push
aas
aad
lcall
adc
cld
adc
std
add
and
cld
jb
hlt
mov
lods
test
icebp
fwait
pop
repnz
xor
or
mov
xorb
loope
xor
imul
inc
jbe
fwait
push
or
movsb
mov
fnstenv
mov
dec
pop
dec
jl
fsubl
mov
imul
mov
fwait
mov
pop
addb
mov
xchg
mov
push
out
sti
mov
rcll
ja
jmp
jecxz
test
xchg
pop
gs
cmp
add
scas
mov
add
jmp
scas
clc
adc
test
hlt
cmp
cmp
or
insb
loope
or
mov
fwait
mov
dec
sub
stos
sub
aad
loopne
mov
out
pop
mov
aaa
push
iret
push
shrb
cwtl
push
xor
xor
int
xor
jne
imul
jge
pop
in
and
call
sub
mulb
movsl
lahf
stc
and
dec
mov
mov
pop
sbb
push
sbb
push
sub
push
inc
into
mov
inc
adc
inc
jmp
jg
hlt
test
leave
sub
sbb
sbb
insl
pop
dec
sub
sub
pushf
push
mov
xchg
sbb
lds
mov
push
scas
pushf
adcb
sti
gs
mov
mov
mov
jno
mov
and
jmp
sbb
push
mov
in
bound
jmp
loopne
int
movsb
add
dec
repz
movsl
std
push
mov
aas
inc
sub
mov
lea
loopne
test
pusha
test
mov
cs
outsb
push
lock
out
push
out
cmp
adc
sbb
rolb
pop
pop
mov
stos
insl
jp
push
mov
mov
dec
jae
xor
ffree
push
lods
adc
in
pop
pushf
xor
popa
iret
dec
leave
enter
or
cmp
lods
roll
dec
stos
ret
mov
rclb
ja
in
cld
and
lock
jecxz
push
mov
sbb
ss
fcoms
hlt
ret
sub
lcall
push
push
add
pop
xchg
sbb
jecxz
adc
jo
in
pop
mov
mov
pop
cmp
and
xor
repz
cmp
ss
or
xor
push
rclb
cld
jl
xchg
push
mov
xchg
or
jb
add
sub
inc
test
cmp
pop
out
push
sbb
ss
pxor
mov
stos
adcb
cld
xorb
rcrb
mov
cmc
shlb
adcl
push
xor
sub
mov
movsb
adc
pop
pop
xlat
outsl
in
jle
cli
and
mov
call
and
dec
and
push
jmp
lods
cmp
push
insl
ss
int
mov
pop
stc
ljmp
test
mov
clc
sub
or
shl
and
lods
add
test
mov
scas
pop
push
push
add
imul
cmp
faddl
fnstenv
lret
adc
sub
inc
jg
pop
cmp
notl
dec
sub
loope
loope
mov
dec
fsubl
xchg
sbb
hlt
or
mov
cmp
jo
xchg
sarb
cs
cmp
test
fldenv
fistpll
mov
mov
mov
aas
jae
mov
cmp
ss
je
ficompl
mov
inc
cmp
aas
outsb
jne
lretw
cltd
addr16
fdivrl
mov
jg
rclb
rcrb
je
cmp
sub
bound
push
sub
cmp
jmp
adc
or
cmp
ja
xor
inc
sbb
sbb
add
nop
xor
je
jae
sub
sub
cmc
shl
arpl
push
out
icebp
inc
fidivrs
icebp
dec
mov
lock
xor
popf
dec
aam
jo
push
out
in
popa
sbb
mov
test
sbb
sarl
pop
dec
push
jne
jge
pop
dec
xchg
xchg
push
ret
lods
cmp
mov
sbb
pop
int3
repz
add
xor
clc
loop
push
push
addl
hlt
xchg
sub
movsb
mull
notb
mov
mov
popl
pushl
out
ret
push
imulb
push
or
dec
sub
xchg
and
cmpsb
test
pusha
repz
and
loop
out
cli
adc
popf
adc
into
jecxz
adc
push
jne
mov
dec
ret
or
call
xor
jl
int
pusha
nop
std
out
lods
cmp
sarb
std
popa
sub
shr
and
sbb
jnp
stc
arpl
adcb
cmp
ljmp
push
pusha
out
mov
adc
shll
nop
jle
xchg
sub
clc
mov
inc
orl
jmp
mov
cmp
rcll
mov
adc
sarl
gs
in
je
les
pop
gs
sbbb
and
ds
xor
mov
mov
pushf
cmpb
lods
jnp
inc
lea
bound
lods
cs
add
adc
js
mov
sahf
pop
insl
xor
jae
xchg
mov
ds
in
cmpsb
mov
lds
sbb
lahf
mov
clc
cmp
icebp
push
enter
sti
cmpsb
out
imul
mov
mov
cmp
sub
xchg
cld
sbb
fidivrs
xchg
into
add
cmp
hlt
movsl
incb
mov
jle
outsb
cmpsb
xchg
push
rcll
rorl
and
or
in
jmp
mov
movsl
xor
in
cmpsl
jbe
cmc
xor
mov
mov
test
in
or
ret
pop
xchg
cmp
not
jnp
sti
push
iretw
gs
mov
mov
fs
addb
aas
rcrb
inc
aas
sbb
arpl
inc
andl
pop
lcall
test
popa
mov
or
cli
mov
popa
popa
sbb
cmp
push
adc
lds
fstps
mov
lahf
movsb
int
pop
mov
mov
call
arpl
adc
or
addl
jle
aad
jp
into
bound
mov
dec
jbe,pn
inc
jl
jb
in
sub
xchg
dec
insb
jg
cmp
mov
jmp
push
jge
xor
and
mov
mov
lods
hlt
int
or
testb
outsb
lock
out
or
mov
and
mov
push
cmpsb
lock
xchg
and
cmp
jbe
sub
je
ja
add
and
xchg
jmp
jno
sub
pop
adc
leave
decl
sbb
mov
inc
lahf
leave
sbb
xor
ds
lods
not
inc
adc
rcl
icebp
dec
xlat
aaa
sti
repnz
pop
cwtl
or
sbb
int
inc
js
ja
pushf
int3
xlat
std
aas
shr
xor
inc
loopne
shlb
mov
pop
jne
in
sahf
and
mov
adc
mov
test
fmul
into
out
cld
mov
popa
push
out
sti
xor
repz
cli
inc
adc
cmp
dec
movsb
sahf
mov
add
cmp
jno
pop
xor
jnp
inc
ret
push
clc
insb
mov
cmc
aad
int
push
adc
shlb
mov
outsb
xchg
mov
pop
pop
stos
mov
test
out
fmull
fwait
cmp
testb
pushf
in
jmp
pop
movsb
push
dec
int
shlb
aas
je
hlt
xchg
pop
pop
pop
test
mov
aas
test
and
setle
sbb
fnstenv
inc
pop
push
rorb
mov
pop
pop
shlb
mov
lock
incl
incl
mov
sbb
fisubrs
lock
data16
test
mov
cltd
push
hlt
test
add
pushf
cmc
sahf
jg
pushf
dec
or
adc
lods
lock
shlb
xor
sub
jno
out
adc
jbe
pop
stos
lods
sub
inc
lds
jns
call
adc
popa
xchg
xor
fwait
pop
jae
es
lahf
push
cmc
mov
les
mov
rorb
jno
push
stos
ficompl
or
lods
sti
mov
testb
inc
push
dec
cmp
sbb
add
sbb
mov
or
rcl
mov
cltd
sbb
sub
bound
gs
or
push
mov
out
mov
mov
ds
fistps
fwait
shll
push
decb
rorl
mov
lods
in
jg
jmp
pop
mov
push
stc
inc
fcmovb
mov
push
pop
push
aad
mov
repz
mov
mov
vpunpcklwd
movsl
shrl
loopne
lret
aad
push
sbb
icebp
add
mov
sahf
mov
xchg
pop
mov
push
addb
sbb
imul
lods
push
adc
push
mov
inc
jnp
mov
shlb
sbb
xor
clc
mov
pop
std
fs
pop
lret
inc
movsl
cmp
cmp
ficoms
call
cmc
mov
movsl
mov
in
daa
or
stos
sbb
popa
add
scas
xor
fld
sub
leave
cld
nop
sbb
sbbl
std
inc
xchg
inc
inc
iret
loop
rcr
addr16
push
xor
push
jbe
sbb
mov
imul
jne
out
sbb
and
sbb
xchg
mov
push
call
ret
and
mov
mov
call
ret
sbb
pop
std
pusha
dec
sbb
mov
mov
adcl
xchg
ja
lds
mov
ljmp
addr16
mov
dec
mov
or
mov
jo
and
hlt
nop
test
mov
cmpsb
lods
out
mov
pusha
cvtps2pi
icebp
xor
add
adc
cmp
xchg
jae
jo
mov
data16
xchg
cmc
sub
sahf
cmp
xor
fldl
inc
adc
mov
fistl
jb
insl
pop
xchg
jbe
std
into
stos
jmp
stos
aam
adc
push
jl
add
cmp
push
cmp
xchg
xchg
dec
das
mov
cmpsl
sbb
imulb
mov
popf
mov
int3
shlb
fistpll
adc
xor
pop
jae
scas
or
jbe
popl
sbb
lahf
aas
pusha
inc
repnz
sub
push
int3
jnp
inc
push
xchg
sbb
into
pop
insb
outsb
das
mov
mov
and
into
aam
mov
cmpsb
test
add
mov
or
shll
jmp
xchg
jle
jne
pop
scas
or
mov
inc
xchg
std
insl
aad
int
in
les
in
popa
pop
add
or
or
movsl
clc
cmp
mov
pop
aam
icebp
dec
inc
sbb
push
daa
fidivs
lock
push
inc
popf
jae
sbb
loopne
scas
inc
and
add
jp
mov
pop
lcall
fisubs
mov
imul
les
xor
pop
xor
inc
cmp
mov
call
mov
cmp
dec
lds
pop
in
dec
repz
sub
pop
lods
sar
jmp
sub
mov
pop
adc
int
xor
lods
cmp
jns
int3
mov
loope
ficoms
sbb
cltd
mov
imulb
lcall
hlt
cwtl
adc
aas
cmpsl
sbb
incb
mov
mov
imul
rclb
nop
fsubrl
sub
and
mull
mov
jge
loope
and
or
sti
popl
jbe
xor
push
push
add
mov
ret
sbb
daa
mov
scas
shrb
inc
jge
mov
movsb
mov
clc
push
loop
or
mov
mov
or
jnp
sub
pop
rcll
jp
dec
pop
dec
jmp
int3
push
lock
push
test
pop
mov
mov
loopne
mov
imul
mov
out
pop
cltd
sbbb
out
add
in
xor
pushf
mov
das
rol
jnp
mov
ret
and
mov
jecxz
lret
in
jge
lds
cmp
dec
cwtl
xchg
je
cmp
jmp
mov
cmp
add
mov
jg
sub
lahf
jb
int3
cltd
ret
cmp
push
stos
xor
dec
fildll
and
out
xchg
insl
outsl
shr
push
mov
jno
dec
nop
cltd
and
enter
lds
fcmovnb
mov
mov
cmpl
insb
jae
add
sbb
cmp
repz
movsl
mov
sbb
bound
jnp
fcos
movsb
xchg
bound
movsl
push
in
or
gs
xchg
pop
cmpsb
jecxz
call
into
dec
xor
js
jno
out
insl
jle
ret
in
bound
push
ret
cmpsw
push
jb
adc
aam
insl
shll
fwait
aaa
cmp
pop
dec
adc
daa
dec
add
push
out
bound
movsb
xor
js
inc
xchg
and
fs
loopne
insl
inc
inc
ret
adc
pop
mov
mov
cld
inc
loop
mov
movl
jp
xor
push
es
fstl
cmpsl
fnstsw
jmp
test
xchg
test
xor
pop
xor
sub
cmp
mov
scas
mov
cmpsb
shrb
sub
sbb
repz
sbb
stos
iret
mov
cld
push
add
add
adc
rolb
stc
or
mov
sbb
scas
mov
xlat
jnp
sub
cmp
push
ror
xchg
subl
xchg
mov
in
sub
mov
adc
push
push
mov
xor
lret
cmc
xor
adc
inc
test
inc
jnp
mov
xchg
clc
addb
xchg
or
scas
xlat
jecxz
pop
cmp
loope
out
xor
sbb
mov
inc
adc
outsl
inc
or
and
sbb
arpl
faddl
data16
cmc
cltd
cld
adc
and
hlt
out
xchg
test
fbstp
stos
sub
pop
add
mov
mov
out
fisubl
ja
lcall
cli
cmpsl
cltd
jg
into
push
add
mov
and
mov
mov
sahf
xchg
pop
jl
loopne
mov
clc
scas
pop
push
fs
mov
adc
dec
lock
add
mov
jg
cmp
pop
fwait
pop
jo
pop
adc
cwtl
call
jp
incb
xchg
add
pop
cltd
sub
inc
bound
jp
pusha
shr
sub
xchg
push
into
sub
push
cmpsb
mov
pop
testb
cs
movsb
sub
ror
mov
xchg
xchg
sub
cmp
mov
add
mov
push
mov
mov
das
das
or
adc
shlb
sub
dec
stos
nop
sarl
pushf
cmp
xor
pop
jne
adc
mov
scas
lods
clc
add
leave
mov
out
xchg
je
loope
xchg
cmp
mov
cmp
pop
pop
popa
jbe
jg
nop
lret
std
add
insl
jl
nop
xor
popf
pop
stos
adc
mov
gs
add
pop
cmp
pop
cmp
add
sbb
ljmp
es
fsts
sbb
icebp
cmp
jns
outsb
mov
inc
and
sbb
push
inc
lock
fwait
lahf
or
jo
outsl
ja
bound
lret
cmpl
lahf
push
mov
push
andb
xchg
fpatan
jmp
aas
test
ret
mov
imul
mov
push
int
test
xchg
sub
mov
dec
es
int
stos
addl
sub
rcll
pop
add
shll
fldt
sahf
jne
inc
call
xor
pop
outsb
aad
sbb
inc
sti
test
dec
sbb
sbb
lds
int3
lret
mov
and
outsl
in
loope
push
xchg
mov
mov
addl
add
push
leave
fists
rol
xchg
pop
inc
mov
out
call
cmpsl
cwtl
cmp
mov
xchg
psubb
movsl
enter
sbb
cs
lds
dec
popa
aaa
clc
pop
pop
shlb
repz
cmp
jp,pt
scas
sub
int3
jl
mov
push
aad
xchg
outsl
jp
cmpsl
je
popf
xchg
xchg
les
inc
cmp
mov
sub
dec
hlt
add
incb
shr
and
dec
addr16
jne
movl
push
pop
and
sub
add
pop
adc
imul
and
and
lcall
xchg
pop
scas
xchg
mov
gs
dec
sub
inc
push
jp
cmpsl
cmpsb
das
xorb
fnstcw
fimull
push
lahf
insb
mov
xchg
and
js
notb
bound
sub
mov
dec
out
cmpsl
jl
sub
pop
dec
mov
aam
popf
inc
lcall
push
lcall
add
and
mov
lods
fsts
pop
lcall
out
pusha
sub
jecxz
jmp
js
and
shrl
jnp
fcompl
add
sbb
or
fdivrp
dec
lret
push
nop
sbb
mov
into
daa
je
push
sub
cvttps2pi
icebp
lds
mov
addr16
jg
adc
out
call
and
fstpl
dec
int3
push
cli
pusha
mov
mov
mov
mulb
cltd
loopne
push
xlat
aad
fbld
push
sbb
pop
push
add
xlat
lcall
in
cltd
dec
jo
enter
sub
cmc
or
jo
or
addr16
lds
rclb
out
or
int3
add
xchg
jne
add
push
scas
cmp
jnp
and
and
add
inc
xlat
mov
mov
lds
lret
aad
ror
xchg
jnp
popf
pop
push
cmp
adc
ds
jae
into
push
mov
les
mov
in
jp
in
rcll
rcll
cs
stc
sub
push
mov
dec
mov
ds
neg
mov
rcll
mov
pop
in
je
scas
fsubl
lcall
mov
push
popf
sbb
mov
subb
vandnpd
jae
inc
ret
xor
std
sbbb
aam
lea
push
test
out
pusha
dec
cld
ljmp
fs
iret
les
hlt
pop
sahf
inc
jb
jmp
add
xchg
xorb
cmp
loope
lods
pop
cmp
pop
mov
adc
mov
imul
xorb
repz
xchg
popa
in
pop
xor
negb
int3
lcall
ret
sbb
out
push
pop
xchg
xchg
lds
sub
lea
fwait
imulb
ret
push
ss
scas
cmp
jne
xchg
xor
out
push
mov
add
cmp
push
xchg
fwait
stos
cmp
push
mov
int3
jl
and
test
push
sbb
jecxz
pop
add
gs
mov
sbb
ja
jmp
fbld
hlt
iret
and
pop
das
je
xor
adc
xor
mov
and
xchg
hlt
je
test
mov
das
out
and
scas
js
test
xchg
out
fmull
arpl
in
or
scas
mov
je
pushf
aad
xchg
cmpsb
stos
shrb
and
and
in
stos
imul
xor
cs
into
jecxz
mov
stos
mov
pop
xchg
in
inc
cmp
movsb
adc
daa
scas
lret
cmpsb
jne
adc
mov
jbe
lahf
fiaddl
jo
movsb
push
shll
mov
push
jb
mov
shlb
lret
fdivrs
in
pop
sti
xchg
ret
push
push
and
aad
jle
push
mov
adcb
addb
inc
int3
inc
shrl
sub
in
ds
fsubr
pushf
pop
and
or
negl
mov
pop
test
inc
pop
sub
pusha
or
sbb
inc
insb
inc
outsb
cmp
or
or
sbb
push
push
lods
sarl
hlt
lret
test
mov
leave
cwtl
cs
mov
sub
pop
xchg
outsb
cmpsl
dec
rclb
call
not
addr16
roll
or
add
sarb
mov
jg
add
loopne
fwait
xor
idiv
and
in
and
cmp
mov
mov
cmpsl
xchg
push
lret
xchg
ljmp
push
js
ljmp
pop
mov
cltd
cwtl
inc
inc
adc
xlat
mov
cmpsb
jle
inc
push
adc
push
aaa
xor
les
iret
cmc
pop
mov
or
or
aaa
jp
add
clc
int3
test
movsl
jnp
gs
cli
jb
cwtl
jp
lret
or
and
loope
xchg
jp
les
inc
cmpl
inc
jecxz
aam
cld
inc
xchg
test
xor
adc
shl
jbe
dec
mov
cmp
push
fistl
int3
sarl
in
repnz
jns
inc
push
sarl
pop
dec
sahf
mov
mov
clc
add
mov
les
popa
dec
adc
cmp
mov
mov
fwait
or
or
or
stos
cmp
fimull
dec
fistpl
push
or
adc
test
pop
dec
sub
arpl
mov
jo
icebp
jb
xchg
mov
clc
pop
add
in
mov
xchg
stc
stos
cmp
adc
pop
fidivrs
test
add
pusha
rol
dec
test
push
mov
mov
pushf
ja
mov
sbb
addr16
and
enter
scas
and
mov
xor
mov
popf
hlt
pushf
inc
clc
hlt
es
data16
adc
jae
inc
movsl
je
test
repnz
les
sub
insb
ret
in
add
cld
xor
hlt
mov
mov
insl
insb
mov
sub
mov
ja
shll
mov
xchg
lods
cmp
inc
out
pop
stc
sti
dec
mov
dec
mov
mov
xchg
push
les
sti
loop
jae
xchg
pushf
pop
movsb
adcb
xchg
dec
stc
cld
je
loopne
clc
jle
pop
or
js
mov
adc
mov
ret
mov
btrl
sti
jg
cmpsl
lods
roll
sub
pop
xchg
daa
fisttps
mov
xchg
sub
mov
xor
daa
cmp
insb
mov
mov
inc
data16
gs
pop
outsl
cs
jne
je
insl
push
pop
push
or
subb
xchg
mov
and
dec
pop
jo
mov
cmpb
nop
mov
fsub
iret
pop
jb
push
or
jg
scas
iret
xor
sbb
mov
push
mov
mov
iret
mov
push
pop
mov
fwait
stos
jg
push
jecxz
dec
scas
stc
push
mov
or
sbb
inc
decl
dec
shlb
js
jae
cmp
dec
cmpl
inc
lock
sahf
movsb
movsb
jg
sbb
cmp
push
pop
adc
flds
fstps
sub
in
daa
or
andb
fcomip
daa
mov
lods
cmp
pop
sub
std
sbb
pop
lea
push
repz
subb
push
mov
or
nop
pop
mov
xchg
add
movsl
push
andb
fdivrp
mov
test
cltd
in
imull
mov
mov
jnp
mov
push
sub
insb
gs
fmull
pop
movsb
shl
and
pop
push
cmpsb
repz
test
repnz
loop
push
call
aas
dec
sub
push
and
das
pop
sbb
cltd
fbld
stos
mull
test
pop
mov
mov
jg
lods
and
ss
mov
clc
dec
cltd
add
jl
cmc
jmp
sbb
test
cmc
push
cmp
push
cmpsb
xchg
mov
cmp
outsb
cli
stc
js
cmpsb
xor
jp
add
lret
repz
push
mov
dec
mov
mov
mov
dec
xchg
xor
sbb
mov
sub
inc
repz
push
lahf
mov
pop
negb
cmpsb
outsl
iret
push
ja
xchg
inc
mov
cld
sub
inc
addr16
push
mov
sub
cld
std
rcll
inc
dec
les
hlt
ror
lds
pop
rol
and
push
sbb
xchg
cmp
jb
add
lock
std
ja
push
cs
mov
sbb
inc
pop
bound
pop
test
inc
add
shll
loopne
int3
or
pop
push
mov
fdivs
push
and
push
aam
imul
cwtl
imul
hlt
out
add
stc
paddb
sarb
sub
aad
xchg
or
ret
je
cmpsl
cmp
inc
adcb
cmpsl
mov
push
pop
add
mov
scas
stos
imul
lds
in
mov
mov
cmp
lods
dec
or
lock
or
fstl
rcr
jecxz
cmp
pushf
test
adc
insl
xchg
mov
fs
xor
pop
add
push
cwtl
shl
enter
and
incb
mov
data16
jb
push
divb
mov
iret
sub
and
pop
inc
imul
jl
add
mov
shrl
out
pop
sahf
and
mov
pop
mov
xchg
push
mov
fcmovb
push
aaa
addb
fmul
pop
test
popa
lock
inc
mov
lahf
mov
mov
sub
push
and
xchg
clc
leave
sbb
jge
inc
pop
hlt
insb
movzbl
stos
lods
outsb
or
and
mov
or
neg
dec
cwtl
pushf
mov
sbb
in
xchg
sbb
repz
mov
mov
mov
rolb
sub
mov
pop
sbb
jecxz
jbe
bound
test
shrb
pop
enter
add
dec
xor
dec
fwait
jmp
shlb
pop
dec
add
loope
add
and
aas
mov
shll
repnz
push
gs
mov
xchg
add
xor
sub
pop
fstpt
pop
lcall
repnz
and
inc
shrb
push
fldl
xor
outsl
fstl
xor
push
aam
subb
imulb
sub
sbb
mov
lahf
cld
imul
mov
inc
gs
pop
mov
addb
fdivs
out
test
mov
icebp
fld
jecxz
dec
into
or
fistpl
or
cltd
xchg
push
clc
lds
mov
pop
jg
adc
sarb
fnstsw
les
cmp
add
xor
les
inc
mov
std
fldl
imul
sbb
add
lods
clc
and
push
fmuls
adc
cmp
and
inc
out
js
into
push
xor
mov
loopne,pt
sub
xlat
mov
or
jb
imul
insb
push
movsb
xchg
pop
repnz
sbb
dec
xorl
lea
repnz
repnz
fistl
mov
add
mov
adc
into
lcall
lods
cmp
pop
lcall
sbb
pop
test
push
mov
xchg
cwtl
in
fdivrl
insb
scas
rclb
mov
pop
nop
sub
lcall
stos
add
sbb
xchg
idiv
push
cltd
and
cmp
or
int
jae
sbb
cld
push
jae
fcomps
std
repnz
test
pop
enter
sarb
or
dec
bnd
loope
arpl
in
mov
mov
aad
jno
dec
jb
and
cs
mov
jecxz
adc
negb
sub
pop
ja
std
cmp
or
add
pop
mov
repz
xchg
push
clc
in
and
fwait
lret
jb
mov
or
adc
inc
and
mov
mov
scas
lahf
or
out
int
add
jmp
xchg
cmc
out
in
mov
pushl
jecxz
bnd
mov
push
or
adc
sbb
outsl
or
pushf
cld
dec
leave
adc
jb
mov
ficompl
push
mov
scas
dec
adc
int3
cmp
cmp
jbe
dec
fcmove
adc
inc
inc
jae
dec
jno
cmp
lcall
mov
lods
cmc
rorb
cmp
dec
clc
iret
mov
insb
sahf
mov
jno
xchg
xor
divb
pop
push
stos
hlt
push
sub
xor
into
dec
daa
mov
bound
addb
fistl
sarl
adc
pop
and
push
mov
call
cli
cmpsl
xchg
cmp
xor
lretw
shl
push
xchg
mov
dec
and
add
adc
lds
push
and
js
pop
arpl
data16
fldl2e
stc
pop
xor
scas
mov
pop
sbb
push
in
lret
vpmaddubsw
cmc
arpl
jno
jg
fsub
in
fwait
and
mov
or
outsb
rcr
sbb
mov
mov
push
xor
aad
jns
xor
jl
dec
xchg
add
out
push
popf
dec
lcall
adc
in
pop
lcall
fcomi
push
sbb
mov
pop
pop
ljmp
test
mov
pop
aad
leave
mov
lea
stc
jb
pop
ficompl
testb
jb
pop
sbb
mov
add
jae
sub
xchg
sub
cmp
mov
xchg
xchg
or
fsts
push
jb
leave
roll
loope
add
call
mov
mov
popa
ljmp
popa
mov
popf
dec
xchg
das
aaa
push
daa
mov
adc
jne
xor
jnp
lods
dec
insb
scas
sbb
jge
sarl
adc
arpl
mov
inc
push
dec
cmp
jnp
imul
mov
and
xchg
int3
ss
push
dec
ds
adc
push
sub
lcall
push
and
mov
adc
mov
bound
ljmp
pusha
sbb
aas
adc
not
pop
fldcw
jo
ror
iret
sbb
pop
loope
add
sub
pop
ja
fsubs
add
sub
das
leave
js
pop
fstpl
sub
rclb
frstor
cmp
add
jo
mov
and
add
stc
xor
and
pop
sbb
sti
sbbb
test
push
in
icebp
stos
mov
jnp
jno
sti
pop
cmpsl
xchg
push
ja
ret
repz
data16
mov
dec
daa
rorb
or
hlt
mov
test
je
out
stos
in
sti
inc
xchg
mov
test
int
int
out
mov
jbe
xchg
xchg
ds
dec
roll
cli
jno
daa
lret
fsubrs
mov
aam
pop
pop
sub
andb
cmp
mov
dec
mov
mov
adc
mov
mov
dec
dec
lea
push
and
mov
push
push
mov
out
insl
mov
pushf
mov
sbb
dec
fadds
cltd
sub
scas
movsl
std
aam
jbe
inc
enter
fiaddl
xor
movsl
into
push
or
and
sub
sbb
daa
jg
cwtl
push
dec
cmpsl
das
int
mov
jecxz
cld
in
and
push
add
push
dec
imul
js
or
mov
ljmp
aaa
sahf
mov
test
jle
mov
cmp
push
ss
xchg
scas
jns
outsb
stos
imul
stos
push
test
adc
aad
mov
ret
jne
dec
or
cmp
mov
fmulp
cmp
inc
lcall
shl
movsl
hlt
shr
sti
cmp
mov
adc
inc
mov
mov
dec
mov
inc
lds
pop
imul
jmp
dec
repz
pop
mov
ja
xor
insb
gs
mov
push
mov
jecxz
lret
add
xchg
imul
jg
leave
push
fcompl
in
pop
mov
stos
dec
push
xchg
xchg
movsl
mov
add
jmp
imul
cwtl
jbe
out
pop
fwait
hlt
cmpsl
idivb
push
clc
iret
mov
xchg
mov
xchg
test
jnp
rolb
xchg
sbb
orb
sub
push
lcall
leave
scas
xor
lret
in
nop
movl
sbb
popa
lret
dec
lods
jo
xor
lock
jns
aam
push
dec
ss
xor
inc
sarb
div
push
mov
sbb
sbb
repnz
stos
test
fildl
push
pop
push
mov
xorl
leave
xor
cmp
fdivp
cmpsl
sub
add
xchg
mov
mov
pushf
icebp
xor
jmp
loope
test
sbb
and
loope
insl
push
ja
cmpsb
push
push
sub
in
jb
sub
sbb
clc
push
aas
and
xchg
mov
pop
lds
pop
shrb
loop
sub
add
mov
outsb
iret
and
mov
sub
sbb
in
lahf
inc
push
mov
lcall
insl
mov
or
dec
adc
scas
or
xor
test
push
dec
inc
fmul
movsb
aad
hlt
repz
inc
mov
mov
mov
cld
pop
movsl
popf
add
out
call
movsl
in
popf
xchg
aas
inc
pop
inc
sbb
add
adc
mov
hlt
xchg
mull
bound
or
and
sbb
mov
xor
sbb
into
sbb
pop
push
xor
mov
ss
insb
das
mov
sub
mov
lods
stc
dec
mov
inc
int
loopne
ror
adc
lods
stc
push
ja
xchg
ret
insl
sub
jg
inc
sbb
add
or
scas
adc
cmp
add
inc
push
fldenv
fsubp
enter
dec
shrb
pushf
add
inc
imul
sub
stos
mov
in
xchg
fisubl
repz
pop
mov
popf
ljmp
inc
ficompl
jnp
xor
leave
xchg
pop
in
push
aaa
ja
pop
aas
dec
int3
pop
mov
add
mov
sub
jmp
xchg
pop
fsubrl
and
in
aam
mov
xchg
icebp
mov
fisubl
lock
push
push
pop
sarb
cmp
and
negb
adc
cmc
mov
jbe
or
adc
or
pop
push
or
xchg
dec
cmp
push
adc
and
dec
mov
ss
inc
in
ja
in
push
ret
shll
cmp
std
cmp
xchg
lds
jecxz
into
sbb
cmpsb
jne
and
das
dec
mov
sbb
cmp
or
and
pop
adc
fiadds
jp
out
insb
push
sbb
das
and
scas
mov
adc
das
xor
and
enter
aaa
das
or
xchg
dec
out
fsubrs
xchg
int3
xor
mov
sub
dec
lods
inc
xchg
subb
or
call
jae
out
inc
mov
push
add
nopl
mov
adcl
popa
mov
jecxz
fwait
jne
mov
pandn
outsb
shlb
cltd
sbb
add
imul
dec
push
sub
lods
push
mov
bound
icebp
inc
sti
add
xrelease
or
dec
in
pop
xor
lcall
mov
leave
gs
cwtl
mov
and
xchg
sub
cltd
cmpsl
sahf
scas
sbb
jb
and
scas
add
mov
xchg
cmp
jnp
lret
mov
andl
jmp
cli
sub
and
icebp
lods
cmc
cmp
cmc
or
sarl
cld
jb
mov
xchg
sahf
inc
mov
mov
push
xor
mov
push
lock
es
popf
mov
sbb
xchg
mov
jae
push
xchg
ds
jmp
mov
lock
mov
fcomps
shlb
jbe
sbb
fldenv
mov
dec
dec
clc
mov
notb
scas
fwait
out
sbb
adcb
testb
mov
push
dec
xchg
pop
lret
shll
pop
xlat
in
push
inc
pushf
dec
cmp
cwtl
mov
pop
jge
sbb
and
pop
push
jno
push
adc
stos
faddl
fidivl
pop
jnp
push
cmp
addl
loope
pop
frstor
fwait
insb
arpl
sbbb
add
mov
pop
cmp
cmp
push
mov
addr16
jnp
mov
pop
sti
pushl
dec
mov
sbb
push
decl
arpl
push
mov
test
lods
xor
mov
xchg
jns
push
loop
mov
in
stos
xchg
and
push
shll
jae
stos
or
mov
movsb
dec
shrb
mov
mov
xorl
xor
cmp
pop
sbb
xor
jne
jo
xchg
pop
loop
mov
jecxz
xorl
dec
xchg
int3
daa
aas
sarl
cmpl
jns
addr16
mov
cmpl
or
cmpsb
ss
jmp
out
int3
push
in
pusha
lcall
out
xor
pop
pop
adcl
mov
test
dec
or
dec
ja
je
sbb
cld
adc
movsl
call
mov
dec
daa
idivb
xchg
insl
pop
and
xchg
cmp
push
mov
loope
outsl
out
sbb
stos
adc
or
mov
enter
xchg
leave
adc
nop
inc
jge
mov
inc
fbstp
test
sbb
sbb
dec
xor
mov
shlb
xchg
repnz
or
jecxz
sub
cs
ret
push
jnp
pop
test
adc
mov
xorw
and
mov
inc
fmuls
and
pop
push
int
ficoml
dec
lahf
fsubp
mov
gs
cli
add
or
push
stc
mov
sbb
imul
pop
jns
mov
sub
in
mov
ss
push
jae
in
and
test
iret
in
int
movl
addr16
dec
push
mov
pop
test
imul
xchg
pusha
arpl
cwtl
inc
shl
in
push
sub
cld
and
pop
leave
adc
dec
movsb
xor
lcall
push
sub
dec
or
fimuls
lret
xchg
gs
xor
mov
test
push
dec
cmp
sub
sub
mov
pop
inc
insb
rclb
das
push
sbbl
jg
jmp
addl
mov
and
push
outsb
loop
mov
pusha
sbb
test
pushf
les
das
imul
push
cmp
xchg
inc
daa
mov
mov
add
push
loop
pushf
je
stos
je
outsl
xchg
push
int3
inc
mov
loope
mov
add
cs
dec
imul
outsb
mov
test
push
cmp
pop
test
cld
jp
lahf
jmp
mov
mov
sahf
andb
push
es
std
or
add
add
push
mov
and
imul
push
sarb
or
lret
sub
pop
stos
ret
sub
lcall
aad
cli
sbb
xchg
and
fisubs
in
in
stc
push
lock
ss
js
cld
jmp
scas
daa
pop
popf
subb
and
rcll
hlt
cmp
push
bound
cltd
pop
in
jge
push
xchg
jge
subb
xchg
add
fisttpll
add
pop
popf
pop
jno
sbb
jmp
test
jbe
xchg
jecxz
rol
lods
add
xor
jmp
mov
cmpb
inc
icebp
loop
xor
pop
jle
ds
test
das
cld
add
xchg
and
jl
clc
pop
testb
aad
adc
test
xor
rclb
sbb
adc
lods
and
lcall
subl
mov
sbb
out
lcall
int
js
inc
out
push
mov
push
dec
jmp
lods
ficoms
push
repnz
loope
insb
rcr
dec
xchg
cwtl
dec
sbb
iret
cmp
push
lcall
mov
aam
std
mov
add
imul
pop
jbe
mov
mov
mov
movsl
and
mov
xchg
addr16
jge
in
sbb
int3
xor
movsl
jge
sub
lods
outsl
pop
add
adc
iret
fisubl
push
cmpl
push
push
cmp
push
cmp
das
lret
add
lcall
rorb
popf
movsb
call
pop
xlat
xor
push
loop
push
lret
js
lea
aam
jns
or
pushf
push
cmc
mov
out
push
out
and
sbb
mov
test
lock
pop
fbld
xor
bnd
cmpsl
xor
int
ret
mov
inc
outsb
lcall
and
xchg
imul
pusha
faddl
jne
jno
and
outsl
jg
dec
out
add
add
mov
jge
inc
call
mov
rolb
sahf
adc
sub
cmp
dec
adc
scas
sub
push
sbb
push
in
jnp
push
ljmp
add
test
inc
mov
and
pop
nop
mov
sub
lods
rcrl
push
push
in
je
cvtps2pd
adc
shll
arpl
ss
xor
sbb
lods
andb
sbb
cmp
and
pop
in
xor
stc
dec
roll
cltd
mul
push
lock
pop
inc
mov
cmp
dec
sbb
pop
cltd
pop
xor
mov
cmp
out
rorl
leave
lahf
fcomps
add
stos
xorl
push
sub
xchg
dec
sub
pop
out
pop
pop
push
or
adc
lods
mov
add
mov
pop
mov
jecxz
into
out
mov
jns
cmp
or
jb
rcrl
sti
mov
xchg
lcall
push
sub
xor
adc
xor
jno
xchg
inc
sbb
lahf
pop
aam
enter
cwtl
iret
lahf
sete
int3
jbe
test
pusha
daa
xor
leave
repz
xor
jbe
xchg
loopne
push
loopne
or
add
lock
mov
xor
push
in
in
sbb
cmc
scas
adc
rcrl
push
mov
xchg
add
or
pop
xchg
pop
inc
in
insb
ret
mov
outsl
inc
xchg
lahf
push
mov
xchg
add
dec
mov
pop
inc
and
daa
leave
or
dec
or
mov
mov
fmulp
jmp
adc
inc
insl
lea
rcll
int
ficompl
jmp
sub
cmpsl
ss
push
fs
mov
xchg
push
push
lret
push
in
sub
lock
lods
sbb
loope
mov
inc
ljmp
orl
in
xor
or
add
frstor
in
sbb
inc
ss
mull
sub
push
stos
pmuludq
jo
and
push
add
stos
mov
dec
jge
xchg
mov
into
pusha
insb
lahf
mov
inc
stos
cmpsl
addr16
pop
loopne
inc
in
fwait
inc
xchg
cmpb
adc
xor
mov
cwtl
btr
cwtl
insb
jmp
pop
fcoms
push
shlb
daa
adc
mov
jp
mov
inc
lcall
lret
xor
rorb
mov
movsb
into
or
ljmp
cld
jp
shr
xor
fwait
push
or
jl
jmp
inc
fsubp
imul
scas
and
jmp
fmulp
pop
pushf
sbb
in
call
mov
mov
mov
repnz
push
std
xor
dec
adc
sbb
pushf
and
bound
inc
mov
jns
lods
add
sarl
test
adc
fidivs
sbb
pop
je
push
mov
push
cwtl
and
push
inc
or
and
and
push
and
push
sub
rolb
xchg
rolb
pop
in
pusha
insl
cwtl
dec
pop
ljmp
leave
dec
fdivrs
jecxz
add
mov
mov
dec
aas
lock
sbb
push
outsl
lock
jg
pushf
das
shrb
xor
es
popf
pop
repz
pop
jle
inc
enter
pusha
rorl
rclb
outsb
jae
fsub
and
ss
bound
jno
int3
into
and
mov
jg
xchg
test
in
lret
in
sub
add
mov
mov
imul
leave
sub
xchg
push
and
scas
xlat
jnp
dec
xor
xor
inc
jno
and
sahf
jle
cmpsl
push
repz
aas
cld
fidivrl
jbe
lods
call
dec
xchg
mov
add
ja
pop
bound
pop
adc
stc
fmuls
sbb
mov
decb
cmpsb
lods
sub
les
pop
inc
xor
movsb
andl
cmc
lcall
lret
hlt
insb
mov
cmp
movsl
mov
pop
dec
es
push
in
pop
imul
dec
sub
dec
fldl
mov
mov
jne
nop
test
xchg
std
jge
mov
and
les
dec
sbb
jge
push
jbe
xchg
and
fldcw
adc
add
adc
bnd
sub
aad
push
clc
jmp
xchg
inc
mov
test
out
adc
aaa
pop
lods
push
mov
push
mov
cmc
sarl
repz
xchg
and
cmp
sbb
loope
push
jbe
xor
pop
clc
xchg
int3
sbb
dec
jo
mov
xor
dec
sbb
std
fldenv
cmp
inc
cltd
lods
jle
or
inc
jmp
pushf
mov
push
push
xor
add
cmp
cmp
jae
push
inc
rolb
in
aaa
orl
or
ljmp
mov
cwtl
mov
sti
js
shll
mov
adc
in
jl
jmp
lret
mov
pop
xchg
stos
xchg
or
mov
hlt
sbb
push
js
push
outsl
pop
fwait
mov
push
mov
test
scas
popf
orl
scas
mov
or
out
cmp
add
popf
xchg
or
cmc
ja
dec
clc
ds
psubb
adc
aam
xchg
gs
jne
daa
sub
movsl
js
cmp
pop
and
dec
sub
add
xor
loop
cmp
mov
jbe
sub
xor
jno
lock
psubq
adc
out
addr16
loopne
xchg
pop
iret
fwait
dec
xchg
lds
mov
lock
imull
pop
idiv
sub
ljmp
mov
mov
sub
push
repz
aam
xchg
jle
ljmp
mov
pop
mov
cld
shlb
or
call
add
push
stos
xchg
inc
mov
jp
push
lret
jmp
sbb
fdivs
jne
repz
mov
xlat
and
clc
mov
sub
ret
mov
cs
sbb
xor
stos
pop
hlt
lcall
movsl
and
jns
pop
cmp
or
test
push
shll
cmc
subb
dec
and
cmpsb
mov
leave
outsb
cltd
clc
pop
jno
jnp
or
das
test
pop
pop
sub
outsb
inc
rcrl
push
mov
and
jno
sahf
hlt
push
push
pop
adc
dec
mov
test
int
jne
fists
pop
inc
sub
dec
adc
int
jge
pop
and
fildll
mov
mov
ljmp
jo
shrl
sbb
je
negb
idivl
cltd
divb
shufps
orb
mov
mov
into
cmpl
or
lods
adc
cli
cmpb
arpl
sbb
xor
addl
std
sbb
add
pop
stos
test
xchg
idivl
imul
out
fwait
inc
push
daa
add
cmp
pop
ret
out
negb
fidivrs
jo
nop
loop
mov
popf
pop
bound
cmp
fstpt
push
xchg
mov
das
test
sbb
jne
jns
nop
adcb
imul
dec
mov
js
cmpsl
add
aad
jne
push
mov
and
pop
push
jmp
sub
js
aaa
sub
xor
jl
hlt
stos
add
clc
dec
mov
cs
add
rcrb
in
mov
cmp
pushf
mov
adc
push
inc
nop
ret
lret
ret
std
pop
gs
or
xchg
adc
sub
push
aad
add
cltd
jl
out
outsb
mov
sahf
or
lods
mov
in
je
pop
stos
pushf
bound
fs
fiadds
pop
je
pop
mov
sbb
ret
jnp
pop
push
clc
dec
push
adc
addr16
repnz
testl
push
in
mov
sbb
add
int
fsubrl
adc
stc
enter
and
loopne
add
pop
xor
aas
fiadds
xchg
scas
jecxz
pop
xchg
mov
adc
add
rcrl
pop
dec
mov
xchg
jb
xor
push
mov
push
push
test
xorl
pop
icebp
mov
mov
and
push
jmp
sbb
xlat
xchg
xchg
mov
mov
stc
lods
inc
xor
inc
fists
push
loopne
int
gs
pop
outsl
pop
mov
clc
xchg
fwait
lret
pop
fisubl
pop
outsb
inc
mov
cmc
jecxz
mov
in
outsb
cmp
or
add
and
mul
cmp
stc
mov
push
dec
mov
xchg
pop
movl
pop
repnz
fadd
jecxz
inc
cltd
daa
ret
adc
in
pop
imul
push
mov
xor
insb
sbb
mov
push
push
mov
roll
jnp
push
int
test
enter
int
xor
and
xlat
xchg
pop
xor
push
mov
xorb
les
or
jg
stos
cs
cwtl
into
nop
movsl
sub
mov
jo
inc
outsb
pop
mov
push
xchg
cmp
mov
jl
sub
stc
sub
cmpsl
mov
out
inc
mov
lret
jecxz
sub
loope
adc
xchg
icebp
popf
push
xor
ffreep
or
pop
sbb
adc
ret
loope
and
push
push
add
addr16
mov
lea
cld
pop
ds
xor
cmp
lds
add
mull
cmp
jg
fstpl
cmp
mov
pop
sub
pop
push
shll
loopne
leave
sar
xlat
repz
sub
into
sbb
jnp
inc
xchg
xchg
stc
popa
pop
mov
sbb
add
scas
sub
mov
and
adc
in
fildll
mov
movsl
cmp
call
repnz
sahf
pop
stos
pop
scas
dec
sub
insl
sub
mov
mov
arpl
popf
add
add
mov
pop
pop
test
mov
mov
pop
mov
jmp
js
in
inc
xchg
ret
xor
xchg
or
jbe
enter
in
pop
jecxz
xchg
adc
cmpsl
out
fildl
adc
add
push
mov
push
mov
push
xchg
mov
ret
addr16
movsb
jo
adc
dec
push
ret
int
mov
pop
inc
dec
sbb
rcll
movsb
cmp
cli
mov
imul
call
mov
ret
push
xchg
and
or
jl
in
inc
shlb
js
mov
mov
add
cmp
imul
nop
dec
ja
sub
add
dec
cmc
pop
loop
shlb
lcall
lods
xchg
fsubs
xor
adc
adc
sarb
les
test
push
xchg
test
pop
push
and
push
loop
mov
mov
mov
icebp
add
push
rolb
inc
adc
mov
lcall
adc
cltd
repz
mov
ja
xor
push
mov
dec
xchg
and
loopne
stc
cltd
jle
jns
xor
popf
push
mov
ret
sub
and
in
popa
adc
mull
mov
ret
rcrb
cmp
movsb
dec
cmp
iret
test
hlt
adc
insl
jae
aad
mov
push
arpl
shll
or
int
pop
stos
cmp
stos
stos
push
lock
dec
lret
ret
ja
inc
jns
xor
aas
fcmove
mov
scas
fdivs
fildll
adc
push
inc
orl
stos
outsl
jb
mov
mov
scas
movsl
std
sub
sub
dec
pop
ljmp
jmp
scas
or
hlt
test
les
pop
into
mov
rep
inc
in
mov
sub
rclb
fidivl
lret
cmpsl
sbb
push
lods
mov
cmp
sbb
sbb
cld
loop
stos
cmpsl
sti
cmp
imul
leave
and
mov
push
addr16
adc
mov
cmp
push
cmpl
adc
outsb
outsl
push
subl
cmp
mov
mov
jecxz
mov
insb
aad
popf
pop
lea
cli
push
notb
xchg
pusha
inc
push
jl
adc
pop
hlt
jne
imul
test
into
scas
addl
xor
lods
call
mov
xlat
jo
mov
sahf
cs
dec
and
ficoml
or
mov
and
jb
push
das
cmp
mov
jno
inc
xchg
test
inc
cmp
sub
les
xor
in
scas
stc
mov
fistl
cmp
pop
xor
dec
sti
mov
loop
lahf
jae
arpl
aad
jno
out
and
aam
sub
mov
cmp
ficompl
add
jo
ret
mov
daa
push
not
shll
pop
xor
fildll
pop
ljmp
pushl
inc
or
lods
jp
lret
jno
lret
fs
pop
sub
lds
jb
dec
cld
bound
push
adc
int
pop
fisubs
mov
adc
mov
cwtl
dec
out
scas
mov
ror
lock
pop
sbb
or
and
inc
inc
mov
rcrl
pop
mov
loop
gs
scas
jo
mov
out
lods
lock
xchg
sahf
mov
lcall
fwait
sub
dec
add
movsl
add
jp
rorb
pop
xor
out
sti
inc
xlat
popa
ljmp
mov
mov
stc
daa
adc
add
dec
push
aam
pop
mov
xor
jge
pop
push
addl
push
sbb
lods
or
sub
mov
andl
mov
adc
adc
pop
imul
stc
adc
dec
adc
repnz
sbb
mov
leave
pop
add
cmp
mov
sub
nop
push
fwait
xor
add
xchg
push
out
push
jne
xor
pop
out
sub
roll
mov
xchg
sbb
cmp
inc
and
pop
rolb
fbstp
imul
or
pop
pop
or
bound
jg
cs
dec
push
jae
add
fcompl
in
das
add
mov
adc
adc
inc
push
mov
adc
into
arpl
imul
ret
mov
or
pop
inc
loopne
dec
or
mov
pusha
fadd
push
hlt
add
add
paddw
cltd
or
xchg
add
mov
shlb
sbb
lret
mov
push
mov
rcrb
xchg
nop
adc
addb
and
dec
mov
clc
hlt
stc
loopne
test
mov
jg
pop
lret
fs
dec
pushf
inc
mov
cmp
sbb
push
cmp
mov
or
ja
lcall
call
lret
push
subl
shr
arpl
popf
jecxz
test
addr16
jl
inc
lods
pusha
add
test
mov
out
pop
mov
imul
sub
mov
jb
shr
xchg
mov
pop
inc
mov
orl
xchg
add
pop
xchg
cmp
push
cmp
add
dec
inc
jmp
fisubs
cmp
mov
dec
or
mov
mov
jg
mov
xor
mov
dec
pop
rorl
push
dec
int
scas
mov
cwtl
mov
cmpsb
mov
add
jecxz
or
bnd
cmp
or
or
hlt
dec
fdivrp
add
pop
mov
pusha
daa
xchg
xchg
pop
ret
xchg
push
sbb
repz
leave
push
outsl
adcl
sbb
push
cmpl
jp
sub
out
jns
jbe
jno
icebp
push
jb
mov
pop
pusha
and
push
jo
rorb
nop
push
lret
push
jo
mov
enter
roll
aad
jne
pushf
jbe
inc
push
jp
rolb
aaa
addr16
daa
mov
jnp
or
or
mov
movsl
push
add
and
mov
lret
mov
pop
push
cmpsb
iret
addr16
ffreep
pop
cmp
dec
insl
aam
ss
pop
push
mov
jo
scas
daa
arpl
or
jb
out
xchg
call
jns
ret
add
bound
sub
and
mov
mov
xorl
cmp
sbb
mov
insb
stc
ja
adcl
mul
pop
rorl
mov
call
sbbl
or
scas
call
pop
aaa
test
pop
and
loop
mov
dec
insb
out
repz
mov
ss
sbb
adc
lds
out
jp
lcall
daa
sub
lret
divb
add
and
icebp
mov
incb
mov
adc
pop
xchg
jnp
or
mov
sbb
or
ja
leave
dec
dec
sub
or
cld
enter
push
mov
insl
mov
movsl
xchg
rep
mov
add
mov
dec
ret
cli
int3
lret
xchg
push
insl
aas
pop
das
ss
shlb
mov
inc
mov
xchg
enter
add
dec
bound
fmuls
push
jmp
rorb
ds
xor
movsl
and
pop
lods
mov
stc
sub
lahf
pop
repnz
jbe
inc
repnz
out
adc
shrb
mov
imul
call
mov
in
lcall
jl
push
jae
push
fdivrl
out
notb
ja
ja
ljmp
jnp
cmp
mov
loope
out
data16
in
lcall
mov
sbb
pop
jp
sub
outsl
push
xor
adc
mov
mov
xchg
dec
sbb
es
shl
dec
pop
sbb
ret
pop
jmp
stos
repz
aas
push
hlt
ret
repnz
cmp
int3
repz
jne
sbb
lahf
ss
mov
adcb
or
rol
mov
stos
leave
int
lea
mov
femms
or
subl
sahf
les
xor
mov
sbb
xchg
int
xor
jbe
cmp
pop
test
pusha
call
pop
sub
sarl
out
jnp
jo
std
pop
mov
cld
inc
mov
or
gs
imulb
sbbb
fbstp
in
mov
insl
lea
fs
push
mov
bound
cmc
xor
xlat
rcl
jle
or
mov
jp
jbe
fisttpl
ja
imul
mov
cmp
outsb
rcrl
rorl
and
jp
mov
jns
xchg
and
xor
jmp
and
loop
and
lret
js
push
mov
sub
pop
and
int3
add
sti
pop
div
lret
stos
cmpsb
fucom
clc
lret
movsb
adc
mov
pushf
icebp
and
aam
cmpb
daa
test
fsub
js
out
sarl
call
les
enter
test
lret
dec
in
pop
push
jae
mov
faddl
out
lret
cli
push
xor
pop
inc
push
fwait
dec
add
call
sbb
inc
out
mov
sbb
out
cmp
out
jae
in
lea
pop
push
setg
loopne
dec
leave
mov
push
ror
jbe
and
adc
mov
jb
out
loopne
int3
xchg
xchg
fs
movsb
dec
push
push
ds
mov
pop
jle
insl
insl
and
and
inc
out
mov
jb
or
clc
lcall
dec
scas
adc
inc
pusha
and
nop
and
fsubl
sarb
fnstcw
inc
xlat
fisubrs
inc
inc
xchg
push
aaa
cmp
nop
xorl
andl
bound
adc
dec
cld
jae
call
mov
subl
js
cpuid
in
mov
imul
adc
rcr
test
jle
and
shll
add
fcoms
adc
std
sbb
and
pop
jnp
sbb
dec
dec
rcll
jb
jmp
dec
or
cmpsb
jge
ljmp
mov
mov
mov
pop
xchg
or
push
jnp
mov
vpcmpgtw
cmpsb
rcl
rclb
bound
aaa
adc
dec
pop
adc
and
or
imul
cmp
sbb
lds
dec
shrl
dec
xchg
mov
bound
push
lock
aaa
std
lahf
es
sbb
mov
xchg
jae
or
push
jmp
push
in
int
and
hlt
mov
adc
cltd
in
pop
pop
stos
xchg
mov
in
ficoms
lahf
cmpsb
das
stos
xchg
loope
sbb
mov
push
cmp
adc
lcall
push
cltd
and
pushf
dec
nop
out
jns
push
xlat
jo
jo
add
imul
sbbb
mov
lea
sub
dec
push
scas
dec
stc
push
sub
add
aam
imul
popa
mov
aas
fstps
out
fstp
push
movsb
inc
xor
pop
fucomp
das
aas
pop
and
lcall
sub
fsubl
pop
movsl
sbb
rcl
ret
lds
sbb
and
adc
push
in
sahf
lock
in
and
sbb
and
outsb
sub
in
ret
jne
loop
cmp
insl
jo
lea
lds
mov
aam
inc
xor
lods
mov
jo
xchg
adcb
je
xchg
xchg
push
sti
pop
mov
mov
xchg
hlt
ds
jle
sbb
mov
cmpsb
fmuls
and
repz
scas
dec
push
enter
push
add
xchg
mov
or
into
xor
mov
stos
int3
sub
jecxz
insl
cmp
dec
ljmp
cmc
inc
outsl
push
push
out
incl
push
icebp
dec
cmpsl
inc
repz
push
cmp
inc
dec
mov
mov
aas
mov
mov
inc
repz
xor
sub
cli
addr16
ret
lahf
in
scas
mov
ret
push
mov
ja
js
mov
out
add
lds
or
scas
mov
dec
mov
pop
pop
in
pop
mov
gs
jmp
push
outsb
insl
fcomip
xor
rclb
and
add
mov
lods
mov
jno
or
test
cmp
mov
dec
xor
xchg
pop
xor
pop
imul
xchg
rcll
insl
mov
and
fnsave
xor
push
ficompl
cmp
loopne
cmp
pop
int3
fiadds
enter
fs
roll
arpl
cmp
push
push
cmp
scas
cmp
add
cmp
movups
les
pop
add
sbb
inc
mov
loope
int
jg
out
js
xor
in
mov
mov
xchg
xor
xchg
shll
pop
loopne
pop
into
or
adc
outsl
mov
and
and
pushf
dec
stos
negl
adc
std
jg
les
xchg
or
lret
leave
cmpsb
mov
jno
aad
addr16
popl
or
lret
ret
das
mov
ret
xor
adc
outsb
ds
sub
xorb
dec
xchg
dec
xchg
dec
mov
xchg
push
inc
jbe
sbb
inc
jmp
push
fs
jbe
cli
jp
jecxz
das
pushf
loope
mov
repz
mov
lret
jecxz
dec
jmp
jp
or
sar
and
mov
xor
in
adc
jmp
sbb
mov
xchg
imul
and
jecxz
pop
xchg
in
outsb
mov
movsl
scas
xor
jnp
out
jns
jmp
jbe
and
in
in
ja
cmpsb
pop
in
pusha
cmp
pop
fstpl
adc
cld
add
rorl
gs
repz
mov
or
addr16
add
dec
lcall
out
fwait
addr16
int3
test
sti
outsb
out
xor
jecxz
mov
ror
mov
lahf
xchg
rol
cld
pop
shr
push
mov
mov
jmp
mov
popl
rcrl
ja
ljmp
popa
push
mov
ja
jp
adc
mov
mov
cmp
and
or
pusha
sub
mov
out
fwait
cmpsl
in
pop
dec
and
loope
mov
andb
out
sub
adc
mov
scas
cmp
mov
js
mov
or
mov
cmp
ss
jae
mov
aaa
inc
fists
sarb
cmpsl
invlpg
repz
mov
pop
inc
or
add
into
mov
ja
pop
mov
imul
movsb
lea
and
jp
imul
sbb
mov
push
adc
ss
fsubr
pop
icebp
or
ret
xor
xchg
sub
scas
hlt
lods
fs
sub
push
mov
and
fisubs
das
xlat
jne
popa
scas
xchg
jl
or
xchg
pusha
out
sbb
push
outsl
sarb
sub
cmc
lds
movsb
cwtl
inc
adc
dec
pop
outsb
cmc
adc
imul
or
push
lret
sub
bound
sbb
dec
pusha
test
sar
mov
aaa
and
movsb
shll
movsb
sbb
mov
or
jle
not
xlat
test
jp
pop
jns
mov
push
in
and
sub
mov
je
jnp
push
fs
or
mov
testb
mov
xchg
aam
pop
jmp
loope
push
enter
add
fbstp
stc
ds
mov
mov
sub
mov
jmp
or
lea
mov
aas
shll
ds
sbb
loopne
xor
sti
mov
or
mov
sub
cmpsb
lods
call
js
cmp
shlb
in
fstpt
out
fucomp
mov
daa
lods
jp
lret
rorl
cwtl
cwtl
mov
je
sub
imulb
xchg
call
xchg
mov
xchg
mov
adc
movsl
sub
jl
mov
sub
pop
test
addr16
shl
repz
rclb
jns
call
daa
cmpsl
jae
out
ds
mov
fbstp
xor
sub
sbb
push
mov
pop
jnp
fidivrs
jbe
cs
mov
mov
sbb
jg
nop
imul
les
or
sbb
loop
aad
jl
jmp
das
testb
xor
in
inc
inc
sub
imul
push
add
mov
adc
outsl
sub
cmp
movsb
cmpsl
rorb
mov
push
mov
call
sub
mov
jl
scas
adc
mov
pusha
mov
icebp
int3
outsb
xchg
hlt
mov
mov
jg
scas
xchg
lret
and
popa
jae
mov
cmc
mov
inc
mov
and
jae
aaa
cmp
idiv
or
shll
and
xchg
ret
lea
sub
xor
cld
orb
mov
mov
hlt
cltd
ss
xor
scas
push
std
push
xchg
in
xor
sbb
stos
mov
add
js
inc
jg
jne
lods
cmp
rcrb
sbb
inc
add
xlat
loope
push
mov
pop
mov
adc
push
outsl
dec
movsb
fiadds
mov
mov
push
mov
mov
pop
int3
sti
test
add
cltd
mov
mov
or
mov
lret
or
xchg
inc
into
push
jbe
sbb
jnp
and
mov
mov
ret
pop
xor
jbe
lret
loope
dec
xchg
xor
dec
shlb
mov
movsl
pop
sub
inc
pusha
adc
cltd
ret
pop
subl
test
outsl
scas
adc
push
dec
cli
lods
dec
gs
out
hlt
mov
int
fs
rcl
pop
sbb
mov
lret
xor
xor
stos
pop
addr16
out
insl
sbb
pusha
push
test
xchg
sbb
jns
mov
sar
or
dec
jge
mov
aad
pop
cmp
les
movsl
out
shrb
sbb
pop
loope
out
sbbb
add
rcl
lahf
popl
insl
jecxz
aam
jns
add
xor
mov
loop
add
and
xchg
cmpsl
enter
mov
es
leave
jne
jp
dec
mov
xchg
xchg
cmp
in
out
mov
jae
jnp
cmp
fistpll
jecxz
sbb
sbb
das
test
loop
hlt
sbbl
pusha
dec
cmp
push
lods
inc
popf
aad
cmp
cwtl
outsb
pop
mov
outsb
jb
adc
cmp
aas
push
insb
xor
jae
inc
mov
pop
mov
mov
subl
out
sub
andl
add
sarb
mov
cmpsl
mov
repz
outsb
sbb
fwait
ja
sti
fs
lret
add
mov
xchg
push
int3
inc
pop
pop
cli
lods
pop
hlt
xchg
dec
xor
mov
mov
frstor
shlb
fisubl
jl
repz
pop
mov
jg
sbb
js
outsb
pop
adc
rep
inc
cs
pop
imul
pop
jno
push
dec
arpl
loop
lret
rcrb
in
inc
sub
hlt
imul
cli
in
frstor
enter
cltd
xor
lcall
cmp
repnz
and
inc
xchg
and
inc
xchg
test
pop
in
js
aad
int
mov
or
push
jp
ret
jo
lret
jnp
test
cltd
and
mov
aas
pop
sbb
adc
push
mov
add
dec
inc
loopne
jne
jecxz
insb
out
and
adc
lret
ret
jge
rcl
dec
fimuls
push
into
das
push
bound
mov
scas
mov
jecxz
insb
leave
sbb
cmp
push
cs
jmp
shrb
lret
hlt
pop
jbe
int
add
push
lret
and
inc
push
bound
in
xor
cmp
lahf
jne
movsb
push
imul
shll
popf
rcrb
pop
aaa
dec
rolb
cmp
push
movsb
outsl
leave
inc
jmp
pop
arpl
cmpsb
xlat
lods
test
sbb
rcrl
psrlw
xchg
sub
imull
xchg
stc
sti
add
es
mov
ja
mov
popf
pop
scas
sbb
jp
inc
aas
scas
xchg
jbe
sbb
or
xchg
push
jae
sbb
les
clc
mov
aam
dec
jno
es
fsubr
fstpt
mov
in
pop
cltd
jmp
pusha
test
repnz
call
or
xchg
ret
jge
cmc
sub
cmp
lcall
and
leave
cld
loope
dec
and
dec
bound
mov
cmp
add
fdiv
or
add
mov
scas
pop
pop
hlt
fistps
rcll
repnz
mov
cltd
outsb
addr16
rcrl
and
in
push
or
push
dec
jo
lock
dec
sub
xchg
jne,pn
call
dec
jns
std
jl
faddl
aam
push
adc
lods
int3
adc
ds
lret
xlat
int
cltd
jp
in
inc
aaa
jne
cltd
pop
dec
call
pop
out
int3
je
je
data16
mov
mov
xchg
pop
xor
cmp
pop
xchg
push
pop
cmpsb
inc
jecxz
test
sar
mov
xor
add
std
mov
jle
add
or
in
push
mov
scas
mov
push
cld
mov
mov
gs
and
js
or
push
js
movsb
rcrl
outsb
xchg
cmpsb
inc
repz
sarl
mov
cmp
outsb
mov
dec
out
sub
mul
cs
sti
hlt
sub
xor
orb
sub
sub
mov
cmp
sub
sbb
add
lods
jge
les
push
inc
enter
rolb
sub
js
dec
or
push
pop
xor
sub
jg
mov
ret
dec
mov
cltd
loopne
es
faddl
and
es
jns
pusha
mov
ja
or
js
sub
jb
test
sahf
in
rcrb
xchg
adc
adc
into
stc
mov
es
pop
leave
push
xor
lea
push
aas
dec
aad
popa
jp
jl
add
cmp
add
xor
mov
or
adc
or
bound
cwtl
sub
push
xchg
jns
call
orb
ret
and
dec
inc
fisubrs
sbb
add
mov
xchg
loop
aam
fcomp
xlat
cs
cs
lock
dec
mov
and
adc
shrl
push
es
mov
fsubrs
out
lods
shl
scas
mov
adc
and
pop
mov
cmp
pop
sbb
push
iret
arpl
xchg
lods
nop
orb
push
stc
sub
das
inc
scas
mov
mov
adc
lea
ror
cmp
inc
loop
sub
or
cmpb
jae
scas
in
in
jg
fdiv
jge
pop
and
adc
fisttps
or
sti
rolb
notb
mov
jb
test
adcb
mov
fmull
dec
inc
mov
mov
or
xchg
stos
imul
jl
cltd
stc
fildll
out
and
pop
popf
mov
fidivs
and
mov
cmpsb
in
lcall
in
push
sbb
adc
lret
outsb
sar
out
sub
lods
jb
xchg
imul
xchg
dec
add
sub
sub
sti
insl
imul
mov
xchg
cmp
add
icebp
outsb
mov
popa
lods
mov
push
scas
test
stos
mov
outsl
and
hlt
push
pop
daa
scas
and
and
adc
dec
mov
inc
push
loop
leave
imul
xchg
mov
xor
std
and
dec
cmp
aad
clc
sub
aad
cs
cmpsl
jns
int
imul
xor
mov
lahf
sahf
jmp
xchg
stos
inc
xchg
fldenv
pop
pop
out
cwtl
jmp
xor
jge
xor
jg
mov
std
neg
lahf
sub
pusha
ret
js
add
push
mov
dec
leave
ret
inc
xchg
ja
sbb
add
pop
rcll
and
inc
pop
popa
loopne
lea
test
inc
sahf
mov
xchg
xor
stos
loope
lret
xchg
xchg
add
inc
test
add
inc
enter
lds
sbb
dec
sub
fiadds
push
bound
shll
pusha
xor
cwtl
dec
pop
in
or
push
adc
sbb
lds
cmp
cmp
inc
in
lret
jbe
push
xchg
repnz
testl
test
aad
push
leave
adc
inc
test
dec
mov
mov
pusha
in
or
xchg
dec
popf
aas
push
mov
mov
add
jecxz
mov
add
daa
jge
or
inc
lds
dec
lods
inc
mov
pop
inc
aaa
lds
xor
sub
cltd
jns
addr16
push
leave
arpl
je
mov
fwait
push
repnz
or
and
rcr
xchg
enter
mov
jge
sbbb
sub
sbb
lea
and
xchg
leave
and
and
mov
xchg
cmp
sub
rcll
adc
bound
or
mov
fnstsw
jo
add
stos
mov
sbb
popa
in
aad
jns
in
jne
push
or
int3
sahf
push
lcall
lahf
nop
add
or
mov
dec
pusha
fidivrs
imul
pop
jns
mov
lock
cmpsb
int3
push
mov
or
mov
call
mov
testl
sbb
in
and
jg
and
repz
xchg
pop
jmp
gs
out
and
hlt
sub
test
outsl
sarb
jp
cmp
cli
dec
pop
aaa
iret
out
hlt
dec
pushf
push
or
jno
arpl
xchg
mov
adc
lods
fldt
jecxz
jg
jmp
or
mov
mov
loope
xor
push
in
hlt
call
xor
cmc
iret
out
rclb
push
sbb
std
aam
push
out
dec
add
push
js
pop
test
mov
adcl
xor
test
leave
push
dec
or
arpl
xor
push
stos
pop
stos
jbe
scas
dec
mov
dec
jge
mov
shrb
stc
in
call
mov
sub
adc
into
dec
inc
mov
faddl
pop
fnstcw
inc
mov
stc
add
decb
movsb
adc
add
int
std
les
and
sbb
adc
stos
jb
leave
std
jge
ss
sub
in
mov
shll
dec
xor
inc
adc
mov
cwtl
mov
outsl
xchg
call
push
cmp
sbb
in
iret
cmpsl
pusha
arpl
and
aas
aad
leave
mov
adc
dec
insl
cmp
push
adc
jmp
lds
mov
negl
cmpb
adc
jp,pt
mov
aad
ret
add
fwait
mov
or
add
out
sbb
subb
sahf
out
fbstp
dec
jns
fsubrp
add
rolb
imul
dec
jnp
add
cs
add
inc
jno
subl
push
int
sub
pop
xlat
insb
xchg
aaa
pop
dec
pop
shll
add
sar
out
jg
push
lahf
push
divl
inc
push
lea
xor
push
adc
aaa
retw
ljmp
sub
pop
fidivrl
or
mov
add
xchg
cmc
xchg
cmpsl
insb
pusha
pop
push
inc
and
mov
and
jne
rcrl
outsb
jae
cmpsl
mov
sub
mov
xchg
cmp
rorl
pop
adc
lods
xor
sub
xor
lahf
xor
pop
pop
dec
test
in
fistps
test
push
pop
pop
out
push
bound
fs
rcrl
inc
fwait
movsl
ja
add
jg
sub
shrb
inc
sbbb
inc
out
xchg
xchg
clc
outsl
mov
inc
pushf
ret
adc
cmpsl
in
jo
ror
fiadds
in
cmp
fbstp
aam
inc
aaa
lea
rcrb
sbb
ja
shll
fcompl
loopne
or
sub
clc
insl
out
cltd
dec
and
cmp
cmp
fidivrl
js
mov
repz
outsb
fnsave
mov
aam
lods
nop
jne
les
sub
sbb
push
sub
mov
addr16
lret
movsl
sub
movups
icebp
cmp
or
imul
pushf
iret
fxch
mov
mov
les
xor
cmp
mov
jae
loop
mov
sbb
and
mov
gs
loope
mov
jbe
pop
mov
mov
test
push
xchg
pop
dec
jae
xchg
cmc
es
add
cmp
fmull
jecxz
sub
jne
xchg
ja
xlat
pop
cmp
push
div
inc
stos
ret
xchg
jecxz
fsubs
and
je
lahf
mov
push
push
sub
inc
imul
add
lods
movsb
iret
sub
xchg
lock
and
cmc
sbb
cmp
cld
add
xchg
push
out
movsl
mov
jmp
sub
pop
lods
jnp
mov
inc
xchg
ror
aaa
es
mov
push
jle
cwtl
cmp
ljmp
xlat
add
test
mov
jne
icebp
dec
loopne
daa
in
int
repz
cmp
dec
pop
fstl
rol
fldt
ss
ljmp
scas
orb
adc
jge
pop
stc
lds
dec
or
shlb
out
lock
or
push
and
ret
pusha
cmp
mov
adc
mov
enter
mov
lds
inc
shll
movsb
bound
push
and
hlt
shr
movb
add
sbb
xchg
cmp
ljmp
loop
dec
out
push
mov
int3
push
xor
out
and
loop
ret
fimuls
lret
mov
xchg
jecxz
movsl
cmp
xor
imul
jle
mov
mov
jae
mov
pop
insb
adc
xchg
pop
pop
imul
xchg
push
or
xchg
lock
pushf
mov
pop
shll
push
cmp
fisttpll
lret
in
or
mov
insb
adc
dec
adc
into
mov
cmpsl
sub
mov
iret
imul
mov
xchg
add
ja
xchg
or
aam
inc
adc
sub
jmp
vphaddbd
pop
jge
jl
jle
dec
push
adc
xchg
outsb
das
rclb
mov
ja
sbb
lcall
ljmp
mov
xor
into
les
insb
sub
rcl
xchg
gs
sbb
jne
mov
pop
movsl
addr16
push
mov
mov
or
jno
cs
repz
movsl
shlb
je
js
lcall
inc
shrl
jp
xor
negb
dec
push
jns
inc
push
out
or
add
out
sbb
xor
sbb
gs
and
push
out
push
xchg
scas
jo
lds
gs
ret
bound
imull
adc
pop
cmp
sbb
hlt
cmc
or
imul
out
lret
sub
xchg
rcl
sub
jno
cld
iret
xor
ljmp
cwtl
call
xchg
mov
mov
sbb
arpl
and
or
fldl
outsl
xchg
repz
pop
push
push
mov
imul
inc
lea
ret
mov
ss
jne
lahf
and
or
mov
inc
bnd
pop
jg
cmp
psadbw
imul
fs
inc
repz
mov
ficompl
mov
nop
imulb
mov
mov
jns
test
pop
mov
sti
pop
xor
xchg
icebp
int3
and
popf
shll
andl
leave
fsubl
pop
in
xlat
outsl
push
bound
cmp
add
loopne
cmp
xchg
xchg
cmp
aaa
les
cmp
insl
adc
stos
ficompl
inc
adc
mov
cmp
or
sbb
cmp
movsb
lock
xchg
rcl
jnp
xchg
sub
andl
int3
jmp
xor
mov
int3
pop
aad
and
jle
pop
aaa
ja
push
cs
rcrb
xlat
sbb
cs
lds
das
xor
ret
cmp
push
xchg
push
mov
nop
sub
pushf
imul
sbb
jle
out
cmp
outsl
repz
cs
dec
sub
xor
sahf
or
ret
cmpsl
pusha
sbb
pop
leave
jge
movsb
cmp
sub
shll
inc
cmc
mov
cmpb
mov
mov
add
sahf
push
popa
scas
adc
divb
out
sub
je
test
inc
loope
repnz
xchg
pop
and
das
adc
mov
inc
jnp
push
arpl
xor
xlat
mov
pop
jbe
popa
mov
js
mov
mov
mov
je
popf
adc
les
dec
lea
xchg
pop
add
mov
aaa
or
fsubrp
add
xlat
cltd
pop
xchg
mov
ficoml
imul
fs
and
subl
adc
add
lahf
mov
add
pop
aas
push
repz
ja
jae
lret
addl
dec
sub
out
hlt
bound
ret
sbb
xor
clc
sub
aas
flds
dec
scas
mov
sbb
push
mov
jns
and
xor
cmp
mov
pop
adc
ljmp
js
lds
mov
add
cmp
mov
xchg
insl
test
and
jge
cld
repnz
aad
xchg
lcall
and
xchg
inc
mov
outsl
dec
sti
lods
inc
enter
sub
loope
out
xchg
cmpsl
lahf
cs
sahf
and
mov
repnz
pop
insb
mov
cmpsl
inc
dec
outsl
fidivs
mov
sub
leave
sub
mov
push
pop
and
ja
xchg
lret
jecxz
fcompl
xchg
push
jg
fs
mov
jecxz
mov
pop
xchg
call
mov
cltd
ret
mov
dec
hlt
sahf
daa
adc
cwtl
je
rcll
dec
lret
xor
jle
add
fmuls
lret
mov
xchg
adc
jnp
push
negl
push
jb
push
pop
dec
pop
dec
lea
xor
mov
dec
adc
mov
inc
in
adc
cmpsl
xchg
pop
mov
pushf
fwait
popf
pop
call
dec
mov
mov
or
mov
xchg
iret
icebp
jno
cmp
fwait
in
int3
pop
imul
lea
and
inc
into
int
push
fwait
stc
decl
sub
addl
lret
out
jbe
mov
jg
mov
dec
pop
retw
clc
xchg
inc
inc
push
data16
repz
dec
in
and
pop
shll
pop
xchg
and
xchg
pop
repz
cmp
shl
ljmp
jmp
mov
jb
mov
cli
arpl
xchg
lcall
and
push
je
mov
arpl
sti
add
arpl
xor
stos
sbb
pop
lahf
add
hlt
sub
lock
out
dec
inc
mov
sub
push
rcrl
pop
add
bnd
pushf
sub
push
test
insl
popf
mov
lods
sahf
ficompl
ret
in
add
aam
and
pop
sub
sahf
daa
mov
push
push
add
je
fcomp
shl
mov
xchg
mov
in
mov
push
shr
int
movsl
inc
loope
repnz
sbb
imul
movsl
inc
leave
dec
sbb
jmp
xchg
sbb
dec
dec
vphadduwq
sub
scas
sahf
push
inc
mov
cmpsb
stos
dec
data16
stc
push
js
mov
aaa
mov
clc
sbbb
push
int
shlb
mov
mov
lret
pushf
fsubr
pop
xor
dec
pusha
pop
cs
inc
and
sub
clc
push
cwtl
adc
rclb
mov
repnz
call
jae
adc
mov
adc
test
leave
hlt
in
popa
mov
out
mov
inc
test
sub
or
das
xor
xlat
das
or
jns
adc
fmuls
cltd
pushf
and
jo
repnz
pop
cli
call
inc
leave
mov
ret
sub
iret
mov
adc
pop
data16
stc
std
not
inc
mov
dec
jnp
jbe
push
in
mov
jecxz
addr16
adc
leave
pop
fldl
add
xchg
dec
push
sub
jae
xchg
xchg
fwait
adc
fs
je
pushl
jp
or
dec
lock
pop
and
pop
aam
mov
rorb
xor
jecxz
add
cs
fcomps
or
adc
fwait
or
mov
push
or
inc
leave
hlt
adc
mov
pop
push
movsl
ja
xor
lods
cli
mov
xor
sbb
pop
jo
in
arpl
add
rolb
popf
pop
cmp
stos
mov
push
jmp
popa
jbe
mov
fs
and
mov
xlat
mov
sub
loopne
ret
add
sub
les
xchg
push
adc
mov
or
stos
push
and
and
test
or
cmp
xchg
loopne
sbb
fs
into
mov
iret
xlat
cmc
enter
and
push
je
mov
mov
inc
pusha
fistl
ja
sub
push
adc
les
or
jp
repnz
sub
jmp
xchg
mov
bnd
mov
rcl
gs
pop
aaa
dec
push
lcall
arpl
mov
push
mov
adc
and
cmp
push
sti
push
push
and
lahf
out
sub
inc
loope
sub
jne
xlat
shlb
iret
adc
icebp
lret
sub
rorb
fwait
into
test
ljmp
xchg
jecxz
sbb
imul
xchg
scas
or
test
mov
jecxz
cld
lds
dec
xchg
decb
data16
or
xorb
js
roll
lcall
insl
jle
pop
notl
xchg
sub
outsb
daa
icebp
dec
nop
xchg
xlat
mov
sub
pop
outsb
popf
mov
push
fstpt
push
ds
pop
mov
pop
xor
mov
dec
mov
mov
daa
cmp
lods
stos
adc
push
mov
data16
pop
dec
cltd
sub
dec
imul
push
je
scas
iret
or
mov
loope
or
sbb
shl
adc
sahf
adc
mov
outsb
aas
xchg
or
aaa
repnz
sub
loope
adc
jno
lock
jns
fcmovnbe
cwtl
fs
or
leave
and
fsubs
xchg
repz
inc
push
outsl
out
adc
xchg
lahf
adc
movl
jno
and
aam
stos
push
imul
insb
jno
and
jno
test
mov
in
movsb
push
addb
arpl
adc
push
insb
pop
icebp
or
aaa
push
xchg
pop
cltd
std
push
or
inc
jne
sbb
test
ja
sbb
or
jg
jno
add
sbb
sbb
or
inc
mov
mov
push
cmp
sub
sub
dec
stos
mov
and
cmpsb
jmp
jb
and
int3
nop
mov
cmp
sbb
out
pop
incb
inc
loopne
mov
das
pop
inc
std
push
add
sahf
stos
xor
dec
sbb
movsl
jb
mov
lods
push
push
inc
es
mov
jnp
sbb
push
add
dec
cmpsb
addr16
sub
push
push
inc
dec
sar
in
sarl
fwait
lods
sarl
mov
mov
mov
mov
test
push
es
push
dec
ds
cwtl
mov
sub
mov
movsb
cpuid
mov
inc
sbbl
add
or
sub
xchg
mov
imul
movsb
mov
cmpsb
push
mov
mov
sahf
xchg
mov
enter
xchg
mov
cmp
and
or
aaa
out
jle
ss
or
repz
cs
pop
in
jno
inc
or
nop
jo
mov
cmpsl
shlb
inc
shll
and
je
sbb
leave
jno
gs
adc
aas
pop
lcall
xchg
dec
les
pop
mov
mov
ret
ficoml
mov
and
dec
add
push
mov
insb
scas
cmp
xor
sub
xchg
daa
mov
sub
imul
shlb
hlt
mov
inc
cmp
inc
lahf
jmp
pop
jg
mov
mov
jae
mov
cmc
jmp
sbb
cmp
repz
pop
dec
push
outsl
jmp
jge
lret
push
rclb
sub
std
xor
mov
sub
cmp
lods
out
pop
push
ret
loopne
addl
pushf
xchg
dec
nop
inc
xorl
cmp
into
cmp
xlat
gs
lds
inc
jle
pushf
loop
loopne
sbb
push
test
jnp
mov
mov
inc
inc
shlb
xchg
imul
iret
ds
mov
pop
lahf
push
pop
fcmovnb
mov
mov
rolb
push
subl
and
aaa
cmp
scas
add
cmp
fmul
dec
inc
js
test
subb
sbb
cli
cmp
and
idivl
and
stos
dec
xchg
fsubr
pop
lret
repnz
sbb
test
xchg
mov
rol
push
int
mov
jbe
fdivrp
les
dec
add
leave
icebp
jb
daa
and
fstps
sub
out
cmpsb
clc
mov
add
outsb
jg
jl
in
push
sahf
mov
push
into
xor
adc
adc
pop
dec
sub
cmp
sbb
je
jns
sub
ds
sbb
imul
fs
cld
movsl
outsb
cmp
stos
dec
mov
test
mov
mov
jbe
xchg
push
jnp
jecxz
fs
les
sbb
ffreep
push
hlt
cltd
add
hlt
test
xor
mov
mov
mov
jb
lcall
pop
sub
xor
ja
inc
rcrl
push
jb
pushf
inc
sub
pushw
fildl
std
xor
or
sti
push
jl
cmpsb
jbe
mov
push
into
test
mov
xlat
push
mov
inc
fisubrs
imul
test
dec
adc
xchg
mov
add
into
add
adc
and
mov
pop
shl
movsb
mov
scas
mov
sahf
xchg
jnp
mov
mov
fcomip
cmp
cmp
add
and
mov
inc
mov
mov
jbe
jb
out
dec
jle
test
in
add
ja
inc
jae
mov
dec
or
pop
in
cmc
and
enter
mov
in
rolb
aad
addr16
and
jp
cltd
jp
das
jle
or
push
jl
xchg
cmp
data16
stc
in
jnp
mov
bound
jae
pop
push
mov
sbb
fsubl
dec
div
out
mov
js
lds
lret
mov
int
fidivl
loope
int
cmp
shlb
mov
out
mov
je
or
mov
mov
push
or
push
cmpsb
mov
iret
xchg
in
push
loope
daa
movsb
sbb
pop
inc
repz
sub
stos
leave
sbb
clc
ss
mov
fdivl
cmp
xchg
sbb
insl
stos
pop
sbb
mov
xor
add
and
cltd
lret
popf
pop
or
cwtl
cs
mov
sub
lret
loopne
mov
xchg
sbbl
mov
int
out
push
cld
jle
pop
pusha
lock
mov
dec
mov
mov
jae
repnz
addr16
rcrb
mov
jge
mov
and
ret
pushf
aaa
mov
adc
loope
xor
outsb
ja
jno
mov
testl
mov
imul
xchg
and
sub
and
jbe
rep
pop
sub
cmp
lahf
jg
hlt
jb
inc
inc
bound
lods
adc
std
sbb
push
inc
push
lds
cmpb
lock
cmpsl
mov
cmc
das
into
fsubs
lods
fnstsw
push
and
jbe
add
pop
add
scas
inc
add
inc
xchg
pop
dec
ret
je
cli
sahf
nop
jns
sbb
push
xchg
sub
bound
aas
cmpb
decl
ss
push
mov
popl
xor
inc
ss
outsl
pop
mov
inc
and
push
rcrb
dec
ret
shlb
pop
popf
out
fbstp
push
lods
push
push
decl
jl
pop
jns
sub
sbb
lock
pushf
cld
sbb
and
cs
push
pop
pop
cmp
mov
add
enter
iret
push
sbb
push
sub
int3
outsb
sub
imul
dec
sbb
out
jne
and
mov
push
test
sub
sub
xchg
addr16
in
cmpsb
or
sbb
jo
dec
sahf
insl
mov
cmpsl
jb
sti
lret
daa
aam
mov
dec
mov
pop
pusha
pminsw
aam
dec
stos
popa
arpl
movsb
add
mov
int3
cmpsb
iret
and
mov
jl
fisubrs
mov
in
pop
xchg
adc
jecxz
and
lret
and
mov
mov
inc
jbe
into
cmp
pop
out
jbe
es
xchg
sub
ret
test
fcomps
shl
std
mov
mov
shll
ret
mov
movsb
stc
lock
pop
xchg
add
mov
xchg
xchg
add
loope
adc
icebp
repz
xchg
mov
push
shlb
inc
sbb
fistps
mov
bound
sub
lahf
xor
mov
in
push
pop
mov
shrl
in
mov
jno
stos
add
leave
pop
push
jg
shrb
out
lods
inc
sub
mov
cld
cmpb
mov
in
fwait
stos
scas
aam
scas
cmpb
loopne
stos
pavgw
out
add
mov
jecxz
ficompl
adc
std
insl
push
insb
leave
mov
icebp
jp
arpl
cmpsb
ret
inc
mov
and
les
loope
mov
push
pop
pop
sbb
jae
lods
xchg
xor
xchg
mov
fsubrl
mov
lock
fdivs
cmp
pop
test
cmpsl
popa
sbb
cwtl
inc
mov
jp
sub
flds
pop
rcrb
jecxz
add
fadd
mov
mov
inc
push
fsubr
adc
cmp
addb
adc
test
clc
xchg
xchg
xchg
mov
mov
pop
adc
push
xor
scas
or
or
out
push
sub
ret
mov
cmp
and
mov
popf
xchg
test
mov
dec
and
xchg
or
mov
push
insl
shrl
xchg
pop
pusha
ret
mov
scas
mov
in
cld
dec
jnp
nop
lahf
jae
pop
les
mov
jae
add
push
push
out
push
or
ficoms
rolb
jmp
add
xor
mov
sub
fnop
cwtl
xor
xchg
xchg
or
mov
fcoml
cmpsb
jg
mov
xchg
add
call
lods
lcall
aaa
and
sti
inc
popf
jae
push
and
cltd
adcb
xor
cmc
push
in
outsb
bound
mov
lock
pop
xchg
jle
adc
jecxz
iret
mov
fucom
push
jmp
mov
fwait
movl
ret
pop
sub
jo
les
cmpsb
and
mov
hlt
fbld
rclb
xor
adc
sbb
inc
movsl
push
lahf
adc
outsb
int
lret
popf
sahf
mov
xchg
lret
cmp
bound
out
or
cmp
jbe
add
push
sub
lods
fldt
mov
sub
push
xchg
inc
push
mov
lds
xlat
or
add
dec
mov
inc
sbb
arpl
jbe
enter
lods
bound
pusha
jl
mov
or
mov
enter
les
jp
test
jnp
mov
push
fists
inc
out
ret
xchg
in
testl
fiaddl
jbe
and
dec
sbb
out
sub
rclb
shl
and
push
add
adc
and
dec
into
sub
push
mov
iret
push
push
stos
popf
shlb
loope
insl
jns
test
lock
mov
enter
push
ret
adc
mov
movsl
icebp
add
add
add
pop
mov
mov
daa
push
in
test
cmp
fists
inc
mov
xchg
or
xchg
movsl
cli
cmc
lcall
shl
and
in
into
or
mov
push
mov
mov
adc
sub
scas
pop
outsb
in
pop
ja
fdivr
pop
mov
clc
mov
or
repz
call
lea
inc
ret
mov
jg
cmp
aaa
and
push
jle
fisubs
dec
test
adc
xchg
add
in
and
xchg
inc
dec
mov
pop
adc
bound
adc
sub
vpmulhw
incl
lcall
arpl
push
xchg
movhps
xor
andb
test
lock
xor
mov
sbb
loopne
cmpsl
pop
lock
jae
in
push
pop
pop
ror
push
push
paddq
mov
and
push
jne
or
je
subl
xchg
mov
xchg
mov
ljmp
inc
push
adc
stos
scas
jle
fidivl
mov
inc
xor
or
adc
add
icebp
push
into
adc
inc
cltd
in
cli
mov
sbb
inc
lahf
xchg
dec
ja
aaa
and
loopne
das
add
mov
jl
xchg
inc
subl
sub
mov
mov
or
roll
enter
push
cmp
adc
inc
pop
notb
in
jbe
cmc
lock
pop
cld
mov
or
mov
jle
sub
popf
xchg
mov
ret
andl
jne
ret
xchg
cs
sub
sbb
sbbl
push
fs
sbb
push
les
dec
in
push
stc
insl
cli
mov
inc
pushf
xor
or
jge
mov
inc
pop
xor
notb
addl
rclb
je
mov
rcr
pop
pop
pop
xor
mov
iret
das
cmp
aas
sub
sub
or
movsb
pop
push
or
xchg
rclb
stos
cmp
xor
insb
push
imulb
pusha
jno
push
mov
xchg
hlt
cwtl
push
mov
pop
arpl
mov
inc
jle
jl
imul
mov
notl
rcr
fwait
mov
dec
adc
scas
ret
outsb
pusha
cli
mov
pop
inc
sub
push
rolb
out
movsl
adc
insl
test
or
insl
cmp
mov
pop
xlat
sub
cwtl
cld
push
push
and
aaa
mov
inc
insl
jns
gs
mov
xor
jns
pop
sbb
cmpsl
cli
or
mov
mov
int3
mov
stc
jmp
adc
shl
sti
sarl
cmpsl
aaa
pusha
jns
mov
dec
xchg
es
sub
xchg
inc
mov
imul
cmp
scas
test
aas
xchg
xchg
ljmp
dec
mov
mov
add
add
mov
pop
enter
adc
loope
call
jbe
xchg
mov
std
adc
cmp
jne
nop
std
push
pop
int
stos
repnz
fnstenv
std
or
lds
xor
call
mov
xor
mov
jle
jbe
sbb
fmulp
or
or
push
pop
mov
loope
mov
out
mov
sbb
lcall
aas
xchg
shlb
rclb
dec
xchg
cld
call
test
inc
je
dec
out
inc
sbb
lods
fwait
inc
aad
stos
cmp
cmpsl
push
negb
aam
loop
addr16
and
xchg
stos
cmp
cmp
repz
mov
mov
outsb
movsb
mov
test
lcall
mov
lcall
cmp
mov
aas
mov
imul
xor
mov
je
xchg
jge
mov
jnp
add
push
add
mov
dec
ljmp
je
mov
adcb
sub
cmp
leave
mov
mov
push
aad
pusha
fcoms
jne
daa
xlat
rcrb
cmp
xchg
mov
sbb
stos
push
loop
daa
pop
dec
xchg
add
xor
popa
inc
mov
add
in
pop
inc
jns
inc
in
xchg
leave
fldl
test
sub
call
sbb
rcrl
out
inc
mov
fists
lods
sbb
pop
int3
jecxz
je
shll
jp
leave
jne
add
clc
test
pusha
cmpsb
mov
icebp
and
mov
push
sub
xchg
sub
xchg
xlat
mov
rdmsr
xor
cmp
loop
pop
xchg
pop
aad
mov
pop
cs
sub
mov
pop
sbb
imul
ja
int
pop
lret
mov
test
rcll
aas
ficompl
jno
push
cmp
mov
inc
xor
sbb
jae
sbb
lcall
push
test
fs
lds
sti
pushf
sub
adc
push
out
jg
iret
dec
adc
imul
stos
jbe
jl
xchg
int3
cltd
aam
into
xchg
xchg
push
jl
gs
pop
push
lock
fistps
out
sarb
sbb
xchg
cmp
inc
xchg
pop
and
clc
or
lcall
push
pop
decb
mov
adc
into
cmp
sub
in
stc
dec
dec
fdivrl
test
gs
loope
adc
lret
xor
cli
mov
pop
sub
cld
adc
lahf
or
pop
mov
imul
enter
pop
repnz
movups
and
cmp
icebp
call
sub
addr16
jb
aam
xor
stos
cmp
test
outsb
mov
ds
dec
lds
test
push
test
test
das
jmp
fldl
test
scas
ljmp
xchg
mov
sti
inc
sub
cmp
daa
cmp
jl
pop
ljmp
paddd
enter
jg
and
dec
jmp
push
inc
sub
lea
lret
inc
out
inc
pop
incl
int3
or
in
add
push
cmpsl
daa
push
add
mov
ljmp
cltd
dec
js
clc
in
cwtl
aam
int3
in
imul
test
mov
dec
lret
pop
subb
sarl
xlat
int3
fidivs
cmpsb
lret
js,pt
mov
xlat
pop
dec
inc
mov
sbb
and
or
xchg
pusha
or
ret
or
xchg
xchg
repnz
adcl
rorl
xchg
lds
cmpsl
dec
orl
and
sti
lcall
xchg
imul
xor
pop
xchg
mov
lret
mov
inc
loopne
sbb
dec
or
mov
repz
and
adc
movsl
sbb
ret
ffree
test
jns
sub
std
or
das
pop
mov
pop
aas
test
leave
or
sbb
adc
stos
mov
cmp
aas
pop
pop
add
icebp
fists
jmp
subb
or
push
adc
adc
sub
ja
dec
xchg
cmp
push
jmp
popf
mov
xchg
filds
mov
mov
mov
fcmove
xchg
ficomps
loop
cmp
add
cmp
push
nop
movsb
scas
div
sbb
xchg
lea
mov
sbb
ljmp
mov
cmc
out
push
aaa
cli
int
sahf
sahf
xchg
mov
pop
shlb
neg
pop
mov
sbb
inc
mov
lret
sahf
mov
add
or
sbb
rcr
adc
sbb
int
filds
rcrb
popf
mov
shlb
int
stc
lea
cs
out
push
dec
add
sbb
inc
mov
test
or
xchg
cld
outsb
inc
and
icebp
push
inc
pop
push
jae
sti
mov
mov
pop
ret
out
enter
sbb
dec
in
push
pop
or
insl
pop
or
nop
push
pushf
push
mov
dec
adc
push
jge
sbb
add
mov
xchg
sub
mov
out
cmp
jo
cli
dec
in
cs
loope
xchg
jle
loopne
push
sbb
outsl
leave
test
mov
xorb
jge
js
std
fbstp
xor
loope
jb
push
sbb
sbb
sarb
mov
popf
mov
jmp
adc
je
sub
pop
movsl
dec
or
adc
xchg
in
fwait
jo
imul
inc
cmp
mov
and
out
xor
sub
jg
scas
mov
std
jecxz
in
outsl
mov
out
outsb
jle
out
push
inc
adc
lahf
jmp
addr16
xchg
ss
aaa
xlat
sub
push
jecxz
subl
fwait
push
lock
xor
mov
mov
es
aaa
repz
pcmpgtw
loopne
rolb
daa
data16
push
jmp
mov
dec
cmp
lret
pop
call
adcb
lea
dec
shll
xor
push
or
sub
out
jmp
pop
mov
jle
mov
push
in
jb
lods
or
test
and
sahf
adc
shlb
in
fidivrl
bt
adc
inc
adc
scas
add
jnp
fwait
mov
dec
frstor
adc
push
mov
push
in
jae
xor
inc
hlt
mov
std
jg
jmp
cmp
cmpb
adc
push
ss
notl
mov
dec
test
xor
push
sbb
dec
test
orl
add
jns
shll
pop
scas
add
sbb
jb
pop
adc
dec
loopne
xchg
and
flds
loop
xchg
push
or
outsl
aad
mov
adc
push
mov
mov
jne
dec
out
dec
pop
pop
mov
aam
cli
add
sub
sbb
push
aas
mov
mov
aad
sub
and
mov
mov
lds
xchg
mov
rcrb
adc
gs
ds
jae
mov
mov
adc
rclb
js
jbe
pop
loope
inc
adcl
cmpb
scas
add
pop
sbb
add
addl
ror
mov
jae
enter
dec
test
jge
adc
jnp
push
xor
ds
mov
push
fyl2x
adc
repz
xor
stc
arpl
dec
fildll
xchg
or
xor
mov
mov
mov
jns
push
xchg
scas
je
fwait
and
ja
xchg
fnstsw
lret
jl
xchg
jnp
imul
imull
inc
fsubl
clts
adc
xchg
test
lock
sbb
add
aas
xchg
aad
push
xor
pop
popa
movsl
mov
and
fistl
inc
addr16
das
pop
insl
fidivrs
cwtl
sub
cmp
je
xor
xchg
nop
xor
out
repnz
mov
stc
dec
jp
adc
movsb
pop
xchg
repz
dec
icebp
add
mov
shr
xchg
add
or
aam
mov
push
dec
mov
popa
cmpl
jno
adc
sbb
xor
push
or
and
mov
jg
lods
or
out
pop
jns
pop
mov
lea
add
sbb
ljmp
fsts
jns
push
les
adc
adc
jne
or
rolb
scas
jge
xchg
cmp
push
insb
fucomi
and
lahf
out
test
mov
roll
or
sbb
mov
cmpsb
mov
mov
sub
pop
rorb
push
out
outsl
shlb
daa
dec
push
jbe
clc
jnp
iret
outsb
repnz
andb
lods
add
push
xchg
stos
addb
jg
xlat
mov
fcomps
jnp
fidivrs
pop
cli
jb
loope
push
xor
dec
lret
dec
or
xor
mov
cmp
pop
push
jmp
jle
ret
movsb
xchg
sti
stos
inc
xchg
fists
insb
jb
jno
lds
sbb
mov
test
jmp
int
mov
ret
xchg
xchg
mov
mov
hlt
xor
leave
jmp
push
sub
pop
pop
jnp
loopne
xchg
pop
dec
movsb
and
pop
ret
lret
movsl
test
aam
xchg
bound
mov
inc
jae
sbb
add
xchg
xchg
dec
or
scas
aaa
adc
add
xor
jl
or
data16
testb
ror
mov
repnz
int3
mov
push
lds
sbb
aad
aad
ret
xchg
ret
pop
ja
push
sbb
in
sbb
clc
in
jmp
ja
aas
negl
jg
das
push
push
mov
mov
inc
cmpb
loope
mov
addr16
fistl
outsb
push
inc
adc
call
aad
cwtl
in
fisttps
jl
push
mov
popf
je
in
xor
mov
adc
pop
repz
loope
pop
testl
add
cmp
lahf
and
xor
sahf
jmp
lds
pop
push
popa
enter
cmp
cmp
imul
movsb
scas
adc
imul
push
jne
xor
cmp
inc
xchg
shrl
sub
pop
stos
xor
fwait
add
dec
push
sti
mov
repz
inc
inc
sarl
adc
sub
fldl
or
bnd
jp
adc
adc
cmc
dec
sbb
lret
sbb
sbb
out
mov
and
cmc
push
icebp
dec
mov
pop
out
leave
mov
in
and
inc
incl
popf
mov
dec
jb
pusha
mov
testb
gs
loope
notl
jl
or
or
xor
mov
pusha
mov
movsl
jge
xor
mov
lods
push
push
gs
fwait
outsb
pop
xor
mov
lret
mov
pop
push
xchg
dec
cmp
push
cmp
jno
aas
ficomps
filds
jae
imul
mov
and
or
test
add
scas
pop
lds
xlat
nop
es
in
inc
ret
mov
xchg
cmpb
mov
xchg
test
sti
and
jne
adc
dec
sete
stos
cmp
and
add
ret
lds
and
mov
or
add
fnstsw
mov
sbb
jno
popa
cmc
lcall
mov
fnstsw
mov
cs
sbb
pop
xor
sbb
jecxz
and
lret
andl
and
orl
cmp
dec
sub
mov
gs
sahf
dec
outsb
popf
repnz
rcrl
mov
js
push
dec
inc
out
xchg
int
mov
iret
pop
sarb
mov
test
ret
cltd
push
pop
dec
xor
push
sub
mov
pusha
jb
clc
mov
movl
mov
jmp
stos
push
push
jmp
sub
sbb
lret
dec
scas
shr
aaa
iret
je
mov
and
cli
lock
jne
out
aaa
aas
roll
mov
cmp
movsl
adc
dec
mov
jg
cld
mov
inc
repnz
lcall
aaa
adc
lods
xor
in
or
cs
mov
cmp
int3
lea
jg
pop
outsb
xor
nop
cld
cmp
jmp
pop
lds
repz
jmp
xor
pop
jecxz
pop
add
xchg
out
clc
scas
jo
das
mov
xor
jne
push
rcrb
sub
int3
pop
fiadds
int
dec
das
adc
sti
out
and
sub
or
stc
inc
jg
sbb
std
icebp
inc
mov
cs
ficomps
push
mov
leave
stc
dec
jae
or
mov
pop
and
loopne
lods
or
mov
mov
adc
cmp
adc
pop
mov
mov
sub
xchg
test
sub
outsb
es
push
and
pop
mov
dec
outsb
pop
sbb
movsl
push
mov
mov
push
cltd
sbb
pusha
call
inc
and
sbb
cmp
fistpl
xchg
je
leave
push
orb
push
aad
adc
add
xchg
cmc
fcomp
and
xor
pusha
adc
imul
inc
mov
pop
jge
sub
sahf
adc
test
push
mov
movsb
push
add
adc
cmpsb
sbb
push
rcll
inc
jmp
ds
add
filds
cmp
xorl
mov
out
in
imul
divl
aam
push
inc
pushl
xor
fs
addr16
js
mov
mov
std
cld
pop
repnz
or
and
adc
fistpll
push
adc
cmc
outsl
push
inc
int3
je
ret
imul
sbb
sub
stc
pop
xor
or
mov
mov
xchg
outsb
fmulp
test
add
cmp
cmpsb
lcall
stos
and
je
subb
or
add
or
sbb
into
sbb
fcmovnbe
push
sub
leave
fcmovnbe
push
xor
adc
aaa
mov
test
or
inc
adc
or
add
lock
arpl
icebp
scas
imul
mov
dec
aad
push
daa
and
ret
xchg
sub
and
mov
mov
popf
int
rcrl
insb
or
or
je
pop
cmc
cmp
pusha
push
call
and
jbe
jg
out
and
lea
sbb
mov
pop
pop
xor
stc
iret
ja
and
sahf
enter
jo
out
fwait
sub
dec
xchg
cld
repnz
cmc
scas
cmp
sbb
into
dec
mov
inc
mov
push
mov
imulb
xlat
repz
cli
pushf
jg
xchg
int3
lea
push
imul
nop
mov
je
xchg
xchg
lahf
mov
stos
pop
sub
cmp
sub
mov
xor
ret
neg
push
popf
les
test
mov
sub
sahf
dec
sub
fiadds
xchg
sbb
ss
dec
adc
mov
or
icebp
sub
push
inc
jbe
fiaddl
imul
in
icebp
inc
cli
inc
std
mov
mov
int
fadd
jg
jge
pop
mov
adc
movsb
jae
or
and
stc
mov
push
push
ror
enter
test
lea
cmc
aam
in
imull
adc
mov
lret
lods
jnp
dec
mov
adcl
in
rclb
sbb
xchg
pop
rorl
and
adc
sub
lods
lds
leave
or
mov
adc
dec
adc
in
insl
mov
sub
icebp
inc
js
xchg
shr
pop
xchg
icebp
xor
push
pop
pusha
inc
xchg
clc
inc
xchg
aaa
cmpsb
scas
stos
pop
push
cmpsb
jle
scas
xchg
ds
cmp
out
mov
pop
or
in
mov
xor
mov
lods
sbb
ja
sysret
notl
mov
aas
add
push
mov
push
push
cs
gs
mov
add
mov
test
or
dec
out
ljmp
jno
movsl
adc
mov
xchg
aas
je
xor
push
and
pop
adc
lock
xor
push
inc
rcr
pop
inc
sub
subb
jmp
xor
pop
pop
xchg
loope
test
jp
int
mov
in
rcrl
ljmp
mov
cmpsb
pop
jo
data16
pop
jno
jo
xor
stos
fdivp
xchg
mov
faddp
add
mov
sbb
lods
mov
cwtl
call
jl
sbb
lcall
int
fs
gs
push
and
int3
push
lock
into
testl
and
fsubrs
aas
xor
push
sub
pop
push
push
sbb
add
push
mov
jbe
pop
pop
and
push
loopne
popf
add
dec
jns
cmp
je
jo
inc
xorl
sub
push
mov
jae
push
fsubs
xchg
movl
inc
lea
inc
jae
lret
lds
fs
scas
xor
xor
lret
inc
das
leave
ja
enter
sub
ljmp
jg
push
ljmp
int3
rclb
pop
mov
jns
mov
mov
fldcw
xchg
mov
sti
mov
push
aam
inc
in
insl
inc
insl
mov
pop
stos
inc
jecxz
shl
shl
fsubrl
in
xor
pop
xchg
jo
shlb
xchg
adc
mov
mov
sub
aad
stos
jmp
leave
in
loop
pop
lock
push
loop
jle
sub
repz
jbe
add
sub
jl
sub
lret
mov
sbb
xchg
cmpsl
pop
push
pusha
decl
mov
popf
sub
xor
ret
enter
sub
jge
enter
lcall
pslld
mov
lods
cmpsl
sbb
cltd
cmp
mov
xchg
aam
push
push
sub
test
adc
xor
lea
xchg
xchg
cmpl
sbb
jno
and
xchg
inc
pop
adc
inc
movsl
mov
fisubrl
push
sub
mov
lods
pop
lret
fistpl
gs
push
das
pop
sub
gs
pop
sbb
insb
cwtl
jge
add
xchg
jnp
out
stos
out
jo
mov
lahf
insb
out
mov
imul
test
and
loope,pt
sub
int3
adc
jne
cltd
aaa
mov
jb
push
and
repnz
xchg
sti
inc
std
test
clc
adc
pop
out
jne
mov
xlat
icebp
jno
into
popf
test
loopne
aas
add
fisubrs
sahf
test
repnz
push
mov
movsl
scas
pop
jne
xchg
cmp
sbb
dec
dec
pop
sbb
iret
pop
insl
and
jbe
rolb
pop
xor
push
iret
rcll
lods
dec
mov
cmp
cltd
or
adc
sub
jle
stc
addr16
cmp
cmpsb
insb
push
lcall
in
mov
test
insl
fistps
xor
pop
cli
imul
push
mov
push
mov
cmpsl
or
inc
fisubs
pop
sbb
lock
mov
mov
mov
mov
pop
mov
ss
adc
add
fsubrl
adc
roll
repnz
arpl
icebp
mov
pop
sbb
mov
cmp
sub
pop
bound
mov
stos
cmp
mov
xchg
and
stos
inc
cmc
dec
outsl
test
inc
inc
mov
rorl
adc
mov
outsl
add
cltd
scas
add
fldcw
clc
aad
mov
scas
rorb
movsl
adc
xchg
jp
jp
test
movsb
rcl
xchg
add
das
mov
push
jb
dec
stos
sub
out
jmp
jno
aas
insb
aas
in
cld
sub
daa
ljmp
fbstp
mov
stos
aam
ja
fsts
movsb
aaa
and
cltd
lods
adc
ret
iret
aas
ficompl
mov
xchg
adcl
cmpsb
jae
push
test
popf
push
out
aad
xor
xchg
loopne
adc
sbbb
out
testb
cmp
sti
pop
inc
or
fisubrs
fdivrs
mov
pop
sar
clc
loope
pop
in
ja
cmp
ret
ss
imul
cli
cld
push
test
mov
repz
iret
lcall
in
lods
inc
out
pop
push
shrl
int3
outsb
mov
sub
shrd
enter
push
roll
mov
sub
movsl
movsl
repz
push
shll
cmpsl
movsb
xorb
pslld
xchg
xchg
add
sub
ret
rorb
add
pop
push
xchg
xor
cmpsb
mov
aas
mov
push
out
mov
pop
lret
pop
div
leave
add
lcall
mov
ret
fdivl
mov
hlt
sub
lods
mov
ja
pusha
vcvtdq2ps
fisttpll
push
test
xor
lds
inc
fiaddl
or
adc
fnstenv
lods
xchg
sti
lcall
cli
sub
xor
int3
mov
inc
rclb
sbb
adc
sub
add
xor
jo
ss
stos
imul
and
loop
sbb
pop
mov
mov
pop
cmp
lcall
test
add
pop
arpl
push
inc
xor
lea
popf
mov
sub
mov
cmp
outsb
push
jecxz
stos
adc
clc
in
push
mov
jb
repnz
call
push
lods
and
outsb
push
or
cmp
xchg
and
adc
ret
aas
dec
in
xchg
xchg
cmpsl
push
ss
or
mov
pop
enter
cmp
pop
pop
jmp
sbb
imul
and
and
sub
sub
jecxz
loopne
and
hlt
xchg
add
mov
sahf
or
mov
repz
lret
je
test
je
cs
outsb
ret
inc
adc
int3
shlb
dec
and
lods
insb
into
jno
xchg
negb
or
push
cld
fs
dec
icebp
es
fsubr
nop
rorl
mov
mov
in
cmpsb
into
pop
or
and
xchg
push
mov
mov
xor
jns
dec
es
cmp
jns
rol
mov
add
jmp
lret
in
shll
aas
out
mov
repz
jno
sub
test
adc
cmp
insl
xlat
pop
ljmp
push
testb
jo
inc
daa
loope
je
lods
push
jle
inc
imul
cmpsb
mov
xor
dec
inc
sub
and
fiadds
xchg
xchg
jae
lahf
ret
xchg
cs
mov
mov
scas
sbb
inc
mov
sub
mov
int
repnz
shlb
fidivrl
repnz
gs
mov
ficompl
xchg
pop
dec
xchg
test
or
push
les
test
mov
sbb
jae
mov
ror
pop
cmpsb
xor
movsb
adc
inc
aam
sbb
fnsave
push
pextrw
add
jle
ror
inc
std
leave
outsb
call
sub
mov
int3
mov
push
fsts
rclb
inc
repnz
repz
pop
inc
push
push
jno
cwtl
add
xor
inc
sbb
and
pop
in
adcl
test
mov
das
mov
ficoml
jg
xchg
adcl
mov
mov
mov
ljmp
into
and
xchg
repz
inc
sbb
mov
pop
cld
shrl
daa
movsb
fstpl
pop
data16
xchg
xchg
dec
out
scas
lahf
inc
xor
add
mov
jmp
loop
xor
add
fadds
fisubrs
andb
pusha
jecxz
cli
jmp
and
sbb
icebp
aas
adc
sbb
xor
fidivrl
jmp
lahf
xorl
mov
aas
mov
and
scas
xchg
sbb
mov
sbb
out
jo
fnsave
popf
xor
mov
sbb
ljmp
cld
push
jo
pop
aaa
inc
and
sub
fldcw
jo
je
cmpsb
and
pop
test
xchg
pop
outsl
jge
clc
mov
imul
xchg
int
adc
dec
std
stos
mov
sub
jmp
xchg
movsl
push
lock
cmpsl
xor
mov
stos
and
add
dec
jnp
jecxz
and
aaa
arpl
or
adc
mov
pusha
cli
inc
xchg
mov
icebp
mov
aad
push
push
mov
cltd
push
inc
and
adc
mov
sub
pop
sbb
xor
xchg
xchg
repz
andb
push
add
into
adc
outsb
cmpsl
sbb
out
out
repz
jge
and
pop
cwtl
cwtl
jg
aas
push
movsl
outsb
or
jns
jmp
ds
cmc
ss
fdivs
pushf
dec
cmp
ds
inc
mov
lahf
je
aas
sbb
jnp
mov
adc
adc
aas
mov
xor
mov
rolb
roll
int3
inc
xchg
insb
mov
inc
js
xorb
popa
mov
cld
pop
cmpsb
xor
shr
add
sahf
push
xor
xor
push
sbb
push
andl
lret
aaa
cmp
jp
test
and
pop
add
les
lods
inc
xlat
xchg
push
outsb
rcr
dec
mov
pop
lret
mov
dec
jbe
or
fs
stos
lock
ss
adc
movsb
add
jnp
fwait
and
pop
pop
sbb
mov
xchg
pop
lock
mov
sub
hlt
pop
adc
mov
inc
sar
add
cltd
clc
movsl
mov
icebp
inc
icebp
xchg
stc
addr16
push
lods
adc
add
loope
test
adc
and
ret
test
bound
mov
dec
sub
rclb
ret
or
in
lods
in
mov
xchg
adc
out
loopne
pop
mov
ja
daa
and
push
push
insb
and
lock
fsubrl
rcll
sti
inc
out
mov
xchg
lock
push
fs
rcll
sbb
movsb
pop
dec
or
ds
lods
jmp
mov
jl
cmp
mov
xchg
sbb
inc
fs
vmovupd
xor
push
push
repz
outsb
jns
repnz
dec
or
mov
loopne
ret
pop
lds
xor
add
jmp
push
mov
ret
jnp
cmp
mov
out
and
xor
es
dec
stos
jne
rcrl
es
in
mov
push
jbe
hlt
xor
lods
repnz
lcall
mov
repz
scas
mov
sbb
dec
les
aaa
mov
dec
and
jge
test
cli
add
cs
clc
mov
cmpsb
adc
es
sub
insb
mov
mov
jne
add
sub
and
add
jle
pop
inc
mov
je
inc
iret
testl
mov
mov
mov
xchg
js
cmpsl
or
arpl
sub
cmc
adc
mov
mov
mov
or
popa
dec
movsl
jmp
inc
insb
insl
jae
xchg
mov
test
into
cmp
ljmp
pop
pusha
mov
out
dec
or
movsb
xor
std
jl
ja
test
out
push
cs
add
mov
movsl
mov
mov
push
jae
lods
mov
xchg
sub
enter
dec
cmpsb
add
rcl
test
loope
fsubr
arpl
mov
lods
ljmp
push
jne
pusha
ss
xchg
sbb
js
push
push
push
test
adc
or
stc
sti
sub
leave
nop
mov
or
leave
pop
scas
jb
lods
jnp
mov
in
enter
push
pop
mov
popa
add
call
pop
icebp
rclw
movsb
add
mov
cmpsl
test
imul
fwait
outsb
cmp
or
mov
push
rorb
in
std
ret
hlt
pop
pop
mov
and
mov
push
push
hlt
lock
aas
js
into
mov
cmp
call
fs
lds
push
xchg
pop
pushw
pop
inc
cmp
in
xchg
loope
xor
or
in
mov
mov
shrl
adc
rolb
or
js
or
add
jl
cli
dec
roll
mov
and
nop
jnp
add
js
push
shrb
pusha
rcll
push
mov
cmp
rolb
cmp
test
xlat
mov
jb
cs
cs
dec
jmp
push
fwait
iret
dec
push
test
and
out
or
aaa
call
or
xor
inc
xchg
add
adc
fs
dec
loope
push
cmp
stc
pusha
pop
aaa
inc
inc
cmp
shlb
aas
outsl
cmc
lcall
adc
pushf
dec
arpl
cld
pushf
push
push
addr16
in
mov
arpl
clc
jo
pcmpgtb
in
add
jno
inc
pop
add
sbb
or
mov
mov
mov
test
and
ds
push
xchg
ja
jg
dec
daa
test
movsb
jge
xchg
stos
out
mov
and
push
inc
mov
div
add
ljmp
test
sub
out
ret
xchg
jecxz
fucomi
cmc
jne
mov
clc
mov
lods
aam
cmp
or
sbb
insb
idivl
jo
jo
mov
push
stos
aas
nop
pop
pop
or
adc
pop
dec
push
push
dec
icebp
int
mov
cltd
xabort
mulb
and
repnz
into
jl
test
mov
push
cmc
das
sbbb
xor
and
pop
jae
inc
mov
jae
cmp
sub
jbe
clc
mov
sahf
mov
popf
pop
xchg
dec
sbb
aas
loope
dec
cwtl
mov
jge
inc
xchg
int
stos
jle
push
xor
push
jp
movsl
arpl
test
repnz
stc
repnz
cmpsl
ljmp
sbb
push
js
push
in
mov
inc
mov
in
jne
mov
leave
test
or
fwait
or
ja
repnz
push
xor
ljmp
adc
sbb
mulb
int3
cmp
pop
cli
in
mov
jle
les
loopne
add
push
inc
xchg
adc
mov
inc
push
gs
dec
outsl
push
stos
cltd
ficomps
inc
pushf
cmp
add
sub
mov
cmp
mov
cmpsb
int
cmp
out
push
ljmp
sbb
sbb
xchg
mov
sahf
scas
push
ret
test
adc
cmp
and
dec
loope
std
adcb
maxps
push
adc
daa
fs
faddl
pop
sub
fs
insl
mov
mov
xor
pop
das
xchg
push
mov
or
icebp
mov
cmp
iret
adc
add
iret
mov
popf
add
or
out
lret
and
cld
int3
lcall
push
cmp
pop
pusha
idivb
push
iret
je
pop
loope
das
sub
jp
inc
leave
or
sub
dec
push
push
mov
push
pushf
movsl
out
mov
ret
xchg
push
out
test
es
imul
push
leave
mov
fimuls
mov
outsl
mov
test
xor
pop
adc
dec
jge
push
jo
mov
add
mov
aam
shlb
adcl
inc
lock
enter
add
movsl
addr16
test
inc
fwait
pop
mov
sarl
negb
sub
mov
ds
cmp
adc
in
nop
cmp
in
popf
jp
mov
push
jne
sarb
in
and
out
push
cmp
xchg
insl
push
std
popa
adc
clc
dec
je
push
fwait
or
push
dec
scas
jl
lods
movsl
jb
push
mov
je
incb
fldt
pop
inc
ss
jecxz
add
aad
in
adc
adc
mov
xor
mov
fimull
adc
xchg
testb
movsl
test
add
test
pop
int
jae
int
adc
mov
mov
bnd
pop
sbb
push
dec
repnz
xor
push
incb
adcl
fiaddl
xchg
imul
adc
les
dec
movsl
sbb
mov
fstl
dec
jp
fstpl
cmp
out
push
sbb
pop
dec
inc
movsb
mov
push
push
add
stos
loope
sbb
std
loop
mov
xor
dec
push
jp
js
hlt
mov
inc
and
xorl
pop
pop
mov
mov
faddl
cltd
jl
pop
xchg
cmpsl
or
fnstcw
jl
mov
aas
ret
stc
cmp
mov
mov
jb
iret
bound
push
sub
add
addr16
adc
inc
push
sub
imul
mov
cwtl
inc
lcall
in
stos
int3
sbb
lahf
sub
adc
push
mov
or
fsubs
insb
out
mov
sbb
sbb
xchg
int
in
and
xor
rcrb
xchg
mov
and
sub
pop
sub
cmpsw
dec
aam
sbb
jno
jnp
fldt
in
push
cmp
enter
adcb
pusha
jnp
les
adc
cmp
inc
repnz
cmp
xor
cmc
scas
sub
out
lock
cmc
popa
jl
movsb
ljmp
xor
cmp
xor
addr16
xor
rsqrtps
push
aam
mov
push
ret
or
sbb
aad
insl
bound
xor
push
mov
mov
mov
push
jle
sub
mov
mov
bound
ja
aad
mov
fwait
mov
cmp
cmpsb
fimull
mov
jb
mov
add
mov
lock
pop
inc
jns
repz
jmp
dec
rclb
add
add
adc
pushf
sbb
out
pop
iret
leave
jmp
mov
and
xchg
jmp
push
pop
movsb
sbb
popa
loope
push
jae
jns
mov
mov
sarb
mov
or
les
ja
lods
push
iret
cmc
outsb
lahf
inc
je
pop
adc
sub
adc
jle
popf
lea
xlat
adc
dec
outsl
xlat
xchg
xchg
add
mov
ret
mov
push
imul
mov
sbb
push
jmp
or
in
add
popf
fs
jnp
pop
dec
xor
adcb
lret
or
jo
insb
pop
mov
pop
fwait
push
adc
mov
test
inc
adc
cld
arpl
inc
ss
iret
mov
dec
or
fstpt
cmp
jb
sti
test
xor
ljmp
lds
cmc
jle
jb
add
stos
mov
push
data16
dec
and
mov
cmp
int
cld
aam
int3
ror
aad
xlat
jmp
mov
aad
push
jle
add
fcmovnbe
aam
jbe
lret
aad
repnz
nop
jbe
jp
in
sbb
inc
push
jle
out
jp
and
lahf
mov
mov
nop
call
pop
in
and
pop
xchg
daa
mov
cmpsb
inc
test
into
and
pushw
test
cmp
subb
test
fscale
rolb
and
sub
pop
out
xor
jb
push
in
les
cli
mov
adc
out
jg
shl
or
jge
cmpsb
dec
or
in
push
andl
pop
pop
jae
sub
inc
cmp
inc
call
ret
dec
sbb
mov
xchg
test
add
cmp
dec
dec
push
jecxz
mov
cld
test
inc
inc
inc
push
inc
in
jl
jle
clc
xchg
pop
es
fmull
mov
fs
in
cmpb
std
clc
xor
xchg
mov
outsb
sbb
jge
xchg
in
fistpll
imul
mov
jg
jno
clc
ds
leave
ficompl
aaa
push
mov
jmp
hlt
cmp
lahf
pushf
push
add
xchg
or
shrl
cmp
adc
jnp
dec
or
mov
out
test
mov
pop
push
mov
pop
and
cld
sub
dec
xchg
xchg
mov
leave
jmp
mov
fdivs
adc
cld
pop
xchg
mov
or
ja
loope
mov
fcoml
int
or
and
xlat
sbb
cli
jns
sbb
mov
ss
xor
xchg
icebp
hlt
repnz
sete
into
and
fs
out
mov
in
repz
push
outsl
add
addl
mov
std
lods
jae,pn
imul
adc
mov
arpl
dec
push
es
mov
add
and
mov
fwait
insl
fstpl
pop
inc
add
aam
jnp
outsb
subb
pop
stc
jae
sub
xchg
pop
inc
sbb
adc
sbb
xor
push
clc
mov
cmp
loop
pop
push
ja
imul
cmpsl
mov
mov
cmp
inc
lock
into
insl
hlt
mov
aas
sahf
xchg
lret
ret
lret
pop
sub
pop
scas
or
xchg
mov
inc
hlt
jp
aad
mov
loopne
mov
shl
in
stc
mov
mov
stos
jmp
popa
imul
pop
sbb
cmp
fldl
inc
inc
stc
mov
cmp
lcall
xchg
popa
inc
scas
or
jno
leave
adc
dec
mov
decl
ja
xchg
add
dec
jne
aam
pop
mov
sub
dec
repz
cld
into
sub
xchg
int3
imul
pop
add
inc
dec
ljmp
jo
inc
cmp
xchg
dec
pmulhuw
xchg
push
imul
mov
push
push
dec
jae
mov
inc
pop
testb
add
adc
add
iret
imul
daa
leave
or
sub
lcall
inc
sbb
jle
maskmovq
testl
bound
in
pop
arpl
sub
mov
inc
mov
cmpb
hlt
cmp
sbb
mov
ret
cmp
pop
cmpb
or
mov
pop
cmpsb
outsb
imul
mov
rol
outsl
mov
movl
cmp
adc
inc
dec
in
xor
addl
es
iret
mov
movsl
push
xchg
stc
add
xchg
and
dec
fwait
inc
adc
je
js
jo
mov
outsl
or
popf
aam
xor
mov
pop
and
iret
push
in
pushf
xchg
jbe
stos
in
adc
xlat
lret
out
adc
lcall
pop
out
pop
mov
mov
and
jnp
cltd
xchg
mov
xchg
and
in
int
sbb
inc
xchg
pop
jne
gs
mov
add
enter
js
aaa
jbe
mov
push
inc
cmp
xchg
adcl
push
xchg
adc
sub
adcl
filds
mov
shlb
hlt
lret
cli
cmpsb
insl
cmp
pop
js
pop
negb
and
pop
dec
movb
sbb
mov
fwait
subb
pop
in
lcall
mov
xor
pushf
sti
stos
loop
sub
stc
jae
sub
dec
js
adc
std
aad
or
cmc
xchg
sbb
das
and
dec
nop
jmp
imul
or
aas
cmp
aad
mov
leave
popa
sub
sti
loop
lock
aas
xchg
inc
sbb
repz
in
mov
sbb
and
call
jl
lret
hlt
scas
push
and
push
pop
adc
cld
jbe
jno
add
mov
jge
mov
mov
fnstsw
mov
sti
add
fwait
hlt
push
fidivrs
lds
fstpl
ret
adc
adc
dec
xor
xor
mov
fs
pusha
outsb
adc
popa
pop
aad
outsl
push
subb
popa
rcrb
adc
push
mov
dec
mov
adc
pop
push
dec
mov
mov
aam
and
push
jg
push
decl
push
pop
sbb
repnz
mov
jmp
sti
pop
lds
data16
adc
xorl
push
xchg
outsl
cmpl
jmp
dec
in
sub
fcoml
push
in
cwtl
mov
mov
push
rol
fmul
adc
pushf
xchg
rcrb
cmp
push
dec
pop
mov
cmc
cmp
test
out
sbb
call
por
mov
push
push
push
pushf
mov
aam
and
fldcw
pop
popa
and
push
inc
ret
xchg
xor
jmp
popa
fnsave
pop
cmp
xor
fcomip
adc
insl
cmp
popf
adc
inc
dec
imull
cli
and
loope
mov
popf
cmp
or
cmp
je
das
aaa
xchg
xor
pop
and
pusha
pop
rcrl
gs
adc
imul
enter
add
out
inc
push
xorl
jge
rcll
xor
shlb
inc
jge
fisubl
cmp
scas
out
lahf
shll
push
mov
mov
ljmp
fnstenv
es
rcrl
mov
cmpsb
in
ret
xchg
das
push
ja
xor
pop
loope
mov
push
es
call
hlt
into
adc
xor
in
mov
popa
sub
add
jbe
jl
iret
adc
xchg
cwtl
jl
das
xorl
sbb
mov
push
divl
mov
jecxz
movsl
int
ja
add
or
cmpsb
sub
xor
and
sub
scas
push
lret
insb
inc
fiadds
mov
lods
enter
test
loope
cwtl
test
daa
mov
clc
stc
inc
cmp
adc
iret
sub
andb
pop
pushf
push
inc
data16
mov
mov
jg
addl
xchg
pop
lcall
inc
inc
xchg
push
dec
mov
jae
daa
pop
mov
push
scas
leave
out
nopl
stos
adc
sbb
dec
adc
dec
insl
stos
xor
and
push
mov
sbb
mov
shll
xchg
xor
pop
add
xorl
add
cltd
stc
stc
out
loope
or
mov
aad
sub
ss
mov
lahf
jns
pop
and
or
dec
mov
lea
ljmp
cmp
lods
inc
push
test
fcompl
xchg
jnp
in
xorl
sbb
and
mov
lret
aas
jns
scas
orb
aas
pop
mov
loope
andb
sarb
test
dec
push
mov
xor
push
xchg
lahf
inc
das
mov
les
mov
pushf
std
scas
lsl
cmc
lock
aad
movl
xor
add
pop
xchg
lret
hlt
pusha
inc
scas
jmp
push
mov
jmp
inc
inc
cmp
fdivp
addr16
add
sub
pop
cwtl
int3
dec
das
pop
fldl
inc
dec
mov
mov
pop
and
jmp
rcll
dec
cmp
mov
xchg
les
push
clc
adc
push
mov
pushf
loope
sbb
push
push
pop
je
repz
in
xchg
shl
fists
add
int3
push
jg
sub
push
pusha
aas
enter
dec
xchg
inc
inc
add
cmpsl
insl
push
mov
imul
mov
into
divl
jg
mov
scas
popf
jnp
xor
adc
xchg
or
call
xor
mov
and
lock
xor
xlat
stos
je
or
scas
test
push
xlat
jno
pop
movsl
addl
pusha
lock
cmpsb
dec
fsubl
jno
adc
cmp
xlat
fwait
in
add
xchg
ret
push
or
mov
rclb
rcl
xchg
aas
out
mov
xchg
mov
xor
and
adc
dec
imul
scas
out
pop
mov
push
adc
xor
std
inc
js
cmp
lea
ss
addr16
cmpb
push
add
mov
or
mov
unpckhps
dec
pop
es
and
cmp
in
mov
jb
scas
pop
adc
xor
mov
xchg
subb
addr16
ja
mov
iret
adc
fists
hlt
push
mov
jnp
shll
or
stos
pop
int
inc
aas
cmpsb
jmp
cli
shrl
dec
popa
in
pop
push
les
stc
nop
dec
nop
addl
fisttpll
stc
lret
inc
roll
sub
popf
jg
adc
push
mov
dec
pop
les
adc
aam
sbb
sbb
sub
lods
inc
lock
mov
test
pop
addr16
xor
or
mov
dec
jb
hlt
loope
cmp
dec
pushf
in
inc
jecxz
movsl
mov
pop
dec
sbb
add
gs
push
hlt
out
movsb
fbld
je
push
sbbb
jmp
out
lock
call
pop
loope
push
cmp
or
mov
sub
stos
jg
dec
xor
mov
sbb
call
lods
xor
fnstenv
mov
cmc
decl
movsl
aas
mov
push
lock
adc
fwait
pop
push
bnd
mov
xor
adcl
imul
xlat
ja
ret
mov
mov
pop
call
hlt
xchg
test
rorb
in
jne
jnp
inc
push
loope
shrb
rcr
cmp
xchg
pop
leave
cmp
mov
jnp
int
xchg
cmp
lea
movl
aas
sub
xchg
push
ljmp
adc
out
or
push
adc
jge
xchg
add
mov
sub
push
mov
mov
icebp
and
add
jne
jbe
xorb
ss
das
jg
fwait
adc
fidivs
jl
aam
outsl
sbb
test
or
adc
mov
into
fs
mov
sub
mov
pop
dec
xlat
or
and
pop
ss
dec
push
and
dec
jp
test
sarl
jbe
das
stos
test
mov
int3
push
push
sub
addb
imul
xchg
sbb
mov
and
ret
mov
push
adc
jle
not
iret
adcb
gs
nop
mov
mov
inc
bound
imul
pop
xchg
call
adc
add
rolb
push
mov
xchg
xor
mov
xor
filds
cmp
cmp
pop
cmpsl
aad
push
pop
cmpsl
push
imul
xchg
or
pop
inc
inc
xor
ja
out
lret
xchg
or
mov
scas
scas
pop
inc
mov
xchg
lcall
cmpsl
mov
jno
in
sub
call
xchg
cmp
ds
out
mov
pop
sbb
cld
int3
add
es
mov
lds
cmp
int3
fmull
pop
ja
mov
add
add
into
mov
push
mov
push
and
xor
mov
or
xor
fs
cmc
jbe
cwtl
push
fimuls
data16
call
mov
fimuls
dec
sub
movntq
out
cmp
jg
insb
repz
inc
xor
in
stos
jmp
mov
pushf
mov
push
or
cltd
fwait
or
xchg
cmpsb
or
mov
jge
xchg
dec
int
cmpsb
outsl
cmp
stos
stc
clc
cltd
sub
fs
movsb
leave
dec
inc
mov
pop
fstps
flds
sub
scas
jecxz
daa
jno
adc
aad
jmp
adc
scas
popa
mov
fmull
inc
push
inc
je
daa
adc
test
push
imul
scas
cwtl
cmpsl
addl
jp
rolb
mov
push
push
mov
ljmp
leave
out
sti
push
jg
or
mov
mov
pop
push
pusha
jge
adcl
mov
push
ds
sub
dec
shll
shll
adc
lods
push
int
jmp
jbe
ljmp
rcl
rcrb
loopne
mov
mov
repnz
pop
jmp
jg
jp
or
jb,pt
es
xor
cs
rcr
xchg
pushf
mov
push
rcrb
in
aas
pop
push
jbe
adc
mov
mov
in
push
lret
stos
xor
fldcw
sbbb
leave
iret
add
adc
xchg
loop
sub
jp
jge
push
mov
ds
xlat
xchg
out
fstpl
sub
mov
sbb
or
vcvtsi2ssl
testl
sbb
cmp
jle
lret
pop
mov
shll
fwait
test
jbe
sub
cmp
sbb
mov
in
inc
call
sbb
mov
nop
dec
add
fld
xchg
jnp
and
and
adc
xchg
ret
int3
cwtl
aad
jp
loope
dec
push
loope
mov
adc
mov
js
imul
add
add
repz
cmpsl
divl
out
icebp
out
inc
pusha
jp
dec
sbb
aas
push
lahf
outsl
int
outsb
jno
adc
pop
aam
or
mov
imul
dec
add
xor
int
ds
sbb
xor
mov
push
sbb
inc
dec
pop
mov
and
push
mov
ja
xor
fisttpll
pop
fdiv
push
mov
lret
dec
adc
mov
sbb
fmul
dec
enter
or
fnsave
stos
adc
xchg
xlat
mov
xor
out
adc
fdivl
push
iret
mov
mov
lret
ds
sarb
push
mov
dec
dec
imul
iret
cmc
fimull
xchg
or
inc
xor
int
adcl
mov
daa
je
sbb
std
cmp
scas
add
mov
ret
xchg
cwtl
lahf
out
pop
int3
test
outsb
sbb
add
jg
push
and
jle
adc
mov
mov
pop
or
jns
pop
xchg
jle
dec
mov
cld
frstor
xor
or
jle
jg
mov
loop
aam
inc
call
sub
and
fisubs
push
add
or
pop
lds
ficoms
insb
test
jle
cld
jg
dec
aam
dec
adc
add
add
xchg
jo
cld
jg
hlt
sbb
outsb
aaa
xchg
xor
mov
jno
cmp
xlat
cmp
xor
frstor
inc
add
pop
jl
lret
subl
cmc
inc
lret
sbb
lahf
sub
sahf
inc
and
push
inc
xor
iret
shrl
int
sbb
jns
adc
dec
orb
clc
mov
ret
or
jbe
dec
cmp
xchg
mov
add
ljmp
cli
inc
adc
popa
lret
mov
push
jo
cmp
divl
adc
out
stos
arpl
adc
mov
imul
loopne
mov
jp
dec
pop
fcmove
fistl
fcoms
xchg
xor
mov
aaa
ficoml
cltd
lock
cmpsl
mov
ja
mov
stos
es
jp
push
shr
iret
push
jle
mov
mov
stos
xor
jb
mov
fmul
test
ljmp
adc
mov
fnstenv
lahf
push
iret
lods
or
xor
and
shlb
sti
mov
sub
xor
mov
mov
sahf
or
stc
inc
into
shrl
add
jl
cld
mul
inc
pop
jno
jb
sbb
sbbw
xchg
jno
fwait
mov
dec
inc
sbbl
xchg
pop
cli
test
mov
push
dec
pop
dec
push
mov
mov
cmp
rcrb
add
push
aad
sbb
xlat
lods
xchg
or
fwait
and
test
mov
sbb
scas
orl
call
cmp
dec
lds
xor
sbb
inc
inc
xor
mov
dec
sbb
jno
ret
mov
push
sarl
aam
sub
iret
cmp
stos
out
xchg
ljmp
inc
inc
ds
divb
and
pushf
mov
shll
inc
gs
jg
pop
adc
imul
in
adc
xchg
jo
je
xchg
cli
cmpsl
testb
js
xor
rcrb
xchg
push
stos
mov
pop
cld
test
stos
xchg
outsl
mov
cmp
cmp
scas
and
xchg
loope
sbb
adc
push
cmp
xchg
mov
push
cmpl
sti
jo
sbb
push
inc
pop
jecxz
xlat
xchg
jnp
test
enter
lcall
das
int
mov
cli
mov
fsubl
push
mov
shrl
test
xchg
pop
daa
dec
ret
in
jnp
mov
aaa
sbb
pop
xchg
shrb
and
nop
loopne
movsl
and
stos
call
jns
nop
imul
jg
and
sub
and
inc
jno
xchg
dec
jbe
cmpsb
ret
roll
pop
sahf
adc
insl
mov
stc
lods
aaa
sub
jmp
xchg
add
rolb
das
sub
jo
ret
mov
fisubs
fsts
and
or
mov
es
in
loop
aas
xor
push
xchg
xchg
fdivl
mov
sub
or
ss
pop
sbb
mov
mov
pop
or
adc
cwtl
ss
xlat
and
ss
ret
xor
subl
dec
xor
movsb
jo
imul
fwait
and
iret
repnz
mov
adc
mov
imul
scas
fstpt
call
xchg
pop
arpl
or
test
dec
lds
sbb
mov
xchg
fsubrp
inc
out
sbb
inc
fcmovnb
mov
loopne
or
dec
mov
ds
pusha
cld
or
ljmp
and
sub
movsl
js
mov
sub
inc
mov
cmp
rcll
sti
sti
rcrl
daa
adc
lret
jmp
xor
sbb
pop
lret
push
mov
pop
add
arpl
gs
push
push
push
mov
js
and
jnp
filds
xchg
mov
mov
sbb
sub
inc
adc
daa
js
ret
lret
add
xor
cmpsb
negb
cltd
rol
test
mov
sub
enter
jp
lods
or
std
scas
inc
ret
add
es
subb
adc
aaa
hlt
mov
and
sahf
pop
daa
pop
mov
dec
insb
mov
out
xchg
gs
dec
pop
out
rcl
and
in
cmp
mov
aam
add
or
cmp
mov
sbb
data16
xor
cmc
stos
cmp
cld
mov
inc
inc
lret
je
xchg
and
jno
push
mov
aas
aam
repz
loopne
push
lea
and
mov
pusha
rcr
neg
int3
bound
test
and
out
or
in
loopne
loopne
dec
jo
hlt
into
cld
adc
in
cmp
cmp
inc
scas
mov
sbb
sbb
daa
fcoms
scas
mov
sbb
push
addr16
adc
mov
cmp
mov
mov
push
cmpb
sub
shrl
pop
test
lret
cmpsb
pop
ret
inc
push
or
jmp
popa
pop
cli
push
xor
add
aas
stc
imul
inc
stos
push
xor
pop
loopne
out
outsl
lret
push
stc
or
jg
andl
int
jl
cmp
ret
loop
sahf
movsl
dec
mov
inc
aaa
sti
jl
and
push
mov
jnp
aad
int
push
jnp
je
push
xchg
ljmp
cmp
pop
movsl
data16
inc
jl
shl
pop
mov
mov
stc
jo
pop
scas
cltd
and
jns
jge
bound
cli
inc
cmp
leave
xchg
ret
scas
jb
push
shr
pop
xchg
mov
xor
xchg
mov
scas
or
test
js
in
and
jg
je
idiv
shrb
lods
mov
lahf
inc
shlb
loopne
insl
lahf
xchg
stc
cwtl
mov
xchg
adc
mov
negl
and
xchg
inc
imul
ss
lods
cmpsb
aas
bound
jno
mov
dec
jg
hlt
or
push
pop
sbb
xchg
mov
add
push
mov
pop
scas
ret
mov
stos
jl
aad
in
xchg
ret
ss
das
push
push
sub
add
and
inc
jl
movsb
inc
push
int
arpl
sahf
sbb
mov
sub
and
lret
push
imul
fwait
rcrb
cmc
lret
leave
lock
lret
scas
dec
jg
or
jns
inc
insl
xchg
mov
push
or
push
ljmp
std
sbb
or
popa
pop
push
jecxz
dec
jbe
test
int3
pop
push
mov
add
xor
adc
jbe
jno
pushf
mov
iret
mov
mov
enter
cmp
xchg
xchg
push
test
or
xchg
out
and
sti
rcr
mov
bound
xchg
adc
mov
ds
in
jns
and
sbb
pop
inc
xchg
jmp
repz
cmp
icebp
push
rorb
test
jb
sbbl
fcoml
sbb
mov
pop
xchg
inc
imul
add
add
adc
cmc
jno
jb
adc
lcall
jno
inc
sub
mov
and
shlb
mov
dec
test
jae
lahf
daa
sub
dec
outsl
ficoml
outsl
jbe
push
loopne
dec
std
movsl
adc
push
adc
aaa
or
outsl
mov
fistpll
pop
lahf
mov
les
cmpsb
pop
mov
add
cwtl
rcll
popa
jbe
xor
outsb
push
mov
cmovg
test
and
dec
adc
adc
cmpsl
jnp
and
or
jecxz
mov
jecxz
idivb
or
dec
ret
mov
cmc
ljmp
pop
jo
repnz
jnp
faddp
inc
cmp
cmp
adc
aam
cs
icebp
lcall
inc
or
adcl
xor
push
sarb
stos
shlb
mov
xlat
insb
xor
mov
call
push
pop
push
xchg
dec
mov
xor
mov
arpl
pop
mov
mov
leave
dec
hlt
jge
xor
jbe
int
leave
out
xor
adc
ds
adc
jecxz
lea
loopne
enter
out
push
test
es
add
cld
lea
mov
mov
aaa
pop
loope
push
xor
lock
imul
ljmp
ret
xor
mov
dec
push
sub
jb
sbb
jecxz
sahf
xor
jnp
mov
xchg
test
std
mov
out
jno
cmp
mov
or
adc
pop
mov
leave
lahf
xor
mov
xor
movsl
xor
es
lea
sub
call
stos
or
pusha
jmp
fstp
cmpsb
out
dec
xchg
mov
xchg
stos
and
mov
cmpsb
cmp
mov
pop
push
adc
xchg
adc
bound
lds
sti
ret
daa
jle
lcall
repnz
imul
mov
je
mov
jnp
and
and
pop
inc
mov
aaa
pop
in
aas
push
and
push
jmp
aam
jecxz
mov
mov
test
dec
jo
push
scas
orl
pop
clc
or
bnd
addr16
or
or
and
push
push
divb
push
xchg
push
jnp
fsubr
adc
or
cmp
popf
outsb
jns
adc
insb
sbb
xor
cld
adc
dec
in
in
xchg
push
or
xchg
push
loope
popf
repnz
loopne
stos
bound
test
mov
in
jmp
das
mov
push
cmp
shll
icebp
int
sti
repnz
lock
mov
jbe
push
xor
pop
cmp
insb
sbb
and
repz
mov
mov
arpl
mov
xchg
mov
add
test
in
mov
adc
dec
xor
movsb
inc
xchg
mov
xchg
and
test
or
pop
subb
test
dec
inc
inc
mov
in
cmp
push
out
scas
lcall
outsb
jmp
xor
sub
inc
sub
lods
imul
mov
pop
sbb
sahf
sbb
add
dec
fsubl
xchg
icebp
xchg
lods
xor
je
adc
subl
xchg
jle
xchg
ss
push
jns
jecxz
stos
fwait
inc
je
test
mov
test
in
icebp
jb
jp
sub
loop
cmp
pop
ror
xlat
loopne
fists
scas
xor
and
js
insl
outsl
addl
sbb
popf
popa
mov
add
jmp
enter
mov
adc
lahf
jecxz
fmull
add
test
mov
and
adc
lret
push
fdivrl
or
enter
add
ficomps
mov
stos
pop
test
repnz
dec
sub
mov
pop
test
xor
fstl
adc
xor
movsb
sar
adc
push
pop
popf
lds
adc
cmp
lds
inc
leave
jne
pop
jbe
outsb
adc
jle
shrl
xchg
or
negl
sub
xchg
scas
orb
scas
mov
shll
mov
xorb
xchg
cld
push
mov
or
or
sbbb
test
ret
mov
adc
adc
sti
cld
lret
sub
push
jnp
jmp
popa
jle
or
cmp
adc
test
scas
lods
into
div
divl
les
push
add
cmpsb
dec
or
adc
mov
ret
nop
xchg
mov
movsl
lahf
push
inc
jns
xor
addr16
out
pop
fstps
sti
push
rorl
in
imul
test
xchg
mov
les
push
inc
aas
pop
or
sbb
cwtl
cli
push
adc
xlat
add
mov
data16
fldcw
mov
insb
inc
mov
andl
and
xchg
add
bound
jo
cwtl
sbb
mov
mov
fwait
in
sub
xchg
adc
rol
lahf
std
pop
push
movsb
adc
les
sbbl
mov
lcall
pushf
faddl
fldt
mov
mov
lcall
inc
mov
rcrb
mov
pop
jge
lea
add
bound
icebp
shr
jb
xchg
sbb
pop
mov
jp
enter
jmp
xchg
pop
cmp
add
cld
sbb
mov
xchg
inc
sub
out
jge
mov
je
sub
jb
inc
add
fs
and
out
xchg
pop
movsl
mov
in
jo
cmc
rdpmc
sub
rcrb
push
inc
jnp
cltd
mov
jb
lods
test
mov
shll
mov
aam
scas
dec
xchg
out
not
mov
jae
add
mov
aas
inc
mov
fcmovnb
mov
lock
xchg
push
fidivl
test
and
jmp
or
or
aaa
movsl
jnp
inc
andl
cmpsb
and
push
adc
jnp
cmp
mov
movsb
mov
push
stos
inc
bound
popf
xchg
jbe
jecxz
inc
sar
shll
pop
pop
js
jg
arpl
cmp
push
push
push
out
out
and
push
subl
ret
fcoml
pop
lahf
mov
fistl
mov
inc
add
dec
cmp
out
subb
aam
xchg
ja
mov
mov
jmp
inc
into
mov
push
rclb
cli
jge
add
subl
stc
push
inc
in
pop
adc
test
fisttpl
in
push
mov
add
cltd
mov
jb
call
test
shl
stos
sub
xor
lret
lds
in
shll
cmpl
add
int
movsl
adc
ljmp
int
mov
shl
xchg
inc
or
mov
lods
addr16
and
push
bt
jg
aam
mov
or
shll
cwtl
pop
or
cmpl
imull
push
das
in
inc
xor
mov
mov
repnz
lret
fldt
cmp
xorb
add
mov
xor
xor
popf
cmp
insl
mov
or
or
jns
sub
aad
mov
mov
xor
js
push
call
outsb
push
xchg
mov
iret
test
mov
imul
fcoml
xor
pop
dec
loop
adc
jl
idivl
mov
mov
je
dec
mov
adc
add
cmp
fwait
je
mov
cmp
sarb
cmpsl
xchg
jo
imul
lret
add
lock
adc
fwait
mov
xor
ror
scas
ret
icebp
cmp
adc
inc
and
outsl
outsb
in
fimull
cmp
pop
pop
or
mov
repnz
lret
and
push
stos
xchg
cmp
lret
push
addr16
lret
cmp
jne
lock
arpl
cld
fsts
dec
stos
fs
dec
fnstenv
addr16
dec
movsb
cmpsb
int
lods
mov
sbb
dec
pop
sub
mov
int
lcall
mov
inc
in
xlat
insb
shl
sbb
cmpsb
cltd
sahf
scas
shrb
leave
mov
das
and
push
imul
push
sbb
inc
cmp
dec
jp
js
adc
pop
sbb
rol
or
pop
movl
stc
loopne
sti
repnz
push
repz
xlat
scas
loop
pop
ficoms
xchg
insb
out
inc
pop
clc
jnp
pushf
ret
or
push
pop
cmc
test
push
inc
sub
xchg
repz
push
sbb
scas
jbe
outsl
add
ds
ljmp
in
cli
ljmp
xor
inc
movsb
rol
mov
mov
add
pop
fistpl
mov
sbb
or
mov
scas
sbb
and
xor
pop
es
cltd
decl
mov
push
jmp
jne
add
nop
addb
test
in
ret
xorl
in
add
adc
outsl
nop
lret
rcrb
lea
push
mov
and
test
bound
sbb
in
sub
pop
out
cmp
mov
das
push
push
fstpl
add
out
lods
aaa
pusha
adc
stos
and
cmp
lret
pop
decl
xchg
add
aam
cmp
dec
lcall
scas
add
nop
icebp
sub
out
imul
dec
cs
ret
inc
mov
inc
add
or
sub
popf
inc
cmpsl
dec
mov
and
add
lcall
sbb
pushf
lods
popf
inc
arpl
dec
push
xchg
pop
push
mov
aaa
gs
filds
int
sub
jnp
push
sarl
and
in
pop
xor
mov
inc
adc
andl
sub
add
adc
jae
mov
mov
js
adc
jne
dec
push
sahf
rolb
fucomip
cmpb
pushf
fs
cmpl
sub
fwait
inc
ss
dec
sub
call
sub
lea
jno
cs
mov
cmp
stos
cwtl
inc
imul
pop
mov
daa
out
mov
mov
gs
int
in
sub
outsb
cmp
or
inc
test
push
test
push
ret
ds
add
xor
or
es
sti
add
mov
pop
sub
pusha
push
cli
cmp
popa
cmp
fs
lret
mov
add
rcr
or
pop
pop
das
scas
iret
adc
in
mov
or
daa
lds
dec
out
dec
in
sub
adc
push
ltr
inc
stos
mov
ds
xchg
jno
into
xor
xor
std
fisttps
mov
jnp
movsb
movsl
mov
mov
or
and
out
jmp
xchg
clc
pusha
xchg
arpl
xchg
insl
cmc
mov
inc
scas
or
cmovge
inc
inc
xor
out
adc
mov
xor
sub
sbb
std
jb
inc
imul
imul
inc
xor
jno
aam
push
inc
xchg
in
repz
inc
aas
ljmp
scas
into
pop
cmp
adc
jg
jns
std
mov
movsb
outsl
adc
hlt
bound
ja
stos
out
stos
sub
sbb
or
dec
cmp
fsubs
filds
mov
mov
rcrl
push
hlt
sub
mov
mov
or
adc
lcall
dec
dec
dec
decl
push
aas
inc
lock
push
xor
frstor
pushf
mov
mov
outsb
xor
xor
lret
jo
mov
into
xchg
xor
sahf
stos
push
mov
lock
dec
pop
sbb
fisubrs
ss
and
cld
push
lahf
mov
rcr
int
in
imul
inc
xchg
dec
mov
push
lods
mov
push
in
jnp
lahf
pop
inc
mov
mov
negl
and
mov
inc
hlt
jo
rorb
add
bound
js
addr16
fldt
mov
outsb
pop
push
cli
cmp
aam
push
jnp
test
imul
jno
xor
icebp
iret
pop
rclb
fwait
mov
ja
inc
scas
out
idivl
popf
ljmp
sbb
xchg
aad
aaa
icebp
lret
insl
xlat
mov
into
sbb
outsb
jo
nop
xor
rolb
popf
jl
call
out
lcall
xor
pop
and
dec
les
divl
rol
les
pop
pop
mov
mov
dec
push
dec
rorb
dec
cltd
adc
out
icebp
jo
mov
mov
xchg
adc
pusha
outsb
cmp
dec
test
pop
call
cmpsb
stos
into
nop
inc
pop
sub
mov
push
sbb
aad
push
mov
sahf
jb
lret
rolb
fildl
daa
xchg
jns
int
pop
xor
scas
div
cltd
sbb
pop
loope
adc
mov
lret
jge
mov
test
jo
push
pushf
push
sub
mov
jae
lahf
push
adc
mov
cmp
pop
jo
fmuls
cmp
push
and
testb
loop
inc
pushf
mov
cmp
add
jecxz
inc
es
xchg
xchg
insb
push
fimull
insl
xor
push
jno
ljmp
mov
xor
cmp
mov
sub
repz
xchg
pop
and
shll
clc
sarl
adc
pop
je
xlat
cmpsb
out
xchg
loopne
sub
mov
repnz
inc
int
fadds
orb
js
cmp
cmp
dec
jae
clc
pusha
subb
mov
loop
add
pop
ss
push
and
push
int
outsl
aaa
adc
jne
fidivrl
xlat
jle
leave
scas
decl
in
cmp
or
call
and
push
mov
pop
mov
mov
mov
div
and
inc
xor
xchg
mov
push
sbb
push
push
shll
inc
push
add
xor
mov
cmc
xchg
out
sub
pop
inc
jmp
cmc
xor
xchg
fsubs
aad
push
mov
out
pop
clc
test
jl
imulb
cmpsb
add
repnz
push
pushf
stos
dec
and
cs
insl
cmp
sarb
filds
in
push
imul
push
dec
imul
nop
ss
inc
lds
jae
mov
mov
shl
in
out
mov
fisubrl
aaa
test
clc
call
push
in
pushf
add
add
das
jmp
inc
mov
pop
in
fs
adc
add
or
inc
mov
sub
push
mov
movsl
rcll
mov
icebp
sub
inc
pop
push
sbb
inc
push
imul
xor
scas
into
in
out
sti
iret
pushf
fs
and
lds
popa
or
jno
add
dec
pop
mov
xchg
popf
popf
mov
in
mov
push
add
push
mov
add
lock
pop
cltd
sub
and
andb
arpl
adc
mov
sbb
xchg
add
jne
dec
fstl
cmp
jo
jmp
or
pusha
pop
pop
repnz
adc
or
pop
mov
mov
fwait
sub
push
mov
ss
aad
jge
aas
loope
xchg
push
xor
pop
jl
jl
mov
cmpl
loope
and
and
lock
mov
add
jg
add
int3
rclb
cwtl
pop
cmp
add
les
mov
add
movsb
and
jbe
inc
push
jae
test
cmp
imul
mov
mov
in
push
shlb
xchg
fisttpl
push
add
int
dec
ds
fisubrl
adc
or
stos
jns
pop
xchg
arpl
mov
jecxz
adc
cmp
cld
xor
cmc
ljmp
fisubrs
outsl
ds
dec
pushf
push
cwtl
and
fcompl
xorb
repz
nop
jo
sub
mov
xchg
or
fwait
mov
test
cld
cld
out
jmp
sbb
mov
hlt
js
cwtl
cwtl
pop
sbbb
inc
loopne
in
add
pop
dec
out
xchg
pusha
scas
inc
xchg
cmpb
and
xorl
lods
ret
sarb
push
dec
jecxz
mov
inc
xor
push
adcl
leave
cmpsb
xchg
pop
and
inc
xchg
test
out
lods
xor
mov
jb
fsubs
outsl
pop
mov
stc
lahf
mov
lret
adc
scas
pop
fcoml
test
sbb
inc
add
sub
test
movsb
scas
fs
scas
xor
jp
xchg
stc
in
cmc
xchg
ret
popf
jmp
je
cwtl
xchg
xor
or
mov
dec
jnp
xchg
leave
hlt
fs
inc
xchg
or
in
mov
adc
add
sbb
jno
push
das
scas
and
repz
xor
iret
add
in
pop
rcrb
xor
leave
arpl
xor
mov
push
loopne
mov
data16
cli
movsb
iret
fwait
imul
ss
jmp
into
lds
movsb
adc
push
mov
mov
iret
repnz
out
fisubrl
and
mov
in
add
insl
iret
cwtl
fsubrl
inc
mov
rolb
mov
mov
popf
in
loope
pop
dec
adc
and
loop
pop
inc
jge
ja
jl
les
pop
mov
jb
inc
cmpsl
and
mov
xlat
das
cmpsl
cld
jmp
sbb
add
or
stos
movsb
rorl
mov
clc
mov
loopne
mov
cmpsb
ret
test
adc
sbb
aam
loope
clc
sbb
mov
jge
test
and
push
shll
movb
fsubrs
xchg
in
repz
pop
dec
xor
ds
cmc
hlt
call
xchg
insl
push
subb
lret
add
sbb
loopne
sub
sub
mov
fiadds
icebp
jo
lcall
sub
cmp
lods
jge
pop
sub
dec
int
cmp
lods
imul
dec
rolb
movsb
inc
and
mov
sbb
xchg
bound
adc
jmp
xor
mov
roll
into
pop
jge
loope
in
push
movsb
and
pop
dec
fisubl
divl
mov
push
imul
jmp
xor
imul
fnstenv
pusha
popa
mov
lcall
fmull
sbb
roll
clc
and
or
call
sar
mov
out
in
pop
sbb
xor
lahf
testl
xor
lcall
jg
sub
jbe
in
cmp
imul
addl
push
jnp
jns
mov
sub
shlb
add
cwtl
sbb
mov
mov
stos
lret
pop
sub
xor
pop
pop
inc
push
cmp
daa
dec
inc
outsb
mov
daa
dec
sub
test
push
xor
test
inc
mov
gs
push
dec
xlat
push
stos
test
aad
inc
dec
xchg
lods
mov
in
push
testb
aam
ficoms
jecxz
jbe
mov
into
std
adc
push
in
xor
adc
aad
mov
out
fcmovne
out
mov
popf
dec
cltd
cli
fidivrl
loope
sub
sub
das
fcomps
popf
push
pop
pop
push
repz
fistl
lock
jno
mov
xor
or
cmp
or
sbb
adc
outsl
insl
cmc
test
mov
pop
or
cwtl
cmp
xchg
push
das
dec
mov
lret
mov
xorl
lret
adc
lcall
dec
fdivrp
cli
lock
sbb
das
cwtl
cmpl
fcoms
nop
mov
test
jae
inc
movsl
inc
xor
mov
subb
xchg
mov
mov
mov
rorb
xor
dec
add
sub
sbb
stos
xor
shlb
shrl
xchg
incl
leave
into
and
fsubr
cli
popa
and
clc
jecxz
das
mov
inc
movsb
adc
mov
mov
sub
loop
fildl
aaa
add
sbb
fwait
aam
mov
ja
xchg
mov
push
jbe
pop
mov
icebp
cmc
mov
rep
inc
mov
dec
xorb
aad
lcall
mov
pop
sbb
jge
lcall
adcb
add
and
mov
xchg
je
test
push
lock
arpl
arpl
pop
or
nop
loope
cmp
in
xor
mov
inc
or
addl
dec
jne
scas
pxor
mov
mov
pop
cli
push
inc
pushf
xorb
cmp
gs
aam
or
inc
leave
enter
loop
xchg
cmp
push
sub
inc
inc
inc
jnp
jnp
bnd
movsb
loope
mov
out
mov
cs
pop
jbe
out
dec
xchg
negb
adc
lods
push
mov
sbb
mov
cmpsl
in
mov
insl
jmp
jns
inc
ljmp
push
pusha
mov
std
data16
push
push
inc
or
mov
dec
xor
iret
nop
dec
push
fcmovnu
fmul
shl
cmp
adc
jg
push
push
pop
in
mov
sub
jmp
pop
push
add
fimull
mov
pop
ljmp
xchg
sarb
in
xchg
or
sub
fimuls
sbb
fldt
leave
push
aam
push
push
adc
or
js
loopne
push
jo
ficomps
mov
pop
mov
inc
xlat
inc
mov
mov
mov
cmp
pusha
xchg
jbe
jo
loop
popf
int
push
ficomps
stos
js
xchg
sub
sub
mov
bound
testb
xchg
xchg
test
pop
ret
loop
sbb
testb
adcb
mov
stos
pop
out
cmpsb
and
mov
jp
adc
mov
insl
jl
sub
mov
pop
fmull
sarl
sbb
push
icebp
dec
fwait
xor
add
popf
inc
or
lock
cmp
mov
int3
mov
push
insl
sub
jmp
pop
mov
int
xor
jg
pop
nop
call
push
sub
and
sbb
mov
dec
cwtl
push
imul
and
pop
js
xor
push
push
sub
add
push
add
xor
cli
movsl
xchg
fadd
mov
mov
pop
inc
xchg
xchg
addr16
mov
cltd
xchg
jp
cmp
add
jge
mov
les
test
mov
add
or
mov
dec
std
mov
jmp
mov
ljmp
xchg
hlt
cmc
jnp
arpl
xchg
add
pop
add
lods
mov
push
inc
inc
xor
mov
pop
mov
xor
mov
aaa
imul
mov
sbb
and
or
mov
cmp
cmp
xchg
lahf
cmpsb
mov
jae
into
es
fs
leave
jmp
mov
or
inc
arpl
mov
and
xchg
or
daa
int3
sub
rorb
add
or
dec
pop
hlt
jl
or
popf
aad
sbb
out
mov
push
cmp
mov
je
jl
movsl
iret
inc
pop
pop
sbb
clc
dec
jl
and
add
mov
aam
inc
jne
xlat
addr16
pop
mov
pop
cld
xchg
popa
and
gs
jp
pop
hlt
jp
lcall
test
jns
push
add
int3
dec
ret
es
lds
sbb
insb
imul
aad
pop
imul
sbb
add
and
mov
out
push
imul
dec
jo
jp
aam
pop
push
pop
insl
or
sub
mov
test
cmpxchg
sbb
push
mov
push
imul
xchg
out
dec
xchg
sub
out
or
sbb
mov
les
test
int
das
ljmp
dec
jmp
icebp
mov
cmp
or
cmp
leave
iret
add
push
jbe
or
aam
mov
push
pop
pop
fs
sub
and
push
sub
mov
adc
aas
pushf
adc
cmp
jg
iret
stc
mov
push
cmpsl
mov
subb
stos
jp
inc
xor
mov
inc
mov
jae
mov
inc
adc
add
lahf
adc
lahf
fwait
ret
rol
add
movsl
dec
xchg
and
lcall
xor
mov
lods
sti
sahf
insb
xchg
mov
loopne
push
push
test
arpl
adc
cmp
lods
dec
push
cmpl
sbb
roll
sub
jge
jge
push
xlat
push
xchg
adc
mov
scas
cltd
add
xchg
xor
sub
scas
das
mov
iret
or
gs
push
dec
inc
mov
sbb
shl
inc
insl
adc
mov
mov
int3
cmc
fdivp
iret
es
jnp
xchg
fstpt
popa
sub
enter
es
test
mov
icebp
and
iret
pushf
mov
dec
sub
jno
les
push
push
adc
push
sub
xor
or
dec
dec
imul
push
inc
dec
cs
bound
das
mov
repz
lcall
fsubrl
les
adc
imul
in
sbb
ret
mov
jno
mov
shll
test
mov
cmp
pop
inc
fwait
inc
clc
jmp
inc
adcb
inc
inc
adc
dec
jnp
adc
insb
call
sbbl
jecxz
and
lcall
das
test
jnp
stos
pmulhuw
adc
ret
es
or
cwtl
sbb
push
or
ljmp
mov
jmp
sti
fnstcw
ror
add
xor
adc
rcr
test
cltd
mov
push
cmp
adc
pop
int3
push
push
add
fsubl
mov
fcmovnb
add
pop
add
nop
mov
shll
into
cwtl
andb
xor
xchg
leave
sbb
mov
lods
pop
addb
push
or
ret
xchg
xchg
ljmp
ret
ficompl
pusha
popf
or
out
and
lcall
cmpsb
jg
push
lret
loope
icebp
push
test
xchg
xchg
mov
sbb
lods
lret
mov
mov
imul
fdivl
in
iret
das
inc
popf
adc
push
aas
fwait
jae
adc
cltd
cmpl
mov
ss
lret
dec
packsswb
imul
bnd
mov
cmp
adc
enter
popa
mov
cltd
adc
sbb
es
cmpl
cmp
sub
test
xchg
inc
pop
lret
insb
xlat
call
es
xlat
cltd
push
inc
mov
leave
inc
mov
imul
xlat
loope
imul
mov
xor
sub
cmp
cmp
jno
repz
outsb
xor
ss
aad
lret
sub
push
shlb
jp
pop
dec
push
mov
and
or
add
push
push
ret
es
dec
xchg
and
subb
jge
imul
ficompl
mov
add
sbb
sub
dec
adc
mov
call
adc
mov
inc
shll
fistpll
push
push
ss
int3
push
mov
pop
mov
sahf
in
xchg
or
jbe
jecxz
add
sbb
sti
lret
mov
jno
call
sub
iret
insl
push
aaa
outsb
xchg
mov
jne
mull
mov
sub
sti
shll
mov
jge
jne
ret
cmp
adc
xchg
inc
test
sbb
or
mov
push
mov
add
lods
or
xchg
cld
sub
test
cmp
les
push
cmp
push
out
lods
addr16
into
pop
insb
jno
sbbb
adc
sub
push
outsb
dec
and
cmp
aad
jg,pn
lods
inc
xchg
add
mov
or
fadd
popf
xor
pop
or
jle
xor
mov
push
in
adc
loopne
sub
and
andb
pop
call
out
insl
mov
push
int3
xor
xchg
jae
lahf
cmp
lret
mov
test
outsb
sbb
icebp
mov
push
mov
into
jbe
dec
mov
and
jp
xorb
stos
push
jl
pop
dec
adc
xor
in
cmp
lret
in
add
hlt
mov
jb
leave
aad
popa
repz
add
jge
cltd
or
sub
adc
mov
add
push
sub
xor
movsl
clc
fsubr
cmp
mov
or
xor
mov
loop
adc
sahf
xor
stos
pop
or
pop
xchg
shrl
movsb
jae
add
cmpsl
out
hlt
outsb
mov
es
jl
dec
insl
sarb
jp
movsb
stc
dec
mov
ds
int3
add
inc
repz
jge
mov
adc
dec
push
orl
fldlg2
rcrb
jle
push
hlt
fsubs
cmc
push
mov
ret
jmp
dec
mov
loop
lret
rcl
rcll
mov
cmp
lahf
mov
sti
pop
mov
fldcw
mov
jecxz
inc
mov
sbb
adc
testb
push
popf
mov
sbb
xlat
jp
add
ljmp
mov
mov
inc
lret
push
jmp
adc
rorb
mov
add
lock
sub
xchg
dec
and
mov
mov
pop
sti
cmp
arpl
loop
movsl
push
lret
sbb
adc
lret
xchg
js
fstl
cmpsl
icebp
push
testw
push
outsb
adc
insb
sarb
repz
movsb
std
cltd
stc
sarl
mov
fmulp
push
jg
mov
out
stc
xorb
cmc
sub
inc
out
dec
inc
mov
notl
setb
or
sub
mov
adc
clc
lods
rol
stos
xchg
stos
pop
or
adc
in
imul
xchg
out
inc
negl
sbb
test
jl
repnz
fbstp
arpl
sbb
mov
sbb
inc
pop
iret
adc
cs
cmp
sbb
xchg
cli
jae
xchg
out
pop
cmpsb
sar
outsl
fcmovbe
ja
mov
data16
arpl
mov
mov
mov
call
lret
pop
inc
sbb
sbb
push
data16
mov
mov
xchg
xchg
stc
imul
mov
adc
xlat
xor
bound
mov
outsl
mov
je
popf
loope
test
mov
mov
stos
push
rol
sbb
mulb
or
inc
scas
xchg
xchg
bound
mov
sub
dec
or
mov
jge
fwait
mov
lret
aaa
inc
adc
mov
fisubs
aas
clc
push
cltd
add
dec
lret
int3
pop
das
mov
je
addl
adc
aam
cli
and
packuswb
nop
jno
sbb
push
out
jae
sahf
lret
fsubrp
out
lret
js
jg
out
add
fdiv
xchg
mov
mov
adc
add
sbb
sub
mov
fstps
or
lods
aad
mov
adc
out
pop
pop
arpl
aaa
xchg
and
fsts
shl
clc
adc
fs
lock
lea
pop
imul
sbb
mov
push
add
push
or
out
sbb
fs
negl
mov
mov
mov
push
aas
lods
mov
ljmp
and
push
adc
pop
push
rorl
lret
hlt
enter
shll
nop
xor
je
inc
cmpsl
mov
stos
into
add
ret
add
mov
jns
outsl
mov
xchg
cmpsb
jne
popa
cmc
std
aas
sub
adc
das
xchg
pop
cld
sbb
mov
int
into
xchg
sbb
or
mov
cmp
aad
sub
out
push
mov
adc
mov
add
pop
mov
jg
mov
mov
push
hlt
add
mov
lahf
add
cld
jbe
cmp
cmpsl
push
xor
iret
repnz
mov
mov
pop
adc
sbb
sti
lods
mov
pop
sbb
mov
push
hlt
mov
aas
mov
push
mov
and
aaa
cmp
add
or
xchg
mov
xor
cld
mov
lcall
pop
dec
dec
aam
loope
push
addr16
or
addb
sti
dec
mov
mov
mov
sbbb
pop
inc
cld
or
cmpsb
dec
shl
aas
adc
push
stc
fnstcw
in
mov
pop
mov
and
mov
rolb
or
mov
sbb
popf
or
repz
bound
sub
cs
imul
scas
cmp
subb
push
rcr
fmuls
mov
jp
sbb
dec
call
xchg
push
into
xchg
or
aam
inc
loope
jo
push
js
dec
push
scas
mov
cmp
fdiv
subb
push
push
test
push
icebp
pop
mov
xchg
into
add
xorb
jae
ljmpw
sbb
push
clc
mov
inc
in
es
mov
cmpsl
incl
mov
cmpsb
and
mov
xchg
inc
je
cmc
sbb
into
addb
xor
cmp
fiaddl
fcom
jmp
cmp
mulb
xchg
pop
mov
xchg
popf
cs
pop
cmp
xchg
jb
adc
loope
fcmovnb
mov
popf
aaa
cltd
mov
ret
out
lahf
insb
je
das
jns
xchg
or
adc
push
pop
es
fadd
mov
outsb
in
pop
sub
ds
xchg
outsl
les
add
mov
jge
pop
adc
xor
jae
popf
cld
add
push
fisttps
outsl
popa
in
mov
xchg
pop
lcall
jecxz
lret
sbb
sub
pop
aas
mov
cmp
mov
cmp
mov
mov
xchg
adc
hlt
xlat
add
jl
sahf
sub
lahf
inc
xlat
mov
or
sahf
sbb
inc
cwtl
pop
pop
test
pop
sbb
push
jmp
out
lods
fwait
xchg
and
push
xchg
ret
push
cmc
push
push
popf
aam
loope
cmp
ja
clc
insl
or
xchg
fsubrs
lods
ret
inc
loope
xor
push
xchg
fchs
mov
out
push
lcall
inc
sub
movsb
push
popl
je
inc
sub
mov
popf
stc
pop
jae
jge
insb
jle
jmp
cmp
clc
xchg
out
mov
repnz
jmp
push
dec
and
pop
js
xchg
sbb
and
sub
pop
aad
jl
das
stc
xchg
into
xchg
sbb
or
push
in
dec
cld
mov
loopne
sub
mov
arpl
iret
mov
dec
mov
lea
or
jg
inc
decl
pop
jmp
jecxz
in
lods
test
cmp
shl
cmpsl
add
mov
add
call
out
andl
jmp
pop
mov
loope
cli
in
xor
pminub
scas
mov
xor
fs
mov
xor
loopne
and
xchg
pop
addr16
outsb
push
int
dec
shlb
sbb
adc
aad
or
xchg
xor
aad
lcall
and
mov
sahf
test
xor
mov
fisubrs
les
pop
ds
int
es
repz
shll
mov
xchg
adcl
lret
cmpb
cmpsl
dec
lock
lods
test
sub
push
stos
and
xchg
pop
jb
aas
pop
andb
bound
pop
xor
test
insb
dec
stos
xor
pushf
add
pop
into
push
mov
add
shrl
repnz
mov
pop
push
and
out
scas
aad
push
pop
cmp
aad
xchg
roll
mov
jp
cs
outsl
push
mov
fistpll
dec
adc
pushf
pop
out
fsubr
push
inc
clc
fsub
mov
jo
push
scas
pushf
andb
push
or
in
jp
insl
out
mov
iret
jno
lods
rcrb
int3
nop
movsl
jl
cs
out
push
xchg
cmp
insb
inc
mov
jmp
imul
mov
ss
xor
rcrb
dec
std
fwait
pop
icebp
int3
pop
std
jbe
in
popf
xor
iret
out
adc
test
xchg
lret
ficoms
sbb
or
sti
jb
xchg
addl
mov
adc
adc
push
ret
mov
dec
rcrb
or
mov
pop
mov
jmp
out
jbe
cltd
scas
cli
loop
xor
sbb
xchg
jne
das
fcoms
fcomps
fldenv
in
iret
cwtl
shll
dec
mov
or
sbb
fwait
jne
dec
lcall
cltd
mov
xchg
jmp
push
movsb
push
push
pushf
sub
in
ds
sbb
sbb
dec
sahf
fstps
fdivrl
adc
ss
ss
ljmp
xchg
add
and
or
pop
sti
lret
adc
add
test
or
pop
or
inc
fnsave
ss
iret
repnz
or
mov
test
gs
lret
out
sbb
mov
shld
pop
out
in
out
incl
cmp
or
or
pop
jmp
lods
fdivrl
mov
lahf
mov
lea
sub
mov
mov
xchg
je
and
cmp
cmp
cltd
cltd
mov
cmpsl
jnp
mov
inc
push
out
andb
xchg
mov
imul
jb
nop
push
push
xor
int3
stos
mov
lea
movsb
fldcw
int
pop
out
xor
fadds
ja
mov
decb
and
mov
pop
mov
imul
loop
xchg
lds
bound
sbb
pop
xor
lods
stc
cmp
ja
adc
push
jmp
dec
xor
inc
mov
inc
dec
lret
pop
fstl
in
or
mov
into
int3
mov
add
hlt
fcmovb
je
dec
dec
outsl
sub
out
jecxz
xor
test
ret
or
jmp
unpcklps
cwtl
pop
in
nop
cld
sahf
push
sahf
mov
imul
outsl
mov
xchg
and
cmc
dec
rcrb
ljmp
sbb
in
xchg
pop
mov
push
cmp
faddl
sbb
add
arpl
outsl
cmpsb
bound
mov
rcrb
pop
mov
mov
in
out
adc
std
push
in
inc
in
add
mov
idivb
stos
add
pushf
push
fsubl
test
adc
out
rorl
testb
jns
mov
jg
js
sub
std
mov
cmpl
stos
add
loop
dec
or
and
adc
cwtl
and
push
ret
or
cwtl
xchg
icebp
or
ret
mov
inc
sar
es
aas
loope
mov
lock
lret
jno
sub
mov
nop
mov
and
dec
out
lahf
in
xchg
mov
and
xor
jmp
add
ja
mov
in
je
in
shll
in
stos
shll
sub
dec
in
xchg
enter
cmp
pop
xchg
inc
in
and
fstps
mov
lods
xchg
xchg
fbstp
pop
or
movsb
mov
ljmp
mov
in
pusha
jo
mov
loop
add
fdivrl
in
xor
enter
xor
jnp
add
leave
call
cmp
lahf
sti
lcall
ret
loopne
mov
xchg
outsb
loope
mov
and
pop
push
insl
sti
dec
dec
push
cmp
retw
push
lahf
mov
xor
dec
adc
leave
pop
jp
inc
xlat
out
das
push
pusha
sbb
xchg
inc
add
or
mov
jmp
addr16
cltd
sarb
call
push
and
cmp
mov
jb
iret
addb
insl
rcrb
notl
insl
aas
mov
dec
insl
push
add
movb
push
pop
out
jo
or
stos
lea
xor
lcall
xor
mov
sbb
push
sbb
push
add
adc
notb
imul
movsb
ss
pop
dec
enter
xorb
push
adcb
in
add
xchg
mov
pop
push
inc
pop
pop
mov
inc
push
addr16
and
sub
lods
out
add
sbb
dec
int3
push
clc
jp
mov
pop
mov
outsl
out
js
lcall
popf
and
test
and
add
inc
pop
movsb
pop
popl
jbe
idivl
dec
bound
cwtl
mov
cmpsl
movsb
jo
or
data16
mov
jb
or
imul
and
sbb
jbe
cmp
lea
push
lods
mov
cmp
test
imul
pinsrw
sbb
mov
sub
push
lcall
fcmovnu
jno
dec
mov
cmpsl
fistpll
pop
sti
daa
pop
scas
lods
xlat
stos
fildll
jb
mov
push
sbb
push
jecxz
orb
stc
gs
cli
in
outsl
bound
jecxz
je
xor
fmuls
mov
pushf
flds
jnp
add
popf
dec
ret
xchg
imul
mov
cmp
xchg
add
decb
je
fsubrs
mov
sub
dec
cmc
xchg
das
shrb
addb
outsb
shlb
sub
sbb
lds
fbld
sub
dec
scas
mov
not
fadd
jp
mov
fcoms
mov
add
insb
cmp
imul
movsb
test
mov
rorb
outsb
cmpsb
xor
dec
push
jmp
cmp
arpl
xchg
lods
mov
outsb
repz
js
xor
lock
pushf
out
out
xchg
pop
loope
push
fnsave
test
enter
cmp
iret
pop
aad
jmp
dec
adc
movsb
and
pop
push
push
aam
cmp
pop
adc
cs
push
cs
add
jae
push
push
xchg
add
rol
adc
xchg
fistps
and
cmp
test
mov
jne
fisttpll
hlt
out
inc
sub
rcl
sarb
pop
out
enter
test
lods
loop
lock
xor
adc
or
jo
inc
out
adc
and
out
sub
sub
fisttps
mov
pop
bound
cld
jo
mov
sbbl
sub
stc
cld
or
cmpsb
ss
je
cmpsl
mov
xor
mov
or
pop
in
je
sahf
mov
sub
push
pop
pop
je
loop
sub
fimuls
aad
xchg
sub
dec
idiv
popa
dec
push
repnz
add
shr
dec
xchg
xor
sub
push
mov
sub
scas
lret
push
int
popa
xchg
mov
movsl
jp
ficoml
call
push
cmp
lret
push
roll
insl
inc
je
push
and
jmp
jl
test
xchg
mov
pop
in
inc
xlat
cmp
lret
ret
jns
sbb
das
mov
dec
or
in
lods
mov
call
push
popf
pop
dec
dec
xor
mov
shlb
shlb
jl
sub
mov
cmp
cmc
loop
jb
mov
ja
mov
xchg
adcb
adc
addr16
xchg
clc
mov
divb
pop
push
mov
addr16
popf
push
daa
xchg
insb
inc
adc
sub
xchg
ja
das
pop
jecxz
fsubrl
jno
xlat
mov
jnp
pop
orb
repnz
addr16
outsb
fsubrp
pop
and
dec
mov
mov
arpl
sub
dec
inc
syscall
mov
add
sub
jno
jp
fucom
push
dec
and
mov
sub
fsts
jmp
xchg
mov
sbb
mov
cld
push
data16
mov
push
sub
es
sub
cltd
icebp
push
je
dec
int
pop
gs
xchg
mov
insb
dec
mov
jle
mov
adc
leave
enter
and
adc
inc
inc
push
pop
ljmp
divl
lods
insb
pop
jle
icebp
pop
mov
out
cwtl
mov
pop
jo
adc
jp
push
jge
jecxz
imul
xchg
dec
je
inc
sbb
push
lods
and
mov
jbe
mov
jns
in
aam
adc
inc
imul
fwait
popa
int3
and
or
enter
aas
and
mov
cwtl
aas
push
mov
dec
adc
jno
push
imul
leave
loop
in
rolb
mov
aas
mov
lcall
dec
cwtl
and
mov
les
out
rcrb
add
mov
test
cmpsl
xlat
fmulp
and
mov
or
lods
dec
cmp
stos
adc
fidivl
repz
xor
mov
popf
inc
pop
nop
jnp
jge
cmp
in
dec
jle
ljmp
xchg
test
stos
jne
fsubr
popf
ds
inc
lcall
xchg
int
ss
arpl
mov
push
pop
xchg
and
les
pop
push
cmpsb
xchg
daa
imul
or
jp
pushf
loopne
or
in
out
fisttpl
movsl
in
inc
push
ror
mov
rcrb
sub
fldenv
or
pop
movsb
lods
fstpt
out
pushf
icebp
ret
jns
push
lock
mov
add
outsb
xorb
repnz
add
mov
dec
mov
dec
cmp
jb
and
jns
sub
stos
jno
lret
fwait
insl
sbb
repz
in
sub
cmp
movsl
gs
push
aad
out
shr
jb
cltd
in
xchg
lret
cmpsl
cmp
shl
xchg
cmp
lret
cmp
in
scas
and
cmp
jle
shlb
xchg
std
arpl
inc
iret
ljmp
pop
rorb
les
cmp
adc
gs
lods
cmp
dec
insb
test
in
sub
stc
icebp
inc
mov
sbb
mov
ja
hlt
fucomi
lahf
mov
mov
push
es
mov
xchg
ds
xchg
and
jmp
addl
cmp
pop
lods
dec
lea
xchg
push
iret
mov
adc
mov
mov
pop
pop
pop
jge
pop
or
mov
aaa
jns
xchg
jo
push
adc
mov
jg
adc
pop
push
pop
lahf
xor
sub
xor
imul
jge
call
adc
sub
sbb
insl
outsb
mov
in
cwtl
loop
fst
outsb
test
lods
cmc
int3
mov
jno
fadd
push
lds
dec
adcb
out
addr16
lahf
ljmp
bnd
aad
mov
push
jnp
cmc
jge
outsb
sbb
adc
push
inc
aam
inc
aad
lret
test
add
fdivrs
dec
cld
lahf
jmp
jge
sbb
mov
adc
pop
xchg
dec
jnp
or
popf
sbb
sub
orl
repnz
jnp
pop
cmp
xchg
lods
lret
xchg
xor
lods
jg
sbb
stos
sub
push
lock
mov
xor
jle
adc
stos
cmp
jns
push
fstps
cmp
cld
dec
xor
enter
pop
data16
jg
inc
add
popf
push
aaa
pusha
or
lea
aam
lret
ret
ljmp
imul
or
xor
call
scas
cmp
test
std
adc
dec
add
repz
es
fisubrs
fsubrl
mov
mov
xor
shll
cmp
je
sbb
jmp
test
shl
jno
jne
idivb
adc
and
gs
adc
mov
pop
sbb
mov
xchg
push
inc
add
imul
aas
fs
pop
insl
jns
pop
fisubrl
cmc
xchg
js
scas
in
lods
mov
fstps
lahf
cmp
push
icebp
or
test
nop
push
xorl
inc
dec
sub
push
ret
idivb
jle
pop
mov
not
mov
fidivrl
jmp
lods
or
int
mov
mov
in
or
pop
mov
pop
cmpsb
jle
cld
adc
rolb
xor
cs
ret
or
fistl
imul
sti
lcall
push
or
popa
leave
and
xlat
add
pop
outsl
mov
out
ret
push
scas
push
mov
xchg
lret
leave
adc
xchg
fmull
pushf
icebp
cmpsl
jnp
lock
imul
aad
out
adcb
add
add
out
ljmp
stos
and
pop
loope
xchg
es
js
lret
nop
movsb
mov
jae
inc
mov
ljmp
cmpsl
nop
cmpsl
clc
cltd
jmp
add
scas
repnz
push
xlat
dec
mov
xchg
cltd
loop
fcoml
std
dec
xor
imul
into
fwait
arpl
imul
cld
stos
mov
fldcw
and
std
inc
ljmp
dec
mov
aam
pop
push
dec
shll
push
gs
jp
outsl
adc
cwtl
add
loopne
jmp
push
test
jmp
add
mov
outsb
and
add
sbb
jno
jl
out
sub
daa
movsl
or
int
sbb
adc
ljmp
cmpsb
cmp
rcrl
sbb
dec
mov
and
xchg
sti
pop
or
insb
dec
jecxz
dec
data16
lea
ret
jne
cltd
push
jns
dec
dec
lret
rcr
add
jg
mov
xchg
mov
sbb
jmp
cmp
out
adc
jns
insb
mov
push
imul
pushl
sbb
jne
inc
cwtl
mov
sar
adc
call
mov
ss
push
xor
filds
sub
das
add
aam
sbb
fisubrs
push
dec
mov
sub
inc
test
cmp
sbb
call
mov
cltd
loopne
mov
cmp
cmp
insl
push
and
dec
xchg
jns
sbb
shrb
lret
push
fwait
sub
jns
mulb
iret
ficomps
repz
add
or
mov
mov
int3
aam
jmp
mov
adc
nop
aas
data16
call
ss
out
ret
lock
push
jno
icebp
call
cmp
sbb
add
and
out
xor
imulb
jns
xor
jne
dec
xlat
lock
btc
mov
pop
xchg
ret
cmp
and
jmp
sbb
jnp
popa
lcall
mov
repz
scas
fstl
mov
inc
add
jmp
lock
stos
sarl
xor
sbb
clc
popf
fwait
stos
fwait
out
lods
xchg
lcall
inc
gs
movsl
add
test
test
cmpsl
inc
xchg
das
jle
mov
mov
lcall
enter
mov
xor
gs
rcrl
pop
xor
outsl
mov
xlat
sbb
cmp
mov
fs
loopne
hlt
sub
mov
sub
dec
and
jle
in
aas
movsl
jnp
push
inc
scas
imul
inc
sub
inc
cmp
fadds
test
pop
jge,pn
mov
cmp
pop
mov
and
arpl
or
ja
clc
fimuls
ret
fiaddl
add
movsb
int
lods
xrelease
jp
or
std
negl
std
cmp
inc
js
dec
stos
stc
sub
adc
inc
cmp
adc
iret
sbb
xor
fnstcw
pop
jae
das
mov
dec
std
movsl
inc
mov
jl
jg
push
jl
hlt
sbb
jae
or
jmp
andl
mov
xchg
cli
cmp
divl
aad
xor
sub
scas
push
jnp
lret
jae
out
xor
lret
and
xor
add
fwait
scas
mov
pop
adc
aaa
lahf
cmp
pop
or
adc
cmovns
cwtl
xchg
lods
cld
cmp
xor
pop
rol
jb
sub
dec
aaa
das
loope
sbb
mov
cld
xor
inc
pushf
push
sbb
pop
aaa
mov
ja
loop
pop
sbb
add
jp
push
shlb
insl
sub
xor
icebp
decb
test
mov
and
orb
xor
sub
push
xchg
sbb
and
aaa
insl
jnp
fiadds
nop
fcomps
sbb
inc
in
mov
cwtl
mov
mov
and
xor
and
pop
bound
dec
in
imull
hlt
cwtl
andb
aad
mov
adc
sub
rorl
jno
xor
jns
push
or
inc
imul
fldt
repnz
pop
movsb
mov
adc
dec
dec
sub
jle
mov
enter
xor
std
es
fnstenv
fidivs
sbb
dec
fsubs
out
cld
sarb
mov
fadds
adcb
insb
fidivrs
in
call
imul
repz
leave
fbstp
aas
sbb
mov
mov
and
test
lods
aad
neg
sub
jno
inc
jnp
dec
loope
ja
test
mov
dec
popf
adc
sahf
inc
xchg
adc
lcall
test
mov
je
enter
data16
je
sbb
mov
lods
lock
cwtl
int
ljmp
or
pop
xchg
mov
ss
jb
pop
xchg
out
jle
sub
imul
aam
lea
loope
popf
pop
jp
out
inc
pop
xchg
mov
xor
jno
or
clc
jp
out
or
xchg
add
ficoms
jle
lea
das
push
sbb
es
lea
int
mov
jo
mov
pushf
sbb
sahf
inc
andl
and
imul
cltd
jl
mov
or
je
fsts
jb
pop
add
fdivl
in
lahf
enter
sti
scas
xor
mov
int3
dec
lret
jae
xchg
dec
jle
add
fldl
inc
xchg
push
xchg
xchg
mov
out
inc
mov
or
scas
mov
orb
pxor
cmpsb
fwait
inc
push
fdivrs
adc
test
fidivrl
hlt
cmpsb
push
dec
pop
mov
push
mov
and
dec
shlb
inc
in
cmc
pop
cmp
shrl
cld
scas
cmp
jle
xchg
andb
jmp
or
faddl
or
jb
xor
pop
sub
xchg
mov
add
scas
dec
push
inc
out
fnstenv
pop
mov
in
sbb
fisubl
shlb
xchg
jecxz
sti
das
push
ds
loop
in
rcr
mov
hlt
pop
pop
fidivs
xchg
sbb
xchg
hlt
sub
sub
mov
sub
inc
mov
cmp
push
fwait
in
jmp
hlt
lds
dec
repnz
cmp
jbe
bound
lods
cmp
sub
lcall
mov
cmpsb
sbb
jno
inc
int
adc
fldcw
decl
fadds
jbe
cmp
aas
aaa
pop
lock
cmc
xorb
mov
clc
aaa
shll
ret
shlb
arpl
xor
sub
imul
push
lret
bnd
adc
dec
pusha
in
imul
or
fldcw
adc
pop
or
rol
sahf
loop
push
test
repz
jmp
ss
call
clc
xchg
ss
sub
jg
sub
and
in
inc
cli
push
pushf
sub
and
into
push
mov
sub
inc
add
test
xor
arpl
pop
lock
enter
push
imul
xchg
sbb
add
pusha
outsl
ljmp
jnp
xor
stos
adc
lods
lds
pusha
xchg
mov
xlat
popa
mov
add
xchg
and
dec
lea
xor
imul
mov
xchg
mov
in
or
sarb
lock
ljmp
pop
pop
icebp
aam
add
or
cmp
xchg
mov
mov
aad
mov
lods
mov
test
pop
adc
xchg
imulb
icebp
or
inc
xchg
js
adc
scas
adc
lea
push
es
jno
jns
pop
adc
jno
jp
nop
inc
testl
dec
ret
mov
inc
and
sub
cltd
enter
ja
nop
xchg
inc
stc
cmp
or
xchg
jnp
incl
mov
mov
imul
mov
jg
mov
push
xor
and
aam
mov
xor
adc
mov
xor
jnp
rorb
rol
mov
sub
imul
loop
sub
inc
int3
imul
or
xchg
movsl
add
repz
hlt
rolb
xor
pusha
or
mov
mov
into
aam
push
iret
mov
sub
rcr
ljmp
daa
hlt
fwait
loopne
inc
and
sahf
popf
testb
pop
pop
mov
arpl
cmp
adc
or
ja
lahf
arpl
mov
jecxz
sub
jae
sbb
cmp
sahf
push
xchg
icebp
mov
mov
adc
enter
test
inc
cltd
mov
fwait
call
cmp
rol
add
xorl
xor
and
push
sbb
aas
rolb
ljmp
int
addl
sub
hlt
fistpll
jmp
jmp
inc
or
adc
ds
and
sub
outsb
sbb
jge
cmp
adc
data16
xor
xchg
cli
mov
push
xor
shrb
shl
lret
in
gs
fldl
cmp
lahf
imul
imul
clc
xor
inc
xchg
dec
mov
out
pop
pop
in
iret
in
dec
inc
scas
adc
imul
or
sbb
mov
sub
pop
cmpl
inc
push
mov
mov
cmp
xchg
lahf
lret
jne
adc
dec
sbb
fwait
xchg
and
push
fstpl
push
cmpsb
adc
testb
fsubs
or
push
mov
dec
jp
xor
or
cmp
into
call
cltd
mov
cld
adcl
inc
fwait
and
pop
in
rcrl
jl
scas
pop
inc
push
test
fnstsw
fsubrl
mov
xchg
flds
cli
andb
cmp
data16
aad
xchg
mov
push
aaa
dec
ja
sbb
dec
sub
ret
frstor
movlps
cmp
sub
shrl
dec
mov
mov
imull
xor
shr
daa
out
nop
popf
pusha
aam
sti
and
adc
lret
cmp
add
addr16
push
pushf
fidivl
inc
inc
out
mov
test
call
sub
roll
jno
ret
loopne
ja
pop
cmp
add
pusha
inc
out
test
scas
mov
add
dec
push
pop
jg
xchg
push
inc
jecxz
inc
int3
xor
xchg
notl
js
test
aas
mov
jns
xor
push
jns
mov
jb
jp
pop
in
inc
dec
mov
sub
fsub
xchg
fstps
ljmp
ds
xor
mov
inc
stos
mov
cmp
cmp
inc
imul
rclb
cmp
and
pop
mov
scas
push
daa
repz
or
jb
mov
aam
icebp
sahf
mov
mov
jle
movsl
lcall
xor
in
mov
push
andl
scas
pop
adc
shrl
outsb
jne
and
outsb
sbb
fdivl
sbb
repnz
mov
pop
mov
xor
lock
popa
adc
out
xor
cli
pop
leave
add
stos
jp
das
pop
out
lret
pop
mov
pop
pop
inc
cmpl
mov
mov
fnstcw
cmp
loop
cmpsl
add
js
or
cli
sub
jge
or
sub
fcomps
mov
xor
jmp
scas
sbb
xchg
push
cmp
xor
pop
push
mov
xchg
and
hlt
cmpb
pop
lods
inc
xchg
imul
xchg
mov
mov
aaa
lds
testb
inc
lret
shll
push
scas
jmp
setnp
movsb
loopne
stos
add
inc
push
arpl
xchg
cmpsl
bound
pusha
jnp
fst
mov
adc
rclb
jns
jmp
ja
bound
and
imul
aas
add
mov
jns
and
xor
mov
xchg
scas
add
nop
sbb
cld
repz
jne
pushl
sub
mov
cmpsl
pop
mov
jo
push
cld
push
jno
stos
sub
into
inc
les
mov
loopne
leave
push
sbbl
xchg
pushf
pop
cmpsl
mov
popa
inc
ret
mov
loopne
cmpl
test
in
pushf
mov
lret
or
bound
adc
mov
jno
cld
daa
sbb
fadds
dec
out
lods
mov
push
mov
lret
imul
call
xorl
loop
and
aas
or
and
addr16
xchg
cmp
sub
jecxz
xor
repnz
cmp
repnz
dec
adc
stos
push
jge
jb
mov
cwtl
add
mov
cs
mov
into
rorb
mov
add
add
and
loopne
jl
pop
lea
pop
cli
xchg
in
sub
mov
and
pop
mov
frstor
outsb
aam
shr
xlat
mov
outsl
repnz
push
or
push
rol
xchg
out
xor
xor
fistps
push
mov
ja
cltd
add
cmpsb
enter
outsl
gs
out
movsb
adc
inc
stos
sub
ret
dec
fstl
xor
in
mov
xor
aas
sub
cmp
or
sub
sub
mov
xchg
sub
sbb
fs
dec
sub
out
add
lret
cmpb
or
rcll
inc
jle
jae
leave
lods
mov
incl
bound
enter
add
std
jo
aam
stc
mov
dec
jo
arpl
or
mov
push
inc
aas
mov
dec
sub
arpl
in
hlt
mov
negb
fst
xlat
lods
push
mov
idivb
or
pop
mov
push
jns
ljmp
pop
pushf
bound
mov
dec
les
cmp
push
cmp
jbe
js
mov
dec
imul
pop
in
in
sub
jnp
addl
dec
mov
pushf
adc
xchg
pop
and
xor
pop
jg
stc
cmc
mov
movsl
pusha
mov
lock
ja
sub
pusha
lret
inc
mov
daa
and
sarl
dec
mov
mov
pop
and
mov
enter
test
pushf
lock
les
mov
pushf
test
mov
mov
sub
pop
jl
mov
mov
sti
cmp
iret
testb
mov
pop
xor
in
lds
mov
push
mov
rorl
jns
and
cltd
and
dec
mov
or
mov
inc
jecxz
xchg
pop
outsl
mov
cmp
aam
jbe
pop
mov
jo
icebp
mov
addl
dec
into
ds
cli
int
adc
mul
lret
sbb
divb
cmp
sbb
ds
gs
andb
sub
pop
call
xchg
mov
arpl
and
in
sub
movsb
xor
push
mov
push
aad
and
iret
xchg
push
jns
pop
xor
mov
and
sti
testb
cmpsb
mov
out
int
and
mov
mov
pop
imul
pop
jbe
push
sub
in
xorl
cmc
pushf
pop
leave
xor
std
pusha
mov
cmp
jo
cwtl
jg,pt
or
mov
jbe
ja
pop
rolb
dec
inc
push
out
adc
imul
jge
pop
inc
pop
push
and
dec
jae
adc
inc
je
xor
mov
add
pop
push
adc
lahf
iret
or
mov
cmp
push
jbe
inc
push
mov
fadd
cmp
cmp
mov
out
and
adc
mov
clc
and
adc
popf
cmc
pop
ret
fucomp
imull
jnp
das
mull
push
mov
add
dec
cmp
inc
int
pop
mov
xor
sub
xchg
fildl
xor
rcrb
popf
insl
sub
add
or
cltd
xchg
test
stc
cmpsl
jecxz
std
aam
jg
cmp
mov
xor
mov
add
and
movsb
std
hlt
les
shll
xorl
xchg
jg
lods
pop
fld
jmp
imulb
mov
pop
mov
iret
repz
add
mov
mov
fwait
jae
inc
lock
add
and
push
mov
idivb
inc
jle
es
dec
sbb
adc
xchg
cwtl
jno
int
mov
lods
subb
adc
mov
jns
repz
aas
sub
fstp
and
stos
cmpsl
cld
sub
fsubrs
jge
nop
pop
add
and
cmc
lea
add
out
ljmp
push
pop
mov
pop
cwtl
mov
push
push
or
rcll
fwait
movsl
gs
jl
loopne
dec
add
out
cwtl
jecxz
push
xchg
stos
jnp
push
insb
pop
cmp
mov
out
mov
imul
cwtl
test
pop
xor
inc
mov
test
test
pop
pushf
adc
ficompl
and
in
pop
mov
cmp
out
lock
adc
mov
rorl
sbb
xchg
lea
idivl
pop
push
or
or
stos
push
mov
movsl
add
shlb
stos
test
push
push
in
mov
pop
aam
orb
iret
jecxz
push
and
shlb
sbb
push
mov
je
or
sbb
xor
roll
dec
stc
sbb
pop
dec
sub
pop
scas
xchg
jb
gs
pop
shll
fmuls
imul
test
pop
cmp
sub
ljmp
or
cs
std
movsl
xchg
cmpsl
adc
lods
mov
dec
sbb
dec
mov
cmpsl
ret
pop
mov
test
repnz
push
mov
or
fcoml
mov
add
nop
mov
out
inc
int
mov
cs
jb
adc
xorb
dec
xor
inc
cld
pop
xchg
lds
outsb
shlb
inc
mov
or
test
inc
xor
dec
sub
popf
jg
pusha
mov
movsb
into
fcompl
cmp
cmp
add
push
jp
stos
aas
jnp
xchg
xor
out
mov
je
jno
fmuls
bound
pop
sbb
adc
cld
pop
mov
jo
pop
push
hlt
test
push
lahf
nop
ja
enter
jae
adc
dec
sbb
or
and
or
xchg
hlt
jg
add
jp
adcb
sbb
cmp
shl
cmp
jbe
cmp
mov
cmpsb
repnz
push
adc
out
fimull
dec
mov
jp
fdivrl
pop
pop
scas
and
lret
loopne
aaa
mov
iret
aam
mov
mov
cmpsl
out
push
mov
stos
pop
dec
mov
in
imul
fucomip
imul
bound
push
repnz
out
inc
dec
into
xchg
mov
and
repnz
lea
pop
ret
notb
pop
jae
jno
sub
insb
push
push
jge
lret
pusha
or
push
mov
decb
shlb
aad
jecxz
js
sbb
mov
sub
or
ja
pop
sub
push
push
lods
add
xlat
cmp
shlb
push
pop
pop
pop
cwtl
or
mov
push
mov
inc
test
rorl
xor
loopne
in
dec
xchg
push
mov
daa
daa
pop
dec
mov
int
pusha
jb
in
dec
cmpsb
and
test
outsl
mov
mov
or
popa
mov
movsl
cmp
pop
push
pop
fldt
scas
cmp
xchg
jge
push
cld
and
das
pop
adc
inc
push
xchg
paddsw
adc
in
adc
and
or
xor
inc
outsl
xchg
repnz
adc
aas
les
add
sub
je
cmp
jo
push
adc
ljmp
cmpsb
clc
das
not
pop
insl
xchg
leave
xor
movsb
dec
fnsave
adc
test
sbbb
xor
dec
scas
sbb
outsb
neg
and
scas
jmp
out
xchg
les
jl
pop
push
mov
divb
mov
pop
in
lea
fsubrs
sbb
aaa
or
mov
dec
inc
add
fisubrs
jo
out
jl
pop
pop
push
push
xor
mov
push
sahf
scas
pop
test
cmc
scas
and
stc
gs
mov
pop
aad
movsb
sti
sbb
push
jnp
test
cmp
icebp
cmpsb
jle
ljmp
jb
cmp
pop
dec
adc
mov
inc
data16
inc
or
je
rclb
into
call
pop
push
cmpsl
xor
mov
std
jle
out
mov
push
xor
xor
daa
dec
push
sar
orl
insb
jg
mov
shrb
movsl
popl
test
leave
xor
in
sahf
and
xchg
ljmp
lock
lret
inc
stos
fisttpl
call
fiaddl
lods
mov
xor
and
mov
negl
adc
lahf
mov
xchg
pop
bnd
sub
mov
decb
rolb
push
aaa
dec
aaa
push
jo
mov
js
xchg
mov
repnz
mov
xchg
add
pop
out
repz
js
jmp
repnz
add
fsubr
jmp
mov
xor
jl
outsb
sahf
scas
mov
les
pop
sbb
and
ffreep
icebp
outsl
rorb
and
add
jb
stos
fnsave
push
sbbl
enter
add
insb
mov
clc
shrb
dec
loopne
mov
pop
arpl
sti
mov
pop
icebp
rcl
or
cld
mov
les
xchg
pop
pop
cmp
int3
icebp
xchg
pusha
fwait
sbb
in
mov
pop
rcrb
loopne
jnp
adc
data16
xchg
enter
pushf
xchg
outsb
xchg
sbb
inc
add
cs
xor
adc
cmp
shlb
sbb
or
aaa
fsubs
lock
mov
xchg
push
adc
or
jge
inc
add
lods
stc
addr16
fwait
jnp
dec
cmp
push
subl
sti
mov
call
inc
xor
rcll
or
lds
stos
out
xchg
rolb
sbb
fmull
faddl
sbb
xor
addr16
cmp
xlat
es
pushf
shlb
inc
cs
cmp
xchg
and
jno
cmpl
rorb
out
aaa
push
cmpl
pop
pushf
mov
pop
lea
jb
xor
arpl
out
sub
mov
nop
pop
jbe
dec
fsubrp
das
adc
lcall
mov
or
jno
lret
cmp
in
or
add
and
out
cmp
or
mov
lret
xor
xor
out
sbb
inc
loopne
mov
loop
lret
ja
jmp
jmp
sub
pop
pusha
push
cwtl
sti
imul
loop
in
ds
in
jno
flds
cwtl
repz
and
mov
loopne
sub
out
lods
fisubrl
iret
mov
push
arpl
or
lds
test
sti
inc
jae
ss
std
roll
mov
push
pop
mov
sub
fidivs
xor
daa
int3
lcall
test
mov
jp
cmpsl
mov
xor
out
mov
lahf
xchg
jno
incb
mov
rorb
jl
out
lea
loope
xlat
jg
ss
mov
sbb
mov
push
push
add
inc
jle
aad
nop
test
dec
cmpl
push
pop
stc
mov
pop
mov
loope
imul
bound
ds
je
cwtl
jo
mov
insl
rcll
arpl
outsl
out
stc
mov
push
ja
pop
iret
sub
xchg
jnp
sbb
ss
jns
push
insb
pop
sahf
aad
fidivrl
mov
ss
dec
mov
jns
in
aad
xchg
mov
mov
mov
push
pushf
clc
imul
adcl
addl
fsts
pop
lea
sbb
dec
mov
mov
push
lea
aaa
fbld
mov
ja
mov
pop
movsb
dec
push
movsb
repnz
sub
jne
fstpt
sti
lret
mov
bnd
int3
mov
sub
shll
fstpt
push
dec
cmp
mov
nop
jl
imul
ja
xor
out
std
mov
inc
shlb
fiaddl
ds
xor
xchg
dec
icebp
enter
xchg
fidivs
push
ret
push
jp
lock
repnz
lock
jns
or
test
in
inc
and
repz
imul
pusha
lds
dec
mov
loopne
dec
pop
outsb
test
push
cld
data16
mov
pop
sub
inc
data16
add
in
and
dec
scas
push
inc
xchg
sbb
pop
jmp
aaa
pop
insl
pusha
mov
cli
push
aad
es
sbb
cs
jno
pop
add
jns
mov
sbb
test
fidivl
mov
xchg
sub
mov
arpl
pop
fxch
sub
add
adc
xchg
clc
or
aas
push
xchg
inc
mov
les
xchg
imul
jo
ds
cmp
mov
pushl
stos
and
inc
icebp
incl
cmpb
mov
movsb
iret
pop
sub
or
idivb
cmp
rcll
mov
push
cmp
in
adc
inc
or
pop
sub
jnp
and
adc
or
enter
popa
jecxz
ret
xchg
or
jp
cmp
jp
mov
adc
and
jg
pop
rolb
jmp
dec
repz
push
mov
mov
add
pop
dec
mov
mov
xchg
out
in
aas
xchg
ret
dec
arpl
adc
inc
jge
orl
test
std
rcr
stc
mov
or
xor
ljmp
mov
fcoml
rcl
and
fisttpl
into
mov
push
lock
popa
mov
iret
xchg
jno
and
fs
mov
sub
sbb
or
pop
push
test
adc
testb
or
jbe
adc
jbe
scas
nop
xor
xchg
scas
dec
scas
sbb
pop
pop
inc
lea
xor
push
push
loope
sbb
add
cmp
xlat
xlat
fisubrs
pop
push
cli
add
loopne
out
lods
lea
inc
mov
and
mov
xor
xchg
add
or
add
lahf
mov
add
cmp
add
cmp
or
jmp
lods
mov
fstl
stc
xorb
dec
mov
mov
fmul
in
ljmp
add
xor
in
sub
inc
xchg
cmp
cmp
mov
mov
les
ficompl
pop
mov
movsb
push
mov
cmpsl
insb
scas
add
dec
or
inc
aas
cwtl
xchg
addr16
out
out
push
fiaddl
orl
mov
mov
repz
outsb
dec
mov
aas
mov
imul
incb
fdivrl
mov
lret
lods
cld
notl
push
and
cmp
test
daa
jl
neg
xchg
sbb
scas
lods
dec
push
repz
adc
add
jne
lcall
enter
std
and
clc
mov
xor
icebp
adc
mov
xchg
fimuls
cwtl
stos
mov
mov
stos
bound
ja
add
loope
testl
adc
and
dec
in
dec
mov
out
and
xchg
js
out
inc
xchg
lret
pop
cmc
cmp
mov
sbb
adc
mov
out
aam
fnsave
mov
mov
enter
stos
std
sub
xchg
into
out
jbe
mov
sti
mov
or
sar
cld
in
daa
and
lret
js
fidivl
xor
sbb
inc
inc
add
jl
jo
jno
mov
movl
and
inc
xor
popf
shl
xchg
dec
cmp
mov
fnsave
xchg
sub
or
mov
cmp
ret
pandn
adc
sahf
push
jno
addl
out
fwait
stos
lret
or
pop
rorb
in
pop
xor
inc
pusha
int3
mov
sbb
std
xor
jno
adc
je
nop
icebp
daa
shlb
aam
pop
xchg
mov
jg
push
sub
filds
mov
push
std
push
pop
adc
or
test
dec
adc
mov
out
and
and
test
icebp
lcall
cmp
imul
sbb
xor
fwait
ja
stos
cmpsl
mov
icebp
mov
fidivl
imull
lahf
jmp
add
ss
cs
addr16
mov
imul
or
inc
jle
scas
les
outsb
cmpsb
dec
and
jbe
insb
dec
into
dec
ret
cmp
out
fdivrs
adc
lods
icebp
add
cli
mov
sbb
mov
lods
cs
cli
mov
lds
or
lods
test
mul
pushf
mov
orl
or
std
xor
outsb
fisubrl
jo
and
inc
fisttpl
dec
xchg
adc
inc
std
inc
dec
xchg
stos
lods
dec
jmp
in
pop
xchg
jmp
mov
push
mov
cli
sti
leave
verr
mov
xor
das
idiv
repnz
jg
pop
aaa
cmp
pop
fsubl
inc
pop
movsl
daa
adc
push
call
pop
fiadds
ljmp
movsb
subb
sub
test
sub
iret
cmc
loop
lods
outsl
mov
and
xchg
and
inc
lcall
push
and
mov
insl
daa
in
ds
pusha
dec
cmp
inc
inc
repz
add
ds
clc
pop
sbbb
adc
add
nop
pop
and
lods
inc
lcall
mov
in
movb
movsl
xchg
jbe
and
int
or
enter
cmp
and
out
movsb
test
out
adc
adc
xor
sahf
stos
arpl
ds
cmc
pushf
aam
mov
out
xchg
mov
cld
push
insb
movsl
insl
push
scas
mov
fidivs
cltd
ret
jae
jno
in
jae
aas
sbb
push
stc
aam
pusha
cltd
pusha
pusha
rcrb
stc
outsb
movb
pop
mov
popf
inc
lcall
jge
add
pop
fsubr
loop
repnz
xor
push
loop
lock
jge
inc
pushf
push
adc
leave
pop
push
adc
jl
xor
je
fldl
xor
data16
inc
fldcw
pop
rolb
ja
xchg
mov
repz
dec
push
xor
push
fisttpl
adcb
push
pop
cmp
jns
idivl
addl
xor
push
and
mov
hlt
jle
jb
sub
inc
daa
push
jno
cltd
lret
stos
les
sbb
loop
cmp
fs
das
fadd
lods
ss
jp
movsb
mov
dec
pop
jnp
lcall
shll
sti
push
xchg
inc
or
mov
hlt
or
push
mov
jmp
fildll
lahf
push
or
or
cli
inc
dec
arpl
fwait
inc
cmc
loop
lahf
dec
pop
loopne
int3
pusha
lock
sbb
pop
clc
in
decb
inc
orb
call
test
mov
fcompl
push
scas
cltd
popf
dec
jae
outsl
xchg
fbld
sub
cmpsb
jmp
mov
jl
push
rcll
pop
or
push
fimull
pop
bound
or
mov
adc
sahf
cmp
mov
out
sub
lahf
sub
and
mov
out
add
int3
in
sar
mov
hlt
insb
mov
aaa
add
rorb
idivl
out
push
fldenv
dec
push
push
sbb
inc
and
xor
jecxz
rorb
enter
inc
cmp
push
dec
stc
sub
adc
xchg
mov
push
call
inc
sbb
xchg
pushf
xchg
cmp
jmp
je
daa
ret
pop
iret
xor
mov
ss
les
dec
lods
xchg
mov
je
jo
int3
mov
mov
sub
jp
adc
sub
xchg
dec
les
frstor
or
aas
inc
pop
push
push
dec
stos
and
inc
imul
push
cmp
mov
jmp
mov
jo
xchg
mov
iret
cmp
ds
lahf
or
movsl
cmpsb
je
lods
dec
jge
xor
fstps
push
ret
sub
in
mov
stc
xchg
inc
add
bound
xor
in
mov
mov
sbb
inc
dec
xchg
dec
aad
xor
mull
jg
fimull
mov
rcrl
pusha
jge
aam
loopne
loope
or
popa
ror
lahf
xor
out
push
cwtl
shlb
clc
ret
dec
jmp
shrb
sub
call
lahf
jbe
fs
enter
dec
sbb
jbe
mov
mov
xchg
add
jecxz
jb
mov
inc
jnp
pusha
sti
fs
fcoml
pop
sub
daa
shll
stos
xor
daa
gs
outsb
pop
mov
pop
jecxz
in
push
popa
dec
cmpsl
lods
mov
push
and
sub
mov
xchg
xchg
mov
pusha
and
loopne
and
pop
sti
mov
xchg
mov
mov
xor
fisttpl
sub
lea
jb
jno
sbb
les
sbb
xor
mov
paddsw
mov
in
mov
test
jmp
cwtl
jbe
push
aam
adc
jge
mov
cmp
pop
sbb
repz
adc
pop
pop
pop
cmp
mov
lods
jecxz
in
ror
mov
inc
and
inc
pop
push
std
sahf
aam
rclb
lock
sti
add
sub
sub
out
jmp
mov
xchg
fistpll
dec
mov
sub
jns
test
jnp
jl
push
out
sub
adc
popf
sbb
inc
cli
lds
jmp
aas
repz
inc
outsl
pop
ror
cmc
jmp
inc
jno
mov
pop
xchg
xor
mov
push
xor
mov
push
sbb
inc
into
mov
test
mov
mov
mov
mov
rorl
mull
fadds
clc
jno
clc
mov
leave
cld
les
jne
push
pop
sbb
aad
sahf
shlb
push
shrl
lahf
dec
popf
xor
popa
cmpsb
add
cmp
aas
inc
inc
icebp
enter
adc
dec
dec
or
rcrl
test
mov
cltd
fmul
loop
sbb
push
push
mov
es
popa
mov
dec
pop
pop
test
repz
push
loope
push
cmp
or
push
push
sub
pop
into
enter
lods
shlb
fnstsw
popf
mov
push
jmp
cmp
movsl
mov
mov
push
aad
xchg
insl
add
fsubrp
add
push
cmp
repz
movsl
fstp
xor
ja
sub
push
sub
cmpsb
jb
outsl
sti
nop
and
enter
leave
mov
movsl
fldt
into
mov
mov
leave
lea
imul
ds
cmc
sub
dec
mov
and
notb
jns
fdiv
push
or
jle
pop
jns
test
or
inc
mov
je
daa
dec
loope
cmp
sub
mov
testl
sub
enter
cmp
out
fistpl
dec
inc
negl
jp
xchg
pop
out
sbb
xchg
lahf
out
mov
add
rclb
in
push
ss
add
push
mov
fdivl
pcmpgtd
icebp
dec
sub
pushf
cltd
or
jl
mov
and
push
add
xchg
jae
mov
test
and
in
adcb
in
js
mov
mov
stos
mov
insl
fxch
mov
mov
lds
pop
xlat
decb
xchg
jle
in
clc
ds
sub
loop
dec
inc
call
sar
in
mov
xchg
mov
data16
stos
in
cwtl
push
int
sbb
mov
data16
ljmp
xorb
sbb
cmc
arpl
add
sub
mov
jecxz
push
xchg
popf
cmc
and
sbb
fisubs
mov
push
push
daa
adc
loopne
cwtl
inc
and
pop
sub
cmpsb
jnp
int3
fmull
pop
and
mov
pop
pop
js
cmc
aas
das
xchg
sbb
sbb
push
sub
jb
mov
ret
cli
cmp
daa
adc
jbe
fst
pop
lock
xor
sub
sub
aad
mov
jg
negl
pop
adc
pop
mov
incb
pop
fnstenv
inc
cmpsl
sbb
pop
inc
adc
push
push
shlb
xor
add
jns
sub
test
jb
out
jns
mov
lea
cmp
sbb
jae
test
xchg
nop
aaa
das
cmp
nop
adc
out
or
imul
mov
add
jb
push
jmp
mov
cmp
mov
lret
pusha
jg,pt
stc
mov
mov
mov
bound
rsqrtps
aaa
mov
push
pop
repnz
jne
sahf
fdivrs
dec
adc
dec
sbb
xor
jne
cmp
push
push
inc
pop
enter
xor
imul
pop
enter
mov
test
inc
mov
lea
imul
test
imul
or
mov
ljmp
or
pop
movsl
adc
lods
dec
mov
jmp
out
ret
lods
xchg
cmp
sti
or
fs
pop
fwait
jle
mov
fiaddl
lods
fldt
daa
xlat
jno
hlt
push
rep
int3
mov
xorl
cmpsb
cmp
cs
xchg
call
mov
mov
inc
cmp
mov
jns
mov
fidivl
int3
mov
mov
xchg
mov
and
inc
notl
daa
adc
pop
sbb
mov
adcl
push
dec
stos
mov
clc
fsubrs
ljmp
mov
pusha
cwtl
push
movsl
add
sbb
das
fs
mov
jl
sub
enter
out
sti
enter
testb
insl
insb
and
mov
or
imul
push
mov
fisttpll
push
jg
inc
outsb
popf
mov
std
imul
loop
and
jg
dec
pop
xchg
add
scas
cmc
popa
push
outsb
movups
mov
mov
fiaddl
mov
cmpsl
add
pushf
cli
sarl
jle
mov
xchg
sbb
cmc
adc
shl
scas
and
outsl
mov
or
push
pop
fistpll
testb
sub
cmp
add
iret
dec
arpl
mov
mov
sahf
outsb
dec
test
lock
and
mov
popf
lea
stos
rcr
push
in
lret
jg
hlt
insl
scas
lods
mov
adc
or
add
insb
mov
pop
jg
mov
cmp
mov
xchg
ja
add
stc
pop
inc
and
lods
or
lea
bsr
mov
mov
es
push
push
in
lock
mov
and
pop
pop
add
out
sub
aam
fdivrp
jbe
bound
push
mov
push
repnz
xlat
adc
xchg
in
int
xchg
and
stc
sbb
sbb
mov
sub
icebp
insb
adc
stos
sbb
pop
sbb
adc
pop
imull
scas
dec
mov
jmp
sbb
fbld
movsb
xchg
mov
jmp
loope
pop
sub
jecxz
das
imull
xchg
repz
out
mov
xor
jecxz
adc
xchg
xchg
nop
and
imul
inc
scas
jl
push
in
inc
xor
scas
inc
loope
hlt
icebp
mov
dec
jne
dec
mov
mov
inc
dec
in
mov
jbe
or
fiaddl
call
or
ret
inc
movq
call
dec
push
iret
ficomps
cmc
mov
mov
fsubl
int
fistpl
stc
xchg
mov
les
mov
xlat
nop
outsl
idivb
popf
mov
xchg
xlat
pop
push
pop
fldcw
jne
out
bound
mov
in
loopne
and
or
sarl
arpl
mov
mov
jp,pn
shrl
fldl
pop
lcall
xorl
jb
jns
xor
mov
add
adc
leave
dec
mov
inc
mov
mov
mov
cwtl
xchg
leave
jp
push
mov
mov
or
adc
fwait
divb
iret
in
outsl
or
mov
addr16
fs
out
cmp
and
mov
inc
cmp
cmp
push
lods
jle
dec
out
push
fsubs
mov
jo
cpuid
psubq
fdivrs
sub
loop
js
std
jne
cmc
cltd
jle
mov
jmp
adc
fistl
or
fwait
mov
xchg
sub
jo
outsb
nop
adc
inc
xor
inc
or
cld
mov
dec
in
cmp
cmp
mov
inc
adc
ljmp
and
xor
jl
jle
cmp
jle
push
into
cmp
aaa
rclb
stc
sbb
xchg
out
out
popa
jae
scas
or
arpl
jg
mov
fcmovnbe
lea
cmpsl
popf
out
adc
jb
push
sbb
and
addr16
sahf
das
arpl
adc
shll
popa
lock
mov
adc
dec
sub
pusha
adc
sub
jl
ljmp
loop
jns
shrb
fisttps
or
sbbb
jae
or
fucomp
arpl
xor
inc
push
or
in
aad
je
outsb
pop
pop
subb
das
xchg
jg
mov
xor
xor
push
xchg
frstor
imul
cmc
lcall
dec
into
mov
aas
or
xor
dec
cltd
jae
xor
add
xlat
jnp
and
cltd
in
cmp
xor
shrl
cmp
test
decb
movswl
clc
shrd
test
out
testl
jle
ret
sbb
je
push
adc
pop
lret
and
daa
rcrl
pop
push
cltd
adc
ss
insb
jmp
aaa
cwtl
adc
imul
push
xchg
in
jl
insb
mov
cltd
xor
fsubs
cmpsb
test
xchg
sub
loopne
sahf
mov
fcom
mov
das
lods
inc
fstl
adc
adc
inc
pop
test
push
mov
ja
test
imul
pop
test
lret
rol
pushl
mov
ss
fcmovu
ret
mov
sub
xchg
pop
jb
test
pushf
stos
pop
jae
mov
pop
jno
dec
aad
adc
fdivrp
outsl
pop
out
push
sub
cmp
jp
cmp
dec
mov
scas
fs
or
add
adc
enter
cld
lret
inc
push
sub
int
sub
fidivl
sti
loopne
push
out
lret
test
lahf
shll
vpsubw
cwtl
jb
stos
dec
mov
mov
xchg
sahf
in
pop
push
imul
xor
rorl
or
adc
lret
sbb
mov
jno
rorb
jl
fstpt
dec
cmp
lods
int3
mov
pop
pop
cmp
int3
je
mov
and
imul
jl
stos
lret
mov
bound
fistl
shrb
mov
inc
pop
insb
jge
aaa
int
pusha
sub
add
pop
dec
xorb
in
aam
bound
int
mov
push
out
mov
xor
loop
fucom
jb
push
jmp
ds
in
arpl
test
fadd
pushf
xor
lods
cmp
sub
int
enter
mov
mov
sbb
xor
pop
mov
pop
enter
outsl
jle
clc
mov
int
cmc
stos
and
loope
cmpl
adc
push
and
mov
lock
sub
mov
in
lret
pop
addr16
negl
mov
and
jns
mov
sub
dec
jecxz
push
out
pushf
leave
cmpsl
imul
fstp
sbb
mov
xchg
cltd
push
cmp
in
arpl
rclb
int
gs
ret
mov
pop
dec
mov
stc
lods
lods
fwait
daa
aaa
lea
cltd
push
xchg
cmp
ret
mov
mov
fisubrs
sbb
js
xchg
jmp
mov
or
inc
cmp
mov
popf
fnsave
test
stc
out
mov
push
imul
mov
dec
mov
popa
and
or
insl
jge
mov
or
je
cmpsb
cmp
or
mov
adc
push
stos
and
icebp
xor
stos
sub
push
mov
mov
out
xor
es
call
cmp
out
sarl
dec
push
jmp
icebp
mov
push
mov
into
sub
push
lret
push
pop
inc
icebp
jl
test
stos
cmp
aam
les
jno
cmp
imul
push
fidivl
xchg
xchg
mov
fcmovbe
mov
dec
fs
adc
cmp
pushf
inc
mov
movsl
repnz
in
jecxz
imul
int
xchg
cld
and
jae
or
mov
push
es
push
inc
lret
pop
mov
ljmp
notl
pop
lret
roll
ret
das
int
je
adc
sbb
mov
cli
add
mov
icebp
jg
inc
xchg
lret
mov
adc
clc
sub
test
shl
push
add
mov
jo
pop
jg
or
sar
daa
fsts
inc
sbb
pop
xchg
push
cmp
mov
push
push
xchg
pop
gs
outsl
mov
popa
mov
sahf
loopne
jne
ja
and
outsb
repz
inc
adc
sub
sahf
lcall
inc
mov
lock
jg
dec
mov
or
scas
dec
pop
sbb
lods
sbb
test
lock
jbe
inc
lcall
mov
xor
call
add
xchg
out
cltd
sbb
lret
push
pushl
mov
mov
pop
imul
cs
xchg
jbe
and
mov
inc
jge
jae
dec
negl
fimull
sbb
dec
clc
jl
orl
sub
sbbb
in
xor
dec
add
jge
fwait
cmp
stc
ret
das
repz
lahf
push
data16
fsts
mov
loopne
push
xchg
pop
out
push
cmpsb
dec
orl
dec
sbb
sub
sub
insb
out
push
repnz
dec
fcmovnu
inc
stc
mov
lods
pop
stos
out
pusha
loop
imul
mov
pop
pusha
jmp
cmp
mov
outsl
scas
push
fs
jmp
cltd
lock
mov
lahf
dec
or
sub
ljmp
sbb
test
lds
sbb
xchg
mov
xchg
xlat
int3
ja
insb
inc
push
mov
scas
aad
aas
mov
cltd
sbb
lods
sub
adc
xor
lcall
push
dec
jle
daa
cmp
out
fisubs
imul
jae
jg
mov
sbb
push
add
pop
lret
cbtw
xor
fldenv
fwait
xchg
dec
or
je
cmc
popa
push
pop
int3
dec
adc
and
shr
dec
mov
dec
into
or
lock
vcvtdq2pd
insl
pop
in
mov
xor
leave
jmp
std
dec
test
jbe
mov
cmp
andb
mov
in
xor
xchg
hlt
and
and
loopne
stos
fs
das
insb
jns
es
xchg
xchg
into
int
popaw
jnp
and
cmp
sbb
out
ret
dec
faddl
dec
outsl
sub
hlt
out
sbb
daa
sbb
xor
add
jecxz
dec
ss
fiaddl
pop
inc
fs
xchg
add
loop
inc
aad
jo
call
mov
test
aam
sbb
xlat
rolb
clc
jg
shll
adc
in
rolb
in
shr
into
push
push
and
scas
outsb
test
out
rcll
jge
enter
shll
rorl
bound
dec
les
push
pop
xchg
popa
xchg
fldenv
bound
popa
pop
or
mov
add
mov
jb
rcr
inc
cmc
pusha
in
sbb
pop
fs
imul
repz
add
jg
xchg
nop
add
push
jmp
je
stos
outsb
dec
int3
pop
mov
sahf
or
dec
and
mov
loopne
fwait
leave
ja
mov
leave
and
cmp
sbb
icebp
sub
dec
ret
cmp
jo
cmp
int3
sub
dec
sub
jl
outsb
add
mov
lret
sbb
loopne
cld
loopne
mov
outsb
insl
pop
out
mov
out
popl
cmpsb
pop
mov
negb
fisubs
lahf
insl
insb
or
pop
psrld
push
push
fidivrl
insb
push
cmp
pop
test
in
sub
outsb
pop
inc
or
and
pop
dec
faddl
mov
fwait
adc
add
xlat
cmp
lds
jmp
cld
ljmp
and
pop
movsb
shll
jno
sub
push
neg
mov
and
fisubl
outsb
push
mov
into
fs
out
add
stos
add
ja
xchg
add
insb
push
cmp
orl
sub
stc
lock
xchg
sub
cmp
in
call
movsl
pop
icebp
push
pop
das
xchg
sub
push
dec
jno
and
or
addr16
adc
adc
sahf
std
lea
cmpsl
lds
mov
in
and
pop
pop
mov
fmul
negl
mov
mov
icebp
pop
inc
dec
std
mov
sahf
adc
xchg
repz
or
hlt
rorl
xor
xor
sbb
leave
bound
cmp
pop
adc
xchg
inc
xor
outsb
adc
push
out
jge
jmp
ret
dec
aas
js
push
sbb
arpl
or
ljmp
mov
mov
std
mov
test
inc
or
mov
loop
mov
xor
fildl
cmpsl
int
sti
cwtl
roll
push
aas
jmp
int
adc
les
movsb
lea
test
int3
scas
loopne
icebp
test
jp
adc
fimull
fistpll
dec
xchg
mov
jnp
dec
jnp
mov
or
fs
stos
pusha
cmpsl
cmp
sub
daa
lea
enter
and
test
push
mov
push
or
mov
jg
cmc
inc
fwait
mov
lea
pop
fsubl
mov
fucom
mov
xchg
push
mov
adc
jbe
dec
mov
inc
pop
leave
outsb
cmp
and
loope
mov
and
pop
xor
xchg
int
pusha
enter
mov
xor
xchg
into
divb
insl
jne
loopne
xlat
shll
add
das
cmp
push
imul
or
aam
mov
les
inc
sbb
icebp
mov
jbe
aas
popa
ss
jnp
mov
nop
call
lea
out
jae
loop
mov
sub
pop
ret
rcll
mov
popf
and
fstl
cli
jae
and
inc
icebp
add
mov
dec
lcall
insl
inc
out
fbstp
fcoml
and
push
pop
xchg
dec
adc
mov
sub
mov
mov
lock
sub
pop
jbe
push
xchg
sub
push
adc
cmp
pop
mov
sbb
nop
pop
lret
nop
rorl
adc
sbb
sbbl
xchg
dec
popf
add
fidivl
ljmp
inc
dec
push
xor
pop
ret
and
mov
cmp
iret
data16
sub
imull
xor
and
adc
fstpt
dec
in
pushf
and
inc
pop
jae
lret
or
add
xorb
mov
xchg
or
pop
mov
xchg
repnz
mov
repnz
je
cltd
xor
sbb
sub
daa
sub
fists
or
inc
pop
aas
gs
push
push
js
cmpsl
rcrl
rcl
cltd
lods
shr
outsl
add
cld
pop
ret
pop
jae
cmp
pushf
lods
dec
adc
mov
and
inc
outsb
jb
cmpsl
cmc
in
pop
repz
pop
or
les
outsb
ja
jbe
imul
sti
add
xchg
sarl
cmp
push
nop
pop
push
xchg
mov
jp
lret
bound
add
cmp
test
dec
add
scas
inc
lods
cs
xor
fwait
repnz
push
mov
popa
arpl
loop
and
sub
in
pop
movsl
dec
out
or
sub
repnz
inc
mov
cs
jle
add
jle
pushf
mov
je
cmp
mov
or
mov
in
pop
ret
jp
adc
sbb
and
fs
sub
inc
cmp
cld
push
rclb
cs
mov
cmp
testl
ds
cmc
dec
xchg
inc
pop
pop
out
lock
pop
xchg
js
aam
cmp
mov
repnz
mov
scas
pusha
out
dec
lods
or
std
pop
xor
xchg
xor
mov
mov
mov
out
push
cmp
mov
and
lea
or
imul
fnstsw
mov
ljmp
push
add
lcall
fisubs
test
sbb
sbb
jo
lods
push
mov
dec
sarb
sub
mov
xor
ljmp
mul
scas
jl
jmp
stos
jbe
aad
test
mov
sub
daa
in
add
push
out
fs
pop
sti
cmp
mov
mov
cld
js
popa
movsl
cmp
sbb
jg
pop
mov
adc
test
jge
pop
inc
ret
aas
xor
sti
or
lods
add
fnstsw
sbb
test
imul
mov
pop
rcll
fstl
cmp
aas
xchg
imul
mov
push
mov
out
idivl
es
mov
or
shrb
mov
xchg
xor
adc
fildl
cmovne
addb
lock
mov
jnp
aas
iret
adc
cmc
add
dec
addr16
push
xlat
fdivs
mov
cli
mov
jae
cmp
stos
mov
or
xlat
ja
aaa
shlb
or
or
adc
nop
aam
mov
ja
test
sete
xchg
icebp
mov
bnd
shlb
push
std
pop
and
fcom
dec
sub
inc
and
mov
push
outsl
mov
xor
arpl
in
xchg
xchg
outsb
xor
xchg
or
cvtps2pi
dec
stos
int3
cmp
inc
jle
clc
movsl
and
adc
inc
or
jp
insb
xor
adc
and
mov
jg
enter
mov
aas
pop
sub
xchg
lods
cmp
inc
decl
push
cltd
xor
jle
jle
in
out
clc
adc
and
popf
icebp
mov
add
dec
push
fnsave
add
push
xchg
pop
sub
loopne
popa
lods
out
in
test
inc
dec
jmp
inc
adc
fsub
mov
jecxz
xlat
jbe
and
dec
xchg
mov
hlt
mov
stos
dec
push
xor
jl
sub
int3
push
and
jmp
and
xchg
mov
cmc
stc
sub
dec
jns
adc
loop
xchg
push
pop
xchg
mov
divl
and
scas
in
fucom
lea
adc
jmp
xchg
sbb
or
outsl
cli
xchg
dec
fs
test
cmpsb
pop
idiv
out
clc
sub
jne
mov
add
sub
mov
cmc
nop
nop
mov
push
jmp
out
ss
rorl
loopne
push
insb
insl
loope
out
xchg
or
shrl
and
mov
loope
mov
inc
in
stc
dec
inc
sti
int
lds
rclb
sub
pop
in
jnp
mov
out
in
and
insb
lock
xor
ss
int
mov
incl
cwtl
sahf
fxch
jbe
mov
fildl
scas
popa
fsubrl
leave
pop
or
dec
out
lret
adc
adc
scas
mov
sub
test
xchg
cmpsl
lock
add
xchg
daa
es
lret
imul
cmpsb
fwait
dec
scas
lahf
fs
add
imulb
xor
movsb
hlt
ficomps
cmp
cmp
pop
call
lock
notb
jo
dec
cld
in
inc
clc
pop
std
xchg
inc
stos
insb
scas
ret
or
and
pop
sbb
pop
ret
lock
or
inc
xchg
push
cmp
jmp
inc
scas
and
mov
imull
mov
xchg
rorl
xor
addr16
lahf
sti
cmp
xchg
nop
das
pop
sub
sbb
js
cmc
mov
sbb
mov
jo
push
mov
jae
push
xchg
jecxz
mov
inc
lret
loop
aas
dec
loope
pop
bound
loopnew
mov
loop
sti
into
pop
hlt
jae
xchg
ror
xor
out
lock
test
test
es
sbb
hlt
push
cmpsl
popa
pop
inc
in
add
pop
repz
leave
cmp
test
xor
in
popa
mov
push
jmp
mov
cmc
mov
fimuls
jle
mov
out
mov
push
outsl
adc
sbb
in
stos
mov
out
xchg
fdivrs
jl
jbe,pn
mov
or
xchg
aad
and
sub
pushf
loopne
lret
adc
aad
mov
push
mov
imul
imul
lods
pop
sbb
mov
flds
stos
int
sub
sbb
xor
add
sub
and
fxch
fwait
add
cmpsb
lcall
mov
xchg
scas
jno
test
cli
adcl
mov
adcl
repnz
arpl
test
xchg
cmpsl
pop
aad
cmp
cmpl
popf
fcoml
push
js
fwait
mov
popl
cwtl
nop
sbb
shrl
mov
movsb
movsl
push
stc
cltd
std
pop
add
sbbl
je
cmp
dec
sbb
add
test
out
in
negb
icebp
xlat
and
lds
cmp
jns
icebp
xchg
push
cmpsl
daa
jno
cmpsb
sbb
xchg
lret
jge
jo
addr16
push
cmpsl
inc
cmp
cs
add
mov
outsb
frstor
notb
or
arpl
addb
aaa
xor
dec
mov
hlt
in
jns
cmpsb
dec
outsb
aam
lcall
das
xor
lock
sbb
hlt
inc
pop
loopne
add
lods
pop
add
fs
sub
nop
xchg
sub
push
loopne
fidivl
push
inc
clc
into
xchg
ss
cltd
and
scas
lahf
les
shlb
xlat
lea
fdivs
mov
popa
push
mov
cmpb
icebp
mov
push
outsl
inc
fstp
xchg
push
mov
fistpll
iret
mov
in
inc
popf
fwait
les
cmc
pop
xchg
adc
incb
cli
cmpsb
adc
in
cmc
fsubr
jp
push
inc
and
cwtl
dec
mov
icebp
xor
jbe
jmp
jg
incl
xor
add
adc
push
scas
push
fcomi
add
mov
daa
cli
push
mov
filds
icebp
add
adc
mov
and
mov
jae
out
fldcw
push
scas
pop
dec
aas
ficomps
xchg
lcall
add
imull
mov
pop
xor
cmpsl
push
pop
mov
out
jmp
ss
rclb
inc
aam
jnp
push
cmp
adc
imul
mov
cmp
sbb
mov
push
jp
stos
ljmp
dec
hlt
xlat
push
fwait
stc
push
xchg
xchg
orl
test
adc
jns
adc
adc
dec
jnp
cld
mov
scas
mov
sbb
pop
addr16
lods
test
jmp
mov
mov
ret
jle
jne
xchg
out
mov
mov
inc
lahf
out
inc
arpl
rcl
movb
jnp
push
scas
fdivl
mov
jo
cmc
inc
adc
cmp
outsw
jne
lahf
push
rorl
je
sbb
fs
mov
ss
mov
jbe
ficoml
sbb
add
cltd
lret
mov
pop
jns
inc
inc
fnsave
jno
sub
add
jge
rcl
push
jg
adc
std
add
add
in
test
push
xor
outsl
xchg
and
inc
xchg
bound
dec
push
mov
mov
adc
jle
push
fstps
pop
lock
mov
lds
std
call
daa
fisubrs
data16
sbb
insb
mov
ja
dec
xchg
icebp
pop
fsub
dec
mov
andb
xchg
or
mov
pop
ret
inc
add
rcl
jo
xor
jle
aas
jb,pt
jo
das
sti
or
mov
inc
rorl
imul
xchg
pop
popa
shll
mov
dec
idiv
je
loope
jle
repz
imul
mul
inc
cmpsb
stos
popf
push
mov
sbb
xchg
loopne
jecxz
lret
xor
les
pop
jmp
dec
xchg
popf
imul
cmpsl
idivl
dec
fsubl
in
push
push
mov
lea
mov
dec
xchg
mov
lds
cmpsl
pushl
and
xor
sub
push
push
mov
push
mov
mov
jbe
cmpsb
pop
idivb
cmp
mov
and
lahf
pop
out
add
loop
dec
ljmp
bound
into
jmp
jle
and
and
outsb
hlt
add
inc
pop
mov
movsb
mov
or
insb
addr16
in
in
lods
inc
mov
sarb
test
mull
inc
mov
adc
data16
jmp
push
stos
scas
rorb
sbb
mov
or
jnp
lahf
push
push
test
mov
adc
int
sarl
cli
pop
int
add
inc
aaa
fcoml
cmp
pop
adc
inc
cwtl
in
cmc
in
jno
adc
insl
lds
xchg
ret
mov
push
les
adc
test
sub
aam
loopne
or
inc
push
scas
push
mov
sbbb
adc
fsubrl
push
scas
xor
jo
stos
sti
mov
testl
jno
je
dec
jp
mov
movsb
pop
adc
fldcw
mov
stos
inc
test
dec
adc
pop
push
inc
pop
loopne
scas
adc
cs
xor
test
movsb
out
pop
js
cmc
add
int
movb
xchg
orl
das
cld
and
test
jno
cmp
sbb
jnp
inc
imul
xchg
stc
xchg
push
jge
pop
lock
push
push
into
pop
add
int3
test
fxch
not
outsl
push
jmp
inc
call
mov
pop
mov
mov
cmp
jecxz
scas
mov
pop
jae
pop
mov
pop
fstps
popf
sub
push
repnz
or
add
pop
movl
ret
mov
mov
mov
divl
xlat
push
add
outsb
adc
test
mov
loop
rcrl
jp
out
mov
sub
mov
and
adc
xor
inc
xchg
aaa
test
daa
inc
jl
inc
mov
rcll
inc
push
loop
push
aas
cmp
jbe
aaa
out
fwait
incb
das
jb
add
stos
aad
push
cmp
in
sub
cwtl
out
cltd
hlt
fs
les
stos
jecxz
and
int3
mov
pop
xor
scas
lahf
ja
call
stc
inc
movsb
movsb
test
lods
aaa
inc
imul
push
dec
pop
push
xchg
enter
push
mov
cmp
pusha
sbb
dec
push
ja
inc
jp
and
xchg
mov
ret
add
jnp
sbb
sahf
sahf
push
enter
in
in
pushf
shll
ljmp
cmpsl
push
lret
fcmovne
sub
inc
mov
cmp
jae
pop
pop
mov
scas
out
adc
pop
add
cli
les
jb
ljmp
jno
sbb
pop
frstor
dec
or
lcall
mov
hlt
das
mov
cli
inc
add
mov
pop
faddl
or
push
add
mov
cmp
jecxz
sbbb
push
hlt
xchg
jnp
and
push
insl
neg
iret
scas
mov
mov
pop
outsb
test
insl
fmuls
push
or
or
shl
loop
aaa
in
cmp
lahf
inc
adc
cmp
add
push
lds
mov
rolb
stc
data16
jecxz
lret
sar
jp
icebp
cmp
gs
xchg
xchg
pushf
outsl
aam
addr16
pop
jp
pop
jns
pushf
or
sub
std
les
sbb
xchg
lcall
adc
sarl
popa
pushf
adc
mov
rol
push
addr16
dec
inc
popa
sub
cli
xchg
pop
xchg
push
cltd
idivb
lock
les
jbe
push
push
dec
xor
outsb
cmp
cmc
mov
je
aaa
dec
popf
jp
xchg
mov
mov
les
sub
add
mov
pop
sub
and
daa
std
inc
fimull
add
icebp
sbb
push
dec
jnp
js
aaa
int
xchg
push
shl
fcomps
cmp
push
cmp
mov
and
mov
xor
adc
xchg
ficoms
fwait
xchg
sbb
hlt
xor
leave
jnp
in
dec
jg
movsl
aam
in
add
pop
or
lds
xchg
sub
imul
pop
mov
arpl
mov
mov
mov
pop
fbld
adc
and
mov
sbb
xor
mulb
shl
push
cmp
mov
xchg
dec
ret
or
aaa
divb
jg
hlt
pushf
lahf
adc
leave
mov
out
loop
xor
xor
inc
xchg
icebp
pop
or
mov
mov
test
inc
movsb
jae
arpl
mov
subb
or
inc
scas
jb
mov
and
gs
push
cmp
xchg
lods
xchg
in
test
das
xchg
push
inc
sub
out
arpl
jo
pop
ljmp
mov
sub
mov
test
add
mov
enter
insl
cltd
shl
shlb
repnz
pop
push
push
loopne
mov
stos
leave
test
testl
jno
stos
adc
lret
pushf
pop
nop
ret
jno
dec
push
imul
mov
fdivr
jo
dec
jmp
jg
int
sti
adc
xor
in
in
xor
test
ficoms
icebp
xor
lahf
xor
push
pusha
pop
cmpsl
inc
jb
cmpsl
mov
dec
sar
adc
nop
lret
jge
pop
mov
cmp
aad
es
in
adc
cld
pushf
mov
cltd
adc
lock
aas
mov
aaa
icebp
testb
fsubrl
dec
push
sub
data16
movsl
and
cwtl
jbe
movsb
mov
push
mov
arpl
ret
adc
sub
sub
mov
stos
dec
rcrb
inc
lahf
out
add
clc
dec
or
xor
lea
adc
sbb
pop
jmp
pop
jecxz
aas
add
scas
mov
aaa
pusha
inc
call
adc
inc
mov
idivl
popa
pop
and
mov
sub
add
popa
xor
mov
xlat
les
adc
sub
bnd
sbb
push
out
cmp
adc
outsb
pop
ja
dec
mov
push
pop
push
hlt
fiadds
std
sub
pop
aam
movsb
fcomps
gs
rcr
mov
cmpsl
cmp
inc
pop
fwait
push
mov
insl
imul
outsb
or
scas
and
jno
inc
bound
frstor
and
into
mov
pop
nop
cs
add
push
sahf
dec
mov
jg
std
stos
push
int
mov
shrl
stos
fwait
in
stos
push
pop
out
xor
cli
call
fstl
cwtl
lea
repz
push
mov
jg
cmpb
or
imul
std
clc
and
jns
sarl
popf
xchg
push
push
ljmp
push
mov
mov
mov
lds
jns
into
arpl
inc
idivl
insl
inc
sub
je
or
or
sub
rcrb
sub
fcmovbe
mov
lahf
popa
xchg
insb
aaa
or
loope
fimuls
in
lock
xor
in
sbb
jle
dec
pop
inc
in
push
aaa
fsubr
mov
movsb
and
lret
lret
and
das
xchg
pop
and
pop
push
enter
nop
inc
stos
push
adc
aas
lret
nop
jle
dec
insl
dec
inc
addr16
xchg
mov
pop
jnp
xor
incl
mov
fidivl
fimull
mov
cmc
fstpt
mov
stc
and
daa
std
in
push
jb
add
iret
mov
in
mov
jmp
pop
push
dec
jno
in
adc
ljmp
shl
push
inc
jmp
mov
mov
test
or
rcrb
mov
sti
fwait
mov
test
dec
mul
rcrl
jp
gs
movsb
xchg
jp
jne
test
insl
test
out
test
pusha
adc
test
xchg
cli
jb
hlt
sbb
aas
push
ds
movsb
mov
add
and
xchg
ret
ds
jbe
mov
xchg
and
dec
int3
cmpsb
mov
jno
cwtl
fdivs
adc
aaa
push
outsb
orb
fnsave
cltd
cli
imul
pusha
pop
push
push
adc
inc
sub
mov
pop
mov
cltd
ljmp
inc
sahf
popf
fwait
push
or
and
lea
fsubr
fwait
not
inc
testb
add
jp
inc
xor
aaa
fcoml
scas
and
push
testb
mov
rorb
jbe
inc
mov
shrb
sti
xchg
lods
pop
xchg
sub
movl
jbe
movsb
pop
xor
dec
test
push
mov
std
arpl
jmp
pop
out
pop
out
test
lds
or
jge
sbb
xlat
sub
das
or
mov
cmp
push
add
incb
mov
scas
ret
daa
lret
out
call
mov
fisttps
cltd
stc
gs
xor
sbb
mov
inc
mov
dec
adc
push
jp
and
add
stos
adc
xor
pusha
or
pop
lcall
popf
idivb
or
stos
dec
jno
fimuls
movsl
push
or
scas
jnp
add
imul
xchg
bswap
xchg
int3
sub
fs
mov
pop
faddl
adc
out
scas
sahf
out
aaa
inc
fcompl
scas
sub
rorl
dec
adcb
dec
mov
push
je
sbb
in
mov
fs
xchg
add
pop
mov
das
les
lret
fdivrl
adc
aas
fists
and
dec
call
in
pusha
jo
in
mov
fsubrs
xchg
xor
and
and
adc
push
repz
pop
jecxz
xchg
mov
cmp
lret
frstor
mov
outsl
xchg
dec
cmp
rcrb
cltd
push
ja
pushf
inc
add
jp
jmp
scas
sbbl
mov
adc
ja
imul
aam
or
pop
loope
push
sbb
adcb
mov
cmp
daa
jb
std
adc
mov
xchg
dec
adc
mov
cmp
inc
cmp
jo
shrb
cmpsb
dec
push
jg
jb
iret
in
outsl
cli
xchg
dec
lahf
notl
add
and
pop
mov
int
arpl
sbb
pop
scas
pop
movsl
inc
loop
iret
lods
pop
mov
clc
mov
adc
aam
mov
mov
mov
push
pop
iret
mov
testb
rcrl
into
add
mov
testb
or
jecxz
dec
sub
xchg
sbb
out
test
and
in
cmp
cmp
testb
ljmp
sub
inc
int3
outsb
out
jns,pn
mov
mov
dec
and
mov
mov
outsl
stc
outsl
adc
inc
pushf
pop
in
push
lret
push
jl
jo
inc
stc
or
xchg
sahf
adc
ret
fcmovne
adc
cld
push
and
sbb
in
lcall
cld
inc
sbb
arpl
push
add
jbe
sbb
sbb
push
xchg
jl
mov
jge
fwait
cmpsl
mov
test
cltd
stos
addr16
sahf
cwtl
jp
sub
ljmp
fwait
push
dec
add
mov
sub
cmp
lret
adc
adcl
mov
lret
xchg
dec
fldcw
and
dec
fldt
and
or
lds
pop
leave
pop
add
mov
fsubs
negl
mov
loope
pop
mov
inc
jmp
push
mov
movsb
test
add
sub
pop
stos
pop
and
mov
sub
fists
data16
dec
mov
ss
mov
cmp
cmpl
mov
jns
adc
mov
add
out
xor
add
aad
add
movsb
and
leave
jp
or
cmc
leave
imul
movsb
inc
cmc
scas
or
fwait
cmp
cmp
mov
jb
push
or
cmp
je
mov
jl
out
dec
or
aam
lret
xchg
iret
jl
bound
fcom
cs
adc
scas
mov
fsts
pop
aam
jmp
inc
xchg
arpl
push
cmp
push
leave
pop
sub
out
les
xor
jecxz
aad
lods
movsb
dec
scas
repz
xchg
mov
or
out
leave
adc
sti
cmp
xchg
cmpsl
icebp
sub
iret
lcall
cmpl
das
out
or
idivl
fcomps
movsl
inc
lock
ja
jmp
fwait
incl
sbb
arpl
cwtl
sti
add
mov
mov
xchg
cli
mov
push
ret
jnp
xor
or
xor
mov
fdivl
push
leave
sbb
dec
inc
jle
pushf
je
ret
dec
shlb
rolb
in
shrl
aas
scas
cwtl
or
in
sbb
push
enter
pop
mov
and
sub
pop
xlat
add
inc
add
cmp
dec
jno
add
insb
adc
push
pop
lds
mov
ret
fdivrl
dec
scas
aaa
je
das
das
imul
cmp
cld
push
mov
divl
push
cmc
pop
insl
ds
insb
jbe
mov
xchg
pop
dec
adc
mov
andb
test
rcl
xchg
repz
aad
adc
sbb
xor
call
leave
in
bound
adc
add
loop
mov
dec
sahf
fs
xchg
out
aam
outsl
add
popf
js
mov
out
mov
in
jmp
or
je
pushf
and
mov
pop
insb
sub
shll
jp
dec
and
xor
leave
stc
inc
stc
and
lods
popa
or
xor
or
ds
test
sub
mov
cmpsb
jmp
or
adc
movsb
and
adcb
hlt
cmpsb
dec
jns
sti
fcomip
push
ret
cmc
ret
xor
jnp
push
and
xor
xchg
movsl
cmpsb
jle
adc
pop
lods
pop
xchg
subb
ficoms
cmp
or
dec
mov
push
push
push
push
inc
clc
inc
pop
mov
fisubl
jge
or
and
cmc
cld
fstl
mov
imul
cmpsl
add
iret
movsb
mov
incb
mov
fwait
idiv
xor
ficomps
dec
push
xchg
pop
sbb
and
int3
into
mov
das
mov
shlb
adc
xlat
call
pop
arpl
sub
push
andb
dec
xor
inc
add
adc
ret
fistl
mov
xchg
adc
and
fsub
das
es
or
bound
push
xorb
insb
scas
xchg
or
cmp
lods
push
adc
aam
cmpsl
adc
loope
dec
aaa
xlat
dec
dec
sarb
ds
sbb
dec
jns
pop
inc
daa
dec
jmp
fsubrl
ljmp
xor
cmc
inc
mov
idivb
mov
xor
cmp
loope
les
sbb
cmpsb
int3
xlat
data16
sbb
mov
inc
jno
pop
dec
mov
or
in
insb
adc
dec
pop
and
pop
jbe
rcll
inc
ret
inc
mov
aaa
adc
add
cmp
sbb
and
adc
mov
outsl
aad
sbb
ret
hlt
add
pop
pop
fcmovbe
xchg
mov
bnd
std
mov
out
pshufw
test
rorb
and
pop
das
call
and
outsl
cmp
lods
xchg
in
mov
mov
xlat
xchg
mov
sbb
adc
adc
mov
and
lock
pushf
mov
push
popf
in
and
or
test
pop
in
jb
mov
out
bound
xor
rcll
popf
cmp
out
int3
mov
xlat
push
js
push
pusha
hlt
out
test
xor
sbb
and
pop
inc
dec
push
fdivl
mov
imull
cmpsl
jnp
pop
popf
lret
and
es
xor
fistps
and
sbb
add
inc
in
mov
out
push
jns
xchg
jecxz
pop
add
cmp
mov
lret
sub
push
sarl
adc
inc
and
call
xor
add
leave
jmp
cld
fwait
mov
jne
or
inc
shll
push
fidivl
imul
pop
pop
xchg
adc
mov
jb
sbb
fs
jo
shl
mov
xor
jecxz
mov
test
movaps
mov
mov
mov
inc
ret
inc
pop
ja
xchg
push
addr16
dec
xchg
popa
pop
aam
js
es
sbb
subb
mov
xorl
mov
xor
loop
jle
pop
jp
lcall
inc
shll
or
sbb
nop
mov
push
mov
jg
ds
cmp
add
or
mov
add
mov
push
jne
popf
pop
jecxz
fisttpll
shlb
xchg
sbb
idivb
inc
sbb
mov
insb
mov
cmp
pushf
mov
jb
mov
sbb
in
sub
cltd
clc
mov
or
leave
dec
push
xor
or
pop
ljmp
sahf
pop
push
or
in
pop
outsl
jp
pop
dec
mov
adc
mov
push
xor
adc
stos
aas
inc
push
push
ss
mov
mov
push
incl
inc
icebp
out
xchg
mov
cltd
mov
cmp
ficomps
out
jbe
push
xchg
jmp
adc
mov
dec
out
jge
jne
or
add
fildll
mov
inc
dec
loop
das
icebp
std
repnz
popa
shlb
ljmp
ret
sarb
jecxz
fmul
shll
inc
add
mov
stos
loope
inc
sbb
dec
negl
mov
fistpl
test
jne
sub
insb
mov
ljmp
jbe
lcall
flds
xor
add
inc
lods
test
sbb
imul
push
loop
xor
loop
jbe
sub
xlat
repnz
jp
jp
dec
add
ljmp
popf
movsl
fimuls
clc
imul
push
mov
fcomps
mov
sbb
cli
xor
and
sbb
add
cmp
sarb
fidivrl
xchg
int3
and
insl
outsl
dec
mov
pop
cmp
add
and
cmp
cli
in
fld
push
subb
lds
mov
lret
sbb
jbe
xor
jmp
cmp
lock
clc
adc
xchg
pushf
jmp
adc
popa
rolb
hlt
push
inc
push
data16
add
cmpsl
push
popa
inc
cwtl
pop
inc
inc
xchg
rorb
sti
sbb
jnp
js
test
jmp
sbb
sti
aaa
or
mov
arpl
jae
lret
out
das
pusha
in
test
cmp
push
ds
jo
fmull
xor
dec
mov
hlt
dec
mov
mov
call
lods
xor
cltd
dec
das
loopne
mov
mov
int
jp
outsb
mov
dec
xor
insl
mov
into
mov
test
or
xchg
jns
lcall
popf
xor
xchg
in
jne
add
sti
int3
cmp
rcll
data16
add
in
sub
std
sbb
testb
pop
lea
test
xor
cmpsb
adc
jb
cmp
rcpps
lcall
xor
mov
sub
lods
push
or
pop
lret
je
jb
ljmp
adc
lods
lcall
int
popa
inc
add
sub
in
xchg
out
mov
xchg
pop
dec
mov
stos
pop
mov
add
push
rcr
insb
lock
je
cmp
xor
aad
sbb
imul
ss
adc
sti
imul
cltd
into
stos
cmp
mov
popf
dec
push
roll
push
outsl
and
xlat
add
aaa
xchg
shld
jmp
push
xlat
mov
mov
fisubl
cmpsl
insb
xchg
stos
ret
ret
leave
out
mov
leave
test
into
mov
and
inc
stos
sbb
int3
aad
iret
popf
mov
xchg
xchg
mov
push
mov
scas
in
inc
ljmp
jmp
mov
fildll
shrl
into
jg
xchg
mov
xchg
rcll
mov
movl
popa
fldt
and
or
loop
int
xor
je
popf
je
mov
out
inc
mov
mov
mov
orb
pusha
sub
pop
dec
or
fisttpll
int3
inc
cmpsb
or
mov
out
mov
mov
and
neg
xchg
dec
rorb
cmp
inc
cltd
or
fwait
leave
ja
xor
xchg
in
mov
scas
push
imul
cmp
push
adc
fwait
push
int
test
ja
pop
jo
xor
jno
sbb
mov
std
addr16
fstp
fisubs
dec
fbstp
fwait
andl
xchg
push
push
mov
sub
fs
cmpsb
in
cwtl
arpl
daa
mov
push
cmpsb
loop
movsl
dec
mov
xor
insl
mov
fcompp
ret
jae
sub
lods
les
insb
mov
mov
jns
cltd
or
push
xchg
ljmp
sbb
and
je
or
cmc
jb
repnz
not
in
mov
dec
push
cmp
sbb
pop
cmpsb
int
xor
mov
jmp
fisubl
fsubs
pop
fsts
sub
add
pop
fwait
stos
xor
movsb
mov
dec
mov
shll
inc
and
daa
mov
jbe
cmc
test
mov
or
data16
jae
jns
pop
test
or
xchg
lahf
stc
sub
push
and
xor
outsb
gs
loop
cmpsb
out
add
rorl
xor
js
mov
and
fisttps
in
pop
pop
pop
insl
add
mov
jae
jg
call
das
mov
out
insl
iret
jge
inc
push
aam
jp
xor
inc
pop
or
iret
jno
xor
cmp
add
shlb
sbb
jge
mov
mov
xor
cmc
loop
cmp
pop
xor
addr16
imul
mov
sti
fistl
add
fcompl
shlb
mov
je
repz
ljmp
bound
hlt
cs
orb
scas
mov
mov
mov
add
xchg
jge
lds
repnz
pop
jmp
xchg
cli
jmp
push
ret
pushl
mov
scas
or
imul
adc
dec
sub
sbb
int3
jns
fs
notb
outsl
add
xlat
dec
cmpb
jle
and
add
jmp
int3
mov
loopne
mov
push
jle
gs
mov
pop
push
arpl
push
xchg
mov
popf
fiaddl
testb
leave
push
add
icebp
loope
sbb
push
inc
and
mov
es
xchg
cmp
bound
inc
out
push
pusha
pop
nop
fisubl
sub
pop
xchg
leave
jecxz
popf
jno
rcl
xlat
lcall
push
testl
jge
lods
mov
arpl
popa
pop
push
rcrl
jnp
aam
jle
push
test
les
dec
sub
testb
xor
sub
cmp
mov
mov
xchg
fldt
stos
xor
xchg
inc
mov
push
sub
popf
mov
push
outsl
addr16
lea
push
add
test
shld
ljmp
jp
lcall
leave
xchg
and
aaa
mov
mov
daa
dec
inc
and
sub
fldcw
movsl
inc
movsl
pop
and
icebp
imul
push
lret
sub
dec
fisubrs
mov
test
xchg
je
adc
or
push
ljmp
ret
pop
inc
jno
push
mov
xchg
je
stos
ljmp
mov
add
movsl
pop
into
sarl
shll
ss
xchg
inc
sbb
xor
pop
jb
and
inc
loop
aam
pop
mov
inc
movsb
push
fld
jae
cwtl
je
adc
dec
call
mov
loop
insb
std
xchg
subb
scas
into
mov
xchg
sbb
pop
in
fwait
dec
test
or
stc
insl
test
shrb
sbb
push
mov
rorb
lahf
imul
push
adc
fdivrs
iret
aad
test
push
je
es
cld
adcl
outsl
jb
js
push
xchg
sar
jb
inc
aas
pusha
js
imul
outsb
pop
bound
aaa
sub
dec
push
jne
imulb
pop
and
inc
jnp
cmp
or
mov
xchg
lcall
push
js
xchg
stos
inc
movsl
orl
add
int
es
xor
cli
scas
sbb
jle
repz
dec
jae
cli
jecxz
sub
add
dec
test
push
clc
movsl
xchg
jge
pop
jmp
pop
xchg
out
mov
jl
out
neg
adc
movsl
xchg
and
insl
jp
mov
iret
shll
mov
cmp
pop
daa
or
pop
mov
out
and
shlb
jl
jle
mov
sub
lock
dec
or
lock
jb
push
or
jge
rcr
cmp
xchg
iret
adc
add
andb
xor
imul
stos
or
mov
xchg
lea
xor
mov
mov
jge
cli
loopne
loop
sbb
cmpsb
sub
push
aas
dec
shrl
xchg
push
and
mov
inc
cmp
xchg
adc
aad
ret
or
filds
jge
lea
pop
arpl
push
popa
outsb
repnz
out
and
gs
fcomps
dec
sbb
xor
scas
aad
and
testb
mov
dec
mov
xlat
pop
xchg
and
dec
leave
xor
imul
cltd
incl
das
xor
adc
subl
or
mov
data16
fcmovnu
pop
loopne
repz
xchg
es
loope
repnz
sbb
mov
or
sub
xchg
mov
movsb
out
inc
arpl
mov
out
pop
add
adc
loop
fldl2e
fnstsw
cmp
jo
lahf
adc
push
inc
je
xor
cmpsb
jl
pop
mov
ret
push
in
add
sbb
jae
arpl
push
jb
mov
dec
mov
add
jge
daa
jmp
mov
cmp
mov
repnz
push
test
lahf
loop
data16
jecxz
lock
sti
or
pop
mov
mov
fnstenv
sub
pusha
and
fildl
stos
cmpsl
scas
push
sub
ret
bound
flds
ds
gs
inc
or
sub
pop
xlat
orl
sarb
pusha
xchg
into
cmc
adc
and
fs
les
xor
and
xor
add
pop
rclb
fnsave
cmc
rorl
out
jnp
push
mov
push
push
push
test
hlt
pop
add
nop
js
xchg
movsl
cmp
mov
inc
js
test
jl
mov
mov
dec
imul
push
mov
mov
adc
sbb
in
jno
aam
cli
xlat
and
lret
push
push
divb
push
jl
xor
push
cmpsl
mov
jl
dec
hlt
and
leave
cmpsb
and
pop
dec
fistpll
rcrl
or
scas
and
mov
mov
cmpl
jbe
and
mov
or
push
out
pusha
lgdtl
push
xchg
sbb
aaa
rcll
xor
mov
adc
dec
add
outsb
jp
fwait
jnp
lea
clc
into
jb
clc
les
jb
les
dec
jg
jb
push
adcb
mov
bound
pop
adc
out
data16
imul
ret
pusha
push
fisubrl
xchg
xchg
dec
sub
rcrb
pop
mov
xchg
xor
hlt
test
xor
imul
cltd
sub
mov
decb
jecxz
jle
and
sub
mov
mov
int3
shl
and
aam
xchg
pop
mov
xchg
addb
data16
insb
fsubrl
pop
movsb
mov
repnz
xor
xchg
xchg
test
jns
test
scas
sbb
iret
fbstp
jb
cmp
lds
push
sbbb
jp
jne
fdivl
clc
dec
dec
into
jg
ljmp
or
dec
mov
addl
ret
sub
fiadds
pop
sbbl
inc
ficompl
dec
insb
mov
imul
repz
mov
xchg
lds
mov
std
jg
jl
faddl
stc
mov
pop
insl
adc
fstpl
les
sbbl
push
xor
or
push
arpl
xor
jb
mov
and
loope
out
int3
mov
adc
repz
cmp
fs
mov
fs
adc
xor
movsl
test
lock
lret
and
push
push
les
cwtl
adc
stos
pushf
push
sub
mov
dec
and
fwait
push
dec
out
pop
or
lods
or
adc
or
or
xchg
inc
repnz
and
mov
call
std
lods
adc
mov
mov
outsl
or
pop
adc
orb
jle
mov
xor
stos
pushf
sbb
sub
fwait
test
xchg
in
je
jmp
daa
jmp
cwtl
inc
inc
and
stos
hlt
mov
add
loop
jae
andl
imul
rorb
repz
aam
inc
pop
inc
ret
add
push
pop
sbb
out
lea
xchg
lods
pop
push
sbb
loopne
cmpsb
xor
cmpsl
ficoms
dec
jb
lret
inc
mov
mov
orl
pop
xlat
lret
xor
out
xchg
adc
jg
imul
mov
dec
out
xlat
mov
int
sub
pop
mov
mov
pop
mov
mov
fcmovbe
mov
mov
push
cli
push
jp
dec
jb
jmp
pusha
imul
in
icebp
fidivl
scas
cwtl
out
and
addr16
test
mov
sets
in
mov
cmp
jle
mov
iret
jecxz
jb
push
leave
push
add
mov
cmp
out
push
flds
bound
icebp
out
jge
push
cmp
shll
hlt
pop
lock
mov
add
xchg
ljmp
fsubr
gs
push
sub
lods
pop
ljmp
sbbl
and
gs
push
iret
push
sub
mov
and
loope
cltd
mov
out
test
lret
icebp
ret
sbb
int
push
mov
ds
jecxz
repz
fwait
cmp
mov
cmpsb
cmc
cld
mov
or
shlb
stos
mov
jae
push
cmpsl
or
subb
aaa
rcrb
test
push
or
jle
adc
add
aaa
dec
and
imul
mov
out
cmpsl
test
rol
ret
iret
add
adc
jl
sbb
sub
pop
cld
rol
mov
xchg
fldcw
mov
xchg
mulb
movsl
test
jmp
add
push
push
push
fidivl
sub
add
dec
cmp
or
mov
arpl
adc
dec
aad
cmc
push
subb
jecxz
int
jne
push
jmp
and
sbb
sbb
mov
cmpsb
popa
ficoms
cltd
jno
add
popa
mov
daa
jae
hlt
cs
jne
imul
ret
loope
mov
lods
sub
jg
inc
or
outsl
and
stos
and
pop
ljmp
push
out
not
push
inc
fdivrl
cwtl
pop
mov
mov
sbb
jo
pushf
mov
pop
int3
mov
dec
out
data16
pop
enter
adc
add
jnp
cmp
outsb
jmp
dec
mov
jb
loop
jne
mov
mov
frstor
cmc
push
loop
imul
pop
lcall
popf
dec
xchg
icebp
ja
sbb
leave
mov
test
inc
cwtl
pushf
add
mov
cmp
sbb
jp
jne
pop
call
cmp
imul
mov
and
push
mov
mov
or
pop
dec
test
push
das
mov
adc
pop
daa
push
rcrl
xchg
sub
loopne
icebp
add
stc
shll
jge
pop
jae
mov
adc
ficomps
shr
push
dec
pop
in
pslld
push
cld
xchg
loope
mov
fnstenv
ja
cmp
dec
adc
add
jnp
sbb
sub
jge
popa
push
and
push
clc
push
push
mov
fstpl
rolb
push
mov
addr16
or
push
hlt
mov
xchg
mov
dec
in
dec
insb
mov
sub
and
cmp
call
clc
fidivl
stc
je
cmp
iret
out
sbb
xlat
rorl
fcom
pop
sbb
push
xor
loopne
mov
cmpsl
ja
inc
arpl
pop
jo
lret
pop
movsl
adcb
int
movsl
test
xchg
xor
adcl
and
mov
mov
and
sub
lcall
stos
lock
mov
or
out
sub
lahf
add
pop
inc
jmp
or
test
cmpsb
sbb
pop
mov
mov
dec
iret
sbb
into
push
mov
pop
in
xor
out
push
out
inc
aaa
fsubl
jmp
mov
in
ret
aad
lcall
xchg
aad
add
loop
push
lahf
jl
out
jbe
loope
pop
je
or
jne
cmpsb
mov
and
sub
mov
or
popf
and
xchg
push
out
xor
dec
mov
es
add
and
add
stos
repz
test
call
sub
dec
add
xchg
lcall
add
add
dec
outsl
nop
or
enter
nop
dec
imul
push
lods
add
lods
pop
ret
pusha
push
cmp
jno
xor
cwtl
sbb
js
push
adc
mov
insl
push
xchg
pminub
test
sahf
sbb
add
js
fisttpl
xchg
or
rol
es
and
cwtl
movsb
or
sbb
sbb
and
imul
mov
or
ja
shlb
test
sbb
adc
jb
inc
outsb
sbb
xchg
stos
in
aad
sub
xor
into
jne
xor
pop
adc
int3
mov
pop
mov
sbb
sbb
fstl
aad
inc
std
aas
hlt
scas
notb
clc
in
mov
add
sbb
mov
comiss
hlt
mov
and
or
sub
push
adc
ficompl
jle
int3
pop
mov
xchg
inc
sbb
cmp
call
cmp
inc
pop
inc
jne
inc
clc
and
mov
cmp
sub
adc
aam
jno
jmp
cwtd
push
stc
push
inc
rorb
xchg
cli
pop
xor
jns
test
rcrb
or
xchg
in
popa
notl
stos
xlat
add
aaa
iret
or
xor
push
sbb
lods
aaa
call
sub
mov
mov
push
push
push
fcoms
xchg
testb
insl
pop
pop
leave
sbb
pop
arpl
nop
sbb
into
popf
subb
pop
sbb
dec
xchg
cmp
and
and
pop
out
repz
fwait
dec
add
add
out
pop
mov
out
out
push
aaa
or
fmull
jno
xor
lods
maxps
jmp
jecxz
rolb
mov
mov
ret
pusha
fidivrl
int3
inc
lods
mov
jl
and
xor
lcall
movsb
ds
add
cmpsb
pop
aaa
push
push
jecxz
fldcw
xor
xlat
pop
xor
sbb
jae
gs
fs
xor
dec
mov
lcall
mov
fsub
dec
in
or
push
sbb
dec
bound
ja
mov
sub
or
popf
xchg
xchg
pop
cmc
add
push
jge
mov
pop
call
stos
cmp
fdivr
int
adcb
rcl
ret
test
mov
pop
dec
insl
sbb
xchg
leave
push
sub
sbb
or
lods
cwtl
mov
pop
test
add
cmp
ja
andb
rcrl
ret
jno
push
shl
push
adc
cmpb
jl
jmp
in
in
test
jne
mov
cmc
inc
mov
jg
mov
dec
icebp
fstpl
mov
jne
mov
mov
roll
or
xchg
sbb
cltd
mov
inc
ret
shr
push
lods
rclb
push
inc
pop
cmc
ret
stos
outsb
sub
loope
mov
cmpsl
or
mov
in
pop
bound
pmullw
outsb
aas
movsl
fdivrs
jl
orb
stos
leave
jg
fs
movsl
sti
lret
sbb
adc
xchg
fdivrs
adc
or
sbb
loopne
sub
es
jmp
ljmp
mov
and
cs
ja
enter
aam
rclb
mov
add
sub
adc
icebp
push
and
xchg
pop
in
sub
pushf
ljmp
mov
ja
jb
sbb
in
dec
fdivrs
andl
pop
sbb
ret
loopne
cwtl
popf
pop
adc
sub
inc
rcr
mov
pop
sbb
jecxz
push
jns
mov
mov
mov
lret
bound
std
cmp
jae
loopne
push
mov
decl
xchg
push
sub
add
shrb
sub
sti
mov
lahf
insb
std
lods
js
jbe
cltd
div
jne
push
ja
data16
inc
jo
mov
cs
cmp
push
push
mov
fdivl
jns
int
and
lcall
imul
cmp
xor
dec
mov
cmp
out
adc
pop
call
pop
dec
daa
push
lahf
add
dec
pusha
ja
int3
mov
fcmovnb
push
mov
icebp
jmp
dec
inc
ljmp
mov
int
mov
inc
bound
or
or
mov
jne
jge
sbb
push
lods
movsb
sbb
mov
int3
mov
pusha
aad
loopne
sub
dec
stos
shll
fisubrs
sub
outsb
mov
andb
inc
sbb
add
out
mov
and
pushl
shll
inc
lcall
mov
mov
aad
adc
cwtl
std
sarl
stos
ss
loopne
jl
aam
sbb
cmc
inc
in
fistps
push
sub
cmpsl
cwtl
call
fiadds
add
jmp
cmpxchg
test
cmpsl
rorb
push
and
add
add
xchg
push
lea
pop
mov
ret
stc
mov
jno
repnz
stos
cwtl
arpl
dec
push
aas
mov
inc
int3
mull
adc
xchg
arpl
cld
fnstenv
lret
inc
xlat
es
jge
sarl
pop
push
andl
dec
and
add
lods
and
mov
movsl
add
xor
lret
sahf
add
push
paddsw
inc
or
push
dec
lret
ss
aad
dec
test
sbb
dec
sti
das
dec
insb
pop
pop
dec
jg
jbe
aas
icebp
in
inc
fldl
mov
push
enter
cmp
mov
aas
fldt
test
dec
aad
mov
sub
jmp
or
mov
jo
sub
add
xchg
fidivrl
dec
adc
adc
adc
fsubs
in
push
push
cmp
and
push
sub
sarl
daa
pop
insl
aad
sbb
jo
fnstenv
ret
cmp
cmp
push
pop
enter
xor
push
cltd
sub
insb
test
fildl
pop
inc
shrb
hlt
pusha
cli
ss
cwtl
jae
in
std
push
mov
sahf
repnz
pop
pusha
mov
mov
dec
inc
jnp
dec
xchg
xor
cmpb
bound
sub
mov
cli
pop
xchg
loop
fucompp
sub
mov
jb
push
mov
sbb
movsb
pusha
sub
push
in
nop
push
pop
stos
lahf
mov
adc
mov
in
iret
xchg
insl
stc
mov
cmp
xchg
xlat
mov
xchg
cmp
movsl
mov
flds
mov
dec
test
mov
stc
jno
xchg
mov
and
inc
fisttpll
lcall
xchg
int
into
pop
dec
mov
inc
adc
push
orl
adc
mov
and
and
lea
fwait
mov
jg
rorb
sub
pop
mov
jb
shlb
cli
push
jl
and
or
xchg
lret
in
xchg
aad
or
xchg
dec
ds
loopne
aaa
je
ret
xchg
ret
insb
ret
arpl
cmp
stos
jmp
dec
push
or
stc
cmp
push
xchg
sbb
rcrl
or
cli
push
push
loop
cmp
in
fs
rclb
lret
idivl
ds
jmp
test
aas
out
xchg
fcompl
mov
jmp
cmp
cmp
fs
mov
fistpll
jne
sbb
je
adc
dec
sbb
repz
call
stos
js
rclb
xor
push
lret
shl
jmp
outsb
pop
out
pop
ss
push
adc
and
test
lock
xchg
fadds
int
nop
cmp
scas
mov
aas
movq
jp
imul
divb
add
inc
mov
inc
inc
shr
pop
mov
repnz
shl
push
shl
int3
adc
jbe
pop
call
or
mulb
imul
push
pop
in
jae
rol
pop
mov
popf
incl
sub
add
pop
aad
arpl
imul
cmpsl
sbb
out
push
sbbl
je
das
mov
ds
test
and
lea
daa
es
mov
add
std
cmp
mov
inc
dec
inc
pusha
pop
lret
in
sahf
add
cmpsl
scas
sbb
mov
rol
ret
dec
or
add
pusha
dec
repnz
daa
mov
adc
dec
loope
dec
and
push
repnz
repnz
cltd
addl
and
lea
mov
sbb
pop
shlb
pop
inc
test
mov
movaps
pop
loop
je
fiaddl
jo
add
dec
hlt
out
jb
mov
nop
stos
sahf
stc
mov
mov
dec
stos
mov
test
dec
jbe
cs
push
sub
inc
pop
cmp
xchg
hlt
or
js
jg
orl
mov
insb
test
sub
sbbb
es
dec
repz
jnp
in
sub
jp
pop
mov
inc
xor
and
or
imul
mov
mov
xor
popa
out
lret
pop
xor
cmp
pushf
mov
js
or
or
adc
xchg
sarl
pop
filds
mov
dec
xor
enter
xlat
mov
jbe
inc
pushf
cmpsl
in
xor
dec
sarb
jp
jle
sbb
mov
int3
and
in
lahf
add
insb
insb
pop
mov
xorb
inc
in
aas
lds
inc
inc
data16
sub
test
push
jns
sub
repz
rorb
insb
mov
movsl
mov
movsb
xchg
jl
cwtl
xor
pusha
dec
vunpckhpd
fisubs
inc
loopne
fnsave
fidivl
adc
xor
xchg
mov
inc
in
or
in
xor
movsb
and
aam
fbstp
xchg
loopne
push
pop
int
dec
dec
adc
mov
div
fs
lahf
inc
imul
in
cmc
pop
cmc
cmpsb
or
sub
movq
inc
inc
xor
scas
addb
xchg
outsl
pop
pop
or
stos
and
inc
inc
aaa
or
inc
inc
lock
xlat
arpl
das
lahf
mov
aam
mov
mov
or
fwait
cmc
mov
sbb
inc
pop
cli
or
xchg
pop
adc
ljmp
mov
dec
mov
in
mov
daa
repnz
jmp
dec
push
mov
or
pop
pop
add
outsl
fistl
loopne
jp
inc
or
add
mov
mov
sub
pushf
stos
sahf
inc
jbe
lock
pop
or
cmc
sub
mov
and
shrb
adc
call
sub
ljmp
dec
test
in
mov
sbb
pop
imul
out
ffree
mov
rolb
jnp
fildll
and
stc
fcom
sbb
lahf
idivl
stc
inc
adc
frstor
out
loop
jecxz
shll
cli
das
pop
xchg
jl
cmp
inc
mov
imul
xchg
hlt
mov
sub
scas
out
push
lods
adc
xchg
mov
sbb
add
push
scas
in
push
sub
jae
push
sbb
lea
out
inc
push
push
inc
xchg
pop
es
lock
ss
jg
cmc
js
pop
test
sti
mov
mov
xchg
imul
inc
in
mov
idivb
jbe
ret
inc
xor
and
ret
stos
das
sbb
imul
sub
or
xor
pop
xchg
or
dec
pop
cmp
movsl
xor
fdivl
fcoml
pop
mov
cmp
lock
loopne
mov
lcall
dec
enter
or
pop
mov
out
mov
loop
orl
cli
and
fcomps
xor
aam
cmp
notb
mov
js
fcomi
lods
mov
pushf
cli
mov
rcll
xchg
imul
adc
inc
add
or
and
push
cli
ret
aad
sbb
mov
cs
icebp
daa
pop
std
aaa
mov
in
pop
pop
fnstenv
xlat
and
mov
iret
inc
lods
pop
cli
jle
sub
sbb
mov
or
lods
push
lcall
out
dec
and
pop
fs
cmp
pop
push
imul
mov
imul
sub
icebp
add
mov
test
in
lods
mov
push
mov
add
push
shlb
cs
jg
xor
inc
sbb
jno
sarb
dec
enterw
mov
pusha
jo
insl
fs
cmpsl
add
repnz
xor
cmp
xor
xchg
lahf
inc
sarl
bound
cmp
mov
call
sub
fimull
jg
lds
inc
rorl
add
add
xor
ss
out
xor
aas
cmp
jnp
sub
mov
adc
cmp
in
test
pop
flds
lods
add
sub
ss
push
or
inc
jbe
mov
mov
mov
mov
pop
pop
es
mull
adc
test
pop
aas
add
jb
mov
daa
int3
in
icebp
jmp
je
push
movsb
jl
xchg
nop
fildll
cmp
push
xchg
pop
ja
mov
mov
jg
imul
pop
cmp
xlat
xor
lock
xchg
inc
jle
into
add
movsb
insb
cs
sub
mov
aas
in
mov
jnp
mov
js
aas
aaa
push
mov
pusha
inc
mov
mov
push
call
jp
imul
add
cmp
in
add
outsl
mov
clc
cmp
mov
inc
mov
mov
lock
or
xorl
and
mov
jg
cmpsb
cwtl
push
aas
ljmp
cmp
pop
mov
imul
jecxz
flds
push
jle
sub
inc
add
jo
test
mov
xchg
ds
cmp
insl
pusha
sbb
mov
or
jecxz
ret
mov
mov
xlat
movsl
lods
outsb
or
xor
test
jns
cmc
decb
sub
xor
xlat
lret
lea
inc
add
out
int3
gs
addr16
push
movsb
repz
pop
dec
dec
jg
cwtl
call
mulb
aad
arpl
dec
jb
dec
sti
in
push
test
adc
inc
sub
fnstcw
fdivr
or
cmpsb
push
mov
dec
xlat
in
rcrb
and
roll
in
enter
negb
jl
or
stos
outsl
or
cmp
in
inc
inc
jp
xchg
cmp
xor
ljmp
xor
sub
lcall
jmp
roll
ror
call
testb
lahf
bound
rcll
pop
fcoms
push
in
addr16
aam
jno
sarb
dec
ds
mov
add
xchg
lahf
fwait
jmp
shl
mov
cmp
fdivl
push
bound
pop
and
jbe
mov
lahf
push
incl
jle
cmpsb
in
push
pushf
fisubl
xchg
mov
out
test
mov
les
inc
imul
in
add
fprem1
jge
add
cld
or
jno
inc
adc
adc
stos
lret
xchg
mov
pop
lret
jmp
lret
push
mov
fs
daa
test
aaa
sub
aad
imul
jg
sti
loopne
xor
pusha
cmpb
jno
insb
inc
or
cmp
aad
mov
sbb
push
orb
and
movsl
popl
std
lock
lods
cltd
dec
notl
jae
push
rorl
mov
pop
xor
and
mov
shr
fwait
xchg
popf
push
sub
inc
xlat
dec
scas
mov
and
mov
imul
xor
sub
add
pop
jnp
and
addr16
mov
sub
inc
dec
push
xchg
imul
cltd
clc
subb
popl
adc
sti
dec
xchg
int3
sub
nop
ret
cmp
push
pushf
ja
test
jecxz
insl
mov
sub
adc
xorl
cmp
addl
pusha
jns
iret
jbe
ffree
fistps
push
cmp
mov
sbbl
pop
mov
in
adc
or
adc
lds
shrl
repz
add
mov
jge
push
xor
mov
xor
xchg
rcrb
fnstcw
lahf
call
jae
frstor
xor
jge
insb
roll
add
push
xor
out
xor
xor
xchg
ds
mov
xor
std
pop
repz
pop
ja
xor
test
je
push
pop
call
js
and
xor
xor
adc
shll
imul
mov
cmp
cmp
sbb
cmp
in
and
cmp
cltd
adc
pop
cld
cs
jle
mov
mov
push
pop
cmp
cwtl
mov
mov
xchg
aad
in
es
or
sub
or
loope
imul
push
enter
scas
popf
enter
dec
mov
scas
fwait
int
xchg
cli
insb
inc
lds
pop
mov
clc
jbe
cmp
lret
in
xor
pop
sub
jge
mov
shll
push
push
and
pop
add
xorl
sbb
iret
mov
hlt
xchg
lods
inc
lods
pop
std
push
mov
push
xor
je
lahf
push
ret
lea
dec
sti
adc
fstpt
lret
and
sub
stos
pop
loop
aas
sbb
adc
inc
xchg
lds
sbb
fidivrs
dec
in
ljmp
push
xchg
jo
dec
pop
or
bt
loop
cmp
lret
push
in
mov
mov
mov
int3
inc
jae
inc
mov
into
push
cmp
dec
test
test
dec
add
xchg
outsl
adc
dec
dec
inc
adc
lret
mov
les
test
dec
popf
push
aaa
inc
fstps
jecxz
das
fwait
lea
pop
fcom
sbb
imul
cld
insl
fwait
les
outsb
jbe
sub
shll
mov
stos
jns
or
adc
mov
addb
scas
rcrl
mov
jo
dec
push
addr16
jl
mov
xchg
mov
jmp
mov
in
mov
icebp
ret
xor
xchg
mov
jge
lds
sbb
or
jp
testb
outsb
shlb
or
movsl
popf
repz
mov
popf
int3
pop
pop
pop
xchg
outsb
in
mov
add
push
mov
sbb
pop
xor
lret
std
add
shrl
jp
call
cmpb
cmp
cmp
cmpsb
jmp
popf
or
xor
mov
jecxz
out
jb
mov
xchg
imul
dec
xchg
mov
fdivrs
adc
push
in
xchg
push
out
mov
dec
xor
idiv
lods
clc
les
pop
popa
lcall
out
pop
sub
mov
inc
cmp
xchg
shr
nop
mov
adc
shlb
aam
dec
xchg
cmpb
je
lods
stos
cld
sbb
pop
push
mov
mov
ret
je
ret
jmp
cli
iret
cmp
or
mov
movsb
jo
xor
add
ss
pop
sub
add
push
imul
push
or
into
cmp
jecxz
mov
jmp
out
cli
shl
aad
mov
lock
testl
popa
mov
sub
imul
test
pop
arpl
xchg
cmpb
mov
mov
sbb
loop
ss
add
add
dec
xchg
or
mov
mov
out
jp
push
nop
std
jne
call
push
into
idivb
xchg
pop
add
adc
sbb
mov
or
add
lahf
ljmp
lret
mov
add
mov
cli
daa
inc
cs
lcall
jno
sti
sahf
pop
or
outsb
aaa
fwait
and
or
inc
fwait
and
frstor
jg
pop
insb
vpshlq
int3
mov
pop
add
sub
inc
call
ds
out
xor
and
push
sbb
jl
cwtl
jmp
out
push
push
push
adcb
ror
sbb
test
std
dec
js
leave
mov
addr16
pop
cmp
mov
adc
jmp
xor
movsb
les
xchg
push
frstor
lret
popa
mov
add
inc
mov
inc
jnp
mov
loop
cmp
xor
popa
pop
add
jecxz
lcall
add
mov
lret
pop
sbb
lret
push
xchg
sbb
mov
xor
mov
aad
and
mov
xor
mov
ficompl
in
lret
out
loop
imul
push
xchg
mov
mov
jg
je
cli
fs
out
xchg
fnstcw
inc
cli
int
loop
sar
icebp
sub
out
xor
loope
add
rolb
or
dec
pop
push
into
std
int
je
loope
into
jo
rcr
mov
adc
mov
or
ja
in
std
outsb
mov
xor
dec
push
addb
push
sarl
fdivr
sub
jnp
mov
scas
sub
stc
push
fistps
sbb
lret
pop
mov
fnstenv
rcrb
test
mov
fisttpll
adc
cld
or
test
repz
mov
mov
push
add
es
clc
mov
mov
stc
neg
or
pop
mov
xor
add
in
inc
daa
cmp
lods
fucom
adc
push
mov
mov
jns
stos
je
les
dec
out
fmull
pop
aaa
rcrb
popa
cmc
stos
cltd
add
mov
pop
lea
xchg
push
sbb
cmpsb
jle
sub
add
insb
cmp
and
and
inc
push
call
insl
lods
cld
insb
sahf
ds
incb
jmp
test
add
cld
popf
fcmove
jmp
into
lds
mov
mov
jl
lods
stos
mov
sbb
jo
mov
jge
ret
or
mov
cmp
pop
mov
int3
mov
rclb
test
orl
xchg
sti
leave
xlat
das
sbb
ja
jbe
cmp
add
push
adc
sti
test
fdivrp
mov
loopne
leave
or
add
call
sub
mov
ljmp
iret
stos
xor
insl
sbb
clc
push
lea
fisttpll
test
xchg
test
inc
mov
adc
jns
adc
fisubrs
mov
test
sbb
jp
scas
and
shl
in
cmp
out
lock
enter
pop
xor
push
sbbb
leave
xchg
xchg
out
fidivl
mov
cmpsl
jne
lods
xchg
leave
cs
mov
roll
fucomi
mov
cmp
xchg
sub
fldln2
loope
mov
pop
cld
cmp
adc
or
popa
inc
int3
adc
xorl
jbe
and
add
jmp
xor
ret
int3
dec
xlat
test
jnp
mov
inc
flds
lods
mov
inc
jmp
in
cltd
add
or
in
out
bound
stos
cmp
pop
test
in
sub
in
addr16
sub
sub
xchg
jmp
js
xchg
mov
out
gs
xor
pop
sbb
jmp
sbb
insb
fists
mov
jge
jns
out
jg
mov
dec
xchg
sbb
or
fisubrl
cs
es
arpl
xlat
data16
pop
or
not
jl
push
mov
stos
and
aas
inc
dec
scas
aas
sbb
fcomip
and
xor
lods
sub
jecxz
dec
add
outsl
lahf
dec
push
xor
mov
imull
add
fdiv
mov
fstpl
xor
sub
and
fs
cmp
inc
and
sti
mov
add
mov
xchg
lods
cmp
and
scas
xor
int3
test
and
hlt
sbb
in
lea
adc
jnp
js
in
push
xchg
xor
popf
imul
sahf
add
ret
fcomp
jb
xor
outsl
xchg
fnsave
lcall
in
inc
sub
ss
mov
cmpsb
jb
xor
in
sbb
sahf
mov
mov
jo
outsl
hlt
imul
clc
sbbl
xchg
lds
push
fcomps
in
push
insb
cmp
jl
and
pop
xchg
push
gs
fiadds
ficoms
ret
mov
shlb
js
sbb
cmp
adcb
or
int3
sbb
insb
movsb
push
std
or
push
popa
fsts
lret
pop
movsl
jge
sarl
popf
push
fnstenv
jecxz
cltd
rsqrtps
popf
sub
add
jl
in
in
mov
pop
imul
mov
imul
jmp
inc
aad
jle
loope
sbb
xor
xor
sub
cmpsb
sub
mov
in
popf
and
pop
cmp
pushf
xchg
in
jl
repnz
popa
addr16
mov
sahf
mov
repz
or
cmc
xchg
stos
cltd
rol
xchg
cmp
aaa
loop
mov
fs
dec
cmp
punpcklbw
in
mov
insl
cli
xlat
mov
push
adc
out
lret
popa
push
push
push
xor
lods
fildll
xchg
xor
shrl
or
pop
inc
adc
mul
xchg
nop
mov
inc
shl
xor
sbb
inc
xchg
mov
mov
test
or
sti
mov
sbb
ds
and
clc
popa
add
dec
adc
adc
ficompl
or
arpl
xchg
pop
hlt
jg
inc
or
sti
idiv
xor
add
push
in
dec
adc
add
or
inc
cmp
mov
popa
mov
shlb
out
mulb
int3
inc
jne
sar
sahf
cltd
or
cwtl
xchg
mov
jl
jns
mov
cmpsl
xchg
stos
scas
push
inc
ret
js
cmpsb
pop
cmp
into
imul
cltd
imul
fsub
cld
popf
jno
test
jno
in
xor
mov
js
xor
sub
cld
orl
enter
fcoms
cltd
imul
fs
sub
ds
daa
jb
adc
aas
daa
add
enter
xchg
lock
mov
jno
jb
mov
cmp
ljmp
jnp
xor
mov
cmc
mov
cltd
push
shr
inc
dec
xor
lods
add
data16
xchg
pop
add
xchg
push
call
sti
pop
in
jno
loopne
movsl
mov
cmp
mov
in
jl
cmp
pop
mov
rorb
aaa
sub
sub
insl
cmp
shr
test
push
mov
mov
adc
adc
in
jnp
xchg
sub
pop
mov
aam
popf
out
addr16
repz
iret
repnz
test
sub
cmp
outsl
lcall
mov
dec
add
popa
mov
sbb
pop
pop
loopne
jge
or
fsubrs
sbb
and
cmc
add
out
rcrl
add
add
jle
adc
lock
test
out
lahf
les
icebp
jecxz
out
push
bound
rorb
aam
fwait
push
mov
adc
pop
jne
sti
test
out
frstor
push
xchg
sbb
lock
stc
outsb
jne
cld
sub
sbb
cmp
arpl
cwtl
leave
inc
xchg
rorb
scas
xchg
dec
mov
mov
mov
mov
or
or
ret
or
pop
adc
mov
cs
stc
in
mov
ret
out
sbb
jecxz
and
push
or
ljmp
dec
cmpsb
and
xor
jp
addl
sahf
sbb
jle
stc
dec
or
push
fistps
std
cmp
mov
dec
pop
aaa
or
loope
out
jge
jb
arpl
pop
mov
push
fcompl
lret
pusha
lahf
jp
inc
loop
push
push
mov
xchg
add
lret
sub
jnp
sbb
cmp
mov
jmp
lock
movsb
sub
sub
sbb
in
fists
or
or
add
sbb
add
rcrl
xor
push
mov
lock
cld
or
int
lock
jmp
jmp
mov
stos
mov
rolb
push
mov
inc
jo
adc
adc
sbb
inc
jb
shl
and
xchg
pushf
mov
mov
mov
jne
jg
imul
aaa
adcb
xor
das
add
stos
sahf
vunpckhpd
rorl
cli
aas
sub
mov
aam
dec
mov
orl
roll
mov
cli
add
mov
out
iret
inc
shr
cmp
shll
cmp
rorl
jnp
jns
xchg
dec
jno
xchg
test
ds
add
fnstenv
dec
and
sbb
loopne
dec
sbb
aam
xchg
mov
jne
cmpb
jno
out
leave
or
daa
mov
ret
addr16
sub
pop
ret
or
dec
jnp
jns
icebp
pop
je
aas
sbb
xchg
decb
negl
aam
jecxz
and
movsl
and
fstpl
imul
mov
mov
push
mov
adc
sub
adc
mov
mov
cmp
xor
xor
push
scas
cmp
or
pop
sub
icebp
jb
pop
rcll
ljmp
mov
cmp
out
xchg
add
lahf
in
mov
fucomp
inc
imul
push
mov
scas
jbe
cmp
mov
mov
leave
cmpsb
mov
in
cli
gs
xor
push
test
and
stos
jle
jne
jmp
lods
imul
mov
pop
xor
ret
sti
scas
mov
fwait
pop
imul
scas
fs
mov
ljmp
pop
stc
inc
test
cmp
adc
sub
call
cmc
sar
test
sub
in
or
jb
or
daa
push
jnp
sub
scas
call
lods
ficompl
je
test
aam
adc
lods
pop
dec
mov
pop
push
pop
sub
inc
cld
icebp
scas
fisttpll
jns
addr16
pop
cmp
int
jl
and
into
shl
xchg
cwtl
mov
mov
mov
cs
jb
cmp
mov
ret
repnz
jbe
mov
test
movb
dec
ds
xor
mov
jle,pn
sbb
test
or
call
fcomi
jb
mov
push
mov
mov
sub
mov
mov
push
cmpb
icebp
push
cmpsb
mov
push
imul
lret
stos
jae
pop
ftst
insl
dec
mov
cmp
out
mov
cmp
adc
pop
shll
dec
mov
dec
ss
inc
out
fcmovbe
push
ds
pop
jmp
imul
add
movsl
nop
and
or
push
jno
pusha
popf
sbb
cmp
mov
test
es
daa
hlt
push
call
ret
rcll
or
xchg
inc
ja
or
js
push
sub
stos
xlat
pop
int3
scas
mov
cmp
mov
ret
cmc
gs
gs
adc
pusha
inc
pop
movsb
jl
insb
jecxz
ja
stos
int
in
dec
push
sbb
xchg
les
hlt
fwait
push
pop
lods
popw
jl
add
into
inc
jp
or
mov
lods
mov
aam
dec
mov
mov
into
mov
dec
or
aas
mov
notb
std
pushf
es
jbe
inc
je
pop
and
hlt
xchg
jb
sub
cmpsl
rorl
xchg
mov
pop
cmp
addr16
test
mov
stos
xchg
jmp
je
scas
add
add
mov
rcll
je
inc
outsl
jo
cmp
or
dec
stc
lods
mov
or
push
jecxz
adc
lods
orl
add
mov
jmp
xchg
int3
movsl
bound
cmp
mov
aam
mov
cmp
jecxz
sahf
xor
jb
outsb
add
js
jle
sarb
mov
sub
xlat
out
cmpsl
popf
and
test
xlat
arpl
add
push
pop
rcll
push
cmpsb
fstpt
icebp
cmpsb
sub
cli
imul
xchg
jge
aam
idiv
out
and
gs
add
dec
jmp
mov
addr16
push
jo
jns
mov
push
cmpl
ret
jp
stos
and
sub
repnz
jae
mov
lcall
int3
test
sbb
jnp
js
sub
popf
xor
daa
dec
clc
outsb
arpl
push
cmp
xor
push
jns
cmpsb
inc
bound
fcmovne
popf
pop
push
pop
mov
and
xchg
mov
jno
adc
mov
dec
xchg
and
jg,pt
jmp
ds
lahf
pushf
dec
mov
mov
jns
gs
cmpsb
stos
out
dec
pop
xorl
mov
mov
and
mov
call
sti
jmp
xchg
add
dec
std
push
popa
mov
mov
cmp
cli
pop
lret
cltd
jge
and
pop
insb
sub
inc
ret
inc
fnstsw
jnp
mov
jle
fstl
out
jno
into
shll
scas
jmp
xchg
adc
add
fists
dec
sub
cmpsl
push
sub
mov
sbb
sub
xlat
in
push
xor
cltd
xchg
fstp
jg
mov
pop
add
int3
loop
mov
and
jns
and
and
rcrb
enter
stos
add
sbb
adc
bound
jne
out
adc
imul
add
jg
mov
dec
add
fs
mov
mov
unpckhps
lods
std
mov
fwait
shll
test
pusha
sbb
jmp
xchg
jnp
fiadds
cmp
mov
pop
mov
bound
sarb
je
mov
aam
dec
cltd
adc
adc
mov
push
cmp
sbb
lcall
xorl
loopne
test
sbb
jecxz
mov
out
addb
mov
rcll
lret
dec
cmp
cmpsb
les
lods
test
sbb
test
ljmp
loopw
adc
xor
int3
shrl
xchg
mov
popa
out
mov
or
xchg
xchg
ret
push
dec
inc
sahf
sbb
pop
cltd
cs
stos
mov
xor
jnp
cmp
sub
mov
sub
and
push
mov
xchg
pop
out
test
and
cltd
push
roll
insl
xchg
bound
cwtl
sub
imul
mov
test
lcall
dec
loopne
mov
mov
dec
repz
sbb
data16
jb
aas
shrb
into
jae
cmp
nop
inc
sub
mov
cmp
pop
xchg
fisubl
jg
or
ret
imul
cmp
dec
inc
fs
lock
testb
push
mov
push
inc
fstl
or
pop
incl
aam
push
mov
inc
mov
sub
vandps
add
sub
add
adc
scas
aam
inc
mov
iret
inc
jb
cmp
aas
add
dec
insb
lods
andl
xchg
mov
push
rorb
mov
sbb
mov
push
push
aaa
mov
mov
movsl
xor
nop
orb
jb
add
push
push
shrl
xor
mov
movsb
push
jp
push
cmc
dec
jb
stc
jnp
or
or
rol
jmp
push
mov
push
lahf
addr16
xor
lcall
xor
jno
popa
inc
mov
add
cld
xor
out
pop
push
dec
pop
enter
dec
mov
sub
sbb
lock
pop
ds
cmc
cmp
lods
clc
ret
xchg
xor
int
xor
pushf
in
hlt
out
int3
jg
ficomps
filds
inc
aad
mov
gs
fwait
dec
insb
sbb
jmp
xchg
pop
jecxz
and
jl
repnz
std
xor
cltd
paddsw
nop
xchg
cmp
pop
pop
pop
jne
in
adc
xchg
lods
lea
dec
pusha
cmpsl
hlt
aam
pop
lret
cmc
sub
or
lds
test
mov
mov
jo
divl
cmc
out
icebp
cmpsb
fld1
cmp
pop
adc
or
inc
mov
xlat
sbb
mov
jo
fcmovne
loopne
lods
jo
dec
cmpsb
repz
sub
insb
sarl
sub
sub
mov
dec
mov
sbb
loopne
and
inc
xor
mov
add
movsb
or
loop
andl
es
aam
outsl
arpl
jecxz
adc
cmp
xor
mov
lahf
in
jmp
loopne
adc
stc
pop
and
and
mov
pop
fsubl
ret
sub
sbb
mov
inc
and
dec
add
cmp
adc
mov
cmpsl
cmp
fidivrs
rcrl
mov
xor
sbb
scas
and
fldt
mov
loope
mov
lods
mov
and
xchg
repz
mov
mov
and
xchg
pop
cmpsb
and
mov
imul
gs
pusha
popa
adc
jg
lahf
xor
lcall
insb
mov
pushf
jecxz
movsl
mov
pop
je
fisubrl
mov
cli
mov
sub
lds
jne
xchg
ja
pop
movsl
push
bound
test
lahf
loop
enter
cld
jp
pop
popf
push
clc
push
pop
adc
lcall
int
and
and
cwtl
in
pop
or
int
dec
lcall
in
stc
push
in
push
insb
lret
sbb
ret
push
sbb
frstor
cld
scas
add
jne
gs
sbb
sub
add
rcrl
gs
sbb
jnp
sub
into
rolb
insl
mov
popf
rolb
dec
sbb
jne
jle
arpl
cmp
adc
inc
movsl
lret
jns
xor
pop
aas
pop
incl
fadd
int3
or
ret
stos
in
push
mov
repnz
notb
mov
push
xor
xor
xor
shrb
enter
xlat
mov
jnp
fldt
mov
jecxz
dec
jp
mov
pop
and
fidivrl
scas
js
lahf
gs
test
ffree
in
and
and
in
sbbl
je
pop
fs
rorb
cmp
pop
sbb
mov
xchg
test
dec
cmc
popf
sub
es
pop
dec
and
dec
add
xor
mov
push
pusha
and
pop
fmuls
in
push
mov
pop
xlat
mov
addb
iret
loop
fs
fstl
mov
pop
inc
test
sub
mov
and
push
and
inc
jb
rcrb
ljmp
ja
pop
pop
int
fisttps
popa
add
cmp
or
mov
fs
mov
mov
jno
out
rcrl
inc
dec
out
dec
negb
sbb
xor
xchg
jb
das
scas
pop
ret
out
mov
cmp
xchg
loop
out
stos
add
cli
out
jmp
xchg
lods
andb
scas
pop
mov
stos
lods
test
mov
cwtl
ljmp
in
jae
aad
fwait
xchg
in
and
push
push
orb
xchg
pop
pop
jle
out
xchg
aad
aaa
out
jb
or
push
pop
mov
adc
xor
push
addr16
test
lret
das
dec
push
rcrb
mov
jne
insb
stos
push
xchg
into
xchg
push
inc
notb
lret
sbb
lock
popa
call
sbb
pop
cmp
xor
push
mov
push
shlb
jmp
pop
cmp
fcmovnbe
loope
out
repz
push
lods
cmpsl
cwtl
mov
cltd
mov
jge
push
gs
mov
dec
sub
int3
mov
sbb
frndint
pop
sbbl
pop
scas
adc
ljmp
outsl
or
jl
sbb
test
cmp
cmp
cmp
movsl
cmc
cld
dec
dec
mov
pop
jno
out
xor
lcall
hlt
and
inc
popa
std
xor
inc
xchg
pop
push
lahf
or
mov
dec
cmp
fwait
aas
inc
lret
test
sbb
pop
push
dec
popl
push
xchg
lods
mov
orb
jmp
addr16
sbb
aam
xchg
adc
cwtl
nop
sbb
cmpsl
mov
jmp
and
push
leave
xchg
mov
xor
clc
mov
mov
jbe
sbbb
pop
repz
mov
ja
mov
mov
cld
or
mov
mov
sbb
mov
add
lock
je
and
or
subb
in
and
xlat
cld
and
sbb
pop
loope
or
outsb
outsb
jae
arpl
sub
pop
popa
cli
xlat
les
adc
mov
mov
and
dec
inc
cmp
mov
nop
mov
mov
in
jno
or
fimull
or
mov
xor
xchg
cmpb
sbb
inc
popf
and
mov
lret
pop
call
outsb
arpl
pop
dec
pusha
inc
sbb
xor
xchg
xchg
in
add
sub
in
pop
jnp
mov
xchg
push
test
add
adc
fnop
cmp
pop
pop
cmp
add
insl
iret
stos
ja
mov
js
pop
ss
fdivr
sub
add
fisttpll
cmovl
pop
arpl
mov
jle
inc
nop
mov
out
das
shll
and
and
imul
cli
xor
sbb
int3
ds
fcmovu
push
push
nop
ljmp
testb
out
std
pop
in
jl
pop
jns
mov
arpl
jnp
fs
inc
repz
add
xor
test
int
and
push
mov
repz
rcll
lods
mov
lahf
into
cs
mov
cmp
pop
cmc
in
xor
jle
addb
popa
stc
cli
adc
mov
dec
sahf
mov
mov
inc
jge
push
iret
bsf
push
pop
sti
cmp
push
inc
loop
jnp
popf
jg
sbb
sub
fs
mov
lds
push
and
mov
rcll
hlt
call
inc
gs
push
scas
mov
std
repnz
out
push
inc
icebp
xchg
jmp
pop
mov
test
dec
adc
sub
pop
ret
inc
pop
jl
loopne
rcrl
adc
sbb
clc
test
mov
cmp
mov
std
or
test
leave
jmp
add
mov
cwtl
bound
int
push
sub
mov
jae
pop
dec
cs
jge
push
stc
dec
rolb
xchg
sub
movsb
inc
movsl
mov
imul
popf
and
mov
lods
fsubs
pop
xor
out
fldt
push
add
dec
sub
push
inc
call
cs
sbb
in
mov
out
mov
or
lods
outsb
sarl
inc
or
sti
les
loope
pop
test
lds
mov
lea
mov
ja
rorl
popa
inc
les
ja
das
cmc
or
xorb
and
pop
ljmp
call
xchg
mov
mov
and
cmp
mov
inc
lcall
fimuls
jl
xor
inc
jnp
jmp
inc
mov
cmc
push
out
or
jl
and
sub
ret
test
inc
lcall
gs
out
or
lcall
push
jge
mov
mov
icebp
loope
push
repnz
pop
cmp
mov
inc
pop
and
jecxz
idiv
lds
fisubl
xchg
add
push
inc
aas
dec
shlb
shrl
push
iret
add
xor
pop
pop
cmp
shlb
ss
mov
cmp
daa
cmp
push
bndldx
mov
cs
xchg
jecxz
movsl
punpckhdq
dec
mov
xchg
ljmp
idiv
in
add
add
pushf
pusha
sub
cmpsb
jb
mov
lods
lcall
lods
adc
inc
adc
mov
mov
rclb
mov
repz
les
jmp
push
jnp
xchg
inc
test
dec
sbb
aas
dec
mov
mov
shlb
push
daa
add
outsb
add
les
sar
aad
mov
leave
outsb
repnz
and
sbb
lahf
es
xchg
fsts
movsl
ljmp
push
ficomps
fdivrp
mov
clc
lcall
xchg
aad
add
inc
xor
push
mov
dec
es
ja
xchg
pop
test
test
adc
loopne
test
lods
pop
adc
pusha
aas
adcb
pop
lahf
loope
aas
nop
mov
int3
xorb
mov
hlt
je
iret
cmp
mov
fsubrl
mov
out
mov
pop
or
mov
push
add
arpl
ljmp
inc
sub
add
loopne
mov
xchg
jne
in
push
fsubrl
xor
push
sarb
pop
push
mov
mov
add
ret
insl
dec
je
int
jmp
lret
lods
fcmovbe
rcl
mov
add
mov
sti
mov
or
in
pop
mov
ljmp
mov
pop
xchg
sub
lea
jnp
sub
fstps
shlb
jns
cmc
into
cmpsl
bound
and
adc
pop
sarl
push
mov
fsts
fsubr
lock
scas
mov
sti
fsub
ja
js
pop
sub
mov
inc
aad
repz
jmp
xor
ret
in
mov
or
lock
punpckldq
pop
test
mov
js
pushf
jne
das
sub
shll
pop
cmp
cltd
pop
xlat
movsl
addr16
lcall
in
inc
loopne
jnp
incb
push
int3
arpl
outsb
sub
cmp
or
mov
mov
add
stos
mov
or
pusha
dec
push
fcoml
adc
scas
xor
xchg
inc
and
js
mov
test
les
adc
adc
mov
or
cmpsb
scas
pop
add
fbstp
flds
push
stc
cmp
lret
xchg
dec
imul
mov
ds
out
add
xchg
cld
sub
lods
dec
sub
push
call
cs
insb
push
insb
enter
mov
adc
data16
cmp
mov
jns
lahf
mov
lods
add
mov
andb
mov
dec
int
divl
pop
dec
fistpl
add
mov
leave
or
or
jne
jo
mov
pop
loopne
adc
inc
es
ficoms
pop
loopne
inc
dec
pop
cli
adc
loope
add
scas
fstps
in
xchg
loopne
icebp
repnz
mov
pusha
jle
out
pop
inc
in
dec
loope
adc
cltd
in
popf
xor
fcompp
mov
cltd
out
or
adc
or
jle
push
push
mov
out
scas
xchg
mov
mov
pop
imul
add
sarl
add
pop
in
mov
fwait
shr
cmp
mov
push
xor
push
inc
les
mov
push
mov
push
bound
cmp
sub
mull
scas
imul
xlat
insl
imul
mov
or
dec
fld
jbe
mov
test
enter
int
ljmp
pop
inc
xchg
pusha
xchg
cmp
xchg
mov
imul
dec
clc
mov
les
xchg
aam
push
idivb
sbb
jmp
push
faddl
mov
push
movsb
and
test
clc
mov
or
xlat
arpl
push
mov
mov
cmpl
inc
sub
inc
mov
std
or
and
add
pop
mov
dec
mov
mov
sub
insb
inc
sub
xchg
scas
inc
add
fs
jae
jnp
out
mov
cmc
out
outsl
xor
mov
data16
push
in
loop
fscale
pusha
or
jl
faddp
mov
xor
jae
mov
mov
add
fildl
dec
xchg
pusha
xchg
mov
and
push
adc
jl
mov
loope
dec
mov
pop
xchg
push
cmp
adc
jge
stos
fisttps
xchg
xchg
adc
cvttps2pi
cmp
sbb
rclb
jne
inc
incl
cmp
adc
insl
xchg
ret
pusha
pop
pop
outsl
sub
dec
out
and
scas
or
out
xchg
and
cmp
ljmp
and
out
cmpl
inc
orl
cmp
movsb
mov
movsb
or
mov
mov
pop
xor
sub
push
xchg
repz
pop
out
jl
in
outsb
inc
mov
test
adc
xchg
adc
sti
sbb
sbb
add
pop
and
or
mov
cmc
inc
adc
jmp
je
mov
mov
xlat
pop
sbb
fldln2
xor
xchg
jmp
jp
cmc
mov
xchg
std
or
inc
mov
loope
pop
fnstsw
aam
je
jle
xor
js
mov
sbb
xor
ret
jno
jbe
inc
outsl
sbb
xchg
mov
pop
icebp
push
addb
enter
cwtl
aaa
jg
inc
lret
mov
stos
lods
call
dec
int
xchg
inc
mov
inc
cmp
and
mov
jge
xchg
and
leave
mov
js
xchg
fnstcw
je
jbe
cltd
adc
loopne
sbb
rcll
push
add
xor
stos
ja
cmp
cmp
fists
movsb
imul
xchg
pop
test
std
and
fisubl
addr16
daa
add
mov
pushf
mov
aam
pop
xchg
xchg
hlt
inc
sub
lahf
push
nop
sti
ja
mov
xchg
outsb
pop
mov
adc
repnz
pusha
and
stos
xchg
addr16
xor
loope
leave
clc
dec
icebp
and
test
popa
lods
call
cld
incb
inc
data16
aad
mov
cmpsl
inc
jecxz
add
loopne
mov
lret
negb
inc
adc
jle
ficoml
pop
push
mov
xlat
lock
mov
daa
pop
cmp
fsubl
jl
push
pop
sub
sbb
push
cs
mov
lods
leave
test
inc
popa
mov
rcr
movsl
es
hlt
in
adc
mov
lret
call
sbb
adc
sub
dec
shl
ret
sub
mov
sub
xchg
fmuls
fldl2t
orl
fistl
mov
lret
jnp
mov
mov
inc
mov
jne
mov
cwtl
xchg
pop
xchg
out
fbstp
jnp
iret
pop
loop
pop
mov
pop
xchg
pushf
push
add
mov
mov
stos
lret
enter
jg
mov
mov
xlat
jo
xchg
push
cltd
jnp
xor
andb
dec
xor
pop
sarl
push
mov
or
pop
xor
add
mov
arpl
pop
pop
aad
adc
sahf
push
sbb
inc
pushf
cwtl
ds
pop
push
into
aaa
out
sbb
sub
add
test
bswap
cmp
sub
xor
aad
popa
inc
out
mov
movsl
push
ljmp
inc
test
imul
fs
lcall
xchg
dec
fnstenv
test
stos
pusha
ror
adc
push
xchg
xor
push
in
das
fisttpll
jae
les
or
shrl
pop
in
shll
lret
sub
in
mov
mov
push
push
inc
xchg
sub
movsb
and
adc
lret
sbb
push
sbb
movsl
cwtl
push
insb
addr16
stos
iret
mov
scas
xor
mov
sub
adc
add
cwtl
adc
dec
and
mov
jl
jne
xchg
pop
push
stos
pop
imul
into
mov
sub
and
mov
inc
add
adc
mov
inc
sti
cmpsl
enter
adc
sub
imul
inc
add
test
xor
mov
mov
enter
in
and
emms
mov
mov
das
fidivrl
dec
jb
cmpsl
mov
je
mov
loop
ret
scas
mov
sbb
les
lods
or
sub
pusha
push
inc
push
out
xchg
out
mov
out
int3
iret
ficompl
jae
add
jbe
incl
push
push
cmpsl
add
jnp
mov
pop
imul
mov
mov
ss
mov
lods
cs
mov
push
lock
fdivrs
out
jecxz
ds
cs
test
inc
jl
sbb
adc
lods
mov
shll
add
xor
xor
test
hlt
pop
cmp
nop
cmp
insb
pop
pop
popf
int3
adc
lahf
sti
xor
push
xchg
and
dec
or
aaa
das
push
arpl
dec
idivb
lods
insb
mov
or
inc
fxtract
cli
xlat
push
xor
shlb
adcb
push
add
dec
lcall
sbb
outsb
mov
shlb
adcb
cwtl
inc
mov
repz
js
xchg
inc
repz
push
jbe
mov
push
mov
jno
mov
add
shll
test
pop
in
pop
xchg
out
cmpsl
add
mov
aad
mov
cmpsl
adcb
addr16
sarl
addb
aam
pusha
pop
mov
push
gs
lock
insb
mov
pop
cli
test
push
out
xchg
pop
rorl
outsw
fs
jo
and
inc
int3
jp
jo
movsl
inc
inc
sub
inc
pop
xor
inc
pop
mov
xor
sub
and
pop
xchg
pop
dec
mov
pusha
in
cmpsl
add
mov
clc
rcr
mull
sbb
mov
mov
cmpsb
add
add
prefetchwt1
sub
mov
push
mov
jmp
adcl
mov
ds
jecxz
mov
ja
movsb
dec
dec
push
inc
out
out
mov
xchg
mov
sub
sub
js
push
stos
iret
mov
xchg
imul
aam
loop
mov
test
jg
mov
out
mov
stos
test
fnstsw
dec
xchg
enter
mov
call
jo
add
pop
fwait
pop
lods
xchg
cli
cmp
in
ja
jmp
mov
xor
jg
loopne
sbb
idivl
test
das
push
stos
and
fists
ljmp
movq
sub
xchg
lcall
inc
jge
pop
call
inc
adc
aam
lds
in
xchg
xor
imul
add
mov
inc
sbb
fisubrl
jnp
inc
lea
lcall
rcr
adc
in
push
or
into
add
jecxz
jp
jecxz
cld
test
mov
and
dec
stc
jne
push
or
jbe
cltd
arpl
hlt
add
testl
andb
adc
cwtl
jmp
test
inc
xlat
jae
jecxz
stos
jno
and
xchg
repnz
in
mov
and
mov
test
into
test
pushf
stc
cmpsb
mov
sub
sbb
cmp
js
mov
sbb
pop
out
sahf
xchg
cmpsb
push
add
into
and
loopne
xor
sub
xchg
inc
gs
fnstcw
test
jecxz
icebp
idivb
cmc
sti
adc
mov
pop
rolb
push
or
cmp
and
lock
rcl
add
faddp
dec
outsl
add
sbb
mov
cwtl
data16
push
xor
pop
sub
int3
sub
jle
cmp
stos
jge
xor
aas
out
push
les
add
xchg
iret
cli
jmp
mov
push
jge
mov
movsb
in
ljmp
test
inc
arpl
call
adc
xchg
fsubrs
mov
and
scas
mov
xor
dec
and
jle
xchg
cltd
orb
enter
arpl
pushf
jb
sbb
mov
pop
dec
ficompl
push
mov
out
scas
loop
push
aaa
and
dec
dec
dec
pop
loop
es
rcrl
icebp
push
in
inc
sub
jns
in
cmp
inc
mov
mov
inc
fisubrl
push
inc
out
mov
test
in
add
inc
jmp
sub
aam
fidivrs
add
ret
test
inc
imul
mov
mov
cld
mov
fidivl
addl
xchg
jg
int3
je
fcmovu
jl
sub
fcomip
sub
test
gs
push
or
lcall
sahf
mov
imul
push
arpl
notl
or
push
hlt
popf
aas
push
jno,pn
scas
and
lods
xlat
push
inc
jo
ja
jno
push
jmp
scas
imul
dec
pop
pusha
xchg
loope
push
push
adc
inc
mov
pop
cmp
inc
out
cmpsl
dec
xor
es
adc
jp
data16
add
adc
inc
orb
test
daa
jmp
pop
sarl
sbb
xchg
xchg
in
out
or
pop
add
dec
push
lret
aam
jp
test
sahf
lods
mov
xlat
int
psubb
and
bound
insb
mov
jg
daa
mov
inc
ficomps
aad
loope
les
es
std
cvtps2pd
pop
sbb
test
adc
inc
daa
mov
sbb
dec
fsubs
push
das
pop
cmp
fwait
pop
xchg
mov
mov
xor
fsubp
pop
mov
and
lret
fisubrs
mov
mov
and
sub
dec
mov
sbb
cwtl
lods
mov
popa
iret
nop
dec
fidivrl
fimuls
pop
push
sbb
or
iret
mov
dec
pop
ljmp
xor
jnp
aaa
sbbl
mov
xorl
cmpsl
jmp
daa
outsl
mov
xchg
repz
pusha
cmp
fisttps
or
scas
int
out
xchg
test
inc
subb
aam
faddl
mov
adc
mov
mov
leave
adc
shrl
fwait
push
enter
xlat
jns
dec
or
mov
dec
test
push
testl
aad
or
ja
and
mov
push
cli
inc
xchg
hlt
fcmovnb
mov
xchg
and
rclb
or
sbb
jge
lds
outsw
aam
mov
hlt
cmpsb
dec
stos
push
sahf
pop
xor
imul
push
inc
push
cld
xchg
sub
mov
dec
mov
cwtl
in
mov
and
mov
pop
sbb
mov
adc
sti
movsl
es
inc
inc
insl
outsb
sub
push
xchg
clc
and
xchg
jg
lahf
xor
ja
xor
lcall
ret
xor
test
cmp
setle
dec
pop
mov
int3
xchg
icebp
dec
mov
fs
adc
or
sti
push
inc
out
mov
cld
push
out
into
dec
loop
xchg
test
push
in
mov
ret
cmp
hlt
sub
cld
ret
xchg
je
sar
adc
out
shrd
and
addb
loopne
insl
and
sub
sahf
loopne
adc
lods
addr16
fwait
out
in
pop
mov
push
mov
dec
jmp
push
adc
les
lods
rolb
inc
or
push
or
pushf
cmp
cmp
test
cmpsl
mov
sub
nop
out
mov
dec
mov
das
out
rcl
push
sub
push
lret
push
loope
je
sub
add
push
add
addr16
lods
mov
push
or
aas
imul
xchg
xchg
nop
mov
sbb
aaa
js
add
pop
and
test
icebp
repz
ret
mov
xor
dec
pop
xlat
inc
out
mov
add
adcl
imul
cmc
pop
push
inc
addr16
push
fs
xor
fwait
mov
sti
lock
push
fwait
lret
cld
stos
arpl
ret
dec
jb
lods
pop
pop
dec
sbb
popf
jns
mov
mov
div
fdivr
xchg
xor
cmp
insb
roll
movsb
xchg
sub
push
sbb
int
scas
lock
clc
jnp
enter
pop
jge
jmp
inc
test
pop
stos
fidivs
push
or
or
rcr
lcall
jmp
rclb
dec
add
cmp
subl
ljmp
mov
scas
or
mov
cmp
aad
push
out
insb
cmp
cli
imul
iret
mov
jbe
hlt
mov
xor
call
in
inc
mov
push
test
imul
jno
ja
aas
cmp
loope
sbb
pop
push
test
lds
pop
mov
lods
lret
xlat
and
pop
inc
lea
lcall
bound
je
pop
sbb
push
loop
dec
ss
int3
xor
adc
test
pop
mov
lret
mov
push
and
bound
pushf
pushf
and
and
push
dec
and
add
sub
or
mov
fwait
loopne
sar
dec
aam
xor
jb
dec
jg
xchg
dec
cmp
jns
pop
std
xor
lods
pop
jecxz
in
sbb
adc
sub
jae
mov
and
inc
xorl
mov
xor
in
push
mov
adc
mov
xor
aad
stos
lods
pop
je
cmpsl
iret
test
inc
popf
lret
ficoms
call
incl
mov
dec
sbb
adc
add
ss
mov
in
jbe
inc
mov
mov
xlat
orl
xchg
xchg
dec
into
jns
stos
or
movsl
fwait
roll
and
push
aad
out
fldl
shlb
push
mov
adc
mul
mov
fcompl
popa
xchg
push
mov
pop
fstpl
pusha
push
push
xchg
pop
cmp
sbb
clc
ja
or
sbb
inc
cmc
sqrtps
in
sub
fstps
add
push
lods
add
pop
mov
push
shl
cmp
sub
dec
jae
cmpsb
sbb
movsb
dec
cmpsl
mov
cmp
mov
cmp
mov
add
push
xor
repnz
out
push
test
jae
xchg
stc
loope
out
out
dec
insb
clc
int
roll
mov
insl
lds
cwtl
or
lcall
inc
and
sub
repz
adc
xchg
or
push
insb
xor
cmp
inc
loop
shlb
ror
sub
sbb
or
sub
ljmp
fistpll
sahf
or
lahf
push
cmp
inc
xchg
clc
jnp
decl
cmp
pop
xchg
and
stos
out
shrd
cwtl
mov
push
jae
jnp
pop
pusha
mov
dec
ljmp
shrb
jp
jecxz
repnz
scas
pop
fs
xchg
sbb
add
adc
inc
cs
mov
xchg
in
sbb
lods
sub
fdivr
in
add
out
lahf
das
push
clc
mov
ret
les
mov
push
repnz
dec
pop
lea
mov
imul
add
xor
stos
mov
ret
flds
push
adc
sbb
xchg
jmp
pop
stos
jmp
sbb
mov
ds
jae
movsb
fmul
dec
or
xchg
lods
pushf
out
sbb
xlat
data16
data16
pushf
movsl
aam
jne
jnp
jns
mov
cli
push
sahf
push
lds
stc
push
jmp
jo
sub
jb
jecxz
mov
nop
sub
mov
mov
mov
jo
cmp
push
rcr
dec
adc
push
xchg
mov
bound
xchg
pop
lock
loop
push
dec
frstor
mov
and
inc
sbbl
fimuls
lea
cmp
push
xor
out
pop
push
pop
dec
push
xchg
loop
mov
subl
pushf
pop
call
and
inc
jge
xchg
jl
lock
int3
pop
lret
lahf
cmpsb
xchg
nop
enter
icebp
pop
cltd
push
mov
mov
psubq
fs
call
jl
pusha
bound
sti
cltd
lret
push
scas
cmp
xor
push
sub
sbb
in
add
mov
pop
mov
sub
iret
push
imul
cmp
inc
stos
dec
mov
mov
and
shll
pushf
dec
sub
push
inc
adc
fisttps
movsb
jns
std
in
int
jmp
mov
add
jnp
mov
lods
testl
mov
out
or
pop
jb
fmulp
mov
rcll
je
std
into
repnz
in
mov
jp
xchg
pushaw
iret
or
mov
sbbl
pop
pop
aam
cwtl
stos
push
repz
xchg
inc
sub
fistpll
lock
cmp
repz
jns
icebp
dec
out
sti
aad
add
imul
ret
jg
or
or
arpl
icebp
push
push
push
test
cmp
in
in
lcall
push
inc
adc
daa
inc
hlt
inc
push
push
insl
dec
mov
mov
mov
loope
mov
push
lods
push
out
dec
jg
jecxz
cmp
insl
daa
dec
test
mov
push
jnp
shr
xor
movsl
bound
fwait
xchg
and
cmp
lcall
daa
loope
sbb
sbb
xchg
mov
mov
imul
cmp
pop
xor
scas
loope
or
ss
push
adc
sbb
sbb
js
out
ja
jnp
lcall
ret
inc
jno
arpl
push
loopne
fimull
filds
cli
add
lret
xor
xor
bound
pop
push
jl
rcl
push
rcll
add
xor
inc
push
hlt
sbb
adc
fcomi
dec
cmpsb
pop
rcl
jl
mov
pop
bound
out
xchg
lahf
xor
push
mov
loopne
lods
jmp
mov
mov
scas
jae
mov
jmp
movsl
shrl
mov
pushf
push
or
add
mov
andl
mov
pop
lcall
sub
cmp
mov
inc
mov
dec
ffree
popf
push
das
jle
jl
shll
pop
xor
mov
popf
int
pop
add
lods
mov
outsb
ret
rorb
add
in
jne
loope
pop
test
add
pop
fld
enter
ljmp
fwait
mov
xor
push
push
pusha
pop
add
mov
push
fbstp
mov
cli
sbb
cmp
daa
int
ds
push
sbb
clc
mov
mov
pushf
sbb
ret
pop
cmc
cmp
fadds
inc
cmp
insl
mov
rcl
dec
sti
jmp
fwait
jbe
mov
adc
xchg
dec
mov
subb
fbstp
out
push
ret
mov
enter
movsbl
jns
dec
cmp
sbbl
outsb
mov
dec
insb
imul
pop
and
fstpt
jmp
je
dec
into
inc
push
mov
push
dec
and
jp
add
xor
or
push
fidivs
jae
shrb
out
sub
enter
push
adc
jge
pop
dec
ja
or
cmp
aad
aad
jb
loope
lret
jp
sub
push
enter
ficoml
out
cmc
pop
push
pop
je
inc
cmp
xor
inc
xlat
mov
jb
push
lods
xor
int
mov
out
xor
stc
xchg
stc
lahf
arpl
xor
sbb
jle
xchg
jns
adc
xchg
push
ret
mov
loopne
lods
or
push
xlat
shll
ljmp
ret
mov
into
insl
aam
mov
jge
add
jge
pop
cmc
movsl
lea
hlt
repz
pop
mov
aaa
dec
pushf
pop
inc
sub
js
jl
out
push
jns
enter
push
mov
mov
out
cmpsl
lods
or
cltd
xchg
dec
mov
sti
mov
adc
cmp
mov
push
xchg
push
or
xchg
mov
shlb
mov
pop
adc
scas
sub
inc
pop
mov
mov
and
loope
imul
in
xchg
or
aad
shll
fisubrl
in
or
loope
sahf
xor
mov
jnp
fs
call
dec
xchg
inc
outsb
stos
rorl
lea
cmpsl
adc
rolb
fcmovb
adc
sub
aaa
sbb
jl
mov
stos
js
push
jae
cs
inc
adcl
push
pop
xchg
mov
fistl
mov
das
pop
xchg
out
sbb
inc
adc
insb
int
xchg
mov
inc
sub
xor
cs
out
dec
js
add
shlb
xor
adc
sub
xchg
push
andb
fcomp
imul
test
or
mov
dec
cli
outsl
mov
sub
mov
js
or
xor
fcoms
cmp
cmp
and
repz
xchg
push
xor
xchg
xor
mov
xchg
call
cmp
push
enter
mov
cld
bound
push
mov
dec
mov
xor
loop
pusha
push
imulb
repz
mov
and
pop
jecxz
ljmp
mov
inc
xlat
jl
lcall
rolb
jnp
xchg
dec
xlat
fucom
sahf
in
xchg
gs
dec
insl
rcr
test
insb
adc
xchg
and
or
arpl
cs
push
popf
push
call
ljmp
shlb
inc
pop
lds
jle
pushf
sub
mov
mov
loop
and
popf
lock
or
insb
movsb
sbb
pop
jns
xchg
std
rcll
stos
test
in
or
mov
lock
pop
jl
movsl
sbb
sbb
test
ret
mov
test
push
mov
pusha
push
cmp
ljmp
mov
in
test
jne
ljmp
imul
lea
pop
dec
dec
cld
add
scas
jmp
sarb
push
mov
mov
mov
mov
lock
aad
lcall
sub
and
dec
cld
adc
sub
pop
enter
and
adc
rolb
fildll
filds
xor
jno
scas
xchg
insl
inc
lret
xchg
cmpsb
repz
cld
mov
cmpsb
aaa
sub
bound
add
xchg
add
enter
es
and
sete
add
mov
daa
rcr
lret
cwtl
scas
push
xor
mov
xchg
mov
pop
push
cmpsb
cmp
ds
mov
lds
push
nop
stos
aas
pop
nop
push
push
xchg
adc
repnz
jbe
jne
in
mov
mov
nop
mov
push
xorl
mov
inc
fsubrl
shll
mov
movsb
outsb
hlt
cmpl
shll
imul
pop
pop
fisttpll
dec
xlat
gs
mov
mov
lds
popa
sub
add
scas
dec
mov
pusha
xchg
jne
pop
insb
ljmp
sub
push
xor
cmpsl
inc
pop
xlat
imul
nop
mov
ret
scas
adc
loope
xor
mov
push
lea
xor
mov
push
mov
aas
sub
or
mov
push
push
arpl
push
xchg
mov
lods
icebp
sub
fnstenv
lret
and
inc
xchg
mov
insl
or
jne
les
jnp
sbb
mov
dec
frstor
and
sub
repz
es
popf
xchg
mov
daa
ja
and
leave
dec
lcall
cmp
jge
cmpsl
xchg
fldcw
inc
mov
pop
aas
xchg
clc
ds
cmc
dec
cmp
out
jl
adc
pop
pop
out
arpl
or
popf
mov
aad
jne
fmull
cwtl
dec
sub
adc
stos
cld
push
sbb
or
dec
sub
xchg
imul
orb
addb
or
arpl
aas
out
lahf
repz
jnp
test
sub
inc
shll
insb
dec
ljmp
mov
dec
test
inc
jg
addb
jb
mov
inc
dec
xchg
xor
xchg
jmp
out
push
insb
outsl
or
call
sub
hlt
cltd
lcall
jae
push
pushf
mov
inc
lcall
mov
movsl
cmp
pop
aam
add
sbb
add
loope
fisttpll
into
clc
jo
mov
add
leave
sub
sub
sub
jl
ds
sbbl
or
aam
and
mov
mov
mov
test
sub
cwtl
fidivrs
or
gs
cmp
jb
jo
int
stos
test
and
cli
es
ljmp
fistl
cmp
xchg
into
mov
adc
push
mov
add
adc
and
xor
test
adc
push
push
fmul
dec
cmpsb
movsl
or
mov
add
push
rorb
js
jg
sbb
push
lods
xchg
xchg
pop
mov
jp
in
pop
mov
daa
into
cmp
icebp
inc
mov
sbb
dec
test
dec
pop
jae
mov
scas
pop
adc
or
pop
mov
xchg
mov
test
jp
and
dec
fistpll
mov
mov
adc
sbb
call
out
pop
imul
or
ficoms
pop
pop
ljmp
arpl
lock
sbb
mov
push
mov
xchg
jne
andl
out
scas
inc
lcall
push
jns
fisttpl
or
or
adc
stos
cmpsb
sub
dec
pusha
and
cld
cwtl
scas
cmp
mov
int
stc
inc
shll
xlat
lret
fsub
add
jg
int
dec
rcrl
ss
push
or
sarb
fst
jns
fistps
je
add
dec
in
mov
dec
cmpsl
popf
aaa
pop
in
pop
mov
dec
movsl
jmp
cmp
sub
mov
loope
in
cmpsb
and
cltd
xor
aad
insb
sub
imul
pop
dec
arpl
inc
mov
inc
in
add
push
es
pop
cmp
ficoml
inc
xor
or
xchg
ret
sbbb
sarl
decb
xchg
push
or
cmpsb
repz
pop
pop
loopne
lcall
or
add
rclb
xor
inc
pop
fcomps
test
or
jecxz
pusha
push
pop
jecxz
or
adc
imul
mov
loopne
addb
scas
scas
mov
sbb
out
movsl
addr16
jg
pop
std
mov
int3
popf
int
lret
test
sub
loope
test
sbb
xchg
lahf
js
scas
and
fisubs
stc
out
pop
mov
dec
adc
xor
aad
enter
push
cmc
filds
das
sbb
jg
sarb
fistl
xchg
push
and
adc
fsubrs
pushf
jge
sarl
bound
in
das
adc
lret
cmp
mov
insb
lret
fstpl
out
hlt
mov
stos
mov
sub
adc
dec
sbb
dec
add
clc
into
inc
mov
push
jbe
or
mov
repz
add
mov
adcl
pop
pop
imul
jge
mov
hlt
popa
ret
ljmp
mov
out
inc
pop
cmpb
int
movsb
and
shlb
popa
scas
cmp
mov
mov
pop
push
add
jp
cmpsb
outsl
dec
push
mov
jl
dec
scas
adc
adc
addr16
sbb
add
cmpsb
lods
mov
jno
push
stc
dec
stos
loopne
mov
nop
jmp
stc
imul
cmp
dec
jnp
jo
roll
or
bnd
push
ret
xor
aas
pop
sbb
or
movb
and
adc
and
in
sbb
fstpl
insl
sbb
cli
out
int3
int3
ds
popa
sbb
movsb
lods
push
add
jl
test
shl
ret
cltd
sub
shll
lret
adc
imul
loope
and
popa
jb
ja
sub
mov
subb
out
lret
popf
loope
sub
imul
test
adc
mov
jge
cmp
mov
ljmp
push
jno
arpl
fs
sti
add
cli
in
dec
int
fdivrl
lcall
xchg
inc
inc
push
pop
arpl
jp
fcomps
xlat
dec
inc
push
add
movsb
pop
int3
and
xchg
push
in
mov
push
dec
cmp
mov
call
sbb
pop
addr16
add
in
sbb
cmp
sub
cmc
iret
imulb
mov
dec
mov
fisubs
sti
mov
dec
lcall
sar
mov
xor
xor
in
adc
sbb
mov
sub
jne
mov
lods
cmp
addr16
bound
inc
pusha
lods
add
or
sub
cli
imul
insl
pop
push
push
scas
push
mov
enter
pushf
lock
mov
or
and
jb
lcall
lea
add
jge
cmp
stc
cld
enter
add
sub
repz
and
outsl
xchg
pop
add
enter
sbb
into
fmul
adc
mov
popf
mov
stc
test
mov
sbbb
mov
push
cmp
inc
pop
scas
mov
loopne
push
push
pushf
mov
and
push
ja
push
and
fldenv
mov
xor
cmp
inc
jmp
xchg
and
push
sub
jno
or
in
shlb
inc
lahf
aad
inc
movsl
out
dec
dec
adc
mov
movb
clc
xchg
cmp
or
ss
push
mov
mov
mov
add
mov
scas
clc
sbb
sbb
jo
andb
test
add
sbb
or
push
push
sub
in
int3
test
dec
or
shrb
mov
inc
inc
pop
mov
xchg
aas
fsubrs
add
cmp
pop
sub
fadd
mov
adc
pop
and
ja
sub
ja
xorl
mov
pop
cltd
dec
ret
mov
xor
in
and
sbb
rcrl
sbb
xor
add
rcll
add
add
mov
fldl
shlb
dec
cmp
sub
out
popa
stos
test
les
inc
repz
into
lock
pop
mov
imul
cmpps
dec
out
dec
dec
xor
test
xor
subl
inc
inc
sub
push
sub
lods
jb
and
sbb
cmp
pushf
aad
or
rorb
imul
bound
mov
xor
sub
dec
pop
jbe
sub
dec
cmp
rcrl
mov
adc
and
shll
dec
or
popa
mov
and
popf
fadds
test
or
inc
inc
xchg
sbb
push
fistpl
mov
xchg
pop
mov
pop
xor
hlt
rorl
test
icebp
subb
imull
jmp
or
cwtl
pop
sub
push
cmc
cmp
mov
or
mov
outsl
sti
int
outsb
daa
cmpsl
sub
fwait
repnz
mov
dec
and
sbb
mov
cmp
das
lret
dec
hlt
inc
adc
aam
test
daa
xchg
dec
inc
inc
clc
cmp
or
mov
jnp
jno
mov
aaa
push
inc
push
mov
lods
int3
inc
imul
jge
sub
add
loop
jge
test
icebp
lds
call
adc
shl
sub
imul
int
lahf
jno
add
xchg
mov
mull
test
das
mov
lret
mov
adc
repz
mov
xor
leave
add
ds
mov
add
mov
lret
pop
cli
push
mov
sbb
adc
and
movsb
scas
jge
scas
leave
out
push
pop
ret
sub
xchg
dec
and
mov
popa
xchg
aas
outsb
adc
cmp
int3
add
repz
or
in
in
in
cmpsl
cmp
sbb
inc
cwtl
sbbb
std
jmp
mov
sti
mov
outsb
pop
push
and
andl
fs
jmp
cmp
adc
testb
aad
loopne
test
dec
dec
sub
sbb
ret
jo
mov
sbb
gs
into
std
push
and
stos
push
mov
mov
inc
adc
addr16
add
sub
mov
push
pop
add
jb
call
les
sarl
cs
loop
inc
movsb
sbb
xchg
xorb
popa
arpl
sbb
pop
mov
xor
dec
in
lds
cwtl
cmp
or
dec
gs
pop
mov
sti
push
mov
and
xor
aas
in
mov
lods
mov
in
test
push
bound
mov
ret
adc
in
adc
test
sub
pop
pop
ljmp
or
xchg
pushf
cmp
jmp
test
xor
popa
ljmp
sbb
or
cwtl
mov
mov
sbb
pusha
test
adc
out
test
xor
fcomi
lret
aaa
and
mov
sysexit
xor
lods
aam
dec
ret
dec
sar
js
push
das
pop
pop
dec
sbb
cltd
shlb
ljmp
sbb
stc
cmp
push
popf
fmuls
popa
aas
pop
push
rorl
xlat
sbb
arpl
push
sub
js
or
or
popa
sar
arpl
iret
test
adc
shrb
pop
sub
mov
push
jl
fucomp
mov
xchg
dec
addr16
inc
mov
cmpsl
jl
rolb
dec
test
jno
or
ss
imul
pop
mov
call
shll
jno
dec
test
mov
add
add
xchg
or
fisubs
xchg
adc
lcall
xchg
pusha
cmpsb
inc
jo
jg
jmp
push
fisttps
nop
mov
xchg
roll
in
lds
das
jmp
push
popa
pop
mov
dec
pushf
cmc
testl
adc
sbb
mov
inc
lret
add
mov
sbb
xor
push
lds
stc
test
sahf
jb
push
mov
ds
jmp
in
lret
popf
stc
ffree
lahf
jp
xor
fdivrl
xor
filds
dec
test
scas
sub
inc
sbb
out
pop
movsb
rorl
jmp
dec
ja
imul
mov
nop
push
adc
sub
cmpsb
xor
xor
dec
and
clc
sbb
lds
push
lods
imul
icebp
shll
jle
popf
cmp
jecxz
loop
das
data16
mov
stos
or
or
mov
cmpsb
jl
jge
inc
test
sahf
xchg
ss
fcomi
movsl
negb
mov
inc
xchg
int
lcall
pop
xchg
push
lcall
out
pop
push
loop
je
inc
push
cli
sub
dec
out
pop
ret
jns
add
mov
inc
insb
pusha
pop
pop
mov
pop
mov
jge
fstps
jne
filds
pushf
lea
xor
xor
mov
loope
sub
movsl
std
faddl
sub
sbb
and
mov
outsl
jg
ljmp
rcll
push
loope
mov
addr16
or
add
push
pop
in
cmp
mov
xchg
jne
daa
inc
jmp
imul
dec
cmc
sub
stos
scas
pop
mov
sarl
inc
mov
mov
loopne
es
lahf
dec
sbb
xchg
sbb
mov
fidivl
push
enter
adc
xchg
lea
or
ss
add
adc
dec
jb
std
mov
sbb
in
mov
clc
sub
into
call
push
add
or
gs
shlb
leave
push
mov
push
mov
loopne
jno
out
mov
add
dec
test
sub
push
shll
dec
jmp
sub
and
and
call
sbb
mov
push
into
xchg
loope
inc
std
inc
sahf
dec
inc
sahf
aad
mov
aaa
ficompl
mov
ja,pt
jbe
fldt
push
ret
cmpsb
cmp
cmp
jb
push
into
mov
pop
sbb
cmc
mov
int
insb
lea
and
inc
hlt
out
orl
insl
sbb
mov
lahf
fisubl
pop
mov
jmp
cltd
jecxz
lret
mov
xchg
pop
out
sbb
push
add
roll
outsl
mov
inc
sbb
sbb
add
inc
pop
ret
clc
pop
sub
push
dec
pop
scas
jle
xchg
dec
cmc
insb
and
sbb
jnp
rclb
outsl
pop
mov
outsl
jae
fs
ljmp
filds
pop
imul
out
call
rorl
mov
inc
jmp
test
rol
xchg
imul
cmpsb
sti
jae
das
nop
rcrl
lods
cltd
ja
icebp
adc
xor
hlt
daa
pop
jp
add
xor
icebp
jns
sbb
add
into
rcrl
movl
pop
iret
sti
jns
sbb
xchg
mov
cmp
jmp
test
push
andb
add
cmpb
std
popa
test
inc
cmp
icebp
jno
inc
jecxz
sbb
cmp
shrl
out
add
xor
pop
mov
inc
dec
mov
push
daa
cltd
sub
jne
aam
jge
fisttpl
insb
imul
xchg
dec
sahf
sar
call
mov
mov
in
lret
pop
xor
push
out
insb
xchg
cwtl
fnstcw
cwtl
xor
aam
das
mov
movsl
addr16
cld
adc
andl
shrb
test
hlt
icebp
push
bound
pop
mov
mov
daa
scas
dec
push
in
aas
sar
stos
ss
test
sub
popa
loop
gs
movsl
sti
lock
ja
ljmp
bound
push
aad
in
pop
add
ds
fidivrs
fcomi
or
inc
outsl
mov
or
test
jecxz
xchg
fwait
sbb
int3
mov
xchg
sub
fwait
push
mov
jmp
mov
stos
mov
xor
and
scas
lret
cmp
imul
or
xchg
mov
xor
je
aas
jmp
adc
stc
loop
xchg
xor
or
sbb
adcl
rcrb
inc
mov
out
nop
call
push
roll
add
loop
inc
add
testl
mov
adc
lea
pop
call
arpl
inc
das
dec
test
sbb
lods
push
test
sub
xchg
mov
sbb
sbb
pop
mov
inc
adc
pop
jnp
sub
jg
mov
dec
pop
lds
test
mov
movsl
pop
loopne
test
mov
fucomip
outsb
sub
xor
addr16
cltd
dec
jmp
pop
hlt
mov
in
call
push
rcrl
jns
incl
fxch
daa
push
fsin
ds
and
add
xor
dec
popa
mov
cmp
scas
fstps
pop
pop
jmp
int3
jnp
fistl
jb
je
adc
or
mov
scas
or
or
sub
push
inc
cmpsl
mov
dec
adc
mov
push
mov
test
roll
and
or
pop
test
fcomps
and
daa
push
ret
lock
outsb
ficomps
addr16
push
inc
loopne
dec
outsb
mov
aam
xor
testb
mov
and
cmpsl
icebp
stc
daa
dec
mov
fiadds
std
jne
sbb
das
fidivs
aam
pop
pop
pop
lret
sahf
dec
inc
iret
cmpsl
sbb
mov
pop
les
mov
mov
xchg
je
in
jo
shll
or
mov
xchg
imul
icebp
imul
pop
and
mov
arpl
mov
test
ja
lds
sbb
int
and
dec
scas
insb
add
and
xchg
xchg
divb
jle
scas
pushf
out
out
dec
inc
push
inc
add
stos
call
xor
cmpsl
popf
in
mov
aas
mov
mov
scas
sub
sub
mov
lea
mov
ljmp
dec
iret
out
push
inc
inc
fwait
lret
insl
movsb
and
cmc
fsubs
je
mov
int3
mov
adc
xchg
in
dec
ret
pop
popf
test
out
hlt
cmp
dec
stc
xor
das
push
ret
cli
sub
test
sub
fidivrs
fucomip
inc
int
lods
sub
and
gs
das
mov
sbb
gs
push
repz
or
and
push
and
mov
jno
shlb
stc
jp
pop
and
test
bound
mov
push
out
std
or
mov
and
push
add
sbb
jne
nop
push
int
dec
sub
push
aad
jle
loop
cmp
mov
mov
jg
mov
out
pop
out
and
ljmp
adc
jecxz
xlat
pop
push
or
mov
out
movsb
xor
fnstcw
pop
sub
mov
cmp
int
xchg
mov
sub
jne
push
rcll
or
lcall
out
mov
ret
mov
mov
add
jg
adcl
inc
out
test
les
cli
popa
cmp
insb
leave
subl
mov
sar
xor
push
insb
mov
nop
mov
fisubrs
xor
jae
stos
repnz
cmp
shl
aaa
or
and
fwait
xchg
mov
and
xor
in
jl
mov
inc
inc
dec
sbb
adc
adcl
stos
cltd
xchg
pop
or
adc
dec
lods
and
pop
in
adc
inc
je
pop
ret
jb
ja
xor
int3
pop
out
iret
sti
rcrb
or
add
popa
pushf
aam
rolb
bound
pop
daa
jo
dec
sbb
std
out
sarl
cltd
sbb
data16
push
loop
rcrl
xchg
mov
jne
sbb
and
in
cmpsl
add
or
leave
ja
fdivp
loop
int
inc
imul
push
pop
add
sahf
mov
xor
xchg
jmp
add
lds
xchg
loop
and
dec
pop
jne
sbb
lods
lea
xchg
idivl
dec
int
ret
scas
loopne
jns
call
ss
inc
mov
cmp
cli
fwait
enter
negl
stc
inc
scas
mov
iret
cmpsb
pop
ret
loope
and
testb
mov
or
loop
xchg
fsts
out
push
or
xchg
lahf
lds
clc
mov
add
inc
fs
xchg
adc
test
mov
stos
push
dec
pop
mov
hlt
fdiv
sub
cltd
stos
mov
das
ret
rolb
jo
aam
sahf
gs
je
fs
fistl
sub
add
or
and
stos
sbb
aam
daa
pop
inc
mov
stos
vpmadcswd
imul
jnp
mov
hlt
sub
cld
jge
mov
inc
fcom
addr16
and
sub
mov
enter
jb
jno
xor
mov
rolb
push
icebp
mov
out
mov
mov
cwtl
push
roll
xor
sub
dec
inc
dec
call
movsb
sbb
adc
into
jp
es
mov
mov
pop
jecxz
push
int3
adc
add
mov
sub
push
repz
xlat
sub
shrb
sub
add
enter
jb
and
imul
xchg
sti
gs
in
or
mov
pop
xlat
adc
outsl
nop
jl
je
lea
insl
insb
insb
data16
imul
mov
stc
xor
loop
es
mov
mov
mov
xlat
hlt
mov
fcmovb
xchg
mov
inc
sbb
repnz
dec
inc
dec
mov
lods
xchg
and
dec
add
xchg
mov
pop
mov
mov
mov
sbb
push
sbb
adc
icebp
enter
adc
sub
sub
iret
cmp
push
lret
mov
inc
cmp
mov
inc
jp
inc
popa
pop
adc
sub
mov
or
inc
mov
push
rcr
dec
adc
negl
add
test
fwait
mov
out
add
fisttpll
sub
xor
gs
push
movsl
popaw
cwtl
sub
enter
mov
into
out
mov
xchg
dec
mov
sbb
or
insb
or
test
jb
outsl
add
and
mov
push
inc
fistl
daa
cmp
jbe
push
js
mov
clc
ds
mov
xchg
out
cmpl
mov
and
popa
sbb
inc
cmp
push
inc
sub
out
xchg
insb
jbe
dec
mov
sub
mov
sub
or
pop
nop
stc
dec
and
std
leave
xchg
add
jne
lods
test
lods
dec
push
sahf
fisubl
bound
xor
in
cmp
push
inc
cmpsb
jmp
push
icebp
cmpsl
inc
leave
pop
and
adc
outsb
dec
inc
fs
dec
add
dec
or
and
jmp
cwtl
out
aad
ret
inc
sti
sbb
jae
repz
mov
lret
mov
mov
fmul
pop
xchg
in
insl
cmp
cmp
test
sbb
xchg
test
cltd
add
cld
push
out
cmpsl
adc
xchg
fwait
int3
or
fsubrl
and
insl
in
and
mov
sbb
dec
mov
xchg
dec
jae
repz
mov
mov
cmp
es
int
dec
sbb
cmpsl
out
fmul
clc
add
sub
aas
adc
loop
lock
xor
xor
cli
jp
sub
inc
push
lods
in
out
ja
sbb
inc
rolb
test
add
in
jecxz
mov
add
das
cmp
mov
cs
jecxz
xchg
ljmp
add
xor
push
aas
jl
jnp
xor
mov
sahf
add
test
mov
or
arpl
or
dec
mov
pop
mov
inc
mov
lret
call
shlb
pop
xlat
mov
pushf
or
aad
add
les
test
lahf
push
int3
scas
fdivrp
test
mov
lock
inc
movsb
fisubrl
in
cli
xchg
divb
scas
fdivl
outsl
scas
jbe
push
dec
testl
xchg
mov
and
insb
cld
inc
std
and
jg
xchg
cmpsl
cmp
pop
stos
push
jbe
mov
and
jo
inc
pop
stc
sbb
inc
xchg
push
jecxz
leave
push
outsb
xchg
or
rclb
xor
inc
popf
les
outsb
add
add
scas
punpckhdq
mov
adc
loope
xlat
dec
es
xchg
ret
push
push
lock
cmp
sub
or
mov
sbbb
mov
sub
fdivrl
inc
mov
cmp
in
lock
xchg
mov
adc
mov
and
ljmp
fistl
mov
sbb
lret
fcmovnu
pusha
adc
cmp
or
xor
jle
in
stc
cld
push
test
dec
mov
in
push
cmp
inc
ret
sub
inc
mov
xor
loopne
xor
outsl
mov
movsl
ret
jnp
push
dec
sbb
push
cmp
into
aad
pop
or
adc
test
rcrb
jno
lods
ret
push
je
lods
jo
test
movsl
je
cmp
ljmp
inc
mov
xchg
sbb
push
test
jne
jmp
sub
jno
mov
aaa
xchg
shrl
jae
cli
mov
mov
fs
add
movsb
lock
hlt
add
cld
push
or
pop
pushl
jno
jecxz
stos
cli
test
push
notb
clc
cmp
dec
imul
int3
call
aad
lret
in
xor
push
cmp
inc
adc
mov
sahf
loope
mov
xor
xor
xchg
imul
cmpsl
inc
jnp
cmpsb
aaa
shlb
or
jecxz
jnp
or
pop
cmpsb
pushf
pop
mov
cmc
sbb
and
fld
mov
jb
adc
push
out
or
pop
jae
sbb
test
test
imul
movsb
push
loop
scas
inc
or
dec
inc
or
dec
fnsave
xchg
lock
add
mov
or
add
jnp
sbb
adc
mov
mov
adc
dec
fistpll
les
insb
jg
lahf
outsb
shrl
orl
rcll
pop
outsl
sub
push
jo
loop
fldt
inc
pop
cmpsl
pop
scas
jle
mov
mov
cmp
ds
in
dec
arpl
jns,pn
std
pop
and
test
xor
push
dec
add
xor
fcomip
or
rcl
mov
mov
cmpsl
cmpsl
leave
add
inc
out
es
jg
dec
sbb
jge
adcb
dec
lret
int
jge
call
xchg
repz
ja
dec
cwtl
popa
fdivl
xchg
jbe
mov
jne
mov
cmpsb
jb
loop
and
out
xchg
lret
into
xor
xor
out
test
imul
test
hlt
mov
shll
or
xor
mov
das
aaa
or
xor
or
and
scas
lea
call
lods
xor
pop
shll
xchg
sub
mov
fnstsw
pop
nop
or
imul
pop
jecxz
push
cmp
sub
xchg
out
push
inc
daa
xchg
cmp
push
mov
gs
insl
inc
mov
rcr
sbb
jno
das
pop
jmp
push
fdivrs
psraw
cmp
mov
mov
lods
cmpsl
fildll
aam
hlt
jmp
mov
repz
fwait
pop
nop
dec
repnz
popa
cmc
int3
aas
cmp
xchg
cltd
dec
xchg
lock
rolb
dec
insl
push
xchg
ljmp
testl
mov
testl
fmul
jo
xchg
xchg
adcl
call
call
inc
addr16
arpl
cmpsb
inc
aam
pop
data16
test
xchg
xchg
lock
mov
cwtl
gs
xor
addr16
push
mov
popfw
cmpsb
cld
das
daa
mov
movsl
xor
lods
xchg
sbb
das
loope
rcrb
jbe
popf
mov
jns
xchg
insb
rcl
jge
out
in
inc
mov
lcall
cmpsb
imul
orl
pop
out
pop
push
mov
cmpsl
int3
jns
cltd
mov
dec
pushw
lcall
fsubp
ficomps
mov
jecxz
jg
push
and
loop
xlat
cmp
adc
sub
mov
arpl
sbb
ror
shrl
rcrb
roll
xor
mov
sbb
ljmp
in
cltd
aad
adc
dec
lods
fcom
outsl
fsubr
sub
repnz
ret
inc
and
lahf
sbb
cmp
rolb
push
std
jl,pt
jo
inc
push
iret
loope
and
test
rorl
aad
xchg
lcall
daa
test
test
xchg
addr16
mov
cmp
adc
dec
or
pop
xor
xchg
or
inc
repz
mov
insb
fs
lock
int
mov
call
repnz
aas
das
in
movsb
aaa
aam
dec
add
add
bound
in
dec
mov
imul
push
inc
inc
xchg
jp
xchg
ret
out
xchg
jb
rol
xchg
imul
aam
push
pop
xchg
xor
out
mov
dec
mov
mov
dec
dec
adc
nop
push
mov
xchg
adc
add
popfw
mov
cld
jns
push
mov
jne
pusha
push
mov
xchg
int
pushf
ds
xor
xor
inc
jl
lods
scas
insb
in
mov
mov
dec
push
inc
cmp
jecxz
cmp
and
push
adc
repz
ret
sbbb
xchg
imul
add
aaa
jns
push
inc
adc
rolb
and
stc
mov
cmp
cmp
xchg
jge
pop
shrb
adc
fsub
lcall
jo
pop
movsl
ss
imul
mov
mov
leave
mov
xor
jb
sbb
popf
rcr
xchg
out
mov
out
push
xchg
daa
push
test
stos
and
sbb
or
aaa
dec
mov
into
push
cld
popf
dec
cmc
cli
sub
or
imul
sub
mov
mov
xchg
pop
or
out
movsl
cmp
mov
mov
addr16
lea
mov
mov
xchg
scas
aam
dec
sarb
jmp
push
loope
push
mov
jge
scas
scas
dec
xor
mov
sbb
and
gs
inc
aad
aaa
fs
out
imul
cmp
addr16
push
in
push
pop
add
xchg
loopne
push
push
mov
arpl
inc
dec
fiadds
mov
cmp
cmpsl
mov
sbb
decb
cmpsl
fdivrs
cmc
imul
push
out
test
int
lods
das
pop
popa
call
sub
push
inc
idivl
imul
jmp
addl
stc
inc
pop
mov
xor
stos
pop
inc
repz
rolb
mov
inc
jecxz
pop
pop
jmp
stc
cld
mov
test
mov
jecxz
in
mov
pop
sbb
and
pop
popa
nop
xor
je
jnp
ret
call
stos
add
or
xor
or
mov
out
movsb
call
and
adc
pop
add
mov
lods
mov
mov
mov
push
rcrl
mov
in
fdivl
or
fmul
mov
push
mov
jmp
hlt
test
or
or
xchg
push
stc
push
clc
push
arpl
stos
enter
or
idivb
xchg
iret
inc
loope
add
std
imul
add
dec
push
mov
mov
fstl
aaa
push
pop
subb
push
lret
ret
subl
add
jbe
jp
push
push
pusha
jl
lods
push
inc
lret
repnz
dec
dec
daa
mov
push
add
or
idivb
insl
or
rcll
add
pop
rcrl
cmc
aam
lock
inc
and
xlat
mov
es
std
lods
popa
cmc
inc
in
mov
mov
cmpsb
and
in
clc
arpl
push
sbb
into
sbb
xor
std
inc
adc
movsb
push
mov
jne
daa
pop
dec
dec
inc
std
aaa
mov
lret
outsl
test
out
fwait
not
sub
stos
movsb
les
inc
mov
in
lea
andb
push
jbe
loopne
or
addl
push
repnz
js
into
addl
icebp
movsb
cmp
mov
popa
fs
js
inc
in
xchg
int
sub
fisttpll
jg
adc
sbb
sbb
stc
popf
xor
push
sbb
fidivs
pop
stos
or
lods
jbe
hlt
jbe
mov
adc
cld
mov
cmc
pop
fsubrs
fisttps
hlt
out
cmp
and
pusha
arpl
sbb
rorl
or
scas
push
push
inc
dec
xchg
inc
and
lret
jl
mov
fildl
mov
call
mov
push
and
xchg
mov
int
jp
sbb
push
jae
jg
inc
pop
fistl
daa
fdivs
movsl
jns
add
in
and
ds
push
add
popf
shll
fsubs
push
mull
push
adc
mov
cmp
fucomp
xchg
dec
pushf
or
js
mov
jg
pop
jne
call
push
lds
cld
sbb
push
stc
icebp
dec
jbe
rcl
pop
adc
mov
addr16
dec
mov
dec
cmp
lcall
xlat
mov
pop
dec
and
and
cmc
jns
jmp
popa
bound
or
xor
pop
lcall
dec
jo
lods
adc
fistl
inc
fs
sub
notb
into
cmpb
ds
inc
push
xchg
mov
xchg
mov
sbb
inc
xor
mov
jne
adc
je
jle
and
fdivrl
adc
mov
mov
dec
mov
lret
daa
cs
cmp
daa
xchg
xchg
in
and
inc
data16
jne
ds
mov
mov
mov
mov
push
imul
bound
jo
enter
out
mov
inc
rcrb
mov
ret
outsl
push
or
cmp
js
jae
std
lret
sarb
mov
dec
test
add
bound
pop
mov
pop
and
test
arpl
xchg
and
mov
movsb
pusha
push
adc
jg
dec
add
popf
fldt
sbb
mov
into
stos
add
mov
xchg
mov
in
adc
mov
aas
scas
xor
mov
or
out
lcall
mov
xchg
sub
dec
faddl
mov
sbb
push
pop
adc
adc
rorb
stos
add
sub
std
int3
popf
mov
inc
or
pop
loopne
int3
inc
ss
inc
lret
aad
fsubs
pop
pop
jle
dec
push
icebp
testl
pop
add
cmc
inc
dec
aam
mov
repz
jg
icebp
mov
nop
stos
inc
mov
int3
or
in
lret
or
jae
adc
mov
jge
push
sbb
cli
xchg
xchg
cld
add
pop
sub
cs
sub
clc
mov
jb
or
stc
cmc
jg
jle
xchg
xchg
int3
push
cmp
sbb
pop
sbb
sbb
pop
push
scas
push
addl
clc
jg
jp
pop
mov
sub
mov
popf
js
imul
or
push
and
sbb
and
ss
jge
mov
fisubs
xchg
xor
int
insl
es
scas
dec
inc
sbb
lds
cmp
outsl
xor
mov
mov
stc
stos
js
loop
jae
ja
call
popa
outsb
jb
and
sahf
add
mov
cwtl
mov
in
pop
aam
inc
inc
pusha
pop
test
jbe
fs
cmpsb
mov
add
cmpsl
das
dec
inc
adc
int3
aas
int3
dec
mov
xor
icebp
add
cmp
cli
hlt
outsb
stos
fwait
or
add
mov
in
pop
pop
adc
daa
in
mov
mov
push
dec
jns
xchg
pop
out
push
in
sub
ljmp
repnz
add
cmp
test
test
cld
jo
push
pop
dec
xchg
or
mov
xchg
cmp
mov
mov
movsl
or
push
xor
les
enter
loop
add
or
test
pop
les
cmp
shlb
jbe
inc
mov
sti
xor
or
sub
adc
leave
and
lahf
lods
inc
lods
imul
adc
lods
and
add
pusha
cmc
adc
adc
cmp
xchg
rcrl
and
hlt
rcrl
sbb
fdivp
dec
fists
jge
dec
ljmp
sahf
sarl
mov
test
fisubl
or
loopne
sub
ret
cltd
mov
aad
iret
jl
leave
shlb
cwtl
fcomip
out
imul
imul
push
int
push
pop
dec
dec
pop
and
dec
xor
jmp
in
outsb
lcall
in
adcl
xchg
into
and
aaa
push
mov
cmpl
in
mov
pushf
push
dec
test
arpl
fcompl
int
aaa
pop
pop
and
cmpsl
add
add
xor
insl
cld
jae
loopne
ljmp
push
outsl
and
pop
jmp
ja
sbb
in
sbb
jne
dec
out
and
aad
cmpsl
xchg
cmp
cmp
pop
sub
sbb
pop
ds
dec
and
push
mov
imul
lret
dec
pop
fiadds
xchg
test
mov
in
popf
push
std
outsl
cmp
int
mov
sub
lods
incl
dec
mov
push
lahf
mov
dec
mov
inc
inc
fidivl
mov
test
sbb
lcall
push
xor
lea
mov
push
outsb
shrb
mov
and
js
xchg
stos
xchg
jns
stc
mov
mov
je
ljmp
gs
cmp
aad
adcl
stos
xchg
inc
sub
div
shr
fiaddl
int3
aas
loope
out
and
lods
sub
dec
xor
aaa
cmp
testb
lahf
lahf
mov
push
cmp
sub
or
test
cmp
and
fwait
cmp
insb
xchg
push
imul
cmp
jo
pushf
sbb
lods
aam
mov
sub
cmp
mov
dec
outsb
cmp
cmc
negl
jnp
cmp
xchg
cmpsl
lods
xchg
shr
xchg
ja
xchg
test
js
xor
loopne
fwait
adc
daa
push
mov
nop
xor
sti
and
push
je
iret
int3
addb
int
neg
imul
pop
pop
cmp
mov
mov
sub
std
push
fsubr
cld
push
xchg
das
inc
popa
inc
repz
imul
sarb
scas
xchg
xor
pop
cmp
xchg
sub
stc
sub
push
adcl
mov
or
xchg
cmpsl
mov
push
xchg
xor
mov
inc
out
int3
ds
xor
mov
lods
mov
call
pop
push
jecxz
mov
mov
mov
aas
ds
mov
es
pop
shr
insl
aas
lods
inc
and
pavgb
mov
insl
mov
xchg
das
xchg
call
cmp
aas
popa
add
add
xchg
fs
dec
adc
jmp
jge
loop
int3
insb
jg
inc
mov
cmc
lret
and
sti
stc
imul
in
xor
daa
inc
out
insl
lods
jmp
arpl
inc
pop
cmpsb
call
jb
insl
cmp
and
sub
int
stos
roll
test
adc
push
xor
dec
adc
fwait
jecxz
and
ja
insb
inc
xor
push
jb
push
ret
mov
imul
xchg
xchg
insb
and
mov
repnz
or
cmp
aam
loop
fisttpl
enter
jnp
or
movsb
sar
clc
push
fisubrs
sbb
out
in
or
jo
pop
mov
in
mov
in
mov
xlat
dec
frstpm(287
mov
sti
out
cli
pushf
sub
adc
mov
mov
and
mov
pop
adc
adc
pop
repz
insl
mov
xor
lods
fistps
xchg
jp
pop
pop
adc
test
sub
adc
jnp
ljmp
xor
in
mov
rcrb
xor
fucomip
aas
sbb
sub
mov
ret
sub
pop
add
lret
pop
sbb
sub
popf
inc
sti
cli
mov
sub
addl
push
and
cmpl
xchg
mov
shlb
insl
ret
xor
xchg
cmp
inc
jge
arpl
pop
jbe
data16
js
lret
jnp
loopne
inc
jmp
fdivrl
sub
fsubrl
cmp
pop
stc
mov
and
pop
loope
repnz
jg
pop
addr16
pusha
stos
mov
stos
int3
add
aas
xchg
mov
jne
mov
mov
mov
cmpsl
mov
stos
dec
call
js
mov
sbb
pop
xchg
aaa
pop
sub
fcomps
cmp
sbb
dec
out
sbb
jb
dec
sub
mov
in
xchg
mov
cmp
jo
xlat
mov
inc
mov
mov
scas
mov
loop
fcompl
jns
pop
or
daa
inc
pop
adc
cmp
das
fsubr
les
rclb
addr16
mov
adc
cmp
fists
jmp
ljmp
jecxz
or
xchg
out
jge
aaa
insl
cmp
lahf
dec
lret
data16
mov
sbb
dec
sub
ja
xchg
into
jp
lds
or
xchg
push
scas
call
in
ret
xchg
imul
stos
sbb
popa
jge
push
ret
jl
ds
outsb
sub
push
jno
test
lcall
fdivs
fs
inc
dec
add
aam
pop
gs
dec
std
aaa
xchg
add
mov
int3
addr16
xchg
pushf
or
mov
out
lock
pop
inc
xor
add
xchg
in
paddsw
iret
pop
jl
push
in
xlat
mov
sbbl
lods
mov
nop
add
cmp
add
lock
fwait
add
xchg
jb
mov
movsb
outsl
push
scas
inc
scas
fbld
clc
inc
or
jp
jb
add
and
or
xor
or
cwtl
adc
cltd
pop
aad
popf
sbb
dec
xchg
es
adc
pop
cmc
and
mov
xchg
push
and
fldenv
xchg
cs
cmp
sbb
rcrb
icebp
lcall
mov
push
sub
mov
sahf
outsl
and
sub
and
rorl
out
sub
push
loop
mov
push
arpl
mov
int
out
fisubrs
or
sub
add
dec
jle
pushf
and
mov
or
cmp
js
sar
push
test
cmp
mov
fs
adc
out
sbb
mov
mov
xchg
cmp
add
mov
in
push
dec
inc
xchg
mov
push
or
jp
pop
bound
mov
dec
sti
cs
push
subl
or
sbb
sbb
test
xchg
repz
pop
xor
stc
in
inc
xchg
movsl
xor
push
sub
lds
sub
bound
xor
ljmp
das
and
mov
xor
cmpsb
jmp
int
shrb
cmova
dec
xchg
inc
inc
fstps
dec
das
enter
aaa
mov
aad
sub
fldcw
sub
mov
sub
jmp
popf
jno
dec
imul
mov
cmpsl
je
mov
pop
cmpsb
arpl
sti
imul
xchg
mov
adc
fisubrs
mov
sbb
hlt
dec
cmp
in
test
cld
movsl
xchg
lcall
cs
pop
ljmp
psrad
int
ss
or
aas
or
push
pop
out
insb
imul
les
mov
push
pushf
push
and
lcall
xor
bound
dec
push
adc
xchg
jp
jp
fsubrp
pop
aaa
into
loop
mov
jg
mov
dec
mov
pop
adc
shll
out
es
adc
out
test
mov
aam
outsl
add
fsubs
xorb
push
les
cwtd
mov
iret
and
adc
ss
fld
jle
ljmp
ljmp
xor
jns
fbld
add
pushf
mov
ss
pusha
jnp
nop
add
inc
icebp
in
outsl
lds
imul
sub
dec
cmp
adc
lahf
xorb
std
je
psrlw
call
mov
dec
clc
pop
mov
or
movsl
jp
jg
adc
mov
pop
adc
mov
mov
adc
lret
sub
sbb
and
mov
mov
lcall
pop
icebp
jns
bound
push
add
pop
push
stos
inc
sub
pop
and
loope
xchg
scas
mov
inc
sahf
cld
dec
sbb
aas
js
sbb
pop
ss
aas
adc
sub
xchg
mov
ds
shll
and
lret
push
divb
push
popa
mov
repnz
inc
push
call
push
scas
lods
mov
das
ss
ss
xchg
aam
cmp
ret
xor
jno
xchg
je
and
loop
rcl
mov
xor
mov
shl
ficoml
mov
sbb
movsb
xor
sti
fs
or
pop
ret
mov
dec
cmpsb
lcall
pop
mov
in
push
sahf
pop
addb
mov
shlb
sub
sti
mov
push
pop
push
jg
dec
sub
ja
push
push
inc
aad
fsubrl
pop
sahf
int3
das
repnz
mov
cld
sub
cwtl
and
push
pop
mov
push
jbe
in
pop
adc
pop
mov
sbb
mov
imul
mov
fmuls
stos
push
lods
das
leave
dec
lahf
xchg
pop
push
call
movsb
cmpsb
jno
fisttpll
jg
outsl
pop
jno
cmpsb
mov
repnz
outsb
xorb
out
mov
repnz
mov
test
dec
in
add
mov
outsb
lods
push
dec
or
mov
cmpsb
outsl
mov
cmp
or
or
mov
jecxz
xchg
insb
mov
and
loopne
adc
addr16
repnz
imul
gs
pop
add
into
mov
icebp
mov
push
loope
fdivl
mov
adc
push
or
add
mov
dec
lea
dec
fxch
push
pushf
je
mov
daa
mov
movsb
imul
jnp
dec
mov
call
add
adc
in
mov
adc
dec
add
xchg
dec
stos
shrb
xlat
sub
cmc
and
mov
push
in
mov
mov
mov
inc
mov
outsb
push
jge
jne
in
mov
inc
in
aaa
mov
shr
leave
xorb
sub
fistpll
cmpsl
inc
cmp
xlat
in
sahf
cwtl
arpl
js
lods
aas
sti
out
sub
sub
sbbl
mov
and
xchg
xchg
adc
imul
call
repnz
adc
inc
je
lods
call
xlat
mov
mov
imul
xchg
ret
sub
andb
call
bound
ljmp
mov
adcb
fsubr
push
pop
pop
mov
insl
pop
pop
jb
mov
movsb
imul
cmp
inc
fs
mov
jbe
pop
cs
fcmovnu
and
in
push
je
mov
mov
mov
adc
popl
mov
out
inc
iret
mov
dec
fistps
sbb
jns
push
int
or
in
pop
popa
xchg
cmpsl
outsl
pop
lods
mov
cs
lea
outsb
sub
pop
out
dec
cmp
imul
je
les
fimull
imull
jecxz
jle
lods
jmp
push
or
lret
aaa
pop
push
aam
cmp
cmp
lea
icebp
rcll
outsb
lds
inc
loop
mov
jmp
out
or
sti
inc
pop
xor
dec
mov
in
cmp
testl
or
mov
fsub
push
mov
mov
iret
imul
cs
jle
or
push
test
lea
mov
pusha
xor
mov
pop
std
jecxz
fucomi
jp
jbe
sbb
or
xchg
js
cmp
pop
gs
movsl
jbe
and
arpl
add
push
add
out
outsb
jbe
pop
or
loopne
dec
cmp
push
add
and
sbb
loop
sbbl
sbb
test
xor
call
mov
push
inc
xor
mov
arpl
or
clc
int3
bndstx
add
xor
movsl
test
push
cmp
insl
into
mov
mov
mov
pop
xor
pop
nop
pop
pushf
mov
jp
das
and
inc
mov
add
std
es
add
xchg
icebp
adc
bsr
imul
in
mov
jmp
cmpl
push
movsb
inc
insl
das
fdivs
test
add
std
jmp
xor
jle
or
inc
push
inc
cmp
call
test
sub
scas
xchg
jecxz
xor
ljmp
inc
lret
in
add
mov
les
pop
lahf
cmp
mov
sub
leave
push
sbb
xor
mov
and
dec
add
dec
mov
lcall
popf
inc
push
stc
es
lods
ds
adc
insb
xchg
adc
push
xor
cli
cli
adc
pop
cwtl
xchg
lret
push
mov
out
movsl
pushf
mov
adc
movsl
lret
movsb
cmp
shll
xor
cmpsl
mov
stos
inc
lcall
pop
xor
mov
sub
pop
leave
sti
mov
sub
sbb
jp
xchg
pop
pushf
xor
cmp
jecxz
test
and
fsqrt
sbb
inc
xor
xchg
ja
out
imul
cmp
adc
pop
imul
pop
shlb
dec
push
push
cli
aam
jmp
test
xor
jp
je
adc
xchg
adc
mov
jo
and
cltd
andl
bnd
or
aad
dec
pop
gs
sub
pop
jp
test
push
add
add
jne
cmp
pop
dec
pop
xor
xor
jle
pop
out
sbb
pop
xor
aam
fwait
lods
cmp
xchg
jl
mov
int
xchg
adc
mov
mov
inc
cmp
mov
fdivl
cmpsb
lcall
imul
fnsave
mov
inc
push
sub
push
jmp
testl
mov
add
fcomip
fucomi
je
sbb
jo
inc
sbb
ret
push
dec
int
fisttps
inc
fadds
xor
gs
rcrl
jo
jle
adc
pop
and
outsb
jno
lret
adc
push
sub
daa
jno
push
pop
test
lods
data16
cmp
inc
mov
fisubl
pop
xchg
nop
sbbl
gs
or
adc
push
sbb
xchg
inc
cmp
xchg
pop
jns
lret
cltd
adcb
in
test
dec
jle
lea
in
cmp
lods
sub
push
vmptrld
insl
pop
daa
inc
popf
add
sub
popf
add
in
push
and
fs
xchg
mov
inc
nop
mov
sarb
aam
jne
push
xchg
rclb
movsl
xlat
push
mov
and
xchg
mov
sarl
push
pop
cli
loopne
push
lret
and
or
inc
mov
aas
dec
pop
mov
xchg
sbb
rorb
aam
jb
ret
outsb
inc
cli
mov
mov
hlt
fisttpll
xchg
xchg
push
pop
mov
rcrb
mov
mov
add
mov
xchg
jecxz
push
sub
mov
dec
shll
shl
or
inc
push
pop
push
xchg
stc
out
mov
dec
sti
add
cmpl
push
imul
mov
cwtl
std
stos
dec
in
jbe
cwtl
push
xorl
mov
mov
int
pop
and
ficomps
sbb
sub
pushfw
dec
movsb
hlt
lcall
mov
in
repz
das
ss
xchg
pop
aam
adc
cmp
or
jle
shl
and
jne
test
inc
and
lret
mov
out
mov
dec
bound
mov
movsb
jle
push
inc
iret
cmp
xchg
sbb
imul
in
jb
sbb
jo
fwait
sti
incb
dec
jge
repnz
aam
fnstsw
in
or
sub
dec
inc
add
cmpsb
push
std
pop
cmp
add
add
mov
lea
lahf
jne
cmp
inc
push
addr16
sahf
push
loope
repz
or
fisubrs
dec
clc
xchg
fisttpll
mov
test
fwait
test
mov
insl
mov
iret
out
loop
mov
jge
fbld
sbb
mov
ror
fildll
mov
outsb
cmpb
xchg
leave
int3
ja
sub
loopne
sub
sub
lahf
gs
lods
lahf
lahf
inc
pop
into
movsl
push
fs
xchg
sbb
xor
sub
insl
bound
test
add
mov
mov
jnp
lahf
sbb
ljmp
mov
fsts
outsl
rcll
std
sbb
jne
aaa
mov
and
mov
cwtl
arpl
ficompl
mov
rorb
cmpsl
into
out
sti
cltd
mov
clc
aad
mov
sti
push
dec
cmc
stos
lods
sub
inc
xchg
int3
xchg
testb
push
int3
mov
cmc
daa
sbb
xor
or
xchg
js
idivb
pop
lret
push
ss
stos
mov
pop
adc
popf
cs
popa
gs
repz
inc
test
xchg
loop
xor
add
lea
or
fmul
or
sysenter
xchg
lcall
sarb
push
ret
mov
cltd
repnz
sub
xchg
int3
or
fdivp
repz
sbb
frndint
cltd
push
sbbl
cmc
lahf
adc
mov
roll
std
hlt
imul
insb
fimull
inc
push
dec
iret
mov
inc
mov
dec
lods
ss
or
clc
mov
pop
cmpsl
data16
out
xchg
insb
jae
xchg
sbb
cwtl
inc
adc
ret
sub
mov
cmpsb
xchg
inc
negl
cmp
test
int
rol
in
inc
popf
xor
xchg
imul
push
sti
sub
popa
mov
inc
mov
sahf
cld
jle
lds
xchg
rcl
out
cmp
cltd
lcall
aas
dec
sbb
flds
addr16
ss
xor
movsb
adc
pop
sbb
push
ret
dec
and
ljmp
and
movsl
mov
stos
inc
push
inc
or
jbe
xlat
fld
aad
add
dec
mov
mov
jmp
pop
dec
dec
sahf
jle
push
aaa
fadds
xchg
outsl
jle
popa
xor
cmp
call
inc
jge
out
xor
sbb
into
cli
xchg
adc
rol
dec
fidivs
push
cltd
cltd
inc
pop
dec
mov
pop
in
mov
pop
in
out
jle
lcall
push
pop
jle
xor
aam
cmpsl
hlt
es
cmp
aaa
or
sahf
mov
loopne
sbb
pop
dec
pop
pop
loopne
pop
pop
pop
rclb
out
add
mov
adc
inc
arpl
or
jl
shlb
icebp
sub
sbb
ds
shlb
dec
lea
sub
mov
popa
jp
jbe
insl
sub
mov
lods
sub
and
inc
or
jecxz
inc
xor
mov
xchg
mov
out
push
dec
mov
mov
sbb
inc
stc
xor
in
fcmovbe
das
lods
outsb
pop
fdivrs
jl
push
jge
jns
leave
or
lea
xchg
test
jmp
add
jmp
mov
inc
mov
imul
push
dec
push
into
xor
xchg
mov
jne
sbb
insl
push
movsb
shlb
pop
out
xor
add
mov
cmp
jecxz
push
fdivr
push
mov
pop
adc
pop
jnp
mulb
push
in
and
mov
insl
fwait
inc
jle
je
lahf
adc
imul
stos
cmpsb
fwait
cmp
push
fnstcw
jno
imul
loope
and
pop
out
adc
arpl
add
ss
sbb
nop
add
mov
insb
cmp
cmpsl
push
mov
loop
cmp
pop
stos
movsl
push
or
cmc
inc
inc
bound
cmp
or
insb
daa
cs
sahf
loop
push
mov
rolb
jne
sahf
mov
cmp
jmp
fdivrl
and
and
lock
stc
scas
fadds
lods
bound
loop
out
int
cmp
jbe
inc
cmp
xorb
popa
addr16
subb
dec
add
mov
out
stos
subl
insb
in
js
push
pop
femms
dec
ret
out
jne
push
outsb
xchg
mov
and
and
je
cmp
dec
cmc
or
cwtl
lret
nop
ds
clc
aas
add
es
mov
ror
nop
adc
aaa
adc
jge
xor
or
dec
mov
pop
xchg
mov
stos
xchg
add
mov
push
shll
leave
repnz
icebp
ret
mov
pop
mov
sub
mov
mov
add
mov
xchg
cmp
or
cmp
add
mov
push
xchg
push
hlt
scas
add
cmp
sub
push
push
inc
fsubs
or
aad
insl
pop
stos
xor
lea
add
dec
mov
mov
test
popf
nop
jb
fcoml
pop
xchg
inc
push
mov
add
js
ljmp
scas
pop
mov
cmpsb
sahf
cmp
pop
cmp
out
faddp
adc
stos
sub
mov
ljmp
repnz
push
arpl
xor
mull
enter
adc
jo
and
sbb
out
test
mov
adc
and
adc
jl
jp
xchg
test
adc
in
imul
pop
mov
cmp
and
xor
arpl
fldcw
adc
and
lods
test
out
in
out
das
adc
inc
or
aam
dec
xor
mov
sub
inc
cld
sub
enter
pop
into
inc
push
pushf
pop
cmp
adc
adc
jnp
cs
cmp
inc
gs
shlb
xchg
mov
enter
push
add
lret
mov
mov
push
bound
arpl
dec
jmp
std
cs
xchg
mov
jp
rcrb
mov
sbb
sub
rep
cwtl
or
and
lds
loope
mov
push
xor
pop
icebp
lahf
in
jb
or
mov
sbb
mov
rol
adc
and
scas
inc
mov
rolb
inc
into
jae
divl
add
sub
pop
subl
mov
daa
lods
je
dec
ficompl
sbb
fdivrl
les
push
int
incl
fisubl
add
mov
mov
loopne
scas
push
mov
mov
mov
je
fcomip
loopne
sub
mov
dec
adc
popa
jle
or
ljmp
push
push
add
mov
pop
jbe
icebp
or
movsb
jno
jbe
icebp
cld
inc
jnp
mov
mov
pop
pusha
enter
sbb
std
sbb
xor
mov
mov
imul
and
mov
cmpsb
inc
lea
insl
sub
pop
in
mov
inc
push
xor
iret
rcrl
loope
into
pusha
lret
mov
jne
cltd
sbb
push
add
jmp
sahf
cmp
sub
popa
outsl
xchg
outsl
add
jp
fdivl
lods
iret
nop
or
fmuls
jmp
scas
xor
out
pop
push
dec
mov
xchg
popf
adc
subl
push
dec
test
and
dec
iret
push
out
dec
adc
mov
in
mov
cmp
inc
lods
mov
es
or
sub
outsl
rcl
xchg
dec
jmp
stos
lea
clc
xlat
sbb
popa
clc
sbb
rcrl
jge
mov
ja
leave
repnz
push
push
shlb
mov
adc
scas
jecxz
clc
mov
adc
je
mov
xchg
push
dec
jb
pop
lds
sub
cld
ficomps
jmp
push
xchg
icebp
call
xchg
inc
leave
and
inc
pop
mov
loopne
xor
lret
pushf
mov
clc
inc
pop
dec
shll
sub
das
xchg
test
popf
lods
rol
mov
lods
dec
sub
mov
fwait
rcr
popf
fidivl
shlb
add
add
ja
adc
pop
inc
aad
pop
dec
out
or
sahf
inc
in
and
addl
sub
aaa
jb
imul
int3
insl
jno
xor
pushf
xchg
pop
mov
test
lds
inc
mov
inc
xchg
xchg
iret
jns
dec
jmp
fsubrs
mov
and
jg
push
nop
lahf
xlat
mov
mov
mov
adc
inc
dec
jecxz
fucomi
lods
mov
test
sti
lods
pop
pop
sbb
inc
adc
and
xchg
sbb
xchg
stc
out
jo
sahf
in
pop
mov
testl
fsubrl
prefetch
or
mov
jns
add
fwait
shll
lds
hlt
jp
lea
adc
jo
test
push
cmpsb
sbb
aas
jg
addb
mov
pusha
mov
dec
in
incb
int3
push
mov
ret
cs
sahf
lea
adc
jns
mov
jno
cltd
lea
cmpsb
sarl
push
inc
mov
mov
inc
fldcw
call
leave
jns
pop
adcb
mov
lods
fidivs
add
imul
or
pop
out
sub
pop
inc
adcl
cmp
daa
sbb
jns
enter
jbe
dec
xchg
adc
loope
mov
add
lcall
out
push
lret
repnz
popa
cli
sbb
scas
out
sahf
lods
fcoml
jb
mov
js
pop
xchg
sub
inc
les
xchg
shr
pop
movsl
mov
into
mov
aad
arpl
xchg
daa
pushf
fs
xor
in
cmp
insb
mov
adc
or
into
xchg
dec
inc
add
pop
or
dec
dec
mov
jge
adc
into
ror
cmp
andb
icebp
mov
les
mov
outsb
inc
mov
cli
aam
call
test
pop
and
in
aam
inc
lahf
and
les
hlt
aam
mov
mov
movsb
mov
ljmp
jb
dec
inc
mov
mov
jg
jae
stos
xchg
gs
fbld
adc
mov
gs
mov
arpl
fwait
xchg
in
cmpsl
push
jns
aam
cltd
jg
pop
fwait
xchg
add
call
add
mov
sti
pop
jmp
mov
cld
xor
es
mov
cltd
sub
lahf
insb
ret
pop
add
push
out
movsb
rep
xlat
shrl
stos
and
mov
mov
mov
xchg
xchg
jb
or
xlat
jne
outsb
and
lods
testb
int3
dec
test
pop
es
and
shlb
insb
mov
movsb
in
xor
movsl
xchg
push
ljmp
jecxz
add
and
pop
or
lea
pop
enter
shrl
push
mov
push
or
inc
sbb
into
jbe
jmp
lds
shll
adc
jp
std
sub
jl
mov
mov
addr16
cmp
adc
lahf
sub
pop
ja
push
mov
stos
pop
mov
lods
clc
add
push
and
les
fs
adc
push
popa
test
icebp
and
into
lcall
jne,pn
pop
in
and
icebp
in
mov
add
ja
aaa
lock
pop
xlat
fdivrs
xor
scas
std
inc
xchg
ret
sub
xlat
pop
mov
xor
dec
lcall
scas
imul
lock
sbb
lahf
in
jbe
lds
jbe
cmp
cwtl
cmp
jne
movsl
out
subl
sahf
rclb
imul
cli
fadd
bound
lcall
and
adc
add
in
cmc
add
cmp
dec
iret
lret
bound
jge,pt
cmp
inc
lcall
in
test
mov
jge
test
xchg
pop
ret
dec
sbb
mov
aas
push
and
or
push
call
dec
and
addb
and
lea
mov
jb
out
jmp
or
pushf
nop
push
xor
lods
xor
jmp
sub
repnz
jne
add
jnp
jecxz
push
fmull
pop
sub
aas
cld
fisubrs
adc
leave
or
cld
das
je
mov
mov
rcrb
aad
and
aaa
cmp
cmpsb
mov
sti
lea
jns
mov
lret
mov
movsl
jmp
inc
or
mov
xchg
xchg
push
frstor
in
scas
dec
or
lock
mov
scas
jg
nop
sub
cmp
mov
loopne
test
sbb
cmp
mov
int3
out
testl
push
push
mov
inc
xor
ss
idivb
inc
xchg
test
cwtl
add
mov
das
xor
ljmp
test
push
lret
dec
bound
cmp
inc
dec
push
cmpsb
test
push
mov
xor
scas
insl
orb
mov
imul
sbb
sub
pop
loope
jns
out
les
ss
imul
ljmp
aam
jnp
adc
or
andnps
jl
sub
outsl
xor
lds
cmp
setle
xchg
jl
std
lret
sbb
xlat
or
add
adc
testb
sbb
fadd
enter
mov
xchg
fldenv
ljmp
or
mov
addr16
lcall
cmp
adc
add
aas
inc
dec
and
and
rorb
and
mov
pop
pop
lods
les
test
lods
xlat
inc
repnz
cld
cmp
pop
jl
lds
dec
int3
loop
into
inc
lea
loopne
outsl
xor
push
rcrb
dec
stos
mov
mov
lods
jecxz
arpl
ljmp
mov
fidivs
mov
fwait
lock
notb
jle
pushf
push
cs
cmc
lea
inc
loope
sbb
inc
xchg
jne
cwtl
insl
jb
out
inc
dec
test
mov
imul
lea
jbe
les
push
pop
imul
out
out
push
aas
in
stc
dec
mov
add
cs
scas
insl
es
and
xorb
xlat
push
push
xor
lahf
shld
inc
test
hlt
push
repz
rclb
mov
xor
adc
mov
js
mov
and
jmp
movsb
mov
daa
cmp
rorl
mov
jnp
mov
call
in
jp
lods
dec
push
mov
jns
jbe
int
out
scas
mov
shll
lds
std
lods
or
outsl
xor
xor
out
mov
mov
shr
cltd
lods
xor
mov
push
jge
outsl
shll
sbb
mov
enter
push
loope
je
aad
mov
sbb
sub
cmp
dec
cltd
pop
mov
jae
stc
mov
sub
leave
sub
icebp
mov
or
and
js
mov
loope
push
cs
mov
inc
jp
insb
push
cld
xor
cmp
push
movsl
push
out
rcrb
cwtl
mov
stc
imul
daa
xchg
inc
in
scas
cmp
push
icebp
les
adc
jmp
dec
adc
aaa
cmc
or
test
enter
fsubrs
sub
popa
add
sbb
outsb
push
xor
popa
xchg
jo
fadds
push
insl
xchg
xchg
leave
out
inc
push
aas
jg
dec
cmc
inc
adc
ficomps
and
lock
and
dec
cmc
mov
scas
bound
push
xchg
lret
pop
xchg
pop
fsubp
enter
jae
xchg
jp
xorb
in
adc
adc
add
pop
push
cmpsb
push
xor
lret
aam
mov
inc
xchg
inc
icebp
jns
or
pop
pop
pop
xor
sub
xor
repz
jg
xchg
imulb
jmp
repnz
cli
add
clc
shrb
sub
pop
xchg
adc
frstor
add
push
mov
xchg
leave
int
or
cli
daa
cld
lea
data16
into
mov
scas
push
push
lods
sbb
cmp
es
and
cltd
stos
ljmp
dec
add
les
mov
push
cmpl
in
mov
into
jp
lret
fldcw
or
or
mov
mov
jo
inc
testl
mov
popf
stc
call
iret
sbb
jmp
aas
cmp
orb
mov
push
or
and
aam
addb
bound
push
jg
jae
ds
mov
push
dec
jnp
sahf
int3
aam
call
in
into
sti
hlt
fcmovne
sbb
popf
fnstenv
mov
dec
ret
push
in
add
mov
or
pop
lods
inc
inc
insl
movsl
das
stc
icebp
jae
sbb
adc
stos
or
stos
shll
push
lret
scas
xchg
inc
jp
test
mov
mov
test
ss
fnstsw
cs
dec
cmp
scas
dec
cmpsl
call
ficompl
ret
ret
sbbb
xor
push
or
pushf
sub
das
enter
imul
or
andl
pop
dec
stc
cltd
pop
hlt
pop
inc
add
test
in
jmp
push
push
cwtl
popa
pop
inc
sub
pop
outsb
in
popf
fcmovnb
push
fwait
rorb
sbb
dec
movsb
sar
pop
or
xor
add
sub
inc
lcall
jae
mov
inc
gs
cmp
and
push
adc
fidivl
dec
iret
mov
fdivs
ds
std
int3
fsubl
add
clc
test
push
adc
int3
adc
and
in
xchg
test
push
daa
adc
or
ds
inc
iret
adc
roll
push
movsl
and
scas
pop
or
sbb
sbb
ret
adc
ret
fimull
mov
in
jb
popa
ds
aam
std
jne
push
shll
jp
adc
lods
push
cli
dec
push
pusha
xchg
xchg
dec
rcll
inc
stos
push
call
pop
push
mov
out
mov
imul
push
xchg
pop
and
ror
gs
fists
int
jge
lods
inc
mov
test
loop
jl
xor
inc
adc
or
pop
push
sbb
mov
sub
lahf
loop
and
mov
mov
mov
mov
xor
sub
fists
sbb
jl
ret
inc
jbe
bound
push
std
mov
ret
xchg
mov
mov
stc
inc
jg
aad
pushf
jae
lahf
jae
mov
call
mov
in
jno
xchg
fsubl
lods
jl
dec
cmc
pop
lods
lds
inc
test
movsb
xchg
addb
lret
jecxz
cmp
jne
and
inc
xchg
push
add
dec
push
mov
cmp
scas
dec
push
cmc
push
inc
test
add
pop
adc
jns
aam
aaa
in
pop
mov
pop
mov
xchg
jo
xorb
xchg
or
dec
sti
sbb
lock
shl
push
jmp
insb
repz
add
outsb
cmp
sub
or
or
push
mov
std
jmp
aas
clc
and
sub
mov
out
and
div
pop
sbb
cwtl
push
jge
inc
jb
enter
sti
enter
or
jne
into
pop
insb
rcrl
test
andl
fwait
cmpsb
and
inc
adc
mov
mov
mov
cmp
ret
test
pop
mov
and
add
mov
jg
or
jle
test
popa
xchg
cmpsl
pop
pop
push
push
push
and
and
jae
adc
sbb
repz
mov
shll
jge
negb
push
or
rol
popl
jb
jb
test
and
lret
in
leave
xchg
mov
adc
ljmp
aaa
dec
cmp
cwtl
mov
sbb
icebp
imul
mov
add
sub
frstor
iret
pop
sahf
xchg
or
jns
rolb
add
add
adc
ffreep
les
sahf
sbb
mov
pushf
xchg
cli
mov
cmp
or
adcb
into
cmp
ss
out
push
addr16
or
cmp
jp
xchg
les
sbb
movsb
inc
sbb
xchg
dec
mov
loope
mov
push
sbb
je
out
jp
pushf
sub
in
dec
sub
daa
enter
mov
sbb
push
nop
jmp
out
sbb
dec
in
xlat
test
or
insl
inc
push
sbb
jecxz
push
cmp
addr16
cltd
mov
and
popf
shll
into
push
inc
push
dec
xor
jb
mov
fistps
and
cmpsl
stos
dec
aaa
repnz
fistpll
fbld
ret
adc
lods
xor
std
mov
mov
pop
mov
or
jo
push
outsw
lret
push
out
mov
insl
loopne
bound
out
push
and
test
mov
xorl
jle
insl
mov
ja
test
push
xor
xor
es
sub
test
jg
push
jnp
addr16
call
and
pushf
cs
dec
cmp
out
push
sbb
in
enter
push
mov
xchg
clc
jmp
aaa
sub
js
push
jmp
xor
lods
js
loopne
js
or
mull
cld
dec
ljmp
pop
dec
sub
xor
addl
lods
xor
xchg
out
fwait
mov
sahf
dec
movsb
sub
mov
je
jbe
xchg
or
sub
fstpl
add
popf
xor
cmp
sbb
xlat
sub
jge
cmp
mov
xor
dec
adc
mov
mov
xor
aad
dec
mull
push
push
xchg
mov
data16
lds
lea
sti
sub
xor
sbbb
insl
in
aad
fcmovnbe
aam
jae
and
mov
push
lret
gs
in
sbb
xchg
push
mov
cs
lods
addr16
pushf
dec
mov
bswap
lret
add
dec
outsl
cmp
aad
or
movsb
test
mov
shrb
adc
aas
mov
ds
gs
dec
sbb
imul
cwtl
lods
xchg
ljmp
push
push
mov
xor
cmp
dec
or
lds
popa
dec
pop
add
inc
mov
or
sub
mov
shll
roll
sbb
inc
js
clc
pusha
hlt
sahf
ja
jns
sub
add
jne
int3
inc
cmp
subl
mov
fwait
cwtl
pop
imull
push
add
in
imul
mov
imul
sbb
lock
scas
jbe
mov
out
insb
mov
mov
leave
inc
pop
mov
js
mov
dec
bound
movsl
xor
test
push
cmpsl
pop
mov
jg
clc
daa
daa
mov
pop
aad
lcall
sub
lahf
cmpsb
or
xchg
add
into
jbe
dec
fwait
shrb
mov
scas
mov
add
imul
add
sbb
lods
daa
push
sbb
cld
fstpt
jne
and
andl
sub
mov
rolb
mov
enter
push
adc
call
adc
shll
cmp
js
aas
xor
dec
pop
mov
push
icebp
addr16
shlb
aaa
cwtl
push
imul
mov
jmp
mov
sti
mov
mov
pop
and
dec
shll
jnp
inc
inc
sbb
pop
ds
nop
stc
popf
sbb
xchg
sub
movsb
jge
cmpsb
js
xchg
adc
dec
lret
mov
dec
sbb
cli
inc
in
ljmp
sub
arpl
pop
xchg
sub
lret
movsl
cmp
dec
fsubrs
scas
mov
push
cmpsb
sahf
test
push
push
jae
sub
cmp
jo
mov
popa
cmp
addr16
push
xchg
ja
mov
fucomip
bound
ds
repz
in
ret
ss
sub
xorl
jnp
movsl
mov
repz
sbb
sub
stc
or
pop
test
dec
and
dec
dec
popa
xor
mov
mov
in
arpl
cmp
add
ljmp
cmp
dec
sbb
cs
xchg
inc
movsl
xchg
jo
inc
sub
cmp
loope
pusha
fcoml
adc
out
xor
pusha
cmc
mov
jg
pop
scas
jno
or
cld
maskmovq
js
mov
cmp
mov
xchg
sub
out
addr16
jl
or
mov
push
mov
dec
pop
sbb
cmpsb
inc
int3
inc
bound
xchg
jnp
hlt
lock
icebp
push
sbb
fistps
xor
xor
gs
jmp
mov
insl
ds
lcall
cmp
dec
clc
aad
out
push
mov
leave
lods
mov
inc
mov
scas
nop
loopne
scas
test
jmp
imul
popf
add
fldcw
push
movsb
imul
ss
jns
cmpsl
leave
sahf
mov
cli
xor
xor
mov
and
mov
push
sahf
jb
xchg
mov
repz
jl
mov
loope
dec
cs
push
pop
lods
lods
inc
lcall
icebp
xchg
push
mov
and
adc
cwtl
loope
rep
push
inc
mov
icebp
sti
insb
lods
push
addr16
or
pusha
rcrb
movsb
stos
cltd
xchg
jp
mov
testl
ret
pop
sbb
dec
inc
and
sbb
mov
clc
incl
xor
jae
lret
pushf
xor
addr16
dec
sub
aaa
lea
shrb
pop
pushf
jb
mov
xor
daa
ja
int
jno
xorb
outsl
add
ret
sbb
idivb
ds
rcll
jno
jle
cmp
push
popf
test
cmp
cmp
mov
xchg
xor
imul
mov
push
mov
mov
jmp
xlat
incb
sbb
pop
bound
xchg
push
ffreep
aaa
mov
fbld
outsb
mov
adc
pushf
or
imul
adc
mov
xchg
sub
mov
mov
mov
xor
rol
mov
test
aam
or
rcrb
or
lea
fdivrl
inc
rcr
cltd
jnp
add
cs
xor
mov
aad
inc
mov
mov
cmpsl
lds
fxtract
jmp
repnz
in
cs
mov
and
pushf
dec
push
dec
fdivrp
out
in
cmp
inc
add
sti
mov
gs
or
daa
into
jne
lret
adcb
xor
mov
xchg
pop
push
out
or
cmpsl
inc
popf
cwtl
and
xchg
mov
mov
push
or
xor
xchg
outsb
mov
leave
out
push
jbe
pop
dec
gs
xor
insb
leave
jbe
out
inc
seto
pop
loop
inc
and
jo
jb
jmp
cs
lahf
idivl
mov
xchg
out
daa
or
jmp
mov
sahf
cmp
sbb
xor
lea
aad
xor
xchg
dec
xor
sub
roll
stos
and
aad
lret
nop
loop
push
add
add
dec
ss
cmc
pop
push
push
xor
std
cs
xor
icebp
clc
xor
inc
sbb
or
imul
popa
ja
popa
jle
lahf
sub
pop
fimull
repz
sbb
es
add
jae
xor
fadds
bound
cmpb
mov
push
pop
dec
and
popf
jbe
adc
add
outsb
mov
ret
mov
loop
ds
sti
insl
pop
hlt
xor
and
test
add
pop
sub
je
in
pop
and
or
mov
jae
pop
ret
xchg
sar
add
pop
scas
dec
cmp
mov
inc
or
shlb
cmp
lock
mov
dec
pop
cmp
mov
call
jle
sub
jnp
pop
ljmp
adc
dec
sbb
adc
or
repz
mov
in
sub
in
cmp
out
inc
popa
stc
sbb
fcomp
idiv
stos
mov
popf
mov
jno
mov
xchg
cmc
cmp
add
sbb
push
popf
push
cmc
fldcw
cmp
sbb
dec
or
stos
mov
dec
orl
adc
je
insl
hlt
gs
arpl
jnp
xchg
xchg
jnp
push
xchg
push
mov
and
mov
aas
inc
or
jnp
cmpsb
stc
movb
cmp
aas
ja
mov
push
adc
pop
sbb
jl
es
cmc
add
lds
invd
daa
out
xchg
imul
dec
dec
mov
push
pop
shl
leave
test
lret
mov
pushl
jle
push
loop
xchg
out
sub
inc
and
inc
rcl
loopne
dec
mov
test
mov
mov
sub
movsb
popa
mov
push
test
pushf
nop
lods
movsl
add
inc
mov
lcall
lret
int3
roll
divl
push
push
mov
js
pop
das
aas
loop
xchg
mov
movd
fcmovne
pop
nop
mov
mov
test
stos
push
ja
jb
pusha
mov
sbb
int
mov
imul
pop
lods
cli
fwait
dec
jecxz
mov
or
xlat
sub
mov
pop
xchg
jns
dec
pop
daa
mov
jg
push
xchg
cs
cmp
loope
and
dec
sub
arpl
dec
rcrl
dec
int3
sbb
test
cmp
gs
jo
adc
jbe
outsb
cmp
andb
xchg
xchg
inc
les
jle
pop
test
adcl
xchg
incl
test
xchg
pop
cwtl
jnp
jp
imul
rclb
mov
cmpsb
aam
mov
rorb
mov
aam
xlat
mov
cs
jecxz
push
push
ss
leave
dec
sbb
mov
es
add
into
sub
and
sti
xor
nop
inc
push
pop
sbb
add
popa
pop
mov
xchg
adc
jae
push
pop
movsb
std
lock
jmp
rcrb
stos
in
xor
adc
into
test
fildl
cmp
ds
fsubrs
add
mov
or
pop
push
jbe
xor
pop
xor
adc
imull
and
cmp
loopne
out
es
les
leave
pop
dec
mov
pop
jnp
pop
sti
and
gs
fcomps
int
aaa
insl
pop
sub
or
mov
lea
fcompl
faddl
mov
fwait
aad
imul
add
aas
icebp
add
data16
inc
fcomps
adc
inc
outsl
pop
loope
insb
fsubp
je
xchg
aas
jae
lds
pop
fucomp
ja
push
repnz
inc
mov
test
and
sti
jns
fucomp
jmp
cld
lods
inc
mov
mov
ja
aaa
aas
ret
int
or
sbb
sub
es
repnz
bound
xchg
sbb
push
xor
jns
ss
fildl
in
ja
inc
sti
cmp
xchg
jp
leave
loop
dec
jnp
pop
fcoms
mov
lods
dec
jns
fidivl
adc
call
imul
jmp
or
pop
mov
fldcw
mov
aam
mov
pop
shll
mov
inc
mov
jae
inc
les
mov
movsl
xchg
icebp
xchg
mov
aam
lahf
dec
pushf
repnz
insl
pop
adcb
out
or
jle
cmp
lods
mov
inc
ss
sti
outsb
decb
aam
es
xchg
imul
cmp
pop
cld
pop
orb
bound
fsubl
pop
iret
add
or
std
sub
insb
clc
aaa
out
push
fdivrl
adc
mov
das
sub
adc
cmpsl
add
mov
sub
xchg
int3
loop
mov
jbe
lods
mov
subl
movsl
mov
lods
xor
fimuls
into
jecxz
and
rcl
mov
xor
mov
fidivrl
cmpb
xlat
repz
push
jae
ss
mov
pushf
or
subb
cmpsl
jb
inc
andl
jo
enter
jo
in
testb
xchg
dec
rorl
lcall
cli
jbe
adc
int
fld
movsl
lfs
repnz
test
out
jae
push
test
jne
pop
xchg
sarl
cwtl
aas
sbb
pop
idivl
test
es
add
cli
in
pop
xchg
cmp
pop
lock
dec
pop
xchg
adc
dec
sarl
cmpsl
inc
fmuls
jle
out
std
lcall
fnsave
dec
fisubl
addr16
loop
cmc
pop
jbe
imul
rorb
mov
pop
ret
ss
pusha
lods
jmp
fnstsw
or
mov
and
mov
add
sub
in
or
in
aad
dec
jecxz
pushf
xlat
xchg
roll
xchg
ret
add
add
je
pusha
je
out
dec
jo
fldcw
in
sbb
xchg
xor
and
push
xor
scas
add
cmp
mov
xor
insl
xor
sti
push
shrb
xchg
pop
dec
rcll
mov
insb
iret
jae
fwait
dec
ret
rcl
push
enter
mov
jg
xor
frstor
neg
xchg
dec
cltd
fisttpll
stc
out
test
adc
shlb
mov
inc
cld
xor
leave
push
inc
sbb
pop
popa
fdivp
rcll
push
and
sbbl
cmp
sub
cltd
sarb
add
les
lods
xchg
testl
pop
pop
lods
inc
mov
mov
inc
sbb
push
gs
add
push
adc
test
adcl
fiaddl
pop
mov
and
orl
bound
mov
inc
jl
push
push
jno
cltd
adcb
outsl
clc
dec
scas
fisubrs
test
idiv
cmpsl
dec
loop
add
lock
mov
lcall
pop
push
je
mov
xchg
mov
pushf
mov
ret
outsl
sbb
mov
sub
outsb
bound
mov
addr16
sbb
xchg
cld
cwtl
ds
cltd
orb
call
mov
mov
xor
popa
dec
dec
jg
adc
inc
rorl
sti
mov
or
and
inc
adc
mov
mov
leave
mov
push
out
addr16
nop
xchg
roll
push
jmp
xchg
mov
test
pop
or
scas
aam
mov
jl
testl
jnp
in
pop
shrb
sbb
fwait
imull
mov
xchg
mov
and
adc
rorb
cmp
int3
scas
in
xor
dec
mov
pop
gs
sub
imul
lret
fs
shlb
shlb
and
pop
adc
mov
std
push
out
repnz
fnstsw
pop
push
mov
add
pop
fsubrl
sub
adc
or
add
push
enter
movsb
xor
stos
iret
mov
or
adc
scas
and
loopne
mov
inc
xor
movsl
cmpsb
cmpsl
out
cwtl
das
cmp
sbb
push
mov
mov
enter
dec
inc
hlt
xchg
movsl
xor
xchg
bound
xchg
jp
nop
out
xor
xor
inc
and
lahf
popf
jle
cmp
xchg
mov
cmc
xchg
inc
test
sub
stos
inc
and
pop
mov
loope
pop
xchg
incl
sbb
adc
enter
pusha
sbb
mov
xor
xchg
mov
test
repz
pop
push
add
xchg
inc
dec
and
add
stos
adc
mov
push
sbb
jecxz
xchg
jecxz
xchg
scas
pusha
int
clc
je
mov
dec
sbb
cwtl
add
sub
xchg
pusha
jecxz
cmp
mov
lea
lret
into
les
ss
and
das
cltd
popa
lock
mov
loope
jnp
outsl
jle
icebp
adc
mov
and
sub
mov
cmp
dec
xor
cmpsl
xlat
jns
shrl
mov
cmp
shl
push
test
sub
mov
adc
xchg
push
jmp
add
mov
push
cld
inc
add
lods
and
jo
pop
test
fnstcw
add
in
sbb
iret
xor
mov
mov
pop
jae
cmp
mov
out
sahf
cmp
mov
xchg
xchg
xor
into
mov
je
hlt
cmp
inc
aaa
jbe
jne
popa
ljmp
icebp
mov
mov
jbe
pop
cmp
sbb
mov
jb
ret
addr16
xor
cmp
push
inc
and
dec
jecxz
out
in
mov
sub
xchg
mov
mov
iret
mov
testl
jno
out
cmp
cmp
push
cli
xor
jp
loop
jbe
pop
xor
add
jo
add
jp
addr16
aam
pop
mov
cmp
jp
imul
int3
sbb
iret
push
das
jmp
mov
dec
jle
cli
fnstcw
sub
dec
mov
popf
push
les
push
lcall
ja
stos
push
in
leave
test
cmp
outsb
inc
shrb
xchg
clc
int3
jo
add
push
xor
jge
inc
ja
push
jbe
adc
mov
sar
ds
mov
bound
push
pop
fnstenv
push
push
add
clc
push
mov
xchg
movsb
insl
mov
inc
bndstx
pop
pop
push
push
mov
jp
dec
inc
test
jae
push
or
cld
jge
iret
jmp
pop
rcl
push
int3
loop
fdivs
jb
sbb
orb
lahf
rorb
subb
jnp
es
loop
mov
insl
in
mov
insb
adc
or
sbb
cmp
loopne
icebp
sbb
movsl
rcrl
faddl
push
and
fnstsw
daa
stos
dec
stc
xchg
sub
add
insl
jae
pop
push
xchg
fldcw
sbb
sbb
and
hlt
pop
or
fildll
cld
sbb
jge
mov
repz
or
mov
lods
push
jnp
cmp
sub
dec
out
ret
mov
and
cmp
lahf
jge
push
xchg
in
into
xchg
xchg
clc
inc
jno
pop
jg
aas
rcrb
or
mov
cmc
inc
cmp
mov
imul
sti
stos
jns
das
lds
rolb
out
cwtl
aad
outsl
inc
fcoml
lods
jle
adc
aam
nop
adc
xchg
cld
les
loope
aad
jl
bswap
sbbb
test
clc
movsb
andl
ds
jae
in
jnp
outsb
loope
cltd
mov
test
add
lcall
pushf
int
pop
nop
in
lods
jmp
jmp
fistps
aas
test
or
jbe
roll
pop
adc
add
std
fildll
out
ss
dec
sahf
sbb
cmpsl
push
pop
mov
in
int
lahf
pusha
mov
sbbb
mov
dec
aad
jae
icebp
aam
or
push
sbb
inc
push
mov
mov
xchg
adc
das
push
pop
lea
or
test
test
sub
xor
outsb
fiaddl
mov
test
fisubrs
jp
loop
mov
ss
sbb
push
add
lahf
mov
lds
cmpsl
xor
pusha
dec
fmull
adc
enter
dec
cmpsl
jno
and
ficomps
fwait
insb
stc
jge
lock
out
sub
stos
shlb
shlb
xor
out
xor
mov
mov
adcl
mov
test
mov
das
insl
arpl
cmpsb
sbb
mov
ljmp
mov
push
imul
in
in
dec
roll
push
movzbl
push
jnp
mov
lret
pop
jmp
mov
cmp
inc
xchg
out
insb
inc
jo
jp
loope
movsb
addb
rclb
fcomps
je
cltd
cmp
daa
sub
cmp
sbb
pop
inc
sbb
lock
inc
inc
ds
jecxz
add
into
scas
gs
xchg
adc
dec
out
pop
pop
jecxz
repz
ja
cwtl
in
add
pusha
stc
cmp
cwtl
mov
push
mov
ss
mov
fldcw
sub
pushf
or
xor
sar
or
dec
inc
push
shrl
pop
stos
das
pop
int
cli
ss
cmpsb
cld
lret
cmp
sarb
out
loop
cmc
cmp
sbb
sbbb
inc
mov
pop
ljmp
ds
imul
inc
xlat
clc
push
sbb
scas
repz
lahf
pop
or
stos
test
mov
cmp
xor
insb
xor
fisttps
adc
jmp
test
fwait
jno
popf
mov
cld
shrl
xor
call
loope
mov
mov
push
jecxz
mov
loopne
and
dec
stos
jbe
mov
mov
pushf
dec
daa
imul
jnp
add
fnsetpm(287
pop
jg
sub
daa
cmpsl
add
or
or
sbb
pop
mov
dec
and
lret
mov
pushf
js
dec
inc
hlt
sub
xor
cmc
fs
mov
inc
jbe
inc
mov
dec
xchg
jge
ror
mov
aas
jno
stc
pusha
fcomip
adc
dec
mov
dec
sbb
inc
adc
sub
add
and
mov
out
movsb
rcll
cmp
mov
or
jg
lret
icebp
je
pop
rol
aam
dec
pop
mov
and
fcmovne
ja
lret
sub
or
mov
rcrl
in
dec
inc
ljmp
add
mov
int
das
pop
outsb
out
sahf
push
pop
rcrl
fidivl
aad
xchg
sub
roll
out
mov
sub
lods
in
insb
pop
or
in
in
and
mov
in
dec
fistps
xchg
std
fadd
mov
sub
hlt
xabort
in
ret
inc
mov
testb
mov
xorl
adc
xchg
jmp
in
fsts
xchg
dec
push
test
mov
imul
call
fimuls
mov
mov
ss
scas
mov
mov
pop
inc
call
jge
inc
ffreep
xchg
out
sub
mov
mov
jb
mov
lcall
mov
in
cmp
mov
bnd
xor
mov
xor
xor
sbb
andl
outsl
subl
mov
jecxz
mov
std
fcomip
jns
push
mov
push
dec
clc
xor
jmp
out
int3
dec
mov
ljmp
fs
sarb
imul
sub
stos
mov
adc
push
pop
fimull
inc
mov
daa
sbb
sbb
mov
adc
cld
dec
ss
push
lcall
fistpl
psllq
aaa
add
in
xor
push
fstl
js
sub
adc
fcomps
fcomip
jae
pop
loop
fmull
mov
pop
dec
hlt
jmp
dec
sub
and
and
adc
dec
dec
enter
es
pop
jo
mov
sbb
lds
loope
pop
dec
dec
sbbb
std
mov
lret
out
sbb
push
shrb
cmp
out
mov
flds
into
inc
pop
mov
xor
pushf
pop
xor
in
cmp
icebp
and
into
leave
mov
and
mov
xlat
lock
push
aaa
popf
push
jbe
out
or
stc
nop
out
lcall
hlt
rorl
or
bound
enter
sub
divb
jnp
imul
call
add
xchg
mov
shlb
fdivp
inc
icebp
cmpsl
xorb
adc
into
mov
xor
icebp
adcl
inc
mov
xor
mov
shlb
xchg
dec
jg
ss
pop
fistpl
stos
sbb
xchg
scas
inc
ficomps
mov
aaa
fimull
push
xchg
into
add
mov
in
push
push
dec
push
adc
cmp
mov
cmpsb
js
aas
jg
ljmp
loopne
adc
mov
out
shrb
dec
gs
popf
xchg
adc
add
addr16
cmpb
adc
bound
cmp
mov
pop
and
push
sbb
add
addr16
iret
sub
push
stos
adc
es
cmp
cli
mov
xor
call
dec
pop
sub
mov
rolb
das
stos
adc
mov
subl
cmpsl
jne
pop
pusha
pushl
cmp
test
add
sub
jno
and
mov
scas
pushf
jg
cmpsb
popf
out
and
adc
dec
cmp
xchg
or
cmp
lret
inc
sub
mov
or
in
or
in
add
ret
cmp
in
ljmp
icebp
addl
cmp
or
fisttps
in
pop
cli
imul
fucomip
stc
add
and
loopne
out
mov
and
mov
cs
clc
cs
lahf
mov
add
xchg
mov
inc
or
inc
aas
pushf
xor
jno
je
inc
dec
jns
push
sub
jl
xor
pop
hlt
or
fbld
enter
xlat
out
aam
cs
dec
add
cli
push
divl
scas
dec
mov
cltd
in
xor
mov
mov
test
cmpsb
and
ror
mov
test
cli
push
mov
sub
mov
fadd
lds
insl
mov
xchg
xchg
loopne
aaa
pop
imul
scas
scas
lret
mov
push
mov
mov
pop
mov
mov
in
aaa
std
hlt
sub
jge
jl
push
je
cmp
les
mov
into
loopne
adc
mov
and
movsl
and
out
dec
outsb
push
outsl
cmpsb
and
fidivs
mov
and
in
shll
adc
lock
sub
sub
cmpsb
cld
xchg
sub
fidivl
mov
adc
or
pop
push
adc
das
lahf
fistps
mov
xchg
sub
mov
je
cmp
mov
gs
jmp
cmpb
add
xchg
fdivrs
rcll
adc
sbb
shl
mov
push
test
pop
jecxz
sub
jg
push
lock
loopne
lds
in
mov
jge
adc
pop
fwait
jmp
xchg
leave
sbb
adc
test
sbb
or
push
push
cld
jno
lea
daa
movsl
in
leave
lea
loop
clc
popa
mov
mov
insl
mov
lret
or
insl
mov
movsb
cmpsl
inc
add
orl
ds
frstor
pop
push
loope
lods
cmovns
cmp
adc
verw
cmp
inc
insl
cmc
notl
arpl
fstl
inc
pop
das
mov
shll
notb
fs
push
pop
out
iret
xchg
xor
lcall
hlt
pop
and
sub
ljmp
sarb
iret
aaa
mov
jmp
scas
insl
cmp
jbe
testl
scas
jbe
nop
cwtl
aad
popf
sub
jb
cmp
scas
fstpt
test
sbb
insl
daa
cmp
enter
bnd
sbb
shl
or
inc
scas
das
jp
out
mov
test
sub
sub
test
hlt
fcmove
movsb
movsl
cmc
xchg
cmpsl
scas
mov
mov
pushl
or
rol
and
lods
jmp
shl
out
xor
js
jmp
mov
cmp
mov
jne
imul
stos
insl
inc
xor
xchg
xor
adc
outsb
inc
out
push
outsl
jge
mov
lock
cmpsb
out
fcompl
dec
push
ss
sub
jl
mov
pop
push
pop
xor
mov
mov
sub
test
jae
mov
dec
lock
add
jmp
jnp
pop
insb
les
xor
cmp
cli
xchg
dec
cwtl
pop
sub
xchg
mov
call
shrl
je
xchg
out
dec
pop
dec
cmp
add
mov
pop
pop
out
sub
int
cld
push
push
dec
scas
and
divb
xor
arpl
dec
cmc
stos
xor
inc
and
movsb
out
push
loope
push
xchg
sbb
inc
sub
mov
mov
pop
adc
leave
push
mov
addr16
mov
cs
jbe
mov
fmull
jno
push
adc
jmp
mov
and
insb
lods
in
test
inc
jne
adc
sti
sub
lods
daa
repnz
sahf
insb
or
call
jo
sub
popa
pop
sub
fistpll
lds
popf
sub
sbb
setno
mov
shll
sub
imul
lds
xchg
bound
mov
cwtl
imul
stos
cli
nop
inc
jnp
xchg
fistl
adc
pop
jbe
xlat
cld
inc
sarb
sub
sbbb
vandnps
inc
xchg
dec
ret
or
repz
sub
xlat
jecxz
sbb
ret
jo
fcmovb
sub
xchg
pop
cmp
insb
test
xor
lods
xchg
sbb
popf
jb
shr
push
cld
in
aad
push
sbb
roll
insb
incb
mulb
mov
gs
imul
ljmp
aam
xor
xchg
inc
push
hlt
out
sub
sbb
ss
lods
dec
clc
cmp
out
mov
jge
cld
xchg
xchg
lcall
idivl
icebp
jns
mov
lcall
push
cmc
in
stos
scas
jae
pop
into
shrb
pop
push
lods
sbb
fdivrs
sbb
mov
pusha
insb
dec
pop
cwtl
fbld
xor
and
outsl
jo
jno
test
xchg
mov
adc
popf
jp
adc
xlat
imul
ret
scas
xor
or
and
mov
and
pop
leave
xchg
jmp
cmp
mov
xor
movsb
sub
cmp
lods
adc
loope
jmp
fstpl
je
sahf
aad
sbb
sbb
adc
popa
rorl
or
in
and
outsb
call
into
jbe
or
inc
pop
imul
and
xchg
xor
out
ljmp
mov
xlat
imul
lea
mov
xchg
sbb
outsb
pop
dec
rcl
dec
lret
idivl
xchg
mov
xchg
xchg
and
add
sub
xor
push
add
inc
mov
pop
fcoml
sbb
adc
lods
out
cmpsl
jl
mov
aad
dec
mov
lds
in
outsl
mov
mov
push
inc
insb
and
rcrb
stc
pop
cmp
push
cld
mov
aad
jmp
and
xchg
scas
xor
cmp
js
out
cmp
push
cmp
jno
mov
shrl
push
xchg
lret
or
xor
adc
leave
pop
aad
sub
nop
shl
stos
sbb
sub
push
mov
dec
cmp
ss
addr16
jns
mov
fs
sbb
loope
pop
jbe
adcb
xchg
icebp
shlb
mov
pusha
out
les
pop
leave
movb
test
push
test
fwait
mov
add
sub
pop
stc
lods
mov
dec
pop
ljmp
pop
sahf
push
xor
cmpb
dec
icebp
dec
xchg
mov
sub
lcall
push
push
fisubs
xchg
pop
push
stos
push
into
std
clc
xor
mov
pusha
sub
mov
or
sub
ljmp
lret
dec
mov
loopne
push
ds
pop
or
shlb
lret
stos
cmp
cwtl
mov
xchg
fucom
pop
dec
testb
cmc
mov
mov
add
mov
fnstsw
xchg
nop
pop
mov
pop
dec
dec
xor
xlat
cmpsl
popf
pop
lret
push
pop
or
addr16
orb
push
stc
and
add
fs
ds
mov
add
je
imul
adc
sbb
repz
mov
ja
test
int
popf
rclb
out
push
mov
sbb
shlb
divb
cli
inc
jns
sbb
aad
scas
data16
and
push
es
mov
or
fs
cmpsl
les
add
es
stos
push
cmp
xlat
push
pop
and
sub
and
mov
jne
roll
push
arpl
orl
push
pop
mov
dec
lret
and
inc
sub
pop
pop
xor
lds
fcomps
cld
sub
push
sub
jmp
cltd
jnp
cmp
cmpsl
mov
pop
sub
push
cs
outsb
jl
and
jbe
push
xlat
lahf
lret
shl
inc
out
jp
dec
xchg
cli
xchg
sbb
je
adc
lods
inc
lcall
inc
mov
push
xorb
push
iret
into
add
aaa
mov
mov
outsb
repz
add
dec
or
dec
push
stos
mov
pushf
lods
cli
mov
push
and
jle
mov
sbb
jmp
pop
adcb
adc
dec
mov
jge
inc
es
stos
cmp
xchg
jl
jo
and
lds
xor
lcall
daa
or
divl
adc
fs
pop
pop
ja
fisubl
push
bswap
std
sbb
sbb
or
loope
rcrl
fstps
fisttpll
cmp
sbb
out
sti
cmp
cli
insb
sahf
pop
test
mov
out
fwait
pop
mov
fs
cmp
lock
fwait
aam
bnd
mov
fsubrs
jecxz
mov
sbb
or
ret
inc
xchg
mov
sub
pop
fstps
lret
jge
shrl
xor
lahf
filds
and
xor
std
loopne
in
mov
icebp
iret
test
mov
cmp
fistpll
cs
mov
jg
lcall
jle
or
xor
ret
mov
inc
mov
das
stos
cwtl
mov
mov
sub
mov
push
xchg
inc
repnz
ss
pop
ss
vmovups
jmp
cltd
mov
mov
in
pusha
dec
ds
xor
push
popa
lgdtl
dec
loope
adc
mull
inc
xchg
popa
ds
push
push
and
jne
out
gs
lcall
enter
mov
loop
cmpsb
pusha
adc
jb
mov
jle
lea
sub
fsub
mov
mov
mov
enter
cli
xchg
insl
pop
sub
mov
iret
pop
lcall
call
lods
dec
insb
mov
lret
sarb
data16
sbb
add
add
xor
sub
sarl
jmp
dec
cmp
fimuls
insl
movsl
lahf
lea
sar
mov
mov
pusha
fdiv
add
fistpll
rcr
pop
stos
mov
inc
jnp
add
push
insb
pop
cmc
in
jne
in
pushf
cli
lcall
clc
pop
or
imul
std
pop
mov
sub
int3
cmpsb
iret
js
nop
divl
mov
das
sub
and
dec
push
cmp
test
lea
jno,pn
or
pop
mov
xchg
sub
push
cwtl
push
mov
dec
hlt
fs
inc
mov
arpl
sbb
sahf
add
fwait
sub
int
xor
fmull
cmpsl
and
aaa
cmp
jb
adc
loope
fcmovu
gs
rcll
push
ss
pop
js
mov
imul
add
sbb
movsl
push
leave
push
or
push
add
jle
cwtl
fnstcw
enter
mov
in
lcall
loop
cmp
pop
xlat
cmp
orl
js
outsb
push
inc
jg
xchg
fildl
mov
inc
enter
cli
push
out
mov
mov
mov
xor
add
leave
inc
mov
fwait
push
pop
mov
cmp
push
jmp
xchg
cmpsb
and
mov
xor
daa
sub
jo
push
popf
mov
std
test
insb
mov
es
push
imul
lret
or
jbe
jl
and
mov
pop
push
adc
ds
and
or
mov
push
clc
roll
pop
lods
dec
or
mov
dec
xor
in
mov
pxor
sbb
cmp
mov
aam
rol
out
add
sahf
int3
sbb
out
ret
aaa
stc
sub
arpl
gs
sub
mov
sahf
dec
fbstp
loopne
mov
jp
inc
insb
adc
cmp
or
mov
cltd
xchg
and
inc
jl
das
fwait
jnp
fdivl
mov
pop
sbb
hlt
jg
pop
mov
pusha
fstps
push
sbb
or
mov
cmp
icebp
lds
push
aas
dec
mov
mov
fwait
sbb
adc
add
sbbb
jle
xor
out
stos
inc
repnz
call
in
ss
inc
mov
push
cltd
sbb
mov
add
lret
add
int
test
mov
adc
xor
pushf
add
adc
mov
ljmp
movsb
mov
mov
sbb
and
jo
insl
into
fmuls
mov
xor
or
leave
and
pop
out
leave
daa
test
jle
out
aam
jle
adc
jne
imul
cmp
inc
push
xchg
leave
pop
out
repz
sub
lahf
cmp
or
scas
add
xor
jb
popl
fwait
xlat
xchg
fbstp
aas
movsl
out
jne
fwait
jl
sbb
out
cli
lret
andb
mov
xchg
xor
sub
dec
xchg
sbb
jno
sbbb
outsb
dec
jecxz
fildll
xor
add
icebp
pop
sahf
jle
xor
pushf
cmp
mov
xchg
bound
push
pusha
lret
mov
cli
and
out
xchg
sbb
dec
ret
inc
addl
sahf
cwtl
fbstp
rcll
jge
notl
inc
cwtl
add
and
nop
lcall
fidivrl
cmpsl
inc
test
mov
mov
or
jnp
jle
cmpsb
test
out
imul
lods
mov
mov
inc
sub
push
dec
sbb
fistl
pop
sahf
fldt
imul
dec
bound
mov
rclb
es
push
jge
int
sub
jne
mov
xchg
sarl
clc
ret
sahf
adc
sbb
mov
ja
sub
loopne
sub
add
push
jmp
jno
sti
shlb
mov
push
sbb
sub
gs
push
nop
dec
jecxz
mov
fwait
fdivr
mov
mov
cmpb
sbb
mov
test
inc
pop
sub
mov
pop
xor
sub
repnz
jle
xor
das
push
mov
rcl
pop
adc
dec
inc
jnp
sbb
jbe
mov
icebp
outsl
inc
jp
xchg
ss
inc
adc
pop
subl
shr
andb
aad
das
ss
sti
or
cmc
add
dec
daa
lahf
mov
cmp
icebp
shlb
xchg
pushf
add
cltd
ljmp
push
mov
in
jb
lcall
fnsetpm(287
icebp
test
xor
inc
cmp
popa
mov
dec
icebp
mov
outsb
shrb
push
popf
test
cmpl
jecxz
inc
subl
pop
and
aaa
js
ds
jns
lock
dec
inc
sar
mov
gs
aam
aam
lea
jae
aam
ficomps
fnstcw
ljmp
arpl
xchg
push
xor
dec
aas
daa
jge
sub
sbb
xchg
jbe
mov
sub
jno
cmpsl
out
insl
mov
fucomi
cmp
xchg
add
in
cmp
cmp
push
jmp
dec
jnp
stos
push
lock
sub
inc
mov
xchg
or
addr16
call
jo
fsincos
cmp
dec
sub
jle
jl
fsubr
xor
mov
cmp
jnp
bound
xor
movsb
test
mov
sahf
cli
cmp
or
jns
and
mov
xchg
enter
mov
push
mov
jle
rcll
bound
sub
lods
enter
mov
push
dec
idivb
int3
dec
pop
or
sub
add
mov
rorl
mov
negl
inc
fistpll
push
fs
sbb
cmc
cwtl
jo
mov
subl
mov
roll
and
xor
rclb
jo
nop
pop
jecxz
lahf
dec
dec
mov
xor
add
sbb
sbbb
add
out
je
aaa
mov
push
adc
ljmp
jg
inc
adc
js
xchg
sub
or
pop
inc
notl
inc
xor
pop
in
imul
lds
lahf
fsubr
jns
jb
xor
pop
adc
dec
push
sbb
xor
jl
loop
ljmp
cmpsl
loope
fdivs
cmpsb
and
pop
push
push
mov
add
in
in
ret
rcr
movsl
mov
add
popf
enter
jno
aam
mov
push
adc
daa
popa
cmp
jo
repz
cmc
and
mov
dec
or
js
dec
jl
cld
les
pop
lea
imul
leave
loope
mov
dec
adc
dec
dec
ljmp
xchg
fwait
jo
mov
out
test
xchg
pop
xchg
xchg
inc
mov
lea
scas
shrl
dec
xchg
xchg
sti
mov
popa
jmp
jl
jp
dec
cmp
push
sti
sub
ljmp
cmpsb
jae
jle
popf
cmc
rcll
inc
mov
mov
data16
push
imul
mov
jmp
or
clc
scas
push
sahf
daa
lock
cltd
cltd
or
pop
mov
lock
mov
es
ds
cs
and
and
test
mov
in
pop
add
dec
push
aaa
loope
sbb
push
xchg
pop
inc
xchg
adc
jecxz
stos
jo
inc
rcll
mov
inc
pop
mov
jle
add
jmp
repnz
lret
in
repnz
dec
pusha
xor
sub
and
test
mov
mov
clc
add
dec
shrb
add
mov
sub
in
or
popf
jbe
and
sub
int3
pushf
ljmp
stc
test
adc
sub
call
out
outsl
out
loopne
mov
pop
mov
or
dec
int
jae
test
stos
inc
test
mov
hlt
aam
or
aas
jl
add
push
dec
sbb
or
lret
sbb
adc
sub
inc
mov
and
hlt
or
cmp
xorl
cltd
sbb
push
pop
adc
aad
add
ret
xor
and
xchg
add
call
lock
inc
lahf
cmp
adc
rolb
adcb
aaa
pop
pop
cld
pusha
dec
in
jnp
aad
dec
jo
or
xchg
aad
mov
jnp
sbb
clc
push
loope
jmp
fadd
pusha
scas
dec
push
aad
mov
loope
shrb
in
das
cmp
ds
test
loope
hlt
movsb
lods
mov
xchg
ret
adc
addr16
fimuls
mov
fs
adc
in
ljmp
out
aaa
xchg
outsl
push
insl
les
add
je
push
mov
aas
lea
std
push
mov
mov
jo
popf
mov
insl
xchg
xlat
add
fistl
je
and
dec
lcall
push
sahf
pop
pop
mov
xchg
out
push
xor
ss
call
cmc
enter
xchg
mov
imul
mov
push
sub
jmp
jecxz
insb
add
shlb
popf
in
xor
add
pop
iret
add
xlat
lahf
loop
pop
std
ds
daa
mov
addb
sbb
insl
incb
cmp
push
mov
pop
push
mov
mov
aas
and
in
fcompl
sahf
mov
push
pop
push
push
jo
sti
bnd
jne
ja
add
fnsave
outsb
pop
pop
leave
in
inc
cmp
or
rcl
cmpsb
sbb
mov
fs
mov
push
mov
cmpl
pop
sbbl
xchg
mov
xlat
push
push
cwtl
add
cli
push
mov
pop
call
fildll
les
xchg
sub
cmp
mov
mov
dec
test
push
sub
lar
or
pop
sbb
out
icebp
decb
stos
push
sbb
adc
xchg
das
push
push
ss
jnp
dec
push
lea
add
or
push
add
xor
and
int
cmp
push
xor
push
shlb
mov
fs
repnz
outsb
out
push
fisubl
in
pop
daa
jb
dec
neg
push
cld
outsb
adc
loop
ficomps
push
mov
or
cmpsb
sbb
popf
cmpsb
pop
in
and
mov
fcmovnbe
fs
in
push
fcmovnu
negl
scas
push
fs
inc
adc
mov
jp
sub
popf
mov
aas
test
cli
cmpsl
iret
lahf
pusha
std
sbb
push
pushf
mov
add
repnz
loope
lea
push
add
pop
push
and
pop
mov
cmpsb
mov
push
jmp
repz
out
cltd
and
and
sub
repz
push
test
cmpsl
jp
sub
das
pop
mov
outsb
test
scas
mov
mov
xchg
push
sbb
push
and
push
mov
jnp
int
les
fs
les
adc
mov
jns
into
jno
adc
dec
stc
and
imul
push
div
mov
popf
and
jo
sbb
fadd
shll
jl
rcll
movsl
nop
inc
pop
cmp
ret
lret
cmp
mov
pop
cwtl
test
fldcw
pop
push
inc
xlat
mov
jg
fmull
cmpsb
mov
xchg
arpl
test
fsubrl
push
cmc
mov
js
loopne
push
mov
rorl
mov
ret
fsubrs
pop
mov
lock
in
xor
ret
hlt
cli
imul
add
add
in
lcall
imul
sti
sbb
in
jbe
jns
popa
jmp
pop
and
adc
fsin
mov
cs
cwtl
xor
mov
mov
dec
movsl
bswap
aam
lcall
cmpsb
mov
outsl
dec
cmpsl
pop
repz
test
sti
sub
lds
rcrl
push
in
pop
add
xor
mov
push
dec
pop
push
jne
sub
stos
lahf
mov
lret
sbbl
addr16
lcall
and
stos
pop
fisttpll
xor
scas
push
adc
mov
addb
jae
mov
add
cmp
pop
mov
scas
lret
pop
add
test
gs
sbb
inc
cld
dec
add
push
dec
mov
add
jge
scas
sahf
in
pop
clc
sub
fisubl
mov
lea
es
sub
pop
call
xor
sbb
jns
xchg
push
dec
adc
in
cmp
imul
cmp
xchg
jg
jl
mov
orb
inc
and
mov
inc
or
shlb
xchg
add
fdivs
dec
mov
icebp
ret
dec
mov
push
icebp
add
vunpckhps
scas
test
cmp
adc
call
fs
or
mov
stc
sub
pop
and
shll
fildll
mov
cmpsl
aad
xlat
push
notb
out
inc
movsb
es
movsl
pop
mov
xchg
and
test
das
or
jb
sbb
mov
mov
inc
mov
dec
out
xor
test
flds
jle
jne
incl
inc
insb
dec
push
out
cwtl
stos
mov
rolb
dec
inc
jge
call
pop
stc
cmp
aad
out
fidivrl
add
sub
mov
sbb
or
cmpsl
fistpl
mov
out
lcall
je
out
subb
xchg
pushf
push
cmpsb
ds
adc
xor
aam
fwait
mov
data16
mov
xchg
jne
popa
inc
shlb
dec
sub
cmpsl
les
fcmovu
test
ds
push
cli
xchg
adc
ret
inc
out
outsl
cmpsb
jp
jg
dec
rcr
rorl
dec
das
js
test
repnz
jecxz
push
and
adc
vpaddb
xchg
and
adc
ret
inc
mov
xchg
mov
dec
imul
inc
rol
sub
js
adc
jl
fucom
inc
sbb
push
dec
and
cli
lret
pop
xlat
pop
cmp
lods
loope
push
popa
dec
jge
inc
cmc
in
mov
and
ret
loopne
repnz
push
ljmp
pushf
jmp
pop
mov
int3
jno
sbb
dec
sub
ss
aam
and
jg
and
sbb
jns
pop
mov
int3
leave
dec
sbb
xchg
icebp
sbb
cltd
sbb
popa
xchg
jae
pop
cwtl
xchg
insb
dec
mov
pop
xchg
outsl
mov
daa
daa
scas
push
testb
add
adc
and
mov
jp
or
dec
adc
sub
jno
es
cmp
test
add
xlat
das
sub
addl
mov
ret
add
push
xchg
xchg
outsb
std
idivl
mov
add
aas
mov
xor
mov
jp
int
cmp
fwait
cltd
addr16
je
sar
addr16
adc
stos
cmpsb
outsb
shll
out
int3
ret
cs
icebp
aaa
sbb
outsb
jb
pop
jae
cmp
pop
pop
scas
inc
mul
shll
insb
out
orb
cmpsb
cld
push
mov
add
push
push
inc
mov
stos
outsb
pusha
push
jne
leave
mov
mov
xchg
mov
dec
cwtl
dec
bound
loop
scas
scas
adc
cltd
loopne
cmp
aad
cmp
dec
xchg
jne
out
jecxz
push
pop
sub
lahf
lock
and
inc
pop
or
xlat
push
shl
leave
pop
lea
cmpsb
mov
or
leave
pop
test
xchg
test
loopne
xchg
aam
outsb
std
or
push
out
in
fstpt
loopne
or
ficoml
adc
jnp
popf
out
iret
ret
and
or
sbb
sbb
adc
mov
cli
mov
insl
xchg
ret
push
push
mov
pop
aam
rcrl
xchg
mov
scas
push
cmp
mov
mov
ret
fcompl
sbb
pop
arpl
cmp
mov
sub
pop
mov
sbb
xchg
mov
jnp
repnz
pushf
mov
or
dec
pusha
mov
outsl
or
adc
jne
cmpsb
push
dec
sub
nop
sbb
loop
popa
repnz
pop
inc
cld
insb
js
addr16
cmp
sbb
push
cmpsl
test
mov
in
sub
jae
in
pop
sbb
mov
pop
stc
mov
setne
xor
jp
fsts
xor
loop
mov
iret
xchg
pop
pop
dec
pop
xor
pop
pop
sub
leave
call
outsb
inc
dec
out
wrmsr
in
fmull
add
xor
pop
and
test
adc
and
adc
std
aad
adc
mov
movl
shrl
stc
mov
jno
adc
movsl
dec
lock
and
imul
repnz
repnz
add
cmpsl
dec
fisubl
repz
out
mov
inc
dec
cltd
xchg
nop
jb
int3
lahf
jp
in
cld
pop
aad
cmpsb
lret
aam
ljmp
arpl
fimull
and
pop
cld
push
ljmp
repz
loop
loop
mov
xor
cmp
cwtl
enter
pop
fldl
lcall
loop
mov
rcr
repz
ja
aaa
sbb
sbb
mov
nop
mov
sbb
movsl
stc
dec
movsl
sub
dec
sub
mov
xor
rorb
push
repz
cmpsl
mov
mov
xchg
inc
jg
and
loopne
pop
adc
loopne
xor
test
fbstp
nop
cld
fldt
fsubrl
sub
cmp
repz
lcall
out
nop
xchg
pop
or
xor
xor
xor
sbb
subl
dec
sub
dec
xor
push
or
sbb
movsl
cmp
jmp
loope
pop
mov
pop
enter
push
or
sub
std
mov
adc
cwtl
cld
jno
pop
subl
mov
jp
or
xchg
rclb
add
rolb
xchg
fldt
stos
fwait
ret
inc
and
cltd
mov
pop
mov
jg
push
and
mov
inc
lds
popf
out
fs
and
cmc
sbb
cmp
addl
fs
mov
fwait
mov
test
das
js
ret
int
ljmp
mov
xor
xor
sub
or
or
push
shlb
imulb
arpl
imul
lock
popf
push
jno,pn
bound
andl
mov
xchg
jbe
sbbl
jb
lods
es
loope
nop
jns
hlt
xlat
cltd
iretw
aas
mov
or
or
adc
jne
xor
inc
les
aam
pop
idiv
inc
dec
mov
inc
adc
xchg
dec
out
rol
scas
push
cmp
xchg
ja
rcrb
mov
jns
sub
lahf
les
mov
outsl
sbb
cmpsb
pop
jb
adc
mov
arpl
cli
mov
fninit
jo
jo
add
xor
rol
or
lods
rcrb
pop
sub
jg
loope
xorl
loope
setp
sti
adc
pushf
stc
add
cwtl
outsl
outsl
rol
push
je
in
das
cld
dec
mov
leave
outsb
add
daa
stos
cli
scas
adc
mov
das
xchg
movsl
push
ret
adc
xchg
xor
inc
pusha
pop
je
jle
adc
xchg
pop
jb
cld
sti
in
out
call
inc
sbb
mov
mov
lea
cs
xor
cmp
loope
outsb
andl
jmp
jge
decl
addb
add
sub
mov
sbb
dec
pop
inc
es
xchg
shlb
adc
adc
lock
dec
sub
and
mov
in
sub
xor
pop
pop
xchg
rol
aad
ds
xchg
lds
mov
out
insb
jbe
outsb
add
lds
jns
mov
mov
mov
aam
cmp
mov
jle
jmp
mov
bnd
mov
or
loopne
rolb
cmp
pushf
jnp
sbb
or
dec
sbb
data16
gs
cwtl
sti
sub
and
jecxz
sub
cmp
mov
sub
mov
pop
popa
mov
jg
fs
cs
getsec
stos
sbb
pop
cmpsb
jmp
js
mov
inc
fsubp
sbb
pushl
cmp
or
sbb
fldenv
inc
xor
scas
test
cmpsb
jnp
push
lds
sbb
addr16
lods
ja
rclb
ja
and
fnstsw
fmull
mov
jbe
push
jae
subl
pop
mov
fwait
xor
cwtl
cmp
cmp
sbb
shr
pop
jge
xchg
test
mov
mov
add
mov
pop
mov
cmp
jge
shl
fdivr
adc
xchg
outsb
ljmp
jnp
mov
pop
sub
in
push
nop
seta
jnp
cs
out
dec
iret
push
mov
sti
fisubs
imul
int3
push
stos
pop
mov
pop
jle
push
push
xchg
sbb
fsubr
sub
xchg
out
repz
xchg
jge
dec
fwait
test
jo
movsl
outsb
lcall
pop
dec
xchg
xlat
mov
dec
out
push
xorb
fnstenv
rcrl
dec
icebp
mov
dec
lahf
popf
cmp
stos
jnp
push
fcmovnbe
sarl
mov
push
mov
pushf
stc
push
les
dec
cmp
iret
xorb
dec
jae
sbb
sub
add
mov
mov
add
roll
jnp
leave
lock
cmp
inc
mov
stos
xor
rcll
gs
push
out
xor
dec
mov
mov
pop
fcmovnb
jp
adc
clc
add
jae
push
loopne
insl
cmp
adc
add
fisttpl
cmp
test
adcl
cltd
sub
pop
mov
dec
int
mov
ljmp
mov
jae
orb
ret
iret
fimuls
xchg
ljmp
xchg
sbb
inc
in
push
mov
cltd
pop
adc
outsb
nop
into
out
push
enter
mov
and
fsubrs
das
push
push
test
arpl
mov
ljmp
int3
xlat
in
inc
push
xchg
aaa
rclb
inc
pop
sub
or
lahf
fsts
stos
daa
je
ret
fsub
leave
dec
xor
add
outsl
test
and
daa
cmp
pop
out
insb
nop
ds
repnz
call
jns
sahf
xor
test
mov
or
lock
or
shrb
lret
ss
test
js
dec
mov
add
test
popf
ret
scas
xchg
jle
jb
xchg
fidivrl
xchg
std
orl
test
mov
mov
out
sub
inc
cli
mov
call
imul
sbb
sbb
sub
je
movsl
xchg
jo
jno
mov
hlt
cwtl
mov
add
das
cld
test
sbb
call
add
and
dec
fbld
push
mov
jo
mov
xchg
imull
lcall
add
xchg
lods
ss
push
fisttps
sub
ja
dec
test
lea
cmp
movsl
movsl
xchg
jo
mov
xchg
ja
push
popf
int
sbb
mov
xorl
push
test
or
inc
xchg
lods
xchg
cmp
xor
mov
cmpsl
ret
or
ljmp
mov
in
mov
inc
rol
leave
mov
mov
sub
insl
repz
cmp
and
mov
and
push
test
adc
pop
es
ret
arpl
mov
xor
jne
add
push
gs
mov
sub
ds
cmpsl
aaa
shrb
cmp
adcl
shr
push
daa
inc
push
xor
xchg
fwait
clc
scas
cmpsb
sub
pop
arpl
pop
jl
cmp
ds
jae
gs
ja
insl
ds
outsb
fcoms
negb
ja
cmp
test
fidivs
mov
add
add
cwtl
insl
pop
aam
xlat
movsl
cmp
movsb
mov
push
xor
xchg
mov
xor
or
sub
dec
lock
mov
clc
popf
xchg
lret
out
sbb
inc
dec
jb
add
insb
aas
adc
aad
add
xor
add
mov
xor
pop
test
in
push
adc
and
in
add
mov
pusha
in
xchg
xchg
xor
lahf
xor
fwait
int3
cmp
xchg
test
std
mov
fistpl
mov
push
adc
mov
mov
es
dec
sbb
mov
out
adc
fucom
je
fwait
mov
mov
push
pop
inc
dec
jbe
or
adc
push
lods
inc
dec
adc
push
mov
fmull
fisubrl
xlat
mov
sub
test
cmp
enter
mov
out
push
mov
add
or
insb
mov
stos
test
ss
test
add
mov
xchg
in
inc
add
mov
mov
mov
jbe
sbbb
cmp
fldt
mov
aad
mov
daa
add
jno
lods
sbbb
in
iret
in
xchg
in
adc
call
xchg
mov
in
das
xor
add
fildll
add
aas
jl
xor
imul
sbb
loope
inc
sbbb
sub
mov
shr
xor
xor
fimuls
sti
inc
sub
or
orl
inc
ss
call
fcompp
sti
ficomps
mov
loope
scas
fdivrs
stos
cwtl
cs
sub
mov
stos
inc
push
mov
js
in
sub
in
lods
jle
push
mov
jp
or
std
pop
clc
jmp
int3
and
aaa
jo
adc
and
int3
lahf
jecxz
pop
ja
push
mov
sub
enter
lods
sbb
enter
inc
std
fucomi
cmp
nop
and
xor
int3
fnstsw
push
icebp
dec
lods
jecxz
jg
hlt
jp
rcrl
incb
out
mov
cmpsl
push
mov
push
pcmpgtw
sub
ret
cmp
insb
xlat
mov
in
lea
xlat
scas
mov
lret
xchg
sbb
stc
pop
sub
lds
push
data16
fstl
push
mov
lods
mov
mov
mov
pop
jecxz
into
mov
cmp
aad
push
jp
and
fcmovb
push
lea
cmp
sub
xorps
test
call
mov
push
out
ljmp
dec
xor
adc
cltd
adc
push
pop
xor
cli
int3
cmp
pusha
xchg
jmp
fisubs
sbbb
test
mov
or
dec
pop
movsl
mov
imul
dec
and
push
xor
push
aad
les
sub
cli
xchg
cld
scas
cmpsl
xchg
jmp
ss
jl
mov
mov
mov
sahf
and
cmp
mov
in
insb
add
pop
fwait
into
mov
add
cmp
divb
outsl
out
lret
test
in
sbb
inc
stos
push
in
decb
pop
insl
mov
push
dec
mov
aas
mov
mov
out
aas
jb
mov
cli
aam
push
xlat
mov
fistpl
and
cmp
xchg
incb
jo
movsl
add
mov
cmp
xor
and
mov
push
fsubrs
add
xchg
cmpsb
pop
push
fwait
stos
jmp
push
loop
add
xchg
leave
cmp
or
sbb
dec
jne
loop
in
jl
sub
out
fwait
xchg
and
icebp
in
mov
mov
into
movsl
les
aad
xor
sbbb
mov
xchg
xorb
mov
mov
dec
and
out
dec
dec
jp
pop
add
mov
cltd
iret
cmp
dec
inc
fcmove
fstpt
mov
stos
mov
imul
movsl
imulb
into
shlb
sub
mov
xor
int3
fwait
std
jle
test
push
push
outsl
data16
inc
dec
mov
loope
push
jno
fnsave
test
adc
mov
fsts
adc
or
sahf
mov
add
inc
push
xchg
pop
or
cli
mov
and
dec
jne
mov
mov
mov
or
fstpl
cmpsl
adc
lock
cmp
push
repz
push
lods
ljmp
mov
and
stos
arpl
fwait
xchg
mov
mov
cmp
hlt
mov
fsubrs
sbb
jle
dec
cmp
push
mov
scas
inc
enter
ja
sub
shl
xor
add
loope
lret
mov
pop
loop
lds
out
mulb
loope
leave
mov
xor
sti
ds
and
test
jp
and
mov
sbb
mov
cs
adc
enter
mov
fildl
sub
sar
js
mov
stc
in
mov
cmp
pusha
mov
push
dec
jns
scas
sbb
cmp
pop
and
and
int3
dec
test
in
mov
mov
loopne
pop
sub
pusha
imul
loop
adc
mov
lods
or
negl
cs
in
sahf
push
adc
sbb
lods
fs
dec
in
aam
mov
inc
adc
enter
in
insb
in
out
add
shl
es
leave
insl
dec
outsl
push
cld
stos
add
sub
sbb
clc
push
adc
mov
mov
mov
mov
fsubp
xchg
sub
inc
daa
out
xchg
jns
mov
das
lea
pop
aas
sbb
addb
into
mov
sbb
bound
xchg
inc
inc
and
iret
aas
inc
jns
push
jbe
in
cmpb
lea
adc
xchg
inc
iret
xchg
xor
xchg
sbb
mov
out
arpl
xlat
mov
stc
jno
sbbb
fwait
jb
iret
and
add
test
pop
sti
adc
outsb
xor
mov
lret
or
add
ret
or
pop
popf
xchg
xchg
dec
mov
orl
jg
pop
stc
mov
pop
push
jl
sbb
cmp
out
mov
mov
add
mov
mov
xor
rol
sbb
sub
test
jp
outsb
adc
sub
adc
ret
roll
mov
mov
fbstp
cltd
pop
pushf
mov
ds
mov
sub
test
push
movsl
jne
stos
in
jne
sbbb
inc
jp
les
fisttpl
and
js
cmpsb
fdivrs
jne
mov
inc
adcl
sbb
push
popf
repz
add
and
fistpll
dec
std
mov
rcl
cmpsl
mov
aaa
outsl
inc
nop
das
popf
jnp
mov
sub
cmpsb
xchg
lods
sbb
lods
lahf
pop
inc
xchg
push
icebp
jns
incb
and
pop
jo
mov
pop
scas
add
dec
test
mov
lret
shlb
mov
xor
popa
xchg
ret
ljmp
jecxz
cmp
add
mov
add
repz
dec
mulb
sub
mov
imul
lods
loopne
or
insl
and
sub
test
cmpsb
xchg
xor
rorl
adc
ljmp
sub
rcrl
cmp
cmp
test
mov
les
mov
addr16
jne
sahf
jo
dec
pop
and
sbb
xor
aam
test
xchg
cmp
loop
dec
pop
lock
mov
cmp
pop
jp
mov
jmp
adc
adc
inc
cmc
push
test
jecxz
shll
stos
sarb
sbb
nop
je
adc
sbb
mov
cltd
jg
lods
adc
repnz
iret
mov
sti
jnp
inc
ljmp
shll
jle
cmp
mov
mov
pop
or
inc
inc
pop
lret
sarl
dec
icebp
ds
xchg
lods
xor
or
inc
loopne
fidivrl
push
mov
sbb
and
pop
std
mov
xor
xor
adc
aad
scas
mov
inc
adc
xchg
sbb
xchg
lock
ret
and
aas
or
mov
pop
and
xchg
xor
ds
mov
mov
sub
stos
mov
pop
jne
sub
movsb
cmp
lods
lahf
xchg
mov
cli
movsl
add
cmp
adc
mov
jecxz
insb
iret
es
push
xchg
lea
inc
mov
mov
cmp
test
mov
jno
inc
fstps
lahf
jp
loop
js
stc
mov
outsl
xchg
lcall
daa
cs
and
leave
fdivrl
cmp
test
cmp
scas
xchg
cmp
js
pop
lahf
inc
push
repnz
push
push
add
shrb
and
in
mov
add
cmp
jo
sbb
push
sahf
test
ljmp
jns
push
dec
sub
ljmp
sub
push
mov
add
and
idiv
in
insb
hlt
or
out
mov
stos
notl
mov
sub
jmp
pop
push
inc
jecxz
add
jle
dec
hlt
cmp
fildl
mov
int
and
pop
fsts
fbld
lret
add
xchg
xchg
pop
in
icebp
cmp
xchg
sub
dec
sbb
mov
mov
js
cmc
sub
lcall
jnp
les
mov
scas
scas
daa
out
inc
push
sbb
sub
es
pop
sbb
out
add
push
dec
pop
out
jecxz
andb
sbb
xchg
iret
or
stc
jns
mov
ret
fisttpl
lds
out
fs
fcomps
cmp
negl
arpl
insl
stc
pop
push
test
ja
shlb
inc
movsb
lock
jecxz
stc
dec
lret
dec
sub
stos
cmpsb
aaa
clc
test
inc
jg
adc
sahf
adc
incb
ret
or
adc
mov
ss
mov
mov
inc
call
push
std
aas
fldcw
cmpsl
sti
out
daa
mov
js
pop
jno
sbbb
inc
jmp
pusha
aam
push
sub
outsl
in
ljmp
lods
fnstsw
icebp
mov
stos
push
sbb
lea
pop
mov
fistps
scas
xlat
cwtl
orl
pop
dec
daa
loope
lock
mov
pushf
xchg
out
dec
mov
and
les
leave
out
cmp
outsl
inc
test
dec
lds
sbb
mov
fs
xchg
mov
mov
incl
movsl
js
cli
sbb
xor
fwait
imul
jnp
popa
xor
mov
pop
sbb
ret
sar
in
fwait
pop
push
add
mov
cmp
pshufw
jne
stos
jge
lahf
mov
mov
push
jmp
dec
and
inc
test
out
pop
into
cmpsb
aam
mov
daa
jb
iret
xchg
fwait
insl
enter
js
adc
pop
inc
dec
out
inc
xchg
movsb
sbb
mov
dec
jbe
jne
test
or
push
push
mov
inc
jp
xlat
pusha
dec
and
int
in
adcl
daa
adc
mov
leave
mov
sbb
mov
loopne
pop
sarl
adc
jbe
mov
loop
sub
dec
push
mov
shll
jb
or
jmp
jmp
xor
insb
sbbb
mov
push
and
or
daa
rcrb
testl
push
xchg
vcvtsi2sdl
mov
sbbl
bnd
lcall
push
mov
bound
or
jae
fcmove
push
gs
gs
mov
ret
enter
clc
adc
add
push
clc
adc
mov
mov
jecxz
xchg
cld
cld
mov
push
out
and
add
test
pop
fstpt
mov
jae
xchg
frstor
mov
add
xchg
scas
ds
mov
pop
push
mov
pop
mov
inc
or
jb
jg
adc
adc
loopne
test
aam
shll
pop
push
scas
jne
fisubrs
mov
lds
std
imul
mov
fs
or
adc
test
nop
into
fisubrs
sbb
fldt
popf
shll
jge
pop
lods
aad
push
xor
sub
or
test
sbb
cmp
push
rcll
enter
inc
pop
popf
aaa
fucomi
push
push
dec
mov
xchg
dec
hlt
lds
mov
or
jge
in
sbb
xchg
mov
call
lcall
sub
divl
cmpsb
push
sbb
std
test
mov
nop
jne
es
rcrl
jmp
cmp
popa
jg
les
das
xchg
mov
and
xor
or
icebp
or
cld
into
xchg
lods
dec
fildl
push
outsl
cli
test
in
inc
call
hlt
cmp
mov
jmp
jl
nop
pop
inc
fisttps
pop
dec
in
mov
jmp
mov
mov
fdivp
lsl
mov
sarb
mov
push
jle
loop
loopne
test
or
notb
shl
mov
cmp
jnp
lds
mov
xor
push
push
push
or
pop
movsb
sarl
mov
iret
loopne
out
mov
mov
inc
and
pop
insl
aad
aad
jecxz
jns
aam
test
jg
dec
repnz
cltd
sahf
test
adc
stos
dec
push
mov
pop
add
push
out
and
mov
adc
or
imul
fs
int
mov
insb
jmp
adc
es
sub
xchg
jb
jmp
add
insb
adc
popf
cmp
lahf
or
sub
pop
mov
pop
inc
insb
inc
lret
mov
xchg
repnz
mov
push
dec
push
sbb
dec
pop
mov
call
movsl
jo
subl
stc
pop
es
push
out
insl
testl
orl
jp
or
cmovs
in
das
sub
mov
jmp
xor
jbe
fidivs
inc
cmp
cmp
pop
aad
shrb
pop
push
addr16
mov
mov
and
repz
movsb
mov
in
inc
mov
lds
shl
popa
jp
test
xlat
or
pop
sbb
cmp
std
xchg
dec
repz
imul
xchg
pop
ret
pop
orb
push
jcxz
mov
cli
call
mov
push
ret
shr
push
cmp
arpl
lds
in
sbb
addr16
adc
mov
mov
xchg
xchg
sbb
push
scas
adc
fsubrs
adc
push
pop
mov
imul
jnp
rolb
push
or
add
xchg
and
mov
jb
nop
lcall
icebp
out
mov
sarl
cmpsb
enter
adc
sub
add
pop
clc
shlb
imul
gs
outsl
andb
sbb
inc
mov
cmc
test
xor
aaa
ror
and
sub
inc
and
push
aaa
bound
frstor
jne
sbb
mov
ficompl
orb
aas
mov
mov
pop
add
jecxz
pusha
ret
dec
adc
jmp
sbb
mov
das
add
jns
cmp
mov
jmp
pusha
cmpsl
les
and
and
dec
mov
lods
andb
inc
fwait
mov
inc
xor
add
mov
in
pop
pop
pusha
jecxz
cmp
pushl
pop
pop
xchg
notl
into
lahf
clc
xchg
lods
jb
jb
subl
mov
jb
inc
cwtl
mov
mov
cltd
jmp
loop,pt
int
add
push
cld
fnstsw
into
dec
xor
test
je
jmp
pop
jg
das
lcall
icebp
push
cmpsb
out
insb
add
mov
outsb
push
jns
out
add
aam
in
jae
xchg
sub
or
shr
or
mov
cs
data16
sub
in
leave
mov
out
jl
push
ror
in
adc
xchg
aas
fld
pop
adc
push
loop
cmp
nop
mov
stc
icebp
cld
out
jne
sbb
mov
adc
mov
std
sbb
movsl
jg
adc
and
xor
jno
ret
pop
cmp
mov
test
jp
or
rol
mov
pop
scas
movsl
sbb
and
sub
pop
int3
stos
cmp
jns
cmp
inc
scas
insb
std
out
lret
popa
or
or
sbb
fcomip
std
ja
call
mov
mov
int
aaa
dec
leave
sti
dec
mov
mov
inc
pusha
pop
inc
mov
mov
and
add
jmp
lahf
pusha
adc
movl
por
mov
jl
push
xchg
cmpsl
jecxz
int
xor
xchg
es
sub
cltd
inc
loop
push
sahf
adc
inc
int
mov
gs
mov
xchg
icebp
adc
jns
xor
jb
aas
out
cs
or
fldt
mov
sahf
pop
sub
push
adc
cmpl
aad
jb
lret
jl
fs
inc
stc
sbb
pop
shl
arpl
and
mov
cld
inc
mov
inc
dec
aas
repz
xchg
insl
pop
xorb
jge
movsb
outsl
jg
dec
inc
sbb
mov
es
scas
adc
test
inc
jl
lcall
pop
pop
jns
aas
xchg
lret
int
mov
xor
mov
stc
test
add
movsb
ds
imul
es
push
xor
aaa
jns
mov
or
mov
jno
adc
sub
ljmp
divl
dec
fsubrl
test
lods
jecxz
xchg
cmp
popf
arpl
pop
pop
jnp
lcall
lods
adc
rolb
pop
cltd
pop
mov
and
mov
jnp
dec
in
daa
dec
aaa
shr
fs
lods
inc
roll
cmpsb
jne
addr16
xchg
mov
repnz
je
cmp
rclb
cmpsl
lret
enter
into
sbb
adc
pop
imul
jge
push
jns
jbe
sti
clc
xor
imul
add
fists
adc
pusha
or
or
mov
adcb
mov
or
jb
std
in
cmpsb
sti
or
int
pop
iret
push
adc
xor
sub
mov
pop
cltd
xlat
loop
inc
xor
jnp
fists
fbld
cmc
dec
test
inc
dec
cli
in
scas
push
sbb
lods
jbe
std
mov
lret
mov
and
das
rol
fimuls
lock
inc
lods
iret
pop
adc
ret
sbb
mov
and
int3
push
jnp
fists
icebp
jb
xchg
mov
inc
jge
testb
int
mov
dec
push
sub
cmp
dec
ret
inc
inc
dec
xchg
bound
mov
pop
fnstsw
or
ret
mov
add
shrb
cmp
adc
test
cwtl
lock
jg
shl
sbb
mov
ja
push
jg
sbb
popa
loop
lods
shll
and
psadbw
in
push
mov
andb
int
icebp
push
mov
lret
rorl
mov
icebp
test
lods
mov
cmpsb
jge
cwtl
adc
cmp
lcall
icebp
fs
in
xorb
mov
inc
xchg
mov
add
pop
stos
xor
xchg
in
xlat
or
inc
in
repnz
sub
and
and
in
fistpll
dec
in
hlt
xor
add
in
push
sbb
test
pop
sbb
mov
and
test
ljmp
dec
push
lock
rcrl
jg
int
aad
push
or
pop
mov
mov
mov
jne
inc
outsl
jbe
adc
push
repz
or
xchg
push
out
imul
sbb
mov
aas
hlt
mov
std
iret
mov
mov
push
push
cli
and
xor
aaa
mov
push
mov
dec
jno
js
push
ret
imul
inc
pop
xlat
iret
fcompl
and
data16
pop
outsb
fnstenv
fidivrs
xchg
shll
pop
mov
lret
sarl
ss
ds
mov
in
push
aam
mov
push
push
stos
in
enter
dec
xor
mov
xchg
movl
pop
test
lea
clc
pushf
addl
mov
inc
adc
cmp
mov
mov
aam
repnz
mov
sub
adc
pushf
pop
loope
pushf
cmp
pop
dec
mov
lods
mov
cmp
push
les
xorb
xor
ss
fsubr
add
mov
aad
jp
mov
add
push
clc
cmp
or
pop
div
outsb
shl
mov
sbbl
je
rcrb
or
jno
xlat
int
sarb
addr16
pop
xor
pop
loop
clc
stc
fcomps
loop
push
or
lret
lock
add
push
push
push
decb
and
mov
push
xor
aam
popa
sbb
lret
adc
dec
mov
jbe
mov
sub
jg
dec
imull
ret
jne
or
add
in
mov
les
pop
jb
push
xchg
fidivl
cld
inc
mov
pop
pop
push
adc
xor
jnp
cmpb
cmpb
jb
mov
jno
mov
ja
push
jg,pn
daa
lahf
inc
sub
fwait
aas
push
mov
mov
dec
mov
mov
pushl
push
mov
dec
jo
sub
je
mov
je
ss
fwait
pop
jne
fmulp
jg
inc
lret
les
repnz
in
ret
ds
and
mov
pop
jno
fldpi
outsl
cmp
or
sub
cld
pop
cli
inc
iret
hlt
test
sbb
inc
sahf
pop
inc
aam
ljmp
test
fmull
shll
notl
mov
call
dec
addl
out
sbb
data16
add
cmp
dec
rorl
sbb
movsl
int
rorb
push
push
fcmovu
cltd
pop
cltd
into
adc
enter
jne
hlt
add
adc
jbe
jmp
popf
cltd
pushl
sbb
das
sub
inc
add
aam
sarb
xchg
cmp
mov
and
popa
mov
xchg
test
push
jecxz
loopne
mov
jl
les
sbb
or
dec
mov
out
pop
popa
les
cmp
mov
xchg
fiaddl
cmp
or
shlb
xchg
mov
pop
jle
int3
das
pop
insb
fwait
test
sub
mov
xchg
add
pop
pop
push
xor
es
ja
sub
in
movsl
sbb
jbe
mov
mov
call
das
sub
out
sub
popa
in
pop
aad
shlb
pop
or
add
mov
mov
cmpsb
lods
mov
cmp
adc
scas
lods
cmp
jno
push
loop
jle
cs
ja
cmp
sbb
scas
jo
ficoml
push
mov
cmp
outsb
cmpsb
add
fistpl
jp
mov
push
jae
mov
jmp
out
dec
sub
xor
jg
or
scas
and
stos
popa
scas
cmpsl
mov
adc
add
fisttpll
push
fisttpll
push
test
stos
mov
cwtl
push
cmpsb
dec
std
pop
mov
add
mov
aad
xchg
xor
arpl
stc
mov
sbb
in
rorl
sub
jg
mov
pop
jbe
icebp
pop
movsl
or
and
ficoml
lods
loopne
ljmp
xchg
cmp
ljmp
push
mov
fmulp
into
into
adc
sub
daa
test
add
shr
sub
aaa
pop
sbb
pop
pushf
jnp
fidivrl
xor
sbb
xor
cwtl
xor
lock
cmp
jbe
dec
mov
fcmovnb
xchg
inc
jmp
and
lcall
and
loop
frstor
fstl
add
jmp
mov
imul
movsl
mov
lret
mov
fucomp
xlat
xlat
insl
das
in
jmp
mov
imul
jno
mov
xchg
std
lret
mov
dec
sub
imul
lods
fcomp
mov
or
mov
pop
out
and
or
dec
mov
addb
fstp
les
gs
std
je
dec
std
xorb
mov
mov
push
cmc
xlat
cmp
add
mov
sahf
jo
cmpsb
ficomps
cld
aam
sub
sbb
movsl
add
pop
add
addr16
push
lock
mov
jge
cmc
or
or
add
repnz
add
repz
aad
or
dec
mov
adc
in
and
loopne
adcb
jl
int
push
js
loopne
test
adc
mov
loopne
or
notb
inc
imul
rclb
andl
push
mov
std
push
das
daa
sub
xchg
movsb
out
pushf
xchg
add
in
andl
add
jbe
pop
sbbl
and
xor
mov
adc
lahf
stc
dec
inc
xor
dec
push
lods
sbb
pop
and
add
jp
jae
psraw
faddl
mov
sub
loope
dec
cld
adcl
fisubs
push
and
inc
dec
mov
xorl
cmp
das
ds
sbb
or
imul
outsl
lods
popf
lcall
out
int
and
xor
dec
test
dec
mov
sub
jne
or
pop
sbb
lods
push
inc
sbbl
lds
sub
pop
int3
xlat
pop
rcrl
or
add
inc
std
mov
jo
dec
sbb
es
mov
out
pusha
arpl
mov
test
or
aas
in
pop
jg
xor
mov
mov
pop
mov
je
ja
clc
movsl
pop
inc
stos
adcl
leave
mov
jmp
jns
popf
mov
scas
outsl
movsb
push
adc
pop
xchg
dec
hlt
xor
and
insb
mov
push
test
out
repnz
aaa
sbb
mov
mov
pop
mov
mov
jmp
in
push
and
or
mov
sbb
sbb
fildl
stos
fsubrs
and
mov
test
xchg
mov
add
or
test
out
stc
stos
js
outsb
adc
mov
ja
mov
lods
data16
insb
ja
add
add
test
insb
mov
push
lea
mov
outsl
in
pop
sub
pop
pop
push
incl
shlb
sbb
and
mov
or
xchg
xor
ss
add
pushf
mov
shlb
mov
int3
push
sub
fldl
sbb
jbe
pop
into
or
jb
mov
dec
out
incb
push
push
cwtl
and
push
sub
popf
xchg
fucom
jns
dec
push
les
jmp
push
push
sahf
push
mov
aad
mov
pop
xor
add
dec
sub
ret
loopne
add
dec
adc
inc
sti
dec
pop
mov
cmc
ret
mov
int
add
mov
mov
movsl
push
push
jae
cli
icebp
pushf
add
mov
ret
lock
jb
test
rclb
in
xor
mov
jecxz
in
clc
fdivs
enter
fs
fdivp
pop
mov
jbe,pt
stos
std
xor
or
in
lea
aad
fcoms
and
xor
dec
shlb
hlt
jle
mov
xchg
mov
xchg
jb
loope
sub
stos
repz
jb
das
mov
jg
push
cmp
dec
lret
pop
dec
lods
sub
pop
mov
mov
add
ret
inc
sti
call
ret
add
sahf
xchg
lahf
mov
insl
push
or
outsl
mov
jne
mov
pop
unpckhps
popf
popf
cld
in
or
add
sub
movl
lret
es
pop
mov
add
scas
jle
pop
jp
orb
dec
push
lds
incl
mov
xchg
pop
push
mov
enter
xor
lcall
inc
jecxz
jle
cmpsl
jmp
cmp
pop
aaa
sub
bound
rcll
jl
inc
adc
mov
fwait
les
fdivp
push
insb
mov
xor
lods
repz
daa
mov
int
sbb
adc
lods
push
js
outsl
pop
xor
mov
pushf
sub
push
pop
lret
nop
push
and
xor
pop
push
out
mov
andb
ss
cmc
data16
jl
fistpl
int3
insl
shrl
pop
sarl
fwait
xor
cli
mov
in
icebp
and
clc
out
dec
lods
fwait
add
pop
int
mov
push
lock
cmpsb
mov
mov
stc
dec
or
stos
pop
mov
fwait
and
aad
inc
sbb
fdivl
mov
int3
cs
imul
push
cmpsb
icebp
cmp
adc
cmp
and
cmp
aam
dec
fs
pusha
sbb
rorl
rcr
repz
lahf
outsb
push
inc
lods
scas
cltd
add
pop
mov
idivl
das
cltd
pop
cmp
data16
jo
add
lahf
mov
loope
mov
out
arpl
fisubl
test
sub
sub
add
jle
aas
jo
adc
loopne
das
decl
mov
clc
fistpl
cmp
maxps
ret
mov
sub
int3
sbb
loope
lea
and
and
mov
push
nop
pop
fldt
outsl
inc
add
cmp
popa
add
ss
outsb
scas
push
add
js
insb
mov
hlt
sahf
adc
mov
xchg
mov
push
cld
add
jp
adc
jmp
push
pop
popa
pop
pop
out
cmp
push
adc
jl
xchg
hlt
add
push
adc
and
cwtl
in
sbb
lcall
shrb
loopne
repnz
mov
addr16
push
aas
in
jbe
sahf
sbb
push
jl
out
mov
popf
aaa
sub
shll
sbb
popf
inc
testb
mov
xchg
inc
lcall
loop
mov
cli
and
pushf
push
sub
test
mov
sub
rorl
add
leave
xchg
out
add
decl
mov
rolb
lcall
xor
mov
dec
adc
pop
imul
xchg
leave
xchg
dec
cmp
xchg
dec
ja
push
ljmp
jecxz
stos
or
stos
fdivrp
cmp
add
data16
jb
sub
pop
sarb
pusha
aaa
mov
dec
push
push
dec
xchg
mov
scas
loope
mov
push
stc
js
dec
dec
test
push
xchg
dec
pop
shrb
out
outsl
jp
lods
std
dec
jno
pop
cs
cmp
int3
lods
pop
jmp
insl
cld
or
mov
loop
stos
or
loop
movsb
mov
sbbb
mov
adc
mov
push
jecxz
outsl
repnz
mov
adc
js
lds
push
push
out
or
lds
xchg
jae
imul
lea
icebp
inc
test
lea
mov
xchg
cmpsb
pop
inc
mov
movsb
sub
dec
jae
xchg
xchg
movsb
fisttps
lret
popf
xchg
insb
mov
rorb
call
add
push
lahf
in
fisttpll
stc
bswap
dec
cmc
icebp
into
leave
out
orl
sarl
xchg
int
push
ja
fdivrs
or
int3
int3
pop
ljmp
clc
xchg
mov
mov
nop
jp
cmpsb
jge
inc
cmp
xchg
popf
adc
loopne
inc
loopne
mov
jle
loop
mov
cmp
js
sahf
pop
dec
imul
dec
dec
push
cmp
dec
push
in
rcr
add
push
inc
out
cmp
and
cmpsb
iret
cmp
cwtl
repz
cld
pop
data16
pop
mov
jae
dec
or
jecxz
daa
push
out
ja
arpl
stos
je
inc
mov
sbb
mov
jno
push
gs
movsl
dec
pop
push
push
sub
and
cmp
mov
out
dec
and
cltd
jl
mov
xor
ret
cmp
mov
shl
into
mov
jmp
in
add
out
mov
xchg
fnstcw
push
scas
push
dec
leave
cmp
or
inc
mov
inc
mov
movsl
test
or
xor
push
push
lods
mov
xlat
ror
inc
nop
fcmovnu
enter
lret
bound
inc
in
loope
xor
dec
lods
push
jb
mov
insb
ss
insb
sub
add
mov
bsr
pop
cltd
es
jg
fs
repnz
lods
pop
dec
mov
std
adc
into
pop
into
add
mov
icebp
sahf
sar
or
call
cmp
xor
repz
jo
pop
sub
push
movsl
lcall
mov
add
enter
xchg
and
and
out
psllw
mov
cmpsl
loope
xchg
inc
adc
and
aam
loop
dec
jb
outsb
repz
mov
dec
fistps
inc
cmp
test
dec
js
push
das
repnz
inc
xor
xlat
jno
sbb
push
dec
inc
shlb
mov
test
push
in
outsb
xchg
stos
aas
orl
mov
in
les
xchg
orb
sub
pop
pop
sbb
ret
mov
sahf
or
cld
mov
lcall
ret
ljmp
es
js
ss
xchg
xchg
dec
jmp
sbb
sbb
hlt
ror
scas
inc
adc
fistpll
jne
mov
xor
xor
shrl
jmp
in
mov
or
sar
lahf
push
ret
dec
cld
aas
fs
iret
push
mov
cmc
cmp
loope
pusha
pop
cmp
aam
sub
out
mov
inc
inc
mov
cmp
jae
nop
or
lds
push
or
adc
les
inc
adc
inc
push
cld
jbe
or
cmp
mov
mov
mov
incb
aad
dec
pop
cmp
bound
lahf
inc
mov
fs
dec
dec
jb
sbb
inc
xor
insl
jae
lock
mov
dec
cmpsb
lods
push
add
test
push
inc
pop
pop
stc
cld
inc
andl
adc
sbb
jecxz
cwtl
orb
push
imul
mov
and
lock
sbb
imul
sbb
dec
cwtl
das
cwtl
add
pop
add
push
out
lahf
xor
xchg
outsb
cmpsb
push
rclb
push
and
inc
cltd
pop
or
inc
js
mov
adc
in
sub
dec
scas
push
mov
adc
sub
popf
fisubrs
int
cltd
add
cld
cmc
movl
mov
push
into
mov
adc
push
add
ret
sub
cmp
cltd
cmp
movsb
lock
mov
sub
ja
mov
mov
lock
pop
sbb
notl
stc
inc
mov
mov
jmp
adc
daa
in
push
lret
mov
and
rorb
and
push
ret
jb
out
xor
test
pop
fisubs
pop
xor
cmp
xchg
dec
push
pop
mov
shll
sahf
cltd
jnp
jne
sub
jg
jnp
mov
mov
dec
aaa
out
lock
scas
cmp
sbb
mov
lret
push
jae
imul
xchg
orb
lods
lret
sarl
pop
adc
jmp
push
jl
outsl
or
lret
fs
push
fnstcw
cld
mov
inc
fnstcw
sti
push
je
cmp
pop
mov
or
mov
lods
pop
sub
pop
leave
push
fs
movsb
mov
jg
mov
and
fxch
jg
bound
cmp
cld
outsl
xor
fimuls
dec
inc
aam
stos
push
add
mov
jo
cltd
mov
sbb
jmp
dec
dec
xor
fdivrs
ss
out
mov
pop
mov
dec
shlw
pop
divb
ds
mov
jle
stc
pop
pop
imul
cli
adc
mov
lock
cmc
aam
pusha
aaa
dec
mov
lea
jno
jbe
sub
pop
decb
int
jne
adc
jge
xor
sbb
int3
xor
sar
mov
and
decb
lods
mov
mov
xchg
rolb
xchg
lahf
cmp
add
inc
out
inc
aas
cmp
jbe
xchg
push
out
gs
into
jb
lock
int
xchg
jg
sbb
pop
lock
in
scas
in
xor
xor
push
mov
shlb
inc
mov
cld
mov
test
addb
and
repz
lods
push
cli
mov
push
scas
adc
xlat
mov
leave
jl
out
rclb
pop
lret
rcrl
xlat
mov
sub
cmp
jmp
and
daa
mov
test
sbbl
push
dec
imul
popl
adc
aaa
sbb
dec
push
xchg
gs
mov
inc
fwait
xor
mov
rolb
xor
imul
aad
movl
xchg
mov
add
sub
mov
or
jmp
in
pop
mov
lcall
push
mov
xchg
shlb
sbb
bound
mov
push
pushf
dec
mov
fs
mov
lret
and
jo
mov
pop
adc
push
loope
pop
dec
lcall
ret
inc
test
mov
sbb
inc
mov
and
das
mov
mov
out
jb
mov
ss
xchg
mov
out
loope
adc
sub
push
mov
mov
jb
movsb
mov
mov
adc
pop
add
xchg
fs
and
ds
out
out
or
pop
push
cli
cli
test
and
icebp
into
dec
int
fdiv
push
or
dec
inc
mov
xlat
mov
data16
dec
xchg
sbb
in
stos
mov
jecxz
inc
fs
add
push
adc
scas
jne
cmp
inc
in
pop
test
cli
inc
testl
xor
adc
xchg
jno
and
cld
loopne
imull
xor
inc
mov
cmp
pop
ret
xor
nop
inc
xor
cmp
sbb
dec
test
movsb
mov
adc
scas
cmc
lcall
mov
add
rcrl
sub
jo
inc
inc
sbb
mov
sahf
dec
mov
pushf
jbe
sbb
cwtl
jb
and
loope
outsb
ljmp
fwait
dec
sbb
rcrl
xor
ja
or
mov
lea
lods
arpl
sub
jno
imul
add
xchg
in
mov
xor
mov
xor
pop
es
in
in
xchg
imul
pushaw
push
xchg
mov
xchg
dec
jo
xor
insl
jae
cltd
stc
or
out
and
fiadds
cmp
add
adc
or
add
int
push
sbb
addr16
xchg
or
bsr
decb
daa
pop
and
mov
cmp
out
mov
clc
mov
hlt
push
sahf
jno
lahf
dec
icebp
movsb
test
fstpt
mov
ret
out
jb
ja
out
pop
mov
enter
dec
faddl
inc
pop
imul
sbb
push
pop
scas
cmp
and
std
cmp
cmp
movsl
pop
movsb
mov
repz
psubusw
xor
lds
dec
movsb
mov
ja
mov
fs
sbb
stos
outsb
xchg
mov
movsl
mov
adc
cmp
es
in
clc
push
mov
jecxz
mov
sbb
mov
out
int3
jo
lods
inc
bound
scas
sahf
or
movl
repz
push
ljmp
sbb
or
fbstp
mov
iret
xchg
pop
push
add
movlps
test
lock
ss
incb
imul
arpl
or
push
pop
and
sbb
push
xchg
push
sub
fsts
push
dec
inc
push
mov
movsl
ret
cmpsl
repnz
daa
inc
and
fstl
add
cmp
and
sarb
repnz
sbb
add
negl
in
mov
add
imul
add
mov
incl
insb
flds
loopne
sub
add
shrl
xchg
add
dec
or
addb
and
int
movsl
js
mov
jp
xchg
stos
push
inc
sbb
fsin
mov
sbb
shll
popf
in
out
pushf
enter
hlt
pushfw
shrl
bound
icebp
push
pusha
sbb
pusha
test
cmpsl
cld
add
js
mov
jns
sbb
push
pop
adc
inc
xchg
jecxz
xchg
jecxz
dec
ds
stc
jne
stos
test
jne
xlat
cmp
clc
push
ret
aam
fadd
cmp
sbb
les
xchg
movsb
jp
sub
xor
add
push
xchg
sub
mov
cld
sub
rorl
aam
mov
loopne
sbb
cmp
or
xor
sbb
insl
mov
in
fdiv
mov
mov
cs
mov
aas
rorb
sub
push
lret
lock
inc
ja
lods
mov
ljmp
ljmp
imul
pop
mov
into
and
es
test
sbb
or
and
inc
xchg
xor
jmp
fcoms
stc
sbb
push
dec
outsl
out
outsl
adc
fwait
sub
mov
xchg
stc
rcr
adcl
adcl
add
insb
or
mov
hlt
testb
addr16
loop
xchg
mov
arpl
imul
pop
shl
inc
cmp
sub
pop
sub
int
lds
mov
ficompl
xchg
add
pop
pushf
insl
icebp
imul
insb
adc
cmc
add
loope
or
cmp
adc
pop
jbe
push
mov
and
outsl
out
add
loopne
xor
mov
loop
sti
faddl
push
cmp
test
pop
dec
test
sti
jnp
lahf
jecxz
fs
das
adc
mov
out
inc
xchg
insb
sbb
es
pop
mov
jne
neg
add
xlat
jl
push
shlb
mov
xchg
xchg
inc
jne
out
mov
sub
sbb
cli
mov
std
jo
add
dec
jne
xor
mov
shlb
pop
jns
mov
push
mov
aam
xchg
nop
jo
out
inc
hlt
mov
shrl
cld
dec
jb
arpl
xor
push
iret
ja
jo
std
hlt
cmpsb
ret
in
xor
cli
ljmp
push
loope
dec
sub
cmp
jecxz
or
bnd
sarb
daa
sub
int
testl
lea
repnz
scas
movsb
push
ja
loopne
orl
add
test
test
cli
push
jge
cmp
xor
mov
push
sbb
sub
push
xor
arpl
mov
out
int3
inc
sbb
lret
pop
pop
into
ds
aam
and
test
mov
cmp
rolb
subl
and
adc
sub
lea
in
out
fdivl
movsb
out
jno
sbb
mov
lds
test
jo
xchg
sub
sub
sub
cwtl
sub
dec
cltd
push
pop
cmp
fmuls
push
mov
sub
xchg
mov
mov
mov
aam
adc
lods
sbb
cld
into
jne
rcrl
or
ss
sbb
imul
scas
mov
mov
pop
xchg
stos
pop
mov
lret
rclb
cwtl
dec
fdivs
mov
repnz
add
test
decl
xchg
add
movl
fs
cmc
jae
add
mov
sub
loope
add
xor
pusha
xchg
pusha
outsl
adc
rorb
icebp
cltd
dec
imul
pop
imul
dec
imul
lods
mull
mov
loopne
mov
arpl
fisttps
pop
jbe
sub
shl
and
fsubl
mov
testb
push
xor
dec
xchg
pusha
xchg
faddp
jne
sahf
pusha
movsl
jae
cmp
mov
sbb
adc
jb
pop
push
lea
insl
lods
xor
shrb
leave
aas
adc
pop
cmp
dec
ss
push
test
jecxz
mov
cld
add
stos
push
into
push
jmp
ror
push
mov
fcompl
push
jnp
mov
out
imul
cmp
adc
js
inc
loopne
cmc
into
sbb
push
icebp
dec
setnp
roll
sub
or
movsb
cmpsb
lea
xchg
cmovl
jp
or
xchg
sarl
dec
repz
scas
adc
dec
add
or
sbb
xchg
lds
loope
pushf
jmp
push
push
stos
clc
inc
jo
fsts
or
jno
andb
in
and
dec
push
rcrl
mov
pop
inc
push
stos
push
stc
cmpb
push
xchg
test
inc
mov
xchg
adc
sub
sti
rorb
push
clc
ljmp
mov
decb
movsl
lret
aas
in
push
movsl
stc
or
mov
pop
enter
jmp
ds
push
std
xor
mov
xor
dec
mov
loopne
inc
push
sub
add
in
sbb
xor
pop
ficoml
popa
cltd
or
insb
rorl
add
leave
pop
loope
sti
les
stc
jns
gs
sbb
test
shrl
jno
lea
fcompl
xchg
xorl
clc
leave
pushf
add
subl
add
push
lods
lds
stos
ret
out
xor
sahf
dec
ljmp
inc
icebp
mov
pusha
mov
ret
test
mov
cmpsl
dec
stos
adc
inc
lret
dec
leave
jge
out
in
xchg
fcomi
jnp
xor
cmc
cmpsl
push
js
dec
xchg
adc
adc
or
leave
jno
and
push
dec
jns
sbb
ljmp
jns
xor
insb
jmp
jl
lods
jge
sbb
int
xor
into
cwtl
lods
loopne
sarb
add
jmp
out
test
jmp
sbb
fsts
pusha
jns
xchg
shlb
mov
dec
cmc
dec
movsl
repz
sub
ljmp
sbb
cmp
int
imul
jmp
xor
aaa
inc
push
sub
mov
mov
ret
daa
lods
rcr
loop
xchg
mov
and
fbstp
xchg
jle
mov
lods
add
push
test
or
inc
adc
or
shr
imull
dec
lea
add
movsb
pusha
rcll
inc
add
inc
bound
loopne
fldcw
ret
movl
adc
xor
cwtl
mov
ljmp
lret
xchg
cmc
adc
mov
jp
inc
inc
arpl
daa
cmpsb
into
lock
js
mov
leave
mov
or
push
dec
cmp
adc
fs
inc
out
cmp
ja
sub
sbb
fs
sbb
cmp
pop
jb
mov
dec
loope
cli
in
jae
mov
ja
mov
xor
fsubs
sbb
xchg
dec
jno
outsl
lcallw
test
data16
fstps
movsl
pop
cmp
lcall
pop
cmpsb
mull
adc
lahf
lock
call
lret
dec
daa
xchg
pushf
cs
jns
pop
fs
sub
adc
test
rclb
sub
push
mov
pop
xor
loop
shl
xor
fs
xchg
sub
add
push
out
out
xorl
mov
xorl
testl
sarl
or
lods
arpl
aad
aam
xchg
or
stos
xlat
mov
mov
test
in
add
xchg
in
mov
jmp
mov
js
inc
notl
jecxz
sub
outsb
xchg
data16
test
je
xor
sti
push
cld
add
test
mov
lods
fdivp
sbb
rorl
add
fs
data16
aad
shrb
stos
push
push
jecxz
jecxz
xor
and
roll
mov
mov
push
fwait
or
adc
push
inc
xor
sub
sbb
setne
mov
inc
sbb
loopne
aam
subb
call
mov
in
jo
aaa
mov
test
mov
out
mov
pop
lcall
xchg
ss
mov
das
cmpsb
dec
rcrb
xor
cwtl
mov
jbe
lret
and
shlb
mov
andl
push
mov
or
xchg
aad
xchg
shrl
mov
sbb
push
rclb
rol
pop
xchg
or
into
sbb
jns
stos
cmpsl
clc
jp
les
loop
mov
int3
dec
inc
jecxz
nop
jmp
sub
push
adc
dec
push
sbb
push
enter
jae
cmc
popf
mov
stc
lahf
std
hlt
xchg
pop
mov
pop
shrb
rolb
push
push
or
inc
add
jo
inc
dec
cmpsb
jge
test
ret
rol
cli
ds
clc
rolb
cwtl
pop
mov
lds
add
or
dec
imul
push
push
clc
pop
push
mov
out
mov
push
cli
mov
ret
push
ret
mov
gs
jns
sbb
and
cmp
xrelease
ficomps
adc
push
ds
adc
cmp
dec
in
sbb
rclb
outsl
jmp
in
jne
pop
push
or
in
clc
or
imul
das
adc
sbbb
popf
dec
icebp
mov
and
addr16
adc
outsb
in
xchg
shlb
int3
mov
and
pusha
or
cld
xlat
or
daa
lods
jl
jp
stos
inc
pop
mov
sub
sarb
scas
sub
outsl
push
sub
lea
stos
push
push
cmpb
adc
cmpl
aad
out
je
repz
inc
pop
mov
mov
mov
ljmp
ss
les
dec
and
dec
add
sti
loopne
sub
mov
out
testb
out
cmp
push
xlat
xor
cmp
mov
dec
loope
mov
dec
mov
xor
and
dec
xlat
int
sub
lcall
ja
into
imull
iret
jecxz
jo
mov
or
clc
mov
sti
lret
test
jg
or
adc
iret
jne
lcall
iret
mov
mov
xchg
insl
or
lods
add
scas
mov
mov
cmc
lahf
mov
addr16
fwait
jge
mov
jge
pop
mov
push
mov
movsb
movsl
mov
adc
jno
cmp
cmpsl
test
inc
out
lahf
test
cmp
cmp
cmp
adc
push
xchg
or
mov
xchg
shrb
in
stc
push
cmc
mov
in
scas
adc
mov
mov
dec
mov
ret
scas
repnz
add
inc
pop
add
mov
ss
cmp
sti
rolb
dec
xorb
lahf
push
movsb
pop
jno
mov
xchg
popa
mov
push
cmp
repz
orl
cmp
out
mov
mov
pop
cli
cmp
les
int
mov
mov
sbb
leave
jne
lock
mov
jp
cmp
notl
ds
repz
lret
dec
call
insb
inc
loopne
push
call
ljmp
push
sbb
iret
jno
lods
insl
adc
jmp
inc
sub
pop
ss
mov
push
push
xchg
dec
aad
inc
add
add
xor
mov
xlat
cmp
cmp
ljmp
sub
cmp
lahf
icebp
outsb
sub
insl
or
xchg
and
shl
and
adc
mov
jbe
iret
adc
pusha
lret
pop
xor
sub
mov
and
repnz
xchg
xchg
dec
scas
mov
fcomps
imul
pop
add
lock
fnstsw
les
lret
scas
mov
rol
jge
fidivl
int
test
add
jo
sbb
adc
adc
shrl
es
incl
loop
in
sbb
mov
push
cwtl
add
int3
push
mov
insl
cmp
mov
xlat
cmp
test
or
xchg
add
xchg
adc
shll
cmp
push
dec
aas
pop
ret
test
repnz
sahf
lret
mov
or
sbb
xchg
call
sub
inc
fistl
cwtl
sbb
sbb
mov
xor
cld
pop
mov
mov
out
test
mov
mov
mov
push
clc
stc
mov
int3
pushf
sbb
das
pushf
sahf
cmp
mov
pop
inc
pop
adc
sub
mov
push
sub
pop
mov
push
insb
pop
gs
xchg
add
adc
test
fnsave
test
dec
mov
pusha
in
and
daa
ss
sub
pop
pop
loopne
movsl
std
adc
les
or
push
sub
pop
test
lea
cmpsb
add
cmp
or
cli
cwtl
insb
sbb
pop
push
shl
ret
aad
test
fisubl
adc
jno
mov
in
pop
bnd
dec
mov
pop
push
scas
and
pop
rcr
cld
adc
int
xchg
sahf
adc
cmpsb
andb
clc
decb
and
push
jle
push
gs
dec
int3
xchg
roll
mov
push
je
int
or
int
sub
mov
xor
int
push
nop
inc
xor
push
int
sar
lock
adc
cmp
cmpl
loop
insb
cmp
jne
arpl
cmp
mov
imul
xchg
push
add
fmuls
push
out
sub
sub
mov
pop
popf
hlt
jmp
push
popf
loop
ret
insb
mov
xchg
xchg
int3
sbb
fstpl
mov
mov
inc
mov
outsl
imul
test
aam
dec
push
fcomi
cmp
adc
mov
mov
clc
scas
mov
jb
mov
fimull
sbb
cltd
lcall
aam
call
cpuid
sub
mov
in
test
out
fs
sub
and
mov
inc
cmpsl
pop
movsb
dec
lea
xor
daa
ds
loop
lock
dec
lea
push
gs
stc
mov
jl
cli
inc
push
mov
xchg
ljmpw
or
mov
mov
scas
hlt
mov
scas
or
inc
sbb
push
xor
addb
mov
mov
int
jmp
movsb
cltd
add
xchg
inc
pushf
jge
inc
cmp
inc
sahf
mov
lods
pop
pop
test
lret
pop
decl
loopne
or
xor
andl
bound
cs
or
out
test
loopne
inc
pop
insb
mov
subb
ljmp
pushf
xor
mov
inc
jle
and
pop
add
rorb
push
fbld
jmp
jp
sbb
and
into
adc
popa
sbb
mov
xchg
adc
int3
negl
lea
mov
lret
add
call
andl
jge
fsts
inc
ror
ret
adc
mov
sub
fdivrs
dec
lock
push
pusha
jp
shlb
addr16
or
inc
mov
xchg
push
pushl
das
sub
inc
xchg
movsb
popa
sub
out
es
lock
test
pop
push
xchg
lcall
add
mov
shr
outsb
xchg
push
cmc
inc
inc
push
mov
push
inc
jp
rcl
mov
daa
test
cltd
add
lret
adc
add
xchg
xchg
loopne
xchg
mov
jb
inc
dec
xchg
mov
push
inc
cmc
inc
dec
inc
push
mov
cmp
xor
aas
cli
insb
pop
scas
sub
enter
lret
out
loope
xor
lret
movsl
cmp
gs
lret
xchg
and
inc
ffree
sub
xchg
sub
das
aas
call
mov
pop
sub
jne
leave
in
popf
out
push
test
or
aam
sub
jbe
insb
rcll
sarl
jg
pop
sbbl
mov
xchg
pop
imul
lock
fwait
push
clc
out
push
andnps
ret
dec
lods
fwait
or
divl
repnz
lds
hlt
xchg
repnz
push
dec
mov
add
fwait
pop
and
bound
enter
sahf
push
das
mov
jnp
pop
or
xlat
out
xchg
jle
sbb
inc
inc
mov
iret
mov
int
call
std
xchg
aad
movsl
add
outsb
out
jge
sbb
mov
js
test
imul
xchg
xchg
in
mov
ret
push
pop
mov
mov
leave
sub
add
xchg
push
ficoml
xchg
je
aas
add
sub
jge
sub
and
add
push
mov
and
sbb
xchg
xchg
in
mov
jae
cmpsb
dec
nop
in
popa
leave
xor
cmp
adc
lock
mov
repnz
jg
cli
xchg
cmp
dec
cmp
xorb
sahf
cmp
outsb
xor
and
lea
rcrb
sbb
outsl
xchg
xlat
fcomp
enter
mov
mov
je
aas
and
cmpsl
push
pop
or
out
sub
add
cmp
cmp
xchg
repz
mov
lahf
lcall
aam
pop
mov
sbb
dec
mov
push
jecxz
mov
jp
adc
and
lods
cs
mov
dec
adc
push
dec
rcrb
aas
dec
out
scas
or
inc
dec
pop
lea
loope
int3
add
mov
scas
xor
shrl
rcrw
mov
aad
or
in
mov
sub
sub
sub
subb
push
cmp
fidivrl
cmpsb
mov
xor
add
in
mov
pop
add
xor
jbe
inc
addb
lock
int
push
pop
push
sbb
and
jp
add
sbb
mov
mov
outsb
add
les
xchg
repnz
dec
add
xchg
iret
mov
aad
stos
sub
adc
ror
aam
mov
sbb
fdivrs
and
push
push
pop
jmp
dec
adc
mov
jecxz
icebp
jl
sub
inc
add
mov
int3
repnz
mov
dec
cmp
outsl
xchg
into
fwait
sbb
in
shlb
inc
push
and
sbb
inc
int3
ja
dec
and
cmp
and
jnp
push
in
sarb
sti
push
mov
xor
mov
cmp
pusha
cli
jmp
adc
stos
idivl
cmp
shlb
ret
mov
sbb
rorb
mov
sub
fwait
jns
pop
fwait
xchg
jg
cmpsl
orb
sub
mov
jmp
test
add
roll
mov
pop
mov
pop
pop
inc
or
je
add
sbb
pop
dec
jno
pop
hlt
jae
mov
mov
mov
and
dec
scas
insb
outsl
jnp
add
ss
loop
addr16
ret
push
xor
inc
test
fwait
stc
out
sbb
ja
cmp
je
adc
xor
je
inc
and
jb
loop
sbb
das
mov
rorb
sub
andl
push
or
outsb
ret
or
subps
ret
lds
test
push
inc
jo
inc
movsb
stc
jge
mov
ljmp
std
aaa
test
xor
push
scas
cmc
rcr
out
outsl
lret
lret
int3
rorl
popf
mov
or
pop
jmp
add
fmuls
xor
cmc
aad
scas
push
ja
jmp
sbb
gs
mov
lcall
lahf
clc
out
aaa
rcr
decb
inc
push
jge
lds
xchg
sub
out
dec
fs
xchg
inc
arpl
jae
mov
shll
xor
leave
dec
jmp
in
push
jbe
rclb
xor
xchg
mov
je
cmpsl
sub
adc
nop
jbe
cmp
and
ss
cmpsb
sbb
jge,pn
test
push
jbe
fisubs
loop
icebp
adc
movsl
lret
flds
and
push
loopne
pusha
call
mov
jns
gs
lea
lahf
dec
cwtl
xor
lock
sub
aad
scas
int3
pop
or
mov
pop
call
mov
pop
aad
popa
push
pop
inc
aam
dec
adc
cmp
pop
xor
cmp
sarl
cmc
pop
stc
outsb
push
or
pop
scas
sbbl
dec
pop
pop
ss
push
xchg
mov
popa
lds
mov
es
fimuls
sbb
repnz
mov
jno
ret
in
xor
sbb
xor
xchg
cs
adcb
jge
lcall
add
pop
lahf
add
add
xchg
xlat
jno
pop
jecxz
xchg
repnz
lods
cmpsb
pop
fdivs
rorb
fimuls
mov
lahf
sbb
mov
push
xchg
bound
pop
pop
out
rcrl
sar
mov
pushf
jae
mov
lods
sti
cmpl
psubsw
popf
incl
xor
xor
lds
jge
lret
ret
xor
repnz
adc
jge
rcrb
aam
daa
pop
xor
cmp
xchg
call
cmc
popf
and
inc
aas
push
xchg
mov
jns
leave
fldl
or
icebp
and
jmp
xor
mull
test
divb
cwtl
pop
inc
iret
je
inc
jno
push
pop
ds
mov
and
call
inc
ds
pop
shrb
and
mov
movsb
in
mov
fcomp
fsubs
stc
add
cltd
into
lcall
mov
cld
sub
sbb
pop
sub
leave
nop
or
adc
pop
jbe
push
lret
mov
mov
xor
rolb
imul
mov
mov
xchg
dec
inc
push
jne
stos
or
out
mov
jo
ds
cwtl
jns
pop
ret
fbstp
xor
movsb
mov
gs
mov
jae
fildll
mov
add
sub
fistps
movsl
imul
dec
mov
aad
adc
outsl
push
cmp
jno
dec
sti
jecxz
outsl
scas
loopne
fs
scas
aaa
jg
sbb
mov
sub
mov
xlat
pop
cmp
mov
xor
push
aaa
mov
mov
out
push
push
mov
add
out
test
in
sbb
popf
cli
aam
xchg
lret
inc
or
pop
pop
or
pop
int3
cmpsl
inc
negb
dec
negb
sub
enter
jnp
mov
fbstp
leave
inc
mov
rcrl
stc
clc
xchg
xor
mov
push
aaa
sbb
sarb
enter
push
aam
push
adc
add
mov
dec
adc
ss
inc
in
xchg
mov
dec
and
in
pop
lds
insb
mov
aad
mov
jno
pop
mov
xorb
jnp
xchg
jne
jne
sbb
push
add
fsub
repnz
mov
rcr
in
stos
aaa
dec
dec
outsl
leave
cli
push
jge
lcall
mov
sbb
mov
or
mov
shl
dec
mov
mov
lret
inc
inc
xor
pop
dec
stos
mov
mov
cmp
insb
andb
lret
insl
and
mov
inc
jae
pusha
push
xchg
push
aam
std
dec
addr16
jno
mov
je
mov
add
incb
xor
mov
push
cmp
add
dec
cli
in
ja
jnp
lret
push
or
hlt
xchg
js
mov
mov
mov
les
in
inc
add
pop
call
cmpsb
push
mov
movl
mov
jo
or
xchg
daa
test
ds
cmp
aas
fists
lea
jmp
inc
scas
cs
lahf
js
pop
dec
xchg
mov
insl
mov
mov
lret
sub
ja
push
jno
gs
or
in
sub
and
pusha
in
dec
test
mov
cmpsb
call
adc
icebp
sbbl
pop
std
mov
cmp
shrb
shlb
loope
mulb
sar
mov
push
iret
jb
sbb
add
stc
pop
sar
pop
imul
rcll
jge
aam
mov
jl
fisubrl
sub
xchg
inc
shl
faddl
out
nop
or
xor
fdivrs
adc
or
sbb
and
sub
scas
out
iret
xchg
jo
ffreep
mov
in
jl
leave
jg
jg
and
sub
mov
xchg
and
jnp
movzwl
push
push
fisubs
jle
or
xor
cli
aaa
jb
aaa
sub
je
push
int
add
mov
xchg
push
popa
iret
push
rorb
cmpsl
add
imul
jno
hlt
shll
inc
push
out
adc
push
cmp
mov
sti
and
mov
jp
mov
xor
xchg
leave
xor
shr
out
es
pop
mov
cld
std
mov
test
in
pusha
jl
int3
rcrb
jns
imul
mov
ficoml
dec
aas
jl
mov
add
fdivl
push
jbe
lods
xchg
decb
aam
scas
pop
fildl
fs
mov
pop
mov
adc
gs
jne
js
inc
mov
xor
arpl
sti
enter
jne
and
jge
cmp
lret
ret
loopne
xchg
icebp
aas
jecxz
std
mov
je
adc
fdivrs
inc
insb
and
js
xchg
xchg
adc
in
and
jmp
dec
adc
cli
jp
or
mov
or
gs
into
inc
inc
addr16
shl
sbb
dec
jo
addr16
sbb
shrl
es
lahf
xchg
xlat
fists
add
xchg
lcall
pop
mov
sbb
push
jp
lcall
jno
jb
xor
sbb
insl
fists
mov
inc
mov
push
arpl
int3
or
cmp
push
xchg
lds
scas
xchg
test
xor
sub
or
pop
stos
pusha
pushf
add
mov
mov
or
push
pop
xlat
add
popa
pop
xor
pop
insl
cmpsl
cmpsl
rcll
pop
insb
sbb
lcall
cmp
sahf
and
outsl
push
mov
aas
pushf
mov
pushf
lds
mov
sub
inc
in
stos
lea
xchg
ja
rclb
add
sbb
and
jle
inc
adc
xchg
fmuls
aaa
pop
xchg
es
dec
movsl
dec
lea
pop
lahf
push
xor
lcall
sbb
add
xchg
jl
mov
lahf
cmp
adc
loope
push
in
pushf
cmpb
popf
pusha
jnp
fidivs
mov
cwtl
adc
into
imull
pop
rorl
in
insl
in
lock
clc
insb
mov
jb
fistl
lods
pop
push
mov
cli
scas
push
out
iret
sbb
or
mov
test
dec
sub
cltd
mov
inc
fsub
and
jno
mov
cmpl
fnstsw
aaa
cmp
mov
fldl
cmp
into
pop
xor
scas
es
aaa
or
popa
pop
dec
sarb
test
or
shr
sub
and
mov
test
rcrb
mov
mov
int3
mov
nop
and
ret
imul
sub
lock
cltd
imul
jmp
adc
sahf
jo
cmp
mov
pop
xchg
js
dec
inc
sbb
push
add
or
cmp
rorb
dec
or
shlb
aad
stc
mov
adc
dec
and
incb
fldt
xchg
dec
cmpsl
jle
xor
ret
mov
leave
imul
outsl
dec
pop
nop
jmp
mov
add
push
jmp
outsl
or
ljmp
and
cmpsl
or
jno
dec
clc
xchg
test
das
adc
ja
stc
mov
je
sub
add
jnp
sub
jmp
push
les
cmpsl
and
push
imul
fdivrp
sbb
imul
xchg
out
mov
movsb
fcoms
jle
mov
sbb
in
pop
fiadds
es
or
mov
cmp
jnp
add
divl
lcall
out
pop
iret
repnz
sub
mov
sub
out
and
jp
int
or
inc
push
sbb
sahf
les
xchg
sar
sahf
hlt
fdivrp
jae
fwait
mov
xchg
add
sahf
lcall
jb
pop
push
jnp
popa
scas
test
mov
jb
shrl
mov
jg
in
mov
jns
dec
movsb
fists
xlat
push
push
scas
das
ret
dec
adc
call
roll
mov
aaa
in
push
push
leave
mov
push
popf
xchg
repz
lds
cltd
xchg
or
clc
lahf
aaa
jns
cld
cmpsl
mull
dec
cld
cld
mov
xor
jmp
cmp
imul
add
xorb
int3
sub
lods
sbb
push
mov
push
pop
inc
pop
dec
push
aam
push
insb
xor
sub
inc
mov
shl
int3
mov
fstps
jg
xchg
xchg
push
pop
arpl
cmc
iret
xchg
sbb
out
fnstcw
imul
aaa
pop
out
jae
mov
jl
jge
cs
sub
dec
or
icebp
push
cld
xchg
outsb
cli
pop
fistps
pop
into
lret
daa
cli
dec
jp
push
out
aam
jle
mov
xchg
cmp
mov
fisttpl
dec
add
jb
aas
std
outsl
sub
inc
lods
sub
lahf
mov
iret
test
inc
sub
ljmp
mov
cmp
leave
shll
scas
inc
insl
mov
sub
sbb
dec
mov
jmp
imul
sbb
xchg
das
leave
jb
sub
ljmp
push
mov
xchg
fimull
scas
add
adc
jo
xchg
ljmp
loopne
dec
ror
test
je
int3
sbb
push
mov
adc
pop
add
into
lds
adc
adc
xor
jbe
mov
jp
pop
arpl
jmp
lods
repnz
jmp
inc
push
ret
xor
fisttpll
push
push
sbb
jg
int
xchg
sub
outsl
adc
mov
lahf
not
or
xchg
add
and
inc
fstp
pop
lea
ret
sbb
dec
or
xor
das
scas
and
jl
mov
sub
rcrb
jmp
in
jno
stos
test
mov
cmp
shlb
insl
dec
push
shlb
cmp
mov
adc
jg
xchg
jle
xor
dec
popf
mov
outsl
adc
jg
jb
mov
inc
rclb
cltd
push
stos
mov
stos
push
xchg
mov
shr
jmp
movsb
pop
cmp
les
push
dec
adc
fisttps
push
dec
in
jo
inc
sti
ss
push
xor
popa
scas
dec
repz
fisubrs
out
push
enter
adc
aam
decl
sbb
aad
mov
jo
xor
incl
pop
pop
mov
push
jae
cmp
out
iret
scas
imul
loop
sub
and
je
fsubp
pop
or
mov
es
jge
sahf
shll
ljmp
shll
or
push
xchg
aaa
insl
in
or
arpl
and
push
insb
pop
repz
mov
outsb
inc
push
fyl2x
movsb
arpl
inc
adc
in
mov
cld
add
lcall
rorl
add
sbb
inc
push
inc
fwait
lock
mov
xchg
movsl
push
mov
fimull
stos
aad
xor
loope
jl
fdivp
repnz
popf
sub
fcmovb
jmp
cmp
adc
insl
int
jae
push
test
jae
nop
repnz
pop
pop
and
lea
jle
and
fstl
or
pop
push
jae
jl
stc
xchg
add
jg
rcll
sub
cmp
sbb
and
sub
out
jne
icebp
mov
inc
cmpsb
stc
push
jp
add
std
loop
add
lods
ret
add
sub
lahf
lahf
push
and
xor
stos
xchg
xchg
lret
nop
mov
push
lret
pusha
pop
gs
sahf
in
cltd
dec
es
shlb
ret
or
mov
lods
xor
imul
jp
xchg
jnp
jmp
dec
clc
iret
pop
xchg
int3
lret
shl
pusha
loopne
cli
dec
cs
jl
xor
jno
adc
jle
xchg
xchg
cmp
jp
stos
rclb
push
jl
in
shlb
jg
and
int3
lcall
call
adc
and
dec
adc
adc
mov
pop
sbb
push
aaa
fsub
pop
ja
call
in
mov
adc
inc
sub
push
das
sti
jbe
inc
mov
mov
ds
out
sbb
inc
icebp
sub
xor
xlat
aaa
add
movsb
out
dec
pop
call
and
mov
xchg
adc
sti
pop
insl
fistpll
push
jo
ja
jb
adc
inc
xchg
jmp
xchg
imul
ret
je
xchg
push
fwait
dec
add
clc
aaa
or
mov
mov
sub
jmp
dec
and
add
repz
xor
ljmp
adc
or
adc
adcb
cwtl
jg
push
mov
shrl
in
xor
mov
js
dec
lcall
push
mov
popf
sbb
mov
or
daa
sub
addr16
mov
push
aad
fisubrs
jecxz
enter
jmp
lret
sub
push
das
mov
shl
lods
xchg
xlat
into
lock
cmp
or
out
je
xor
clc
mov
dec
sub
xor
xlat
out
repnz
insb
scas
pop
and
arpl
jbe
xacquire
xor
ret
push
icebp
sub
out
mov
xchg
pusha
push
mov
dec
cmp
rcr
xor
xchg
sbb
lods
insb
push
inc
loop
dec
sahf
rep
dec
sbb
inc
add
jecxz
sbb
xor
stos
sbb
nop
popa
addr16
or
mov
and
pushf
cmp
or
xor
stos
out
cmp
fstps
or
mov
push
lods
aam
cli
and
jnp
stos
xor
roll
sbb
mov
pop
loopne
test
sti
out
dec
xchg
or
rol
dec
jl
lock
repz
sbb
andb
sub
adc
ret
insb
std
jge
in
icebp
jb
out
xor
data16
sub
fistps
push
fwait
mov
hlt
sub
mov
dec
scas
std
leave
mov
pop
test
push
pop
push
stc
xchg
andb
and
out
and
fildll
or
mov
cltd
rorb
into
movsb
cmpsb
movsl
mov
mov
popl
shll
int
leave
push
xorb
aaa
xor
adc
neg
push
pop
mov
call
cltd
sahf
or
movsl
out
in
or
sub
dec
xor
or
ljmp
fstpt
xorb
push
or
jo
push
arpl
loopne
and
ret
cmp
push
mov
ja
sar
adc
push
rcrb
mov
int3
repnz
sbb
or
out
jp
mov
push
icebp
inc
add
and
dec
loope
stos
mov
loopne
or
push
push
cld
add
xchg
ret
pop
add
mov
mov
nop
sbb
xchg
sub
xchg
add
lods
jmp
pop
lods
fs
das
hlt
xchg
sub
ret
adc
or
movsl
add
jbe
mov
push
mov
scas
adc
push
xor
shlb
outsb
dec
jg
mov
jp
adc
out
push
movsb
jp
insb
xor
or
cmp
add
lret
mov
or
syscall
fwait
rorl
jge
into
or
add
cmpsb
cmp
outsl
jo
clc
dec
dec
add
pushf
pop
jae
mov
inc
xor
scas
sti
mov
adcl
fwait
push
push
inc
adc
shrb
ficoms
repnz
std
jg
jge
out
insl
pop
pop
les
pop
movsl
dec
jmp
pop
fisttpl
lods
lock
outsb
addr16
outsl
adc
inc
xchg
popf
add
jmp
mov
fwait
loop
test
dec
jo
mov
jne
lods
xchg
xchg
sub
jg
out
sub
push
mov
std
ljmp
jne
sbb
jmp
pop
in
rcrl
test
das
sbb
pushf
cmp
aas
and
mov
cmp
cli
jge
push
pop
insb
add
add
pusha
paddusb
mov
arpl
xor
mov
out
sbb
aaa
mov
xchg
test
fwait
add
dec
xor
js
jae
sub
pop
test
add
xor
popa
outsb
pop
pop
push
in
add
pop
xchg
nopl
jns
sbb
inc
mov
mov
mov
sub
cld
inc
movsb
jae
fsubs
jp
push
inc
mov
rolb
inc
rorb
add
pop
adc
pop
xchg
std
pop
lods
mov
call
addr16
hlt
out
es
mov
hlt
push
mov
je
int3
adc
cwtl
mov
int3
and
xor
xor
adc
mov
dec
data16
cs
in
call
scas
and
fwait
inc
mov
sahf
ss
push
mov
sbb
adc
and
mov
mov
js
ret
inc
xchg
push
mov
scas
mov
dec
xchg
lods
or
xchg
mov
and
pop
and
inc
cmc
mov
add
pop
sub
mov
xchg
fcmovne
adc
ret
notb
jg
xor
add
mov
repnz
mov
jb
pop
xor
cmp
dec
mov
scas
xor
pop
sbb
inc
cmp
xor
jp
sti
inc
test
insl
shll
insl
lret
push
es
jecxz
inc
mov
cmp
jns
out
cmp
push
mulb
dec
adc
int3
mov
pop
into
movsb
mov
and
loopne
sbb
push
into
pushf
pop
enter
out
inc
insb
lea
ja
and
sbb
dec
stc
jae
cmpsl
jle
mov
loopne
into
sub
lock
int
adc
jle
cwtl
fidivrs
sbb
rorl
and
jb
cs
mov
fistps
mov
insb
adc
ljmp
inc
sub
lea
cmp
ret
pop
mov
pop
pop
cs
cmc
and
mov
pop
mov
xchg
loop
cli
sub
sub
mov
adc
movsl
aaa
leave
stc
ja
out
cltd
mov
pop
mov
ss
pop
and
jo
shrb
sar
or
je
aam
mov
jnp
or
call
icebp
icebp
popl
sub
adc
sbb
mov
aad
sahf
das
lahf
dec
je
xchg
xchg
testl
test
jne
xchg
movb
or
xor
xchg
jp
test
mov
sbb
mov
push
add
mov
push
pop
or
daa
or
dec
movsl
imul
test
mov
test
ret
loop
pop
test
dec
add
cltd
mov
jle
aam
mov
sub
enter
lock
in
fxch
test
adc
rclb
enter
fs
sbb
jno
xchg
leave
mov
stos
mov
arpl
mov
outsb
sbbl
sbb
stc
and
fisubs
or
push
loop
lcall
in
fcomps
push
movsb
loope
add
mov
pop
cmc
hlt
jmp
xchg
jae
jbe
inc
inc
cmpb
out
addr16
sub
inc
in
cmp
sbb
loopne
jbe
push
dec
leave
jl
cmc
insl
inc
std
test
or
or
sub
in
adc
mov
fsubl
dec
std
dec
dec
cli
pop
ret
mov
std
push
and
pop
sub
pop
pop
fs
lock
inc
sbb
jns
lea
push
push
sti
sahf
popf
iret
mov
mov
and
mov
and
cmp
pop
hlt
and
pop
into
lds
pop
mov
lea
jg
subl
adc
dec
mov
jl
insb
js
stc
fsubl
dec
mov
push
jb
or
repz
mov
and
mov
hlt
xchg
mov
adc
or
cld
notb
sbb
in
sub
nop
pop
fistps
ss
movsb
fs
movsb
aam
or
sub
stc
test
idiv
stos
mov
xchg
mov
rolb
and
fstpt
adc
int
mul
inc
imul
push
insl
xlat
and
add
jae
push
dec
mov
sub
mov
in
jge
inc
fcomip
scas
sub
xor
daa
outsb
jns
test
sbb
mov
movsb
fisttps
add
movsl
mov
std
add
jecxz
cltd
adc
insb
enter
push
mov
add
cmp
push
inc
cmp
push
mov
movaps
xchg
dec
sarl
jo
nop
sub
push
jnp
mov
fidivs
push
xchg
int3
and
sub
dec
push
into
push
jns
mov
mov
mov
lcall
xchg
sbb
pop
push
cmp
or
inc
cmp
in
lock
lret
bound
in
add
or
clc
outsb
jnp
jecxz
loope
scas
roll
stos
incb
adc
xor
popw
inc
push
enter
clc
enter
push
dec
push
in
fcoml
cmp
ficomps
aaa
mov
gs
testl
sbb
gs
aas
ljmp
cmp
filds
das
sarb
stos
addr16
dec
mov
inc
mov
xor
jo
sbb
xchg
cwtl
popf
mov
mov
jbe
int
push
inc
mov
in
jb
pop
ret
push
jno
mov
sbbl
sub
inc
xor
mov
das
mov
movsl
inc
ret
and
jo
fwait
push
cmp
mov
std
inc
fcoml
mov
cld
out
jle
add
in
inc
inc
mov
testl
leave
inc
sub
xchg
mov
jp
dec
iret
xchg
pop
or
sti
nop
add
mov
mov
sarl
sub
repnz
out
repz
nop
adc
repz
cmp
sub
stos
addb
out
jae
xchg
inc
pushf
cmpsb
cmp
rolb
loop
push
test
les
xor
inc
fisubl
pop
je
sbb
pop
fisttpl
mov
js
movsb
pop
or
push
bound
imul
loopne,pn
insl
mov
dec
adc
inc
in
cmp
mov
faddl
sbb
or
push
jmp
int3
inc
adc
fldl
and
mov
mov
mov
call
sbb
dec
jo
inc
std
mov
loope
and
fmull
shrl
push
test
pop
lea
insb
push
sub
mov
mov
enter
pop
js
pushf
test
jae
movsb
test
push
inc
xchg
add
sbb
add
stos
cwtl
enter
sbb
sti
ret
mov
dec
nop
ret
mov
test
jbe
sarl
loop,pt
xor
fwait
and
xor
xor
test
add
jne
add
shll
xchg
sbb
jo
xorb
cld
lock
cs
insb
decb
push
mov
mov
jnp
or
fsub
sbb
add
pop
xchg
cmc
add
aad
mov
push
dec
and
xchg
mov
jns
cwtl
push
lods
mov
adc
icebp
push
sbb
out
cs
cmpsl
scas
mov
outsl
test
jbe
lds
stc
rcrl
dec
aad
js
popa
push
icebp
pop
cmp
dec
adc
lret
xlat
dec
dec
hlt
push
repz
pop
bound
cli
cld
pusha
scas
call
xchg
sub
pop
mov
fidivl
adc
pop
push
jbe
cmpsb
in
sti
pop
mov
jno
icebp
scas
imul
out
in
ficomps
jg
data16
jnp
leave
mov
out
push
inc
out
jae
adc
push
cli
lret
or
adc
cmp
dec
pop
jae
cltd
jnp
lds
stos
rolb
push
pop
xor
cltd
lods
xchg
je
fdivr
lock
les
and
push
or
sbb
ja
int3
mulb
jnp
mov
jge
mov
inc
pop
mov
outsl
xorb
cmp
scas
mov
imul
stos
dec
pop
enter
sub
lock
mov
jle
jge
mov
jge
xor
test
mov
stos
and
sbb
ljmp
loopne
mov
adc
clc
out
stos
lods
adc
and
mov
lahf
jmp
pop
dec
out
mov
add
aad
in
pop
pushw
cltd
xchg
cltd
int
aaa
popa
adc
xchg
jns
cmpsb
mov
mov
adc
js
mov
aad
and
fisttpl
push
jns
call
cli
inc
out
testl
xchg
test
mov
xchg
data16
inc
add
push
inc
dec
lret
js
or
cmp
mov
sub
ret
ffreep
push
mov
jne
pop
pusha
adc
jle
pop
push
subl
popa
push
pop
cmp
loop
imul
bound
push
jp
in
push
pop
dec
mov
or
xor
mov
xor
popa
pop
push
xchg
outsb
push
push
jne
scas
adc
pushf
cmpb
cltd
and
cmc
sub
idivl
je
push
into
stc
xor
dec
gs
or
mov
or
pusha
cld
and
or
sbb
inc
bound
add
push
xchg
sarb
in
addr16
fwait
cli
jle
ljmp
jp
daa
push
add
hlt
imul
lcall
into
leave
mov
jle
outsb
mov
jno
into
sarl
add
out
sub
outsl
stc
rolb
push
in
dec
pop
adc
in
and
movzbl
ja
fidivrs
clc
mov
xor
ljmp
imul
inc
mov
clc
xchg
mov
ja
inc
and
or
add
mov
fnstsw
sarb
sbb
mov
lahf
adc
mov
mov
jb
cmp
leave
dec
xchg
mov
inc
nop
add
adc
into
loopne
sbb
or
sti
idiv
inc
and
add
lea
imul
cmp
cmp
pop
sbb
or
scas
jne
testb
clc
scas
sahf
andl
lahf
xchg
repnz
fdivrl
mov
jp
mov
add
mov
push
or
pop
push
frstor
mov
ret
mov
lods
lds
cmp
sub
fisubl
repnz
sub
dec
mov
movsb
adc
xlat
les
cmp
sarb
mov
jbe
push
popa
call
jmp
out
cmpl
cmp
sahf
fcmovne
mov
inc
sbb
bnd
mov
jb
push
loope
nop
js
pop
mov
adc
sub
ljmp
arpl
sti
adc
cmp
repnz
cwtl
jb
enter
add
sub
fiadds
fstl
roll
test
lcall
xchg
imul
xchg
outsb
movsl
adc
mov
sub
add
lcall
add
fwait
pop
xchg
mov
jns
shlb
ret
fisubrl
arpl
lret
les
loope
mov
cmc
loop
dec
jb
mov
icebp
mov
add
lret
inc
or
sti
sbb
ret
or
xor
frstor
mov
insb
push
jno
cmp
add
mov
cmp
gs
fwait
or
mov
hlt
jno
dec
fdiv
lret
sbbb
sar
popf
xchg
lahf
xchg
fisubrs
cmpsl
mul
insb
add
pop
mov
mov
mov
sbb
jnp
pop
xchg
push
xor
jne
pop
inc
hlt
pop
xchg
fs
dec
push
iret
mov
mov
jbe
add
je
nop
ficomps
pop
sub
pop
lds
push
outsb
test
fdivr
mov
add
ds
fistpll
les
mov
xchg
ret
subb
sbb
xchg
jle
mov
push
imul
push
jg
rorb
movsl
ret
mov
push
subb
adc
std
daa
filds
xchg
dec
ljmp
push
sbb
test
pop
and
test
ret
sbb
cld
cmp
inc
jns
sub
mov
pop
pop
pop
fdivr
sahf
sub
adc
ficompl
dec
push
call
or
stc
inc
aad
jl
aaa
inc
enter
push
outsl
jb
loopne
in
js
sbb
in
and
jno
mov
mov
call
out
push
in
arpl
movsl
fwait
in
sub
in
pop
loopne
stc
test
bound
add
clc
out
sub
sub
test
js
adcl
dec
add
in
into
cmp
pop
add
jl
out
std
pop
in
cmpsl
cmp
mov
in
jnp
daa
jo
sbb
mov
loop
adc
push
outsl
insl
inc
iret
mov
js
fsub
inc
leave
in
shl
sub
es
lcall
and
int
pop
lret
jne,pt
lock
or
inc
aas
push
pop
xor
mov
jge
outsl
imulb
xchg
jns
call
lods
loope
inc
insl
jns
in
xlat
dec
hlt
jecxz
xchg
call
jnp
fwait
cltd
dec
into
ret
imul
repnz
je
test
jbe
loopw
pushf
push
movsb
sbb
adc
inc
mov
imull
pop
jp
mov
inc
push
arpl
xorb
mov
push
roll
test
mov
pop
out
orb
xor
sbb
sub
push
push
repnz
jnp
push
pop
add
xorb
rorb
add
and
icebp
sti
out
jl
jae
repnz
popa
test
xchg
xor
xor
imul
add
int
xor
in
in
jnp
pop
icebp
mov
or
jbe
mov
insb
addr16
inc
cmpsl
sub
jae
mov
jp
lds
xchg
push
xor
xchg
mov
test
cmp
xor
xor
std
cli
icebp
cltd
cmp
or
ljmp
jb
jb
mov
push
inc
jg
lds
leave
sbb
push
cli
sub
cmpsb
imul
inc
cwtl
pop
push
scas
lds
and
mov
das
call
fildll
jge
dec
cmpsb
dec
sub
mov
shlb
notb
test
push
insb
jecxz
xchg
xchg
aad
xchg
orl
and
or
cli
mov
mov
ds
sbb
or
imull
lahf
cmpsb
jecxz
sub
nop
mov
jne
sti
sbb
lret
cmp
mulb
jp
inc
fstpl
fwait
aam
in
scas
dec
popa
fcompl
push
ficoml
lret
inc
rcrl
faddl
rcrb
mov
sti
add
jb
add
dec
call
cwtl
ficoml
adc
ret
xchg
clc
cwtl
mov
scas
out
jle
test
je
in
inc
outsb
cltd
cmp
inc
add
mov
xchg
in
inc
xor
adc
fsubl
pop
ljmp
adc
mov
lds
testb
mov
jg
mov
or
nop
push
jle
inc
rclb
stos
pop
push
test
push
pop
subl
cmp
xor
aad
cs
and
adc
addr16
xlat
and
mov
iret
or
stos
arpl
notl
xchg
imulb
insb
mov
jmp
jge
jg
repz
lds
xchg
lock
pop
cmp
adcl
lahf
pushf
insb
mov
sbb
mov
cld
in
sbb
lds
dec
daa
inc
cmp
mov
mov
enter
push
clc
lock
test
fbld
scas
jo
mov
icebp
lret
jle
js
imul
ret
es
push
enter
dec
xchg
in
fbstp
mov
adc
lods
dec
mov
push
stos
jb
or
sbb
int
andl
and
mul
in
jns
dec
inc
add
xchg
sbb
sub
mov
mov
fstpt
and
and
mov
loope
roll
lcall
adc
pop
scas
cmp
lret
repz
test
push
dec
arpl
jo
and
sbb
jp
aam
mov
lahf
pushf
addr16
sbb
mov
nop
leave
or
shlb
cwtl
outsl
and
mov
xor
xchg
mov
vpshuflw
imul
cld
push
mov
sbb
orl
dec
or
addl
arpl
fnstsw
aam
movsl
leave
jnp
aaa
test
mov
testl
cld
leave
xor
inc
pop
std
inc
pop
jb
mov
pop
xchg
bound
into
mov
cmp
push
mov
adc
out
mov
fwait
and
je
add
je
lret
mov
cld
pushf
cmp
shr
shrl
mov
inc
jbe
mov
mov
mov
inc
mov
je
xor
xor
rorb
adc
xchg
adc
inc
push
or
das
adc
int
adc
cmp
add
ds
sbb
cmp
sarb
shlb
ret
inc
js
inc
clc
pushf
and
repnz
adc
insl
lea
call
xchg
rolb
xchg
cmp
mov
xor
pop
add
mov
or
aas
jge
mov
dec
mov
stos
fcompl
xchg
pop
lock
add
out
cmp
test
cmp
xlat
mov
and
mov
sub
sbb
aad
adc
xor
hlt
mov
lds
cmpsb
out
ret
xorb
xchg
and
push
mov
xchg
mov
pop
xor
leave
pop
sbb
jmp
sub
stos
stos
xor
xorl
aad
and
cmp
cltd
loopne
mov
dec
add
sub
out
test
jl
bound
mov
push
pop
mov
out
hlt
or
gs
mov
mul
sub
repnz
lret
jl
add
imul
popa
cld
sub
jb
mov
jmp
jne
test
mov
push
mov
cld
sbb
js
pop
fidivs
adc
add
lock
in
pop
ret
sub
bound
or
repz
ret
sbb
gs
out
mov
test
loopne
sarb
in
scas
add
jo
pushf
idivb
repnz
and
rcl
dec
outsb
push
lcall
pusha
xor
fwait
sbb
imul
and
mov
jno
sbb
pop
lcall
arpl
outsl
repz
das
inc
ror
push
mov
jl
or
jmp
sarb
push
repnz
mov
jmp
xor
and
aas
repz
pop
or
mov
and
inc
sub
or
repz
xchg
inc
cmc
and
xchg
sbb
fstpt
iret
lds
adc
pop
les
fdivp
pop
pushf
push
xchg
fwait
xchg
jne
in
dec
in
ja
and
in
dec
adc
xchg
daa
xlat
push
fs
leave
enter
mov
nop
gs
inc
inc
aaa
dec
push
jnp
test
push
js
cld
mov
pop
xchg
push
imul
nop
in
mov
dec
sub
sub
lock
push
test
je
pop
push
dec
int
cmc
lods
push
cmp
aad
mov
rolb
sbb
dec
insl
pop
xor
lds
icebp
pop
pushf
ljmp
push
daa
ja
mov
mov
inc
jg
lea
mov
fwait
xlat
pandn
cmc
fstps
sbb
jne
dec
shlb
loopne
insb
jne
std
out
sti
data16
jg
cmpsl
pop
mov
ja
mov
mov
dec
sub
repnz
jecxz
sar
sub
pop
test
das
ja
adc
iret
jl
push
popa
push
stos
cmp
lcall
jb
mov
pop
mov
push
bound
gs
jg
jmp
pusha
in
addr16
aas
insb
ret
push
pop
and
adc
lods
xchg
mov
add
pop
dec
bound
test
insl
sub
sbb
mov
fcmovne
mov
jnp
call
jmp
repnz
add
sahf
pop
mov
pop
imul
add
pop
mov
jns
and
xor
cmp
mov
cld
add
cmpsl
test
loopne
fwait
out
inc
dec
fadds
xchg
xchg
push
and
adc
or
mov
mov
adc
cmp
pop
lret
arpl
hlt
popf
push
rolb
cmpsb
call
push
repz
xchg
test
mov
cmpsl
mov
in
das
jl
mov
sbb
fs
addl
inc
pop
push
pop
divl
sub
and
mov
cltd
lcall
cmpps
and
fbld
adc
pushf
test
xor
cmc
lea
or
mov
add
movzbl
xor
mov
loop
or
ja
enter
jecxz
lret
xlat
fwait
push
bound
fucomi
incb
mov
add
jmp
cmp
push
cmp
jno
sub
sub
mov
ffreep
mov
test
lcall
insl
addl
lret
push
cmp
push
gs
mov
add
fistps
outsb
inc
mov
mov
mov
imull
adc
sub
idivl
cltd
popf
stos
xchg
xlat
ljmp
jb
inc
adc
jge
or
inc
xor
push
and
mov
mov
or
pop
inc
scas
cmpsb
mov
rorl
xchg
repnz
and
cmpsl
sbb
mov
mov
out
repz
inc
jle
or
incl
ret
fwait
fwait
aad
jo
sub
popf
sub
mov
stos
std
popf
loopne
scas
ds
push
cmp
mov
pop
cs
cld
mov
arpl
icebp
fnsave
inc
adc
cmp
pop
addr16
cs
rclb
js
in
mov
add
jl
out
data16
sbb
jno
repz
pop
mov
iret
mov
in
xchg
or
xchg
aad
scas
movsb
inc
xchg
cmp
mov
push
sbb
pushf
push
outsl
and
cmp
jae
stos
mov
rcl
jecxz
adc
sub
cmc
sbb
fs
ds
mov
fistps
ret
rcrl
es
movsl
cmp
sti
out
fsubrl
outsb
pop
cmp
mov
in
frstor
sarb
add
inc
leave
daa
pop
mov
xchg
cmp
pop
pop
fsubr
sbb
rorb
ljmp
xchg
dec
stc
mov
and
les
scas
xlat
jo
push
lock
mov
mov
mov
loopne
call
sbb
jmp
out
rorl
insb
scas
add
mov
lock
clc
add
movsb
pop
dec
inc
arpl
add
outsb
inc
xor
mov
xchg
out
cmp
lods
sub
sbb
xchg
aas
nop
jg
inc
iret
fs
or
ss
aam
or
push
mov
aas
fisttps
jg
inc
ss
push
fsub
and
fnstsw
dec
jp
jl
int3
popf
pop
cmpsb
in
xchg
xchg
stos
xlat
cmpsb
or
std
jecxz
test
cs
test
jbe
mov
test
fistpll
mov
push
cwtl
sar
insl
lock
mov
addb
lret
dec
lods
jbe
and
sbb
mov
lds
lods
xchg
faddl
mov
xor
xchg
stos
aad
jg
stc
xor
lock
push
lock
pop
sbb
lret
xlat
mov
add
push
pop
and
int
stos
lea
popf
mov
repnz
test
lahf
jge
cmpsl
pop
adc
mov
inc
xchg
pop
pop
into
into
bound
fnstcw
repz
loop
test
movsb
imul
mov
sub
stc
push
outsb
ja
aaa
mov
fld
push
dec
leave
stos
mov
std
mov
xchg
adc
out
je
in
xchg
iret
xor
and
push
jo
subb
push
pop
inc
sbb
shlb
rcrb
adc
add
repnz
lea
xchg
test
iret
scas
mov
sub
adc
cmp
stos
mov
repz
dec
adc
aad
pusha
sub
pop
add
jae
lods
aas
mov
roll
test
mov
sarl
sbb
xchg
and
push
shrl
popl
ljmp
out
sbb
and
enter
dec
push
mov
lret
or
out
add
xor
pop
jmp
push
inc
mov
xchg
mov
mov
pop
negb
xchg
out
xchg
in
negl
sub
mov
lea
mov
test
mov
es
dec
testb
inc
xchg
dec
add
sarl
mov
adc
and
shrb
inc
mov
imul
int
hlt
aam
lahf
cs
fiaddl
pop
inc
movsb
adc
xor
je
xor
mov
popl
int
sub
dec
cmpsl
das
push
jae
inc
hlt
imul
push
lods
mov
sub
in
mov
pop
mov
push
ret
out
push
jo
push
mov
mov
inc
and
xchg
stos
add
leave
shlb
mov
jne
hlt
lret
clc
in
sub
es
pop
andl
mov
jmp
jb
jo
inc
jge
mov
sub
mov
int3
mov
dec
pop
icebp
lret
mov
or
add
adc
loop
pop
in
xor
push
sbb
and
dec
xchg
aad
aas
shl
mov
xor
mov
insl
fwait
dec
vmread
sub
cltd
and
jmp
dec
incb
divps
sti
pop
subb
or
sbb
ret
xchg
mov
loop
fcomps
inc
ror
adc
sbb
pop
mov
andl
pop
int3
outsb
fcomp
in
xor
sbb
cltd
pushf
dec
inc
jo
and
ret
adc
add
outsl
sbbb
inc
push
pushl
jnp
xchg
sarl
cld
push
xchg
arpl
push
or
and
pop
pop
pop
sbbb
sub
cltd
adc
cmc
fldcw
and
push
mov
fsubs
xchg
shll
repz
into
loope
in
aas
bound
lods
and
icebp
lods
rcrb
jns
scas
clc
rcll
cltd
cmc
cmp
andb
adcl
adc
out
xchg
test
in
lcall
outsb
nop
or
imul
inc
inc
pop
stos
out
nop
cmp
dec
icebp
dec
mov
or
int3
dec
addl
inc
ret
adc
insb
push
in
adcl
lods
test
insl
jo
mov
jge
inc
outsb
xchg
and
arpl
push
cwtl
fs
movsb
lods
cmpsl
jp
pushf
mov
mov
mov
xchg
mov
pushf
pop
inc
loope
sbb
jns
cmc
mov
stc
in
inc
scas
xchg
jl
mull
and
and
or
push
call
icebp
ret
das
and
outsl
js
clc
push
jecxz
imul
mov
add
sub
push
push
mov
push
out
in
stos
fdivrl
lods
es
pop
pop
test
sbb
jp
inc
icebp
jae
stc
mov
insb
ret
xchg
rcrb
adc
fisttpl
inc
imul
pusha
je
sbbb
fsubs
pop
negb
add
or
lcall
clc
cmpb
shl
push
sub
pusha
in
xchg
or
cmp
cmc
jmp
xchg
cmp
cld
xlat
outsb
pop
rcll
lds
push
dec
ror
sbb
dec
sub
ljmp
pop
inc
test
xor
movsl
jno
lock
stc
data16
xchg
leave
hlt
mov
adc
push
inc
das
pop
fbld
jb
ss
mov
add
xorb
pop
pop
cli
sbb
mov
cmp
stos
dec
pop
dec
cmp
fwait
sub
in
outsl
jbe
lock
dec
inc
fldt
mov
sbb
lds
lcall
cli
jecxz
repnz
movsl
mov
popa
ret
xor
mov
mov
jg
lock
stos
dec
pop
stc
push
jo
mov
aad
aas
dec
outsl
inc
push
ret
nop
int3
es
push
fsub
out
callw
sti
gs
ret
xlat
dec
int3
jo
subb
outsl
nop
pop
pop
push
pop
mov
fsub
movb
in
sbb
mov
sub
jbe
jbe
push
mov
xchg
enter
lret
xchg
or
mov
stos
cmpsl
mov
mov
and
pop
cmp
pop
sub
fistpll
imul
cmp
mov
or
dec
and
fwait
fwait
inc
cld
push
mov
stc
sbb
mov
cmpsb
cmp
stc
mov
sbb
push
inc
jg
pop
or
mov
stos
loope
lcall
jns
cmp
mov
gs
out
imul
aas
mov
pop
inc
enter
dec
ds
lahf
mov
or
jecxz
mov
arpl
xor
xchg
out
cmp
mov
cmp
pop
jns
xor
outsl
inc
idivb
popa
insl
scas
push
mov
mov
jne,pn
out
push
faddl
push
mov
negl
mov
push
ljmp
jp
push
mov
pop
push
and
cmpsl
insl
adc
dec
inc
mov
push
jo
pop
mov
ljmp
outsb
daa
pop
mov
pop
adc
adcb
outsb
ljmp
aam
pop
mov
add
jb
cmp
sbb
jae
pushf
jns
push
repnz
push
xchg
test
dec
jmp
pop
fs
stos
adcl
lock
pop
in
ror
lretw
xchg
push
xor
xchg
mov
rcrl
or
cld
in
pop
les
xchg
and
dec
xchg
jbe
mov
pop
mov
xchg
pop
stc
jns
adc
rorb
jl
imul
inc
dec
add
sub
outsl
cmp
jae
fnsave
sub
cmp
push
mov
pop
adc
add
inc
xchg
aas
subl
sub
pop
mov
iretw
xlat
lret
out
jns
and
dec
sbb
std
jl
xor
fdivrp
dec
pushf
lcall
mov
pop
sbb
sahf
jae
fwait
jle
sbb
pop
in
cmp
hlt
pop
call
out
add
xchg
movsl
push
push
jl
aad
mov
nop
fdivs
mov
adc
gs
cmp
mov
mov
jb
call
not
cmpsb
int3
aam
push
jl
in
cmp
and
sbb
in
adc
pushf
push
popa
push
cmp
xor
adc
cli
mov
jecxz
outsl
fincstp
loop
inc
mov
pop
hlt
out
leave
negl
mov
mov
in
inc
xchg
arpl
pushl
mov
xchg
jp
je
mov
jecxz
mov
mov
mov
lcall
adc
fwait
jp
mov
sub
add
sahf
call
incb
stos
aad
and
movsb
mov
mov
test
sub
adc
mov
fadd
and
inc
aaa
rorl
cmpl
aaa
ret
add
mov
sbb
addb
test
sub
mov
leave
js
aad
outsl
fidivs
xchg
je
xor
mov
orb
mov
test
cmp
test
inc
in
xchg
shll
gs
add
jl
sbbb
fisttpl
iret
adc
mov
pop
into
lods
cmc
and
outsb
lods
add
jnp
movb
jno
aas
adc
out
movsl
into
popa
aaa
filds
xchg
sub
dec
xchg
mov
or
scas
or
orl
xchg
loop
lds
es
sub
jb
xchg
cmc
cmovae
add
scas
mov
xor
mov
sbb
mov
jmp
jle
ja
lods
pop
daa
inc
ja
xor
dec
mov
push
movsl
or
mov
pop
pop
cmp
cltd
lods
mov
sbb
cltd
xchg
das
inc
mov
test
insl
push
push
cmp
dec
push
sahf
push
mov
clc
rcr
xor
push
sub
mov
jecxz
push
adc
jb
add
jp
mov
ds
fucomip
pop
ret
add
pop
mov
mov
enter
jo
lock
test
clc
sbb
jle
rorb
add
cmp
sbb
dec
in
enter
cmp
add
jg
pop
and
lret
pop
int
aaa
subl
push
dec
test
mov
cmp
fsubp
inc
fsubl
xchg
pop
roll
pop
stos
sub
les
in
ret
popf
je
enter
loopne
movsb
push
adc
mov
les
clc
push
pop
ljmp
jnp
jb
out
inc
jbe
push
dec
scas
ret
mov
repz
cmp
push
ja
lods
mov
les
xor
adc
cli
daa
adc
repz
inc
orb
xchg
sub
leave
insl
or
notl
hlt
data16
xor
stos
sar
imul
test
hlt
inc
pop
cmp
sub
lret
jno
test
push
je
xor
loope
or
push
mull
ds
bound
sub
dec
std
push
pop
movsb
mov
dec
ljmp
dec
cmp
ja
sbb
inc
pop
lcall
xchg
jno
adc
push
xchg
pop
add
pop
inc
xlat
jecxz
sub
and
rcll
je
mov
orl
cmpl
mov
mov
push
push
push
in
in
pop
dec
loope
movsl
add
aad
jae
nop
mov
pop
xor
lock
shrl
pop
adc
mov
out
or
mov
stos
stos
cmp
test
mov
repnz
xor
stc
dec
repz
loop
dec
mov
mov
or
icebp
lcall
inc
dec
out
jo
cmpsl
sub
scas
sub
sti
rclb
mov
fldt
cmp
nop
mov
add
fnstcw
insl
mov
cmp
in
outsb
in
cmp
movsl
cmc
bndldx
imul
fidivl
test
fwait
xchg
xor
cmpsl
ljmp
fdiv
xor
mov
pop
call
shl
jp
jb
adc
inc
add
jns
jmp
pop
movsl
pushf
mov
cmpl
push
cmc
movsb
sub
into
iret
mov
stc
sbb
fstl
add
in
dec
xor
loop
pusha
mov
mov
push
add
imul
xor
cmp
or
insb
cmp
mov
sbb
mov
movsb
adc
les
in
loop
adc
push
cmp
mov
jbe
xchg
cmp
leave
mov
cwtl
xor
outsl
push
movsl
lods
add
sti
lods
pop
jle
shll
ds
pop
popa
imul
xchg
unpckhps
jbe
inc
and
sbb
call
and
jmp
sti
jl
inc
cwtl
shlb
lea
daa
xchg
pop
fcoms
loopne
std
push
xchg
lahf
bound
jle
xchg
pushf
orb
stos
loopne
sbb
cmp
xchg
cmp
cmp
cli
cmp
inc
push
ficoml
or
fbstp
pop
out
rcrb
cld
adc
icebp
mov
add
jnp
pop
mov
lcall
iret
xor
cltd
loope
mov
jp
and
pop
mulb
sub
xchg
sahf
adc
lods
or
jp
pusha
xchg
adc
lahf
insb
loopne
bound
or
push
fistpll
pop
sub
hlt
push
dec
fidivl
mov
stc
or
gs
fisttpl
cs
aaa
adc
mov
shl
xlat
cmp
daa
xchg
je
pop
add
mov
popf
jo
and
adc
out
lcall
sbb
sbb
outsl
jge
push
sub
iret
xorb
pop
movsb
into
mov
and
mov
inc
subb
lods
mov
adc
out
push
rcrb
xchg
ss
sub
or
inc
mov
out
repnz
stos
aad
dec
dec
testl
cmp
and
push
and
and
inc
scas
out
lcall
pop
imul
ret
inc
stos
sub
jmp
xor
push
adc
xor
mov
mov
push
xchg
test
mov
or
and
jg
dec
inc
jmp
test
in
popf
jle
xor
outsb
cmp
mov
pop
jns
mov
popf
push
pop
and
leave
inc
negb
mov
or
call
test
jae
shrl
xlat
adc
and
push
incl
in
mov
jecxz
xchg
inc
xchg
rcll
shr
lcall
in
data16
or
mov
jo
test
test
divl
notb
rep
repnz
pop
arpl
lods
push
push
adc
dec
pusha
or
sub
xor
out
xor
sub
sub
pop
call
xchg
imul
jbe
pop
into
mov
sub
mov
and
adc
gs
sbb
ror
jge
mov
mov
mov
jecxz
mov
sub
or
sub
repnz
pop
test
nop
je
add
call
xor
fnstcw
push
rorl
sbb
sti
cmp
push
mov
in
daa
aad
dec
mov
sub
les
add
ljmp
shr
sbb
insl
imul
pop
lahf
outsb
mov
fldt
mov
pop
cmp
xchg
test
mov
int3
and
inc
xchg
cmp
js
bound
jne
arpl
es
dec
stos
je
sub
mov
data16
mov
lods
nop
lods
pushf
add
sub
sub
cmp
inc
cmp
pop
andb
inc
xchg
adc
add
jp
test
push
mov
mov
push
pusha
cli
outsl
sub
adc
ret
xchg
sub
mov
lret
mov
fs
decb
in
mov
xor
mov
mov
iret
cmpsb
int3
dec
fmuls
fucomp
aad
in
dec
out
ret
lahf
popa
lods
or
inc
cmp
pop
ficompl
es
jne
stc
sub
ret
mov
les
outsl
jl
std
cmp
and
add
in
shld
add
mov
mov
sbb
or
mov
dec
arpl
lret
fstpt
or
sub
stc
repz
pusha
inc
xchg
aaa
inc
stos
mov
mov
sbb
cmpsl
cmpb
daa
jp
test
cmp
jb
jmp
imul
dec
scas
mov
call
addb
mov
xorb
test
aam
mov
insl
clc
out
stc
lret
inc
jns
shl
popf
rcr
ljmp
in
stc
lahf
ror
sbb
loope
xchg
jno
add
mov
add
add
xor
sbb
adc
xchg
xlat
and
mov
xchg
lock
jb
pop
cltd
scas
jmp
xlat
idivl
sbb
push
cmp
add
add
mov
shrl
mov
inc
adc
pushw
sub
loope
lods
mov
divb
jmp
scas
pop
pushf
add
gs
inc
sub
cmp
cmp
fnstsw
dec
xchg
scas
sub
push
sub
test
add
rorl
aas
mov
aas
adc
dec
popa
sbb
or
int
repnz
push
jne
test
dec
mov
jnp
mov
push
mov
loope
shlb
es
push
xchg
sub
mov
jns
sub
jmp
dec
pop
mov
xchg
data16
lcall
test
in
pop
sbb
dec
xor
nop
cli
and
iret
or
jg
lret
pop
xor
es
and
idivb
mov
mov
sbbb
aaa
ror
test
aaa
popf
pop
lret
js
dec
repz
ret
pusha
data16
dec
lahf
adc
pop
sbb
notl
pop
lret
mov
dec
fstl
imul
sub
sbb
iret
fidivrl
sbbb
inc
mov
dec
out
and
pop
inc
push
lock
adc
pushf
mulb
xlat
jecxz
outsl
pop
cli
add
jp
and
ja
loop
dec
in
addr16
std
pop
add
xchg
jl
adc
mov
adc
mov
sahf
mov
scas
inc
jl
je
cmp
adc
xchg
jne
sarl
rcrl
mov
jno
xchg
jmp
insl
add
pusha
jecxz
or
xchg
ds
fldl2e
movsl
cmp
mov
sbb
mov
jno
dec
jmp
cwtl
jb
outsb
xchg
add
imul
loopne
mov
ja
imul
pop
idivb
xchg
mov
in
inc
sbb
insb
dec
and
loope
xor
hlt
lea
movsb
dec
movsb
outsl
popf
testl
cmpsb
into
cmpsl
adc
jns
xchg
jl
xlat
dec
fbstp
fwait
xor
decl
push
dec
adc
and
sahf
jl
adc
adc
push
mov
daa
inc
add
pusha
mov
push
push
push
andb
mov
fwait
ss
cmp
pop
fisttpl
ds
pop
xchg
in
shrl
fisubs
xchg
jl
and
jmp
and
cmp
ret
cmp
pop
sbb
adc
xor
inc
pop
or
pop
mov
adc
das
xchg
in
and
inc
jge
and
scas
je
rolb
mov
ffreep
lock
ja
mov
iret
stc
xchg
aad
push
repz
jle
into
int
jmp
data16
repnz
loopne,pn
cmpsl
lods
lods
sub
sbb
lods
fidivl
stc
xor
lods
jmp
loopne
sub
stc
mov
add
or
mov
sbb
xor
cmp
mov
out
pop
sub
cwtl
sbb
add
mull
call
int3
push
je
adc
adc
and
test
repnz
ret
repnz
movsl
sbb
or
cmpsb
fisttpl
mov
mov
xchg
dec
sub
dec
mov
jae
adc
lea
cltd
pushaw
xchg
leave
cmp
sarl
cwtl
hlt
sti
cld
mov
sub
das
xlat
subl
in
int3
lea
into
jle
push
and
imul
test
popa
push
add
arpl
jle
scas
imul
adc
daa
fcmovne
stos
das
push
mov
xorl
mov
imul
fucomip
cmpb
outsl
xchg
push
dec
insl
adc
lahf
push
lahf
popa
ds
scas
jmp
scas
test
add
shlb
mov
adc
dec
push
xchg
jns
cmp
out
test
lds
pop
outsl
in
fcoms
xchg
shll
sub
call
sbb
dec
and
cmp
xor
dec
mov
js
shrl
mov
je
sbb
aad
fwait
mov
scas
hlt
pop
mov
aaa
das
jp
xchg
mov
sbb
insl
xchg
sahf
dec
jae
xor
test
mov
dec
iret
and
cmp
pop
data16
in
sbb
cmp
or
inc
loopne
imul
jle
stc
xchg
sub
dec
rcrb
mov
inc
pop
shrb
test
int
cmp
loopne
adc
jmp
mov
xchg
insl
mov
cmp
sub
gs
jne
dec
shll
pop
jmp
cmp
rcrl
mov
es
jbe
xor
mov
or
iret
adc
push
lods
xchg
or
add
je
in
push
pop
in
jno
xchg
in
ret
and
push
sbb
imul
adc
inc
cmp
and
jl
sub
mov
jge
and
jne
addr16
ss
int
dec
xlat
scas
jne
pop
stc
nop
cmp
fcompl
mov
pop
js
pop
mov
pop
subb
xor
push
jb
adc
enter
movsl
pop
pop
lcall
fisubl
stc
fadds
push
jp
sar
dec
pop
mov
sarl
mov
out
mov
lods
fwait
dec
mov
pop
mov
jle
imul
cmpsl
add
subl
push
aas
out
pop
in
add
imul
addl
dec
jo
and
push
mov
mov
ds
cmp
ret
or
jbe
enter
pop
aas
daa
faddl
loopne
js
cmp
or
sub
shr
cmc
adc
stc
mov
sbb
add
pop
data16
fs
and
jne
mov
or
xlat
cli
loopne
insl
out
jnp
sub
mov
mov
lock
rclb
iret
je
add
mov
ja
sub
mov
push
sbb
pop
out
fimull
fidivrs
out
dec
xchg
lods
repz
popf
imul
push
enter
sub
dec
mov
xor
std
sbb
cmp
pop
lret
add
lods
rcrb
popf
enter
jp
cltd
xchg
lods
gs
inc
iret
fmull
addl
mov
and
or
clc
dec
and
push
gs
sbb
dec
xor
fstpl
jns
stc
into
cmp
cwtl
lods
mov
and
outsb
cwtl
fiadds
sub
add
inc
push
cmp
xor
mov
xor
cmp
push
pop
shl
out
inc
pop
sub
pop
add
fisttpl
add
cltd
push
or
shr
lea
xchg
scas
pop
add
hlt
sub
cmp
aas
sbb
test
cmc
mov
or
insb
add
pop
pop
std
mov
dec
or
movsl
inc
xorl
ficomps
imul
adc
cmp
cmp
mov
into
pop
adc
aaa
gs
insb
inc
fisubl
add
inc
in
push
out
jmp
cmp
dec
push
fdiv
jg
pusha
push
sub
icebp
add
fists
mov
mov
add
push
push
les
shr
ficoms
clc
push
bound
mov
negl
dec
sbb
mov
xlat
movsb
cwtl
fstl
icebp
lret
roll
jl
push
movsl
cs
cmpsb
mov
and
enter
xchg
cmp
inc
and
inc
std
push
jb
mov
outsb
jp
neg
add
lds
insb
stos
std
lods
add
pop
add
push
hlt
mov
mov
xor
add
mov
lods
fcom
cmpsb
loope
pop
pop
pause
addr16
jge
push
ficompl
mov
jecxz
gs
ljmp
lcall
pop
mov
jp
ja
xchg
lods
pop
dec
push
xchg
or
ret
sub
out
leave
pop
sub
popa
push
lods
mov
mov
fxch
sarl
out
outsb
mov
aad
jge
sahf
or
xlat
xor
dec
in
adc
addr16
clc
cmp
and
movsl
adc
cmpsb
ja
push
pop
ret
xchg
push
push
add
aam
adc
pcmpeqw
xlat
inc
push
push
dec
push
fwait
mov
mov
inc
cmc
or
aas
add
inc
out
jmp
push
add
jg
pusha
push
ret
inc
cli
push
ds
sti
jecxz
stos
imul
xor
jno
je
sbb
mov
es
adc
jbe
mov
mov
mov
scas
jne
cmpsl
xor
sti
sbb
adc
jne
scas
dec
mov
imul
jno
stos
and
lods
test
dec
ret
lds
cwtl
cmp
imull
rcll
shll
fnstenv
movsb
out
fisubrl
fidivl
xor
cmp
stc
xchg
popa
arpl
add
lret
push
ret
jmp
cmp
rolb
xor
jmp
mov
cmp
and
and
inc
out
push
xchg
shl
inc
lret
rol
push
fidivs
sbb
aam
aam
jmp
mov
sti
push
xlat
leave
clc
mov
push
push
sbb
stos
insb
popa
add
lcall
mov
scas
lahf
pop
adc
fisttpll
or
mov
nop
mov
mov
push
push
jge
cmp
in
jns
ret
dec
notb
fiadds
pop
mov
push
or
mov
pop
mov
mov
aaa
vucomisd
mov
cmp
add
aad
out
sbb
fldcw
sti
pop
dec
hlt
push
mov
xchg
cmp
inc
loop
fsubrl
aad
test
jecxz
adc
sub
imul
or
mov
test
or
inc
js
orl
jns
pop
xchg
mov
mov
xor
scas
scas
xrelease
jne
daa
int3
pop
push
hlt
fmulp
int
xchg
inc
adc
dec
loop
scas
mov
or
jmp
loopne
jb
aaa
and
xchg
add
add
mov
mov
mov
mov
push
subl
loope
stos
xor
add
jg
hlt
in
cwtl
daa
movb
cmpsb
sbb
insl
mov
xchg
sahf
les
sub
mov
cmp
jbe
or
js
out
adc
push
push
mov
fdivrs
fidivrs
fimuls
ja
push
cmpsb
mov
add
cmp
sbb
cmp
xchg
call
gs
add
mov
mov
mov
mov
mov
rcrl
lods
movsb
inc
pop
or
add
push
xor
lret
mov
xor
and
push
std
xchg
jno
shll
xchg
ret
mov
jae
nop
push
imul
stc
mov
cmp
mov
mov
xchg
jge
push
test
call
mov
mov
jne
sbb
movsl
jo
cld
inc
cmpsb
push
mov
into
hlt
mull
ja
clc
call
dec
xchg
mov
push
dec
movsb
xchg
insb
or
dec
inc
cld
mov
inc
xchg
xchg
pop
xor
inc
xor
pop
push
pop
cmc
fcmovne
lods
cmpsl
adc
fs
mov
outsl
mov
loop
iret
outsb
lds
out
push
pop
std
ret
adc
push
xor
pop
push
adc
hlt
lea
mov
idivb
sbb
test
mov
mov
in
mov
stc
shrl
mov
xchg
pusha
mov
les
aaa
and
out
pop
mov
push
cmc
leave
bound
shll
loop
xchg
inc
or
mov
lret
mov
jg
push
push
testl
fdivrl
jne
insl
outsl
daa
jne
out
mov
cmpsb
xchg
inc
shll
cmp
jl
popa
lea
aas
adc
lea
out
or
adc
fneni(8087
xor
inc
mov
sahf
in
es
jns
mov
sahf
out
mov
cli
jo
mov
icebp
jmp
bound
or
jl
mov
and
xlat
jo
aad
int3
test
sub
cmp
or
cmp
out
ds
les
pop
mov
mov
add
test
inc
lock
ja
push
mov
fcomi
sti
adc
sahf
andl
mov
iret
aas
xor
pop
push
ficompl
lcall
mov
jae
mov
ljmp
dec
addb
adc
mov
pop
inc
loope
lea
pop
adc
dec
inc
fucom
int3
pop
xchg
imul
not
dec
aam
cld
cmc
cmp
mov
sub
aas
cmpsb
enter
xchg
xchg
outsb
imul
inc
pop
mov
xchg
les
bound
jbe
jp
xchg
mov
mov
leave
or
cmc
cmp
dec
xchg
imul
adc
sbb
lds
or
sub
pop
jp
dec
movsl
pop
arpl
call
fcoms
jle
in
jnp
inc
xor
lea
add
dec
mov
pop
xchg
cmp
xlat
jnp
dec
mov
sub
adcb
in
jo
loope
lcall
pop
and
sub
add
test
adc
jmp
adcl
inc
mov
mov
cld
push
and
push
sbb
adc
adc
mov
xor
incb
in
jnp
push
and
and
sub
in
out
sub
xor
cli
cld
pop
cmp
add
shll
xchg
rclb
push
sbb
test
sub
push
idivl
jbe
fistpl
js
fwait
mov
stos
jle
push
mov
add
dec
push
cltd
in
leave
inc
loop
sti
testb
test
data16
jns
adc
shll
test
add
in
and
jge
mov
int3
mov
dec
push
enter
in
les
add
or
aaa
movsl
sub
jae
or
or
aaa
or
js
and
in
rclb
int3
cmp
ret
pop
fiadds
and
ljmp
les
in
sti
jnp
ds
add
or
int3
pop
jp
sbb
js
outsb
mov
nop
loope
lret
jae
push
add
sti
stc
daa
insb
fdecstp
fwait
lods
jne
jne
leave
shlb
aaa
lds
addr16
call
jnp
or
imul
pop
xchg
scas
lods
push
nop
leave
xor
xchg
addr16
lods
and
cmp
jmp
call
mov
aas
call
add
lods
les
push
sbb
mov
shlb
cli
xchg
or
sbb
cmp
lock
xchg
dec
popa
repz
jmp
and
sahf
cli
test
ret
or
lcall
jl
stc
push
mov
aad
cmp
jae
mov
adc
cmp
enter
jbe
sub
xor
mov
mov
dec
int3
mov
repz
flds
cmc
fnsetpm(287
inc
pop
outsb
clc
pop
ret
repz
add
push
rolb
outsb
cmp
outsb
jb
sbb
in
add
adc
icebp
xchg
cmp
pop
mov
es
test
xchg
aaa
sarl
xchg
jmp
adc
lcall
jle
lret
subl
inc
pop
cwtl
pop
pop
inc
ljmp
repnz
pushf
mov
pop
ss
or
and
mov
inc
xor
lds
pop
pop
jne
in
sub
pop
push
in
rcrl
push
test
cmp
adc
mov
xlat
icebp
les
jle
xchg
insl
cmp
imul
outsb
notb
mov
aaa
test
scas
mov
and
es
push
movsl
xor
pop
fadd
insb
test
mov
pop
push
push
cmpsl
fldt
mov
cmp
dec
ret
pusha
mov
pop
ja
shl
pop
sub
lahf
push
xchg
mov
add
and
pop
mov
sti
ficompl
inc
mov
mov
pop
or
and
jno
or
movsb
call
std
or
sbb
adc
sbb
jns
loope
int
les
adc
fisttpl
and
dec
sbb
popf
out
shl
out
testb
inc
ret
subb
dec
in
inc
cmp
insl
fsubrl
jg
adc
or
jle
jmp
rorl
popa
adc
mov
lcall
jnp
inc
jno
mov
push
mov
xor
loop
inc
pop
mov
ss
ljmp
fwait
pushf
mov
arpl
lcall
les
lock
adc
out
push
lret
mov
fists
rorb
xchg
cmp
sahf
imul
inc
sub
fnstenv
mov
jno
mov
sbb
inc
fwait
cmpsl
inc
sarl
test
fwait
js
and
and
out
jl
stc
and
push
dec
das
cmpsl
dec
insb
mov
sbb
jmp
pop
mov
fwait
in
ljmp
pop
shrl
loope
jl
inc
fwait
push
cltd
push
mov
js
jo
push
das
cmp
sub
cmp
repz
daa
lret
aaa
aaa
insl
cmpsl
into
pop
push
or
dec
ds
ret
add
daa
mov
cld
cmpsb
ljmp
pop
mov
mov
inc
dec
cmpsb
lea
stc
repnz
xchg
push
arpl
dec
and
xchg
lods
push
inc
mov
jmp
push
adc
sub
or
cmpsl
ficompl
xchg
pop
jecxz
hlt
ljmp
hlt
jmp
cmpsb
cmovno
add
aaa
xor
lea
cwtl
pop
outsb
add
aaa
out
pop
das
jge
cmp
push
rclb
xor
rcrb
dec
iret
stos
sbb
mov
lock
cltd
int
adc
push
push
jb
insl
mov
pop
or
pop
lds
xchg
jg
in
jl
sbb
or
clc
ret
jmp
xchg
adc
xor
fildl
out
setge
repnz
adc
and
mov
aas
scas
js
jl
inc
and
call
mov
jge
jle
inc
or
push
inc
hlt
sub
mov
adc
icebp
iret
repz
xor
push
xorl
into
andb
mov
aaa
and
sub
sbb
add
push
inc
outsb
movsl
es
sub
ret
adc
inc
dec
inc
cmp
or
movsl
std
push
cwtl
lods
mov
pop
test
daa
xor
push
mov
fcmovb
fistps
jb
add
sub
dec
aaa
outsb
push
cmpsb
arpl
imul
jge
imul
aad
xchg
jb
and
dec
aas
gs
mov
cwtl
ja
mov
or
in
mov
jecxz
push
and
lcall
ss
jle
test
hlt
dec
notl
and
inc
dec
test
mov
dec
mov
pop
clc
stos
mov
outsl
data16
aaa
mov
cwtl
or
into
out
inc
andl
je
es
rcll
push
cmc
push
push
push
addr16
jb
xor
dec
xor
inc
add
xchg
dec
jo
dec
jno
mov
sbb
sub
js
dec
out
sbb
fcomi
mov
inc
mov
lret
arpl
push
xchg
sub
cmpsl
testl
in
stos
cmp
stos
sbb
mov
cmp
inc
and
mov
loopne
xor
cld
out
lock
inc
iret
mov
filds
cmp
mov
xchg
mov
and
ret
shrl
addr16
int3
movsl
cs
pop
xchg
push
cltd
inc
inc
mov
xchg
fildll
jns
inc
js
adc
sti
pop
data16
dec
dec
xchg
pop
fwait
lds
clc
popf
mov
mov
push
ds
xchg
sti
xchg
push
and
lods
cld
xchg
pusha
loope
cli
add
cmpl
mov
sbb
sub
fistps
cld
pop
xor
movd
ficoms
iret
jge
movsl
not
jbe
insb
mov
dec
and
pop
push
mov
pop
repz
and
inc
addr16
jecxz
and
dec
push
jmp
lods
lods
mov
jle
inc
fdiv
int
jns
or
inc
rcrb
cmpsl
adc
rorb
lods
and
push
fisubrl
push
jns
fsts
lock
leave
clc
aad
xor
shll
es
and
push
jp
stos
lahf
dec
and
data16
imul
sbb
or
or
outsl
sqrtps
popl
inc
jns
imul
push
and
popf
push
cmc
lret
mov
cmp
test
jne
adc
cmpl
push
jge
mov
call
and
aas
js
xchg
repz
jne
inc
dec
loopne
pop
push
cmp
rorb
fdivrl
gs
imul
mov
dec
mov
loop
jo
push
loopne
xlat
jl
mov
je
pop
je
xchg
pop
leave
addr16
adc
je
rcll
or
jge
mov
in
jg
dec
mov
xlat
push
push
push
dec
popa
bnd
xchg
sbb
sub
push
sbbl
mov
negl
jecxz
repz
stos
adc
into
scas
pop
add
or
lcall
xchg
in
mov
dec
mov
in
decb
inc
mov
jo
push
jg
mov
mov
insl
jmp
mov
out
cmp
sti
sub
sbb
shrl
data16
pop
sarb
out
jne
jp
pop
pushf
call
pop
daa
mov
add
daa
cmpb
or
repnz
out
jp
negl
imul
cmp
mov
dec
xchg
and
shrb
jecxz
sbbb
in
adc
dec
mov
sub
fldt
adc
sarb
and
push
and
cld
xchg
jne
fcomps
imul
cs
iret
mov
aad
fwait
shll
sbb
loop
in
inc
clc
cmp
mov
fwait
movsb
clc
lods
cmp
fistpl
icebp
ljmp
dec
add
xor
xor
stc
pop
mov
sbb
stos
cli
push
inc
mov
xor
test
sti
pushf
movsb
mov
andl
and
lret
fidivrl
mov
imul
sbb
sub
jne
mov
and
and
pop
hlt
and
mov
mov
lds
dec
jecxz
ds
and
mov
shrl
cli
or
and
xor
insl
lcall
jecxz
add
or
adc
mov
push
dec
sbb
lds
jb
mov
fldcw
dec
popa
push
adc
sub
jns
or
sar
xchg
cmp
mov
sbb
sub
sarl
xor
stos
nop
jbe
pop
cmp
or
aad
and
mov
imul
insl
hlt
sbb
cmpl
mov
stc
ret
xchg
adc
pop
lret
cmp
test
lods
stc
cmp
jno
and
pop
lea
push
mov
xor
lret
adc
int3
es
cmp
rclb
scas
scas
and
xlat
stos
popw
cmpb
enter
scas
cmpsb
add
push
fisubl
push
test
daa
xor
and
cmpsb
jl
inc
pop
pusha
sahf
dec
mov
xchg
or
ljmp
lods
xchg
in
cmp
xchg
fisubrl
insl
sub
arpl
dec
inc
cs
inc
xchg
xor
mov
lret
fldt
mulb
repnz
add
mov
inc
js
xchg
pop
cmpsb
jne
mov
mov
dec
xlat
push
in
or
xchg
push
dec
mov
mov
add
xor
into
xchg
repz
pop
jl
fstpl
and
fildl
lea
mov
stos
dec
js
ja
lret
lea
and
dec
dec
roll
fdivl
fs
nop
ljmp
mov
and
je
or
jmp
sti
fldlg2
push
push
pushf
cmp
jno
xor
in
sbbl
inc
cmp
xor
mov
pop
out
mov
cmc
adc
xchg
fisttpl
out
stc
jl
adc
test
jo
lea
mov
shrl
fistpll
adc
leave
xor
xchg
je
movsl
add
cwtl
ds
cwtl
ljmp
mov
dec
imul
int3
dec
pushf
lods
pop
sbb
cltd
arpl
push
loopne
cmp
mov
f2xm1
repz
push
jo
jae
or
xor
pop
cmpb
push
shll
popf
mov
cwtl
cld
int
in
or
or
in
jne
icebp
push
int
fimuls
outsl
xlat
xchg
aaa
ret
cmpsb
cmp
insl
shl
test
mov
lock
or
jae
mov
or
pop
mov
xchg
mov
cwtl
push
pop
movb
test
pop
pop
pop
sub
clc
idiv
adc
stos
sbb
or
mov
jmp
cmpsb
flds
insb
push
dec
insb
rcll
cltd
xchg
sbb
and
cmp
xchg
repz
mov
hlt
lcall
aam
adc
inc
inc
sbbb
scas
and
leave
jle
stos
mov
enter
mov
pop
push
jbe
arpl
fld
mov
cmc
out
inc
aaa
mov
add
andl
fmul
sub
outsl
pop
inc
push
push
lea
enter
sbb
or
mov
adc
inc
test
xlat
adc
xchg
mov
dec
test
leave
lret
sub
add
lods
ja
mov
popa
and
or
sub
movsb
sarl
xchg
xchg
stos
and
adc
pop
imul
pushf
add
xchg
ds
stos
mov
cmp
or
std
arpl
ret
in
or
cmp
inc
fmulp
cmp
lods
stos
sub
int
mov
adc
xchg
dec
xor
adc
dec
cli
sti
dec
and
dec
jmp
cmp
stc
imul
mov
pop
ljmp
push
loop
or
sbb
les
jo
hlt
mov
mov
fld
add
jle
xchg
and
stos
addr16
push
imul
sbb
xchg
mov
stc
fucomp
lods
dec
inc
in
push
test
and
xor
mov
xor
jns
mov
pop
mov
jecxz
mov
or
shl
lahf
in
insb
mov
mov
or
xchg
push
sub
out
outsb
xor
insb
popl
push
push
dec
call
addr16
sub
jo
lods
jo
mov
or
pop
out
xchg
popf
test
stos
rclb
iret
add
cli
jge
jae
xchg
outsb
xchg
lahf
stos
in
inc
rclb
push
call
shlb
fs
jge
pop
mov
pop
je
mov
and
test
push
andb
int
cmp
adc
dec
xchg
and
in
cmpsl
adc
push
push
mov
xor
cmc
inc
mov
ljmp
mov
xchg
clc
sti
mov
push
fiaddl
notl
ja
out
lret
mov
lods
fimuls
loopne
insb
rcl
fadds
aaa
adc
sbb
push
mov
fsub
dec
xor
shrb
add
mov
mov
pop
ja
push
adc
push
add
jl
cmpsl
xchg
cmp
fwait
ljmp
cmp
cmpsl
add
dec
adc
or
hlt
stos
and
lea
rol
xchg
fcmovne
pop
and
xor
clc
ds
inc
scas
insl
ljmp
xchg
call
aaa
push
mov
jecxz,pn
adc
push
or
cli
dec
scas
rcr
mov
clc
fsubs
data16
mov
and
xchg
push
mov
test
dec
mov
xchg
bnd
or
movsl
pop
jecxz
adc
xlat
push
movsb
push
push
sahf
std
mov
into
sub
sbb
stc
test
out
pop
jne
and
jo
push
jg
sbb
xchg
and
repnz
out
pop
mov
and
mov
icebp
out
or
dec
sub
xchg
sub
adcl
or
push
cmp
mov
add
cmp
leave
addr16
jbe
sub
out
scas
push
jp
cmc
jae
iret
andl
push
dec
ja
and
enter
and
sbb
cmp
push
xchg
roll
pop
mov
adc
mov
mov
mov
add
mov
popa
scas
nop
daa
mov
inc
mov
out
js
sub
mov
add
shll
test
mov
mov
cmp
cld
jae
fnstsw
popa
xchg
shrl
aam
daa
cmpsb
sub
test
lret
mov
fninit
jae
jo
test
out
add
es
ja
fcmovne
mov
int3
pushf
lods
mov
out
fsubrs
mov
repnz
sub
repnz
into
mov
jmp
jp
loop
inc
into
out
jge
fisttpll
jecxz
cmpsl
or
xlat
cmp
pop
out
nop
negl
jl
stos
imul
adc
jle
ds
lods
mov
pop
mov
inc
popa
call
outsb
int
test
add
ss
add
icebp
mov
sub
mov
adc
sub
int
xor
repnz
test
adc
mov
out
xor
inc
divb
loope
xorb
ss
imul
ss
mov
jmp
loop
mov
pop
mov
adc
les
xor
inc
maxps
daa
sbb
les
rcrl
adc
mov
or
jne
out
cmpsl
fwait
js
sub
jecxz
int
mov
ss
roll
sub
das
mov
call
or
add
iret
pop
stos
repz
mov
add
mov
sub
pop
in
pop
clc
int3
adc
inc
test
xlat
push
test
aam
adc
mov
das
xchg
aad
mov
flds
adc
inc
inc
and
popf
xchg
pop
shll
sarl
mov
push
and
pushf
jle
in
into
pushf
lea
lds
scas
xchg
movlps
lahf
lods
nop
xchg
push
xchg
pop
jp
sbb
rcrb
fists
push
inc
clc
xchg
jmp
out
aaa
enter
pusha
inc
sbb
or
jo
sbb
and
pop
or
mov
outsb
push
int
iret
out
push
fiadds
adc
dec
add
dec
pop
mov
or
or
icebp
outsb
dec
lods
stos
shlb
and
call
cmpsb
mov
jp
test
and
popa
inc
push
loope
add
ficompl
dec
or
ret
and
xchg
jg
pop
ljmp
aam
arpl
aaa
pop
pop
jb
popa
push
add
mov
mov
sbb
ljmp
cmp
mull
movsl
add
add
jno
sub
push
out
lret
int3
push
cltd
aaa
gs
sbbl
iret
sarb
push
inc
add
adc
or
jl
pusha
jg
fcmovnu
call
pop
adc
mov
addb
rcrb
mov
insb
add
adc
pusha
xor
add
xchg
lea
sbb
inc
push
lcall
mov
or
fsubr
in
jnp
lcall
cmp
aad
pushf
pavgb
lret
inc
xchg
dec
inc
fs
mov
das
cmp
sbb
inc
cmp
addr16
test
xor
lret
testb
add
aam
and
mov
mov
jbe
push
push
fidivrs
push
fdivs
je
jnp
sbb
ja
icebp
xchg
ja
mov
icebp
cmp
imulb
shrl
das
jge
gs
xchg
mov
and
int3
xor
adcl
jp
jle
sbb
dec
shrl
mov
out
leave
lock
ja
std
fwait
add
jne
loopne
stc
das
mov
dec
inc
orb
inc
je
push
xchg
lret
mov
outsb
leave
aas
sub
sub
fistl
jle
mov
test
sahf
les
outsb
jle
cmp
out
jecxz
cmp
repnz
pop
movsl
cld
sbb
jno
pop
lods
sub
enter
or
ljmp
enter
sti
fistl
nop
fcmovnu
mov
popf
or
sub
lret
jae
enter
movsl
lret
out
lock
add
mov
mov
outsb
sub
and
decl
icebp
inc
enter
sti
icebp
cmpsb
fldt
pop
push
pop
jno
lods
xor
inc
cmp
imul
fs
pop
pushf
sub
xor
arpl
push
fnstenv
pusha
testb
mov
insb
subb
jl
rorl
or
movsb
imull
xor
and
push
adc
fs
add
jmp
test
aas
sti
stos
sbb
xlat
fisubrs
cs
call
iret
int3
leave
lods
sbb
add
stos
dec
movsl
into
cld
ror
scas
mov
into
repnz
jne
testb
lds
inc
adcb
std
push
std
lret
mov
in
jmp
mov
mov
add
add
jl
sti
adc
in
in
sub
icebp
cmpsl
jp
jne
cmp
les
jl
cmp
cli
and
dec
lcall
jecxz
jb
pop
inc
or
push
mov
daa
inc
test
lea
xchg
orl
jnp
cmp
dec
jmp
or
in
sub
in
dec
repnz
roll
cmpl
pop
sbb
mov
xchg
adc
pusha
and
repz
sbb
sbb
sqrtps
add
and
pop
cld
xor
adc
out
lods
mov
mov
std
out
jnp
shlb
adc
mov
mov
arpl
jle
mov
sahf
lret
jo
push
inc
daa
jge
mov
jnp
jbe
fistpl
xchg
and
int3
jge
xor
inc
mov
aam
es
dec
mov
in
mov
cmp
and
popa
pop
push
out
mov
xor
dec
fmulp
fldenv
dec
xor
push
xchg
shlb
sub
mov
test
test
ljmp
and
dec
aas
ljmp
mov
ljmp
aaa
out
mov
and
mov
fimuls
xor
jg
pop
in
aas
jno
or
jge
fmul
and
fidivrl
jbe
call
push
out
mov
bound
js
loopne
cli
pushf
mov
cwtl
ret
test
or
in
ret
dec
scas
jge
dec
fsubrl
cmpsl
pushl
outsl
xorb
xor
add
add
stos
pop
insl
or
fdivr
cmp
mov
cmp
pop
add
push
and
dec
jle
data16
int
mov
popf
cwtl
popa
andb
add
sbb
inc
stos
into
jae
insb
mov
fwait
add
pop
push
icebp
inc
clc
addr16
jns
and
cmp
incl
jb
xlat
or
insb
adc
push
push
pushf
xlat
stos
sti
jnp
into
in
outsl
cmpb
mulb
icebp
mov
jge
jmp
ficompl
flds
aam
das
inc
lcall
inc
test
adc
fs
add
adc
xor
leave
loope
mov
cld
imul
mov
xchg
fbld
push
loop
inc
enter
or
shrl
aam
lock
jle
in
lock
out
adc
pop
add
cmovbe
xor
and
test
call
mov
push
icebp
out
mov
xor
je
test
mov
stos
flds
dec
fisubl
mov
adc
sbb
push
adc
arpl
prefetchwt1
add
das
imul
mov
xor
push
lahf
dec
movsb
mov
mov
idivl
push
in
andl
add
addr16
rcll
mov
inc
popa
int3
clc
in
ja
push
insl
decl
and
les
in
mov
sub
add
into
insl
out
lock
pop
mov
call
dec
inc
mov
daa
das
add
loope
inc
cmpsb
addl
mov
shlb
dec
dec
pop
outsb
ficompl
cmpsl
push
xchg
aaa
loop
fucomp
dec
xchg
push
mov
sub
xchg
sbb
cltd
lock
xor
xor
sbb
aam
in
jbe
ficompl
push
and
iret
jno
cmovae
jp
mov
jmp
add
cwtl
mov
sub
jno
pslld
aam
pop
sbbl
loop
mov
sub
xchg
adc
scas
into
lods
jne
xor
in
dec
cmp
daa
mov
mov
in
nop
dec
xchg
lret
adc
mov
les
xor
adc
push
ret
adc
sub
subl
sahf
mov
shrl
mov
les
sbb
loopne
jns
into
test
jns
mov
rorl
es
xchg
movsb
and
ss
mov
shl
lods
jnp
daa
push
iret
sarb
cld
lds
inc
call
repnz
mov
stos
es
mov
or
xor
xchg
inc
lahf
fildl
repnz
fstps
aas
mov
dec
hlt
sbb
xor
fcmove
cmp
mov
loop,pt
pop
jle
je
mov
xor
mulb
adc
fldt
out
fwait
cmp
jle
fmul
add
jno
out
inc
into
repnz
dec
add
call
push
jo
cmp
loope
pushf
cmp
es
ret
and
jnp
jns
je
lds
adc
fiaddl
jne
jecxz
sub
mov
adc
xor
xor
pop
mov
adc
push
pusha
xlat
sub
sub
fcmovu
lods
push
popf
cmp
jns
mov
mov
jp
jb
jb
jno
bound
mov
inc
and
outsl
insl
mov
mov
lods
fidivl
push
mov
lret
arpl
xchg
inc
jp
add
push
notb
mov
dec
sbb
jne
cmc
jl
cmpsl
pop
or
inc
xchg
lahf
test
ret
test
jns
or
mov
mov
in
js
or
clc
fcoms
gs
and
xor
bound
mov
iret
das
test
test
lods
and
stos
stc
mov
inc
mov
pushl
dec
bnd
int
pusha
ja
ret
add
insb
dec
lea
das
add
vhsubps
das
fcmovb
in
stos
lcall
in
xor
test
dec
popf
leave
repnz
mov
jo
pop
and
call
pop
mov
loope
add
call
aas
mov
dec
mov
ja
outsl
mov
mov
mov
mov
mov
jp
insl
jae
gs
fwait
adcl
imul
xchg
cmpsb
xor
daa
mov
pop
ss
push
ss
inc
lods
sub
jmp
sub
mov
mov
or
outsb
lret
xor
clc
push
insl
push
mov
jb
sub
jbe
out
pushf
pop
cmp
fisubrl
xchg
mov
jp
jecxz
int3
loop
dec
sub
xor
push
dec
sti
mov
cwtl
aas
lcall
push
dec
popa
loop
xor
pop
cmc
sub
push
jo
pop
ret
orl
and
test
les
pusha
insb
in
or
push
test
jae
shlb
popa
mov
jp
cmp
lahf
rcrl
or
lea
popf
mov
mov
jmp
pop
adcl
jne
add
mov
lea
sub
enter
fdivs
or
inc
insl
xorb
cmp
loop
scas
outsl
inc
jge
sbb
sbb
cltd
mov
mov
xchg
pop
mov
js
scas
mov
fdivr
add
sbb
int
mov
or
pop
and
jge
mov
dec
cmp
cmpsl
push
lods
mov
xor
movsl
mov
fs
call
cwtl
imul
fsts
adc
and
push
xchg
xor
dec
pop
push
rcrb
mov
push
mov
int
sub
adc
lock
sti
scas
sbb
out
ficoms
jbe
cmp
dec
and
lock
fwait
add
push
jmp
int3
test
xor
repnz
popa
jg
dec
add
adc
outsb
int3
nop
adc
add
mov
outsl
aas
pop
hlt
std
jmp
fisubs
ret
stc
lret
push
pop
or
adc
in
adc
jno
mov
stos
cli
jecxz
xchg
fldl
in
out
or
push
jae
rcrb
sub
jl
daa
xor
push
in
pushf
fs
int
fwait
lods
or
push
jo
sub
in
out
jnp
stc
cmc
mov
inc
xlat
pop
pop
in
mov
or
sbb
add
adc
int
sub
ret
test
mov
push
add
mov
mov
mov
mov
mov
fsubrl
and
inc
sti
sbb
aaa
xor
push
mov
enter
push
push
push
sbb
mov
inc
sbbl
and
into
jo
adc
mov
mov
clc
mov
test
pushf
lcall
sbb
das
insb
and
addr16
adc
cs
mov
lods
pop
mov
clc
pop
das
mov
aaa
pop
xchg
jg
cwtl
fdivp
mov
fldt
sti
xor
jl
mov
or
repz
xlat
aaa
cmp
lret
pop
bound
mov
push
enter
jmp
cld
in
inc
imull
push
andb
js
sti
addr16
adc
incb
push
cmp
push
dec
mov
cmpsl
or
cmp
add
and
loop
xchg
inc
enter
jl
sub
inc
pop
pop
mov
cld
sahf
out
adc
xor
push
jo
sbb
push
xchg
out
jb
lods
inc
scas
pop
mov
add
mov
icebp
adc
ss
pusha
cmpsl
arpl
fisubl
clc
stos
ds
aam
mov
pop
stos
mov
aad
mov
ljmp
xor
outsb
cli
js
sahf
call
push
jmp
mov
add
jb
out
push
inc
loop
in
push
jle
pop
jp
pop
sbbl
fdivrs
adc
pop
and
pop
inc
sbbl
or
push
jb
mov
jmp
pop
dec
xchg
jecxz
xor
fsubl
out
movsb
fisubl
je
or
in
pop
mov
push
pop
cmp
fbstp
adc
mov
dec
cmp
adc
ja
rolb
aaa
add
jmp
add
in
push
mov
jmp
fdivl
and
addr16
sahf
movsb
mov
sar
push
hlt
repz
push
sub
mov
sbb
xor
xchg
scas
mov
shlb
ficoml
inc
mov
repnz
sti
aam
arpl
movsb
add
cmpsl
fstpl
cld
jle
std
loope
dec
or
iretw
sbb
xchg
xor
lcall
lcall
cmc
es
pusha
adc
in
xchg
lcall
ja
dec
cmp
dec
aam
daa
jbe
pusha
fdivrl
aad
hlt
mov
sub
jo
mov
cltd
cmc
cmp
stc
adc
dec
sbb
mov
jo
add
mov
mov
js
mov
adc
roll
or
sub
dec
imul
jmp
push
data16
enter
inc
xor
ss
fiaddl
mov
xor
icebp
mov
out
cmpsb
lret
and
dec
lret
mov
push
fstpl
sarb
gs
add
bound
pop
jl
test
mov
push
push
xor
mov
and
aam
call
arpl
mov
mov
movsb
sbb
dec
xchg
sub
icebp
loopne
emms
jnp
jle
mov
lock
pop
mov
daa
repnz
cld
fistpl
jo
xchg
xor
dec
adc
add
pop
push
je
sbb
add
dec
lahf
xor
out
into
xchg
insb
cmp
sbb
sub
push
cmpsl
mov
cmp
shrl
js
dec
push
roll
out
lods
pop
sbb
repz
sub
arpl
popf
or
mov
movsb
in
fadds
sub
sub
shl
xchg
push
push
sbb
jl
jne
in
movsb
pop
ret
dec
and
pop
imul
loopne
dec
mov
pop
dec
pusha
movl
mov
xor
sbb
aaa
mov
pop
std
cmp
lods
fidivrl
inc
faddl
test
inc
fcomps
jb
rcrl
stc
rol
dec
jmp
div
xlat
jb
jns
mov
push
into
fidivrs
xor
sbb
lds
into
cli
outsb
data16
aas
mov
inc
iret
lods
test
popf
sarb
xchg
adc
fwait
movsl
sti
pop
dec
in
xor
insl
movsl
nop
cmp
xor
out
xor
mov
sbb
dec
xchg
or
mov
cmp
adc
cmp
mov
js
jne
dec
loop
xchg
pop
loope
jmp
xor
sti
mov
lret
in
xor
aam
into
push
or
pop
sti
push
adc
sub
es
mov
pusha
mov
mov
push
add
repz
adc
js
test
hlt
dec
xor
cmp
adc
and
sbb
push
into
sbb
pushf
or
inc
out
popa
roll
sub
jp
inc
sahf
push
pop
pushf
jo
inc
mov
icebp
ja
in
mov
icebp
add
sub
rcrb
xchg
inc
cli
dec
xor
add
and
adc
jae
adc
cmp
std
xchg
mov
test
xchg
fsts
mov
out
and
inc
lret
call
push
or
push
in
mov
pop
imul
mov
mov
out
inc
pop
xor
jg
xchg
aad
mov
inc
dec
mov
rol
negb
push
das
pop
les
add
push
sahf
stc
or
ret
enter
insb
jbe
mov
in
push
and
adc
lods
cmp
fldenv
sbb
mov
dec
lcall
test
mov
mov
rclb
sub
push
add
xchg
imulb
xchg
movsl
ljmp
lret
cmc
jmp
addr16
stc
xor
icebp
mov
jno
inc
jecxz
sub
sub
xor
iret
and
mov
jg
pop
inc
inc
fsubs
movsl
popf
int3
addr16
lods
movsl
scas
dec
js
lods
shrb
adc
add
pop
mov
push
cmp
adc
mov
mov
and
das
daa
cli
outsl
fwait
jns
out
xchg
nop
pusha
push
sbb
test
cmp
pop
js
js
cmp
xchg
pop
mov
bound
stos
or
sbb
ret
xchg
xchg
sbb
cld
and
or
xorl
jno
jecxz
mov
push
into
fisubs
push
jns
sahf
inc
scas
xor
fistpll
pop
mov
jbe
inc
inc
sbb
leave
ror
mov
je,pn
push
xchg
add
int3
dec
sbb
jl
fmull
jmp
xchg
xchg
xchg
fs
mull
das
test
pop
sbb
js
pop
pop
lods
mov
jae
inc
push
inc
jb
jecxz
mov
add
mov
xor
mov
push
pop
sbb
cmpsb
ret
test
jbe
daa
sbb
jbe
sbb
mov
clc
outsl
cmp
or
jb
pop
aam
mov
inc
inc
call
ljmp
pushf
mov
int
ret
cmp
fs
loope
mov
inc
fdivs
scas
lea
add
out
dec
je
js
daa
jnp
loopne
imul
cli
rcll
cmpsb
push
in
lcall
flds
cli
pop
adc
js
dec
test
or
lods
ss
mov
sbb
mov
lcall
inc
ss
testl
sub
pop
push
cld
mov
or
stc
dec
hlt
rclb
pop
jnp
sub
mov
cmp
loope
in
mov
xchg
jmp
loop
mov
mov
divb
mov
repnz
outsb
aam
aas
test
or
push
icebp
dec
loopne
mov
adc
pop
pop
mov
add
adc
cmp
ss
xchg
cltd
rcrb
repnz
mov
sbb
popf
mov
pop
sub
insl
jno
cmp
push
sarl
cli
fdivs
inc
sbb
cmp
pop
pusha
test
push
lock
or
jns
les
pop
push
mov
push
lahf
aad
adc
stc
insb
add
mov
push
fcoml
sub
addr16
fcomp
in
sti
inc
test
ljmp
bound
dec
iret
lcall
cmpb
pushf
inc
adc
imul
in
iret
pop
sbb
mov
loop
cltd
sbb
cmp
jle
mov
sbb
sarl
aaa
imul
xchg
cmpsl
ret
mov
out
sbb
iret
dec
inc
push
jp
movsb
scas
ljmp
ljmp
push
mov
jmp
adc
mov
mov
enter
mov
outsl
into
push
lods
push
lret
fists
repnz
nop
mov
adc
iret
popa
mov
fs
aad
les
inc
pop
test
sbbb
or
jp
rorl
jno
sbb
loope
sub
aaa
fildl
pushf
push
outsl
push
mov
sub
xor
sub
repnz
dec
insb
mov
dec
mov
sbb
sbb
fisubrs
dec
xor
mov
jecxz
cmpb
je
sub
cmp
repz
adc
add
and
and
lods
mov
cmp
dec
sbb
push
sbb
shrl
xchg
mov
mov
push
sahf
mov
pushf
or
sbb
cld
push
mov
pop
fnstcw
rorl
mov
add
and
nop
xchg
sbb
mov
test
jae
sahf
cmp
nop
lea
data16
or
loope
addl
sahf
cmp
mov
cmp
stc
mov
jo
lods
ja
jg
push
mov
xor
imul
in
data16
and
mov
cmpsb
sbb
cmp
mul
ds
mov
sub
xchg
add
je
mov
sub
jns
jne
imul
rcll
test
inc
jae
jecxz
inc
cmp
in
jae
daa
lea
fs
sarl
mov
loope
xchg
cmp
in
fwait
jg
rol
lods
nop
jo
cld
outsb
xor
imul
fucomip
inc
push
dec
push
sbb
mov
push
rcr
mov
out
gs
jp
push
push
and
dec
mov
adcl
mov
daa
mov
insl
sub
fistpll
and
mov
negb
lds
jmp
mov
insb
movsl
push
lret
push
xchg
mov
add
mov
cmp
into
xchg
subb
push
pop
or
aad
inc
cmp
sti
dec
pop
dec
movsl
fildll
mov
xor
push
test
sub
fcomps
vmovsldup
lret
cmp
lods
jo
negl
cwtl
lahf
or
xchg
xchg
mov
testl
outsl
pop
pushf
mov
jge
jle
xchg
cltd
nop
cmp
rcrb
fwait
mov
ljmp
ficomps
push
into
into
stos
test
mov
orl
aam
mov
popa
popa
mov
pop
sbb
push
fs
jne
rcll
cmp
scas
add
adc
xlat
in
xchg
in
daa
enter
loop
outsl
xchg
pop
xor
or
push
in
mov
je
repnz
sub
into
aas
cmp
testl
lcall
adc
insl
aas
stos
aaa
test
jo
fcom
push
pop
sbb
mov
shlb
mov
push
jno
in
cmp
adc
dec
in
mov
dec
add
dec
and
lea
daa
ret
sub
outsb
test
mov
aaa
and
data16
pushf
adc
js
xor
add
dec
nop
xor
pop
lret
dec
mov
xor
pop
adc
lahf
js
out
jmp
or
lret
ja
aam
ficompl
dec
xchg
stc
sti
mov
loope
and
xchg
cmp
es
in
xor
fisttps
sahf
fimuls
xchg
or
cmpsb
sbb
pop
jno
fbstp
sub
lods
sub
ss
and
hlt
pop
outsl
adc
sbb
movsl
jne
mov
cmpsl
mov
movsb
push
out
inc
gs
mov
sub
cmp
mov
in
xchg
jmp
xchg
xchg
xor
stos
cmp
mov
or
push
cmc
mov
xor
cld
pop
add
mov
mov
and
mov
xchg
in
sub
mov
pop
jge
fdiv
jge
cmpsl
and
es
mov
cmp
or
add
stos
push
lock
jae
in
pop
lock
adc
lea
mov
in
mov
lret
cmp
lret
pusha
cmp
lea
jbe
lcall
adc
rorb
clc
add
xor
adc
shll
push
sbb
outsb
test
push
jbe
jne
iret
fnstenv
jo
inc
jnp
push
loop
cwtl
outsb
out
cmp
jmp
or
ret
mov
mov
inc
in
ja
add
xchg
xchg
adc
mov
gs
xchg
dec
xlat
mov
mov
inc
ds
sub
cmp
push
inc
lods
sbb
or
mov
xchg
cmpsl
pop
push
scas
pop
xor
xor
inc
add
hlt
stos
cmp
bound
test
cmc
ss
bound
popf
mov
int
and
mov
data16
js
pop
loop
push
mov
or
jae
mov
fildl
cmc
pop
xchg
push
sbb
shr
dec
jo
adc
inc
cmpsl
lods
jle
adc
out
ss
jbe
or
xchg
cwtl
or
lahf
shlb
cmp
test
dec
sahf
fidivl
inc
addr16
mov
cmpsl
stc
mov
xchg
loop
mov
jae
fsubrs
mov
xchg
roll
popf
mov
shl
push
mov
dec
xor
and
push
cmc
ror
and
jge
add
xchg
cli
pop
cs
jno
dec
dec
adc
cmc
les
dec
les
lods
hlt
push
ja
adc
je
negl
in
mov
push
jno
mov
out
arpl
sti
pushf
mov
push
push
mov
cmp
dec
jecxz
insb
pop
stc
mov
mov
iret
xchg
and
es
xor
jp
push
int3
lret
mov
xor
leave
dec
cmpsb
imul
fiaddl
out
xchg
mov
or
dec
stc
push
sbb
int
sbb
jnp
ret
inc
out
lea
or
mov
inc
pop
push
push
dec
jae
or
jg
mov
lret
push
lods
pusha
outsb
xlat
enter
or
lds
mov
xchg
pop
aad
movsb
adc
pop
cmp
mov
dec
inc
mov
xchg
pop
fsubs
mov
cld
iret
xor
in
xor
jp
popa
pop
inc
push
cmp
cmc
adc
mov
int3
cli
nop
xchg
dec
pusha
out
xchg
sub
jl
fsubs
sahf
test
fimull
mov
call
mov
fidivl
gs
sbb
sub
xchg
and
push
push
lcall
ds
inc
jmp
mov
popa
jmp
sub
aam
jae
out
rcrl
inc
daa
adc
mov
int3
lahf
mov
cmp
mov
jmp
mov
and
out
enter
xchg
and
hlt
psraw
mov
or
dec
and
popf
out
jnp
sub
fcoms
jnp
roll
bound
jae
or
xlat
cld
or
jnp
aam
clc
repnz
sarl
iret
out
clc
inc
lock
outsl
push
mov
xchg
mov
outsl
mov
inc
dec
pop
xor
mov
push
xchg
mov
mov
mov
dec
scas
xchg
dec
pop
faddp
imul
pop
mov
rorl
mov
push
sub
sbb
outsl
je
sub
fistl
les
sbb
cltd
sbb
rcl
js
dec
fimull
or
shlb
data16
sub
mov
adc
fsub
or
sub
or
loopne
sti
test
bound
int3
sbbb
mov
mov
sbb
push
inc
jecxz
sarl
cmp
mov
dec
adc
mov
push
jns
dec
xchg
push
jb
push
fdivs
jl
xchg
dec
lret
test
xchg
aam
mov
lea
push
dec
sti
and
mov
dec
push
push
push
fisubrs
roll
shlb
mov
sbb
stc
cmp
aas
push
jle
jmp
xchg
lret
sub
cmpsl
data16
mov
les
lret
insb
xchg
fcmovbe
jae
pop
enter
jg
xchg
negl
orl
jge
mov
cmpsb
mov
sub
and
aam
inc
pushf
jno
or
mov
mov
in
jg
popa
xchg
lea
outsb
or
push
jecxz
dec
or
lahf
int3
mov
push
sbb
movsl
adc
mov
xorb
cmp
xor
aaa
sbb
pop
or
jne
ret
jg
mov
test
in
je
dec
add
adc
mov
adc
xchg
mov
sub
and
cwtl
xchg
scas
sar
cmp
gs
insb
cmc
aam
sbb
jmp
cmc
fsub
int
push
xchg
or
inc
inc
ja
nop
ljmp
call
xchg
faddp
test
pop
icebp
xor
ret
sub
adc
pop
jnp
xor
imul
push
fistl
aad
add
xchg
lock
adc
xor
fcomp
cs
sub
pop
add
les
push
or
sub
flds
cmpsb
imul
in
jbe
xor
sub
push
xchg
rcrb
das
push
in
popa
xor
inc
sbbl
adc
push
adc
and
push
into
pushf
shl
pop
mov
sbb
mov
mov
xchg
ret
decl
loope
inc
loopne
imul
pushf
mov
dec
psubd
sti
fwait
adc
adc
hlt
dec
orb
gs
pop
push
jb
movsl
mov
ds
adc
sub
fstpt
add
jmp
sub
orl
sub
call
adc
sbb
xchg
mov
and
rcrb
test
cs
mov
jnp
dec
fprem1
out
int
imul
add
sbb
pop
cmp
mov
push
mov
sbb
iret
push
hlt
scas
lret
cmp
hlt
mov
loopne
ja
leave
pop
mov
cmp
mov
mov
sbb
movsb
dec
leave
pop
xchg
fmuls
jns
insb
sti
stc
pushf
pop
xlat
sub
ret
push
push
cli
sbb
adc
xchg
mov
xlat
adc
aam
sub
add
fs
scas
dec
lcall
jno
cmp
sbb
aas
fcoms
jbe
out
insl
fidivrs
test
cmp
dec
cmp
cmp
push
sub
jo
mov
pop
push
movsl
int3
push
mov
rorb
rolb
adc
push
adc
cmp
dec
test
mov
and
inc
inc
shrb
filds
ja
xchg
sub
data16
mov
or
add
push
fs
jo
add
mov
sti
iret
aaa
ljmp
mov
out
dec
cmpsb
pop
test
fcomps
dec
mov
dec
mov
xchg
ja
das
pop
out
outsl
xor
ficompl
dec
mov
mov
xchg
ljmp
loop
aas
bound
jnp
cmovl
sti
inc
push
incl
add
jmp
mov
jns
add
test
int3
pop
mov
popa
negl
or
insl
es
lds
xchg
or
push
mov
adc
arpl
push
cmpl
scas
and
and
fs
daa
nop
fidivrl
mov
lods
sbb
lods
mov
fwait
leave
xor
call
cli
int
mov
shll
std
negb
shrb
stos
in
mov
je
pop
daa
xor
out
in
pop
ja
adc
insb
loop
fcmovb
sbb
sbb
jno
jae
into
dec
mov
pop
pop
and
repz
mov
cmp
pusha
adc
fistpll
add
pop
jl
mov
lret
add
dec
cmp
xor
pop
push
push
fcomps
jae
out
ss
pop
xor
or
jo
mov
adc
mov
adc
movsb
mov
imul
out
push
nop
mov
push
pop
and
ret
jo
sahf
ret
mov
sarl
push
jno
jle
inc
aaa
xorl
add
aaa
movsl
cwtl
sub
subb
pushf
xchg
fcmovu
xchg
push
aaa
adc
sub
mov
dec
jb
daa
cli
pop
fbstp
push
adc
jle
or
add
sub
mov
adc
sti
jns
mov
stc
aam
stos
in
pop
je
cli
test
ss
mov
out
daa
mov
push
pop
lea
sub
and
ret
daa
in
mov
push
push
rcl
jmp
mov
cmp
enter
gs
add
shrb
pushf
in
mov
jecxz
cltd
sarb
fs
sub
notl
push
cmp
lea
clc
lret
ds
push
in
clc
cmc
and
jb
jp
insb
jecxz
out
sub
shlb
cs
adc
pop
xchg
iret
push
xchg
stc
mov
dec
cli
push
imul
mov
mov
adc
jl
inc
mov
xchg
dec
mov
out
inc
imul
inc
mov
push
out
mov
or
repnz
movsb
dec
int3
mov
mov
mov
lds
adc
xor
dec
or
aas
test
js
xchg
jecxz
mov
cmp
aam
push
xlat
sbb
out
test
cmp
fisttpll
rol
sbb
sub
scas
decb
aad
inc
inc
mov
ljmp
sub
lds
scas
inc
xchg
fisubl
pop
push
adc
test
mov
push
add
lret
arpl
shrl
xchg
gs
xchg
sar
adc
aam
cwtl
cmp
adc
or
fsubl
xlat
stc
push
pop
jmp
jmp
shr
dec
test
adc
pop
mov
das
push
sbb
ss
fisubrl
stos
int3
jno
enter
movsb
dec
xchg
cmp
mov
sbb
xor
das
xor
push
lods
mov
aam
push
int3
outsb
fmuls
add
mov
cmpb
push
mov
mov
out
or
push
shrl
push
das
or
inc
fidivrl
cmc
xchg
mov
pop
jns
jecxz
push
sbb
ret
mov
cltd
cmp
shl
push
push
jae
and
int
sbb
mov
lock
sbb
jge
xchg
std
in
leave
and
push
xchg
ljmp
or
cmp
jae
or
sbb
into
pop
inc
mov
mov
aam
mov
jle
sbb
outsl
add
adc
lcall
sbb
shlb
sbb
add
jecxz
rorl
nop
xchg
cmp
mov
xchg
popf
xchg
inc
outsl
shll
scas
add
ret
xor
popf
mov
jns
fwait
stos
pop
mov
fbstp
jne
xor
cmpsl
sub
pusha
std
mov
mov
jp
and
xor
mov
aam
sbb
jns
lahf
js
mov
rcrb
dec
rolb
loop
je
and
in
adc
repz
dec
sub
mov
push
or
ss
pop
imul
lods
jno
push
jne
int
cmpb
push
andl
xorl
jo
sbb
mov
xchg
adc
test
cmovae
add
scas
push
imul
arpl
and
inc
cld
mov
xchg
pop
xor
mov
imul
xor
mov
in
and
jo
data16
mov
shll
push
iret
or
pop
fsubl
add
pop
and
sub
inc
xor
imul
sub
mov
call
push
insb
outsl
notb
cmp
scas
or
out
xor
insl
add
sti
adc
sub
shl
fwait
in
push
repnz
jb
pop
inc
in
xor
shl
and
or
popl
int3
jg
cld
into
cmp
outsb
rclb
rcr
push
adc
imul
pusha
push
fbld
loop
fcoms
xchg
subb
cltd
mov
out
les
xor
iret
xor
pop
enter
mov
ret
cmp
fwait
add
aad
nop
adc
sbb
test
mov
mov
xchg
pop
rcr
fwait
into
pop
xor
inc
lock
inc
popf
xor
sub
cmc
jmp
ds
add
mov
xchg
out
pop
scas
jb
ds
mov
push
imul
fs
xor
fildll
cmpsb
push
lahf
xchg
aad
ds
lahf
cmp
call
mov
inc
pop
jno
xchg
inc
xchg
jnp
push
mov
cwtl
cli
pop
dec
ja
test
mov
outsl
xlat
fbstp
mov
mov
cmpsb
arpl
test
pop
inc
pop
cmpsb
jge
mov
popf
pop
mov
xchg
gs
fbld
xchg
sbb
dec
cld
or
dec
xor
aam
inc
inc
sbb
mov
sub
xchg
bound
in
jle
sub
stos
out
imull
stc
cmpsb
ror
sub
aam
sub
neg
sbb
cmc
ljmp
pop
iret
push
lods
cld
aaa
ss
adc
clc
mov
imul
lret
sbb
insb
adc
in
push
adc
cmp
xchg
mov
lret
dec
das
push
fprem1
inc
push
mov
add
aaa
std
mov
xor
mov
pop
pop
push
cmp
sbb
mov
mov
test
mov
and
add
xchg
rolb
dec
xor
pop
movsb
xor
xor
xor
outsb
pop
inc
insl
mov
mov
sbb
pushl
iret
xchg
jle
popa
xchg
xchg
out
adc
sarb
jmp
clc
or
call
loope
test
in
xor
mov
dec
and
pop
and
inc
in
call
sbb
xchg
or
stos
jecxz
lahf
sarb
int3
cld
stc
int3
lcall
fistps
into
push
cmpsl
jnp
xor
stos
push
cmp
mov
out
push
iret
xchg
pop
insb
fcompl
and
repnz
loopne
push
std
mov
out
xor
cmpb
sub
imul
xor
pop
lods
jae
pop
mov
or
add
stos
rcr
frstor
cltd
mov
decl
popa
push
adc
cmp
inc
sub
mov
cmpsl
push
and
jl
jge
test
jecxz
imul
pop
outsl
mov
xor
ficoml
mov
fldl
dec
lock
fdivl
movsb
ret
pop
fildll
mov
mov
jle
nop
hlt
push
cmpsl
flds
lcall
loop
pop
shlb
jg
scas
loope
jb
or
inc
popf
push
insb
cs
addr16
mov
mov
fwait
push
mov
scas
rolb
mov
dec
jo
dec
mov
sub
test
or
je
lret
mov
fidivs
mov
scas
imul
mov
js
xchg
add
mov
dec
ljmp
jno
jnp
imull
xchg
outsb
fisubs
inc
adc
and
push
and
fmuls
mov
push
stc
inc
out
test
xlat
into
xor
adc
ds
dec
js
mov
jecxz
dec
and
mov
mov
mov
xor
pop
lods
fsubrs
and
mov
push
mov
movsl
mov
std
or
inc
xchg
jno
bound
xor
ror
lcall
xchg
les
or
pop
xor
inc
cmpsl
outsl
cmp
rorb
dec
imul
inc
sbbl
loop
mov
test
rorb
pop
test
and
mov
fadds
jo
scas
cmpsb
daa
aas
adc
dec
pop
imul
push
mov
test
dec
fistpll
push
inc
adc
cwtl
ds
loop
xor
push
sub
add
mov
mov
cmp
lahf
fsubrl
jne
call
shrl
movsl
xchg
mull
mov
cmp
inc
jb
addb
shll
jmp
pop
in
fsubrl
push
pop
pop
or
xchg
fidivs
pop
cld
aad
mov
lods
xlat
and
imul
dec
mov
loopne
adcl
insl
pop
xor
xor
mov
fldt
and
sarl
cmc
sbb
ja
jae
mov
jnp
jle
mov
add
iret
loop
or
fwait
push
xor
shl
dec
pop
enter
mov
clc
orb
jmp
cmp
jg
push
in
mov
or
sub
or
xchg
lods
dec
add
add
outsb
mov
xchg
jmp
rclb
and
bnd
mov
cmp
push
cmpsb
mov
data16
test
or
mov
jle
dec
mov
mov
pop
jp
mov
ja
or
push
testl
out
fistps
inc
mov
cmp
nop
arpl
jo
push
mov
push
dec
notb
push
push
pop
fs
sub
lds
pop
insl
jg
test
sub
sbb
lret
inc
scas
add
pop
cmp
imulb
aas
jecxz
inc
push
mov
gs
arpl
ret
aam
push
lea
pop
jae
out
packsswb
inc
mov
repnz
add
call
pop
pop
out
adc
hlt
push
leave
pusha
jae
adc
insb
movb
mov
lock
aas
sub
pop
sbb
pop
outsl
and
dec
mov
sbb
or
cmpsl
dec
loop
popa
xchg
fmull
mov
movsl
bnd
scas
xchg
sub
icebp
push
cmpsb
and
sub
mov
lahf
adc
add
pushf
and
adcb
cltd
test
sarl
mov
fbstp
sub
pop
xchg
outsb
sbb
imulb
ffree
dec
faddl
call
lods
je
out
fcoml
fimuls
loopne
hlt
jae
idiv
jl
mov
push
sbb
mov
sub
push
sub
ja
cmp
xor
test
arpl
mov
and
sbb
add
hlt
aad
jp
mov
repnz
jle
push
lds
jge
mov
leave
push
sti
or
inc
sub
cmpl
outsb
cwtl
xorb
and
cmp
int3
mov
fidivrs
dec
and
xchg
shlb
pushf
orl
adc
mov
or
lahf
pop
popa
xor
ret
sbb
xchg
mov
push
push
add
rcrb
mov
mov
faddl
dec
out
mov
xor
pop
or
cmp
sub
and
mov
or
xchg
mov
jle
sub
add
cmp
cli
test
daa
out
lds
cmpsb
fmul
cmpsb
aas
and
pop
js
mov
cli
stos
xor
int3
gs
push
popf
ret
loopne
cwtl
jmp
xchg
inc
cmp
mov
xchg
xor
outsl
into
es
push
sar
repnz
arpl
mov
popa
fisubrl
sub
aas
jb
loopne
rcrl
jmp
pop
sub
add
dec
pop
push
fs
jmp
dec
sar
inc
add
fsubrl
sarl
adc
pop
cmpsb
mov
out
int
sbb
and
test
mov
mov
mov
sub
cmp
dec
inc
inc
push
test
jno
sahf
je
ficoml
sarl
in
cwtl
into
clc
dec
inc
in
test
pop
sbb
stos
arpl
das
fsubrp
mov
jb
pop
orb
mov
addb
sarb
add
stos
jne
sub
pop
jecxz
pusha
cld
cld
iret
lret
stos
xchg
add
sahf
inc
pushf
dec
push
outsl
inc
flds
inc
cwtl
xchg
pop
sub
punpckldq
push
jecxz
mov
enter
add
iret
scas
mov
orb
xor
mov
into
lcall
mov
mov
mov
jb
sub
rorb
push
les
or
ret
xchg
jne
ds
test
add
mov
xchg
dec
sti
push
fists
jne
or
mov
sbb
cmp
inc
lahf
int
mov
pusha
mov
sti
aaa
dec
into
das
in
in
test
xor
cmp
xor
jg
ret
and
adc
pop
sub
mov
hlt
mov
xchg
and
dec
mov
cmpltps
sbb
sub
loop
add
cli
xor
insb
mov
add
add
and
push
movsb
repnz
cmp
mov
test
jle
jge
mov
loop
fs
xchg
inc
xchg
xchg
in
adc
push
in
dec
jb
mov
icebp
lea
adc
fdivrp
jns
in
dec
sbb
idiv
push
mov
xor
stos
enter
mov
aaa
or
mov
mov
dec
pop
push
adc
jle
cmp
add
inc
mov
fnstcw
xchg
fwait
mov
ljmp
cmp
or
jnp
jg
add
cmpsb
bswap
mov
repz
xchg
xchg
movsb
loop
mov
dec
gs
or
lods
int3
sub
imul
pop
sahf
pop
jp
adc
aam
cltd
and
xchg
sub
mov
les
movsl
popf
fld
pop
fmull
pusha
sbb
stos
loop
decb
je
ds
xchg
cmpsl
test
test
mov
insb
add
dec
mov
and
out
andl
into
mov
pusha
mov
inc
inc
out
cmp
dec
stc
sub
add
lahf
jmp
pop
cltd
cmp
sub
lods
push
in
out
adc
pop
jnp
movsl
and
arpl
ds
jg
sti
lret
stc
cmp
fs
dec
xchg
xor
fists
xchg
test
cld
aam
xchg
cmp
data16
mov
mov
mov
test
rcrb
adc
add
xlat
out
sub
notl
sar
leave
lahf
inc
shrl
aad
dec
testb
xor
inc
mov
sti
scas
adc
repnz
or
add
cmp
push
les
stos
cmp
pop
aas
fisubrl
and
jle
pop
std
repz
andl
int3
adc
stos
adcb
xchg
jle
inc
enter
test
lret
xchg
repz
out
push
xchg
loop
mov
mov
jne,pt
je
mov
jp
xchg
mov
imul
or
add
ret
pop
and
pop
jl
pop
dec
and
lahf
mov
scas
jno
push
and
jno
xor
aam
cli
cmp
jmp
sub
lock
cmpsl
call
imul
ror
das
loop
adc
adc
xchg
jecxz
xchg
mov
lea
and
jo
mov
jnp
and
adc
movsb
pop
addl
scas
push
inc
jmp
mov
mov
les
lret
js
ret
pop
sub
sub
pop
jl
xchg
aas
cmp
xchg
icebp
mov
and
insb
int
fistpll
mov
adc
lcall
fdivrs
mov
dec
or
es
mov
pushf
out
and
push
inc
add
fstpl
loop
repz
idivb
cltd
shr
es
pmulhw
push
lret
or
js
pop
pop
test
ljmp
xor
push
jecxz
fdiv
out
jns
lods
out
sahf
add
cmc
jb
icebp
add
cmp
scas
push
mov
imul
clc
push
mov
sub
nop
loop
cli
fwait
mov
gs
add
sbb
stos
jmp
add
popf
xchg
mov
test
xchg
xor
bound
or
jp
call
add
dec
dec
inc
test
push
sub
push
js
sbb
lahf
or
cmp
or
push
and
or
inc
mov
cmp
repz
add
icebp
jns
push
mov
addb
mov
sbb
inc
mov
dec
fidivrl
push
mov
adc
lea
sub
inc
notb
pop
push
gs
das
scas
sbb
mov
jno
push
pop
test
push
jle
inc
sbb
xor
jg
sbb
das
lods
push
lahf
test
in
mov
dec
loopne
test
das
cli
jg
out
cltd
mov
mov
out
dec
cmpsl
cli
sar
adc
mov
int
pushf
cli
and
int3
sbb
pop
sub
mov
lcall
stos
arpl
sub
aad
and
jo
sti
stos
or
pushf
pop
xorl
sub
pop
sbb
add
lcall
xor
pop
fdivr
jnp
jmp
jecxz
rcl
xor
stos
mov
cmc
add
mov
cmc
xlat
sbb
and
cmp
es
insb
add
sbb
negl
sub
insl
add
ss
mov
in
mov
fisubs
in
fidivl
popa
push
int3
scas
jmp
lock
cmpb
pop
roll
mov
or
jno
call
mov
fmuls
and
test
rorb
ud0
leave
inc
mov
inc
aaa
data16
push
cwtl
cmp
lods
insl
sub
pop
add
gs
cmp
ds
add
lock
mov
xlat
ja
test
push
daa
inc
orl
mov
jg
dec
stos
out
and
fucom
jmp
cmp
sbb
sub
dec
mov
dec
mov
lret
insb
pop
cmp
testl
dec
cmpsl
ljmp
roll
mov
jge
pop
inc
add
repnz
rclb
rorl
jno
jecxz
shl
mov
call
mov
in
xchg
leave
jmp
jne
and
aam
pop
push
jne
push
loop
mov
jecxz
jb
inc
jb
jg
pop
or
iret
inc
and
and
push
adc
int
push
xor
aas
mov
shl
inc
fimuls
jo
jo
mov
fstps
stos
cmovnp
jmp
cmc
imul
jb
cmp
sbb
jp
mov
mov
cs
dec
stos
sarl
add
sarb
jg
or
pushf
inc
sbb
es
mov
pop
mov
ja
adc
xor
dec
lahf
stos
sub
mov
icebp
les
test
or
loop
stos
ss
xchg
testl
push
sbb
pusha
mov
mov
push
stos
mov
fs
adc
stos
mov
pop
in
fiaddl
adc
mov
push
pop
mov
push
push
popa
push
mov
daa
int
fiaddl
xchg
std
push
sub
mov
imul
std
stc
flds
sbb
shrd
lds
cmp
out
icebp
cli
out
addl
scas
loope
out
int
cmc
mov
into
cwtl
insb
jl
pop
cmc
push
add
daa
mov
jb
adc
fcompl
pushf
mov
mov
adc
fisttpll
cwtl
outsl
clc
sub
enter
cltd
movhps
movsb
mov
lock
cltd
fwait
movsl
adc
add
fldenv
movsb
int3
cwtl
fsubr
sbb
test
js
imul
fnstsw
pop
inc
mov
xchg
cs
add
repnz
ja
aas
dec
lock
cmp
dec
inc
push
mov
xor
sub
jo
aas
xor
mov
cmp
or
lods
pushf
cmpsl
movsb
divb
ljmp
xor
inc
add
mov
xchg
cltd
dec
icebp
fs
js
push
stos
int3
sbb
or
mov
movsl
int3
xlat
mov
sbb
imul
lods
pusha
pop
and
cmp
inc
lods
test
xchg
nop
adc
es
mov
or
sub
adc
sbb
mov
jo
cmp
repz
sub
rcrl
dec
lds
mov
pop
jl
rol
popf
imul
sub
sbb
lock
sahf
jae
pop
daa
sbb
out
adc
lret
lahf
bswap
sbb
sub
or
mov
insb
daa
mov
mov
adc
push
xchg
mov
pop
cmp
or
jbe
jne
sarb
push
leave
cli
inc
mov
mull
inc
pop
cmp
sahf
aad
lods
lret
mov
shlb
sub
cmpsb
jge
xchg
adc
popf
dec
push
mov
mov
fbld
xor
ljmp
push
push
jae
addr16
or
mov
mov
movb
cli
iret
cs
mov
enter
rcll
xor
clc
leave
pop
lahf
nop
js
xchg
pop
mov
add
lock
popf
jmp
or
mov
jae
mov
ljmp
push
shll
popl
aas
sub
push
lcall
push
jbe
insb
out
jbe
arpl
xchg
push
aaa
xor
leave
insb
ret
aaa
pushf
dec
dec
das
and
inc
hlt
fidivl
mov
pop
or
addl
movsl
sub
xchg
aas
int3
push
push
xor
cli
repnz
jmp
dec
lahf
sbb
add
adc
iret
call
xchg
out
insb
roll
mov
mov
dec
mov
test
mov
repz
fucomip
es
bound
sti
icebp
jno
hlt
inc
enter
push
fldt
insl
scas
pushf
jo
imul
fisubs
and
dec
dec
clc
int3
cmp
lds
out
rep
jo
adc
sahf
sub
adc
pop
adcl
bound
xchg
cmp
push
cmp
adc
mov
hlt
je
fisubs
jns
pop
sbbb
lret
cwtl
adc
xor
dec
cmp
rcl
push
cmp
jno
cwtl
mov
idiv
pop
push
mov
sub
insb
cltd
js
out
jmp
jg
sbb
iret
nop
push
rorl
add
xchg
xchg
xchg
pop
push
mov
sbb
adc
mov
mov
movsl
push
or
xchg
cmp
pop
fucomi
push
jge
nop
ljmp
jb
lret
pop
dec
stos
lods
imul
jle
outsb
frstor
and
test
imulb
xchg
outsb
dec
sbb
add
cld
adc
pushf
xlat
inc
sub
test
mov
inc
mov
shrl
or
xchg
sub
mov
test
pop
push
dec
and
les
sub
adcb
push
push
rol
xchg
int3
add
mov
sub
sbb
push
or
pop
loop
stc
in
adcl
outsb
imul
mov
push
popf
enter
sbb
sub
rclb
sbbb
dec
adc
jae
jle
cmp
sbb
mov
cmp
in
mov
dec
jne
cmovbe
pop
pop
mov
das
adc
pop
sbb
test
and
pop
sbb
adc
mov
movsl
hlt
pusha
inc
ja
push
pop
or
add
sahf
cmp
shrl
call
push
jns
xor
imul
sahf
loopne
iret
shll
pop
idivb
testb
cltd
fwait
pop
ss
cli
jg
rcrb
out
shll
outsb
dec
nop
or
lahf
int3
in
mov
xor
je
in
das
ljmp
into
loop
outsb
add
inc
dec
lahf
lock
movsb
shlb
push
lret
bound
pop
add
xchg
ja
call
xchg
dec
xchg
inc
enter
push
data16
pop
fsubr
fidivrl
add
sbb
add
xor
push
inc
xor
lods
aad
push
lahf
mov
jnp
test
push
and
or
loope
scas
add
or
out
xor
loop
jmp
sub
mov
loop
sub
ret
and
dec
xor
pop
cmp
mov
xor
jbe
inc
addr16
roll
call
pop
mov
adc
cmpsb
xor
test
pextrw
out
or
aad
add
mov
cmp
sti
mov
xor
push
cmp
shll
push
inc
enter
inc
sub
jle
lea
flds
push
sub
icebp
adc
cmp
sub
mov
imul
lock
shll
mov
hlt
sbb
aad
sbb
push
loop
push
jl
imul
xchg
int
mov
shll
fisttps
xchg
jecxz
addl
sub
and
mov
or
sub
pushf
jle
add
push
xchg
mov
add
jle
std
stc
cmp
insb
dec
mov
mov
in
in
shll
lods
add
in
aaa
les
paddq
xor
out
xor
stc
into
clc
scas
mov
add
xor
test
and
shl
adc
sub
mov
xchg
sti
mov
test
addb
and
inc
and
dec
cmc
rcl
add
pop
in
cmp
jae
lahf
dec
js
fsts
loop
fidivs
iret
test
xchg
jne
mov
ret
out
out
jp
adc
cmc
sub
push
adc
sub
clc
sub
or
fmuls
fidivl
lret
mov
mov
and
adc
and
rcll
fs
ret
sbb
stc
adc
mov
mov
dec
sbbl
or
imul
xor
jl
pop
pop
insl
cs
or
sub
xor
mov
ljmp
enter
mov
jno
and
dec
sub
mov
inc
add
mov
push
jae
test
rcl
xlat
into
stc
lret
adc
sahf
lahf
fidivrl
mov
aaa
loopne
jnp
and
sti
dec
push
pop
dec
pop
sub
jo
push
xor
cmp
mov
out
in
or
mov
repnz
scas
push
insl
insb
psubusw
xlat
dec
enter
fnstcw
test
int3
in
mov
pop
cmp
aaa
pop
in
mov
sub
ljmp
and
out
shlb
push
xchg
or
or
add
add
sti
lods
inc
addr16
fdivrl
cli
ss
ja
aaa
xchg
mov
scas
push
in
in
std
divl
cmp
cli
add
lea
aam
cld
adc
into
and
in
add
jb
loop
add
pop
and
cli
das
mov
les
dec
inc
dec
and
aad
mov
aad
xor
sub
ljmp
sub
je
jns
push
pop
xchg
punpcklbw
mov
or
sbb
orl
cmpsl
and
adc
roll
inc
pop
push
scas
lret
or
int
inc
adc
mov
and
sub
lahf
arpl
jmp
dec
xlat
jnp
jnp
adc
inc
test
or
test
ret
adc
push
and
jmp
lods
repz
and
cli
divb
divl
in
dec
clc
and
in
jo
mov
cltd
or
leave
sub
mov
jp
sahf
jae
bound
xor
inc
mov
out
icebp
and
std
iret
and
xor
mov
mov
jl
jmp
pop
repnz
clc
adc
pushf
lds
cmp
sbb
or
dec
inc
pop
adc
inc
or
sahf
iret
sbbb
mov
inc
pop
jmp
test
loopne
mov
adc
sbb
mov
mov
stos
xchg
or
bound
adc
inc
xor
mov
adc
push
fnstsw
loopne
in
inc
push
incb
les
push
sti
xor
addr16
sub
mov
push
cmp
pop
mov
xchg
or
push
test
out
cmpsl
xchg
inc
and
je
cmp
pop
adc
incb
shlb
int
cmpsb
sub
and
stc
push
adc
push
fwait
mov
lock
in
fcoml
aam
bound
xchg
fisttps
xor
stos
lcall
cmp
add
int
cld
cmc
mov
fcomps
or
adc
mov
xchg
mov
mov
movsb
push
int
call
xchg
ss
jmp
hlt
shll
cltd
add
mov
inc
cmp
inc
nop
ret
adc
and
bound
mov
insb
jb
outsb
popf
mov
pop
mov
rcll
cmp
push
jno
in
aas
xor
loop
ja
or
fs
or
lcall
clc
enter
jno
in
add
mov
std
mov
in
mov
mov
pop
mov
lods
adc
in
cmovbe
lods
inc
lret
pop
xchg
aad
clc
in
xor
filds
test
int3
int3
jp
xor
popa
aam
xlat
push
vmwrite
inc
push
out
dec
push
inc
idivb
fildl
inc
in
mov
pushf
test
bnd
js
cmpb
int3
mov
push
mov
pop
and
push
adc
lcall
and
ja
ret
mov
sbb
or
dec
pop
xor
push
add
mov
scas
gs
adc
pusha
xchg
shll
and
jmp
mov
out
faddl
sbb
push
mov
int3
out
imul
xchg
cwtl
nop
mov
mov
add
inc
repnz
sbb
mov
adc
add
test
sub
xchg
sbb
inc
inc
xchg
mov
or
sbb
aad
inc
ss
aad
add
dec
enter
popf
dec
mov
xor
aaa
gs
mov
fsubrs
test
xor
mov
cltd
push
fwait
in
outsl
xor
std
jl
inc
outsb
jo
mov
xor
lock
or
pop
data16
pop
int3
andl
testl
and
lds
int
les
in
popa
divl
add
sbb
fcoms
sub
cmp
pop
xor
enter
repz
inc
pusha
ljmp
mov
xor
sub
mov
push
pop
push
push
mov
js
sbb
shll
into
inc
xchg
ret
xlat
fwait
out
in
and
roll
cmp
jge
aaa
mov
outsl
pushf
cmp
cmpsb
dec
fidivs
popa
movsb
mov
mov
pop
popa
sub
add
shrb
push
sti
sub
pop
push
mov
out
cmp
xchg
mov
out
mov
xlat
arpl
cmc
dec
xchg
gs
les
sbb
std
out
xchg
sub
jge
lds
pop
push
cwtl
lea
pushl
mov
adc
stc
mov
bound
loopne
dec
out
test
jle
xor
nop
fwait
jne
and
push
or
pusha
mov
pop
dec
inc
inc
ud2
push
pop
pop
jp
bound
push
sub
das
sahf
adc
push
es
mov
or
sub
cwtl
enter
or
mov
and
push
test
clc
sarb
notb
cwtl
push
push
insl
push
outsb
inc
hlt
adc
cmpsl
test
lods
sub
loopne
pop
xchg
xchg
testl
push
in
shl
xchg
sub
mov
daa
cmc
shr
pop
sub
insb
xchg
or
fildll
lods
aad
push
jbe
ljmp
lock
imul
pop
mov
pusha
aam
add
subb
aam
js
pop
out
or
mov
pop
shrb
inc
sbb
mov
gs
push
iret
loope
filds
ja
orl
xchg
mov
xchg
aaa
jmp
out
es
je
cmp
bound
inc
and
orb
and
cmpsb
incl
sahf
cwtl
lahf
mov
aaa
sub
fwait
push
loop
fstpt
in
jmp
sbb
notl
adc
orb
iret
jp
scas
jmp
mov
bound
scas
ljmp
ljmp
outsb
pop
pop
jecxz
shlb
inc
adc
lds
test
mov
add
fidivs
adc
mov
cmp
mov
outsl
out
fsubl
loope
mov
inc
pop
repz
jge
sbb
cmpsl
sbbb
xor
adc
mov
test
loopne
or
scas
xor
stc
cmp
leave
std
jge
adc
scas
xchg
in
pusha
outsl
les
fnstsw
cwtl
xorps
ret
mov
mov
push
cli
out
lock
bound
test
aas
adc
adc
aad
scas
cmp
ss
mov
fildll
jecxz
add
mov
movsl
mov
xchg
repnz
xor
jb
out
jecxz
xor
pushf
imul
les
push
jnp
ljmp
je
lds
cmp
adc
and
movsl
insb
loope
insb
fldcw
outsl
lock
lret
xor
les
xor
cmp
or
rorl
mov
ja
loop
sub
addr16
aaa
mov
pop
leave
call
insl
pop
mov
mov
movsl
jnp
sti
sub
xchg
sbb
mov
scas
pop
pop
adc
sti
lods
mov
stos
adc
fdivl
mov
mov
rolb
insl
hlt
jge
pop
push
xchg
rcrl
out
jae
js
sub
insb
mov
ja
jecxz
jp
aad
mov
xor
adc
stos
pop
shr
ror
scas
dec
xor
test
aad
test
lods
inc
inc
dec
jo
mov
iret
lods
cli
hlt
push
cltd
sbb
dec
xchg
arpl
sbb
mov
sti
lods
mov
testb
lock
loopne
add
es
cs
adc
cs
pusha
stc
pop
repz
call
mov
ja
jp
xchg
cmp
mov
out
add
js
mov
stos
and
jne
inc
xor
dec
cmp
pusha
enter
jb
push
and
pop
lahf
jnp
scas
test
add
daa
xlat
outsl
test
add
bound
je
mov
cwtl
push
lods
push
xchg
mov
nop
push
je
rorl
jle
push
mov
add
push
xchg
sbb
ljmp
add
lcall
fs
addr16
arpl
sbb
leave
clc
mov
insl
push
push
repz
push
push
bound
in
out
push
xchg
mov
inc
mov
push
mov
stos
cmpl
mov
mov
lret
and
mov
in
add
cmp
add
fcmovu
dec
pop
out
cmp
jo
lahf
adc
out
inc
sub
loope
test
pushf
das
pop
and
push
addb
ret
sti
int
sub
and
imul
or
icebp
js
pop
dec
jbe
insb
rolb
or
jb
jns
cmc
add
mov
inc
testb
and
xchg
mov
notb
sbb
mov
enter
mov
xchg
cmpsl
or
inc
mov
mov
jg
lret
pop
xchg
aam
dec
mov
xchg
dec
jnp
hlt
add
xor
cmp
outsb
jmp
jmp
inc
aad
jne
inc
lods
es
and
jo
mov
mov
cmp
push
mov
push
iret
dec
adc
adc
sti
pop
lret
fwait
xchg
xchg
aam
and
mov
xchg
xor
or
and
into
cmpl
sbb
mov
orl
sbb
push
add
or
loopne
inc
lcall
insl
jp
test
xchg
mov
dec
scas
idivb
in
mov
in
dec
lcall
cs
inc
loop
push
push
repnz
push
das
xchg
or
testb
xor
adcl
inc
mov
sub
fistpl
jge
jecxz
pop
cmp
test
fldenv
in
cmp
xchg
xor
xor
aas
add
sbb
and
xor
in
ja
fcmovnb
sbb
ds
pop
xor
ds
out
in
fsubs
mov
shll
lret
and
sub
push
ret
dec
mov
lock
popf
fisubl
adc
pop
out
lock
xor
jb
sahf
out
pushf
lret
cmpl
pop
push
adc
ret
imul
add
popf
loop
subb
xor
clc
push
mov
dec
cmc
dec
fdivr
cmp
addr16
dec
inc
sub
cmpsb
push
and
ret
jg
stos
cmpsl
jns
loopne
enter
test
movsl
jbe
pop
lcall
or
inc
xchg
push
mov
pop
into
loop
jmp
cmp
popf
fcomip
inc
push
mov
in
cmc
int
in
jle
test
push
add
pop
pop
cmp
xor
pop
jae
add
cmp
push
sahf
leave
lcall
mov
cmpsl
cmpsl
add
mov
clc
popf
mov
sarb
repnz
loop
jge
pop
mov
popa
iret
mov
sbbl
jns
dec
ror
push
pusha
les
jo
mov
cmp
subb
dec
and
lret
fidivrs
dec
lret
cli
pop
shll
test
mov
mov
orl
popa
mov
lock
dec
and
cmp
sub
mov
pop
jne
dec
test
adc
ljmp
sub
repnz
imul
fs
jmp
jmp
cmpsb
xlat
mov
sub
mov
lods
sti
push
sbb
sub
mov
dec
out
mov
sub
mov
sahf
add
arpl
jp
xchg
dec
out
imull
jge
cli
mov
cmpl
aaa
fdiv
sbb
stos
cmp
xchg
andb
sti
adc
jae
ja,pn
pop
xchg
test
xor
push
aam
icebp
out
mov
and
mov
pop
jo
test
rcr
fidivl
je
add
or
jbe
mov
lds
repnz
sbb
test
ret
cmp
push
push
mov
pop
and
xchg
mov
aaa
mov
dec
sub
fisttpll
loope
cmp
jmp
imul
lds
xor
mov
notb
aaa
out
xchg
xor
adc
fildl
insb
jl
xchg
in
push
xor
std
sub
fstpl
xorb
xchg
jp
out
sbb
jb
cli
lahf
pop
orl
loop
daa
dec
pushf
mov
pusha
pop
adc
and
mov
fists
enter
cmp
jbe
adc
out
jle
push
shll
roll
sbb
dec
push
jns
jb
sub
xchg
sbb
adc
jmp
sbb
lock
inc
insl
adc
js
fdiv
or
dec
xor
jle
inc
xchg
pusha
mov
lret
rcll
mov
dec
ret
adc
and
sbb
adc
xor
push
mov
lock
adc
xchg
sub
cmp
sbb
aam
mov
sarb
fidivs
mov
daa
xchg
nop
movsb
and
out
cmp
fucomip
mov
addr16
xchg
xchg
mov
pop
add
and
test
cmp
push
lret
sub
call
cmpsb
rclb
lahf
inc
js
push
faddl
in
mov
lret
hlt
stc
int3
inc
ror
jns
dec
mov
icebp
push
xchg
rorb
insb
mov
add
dec
xchg
sub
push
les
int
xor
shrl
inc
das
push
mov
push
adc
xor
aam
call
nop
in
movsb
adc
call
shl
mov
sbb
or
inc
adc
mov
dec
cmpl
cld
dec
adc
jmp
and
mov
xchg
mov
cmp
lret
pop
pop
pop
add
rclb
dec
aas
jbe
jge
or
push
lret
adc
testb
mov
movsb
adc
xor
es
xchg
sbb
mov
js
sahf
lods
pop
xchg
fnop
data16
das
stc
mov
stos
mov
mov
out
addl
inc
lods
jno
aam
mov
shrl
notl
and
bound
cltd
mov
mov
lret
push
dec
in
xor
imul
fldenv
cs
addr16
shrl
jo
inc
push
jae
pop
in
mov
xchg
mov
and
std
out
scas
xlat
dec
xchg
xlat
std
jno
push
les
rcl
jno
xor
xchg
cmp
mov
dec
mov
int3
push
shrl
cld
cmpsb
pop
cmp
stos
scas
mov
or
js
jne
pushf
or
repnz
ds
out
push
lock
enter
outsl
cmp
xor
imul
rorl
loope
jo
cmpsl
fs
mov
mov
or
xor
sub
sti
xchg
test
ret
mov
fwait
daa
imul
das
cmp
push
dec
iret
pop
pop
dec
mov
mov
jno
fwait
rcr
test
cmpl
jns
lcall
push
sub
mov
and
aaa
aam
sbb
dec
and
jo
cmpb
sbb
dec
or
repz
jp
inc
test
adc
sub
leave
rolb
test
or
cmpsb
cmp
test
mov
cli
clc
fsts
or
mov
out
push
or
cmp
push
xchg
mov
or
iret
fwait
inc
jg
or
stos
and
inc
dec
xchg
test
mov
mov
jb
hlt
addr16
sbb
mov
sarl
loope
call
inc
cmp
test
mov
sarb
bnd
sub
gs
gs
js
pop
xor
xor
push
add
xchg
data16
outsl
adc
dec
xchg
xor
add
insl
xchg
inc
std
cs
int3
and
mov
lahf
fisttpll
and
push
adc
scas
pop
scas
sub
push
into
push
push
sarl
xchg
rcl
loop
push
lds
mov
jp
jo
mov
in
mov
or
add
outsl
jl
cmpsl
mov
mov
mov
sti
push
sar
xchg
pop
out
fs
aad
rcrb
mov
rorl
outsb
cmc
dec
pop
xchg
pop
lock
daa
test
andb
sub
mov
stos
loop
lods
std
xchg
jl
stos
mov
stos
jno
xchg
jle
or
pop
cmp
push
stc
aas
ja
fdivl
mov
rcl
dec
adc
mov
or
fldenv
nop
jl
add
imul
mov
and
cmpsb
jns
cli
inc
cmc
cmpsb
jle
cmp
and
call
ljmp
xchg
bswap
or
pop
in
dec
aad
mov
repz
xchg
dec
enter
xor
mov
xor
jp
jb
adcb
andl
mov
jnp
mov
dec
cs
aaa
and
jl
adc
mov
dec
pop
lods
sub
mov
out
mov
pop
xchg
in
cmp
cmpl
out
fnstsw
test
divb
xchg
imul
xchg
adc
jmp
ficoms
in
pop
xor
or
stos
clc
xor
loopne
lods
jnp
sub
pop
insb
pop
daa
lret
mov
xor
std
adc
ljmp
cmc
popf
xor
ljmp
repnz
pushf
inc
push
dec
jae
xor
aas
xorb
test
dec
repz
pop
mov
in
dec
push
sbb
xchg
mov
cld
add
popf
stos
dec
pop
pop
icebp
jecxz
or
ret
inc
cs
cmp
push
shll
ror
xchg
or
mov
xchg
cmp
out
pop
inc
sub
cmpsb
hlt
mov
loopne
and
push
lds
jmp
sbb
sbbl
sbb
cmp
loop
fdivr
test
add
mov
aas
add
shll
inc
sub
push
mov
xchg
lret
das
clc
ret
ljmp
aad
xor
push
or
addr16
test
insl
jecxz
movsb
insb
jae
push
sub
pshufw
push
pop
repnz
xchg
mov
lock
push
mov
sub
xchg
or
inc
mov
mov
and
out
cmp
and
stos
movsb
xchg
sbb
fucomp
das
icebp
cmc
jo
mov
loop
mov
scas
dec
pusha
cmp
jg
pop
dec
cli
push
out
mov
xor
pop
shlb
stos
pop
andb
out
hlt
fistl
mov
fs
mov
or
ret
out
arpl
in
lds
inc
jo
js
mov
xor
aas
jl
aas
inc
mov
cmp
fdivs
jg
dec
adc
fs
popa
sbb
add
add
cmp
push
cmp
testb
dec
mov
outsb
jae
lahf
insb
sbb
xor
push
faddl
mov
ficomps
mov
xor
in
mov
cmp
cltd
mov
lds
inc
cwtl
ja
sbb
sbb
into
mov
mov
ja
jl
ja
inc
fbstp
imulb
in
out
adc
fisubrs
nop
jl
cmpl
jo
mov
and
sub
fs
andb
dec
mov
mov
xchg
xor
shll
lahf
pop
cmp
iret
aam
mov
and
dec
rolb
imul
lcall
and
add
mov
inc
sbb
and
push
scas
aas
or
test
stos
pop
es
mov
test
cmp
push
stos
jle
iret
xchg
mov
sti
and
and
mov
aaa
jmp
push
mov
xchg
xchg
inc
mov
cld
js
shll
ret
dec
mov
cmp
or
xchg
inc
push
sbb
sahf
shlb
mov
and
xlat
outsb
ja
dec
xchg
pop
pop
add
dec
lods
mov
xor
lods
ljmp
sbb
add
pop
mov
cmpsb
mov
dec
sbb
outsl
dec
push
ret
sbb
cmp
add
call
xchg
mov
sbb
pop
jecxz
jmp
enter
mov
pop
add
icebp
xor
add
push
daa
xchg
aas
jp
jbe
iret
out
hlt
repnz
jbe
xchg
shr
ficoms
mov
xchg
fsubs
inc
add
in
lret
cli
adc
icebp
xor
xchg
push
dec
fimull
sub
xor
pop
scas
sbb
jo
add
shlb
mov
dec
push
cli
adc
inc
stos
aas
cs
repnz
imulb
sahf
jne
jne
push
cld
mov
dec
dec
adc
mov
jae
hlt
mov
sub
fimull
arpl
aaa
inc
mov
pusha
xchg
xlat
mov
push
fwait
mov
jmp
out
push
xor
daa
xor
xchg
pop
mov
xor
cltd
or
push
lock
stos
dec
test
push
pop
pop
xchg
inc
insl
cmp
cmp
xchg
mov
xchg
and
mov
push
xchg
hlt
jae
pop
popf
into
add
repz
scas
xor
imul
test
lods
repnz
push
mov
sbb
lcall
mov
std
lea
cwtl
inc
mov
adcb
sbb
loop
mov
adc
jp
repnz
cmpl
cmpsb
or
xlat
and
sarl
popa
add
push
ja
adc
push
mov
and
je
mov
cmpb
ret
jo
or
xchg
je
jg
pop
jmp
mov
lods
xchg
pop
ret
lret
mov
cmp
sub
stos
jb
or
xor
pop
dec
mov
das
lcall
or
jge
test
dec
mov
rcrb
jns
xor
pop
or
or
orb
loope
sbb
sub
inc
mov
out
xchg
sbb
pop
mov
or
insl
sub
push
ss
or
jecxz
in
xchg
sub
roll
lods
xlat
mov
xchg
pop
add
mov
js
jno
ss
jbe
sbb
cmp
xchg
test
push
lahf
nop
dec
jne
int
lahf
in
xchg
add
cwtl
shlb
inc
sti
dec
add
xor
jbe
pop
push
adc
lods
cmpsb
outsl
inc
mov
imul
pop
daa
or
mov
mov
cmpsb
push
cmp
testb
divl
popa
call
adc
adc
movsl
or
or
mov
je
pop
sub
xchg
inc
adc
push
cmp
jns
sub
rorb
jns
jg
outsb
ja
jno
ret
jbe
ds
and
and
xchg
cmp
push
jecxz
mov
or
cmp
adc
dec
push
cli
dec
sbb
test
call
add
aam
sub
adc
and
pop
sbb
adcb
jo
bound
arpl
shr
je
add
mov
test
mov
cld
add
jge
or
inc
popa
xchg
outsl
inc
mov
fsts
jns
loope
js
cli
lret
ret
mov
push
inc
push
sbb
mov
add
inc
and
das
sahf
out
xchg
dec
jae
add
outsb
in
mov
and
out
in
adc
fcoml
pop
sub
insl
ret
cmp
addr16
fimull
das
pop
out
or
adc
stos
ret
je
sbb
aas
and
pop
mov
dec
jmp
bound
mov
push
sub
push
jbe
pop
mov
inc
add
jmp
push
xchg
lcall
fildll
and
aam
popf
adc
jno
pop
and
cli
inc
push
add
icebp
sub
mov
das
or
mov
int
les
sbb
mov
jae
cmp
add
jnp
add
push
ja
stos
xor
cmpsb
sub
sub
lret
dec
jle
dec
jnp
aam
add
gs
add
mov
int
stos
or
xchg
push
xchg
fnstsw
xchg
push
stos
ljmp
xchg
pop
add
sub
movsb
mov
orb
loop
jmp
mov
inc
mov
addl
insl
mov
cmp
adc
inc
repz
xchg
push
loop
jns
push
test
ljmp
lret
cmc
xchg
popf
rolb
xchg
jecxz
or
pop
shrl
stc
add
cmp
int3
int
pop
xchg
mov
rclb
sub
xchg
aam
aam
mov
push
adc
leave
cld
push
test
test
cmp
sub
cmp
xor
mov
push
outsl
xorb
iret
movsb
fists
sarl
bnd
add
mov
jecxz
push
loope
xor
clc
cs
jo
out
jmp
popf
push
sbb
mov
mov
popf
cltd
mov
or
adc
aas
lock
sbb
and
push
adc
pop
cli
inc
pop
cmp
fisubrl
enter
lcall
test
js
push
mov
sbb
insb
stos
pop
insb
inc
in
flds
xor
out
test
pop
call
push
sub
adc
cmpsl
jns
pop
iret
jnp
mov
xor
lret
pop
push
jmp
fwait
in
adc
sub
add
movsl
and
push
scas
sbb
aad
mov
or
lret
hlt
dec
enter
jb
xlat
pop
addr16
pushl
xchg
sbb
xor
and
inc
ret
push
pop
mov
mov
jb
test
cmp
push
loopne
cmp
rcll
cmp
aam
cmpsb
jo
sbb
cltd
xor
jmp
arpl
pop
sub
popa
xchg
mov
ljmp
dec
arpl
push
arpl
mov
loopne,pn
ret
into
mov
sbb
clc
jae
pusha
clc
ret
fcmovnb
xchg
repnz
das
mov
add
jns
cli
add
je
sarb
pop
enter
je
bound
inc
clc
incb
outsb
repz
xchg
fwait
mov
xlat
jnp
int
inc
cmpsl
int
test
fldl
jb
shl
push
js
jl
rcr
shll
nop
inc
and
or
push
scas
mov
pop
jmp
mov
arpl
aam
adc
mov
inc
rcrb
mov
push
ss
sbb
sub
xor
cld
xchg
inc
push
pusha
push
out
inc
inc
stc
mov
gs
add
pop
mov
stos
or
aam
mov
in
ss
or
jns
outsl
cmc
add
out
addl
rcll
popa
xor
lods
add
aam
and
inc
and
jae
popa
cli
sarb
jg
into
leave
pop
sub
adc
xchg
mov
aas
popf
imul
mov
mov
addr16
je
mov
xor
movsb
mov
gs
repz
aaa
loopne
xlat
adc
xor
aaa
push
xchg
and
jmp
fwait
adc
loopne
leave
lret
sbb
pop
rcrl
xchg
xchg
push
inc
js
xor
and
jecxz
loope
inc
mov
mov
or
and
pop
shrb
cli
sbb
lock
sbb
sub
arpl
in
sbb
push
mov
or
dec
xchg
fwait
cmp
mov
jecxz
hlt
sbb
push
mov
pop
into
pop
faddl
xor
jbe
pop
dec
scas
mov
cmpsb
jl
js
pop
lret
shl
into
push
cmp
push
dec
cli
and
ljmp
pop
inc
add
mov
and
add
add
cwtl
add
mov
ret
push
rcl
je
xchg
dec
leave
jecxz
jns
mov
sub
adc
dec
pop
xchg
in
bswap
out
jmp
sbb
cmp
cmp
adc
jno
pop
pop
test
movsb
or
mov
sub
popa
gs
sbb
ret
aaa
ljmp
push
cmp
call
mov
dec
es
jo
adc
lcall
xchg
leave
orps
mov
sti
pusha
xchg
mov
inc
xor
cld
arpl
adc
mov
stos
sub
mov
aam
mov
cmp
sub
out
cmp
mov
shll
inc
adc
fucomp
push
dec
daa
dec
push
lods
adcb
mov
les
arpl
adc
adc
or
stc
fiadds
sub
andl
std
pop
loope
or
jno
adc
lret
jnp
mov
fstpl
loopne
ret
jg
dec
mov
movsl
cmp
pop
jmp
ljmp
outsl
movsb
and
imul
push
xchg
stc
imul
sbb
clc
inc
pop
je
inc
jno
imul
mov
mov
int3
fmull
jp
push
clc
jp
lcall
cmp
loope
jo
mov
mov
adc
inc
mov
mov
cmp
pop
xchg
fisubs
xchg
push
aas
push
jno
aaa
test
mov
in
adc
mov
cwtl
mov
cmpl
jp
cmpsl
push
jbe
or
imul
sbb
sub
sub
in
inc
fisttpll
mov
aad
js
sbb
add
decl
inc
and
je
xchg
scas
mov
mov
dec
adc
add
inc
mov
xchg
rcl
ds
jae
mov
cwtl
pop
inc
pop
add
sar
adc
sbbl
jnp
rorl
aam
pop
rcl
sub
fucomp
dec
jge
scas
pop
and
out
cmpsl
popa
push
scas
jl
add
ss
in
xchg
xchg
movl
jecxz
addb
mov
in
adc
lahf
rcll
scas
mov
xchg
loopne
in
or
mov
js
fmuls
rcr
popf
cmp
cwtl
pop
addr16
jecxz
scas
adcb
flds
scas
adc
cmpsl
sub
inc
imul
xchg
sar
mov
mov
notb
jns
xchg
jl
inc
inc
cwtl
mov
lods
inc
xorb
inc
repz
mov
test
inc
cwtl
mov
push
rolb
pusha
addr16
pop
out
push
push
out
loop
fs
cld
js
adc
xor
shr
mov
insb
push
mov
rcrb
lahf
gs
aad
movsb
pop
fnstsw
inc
out
jge
or
call
sub
out
jmp
xchg
or
pop
push
imul
insb
das
loopne
mov
adc
jb
push
ljmp
mov
in
push
pop
dec
lret
test
stos
das
fimull
pop
scas
incb
mov
mov
call
push
shll
lods
aam
out
nop
xchg
aas
mov
stos
rorb
lahf
in
cld
mov
cmp
aad
mov
add
pop
sbbl
add
mov
and
mov
add
mov
fldcw
pop
mov
inc
mov
xchg
dec
ret
ds
pop
xchg
pop
and
xchg
fisubrs
or
fistpl
or
outsl
dec
stos
orb
mov
push
xchg
cs
adc
cmp
jmp
xchg
call
mov
push
and
insl
push
stc
ljmp
push
mov
xchg
fldenv
shr
std
decl
stc
inc
in
ds
mov
or
mov
cmp
stc
mov
mov
ret
adc
mov
sub
fiadds
mov
xchg
xor
mov
aas
int
and
sub
xor
pop
xchg
out
imul
lahf
pop
lea
cmp
push
repz
xor
push
out
sti
push
xor
data16
or
sbb
inc
push
push
enter
out
sub
lcall
jle
sbb
in
fcmovne
jmp
in
cmp
jb
insb
lcall
cltd
cmp
mov
in
mov
or
dec
jbe
shr
out
adc
or
es
outsl
mov
dec
sbb
jge
mov
out
ljmp
or
sbb
insl
xor
mov
ds
jg
pop
mov
jl
sub
xchg
sbb
cmpsl
dec
add
movsl
push
in
jne
sar
mov
mov
les
inc
call
sbb
scas
stc
clc
mov
addr16
pop
lret
cmpsl
call
sahf
jno
dec
call
or
sti
jnp
sahf
icebp
das
jo
test
test
pop
dec
pop
mull
jae
or
sub
xor
lahf
adc
push
or
push
inc
mov
add
inc
cmpl
stos
int3
push
incl
scas
or
out
mov
pushf
lahf
notl
jbe
mov
or
sbb
jp
imull
sub
mov
fcmovb
or
sbb
sub
fwait
sub
arpl
mov
xchg
lahf
loope
pop
push
cmpsl
mov
fwait
jo
hlt
lcall
mov
cli
push
jecxz
ret
dec
pop
gs
fsub
cwtl
outsl
fstpt
mov
push
inc
push
xchg
or
xorl
adcl
jo
push
subb
fimuls
cld
cmpsl
or
scas
stos
cmp
or
lds
sbb
mov
jmp
ds
into
fldenv
fidivrs
ljmp
repz
xchg
mov
add
repz
mov
dec
pop
popf
dec
shrl
adc
aaa
push
adc
mov
ja
sub
pop
orb
dec
xor
aaa
or
lret
mov
dec
movsb
ret
jbe
inc
ja
push
inc
fdivrp
push
jae
lahf
das
frstor
xchg
adc
jmp
xchg
fsubs
sub
movsb
mov
and
pop
add
ss
push
jge
pop
outsl
aad
fstpt
enter
and
leave
fdivr
loop
xor
aaa
mov
xchg
cmp
xor
xor
lods
inc
cwtl
mov
inc
pop
jmp
xor
xor
mov
lock
repnz
xor
lea
xchg
dec
mov
add
setl
add
scas
jns
nop
xchg
xor
push
mov
sub
dec
and
mov
dec
daa
aaa
aam
sub
push
jae
shlb
xchg
or
imul
pop
adc
mov
repz
mov
cmp
xchg
popf
push
mov
jl
push
pop
lea
sbb
lds
dec
fcompl
sbb
enter
sub
dec
push
cmpb
pop
lock
adc
fisubs
int
cmp
fisubs
pusha
push
div
sub
pop
inc
sub
jp
icebp
dec
cmpsl
mov
ret
or
and
imul
iret
mov
xor
loope
and
jle
cld
and
dec
insl
int
add
out
push
fprem
movsb
add
int3
outsl
bound
popa
nop
dec
or
and
jo
mov
test
push
fs
out
orl
xchg
out
mov
imull
imul
cld
test
sarb
shlb
jg
test
sub
repz
mov
inc
leave
cld
pop
xchg
mov
mov
mov
lcall
shll
ds
xchg
xchg
ja
loope
addr16
es
mov
int
and
push
stos
and
sbb
mov
arpl
notb
gs
fadd
subb
insb
pop
xor
fnstcw
dec
mov
popl
dec
insb
push
or
xchg
sub
add
bound
in
xchg
inc
xor
lret
out
dec
or
call
cmp
lds
sub
stos
not
push
out
cmpsb
fisttps
cmpb
xor
sub
push
pop
sbb
sbb
mov
mov
add
test
xchg
jo
icebp
cmp
repz
jp
cmp
sbb
aaa
jmp
adc
jns
push
loop
mull
ljmp
fnstsw
in
sahf
stc
add
std
mov
adc
scas
inc
aas
jge
std
push
js
jo
imul
leave
lock
cmp
inc
xchg
sub
xor
psubusb
inc
out
in
sub
scas
mov
jo
iret
sbbl
cld
jmp
ret
je
cli
sbb
call
int
das
sub
dec
xor
add
mov
and
lea
push
adc
aam
jbe
ljmp
cmc
pop
push
mov
ret
fistpl
dec
jp
and
add
dec
notb
daa
fiadds
std
jge
xchg
pop
push
dec
pop
rcrb
mov
icebp
xchg
dec
xor
adc
pusha
jns
mov
ret
fmull
cli
pop
outsb
dec
push
iret
cmp
cli
adc
mov
bound
repnz
aad
pop
and
xor
adc
jae
xor
bound
cmpsl
lods
dec
xor
sub
adc
out
lahf
outsb
test
cld
xchg
or
adc
and
xchg
dec
cwtl
daa
xor
imul
shll
cmp
into
fld1
loop
in
cmpsl
sub
je
scas
sub
outsl
mov
mov
insl
inc
pop
pop
sbb
pushf
lea
cmp
push
shrb
insb
divl
mov
ss
jb
mov
push
mov
mov
push
insb
push
jbe
dec
ss
fs
pop
sbb
xlat
call
jge
xchg
mov
mov
sub
cmpsl
cmpsl
mov
sbb
fdivr
pop
inc
or
jo
or
xchg
loope
cltd
xchg
int3
fimuls
xchg
cmp
sub
add
clc
push
or
pusha
cmp
es
add
or
pop
mov
push
jo
mov
sbb
ret
mov
mov
arpl
mov
sbb
push
call
popf
clc
icebp
loop
jae
outsl
sub
mov
sbb
sub
popf
ficompl
jp
decl
repz
cmp
je
fstpt
ljmp
in
imul
loop
pop
fs
mov
push
sub
ss
push
add
es
fbstp
sahf
add
dec
inc
and
mov
xchg
xor
cmp
cmp
stc
sbb
jle
and
jno
inc
mov
pop
leave
negb
insl
fdivr
shlb
movsb
dec
scas
lods
xchg
lds
in
cmp
mov
insb
les
sbb
mov
ja
add
jae
xlat
lock
loopne
fdiv
clc
push
push
cli
xchg
adc
in
pop
std
xchg
push
jmp
xor
cwtl
gs
ret
iret
sub
aad
jmp
inc
xor
xchg
jno
or
sti
stos
jecxz
imull
sub
lahf
insb
aaa
sarb
inc
and
lahf
iret
push
mov
push
mov
xor
cmp
ljmp
shll
out
adc
out
xor
xor
outsb
pop
ds
pop
ss
inc
and
outsl
out
sbb
ds
dec
inc
xor
cmovno
stc
jecxz
push
dec
cmpsb
sbb
stc
mull
push
sub
sbb
pop
pop
xor
mov
fisttpl
dec
sbb
test
lret
cmc
jo
mov
hlt
cmp
jecxz
sub
xchg
test
adc
mov
insb
inc
or
leave
ds
sbb
out
int
pusha
data16
in
jb
shll
push
pop
jne
scas
xchg
cld
push
sbb
inc
stc
mov
rcrb
cli
cld
dec
icebp
inc
stc
adc
pop
ret
mov
cmpsb
mov
movhps
in
pop
addr16
mov
pop
lds
and
sahf
adc
dec
push
hlt
ret
jmp
jmp
imul
popf
push
out
cmp
cwtl
shll
cmp
jg
mov
shrb
ljmp
out
mov
adc
ret
xchg
mul
dec
mov
sub
fstpt
sbb
inc
mov
mov
mov
rcl
dec
fisubrs
adc
sahf
and
sti
and
in
dec
mov
inc
cli
mov
popa
fadd
fucom
mov
shlb
mov
push
push
int
pop
and
pushl
es
in
cltd
inc
pop
jle
xor
pop
inc
pop
push
lret
mov
xchg
fcmovbe
enter
aaa
mov
rclb
stos
fsubp
xorl
pop
mov
dec
cmpb
xchg
mov
test
push
enter
inc
aas
push
mov
cs
jae
pusha
ret
inc
sbb
subl
pop
and
punpckldq
imulb
mov
add
adcl
hlt
mov
add
mov
sbb
push
daa
dec
ja
repz
jmp
pop
xchg
pop
cmp
pop
scas
fnstcw
push
push
out
mov
mov
sbb
sti
jns
imul
adc
sbb
add
repnz
ret
bound
xor
call
add
push
push
js
popf
mov
in
loope
rcll
loop
data16
xor
repnz
mov
repz
les
jl
gs
rclb
pop
add
jnp
add
mov
lods
mov
fcomp
jae
out
push
int
add
mov
mov
in
fdivrs
cmp
dec
cmp
jp
cmp
ljmp
dec
jecxz
inc
sahf
sti
fldenv
xor
dec
pop
jl
std
xorl
jg
jg
xor
add
add
out
push
push
cmp
sahf
mov
loopne
cmp
rclb
ret
add
and
movsl
shll
jmp
mov
xor
lret
loop
repz
jns
insb
push
dec
ds
mov
sbb
rorl
xor
jb
addr16
jns
push
std
mov
std
fsubp
xchg
mov
xchg
cmpsb
loop
gs
or
test
cmp
push
test
jbe
push
and
leave
jo
mov
mov
gs
aaa
fwait
push
jo
or
call
fbld
call
adcb
mov
pop
xor
adc
out
repz
pushf
popa
int
fidivrs
sub
mov
outsb
jle
pushf
mov
jl
inc
addr16
adc
sbb
xor
lds
or
shlb
test
test
fsubrs
push
in
push
fisubl
rcl
push
subb
inc
loope
sub
test
movb
cmpsl
xchg
aad
xchg
pushf
mov
xchg
out
inc
addr16
inc
adcb
mov
cmc
incl
inc
arpl
inc
fcmove
bound
jp
or
in
cmpb
cmp
popa
outsb
dec
jle
or
push
inc
sub
lea
push
or
jle
or
add
out
pop
mov
xlat
push
lcall
cmpsb
sub
push
mov
out
jns
lahf
sbb
cltd
pop
mov
xor
inc
or
nop
cltd
outsb
sbb
inc
lods
roll
push
repz
mov
into
dec
iret
jle
xchg
and
leave
sbb
push
iret
popa
sar
sarl
ja
inc
insl
cmp
or
xchg
xlat
sarb
out
adc
cltd
mov
mov
sbb
add
xor
inc
js
mov
rcr
push
adc
stc
add
in
jae
pop
mov
cwtl
inc
push
inc
jg
xchg
jp
pop
mov
mov
mov
pop
lahf
les
cmp
mov
mov
adc
adc
je
icebp
das
push
out
popa
das
lahf
adc
rclb
aaa
lods
pop
pop
call
mov
notl
jle
jg
addr16
mov
mov
xor
push
stc
aaa
aam
add
fnstcw
repnz
daa
aad
fs
mov
sbb
mov
aas
stos
jg
enter
mov
loope
or
push
je
jp
test
jb
or
pop
repnz
jg
mov
mov
int3
fsubl
cmc
or
ret
jo
lods
mov
dec
lahf
dec
cmp
adc
hlt
faddl
inc
clc
dec
cmp
in
stos
jle
lods
hlt
lods
mov
rol
inc
mov
sub
push
mov
sar
cwtl
mov
sbb
xchg
fisubl
lret
fdivp
fsubr
xchg
in
jle
stos
and
pop
rcrb
pop
out
xchg
xchg
out
hlt
aad
insb
cmp
push
pop
and
es
in
mov
scas
pop
ss
jle
or
push
fisubrs
nop
aaa
mov
jmp
pop
shlb
push
popa
sbb
xcrypt-cbc
cmpsl
push
inc
imul
add
jno
sub
lret
sbb
adc
aaa
lea
stos
mov
cmp
scas
lods
dec
push
jbe
mov
fmuls
stos
cmp
or
xchg
or
fmull
stc
in
push
xchg
and
mov
mov
cmpsb
outsb
push
leave
es
in
scas
popl
outsb
mov
cmpsb
cmp
stc
sub
cmp
cmpsl
clc
pop
int
sahf
notl
inc
jns
cmp
out
mov
jb
push
les
test
fidivrs
psrlq
mov
iret
push
sub
aas
cmp
mov
mov
adc
jg
rolb
and
es
mov
test
mov
or
inc
mov
mov
xor
inc
and
divb
xchg
mov
idiv
popa
in
dec
and
xorl
mov
out
pusha
cmp
jne
jne
sbb
jl
andb
jno
icebp
xor
xchg
filds
lea
divl
jmp
std
cmp
or
push
pop
pusha
xchg
push
repz
pusha
mov
test
xchg
inc
int3
push
das
and
or
mov
xor
inc
pop
mov
cmpsl
push
or
in
mov
or
sbb
nop
or
testb
inc
pop
and
nop
mov
les
repnz
fidivl
push
adc
int
jle
jp
test
mov
pushf
jecxz
jns
sub
xor
dec
pop
xchg
push
xchg
rcrb
icebp
es
ljmp
xchg
pop
xchg
push
fisttps
in
sub
sub
loop
insl
pusha
orb
iret
mov
push
add
in
sbb
jg
cmp
xor
fcomip
mull
push
ljmp
mov
jne
shll
jp
add
stc
mov
arpl
mov
addr16
mov
movsl
mov
mov
add
xor
bound
cmp
jl
bound
and
or
mov
pop
sub
xchg
pop
xor
lret
or
fwait
nop
push
fs
fbld
sti
push
jmp
lods
mov
lea
or
dec
xor
incl
gs
scas
orl
fs
iret
xchg
adc
aas
and
rcll
ja
stos
or
adc
orb
cmp
push
out
cmc
add
mov
cmpsb
and
jl
popl
popa
dec
leave
dec
xchg
pop
jl
mov
lods
pop
xchg
push
shrb
push
mov
mov
aam
push
lds
cmc
cltd
setnp
jno
cmpsb
sbbl
dec
or
xchg
jl
inc
leave
loop
daa
or
lahf
inc
dec
outsb
push
mov
cmpsl
sub
mov
pop
das
inc
test
ret
sahf
lock
shrb
and
mov
loop
fwait
pop
je
pop
imulb
dec
xchg
dec
jnp
pop
in
pushf
repz
inc
xchg
mov
add
mov
xchg
in
insl
inc
xchg
dec
jmp
ficoms
push
out
lock
decb
push
addr16
daa
leave
or
lods
inc
and
xchg
xor
xor
xchg
adc
mov
or
inc
lods
mov
mov
insb
cmpsb
mov
pushf
int
mov
data16
rcpps
test
shr
movsb
rclb
mov
xor
push
sbb
out
das
test
mov
mov
jge
jmp
xor
mov
and
cs
aad
add
in
loope
adc
sub
test
aam
lahf
bound
and
mov
scas
and
fimuls
dec
jo
adc
fisubl
push
incb
and
fmuls
mov
pusha
fstpt
adc
loopne
popf
or
pop
sbb
jo
out
aam
sbb
insl
aad
rcll
clc
cli
or
scas
sub
jmp
adc
or
or
or
cmp
cmpsl
dec
mov
mov
jmp
data16
fcoms
out
jl
imul
jmp
sub
jne
enter
cmpsb
pop
dec
cmp
rorl
jmp
mov
mov
push
or
jl
push
xlat
fstps
adc
jmp
bnd
dec
sbb
pop
push
sub
cmp
xor
pop
pushf
in
xchg
fstps
scas
xlat
jnp
jmp
ret
xchg
insb
push
in
test
rorl
adc
incl
xchg
in
insl
mov
xor
imul
xor
push
imul
in
jg
je
movsl
jb
jl
js
gs
push
pop
out
fcmovu
xchg
xlat
mov
adc
mov
outsl
lret
mov
mov
cmpsl
shrb
test
sbb
or
aas
pop
dec
loop
adc
sub
mov
ja
xchg
mov
add
adc
inc
jb
sar
inc
lods
gs
dec
or
roll
cli
mov
mov
mov
mov
mov
aad
movsb
pop
inc
mov
mov
adc
fstpt
insl
repnz
mov
jno
add
jne
repnz
xor
mov
clc
pop
nop
imul
cmp
dec
iret
mov
mov
jns
xchg
or
ret
rcr
imul
lods
push
push
das
scas
aas
into
push
sahf
lret
and
adc
imul
fwait
jmp
xor
mov
xchg
push
cld
sbb
add
mov
loop
fmull
in
cmovns
xchg
mov
mull
push
int
add
in
xor
mov
pushw
dec
lods
mov
and
add
mov
scas
fwait
and
jle
mov
or
movsl
cmpsl
add
scas
pinsrw
push
gs
cwtl
pushf
popf
xchg
sbb
or
rcl
inc
js
pop
test
adc
sbb
aaa
jns
mov
pop
inc
push
das
inc
sbb
inc
negb
movsb
popa
mov
das
jmp
test
sub
cmp
ljmp
mov
sub
mov
dec
mov
mov
xchg
mov
or
scas
mov
jb
mov
jb
or
xchg
adc
mov
sbb
insl
sbb
dec
ret
in
subl
hlt
sbb
test
push
pop
mov
test
into
cli
lret
ljmp
sbb
mov
aaa
cwtl
testl
and
cmp
movsb
int
pop
rcll
jmp
pop
test
push
fiaddl
add
movsb
sbb
cwtl
adc
xchg
push
scas
repz
shll
out
inc
in
int
sti
popa
sahf
xchg
das
outsl
adc
sbb
aas
dec
cmp
sub
sub
pusha
std
fimuls
loopne
cmp
lahf
pop
push
cmpl
pop
fstps
sbb
add
mov
cmp
cmp
adc
mov
int3
jmp
jo
xor
stos
subl
ret
sbb
push
add
jns
aas
sub
or
mov
mov
pushf
mov
jge
cmpl
pop
push
push
sub
push
fcmovnbe
movsl
sbb
adc
into
push
push
fdivl
ja
jnp
xchg
dec
lahf
dec
cmp
and
push
cmp
jo
repnz
xchg
xor
stos
jns
mov
mov
inc
stos
mov
call
cmc
cmp
rcrb
movsl
sub
arpl
mov
lods
or
push
in
sub
ja
mov
scas
cmpsl
push
jl
imul
mov
test
fcomp
jae
ss
xor
outsb
sub
and
xor
loopne
fldenv
gs
hlt
adc
fs
ds
sbb
imul
mov
jge
sbb
fidivs
inc
insb
mov
andb
mov
xor
movsl
pop
enter
pop
or
scas
add
sahf
mov
jecxz
sub
jecxz
or
inc
test
out
and
loop
sub
repnz
push
shll
shll
movsl
enter
mov
enter
jns
adc
mov
aaa
decb
pop
and
adc
xor
mov
int3
loope
or
push
mov
popf
jno
xor
and
arpl
hlt
jb
sbb
xchg
mov
jns
ljmp
cmc
sub
jo
imul
ljmp
and
cmpb
icebp
adc
inc
jle
ljmp
cld
mov
mov
xlat
aaa
xor
pop
cmpsb
xchg
push
mov
inc
pusha
in
jg
out
shrb
and
lret
stc
cmpsl
fs
loopne
outsl
inc
pop
xchg
mov
imul
cmpsl
xchg
repnz
or
jle
xor
pop
rcrb
inc
bound
and
add
jecxz
xchg
inc
jb
popa
sbb
fsubrs
test
in
add
mov
cmc
gs
and
adc
mov
jo
mov
add
int
push
xchg
or
aam
lret
jmp
mov
aam
test
push
leave
jo
pushl
mov
push
les
and
push
mov
mov
lods
clc
mov
adc
sbb
nop
jns
test
int3
shll
sub
das
lods
xlat
sti
movsl
jp
mov
sbb
cwtl
jp
loopne
popa
mov
jnp
or
pop
xchg
test
or
mov
jmp
lret
cmpsl
fimuls
comiss
dec
aas
cmp
push
sbb
push
popa
subb
jb
mov
jo
mov
movsl
fldt
and
mov
ljmp
push
les
in
or
inc
mov
pop
inc
and
mov
push
cltd
stc
mov
mov
movsl
rclb
loopne
fsub
inc
fisttps
inc
jle
mov
imul
mov
mov
xor
or
imul
or
cld
rcl
adc
test
push
insb
add
and
cmpl
sbb
rcll
sbb
dec
mov
stos
enter
xchg
jne
scas
pop
pop
mov
or
je
test
xor
in
leave
mov
movsl
adc
push
push
insb
add
shl
xlat
dec
les
shl
fld
xchg
push
push
sub
loopne
jno
aam
dec
and
hlt
ja
iret
in
push
pop
test
cmp
out
xchg
cmpsl
xchg
loopne
add
pop
push
and
pusha
add
insl
jns
fdivrl
push
loop
scas
add
mov
sbb
roll
lahf
sub
popa
repz
push
loope
test
pop
std
js
test
insl
pop
mov
test
div
inc
add
mov
loop
shlb
push
jae
or
sbb
mov
jp
add
inc
adc
push
sbb
xlat
jns
mov
in
aam
adc
aad
adc
or
test
jg
into
dec
into
inc
adc
iret
insl
sub
dec
push
cmp
sbb
mov
pusha
sbb
adc
pushf
rcr
fnstcw
rol
call
bound
jnp
mov
push
jb
inc
inc
es
les
inc
push
lret
sti
outsl
cmp
jmp
lret
fsubrp
push
cmp
cmpsl
out
cmp
stos
movsb
xchg
out
daa
mov
sub
mov
stos
mov
into
je
ja
clc
into
jmp
xchg
and
inc
ss
inc
sub
mov
cwtl
push
stos
ret
cmp
rorl
push
jecxz
xchg
cmpsb
jae
jo
out
or
or
ja
mov
mov
mov
ror
sarb
xor
jp
adc
les
fsts
add
repnz
pop
and
mov
or
test
dec
pushf
scas
dec
addr16
dec
and
dec
mov
ror
mov
fidivs
test
hlt
lret
ret
push
jb
das
xchg
sub
in
fisubrl
insl
cwtl
sahf
pusha
iret
adc
mov
push
push
xchg
xchg
scas
cmpsl
leave
add
pop
jne
push
fs
inc
ljmp
int3
jmp
push
daa
mov
lods
aad
ror
sbb
int3
cmpsb
test
inc
les
mov
jg
jb
cmp
jge
inc
lcall
sub
popa
cmc
out
dec
or
daa
push
adc
xor
sbb
sub
xchg
mov
mov
ret
cld
inc
push
cmp
mov
push
mov
stos
cmpsb
xor
xchg
add
xchg
out
mov
mov
add
call
out
adc
mov
stc
sub
ret
stc
inc
cmovno
and
fucom
inc
and
std
mov
out
xor
imul
adc
imulb
xlat
mov
pop
repz
in
movsb
jg
inc
outsl
dec
dec
jmp
notb
out
inc
cld
mov
sub
mov
xchg
jle
sbb
cs
xchg
mov
push
xchg
cmp
add
daa
xor
dec
inc
fwait
popa
sbb
repnz
loope
es
std
imul
lahf
cltd
iret
pop
insb
sbb
or
mov
jo
mov
cmp
add
dec
add
mov
xchg
mov
push
dec
popa
mov
repz
sbb
test
jne
jge
incl
sub
pop
aas
xchg
leave
fwait
nop
out
out
lods
xor
loope
imul
dec
addb
cmp
dec
arpl
jp
cmpsl
test
orb
jbe
adc
faddp
call
jg
call
cmpb
push
xchg
mov
add
int3
jae
lcall
lret
cmp
popa
lds
xor
cmpsb
cmp
add
mov
pusha
dec
pop
xor
add
fs
fidivs
xchg
push
ret
add
test
daa
loop
repnz
mov
xchg
rcr
mov
test
lea
movb
add
stos
inc
mov
arpl
mov
and
jecxz
jmp
xlat
pop
aad
lcall
jb
and
xor
lock
and
cmpsb
push
das
ret
pop
and
adc
pop
fadds
scas
ljmp
and
mov
cmp
fwait
inc
shll
push
push
xchg
mov
xchg
pusha
and
jg
scas
shll
into
sbb
or
int3
stos
into
mov
xchg
pop
xchg
xchg
cld
xor
outsl
mov
mov
pop
test
fwait
dec
cmp
cmp
test
xchg
cmpsl
pushw
dec
or
loope
cli
sbb
add
jl
jg
sbb
inc
je
push
dec
out
jne
dec
sbb
push
sahf
je
sub
mov
mov
jp
mov
xchg
push
sbb
xchg
adc
lods
ja
jbe
sbb
jb
call
aaa
out
daa
ss
push
fsubrl
jnp
stos
mov
je
adc
or
mov
or
test
pop
mov
mov
or
lods
pop
leavew
cmpsb
inc
xchg
imul
and
push
jecxz
iret
pushf
jp
inc
ror
push
adcl
push
pop
cmp
jnp
xchg
mov
push
pusha
dec
cmp
fwait
or
add
leave
jecxz
jg
sbb
pop
xchg
jae
or
xor
int
je
aad
repz
sbb
jns
imul
popf
xchg
movsb
das
sbb
and
inc
stc
ret
shrb
jae
sub
add
cmp
pushf
and
test
push
sub
fbld
jbe
jno
cltd
arpl
jae
xchg
daa
outsl
sub
das
and
or
loope
es
inc
loop
mov
fdivrl
imul
bound
xchg
xchg
pop
mov
pop
and
loope
sub
arpl
fisttpl
jge
call
mov
movsb
ret
dec
lret
mov
fsubs
push
mov
subl
dec
inc
mov
enter
pushf
je
push
xchg
or
xchg
sbb
mov
fidivl
in
or
mov
adc
imul
mul
test
mov
fwait
cmc
or
aad
lds
icebp
push
add
add
aas
pop
fiadds
pop
adc
repz
adc
and
mov
adc
jae
cltd
push
stc
ljmp
mov
sbb
mov
imul
roll
dec
icebp
fldenv
mov
cld
outsb
and
dec
push
lret
dec
inc
test
in
call
mov
lods
mov
mov
test
mov
jl
cmp
mov
shll
sti
cmp
jp
mov
xor
callw
push
pop
cmp
inc
xorb
jb
in
repz
cld
push
mov
data16
dec
gs
hlt
jle
add
mov
fisttps
je
cmp
or
mov
addr16
cmp
mov
data16
jae
aas
stos
mov
xlat
push
cli
and
lods
mov
lret
push
fcmove
iret
jnp
loope
or
or
and
les
cmpl
push
enter
std
es
movsl
stc
popa
add
mov
lods
inc
cmp
dec
aaa
sti
in
dec
mov
xor
in
shrb
fstps
add
sbb
sti
pop
lods
clc
push
xchg
mov
fmul
xorl
neg
mov
les
dec
ret
iret
push
fmul
fisubrl
rcll
mov
inc
loope,pn
push
fs
shr
lods
or
sub
mov
ret
jge
rep
dec
js
sbb
adc
test
lods
dec
push
aas
pushf
stos
test
stos
es
or
int
cmpsb
aas
mov
shrl
ss
push
dec
xor
ret
movsb
scas
adc
clc
push
sub
cmc
into
sbb
ret
pop
xor
scas
sbb
xchg
lds
fwait
jbe
scas
pop
test
jle
xor
pusha
xchg
mov
mov
pushf
shlb
lds
pop
push
jecxz
sub
pop
mov
dec
mov
cmpl
clc
mov
jge
cs
out
lods
push
sbb
inc
dec
cli
std
aad
icebp
jne
test
stos
aad
mov
dec
or
iret
fbstp
xchg
adc
mov
pop
and
jl
jae
movsb
inc
pop
jle
add
loopne
dec
push
mov
dec
push
xchg
or
out
loope
fnsave
in
sub
out
xchg
fs
mov
adc
test
cwtl
jnp
pop
or
scas
or
jmp
js
ljmp
loop
ret
push
push
jne
cld
mov
and
xor
adc
dec
push
mov
cmp
or
push
aaa
push
pop
pop
stos
sti
mov
mov
sub
mov
loop
aad
xchg
decl
sarb
je
and
adc
ret
lock
inc
xchg
and
sbb
dec
push
popf
nop
cmp
cs
jo
xchg
add
test
loopne
push
repnz
jae
out
xchg
insl
adc
subl
aas
dec
add
push
mov
xchg
inc
fiadds
jne
scas
icebp
or
dec
imul
mov
push
aam
out
outsb
in
jge
jl
xchg
leave
popf
push
sbb
scas
mov
inc
es
jecxz
pop
hlt
loope
jbe
insb
je
jne
xor
fildll
in
mov
lret
clc
jbe
xor
cwtl
xchg
data16
repnz
sahf
in
adc
add
mov
and
dec
mov
lock
test
sbb
xor
add
add
add
cmp
or
xchg
pop
call
test
lods
clc
les
sub
xor
imul
and
xchg
out
sub
dec
or
push
mov
push
ret
pop
xor
cmpsl
mov
pop
mov
cs
out
das
xchg
adc
jp
jne
jbe
mov
sbb
in
adc
clc
ficoms
sub
test
xchg
jae
pop
sub
addr16
sti
lock
or
and
inc
scas
push
subw
ret
je
xor
or
jg
inc
push
jge
xor
mov
mov
xor
repnz
adc
lock
xor
push
inc
mov
movsb
jp
mov
fwait
hlt
roll
mov
xchg
sbb
fs
fwait
es
call
jnp
xchg
addb
xlat
sub
sub
pop
or
test
cltd
add
sub
popf
pop
cmp
ret
mov
pusha
orl
orl
fidivrl
cmc
pop
gs
loop
xor
and
mov
into
inc
out
gs
push
mov
jne
or
ljmp
je
test
scas
cs
inc
enter
mov
push
mov
outsb
sub
enter
dec
insl
mov
pop
xorl
dec
lds
pusha
lahf
xor
pop
ret
and
cmp
mov
adc
sti
cltd
mov
mov
insl
data16
lds
ss
or
dec
pop
imul
xor
sti
pop
popf
sub
lcall
jmp
add
pop
pusha
movsl
push
mov
pop
sub
sub
inc
dec
inc
push
fsubl
in
jnp
aam
jno
cli
jo
add
and
and
xchg
test
stos
sahf
clc
imulb
cmpsb
or
stos
mov
push
popf
mov
inc
insb
and
incb
add
xor
jge
cltd
lock
popf
loope
scas
aaa
ffreep
imul
or
jb
movsb
sub
mov
repz
push
pop
pop
sub
bound
std
push
or
lock
xchg
sti
jns
xchg
or
lods
int3
jg
add
pop
in
jb
inc
cmp
jnp
pop
xchg
mov
sbb
sub
add
xchg
jecxz
mov
or
mov
adc
dec
or
fisttpl
adc
sbb
test
gs
cwtl
les
lcall
push
aas
mov
rorb
pop
mov
flds
mov
jmp
and
pop
testl
dec
dec
int
fimull
cmp
fldt
call
cmp
fdivrs
or
hlt
pop
push
mov
enter
pop
fldl
and
aas
lods
mov
je
mov
outsb
mov
pusha
ficoml
jo
cs
dec
test
fidivl
ret
insl
daa
sbb
mov
pusha
sub
mov
jle
daa
jbe
pop
pop
xorb
outsl
pusha
andl
xchg
cld
jne
pop
andb
sub
cwtl
cmp
js
fwait
stos
mov
adc
out
sub
pop
adc
scas
cld
inc
xor
mov
mov
outsl
ljmp
movsl
shrl
pop
push
pusha
jg
jno
mov
lock
daa
out
inc
cwtl
lods
inc
in
fsts
xor
mov
fwait
test
mov
insb
pop
dec
pop
adc
loope
outsb
out
cmp
not
xchg
xor
mov
cwtl
arpl
lcall
mov
jnp
xchg
in
pusha
jb
pop
lret
sbb
hlt
inc
xorb
pushf
ror
xor
cmpsl
popa
sub
and
test
xor
int
dec
out
je
fldt
jl
and
xor
and
into
ret
and
fwait
sub
cmc
mov
enter
adc
cmp
pop
dec
sub
mov
imul
add
ja
das
add
add
outsl
cltd
ficoms
out
addl
push
inc
mov
lret
jns
mov
xor
jno
ds
les
int3
imul
jg
adc
fistpll
repnz
mov
add
call
pop
inc
dec
adcb
cs
imul
push
inc
and
jle
sbb
sti
in
sbbl
mov
fs
cmc
mov
jecxz
mov
je
push
std
pushf
xchg
cmpsb
bound
xor
adc
movsl
pop
or
or
adc
in
push
pop
mov
mov
loope
xchg
sub
xchg
jmp
mov
shlb
dec
inc
dec
sub
add
mov
mov
pop
out
mov
sahf
scas
mov
repz
int
mov
out
fsubrl
jbe
inc
inc
testl
adc
pop
sub
pop
pop
or
int3
in
push
outsl
xchg
inc
xor
or
imul
loopne
sbb
dec
stos
lahf
inc
aaa
jo
icebp
xchg
sub
pop
mov
loope
mov
cwtl
hlt
adc
jecxz
lods
je
fldl
movsl
jl
cmc
dec
push
mov
add
mov
mov
lds
mov
push
sbb
add
mov
dec
aad
jge
dec
mov
sub
out
sti
iret
add
out
mov
sbb
imul
adc
jo
in
pop
fadds
rcll
mov
xor
adc
mov
add
mov
inc
fmull
inc
mov
cmpsl
gs
push
scas
mov
out
push
mov
jge
lea
gs
jle
and
test
add
fs
jg
je
in
repz
aas
movsl
movsl
inc
ljmp
sbb
call
js
push
shr
inc
pusha
loop
or
and
pop
dec
inc
pop
xor
repnz
dec
mov
mov
fildll
or
insb
out
mov
movl
sbb
adc
nop
and
xchg
mov
shll
aad
in
adc
mov
sub
sbb
jb
nop
inc
nop
lods
lods
in
or
pushf
xchg
xlat
addr16
or
dec
aaa
mov
sbb
jmp
mov
mov
or
ret
adc
fcoml
fwait
pop
push
mov
std
dec
jp,pn
mov
int
sub
inc
rorb
pop
push
std
inc
jp
pop
jg
xchg
sbb
or
cltd
sbb
add
mov
mov
mov
xlat
dec
fs
aam
cmpsl
xchg
mov
imul
faddp
daa
add
pop
mov
lahf
push
mov
xorb
in
test
inc
sbb
cmp
or
stc
push
loopne
pop
or
dec
push
jmp
sti
jge
push
or
lods
and
sub
jbe
adc
lret
sub
fucomip
push
jg
dec
stos
js
inc
mov
mov
mov
mov
inc
insl
mov
test
jmp
pop
jo
shl
testb
mov
cmpsb
cmp
add
adc
pop
test
int3
xchg
mov
nop
inc
loopne
jb
xor
ja
cltd
jb
add
ds
in
xchg
test
adc
sysret
pop
aam
sub
imul
pop
lret
enter
mov
mov
mov
enter
fs
out
mov
xchg
imul
push
int
sarl
std
sub
mov
andl
loope
aaa
add
xchg
int
mov
call
out
arpl
arpl
adc
inc
movsl
cltd
adc
mov
pop
call
subl
stos
xchg
out
jle
iret
jecxz
xchg
sbb
push
out
int
nopl
or
mov
cwtl
mov
jne
nop
pop
lahf
ds
and
inc
mov
aad
add
and
repnz
dec
cwtl
testb
mov
in
mov
test
jle
xchg
out
jbe
lods
out
cmp
lcall
adc
add
sbb
loop
xlat
js
cmpsl
mov
ds
test
jmp
and
jnp
mulb
pop
mov
cmp
push
shll
fistpll
xorl
test
into
mov
xor
popf
adc
inc
inc
sti
xchg
push
imul
jmp
add
stos
div
jbe
in
in
jae
lods
aam
das
loope
fwait
sub
fsubs
mov
adc
ret
push
arpl
fstpt
pusha
arpl
xchg
cmp
fcmovnu
xchg
test
inc
lret
add
dec
sbb
xchg
lods
in
shlb
xlat
cltd
nop
out
cmp
outsl
sbb
fs
xchg
adc
cwtl
sbb
nop
aaa
xor
rcrl
test
and
dec
mov
imul
lods
cmpsb
jg
aas
test
xchg
jo
insb
cwtl
push
rorb
xchg
mulb
inc
xchg
and
or
test
jo
jp
jecxz
pusha
jmp
cmp
or
inc
cmp
rcll
out
xchg
pop
decl
ja
or
add
mov
andl
jmp
mov
push
dec
fwait
aaa
sub
inc
adc
or
aaa
loopne
fs
add
idiv
sub
push
sahf
lds
push
aad
mov
dec
or
jle
adc
and
loope
xchg
add
xor
mov
mov
add
inc
leave
jge
xor
fdivs
hlt
jo
fcmovb
clc
dec
cmpsl
jmp
push
xrelease
fwait
add
test
cs
jb
jmp
push
cmp
in
ds
movsb
mov
fiaddl
and
pop
stos
lret
adc
and
cld
sub
cmp
ror
emms
inc
mov
scas
add
or
fidivrl
lods
lret
loop
adc
inc
push
pushf
lods
pop
dec
xchg
mov
xchg
mov
push
cltd
lds
sti
xchg
jns
loopne
lods
mov
iret
inc
rcl
lea
neg
adc
xlat
mov
fsubl
jb
fdivrl
int
push
loope
and
stos
push
lods
pop
insl
and
sbb
insl
cmp
push
rolb
es
test
dec
mov
xor
add
pop
negl
ljmp
fidivs
mov
leave
add
sbb
adc
jb
rclb
stos
push
out
jp
mov
push
hlt
ss
jb
mov
cmpsl
adc
mov
push
psubusb
jbe
aas
jae
rcrl
sub
add
bound
push
push
xchg
aam
mov
add
ds
fcoms
inc
in
test
negl
push
incl
popa
sub
xchg
aaa
sbb
cmp
push
bound
test
in
adc
cld
cld
pusha
push
out
lcall
sub
mov
outsl
cmc
lahf
xchg
cmpsl
jns
testl
lods
cmp
vcvttsd2si
stos
pop
inc
sub
push
inc
shll
sbb
mov
aaa
lods
lds
xchg
lds
out
or
mov
xchg
jmp
jg
mov
jmp
pop
mov
mov
add
xor
out
nop
loop
nop
mov
shlb
inc
push
xor
push
gs
push
xor
jns
or
gs
mov
cmp
xchg
movsb
scas
sub
pop
jge
push
add
imul
jl
dec
xorl
xchg
in
ljmp
dec
sub
or
cmp
adc
xchg
pusha
test
out
arpl
aas
mov
lock
add
std
fidivrs
adc
cli
je
xchg
mov
push
jne
out
insl
je
cmp
ret
in
inc
adc
add
fdivrl
cmp
pop
xchg
inc
mov
sub
jo
in
xchg
sahf
cli
repnz
adc
sti
push
data16
je
inc
sub
scas
xchg
cmpl
sub
mov
push
cwtl
nop
jne
mov
adc
fwait
pushf
jl
mov
pop
cmpsl
push
adc
mov
or
jl
and
repz
addr16
mov
lds
mov
and
mov
adc
cmp
fisttpl
mov
call
mov
xor
stc
lea
jns
or
fldt
jne
or
add
bound
roll
test
arpl
push
std
out
fiaddl
lods
adc
adc
adc
fisttpl
pop
icebp
cmpsb
fldl
call
jmp
enter
add
push
jns
pop
lret
enter
int
push
div
mov
fbld
and
push
pop
addr16
aad
cmp
gs
xchg
loop
shrb
mov
fdivl
or
push
lods
adc
into
rcrb
gs
cmp
dec
xchg
aas
add
xchg
fimuls
mov
push
aaa
test
ds
mov
mov
std
jle
sbb
pusha
stc
lret
aam
inc
mov
add
imull
and
dec
xchg
insb
xor
test
and
push
rcrb
les
aaa
push
scas
jp
jecxz
ljmp
jo
daa
lcall
lret
pop
cltd
xor
mov
sbb
lret
lods
adc
shll
out
mov
mov
stc
int
inc
cwtl
pop
repnz
insl
repnz
inc
fcmovbe
dec
imul
sub
sbb
aas
cmpsb
xchg
sub
sub
fwait
addl
sub
imul
out
dec
loop
xor
mov
outsb
add
pop
cmp
push
fdivrp
dec
imul
sbb
sub
jmp
inc
imul
popf
mov
mov
adc
and
test
movsl
or
and
int
jae
cmpl
push
lret
gs
jge
cmp
dec
sbb
insl
fcoms
ds
js
jg
xor
aas
cmpsb
test
ja
add
jecxz
mov
das
push
pop
cs
push
leave
or
adc
shl
repnz
cmp
rcr
stos
lret
pop
mov
cs
inc
int
cmp
mov
pop
xchg
jae
mov
push
mov
popa
stos
add
jb
and
orb
mov
add
mov
jns
in
in
int3
cmpsb
push
sub
fsts
shrb
dec
inc
test
ss
ret
xlat
push
push
lock
cmpb
cmp
jne
mov
xadd
sbb
xchg
mov
roll
cmpsb
arpl
loopne
mov
addb
notb
sarb
loopne
inc
pop
cld
jnp
pop
sub
mov
or
and
jecxz
aas
je
xchg
mov
sbb
sbb
arpl
int
cld
inc
clc
xor
mov
subl
mov
cmp
lret
add
pop
pusha
arpl
repz
loopne
pop
imul
mov
sub
lcall
xorl
push
pushf
mov
mov
imul
fsubl
inc
mov
mov
pop
sub
jne
js
push
arpl
cmpsl
in
add
out
sub
lods
js
mov
stos
jmp
stos
mov
sbb
adc
push
inc
stos
sub
ja
loop
cwtl
lret
adc
jne
xchg
test
popf
nop
jnp
or
fisubrs
lahf
mov
flds
push
stos
adc
cwtl
loopne
push
xchg
or
adc
dec
pusha
sub
and
or
xchg
mov
outsl
in
enter
leave
loop
push
mov
jl
rcrl
sub
insb
sti
icebp
jp
jae
add
inc
fildl
pop
daa
cltd
add
scas
pop
es
out
in
mov
or
jecxz
sbb
push
fnstcw
movsb
push
repz
pusha
and
xchg
and
aam
arpl
cmp
in
nop
and
or
mov
push
or
les
je
lahf
mov
lods
lret
xchg
shr
fsubp
rcr
lcall
jle
in
cld
xor
mov
and
cmp
mov
xchg
bound
push
mov
push
cmpsb
adc
cwtl
jb
sbb
or
and
movsb
mov
and
aas
fbstp
adc
mov
int3
pusha
fstpl
push
push
adc
cwtl
popa
adc
cmp
adc
mov
and
sub
add
jmp
inc
push
hlt
add
loope
push
mov
pop
mov
jecxz
int
sbb
daa
lea
bound
mov
aas
or
ret
out
dec
xchg
push
cmp
js
scas
mov
popf
or
iret
jmp
pop
nop
outsb
pop
mov
imul
mov
adc
mov
cs
lds
xlat
in
outsb
enter
lahf
call
sub
fisttpl
sbb
sbb
add
mov
lea
pop
sub
jns
xor
jae
sub
pop
xchg
arpl
ffreep
in
stc
mov
xor
xchg
push
frstpm(287
lcall
notl
fucomp
xor
or
xchg
xlat
pusha
pop
mov
dec
pushf
lock
pushf
roll
and
xchg
and
jno
pop
mov
leave
jns
je
jmp
jb
ret
pop
or
aad
out
xchg
mov
push
lret
adc
scas
mov
sub
inc
push
xorb
xchg
mov
push
xchg
jb
mov
repnz
mov
cmp
jbe
cmp
adc
cmp
pop
cmpsl
jp
xchg
inc
cmc
loope
push
xor
es
test
ja
je
mov
hlt
repnz
xchg
daa
test
rcll
push
sub
or
sbb
mov
vpackssdw
in
pop
or
mov
jmp
pop
into
jecxz
sub
inc
inc
das
test
push
ss
loopne
push
shll
mov
aam
add
push
repz
and
jmp
bound
adc
push
dec
cmp
loope
pushf
rorl
arpl
jb
and
or
xlat
lahf
mov
and
mov
repnz
stos
mov
cmpsb
pop
aad
mov
shrb
adc
cmp
sti
stos
js
repnz
aas
hlt
adc
jne
xchg
stos
imul
cmp
shrl
adc
cltd
les
int3
xchg
pop
in
pop
lcall
jg
sahf
out
push
inc
sub
push
repz
adc
sbb
pop
and
popf
mov
popa
push
fnstcw
jl
insb
push
and
sub
jb
xchg
sahf
jecxz
xor
mov
mov
jmp
test
or
cmp
bound
xchg
jp
clc
loopne
cmp
and
ja
int3
jp
adc
sbb
jecxz
lods
cld
daa
cmp
outsl
enter
pushf
in
mov
cmp
lret
bound
daa
fildll
loopne
jp
xchg
xor
dec
out
mov
sbb
stos
sub
lods
xchg
dec
adc
pop
in
movsl
mov
lret
jg
mov
cld
loopne
mov
repz
test
jl
xor
jo
cli
out
xor
xor
dec
xchg
mov
cmpsb
ljmp
jae
lahf
mov
ljmp
movb
jg
cwtl
inc
jns
xchg
lahf
or
mov
fnstenv
dec
pop
repnz
cmp
aas
adc
aam
into
cmp
adcl
iret
mov
je
xchg
push
rolb
sub
xor
dec
xor
repnz
jne
push
sbb
test
fisubrs
push
xchg
push
subb
mov
adc
sti
ror
push
aaa
pop
push
adcl
lret
xor
push
xchg
push
icebp
dec
call
or
push
das
add
ret
mov
sti
add
jnp
lock
xor
or
aad
mov
popf
out
roll
sbb
lds
hlt
sbb
repz
es
jb
xchg
and
jg
sub
pushf
xor
push
and
dec
jmp
out
loopne
loopne
fstpt
out
loopne
xor
add
fwait
cltd
xchg
push
lea
outsb
sub
jbe
add
xchg
test
inc
popaw
xchg
mov
icebp
movsb
jmp
or
push
stc
jbe
jg
rcr
jns
push
in
jns
sbb
enter
ret
jno
push
int3
xchg
out
inc
and
sbb
xor
test
ss
ds
jno
scas
cmp
fdivrp
xor
cmp
mov
mov
mov
rclb
sbb
gs
mov
jne,pt
push
lock
leave
rclb
jae
push
sbb
outsb
xchg
cmpsb
cmp
clc
insl
or
mov
or
push
adc
sbb
cmp
mov
add
pop
ret
mov
inc
mov
mov
cmp
andl
cmp
mov
out
add
aam
xor
stos
or
jae
dec
and
xchg
and
xor
lret
movsl
sbb
js
xchg
gs
jg
movsb
std
dec
cld
fldt
push
scas
mov
nop
xor
jae
mov
fs
sahf
stos
inc
bound
cs
cmc
out
push
cs
out
scas
jmp
jns
das
ret
add
out
cld
mov
sbb
and
ja
aad
fadds
xor
call
shrb
push
mov
mov
push
test
cli
adc
inc
lahf
shll
pusha
mov
leave
hlt
insl
mov
pushl
sahf
ljmp
fistpll
popfw
sar
pop
popa
dec
adc
cli
inc
adc
cmpsl
mov
filds
daa
inc
psraw
mov
test
stc
and
or
dec
lock
insl
rclb
push
nop
xchg
adc
adc
push
xor
xchg
mov
add
inc
insb
inc
and
loop
xchg
inc
fcomps
add
icebp
fsub
mov
pop
mov
mov
icebp
in
adc
cmp
pop
mov
mov
cmpsb
xlat
dec
mov
lcall
add
mov
fidivl
mov
cwtl
fisubrs
jmp
lock
out
sub
mov
movsb
insb
xchg
shl
sar
rcll
mov
sub
mov
xor
mov
dec
leave
pop
repz
inc
xchg
in
imul
push
push
cmp
sub
pop
in
addl
sbb
jno
cmpsb
clc
jbe
xchg
stos
push
pop
dec
es
dec
mov
bound
and
xor
fcoms
jae
fwait
adc
mov
sysexit
sub
or
mov
pushf
cltd
xchg
adc
loopne
inc
pop
popf
jae
sbb
cmp
rcr
mov
ret
movsl
mov
ljmp
mov
jp
pop
nop
xor
push
xor
xor
push
push
icebp
lods
pop
sub
jbe
pop
popf
jmp
sbb
push
int3
pop
shl
pushf
jbe
push
mov
xchg
idiv
or
add
or
inc
jbe
cs
cmp
dec
out
xchg
bound
or
push
ljmp
sub
scas
jae
fsubrp
adc
stos
jae
pushf
dec
xchg
filds
and
pushf
cmp
mov
inc
stc
add
into
push
adc
lods
insl
pop
popa
xchg
leave
arpl
fdivrp
sbb
daa
add
push
mov
mov
pop
push
cmc
std
in
clc
jmp
ja
ficoms
test
negl
nop
xor
es
add
pop
bnd
mov
lahf
sub
push
jecxz
scas
add
sbb
dec
jg
jns
clc
xor
and
mov
sub
dec
jecxz
repz
iret
xor
push
push
sbb
push
andb
jno
popa
adc
xor
jo
outsl
cld
fiaddl
pop
jns
daa
popf
jecxz
popa
cmp
xchg
fwait
cli
sbb
loope
stos
addr16
inc
lret
adc
push
and
outsl
aas
lret
into
andl
add
lods
aam
sbbl
out
xchg
std
cmp
lods
in
pop
lds
cmp
mov
fcoml
jle
outsl
inc
pop
leave
cld
mov
mov
adc
daa
lods
and
bound
jo
fwait
pushf
add
cli
cli
pop
dec
imul
subl
or
cmp
jb
xchg
push
lds
rcrl
adc
in
imul
lcall
add
xor
ror
dec
mov
jp
xchg
mov
xor
push
pop
fisubrs
jecxz
mov
xchg
push
js
daa
ljmp
push
lds
stc
ja
hlt
in
jl
cltd
push
push
mov
andl
out
pushf
jae
cmp
imul
test
sub
push
jae
xor
jmp
push
jnp
sbb
push
test
push
fnstcw
mov
pop
fdivrp
sub
icebp
xchg
mov
test
push
daa
or
xor
xchg
call
cmpsb
xchg
inc
mov
xor
fidivrs
fisubrs
push
out
xchg
or
mov
lock
and
add
sahf
or
je
idivl
mov
or
std
xchg
push
shlb
mov
pop
push
inc
pop
rolb
addr16
sub
pop
jp
lahf
adc
pop
cmc
ja
ret
outsl
jnp
shrb
pop
cmpsb
stos
pop
push
cmp
add
mov
popf
pop
cld
and
push
xchg
inc
adc
or
pusha
aaa
mov
or
fcomi
stos
push
clc
daa
outsb
shrl
fisubl
sbb
sub
xchg
xchg
sbb
mov
outsb
out
mov
scas
lret
xorl
test
and
push
fsubr
ljmp
inc
jbe
mov
aam
adc
call
xchg
jbe
sbb
bound
xor
fbstp
test
inc
mov
cmc
repz
xor
cmp
and
mov
pushf
sub
sbb
cs
arpl
fsubr
pop
popa
inc
jns
xor
sub
ds
or
ror
dec
mov
lret
jg
outsl
test
mov
lods
out
fwait
or
jmp
test
mov
mov
sbb
mov
mov
dec
in
mov
mov
popa
shll
inc
inc
cltd
push
adc
sbb
jne
out
mov
pop
or
andl
pop
cltd
lock
ret
lods
fst
push
lea
mov
push
js
sbb
in
fs
rcrb
lds
dec
mov
jae
cmpxchg
pop
loop
inc
dec
inc
push
mov
sub
stos
mov
add
stc
cmpsl
movsb
xchg
or
out
pop
sti
push
sbbl
jne
lock
movsl
inc
das
or
int3
rcrb
lret
sub
loopne
jmp
cld
dec
or
cltd
in
mov
rcrb
xchg
cmp
xor
sub
and
nop
pushf
cld
shrb
flds
loope
push
mov
pushf
cli
xchg
mov
mov
cmp
jo
hlt
lret
dec
jg
cmpsl
push
jp
imulb
mov
mov
scas
out
cmp
outsb
ss
push
mov
rclb
pop
shll
sbb
pop
adc
push
push
jecxz
lret
out
cmpsl
or
push
stc
pop
ret
mov
sti
fmuls
fiaddl
mov
cmpsl
xor
lcall
mov
dec
adc
cli
test
push
jnp
mov
and
std
push
adc
lahf
inc
bound
fimuls
mov
repz
enter
mov
aam
imul
sub
hlt
pop
into
fstpt
xchg
inc
enter
cs
xchg
xchg
cltd
or
mov
jmp
xlat
push
adc
mov
fs
rclb
iret
xchg
push
call
fs
dec
aas
divl
add
in
adc
scas
stc
sbb
fdivrl
sti
inc
xchg
das
jg
jbe
sub
mov
cli
pop
das
cld
ss
jmp
pusha
pusha
leave
fidivl
dec
imul
daa
sbb
cs
push
test
mov
stos
mov
ret
addr16
mov
nop
lock
push
mov
jle
dec
js
or
xchg
scas
adc
and
lock
clc
or
xchg
lcall
ficoml
out
sbb
fidivl
jp
mov
push
jp
movsb
ficoms
lahf
or
push
mov
inc
mov
push
dec
mov
filds
jbe
xchg
int
xchg
je
adc
arpl
inc
mov
xchg
inc
popf
mov
ret
pop
jp
loope
xlat
fcmove
xchg
jp
sahf
cmpsl
dec
int
stos
js
stos
pop
push
push
and
jge
pmulhw
or
cmpb
test
cmpl
rcrl
jmp
in
inc
int
or
out
jg
mov
pop
andb
cmp
cmp
ljmp
mov
dec
and
add
sub
and
pop
cmp
sbb
jnp
addb
mov
xchg
scas
mov
int3
movsb
repnz
add
add
cmp
rclb
ljmp
loope
mov
orl
lock
cwtl
add
adc
push
pushf
pop
xchg
sbb
xchg
aad
push
jns
mov
adc
sbb
sub
insl
dec
xchg
or
jns
adc
fstpt
xchg
ret
mov
aaa
and
xchg
sub
pop
lret
idivl
or
dec
add
jp
popf
mov
adc
aaa
sti
add
push
insb
test
pop
cmpsl
popa
aam
lcall
ffree
cld
ljmp
test
shll
enter
insb
mov
out
pop
sti
aas
push
mov
mov
add
movsl
mov
scas
cmpsb
popa
icebp
insl
add
inc
cli
cmp
adc
out
addb
daa
lret
adc
imul
cmp
xlat
dec
sarl
add
test
dec
shrl
xor
mov
loop
push
add
mov
call
insl
xchg
loopne
lahf
mov
fistps
fdivrl
sahf
stc
mov
sbb
imul
adc
jge
cld
mov
test
sub
push
pop
lds
pop
adc
inc
fildll
addr16
test
jmp
hlt
enter
pop
lahf
and
jmp
das
movsl
push
mov
imul
inc
mov
hlt
mov
fcmove
hlt
push
mov
pop
mov
icebp
push
ret
xchg
daa
jnp
out
mov
or
add
adc
ja
int3
cwtl
lahf
sub
mov
jle
pop
adc
int3
cmpsb
ss
xor
xchg
pop
sbb
push
xor
test
fiaddl
adc
sahf
clc
inc
out
push
xor
jo
je
xlat
sub
imul
mov
pop
mov
dec
daa
jae
data16
adc
and
dec
push
stos
shrb
test
mov
mov
sub
je
dec
std
rorl
mov
sbb
or
inc
xor
lock
loopne
pop
ss
mov
jne
or
aaa
sbb
mov
mov
pop
test
jbe
lcall
inc
arpl
xor
cmp
shlb
pop
fucom
inc
loope
dec
gs
or
adc
shlb
jbe
or
push
cmp
xchg
in
stc
ljmp
xchg
lcall
adc
pop
adc
int3
mov
jmp
xchg
jbe
xor
mov
push
pop
sbb
das
dec
push
adc
jl
sbb
inc
dec
xlat
jb
and
cmp
xchg
testl
xchg
xchg
mov
add
push
inc
xchg
popl
add
xlat
mov
movsl
aas
add
addr16
mov
movsl
push
xchg
add
mov
mov
add
mov
test
pop
add
inc
xchg
loopne
xlat
or
xchg
insl
insl
je
mov
jp
loopne
pop
mov
dec
dec
or
xchg
mov
test
int
pop
xlat
out
nop
cmp
ret
dec
or
addl
jb
dec
pop
nop
aam
add
dec
push
xchg
mov
pop
xchg
pop
cli
dec
lcall
rcrw
lock
dec
push
sub
pushf
dec
je
dec
mov
add
test
inc
mov
stos
in
push
mov
insb
push
push
push
cmpb
lock
outsb
scas
pop
rcrl
in
fstp
outsb
lods
aam
testl
cltd
aas
and
xchg
inc
mov
xorps
enter
in
jge
xchg
xor
pop
stos
lock
fisttpll
xor
dec
cmc
jg
mov
std
sub
out
inc
pandn
repz
outsl
adc
test
sti
and
mov
out
test
xor
sbb
or
loop
mov
sbb
add
shrb
pop
adc
pop
sbb
inc
pop
push
sub
and
std
loopne
cmp
and
fs
mov
inc
cmp
into
bound
lods
jge
stos
sbb
push
push
lds
test
add
push
sub
popf
and
int3
popl
pop
lods
orb
jecxz
pop
push
fs
mov
cmp
inc
jmp
pop
mov
mov
fs
fs
aad
jb
movsb
sub
pushf
mov
in
mov
jl
add
mov
or
adc
out
bound
xor
adc
aam
popa
and
aaa
rcr
ja
mov
dec
add
pop
daa
adcb
aas
pushf
pushf
loope
cmp
int
pop
jne
adc
sub
out
and
cld
mov
pusha
xchg
mov
dec
mov
mov
mov
xor
outsl
fs
stos
lock
bound
jle
or
lret
or
stos
das
push
lds
pop
xor
int3
xor
push
pop
test
loope
out
or
add
fwait
divb
inc
fcompl
and
mov
jnp
inc
lret
push
inc
aaa
testb
mov
jno
fiaddl
cmp
push
jl
movsl
les
stos
dec
xor
jo
das
mov
inc
and
or
paddusb
and
mov
dec
mov
pop
pop
and
sub
dec
rclb
dec
es
addr16
imul
les
arpl
push
jnp
pushf
test
and
add
push
bound
dec
inc
mov
xchg
sbb
fisttpl
into
and
add
add
push
pop
addr16
les
cmpsl
dec
pop
lcall
xchg
addr16
adc
and
sub
mov
inc
sub
push
fcompl
ret
add
cmp
sub
cli
dec
jge
and
fsts
jecxz
push
mov
mov
out
inc
pop
add
mov
aad
fdivrs
xchg
mov
neg
push
or
dec
jb
inc
jb
test
in
ret
or
jmp
inc
jmp
scas
sahf
jge
mov
sahf
ljmp
jle
leave
sub
arpl
sub
sbb
dec
lcall
stos
clc
push
mov
or
sub
jmp
xchg
leave
jp
dec
loop
iret
aas
add
and
out
ss
cwtl
cs
clc
mov
push
add
ljmp
nop
sbb
loopne
cmp
mov
sahf
mov
pop
popf
outsl
push
je
cmpsb
test
dec
mov
mov
inc
jmp
movq
jle
je
in
cmc
es
push
fsubrl
inc
or
mov
sbb
adc
cmpsl
icebp
sbb
jl
sarb
in
testb
and
xor
or
sahf
fnstsw
scas
sub
pop
xchg
dec
or
push
into
arpl
lahf
push
in
sti
decb
incb
jecxz
pop
test
xor
inc
jle
arpl
and
add
mov
xchg
adc
xchg
stc
inc
inc
jne
aaa
aas
jbe
fildl
test
repz
insb
dec
sbb
test
mov
lock
idivl
sbb
adc
mov
cmp
adc
fidivrl
inc
pop
ja
sbb
xchg
int3
xor
pop
jle
stos
adc
lods
sahf
call
push
mov
stos
add
pop
repz
aaa
leave
jnp
shll
inc
daa
xor
and
cmp
sbb
adc
imul
test
inc
add
inc
mov
ror
push
lods
orl
fstps
inc
or
mull
das
mov
mov
mov
lods
mulb
leave
sbb
cmpsl
cli
push
dec
or
popa
mov
out
cmp
pop
sub
xlat
pop
out
popf
jae
out
fs
sbb
xchg
sbb
testl
sub
jo
cmp
cwtl
gs
fnstcw
in
ds
xor
mov
cld
and
mov
adc
mov
bound
scas
mov
push
aam
sbb
xchg
xchg
imul
imul
dec
mov
and
jmp
mov
out
mov
mov
test
push
jnp
mov
mov
fs
mov
je
inc
scas
push
lods
mov
loope
movsb
inc
pop
shrl
mov
stc
stc
push
lods
xchg
adc
cld
mov
lret
mov
inc
aas
push
scas
repz
scas
sahf
jb
pminub
adc
mov
es
daa
xchg
mov
cmpsl
int3
adc
and
insl
fstpl
cmp
inc
sbb
scas
dec
push
push
loopne
xlat
push
push
int3
hlt
scas
jmp
or
loope
xor
test
lds
in
imul
outsb
fstl
mov
jecxz
mov
in
or
outsb
xchg
ficoms
call
les
cwtl
inc
repnz
gs
jne
scas
sar
and
das
shll
or
mov
test
mov
mov
xor
push
push
fsubr
xor
xor
mov
mov
je
rorb
ret
cli
lcall
in
cmp
cmp
les
mov
inc
insl
lcall
mov
jo
fimull
stos
out
ffreep
adc
mov
repz
in
mov
push
mov
add
xchg
test
testb
inc
dec
fwait
orb
add
cmp
stos
mov
push
jae
mov
ficompl
fwait
ret
sbb
aas
add
push
pop
add
jecxz
dec
fldt
jno
sti
in
xor
mov
into
push
cmc
inc
sti
xchg
or
sahf
negl
test
lods
rclb
jecxz
aas
dec
in
fmull
push
pop
lcall
je
cwtl
mov
sbb
sar
push
imul
call
xor
pushf
sbb
std
cmp
mov
out
sub
jne
subl
and
mov
pop
daa
xor
std
outsl
xchg
out
xchg
push
mov
aam
negl
ret
mov
sub
stos
dec
adc
pusha
into
test
jbe
adc
adc
lcall
dec
pop
mov
or
aas
stos
push
dec
adc
xor
insb
push
sub
fisttps
cld
fldcw
jle
jae
xor
das
ret
push
pop
pop
aas
adc
add
jnp
adc
int3
xchg
adc
loope
cld
movsb
sbbb
jmp
imul
and
adc
ret
jo
jp
addr16
add
negl
fwait
dec
mov
sbb
sbb
xor
subb
jb
mull
shrb
into
cwtl
adc
sbb
mov
cmp
insl
das
mov
push
ja
sub
inc
cmp
pop
lock
sbb
sbb
push
dec
nop
iret
or
out
insb
mov
repnz
xchg
sub
mov
and
jo
fwait
mov
lods
std
dec
adc
out
mov
cmp
add
rcrb
jno
and
sahf
mov
pop
testb
aas
aam
arpl
add
push
adcb
aam
adc
xchg
lcall
mov
lods
divl
jl
push
push
out
lret
loopne
bound
mov
cmp
out
dec
jmp
sbb
xor
mov
jp
cmp
mov
xor
jecxz
lea
mov
push
pop
nop
arpl
lahf
and
push
pushf
cli
mov
pop
notl
add
jne
in
imul
insb
mov
jb
xlat
flds
xchg
lea
ret
stos
rcrb
clc
push
xchg
mov
pushl
xor
mov
mov
pop
daa
adcl
aad
and
xchg
into
sarl
insb
cmc
mov
jecxz
loop
es
sbb
imul
pop
cltd
push
inc
scas
pop
mov
movsl
jle
incl
jp
pop
insl
mov
aad
cwtl
mov
enter
mov
sahf
vpmacsww
stc
xlat
mov
sbb
and
clc
or
lea
mov
sbb
movsb
push
pop
jecxz
or
and
out
movsl
ljmp
pop
fistl
scas
push
stos
out
enter
add
leave
or
jns
aas
jg
xchg
ds
cmp
cmpsl
inc
inc
inc
test
push
leave
mov
sbb
xchg
xchg
sbb
notl
fsubs
clts
imul
insb
jmp
rcr
push
lods
push
cmp
pushf
loope
popa
mov
sub
xorl
loope
out
movsb
mov
outsb
divb
jb
sbb
push
rolb
jno
push
icebp
lods
add
ja
popf
fmul
lret
or
je
js
aas
shl
push
popa
rcll
ret
push
add
inc
arpl
test
pop
push
push
push
aas
jecxz
fildll
out
pop
xor
dec
test
int3
pop
scas
insb
xchg
inc
mov
outsl
push
mov
cmpsl
in
shl
les
je
or
jnp
mov
sbb
xchg
shl
xchg
out
mov
and
pushf
sbb
xlat
pop
dec
push
and
or
dec
jno
std
mov
mov
fdivr
test
punpckhwd
and
je
xor
and
loopne
push
es
das
add
sub
mov
inc
mov
mov
cld
insl
aaa
inc
cmp
dec
mov
je
rorl
loopne
jo
mov
adc
mov
stos
push
rorl
push
push
mov
mov
popa
ja
adc
inc
lcall
jno
inc
int3
pop
add
push
fstpt
adc
xor
cmp
clc
push
addr16
mov
xor
or
pop
mov
pop
jmp
xlat
leave
test
sbb
xor
loope
mov
sarl
pop
dec
cmp
inc
in
pop
ror
and
inc
sti
fwait
lahf
mov
mov
pop
je
dec
fsubrs
sahf
and
sbbl
addr16
inc
test
xorl
adc
adc
jne
mov
insl
outsb
out
cmp
xor
xchg
mov
and
rol
mov
pop
mov
imul
mov
sbb
dec
mov
out
hlt
mov
scas
jmp
pop
inc
lock
sahf
subl
mov
mov
pop
test
out
xchg
mov
and
push
and
bound
rcl
push
test
dec
and
sub
cs
inc
inc
popa
hlt
mov
pop
cs
sub
pop
jecxz
mov
inc
ret
fwait
stos
cmp
fstpl
push
xchg
xorl
bound
cmp
fdivs
rcll
dec
dec
add
push
setno
xchg
ja
lock
ja
fs
fs
jp
sub
je
sub
addb
cmp
sbb
jg
jb
xchg
pushl
out
test
arpl
decb
shr
pop
cmp
add
lcall
or
cmpl
lahf
add
xor
inc
push
fists
push
loop
arpl
cmp
pop
call
pop
mov
std
negl
push
adc
or
cmpsb
std
push
out
or
push
into
xchg
inc
inc
rolb
xchg
cmpsl
mov
sub
test
add
std
pop
test
push
out
testl
sti
mov
imull
enter
mov
out
in
or
addr16
jae
pop
out
mov
jo
ljmp
leave
cmpsl
add
push
rcrl
imul
xor
les
lcall
popfw
leave
pop
lds
xor
jmp
cmp
add
mov
mov
jns
lock
xchg
xchg
adc
jno
inc
into
mov
scas
mov
shll
add
out
mov
add
imul
loop
jmp
pusha
adc
adc
dec
push
dec
cmc
xchg
lcall
lods
faddl
cltd
cmc
dec
test
pushl
arpl
movsl
in
adc
jnp
fwait
fs
xchg
or
xor
cmp
add
push
inc
sbb
or
add
jno
imul
shl
les
test
push
call
mov
and
cmpsb
inc
jle
mov
mov
mov
es
movsb
inc
add
pushf
lods
xor
enter
lods
fiaddl
in
and
pop
sub
lret
cmp
std
mov
leave
pop
inc
ss
mov
add
pop
dec
xor
repnz
sub
sub
push
xchg
fisttpll
pop
xor
cltd
adc
xchg
push
out
xchg
mov
mov
jmp
test
out
xchg
out
ret
dec
lea
xor
cmp
les
into
jmp
xor
dec
or
insb
mov
push
shlb
and
sbb
movsb
call
popf
mov
pop
lret
jmp
and
add
xchg
sbb
jne
add
mov
pop
xchg
sub
roll
jne
sbb
push
pop
mov
pushf
jae
roll
fwait
addr16
sahf
mov
pop
mov
cmp
mov
dec
fstl
jmp
sub
adc
push
rcll
int
sti
loopne
popa
cmc
sub
fisttpl
jne
xlat
lret
outsb
shrb
int3
icebp
sub
cmpsb
fstpl
arpl
lahf
adc
jno
pusha
add
fisubrl
scas
in
jle
sub
push
je
or
inc
gs
ss
js
movsb
leave
jo
mov
mov
xor
push
xchg
cltd
imulb
mov
xchg
pop
mov
push
loopne
jle
sub
das
or
fsubr
cmp
ret
enter
outsb
push
adc
scas
inc
outsb
jecxz
add
js
fisubrl
rolb
ret
add
cmpsb
negl
sbb
pop
fdivp
sub
cwtl
lods
outsl
cltd
fstl
jp
xchg
bound
hlt
call
cltd
sti
cmp
pop
sahf
mov
int
jns
lret
negl
js
mov
push
cmp
test
xchg
mov
xlat
jl
or
jmp
popf
stos
pop
pusha
dec
je
icebp
or
leave
push
out
jnp
stos
ret
mov
nop
mov
mov
test
lds
movsb
lahf
pushf
pop
sub
jl
add
sub
nopl
jno
pop
daa
mov
es
xor
popf
add
fildll
daa
xchg
cmp
lret
dec
mov
mov
iret
insl
les
popa
cmp
add
fbstp
dec
fmulp
leave
aas
jg
sub
aas
test
lds
aas
mov
insb
jae
push
fistl
sub
pusha
inc
jp
stos
into
imul
mov
push
mov
inc
sub
mov
push
and
xchg
xchg
pop
add
mov
pop
dec
mov
and
ret
in
lcall
dec
jne
cmc
neg
xor
std
clc
xchg
test
imul
xchg
shrl
movsl
rclb
cmc
mov
pushf
mov
add
ja
cli
push
in
mov
push
icebp
mov
vpaddusw
inc
mov
mov
sbb
or
sbb
ja
pop
lcall
in
test
or
jbe
sahf
pusha
das
mov
les
sbbb
stos
push
and
addr16
xchg
loop
add
aaa
mov
pop
push
sbb
mov
sub
push
mov
sub
jecxz
sub
jp
stc
cld
cmp
je
ds
je
test
gs
filds
icebp
insb
sub
movsl
sbbb
repz
add
adc
aaa
shlb
and
and
es
out
or
ljmp
das
icebp
insb
out
and
lds
jl
pusha
cmc
mov
pop
mov
jecxz
push
lods
jp
pop
cmp
ja
in
in
mov
aad
xchg
gs
push
cmp
in
jg
popf
push
cmpsb
xchg
and
xchg
ficoml
jmp
mov
jle
test
push
mov
mov
les
loope
pop
sbb
xchg
je
jnp
push
pop
jae
lcall
call
stos
lock
icebp
lods
sahf
aam
scas
cmp
xchg
jo
addr16
mov
dec
sbb
jge
jg
out
lret
push
jmp
in
aad
aam
xchg
aad
mov
push
pop
test
aaa
cmp
gs
aas
add
dec
sub
test
hlt
test
sub
iret
xor
sub
loopne
nop
cwtl
arpl
aad
jge
mov
dec
adc
les
outsl
mov
test
fs
scas
into
sbb
fwait
xor
mov
mov
sub
js
ja
mov
icebp
addr16
sub
in
mov
push
inc
mov
daa
out
packuswb
mov
pop
inc
push
jnp
jp
sbb
lock
cltd
imul
or
aaa
fidivrl
xchg
dec
aaa
add
dec
adc
mov
adc
pop
pop
popa
push
and
adc
cmpsl
sub
int3
xor
push
sbb
pop
rorl
jae
pop
in
push
adc
aam
inc
out
jge
lea
sbb
sub
movsb
aam
sbb
cs
aas
sti
ljmp
and
fwait
lods
push
jnp
dec
xchg
cmpsl
dec
mov
or
loop
xchg
arpl
sub
test
mov
jnp
pop
and
movsb
cmp
stos
add
in
lret
sbb
jp
push
bound
clc
mov
out
sub
sbb
dec
subb
adc
sbb
adc
mov
repnz
inc
xchg
inc
pop
clc
push
in
inc
adc
jns
ljmp
lret
xchg
inc
int
jbe
into
sbb
jmp
jl
fnstsw
or
mov
add
push
and
jns
insl
cmpsl
ret
mov
iret
es
sbb
mov
lcall
loop
cmp
clc
and
ds
fldcw
cld
shll
scas
lret
sub
test
inc
mov
or
jnp
jb
outsl
dec
clc
sbb
jns
cli
mov
out
adc
pop
scas
cmc
movsb
js
repz
testb
dec
mov
cmp
inc
inc
ljmp
insb
dec
xchg
xchg
test
fdivr
jl
test
repnz
addps
rcrl
lret
xchg
push
xor
ret
mov
sub
cld
mov
daa
xor
cld
and
fdiv
pop
pop
repnz
cli
scas
lods
pop
and
dec
sub
jb
cmp
daa
adcl
mov
mov
mov
lods
cmp
cmp
mov
dec
pop
jg
fwait
leave
jmp
movsl
and
iret
mov
xlat
cmp
and
and
mov
mov
push
push
ret
mov
je
mov
add
sbb
jg
clc
mov
xchg
fucomi
dec
das
loope
in
repnz
cld
les
hlt
mov
jge
inc
mov
sbbb
dec
xchg
clc
pop
cmp
cmpb
ret
and
daa
mov
xor
in
or
rorl
std
mov
jb
xor
dec
or
fisubrs
stc
shrl
mov
and
dec
test
cmc
xlat
mov
movsl
scas
mov
loop
popf
dec
pop
inc
sbb
mov
stos
fistl
sahf
fisttps
jnp
movsb
push
out
push
lret
inc
xor
enter
neg
cmp
scas
repz
inc
in
push
jno
bound
lret
mov
or
hlt
dec
insl
lods
dec
les
push
stos
push
cwtl
int
jl
push
lret
aas
push
mov
and
les
lea
mov
adc
pop
sbb
xchg
iret
movsb
mov
and
push
repz
jne
aam
inc
das
imul
inc
cmp
add
push
andb
lods
in
jecxz
xchg
lods
hlt
into
ret
dec
mov
idivl
js
mov
jnp
insb
insl
jmp
xor
enter
xorb
mov
jp
stos
fcoml
es
inc
jecxz
pop
adc
xor
and
je
movb
ss
xchg
and
push
jecxz
mov
and
or
pop
push
insl
push
in
xor
mov
cmpsl
or
arpl
idivl
push
add
push
lods
mov
dec
int
sbb
enter
dec
add
sub
fistpll
int
inc
cs
push
xor
lods
add
idivl
in
shll
fstpt
outsb
fs
mov
push
ret
mov
sbb
adc
out
xor
int
in
cmpsl
dec
daa
sar
inc
mov
repnz
ja
pop
pop
movsl
xchg
dec
adc
out
out
inc
pop
dec
aad
xchg
arpl
mov
je
jno
pop
xchg
mov
cmpsl
mov
dec
cwtl
dec
stos
add
out
std
mov
fsub
dec
jmp
or
ja
dec
fnstenv
mov
insb
movsl
cmp
fldenv
push
or
ljmp
fldl
add
addl
repnz
test
sub
gs
repnz
xor
in
adc
loopne
push
das
or
movsb
sub
push
sbb
int
aaa
push
ror
sbb
xchg
inc
pusha
mov
orb
push
hlt
dec
fnstenv
pop
push
cmp
cmc
pop
push
cmp
xchg
cmp
ja
pop
push
push
test
mov
fldl
fistpl
loop
xlat
sub
add
dec
mov
outsl
leave
arpl
lods
xor
jb
loop
pop
int
sub
testb
xchg
and
stc
out
lret
lcall
std
or
lret
test
pop
push
add
sbb
cmpsl
pop
mulb
mov
mov
jle
insl
test
adc
lret
std
adc
mov
mov
dec
push
sbb
cwtl
jo
popa
imul
popa
je
cmp
lods
sbb
scas
popf
xchg
or
xor
jne
cld
pop
cmpsl
dec
jb
xchg
cmp
mov
fsts
sbb
jecxz
jbe
mov
and
inc
lret
mov
mov
lock
in
lahf
cmp
ret
mov
imul
sbb
in
add
je
mov
pop
sbb
fsubs
repnz
cli
movsl
jb
lcall
add
xor
nop
dec
sub
push
test
divb
loope
adc
lret
out
sub
mov
ficoms
cmp
inc
cmp
pushf
aas
cld
push
fstps
out
jnp
xchg
or
mov
xchg
arpl
rcl
sbb
clc
mov
fnsave
xor
jle
insl
push
jbe
and
inc
mov
mov
push
mov
lds
sub
mov
into
fdiv
inc
xor
ror
xchg
mov
mov
insl
mov
dec
aad
shll
ss
jae
dec
xchg
jg
ffree
addr16
test
inc
push
cmp
adc
addr16
pop
sub
in
pushf
loop
jecxz
mulb
cltd
push
cmc
mov
sahf
popa
cmpsl
dec
pop
mov
inc
and
insl
icebp
imul
iret
out
jne
or
cltd
aaa
insb
sbb
jns
fidivl
jecxz
push
mov
les
xchg
ja
and
jg
jp
mov
sub
or
in
rcr
xor
out
jno
ret
jle
jmp
xchg
and
xchg
mov
cmpsb
mov
dec
xor
xor
cmp
xor
sahf
jne
push
ljmp
sub
mov
sbb
lcall
andb
mov
imul
sarb
pop
mov
fnstsw
arpl
lea
dec
adc
data16
popf
mov
popf
imul
and
stc
stos
mov
std
pop
mov
push
sti
aam
sub
hlt
iret
mov
addr16
icebp
sub
andb
jg
jle
out
popa
andl
cmp
jle
mov
mov
add
inc
fisubl
push
jmp
sub
sbb
mov
sar
lret
rolb
dec
dec
jae
sbb
inc
cmp
scas
fisttpl
jae
movsb
fisttpll
in
push
das
lods
pop
popf
fmuls
pop
push
cmpsl
pushf
scas
or
test
sbb
mov
les
add
cmpsb
push
or
add
cmp
sub
lock
xchg
inc
jle
ret
lods
lret
int3
xchg
push
icebp
add
mov
cwtl
scas
test
jno
and
lahf
stc
mov
or
imul
push
dec
cli
subb
mov
mov
mov
add
and
or
mov
pop
cmpsl
pop
xchg
adc
repz
jle
jl
mov
ja
int
fisubl
stos
dec
andl
addr16
push
lock
ret
and
cwtl
shrb
mov
adc
das
dec
rorb
loop
sti
popa
stos
xchg
jns
andl
adc
cld
and
pop
out
subl
dec
adc
inc
xor
pushf
push
lods
outsb
mov
mov
dec
test
sub
in
movsb
mov
test
movsl
adc
cmpsl
aaa
push
mov
enter
sub
pop
jno
dec
pop
or
pusha
cmp
jecxz
in
push
stc
cmc
adc
xchg
in
test
push
sti
call
cld
test
jge
iret
mov
push
subb
inc
sub
xchg
aad
std
imul
iret
bound
cld
es
jge
pop
push
cmpsl
fldenv
and
mov
data16
int
dec
shll
into
jp
and
je
out
or
xchg
daa
xorb
mov
cld
js
mov
pop
nop
sbb
lret
sti
pop
or
push
je
add
adc
pop
pop
pop
int3
jnp
fnstcw
push
pop
sub
aad
mov
jmp
hlt
jno
addr16
lcall
inc
push
dec
sahf
or
ds
and
les
mov
pop
inc
test
and
pushf
or
cmp
cmp
movsb
push
dec
rcll
pop
sub
ja
inc
ficomps
aaa
fisubrl
je
jns
push
sti
nop
jmp
mov
dec
cmp
dec
xchg
test
sbb
push
cmp
cwtl
and
jecxz
jbe
lcall
jecxz
mov
lock
das
inc
loop
xchg
mov
mov
or
jo
pop
pushf
mov
sbb
and
pusha
sub
mov
mov
in
scas
les
sahf
add
mov
xor
jg
inc
and
pusha
int
xchg
or
icebp
push
sbb
lock
xor
fildl
frstor
adc
insl
cwtl
sahf
pop
inc
lock
adc
pop
push
mov
mov
popa
stos
xor
stos
dec
jo
adc
outsl
pushf
mov
inc
mov
sbb
lret
add
cmp
daa
loope
stos
inc
and
add
fcom
xchg
mov
and
fdivr
or
adc
lahf
lods
int
jg
test
cmp
loope
loop
push
sub
fucom
pushf
mov
sbb
sbb
inc
fcoml
or
adcl
aam
or
cmc
inc
mov
sbb
ja
lahf
xlat
pmulhuw
and
cld
stos
dec
push
mov
sbb
das
jle
test
push
ficompl
aaa
fildl
pop
mov
or
outsl
dec
inc
jmp
gs
inc
into
addr16
enter
push
ret
ja
lahf
aas
mov
inc
jmp
mov
mov
clc
bound
out
mov
imul
cmpsb
adcb
xchg
fidivs
fimuls
push
ret
xchg
shl
ret
xchg
push
shlb
add
mov
shll
insb
jg
sub
cmpsb
xchg
jle
ss
aaa
fisubrl
sub
pop
sbb
cmpl
xor
dec
nop
dec
mov
xchg
or
push
aas
pop
adc
stc
mov
std
and
pop
inc
dec
mov
xchg
add
orb
aas
int3
push
scas
jp
push
push
pop
jle
repnz
dec
add
push
or
js
test
and
popf
lods
or
sub
jecxz
mov
jb
mov
adc
int
push
inc
insb
jp
xor
dec
aas
cs
push
sub
and
xor
inc
push
dec
in
stos
aas
cs
mov
inc
es
les
sbb
sbb
fsubr
sahf
stos
xchg
hlt
or
mov
cli
adc
aas
pop
mov
sbb
adc
jle
push
lret
popf
into
scas
rcr
out
shl
imul
daa
fmuls
scas
fistps
imul
add
inc
ss
add
xchg
adc
pop
lock
push
loop
jo
insb
int3
mov
inc
push
dec
fisttps
outsl
idivb
jge
or
ja
xchg
inc
dec
shlb
ret
hlt
test
xchg
je
jle
pop
jp
inc
loope
mov
adc
stc
or
pop
jmp
outsb
or
shrb
addr16
mov
pop
jb,pn
inc
sub
das
icebp
les
lret
add
jmp
and
sub
movsb
lret
lret
insl
bound
xchg
cltd
push
cmp
clc
xor
mov
nop
aaa
adcl
repz
xor
push
insl
lcall
sbb
in
das
adc
bound
gs
imul
dec
push
jno
jle
sbb
xchg
mov
fisubl
es
pop
ss
jge
jmp
cmp
out
sbb
push
sbb
pop
insl
jge
pop
in
mov
aaa
pop
nop
fstpt
popa
adc
ja
xchg
mov
mov
cmpb
je
add
int3
pusha
inc
jno
push
sub
stc
popf
aam
mov
popf
mov
push
jns
jmp
cmc
sub
xchg
jb
ficompl
or
iret
call
pop
jmp
das
lea
mov
inc
je
cld
xchg
jmp
mov
mov
jl
movsl
je
or
or
cltd
cmp
pop
inc
cmp
adcl
out
dec
mov
scas
push
inc
cmp
xchg
pop
roll
mov
sub
out
movsl
mov
xor
cli
inc
dec
lcall
or
push
add
insb
xchg
insb
sbb
sub
lret
sbb
pop
jge
sarl
ret
fdivrs
xchg
out
push
incb
or
jmp
lea
sub
adc
jl
hlt
orb
dec
movsb
mov
push
and
pusha
out
mov
lea
pop
push
outsl
jno
jp
mov
int
bound
xor
cmpsl
and
mov
popf
call
lcall
mov
jge
add
mov
test
mov
jae
lret
inc
xchg
xchg
ret
test
push
cli
mov
xor
imull
in
negw
orb
bound
rol
xor
sbb
dec
pop
fs
xchg
push
arpl
cmp
sbb
fcoml
xchg
fildl
cmp
rol
inc
mov
fistpl
lock
jo
mov
iret
lret
bound
sbb
cmp
cmpsl
mov
jno
fisubs
lcall
dec
test
popfw
cmp
pushf
add
push
ja
imul
arpl
jno
cmpsl
add
xor
aaa
je
pop
push
fs
adc
cmp
push
jge
push
push
arpl
test
push
cmp
out
stos
cmp
std
or
cmpl
test
inc
cli
jmp
xor
ja
jecxz
jb
stos
jecxz
ss
inc
xor
dec
daa
sub
jnp
jne
ds
dec
add
pop
int3
xlat
push
stc
arpl
xlat
xchg
push
rcr
mov
mov
imul
pop
jge
pop
daa
mov
in
loop
xor
mov
mov
or
sub
sti
je
adc
ret
lret
mov
imul
negl
icebp
xchg
sbb
stos
inc
dec
mov
sbb
mov
mov
cmc
xchg
lock
mov
addr16
popf
arpl
push
addb
cmpl
jp
adc
sbb
or
je
jecxz
jmp
les
popf
sbb
push
xorb
sbb
xlat
jne
int
aaa
adc
outsb
insb
stos
mov
cmp
xor
stc
data16
pop
or
cmpsl
dec
mov
inc
fs
std
cmp
flds
push
fcmovu
js
pop
test
mov
mov
or
mov
gs
inc
sbb
xchg
dec
popl
ds
dec
idivb
stos
clc
or
xchg
cmp
xor
dec
add
add
addl
mov
cltd
jge
and
xor
jl
pushf
jg
inc
test
inc
or
imul
subb
lcall
sbb
shll
stc
pusha
scas
jnp
sti
xchg
adc
cltd
and
xor
push
and
cmp
movsl
mov
add
fldenv
test
fisubrs
cmp
adc
in
clc
push
das
and
cmc
cmp
sub
das
ss
stos
outsl
or
mov
scas
lret
push
in
jbe
add
dec
out
enter
hlt
sub
outsb
jae
mov
push
dec
mov
lods
lret
pmaxsw
out
test
dec
mov
cmpsl
negl
cwtl
and
add
or
xor
add
fldcw
adc
sbb
mov
push
repnz
cwtl
inc
pop
addr16
pop
sub
out
pushw
clc
mov
pop
add
xchg
popf
mov
mov
loop
popa
adc
into
pop
add
adc
lock
cmpb
xchg
sbb
test
push
sar
out
in
sbb
icebp
cwtl
scas
mov
cmp
sub
sub
cltd
xchg
push
shlb
adc
outsl
add
hlt
shl
rclb
jge
adc
ljmp
rcrl
cmpsl
stos
xchg
xor
jp
or
jl
insl
xor
fisubl
add
lcall
clc
aas
out
popa
es
jnp
testl
cmp
pop
enter
add
sar
add
mov
mov
xchg
pusha
flds
mov
pop
push
xchg
test
outsb
mov
leave
sbb
pusha
xchg
popa
hlt
xchg
loop
insb
in
pushf
or
test
fadd
enter
pop
xor
loop
xchg
icebp
mov
mov
dec
jmp
inc
inc
shl
xchg
pushf
sbb
neg
xchg
cs
aam
push
stc
pop
cs
loop
xor
jo
mov
inc
pop
roll
dec
cmp
or
shrb
lcall
add
adcb
mov
inc
bnd
pop
fbstp
cmc
aad
adc
xor
cmp
mov
and
xor
rorl
lahf
es
lret
addb
dec
imul
push
clc
pop
shlb
aad
mov
movsl
test
jle
mov
je
not
fnstenv
pop
cmp
pop
in
mov
aas
aas
lcall
repz
fs
fnsave
es
xchg
lret
cmc
cltd
into
ds
xchg
sbb
mov
gs
into
clc
xor
mov
jnp
dec
cmp
xchg
inc
or
pop
psadbw
cld
inc
fadds
jno
or
mov
fadd
cmp
out
sbb
inc
cmc
addl
daa
dec
adc
xchg
hlt
test
sahf
or
xchg
outsl
xchg
test
ja
jnp
and
iret
stos
xchg
stos
xchg
sub
scas
inc
pop
bound
or
lret
pusha
adc
cmp
ror
or
test
pop
inc
sub
sub
hlt
aaa
call
in
dec
jecxz
nop
es
fcompl
lea
mov
rcrb
adc
push
xor
adc
adc
jecxz
jnp
unpckhps
xchg
int
mov
gs
mov
mov
mov
mov
popa
sub
dec
roll
xchg
test
and
sub
xchg
adc
pop
pop
push
dec
push
adc
sbb
lret
cmc
inc
mov
mov
outsb
xchg
imulb
inc
lcall
popl
out
push
test
pushf
decb
fldcw
in
mov
in
mov
or
pusha
and
rcrl
cwtl
fs
jle
push
push
push
dec
push
enter
das
dec
inc
and
mov
mov
mov
xchg
mov
lods
test
in
lret
xor
nop
jnp
ror
leave
rolb
hlt
les
sahf
call
std
es
dec
push
hlt
repnz
pop
aaa
inc
pop
out
mov
divb
out
daa
mov
in
test
xorb
pop
sarl
lods
xchg
xchg
push
shrl
inc
dec
int3
ret
or
xlat
repnz
rclb
sub
and
pop
mov
cmp
lea
cmpsl
cltd
push
outsb
rcrl
pop
int3
mov
sbb
cmp
enter
xchg
icebp
lea
orl
mov
sub
mov
jp
or
mov
mov
bound
sbb
jns
jl
aaa
imul
bound
pop
cmp
cs
dec
test
sub
fucomp
mov
jge
aaa
dec
sub
call
mov
jno
mov
sbb
jb
lds
imul
cmpsb
int
stos
pop
xor
jo
jbe
fbstp
xor
adc
jecxz
scas
cmp
dec
cmp
into
mov
sub
push
xchg
sbb
pop
add
sub
mov
mov
idivb
ss
mov
sub
fsubrl
test
push
mov
bound
add
gs
xor
shll
aam
push
mov
lods
mov
test
dec
pop
outsl
mov
rcll
pop
int
idivb
rcrb
fmuls
or
push
pop
loop
jb
xchg
push
xor
sbb
lahf
lock
mov
xchg
outsb
lods
pop
xor
and
lret
xchg
in
pop
cmp
xchg
leave
xchg
jmp
aad
addr16
xor
dec
repz
int
jg
mov
imulb
or
loop
mov
sbb
push
xchg
mov
dec
adc
add
dec
int
mov
out
aaa
push
adc
insb
cwtl
xor
xor
mov
test
scas
ret
add
in
cmp
mov
mov
ficoml
gs
imul
jle
add
jmp
nop
movsl
add
or
and
call
and
and
lret
sbb
into
pop
fwait
adc
inc
add
leave
es
sub
sbb
ret
push
xchg
push
or
imul
outsb
test
loope
sub
iret
xchg
aad
andl
and
rolb
jmp
sbb
add
test
xor
int3
or
scas
fs
jmp
mov
mov
fdiv
mov
mov
xor
xor
nop
movsb
ds
aam
pop
nop
push
les
ja
ret
rol
fwait
test
movsl
ret
loop
cld
addr16
pop
cmpsb
or
xchg
cmp
shlb
push
leave
push
int3
inc
mov
mov
mov
mov
sub
fnstsw
lahf
out
iret
xchg
inc
cs
mov
popf
movl
shll
jmp
pop
or
ret
mov
dec
cmp
jbe
jmp
or
push
jle
dec
out
jl
loope
mov
and
outsb
shr
inc
sahf
or
push
mov
shr
and
sub
mov
call
aad
in
adc
xor
cltd
repnz
cmpsb
push
sbb
cmp
scas
add
ljmp
test
cmp
pop
cmp
shrl
lret
adc
insl
or
outsb
push
add
fidivs
cmp
nop
dec
jl
push
sub
cmp
fldenv
mov
push
jle
aas
decb
jl
aam
dec
pushf
mov
cmp
xchg
cltd
and
dec
invd
xor
icebp
test
clc
sbb
stos
inc
mov
loope
iret
mov
sbb
xchg
es
cmp
mov
xchg
sbb
in
orl
popf
mov
jnp
cmp
jecxz
jae
pusha
out
popa
xchg
stos
outsl
mov
sub
lods
test
lret
ret
cmp
lock
aas
jl
jecxz
out
leave
aaa
pop
jnp
mov
popf
stc
jecxz
shl
push
mov
stos
sbbl
and
or
or
xchg
jmp
xchg
in
push
add
shll
mov
jp
outsb
mov
inc
fstpt
mov
xchg
mov
xchg
and
ljmp
jbe
add
movsb
xchg
outsb
pop
jne
aas
or
out
shrl
sbb
dec
sbb
pop
ret
jmp
repz
and
fistpll
imul
pop
std
pop
or
mov
sti
cmp
or
push
and
xchg
inc
sahf
jne
sub
cwtl
cs
sub
hlt
loopne
sar
pop
test
in
std
cltd
xchg
cs
mov
lret
push
push
sbb
out
jb
ss
cs
js
cmpsl
lds
xchg
mov
jmp
adc
pop
daa
pop
insb
adcb
je
shlb
jns
push
in
xchg
mov
popa
imul
loope
mov
mov
mov
movsb
fnstsw
dec
stos
xor
push
mov
sub
or
push
inc
scas
mov
cmp
mov
loopne
fwait
fwait
aas
and
push
cld
stos
movsb
jle
jg
jbe
ret
pop
pop
hlt
int
fwait
jle
outsb
test
incb
sbb
loope
inc
add
sub
adc
hlt
mov
loopne
mov
outsl
pop
xchg
inc
int3
mov
mov
pop
test
out
or
push
cltd
or
add
in
movsb
xor
jb
pop
cmp
push
and
mov
adc
mov
cld
xchg
jge
clc
popf
repz
sbb
mov
mov
pop
aam
push
sbb
addr16
popf
pushf
dec
imul
mov
imul
loopne
ret
jp
jns
pop
pop
movsbl
dec
into
mov
or
popf
push
cltd
push
lahf
pop
jl
out
xchg
xchg
mov
lret
icebp
cmp
js
std
sbb
cld
in
leave
lret
sti
xchg
mov
sub
mov
xchg
jb
sahf
dec
aad
fbld
xor
stc
cltd
test
or
add
add
xchg
gs
jno
cmp
cmp
push
stos
ss
ret
mov
int3
or
mov
loop
out
lret
aaa
sub
gs
sbb
xor
mov
mov
xchg
adc
and
clc
lret
lds
ljmp
dec
mov
add
mov
pop
pop
rorb
shlb
cs
popa
sbb
int3
mov
and
jg
sub
insb
cmc
cltd
fst
int
repnz
fcmovb
push
and
stos
xchg
loope
inc
cmpsb
cltd
pop
cltd
and
fs
inc
push
push
xor
inc
xchg
sbb
or
mov
out
and
jmp
outsl
add
jp
xor
ja
dec
pop
mov
pushf
test
enter
std
adc
mov
stos
dec
imul
or
lret
and
xor
out
push
int
popa
imul
push
jb
xor
sub
icebp
sub
mov
bnd
pop
in
mov
sti
daa
jge
adc
inc
popa
mov
xchg
leave
aam
std
mov
in
mov
cli
add
mov
cmpsb
push
leave
fwait
or
sti
cmp
add
xchg
popa
sti
fisttpll
inc
in
popa
cmc
hlt
jmp
aas
mov
inc
fistl
push
in
out
push
xchg
mov
loope
gs
xchg
cmp
and
arpl
add
sub
jmp
mov
pop
scas
loop
ljmp
aas
add
jge
jmp
jo
push
sub
cmpsb
add
insb
jp
jns
pop
push
push
add
out
jmp
fisttpl
sub
popf
cmp
pop
xchg
xchg
mov
pop
push
cmpb
add
ja
mov
mov
sub
js
shrb
xchg
mov
popa
fldt
sub
mov
ljmp
xor
mov
push
push
movsl
scas
mov
inc
imul
in
repz
call
in
hlt
lds
insb
pop
mov
cltd
jne
pusha
out
fmull
dec
testb
add
mov
subl
inc
in
rcrl
adc
pop
xor
rorb
sahf
movsb
jne
mov
sbb
push
cmpsb
pop
jnp
in
xlat
add
or
call
sbb
add
mov
mov
insl
hlt
push
dec
rcll
jo
sti
sahf
cmp
jmp
cwtl
decb
pop
cmp
lock
outsl
mov
es
xchg
xbegin
inc
dec
jge
insb
ret
pop
dec
push
cwtl
add
cmp
add
loopne
push
sub
in
clc
push
sub
mov
add
mov
jp
sbb
pop
add
jecxz
pop
fldenv
int
jnp
mov
in
hlt
scas
dec
mov
sub
arpl
scas
jne
xchg
xlat
cwtl
stc
dec
adc
push
inc
mov
push
jp
in
inc
out
data16
mov
sbb
ja
and
cwtl
outsl
mov
jns
and
aaa
or
cmpsb
xlat
mov
dec
dec
adc
out
adc
push
sub
jb
gs
adc
call
pop
daa
sub
pop
sub
mov
es
pop
add
clc
and
add
sti
or
scas
mov
push
mov
pop
mov
in
test
je
push
inc
or
fdiv
push
addr16
stos
dec
sbb
sub
mov
lea
and
flds
cmp
fcom
jae
sub
pop
inc
mov
jmp
out
dec
insb
cwtl
sbb
xchg
xchg
mov
mov
xchg
inc
clc
and
jmp
icebp
aad
dec
inc
insb
filds
rcrl
inc
pushf
shrb
xrelease
mov
les
mov
sub
repnz
andl
pop
mov
pop
inc
sbb
cmp
mov
ja
das
adc
push
xchg
jae
ljmp
push
jae
fdivp
sub
mov
into
pop
xor
cmp
in
enter
add
pop
jp
mov
or
call
inc
and
pop
imul
faddl
testl
aam
jp
psubb
loopne
scas
imul
cmp
ret
jp
lcall
sbb
push
aas
mov
pop
xchg
cmp
daa
pop
sbb
icebp
popf
lods
mov
cmpsl
in
cmp
mov
xor
outsl
int3
in
sti
stos
js
pop
lcall
push
mov
mov
sbb
xor
inc
sbb
mov
dec
jb
fcomps
ds
test
sbb
pop
imul
push
divl
shll
lods
pop
stos
std
and
dec
mov
dec
dec
dec
push
jp
fcompl
jl
mov
inc
sub
inc
push
daa
sub
rsm
cli
adc
stc
push
hlt
sbb
insb
xor
loopne
inc
push
scas
in
popa
std
add
inc
fmul
lds
mov
sbb
fdiv
daa
int
cli
mov
in
testb
scas
pusha
cmp
pop
daa
vmread
lds
insl
dec
movsl
sbbl
adc
imul
jl
sarb
jp
push
mov
mov
adc
in
adc
sub
xlat
jo
dec
scas
leave
lea
and
mov
sti
hlt
adc
fs
mov
add
add
adc
out
mov
outsb
sub
push
push
add
jl
adc
cmp
scas
mov
sbb
jae
xlat
mov
jl
pop
xchg
movl
or
outsl
lret
push
enterw
jg
hlt
out
addr16
test
test
dec
out
imull
in
mov
in
das
lock
jp
rcl
test
mov
and
bound
lods
push
xchg
enter
xor
loop
pop
push
mov
sbb
inc
xchg
lahf
xchg
mov
hlt
mov
xchg
sti
ljmp
repnz
jle
arpl
jbe
fsubrl
in
pop
cmp
dec
mov
mov
sarl
jns
mov
ljmp
xor
jo
out
enter
add
sub
in
icebp
jo
push
mov
dec
ror
sub
mov
push
sbb
mov
inc
insl
popf
or
dec
test
pop
cwtl
xor
inc
nop
mov
xchg
lcall
xchg
add
test
jns
dec
mov
ljmp
enter
pushf
cmp
movsl
and
sub
add
fiaddl
mov
and
cmp
imul
dec
fiadds
sahf
into
xor
arpl
or
adc
aaa
subl
js
mov
xlat
xchg
pop
sbb
es
scas
sub
adc
cmpsb
adc
cmc
sbb
and
ret
popf
shrb
and
mov
sahf
movsl
sbb
cmp
aas
cld
dec
test
arpl
lea
idivb
xchg
ret
outsl
push
rorl
jns
test
add
std
push
aas
ret
cmc
mov
jns
and
dec
mov
clc
or
aam
imul
inc
imul
mov
in
flds
push
dec
repz
xor
int3
sbb
cmp
insl
nop
mov
sub
pop
xor
mov
mov
sahf
cmp
jecxz
adc
dec
les
movsb
pusha
pop
xchg
cmc
hlt
cmp
loope
lea
pop
enter
lea
pushf
xchg
pop
xor
loope
xchg
lret
push
lods
stos
clc
mov
pusha
int
mov
pop
movb
mov
add
insl
mov
jge
sarl
mov
inc
es
shlb
imul
push
lock
dec
push
dec
jae
mov
into
sub
les
jg
xchg
pop
xchg
fcoms
sub
aaa
sbb
xchg
adc
cmp
sbb
mov
xchg
es
test
lock
mov
sub
fisttpll
add
adc
sub
push
in
push
fs
cld
mov
jmp
adc
cld
inc
hlt
roll
jo
repnz
test
lret
mov
rcrl
xchg
sahf
pop
stc
cld
jmp
jge
lcall
xlat
and
aas
in
loopne
jle
popf
and
jmp
into
adc
or
popa
or
mov
pop
push
mov
pop
pop
push
mov
pop
stos
xor
cli
xchg
sub
dec
arpl
dec
scas
adc
xchg
mov
out
repz
in
add
xlat
inc
jae
rclb
mov
push
int3
stos
mov
lods
addr16
pop
addr16
xor
icebp
add
cwtl
sbb
push
dec
dec
out
fwait
call
movsb
xor
aaa
cmpsb
dec
loopne
jg
jecxz
or
gs
pop
xor
orl
adc
xlat
push
xchg
cmp
or
rcll
cwtl
cmp
adc
fsubr
cwtl
in
inc
test
mov
fbstp
xor
bound
cs
ficomps
jae
out
push
xor
xor
pushf
jmp
in
into
pop
lods
xchg
fsubl
mov
mov
sbb
jp
sti
dec
push
decl
mov
mov
mov
aas
cmp
mov
mov
xor
out
jg
pusha
push
dec
pushf
incl
jns
push
dec
rorl
loope
icebp
and
xor
add
neg
add
add
inc
adc
fisubrs
sbb
ja
pop
fcomip
add
jl
or
ret
das
movsb
sub
and
jnp
shlb
fsubrs
cmpl
sub
fbstp
clc
fisttps
xchg
or
mov
xchg
fisubrl
mov
jnp
push
adc
sub
pop
mov
jne
aad
jmp
sub
scas
xchg
mov
out
jne
jecxz
out
xchg
out
je
sbb
xchg
adc
adc
repnz
das
or
imul
mov
in
repz
jl
pop
mov
mov
in
rorl
dec
sub
lret
dec
in
inc
push
aas
bndstx
mov
pusha
dec
stc
mov
sub
in
repnz
pop
outsl
dec
push
jecxz
loope
test
int3
mov
mov
jb
lret
pusha
fstpt
mov
movsl
or
mov
sbb
xchg
repnz
movsl
icebp
pusha
add
lods
shlb
jge
inc
xchg
aad
push
cld
sbb
inc
jmp
jnp
dec
push
cmc
dec
insb
repnz
rclb
movnti
xchg
sub
lods
sub
mov
mov
jb
bswap
and
inc
adc
in
jb
pop
jecxz
cmp
lea
pushf
aaa
cmc
sbb
das
pop
xchg
dec
cld
xchg
outsl
mul
cmc
add
lods
decl
sbb
adc
movnti
divl
test
jle
push
push
mov
jae
popa
iret
or
pusha
pop
xor
pusha
int
jmp
mov
xchg
xor
fsubp
cmc
arpl
and
pop
mov
popa
movsb
or
stos
dec
or
jl
nop
jno
js
clts
test
shl
dec
inc
jae
mov
jne
ljmp
test
jge
stos
loop
push
mov
and
mov
dec
nop
mov
iret
push
gs
add
sbb
aam
cmpl
cmp
ja
push
xchg
mov
jp
out
dec
dec
inc
cmp
in
je
mov
clc
lods
lea
dec
popf
pop
es
dec
cwtl
pop
push
sbb
push
je
cltd
icebp
les
pop
adc
sub
inc
orl
or
in
js
cmp
sub
shrl
ret
jle
dec
and
call
mov
or
mov
rol
push
xadd
jmp
pop
sbb
sub
jb
pop
popa
xchg
push
jne
sti
pop
in
loop
jnp
test
xor
and
mov
add
inc
adc
js
je
mov
mov
cmp
aas
jae
ret
pop
addb
imulb
adc
test
xor
ficomps
inc
sbb
add
and
push
sbb
add
int3
jg
pop
popa
dec
inc
jp
fcom
mov
push
movsl
dec
xor
push
lock
bound
je
xor
xor
insl
inc
mov
frstor
push
xchg
mov
cmp
sbb
ds
out
jb
sbbb
cwtl
out
mov
inc
and
jl
dec
rolb
mov
fsubr
repnz
xlat
inc
test
pop
ja
inc
mov
add
xchg
ds
rolb
and
push
fmull
inc
dec
dec
lock
repz
loope
xchg
mov
mov
mov
fisttpll
movsb
out
scas
jno
sbb
lcall
pop
adc
pop
cmp
shlb
or
fwait
cmp
dec
jecxz
inc
cltd
jae
push
aaa
pop
push
push
pop
int
stc
cmp
icebp
cwtl
jp
xor
pusha
repnz
xor
aas
in
lahf
xchg
popf
cli
aam
pop
cmp
adc
rcrl
mov
fs
jne
ja
xchg
fidivl
test
push
hlt
repz
dec
addl
lods
inc
clc
cmp
dec
or
mov
sbb
ja
inc
push
aaa
sub
sbb
jnp
push
add
je
sub
dec
dec
scas
cmp
into
adc
mov
lods
cmc
sub
mov
hlt
pop
sbb
frstor
sbbb
adc
sub
out
jb
cli
pop
lret
xchg
stos
hlt
pop
cwtl
push
out
std
test
or
or
mov
lret
cmpsl
nop
adc
dec
sti
lds
sbb
and
loopne
lret
jg
jno
mov
pop
les
mov
adc
jp
pop
mov
iret
mov
cli
gs
adc
in
push
pop
sub
pop
cmp
xchg
mov
je
in
scas
out
sub
insb
add
sbb
mov
and
notb
movsl
inc
stos
sbb
push
xor
mov
clc
shlb
jno
inc
test
call
mov
xchg
adc
mov
dec
imul
loope
out
push
or
dec
adc
mov
add
cmp
imul
push
pop
outsb
pop
mov
jb
test
nop
in
aaa
inc
ret
inc
pop
sbb
imul
pop
fwait
mov
outsl
pop
push
sbb
int3
cltd
and
aam
xor
stc
mov
xor
adc
and
ret
mov
ja
in
push
mov
shlb
pop
fimuls
inc
mov
mov
repnz
or
scas
shlb
stos
rcrb
push
fnstsw
mov
adc
lods
inc
or
dec
and
psraw
pop
in
pushf
jmp
lret
mov
lret
rcl
and
lret
test
dec
sbbl
gs
add
data16
in
ret
jle
movsl
fucomp
sbb
dec
enter
cld
jno
pop
sbbb
fwait
cmp
ja
out
enter
ret
mov
mov
add
and
cmp
push
inc
or
clc
mov
test
push
and
outsb
push
adc
adc
pop
cmp
popf
test
dec
jns
xchg
push
leave
cltd
mov
test
pop
sub
mov
loopne
addl
outsb
lret
sbb
sbb
push
int
inc
dec
insb
mov
dec
stos
fstp
cld
fadd
jnp
add
out
rcl
lret
je
into
fadd
ja
fcoml
cmp
or
decl
mov
sbb
push
dec
jo
cltd
sub
dec
push
mov
jns
int
mov
test
out
jae
xlat
loopne
int3
mov
sbb
sbb
xlat
pop
and
lret
or
jp
mov
jnp
push
je
add
shrb
inc
lahf
lahf
and
mov
mov
shlb
lahf
aam
jae
mull
mov
stos
mov
and
mov
xor
xchg
and
stos
sub
testb
cmc
mov
into
sbb
iret
pusha
mov
aad
sahf
aas
arpl
lea
cmp
insl
or
fld
pop
xor
scas
inc
test
push
outsb
sub
xor
data16
arpl
lret
or
addb
jmp
adc
popf
inc
lcall
jbe
cmp
into
std
inc
xchg
inc
lahf
cmp
fistpl
incl
sbb
add
add
hlt
pop
jp
stc
mov
xor
dec
ds
or
gs
jp
out
jge
mov
cltd
xor
push
loope
jge
pop
push
mov
shll
cmpsl
outsl
popa
inc
mov
inc
mov
push
xchg
gs
add
insb
xor
or
pushl
ret
aas
mov
dec
pop
xor
push
sbb
add
popf
dec
lahf
out
and
mov
xchg
imul
and
daa
sbb
mov
fwait
xlat
imul
shlb
iret
mov
andb
adc
mov
in
inc
insb
loopne
fstps
pushf
call
xchg
push
xchg
pop
fcmovb
ret
ds
or
in
stos
rcrb
add
in
and
pusha
std
xchg
frstor
es
lock
popa
mov
aas
jg
sarl
xorb
clc
loope
jge
xor
insb
jecxz
jne
push
xchg
das
push
mov
clc
int3
mov
xchg
and
xor
pop
mov
sbb
lret
lret
lahf
or
push
jbe
out
adc
insb
lock
push
pop
mov
cltd
jge
adc
pop
ljmp
clc
mov
mov
xor
inc
cltd
inc
aam
jo
jmp
xor
dec
dec
in
aaa
ds
test
pop
adc
ret
adcb
jg
adc
or
mov
in
ja
inc
push
rorl
mov
cltd
mov
out
mov
inc
out
push
fidivrl
int3
or
inc
lds
cmp
sub
adc
pop
xchg
pop
nop
adc
sbb
pop
int3
sbb
test
xor
adc
pop
jge
cli
mov
pop
jns
in
inc
push
insw
aam
into
mov
data16
xor
inc
dec
jle
sub
mov
insb
aaa
push
dec
push
hlt
dec
add
stos
repz
pushf
sub
push
outsl
push
lcall
xchg
mov
rol
test
add
fmuls
or
imul
push
and
push
iret
sbb
in
scas
or
sbb
xor
xchg
pop
cmp
xor
repnz
cmpsb
sbb
ret
ljmp
pushl
shll
sahf
dec
xchg
in
imul
fwait
adc
scas
ret
xchg
mov
push
mov
mov
jl
addl
fists
add
jmp
stos
sahf
jle
pop
sub
addr16
mov
or
inc
lea
shr
sarl
push
push
std
pop
push
daa
xor
dec
xchg
dec
dec
imul
fstpl
mov
in
sarl
lods
movsb
push
call
mov
fisttpll
xchg
clc
jne
dec
lea
pop
xor
sbb
xor
test
mov
call
sti
dec
call
xchg
mov
xchg
mov
xchg
add
addb
xor
rcr
adc
add
mov
ljmp
mov
add
int
data16
jb
mov
rorb
clc
aaa
jmp
loop
enter
cwtl
sbb
inc
cmp
lds
arpl
fs
cmp
sbb
test
movsl
test
mov
out
cmp
movsb
js
outsl
mov
cld
jno
push
arpl
xchg
mov
popl
mov
incb
lretw
fwait
cmpsb
push
lea
jg
daa
inc
stos
xchg
pop
scas
and
mul
jmp
lods
testb
mov
pop
sub
lret
mov
and
jecxz
jg
pop
or
scas
mov
mov
mov
out
into
movsb
inc
out
push
mov
out
lea
insb
pop
xor
adc
inc
sbb
mov
pusha
test
xor
cmp
inc
jb
and
and
gs
mov
lods
or
sbb
popf
and
outsb
repz
sub
ljmp
and
xlat
cmp
xor
lahf
mov
es
hlt
fimull
mov
out
mov
lds
addb
mov
and
cmp
push
cwtl
sti
sbb
lock
jl
shll
jmp
jmp
fisttpl
sub
in
inc
cmp
stos
jmp
lods
decl
inc
cwtl
sbb
enter
jns
ljmpw
mov
fstps
lods
inc
test
mov
bound
scas
loope
xchg
xlat
adc
xchg
mov
pop
cmpsb
or
jo
jl
jmp
lcall
or
jle
into
je
lahf
inc
add
stos
dec
movsl
mov
jg
adc
movsb
xchg
mov
icebp
cmp
pop
insl
xchg
adc
imul
jnp
cltd
dec
lret
lret
xchg
enter
or
inc
push
jo
inc
mov
mov
lods
xchg
fs
mov
mov
lret
fs
js
jae
leave
and
sarl
leave
test
loopne
sub
mov
jle
cld
popa
lods
add
into
push
jne
jle
and
pop
in
fidivl
mov
inc
cmp
jbe
mov
out
sub
inc
inc
nop
sbb
jmp
insb
inc
adc
mov
inc
lods
popa
cs
sti
jb
xchg
or
mov
ds
pop
dec
cmp
fldenv
sbb
ljmp
jmp
es
mov
adc
test
jmp
pop
cmp
sbb
mov
scas
outsb
xor
cbtw
call
add
cmpsl
push
cli
test
arpl
xchg
dec
pop
outsb
in
out
repz
jb
in
jmp
fbld
xorb
mov
jl
in
mov
stos
push
pop
fidivrs
fsub
outsb
pushf
dec
shll
cltd
cmp
outsb
imul
in
pop
inc
jbe
or
sub
mov
inc
jmp
je
stos
loop
mov
mov
or
test
dec
sahf
idiv
popa
insl
sarb
or
or
ljmp
loop
dec
add
dec
pop
pushf
and
or
inc
sbb
movsb
inc
lods
lods
jbe
ss
add
mov
push
push
add
push
adc
sti
mov
add
ror
adc
movsb
arpl
mov
jle
retw
or
addr16
pusha
jle
dec
shrb
lahf
cmp
dec
dec
xor
mov
test
or
mov
sbbl
or
shr
insl
pop
push
xor
rcr
call
add
es
sbb
sbb
leave
fisubrs
cltd
cs
inc
int3
push
cmp
cmp
jns
clc
push
mov
inc
ds
pop
mov
test
pusha
jg
mov
lods
fstpt
cmp
cmp
push
mov
iret
or
jl
mov
stc
xchg
orl
sbb
repnz
push
int3
mov
xchg
call
addr16
sahf
jmp
lea
aas
clc
enter
popa
or
mov
out
cltd
flds
xor
cmpsl
add
push
adc
sub
ss
decb
stc
and
inc
dec
sub
jno,pn
daa
cwtl
mov
adc
pop
jo
ror
add
jns
mov
and
push
mov
cld
mov
lahf
loopne
adc
int3
push
ds
sbb
or
sub
in
push
pop
add
fld
xor
out
icebp
xchg
inc
and
mov
inc
lcall
push
das
adc
repz
dec
lahf
sbb
inc
xchg
jmp
or
lret
repz
sahf
fadds
push
jae
enter
loopne
add
sub
ja
rcll
stos
and
cld
pop
xlat
int
pop
pop
dec
add
jnp
js,pn
xor
in
sbb
leave
or
loopne
lcall
cs
movsb
push
push
mov
out
test
sub
ljmp
mov
int
mov
shlb
inc
out
sti
jp
adc
cmp
and
xor
fs
repnz
subl
sub
mov
cmpsl
mov
push
std
sub
cmp
sub
loop
dec
popf
pop
stos
mov
jo
push
leave
jbe
push
int3
and
cmp
pop
jae
lahf
fidivrs
and
inc
sarl
sbb
adc
cmp
addb
add
jmp
adc
hlt
xor
mov
jl
hlt
dec
mov
or
cmpsb
lret
scas
jg
pop
cmp
dec
movsw
adc
and
dec
mov
fildll
pop
cmp
stc
or
jle
lea
add
pop
into
sub
stc
int
fcmovu
sub
jb
jns
test
int3
dec
inc
or
lcall
daa
and
adc
jl
or
ljmp
cmpsl
or
ss
push
push
jg
push
sub
ljmp
in
shll
aad
add
push
andb
mov
fwait
cwtl
and
push
imul
push
pusha
xor
xor
sbb
stc
lcall
mov
xchg
mov
loop
jae
out
jle
inc
pop
into
ficompl
sbb
inc
and
loop
ja
adc
hlt
mov
ficomps
jbe
jle
mov
push
mov
pop
cltd
testl
das
fwait
fs
mov
jo
es
std
fwait
call
addr16
outsl
es
or
andl
sub
jmp
or
sahf
int
iret
lret
push
mov
jns
pop
push
bound
mov
add
pop
lods
nop
adc
stc
cwtl
pop
fistpll
pushf
rcl
je
inc
aas
push
xor
push
into
cmp
push
jns
mov
repnz
and
pushf
mov
mov
or
ds
mov
in
xchg
jecxz
and
cmpb
cld
clc
aas
ja
jmp
pop
jbe
inc
aam
cwtl
mov
outsl
push
adc
sti
insb
xor
xor
sub
jo
jp
gs
lahf
out
sub
call
add
inc
das
int
sbbb
push
dec
addr16
mov
ja
inc
pop
pop
inc
dec
scas
add
cmp
cli
ficoms
loop
add
ss
rcrb
aad
push
lds
adc
xchg
sub
outsb
enter
inc
pop
fdivl
pusha
dec
sbb
push
jns
add
dec
pop
dec
pop
out
jo
add
test
ret
xor
cmpb
adc
sub
mov
cmpsb
jl
pop
icebp
adc
insb
lret
and
dec
nop
insb
push
ret
fbstp
movl
out
xchg
jl
popf
xor
ja
dec
dec
jmp
mov
std
push
fdivs
adc
dec
push
adc
das
rcrl
test
stos
out
jno
movl
pop
jecxz
ds
aaa
and
sub
mov
and
pop
in
int3
sub
mov
or
xor
xchg
jns
xor
in
cltd
out
jge
jmp
add
out
fcmovbe
stos
push
imul
addr16
xor
xor
adc
push
jp
xchg
aam
sub
imul
mov
mov
mov
call
dec
jp
xchg
or
fisttps
aaa
int
pop
js
fdivrl
lcall
je
jo
dec
cltd
fcmovne
insb
rcr
mov
aaa
shll
or
divb
cmp
push
push
sbb
inc
xlat
mov
and
jmp
aad
sbb
xor
jae
jbe
mov
xchg
into
mov
push
fmull
add
mov
in
cmp
sub
lods
cmp
mov
sub
xchg
sub
clc
jl
mov
xchg
mov
and
es
negb
jecxz
fimull
cmp
xchg
xchg
into
xor
mov
jne
or
push
roll
iret
and
into
enter
movsb
jmp
pop
popa
sub
jecxz
adc
mov
call
aam
lods
in
pop
sti
repz
lods
inc
fistl
mov
lret
movsl
lea
xor
test
inc
jmp
or
mov
imulb
sbb
fnsave
outsl
adc
ljmp
addr16
outsb
das
inc
mov
loop
lock
sti
cli
push
inc
and
pop
nop
cmp
shll
cmp
repz
mov
les
push
notl
dec
dec
out
mov
in
orb
cld
jl
movsl
dec
add
adc
sub
call
xchg
mov
ficoms
mov
pop
pushf
push
ret
sbb
sub
pop
pop
cs
pop
mov
dec
pusha
lret
mov
mov
cltd
divl
pop
pop
sbb
xchg
inc
int
repz
daa
ds
pop
mov
add
mov
sub
cmp
add
cwtl
in
test
and
std
xor
mov
adcl
fbstp
les
bound
pop
jne
push
xor
push
out
and
inc
fsubl
inc
aad
pop
mov
dec
fidivl
xchg
sbb
in
xchg
fdivrp
sub
in
ja
nop
adc
movsl
sbb
sub
sub
rcl
test
loope
inc
fs
jge
pop
dec
test
jle
call
push
sti
sti
add
adcl
adc
icebp
mov
cmp
mov
mov
jmp
xchg
jo
pop
push
inc
pop
jne
mov
xchg
mov
scas
pop
mov
in
inc
or
stos
xor
jmp
iret
rorl
shrl
int
and
cmp
push
test
lods
jns
cs
stos
dec
ret
mov
loop
ljmp
jnp
xchg
cld
js
push
loopne
hlt
or
xor
insb
jbe
and
movsb
inc
add
fldenv
xchg
in
mov
aaa
mov
push
push
out
addr16
or
sarb
stos
push
add
xchg
loopne
shlb
pusha
fs
add
cmp
shl
and
vpmacssww
push
jl
inc
jo
rcrl
jle
jmp
mov
xor
xor
insb
shll
lcall
test
xor
fucom
sub
cmp
addr16
cmc
movsb
cli
xlat
fisttpll
stc
mov
hlt
pop
sarl
shll
and
and
rclb
mov
mov
js
push
cltd
pop
sbb
sub
dec
cmc
daa
cltd
mov
xlat
xchg
cmp
ja
inc
insl
mov
divb
scas
loopne
je
nop
lahf
pusha
xchg
mov
mov
int
sbb
adc
xor
cli
test
or
test
fwait
inc
sbb
inc
aaa
xchg
aaa
movsb
fs
pop
push
lahf
nop
xchg
dec
jo
loope
push
mov
mov
ret
or
pop
and
jbe
imul
rorl
in
and
scas
cmp
jge
es
sar
or
aam
jmp
jae
sbb
fimuls
in
dec
cmp
xor
outsl
and
xchg
mov
dec
mov
inc
mov
hlt
adc
push
adc
xchg
mov
cmc
sbb
inc
push
daa
sbb
cmp
hlt
cli
iret
jg
or
jne
dec
test
aas
xchg
mov
mov
xchg
testb
and
nop
fdivrl
xor
ds
or
inc
pop
xchg
and
shll
mov
lods
cld
xor
iret
push
pusha
cmpsl
popa
fisttpll
icebp
mov
xor
fwait
sbb
out
sub
pop
push
and
stos
dec
dec
cmp
ficomps
mov
add
or
pop
inc
ficoml
or
inc
adc
jnp
jno
fldl
mov
push
mov
movsb
lds
out
jle
ja
inc
and
push
xchg
loopne
pop
gs
pop
test
rcl
in
bnd
xor
jns
scas
cmp
jo
mov
xor
xor
cmp
mov
cwtl
and
aas
aam
dec
mov
pop
aad
adc
jmp
jns
xchg
push
insl
pop
mov
cmp
test
inc
xchg
or
jne
rorb
cmp
mov
scas
sbb
lret
inc
shrl
rorb
jmp
push
filds
imul
pushl
fdivl
leave
lret
dec
and
or
test
adc
out
stc
or
cltd
clc
push
fnstenv
stos
push
mov
xchg
mov
iret
scas
iret
test
leave
cmpsb
mov
mov
pop
xor
cmp
testl
outsb
stc
push
stos
cmp
rcl
das
fsts
cmp
mov
mov
sub
inc
inc
mov
push
cwtl
or
sbb
add
cmp
fcom
jg
sub
mov
lods
negb
jno
test
push
clc
xchg
nop
into
in
xchg
sub
lods
sub
dec
adc
cmp
jno
popa
mov
mov
dec
jmp
push
cmpsb
push
xchg
sbb
mov
imul
mov
push
imul
sub
out
dec
dec
jmp
xchg
cs
das
or
or
inc
out
push
push
loop
add
pop
mov
add
pop
fists
sub
out
out
push
lock
xor
jns
movsl
jae
adc
xor
jl
and
push
cmpb
dec
pop
scas
jbe
adc
je
cmpsb
cltd
fldlg2
pop
rcr
test
popa
adc
imul
push
lock
fnstcw
add
rcll
call
mov
jb
pop
loopne
inc
xor
cmp
mov
xchg
into
out
push
fsub
pop
fwait
loopne
jae
xchg
into
sub
fld
push
push
dec
adc
push
into
jb
enter
movsl
sbb
push
dec
iret
dec
inc
jge
mov
loopne
lds
fwait
cmp
dec
adc
lahf
cli
or
lea
fisttpll
js
jge
and
inc
mov
ds
test
mov
cmp
ja
das
push
cmp
pushf
or
push
ss
dec
ret
shl
adc
and
add
int3
sbb
lea
out
int3
data16
and
cmp
dec
cmp
cmp
and
les
xchg
int3
cmp
push
jnp
jmp
adc
sti
pop
pop
stos
psubusb
dec
icebp
mov
inc
movsl
loop
aam
mov
xlat
jl
aaa
inc
lahf
out
mov
outsl
cmp
push
xchg
pop
mov
ret
push
scas
in
fildll
popf
rcl
mov
aam
repnz
sub
sbb
and
and
cld
roll
push
mov
aad
inc
sbb
lds
inc
inc
lds
ja
add
stc
ja
outsl
enter
pop
loope
and
addr16
mov
cmp
or
int3
movzbl
shrl
ficomps
in
mov
repz
fidivrs
xor
fisubs
push
mov
insl
ja
into
pop
dec
es
add
cmp
jle
outsb
xor
push
lahf
push
inc
fnstsw
popf
leave
bound
in
dec
push
mov
dec
push
lret
mov
inc
sub
push
inc
pop
or
sbb
xor
fstpt
mov
fistpl
mov
popa
out
adc
and
push
stos
jmp
mov
enter
push
inc
repnz
xlat
mov
add
cmpsb
iret
adc
add
incb
fdivr
cmp
xchg
mov
hlt
nop
jae
jae
mov
mov
adc
push
int3
out
imul
xchg
sbb
mov
jae
cld
xlat
xchg
xor
cmc
cmp
add
sarl
lret
add
push
mov
mov
mov
xchg
push
test
test
aam
adc
pop
dec
xchg
lods
jae
inc
cs
pop
dec
adc
inc
lret
stc
pop
jle
xor
test
fcompl
jecxz
jbe
sti
ret
mov
adc
insb
add
icebp
les
das
mov
pop
pusha
jmp
cltd
pop
mov
loopne
push
scas
sarl
leave
lods
sarl
lahf
xor
shl
cmp
sub
pop
mov
jae
push
mov
push
xor
push
mov
push
fnsave
cld
inc
jg
mov
scas
or
jae
jbe
mov
xchg
xlat
mov
pusha
push
in
cwtl
mov
daa
daa
add
in
pusha
add
ss
sbb
nop
dec
dec
sub
jmp
mov
mov
jno
out
les
mov
lock
jmp
in
dec
das
mov
mov
popl
adc
dec
jae
jbe
dec
and
cwtl
inc
dec
loope
divb
out
adcl
in
and
sarb
stc
fwait
mov
jl
pop
test
inc
in
stos
mov
scas
pop
mov
add
imul
push
jecxz
cltd
push
sbb
call
cmpsl
arpl
out
in
inc
rcrb
mov
sbb
out
inc
jb
das
dec
repz
fistpl
jp
dec
fmull
and
lods
sub
pop
fstpl
xchg
mov
sti
cli
mov
pop
xor
xchg
mov
push
add
lcall
adc
pop
loope
mov
pusha
mov
cmpsb
ljmp
push
lcall
pop
inc
push
jne
mov
xorb
xchg
paddq
or
aam
aaa
dec
cmp
ss
add
fadd
dec
clc
lds
repz
fimuls
push
xor
popf
ja
in
int
iret
push
les
add
das
cmp
pop
sti
pop
cmp
mov
pop
or
jl
aas
push
cwtl
sbb
fwait
xor
dec
cmpb
in
rcrl
add
cwtl
inc
ds
push
in
pop
ret
flds
cmp
push
aas
hlt
mov
inc
test
sbb
lds
mov
mov
mov
sub
xchg
outsb
mov
hlt
jb
int3
ror
frndint
into
scas
lahf
pop
fwait
push
push
std
cli
pop
inc
push
sahf
xchg
cmp
lds
pop
mov
lcall
xchg
jnp
xchg
fsubrs
mov
lret
addr16
fadd
in
nop
inc
dec
outsb
push
leave
rclb
jne
clc
clc
dec
xor
jmp
and
push
call
cli
dec
push
sbb
jae
mov
das
push
xor
js
jecxz
xor
pop
ja
sub
lret
mov
roll
adc
adc
add
in
dec
jmp
jnp
lds
ret
aad
imul
imul
sbb
push
int3
push
shrb
repz
pop
jp
loope
jne
pusha
popa
mull
add
or
mov
add
pop
jb
jne
or
scas
cmc
push
dec
scas
cmpl
iret
cmp
mov
jae
xchg
repz
push
pushf
or
mov
pop
fcoms
dec
push
add
push
add
pop
xchg
int3
pop
repnz
shl
xchg
lea
in
cmp
movsl
and
ja
ja
aaa
cltd
pop
push
sbb
add
lcall
leave
mov
and
lods
add
add
add
nop
add
adc
aaa
inc
mov
push
inc
daa
lock
rcl
jg
movsb
inc
mov
xchg
popa
mov
and
ss
js
ficomps
adc
imul
fadds
mov
ss
jnp
and
je
rcll
xchg
sahf
inc
pop
fnstsw
adc
add
xchg
ss
lcall
xchg
or
popa
cmc
adc
into
or
sub
nop
cmp
lret
add
cmpsl
xor
cmp
dec
cmp
lods
rorb
dec
aad
mov
xor
cmp
js
adc
out
or
dec
cli
or
sti
lea
lcall
mov
sub
stos
mov
cld
cld
dec
dec
sub
cld
stc
mov
push
subl
addr16
insl
call
dec
or
push
and
pop
dec
pop
outsb
fwait
ljmp
and
inc
scas
test
mov
mov
xchg
stos
and
icebp
inc
mov
xchg
jp
out
jno
movsb
cmc
out
xchg
cli
xor
pop
mov
and
fidivrl
fsubl
xchg
in
imul
lock
pushf
or
sbb
cmp
dec
sti
in
cltd
je
in
xchg
dec
add
mov
xor
xchg
fwait
xchg
scas
inc
xor
dec
pop
into
mov
insb
popf
sbb
dec
inc
lock
mov
lahf
test
jne
std
lds
loop
loop
and
insl
imul
mov
sub
out
mov
cmp
and
mov
dec
ljmp
cmp
lret
repz
pop
jne
cmp
scas
test
adc
add
mov
push
insl
les
adc
jle
mov
xor
sub
pop
je
clc
jle
mov
lock
pop
inc
test
mov
adc
sub
dec
fcmovne
cmpsb
inc
imul
imul
cmpsb
mov
scas
jg
cmp
dec
xor
sti
dec
ja
bound
les
sarw
sbb
xor
mov
das
fcmovu
movsl
cmp
mov
lret
dec
xlat
outsb
adc
add
sbb
or
push
and
das
scas
dec
scas
mov
fs
out
or
out
xchg
fstpt
fs
xchg
xchg
xchg
in
es
mov
xchg
leave
test
jbe
test
test
fnstsw
jge
push
insl
cmp
xor
idivl
sub
lods
aaa
aaa
adc
in
push
and
jns
and
dec
push
loopne
sahf
inc
mov
fisttpll
insl
and
sbb
adc
xchg
lret
sub
mov
std
push
jb
and
loop
push
push
popa
adc
call
mov
sbbb
stc
mov
cmpsb
stc
sbb
in
jl
push
mov
xchg
add
mov
mov
in
xor
dec
cs
add
fsts
xor
lret
mov
aam
and
xchg
dec
mov
push
push
shlb
mov
out
add
push
mov
lret
insb
fcomps
lcall
jp
push
and
xchg
nop
data16
sti
add
stos
jg
adc
dec
loopne
mov
add
out
notb
call
xchg
nop
sahf
add
iret
and
adc
test
push
pop
lods
add
repz
test
mov
xchg
lea
call
std
out
jb
stos
in
and
pop
sub
jnp
pop
pop
xchg
pop
cmp
cmp
cwtl
push
mov
jecxz
mov
adc
ds
mov
es
testb
lret
daa
insb
ss
adc
int3
xchg
mov
mov
mov
mov
scas
xchg
je
inc
ficompl
xor
popf
mov
inc
cmp
inc
popf
mov
and
pusha
xlat
aas
sub
dec
mov
testl
add
lcall
mov
and
mov
sub
imul
push
hlt
ds
inc
pavgb
lods
adc
or
cld
jae
pop
fistpl
add
pop
repz
push
cltd
std
xchg
test
add
add
mov
das
ficompl
sti
sub
sub
test
xchg
dec
loopne
clc
xchg
sub
cld
pushl
mov
popf
mov
lds
loop
cltd
mov
rclb
test
push
mov
pusha
mov
push
out
enter
inc
or
sub
adc
lea
adc
dec
mov
pop
divb
push
jmp
push
inc
movsb
mov
jns
mov
stos
andb
push
mov
out
hlt
sti
jb
xor
push
inc
sub
xchg
lret
outsb
test
jbe
adc
out
push
adc
bound
scas
sbb
add
sbb
adc
pusha
mov
ret
jbe
push
pop
aaa
cmp
or
sarl
movsb
dec
xchg
mov
inc
ret
pop
inc
add
jbe
mov
movsb
arpl
faddl
hlt
std
imul
jmp
and
and
push
pusha
aam
xchg
push
ret
adc
daa
pop
enter
cwtl
xlat
jge
imul
add
out
loope
pop
loopne
pop
add
sbb
shll
in
insb
jae
in
icebp
xchg
push
mov
adc
mov
mov
loopne
jmp
fldt
ljmp
jbe
mov
add
push
push
cmp
xchg
loop
inc
sub
pusha
and
jae
jle
mov
jecxz
loop
inc
push
push
add
cli
lret
xchg
mov
inc
insb
adc
dec
sbb
aam
add
call
mov
xor
xorl
sub
sbb
scas
mov
loop
fisubs
shll
lar
push
repnz
xchg
push
cmp
or
in
xorb
lret
dec
loop
sbbl
lods
push
das
addr16
push
pop
pop
mov
mov
sbb
or
es
jne
cmp
cmp
mov
mov
enter
cli
jb
daa
xor
pushf
and
fnstsw
loope
xor
mov
cs
mov
push
sub
xchg
je
cmc
aam
je
adc
pop
and
jbe
sub
add
mov
cmovg
mov
inc
push
mov
dec
imulb
jo
fs
add
jbe
pop
ss
scas
push
aad
mov
repnz
mov
xor
dec
add
imul
xor
xchg
push
hlt
lcall
sub
pop
sbb
mov
jg,pn
out
fisubrs
adc
xchg
mov
sub
xchg
sub
xlat
and
dec
cwtl
ret
fsts
cmpl
out
jecxz
push
jg
repz
pop
sbb
pop
test
cli
adc
add
sub
mov
stc
in
mulb
inc
inc
mov
rorb
insb
sti
inc
movsl
sbb
mov
in
cmp
jle
sub
test
mov
dec
sbb
mov
jge
cli
stos
push
push
cmp
and
sbb
mov
sub
push
push
into
mov
fwait
mov
push
ficompl
xchg
sti
insl
pop
imul
jmp
xchg
sub
out
push
rol
pop
push
test
pusha
ret
mov
pop
add
ss
dec
test
adc
mov
call
rorl
mov
lea
psrad
lahf
add
or
pop
add
mov
insl
xchg
loop
fcmovb
ret
sbb
cmpl
mov
push
pop
xor
shll
adc
sub
imul
fcoml
mov
sub
leave
xchg
movsl
ret
xor
call
in
rolb
loopne
ljmp
pop
mov
push
jp
gs
jno
lret
out
je
pop
mov
or
cmp
xchg
jo
fxtract
mov
daa
nop
pop
fcmove
das
jecxz
mov
add
cmp
push
mov
mov
dec
mov
and
dec
test
mov
rcl
lcall
aaa
fsubs
xor
fcoms
add
into
stos
mov
dec
xor
sti
mov
push
cmp
dec
mov
adc
mov
pop
jne
jno
mov
push
mov
xchg
call
fwait
sahf
push
mov
add
push
cmc
mov
adc
call
ret
xchg
sarl
mov
scas
cs
sub
pop
cmpsb
mov
cmp
sbbb
xlat
lods
iret
cltd
ret
push
lret
xor
sub
mov
stos
jbe
mov
add
jno
sub
inc
pop
cmp
decb
jmp
es
sti
cmp
dec
jo
add
in
cltd
cmp
loopne
xor
add
jo
or
loop
mov
xchg
mov
aas
adc
popa
std
repz
cmp
scas
jmp
inc
subl
clc
mov
repnz
aas
inc
out
fldt
stos
pushf
pop
mov
pop
jo,pt
mov
out
jmp
addr16
mov
rcll
stos
mov
fmull
hlt
mov
dec
mov
cltd
jl,pt
xchg
jecxz
jae
jns
fbld
scas
aas
cmp
and
in
inc
das
jne
dec
ficomps
mov
cmp
jmp
dec
xor
mov
add
les
xchg
pusha
out
mov
cli
stc
adc
test
lock
mov
pop
xchg
sahf
or
push
adc
shl
push
cmp
mov
dec
pop
mov
shlb
arpl
ja
icebp
mov
cmp
int
mov
add
movsl
cmpsl
mov
ja
fistpll
out
inc
sub
mov
int3
cmpsl
rcr
mov
mov
in
add
or
ds
das
push
scas
jecxz
xor
add
sbb
loop
out
mov
mov
bound
mov
dec
movsl
aad
lods
std
punpcklwd
xchg
addb
cmp
movsb
rclb
jge
mov
cmc
push
bound
pop
ja
pushf
ret
xchg
int
jne
jae
leave
mov
leave
xchg
lods
stos
test
pop
jb
jmp
dec
enter
fstpl
stos
fidivs
jbe
cwtl
ljmp
push
decb
or
cs
repz
dec
dec
xchg
inc
lods
rclb
cmp
pop
enter
push
xchg
xchg
js
inc
hlt
jno
cmp
je
jp
cmp
jno
push
sbb
xorl
cmc
in
jmp
add
mov
ror
jle
dec
daa
and
pop
gs
pop
out
and
imul
ljmp
adc
sti
or
mov
mov
hlt
bound
jno
into
xlat
add
pop
leave
aad
out
push
push
or
lods
iret
mov
scas
loopne
adc
adc
sbb
mov
add
sti
test
lcall
lods
scas
pop
inc
test
aam
jl
mov
movsb
lret
or
subl
filds
xchg
push
or
mov
xor
xchg
sbb
aas
rolb
xchg
xor
sub
or
fcompl
jno
xor
loopne
push
mov
movsl
fidivl
mov
push
dec
pop
inc
mov
dec
pushf
xor
aad
scas
xor
jns
jecxz
pop
xor
sub
pusha
loop
stc
aad
push
test
stos
push
and
ja
pop
mov
jg
or
cmp
pop
psubq
push
cmp
filds
cmp
pop
push
lahf
fdivrl
pop
inc
cli
jnp
mov
push
xchg
adc
dec
divl
pop
cmp
jo
out
inc
hlt
je
mov
mov
xchg
mov
mov
and
push
mov
movsb
popf
es
sub
shll
ja
fsubr
mov
outsb
jmp
sbb
mov
inc
repz
mov
or
or
out
jl
add
jmp
sbb
adc
pop
pop
xchg
push
into
shlb
enter
movsl
pop
sub
loop
inc
jle
sarl
pushf
cmp
bound
pop
mov
leave
outsb
ds
idiv
cld
imul
xor
fs
jl
xchg
adcl
adc
aam
adc
and
mov
outsb
scas
mov
rcr
xchg
cmp
insb
cmpsl
mov
stos
push
icebp
icebp
inc
xchg
xor
dec
and
aad
lcall
lret
push
jl
adc
jecxz
push
adc
cs
xor
pop
adc
or
cmc
rcrb
rorb
in
stos
mov
xor
pusha
fsubrs
jae
scas
ficoml
pop
adc
dec
std
sbb
jo
mov
xchg
fadds
sti
mov
jbe
lret
add
popf
sbb
jo
inc
ffree
stc
out
sub
hlt
call
minps
sub
call
sahf
insb
movsl
inc
je
sub
mov
rcl
das
lret
xchg
cmp
cltd
dec
cltd
add
bound
adc
popa
stos
sbbl
mov
jmp
adc
setge
notl
mov
push
pop
push
lahf
sbb
or
imul
nop
clc
stc
mov
pusha
lods
pop
sbb
or
and
push
add
lea
imul
das
out
nop
lahf
pop
mov
imul
mov
xchg
ljmp
pop
cmpsl
cmp
jbe
loope
adc
inc
loope
fildl
into
jbe
mov
pop
lock
sbb
mov
ds
divl
es
adc
xlat
mov
cmpsb
mov
rol
cld
or
fistpl
cmpsl
push
jne
mov
loope
pop
sti
jae
jnp
sub
cmp
mov
dec
mov
mov
xchg
aaa
xchg
ret
es
je
adc
insl
mov
or
mov
loop
sub
dec
in
inc
test
popf
cmp
push
push
sub
jnp
fdivrs
inc
sub
shlb
test
jb
and
jl
xchg
jp
dec
sbb
or
push
ror
mov
xchg
in
sbbb
icebp
push
inc
jnp
mov
or
pop
lock
pop
push
xchg
lret
aaa
mov
das
jno
push
push
mov
push
jno
repnz
and
and
xchg
mov
push
ja
cmp
push
mov
mov
aaa
in
cmp
xchg
or
or
scas
popa
sarl
and
and
xchg
imul
adc
sbb
cmp
out
mov
mov
jns
mov
subb
mov
icebp
lahf
inc
xor
fsts
scas
iret
out
add
adcl
subl
mov
inc
mov
test
xchg
mov
push
mov
std
ficoml
pushf
xchg
leave
xlat
mov
enter
xchg
call
jno
jle
shll
cmp
sti
outsl
sti
lcall
test
loopne
xor
sub
push
es
cmc
movsl
loope
xlat
dec
je
mov
mov
jp
daa
out
xchg
dec
pop
sbb
push
pop
xor
mov
lds
cmp
xchg
pushf
pop
push
push
push
sahf
push
push
sub
cmp
push
cmp
cli
dec
testl
pop
push
in
pop
push
std
push
pop
adc
cmpsl
icebp
add
add
adc
xor
cmp
adc
insl
imul
lahf
jl
cmp
adc
add
push
xorl
cmpsl
push
and
xor
lock
ljmp
iret
es
inc
jae
lock
sti
and
mov
mov
mov
sub
push
sbb
add
and
inc
bound
mov
adc
jl
in
sbb
stc
leave
sub
adc
dec
scas
push
mov
jne
cld
push
in
loope
inc
rolb
cmp
or
test
lret
mov
push
xchg
mov
test
testb
rcll
mov
orb
call
das
or
bound
pusha
loope
xchg
push
or
nop
push
mov
stos
es
sub
xor
sarl
sbb
in
pop
xor
int3
adc
or
loop
jp
or
and
and
and
shrb
ljmp
loopne
int
in
movsl
lods
xchg
dec
mov
push
stos
icebp
jbe
jbe
leave
aas
js
lcall
and
out
iret
mov
dec
imul
sbb
sbb
xchg
insl
ret
jne
stc
cmc
xor
fildl
aas
pop
shrl
adc
jle
cltd
mov
push
mov
cs
mov
push
clc
stos
ds
mov
icebp
pushf
xchg
sub
clc
imul
in
aaa
adc
jp
adc
out
fsubl
fstpl
mov
and
and
cmp
and
dec
dec
xchg
pop
mov
ret
dec
outsl
cmp
leave
pop
icebp
dec
pop
std
hlt
mov
mov
xchg
push
mov
loope
orl
sub
mov
sbb
mov
inc
insl
and
mov
adc
out
adc
sub
jle
dec
mov
sbb
push
lds
pop
dec
mov
sbb
insb
call
std
test
gs
sbb
mov
adc
jge
insb
mov
ljmp
ficoms
aad
lcall
fidivrs
lret
jmp
test
fcompl
stc
inc
fdivp
push
mov
and
rolb
pop
cmpsb
push
adc
sbb
push
sbb
ds
addr16
push
push
sub
push
mov
xor
jne
jb
adc
or
cmp
jns
negb
xchg
pop
fisubrl
mov
ds
sti
incb
pop
mov
xor
pop
xchg
or
ficoms
jnp
push
shl
bound
adc
rcrl
jae
mov
cmp
xchg
insb
into
into
xchg
pusha
lods
imul
jle
adc
cmpsl
in
stos
xchg
mov
and
inc
incl
in
rcl
adc
lahf
scas
pop
xchg
pop
movb
insl
repz
ss
push
xchg
ret
sahf
lods
pop
push
inc
sub
loopne
gs
push
out
sahf
aam
sbb
xchg
fs
cmp
loopne
push
and
das
mov
inc
mov
jnp
xchg
cmpl
bnd
loope
gs
std
cltd
and
stos
mov
dec
out
aas
ficoms
shlb
je
lret
xchg
mov
pop
mov
cmp
outsl
scas
lds
fnstsw
out
inc
mov
icebp
add
lret
sahf
sub
jl
xchg
aas
xchg
dec
lock
sub
loope
sbb
mov
andl
or
negb
scas
rcll
add
daa
xchg
xchg
pop
pop
loope
daa
hlt
or
test
fs
in
and
ffreep
loopne
scas
lods
cmp
out
adc
cmp
not
icebp
mov
pop
fstp
insb
dec
addb
sub
sub
stos
pop
rorl
sub
les
inc
push
in
push
fxch
cld
and
and
fldt
or
test
adc
mov
mov
shrb
mov
iret
daa
mov
sub
inc
dec
test
jecxz
xchg
mov
pop
adc
xchg
and
mov
ja
outsl
xchg
xor
pop
rorb
sub
mov
mov
cwtl
cmp
repnz
add
mov
jg
out
add
dec
and
cmp
pop
outsl
adc
mulb
sbb
in
arpl
std
in
mov
xor
int
push
idivb
rorl
sbb
and
xor
dec
fwait
in
adc
loope
push
pop
xor
bound
xor
stos
pmaxub
mov
dec
lods
add
mov
xorb
and
or
jmp
aaa
leave
dec
inc
daa
mul
jmp
test
mov
fldt
push
push
xchg
and
out
add
jo
jle
mov
les
or
fldl
leave
push
jmp
add
sbb
mov
mov
jle
push
push
mov
adc
mov
stc
xchg
rcll
xor
adc
adc
add
nop
in
fidivrs
divb
js
iret
ffreep
mov
mov
lds
mov
rorl
jb
sub
lahf
movsl
pushf
ja
orl
mov
pop
mov
mov
adc
dec
lds
fwait
cwtl
mov
pop
clc
sbb
push
fwait
sahf
xor
jmp
xchg
iret
hlt
movsb
sarb
iret
adc
imul
xor
or
incl
int3
pop
adc
rorb
insl
test
subb
adc
or
cmp
mov
rclb
and
int
jmp
ret
jcxz
outsb
mov
icebp
jecxz
nop
icebp
inc
iret
dec
outsl
jecxz
mov
sbb
mov
push
int
pop
sub
and
or
into
daa
sti
add
xchg
push
fisttpll
pop
mov
js
cmp
repz
jl
sbb
dec
pop
fmuls
testl
fisttpll
out
push
xor
inc
push
mov
push
lock
in
fmul
add
or
jle
jnp
dec
hlt
push
mulb
cmp
shl
and
xchg
shlb
push
push
mov
dec
andb
mov
mov
adc
jle
add
adc
pop
inc
mov
inc
jp
xchg
mulb
inc
mov
lods
sarb
clc
out
ret
imul
shlb
call
lret
gs
fstpl
mov
sub
lret
inc
mov
sub
in
mov
adc
mov
sub
orl
inc
inc
add
sub
mov
and
test
stos
stos
pushl
imul
xchg
or
jnp
pushf
add
rorb
dec
pop
or
inc
das
aas
sbb
and
push
les
push
test
pop
push
cli
inc
in
sar
into
jae
cmp
cld
test
adc
add
rorb
sbb
mov
dec
add
js
inc
pop
iret
mov
mov
data16
fwait
mov
xor
xor
scas
lea
scas
adc
ja
out
pop
pop
clc
dec
adcb
js
roll
mov
jecxz
fdivrs
aad
pusha
cmp
xchg
xchg
mov
mov
mov
jbe
push
adc
inc
add
and
test
adc
lret
gs
and
mov
xchg
inc
dec
adc
add
mov
adc
leave
xor
and
bnd
mov
inc
xor
jl
lds
bound
adc
xor
loop
fcmovu
and
movsl
pmulhw
dec
shrb
scas
lock
push
inc
lock
int
test
lock
adc
in
imul
sbb
jge
cmp
mov
cmp
inc
mov
and
out
dec
jb
push
cmp
cmp
inc
jecxz
cmpsb
es
scas
inc
fwait
jecxz
pop
call
icebp
int3
xchg
dec
js
cmpsl
and
fistpl
or
in
cli
faddp
shrl
xchg
popf
cmpsb
sub
setge
add
and
inc
pop
repnz
pop
add
push
xchg
xchg
popf
mov
mov
lcall
int
dec
mov
sub
fildll
jecxz
sti
ret
adc
xor
jl
cmovnp
orl
scas
add
jmp
cwtl
leave
adc
pushf
cmp
sbb
ljmp
or
test
push
loope
imul
push
out
fldt
nop
dec
ss
out
and
adc
push
xor
rcrb
insl
sub
xchg
into
mov
inc
inc
mov
xchg
fucomp
or
cmpsl
mov
mov
jnp
lahf
add
scas
je
push
hlt
out
dec
cmpsb
mov
and
or
fisubrs
es
sub
pushf
sti
push
or
gs
adc
out
fcomps
fidivs
xchg
popf
outsl
sub
inc
cmc
test
je
cwtl
pop
pop
and
popa
shrl
mov
idivb
xchg
bound
popf
jns
movsl
push
add
add
inc
das
movsb
adc
dec
xor
imul
loopne
or
jge
mov
insl
sub
cmpsl
sahf
cmp
test
sbb
nop
popa
enter
ljmp
inc
sarb
aad
push
push
xchg
cmp
mov
xchg
cld
inc
inc
call
mov
mov
mov
push
push
push
mov
jl
or
outsl
mov
clc
mov
dec
je
jmp
pop
int3
push
sub
inc
xchg
adc
sub
sbb
stos
dec
outsb
pop
and
adc
mov
leave
adc
das
jbe
dec
jp
and
in
insl
mov
test
jb
je
out
mov
push
lret
aad
pop
aaa
pop
sbb
shll
arpl
pop
int
out
daa
iret
shr
nop
push
sarl
pusha
imul
andb
cmp
pop
mov
out
sbb
sbb
xchg
mov
jbe
fidivs
sahf
insl
and
or
xchg
mov
jns
aaa
scas
pusha
add
xchg
cltd
adc
shrb
adc
call
pop
ret
jb
pminub
iret
and
daa
sbb
sub
xor
aas
cmp
aaa
push
aam
xchg
dec
xor
test
adc
or
push
movsb
add
cmp
dec
mov
in
and
dec
imul
lods
aad
pop
lret
and
jb
sub
lods
xchg
dec
data16
lods
test
in
es
push
jl
mov
aad
in
js
pushf
ret
dec
fisubrs
xchg
push
dec
icebp
mov
xchg
adc
sub
push
lds
addr16
jmp
sub
int3
push
sbb
sarl
mov
fwait
xchg
div
fldcw
xchg
or
cmp
js
mov
lret
jns
lret
push
mov
inc
mov
jmp
xlat
mov
mov
test
mov
xor
and
fadds
push
mov
sar
stos
les
dec
dec
lods
push
sub
push
incb
push
sahf
ret
movsl
inc
xchg
xchg
sbb
push
lahf
mov
pop
cwtl
pushf
js
mov
hlt
fstl
lcall
enter
int
insl
sbb
and
stos
sbb
add
popf
jae
leave
inc
js
testl
popa
pop
rcrb
test
int3
xor
in
lret
push
sbb
lea
cld
jl
call
jmp
xor
pop
stos
shrl
test
cmp
mov
out
andb
xor
adc
inc
hlt
je
out
mov
xchg
cmpsb
test
sbb
inc
and
jnp
pop
out
or
scas
sti
push
dec
out
fldt
fwait
xor
sahf
mov
and
adcl
data16
inc
jmp
jbe
jmp
or
in
movsb
insb
inc
dec
pop
dec
stc
adc
hlt
push
test
and
mov
movsb
out
inc
cmpsb
ja
aaa
cmpsl
arpl
adc
sbb
and
fisttpl
mov
push
or
outsb
mov
fs
repz
sbbl
jge
adc
ljmp
fnsave
pop
faddl
mov
sti
fimuls
dec
shrb
mov
sbb
fs
sbb
das
push
mov
fxch
xor
pop
adc
imul
mov
and
fcomps
jge
xchg
xor
movsl
or
in
jns
rolb
xchg
test
jp
adc
pop
pop
xchg
fimull
int
ds
sbb
mov
inc
lcall
cmp
adc
push
jecxz
sub
pop
push
or
jns
test
andl
pop
into
xor
pop
loope
mov
cmp
movsl
sub
mov
jns
sarl
inc
addl
idiv
push
mov
sbb
andl
push
and
stos
fsubs
sbb
out
lret
outsl
inc
nop
jne
adc
dec
je
ds
mov
mov
pop
ja
inc
mov
daa
mov
xchg
sub
fsub
pop
fldcw
mov
aas
pop
xchg
mov
popf
pop
push
int3
ds
es
xchg
in
roll
aas
mov
int
loop
mov
xor
test
test
push
add
loop
cmp
outsl
xchg
jg
push
das
fisubl
mov
push
mov
and
xchg
out
adc
call
jne
and
pushf
mov
flds
push
lock
out
xor
lcall
cli
push
pop
mov
repnz
les
sub
gs
stos
pusha
out
inc
aam
imull
lods
dec
mov
outsb
mov
sub
test
cmp
and
push
stos
jno
adc
movsb
xchg
dec
pop
mov
push
xchg
xor
mov
add
stos
aaa
movsb
test
and
xor
mov
fs
mov
mov
pop
rorl
and
dec
dec
jb
add
jo
and
in
in
rorl
add
dec
outsb
arpl
test
push
jne
and
xor
sub
push
jno
cmp
jg
and
jmp
and
pusha
lret
mov
mov
jb
jnp
pop
cli
sub
mov
rclb
push
inc
out
mov
shlb
xchg
pop
insb
sbb
xchg
lahf
dec
insb
out
push
out
aas
bnd
decl
cs
or
push
icebp
mov
in
enter
popa
sub
stos
jb
loop
xchg
xchg
test
fists
adc
xor
xchg
mov
push
pop
dec
mov
loop
scas
sbb
mov
lcall
jno
mov
xlat
lcall
cmp
fists
push
test
iret
jle
ret
setge
insb
test
test
fdivrs
int
leave
outsl
push
pop
mov
adc
movsl
loope
loope
rcrl
movsl
and
loopne
dec
inc
mov
jmp
idivl
dec
push
stos
aam
int
in
outsl
sub
es
mov
enter
or
loope
adc
mov
popf
sarb
jle
push
mov
dec
dec
or
sahf
ljmp
ja
cmpsl
push
push
and
xchg
mov
mov
jmp
push
push
gs
sar
pop
lods
lret
addb
cli
and
mov
subl
mov
pop
or
mov
push
pop
mov
andb
repz
push
inc
in
inc
loop
sub
in
sti
and
adc
sbb
test
inc
adc
jae
dec
inc
das
ret
jbe
lret
push
xlat
cwtl
jg
or
sbb
jns
fbld
mov
repnz
mov
pop
imul
mov
lret
inc
jb
repz
sti
in
popa
ja
or
or
arpl
mov
in
mov
loop
mov
in
mov
and
inc
jb
adc
pusha
pop
and
and
fdivr
mov
test
and
jl
lret
xchg
imul
bound
mov
int
push
popf
pop
loop
adc
pop
shlb
xor
pop
mov
dec
adc
test
or
lahf
inc
mov
ficompl
jb
and
mov
cmp
lret
repz
sub
add
repnz
ljmp
mov
jb
fbstp
fcoms
push
cltd
jecxz
mov
push
mov
test
sub
cmp
int
rorb
mov
or
addb
mov
cmc
int
mov
mov
aaa
xchg
inc
mov
sti
or
leave
dec
xor
test
lock
mov
pop
push
or
sub
jae
add
sub
into
bound
mov
ret
or
out
push
shrl
mov
push
cs
push
add
jge
dec
lcall
xchg
cmp
mov
sbb
orl
xor
inc
hlt
sub
fldcw
jne
fwait
sbb
sbb
cltd
inc
fsub
fisubrs
xor
push
and
or
inc
fucomp
outsl
int3
in
test
loop
ss
push
test
sbb
daa
outsl
sbb
cmpsl
in
out
pusha
ret
lret
adc
in
enter
xchg
shr
sbb
jno
enter
cltd
fmull
mov
xchg
clc
icebp
xor
repz
jne
mov
stc
scas
mov
xchg
rcrb
xchg
popa
lea
dec
dec
fisttps
xchg
aas
scas
in
xor
dec
push
mov
addl
fwait
mov
inc
xor
sbb
push
mov
shr
in
cli
or
mov
sub
incb
mov
dec
mov
mov
scas
and
dec
sbbl
addb
or
dec
and
addr16
lods
test
decl
dec
sbb
sub
mov
loope
mov
xchg
push
lcall
and
sbb
lahf
add
lret
and
add
push
repnz
loop
fsts
out
xor
inc
mov
push
xlat
push
mov
jno
movsl
sbb
inc
xlat
push
mov
loope
std
fldl
fsubrp
scas
mov
mov
jle
rep
hlt
xchg
adc
sub
inc
test
or
jle
push
lds
inc
sarl
fcomps
or
mov
push
dec
mov
pop
mov
inc
sub
mov
sbb
pop
mov
nop
push
scas
mov
scas
std
shll
sub
mov
loope
hlt
and
test
loop
stos
jge
jns
nop
std
cs
lret
add
mov
xor
jmp
inc
pusha
sub
or
mov
sub
fimull
mov
cltd
mov
push
cmpsb
mov
cmpsl
mov
inc
ja
scas
cli
sbbl
sub
icebp
lea
lds
cmp
inc
jb
jp
les
lea
sbb
adc
lret
sbb
pop
jge
sbb
xor
mov
cli
push
pushf
adc
mov
and
xchg
ficompl
mov
scas
push
pop
insl
out
push
jae
push
sub
mov
gs
push
push
daa
aas
fsubrs
pop
daa
jle
add
not
mov
push
sbb
sbb
mov
mov
jnp
negb
stos
sbb
push
lods
sub
or
dec
and
mov
and
jne
mov
xchg
cmc
mov
and
iret
test
sbb
cmp
sti
cmp
jo
fsubrl
jp
mov
insb
loopne
sarl
jecxz
and
xchg
dec
fistps
xchg
ja
pop
xchg
mov
dec
lock
adc
push
orb
pxor
dec
xchg
and
add
mov
xor
inc
mov
and
mov
movsb
imul
lcall
dec
cmp
cmpsb
and
adc
loopne
dec
mov
cmpsb
add
adc
add
stc
shll
int3
insb
addl
dec
adc
in
insl
in
pop
cmc
cmp
push
sub
sbb
das
xorl
dec
sbbl
out
lea
bound
jmp
mov
cmp
inc
pop
fs
int3
xor
pop
jmp
pop
push
dec
in
testb
dec
dec
push
scas
subl
xlat
jbe
rcrl
pop
add
push
sahf
push
ss
es
addr16
imul
sbb
xlat
stos
xchg
xorb
cmpsb
cmp
jne
add
mov
dec
lret
shll
push
call
xchg
out
mov
and
arpl
push
inc
bnd
sub
sbb
loop
adc
inc
lret
cmp
fs
inc
jbe
or
mov
add
jb
and
imul
popf
adc
iret
fnsave
out
movsb
pusha
dec
jp
mov
les
ds
je
imul
movsb
hlt
adc
inc
or
or
sti
jl
jne
repz
test
repz
mov
or
sbb
popf
mov
stc
cmp
mov
test
or
jnp
das
in
mov
rorl
ss
xchg
mov
pop
stos
mov
notl
mov
sub
inc
pop
cmp
inc
jp
or
lock
pop
jb
ret
pushf
outsl
cwtl
cmc
arpl
bound
and
js
jle
ds
lret
int
lret
imul
sub
stos
and
jecxz
fnstsw
lahf
cltd
push
pop
xchg
lods
adc
inc
movsb
push
push
das
inc
std
jne
push
jmp
test
jbe
lret
and
movsl
pushf
loope
into
gs
mov
push
aad
xchg
mov
movsb
xchg
fmuls
cld
xchg
aam
stc
shlb
lcall
rorl
inc
push
fimuls
nop
xor
lods
push
or
pusha
or
cmp
jg
fcmovbe
rorb
or
addl
nop
pop
mov
in
mov
cli
push
stc
sbb
inc
arpl
pop
out
test
pop
mov
int3
or
rorl
data16
push
testb
mov
mov
lea
mov
pop
cs
push
push
dec
inc
repnz
fldenv
imul
sub
jl
ds
mov
xchg
jmp
pop
pop
mov
jle
mov
fdivrs
lret
cli
jae
cli
popa
and
iret
adc
jle
add
repz
fs
mulps
pop
imul
pop
push
push
inc
icebp
call
pop
fsub
mov
jle
cmpsl
sahf
notb
cwtl
repnz
push
fsubl
pop
mov
xchg
int
js
daa
xchg
int3
adc
mov
adc
mov
in
push
mov
xchg
insl
sub
xchg
xor
pop
and
mov
hlt
divl
aad
cltd
pop
iret
imul
mov
mov
xchg
in
cwtl
sbb
jb
popa
fs
mov
imul
lret
dec
inc
stos
xchg
add
popf
clc
icebp
mov
icebp
inc
test
push
shll
je
mov
jge
addb
jne
and
clc
cmpsl
pop
andb
mov
test
lahf
scas
repz
or
xchg
mov
add
mov
popf
sbb
adcb
int
test
and
add
fdivrs
test
cmpsb
mov
mov
adc
dec
fidivl
out
mov
push
popl
sub
inc
push
out
mov
lcall
mov
stos
mov
stc
or
inc
mov
leave
sbb
lea
bound
cmp
inc
movsb
rclb
aaa
sbb
add
xchg
inc
shr
sbb
push
xchg
mov
push
out
or
dec
push
pop
pop
mov
lea
adc
sub
mov
into
add
lock
or
mov
mov
inc
dec
jo
xchg
cld
mov
fsubp
pusha
jecxz
sub
data16
frstor
fs
gs
and
lods
shll
xor
cmp
jle
loope
gs
sbb
sub
int
jle
test
sub
es
cmp
jb
test
push
adc
outsb
hlt
mov
aaa
sub
aam
cwtl
rcl
fsubrs
mov
xchg
jnp
cltd
popf
lret
movsl
fcomps
pop
shl
dec
lret
loope
mov
lret
enter
scas
and
push
data16
cwtl
aaa
movsb
mov
mov
cmp
pop
add
les
hlt
sub
dec
push
xor
outsb
push
push
popf
dec
stos
repz
stos
fdivrs
lea
jecxz
test
sbb
call
sub
sbb
push
popa
add
xor
and
out
xchg
adc
je
imul
xor
dec
rcr
jnp
es
xor
mov
jnp
or
jecxz
and
jle
inc
push
fsubrs
cs
mov
xchg
lds
mov
xchg
pop
scas
mov
imul
imul
fmul
dec
in
push
decl
outsl
in
int
ljmp
cmp
fcmovb
in
and
jbe
add
sub
popf
mov
xchg
xchg
dec
pop
stos
out
lods
loop
jns
pop
sbb
xchg
cmp
gs
insl
xchg
xor
inc
imul
inc
popf
in
cltd
adc
out
and
in
loope
adc
inc
sub
aam
sbb
push
add
xor
and
ss
rol
mov
fidivrs
inc
icebp
enter
sti
imul
adc
icebp
xor
loope
xchg
and
pop
gs
jae
pop
leave
cmp
pop
stc
arpl
les
lea
fsubl
jle
outsl
lods
inc
aaa
inc
in
jnp
sti
rcr
insb
push
xor
and
scas
jg
fs
pop
inc
add
pop
cmpsb
icebp
or
addr16
push
adc
mov
leave
clc
int
cli
cmc
jecxz
push
gs
imulb
mov
push
mov
push
repnz
sub
and
xchg
das
mov
sbb
sub
aam
js
aas
jmp
inc
push
ja
bound
fdivr
pop
inc
pop
push
scas
call
stos
inc
mov
jle
scas
andl
cmp
mov
jne
push
outsb
je
pop
bound
pop
mov
dec
test
bound
mov
add
test
lret
divb
mov
rcrl
imul
push
sti
lcall
push
fbld
lods
or
aad
and
mov
jnp
sub
arpl
dec
in
fidivl
daa
sti
sbb
jmp
push
imul
and
je
stos
mov
out
fisubrl
dec
mov
sti
xor
cltd
outsl
push
ret
out
int
mov
popf
sbb
adc
mov
shll
mov
adc
rorb
mov
ret
clc
cmpsb
xor
sbb
pmaxsw
cld
out
pop
mov
in
imul
fsubs
jae
ja
je
xchg
xorb
insb
bnd
rolb
test
dec
xchg
fwait
dec
xlat
pop
fbstp
jo
incl
repnz
sub
iret
sahf
loope
or
mov
pop
xchg
adc
mov
in
rcl
xchg
jg
aaa
repnz
lcall
mov
out
mov
push
das
xor
mov
test
xor
daa
mov
dec
imulb
leave
mov
lods
jmp
sbb
and
cmp
sbb
orl
inc
repz
gs
rcrl
enter
aad
ds
mov
jle
pop
les
mov
mov
out
scas
ret
inc
aaa
add
test
fimuls
pop
test
sbb
movsl
cld
in
mov
xchg
cmp
in
movsb
or
mov
in
sbb
je
shlb
dec
mov
dec
xchg
sub
adc
push
dec
sub
frstor
cmpsl
xchg
mov
mov
insl
push
inc
adcb
sub
dec
and
fstpt
pusha
fstps
mov
outsb
push
add
outsb
push
repz
add
outsb
sbb
xor
lret
mov
ja
fucomi
ret
sub
arpl
sahf
sti
cmp
push
sub
jl
push
xchg
adc
into
mov
xchg
fwait
lods
mov
out
xchg
pop
jmp
cmp
imul
ret
mov
xor
or
sbb
daa
jnp
stos
cs
push
xchg
mov
jns
ljmp
or
add
xor
addr16
movl
cli
lock
sub
pop
frstor
pop
stos
jp
pusha
or
push
push
and
push
outsl
sbb
arpl
insb
cmpsb
lods
sbbb
in
adc
rcrl
xor
and
sbb
pop
stos
xor
lret
testb
mov
mov
inc
ljmp
sahf
mov
sub
movsb
xchg
sbb
cltd
xchg
sbb
mov
cmp
shll
lds
enter
ficompl
cwtl
mov
mov
mov
out
nop
int3
in
jno
push
cmpsl
cmp
xor
push
lea
bound
xor
icebp
ds
sbb
cmc
pop
xor
sbb
jb
xchg
sbb
cltd
bound
out
mov
and
cmp
push
jp
jmp
sahf
sbb
fyl2x
sahf
jge
mov
add
and
cmp
adc
inc
xchg
jl
xchg
inc
scas
adc
or
pushf
jg
jo
sbb
enter
adc
sbb
jo
xor
mov
stos
cmpsl
adc
jl
sbb
dec
or
xor
and
push
cwtl
lock
inc
xchg
sti
fbld
cld
je
into
imul
cmpb
lret
mov
or
imul
pop
xchg
push
aad
xor
mov
cld
adc
push
aas
pop
scas
repnz
xchg
popa
jle
negb
jmp
addr16
pop
add
mov
loope
subl
shrl
jg
aas
cmp
add
jge
add
divl
cld
mov
and
insl
mov
mov
nop
or
jb
insb
mov
stc
je
lock
shlb
pop
push
xor
push
pusha
popa
aaa
scas
ret
and
iret
pop
js
fildl
xlat
aad
inc
inc
fdivl
fisubrl
das
sub
les
mov
and
ret
test
test
inc
lahf
inc
jge
mov
orl
xchg
dec
add
test
sahf
cs
out
mov
adc
sub
inc
xchg
stos
adc
mov
cli
xchg
fcmovu
fisubrl
adc
into
or
mov
cmp
add
mov
test
xchg
ss
dec
cmp
cmp
xchg
iret
pop
popf
jo
mov
add
sub
ret
pop
push
jp
inc
les
imul
xor
pop
pop
fisttpll
adc
mov
movsl
inc
out
cltd
sub
test
ljmp
sbb
movsb
jl
push
mov
xor
insb
aad
repz
popf
push
add
inc
in
sbb
imul
xchg
adc
push
lods
out
mov
push
add
clc
addr16
dec
or
bound
rcrb
jnp
mov
xor
mov
mov
arpl
shr
cltd
adc
xchg
mov
rolb
mov
push
int3
cmpsl
fimull
cmp
test
adc
sub
mov
fidivrs
hlt
je
fwait
push
popf
arpl
shl
in
ja
push
mov
nop
fcmovb
mov
add
fnsave
xchg
je
adc
lods
sub
addr16
sbb
sbb
test
push
mov
xchg
push
push
adc
test
mov
fbld
test
and
cmpsl
dec
sub
cmpsb
sub
lahf
sbb
stos
xchg
fwait
dec
ja
add
fnstcw
lods
sbbl
in
shlb
shlb
jo
lret
mov
adc
stc
mov
icebp
rcrb
xlat
pop
es
testb
xor
rorl
test
imul
shl
fisttpll
jo
clc
pop
dec
sbb
mov
adc
cmpb
loopne
loopne
nop
ret
or
fcmovnb
fdivrl
icebp
sarb
sub
lret
pop
push
jmp
loope
iret
adc
add
xchg
stos
shrl
test
shlb
cltd
sub
cmc
dec
rcl
lret
icebp
add
mov
mov
add
rolb
addb
stos
fldt
js
movsb
pop
adc
mov
push
decb
push
clc
xchg
subb
mov
lds
cld
imul
leave
movsb
sarl
adc
test
push
push
loop
movsb
fists
inc
fcoms
stos
or
popf
pushl
cmp
push
clc
ret
xchg
ja
and
imul
push
mov
ficoms
xchg
int
xor
cmp
leave
jae
or
jno
fnsave
insb
dec
std
lds
lret
mov
ret
andl
push
cwtl
data16
xor
frstor
jnp
in
push
lahf
das
sub
cmpsb
pop
jl
movsl
push
into
lcall
scas
sbb
addr16
repnz
jnp
mov
popa
inc
inc
shrl
je
rclb
xor
sub
dec
mov
aam
in
or
jecxz
icebp
inc
pop
imul
ds
push
aas
or
jb
add
fwait
loope
pop
xor
jmp
out
nop
pop
inc
shr
xchg
pop
push
dec
adc
pushf
mov
cmpsb
call
or
jmp
mov
out
popa
jg
add
fisubrl
push
xor
out
jno
imul
mov
lds
fisttps
jl
mov
fdivl
pop
and
pop
stc
dec
or
test
or
mov
jg
dec
xchg
jecxz
dec
mov
rcl
push
push
arpl
gs
into
fnstcw
xchg
add
pop
popf
ficoms
pop
rcr
arpl
roll
stos
and
rcrb
hlt
shr
mov
aad
xchg
sahf
mov
out
sbb
mov
cs
orl
jp
mov
mov
adc
nop
dec
mov
inc
xchg
push
imul
stos
popl
sub
sub
push
or
adc
fldenv
loope
xor
in
mov
push
ror
xchg
mov
ret
sbb
push
push
mov
ficompl
lock
out
mov
rcl
fcomi
push
mov
jbe
xor
in
ss
pop
insb
fwait
int3
inc
mov
sar
xor
stc
mov
adc
xchg
je
into
sub
fistps
and
inc
mov
loop
fimull
cwtl
iret
pusha
scas
mov
lcall
push
lret
rolb
out
in
scas
cld
arpl
sbb
add
in
pop
es
scas
jns
sub
xor
and
pop
jmp
dec
push
jecxz
sub
pop
xchg
mov
mov
mov
inc
fdivrl
xor
je
loopne
dec
dec
jp
addl
push
sub
mov
pusha
leave
push
xchg
in
add
push
cltd
cmpsb
fwait
cmpsl
gs
xchg
add
jb
lds
inc
add
mov
inc
xchg
pop
icebp
xchg
in
inc
loop
push
ret
sub
filds
jge
push
sub
sub
lss
imul
lahf
pop
jp
sub
test
xor
cs
xchg
push
sub
daa
imul
xchg
outsl
add
pop
test
mov
stos
fstp
decb
mov
outsb
popa
mov
fcompl
popa
and
pusha
fidivl
in
mov
and
test
out
mov
out
in
lods
aam
jmp
pop
pop
sub
insl
adc
or
xchg
mov
lods
or
pop
fdiv
in
jp
mov
repnz
outsb
insl
jno
and
pop
add
test
mov
mov
pop
movsb
dec
mov
sbb
jg
fdivr
stos
inc
scas
repnz
popa
mov
push
in
pop
jbe
pop
xchg
xor
push
pusha
mov
sbb
jbe
push
pop
mov
push
call
sbb
call
dec
lods
add
sub
fsts
dec
popf
in
insb
mov
stos
cwtl
jns
cltd
push
cmp
jo
sub
enter
outsl
repz
test
pop
in
mov
and
push
mov
test
imul
and
jmp
das
out
aas
fidivs
sub
pushf
aad
hlt
cmp
sarb
mov
notl
sbb
dec
popa
mov
jecxz
in
xchg
in
jne
mov
xor
adc
cmp
or
pushf
xorb
lahf
in
cmp
xor
rorb
cltd
fs
ffreep
mov
imul
int3
loope
jnp
bts
mov
adc
movsl
ljmp
sub
pop
dec
fiadds
add
xor
xor
or
lahf
xchg
jne
call
or
sub
in
nop
mov
lahf
cmp
xor
dec
and
jg
add
jno
sbb
adc
cli
dec
outsl
sub
in
xchg
out
enter
push
xchg
shl
orb
fsubs
test
cmp
sbb
out
pushf
xor
pop
fldt
mov
inc
mov
gs
lock
cltd
fisubrs
lret
inc
push
sub
mov
lock
sub
adc
lcall
ret
int3
iret
cmc
push
push
pop
enter
adc
inc
orb
sarw
inc
inc
jecxz
sar
sbb
in
insb
dec
mov
cmpsb
cmp
dec
lea
or
mov
inc
dec
adc
movsb
inc
repz
sar
fistps
and
mull
fidivrs
xlat
out
mov
dec
inc
loopne
xchg
jle
or
mov
or
push
or
movsl
xchg
jle
test
out
push
jp
lret
cltd
pop
adc
mov
shlb
jb
icebp
imul
mov
add
inc
mov
sub
mov
js
adc
xor
add
incl
push
inc
sub
jnp
or
mov
pop
adc
int
sti
cmc
loope
dec
dec
and
jmp
cwtl
leave
push
push
loop
test
jo
dec
xor
lea
jae
xchg
std
pop
cli
dec
add
int3
sub
pop
inc
cmp
mov
ss
pop
rcrl
outsl
in
cld
adc
popa
std
std
add
jnp
cmp
daa
popf
mov
out
jmp
push
lods
in
insl
dec
or
neg
icebp
in
inc
add
loope
lods
out
jbe
fdivrl
or
inc
or
in
out
daa
cs
pop
or
pop
insb
aaa
xor
cmp
cli
js
repnz
inc
stos
xor
repz
xlat
out
shll
imull
movsb
cmpsb
ds
add
clc
pop
lret
dec
xchg
test
and
sbb
inc
mov
scas
aas
xor
aas
pop
xchg
xor
add
or
adc
add
test
pop
mov
dec
fisubrs
ss
xor
jno
ficomps
sub
cmp
sbb
cld
outsl
add
data16
push
jnp
inc
sbb
xchg
pusha
arpl
and
adc
dec
add
mov
out
stos
and
cmp
jns
add
enter
xchg
mov
mov
push
or
aaa
imul
mov
sbb
jno
fs
out
xchg
aam
fisttps
dec
jmp
xor
les
fisttpll
std
lea
sub
sbb
notl
icebp
or
sti
scas
pop
pop
and
scas
mov
add
mov
test
dec
loop
mov
mov
jo
fistps
mov
lods
xchg
cwtl
add
jg
stc
push
mov
int3
inc
or
loopne
dec
sbb
pop
inc
rclb
mulb
xor
pop
jge
mov
mov
ss
daa
in
rcrl
mov
sbb
mov
in
push
repnz
mov
scas
call
ja,pn
mov
lret
xchg
adc
xchg
jp
mov
in
ds
jmp
testl
jne
adc
gs
adc
clc
or
and
adc
xor
push
xchg
sbb
xor
insb
push
xor
and
dec
jb
mov
pop
mov
fstpt
xchg
mov
or
cmpsb
fisubs
push
ja
xor
mov
sbb
pop
adc
loope
push
push
ss
mov
mov
xchg
or
cmpsl
or
icebp
call
popa
mov
jnp
and
sub
jb
fucomp
iret
mov
idivl
pop
int3
cmp
dec
or
mov
push
hlt
roll
or
popa
lcall
orl
jbe
das
aas
scas
push
push
pop
loope
jge
repnz
pushf
into
loop
sbb
pop
xchg
mov
leave
add
xchg
cmp
push
aad
ret
nop
jg
sub
cwtl
mov
cs
adc
mov
repz
and
jo
addb
dec
mov
mov
and
jne
scas
sbb
insl
xchg
scas
dec
aam
mov
sbb
idiv
mov
sbb
push
mov
jae
push
shlb
je
xor
icebp
mov
imul
pop
enter
out
push
push
leave
fistl
jne
pmaxsw
xor
add
xor
cmpsl
xchg
ss
sbb
hlt
cwtl
hlt
std
test
jb
inc
mov
or
pop
xor
sub
jnp
jecxz
adc
subl
push
xor
sahf
push
dec
mov
dec
inc
scas
xchg
xchg
addr16
fmull
add
je
add
inc
scas
call
mov
scas
adc
pop
mov
mov
outsb
or
ja
in
mov
push
adc
and
in
pop
addr16
flds
ret
push
add
arpl
cmp
sahf
mov
jg
cld
push
dec
mov
stc
jbe
ss
ret
fsubl
pop
mov
inc
or
test
mov
negb
out
into
xchg
lock
or
jmp
sub
inc
ret
push
push
ja
sub
cmpsb
arpl
add
in
stos
call
xor
sbb
mov
push
xlat
in
adc
pop
movsb
and
jno
movsb
and
cs
push
push
dec
mov
push
mov
imul
ss
push
jle
or
mov
add
push
pushf
xchg
xor
test
and
std
in
push
fidivs
mov
clc
pop
mov
push
jmp
in
addr16
gs
jno
insl
daa
idivl
data16
adcb
xorb
inc
scas
or
xchg
sub
iret
xor
cmpb
xor
push
jmp
sahf
or
jmp
in
xchg
push
outsb
mov
push
mov
sarl
std
lods
sti
push
jg
das
inc
or
shl
dec
call
xor
xchg
movsb
fstpt
and
xchg
inc
enter
sar
adc
imul
and
sub
or
lret
pop
rclb
jo
repz
inc
and
push
pop
gs
dec
outsl
xchg
or
push
nop
and
popa
xor
mov
lahf
push
pop
cmp
xchg
cltd
sub
rol
aam
fiadds
adc
adc
mov
rorb
add
data16
add
dec
je
ljmp
adc
jmp
pop
xchg
xchg
scas
sti
pop
or
mov
ja
cmp
in
mov
jne
je
cmpb
std
cmpsb
pop
xchg
addr16
ss
aas
movsb
incb
in
sub
push
mov
sub
out
jge
sti
push
test
repz
or
xor
push
adc
bound
jp
pop
inc
aad
or
cmp
xchg
xor
mov
cmp
inc
xchg
sbb
and
fld
jecxz
adc
fcom
cli
mov
mov
mov
out
pop
outsl
push
or
push
into
scas
mov
mov
cwtl
andl
cmpsb
enter
or
pop
mov
es
push
and
enter
push
sahf
pop
sarl
call
pop
lods
pushf
mov
rclb
or
test
in
scas
inc
fdivl
pop
xchg
push
loopne
je
add
je
mov
lods
push
scas
add
fwait
push
pop
jae
mov
shl
mov
mull
or
imul
imul
push
popf
xor
repz
pop
add
pop
and
pop
leave
xchg
mov
mov
lret
mov
lret
xchg
out
xchg
lret
adc
add
cmpl
adc
dec
sub
pop
mov
insl
jmp
aas
aam
xchg
push
pushf
cltd
cwtl
daa
outsl
out
mov
mov
xchg
jnp
mov
rol
sbb
jnp
das
daa
pop
js
dec
sbbb
dec
fs
mov
xor
add
mov
jmp
add
sub
xchg
insb
cwtl
sar
add
shlb
xor
in
pop
jbe
pop
enter
orl
xchg
outsb
pop
adc
imul
jp
xlat
xchg
jno
jnp
cmpsl
stc
arpl
adc
or
push
adc
inc
ficompl
or
mov
mov
mov
jns
inc
rclb
sub
add
jecxz
mov
in
jne
or
add
stc
ret
sti
stc
ret
jge
adc
adc
lret
lds
add
mov
mov
dec
xor
mov
fldl
or
adc
shrb
sub
cmp
cmp
mov
ss
adc
sti
pop
je
fldcw
fiaddl
xchg
push
addl
mov
out
jae
add
pop
xchg
andl
insb
lds
es
sbb
push
sub
xchg
inc
jl
xor
mov
out
lock
cmp
int3
xchg
sbb
adc
aas
aaa
out
stc
aad
cmp
cltd
xchg
sbb
push
adc
fsts
rcll
and
cmpsl
iret
xchg
jo
insl
inc
inc
mov
push
mov
shlb
lock
vpsubsb
aad
rcll
aam
xchg
ret
mov
stos
hlt
movsl
sbb
loope
mov
dec
call
loopne
mov
xor
jo
jge
aaa
push
pop
pop
cmpsl
andb
aad
movsb
cmp
adc
inc
xchg
inc
fidivs
pop
repnz
mov
xchg
push
inc
adc
shr
sbb
mul
repnz
fs
dec
rolb
sub
rorl
xor
jbe
pusha
ficoml
add
jp
pop
hlt
aaa
imul
sub
sbb
movsl
adc
xor
inc
sub
fwait
push
popf
cltd
adc
ljmp
dec
sub
push
sbb
shll
add
scas
testl
leave
xor
xor
jl
mov
out
ljmp
lods
xchg
and
imul
adc
inc
jnp
push
andb
ljmp
je
push
pop
mov
mov
cmp
outsb
scas
loope
ret
dec
mov
cmpsl
aas
pop
stc
repnz
cmp
dec
mov
jbe
cmpsb
sbb
jp
test
pusha
and
lahf
call
mov
pop
sahf
add
inc
in
loopne
mov
fstpl
rcr
mov
xchg
aaa
jecxz
outsl
aas
jno
adc
inc
push
mov
mov
mov
mov
jle
cmpsl
push
hlt
pop
cmp
pop
push
or
pop
jae
fcomps
gs
sub
add
xchg
and
jmp
xchg
stos
sbb
inc
hlt
lcall
loopne
shl
orb
jge
aam
push
adc
aad
pop
rcr
pop
aaa
xchg
xchg
jne
sbb
push
ror
adc
sbb
sar
fwait
push
push
mov
ret
pop
cmp
mov
fbld
mov
pop
popf
sti
leave
cltd
call
in
cmp
test
ljmp
rcrb
fimuls
lea
pop
mov
mov
js
and
fdivrl
clc
mov
hlt
repnz
iret
mov
movsb
jge
lock
mulb
sub
xchg
in
xor
xchg
pop
jno
inc
into
loope
stos
in
movsb
add
addr16
pop
push
cli
out
fldt
shrl
cmp
push
inc
and
cld
or
ds
cmp
enter
jp
pop
mov
loope
xor
filds
in
mov
jecxz
sbb
mov
fstps
in
out
fstps
mov
inc
and
int
mov
push
sub
ret
popa
jg
pop
mov
or
mov
ss
mov
mov
dec
dec
test
js
movb
mov
int3
cld
clc
and
lock
push
data16
push
in
pop
push
pop
pushf
pop
lods
xor
orl
pop
cli
jmp
fisubrl
mov
cli
movb
cld
out
xchg
add
mov
cli
pop
pop
les
mov
inc
cmp
call
push
lea
in
fwait
mov
lret
cmp
je
mov
jne
outsb
adc
leave
mov
mov
and
push
aas
cmp
nop
ljmp
push
scas
repz
mov
jb
push
lahf
rclb
dec
and
ds
bound
iret
push
push
pop
pop
jno
ss
inc
adc
outsl
mov
das
xor
jmp
clc
jno
into
dec
sub
test
rorb
pop
shl
fs
add
add
pop
adc
xor
mov
jp
dec
dec
jmp
cmpsb
icebp
cmp
jns
daa
repz
lds
aaa
and
fisttpll
dec
jmp
fwait
repnz
jnp
aam
dec
pusha
sub
dec
outsb
dec
lods
mov
mov
jnp
and
out
lods
or
xor
pop
or
loop
cmp
xchg
sub
or
sub
imul
cs
fldt
in
flds
pop
dec
ds
hlt
cs
stos
sbb
pop
lret
mov
xor
sub
cld
pop
mov
call
nop
lahf
inc
xor
repnz
arpl
test
stos
and
add
cmp
mov
jp
mov
mov
orl
fwait
xchg
jbe
or
subl
shll
aam
lods
cli
fisttpll
cmp
lea
in
test
cltd
inc
popf
rorb
pop
or
gs
adcl
fs
mov
jp
aad
push
push
aam
lret
vpunpckhwd
loope
cmpsb
iret
fwait
jmp
pop
popf
js
adcb
punpckhwd
cmp
into
addb
push
sbb
or
cwtl
cmpb
jecxz
sbb
inc
imul
sahf
fwait
inc
jecxz
add
cmp
or
jmp
ss
mov
jno
lcall
cwtl
mov
and
push
dec
and
aaa
mov
stc
pop
dec
jecxz
jle
mov
mov
adc
pop
mov
mov
adc
or
sti
sub
lods
cmpb
dec
add
sahf
into
nop
or
xor
sti
pushl
lock
mov
gs
xlat
adc
and
jmp
mov
jecxz
lods
hlt
sbb
sahf
data16
in
out
inc
inc
dec
insl
repz
push
cli
lahf
rcl
ja
les
pop
mov
insl
or
push
mov
mov
mov
mov
lret
fcmovnbe
and
sbb
sbb
int3
dec
sbb
push
cwtl
cmpl
shll
xorl
push
xor
adc
jge
les
pop
out
lret
les
cli
aas
mov
outsb
and
adc
pop
sub
push
dec
sub
test
lcall
scas
insb
add
aad
add
mov
lret
repnz
mov
fs
pop
or
aaa
push
jbe
pop
fsubl
hlt
popf
push
jg
in
or
cmp
pop
cmp
test
sub
mov
or
test
inc
mov
les
push
dec
pop
push
popf
add
pushf
jbe
rol
sbb
lcall
xor
pop
mov
cmova
imul
lock
add
dec
jns
sti
aas
mov
xchg
jecxz
mov
mov
jb
std
cli
icebp
ret
xchg
out
and
loopne
xchg
mov
daa
mov
or
inc
mov
clc
dec
add
mov
xchg
in
clc
pop
icebp
xchg
sbb
and
fnstsw
xlat
pop
xchg
insl
sbb
sarb
pop
inc
cli
jl
in
add
test
push
daa
lahf
movsb
inc
jno
and
add
mov
mov
cli
out
push
fmulp
fwait
cmp
mov
dec
push
hlt
fwait
pop
sbb
push
fistpll
pop
ds
lret
lret
mov
xchg
pop
cwtl
mov
enter
dec
movsl
pushf
lods
frstor
mov
orl
xchg
mov
fnsave
mov
xchg
loop
xor
movsl
pop
mov
cwtl
push
pop
test
xchg
fistps
lret
ljmp
sbb
mov
mov
add
sti
dec
xor
sbb
dec
arpl
in
mov
gs
test
mov
movsl
fdiv
jp
and
inc
lea
sbb
orb
in
adc
jl
add
mov
es
subb
or
xchg
fmul
punpckldq
mov
push
mov
sti
div
insl
mov
loopne
fstps
cmp
popa
outsl
pop
iret
mov
add
adc
out
xor
arpl
add
imull
lret
xchg
stc
jle
push
jo
sbb
sbb
mov
divb
jae
pusha
out
sub
cmp
push
imul
mov
xchg
or
xor
stc
rol
mov
mov
mov
fstps
mov
scas
movsl
inc
lods
lcall
movsl
add
cmp
test
push
mov
pop
cmpsl
fwait
je
push
push
mov
mov
pop
ficomps
push
outsb
xor
fs
insl
xchg
popf
fwait
insl
mov
inc
and
insl
repz
outsl
mov
and
in
push
mov
test
or
sub
test
insb
test
mov
ljmp
xchg
mov
cmp
andb
push
cmp
jb
lds
xor
movsb
fisubrl
sbb
loope,pn
xchg
rcrl
nop
jne
xor
mov
bound
repz
icebp
sub
push
mov
ljmp
jbe
idivb
or
repnz
pop
adc
lock
movsl
sti
sub
cmpsl
imul
movsb
roll
jl
ds
sub
push
pop
or
insb
dec
stos
shl
addl
iret
rcll
jne
mov
rcrb
mov
push
es
jae
cmpsb
pop
xchg
push
mov
xchg
mov
sbb
enter
xor
add
mov
lret
jb
cmp
cmpsb
shll
sbb
cmpb
cmpsl
mov
dec
insb
sbb
xchg
mov
dec
fiaddl
jbe
and
mov
adc
xchg
mov
scas
aas
mov
or
fiaddl
clc
adc
cld
dec
mov
repz
movl
inc
popa
add
bound
bound
mov
xchg
xchg
fwait
movsb
popa
add
pop
pop
jne
cmc
inc
ds
pushf
push
jmp
out
xor
test
lods
add
sub
adc
adc
cmp
inc
inc
add
jae
jne
in
scas
mov
out
xor
and
inc
out
repnz
fs
fsubrl
loope
mov
inc
mov
movsb
sbb
imul
in
fwait
mov
les
mov
out
xchg
or
dec
fnstsw
fmulp
sub
loopne
mov
sbb
inc
pop
subl
aam
outsb
iretw
jno
dec
xorb
xchg
adc
pop
mov
xchg
inc
and
cmp
dec
jle
in
shlb
cmc
jnp
test
in
insb
mov
test
test
sub
pop
sub
stc
push
and
mov
adc
sub
sarb
clc
das
inc
cmp
ret
test
cmpsl
mov
adcb
mov
and
test
aad
xchg
in
out
ret
outsb
sbb
push
push
in
cli
adc
push
movsl
pop
and
les
stos
mov
xchg
insl
xchg
xlat
fcomip
adc
int
mov
dec
jle
scas
test
test
sbb
aas
popa
shrl
cmp
xor
pop
or
xor
mov
or
xor
filds
insb
inc
aad
push
mov
int
pushf
in
insl
xchg
push
je
pmaxub
outsb
adc
mov
jne
out
push
ret
lock
leave
adcb
xchg
or
das
gs
shl
cmp
mov
dec
out
xchg
inc
shrb
insb
inc
cmp
adcb
inc
mov
les
mov
jnp
push
cld
add
cmpsl
insl
pop
jne
fs
popf
testl
mov
ljmp
add
icebp
jmp
jnp
in
insl
stc
mov
in
fwait
out
push
dec
sub
int3
add
fisubrl
mov
and
cwtl
out
fidivl
xor
cmp
clc
dec
aas
ret
cmpsb
out
imul
loop
pop
ret
icebp
inc
mov
mov
xchg
lahf
stos
inc
mov
push
push
addr16
or
ss
mov
ror
fnsave
movsl
aam
sub
pop
lret
push
push
mov
ds
or
sbb
push
mov
add
lahf
imul
ss
pop
int
lret
bound
in
lea
sbb
and
mov
popa
inc
imulb
jl
xchg
jb
pop
fwait
inc
or
xor
aad
pop
xor
and
loopne
or
cmp
cmp
adc
imul
pop
jp
hlt
popa
mov
mov
add
cmpsb
jge
mov
lcall
test
sub
xlat
daa
jle
cmp
cmpsl
imul
jne
cmp
and
insb
scas
mov
out
sbb
inc
mov
movsl
rorl
inc
cs
in
iret
movsb
into
pop
std
push
ljmp
dec
je
scas
xchg
int
out
cmpsb
imul
in
das
sahf
int
or
xor
xchg
push
ror
mov
sbb
movsb
push
cmp
or
pop
clc
pushf
sub
outsb
lret
shlb
popf
jne
adc
xchg
sbbl
dec
sub
pop
or
dec
xchg
inc
or
jmp
test
test
ds
and
or
inc
es
adc
jle
sub
int
out
imul
and
pop
into
sti
lods
aaa
push
pushf
adc
adc
sahf
mov
inc
xchg
shll
mov
xchg
mov
and
push
fbstp
rcrb
iret
xor
clc
out
or
mov
adc
jb
inc
test
mov
clc
insl
mov
or
sub
mov
test
or
insb
dec
aad
in
stc
mov
jg
sub
jl
mov
jmp
pop
bound
int
ja
mov
push
mov
adc
fldcw
adc
pop
dec
loopne
xor
out
jo
popa
div
mov
pop
fiaddl
ror
mov
mov
mov
push
mov
mov
and
jne
movsl
dec
push
push
mov
lock
or
mov
js
addr16
push
sarb
ja
xor
mov
rcrb
adc
and
bound
jae
sub
mov
mov
jae
and
lahf
lods
dec
mov
or
aas
fs
sti
mov
xchg
frstor
or
hlt
cli
sbb
mov
xchg
mov
outsl
hlt
xchg
and
cltd
or
repz
out
mov
jns
xchg
mov
out
scas
sub
adc
ja
leave
scas
adc
sbb
fwait
sbb
sub
call
mov
jae
jle
subb
pop
imul
sahf
mov
subb
sub
mov
dec
sub
add
iret
cltd
xchg
sti
mov
xorl
sub
mov
rorl
test
push
and
push
dec
scas
lods
pop
outsl
jno
enter
mov
mov
stos
test
mov
mov
clc
insb
jmp
inc
or
outsb
ret
and
loope
cmpsl
jl
fldenv
xchg
bound
les
xchg
and
cltd
or
mov
jae
mov
jb
jno
push
sbb
shll
jnp
lods
aas
ret
mov
lea
addr16
mov
mov
outsl
loop
in
test
sub
orl
pushf
pushf
sbb
xchg
jo
cli
ret
sub
gs
dec
shrb
arpl
repnz
int
scas
lods
in
xchg
pop
xor
filds
nop
xchg
shl
sub
loop
or
ficoml
mov
xchg
and
outsl
sub
push
popa
push
xor
mov
les
movsb
xchg
jno
pop
orb
cli
xchg
and
loopne
cwtl
dec
add
cltd
mov
mov
inc
ds
xor
inc
add
lcall
sbb
cmp
add
cs
push
jnp
scas
mov
inc
sub
add
add
push
xor
inc
sbb
mov
dec
adc
mov
push
pop
mov
or
in
test
and
mov
je
jae
aam
out
ret
mov
out
xchg
mov
popa
cmp
mov
ret
lcall
push
jbe
cmp
pop
jg
divb
xorl
js
sahf
add
rolb
and
sbb
ficompl
inc
sbb
nop
or
sbb
gs
mov
push
in
sub
cmc
dec
push
fldl
mov
jnp
cmp
paddsb
mov
jne
cmpsb
lods
clc
iret
or
mov
lods
push
ja
jg
jno
mov
jns
push
loop
xchg
jp
xchg
mov
jmp
jbe
dec
xorl
repnz
ret
sbb
outsb
cmpsb
ret
call
clc
lahf
call
scas
lods
and
out
pop
movsl
inc
jge
sbb
mov
dec
jp
cltd
pmullw
adc
mov
mov
pop
hlt
pop
mov
scas
insb
in
xchg
es
inc
mov
movsl
daa
aad
xorb
add
mov
fcompl
xchg
cltd
xchg
and
fs
pop
dec
testl
std
push
mov
js
inc
mov
fcomps
add
sbb
lret
lahf
loope
mov
sbb
adc
xor
sbb
shrl
add
int
fildl
jns
pushl
lock
mov
jmp
or
xor
in
mov
pop
push
dec
jp
push
bound
movsb
mov
lahf
cmpsb
mov
sub
mov
mov
mov
push
into
out
insl
inc
enter
mov
mov
dec
and
fistl
cmp
popa
mov
fs
lcall
arpl
xchg
mov
push
add
arpl
cltd
mov
adc
test
daa
xchg
xchg
jae
push
and
push
imul
xor
fisttps
and
mov
inc
fisttpll
pop
push
lahf
adc
and
cwtl
sub
mov
rorl
inc
daa
jbe
fwait
mov
xor
inc
mov
scas
test
mov
lret
fwait
out
inc
push
fs
xchg
in
sub
xchg
xchg
ds
sub
mov
add
jecxz
out
pop
xlat
loope
lea
aaa
xchg
cld
jp
loopne
and
stc
sub
dec
pushl
stos
or
mov
xchg
mov
popa
cmp
iret
loop,pn
int3
das
mov
cli
in
stos
mov
pop
repz
adc
sbb
cltd
fwait
int3
cmp
fs
xchg
js
iret
rolb
arpl
add
jg
push
pop
xor
mov
mov
jbe
cmp
adc
mov
gs
lds
hlt
xor
push
xchg
or
xchg
inc
mov
sbb
aas
mov
call
mov
dec
jecxz
mov
fidivs
xchg
push
in
inc
xchg
leave
mov
add
addr16
sti
pop
mov
into
inc
jmp
jb
insb
mov
push
cmp
movsb
pop
fdivrl
lea
xor
stc
pop
mov
inc
int3
scas
sbb
mov
call
xchg
hlt
add
jo
mov
stos
jg
aas
mov
lret
dec
mov
fwait
dec
into
pop
scas
ja
mov
adc
inc
int
inc
fsqrt
in
xchg
dec
pop
call
rcr
subl
hlt
std
lret
inc
and
jge
sahf
clc
rorl
or
mov
pop
add
lea
pop
outsb
inc
add
mov
cmp
outsb
inc
push
mov
lret
into
andb
add
or
fcompp
sub
dec
scas
xor
push
test
or
arpl
daa
call
fs
cwtl
lcall
jmp
ja
mov
mov
cmp
addr16
xchg
dec
mov
pop
in
xor
adc
stos
pop
add
insb
xor
cmp
shlb
sbb
dec
test
movsb
rcrb
or
cmp
cmpsb
fcoms
shrb
mov
or
mov
jg
inc
dec
sbb
sub
les
jnp
add
shl
iret
popf
gs
mov
jle
lcall
cltd
inc
sub
es
xchg
xlat
out
or
sbb
sbb
mov
jmp
push
fwait
bsf
sub
add
dec
idiv
out
cmpsl
je
addr16
fists
sbb
push
shll
or
lret
addr16
fldcw
mov
xchg
jne
mov
push
add
sbb
jae
mov
push
out
push
ljmp
inc
mov
dec
dec
icebp
lods
loope
cmp
mov
cmp
adc
stos
scas
fisttps
adc
lods
inc
sub
dec
mov
js
push
fdivrs
roll
bound
xor
push
xchg
xchg
xlat
jp
jns
cmp
cmp
shlb
out
leave
cmpsl
arpl
dec
insb
ss
jb
push
or
bound
mov
push
and
cmp
imul
and
lds
xchg
mov
pop
jle
add
or
mov
cmc
pop
test
push
mov
adc
xchg
dec
push
and
call
xchg
repz
xchg
jle
pop
lret
adc
mov
andb
or
das
scas
dec
jnp
jmp
test
fs
scas
pop
xchg
insb
shlb
xchg
in
fwait
ror
mov
jne
adc
sub
pop
out
out
xchg
sahf
andb
push
jb
aad
sub
xorl
dec
ss
sub
mov
mov
dec
test
stos
bnd
sub
loope
sti
shr
inc
sbb
inc
aam
addr16
jne
lods
jae
and
push
pop
or
filds
je
fwait
pop
push
mov
pop
pop
xchg
loopne
xchg
es
mov
dec
jb
mov
aam
or
xchg
mov
int3
inc
mov
les
adc
aaa
cltd
or
sub
or
movsb
mov
outsl
test
std
xchg
or
test
sub
pop
inc
push
add
scas
arpl
cmc
xchg
xchg
add
scas
sbb
sbb
shll
data16
inc
movsbl
mov
jnp
pop
xlat
mov
xor
gs
and
add
mov
leave
inc
or
out
movsb
mov
cmp
push
into
xlat
or
in
inc
xorl
xor
pusha
inc
mov
nop
movsb
cmp
push
pushf
mov
mov
addr16
push
sub
cld
add
push
pop
aas
push
cmpsb
enter
mov
aad
clc
fwait
sub
cmp
iret
xorb
mov
out
mov
lods
hlt
push
fisubrl
sbb
out
xchg
sbb
mov
lods
lods
mov
inc
adc
sbb
sub
pusha
inc
aad
xor
pop
mov
push
outsl
mov
pushf
pop
add
loop
xchg
xor
xlat
add
mov
imul
mov
icebp
jne
shlb
ficomps
xlat
jns
shrb
pop
sbb
andl
adc
fs
dec
mov
scas
cmp
or
jmp
dec
cmc
cld
icebp
push
lds
and
mov
cmpsl
sti
cld
add
fisubl
adc
adc
sbb
dec
jle
jbe
in
push
lahf
adc
fs
call
mov
lock
enter
aad
hlt
mov
stos
insl
sbb
aas
dec
iret
add
xchg
sub
out
inc
hlt
jmp
adc
mov
pop
sub
and
xchg
push
stos
dec
shlb
xchg
mov
rol
data16
mov
test
xchg
aas
sbb
pop
stos
in
insl
adc
imul
mov
sbb
push
mov
fistps
rolb
in
sub
fistps
bound
or
jo
in
call
dec
push
mov
lcall
kmovw
lock
mov
push
movb
outsb
test
add
adc
das
sar
jno
sbb
lea
cmovb
fwait
mov
adc
pop
addr16
adc
jbe
leave
sub
loopne
add
and
int3
sbbb
lcall
pop
imul
nop
cmpsb
gs
loope
add
inc
fmul
push
mov
jae
inc
fs
sbb
movsl
xchg
cltd
iret
test
cmp
gs
push
and
imul
jno
add
xor
mov
inc
cmp
cli
jmp
lcall
shll
jae
pop
and
lahf
mov
idivl
inc
xor
sbb
shlb
or
aaa
add
aas
pop
push
pop
iret
iret
fsts
dec
imul
mov
imul
fs
mull
js
inc
push
xchg
bndldx
sbb
popf
shll
test
cmp
call
add
pop
fwait
mov
jnp
fs
jl
fidivs
aam
xor
jp
mov
inc
sbb
and
in
push
dec
mov
xlat
nop
imul
shlb
fldenv
fbstp
rorl
icebp
lods
adc
mov
sbb
mov
dec
adc
mov
rcrl
cmp
mov
lock
adc
in
jne
xchg
pop
decl
mov
enter
sbb
hlt
sbb
mov
push
iret
shl
movsl
std
dec
sub
pusha
jl
arpl
pop
test
cmpsl
pushw
lock
add
xlat
mov
push
stos
and
inc
cmp
rclb
rclb
das
and
jmp
push
xchg
mov
cmp
push
aam
loop,pt
push
dec
xchg
mov
es
adc
das
out
test
mov
cmc
lcall
inc
ret
inc
add
fisttpl
add
jle
sbb
insl
mov
sbb
mov
and
mov
aad
push
enter
push
and
adc
cmpsb
and
sub
std
cltd
popa
movzwl
sarb
cmc
mov
je
ja,pt
push
aaa
jmp
mov
out
and
push
and
sahf
dec
push
push
ja
push
fmuls
and
mov
arpl
lcall
icebp
or
lock
dec
ret
push
ja
pop
jg
jge
and
cltd
inc
inc
flds
xor
cmp
outsb
sub
sub
call
mov
and
mov
push
aad
xorl
lea
hlt
jge
bound
icebp
push
xor
sahf
movsb
fisttps
test
stos
mov
clc
test
stos
xor
xor
inc
jne
add
ja
push
mov
mov
inc
dec
inc
or
mov
rolb
push
je
xorl
or
mov
inc
cmp
inc
cmp
ficompl
or
imul
scas
mov
cmp
add
adc
ljmp
sbb
pop
out
das
inc
leave
lret
js
int3
xor
and
repz
iret
faddl
cmp
adc
cmp
mov
das
cltd
jge
sub
and
add
adc
mov
test
mov
xchg
push
mov
jle
dec
xlat
xor
int
add
lds
mov
out
rcl
mov
js
sahf
sub
lods
dec
pop
adc
add
mov
lret
push
ret
in
enter
arpl
cmpl
push
inc
inc
nop
mov
sar
imul
ja
inc
test
ss
hlt
fcomps
movsb
stos
mov
lcall
sub
test
stos
or
lret
pushf
clc
movsl
leave
adc
xor
inc
jb
inc
pop
sbb
jb
ljmp
or
ds
mov
cmpb
idivl
pop
cli
loopne
lahf
cmp
or
push
fucomi
jp
mov
movsl
lods
scas
mov
push
es
push
call
cmp
les
outsl
mov
xorb
ret
outsb
pandn
add
jb
pop
jmp
icebp
nop
push
pop
xchg
add
sti
or
out
xchg
xchg
mov
lods
movsb
into
lods
and
mov
or
or
mov
rclb
mov
mov
mov
inc
inc
subl
or
hlt
or
add
xchg
int
mov
aaa
jo
ja
jg
jb
xor
sahf
and
inc
shll
sbb
dec
pop
test
cltd
ss
cld
xchg
repz
xchg
xchg
xchg
pop
in
add
out
imul
cmpsb
lret
iret
push
sub
jmp
ret
pushf
add
inc
sbb
xor
add
mov
or
adc
aaa
js
sub
jle
mov
push
out
jl
dec
push
cmpsl
push
ret
ljmp
sub
clc
outsl
push
es
dec
mov
rorl
cs
pop
ret
sbb
insb
orl
mov
dec
and
add
fimull
jns
jge
xor
fldcw
mov
mov
insb
add
jns
int
das
push
dec
cmpsb
mov
and
mov
movsl
aaa
sub
mov
movsl
xchg
int3
xchg
mov
xchg
in
pop
pop
sbb
ljmp
pop
jb
dec
test
mulb
mov
loope
dec
mov
inc
addb
sahf
pop
jg
adc
ss
iret
mov
adc
cli
in
jge
dec
cmp
loop
push
pop
mov
mov
mov
lret
test
xor
mov
gs
addl
cld
mov
rorb
stc
imul
outsb
int3
sub
ljmp
adc
fs
test
inc
sub
mov
mov
loop
mov
hlt
mov
mov
push
into
xchg
push
sub
scas
out
dec
xchg
mov
dec
rcll
xor
jb
push
iret
shll
lret
sub
adc
cs
popa
sti
aas
lock
push
std
aas
cmp
add
aaa
test
es
mov
cmpb
loop
call
sub
stos
gs
adcl
dec
push
and
xor
inc
mov
adc
pop
ja
stos
add
jbe
push
nop
scas
push
pop
fsts
dec
mov
push
mov
xor
int3
les
lock
pop
or
pop
sbbb
dec
mov
push
xor
daa
into
int
es
dec
mov
ja
and
xor
repz
int3
pop
mov
or
add
fistpll
insb
dec
icebp
cmpb
adc
pop
mov
sbb
pusha
ljmp
lahf
fldenv
jmp
lods
sbbb
imul
sti
movsl
fadd
leave
aas
lret
lock
cmp
cli
shrb
push
xor
ret
adc
dec
mov
jns
jle
mov
pop
xor
adc
ja
cmpsb
lock
in
adc
scas
and
sbb
mov
mov
subl
std
xor
js
out
mov
lock
clc
xor
cmp
jg
sub
lcall
xchg
adc
icebp
sbb
aam
gs
arpl
cmp
mov
lcall
iret
add
mov
stos
inc
aas
xor
cld
push
adc
dec
fneni(8087
aas
inc
jmp
and
dec
movsl
popa
sbb
mov
outsl
jg
repnz
ss
push
out
movsl
cli
test
inc
and
push
jne
cmp
setno
cmp
xor
sbb
xor
mov
sbb
jo
push
sbb
sub
push
fwait
inc
je
mov
xchg
popa
and
push
jno
testl
in
enter
iret
mov
stc
mov
mov
enter
rcrl
xor
xchg
push
jge
out
xor
sub
cwtl
aas
iret
or
cmpl
stos
mov
aas
test
jle
clc
fadds
sub
adc
cmp
push
imulb
push
cmp
ja
out
push
mov
xchg
jo
or
dec
jge
push
mov
jae
mov
or
mov
rorb
mov
mov
aam
inc
enter
xorl
outsb
fsts
outsb
je
aaa
mov
rcrb
jecxz
imul
shl
sub
inc
mulb
ficoms
add
popa
out
push
mov
dec
pushf
dec
jmp
pop
aas
xor
daa
jae
fldt
gs
fistps
shl
jge
outsb
adc
lcall
or
xlat
hlt
mov
adc
pop
cmp
jl
test
mov
fwait
jns
lcall
out
popa
mov
lock
jl
inc
rcrl
insb
gs
in
mov
enter
pop
add
jmp
inc
movl
adc
mov
pop
or
mov
into
and
lcall
mov
out
mov
adc
jno
cltd
jbe
mov
das
lret
loop
ja
cs
jle
sbb
js
and
imul
cmpsb
in
sbb
push
mov
mov
fwait
dec
pop
pop
jle
out
aaa
and
dec
xorb
dec
push
or
mov
in
imul
mov
jmp
mov
xchg
icebp
mov
cmp
repz
pop
out
pusha
lods
in
ss
call
push
addl
movsb
js
in
aas
add
jae
mov
andl
cs
in
dec
imul
in
add
push
andl
fdivrl
mov
cwtl
test
sub
hlt
mov
inc
mov
lods
add
mov
sbb
insl
inc
int
or
imul
inc
ja
mov
jmp
xchg
or
sub
sbb
loope
push
fwait
jg
call
inc
shlb
or
aam
mov
jae
orl
add
mov
repz
cmp
push
inc
sub
xor
jle
pop
xor
dec
int
lock
stc
jo
test
sbb
mov
pop
repz
in
or
into
addb
mov
or
jne
sub
jle
fstps
pop
fpatan
lea
cmpsl
jne
xchg
aas
daa
sbb
cmpsb
sub
nop
jb
sbb
jnp
sbb
insb
sbb
and
xchg
in
pop
mov
jg
jnp
mov
sub
les
mov
cmp
ljmp
add
adc
push
jnp
mov
jmp
jb
jle
add
inc
push
add
add
xchg
or
mov
mov
mov
mov
scas
add
mov
jno
jmp
stc
cmp
sub
cmp
dec
adc
pusha
loope
mov
jg
pusha
jl
push
mov
mov
aaa
inc
mov
fmuls
ljmp
jecxz
loop
rclb
pop
sub
loop
fisttps
insl
mov
call
adc
sub
push
sar
out
mov
jl
test
clc
ds
cmp
jb
mov
loope
scas
xlat
mov
fs
add
subb
into
mov
in
xchg
pop
aaa
push
int
cmp
in
leave
iret
mov
shlb
mov
adc
mov
icebp
pop
es
je
mov
xchg
push
scas
test
ret
add
xchg
xor
sti
and
addb
sbb
sbb
outsb
jo
cltd
jo
jp
jns
ja
ret
ja
xor
or
add
mov
mov
lcall
mov
dec
mov
jmp
out
outsl
aas
push
incl
clc
mov
dec
addb
call
xor
int
jo
mov
ficoml
ret
repnz
xor
clc
shll
into
jne
and
lea
inc
ret
push
lret
lea
cmc
int
dec
pushf
in
leave
sbb
lods
sbb
push
xor
or
jo
stos
std
sahf
jae
or
adc
rolb
das
repz
xchg
cltd
pop
inc
fsub
sahf
sub
mov
sub
adc
inc
daa
imulb
loope
xor
pop
out
in
mov
faddl
loope
fdivs
loope
jnp
xor
add
sbbl
push
stos
xsaveopt
mov
push
or
fs
dec
push
bound
roll
cli
and
and
testl
inc
mov
xor
scas
sar
insb
dec
jg
mov
and
jb
mov
push
sbb
xorb
inc
jle
test
jo
pop
lcall
pop
jmp
clc
push
sbb
sub
mov
pop
push
and
iret
stc
lea
jno
insl
into
aaa
dec
or
repz
mov
jecxz
clc
out
mov
inc
pop
push
cmc
loop
cmp
xchg
mov
push
shll
sbb
dec
divl
cli
lret
mov
scas
or
xor
sub
stos
mov
aad
xchg
pop
addl
inc
pop
lock
pop
add
sub
insl
push
sbb
mov
enter
sahf
xor
jp
ficoms
pop
ret
cmp
pusha
insb
fwait
das
add
scas
mov
and
pop
sub
ret
mov
divl
jbe
shrb
adc
push
or
push
mov
xchg
enter
movsl
sub
pop
jle
cmp
xlat
popf
cmp
cs
and
ja
and
ret
xor
repnz
scas
sub
lods
clc
dec
aam
outsl
lahf
aam
xor
xor
sub
movsl
or
lret
sbb
nop
jae
dec
int3
test
out
ja
mov
xor
inc
pop
mov
out
loop
mov
xchg
jg
and
mov
jne
push
jns
xor
stc
repnz
jne
inc
daa
ficoml
clc
adc
xlat
aam
movsb
xchg
dec
pushf
icebp
inc
les
repnz
lcall
sub
pop
out
std
add
cltd
push
fsubr
loop
out
aaa
cmpb
outsb
mov
cmp
push
inc
bound
or
add
jecxz
add
add
push
or
adc
enter
or
push
jge
sahf
fcoml
lods
cltd
pop
es
mov
mov
xchg
out
ljmp
aam
or
mov
decl
frstor
test
jg
push
sbb
lahf
stos
jmp
pop
jne
sbb
in
aam
hlt
pop
std
je
xchg
iret
aas
xor
mov
int3
jbe
imul
test
in
cmpsb
imul
and
mov
pop
mov
lea
lods
inc
jecxz
popf
out
pop
repz
ljmp
sbb
hlt
fcoms
cmp
lahf
fsubl
std
fcmovnb
mov
jmp
xchg
out
cmp
jmp
dec
mov
jge
test
xchg
sbb
cmpb
cmp
cltd
pop
addr16
pop
bound
mov
in
push
sbb
push
int
mov
mov
push
in
aaa
or
movsl
pop
xor
fs
jge
js
das
jle,pn
addr16
pop
mov
jne
nop
js
inc
inc
jp
sub
mov
iret
imul
sbb
push
shll
ljmp
push
mov
les
xorl
jp
cmp
pslld
cmp
clc
add
sbb
stos
xchg
push
idivb
sub
loop
sub
in
dec
mov
dec
xchg
mov
pop
mov
or
inc
cmp
mov
in
dec
stos
fimuls
xchg
inc
add
aad
orb
or
mov
rcrb
push
ss
fadd
in
jl
cltd
cmp
pop
sbb
mov
sbb
add
jo
cmp
add
shrl
sbb
nop
mov
ret
scas
or
add
dec
js
cmp
push
adc
or
imull
jg
mov
sarb
rorl
add
mov
inc
stc
arpl
aam
loopne
push
pop
lea
jle
gs
push
mov
in
jmp
inc
push
add
aas
adc
dec
scas
push
mov
xchg
mov
sub
cmc
daa
adc
stos
bound
add
adc
jae
jmp
pop
and
fisttps
jns
fdivrs
jb
or
mov
out
popa
cwtl
aas
mov
add
mov
in
or
incb
mov
pop
scas
dec
pusha
hlt
xchg
cmp
in
sti
pop
pop
mov
fadds
mov
xor
cmp
add
xchg
out
push
js
mov
mov
js
xchg
scas
xor
mov
push
and
into
rorb
sahf
int
lods
adc
and
scas
iret
mov
mov
clc
mov
hlt
jbe
cwtl
in
clc
fcomps
popf
lods
das
scas
pop
pop
repnz
sub
jle
xlat
xor
inc
mov
push
fsubrs
cwtl
hlt
cmpsb
fldenv
sub
jnp
stos
push
aam
clc
pop
cmpsl
xchg
movsb
add
xor
stos
movsb
test
sub
fsubp
xchg
push
mov
adc
leave
mov
sub
add
and
popf
lds
fld
pop
mov
mov
imul
mov
lea
call
mov
data16
inc
sbb
aaa
pop
es
adc
fimuls
aas
xchg
dec
js
cmp
ds
adc
loope
xchg
lds
cmp
xor
repnz
pop
enter
xor
jp
jmp
or
insb
xor
fistpl
pop
sar
testl
idiv
dec
sbb
cli
pop
mov
inc
andl
fstps
ljmp
xor
into
outsb
stc
mov
stos
pop
cltd
mov
xlat
pushf
push
out
loope
pop
ljmp
push
test
dec
and
cmp
les
lahf
cmpb
cmp
inc
xor
pop
mov
lods
lret
decl
and
repz
leave
test
push
add
and
jp
or
mov
pop
dec
inc
lds
or
rorl
jl
mov
sbb
dec
jns
int3
xor
fldenv
add
std
scas
jg
iret
jnp
sbbl
mov
cmp
gs
pop
add
or
dec
popa
add
adc
add
ret
addb
mov
pushf
outsb
sahf
fistpl
sbbl
mov
sbb
xchg
and
lds
jno
pop
stos
or
andb
lea
sti
push
fsubl
lahf
mov
sbb
lea
icebp
jne
xor
and
stos
jp
and
adc
in
pusha
insl
sub
popa
movsb
pop
cmp
or
add
adc
subl
lahf
xchg
nop
dec
jecxz
mov
mov
pmuludq
and
data16
inc
ljmp
dec
cmp
lret
emms
addl
sub
jg
pusha
pop
rclb
xor
rorl
mov
xlat
jne
lock
into
adc
mov
pop
sbb
mov
jbe
jmp
stc
mov
sahf
ret
mov
lock
push
mov
out
cmpsb
dec
mov
or
fmul
je
out
and
jo
in
cmpsl
imul
movl
pop
mov
cmp
inc
not
scas
mov
and
mov
in
hlt
add
mov
jne
out
fbld
scas
mov
push
call
adc
mov
inc
arpl
sbb
adc
fistpll
cmp
int
jb
xchg
and
rorl
lahf
ret
push
push
jl
mov
inc
fs
rorl
xchg
lock
jbe
mov
sub
or
dec
clc
or
xchg
cmc
add
in
jae
arpl
mov
cmp
addl
mov
ret
pop
cmp
and
lods
push
pop
jnp
xchg
add
inc
pop
mov
shll
lock
addl
lahf
cltd
hlt
or
push
mov
repz
sbb
cld
xchg
sub
test
jne
cmp
data16
mov
ja
push
insb
ret
shlb
mov
push
cmp
int
jnp
int
sti
stos
int3
aad
out
cmpsb
inc
pusha
out
sbb
pusha
clc
jecxz
mov
fucomp
or
xchg
into
pop
pop
xchg
adc
imul
pop
nop
adc
add
icebp
and
stos
test
faddp
mov
xlat
pop
sbb
and
lcall
es
push
jecxz
pop
push
push
lea
ss
dec
push
inc
mov
mov
int
dec
dec
aad
repnz
insb
adc
xchg
push
ja
call
cmp
stos
cmp
in
push
adc
std
dec
cwtl
mov
cmp
cmpsl
aam
ficompl
daa
imul
sarb
scas
dec
jp
mov
mov
inc
test
nop
fcoml
addb
adc
jnp
dec
pop
or
adc
sbb
insl
jp
dec
enter
adc
push
lods
pushf
lret
das
adc
insl
mov
leave
sti
jg
push
scas
mov
mov
mov
add
add
pop
pop
xchg
fwait
in
dec
ficoml
sbb
int
stos
dec
enter
sub
stc
push
add
cwtl
sbb
int3
aaa
gs
pop
mov
inc
inc
iret
adc
rcr
cmp
fsub
mov
clc
in
out
jl
lods
dec
add
ret
dec
rcrl
xchg
cmp
arpl
jle
rorb
mov
cmp
cli
lret
pop
ficoms
inc
xor
xor
and
inc
es
stos
pop
sub
sbb
sahf
push
dec
push
lahf
jp
xchg
xor
pop
out
cmp
lds
inc
inc
stc
fists
popa
loop
and
and
pop
mov
fldcw
outsb
adc
or
les
mov
sti
popa
pop
int3
jl
iret
movsb
ror
into
scas
mov
xor
cmpsl
xchg
insb
mov
movsl
xchg
jmp
call
rolb
sbb
subl
insb
pop
and
icebp
push
in
adc
pop
scas
mov
arpl
mov
inc
xchg
mov
loop
hlt
mov
cmpsl
sub
bound
jmp
sbb
std
adc
cld
cmp
roll
ja
add
xchg
and
addr16
xchg
out
out
mov
aas
pusha
jge
fmull
popa
add
jl
lock
and
add
rcrl
icebp
and
mov
xchg
hlt
inc
shrl
mov
mov
imul
jo
shll
push
outsl
popa
popf
cmpsb
ret
pop
or
stos
in
and
inc
add
dec
push
call
pop
xor
pop
in
pusha
jp
lods
mov
jecxz
fdivr
movsl
js
insb
popf
jbe
pop
mov
jle
es
arpl
rolb
ljmp
or
pop
xor
or
mov
int3
in
inc
loope
ficoms
and
imul
jp
aaa
pop
jecxz
test
fsubs
inc
ja
stos
outsl
insb
xchg
cmpsl
cmpxchg
out
xchg
pushf
lret
xchg
ja
jmp
dec
gs
stos
jg
repnz
cmpsl
xor
les
jl
mov
in
rorl
add
and
sahf
imul
rcrl
mov
push
mov
xchg
sub
js
cwtl
or
shll
test
dec
jo
pop
cmp
xchg
ljmp
adc
adc
cmp
jne
mov
daa
dec
clc
scas
adc
add
inc
lcall
testl
xlat
sbb
shrl
push
jb
xchg
lods
mov
into
push
test
into
aaa
xchg
mov
xor
jl
jp
cmp
push
lds
call
arpl
inc
or
out
into
cmpsb
or
adc
nop
iret
mov
jo
repz
lcall
mov
pop
scas
rcrl
aas
stc
stc
cli
movsl
adc
test
faddl
push
fmul
inc
mov
pop
inc
push
mov
jge
out
nop
cs
and
int3
lcall
sbb
cmpsb
loop
repnz
sub
inc
push
cmpsb
or
pop
xchg
pop
dec
arpl
dec
mov
addb
mov
mov
sarl
sbb
cmpl
mov
pop
adc
das
arpl
or
xchg
inc
repz
push
adc
pusha
mov
test
enter
cmp
cmp
mov
in
push
mov
shrb
mov
in
mov
xor
loopne
in
push
stos
test
mov
test
mov
data16
jp
test
outsl
cmp
dec
jp
in
jmp
fstl
lcall
ficoml
call
nop
in
imul
sbb
ret
cmp
dec
jbe
je
out
mov
mov
push
jnp
mov
notl
test
out
jo
or
inc
test
call
dec
ljmp
iret
leave
sub
fs
loope
pusha
movsb
xchg
insl
inc
mov
mov
pop
cmpsl
movsl
or
test
mov
decb
jno
mov
mov
aaa
pop
cmp
mov
pop
push
pushf
and
adc
mov
sysexit
mov
adc
out
cmc
sbb
aaa
or
cmpsb
cld
inc
xchg
mov
imul
lret
loopne
or
dec
mov
cmpb
popa
cmpsb
sub
into
movsl
sti
inc
aas
pop
lahf
leave
mov
call
stc
ljmp
stos
sub
lahf
add
cmpl
scas
or
cmpsb
icebp
shrb
or
arpl
movsl
movsb
ljmp
push
jg
pop
ret
mov
push
jb
insl
xor
out
push
jbe
daa
pop
loop
jecxz
sbb
pop
shll
stos
xor
sbb
pop
cmp
nop
push
mov
push
lods
in
pop
sbb
push
cwtl
ret
or
and
ds
push
leave
push
push
lods
adc
mov
leave
je
mov
std
cli
inc
orb
notl
xor
adc
fistpl
mov
xchg
mov
fldt
adc
cld
adc
mov
mov
lds
push
cmp
pop
dec
ss
hlt
rol
sub
aaa
mov
mov
dec
jae
mov
dec
dec
std
add
test
dec
mov
mov
xor
icebp
shrl
add
cmc
test
loope
adc
fs
fldcw
imul
sub
shrb
rcrl
jb
loopne
dec
pop
in
mov
push
sub
stos
addr16
mov
aam
push
shll
shrl
inc
adcl
addr16
lods
xchg
repnz
iret
gs
xchg
inc
adc
mov
imul
std
mul
xor
inc
loopne
out
jle
mov
or
cmp
stos
outsb
and
lahf
mov
adc
inc
faddp
fisubrl
cmp
pop
fisubrs
das
and
push
rcrb
ss
mov
out
incb
fwait
pop
rcrb
aam
and
insl
cmp
push
scas
les
xchg
xchg
mov
or
cmp
lcall
dec
hlt
notl
pop
scas
cmpsb
xchg
jnp
das
mov
nop
jle,pt
xchg
push
imul
cmp
int3
jl
cmpsb
cmpb
dec
stc
fisubrl
andl
imul
fisubrl
pop
xor
inc
jge
cmp
or
dec
imul
lret
notl
in
test
enter
data16
and
dec
add
jo
xchg
cmp
dec
test
repnz
imul
lods
xchg
in
mov
pop
lret
mov
call
mov
dec
insl
pop
dec
cmp
push
insb
rcrl
mov
jle
sub
mov
call
mov
sub
pushf
fyl2x
imul
clc
dec
push
dec
push
int
repz
mov
pop
adc
les
jbe
pushf
jmp
inc
ficoms
repnz
mov
mov
out
in
inc
cld
out
inc
lods
arpl
hlt
movsb
out
jle
lock
nop
inc
sbb
repz
mov
ret
into
mulb
xorl
and
fs
jno
pop
mov
js
and
mov
pop
insl
arpl
pop
sbb
add
mov
ret
sbb
inc
push
out
pop
mov
cmp
scas
in
dec
jnp
dec
dec
inc
lock
lods
adc
loop
ficoms
scas
es
xor
dec
stos
sbb
xchg
fwait
stos
mov
mov
sbb
inc
or
fnstsw
icebp
scas
mov
js
cmpsb
aas
paddq
pusha
cmp
or
scas
inc
aas
scas
xchg
daa
scas
sbb
inc
imul
push
ss
pop
cmpsl
cmp
pop
jb
out
xor
fs
sbb
adc
mov
pushf
lock
sbb
fiadds
mov
movsb
leave
dec
insb
add
mov
in
mov
xor
mov
lods
xchg
xchg
sbb
push
test
call
mov
mov
in
push
add
cmpsl
add
mov
push
enter
lock
jmp
ret
xlat
out
aam
mov
xchg
decl
scas
popl
push
and
in
mov
sahf
and
fsubl
dec
icebp
pop
push
sar
dec
test
cmp
shr
pop
aam
jle
fistps
and
nop
mov
testb
sub
mov
inc
xchg
filds
cmp
add
ljmp
outsb
iret
into
filds
sti
pop
xchg
fldl
jle
nop
dec
jb
mov
enter
inc
push
sbb
mov
jecxz
cmp
in
jge
mov
sbb
add
sub
pop
aam
xchg
repz
aam
mov
das
add
aad
lcall
mov
popf
shrb
sbb
sbb
and
pop
and
mov
aam
push
sbb
arpl
aas
gs
push
movswl
into
gs
mov
nop
mov
out
fstl
xchg
xchg
mov
nop
push
cmp
jg
fdivrl
inc
enter
inc
cmp
call
sub
cwtl
inc
push
into
mov
add
push
push
je
pop
xchg
dec
jecxz
jge
repz
cmp
pop
lods
cmp
mov
ljmp
xchg
pop
ss
movsb
rclb
cltd
in
repnz
push
andl
and
jno
aad
in
aam
mov
and
mov
jo
add
add
jl
fs
ret
pop
or
fisttps
in
mov
test
xchg
jl
mov
push
jg
out
push
push
add
aad
in
pop
xchg
in
sub
dec
sub
xchg
add
xchg
add
mov
loopne
adc
out
jecxz
jge
imul
dec
dec
bswap
fs
repnz
jne
push
adc
rcll
js
pop
jle
lods
insl
mov
dec
je
mov
mov
insl
inc
push
out
sbb
inc
fdivrs
jne
inc
sub
les
sbb
test
imul
mov
ja
mov
push
and
cmpsb
add
cmp
add
data16
pop
sbb
push
mov
sbb
sbb
mov
js
xor
and
cmp
add
sbb
adc
jecxz
neg
leave
popa
bound
les
and
mov
adc
int3
cmp
jae
cmp
repz
mov
icebp
jge
cld
paddq
inc
xlat
sbb
in
shrl
ja
jle
insb
add
fisttps
sti
pop
movsl
lcall
push
insb
movsb
xchg
or
dec
test
loop
sub
mov
lods
sti
mov
in
shlb
aas
fs
add
and
xor
pop
cli
std
mov
adc
push
and
jg
clc
fimull
mov
aam
and
xor
or
int
das
lcall
jg
imul
movsb
sbb
dec
or
lds
dec
lods
xchg
mov
lret
push
sbb
mov
cmp
ds
movsl
orb
push
inc
out
push
mov
dec
inc
loop
lret
lods
mov
test
jmp
dec
push
gs
xorl
pop
adc
sti
subb
fstl
push
call
or
loope
notl
xor
fstpl
adc
movsl
shl
imull
sub
bound
mov
or
sub
jno
add
cmp
loop
fadd
mov
jae
fisubrl
pop
imul
imul
imul
subb
xor
mov
sub
ret
and
sub
or
ja
adc
daa
imul
imul
jno
lods
pop
fdecstp
insl
adc
inc
repnz
xchg
pop
inc
or
cwtl
or
sub
cwtl
call
rcll
out
inc
outsb
lods
push
inc
out
pop
sti
jb
lahf
arpl
add
imul
sbb
cmp
mov
es
enter
rclw
jne
fwait
sub
jb
out
mov
mov
mov
inc
lahf
js
or
pop
dec
pop
xorb
scas
sti
jae
xchg
fcomps
push
lcall
ret
loopne
push
sbb
sbb
imul
rorb
or
mov
pusha
mov
fdivrs
sub
lret
shlb
test
loopne
sub
pushf
mov
cmp
iret
and
sbb
outsl
mov
push
lods
leave
lea
aaa
js
pop
inc
jmp
jae
decb
xchg
idiv
jecxz
scas
in
aam
push
inc
and
sbb
in
popa
testb
push
and
sahf
fimuls
sar
loope
mov
mov
out
mov
mov
pop
inc
sub
fimuls
inc
adc
leave
fucomp
inc
sub
sub
dec
test
and
xor
mov
push
pop
loop
mov
idivl
mov
mov
and
imul
and
xor
push
adcl
cmp
sub
addr16
cmovb
mov
rclb
fsubp
xor
inc
js
scas
pop
xor
mov
fcoml
aad
test
jg
enter
mov
jb
sub
pushf
loopne
leave
insb
sbb
mov
fadds
lods
ret
inc
adc
jp
pop
xorl
mov
push
xor
inc
fwait
divb
pop
clc
in
cmp
dec
xor
mov
test
or
test
fimuls
movsb
dec
add
add
mov
pop
out
dec
fcomi
xchg
out
xor
fldcw
stc
imulb
ljmp
roll
mov
mov
es
out
nop
shlb
push
push
sbb
jmp
sub
popa
xchg
mul
or
jmp
mov
shrl
sub
pop
loope
jne
lods
mov
sub
out
inc
sbb
fadd
jnp
out
orb
es
clc
sbb
notb
faddp
adc
insl
inc
test
or
sarl
movsb
push
imul
cmp
mov
push
jns
xchg
call
loop
arpl
or
push
xor
cmp
cmpsb
mov
or
iret
imul
push
pop
sbb
jecxz
jp
mov
mov
aad
add
adc
iret
xchg
push
lods
frstor
jmp
clc
mov
es
data16
cwtl
xchg
shll
mov
clc
cmp
dec
push
mov
or
pop
fiadds
scas
mov
icebp
sub
leave
sub
add
xor
xchg
cmpsb
mov
push
jns
jmp
dec
cmp
in
icebp
push
dec
inc
pop
lock
xor
adc
dec
lods
push
sbb
in
mov
ror
jno
fisubs
push
js
loope
lods
in
dec
movsl
hlt
or
cld
or
and
inc
cli
movsb
inc
aas
rorb
xchg
int3
inc
imul
xchg
inc
xor
mov
out
xorb
pop
fildl
jp
dec
sbb
arpl
int3
fistpl
sbb
pushf
dec
aad
and
dec
jbe
cltd
popf
cmp
imul
sahf
fcompl
fbld
filds
test
xor
push
jnp
jns
and
pop
xchg
pushf
cmc
xor
mov
int3
sub
xchg
and
inc
fwait
mov
popf
inc
pop
or
and
pop
xchg
repnz
test
xchg
frstor
push
movsl
xchg
adc
xlat
and
repz
jg
pop
clc
nop
mov
pop
mov
dec
lahf
inc
or
pop
dec
add
sub
sti
pop
push
lret
mov
cs
dec
int
or
pop
and
xor
ds
push
into
gs
mov
pop
push
inc
arpl
sbb
jne
or
jmp
mov
scas
cmp
nop
fs
mov
push
pop
repnz
mov
call
jl
push
lea
sub
mov
or
rcll
test
in
lods
sub
mov
xchg
int3
sbb
sbb
iret
stos
sahf
mov
stos
adc
sub
sub
xchg
rorl
arpl
mov
lcall
fnstsw
dec
xor
lcall
mov
push
loope
test
push
in
mov
call
and
jae
rorl
pop
subb
push
push
pop
in
rcr
mov
or
add
mov
jl
test
imul
push
loop
ss
mov
movb
add
and
repz
mov
call
inc
mov
mov
inc
pusha
push
data16
push
pop
xchg
fldenv
out
or
lcall
lret
aaa
inc
lods
cmp
addr16
cmp
lahf
lock
xorl
or
pop
outsl
and
out
xchg
popf
inc
enter
leave
std
cli
sarl
xchg
add
cmp
push
popf
xor
out
inc
add
jle
mov
xchg
adc
jb
fwait
mov
or
les
fs
fcmovbe
mov
pop
jbe
aam
xchg
filds
fdivl
sbb
push
cmp
sti
cmp
pop
pop
adc
dec
out
loop
loope
sbb
xlat
in
mov
outsl
mov
mov
mov
test
sbb
fldpi
mov
test
mov
mov
test
je
std
daa
int3
mov
pop
adc
adc
loope
or
xor
in
incl
add
adc
test
movsb
jnp
out
mov
push
mov
add
xchg
lcall
sub
or
sarb
pop
aam
or
push
dec
or
outsb
imull
stos
xor
lods
xchg
push
sub
or
popa
negl
push
or
mov
jecxz
dec
mov
cmpsb
lods
push
and
mov
adc
sbb
dec
shrb
loopne
clc
add
cmpsb
add
dec
push
sub
pop
cmpsl
jbe
std
mov
sbbl
repnz
jne
and
lret
and
sbb
xchg
ljmp
sbb
mov
clc
movsb
inc
cmp
int
dec
mov
stos
lea
sbbl
ds
test
pop
xor
mov
ret
pop
fidivs
cwtl
mov
jge
fs
and
mov
mov
fldcw
cmpsl
imul
pop
movsb
int
mov
jmp
jle
addr16
insl
push
icebp
ds
cwtl
mov
lcall
sub
and
mov
xor
int
pop
or
cmpsb
fisubrs
inc
enter
notl
imul
lds
stos
clc
xchg
inc
mov
cld
lahf
lret
xor
rcrb
sbb
je
int3
pushf
push
out
jle
ljmp
or
scas
jae
jns
xchg
pop
or
cmp
ud1
aam
int
fistpl
cli
and
add
test
xchg
daa
mov
fs
clc
mov
or
mov
lock
ret
push
popa
insl
imul
xchg
adc
hlt
cltd
xor
xor
inc
popl
adc
mov
jecxz
sub
movsl
lds
outsb
inc
jp
inc
movsl
call
lds
dec
cmp
dec
mov
xor
lea
cmc
lret
cmp
xchg
cmp
dec
popf
aas
xor
xor
dec
dec
jp
mov
ficompl
stos
xchg
ja
iret
shlb
xor
sti
dec
push
push
or
add
mulb
out
idiv
nop
cmp
inc
popa
or
scas
out
adc
lock
stc
lcall
pop
xor
test
push
into
lock
push
push
decl
xor
jg
xor
flds
cmp
shll
mov
test
mov
dec
mov
sub
mov
push
test
out
ds
andl
dec
mov
sbb
ss
adc
hlt
rol
mov
mov
dec
jns
sarl
incb
dec
shlb
stos
add
mov
in
mov
out
xor
ds
dec
out
fcmovnb
addb
sbb
les
shrl
data16
or
add
adc
mov
dec
sub
mov
xlat
ds
int
mov
int
faddl
jb
out
pop
push
mov
push
sbb
pop
bound
ja
loopne
adc
lcall
int
test
mov
jnp
push
nop
cmp
sbb
adc
inc
inc
fcoml
subl
imul
ds
cmp
aaa
cli
outsb
sub
rcrl
pop
sub
mov
mov
not
loop
push
jns
outsb
and
jle
sbb
mov
adc
hlt
call
jp
sbb
sub
jmp
mov
push
leave
mov
std
pop
out
into
loopne
push
pushf
and
sbb
push
push
bound
mov
insb
mov
xor
and
mov
incb
addr16
or
popf
mov
divb
js
push
dec
jg
loope
push
pop
into
int3
dec
xor
jno
adc
mov
push
scas
sbb
mov
in
xchg
mov
pusha
inc
sub
mov
rol
adc
mov
popf
out
xor
sub
out
daa
es
cmpsb
inc
cs
xchg
xor
inc
cmc
sarl
mov
pop
and
push
rcl
sub
sbb
bswap
adc
dec
cmpsl
popf
inc
test
gs
mov
sub
pusha
mov
mov
cmp
lret
mov
cmp
sub
popf
outsb
mov
sarb
lcall
dec
bound
dec
icebp
sub
jecxz
out
enter
cmp
mov
ljmp
mov
xchg
lret
add
dec
lods
jb
pop
sbb
push
or
daa
movsl
or
add
mov
add
repnz
jle
mov
sar
gs
jmp
jecxz
ljmp
xchg
insb
inc
es
sbbl
loop
shlb
stos
dec
arpl
mov
arpl
or
push
xchg
aad
lods
push
into
xlat
pusha
inc
sbb
and
fiadds
movsb
outsb
mov
sbb
xchg
xor
dec
fwait
inc
das
mov
xchg
movsl
iret
sub
bound
test
pop
leave
pusha
jnp
in
test
cmpl
loope
jge
sbb
mov
jno
xor
jnp
push
cli
addr16
mov
and
mulb
shll
push
adc
sti
add
cs
cmpsl
lcall
sbb
pop
enter
mov
lods
xor
daa
cltd
outsl
das
cmp
enter
in
stos
icebp
push
lods
into
rorb
sub
mov
les
xchg
mov
clc
movsb
test
sub
fcmovnu
dec
sbbb
aam
mov
scas
cmpsl
sub
and
cli
push
iret
aas
jnp
jno
das
popa
add
jmp
aam
inc
mov
sahf
stc
mov
mov
addl
ljmp
dec
rorb
sub
outsl
xor
jp
and
pop
cmp
inc
inc
in
stc
cmp
pop
jge
adc
xor
dec
leave
pop
icebp
cmp
lahf
jmp
scas
dec
mov
mov
adc
iret
cmp
addr16
push
pop
lcall
jle
sbb
out
int3
inc
inc
mov
or
mov
push
fcomi
stos
outsl
and
push
or
ss
int3
sub
loopne,pt
cs
push
jg
sbb
dec
add
pop
add
dec
sub
adc
arpl
mov
in
lret
mov
mov
daa
addr16
mov
or
mov
mov
mov
or
les
pushf
insl
fidivrl
fcoms
ljmp
sbb
mov
daa
fbld
add
adc
cmpb
inc
int
adc
inc
sub
jl
jb
xor
jmp
mov
out
negb
idivl
lods
orb
ljmp
negl
jnp
lea
dec
cmpsb
xchg
sahf
inc
repnz
adc
jne
jle
ss
shl
pop
outsb
imul
add
pusha
push
sub
sbb
fisubrs
mov
repnz
data16
sub
ljmp
scas
mov
pop
jno
dec
add
add
lcall
in
lahf
enter
and
adc
fmuls
and
in
icebp
test
cld
or
std
lcall
mov
jno
jns
or
pop
ja
subl
mov
sti
inc
gs
cli
mov
pop
enter
push
movsb
insb
ficoms
push
in
add
push
pop
inc
enter
add
lahf
jns
insl
adc
inc
jns
popf
scas
xchg
push
test
add
lods
lods
stc
xor
shlb
je
shll
jmp
cmpsl
sti
test
and
inc
int3
and
in
mov
stc
dec
popa
mov
test
inc
jb
out
mov
cmpsl
mov
jmp
jo
stc
jge
adcl
xchg
add
cmp
mov
jnp
sahf
fldcw
xorb
jbe
call
mov
mov
rorl
lods
repnz
pop
mov
or
sub
nop
loope
push
mov
fists
inc
out
movsb
int3
mov
inc
test
add
jns
and
cmpb
in
sub
mov
shlb
leave
addb
jo
sub
sbb
or
sbb
jp
pushf
test
in
outsl
fsubrp
out
jbe
cmp
out
fs
mov
sbb
popf
sahf
aaa
aas
add
push
adc
arpl
mov
rclb
adc
cmp
cmpsl
add
mov
sarb
enter
dec
cli
jp
adc
xchg
enter
nop
mov
lcall
pop
out
mov
icebp
pop
es
cmpl
add
lea
scas
jmp
mov
mov
mov
aad
sub
loop
jb
out
enter
sbb
aaa
addr16
xchg
clc
aam
mov
rcll
pop
mov
orl
seto
inc
gs
xchg
movsl
lea
je
sub
or
adc
mov
push
push
push
or
mov
add
mov
fsts
push
sahf
jle
ret
shlb
sub
insl
testb
fnstenv
mov
je
cld
sar
call
aaa
adc
xchg
mov
mov
push
pop
sub
movsl
xor
pop
int
inc
out
es
aam
mov
loop
dec
xchg
xchg
sbb
pop
mov
jmp
push
stos
ljmp
xor
loope
test
stos
sti
or
nop
xor
stc
stos
xchg
stc
mov
ss
mov
sbb
mov
xchg
push
test
mov
mov
aaa
data16
jg
aad
stos
push
mov
lret
test
mov
test
in
icebp
subl
mov
push
stc
and
cmp
pusha
push
sub
movsb
scas
sarb
insb
cmpsl
movsl
int
push
sbb
add
icebp
push
pop
sub
mov
movsb
frstor
mov
mov
add
push
or
mov
sbb
and
lea
repz
adc
jne
add
xchg
cs
sti
out
loope
addr16
ficompl
add
fs
imul
fsubrl
insb
stc
push
ljmp
lods
pop
out
inc
fcom
xor
cmp
add
test
jo
push
jo
cmp
ficoms
inc
enter
pop
inc
mov
repnz
cltd
cmp
call
fs
mov
xor
sub
push
and
adc
jecxz
push
push
xchg
or
arpl
cli
jo
int3
mov
xor
add
dec
push
aad
cltd
jg
pushf
pop
inc
arpl
or
in
push
mov
mov
incb
jle
pop
inc
and
in
fiaddl
subb
xchg
repnz
rcr
daa
pop
add
sbb
lods
adc
sbb
cmp
lret
adc
xorl
insb
xor
jge
fisubrl
cmpsl
jle
ljmp
and
or
inc
mov
leave
xchg
jbe
std
outsl
sub
sub
xor
cs
dec
sub
inc
inc
ljmp
gs
xchg
aaa
add
bound
jbe
xor
xor
and
rorl
enter
and
mov
aaa
daa
test
mov
and
pushf
ss
aaa
std
pop
push
xor
jp
test
cmp
out
inc
test
int3
adc
mov
push
sub
jbe
or
inc
fistpl
clc
in
daa
into
inc
sarb
xorl
scas
movsl
pushf
pusha
fwait
or
sub
les
mov
ret
xor
mov
loopne
out
push
pusha
fidivs
inc
cltd
test
add
fstpt
jne
lock
xchg
ret
stos
in
push
jo
mov
push
movsl
dec
gs
jae
test
inc
sbb
imul
ljmp
cmp
pop
xor
psubw
sub
pop
loope,pn
dec
lcall
sub
orl
push
cltd
pop
jl
add
or
cs
frstpm(287
inc
mov
cmp
dec
dec
sbb
jmp
mov
xor
insb
jno
cmp
loopne
dec
mov
pop
fsubs
adc
into
cmp
andl
inc
add
xchg
xchg
xor
xchg
cmc
add
cmp
or
pusha
jno
xchg
into
ja
out
sub
mov
std
dec
adc
or
dec
mov
push
or
lds
aaa
mov
xchg
jge
dec
push
inc
mov
or
push
push
stos
lea
push
clc
std
aas
fwait
ret
es
es
mov
push
loope
gs
mov
or
pop
xchg
jle
shlb
loope
popa
push
sti
jecxz
arpl
pop
test
mov
mov
push
mov
dec
sub
cs
addl
cli
xchg
xchg
ljmp
xor
cmp
fwait
or
mov
pop
test
in
in
dec
repz
adc
mov
stos
push
jmp
cmp
dec
xor
cmp
jmp
test
lahf
int3
dec
inc
xchg
add
mov
icebp
ljmp
roll
pop
fnstsw
jno
fisubrs
imul
gs
cli
sub
movsl
cmp
stos
stos
fmul
fisttps
scas
push
rcl
adc
aad
dec
dec
fcompl
daa
adc
int
fdivs
stos
adc
test
push
rclb
mull
pop
scas
cmp
inc
pop
dec
das
cwtl
xchg
mov
jae
loope
sub
jle
in
imul
clc
ss
pop
add
pop
sbb
rep
rorb
sbb
shll
mov
and
leave
sub
stos
scas
mov
xchg
lds
ffreep
xchg
fisubrl
sub
mov
dec
jnp
mov
imul
lret
mov
imul
in
inc
test
and
push
nop
dec
lock
push
pop
roll
jle
clc
sub
rol
mov
nop
lcall
in
lret
cmp
or
mov
stos
ret
xor
push
inc
mov
cmpsl
scas
cmpsb
les
out
inc
ffreep
inc
add
std
cld
jno
cmpsb
cmp
sti
dec
nop
movsl
xor
popa
xchg
repnz
pushf
cmc
and
jb
add
adc
jnp
xchg
pop
lahf
in
inc
pop
imul
out
mov
jne
and
mov
and
cmc
inc
sub
sub
xchg
xchg
inc
imul
insb
out
pushf
xchg
cmp
mov
in
aam
sbb
pop
mov
insl
push
and
int3
clc
or
dec
sbb
mov
inc
jns
dec
or
jl
push
jp
mov
push
or
ja
subl
sub
cmp
icebp
jle
int
movsl
rorb
aaa
lret
and
loopne
and
adc
xchg
loop
jns
popl
jge
stos
sbb
andb
pop
push
cmpsb
into
jge
lret
dec
xchg
je
sub
cmp
cs
pushf
push
cmpb
dec
fucom
fmuls
popa
imul
pop
xor
mov
or
test
jp
jo
push
inc
fcomp
fidivrl
out
or
inc
sti
iret
mov
jmp
mov
xor
push
mov
pop
stos
pusha
addb
pop
pop
cwtl
in
cmp
mov
std
sbb
mov
ret
jae
or
mov
mov
es
cwtl
mov
or
aam
pop
mov
cmpsb
roll
inc
xor
std
cwtl
stc
daa
fs
inc
test
mov
sti
and
mov
or
jmp
loope
lret
push
test
aam
xorb
icebp
scas
sbb
lret
pop
jge
mov
sbb
ret
enter
sbb
xor
sbb
sbb
cmp
lods
fwait
push
enter
adc
fildll
movsb
and
or
lods
lret
gs
les
push
add
stc
lahf
sbb
mov
outsb
mov
add
pop
jg
xor
es
fsts
jg
cmpsl
in
inc
add
aaa
push
lds
mulb
inc
or
sahf
int
lcall
es
push
fstps
jp
mov
insb
ljmp
int3
xchg
inc
daa
mov
cmp
cmp
and
jmp
mov
insl
ja
jne
mov
dec
lock
mov
xchg
or
pop
ret
sbb
jge
stc
xor
cli
jo
imul
sarb
shl
arpl
cmp
es
out
cmpsl
dec
xchg
add
pop
aam
pop
movsl
lds
cmpsb
push
lods
sbb
dec
adc
or
jo
push
rcrl
fnstcw
mov
xor
mov
xchg
fisttpl
movsl
dec
cmp
adc
xchg
mov
jbe
daa
add
dec
or
dec
dec
and
imul
dec
jns
jg
mov
jmp
pushf
cld
mov
lods
insb
pusha
dec
dec
xchg
test
sub
sbb
fsubrs
mov
jmp
pop
xor
cmp
test
jl
and
in
cmc
sub
push
xlat
fwait
push
add
add
mov
mov
out
mov
inc
jno
insb
aad
imul
ds
and
in
add
mov
xchg
lahf
fnstsw
ljmp
inc
jno
jbe
clc
add
sbb
mov
nop
loop
aad
mov
mov
add
sub
jg
outsl
add
jge
filds
rolb
mov
dec
jge
dec
dec
nop
mov
cmp
scas
jno
shlb
es
shlb
inc
mov
push
out
out
xor
pmaxsw
xor
imulb
sub
add
insl
sub
js
xchg
insl
mov
jecxz
mov
mov
jb
and
es
cmp
aas
lock
mov
adc
dec
mov
test
jge
push
fs
sub
add
out
ljmp
xchg
aad
mov
pop
cmp
push
add
mov
dec
lock
subl
add
cmp
sbb
lret
push
xlat
daa
imul
das
adc
movsb
or
popf
ret
push
loop
orl
jge
mov
mov
xchg
jae
jne
jb
mov
cmp
inc
jno
inc
lret
push
das
ss
test
adc
shl
mov
or
in
mov
pop
loope
jo
adc
fwait
sbb
in
inc
adc
cmp
fistl
clc
cmc
xchg
popa
mov
mov
mov
pop
lcall
daa
jo
fwait
mov
pop
testl
loopne
sbb
stos
sbb
xchg
decb
jle
leave
lods
repz
cmp
arpl
jmp
mov
andl
or
push
or
in
mov
sub
cmp
mov
and
pop
cmpsl
rcl
mov
int
or
sti
xchg
pop
cltd
lods
add
push
xor
add
and
fsubrl
shl
add
mov
push
push
jge
dec
lods
cld
iret
xchg
orb
sub
adc
js
dec
jge
and
data16
mov
ftst
dec
cs
mov
push
mov
sbb
adcb
ret
mov
repz
lret
push
mov
pop
daa
xor
stc
and
test
fs
xor
dec
cmc
test
mov
pop
js
jne
mov
push
pop
cmpsl
push
adc
mov
adc
bound
adc
xor
xor
adc
and
or
mov
shll
sti
hlt
scas
hlt
and
fcmovnu
mov
jg
xchg
ljmp
shll
std
roll
mov
gs
sahf
ss
xchg
sbb
sbb
xchg
out
adc
gs
mov
movsb
jmp
aaa
pop
dec
or
push
xchg
and
dec
ret
cltd
test
leave
in
and
das
jno
adc
rorl
fs
subl
notb
popa
mov
add
dec
inc
xchg
enter
push
test
cmpsl
xchg
cmpb
xchg
into
fisttpll
shlb
in
mov
jp
mov
push
popf
cmp
sar
mov
sti
outsl
inc
in
dec
fldt
sahf
sub
mov
les
sbb
and
xor
sbb
sti
dec
insb
jbe
add
movb
mov
mov
cmp
stc
fsubrs
cmc
adc
cli
cwtl
dec
loope
mov
cmp
and
push
inc
mov
inc
ret
cmp
gs
lret
push
fs
ret
sbb
pusha
out
inc
aam
adc
sub
mov
sbb
ret
idivl
add
fucomp
ja
or
fwait
cli
loope
and
adc
subb
mov
pop
mov
dec
fcomps
sbb
arpl
adc
inc
addr16
movsb
inc
iret
or
and
or
je
dec
in
das
call
out
scas
jno
insl
dec
add
jae
mov
cmpsb
xor
es
sbb
sahf
aam
lea
cltd
dec
or
loope
loopne
out
push
aad
add
aas
scas
mov
push
push
jg
cmpsb
sub
iret
mov
cmp
or
in
arpl
roll
mov
ret
into
add
lods
mov
ficoml
jnp
inc
std
bound
push
loop
mov
xor
mov
into
loop
mov
iret
repnz
scas
cmc
insb
cmpsb
outsl
mov
lea
jge
aam
jns
mov
imul
adc
inc
popf
imul
movsl
inc
mov
xchg
sbb
push
repnz
test
or
cwtl
clc
or
cmp
and
ja
fucomp
mov
inc
jnp
jl
inc
mov
xchg
inc
out
dec
call
addr16
xchg
lret
pop
std
cs
gs
xchg
movsl
mov
pop
jecxz
mov
gs
mov
sub
out
popa
xor
mov
lret
and
lret
ljmp
aam
stos
jbe
fs
mov
and
call
aad
hlt
lds
iret
lock
cmp
mov
dec
or
dec
dec
mov
lods
jno
or
mov
std
aam
testl
dec
sub
shll
inc
les
je
xchg
in
adc
into
scas
push
mov
ror
into
fnstenv
mov
imul
dec
mov
mov
neg
lds
mov
push
cmp
push
xor
out
adc
out
pop
fs
xchg
in
out
xor
xor
popf
test
jno
scas
cli
mov
cltd
in
dec
xchg
mov
out
inc
imul
pop
mov
mov
pop
add
jp
pop
sbb
movb
into
mov
push
push
jle
cmpsb
daa
fsubrp
add
push
filds
out
fs
loope
adc
popa
xchg
pop
jb
daa
pop
data16
pop
inc
xor
pop
or
or
pop
int3
cmpsb
ret
jo
setp
mov
jle
mov
popf
pop
lret
xchg
mov
and
fistpll
scas
cmc
mov
push
ss
pop
jne
and
cmp
xor
xchg
js
mulb
testl
xchg
outsb
mov
sub
jle
lret
outsl
cmp
outsb
pop
loope
lret
daa
fnsave
dec
push
sbb
xchg
cs
roll
pop
cmpsl
and
sub
mov
xor
ret
cmp
pop
dec
outsb
in
out
or
movsb
cmpsb
cmc
mov
addl
cli
iret
leave
icebp
mov
mov
fsubrl
jne
and
pop
adc
pop
add
sbb
and
fisubrl
adc
int
cmp
xor
fldcw
push
sbb
fisttps
sub
cmp
imul
imul
lret
adc
fs
mov
or
jle
push
push
movsb
lret
sbb
jno
jp
adc
push
cmp
pop
xchg
lahf
and
sbb
inc
jg
xchg
clc
cwtl
icebp
push
pop
cwtl
adc
pop
add
push
fwait
ja
jmp
sbb
dec
outsl
fistpll
int3
sbb
rcrb
jo
and
jmp
push
mov
sbb
rolb
dec
push
in
jge
mov
aad
fnstcw
dec
popa
bound
jnp
cmp
scas
sbb
sbb
sub
rcr
mov
std
popa
out
jmp
sbb
test
repnz
sub
pop
mov
cmp
popa
aad
or
xor
inc
push
stc
js
adc
sbb
push
cmpsl
or
and
sub
je
jl
rol
adc
mov
push
pop
stos
fcompl
add
add
push
ficoms
cmpsl
or
pop
pop
jno
cmp
outsb
les
jp
outsb
mov
stos
pcmpgtb
jae
lock
loop
xchg
push
aas
pop
push
xchg
pop
jmp
jp
dec
cltd
dec
rcr
mov
iret
mov
mov
push
pop
mov
nop
fists
xchg
rcrl
add
cltd
xchg
cmp
inc
divl
mov
inc
loop
push
xorl
dec
insb
repnz
mov
pop
or
aam
adc
leave
mov
repz
xchg
xor
mov
push
jb
mov
mov
or
add
fbstp
pop
enter
xor
mov
push
sbbl
iret
in
movsl
xlat
mov
orb
dec
pop
popa
insl
aas
mov
jp
js
sub
or
mov
in
enter
loop
enter
inc
js
mov
mov
and
mov
sub
ret
movsl
rcrl
subb
or
fdivs
adc
mov
sbb
divl
int
inc
mov
push
jne
mov
cld
idivb
dec
inc
xor
stc
ret
loope
push
fbstp
adc
ja
add
xor
fxch
pop
mov
inc
jle
mov
jbe
push
sbb
fcomi
sbb
ror
cmp
sub
add
cmpb
rclb
jns
or
and
int3
cmpl
xor
dec
sbb
fwait
arpl
shlb
mov
push
and
mov
dec
mov
scas
jb
push
adcb
mov
icebp
push
inc
mov
mov
sti
iret
and
fimull
xor
call
bswap
adc
adc
jne
push
in
jmp
mov
dec
sbb
data16
xchg
movsl
iret
mov
sub
ja
mov
cmp
test
or
lahf
loope
shl
inc
dec
pop
add
cs
or
or
xor
mov
inc
lcall
xor
pop
fbstp
movsb
sar
or
sar
xor
test
mov
pop
divb
shll
bsf
xchg
xchg
xlat
adc
xchg
aad
pop
orl
sbb
adc
jo
cmp
mov
xchg
inc
jg
out
insb
dec
jbe
hlt
dec
xor
cmp
shll
iret
call
and
mov
lret
pop
lods
push
dec
adc
icebp
xor
push
pop
sti
lahf
mov
data16
jecxz
in
adc
lahf
sub
jp
pop
sbb
add
andl
jmp
faddp
or
mov
movsl
int3
sti
mov
int
je
fisubrs
les
scas
stos
aad
pushf
outsl
and
imull
mov
jbe
or
dec
rcrl
jbe
aam
shrl
pop
into
push
fwait
stos
push
pop
pop
sub
les
xchg
fiadds
adcl
adc
mov
push
xchg
add
fstps
dec
repnz
push
subl
gs
dec
pop
into
insb
xor
popa
dec
dec
mov
mov
sbb
loopne
in
and
ljmp
movsb
lcall
movsl
xchg
out
push
xchg
xor
dec
mov
test
stos
fsubrs
sub
std
insb
sub
repz
xchg
icebp
int
pop
xchg
lods
and
outsl
mov
push
inc
cmpsb
mov
out
xor
xor
mov
or
jl,pn
mov
dec
aas
add
mov
in
imul
pop
inc
es
enter
int3
pop
push
sti
sub
or
int3
xchg
arpl
jo
adc
jg
push
mov
hlt
leave
mov
out
jle
mov
int
xlat
and
push
sub
and
or
aad
inc
sbb
aaa
xchg
jnp
cmp
rclb
ljmp
in
mov
outsl
scas
mov
sub
in
pop
int3
or
mov
sbb
fdivrl
test
in
push
dec
pop
sub
push
shlb
mov
or
mov
xchg
in
stc
insb
scas
sub
mov
adc
cmp
bound
sub
es
inc
or
and
jne
and
outsb
add
mov
mov
cld
mov
out
inc
xchg
adc
mov
pop
jo
notl
mov
dec
bound
in
xchg
and
or
mov
lahf
xchg
pop
imul
test
adc
xchg
sbb
xor
fsubr
adc
xchg
es
pop
xor
test
dec
inc
inc
xor
fists
push
int3
pop
mov
jecxz
or
pop
jns
pusha
push
add
push
sahf
xor
outsl
lahf
or
lds
data16
or
push
ss
push
push
sahf
and
jns
push
add
or
fnstcw
ficompl
inc
int3
pop
mov
cmp
xor
jp
shrl
cmp
call
divb
cwtl
sbb
push
adc
xor
xchg
adc
xchg
mov
in
insb
bound
pminub
data16
mov
inc
leave
rol
xchg
mov
stos
push
adc
push
adc
mov
jbe
mov
icebp
jle
push
sbb
ja
mov
jmp
dec
subl
xchg
inc
mov
mov
mov
sbb
in
jo
int
adc
test
lock
cmp
push
shlb
sti
addr16
inc
rorl
inc
xor
xchg
fldenv
xor
mov
or
cmc
pop
rorb
jmp
test
pop
and
rclb
mov
jp
movzbl
jp
stc
imulb
cmc
repnz
mov
js
and
repz
int
xchg
jmp
orl
repz
rcll
jecxz
fs
loopne
jp
std
fcoms
insl
and
mov
pop
pop
filds
push
lcall
enter
mov
mov
mov
jle
adc
nop
cmpsb
adc
bound
cmp
lods
cltd
aad
fildll
inc
mov
scas
lahf
stc
out
lds
rcrb
int
inc
lret
rcr
ret
popa
mov
lds
xchg
arpl
inc
push
push
xchg
jp
mov
adc
lock
mov
jle
enter
push
in
inc
sbb
outsb
outsl
rcr
add
sahf
dec
inc
sbb
popf
shl
fildll
aam
iret
negb
pop
je
sub
cmpsl
test
loopne
push
push
and
lcall
adc
outsl
dec
mov
dec
in
cmc
inc
sub
imul
mov
and
jg
and
mov
insl
cltd
push
in
daa
rclb
xchg
mov
rorb
lcall
mov
adc
xchg
adc
sub
and
and
sub
or
adc
inc
add
jne
stos
loope
sub
shlb
xor
and
xor
mov
scas
inc
jmp
adcl
out
scas
adc
pop
push
in
negl
push
jno
rolb
outsl
push
mov
mov
pop
push
sub
mov
and
mov
adc
xor
les
mov
lds
cmpl
push
cmp
or
sti
ret
mov
push
push
mov
fsubrs
and
clc
mov
jl
cltd
inc
movsb
dec
cmpsl
jmp
insb
mov
sub
mov
jo
cs
jne
jle
jle
lcall
lds
ret
push
or
scas
mov
adc
sub
fsts
inc
sbb
fs
loopne
jb
sahf
ss
pop
popa
push
mov
mov
pop
xor
ret
cmp
aam
xor
lcall
xchg
mov
test
jge
aas
icebp
mov
loopne
fisttps
scas
ljmp
jmp
push
cmp
test
add
adc
pop
sub
cmp
cmp
add
add
push
lods
daa
int
lea
aaa
or
sub
push
in
push
ljmp
nop
mov
mov
cmp
pop
dec
es
pop
add
sub
movsl
pop
push
xchg
inc
loopne
scas
fcomps
inc
inc
jp
fimull
scas
sar
aam
mov
sahf
repnz
xchg
mov
lcall
push
ljmp
cmpsb
add
movsb
jbe
jle
mov
jl
lea
fists
lcall
sbb
ljmp
mov
cmpsb
add
scas
or
mov
and
aas
push
movsl
sbb
into
pushf
sub
test
push
in
and
stos
pop
cmp
mov
cli
shrl
sub
xchg
fcmovb
fucomi
jbe
insl
jno
pop
out
dec
ljmp
sbb
push
outsl
mov
and
sbb
pusha
orl
cmp
and
mov
test
popa
stos
xlat
mov
aaa
icebp
sub
push
push
cltd
cli
cvttps2pi
sbb
in
std
jmp
pop
in
lahf
pushf
in
push
xchg
stos
adc
xlat
ljmp
adc
push
je
out
test
add
icebp
data16
xchg
pusha
lock
dec
int3
cmpsl
jmp
or
shll
mov
movsl
mov
pop
push
pop
mov
add
nop
pop
sarl
js
cmp
mov
add
popf
dec
js
jmp
sbb
jmp
shrb
bnd
js
imull
xor
sbb
iret
adc
fs
mov
sahf
out
cmp
imul
shl
jmp
jmp
xchg
xor
cmp
jp
adc
in
outsb
fadd
jns
lcall
adc
lock
pop
js
xor
add
and
mov
and
test
push
fidivs
sub
jp
jge
pop
into
repnz
orb
jge
test
jg
popf
jo
fstpt
pop
ret
sub
sub
stos
std
arpl
jno
adcb
push
add
les
xchg
orps
sub
cmp
aad
xor
mov
pop
in
inc
jp
cmpsb
lret
ljmp
and
xchg
cmp
jo
out
xchg
inc
push
push
aaa
pusha
inc
fisubl
in
jb
and
addb
repz
shrb
mov
test
nop
jle
mov
xchg
xorb
add
push
xchg
xor
jbe
mov
cmp
pop
xchg
divl
je
outsb
in
adc
jp
iret
aad
cli
xor
clc
dec
xchg
das
test
icebp
push
popa
cmpsl
pusha
not
dec
push
cltd
cmc
cmp
fnstcw
inc
daa
lock
inc
pop
mov
adc
push
sti
imul
pop
pusha
push
aaa
adc
or
fcomps
imul
in
sbb
js
jnp
add
xchg
fnstenv
daa
rcl
cwtl
sbb
cwtl
aad
popf
push
adc
push
cwtl
cmp
mov
jo
push
lods
sbb
cmp
stos
lret
in
add
loop
jno
jae
mov
fsubrl
mov
fwait
push
add
hlt
cmp
outsl
js
xor
sub
sub
aaa
adc
or
mov
xchg
rclb
lods
cmp
xchg
mov
cmc
pop
jle
aaa
popa
fucomi
ficoms
gs
mov
adc
subl
cmp
add
push
jge
push
and
mov
in
xchg
shlb
rcll
in
and
sub
pop
clc
xlat
insl
pop
test
lea
pop
cmc
xchg
idivb
xor
mov
icebp
mov
shr
outsb
js
ret
testl
and
mov
sbb
sahf
call
rcl
cli
mov
dec
mov
mov
jb
daa
loop
aad
mov
nop
pop
sbb
mov
test
cltd
and
xchg
out
aaa
adc
aad
push
imul
arpl
mov
imul
lahf
ficoml
jb
inc
inc
imul
xchg
fmull
out
cmp
cmp
cmpsl
inc
mov
shll
insb
mov
push
out
cmp
or
lock
lret
adc
fs
int3
dec
jns
cld
hlt
imul
iret
popf
mov
xchg
fstl
add
fwait
rcrb
ret
mov
ljmp
and
pop
pushf
mov
sub
lock
mov
jmp
mov
xchg
pop
jp
mov
lods
pop
and
push
inc
push
xor
inc
push
mov
loope
rcrb
xchg
pop
cmp
xor
push
dec
hlt
in
cmp
add
in
fwait
bound
or
dec
xchg
and
loop
push
sbb
loopne
ret
dec
int3
push
dec
test
fs
jo
sti
cwtl
int
mov
adc
repz
or
xchg
pop
aaa
cli
xor
lret
cli
test
stos
fcomip
das
test
out
aam
fsubrs
das
jae
movsb
mov
nop
pop
out
adc
inc
mov
test
jns
jae
jae
fld
inc
dec
mov
test
and
ret
movsl
in
pop
insb
jne
rcl
mov
jae
xor
arpl
sbb
mov
xor
mov
xlat
pop
or
jo
cmp
and
jecxz
adc
je
jle
add
pop
fwait
dec
cmp
xor
pop
xchg
test
roll
pusha
lahf
int
pop
in
icebp
lock
mov
sti
mov
xor
lock
xchg
call
popw
push
pop
sub
outsl
popa
popf
outsb
jbe
cmp
mov
icebp
mov
ljmp
or
xchg
xabort
cmp
cmp
leave
xchg
fcom
jne
or
mov
movsb
je
jbe
push
ljmp
push
outsb
sub
test
sarb
or
xor
jbe
dec
or
imul
int3
pop
outsb
in
inc
inc
push
sti
xchg
das
sub
jno
inc
fsubp
aaa
mov
fwait
xchg
or
pop
cmp
push
jb
sahf
mov
int
dec
xchg
xchg
jle
sbb
and
xchg
iret
cli
push
sub
sbb
insb
mov
pop
in
sbb
outsb
and
lret
ja
inc
icebp
rcr
repz
mov
fldcw
js
sub
push
sub
repz
sbb
movsb
inc
or
arpl
sbb
scas
xor
cwtl
push
imull
xlat
adc
push
cwtl
push
mov
xchg
insl
icebp
mov
mov
jne
movsb
data16
pop
mov
scas
sub
xorl
imul
hlt
sbb
lret
jb
insb
je
and
ljmp
cs
and
mov
mov
addb
xor
addr16
xlat
js
pushf
xchg
mov
and
pop
scas
neg
xor
jle
jge
ss
aaa
stc
fsub
push
cmpl
push
repz
push
rorl
sub
cmpsb
dec
mov
push
mov
mov
dec
adc
add
std
imull
jbe
popa
lret
scas
jb
ret
mov
push
enter
idivl
adc
int3
sahf
imul
push
add
in
lock
sarb
mov
xchg
repz
stos
dec
jne
addb
idivb
fsubrs
dec
in
test
mov
cs
popa
xor
arpl
add
push
enter
mov
xlat
jo
cmc
adc
cltd
jbe
and
dec
mov
fnstsw
fisubrl
mov
dec
lret
add
sbb
xor
cmp
scas
in
mov
in
push
jnp
fmuls
jb
fimull
andb
loop
pushf
into
jg
pop
test
out
cli
repnz
pop
insb
mov
popf
add
or
aas
adc
ret
jnp
insb
into
nop
cmp
cmp
dec
pop
popf
sbb
pop
or
mov
mov
fists
lds
addl
nop
mov
insb
xorl
lret
jne
inc
sti
bound
sbb
xor
out
sarb
adc
cld
inc
jbe
rcrl
ss
inc
mov
into
add
xchg
rorb
push
call
sbb
mov
mov
add
movsl
das
xchg
push
sub
shl
cli
push
inc
xchg
push
cmp
fldenv
sbb
xchg
into
fsubl
pop
out
push
es
and
repz
pop
ss
adcl
in
arpl
jg
in
out
andl
aad
mov
repz
pusha
orl
jns
mov
inc
out
cli
jecxz
sti
xor
lret
idivl
aam
scas
xchg
lret
push
xchg
int3
xchg
xchg
add
sbb
and
dec
push
mov
repnz
adc
mov
pushf
add
inc
paddsw
scas
or
sub
jns
negb
cmp
xor
sbb
rcrb
iret
cltd
sub
push
popf
xchg
outsb
repz
sub
hlt
pop
mov
mov
push
jb
ret
and
lahf
or
fnstenv
loope
imul
jno
scas
and
mov
aam
scas
stc
fsubs
xchg
out
aam
test
sarb
addr16
inc
and
push
ret
js
jno
push
aam
xlat
or
jmp
add
in
add
or
add
adc
adc
icebp
lcall
pop
lds
jp
xorl
xor
mov
cmp
inc
push
outsb
mov
fstl
pop
popa
jle
jne
adc
jg
rcll
mov
loop
shrb
cmpsl
bound
sub
ffree
repnz
sbb
sbb
jecxz
adc
leave
dec
sbbb
ss
jno
cltd
push
loope
sbb
ret
jne
mov
daa
pusha
lods
cmpsl
call
std
xor
or
out
or
jp
shrl
dec
mov
out
aas
pop
sub
pop
jno
sub
mov
dec
xor
or
add
mov
mov
pop
xor
and
mov
inc
mov
xor
aad
dec
lock
inc
push
pop
out
test
push
push
into
loop
xchg
cmpb
pop
imul
test
test
mov
cmp
mov
es
stos
lcall
xor
sbb
cmp
aaa
jb
or
mov
or
mov
out
adc
jae
or
fcmovbe
mov
inc
push
pop
movsb
or
jp
pop
xlat
mov
aad
sbbb
jge
aad
add
les
in
mov
dec
clc
add
adc
jno
cmp
push
mov
test
adc
xchg
lret
cli
lret
inc
aaa
ljmp
in
cmp
add
and
movsl
inc
lcall
pop
mov
jno
dec
pop
mov
push
mov
cmp
push
fsubs
das
das
outsl
add
shll
sub
enter
sub
mov
xchg
add
repz
xor
jnp
aad
fwait
and
dec
imul
pop
test
inc
outsb
xchg
xchg
sbb
pusha
push
sub
ret
push
or
ret
int3
aaa
not
leave
push
xor
xchg
in
cmp
inc
mov
enter
sbb
cwtl
mov
pusha
sbb
adc
jg
adc
cltd
es
faddl
and
pop
adc
cmp
adc
addl
aaa
popa
jnp
test
pop
insb
decl
mov
dec
jae
adc
inc
xchg
fisubs
lods
add
sbb
jnp
adc
inc
ljmp
cmpb
and
sub
loope
lods
mov
cmpsl
push
fwait
pop
gs
jp
sub
pop
pusha
imul
dec
roll
shrb
push
mov
sbb
cld
xor
fwait
cmc
imul
jb
sbb
imul
fs
gs
jmp
jns
filds
cli
sub
shll
xchg
push
es
movsl
sub
sub
je
cmpsl
push
sub
inc
rcrb
mov
push
push
cs
xlat
lret
cmp
popf
inc
xor
std
or
mov
into
ss
test
rol
xlat
mov
cli
adc
push
mov
add
cmp
in
sub
pop
inc
and
lahf
pusha
push
sub
out
icebp
icebp
mov
inc
int3
sub
adc
sub
in
xchg
into
mov
xchg
pop
inc
cmc
aaa
popa
rorb
cmp
and
push
insl
mov
sub
sub
inc
stos
xorl
ret
adc
pop
jmp
insl
xchg
mov
lret
sub
lods
sbb
mov
adc
daa
les
push
movsb
ret
in
xchg
shlb
imull
das
nop
adc
add
mov
push
movsl
jmp
aad
push
popf
push
fdivs
inc
in
lods
and
cs
aad
aad
jecxz,pt
pop
mov
cld
add
mov
pop
dec
in
outsb
sbb
call
push
hlt
xor
js
les
sub
cld
clc
sbb
mov
daa
pop
jnp
add
push
or
push
inc
cli
pop
push
and
ficoms
fldenv
jp
inc
cmp
out
mov
shrb
paddq
imulb
pop
dec
cld
dec
and
push
rolb
shrl
sub
and
dec
test
faddp
inc
cmp
mov
adc
mov
xchg
pop
inc
shrb
xor
push
fstps
cli
loop
jno
cmp
rolb
shl
sbb
lcall
pop
ljmpw
aaa
push
repnz
sbb
fcoml
mov
ss
jno
pop
pop
nop
testb
pop
mov
cmc
xchg
and
inc
sbb
sub
pop
nop
sbb
jnp
ret
mov
pop
out
or
mov
sub
arpl
lods
leave
cmp
ud0
adc
xchg
or
jmp
dec
fwait
mov
ret
and
lret
sbb
xchg
jb
xorl
mov
push
lods
mov
mov
jle
fwait
movsl
xchg
pusha
insb
out
cmp
push
daa
mov
push
pop
enter
pop
jmp
stos
dec
cld
push
out
popaw
mov
dec
mov
xchg
xchg
outsb
mov
inc
sbb
dec
in
push
push
pop
or
pop
mov
push
dec
es
sbb
test
mov
popa
pop
mov
cmc
inc
sbb
lea
sbb
pop
cmpsb
pop
adc
outsl
jg
jle
xchg
rcrl
xorl
jae
enter
pop
decb
or
cwtl
scas
inc
cmpsl
mov
testb
fidivrs
adc
shlb
sub
imul
icebp
push
cwtl
xchg
daa
sub
push
popf
sbb
xor
add
mov
test
pop
sti
xchg
push
mov
mov
adc
arpl
sub
adc
xor
out
std
mov
lock
sub
push
mov
jae
mov
cld
lock
and
sbb
mov
fdivrp
dec
int3
sbb
inc
out
cmc
xor
dec
addl
into
cmp
mov
jmp
bnd
fistps
pop
sub
mov
aaa
cmp
sub
xchg
cli
pop
mov
in
ss
movsl
data16
mov
cmp
pop
dec
mov
sub
imul
ss
faddl
test
push
subb
in
or
mov
jb
adc
jnp
sub
insl
mov
imul
in
jnp
xchg
in
mov
add
dec
xlat
jl
adc
xchg
sti
push
inc
pop
mov
clc
sbb
adc
lods
or
ljmp
mov
enter
scas
shrl
loopne
lret
jmp
jl
mov
insl
add
test
into
lahf
into
sbb
ret
jmp
sbb
mov
add
xchg
das
sub
and
cmpsl
cmp
dec
fimull
mov
xlat
jecxz
or
je
and
or
loopne
sbb
sbb
mov
cmc
mov
sbb
ss
movsl
in
or
inc
insb
imul
call
outsl
push
sbb
jo
bound
aam
insl
inc
push
fidivrs
inc
sub
lods
scas
movsb
lret
fsubrp
leave
jo
xor
mov
fcomp
push
hlt
das
lahf
mov
push
out
clc
sbbb
gs
dec
inc
sarl
xchg
pop
dec
loop
in
outsl
adc
out
fadd
mov
ret
lret
sub
mov
icebp
cmp
out
testb
xchg
mov
clc
jbe
pop
mov
adcb
pop
in
sub
leave
mov
addl
mov
inc
mov
jo
dec
pushf
inc
shr
pop
jne
push
add
iret
jmp
add
inc
pop
repz
in
dec
aam
mov
mov
mov
mov
loopne
fcomps
lcall
push
xor
or
add
movsb
fcoml
jo
or
xor
push
nop
insl
inc
sub
cs
rcll
icebp
mov
ds
add
cld
pop
sbb
push
rcrb
ja
mov
adc
cmp
andb
roll
stc
stc
pop
bound
push
inc
ret
int
dec
push
xchg
fcoml
mul
arpl
cwtl
xchg
out
movsb
jecxz
adc
mov
clc
mov
mov
arpl
movl
call
notb
xor
imul
cmp
xchg
in
dec
jbe
dec
push
adc
int
xchg
es
and
mov
mov
and
js
inc
inc
add
mov
out
mov
rol
in
xchg
jmp
gs
mov
and
int
insl
ss
xor
cmc
sub
mov
jns
fs
repnz
test
sar
xor
add
aas
cmp
out
push
cld
int3
cli
sbb
mov
stc
inc
sbb
mov
shll
cmpsl
push
mov
jbe
or
jae
xchg
inc
cmp
jbe
xchg
pop
aam
inc
mov
das
daa
xchg
lock
jo
push
push
das
inc
rcl
pop
sbb
sub
pop
data16
sub
add
mov
cmp
imul
mov
dec
jl
aam
add
jg
sbb
test
test
and
sbb
push
add
xor
ljmp
xchg
push
push
push
fimuls
push
xchg
xchg
sub
add
nop
bound
push
pop
inc
push
mov
ret
movsl
pushf
popa
cmp
aad
adc
add
mov
push
sbb
cmp
mov
sub
xchg
stos
mov
lcall
iret
insb
xchg
sbb
test
dec
sub
mov
nop
cmc
add
xor
loopne
push
mov
pop
lds
ficomps
int
cmpsb
push
xor
repnz
inc
xor
das
inc
mov
jno
shlb
lods
cld
in
mov
pop
addb
mov
stc
mov
lods
sub
push
jl
sahf
dec
xor
jnp
cmp
in
sbb
push
fimuls
cmp
sti
aad
insb
ds
jp
std
mov
cmp
mov
jne
clc
aaa
push
mov
add
aaa
stos
mov
cmc
pop
lret
loope
cli
push
in
aad
adc
movsl
lods
idivb
cmpl
test
cmp
pop
or
shlb
and
imul
insl
cld
fsub
xchg
or
inc
test
in
dec
push
sbbl
insb
popa
mov
daa
push
jle
in
xchg
cmp
push
in
sbb
mov
sub
inc
stc
in
lods
ja
push
movsb
es
fbld
mov
push
or
xchg
mov
pop
jge
aaa
int3
rclb
test
pop
mov
push
mov
cmp
cmpsl
mov
call
pusha
cli
pop
out
xor
cmp
pop
xchg
inc
inc
sbb
mov
ds
inc
mov
in
add
ret
push
inc
add
loop
xor
jo
scas
xorb
mov
fld
mov
call
outsl
cmp
int
scas
aaa
mov
fwait
std
out
out
imul
lret
sbb
fwait
ljmp
in
pusha
frstpm(287
adc
or
dec
faddl
sub
lret
call
jg
cmpsb
push
test
fwait
adc
jle
dec
xor
dec
push
inc
xchg
mov
mov
adc
aas
add
mov
ret
rclb
icebp
pop
loope
and
pop
cwtl
hlt
xchg
and
sub
pop
push
mov
iret
add
xor
pop
cltd
stc
xchg
and
lahf
fmuls
addr16
int
jecxz
push
adc
inc
xor
lock
pop
rolb
add
cmpsl
sbb
mov
fisttpl
and
inc
push
adcb
mov
mov
mov
sub
jge
jecxz
sahf
and
psrld
pavgw
xchg
cmp
jae
test
in
aas
pop
inc
ss
lahf
xchg
jle
or
adc
xor
sti
roll
push
jp
lret
inc
cwtl
jg
xor
pushf
jl
lret
sbb
adc
cmpsb
xchg
sub
je
lock
cmp
sbb
ljmp
mov
push
test
or
mov
testl
add
mov
es
icebp
les
dec
inc
mov
mov
cmp
pop
shrl
mov
jmp
dec
lds
sbb
mov
jno
loope
adc
jae
stos
lods
int3
push
aad
cmp
aaa
mov
shr
and
stos
test
repz
je
or
or
sbb
call
fsubrp
jne
and
scas
test
xchg
jmp
roll
jno
sub
jl
and
dec
ss
mov
cmp
imul
dec
out
aaa
in
jbe
cli
outsl
out
mov
push
lods
fwait
adc
sbb
push
mov
or
out
adc
jo
rclb
cmpsl
pop
sub
push
leave
push
mov
aam
rcll
fbstp
mov
push
jle
scas
mov
pop
cmp
shlb
cmp
jnp
dec
cltd
idivb
dec
testb
pop
xor
int3
inc
inc
rcll
repz
scas
xor
aaa
sub
mov
mov
xor
mov
mov
out
aas
and
or
call
xorl
iret
push
xor
cmc
mov
test
rcrl
jmp
ret
jbe
loope
or
inc
loop
loope
pop
imul
test
or
xor
movsb
icebp
mov
loopne
cmp
xor
int3
jae
ret
sub
adc
jne
in
popf
sub
jns
sarl
dec
pushf
dec
hlt
or
inc
sti
iret
jl
jb
cmpsb
jp
fdivrp
arpl
call
mov
xor
out
ss
shlb
ficomps
and
dec
adc
dec
cmp
mov
xchg
jge
xor
aad
pop
sahf
jg
aaa
ficoml
test
popa
imul
adc
aad
popa
pusha
inc
mov
test
push
ja
pop
cmp
popa
sbb
js
in
roll
pushf
rcrl
repz
add
sahf
push
inc
sbb
mov
cs
mov
test
call
jns
outsb
inc
sub
xor
or
rcrl
xor
jge
jl
sub
jge
push
scas
fwait
pop
push
cmp
bnd
dec
add
repz
pop
icebp
pop
and
mov
add
mov
ljmp
xchg
pop
mov
and
inc
push
inc
cmp
xor
jecxz
push
lods
push
dec
in
jmp
inc
lahf
mov
sbb
mov
cmc
sarb
pop
loop
data16
fnstsw
popa
in
push
cmp
ret
mov
hlt
xchg
pop
pop
test
ss
sahf
cli
push
hlt
pop
dec
and
in
mov
nop
cmp
js
and
sub
fsubrs
leave
lahf
push
mov
or
mov
sub
xchg
push
dec
xchg
dec
mov
fmuls
sbb
push
inc
and
fisttpll
sbb
call
push
cmp
in
push
mov
inc
jns
add
mov
inc
adc
fmull
adc
jge
or
jecxz
popf
dec
push
cmp
rorl
orl
push
insl
push
int
sbb
loop
jbe
mov
inc
clc
into
mov
xchg
pop
jp
mov
jo
popf
lcall
out
dec
mov
nop
push
and
movsb
ficompl
jae
fisubl
mov
mov
out
cmpsb
jg
xchg
inc
sbb
xchg
inc
test
ret
add
xchg
aam
jge
gs
jle
xchg
jmp
cmp
inc
das
push
or
dec
and
jmp
shll
lods
mov
xchg
addr16
push
jae
sti
pop
xchg
stos
out
fimull
xchg
jnp
inc
sbb
jle
or
dec
cmp
dec
mov
outsb
ds
mov
jno
lahf
inc
mov
or
lods
ret
dec
or
shlb
das
ffreep
js
test
mov
loopne
jae
push
push
xor
mov
fsubrp
xchg
imul
ds
add
sti
fwait
cmpsl
jo
or
ja
aaa
sub
scas
das
outsl
adc
push
jbe
fnstsw
ret
fsubp
jge
jb
jbe
imul
les
out
scas
int
jo
fisttpll
loope
inc
dec
test
jmp
subb
repnz
in
dec
repnz
inc
lds
rorb
inc
lods
sub
or
rorb
mov
out
inc
sub
sbb
xor
xchg
movsb
cmp
jne
cmp
lret
add
test
jmp
cmpsb
fiaddl
pushf
dec
pop
jno
jl
imul
aad
stos
or
test
cmp
mov
jecxz
jl
imul
outsl
mov
push
push
in
push
in
movsl
xchg
aad
mov
dec
xlat
xor
mul
push
cmc
dec
cmpsl
aas
js
shlb
mov
sub
push
shlb
pop
sub
push
mov
out
test
pop
cmp
xlat
sbb
xchg
add
mov
loopne
out
push
cmp
jmp
lret
popf
inc
inc
mov
lods
test
sti
xchg
push
sub
out
outsb
adc
cmc
aaa
dec
sub
push
xlat
jae
je
inc
out
mov
int
imul
cmp
inc
and
xor
icebp
adc
xor
test
push
push
fistpll
int3
cmc
xor
not
mov
xor
lcall
shl
jbe
cmp
outsb
mov
call
or
jno
adc
or
dec
mov
pop
lret
mov
push
leave
lahf
jl
aas
inc
bound
fldt
push
add
outsb
repz
mov
add
loop
jle
shll
inc
mov
fidivrl
fnstcw
sti
aam
inc
inc
cmp
sbb
clc
push
mov
cld
imul
push
test
stos
mov
int3
and
or
jbe
or
sub
sub
cmpsb
mov
mov
pop
xor
cmpb
or
addr16
stc
mov
out
jl
sub
dec
fsubrs
mov
push
hlt
stos
jle
inc
ljmp
jbe
mov
xchg
or
ficoms
lahf
jno
shlb
mov
testb
ret
mov
adc
jns
dec
cmp
mov
xor
push
xor
push
xlat
mov
aaa
addr16
repz
add
pop
pop
es
mov
arpl
sbb
jns
cmp
pop
cli
xchg
xchg
js
fsubrs
and
out
outsl
insb
repz
repnz
jle
es
dec
mov
stos
loopne
fldl
inc
es
sbb
xor
mov
xchg
int
inc
loopne
or
arpl
and
sti
shrb
mov
cmp
sub
mov
xor
mov
cltd
fldt
aaa
js
std
fdivs
mov
inc
into
push
das
ret
or
mov
cmp
xor
cmpsl
xchg
roll
in
xlat
pop
and
repz
inc
push
sub
fidivrl
in
and
jmp
cmp
sub
cmpsb
jge
and
mov
jns
mov
sub
push
and
sbb
mull
dec
dec
std
and
sbb
repz
xor
in
mov
lods
mov
mov
icebp
xchg
or
adc
fwait
adc
sub
xor
ja
xchg
jmp
adc
jecxz
arpl
xor
dec
pop
ret
add
mov
cli
push
xchg
sbb
jl
movsl
mov
mov
mov
sti
cltd
repz
test
es
cmp
fs
adc
int
insl
popf
push
inc
je,pt
cmpsb
inc
rcrb
or
rcl
ror
dec
out
cmc
aam
jae
xchg
sbb
insb
movsl
inc
jl
call
jge
addr16
insl
cmp
dec
sti
std
fmuls
jg
stos
in
xlat
ds
xchg
mov
push
inc
lods
lea
pop
aas
shr
mov
sub
push
je
or
rcrb
mov
pop
jle
repnz
pmulhw
push
mov
xchg
stc
repnz
out
dec
jp
jp
push
jmp
mov
inc
xchg
repnz
sub
jmp
sbb
adc
iret
in
int
xchg
mov
out
cmc
test
push
dec
clc
mov
sahf
scas
jp
inc
jo
push
push
or
imul
xchg
pop
mov
and
push
mov
fwait
and
add
cmpsb
loopne
lret
xor
cltd
xor
add
cwtl
outsb
inc
sub
testl
lds
sub
sbb
xor
sbb
daa
rcll
inc
or
mov
iret
push
or
xor
mov
mov
lods
shr
pop
fildl
imul
cmpsl
jbe
jmp
test
fstl
push
mov
and
or
pop
dec
pop
daa
xchg
fdivs
aaa
ficomps
xchg
mov
jp
shll
mov
stc
cmc
outsl
scas
sar
xchg
movsl
scas
jb
test
cmp
cmp
cld
mov
inc
jmp
cmp
mov
int3
loopne
cli
cmp
ljmp
mov
outsb
and
aad
testl
push
inc
dec
loopnew
movsl
sahf
fnstcw
xor
jns
fimull
jmp
add
add
stos
sub
lods
cmp
arpl
mov
mov
xor
idivl
push
cwtl
xor
inc
add
cltd
imul
rcll
je
cld
roll
cli
lods
call
dec
cld
out
stos
fcomps
and
xor
sbb
insb
xor
faddl
hlt
lds
xchg
leave
adc
in
add
imul
mov
inc
dec
add
pushf
loope
sbbb
pop
je
inc
stc
stos
dec
loope
std
sub
sbb
sbb
jp
mov
int
fldt
push
cli
push
fwait
cmp
into
in
mov
inc
jle
ja
test
mov
xchg
push
insb
insb
fisubrl
cmpsl
out
je
sbb
inc
fdivrl
dec
in
xchg
adc
dec
loop
ret
pop
sub
dec
shlb
std
int
sub
xchg
sbb
icebp
fildll
jle
push
fdivp
dec
imul
xchg
mov
push
mov
ficoms
mov
push
mov
inc
fs
lock
push
out
xor
or
ja
pop
jl
fcmovu
push
or
push
mov
dec
lock
adc
in
sub
push
xchg
mov
sbbb
inc
sti
jo
mov
imul
and
push
iret
das
mov
jl
aam
sbb
and
test
ficompl
jb
sbbl
or
mov
shlb
lods
mov
cmpsl
cli
cmp
xlat
or
sahf
lret
pop
insl
mov
dec
mov
arpl
shll
int3
xor
adc
sbb
cmp
js
ds
sub
push
push
clc
mov
rclb
lods
call
pop
pop
cmp
adc
dec
gs
xchg
push
push
fs
push
sahf
icebp
push
cmp
mov
mov
cmpsb
push
jmp
sbb
pop
adc
imulb
loop
ret
cli
cld
sub
leave
add
ficompl
mov
inc
in
rorl
iret
rorl
cmc
test
es
stos
xor
movsl
mov
inc
sub
cltd
inc
and
outsb
popa
subl
push
inc
push
ret
test
test
lahf
les
mov
adc
mov
xchg
stos
outsl
sti
mov
enter
insb
sbb
push
lock
xchg
std
sub
pushf
xlat
mov
insl
mov
xor
push
mov
pop
xchg
int
jno
xor
movsb
jge
aam
sbb
insb
and
in
lahf
imul
lret
movsb
ficompl
xor
scas
pop
scas
es
mov
mov
es
aaa
sub
mov
fsubrl
ja
std
movsb
ret
lret
xchg
popa
int
lods
sub
popa
jmp
mov
in
xchg
mov
add
jl
sub
and
xchg
iret
inc
orb
stos
cmp
fcomps
imul
aad
push
sub
and
js
dec
ret
mov
outsb
jle
dec
sarb
mov
insb
adc
mov
cmp
int3
and
push
lcall
insl
dec
lcall
cmp
out
or
push
pop
mov
mov
in
sub
fdivrs
hlt
das
fsts
pushf
cmp
sub
lea
and
jl
pop
sbb
popa
adc
cmp
push
cmp
push
mov
outsb
push
ret
popa
add
pushf
lea
mov
xchg
xchg
cmp
push
fst
jge
push
mov
mov
jnp
jne
lds
sbb
into
inc
and
fnstenv
mulb
mov
aad
dec
pop
mov
lea
lods
pop
mov
xchg
mov
mov
lret
jb
js
xlat
mov
sbb
test
rorb
pop
sub
mov
and
xchg
ret
repz
mov
or
pop
add
jle
dec
int3
insl
xchg
push
out
xchg
sti
scas
inc
pop
call
popf
fdivrs
rorl
jmp
ds
adc
add
pop
mov
lock
fiaddl
jne,pn
arpl
fnsave
xor
fcoml
mov
ret
cmp
inc
push
mov
mov
out
mov
adc
dec
popf
in
shrl
scas
mov
sub
rcrb
xchg
fsubrs
sbb
or
pop
shll
sub
loope
push
pop
jecxz
sub
or
or
sbb
dec
ret
jno
lahf
push
sbb
pop
sub
or
gs
repnz
int
dec
aas
std
ljmp
jnp
inc
loope
mov
jno
push
repz
mov
std
movsb
jbe
cmc
and
add
mov
mov
cmp
es
aas
jo
ret
data16
ret
mov
addr16
inc
inc
aam
aaa
sbb
insb
loopne
call
xor
aaa
xor
repnz
enter
shl
movd
mov
dec
js
pop
or
ja
pop
push
or
divl
leave
pop
or
cmp
adc
jno
and
inc
shrl
ss
jo
mov
hlt
rorb
mov
mov
sub
pop
aaa
add
xchg
pop
inc
scas
pusha
pop
sbb
mov
dec
mov
rcl
scas
sub
sarl
sarb
ficoml
jge,pn
jne
mov
in
pushf
or
xor
cmpb
xor
outsb
xorl
shlb
mov
movsl
mov
push
cwtl
or
xchg
mov
adc
adc
mov
in
repnz
pop
jp
adc
jne
jbe
sub
in
xor
arpl
mov
jle
data16
fsubs
push
sbb
lret
cwtl
dec
bound
xchg
cmp
or
je
ret
add
push
mov
adc
xor
and
mov
loopne
jne
rcrb
out
cmp
bound
fs
xchg
data16
mov
lea
loopne
ds
aad
fildll
out
mov
fcmovnu
divl
xor
insl
xchg
mov
xor
jmp
push
jns
fldenv
leave
std
cld
and
pop
nop
push
stos
mov
xchg
cmpsl
mov
sbb
jo
in
and
xor
push
scas
repz
pop
xor
add
xchg
mov
cmc
movsb
push
rcr
das
adc
fs
pop
movsl
jo
dec
mov
push
sub
jb
mov
xor
call
pop
adc
ss
stos
sub
and
xorl
and
pop
icebp
add
push
icebp
and
xchg
lret
das
cmp
inc
add
fwait
dec
sbb
insb
int
cmpsb
ja
dec
adc
scas
inc
mov
mov
dec
shrl
sti
xor
aas
ds
ret
xchg
dec
mov
nop
or
cmp
ja
test
sbb
cwtl
mov
mov
in
pop
in
ret
in
and
lods
adc
xchg
subb
pop
movsb
popa
sub
xchg
sub
lcall
pop
imul
in
stc
in
fucomi
xlat
adc
sbb
and
cli
js
xor
stos
leave
repnz
shll
rol
mov
test
push
int
sahf
cld
dec
push
jmp
jno
outsb
xor
mov
sub
int
jp
stos
lahf
sbb
hlt
sbb
jo
jbe
dec
and
mov
iret
inc
repz
inc
cmpsb
loopne
aas
dec
xchg
adc
pop
in
fistl
xchg
subb
daa
jne
imul
mov
cmp
dec
out
push
test
mov
mov
out
and
cli
inc
stos
jge
xor
jnp
out
fucomip
orb
push
sub
popf
jne
xor
mov
icebp
lods
in
add
gs
push
mov
out
stc
and
call
addl
loop
aad
cmp
lds
mov
pop
pop
enter
xchg
push
mov
mov
pop
adc
jae
xchg
sahf
test
sub
cld
fadds
jne
bound
roll
outsl
mov
add
fcmovnbe
mov
mov
or
fmull
jne
dec
movsl
jmp
adcl
jb
std
or
setbe
test
xchg
xchg
fcomip
xchg
ret
fdivrp
pop
cmpsl
fstl
cli
loop
es
mov
sbb
pop
loop
dec
gs
jo
inc
pop
addb
jle
jl
pop
scas
fidivrs
int
and
sub
inc
xchg
sub
and
mov
inc
sbb
cmpsl
int3
sub
pop
ret
sbb
sub
push
sbb
sbb
shrl
xchg
test
or
cmp
xor
jecxz
mov
jl
cmpsb
pop
test
xchg
add
push
add
scas
js
and
lret
ss
jae
das
faddp
lea
fdivl
adc
inc
inc
aam
dec
sbb
xchg
kunpckbw
imul
sahf
std
std
jge
movsl
idivb
sahf
sub
or
add
or
xchg
lcall
test
or
jbe
pop
push
movsb
inc
pop
jae
jg
dec
cli
add
std
ficoml
mov
jle
or
sarb
and
push
mov
adc
xlat
outsb
add
adc
shl
addr16
inc
cmpsb
ret
mov
lret
outsl
and
aam
or
xor
aas
mov
lcall
jne
jno
or
sub
leave
push
ret
add
pop
sbb
stc
pop
hlt
outsl
or
int3
xor
loopne
clc
iret
pusha
pop
fnstsw
out
mov
jae
sahf
mov
inc
shlb
mov
sbb
cmpsb
sbb
loopne
pop
mov
push
or
or
cltd
add
add
idivl
xchg
cmc
xchg
aam
sub
push
xlat
add
xchg
ret
dec
jae
inc
adc
pop
cmp
add
pop
xor
nop
loopne
jecxz
daa
lret
lcall
rorb
outsl
lods
popf
shrb
aas
mov
pop
mov
push
data16
mov
stos
aas
lcall
and
mov
xlat
ja
push
cltd
pop
mov
mov
cld
test
fisubl
dec
cmp
fnstenv
dec
out
or
int3
stos
mov
mov
stos
xchg
repnz
sub
cmpsb
leave
pop
inc
ljmp
xchg
neg
aad
mov
sub
jg
sar
push
inc
sbb
push
mov
and
xor
clc
xchg
jno
rol
and
add
fcompl
add
pop
pop
or
jno
sub
fiadds
push
aas
dec
test
or
or
movb
push
scas
cld
int
sub
repz
aaa
sarb
shr
jo
add
and
sahf
aad
push
std
pop
lds
sub
aam
loope
hlt
sub
sub
inc
add
rorl
repz
xor
adc
fs
inc
xor
push
sbb
mov
cs
pushf
outsl
les
stos
adc
push
push
lods
add
and
add
mov
dec
mov
insl
stos
es
cwtl
sbb
fwait
ja
add
nop
sarl
xchg
push
shlb
sub
sub
cltd
cld
or
dec
stos
mov
imul
sarb
dec
loop
std
int3
cs
pop
or
push
outsb
dec
out
scas
js
pop
jb
shr
loope
pop
pop
mov
call
mov
lret
data16
addl
sub
lea
insb
add
clc
fsts
nop
insb
adc
jnp
and
mov
cmpsb
dec
clc
lret
mov
popf
rorb
in
fs
orb
fxch
test
lahf
mov
sahf
ljmp
jnp
dec
mov
push
loop
jnp
push
and
dec
adc
imul
fnstenv
fildl
inc
adc
xor
push
mov
xchg
nop
xchg
xchg
push
lea
xlat
xlat
sub
pop
je
outsl
xor
fldt
adc
inc
enter
xchg
lods
mov
pop
in
mov
fs
xchg
xor
and
mov
pop
movsl
add
push
shlb
inc
lret
bound
mov
nop
inc
cmp
cmpsl
jmp
fmul
inc
std
je
add
or
int3
js
insl
jno
add
mov
sub
outsl
js
cmp
cmp
insl
rcrl
and
xor
mov
cli
fsubr
mov
or
movsb
sbb
das
ret
movsb
inc
mov
scas
shrl
mov
jae
loopne
in
pop
or
dec
inc
mov
sbb
imul
sub
xchg
lret
lock
jne
mov
sbb
mov
cmc
sbb
mov
loopne
enter
jbe
gs
pop
das
daa
mov
or
xlat
rolb
lret
push
pusha
test
mov
push
sahf
das
push
mov
mov
cmp
sub
stos
adcl
pop
addr16
xchg
mov
xchg
or
jmp
inc
fcoml
or
cmpsl
int
js
mov
loope
jle
loope
xor
xor
mov
outsb
inc
xorb
cltd
and
inc
aad
out
cli
das
cmp
xor
lds
jp
stc
jmp
lcall
cmpl
sub
loope
push
xlat
enter
jmp
adc
adc
jg
gs
sbb
rclb
sbb
repnz
test
out
dec
insb
adc
cmp
pop
inc
mov
out
sarb
and
test
dec
xchg
push
xor
sbb
in
add
jae
shr
jg
pop
adc
pop
test
push
sbb
mov
mov
pop
push
xchg
sub
fs
and
mov
movsb
xlat
inc
push
sbb
mov
jmp
or
rolb
adc
jg
mov
mov
inc
mov
imul
push
iret
mov
or
lods
loopne
lahf
scas
or
xchg
daa
cmp
pop
cli
out
and
fs
mov
cmp
pop
pop
stos
imul
js
pop
arpl
cmpsl
sub
out
in
and
iret
mov
and
jp
mov
dec
fdivrl
cmpsb
movsl
jnp
pusha
xchg
sbb
sub
leave
sahf
or
repnz
jns
jae
xchg
ja
mov
aas
test
xchg
pop
jge
mov
or
shl
adc
jbe
xchg
push
nop
fwait
jl
bound
add
push
or
ds
mov
int3
jle
dec
pop
es
in
push
mov
shl
and
push
imul
leave
mov
movsb
aam
mov
stos
or
mov
push
cwtl
xchg
mov
in
pop
jbe
sbb
jge
xchg
xchg
fs
sub
movsl
mov
outsb
sub
inc
imul
jmp
enter
pop
jge
cmp
dec
in
jmp
fimuls
lret
push
adc
inc
cltd
fwait
sub
cltd
cld
mov
std
cwtl
push
fwait
or
pop
inc
repz
cli
sbb
sbb
subb
mov
inc
mov
fcmovnu
sub
aas
pushf
and
dec
jne
xchg
fidivrs
pushf
xchg
std
sbb
enter
jne
sarb
cmp
xor
loopne
js
xchg
pop
fisttpl
in
dec
or
out
sub
test
daa
incb
dec
ret
add
mov
stos
mov
mov
mov
mov
sahf
mov
daa
mov
sbb
inc
outsb
sub
adc
sbb
ss
cmp
adc
mov
jge
lea
cmp
or
xchg
jo,pt
sti
imul
xchg
pop
out
daa
aaa
popa
insb
icebp
pop
out
xchg
inc
add
shl
mov
loope
loopne
dec
or
lock
aam
or
adc
xchg
inc
xor
xchg
lret
les
push
ror
or
add
lahf
mov
xor
or
jo
mov
mov
mov
add
mov
je
loop
fs
jp
das
outsb
in
mov
clc
xlat
movsb
inc
aaa
lds
and
pop
fisttpl
adc
shll
sbbl
outsl
push
cmp
mov
popa
jne
loope
test
incb
push
xor
pop
repnz
push
sub
cmp
mov
xor
enter
jecxz
lock
mov
test
or
divl
es
adc
mov
test
cmp
leave
lahf
movhps
xchg
addr16
push
test
js
lcall
iret
dec
add
lahf
sbb
jb
mov
add
scas
dec
inc
dec
mul
pop
cmp
jmp
mov
bound
movsl
rcrb
cmp
inc
mov
cmp
inc
mov
not
ret
lahf
add
cmp
aas
repz
fisttpll
mov
mov
adc
int
fmuls
aad
push
or
cmp
je
jb
ja
call
and
push
jo
testl
jns
adc
subb
xchg
rorb
mov
jp
test
dec
ds
sub
xchg
cmp
mov
jae
adc
enter
out
inc
push
adc
sbb
je
pop
cmc
aad
addr16
loopne
test
push
jg
jmp
jl
mov
cmc
pop
fcompl
loopne
aam
jg
pop
xor
popa
jb
xor
pop
mov
xchg
fstps
ljmp
mov
xchg
fwait
ja
in
and
sbb
push
add
mov
loop
sub
mov
repnz
inc
dec
aam
stc
sub
mov
movsl
cmp
aad
push
jle
jg
mov
lods
jno
xchg
je
mov
or
in
inc
add
mov
mov
add
loope
mov
in
mov
int3
div
loopne
push
xchg
fs
pop
and
in
aaa
lea
dec
and
scas
dec
sub
out
mov
sub
or
jp
jg
dec
push
fcmovnb
jmp
mov
shll
and
push
push
push
xchg
movb
out
xlat
fimuls
repz
or
add
mov
jbe
mov
push
pop
xor
in
add
movsl
outsb
loope
sub
rclb
aaa
imull
jns
pushf
fwait
sahf
vpunpcklqdq
sub
inc
movsl
sub
inc
jne
adc
mov
mov
xor
xor
mov
das
test
xchg
mov
mov
aaa
push
push
add
mov
data16
sub
gs
push
mov
or
adc
lods
mov
xor
or
iret
xor
mov
add
ror
cmp
in
inc
testb
cmpb
movsl
inc
insb
mov
xor
insb
cmp
cwtl
arpl
int3
cmpsb
fdivr
movsl
das
popf
jl
adc
lods
addl
leave
jecxz
xchg
mov
lods
or
lods
jge
and
and
mov
popl
cmp
fcomi
mov
adc
cmpsl
ljmp
or
ds
int
flds
ss
stc
loop
movsl
nop
mov
inc
add
jp
jge
cwtl
mov
adc
cltd
xor
scas
imul
pop
in
test
sti
lds
adc
jb
and
jmp
inc
repz
or
scas
push
mov
xchg
xchg
mov
mov
ss
cmp
adc
cmp
add
ss
jb
gs
das
xlat
popa
sub
jle
inc
pusha
dec
or
loope
and
outsb
mov
test
lret
jbe
out
test
sub
mov
push
xor
push
mov
sub
stos
movsl
sub
arpl
push
pop
int
andl
sbb
mov
cltd
outsl
sbb
shrb
sarl
mov
shl
and
add
sub
adc
fdivrp
push
shufps
rolb
test
adc
sahf
pusha
or
dec
fucom
test
in
out
ret
push
jge
fbstp
push
in
cs
inc
das
arpl
jl
iret
loope
movsl
and
ret
lcall
push
jp
fadd
lock
mov
fwait
sbb
inc
sbb
sbb
lods
add
xor
lret
mov
pop
iret
jo
mov
and
jg
movsl
or
stos
push
inc
push
jne
js
xchg
or
cwtl
shrl
inc
cltd
and
inc
cwtl
movsl
and
dec
push
bnd
dec
pusha
ret
aas
jo
shll
inc
jl
dec
dec
inc
mov
sbb
loop
xchg
inc
or
cmp
mov
mov
sti
daa
and
ret
imul
inc
adc
adc
sti
repnz
cmpsl
push
inc
lcall
push
lock
loope
mov
loop
test
xchg
adc
xor
repnz
pushf
js
pop
std
xor
movsl
idivl
aad
fidivs
push
jle
push
iret
lods
stos
inc
clc
inc
fs
test
sbb
sub
repz
mov
xchg
pop
loope
push
mov
adc
popf
insl
jecxz
in
and
test
mov
mov
inc
lret
shll
xchg
movsl
lahf
push
xchg
xchg
jno
imul
into
sbb
mov
ss
bound
add
add
pop
mov
cmc
ret
push
push
xor
popa
mov
shrb
andl
xor
push
arpl
test
push
movsb
in
inc
arpl
jp
icebp
add
insb
lods
add
push
pop
icebp
aaa
inc
jb
mov
mov
inc
test
dec
dec
lret
mov
lods
scas
xchg
mov
out
cmp
int3
adc
bound
jns
pop
mov
pop
adc
clc
imul
ljmp
push
lods
add
sahf
sbb
je
shll
add
dec
dec
sahf
ds
lea
ljmp
filds
out
inc
sbb
call
and
pop
jns
test
jmp
mov
push
and
movsl
int
movzwl
sbb
sub
push
and
mov
push
xor
mov
cmp
rcll
adc
dec
xor
loope
arpl
mov
mov
ja
pop
pop
add
add
inc
lret
fisubrs
js
notl
in
sahf
or
jecxz
enter
xchg
pop
and
je
aas
sbb
fistl
outsl
fistpll
fistl
ffreep
ljmp
inc
cmpsl
mov
sbb
sub
repnz
adcl
jecxz
sub
and
and
gs
arpl
fadds
inc
pop
fcomps
fldl
lret
lret
push
cltd
xchg
test
mov
jns
lahf
push
ret
inc
mov
pop
es
xor
dec
mov
or
push
cmpb
add
jle
xor
rorb
jnp
lahf
mov
sti
mov
jl
mov
out
hlt
out
mov
repnz
adc
jmp
mov
sub
lcall
jne
inc
jno
sbb
mov
sub
in
jne
test
inc
adc
daa
out
add
mov
add
or
icebp
cbtw
leave
nop
xchg
imul
scas
xor
mov
xchg
js
mov
push
sbb
pushf
and
sbb
dec
adc
loopne
or
push
inc
out
push
sub
sub
or
sbb
sub
pop
sub
fcompl
out
insb
dec
out
dec
pop
sub
int3
int
lss
mov
or
xchg
mov
pop
rcrb
jle
or
les
stos
cwtl
sbb
lods
dec
lods
push
je
les
xor
out
dec
cmp
xor
fs
sbb
stos
js
fldenv
xor
jno
cmp
adc
push
xor
add
dec
lcall
ljmp
adc
test
inc
cmc
mov
xor
ret
fisubrl
pop
jae
leave
repz
movsl
adc
cli
fsub
sbb
jnp
cmpb
push
in
div
or
out
test
loop
inc
pop
sub
inc
fisttpll
push
filds
pop
mov
jge
sbbb
ss
mov
rep
cmp
or
fwait
inc
in
nop
pushf
lcall
sub
cmpsb
mov
std
pop
cmp
mov
mov
nop
xchg
sub
add
push
addb
jno
dec
popa
and
sarb
sbb
das
fnstcw
stos
cwtl
and
mov
dec
cmc
push
les
mov
and
rcl
lods
jmp
js
inc
and
add
pushf
xchg
cmp
sbb
fsub
mov
mov
and
xor
lods
jae
xor
daa
xchg
inc
les
iret
and
adc
cmp
pop
mov
or
pushf
mov
sbb
imul
sarl
pusha
sahf
lahf
pop
sub
push
shll
mov
bound
pop
mov
and
sub
pop
out
push
scas
xchg
test
hlt
xor
imul
movsl
in
push
sub
adc
inc
daa
lret
add
sub
cld
loopne
jo
pop
pop
imul
sbb
hlt
negl
jge
push
pop
out
lcall
aaa
loopne
lods
cmp
jl
loopne
xchg
fnstenv
loop
lods
pop
inc
jo
add
xchg
cmp
cmc
into
mov
stc
ja
subb
movsb
les
stos
clc
sub
leave
in
lods
ret
hlt
jns
cmp
ret
adcb
popf
test
xchg
and
test
outsb
loope
inc
rorb
cmp
mov
in
pop
adc
jno
js
mov
lcall
scas
jp
jae
adc
stos
stos
mov
movsl
in
es
aad
imul
mov
scas
ss
lret
nop
into
clc
addr16
add
shrb
ljmp
addr16
cmp
cmpsl
mov
jae
call
icebp
les
jp
mov
and
shll
mov
lock
fistpl
and
sbb
daa
inc
fnstsw
imul
jmp
test
jnp
pop
insl
daa
mov
mov
pop
aas
mov
sub
fidivrl
cmc
out
pop
push
imul
pop
inc
js
data16
outsb
addr16
int
mul
arpl
mov
movl
jbe
aaa
popf
ret
push
push
cmp
shlb
adc
inc
add
lods
cmpsl
inc
mov
push
add
pop
test
jmp
sti
xchg
mov
orb
test
mov
test
cmp
aas
mov
cmpb
push
pop
loopne
imul
xor
aam
fldcw
jge
pop
rclb
inc
push
shlb
fisubs
scas
push
shlb
call
push
daa
mov
pop
jmp
leave
adc
arpl
pop
jp
ljmp
stos
mov
inc
pop
test
push
cmpsb
inc
cld
jl
aaa
cmpsl
jmp
inc
jno
xchg
adc
fs
mov
ror
icebp
test
lcall
xchg
and
stc
mov
and
int
sbb
xor
rolb
cs
mov
mov
mull
in
mov
clc
pop
mov
sub
ljmp
pop
icebp
outsl
jne
sub
int
out
xchg
sbbb
movsl
cmp
cmpsb
mov
mov
xchg
jl
sub
outsb
je
sbb
ret
cmp
mov
sbb
sahf
jp
push
and
add
stos
jp
call
adcl
xchg
ds
or
ret
ja
pushf
pop
inc
pop
adc
pop
dec
adc
in
rcrl
fs
add
xchg
lahf
lret
adc
out
dec
pop
out
xor
push
in
jo
inc
push
enter
inc
out
sbb
pop
mov
add
cltd
add
das
mov
cmp
int3
pop
clc
pop
fldl
or
sbbb
negb
jbe
pop
jns
push
loopne
jmp
xchg
sahf
pop
int3
mov
adc
add
sbb
cmp
mov
popl
inc
adc
push
or
into
mov
dec
rcrl
mov
sbb
pushf
inc
pop
jne
cmpl
outsb
sub
into
add
sarl
popa
fwait
mov
std
sub
sub
jb
xchg
loop
daa
mov
add
jae
mov
ret
cs
pop
mov
add
or
cld
adc
dec
push
flds
lret
cltd
lea
pop
adc
pop
insb
leave
sbbl
mov
xor
insl
scas
add
push
sbb
mov
push
enter
or
lea
sub
sub
jg
sahf
out
cmp
mov
and
clc
je
ljmp
push
mov
push
aad
lods
vcvtdq2ps
sub
cmp
hlt
sbb
fisubs
in
xchg
cli
hlt
test
lcall
jg
pop
lret
pop
out
jo
mov
std
jno
and
in
inc
jl
adcl
mov
mov
inc
cwtl
lods
and
hlt
inc
sbb
and
inc
lea
cmpsl
data16
push
and
lods
fucom
pop
or
xchg
jg
mov
inc
xorl
mov
push
out
jp
sub
sub
push
stos
inc
adc
mov
mov
pop
loope
aaa
cltd
add
enter
xor
cmc
daa
in
xchg
rorl
mov
mov
and
inc
arpl
rolb
in
lods
fistl
popf
or
push
push
inc
sti
js
add
rorb
mov
mov
adc
sbbb
sbb
jmp
mov
repz
mov
fiaddl
fucomp
leave
jmp
jbe
mov
sti
lods
or
xor
push
leave
and
sbb
je
adc
movsl
push
jns
psubusw
sbb
cli
mov
daa
jge
rolb
pop
ljmp
add
xchg
add
xchg
into
outsl
dec
aam
sarb
ret
rorb
fwait
push
out
outsb
mov
mov
fisubrl
and
ja
ret
xlat
adc
pop
adcb
andl
sarl
mov
jl
nop
jb
mov
pop
leave
pop
push
sbb
xchg
sbbb
mov
mov
negb
dec
loope
push
iret
xor
jmp
das
adc
les
mov
mov
je
inc
int
in
inc
jge
xchg
push
adc
imul
mov
es
jmp
inc
sti
mov
andb
pop
fwait
in
inc
push
push
lcall
dec
cmp
enter
out
mov
add
push
loope
hlt
mov
mov
push
int
xchg
jg
data16
mov
repz
pop
out
jmp
mov
xor
jae
or
out
sbb
pop
pop
test
push
inc
adc
in
adc
movsw
sub
out
bound
lcall
cmp
jmp
in
lcall
push
stos
in
ja
jno
hlt
add
xchg
xchg
testb
xor
arpl
mov
setno
aam
push
push
mov
sub
test
push
outsl
pop
sbb
pop
lock
mov
loope
xor
or
pop
pushl
in
test
push
ret
mov
mov
hlt
jnp
inc
sahf
shll
sbb
dec
aas
xchg
mov
in
sub
test
xor
pop
xor
push
push
sti
adc
jo
pop
stos
dec
movsl
or
repz
mov
pop
imul
mov
adc
sbb
xor
mov
push
sbb
dec
mov
ficoml
addb
imul
ret
ret
sub
dec
aam
adc
test
dec
test
add
movq
sub
or
inc
outsl
lcall
xchg
lods
scas
mov
xor
fcomip
mov
test
mov
aas
mov
push
adc
std
jnp
fs
mov
fdiv
and
cmp
or
rcrb
imul
pop
mov
adc
push
jb
movsl
and
inc
fcomps
push
push
aas
and
lahf
sti
pusha
int3
mov
mov
or
pop
into
jmp
inc
lcall
add
sti
pop
aam
dec
jmp
imul
shll
nop
pop
leave
jb
xchg
ret
cs
mov
inc
bound
dec
std
mov
jb
push
pop
aas
cmp
clc
adc
pop
rcll
shrl
movsb
jmp
push
adc
jns
icebp
fs
not
mov
jno
ss
lds
dec
adc
pop
mov
sbb
mov
sub
mov
mov
mov
popaw
xor
or
jne
jbe
lahf
xor
loop
movsb
adc
cs
dec
cmp
jge
mov
inc
mov
jns
rorb
leave
loope
bound
cmp
and
repz
jo
dec
jae
inc
jmp
pop
std
pushf
scas
lods
push
ss
rclb
or
sub
mov
xchg
stos
xchg
hlt
sbb
out
nop
cwtl
add
mov
stos
stc
and
enter
call
sarl
repz
psubb
adc
loop
add
xchg
inc
jno
inc
notb
out
cwtl
mov
push
sub
imul
aaa
xchg
filds
add
out
insb
test
inc
out
pop
push
fisttpl
mov
fildl
aam
lahf
js
loope
ss
iret
xchg
std
adc
adc
push
mov
testb
imulb
repz
scas
stc
pop
or
or
aas
stc
xlat
sub
out
leave
inc
in
inc
push
mov
in
add
mov
in
inc
mov
out
fs
in
mov
jle
popf
fimuls
rclb
bound
popf
and
pop
adc
mov
jnp
bound
inc
movsl
pop
shll
pop
mov
mov
cmp
in
imul
sbb
jp
es
add
icebp
inc
pop
pop
idivb
mov
test
xor
hlt
xchg
dec
mov
stos
shlb
sub
lret
mov
movsb
inc
pushf
sbb
daa
cmp
add
out
push
rep
cmpsl
sub
scas
jecxz
dec
cmp
mov
rclb
out
jb
push
es
out
scas
add
je
jle
sbb
sahf
mov
mov
stos
add
arpl
test
xor
rcrb
and
dec
out
push
mov
xorl
bound
jno
fistpll
and
mov
push
jle
sbb
stos
mov
int
lahf
jb
pop
test
dec
jge
enter
clc
data16
push
sar
lret
out
push
push
adc
movsb
and
and
sbb
lods
cmpb
pop
test
lahf
xchg
cltd
dec
in
cmpb
inc
dec
out
push
push
dec
xor
sarl
xor
sarb
push
add
xor
push
or
jmp
mov
cmp
add
lock
xchg
mov
fwait
jge
test
mov
rorl
adc
mov
sub
popf
rclb
mov
push
jmp
push
and
insb
mov
jecxz
pop
dec
inc
test
push
fldenv
div
fyl2xp1
dec
or
lret
data16
sub
in
icebp
adc
and
iret
mov
jg
jbe
mov
mov
ret
inc
paddw
sbb
sub
jmp
and
adc
mov
cmp
loopne
nop
lahf
lahf
mov
lea
roll
mov
cwtl
rolb
xor
or
jge
add
or
enter
repnz
fldcw
mov
mov
sbb
repnz
pop
in
adc
jno
repnz
mov
scas
sti
or
sbb
mov
insl
mul
cmp
pop
sub
mov
cmp
hlt
imul
insb
aaa
xchg
inc
in
xchg
pop
rcr
addr16
popa
pop
idivb
lods
lret
mov
jmp
fs
or
pop
les
dec
push
imul
sbb
pusha
fistpl
add
push
dec
cmp
pop
lock
inc
ljmp
aam
insb
jp
rcrl
cmpsl
inc
jno
fsubrs
xchg
nop
nopl
mov
cwtl
sub
data16
movsl
insb
inc
int3
outsl
fldenv
in
push
clc
stc
cmp
pop
ror
and
and
and
mov
addr16
out
cmp
push
mov
movsl
xchg
fsubl
cmp
sub
push
fdivrl
dec
cli
test
lcall
cmp
movsl
repnz
jg
inc
les
mov
jbe
cs
std
jnp
dec
jnp
sbb
jb
jae
imul
cmpsl
lock
into
mov
pop
jo
loopne
in
aaa
lret
and
xor
loop
fisttpl
adc
iret
push
cltd
cmp
mov
pop
les
fwait
xor
lret
mov
insb
mov
xor
cmp
add
sub
rcll
cwtl
cwtl
mov
sub
pop
jmp
sbbb
lods
ret
jl
cmp
dec
es
pop
outsb
and
out
mov
sbb
mov
sbb
inc
xor
leave
dec
js
sub
mov
xlat
mov
daa
sub
jnp
cmp
fldenv
cltd
ds
mov
aad
adc
imul
xlat
or
fdivs
addl
adc
out
jecxz
js
scas
fdivrs
jb
scas
pop
push
mov
add
lret
cmp
cli
or
pop
sub
jne
movsb
lock
sti
scas
and
call
mov
push
inc
cmp
addr16
or
cltd
outsb
lock
fbstp
mov
sub
mov
xchg
adc
fs
jmp
std
mov
fstl
in
adc
in
pop
das
movsb
jnp
cmc
lds
and
daa
xor
scas
jo
lock
popa
sbb
dec
xor
adc
cmpsl
cmp
sar
add
mov
jb
jns
test
es
adc
cmp
scas
cwtl
lret
sub
jge
xchg
inc
imul
dec
jg
mov
xchg
int3
fs
es
es
ljmp
add
arpl
lods
pop
test
mov
pop
scas
pop
int3
pusha
rolb
jbe
and
shlb
incl
sbb
xchg
out
fiadds
add
sub
mov
rcrb
out
pop
outsl
outsb
sbb
outsl
repnz
pop
shrb
loop
test
inc
jp
dec
mov
rorb
pop
test
or
and
mov
punpckldq
out
ja
fwait
int3
sub
inc
gs
add
jl
stos
xchg
movsb
xchg
mov
aaa
pop
sbb
jg
ret
xor
test
in
add
repz
data16
in
mov
xchg
addr16
idivb
jp
jnp
addl
shr
shrb
mov
ffreep
adc
es
clc
jmp
hlt
mov
shl
test
movsl
sub
into
jno
je
out
push
inc
jg
lock
les
mov
or
fsubrl
cmpb
and
ret
mov
hlt
bound
mov
js
lods
and
int3
push
fnstcw
cmp
push
inc
cli
ret
enter
push
push
xor
push
or
roll
cmp
pop
xor
cmp
jae
jg
stc
and
push
pop
lods
or
jne
push
inc
or
fsub
or
aaa
cwtl
fs
call
push
jmp
jmp
and
dec
loope
lock
sub
push
xchg
cmpsb
lahf
ret
inc
adc
xchg
or
in
rcrl
pop
sub
testb
aam
adc
jg
mov
cvtdq2ps
xlat
add
xchg
jl
cmp
sub
mov
mov
and
das
ret
push
dec
divb
mov
adc
hlt
testb
jns
xor
call
sahf
pop
rorb
in
cmp
loope
test
dec
adc
pop
inc
xor
sub
ss
adc
mov
into
mov
cmc
mov
pop
add
in
div
sti
jle
push
xor
fidivs
popf
add
add
outsb
call
enter
dec
or
loopne
dec
movsb
fidivrs
inc
aaa
iret
jp
pop
inc
or
mov
xchg
scas
dec
jno
cmp
mov
fwait
sbb
addr16
mov
mov
mov
adc
xor
int3
mov
insb
in
adc
lock
arpl
sbbl
cmpsl
out
mov
and
fidivrs
ret
ret
xor
repz
lea
bnd
jbe
inc
stos
push
push
pushl
xor
ret
repnz
adc
adc
push
in
test
fbld
nop
adc
in
lods
and
lret
mov
mov
jecxz
jl
test
xchg
aas
scas
adc
jle
insl
js
int
sub
jg
mov
gs
xlat
insb
mov
sbb
icebp
ret
push
stc
mov
push
int
mov
cmc
jle
pop
in
push
sbb
inc
or
mov
popf
cwtl
iret
insb
in
adc
adc
sub
ror
push
nop
mov
jg
pop
cmpsb
pop
jns
ret
call
call
push
mov
or
sbb
pop
lds
lret
pop
sub
pop
and
inc
mov
shll
test
or
test
xchg
xor
andb
cmpsb
mov
das
adc
insb
sbb
xchg
aas
cmp
stos
jae
cmp
fcoml
popf
sub
loop
mov
in
xchg
orb
xchg
jg
lock
rcl
and
mov
fimuls
and
pop
pop
push
out
mov
xchg
std
ret
push
mov
test
clc
xchg
repz
push
jg
pop
adcb
jle
mov
or
js
mov
jp
dec
jns
cmp
adc
push
xchg
dec
cltd
out
pop
mov
sbbl
pop
test
ret
ret
ret
pop
sub
inc
xor
mov
mov
adc
and
test
push
sub
bound
lods
fdivs
cmpsl
sahf
push
xchg
adc
adc
cmp
push
movsl
jl
arpl
add
inc
mov
jl
rorb
add
rep
jecxz
lods
sub
in
jno
xchg
mov
add
sub
insl
enter
mov
jnp
mov
enter
outsb
push
std
cmp
push
in
push
popa
std
int
daa
fsts
fmull
dec
xchg
pop
inc
shl
inc
dec
dec
bound
das
cld
sarl
rcpps
jbe
jb
lahf
fsub
in
cmp
sbb
xor
cltd
fwait
sub
jne
lods
or
inc
xchg
das
cmp
inc
in
mov
test
cli
xchg
insb
and
test
sub
cmp
jmp
xchg
sti
mov
mov
setle
inc
mov
imul
icebp
mov
cmp
faddl
clc
dec
mov
mov
sbb
cmp
cltd
xchg
pop
mov
sahf
out
loopne
xor
cmc
mov
repnz
add
and
imul
pop
pop
adc
pop
adc
std
cmpsb
fcoml
scas
push
ficomps
mov
cmpsb
movsl
inc
cli
or
insl
mov
and
jmp
jl
mov
stos
mov
pop
icebp
or
loopne
fdivl
jbe
jbe
mov
xor
mov
push
andb
pop
ret
scas
andb
pop
in
sub
or
xlat
cmpsl
jecxz
push
sbb
daa
aas
sub
cwtl
jae
mov
add
pushf
std
and
cs
mov
dec
sub
cmc
jnp
mov
jno
jmp
adc
lds
fstl
clc
pop
mov
inc
jno
sub
add
test
lret
xchg
fiadds
inc
insb
jne
sub
jns
cmp
insb
cld
or
insb
vpavgw
mov
pop
pop
pop
cltd
mov
bound
jae
push
push
in
adc
lret
sbb
fdivrs
pop
das
jo
popa
sarb
fwait
test
inc
ljmp
mov
dec
inc
and
adc
push
imul
or
sti
push
dec
or
sub
inc
std
dec
push
repz
mov
push
xorl
loop
mov
jmp
dec
notb
mov
scas
aad
outsb
lcall
sub
cld
mov
cmpsl
mov
cmp
sbb
mov
mov
movsl
mov
mov
dec
in
push
xor
stos
sub
jmp
xor
loop
jg
jne
pop
xor
inc
int
test
dec
je
setg
xchg
jg
mov
pop
out
sbb
cs
addr16
ljmp
inc
sub
hlt
loope
clc
jne
or
mov
lcall
xchg
sbb
arpl
mov
mov
cmp
add
aad
jo
negb
daa
and
mov
xor
stos
incl
push
mov
sahf
dec
mov
jmp
push
mov
dec
test
lret
cltd
ja
and
out
int
jmp
fldl
add
ret
and
ja
loop
cli
cwtl
add
leave
sbb
cmp
cmpsb
inc
dec
jno
inc
mov
jl
sbb
hlt
in
sbb
rcrb
sbb
aam
or
jbe
repnz
out
mov
insl
push
jno
outsl
cmpsl
push
je
mov
lcall
sub
insb
int3
sbb
mov
scas
ds
sbb
imul
lods
in
jmp
xorb
int
fnstsw
into
movsb
pop
scas
xor
outsb
popa
jo
mov
cmp
gs
cld
fnstsw
dec
daa
repnz
dec
je
addr16
sub
test
cmp
xor
sub
ss
in
push
pop
ja
jne
xor
lock
jp
stos
arpl
jnp
int3
sub
je
insl
insb
pusha
cmp
pop
dec
loope,pn
fimull
or
adc
jl
out
jb
notl
pop
aaa
sub
xchg
dec
jl
popa
sbb
fcmovnb
loopne
fwait
test
mov
mov
stos
scas
lods
cli
push
aaa
cs
jnp
xchg
pop
mov
sub
jge
xchg
int3
sbbb
mov
dec
xor
sbbl
test
cmp
mov
scas
imul
and
push
sub
popa
notl
out
and
pop
dec
lret
enter
jmp
xchg
aas
insl
and
xchg
int
lcall
daa
cmp
scas
or
fistps
pop
imul
add
int3
cmpsl
clc
mov
push
sub
dec
ret
fisttps
cli
pop
pop
xchg
jnp
int3
xor
fnstcw
inc
mov
push
fistl
pop
addr16
mov
fcompl
and
xchg
mov
movb
sbb
jno
add
add
jae
ljmp
inc
sub
fldl
or
mov
mov
mov
add
fimull
cld
pop
inc
test
add
cltd
or
flds
mov
mov
cmpsl
xlat
mov
push
or
aas
sub
jno
in
xor
adcb
jno
cmp
push
insl
loopne
dec
inc
cmp
inc
sbb
xchg
mov
xchg
out
adcl
lods
addr16
je
rclb
mov
js
add
les
mov
test
gs
gs
loopne
ljmp
mov
inc
std
push
mov
pop
and
sub
xchg
mov
add
mov
add
mov
xchg
in
pop
push
jnp
mov
lods
shrl
sar
xchg
xor
push
cmp
jp
cmc
push
mov
rorl
js
addr16
clc
out
push
push
shl
movsl
js
push
inc
pop
sub
adc
xchg
cmpsl
mov
mov
fwait
rcrl
dec
push
cs
add
jle
sub
dec
fldcw
cmp
sub
mov
xchg
lcall
or
pop
dec
repz
into
aaa
add
repz
mov
fnstcw
lret
adc
sub
insl
mov
inc
mov
or
jae
pop
cmpsb
lret
fiaddl
bts
lods
dec
sub
pop
movsl
fldenv
std
stos
inc
daa
inc
pop
jnp
pop
aas
xor
in
push
cmp
dec
lock
mov
xlat
addr16
fmuls
jl
add
out
dec
dec
out
and
fs
cld
inc
arpl
and
dec
fwait
in
jle
in
jecxz
cmp
dec
leave
xlat
aam
jne
lret
cmp
movsb
dec
mov
xor
in
aam
sub
adc
mov
ljmp
aam
mov
sbb
cmp
pop
push
or
movsb
shll
aam
pop
ret
call
mov
mov
mov
das
push
out
or
push
inc
mov
cmp
pusha
and
lcall
add
dec
jnp
mov
pop
mov
rolb
cmp
scas
push
inc
xor
push
leave
push
inc
aas
cld
aam
lcall
adc
movsl
and
jecxz
in
mov
popf
fmuls
gs
mov
inc
xchg
andb
jle
lock
pop
mov
or
cmp
mov
lcall
out
pop
prefetch
or
jle
jg
cmp
repnz
cmp
mov
cmp
pop
pop
hlt
insb
add
xor
jbe
xchg
or
lods
movsb
xchg
aad
pop
push
lods
pushf
or
add
or
xor
lea
xchg
cmp
shl
mov
mov
cli
cbtw
xor
inc
push
jb
cld
xor
jg
mov
popf
mov
push
or
add
or
or
push
mov
xchg
or
in
fisubl
lcall
cmp
add
not
enter
les
push
aad
test
out
mov
add
mov
movsl
xor
dec
subl
ret
out
xchg
shr
test
stos
sbb
cld
jo
gs
inc
cmp
clc
mov
call
adc
jne
mov
out
inc
jmp
int
sub
adc
int3
xchg
xlat
xchg
cmp
adc
add
cmp
aas
pop
inc
jle
inc
fbld
test
xchg
mov
add
popf
addr16
loop
xlat
cwtl
push
push
mov
lock
insb
xor
xchg
fwait
ds
lret
vpand
pop
sbb
mov
repz
and
pop
dec
icebp
push
push
xor
jp
dec
mov
push
jne
jbe
xor
xor
outsb
mov
scas
fistl
rorl
inc
fistpll
cmp
push
test
lahf
cli
int
push
hlt
pop
iret
stc
lret
insl
addl
or
pop
leave
or
xchg
or
sub
pop
mov
lods
cmp
enter
jae
imul
mov
divb
fstps
add
jge
popf
cmpsl
inc
xor
cmpb
repz
gs
insl
mov
mov
cs
cli
inc
push
rcll
dec
adc
xchg
add
out
sbb
adc
or
xlat
rorb
sti
inc
mov
add
dec
clc
xchg
pop
popf
mov
dec
icebp
cli
mov
fiadds
cmpb
pop
jp
roll
pop
jae
movsl
orl
in
sub
xchg
sti
cmp
lcall
popa
push
cmc
jmp
test
js
mov
stos
data16
iret
jnp
in
rcll
sub
mov
mov
fimull
aas
xchg
jno
and
or
sbb
sbb
cmp
jbe
fmulp
jmp
scas
adc
push
add
sbb
test
mov
mov
aam
xchg
or
stc
jbe
movsl
push
cmp
insb
lds
daa
jmp
adc
pshufw
jns
xor
and
pop
fidivrs
icebp
add
xchg
add
sub
sbb
dec
std
xchg
decb
fcoms
mov
rorb
mov
mov
mov
dec
pop
xchg
or
and
inc
ljmp
adc
out
pop
mov
lcall
xchg
pop
push
dec
sbb
aam
inc
adc
or
das
mov
cmp
outsl
ret
pop
inc
jno
out
add
push
testb
push
loope
jl
adc
push
imulb
mov
and
and
jbe
and
cs
jo
lods
int
jno
addr16
push
sbb
call
jl
dec
push
jns
test
mov
mov
pop
inc
pop
or
mov
dec
sti
dec
jne
fcmovne
xor
xor
inc
lret
push
push
ljmp
rcr
xchg
cs
lods
xor
dec
cmp
jne
rclb
adc
lret
dec
scas
xchg
imulb
add
leave
and
subl
loope
or
dec
mov
dec
cmp
in
push
stos
fadds
dec
shrl
or
or
jno
jmp
mov
in
pop
dec
leave
bound
lret
cmpsb
roll
repnz
push
out
fiadds
cltd
aas
xchg
dec
pop
nop
imul
mov
das
lock
push
add
mov
loop
sub
adc
cmp
in
leave
repnz
pushf
jmp
pop
cwtl
mov
mov
aad
je
lea
ds
cmp
cmpsb
dec
test
mov
mov
xor
pop
pop
inc
imul
dec
lods
shrb
inc
sbb
xchg
sti
rorl
data16
or
inc
mulb
mov
cmp
and
in
jp
mov
adc
xchg
inc
push
xchg
sbb
adc
push
hlt
addr16
mov
incl
push
xchg
jnp
jo
add
ljmp
outsb
and
insb
jl
cmp
push
xchg
cmp
adc
cmp
movl
pop
mov
inc
mov
jbe
jmp
or
or
pushf
rorl
cwtl
inc
test
xor
mov
je
add
add
cmp
daa
leave
xor
mov
outsl
adc
call
mov
in
cli
cmp
dec
xchg
ja
pop
testl
cltd
outsl
pop
fs
nop
mov
les
cmc
lods
test
mov
int
imul
call
mov
int3
xchg
stos
in
pop
rcl
and
jbe
xchg
test
cmp
pop
adc
imul
iret
ffree
push
push
ja
mov
adc
mov
adc
outsb
push
es
rcr
push
inc
jne
xor
loope
sub
pop
xorl
data16
cld
cmp
pop
mov
push
dec
push
mov
inc
sarb
fistl
xchg
xchg
cld
ret
fistps
adc
shlb
jge
fisubrl
sbb
subl
mov
jp
loopne
mov
lods
mov
sub
fucomip
push
cmpsl
test
subl
into
push
mov
and
scas
stc
lock
sub
sub
rcr
mov
and
push
jo
insl
mov
es
xlat
pop
xchg
es
jae
fidivrl
cmp
add
imul
ret
cmp
arpl
dec
imul
sub
push
sub
mov
mov
jecxz
test
xchg
pop
adc
xchg
shll
mov
cmp
lds
test
scas
pop
add
cmp
pop
xor
mov
rcrl
or
out
int3
pop
adc
sub
push
cmpsl
std
ror
mov
cmc
and
add
xchg
fcmovbe
jecxz
dec
dec
fists
sahf
pop
sahf
pop
sbb
cmpsl
adcb
out
es
and
or
int3
and
cltd
push
pop
push
push
inc
pushf
jne
adc
in
int3
or
roll
ret
and
pop
leave
lea
jne
std
test
hlt
xor
jecxz
stos
cmpsb
or
std
pop
adc
sbb
sbb
notb
mov
or
and
jp
iret
stos
mov
repz
test
jnp
xchg
les
and
jbe
adc
mov
xor
sbb
popf
sub
pop
clc
ljmp
out
fisubrl
xchg
cmc
neg
xchg
jp
shrb
xor
sub
inc
xchg
xchg
xlat
cmp
lahf
lret
stos
xchg
fidivrl
daa
andb
lods
adc
mov
mov
mov
mov
pop
lahf
out
jmp
outsb
xor
test
xor
pop
cmpsl
bound
inc
jg
cmp
pop
sbb
push
and
sub
scas
cltd
push
mov
movaps
int
ds
cmp
sbb
xor
shll
sbb
mov
dec
jb
dec
andl
push
push
xchg
lahf
leave
xlat
or
mov
or
fcompl
and
sbb
lods
das
push
loope
push
int3
fldcw
jns
lahf
mov
xor
push
aaa
out
mov
leave
sbb
push
popf
mov
xor
xor
pop
outsl
jle
aaa
loop
adc
pop
adcl
orl
sub
and
in
mov
das
cmp
imul
std
mov
fmuls
and
mov
dec
insb
pop
mov
xchg
stos
add
and
data16
add
jne
das
jo
jge
pop
stos
inc
push
sbb
shl
cmp
imul
adc
daa
loopne
cli
push
cwtl
out
sub
ja
dec
or
dec
in
imul
aad
negl
push
mov
pop
pop
in
call
lret
xor
shrl
inc
lods
leave
cwtl
add
dec
mov
cwtl
scas
js
mov
jae
jmp
ja
loopne
jp
std
jns
ljmp
out
inc
out
vmwrite
rcll
mov
shlb
dec
xchg
repz
jmp
xor
call
repz
cmp
cmc
pop
hlt
movsb
mov
sbb
test
shrl
fwait
repnz
cmp
mov
loope
into
xchg
sub
xor
out
jo
fstp
aaa
fiadds
out
sbb
cmp
fcompl
mov
push
jnp
pop
cmpsb
sbb
repnz
mov
pop
inc
push
fcomip
dec
mov
cs
add
stos
push
cmc
sbbb
jo
icebp
jecxz
jb
jne
stc
stc
inc
sub
pop
fildll
sub
add
js
pop
cmp
mov
sbbb
sbb
insb
push
ja
addr16
testl
and
mov
mov
insl
mov
daa
jle
adc
fcomp
add
imul
mov
or
adc
fisubs
push
jmp
or
xchg
pop
dec
imul
add
dec
pusha
in
out
cmp
cs
int3
xchg
jae
jae
dec
clc
in
outsl
addr16
repnz
mov
je
and
stc
scas
fbstp
sahf
stc
out
icebp
das
push
popl
ja
mov
les
jg
add
or
pop
pushf
push
fucomp
pushaw
ljmp
pop
or
jns
call
sub
pop
orb
mov
test
jle
mov
adc
das
sbb
jne
adc
in
mov
and
adc
mov
inc
ljmp
and
push
sahf
pop
sbb
cmp
inc
pop
inc
dec
int3
in
add
adcl
test
pop
pop
adc
adc
stc
pop
inc
jo
gs
lods
scas
add
ret
cmovbe
mov
xor
insb
sbb
arpl
cltd
shrl
sbb
vpmaxub
repnz
sbb
inc
push
or
outsb
out
pop
inc
pop
pop
push
cs
iret
jno
lods
pop
fcmovne
or
imul
int3
xorl
scas
lret
jne
fwait
push
and
mov
es
xchg
cmpsl
dec
stos
mov
mov
stos
addb
push
dec
fisubs
fwait
mov
outsl
xrelease
lock
jnp
pop
mov
sbb
je
adc
jle
enter
pushf
inc
inc
shll
jg
cmp
sar
or
cwtl
inc
or
test
cmpsb
pop
pusha
jb
inc
dec
repz
std
pop
cmp
add
or
mov
aam
fldl
xor
les
mov
fs
push
int
inc
or
jecxz
addr16
or
cmp
scas
pop
cmp
inc
or
js
fsub
in
xchg
lcall
aam
outsb
mov
inc
and
ret
pushf
rcll
cltd
jg
jecxz
jno
stc
jge
pop
pop
addl
fcoml
mov
xchg
lea
movsl
mov
movsb
sar
aad
sbb
adc
out
out
cmp
pop
outsb
clc
pop
pop
sbb
mov
lea
jp
rcll
adc
cwtl
mov
or
or
mov
repnz
mov
scas
or
loopne
out
xlat
sbb
into
cmc
cmp
subl
push
sahf
in
movsb
repz
outsl
ss
inc
mov
pusha
inc
adc
repnz
lahf
inc
sti
dec
iret
ret
sub
and
fcoml
imul
repz
adc
mov
pop
sub
mov
cld
fsts
cmp
gs
mov
mov
and
fucom
pusha
not
push
rcll
and
aas
insb
sub
xchg
imul
addr16
leave
cmp
aaa
arpl
sub
xchg
push
ror
or
xor
cmp
jge
ja
loop
sahf
out
sbb
push
lret
lea
scas
daa
mov
cmpsl
pextrw
sahf
lock
inc
mov
negb
lret
add
test
call
pop
enter
int3
pop
out
jb
sbb
mov
addb
ja
popf
xorb
cmpsb
pop
cmp
or
ja
xor
xorl
aam
lods
xchg
jne
mov
sbb
gs
test
or
sbbb
mov
cmp
scas
shll
test
mov
sbb
test
and
sub
test
ljmp
xor
adc
movsb
inc
test
repnz
daa
cltd
outsb
push
jge
sbb
xchg
push
ret
sub
xor
addr16
xchg
pusha
mov
jae
jns
pushf
jns
xchg
in
mov
mov
cmc
xchg
addr16
adc
rcll
xchg
push
cmp
lea
dec
adc
fdiv
add
cmpsl
sub
sbb
xchg
gs
ljmp
dec
pusha
cmp
mov
sub
push
repz
sub
aam
sarb
cmp
inc
es
jp
int
shrb
ss
int
mov
mov
mov
xchg
push
pop
cmp
fsubrl
add
in
add
filds
inc
fistpll
jno
push
cltd
lods
sbbl
adc
cmpsl
jo
bound
mov
jle
add
push
aaa
test
lds
pop
sub
filds
imul
jle
xor
jp
std
iret
popf
xchg
pop
pop
dec
mov
cli
out
adc
pop
ja
pop
xchg
fwait
jae
push
mov
cmp
repz
mov
test
push
shll
xchg
and
xor
and
leave
mov
sar
in
inc
mov
xor
mov
insb
lods
inc
fistl
inc
orl
rcl
shll
in
sub
mov
sar
xchg
stos
push
dec
jns
push
push
pop
sub
add
mov
mov
fstpl
lock
cmp
inc
and
mov
pop
xchg
shrb
outsl
and
fstps
or
and
stos
mov
mov
add
fbld
adc
das
dec
mov
das
mov
xchg
rorl
jne
jae
push
push
arpl
sbb
jp
imul
popf
xlat
dec
imul
arpl
sbbb
cmp
lods
inc
push
loop
ja
int
rclb
into
iret
xchg
call
hlt
imul
inc
sub
sub
push
xchg
int3
lods
xchg
adc
lock
aad
adc
js
stc
add
adc
adc
scas
lds
adc
shll
push
bound
and
arpl
in
or
mov
mov
std
stc
jp
retw
pop
test
repz
or
in
xor
test
pop
ss
and
jecxz
mov
and
adc
in
push
push
aaa
bound
js
test
pop
jle
movsb
jle,pn
xchg
pop
inc
fs
int3
pushw
inc
jns
aam
cltd
push
mov
mov
shlb
inc
ljmp
insb
mov
out
into
rcrb
push
mov
mov
jl
mov
sub
adc
ds
inc
and
sub
lock
or
mov
adc
adc
push
stos
push
mov
and
cmpsb
add
inc
pusha
pop
xchg
or
pop
lea
and
popf
mov
into
aaa
jecxz
pop
in
mov
sub
inc
pop
xlat
jmp
insb
ljmp
pop
and
leave
mov
xor
inc
sti
or
aam
jae,pn
jle
jp
mov
nop
pop
bound
sub
ret
loop
lods
arpl
leave
inc
lahf
mov
xor
mov
sub
lahf
mov
fcompl
ret
cmp
aam
cmp
inc
mov
enter
jecxz
shlb
inc
xchg
fucom
stc
mov
fsubs
mov
clc
adc
imul
mov
push
pop
xor
das
push
cmp
idivl
aam
test
out
pop
lret
dec
orl
mov
cld
out
scas
lods
mov
mov
xchg
or
in
cmp
frstor
sub
mov
je
dec
push
mov
jb
mov
icebp
xor
add
icebp
xchg
lret
je
movsl
dec
mov
gs
xchg
ret
adc
leave
scas
fdivl
or
call
xor
rcrl
push
sub
xchg
cmp
cld
sbb
test
inc
rcr
std
jl
mov
mov
call
sbb
loope
mov
popf
testb
and
popa
popf
mov
outsl
fisttps
mov
and
mov
jle
outsl
push
adc
jno
sub
xor
mov
orps
mov
cld
popa
jb
lcall
rcrb
in
into
fiaddl
rolb
clc
jg
imul
xlat
cmpsl
xchg
sub
mov
or
sarb
insb
ljmp
int3
add
pop
push
lea
push
test
or
add
xor
jae
jno
ds
mov
dec
inc
lods
inc
adc
jae
movsl
mov
subl
cmpsl
hlt
or
mov
lea
mov
lea
and
subb
mov
mov
and
mov
inc
or
mov
xchg
xchg
enter
and
sub
mov
mov
push
negl
movnti
in
and
or
pusha
sahf
in
pop
aas
mov
testl
data16
fdivrs
mov
bnd
daa
in
pushf
fbstp
test
in
xchg
popa
and
inc
xor
sub
lods
or
xor
adc
xor
push
mov
arpl
sarl
testl
fs
mov
cmc
gs
jecxz
cld
and
mov
rolb
mov
inc
aad
addl
cld
in
sub
pop
pusha
add
leave
insb
jne
xor
push
sbb
fildl
mov
sbb
fimuls
jle
jl
stc
xor
mov
push
fcoms
add
mov
fs
mov
xchg
push
daa
out
mov
xor
xor
jg
xchg
pop
fwait
sub
js
iret
mov
mov
jno
ja
popf
dec
repz
add
pop
mov
jge
pop
in
fs
push
jl
gs
xchg
adc
out
negl
jecxz
push
or
loope
push
ljmp
mov
dec
test
jbe
and
push
push
gs
mov
adc
scas
fsubrl
cwtl
addr16
icebp
sub
ret
clc
and
repnz
test
int
xchg
sbb
jne
sarb
fwait
inc
sahf
push
rorb
or
aad
mov
fs
ja
jmp
mov
mov
iret
mov
push
push
and
ds
pop
jecxz
jge
dec
into
pop
test
add
in
popa
fldl
fs
mov
enter
push
xchg
cli
sbb
test
xor
xchg
shlb
adc
sub
lods
push
in
cmp
dec
add
or
hlt
push
pushf
sub
aam
sub
and
loope
dec
mov
repnz
out
push
jnp
addl
jmp
fsubp
stos
xor
add
icebp
cmp
lea
and
push
sub
sbb
xchg
xchg
xor
jge
sahf
pop
inc
and
imulb
and
testb
pop
add
mov
mov
popf
jo
jbe
inc
ror
pop
test
xchg
ret
insb
stos
mov
mov
loopne
push
inc
pop
pushf
es
inc
pop
jo
in
leave
sub
dec
sti
in
sbb
cs
ja
push
cwtd
xchg
dec
jg
sub
idiv
pextrw
cmpl
pop
lds
and
or
pop
pop
fdivrl
mov
mov
xor
stos
push
push
mov
or
sub
scas
pop
sbb
xchg
imull
sets
leave
push
xchg
leave
popfw
push
add
mov
xchg
stos
sbb
sub
lock
fistpl
push
es
or
inc
xor
add
and
inc
adc
push
shl
pop
fdivp
lret
daa
fstpl
sub
lock
aad
adc
outsl
sub
mov
pushfw
jecxz
jae
xor
out
int3
fdivrs
or
shll
mov
test
jecxz
sub
mov
ret
adc
xor
add
iret
mov
int
adc
inc
and
xor
ja
repz
ret
inc
sub
push
xchg
adc
int3
lret
mov
outsb
sbb
outsb
mov
into
sub
dec
rclb
insb
dec
sahf
lcall
push
in
outsl
out
sbb
dec
out
aad
sbb
add
jle
cmp
addr16
enter
cwtl
scas
mov
add
cli
push
ffree
mov
push
sarl
shrl
out
jmp
dec
sti
out
nop
add
scas
mov
or
pop
stos
out
loop
cs
dec
sub
pop
jnp
jp
fstp
jnp
adc
or
aam
daa
int3
mov
ror
pop
pop
lret
jb
add
fcomip
scas
fs
ret
jmp
repz
sub
psubsw
mov
aas
dec
das
mov
pop
push
hlt
push
xor
in
mov
and
call
jne
sbb
cmp
dec
rcrb
stc
lcall
push
pop
test
mov
cwtl
push
sub
es
fwait
cmp
xchg
dec
push
and
sub
repz
lock
imul
xchg
loope
mov
lcall
jle
stos
lods
bound
mov
arpl
sbb
ss
and
jmp
mov
jge
imul
xlat
or
dec
pop
xor
and
mov
iret
sub
out
in
fidivrs
push
jmp
xor
push
inc
pop
jne
test
adc
fnstenv
xor
fdivrl
jmp
mov
xor
call
enter
xchg
mov
mov
push
test
lret
xchg
push
mov
scas
jne
add
test
jne
pop
mov
xchg
xor
push
cmp
js
call
sub
daa
mov
ljmp
jp,pn
out
out
add
fcomi
cmc
mov
pop
fisttpll
movsb
add
xchg
pop
and
mov
sub
push
test
cli
mov
dec
aas
int3
mov
andb
int
arpl
shlb
mov
xor
push
in
xor
and
pusha
xchg
lea
and
ficoms
and
add
inc
fistpll
add
dec
push
jb
mov
push
push
mov
negb
mov
fs
pop
and
fwait
cmp
in
aam
mov
sub
fs
popf
in
inc
shrb
movb
ljmp
in
sbb
adc
push
mov
imul
sbbb
clc
cli
rcr
push
fbstp
nop
jecxz
ss
int
mov
test
lock
ficoml
xchg
movsl
dec
sahf
lahf
pop
lds
add
cmp
aad
dec
pushf
imul
fistpll
ret
stos
enter
pop
ret
mov
call
sub
ljmp
out
jge
ret
sbb
std
pusha
dec
loopne
mov
jae
cmc
mov
mov
int
shll
push
dec
add
loop
lret
adc
xchg
sarl
xorb
cmp
sub
fstps
mov
popf
lahf
jno
fwait
jp
mov
es
cmp
insb
jo
xchg
jae
sbb
jno
fmull
inc
movsl
sub
dec
dec
jg
stc
stos
pop
xor
cmp
adc
or
add
jle
popf
movsl
xor
add
or
push
or
loopne
mov
movsb
add
clc
outsb
jno
mov
and
push
adc
inc
mov
mov
in
sbb
and
sbb
push
cmp
bound
fisubs
push
std
xchg
and
subl
cmp
xchg
jb
call
mov
mov
inc
inc
xor
das
loop
cmp
lcall
cld
adc
or
insl
cmpsb
sbb
sub
adc
pop
sbb
in
mov
gs
mov
xchg
sbbl
or
ja
aad
inc
inc
push
imul
cli
and
pop
and
lret
in
movsb
add
push
mov
scas
aad
in
fstpt
out
fmull
aad
fcompl
xchg
into
iret
push
lcall
cmc
scas
jno
fsubrl
jl
mov
sbbl
sub
fwait
adc
icebp
aas
pop
add
gs
cmp
icebp
sbb
nop
sub
sub
ss
mov
fisubrl
sbb
ret
shll
test
in
in
movsb
mov
jnp
and
mov
in
out
mov
and
in
fdivs
stc
inc
push
into
frstor
and
inc
mov
push
mov
push
xor
data16
dec
mov
xchg
cmpsb
orb
clc
cld
pop
in
shlb
sti
rol
jg
xchg
xor
shll
inc
xlat
fcomps
test
lea
xor
out
xchg
loopne
inc
icebp
pop
lahf
and
lret
ficoms
or
cwtl
mov
popf
pop
push
adc
dec
stos
inc
or
push
jmp
mov
jno
andl
push
in
out
sahf
outsl
mov
mov
test
imul
mov
mov
inc
fidivs
daa
mov
xor
and
clc
dec
pop
mov
jae
xchg
push
ret
push
mul
mov
xor
cld
or
dec
ficompl
test
scas
dec
ds
or
movsb
jne
push
pop
outsl
pop
sub
sbb
cmp
leave
mov
rcr
in
lds
sub
mov
jne
punpcklwd
pop
stos
xchg
dec
mov
test
xchg
or
push
push
loopne
notb
inc
movsb
mov
js
jne
xchg
daa
inc
mov
mov
add
add
out
push
lea
jne
jg
push
and
and
rcl
scas
inc
out
mov
jl
enter
or
add
cmpsl
mov
lods
or
push
mov
sub
cmp
push
jp
cmp
or
dec
adc
and
dec
stos
rcll
sbb
dec
jmp
fsubs
lret
fnstcw
das
push
mov
jae
scas
jmp
es
pop
cwtl
pushf
jbe
dec
cld
cmpsb
aam
rcll
push
aaa
sbb
jl
shll
icebp
test
and
cmp
push
aas
sbb
or
pop
mov
das
sbb
lods
fs
iret
orl
cmp
and
pop
divb
fwait
insl
pop
pop
mov
mov
ja
sbb
dec
dec
and
sub
push
popf
xchg
mov
xchg
shrb
mov
and
adc
and
pop
mov
sub
rcrb
mov
cld
pop
enter
cmpb
mov
xchg
fnstenv
les
jge
inc
push
fmull
sub
adc
sbb
stos
lods
rorb
dec
mov
in
mov
or
shrb
bound
scas
ret
mov
scas
pop
fs
mov
out
xor
inc
in
outsl
xchg
test
in
or
adc
ret
jg
out
xchg
xchg
push
out
negl
stos
and
mov
xchg
rcll
adc
inc
int
inc
inc
mov
jmp
add
cmp
into
aad
or
clc
loope
xchg
cmpsb
arpl
repz
testl
dec
fstpl
push
divl
jns
mov
sub
add
shll
fs
cmp
rcrb
mov
stos
ja
dec
fs
add
add
adc
in
adc
adc
pop
adcb
cmpsl
adc
stc
lret
fnstsw
addr16
mov
mov
pop
shll
pop
pop
mov
addr16
sub
mov
repnz
push
subl
loope
or
mov
push
and
add
icebp
mov
icebp
xor
xchg
cwtl
jge
js
pop
mov
loop
add
sub
movsb
neg
call
dec
mov
fisttpl
or
out
mov
xor
psllw
add
sub
xchg
ret
cmp
mov
testb
or
pop
aaa
das
pusha
ss
jge
pop
ror
loope
mov
dec
shlb
xchg
mov
mov
cmpsb
fisttps
call
test
jle
xchg
jo
mov
push
out
cld
mov
dec
mov
add
ja
xchg
imul
das
lds
sahf
dec
add
push
jecxz
mov
mov
jbe
lds
rclb
lahf
test
movsb
cmp
inc
mov
jg
int
mov
pop
je
adc
insl
jbe
sahf
and
mov
add
flds
fwait
pop
push
push
jl
mov
sbb
inc
sub
xchg
sub
rcll
xchg
sub
or
pop
mov
fidivrs
or
je
sub
lcall
test
and
and
xchg
mov
fistpll
insb
add
loop
mov
mov
dec
out
jge
cltd
xchg
stc
mov
cmp
jno
addr16
call
pop
lahf
call
into
popl
pop
inc
popa
int
xchg
jmp
push
pop
imul
andb
add
shr
cltd
mov
xchg
out
push
push
jp
inc
into
or
mov
dec
inc
jns
orl
mov
lods
les
jo
ret
cmp
es
fdivrs
fimuls
push
lcall
mov
xchg
push
in
std
imul
insl
cwtl
clc
shlb
fistl
xor
sahf
pop
xor
das
lcall
inc
aaa
frstor
push
xor
mov
adc
inc
out
shlb
xchg
divb
call
lods
adc
pop
mov
daa
das
cmpsb
cmp
add
aaa
test
pop
sbbb
cmp
or
add
stc
xchg
cwtl
rcrl
pop
fdivl
int3
pop
sub
cmp
clc
lcall
inc
mov
out
sub
or
out
pop
add
sti
pop
cmp
jg
test
inc
mov
lcall
jl
inc
mov
aad
fimull
lods
jns
sbb
push
push
mov
out
xchg
lds
das
add
addl
clc
iret
sbb
pop
das
push
push
aad
and
fists
dec
popa
fstl
or
in
sub
jmp
ficoms
add
jg
add
and
push
adc
lods
test
lahf
jmp
and
cwtl
hlt
out
and
sti
loopne
ret
push
das
mov
mov
ficompl
test
icebp
int
adc
and
mov
xor
mov
mov
mov
or
xor
mov
sub
nop
mov
dec
les
inc
or
scas
jmp
cs
jl
cmp
sbb
dec
in
aad
sbb
and
sti
add
sbb
rcll
sbb
imul
lcall
mov
lea
fisubrl
push
lcall
xor
movsl
push
movsb
pusha
sbb
mov
cmp
faddp
mov
sbb
cld
pop
mov
and
sub
std
andb
lea
movl
push
stc
and
xchg
xchg
and
sub
mov
ds
outsl
jle
in
mov
dec
insb
add
or
mov
adc
rolb
xchg
cmc
pusha
jecxz
inc
es
sbb
out
ret
mov
mov
testl
xor
mov
push
cmp
or
mov
jmp
add
xlat
sub
divl
aas
xor
add
cltd
loope
rcrb
arpl
lds
adc
push
jno
add
sarb
push
xchg
andb
dec
xchg
fimuls
jge
fs
push
insb
pop
jns
inc
mov
cmp
stos
scas
sbb
jl
jae
jae
sub
outsl
loop
inc
inc
xchg
loop
mov
hlt
sbb
jmp
xchg
fcomp
outsb
or
lods
push
aad
cs
add
int3
mov
popf
in
addr16
push
loope
jns
sarl
leave
cwtl
jmp
mov
xchg
je
jmp
and
pop
clc
dec
pop
movsl
movsb
xor
cmpsl
jmp
jne
push
popa
dec
inc
cbtw
mov
dec
add
out
shl
lret
repz
movsl
lock
lods
iret
sbb
mov
pop
in
mov
lea
mov
jb
xchg
and
push
pushf
idivb
mov
int
lret
pop
shld
pop
push
imulb
dec
iret
rorl
sub
leave
frstor
sarb
inc
icebp
jmp
mov
daa
lcall
mov
mov
imull
arpl
mov
mov
imul
push
shll
mov
pop
js
test
js
das
fstl
dec
test
test
push
jbe
repz
mov
fdivs
xchg
cwtl
jo
push
cmp
jle
insl
xchg
loopne
lock
test
out
call
movsl
xchg
pop
filds
je
testl
mov
js
stc
push
mov
sub
data16
mov
push
mov
movsb
jb
and
aad
pop
or
and
movsl
push
push
adc
pop
data16
or
stc
in
shl
addr16
mov
inc
add
insl
test
push
mov
outsl
test
stos
mov
mov
inc
or
adc
sarb
dec
lods
jecxz
dec
movsb
pop
or
xlat
xchg
ret
out
mov
xchg
mov
iret
xor
movl
scas
int3
jl
fidivl
add
xchg
fisubs
sti
in
push
or
pop
inc
aas
rcrb
mov
and
je
andl
or
jecxz
in
test
sbb
xchg
dec
stos
jnp
inc
xchg
adc
mov
jb
arpl
xchg
mov
adc
xchg
mov
jae
lcall
inc
outsl
aam
pop
cwtl
out
mov
add
sti
addr16
push
lret
popf
outsb
dec
pop
insl
jnp
notl
in
inc
jl
in
push
mov
mov
je
repz
shrb
test
mov
test
int
push
das
mov
jo
jge
outsl
xchg
rclb
sub
lods
and
insb
adc
pop
inc
dec
ljmp
std
lea
fmulp
jno
cmp
ficoms
xor
jo
mov
push
test
call
int
aam
xchg
push
push
pop
mov
inc
sbbl
outsb
shl
mov
dec
fcmovnb
dec
jmp
inc
repnz
sbb
into
rclb
inc
or
dec
outsl
movsl
push
push
jae
es
push
push
sahf
add
shrl
pop
or
jo
fsubr
pop
pushf
pop
aaa
jbe
outsl
mov
add
inc
or
adc
push
shlb
repnz
xchg
sub
pcmpeqb
shll
sub
rorb
push
ret
dec
lea
dec
inc
pmullw
cmpsb
push
fistpll
call
mov
repz
jg
fiadds
xor
inc
shlb
scas
sarl
cmp
xor
mov
inc
mov
xchg
data16
and
shrl
adc
add
pop
cmp
mov
lock
xchg
or
enter
or
lds
mov
jbe
jge
pop
test
sub
mov
cltd
xchg
sub
call
or
in
push
loop,pn
sarl
out
push
jle
sarl
or
push
xor
mov
sbb
pop
push
push
push
fadd
push
pop
and
sysexit
sbb
mov
and
ret
sub
xor
int
shlb
aad
lret
cmc
pop
mov
fimuls
imulb
cmp
pusha
pop
xchg
fisubs
into
xor
xor
movsb
rorb
mov
cs
pop
dec
or
xchg
hlt
mov
add
dec
sub
cmp
xor
cmc
std
or
cli
mov
gs
add
jmp
mov
xchg
xor
les
decb
loopne
in
xchg
cltd
sbb
jb
cs
bound
rcll
or
out
mov
push
mov
or
jae
loop
std
fistl
cmp
inc
pop
aaa
test
push
addr16
aaa
sbb
lds
dec
dec
sbb
stos
popa
insl
loope
mov
imul
insl
jecxz
pop
or
add
mov
lea
ss
and
or
cltd
fiadds
mov
and
ss
mov
clc
mov
add
mov
sub
inc
xchg
or
mov
popl
sbb
loop
mov
lods
mov
ficomps
sbb
stos
in
and
mov
cltd
push
imul
dec
mov
loope
xor
sub
sub
push
or
repnz
mov
jge
mov
push
mov
insb
mov
fisttpl
or
stos
jno
fildl
loope
loope
xchg
push
sarb
icebp
cwtl
xchg
push
scas
inc
in
andb
imul
push
push
setne
sub
xchg
ja
inc
mov
sub
mov
aaa
jne
mov
and
ficoml
mov
dec
vpmaddwd
add
inc
sbb
aam
in
jns
mov
inc
stos
aaa
filds
in
jecxz
pop
out
xchg
mov
mov
xchg
jg
sub
jmp
into
scas
lods
pop
dec
hlt
fnstenv
fidivs
pop
ss
flds
cmp
aam
add
jbe
push
rol
mov
sbb
nop
xchg
add
inc
sbb
lods
notb
pop
fdiv
inc
aaa
jg
ret
add
loope
dec
mov
pop
jl
out
mov
or
pop
fs
cmpsl
fucomip
repnz
mov
mov
inc
sar
lcall
mov
flds
lcall
pop
into
mov
ja
ja
add
xchg
xlat
mov
in
mov
lea
add
push
flds
cld
popf
or
lods
xchg
xchg
cmp
xor
cmpsb
jle
ljmp
rolb
test
mov
mov
jo
add
dec
std
sub
js
cmp
fdivs
inc
lret
and
faddl
fimuls
pop
pop
call
xchg
enter
cmp
test
jb
lods
fnstcw
and
mulb
loope
dec
sub
xor
ljmp
int
pop
mov
pusha
stos
xchg
pop
cmp
jnp
ficomps
jb
imul
ror
cltd
sti
ret
mov
mov
pop
mov
and
mov
int
sti
push
aas
sbb
fildll
cli
outsl
not
jmp
mov
imul
test
mov
and
mov
hlt
push
test
jl
icebp
loop
clc
jne
aas
add
adc
jl
add
xorb
lds
pop
jl
into
insb
xchg
xchg
out
leave
or
cmpsb
inc
fdivs
dec
sbb
pop
push
test
cmc
inc
inc
test
cmp
aaa
leave
pop
push
adc
mov
stc
and
fidivs
and
pop
or
out
pushf
dec
pop
mov
lock
sub
xchg
fiadds
addb
arpl
xchg
pop
jmp
cmpsb
movsb
jbe
bound
xlat
mov
negl
rclb
clc
inc
subb
stc
pushf
pop
cmp
daa
mov
add
and
je
in
pop
in
and
mov
pop
pushfw
pop
outsb
shrl
or
xchg
xor
and
imul
add
pop
mov
jmp
aad
out
jp
pop
test
add
cmp
mov
mov
inc
sub
aad
and
sbb
shlb
inc
mov
jle
insl
lods
pop
cwtl
clc
lods
into
mov
into
sahf
sahf
sub
out
loopne
das
movsb
add
mov
negl
fists
pop
cmp
in
in
push
repz
jne
xchg
sub
mov
lret
jg
mull
adcl
pop
movsl
mov
push
arpl
nop
loope
scas
fldl
ss
pop
pop
in
pop
xchg
inc
inc
stos
fldt
hlt
mov
push
testl
in
add
sub
lret
movsl
sub
call
jmp
ret
xchg
pop
push
mov
leave
dec
adc
cld
cld
mov
sbb
mov
stos
inc
xchg
iret
mov
jne
add
jmp
idivl
cwtl
and
inc
sarb
inc
in
push
fidivs
in
repz
sub
add
mov
cwtl
xor
xlat
mov
cs
xchg
pop
sbb
popf
jbe
xor
adc
sbb
out
mov
loopne
repnz
pop
jg
daa
jo
mov
fiadds
add
insb
mov
insl
jo
or
adc
popf
or
das
push
xor
lret
std
and
outsb
fsts
xor
lea
test
or
adc
and
xor
inc
sbb
push
inc
ss
mov
aaa
cltd
pop
nop
mov
mov
pusha
jle
hlt
cmc
sub
xlat
out
sarl
mov
xor
and
jg
mov
fwait
jo
bound
cli
cli
dec
push
test
mov
dec
imul
daa
aam
sub
insl
jl
mov
inc
mov
cmc
loope,pt
movsb
dec
dec
bound
pop
mov
mov
test
ja
dec
cs
aas
imul
pop
shrl
mov
gs
xor
lret
bnd
das
push
jle
and
and
add
js
pop
ror
sbb
mov
xchg
xchg
dec
int3
mov
leave
pop
xchg
xorl
jne
aas
mov
fistpll
hlt
push
aas
mov
push
push
mov
mov
jl
icebp
fcomp
jecxz
scas
insb
xchg
fsubrs
aad
sub
pop
jmp
insl
repz
push
jnp
pop
data16
xchg
sub
call
lock
cmpsl
inc
xor
jg
mov
imul
jmp
adc
sub
mov
ffreep
xor
call
sbb
pop
faddl
insl
pop
mov
loope
out
decb
push
push
cmp
mov
xorl
xchg
or
adc
pop
clc
and
lcall
mov
mov
sub
movb
dec
cli
cmc
push
mov
repz
dec
sbb
mov
inc
xchg
je
iret
mov
loopne
movsl
cmc
sbb
sbb
sub
pushf
lahf
sbb
enter
jae
aaa
mov
mov
sbbb
pop
in
jmp
cmp
mov
add
push
and
dec
mov
inc
or
push
cmc
scas
xchg
xchg
jecxz
fcoml
aad
insb
jb
fnstcw
adc
faddl
mov
lock
aas
cwtl
jno
mov
jno
pop
cmp
out
add
ficomps
inc
out
jbe
adcl
xchg
add
loopne
gs
xor
and
outsl
adc
dec
mov
xchg
lock
ret
adc
ja
out
popa
jne
cmpsb
jl
addr16
push
cli
pop
loopne
rcrl
out
and
inc
mov
add
xor
adc
push
jns
repnz
int3
mov
test
fucomip
sbb
fsubr
push
and
data16
cmp
inc
in
mov
testb
push
mov
loope
out
xchg
mov
in
pop
lock
pop
mov
sti
sti
rorb
xchg
jecxz
call
jmp
push
xchg
mov
xchg
iret
ds
inc
push
adc
xchg
lock
frstor
addb
dec
js
xchg
pusha
jecxz
xlat
lcall
push
add
loopne
adc
dec
inc
mov
imul
stc
es
daa
mov
sti
lods
sbb
testl
aaa
and
out
xor
repz
arpl
divb
jo
mov
push
mov
test
pop
cmpsl
jo
jae
pop
cltd
inc
or
movl
cld
fsubrl
scas
mov
pop
sub
add
mov
in
jecxz,pt
xor
stos
ret
xchg
call
sbb
dec
movsb
lods
sbb
ret
rorb
mov
pop
js
movsl
lock
loopne
jg
loopne
jae
sub
loop
push
fwait
popa
dec
or
dec
mov
inc
pop
push
enter
sahf
mov
mov
lds
in
and
imul
cli
mov
inc
cwtl
inc
dec
inc
push
das
je
mov
cmp
arpl
outsb
and
es
push
jp
mov
int3
push
jmp
shrb
inc
push
jmp
or
outsb
xchg
jns
sub
sbb
cmp
pop
xchg
mov
jae
push
dec
daa
adc
fidivrl
dec
jb
sbb
in
add
repz
jo
int3
mov
aaa
xchg
fwait
cwtl
rcl
mov
lock
mov
push
adc
add
rorl
sub
adc
xchg
pop
push
jnp
or
loop
fsub
dec
mov
sbb
test
jns
jecxz
mov
push
shrl
dec
sbb
cltd
insl
mov
mov
push
lods
cmpsb
data16
sarl
mov
inc
adc
or
and
and
inc
popf
sbb
xchg
cmp
loopne
push
arpl
push
xor
adc
mov
dec
adc
test
movsl
fists
lods
inc
movsl
icebp
push
popf
in
xor
loopne
adcl
pop
pop
lcall
shrb
out
add
int
dec
lcall
inc
mov
push
xorl
xor
loopne
add
xchg
stos
mov
call
add
pop
cltd
mov
inc
nop
imul
sahf
into
out
bound
dec
mov
ret
shll
add
dec
mov
xor
sub
lods
pop
in
jno
xor
cmpsl
push
xlat
cmp
pop
cmpsb
imul
ret
loop
cltd
xor
testw
test
sub
mov
test
dec
and
addr16
inc
jp
faddp
fdivs
aam
xchg
ficomps
adc
stos
cli
xchg
add
mov
in
push
rorb
and
aad
mov
icebp
js
loop
leave
push
inc
dec
lds
js
sub
push
in
cmpb
pop
ljmp
fcmovbe
sbb
dec
aaa
hlt
pop
icebp
stos
mov
pop
movsl
add
xor
es
xor
mov
lods
push
loop
repz
sbb
gs
out
and
jmp
and
jno
icebp
stos
mov
push
imul
mov
adc
arpl
pop
pushf
add
rcrl
pop
cmp
test
ret
lea
mov
shl
pushf
mov
xor
shlb
dec
rol
jmp
lret
dec
add
jb
cltd
rol
dec
jecxz
ss
in
shlb
add
and
xchg
dec
ja
sbb
pusha
dec
imul
fwait
ret
add
xchg
cwtl
pop
jg
jno
aaa
ror
stos
rcll
bound
sbb
outsb
insl
mov
add
js
shll
movsb
push
dec
ja
pop
pop
sarl
dec
arpl
lods
rep
jmp
xor
xchg
shll
sbb
dec
cmp
test
out
pushf
cld
adc
mov
adc
inc
mov
or
ja
ja
xchg
out
ds
sbb
pop
and
xor
xchg
sub
fincstp
shr
mov
sub
int3
sbb
leave
jns
ror
add
pop
jp
stos
call
add
sub
add
mov
test
addr16
loop
fcomip
shrb
or
pushf
icebp
les
dec
or
sbb
push
out
push
jno
or
lods
repnz
add
or
data16
popl
cmpl
mov
xor
cmp
and
lret
mov
outsl
adc
fistpl
pop
jae
add
std
leave
xlat
inc
cltd
xchg
add
scas
test
cmpsb
push
mov
pop
cmp
stos
push
repnz
sti
cwtl
mov
xchg
mov
fnstsw
xchg
xchg
push
fisubs
push
cmpsb
std
aam
icebp
inc
mov
outsl
inc
mov
je
sbb
mov
imul
insb
cmp
jne
aad
xchg
dec
aam
insb
sub
push
inc
mov
fadd
mov
int3
mov
mov
push
outsl
outsl
cwtl
push
inc
jns
cmpl
xor
mov
sbb
fnstcw
gs
xchg
mov
ret
cltd
xchg
bnd
jno
and
xor
mov
push
sbb
adc
outsl
loopne
sti
aaa
mov
es
sti
test
or
fnstsw
push
lcall
sbb
jo
daa
add
repnz
jnp
test
dec
out
fildll
adc
adc
dec
push
push
and
inc
push
loopne
mov
aas
in
js
sbb
xchg
sub
out
pop
popa
in
scas
mov
ret
jl
fldcw
movsb
and
jo
lcall
sti
add
add
loop
icebp
test
fsubrl
xchg
addr16
pop
sbb
mov
mov
xchg
xor
add
cs
insb
outsb
push
push
andl
stos
jbe
cld
dec
je
fcomps
inc
mov
cmpsl
testl
fsubp
adc
bound
sub
cmpl
aam
mov
cwtl
xchg
pop
push
sbb
cmpl
rolb
push
mov
sahf
cli
jae
aad
aad
pusha
scas
movsl
mov
out
fstl
lea
jno
lock
clc
out
gs
test
lock
lret
mov
xlat
xchg
and
mov
rclb
popf
push
jo
xchg
add
cmp
leave
cli
movsl
pop
add
loope
mov
lret
rcll
jp
movsb
xchg
scas
dec
sbb
xlat
int3
je
xor
popf
arpl
dec
xor
ja
rcrb
mov
outsl
push
mov
cmp
xchg
mov
or
js
sbb
stos
cltd
adc
bound
mov
pop
pop
cld
sub
add
or
mov
leave
sbb
dec
filds
mov
xor
fisubl
mov
or
push
adc
jnp
ljmp
out
pop
sbb
stc
repz
pop
enter
pop
sub
cmp
add
mov
mov
jo
xor
hlt
cltd
sar
rep
pop
xor
movsl
int3
and
cmp
or
mov
add
xor
xlat
mov
es
pop
jbe
lret
outsb
push
sub
cmp
pop
mov
je
adc
lahf
out
mov
cmp
cmp
xor
jae,pn
or
aas
aam
cmp
sub
jp
cmp
out
mov
mov
adc
mov
flds
mov
push
inc
sbb
clc
adc
in
stc
outsl
mov
jl
dec
xchg
mov
out
mov
test
inc
jbe
xor
sub
lret
test
adc
int
push
daa
repnz
sub
sbb
sbb
fsub
shrb
jbe
ja
xchg
adc
shlb
xchg
in
lcall
push
data16
jae
in
jge
pop
or
mov
lds
jmp
das
lret
in
add
inc
dec
iret
or
fdivrs
std
or
dec
mov
pop
sbb
mov
notb
scas
sub
push
inc
adc
testb
and
mov
in
cmp
mov
xor
mov
daa
cmpsl
rcpps
daa
fsubrp
mov
inc
fcmovu
push
test
adc
or
loop
push
addr16
mov
sbb
imul
out
push
mov
nop
enter
cmp
scas
fimull
cmp
aaa
push
jne
fnstenv
fldenv
aaa
pop
add
subl
imull
shrb
int
pop
data16
leave
xchg
xor
cmpsb
dec
int3
aaa
inc
out
pop
jae
ds
ror
jb
xchg
xchg
fwait
sub
mov
push
ror
aam
cmp
lcall
repnz
xchg
push
push
mov
mov
popf
xchg
scas
pop
or
pop
aaa
cmp
shr
addr16
lods
sub
fisttpll
movsb
mov
mov
arpl
ljmp
lods
xchg
outsb
popa
pop
aas
les
push
sbb
xchg
mov
pop
int3
dec
test
push
adc
lcall
insl
out
mov
dec
adc
push
adc
orps
push
ljmp
mov
jne
scas
fstpt
sar
jmp
xchg
sbb
mov
scas
pop
rcr
xlat
mov
fs
movsl
cltd
push
ja
aas
xor
fadds
sub
ret
in
movsl
jge
push
mov
inc
sbb
sub
popl
mov
fs
stos
loop
jbe
pop
mov
insl
bound
movsl
mov
rol
pushf
pop
ja
xchg
daa
cwtl
sub
add
lods
aas
jge
and
xor
repz
jmp
ret
add
jl
pop
andl
std
mov
shr
jnp
pop
add
icebp
into
add
fldt
jns
cmp
imul
xchg
and
rcrb
add
fwait
cmp
mov
jo
fisttpl
bound
into
shrb
aad
ret
and
aad
jle
mov
test
cmc
sub
sub
and
fdiv
pop
cmp
fisttpl
inc
cwtl
mov
jle
movsb
inc
sbb
aad
xchg
dec
inc
adc
mov
loop
mov
mov
movsl
aaa
lds
lcall
sbb
into
mull
xchg
lahf
fs
jg
push
jge
lds
mov
in
lods
outsb
cmp
test
pop
cmp
mov
call
iret
pop
adc
dec
xchg
pop
pop
cld
pop
and
aam
insb
xor
repnz
int
and
inc
cmp
mov
cli
jo
ret
into
pop
lods
cwtl
pushf
inc
mov
enter
repnz
lret
jbe
dec
jle
xorl
in
jns
pop
xchg
cmc
push
je
dec
test
pop
sarl
pop
fwait
sub
mov
xchg
in
shrl
inc
mov
stos
and
divl
and
cwtl
ja
inc
cmp
jne
push
mov
sbb
or
push
mov
stos
shll
push
push
jno
movsb
dec
out
push
mov
addb
call
cmp
mov
fs
inc
gs
sbb
int3
je
je
rol
fldl
adc
inc
pop
subl
repnz
or
scas
cmpb
sub
cmp
cmp
jns
pop
fmuls
dec
push
std
sbb
push
and
imul
fnstcw
xchg
cmpsl
into
mov
push
orl
aaa
repnz
daa
jo
lock
rcrb
push
jg
aas
inc
sub
cmp
mov
dec
xor
mov
hlt
stos
in
std
cmc
pop
mov
mov
or
mov
aaa
cmp
daa
jmp
cs
xchg
xchg
xchg
xor
lods
xchg
hlt
fneni(8087
push
fsubs
inc
push
and
mov
dec
ds
push
push
or
xor
jg
mov
mov
pop
jnp
and
or
jb
jnp
out
and
sub
xchg
mov
mov
sbbb
cmpsb
xor
imul
mov
xchg
mov
xchg
sub
adc
icebp
in
pop
in
or
aaa
jl
jg
imul
sbb
subb
jecxz
add
loope
jle
sbb
arpl
jbe
mov
xor
testl
in
dec
jbe
in
jbe
xchg
mov
push
sti
adc
push
fwait
inc
enter
aas
lock
pop
and
ja
adc
dec
mov
into
sbb
mov
das
mov
loope
aad
test
push
rolb
leave
enter
mov
adc
mov
addl
lock
imul
adc
in
es
xor
mov
loopne
add
sbb
ret
mov
xchg
imul
aaa
add
push
dec
fwait
mulb
dec
rcl
das
mov
xlat
sub
mov
jecxz
mov
int
jae
mov
fwait
fmul
fdivl
das
stos
add
mov
icebp
fidivrs
pop
sahf
dec
subl
andb
push
mov
stos
ljmp
and
ss
sbb
mov
jmp
mov
mov
repnz
adc
dec
cmp
cmp
loopne
dec
insl
inc
cmp
xor
inc
leave
pop
sub
scas
inc
jmp
rep
cmp
insl
in
add
movsl
iret
mov
sbb
mov
add
ds
nop
cltd
sub
push
lret
mov
movsl
jo
cmpsb
mov
nop
fwait
and
mov
sub
fs
icebp
ljmp
bound
and
push
cmp
call
push
outsl
orl
xchg
imul
mov
mov
mov
dec
movsb
inc
mov
fists
mov
sti
popa
nop
cs
mov
dec
in
nop
mov
cmp
testl
pop
bswap
and
test
pop
add
mov
add
add
fs
and
push
push
cmp
xor
mov
sub
push
or
sub
and
stc
jle
or
hlt
scas
lea
add
test
mov
pop
lods
mov
idivl
ja
xchg
push
jle
imul
sbb
pop
popa
inc
mov
pop
incb
cwtl
call
mov
mov
pop
dec
lock
rolb
pop
lret
lds
mov
outsb
jl
or
pop
xchg
shll
xlat
adc
stc
fdivr
shll
jnp
jo
cmp
dec
push
subb
call
out
mov
pop
lds
and
push
mov
jecxz
mov
rorl
int3
cld
pushf
sub
cs
or
mov
cmp
mov
sub
je
inc
aas
sahf
imul
sub
addr16
add
loope
scas
in
sub
sbb
add
and
xor
xor
pop
inc
or
pop
enter
lcall
in
in
jo
lret
stc
gs
icebp
dec
xchg
adc
aad
and
jo
push
pop
xor
int
pop
add
rcrl
pusha
pop
loope
cmp
jp
test
ljmp
sbb
cltd
mov
das
clc
cmpsb
cmp
or
fidivl
fmulp
xor
and
mov
lock
stos
xlat
inc
pop
gs
and
das
mov
mov
outsl
or
sub
in
test
lods
sub
iret
xor
pop
inc
push
mov
hlt
pop
test
xchg
or
add
jmp
push
lods
add
mov
sub
or
or
mov
mov
pusha
mov
sbb
pop
sbb
not
andb
fcmovbe
cmp
int3
ljmp
scas
mov
test
xor
fldenv
stos
adc
push
sub
dec
xor
vmptrst
and
ljmp
cld
lret
mov
inc
mov
imul
aad
or
push
jg
push
mov
cmp
gs
xor
scas
xchg
mov
mov
cmp
xchg
adc
mov
rclb
test
dec
push
daa
ret
movsb
or
cmp
mov
xlat
jmp
ret
push
pop
mov
xor
adc
mov
push
mov
push
xor
and
or
in
sbb
add
mov
ljmp
dec
dec
sbb
loopne
adc
lcall
lret
in
dec
inc
add
cmpsl
aas
push
and
mov
mov
sahf
dec
xchg
pop
ss
mov
dec
jo
push
add
jbe
xor
push
mov
xorb
sti
xor
rol
push
or
ljmp
int
xor
arpl
shlb
icebp
sbb
jmp
hlt
ret
sarl
mov
mov
sbb
pop
cmpl
jne
mov
pusha
adc
jb
jno
movsbl
stc
jb
int
adcl
into
xor
popa
mov
mov
mov
out
pop
dec
inc
and
push
int
xchg
jae
push
ss
xchg
bound
mov
inc
cmpb
cmp
xchg
xor
cli
ds
insb
addr16
test
cmp
bound
xchg
adc
test
push
push
jns
lods
enter
pop
dec
cmp
dec
ds
sbb
loopne
nop
dec
xchg
dec
sbb
addb
idiv
mov
push
cmp
popa
ds
push
ljmp
jbe
inc
nop
fidivl
fnstsw
stos
jg
aam
jae
adc
mull
push
insb
lahf
out
and
mov
adc
mov
adc
adc
js
fs
enter
test
ljmp
fwait
dec
into
add
push
jecxz
jle
sub
mov
in
mov
xchg
das
inc
loop
cmp
mull
cmc
push
and
mov
jmp
lods
xor
movsb
dec
mov
mov
jmp
sub
test
outsb
hlt
push
in
loope
mov
mov
hlt
dec
sbb
lcall
cmpb
aad
in
out
fisubrs
imul
in
cmpl
icebp
push
jg
xor
pushl
jno
pop
rcl
out
das
xchg
and
cmpsl
stos
pop
or
and
mov
dec
outsb
xchg
adcb
add
ss
sbb
into
iret
mov
hlt
inc
jb
fdivl
mov
scas
cmc
orl
loope
cmpsl
mov
push
jae
pop
inc
mov
aad
enter
inc
pusha
aam
movsb
sbb
das
les
fnop
pop
push
pop
ljmp
outsl
jns
xlat
pop
out
les
shl
or
lods
add
in
push
into
bound
mov
into
xchg
es
inc
pop
jns
add
fbstp
xchg
push
push
add
push
or
push
cmp
jg
test
inc
cmp
xchg
sbb
movsb
neg
aad
dec
pushf
out
outsb
mov
fs
clc
mov
inc
xlat
stos
xchg
pop
push
or
mov
insl
or
or
in
mov
xor
aas
in
fwait
and
int
and
xchg
mov
mov
lds
jbe
js
pop
sub
sub
jp
outsl
push
dec
out
test
mov
outsb
fldcw
leave
xor
adc
mov
das
imul
sbb
jnp
sub
pop
ss
inc
pop
jge
enter
cmp
mov
adc
js
push
sbb
sbb
xor
jl
stos
std
mov
adc
cwtl
ret
inc
push
dec
cmp
mov
dec
add
imul
adc
inc
jns
sbb
out
or
jge
fidivrs
loope
iret
cmp
pop
push
inc
jl
jne
xor
in
or
aaa
jnp
and
loop
and
adc
das
rolb
xchg
pop
mov
fadds
adc
daa
sub
in
in
and
cmp
scas
sbb
cld
adc
ss
lea
cmp
xchg
jp
ljmp
into
xor
push
mov
inc
loopne
daa
push
daa
sub
and
dec
lock
mov
pop
xchg
negl
and
jne
icebp
in
jge
fwait
insl
mov
pop
adc
iret
dec
insl
out
jp
mov
rol
divb
sub
fimull
fsubs
mov
inc
fs
ja
cmp
jo
pop
adc
fstpt
ds
pushf
xchg
in
arpl
lods
dec
je
and
adc
inc
pop
mov
in
stos
mov
push
xor
js
aas
dec
rorb
std
jbe
pop
inc
cmpl
jbe
lods
mov
cmpsl
mov
stos
pop
dec
pop
stos
and
dec
icebp
clc
sub
jp
push
data16
xchg
insb
add
pop
push
lods
outsl
xchg
fdecstp
insb
adc
es
out
push
subl
push
pop
jmp
xchg
push
xor
lahf
cmp
outsl
mov
pop
js
inc
bound
mov
divl
dec
xchg
and
sub
cmp
insb
mov
mov
cmp
push
jnp
test
mov
ds
mov
idivl
pop
fwait
push
lea
and
orl
cmp
inc
jns
adc
cwtl
jo
add
insl
push
jb
incl
mov
xor
and
hlt
in
sub
cld
and
js
pusha
inc
cmp
inc
add
dec
in
xchg
ss
dec
jns
adc
xor
call
mov
add
adc
xor
aam
push
movsb
inc
xchg
sarl
ds
stos
loopne
gs
pop
ret
jne
push
fdivl
cmpl
push
cmpsb
push
loopne
loope
ret
fidivrs
cld
jae
push
lea
sub
dec
stos
cmc
rep
das
shr
int
ret
aaa
stc
in
pop
dec
sub
ret
mov
mulb
sahf
inc
sbb
in
pop
add
inc
cli
addr16
dec
into
pop
push
cmp
mov
jmp
out
adc
mov
test
cmp
scas
adc
sahf
pop
loopne
adc
inc
rorb
ds
sub
pushf
cmc
dec
scas
ret
jnp
mov
inc
shl
dec
ret
aam
adc
aam
insb
adc
xlat
sub
cmpsl
dec
jo
cmp
aam
mov
rolb
fisttpll
and
push
jge
adc
imul
fldl
jge
shrl
jbe
jle
xchg
aaa
sbbb
jmp
out
pop
sub
leave
int
cmpsb
cmpsb
jg
cmc
insl
pusha
clc
cmpsb
test
fwait
xor
repz
inc
movsl
adc
enter
jbe
mov
movb
lcall
xor
mov
sbb
push
mov
mov
jbe
test
mov
cmp
adc
repnz
cmp
cmp
add
jno
je
outsl
les
das
inc
lret
sbb
mov
rep
xor
dec
dec
rcll
xor
pop
adc
leave
pop
mov
aad
int
je
xor
xor
into
xchg
jmp
jbe
int3
imul
and
xor
push
cmp
lds
jb
xor
jge
or
mov
xchg
pop
scas
jecxz
int
xchg
fnsave
pop
cld
add
mov
rcll
repnz
cmpsl
adc
movsb
jecxz
xchg
scas
pop
xchg
pop
sbb
mov
imul
movb
mov
xor
and
sub
pop
xlat
push
fnsave
mov
bnd
pop
cmp
fnstcw
imul
testl
pop
incb
mov
or
push
or
js
push
inc
adc
xor
inc
fidivrs
adc
loope
arpl
and
nop
xor
out
mov
das
xor
or
shrb
xor
inc
push
inc
cmpsb
mov
jp,pt
nop
or
lods
aas
push
scas
bound
xor
std
pop
sbb
jmp
int3
test
jo
imul
or
scas
or
push
jae
daa
push
lock
inc
xor
ret
sbb
cmpsb
xchg
pop
aad
sbb
mov
add
mov
enter
cltd
inc
push
or
movl
out
xlat
mov
mov
cmc
or
stos
and
pop
cwtl
sub
popa
cmp
mov
mov
and
adc
or
pop
push
les
daa
outsb
test
pop
mov
aad
lock
sub
cpuid
or
rcrl
fwait
lret
or
mov
dec
mov
inc
dec
pusha
sub
mov
out
es
rcll
push
push
mul
jb
jbe
push
ja
mov
bound
mov
std
adc
jmp
stc
fildll
or
out
pop
andnps
and
jle
out
aaa
ret
and
rcrl
inc
out
add
out
in
pop
mov
or
sahf
test
test
add
mov
cli
add
leave
and
ret
or
mov
pop
fwait
mov
pusha
inc
push
xor
aas
out
add
mov
cmp
inc
aad
mov
inc
mov
add
adc
push
xor
je
xor
mov
jl
pushf
cmp
push
fstps
sbb
pop
adc
mov
scas
mov
adc
jecxz
or
mov
xchg
add
leave
and
dec
hlt
sbb
fcomps
mov
jl
pop
add
cltd
lock
push
mov
xor
and
sub
mov
or
cmpsb
push
add
mov
dec
mov
cld
add
popf
cmpsb
ret
jle
jo
xchg
lahf
sbb
mov
jnp
mov
push
aam
push
push
fnsave
iret
addr16
adc
cmp
pusha
sahf
mov
adc
fs
cmpsl
inc
pop
je
xor
xchg
pushf
pop
sbb
cld
cmp
mov
js
out
cmp
imul
jmp
insb
loope
icebp
adc
fs
dec
repz
push
int3
in
repz
dec
and
jae
jmp
outsl
leave
fucomp
jl
xchg
das
insl
rol
iret
loopne
sbb
rep
daa
push
insl
mov
jnp
cmp
adc
mov
jne
gs
fdiv
cmp
and
pop
mov
test
dec
xchg
out
hlt
dec
xchg
stc
jl
mov
or
or
in
mov
out
ss
jb
or
punpckhbw
jne
mov
mov
addr16
add
gs
mov
cltd
leave
ss
jl
or
mov
imul
ja
and
and
movsb
jno
sub
mov
xchg
jle
stos
stc
les
popf
pop
icebp
sbbl
inc
test
fs
mov
test
and
popf
mov
lea
push
and
pop
shr
aaa
scas
int3
adcl
out
mov
pop
sti
mov
lds
jae
and
rclb
jp
das
sbb
cmp
xor
mov
inc
js
xlat
pushf
cmp
push
cltd
fsub
fcompl
daa
ljmp
ja
out
and
stos
lcall
fistps
mov
testl
mulb
dec
std
repz
js
push
dec
fisttpl
jecxz
adc
mov
clc
xchg
xchg
lock
rcll
xor
dec
cmp
mov
andb
arpl
pmaxsw
jmp
mov
mov
inc
repz
inc
mov
int
jb
jbe
lea
stc
add
std
dec
dec
mov
add
subb
scas
sbb
pop
lock
fisttpll
dec
jbe
fisubrs
lods
sbb
and
adcl
inc
sar
daa
lret
js
mov
xchg
leave
push
sub
sub
lret
sahf
mov
sbbl
mov
stos
cmpsl
adc
xor
je
inc
insl
sub
mov
bound
mov
push
jbe
jmp
dec
out
movsb
mov
adc
loope
es
pop
lods
shlb
cmp
push
mov
fwait
cmpsb
test
jbe
xchg
test
push
imul
and
cltd
fs
or
hlt
cmp
mov
movsb
out
imul
shrb
dec
cmp
insb
cwtl
jae
mov
jb
inc
lcall
imul
jmp
sbb
cmp
push
loope
divb
xor
out
xor
popa
dec
and
and
data16
in
dec
daa
pop
mov
pop
fldl
sub
jl
push
sahf
test
insl
mov
mov
faddl
movsb
ss
mov
adc
lahf
jno
test
fdivrp
sarl
ret
or
enter
dec
and
mov
and
or
gs
stc
bound
iret
push
jmp
or
movb
and
loop
inc
mov
rcr
pusha
adc
sahf
mov
stos
daa
imul
mov
mov
mov
push
and
clc
repz
clc
cli
pop
aad
sbb
and
pop
ljmp
add
in
hlt
sti
loopne
fstpt
ds
jbe
cmpsl
push
mov
fisubl
in
pop
aaa
fiadds
sbb
cli
lcall
rcll
jge
cmp
inc
insl
fsubl
sub
mov
lea
dec
neg
mov
shrl
in
mov
and
aam
mul
mov
push
add
scas
jge
pop
xor
adc
test
inc
inc
imul
jle
imul
and
xor
pop
mov
popa
add
das
jo
push
fisubs
in
addr16
or
rorl
dec
push
lock
mov
xchg
push
sbb
aas
into
add
test
jae
cld
pop
xchg
pop
and
jbe
movsb
movsb
addb
scas
dec
sub
mov
mov
cmp
adc
out
mov
flds
lods
xor
sbb
pop
jne
ss
xchg
pop
fcoml
mov
arpl
js
inc
nop
mov
lret
iret
insl
push
jge
leave
mov
inc
cmpsb
pop
mov
fistl
das
mov
aaa
movsb
jecxz
test
ret
pushf
dec
sbb
pop
xlat
cmovbe
leave
fsts
cld
das
xor
fbstp
mov
xor
mov
xorb
fsubr
in
mov
movsb
adc
cld
insl
sub
lea
dec
push
leave
dec
sbb
push
fdivrs
adc
fcmovne
and
ret
xchg
push
or
cltd
int3
lods
jmp
sbb
dec
and
ja
fdivrl
or
mov
jle
daa
fwait
cld
mov
mov
das
sbb
fmulp
or
mov
lret
out
lcall
cmp
in
xchg
das
mov
and
cli
sbb
mov
ret
lahf
jp
mov
pushf
mov
pusha
and
sarb
jns,pn
movsl
mov
fstpt
jo
cmp
in
jne
inc
adc
iret
adc
shrl
pop
ss
add
xchg
xorb
push
lahf
cmp
rcll
popa
es
jp
ret
les
add
lret
push
insb
lock
aas
mov
lret
in
xchg
imul
cs
mov
jle
adc
icebp
adc
int
adc
mov
jb
and
mov
sbb
aam
leave
ja
les
in
fsubrs
loope
sti
repz
dec
loope
sub
popa
sub
push
cpuid
xorb
clc
lods
or
dec
movb
inc
push
jp
mov
jg
mov
mov
or
sub
jle
or
xor
repz
push
sub
filds
dec
fimuls
mov
cwtl
in
inc
outsl
dec
imul
out
into
mov
mov
das
cli
jle
ret
cwtl
jl
add
push
out
fdivrl
out
mov
aas
es
movsb
stc
jp
xor
xchg
xor
fadd
sub
iret
inc
push
inc
mov
out
or
pop
xor
sub
adc
test
js
out
cmp
pop
fists
insl
jge
and
inc
and
leave
pop
inc
inc
outsl
in
cli
pushf
enter
loopne
lret
sub
or
pusha
test
or
jb
mov
push
sbb
xchg
std
orb
sar
fwait
mov
sbb
mov
mov
adc
mov
cs
repnz
and
or
mov
sbb
bound
mov
sub
and
sub
subb
add
add
in
leave
ss
cmp
gs
cmp
loop
out
stos
mov
in
jne
and
addl
test
fwait
repz
test
mov
mov
push
cmpsl
pop
inc
xchg
cwtl
test
jg
and
xor
mull
cmp
dec
les
or
adc
shll
ftst
mov
pusha
subl
cmp
fs
cmpsl
gs
leave
and
ret
notb
shll
pop
cs
push
fwait
hlt
sub
ret
xlat
leave
cmp
cld
jno
test
add
icebp
xor
dec
ds
movsl
imul
fbstp
movl
jle
icebp
dec
xor
ss
mov
sbb
rclb
stos
inc
es
mov
jne
addr16
imul
repnz
add
outsb
ficomps
test
push
sub
rcll
jns
mov
lock
xor
mov
adc
sub
incb
cltd
rol
mov
lcall
cmpsb
loope
xchg
xchg
sbb
adc
data16
jmp
or
adc
sbb
sbb
rclb
add
sub
push
movsl
mov
adc
inc
mov
std
mov
stc
or
jo
ljmp
inc
fcompl
xor
out
pop
jnp
pop
iret
inc
mov
test
stos
xchg
xor
iret
cmc
mov
jns
outsb
sahf
adc
and
popa
ds
sbb
out
popa
inc
xchg
fisubrs
xchg
iret
xchg
cwtl
mov
add
cmpsb
je
inc
gs
daa
and
push
xchg
pop
mov
fmuls
outsl
sub
arpl
push
cwtl
aaa
test
sbb
mov
movsl
out
xor
lea
addr16
stc
push
shrb
push
les
jecxz
push
xchg
and
call
outsl
loope
xchg
out
into
in
mov
pop
sbb
loope
fistps
stos
popf
enter
mov
fs
and
test
jge
xchg
push
mov
mov
decb
sub
imul
popa
mov
inc
xchg
adc
test
cli
xchg
in
mov
sti
pop
les
push
xor
out
xchg
sub
daa
movsb
fs
jmp
fidivrl
xor
movsl
fstpl
int3
xor
mov
test
xor
and
xchg
rcll
cmove
popa
pop
addb
pop
inc
ficomps
hlt
mov
pop
jmp
ret
jbe
hlt
gs
sbb
and
add
sub
sub
in
jmp
adc
leave
imulb
jno
jl
fwait
aas
mov
sbb
shlb
mov
daa
inc
shlb
mov
pushf
aas
fs
mov
dec
ljmp
cmc
mov
rolb
mov
jns
dec
pop
jmp
call
mov
imul
rcrb
push
cli
ljmp
dec
test
lcall
jo
pop
xor
mov
cmp
idivl
mov
out
andnps
push
xchg
add
push
nop
pop
push
xchg
add
arpl
fs
ja
call
data16
in
sub
shll
sub
and
cld
adc
scas
hlt
jnp
hlt
and
or
jmp
cmp
int
addr16
es
imul
jge
call
dec
shlb
push
ja
and
cld
popa
dec
push
cmp
ret
dec
cmp
mov
add
cmpsb
fwait
adc
sub
pop
dec
ljmp
fidivrs
incl
ja
imul
pop
and
icebp
fldenv
test
icebp
mov
mov
cmp
and
mov
pop
jecxz
jne
and
hlt
cmpsl
sahf
fdivrl
mov
int
mov
pop
pop
iret
mov
sub
or
and
add
push
int3
loope
bound
lret
or
add
movl
inc
push
jecxz
adcl
xchg
adc
std
or
orl
idiv
hlt
ror
mov
test
or
dec
xchg
jecxz
cmp
jl
in
or
mov
out
sti
faddl
arpl
push
sbb
dec
push
or
mov
loopne
push
out
rol
or
pop
les
into
insl
adc
xor
mov
inc
daa
or
mov
std
push
cmp
fsubl
pusha
pushw
stos
ljmp
repz
cwtl
js
clc
push
sub
cmpsb
cmp
ds
mov
jbe
adc
mov
jecxz
cli
ret
in
imul
into
flds
mov
jmp
je
shlb
adc
mov
ds
xchg
mov
xor
sbbb
mov
mov
test
fnstcw
mov
dec
jecxz
rcr
mov
push
adc
stc
leave
xor
push
mov
aam
lcall
fdivrp
aaa
idivl
sbb
das
xlat
test
mov
add
scas
adc
ret
add
out
hlt
mov
sub
fs
pop
gs
imul
dec
pop
push
cmpl
xor
adc
mov
mov
cmc
and
lods
and
sbb
cmp
daa
cli
push
add
lret
add
cmp
arpl
or
dec
sbb
jnp
sub
sbb
es
clc
aaa
xchg
fwait
test
movsl
push
dec
or
and
lcall
jne
fmuls
pushl
gs
mov
add
movl
int3
rcll
sub
test
dec
out
repz
dec
loopne
hlt
or
and
jns
sar
aaa
in
add
aaa
push
push
test
stos
mov
inc
daa
adc
ss
fadds
mov
in
adc
jne
or
pop
hlt
adc
dec
mov
jbe
mov
in
sub
ret
push
inc
outsb
xor
loope
fbld
jl
fisubl
aas
sbb
or
dec
xor
fbld
mov
inc
mov
push
int3
jge
push
mov
cld
outsl
addr16
sub
lcall
jge
inc
lea
jb
jge
bound
sbb
rorl
fnsetpm(287
les
mov
outsl
bound
dec
test
mov
adc
loopne
ljmp
popf
and
xchg
cmovo
mov
movb
or
lods
mov
test
push
scas
les
test
push
cmc
scas
or
mov
pusha
jge
mov
pop
fsubs
push
mov
les
adc
cli
icebp
mov
add
lret
sub
lcall
add
cmpsl
ret
imul
jo
xchg
xchg
or
add
xor
dec
rorl
push
lahf
int
ljmp
ss
xchg
pop
sub
mov
push
adc
inc
mov
push
arpl
push
and
push
and
loopne
dec
stos
push
sbbl
daa
mov
mov
push
add
mov
add
or
sarb
ja
xlat
mov
xchg
and
pop
dec
fistps
jnp
sahf
cmc
jae
loopne
jle
test
pop
loopne
jl
sbb
mov
xchg
pop
pop
icebp
clc
lds
in
push
mov
je
and
int3
mov
jno
je
insl
cli
mov
adc
cmpsl
push
jl
leave
rclb
testl
ret
pop
push
pop
call
push
es
dec
add
dec
dec
or
lea
movsb
popf
mov
es
fdivl
cmp
data16
sbbl
in
enter
lret
jae
lcall
int3
mov
loope
dec
mov
cmpsl
lcall
lods
xlat
nop
dec
fsubrs
sub
jns
repnz
hlt
add
xlat
ss
test
lcall
pop
pop
mov
imul
push
loope
push
xchg
repnz
insl
pop
pop
cmp
test
mov
cmp
mov
or
cmp
sub
mov
cli
pop
ljmp
call
insb
add
cli
sti
sub
lods
adc
and
pop
mull
pop
pop
popf
rorb
pop
add
add
js
mov
cmp
stos
or
mov
mov
push
lea
push
cwtl
and
pop
jmp
cwtl
loopne
inc
sbb
cmp
scas
movsb
or
lahf
xor
mov
pop
sub
leave
lahf
je
dec
out
inc
sar
fnstsw
and
cmpsb
ja
cmp
mov
pop
test
call
mov
int3
add
enter
popa
popa
push
jbe
cmpsb
leave
xor
clc
and
sub
nop
adc
arpl
pop
les
cmp
divl
pop
cmc
mov
aas
lods
loope
rorl
xlat
jnp
xchg
pop
addb
cmp
add
and
dec
inc
test
in
pushf
pushf
ret
rol
rorl
xchg
pushf
xchg
sti
xor
cmp
or
cmp
pop
lahf
fisubrl
cmp
mov
rcrl
mov
popa
or
jp
mov
sub
mov
jbe
mov
jne
outsb
pop
sub
and
xor
cltd
repz
jge
jecxz
loop
push
das
mov
iret
pusha
push
jecxz
addl
cmp
cs
lahf
cmp
rol
cmp
je
jae
jb
movl
mov
lods
pop
mov
icebp
icebp
inc
int3
jno
data16
sbb
inc
jecxz,pn
inc
xchg
xchg
dec
loope
mov
cmp
inc
mov
jae
imul
push
popa
aad
jmp
or
scas
mov
addr16
inc
jl
fstps
sbb
mov
add
cmp
push
mov
sbb
test
xchg
lods
xor
cltd
push
and
popa
and
fimull
or
ss
add
mov
and
jl
dec
add
ss
jmp
xlat
add
out
stos
mov
cmp
pop
add
push
loopne
and
bound
sub
jns
lds
test
adc
sti
push
adc
mov
leave
aas
xchg
mov
sub
pop
xor
lcall
cld
das
es
xchg
pop
cmp
jmp
aaa
pushf
mov
std
in
xor
sbb
imul
inc
cmp
mov
mov
and
mov
mov
jbe
push
lret
int
inc
sbb
sub
iret
jnp
stos
cmp
sbb
fists
xor
sub
pop
mov
push
mov
fnstcw
sar
pushf
ds
and
out
lock
xchg
cs
sahf
push
es
sbb
sub
fwait
into
mov
add
in
lret
inc
pop
sti
pop
loope
es
sub
out
fnstenv
jmp
adc
pushf
jns
xchg
add
jg
mov
push
and
mov
push
fisubrl
xchg
jbe
xchg
and
push
mov
cmp
xor
xchg
stos
add
mov
or
push
test
push
and
adc
insb
cmc
sbb
dec
lds
enter
fwait
pop
sbb
inc
fcomps
ficoms
fstpl
xor
sarl
jle
pinsrw
inc
jbe
lea
lods
xor
sub
xchg
mov
and
dec
ss
outsl
lahf
cmp
push
pop
ds
aas
bound
push
lret
lret
mov
mov
jmp
movb
cltd
pop
jl
jno
pusha
push
add
push
cmpsl
add
cmp
mov
lods
push
fcoms
enter
enter
jl
mov
jge
enter
mov
rclb
dec
ret
cmp
mov
in
lret
xchg
test
mov
loopne
xchg
pop
xchg
adc
repnz
dec
scas
sub
pcmpgtw
xchg
aad
inc
push
push
push
push
imul
pop
inc
jg
dec
pop
ret
nop
xchg
fadds
call
in
mov
and
flds
jg
dec
sbb
repnz
sti
stc
movsb
test
mov
push
xchg
lods
push
and
mov
sahf
xchg
mov
sub
pop
xchg
and
jne
xchg
outsb
loope
adc
push
and
hlt
mov
lcall
sub
les
das
jg
mov
hlt
add
xor
loope
idiv
sbb
jl
out
adc
xchg
cmp
push
pop
push
xchg
mov
int3
es
stos
push
mov
fmull
fs
test
in
call
cmp
subb
pop
adc
push
int
cwtl
out
push
int
mov
out
faddl
loop
pushf
outsl
out
push
shrb
cs
and
dec
adc
pop
inc
mov
mov
push
dec
leave
pop
shrb
out
out
push
aam
push
mov
fimull
mov
and
mov
aam
push
int
jp
hlt
cmp
and
clc
mov
push
sti
repz
outsb
xchg
aaa
rcll
xchg
dec
push
in
ret
sub
les
fcmovbe
lods
lock
in
outsb
mov
mov
cli
jge
out
nop
out
inc
cwtl
jns
xchg
or
jge
leave
add
insl
insb
rcll
dec
ja
mov
pop
cwtl
mov
ret
enter
lods
aad
mov
bound
aam
xor
jecxz
xchg
sahf
cmp
clc
stc
or
mov
push
call
sub
jo
add
aaa
in
sub
pop
xor
cmp
adc
adc
sti
or
into
fcompl
dec
inc
dec
cwtl
xchg
and
push
pop
dec
mov
mov
fbld
pop
mov
inc
lcall
inc
xchg
xchg
nop
cmpl
test
push
xchg
add
les
fsubrs
xor
test
dec
ljmp
inc
stos
ret
dec
aas
les
inc
mov
ljmp
xor
pop
inc
jle
adc
cmpsb
and
mov
xor
out
fsincos
and
movhps
fisubrl
clc
lcall
mov
out
xchg
pop
lds
jl
cmpsb
add
test
into
inc
and
dec
add
jp
sbb
loopne
add
mov
fstpt
xchg
adc
rcrb
mov
movl
scas
out
push
mov
adc
mov
adc
push
adc
test
in
add
fiaddl
repz
stos
cld
mov
jb
pop
jns
lods
hlt
xchg
es
nop
sub
xor
sahf
pop
pop
movsb
enter
mov
icebp
stos
jbe
ret
jbe
cwtl
jmp
cltd
call
jl,pn
mov
lock
decl
movb
inc
sub
cmpsb
pop
xor
dec
push
arpl
mov
lock
pop
testb
inc
adc
jnp
mov
les
sahf
sbb
sbb
outsl
ficoml
ja
push
repnz
cmp
sub
std
fmuls
jns
mov
lods
scas
imulb
inc
fwait
push
aas
mov
sub
fildll
xor
add
imul
pop
and
pop
movsb
cmp
pop
xchg
stos
aad
push
cmp
ja
stc
cmp
lods
cmp
or
adc
add
inc
cmp
mov
adc
adc
cltd
loope
mov
xchg
lock
daa
and
jo
je
fs
stos
dec
push
xchg
and
xchg
fmull
xor
pop
jmp
jne
pop
sub
imul
loope
pop
cmp
cwtl
fcmovnu
mov
mov
lods
jnp
jg
repz
inc
jae
mov
jbe
iret
mov
sbb
jg
loop
adc
mov
mov
push
ret
xchg
jp
jg
cwtl
xor
push
mov
dec
inc
pushf
pop
ret
ss
cmp
out
cltd
cmp
jmp
push
in
flds
nop
pop
pop
jb
mov
lea
pop
imul
add
lods
xor
jle
mov
aad
adc
mov
mov
and
fcoml
xchg
add
lahf
cmp
and
std
sbb
push
scas
cld
mov
lds
filds
jne
xor
dec
add
push
or
test
push
mov
or
cmp
push
fwait
out
sub
addr16
jne
dec
mov
insb
in
mov
mov
lahf
fdivp
add
cmp
jns
stc
ret
adc
xchg
int3
in
xlat
mov
and
call
adcb
int3
mov
out
add
add
cwtl
push
lods
sti
int
cmp
mov
pop
ror
xchg
int
or
mov
add
neg
cld
repnz
sti
or
iret
mov
mov
pop
push
dec
lock
bound
mov
mov
or
inc
out
imul
mov
xchg
and
rclb
add
test
orb
add
push
jns
jns
mov
push
mov
jns
icebp
mov
add
dec
daa
popa
arpl
das
jg
push
fsts
insl
sub
iret
in
lret
in
fstpl
or
nop
mov
add
loopne
dec
cli
mov
xchg
cmp
dec
or
aas
jo
inc
cli
xchg
popf
outsl
xchg
sbb
sub
add
xchg
fld
cmp
je
lds
dec
stc
stc
sub
in
cmp
inc
jmp
mov
sub
mov
ss
shr
mov
aam
daa
mov
mov
imul
imul
nop
jno
jb
inc
dec
jge
ss
sarl
aad
xchg
or
pop
mov
sub
repnz
mov
push
sub
es
mov
shlb
pop
xor
lea
xchg
xlat
add
push
sbb
mov
daa
jnp
shrl
leave
cmp
test
cmc
mov
sbb
je
cmp
mov
cmp
test
and
sbb
push
ret
push
mov
inc
push
and
shll
cltd
and
loope
or
xchg
test
jmp
mov
lcall
lods
cmp
and
int
or
fwait
imull
and
sbb
addr16
in
pop
dec
jns
xchg
hlt
leave
and
add
aas
dec
dec
jge
and
fstps
jae
mov
repz
sbb
lret
push
jb,pt
lods
jne
sub
jle
sbb
jle
pop
out
stos
jb
and
or
repz
clc
insl
rolb
call
pop
movsl
mov
in
shl
mov
scas
jecxz
cmp
xchg
lds
dec
fiaddl
mov
call
mov
loop
fs
adc
xchg
pop
add
xchg
and
xor
sbb
push
ficompl
dec
popf
dec
sbb
lahf
adc
push
xchg
xorl
mov
inc
pop
push
or
mov
rcl
mov
popa
mov
pop
popa
mov
test
out
sbb
testl
pop
jne
fstl
stos
xlat
lods
mov
jne
add
mov
aas
inc
in
and
int3
aas
push
inc
push
mov
in
ficoml
sub
mov
lods
mov
add
inc
mov
pop
dec
xchg
rorb
jns
fstl
mov
mov
jp
or
sbb
test
insl
sub
xchg
sbb
movsl
jmp
mov
call
mov
addl
pushf
mov
sub
mov
sti
sbb
dec
mov
pop
sti
outsl
inc
cli
sbb
mov
mov
pop
shlb
mov
sahf
aam
jae
jo
push
add
mov
outsl
leave
and
pop
lea
popa
data16
push
mov
jge
ret
adc
jbe
sub
mov
pop
ss
jecxz
ss
lods
loopne
jns
pop
push
imul
jl
pop
xchg
shrb
inc
cmp
stc
dec
push
mov
add
adc
arpl
push
push
clc
cmp
xor
bnd
adc
aam
adc
dec
loope
sub
or
outsb
mov
mov
lcall
ds
aam
frstor
cmp
adc
fiadds
imul
pop
bound
decl
mov
js
ja
cld
das
mov
pop
mov
aas
ja
pop
cmp
sub
mov
mov
inc
push
jl
ds
cwtl
cwtl
pop
repz
mov
gs
pushf
push
jle
xchg
push
outsl
out
imul
inc
sbb
push
pop
jecxz
push
out
adc
sbb
sbb
mov
and
loop
mov
mov
jge
mul
cs
pop
push
nop
jno
jl
popa
inc
fmuls
out
movsl
pop
and
xchg
leave
add
and
adc
in
jmp
or
int3
and
bt
pop
ljmp
lret
std
cs
pop
pusha
std
pop
jp
dec
xchg
int3
pop
mov
jnp
mov
or
loopne
sub
rcll
jns
and
mov
jecxz
or
lret
pop
push
js
imul
aaa
imul
adc
sbb
cmp
adc
or
mov
out
or
out
pop
cmp
repnz
dec
sbb
js
and
loop
int3
or
movsl
cltd
cmp
jge
xlat
push
mov
lret
js
dec
das
ret
lahf
dec
sbb
shll
xchg
xlat
or
stos
int3
cmp
mov
sti
adc
cmc
xchg
popf
mov
imul
inc
or
clc
or
fldcw
int
popa
movsl
cs
cmp
outsl
divb
and
fistl
jmp
imul
mov
sbb
repz
sub
push
and
bound
imul
imul
dec
adc
sbbb
fisttps
mov
push
lahf
push
mov
sbb
test
add
adc
xchg
xlat
cmpsb
pop
mov
gs
cmpsl
clc
ljmp
lret
and
mov
ljmp
xchg
push
push
fidivl
push
push
jmp
sub
sbb
aad
inc
dec
gs
mov
aaa
mov
pop
sub
imul
bound
dec
cmp
sbb
gs
add
mov
sub
cmp
test
es
push
mov
adc
sbb
je
jne
or
push
adc
jb
gs
lret
jle
and
mov
sarb
xchg
ljmp
test
jae
mov
int
je
je
fldenv
add
mov
lock
arpl
xor
dec
sbb
outsl
test
dec
inc
mov
das
pop
or
push
mov
adc
xor
cli
insb
adc
mov
dec
sbb
jns
or
or
and
inc
dec
add
jo
push
ja
scas
inc
je
aad
leave
scas
stos
inc
dec
nop
bound
inc
test
nop
mov
enter
push
jl
mov
lods
mov
adc
mov
jecxz
jae
scas
jo
pop
mov
aam
movb
cmp
push
add
in
dec
xchg
fsubs
sbb
popl
or
imul
xchg
jge
sbb
jmp
cmpsb
fs
ss
mov
inc
int
push
jmp
lods
add
xchg
pop
movsl
mov
xlat
addr16
dec
dec
arpl
in
add
or
and
and
jmp
mov
imul
sub
jns
or
pop
lret
push
add
xchg
lcall
pop
rcrl
mov
cmp
xor
incl
sub
into
mov
sbb
sahf
adc
inc
pop
scas
cmc
imul
sub
cmpl
pop
ret
lea
xor
nop
xchg
popa
dec
punpcklbw
fwait
pusha
jle
rcr
call
les
or
fimull
in
insb
icebp
out
pop
xchg
fmull
mov
sub
jns
incb
adc
inc
mov
mov
arpl
stos
adc
insl
into
inc
insb
or
xorb
iret
add
sbb
sub
xchg
mov
and
mov
jno
dec
popf
leave
jnp
int3
dec
mov
int
adcl
lods
push
sti
sub
dec
mov
sti
faddl
mov
stc
inc
and
push
es
cmp
loope
mov
les
or
push
aas
adc
push
stos
ret
xchg
cmp
mov
push
mov
inc
mov
mov
jb
shl
fisubl
gs
jo
out
fistps
lcall
xor
mov
imul
mov
mov
aad
les
cmc
adc
faddl
pushl
push
pop
into
test
cmpsw
fiaddl
mov
inc
jb
mov
inc
das
xor
dec
cmp
adc
add
cmp
jge
stos
loopne
adc
in
ret
fs
sar
fcompl
insl
inc
pop
aad
or
lea
push
sub
fmuls
dec
or
das
sbb
mov
inc
test
pop
out
push
fiadds
leave
std
decb
je
and
xchg
jg
add
loop
dec
dec
adc
sbb
pop
mov
insl
inc
pop
fsubs
inc
ds
dec
fs
push
cmp
push
js
push
xor
add
ds
icebp
mov
cmp
cmp
jo
test
fs
mov
int
jbe
icebp
test
mov
xor
in
dec
mull
stc
je
mov
cmp
sbb
adc
and
hlt
adc
inc
in
sbb
inc
jle
inc
scas
ret
push
mov
xchg
pop
mov
aas
nop
and
icebp
bound
dec
out
movsl
out
rcrb
lods
pushl
std
cmp
out
cs
sub
lods
inc
xor
outsl
and
mov
xchg
lret
fs
sbb
xor
stos
jb
loopne
daa
call
rcrl
cmp
shrl
sub
sbb
dec
iret
cmpl
and
push
test
add
mov
mov
sub
xor
push
scas
aad
nop
js
mov
ds
inc
frstpm(287
jne
inc
adc
dec
push
mov
sbb
test
adcb
es
or
sarl
cmp
popf
or
dec
jg
rcl
dec
aam
testl
pop
cmp
loop
je
lcall
sbb
push
lods
xchg
dec
inc
hlt
pop
lock
jmp
adc
insb
pop
stc
repnz
or
fs
push
test
xlat
mov
mov
je
lea
loop
xchg
push
xchg
pop
pop
mov
sbb
add
out
sub
jge
lods
fbstp
dec
mov
mov
mov
dec
mov
xchg
xlat
lds
fidivrl
mov
pop
dec
xor
pop
dec
std
and
ret
repnz
out
jmp
push
adc
push
mov
mov
xlat
scas
inc
adc
inc
xchg
mov
cwtl
or
inc
jbe
push
or
adc
mov
push
sbb
or
dec
jne
mov
mov
sbb
push
nop
adc
insl
rcrb
jno
fwait
cmp
mov
inc
ljmp
dec
sub
fadds
and
xchg
pop
sbb
and
adc
dec
xor
loope
mov
leave
pop
hlt
bound
in
repz
push
cs
mov
aaa
add
dec
xchg
xchg
fistl
fmul
inc
daa
mov
or
out
out
xchg
rclb
sti
loop
or
in
jnp
mov
xchg
dec
aad
popf
pop
cmpsl
data16
adc
out
sub
cmp
test
push
mov
adc
addr16
inc
imul
fwait
iret
mov
je
lahf
cmp
lea
sub
aas
pop
jne
cs
push
cmp
pushf
xchg
or
jg
aaa
cmp
sbb
cmp
sub
out
dec
or
and
arpl
add
enter
in
neg
mov
cltd
ja
pushf
pop
icebp
shrl
scas
inc
lret
inc
mov
flds
stc
pop
icebp
in
pop
adc
pop
mov
aas
lds
data16
aaa
dec
cmp
aaa
or
inc
in
sbb
out
mov
aad
je
pop
xchg
imul
mov
cmc
cwtl
call
xor
je
push
and
ss
cmp
cld
xorb
mov
int3
dec
add
ret
mov
xchg
mov
out
sti
inc
mov
jl
loopne
fs
enter
mov
cli
je
mov
pslld
and
xchg
hlt
lock
pop
pop
sub
cltd
aam
pop
jb
and
mov
scas
test
mov
push
scas
cs
fidivrs
and
xor
repnz
push
testb
outsb
and
cs
pop
lea
test
sbb
lods
call
mov
outsl
lock
fisubrl
pop
push
jge
inc
popa
into
lock
mov
dec
lock
loopne
mov
push
sub
cld
lcall
fdivrl
dec
imul
or
das
rclb
sbb
cmp
jo
out
aas
mov
push
mov
mov
mov
sbb
xchg
xlat
stc
lds
pop
or
and
outsb
mov
push
nop
orl
orb
popa
sbb
mov
inc
aad
int3
adc
mov
push
pop
out
fwait
ret
mov
push
lds
jmp
or
pop
dec
mov
sub
mov
repnz
or
mov
incl
mov
or
imul
ret
daa
cmp
mov
xor
mov
mov
push
push
cltd
adc
aam
test
cmp
sbb
fnstsw
stc
dec
mov
pop
fisubs
rolb
iret
inc
mov
cmpsl
test
sbb
push
hlt
sbb
or
in
lock
fucomip
or
dec
cmp
pushl
push
sbb
imul
pop
xor
popf
lahf
loop
xchg
in
aad
add
and
repnz
repz
mulb
lods
cmp
jbe
inc
inc
push
jl
pop
add
cmpsl
pop
xchg
scas
mov
pop
sub
push
fcompl
pushl
daa
sbb
xchg
pop
aam
add
cmp
cmp
les
and
pop
cmpsb
or
xor
add
xorl
jo
pop
xor
mov
rorl
lea
add
pushf
mov
cli
inc
inc
mov
add
push
movsl
outsl
and
bnd
insl
inc
repz
adc
jns
es
ss
and
adc
loop
fcmovnbe
loopne
lods
sbb
xchg
lret
mov
jg
ret
ja
test
add
iret
jae
xchg
adc
cmpb
cmp
clc
movsb
lds
test
fdivr
fs
push
lret
mov
sbb
push
enter
add
subl
sbb
aas
pusha
jns
ljmp
mov
and
into
data16
test
push
lcall
mov
push
lcall
int
icebp
dec
mov
or
loop
test
jmp
pop
lret
push
pop
insb
mov
insl
popf
push
enter
push
sbb
or
cmp
or
dec
shrl
call
jns
into
mov
and
jnp
jge
xorl
cmpsl
daa
push
xor
mov
lret
imul
out
aas
xchg
sarl
inc
sub
das
orl
rolb
adc
xor
mov
adc
adc
popf
ret
loopne
mov
arpl
in
je
inc
pop
jno
xor
addr16
sub
xor
mov
adc
std
into
and
js
push
js
pop
gs
test
mov
xchg
mov
push
and
stc
adc
xchg
push
xchg
or
outsb
push
sahf
pop
dec
jnp
xor
bound
add
cmp
insl
mov
orb
test
out
dec
and
push
pop
dec
roll
jae
stos
or
push
addr16
sbb
lcall
xlat
sahf
fsubrs
fs
aad
enter
lds
daa
mov
xor
negl
int
sar
inc
aam
sbb
sbb
xchg
jg
and
push
iret
mov
push
loop
not
sahf
pop
xchg
mov
in
mov
pop
jb
adc
lods
add
push
or
popa
fldl
imulb
testl
in
sbb
mov
test
mov
mov
push
xchg
pop
lock
xchg
or
std
sbb
sbb
outsl
fbld
lods
nop
inc
sub
lret
push
push
fsubl
lcall
loop
ret
aas
addr16
aam
xor
jbe
jg
in
into
xor
sbb
mov
aam
addl
lock
mov
or
stc
cli
lods
inc
inc
xchg
dec
aaa
mov
xor
push
test
xor
pop
outsl
inc
sub
lds
sarl
rolb
sbb
and
rclb
dec
lds
mov
arpl
aaa
cmp
je
loopne
clc
and
push
pop
hlt
pop
mov
or
popa
cs
and
and
ret
test
adc
filds
lea
xor
cmp
adcl
xor
add
pop
or
sub
js
xlat
and
lods
cmp
fisubs
xchg
xor
lods
or
or
cmpsl
dec
repz
add
sarl
xchg
mov
add
arpl
mov
cmp
dec
out
es
fs
pop
sub
lahf
dec
les
sti
jns
xor
cmp
push
loope
hlt
sbb
cs
js
push
sub
mov
push
movsb
lret
jp
shrl
movsb
xor
pop
cs
out
mov
jmp
and
or
ror
int3
xchg
sub
or
pop
lret
and
rol
rorl
mov
imul
jbe
int
and
xor
test
cvttps2pi
sub
sub
push
sbb
mov
pop
push
cli
pop
clc
cmpsb
mov
ljmp
cmpsb
xor
xlat
dec
or
inc
rcrl
cld
aaa
or
out
cs
test
pushf
loope
ljmp
pop
adc
xchg
jb
into
std
popa
andl
pop
pop
loop
rorl
add
inc
or
stos
mov
icebp
scas
out
inc
in
xor
pop
mov
sbb
ror
int
hlt
cmpsl
jno
sbb
daa
sbb
test
mov
pop
fsubl
xchg
fadds
push
fimuls
fcmove
test
jl
leave
out
dec
lcall
scas
dec
mov
xchg
pop
stos
scas
pusha
xor
stos
mov
mov
fadds
sarb
loop
dec
loopne
sub
cmp
rorb
cltd
aaa
call
add
lods
cmpsl
cmp
fidivrl
lods
cmp
lret
mull
cmp
xor
jo
imul
jmp
cmp
inc
and
not
xor
cmp
xchg
xchg
sub
imul
cli
mov
xorl
add
pusha
push
testb
and
mov
sbb
pop
mov
sar
pushl
dec
mov
dec
es
adc
inc
xchg
inc
adc
xchg
jnp
jmp
loope
out
add
movsl
test
and
sub
xchg
jl
push
mov
and
leave
addr16
cmp
imul
push
mov
cmp
xor
mov
sbb
insl
mov
test
xchg
mov
and
jbe
sbb
push
pushf
lods
xchg
mov
cwtl
mov
dec
std
rorb
pop
push
cmp
clc
xor
aas
addr16
lock
jbe
jge
aaa
and
pop
cmp
out
enter
xor
sahf
cmp
roll
leave
mov
je
lcall
adc
and
outsl
lcall
divb
inc
lcall
mov
pop
mov
cmpsl
cltd
inc
movsb
sahf
sbb
mov
xchg
cli
jne
ret
outsl
mov
jmp
sbb
pop
mov
sbb
mov
sbb
in
out
in
xchg
pop
adc
repnz
sahf
aam
inc
mov
dec
lods
mov
sti
dec
std
daa
out
mov
dec
jae
xor
xchg
or
xor
subl
xor
cmp
or
aaa
sahf
push
xchg
jne
dec
jo
mov
aas
sub
das
repz
dec
and
inc
out
imulb
int
lds
and
insl
push
and
das
or
mov
repz
insl
subl
hlt
jg
pop
sub
dec
dec
rcll
and
lods
fsubs
js
ljmp
inc
and
xor
and
sarb
push
push
sbb
roll
push
cmp
call
insb
jbe
in
mov
mov
sub
inc
cmp
movsl
popl
in
fisttps
adc
or
ret
add
mov
add
in
pusha
inc
xor
cmp
mov
jle
sbb
cmp
jo
add
lcall
rclb
push
imul
jl
mov
test
lahf
dec
pushf
pop
dec
decb
stos
sbb
imul
cmpsl
mov
in
sti
pop
fcom
aas
mov
mov
je
mov
inc
rclb
xor
pusha
sti
mov
push
dec
shrb
faddp
ljmp
call
out
pop
test
cmp
xor
hlt
popa
sbb
je
shll
jl
sub
stc
int
in
ret
flds
add
push
sbb
mov
out
sbb
xor
jnp
jne
xchg
es
pop
mov
push
jmp
mov
mov
fs
mov
pusha
out
sbb
cmp
rolb
mov
and
test
dec
in
movsb
test
sar
mov
movsb
push
push
sbb
int
pop
pop
xchg
push
mov
shlb
ret
sub
cmpsl
les
jb
inc
xchg
test
pop
push
lahf
lret
aas
cmpsb
push
mov
hlt
and
icebp
stos
ja
dec
pop
push
cmpsl
gs
rcl
mov
int
push
jle
lock
dec
inc
inc
push
push
pusha
das
lods
bnd
mov
xlat
mov
cmp
inc
pop
fisttps
push
inc
pop
in
inc
int3
push
add
pop
movsl
lea
outsl
out
pop
mov
gs
bound
ljmp
dec
mov
inc
sarl
lods
xor
ret
cmp
stos
out
sar
pushf
test
pop
fdivp
xchg
add
mov
pop
jne
aam
out
fsts
gs
push
and
pop
jmp
lods
movsl
pop
js
aaa
push
sbb
fcoms
in
cmpsb
fbstp
jle
js
popf
enter
pop
push
into
mov
subb
test
in
iret
push
and
cwtl
mov
outsb
movsb
mov
push
inc
pop
xor
pop
and
repz
repnz
stc
lds
pusha
test
mov
pop
aam
push
cmp
test
stc
cwtl
stos
addr16
or
cmpsb
jp
or
lock
lahf
sbb
fcmovnb
nop
ror
rorl
rcl
cltd
stos
idivb
jno
test
push
jl
mov
lret
into
mov
sarb
sbbl
das
rcll
arpl
adc
cwtl
ret
ficomps
push
fsts
adc
cld
imulb
mov
lock
shll
mov
lods
inc
mov
mov
jge
sub
decb
xchg
clc
call
dec
imul
adcl
gs
lods
cld
dec
cmp
pop
iret
rcl
dec
fs
sbb
loopne
jmp
lahf
test
cwtl
dec
rorl
jns
pop
and
inc
ret
imul
push
cld
mov
xchg
jg
test
int
test
inc
bound
mov
outsb
stos
fs
dec
rcr
or
into
in
fiadds
mov
test
enter
inc
add
xchg
xchg
inc
adc
mov
jno
and
push
xorb
push
ds
jne
fcoms
dec
stos
cwtl
es
sbb
test
add
or
mov
lret
jo
inc
dec
bound
jns
mov
cmpsb
mov
stos
add
popf
or
push
inc
mov
rcrl
stos
cmp
xchg
jle
sub
xchg
aaa
adc
vsubpd
iret
mov
cs
ja
mov
add
aas
push
insb
popf
sub
sbb
jle
mov
jbe,pt
mov
in
aad
cmp
out
fsubl
sub
adc
push
frstor
cmpsl
lcall
mov
push
sub
rclb
xor
insl
mov
add
mov
xchg
insb
xchg
push
jo
test
mov
out
push
into
sti
stc
stc
adc
or
push
jp
cmp
jnp
scas
test
pop
and
out
in
pop
shll
aaa
xor
cmpb
inc
into
je
jge
jle
mov
pop
mov
jp
inc
sbb
lret
es
negb
addr16
nop
mov
fmulp
adc
subb
inc
xchg
shlb
fs
imul
ud0
xor
mov
mov
adc
hlt
in
inc
dec
add
mov
out
push
sub
xor
jmp
jle
stos
fldcw
push
rolb
pop
dec
and
mov
inc
adc
popa
mov
inc
stos
add
test
xchg
adc
jl
fsubrl
loopne
dec
je
rclb
stos
xor
cmp
out
ljmp
cltd
std
jne
loope
mov
push
adc
adc
ljmp
fadds
inc
out
jl
pop
sarl
xor
out
mov
dec
add
ret
pop
and
xchg
ret
pop
mov
cmp
pop
shlb
ret
push
cmp
and
cmc
je
add
mov
xor
insl
or
mov
rcrl
jb
inc
mov
aad
mov
sub
popf
jns
push
lods
imul
sbb
push
inc
leave
add
sub
into
adc
or
inc
jo,pn
mov
js
pushf
pop
sbb
push
and
or
jb
mov
push
pop
pop
cmp
sub
std
jg
outsl
adc
pop
ja
add
neg
std
loop
cmp
mov
stc
scas
clc
rclb
xchg
pop
pop
pusha
fnstenv
lcall
add
imul
push
pop
mov
ffreep
dec
dec
pop
clc
push
sub
movsb
test
fistpl
mov
ljmp
dec
insl
xchg
jl
lret
mov
push
push
adc
ret
push
loope
fsts
loope
add
dec
xchg
popf
vrsqrtss
test
icebp
nop
xor
jg
into
popf
cmpsl
imul
gs
int
movsb
dec
scas
and
jmp
aaa
in
push
pop
aam
xchg
mov
daa
fwait
loop
mov
sbbl
repz
test
popf
imul
aam
aas
int
out
dec
cmp
adc
sbb
mov
mov
pushf
leave
sbb
stos
xorl
add
lea
test
rorb
push
cmp
ret
jp
jle
inc
sub
insl
fadd
sbb
mov
inc
leave
in
aad
or
int
mov
mov
pop
test
cmp
shrb
pextrw
inc
aas
push
push
sub
lcall
jg
adc
pop
xchg
inc
sti
sub
sarb
ja
cmpl
int3
inc
mov
arpl
adcb
fs
or
inc
addl
sub
and
push
lahf
pop
mov
push
or
in
pop
mov
xor
lret
dec
xor
add
sub
mov
and
or
in
jbe
xor
vpmaddwd
imul
popa
gs
out
add
sub
outsb
dec
cmc
ds
xchg
jmp
movsb
adc
movsb
enter
xor
jno
cmc
jle
mov
mov
xchg
fdivl
xor
ret
pop
in
lcall
mov
mov
jg
add
sub
lcall
jo
sub
mov
fimuls
inc
push
mov
and
cmp
cmc
idiv
adc
xchg
out
subb
bnd
push
cmp
sti
cmp
jo
adc
jg
out
add
mov
icebp
mov
mov
push
sbb
dec
push
aas
jns
lcall
icebp
lret
es
mov
mov
sbb
adc
cmp
mov
add
or
aaa
lds
ret
stos
pusha
mov
and
fs
mov
xchg
mov
xchg
ds
sbb
cwtl
or
jl
out
xor
xlat
or
movsl
pop
xor
mov
xor
rorb
cmp
and
cltd
ja
adc
push
not
mov
cmp
cs
mov
pop
jbe
jb
loope
adc
adc
insb
dec
cmp
sti
inc
jo
fwait
std
pop
jae
mov
jb
in
idivl
mov
adc
enter
mov
cmp
fstpl
fdivr
or
fnstsw
aas
jnp
in
lds
rclb
push
mov
xchg
dec
mov
pop
mov
cmc
xchg
inc
sub
mov
into
xchg
sti
xchg
push
xlat
out
inc
insb
ljmp
inc
roll
lret
mov
aaa
pushf
sbb
adc
mov
mov
movl
rorb
mov
jae
call
mov
shlb
xchg
add
sbb
pop
mov
lock
mov
pop
sub
pop
xor
repnz
mov
push
xor
dec
icebp
out
int
sub
nop
inc
mov
out
cmp
mov
and
adc
sub
and
xorb
data16
adc
andl
test
out
sarl
xchg
stos
rcrl
and
pop
add
sub
bound
sub
lods
sub
fsubl
xchg
mov
sub
and
xchg
mov
cmp
xchg
lret
pop
cmp
mov
pop
jno
das
sti
sbb
xchg
cmpsl
int
movsl
bound
inc
movsl
addr16
mov
push
ds
xor
into
ja
les
add
cmp
out
ret
adc
aad
xchg
mov
add
xor
prefetch
push
fs
xchg
andb
inc
cmp
jnp
and
mov
jnp
cmp
jne
jae
outsl
jge
mov
xchg
mov
mov
mov
test
xchg
les
es
dec
adc
push
adc
subl
push
inc
pop
jae
lods
and
test
fistps
adc
testb
push
and
push
push
lods
adc
jecxz
push
fsubs
or
fistpl
adc
lds
and
push
fwait
xlat
jns
jl
jb
addr16
push
push
and
jae
int
xchg
push
outsl
adc
pop
fdivp
int3
add
pop
sub
xor
lret
lods
hlt
insl
aam
je
xchg
aad
pop
jg
loope
sahf
cmc
pop
and
stc
mov
cmp
sbb
inc
mov
push
cmpsb
sbb
xchg
pop
mov
mov
jnp
push
xchg
jo
nop
mov
xor
xor
add
clc
dec
pop
stos
jge
cli
mov
mov
fstp
push
push
mov
mov
fsin
xor
xor
shll
mov
or
xchg
or
mov
ss
jg
adc
push
ret
add
mov
out
mov
or
jb
in
mov
mov
add
movsl
inc
pop
das
fcomip
sti
or
adc
mov
sub
mov
xor
into
jnp
loopne
xchg
arpl
push
andl
pop
leave
mov
push
inc
call
pop
aam
mov
adc
stos
rcrl
add
pop
cli
rclb
jle
xchg
fsubrs
push
or
pop
orl
rcrb
jp
jge
xlat
mov
daa
sbb
lods
sub
xchg
mov
leave
mov
in
adc
inc
mov
push
imul
dec
insb
jnp
sbb
pop
int3
cmpsb
mov
jl
mov
dec
mov
shll
notb
je
or
push
mov
bound
cld
sub
dec
sbb
pop
nop
aaa
cmp
mov
xlat
pushf
pop
sub
and
popa
mov
xor
pop
rol
add
shrb
arpl
mov
cmp
push
shlb
das
std
out
dec
stos
mov
pop
push
lods
inc
push
jl
ja
decb
movsl
sub
adc
adc
push
fdiv
out
lock
and
pminsw
mov
inc
inc
xor
sub
jmp
xor
cwtl
aaa
mov
xchg
cmpsb
and
inc
jae
cs
cmpsb
movsb
popa
or
xchg
add
rcl
pop
pushf
cwtl
repz
lret
rcl
xor
lds
xchg
fstps
in
pcmpgtw
iret
cmp
jle
jecxz
cs
cmpsb
enter
icebp
push
sahf
xchg
push
jns
pop
sub
ror
fbstp
adc
and
jmp
in
cmpsb
cmp
test
nop
mov
dec
je
rorl
fisttpll
cmp
lret
sub
imull
fsubrs
and
lods
pop
fsub
adc
shrl
out
mov
into
xchg
popl
push
xor
arpl
add
aam
das
cmp
adc
lds
push
inc
push
rcrl
xor
repnz
popf
jecxz
push
xor
sti
lods
adc
push
sub
push
jl
fcmovne
dec
iret
sbb
aam
add
icebp
leave
and
stos
pop
fucomip
pop
sub
outsb
add
push
pop
sbb
xchg
xchg
push
icebp
push
mov
xchg
scas
das
mov
int3
lea
testb
push
push
pushf
push
imul
int3
fs
mov
ss
call
je
lea
lcall
out
jno
sub
push
cmp
in
pop
mov
inc
fs
mov
lret
push
aad
xchg
ja
gs
in
ljmp
jae
sub
lret
adc
mov
sbb
xor
lret
xorl
adc
sub
push
movsb
add
jge
mov
cmpl
push
jmp
dec
clc
jecxz
dec
insb
jne
sub
pop
sbb
dec
icebp
aam
pop
mov
out
cmp
pop
cmpsb
jle
mov
or
mov
mov
push
fcoml
pushf
shrl
push
sub
aam
lods
outsb
lods
sub
lods
ret
daa
mov
push
daa
lds
and
lods
sbb
pop
daa
ret
cmc
dec
xor
jne
hlt
mov
dec
insb
sbb
sub
cmp
shl
in
stc
cmp
pop
lock
es
mov
fldl
inc
ljmp
ficoml
sti
repnz
loopne
sarb
inc
xor
aaa
mov
sub
inc
xchg
dec
xor
cli
or
xchg
inc
inc
pop
in
jo
xchg
shl
sbb
in
and
pop
jg
cmp
mov
cmp
inc
les
in
push
push
ja
out
leave
cld
dec
push
inc
mov
loope
xor
push
fnstcw
pop
push
adc
daa
push
xchg
movsb
out
orb
aaa
mov
add
mov
mov
mov
into
inc
xchg
cltd
cmc
in
ja,pt
sub
stos
int3
loop
outsl
push
call
cld
test
scas
mov
pop
fisubl
ds
aaa
cltd
add
into
pop
scas
or
add
fadd
fdivrl
cmp
cmp
pushl
adc
addr16
and
mov
in
bound
mov
jae
pop
ljmp
jge
jmp
inc
xchg
cmp
jmp
sbb
push
push
iret
mov
add
mov
dec
loop
ja
adc
addr16
cmp
or
wrmsr
pop
inc
push
out
loopne
out
pop
scas
orl
mov
jge
dec
dec
aaa
adc
and
jae
stos
xor
imul
jae
bound
repnz
les
sub
mov
sbb
mov
cli
jo
pop
mov
pushf
xchg
mov
out
sbb
imul
testl
mov
sahf
dec
or
xor
insl
xor
clc
and
push
xor
rcrl
fistps
pusha
jns
sub
shrl
inc
and
mov
xor
jmp
push
pusha
xor
sub
dec
shll
mov
and
cmp
push
imul
stc
idivl
fbld
mov
mov
inc
sbb
stos
test
out
aaa
cmp
movb
iret
and
call
jnp
dec
cmp
cmp
in
push
cmp
push
sbb
mov
cmp
sbb
mov
fidivrs
fs
aad
mov
cs
jb
mov
or
out
shll
mov
xchg
mov
or
pop
in
pop
movsb
pop
lods
cmp
mov
mov
sbb
dec
lahf
push
int3
inc
icebp
movsl
mov
push
scas
mov
sub
add
fs
ljmp
test
push
and
ja
xchg
pusha
sbb
imull
scas
or
pop
push
jns
pop
dec
arpl
je
sbb
out
mov
jb
shll
xchg
scas
xchg
mov
in
sub
pusha
sarb
mov
xchg
in
imul
sub
xor
sarl
insb
test
mov
sub
mov
jno
mov
jbe
sbb
cmp
ret
jae
mov
xor
test
add
jg
cli
adc
test
js
movsb
jle
lahf
lock
jge
test
sub
cmp
sbb
fisttpll
ret
rcll
mov
repnz
cwtl
into
inc
xor
jle
push
and
fistps
outsb
mov
cmp
dec
pop
pushf
cmp
inc
insl
push
jmp
xchg
push
mov
or
cmp
hlt
or
ret
pop
sbb
mov
jp
outsl
shr
sub
fisttpl
imul
imul
inc
push
repz
mov
and
pop
add
mov
mov
mov
inc
jg
data16
test
lcall
push
xor
mov
cmpsl
notb
xchg
in
cmp
movb
mov
int3
subl
mov
inc
pop
pop
int
jmp
sub
shrl
aad
mov
jecxz
push
mov
bound
mov
ds
xchg
std
outsb
loopne
out
call
mov
sbbl
inc
sbb
ljmp
mov
xchg
out
jb
push
push
or
xor
sbb
rcl
stos
aam
adc
rclb
inc
aas
push
cmp
sbb
insl
popa
and
mov
cli
movaps
sbbb
xor
fimuls
push
xchg
incb
inc
sbb
or
das
push
add
in
dec
cmp
fwait
popf
push
or
inc
test
jp
mov
lahf
cmp
in
je
and
dec
or
pop
outsl
cltd
out
shrb
or
roll
mov
js
xchg
aad
jbe
stos
adc
inc
lahf
fimuls
jg
xor
insb
add
arpl
rorb
stos
sahf
popf
adc
in
sub
aad
outsb
and
cmp
cmc
and
clc
sti
jle
lret
xchg
out
test
pop
int
orl
sbb
jmp
lock
jge
popa
fidivs
push
xchg
ficomps
das
sbb
push
mov
jl
push
aaa
lcall
scas
or
rorb
xor
inc
clc
stos
dec
popf
adc
rcll
ljmp
add
mov
mov
imul
or
xchg
xchg
out
pop
pop
outsb
xor
stos
mov
push
push
inc
aas
add
inc
sbb
insb
push
aas
mov
rorl
jns
repnz
push
jmp
ss
xchg
lret
iret
jg
ds
push
loop
inc
dec
cltd
xorl
jo
mov
fdivrs
movsb
inc
pushf
jns
scas
and
mov
ror
ss
inc
lret
pop
cmp
test
jl
orb
or
sarl
cwtl
lret
xchg
fdivs
push
mov
je
dec
push
and
fwait
dec
jecxz
mov
push
mov
and
adc
xchg
or
lret
test
push
mov
fldcw
xchg
or
and
fsubs
and
scas
push
clc
sub
lret
pop
fsts
mov
mov
adcb
xor
inc
sbb
lret
rol
scas
push
out
inc
jg
nop
xchg
cmpsl
push
cmp
lock
xchg
aam
inc
ret
jb
cld
xor
or
cmp
xchg
mov
clc
jle
arpl
std
movsl
repnz
mov
rcrb
addb
testl
inc
outsb
orb
sarl
gs
sub
cltd
out
pop
jge
push
xchg
addr16
mov
scas
jno
subb
mov
sub
mov
mov
popf
adc
xchg
or
mov
cmp
test
sbbl
je
xor
pop
stos
or
ljmp
inc
fildl
jo
out
sbb
out
jecxz
loopne
mov
loope
lds
in
ret
mov
jl
in
cmpsl
push
xor
and
fistps
cs
fsubs
mov
cltd
sbb
dec
push
sahf
fsts
testb
ror
or
jns
rcr
and
std
sbb
xlat
push
xchg
imul
mov
mul
lods
mov
pop
sbb
cmp
sbb
or
movsb
cmp
dec
shrb
jb
andl
lss
dec
int3
scas
cmp
insl
fsubs
gs
lds
dec
daa
cmp
inc
pop
jb
push
pushf
repnz
fucomip
mov
dec
js
imul
dec
push
cmp
mov
push
outsb
loopne
subl
loope
in
mov
stc
cmp
jbe
mov
add
lcall
push
nop
cmp
mov
mov
cwtl
fstp
lret
ds
stos
mov
mov
and
imulb
lock
lods
cmpsl
sti
mov
je
pop
mov
cmc
sti
push
cmp
inc
jl
pop
add
sub
cmp
les
xchg
maskmovq
inc
cmp
repnz
mov
das
mov
jl
roll
xchg
fdivrl
dec
ja
int3
mov
movsb
sub
je
push
cmpsb
pop
call
xchg
sbb
cmpsl
out
mov
lods
je
out
jge
cmp
xchg
push
lahf
mov
mov
ds
fisttps
jo
jb
rol
andl
push
pushf
xchg
mov
lret
xor
mov
jge
inc
push
fs
cmp
insb
add
mov
cwtl
fnstcw
call
data16
fisttpl
jle
std
sti
dec
push
js
in
inc
mov
mov
std
mov
test
xchg
lcall
mov
xorl
xlat
push
pop
aad
fisttpll
negl
xchg
arpl
addl
ret
and
jae
scas
mov
dec
add
cmp
add
call
nop
lahf
push
in
out
popa
push
and
mov
repnz
pop
ret
cltd
adc
hlt
and
mov
std
pop
dec
sbb
cltd
dec
hlt
sti
cmpsl
xchg
pop
je
jecxz
or
xchg
add
mov
jp
pop
repz
aad
fnstsw
sbb
inc
dec
mov
outsl
add
pop
mov
test
lds
push
xor
imul
xor
ljmp
lcall
and
and
push
pop
jno
push
or
xor
cld
xor
iret
ja
sub
inc
xlat
aad
jo
scas
and
mov
jg
sub
cld
shrl
mov
bound
adc
jp
mov
icebp
jp
pusha
in
cmpsl
das
xchg
add
xchg
push
add
fmull
or
jns
dec
out
test
in
sub
les
movsl
hlt
scas
jns
cld
ret
popa
in
mov
fwait
push
int
sub
adc
and
jb
mov
add
mov
outsb
jl
pop
rol
iret
or
lea
push
mov
test
xchg
add
sub
pop
int
sbb
scas
adc
dec
and
inc
int3
cmp
add
xchg
inc
dec
pushf
xor
lret
fcmove
xchg
and
adc
jbe
cwtl
inc
ds
lods
imul
cmp
test
dec
xchg
xor
aam
push
cld
mov
pop
dec
jo
adc
in
adc
int3
ss
popf
incb
and
test
dec
stc
sbb
cmp
out
and
popf
test
dec
pop
mov
sti
mov
adc
lahf
rorb
adc
dec
jg
inc
mov
gs
and
outsl
fwait
dec
pop
ret
orl
sub
inc
imul
push
or
outsl
adc
repnz
insb
fisubrl
sbb
jl
flds
adc
mov
dec
xor
and
mov
xlat
movsl
rcl
xor
insl
mov
and
aas
sbb
push
sbb
pusha
ljmp
adc
int
leave
add
shll
adc
adcl
jbe
mov
sbb
and
fmull
fiadds
fstl
adc
sub
clc
push
fadds
cmp
icebp
in
repz
pop
mov
and
in
dec
pop
aas
imul
inc
xchg
fs
jle
mov
lods
pop
mov
in
rolb
je
rorb
xlat
push
jmp
lods
in
mov
pushf
shlb
insl
push
jl
mov
int3
push
hlt
inc
pop
mov
fs
call
xchg
inc
mov
mov
fldl
ret
inc
scas
push
and
test
in
mov
cld
gs
inc
dec
mov
dec
cmp
nop
pop
sbb
dec
mov
movsb
lock
push
shl
lahf
lods
aaa
outsb
lret
mov
adcb
loope
pop
and
dec
sti
pop
mov
addb
or
pop
xchg
jno
pmaddwd
int
cmpsb
add
sbb
pop
fstpt
frstor
out
mov
aas
sarb
hlt
jg
cli
cs
jno
xor
cld
push
sbb
xor
or
push
aad
js
add
push
gs
push
jp
mov
mov
push
subb
push
mov
sbb
and
add
scas
ljmp
push
dec
adc
xchg
mov
add
xor
sub
cli
in
jg
xor
nop
push
mov
mov
repnz
jl
mov
mov
mov
and
out
lods
or
out
int3
out
aas
adc
adc
dec
xchg
xchg
pop
mov
and
push
inc
mov
stos
inc
xor
cmp
push
movsl
aam
test
dec
mov
adc
xchg
lret
lahf
mov
shll
andb
outsl
add
add
scas
pop
ss
jp
or
iret
mov
std
hlt
sbb
gs
out
push
out
out
xor
xchg
sub
push
mov
mov
or
mov
rolb
nop
adc
je
aad
cmp
cmp
sub
sub
lods
xchg
lock
outsb
cli
sbb
fsub
movsb
out
in
shl
mov
mov
cs
jne
lea
imul
in
jecxz
lret
arpl
mov
push
cmovge
mov
xchg
lea
and
lds
fsubrl
cmp
push
icebp
cmpsb
cltd
mov
arpl
cmp
xchg
int3
jo
ficoms
ljmp
push
iret
in
sbb
xchg
and
jbe
test
hlt
dec
mov
lret
fbstp
sub
and
pop
add
daa
cltd
mov
sub
shl
xchg
inc
inc
sub
outsl
ljmp
jbe
cltd
out
cltd
decb
cltd
pusha
pop
pop
cwtl
xor
imul
cmpsb
mov
and
adc
inc
xchg
in
pop
les
or
sbb
loop
dec
mov
jecxz
pop
jmp
cmpsb
or
call
adc
dec
stc
mov
mov
fistl
cmp
adc
or
decb
leave
sahf
xchg
int
lret
mov
shrb
push
or
loope
add
mov
scas
punpckhwd
sub
adc
dec
imul
jle
add
ret
shrb
stos
xchg
and
push
jp
sub
mov
xor
lahf
iret
adc
push
loopne
lea
daa
mov
mov
add
or
push
lret
cmp
les
pop
ret
xlat
js
pushf
insb
inc
push
pop
xor
mov
scas
xchg
rcr
fmuls
inc
leave
test
jg
and
adc
out
jo
faddl
fisubrl
xchg
cld
jecxz
sub
mov
xchg
push
cmp
xchg
push
xor
je
mov
roll
lahf
sub
cmp
lods
ficoml
sbbb
pop
clc
jne
std
rolb
je
inc
or
in
add
xchg
xor
inc
pop
fmull
rcll
out
mov
add
out
jle
mov
push
in
rorb
stos
mov
cmpsb
clc
xor
div
or
icebp
pushf
inc
loope
dec
rol
push
jnp
or
es
xor
dec
lahf
inc
inc
adc
aam
mov
das
jo
pop
cmp
dec
sbb
cmpb
fdivs
xchg
push
pushf
call
mov
rdtsc
js
adc
test
inc
nop
stc
mov
in
movsl
repnz
push
andl
ss
hlt
stc
xor
adc
call
xchg
push
ret
push
pop
pop
adc
xchg
cmpsl
jns
inc
mov
push
test
aad
cmpsb
dec
and
sahf
outsl
jne
push
add
push
lock
aad
inc
lods
add
ja
push
testb
je
clc
mov
js
lret
call
lret
inc
jle
push
sbb
inc
mov
inc
outsl
movsl
repz
clc
fwait
xchg
xor
jmp
rorb
rcll
xor
pop
out
cld
insb
shlb
lods
pop
repz
jle
fildll
add
repz
enter
or
daa
pop
fisubl
push
ja
add
xchg
mov
dec
lcall
or
pop
dec
lods
lcall
lcall
pop
lea
hlt
in
adc
xchg
rcll
and
loop
mov
aas
insb
imul
mov
je
hlt
mov
mov
inc
inc
or
sbb
jle
mov
jb
and
insb
add
lcall
cli
movsl
adc
lcall
dec
xor
dec
daa
and
mov
call
pop
cmp
fs
cld
sub
dec
mov
and
cltd
lret
adc
out
rcr
pop
jo
ja
insl
cs
xlat
push
inc
mov
pop
in
cmp
push
jb
lods
jmp
call
mov
or
jmp
ljmp
sbb
add
aam
jne
cmp
testl
mov
and
and
or
test
and
push
add
push
add
or
cmp
mov
or
cwtl
loopne
push
loope
sti
lret
out
jl
std
out
pop
lea
outsl
xchg
push
lods
js
mov
bound
cli
cmpl
add
jo
ljmp
lea
pop
nop
mov
scas
adcb
test
jle
movsb
and
ret
sub
xchg
inc
shll
inc
mov
in
test
add
jle,pt
shll
push
inc
ret
pop
jne
jns
out
mov
frstor
daa
cmp
sub
idivl
mov
dec
sbbl
and
je
rclb
jle
sbb
xor
cwtl
push
xor
nop
sbbl
dec
push
movsb
inc
outsb
in
jbe
xor
pop
mov
out
jecxz
dec
mov
or
push
sbb
jge
push
sbb
xor
popa
ljmp
shll
mov
cmp
loope
mov
and
dec
ja
sbb
adc
jecxz
jae
aas
push
dec
inc
roll
movsb
insb
jg
es
push
test
and
std
int3
fisttps
das
pop
data16
mov
sbb
loope
pop
shll
push
lret
ja
and
daa
jbe,pn
clc
ss
pop
xor
aam
adc
jns
test
push
clc
sub
jne
call
lret
cmp
test
addl
sub
std
dec
adc
dec
shll
aam
outsb
adc
jle
inc
push
fsubs
cmp
jns
jno
sub
dec
stc
sbb
cmp
imul
gs
cmpsb
pop
xchg
or
mov
pop
cltd
repnz
jle
imul
pop
data16
pop
fisubs
mov
clc
stc
rclb
xor
jb
sbb
pop
ret
leave
xchg
stos
in
pop
mov
and
scas
dec
sbb
fdivp
and
inc
arpl
mov
xchg
xchg
aaa
test
loope
and
lret
and
mov
lret
dec
jbe
mov
pop
sub
adc
mov
mov
cwtl
subb
xlat
pop
iret
xchg
mov
mov
xor
mov
sub
aad
sbb
sbb
add
xchg
test
sub
inc
rol
jno
test
jmp
cmp
push
mov
pop
jecxz
or
mov
add
sti
jnp
pop
fsubr
push
xor
loopnew
loope
insb
inc
fisttpl
mov
and
or
xor
repnz
xchg
cmpl
mov
or
mov
aad
sbb
inc
jge
and
sahf
jnp
addl
fsubrl
inc
pop
pop
mov
sub
mov
pop
mov
hlt
mov
jb
cltd
int
cs
xor
push
sub
xor
push
cmc
stos
jnp
mov
xor
mov
sub
test
mov
ftst
lods
xchg
dec
xlat
sub
jne
mov
mov
les
dec
or
ja
out
icebp
shlb
mov
cmpsb
clc
ljmp
mov
push
mov
pop
xchg
cmpsl
sub
hlt
mov
jl
mul
inc
lahf
and
sub
pop
dec
int3
nop
pop
sbb
iret
mov
push
inc
fwait
push
daa
bound
in
inc
and
loope
jle
roll
cltd
inc
fldenv
and
gs
mov
in
push
lods
ss
test
aad
sbb
cmp
je
jg
push
int
sub
data16
mov
pop
jl,pt
movsl
mov
adc
stos
mov
adc
cmp
in
dec
jle
repz
dec
sub
in
xor
and
dec
in
aam
mov
xchg
movsl
mov
push
aas
ret
nop
cmp
les
popf
add
cld
js
lods
ss
and
hlt
cmpsl
and
add
mov
pushf
call
cmp
jle
lcall
adc
scas
mov
sub
bnd
sbb
cmp
into
add
or
sbb
ret
scas
je
and
jl
js
cmpsl
iret
mov
outsl
or
pop
cmp
dec
pop
pop
cli
lods
xchg
shlb
out
mov
rcrb
pop
aam
and
pop
pop
jp
dec
pop
pop
push
hlt
lret
sub
out
sbb
sbb
push
pop
int3
xchg
shlb
sub
xchg
jo
push
adc
nop
jnp
es
mov
push
pop
test
insb
cmpl
mov
push
pop
mov
hlt
faddp
fiadds
add
mov
push
iret
ja
lret
xor
add
movsl
stos
sub
inc
pop
inc
imul
arpl
push
jo
hlt
add
jecxz
mulb
adc
pop
mov
popf
movsl
fucomp
adc
popa
insb
sub
cld
mov
jg
mov
hlt
ss
int
frstor
mov
and
aam
xor
shrl
mov
mov
es
addr16
sbb
inc
add
cmp
cmpl
xor
mov
cwtl
inc
into
dec
cmp
and
ja
pop
sbb
ss
outsb
sub
mov
add
xchg
or
or
aad
xorl
iret
mov
in
test
sarl
sbb
pop
xorb
and
daa
sbb
inc
inc
sbb
push
jmp
pop
sbb
jb
mov
sub
inc
int
cmc
push
loopne
lret
cmp
test
sbb
pushf
push
sbb
push
jle
dec
adc
inc
out
aaa
inc
nop
pop
push
ret
pop
xchg
pop
stos
notl
mov
lret
stc
lock
inc
gs
push
mov
jno
test
adc
jge
das
and
sub
push
jbe
lret
push
push
pop
lds
mov
sbb
pop
mov
xlat
push
subb
lea
and
add
add
fstps
mov
jae
xlat
dec
ss
push
stc
mov
lret
dec
xchg
push
push
cwtl
jne
sahf
sub
mov
pop
inc
xchg
sub
dec
jle
out
out
ds
push
xor
pop
sbb
in
fs
cmp
dec
popfw
pop
jbe
mov
mov
jge
mov
xor
push
pushf
pop
aad
add
insl
ficoml
push
mov
fstpl
sbb
mov
pusha
stos
jge
mov
cmp
cmpsl
lret
pop
cmp
popf
push
cs
cld
adc
add
sti
xor
push
mov
mov
inc
ret
mov
or
jne
bound
push
mov
pop
mov
mov
pop
mov
add
in
test
dec
or
jbe
mov
inc
inc
dec
sarb
in
imul
jmp
mov
pop
xor
push
add
mov
jae
mov
sarb
into
enter
in
fbld
sarb
hlt
popa
mov
push
inc
mov
imul
jnp
cs
movsl
jg
pushf
cmovb
jmp
imul
adc
mov
pop
jne
negb
jmp
jae
mov
mov
ljmp
pop
rolb
add
pop
or
adc
mov
adc
adc
and
shl
imul
and
cmp
test
les
stc
addl
movsl
inc
in
jg
xlat
and
push
std
push
fnstenv
mov
idivb
call
xchg
cltd
xor
mov
mov
mov
aas
mov
daa
insl
mov
imulb
loop
mov
push
movsl
xor
sahf
mov
mov
ficoms
push
imul
aam
cltd
cmc
cmp
aad
mov
mov
dec
outsl
adc
push
sbb
sub
jns
add
pop
pop
arpl
pushf
popf
rcr
insb
sbb
jp
sub
dec
fldt
xchg
sub
mov
dec
mov
mov
fsub
sbb
mov
jb
pusha
addr16
negl
mov
adc
cmpsb
or
xchg
notl
xor
add
das
scas
test
scas
incb
xchg
xchg
or
mov
psubusb
cmp
sahf
jbe
jmp
ss
xlat
lods
js
test
lcall
pop
test
jno
leave
jbe
dec
movsl
cltd
icebp
add
dec
jbe
test
aam
or
call
mov
mov
rcll
jb
ja
dec
stc
mov
sbb
xchg
add
mov
jecxz
js
lods
sbb
jo
jmp
inc
push
adc
and
fmuls
shl
sub
out
js
add
add
lret
std
mov
push
sub
mov
mov
mov
aam
push
into
jp
jg
outsb
jnp
mov
and
or
cmp
rclb
nop
xor
pop
push
jmp
or
push
fwait
and
sbb
jg
dec
sub
xor
aam
imul
mov
fcmovb
ret
mov
pop
dec
dec
sbb
or
popa
arpl
sbb
jb
push
test
push
adc
and
add
adc
rolb
mov
sub
rcr
mov
cs
test
xor
in
adc
stos
nop
sbb
xchg
out
mov
and
repz
js
scas
ss
jo
fwait
dec
bound
std
push
pop
loop
xchg
test
sbb
add
push
aad
scas
nop
cmp
xor
enter
mov
xchg
jmp
sarl
bound
rcll
stc
cli
adc
jns
icebp
pop
mov
jge
mov
aas
or
sarl
xchg
je
aad
cmp
cmpsl
icebp
xchg
xchg
push
lea
mov
dec
daa
mov
mov
mov
fistl
xchg
popa
sub
cmp
jl
test
movsb
out
cmp
add
flds
and
push
xor
mov
iret
adc
mov
outsl
outsl
cli
imul
scas
cmp
call
add
popf
cld
add
xchg
lods
push
mov
scas
mov
mov
mov
add
inc
jle
adc
repz
int
push
or
dec
iret
outsb
mov
insl
xchg
xor
add
cli
or
xchg
leave
push
hlt
sub
inc
pop
outsl
test
cmp
push
sahf
aaa
andb
std
xchg
pop
sar
popf
sysret
mov
and
subb
mov
shll
push
in
stos
add
and
sub
stc
push
call
cmpsl
adc
iret
adc
sbb
sahf
sahf
push
or
jno
push
lock
cmp
or
push
cltd
dec
dec
and
stos
inc
mov
cltd
js
xchg
push
jecxz
and
xor
push
cmp
inc
scas
test
cmp
rolb
or
outsb
mov
lret
add
rorl
jae
jl
xchg
xchg
xor
jg
test
loope
dec
loope
add
and
sub
cmpl
das
dec
cld
lods
xor
in
cli
addl
mov
sbb
ljmp
mov
sbb
jl
adc
repnz
cltd
pop
insb
add
dec
pop
cmp
mov
dec
test
lock
xlat
push
cmpb
ja
inc
nop
sbb
dec
jnp
lahf
out
fisttpll
jecxz
fsubl
enter
mov
pop
and
mov
out
xor
cwtl
je
dec
rep
mov
int3
xchg
xchg
popa
push
mov
call
adc
iret
jbe
jle
xor
jmp
mov
jnp
mov
inc
add
xchg
mov
daa
pop
mov
dec
cmp
dec
xchg
jbe
or
push
lods
pop
scas
mov
xor
push
sub
dec
or
sbb
fs
out
pop
inc
dec
xor
sub
outsb
jecxz
nop
push
dec
push
and
jno
xchg
mov
scas
mov
mov
cli
xchg
and
inc
dec
cmp
xor
repz
sbb
add
mov
inc
or
mov
or
enter
ljmp
out
fidivl
xchg
cwtl
inc
cmp
hlt
xchg
cmpsl
or
mov
fisubs
popa
mov
std
les
push
lds
lahf
test
xor
hlt
lcall
repz
stos
mov
cmp
stos
sub
xchg
roll
cmpb
hlt
mov
in
nop
gs
into
push
daa
xchg
push
xchg
jne
xchg
sub
pop
popa
sub
nop
pushf
idivl
jo
pop
push
inc
cmp
fildll
shrb
inc
ror
imulb
xor
xchg
mov
push
test
negl
inc
jmp
dec
push
fdivs
add
int
scas
test
in
hlt
jecxz
push
stos
jno
jno
out
mov
push
fisttpl
xor
testb
inc
cmp
test
subl
or
movsl
loopne
mov
les
push
scas
mov
arpl
mov
rcrl
mov
inc
dec
push
dec
movl
mov
jle
daa
mov
insb
popa
pop
rorb
cmpsb
mov
sub
cmp
mov
repnz
lods
mov
or
sarl
out
mov
mov
stc
mov
push
cmp
bnd
add
pop
mov
dec
rcrl
loopne
add
dec
pop
sahf
rclb
xchg
popf
insb
mov
inc
lods
cmpsl
pushf
mov
repz
cmp
fadd
fnstsw
je
sbb
xor
in
sbb
mov
mov
imul
sbb
cmp
subb
mov
test
movsb
sub
test
jnp
push
test
mov
lds
mul
xor
or
les
mov
clc
pop
inc
xchg
push
and
leave
pushf
mov
shll
xchg
scas
inc
xchg
mov
sbb
addr16
cmpsb
sahf
gs
xor
fmuls
or
scas
loop
stos
or
sub
mov
jg
mov
jle
sub
sub
outsb
call
iret
cmp
faddl
jnp
out
sti
leave
pop
mov
mov
jmp
dec
out
sarb
xor
mov
sbb
shrl
test
sbbb
jo
and
mov
push
outsb
pop
lahf
fisttpl
adc
les
cmpsb
ds
pop
adc
push
xchg
frstor
fcompl
scas
mov
jg
and
in
mov
sbb
add
push
aas
ss
xchg
mov
lahf
icebp
jle
popa
int3
pop
jae
cmp
add
in
pop
sbb
cmp
jl
addr16
xor
pop
std
ja
mov
call
nop
and
sbb
in
inc
mov
in
cltd
pop
stc
lcall
mov
cmp
fistl
mov
and
mov
xorb
xchg
mov
ret
push
stc
gs
loop
and
push
cmpsb
mov
and
jb
fstpl
ret
ja
mov
jo
adc
jae
addr16
fcompl
cmpsb
jns
mov
lods
sub
iret
fsubrs
int
cmp
or
mov
pop
std
dec
shll
jge
jae
inc
repnz
mov
add
push
out
mov
cmp
div
xlat
dec
dec
sarb
dec
inc
mov
sti
dec
xor
std
js
xchg
cmp
xor
xchg
loop
addr16
aaa
adc
xchg
test
flds
push
shl
subb
jg
xchg
popf
pop
xchg
stc
iret
mov
adc
fistpll
and
les
jecxz
push
mov
mov
xchg
add
fcompl
lock
lods
inc
adc
inc
fiadds
xchg
xchg
clc
imul
sbb
call
xor
ret
jnp
mov
mov
mov
icebp
or
sbb
jge
add
nop
divb
xor
int3
adc
xchg
stos
adc
iret
lret
mov
xchg
sub
in
jl
out
popf
imul
imul
or
mov
fcmovne
mov
addb
mov
data16
outsl
jg
adc
loop
ljmp
cld
cmp
ss
lds
mov
inc
add
aad
xor
cmc
inc
out
cwtl
sbb
aas
adc
mov
or
lahf
cmp
in
inc
xor
je
jne
testl
sbb
movsl
push
jmp
jbe
push
mov
jg
fwait
dec
addl
mov
mov
cmpsb
mov
out
jp
add
test
mov
mov
sub
in
flds
scas
push
cmpsb
or
or
dec
mov
or
push
adc
in
cmp
push
fs
in
les
data16
push
lahf
inc
cmp
push
popf
and
jg
jno
loope
ljmp
and
push
pushl
je
lods
adc
in
imul
imul
cmp
push
lds
stos
insl
jo
shlb
andb
inc
testb
leave
outsb
pop
movsb
xor
mov
xchg
sbb
mov
lds
mov
fmull
xchg
adc
ljmp
push
lcall
ror
shr
push
cmp
pop
aad
test
xchg
add
mov
pop
js
cmpsl
and
cmpsb
imul
cmp
shll
xor
pusha
gs
or
mov
adc
in
dec
add
repnz
nop
pop
repnz
stos
mov
sbb
inc
addr16
mull
das
mov
mov
insb
push
dec
pushfw
mov
cmc
sub
insb
out
sub
in
mov
sub
mov
daa
sbb
sub
cmp
les
mov
sub
mov
test
mov
test
add
cmp
sub
lock
cs
adcb
xchg
out
mov
fs
lcall
inc
push
lods
ret
and
lock
push
and
in
xchg
aad
fs
mov
pop
movsb
pop
out
or
mov
adc
cltd
bound
subb
aaa
hlt
push
pop
iret
mov
sub
jnp
repnz
mov
add
negl
push
sub
sub
adcl
lret
stos
ss
popf
and
cwtl
cmp
sbb
mov
aas
inc
outsl
int
xchg
rcrb
psrld
jne
jmp
out
mov
in
rep
inc
xor
les
lcall
sti
icebp
sub
xor
js
push
dec
pop
cmp
jmp
xchg
cmpb
dec
cli
dec
push
int3
nopl
dec
sbb
push
fistps
lods
xchg
pop
jbe
sbb
rcrb
xchg
add
ljmp
pushf
jae
jecxz
add
sti
cmp
mulb
jecxz
sahf
sub
pusha
fdivrl
insb
inc
pop
xor
stc
ret
fldenv
scas
cwtl
xor
sbb
inc
cmp
pop
add
out
divl
pop
daa
pop
popa
ljmp
scas
lea
addr16
mov
cmp
pop
imul
out
outsb
jae
jmp
mov
or
nop
fdivr
adcb
sarb
add
fisubrl
mov
out
sbbb
jg
mov
jbe
das
cmc
xor
xchg
adc
call
cmp
ret
xor
icebp
mov
inc
mov
sub
cld
add
push
movsb
cmp
or
pop
inc
and
mov
insl
adc
pop
mov
xor
jns
jb
in
sbb
push
add
add
icebp
loope
pop
mov
jo
repz
jecxz
push
cs
lods
pop
inc
adc
xor
shlb
sub
push
jp
xchg
mov
cmp
mov
shrl
and
loop
mov
jp
push
jae
out
fisubl
sbb
sarb
pusha
mov
pop
xor
mov
xchg
mov
adc
mov
scas
push
xchg
push
fsubr
adc
cwtl
leave
mov
lea
mov
mov
ds
loop
pop
ficoms
in
pop
adc
xchg
icebp
movsb
lock
jnp
mov
or
imul
mov
add
bound
rcr
imul
jb
testb
mov
cmp
sbb
jecxz
inc
jp
adc
fsubs
cmc
cmp
mov
add
adc
out
cld
cltd
aaa
arpl
mov
fcmovb
xor
lahf
stc
mov
pusha
sbb
pop
aas
loopne
dec
mov
pop
sub
fisttpll
shlb
mov
xchg
xor
push
pop
xorb
fidivrl
jnp
lret
xor
dec
popa
cmpsb
int
flds
popf
jno
in
push
jns
cld
add
popf
push
mov
mov
inc
jno
sub
add
cmpsb
add
cli
addb
push
xchg
std
mov
mov
sbb
mov
imul
mov
dec
mov
jno
test
dec
jl
stc
aad
stc
xchg
dec
out
and
pop
mov
jb
sbb
imul
jne
addr16
data16
scas
push
test
mov
and
mov
jne
sbb
mov
sbb
inc
scas
mov
sub
outsb
mov
dec
mov
inc
stos
or
lea
xchg
out
movsl
jmp
ucomiss
les
dec
loopne
pop
add
jne
addr16
std
jp
ds
negb
add
xor
push
cmp
mov
jae
stos
addl
sbbb
mov
mov
jg
pop
add
nop
mov
out
mov
aad
mov
aam
out
les
push
aaa
lcall
mov
mov
xor
jns
adc
pop
cmp
cmp
jne
out
fwait
push
ja
cmp
mov
in
daa
fisubl
push
mov
movsl
or
adc
out
push
sarb
call
dec
push
jae
inc
lea
arpl
fisubl
jg
ret
adc
adc
push
pop
sub
or
push
jl
aam
sub
jp
loop
jg
xchg
dec
jl
insl
or
jae
jb
ret
lret
sbb
insl
daa
lods
mov
sbb
pop
loop
jge
ficoml
in
sub
dec
scas
scas
adc
movsb
addl
mov
dec
out
inc
cli
in
stos
insb
bound
ja
xchg
pop
cmp
jmp
xlat
ljmp
sub
mov
gs
in
testl
push
pop
xchg
add
push
pop
ja
push
sbb
subb
jg
push
mov
das
testl
jb
sub
movsb
mov
or
rcll
popf
stos
push
scas
daa
push
popa
cwtl
lock
or
ret
cld
pop
mov
in
pop
xlat
mov
mov
push
addl
lret
stc
fstl
fiadds
cmpsb
add
data16
or
popf
cld
adc
adc
call
fiadds
lcall
xor
in
xchg
aam
out
fidivs
ja
jge
outsb
mov
cltd
inc
lahf
sbb
std
movsb
inc
pusha
stc
iret
pop
mov
dec
test
and
daa
push
sbb
or
mov
insl
lods
popf
stc
jns
je
mov
std
mov
push
xlat
inc
push
cmp
mov
and
or
mov
iret
pusha
lret
adc
mov
mov
jb
cmp
cwtl
daa
adc
pop
inc
cmp
icebp
pop
loope
mov
in
xchg
aam
and
movsl
dec
cltd
out
xchg
xchg
push
sub
stos
and
pop
and
pop
popa
fsts
or
movsl
xchg
or
and
adc
jb
adc
pop
repnz
cmp
push
or
js
xor
aas
sbb
push
fcoms
inc
adc
inc
test
xchg
push
das
in
in
int3
xorb
scas
xchg
js
test
xlat
pop
and
nop
push
es
inc
inc
and
ret
scas
and
decl
pop
loop
jne
into
arpl
loope
push
mov
sbb
fstps
xor
dec
fidivs
mov
enter
out
pop
call
movsl
js
xor
mov
xor
fdivrl
and
ja
sub
test
mov
jg
addl
mov
push
push
push
add
mov
push
push
leave
adc
or
dec
ljmp
xchg
xor
lahf
cmp
jge
ffree
mov
jne
mov
mov
orl
fisubrl
cltd
in
or
add
pushf
and
mov
lock
xor
mov
xchg
ret
jmp
cmp
mov
cltd
mov
mov
sub
push
pop
loop
push
push
nop
sbb
loope
out
imul
inc
hlt
jae
ja
dec
mov
add
push
es
sbb
lcall
push
sbb
addr16
int
outsl
cmp
pop
loope
mov
bsr
ljmp
pop
or
outsb
test
inc
and
cmp
pop
mov
dec
mov
ljmp
jp
sub
xlat
sbb
stos
jecxz
testb
cld
mov
mov
scas
xchg
clc
out
push
ror
int3
pop
outsl
sarl
pop
or
dec
pop
adc
jge
lahf
lds
inc
out
or
sbb
cmpb
movsl
add
dec
jo
sub
loope
mov
sti
jecxz
stc
sub
mov
push
dec
inc
adc
fnstsw
xchg
in
je
jae
jmp
int3
repz
cmp
xchg
add
push
push
push
or
xchg
imul
and
and
mov
mov
std
in
push
lret
sbb
or
sbb
hlt
sahf
jno
or
dec
pop
cmc
shrb
insl
loopne
cmp
jp
fcompl
bnd
add
jb
jecxz
lock
add
adc
jp
sub
adc
clc
mov
push
dec
loope
sbb
nop
pop
out
mov
push
gs
fsubs
call
jle
mov
jp
adc
cmpsb
shll
lret
test
ds
adc
inc
ret
fimull
imul
imul
mov
fisubrs
pop
dec
fldenv
jle
add
jb
rcrb
push
and
jae
xlat
jge
add
xchg
mov
add
outsb
out
fldt
fdivs
cld
mov
jns
mov
or
cmp
cwtl
repnz
test
movsb
mov
jbe
or
clc
adc
push
jno
push
sbb
rol
sub
push
or
test
inc
adc
cwtl
cs
cld
pop
cmp
cmc
inc
pop
xor
add
pop
bnd
out
iret
mov
sbb
or
xor
jmp
mov
mov
push
testb
lahf
xor
pushf
fs
mov
sarb
push
inc
dec
inc
scas
or
gs
sbb
lods
mov
sub
add
lahf
sbb
or
mov
cs
fdivl
add
inc
sbb
sbb
cmpsb
and
jge
into
lods
scas
roll
rcll
inc
int
ljmp
fidivs
jge
iret
and
dec
and
mov
inc
mov
xor
repz
or
sbb
sahf
cmpsb
mul
add
in
pop
and
push
push
xchg
je
mov
mov
test
sarl
pop
pop
gs
test
enter
push
loopne
or
or
pop
sub
dec
mov
leave
pop
sbb
inc
push
incl
movsl
dec
scas
add
push
sbb
loope
scas
mov
xor
and
and
push
xchg
inc
sub
sub
and
or
pop
or
xor
mov
or
jge
lea
loope
int
inc
push
ret
hlt
cmc
sub
and
std
cmp
in
dec
mov
les
push
xor
popf
popa
adc
clc
or
fimuls
setp
adc
cmp
pop
xor
xchg
dec
rclb
mov
xor
ja
xor
xor
push
jmp
stc
jg
dec
cmp
hlt
leave
pop
mov
test
mov
mov
cmp
push
push
jbe
test
jb
mov
mov
andl
dec
dec
sbb
sbb
pop
rep
and
cmp
insb
inc
popa
mov
orl
cmpsl
add
dec
in
cmpsb
cwtl
mov
into
lock
push
adc
sbb
xor
jle
cs
fidivs
xchg
cli
mov
dec
mov
inc
imul
push
xchg
aaa
and
mov
adc
ss
cmpsb
scas
jns
pop
dec
jmp
out
sbb
fsubs
cwtl
xor
xorb
and
add
into
dec
cmp
sbb
nop
pop
ss
pop
mov
loope
je
mov
pop
loop
cld
popa
mov
outsl
mov
sub
fs
adc
sub
xchg
inc
push
xor
cwtl
mov
mov
add
imul
cltd
sub
daa
dec
imul
jae
mov
call
std
fsubp
push
test
or
outsl
cli
mov
fsts
cmpb
subb
aas
cwtl
mov
jne
and
leave
scas
dec
push
pop
sub
and
stos
aam
lret
dec
mov
adc
and
adc
dec
mov
sbb
mov
lock
mov
repnz
mov
xchg
adc
cwtl
dec
cmp
mov
addr16
ljmp
dec
add
sti
xor
ljmp
dec
loop
jge
js
in
loopne
cmpsl
daa
in
add
push
roll
xchg
sahf
jnp
mov
idivb
xchg
out
mov
mov
add
adc
fdivl
add
pop
in
mov
push
xlat
sub
xchg
rcrl
into
js
je
push
fwait
dec
dec
sub
or
and
jmp
test
scas
dec
adc
jmp
in
jbe
stc
cmp
and
pop
mov
push
and
jl
int
mov
xor
pop
icebp
or
in
das
mul
out
mov
mov
and
rcr
call
outsl
mov
adc
pop
jbe
add
stos
scas
and
mov
and
cltd
cmpsb
arpl
imul
je
mov
and
cs
cmp
xor
mov
adc
dec
shrb
push
xchg
dec
jo
js
xchg
pushl
repz
xchg
je
mov
stc
pop
enter
jns
pop
adc
sbbl
mov
mov
xchg
inc
outsb
jnp
sbb
sbb
movsb
mov
push
dec
xchg
inc
xor
mov
push
ds
or
sbb
aas
sub
fsubp
test
adc
jmp
push
push
xor
mov
fidivrs
or
dec
sbb
popa
popa
push
mov
cmp
adc
cmp
pop
rcl
aas
push
cli
aaa
mov
mov
mov
and
and
fidivrs
lahf
lcall
fsubr
inc
and
mov
leave
aad
mov
lea
out
mov
loop
nop
sbb
xor
mov
xor
mov
cmp
and
clc
lock
xor
fisttpl
test
sbbb
repnz
or
test
and
lcall
cmp
push
js
pop
pushf
and
scas
fdivl
es
sbb
scas
mov
mov
inc
nop
and
fidivs
xor
hlt
lods
or
sbb
xchg
out
mov
sub
jae
lods
aas
and
mov
fisttps
arpl
or
push
and
icebp
jo
or
cmp
lock
push
or
push
out
insb
or
in
pop
mov
aad
lret
mulb
cmp
or
adc
fcmove
add
rcrl
popa
jnp
imul
pop
ret
adc
adc
xor
jl
or
xchg
push
mov
xchg
ss
push
push
lds
add
mov
lret
pop
sub
push
add
lods
mov
imul
insl
test
rclb
ss
dec
mov
pop
rcl
ret
sbb
stos
push
sub
leave
test
mov
ret
ret
pushf
push
inc
and
mov
jge
mov
xchg
sub
sub
cs
push
xor
inc
stos
int3
xchg
aad
pop
imul
test
add
xor
gs
mov
xchg
and
xchg
mov
mov
andl
mov
scas
push
jle
push
sarb
icebp
or
pushf
cs
fsubrs
pop
mov
test
push
fsqrt
xchg
and
iret
mov
lea
pop
lods
mov
and
mov
ret
push
imul
xor
add
ficoml
sbb
insb
pop
jmp
mov
je
push
mov
adc
xor
inc
setl
and
push
push
bnd
mov
nop
cli
out
mov
imul
rorb
test
movsl
cmp
imul
enter
subb
pop
test
icebp
dec
push
push
cmp
mov
mov
add
pop
popw
test
sub
mov
outsb
cmp
into
int3
add
pop
jge
xorl
sub
popa
ret
mov
jnp
fnsave
bnd
lods
fs
pop
jne
enter
cltd
ret
cld
rorl
addr16
out
pop
call
ret
pop
xor
into
xchg
roll
push
lods
sub
aam
ja
xor
inc
cmp
cmp
jge
cmpl
lret
cmp
out
pop
adc
mov
setp
mov
mov
insw
imul
mov
or
int
cmp
in
adc
test
les
ret
lock
icebp
movsb
outsl
or
dec
fs
mulb
stc
push
mov
adcl
xor
jp
lret
lods
mov
divl
aas
cltd
lret
ret
into
mov
xor
push
fsts
testl
sti
push
lods
mov
sub
add
adc
ja
sbb
pop
adc
in
aas
shrl
sbb
pop
xchg
testb
jne
out
adc
jno
push
mov
leave
iret
rcrl
xor
mov
lret
sbb
insl
popa
xor
jle
pmulhw
and
ficomps
jne
shll
jae
inc
ja
imul
cld
popa
mov
jns,pn
out
aaa
mov
pop
add
repnz
bound
dec
aad
loop
aad
aas
push
out
jbe
mov
mov
les
xchg
cmp
in
out
lret
push
loopne
loop
and
in
je
adc
insb
dec
or
and
cmpsb
into
aad
cwtl
lock
and
loop
jge
cmpsl
add
js
pop
imul
pop
jno
das
jno
mov
xchg
mov
mov
push
add
out
jecxz
mov
fwait
jno
ljmp
into
imul
xchg
lods
insl
ret
aaa
ds
jg
out
idiv
test
sbb
fimuls
mov
push
xor
movsb
jb
mov
pusha
faddl
sbb
push
stos
push
ss
stc
aaa
cmp
cltd
dec
aad
pushf
dec
imul
lds
and
dec
sbb
sub
fimull
mov
sahf
jae
test
xchg
mov
scas
mov
in
xlat
popa
les
jns
adc
movsb
dec
popa
test
push
scas
ljmp
cwtl
jecxz
nop
or
cmpsl
ljmp
jne
dec
icebp
pop
ror
xorb
xchg
push
aaa
lock
nop
daa
mov
in
mov
mov
and
mov
xor
mov
pushf
sub
ror
loope
js
daa
cmp
aad
dec
mov
dec
arpl
mov
mov
inc
enter
fnstenv
psadbw
cmpsb
sbb
pop
outsl
mov
pop
js
shll
pop
cld
shlb
and
jle
mov
push
aam
dec
or
stos
test
in
sub
xchg
mov
adc
mov
stos
cmpsl
push
add
fcoml
push
xchg
scas
lods
inc
frstor
xor
lods
dec
mov
lds
xor
call
jecxz
inc
in
push
mov
popa
adc
hlt
repnz
test
clc
xor
jae
cmc
push
push
int3
das
hlt
in
push
mov
sub
xchg
int3
cld
and
mov
ret
pop
bound
sub
mov
mov
in
mov
bound
xchg
dec
sbb
xchg
shrb
jle
int
sarb
jp
and
das
mov
in
sub
mov
mov
pop
pop
das
jp
push
jns
shll
pop
stos
hlt
and
pop
add
in
out
hlt
scas
xchg
jle,pn
xchg
iret
test
aaa
xchg
lods
clc
outsb
mov
out
inc
mov
and
jge
xchg
movsl
adc
jno
popf
test
loopne
inc
sahf
xor
push
lock
sub
jno
push
sub
cmp
bound
cli
dec
dec
add
sub
lea
cmp
fldt
pop
fistpll
sbb
mov
mov
cmp
imulb
inc
in
pushl
iret
mov
pop
fs
pop
cmpsb
push
orb
pop
stos
add
jl
xchg
cltd
stc
push
mov
jo
aad
and
sbb
jbe
mov
test
mov
sub
mov
aas
pxor
adc
sub
mov
dec
dec
call
fstps
jecxz
pop
addr16
std
out
inc
pop
lret
jecxz
or
adc
fistpl
addb
aad
call
or
lock
cmp
cwtl
inc
leave
xchg
dec
movsb
arpl
scas
mov
jecxz
orl
cmpsb
sub
add
loopne
test
add
push
mov
mov
mov
dec
push
add
dec
mov
rolb
scas
mov
ja
cmp
jge
out
inc
jl
stc
rolb
and
sahf
mov
jl
wrmsr
xchg
bnd
test
icebp
call
movsb
loope
in
xchg
sbb
xchg
jecxz
stos
lret
pop
leave
dec
in
cmp
or
mov
adc
neg
cltd
test
adc
sub
into
xchg
mov
xchg
fsubr
pop
movsl
mov
in
adc
mov
shll
loop
jle
jmp
pop
aas
or
inc
pop
std
push
je,pt
xlat
or
mov
mov
sub
pop
loopne
pushf
cmpsb
sbb
sbb
jns
adcl
jecxz
cltd
pop
lds
pop
ucomiss
xchg
cmp
loope
jg
mov
mov
xchg
adc
mov
leave
bound
sub
mov
inc
test
inc
xchg
mov
jle
add
pop
pushf
mov
mov
repnz
dec
insb
pop
mov
gs
push
lock
push
movsl
int
aad
push
lds
mov
add
test
cwtl
pop
jecxz
repnz
mov
aaa
cltd
or
je
daa
dec
in
in
or
sub
pop
ds
push
push
mov
sti
jno
ret
mov
pop
sub
imul
sbb
lret
cmpl
shll
push
sub
xlat
fwait
scas
cmc
or
imul
cmp
mov
push
out
loope
or
cltd
loopne
dec
sbbb
cld
in
or
add
pop
jp
dec
sub
out
popf
jp
jp
outsb
stos
jle
add
cmp
adc
leave
sbb
sti
cli
subb
push
lahf
rolb
iret
cli
jbe
in
ds
pop
ss
mov
out
jg
js
mov
dec
popa
push
cmc
pop
outsb
xchg
mov
sbbb
dec
insl
xor
sbbb
or
pop
xor
frstor
push
dec
insl
lock
add
loope
xchg
test
sub
push
arpl
es
sbb
mov
sbb
xlat
xor
push
cmpsl
add
and
insb
inc
lret
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
test
mov
add
pop
das
hlt
lock
cmc
mov
aam
sbb
fiaddl
aas
mov
scas
scas
and
push
and
sarl
mov
and
jbe
xchg
add
addb
jecxz
lcall
xor
loope
push
adc
ja
stc
lds
ja
ljmp
mov
in
jmp
repnz
sub
addr16
dec
lret
adc
iret
mov
pop
pop
mov
imul
mov
repz
mov
jne
aaa
aad
rcll
push
bound
sub
xchg
aas
fisttpl
sub
lahf
and
clc
xchg
inc
cmp
mov
xor
xor
repz
mov
lret
xor
iret
sbb
je
jnp
aad
pushf
into
adcl
xor
cmp
mov
test
cs
jb
dec
mov
loope
mov
dec
pop
push
lods
sub
jb
pop
sub
or
push
ja
dec
lahf
fmuls
testl
out
mov
insl
dec
pop
inc
int
pop
shll
and
pop
dec
mov
out
pop
jae
int3
xor
iret
sbb
adc
std
mov
xchg
sub
loope
mov
popf
fbld
push
or
dec
and
add
add
add
add
xchg
add
inc
xchg
adc
mov
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
shll
