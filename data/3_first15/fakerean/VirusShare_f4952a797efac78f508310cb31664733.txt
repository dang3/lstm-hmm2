add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
sub
inc
add
decl
decl
test
mov
sub
lahf
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
mov
inc
add
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
and
call
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
xor
inc
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
adc
add
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
or
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
jb
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
push
inc
add
pop
leave
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
xor
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
cmp
add
add
adc
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
and
add
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
cmp
sub
test
outsb
cmp
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
push
cmp
add
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
sub
mov
in
mov
hlt
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
pop
inc
add
add
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
xor
dec
xor
dec
sbb
dec
sub
or
inc
and
add
add
xor
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
dec
cmp
add
or
add
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
adc
inc
add
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
sbb
and
call
test
je
xor
cmp
mov
ds
add
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
popa
xor
add
ret
lea
call
mov
cmp
jne
mov
mov
or
add
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
decl
decl
adc
into
call
mov
dec
aas
inc
add
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
inc
add
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
es
add
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
add
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
adc
js
add
inc
sbb
shlb
jbe
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
push
call
mov
add
pop
loope
add
add
add
jno
add
add
add
add
call
add
add
jnp
add
add
mov
add
add
outsl
adcl
add
mov
andb
lock
xchg
add
test
loopne
mov
lret
sbb
mov
xchg
push
push
push
push
push
call
jns
roll
add
xlat
add
add
stos
add
in
add
loope
repnz
rcr
testb
bound
add
add
add
in
xchg
add
shll
int
mov
rolb
add
jae
ja
mov
add
add
add
mov
add
aam
bound
pop
popl
push
lea
push
lea
push
push
push
push
lea
push
call
in
add
cli
add
add
jae
arpl
add
push
add
add
gs
mov
add
scas
add
jno
popf
in
jle
jne
ljmp
add
add
add
insb
ret
add
add
add
mov
lea
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
loopne
mov
mov
test
shrb
pop
xchg
add
jns
push
add
sti
add
add
jnp
mov
cmpsl
test
outsl
add
cmpsl
cwtl
sahf
rcr
add
add
add
negl
mov
lea
pop
push
push
lea
push
lea
push
push
call
ret
add
pop
testb
add
add
add
add
movb
mov
add
mov
roll
call
add
add
out
add
add
shlb
xchg
popa
pop
add
incb
out
mov
mov
mov
lea
pop
push
push
lea
push
push
push
lea
push
push
push
call
add
add
pushf
arpl
jmp
mov
xchg
add
add
add
add
into
add
cltd
into
add
add
rolb
lcall
jno
add
rclb
add
out
loopne
div
mov
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
call
les
fldl
repnz
test
jbe
pop
push
add
fcompl
xchg
add
mov
loopne
lods
add
mov
mov
add
add
add
add
cwtl
fs
add
add
mov
lea
pop
call
push
push
lea
push
push
push
push
call
testb
rol
jge
gs
sahf
data16
loope
incb
pusha
add
add
stos
sahf
pusha
add
pop
push
add
data16
jne
add
xlat
ljmp
mov
add
mov
test
mov
jns
add
stc
ret
andl
mov
jnp
mov
add
add
add
mov
lea
pop
call
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
in
movsb
mov
mov
pop
mov
jl
cmpsb
add
push
lds
fsubp
jnp
xchg
mov
stos
jo
into
add
add
add
add
out
pop
andb
add
loopne
scas
add
out
xchg
jl
add
add
data16
fimull
and
push
push
push
push
push
call
jge
add
in
add
add
add
mov
add
jns
add
add
mov
mov
stos
pop
add
mov
movsl
jp
fst
push
scas
jecxz
xchg
scas
add
mov
xchg
jl
cmc
popa
fldl
add
add
add
pop
call
push
lea
push
push
push
push
call
cltd
jb
add
mov
xchg
xchg
mov
add
add
mov
push
mov
pop
add
jns
add
out
int3
arpl
push
pop
arpl
or
add
add
mov
idivl
fwait
add
out
movb
add
add
mov
add
cltd
push
in
and
mov
add
jbe
add
adc
jmp
push
push
push
call
pop
sarb
int
add
bound
mov
add
jo
add
mov
add
jle
jo
mov
stc
in
add
jle
xor
add
add
outsl
add
fldl
push
test
jne
add
mov
enter
add
add
mov
lea
pop
ret
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
mov
fildl
jae
pop
movsb
add
out
mov
add
push
scas
loopne
mov
jle
add
jne
add
add
out
add
cltd
shlb
mov
jl
add
test
lahf
mov
popf
lods
add
scas
mov
outsl
add
fucomp
add
mov
sti
add
scas
add
in
mov
add
xchg
add
pop
mov
push
push
push
lea
push
push
push
push
call
add
test
mov
jbe
xchg
add
nop
clc
add
ja
xchg
stc
scas
frstor
fwait
test
add
add
out
add
roll
add
add
add
std
mov
lea
pop
mov
add
push
push
push
push
push
lea
push
push
push
push
call
add
add
test
mov
add
add
cli
mov
add
jecxz
popf
roll
nop
add
leave
add
add
test
add
je
push
add
mov
stos
add
push
add
add
add
mov
xchg
in
in
fcomps
mov
test
xchg
xchg
add
add
add
movl
add
std
outsl
out
fs
lea
pop
add
push
lea
push
push
push
push
lea
push
push
push
call
sbbl
add
add
gs
add
mov
push
fadds
push
js
add
mov
iret
push
xchg
add
add
add
test
imul
int3
pusha
cltd
add
jmp
pop
sti
rolb
add
arpl
add
lds
jl
loopne
add
lds
roll
cld
mov
lea
pop
add
mov
xor
push
push
shl
add
shr
push
xor
add
add
add
shr
dec
sub
xor
lea
pop
xor
pop
push
lea
push
push
push
push
push
push
push
push
call
mov
add
add
add
add
push
add
add
jae
cltd
mov
add
mov
pop
mov
pop
je
add
ljmp
add
sarl
xchg
add
stos
add
mov
mov
mov
aam
bound
pushl
call
push
push
push
lea
push
call
jecxz
mov
add
movl
mov
pushf
add
xchg
jnp
push
add
shl
jae
in
jno
out
add
add
push
pop
mov
add
outsl
out
add
mov
add
popa
mov
add
mov
aam
pusha
mov
lea
pop
mov
push
push
push
call
push
push
bound
add
cwtl
add
add
add
add
add
mov
xchg
in
mov
jmp
jb
iret
add
addr16
outsl
sahf
add
push
add
fldl
jae
add
lea
pop
movl
push
push
lea
push
lea
push
push
push
push
push
push
push
call
xchg
pushf
jmp
add
add
shrl
addl
add
int3
out
add
add
add
rolb
movsl
push
out
add
add
decb
pop
cwtl
push
testb
not
std
rcl
js
fldl
push
out
add
add
rcrb
mov
mov
mov
xchg
arpl
std
mov
hlt
lea
pop
lea
push
push
push
lea
push
push
push
push
push
push
push
call
test
lret
add
ror
sahf
lret
add
add
add
pop
in
outsl
in
aam
add
test
push
fistps
out
add
jne
int3
lea
pop
pushl
pushl
push
push
lea
push
push
push
push
push
call
add
jae
incb
xchg
xlat
pushf
call
jnp
push
mov
pop
test
add
add
test
addl
xchg
in
lret
add
loop
jb
add
jp
adc
pop
add
add
rolb
add
loopne
movsl
add
fldl
roll
repnz
add
mov
fs
add
push
add
mov
lea
pop
call
push
push
push
push
call
movsl
bound
push
mov
les
add
add
nop
add
add
mov
push
orb
testb
add
add
pop
jbe
cmpb
cltd
js
add
call
add
cld
add
mov
lea
pop
pushl
push
push
call
cmpl
cwtl
nop
push
mov
roll
add
out
add
mov
add
loope
jmp
shrb
mov
roll
push
mov
jae
jbe
mov
mov
mov
add
popf
add
add
add
mov
add
bound
jp
add
xchg
fsubrp
add
add
in
add
mov
lea
pop
pushl
push
lea
push
call
add
add
add
popa
fsubl
fcmovne
add
add
jb
mov
add
imul
pop
movb
add
pop
xlat
push
fsubl
lock
add
pushf
in
add
pop
add
fiadds
add
pop
call
push
push
dec
xor
ror
push
or
not
add
sub
ror
rol
pop
sub
sub
pop
push
push
push
push
push
push
push
push
push
call
add
xchg
mov
fadds
push
movsl
fwait
add
fldl
add
in
sti
mov
movl
jno
add
xchg
loopne
addr16
negl
add
test
loop
in
add
fcoml
and
pushl
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
add
sti
test
xchg
bnd
mov
incb
std
add
add
cmpsl
add
add
stos
add
xchg
jae
mov
lea
pop
call
push
push
push
push
push
push
push
lea
push
push
call
push
jns
add
xchg
fiadds
pushf
frstor
xchg
add
add
mov
pop
push
push
mov
aam
iret
lret
enter
add
cmpsb
jecxz
mov
rolb
pop
xchg
cmpsb
mov
add
int
pop
shll
arpl
fadds
ljmp
out
add
pop
hlt
pop
mov
add
addl
fldt
les
inc
push
push
shr
rol
push
and
add
sub
not
shr
sub
rol
add
pop
shr
rol
pop
push
push
push
push
lea
push
call
pop
lret
movsb
lock
jmp
mov
xlat
rcl
fwait
add
roll
les
pop
roll
mov
add
add
push
lods
mov
in
in
js
fiaddl
roll
add
mov
add
add
movsl
add
out
mov
push
call
fdivrl
test
xchg
add
pop
push
push
push
push
lea
push
call
add
fldl
mov
lahf
push
add
add
jmp
add
stos
add
mov
clc
xlat
add
lds
mov
jge
sti
add
loopne
out
lahf
xchg
jmp
add
popf
xchg
add
test
add
shlb
pusha
add
arpl
call
push
push
push
push
push
push
call
testl
loop
data16
rolb
scas
gs
add
add
add
mov
jns
gs
add
js
add
add
xlat
aam
loope
pop
mov
mov
arpl
add
jns
add
mov
icebp
ret
int3
add
pop
mov
add
pop
mov
push
push
lea
push
call
mov
jmp
add
add
add
fldcw
lods
cld
repnz
add
mov
loope
jne
out
add
jl
add
add
mov
add
hlt
lea
pop
push
push
push
push
call
popf
mov
jl
nop
lods
add
fadd
mov
pop
add
cmc
addb
imul
sti
push
out
icebp
gs
lods
mov
add
add
lea
add
arpl
mov
add
push
push
push
push
push
push
call
add
xchg
xchg
add
ja
cld
push
jecxz
testb
scas
add
aad
add
movsl
add
popf
add
add
add
add
add
lret
pusha
add
add
add
lahf
add
add
add
add
pop
add
ja
jecxz
add
add
add
mov
mov
lea
pop
add
push
push
push
lea
push
call
add
add
add
add
add
jp
add
add
int
add
mov
clc
add
pop
fmuls
pop
add
mov
push
push
push
push
lea
push
push
lea
push
push
push
push
push
call
in
xchg
push
add
mov
add
add
ljmp
jnp
pop
add
lea
nop
hlt
add
add
mov
lods
add
push
clc
mov
xchg
add
add
add
add
je
xchg
add
test
xchg
add
mov
add
pop
xor
push
push
push
push
push
push
push
push
call
mov
lret
pop
xchg
cmc
add
outsl
imulb
add
stc
out
hlt
add
out
test
lahf
bound
add
call
pop
aad
jae
rolb
mov
mov
jo
lods
stc
mov
int
jns
cltd
cwtl
mov
lea
pop
add
push
push
lea
push
push
push
push
push
push
push
call
add
jge
add
add
mov
xchg
push
arpl
add
sahf
add
out
xchg
pushf
fadds
add
call
add
cmc
jecxz
jne
out
add
jge
testl
bnd
addr16
add
add
lahf
add
mov
cmpsb
test
add
mov
movsl
add
scas
ret
add
lods
rcrb
lods
std
mov
lea
pop
add
push
push
push
push
call
cmpsl
call
mov
addr16
add
add
push
jae
add
cli
mov
xchg
aad
add
lea
lret
mov
mov
jmp
add
jle
add
pop
mov
xor
push
lea
push
push
lea
push
lea
push
call
add
add
xchg
cwtl
jb
mov
add
add
int
movsb
out
pop
add
std
add
add
mov
add
mov
lea
pop
add
push
lea
push
push
push
push
push
lea
push
call
pusha
int3
jo
jb
lods
lret
push
test
fadds
add
cmc
lret
fsubrs
push
push
pop
add
jae
add
add
add
test
pop
xchg
rclb
mov
add
add
in
addb
add
add
add
test
add
cltd
pop
imul
pushf
lods
mov
xchg
add
in
cltd
jne
add
pusha
add
add
add
add
int3
lea
pop
pop
push
push
push
lea
push
push
push
push
lea
push
call
push
add
cwtl
lcall
lret
mov
popf
add
push
add
add
ficoms
pop
add
lcall
movl
cld
add
mov
add
add
sarb
pop
insb
xchg
nop
aad
add
pop
mov
mov
lea
pop
mov
push
push
push
push
push
push
call
add
add
ja
add
loop
add
pop
clc
test
add
add
aam
add
mov
xlat
add
movsl
in
lea
push
xchg
add
mov
out
jb
repnz
test
jno
add
pushf
add
jae
mov
add
push
add
iret
jl
add
add
mov
lea
pop
xor
push
push
push
push
lea
push
push
push
push
push
call
add
negb
xchg
std
add
test
lahf
lret
rolb
add
add
xchg
add
loope
ja
add
test
mov
pop
loopne
xchg
je
nop
fs
add
lea
pop
add
push
lea
push
push
call
test
add
add
mov
add
jp
jmp
add
movsl
pushf
call
lds
pop
in
stos
xchg
les
scas
push
add
imul
scas
mov
cld
add
mov
mov
lea
pop
push
push
push
lea
push
call
add
ja
add
ja
jno
test
mov
add
add
mov
mov
push
cmpsl
mov
aad
arpl
add
in
cli
filds
add
add
lret
add
mov
lea
pop
mov
push
push
push
push
call
stos
loope
in
xchg
adc
in
into
int3
ja
add
in
add
jno
add
fldl2t
mov
add
add
jno
push
pop
add
outsl
jmp
pushf
add
testb
jmp
mov
add
add
pop
lock
push
xchg
lahf
add
les
jle
add
mov
fisubl
or
xor
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
call
aam
mov
add
les
jns
jnp
rcr
add
mov
iret
add
test
mov
add
out
add
push
add
test
addb
fldenv
out
add
add
jge
aad
add
add
in
enter
mov
ret
add
jge
in
cwtl
mov
xchg
add
jb
gs
lea
pop
add
push
push
push
lea
push
push
push
lea
push
push
call
addl
add
insb
add
fsubr
mov
jne
fs
add
add
add
in
out
cmpb
add
pop
mov
enter
pop
test
add
scas
pop
xchg
jmp
mov
lea
pop
sub
pop
push
push
push
push
push
push
push
push
push
call
pop
xchg
pop
add
jl
pop
add
fimull
pusha
jle
add
add
filds
addr16
add
add
pop
lock
pusha
cmpsl
pop
in
xchg
popf
add
add
mov
xchg
cmc
in
add
movsb
fsubrl
popa
jns
add
incb
ljmp
add
xlat
add
shl
push
jne
mov
add
mov
lea
pop
rep
push
lea
push
push
lea
push
lea
push
call
add
add
add
clc
mov
pop
add
add
add
add
add
push
flds
rcrl
cmp
fiaddl
js
movb
mov
lea
pop
pop
mov
push
push
push
push
call
lock
out
push
pop
add
xchg
add
mov
mov
add
push
test
sti
add
mov
add
add
add
pop
add
add
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
mov
nop
cltd
add
jmp
xchg
in
add
icebp
mov
fiadds
jnp
jmp
cmpsl
add
add
call
push
add
mov
mov
mov
mov
add
mov
cmc
js
fwait
out
jbe
add
pop
add
mov
push
push
push
lea
push
push
call
mov
mov
test
les
fisttpl
scas
mov
add
scas
int3
add
add
add
pusha
rolb
addb
xchg
mulb
add
bound
in
subb
add
testb
xlat
push
add
xchg
fsubr
addl
mov
jmp
hlt
add
add
add
lds
pusha
jb
add
add
pop
xor
push
push
call
mov
add
jo
add
outsl
rolb
add
xchg
add
add
pop
shlb
mov
add
jbe
jae
roll
add
add
pusha
mov
add
push
add
jl
add
mov
add
add
add
add
xchg
add
add
mov
flds
pop
jne
add
or
les
add
push
push
push
lea
push
push
lea
push
call
jge
cld
movsl
cmpsb
push
pop
add
add
or
cli
add
pop
jnp
mov
add
add
pop
call
scas
movsb
outsl
jp
hlt
movsb
add
lret
mov
je
xlat
mov
movsb
aam
mov
xchg
mov
add
rolb
mov
imull
les
pop
mov
pop
jbe
scas
divl
add
mov
lea
pop
mov
xor
push
push
push
call
jno
popf
add
pop
mov
roll
lret
test
add
add
clc
popa
mov
cwtl
pop
add
add
mov
cmpsb
std
add
testl
mov
add
mov
stos
add
mov
add
add
ljmp
addr16
mov
push
push
lea
push
lea
push
push
call
add
call
pop
jle
jae
jnp
add
add
stc
add
imul
add
stos
fs
stos
cmc
pop
add
push
add
cwtl
loop
movsb
add
mov
add
imul
int3
data16
aam
bound
pop
xor
push
push
push
push
push
push
push
lea
push
lea
push
call
xchg
add
fildl
add
add
aam
outsw
add
jno
lock
jge
pop
jmp
int3
xchg
mov
add
add
add
mov
mov
add
add
add
add
lcall
push
pop
xchg
filds
int3
add
data16
mov
loope
mov
lea
pop
add
push
lea
push
push
call
jle
add
xchg
add
outsl
jle
mov
fstps
add
addl
add
add
add
add
test
add
add
pop
add
add
test
jmp
add
add
push
add
add
into
push
add
mov
lea
pop
add
push
lea
push
push
push
call
add
fstpt
add
add
mov
movsl
roll
add
stos
add
les
in
pop
add
add
mov
pusha
mov
jp
cmpsb
add
pop
add
push
lea
push
lea
push
call
add
jge
add
lret
add
add
add
in
xchg
iret
jnp
mov
push
out
out
mov
aad
mov
in
add
iret
cltd
add
fadds
imul
or
mov
push
push
sub
push
or
not
add
lea
sub
xor
sub
pop
inc
dec
lea
sub
pop
push
push
push
push
call
add
stos
scas
add
arpl
fs
push
cmc
add
out
add
data16
out
scas
jns
mov
add
lea
jecxz
jne
loop
push
or
push
int3
negb
js
add
mov
fldl
cmpsb
filds
add
lea
pop
pushl
push
lea
push
push
lea
push
push
push
push
push
push
call
call
pop
add
mov
add
pusha
call
stc
pop
add
jne
cld
add
mov
add
aad
pusha
mov
add
jl
xor
xchg
mov
data16
data16
loope
push
data16
mov
pop
rcll
add
jnp
loopne
popl
mov
add
add
orb
call
push
lea
push
lea
push
push
lea
push
push
push
call
add
testb
add
mov
imul
add
loope
add
addb
add
les
outsl
fildl
in
add
idivl
mov
push
jno
xchg
je
scas
push
mov
lea
pop
push
push
push
inc
sub
xor
ror
push
xor
add
rol
shr
shl
rol
sub
sub
shr
pop
sub
shl
sub
pop
push
push
push
push
push
push
push
push
lea
push
call
mov
jns
lea
push
jo
xchg
add
pop
add
add
xlat
jle
add
xorl
pop
scas
data16
mov
mov
lock
pusha
add
add
xchg
add
imul
lea
pop
push
push
push
call
add
pop
int
add
add
test
sahf
add
rolb
fdivs
or
add
push
xchg
lcall
insb
add
add
jl
test
add
mov
ja
mov
cmpsl
lahf
push
test
mov
add
jae
add
sti
fstpl
repnz
out
in
mov
lea
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
add
iret
jmp
in
insb
add
xchg
push
call
fs
xchg
ficomps
pop
pop
insb
mov
jnp
in
xchg
icebp
addb
imul
pusha
movsb
lods
add
xchg
fs
flds
in
enter
clc
mov
in
mov
lea
pop
call
mov
push
lea
push
push
push
push
push
push
call
add
mov
lret
test
out
popf
xlat
add
jno
cmpsl
je
jle
add
ret
fwait
mov
add
mov
mov
cmpsl
add
add
fildl
cld
nop
lods
add
add
mov
sbb
push
push
push
call
pusha
add
add
add
add
data16
gs
fildll
add
add
add
movsl
push
pop
xchg
mov
add
add
les
push
push
lea
push
push
push
push
push
push
call
push
jmp
add
lods
mov
add
add
scas
fisubs
fidivrs
mov
add
jge
out
fcmovb
leave
jl
add
mov
add
add
add
add
test
test
add
pop
mov
push
shl
sub
pop
add
push
xor
ror
sub
pop
add
push
lea
push
push
push
push
call
add
add
test
add
jo
add
mov
roll
add
movl
mov
rolb
lods
loop
fdivs
stos
push
add
adc
add
push
add
lea
pop
mov
xor
push
push
call
add
test
hlt
flds
fld
add
add
cmpsb
fdiv
int
pop
add
mov
xchg
add
stc
add
js
movsl
add
cli
mov
ljmpw
add
pop
clc
nop
pop
mov
push
lds
lea
pop
add
push
inc
pop
push
mov
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
fwait
arpl
loop
nop
add
test
add
add
in
mov
imul
add
mov
sbbb
lea
pop
xor
push
push
call
std
sbbl
popa
add
add
add
jmp
ret
xchg
cld
add
jb
into
lea
cmc
add
add
je
add
add
mov
add
mov
lea
pop
add
push
not
lea
pop
add
push
push
push
push
push
push
call
pop
mov
add
add
add
popa
out
pop
mov
sbb
jl
ret
jbe
imul
xchg
pop
xchg
add
push
in
shll
add
add
add
int3
add
add
lret
mov
xorl
les
push
sub
dec
pop
mov
xor
push
sub
sub
xor
pop
rep
mov
push
push
push
push
push
lea
push
call
mov
lock
add
shll
add
add
jns
mov
in
add
std
mov
add
mov
add
add
cli
add
add
lods
flds
pop
add
mov
mov
add
sbbb
imul
lods
jmp
mov
mov
lea
pop
xor
push
push
push
push
call
mov
add
call
add
add
out
add
jb
popf
roll
mov
push
pop
push
andb
add
leave
pusha
add
mov
cltd
roll
in
mov
add
add
lea
pop
add
push
add
pop
or
je
push
dec
sub
pop
mov
xor
push
push
push
call
mov
ret
fnstenv
add
addr16
xchg
mov
xlat
add
fwait
stc
addb
cmc
jns
test
imul
add
add
jmp
add
add
roll
imul
xchg
pop
add
test
jbe
add
add
cmpl
icebp
jle
in
add
add
push
add
lea
pop
mov
push
push
push
push
push
call
push
add
leave
add
mov
add
loope
add
fidivrl
cmpsb
add
add
push
push
scas
jge
xchg
add
add
cld
mov
add
aad
decb
adc
adc
push
push
lea
push
push
push
push
push
lea
push
call
mov
cmc
in
add
mov
loope
int
lods
add
in
in
add
add
push
push
repnz
push
add
mov
lock
stos
sar
nop
std
add
popl
test
iret
jbe
add
roll
add
mov
fisubs
add
fsubs
mov
cld
lea
pop
add
push
sub
dec
lea
pop
add
push
push
lea
push
push
lea
push
call
push
add
jb
mov
xchg
add
fiaddl
add
pop
movsb
add
ret
add
in
outsl
js
mov
hlt
add
add
cmpsl
add
add
mov
jle
jle
add
movb
sti
mov
add
push
mov
add
add
add
data16
add
push
push
push
push
push
call
stos
stos
in
hlt
mov
jbe
cmpsb
imul
xchg
pushf
test
jo
xlat
add
add
add
add
add
mov
add
add
scas
mov
add
test
fwait
jle
add
pop
mov
xor
push
push
push
call
pop
xchg
pop
mov
push
add
imul
pop
outsl
mov
add
pusha
stos
call
pushf
add
ljmp
add
mov
add
mov
testb
rolb
jno
imul
std
fdivl
add
mov
add
add
push
add
cwtl
jmp
cmpsb
add
aam
bound
add
push
xor
dec
pop
pop
rep
push
push
push
push
push
push
lea
push
push
push
call
pusha
add
jmp
add
out
add
scas
mov
add
rclb
add
add
fs
xorl
add
add
aad
pop
les
fcmove
jp
pop
add
mov
scas
addb
add
push
in
add
nop
data16
hlt
add
add
add
push
add
add
and
mov
xor
push
lea
ror
shl
pop
or
je
push
add
ror
pop
mov
add
push
add
rol
pop
add
push
ror
pop
rep
push
lea
push
push
push
push
push
call
sti
add
add
add
add
add
jae
movsl
add
add
repnz
add
les
jmp
mov
add
add
add
jnp
add
jo
mov
add
fistl
jnp
add
stc
ljmp
mov
lea
pop
pop
push
push
sub
sub
add
push
push
pop
add
not
ror
not
inc
sub
rol
sub
pop
pop
push
push
call
jmp
testw
icebp
add
add
add
pop
mov
xchg
mov
add
ret
notl
mov
add
add
hlt
mov
add
add
xlat
lret
pop
add
jle
xchg
add
add
add
mov
add
add
addr16
out
loop
filds
in
jo
add
pop
pop
mov
push
push
call
add
add
test
pushf
jl
push
add
mov
jecxz
add
add
outsl
add
incb
add
stc
in
add
xlat
push
add
add
add
loop
fwait
add
add
add
stos
mov
lea
pop
mov
push
shr
not
add
pop
mov
push
push
lea
push
push
lea
push
push
push
call
jl
mov
add
add
mov
add
mov
mov
fnstcw
jp
add
shrl
imull
shlw
add
add
add
add
add
jnp
addb
lcall
iret
jbe
ficomps
in
fsub
pusha
in
out
add
mov
lea
pop
jmp
push
shl
not
pop
push
push
shl
lea
dec
rol
pop
mov
push
lea
push
lea
push
push
call
add
mov
test
fistps
add
add
pusha
scas
add
int
add
add
out
lret
aad
add
in
lods
add
jge
add
std
out
push
mov
adc
cld
push
push
add
lea
ror
pop
push
push
xor
ror
rol
pop
push
push
push
push
push
push
push
call
iret
mov
add
add
lods
add
in
jne
out
movsb
icebp
mov
into
jnp
add
add
add
outsl
add
loopne
pop
add
add
pop
mov
cltd
mov
int3
lahf
cmpsl
nop
add
add
mov
add
outsl
test
sti
add
int
mov
add
filds
out
nop
mov
lret
fiadds
add
add
aam
bound
pop
push
push
add
ror
xor
pop
mov
push
push
push
push
push
lea
push
push
call
cld
sub
mov
ljmp
cli
add
add
push
add
loope
mov
add
jne
popl
mov
in
mov
mov
xchg
les
jne
loopne
add
mov
add
add
jnp
add
mov
fildl
lea
pop
pop
push
lea
push
push
push
lea
push
push
push
call
in
mov
add
add
cwtl
add
mov
hlt
add
pop
add
add
mov
add
xchg
pop
mov
pop
xchg
add
jo
mov
add
fucomip
mov
add
imul
cmpsb
add
add
mov
add
add
iret
add
jl
cwtl
jmp
add
aad
mov
lea
pop
pop
push
push
push
lea
push
push
lea
push
lea
push
push
call
lods
add
mov
push
mov
imul
lret
add
repnz
add
mov
stos
js
pop
add
xchg
add
aad
add
insb
add
push
sti
add
aam
bound
pop
pop
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
gs
int3
add
add
aad
add
sahf
mov
add
jno
add
push
rolb
add
add
lods
out
fiadds
lret
add
out
mov
mov
add
add
jl
jae
add
mov
pop
std
add
int
flds
add
add
fmull
push
push
push
push
call
test
add
mov
add
add
call
add
pop
test
cld
jge
add
add
cld
add
add
add
add
push
add
lds
lret
lcall
loop
add
mov
int3
add
leave
fwait
adc
int3
lea
pop
leave
push
shl
add
ror
pop
ret
push
push
push
call
add
add
add
mov
add
add
add
xchg
bound
push
add
xchg
jnp
add
xchg
repnz
add
jecxz
out
je
add
pop
mov
push
loop
sbbb
push
rcrb
add
xchg
mov
add
mov
mov
lea
pop
push
push
lea
push
call
add
fldenv
add
test
arpl
jb
or
mov
cmpsb
xchg
add
xchg
mov
fsubrl
jb
in
add
add
fadd
push
mov
add
fldcw
add
add
jno
add
stos
lahf
mov
push
jae
mov
aam
bound
pop
mov
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
cmpsb
push
add
add
add
roll
pop
push
clc
add
pop
imul
mov
lahf
add
push
subl
fwait
test
arpl
add
mov
rcr
mov
add
fdivs
add
add
nop
arpl
mov
leave
add
fsubr
mov
jae
out
push
mov
addr16
add
push
push
push
push
lea
push
call
add
cmpsb
test
add
roll
call
movb
add
add
add
test
add
addl
add
iret
add
repnz
add
scas
add
add
add
idivl
jl
add
divb
hlt
lea
pop
push
push
rol
shr
pop
push
push
add
sub
not
pop
push
push
push
sub
shl
pop
movl
push
xor
pop
addl
push
sub
dec
pop
test
je
push
sub
add
not
pop
mov
push
add
sub
pop
pop
push
rol
shr
pop
pop
pop
push
lea
push
push
push
push
call
mov
add
add
add
rorl
add
and
mov
loop
add
bnd
add
in
push
in
lods
filds
add
idivb
sti
add
scas
add
nop
add
js
outsl
pop
jns
push
lahf
xchg
gs
add
mov
roll
add
sar
pop
ljmp
adc
pop
push
push
push
push
push
push
push
lea
push
push
push
call
cld
lods
rolb
fadds
add
add
xchg
rcr
in
je
ljmp
add
arpl
addl
jne
jo
add
add
mov
cltd
pop
add
add
test
add
push
add
add
add
add
add
add
jl
test
int3
lea
pop
leave
push
ror
sub
sub
shl
pop
ret
push
push
push
call
rorb
outsl
movsl
jmp
add
add
add
add
mov
lock
add
xchg
pop
movl
xchg
add
std
xchg
mov
movsb
add
out
mov
jecxz
add
add
jns
jecxz
add
movsl
bound
add
test
lea
add
jne
hlt
lea
pop
push
push
shr
rol
shr
xor
pop
mov
add
push
xor
shl
shl
not
pop
push
push
sub
lea
sub
not
pop
push
push
lea
push
push
call
add
ljmp
push
mov
mov
clc
cmpsl
push
jno
int3
pop
hlt
add
add
pop
data16
lds
cmc
nop
add
frstor
add
imul
add
cmpsb
mov
add
add
pop
pushf
add
add
mov
lea
pop
push
push
push
ror
dec
sub
xor
pop
testl
addl
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
cld
mov
add
add
cwtl
add
add
stos
add
add
pop
mov
repnz
movb
xchg
aad
add
cli
add
add
push
jp
fildl
stos
ja
add
jmp
mov
jns
mov
fldl
add
mov
cltd
mov
lea
pop
push
push
inc
lea
pop
call
push
push
push
push
call
xchg
negb
mov
add
add
add
mov
cli
add
push
add
lods
add
add
cltd
add
roll
mov
pop
add
xchg
add
add
add
mov
lea
pop
mov
pushl
push
pop
push
push
sub
pop
push
call
push
rol
sub
xor
pop
cmpl
jne
push
ror
rol
pop
pop
pop
push
push
push
push
lea
push
push
push
call
add
add
les
add
jl
push
mov
push
add
add
jl
loopne
jbe
add
mov
add
mov
loop
mov
add
jnp
mov
xchg
add
lea
lea
mov
roll
pop
mov
lea
pop
pop
push
ror
sub
add
pop
pop
push
push
lea
push
lea
push
push
call
xchg
orl
shll
add
popa
add
add
jmp
cmpsb
add
out
mov
addl
push
testl
fiadds
scas
roll
imul
adc
leave
push
lea
push
call
jecxz
nop
add
cli
popa
jmp
mov
add
add
lahf
out
add
fnsave
mov
add
imul
add
test
xchg
test
add
add
rol
mov
xorb
stc
mov
repnz
pop
add
mov
lock
xchg
in
jae
add
jmp
pop
xchg
pop
ret
push
sub
sub
shr
pop
push
push
shr
sub
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
loopnew
cmpsl
scas
add
roll
lds
add
add
pop
testb
add
cld
add
add
add
arpl
scas
add
nop
int
movsb
jae
mov
lea
pop
add
push
push
add
pop
push
push
add
ror
sub
pop
push
push
add
pop
push
movl
push
sub
shr
add
pop
push
push
lea
push
call
outsl
pop
add
add
mov
add
mov
aam
pop
ret
xchg
add
add
jne
out
mov
faddl
test
add
shr
cmpsb
add
data16
faddl
add
add
insb
push
lcall
shr
add
jnp
mov
lea
pop
call
push
lea
push
push
push
push
push
push
push
lea
push
call
xlat
xchg
js
push
xchg
pop
mov
add
pop
push
ret
add
mov
add
imul
test
lcall
out
arpl
test
pop
add
xchg
jne
add
and
xchg
xchg
add
add
add
add
scas
push
jne
add
pop
push
push
lea
rol
sub
pop
call
push
lea
push
lea
push
push
call
sti
add
push
pop
aam
test
test
test
add
xchg
int
add
cmpsl
movsl
sarl
hlt
add
add
pop
pop
call
clc
jp
iret
repnz
add
add
popa
add
in
mov
add
pop
subl
push
rol
not
pop
cmpl
jne
push
lea
push
lea
push
push
lea
push
push
call
into
add
hlt
enter
push
flds
leave
mov
add
pusha
add
icebp
add
add
add
add
in
into
add
lods
add
add
mov
add
add
mov
movl
int3
lea
pop
pop
push
push
call
pushf
in
test
gs
scas
add
lret
popf
movsb
add
repnz
fiaddl
mov
add
xchg
mov
cmpsl
add
add
loop
xchg
add
jb
mov
lea
pop
pop
push
lea
push
push
call
add
shrl
lods
add
les
scas
lea
clc
xchg
jmp
mov
rolb
add
jecxz
xchg
int3
add
add
stc
push
lret
add
mov
lea
pop
pop
push
shr
xor
sub
pop
pop
push
dec
shl
pop
leave
ret
push
add
pop
push
mov
push
push
push
push
push
push
lea
push
call
out
hlt
add
push
add
add
add
add
pop
add
mov
jl
mov
icebp
add
jno
scas
imul
pop
clc
add
pop
in
lcall
add
push
add
add
pop
add
push
push
lea
push
push
push
push
push
push
push
lea
push
push
call
mov
mov
mov
add
nop
mov
popa
xchg
add
add
push
jnp
bound
add
add
add
add
add
add
push
add
fdivl
jge
jmp
lods
test
jae
add
xchg
add
add
xchg
jle
addr16
addr16
mov
arpl
pop
push
push
push
call
add
add
repnz
cmpsl
add
xchg
test
lods
ror
add
movsl
in
mov
pusha
mov
add
add
add
add
push
xchg
add
add
mov
lea
pop
push
push
push
push
push
push
push
push
call
nop
add
stc
fmull
fs
mov
xchg
movsb
xchg
add
imull
imulb
lea
add
call
add
fs
pop
push
and
xorl
add
cmpl
push
cwtl
testl
jp
int
lea
add
add
xchg
xchg
add
add
lret
mov
lea
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
call
incb
xchg
add
mov
jb
add
fsubr
add
add
icebp
push
fstl
lods
add
add
add
add
icebp
push
idivl
popl
add
addb
call
scas
icebp
mov
add
jecxz
leave
mov
into
movsl
add
imul
pop
jno
stc
add
rcl
add
add
mov
add
addr16
nop
add
add
fmull
inc
or
lea
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
clc
loop
int3
add
jmp
aam
add
mov
in
ljmp
stos
xchg
sti
add
add
add
add
push
xchg
add
ja
andl
add
ljmp
jb
add
add
fildl
add
pop
jbe
fs
jns
lods
add
popa
sub
inc
cmp
push
push
push
push
push
call
add
add
sarb
xchg
add
add
add
imul
add
jno
jae
lds
xchg
add
lds
add
jb
mov
add
jmp
loope
movsl
add
pop
leave
jmp
add
jo
add
lea
bound
pop
sub
mov
push
push
push
push
push
push
call
add
push
add
fprem
push
mov
push
sahf
mov
add
add
xchg
scas
mov
jb
add
fidivrl
in
push
push
ficoms
push
add
add
callw
cmc
add
push
mov
lea
pop
shr
add
push
not
lea
sub
pop
mov
mov
push
not
pop
add
push
push
push
push
call
mov
add
add
roll
add
push
mov
add
add
fcmovnu
mov
lret
add
push
add
mov
add
add
add
xchg
addb
subb
add
out
add
add
cltd
add
fildl
les
int3
xchg
jmp
out
andb
fmull
shlb
inc
add
add
jmp
add
xor
pop
mov
push
lea
push
push
push
push
call
add
lock
push
push
loop
add
add
mov
add
gs
add
add
add
add
imul
cld
jmp
mov
add
rorl
pop
cmp
jne
push
ror
pop
cmp
jne
mov
push
not
pop
movl
jmp
push
add
dec
pop
mov
push
sub
xor
add
pop
mov
sub
jne
push
push
lea
push
call
mov
add
repnz
mov
add
movsl
mov
add
decb
fst
cltd
add
test
lahf
rolb
mov
mov
scas
mov
jl
pop
call
enter
push
outsl
add
push
test
std
jbe
cmp
scas
iret
mull
lea
pop
mov
push
push
push
call
add
test
in
add
jle
scas
xchg
add
add
xchg
pusha
push
mov
cmc
mov
int
stc
add
add
mov
fwait
add
pop
popl
add
ficompl
mov
xchg
jmp
add
add
faddl
cmpl
add
add
mov
add
fmull
add
add
push
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
mov
test
add
pop
add
mov
add
out
std
jnp
stc
mov
add
add
add
add
fwait
mov
add
cli
add
mov
add
add
out
mov
faddl
arpl
jle
add
xlat
cld
mov
lea
pop
jmp
mov
push
dec
pop
mov
push
sub
pop
cmp
jne
push
shl
not
add
pop
mov
push
push
push
push
push
push
push
call
test
add
add
add
add
add
stc
mov
fwait
add
jns
roll
add
testb
data16
aam
jb
mov
pop
add
add
loope
add
add
mov
lea
pop
movl
push
pop
jmp
mov
push
lea
sub
lea
pop
cmpw
jne
push
add
shl
rol
pop
mov
movl
push
push
push
lea
push
push
push
push
lea
push
push
push
call
roll
xchg
add
rolb
add
add
movsl
mov
mov
mov
add
add
add
shl
stos
cli
jmp
add
js
add
into
testb
loop
rcrl
testb
imul
rcr
xchg
test
lret
pusha
in
mov
lea
pop
jmp
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
ja
add
shll
add
add
enter
jb
fistpll
popf
add
add
add
xlat
push
add
cltd
mov
add
loope
add
ret
mov
mov
add
add
and
pushl
push
shl
ror
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
arpl
lods
mov
mov
mov
push
push
mov
push
jmp
les
fsubl
fiadds
fcmovnb
add
test
add
add
pop
add
xchg
add
cmpsl
andl
sarl
fwait
out
cmpsl
jge
scas
mov
shll
add
lret
add
lods
add
les
inc
or
push
push
push
push
push
lea
push
call
add
frndint
test
in
lcall
mov
add
jae
fstl
add
add
mov
jp
movsb
add
add
jmp
add
jecxz
add
cld
xchg
add
add
jne
push
push
mov
nop
xchg
add
add
add
add
add
add
push
add
add
push
push
enter
jl
cli
add
add
fucomi
rorl
pop
mov
push
push
push
push
push
lea
push
push
push
call
aad
add
add
loop
push
push
add
push
add
cltd
incb
popf
ror
add
filds
lret
pop
add
fs
push
add
stos
jns
out
je
addb
add
mov
lea
pop
mov
push
push
add
not
add
push
sub
add
shl
sub
sub
add
pop
rol
add
add
rol
pop
push
sub
inc
pop
push
push
add
pop
call
push
push
push
push
push
push
push
push
call
mov
xlat
pop
repnz
push
pop
into
push
pusha
mov
add
add
add
in
int
movsb
bound
fists
cmc
fldl
add
add
js
test
push
loop
ja
cld
lea
pop
cmpl
je
push
push
xor
dec
sub
push
or
inc
add
sub
rol
sub
lea
pop
xor
lea
sub
pop
push
lea
push
push
lea
push
push
push
push
push
call
insb
jecxz
add
jge
mov
add
mov
add
add
add
add
add
jmp
xlat
add
push
add
sahf
add
into
mov
add
add
pop
add
aad
add
xchg
jae
xlat
frstpm(287
add
in
add
add
add
bound
pop
push
call
push
push
push
lea
push
push
call
pop
mov
mov
pop
iret
mov
add
jbe
push
scas
add
add
add
mov
negb
add
popl
add
mov
add
lea
pop
cmpl
je
push
push
xor
add
push
sub
add
not
not
dec
sub
lea
dec
pop
shl
sub
pop
push
add
lea
pop
push
call
push
push
push
push
lea
push
push
push
push
push
call
add
rolb
call
ljmp
add
pop
jnp
int
repnz
push
push
add
add
add
add
ja
pop
xchg
mov
mov
add
addl
popa
and
cmpl
je
push
push
lea
add
sub
push
or
not
add
lea
lea
sub
lea
sub
pop
shl
shr
pop
push
sub
pop
push
call
push
lea
push
push
lea
push
push
push
push
push
call
xchg
std
cld
add
jbe
add
xchg
jmp
add
add
mov
mov
add
add
lahf
add
flds
add
xchg
pop
add
cld
jl
std
xchg
jecxz
add
les
add
cli
xchg
popl
aam
data16
out
add
call
andl
add
add
mov
cmpsb
push
pusha
and
cmp
add
int3
je
push
push
shr
ror
shr
push
push
pop
add
sub
sub
shl
sub
not
add
pop
sub
sub
shl
inc
pop
push
push
push
lea
push
call
jbe
add
add
ror
add
mov
add
cltd
test
int
add
in
add
add
add
movsb
add
jge
shl
add
mov
int
push
mov
into
add
pop
add
mov
add
add
xchg
push
add
jecxz
add
add
bound
add
jae
fmull
call
push
pop
cmpl
je
push
push
dec
push
or
not
add
sub
add
xor
sub
sub
pop
lea
sub
ror
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
scas
add
add
aam
add
pusha
mov
add
add
cltd
xchg
insb
pop
subl
add
add
add
add
add
stos
add
popa
mov
lea
pop
push
push
add
ror
sub
pop
call
push
ror
pop
cmpl
je
push
push
shr
ror
add
push
and
add
inc
sub
ror
sub
shl
pop
add
add
lea
pop
push
ror
pop
push
push
shl
pop
call
push
sub
not
pop
cmpl
je
push
push
add
xor
dec
push
xor
add
sub
lea
inc
shl
sub
xor
sub
ror
pop
shl
pop
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
rolb
cli
scas
add
popa
add
add
stos
mov
pop
jmp
add
add
mov
add
add
add
cld
rolb
add
xchg
pop
nop
jne
push
insb
add
lcall
pop
add
add
xchg
mov
add
addb
mov
mov
add
add
pusha
sub
call
push
lea
push
push
push
push
lea
push
push
call
nop
jp
add
add
loope
add
mov
add
add
cmc
mov
add
add
add
mov
mov
hlt
out
add
push
jno
add
add
bound
add
add
add
add
push
movb
add
lea
pop
cmpl
je
push
push
sub
add
push
and
add
lea
sub
sub
xor
lea
pop
dec
sub
pop
push
lea
push
push
push
push
push
push
push
call
addr16
jb
mov
add
add
std
pop
mov
mov
add
add
loop
add
xchg
add
pop
pop
roll
cmpsl
add
outsl
outsl
std
pop
imull
les
mov
mov
add
in
mov
outsl
stc
lahf
sarb
int3
lea
pop
push
push
add
inc
add
sub
pop
call
push
push
call
ljmp
add
add
jmp
xchg
add
jmp
data16
add
cwtl
push
mov
add
add
jle
add
insb
fldl
pop
mov
push
xchg
ficomps
cli
add
add
xchg
add
add
lahf
fstpt
mov
scas
add
add
pop
pop
add
shrl
lea
pop
cmpl
je
push
push
add
shr
push
and
add
sub
not
sub
sub
pop
rol
sub
lea
add
pop
push
lea
pop
push
call
push
sub
dec
lea
pop
cmpl
je
push
push
shl
dec
push
or
not
add
not
sub
inc
not
pop
xor
add
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
hlt
add
sahf
xchg
rolb
jns
add
fs
push
iret
jecxz
cld
popf
add
add
lret
scas
cltd
testb
lret
push
add
outsl
icebp
lret
add
stos
add
fmull
push
shr
ror
pop
call
push
shl
ror
dec
lea
pop
cmpl
je
push
push
dec
xor
add
push
or
inc
add
lea
sub
xor
dec
ror
sub
pop
dec
rol
xor
pop
push
push
push
push
push
push
push
push
call
outsl
push
lock
add
xchg
lods
add
insb
addr16
xchg
out
push
mov
add
lds
cmpsb
fdivrs
insb
mov
add
scas
arpl
xchg
jbe
jne
xchg
xchg
pop
add
xorb
data16
arpl
add
popf
rolb
cmpsl
mov
pusha
add
stos
ja
xorb
lret
icebp
xchg
fiaddl
add
add
xchg
xchg
test
stos
mov
lea
pop
push
push
shl
pop
call
push
push
lea
push
push
push
push
push
push
call
add
add
add
mov
add
xchg
add
mov
mov
clc
add
add
add
add
test
mov
pusha
je
test
ja
add
add
mov
lea
pop
cmpl
je
push
push
xor
shr
push
sub
add
xor
sub
add
inc
shr
pop
dec
pop
push
inc
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
cmpsl
je
add
xlat
add
add
test
add
addr16
add
jl
add
add
add
add
xlat
lcall
nop
mov
jge
add
jno
orl
add
push
ror
pop
cmpl
jne
push
push
push
call
add
add
pop
jne
out
add
add
std
add
fiaddl
xchg
fwait
add
lea
shr
add
out
cltd
int3
negl
add
push
pop
add
pushf
add
add
out
aam
testb
je
mov
ret
add
mov
lea
pop
mov
movl
push
push
call
jno
repnz
xchg
loop
pop
push
imul
push
add
add
mov
out
add
add
out
testl
fildl
mov
jbe
add
cmpsb
add
mov
mov
subl
call
loope
add
scas
clc
incb
popf
add
popa
add
add
pop
jmp
xor
push
sub
lea
pop
pop
push
push
call
jb
add
add
jae
add
xchg
in
jbe
add
add
add
loop
lcall
ret
add
add
push
mov
add
lock
add
add
add
ja
test
rorl
fiaddl
or
push
pop
pop
push
push
call
lcall
add
lea
add
ret
movsb
add
add
fisttps
add
add
add
in
xchg
mov
jnp
fldl
add
jbe
add
pop
loope
jbe
mov
add
mov
mov
add
add
mov
mov
arpl
push
outsl
imul
push
movl
or
push
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
call
mov
add
mov
arpl
add
add
add
imul
fiadds
out
mov
add
mov
repnz
cltd
xchg
add
add
add
movb
outsl
loop
mov
out
mov
lea
pop
leave
ret
push
lea
push
push
push
call
enter
addb
pop
arpl
push
add
add
fucomi
mov
add
add
cwtl
add
aam
jno
add
movl
add
push
mov
lea
pop
push
mov
push
ror
pop
add
push
xor
shl
shl
pop
cmpl
jne
push
push
sub
shr
ror
push
or
inc
add
inc
sub
ror
ror
add
shl
pop
not
add
add
pop
push
push
push
push
lea
push
push
call
add
lods
icebp
add
mov
lahf
mov
mov
add
jae
cltd
jnp
add
add
test
in
add
add
clc
mov
add
add
rorl
add
aad
lcall
add
add
pop
add
pop
pushl
call
push
lea
push
lea
push
push
lea
push
push
push
call
call
add
add
mov
mov
je
add
mov
xchg
add
add
in
movsb
add
add
push
cmc
jp
mov
add
lock
pop
pop
mov
add
mov
lea
pop
push
push
sub
dec
pop
call
push
ror
shr
add
pop
jmp
cmpl
je
push
pop
cmpl
jne
push
push
lea
push
push
push
lea
push
push
call
pop
ljmp
iret
sti
addr16
in
mov
mov
push
pop
leave
cmc
icebp
add
mov
push
jbe
add
add
xchg
add
add
add
add
add
int3
movsl
filds
add
push
lret
add
push
loop
out
add
sbb
leave
push
lea
sub
pop
add
push
lea
push
call
mov
std
add
push
outsl
ja
gs
shlb
xchg
lea
add
stos
add
test
incb
mov
add
add
out
add
nop
addb
add
mov
ja
aam
into
pop
add
sar
add
fxam
addl
pop
leave
fmul
sbbb
push
add
mov
lea
pop
pop
pop
push
push
push
push
lea
push
push
lea
push
push
call
lahf
popf
add
add
mov
add
imul
roll
outsl
test
ljmp
into
push
fwait
test
add
add
cmpsl
add
cmpsl
jns
add
add
add
push
mov
add
add
popa
loopne
xchg
fwait
push
jb
add
fidivrl
shl
add
rolb
repnz
out
mov
lea
pop
pop
push
push
push
push
push
push
push
call
add
call
add
add
add
add
add
add
into
add
push
add
jp
neg
add
ret
pop
add
pushf
icebp
add
add
mov
arpl
cmc
testl
mulb
add
outsl
xchg
xchg
movsb
add
add
je
push
int3
mov
lea
pop
pop
push
push
push
lea
push
push
call
jge
nop
add
jne
outsl
add
test
lea
add
pop
popa
xchg
fs
lods
add
pop
add
jle
pop
add
add
add
ljmp
add
mov
add
push
add
add
lds
lret
add
pop
add
add
shr
mov
add
pop
filds
cmpsb
movsb
jns
jns
hlt
lea
pop
leave
add
push
pop
ret
push
dec
sub
pop
jmp
push
pop
cmpl
jne
push
push
not
ror
push
xor
add
ror
sub
xor
pop
sub
inc
xor
pop
push
push
call
arpl
add
cld
testb
mov
add
add
add
mov
lods
outsl
popa
out
xchg
xchg
jmp
xchg
filds
imul
rol
cmpl
add
add
jecxz
out
mov
push
pop
scas
out
in
add
add
pushf
mov
out
fnstsw
je
hlt
lea
pop
pushl
call
push
push
lea
push
push
call
pop
push
fldl
rolb
lea
mov
bound
test
call
scas
jecxz
add
cld
ficoms
add
add
rclb
rolb
add
mov
add
call
add
adc
add
lea
pop
call
push
sub
dec
pop
jmp
cmpl
jne
push
lea
pop
mov
push
push
call
add
mov
add
repnz
scas
mov
filds
pop
add
cli
mov
add
mov
add
outsl
add
add
ret
add
test
mov
add
pop
pop
jge
xchg
add
add
push
add
jp
gs
jle
int3
add
push
nop
and
add
push
mov
fisubrl
push
mov
jmpw
lahf
add
gs
lea
pop
mov
push
push
push
push
push
call
add
mov
add
leave
push
add
mov
lock
imul
add
xchg
loop
pusha
push
add
mov
add
out
imul
add
add
jns
pop
in
out
scas
push
add
mov
lea
pop
call
push
push
push
lea
push
lea
push
push
push
call
xchg
xchg
lods
add
andb
add
add
mov
mov
sahf
add
nop
add
lret
sarl
mov
add
xchg
add
add
add
xchg
icebp
add
cmc
rcll
add
pop
push
push
push
not
lea
dec
push
and
add
shl
sub
rol
sub
sub
pop
dec
shl
not
pop
push
add
sub
pop
pushl
push
push
call
rcll
ficoms
bound
pop
xchg
mov
into
movl
rclb
xchg
add
aad
pop
popf
mov
add
sahf
push
add
add
sahf
mov
pop
call
push
rol
pop
call
push
push
not
push
or
inc
add
add
shr
ror
sub
inc
sub
pop
shr
pop
push
sub
pop
pushl
call
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
idivl
fucomi
bound
mov
enter
xlat
jo
hlt
jae
add
je
add
pushf
mov
add
add
push
xchg
jne
add
mov
add
add
addb
test
add
add
lcall
add
shlb
arpl
call
push
push
shr
sub
push
sub
add
lea
rol
sub
shl
pop
sub
shl
shr
pop
push
sub
ror
sub
pop
pushl
push
push
call
cmpsl
jp
add
add
popl
add
add
add
fucompp
fs
pop
add
add
repnz
rolb
mov
add
pop
add
add
jno
add
xchg
addr16
ljmp
add
lcall
imull
aam
bound
pop
call
call
push
push
add
dec
push
or
not
add
xor
not
sub
dec
lea
pop
sub
pop
push
lea
dec
add
pop
pushl
push
push
push
call
faddl
push
into
add
stos
add
jns
ljmp
test
cmpsl
test
enter
mov
jne
pop
in
lods
mov
mov
add
add
add
add
add
lret
fcmovnb
cli
add
pop
add
add
add
aad
xchg
add
add
add
pop
call
push
not
shl
inc
pop
call
push
push
lea
add
shr
push
xor
add
shr
xor
add
inc
sub
add
xor
pop
ror
dec
not
pop
push
push
push
push
call
xchg
iret
pop
cmc
shll
mov
add
leave
add
mov
add
addr16
add
icebp
add
lea
lock
mov
adc
jne
push
xor
sub
not
pop
call
push
add
pop
call
push
push
dec
not
push
xor
add
xor
sub
not
dec
add
pop
sub
add
pop
push
sub
lea
rol
pop
pushl
push
add
add
pop
call
push
push
lea
push
push
push
push
call
add
mov
add
add
imul
add
add
add
add
data16
lods
lods
mov
nop
add
pop
add
add
add
add
push
test
add
lret
rolb
pop
add
out
stc
add
push
add
push
rolb
aam
bound
pop
call
push
push
sub
sub
push
sub
add
sub
add
rol
inc
add
pop
pop
push
lea
push
lea
push
call
add
nop
test
jle
xchg
mov
add
jecxz
add
pop
jb
mov
clc
jmp
add
sahf
incb
fsubrp
mov
add
std
mov
lea
pop
pushl
push
inc
not
pop
call
call
push
push
rol
lea
push
sub
add
xor
sub
add
sub
sub
ror
lea
pop
add
pop
push
push
push
push
push
call
pop
push
add
shrb
in
fdivrs
int
add
mov
add
icebp
int
jmp
add
jnp
loop
add
mov
xchg
enter
andl
mov
ja
add
add
add
mov
add
pop
pushl
call
push
shl
pop
call
push
push
sub
not
xor
push
sub
add
add
sub
shr
dec
sub
pop
inc
pop
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
add
mov
push
add
add
add
add
lock
add
add
int3
add
loop
add
mov
in
add
add
enter
add
add
add
nop
out
aam
mov
lea
pop
pushl
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
idiv
call
xchg
insb
add
jne
insb
add
nop
mov
repnz
les
mov
fildl
push
hlt
lods
mov
lahf
add
push
add
add
jmp
add
mov
pop
fwait
negl
xchg
lea
pop
call
call
push
push
shr
ror
push
or
inc
add
not
add
ror
sub
rol
pop
dec
pop
push
push
push
call
lds
push
add
xchg
add
add
int3
roll
fldl
add
cmc
add
int
add
add
jns
pop
add
aad
add
add
mov
lods
sahf
add
or
pushl
push
push
lea
push
push
call
ficomps
flds
cli
cltd
mov
outsl
mov
fldt
mov
or
jns
add
add
add
add
add
add
loop
add
out
xchg
jge
arpl
xchg
add
imul
lret
add
add
mov
lea
pop
call
push
ror
add
not
pop
lea
push
lea
push
call
xchg
add
outsl
add
pop
add
mov
add
mov
add
insb
data16
incb
test
add
add
jp
jae
pushf
mov
add
add
add
mov
test
mov
add
add
sti
mov
into
add
out
xchg
outsl
add
add
push
add
add
lock
pop
add
add
popa
or
push
push
call
add
add
mov
pop
jbe
mov
add
rolb
add
mov
add
fildl
xchg
add
mov
pop
add
fmulp
flds
add
sahf
xchg
add
iret
add
roll
aad
add
mov
fmulp
cmpsl
add
icebp
addl
lea
pop
call
push
push
inc
not
push
xor
add
add
sub
not
inc
not
pop
lea
not
lea
pop
push
inc
add
pop
pushl
push
ror
sub
pop
call
call
push
push
shr
sub
push
or
not
add
sub
sub
add
add
sub
not
pop
xor
xor
sub
pop
push
push
push
push
call
sarl
pusha
add
add
scas
cmc
add
push
add
lret
add
mov
add
mov
fldl
add
in
lea
add
add
lret
add
mov
add
pop
movsl
add
jl
loopne
ja
out
mov
addl
add
pop
xchg
mov
rol
add
fildl
mov
lea
pop
pushl
call
push
inc
rol
pop
call
push
push
lea
shr
shr
push
push
pop
add
sub
shr
lea
ror
sub
dec
ror
shr
pop
ror
sub
pop
push
dec
xor
dec
pop
pushl
call
push
lea
push
push
lea
push
push
push
call
flds
add
add
clc
mov
mov
in
mov
add
push
add
ljmp
add
push
icebp
add
add
push
add
add
xchg
add
add
iret
push
loopne
jne
add
icebp
frndint
lods
hlt
ficomps
mov
lea
pop
call
push
push
call
add
pushf
add
fldcw
ret
mov
lods
testb
add
movsb
add
pop
add
jbe
add
sarb
test
add
add
xchg
add
je
push
add
add
fildl
out
pop
cltd
push
mov
pop
lret
testl
add
add
idiv
add
mov
mov
jmp
int3
lea
pop
lea
push
push
shr
dec
push
sub
add
shl
sub
sub
xor
pop
sub
pop
push
push
push
push
call
into
shlb
bound
mov
mov
add
lock
je
repnz
add
std
add
add
mov
add
lds
add
mov
adc
jne
push
not
pop
call
push
sub
ror
pop
push
push
push
push
push
push
push
push
push
call
add
addr16
push
mov
add
lods
mov
loop
roll
add
je
add
add
mov
popf
insb
add
imul
loop
mov
hlt
add
xlat
add
add
add
popf
addb
add
fists
loopne
add
mov
shll
jne
add
lahf
mov
mov
cwtl
ljmp
xchg
xchg
mov
lea
pop
call
push
push
push
sub
add
ror
shr
sub
sub
sub
rol
pop
ror
dec
sub
pop
push
xor
pop
pushl
push
shl
pop
call
push
lea
add
pop
call
push
not
shl
add
pop
mov
push
push
sub
shl
push
or
inc
add
ror
sub
sub
sub
pop
not
pop
push
dec
xor
pop
pushl
push
sub
pop
call
push
push
shl
pop
pushl
push
lea
ror
dec
pop
call
push
push
rol
push
and
add
shr
sub
inc
ror
xor
pop
inc
rol
sub
pop
push
ror
sub
not
pop
pushl
push
rol
dec
not
pop
call
push
push
push
or
inc
add
inc
lea
sub
sub
pop
inc
sub
shr
pop
push
push
sub
inc
push
sub
add
rol
not
sub
sub
pop
rol
shl
pop
push
lea
inc
shr
rol
pop
call
push
push
not
dec
push
or
inc
add
sub
not
pop
shl
pop
push
inc
pop
pushl
call
push
add
add
xor
sub
pop
mov
lea
push
xor
dec
sub
pop
lea
push
push
push
lea
push
push
push
push
call
add
add
out
faddl
clc
rolb
xchg
lock
scas
in
add
js
mov
add
add
add
add
add
push
movb
pop
push
push
sub
dec
ror
add
pop
push
push
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
fcompl
pop
popa
add
add
add
in
cltd
out
lret
add
add
icebp
ror
fwait
jns
cld
out
mov
add
add
pop
cmpsl
add
add
imul
mov
loope
out
add
jo
add
arpl
push
push
push
lea
push
push
push
lea
push
call
arpl
add
add
mov
stc
fisubrl
mov
insb
push
add
jo
add
mov
mov
jbe
add
add
fwait
add
fstl
add
movb
fs
iret
mov
lea
pop
push
push
lea
not
ror
pop
push
push
add
xor
pop
pushl
push
push
push
push
push
push
push
push
push
lea
push
call
int3
movsl
add
addr16
add
add
jae
add
add
rcrb
ljmp
jp
add
in
pop
mov
shl
pop
add
shr
int3
add
sti
mov
add
add
lods
out
add
add
push
add
fadds
add
fimull
pop
push
push
rol
not
pop
call
push
push
inc
xor
ror
push
sub
add
dec
add
sub
xor
dec
ror
pop
sub
pop
push
push
call
add
add
mov
sarb
enter
add
push
pop
add
test
data16
add
add
xchg
add
incb
add
ret
add
jmp
roll
add
add
jno
jl
popl
mov
add
add
in
add
add
add
mov
aad
add
mov
lea
pop
pushl
push
push
push
lea
push
push
push
push
call
add
test
add
mov
fcmovu
add
add
mov
test
add
stc
out
mov
add
add
add
into
add
add
add
mov
mov
addr16
pop
shlb
add
mov
mov
add
add
mov
pusha
jnp
test
add
add
fimull
lea
pop
call
push
sub
pop
call
push
push
push
push
push
lea
push
push
call
stc
add
lahf
xchg
add
add
jno
add
mov
mov
jns
hlt
pop
fbld
rolb
scas
add
lret
add
add
lcall
addr16
lea
pop
mov
push
push
lea
push
call
push
repnz
add
bound
push
add
insb
add
jecxz
pop
add
push
add
icebp
add
add
mov
mov
rcll
add
arpl
mov
push
mov
stos
add
add
add
clc
add
jae
add
movsb
add
in
add
pop
mov
add
mov
lea
pop
pop
push
push
call
mov
mov
add
jle
add
add
add
pop
add
add
out
movb
repnz
data16
add
in
test
xchg
add
shll
lock
shrb
add
shlb
stos
add
add
shrb
add
imul
xchg
add
fs
test
xchg
xchg
cld
add
mov
lea
pop
dec
jne
push
lea
push
push
push
push
push
push
push
lea
push
push
call
in
call
add
jno
add
jns
lret
int
add
flds
jns
jo
jle
add
jne
jnp
je
cmpsl
add
subb
cmpsl
push
mov
add
add
push
add
add
add
add
mov
in
add
jns
push
mov
lea
pop
jmp
call
push
push
inc
add
push
and
add
sub
lea
sub
ror
lea
pop
sub
pop
push
lea
not
pop
pushl
push
lea
push
call
add
test
arpl
add
jl
mov
add
add
pop
add
lods
add
mov
stos
into
mov
lret
scas
mov
aam
add
add
pop
xchg
jle
add
add
outsl
jle
lods
add
add
stos
mov
jno
int3
lea
pop
call
push
inc
sub
pop
push
push
add
pop
call
push
add
rol
pop
mov
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
arpl
shrb
add
add
scas
add
add
xchg
mov
add
aam
ror
add
add
add
xchg
incb
add
stos
add
icebp
shr
aam
bound
pop
lea
push
push
xor
not
push
and
add
dec
sub
sub
sub
ror
pop
lea
add
not
pop
push
lea
sub
pop
pushl
push
push
push
push
push
push
push
push
push
call
nop
jge
xchg
mov
add
pop
mov
xchg
imul
fldenv
add
int3
add
pop
ficoml
int
jp
push
fwait
push
rolb
push
jl
add
in
rol
add
data16
fucomp
stc
add
mov
roll
mov
arpl
call
push
push
push
push
lea
push
lea
push
call
add
scas
add
rolb
pop
xchg
fsubrs
add
aam
cld
push
popf
test
sar
imul
xchg
clc
fwait
add
data16
pop
mov
add
ljmp
fildl
mov
shll
mov
sbb
push
shr
lea
shr
rol
pop
call
push
push
add
add
not
xor
push
or
not
add
dec
shr
sub
pop
inc
pop
push
pop
pushl
call
push
not
not
pop
call
push
add
shr
ror
sub
pop
mov
push
not
pop
lea
push
push
shr
push
push
pop
add
dec
shr
sub
add
sub
not
pop
add
pop
push
inc
pop
pushl
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
add
mov
jge
push
add
mov
mov
les
ja
call
pop
in
add
add
jl
xchg
data16
cmc
xchg
rorb
pop
call
push
push
lea
push
push
push
lea
push
push
push
push
push
call
xchg
xchg
jne
pop
jbe
add
xchg
add
lahf
mov
add
in
into
movl
fidivrl
jl
pop
add
imul
ljmp
shrl
add
pop
lea
push
push
push
push
call
arpl
movb
add
mov
les
bound
jecxz
pushf
add
add
sahf
add
call
add
test
mov
mov
pop
add
add
add
fldl
pop
add
into
rcr
movsb
jge
xchg
xchg
sbbb
mov
lea
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
jo
mov
cltd
jnp
mov
add
pop
add
add
jns
add
jno
mov
pusha
ret
mov
mov
add
mov
jb
add
add
add
add
fiaddl
mov
shr
add
xchg
std
add
mov
lea
pop
push
push
lea
push
call
jle
aam
jmp
insb
mov
add
cli
add
add
fcmovnbe
mov
add
lcall
add
mov
faddl
imul
sahf
push
rcr
scas
add
add
add
add
test
add
sahf
mov
lea
pop
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
add
push
loopne
add
add
add
add
bound
add
arpl
mov
adc
out
add
jecxz
mov
scas
rolb
cmc
rolb
pusha
in
mov
hlt
lea
pop
pushl
push
push
inc
push
and
add
add
sub
not
pop
inc
pop
push
shr
sub
rol
pop
push
call
push
push
ror
push
push
pop
add
ror
rol
sub
not
pop
inc
not
shl
pop
push
xor
shr
xor
pop
pushl
push
push
push
push
push
call
add
addl
aam
push
mov
add
add
push
push
jo
fidivl
add
xchg
push
popa
add
add
add
jns
jne
lods
repnz
aad
xchg
outsl
add
repnz
mov
stc
add
aam
rcl
add
jmp
cwtl
add
jmp
lea
jb
xchg
roll
add
orb
add
adc
call
push
push
push
lea
push
push
push
lea
push
push
push
call
imul
mov
add
imulb
add
fs
add
push
addr16
add
add
in
jb
add
lahf
pop
add
pop
lahf
lock
shrl
out
add
and
push
push
sub
pop
call
push
push
add
push
xor
add
add
shl
inc
sub
lea
dec
ror
rol
pop
shl
pop
push
push
call
add
mov
frstor
jae
roll
ret
add
mov
add
cmp
add
mov
jb
sti
mov
aad
les
fcomps
stc
xchg
add
add
add
pop
aam
pop
add
add
pop
mov
mov
add
scas
fldl
add
in
mov
pop
pushl
push
ror
pop
call
push
shl
inc
pop
call
jmp
push
push
push
call
mov
add
fstpl
add
in
insb
les
aam
mov
stc
test
add
jne
lahf
mov
mov
popa
add
fcompl
add
fistl
lahf
ficomps
add
fimull
pop
pushl
push
not
shl
pop
mov
push
ror
add
add
pop
jmp
push
push
ror
push
sub
add
shr
sub
dec
shl
shl
pop
add
pop
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
xchg
cli
jmp
pop
add
add
rcrb
add
add
push
testl
mov
xchg
rorl
bound
add
add
into
rcrb
add
mov
add
add
rcll
jb
lods
add
mov
pop
pushl
call
push
push
lea
push
lea
push
push
call
insb
jns
mov
push
jle
add
mov
mov
mov
add
mov
add
add
add
fmull
cltd
enter
add
xchg
insb
in
sti
out
add
lea
pop
push
call
push
push
lea
inc
ror
inc
push
push
pop
add
dec
xor
inc
inc
sub
sub
pop
ror
xor
shl
not
pop
push
push
push
lea
push
push
push
lea
push
push
call
lods
add
add
imul
into
add
movsb
cltd
add
add
cmpl
rcl
scas
ja
jl
out
add
lahf
jmp
add
mov
add
mov
add
aad
cli
loop
add
cld
lea
pop
pushl
call
push
sub
shl
xor
rol
pop
push
push
add
pop
call
leave
push
push
push
lea
push
call
add
add
shl
mov
gs
add
call
add
mov
jne
int
lahf
add
add
insb
add
push
flds
add
add
add
pop
mov
add
pop
add
push
lea
push
push
push
push
push
push
push
call
add
add
add
push
cmc
insb
call
je
xchg
add
int3
out
jnp
lcall
add
fldl
lods
add
jo
pusha
pop
add
add
pop
mov
lea
pop
pop
push
xor
shr
sub
pop
pop
push
push
push
push
push
push
push
call
jp
jmp
in
lods
lds
repnz
push
out
ljmp
add
scas
aam
pop
add
gs
js
mov
test
add
pop
jo
mov
add
mov
cld
add
mov
lea
pop
pop
push
lea
push
lea
push
lea
push
call
lods
add
add
jae
push
mov
sahf
lret
add
out
rcrb
addb
std
push
add
idivb
add
fcompl
add
mov
out
testl
sarl
ljmp
add
scas
jns
add
bnd
lret
add
clc
mov
lea
pop
pop
push
not
dec
pop
leave
push
push
push
push
push
push
call
mov
jmp
pop
mov
xchg
xchg
add
xchg
ficompl
popa
xor
test
add
cli
scas
add
insb
test
in
jo
mov
pop
mov
fwait
xchg
add
xchg
add
add
test
add
fadds
les
mov
test
out
cld
lea
pop
add
push
push
push
push
lea
push
push
push
call
or
add
xchg
add
mov
add
lods
mov
sahf
xchg
add
mov
xchg
in
loope
xchg
add
add
test
lcall
out
arpl
jo
loopne
scas
lea
xorb
add
add
add
mov
lea
pop
ret
leave
push
xor
xor
pop
ret
push
xor
pop
push
mov
push
lea
push
push
push
push
push
push
lea
push
call
pop
gs
mov
jnp
addr16
jae
out
outsl
jp
mov
add
add
mov
lret
ret
pop
jmp
add
rolb
insb
movb
testl
add
mov
add
add
imul
lret
movsl
add
add
add
add
add
mov
jmp
movsb
mov
lea
pop
cmpl
jne
push
shr
pop
mov
push
shr
pop
jmp
push
shl
dec
pop
mov
push
lea
push
call
data16
out
push
andl
push
add
movb
push
add
mov
in
out
arpl
mov
add
add
out
lods
push
loope
movsl
add
xchg
out
xchg
bound
add
call
nop
add
mov
ret
lret
clc
test
add
add
push
testl
add
nop
push
lea
push
push
push
push
push
call
jmp
add
add
add
lods
add
mov
int3
imul
mov
add
pop
add
lcall
push
add
bnd
jmp
aam
add
push
push
cwtl
add
add
add
jnp
add
pop
xor
push
push
lea
push
lea
push
push
lea
push
push
call
add
insb
add
add
add
test
add
push
add
add
lahf
mov
add
add
xchg
pop
add
ficoms
mov
add
pop
lock
mov
mov
in
push
add
lods
mov
mov
sbb
xor
push
push
push
lea
push
push
push
push
push
call
add
add
add
push
mov
add
push
xchg
add
fwait
jb
add
mov
into
mov
add
icebp
pop
in
add
add
add
add
mov
lea
pop
add
push
push
push
push
push
push
call
test
mov
jnp
jno
xchg
les
leave
xchg
add
push
add
in
movl
jge
mov
mov
roll
add
add
testb
xchg
add
icebp
mov
add
loop
imull
add
imul
sbb
dec
decl
ror
dec
pop
sub
jmp
push
add
shl
pop
sub
pushl
push
add
pop
pop
sub
push
add
rol
pop
cmp
jne
push
pop
mov
lea
push
push
push
push
push
call
add
add
add
pop
enter
add
add
push
cltd
mov
add
out
pop
pop
andb
popa
in
add
add
add
fldpi
add
filds
lret
jecxz
add
jbe
add
test
out
add
loopne
loop
test
add
jo
jl
popf
fbld
pop
push
mov
lea
pop
sub
push
push
push
call
jae
jp
add
xchg
add
pop
add
push
mov
add
test
add
add
rcrb
mov
mov
aam
jnp
mov
cltd
add
mov
pop
pop
in
insb
movb
add
in
lds
test
jecxz
data16
mov
mov
ror
loopne
add
add
add
add
popf
test
add
pop
mov
shr
push
push
push
lea
push
lea
push
call
mov
test
xchg
cli
lock
add
cld
add
js
add
in
test
clc
pop
fidivs
xchg
add
pusha
in
aad
xchg
xchg
in
pop
push
add
loopne
les
add
add
movsl
mov
lea
pop
add
push
push
push
push
lea
push
call
popa
fimuls
add
add
int
into
bnd
add
fs
add
test
xchg
and
mov
repnz
jae
into
add
mov
add
jno
add
add
add
mov
lea
pop
sub
push
xor
ror
ror
shr
pop
pushl
pop
push
not
sub
pop
shr
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
movsb
ret
add
loop
cmpsb
mov
pop
add
popa
add
mov
add
add
mov
add
faddl
aam
add
stos
pop
add
add
add
mov
popf
add
popa
add
repnz
mov
add
add
add
ja
add
add
add
add
lea
pop
and
push
lea
xor
pop
sub
push
push
push
push
push
push
lea
push
push
push
push
call
fadds
cwtl
sahf
stos
js
leave
loope
ret
mov
out
ret
push
aad
add
outsl
cwtl
pop
imul
add
xchg
xchg
mov
add
add
pop
lock
mov
xchg
add
add
jb
add
loope
lock
sahf
mov
add
add
add
test
push
add
xchg
lods
add
in
cli
scas
add
fdivs
add
pop
cmp
jne
push
push
push
push
call
mov
add
push
xchg
add
jbe
mov
add
in
jb
stc
ja
add
loopne
add
mov
add
mov
add
add
add
add
mov
add
push
add
pop
add
into
add
mov
add
add
add
add
add
mov
addl
push
add
add
lea
pop
leave
push
lea
push
push
push
push
call
add
mov
add
add
add
test
mov
push
cld
mull
mov
add
scas
lret
cmp
add
mov
icebp
add
js
mov
jbe
scas
out
roll
xlat
add
icebp
ret
mov
adc
ret
push
dec
sub
lea
pop
push
mov
push
not
shr
sub
pop
add
push
push
push
push
push
call
add
pop
loop
add
enter
faddl
stos
mov
into
out
out
js
addl
push
mov
les
add
add
add
faddl
aad
add
add
loopne
enter
xchg
pop
push
push
push
inc
shr
pop
push
push
push
shr
pop
push
push
add
dec
pop
mov
lea
push
push
push
push
push
push
push
push
call
add
add
hlt
add
add
std
mov
std
add
push
stos
add
add
add
add
add
mov
mov
add
add
add
js
lahf
mov
and
ljmp
sbb
daa
lea
push
push
lea
push
push
push
call
add
add
add
cli
pushf
push
mov
add
lahf
fdivl
mov
add
mov
mov
incb
icebp
jns
pop
in
imul
mov
push
lea
push
push
push
push
lea
push
lea
push
call
out
jp
add
add
icebp
add
pop
fdivrl
mov
xchg
cmc
add
mov
jl
mov
clc
jge
fildll
pop
add
add
stc
fldpi
pop
add
add
testb
test
je
pop
hlt
jmp
mov
lea
pop
shr
add
push
lea
push
call
scas
scas
lea
add
add
xchg
jle
nop
aam
add
repnz
jnp
mov
aam
cwtl
push
pop
lods
add
add
add
mov
jle
add
add
lret
imul
fmull
fwait
addb
add
pop
or
lea
push
push
push
push
lea
push
call
add
add
fs
sahf
loopne
add
add
add
mov
cwtl
gs
push
add
add
add
jl
rolb
addr16
add
pushf
add
mov
imul
hlt
flds
add
add
lods
add
mov
mov
add
add
icebp
lock
cli
testl
sahf
outsl
out
fiaddl
movsb
pop
mov
lea
pop
mov
push
push
lea
push
push
push
call
mov
leave
add
outsl
lock
add
mov
jne
add
add
add
jo
add
add
icebp
add
add
add
jne
movsl
pop
out
pop
mov
add
pop
add
cmpsb
add
imul
lods
push
add
add
mov
lea
pop
add
xor
push
inc
shl
pop
mov
push
shl
lea
sub
pop
and
push
add
xor
pop
rol
rol
push
push
call
lret
add
ljmp
mov
mov
add
pop
lahf
add
add
xchg
pusha
in
add
add
enter
icebp
call
mov
add
mov
mov
add
add
test
mov
add
add
popa
out
fildl
mov
fimuls
pop
xor
push
add
shr
pop
inc
push
push
push
push
push
push
call
clc
stos
jp
stos
in
fwait
cmpsb
mov
add
add
add
add
loopne
mov
pop
jge
add
pop
add
lds
add
nop
add
fsubrs
add
add
mov
mov
add
cli
call
cmpsl
out
mov
icebp
add
loopne
rorl
add
pop
cmpb
jne
push
rol
inc
ror
sub
pop
add
cmp
je
push
push
push
push
push
push
push
lea
push
call
fildl
test
add
add
repnz
add
pop
add
out
add
jge
jl
add
add
add
add
filds
add
movsb
lahf
divl
into
mov
icebp
add
add
xchg
add
fildl
add
add
loope
mov
add
mov
lea
pop
add
push
lea
push
push
lea
push
push
call
test
add
add
add
mov
jle
bound
add
add
add
mov
loopne
push
cwtl
add
je
jmp
cld
lea
pop
cmpl
jne
push
lea
add
dec
sub
pop
xor
pop
push
lea
push
push
call
add
add
pop
popa
xchg
add
add
loopne
mov
imul
loope
add
add
add
add
aad
push
stc
pop
out
add
stos
fstpt
add
mov
lea
pop
pop
push
inc
sub
pop
pop
push
push
push
lea
push
call
mov
push
arpl
into
add
lea
jo
cmpsb
scas
insb
add
add
cmpsl
cld
pop
add
jle
pop
jbe
flds
addb
rol
cmpsl
add
lret
mov
lea
pop
pop
push
push
lea
push
call
mov
add
add
lock
data16
roll
add
hlt
add
add
add
mov
add
add
rol
add
jbe
add
shlb
roll
mov
add
xchg
stos
mov
mov
mov
add
add
aad
add
leave
add
cld
mov
nop
mov
lea
pop
pop
push
push
push
push
push
push
call
add
cld
xchg
add
add
add
lods
add
add
pop
cltd
out
push
add
fadds
add
add
mov
add
in
add
lods
add
add
fwait
add
call
add
add
in
add
lea
pop
leave
push
push
push
push
push
lea
push
push
push
push
push
call
mov
pop
add
rolb
add
push
xchg
je
ljmp
in
mov
pop
js
fisubs
add
out
mov
add
test
add
cwtl
push
add
add
lea
ret
jno
mov
cmpsl
lcall
add
add
out
add
add
pop
ret
push
push
push
push
push
push
call
lahf
cltd
jmp
popl
popa
xlat
lea
add
mov
push
stos
lock
push
mov
add
add
int
add
mov
jae
add
jmp
add
int3
lea
pop
mov
add
push
push
push
push
push
push
push
push
call
add
push
nop
add
add
xchg
addb
add
add
cld
pushf
mov
jns
push
popf
add
sahf
pop
add
add
addr16
push
add
loopne
addl
pop
in
sbbl
xchg
jge
in
mov
lea
pop
push
push
push
push
lea
push
push
push
push
call
js
pop
add
jne
mov
mov
repnz
mov
add
out
add
shll
push
add
xlat
lret
xchg
add
stos
mov
fadds
fwait
add
add
add
push
add
sahf
lods
add
out
push
jecxz
jp
faddl
add
add
lds
enter
lea
pop
add
mov
push
push
push
push
push
lea
push
lea
push
call
add
add
lds
mov
add
lret
scas
jae
mov
aad
xchg
scas
clc
les
sahf
xchg
roll
ja
add
fwait
add
test
mov
jb
test
lds
add
lahf
add
pop
add
add
push
add
lahf
rolb
add
xlat
les
add
mov
lea
pop
cmpw
pop
push
shr
pop
pop
mov
push
push
push
push
push
push
push
push
call
enter
add
mov
bound
add
in
aam
add
add
fadds
mov
xchg
lretw
mov
imul
rolb
jbe
mov
cld
lea
pop
push
push
dec
pop
call
push
xor
inc
add
pop
xor
pop
push
push
push
lea
push
push
push
push
push
push
call
rolb
test
aad
loop
xchg
add
mov
out
scas
add
add
push
sahf
jp
add
add
aam
push
jae
mov
out
mov
mov
lock
addb
mov
mov
fs
add
jnp
testl
loopne
pop
pop
push
lea
push
push
push
call
addl
xlat
lods
add
pop
add
add
add
cli
pop
in
add
add
icebp
add
mov
lahf
cld
xchg
jl
cltd
pushf
fiaddl
mov
stc
add
int
add
add
add
add
std
movsb
out
fildl
addl
out
lret
xchg
add
add
push
mov
movsb
push
in
movsb
sbbb
insb
add
push
arpl
pop
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
jae
filds
xchg
jp
lahf
jo
add
push
lods
add
xchg
int3
push
pop
mov
add
add
incb
sbb
ja
add
add
mov
movl
add
add
mov
lea
pop
pop
push
shl
pop
leave
push
sub
shr
pop
ret
push
push
call
enter
lea
add
jne
lret
add
push
add
lcall
jb
rolb
add
scas
mov
cltd
pusha
int
mov
movb
jp
add
faddl
add
mov
push
add
add
add
add
test
addb
add
add
mov
hlt
add
mov
les
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
nop
in
add
add
xchg
lret
fcmovnu
add
mov
pushf
out
ret
add
jne
add
fcomps
add
sarl
add
push
add
add
out
bound
pusha
and
in
add
push
push
lea
push
push
call
enter
push
in
xchg
cld
or
add
add
add
mov
push
add
pop
add
add
outsl
add
add
add
lahf
add
xchg
mov
cli
add
add
popf
add
lock
add
sahf
add
push
add
add
mov
mov
add
pop
push
push
sub
pop
push
push
push
push
push
call
mov
mov
add
add
add
repnz
add
stc
mov
int
pusha
lea
jns
mov
lret
jp
mov
faddl
add
add
shr
aad
cltd
xchg
in
add
lds
popa
xchg
out
add
xchg
fsubr
xlat
mov
push
fistpll
lcall
adc
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
add
add
add
out
cmp
mov
out
loope
enter
mov
add
add
add
jae
add
mov
lea
pop
push
push
push
lea
push
push
push
push
call
xchg
xchg
movsb
push
mov
ja
call
mov
push
test
add
add
add
add
movl
add
jo
hlt
imul
xchg
jnp
pop
add
xchg
imul
add
mov
lea
pop
mov
push
add
not
pop
push
push
push
push
call
pushf
xchg
add
out
add
rolb
std
arpl
jbe
pop
add
add
add
add
add
pop
fwait
mov
xchg
add
add
insb
add
mov
bound
mov
add
xlat
xlat
lods
add
pop
pop
push
sub
pop
lea
push
not
dec
sub
pop
sub
mov
push
push
push
call
aad
add
test
test
fcompl
add
xchg
xchg
pop
rclb
add
pop
mov
pop
add
add
pop
mov
add
cld
add
shl
mov
lea
pop
shr
push
push
lea
push
push
push
lea
push
push
push
call
add
add
roll
add
add
lock
test
add
add
add
sub
outsl
int3
add
push
push
add
add
add
insb
add
xlat
add
pop
add
push
pop
pop
add
gs
push
add
mov
jb
mov
xchg
add
mov
lret
mov
add
add
stc
add
add
mov
lea
pop
add
mov
push
push
push
lea
push
lea
push
lea
push
call
add
in
scas
clc
in
add
add
jnp
jmp
add
mov
roll
add
cltd
xchg
iret
jae
lcall
movsb
stos
pop
add
mov
outsl
add
add
leave
push
mov
lret
mov
or
add
mov
push
out
add
out
popa
mov
stos
cmpsl
add
movsl
add
add
pop
add
pop
add
push
push
push
push
call
add
cmpsl
scas
mov
add
xchg
add
add
loope
xchg
mov
arpl
add
add
add
imul
lcall
xchg
hlt
addl
add
mov
lea
pop
pushl
push
not
xor
pop
popl
push
sub
add
pop
mov
push
push
lea
push
push
push
push
lea
push
push
push
push
call
fiadds
push
add
add
loopne
jnp
add
add
add
add
mov
add
jbe
popa
push
scas
jge
leave
add
testl
push
pop
add
add
test
cmc
enter
add
ret
call
sub
stc
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
mov
incb
addr16
nop
insb
ficomps
jb
add
ror
out
out
add
add
add
add
sbbb
add
mov
add
add
icebp
cmpsb
in
enter
add
pop
xor
lea
push
rol
rol
pop
mov
add
push
push
push
push
push
push
push
call
add
add
addr16
fs
js
pushf
xchg
andl
add
subl
scas
add
addr16
int3
push
add
add
add
mov
cmc
stos
rclb
int
clc
add
test
imul
cmc
add
int3
push
gs
stos
mov
fucom
add
mov
lea
pop
xor
rol
push
lea
push
push
push
lea
push
push
push
call
lods
nop
mov
add
add
add
add
cli
fadds
add
mov
add
cmpsb
add
mov
add
lock
cmpsl
je
test
test
sarb
add
ljmp
mov
flds
test
add
add
movsl
add
mov
lds
mov
je
add
add
into
mov
lea
pop
nop
push
ror
pop
nop
xor
push
push
push
push
lea
push
push
call
mov
jmp
test
in
xchg
push
add
rcll
stos
testl
add
test
ficomps
add
int
rcrl
add
pusha
out
mov
cmpsl
in
xchg
add
add
mov
mov
lea
pop
nop
push
ror
dec
xor
pop
nop
inc
push
push
push
push
lea
push
push
push
call
push
jnp
sti
xchg
xchg
add
rolb
out
ja
data16
add
add
xchg
mov
add
add
add
add
sahf
data16
cld
fcmovb
mov
lea
pop
nop
nop
push
shr
lea
pop
cmpb
jne
push
lea
shr
sub
pop
add
nop
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
cmpsb
pop
pop
lea
push
mov
add
mov
add
mov
jno
jno
add
jb
lret
out
add
add
xchg
add
add
push
mov
ret
add
icebp
add
add
mov
jae
subl
lea
pop
nop
push
push
push
push
lea
push
push
lea
push
push
call
add
push
pushf
jl
in
clc
int
in
mov
pop
out
push
xchg
add
mov
add
in
push
xchg
imull
lds
add
movsl
mov
rorb
pop
cmp
je
nop
push
xor
not
dec
pop
nop
push
lea
push
push
push
push
push
call
jo
jo
add
add
ja
rcll
add
jns
push
popa
sar
add
jecxz
xchg
data16
mov
rolb
loope
add
loope
mov
add
lahf
data16
add
imul
add
out
add
add
push
add
pushf
loope
push
mov
lea
pop
inc
nop
push
push
push
push
call
bound
cltd
add
push
jge
jmp
add
jle
add
sahf
clc
flds
imul
mov
lods
xchg
mov
add
xchg
fbstp
mov
lea
pop
nop
push
push
push
push
call
add
out
pusha
add
roll
mov
in
push
in
fnstsw
add
push
jle
sbbl
cmc
add
fwait
add
pushf
add
xchg
jne
loope
pop
push
push
add
movsb
xchg
mov
add
add
fs
jae
mov
cli
mov
stc
sahf
lods
add
addl
add
fidivrl
add
out
ficompl
lea
pop
cmp
jb
push
push
push
push
push
push
lea
push
call
jp
add
fldl
add
add
add
add
mov
lea
std
test
cmpb
stos
add
add
addb
push
add
out
xchg
pushf
add
hlt
add
shr
out
add
pusha
sbb
xor
jmp
push
not
pop
mov
add
push
sub
shr
sub
pop
movzwl
mov
push
push
push
push
call
cli
nop
xchg
add
add
add
add
fistpll
mov
pushf
stos
jb
push
mov
ljmp
mov
pop
lock
les
mov
add
jmp
fildl
imul
add
lods
add
addb
add
jp
push
add
add
pop
add
fildl
bound
pop
add
push
xor
rol
sub
pop
mov
push
push
lea
push
push
call
add
add
add
mov
scas
pop
mov
xchg
add
fsubs
xchg
rclb
mov
jnp
lds
mov
into
xchg
xchg
add
push
add
jno
add
jle
imul
test
xchg
jmp
add
xchg
jmp
aad
add
fwait
add
mov
lea
pop
xor
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
add
ret
add
add
test
outsl
movsl
add
nop
out
lret
add
movl
cmpsl
add
jp
add
add
js
pop
cmpsb
mov
add
add
in
add
in
mov
add
fbstp
fdivr
rolb
cltd
test
jbe
jle
jae
add
aam
mov
pushf
mov
mov
lea
pop
xor
push
xor
lea
pop
shl
xor
push
push
push
push
push
push
lea
push
push
push
call
add
add
jecxz
pop
jmp
pop
fiaddl
add
add
add
ljmpw
add
mov
mov
add
out
add
add
push
xchg
add
enter
add
data16
mov
fadd
mov
pop
orb
shl
xor
push
push
push
lea
push
push
push
push
push
push
call
push
push
shl
std
fidivl
in
enter
add
add
add
mov
js
mov
mov
add
fiaddl
mov
flds
xchg
jecxz
je
add
add
mov
mov
add
add
bound
xchg
pop
loopne
add
jl
in
stos
add
add
movsb
loop
mov
int
add
pop
shl
push
lea
xor
pop
xor
mov
push
lea
push
push
call
add
mov
mov
ret
add
add
popaw
add
add
iret
add
add
in
je
push
add
cli
pop
aad
cld
xchg
jno
add
mov
cmpsl
push
add
add
lods
jmp
shr
mov
add
add
push
add
mov
lea
pop
add
pop
push
xor
pop
pop
pop
push
add
pop
pop
push
lea
push
call
mov
xchg
in
add
pushf
popf
mov
mov
fiaddl
add
js
lea
jmp
icebp
add
add
popa
mov
add
add
xchg
pop
jl
pop
push
add
mov
mov
cmpsl
pushf
add
mov
add
add
mov
mov
in
mov
add
mov
lea
pop
leave
ret
push
push
push
push
push
push
push
push
push
push
call
bound
fcomps
nop
fmuls
mov
stos
cmpsb
scas
add
mov
roll
add
add
movsl
mov
sbbl
push
outsl
add
leave
ja
pusha
add
push
add
insb
push
add
mov
add
movl
xchg
mov
shl
les
jbe
cwtl
add
test
sahf
filds
add
pop
push
push
lea
push
push
push
call
add
mov
add
icebp
lods
jmp
lods
add
add
mov
addb
imul
mov
add
add
test
add
mov
add
cmpsl
pushf
add
adc
in
push
push
push
call
add
add
repnz
pop
add
ret
outsl
test
add
sbb
call
aam
into
mov
fdivrl
mov
push
push
mov
add
pushf
fisttpl
iret
add
mov
lea
pop
push
push
push
lea
push
call
add
mov
mov
int
add
add
jmp
mov
add
add
mov
call
rolb
jmp
in
add
add
xchg
add
push
mov
ret
mov
and
add
ljmp
add
iret
in
mov
jns
add
add
mov
lea
pop
push
push
sub
pop
push
mov
push
push
push
lea
push
push
push
lea
push
push
push
push
call
in
add
xlat
mov
loop
cli
popa
loop
fldcw
xchg
lret
add
lock
lock
mov
mov
add
add
mov
xlat
scas
pop
xchg
addl
add
lcall
in
cld
add
std
mov
xchg
add
in
push
pop
pusha
in
in
add
cwtl
roll
rolb
add
add
andl
add
pop
mov
push
shl
sub
pop
mov
push
add
inc
shr
pop
test
je
push
lea
lea
add
pop
mov
test
je
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
rolb
jae
call
fcmovnb
mov
lret
add
mulb
imul
add
push
add
lods
xchg
add
mov
out
lds
mov
mov
add
add
jae
ljmp
add
mov
lea
pop
mov
push
not
lea
xor
pop
mov
push
lea
push
push
push
push
push
push
call
cwtl
rclb
jb
mov
add
in
push
mov
add
mov
add
fdivrs
add
test
add
mov
add
add
mov
lea
pop
mov
push
ror
ror
xor
dec
pop
inc
push
ror
rol
pop
cmp
je
test
je
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
enter
add
push
add
fisubs
aam
add
add
lea
add
add
add
loope
add
jge
add
cltd
push
jecxz
stc
addb
add
mov
add
cld
add
add
xlat
add
add
jge
addl
push
lahf
mov
movsb
push
jae
mulb
mov
lea
pop
mov
push
lea
push
push
lea
push
call
mov
loope
add
loopne
jae
add
mov
cli
add
loop
mov
rcl
add
ja
fwait
add
sahf
add
add
add
cwtl
add
insb
pop
test
add
add
push
sti
mov
add
push
add
mov
lea
pop
inc
cmp
je
push
add
rol
add
pop
test
jne
push
lea
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
add
andb
add
pusha
push
add
pop
push
add
cmpl
mov
push
add
add
add
fidivl
stos
sarl
sub
rclb
inc
sub
inc
pop
pop
push
push
lea
push
push
push
push
call
imul
movsl
jl
add
add
fcmovnb
mov
fld
mov
add
mov
lret
pusha
out
add
out
movsb
mov
mov
lea
pop
pop
pop
push
push
push
push
lea
push
call
add
mov
ficompl
ljmp
add
insb
mov
push
jecxz
jge
mov
cmc
int3
out
add
mov
add
cltd
fsubrs
loop
fldenv
mov
add
les
add
mov
pusha
rcrb
imul
loop
in
je
mov
fmull
push
add
pop
leave
push
sub
rol
pop
ret
push
lea
rol
not
pop
mov
inc
push
push
push
push
push
push
push
call
imul
add
add
add
fistpll
jmp
mov
add
add
push
fucom
mov
negb
scas
add
add
add
ja
xchg
bound
ror
add
fmul
mov
add
pop
add
jno
add
out
sarl
add
imul
cmp
jne
push
not
pop
lea
mov
push
sub
pop
test
je
mov
push
not
sub
pop
add
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
lret
add
lds
add
add
arpl
into
add
hlt
clc
xchg
add
cld
xchg
popa
ficompl
xchg
add
jl
add
std
push
testl
add
pop
add
add
add
pushf
movsl
sahf
push
push
add
or
push
jns
cmc
add
loope
add
add
add
lea
pop
cmp
jne
push
push
lea
push
push
push
push
push
push
call
mov
lock
add
call
arpl
pop
add
jmp
iret
clc
add
and
add
stos
add
add
lock
add
lea
pop
mov
test
je
push
sub
pop
mov
push
add
pop
add
push
shl
lea
add
pop
cmp
je
push
push
call
mov
mov
ficomps
add
int
jmp
add
jle
leave
push
mov
add
add
popf
pop
aad
repnz
add
popl
add
lods
mov
mov
roll
rolb
jno
subb
fldl
ljmp
jge
pop
add
data16
add
add
add
push
mov
lea
pop
jmp
xor
push
rol
inc
sub
sub
pop
pop
pop
push
push
call
mov
fsubrl
divb
jp
push
mov
test
add
add
push
cmpsb
call
add
sahf
mov
push
add
add
mov
add
cmc
mov
add
mov
pop
loope
add
shr
sar
cli
pop
mov
jmp
add
mov
pop
pop
pop
push
add
pop
leave
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
add
pop
add
jnp
add
add
add
roll
aad
add
add
mov
push
movb
pop
pushf
jns
xchg
test
lahf
mov
lea
pop
ret
push
xor
pop
lea
push
not
pop
pop
pop
push
lea
push
push
push
call
aad
add
jmp
shll
mov
mov
fdiv
push
add
mov
imul
in
add
jns
ljmp
nop
jl
add
add
xchg
int3
push
add
add
arpl
mov
add
mov
add
filds
add
pop
mov
mov
lea
pop
pop
pop
push
lea
push
push
push
push
push
lea
push
lea
push
call
jle
jo
popf
xchg
add
add
add
add
mov
xchg
add
add
lret
add
movsb
lods
icebp
shrl
mov
mov
add
add
arpl
outsl
add
pop
add
add
stc
mov
lods
push
xchg
sub
add
imul
mov
mov
scas
mov
add
add
movl
lea
pop
leave
push
sub
add
pop
ret
push
lea
sub
lea
pop
mov
pop
push
rol
inc
pop
pop
push
push
push
push
push
call
sti
add
ret
aad
mov
mulb
jge
fists
add
into
push
add
pop
hlt
mov
push
mov
call
jo
add
test
add
mov
add
add
add
lds
movsb
test
add
jecxz
ret
rol
add
add
lods
add
add
out
add
pop
pop
push
add
inc
not
pop
pop
push
add
dec
pop
leave
push
push
push
push
lea
push
call
js
add
fwait
add
lods
lods
add
add
aad
ret
mov
mov
add
lock
add
test
jno
add
add
add
jle
mov
add
out
mov
cwtl
add
push
mov
jmp
mov
add
push
lahf
stc
mov
lea
pop
ret
test
push
test
jae
test
jb
leave
insl
jae
sbb
push
mov
jae
test
jae
int3
mov
add
xchg
ds
adc
gs
inc
subl
push
fwait
addr16
test
adcb
jmp
test
insl
add
in
sbb
sub
push
pushf
testl
or
mov
mov
add
jnp
ret
mov
insb
add
ss
lods
repz
push
fcomp
xchg
pop
int3
xchg
cmp
pushf
mov
mov
test
outsb
ret
insl
push
and
mov
sti
shll
popa
addr16
std
mov
rcrl
arpl
ds
les
add
imul
xor
jge
push
or
mov
mov
xor
jg
or
fwait
cld
xor
add
xchg
xor
mov
ficompl
roll
sbb
mov
outsb
push
cld
xor
loop
incb
fcomp
xor
in
and
popa
sbb
outsb
fldt
or
adc
sbb
cmp
sub
pop
jg
mov
adc
bound
dec
ja
cmp
fisubs
adc
ja
stc
lret
pop
cmp
pop
insb
testb
flds
xor
cmpb
aaa
pushf
fcmovnb
xchg
xchg
xor
mov
xchg
fimuls
mov
mov
mov
stos
jo
int3
pop
dec
jp
ja
in
out
inc
sbb
inc
push
jecxz
adc
rol
dec
xchg
adc
mov
mov
shll
popf
add
xchg
mulb
mov
and
das
imul
push
stos
mov
push
in
outsb
ds
call
mov
adc
mov
sub
xor
cmp
out
movl
mov
pop
xchg
pusha
sbb
divl
mov
movsl
xchg
cltd
mov
insl
push
aad
lahf
mov
mov
sbb
pop
in
fwait
xchg
movl
sub
inc
sbb
sbb
sub
xor
ja
pop
fdivs
ss
cld
cld
jbe
sbb
lock
adc
sti
int3
xor
mov
gs
cmpsb
outsl
roll
test
std
test
jg
mov
mov
into
aad
fwait
mov
add
pop
xor
adc
lods
out
adcl
adc
mov
add
mov
orl
cmp
pop
xchg
and
fildl
adc
call
lods
adc
dec
xor
fdiv
je
aam
lds
pushw
in
mov
jge
jecxz
sbb
hlt
stos
sbb
cmpsb
sub
xor
pop
mov
mov
outsb
rclb
ret
daa
fsubs
cmpsl
fidivrl
subl
movsl
sub
fisubrs
pop
add
fs
retw
fildll
aam
repz
or
mov
scas
hlt
test
outsb
jo
mov
push
mov
push
mov
dec
mov
sarl
push
dec
xchg
inc
mov
imul
jae
mov
gs
jnp
push
jbe
jmp
lods
test
mov
pop
mov
cld
dec
loope
movsl
sub
jg
add
mov
jge
subb
or
jns
pop
sbb
in
add
ljmp
int
outsl
stc
fcmovne
test
push
imul
subl
out
call
sub
imul
or
sarb
xor
xchg
in
int3
imull
cmp
lods
jge
push
sub
cwtl
sub
mov
xchg
push
xchg
insb
or
rolb
or
es
push
push
jp
pop
xchg
loopne
pop
inc
xchg
es
lahf
lret
loopne
dec
add
cmc
lcall
ret
jno
cmp
and
dec
cs
outsl
jne
int3
out
jb
or
sahf
test
add
mov
mov
jmp
mov
pop
sbb
push
popf
mov
leave
adcb
and
fsubr
xchg
xchg
mov
mov
mov
ret
fs
sarl
push
or
inc
pop
add
sbb
sub
push
sub
inc
push
mov
lcall
mov
lods
inc
add
inc
mov
cmp
mov
sbb
hlt
pop
adc
jmp
pop
sub
inc
and
roll
lea
push
mov
pop
mov
cli
cmp
fcmove
adc
mov
call
into
dec
sahf
jecxz
aaa
fisubrl
push
xlat
loope
testb
ret
pop
cmpl
sub
roll
in
lea
push
xor
xchg
cmpsl
pop
mov
push
xchg
mov
mov
mov
adc
jge
popa
lret
pop
sub
enter
push
or
mov
mov
ret
fldl
stc
cltd
adc
outsl
adc
std
cwtl
loopne
adc
subb
popl
push
jo
int3
mov
aad
mov
pop
pop
mov
sbb
ficoms
loope
add
mov
fildll
mov
cmp
push
sarl
inc
xchg
push
dec
xlat
ljmp
fwait
jg
dec
mov
fisubrl
ja
push
mov
add
and
mov
jno
mov
push
dec
jne
inc
int
adc
lea
psrad
sub
adc
sub
cmp
ljmp
sub
jmp
loopne
mov
adc
dec
enter
lods
das
push
adc
scas
rclb
pop
fsubl
stos
xor
bnd
mov
add
push
ljmp
sub
test
lret
inc
xchg
push
sti
push
stos
mov
ret
jge
fs
jg
or
push
adc
push
insl
std
popf
add
mov
dec
pop
push
lock
stos
outsb
fmuls
mov
adc
lret
ficompl
mov
mov
and
movsl
xlat
mov
push
and
push
sbb
cmc
or
jle
cmpsl
sub
jns
loope
in
dec
cs
jmp
jl
mov
ljmp
cli
inc
sub
movsl
cmc
add
lret
cltd
jp
or
stos
loop
push
pop
sbb
call
or
cmp
loope
gs
mov
sub
add
cvttps2pi
push
idivl
mov
mov
mov
add
sarl
fistpll
add
dec
cmc
cmpsl
xor
mov
xchg
lahf
sahf
mov
out
ss
xor
loopne
lods
jge
pop
dec
popa
adc
icebp
pop
stos
popa
out
jne
stc
and
cmpsb
pavgw
or
sbb
and
xorl
std
jl
inc
jae
sbb
pop
pop
mov
iret
mov
sbbl
cld
int3
enter
mov
and
push
xchg
movb
xor
mov
clc
xor
pop
fisttpl
push
gs
rorb
inc
test
and
icebp
add
clc
shr
out
loop
xor
mov
jbe
int3
clc
add
mov
fstps
inc
mov
shlb
dec
hlt
cltd
pop
jge
and
fdivs
push
push
mov
sub
sub
mov
mov
pop
push
jne
mov
cld
addr16
mov
testl
jo
ret
daa
mov
fstl
xor
clc
pop
aad
mov
mov
mov
ret
push
and
lret
or
mov
int
lcall
and
dec
neg
push
cli
jle
add
push
call
add
dec
icebp
in
jb
ss
push
adc
xor
jge
mov
adc
pop
ret
in
fs
ja
loopne
or
ret
out
and
gs
sub
pop
mov
add
pop
or
outsb
pop
daa
pop
jne
and
jne
xchg
insl
mov
jp
jno
sbb
mov
jns
shr
mov
test
addr16
and
aad
lcall
repnz
push
mov
sbb
shrb
cmpsb
mov
jecxz
in
adc
in
shrl
adcl
mov
dec
push
pop
in
mov
xchg
and
std
mov
adc
test
inc
imul
push
pcmpeqb
cli
push
mov
push
push
add
test
sub
outsl
mov
xchg
xor
push
mov
call
iret
aaa
rcl
dec
xchg
ret
jne
pop
xchg
ja
aaa
cmc
jb
xchg
inc
imul
cmpsb
nop
je
fcompl
sbb
pop
mov
addr16
outsl
mov
das
pop
mov
xor
inc
and
std
daa
ret
enter
sub
mov
stos
and
jmp
push
push
int
insl
jl
adc
xchg
sub
pop
test
imul
or
lcall
pop
sti
dec
out
icebp
adc
inc
pop
sub
cmpsl
jg
push
mov
inc
mov
jg
adc
lods
call
mov
xchg
mov
jmp
fs
push
nop
out
nop
dec
xor
xchg
adc
push
dec
fimull
hlt
mov
sti
repnz
jnp
outsb
mov
dec
cmp
loope
hlt
mov
sbb
mov
lods
daa
lret
fdivs
push
and
popa
jmp
xlat
movsb
daa
cmp
mulb
je
pop
lock
jno
mov
sti
push
jmp
outsb
cmp
insb
sub
arpl
daa
in
out
lahf
pop
addr16
shr
pop
iret
xchg
incb
adc
out
mov
mov
xchg
fisttps
cli
cld
mov
std
outsl
or
cli
rol
xor
sub
fistl
push
add
or
adc
lea
xchg
sub
arpl
or
dec
lcall
les
scas
push
addb
arpl
xor
mov
push
and
outsb
lret
packssdw
pop
mov
stc
adc
nop
pop
xlat
push
and
mov
and
ret
adc
xor
insl
pop
xor
pop
xor
mov
das
jge
xchg
sub
lahf
daa
shrl
sahf
adc
mov
fimuls
xchg
call
cmp
mov
fs
add
xchg
jnp
out
adc
sahf
out
test
jge
stos
inc
mov
xor
mov
xchg
push
pusha
fsubrs
xchg
loop
sub
imul
xchg
add
lods
jb
xlat
xchg
dec
xor
rorb
rcr
cli
pop
and
and
shll
test
jle
xor
mov
stos
ret
cmc
sbb
lock
lods
jbe
cmp
push
pop
enter
add
pop
pop
das
es
mov
add
fildll
dec
jl
lods
mov
cltd
mov
mov
fnstenv
shrl
data16
lcall
sub
outsl
jecxz
js
int
pop
pop
loope
jne
cld
xchg
cmc
scas
xchg
fcoml
mov
dec
imul
loopne
push
cwtl
xchg
xchg
xchg
sahf
hlt
cmp
pop
inc
repz
xor
dec
inc
pusha
outsb
push
mov
push
sbb
aam
push
mov
test
aaa
jmp
fwait
xchg
cmp
stos
fwait
pop
in
repz
mov
adc
fwait
sbb
mov
clc
mov
outsl
int3
jecxz
test
sbb
stc
cltd
or
jne
jne
mov
xchg
sarl
adc
mov
fs
push
push
mov
xchg
and
dec
push
aad
push
and
lods
and
mov
adc
cmp
outsb
ret
mov
lock
lret
jns
xor
sbb
adc
scas
mov
shl
pop
dec
orl
stos
out
fstl
sbb
into
out
loope
fs
ja
or
call
sub
mov
jno
sbb
adc
pop
push
int
lahf
jg
mov
loop
adc
enter
int
push
js
cmp
imull
cwtl
das
jno
pop
push
test
test
mov
call
mov
scas
mov
ret
test
inc
rolb
mov
jle
fsubl
mov
std
xor
fstps
pop
clc
mov
nop
or
and
push
push
rcll
push
les
xor
rolb
loopne
lret
dec
mov
dec
dec
inc
dec
xchg
cmc
rclb
push
sbb
popa
push
int3
jmp
xchg
jmp
fldcw
cmp
mov
shrb
rol
push
mov
lock
push
lds
sti
cmp
lret
test
sub
dec
je
sbb
cmc
out
jno
lahf
fstl
mov
lds
or
inc
fwait
outsl
lds
movsl
cmp
pop
adc
lret
fcomps
pop
sub
dec
push
jb
loopne
sbbb
add
out
sub
test
imul
sub
push
add
fs
and
repnz
jecxz
dec
leave
lret
mov
jl
and
stos
leave
xor
push
push
out
cltd
mulb
shrl
add
jge
mov
loopne
jo
xorb
xor
cmp
jnp
inc
inc
movsb
mov
daa
xor
into
negb
cmp
andl
cmpsb
add
pop
into
adc
js
dec
xor
sti
mov
popa
push
sahf
and
add
pop
ret
imul
xchg
insb
lret
into
adc
push
ficoml
inc
std
test
movb
repz
push
insb
jg
stc
jno
push
inc
andb
bound
mov
insb
je
mov
pop
mov
mov
jb
pop
jbe
fdivr
gs
cmpsl
inc
pop
dec
les
stos
scas
jg
out
jge
in
clc
cli
xchg
jbe
in
push
andl
cmp
sarl
data16
jbe
ret
jmp
xor
jb
das
pop
outsl
sub
andb
mov
ficompl
add
imul
xchg
movsl
mov
test
mov
test
cmp
dec
rcrb
aad
fisubl
ljmp
fstl
enter
mov
enter
lcall
fbstp
jno
jge
movsl
or
pop
test
lods
lods
fists
fs
jns
in
inc
jecxz
sti
inc
ja
mov
or
adc
jp
push
mov
rsqrtps
dec
pop
jecxz
shll
push
pop
test
sub
arpl
mov
mov
or
adc
fs
pusha
movsb
stos
test
push
loope
jnp
leave
clc
stc
sbb
jnp
leave
add
js
lahf
mov
adcl
lcall
insb
repz
icebp
dec
stos
sti
fwait
cmc
sub
fcoml
ret
jnp
mov
mov
nop
dec
pushf
xrelease
jg
fiaddl
dec
or
lea
hlt
test
arpl
sbb
mov
sbb
or
nop
mov
pushf
mov
scas
cs
test
js
push
testl
lea
in
and
inc
and
jae
xor
adc
dec
aam
orb
into
lahf
aaa
in
add
arpl
fcompl
mov
pop
addr16
test
dec
xchg
push
inc
ret
cmp
jae
inc
cmpsb
js
cmpsb
cld
xor
and
mov
add
testb
movsb
add
adcl
or
ds
mov
popa
pop
in
into
imull
loopne
inc
outsb
jecxz
push
in
mov
sub
push
mov
xor
scas
lret
fmuls
cmp
mov
jbe
dec
push
cld
mov
dec
aad
jae
or
mov
adc
into
sub
subb
add
into
dec
leave
push
rcr
pusha
fstps
mov
in
pop
and
sbb
ds
mov
mov
clc
push
jnp
or
dec
in
fwait
inc
sbb
sub
mov
push
mov
push
outsl
loopne
add
cmp
rclb
xchg
sti
ljmp
pop
out
negb
cmp
iret
jl
xor
or
in
stc
sbb
cwtl
into
jmp
std
lahf
loope
and
rcr
adc
std
test
pusha
add
popa
fwait
dec
mov
cmp
xlat
and
pop
lret
xchg
fxch
inc
pop
push
mov
or
lock
mov
dec
cmc
cmp
mov
inc
adc
inc
test
test
adc
xor
pop
mov
push
mov
lret
movsl
inc
jne
mov
clc
inc
subb
gs
push
enter
inc
xchg
mov
aas
cmc
cwtl
daa
cmp
out
scas
popa
mov
or
jge
mov
mov
subl
push
daa
adc
jmp
outsb
out
stos
shlb
addr16
in
xor
popf
inc
inc
mov
sahf
pop
out
cmp
fsubrs
inc
lret
pop
lret
nop
lea
push
xchg
shlb
test
cmp
imul
inc
cmp
mov
loopne
cmp
addb
mov
out
jg
mov
pop
call
sbb
sbb
lock
aaa
stos
inc
aad
pop
fistpll
or
push
scas
stos
push
mov
test
gs
orl
ljmp
xchg
push
sbb
mov
lods
mov
imul
cli
ret
or
in
dec
mov
xchg
cmpsl
xchg
xor
jmp
mov
jg
xlat
push
nop
in
sahf
sub
sti
ret
inc
mov
xchg
lcall
jge
push
adc
imul
clc
leave
rcll
in
pushf
xchg
dec
pusha
mov
jae
lods
fistpll
adc
icebp
jle
scas
sti
push
inc
fsts
test
push
sbb
push
ds
mov
adc
shl
ljmp
jae
inc
pop
or
aas
adc
add
ret
dec
and
xchg
outsb
imul
rol
mov
fwait
mov
outsl
fimull
ds
inc
lock
mov
jno
adc
ss
adc
or
adc
push
ja
cmpsb
movsl
mov
pop
sub
or
lds
imull
mov
call
xor
add
fcoms
sub
pushf
lods
movswl
fsub
jecxz
xchg
pop
sbb
xor
lahf
popf
mov
mov
fldl
pop
sub
mov
sarl
mov
pop
testb
jno
inc
adc
shrb
mov
sub
rcrl
jb
push
aad
mov
lcall
mov
mov
dec
sub
idivl
mov
ret
cmpsl
xor
push
pushf
out
jo
fs
movsb
jno
fwait
xor
pop
inc
and
sub
adc
xchg
dec
sbb
sarb
pop
clc
test
xor
push
cmc
dec
mov
cmp
into
outsl
int
repnz
leave
scas
mov
ja
int
cltd
outsl
jg
nop
and
je
and
pop
cmpl
jae
stos
add
js
stos
add
jne
push
sub
cwtl
cli
repnz
add
insl
jmp
pop
cwtl
jbe
movsl
cltd
mov
push
test
loopne
cmpsl
xchg
test
ret
movsb
jb
push
fucomp
mov
fmul
imull
clc
cs
inc
dec
cmc
fucomi
mov
fucom
and
iret
mov
ds
pop
lods
push
lahf
outsl
fwait
enter
mov
jle
jb
sbb
fidivs
ljmp
test
push
iret
clc
mov
xorb
jle
push
dec
arpl
inc
jmp
cmp
cmp
movsb
fs
inc
adc
sub
cmp
pop
pop
mov
lea
sub
aad
cmp
jnp
dec
mov
shlb
push
hlt
insl
scas
adc
int
fwait
and
out
jbe
or
xlat
add
mov
push
push
mov
repz
ss
push
inc
add
fstpt
jg
push
lret
repz
fidivrs
out
fdivrl
inc
pcmpgtw
aas
push
jl
stos
or
andb
mov
das
lods
push
xor
xor
pop
adc
jnp
jne
arpl
mov
clc
cmp
subl
pop
cmpl
pop
xor
inc
sub
cltd
fdivs
cmp
pusha
push
cmp
rcrb
cmp
and
and
adc
fnstcw
fisttpl
fidivs
mov
das
mov
clc
lea
sbb
arpl
in
fisubrs
lret
fadd
mov
nop
jge
push
icebp
adc
pop
xor
push
push
mov
stc
cmp
xchg
cmpsl
jle
testb
daa
out
fistl
and
dec
jno
mov
and
push
icebp
sahf
cmp
push
adc
pop
jecxz
cmp
xchg
xor
aas
pop
je
ficoms
push
pop
push
mov
add
inc
and
into
test
stos
cmp
push
cmp
cmp
insb
les
and
data16
push
mov
fmulp
xchg
loope
insb
jecxz
cmpb
dec
and
dec
sub
sbb
ret
pop
inc
out
pushf
push
testl
mov
bound
mov
pop
fldt
lahf
pop
out
cmpsb
xchg
and
jnp
filds
arpl
lods
xor
lcall
lods
mov
call
fidivs
test
rep
sbb
pop
into
mov
hlt
mov
roll
bound
pop
jnp
push
popa
inc
add
jge
daa
cmp
fdivs
fisttpll
jns
popa
sub
xchg
and
add
call
cli
sbb
adc
add
in
nop
jge
adc
cwtl
cmp
and
sbb
dec
rol
or
push
jle
sahf
popf
pop
rolb
insl
insl
sahf
rcll
add
inc
repz
jge
jb
jo
pushf
pop
outsb
jno
mov
sahf
sahf
iret
mov
test
ret
sub
mov
outsl
mov
push
push
add
pop
sub
mov
imull
jp
loop
cmp
xchg
and
lahf
repz
inc
xchg
movsl
and
cld
mov
mov
filds
push
daa
jecxz
mov
in
push
in
mov
push
sbb
icebp
mov
jle
scas
shrb
outsb
jmp
dec
adc
lret
pop
mov
mov
adc
and
pusha
or
mov
test
aad
cmp
cmp
mov
or
adc
ss
push
les
mov
shll
icebp
sar
mov
scas
cli
pop
imull
aaa
jbe
stos
sahf
adc
pop
imul
arpl
sub
xlat
ficompl
pop
dec
push
mov
ret
insl
testl
jno
sbb
aaa
test
or
xor
inc
orb
xchg
push
loope
mov
rsqrtps
aad
mov
xor
pop
and
mov
frstor
popf
neg
repz
xor
cmpsb
es
call
xor
hlt
fisttpl
insb
cvtdq2ps
leave
push
stos
addr16
jb
adc
int3
jl
pop
enter
xor
pop
mov
aaa
cwtl
insb
mov
ficomps
sub
mov
test
lods
sbb
addr16
jns
loopne
sarl
mov
push
push
cltd
sbb
push
movsb
push
sahf
repz
jecxz
dec
or
clc
mov
and
lret
jle
stos
inc
cmp
jno
or
dec
xchg
add
cmp
pop
cmp
push
cmp
mov
jns
loop
inc
inc
and
or
mov
aas
pop
test
push
push
and
xor
int
jl
mov
fdivl
cmp
dec
cmp
pop
stc
pop
sub
in
idivb
or
jmp
out
popf
mov
jge
jl
mov
adc
jo
jle
dec
xchg
sbb
scas
es
or
imul
mov
sub
adc
repz
mov
dec
lea
pop
cmp
enter
pop
and
cs
push
add
pop
je
int3
xor
mov
mov
dec
push
sub
repz
mov
ds
push
push
mov
cld
cmp
pop
mov
sbb
imul
loopne
stc
fidivrs
lcall
mov
aaa
and
xlat
std
lret
repnz
push
jo
mov
jge
icebp
push
repnz
lds
mov
shlb
pavgw
xchg
dec
push
dec
xor
dec
es
aam
pop
xor
jecxz
mov
sub
fxam
in
dec
xlat
ss
or
mov
into
ror
cmp
xchg
dec
iret
nop
push
ret
adc
pop
pop
mov
out
fldt
jg
sbb
movsb
icebp
pop
dec
mov
jge
popa
sub
pop
pop
loopne
cmp
movsb
push
push
or
iret
out
stos
mov
jg
inc
pusha
sarb
cs
push
jle
mov
jns
jl
mov
lea
mov
ficompl
pop
inc
arpl
mov
cld
xchg
repnz
outsl
and
addr16
inc
add
sub
xor
cmp
add
xlat
in
inc
jnp
xchg
and
pop
enter
inc
ror
stc
push
out
loope
ja
xor
cs
cmovl
cmpsb
push
ja
jmp
xchg
push
cmpsl
in
int
jo
mov
push
push
movlps
imul
sub
cli
imul
dec
fcmovnbe
jmp
mov
xor
sub
cmp
cli
and
dec
dec
mov
scas
inc
lock
js
into
popa
pop
in
cwtl
ja
sub
push
mov
das
loopne
cmp
lret
pushf
add
sub
or
mov
sub
ret
pop
inc
lods
push
mov
add
push
xor
jae
int3
jge
mov
sti
cmp
shlb
cmc
rcl
stos
push
push
or
sub
cmpsb
mov
dec
in
cmpsl
xor
pop
push
icebp
dec
jbe
outsl
push
inc
inc
jae
or
push
mov
rorl
push
loopne
mov
imul
xchg
pop
add
ljmp
add
dec
sbb
ss
cmc
in
push
or
adc
pop
cwtl
into
cmpsl
cmp
and
dec
mov
xor
cld
insl
add
out
add
adc
pop
mov
aas
sarb
xchg
test
rorb
sub
movsb
add
sub
test
jle
rep
xlat
cs
das
mov
xchg
push
add
aad
mov
mov
mov
nop
bound
push
lea
sub
mov
ja
test
fadd
fisubs
sub
mov
jle
sbb
clc
pop
push
cmpsl
add
in
imul
fistps
rcrb
ds
sti
cmpl
daa
push
lret
repz
jae
out
fdivrl
adc
test
and
adc
iret
mov
fs
push
in
xchg
pop
call
lods
or
fstpt
fstpl
das
outsl
scas
jne
test
stos
jmp
lds
xchg
push
mov
mov
and
cli
movb
pop
or
pop
addr16
gs
jbe
aad
or
in
ror
in
xchg
outsl
dec
jno
pop
aas
mov
aam
aaa
test
mov
scas
jne
cmc
mov
mov
je
cs
adc
aam
test
dec
call
aam
cmp
repnz
shrb
or
hlt
iret
fisubrl
out
inc
jecxz
jp
leave
cli
mov
dec
shrb
in
dec
addr16
rcrl
push
pop
and
in
dec
lock
loope
mov
add
jecxz
fimuls
ret
fcompl
ret
data16
movsl
out
out
js
or
movsl
addl
inc
ds
jge
cmpxchg
mov
xor
sub
ljmp
add
call
les
xchg
sub
ja
jno
clc
stos
addr16
mov
lcall
stos
inc
fdivrl
add
insl
adc
int3
shll
jle
ljmp
and
fwait
jbe
cmp
aaa
bound
sub
or
or
lret
ficomps
mov
or
adc
and
xchg
out
sbb
cmp
nop
leave
outsb
push
sbb
neg
inc
cld
cmp
loop
in
mov
push
into
in
test
mov
lods
lret
std
in
cmp
jg
mov
push
add
push
test
lods
data16
rorb
outsl
push
jmp
jg
andb
in
je
inc
das
div
mov
xchg
dec
loope
lahf
add
ljmp
pop
jno
push
lar
mov
cmp
daa
mov
dec
sub
jns
leave
mov
push
test
add
jp
leave
rcrl
dec
ljmp
jnp
and
cmp
xchg
ja
popa
daa
ficoml
and
lcall
pushw
and
cmp
sub
xchg
or
push
repz
std
and
or
addl
ljmp
mov
add
adc
in
mov
adc
fidivrs
les
inc
out
pop
mov
mov
push
jno
sub
jno
das
adc
inc
pop
imul
les
push
bound
mov
fdivrl
ret
push
mov
mov
xor
icebp
test
adc
jbe
in
add
inc
fs
inc
pop
inc
cmp
loopne
xchg
pop
cmpsb
mov
enter
mov
jne
movsl
out
sbb
cmc
jbe
aam
ds
lahf
mov
mov
lcall
sbb
idiv
orb
sub
sub
push
inc
inc
jo
popa
jnp
pop
sbb
xor
cs
cmp
rcrl
mov
sub
xor
or
loope
cmp
jo
jbe
jle
lock
sbb
xchg
dec
xor
push
and
sub
sbb
insl
ret
shrb
cli
in
leave
pusha
repnz
ljmp
xor
mov
adc
roll
pop
mov
out
push
lahf
lea
adc
mov
stos
pushf
xchg
pop
int3
sbb
dec
es
popf
mov
stos
xchg
stos
xchg
sbb
adcb
lcall
js
lds
mov
ss
dec
aad
cld
fstpt
or
pop
sub
inc
mov
xlat
ds
popa
fcoml
and
ss
mov
sarb
xchg
and
test
xchg
addr16
bound
int
xor
cmpsb
mov
pop
mov
int3
sbb
in
and
outsb
repz
cs
add
test
sbb
inc
ret
inc
cmp
nop
icebp
sarl
into
hlt
sub
cli
daa
mov
icebp
jne
rcrb
dec
mov
enter
aas
mov
divl
inc
adc
imul
setae
push
cs
popa
cmp
jge
insl
in
push
xchg
cwtl
in
mov
enter
lods
xchg
mov
jg
pop
pop
out
cmp
call
push
pop
fcoms
add
pop
xlat
and
xor
mov
mov
or
cmp
loope
pop
insb
mov
inc
outsl
lods
ficomps
sbb
adc
mov
ds
addr16
push
mov
ud0
mov
adc
or
mov
sub
sbb
add
clc
fsubrl
out
aam
bound
mov
push
push
mov
test
testb
mov
leave
out
mov
push
xchg
mov
scas
mov
xorb
test
mov
push
imul
ljmp
into
insb
sub
es
mov
pop
fcmovb
xor
push
in
adc
fnstenv
adc
mov
rorb
icebp
push
mov
pop
pop
mov
rol
in
adc
pop
adc
sub
leave
cmp
aam
mov
lods
scas
mov
pop
addr16
push
mov
mov
or
or
aaa
ds
vpavgb
aad
adc
and
or
nop
push
cmp
inc
pop
xor
inc
xchg
je
stos
imul
jmp
scas
xchg
lcall
mov
pop
push
arpl
sbb
gs
cmpsl
push
shl
es
pop
repz
cltd
test
sub
jle
sahf
xor
sub
adc
out
ret
ljmp
in
cwtl
test
adc
hlt
pop
cmp
dec
mov
and
cmp
xor
jg
sbb
stos
or
dec
cmp
ficompl
scas
cmc
mov
repz
adc
xchg
es
idiv
jge
pushf
cmpsl
and
pop
dec
add
cmp
dec
mov
sti
fstpt
test
cltd
sub
lods
sbbb
sub
into
cmp
mov
pop
test
xchg
scas
lea
jge
sbb
inc
adc
lock
dec
bound
push
xor
dec
sarb
sbb
iret
push
push
mov
imul
cwtl
aad
daa
ds
jp
lds
subl
push
test
imul
lea
push
enter
dec
imul
fstps
icebp
mov
push
and
push
lds
adc
sti
cmp
adc
ja
out
in
inc
xchg
in
sahf
mull
pop
xor
xchg
dec
pop
dec
mov
aaa
pushf
in
in
movsb
movsl
insb
fcomip
rorb
out
loope
sti
mov
add
rolb
lcall
cmp
or
mov
pop
push
pop
in
dec
cmp
xor
dec
push
xor
test
insl
stos
sub
shrb
mov
sub
mov
xchg
lods
push
fwait
outsl
push
pop
andb
sarl
jmp
add
lock
or
inc
adc
jmp
add
inc
mov
inc
cmpsb
mov
push
push
sbb
push
pop
mov
std
imull
mov
jne
jp
scas
add
or
mov
pop
inc
das
inc
adc
aad
lea
xor
add
xchg
lret
pop
dec
pop
push
pop
imul
sbb
adc
or
mov
lods
jno
aam
push
leave
mov
or
xchg
pop
ds
sub
sub
mov
add
mov
jbe
dec
dec
or
jmp
push
pop
ret
pop
jae
mov
jbe
arpl
out
int
cld
cld
arpl
in
icebp
adc
xor
filds
jmp
push
aas
dec
fisttpll
xchg
cltd
ds
leave
scas
cwtl
push
push
mov
in
mov
sub
add
push
xchg
ss
loopne
imul
cmp
mov
ss
cmpsb
pop
xchg
mov
add
push
icebp
inc
into
sahf
sub
mov
out
push
mov
inc
sbb
loopne
push
icebp
lret
pop
lahf
xor
pop
lds
sbbb
pop
das
idiv
int3
in
leave
mov
xchg
outsl
fisttps
push
mov
mov
cli
push
xchg
stos
movsb
cmp
jae
mov
jmp
and
dec
jbe
rorl
pop
fldt
pop
add
xor
jae
mov
fwait
mov
jo
stos
dec
cmc
cltd
and
add
sbb
mov
or
sub
dec
es
stos
sub
lea
mov
sub
stos
and
jno
mov
out
push
and
mov
adc
jb
aas
xor
pop
out
jns
ja
out
mov
jae
mov
lea
jns
xor
adc
arpl
xchg
iret
push
dec
add
ffree
and
mov
mov
sbb
out
dec
les
mov
outsl
mov
out
push
sbb
or
lcall
jns
gs
xor
inc
jnp
xchg
dec
xchg
sbb
shrl
dec
mov
sbb
cmp
lock
mov
cmpsl
call
mov
daa
mov
xchg
nop
movsl
add
sbb
inc
dec
or
mov
xchg
fildll
sbb
ja
cmp
in
leave
adc
inc
and
jg
mov
jle
pop
lret
pop
in
xchg
xor
pop
rcll
dec
out
xor
pop
xchg
xor
out
in
fstpl
mov
mov
icebp
adc
inc
mov
xor
fmuls
jge
std
jo
push
lahf
dec
or
jge
xchg
inc
sti
sbb
sahf
dec
sub
sarb
mov
add
push
cmpsl
cmp
lds
nop
je,pt
jo
sbb
clc
adc
jb
movsl
cli
loope
jp
cmpsl
sbb
icebp
and
push
mov
inc
call
inc
into
fs
inc
push
loope
mov
enter
add
in
ss
cmp
ja
jecxz
sbb
lds
iret
sub
insl
inc
scas
pop
icebp
jmp
push
out
in
mov
or
lret
arpl
mov
pop
sub
push
pop
push
fisubl
xor
sbb
xchg
sbb
cmc
mov
cltd
cmp
jno
xchg
rcr
lahf
or
sub
jmp
xor
lret
pop
lods
lcall
mov
pop
dec
clc
cmp
cmc
inc
and
pop
jle
sbb
cli
dec
and
aad
dec
lock
jnp
jecxz
shrl
pushaw
les
call
inc
mov
arpl
jmp
in
mov
inc
cmp
cwtl
jns
movb
js
inc
aas
sbb
inc
pop
xchg
fs
xchg
push
js
cmp
jbe
sbb
push
fadds
cmp
fsubl
sub
cmpsl
in
push
jge
xchg
in
cmpsb
roll
push
cmpsl
add
mov
push
call
nop
push
push
dec
add
push
and
rolb
cmp
out
jo
inc
fdivl
jp
mov
push
cmpsl
sub
sbb
mov
xor
add
or
jge
popf
and
inc
push
jecxz
jp
cmp
dec
cltd
rolb
pop
pop
test
movsb
mov
fdivrl
rcl
lods
xor
sbb
jp
test
fcmovbe
into
fstps
into
push
sub
pop
or
mov
popf
adc
add
xchg
sub
cmp
cmp
mov
jl
sub
push
xor
adc
mov
sub
xchg
push
xor
sub
cmp
adc
xor
xor
idiv
test
xchg
inc
enter
data16
clc
adc
and
pusha
mov
push
cwtl
imul
xchg
sarl
pop
repnz
clc
jae
mov
lcall
cld
stos
test
and
xchg
lea
aas
jle
vmread
dec
lods
jmp
outsl
xchg
ficomps
add
mov
push
mov
adc
shlb
fsubrl
add
push
or
test
into
aaa
int
leave
repnz
dec
jmp
icebp
mov
in
leave
and
pop
dec
sbb
mov
inc
adc
fldl
out
push
nop
shrl
std
add
mov
dec
lock
js
push
jae
jmp
pop
cwtl
inc
int
les
inc
out
inc
or
xchg
inc
fstps
pop
mov
enter
stos
ds
addr16
movsl
mov
rcrl
mov
adc
add
testl
popa
pop
dec
out
push
sub
enter
mov
mov
push
pop
cmp
add
mov
loopne
iret
mov
je
neg
lea
enter
mov
stos
popa
sti
mov
aaa
dec
aaa
lods
pop
pop
leave
aad
push
aam
add
movsb
fists
popa
mov
and
nop
gs
mov
jae
das
jb
cmp
mull
repnz
cmp
cli
in
push
and
outsb
mov
shlb
inc
and
clc
rolb
repz
mov
iret
sahf
cli
icebp
sbb
aas
push
les
dec
pusha
mov
sub
mov
inc
popf
shll
jl
mov
pusha
gs
inc
loopne
shl
inc
das
xchg
movsb
and
xor
inc
xor
mov
lds
test
sbb
cmp
xor
xor
xorb
lds
mov
or
popw
push
dec
into
ja
mov
xchg
xchg
dec
sub
add
filds
push
push
loope
xchg
rcrb
pop
pop
cltd
mov
test
push
sub
push
ret
cmc
jmp
fldenv
and
xchg
jl
in
pushf
sbb
movsl
jne
iret
lds
rclb
add
enter
in
mov
mov
mov
nop
loop
sbb
adc
in
jne
popa
pop
adc
int
loope
ret
mov
movl
add
push
adc
sahf
mov
aaa
sbb
loopne
andl
sub
repz
sbb
rcrl
fnsave
inc
gs
jae
out
add
cwtl
std
fcmovnb
aaa
dec
shlb
mov
sbb
xor
jecxz
cli
stc
lahf
xor
sbbl
loopne
ljmp
cs
xor
bound
mov
inc
mov
bound
sbb
nop
xchg
outsl
stos
add
sbb
cmp
xchg
out
cltd
cmp
jne
mov
jne
or
dec
mov
inc
iret
mov
popf
scas
push
rolb
dec
and
sbb
iret
es
repz
cmpsl
pop
dec
insl
push
xchg
pop
cmp
dec
clc
ficompl
dec
nop
cmp
mov
sbb
sub
xor
clc
sub
xchg
insb
mov
shr
jmp
sub
jns
pop
popa
testl
mov
sbb
sbb
into
cmpsl
stc
js
xor
inc
xchg
out
cs
mov
sbbl
jb
cmp
leave
lahf
insb
pusha
cmp
jne
in
in
mov
movsl
cmp
xlat
mov
push
lock
insb
out
clc
mov
jl
shll
in
mov
pop
push
sbb
xor
repz
arpl
sbb
int
clc
xchg
bound
jecxz
cmp
jle
xchg
punpckhdq
es
pop
adc
add
or
test
or
inc
cmp
nop
jg
test
cmp
ret
mov
out
out
push
mov
js
aam
xor
cmpl
aad
stc
add
mov
push
fidivrl
sbb
jmp
mov
cmp
and
shll
call
jg
insb
int3
inc
jbe
shll
push
jb
lret
xchg
xchg
mov
ret
push
sub
inc
or
jno
repz
xchg
dec
stc
jp
lret
cmpsl
pusha
das
inc
or
push
dec
adc
lods
inc
je
sbb
call
hlt
cmp
cmpsl
inc
jno
loopne
cmp
jmp
enter
pop
push
fsubp
fdiv
sar
dec
nop
call
sub
aad
dec
xorl
adc
add
ss
adc
xchg
adc
test
stos
dec
roll
rol
jns
and
jecxz
and
push
add
sbb
aas
cmc
cltd
repnz
ds
in
dec
dec
and
or
notl
call
pop
outsb
bnd
adc
dec
xchg
mov
dec
gs
jae
cmp
sbb
in
repnz
mov
mov
mov
xor
mov
jge
clc
dec
popl
insl
dec
inc
fimull
lods
inc
aad
push
push
rcrb
pop
icebp
mov
pop
ror
shl
ljmp
cmp
daa
jo
add
mov
xchg
xor
in
sbb
scas
adc
xchg
push
mov
lods
sub
xor
ror
xchg
and
push
cmp
or
xor
fcomps
add
push
daa
mov
shll
jecxz
rorl
nop
fdivrl
pop
jp
jo
inc
enter
push
rclb
add
mov
rcrb
inc
cmp
sbb
push
icebp
lcall
roll
scas
mov
test
push
popa
add
mov
mull
push
pop
mov
sti
add
inc
dec
lcall
and
das
fmull
push
add
into
mov
mov
or
and
jle
add
push
mov
lock
sahf
test
pop
data16
adc
loopne
fstpt
fnstsw
movsb
insb
lock
mov
leave
adc
fcmove
push
mov
hlt
sub
hlt
jg
repnz
rcrl
add
or
lcall
dec
jbe
outsb
repnz
mov
pop
pushl
or
sub
ret
incb
adc
imulb
cmp
dec
jns
push
rorl
cmp
or
jp
push
bound
mov
sub
rcrl
sarl
cmp
sbbl
es
sbb
ss
fucomip
test
sub
jb
jl
psllq
notb
pop
and
shl
cld
pushf
dec
aas
sbb
dec
stos
roll
mov
xchg
mov
dec
push
push
push
into
shl
and
cmpsl
test
sub
sub
lret
jmp
jp
jb
rorb
or
jno
inc
sub
je
adc
lea
mov
lock
push
jno
shrb
jbe
scas
sub
mov
xchg
dec
ret
in
scas
into
mov
adc
sbb
aas
add
adc
cli
xor
rorl
pop
mov
jle
sub
aam
sbb
dec
sbb
movsb
lods
movsb
out
jecxz
outsb
fsubs
bound
jo
mov
aam
and
popa
fsub
jae
mov
jns
scas
sub
or
jbe
out
xchg
std
negl
insl
inc
mov
loopne
cwtl
es
jge
mov
xchg
jbe
outsb
idivl
and
inc
inc
mov
or
test
insl
xor
inc
cmpsl
test
sub
add
push
inc
enter
not
sbb
mov
add
pushl
bound
mov
push
xor
stc
jmp
stc
inc
cmp
test
cmp
lods
repz
cmp
push
mov
xchg
dec
push
sti
push
pop
sub
addr16
lahf
call
add
fnstenv
add
hlt
sbb
xor
loope
jnp
add
xlat
push
xor
adc
test
mov
push
mov
inc
faddl
xor
adc
cmp
jae
adc
or
ja
mov
inc
and
xchg
cmp
mov
fsts
or
out
jge
fbstp
mov
sub
mov
js
ficomps
jae
adc
pop
daa
add
testb
mov
pop
sti
cmp
mov
gs
mov
add
je
jl
push
ja
icebp
stos
pusha
cmc
stos
icebp
sub
cmp
out
pop
mov
fs
cld
and
and
outsb
xor
pop
inc
les
lock
dec
push
outsb
sub
xor
fs
in
jno
jecxz
jb
loopne
insb
and
adc
or
xchg
pop
mov
mov
xchg
ss
jne
adc
idiv
or
shll
int3
mov
push
fcoms
xor
fidivrl
mov
gs
pop
stos
dec
outsl
shlb
test
push
insb
add
or
dec
mov
ret
negl
fiaddl
sti
cs
push
lret
push
stos
sbb
das
push
rcr
lock
popf
xchg
out
lds
leave
fsubs
int3
pop
mov
mov
jb
xchg
cmp
mov
inc
shll
jns
std
jns
mov
out
test
stos
pop
cmp
cmp
jne
adc
pop
or
outsl
mov
leave
jo
test
adcb
lret
jl
lods
push
divl
sbbl
inc
mov
into
mov
sub
enter
es
jae
add
pop
mov
shr
loope
into
pusha
cmp
sub
jmp
pop
push
add
repnz
or
and
mov
arpl
pop
cld
jno
cs
loopne
pop
pop
mov
mov
loop
std
fbstp
vmovq
dec
mov
cwtd
out
nop
jne,pn
aad
sub
lock
dec
daa
pop
sbb
cmp
xor
jbe
push
or
cmp
lock
mov
fsubs
out
lahf
sub
xor
mov
mov
jp
push
dec
ret
cmpsl
test
mov
icebp
cmp
leave
call
shr
mov
pop
jmp
fadds
mov
xchg
fwait
shll
jne
iret
jns
aad
sti
mov
or
insl
push
lahf
jmp
push
pushw
sub
stc
push
push
mov
sub
sbb
fstpt
in
jb
cmpsl
mov
sub
test
mov
inc
inc
sub
dec
mov
insl
or
imul
and
add
pop
scas
pop
sbb
adc
xchg
leave
dec
sbb
movsb
dec
pop
jno
sbb
shll
int3
subb
dec
mov
insb
pop
test
xor
ds
insb
call
inc
add
mov
cmc
mov
test
scas
xchg
or
push
pop
dec
hlt
and
pushf
ret
lret
shrb
xor
cmp
mov
adc
inc
adc
lret
xchg
mov
movsb
dec
push
xchg
in
push
ficoms
lahf
mov
mov
mov
aaa
cmp
jmp
js
sbb
push
or
aam
and
movsb
dec
inc
out
cmp
in
jb
ja
gs
sti
in
divb
inc
ret
push
dec
jge
dec
inc
and
mov
fidivs
imul
je
push
mov
add
push
fistps
sbb
or
fldenv
sub
jmp
xchg
xor
sahf
enter
insl
aaa
and
hlt
mov
cmp
or
mov
fs
clc
add
daa
jmp
push
inc
or
and
sub
pop
or
pop
rorl
pushf
shlb
and
mov
or
pop
push
sbb
scas
push
mov
inc
shll
pop
pop
ja
mov
push
push
xchg
subps
sub
sub
and
mov
push
or
push
call
pcmpeqb
add
xchg
ret
push
push
insl
pop
lock
idiv
jns
jne
push
lods
sub
jnp
test
and
lods
adc
xchg
cmc
mov
mov
mov
fdivp
push
mov
push
shll
xor
dec
mov
ret
shlb
in
test
mov
sti
bts
xchg
clc
fnsave
cmp
dec
lods
dec
ds
xchg
enter
jb
test
stos
mov
into
xor
sbb
out
xor
insb
jne
inc
sub
jp
inc
and
ja
push
and
aad
lock
mov
pop
imul
push
xor
mov
jmp
pop
loope
lret
pop
or
xchg
add
mov
xchg
fcompl
mov
cmp
dec
sbbl
add
cmp
and
leave
mov
dec
mov
sbb
lds
dec
or
ds
cmpsb
jg
push
lods
outsb
aam
das
mov
inc
out
leave
das
pop
bound
mov
and
int3
jecxz
pop
mov
test
mov
sbb
fldenv
in
add
mov
leave
enter
add
jg
pop
dec
out
sub
fs
ljmp
xchg
repz
fs
imul
xchg
mov
movsbl
popa
loop
out
pop
xchg
push
sub
imul
iret
ljmp
jb
xchg
test
cmp
lret
outsl
leave
push
pop
flds
mov
xor
jnp
xchg
mov
push
push
sbb
add
cs
jecxz
sbb
shr
inc
mov
lock
jle,pt
inc
or
pop
call
adc
or
and
test
add
sub
js
sub
push
dec
out
jns
mov
mov
mov
shlb
add
icebp
stc
add
mov
aaa
mov
pop
in
mov
xchg
or
push
jge
jmp
cmc
test
jns
add
data16
jmp
rolb
daa
cmpsl
xchg
movsl
xchg
push
pop
imul
mov
pop
inc
ret
jle
push
cld
pop
rorb
dec
addr16
ret
in
ret
shll
ja
aas
vpunpckhbw
lret
rcl
xorb
lcall
pushf
dec
insb
jl
xchg
sbb
dec
cwtl
stc
xor
or
es
mov
push
movsb
pop
scas
cld
sbb
hlt
mov
stos
and
push
ret
lahf
pushf
push
adc
push
sub
aad
mov
mov
rep
adc
sub
add
arpl
dec
sub
rol
int3
mov
mov
out
mov
cs
mov
xchg
popa
out
or
shll
inc
ss
in
xor
inc
adc
cwtl
loope
mov
faddl
aam
mov
pushf
inc
lods
mov
in
adc
push
scas
test
cmp
xchg
repnz
fwait
cmpsl
xchg
and
pop
bound
pop
cmp
xlat
sbb
cmp
sbb
cmp
xor
movsl
adc
orb
push
cld
mov
adc
mov
xchg
pop
mov
mov
cwtl
imul
roll
mov
out
jne
adc
inc
out
push
mov
add
stc
mov
imul
int3
lds
lock
test
sbb
sti
andl
push
cld
push
xor
pop
xor
ret
out
dec
bound
outsb
push
jmp
and
dec
jg
push
sub
dec
sbb
mov
push
inc
inc
dec
xchg
cmc
in
call
jmp
gs
enter
in
push
cmp
push
lods
loop
xor
jno
shrb
mov
add
je
in
mov
mov
sti
xchg
pop
movsb
cmp
adc
jecxz
mov
std
outsb
cmpb
fldcw
or
dec
pop
and
adc
adc
lods
add
scas
adc
int
movsl
fldcw
add
arpl
aas
xor
sahf
xor
adc
int3
test
push
xor
leave
insb
xchg
imul
mov
push
dec
push
add
loop
nop
loop
vmovntpd
xchg
cwtl
int
fimuls
cltd
cmpsb
test
or
out
fnstsw
icebp
cmpl
adc
mov
mov
fcoml
dec
test
ja
pop
mov
mov
and
inc
subl
jmp
dec
sbb
cmp
das
or
iret
jmp
jbe
lea
clc
sbbb
cmp
ljmp
andb
cmpsb
mov
mov
shll
lret
inc
test
push
xchg
loope
insb
loopne
imul
cmp
test
jns
cmpsb
jns
sbbl
repz
shlb
sbb
or
mov
and
hlt
push
test
adcl
cmp
jmp
mov
popa
fimuls
aaa
or
daa
imull
lret
mov
popa
jmp
and
mov
xchg
xchg
dec
mov
jmp
out
mov
mov
jo
mov
mov
dec
xor
pop
fcomps
int3
test
in
fnstcw
jb
xor
xchg
adc
jle
pop
popf
in
push
lahf
jg
mov
xor
repnz
hlt
mov
mov
xchg
outsb
in
imul
repz
sbb
mov
jae
or
adcl
dec
testb
imul
push
andl
push
test
xor
mov
add
push
xor
inc
in
das
in
test
mov
popa
jno
icebp
mov
sbb
mov
imul
sbb
ja
xchg
rorl
mov
cwtl
movsl
cli
dec
ror
loopne
inc
popa
ss
fmull
cmp
pusha
repnz
mov
into
jmp
cmc
inc
mov
push
xchg
fnstenv
scas
shl
test
ret
dec
movsl
push
or
fsubrs
iret
pop
repz
sar
or
xchg
out
pop
lcall
movsb
sub
jp
mov
jp
jnp
fidivrl
test
fsin
pop
sub
popa
or
test
in
jno
dec
lock
fs
outsb
nop
cmc
mov
aaa
stc
jmp
cltd
out
rcrb
adcb
clc
sub
ja
xor
out
push
or
push
mov
mov
lcall
mov
ficomps
enter
sarl
xchg
int
jnp
aas
les
dec
push
adc
cmp
aas
das
ljmp
lds
ret
pop
jle
pushf
pop
push
ror
xchg
and
xorl
sbb
push
scas
push
sub
cld
inc
jecxz
dec
pop
hlt
leave
je
sbb
push
test
fisubl
mov
scas
hlt
mov
inc
xchg
andl
adc
out
add
daa
fs
pop
in
clc
jge
call
repnz
loope
hlt
insl
and
xor
test
jle
inc
push
mov
out
stos
mov
xchg
jl
or
xchg
add
sub
mov
pop
cmp
sub
jnp
movsb
aas
jns
addb
cmp
repz
arpl
ds
scas
sbb
sub
inc
out
jecxz
adc
ffreep
cmp
push
dec
sbb
mov
lret
and
fbld
clc
push
add
or
nop
inc
bound
adc
lret
xchg
lods
out
inc
and
xchg
es
mov
mov
out
cmp
mov
xor
aad
dec
jno
out
xchg
arpl
pop
pop
xlat
cmp
adc
fidivs
dec
xor
lea
jg
das
std
out
xchg
push
add
jb
cmp
jge
pop
mov
sbb
dec
inc
jmp
or
icebp
aas
adc
sub
sahf
pop
mov
add
mov
dec
dec
xor
and
popf
adc
cli
adc
push
xor
sub
sarl
push
in
mov
pusha
js
outsb
mov
pop
pop
mov
mov
jne
dec
xlat
neg
xor
orb
mov
dec
lds
repnz
mov
incb
fwait
jbe
pop
sbb
lahf
cld
fstpt
pushl
lcall
pushf
mov
aad
push
sub
mov
out
cltd
or
fwait
loop
aaa
sbb
ret
jge
mov
call
lock
jmp
stos
iret
movsb
mov
iret
mov
out
jge
xor
es
and
and
inc
dec
sarb
lock
jno
adc
and
call
mull
cmp
rcrl
psubq
lods
mov
ret
out
fadds
movsb
shl
push
test
xor
pop
cltd
and
jne
sbb
fcmovnu
and
std
ljmp
insl
pop
int
mov
cmpl
cmc
xchg
cmpsb
push
js
ds
jp
das
stos
push
xor
sbb
jecxz
push
addr16
jg
popf
push
sbb
repnz
xor
mov
shrb
aam
mov
jmp
inc
sbb
and
mov
jno
movsb
nop
or
mov
les
sbb
out
movl
pop
mov
mov
jg
aad
fwait
leave
push
bound
add
jb
or
iret
pop
leave
roll
or
pop
movsl
inc
cmpsl
dec
add
es
stc
ljmp
sti
cmp
mov
mov
xchg
mov
add
add
scas
sbb
repnz
jmp
test
mov
xor
jl
sarl
cmp
aaa
mov
add
cmpsb
shrb
and
push
insl
movsb
daa
mov
mov
push
ficoms
or
inc
mov
test
mov
push
pop
or
and
xchg
aam
scas
sub
dec
pop
mov
xchg
jmp
in
mov
push
popa
sub
xchg
inc
out
out
test
icebp
stos
add
mov
dec
cmp
stos
sbb
mov
cmp
jmp
add
shl
push
or
jecxz
mov
adc
xor
stos
pop
jae
pop
stc
mull
adc
or
hlt
xchg
push
cmp
push
or
jl
movsb
fisttpl
pop
xchg
push
dec
mov
pusha
xlat
ror
add
stc
ss
pop
shl
xlat
xchg
notl
in
out
add
mov
mov
sub
fistl
daa
jp
cmp
imul
push
mov
stos
leave
sbb
jb
test
clc
insb
adc
mov
loope
std
lods
cmc
push
ficoml
and
sub
inc
sahf
ljmp
popf
adc
test
mov
das
adc
out
sub
shll
add
cmp
fists
sub
dec
insb
adc
push
aad
pop
xchg
jns
sub
sub
adcb
and
mov
mul
js
lea
dec
arpl
pop
push
int3
mov
jb
cltd
cltd
repz
cmpsl
insb
pusha
xor
lock
mov
jne
xor
cld
in
adc
inc
notb
cmovp
push
xchg
mov
enter
addr16
hlt
lahf
sahf
xor
cld
cmp
aas
iret
scas
jp
fnstenv
dec
pop
and
rorb
out
adc
xor
out
bound
push
das
push
out
sti
mov
faddl
adcb
incb
cli
push
movsb
xchg
push
outsb
cmp
fcmovb
rclb
int
out
and
lds
ret
iret
add
lock
cmpsl
push
das
jnp
jo
xchg
ret
stos
xchg
pop
inc
outsl
sahf
xorb
fs
test
cmp
popa
lods
xchg
xchg
and
in
mov
xchg
decb
lods
or
cmp
out
mov
pop
insb
ds
dec
imul
push
fs
and
inc
xchg
out
push
cmpsl
fadd
out
pop
jp
out
je
test
sub
mov
pop
xchg
adc
xor
leave
cmp
pop
pop
cmp
outsl
sahf
lret
test
xchg
jge
out
pop
leave
or
test
add
shlb
pushl
addl
test
je
mov
hlt
scas
push
test
sbb
sub
mov
mov
mov
out
inc
aaa
mov
subl
cmp
xlat
pop
hlt
mov
mov
rol
repz
mov
inc
sub
cld
out
and
mov
jns
or
push
std
xchg
jecxz
ficoml
and
mov
outsb
call
fimull
or
sahf
adc
cmpsb
ja
insb
hlt
pushf
jbe
jl
pop
lahf
push
or
adc
xchg
sub
push
imul
std
xchg
adc
aas
clc
mov
pop
and
dec
das
xchg
imul
inc
in
filds
iret
cmpl
fisttps
loopne
out
outsl
shll
sbb
lret
push
mov
jp
mov
dec
cmpsl
cmp
xchg
loop
cmc
xor
pop
test
xlat
stc
scas
test
cmpsl
mov
adc
and
mov
cltd
push
aaa
sbb
prefetch
or
or
dec
cmp
xor
xor
pop
lret
push
popf
jmp
enter
int
push
or
add
dec
leave
ds
stc
cmpsb
mov
lods
adc
sbb
jecxz
scas
and
ret
pop
fdivrl
sbb
adc
mov
jp
xchg
call
mov
xor
mov
mov
lock
icebp
repnz
arpl
cld
aam
jns
xchg
ds
push
mov
push
sub
and
ja
sahf
pop
pop
fdivrl
pop
lods
and
push
insb
adc
xor
imul
cwtl
or
cmp
clc
testl
popa
dec
repnz
aaa
mov
out
jp
test
push
adc
pop
mov
add
sub
push
stos
lock
sub
faddp
sahf
mov
sub
inc
and
inc
lret
in
lods
sbb
lds
mov
xor
sub
rcl
xchg
fsubr
insb
sub
popa
and
dec
jno
in
nop
scas
scas
pop
clc
out
test
mov
or
sahf
push
or
lcall
call
mov
cmp
cmp
fsubrl
push
push
sbb
pop
test
les
sbb
and
rorb
mov
bound
movsb
movsl
and
out
decb
stos
jg
inc
ret
insl
fs
lret
dec
sbb
scas
clc
loop
scas
adc
jmp
xor
jne
xchg
pop
xor
pop
insb
push
mov
push
sbb
sub
in
mov
enter
add
mov
xor
loop
push
sub
es
xlat
pop
push
pushf
push
ret
and
adc
add
insl
mov
outsl
loope
pushf
inc
mov
int
xchg
or
fwait
aam
xchg
cmpsl
jb
and
jmp
popf
mov
out
movsb
imul
loopne
cmp
sub
icebp
mov
mov
imul
xor
xchg
addr16
cmpsl
mov
leave
sbb
push
shrb
mov
lods
cltd
push
xchg
push
push
xchg
mov
stos
mov
in
jge
inc
adc
test
and
scas
adc
les
mov
inc
stc
fistpll
stos
jp
push
dec
sahf
and
push
xchg
jb
ja
aaa
push
sti
lret
push
mov
adc
pop
adc
scas
inc
pop
pop
mov
push
int3
fisttps
sub
stc
sub
xchg
test
fnsave
sbb
sub
sbb
xchg
shrb
scas
jnp
mov
xchg
pop
sbb
jg
sub
push
and
mov
push
ljmp
pop
lret
push
in
push
sub
xorb
nop
pop
xor
ljmp
cmp
xchg
sahf
hlt
sarl
xchg
mov
jno
pop
pusha
out
lret
hlt
ljmp
mov
hlt
out
enter
shll
adc
push
lods
pop
mov
mov
or
hlt
or
xchg
dec
lcall
stos
and
dec
push
jbe
xchg
aad
fsubr
pop
and
cwtl
in
jbe
pop
scas
mov
in
xchg
xchg
or
mov
std
dec
sbb
adc
dec
add
add
cs
inc
addb
inc
fadd
mov
enter
mov
in
mov
sub
push
jle
popa
loope
xchg
jmp
test
dec
mov
jne
insl
stc
rcr
mov
inc
sub
and
test
pop
cmp
add
sbbl
cld
aas
add
push
xchg
das
or
jbe
inc
mov
jbe
or
in
pop
xchg
in
loopne
pop
or
cmp
int3
pop
push
test
push
xchg
fwait
std
xor
mov
mov
jecxz
mov
insb
jle
dec
dec
in
mov
xor
rcrb
pop
push
jne
stos
fs
int3
mov
stc
mov
or
xchg
xor
inc
nop
in
notl
mov
inc
fidivrs
xchg
mov
sbb
or
jge
and
dec
jno
push
shl
jo
mov
leave
sbb
mov
out
cmpsb
aaa
loope
mov
jecxz
add
mov
frstor
mov
lock
pop
pusha
repz
sar
jb
xchg
push
call
pop
iret
jl
mov
test
das
ds
push
int3
xchg
jmp
push
push
mov
movsb
cmp
inc
in
jo
inc
fcmovnbe
inc
mov
outsb
pop
insb
xchg
clc
jg
ror
push
stos
or
cmp
lahf
int
iret
mov
push
xchg
inc
jno
or
addr16
sbb
in
pop
outsb
cmc
mov
movsl
insb
adc
mov
xchg
cli
icebp
pushf
mov
or
pop
push
pop
nop
add
punpckhwd
ud2
mov
xchg
jg
mov
nop
sub
mov
dec
lods
cwtl
pop
xchg
xor
stos
into
push
mov
shrl
pushf
push
aaa
movl
test
aam
loopne
insl
js
ds
ss
insb
ljmp
push
in
cwtl
repz
sbb
cmp
scas
js,pt
cmp
mov
mov
mov
incb
pushf
inc
imul
cmp
lods
hlt
mov
lods
xchg
pop
sub
lea
add
add
mov
pushf
mov
mov
jne
push
and
jb
stos
push
cli
pop
in
movsl
in
out
mov
out
mov
enter
movsl
mov
pop
movsb
pop
jne
sub
test
jle
mov
or
xchg
shrb
out
sub
adc
out
out
jo
or
fs
jb
icebp
lret
sub
repz
sub
or
xor
mov
inc
scas
mov
mov
fldl
lret
jne
out
xor
pusha
in
pop
cmp
sub
int3
dec
pop
ljmp
pop
pop
mov
stos
popf
lds
out
cmpsl
adc
and
mov
sbb
jb
sti
push
repz
movsl
outsl
test
rcrb
cmp
sbb
aam
arpl
sbb
push
out
xor
mov
sub
mov
lods
fstp
mov
in
mov
clc
jge
mov
mov
add
fnstcw
lea
subl
and
fdivrl
cmp
lcall
loopne
aam
pusha
inc
mov
add
xchg
gs
cmc
shlb
push
inc
mov
scas
mov
stos
pop
and
stc
mov
popf
ret
pop
mov
mov
mov
in
pop
sti
pop
insb
repnz
lcall
add
xchg
adc
and
dec
pop
les
fcompl
mov
pop
cmc
inc
cmc
test
dec
xchg
xor
ret
jmp
add
mov
push
add
je
outsb
lahf
hlt
or
nop
lea
cmp
aam
std
cmpsl
lock
push
pop
jle
aad
adc
add
xchg
or
fnstenv
and
int3
fstpt
xlat
push
out
push
cwtl
mov
jns
decb
push
rol
aas
xor
cmc
sti
cmp
bound
and
movsb
pop
or
rolb
popf
xchg
gs
or
popf
xchg
in
and
loopne
out
sbb
leave
mov
movsb
xlat
xchg
dec
clc
push
jecxz
fstl
cmp
jmp
push
lret
dec
add
bnd
cmp
inc
insl
in
pop
pop
mov
movsb
dec
pop
xchg
je
lahf
xchg
in
mov
pop
add
jg
mov
sub
mov
movsb
nop
jno
outsl
mov
pop
xchg
aam
popa
popa
hlt
pand
imul
aaa
dec
sub
dec
mov
lcall
std
jge
lret
jecxz
xchg
pop
mov
xchg
stos
xor
xchg
and
mov
jp
jbe
xor
push
int3
mov
test
inc
xor
cmp
inc
movsb
inc
jmp
clc
push
add
xchg
mov
or
push
xor
lret
add
xlat
mov
mov
lock
imul
mov
sub
fstps
and
push
ja
mov
test
jl
mov
cmp
mov
sub
ss
adc
add
stc
movsl
lds
xor
dec
mov
jmp
fwait
adc
jae
in
sbb
xlat
repz
ret
pushl
outsl
rcrl
sbbb
push
fisubl
lahf
or
sub
xor
aam
mov
mov
shr
sub
xchg
and
inc
stos
out
es
dec
sbb
xorl
loope
fs
movsl
movsb
inc
stos
outsl
add
push
push
sahf
push
imul
mov
data16
jge
pushf
sub
ss
sub
mov
imul
cli
data16
sti
arpl
and
sub
jmp
mov
outsb
jo
adcb
pop
xchg
test
push
or
pushf
pop
fisttpll
leave
lret
fnstcw
pop
imul
sbb
xchg
test
inc
add
jns
lods
faddl
jecxz
mov
add
cwtl
xchg
call
popf
cld
push
bound
ficoml
sub
nop
movsb
fidivrs
cli
or
in
mov
shrb
sbb
adc
adc
sub
dec
and
mov
inc
sub
cmp
dec
enter
xchg
addr16
pop
sbb
adc
mov
dec
adc
jb
jne
xchg
add
pop
shlb
add
push
repnz
addr16
and
dec
cld
and
pop
jmp
cmpsl
xchg
lods
or
pusha
fwait
jle
in
sub
sbb
xchg
dec
jp
cwtl
and
movsl
mov
jns
lahf
pop
insl
out
inc
cmc
imul
sub
lcall
cmpsb
xcrypt-cfb
cmpsl
data16
js
lcall
fisubrs
sarb
pushw
sbb
call
mov
out
push
adcl
cmp
cmp
out
mov
out
xchg
adc
loop
inc
jg
adc
std
pop
xchg
rclb
pop
mov
bound
loopne
stc
cmp
xorb
iret
ror
into
mov
push
nop
ss
xor
insl
mov
cmp
popa
leave
dec
xchg
pop
push
ss
sbb
stos
data16
sbb
pop
iret
push
sub
xchg
sarl
mov
ret
mov
adc
in
outsl
pop
les
pop
push
cmp
sbb
push
mov
ret
fmuls
dec
jle
mov
cmp
mov
and
xchg
stos
pusha
sbb
fiaddl
nop
sbb
mov
outsb
icebp
jp
hlt
xor
sbb
jns
cmp
lret
hlt
mov
imul
push
lret
cld
call
rclb
push
mov
inc
push
or
add
mov
jns
jl
ret
push
outsl
inc
mov
stc
or
sbb
and
ljmp
add
push
fidivrs
es
in
mov
cld
in
into
rol
iret
inc
push
sar
pop
cmp
cmp
ja
jno
dec
add
mov
cmp
add
or
outsl
sbb
xor
shl
lds
add
out
sbb
or
xchg
subl
mov
jg
pop
jno
mov
or
mov
daa
sbb
test
mov
pop
jo
mov
sbb
jle
mov
pop
int3
and
rolb
push
ss
addr16
ret
sub
jmp
push
dec
and
pop
into
mov
cmpsl
jmp
daa
fs
bound
mov
ja
cmpb
lds
dec
lea
xor
lahf
sub
cmp
mov
fistpll
jns
aad
cmpsb
out
out
mov
or
test
dec
pop
ret
aas
and
dec
aam
cwtl
ljmp
xor
sub
pop
popl
xor
stos
xchg
sbb
mov
cmpsb
and
cld
mov
cmp
pop
outsb
pop
addl
psllw
int
neg
xor
pop
pop
pop
mov
jl
lahf
sahf
dec
lea
aas
imul
and
sbb
fildl
repz
mov
mov
mov
jnp
or
or
dec
pmulhw
cmp
mov
add
pop
mov
jmp
dec
add
sbb
cmpsb
nop
aas
jo
gs
cli
pop
add
ja
sar
adc
cwtl
sbb
subb
movsb
in
lds
stos
cld
enter
or
lds
pop
xorl
in
cmp
js
popf
jl
mov
leave
repnz
es
push
cltd
push
stc
push
mov
mov
mov
inc
in
xchg
in
aad
sbb
movsl
mov
push
add
ja
cld
aas
test
sti
xchg
mov
pop
aam
push
jle
pop
pusha
lahf
fidivs
mov
les
shr
int
shl
fwait
sub
dec
shrb
imul
and
dec
arpl
lea
cmp
mov
mov
xor
mov
movsl
dec
das
xor
lods
mov
jns
outsb
push
jmp
insl
idivb
mov
mov
aam
or
pop
jge
out
xor
mov
sbb
insl
gs
inc
ja
das
push
pop
nop
xorl
cmp
lcall
mov
mov
aam
loope
icebp
mov
data16
or
gs
bnd
dec
lret
out
pushf
stos
test
adc
mov
dec
js
out
push
push
out
push
mov
or
cmp
test
call
notl
mov
xor
cmp
adc
mov
dec
mov
adcl
jno
sub
je
cmp
icebp
xor
push
loope
call
push
dec
cwtl
mov
dec
adc
pusha
rcll
xchg
jp
inc
popf
mov
mov
cld
cld
sti
addr16
push
jb
bound
je
cmp
lock
mov
jmp
or
and
push
movsb
pop
sbb
fiaddl
xor
addr16
push
jno
jle
lahf
jne
mov
adcl
jl
xchg
ret
add
inc
test
outsl
and
push
dec
in
ds
out
stos
sti
imul
sbb
or
insb
bound
iret
rcll
add
xchg
inc
mov
stos
jl
mov
dec
mov
sub
in
or
mov
fnsave
sti
mov
cmpsb
mov
clc
out
mov
pop
js
das
inc
jb
lahf
icebp
inc
adc
pop
ret
fisubs
mov
test
add
lcall
das
push
xchg
add
aaa
cmp
lret
mov
or
and
mov
andb
or
cmp
xchg
iret
mov
or
imul
and
and
push
mov
movb
xlat
jp
sahf
push
add
fsubr
leave
and
jl
mov
mov
idiv
xchg
and
adc
in
je
pop
adc
fldlg2
daa
in
or
mov
add
in
mov
sbb
in
and
dec
repz
jo
cmpsl
repz
test
cltd
xchg
fidivrs
xchg
fmull
adc
fbld
inc
loop
leave
sbb
fidivs
aas
movsb
and
pop
and
dec
or
pop
add
xchg
cmp
mov
incb
sub
mov
int3
call
ljmp
fmuls
cmp
nop
lret
mov
lcall
sbb
and
sti
mov
stos
mov
rol
push
das
outsb
adc
into
out
nop
rol
aaa
push
xor
sub
or
cmp
in
xchg
leave
shll
pushf
cmp
movsl
push
cltd
xorb
mov
dec
xchg
sbb
xorl
push
sti
cmp
adc
or
into
mov
or
add
push
and
or
or
sar
jg
insb
les
popa
inc
cmpsl
sub
xor
shll
mov
ds
leave
mov
cmp
sub
popa
mov
add
sbb
mov
insl
enter
fcoms
mov
dec
ja
mov
lods
jns
cmc
dec
or
cld
faddp
enter
insb
int
or
push
loope
imul
stc
int3
subb
push
out
gs
std
lods
mov
and
add
stos
std
lods
nop
fmul
addr16
mov
xor
push
cld
dec
mov
fldl
int
sbb
adc
aam
leave
and
adc
cmp
jmp
data16
add
ret
stos
push
push
adc
xchg
adc
lock
xchg
xchg
jle
ret
push
xchg
pushf
cwtl
out
popf
push
out
mov
dec
push
pusha
jle
mov
daa
lret
mov
add
test
push
insl
iret
sarb
cmpsl
dec
push
andb
insb
xchg
mov
xor
cli
dec
fisubrs
fidivs
inc
adc
idivb
adcb
imul
adc
lea
cmpsb
fs
add
sbb
setb
cmp
cmc
jbe
stc
cmc
test
add
dec
aam
xor
add
fmuls
aad
popf
mov
stc
shl
fisttps
mov
loop
fisubs
int3
push
jnp
jbe
clc
add
mov
dec
xor
adc
sahf
or
stc
push
movsl
sarb
or
xchg
aas
push
push
sahf
xor
pop
std
sub
cwtl
sbb
cmp
cmp
arpl
pop
push
movsl
test
mov
out
xor
fwait
push
js
dec
int
lock
xor
outsb
fwait
add
mov
xlat
sub
pushf
addr16
iret
push
mov
lret
add
das
scas
rol
sahf
mov
bound
insb
mov
pop
jp
push
cmp
push
imul
test
jno
or
inc
jecxz
aad
lea
mov
fdivl
dec
jae
mov
imul
push
in
dec
xor
xchg
test
cmp
and
xchg
inc
incb
fs
sbb
je
xchg
cmp
test
add
cld
adc
shll
ss
pop
out
or
cwtl
js
push
js
in
lds
or
jo
lock
cmp
lret
xchg
dec
leave
adc
insb
mov
xor
and
mov
mov
fadds
jns
push
lahf
adc
adc
lret
pop
lret
scas
data16
lods
iret
xchg
lahf
mov
icebp
insb
jo
fldl
fadd
xor
cmpsb
pop
push
add
mov
es
js
sub
xlat
sbb
cmp
dec
addr16
movsb
xor
cmpsb
dec
out
inc
dec
popf
test
inc
test
es
pusha
mov
movsl
dec
icebp
cli
outsl
pushf
adc
mov
ret
adc
adc
repz
add
lods
fucomp
xchg
xor
mov
and
lret
test
fwait
mov
fcoml
inc
cmpsl
xchg
ljmp
icebp
ja
shlb
adc
and
dec
ret
stos
mov
jne
mov
xchg
sbb
pop
lods
jbe
jb
movsb
push
iret
push
jo
pop
out
cltd
enter
jne
sbb
loope
jge
or
lret
cmp
add
xchg
mov
cwtl
sbb
scas
cmpsb
pop
or
jnp
push
jbe
jmp
mov
pop
xchg
or
dec
mov
or
das
cmp
push
push
add
aad
sti
xor
subb
loope
hlt
fdivrl
cmc
jns
mov
xor
cmpsb
popa
mov
or
cli
add
push
push
std
dec
pushf
push
push
inc
mov
mov
das
xorb
daa
mov
jl
outsb
das
mov
push
xchg
xchg
sbb
ret
xchg
lock
mov
cwtl
and
andb
xchg
repz
pop
insb
int
pushf
psrld
mov
cmp
add
jb
cmp
test
int3
add
push
push
add
movsl
hlt
mov
call
sbb
je
arpl
and
lret
mul
or
icebp
mov
loopne
ljmp
rcrl
push
out
shlb
xchg
setl
xor
pusha
clc
or
sbb
ljmp
sub
cmpsl
inc
test
dec
pushfw
fdivrp
pop
sbb
add
out
sarb
in
idiv
es
hlt
inc
enter
push
sahf
sub
pop
aaa
dec
sarb
jno
sub
negl
mov
cmp
filds
cmpb
mov
or
cmp
mov
pop
dec
xor
andb
mov
rclb
and
sub
std
inc
jmp
fstpl
sub
and
cli
push
xor
sub
negl
cmp
add
add
fucomip
popf
ljmp
lods
or
addr16
jne
jnp
addl
stos
imull
and
shll
xchg
adc
sbb
add
std
jecxz
mov
dec
jecxz
or
xor
push
pop
pop
mov
or
sbb
pop
nop
cmpsl
jmp
mov
gs
out
and
sbb
jnp
in
into
adc
jl
test
mov
add
insl
ss
lret
or
pop
jo
jno
xchg
lods
jnp
sbb
cmpsb
mov
mov
sub
jp
xor
imul
push
rcl
lahf
pop
xor
ret
mov
test
xchg
test
fdivl
js
outsl
popf
sbb
in
aas
pop
ja
sub
loop
insb
pusha
dec
mov
gs
mov
mov
js
stos
clc
inc
and
pop
jo
arpl
into
pushf
faddp
lret
jno
cld
cwtl
mov
cmp
outsb
mov
jmp
in
cmp
push
or
inc
xor
sbb
push
das
lcall
ss
das
stos
lds
mov
add
inc
in
adc
ret
cmp
and
xor
pop
fcompl
jecxz
maxps
push
mov
sti
ljmp
imul
out
dec
or
shll
cmp
push
lods
lds
fs
dec
subl
jp
cmp
add
cli
inc
test
mov
jg
push
ret
mov
mov
into
pop
inc
mov
in
lahf
lods
dec
adc
lcall
sub
xorb
pop
mov
sub
insl
sbb
jmp
fwait
add
add
in
mov
loop
sti
and
stos
lcall
clc
fdivrp
sbb
mov
aad
std
std
xorb
mov
enter
sub
xor
daa
call
add
mov
cmpsb
lds
adc
xlat
lret
loopne
ljmp
cltd
or
sbb
lcall
cmp
cmpsl
sub
pop
push
sub
push
inc
dec
push
xor
mov
xor
sbb
ret
mov
mov
call
mov
test
push
je
xorb
cmp
or
rclb
fistpl
lret
test
push
es
ret
std
sbb
jns
mov
mov
adc
dec
imul
push
insl
cmp
mov
mov
jp
inc
repnz
mov
sti
dec
mov
jae
les
inc
int
add
or
and
pop
add
pop
repz
in
mov
sti
add
aam
or
cmpsb
jmp
mov
mov
sub
out
mov
fiadds
pop
adc
out
gs
ja
push
add
and
lahf
inc
aad
mov
mov
pop
fisttpll
repz
lcall
imul
dec
aam
and
dec
insl
push
stc
mov
mov
fiadds
add
pop
stc
rcl
das
mov
sub
mov
and
push
jmp
jnp
mov
mov
insb
es
cmp
dec
call
cmp
scas
mov
imul
test
popa
clc
out
shl
xchg
mov
mov
ss
pop
jmp
push
jno
jno
loope
rcrb
push
lds
int3
sub
popa
je
iret
mov
fstpl
cmp
sbb
mov
push
and
jbe
out
xor
and
adc
dec
ljmp
and
cmp
inc
mov
push
push
jg
mov
sub
sub
and
out
push
mov
or
scas
in
cwtl
push
sub
inc
ss
add
imul
push
in
and
dec
jp
adc
add
xor
jnp
in
xlat
jb
lcall
jne
es
xchg
xchg
cmp
sbbb
push
cmc
lea
lea
push
outsl
sub
jne
mov
orb
stos
jg
fucompp
push
sub
scas
mov
aas
int3
or
lods
in
mov
pop
popa
xchg
roll
repz
sub
mov
int
sarl
cmp
popa
je
pop
add
sarb
cmp
clc
inc
cltd
xchg
mov
mov
lcall
enter
and
add
and
adc
pop
jmp
sti
push
in
xchg
sbb
inc
sub
icebp
cli
sub
hlt
pushf
adc
jle
int3
negb
rcrl
xor
inc
push
cwtl
inc
les
pop
adc
push
push
add
mov
sub
clc
and
add
xchg
cmpsb
sub
inc
cmp
sbb
or
dec
outsb
popf
or
push
inc
outsb
cmp
sbb
pop
ss
or
pop
lods
es
mov
idivl
shl
divb
xor
imul
rorl
clc
cmc
les
fmull
mov
je
cld
pop
jle
adc
pop
scas
cmpsb
mov
fdivrs
popa
loop
adc
and
in
test
jmp
mov
mov
mov
inc
jnp
ljmp
push
mov
sbb
mov
in
gs
leave
pop
sbb
adc
je
test
dec
and
andl
in
rorb
mov
dec
adc
push
rorb
scas
loope
inc
sbb
pop
push
into
divb
aaa
or
xchg
sbb
push
call
adc
fsubl
iret
xchg
jbe
loopne
dec
and
outsl
addps
int
inc
or
sbb
and
jnp
cmpl
mov
add
mov
xor
dec
shrb
push
subb
dec
adc
push
ret
pop
pop
notb
adc
mov
scas
mov
inc
mov
dec
push
insb
xlat
js
sub
dec
repz
aas
ja
sbb
sbb
testl
dec
ja
xchg
push
aad
sbb
lret
xchg
shlb
dec
rol
inc
dec
orb
cmpb
or
sahf
stc
pop
mov
xchg
insl
inc
pop
mov
dec
jg
cmpsb
rorl
sbb
mov
xchg
aaa
push
dec
xor
and
xor
in
sbb
push
sub
push
push
pop
dec
adc
sbb
cmpsb
sub
inc
and
es
add
ss
fwait
and
bound
repnz
and
sub
shrl
jge
xchg
mov
dec
jno
fisubrl
adc
in
je
add
sbb
pop
test
jne
fldz
cli
idivl
lods
sub
push
jl
test
push
push
repz
lret
fadd
sbb
or
jp
push
pop
cmpsl
fcoms
inc
out
lock
mov
add
std
add
sub
jl
mov
jo
jl
inc
popa
test
in
lods
push
pop
ror
mov
testb
mov
xor
add
jns
xor
push
inc
popf
cmp
mov
sbb
popf
cs
push
leave
cmp
jl
cs
shlb
push
jae
sarb
xlat
jno
sub
lahf
mov
cmp
lcall
test
push
lcall
xchg
out
push
xchg
out
adc
pushl
stc
and
je
mov
subl
sahf
inc
nopl
mov
gs
aad
mov
leave
insl
xchg
movl
cmpsb
mov
adc
and
xchg
adc
jns
push
movsb
sub
inc
jl
add
sbb
dec
cmc
mov
add
push
aas
and
adcl
dec
fnstsw
xor
sbb
js
adc
js
mov
repnz
cmp
inc
sbb
lcall
insb
sarb
lods
shl
in
xor
adc
sbb
mov
ret
cmp
pop
xor
add
test
mov
xchg
mov
in
ljmp
add
loope
xor
in
or
and
push
fcmovne
test
jmp
lds
pusha
mov
push
sahf
repnz
jae
mov
lret
add
stc
mov
pop
mov
adc
lcall
pop
cmp
ret
cmp
xor
idivb
movsl
sub
popf
in
test
add
test
icebp
leave
hlt
lret
sbb
jbe
mov
lea
loop
or
push
jmp
xor
rolb
lods
sti
cs
cmp
add
mov
enter
imul
inc
xlat
sub
jp
xchg
xor
and
or
dec
sbb
cmp
dec
icebp
jae
cs
in
adc
pop
pusha
fdivl
sbb
stos
fcmovnb
or
testb
es
mov
nop
jl
adcb
jns
lea
xchg
lds
push
jns
or
clc
jo
push
dec
sub
popa
fdivl
jecxz
sub
jo
int
fwait
daa
pop
out
jns
outsb
push
in
shl
hlt
push
shll
jle
push
push
cmp
mov
inc
roll
ss
clc
cmp
mov
pop
loope
adc
repnz
loop
lds
icebp
pusha
pop
mov
repnz
or
sbb
sarb
or
push
enter
cmpsb
imul
shrb
out
aas
into
arpl
rcrl
inc
lret
adc
incb
loopne
inc
test
mov
std
add
mov
pop
ret
mov
push
mov
push
xchg
dec
nop
ljmp
jns
jns
jae
adc
icebp
cmp
fwait
or
jne
loop
stos
repnz
pop
push
and
test
mov
cmp
scas
pmulhw
and
in
or
in
cltd
insb
dec
sub
addb
xlat
loop
push
fsubrl
in
out
inc
mov
mov
dec
das
ljmp
in
enter
test
mov
imul
fsubl
jne
in
inc
adc
inc
out
mov
lcall
fcoms
test
mov
repz
push
mov
insl
pop
aaa
sbb
test
dec
mov
sti
fmul
xchg
xor
sub
push
cmp
jnp
ja
rcll
cmp
pop
push
jbe
jge
dec
sub
int
mov
push
shrl
jmp
xor
pop
fwait
js
push
scas
and
xor
jge
movsb
dec
aad
loope
push
and
leave
aam
push
and
pop
cmc
jecxz
lock
sub
scas
sti
mov
cltd
add
jbe
sbb
lea
or
xchg
sbb
notb
dec
loop
arpl
mov
mov
mov
dec
xchg
jb
cmc
js
push
movsl
hlt
adc
jo
lahf
sub
xchg
xlat
into
clc
hlt
ja
je
clc
cwtl
enter
rcl
push
mov
cs
sti
push
push
mov
push
mov
scas
inc
in
adc
xor
mov
inc
sarb
mov
pusha
lods
js
daa
mov
daa
les
sub
je
sbb
xchg
in
xlat
mov
push
aas
jmp
add
aad
lret
add
dec
jg
mov
mov
push
cmp
push
lock
shrl
mov
fwait
lahf
loop
orb
or
mov
cmp
add
outsl
add
adc
cmp
mov
push
in
divb
cmp
mov
adc
loop
dec
mov
ret
ret
jnp
cmpsl
adc
inc
cli
inc
inc
adc
or
and
sbb
insb
mov
adc
cs
jo
sti
repnz
xchg
push
ficoml
addr16
pusha
fsubl
sbb
orl
andl
inc
lods
test
in
pop
ds
mov
pusha
push
movb
sub
dec
gs
in
rclb
stos
mov
icebp
push
out
pop
ljmp
ja
ds
jo
les
or
xchg
cmp
ja
mov
jno
push
ss
test
pop
jle
test
xchg
dec
insl
pop
mov
mov
or
jne
pop
outsl
push
test
int
pop
mov
xchg
cmp
mov
mov
int3
icebp
xchg
ret
test
sub
sahf
cmc
jne
mov
lods
mov
or
dec
mov
jbe
jne
pop
mov
or
sbb
mov
loopne
push
js
scas
mov
inc
mov
dec
call
in
dec
ret
and
rclb
jecxz
jecxz
fisubl
pop
xchg
repz
sarb
icebp
hlt
aad
or
xchg
sahf
xor
mov
dec
sbb
pop
inc
xchg
ljmp
mov
dec
int3
icebp
inc
mov
sub
dec
push
dec
lock
jmp
jbe
mov
inc
xor
sub
cld
cmc
pop
sbb
xchg
aam
popf
push
dec
dec
fs
mov
stos
sahf
mov
xchg
xchg
cli
cwtl
les
rol
pop
pop
mov
out
iret
in
cmp
test
dec
cld
addr16
fnstcw
loop
xchg
and
imul
jmp
fnsave
pop
mov
push
cld
repnz
add
adc
insl
mov
imul
in
cmp
sub
ret
mov
sub
outsl
cli
shlb
aam
rorl
hlt
push
cwtl
jb
xor
inc
adc
push
or
ss
push
sub
aad
lahf
iret
mov
inc
inc
fdivrs
mov
ret
enter
pushf
dec
pop
inc
not
fcmovnu
notb
sub
call
add
leave
adc
sbb
mov
and
lea
daa
imul
xor
clc
xchg
mov
insb
push
jo
pop
adc
xchg
sub
xchg
test
icebp
jae
fcom
fwait
ja
push
negl
test
mov
inc
inc
cmp
xchg
scas
popa
pop
sub
push
mov
out
jl
roll
inc
xchg
fnstsw
andb
inc
pop
out
mov
add
imul
call
xchg
add
xor
int
jbe
and
lret
and
clc
call
insb
jmp
sbb
xor
lock
hlt
sub
push
cmc
repz
cmpsl
sbb
xchg
mov
pop
jp
shlb
mov
pop
and
jb
lahf
mov
jnp
and
push
jne
ss
add
jne
jge
mov
pop
shll
push
cmpsl
in
fnstenv
dec
mov
cmp
push
outsb
push
xor
hlt
int3
loop
sub
out
pop
sahf
sub
movsb
xchg
and
jo
jle
retw
pop
dec
adc
repz
xor
sbb
movsl
push
xchg
loop
repnz
adc
dec
push
idivb
mov
fst
adc
cltd
jae
iretw
mov
cmpsb
test
xor
dec
repnz
inc
xor
mov
daa
sbb
mov
sub
cmpsb
jns
mov
xchg
add
mov
mov
movsl
decl
xor
add
jmp
fucomi
mov
mov
pop
jno
push
test
or
arpl
sub
cmp
mov
jg
clc
jo
adc
xchg
clc
rolb
sbb
sbb
dec
xchg
sbb
cmp
sub
mov
or
mov
ja
push
aas
mov
test
sahf
shr
inc
or
push
mov
lret
add
adc
scas
add
pop
xchg
scas
xchg
pop
xor
sub
fs
dec
shrl
mov
loop
mov
inc
dec
sbb
lret
es
popf
inc
addl
mov
mov
jo
inc
xchg
push
cltd
ds
pop
call
lahf
push
xchg
cs
pop
scas
jl
jbe
jmp
cli
insb
and
les
pop
test
insb
loope
loope
push
pop
aas
mov
jns
and
sub
pop
mov
push
stos
std
inc
insl
mov
mov
jnp
mov
push
filds
test
or
xchg
push
popl
push
pop
sbb
cmpsb
adc
int3
pop
leave
xchg
out
jnp
jecxz
repnz
and
xchg
mov
or
cld
addl
cwtl
sbbl
arpl
je
cwtl
rolb
pop
fistps
sub
mov
sbb
pop
and
mov
inc
insl
pop
mov
daa
mov
js
je
cmpsb
mov
adc
dec
ds
mov
sub
mov
mov
std
js
adc
cmpsl
mov
rcl
dec
sbb
or
daa
or
add
out
mov
cmp
cmp
insl
fwait
mov
xchg
pop
push
ja
mov
scas
movsb
cli
inc
in
or
cli
mov
in
scas
gs
pop
arpl
sub
fildll
ficompl
std
add
and
inc
cmp
pop
ret
fadd
cmp
dec
gs
gs
and
insl
arpl
les
out
xchg
outsl
xor
adc
add
mov
or
mov
cli
mov
mov
arpl
mov
sbb
cmp
push
std
fistps
push
iret
xchg
dec
insl
js
aaa
sub
cld
incb
add
stos
jp
lcall
xchg
popa
cmpsb
jbe
loope
lds
sub
mov
jle
popf
push
pushw
push
pop
lods
push
jle
inc
cmc
mov
outsl
mov
pop
sub
in
adc
adc
js
cmp
imul
sbb
pop
add
movlps
or
test
inc
push
lea
xor
inc
gs
cmp
dec
sbb
enter
cld
lret
out
stc
test
mov
sub
icebp
or
loope
out
enter
pushf
pop
adcl
fxch
subl
jecxz
push
je
ret
adc
nop
xlat
shlb
mov
fistpl
jp
pop
dec
jge
and
popf
repnz
and
xchg
lret
and
add
lds
cmpsl
and
stc
cmp
add
arpl
jle
mov
sbb
getsec
adc
out
rclb
dec
scas
lret
loop
out
into
or
xchg
jns
mov
nop
inc
gs
mov
sbb
add
leave
cmp
mov
sahf
outsl
pop
mov
jne
jg
subb
and
or
push
adc
inc
sbb
inc
sub
sub
or
add
fmulp
pop
enter
popf
fcompl
ss
jg
in
inc
stc
jnp
fdivrl
inc
mov
mov
lcall
in
imul
roll
outsb
loop
and
mov
cmp
mov
jge
and
rcll
aas
xlat
jae
jne
sbb
push
pop
cmp
stos
sahf
cmp
mov
shrl
leave
and
pop
push
xchg
jmp
ret
icebp
in
mov
jnp
adc
sti
and
test
push
shrl
stos
inc
stc
cltd
push
jae
sbb
cwtl
xchg
js
imul
and
dec
mov
fldt
lret
inc
stos
iret
movsl
popa
hlt
inc
flds
jp
cli
lock
loopne
out
sti
mov
jae
scas
jecxz
mov
imull
mov
loop
push
lcall
cmp
cmp
pop
push
mov
test
cmp
addr16
shll
xor
and
mov
push
insl
jbe
jo
imul
cltd
nop
xchg
flds
clc
sbb
jno
mov
push
insb
lcall
mov
pop
xchg
mov
cmpsb
adc
test
nop
xchg
xlat
cmpsb
iret
xchg
lock
cmp
hlt
popa
dec
xchg
hlt
inc
mov
pop
mov
push
rcr
push
data16
scas
imul
in
add
jae
lock
and
mov
fld
inc
mov
int
and
sub
sbb
adcb
xor
mov
xchg
xor
fisubs
fsubp
xchg
dec
rorl
sti
in
lcall
lret
xor
stos
sub
into
rorl
push
popf
or
pop
xchg
outsb
fstl
nop
xchg
and
mov
inc
aas
arpl
arpl
subl
repnz
lahf
ficomps
inc
lahf
arpl
ds
mov
mov
or
xchg
rcll
lahf
imul
lds
jmp
add
aaa
push
les
iret
jno
hlt
outsb
jge
add
dec
mov
arpl
loop
ja
loopne
dec
mov
push
imul
fdivl
xor
fcmovu
xchg
cmpsl
inc
pop
es
lret
cmp
inc
in
pop
mull
jecxz
jno
aam
dec
cs
notl
aaa
sbb
push
pop
push
out
outsl
mov
aam
xor
cmc
push
xchg
cmpsl
sarb
sbb
cmc
cli
popf
pop
jle
lea
adc
stos
xchg
test
je
mov
cs
and
ds
mov
sbb
jbe
popa
out
xchg
jmp
je
sbb
rcr
push
lods
std
add
out
jmp
cmpsb
dec
dec
mov
aas
bound
mov
jmp
rolb
xlat
sti
sbb
aad
inc
mov
lods
ljmp
mov
jne
cmp
outsl
xor
xchg
out
addr16
cmc
xchg
sub
pusha
or
cld
adc
mov
mov
insb
nop
inc
push
daa
nop
jno
aad
mov
jae
icebp
arpl
xchg
mov
fwait
or
jb
push
lahf
clc
int
xchg
aas
stos
iret
lds
psrlq
aaa
ja
adc
fadds
call
xchg
or
push
mov
lods
icebp
dec
sbb
and
xchg
cltd
aas
inc
dec
fs
ds
inc
lock
in
fnsave
bound
cmpl
mov
jb
sub
cmpsb
add
mov
xlat
ret
jmp
push
sbb
loope
mov
jno
sbb
loopne
loope
mov
xorps
sbbb
mov
or
mov
push
dec
jbe
cld
repnz
ficomps
add
sbb
mov
enter
push
pop
in
insw
cmpsl
or
push
iret
mov
mov
push
into
push
ret
scas
push
and
fs
lret
ljmp
push
add
mov
inc
mov
sti
push
xor
stc
fmulp
nop
adc
js,pn
mov
int3
sub
or
mov
xchg
ret
jnp
je
imul
jg
push
jb
mull
out
jb
insb
fidivl
dec
sbb
add
jg
inc
inc
add
pop
adc
outsl
cmp
dec
jge
in
arpl
adc
andl
out
out
cs
xchg
sahf
mov
push
les
mov
jae
xor
mov
in
mov
adc
push
movsb
mov
in
hlt
cli
cmp
sbb
int3
jae
sbb
push
das
lds
fcmovnb
xchg
outsb
jle
daa
fldl
xor
dec
testb
arpl
jmp
mov
lds
pop
clc
jl
aaa
fs
lods
mov
dec
rcrl
and
lds
inc
pop
dec
ljmp
icebp
ds
mov
not
lods
pop
or
sub
into
popa
adc
xlat
inc
push
cmc
mov
add
jo
jmp
mov
sti
arpl
stos
xchg
sbb
mov
aam
xchg
sub
dec
cmovle
adc
mov
xor
in
rcr
sbb
dec
inc
in
push
sbb
xor
push
movsb
das
jg
sbb
push
and
pop
dec
push
fucom
inc
mov
test
call
mov
sbb
clc
xchg
fiaddl
ret
jo
mov
adc
add
xchg
sbb
mov
inc
or
movsb
in
sbb
xchg
push
hlt
and
or
mov
pop
inc
insb
jnp
fwait
loope
push
mov
addr16
mov
ljmp
fnstenv
nop
sub
notl
inc
xchg
and
cli
mov
adc
movsb
mov
mov
int3
imul
inc
mov
sub
sub
push
sbb
or
js
adc
repnz
imul
int
mov
jge
inc
cld
imul
jmp
and
mov
cmpl
lea
and
xchg
into
pop
aad
leave
leave
sbb
iret
nop
mov
int
pop
mov
mov
scas
mov
inc
mov
jo
and
fwait
dec
rcl
jb
ss
mov
mov
fisubs
or
loop
rcl
xchg
js
icebp
cmpsb
jl
pop
or
into
bnd
mov
mov
inc
test
aas
push
mov
cld
lret
and
xor
std
pop
or
ret
aad
rcll
mov
adc
jmp
ss
int
push
xlat
adc
insl
ss
insl
sbb
jg
lret
loop
xchg
add
mov
adc
jo
and
aas
test
add
and
js
xchg
addr16
jno
or
in
cmc
into
cmpb
pop
fs
nop
pop
push
xchg
imul
and
into
int3
dec
stc
dec
sbb
inc
iret
fnstsw
std
xor
mov
ss
adc
filds
fmull
cmp
push
int
lret
mov
push
or
push
inc
mov
sub
adc
adc
cmp
popf
cli
jp
xor
sarl
in
popf
jns,pt
push
dec
stos
and
add
fsts
or
mov
movsl
mov
sub
xchg
xchg
test
loop
mov
pop
fnstenv
test
sub
adc
pop
sbb
cmpsb
mov
and
addr16
ret
insl
les
in
je
xlat
stc
iret
cwtl
rcrl
jae
loope
pop
aaa
test
sbb
pusha
xor
out
xor
das
mov
fisttpll
xchg
sarl
testb
push
arpl
mov
inc
adc
sub
inc
add
ljmp
nop
mov
jne
int3
cmp
and
push
sbb
xor
ljmp
adc
mov
dec
pop
cmp
inc
dec
movsl
xchg
cmc
enter
dec
loop
jl
fnstsw
add
cmp
and
push
mov
sbbl
stos
inc
mov
cmp
jae
arpl
cmp
sub
daa
movsl
and
insl
cwtl
lea
mov
xchg
stos
adc
loope
pop
adc
push
pusha
jg
dec
push
fs
add
jp
daa
push
js
into
stc
test
jb
mov
stc
xor
imul
pop
imul
push
stos
xchg
inc
cmp
mov
out
sbb
sub
or
bound
xchg
push
jmp
cmp
dec
movl
cmp
jnp
add
xor
add
xchg
sub
inc
rcr
mov
sbb
cmp
enter
imul
das
ljmp
adc
test
inc
nop
cmp
pushf
ret
in
jp
xchg
and
mov
popa
or
xorb
adc
cltd
jmp
pusha
je
insl
sub
mov
aas
popa
mov
or
scas
imul
mov
jbe
lock
aad
pop
lock
icebp
and
cmp
addr16
cmc
and
adc
test
xchg
push
mov
mov
sti
cmp
and
lods
xchg
pop
adc
out
inc
dec
scas
ret
aaa
fildll
int
pop
cmpsl
xlat
imul
stos
or
xor
jo
clc
pop
insb
xor
cwtl
fildll
ljmp
mov
adc
scas
mov
mov
arpl
push
mov
dec
fmulp
fnstenv
mov
lods
cli
dec
call
pushf
ret
jl
mov
xlat
mov
fsqrt
sahf
and
mov
adc
lea
sbb
dec
mov
and
enter
test
ljmp
push
scas
xlat
cmp
cs
nop
rolb
sbb
inc
push
push
mov
mov
push
lods
mov
dec
pop
or
mov
movsl
mov
aad
and
push
lods
jp
mov
insl
xchg
js
dec
sbb
inc
inc
cmpsb
int3
scas
cmp
test
data16
sub
sbb
sbb
int3
add
imul
jbe
jne
outsb
mov
cld
mov
pop
add
mov
mov
mov
stos
pushf
cmp
fidivrs
cmpl
push
lods
in
jecxz
push
aad
ljmp
jle
fisubrl
sbb
int3
sbb
xor
mov
mov
test
stc
je
and
mov
lcall
ljmp
js
out
and
in
mov
or
loope
scas
sbb
or
mov
bound
aas
or
adc
adc
mov
arpl
cltd
ds
ljmp
in
icebp
sti
in
or
xor
scas
repz
xchg
cmp
add
stos
andb
push
pop
test
mov
sbb
into
sbb
int
mov
jns
fisubl
mov
out
push
stos
arpl
sub
mov
pop
lea
add
addr16
aam
mov
dec
xchg
xchg
pop
out
je
ja
pop
sub
fbstp
push
cmp
mov
das
mov
lcall
fiadds
push
dec
ss
mov
push
stos
inc
sub
stc
jl
adc
add
and
dec
pop
data16
in
icebp
pop
cli
fcmovnb
push
int3
jae,pt
inc
testb
mov
mov
sarb
sbb
xchg
loopne
shr
loopne
mov
cmp
lds
aam
aaa
call
cld
mov
xchg
rol
test
test
sbb
mov
imulb
and
xor
mov
cmp
sbb
hlt
jecxz
out
mov
cltd
clc
sbb
xor
divb
icebp
repnz
pop
mov
sub
mov
mov
push
push
and
lds
call
or
je
test
mov
js
rcrl
cmpsl
fcmovb
negl
inc
mov
int
lds
pop
inc
outsb
imul
movsl
js
loop
sbb
jnp
push
stos
mov
inc
outsb
loopne
jae
mov
push
cli
jbe
dec
mov
stos
cmp
jnp
jp
and
leave
inc
jns
sbb
xchg
in
or
mov
test
inc
mov
out
jno
jae
add
push
jne
sub
mov
and
movsl
push
test
ja
fisttpll
push
sbb
jns
lret
pop
sub
repnz
pop
mov
sbb
push
mov
mov
jns
sbb
repz
lret
cmp
addr16
out
fwait
push
mov
push
and
or
fmuls
dec
test
jne
xchg
xchg
push
insl
or
ret
ja
mov
sub
inc
les
aam
adc
dec
sub
inc
ret
sub
sub
int
out
fucomi
adc
dec
out
cltd
sbb
sbb
mov
and
repz
sar
add
iret
xchg
push
cmpsl
popf
movl
je
out
push
mov
pop
xor
fwait
les
or
clc
sbb
jmp
daa
fcom
push
icebp
dec
stc
fimull
xor
mov
lock
ret
jbe
daa
pop
stos
push
insb
fdivrl
loopne
es
leave
pop
cwtl
xor
mov
arpl
imul
xor
adc
mov
iret
xchg
stos
add
mov
mov
in
push
adc
mov
scas
mov
xor
jb
bound
cs
push
mov
adc
jmp
dec
rorl
sub
ret
push
mov
add
mov
mov
pop
not
adc
inc
jo
lods
mov
notb
dec
sbb
push
jg
xchg
fsqrt
inc
dec
sbb
inc
sbb
into
mov
movsb
popa
test
mov
push
in
adc
cmp
inc
bound
jno
les
xor
mul
xor
fcoml
mov
dec
and
and
into
mov
and
mov
and
jmp
adc
imul
subb
jmp
subl
inc
iret
lds
test
pop
out
popa
add
add
pop
adc
lds
cld
cmp
xor
jo
repnz
push
cli
mov
xor
cmp
inc
jle
mov
adc
mov
insb
nop
ja
xor
mov
mov
sub
or
xchg
iret
add
test
in
sbb
mov
daa
pop
repnz
loop
lock
movsb
xor
les
jg
jl
lods
cmp
aaa
enter
fisttpll
push
nop
pop
cmp
lock
flds
adc
jge
jno
and
lret
xor
test
inc
push
push
ret
ja
data16
shrb
or
lret
iret
imul
push
lea
ds
icebp
movsl
mov
push
je
add
je
mov
sub
imul
leave
cmp
sub
ljmp
mov
lock
gs
pop
sbb
sbb
popf
push
stos
sbb
mov
aad
xor
or
jmp
push
fstpl
pop
ljmp
aam
dec
cmp
sbb
cwtl
insl
sbb
shr
roll
xchg
call
and
pop
adc
cmpsl
jns
pop
out
xchg
test
pop
cmp
in
outsl
or
adc
lods
jae
mov
push
js
or
push
cmp
xchg
repnz
cwtl
ljmp
aas
sub
jl
sbb
pop
mov
mov
xchg
push
xor
popa
es
mov
jmp
rep
mov
adc
in
cmp
or
dec
cmpsl
pop
fwait
cmp
cmp
mov
push
mov
sahf
sbb
mov
aam
pop
daa
in
pop
hlt
rcrb
ljmp
jmp
rorl
jbe
push
mov
je
xchg
push
jecxz
push
jns
leave
push
fidivs
jo
addb
mov
jp
jmp
test
cmpsb
jae
fwait
jbe
cmp
fiaddl
aas
mov
sbb
ret
jmp
lds
dec
ret
les
testl
jl
test
loop
es
inc
daa
out
dec
lahf
popf
mov
pop
jmp
adc
jecxz
test
jle
jecxz
in
pop
sub
out
js
lcall
add
push
mov
es
jo
xor
pop
js
mov
fsubs
aas
fisttpl
in
out
and
push
lods
mov
daa
ljmp
or
xchg
movsl
call
movsl
repz
sahf
xchg
mov
mov
fcomip
aaa
sub
lahf
add
cmp
aaa
icebp
fsubrp
out
push
mov
dec
jne
clc
icebp
pusha
mov
inc
fsts
rcll
mov
push
add
sbb
rorl
or
stos
pop
or
inc
mov
sbb
fsubr
call
mov
movsl
mov
adc
dec
and
adc
sub
mov
ja
pop
pop
mov
fwait
mov
xor
and
adc
movsb
xor
pop
add
xchg
cwtl
es
mov
inc
jl
mov
pop
icebp
lahf
leave
push
movsl
fwait
ds
aad
or
xorb
les
fistpll
inc
xchg
fisubs
roll
cld
push
xor
leave
dec
icebp
popa
push
dec
loopne
add
rcll
mov
and
divps
outsl
cmpsb
scas
adc
aas
shlb
pusha
rcrl
nop
inc
and
push
pop
in
xor
mov
sbb
add
loopne
repz
jne
mov
in
imulb
mov
dec
loopne
jne
push
icebp
leave
push
inc
repnz
int3
mov
pop
lret
mov
sub
mov
mov
mov
cli
sub
test
lods
xorl
adc
dec
xchg
enter
push
cltd
add
or
test
call
idiv
bound
jge
push
push
arpl
mov
stos
adc
xor
add
mov
mov
std
adc
ss
sahf
mov
xchg
lock
mov
jg
std
cmp
fstps
jae
int3
js
fildl
jle
xor
mov
mov
fwait
jmp
cmp
pop
pop
ret
sub
add
jae
add
mov
outsb
fisubrs
mov
jp
dec
rol
insl
loopne
mov
jne
ss
jge
rcl
popa
dec
movsb
lgdtl
mov
jns
push
jl
sub
data16
dec
xchg
pop
fstpt
jb
or
pop
mov
test
inc
mov
cmp
mov
test
test
pop
shlb
stos
dec
mov
xor
jae
mov
xorb
imull
mov
cltd
stos
test
and
push
sbb
push
cmp
sahf
or
in
sub
and
shll
pusha
mov
or
ss
mov
jge
sbb
add
dec
mov
push
loope
dec
test
adc
mov
inc
pushf
lock
pop
test
mov
dec
dec
insl
sub
xchg
jno
fistpl
adc
and
icebp
inc
mov
xchg
pop
aad
adcb
add
imulb
mov
pop
or
aad
faddl
jle
dec
xchg
xchg
adc
in
into
insl
jnp
xor
pop
mov
mov
add
inc
inc
and
dec
jge
push
xchg
xchg
out
cmp
mov
rcr
leave
loop
mov
and
out
int3
pop
movsb
cmp
xchg
lods
js
mov
insb
pushf
sti
and
push
xchg
push
mov
push
stos
mov
inc
out
jns
and
outsb
cmp
ficomps
pusha
or
pop
out
addb
shl
jmp
xchg
enter
mov
xchg
dec
push
lret
inc
mov
aaa
inc
shl
and
scas
push
nop
repz
aad
lods
cwtl
in
loope
mov
lahf
mov
cwtl
in
pop
sub
mov
lods
push
int3
mov
add
and
pop
push
popl
jmp
out
in
in
int3
data16
jo
push
and
pop
mov
jae
mov
stos
xor
in
pop
push
lahf
lcall
or
mov
pop
ja
xor
lods
popa
dec
inc
dec
sub
sbb
jb
es
sbb
xor
out
ret
mov
ljmp
cmp
outsl
jno
outsb
xor
sbb
aaa
or
pop
mov
rorb
hlt
sti
push
cmpsl
mov
fadds
push
and
pushf
inc
jne
sbbb
rcr
mov
dec
cmp
cmp
lds
push
das
pusha
adc
repnz
or
dec
mov
call
popf
nop
stos
xchg
mov
add
push
or
popf
cmp
or
push
rcll
sub
ja
cmp
mov
imul
in
sbb
notb
inc
lea
jp
pop
adc
sbb
in
lcall
hlt
jmp
test
stos
sub
or
roll
mov
rorl
xor
pop
xchg
ss
push
addr16
loopne
mov
cmp
pop
pop
and
sub
push
mov
inc
add
bound
xor
cltd
xchg
data16
cmpsl
cmp
sti
mov
push
into
or
add
inc
dec
cmp
sub
cmp
fs
and
mov
ja
or
jge
pop
out
and
clc
pop
rcrb
add
pop
fxch
lods
cmp
shlb
test
jno
xchg
mov
pop
daa
ret
push
ja
pusha
cmpsl
in
sub
fs
pop
repz
addr16
mov
sub
loop
mov
negb
pop
push
adc
mov
pop
add
add
popa
ret
jnp
push
xorps
test
insl
pop
jbe
and
adc
fildll
in
adc
dec
out
imul
or
inc
mov
add
test
pop
cli
sbb
outsb
push
cs
jbe
push
mov
adcb
xor
ret
inc
jmp
es
addr16
add
in
cs
or
lock
aam
push
jl
add
test
ds
push
mov
leave
mov
push
es
mov
stos
push
and
fnstsw
outsb
stc
pop
pushf
fdivrp
nop
fnstenv
fsubl
mov
in
pop
mov
dec
movsl
ror
pop
jne
fcmovnb
add
addr16
ja
aam
push
incb
add
adc
xchg
adc
or
mov
shrl
sub
xchg
loop
mov
push
inc
mov
pop
sahf
jb
push
mov
repz
lds
or
scas
lods
out
mov
mov
pop
pop
add
out
cwtl
cmp
lock
pop
add
test
dec
call
adc
lea
mov
and
movsl
leave
pop
sub
push
enter
cmpsb
mov
xchg
shrl
imul
mov
and
adc
in
adc
jo
push
adc
jge
in
pushf
add
js
ret
stos
mov
subb
and
xor
ljmp
fisubs
js
push
sub
xor
loopne
mov
out
imul
outsb
cwtl
dec
out
fs
push
xchg
pop
dec
dec
sbb
sub
mov
jnp
xchg
mov
push
pop
xchg
lcall
test
faddl
cmp
and
sti
sbb
leave
pop
inc
mov
or
jmp
fiadds
jae
push
rclb
jns
adc
movsb
aaa
pop
jbe
mov
xor
enter
jb
es
sahf
pop
fcoml
adc
mov
adc
test
pop
xchg
rorl
out
mov
push
scas
push
loop
outsl
push
aam
push
int
repnz
int3
leave
nop
cmpsl
adc
mov
cli
dec
inc
and
sarb
lcall
cmp
mov
shlb
cmp
clc
mov
xchg
es
mov
push
jne
adc
call
or
fldl
xlat
dec
cmpsl
shll
mov
add
mov
in
mov
pop
jb
xor
stos
mov
push
and
sub
clc
addr16
add
cmp
lcall
sub
push
sbb
scas
sahf
dec
clc
imul
inc
mov
dec
test
xchg
inc
mov
or
inc
mov
int
shrb
push
lcall
int3
cs
cmp
jno
dec
xchg
sub
add
add
loop
es
mov
ret
and
dec
mov
push
mov
loopne
outsl
adc
hlt
add
test
cmc
xchg
push
nop
lret
dec
jb
sbb
mov
inc
adc
xor
pop
rclb
ret
bound
mov
enter
dec
and
push
insb
ja
into
inc
mov
pushf
out
outsl
scas
jl
ret
mov
loop
int
lds
in
sub
movsb
and
mov
cmp
adc
push
stos
loopne
xor
jbe
cmpsl
dec
out
mov
ds
xor
sbb
iret
icebp
add
scas
std
add
stos
and
cltd
xchg
fisttpl
push
mov
ljmp
loope
out
add
cltd
ds
ljmp
std
loope
sti
mov
scas
sub
dec
cmp
jb
xchg
jns
stc
sub
ret
pop
lds
push
iret
inc
xchg
jge
add
jmp
adc
outsl
shlb
or
movsl
aaa
add
fs
dec
xor
fnsave
sbb
add
add
cmp
mov
daa
fs
popf
ficoml
ja
jno
les
rcll
sbb
and
push
rol
out
je
movsb
add
fstl
inc
ss
iret
repnz
jmp
jnp
sub
push
mov
pop
mov
fmull
lods
sbb
jmp
dec
mov
xchg
cmp
ljmp
lods
imul
jmp
inc
std
nop
mov
fcom
xchg
cs
mov
imul
popf
mov
pop
rolb
mov
in
mov
ret
ror
in
push
stos
call
sarb
out
and
repnz
add
dec
sub
shlb
or
sub
mov
fisubs
push
das
and
rcl
lret
dec
aas
mov
outsl
xor
inc
fidivrl
not
lahf
ficoms
hlt
test
and
mov
pusha
sbb
stc
mov
flds
in
add
xchg
les
sti
inc
xchg
mov
lods
test
jbe
pop
xor
jg
xchg
dec
inc
outsb
enter
scas
outsl
test
dec
sahf
inc
jmp
shl
add
fs
inc
or
js
fwait
psubsb
paddw
jge
aam
inc
lret
cmp
jns
icebp
ret
lock
rol
or
jle
in
mov
insb
xchg
adc
sub
pop
mov
rcrb
add
imulb
dec
mov
jbe
xor
shrb
mov
mov
es
mov
in
mov
out
sub
mov
cmp
mov
pop
inc
mov
sub
jecxz
out
cmp
ds
jo
inc
insl
fists
mov
mov
mov
outsl
xchg
js
int
push
sbb
pop
pop
cmpsb
loopnew
dec
je
rcpps
movsl
mov
inc
outsb
mov
inc
dec
ljmp
mov
xor
outsb
mov
mov
mov
add
cmp
and
cmp
cmp
lcall
jecxz
jb
lret
fists
sti
in
pop
test
repz
lcall
imul
push
dec
pusha
mov
jno
leave
sub
les
add
mov
sbb
js
cmpsb
out
fs
xlat
aam
push
pop
push
gs
or
jns
inc
lret
dec
sub
shl
sub
sbb
and
mov
in
out
pop
mov
es
mov
push
pop
outsb
leave
int3
and
int3
mov
and
mov
int
lods
xor
push
es
pop
fsubp
add
adc
pushf
lahf
data16
jo
cld
lret
inc
fldcw
cmp
sbb
add
mov
mov
xchg
push
pop
mov
add
xor
mov
lock
cmp
sub
outsl
mov
ds
cld
and
cld
test
fildll
outsb
inc
sbb
jns
add
xor
mov
out
into
adc
xor
push
mov
loope
pop
mov
idivl
mov
mov
repz
or
fmuls
adcb
push
aad
mull
add
in
mov
xchg
shlb
inc
mov
mov
fdivrp
ds
in
lods
dec
pop
jmp
pop
or
lods
roll
js
cmp
xchg
sar
dec
stos
push
repnz
dec
dec
lock
std
cmp
push
push
xor
hlt
and
aad
scas
movsb
popf
orl
ja
mov
mov
mov
push
inc
cmp
mov
sub
pop
in
cmp
jmp
mov
pop
out
test
inc
popf
mov
js
dec
jl
or
aam
and
jle
lods
jae
loop
xor
add
repnz
mov
std
jl
sub
or
shll
jns
and
sbb
testb
pop
cmp
fwait
aaa
cs
or
in
movsl
pop
int
loop
cs
dec
cmc
int3
imul
es
stos
dec
add
call
add
jne
repz
stos
cli
jno
cmc
scas
insl
int
xor
out
mov
stc
adc
push
or
mov
pop
lcall
repnz
jp
jmp
out
cwtl
lods
movsb
push
cmp
cmpsb
ret
mov
outsl
mov
daa
jmp
mov
xchg
mov
adc
sub
mov
repnz
lahf
inc
cwtl
ret
leave
in
nop
cmp
loope
fidivl
sub
mov
sti
out
mov
scas
xor
popf
inc
mov
add
stos
test
pop
inc
sub
inc
sti
dec
aaa
jne
arpl
sub
sbb
clc
icebp
call
js
into
mov
push
push
mov
and
xchg
dec
pop
jb
mull
jbe
mov
outsl
das
and
cli
sub
add
or
xor
xor
sbb
mov
xor
les
sti
lea
xor
sbb
adc
inc
sti
mov
or
loopne
les
jl
or
arpl
mov
lods
in
rcrl
jecxz
lds
popf
xorl
pop
and
in
adc
sbb
mov
push
incb
insb
arpl
push
mov
push
cmpl
sbb
sub
mov
sbb
pop
clc
call
in
cltd
inc
stos
pop
jne
push
std
push
loope
es
pop
fwait
jno
movsl
add
stc
mov
inc
xor
mov
jns
cld
aad
clc
lods
inc
test
mov
popf
sub
jno
xor
hlt
cmpsb
lret
ds
adc
dec
sbb
loopne
jmp
js
push
sahf
dec
sbb
add
add
jp
iret
imul
shlb
insb
cmp
lcall
inc
ret
dec
arpl
and
add
xchg
test
aas
adc
fs
les
mov
cmpsl
sahf
xchg
xchg
fwait
xchg
push
lcall
jno
sti
insb
push
fs
mov
clc
push
mov
pop
enter
adc
add
dec
loopne
nop
ret
das
loopne
pop
fs
xor
cmp
test
pop
imul
jecxz
xchg
xor
jo
scas
inc
xor
adc
sub
xchg
push
jns
shll
push
push
testl
mov
jns
sub
mov
xchg
loop
lahf
outsl
mov
mov
les
outsb
xor
sub
pop
add
subl
ret
stos
push
aas
xchg
push
test
in
icebp
test
rcll
fldt
pop
inc
leave
or
inc
arpl
subb
jns
imull
mov
add
push
sar
or
xor
and
xchg
fidivrs
jl
push
push
or
cmp
mov
cltd
mov
enter
and
pop
inc
jno
clc
pop
mov
lret
cmpl
pop
mov
pmaddwd
mov
in
movsl
xor
cmp
inc
lds
pop
arpl
ds
mov
xor
cmp
fisubs
cmp
inc
push
fstps
into
pop
fsubp
fistl
cmc
rorb
aas
sub
fbstp
loopne
arpl
stc
xchg
mov
ret
cltd
pop
fwait
mov
and
jmp
sbb
gs
fcom
lret
jge
dec
sub
pop
decb
sub
out
in
shll
push
std
aas
or
fmull
rolb
dec
mov
das
gs
mov
or
and
movsl
xor
fs
ret
bound
das
fstpt
call
jle
in
rcl
inc
sbb
aaa
lods
ret
cmp
dec
jge
mov
inc
out
fadds
fwait
xchg
push
pop
neg
xor
push
mov
lock
popf
rorl
cmpsw
cmp
mov
cmc
xor
xchg
dec
in
and
es
outsb
cmp
scas
pop
les
out
enter
outsb
cmp
push
repnz
stos
inc
aad
sub
jg
cmp
sub
mov
mov
outsb
movsb
lret
repnz
cmp
idivl
fiaddl
test
in
loope
push
js
cmp
sbb
pop
xor
cmp
imul
icebp
stc
sbb
aaa
pusha
lock
pop
into
int3
mov
ss
sub
or
lods
sahf
daa
fnstenv
jg
das
push
js
test
xlat
mov
fdivl
daa
lcall
sub
rcrb
outsb
jmp
and
imull
cmp
dec
adc
addl
loope
xchg
filds
repz
out
ds
mov
outsl
mov
jo
or
imull
test
jle
jb
iret
xchg
mov
repz
imul
or
jecxz
cmp
or
mov
das
rorl
xor
rcr
cli
mov
or
fwait
lods
lea
mov
cmpsl
or
sub
pop
cmpsl
inc
xor
loop
ja
mov
cmpsl
cmp
inc
add
sbb
push
ljmp
cmp
jecxz
in
push
in
leave
xchg
xchg
jmp
leave
roll
mov
xor
add
out
and
pop
xor
mov
sbb
mov
into
aaa
scas
pop
jge
jnp
and
push
cmp
sarl
lods
fwait
or
ret
popf
adc
cmpps
xchg
pop
mov
addr16
lock
rclb
mov
sbb
jne
movsb
or
mov
inc
fcoms
lea
sbb
movsl
or
popw
jecxz
and
dec
push
push
into
mov
add
cmp
lahf
fwait
insb
pushf
mov
adc
cmp
jge
add
mov
scas
fwait
xchg
xchg
cmp
gs
push
dec
push
outsl
and
sbb
pop
jmp
loope
aad
xlat
xor
sbb
or
push
movsb
xchg
xchg
andb
in
jmp
leave
jo
mov
sbb
in
loop
das
out
inc
fs
cld
jae
xchg
inc
mov
or
pop
ja
mov
rcrb
fsubp
cli
rcrb
sti
inc
lods
add
aas
es
pop
andb
outsl
push
daa
push
loopne
xchg
push
sbb
ss
fsubrs
push
mov
pushf
pop
mov
mov
sbb
call
dec
imul
in
iret
adc
pop
faddl
int3
divl
xor
nop
sar
fdivs
jle
ja
mov
enter
or
push
orl
sub
cmpsl
mov
lahf
nop
cmp
and
lret
rclb
mov
popf
mov
fsubrs
mov
adc
lret
pop
lods
inc
mov
cld
js
jae
jb
je
pop
movsl
add
push
das
or
lcall
movsl
mov
fcmovbe
in
and
nop
and
sbb
loopne
scas
xchg
dec
mov
stos
jne
mov
scas
push
mov
addb
fs
mov
sbb
dec
cmp
jae
pop
pop
add
add
bound
popf
jge
jmp
and
xchg
add
cmp
shlb
xchg
clc
inc
fnstcw
rcrb
mov
pop
fwait
xchg
into
inc
lds
adc
add
xchg
jb
sbb
xchg
in
mov
stos
sbb
cmp
pop
cwtl
das
sub
movsb
fdivs
push
mov
pop
outsl
mov
push
push
aas
ja
xchg
test
les
push
add
mov
pop
scas
loop
adc
xor
sbb
out
ja
jmp
and
mov
cld
test
scas
mov
jnp
sub
das
and
cli
gs
fsubrp
sahf
orl
loopne
push
cmpsb
push
daa
rolb
and
sbb
lcall
sub
maxps
imul
sahf
and
pop
repz
mov
test
xorb
call
inc
in
hlt
mov
es
daa
push
dec
rorb
sub
jp
cli
and
cmp
jno
dec
std
mov
popa
int3
into
xchg
mov
cmp
push
repnz
and
inc
jb
xor
push
stc
imul
jecxz
mov
ljmp
clc
jns
push
inc
mov
lock
sbb
and
mov
mov
adc
pop
out
sub
adc
xchg
pop
add
aam
pop
or
insb
movsl
mov
mov
jnp
out
cmpl
cld
jecxz
pop
add
mov
cld
imul
inc
jecxz
push
xchg
test
and
xchg
daa
loope
inc
test
das
push
mov
adc
cwtl
enter
fldl
imul
pushf
sbb
inc
xor
fwait
jg
nop
insl
jo
xor
int
mov
ret
xchg
int3
xor
adc
movsl
loope
push
sahf
xor
mov
cwtl
inc
ror
std
jae
lret
sub
pop
lahf
popa
jle
cld
add
into
xchg
cmpsl
jns
cmc
push
dec
lahf
jno
aam
add
aad
subl
xor
xchg
pop
sbb
inc
pop
jp
stc
dec
mov
shll
pusha
repnz
shll
test
inc
loope
clc
repnz
iret
int
dec
jg
cmp
jmp
pop
mov
mov
mov
inc
xor
pusha
jg
jne
mov
mov
jecxz
lods
inc
iret
and
or
fnstenv
jp
into
insl
jl
aam
cld
scas
dec
inc
push
xchg
or
mov
pop
lret
into
mov
hlt
scas
popf
daa
mov
push
lea
imul
add
lods
lods
inc
in
mov
test
dec
cmp
in
mov
iret
and
out
outsb
mov
stos
sti
mov
inc
shl
cmpsb
aaa
mov
xchg
xchg
cmp
cmp
fistps
sbb
xchg
in
jno
int3
stos
data16
test
mov
ficoms
mulb
sub
jl
xchg
xchg
mov
and
push
cwtl
pop
nop
push
arpl
or
cmp
xor
jns
jne
xchg
movsb
and
stos
mov
jg,pn
shld
mov
push
fildl
or
lcall
lods
push
std
jno
adcb
or
inc
mov
fstpt
sbb
push
loope
lret
xor
hlt
pushf
das
xchg
arpl
add
insl
je
push
or
sbb
mov
xor
xor
dec
dec
aam
fs
jno
movsb
aam
int3
scas
lds
pushf
mov
stos
mov
aad
jnp
inc
and
sahf
insl
sub
scas
jbe
aad
push
xchg
push
movups
fisttpl
rorl
aaa
dec
imul
lock
mov
jge
das
test
and
jo
dec
xchg
jl
push
sbb
mov
mov
pop
dec
in
mov
pop
cs
or
jp
or
pop
stc
js
xor
jl
mov
dec
in
sub
add
inc
push
mov
jecxz
pop
es
cltd
or
xlat
and
xchg
out
xchg
and
out
fs
lods
sbb
movsb
test
cmpsl
fwait
jecxz
les
ret
sbb
dec
cmc
mov
add
lods
test
cmp
mov
dec
lret
clc
dec
adc
popf
xlat
xchg
outsl
jg
gs
pop
lret
jae
cmp
ds
xrelease
mov
dec
xchg
call
sbb
subb
adc
pop
xchg
fiadds
ja
pop
je
int
and
std
xchg
int3
push
rcll
and
fldcw
shlb
and
inc
mov
add
int3
aaa
push
lcall
test
sti
arpl
bound
xchg
pop
cmc
lea
fst
jl
add
mov
cmp
and
jmp
xchg
mov
popf
outsl
push
jns
cli
fwait
jl
negb
pop
mov
mov
add
pop
jno
sub
rcl
push
js
hlt
fdiv
sub
sahf
ficompl
adc
mov
mov
loop
fsubl
or
and
ja
scas
sub
repnz
test
aaa
xor
popa
lock
outsl
rcrb
test
mov
cmpsb
mov
nop
mov
clc
push
pop
gs
add
outsl
inc
mov
fcomip
inc
ds
mov
test
test
subb
cmp
out
sub
bound
cltd
mov
shll
adc
adc
adc
xor
xor
mov
out
jecxz
in
mov
ror
sbb
fidivs
jae
push
pushf
mov
mov
cltd
shrl
lock
clc
jecxz
xor
scas
ret
xchg
test
push
and
dec
in
sub
jb
pusha
in
shll
cli
xchg
push
lea
mov
out
out
jb
lds
push
jle
xor
in
push
imul
stos
das
aas
adc
xor
mov
mov
lcall
sarl
push
inc
and
jbe
jmp
test
push
call
sarb
mov
out
push
add
test
adc
paddsw
lods
push
mov
sub
cmpsb
ja
add
lret
das
xchg
test
cmp
repz
pop
jl
cmp
std
pop
jle
xor
mov
push
lret
punpckhdq
fstpl
push
xchg
icebp
sub
sti
xchg
sbb
inc
mov
call
pop
lds
jbe
sub
shlb
adc
add
ror
jae
rorl
addr16
in
cli
mov
cmpsl
push
pop
imul
add
xor
ffreep
mov
or
mov
pusha
pusha
mov
xchg
inc
sbb
arpl
xor
push
dec
xchg
xchg
xchg
cmpsl
push
xor
test
mov
aad
jle
fxtract
mov
int3
pop
inc
push
hlt
jnp
popa
jle
jp
enter
jmp
jp
jmp
adc
push
jl
mov
mov
jb
adc
cld
xchg
pop
outsl
mov
push
rorl
adc
jle
sbbl
sbbl
adc
daa
mov
push
adc
xchg
adc
test
nop
aad
fdivrs
scas
xchg
xchg
mov
lods
mov
dec
pop
jo
fwait
inc
lods
sbb
or
or
or
sahf
scas
in
inc
and
lahf
push
push
shlb
stos
adc
ja
mov
xchg
cmp
mov
inc
iret
out
ret
mov
test
sub
and
xchg
ja
shlb
arpl
xchg
scas
imul
sar
cmp
dec
or
cld
sub
jecxz
cld
jle
repnz
adc
jb
fidivrl
xor
pop
cmpsb
mov
out
int
sub
adc
or
aas
xchg
fists
jo
lock
lcall
hlt
xor
pop
mov
sub
repnz
outsb
icebp
dec
fnsave
add
sub
in
das
sti
je
cmp
mov
out
scas
mov
lods
iret
lret
scas
pop
mov
jnp
sbb
and
pop
pop
and
jmp
mov
and
sbbb
mov
dec
and
lock
mov
shlb
orb
fidivrs
fnstcw
lds
dec
pop
xor
jp
insl
cmp
inc
lcall
xor
pop
fimull
mov
dec
xchg
push
push
lea
jle
or
test
jle
mov
and
mov
push
stos
adc
mov
stc
aas
or
xor
adc
sub
imul
mov
mov
js
dec
inc
clc
mov
sbb
imul
lea
pop
imul
mov
cmpl
xor
sub
shll
cmpsb
mov
test
add
mov
dec
xchg
add
sub
mov
ja
cmpl
add
cmp
out
into
push
int
adc
pop
test
inc
or
mov
or
shl
in
cmp
lock
movsb
xor
xchg
sbb
cmpsl
pop
inc
mov
mov
rcrb
dec
push
and
lcall
ret
cmp
loope
test
aaa
in
adc
daa
jne
nop
test
xchg
push
icebp
scas
xor
outsb
aas
mov
lods
inc
mov
nop
pushf
test
out
pop
xchg
rclb
add
sbb
or
push
xor
imul
outsb
sub
pop
sbb
ret
cmpsl
and
mov
xor
movsl
in
dec
mov
mov
or
cltd
cli
pop
movsl
cmc
in
mov
adc
dec
dec
xchg
fdivs
dec
cltd
mov
inc
shlb
cwtl
pop
ss
fists
aad
and
js
int
into
or
xchg
dec
es
lahf
add
dec
test
ret
in
cmp
jmp
hlt
outsl
rclb
xor
lahf
ror
cmp
mov
mov
stos
jg
pop
add
test
out
dec
ror
cld
jmp
stos
dec
fwait
test
lds
dec
lahf
cltd
mov
lret
inc
mov
leave
sbb
jg
jns
add
push
mov
sub
push
movsl
pop
jbe
sub
push
outsb
hlt
add
sti
xorb
fdivl
shlb
mov
and
andb
arpl
pushf
aad
and
push
xchg
mov
xchg
mov
fcoms
int
pusha
fldl
leave
scas
dec
cmp
xchg
lahf
popa
std
dec
and
into
fisubrs
inc
aas
pop
int
test
fmuls
fimull
sahf
xchg
xchg
paddw
push
push
and
jg
js
add
sub
and
movsb
mov
mov
add
xor
in
cmpsb
and
jle
xor
xchg
dec
out
mov
out
add
gs
scas
mov
gs
xor
sbb
out
mov
stc
into
lock
out
inc
or
outsb
jg
push
sbb
mov
in
ficoml
and
sub
test
imul
and
mov
rcrb
add
aad
jmp
ja
pop
pop
pop
leave
ljmp
cmc
leave
lock
mov
adc
and
jg
int3
arpl
push
ret
ss
in
fnsave
inc
pop
cmp
add
repnz
and
jae
fadds
push
inc
xchg
mov
pop
or
mov
jge
mov
mov
push
popa
mov
inc
clc
pop
push
pop
xor
add
pusha
icebp
push
das
or
nop
mov
popa
imul
cltd
pop
das
sbb
xchg
inc
sub
add
enter
xchg
cmp
dec
in
ret
jmp
and
std
shl
aam
pop
and
xor
and
daa
and
xlat
lock
jo
mov
pop
cmc
xchg
xchg
jge
fildl
js
pop
xchg
xor
inc
aaa
fldcw
add
sbb
iret
and
fistps
push
and
jnp
ljmp
int
and
add
push
push
cwtl
jnp
adcb
jl
subl
sbb
sbb
int
push
add
fdivrp
jbe
mov
insb
mov
dec
test
mov
xchg
mov
jne
inc
gs
add
leave
std
ja
sub
and
push
or
nop
popf
ljmp
cmpsb
hlt
stos
test
dec
pop
xor
das
dec
add
or
lods
cmp
jo
out
pop
ds
mov
pop
pop
cmp
push
dec
cmp
mov
inc
jo
cmp
sbb
bound
movsl
cli
push
and
sbb
mov
dec
xor
pop
mov
push
jno
aas
cs
or
sub
dec
push
add
cmpsb
fistl
cmpl
xchg
test
addr16
xor
scas
pop
loopne
in
outsl
in
nop
int3
leave
mov
pop
mov
or
push
inc
cmp
mov
mov
lods
xchg
aas
xchg
jl
lds
mov
dec
dec
and
and
aam
gs
xchg
inc
ss
insb
or
push
test
inc
mov
dec
faddl
adc
xchg
pop
mov
sub
call
or
or
xchg
out
cltd
lods
xchg
inc
sbb
inc
adc
inc
fnstenv
xchg
cmpsb
adc
lcall
jecxz
imul
dec
xchg
mov
sar
sbb
test
dec
pop
adc
inc
dec
scas
xchg
xlat
pop
sbb
jo
in
inc
outsb
mov
mov
add
popa
jne
mov
sub
outsl
mov
add
iret
in
and
in
push
mov
xor
lods
arpl
enter
and
loopne
sub
and
adc
jbe
push
push
in
inc
ds
xor
xor
xchg
stos
dec
dec
je
push
jmp
lea
mov
pop
clc
jb
fwait
loop
cmpb
cmp
add
add
scas
jmp
inc
and
repz
dec
es
sub
scas
outsl
adc
test
les
mov
sub
scas
shlb
lods
sbb
cmp
cmpsb
fsubr
pusha
lea
jbe
pop
pop
mov
bound
lods
popf
mov
mov
rorb
imul
mov
aad
push
shr
loop
adc
mov
pusha
jb
pop
pop
xor
mull
js
lahf
int
lea
aas
sub
or
lret
bound
push
add
outsl
push
dec
or
ficompl
add
mov
adcb
shrl
ret
xchg
dec
fistpll
insl
aam
int3
rcl
cwtl
bound
test
test
adc
sbb
int
das
xchg
inc
pop
push
jns
cs
pop
clc
cmovp
sbb
mov
mov
notl
insb
xchg
dec
sub
inc
leave
inc
inc
flds
mov
stc
addr16
mov
push
inc
dec
ret
aaa
xor
ficompl
cmc
xlat
push
adc
imul
adc
pop
xor
es
arpl
pop
enter
sti
cwtl
movsb
rclb
subl
ret
outsl
mov
cli
hlt
or
xlat
in
sbb
add
or
pop
adc
rcrl
xchg
lods
mov
ljmp
jecxz
sub
ja
pop
loopne
xchg
xchg
sub
cmp
dec
pushf
or
pushf
fucom
add
sbb
cld
hlt
cs
addr16
cld
mov
mov
mov
bound
mov
shlb
xor
jae
jb
rcl
add
pop
xchg
setne
mov
lods
jae
les
fidivl
mov
dec
xchg
test
xor
mov
mov
addr16
cwtl
movsl
jmp
add
ficompl
add
incl
mov
aam
aaa
sti
nop
sub
mov
sarb
in
insl
or
inc
fmuls
mov
cwtl
add
cld
cmp
push
pop
sbb
cwtl
loop
shll
and
in
testb
xchg
add
mov
sub
xor
sub
xchg
mov
pop
enter
mov
scas
mov
test
mov
inc
xchg
into
jns
mov
movsl
aas
aam
xchg
ret
pushf
cwtl
jae
in
mov
xchg
movsl
stos
ljmp
out
sub
push
dec
aaa
add
push
outsb
cmpl
mov
ret
or
test
lcall
fiadds
rcl
negl
xchg
push
add
lock
adc
push
mov
rcrb
addb
jmp
mov
push
pop
push
int3
and
adc
pop
xor
push
gs
mov
popf
add
js
dec
jmp
fxch
mov
pop
push
rorl
push
rorb
lret
ret
or
jns,pn
lds
in
mov
jo
test
mov
add
fsubrl
add
mov
mov
fadd
inc
dec
enter
movsb
out
jge
push
pop
hlt
sub
xchg
cli
les
cmp
popf
scas
aam
adc
push
sahf
xor
mov
adc
scas
cmp
xor
cwtl
mov
mov
cmp
pop
out
popf
mov
or
push
pop
test
jmp
and
int
jb
insl
and
out
sti
sahf
pop
std
lahf
aaa
sbb
stc
or
cli
jns
mov
mov
xchg
sub
jne
mov
lods
push
push
daa
ficomps
jmp
sbb
push
jb
sub
and
push
clc
push
imul
rcl
shrb
jno
js
mov
das
xor
inc
dec
cmp
mov
pop
pop
idiv
or
pop
sbb
fsubrl
cmp
xor
repnz
test
add
cmp
lahf
std
int
pushf
scas
into
das
jge
jno
xchg
dec
adc
enter
in
ja
jge
mov
imul
xor
push
mov
outsb
push
out
mov
adc
pushf
jle
addr16
frstor
mov
fcoml
inc
lret
enter
sarb
adc
hlt
pop
mov
mov
push
into
or
xchg
aas
xor
sub
rolb
imul
dec
in
lahf
lret
mov
cs
int
pop
mov
dec
out
outsb
js
int
pop
xchg
fs
lods
mov
cmp
sbb
jg
cmpsb
pop
into
mov
ret
out
inc
xchg
fnstsw
inc
cmpsb
fstps
xor
into
fs
jp
xchg
mov
sbb
jl
pop
xchg
inc
sub
out
mov
push
enter
lret
out
or
mov
push
repz
mov
stc
fwait
pop
inc
das
cld
sbb
push
add
pop
or
mov
stos
shrb
cwtl
mov
ljmp
jbe
cmp
nop
fdivs
fildll
mov
aam
test
dec
sub
jb
sub
stc
xor
rcrl
dec
shrb
cli
pop
mov
sbbb
daa
mov
frstor
and
cmp
pop
lahf
jo
or
mov
cmp
repz
sti
imul
sbb
ja
and
aam
cli
xchg
test
loop
inc
jle
xchg
lcall
cli
push
rcrl
mov
lret
or
mov
adc
push
fmuls
inc
aaa
mov
cmp
mov
lret
into
sahf
pop
add
mov
call
mov
insb
ljmp
jecxz
cmp
and
or
pusha
sarl
adc
xchg
mov
mov
push
pop
ror
fsts
decl
mov
mov
fcomp
out
out
dec
dec
jl
push
jo
xchg
xlat
xlat
data16
sbb
add
in
jge
stos
add
push
add
rcrl
mov
push
lcall
bnd
clc
mov
xorl
cmpsl
jge
out
popa
jl
aaa
cmp
jb
pop
lds
mov
enter
push
fcoml
je
pop
rolb
les
push
movsb
jbe
call
in
sub
aad
push
ds
fisubl
fidivl
js
stos
sbb
jl
jge
jp
lahf
xchg
gs
mov
ret
scas
jno
les
in
movsl
sar
jnp
and
and
adc
pop
insb
loopne
adcb
daa
aam
cmpb
ss
out
jl
rol
or
shrl
scas
cmp
rcll
in
jg
sarl
inc
inc
push
mov
arpl
mov
xor
mov
repz
sbb
mov
jl
rcrb
or
nop
mov
xchg
fwait
push
mov
jp
mov
aaa
hlt
mov
cld
repnz
aam
fs
daa
push
arpl
mov
cs
add
xchg
std
sub
cmp
sbb
aam
sarb
test
lea
mov
dec
fistpl
and
mov
lahf
pop
fistps
movsb
hlt
sub
lea
cmp
cmp
repnz
adc
cmp
imul
or
dec
jle
repnz
jns
add
andb
push
push
pop
fucomi
lahf
lds
xor
test
and
mov
mov
cld
push
adc
sbbb
rorl
fisttpl
cmp
lods
stc
pop
push
xchg
mov
push
mov
fdivrs
xor
mov
mov
sub
pusha
cmpsb
arpl
fcomp
jp
xchg
shrb
js
insb
add
hlt
jmp
cmp
fistpl
mov
sbb
push
jle
int3
fists
popf
push
inc
inc
mov
sahf
inc
mov
icebp
mov
iret
outsb
out
cltd
movsb
mov
pusha
jecxz
mov
fisttpl
loope
repz
add
clc
popa
sbb
jnp
pop
dec
sbb
int3
in
test
rorb
sub
gs
cmp
dec
dec
xchg
scas
mov
in
scas
adc
inc
aam
cltd
pop
push
sbb
test
fnsave
mov
es
fnstsw
rclb
xchg
push
mov
cld
sarl
push
xchg
mov
adc
sub
xchg
das
mov
and
and
pop
sub
sbb
sub
jle
inc
lods
cmp
cld
pop
dec
dec
shll
imul
jo
or
xchg
pop
bound
hlt
jne
imul
adc
outsl
xorb
or
mov
jl
lods
loope
lahf
and
pop
dec
test
mov
stc
movsb
call
mov
xchg
mov
lret
mov
push
scas
repz
push
gs
subl
cmpl
cli
iret
mul
xor
repnz
into
or
inc
shr
in
aam
push
inc
imul
test
fsubl
sar
cld
jno
out
movsb
push
shll
pop
pop
xchg
xchg
add
orl
repnz
sahf
cmp
xchg
mov
gs
scas
pop
movsl
arpl
xchg
xor
jge
loope
add
mov
sub
jmp
imull
nop
fprem1
inc
cmp
xor
lods
pop
jne
sub
sbb
mov
jb
ss
inc
add
xchg
xor
cmp
mov
push
test
push
out
inc
xor
or
mov
jmp
jo
and
lock
mov
dec
stos
cmc
add
dec
in
jb
mov
sub
adc
outsb
scas
ficompl
or
hlt
cmp
push
mov
sub
js
inc
mov
fidivs
aaa
rcl
in
adcb
cmpsb
and
les
rcll
out
out
lret
fwait
sbb
and
sti
mov
dec
dec
out
adcb
ret
or
lahf
das
inc
and
sub
xor
data16
call
outsl
sti
hlt
sub
js
and
clc
fcompl
or
hlt
sub
cmp
das
ss
mov
das
fcom
push
adc
pop
mov
bound
inc
repz
enter
pushf
aas
add
cli
subb
jbe
xor
xchg
mov
shrb
jne
inc
test
xorb
cld
xor
mov
insb
int
inc
or
fdivrs
bound
addr16
push
sub
push
inc
sahf
fadd
jne
mov
addb
lock
les
pop
adc
push
or
jb
push
leave
add
dec
inc
scas
fisttps
lret
scas
lret
call
push
test
mov
lods
ja
cli
add
adc
out
bnd
je
les
test
cmpsl
inc
ret
adcb
das
lea
jl
addr16
hlt
mov
jo
lret
mov
aad
push
or
rol
ljmp
xlat
das
aam
push
push
stc
cli
xor
fidivrl
mov
out
xor
dec
pop
adc
ss
icebp
leave
pop
insl
shlb
dec
push
inc
test
enter
mov
in
outsb
fimull
cmpsb
test
imul
call
out
dec
in
scas
jbe
ficoms
insb
xlat
dec
jbe
jno
lods
mov
xor
add
jne
mov
out
push
int3
xchg
jp
in
arpl
or
or
loop
or
inc
lods
jae
ss
jns
dec
xor
rcr
cmp
mov
fidivl
int
test
cmp
or
mov
and
cmpl
addr16
push
mov
inc
jg
jl
adc
out
popa
xchg
adc
data16
mov
repz
xor
pop
mov
dec
pop
jo
dec
jae
xchg
loopne
sbb
rcrl
je
lds
mov
xchg
jge
lcall
inc
and
js
aaa
cmp
in
jae
leave
push
jl
js
dec
or
or
xor
addr16
sbb
testb
in
adc
inc
mov
ljmp
daa
and
inc
lret
mov
push
dec
sti
in
aas
mov
xchg
es
push
inc
fdivs
mov
jl
addr16
jmp
adc
jbe
jp
stos
lods
shrl
dec
push
push
in
pop
sbb
test
mov
inc
addr16
dec
add
loop
aas
jle
mov
xlat
push
or
xchg
sar
fdivr
mov
adc
pop
lock
jbe
add
lahf
or
jbe
jge
iret
aad
pop
push
sub
cmp
inc
or
ret
pop
mov
sti
int3
adc
jae
and
mov
stc
jmp
cli
cwtl
outsb
lahf
je
mov
mov
mov
sbbb
sbb
mov
data16
popl
jbe
dec
lock
hlt
cltd
pop
jecxz
movsb
push
inc
xor
clc
leave
cld
mov
cmp
and
out
xchg
and
repz
add
test
push
mov
pop
mov
pop
imul
lret
call
jns
push
pop
pop
hlt
out
int
ss
mov
and
je
inc
sbb
jle
movsl
adc
xchg
pop
xor
sub
aaa
addr16
push
mov
dec
cltd
std
pop
pop
pop
add
out
pop
sbb
sbb
out
test
fdivrp
rcl
dec
mov
ror
dec
or
xor
test
iret
sbb
jae
jle
inc
mov
add
outsb
cmp
jmp
and
and
loop
xor
sbb
inc
mov
sbb
and
push
cmp
jmp
addr16
ret
les
mov
aam
mov
fidivrs
out
imul
cmp
adcb
mov
add
movsl
adc
mov
sti
call
push
fwait
jp
mov
dec
ret
jne
adc
aas
pop
inc
mov
aaa
into
loopne
or
push
xlat
cmp
je
add
sbb
xor
jg
je
sub
faddl
bound
out
add
lret
jo
inc
mov
dec
std
adc
lods
cwtl
popl
int
dec
in
iret
fstl
xchg
mov
dec
xchg
cs
cmp
in
jge
sbb
mov
loope
das
shll
orl
ja
dec
scas
cltd
or
push
movsl
sub
lods
push
adc
cld
cmp
xchg
xchg
mov
enter
lds
aam
loope
pusha
fidivl
jno
cmp
jae
pop
mov
mov
cmc
push
mov
fwait
iret
clc
xor
jge
loopne
jnp
imul
shll
push
bound
ret
adc
outsb
loopne
pop
aad
dec
repz
mov
and
pushl
jno
pop
xchg
cmp
test
mov
mov
adc
xchg
mov
jmp
jns
out
sarl
les
stos
clc
fdivr
ja
dec
pushl
mov
int
mov
add
inc
repz
mov
mov
mov
fildll
fistps
inc
mov
popa
loope
and
xchg
das
lea
dec
aas
dec
outsl
pop
mov
stos
sbb
add
push
add
bound
movsb
pop
jae
icebp
aam
inc
mov
and
lock
scas
xchg
icebp
sub
sbb
mov
fcoml
adc
clc
mov
dec
mov
call
ret
fs
dec
stos
ljmp
testb
cwtl
jnp
repz
mov
in
movsl
iret
lret
cs
insb
xor
pusha
lods
out
or
dec
pushf
das
dec
or
cli
sub
xchg
dec
cmp
xor
xchg
push
mov
je
in
aad
and
add
mov
push
jge
xorb
dec
stc
sbb
and
mov
les
jno
adc
push
out
mov
das
mov
repz
out
push
int
dec
outsl
imul
jmp
ret
fidivl
addr16
jo
enter
negb
xor
arpl
subb
cmpsl
lods
out
dec
in
outsb
jb
xchg
roll
dec
out
sbb
add
ja
std
lret
jnp
mov
cltd
cmpl
dec
out
loopne
testb
cmp
add
fistpll
jae
fbstp
lods
mov
fstpl
ffree
das
lock
sub
fcomps
movsb
js
scas
push
push
inc
mov
mov
mov
cmpsl
hlt
movsl
mov
dec
lods
xor
push
in
or
mov
cmp
divb
push
mov
cltd
dec
dec
call
pushf
jg
fistpl
into
pushf
ret
cmp
in
daa
scas
mov
xchg
jbe
testl
ljmp
xchg
lret
adc
std
push
jne
stc
or
cli
pop
popa
jae
ret
push
pop
jecxz
push
mov
dec
movsb
dec
outsb
xor
pop
stc
mov
fstl
mov
jle
mov
pop
into
jg
cs
jl
pusha
out
push
movsb
iret
je
pop
jne
mov
and
adc
xchg
add
call
stc
mov
jmp
fildll
lds
dec
out
sub
add
pusha
inc
or
arpl
popa
adc
rol
and
shl
jecxz
ficoml
dec
and
fimull
cs
jmp
inc
jge
mov
int
jecxz
insl
xlat
and
mov
hlt
jae
or
mov
pop
cmp
out
mov
jmp
rolb
adc
sarl
sub
lcall
lods
cltd
aaa
or
mov
cwtl
sub
add
in
dec
outsb
fbstp
mov
in
mov
dec
out
ljmp
sub
sbb
sbb
dec
iret
js
pop
jl
outsl
add
xor
test
push
xchg
sahf
je
fwait
pop
fucomip
stos
stos
and
pop
in
lret
jge
out
jns
imul
cmp
pushf
dec
mov
ss
rcrl
scas
idivl
mov
in
loope
mov
bound
lds
jbe
aad
and
or
xor
out
fwait
add
push
mov
std
addr16
mov
xor
idivl
sub
rcrl
pushf
aaa
je
test
fs
lods
mov
add
ljmp
sbb
jnp
inc
sbb
movsl
or
ficoms
jne
add
cmp
cmp
sbb
or
or
cmp
sbb
nop
push
outsl
add
push
inc
dec
add
outsb
lods
pop
pushf
push
pop
dec
mov
loop
iret
insl
add
mov
mov
int
fistpl
repz
das
sbb
cmp
push
cmp
jnp
sub
sbb
test
add
orb
subb
lahf
inc
pop
push
test
or
les
test
and
add
sub
inc
xchg
imul
and
shll
mov
and
sub
insl
cwtl
out
sahf
call
aam
pop
dec
inc
jae
das
stos
pop
lret
mov
cmc
pop
pop
lods
sarb
jmp
imul
pop
scas
decb
loop
cmp
test
std
sub
lcall
push
mov
das
ficomps
aad
cmp
cwtl
test
or
rcrb
mov
jnp
mov
xor
insb
orl
fs
icebp
jge
and
shll
in
inc
ret
pop
out
popf
clc
adc
add
out
inc
rclb
pop
xchg
xlat
daa
jno
dec
push
insb
adc
push
jp
rcrb
pusha
in
sub
and
jns
inc
test
rorb
inc
cli
out
sbbl
mov
mov
fscale
dec
lret
inc
je
cmc
lock
push
stos
inc
dec
sub
addl
xor
andb
mov
imul
dec
inc
cmp
push
mov
call
imul
int3
sub
cltd
jmp
cmp
mov
cli
mov
xchg
jns
icebp
xchg
clc
popf
fbstp
mov
adc
mov
ss
jae
les
or
sub
cmc
pop
sub
add
pop
xor
mov
fwait
and
pop
add
fildl
icebp
push
mov
test
clc
popa
jbe
mov
lds
ret
push
mov
jl
cmc
cli
inc
push
fidivs
insl
mov
lret
mov
mov
jge
add
push
int3
dec
mov
sbb
inc
push
cmpsl
jmp
fdiv
das
mov
imul
xor
sahf
adc
add
div
pop
dec
jno
lods
mov
in
push
imul
sahf
test
and
loop
adc
or
in
jne
xchg
jnp
pushf
mov
sarb
add
sub
sub
mov
mov
lret
mov
mov
js
sub
cltd
into
pop
xor
sbb
inc
pop
stc
out
pop
pop
outsl
jns
or
cwtl
mov
add
rcrl
stos
mov
out
shll
in
or
or
push
imul
inc
das
jmp
lods
jge
inc
popa
inc
xchg
in
mov
sub
out
jb
lret
sbb
rcll
sub
inc
cs
mov
lods
fstpt
jg
or
adc
xchg
fs
bound
mov
cmp
lea
shlb
clc
adc
test
cli
mov
in
cld
std
jbe
cmpl
adc
mov
pop
fnstenv
or
lods
and
add
arpl
jmp
repz
xor
sbb
jae
add
int
jne
or
mov
popa
lods
mov
insl
lods
pop
xchg
cs
push
inc
fs
popa
inc
jmp
aas
xchg
sahf
in
out
and
and
sbb
xchg
cltd
stos
lods
stc
call
shrl
jbe
mov
jnp
stos
push
movsb
cwtl
adc
xchg
mov
data16
xchg
imul
mov
mov
rorl
push
inc
xchg
outsl
xchg
mov
mov
fstl
mov
mov
div
jb
xor
and
stc
sub
lahf
add
jge
pop
mov
mov
cmpsl
adc
jle
nop
roll
cmp
stc
inc
sahf
mov
xor
imul
fdiv
repnz
adc
mov
repnz
dec
xchg
mov
pmuludq
repz
test
xchg
aas
sti
cmpl
xor
data16
outsb
insl
sbb
mov
das
mov
test
cmp
xor
and
andb
push
pop
cmp
insb
cmpsl
lods
lds
xchg
lret
faddp
sbb
or
pop
stc
mov
lcall
rcl
jb
in
int
dec
push
pushf
dec
jb
xchg
sub
fldl
mov
fs
into
or
ret
lcall
jge
repnz
in
dec
popl
push
push
pushl
pop
push
sbb
xchg
cmc
mov
add
and
sub
mov
inc
ds
fucomp
adc
pop
out
mov
mov
push
dec
movsb
mov
inc
in
jp
or
ja
shll
stos
inc
xor
add
push
xchg
fldcw
jge
push
dec
dec
sub
outsb
xlat
mov
rclb
ljmp
mov
push
mov
call
xor
ret
int
mov
ret
pop
movsb
xchg
pop
fisubs
push
inc
add
test
leave
adcb
push
push
inc
stc
mov
or
out
loopne
addr16
mov
add
push
mov
mov
mov
mov
loope
shll
sarb
insl
andl
dec
adc
jge
push
test
inc
mov
in
pop
xchg
ja
cmp
aaa
nop
or
les
orl
and
or
loopne
out
fwait
xchg
sub
sbb
xor
outsl
mov
fadds
push
fdivl
mov
and
mov
hlt
or
xchg
jae
push
pushf
loopne
inc
jbe
adc
out
cmp
stos
mov
imulb
sahf
ret
dec
sahf
cwtl
cmc
aad
addl
loop
gs
fmuls
ja
out
stos
and
jmp
inc
xlat
pop
jmp
xchg
xchg
mov
cmp
cld
or
icebp
pop
aam
or
adc
flds
cs
popa
das
xor
addl
sub
sub
stos
mov
test
mov
inc
lcall
dec
jns
and
sub
ret
lcall
adc
pop
mov
test
adc
sahf
jb
sbb
rcl
cmp
in
fadd
push
das
pusha
jg
inc
dec
push
fdivs
imul
lret
mov
pop
fldl
lods
mov
xchg
ret
and
mov
daa
push
xor
imul
push
clc
lods
push
mov
add
sbb
push
sbb
pop
fidivs
pop
ret
rorl
mov
mov
imul
inc
mov
cmp
mov
mov
xor
mov
push
mov
imul
push
adc
rorl
sub
push
dec
jo
and
leave
icebp
inc
icebp
sub
jo
push
cs
sahf
cmp
pop
inc
mov
pop
mov
push
out
jns
dec
sahf
mov
and
xor
fdivl
mov
imul
pop
into
jmp
push
and
xor
rorb
push
sbb
lret
aaa
aas
sub
add
pusha
arpl
insb
mov
fmuls
and
shrb
xchg
fwait
rorl
shll
cli
inc
in
sub
mov
cmp
jo
add
out
mov
mov
int3
mov
and
dec
cmp
stc
add
push
loop
jns
inc
jg
cli
adc
jae
cmc
cmc
jno
jg
insb
xorb
fisubrs
pop
movsb
das
pop
in
insb
jg
insb
and
in
rclb
imulb
icebp
cwtl
addr16
push
push
jmp
mov
dec
adc
or
xor
lret
leave
loope
lods
push
and
jmp
lret
mov
lahf
xor
dec
roll
mov
aas
dec
xchg
cli
xor
xor
negl
xchg
xchg
loopnew
lods
or
lock
sub
mov
adc
sahf
and
sbb
stos
sub
push
xchg
hlt
adc
push
adc
js
lods
inc
jecxz
cmpsl
popa
cli
push
mov
int3
sub
pop
pop
inc
cli
pop
scas
jbe
pop
push
insb
jl
add
jge
ja
sub
movsl
mov
jae
pop
lock
dec
imul
cmpl
loop
shlb
out
push
loope
pop
aam
ucomiss
cs
out
and
es
mov
mov
cld
mov
out
ss
jno
cmp
sub
sub
mov
mov
leave
pushf
push
into
pop
dec
jns
adc
mov
cmc
fidivs
shrl
in
stos
add
fs
insb
in
fwait
jno
cli
lret
pop
adc
shlb
adc
ljmp
jmp
fisttps
jmp
test
cmp
out
push
pushf
rclb
ret
pop
out
faddl
aaa
mov
fsubs
addr16
fbld
dec
inc
or
nop
sub
sbb
leave
push
lahf
add
jno
cmp
in
or
xchg
adc
xor
fadds
out
inc
mov
inc
rol
insb
outsb
aam
aas
push
push
mov
sbb
test
shrb
jle
mov
sub
shl
mov
movsl
dec
jnp
cs
fisttpl
negb
sbb
jmp
and
sbb
ret
scas
in
dec
das
cmp
imul
fsubp
pop
mov
mov
push
xchg
mov
adc
pop
xor
push
mov
mov
mov
lea
bound
mov
xchg
sbb
les
es
and
lds
or
pmaxub
lds
pop
jge
jae
xchg
dec
sub
jle
ret
add
jnp
mov
xchg
mov
push
push
lcall
sbb
or
ror
and
enter
scas
adc
mov
sub
sbb
aad
jb
stos
xor
xchg
int
jmp
cmpb
pop
pusha
mov
push
jp
sub
push
or
outsb
decb
mov
or
jnp
pop
add
bound
aad
lock
mov
dec
xlat
mov
mov
add
and
push
mov
xchg
jg
dec
das
xor
lea
sahf
push
jp
xorl
inc
sti
adcl
jge
lret
stc
out
xchg
push
inc
pop
xchg
scas
adc
cld
mov
jo
aam
int
mov
sbb
inc
or
ja
or
dec
mov
push
shlb
popa
push
es
out
shr
stos
mov
repz
outsb
jg
into
leave
push
xchg
sub
sahf
enter
xor
repz
mov
movsl
xchg
insb
fimull
inc
mov
or
test
out
sbb
dec
roll
inc
dec
adc
sub
push
cmp
mov
enter
test
out
pusha
jns
pop
push
mov
mov
call
shlb
mov
xchg
imul
push
sti
push
ret
adc
popf
or
push
add
push
ljmp
ds
es
add
push
sarb
and
lret
add
loope
ret
testl
cmpsl
loopne
or
enter
xor
test
mov
hlt
mov
orb
cmc
out
xchg
loop
push
incb
jbe
loop
and
in
stos
adc
std
mov
mov
rolb
inc
outsb
push
scas
or
or
xlat
lahf
lcall
ret
ljmp
stos
inc
fidivl
jbe
out
pop
add
pop
gs
or
mov
aas
fadd
sbb
sarb
jae
cltd
enter
jae
jmp
mul
mov
jo
movsl
out
or
jp
adc
pop
test
add
pop
outsl
adc
outsb
movsb
fildl
xchg
mov
sbb
dec
notb
test
je
fwait
bound
push
pusha
push
push
mov
mov
add
ret
pop
rclb
pop
xor
xchg
xor
scas
cmp
movsl
inc
sbb
xor
xchg
addb
nop
ror
test
inc
push
inc
mov
lods
enter
xchg
sarb
mov
xor
pop
mov
iret
inc
mov
jo
xchg
daa
std
andl
aaa
mov
sub
or
lods
sarl
cs
dec
in
xor
scas
and
imul
cmpsb
mov
push
imul
cmp
testl
mov
jp
push
xchg
inc
into
repnz
inc
in
fisubl
bound
push
lods
ds
stos
lret
loop
fcomi
mov
lea
cmp
int3
push
icebp
add
lret
mov
in
scas
in
in
add
addr16
mov
fidivrl
leave
mov
repz
jns
push
add
adc
inc
lea
inc
xchg
shlb
pop
addr16
cwtl
pop
mov
jo
int3
sarl
sti
push
add
mov
rep
mov
out
sbb
js
bound
in
dec
or
loopne
add
xchg
cmp
dec
push
push
jle
nop
xor
in
addr16
dec
outsl
rorl
pop
out
xor
dec
mov
inc
sub
cltd
sbb
les
and
dec
enter
mov
push
fnstcw
int3
push
test
xchg
gs
jecxz
xchg
in
aas
jle
repz
test
mov
lahf
xorl
scas
loope
dec
shlb
in
sub
cmp
and
cmp
cmp
jmp
xor
add
insb
repnz
dec
and
lds
sbbb
scas
mov
sbb
loopne
fcoms
decl
dec
adc
mov
lahf
push
jge
fsubrs
jno
jg
inc
dec
inc
and
enter
outsb
inc
fcomps
in
inc
sbb
cmpsb
jb
adc
cltd
pushf
adc
cltd
xchg
mov
leave
xor
lock
fnstenv
sub
sub
jne
sti
in
mov
aam
mov
mov
xor
sbbl
imul
cwtl
fcompl
mull
iret
mov
add
stc
mov
push
xchg
ljmp
cld
adc
addl
dec
jle
mov
sbb
orl
jnp
xor
andb
jmp
jne
outsl
sub
jl,pn
xchg
addl
push
push
adc
jnp
loop
xchg
push
xchg
jle
sbb
xchg
or
call
ret
pop
dec
jb
sarb
cmp
popa
stos
sub
jle
int
and
mov
mov
bound
xchg
push
sbb
dec
lods
and
xor
scas
mov
sub
dec
das
test
lods
dec
dec
repz
repz
imul
dec
add
mov
xchg
mov
pop
dec
mov
inc
jo
fdivs
and
mov
push
rcrb
fstps
dec
add
cld
jg
push
ljmp
jb
push
lahf
xchg
sarl
xchg
sub
jecxz
inc
adc
jae
or
rorl
lahf
insl
push
pop
pop
sub
lds
or
pop
sub
cmp
inc
xchg
add
cmp
and
loope
jp
popf
xchg
add
adc
sbb
int3
testb
and
scas
cwtl
in
xorl
cmc
jno
dec
jae
cmp
hlt
test
push
daa
and
stos
popf
inc
dec
mov
rorb
ja
or
cwtl
xor
push
push
mov
sbb
enter
pop
je
dec
mov
add
dec
pop
xor
stos
add
cmp
das
dec
out
pop
out
cmpl
ret
scas
cltd
mov
add
mov
xor
shll
push
add
pop
xor
aam
xor
sub
sub
jno
sub
outsl
xor
mov
imul
cmp
jmp
daa
xlat
mov
lret
lods
cld
into
and
adc
mov
cltd
mov
dec
push
or
lahf
push
dec
rclb
test
and
push
adc
mov
subl
mov
xor
xchg
jnp
jp
sahf
inc
mov
sub
cmpsb
insl
je
pop
dec
jge
dec
pop
out
or
jp
popa
push
lcall
mov
in
push
rcrb
push
push
mov
addr16
pop
mov
mov
fdivrl
in
stos
test
cltd
jge
cli
push
push
sub
or
sbb
jb
mov
or
cmp
cmp
out
sbb
jno
push
je
and
gs
jmp
je
lcall
sub
aam
mov
xchg
pop
rorb
or
sbb
cld
ud1
stos
dec
fs
into
cmp
stos
sub
testb
les
mov
cmp
jl
xchg
adc
or
ret
mov
fmuls
mov
arpl
lcall
leave
sub
lock
inc
les
push
test
sub
in
add
lds
pop
jb
sti
test
das
fwait
aaa
dec
lret
scas
push
mov
inc
pop
in
adc
out
in
mov
and
insb
popf
xchg
nopl
fxch
dec
push
sbb
pop
mov
in
pop
push
xor
and
stc
mov
push
mov
cmpsb
and
shlb
pop
popa
cld
movsl
hlt
inc
or
mov
sbb
lods
dec
mov
imul
xchg
sub
insb
mov
rcll
stc
popa
js
js
testl
scas
mov
into
pop
lock
push
rcrl
ret
das
fbstp
xchg
ret
or
mov
and
scas
and
insl
outsb
shlb
xor
jl
fisubl
pop
fidivs
and
std
xchg
rcll
dec
mov
mov
jns
and
call
mov
mov
push
fistpl
push
push
ret
mov
push
mov
daa
cmp
adc
push
imull
int
jnp
loop
popa
adc
or
adc
mov
sbbb
notb
out
add
mov
dec
test
insb
scas
push
pop
push
nop
inc
push
inc
xchg
dec
movsl
iret
jno
push
mov
add
fcmove
mov
add
and
loopne
mov
mov
cmp
lret
xor
adc
xchg
xor
cvtdq2ps
sti
cmp
testb
les
or
push
adc
cmpsb
inc
movsb
push
arpl
inc
outsb
and
jmp
loop
mov
cld
pop
js
lods
mov
in
icebp
jmp
mov
dec
cmp
mov
mov
cs
dec
dec
int
into
mov
aam
loop
mov
outsb
mov
popf
jp
mov
mov
pop
das
xchg
icebp
addr16
fstpt
push
aad
out
mov
dec
out
std
sub
cmp
cmp
cmpsl
xchg
jne
shll
fimull
cmc
jno
rcrb
add
aad
idivb
lcall
mov
inc
inc
icebp
test
movsb
mov
mov
int3
push
ret
fistpl
or
out
test
and
cltd
pop
leave
ja
adc
call
fcoml
scas
test
xor
out
lret
xchg
sub
xchg
icebp
movsl
pusha
rol
ret
cmp
cs
out
lret
jb
hlt
movl
lock
xchg
and
lds
mov
outsb
loop
les
ficompl
cltd
clc
mov
sbb
aam
push
pop
cwtl
call
pop
lods
fsubrl
mov
pop
mov
lcall
sub
xor
sahf
and
mov
in
lea
cltd
push
jnp
and
cld
or
cmp
outsl
sbbl
xchg
ljmp
adc
mov
cmp
xor
stos
sbb
mov
mov
aad
pop
inc
jns
jmp
pop
loop
push
icebp
clc
addl
into
cwtl
xor
leave
arpl
sub
cli
mov
testl
or
sbb
dec
jl
xor
sbbl
outsl
inc
jge
adc
sub
pop
mov
cmp
sarl
xchg
adc
pusha
mov
sbb
lahf
push
dec
inc
mov
sub
lock
cmpl
or
je
fnsetpm(287
aam
pusha
cli
out
repz
je
or
enter
xor
sar
jg
inc
sbb
daa
mov
dec
dec
xor
xchg
mov
scas
or
and
lret
subl
xor
out
ret
cmp
xor
jae
adc
int
pop
pop
aaa
cmpb
mov
cmpl
adc
mov
inc
sti
fcomps
mov
xor
mov
xchg
xchg
repnz
imul
xchg
lods
mov
sub
sub
push
es
inc
dec
push
lods
adc
inc
add
imul
sub
cld
int3
bound
xchg
lahf
sahf
push
scas
sub
jle
pop
mov
daa
sbb
sahf
xor
push
jle
repz
and
dec
shl
lds
sbb
aas
inc
repz
je
xor
popf
addl
ret
mov
dec
jecxz
in
mov
in
mov
sbb
fildll
jge
mov
jb
jo
dec
cmpsl
add
lahf
lea
addb
clc
js
sti
push
adc
movsl
imul
or
int3
jne
sub
pop
push
das
fs
sbb
mov
ret
ja
js
pop
fstpt
sub
dec
dec
std
insb
pop
cwtl
cmp
das
aas
cwtl
lahf
jmp
shrb
sti
xchg
ret
lods
ds
add
adc
lods
mov
fsubrp
pop
insl
sub
and
adcb
adcl
xchg
sbb
push
cmp
sbb
enter
inc
jno
gs
shll
pop
mov
or
push
adc
imul
sub
popa
sbb
mov
dec
push
ds
pusha
mov
jb
inc
out
addl
dec
call
cltd
test
mov
subb
out
ds
mov
pop
mov
test
push
mov
jne
inc
mov
mov
inc
subb
push
cmc
dec
sbb
imul
push
jmp
ljmp
cmpsb
out
lahf
dec
inc
and
lahf
add
jo
adc
int
jmp
mov
mov
sub
push
subl
add
xchg
into
icebp
xor
push
and
xchg
cmp
mov
scas
xchg
jb
sub
mov
imul
or
jnp
mov
inc
cmp
xor
sar
jle
loope
mov
or
mov
xor
add
and
lahf
jle
mov
and
mov
in
xor
dec
test
push
add
cmpsb
mov
imul
xchg
repnz
jnp
inc
push
les
arpl
mov
adc
sub
jp
sbb
lods
xchg
cwtl
push
gs
test
mov
push
shll
or
in
lcall
cmpl
stc
jl
repz
loope
xchg
jb
adc
ds
in
inc
push
in
out
and
jge
insb
lret
push
imul
xor
out
lea
out
inc
inc
jmp
pop
orps
loopne
or
fnstsw
ljmp
inc
cs
js
int
add
inc
jmp
mov
enter
insb
push
sub
xchg
mov
fs
mov
jb
xor
push
sub
dec
cmpb
and
cmp
mov
cmpsb
in
ja
in
xor
sub
pop
aad
fimuls
ret
test
data16
out
xor
jl
mov
mov
movsb
movsl
std
call
pushl
je
repnz
jle
add
daa
cmp
int3
or
sbb
stos
mov
jne
aam
int3
mov
jmp
std
mov
mov
xchg
int
xchg
or
js
pop
mov
loope
cmp
out
sbb
mov
or
push
fwait
cmpsb
fsubs
mov
or
dec
and
out
mov
out
push
dec
scas
dec
fwait
sahf
jg
xor
xchg
adc
sub
sbb
fcoms
cmp
ret
and
int
jbe
lods
loop
gs
ljmp
ret
cld
loope
push
mov
adc
into
xor
insb
xchg
push
adc
xor
xchg
fildll
fsubrs
mov
insb
ss
jbe
test
mov
outsl
dec
adc
adc
add
mov
daa
mov
in
push
js
xor
dec
mov
ja
test
push
fs
push
test
and
mov
mov
cmp
and
aaa
inc
adc
xchg
nop
sub
add
es
lock
movb
cmp
mov
out
cmc
mov
out
or
xchg
bound
insb
push
das
test
div
inc
lea
and
punpcklwd
or
sti
outsl
mov
out
and
lods
repnz
shlb
call
fisttpll
cmp
iret
data16
mov
js
and
notb
jge
adc
lahf
jnp
mov
arpl
ljmp
mov
and
mov
sub
xor
test
xchg
movsl
aaa
ret
mov
push
adc
mov
and
int3
push
inc
clc
mov
repnz
stos
mov
xchg
mov
sub
repz
mov
aas
add
xor
sbb
dec
stc
mov
or
lahf
inc
cmp
pop
leave
sti
push
pop
aam
je
pop
fsubrs
inc
push
leave
or
push
dec
iret
imul
add
inc
sbb
sahf
sbb
xchg
add
test
dec
dec
aas
sbb
mov
dec
jae
cld
jmp
mov
int
jge
mov
mov
rorl
aaa
pop
dec
inc
and
xchg
dec
jg
mov
mov
cmp
sub
pop
arpl
push
in
cmp
sbb
dec
adc
mov
fxch
add
dec
xor
gs
push
fwait
jecxz
and
into
inc
popa
insb
call
mov
dec
dec
lds
jno
in
icebp
stos
pop
sub
cmp
cmp
inc
hlt
push
add
lods
in
mov
mov
fsubl
arpl
push
in
xchg
pop
xchg
push
arpl
ds
mov
inc
cmc
fdivl
ret
xchg
into
fstpl
nop
add
cwtl
dec
jns
cmp
loope
jns
pop
cmp
shl
fimull
fdivrs
mov
or
jp
adc
or
pusha
fadds
jb
jae
mulb
inc
pusha
or
cmc
inc
mov
lcall
les
mov
fs
sub
mov
repnz
out
cmp
gs
mov
jg
push
inc
in
mov
add
add
dec
jno
hlt
push
ds
cli
fmul
fs
pusha
fistl
mov
and
enter
dec
es
bound
jecxz
fcomps
fdivs
mov
cmpsb
mov
gs
inc
xchg
xor
aam
mov
popf
xchg
dec
mov
fxch
and
insb
mov
aam
lret
std
fmull
xchg
sub
sbb
push
lcall
mov
dec
xor
popf
lret
clc
adc
pusha
inc
xchg
or
sub
fwait
insl
rclb
xchg
inc
or
iret
inc
adc
shl
es
fs
jb
and
mov
push
test
mov
add
sub
push
insl
adc
movsb
into
pop
jle
push
push
test
scas
push
add
lea
out
data16
addr16
mov
addb
cmp
add
lret
inc
mov
popa
and
scas
jno
jo
in
stos
out
jno
push
jnp
repnz
into
sahf
sub
js
call
call
push
pop
loopne
in
ret
loope
xor
push
inc
xorl
lods
fidivl
xchg
lret
sbb
insb
xchg
inc
cmpsl
mov
iret
out
push
aas
inc
adc
test
fmuls
out
push
dec
loop
pushf
add
int
dec
imul
js
loopne
sbb
flds
sub
sub
cmpb
rorw
vrcpss
mov
mov
aam
cmc
mov
jg
xor
psllw
cltd
faddl
push
lret
out
push
repnz
fldt
sub
push
or
aas
lea
cmp
mov
add
mov
fidivl
das
cmp
ljmp
xor
incb
xchg
ficoml
sub
push
jo
xor
mov
adc
add
ficoms
and
mov
repnz
std
mov
stc
inc
arpl
iret
jbe
int
add
or
mov
adc
loope
sub
mov
cltd
jl
jmp
or
cmp
lds
sub
rcll
xor
js
xchg
fwait
fwait
lret
add
mov
aaa
lods
les
imul
jno
pop
inc
xor
fdivrl
mov
sti
adc
xchg
xchg
iret
out
push
add
cmp
psubusb
mov
mov
and
repz
aaa
imul
xchg
add
mov
pop
add
inc
jns
shll
fsts
js
mov
lea
mov
ljmp
nop
lahf
int3
add
inc
out
mov
divb
inc
dec
lods
test
icebp
repnz
mov
mov
in
adc
fadds
mov
test
movsl
daa
push
pop
mov
leave
out
pusha
and
mov
dec
sub
inc
imul
adc
out
pop
cmp
stos
mov
loop
shlb
or
pushf
cwtl
adc
dec
mov
mov
jo
xlat
sub
mov
lret
push
rclb
sarb
sarb
sub
adc
iret
test
adc
mov
cmp
push
mov
push
sbb
mov
push
icebp
sbb
cmp
jnp
and
pop
dec
shl
out
lock
cmc
cmpsb
mov
test
mov
and
pop
push
outsb
inc
cmpsl
cli
pop
inc
rcr
bnd
call
or
neg
lds
pop
add
dec
and
movsl
xchg
mov
sbb
jae
sub
insl
push
rcl
popf
mov
test
xchg
incb
fnstsw
dec
pop
dec
and
ret
xchg
into
pop
sub
cmpsb
cwtl
insb
sahf
jbe
dec
or
push
das
jb
bound
dec
loopne
in
inc
adc
lahf
xor
sbb
mov
insb
pop
aas
pop
cmp
pop
jl
das
pop
daa
push
push
in
dec
fisubrl
push
mov
dec
jno
int3
mov
push
out
pop
pop
dec
shl
inc
mov
mov
sub
adc
dec
add
and
pop
adc
repnz
icebp
xor
push
cmp
adc
pop
xlat
push
inc
mov
xchg
mov
iret
andl
push
std
repz
lds
cmpsb
not
push
jp
xchg
jl
shrl
stc
lcall
sarl
add
hlt
jns
mov
add
addr16
rolb
movsl
cmp
push
xor
mov
mov
xlat
ret
out
mov
cwtl
mov
pop
mov
int3
add
mov
xor
jo
pop
clc
mov
fidivl
add
jg
pop
cmp
and
mov
jo
jne
mov
jne
loop
mov
int3
sbb
push
push
decb
jno
scas
mov
in
push
in
pushf
xor
cmp
sub
lret
add
mov
iret
test
or
lahf
imul
lods
jle
ja
push
loop
popf
loopne
lret
push
xor
push
adc
out
adc
in
arpl
ror
outsb
insb
popa
xchg
leave
ret
jmp
nop
inc
pop
or
hlt
adc
mov
inc
cmp
stos
subb
xor
fadds
fnstsw
imull
adc
mov
mov
inc
inc
popf
dec
fucomp
push
jmp
or
bound
shlb
xchg
pop
or
ss
inc
dec
fwait
xor
arpl
jl
aam
imull
ret
pusha
adc
sub
xor
insb
cmp
out
mov
mov
xchg
mov
or
lret
je
lahf
jnp
fisttps
xor
daa
mov
daa
and
outsl
or
mov
mov
int3
add
push
pop
les
mov
bound
adc
in
xor
mov
mov
adc
movsl
jb
jle
scas
xor
adc
lahf
jp
sti
mov
sbb
xor
adcl
in
leave
sbb
ljmp
add
jno,pn
add
pop
xchg
test
pusha
mov
adc
cmp
cli
ljmp
jb
dec
fimuls
scas
out
xchg
push
out
xchg
movsl
fnstcw
cs
xlat
pop
or
fisttpl
int3
xor
int
aaa
pop
aas
pop
mov
aad
outsb
bound
lock
and
lds
jb
int3
and
sbb
sti
les
sbb
les
mov
dec
lds
rcr
insb
add
mov
xor
popf
dec
pop
add
sbb
lahf
nop
ret
pop
pop
fldt
insl
sub
mov
fcomps
and
out
cmc
sbb
jmp
xchg
mov
jns
dec
loop
push
js
and
inc
pushf
setle
pop
fcomip
mov
pop
pop
push
xchg
pop
mov
mov
lcall
sbb
outsb
iret
scas
les
pushf
cld
or
inc
fistl
mov
pop
lret
xor
cmp
cwtl
jb
or
or
push
ret
xchg
lock
icebp
push
dec
addr16
data16
daa
jo
gs
dec
fwait
adc
and
in
out
and
jae
fimuls
iret
insb
ret
mov
pop
gs
jae
imul
notb
mov
lods
scas
push
mov
and
mov
iret
out
xlat
and
cmp
and
popf
shlb
cwtl
mov
xchg
aas
lea
inc
mov
or
mov
fs
int
incl
js,pt
es
pop
pop
add
mov
outsb
cmp
js
mov
cld
mov
ror
cmc
push
out
or
das
ds
xchg
push
movsl
pop
fs
jge
mov
xchg
in
loopne
xor
push
add
lods
xor
sub
jmp
xor
jmp
loope
mov
dec
cmp
cmpsl
push
sbb
cwtl
mov
std
dec
hlt
cmp
dec
sub
pop
add
xchg
cmc
inc
mov
ljmp
adc
sub
push
lret
cvtps2pd
dec
inc
inc
dec
mov
pusha
dec
lock
ret
jecxz
mov
dec
dec
cmp
pop
aas
cmp
jg
pop
clc
out
rorb
mov
enter
mov
mov
push
mov
hlt
adc
and
pop
and
aad
ret
cmpsb
cs
cwtl
mov
mov
lods
mov
loope
mov
cld
stc
jg
cmp
xor
out
push
xor
push
pushf
mov
and
out
pop
out
push
test
shlb
aad
push
push
ds
fsubrl
pushf
jb
rol
cld
xchg
lds
mov
lcall
and
movsb
icebp
add
push
xor
push
shll
cmp
test
xchg
lods
push
shlb
adc
mov
adc
das
stos
ret
fidivrs
das
dec
xor
pushf
sarl
jbe
jnp
shll
push
imull
inc
push
dec
mov
mov
call
xchg
cld
jge
add
popa
mov
xchg
dec
bound
cli
mov
call
fists
xchg
inc
xor
aas
inc
ljmp
mov
cmpsl
mov
sahf
filds
roll
outsb
pop
sbb
mov
sbb
testl
sub
ss
cmp
jno
mov
nop
sub
mov
cmp
sbbb
pushf
fcoml
ds
mov
xor
pop
iret
dec
and
mov
mov
lock
jbe
lods
insl
mov
mov
cmp
sbbl
sub
lock
jae
push
jecxz
pop
push
jle
adc
mov
aas
jbe
jmp
xchg
add
adc
adc
or
inc
jecxz
mov
lock
sti
aaa
push
out
jns
dec
lcall
out
sbb
and
test
test
push
push
jns
cmp
lock
imulb
sub
jnp
inc
arpl
xlat
rorl
and
stos
sub
fnstsw
ret
int3
mov
dec
scas
loopne
cmp
filds
inc
pop
es
inc
repnz
pop
jp
aas
ret
push
and
lea
fdivrs
dec
mov
popf
pushf
iret
xchg
sbb
outsb
sbb
dec
movsl
das
and
sbb
stc
mov
inc
cli
xchg
lahf
shr
mov
and
outsb
out
add
and
mov
lea
mov
push
jle
popf
push
cmp
loop
mov
cmpsb
lret
mov
pusha
shll
cltd
loopne
inc
fbld
dec
data16
in
test
push
jno
pop
cmp
movsl
pop
pop
inc
xor
or
stos
dec
std
sub
jbe
in
sub
test
jnp
pop
cmpsl
xchg
sahf
pop
jns
gs
mov
mov
mov
fs
stos
stos
rolb
popf
lds
mov
sbb
les
test
into
push
push
movsb
pop
into
lcall
pop
fdivs
fisttpl
jne
or
std
lret
loop
rorl
imul
mov
cmp
cmpsl
cltd
in
and
mov
icebp
jno
in
xchg
mov
push
xor
jbe
inc
mov
dec
idivl
sbb
mov
hlt
push
stos
xor
mov
and
shl
or
lret
mov
jns
std
stos
movsb
pop
aad
outsl
mov
xor
mov
insb
dec
iret
sbb
mov
pushf
mov
add
pop
cs
rcrl
sahf
in
xchg
cmp
jb
jbe
fidivrl
divl
and
add
jp
cmpsl
pop
mov
call
push
test
xlat
clc
test
mov
dec
xchg
scas
push
das
xor
mov
test
iret
sahf
aaa
mov
loope
jle
sbb
xchg
lock
cmp
cmp
jbe
xchg
sbb
lods
jge
sub
dec
aam
int3
pop
xchg
or
mov
call
sbb
add
push
push
sbb
push
ss
xchg
cmp
pop
mov
sti
dec
and
ds
push
lret
add
push
or
mov
cmp
xchg
mov
fstpl
pushf
insb
mov
or
cmp
xorl
ret
gs
mov
mov
mov
dec
inc
push
cs
outsl
stc
sub
bound
outsl
lcall
test
cli
push
dec
pop
jle
push
bound
hlt
or
add
cwtl
arpl
in
mov
xor
test
add
lcall
fstl
adc
xchg
add
ret
shll
out
mov
movsl
int3
es
repnz
dec
aaa
sbb
cld
jmp
and
aam
and
pop
fisttpl
icebp
mov
xor
pop
add
je
lcall
out
ret
dec
xchg
popa
fistpl
dec
mov
enter
movsb
add
pop
insl
test
sbb
enter
out
and
jno
subb
mov
jno
mov
dec
add
jle
gs
loope
in
aam
sbbb
es
push
mov
pusha
fidivrl
adc
mov
inc
les
xor
lods
pop
ds
inc
cs
scas
xor
mov
ja
xchg
xlat
pop
cs
outsb
insb
das
out
xchg
sub
mov
xor
aad
push
orl
pusha
push
xchg
aad
push
das
xor
shll
clc
or
sub
xor
in
push
fistps
push
pop
iret
dec
rcrb
cmpl
icebp
xor
test
test
inc
addr16
lahf
pushf
or
imul
mov
aam
popa
lods
jge
lock
or
inc
nop
pop
pop
xchg
xlat
fs
in
mov
push
add
mov
xor
movsl
inc
lea
adc
repz
js
hlt
mov
add
cmpsb
sub
xor
mov
mov
add
sbb
cmp
xchg
arpl
lea
ja
mov
push
repnz
test
out
jo
or
and
mov
in
mov
gs
push
testb
cmpsb
cmc
je
fdivl
pop
clc
adcl
jb
les
lahf
ficomps
test
jmp
mov
shrb
sbb
nop
out
std
mov
jnp
sbb
cmpsl
pop
push
mov
xchg
ja
and
and
add
fidivl
add
sub
popf
adc
in
ss
movsb
or
sti
cmp
into
cmpsb
shlb
dec
jmp
fidivs
faddl
lahf
jecxz
nop
and
lea
push
mov
lods
inc
mov
enter
xor
in
mov
adc
scas
popl
jbe
jb
les
xchg
imul
pop
jg
add
pop
jnp
sahf
pop
pop
pop
cltd
outsl
xchg
push
lahf
mov
in
and
inc
rclb
pop
jae
jb
add
in
inc
cmp
jne
push
xchg
pop
test
std
xor
pop
popf
lahf
movsb
xchg
dec
add
test
push
fimuls
and
out
xor
push
push
ja
pop
fcmovnu
push
jns
icebp
pop
xchg
fnstsw
mov
rclb
jnp
or
adc
aad
cs
out
shld
hlt
xchg
into
lahf
jmp
mov
sub
dec
dec
jbe
lcall
js
cmpb
pushf
imul
mov
loopne
in
insb
mov
lcall
std
xchg
mov
cli
add
fldcw
mov
mov
call
lret
and
dec
sub
orb
sub
loopne
daa
jge
sbb
clc
jno
sub
xor
push
in
adc
cmc
mov
stc
sub
mov
add
repz
mov
mov
jp
mov
scas
outsb
test
addr16
mov
scas
and
pop
inc
cmpsl
mov
fwait
iret
iret
sti
fsubr
jo
dec
xor
cmpsb
daa
fisubrs
xchg
mov
cli
clc
pop
xchg
mov
out
test
cmpsb
ss
mov
cmpsl
mulb
pop
mov
pop
inc
and
or
xchg
mov
mov
jo
adc
adc
mov
sub
test
sbb
int
imul
jno
int
jge
cmp
xchg
mov
dec
int3
dec
sarb
jno
leave
and
outsl
icebp
dec
aam
pushf
outsl
inc
push
aaa
call
int
push
mov
inc
sbb
inc
jp
or
jl
adc
cmp
pusha
push
ds
push
sbb
and
jmp
out
mov
cwtl
mov
jmp
xchg
jo
orl
jecxz
pop
jns
sbb
dec
stos
push
test
ret
enter
out
insb
insl
sub
in
jl
cli
sub
in
pusha
cltd
xor
mov
mov
adc
mov
rcrl
repnz
push
ror
loopne
cmp
rcll
mov
shll
sbb
arpl
sub
arpl
push
sbb
sub
push
imul
xor
lods
xlat
pop
mov
out
lret
add
mov
movb
mov
cmp
jb
mov
jno
sbb
adc
jmp
mov
mov
inc
sbb
dec
or
lods
mov
roll
xchg
push
movsl
xchg
imul
add
ds
outsb
dec
pop
sub
lcallw
shrb
jae
cld
fwait
mov
leave
ja
xlat
ja
cwtl
das
add
movsb
scas
and
lahf
aas
stc
mov
daa
addr16
sub
out
test
imul
cmc
cli
pushf
or
sub
js
fimull
shr
mov
sbb
mov
popa
dec
push
push
ljmp
cli
and
lret
jne
js
sub
xchg
pop
jle
in
nop
pop
push
lret
pop
sbb
cli
iret
add
icebp
into
mov
sub
dec
cmp
pop
out
stos
dec
pop
push
jne
cmp
xchg
stos
pop
xchg
sub
mov
and
push
add
ret
aad
gs
js
orl
mov
sbb
pop
jp
adc
adc
pusha
pop
or
int
xchg
mov
xor
adc
sar
push
jno
and
lret
pop
mov
ds
test
fisubrs
cmpb
add
push
arpl
add
fcompl
divl
mov
call
mov
fwait
sti
or
push
adc
cld
and
xchg
cmp
rorb
clc
repnz
fldt
and
movsb
mov
inc
mov
inc
sub
and
push
jnp
stc
ret
xchg
mov
mov
ss
push
push
lcall
rcrb
sub
imul
jo
push
mov
xchg
out
faddl
mov
xchg
dec
dec
or
dec
pop
add
dec
arpl
pop
lea
mov
or
ret
dec
dec
add
push
cmp
mov
mov
movsl
xor
rcrb
mov
xlat
pushf
jae
inc
add
enter
cmp
hlt
xor
mov
push
std
inc
movsl
adc
es
or
fildll
into
cmpsl
cld
xchg
scas
adc
sub
pusha
push
push
outsl
pushf
stc
inc
adc
pushf
test
sub
inc
xchg
out
pop
mov
rcrl
add
jge
rclb
int
push
jecxz
gs
imul
or
stos
mov
out
popl
sub
std
in
test
hlt
or
xor
dec
xchg
orb
xchg
aas
mov
add
popa
cmc
xchg
mov
ljmp
es
or
cld
popf
cli
aam
mov
int3
out
int3
aad
je
jmp
rorl
xor
dec
xchg
xchg
pop
mov
int
xor
cmp
mov
mov
js
cmp
and
or
cwtl
jo
scas
and
out
pop
arpl
jne
test
stos
mov
ds
test
mov
push
mov
push
and
push
mov
inc
inc
inc
push
call
lcall
outsb
xorb
mov
test
xchg
sbb
gs
mov
mov
pop
testb
dec
test
ljmp
imulb
adc
jo
iret
adc
outsb
xor
cwtl
bound
adc
sahf
push
xchg
inc
xchg
pop
jne
cmc
or
fdivs
out
ss
mov
mov
jg
xor
dec
push
jmp
mov
mov
push
adc
or
mov
jne
iret
mov
mov
jnp
in
in
loop
fisubrs
jae
cmpsb
in
xchg
mov
sbbb
cld
jnp
movsl
lods
out
int3
cmc
cmp
mov
sti
repz
xor
out
das
lds
enter
movsl
rolb
je
mov
std
and
fcmovnu
adc
loop
push
outsb
addr16
xchg
addr16
inc
cmpsb
repz
jne
je
out
sbb
inc
cmpsb
xor
sbb
pop
push
push
fisttpll
jae
jno
sub
jne
add
mov
xchg
xchg
lcall
pop
movsl
ds
sbbl
test
clc
mov
pop
or
mov
inc
and
shlb
les
lods
test
xchg
data16
pop
std
stc
rcll
mov
cmp
cmp
out
or
jmp
clc
call
fwait
aam
lods
shlb
push
mov
sub
call
jmp
popf
dec
and
add
jg
lds
jmp
std
je
aas
add
sbb
insl
sub
xchg
cmp
mov
jno
mov
movsl
es
scas
faddp
pop
es
dec
inc
test
mov
cmpsb
insl
out
sub
pop
lcall
xor
in
dec
dec
xor
stos
cmp
cmp
adc
push
push
scas
pop
mov
pop
test
mov
mov
xor
pop
shrb
pop
sbb
hlt
shll
stos
movsl
out
xorb
cs
push
dec
mov
jl
ud1
xchg
xchg
aad
pop
sbb
nop
test
out
sahf
jae
pop
sahf
ds
outsb
add
test
cmp
cmp
fimull
mov
shll
push
aas
call
or
push
testl
and
sbb
adc
aaa
jmp
sbb
je
xor
in
call
pop
cmp
sub
and
stos
in
out
push
sti
pusha
lock
mov
gs
in
sar
pop
lcall
dec
lahf
jne
pop
mov
mov
movsb
and
shrl
inc
test
data16
in
xchg
and
pop
jbe
push
inc
or
and
sbb
jnp
fcmovne
mov
in
jnp
pop
adc
mov
idivb
test
sbb
lret
sbb
daa
xchg
add
jo
push
xchg
jge
ljmp
ret
aas
movsb
adc
repnz
xor
pop
xchg
cli
jp
jp
mov
cltd
jb
xchg
mov
fbstp
fnstsw
xorl
fcoms
mov
stc
imul
in
jne
sbb
sbb
xchg
jns
mov
sbb
popa
mov
jle
pop
pop
lods
int3
repz
into
fst
in
mov
popf
push
add
addr16
cmpl
scas
mov
push
movsl
fimull
icebp
xor
sbb
dec
xlat
push
dec
cli
out
das
in
push
mov
out
out
loop
call
mov
mov
pushf
push
das
pop
mov
mov
mov
rolb
filds
es
lret
xchg
jo
aaa
ret
fldt
test
icebp
jbe
lahf
out
fisubrs
rorb
iret
out
inc
pop
jbe
mov
push
loope
js
jp
inc
lahf
mov
inc
pusha
insl
cmp
push
arpl
jno
dec
pop
push
fstpl
mov
adcb
mov
decl
pop
pushf
push
pop
mov
testb
xchg
mov
fnstcw
fists
fldt
adc
lret
push
mov
adc
std
mov
and
or
jb
add
stc
lock
jo
inc
push
jecxz
test
repnz
lcall
es
sub
je
pushf
lahf
aad
ret
jmp
arpl
add
push
je
xchg
shll
adc
xchg
out
pop
sbb
lds
testl
fsubr
jae
jns
sarb
pop
sub
mov
add
mov
daa
stos
pop
cmp
scas
push
repz
lret
xor
add
ljmp
scas
and
push
mov
sahf
stos
repnz
popf
mov
dec
inc
leave
cli
push
and
mov
cmp
sub
push
das
movsl
lock
mov
lret
mov
sahf
sbb
das
mov
ret
dec
mov
andl
outsb
sub
and
jbe
mov
out
mov
imul
dec
test
mov
add
les
adc
fwait
xor
ljmp
inc
adc
mov
jne
clc
ficompl
push
push
inc
cmpsl
aad
mov
adc
adc
repnz
dec
cltd
dec
inc
scas
test
add
inc
lahf
fbstp
jmp
mov
add
je
jge
icebp
sti
sbb
add
movsb
out
xor
pop
adc
xchg
fsub
jle
pop
sbb
sbb
mov
and
es
shll
sub
or
outsl
sub
inc
mov
fdivl
dec
test
xchg
pop
push
pcmpeqw
dec
mov
xor
loopne
addr16
scas
and
sub
outsl
xor
cli
sahf
xchg
rcrl
mov
or
push
cmp
jg
mov
pop
movsl
inc
scas
in
iret
data16
gs
pop
push
mov
sub
pushf
ss
dec
mov
ljmp
sti
mov
mov
imul
arpl
xchg
test
in
xor
xchg
bound
in
and
out
xor
test
pause
shlb
imul
push
sub
movsb
inc
shr
xchg
ja
ret
adc
insl
lret
rcl
daa
add
dec
xor
push
add
test
or
mov
cmc
outsb
icebp
push
mov
rcrl
push
jns
mov
sub
pop
mov
cld
imul
int3
push
lfs
cmp
adc
sbb
arpl
ficomps
sub
inc
inc
mov
ret
xchg
push
mov
jmp
arpl
test
mov
das
jmp
xchg
cmp
inc
dec
push
out
rclb
xchg
clc
addr16
or
adc
stos
jne
and
popf
mov
lret
mov
enter
cltd
call
shrb
std
cmc
or
clc
add
int
mov
xor
inc
fcoml
shlb
pop
inc
sahf
arpl
pop
and
or
aam
xor
fldz
lcall
lret
cmp
aad
test
mov
xchg
cmpsb
mov
mov
stos
jo
xchg
mov
adc
popa
ss
es
xor
loope
sub
in
mov
adc
fimull
ret
pandn
mov
pop
call
or
insl
div
sbb
xchg
jle
popa
sahf
jnp
outsb
stos
lds
in
xchg
adc
test
stos
cwtl
stos
push
nop
xchg
push
inc
push
dec
insl
mov
xchg
push
xchg
dec
jecxz
andb
test
les
test
adc
faddl
cmp
inc
stos
fdiv
mov
pushf
pop
call
inc
ljmp
jae
jle
mov
adc
jl
stc
jle
xchg
push
test
scas
fs
lds
sbb
cli
mov
xchg
fldt
in
lea
loope
mov
mov
addl
inc
mov
and
adc
lret
test
insl
outsb
mov
lea
fwait
rorl
pop
push
adc
or
call
and
add
dec
push
div
cmpsb
leave
popf
and
mov
fidivs
mov
adc
sbb
cld
sbb
or
or
outsb
pop
jp
and
ds
stc
aad
add
loopne
fisubl
insb
push
mov
xchg
mov
mov
pop
cmp
faddl
movsb
mov
lea
out
mov
mov
mov
repnz
or
dec
and
rcrl
dec
dec
push
sub
mov
push
je
xchg
test
adc
jle
das
push
xchg
clc
or
gs
test
mov
mov
push
in
out
outsb
popa
xor
xchg
push
cwtl
imul
incl
jno
std
jmp
nop
mov
sahf
dec
sbb
sbb
xor
or
outsl
test
sbb
xor
or
stos
mov
in
pop
sub
add
cmp
xchg
aad
jl
or
xor
xchg
movsl
jecxz
call
xor
subb
movsb
negl
sbb
push
lahf
and
sti
push
dec
sub
adc
les
hlt
sub
mov
aas
lods
ret
dec
mov
jle
push
sti
mov
adc
lods
add
xchg
dec
mov
outsb
lcall
fidivrs
sahf
push
data16
mov
into
dec
pop
sbb
imul
ret
add
lods
pop
xor
inc
mov
imul
out
addr16
imul
rorl
or
icebp
inc
and
lret
jae
push
shlb
mov
iret
dec
xchg
call
pop
add
aas
test
xchg
aaa
push
stos
jge
sbb
in
pop
cmpsl
icebp
adc
repz
push
sahf
jns
jbe
pop
imulb
sbb
sbb
jmp
mov
aas
fisttps
push
ret
pop
mov
cmp
in
push
add
adc
ds
or
bnd
sbb
pop
xchg
dec
fcmove
push
push
icebp
cmp
jp
push
stos
and
pop
aam
test
hlt
stos
int
mov
insb
lret
shll
lods
xor
fidivrs
mov
icebp
daa
add
adc
mov
ds
mov
ljmp
into
inc
mov
push
push
insb
inc
xor
fs
mov
nop
jle
fwait
cmp
adc
popa
inc
test
push
pop
dec
dec
lods
sub
rcll
push
adc
popf
jmp
push
int
sub
fisubs
pop
jmp
xchg
jmp
ret
mov
pop
or
ss
push
clc
cmp
js
popf
pop
in
add
movsl
push
cmc
sahf
leave
fbstp
adc
in
xor
in
or
shrl
jp
incb
lods
pop
sarb
in
insl
lahf
mov
mov
es
jl
and
enter
rcrl
push
movsl
lods
repz
mov
in
adc
inc
pop
test
dec
mov
lahf
lds
lods
int
sbb
push
js
sub
fsubl
mov
and
jo
and
pop
lret
shll
jg
out
testb
sub
add
mov
pop
and
in
jae
mov
mov
or
pop
push
push
cmpsb
dec
sbb
js
xor
mov
in
stos
faddl
cmp
in
out
xor
xor
inc
adc
out
bound
cwtl
sub
sbb
pop
ja
stos
mov
sbb
pusha
or
lods
iret
lcall
insb
loope
movsl
ljmp
out
int3
push
dec
stc
loopne
sbb
mov
pop
arpl
push
adc
in
js
lret
cmp
mov
das
mov
pop
out
sub
fsubrp
cmc
repz
sbb
dec
add
add
add
pop
and
pusha
fcoms
ret
cmpsl
out
inc
cltd
les
bound
pop
leave
fidivl
dec
mov
popl
mov
ret
fs
push
push
push
and
inc
stos
mov
pop
mov
adcl
clc
and
pop
cmpsb
hlt
xor
and
jb
mov
icebp
pop
adc
jp
jecxz
xchg
stos
push
andl
subb
mov
sbb
rep
xlat
mov
or
push
data16
in
and
lcall
gs
adc
cs
jge
ja
stc
sub
jle
pop
imull
nop
movsl
adc
arpl
push
int3
lea
sti
fcoms
fdivs
in
ljmp
jl
mov
pop
push
jp
cli
fcmovnu
dec
jne
jnp
xchg
or
inc
inc
loop
mov
sub
xor
jl
push
cmp
mov
adc
loopne
jbe
jp
ds
and
and
xor
and
or
sub
push
out
mov
cmp
jl
xchg
outsl
ds
imul
cmpsl
lods
das
mov
rcrl
inc
loopne
jnp
sbb
jo
leave
arpl
dec
mov
adc
pop
cld
cmp
cld
add
mov
xchg
ja
pop
inc
xchg
bound
sbb
or
push
sbb
fnstenv
lods
arpl
in
pop
pushf
dec
bnd
jbe
xchg
das
mov
in
daa
in
and
sahf
es
test
sub
mov
scas
outsl
fildl
out
jno
dec
add
mov
mov
int3
add
stos
xor
subl
mov
mov
xor
mov
jg
out
cli
push
inc
fs
push
sbb
fistpl
idivb
add
stc
test
ret
xorl
neg
push
pusha
cld
pop
dec
das
ret
icebp
fnstcw
pop
movsl
fwait
insl
pop
out
test
adc
stc
imul
inc
mov
adc
push
cmp
enter
push
xchg
mov
pop
in
loopne
in
or
mov
gs
cmpsb
xor
cwtl
mov
stc
testl
mov
and
mov
add
test
add
aad
push
imul
mov
lret
push
push
jnp
les
sub
xor
outsl
add
in
das
fdivl
lret
cmp
adc
pushf
or
pop
movl
adc
add
push
fwait
cmc
cmp
xchg
sub
xor
test
inc
test
mov
imul
lahf
sbb
fisttpll
testb
jno
dec
xchg
nop
movl
pop
enter
test
dec
mov
xor
jb
xor
and
cli
in
in
push
jg
dec
cmp
add
in
cltd
fiadds
sub
jno
movsb
pop
mov
xor
xchg
sar
mov
jl
pop
out
ja
in
sbb
mov
xor
sub
fidivrs
fisubrs
push
cmp
das
add
dec
mov
add
repnz
sub
shl
push
dec
jmp
dec
psrad
ljmp
adc
dec
mov
dec
and
sahf
or
cmp
dec
aad
or
mov
sub
call
dec
dec
pop
or
jl
addr16
cs
shlb
cmc
xor
jge
push
dec
clc
addb
mov
jnp
xlat
jg
jbe
jle
push
cwtl
cmc
xchg
pop
mov
jmp
out
xor
xor
pusha
scas
and
mov
notl
jp
adc
pop
xchg
push
pop
xchg
dec
jge
jge
ljmp
idivb
mov
push
idivl
das
jp
and
stc
sysenter
add
mov
push
fsubrl
mov
ljmp
lods
and
fbstp
dec
leave
adc
rorl
push
xor
mov
hlt
pusha
int3
cmp
out
cmp
mov
jno
aas
sbb
ds
pop
ret
xchg
sbb
mov
movsb
cmp
ret
pop
sbb
pop
sbb
fs
lret
adc
and
and
add
fstps
mov
scas
loop
xchg
adc
test
stos
and
sub
dec
pop
frstor
xchg
movsb
push
ja
gs
gs
data16
push
in
dec
leave
or
push
mov
cld
mov
mov
jecxz
jno
in
dec
push
and
cwtl
xor
add
sti
mov
lods
sbb
cmpsb
int
fmul
cltd
add
sti
sbb
out
test
mov
out
or
into
inc
mov
cmp
fcmovnbe
ret
sbb
inc
ret
insb
imul
cmc
add
jo
in
cmp
jg
cmp
add
inc
inc
andb
mov
lret
orb
add
lea
mov
call
scas
lahf
loop
mov
shrl
fstpl
stos
pop
test
push
inc
bound
bound
call
mov
pop
pop
pop
lock
mov
cmc
jnp
inc
les
dec
or
jp
pop
enter
or
and
test
xchg
dec
addr16
stos
cs
ficoms
sti
inc
arpl
jle
pusha
cs
lods
jecxz
shlb
cmc
cmp
cwtl
xor
mov
jp
mov
jb
and
push
xor
sub
lea
and
loope
sub
les
repnz
or
dec
arpl
mov
push
or
out
xor
xchg
xchg
rorb
push
jg
and
jge
or
cmp
movsl
xchg
orl
sarb
cld
sbb
mov
insb
adc
testl
xchg
push
out
pop
and
xchg
ja
mov
push
jp
loopne
ret
mov
or
test
cmc
add
xchg
mov
fwait
into
dec
movsl
imul
mov
test
jle
cmp
cmp
loope
ret
aad
cmpsl
mov
inc
out
push
ficoms
adc
pop
push
movsb
xchg
xchg
sahf
fdivl
xor
aaa
nop
sub
sbb
push
xchg
std
loop
xchg
movsb
fidivs
inc
arpl
and
flds
and
sub
or
ficomps
mov
lret
fisttpl
dec
lret
dec
fs
shl
xchg
adc
test
pop
dec
std
adc
pop
mov
test
jo
or
sbb
loop
adc
out
pop
ficoms
pop
xor
movsl
js
jp
hlt
insb
test
push
add
arpl
popa
bound
mov
pop
xor
aam
inc
mov
test
jb
popa
inc
mov
dec
and
jo
lea
push
lret
hlt
cli
sbb
loope
outsl
push
xchg
lahf
xor
xor
mov
negb
xchg
dec
pop
mov
sbb
dec
repnz
dec
mov
sbb
xlat
sub
mov
xchg
nop
icebp
imul
xchg
jge
sub
leave
xor
sarl
jno
dec
sbb
ss
stc
and
lods
ret
dec
fmul
cmp
sbbl
dec
jo
xchg
mov
or
push
pop
movb
and
mov
cmpsl
pop
xor
xlat
jp
mov
es
repnz
pop
aas
inc
dec
repz
lods
pop
add
mull
push
pop
xlat
sbb
dec
icebp
pop
cs
sub
xchg
lret
xor
add
ljmp
lret
lock
pop
insb
gs
jl
sbb
mov
call
push
gs
add
sub
pop
into
mov
inc
mov
ret
lcall
inc
and
xor
pop
pop
pushf
jae
stos
incb
cmpsl
jl
hlt
enter
mov
jmp
adc
test
add
mov
in
sbb
enter
jp
enter
xlat
and
dec
addb
mov
or
push
adc
aam
cld
dec
lcall
rorb
enter
leave
lret
cmpsl
cmp
dec
ja
sub
push
data16
pop
pop
popf
cld
jg
sub
movsb
xor
roll
sbb
cmp
mov
inc
mov
lock
test
dec
out
fnstcw
xor
cmp
mov
ret
popf
adc
pushf
hlt
jbe
call
inc
pop
ret
pop
sub
outsl
or
push
dec
scas
call
xchg
inc
mov
dec
inc
scas
add
lods
shrl
xor
jnp
xchg
ss
xchg
test
cmp
push
push
notb
out
add
add
jb
or
jle
pusha
mov
roll
dec
into
adc
in
jns
xchg
sahf
hlt
fwait
mov
js
lret
dec
aad
sbb
add
call
pushf
xlat
fnstenv
mov
sarb
inc
dec
cltd
mov
mov
mov
ja
repz
insb
fwait
add
jp
insl
shlb
jecxz
in
xlat
ljmp
loope
add
jmp
js
dec
sbb
test
jecxz
add
pop
add
shr
sub
jmp
dec
xchg
arpl
jmp
fs
add
or
add
jg
mov
fcos
scas
dec
jle
add
or
ficoml
das
pop
insb
pop
add
fiadds
sbb
test
fucomip
jge
mov
push
and
push
cmp
xchg
fisubl
mov
or
repnz
inc
sbb
negb
jns
and
in
out
shll
jmp
adc
sbb
movsb
xchg
mov
sarb
fwait
jge
jnp
mov
jmp
inc
test
xchg
jmp
xor
outsl
mov
xchg
inc
adc
incl
fs
cmp
inc
jp
dec
and
movsl
ds
dec
fistps
mov
decl
psubb
shl
shlb
aaa
cmp
aas
jecxz
and
xor
cmp
inc
ja
add
add
stos
add
adc
mov
shr
xor
stos
jmp
inc
mov
pop
push
jno
adc
aad
or
xchg
cmp
adc
jecxz
pop
lahf
xchg
pop
cmp
cmpsb
mov
cmp
pop
cmpsl
inc
loop
dec
mov
xchg
imul
leave
loopne
cmp
mov
push
mov
xor
xchg
jo
adc
lock
stos
push
and
inc
sbb
adc
pop
jp
mov
and
or
rclb
mov
lret
sbb
repz
scas
cmp
outsl
mov
fisubrl
jns
das
sarb
xchg
cmpb
movsb
xchg
pop
int3
jb
aaa
stc
pusha
mov
sub
pop
or
jae
in
stos
int
adcl
or
lret
bound
stos
lods
popf
xchg
mov
xchg
and
sbb
cltd
inc
out
xchg
sbb
or
fildll
push
insl
pop
lret
test
xchg
dec
xchg
shr
push
movsb
lea
xor
or
cwtl
adc
fcmovne
add
dec
push
mov
mov
pop
ljmp
lea
mov
outsb
cli
adc
push
push
std
sbb
cmp
push
xor
pop
call
insl
lahf
stc
pusha
test
mov
dec
mov
dec
jae
mov
mov
testl
xor
xor
in
pop
aad
cmp
repz
sbb
call
fwait
mov
ss
in
jmp
dec
push
xchg
add
stc
sbb
mov
mov
mov
sub
call
cmp
push
mov
mov
adc
aas
leave
pusha
std
enter
std
les
loop
dec
pop
stos
jns
mov
inc
subb
mov
ja
sbb
jg
gs
out
ja,pn
and
adc
and
fmul
stos
xchg
sbb
mov
je
pop
and
mov
movntq
cltd
push
cmp
jp
inc
jecxz
inc
arpl
or
int
test
adc
loop
or
jne
aaa
mov
sahf
je
cmp
pushf
mov
jecxz
shlb
dec
sbb
mov
sbb
dec
jns
iret
lea
repnz
imul
and
jg
shlb
inc
loopne
pop
rorb
sub
aaa
insb
jb
jmp
mov
out
xor
sub
sub
orl
movb
aad
sub
fcoml
call
push
das
jns
ss
mov
scas
sub
push
clc
mov
jle
xor
insl
jmp
mov
pop
push
out
test
sbb
xor
pop
in
adc
mov
pusha
xchg
shl
imul
loope
repz
dec
jb
and
scas
sbb
dec
sub
es
enter
sub
addl
mov
add
iret
pop
push
dec
inc
push
xlat
pop
sub
cmc
pop
rol
sbb
lret
mov
adc
daa
sahf
add
pop
in
push
mov
jecxz
pop
xor
popf
fistpll
and
lahf
shrl
rcl
jne
ret
inc
fwait
lock
add
nop
mov
loop
in
jle
jno
imul
inc
lds
sub
out
fnstcw
push
push
shr
into
sub
jle
loopne
orb
fmull
add
subl
mov
aam
or
cmp
out
fstpt
xor
pop
xchg
mov
fldl
ret
call
nop
mov
test
dec
and
jb
std
sub
aaa
xchg
mov
jl
ret
mov
movsl
rcl
ljmp
aas
arpl
push
xor
jmp
push
into
ds
sbb
punpckhdq
mov
xchg
repz
loop
jle
jns
icebp
sub
mov
xchg
jo
add
jo
hlt
fisttpll
lock
xchg
sub
xchg
add
jle
in
pop
sub
pop
stc
movsb
xor
in
es
xchg
and
push
mov
dec
fisubl
adc
sbb
pop
jbe
cwtl
inc
ret
adc
lods
loopne
jae
jbe
arpl
call
jne
negl
xor
fidivrl
enter
and
lds
andl
jp
dec
xchg
xor
jo
not
repnz
sbb
dec
xchg
out
in
enter
icebp
inc
adc
push
sbb
fs
jns
adc
dec
inc
cmp
adc
mov
inc
cmc
call
fs
sub
push
out
add
out
dec
fcmovnbe
cmc
push
pop
data16
jmp
pushf
fidivl
popa
roll
arpl
stos
fadd
add
xor
shlb
stc
xchg
xchg
and
adc
xchg
sub
in
lods
xchg
sbb
jo
sbb
enter
sti
cmpsb
mov
sbb
pushf
mov
inc
or
out
inc
sbb
shl
jg
sbbb
inc
cmpsb
inc
movsl
mov
mov
fldt
and
xchg
aam
add
mov
xchg
pop
aad
and
js
sar
xchg
cmp
loopne
mov
jno
and
imul
cli
dec
aad
in
mov
mov
mov
icebp
test
jnp
jmp
and
sbb
paddw
repnz
test
sub
xlat
daa
inc
mov
sbb
cmp
cmp
push
imul
sbb
into
pop
inc
sbb
cli
xchg
and
int3
xchg
xchg
mov
or
push
inc
or
mov
fcmovnu
or
data16
stos
rol
aam
pop
inc
cmovp
call
fmull
sbb
cli
inc
jle
pop
push
sub
clc
sbb
sub
lea
adc
pop
sub
fsubr
sahf
data16
jecxz
push
int3
mov
ja
ja
shlb
rorl
out
sub
pop
inc
and
aaa
imul
adc
xchg
test
rcrl
call
fmuls
mov
pop
insl
repnz
negb
ret
pushf
out
addl
cli
jnp
mov
mov
xorb
and
clc
adc
xchg
mov
bound
repz
pop
fisubrs
repz
pushf
js
mov
cmp
add
frstor
xchg
push
out
dec
in
mov
hlt
enter
cmpb
roll
xor
cmp
add
jno
adc
shrl
insb
xor
jb
in
hlt
add
scas
out
mov
xchg
pop
loopne
inc
inc
mov
es
loope
fsubr
dec
add
jecxz
popa
inc
xchg
icebp
ljmp
scas
loopne
subl
and
xchg
pusha
popf
add
in
xchg
adc
mov
mov
rorb
addr16
mov
jbe
mov
adc
jnp
adc
popf
xchg
jp
out
adc
fistl
in
sahf
ffree
xchg
mov
aaa
repz
ror
adc
mov
scas
je
std
xchg
movl
mov
mov
mov
hlt
mov
xchg
jle
sub
mov
test
dec
inc
mov
in
pop
adc
sbb
cmp
mov
adc
mov
push
lods
mov
mov
push
pop
lea
inc
jecxz
mov
movsl
mov
xchg
sarb
fcom
shlb
incb
inc
pop
clc
rolb
ljmp
pop
adc
call
ss
pop
pop
fbld
cmp
push
xchg
adc
shrb
mov
push
adc
pop
dec
pop
push
mov
xchg
aas
pop
loopne
adc
sub
shll
dec
cmpsl
out
stos
jo
cmp
dec
xchg
sbb
and
mov
dec
or
cmp
mov
fcompl
addb
insb
pop
imul
std
loopne
sub
sub
shr
es
fsubr
jbe
sarb
xorl
mov
lcall
repnz
push
or
sahf
call
inc
add
lock
and
lahf
or
mov
fistl
inc
adc
cmp
lcall
add
sbb
dec
aam
sub
sar
orb
add
mov
in
push
or
add
dec
push
lea
mov
notb
cmpsb
jae
jns
mov
arpl
pop
aam
ljmp
adc
mov
pop
push
insb
push
loop
arpl
xchg
decl
cld
rcll
cmp
xlat
sub
test
pop
lods
push
jne
jae
iret
test
cltd
in
push
inc
dec
jno
fs
nop
pop
pop
mov
jp,pt
mov
enter
sti
negl
fnstsw
lds
xchg
jbe
dec
sbbb
pop
lea
fdivs
dec
inc
lret
adc
out
xchg
sub
clc
xchg
cs
lods
jecxz
lea
cmp
mov
pop
shll
dec
mov
sarb
mov
sbb
stc
xchg
xchg
call
add
xchg
in
pop
cld
xor
sbb
adc
or
repz
dec
xchg
dec
push
jge
in
inc
add
xchg
xchg
hlt
les
sub
cmpsb
dec
xchg
pusha
xchg
push
add
add
lods
xchg
add
lret
adc
mov
and
jne
popa
push
cmp
cmp
fdivl
pop
insl
js
pop
fisttps
repnz
stos
inc
into
movsl
sbb
push
dec
pop
out
pushf
leave
imul
pop
mov
xchg
pop
dec
xor
cmp
xlat
bound
mov
andb
adc
outsb
push
fucomp
fcompl
mov
inc
movsl
leave
aaa
dec
fimull
cmp
scas
jge
out
and
push
cmp
sbb
sub
mov
fidivl
xor
mov
arpl
sbb
fistpll
sub
push
fistl
mov
decl
pop
cmp
push
jge
andb
push
outsl
pop
in
xchg
cmc
out
and
xchg
add
adc
shll
ret
mov
test
test
sub
loope
inc
dec
mov
pop
imul
test
jmp
pop
ret
shll
pop
jge
clc
cmp
cmp
pop
adc
sarl
xchg
mov
imul
dec
adc
sub
cld
jne
sbb
in
dec
ficomps
cmp
jp
cmpsb
shl
add
and
sub
cs
ljmp
sbb
mov
cld
mov
in
popf
jmp
cmp
xchg
jmp
push
rclb
imul
in
sub
and
fs
adc
cmp
das
mov
sbb
aaa
insl
daa
sbb
jle
sub
inc
test
mov
in
mov
test
or
shlb
mov
inc
inc
mov
push
mov
insl
sub
pop
out
add
aad
lahf
dec
test
mov
cmp
loop
mov
cmp
pushf
or
mov
adc
push
testl
mov
cmp
fildl
push
push
dec
inc
push
stc
enter
ja
dec
pusha
sbbl
inc
movsl
insb
lea
repnz
jp
popl
cmp
shl
push
mov
jb
rcl
enter
xchg
jno
imul
pusha
add
mov
ds
and
sahf
jecxz
add
mov
test
xor
fistl
in
xlat
cmp
imul
inc
push
dec
dec
cmp
lretw
ret
leave
push
and
ja
insb
or
out
repz
inc
dec
inc
test
add
test
jg
add
adc
mov
out
and
inc
loopne
mov
lcall
push
sbb
jecxz
xchg
inc
scas
pop
dec
aaa
test
fiadds
pop
scas
xor
ficoml
ret
popf
clc
xlat
xchg
mov
or
loop
and
fadd
mov
jnp
sub
outsb
in
mov
loopne
sbb
enter
popf
daa
push
fbstp
sub
push
sbb
pusha
inc
fists
ss
push
lea
lahf
sub
insb
aas
in
outsb
xchg
jg
xor
or
lods
sarl
sub
je
or
sahf
arpl
adc
fadd
in
pop
pop
cmp
les
dec
add
call
jo
stc
or
jmp
pop
mov
sbb
xchg
and
in
or
lret
scas
lea
sbb
ljmp
inc
or
pop
push
dec
out
mov
mov
jo
pop
out
in
push
mov
xor
cmp
adc
cld
cmp
outsl
cli
loope
hlt
add
outsb
cwtl
ja
cltd
pop
add
fdivrl
cmp
icebp
push
adc
mov
jae
mov
and
fdivr
or
or
inc
test
mov
int
jg
test
mov
or
mov
leave
cmp
mov
test
add
lret
dec
add
sarl
jnp
pop
push
les
shll
mov
cld
stos
jecxz
lahf
mov
loopne
sub
jns
in
imull
cmp
aaa
add
std
cmpsb
ja
fisttpll
aad
imul
add
cwtl
aas
test
jle
mov
pop
loope
loop
fnstenv
nop
xor
push
push
dec
xchg
adcb
jle
ret
sub
mov
into
enterw
fidivrs
sbb
repz
aad
aas
sbb
mov
mov
pop
aaa
repnz
aas
pushf
es
mull
repz
jle
pop
loopne
jne
nop
stos
cld
mov
data16
fsubrs
divb
cli
sahf
movsl
rcl
lea
pop
inc
pop
jae
inc
sbb
push
jle
aam
inc
and
lahf
push
cmp
loopne
mov
decl
push
lret
ret
popa
cmpl
int
adc
sbb
inc
xor
roll
adc
inc
pushf
das
call
addr16
dec
ja
lahf
repnz
psubb
fnclex
orb
int
add
pop
sbb
xchg
test
adc
xor
ret
fcmovnbe
outsb
in
addr16
push
and
jb
aam
jnp
push
fs
enter
and
xor
aaa
cmpsl
das
mov
lods
push
xchg
lods
xor
je
or
mov
or
fistl
jl
inc
and
sub
adc
fstl
xor
or
les
in
inc
nop
and
jmp
mov
dec
arpl
out
addr16
adc
push
jg
movsb
cmp
stos
cmp
and
pop
je
dec
push
mov
xor
stos
xchg
loope
mov
mov
jge
mov
mov
xor
jecxz
mov
inc
adc
cmpsb
lret
ficompl
cli
cltd
mov
adc
sub
jg
xchg
fs
sarl
or
mov
test
jl,pt
mov
popf
addr16
adc
push
adc
fsubrs
stos
push
mov
pop
push
cwtl
mov
imul
xor
cmovle
int3
and
push
shll
lods
xchg
xchg
sbb
data16
sbb
lcall
or
mov
push
inc
fmull
loopne
xlat
xchg
fisttpll
jne
sbb
and
clc
jne
gs
movsl
push
dec
arpl
scas
xor
ljmp
mov
and
inc
jle
inc
cmp
cmp
or
aad
lahf
dec
imul
adc
cmc
cmpsl
fcmove
sub
outsl
and
pop
cmpsl
sbb
pop
mov
rclb
rolb
lret
cmp
sbbl
xchg
addl
and
cld
add
mov
cs
pushf
mov
cmp
push
adc
scas
ds
mov
jae
and
mov
sub
cmp
pop
add
and
dec
fnstsw
mov
psubq
or
imul
loope
add
add
mov
call
icebp
mov
rorb
push
arpl
ljmp
stc
jmp
cmpl
stc
dec
xchg
pop
mov
outsl
sub
das
addr16
pop
inc
mov
ret
lds
sub
test
cmp
inc
inc
sbb
xchg
orl
xlat
jecxz
mov
mov
fbstp
sbb
pusha
insb
addr16
rcrl
mov
pop
fdiv
bound
inc
cmc
out
fbstp
pop
sub
filds
sbb
test
shlb
and
in
push
shll
rcrb
leave
cmpsb
push
add
xchg
pushf
fcomip
cmp
and
std
lods
mov
dec
xor
fildl
add
mov
dec
add
cmp
pushf
cmp
mov
dec
fs
mov
roll
js
and
pop
or
dec
jl
sub
jle
mov
lahf
sub
call
mov
sbb
dec
aaa
mov
inc
xor
jl
aam
xchg
or
push
dec
fs
std
jle
test
mov
js
fadd
inc
popf
cmp
scas
mov
popa
mov
hlt
pop
jae
add
mov
pop
aas
lcall
mov
dec
jo
jae
mov
and
push
out
add
rorb
xchg
inc
mov
lds
sbb
or
sbb
ljmp
aam
aam
shlb
jae
imul
lock
or
clc
push
rcr
mov
pop
clc
jl
call
jbe
pop
cmp
mov
sbb
pand
xchg
push
xor
loope
lds
jle
cmpsb
pop
pop
xor
roll
cmp
movsl
outsl
dec
int3
into
inc
pop
pop
xor
fdivl
bound
hlt
push
lahf
add
sbbb
add
add
or
imul
pop
mov
xchg
cmpl
insl
cmp
inc
aam
jae
lahf
out
pop
imul
cmp
sbb
and
inc
lods
test
and
rcrl
xchg
iret
mov
push
jo
adc
inc
outsb
mov
add
xchg
or
sar
std
xor
adc
leave
push
addr16
and
rcll
dec
aam
pop
push
test
bound
sbb
sbb
pusha
jg
or
cltd
lcall
push
std
lds
fs
cwtl
mov
xchg
mov
and
mov
lahf
pop
scas
call
in
pop
fmul
out
xor
cmpsb
inc
jae
mov
scas
lods
add
lret
inc
outsl
push
fildll
pop
pop
fimull
mov
fidivl
mov
add
mov
les
pop
bound
inc
incl
mov
push
jbe
or
inc
mov
mov
add
push
outsb
mov
jp
mov
mov
sub
movw
sbb
mov
sub
lahf
adc
dec
jb
outsl
loope
lods
aam
pop
ss
xchg
movsb
mov
cmp
jo
fwait
out
mov
bound
add
inc
pop
in
out
loop
mov
fdivs
das
and
fidivrl
jo
movsb
and
int3
jg
pop
push
das
mov
inc
inc
fimuls
test
xor
jne
not
add
jo
cmp
push
orl
add
aas
sub
ss
jle
cwtl
or
test
stos
orl
push
out
and
out
cmpl
dec
stos
mov
jle
in
ss
add
inc
push
adc
xchg
xor
in
adcl
enter
loop
pop
mov
add
add
aaa
loopne
xor
pusha
fidivrl
inc
xchg
mov
cld
out
jae
mov
sub
and
out
xchg
push
sbb
and
jno
ficoms
pop
inc
pop
dec
push
in
sub
xor
in
iret
pop
dec
and
outsb
out
shl
mov
fiaddl
call
sysret
dec
frstor
inc
stos
imul
sub
sar
fsubl
out
enter
xchg
stos
mov
enter
jmp
xor
dec
mov
xchg
cmp
mov
jecxz
aam
je
cmp
mov
call
sub
shrb
das
jg
hlt
push
loopne
les
adc
outsb
mov
jbe
add
orb
arpl
jmp
or
push
pusha
testl
pop
inc
bound
add
xor
outsl
xchg
mov
mov
adc
fistps
data16
int3
aaa
sub
mov
mov
cmpsb
loopne
int3
outsb
jl
dec
enter
fldcw
add
pop
popf
cltd
sbb
add
vunpckhps
push
popf
mov
arpl
pop
lock
test
inc
pop
sti
ljmp
xor
add
inc
pop
sbbl
jo
popa
xor
mov
mov
movsl
pop
dec
scas
inc
mov
jae
mov
mov
lods
jmp
mov
inc
xor
xchg
or
cmp
scas
in
dec
je
push
xchg
mov
cmpl
insl
test
cwtl
and
fwait
or
scas
stc
jbe
jbe
xor
shlb
adc
mov
bound
sarb
xchg
mov
iret
out
xchg
enter
sub
jl
xchg
mov
xor
inc
jmp
mov
sbb
sahf
mov
in
xchg
stos
ds
imul
and
sub
jl
iret
ss
cmc
adc
or
cmpsb
loopne
mov
jge
movsl
dec
in
pop
mov
jo
sarb
mov
rcrb
rorl
mov
add
add
ss
sub
mov
xor
lods
test
adc
clc
add
pop
adc
stc
out
enter
mov
push
add
stos
mov
js
loop
cs
mov
addr16
jno
and
mov
jg
imul
stos
loopne
push
stc
sub
hlt
mov
test
inc
mov
fisubl
icebp
push
mov
cmpsb
gs
cmp
mov
dec
jbe
push
inc
dec
dec
mov
not
push
pop
sbb
repz
lods
sbb
shr
pop
mov
in
inc
out
shr
fldl
add
xchg
inc
stos
add
xchg
fucom
mov
cmp
cmp
cmpsl
and
pop
jg
cs
out
inc
andb
dec
into
fucom
sub
sub
dec
push
gs
fdecstp
pop
pushf
cmp
adc
mov
subl
lcall
iret
ficomps
add
cmp
push
fbld
lret
xor
jp
sub
add
int
fnstenv
dec
pop
sub
and
mov
dec
call
cmpsl
ss
pop
pop
scas
jae
loope
sahf
xchg
in
xchg
xchg
js
loopne
dec
mov
aas
movsl
fs
test
mov
test
jnp
popa
shlb
mov
orl
sub
out
and
mov
sahf
mov
mov
aam
mov
gs
xorl
mov
in
loop
jae
outsl
add
lods
or
and
xchg
imul
ret
loop
pusha
xor
add
dec
fwait
shrl
daa
into
pop
jp
push
jge
push
sti
lahf
in
mov
lods
lds
or
xor
mov
inc
push
movsl
push
sub
in
push
loop
popa
xchg
jne
mov
lahf
mov
xor
stc
int3
repnz
pop
cmp
jl
xchg
xor
xchg
push
dec
xchg
stos
mov
xchg
adc
pop
mov
cmp
fidivrl
dec
js
cmp
bound
pop
sbb
jno
dec
les
clc
xchg
inc
mov
stos
xchg
jae
and
lods
mov
stc
lods
push
js
jnp
pop
test
sarb
sbbb
bnd
int3
mov
sub
xlat
push
js
sahf
shrl
or
popf
sarb
stos
loopne
mov
sbb
cmp
ljmp
jg
xor
jae
aad
pop
sbb
push
inc
mov
cmp
imul
pop
add
gs
stc
iret
or
and
lcall
adcb
arpl
bound
mulb
mov
fidivl
in
mov
rcll
inc
daa
and
pusha
xlat
push
in
xor
lds
and
pop
push
pop
pop
dec
dec
pop
clc
mov
mov
or
push
into
push
xor
mov
aad
add
sbb
daa
push
sarb
daa
inc
inc
nop
push
cld
pop
sbb
ret
movsl
cmp
fcomi
xor
inc
lea
imull
push
pop
std
mov
gs
ss
cltd
jae
nop
in
sub
xchg
inc
push
or
xchg
mov
sub
push
inc
adcl
mov
loop
movsb
push
icebp
and
adc
push
cld
pop
dec
jge
rep
push
mov
xor
mov
ja
add
xor
push
test
inc
pop
fadds
fwait
jl
xor
cltd
and
out
sub
push
mov
dec
xor
or
adc
mov
jmp
sbb
jmp
push
pop
arpl
lahf
loopne
jp
ret
mov
std
rep
push
lea
jg
test
cli
hlt
shll
push
insl
mov
adc
cmp
jle
sub
daa
sti
les
push
sahf
pop
push
cmpl
movsb
sbb
cmovl
rol
std
push
cmpl
push
lock
push
cmpsl
push
add
int3
data16
sahf
pop
add
fs
js
in
pop
jecxz
in
into
mov
aad
ret
or
push
push
lods
xchg
rorb
jnp
sbb
data16
in
inc
fbld
add
popa
xchg
adc
mov
mov
daa
sbb
cli
jg
shlb
fidivrl
outsb
xchg
fistps
imul
jmp
shlb
insb
xor
subl
and
push
mov
jmp
push
rcl
das
or
dec
push
or
inc
jle
xchg
mov
ja
xlat
jnp
rolb
dec
pop
in
movsl
in
jg
scas
call
scas
rolb
insl
fwait
pushf
and
mov
inc
imul
adc
rcrb
arpl
ljmp
mov
cwtl
pushaw
fimull
dec
test
jge
mov
std
mov
xchg
jo
cmp
imul
sahf
int3
imul
mov
jmp
add
stos
hlt
lock
ljmp
or
aaa
cmpb
pop
dec
add
incb
or
or
cmp
fnstcw
movsl
std
push
fcom
lock
shrl
or
add
or
aad
and
fcompl
pop
insb
push
sub
int3
add
out
ss
add
movsb
outsb
inc
enter
sbb
xchg
fisubl
add
ret
cmc
push
lcall
cltd
pop
adc
xor
xor
mov
xor
fimuls
adcl
nop
jmp
repz
ja
aaa
sbb
add
jnp
mul
in
enter
xchg
sbb
fsts
inc
lds
fdivrs
ljmp
sub
lcall
addr16
dec
in
cltd
mov
adc
xor
scas
bound
mov
aaa
imul
jns
push
imul
pop
repnz
mov
test
mov
and
pop
xchg
imul
test
mov
lahf
lcall
popa
leave
in
mov
imul
mov
xchg
or
xchg
or
adc
inc
fstps
sbb
xorl
rcrb
pop
loop
mov
jecxz
outsl
add
int3
push
insb
jecxz
shlb
adc
std
ja
sti
shrd
mov
and
rcrl
cmp
inc
cmp
mov
int3
fisttpl
mov
insb
gs
pop
jae
icebp
pop
bound
pop
test
xchg
fnstenv
repnz
aas
inc
scas
mov
mov
fisubrs
cmpsb
push
lea
bsr
aaa
sub
mov
mov
idivl
dec
push
jp
cmp
push
push
push
popa
push
dec
pop
and
push
xor
mov
pop
test
call
pop
neg
rcl
adc
nop
jmp
hlt
adc
idivb
cmc
fsubrs
sbbb
and
pop
mov
cmp
xor
popa
xor
ss
clc
inc
and
int
test
enter
icebp
hlt
mov
sbbl
xor
jge
or
neg
xchg
pop
cmp
mov
mov
icebp
push
je
jl
dec
and
push
inc
inc
pop
fstl
dec
sbb
jle
cltd
insl
jo
mov
and
std
cmp
inc
shll
xchg
or
rcrb
stos
jle
lds
sub
ss
lcall
and
inc
xor
icebp
pop
icebp
bound
in
pop
lods
xor
in
ror
cltd
and
bound
push
sbb
lea
mov
add
mov
mov
lret
scas
jl
sub
sbb
sti
jnp
and
cmp
fstpl
add
jle
mov
addr16
lods
jo
add
subb
jl
stos
negb
ret
icebp
cmp
push
jge
dec
out
cmc
push
mov
or
jne
xchg
fwait
out
cmp
cmp
dec
lock
mov
mov
shlb
sub
sbb
cmp
sub
loope
push
aaa
cmp
push
addl
jl
mov
loopne
loopne
sti
inc
mov
cmovbe
xor
dec
dec
mov
repnz
imul
push
pop
or
call
jp
mull
mov
jle
xchg
cli
test
fsubrs
mov
mov
mov
add
mov
std
loop
pusha
mov
xchg
scas
mov
jnp
cmpsl
mov
lret
adc
into
mov
cltd
pop
fst
push
mov
push
lods
add
xor
rsqrtps
adc
les
fsubrs
jmp
rorb
inc
pop
sub
js
push
jb
xchg
loopne
lahf
mov
jae
push
xchg
std
int3
xchg
add
dec
decb
dec
cmc
bound
and
cwtl
cld
ret
push
add
divb
and
fsub
cmpsb
out
das
xor
or
shlb
frstor
push
cs
fidivl
sub
and
inc
jmp
jo
mov
mov
add
addr16
sub
pop
fwait
je
int
and
test
dec
test
lods
push
call
mov
add
in
in
sub
inc
pop
ljmp
pop
fs
or
stos
lods
fdiv
sbb
or
xor
lods
xchg
aaa
adc
mov
or
inc
scas
fstl
out
jne
sub
mov
or
cmp
pop
das
adc
jle
jne
jae
sub
ficompl
pop
xchg
jecxz
stc
arpl
stos
sbb
outsb
add
mov
add
fsubs
lret
sub
adc
nop
inc
mov
mov
push
xchg
inc
in
xor
xchg
sbb
pop
test
adc
aaa
cld
sub
pop
jns
sub
dec
shll
inc
imul
jle
mov
mov
and
adc
jne
xor
lods
jle
bound
inc
pop
into
jl
dec
adc
call
fstpl
xor
xchg
push
lret
lret
sbb
les
insl
popf
jp
mov
cmp
sbb
pop
daa
mov
cmc
jae
lret
dec
loope
add
and
in
stc
add
mov
pushf
pop
cmpl
mov
mov
and
gs
jne
sbb
scas
jbe
js
aaa
cmpsb
xchg
rorl
mov
xchg
push
lock
outsb
rcr
push
hlt
pop
les
xor
sahf
mov
inc
scas
xor
push
mov
outsl
movsl
jae
jne
cmp
push
mov
fistpl
and
push
cmp
adc
cmpsb
jns
lds
jnp
xchg
lret
dec
sbb
loope
and
stos
movsl
push
in
push
mov
lods
or
les
int3
frstor
mov
movsb
push
push
cli
dec
sub
or
push
imul
bswap
test
sub
push
test
neg
mov
lea
inc
jnp
xchg
cmp
mov
xchg
popf
add
ss
cmp
xchg
mov
xchg
add
adc
pop
or
inc
movsl
test
insl
leave
inc
push
ds
js
stc
mov
outsl
and
adc
mov
jg
inc
mov
cmpsl
cmp
mov
lcall
test
sub
push
test
or
pop
xor
pop
add
lahf
pop
and
loop
inc
push
sub
fisttpl
xor
xchg
sti
mov
test
jbe
ljmp
and
sarb
in
rclb
xor
icebp
jge
aam
jl
jnp
push
movsb
insb
dec
call
in
push
add
shlb
insl
inc
mov
xor
mov
pop
cmp
xor
cmp
lods
xor
movsl
out
xchg
je
adc
and
xor
insl
adc
mov
ljmp
daa
dec
mov
cwtl
mov
and
insl
fcoms
adc
stc
push
mov
jne
popf
repnz
int
lret
sbb
int3
sbb
lods
xchg
mov
cmc
out
sub
dec
xchg
int
imul
scas
int
adc
jns
pop
dec
mov
xor
or
sbb
stc
add
pop
mov
call
jg
inc
popa
mov
push
cmpsb
sbb
pop
inc
xor
xor
fstpl
jmp
mov
jl
add
push
in
jmp
sbb
in
jg
cmp
xchg
cmp
xchg
jo
dec
mov
add
fs
push
shrl
gs
out
and
jp
add
int
mov
loope
mov
stos
pop
cmp
and
cmp
mov
loopne
cmp
push
or
arpl
push
test
jl
and
xor
push
add
call
push
fs
add
aam
inc
fs
ret
loopne
icebp
mov
sbb
fidivs
inc
arpl
fs
jno
imul
mov
divb
mov
push
dec
xor
pop
rorb
xor
popf
ljmp
das
iret
enter
je
sbb
push
es
push
adc
aaa
sbb
jo
or
jge
mov
iret
outsb
mov
jg
xchg
aam
cmc
mov
mov
mov
pop
test
loop
push
mov
ja
jl
aad
cmp
cld
push
xchg
ds
mov
lods
in
fisttpl
pop
mov
jb
pop
out
xchg
gs
pop
sub
jmp
test
in
xor
jno
frndint
scas
cmc
dec
push
repz
pop
xlat
fdivl
rcrb
pushf
jp
and
sbbb
adcl
pop
sbb
cld
inc
out
sahf
call
mov
and
pop
xchg
pusha
jle
push
or
or
cltd
and
jno
push
dec
andb
push
dec
sub
arpl
movsl
jge
dec
and
push
aas
mov
jns
pop
bound
cltd
clc
sub
pushf
roll
inc
mov
stos
push
mov
cltd
xchg
adc
or
ja
sbb
inc
jecxz
mov
mov
into
add
in
push
or
lods
dec
add
cmp
lds
pop
cmp
sti
xor
mov
inc
sub
mov
arpl
notl
lds
out
jmp
mov
scas
cmc
sbb
fadds
sbbb
call
pop
in
enter
mov
push
and
movd
mov
out
out
cmpsl
sahf
push
cmp
dec
sbb
jb
jb
mov
push
loope,pt
adc
cmp
and
fidivl
dec
cmp
xchg
jg
enter
js
movsb
pusha
call
jno
lret
or
stc
lea
mov
neg
cmp
jo
push
cmp
mov
pop
cmp
jne
fistpl
in
push
adc
pop
stos
add
push
xor
cld
cmp
and
mov
out
inc
mov
push
or
push
ljmp
mov
stc
mov
lret
daa
xchg
out
push
mov
cmpsl
push
push
xor
mov
test
xchg
mov
pop
mov
sbb
push
roll
inc
push
je
and
sbb
sbb
sbb
mov
movsb
mov
lods
and
shrb
fistl
lods
and
cs
or
xorl
fsubl
scas
in
xchg
test
sub
aaa
popa
xchg
repz
addr16
loopne
cmc
pop
in
sub
into
adc
mov
cmp
dec
adc
xchg
push
dec
cmp
adc
jb
jl
push
out
sahf
xchg
cmpsl
and
dec
xchg
int
sub
push
lcall
cmp
rcrl
xlat
xchg
jge
sub
andb
dec
andl
aad
jp
cmpsb
lret
pushf
mov
lret
xor
js
push
jecxz
arpl
dec
mov
jne
sub
cmpsb
hlt
sub
into
pop
daa
sbb
aad
and
xchg
adc
repnz
inc
add
loope
cmp
adc
xchg
iret
cmp
xor
cmpsl
aam
outsb
jg
mov
out
pop
push
pop
shll
adc
mov
mov
xor
mov
mov
inc
or
ret
mov
rcr
pop
movsl
imul
adc
es
fdivrs
sub
imul
ja
mov
mov
sub
in
cmp
dec
xor
push
jmp
movsl
popa
pop
insl
movl
mov
fwait
cmpsl
clc
jo
and
mov
in
cmp
shrb
mov
jbe
xchg
int
int3
xorl
loope
cmpsl
addl
xor
jo
hlt
jge
mov
jae
je
nop
dec
mov
mov
push
bound
rcll
loop
cltd
push
movl
sub
lea
lahf
test
test
es
ljmp
roll
jecxz
sbbl
mov
daa
xor
xchg
mov
rolb
lods
and
gs
das
inc
rcrl
int3
bound
shrl
jp
fwait
inc
mov
dec
cmp
sti
fsts
mov
popa
lock
cmpsl
loope
pop
adc
adc
scas
mov
adc
shll
scas
out
push
inc
xchg
mov
les
xorb
dec
test
or
loopne
push
das
rorl
daa
iret
jmp
dec
leave
jge
nop
sti
cmp
daa
scas
jmp
pop
jge,pt
mov
mov
push
adc
cmp
xchg
cs
dec
addb
les
mov
inc
clc
daa
jno
addr16
js
out
pushw
imul
mov
ja
mov
sbb
and
mov
adc
in
xchg
jge
dec
inc
scas
cmp
cmpb
fidivl
ss
sbb
shl
jo
shlb
xor
push
jo
in
sarb
xor
in
test
push
ds
xor
shlb
mov
jle
add
jp
inc
jne
loop
out
lea
pop
mov
mov
cmp
cmp
jl
in
sti
cmp
xchg
mov
mov
sub
or
adc
inc
mov
icebp
je
sbb
stos
dec
pop
mov
call
and
arpl
insb
jge
push
in
xchg
push
ret
xor
frstor
repz
popa
sbb
lock
sbbl
jmp
jl
mov
lods
inc
mov
rol
aaa
dec
xchg
add
das
or
cmc
xchg
pop
mov
pop
lret
setge
ss
int3
add
mov
jnp
sbb
xor
mov
cwtl
jl
mov
or
pop
loopne
push
bound
mov
xchg
loope
mov
pop
or
and
and
xchg
cmpsb
pushl
mov
sahf
cltd
aam
add
mov
push
mov
divb
sti
pop
lea
mov
jecxz
or
inc
sbbb
mov
out
shl
dec
loop
xlat
test
daa
mov
sub
mov
xchg
pop
fldln2
xchg
test
add
loop
je
jae
out
lods
wrmsr
bound
xor
or
lcall
test
push
add
cmpsb
test
js
mov
jge
mov
sub
imul
dec
fs
and
cmp
frstor
sbb
jne
lock
mov
sahf
icebp
lahf
ret
jae
push
dec
pop
std
mov
or
inc
sbb
jecxz
pop
or
std
pop
mov
out
mov
insl
ja
jl
xchg
sbb
outsl
mov
jecxz
nop
mov
out
dec
mov
je
clc
push
cli
dec
lock
dec
cmpsb
jae
insb
dec
pusha
xchg
hlt
fldt
jp
scas
movsl
out
jnp
int3
push
icebp
jb
decb
xchg
insl
adc
cmp
lods
lea
dec
jne
sbbl
cmpsl
mov
cmp
insl
pop
mov
mov
bound
dec
clc
and
lods
bound
pop
push
inc
imul
aam
iret
int
cmp
arpl
insl
lods
andl
mov
icebp
sbb
sub
sbb
nop
mov
lock
imul
sbb
and
lcall
fs
mov
push
fbld
mov
ja
insb
adcl
and
and
jno
lods
ficoml
jp
add
into
addr16
sbb
repz
xchg
ja
mov
mov
imul
lea
insl
sub
std
push
sbb
out
push
cmp
mov
cmpsb
movsb
inc
adc
adc
inc
push
adc
ljmp
enter
in
loop
pushf
or
les
shll
jno
inc
mov
cmpsb
fisttps
fsubs
ret
pop
out
cs
add
push
mov
and
mov
sub
dec
xor
ds
push
inc
loop
adc
sub
lret
mov
dec
ret
cmp
push
aam
dec
daa
test
push
cmp
icebp
push
sbb
popa
cld
pop
rcpps
dec
clc
stos
mov
movsl
imul
push
mov
pop
adc
es
repnz
call
cmc
addr16
outsb
sub
clc
shlb
ret
add
in
xor
fists
sbb
fcomi
mov
mov
sbb
lea
loopne
aam
stos
inc
push
mov
mov
insl
and
arpl
dec
xchg
roll
sbb
leave
cmp
sbb
lock
notl
mov
xlat
adc
ret
pop
cld
outsb
std
dec
inc
sbb
mov
fcmovnb
repz
lcall
mov
push
repz
sahf
mov
dec
mov
aas
out
call
pop
cmpsb
mov
or
adc
or
repnz
inc
pop
sahf
insl
hlt
adc
or
mov
inc
lods
mov
and
mov
insl
pop
pop
jno
and
jo
xor
xchg
negl
insl
daa
mov
mov
adc
insl
jae
aam
or
mov
or
popa
mov
cld
pop
lea
mov
mov
push
fsubs
sbb
imul
roll
imul
lcall
jo
iret
jle
cld
pop
repz
cmp
push
ds
xor
sbb
repnz
ds
xchg
or
push
sbb
movsb
sar
in
loop
into
inc
dec
mov
shl
jne
pop
cmp
sub
xor
jb
movsb
add
push
cmpsl
xchg
ja
jle
stos
mov
xchg
mov
or
xchg
adc
fists
pop
popf
and
xchg
xchg
leave
test
xchg
stc
iret
jbe
in
into
dec
push
xchg
test
mov
mov
test
dec
xchg
adc
insl
jp
shrb
or
and
pop
cmp
adc
push
mov
jae
loopne
ret
xchg
pop
mov
shl
pop
push
sub
stc
out
adc
xchg
fisubs
xor
push
xchg
aas
pop
sub
sbb
push
dec
das
xchg
cmpsb
adc
inc
xor
lds
cmp
inc
lahf
outsl
ja
popf
adc
sub
mov
fcmovnb
das
push
jno
fs
aam
inc
cmc
lock
and
int3
mov
and
repz
subb
mov
sahf
fs
adc
mov
dec
mov
imul
sub
scas
outsl
cmp
pusha
fidivrs
jbe
out
push
jecxz
jge
ja
xchg
jge
insb
xchg
add
dec
inc
cmp
ret
ds
je
or
add
xor
xchg
add
icebp
inc
mov
cmp
jmp
dec
fwait
outsb
sbb
and
or
and
sbb
fldenv
ret
adc
test
pop
pushf
fwait
xchg
mov
outsl
cmp
fwait
inc
or
xchg
push
aaa
lret
xor
push
add
xchg
sbb
pop
addr16
scas
mov
pop
add
jecxz
cmp
lds
adc
insb
push
testb
into
and
divl
lods
or
mov
jo
cs
sbb
scas
or
aas
cmp
pop
xlat
push
push
out
test
lret
les
aas
mov
test
test
pop
insl
sti
call
rclb
xor
je
xor
loope
sahf
ss
mov
xlat
cmp
cwtl
fdivrl
mov
cmp
mov
add
xchg
xor
sub
data16
mov
add
ret
dec
cmc
sub
push
outsl
dec
or
test
xor
push
add
mov
mov
clc
movsl
insl
sub
popa
push
inc
push
clc
jnp
stos
pop
jae
aaa
loop
push
loopne
inc
cltd
in
adc
sarb
cmp
or
sbb
mul
divl
mov
jmp
rol
add
in
xor
pop
dec
int3
and
mov
leave
repz
popa
inc
xchg
mov
mov
pop
and
test
xchg
mov
sub
jg
xor
sbb
sub
jno
clc
test
repnz
pop
jp
jb
mov
add
dec
xchg
jmp
and
adc
sub
mov
aad
xchg
jp
mov
lock
dec
loopne
jp
repnz
out
mov
jns
cmc
in
out
lahf
add
fadds
repz
jb
and
ljmp
push
or
imul
ja
aam
adc
push
das
lods
test
outsb
jge
mov
xchg
std
mov
mov
arpl
mov
rclb
inc
dec
sbbl
and
icebp
sbb
lret
or
add
bound
or
int
sbb
jmp
test
xor
and
lahf
aad
ds
mov
faddl
int
xor
fcomps
addr16
cltd
xor
cltd
sarl
mov
pop
adc
sbb
jo
das
mov
js
mov
xchg
fistps
jne
sbb
ret
adcl
fists
int3
mov
add
xchg
cmp
dec
cmp
pusha
arpl
mov
mov
adcb
outsb
clc
insl
sbb
sbb
or
pop
xchg
adc
pop
xor
and
test
stc
lret
mov
test
ss
out
adcl
xchg
daa
fnstsw
push
mov
bound
and
in
adc
test
cmp
sub
and
outsl
ret
pop
pop
daa
mov
xchg
das
mov
and
add
mov
ret
aas
jecxz
cltd
loop
int3
push
outsl
mov
test
jns
sbb
ljmp
lahf
addl
insb
or
stos
je
adc
pop
cmpsb
popf
xchg
imul
mov
ds
roll
add
dec
sbb
ds
add
outsb
jl
jl
out
push
lahf
dec
sarl
jae
stos
push
mov
mul
or
fisttpll
or
je
mov
xchg
stos
sahf
sti
cwtl
xchg
adc
or
jo
cmp
mov
fwait
loope
movsb
adc
shrl
or
scas
iret
sbb
push
push
loop
and
jae
adc
mov
cmc
out
outsb
fwait
shlb
cmpsb
pop
mov
je
mov
dec
ret
dec
mov
or
inc
cli
out
gs
int
sub
mov
fadds
mov
mov
movsl
fwait
andb
push
scas
or
or
sbb
enter
push
sub
shlb
jecxz
mov
sub
xor
pop
push
idivl
jne
sbb
xor
dec
sbb
daa
mov
dec
fisubs
loopne
cmc
add
xlat
das
lahf
xchg
lret
mov
inc
xorb
mov
jbe
or
rclb
repz
pop
mov
js
inc
jnp
mov
jnp
pusha
push
pop
sahf
test
mov
imul
add
sbb
mov
shrl
cli
lahf
inc
sbb
mov
rol
jo
dec
aas
and
cmp
cltd
pop
pushf
xor
icebp
xorl
pop
icebp
movsl
push
mov
and
cmpsb
ret
loope
mov
dec
push
arpl
adc
in
sub
loop
arpl
mov
push
pop
jmp
imulb
test
cli
cmc
mov
hlt
pop
adc
cmc
push
enter
mov
notl
xchg
xor
lahf
mov
inc
xor
fnstenv
push
subl
mov
aam
xor
dec
mov
jg
and
xor
and
leave
into
int3
jl
adc
inc
cmp
outsl
in
add
mov
xchg
std
lret
fcomi
ss
sbb
add
lret
pop
push
shll
test
fsubl
sbb
sbb
fcmovb
arpl
cmpsl
jg
xor
inc
addb
mov
jg
pop
sub
fsts
adc
cmp
mov
inc
aam
push
push
dec
mov
sub
and
push
and
sar
sub
orb
enter
mov
stos
mov
cmc
push
inc
out
and
sub
or
jmpw
js
cmp
jnp
imul
pop
sbbl
jl
and
mov
lcall
xchg
push
out
enter
xor
shrb
test
or
cmc
mov
jae
sbb
stos
sub
sub
mov
hlt
xchg
inc
dec
ss
rclb
jno
into
ja
bound
sbb
ffreep
sub
int3
ljmp
xor
push
jae
xlat
int3
push
sub
inc
and
repz
inc
lahf
and
mov
lods
loopne
es
lret
ret
dec
adc
in
mov
push
or
jmp
cli
bound
mov
pop
loopne
lock
mov
sub
ret
sub
cmc
xchg
fdiv
dec
loopne
jl
daa
add
sbb
add
sbb
lret
jecxz
fst
sub
roll
jle
in
adc
cwtl
adc
lods
inc
movsl
pop
stos
aas
std
dec
or
xlat
jle
dec
and
fwait
lods
cltd
jl
and
push
mov
xchg
xchg
stc
insb
xor
mov
and
jo
sub
jecxz
dec
mov
gs
jl
sub
in
push
sbb
test
adcb
outsb
sub
add
xorl
inc
insb
icebp
mov
adcb
call
fildll
push
xchg
jmp
shlb
in
roll
test
fcoms
nop
fdivs
ljmp
add
mov
out
mov
xorb
and
sbb
lods
sub
lods
xchg
and
je
aad
adc
in
add
xchg
xor
mov
or
stos
add
clc
nop
insb
movsl
cs
imul
pop
adc
rcll
mov
sub
shlb
mov
bound
push
jne
inc
testl
sbb
insl
notl
sahf
mov
fidivrs
outsb
aad
mov
orb
or
outsl
adc
fdivrl
mov
fidivrs
jb
xchg
or
lods
pop
fisttpl
repnz
jno
sarb
push
js
cmp
lcall
loope
lret
sahf
mov
lahf
mov
lods
xchg
lock
test
mov
adc
pop
hlt
pop
lods
xchg
fstp
hlt
mov
xor
cmpsl
clc
cmp
sarb
xchg
adc
xchg
clc
jge
xor
mov
sahf
or
jl
aam
aad
mov
jae
push
xor
jno
ret
mov
sub
jle
or
add
jns
ja
mov
jle
mov
mov
fildll
lock
lret
mov
je
inc
cs
shl
xchg
inc
pop
sub
ret
cmpl
jecxz
aam
hlt
push
rcl
cmp
mov
cld
js
test
lahf
es
popa
mov
push
out
dec
cli
cmp
mov
xor
inc
jmp
cmp
mov
stos
and
sub
mov
pop
bound
mov
lods
or
call
mov
sbb
notb
jb
shl
fs
pop
inc
icebp
jno
mov
add
aad
scas
test
inc
std
xor
sub
cwtl
pop
and
arpl
push
add
int
rclb
test
and
sarb
xchg
out
popf
mov
xlat
aas
sub
cmp
mov
ds
push
push
aaa
aam
scas
fs
lret
pop
lahf
push
jp
or
dec
repnz
test
pop
mov
mov
mov
fs
lods
subl
pop
fists
addr16
aas
fs
xor
mov
mov
dec
lock
cli
les
js
push
cmc
fstpl
das
mov
jge
adc
jmp
int3
sbb
push
popa
dec
loopne
adcb
xchg
pop
cmp
pop
test
mov
jns
es
push
fcmovnbe
cs
insl
xor
mov
aad
repz
xchg
adc
add
scas
pop
push
scas
fstl
je
and
jo
pop
adc
xor
add
jp
cmpsl
daa
mov
jle
inc
jp
jnp
push
inc
dec
or
aas
cmp
iret
pop
lods
jnp
cmp
fwait
cmpl
jne
add
fsubrl
aas
dec
cmp
or
or
int
movl
pushf
out
xlat
cltd
dec
repz
out
pop
cld
adc
in
cltd
xchg
cmp
call
and
and
jl
sahf
dec
xchg
pop
movb
sub
mov
jmp
inc
pop
pop
es
sti
popf
jl
xor
sub
or
xlat
mov
lcall
jo
insl
add
pusha
lds
mov
sub
xchg
mov
loope
pop
lcall
adc
fldenv
roll
cmp
xor
fisubs
add
adc
in
inc
loopne
xlat
push
out
icebp
or
cmp
test
push
test
ds
cmp
ss
or
call
adc
mov
jno
dec
push
lahf
dec
lock
dec
adc
cmp
adc
add
aam
iret
inc
push
mov
cmp
loopne
mov
jp
cli
gs
idivb
cmc
mov
test
lock
xor
ret
xchg
push
dec
test
icebp
js
cmpb
mov
add
sbbb
add
add
roll
stc
cmp
imul
mov
xchg
cmp
push
fimuls
ds
lret
movsl
aam
mov
xor
jg
inc
in
push
jb
xchg
jle
in
std
pop
lret
ja
jl
movsb
scas
mov
pop
or
outsb
mov
mov
rolb
fwait
scas
jle
fwait
or
pop
pop
pop
popf
into
mov
push
sbb
mov
jge
xchg
lret
pop
mov
inc
inc
push
mov
test
arpl
and
sub
inc
jecxz
push
jno
popa
les
shrb
ss
ja
and
loop
movsl
pushf
ss
data16
xchg
fnstsw
js
jbe
pop
xchg
bswap
xchg
adc
popa
fwait
xor
adc
xor
rcr
push
repnz
leave
xchg
push
inc
pop
sbb
dec
mov
or
inc
pop
jo
or
jnp
xchg
es
push
xchg
xor
fsubl
mov
adc
rolb
sub
aad
sti
dec
outsl
push
dec
sbb
mov
ret
loopne
nop
mov
sbb
sbb
jge
stc
jecxz
leave
lret
inc
cmp
jno
iret
shll
dec
cmpsl
xchg
ficompl
andl
push
push
ret
pop
adc
inc
rorb
add
in
hlt
xlat
push
xlat
inc
cltd
pushf
test
add
int
nop
jo
xchg
inc
loop
ss
insb
jbe
xor
arpl
and
insl
inc
jp
cwtl
or
jbe
sbb
sbb
sbb
add
in
or
jne
mov
push
xchg
in
test
and
xchg
mov
ljmp
fnsave
pop
ret
add
add
jmp
add
mov
adc
ret
push
out
mull
es
out
adc
test
push
inc
lret
pop
loop
jns
cwtl
je
lahf
outsl
sti
cmp
push
movsl
call
pop
push
call
addr16
or
or
arpl
les
lcall
or
mov
daa
in
rcl
adc
cmpsl
imul
loopew
loope
cltd
mov
das
pop
jne
or
into
dec
sarl
cwtl
pusha
push
mov
orb
xchg
xchg
mov
cltd
movsl
mov
lds
xchg
das
xor
pop
or
maskmovq
testl
roll
or
mov
xor
stos
ss
push
push
xchg
out
sahf
cmp
aad
mov
pushf
outsl
mov
push
add
or
mov
mov
ret
mov
cmp
or
mov
cmp
bound
cmp
push
scas
rcr
fstpl
pop
daa
xor
sbb
inc
or
jmp
insb
jo
inc
lods
xor
sahf
call
jle
mov
ss
sbb
pop
pop
movsb
cs
popa
push
mov
loope
loop
outsl
icebp
mov
sbb
inc
insl
sarb
sbb
scas
arpl
xor
fnstcw
jo
dec
pop
das
mov
ror
cmp
and
pop
insl
test
rclb
fnstsw
stos
lds
dec
mov
iret
adc
pop
and
mov
les
push
adc
mov
push
movsb
aam
xlat
dec
dec
and
push
jns
hlt
jle
or
test
cmpb
lods
or
xor
mov
stc
xor
fisubl
cs
jo
cltd
mov
pusha
loop
pop
mov
pop
lods
cmp
jl
and
adc
roll
enter
lds
or
inc
ljmp
movsb
sti
loop
or
adc
les
cmp
xchg
add
test
xor
mov
push
or
push
sahf
jnp
xchg
and
test
xlat
outsb
pop
push
daa
daa
ret
jl
fldt
sub
cmc
fcos
inc
xchg
cs
cmp
ret
mov
mov
test
data16
icebp
insl
scas
push
and
lcall
xor
xchg
fisttpll
ret
inc
arpl
push
loop
xor
imul
ror
push
inc
aas
mov
inc
lahf
notl
fidivl
jo
repnz
fdivrp
or
add
jle
xchg
cld
ss
add
int
inc
xchg
sbb
loop
jg
into
push
call
call
push
shrl
arpl
dec
xor
mov
push
test
repnz
add
ficoms
std
mov
aad
pop
je
ficomps
repz
jecxz
or
jle
popa
jl
cmp
add
aam
std
push
ljmp
out
sbb
fnsave
stc
rorb
es
pop
push
into
adc
inc
repnz
mov
mov
test
iret
insb
xlat
mov
and
cld
inc
pop
add
and
xor
push
adc
fstps
or
nop
sbb
jmp
bound
inc
aad
push
jecxz
loope
push
ja
mov
mov
xchg
lret
push
pushf
faddl
xor
fimuls
shll
sbb
dec
inc
movsl
shll
addl
xchg
xchg
mov
and
sbb
les
xlat
mov
adc
cmc
cmp
push
pop
lds
sub
adc
mov
aas
sahf
inc
pop
dec
mov
insl
pop
dec
cmpsl
lret
mov
arpl
out
cli
gs
outsl
jnp
xor
les
test
xchg
and
sbb
fimuls
adc
mov
cmp
cmp
xchg
sub
leave
outsb
and
in
add
or
arpl
dec
loop
and
lods
lea
ja
inc
mov
popa
movsl
xlat
adc
inc
pop
dec
jp
dec
repnz
rcr
iret
cmp
dec
jno
push
jo
sbb
cmp
cbtw
sub
aam
xchg
xchg
bound
jo
outsb
xor
and
int3
nop
adc
mov
xor
insl
scas
or
jge
pop
pop
popf
jp
mov
xchg
jno
mov
sub
pop
out
pushf
sbb
xlat
test
or
xor
cld
or
nop
dec
and
sbb
mov
fstp
xchg
std
out
testl
adc
jb,pn
sbb
out
or
lock
add
push
inc
mulb
cmpsl
lcall
xchg
and
in
jno
cmp
ret
cmc
nop
sar
popf
fimuls
mov
push
xchg
pop
fbld
pop
dec
shlb
test
pop
mov
insb
aas
scas
ss
sbb
call
bound
int
xor
ss
adc
cmp
push
push
xor
fdivrl
jecxz
lods
or
push
dec
outsb
in
lcall
add
xchg
int3
mov
mov
mov
mov
mov
and
dec
mov
or
imull
inc
sbb
inc
adc
jmp
mov
xchg
mov
mov
out
xor
iret
sbb
inc
nop
add
ljmp
test
and
cld
adc
lds
adc
cmp
sbb
mov
cmc
sbb
outsl
jecxz
imul
pop
inc
sub
leave
insl
in
test
into
insb
ss
xchg
adc
js
mov
add
icebp
test
jno
push
pushf
adc
xchg
mov
mov
inc
pop
adc
rclb
lods
inc
dec
inc
divb
mov
push
pop
pop
xchg
cmp
xor
xor
dec
pop
movsb
fstpl
add
cmpsl
add
js
insl
add
dec
xlat
es
mov
pop
lock
cwtl
xchg
push
jg
cltd
push
adc
cltd
push
sbb
mov
mov
mov
imul
sub
jbe
scas
rolb
lret
ds
add
add
pop
stos
adc
in
lds
dec
mov
lds
aam
push
pop
mov
pop
ljmp
pop
jbe
cltd
leave
sbb
fistps
dec
mov
fnsetpm(287
mov
mov
in
in
lret
jns
xor
addr16
mov
jo
push
push
sbb
pushf
dec
jae
sbb
or
in
out
and
dec
jecxz
shlb
outsl
pop
xchg
jnp
sub
ds
mov
call
xor
ljmp
daa
rcr
shll
js
mov
adcl
adc
les
mov
mov
test
test
and
cmp
jb
sub
bound
jno
aad
sub
mov
xchg
fidivrs
arpl
lret
mov
aas
inc
push
das
cmpsb
out
and
adc
xor
loop
pop
adc
testl
and
mov
and
cwtl
lods
test
xor
decb
rorl
jno
add
loope
push
inc
xchg
adc
mov
or
stos
pop
sub
js
and
jno
pop
or
es
fsubs
mov
aas
mov
sub
test
dec
cmp
fucom
mov
in
add
xor
lock
hlt
pop
xchg
xchg
in
iret
push
add
mov
in
xchg
add
test
lahf
adc
fdivs
cmp
insb
cmp
mov
jns
rorb
arpl
pop
xchg
sbb
int
add
insb
cmp
shl
push
xchg
jmp
jo
add
push
add
dec
jle
lods
pop
mov
scas
aam
mov
pop
sbb
cltd
mov
enter
jbe
xchg
xor
popf
aas
roll
mov
xor
jnp
hlt
gs
sbb
fnsave
push
adc
dec
mov
clc
jbe
gs
sub
dec
sub
aaa
test
jecxz
mov
pop
popf
lret
je
cmp
pop
jl
bound
dec
pop
test
int
jp
mov
inc
xchg
pop
jno
cltd
inc
mov
clc
inc
sub
subb
leave
mov
outsb
pop
imul
inc
out
mov
cli
mov
jmp
repz
stos
iret
shrl
lds
leave
sbbb
cmp
outsl
cwtl
add
sahf
pop
movsl
ja
mov
jmp
leave
jge
mov
sub
into
sbb
rol
sbb
nop
rolb
sbb
in
jb
insl
jb
stos
xchg
xchg
dec
push
lods
inc
test
dec
inc
shll
jl
mov
test
shlb
adc
fsubs
mov
gs
pusha
inc
or
and
loope
notb
jmp
aas
xor
in
movsl
enter
mov
andl
mov
cmp
dec
push
sbb
leave
jle
movsb
pop
dec
xor
cli
mov
out
fisttpl
xchg
repz
add
mov
sub
jo,pn
mov
sbb
arpl
cli
mov
psubsw
push
fisubrs
mov
ficomps
mov
bound
mov
jg
inc
ljmp
cmp
cmp
sub
inc
pop
out
dec
add
jne
les
adc
cli
dec
dec
push
mov
loope
aad
and
out
scas
fisubl
lods
jl
add
cld
mov
test
jne
add
in
mov
and
mov
rcrl
sbb
mov
push
xor
fisttps
dec
mov
js
add
cmpb
lret
push
jo
xor
les
jbe
rclb
loopne
test
xchg
push
ficoms
arpl
sub
pop
jl
jmp
sub
xlat
jp
sub
xchg
push
mov
loop
rorb
shrb
xchg
out
cmpsb
push
lcall
insb
lds
mov
pop
xchg
xchg
push
dec
mov
decl
ret
adc
dec
lea
mov
mov
push
push
pop
push
movsb
movsb
aad
push
outsl
mov
sarl
notl
insb
and
je
mov
dec
fcmovb
stos
inc
in
sbb
scas
jns
jbe
xor
dec
xchg
mov
sti
xchg
repz
mov
cmp
sub
orl
add
data16
daa
imul
in
xchg
jle
pushf
lret
dec
adc
das
int3
dec
and
popf
stc
fstpl
mov
cmp
jne
jl
pop
divl
pop
std
cmp
dec
mov
mov
bound
enter
lea
inc
xor
sti
sti
cmc
xor
movsb
pusha
pop
cld
loopne
inc
shll
in
mov
or
les
sbb
and
sbb
cmp
sbb
outsb
push
je
xor
gs
xor
or
inc
not
sub
mov
mov
imul
push
ss
leave
xchg
lock
or
movsb
sub
xchg
rol
sahf
aaa
lret
mov
push
xor
or
out
xchg
vdivpd
in
adc
call
mov
cli
inc
mov
iret
sbb
icebp
mov
testl
mov
pop
and
lock
add
push
into
inc
andb
mov
mov
aam
call
scas
dec
cmc
inc
mov
and
inc
testl
jnp
out
sub
shl
inc
sbb
ljmp
out
cs
pop
fcoms
sbb
inc
mov
mul
aad
pop
dec
jp
out
aad
sbb
das
xchg
adc
sbb
leave
aad
insb
pop
loop
movsl
les
inc
fs
mov
out
pop
fwait
sbb
dec
scas
mull
mov
pop
in
and
fcoml
sarb
bound
data16
or
mov
out
add
add
rclb
inc
fchs
push
rolb
push
mov
loop
cmp
loop
add
cmp
out
inc
push
leave
test
mov
mov
test
pop
xor
movsl
mov
fcmovnu
fdivrl
ret
xchg
mov
sbbl
dec
pusha
or
lods
js
fwait
icebp
test
inc
adc
adc
aad
or
cmp
loopne
push
add
test
pop
push
out
and
imul
lea
test
push
aad
mov
sbb
std
sub
out
lret
sbb
jb
js
cltd
stos
pop
fidivrs
nop
xchg
movb
pop
sub
ret
js
daa
fwait
cmp
cltd
mov
scas
inc
add
sbbb
pop
pop
pop
jne
mov
xor
mov
lock
push
xlat
das
mov
sub
nop
or
test
out
imul
aaa
adc
xorl
mov
or
jg
arpl
dec
cmp
dec
or
aas
in
cli
and
addr16
idivl
lret
lods
in
pushf
shrl
test
sbb
or
scas
push
and
aaa
or
outsb
in
shll
cmp
push
sbb
loope
push
and
inc
jl
cmpsb
ret
stos
inc
mov
gs
fadd
out
scas
pop
ja
into
xchg
mov
rorb
orl
xchg
and
aaa
gs
sti
aam
lods
sbb
jge
mulb
lahf
lcall
push
sub
das
pop
and
push
inc
and
shlb
nop
lods
dec
out
and
push
inc
ret
jg
bound
pusha
push
orl
add
cmp
xor
popf
mov
and
and
adc
in
out
mov
out
test
stos
addl
stc
out
sbb
ja
icebp
sbb
push
aaa
dec
add
sarl
and
or
xor
sbb
mov
cmp
push
cmp
inc
and
fidivrl
jmp
ret
sbb
sbb
jmp
and
lcall
pop
and
mov
push
repnz
push
pusha
imul
aas
fs
add
cwtl
xor
mov
dec
or
ret
mov
sub
popa
rcl
aam
ret
sbb
into
xor
jbe
test
lahf
in
call
push
je
adc
xchg
insl
ret
in
lea
test
fcom
and
mov
pop
out
call
fwait
lret
inc
mov
pop
xchg
mov
sub
pop
leave
dec
xchg
jg
cmp
das
jp
mov
xchg
xchg
cmp
shll
or
mov
xchg
xchg
inc
aaa
daa
mov
idivl
pop
out
and
imull
cmpsb
aam
ret
cmp
sub
add
sbbb
aam
scas
jne
xchg
dec
mov
nop
xchg
fwait
jo
leave
add
add
jl
jmp
dec
cmc
jne
or
hlt
sub
insl
xlat
push
insl
xor
call
or
test
das
pop
push
lods
push
jae
mov
out
and
aam
mov
or
fisttps
in
rcr
add
icebp
and
cmp
and
test
mov
xor
mov
out
cld
mov
fcomp
shll
fdivs
pop
mov
cld
xchg
dec
fisubl
xor
cmp
cli
push
push
cmpsb
enter
pusha
rorl
xchg
pop
mov
fs
push
push
xor
and
mov
jl
xchg
cltd
cmpsl
inc
adc
ljmp
adc
or
stc
inc
cwtl
xchg
push
and
sub
sub
iret
mov
sub
inc
jl
or
push
movsl
rcrb
jae
ja
shlb
push
outsl
dec
pop
lcall
ret
out
adc
out
addb
dec
jp
cmp
lea
mov
adc
out
pop
rcll
mul
lret
sub
call
movsl
nop
pop
ret
push
insl
fimuls
mov
dec
sub
or
pop
push
fwait
testl
mov
iret
mov
xchg
into
leave
dec
mov
xor
xor
nop
sbbb
lea
xchg
lret
cli
push
dec
fdivp
in
xchg
mov
mov
pop
add
sub
fbstp
and
inc
and
int3
repnz
fcoml
popw
push
jnp
and
pop
cmc
pop
cvtdq2ps
push
inc
ss
add
dec
sub
js
dec
sub
xchg
sub
filds
cmp
xchg
or
xchg
pop
jns
lock
or
cltd
aad
push
jne
xlat
xor
add
std
adc
sti
pusha
mov
push
fwait
jnp
fnsave
sub
daa
cmp
arpl
push
xchg
fwait
lods
aam
jne
in
in
and
push
ja
push
push
sbb
cwtl
lahf
inc
daa
in
mov
or
sbb
je
stc
jecxz
adc
subl
mov
lret
mov
adc
data16
nop
test
mov
daa
xor
xchg
adcb
sub
dec
lcall
adc
int
les
rcll
xor
out
cmp
cmp
sti
cli
cltd
nop
or
xor
std
sti
gs
pop
outsl
orb
out
scas
lahf
cltd
adc
mov
leave
dec
cwtl
test
mov
fcompl
cltd
mov
mov
cmpl
dec
sbb
and
push
or
xchg
pop
enter
repnz
popa
push
add
pop
add
hlt
or
dec
xor
cmc
outsl
cmp
fldl2t
and
enter
lods
dec
mov
or
sbb
loop
dec
cmpsl
pop
dec
int3
fsubrl
insl
lock
inc
arpl
push
push
lods
pop
mov
call
test
pop
mov
mov
cmp
jo
data16
sahf
adc
mov
or
stos
push
sahf
inc
in
pop
leave
pop
mul
dec
add
inc
xor
jo
test
je
imul
and
push
mov
shl
or
pop
xlat
sbb
push
in
scas
mov
push
mov
xchg
pop
subl
aad
or
cmpsl
fsubr
sub
cltd
xor
repnz
and
dec
and
and
push
push
jecxz
or
ret
and
cmp
push
popf
mov
iret
adc
test
hlt
jne
push
or
daa
jle
xchg
stc
fnstenv
dec
out
lret
call
pop
stos
add
xchg
jge
sbb
mov
inc
pop
xlat
xlat
arpl
pushf
mov
ficoms
and
pop
lods
nop
inc
mov
popa
aas
xor
mov
shl
jecxz
js
mov
push
mov
fidivrs
icebp
mov
push
push
or
pop
lds
out
in
inc
repz
mov
add
stos
mov
shlb
shll
pop
in
xchg
push
mov
pop
cmp
push
lods
jno
mov
mov
xor
lods
fadds
mov
cmpsb
in
int
push
mov
sti
xchg
or
data16
xchg
stc
test
dec
jmp
ret
mov
cltd
cli
mov
in
test
adcl
enter
out
int
jmp
testb
fdivl
lds
xor
aas
mov
mov
loope
aaa
aaa
xchg
enter
dec
sub
int
xchg
push
adc
jne
or
push
inc
pop
jp
std
adc
dec
int3
pop
jge
stos
fldl
mov
push
es
push
rclb
lcall
icebp
rcrl
pop
mov
loopne
lock
jnp
adc
pop
mov
cwtl
push
cmpsl
test
dec
icebp
inc
testb
stc
cmpsb
addr16
mov
arpl
inc
addr16
inc
push
in
cmpsl
or
inc
repz
pand
das
add
push
jecxz
fdivrs
fistps
test
movsl
mov
ljmp
xor
int3
sbb
jecxz
in
cmp
sbb
ror
sbbl
lds
pop
fldcw
push
mov
pop
rcrb
sbb
lds
mov
mov
or
scas
xor
sub
xor
or
xor
lret
aam
push
das
cmp
and
pop
and
jle
cmc
inc
test
nop
aaa
sbb
pop
mov
scas
xor
cli
and
arpl
aaa
dec
add
and
add
lods
sub
jno
or
daa
nopl
mov
add
mov
in
xchg
outsl
jmp
xchg
insb
in
dec
jno
fists
xlat
pop
pop
gs
pop
cmp
mov
or
inc
rorb
into
outsl
dec
xchg
nop
adc
cmp
xchg
sbb
enter
test
arpl
dec
push
cltd
and
mov
and
mov
xchg
aad
sbb
jne
inc
adc
cmc
jns
cs
push
push
push
pshufw
pushf
scas
pop
lret
jnp
pop
sti
adc
out
pshufw
inc
daa
ljmp
push
loopne
sub
sub
xchg
pop
cmp
inc
sbb
xchg
notb
add
push
add
xor
je
lret
dec
cltd
cwtl
test
push
cwtl
inc
out
stc
lods
mov
sbb
dec
xor
or
in
jg
xchg
mov
xchg
push
push
maxps
xor
push
rolb
fmul
mov
push
lcall
push
sti
sbb
inc
lds
jge
cltd
mov
pushf
inc
cs
xor
cs
arpl
jno
jle
loopne
jb
cmp
jp,pn
adcb
push
movsb
ret
ffree
data16
insl
sbb
or
fwait
adc
dec
dec
adc
xchg
add
shl
push
test
outsb
pop
xchg
out
xor
fsubs
jne
dec
xlat
fcmove
cmp
jle
js
out
fisubrs
stos
push
mov
loop
loopne
shlb
fiadds
cmp
pop
call
cmp
ss
andl
retw
hlt
and
inc
mov
xor
sub
sub
ret
sbb
push
lock
and
sub
nop
popf
sub
icebp
test
aas
push
pop
jg
int
stc
sbb
bound
ja
ret
add
aaa
in
adc
jp
stos
sub
cmp
lea
rcrb
mov
pop
sbb
lret
mov
inc
movsl
psadbw
pop
cmpsb
sub
in
les
pop
lcall
int3
sbb
ret
movsl
mov
jae
sbb
mov
sahf
sub
rcl
mov
lods
fisubl
loope
jns
test
or
jmp
bound
and
pop
jns
sub
jne
add
inc
daa
mov
xchg
xchg
xchg
xchg
movsl
cld
test
call
mov
nop
in
ss
cmc
fildll
pop
sub
pop
aam
cmc
jl
es
movsb
xchg
mov
movl
bound
jae
push
cmc
push
xchg
cmp
mov
repz
or
ret
in
cmp
int
xchg
dec
sbb
adc
inc
aaa
leave
or
testl
xor
lcall
sti
add
push
inc
push
jmp
fldl
loopne
das
rol
shll
sahf
fs
pop
pop
jp
inc
ljmp
jecxz
mov
loopne
inc
call
pop
bound
mov
aad
fadd
and
cmpsb
jmp
xorb
dec
xor
cmpsb
sub
push
stc
cmpb
push
mov
mov
pop
sti
loope
mov
or
or
ret
andnps
jne
or
and
pop
jne
aas
add
fsubp
outsl
mov
xchg
rolb
lds
mov
insb
or
fbstp
out
mov
jne
dec
push
pop
mov
mov
int
jae
dec
push
pusha
test
or
pop
rclb
or
cwtl
adc
aam
in
pop
jp
xor
inc
fidivs
or
xchg
or
inc
and
lea
or
sbb
jg
cmp
addl
out
jnp
aas
dec
stc
adcl
icebp
fsincos
add
jl
ljmp
sbb
cli
add
mov
rcrl
pop
icebp
jns
jg
int3
lds
cmp
clc
jnp
nop
mov
fs
fistpll
xor
cmp
mov
push
mov
sbb
mov
jo
inc
in
sub
daa
jmp
mov
fs
cmp
popa
movsl
inc
ret
xor
jns
inc
jns
fstps
add
mov
jae
pop
inc
dec
dec
mov
cmp
xchg
nop
inc
test
push
loop
ljmp
push
add
fnstcw
ljmp
jnp
and
mov
adc
lods
fdiv
inc
aam
mov
fstps
xchg
xchg
pop
adc
outsl
mov
pop
sbb
test
sub
ljmp
and
xchg
jne
mov
push
push
jg
popa
push
and
cmpb
divl
or
cld
stc
fisttps
repz
add
stos
aas
jmp
ljmp
neg
push
fistps
dec
jns
rcrb
push
shrl
and
sbbl
pop
ja
sbb
rcrl
roll
nopl
jne
insl
mov
jne
ret
hlt
icebp
loope
popa
mov
mov
out
cmpsb
clc
mov
lock
ds
ret
jae
jne
dec
cmc
xchg
out
pushf
testb
cmp
sbb
iret
loope
jecxz
push
mov
push
roll
jle
jecxz
inc
fisttpll
jno
inc
mov
bound
xchg
imul
insl
adc
mov
loopne
sub
mov
inc
sub
es
outsl
mov
stos
sub
int3
insb
pmaxsw
lret
jne
sub
mov
or
cli
fstpt
lods
xchg
pop
jo
pop
dec
std
cmp
dec
movsb
add
fstpl
in
iret
push
pop
pop
mov
jae
fdivrl
jnp
lea
lea
jmp
jmp
ja
mov
test
sub
ror
ja
mov
adc
adc
or
test
mov
add
mov
and
jp
les
sbb
rcl
inc
daa
clc
cmpsb
xchg
js
pop
jbe
fsubl
mov
out
pop
pop
jno
xchg
mov
dec
aas
std
sub
dec
loope
inc
mov
mov
or
mov
dec
mov
ds
lock
push
sub
xchg
push
or
lahf
mov
jne
out
sbbl
inc
shlb
mov
mov
inc
insb
sti
or
cmp
sbb
rclb
sarb
jg
call
test
je
insb
or
mov
stos
fs
fiadds
mov
in
mov
lea
js
pop
xor
divl
sub
imul
mov
inc
and
movsl
daa
mov
xor
clc
daa
sti
jo
out
ss
cld
cmpsb
cli
xlat
ret
lock
in
test
nop
jne
jo
incb
loope
mov
push
xor
and
pop
and
adc
insl
scas
cli
addr16
in
sarb
lock
xlat
loop
push
adc
cmp
mov
ja
mov
and
ja
sub
pop
sub
test
push
mov
sbb
pop
jl
fstps
mov
je
adc
mov
daa
mov
add
loopne
lea
pop
ficoml
xchg
adc
xor
xor
arpl
mov
sub
repnz
sbb
movntps
rol
pop
outsb
sub
fwait
mov
enter
jo
fs
cmp
adc
arpl
cmpl
mov
or
shll
pushf
jo
les
push
sub
xor
and
jno
rol
pop
inc
bound
fnstenv
mov
mov
mov
push
pop
cmpsb
cwtl
push
iret
or
adc
mov
lret
in
lret
jmp
clc
sbb
aam
jmp
imull
mov
inc
cltd
pushf
and
push
shll
sbb
insl
push
shll
xchg
add
add
mov
pusha
in
pop
hlt
dec
mov
pop
popf
inc
lods
adc
mov
and
addr16
in
jg
inc
push
fstps
ljmp
push
ja
mov
adc
leave
sbb
fsubrl
push
add
std
and
cmp
andl
pop
mov
push
xchg
sahf
stc
cmc
idivb
aaa
popf
sbbl
push
cwtl
push
movsl
outsb
in
imul
daa
and
add
fcos
sub
jo
mov
cmp
in
mov
lods
in
sti
add
xorl
xor
repz
cs
xchg
clc
lret
movsl
rcll
insl
adc
push
sbb
push
mov
jle
test
push
notb
add
or
insl
sbb
fcomps
mov
ds
in
aad
pushf
cld
sub
xlat
sub
adc
push
push
rcl
je
pop
adc
push
cmp
jmp
or
idiv
test
mov
imul
enter
jmp
xchg
adc
out
subl
mov
sahf
cs
and
mov
push
aas
pop
xor
sbb
std
push
or
mov
loope
or
and
xchg
idivl
repz
sahf
inc
mov
push
inc
pop
movsl
add
mov
mov
inc
mov
push
jge
sbb
add
adc
out
jl
or
imul
jbe
dec
pop
fs
jae
fcmovbe
sub
inc
jnp
ficomps
scas
fisttps
or
negl
cmp
cmp
jmp
adc
inc
jg
loop
cli
dec
mov
push
daa
xchg
jecxz
fstpl
xchg
nop
pusha
mov
ret
and
xchg
outsl
fisubs
std
jmp
loopne
and
loope
lret
lds
or
dec
jne
or
add
dec
adcb
mov
popa
or
in
int
decl
push
imul
add
or
push
sbb
cltd
or
sub
repz
shll
imul
std
leave
sub
lcall
rorb
clc
mov
add
cmpsl
pop
ja
cmpsl
jnp
adc
pop
mov
push
mov
jbe
test
add
lcall
mov
push
stos
adc
xchg
test
mov
mov
shrb
sub
test
lret
add
int3
and
xchg
add
nop
inc
rclb
sub
mov
xor
pop
cld
and
scas
cwtl
adc
mov
stc
push
cmp
stos
xor
push
leave
lds
shll
andb
and
and
mov
cmp
mov
cmpsb
adc
test
mov
out
dec
in
push
addl
jne
pop
inc
dec
or
aam
and
or
outsl
cwtl
inc
adc
imul
jbe
xchg
cmpsb
lods
lret
sub
lahf
dec
xorb
andb
loopne
mov
test
mov
push
dec
cli
sbb
push
enter
adc
ficompl
test
add
sub
in
jo
arpl
xor
push
dec
lods
mov
dec
mov
jle
shlb
mov
lock
pop
ret
int
shr
mulb
sbb
mov
sub
jno
jno
aas
pusha
call
mov
imul
leave
jp
fwait
sbb
inc
test
ret
jg
dec
out
pop
pushf
pushf
mov
dec
mov
dec
cld
shll
movsl
movsl
push
fwait
mov
jge
sub
cmp
int3
mov
mov
xlat
push
lods
mov
icebp
adc
push
inc
mov
int3
in
inc
xchg
cltd
jle
jg
aam
jnp
sbb
jb
dec
rcll
sbb
xchg
jmp
scas
movsb
push
cs
push
mov
outsl
gs
sti
hlt
xchg
addr16
or
cltd
xchg
adc
mov
scas
pusha
ss
enter
sbb
aad
jno
imul
adc
mov
add
iret
aas
cmp
jp
xlat
addr16
or
push
sbb
shrb
pushf
push
or
jmp
pop
add
push
xchg
int
into
push
sub
das
mov
cmpsb
test
cmp
push
lcall
adc
jno
clc
rorb
insl
lret
in
cmp
jae
adc
jns
jl
arpl
dec
push
aam
mov
movsl
aas
jno
fisubrs
dec
push
scas
bound
mov
sbb
cmp
jb
bound
mov
testl
xor
xor
sub
push
xchg
cmp
add
into
fcoms
xor
test
loopne
push
adc
loop
or
jnp
leave
xchg
icebp
dec
sahf
push
ss
jmp
inc
ret
outsl
in
aas
push
mov
cmp
inc
mov
xor
in
xchg
sbb
imul
cmpsb
add
ret
sbbl
insl
mov
jno
stos
xor
push
hlt
std
and
sub
jle
ja
xchg
popa
push
inc
arpl
lock
mov
pop
push
sbb
push
lock
xchg
mov
add
mov
lds
mov
push
inc
pop
fistpl
mov
sarb
or
or
add
imul
mov
xchg
std
sahf
fistps
pusha
fdivrs
xchg
or
mov
and
pop
sub
xor
addr16
jns
inc
and
sti
mov
and
push
aam
mov
mov
xor
pop
les
adc
adc
jge
rclb
popf
lea
or
inc
in
rolb
dec
push
xchg
pop
or
xchg
xor
imul
mov
push
or
pop
xchg
jge
jmp
push
dec
push
imull
sbb
fadds
add
leave
or
jg
jl
pop
leave
test
aas
mov
pop
xchg
pop
xor
or
and
xor
or
ja
ficomps
js
mov
js
insl
es
cmc
pop
stos
std
fidivs
pop
pop
outsb
js
addr16
popf
cwtl
mov
test
mov
cltd
jmp
cmpsb
icebp
insl
inc
and
sahf
lods
fsub
cmp
shrb
pop
out
popa
adcl
inc
add
cmp
add
cld
jo
mov
mov
orb
add
ss
inc
cld
rorl
sbb
pop
xor
fdivrp
dec
xor
mov
lods
in
daa
gs
ss
inc
sbb
nop
add
fst
push
mov
frstpm(287
movsb
inc
popf
repz
or
fisubl
sub
jo
xor
test
mov
xchg
mov
mov
adc
mov
sub
sbbb
pop
pop
mov
sbb
aad
xor
mov
in
arpl
pop
jge
lea
cwtl
test
daa
sub
jge
mov
pop
pushf
cmc
lea
mov
rcr
pop
pop
js
add
cmp
sbbb
pop
insl
and
xchg
mov
add
xchg
pop
outsb
in
sbb
xchg
xchg
sbb
cmpsl
xchg
mov
ja
icebp
mov
mov
pop
mov
cmp
ds
scas
and
lret
adc
add
jg
add
rorb
outsl
loop
hlt
jge
ror
sbb
clc
adc
out
mov
pop
push
and
loop
fs
dec
aad
shlb
sarl
ja
scas
sti
imul
aas
out
icebp
xchg
xor
incb
sbb
push
adc
dec
push
je
and
and
sbb
mov
js
shll
sbb
aas
stos
sub
jle
sbb
mov
insl
cmp
lods
or
testl
and
xor
add
sbb
fneni(8087
lcall
dec
jbe
daa
push
fcompl
lods
add
ficoms
dec
push
je
hlt
mov
dec
not
in
jae
pop
cmp
xchg
xor
jg
lahf
pop
les
outsb
je
add
sub
bnd
mov
mov
sbb
outsb
xchg
jp
pop
jmp
mov
in
jl
std
cld
sarl
dec
stos
int3
jg
jp
fnsetpm(287
cs
pop
adc
mov
out
adc
fidivl
rclb
scas
arpl
lods
dec
dec
add
dec
in
or
gs
pushl
shll
shl
add
inc
pusha
in
xchg
jg
scas
sub
add
push
aad
fnstcw
loopne
std
lods
xchg
inc
rclb
lahf
dec
aas
cmp
cmp
xor
data16
pop
push
rcrb
iret
fcmovu
adc
push
adc
aaa
into
lret
jmp
jl
mov
xor
jno
and
jmp
aam
dec
ja
fst
xor
inc
or
and
lock
std
pop
xor
outsl
xchg
and
and
mov
jne
or
ret
jo
lods
fdivrl
dec
in
push
mov
mov
sub
jmp
mov
lods
movsl
push
out
bound
ljmp
adc
sti
adc
aas
pop
pop
test
clc
std
pop
jl
fneni(8087
shr
dec
cltd
mov
add
mov
inc
cltd
ja
addr16
add
pop
test
add
mov
pusha
sub
ss
jle
cli
or
add
jo
pop
or
test
rorb
ficoms
js
xor
inc
jb
jbe
bound
mov
stos
adc
mov
cmpsl
pop
pop
js
jge
cwtl
das
inc
test
push
xor
iret
stos
push
add
cmp
icebp
mov
add
mov
dec
sub
das
and
sbb
dec
and
xor
lahf
aad
in
rorb
pop
pusha
pop
jae
jmp
lods
pop
sub
cmp
test
sarb
orl
mov
addr16
adc
and
pop
aas
jae
and
imul
jbe
cli
sbb
mov
jb
shll
xchg
push
inc
mov
push
cwtl
pop
outsb
fmull
sub
jmp
test
inc
mov
add
mov
or
add
xchg
cs
mov
fadd
adc
das
mov
inc
loope
pushf
les
sub
lea
xor
outsb
sbb
clc
inc
outsl
call
sub
movsl
push
mov
jmp
movsb
jb
lahf
mov
inc
inc
push
and
mov
std
outsb
mov
inc
xor
lret
jge
xor
out
outsl
call
adc
xchg
cmc
lea
sti
xchg
dec
jmp
push
dec
mov
mov
ss
mov
mov
loopne
mov
cmpsl
jecxz
orb
cmpl
mov
mov
aam
mov
add
add
xchg
sti
mov
and
jne
xchg
insb
pop
stos
fildl
sti
clc
adc
pushf
imul
push
xor
bound
add
push
jg
lods
iret
mov
div
adcl
repz
daa
push
jle
sub
xor
inc
fwait
jge
xchg
mov
insl
mov
jae
mov
sarb
dec
cmc
loopne
std
mov
rcrl
inc
andl
movsb
hlt
arpl
pop
dec
sbbb
mov
push
ss
and
ret
push
aaa
xchg
dec
aas
push
add
test
fldt
dec
or
pusha
jl
mov
shlb
inc
cmpsl
mov
loop
xchg
mov
xorl
push
mov
xchg
test
popf
jae
jnp
mov
mov
loopne
imul
lods
testl
lods
rolb
push
insb
sub
gs
jae
fstl
mov
xchg
aaa
repnz
jmp
jge
pusha
lahf
inc
xor
bound
adc
pop
pop
stos
inc
out
cmp
fs
stc
add
notb
jl
notb
mov
add
lock
call
sbb
sub
movsl
mov
inc
hlt
rolb
mov
loope
add
ds
jns
inc
xor
loope
inc
mov
adc
bound
adc
fsubl
enter
testb
ss
mov
popa
lds
pop
adc
sub
test
xchg
xlat
movsb
adc
jecxz
das
and
out
fbld
in
jg
xor
or
inc
mov
pop
and
aaa
pusha
ds
add
stos
jl
sbb
or
push
or
push
jo
xlat
rolb
or
mov
fwait
sub
jp
or
and
cmpsl
jns
jnp
fs
pop
pop
adc
pop
loop
jns
and
mov
mov
pop
dec
mov
fucomp
pusha
jp
sub
inc
sub
push
mov
sbb
fidivs
stos
aam
sub
and
jbe
insb
mov
cmp
fwait
mov
sub
jmp
cmp
pop
cltd
mov
jl
lds
mulb
mov
pop
mov
xor
inc
and
cli
popa
xchg
push
and
call
cmpsl
adc
xchg
adc
subps
pop
xchg
dec
mov
lock
shrl
add
jl
or
cli
mov
dec
jo
jo
imul
xchg
inc
push
adc
sahf
push
daa
sub
pop
aad
div
push
stc
rcr
xchg
into
cmp
out
icebp
iret
xchg
mov
shrb
xchg
sbb
jns
mov
cmp
lock
pop
push
test
aaa
rorb
mov
adc
pop
lret
mov
cwtl
inc
cmp
sbbl
mov
outsb
aas
pop
push
fistps
inc
mov
fcoms
ret
mov
push
pop
scas
xchg
lock
sub
fidivrs
lahf
xchg
mov
and
fistpll
fwait
sub
js
or
cmc
push
inc
fs
jb
dec
mov
das
xchg
xchg
fs
and
cmp
adc
inc
leave
adc
popf
imul
xchg
mov
lret
flds
inc
je
mov
lcall
je
inc
fwait
add
adc
mov
or
jle
pop
data16
aad
cli
jp
roll
sbb
mov
push
xchg
pop
mov
es
nop
stos
or
fwait
out
pop
sbb
mov
ljmp
jg
dec
adc
or
lret
xor
sbb
out
imul
mov
aad
and
pop
adc
into
dec
psllw
push
cmpsb
or
xlat
les
test
xlat
mov
xchg
mov
mov
jp
jnp
imul
hlt
mov
fs
or
in
stos
and
mov
pop
inc
shl
push
mov
ds
add
scas
adc
xor
hlt
add
data16
aad
cmc
cmp
lds
fwait
imul
sahf
dec
cmpsl
adcb
mov
popf
adc
mov
mov
leave
std
call
jnp
mov
lahf
xorb
push
dec
int3
push
cli
and
adc
cmp
jb
mov
sbbl
nop
mov
pop
stc
out
xchg
cltd
push
and
mov
lds
sbb
mov
mov
rcrb
mov
lcall
sarl
adc
call
sbb
xchg
sub
ljmp
and
push
test
ficomps
mov
pusha
push
adc
out
in
stos
inc
imul
les
xchg
dec
xlat
ja
mov
xchg
int
outsl
inc
xchg
pop
ret
daa
sahf
pop
pop
loope
rorl
sbb
dec
js
gs
rcll
js
inc
pop
or
testl
mov
pop
add
jp
icebp
int3
test
in
aas
addb
add
pop
imul
outsb
adc
jg
push
sti
mov
rorb
enter
out
je
ss
rcr
push
enter
scas
cmc
cmp
fadds
sub
loope
push
fmuls
shrl
or
stos
lret
jp
test
sbbl
or
add
jo
pusha
xchg
sbb
dec
push
sahf
push
mov
dec
outsl
cs
les
xor
lahf
fdivrl
mov
pop
in
repnz
jge
mov
ss
fwait
add
dec
call
mov
push
inc
lahf
pop
dec
sbb
jle
xchg
pop
push
and
cmc
push
or
cli
nop
mov
adc
dec
or
adc
lods
jl
aas
add
test
jmp
inc
add
xor
xor
mov
xchg
mov
cmp
ret
adc
xchg
imul
xor
mov
aas
shrl
sbb
pop
lock
sbb
rep
mov
jge
mov
pop
inc
mov
add
mov
adc
jnp
popf
cld
xor
mov
gs
mov
popf
xor
lcall
pusha
les
loopne
dec
mov
rolb
xlat
mov
xor
aas
hlt
popf
aam
and
mov
jns
adc
mov
xor
es
iret
subb
sbb
xchg
lods
movntq
mov
jecxz
push
fstps
push
rcl
outsb
out
imul
inc
shll
sub
mov
daa
stos
sub
xchg
push
push
cs
adc
xchg
cmpsl
call
sbb
gs
mul
pusha
inc
mov
mov
test
push
cmpsb
mov
xchg
int
pop
pop
jb
in
sub
mov
in
xlat
sub
pop
jle
ficoms
inc
mov
in
dec
and
clc
cltd
jno
mov
out
pop
lods
lret
jge
sub
mov
int
rcl
inc
push
dec
es
dec
sub
fcoml
fisubl
sub
hlt
lcall
loopne
insl
and
push
mov
les
hlt
xchg
push
adc
leave
mov
rcl
push
dec
push
and
cwtl
fs
cmp
xor
sti
mov
out
and
sub
and
adc
bound
bound
mov
int
push
mov
mov
adc
call
and
iret
inc
je
dec
insb
scas
negb
xchg
popf
xchg
sub
push
aas
imul
aad
xchg
fistl
xor
push
pop
push
data16
aam
js
bnd
cltd
ds
mov
dec
inc
pushf
jl
sbb
sbb
imul
ficompl
push
mov
adc
icebp
dec
mov
sub
jecxz
pop
mov
and
cmp
outsb
push
out
push
int
mov
cs
addl
or
dec
inc
movl
stos
lret
rolb
fstpl
idiv
aad
cltd
inc
rcr
out
jne
xor
adc
lock
pop
jne
xchg
mov
adc
adc
in
cmp
push
cmp
xchg
sbb
xor
rcrb
jmp
xor
fs
cwtl
or
mov
mov
mov
cwtl
insb
dec
rorl
fucomip
and
and
push
test
add
fbld
daa
push
sbb
and
andl
and
xor
inc
loope
jg
cvtpi2ps
clc
sbb
int3
shl
mov
repnz
call
xor
shlb
pop
pop
xlat
jl
in
push
add
roll
mov
mov
adc
in
imul
rcll
loopne
test
loop
mul
dec
aam
adc
dec
js
xchg
mov
rorb
lods
add
int
andl
adc
sub
or
adc
jne
lds
hlt
stos
sub
das
jg
jno
fldt
test
xchg
inc
pushf
dec
gs
fwait
negb
push
mov
ror
dec
adc
lock
test
nop
dec
scas
ret
jmp
sarl
push
shrl
rorb
loope
mov
cmc
jmp
xchg
das
fistl
inc
cltd
js
repnz
jg
fistl
in
test
ret
iret
jae
js
mov
inc
pop
pop
ss
mov
arpl
push
int
fistps
jle
and
lahf
das
push
icebp
mov
les
or
jnp
int
leave
jmp
dec
cmp
jmp
pop
insb
pop
fs
mov
adc
rolb
inc
insb
sub
mov
loope
sbb
and
xor
lods
xor
fadd
push
and
push
arpl
sahf
leave
mov
movsl
into
out
cmpsb
sbb
scas
mov
mov
and
das
pop
sbb
and
ficoms
push
pop
bound
adc
or
xor
push
mov
loopne
jns
scas
jmp
fidivl
roll
inc
sbb
xchg
jg
data16
mov
nopl
aam
mov
push
or
shr
adc
dec
mov
pop
popf
push
aaa
fcmove
cli
adcb
adc
xor
xchg
aaa
inc
popa
adc
cmpsl
inc
mov
push
incb
and
adc
adc
adc
mov
lds
cmp
xor
adc
pop
and
mov
in
or
inc
mov
cli
adc
mov
rol
movsl
jb
loope
rcll
push
mov
daa
cli
clc
clc
add
shrd
jae
in
int3
leave
test
sub
adc
lods
rcll
cmc
add
mov
outsl
xor
xor
in
pusha
out
push
or
out
jne
jo
cmpsl
fistl
fildll
or
adc
xchg
fwait
icebp
ret
popf
stos
int
cmp
orl
pop
sbb
cwtl
cmp
or
stos
cmpl
xlat
mov
leave
mov
jae
mov
shrl
in
roll
fidivrs
ret
pop
imul
outsl
imul
fdiv
mov
loop
add
add
gs
les
xchg
cltd
adc
ret
mov
push
pop
push
mov
jmp
mov
adcb
dec
push
mov
sub
sub
dec
push
jne
outsb
xchg
inc
mov
and
fiaddl
xchg
sbb
xchg
pop
pop
cltd
ja
fsubp
lret
xchg
mov
xchg
aaa
mov
jg
loope
aam
sub
sbbb
std
mov
sti
push
xor
jg
rcrb
inc
fs
push
ljmp
ss
es
mov
loopne
jg
call
testl
imul
inc
xchg
lret
mov
ret
or
imul
clc
xchg
push
or
fwait
inc
insb
pop
mov
jb
iret
fidivrl
dec
xor
cmpsl
fstp
dec
dec
jl
cmpsb
je
xor
int3
mov
push
dec
push
or
scas
inc
cmc
das
or
or
push
stc
insb
cmp
cmpsb
sub
push
mov
jno
sbb
inc
lock
mov
cwtl
jns
mov
test
and
js
int
jmp
jle
lods
jmp
mov
jo
jg
dec
shl
xchg
nop
or
mov
add
or
sarl
cld
pop
jp
ss
dec
movsb
pop
or
mov
bound
daa
fwait
inc
ficompl
adc
inc
xlat
das
pop
dec
cli
mov
jecxz
rolb
outsb
add
cmp
aas
leave
stos
jmp
test
pop
repnz
cmpsb
cmp
and
inc
test
push
sub
xor
mov
pop
test
testb
or
pop
loopne
sti
mov
mov
popf
arpl
push
jnp
test
pop
jle
jne
ret
jle
test
push
out
das
cmp
xlat
adc
jge
mov
mov
push
mov
add
jne
inc
fwait
adc
lahf
fmull
jne
add
lds
repnz
pop
mov
pop
and
mov
jbe
adc
and
adc
mov
pop
mov
ret
jbe
fwait
loope
lods
jg
out
in
xchg
jp
dec
xor
das
and
dec
fldenv
mov
xchg
cmp
inc
adc
mov
mov
testl
push
sarb
dec
inc
mov
lock
add
or
filds
js
in
fs
bound
sub
nop
pop
push
dec
outsl
mov
adc
addr16
clc
bound
int
sub
fcoml
adc
mov
pusha
loop
sub
or
jge
cld
aaa
dec
jge
pop
sahf
dec
movb
ret
dec
xchg
xor
popa
je
js
scas
cmp
jl
aam
sbb
or
jp
adc
mov
or
fildll
dec
dec
sbb
lret
add
pop
mov
jle
pusha
push
sbb
into
jno
pop
mov
sbb
sahf
sub
push
push
mov
jnp
test
sub
xchg
add
js
sahf
and
jno
clc
or
and
lcall
dec
mov
jg
mov
in
and
out
jmp
jp
test
ja
call
test
fistl
sbb
in
cmp
xor
int3
or
aaa
out
mov
int
enter
or
push
mov
adc
popa
cmp
push
call
into
lea
test
int
das
and
ss
mov
pop
mov
scas
add
push
sbb
movsb
movsl
fs
pop
in
jb
push
leave
jns
adc
cmp
xlat
js
in
sub
bnd
adc
xchg
add
std
mov
stc
fldenv
inc
and
mov
sub
js
test
pop
mov
or
out
insb
push
lds
leave
xor
mov
mov
lock
or
and
jmp
pushf
mov
adc
lret
into
daa
push
mov
and
ja
mov
dec
inc
xchg
jge
cs
pop
dec
pop
psubusw
ljmp
xlat
lods
cmp
dec
cmpsl
adc
imul
mov
icebp
mov
push
pushf
inc
cmp
or
pop
jp
loopne
loopne
push
push
jnp
inc
and
pop
test
jecxz
shlb
ds
idiv
add
faddl
adc
dec
je
stc
insl
sub
push
leave
xor
pop
fistl
jg
ds
mov
int3
pop
pop
lds
fldt
dec
mov
roll
fildll
cmc
outsb
pushf
push
adc
xchg
xchg
adc
andb
jg
add
scas
pop
jg
pop
cmpb
cmpsl
dec
cmp
lods
mov
cmpsl
mov
cmp
and
call
xor
ret
jne
jno
or
sub
dec
sti
xorl
mov
sbb
dec
pop
in
enter
adc
sbb
out
or
add
xor
fidivrs
sub
jae
lock
cli
add
out
sarl
lret
mov
cld
push
add
xor
xchg
stos
rcll
fnstsw
and
push
notb
mov
xchg
xchg
push
jbe
out
lcall
arpl
cmpl
inc
pop
sti
jp
jnp
dec
repnz
and
shlb
sarl
cmpsl
pop
es
jg
test
daa
mov
arpl
scas
test
cmp
mov
and
fistps
pop
stc
in
push
cmc
sbb
jbe
xchg
mov
loope
add
adc
cmp
out
mov
cmp
mov
cmp
fcoml
out
xor
push
and
push
jmp
push
push
test
mov
xrelease
push
int3
and
push
sub
pop
pushf
pop
sarb
add
adcb
dec
or
shrl
mov
daa
rcrl
cltd
jg
aas
mov
sub
rclb
cld
je
mov
enter
sub
ret
mov
movsl
and
pushf
add
fisubrl
in
cmp
push
cmp
push
push
arpl
jo
inc
pushl
outsl
or
and
inc
scas
adc
sbb
mov
push
cmp
jecxz
push
in
fwait
pop
cli
adc
loope
inc
sbb
inc
pusha
jl
cmpsb
bound
jp
imul
es
cmc
or
jecxz
stos
iret
mov
test
dec
cmpsl
xchg
sbb
push
pop
fistl
arpl
lods
repz
dec
sbb
add
push
sarb
jmp
or
enter
fnstsw
jp
loopne
mov
imul
ficoms
sub
repz
fistpl
fldt
ja
mov
hlt
push
push
or
push
shlb
xchg
imull
jnp
pop
push
dec
sub
lret
mov
js
sub
sub
andl
andps
lods
rolb
subb
mov
jo
and
jg
mov
mov
xor
inc
ja
lret
bound
pop
imul
xor
and
add
nop
dec
xorl
mov
xchg
pushf
clc
loop
jnp
stos
fstps
ss
pop
inc
jnp
add
adc
jmp
imul
mov
jp
cmp
movsb
imul
mov
adc
adc
cmpsl
pop
pop
xchg
vmovhps
adc
pop
jl
call
or
rclb
push
cmp
enter
inc
enter
xchg
lret
xchg
enter
xchg
in
test
jne
out
mov
ficomps
ja
sahf
jo
imul
jnp
mov
in
push
push
pop
pop
mov
jo
out
repnz
inc
out
push
pop
sub
popa
inc
dec
arpl
sbb
insb
lcall
mov
arpl
adc
imul
adc
mov
push
scas
popw
sub
clc
fisubrs
in
mov
mov
and
jp
cmp
insb
aad
hlt
andb
xlat
dec
cmp
jecxz
and
lods
jns
addl
add
shlb
adc
stc
jle
cmp
outsb
dec
jo
jne
adc
mov
pop
xor
cmpb
jns
in
xchg
adc
rorl
pop
mov
call
les
lret
cs
repnz
mov
in
loope
fsubrl
lret
xchg
jno
mov
rorl
cmpsl
lods
andb
loope
and
adc
xchg
push
cwtl
mov
inc
test
sub
adc
xor
mov
fadds
mov
jge
xor
shrl
and
mov
sar
imul
jle,pt
push
jge
jne
outsl
xchg
push
or
jg
mov
mov
and
push
repz
push
dec
shrb
pop
sti
daa
rcl
clc
sub
subl
pop
lds
movsb
cmp
sbb
shll
cmp
xchg
inc
mov
jmp
cmp
enter
movd
orl
mov
cmp
xlat
inc
pop
in
jl
inc
imull
and
ds
stos
add
add
xor
stos
outsb
dec
adc
lock
pop
movntq
out
test
xchg
jae
mov
and
jb
or
gs
cwtl
loop
addl
adc
sti
and
fdiv
mov
cmp
je
pop
adc
add
lret
push
mov
std
dec
inc
inc
mov
mov
cmp
mov
xchg
popf
sub
xor
outsl
outsl
mov
push
or
sub
insl
inc
or
xor
mov
aam
xchg
xchg
mov
in
das
xchg
outsl
mul
pop
inc
std
and
push
and
out
mov
xor
insb
lahf
fwait
jmp
sub
jle
es
pusha
fsubrs
cli
enter
xchg
arpl
sarb
sbb
mov
sub
mov
cs
sti
push
int
cmp
ss
push
pushf
cmp
shlb
push
dec
shl
jb
add
dec
cld
dec
mov
dec
push
imul
mov
ret
pushf
movsb
bound
clc
push
pop
lcall
pop
mov
mov
mov
roll
sbb
cli
add
outsb
arpl
imul
jecxz
les
xor
fwait
push
lret
scas
ret
rep
adc
sub
outsl
sbb
and
jle
xchg
into
push
dec
cmpsl
lea
pop
and
insb
test
enter
inc
pop
jle
add
dec
xchg
stc
test
rcrl
or
aad
cs
xor
loope
and
inc
test
gs
cmpsl
leave
fmulp
les
mov
out
in
sub
cltd
sbb
adc
cld
fwait
xor
icebp
outsb
fstpl
jp
test
mov
lcall
pop
out
push
pop
std
lds
daa
mov
sbb
ljmp
lret
jne
pop
mov
call
insl
pusha
jnp
sbb
sub
fwait
inc
lcall
inc
inc
sti
mov
mov
hlt
lret
mov
xlat
lea
jp
nopl
xchg
add
dec
xchg
push
xchg
pop
aaa
mov
test
mov
push
subb
pusha
pushf
and
jns
daa
adc
xchg
shrb
xor
add
xchg
adc
das
sbb
sub
jne
sahf
jecxz
mov
rclb
test
into
test
cmp
hlt
xchg
outsb
xchg
pop
push
mov
add
adc
dec
and
or
xor
mov
mov
in
mov
mov
xor
cld
mov
cmp
loop
dec
mov
ret
lods
cmpb
jmp
out
cmp
jle
outsb
fisubl
adc
cmpsb
xchg
repnz
mov
rcrb
insb
adc
frstor
xor
and
sub
leave
imul
sub
in
pop
push
jge
int
adc
mov
mov
mov
shl
dec
lahf
std
xchg
fstps
push
fidivrs
jge
inc
mov
sub
subl
ss
arpl
mov
xchg
fmulp
jnp
sub
xlat
push
mov
repnz
scas
cmp
pop
lods
ret
ds
aad
inc
cmp
cltd
jne
lret
xor
cmc
or
xor
daa
in
nop
inc
push
sahf
sbb
add
lea
sbbb
mov
call
lahf
data16
push
sarl
jns
add
out
out
adc
and
mov
es
sbb
int3
outsb
in
insl
jmp
ret
adc
jl
sub
fidivl
xchg
fsubl
cmpsl
sub
push
or
xchg
mov
sbb
xchg
ljmp
mov
loopne
shr
sbb
cwtl
sub
xlat
movsb
ss
pop
fwait
xor
mov
cli
and
test
dec
repnz
ret
sbb
add
pop
jmp
xor
outsb
mov
outsl
std
addr16
push
rclb
iret
fdiv
div
sahf
lret
clc
xchg
push
lods
stos
and
mov
pop
cli
int3
bound
cwtl
das
mov
js
fbstp
out
sbb
pop
int3
dec
aaa
mov
push
pop
loopne
sub
arpl
pop
inc
ds
push
push
loop
mov
or
pop
sub
dec
daa
xchg
dec
mov
jecxz
add
mov
sbb
adc
icebp
xchg
jmp
jns
pop
lcall
lcall
pop
or
cmc
push
xchg
push
in
mov
mov
insb
jg
addr16
out
test
cli
mov
adc
xlat
loop
mov
je
add
fisttpl
jmp
and
or
shlb
adc
clc
fisubrs
mov
sbb
push
ss
mov
adc
mov
movb
clc
test
dec
xor
in
mov
inc
mov
outsb
sbb
scas
cwtl
int3
or
or
js
aad
cmp
mov
iret
lcall
jmp
iret
outsb
aas
ret
xor
loopne
in
clc
xor
adc
inc
jmp
mov
idivl
in
shlb
push
adc
repz
sbb
or
repz
lods
add
imul
aaa
pop
cmp
adc
push
cmpb
std
fistpll
push
push
sahf
dec
push
test
mov
imul
test
xchg
push
in
xor
ljmp
movb
mov
addl
inc
mov
fstps
mov
cmp
sbb
aas
sbb
out
add
or
in
iret
mov
sub
js
push
lcall
inc
into
add
aaa
xor
sbb
rol
mov
push
daa
shl
sbb
adc
mov
jb
popa
out
inc
in
inc
fnstenv
mov
rolb
mov
clc
pop
ret
push
lcall
jb
fidivl
lods
enter
in
ljmp
or
xor
cmp
scas
in
xchg
cli
fiaddl
push
mov
pop
or
nop
pushl
stos
add
mov
sbb
push
push
jmp
fiadds
jge
sbb
fists
scas
pop
mov
arpl
push
subb
pop
aad
fucomi
fimuls
inc
mov
hlt
push
xchg
das
dec
cld
or
shlb
or
push
jae
or
push
movzbl
shl
pop
pop
and
fidivrl
mov
lods
je
jne
enter
xor
or
sti
das
fidivl
cli
mov
xchg
pop
mov
mov
adc
int
mov
inc
push
push
dec
jge
js
xchg
xor
arpl
fisttpl
icebp
pop
cmc
loopne
jnp
cmovb
push
cwtd
lods
cmpl
inc
adc
xchg
jnp
pop
loop
mov
dec
jnp
or
mov
sub
shlb
call
mov
cmpsl
test
cltd
in
loop
push
push
ficoms
rcrl
add
jae
fstpl
jb
lcall
jp
adc
sub
fadd
xchg
leave
cmp
bound
xor
aas
xchg
test
cmp
adc
push
rolb
out
and
cld
dec
inc
out
lock
addl
inc
icebp
xlat
sbb
push
inc
dec
out
lock
or
jnp
mov
push
jp
mov
in
ja
and
movsb
test
add
int3
jb
lahf
dec
fisttpll
mov
iret
jg
jns
iret
fsub
out
lods
and
repnz
int3
and
jne
adc
nop
jp
or
dec
xchg
lcall
inc
lods
imul
aam
fisttpll
testl
fs
and
int
mov
in
adc
inc
xor
sbbl
and
decb
mov
xor
das
lock
jne
jle
and
hlt
lahf
sbb
add
pop
xchg
push
xor
sbb
pop
adc
pop
in
in
js
adc
repnz
pop
or
ds
lret
data16
cmpsb
push
lock
cmpsb
sarb
adc
lea
int3
test
mov
push
hlt
psubb
aam
sub
out
iret
mov
pop
add
add
xor
subb
in
fnstsw
shr
lods
rcrb
jae
xchg
inc
movsl
or
xchg
push
es
push
incl
in
leave
cld
into
ret
repz
or
mov
xchg
pop
icebp
pop
aas
div
mov
sarb
jmp
and
xor
mov
mov
xchg
jecxz
aam
xchg
scas
es
lods
js
pop
push
mov
xor
mov
adc
or
call
add
or
dec
repnz
lret
loop
mov
add
lahf
rorb
xchg
mov
sbbb
mov
call
adc
and
sti
or
icebp
dec
inc
pop
stos
add
push
jbe
cwtl
dec
out
cmp
idivl
cmp
arpl
xchg
push
xchg
dec
xchg
xor
outsb
mov
xor
or
or
pusha
mov
mov
mov
shr
in
or
sbb
lock
sbb
mov
fists
lcall
jmp
clc
and
call
jmp
rolb
add
jg
mov
jo
roll
xor
jae
push
add
test
push
in
adc
sbb
stc
xor
setae
out
inc
inc
xor
xor
xor
mov
ds
loop
insl
cmp
xor
pop
xchg
pop
adc
adc
nop
mov
pop
or
outsb
cmpsb
movsb
jb
inc
xor
imull
in
jnp
mov
test
sbb
inc
and
dec
nop
cltd
stc
jmp
adc
sbb
mov
pop
mov
pushf
lahf
sub
mov
leave
adc
xor
ret
xchg
in
mov
pop
rclb
push
sbb
cmc
ljmp
test
inc
xchg
fsubr
xchg
mov
pusha
sbb
pop
cld
mov
aad
pushf
stc
and
outsl
jno
pop
insb
xchg
jb
mov
and
nop
mov
cmp
pop
bnd
mov
jnp
pop
sbb
adc
fldt
jne
shll
dec
xor
xorl
adc
lcall
repnz
loop
mov
clc
xor
roll
xchg
sub
aaa
lahf
mov
add
outsl
je
inc
or
sbb
imul
aam
xor
and
es
out
lcall
ljmp
mov
outsb
cmp
mov
mov
jae
pusha
jl
push
mov
pop
and
jge
loopne
lcall
xchg
daa
cmp
push
mov
adc
adc
push
jns
mov
es
je
push
mov
inc
mov
leave
into
cmp
sbb
lds
jns
stos
cmpsl
arpl
mov
and
jp
dec
fistpl
inc
loopne
les
into
add
pop
hlt
inc
lret
cmp
cmpsb
jl
cmp
pushf
push
jb
ja
push
mov
in
pushf
sub
lret
push
jae
xor
dec
stos
sbb
sbb
jge
aam
mov
sbb
and
outsl
shll
lea
and
xor
stc
lods
scas
pop
dec
and
pushf
jg
enter
or
dec
nop
push
mov
clc
pop
mov
pop
lret
js
jle
mov
sub
sbb
fxch
pop
push
repnz
inc
cmc
push
cwtl
inc
add
cmc
mov
add
shrb
sub
hlt
jne
jae
sti
std
icebp
sbb
add
add
addr16
call
xlat
inc
jp
pop
stos
jae
popf
cld
mov
sub
bound
imul
popa
shrb
mov
push
loop
repz
mov
into
cmpsl
mov
cmpsl
inc
sub
adcl
mov
fnstsw
test
outsl
adc
mov
cmp
xor
es
scas
sbb
xor
or
inc
and
shl
xchg
subl
mov
aam
jge
add
lds
mov
test
cmp
fistps
mov
xchg
ret
jae
mov
adc
jb
push
or
xorb
mov
stos
inc
or
stos
popf
xor
mov
arpl
xchg
enter
or
mov
cli
mov
jae
test
push
std
add
xor
sub
clc
push
mov
push
jmp
repnz
inc
adc
jae
push
outsb
dec
js
fnstsw
inc
sub
xchg
js
mov
mov
jp
and
xchg
sub
adc
push
arpl
mov
lock
cmp
add
jmp
dec
inc
jo
jnp
clc
cmp
mov
std
cmp
cmp
mov
xchg
adc
dec
ret
rcl
ret
dec
loop
pop
pop
insb
sahf
cmp
aad
int
cmp
push
popf
or
jae
jae
lret
test
jno
in
sarl
cmp
mov
mov
adc
mov
insl
push
dec
std
cmp
rcrb
or
lock
pop
xchg
mov
push
add
sbb
mov
fldenv
ja
ret
and
or
icebp
jne
outsl
mov
cmp
pop
lcall
aaa
add
mov
sahf
pop
dec
aam
aam
xchg
mov
push
mov
or
and
push
push
xchg
pop
dec
imul
and
ret
sub
pop
mov
cmp
addr16
mov
adc
and
movsl
xor
mov
mov
mov
xor
std
cmp
jecxz
daa
cwtl
and
pop
dec
add
sub
pusha
jb
mov
out
dec
and
push
test
jbe
sahf
sub
loope
test
xor
xchg
hlt
dec
mov
or
ja
add
pusha
in
cmpsb
mov
nop
mov
dec
add
mov
test
adc
into
cmpl
in
pop
sbb
dec
leavew
in
js
dec
fldl
out
in
dec
enter
int
nop
test
mov
lea
add
call
push
cwtl
test
pop
lcall
cld
mov
pop
inc
ja
push
negb
dec
cmp
xchg
xor
test
icebp
or
out
shll
adcl
xchg
repz
je
outsb
lahf
cs
add
and
cmpsb
pusha
ss
pop
out
mov
loop
xor
decb
pop
dec
call
push
loop
sub
scas
lock
xor
loope
cmpsb
mov
bound
xor
cli
jle
fcoml
inc
sti
rcrl
ficomps
jle
cli
pop
pop
cmp
dec
pop
xchg
test
mov
testb
dec
daa
pop
insl
call
mov
sub
fimull
iret
add
arpl
jecxz
aad
repz
jns
or
xchg
mov
movsl
pusha
jnp
shlb
inc
xchg
mov
dec
data16
outsl
sub
jbe
jge
push
xor
mov
fs
into
pop
fnstenv
dec
out
ss
mov
inc
sti
and
aaa
rcrb
mov
pop
test
or
dec
xor
aaa
sbbb
dec
lock
sti
mov
fistps
add
mov
ljmp
jno
dec
sub
into
inc
xor
sub
xorl
dec
and
cmpsl
in
push
pop
add
ror
loope
stos
mov
cmpsb
mov
mov
jo
ss
leave
xor
xchg
mov
or
addl
add
push
sub
inc
lods
jo
xlat
iret
pop
mov
outsl
out
push
push
sar
pop
inc
repz
stos
dec
ret
cltd
das
adc
fnstsw
mov
daa
loop
inc
js
xlat
call
push
in
clc
fistpl
test
cmpsb
loop
loopne
repz
repnz
call
add
fisubrs
daa
data16
fs
sub
in
push
push
add
mov
cmpb
sub
sahf
loope
xorb
mov
decl
mov
pop
fs
shl
mov
in
jl
dec
mov
pop
ss
cltd
jns
cmc
mulb
xchg
push
sahf
testl
xor
push
lea
call
inc
sbb
ret
inc
mov
pop
lods
cwtl
movsl
dec
cmp
and
sbb
jns
clc
dec
sub
arpl
xchg
nop
leave
cs
ret
xor
arpl
sbb
mov
mov
jb
cwtl
and
sub
jbe
adc
cmp
insb
and
ss
mov
std
push
jno
mov
in
and
pop
pop
adc
mov
adc
or
sub
mov
xchg
test
movsb
mov
sbb
jbe
rep
icebp
or
mov
lret
lret
cmpsl
fnstsw
rcll
and
mov
cli
mov
loop
add
or
sbb
inc
inc
inc
cmp
mov
sbb
sub
cli
xor
or
cmp
jns
adc
mov
pop
je
cmc
pop
mov
mov
push
add
push
jg
outsb
and
push
sbb
xor
or
jne
icebp
popf
aad
jnp
push
enter
sub
nop
in
mov
lock
ret
jge
imul
jne
jo
adc
lret
int
xor
sub
imul
daa
jbe
ret
ja
call
mov
push
push
push
call
push
and
stos
kmovb
push
dec
sbb
ror
dec
push
xchg
add
fisubl
cmpsl
stos
daa
xchg
xchg
inc
fsubs
cmp
std
sti
sub
or
mov
cmc
mov
and
divl
push
xor
xchg
les
test
fcompl
inc
out
push
insb
push
gs
fs
mov
dec
push
and
test
push
xchg
dec
xchg
or
push
std
xchg
and
adc
and
mov
xchg
mov
push
mov
lret
outsb
inc
mov
inc
daa
add
jmp
aad
into
pop
sar
and
int
inc
mov
subb
add
cwtl
jne
mov
xchg
sbb
inc
mov
insl
jnp
jbe
icebp
aaa
ja
xchg
pop
and
iret
or
jbe
push
mov
cmpsb
xchg
and
jb
aaa
insl
mov
xchg
stos
xchg
repnz
js
or
and
repnz
in
and
cli
jge
jl
lcall
movsl
hlt
lahf
sbb
sbb
gs
jns
movsb
jl
cltd
pop
jb
dec
dec
das
mov
sbb
inc
imul
not
mov
fiadds
push
lods
pusha
sbb
test
out
adc
fistpll
cmp
pop
sbb
xchg
aas
lods
xchg
or
inc
sbb
ficompl
shrl
clc
icebp
in
adc
mov
fcmovnu
mov
outsl
jne
gs
or
ds
fsts
hlt
mov
cs
lds
jns
jp
loopne
push
cmpsb
orb
add
hlt
ret
aaa
out
mov
add
dec
cmp
mov
fiaddl
rcrl
mov
pop
mov
mov
pushf
pop
mov
scas
mov
outsb
enter
fmul
repz
push
fldcw
icebp
lock
mov
sub
cmp
sub
mov
sbb
push
adc
sub
loop
inc
loope
loopne
mov
mov
jbe
out
or
pop
ds
mov
and
push
cmp
pusha
push
mov
sub
ja
mov
cltd
xchg
xor
jo
std
xchg
bound
dec
adc
jae
mov
data16
push
mov
cmpsb
mov
jne
js
sub
rorb
jbe
sub
push
cs
movsb
push
cmpsb
mov
sub
push
loope
mov
cmpsb
cmp
lds
frstor
call
add
dec
call
or
and
jbe
pop
sti
adc
cld
fdivs
dec
cmpsl
aam
push
cmp
dec
pushf
mov
adc
add
lea
outsb
xor
lods
or
es
or
mov
loopne
push
adc
mov
sub
cmp
mov
mov
or
push
sub
mov
in
push
xchg
mov
filds
es
popa
out
shrl
lock
aas
popa
jp
out
aaa
add
adc
mov
in
mov
push
mov
and
sbb
push
cmp
jmp
push
test
xchg
jmp
mov
ficoml
lcall
mov
les
mov
sub
inc
sub
or
and
jae
ficoml
es
xchg
fiadds
icebp
push
clc
dec
jnp
xor
inc
or
pop
or
or
fs
or
xlat
movsb
inc
sbb
repnz
push
mov
push
fwait
push
adc
inc
das
jmp
push
cmp
mov
mov
iret
lock
fcmovnu
flds
dec
mov
adc
dec
hlt
rolw
ret
xchg
fsubrs
daa
shrl
fldcw
adc
jne
fisubl
in
cli
jae
out
xor
pop
mov
orb
stos
xor
jmp
mov
je
pusha
jno
sub
mov
cltd
arpl
gs
push
roll
sub
and
jb
daa
mov
adc
xchg
dec
imul
mov
cmp
pop
out
int
push
test
decw
int
jne
mov
ja
and
xor
mov
aam
and
adc
cmp
jecxz
xchg
aas
push
push
push
sub
cld
mov
test
dec
push
or
add
into
stos
into
lret
aam
divb
cs
add
xor
jecxz
les
lods
dec
insb
das
mov
mov
or
jbe
pop
leave
add
pop
in
sub
xorb
push
push
out
pop
mov
pop
sbb
xor
inc
in
push
mov
push
in
jmp
fadds
push
sbb
fmull
ror
sub
mov
dec
in
add
mov
cli
pop
mov
mov
int3
pusha
stc
push
add
ss
les
ret
dec
insl
xchg
movsl
mov
mov
rclb
and
sbb
popf
aam
xchg
sbb
add
pop
addr16
push
std
or
je
inc
and
clc
or
in
test
xchg
mov
iret
popf
xor
adc
mov
and
mov
call
int
inc
lahf
add
xchg
inc
jb
mov
lock
lea
les
push
inc
out
movsl
push
in
xor
ret
ret
lea
outsb
daa
into
jb
ds
xlat
insb
loope
lods
jl
mov
arpl
shlb
xchg
or
cmp
clc
ds
adc
jne
clc
fistpl
inc
clc
mov
xchg
mov
push
or
pop
cltd
add
imul
cmp
jno
push
push
push
fcmovbe
subl
pop
pop
adc
mov
jl
in
in
cli
je
xor
pop
imul
lahf
or
das
imul
push
sahf
std
or
pop
loop
mov
je
call
aam
jb
icebp
adc
xor
dec
xor
ret
mov
pushf
inc
bound
jmp
and
mov
xchg
jns
pop
flds
sbb
push
ss
and
lds
push
in
pop
push
cld
out
lods
lcall
fxch
mov
lock
lods
in
sbb
push
imul
imul
out
outsl
inc
xchg
das
popf
xchg
inc
daa
xchg
cmp
flds
sub
hlt
jo
mov
mov
jnp
xor
inc
outsl
enter
mov
mov
inc
out
add
in
cmpsl
push
icebp
fsubrs
mov
adc
lds
inc
jno
and
cmp
movsl
sub
gs
into
stos
fcmovbe
push
dec
cmpsb
lods
insl
cmpsb
xchg
push
ret
stc
push
adcb
lcall
push
jp
imul
adc
fidivs
scas
pop
cwtl
mov
mov
mov
inc
cmp
jg
dec
test
push
xchg
xlat
inc
or
and
xor
lock
push
cmp
xchg
in
xor
and
fisubrs
jb
test
sub
movsl
fnstcw
rcrl
xchg
int
mov
adc
inc
xchg
xchg
xchg
mov
mov
sbb
jecxz
jbe
jns
lods
sarb
aam
test
lds
cwtl
add
mov
pushf
xor
aam
pushf
ljmp
outsb
cmpsl
orb
stos
cmpsl
vpsraw
push
mov
leave
psubsw
pop
imul
nop
in
sar
lea
lret
ret
sub
dec
jg
push
sub
xor
lea
lock
xchg
jae
add
xor
jnp
cltd
cmc
lea
jmp
and
xchg
out
mov
loope
cld
or
nop
loop
nop
push
outsb
xlat
lret
xchg
xchg
fbstp
and
lret
sbb
mov
push
pushf
dec
test
jae
push
outsl
xor
lods
push
data16
shll
stos
adc
mov
pop
inc
mov
push
add
cs
and
scas
scas
adc
mov
jnp
add
push
dec
in
xchg
sbb
cmpsb
xchg
sub
fildl
test
cmp
jl
mov
loope
inc
and
jle
dec
sbb
mov
hlt
cmp
xor
sub
fadd
push
jnp
gs
push
sahf
xchg
adc
mov
movl
icebp
test
xchg
fwait
imul
and
test
push
and
out
push
aaa
fsubrs
pop
popa
xor
lods
mov
sbb
cwtl
popa
je
bound
dec
mov
push
xor
push
xor
sbb
xchg
scas
sti
cmp
stos
sbb
popa
out
sbb
repnz
loope
pusha
out
testl
push
mov
push
cwtl
out
loop
scas
jo
test
inc
cwtl
rolb
movsb
out
daa
in
test
cmpl
xchg
and
cs
add
inc
and
push
adc
jp
sbb
ja
test
int3
add
xchg
icebp
sbb
js
xor
scas
scas
sub
ds
es
daa
add
ret
mov
pop
data16
sarl
add
and
pop
inc
pop
dec
or
xchg
inc
push
xorb
jnp
dec
scas
leave
loop
mov
insl
mov
jmp
out
and
popa
insb
mov
mov
pop
xchg
pop
popf
fs
sub
lret
stc
mov
dec
push
pop
mov
lahf
repz
mov
scas
sbb
into
mov
sub
nop
lock
data16
loop
lret
mov
repz
pop
fstpt
ret
xor
jno
sbb
mov
stos
inc
mov
mov
bound
test
leave
call
icebp
cmpsl
adc
and
add
imul
aaa
and
iret
adc
sbb
mov
and
mov
sbb
int
cmpb
push
or
lahf
push
loope
decb
sbb
add
or
repz
je
pop
mov
jg
xor
les
inc
pop
push
int3
mov
int
xchg
mov
sbb
aam
inc
or
xlat
sbb
ret
mov
mov
dec
push
jmp
push
pop
push
xor
mov
addr16
outsl
sbb
add
jmp
insl
and
adc
xor
mov
lret
popf
ret
mov
jbe
push
mov
mov
andl
hlt
cld
mov
dec
movsl
adc
cmp
leave
movsl
sub
push
int
and
aaa
xlat
jp
movsb
or
insb
je
adc
mov
sbbb
jb
lret
daa
lcall
cmp
mov
adc
xlat
mov
in
dec
sub
dec
sub
mov
add
adc
add
leave
cmp
jb
sbb
imul
push
add
sub
imul
jb
pop
add
lods
in
push
and
lods
push
cmp
int
jmp
int
decl
int
fldt
jae
clc
js
or
add
or
jge
ja
repnz
mov
lea
xor
xor
push
cmp
repz
daa
xchg
loopne
inc
add
sbb
jmp
dec
cmc
imul
dec
and
lcall
paddusb
add
cli
adcl
and
xor
ret
je
fdivs
sub
std
call
mov
sub
jmp
dec
sub
sub
in
xchg
sbb
adc
cmp
lcall
pushf
push
add
pop
dec
mov
lret
push
xlat
or
adc
push
sub
pop
sahf
je
push
repz
jmp
sub
bound
imul
pop
push
and
jge
push
inc
out
mov
jns
outsl
xor
testl
pushf
mov
mov
xchg
fwait
loopne
pop
sub
ljmp
jnp
notl
andl
je
mov
cmp
and
sbb
mov
pushl
lcall
test
and
imul
mov
pop
push
push
imul
div
test
popa
inc
roll
div
mov
jle
xorb
mov
stos
sbb
and
add
rcrb
sarb
jno
jae
pop
sbbl
cmp
mov
mov
cmpsb
ss
mov
push
pop
fs
flds
or
mov
xor
jo
jno
inc
push
jbe
aas
fisubrl
push
mov
lahf
lahf
cs
mov
loopne
mov
data16
aaa
cmp
mov
shl
lods
dec
sub
aas
cld
aaa
and
jp
outsl
pop
sbb
lcall
mov
xchg
dec
sub
pop
insb
jl
and
test
add
mov
cli
jbe
xorb
out
cmp
push
shlb
dec
xchg
jmp
mov
outsb
push
or
mov
cmp
je
cmp
pusha
nop
jp
sarl
in
adc
inc
test
jl
push
jge
lret
push
cmp
in
imul
fsts
jp
dec
push
rcl
shll
pop
mov
mov
dec
in
mov
ljmp
ja
js
fadds
test
fistps
enter
and
mov
push
jae
and
sbbb
lahf
jae
lods
jae
scas
bound
outsb
xchg
les
das
fnstsw
arpl
das
cltd
mov
sub
cmp
dec
pushw
leave
mov
jo
addr16
cmpsb
sbb
mov
push
stos
jle
scas
cmpsb
loopne
lock
out
pop
xor
mov
insl
leave
push
or
loopne
sbb
inc
fsts
push
pop
dec
dec
inc
out
outsb
add
ljmp
out
push
xorb
stc
mov
bound
lods
pop
out
test
inc
fld
mov
xchg
test
movsb
sub
fcmovne
pop
bnd
fdivrl
aas
sbb
gs
stc
mov
rclb
push
add
xor
jle
jge
sbb
sub
push
sbb
fmull
nop
cmp
xchg
loopne
mov
loopne
popf
pop
cmc
pop
push
ds
sub
out
nop
mov
and
movsb
stos
fisubrs
push
push
gs
jmp
mov
jmp
scas
xchg
mov
fisttps
jmp
adc
jb
dec
pop
pop
sbb
add
add
and
ror
push
adc
adc
cmp
fwait
notb
sbb
ss
xchg
inc
fcmovnbe
cs
mov
sbb
xchg
dec
jl
xlat
iret
aad
pop
pop
add
addr16
pusha
jecxz
push
pop
cmp
push
push
rolb
xor
push
movsb
je
gs
outsb
sbb
xchg
xchg
test
inc
push
cmp
pop
out
ds
push
rcll
mov
aaa
aam
out
jp
inc
or
ljmp
fcomps
add
push
loope
sub
and
inc
mov
mov
pop
cmp
xchg
mov
inc
mov
stos
lcall
push
inc
inc
dec
pushf
xchg
jp
popa
stos
adc
sbb
pop
sbb
push
mov
mov
or
lock
push
push
data16
sbb
mov
mov
or
jp
xor
pop
call
dec
pop
sub
sub
ss
imul
jbe
pop
std
outsb
test
int3
mov
pop
call
add
sbb
add
scas
sbb
aad
mov
mov
add
mov
and
push
pop
imul
inc
imul
outsl
adc
pop
aaa
jle
xor
dec
ds
or
popl
fists
ja
in
dec
mov
xor
push
into
mov
inc
fs
jb
lcall
inc
test
dec
fimuls
sbb
ret
imul
ds
fsts
adc
int
int3
cmp
jnp
dec
popa
jae
push
xchg
push
fcmovbe
or
pop
inc
sub
or
scas
call
push
sti
scas
push
inc
cmp
push
int
cld
sarl
add
cwtl
push
pusha
pop
icebp
jns
addr16
sbb
shll
push
fwait
nop
xchg
add
mov
sbb
add
cmp
pop
or
adc
add
sbb
sbb
mov
arpl
cmpsl
jo
pop
test
cmp
jg
cmc
inc
mov
sub
int
inc
inc
sbb
lret
out
pop
in
or
add
cwtl
js
mov
mov
jne
popf
jnp
inc
test
imul
shrb
fs
inc
loop
iret
dec
and
mov
push
mov
lea
xchg
roll
add
call
inc
inc
leave
shrb
cmpsb
fcomi
fimull
or
sbb
fisttps
jae
xchg
cwtl
xchg
add
aad
jne
inc
pop
jmp
mov
inc
inc
cltd
lcall
jge
cmpsb
rcl
cmpl
or
aad
push
mov
pop
and
push
push
push
fbstp
ja
xor
shl
jecxz
mov
sub
jo
jne
dec
sbb
xchg
jmp
aam
cmp
adcb
xchg
pop
gs
out
jns
into
pop
xchg
or
test
jns
xor
loop
xor
mov
imul
and
mov
xchg
int
cmp
movsb
mov
mov
ror
jge
out
rorb
xor
pop
mov
insb
into
pop
cli
dec
mov
and
adc
pop
and
lds
add
pop
rclb
stos
sub
les
imul
lret
inc
push
scas
lds
mov
and
jnp
dec
out
push
and
shlb
dec
jle
mov
push
jl
jl
pop
xchg
sbb
sbb
mov
and
or
aad
jno
scas
in
or
in
in
sbb
std
push
add
push
dec
dec
rcll
sbb
or
dec
loop
fidivrl
sbb
mov
add
imull
call
mov
mov
pop
int3
adc
int3
std
cmp
lds
test
aas
xor
pusha
pop
int3
cld
in
lea
pop
fucompp
dec
fwait
cmp
mov
filds
sub
add
cmp
inc
insl
jge
cmp
jle
out
sub
in
popf
sbb
lea
cmp
jbe
sbbb
cmp
cmp
and
aam
cmp
mov
flds
push
mov
sbb
icebp
movsb
call
cmp
push
mov
mov
ljmp
stos
cmp
sar
jno
or
in
or
fwait
rol
adc
outsb
insl
das
lock
jecxz
movsb
sub
mov
addl
sbb
mov
jno
hlt
jmp
std
loope
mov
stos
and
leave
mov
pushf
insb
cmpl
jb
in
ret
or
lods
rorb
cwtl
in
imul
inc
aad
loopne
dec
jnp
out
mov
out
mov
mov
outsb
sbb
hlt
sbb
mov
lds
repnz
cmp
outsl
push
pop
inc
mov
or
cmp
pop
call
test
inc
test
rorl
and
fs
and
xchg
cwtl
cbtw
or
pop
or
cmpsl
xchg
imul
mov
sahf
cmp
add
fcmovu
inc
movsl
xor
dec
xor
xorl
mov
xchg
cwtl
movsl
xchg
lret
sub
cmp
enter
adc
scas
adc
gs
jnp
scas
push
test
xchg
shr
fimuls
iret
jl
push
iret
jae
or
mov
mov
add
mov
xchg
imul
sub
ja
dec
ret
jmp
dec
lret
pop
or
jecxz
add
pushf
sbb
subb
inc
adc
mov
mov
aad
ja
cmpsl
dec
xor
mov
xchg
stc
aaa
popa
popf
ljmp
pushf
jne
jno
lods
test
insl
sbb
xor
and
subl
mov
in
aad
js
jmp
out
mov
ja
pop
call
add
mov
dec
mov
test
xchg
jbe
add
jmp
daa
out
call
or
dec
mov
sti
call
push
add
insb
inc
mov
inc
and
xor
adc
mov
mov
sbb
xor
imul
jnp
les
xor
imulb
or
mov
mov
outsl
sbb
adc
cld
rolb
adc
pop
mov
xchg
xor
push
mov
jb
cmpsl
in
push
pop
leave
test
insl
dec
aam
mov
pop
cmp
jno
scas
or
pop
sbb
mov
fadds
lock
mov
leave
add
sbb
daa
mov
inc
cmp
and
fidivrs
movsb
fdivrp
and
dec
lret
mov
mov
sub
mov
fisubrl
mov
cmp
popl
dec
pop
add
lcall
cmp
lahf
lret
ficoml
pop
dec
dec
add
xchg
pushf
mov
mov
pop
imul
push
in
jb
ret
imul
dec
mov
cltd
mov
cmpsl
test
aaa
or
xor
idiv
popl
clc
push
jns
test
inc
pop
arpl
inc
dec
rorl
cmp
lcall
xor
xor
std
push
cli
jle
scas
insb
push
xchg
lds
popf
xchg
sbb
lods
lods
adcb
mov
ret
fwait
out
int3
dec
adc
jl
xor
scas
lock
inc
mov
pop
scas
jge
lret
sahf
cmp
jge
sbb
xchg
ds
lret
push
mov
imul
xchg
into
mov
movsb
lahf
in
inc
inc
pusha
js
lock
pop
ds
loopne
adc
loopne
cmp
scas
imulb
dec
jo
jl
mov
cli
lcall
scas
xor
xchg
inc
dec
mov
sbb
les
pop
jne
pop
sbb
insb
or
pop
jno
sahf
hlt
scas
andl
addr16
inc
insb
enter
mov
jmp
imul
xor
lods
ja
fsub
xchg
in
and
int
push
sbb
insb
pop
push
mov
scas
cld
mov
nop
into
cltd
mov
test
add
cs
mov
ja
rorb
pop
jns
shld
jbe
mov
mov
mov
or
mov
popf
in
mov
push
mov
bound
lret
mov
cs
sti
sahf
call
push
fisttps
mov
push
loop
outsb
dec
xorl
jo
mov
ret
pop
pushw
in
inc
pop
dec
fwait
dec
or
jp
jbe
cmpsb
lret
xor
scas
insb
int3
inc
stc
aam
sbb
mov
hlt
test
and
bound
test
movsb
loope
mov
jge
popa
loopne
arpl
outsb
push
int3
pop
push
pop
int
pushf
inc
into
imul
bound
pop
pop
jmp
outsl
dec
mov
outsb
movd
jns
cmpb
jp
jbe
pop
ss
stc
cld
sbb
hlt
pop
flds
push
sub
mov
add
xchg
jl
jbe
les
sbbb
test
mov
pop
adc
lea
lea
jbe
addr16
cli
xchg
xchg
cmpsl
cli
lods
cmp
mov
orl
aad
fisubl
cld
xor
and
jp
insb
mov
pop
sbb
sub
adc
test
adc
dec
js
stos
mov
shrl
add
mov
lahf
mov
sub
xchg
mov
push
mov
mov
xor
bound
cltd
outsl
jbe
mov
fwait
xor
leave
add
lret
es
mov
pop
test
and
inc
pop
scas
push
and
xlat
lret
scas
and
lods
add
adc
mov
fwait
pushf
and
int3
les
adc
mov
adc
mov
lds
idiv
stos
sbb
lods
out
aaa
sbb
repz
mov
leave
or
cmpsl
int
xor
icebp
mov
es
das
fwait
mov
dec
pop
mov
xor
mov
mov
sbb
mov
mov
fadds
ret
repnz
cltd
std
dec
cmp
cwtl
cmp
mov
jb
or
enter
xlat
inc
lahf
popf
in
insb
jge
jae
cmc
movsb
pop
out
shll
cs
cli
lcall
pusha
fidivrl
fisttpll
or
sub
sbb
jo
sahf
add
xchg
jno
insb
enter
insl
pop
call
adc
cmp
jno
insb
sub
adc
inc
in
pop
push
ret
or
xchg
cmp
jb
mov
daa
xlat
xor
std
xor
jno
push
pushf
xchg
mov
or
dec
sub
js
pop
cmp
mov
ret
int3
pop
ret
pop
adc
in
pop
cmp
nop
sub
and
testl
cmp
jp
sbb
negl
into
pushf
fiadds
lcall
add
and
sub
ss
frstor
mov
fisubs
cmp
cltd
push
shrl
pop
push
fstps
mov
or
mov
xchg
adc
rorl
int3
scas
aas
test
jnp
repnz
or
push
ss
test
cmp
mov
pusha
int
and
mov
cltd
sbb
sbb
clc
mov
jmp
jp
stc
mov
scas
addr16
addl
test
inc
fidivrs
fsubp
arpl
mov
add
xlat
inc
out
scas
cmpsb
imul
cmc
aas
dec
jae
outsb
push
jl
push
daa
add
scas
cmp
test
xchg
push
scas
clc
jo
pop
dec
or
movsl
scas
push
in
rolb
pusha
subb
test
int3
xor
clc
out
lret
imulb
shr
mov
push
push
movl
xor
jns
cmpsl
sub
fcomip
dec
in
push
cltd
pushf
mov
mov
psadbw
lock
mov
jne
mov
inc
pushf
jle
stc
adc
or
fcoms
lret
cli
out
mov
lcall
sub
jne
xchg
adc
int
push
add
cmp
int
lea
jmp
fs
push
out
ljmp
sub
cmp
int
lods
subl
call
mov
mov
mov
ja
adc
test
out
jae
cld
loope
in
jl
clc
sbbb
cmpsl
andb
rcll
mov
fistps
cs
fwait
iret
cmpsb
call
mov
pop
in
ja
js
insl
cli
in
or
loop
dec
enter
add
jb
jne
jnp
ja
dec
lret
ljmp
pop
inc
inc
push
push
out
inc
adc
push
ss
fcomp
enter
mov
dec
xchg
cmc
adc
insl
push
xchg
push
aad
test
sub
mov
imul
sbb
jecxz
inc
lea
sbb
fcom
dec
icebp
insb
into
push
fdivrs
test
outsl
popf
sti
cmp
xor
pop
lock
in
and
aaa
xchg
or
ret
mov
decb
ud0
adc
xchg
aas
mov
das
mov
pop
daa
mov
popa
pop
push
push
jl
dec
subb
push
stc
jo
adc
mov
mov
pop
inc
push
test
shrl
cmp
add
or
daa
inc
push
ret
fcmovu
lock
int
pop
pop
std
mov
leave
imul
dec
leave
lret
icebp
inc
mov
inc
loopne
xor
notb
inc
adcb
inc
aaa
push
push
insb
out
xor
push
lret
out
fildl
repz
lahf
scas
mov
push
imul
sbb
push
mov
pop
popl
and
out
mov
add
xchg
xchg
mov
mov
dec
xlat
shrb
jge
mov
pushf
mov
aas
mov
popf
or
aas
mov
jb
stc
sarb
fdiv
movsl
ud0
cld
data16
in
sbb
mov
test
repnz
inc
mov
mov
sub
dec
adc
sti
aam
fists
int
adc
hlt
test
movd
mov
ja
and
adc
mov
fwait
mov
mov
mov
js
jl
sti
mov
andl
or
xchg
ret
aad
push
cs
adc
pop
and
imul
fwait
dec
test
jno
inc
xchg
test
sub
jmp
sub
xor
clc
mov
cmp
pop
sahf
cmp
push
lret
mov
mov
cmc
add
adc
shll
adc
push
dec
dec
jle
lea
mov
pop
mov
or
cmp
sub
mov
cmp
fists
mov
pusha
inc
dec
cmp
int
mov
push
adc
stos
push
fstpl
adc
cmpsl
cmp
iret
add
push
push
xlat
movsl
loop
pop
or
pop
mulb
xchg
dec
fadds
fcomps
imul
xor
xchg
je
daa
out
jmp
cs
or
dec
cwtl
push
ss
jb
fs
inc
test
mull
popf
out
xlat
jg
mov
ss
clc
insl
dec
inc
push
cmovp
or
sub
sahf
mov
aad
leave
mov
daa
lcall
inc
in
jae
mov
dec
stc
push
jmp
lea
pushf
push
cmc
cmp
push
cli
xor
ret
pop
scas
mov
xchg
test
int3
inc
in
aad
mov
pop
stc
movb
in
jb
sub
add
shll
add
daa
push
mov
xor
or
fdivs
dec
in
jb
out
sub
filds
enter
sbb
cmp
jo
sbb
fnsave
xor
in
movsl
inc
sahf
xor
lods
add
cmp
lret
adc
jle
jl
cwtl
std
mov
pop
test
mov
add
xor
pusha
pop
pop
sarl
cmp
push
imul
sbb
icebp
idiv
nop
sbb
mov
jmp
jge,pn
mov
and
xor
lahf
std
and
lds
and
sub
push
int
xchg
sub
cwtl
sub
cmp
aaa
xor
adc
inc
jo
test
and
js
adc
ljmp
jb
mov
mov
push
mov
xchg
xlat
mov
pop
into
cmp
mov
test
cmpb
dec
fstl
repz
ljmp
stos
pop
sarl
test
or
jne
pusha
cmp
enter
or
push
and
jge
test
pop
push
dec
add
mov
aad
mov
jl
inc
pop
pop
push
rcll
aaa
sub
push
cmpsb
push
sub
xchg
push
xchg
adc
cmc
sub
stos
test
pop
hlt
mov
xor
fcmovnb
pop
lods
clc
cmpsl
test
repz
mov
fmuls
cld
jge
cld
xchg
shrb
push
and
push
in
out
dec
clc
fwait
ss
cltd
lock
dec
cwtl
into
mov
pop
clc
or
andl
lock
das
popf
mov
push
push
sub
xor
arpl
cmc
or
std
and
pop
popl
sbb
add
fistps
sbb
lahf
jl
mov
sahf
adc
ss
mov
add
xor
lock
loopne
lret
add
fdivs
mov
sub
test
rdtsc
sar
out
cmpsb
call
out
shll
and
cmp
cmp
notl
lret
mov
and
icebp
push
dec
xlat
stos
push
fs
in
xor
push
add
mov
mov
sbb
movsb
or
mov
inc
int
popf
dec
mov
insl
pop
shl
sub
push
sub
mov
or
repnz
xor
lret
cwtl
mov
adc
sbb
in
mov
dec
sbb
mov
icebp
aad
mov
inc
xchg
das
cld
repnz
inc
jg
lret
lds
lret
rorl
je
sbb
lret
in
mov
push
lcall
sub
rcrb
rolb
mov
iret
ror
pop
and
mov
xchg
cmp
mov
push
rcll
jbe
aad
cmp
inc
xor
clc
push
sub
out
push
shr
push
mov
nop
xchg
cmpsb
loope
jmp
int
shlb
cmp
out
mov
push
imul
call
adc
jp
lods
jne
push
push
inc
or
iret
hlt
es
loop
mov
xchg
jb
stos
arpl
rcl
jge
sub
jb
cmp
dec
mov
out
xchg
test
test
add
out
mov
sub
inc
cmp
and
mov
fidivs
and
mulb
adc
mov
subl
daa
dec
cmc
sti
xor
or
addl
pop
aam
pop
lds
push
hlt
popa
mov
xor
ja
dec
mov
cs
aas
jo,pt
xor
mov
push
pop
sub
push
or
out
mov
lahf
int3
outsl
cmp
add
add
fidivrl
xchg
ljmp
add
movb
sub
mov
insb
mov
shr
js
mov
in
ficoml
dec
insb
ja
scas
sbb
fadd
enter
aas
sub
gs
push
ret
daa
mov
rolb
in
rcrb
adc
pop
add
loope
outsb
rcrl
cmc
push
adc
jnp
cwtl
cmp
loope
mov
fwait
pop
test
jecxz
divb
mov
jnp
pop
sub
loope
sbb
adcb
ljmp
inc
inc
mov
xlat
aad
jo
into
loope
inc
dec
movsb
imulb
or
sub
push
add
pop
sbb
cli
xchg
cmp
and
cmp
mov
stc
cmp
xchg
and
aaa
push
mov
call
fcoml
jnp
sahf
push
push
lock
lods
enter
sbb
push
std
push
cmp
xor
das
push
faddl
jbe
enter
movsl
jne
jo
loope
lods
ret
lahf
mov
mov
popa
push
add
hlt
cmp
push
pop
iret
das
ret
lds
pop
call
xlat
mov
stos
popf
mov
add
out
inc
test
in
cmp
dec
cmpsb
adc
outsb
jnp
add
outsb
pop
add
pop
sbb
pop
adcl
lret
push
aad
push
jl
mov
push
cmp
fmuls
inc
imul
sbb
xchg
scas
jge
ss
sahf
pop
adc
add
xor
mov
mov
and
xor
inc
xchg
pusha
shrb
cmp
jb
mov
mov
push
xor
out
mov
mov
cmpsb
repz
repz
or
subl
mov
jl
sub
loopne
imul
mov
dec
test
cwtl
dec
test
xchg
adc
sub
popf
inc
jbe
add
and
push
repnz
mov
repz
testl
mov
and
lds
js
mov
adc
ret
aam
mov
adc
ficoms
lods
pop
or
fdivrs
addr16
xor
loopne
pop
fwait
inc
je
nop
mov
dec
loopne
gs
loopne
pop
mov
icebp
hlt
lcall
mov
push
test
or
sbb
and
hlt
lea
filds
cld
stc
jl
cmp
inc
mov
stc
mov
sub
or
sbb
push
sti
sbb
push
movaps
jb
sbb
push
loope
aam
xchg
adc
lcall
cmpsl
push
xchg
pop
adc
mov
loop
ljmp
das
es
sbb
dec
xchg
xor
shll
rcll
sbb
xchg
inc
jbe
push
lahf
push
repz
jb
push
dec
or
inc
lea
mov
aad
pop
xlat
ret
sti
xchg
cltd
mov
adc
loope
insl
dec
push
sub
push
mov
pop
cmp
dec
ud0
push
push
imul
push
cwtl
pop
jge
test
repnz
adc
int
idivl
push
pop
out
mov
test
adc
xor
adc
jle
mulb
inc
push
or
adc
inc
les
jne
push
cmc
stc
and
loop
rclb
sub
mov
pop
mov
scas
mov
lds
add
movsl
pop
inc
inc
cs
and
or
outsb
mov
xchg
dec
mov
inc
dec
clc
cmp
xchg
mov
lret
test
pop
add
sub
rcrl
pop
adc
jmp
mov
push
scas
imul
adc
rcl
lock
daa
ja
add
mov
mov
and
push
cmp
push
fcmovne
fstpt
adc
out
push
movsb
jb
aam
cmp
xchg
mov
mov
mov
pop
jbe
aas
cwtl
lcall
adc
sbb
push
outsl
jbe
mov
lret
push
cmp
sbb
pop
lret
loope
aaa
int3
movl
and
loope
lahf
mov
stos
aad
bound
or
xor
clc
dec
roll
es
in
xlat
popa
ret
fldl2e
and
mov
lds
and
ds
fucomip
es
mov
mov
movsl
mov
xchg
addr16
addr16
and
mov
inc
in
mov
lret
jle
jp
into
mov
inc
jne
mov
mov
xchg
int3
in
aas
push
sub
mov
test
xchg
fnsave
lods
jg
fistpl
cmpsb
push
dec
addr16
repnz
jge
dec
push
out
or
into
xorl
pop
fstpl
mov
jge
sub
xchg
push
inc
xor
adc
fbld
jp
mov
lcall
outsl
pop
data16
mov
xrelease
daa
sub
addb
in
imul
dec
aam
mov
scas
popf
dec
sbb
and
lea
lret
jno
xchg
mov
push
daa
sarb
in
andb
pop
ret
iret
jmp
outsl
mov
stos
gs
loope
push
mov
push
mov
in
fwait
enter
sbb
mov
xor
jmp
cld
gs
add
push
repnz
popf
push
addl
xchg
icebp
pop
loop
movl
es
das
stc
pop
jo
jmp
shll
xchg
js
cmc
loop
mov
xchg
cmp
and
cmp
fsub
push
pop
cwtl
dec
sbb
in
xchg
cld
pop
or
int3
mov
add
push
test
aaa
dec
fmull
pop
shlb
xchg
mov
xor
inc
pop
adc
jns
lea
loop
fdivr
mov
out
sbb
inc
pop
sbb
xor
cs
fisttpl
pop
dec
pushl
imul
imul
rorb
shll
lret
cmpsb
sbb
ret
adc
mov
test
cmp
push
movsl
lcall
xor
mov
xor
xchg
jg
push
lret
push
test
loopne
mov
xchg
dec
cmpsb
call
adc
insb
dec
sbb
xor
imul
jmp
mov
xor
pop
dec
fsubrp
push
cmp
mov
push
rol
lret
xor
in
out
lahf
sbb
jns
clc
out
scas
or
fisubl
imul
or
gs
int
cmp
inc
mov
mov
insl
and
in
lods
pop
stos
mov
xchg
insb
loope
dec
cmp
mov
int3
stos
in
sar
sbb
pop
shlb
inc
shll
mov
mov
cmp
shrb
push
xchg
push
cmp
lret
pop
sbb
movsb
shll
sarb
xchg
xor
repnz
mov
sub
cs
adc
imul
fldenv
test
mov
xchg
das
adc
pop
sti
test
mov
test
jnp
cmc
mov
jge
in
pop
mov
faddl
cli
ja
mov
mov
aad
sbbb
mov
mov
and
movl
mov
sub
sbb
lret
mov
das
cmpl
aam
ljmp
in
mov
push
fidivrl
dec
and
jne
cld
xchg
xchg
sub
dec
fimull
cmp
xchg
lods
daa
cltd
sbb
insb
shrb
mov
imul
or
xlat
jne
into
test
dec
ljmp
lea
pop
insb
or
loop
ret
cmp
pusha
sub
icebp
mov
imul
in
fidivrl
inc
push
mov
push
loope
mov
jp
addr16
xlat
nop
sahf
mov
icebp
jecxz
sub
add
xchg
jle
mov
cltd
dec
insl
les
cli
jle
or
xchg
andb
aam
mulb
pop
fcmovnbe
cmp
cmp
jnp
mov
inc
add
inc
lds
pushf
push
sbb
roll
loope
mov
pop
shl
scas
add
stos
test
lods
scas
pop
mov
pop
arpl
jb
pusha
std
add
out
sbb
aad
adc
and
jb
and
jno
dec
or
adcb
jmp
dec
scas
jne
outsb
shl
outsl
or
dec
lods
loop
xor
sbb
jae
fistpl
pop
sbb
std
sbb
js
int
sub
xchg
mov
shl
cwtl
sbb
aas
pop
mov
sub
mov
ljmp
dec
push
cltd
and
xchg
outsb
dec
cltd
data16
add
cs
push
mov
inc
mov
inc
add
adcl
mov
mov
stos
xor
inc
inc
add
pop
dec
mov
xchg
pop
xchg
and
ljmp
add
movsl
into
testb
popf
popa
ret
cmpsl
fidivl
popa
and
adc
mov
dec
push
jmp
sbb
adc
pop
sub
add
push
fstpl
enter
inc
roll
mull
cwtl
insl
shl
push
add
inc
mov
jo
lret
pop
sbb
pop
adc
mov
sub
in
mov
mov
lds
imul
loope
push
sahf
inc
adc
imul
pushf
mov
or
lods
fmuls
inc
or
fidivrs
enter
add
js
jmp
les
in
testl
into
jecxz
pop
pop
stc
mov
push
pop
arpl
repnz
insl
adc
jl
dec
add
je
xchg
jo
in
test
and
jmp
mov
cwtl
imul
ja
shr
sahf
xor
inc
in
pop
add
push
push
lods
push
lret
cmc
test
call
call
int3
pop
cli
int
inc
loopne
mov
aaa
cwtl
enter
sub
jmp
adc
jo
mov
push
fisubrl
push
in
shlb
xchg
shrb
lods
sar
sbb
ja
rorl
insl
sarl
adc
inc
add
push
push
sub
cmpsb
or
insl
inc
lods
arpl
mov
push
leave
add
lock
mov
dec
sub
pusha
inc
or
stos
loope
add
xchg
in
movsl
pop
mov
mul
xchg
loopne
dec
insb
mov
ret
sbb
fnstsw
xor
and
and
rorb
dec
dec
std
mov
mov
mov
push
inc
sub
sbb
je
xor
mov
shrl
xor
into
push
ds
ds
adc
sbb
ret
or
scas
lock
jb
lcall
mov
test
cmp
gs
iret
dec
pop
xchg
dec
int
mov
fisttpll
push
jb
inc
xlat
insb
rcrb
repnz
pop
test
div
insb
frstor
scas
xor
push
sarb
shl
inc
mov
push
pushf
add
mov
mov
into
and
or
gs
push
movsl
push
pop
inc
jge
loopne
jmp
outsl
mov
add
jecxz
or
mov
dec
inc
fs
sub
rclb
int
cmpb
or
lea
xchg
daa
insl
adc
lret
rcrl
mov
lods
adc
movsb
into
xor
jns
mov
sbb
push
jnp
mov
mov
cmp
adc
gs
push
dec
inc
stc
repz
fiadds
push
fiaddl
lods
cmp
pop
mov
fwait
test
shr
adc
xchg
cltd
insl
push
mov
outsb
repnz
sahf
in
xor
adc
xchg
xor
cmpsl
jnp
fwait
in
adc
outsl
and
dec
xchg
btr
addr16
enter
jg
pusha
xor
jl
xor
adc
mov
and
sti
or
je
pop
fidivl
and
outsb
push
into
popf
andb
inc
xchg
dec
cmp
mov
movsb
out
ds
iret
push
imul
xlat
mov
call
in
out
sub
ret
adc
lret
mov
pop
pop
dec
pushf
scas
bnd
jne
push
adc
xor
sbb
adc
jge
xchg
cwtl
out
push
call
faddp
lock
add
std
mov
rcrb
jmp
lods
lret
mov
cltd
xor
lcall
sub
fsubrl
xor
lahf
arpl
std
mov
mov
cmp
xlat
les
add
mov
sahf
outsl
out
xor
adc
inc
add
and
jbe
inc
push
push
pop
sbbl
add
adc
mov
shr
sub
sbb
rcrb
sub
int3
add
sub
iret
jae
in
mov
add
jb
das
rolb
cli
lods
cld
mov
rcr
adc
push
pop
insl
pop
lcall
ds
clc
add
fisttpl
add
lahf
mov
adc
rcr
adc
add
jbe
lahf
mov
aaa
cltd
add
insb
insb
jle
mov
pop
iret
cmpsb
mul
mov
leave
jbe
mov
push
aam
rcrb
pop
stc
insb
mov
inc
pop
lods
rcrl
pop
mov
js
and
outsl
jecxz
pusha
gs
cmp
and
or
in
push
add
jmp
dec
rcrl
adc
mov
loope
mov
mov
notb
hlt
bnd
pop
ljmp
fldl
notb
lret
mov
lea
pop
push
scas
mov
push
iret
push
push
mov
lea
in
fdivl
cmp
pop
inc
or
call
xor
pop
pop
scas
push
inc
add
jne
add
sub
stos
adc
ficompl
out
sub
ficompl
inc
leave
cmp
xlat
ss
ret
repnz
adc
sbb
outsl
scas
and
mov
sbb
sbb
ljmp
cli
pop
mov
pop
add
cld
xchg
lock
fimuls
cmp
xchg
nop
lcall
cmpsl
loopne
ret
jmp
jge
jg
xchg
stos
rorl
xchg
push
jl
push
inc
roll
mov
add
push
adc
inc
lahf
lahf
cmp
or
daa
cmp
inc
xchg
dec
imul
test
imul
js
aaa
mov
les
addr16
lea
sbbb
idiv
fldcw
pop
data16
or
iret
pusha
cwtd
lcall
pop
addl
std
xor
std
cli
pop
decl
mov
cld
movsl
push
push
ret
pop
std
and
adc
xchg
ljmp
xchg
and
clc
movsb
stos
sub
out
sahf
sbb
adc
xchg
dec
xchg
fisttpl
and
test
bound
fcmovnbe
dec
inc
lret
add
lods
insb
jb
dec
int
fwait
cmp
movsl
insl
shr
hlt
fwait
adc
mov
mov
lods
enter
jbe
pop
mov
fisttpll
das
pop
push
repz
mov
scas
jp
inc
in
inc
lret
lret
pop
sub
mov
mov
pop
and
mov
jb
movsl
push
inc
fidivrl
xchg
xor
lods
jae
call
sub
loope
cmp
dec
sub
out
mov
pop
xchg
jmp
sub
and
jecxz
mov
cmc
or
mov
and
stc
push
inc
xchg
inc
xchg
xchg
movsb
jmp
cmp
xchg
mov
inc
cmp
xchg
fnstcw
mov
mov
roll
bound
push
popa
add
pop
leave
popf
test
and
jle
test
add
sbb
cmp
jmp
daa
xchg
mov
iret
add
std
push
stc
ljmp
or
mov
addr16
cmp
movsb
inc
ds
xchg
cltd
stos
das
lds
pop
loop
or
xchg
mov
mov
dec
cmove
adc
and
jle
adc
es
les
inc
aam
cmp
iret
xor
popa
jns
sub
jp
mov
mov
data16
jg
sub
fcomps
jns
sbb
sbb
dec
mov
test
inc
andb
jle
adc
ds
outsb
int
fstpt
mov
and
loopne
cmc
mov
xchg
adc
mov
lcall
stos
dec
jmp
and
pop
imul
inc
lcall
int3
cs
movsb
pusha
scas
fisubrs
cmc
xor
pop
scas
inc
or
cltd
out
mov
clc
xor
mov
adc
jne
inc
mov
gs
dec
fnstenv
fwait
add
mov
adc
fcomp
xor
orl
pop
movsl
inc
shll
sub
jmp
fcomps
mov
daa
and
int3
pop
outsl
xchg
or
and
push
mov
movsl
mov
call
ss
jmp
mov
add
lods
les
add
mov
out
mov
jb
jecxz
dec
sub
jg
clc
xchg
jb
pop
pop
fdivl
insb
