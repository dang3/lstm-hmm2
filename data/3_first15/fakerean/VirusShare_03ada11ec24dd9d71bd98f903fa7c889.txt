add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
adc
push
cmpsb
fucom
or
pop
sub
mov
dec
pop
dec
mov
in
scas
dec
add
mov
cmp
movaps
dec
dec
mov
and
mov
movsl
add
or
int
movsl
cli
in
dec
jmp
insb
sub
mov
jecxz
dec
insb
pop
ss
shrl
bound
js
int
fwait
pusha
jl
pop
push
jno
cli
jmp
push
mov
int
inc
les
cmc
or
mov
out
shrl
and
popf
sub
jno
dec
rcr
and
adc
mov
insl
cs
xor
mov
loop
fwait
sahf
jnp
loopne
jns
in
xchg
out
popa
cmc
imull
mov
sbb
outsb
out
mov
stos
ja
push
insb
lret
dec
adc
mov
sbb
mov
add
notl
gs
vmovsd
call
pop
jg
repz
adc
arpl
jbe
daa
mov
sbb
fwait
cli
cmp
mov
jae
adc
or
testl
push
push
dec
adc
cld
out
shll
xorb
in
rorl
xchg
fimull
jo
pop
mov
push
fnstcw
sar
xor
ljmp
jno
out
xchg
lods
call
pop
les
adc
aas
idiv
adc
or
add
lahf
push
scas
shrb
pop
cld
cmp
cmp
cmc
fmul
scas
je
dec
enter
pop
adc
into
jg
gs
into
ljmp
xchg
or
pop
inc
loope
xchg
das
mov
xor
push
pop
and
lods
dec
jmp
push
sbb
dec
sub
xchg
dec
out
inc
xor
test
int
aaa
fiadds
mov
mov
lea
stos
rclb
xor
mov
dec
mov
sbb
dec
xchg
ucomiss
sub
sub
and
popa
aam
inc
into
mov
sbb
repnz
xlat
lcall
les
std
cmpsb
loop
adc
loope
push
sub
aam
imul
dec
mov
enter
pop
sbb
jmp
or
mov
push
loopne
sub
sub
xchg
cmpsl
mov
dec
rolb
cltd
out
lods
jne
jmp
xchg
loop
jae
ja
not
pop
xlat
pop
pop
fs
pop
fsubrs
cmp
mov
mov
mov
adc
mov
mov
stos
imul
mov
lods
xchg
es
cli
or
xchg
aam
gs
or
in
cmp
mov
xor
cmp
sub
push
inc
push
push
rcrl
or
mov
mov
std
pop
scas
xor
into
lret
and
adc
cli
mov
scas
jl
mov
inc
jno
cmpsb
repnz
mov
out
xchg
rcll
push
lock
out
arpl
shl
bound
shr
cmpsb
and
cmp
pushf
inc
adcl
bound
and
jl
jb
add
fmuls
into
add
xor
sub
lahf
pop
push
push
call
inc
sbb
xlat
xlat
stos
in
pop
fs
xchg
sahf
shlb
cwtl
movsl
out
mov
stc
push
or
jmp
popf
cmp
mov
mov
mov
sti
fistpll
sti
or
mull
fbstp
cmp
pop
lahf
jg
adc
cld
sarl
jnp
in
jns
aad
js
adc
lods
out
sub
inc
mov
loope
sahf
dec
loope
mov
xor
arpl
orb
fcmovb
outsb
xchg
add
jno
into
add
int
fimull
or
cwtl
pushf
and
or
adc
push
inc
pop
call
addl
adc
and
fisttps
adc
movsb
push
fidivrl
stos
pop
fs
mov
stos
dec
rclb
sahf
clc
addr16
sbb
int
dec
xor
jmp
insl
xor
jecxz
mov
cmp
test
sbb
ljmp
dec
add
je
or
loope
pop
jnp
jne
outsb
pushf
jae
sub
xchg
cmp
add
call
mov
mov
xchg
outsl
and
adc
mov
in
mov
push
or
push
inc
out
dec
or
shlb
sub
pop
dec
push
ss
or
inc
out
push
ss
add
pop
inc
push
repnz
cmpsb
pop
mov
adc
out
add
jae
testb
aaa
dec
sub
sti
aas
cmp
pop
cmc
cmp
test
cs
push
xchg
push
add
insb
push
push
adc
ret
test
in
sub
cs
ret
xor
xlat
enter
add
inc
dec
sarl
test
xor
dec
pop
hlt
push
push
lock
inc
add
push
ja,pn
push
or
stos
xchg
clc
sbb
fcoms
je
idiv
add
sar
fldl
mov
sbbl
bound
pop
and
xchg
and
push
sbb
outsl
lret
xor
inc
xchg
loopne
fsubs
xchg
cmpl
cwtl
int3
mov
cmc
xchg
pop
and
and
arpl
adc
mov
push
inc
jge
xchg
aas
and
pop
jl
push
add
mov
sbb
pop
lods
xor
jno
or
loopne
cs
mov
xchg
fcom
mov
aad
cmpsl
adcb
aaa
insb
test
xchg
jns
cmc
push
pop
testb
call
popf
dec
adc
lods
movb
fwait
mov
adc
pop
cmpsl
test
sub
cmp
mov
add
movsb
cmc
nop
mov
and
mov
mov
sub
adcl
mov
cmp
xchg
jno
aam
or
sbb
add
rcl
jo
outsb
rcr
mov
mov
dec
fsubrl
pop
sbb
mov
out
ret
push
mov
jbe
sub
dec
sbb
jp
dec
or
fistps
neg
mov
sarb
sbb
and
addr16
mov
sbb
je
scas
fidivrl
shlb
aaa
das
pop
nop
and
ret
inc
or
and
cmp
xchg
mov
and
aaa
in
rolb
lods
arpl
pop
out
adc
mov
and
mov
xor
mov
ficomps
sbb
pusha
in
lods
jnp
aam
xchg
pop
aam
mov
cmp
into
aaa
fcomps
xchg
inc
in
add
gs
pop
push
push
jne
sub
jp
or
inc
loopne
sti
push
mov
in
mov
mov
and
mov
adc
xchg
sub
jbe
in
in
xor
sahf
mov
imul
fadds
pop
out
fnsave
pushl
popf
dec
idivl
xchg
cs
or
mov
jmp
pop
leave
and
jae
pop
shlb
lcall
jns
push
in
or
out
xchg
hlt
push
lahf
add
pop
or
or
shrb
popw
bound
dec
dec
stc
pop
daa
jno
fwait
loop
inc
mov
or
movsb
sbb
mov
scas
pop
pusha
repz
inc
ds
cmp
dec
notb
or
lret
jne
inc
fcompl
jnp
in
sysexit
ret
ja
mov
cs
mov
jo
shlb
xor
sub
add
or
jle
outsl
lods
fisubrs
add
nop
add
ret
shll
jg
test
outsb
push
or
mov
stc
or
stos
xor
mov
push
dec
adc
sub
lods
mov
jecxz
jbe
pop
call
fwait
inc
jg
add
sub
xor
sarl
mov
mov
test
jecxz
imul
scas
or
mov
jno
xchg
sub
mov
jle
pop
xorl
ficompl
es
push
push
inc
andl
out
mov
sub
insb
pop
xor
fadds
push
dec
adc
pop
push
out
mov
push
cmp
movsb
jb
sbbb
inc
inc
jb
sub
mov
sbb
push
push
adc
scas
int3
jno
test
pop
jns
test
imul
pop
push
sub
in
pop
pop
mov
xor
mov
lcall
jbe
fisubrs
sbb
push
out
mov
cmp
mul
mov
out
ja
in
pop
rolb
mov
lods
aam
sbb
stc
popf
or
vmwrite
adc
movsl
movsb
lods
dec
mov
and
outsb
and
dec
push
xchg
lods
pop
lea
in
sbb
mov
sbb
push
mov
xchg
and
test
xchg
cli
push
loop
bound
mov
add
jg
cmp
push
bound
adc
pop
pop
jb
mov
addl
insb
cmp
andl
repnz
push
sbb
push
stc
shlb
pusha
xor
jl
inc
pop
and
nop
adc
mov
int
clc
sub
cmp
inc
xor
sub
mov
sbb
out
sbb
leave
ret
rcrl
mov
dec
pop
mov
cmpsl
cmp
xchg
pop
in
int
cwtl
add
xchg
ds
std
pop
insl
popf
pop
lcall
ficompl
add
lret
arpl
mov
sbb
add
fmuls
repnz
push
mov
mov
stc
add
inc
dec
jns
aam
lret
xchg
repnz
cli
xor
inc
out
insl
add
fcoml
enter
pop
fisubl
enter
outsb
call
pop
mov
out
pop
and
sbbb
pop
cs
call
xor
xor
scas
xchg
rcrl
insb
pop
mov
lea
pop
pop
mov
mov
hlt
arpl
mov
mov
mov
in
fucomp
fnstenv
dec
xchg
lods
jmp
and
movsl
aas
add
ret
adc
je
inc
outsb
pop
pop
jle
lret
addr16
cmp
rcll
dec
inc
mov
jne
out
inc
inc
xor
mov
in
scas
mov
jns
shll
popf
push
imul
lahf
data16
les
cmp
sub
ds
cld
cmpl
push
mov
dec
add
test
xchg
movsb
push
aaa
jnp
or
test
pop
pop
imul
cmc
enter
mov
inc
sub
jl
or
pop
lret
push
es
inc
cltd
cmp
cmp
cmp
add
loopne
pop
jecxz
mov
jae
cmp
push
sub
sbb
xchg
int3
je
push
and
fldenv
pushf
rorb
in
lret
stos
sbbb
in
push
cmpsb
lahf
movsb
inc
insb
fcmovnbe
pop
pop
out
push
pop
and
fidivs
mov
mov
scas
in
ljmp
mov
jecxz
gs
outsl
movsl
mull
lret
out
and
pusha
loope
insl
jle
pushf
or
in
aad
xor
lock
lea
or
adc
frstor
leave
insw
push
pop
aaa
adc
mov
sbb
pop
dec
fadd
fldenv
cmpsb
or
sub
xor
popa
std
add
ljmp
xchg
jl
push
cmp
data16
inc
fwait
mov
push
outsl
addr16
adc
stos
dec
pop
je
mov
pop
inc
cli
dec
sbb
mov
sti
pop
mov
pop
jl
out
mov
pop
repnz
push
and
mov
xlat
xor
and
movsl
adc
das
insb
pop
or
pop
pop
shrl
pusha
adc
jecxz
jb
dec
lods
xor
fiadds
or
test
dec
js
xbegin
gs
rcl
adc
mov
jg
mov
jge
xor
shr
fs
mov
mov
mov
leave
in
ret
rcr
shl
or
adc
sub
mov
fcmovbe
cmpsb
test
shll
inc
jle
cltd
xor
add
outsl
cwtl
xchg
sbb
and
push
lahf
sti
or
stos
out
in
in
fdivrp
jbe
sbb
pop
aad
dec
arpl
pop
sbb
lret
push
jno
jae
xor
gs
aaa
cltd
jbe
lret
pushf
push
mov
push
jg,pt
push
and
jo
es
jb
mov
jns
das
mov
sbb
rorl
aaa
mov
int3
mov
jmp
fdivrp
mov
xchg
mov
mov
fdivs
idivl
test
cs
push
add
leave
ss
data16
daa
movsb
mov
mov
xchg
orl
jbe
adc
movsl
sub
ror
lea
cmp
mov
mov
in
gs
lret
stos
mov
test
pop
out
cmp
outsl
mov
and
push
aas
shlb
push
loop
add
mov
add
scas
jge
dec
lock
jmp
fldenv
jbe
sub
mov
cmp
mov
enter
imul
dec
fbstp
nop
cs
xor
xchg
adc
pop
fnstsw
jg
add
jae
mov
sub
repz
leave
stc
shlb
fistps
inc
mov
and
dec
popf
dec
mov
popa
dec
dec
in
xor
int3
adc
insl
lret
aam
out
mov
imul
nop
jnp
push
sbb
mov
popaw
ret
jb
ficoms
push
sbb
sahf
sub
cmp
imul
inc
fstpl
adc
jnp
ret
jae
hlt
ret
cltd
push
push
xchg
dec
pop
jg
pop
xchg
stos
in
int3
je
cmp
push
dec
mov
arpl
test
sub
fistpll
in
es
and
test
mov
xchg
iret
sbb
out
push
sbbb
and
xchg
orb
mov
add
sub
int3
shl
cmp
scas
stos
cmpsb
ret
out
mov
je
repnz
call
mov
ljmp
lret
scas
pop
inc
shrb
push
iret
xor
push
push
pop
sbb
add
cld
sub
jae
lods
adc
adc
rcrb
push
popf
repz
push
jae
aaa
dec
mov
cmpsl
dec
mov
push
iret
repnz
jge
ret
loope
or
sti
add
test
mov
jnp
sbb
daa
or
pop
inc
adc
or
push
sbb
xchg
inc
aaa
mov
adc
aad
xor
repz
mov
push
sub
insb
negl
push
or
cmp
rclb
mov
jmp
lea
mov
mov
jge
nop
and
fwait
jo
fbld
je
jle
lret
pop
push
out
xchg
xor
push
cmp
mov
xchg
mov
or
ret
stc
stos
jbe
sub
inc
int3
adc
inc
cmpxchg
push
jnp
and
lcall
rclb
out
adcl
cwtl
ds
sub
std
in
cmpsl
add
or
daa
xchg
aam
or
mov
mov
push
pop
lret
mov
stc
mov
and
into
sbbb
test
outsb
out
dec
jmp
mov
add
dec
push
jecxz
xor
fsub
dec
fbld
inc
insb
or
mov
in
jle
repz
cmp
stos
outsb
sub
cmpb
xor
insl
pop
add
mov
daa
mov
pop
mov
cmp
imul
add
inc
inc
xchg
pop
pop
push
out
loopne
lret
pop
hlt
pop
mov
inc
jge
cmpsl
jge
scas
cmpsb
mov
ss
insl
aaa
or
popf
cld
or
xor
imulb
ljmp
test
dec
or
inc
pop
and
push
add
jp
cltd
div
sahf
push
push
mov
xor
inc
xor
test
mov
fiadds
imul
inc
jg
sub
jae
mov
stos
jae
jmp
lret
cmp
popa
xor
dec
push
fdivs
loope
cs
push
mov
push
push
jno
popl
xchg
mov
lds
pop
jle
mov
push
xchg
mov
or
push
mov
pop
pop
ror
scas
ja
rolb
pop
loope
jno
clc
leave
stc
add
movsl
xor
push
mov
and
mov
test
loop
inc
inc
xor
mov
pop
pop
inc
mov
call
fadds
sub
adc
pop
or
sbb
daa
int3
stos
aaa
add
jb
and
mov
leave
push
mov
scas
ljmp
mov
mov
movsb
xchg
div
add
sub
out
repnz
es
stos
sbb
add
data16
decb
lods
push
fs
lea
insb
jge
add
ficompl
inc
aaa
lods
jb
jno
sahf
mov
test
dec
cld
lret
push
popl
mov
ret
mov
sub
xchg
sahf
out
mov
pusha
xchg
testb
jle
aaa
jne
pop
mov
lea
pop
xor
rclb
jmp
sub
pushf
and
mov
dec
mov
sbb
out
hlt
out
popf
lods
mov
mov
push
lret
or
mov
clc
ljmp
arpl
push
sbb
mov
jb
sub
push
dec
popf
test
rolb
inc
insl
stc
jge
cmp
fbld
lds
dec
scas
cmp
sti
cmpsl
dec
lcall
add
in
loop
int
cwtl
mov
inc
in
mov
imul
push
sahf
repnz
pop
push
mov
add
loop
jno
push
sbb
fdivr
inc
imul
sbb
adc
roll
icebp
inc
mov
mov
loop
xlat
mov
nop
adc
cmp
add
sbb
loope
cld
stc
push
xchg
js
lock
outsb
fcoms
scas
jp
inc
and
test
cld
scas
and
mov
pop
xor
repz
pop
jo
push
jmp
mov
vmovapd
sbb
mov
cltd
movsb
push
popa
stc
mov
int
call
lcall
lret
es
arpl
add
xor
xchg
push
out
xor
inc
fistpl
inc
push
jno
popa
sbbl
lea
lcall
lods
negl
jmp
adc
sbb
int3
dec
mov
lods
sub
not
xchg
mov
dec
jecxz
out
and
xchg
jmp
test
out
daa
jg
dec
adc
mov
test
mov
push
fstpl
push
in
sub
imul
adc
xchg
sbb
dec
icebp
pop
stos
sub
xchg
xchg
push
xorb
into
addl
test
fstpl
in
rolb
js
jb
int
jno
jecxz
test
out
cwtl
pop
lds
xchg
aas
dec
mov
and
xchg
xchg
cltd
or
fnstenv
sbb
cmp
call
mov
cmpsb
mov
jp
jp
xchg
sub
xchg
int
or
aad
add
push
fisttpl
or
add
mov
ljmp
shrl
or
cmp
or
push
xor
pop
enter
adc
pop
xchg
pop
adc
jne
maskmovq
rcrb
ficoms
enter
adc
subb
fistl
das
xchg
repnz
sub
insb
xor
and
mov
sub
cld
insl
addr16
xchg
add
xchg
ja
pop
jge
jge
jp
xlat
and
into
inc
pop
pusha
cwtl
scas
or
mov
std
dec
xchg
push
popf
adc
int
dec
inc
pop
mov
mov
add
jle
lret
cmp
xlat
ss
pop
push
rorb
cmpsl
iret
sbb
fcmovu
movsb
jno
out
nop
mov
jbe
fadds
out
lret
mov
ret
push
cmc
jo
inc
pop
push
xlat
iret
dec
dec
js
sbb
adc
mov
sub
enter
jge
imul
mov
adc
movsl
pop
jns
lods
add
and
mov
xchg
fisubs
cltd
or
and
sti
out
movntq
fs
lret
out
lret
cmp
outsb
mov
ljmp
cld
fdivr
xchg
out
or
ret
jo
pop
and
es
and
lods
stos
mov
stc
sbb
jecxz
icebp
cmp
or
dec
lock
or
mov
cli
sub
loop
aas
movsl
dec
fwait
push
inc
add
inc
rclb
inc
enter
fnstenv
rcr
sub
sahf
stos
daa
in
push
lods
jmp
sub
out
pop
insl
inc
sbb
mov
cmp
loop
out
xor
dec
cmpsl
push
jl
outsl
dec
nop
ficompl
cld
sub
out
and
orl
movsl
and
sbb
in
mov
and
pop
sahf
out
adc
sub
mov
mov
push
and
or
dec
loopne
rcll
ds
mov
xchg
add
popf
jo
enter
push
ljmp
ja
stos
push
xor
push
pop
test
jbe
pop
subb
cltd
pop
in
inc
pop
jle
sbb
mov
push
sahf
pop
mov
jmp
pop
xchg
adc
xor
dec
mov
xchg
dec
out
andb
out
outsl
or
dec
mov
ret
pop
lahf
int3
cli
mov
fsubrl
aas
dec
stos
loope
jne
sbb
fstpt
sub
call
pop
minps
pop
mov
push
xorb
mov
sarb
into
insb
dec
jno
int3
loopnew
mov
push
mov
sub
or
mov
push
aam
pop
imul
mov
ja
into
sub
cltd
mov
in
std
fstps
mov
and
mov
lods
cmp
scas
sbb
xchg
mov
or
xchg
fcoms
cmp
or
inc
xchg
popf
aas
push
int3
mov
mov
and
fisttpl
divb
mov
inc
or
mov
movsb
pop
inc
mov
mov
cmp
pop
ja
add
push
mov
mov
adc
stc
icebp
push
sub
inc
aam
mov
and
push
test
push
xor
mov
lds
out
pop
push
stc
fiadds
cmpsl
jl
push
xor
cmp
cmc
fiadds
jle
icebp
lcall
popf
loopne
mov
inc
fwait
imul
sbb
dec
hlt
mov
dec
pop
orb
mov
or
sbb
cmp
push
inc
mov
xchg
cmp
mov
inc
jns
push
loope
xchg
enter
sbb
xlat
out
xor
sbb
inc
dec
sub
test
xchg
shlb
pop
jmp
jo
sbb
fdivl
inc
mov
shrl
ds
inc
jne
mov
fdivl
push
out
fldt
in
cmpsl
outsb
jl
mov
pop
sbb
repnz
fmuls
pop
pop
jp
and
sbb
int3
es
push
aas
shlb
mov
sti
cmp
jmp
out
xchg
mov
pop
sahf
inc
and
test
dec
push
mull
test
cs
push
or
ljmp
xchg
out
test
push
les
loopne
cmp
pushf
sbb
leave
pop
aad
jg
xchg
adc
mov
sbb
test
mov
std
add
iret
lret
mov
out
dec
pop
ja
out
inc
or
jp
insb
fisttpll
cmp
or
insb
inc
sarl
push
scas
loop
jns
sub
pop
int3
jo
sub
xor
mov
mov
lcall
inc
adc
mov
mov
mov
stc
rolb
das
pop
les
sahf
enter
movsb
insl
jo
lods
scas
mov
repz
fisttps
jl
negb
mov
aam
or
int
or
out
stos
mov
cmp
lret
jb
mov
inc
pushf
dec
cmp
movsb
movsb
push
inc
lret
xor
mov
mov
mov
mov
aas
lea
fmulp
and
imul
mov
mov
fcomip
frstor
or
icebp
xchg
popa
outsl
test
imul
sub
sbb
out
mov
cmp
loop
mov
xchg
sub
aas
test
push
adc
test
jge
adc
xchg
imul
mov
add
lods
push
sti
mov
jecxz
negb
insb
mov
pop
leave
and
test
out
ja
sub
xor
int
xchg
jl
and
fcompl
mov
jnp
subb
add
pop
and
leave
lret
inc
jae
in
cmc
ja
cmp
dec
pop
mov
jle
lea
shrl
dec
repnz
xchg
int
cwtl
out
jno
adc
sbb
cmpsl
mulps
jbe
adc
xchg
lahf
or
fs
dec
push
es
mov
cmp
into
int3
pop
in
cltd
sbb
pusha
mov
pop
pop
jbe
dec
xchg
xchg
inc
add
mov
jo
pop
jmp
mov
mov
xor
in
lret
jl
pop
les
xchg
mov
sub
movsb
addb
aad
sub
dec
jo
scas
xchg
push
add
stos
inc
shrb
mov
xchg
loop
sub
in
xor
test
sub
push
dec
mov
es
cmp
outsl
add
pop
jbe
daa
hlt
outsl
jmp
or
out
pusha
mov
sub
push
push
sahf
adc
addb
fwait
sub
subl
inc
adc
push
notb
xor
jns
aas
mov
cs
in
cwtl
cli
xchg
adc
mov
inc
sbb
shrb
ds
stc
adc
push
pop
push
adc
outsb
cli
out
cmp
push
xor
or
jle
jns
mov
sub
loope
adc
test
jge
pop
incl
dec
xor
scas
rcll
repz
mov
insl
das
lock
cltd
mov
pop
xor
mov
mov
imul
xchg
xchg
pop
sub
or
jmp
pop
gs
testl
mov
lds
sub
mov
fiadds
mov
popa
adc
mov
loopne
dec
icebp
jb
push
mov
jno
dec
gs
push
add
daa
mov
fdivp
cmp
mov
add
popf
mov
in
inc
hlt
das
lahf
into
jge
daa
mov
or
bound
nop
xchg
inc
or
out
adc
aaa
pusha
sbb
xor
adc
inc
imul
mov
jmp
add
xchg
popa
loopne
pop
push
repz
dec
sbbl
push
sbb
cmp
in
ljmp
inc
adc
pop
mov
adc
fldenv
imul
push
jno
mov
insb
xor
mov
lcall
repnz
hlt
push
jae
into
push
fs
ja
push
scas
inc
and
dec
sar
fiaddl
fdivrs
fs
xor
push
sub
scas
pop
into
test
pop
mov
imul
mull
icebp
out
lods
insb
mov
and
jb
adc
sbb
xchg
xchg
call
cs
sbb
push
jmp
fcos
sbb
shlb
stos
and
lods
jns
aaa
int3
out
outsb
cmc
sbb
repnz
je
ljmp
rorl
rol
repz
rolb
out
into
jmp
pop
lahf
cli
lods
ficompl
ror
lret
fwait
mov
ret
or
ffree
add
stos
cltd
pop
rcrb
xchg
cmp
bound
and
jne
push
sbb
mov
scas
adc
int3
push
pop
insl
cwtl
test
ret
lret
pop
scas
data16
and
cmp
pop
xchg
scas
dec
dec
cltd
ljmp
pop
pushf
outsb
sub
or
add
jle
cmpl
popa
addr16
push
repz
es
call
and
push
fs
and
mov
mov
fmul
add
jp
fsub
mov
add
iret
add
push
test
adc
add
xor
rclb
lret
call
sub
jmp
dec
sub
or
addl
call
mov
jg
pop
mov
mov
mov
cmp
jno
aas
fistl
xlat
mov
out
sub
and
pop
in
mov
data16
mov
xchg
dec
add
int
les
sub
ja
sub
js
in
adc
mov
aam
rcrl
loop
jbe
divb
test
xchg
dec
clc
pop
sub
sub
cmc
stos
sub
sbb
dec
test
push
cli
ret
adc
adc
mov
jb
sbb
out
adc
sbbb
adc
jne
and
or
icebp
push
in
xchg
dec
cmpsl
or
mov
insl
cmpsl
pop
or
js
hlt
scas
inc
int
dec
mov
mov
outsb
and
imul
fwait
ds
add
xor
mov
or
adc
loope
add
aam
lea
ja
stos
or
insb
mov
lcall
orl
jecxz
dec
loop
cld
push
sbb
test
stos
loop
repnz
std
sbb
xlat
cld
into
xchg
mov
ljmp
jp
jmp
fldl2e
lds
add
hlt
cli
adc
sbb
sbb
pop
push
inc
mov
mov
outsl
jle
mov
iret
les
mov
movsl
jb
stos
dec
xchg
rol
xchg
icebp
dec
or
mov
dec
pop
dec
xchg
or
inc
add
pop
push
clc
icebp
lret
mov
lock
jb
add
or
sbb
mov
sbb
push
xchg
sub
stos
mov
out
adc
inc
or
push
pusha
inc
inc
addr16
enter
push
dec
mov
push
jl
cmp
lods
ret
cmp
cmc
fistpll
mov
cmpsl
ret
mov
push
add
je
aaa
test
dec
mov
mov
sub
out
pop
data16
inc
scas
ja
mov
add
shlb
pop
test
daa
xor
mov
jno
pusha
sbb
push
sub
loop
pop
cmp
idivl
aas
les
jp
and
push
pop
out
cmp
jns
je
enter
hlt
sbb
mov
clc
outsl
or
shll
insb
cmp
dec
push
jns
and
in
int
ds
mov
xor
mov
int
sti
add
ret
fldpi
inc
pop
push
out
xorl
pop
jecxz
cwtl
mov
popa
pop
cvttps2dq
xor
mov
jmp
push
jg
push
sbb
in
aad
lret
test
nop
mov
adc
fcmovnbe
or
fstpl
fldl
sub
adcl
sahf
call
inc
xor
sub
mov
sti
push
bound
movswl
mov
mov
outsb
inc
jmp
mov
inc
leave
pusha
imulb
scas
cmp
dec
scas
cmp
jo
jb
sub
jnp
and
fwait
in
fsubl
jne
iret
xchg
nop
sti
bound
jle
std
lret
lock
mov
sub
inc
loop
lahf
push
negl
and
cmp
mov
xchg
and
shld
movsb
mov
push
into
aam
rorl
int
inc
jns
repnz
sbb
and
cmp
test
xlat
imul
jbe
sub
push
out
je
cmpsl
push
aaa
xorb
loope
adc
leave
jmp
adc
or
es
jg
lock
jo
loope
push
scas
pusha
lock
gs
in
inc
scas
in
jo
jb
cmp
fs
nop
in
jg
jg
shlb
pop
lahf
jns
add
js
adc
sahf
imul
lea
xor
pusha
rcll
orl
call
mov
inc
int
add
sub
negl
frstor
lock
std
test
jno
mov
and
and
jns
out
aas
adc
fists
adc
inc
mov
sub
mov
pcmpgtb
or
mov
arpl
lahf
sbb
les
jmp
add
les
xor
pop
dec
hlt
pusha
jnp
and
loope
adc
decb
insb
hlt
jmp
jmp
loopne
les
scas
int3
push
mov
sbb
sti
popf
outsb
fwait
sbb
adc
mov
ud2
in
fwait
dec
mov
sarb
push
xchg
sbb
lcall
iret
pushf
fadd
mov
ds
dec
test
and
insb
pop
lock
cld
and
jl
loop
lret
push
faddl
aaa
push
imul
mov
jbe
aam
add
cmp
sbb
ja
mov
test
mov
sub
and
cli
lret
push
test
lcall
dec
aad
xor
push
pop
out
sub
mov
push
outsb
xchg
clc
loop
or
pop
data16
xchg
fcom
sub
mov
mov
cltd
in
rolb
inc
popf
scas
test
lds
in
aaa
int
pop
or
mov
mov
adc
aam
xchg
cltd
jl
adc
hlt
data16
bound
pop
push
aad
in
ret
dec
ja
mov
imul
cmp
mov
fadds
push
lret
loopne
daa
jne
mov
or
push
test
inc
nop
out
fsubl
dec
loop
mov
sub
xchg
mov
xchg
pop
cmpl
push
dec
mov
data16
mov
jnp
pop
shlb
mov
jbe
test
xor
mov
sub
fistps
push
jmp
in
jbe
push
mov
es
cmp
rol
pop
mov
fcomi
push
arpl
aam
xor
and
sbb
daa
mov
mov
xchg
jp
movsb
sbb
bound
cmp
hlt
xor
scas
int
dec
in
push
add
xor
aam
cmp
imul
inc
jo
pop
inc
loope
mov
pop
dec
xor
rorl
ret
inc
jne
mov
add
in
jecxz
aas
nop
insb
cmc
or
leave
dec
push
stos
mov
out
jns
jg
push
mov
and
cmpsl
sub
repnz
cmpsl
xlat
jne
test
add
imull
std
xchg
aaa
add
int
or
pop
inc
mov
push
cmp
pop
mov
inc
or
js
mov
or
cmpl
pop
lahf
jl
fsub
pop
and
pop
dec
jg
jecxz
scas
and
clc
jge
das
pop
sarb
mov
in
cli
hlt
in
imul
shl
stos
aaa
dec
insb
iret
fiadds
or
push
cmc
shll
or
les
gs
xor
push
inc
shrb
mov
ss
outsl
lret
into
daa
xchg
aam
jmp
in
add
and
in
lods
lret
adc
mov
cmpsb
mov
mov
cli
in
sub
aaa
dec
sub
push
insl
sbb
mov
mov
inc
sbb
in
mov
out
je
int
mov
loop
adc
in
lds
pop
mov
push
dec
jmp
mov
in
out
sub
out
mov
cmc
or
sarb
xor
loopne
rolb
cmpsl
sarl
and
stos
push
orb
into
push
popa
repz
lea
test
push
mov
imul
jbe
pop
lret
jbe
mov
not
mov
inc
or
jle
mov
adc
into
imul
jle
enter
setp
les
xchg
inc
fwait
pop
stos
xor
lods
xor
test
cwtl
mov
jge
mov
sbb
sbb
jmp
lret
jb
push
mov
pushf
add
fwait
sbb
sti
pop
inc
mov
mov
sbb
loope
inc
sbb
mov
cli
loope
pop
adc
push
adc
shlb
sub
out
sub
hlt
fmul
cs
push
sbb
mov
adc
adc
jne
imul
mov
sub
xor
push
add
mov
rcrb
popl
aad
loope
push
xchg
loop
cmp
jmp
xor
push
mov
loopne
mov
cltd
int3
shrl
adc
cmp
add
lods
mov
popf
jbe
arpl
mov
mov
cmp
into
mov
pushl
cmpsb
das
mov
add
pusha
mov
js
je
scas
inc
mov
cli
lret
mov
cmp
ljmp
out
jne
cmp
insb
nop
inc
lods
jno
cmp
jbe
mov
mov
in
lds
xlat
mov
insb
orl
outsl
lret
into
js
clc
mov
cmpsl
or
pop
divl
inc
test
in
mov
push
leave
add
cwtl
rorb
mov
pop
cmp
sub
enter
stos
dec
test
lcall
or
dec
mov
xchg
dec
divl
xor
xlat
or
cmp
ds
sbb
push
ja
test
sbb
cmpsb
insl
adc
xchg
sub
add
xor
add
decb
xor
scas
scas
in
bound
push
push
jg
adc
stos
push
push
out
mov
xchg
cmpsl
imul
in
out
test
mov
pop
mov
insl
imul
sub
dec
push
fcompl
xchg
or
cli
out
jmp
xor
dec
fcompl
xchg
in
int
out
popa
push
inc
call
cmp
pop
dec
push
lret
jbe
sbb
sarl
xchg
hlt
jp
imul
and
mull
je
enter
add
mull
xor
scas
jb
shlb
int
aad
fsts
inc
pushf
hlt
sbb
jb
sbb
sub
cmpsl
mov
call
std
ret
push
and
mov
jb
stc
stc
daa
popa
push
mov
decb
xchg
xor
cmpb
lea
xchg
repz
js
lahf
push
dec
cltd
jbe,pn
jne
adc
mov
sub
and
mov
loopne
inc
jb
call
pusha
mov
jno
xchg
scas
cmpsb
ret
fimuls
dec
test
aaa
pop
add
loopne
lds
test
aas
push
pusha
jl
insb
mov
mov
mov
mull
and
movsb
pop
jbe
push
popa
pop
loopne
stos
jecxz
or
std
ljmp
mov
test
hlt
jmp
data16
adc
jo
andb
repz
ljmp
std
dec
and
ss
leave
mov
lret
xchg
xchg
sbb
pop
push
loopne
popf
sub
popa
shlb
mov
bound
fs
xchg
mov
mov
cmp
mov
jecxz
pop
xchg
movsl
pop
ret
sarl
dec
stos
pop
sbb
cmp
into
jbe
pop
jg
addb
pusha
pop
lods
pop
pop
push
sub
hlt
or
jns
xchg
rclb
dec
rcrl
xchg
cltd
pop
cmpb
mov
loop
sbb
sub
xor
push
pop
call
stos
cmp
xchg
mov
push
outsb
icebp
jl
pop
fmull
and
mov
fisttpll
sbb
lahf
stc
mov
dec
add
sub
lods
push
fs
cltd
jl
mov
arpl
and
cmc
dec
in
add
or
jno
xor
xchg
cltd
push
pop
dec
jmp
addr16
xchg
lahf
aad
lea
aad
jmp
popf
mov
lds
cmp
jle
shrl
jb
sahf
imul
nop
push
cli
lahf
and
daa
xchg
mov
or
mov
dec
adc
mov
pop
cltd
push
mov
or
xchg
dec
in
adc
fisubl
repz
jmp
xor
fisubrl
dec
outsl
lds
shr
cltd
and
push
clc
and
stos
call
lods
fisttps
xor
pusha
inc
dec
jl
sub
outsl
loopne
lahf
mov
push
dec
stc
jae
in
jne
push
xor
rcrl
nop
cmp
mov
pop
inc
test
lcall
cmp
mov
scas
sub
dec
stc
enter
xor
add
in
push
xor
in
xor
jmp
mov
pop
in
leave
arpl
imul
mov
shrb
sbb
cmp
movsb
adc
push
mov
xor
jl
mov
out
mov
aam
and
inc
inc
xor
in
pop
fs
cmp
pop
ret
cmp
adc
sbb
mov
push
mov
mov
push
lock
mov
mov
xlat
cwtl
mov
stos
lods
lds
jle
jmp
out
fcompl
ret
pushf
fdivrs
mov
inc
xchg
js
jle
mov
xchg
mov
hlt
in
sbb
cmpsl
push
mov
jmp
leave
ljmp
addr16
dec
cltd
in
mov
pop
scas
fsubrs
xor
in
dec
sbb
ds
sbb
imul
fisttps
mov
std
mov
fldenv
fnstenv
jb
and
pop
jno
xor
es
in
inc
sub
lds
pop
cwtl
xor
ret
pusha
push
movsl
lcall
inc
cmpsl
lods
cmp
cli
loopne
sbb
pusha
ret
lods
xchg
xor
and
dec
jno
xor
fs
mov
xchg
mov
mov
push
add
xchg
or
fnstenv
scas
sarl
push
or
out
movsb
test
inc
clc
xlat
mov
and
hlt
fdiv
out
lahf
rcrb
fs
inc
sti
mov
mov
and
cmp
jbe
xchg
adc
pushf
cltd
jns
push
pop
lahf
sarl
int3
and
inc
and
gs
inc
add
mov
aaa
jle
cs
mov
mov
lret
fisttpl
sub
adc
jecxz
mov
jl
adc
je
push
inc
jo
cmp
xchg
popf
je
pop
mov
into
in
mov
dec
scas
addr16
cmp
int3
dec
movsb
adc
xchg
std
cmp
lock
or
mov
and
fdivs
pop
popf
xlat
shll
ds
cmpb
stos
std
les
test
ftst
insb
arpl
push
stc
xchg
into
or
dec
mov
mov
dec
ret
xor
push
xor
jl
push
arpl
outsb
fidivrl
das
movsl
out
cmp
in
rclb
stos
mov
dec
leave
push
or
lock
mov
cwtl
shll
dec
pop
and
cmpsb
add
mov
aam
or
std
mov
test
add
rclb
pop
in
mov
and
fs
adc
js
data16
movsl
jbe
ljmp
mov
shlb
stos
jnp
lea
xor
xor
pop
xchg
icebp
pop
es
cltd
int3
and
push
or
jnp
mov
loope
mov
add
sahf
and
sahf
pushf
xchg
jg
je
jp
into
lret
adc
dec
push
add
gs
inc
or
gs
mov
xor
mov
xchg
iret
fs
sub
jns
in
push
clc
nop
pop
adc
and
sarb
sbb
push
testb
test
mov
out
inc
pop
dec
pop
in
push
sub
jecxz
loop
ds
rcll
push
pop
xor
fbstp
out
pop
cmpl
gs
mov
push
jae
sbb
popa
mov
and
gs
fisubrl
clc
lds
and
jle
pop
lret
in
ret
cmc
mov
push
mov
imul
iret
mov
add
xchg
pop
sub
hlt
xchg
mov
dec
or
xor
jmp
aam
push
sub
mov
inc
sbb
lods
stos
shll
pop
lgs
push
push
mov
cs
leave
push
cmpsb
jae
cli
adc
roll
mov
cld
mov
pushf
push
icebp
test
push
xchg
push
pop
mov
jo
xchg
mov
aas
xchg
lea
out
dec
add
into
mov
repnz
sbb
and
add
inc
push
pop
cmp
add
xor
pushf
lea
aad
pop
das
data16
mov
enter
test
insl
shlb
pop
leave
jae
mov
insl
add
push
lods
or
sbb
push
int
fdivr
stos
push
ljmp
add
mov
cmc
call
mov
cmpsl
and
repnz
xor
xor
repnz
dec
fcmovne
lahf
dec
cmp
dec
xchg
lcall
lods
in
repz
push
test
push
inc
cltd
in
aas
subl
hlt
and
cmp
mov
repz
cwtl
cmp
xorb
xor
ja
xchg
xchg
xor
jecxz
dec
repz
and
outsb
int
lods
loopne
adc
jg
push
arpl
call
fcoml
inc
or
jge
cli
jne
cld
jb
shll
call
add
push
cmp
push
push
out
insl
inc
pop
sbb
xchg
xor
sub
sub
repnz
and
and
addr16
mulb
or
out
pop
push
dec
out
add
out
mov
or
and
mov
xor
xor
dec
mov
pop
push
mov
xor
xchg
in
lock
testl
add
mov
add
xchg
es
out
mov
cmp
rcll
pop
movl
daa
push
sbb
mov
inc
rol
adc
jmp
cmp
imul
daa
cmc
movsb
adc
cmp
jle
mov
push
fisubl
lods
scas
jg
jecxz
xor
arpl
je
mov
xor
sub
out
sbb
xchg
or
std
add
or
fsubs
cmpsl
rolb
xor
push
or
mov
sub
cmp
mov
je
lahf
mov
and
cmp
mov
stos
dec
ss
int3
or
mov
push
sub
repnz
add
xchg
cs
cmp
dec
sahf
gs
cltd
cmpsl
sbb
jmp
int3
pop
shl
xchg
fucomi
imul
dec
enter
lods
ljmp
addr16
sbb
mov
in
or
cs
and
cmp
popf
adc
sbb
jns
jne
mov
testl
mov
out
aaa
cli
mov
pop
mov
pushf
adcl
xor
daa
push
inc
decb
mov
rol
movsb
push
fistps
mov
cmp
push
push
mov
test
dec
sti
dec
clc
jge
pop
bound
fmul
aam
rol
psubusw
addr16
push
push
xor
inc
ret
repnz
xchg
xor
sub
sub
jae
shlb
dec
fld1
mov
test
push
negb
ja
loop
out
loop
sahf
add
test
mov
pop
cmp
pop
rorb
jnp
push
fdivr
pusha
sub
rcr
dec
in
mov
jge
xor
scas
adc
repz
cmpsb
fs
insl
xor
and
cmp
enter
jp
xchg
pop
imul
pop
out
int3
cli
rcr
fistps
xor
push
push
sub
rorb
pop
mov
dec
icebp
add
outsb
sub
xchg
movsl
filds
mov
int
inc
mov
pushf
mov
inc
stos
test
cmp
int3
pop
movsb
loop
and
les
or
push
sarb
rcrl
call
shlb
mov
into
out
popa
cmp
push
adc
and
jecxz
sbb
jle
shlb
andl
xchg
pushf
pop
out
inc
rorb
jno
sub
cmp
pop
sbb
fiadds
sub
and
mov
call
into
lahf
ret
lahf
in
xor
stc
fadd
call
add
icebp
add
xor
vcvtsi2ss
or
fcmovne
pop
shrl
enter
mov
enter
mov
sub
xchg
mov
out
in
sbb
test
mov
sbb
lret
jp
pop
mov
outsl
sarl
jbe
rorl
jae
mov
xor
pop
jl
adc
int
jnp
cmp
mov
dec
shrl
insl
lahf
mov
push
jmp
xor
dec
push
mov
mov
test
push
lods
int3
pop
arpl
jp
sub
push
jmp
loopne
mov
or
adc
mov
sbb
out
lcall
add
std
add
jmp
sti
into
mov
data16
adc
lret
mov
pop
cltd
addr16
int3
push
inc
push
lret
cmpsb
dec
out
sub
data16
test
rorb
mov
and
jbe
cs
cmpsb
xchg
lcall
aam
push
mov
push
mov
jno
daa
add
cltd
dec
jo
mov
aam
arpl
add
ljmp
daa
or
dec
mov
and
fwait
cmp
insl
or
xchg
or
cmc
mov
inc
mov
scas
lock
cmp
inc
or
pushl
lea
and
leave
imull
push
sub
testb
and
add
mov
fiadds
push
iret
jne
hlt
fwait
or
fwait
hlt
or
rol
push
push
outsb
mov
js
xor
adcb
fisttps
dec
jmp
stc
push
mov
fs
mov
fmull
add
popa
das
repz
mov
add
sbb
mov
or
shrb
pop
inc
inc
dec
stc
jbe
xlat
and
pop
xchg
dec
loopne
cmp
and
daa
mov
xchg
hlt
jbe
and
nop
je
push
in
xor
dec
leave
imul
inc
lock
push
test
xchg
in
in
imul
add
or
adc
outsl
jnp
sarl
pop
or
sbb
sbb
out
mov
nop
dec
fs
leave
ja
pop
or
notl
jg
hlt
push
jno
stos
mov
inc
sarl
jle
in
rcll
scas
mov
fdivp
mov
pop
lock
andl
imul
adc
adc
test
aad
pop
xchg
dec
fwait
cltd
mov
push
mov
jns
ja
das
push
rcrl
scas
sarl
xchg
rclb
mov
rcl
cmpl
mov
pushf
lahf
cld
popf
cmpl
jne
jns
jb
mov
inc
mov
ljmp
or
call
es
push
sub
and
jecxz
imul
mov
pop
adc
cli
lock
sti
xor
pusha
pusha
xchg
xor
jge
fwait
ds
sti
pop
xchg
popf
bt
arpl
jne
stc
xor
push
dec
cld
xor
add
fisttps
ljmp
xor
insl
inc
cwtl
mov
mov
fdivl
shr
icebp
or
or
push
fmuls
cmp
movsl
sub
pop
loope
jecxz
jnp
js
ja
push
mov
jb
orb
and
fwait
cwtl
iret
add
or
pop
sahf
push
daa
adc
push
jge
icebp
sbb
movsb
test
cmp
sub
loop
or
and
xor
aam
cmp
adc
push
popf
cmpsb
inc
in
sarb
js
pop
es
xor
lcall
popl
jp
sub
cmc
movsl
xor
nop
fstl
lahf
pop
dec
mov
lret
pop
pop
inc
push
mov
sub
xchg
add
daa
inc
jle
cli
sub
outsl
push
lahf
mov
add
shl
add
pop
or
xchg
dec
mov
cmp
pushf
lcall
jae
inc
xchg
dec
sub
popf
push
popa
jne
cwtl
cmp
xchg
sub
dec
nop
lock
mov
adc
repnz
sti
pop
mov
loop
movsl
lock
dec
test
xor
mov
mov
or
into
xor
out
icebp
xor
psrlw
loope
lock
cmp
addr16
dec
mov
xchg
loopne
sub
inc
pop
lock
adc
inc
mov
movsb
aad
xchg
xchg
mov
mov
or
and
xchg
inc
push
xchg
ret
sbb
loop
pop
pop
xchg
test
add
xlat
jge
mov
fucomi
sbb
dec
std
cmpsb
mov
sbb
and
adc
cld
jge
jbe
enter
outsl
aas
cmp
xchg
mov
iret
pop
mov
fwait
sbb
jl
add
nop
lahf
and
sub
add
aaa
push
and
fists
mov
sti
testb
pop
jnp
cmp
inc
movsl
sbb
and
jns
leave
jl
mov
push
je
sbb
sbb
pop
jecxz
jnp
add
into
mov
pop
jne
sub
xchg
and
adc
test
sti
out
dec
cmp
jns
arpl
or
and
xchg
add
roll
mov
sub
xchg
lahf
sub
inc
imulb
xchg
rol
pop
idivl
sbb
out
fistpll
movsb
cmp
lret
imul
aam
dec
mov
push
ss
pop
pushf
hlt
inc
dec
cmpsb
sti
mov
cld
inc
popf
mov
int
fwait
daa
inc
mov
rol
xor
or
fsubrl
or
das
dec
sbb
push
mov
inc
out
data16
jne
inc
sahf
mov
and
and
push
sarl
or
xor
pop
inc
push
repnz
mov
test
in
sti
rcrb
or
into
lock
jbe
lds
les
sahf
xchg
sub
pop
aas
les
cmp
inc
ffreep
mov
xchg
inc
jne
iret
mov
or
push
adc
mov
and
cmp
mov
adcb
sbb
xor
cltd
push
xor
sub
or
mov
inc
xor
lock
jl
fidivrs
or
ret
imul
lds
ja
xor
push
cli
sbb
jae
mov
xor
fcmovbe
pop
xchg
inc
gs
push
mov
pop
clc
cmp
jp
pop
xchg
mov
cltd
insb
nop
xor
add
lods
push
push
inc
cmp
notl
in
sub
mov
push
mov
push
call
mov
sub
xor
mov
cmp
xor
jl
xchg
mov
shrb
add
lcall
test
in
jecxz
clc
adc
insb
lcall
mov
enter
and
sub
pop
out
adc
xor
push
push
fsts
sub
pop
negb
dec
insl
push
movb
out
aaa
insb
movsl
mov
iret
shrb
clc
push
ret
or
pop
cmp
inc
cmp
imul
pop
or
xchg
lcall
dec
loope
popf
push
adc
out
pop
inc
popf
add
fwait
mov
dec
adc
outsl
xchg
add
js
adc
nop
lock
push
lods
xor
in
call
jae
or
int
push
and
add
xor
inc
nop
sarb
mov
bound
pop
adc
push
rorl
fwait
test
sbb
sahf
and
movsl
push
xchg
out
adc
out
or
cltd
xchg
out
xchg
aam
mov
leave
push
push
pop
mov
lods
int
jge
inc
jg
adc
sub
shl
push
jmp
push
in
push
outsb
fists
pop
pushf
icebp
js
mov
stc
jns
data16
mov
imul
out
xor
push
cmp
xor
push
push
lahf
pop
inc
movsb
mov
mov
sbb
divl
dec
shrl
cmp
and
jg
jmp
jae
or
outsb
popa
loop
pop
bound
stos
push
aam
dec
sahf
repnz
cmp
sbb
inc
mov
fcmovu
popw
stos
jno
pop
pop
sub
push
push
jecxz
adcb
movsl
dec
jb
mov
mov
out
mov
sbb
clc
mov
rol
pop
jg
cwtl
loop
aas
int3
adc
lahf
pushf
rorl
push
inc
xor
xor
jle
dec
xor
pop
jo
xchg
leave
mov
in
out
mov
sub
xchg
mov
push
jg
icebp
cmp
test
fstpl
and
xor
push
pop
push
popf
lahf
sbbb
cltd
icebp
pusha
call
leave
mov
mov
scas
mov
aaa
insl
xor
sub
mov
sbb
icebp
adc
movsl
jb
imul
mov
xor
aad
data16
addr16
mov
mov
add
xchg
std
sub
push
add
pop
push
add
lcall
jae
popa
scas
pop
cli
fnstsw
xchg
insl
loopne
add
rorl
ja
sub
lret
ja
lret
lods
pop
rcrl
fists
outsb
sub
push
es
jecxz
adc
lahf
loop
inc
sbb
rclb
or
repnz
cltd
dec
das
in
add
lods
mov
data16
xchg
cmp
adc
leave
fstl
push
rcrb
mov
fs
rclb
dec
dec
mov
xchg
inc
mov
dec
xchg
cs
xchg
lods
dec
clc
repnz
test
mov
jl
ja
cmp
pop
mov
mov
aas
push
jg
out
sub
pop
jne
add
xlat
pop
scas
xor
adc
js
jno
xor
rclb
repnz
xor
and
xor
xchg
les
cmp
add
inc
xchg
or
xor
test
aaa
mov
lods
fs
fdivrs
pop
ja
test
cmc
stos
mov
adc
or
jge
xchg
ljmp
mov
sahf
cld
cmpl
or
cmp
rcrl
inc
lret
in
fcomps
fidivrl
stos
push
mov
pop
pop
push
cmp
arpl
test
xchg
xchg
mov
and
xlat
xchg
fcoml
lds
call
jge
sahf
xchg
or
data16
mov
xchg
or
sbb
push
popa
cwtl
pop
scas
sar
cltd
xor
data16
bound
int
loopne
out
dec
inc
lock
cli
push
loop
popa
sub
enter
xchg
popf
push
pop
test
js
decb
fcomi
xor
outsb
cmp
dec
pushf
sub
fcmove
mov
sbb
inc
outsb
jns
inc
imul
xchg
mov
cmp
imul
loopne
cld
sbb
out
lea
les
push
mov
int3
cmpsl
ds
mov
xor
sbb
adc
cld
es
aad
pop
fmuls
adc
mov
hlt
add
in
jmp
pop
notb
dec
mov
push
xor
push
jl
xchg
insb
outsb
insb
add
movsb
aas
and
dec
sub
xor
ja
pushf
inc
xchg
inc
sbb
jae
nop
push
or
xchg
out
or
and
xchg
cli
jbe
and
inc
push
dec
scas
outsl
out
loopne
xor
mov
pop
notb
gs
mov
xor
fnstcw
into
in
shll
notl
lcall
std
add
cmp
lock
lret
in
lahf
inc
stc
sahf
cmp
sbb
fxch
pushf
push
clc
cwtl
mov
pop
sub
rcr
ljmp
sub
mov
jo
adc
push
cmp
jnp
sbb
sub
mov
shrl
fsubs
dec
adc
lret
sbb
mov
add
sbb
loopne
idivl
sub
add
leave
adc
es
ja
inc
bound
and
nop
sub
mov
pop
pop
divl
xchg
cmp
das
fcompl
bnd
es
into
jmp
clc
push
repnz
cmp
rorl
sub
arpl
out
inc
les
add
jge
adc
popa
xor
and
mov
in
shr
stos
mov
pop
shl
fnstsw
push
add
cmpsl
pop
add
add
das
mov
movsl
subl
ss
int3
push
leave
adc
out
ret
mov
pop
cmp
ret
pushf
push
inc
mov
adc
repz
mov
inc
add
ds
rclb
subb
mov
lods
mov
xchg
mov
cmpsb
pop
movsb
mov
aad
loopne
test
popf
mov
mov
inc
push
sbb
xor
jp
xchg
int
imul
div
or
lods
pop
dec
sub
hlt
mov
js
pop
pop
pop
rol
js
jge
pop
xchg
sbb
fiadds
mov
or
sub
mov
sbb
or
cmp
jl
test
scas
dec
and
xchg
dec
mov
mov
mov
jae
sbb
dec
mov
mov
xor
inc
mov
movsb
in
arpl
cmp
pop
shr
pop
xchg
cmp
gs
jno
jge
loope
pop
aas
out
sahf
int
mov
xchg
int
sub
in
js
movsl
rol
ret
dec
icebp
add
push
xchg
call
mov
nop
add
add
or
dec
xchg
or
push
mov
cmpl
repz
and
jp
hlt
ret
or
fdivrs
xchg
push
in
or
stc
adc
stc
test
add
ficoms
in
adcb
adc
loop
lea
mov
jl
pop
not
pusha
faddl
sub
ret
jp
jns
dec
sbb
movsb
loop
dec
pop
cmc
es
addr16
shll
fnstsw
call
inc
loope
stos
sub
pusha
cmc
cmp
fwait
das
rol
add
aam
xchg
add
dec
mov
add
cmp
sub
aam
mov
inc
cld
in
gs
in
sub
iret
cmpb
data16
push
jl
inc
push
ljmp
jl
jecxz
scas
push
and
insb
ja
xchg
xchg
xchg
fcomip
imul
scas
fiadds
push
rorl
fdivl
insl
mov
scas
test
aad
test
das
sub
dec
push
or
mov
enter
outsb
sbb
cmp
cmpsb
mov
fisubrs
test
mov
insl
jle
mov
xchg
jb
insb
pop
jne
dec
inc
push
das
sub
add
hlt
lods
je
adc
sub
in
mov
mov
xor
xor
dec
mov
cmc
call
repz
lahf
jo
xor
aaa
orl
push
sub
xchg
dec
sahf
jp
xchg
in
pushf
outsb
in
loopne
xchg
gs
cld
dec
mov
mov
movsl
rcl
movsl
jae
cwtl
pop
inc
dec
fld
inc
sbb
adc
sbb
pop
lock
popf
mov
lahf
fmul
mov
das
or
mov
icebp
cs
or
xchg
popa
cld
mov
daa
imul
pop
jne
pop
sbb
rcll
inc
and
xchg
xchg
pop
adc
jae
lds
pop
adc
xchg
mov
inc
rcll
pop
mov
pop
les
sub
ss
shll
lock
push
cmpsb
test
and
js
paddsw
into
jmp
icebp
pushf
xchg
cli
add
fistpll
cltd
and
rorl
test
xchg
fisttpll
ja
ljmp
das
jnp
or
add
lret
ljmp
repnz
insl
xchg
xchg
xorb
pop
mov
mov
loopne
rcll
mov
test
or
mov
push
and
and
pop
out
sub
jnp
add
xor
sbb
mov
ror
test
out
fisubrl
cmp
push
scas
sbb
fisubrl
aaa
nop
add
sbb
and
sbb
or
pop
out
mov
bound
into
nop
adc
fwait
mov
cmp
push
push
in
cltd
imul
stos
and
cmpsb
and
pop
xchg
loope
push
arpl
js
in
sbb
fsts
mov
pop
clc
push
imul
or
inc
xchg
call
into
add
cmc
push
jnp
out
pop
cld
sub
mov
xchg
test
pusha
adc
xchg
dec
lahf
insl
aas
mov
fwait
popf
or
xchg
jnp
ss
mov
adc
xor
dec
add
add
add
adc
fcmovnu
inc
inc
negb
xchg
aas
rcl
and
into
xor
jnp
jecxz
sub
fsub
xor
out
sbbb
adc
xchg
ret
or
sbb
and
leave
inc
mov
adc
fists
scas
pop
mov
push
sbb
test
inc
push
shl
sub
mov
popf
pop
out
repz
mov
and
insb
sbb
add
loopne
and
add
push
xchg
pop
fbld
xchg
and
subl
mov
cld
popa
or
imul
mov
xadd
inc
adc
in
shlb
cmpsl
dec
xchg
call
out
fcom
es
sahf
repz
lds
lret
fidivrs
pop
inc
test
and
or
jne
jnp
bnd
roll
inc
in
jecxz
js
and
sahf
dec
dec
jmp
mov
data16
addr16
cmpsl
ja
out
mov
dec
jmp
sarl
and
mov
subl
lret
add
push
mov
sar
pushf
pop
mov
test
je
lock
cmp
push
or
lahf
bound
test
inc
xchg
add
push
es
push
mov
jo
mov
push
sbb
fs
jmp
loope
and
pop
push
lcall
add
or
into
fiaddl
sti
mov
sahf
push
push
sub
add
mov
mov
aam
jmp
imul
mov
adc
push
push
jg
sbb
out
lock
and
sub
jl
lret
icebp
cmp
mov
jo
mov
int3
addr16
cmp
out
movsb
imul
and
sub
mov
xchg
call
fnstcw
jg
fwait
out
push
lea
jl
and
mov
push
test
cli
jmp
js
shlb
cmpsl
add
push
and
in
arpl
arpl
adc
lds
cli
pop
mov
fisubs
cs
push
dec
push
sbb
imul
or
les
mov
dec
jg
mov
xchg
sub
or
lea
sbb
dec
inc
popf
pop
int
pop
pop
aad
mov
insl
sub
aad
dec
mov
popf
pop
pop
push
mov
mov
pop
adc
mov
xchg
mov
stc
pop
loop
int3
dec
or
test
in
pop
divl
es
xor
mov
adc
xlat
sbb
mov
inc
jge
aas
das
jge
sbb
cmp
push
pushf
sarl
sub
jge
cmpl
jne
loopne
lods
jnp
fisttpll
cld
jno
mov
stc
sub
jno
scas
outsl
aas
les
inc
pop
sub
mov
pusha
int3
rcrb
and
pop
imul
adcl
outsb
ret
nop
scas
push
imul
ss
and
adc
out
in
pop
dec
add
aad
xchg
hlt
pusha
cld
dec
fsubrl
jno
pop
add
adc
addl
mov
push
dec
push
loopne
out
movsb
mov
pop
ljmp
movsb
popa
sub
or
xor
les
daa
mov
leave
fcoms
push
pop
jae
adc
dec
shr
or
arpl
mov
dec
sahf
sbb
divb
imulb
lods
push
ret
bound
stc
scas
loope
cwtl
sub
arpl
and
stc
push
inc
popa
sbb
stc
mov
loop
and
test
fbld
lret
insl
cmp
cli
xor
jp
mov
cli
sub
cmp
adc
loopne
mov
das
dec
xchg
scas
push
addr16
or
jp
xchg
sub
pushf
mov
mov
push
shll
inc
mov
ds
push
and
pop
cmp
adc
xchg
adc
or
fistpl
jle
stc
loope
cmp
jbe
mov
fistps
xor
mov
pop
jb
outsl
push
iret
imul
jmp
aaa
or
xchg
mov
xor
or
inc
bound
pop
xchg
test
mov
fucomp
lahf
jo
jmp
add
gs
mov
std
push
movsl
movsb
cmpsb
scas
insb
or
sbb
fwait
cmp
inc
adc
lock
lret
inc
fxch
jae
loope
jmp
push
xor
pop
xchg
or
insl
xchg
js
mov
out
cmp
pop
push
pop
pop
xor
inc
cmpsl
fmull
push
inc
dec
aaa
mov
fists
stos
mov
js
lods
pop
jbe
pop
push
mov
or
in
hlt
xor
in
shlb
or
or
mov
mov
sahf
adcb
mov
sub
clc
jb
mov
adc
mov
fdivs
sub
cmc
int3
sub
push
stc
test
dec
sbb
lret
ret
or
and
std
cmc
add
sub
pop
clc
movsl
cwtl
out
fcomp
popa
mov
jnp
hlt
loopne
xor
cli
imul
xchg
pop
add
lds
jns
cmp
fisttpll
popa
movsb
fwait
movsl
cmp
jno
int
fwait
pop
test
arpl
mov
xchg
les
dec
pop
lds
orb
fisubrl
sbbb
xchg
xchg
pop
inc
jae
mov
push
mov
xor
scas
mov
fsubrl
out
ds
enter
rclb
addl
popf
lods
aaa
out
mov
dec
imul
sub
popf
jbe
daa
sub
dec
out
or
insb
adc
cld
shll
test
push
sub
lret
push
arpl
xor
sub
push
adc
outsb
rol
pop
js
mov
iret
jb
fmuls
mov
setnp
xor
in
sbb
je
js
cmp
dec
add
dec
xchg
sub
push
push
cmpsl
icebp
cmp
pop
fsub
jg
xor
js
call
ficoml
leave
or
pop
push
dec
icebp
or
jnp
sbb
sbb
movsb
loop
fisubs
jg
data16
xchg
or
inc
mov
insl
xor
movsl
dec
xor
test
xchg
cmc
icebp
jl
pop
sbb
jo
xor
out
jecxz
xchg
cmpsb
dec
lcall
movsb
push
or
lret
arpl
and
sbb
std
ret
into
loopne
pop
mov
jno
xchg
jno
or
cmp
rclb
lea
xor
pop
pop
scas
lret
out
push
sbb
adc
sbb
ja
adc
sbb
jb
adc
sbb
in
movsl
fmul
push
cmp
or
mov
sbb
fistpl
cmp
mov
xor
arpl
lret
imul
flds
or
aas
push
ja
insb
test
flds
idiv
push
mov
daa
lret
mov
fnstenv
pop
jmp
mov
cltd
jmp
inc
or
push
fcompl
push
inc
xchg
testb
xlat
cmpsb
iret
jnp
cmp
mov
and
jecxz
inc
mulb
inc
cs
scas
repnz
out
in
pushf
and
popf
and
jne
lock
sahf
pop
and
js
mov
fisubrs
jne
push
icebp
push
lcall
or
fsubs
insl
dec
pop
aad
out
jo
fdivrl
mov
lcall
fs
mov
clc
aad
or
mov
arpl
out
add
lds
movsl
fwait
jno
jb
add
lahf
scas
push
mov
lret
insb
sti
xlat
mov
inc
mov
adc
pushf
dec
enter
popa
sahf
adc
mov
jg
jae
mov
ss
xchg
fmuls
les
or
and
and
dec
xchg
dec
or
out
mov
aad
xor
jp
add
and
push
fwait
fwait
push
mov
add
cmc
dec
mov
filds
mov
jmp
leave
out
push
stc
push
sub
push
andl
insl
mov
cmp
jl
mov
add
or
jo
ret
xor
cmp
lret
aaa
add
and
pop
xor
pop
push
mov
push
adc
xor
pop
jb
aas
repz
rcll
push
outsl
popf
inc
push
bound
or
mov
ljmp
mov
mov
enter
outsb
das
push
dec
cmp
ds
das
shrb
pop
jmp
aas
into
jno
arpl
mov
xor
cwtl
pop
pop
mov
clc
xchg
das
dec
imul
pop
std
push
clc
in
pop
sub
cmp
adc
add
sahf
dec
icebp
stos
sub
or
xor
icebp
or
jno
aam
push
sbb
jle
xchg
xchg
sar
adc
sub
cmpsl
push
sbb
fwait
mov
test
test
push
sti
xor
ja
fwait
test
jae
nop
outsb
shrl
xor
ret
lds
iret
pop
dec
and
xlat
xchg
shrl
and
data16
jne
test
fisttpl
add
ljmp
sub
inc
icebp
xor
push
dec
xor
fs
dec
daa
xchg
loop
test
pop
jge
cmp
add
xchg
fadds
lock
push
inc
popa
sbb
pop
pop
je
pop
fmul
test
mov
mov
leave
in
xchg
pcmpeqd
in
sbb
cmpl
push
mov
divl
mov
nop
mov
andb
cwtl
sbb
sub
loop
repnz
gs
jo
addr16
inc
xchg
in
rolb
lock
mov
lret
popa
push
mov
xor
xchg
push
in
out
push
hlt
xor
sub
arpl
jno
and
xchg
aaa
mov
out
mov
jnp
ds
cmpsb
inc
hlt
pop
pop
repz
pop
loopne
fnstcw
jnp
leave
arpl
lahf
sti
cmp
lock
dec
add
lcall
add
inc
mov
test
cmc
ja
or
cli
aad
cmp
lods
xorb
push
std
or
cmp
stos
xor
inc
aad
mov
xor
pop
ljmp
adc
xor
push
dec
pop
dec
inc
int
xchg
inc
mov
xchg
mov
jb
inc
lea
addr16
jp
push
adcl
mov
inc
mov
clc
outsb
ss
or
push
jae
call
cwtl
jg
add
push
inc
adc
pop
inc
es
cmpl
pop
ds
jp
out
mov
pushf
dec
push
lret
mov
add
inc
dec
fsubr
sub
out
ljmp
aaa
sbb
xlat
dec
inc
fists
sbb
sbb
dec
sub
dec
data16
gs
lds
jns
rcr
jmp
adc
sbb
mov
test
fidivrs
je
inc
mov
cmp
pushf
mov
mov
lea
and
out
lds
mov
test
jns
sub
sarl
addr16
iret
cmpsl
aad
arpl
or
cmc
fbstp
das
fs
and
add
sub
lods
fnstenv
int3
movsb
outsb
rdtsc
cwtl
jb
mov
js
adc
imul
and
sbb
andl
mov
add
xchg
movsb
dec
cmp
inc
ja
test
aas
hlt
push
adc
push
insl
mov
and
cli
mov
pushf
push
cli
ret
js
xchg
pop
addr16
xor
cmp
fdivrl
mov
out
push
xchg
push
scas
in
test
adc
or
imul
sub
sub
jns
adc
call
sahf
cmpsl
push
mov
das
mov
sbb
sub
cmp
mov
mov
xchg
ja
ja
pop
push
xor
and
shl
xchg
adc
inc
and
dec
pop
mov
push
in
inc
shr
test
loop
mov
lcall
les
sub
fwait
mov
jp
and
inc
mull
rorb
push
in
fcoms
mov
pop
sahf
int3
insb
or
sub
lahf
jae
je
jbe
mov
into
test
stos
pop
dec
sbb
adc
jl
lret
rorl
inc
xor
ljmp
test
pop
ss
ret
imul
mov
in
jno
mov
xor
aas
pop
mov
add
pop
jb
fmulp
or
je
aam
stos
jmp
and
or
sbb
mov
fnstenvs
vmovlps
sbb
pop
mov
mov
cmpl
mov
jbe
fidivrl
adc
fsubrs
stos
cmp
and
mov
sbb
fisubl
imul
negl
jmp
lock
cmp
add
xchg
mov
testb
and
push
and
sbb
arpl
push
mov
lcall
xor
jge
fdecstp
ret
sbb
movsl
add
cs
ss
cmpsb
push
and
mov
cmp
mov
xchg
cmpsl
int3
cli
sbb
sahf
sbb
and
int
lahf
pop
xor
push
lock
mov
pop
inc
and
push
pop
sbb
push
test
loope
xchg
pop
jg
mov
or
jge
jnp
push
xor
call
mov
mov
mov
mov
cmpsb
fwait
add
pushf
add
call
push
test
xchg
xlat
fildll
sysret
cmp
and
and
push
hlt
fnstcw
scas
and
in
adc
insl
mov
arpl
pop
sub
popa
enter
xor
pop
call
fst
xchg
inc
cmpsl
mov
inc
nop
rdmsr
in
pop
pop
adc
bound
xchg
lea
dec
add
cmp
lock
fmull
xchg
lds
roll
inc
inc
pushf
or
mov
ret
pop
and
sbb
xlat
shll
aad
jle
xchg
hlt
adc
mov
inc
xchg
sbb
mov
mov
dec
xor
fwait
mov
xchg
jae
popa
mov
pop
arpl
push
outsb
sbb
inc
in
cmp
shrl
dec
xor
and
shlb
leave
mov
scas
js
mov
out
pop
js
and
sub
int
icebp
jge
mov
sub
adc
in
in
dec
sub
das
cwtl
mov
scas
add
leave
out
in
sti
inc
sbb
or
ja
jae
shlb
push
mov
pop
pop
ss
cli
mov
xor
cld
in
ljmp
push
daa
push
xor
mov
mov
loope
pop
aad
and
push
inc
pop
xor
push
bnd
repnz
movsb
xchg
mov
and
push
insb
test
xchg
pusha
inc
sahf
fldt
lcall
mov
xchg
faddp
shlb
sahf
or
inc
lahf
add
cmp
dec
or
lods
in
andl
ret
xchg
push
cmp
imull
jo
sub
mov
jo
ret
mov
mov
xchg
js
dec
out
das
or
les
cs
test
aad
sbb
dec
push
roll
fs
lods
lahf
fdivr
sub
call
sub
das
xor
sarb
jb
sahf
lods
xchg
cmp
fs
push
or
imul
xchg
sbb
mov
in
or
scas
xchg
aam
push
out
cmpsb
stos
lret
adcb
mov
cmp
jp
adc
add
mov
dec
lret
dec
xor
mov
out
push
adc
pop
leave
cmp
out
icebp
xchg
pushl
mov
and
adc
push
pop
imul
inc
out
and
jbe
dec
adc
jge
std
push
out
in
inc
ss
mov
pop
mov
xchg
mov
xor
adc
dec
and
mov
sbbl
xchg
jmp
movsl
sub
adc
pop
sbb
adc
daa
inc
divl
enter
mov
cmp
inc
xchg
test
add
imul
ja
xchg
sub
sbb
idiv
add
xchg
fwait
sbb
dec
lret
sub
cltd
repz
aaa
in
lret
aaa
fcompl
cld
sbb
cwtl
cld
cmp
push
mov
clc
and
or
mov
push
mov
lcall
sbb
mov
jo
adc
add
jmp
sbb
mov
into
pop
mov
pop
inc
and
sarl
mov
fbstp
push
in
pop
mov
enter
mov
add
inc
filds
lods
je
pop
ret
aad
inc
mov
into
hlt
mov
cmpsl
adc
fldenv
xor
adc
push
lahf
idivb
sub
imul
xor
and
push
leave
ljmp
or
ret
sub
mov
mov
cmpsb
popf
sbb
pop
adc
dec
das
test
fmulp
or
movsb
lock
inc
sbbl
mov
or
nop
cmpsb
sbb
xchg
sbb
sub
mov
aad
mov
in
push
mov
xchg
inc
test
jmp
jecxz
pop
mov
jecxz
jmp
push
sub
inc
ret
fildll
xor
jge
inc
xlat
push
testl
sahf
xchg
in
insb
lea
outsb
bound
int
out
inc
sub
loop
cwtl
and
push
xorb
inc
loopne
xor
cs
ret
or
mov
pushf
cwtl
jl
mov
cs
pop
aas
and
mov
jmp
das
dec
mov
repnz
mov
repnz
fsubl
dec
aaa
sti
ds
out
mov
add
pop
mov
xor
dec
push
popf
lea
iret
add
arpl
inc
shrl
jmp
jne
lods
ret
in
cmp
out
sub
test
or
aaa
cli
ja
out
mov
scas
es
dec
sub
fidivl
and
add
in
pop
fs
fs
or
adc
call
dec
push
xchg
mov
fistpll
cmp
lods
lret
test
imul
mov
mov
cld
bnd
add
sbb
inc
inc
out
ficomps
outsl
sbb
scas
inc
shlb
pop
sub
lahf
push
xchg
lea
jno
sbb
push
mov
popf
mov
je
rorl
aaa
fstpl
aam
inc
mov
adc
mov
cmp
jno
subps
mov
jecxz
mov
idivb
hlt
pop
xchg
das
inc
push
cmp
jecxz
sbb
cwtl
sbb
nop
cwtl
pop
lret
adc
fidivs
adc
or
pop
inc
xor
cmpsb
idivb
push
das
loop
xchg
and
ficoml
sbb
ds
addr16
test
mov
mov
dec
sbb
xchg
aad
lret
sub
add
lret
mov
push
ja
data16
faddl
pop
push
dec
adc
jns
mov
jae
inc
xor
adc
das
sub
and
mov
sar
add
icebp
dec
dec
fisttps
and
pop
jno
sbb
cmp
cmp
repz
insb
loop
fisttps
loop
je
adc
scas
rcl
aaa
loopne
mov
ret
push
mov
cmpsb
sbb
and
and
dec
adc
cmp
sbb
popf
sub
call
xchg
daa
mov
jge
mov
xor
in
pop
xchg
cmp
jnp,pn
stos
arpl
cli
and
jno
shl
pop
shlb
xor
sbb
push
ficompl
test
adc
pop
cmp
add
in
sbb
jae
dec
mov
js
lock
xchg
lcall
push
mov
or
sbb
popf
pop
sub
icebp
enter
rcrl
ret
mov
popa
sub
mov
push
adc
pop
xor
pop
iret
mov
jae
adcl
sub
jnp
imul
lcall
arpl
loope
adc
jbe
cmp
add
fdivrl
ret
cmp
cmp
mov
scas
mov
dec
mov
fs
js
cmp
cmp
pop
xor
cmpsl
sbb
add
cwtl
xor
scas
jo
xchg
test
das
aas
ret
sbb
int3
xchg
insb
push
jle
xchg
data16
outsl
inc
mov
mov
sbb
inc
mov
test
int
xchg
mov
call
or
dec
imul
out
sub
test
dec
push
sbb
add
mov
mov
fldenv
dec
xchg
jnp
test
out
jecxz
arpl
or
mov
push
enter
mov
jg
mov
sbb
lcall
and
xchg
cmp
mov
jno
push
or
aam
das
in
mov
push
aas
test
ficoms
jb
push
inc
xor
int
iret
add
or
aas
xor
sbbl
ret
mov
je
flds
hlt
cbtw
ja
std
pop
cmp
mov
mov
or
xor
xor
fisubs
shll
std
adc
cmp
movsb
sub
pop
stc
and
dec
pop
fcomip
xlat
pop
orl
jl
fnstenv
jl
sbb
add
cmc
out
mov
inc
fwait
addr16
bound
lods
popf
push
out
jbe
repz
jl
repnz
mov
ja
bound
pop
sbb
pop
or
nop
xchg
scas
and
testl
addr16
xchg
xor
fidivrs
cmp
and
or
mov
int
push
cmpsb
inc
push
mov
ret
mov
nop
loopne
sub
xchg
pop
icebp
fisubrs
mov
dec
iret
sub
mov
mov
xchg
gs
xchg
mov
push
cmp
ret
rolb
cmp
pop
adc
pop
xchg
sub
rcll
addl
stos
xor
mov
mov
mov
jle
adc
ret
jmp
mov
inc
inc
push
push
xor
jle
add
sti
enter
sub
inc
sbb
or
mov
out
cmpsb
addr16
mov
and
mov
lcall
ds
rol
fidivl
adc
cwtl
cld
test
or
xor
int3
push
mov
int
je
mov
or
xor
add
mov
jecxz
std
sbb
pop
ljmp
scas
mov
add
aaa
cmp
jmp
sub
push
bound
and
rcrl
push
mov
and
dec
std
xor
out
jp
out
sahf
mov
add
aas
xor
mov
pop
jmp
out
lods
xchg
pop
repz
rcrl
ljmp
mov
push
push
shll
pushf
jle
fldt
cmp
lods
sub
mov
pop
aam
rorl
push
mov
aad
in
pop
inc
cwtl
jge
dec
mov
inc
loop
js
gs
fsubrp
out
lods
sub
push
repz
test
in
in
imul
and
xorb
loope
cs
xchg
rcrb
mov
xchg
mov
cwtl
sub
scas
jle
jecxz
and
mov
shr
cmpsb
frstor
scas
clc
cli
mov
test
arpl
jge
xchg
movsl
inc
sahf
mov
imul
loope
stos
mov
test
xor
aaa
stc
out
popa
pop
cmp
cs
and
dec
and
xchg
inc
nop
cmc
ftst
stos
push
daa
adc
mov
out
pop
jns
xchg
and
imul
dec
cmp
in
pop
aaa
sbb
pusha
adc
inc
xchg
scas
aad
out
cmp
push
fnsave
and
push
mov
mov
fst
jl
mov
add
xor
pop
cwtl
and
sbb
mov
mov
pop
dec
or
loopne
push
ficoms
dec
cmp
ficoms
cwtl
loope
daa
lahf
jmp
add
sub
mov
jb
jbe
and
push
jns
xchg
jbe
bound
mov
fldl
mov
mov
dec
shl
shll
sub
jnp
adcb
out
jl
stos
push
ds
imul
pop
adc
addr16
jle
in
out
sbb
in
jbe
push
cmp
sub
out
fadd
sub
sub
cld
call
hlt
decl
loop
stos
out
fs
imul
fadds
push
bnd
incl
scas
xlat
jp
int3
inc
rorb
or
call
push
gs
mov
mov
pushl
cwtl
aaa
mov
rolb
enter
scas
mov
repnz
movsb
jge
mov
icebp
and
fcom
pusha
mov
clc
add
movsb
mov
iret
inc
icebp
xor
fildll
jae
popf
and
inc
adc
lcall
shll
lret
mov
jl
push
pop
mov
hlt
mov
pop
outsb
and
jge
mov
jo
jp
cmp
inc
add
and
and
das
fwait
mov
sti
aam
lcall
es
test
xchg
pop
vrcpss
scas
fucom
fcmovnu
mov
repz
and
xor
push
or
dec
and
mov
fildl
shll
je
cmpsb
jno
aas
jecxz
outsl
jl
lea
pop
cwtl
sub
out
jl,pt
cs
push
cmp
push
xor
test
dec
dec
sahf
popa
lea
mov
fwait
jmp
in
in
jno
lcall
push
pxor
outsl
sahf
inc
and
decl
sub
push
fs
popa
or
pop
mov
inc
pop
xor
dec
addr16
dec
xchg
pop
adc
add
lea
sbb
scas
push
jg
pop
loopne
or
loop
pusha
or
flds
ja
dec
call
sbb
leave
pop
add
push
cs
hlt
stc
mov
jnp
shrl
pop
push
int
push
jns
inc
clc
cmp
movsb
jae
scas
cmp
rcll
out
in
push
mov
ljmp
fistps
adc
cld
cmp
xchg
jmp
xchg
lret
jo
xchg
pushf
negl
cmc
sub
dec
sbb
imul
mov
js
jmp
push
loop
mov
leave
pop
sub
test
pop
cs
lea
adc
adc
or
in
push
mov
mov
adc
lret
xor
inc
xor
cmp
and
mov
adc
sub
dec
fsubl
add
pop
mov
sbb
cmpsb
mov
push
add
into
pop
and
icebp
pop
cmp
ja
mov
inc
repnz
push
test
test
jp
or
loope
dec
fisubrs
and
pop
inc
mov
push
add
in
aam
or
push
mov
push
adc
mov
inc
pop
cmp
popf
add
repnz
cmc
addr16
pop
jbe
ret
shll
repnz
push
xchg
out
shlb
inc
xor
rolb
push
adc
iret
pop
pop
lcall
mov
mov
outsb
lret
xor
add
and
pusha
push
in
outsb
sahf
in
jb
imul
dec
xchg
cmp
xchg
repz
push
xchg
push
adc
fsubs
fistl
cmpsb
ja
arpl
sbb
inc
ds
and
sub
pushf
popf
add
pop
inc
and
sarl
xchg
mov
pop
idivl
test
cs
repnz
je
dec
mov
mov
dec
xchg
es
push
ret
sub
ret
xchg
and
lods
xor
push
ljmp
out
inc
mov
icebp
fisubl
dec
xor
mov
or
pop
call
push
sub
fsubrs
or
push
xchg
repnz
popf
sbb
jo
adc
cli
cmp
jle
stc
cmp
sahf
mov
js
in
adcl
notb
and
lds
pop
scas
iret
dec
or
and
fisubrl
sub
es
mov
rcll
dec
cld
cmc
or
aad
ret
addl
fsubr
sbb
cmp
and
adc
popa
movsb
cmpsb
popa
andl
leave
clc
test
add
dec
dec
sbb
fld
dec
mov
mov
mov
inc
xor
xor
sarb
push
hlt
inc
js
fwait
sub
xor
mov
vpgatherdq
loop
adcl
jp,pn
jno
mov
xor
lret
add
mov
rcr
cmp
data16
ja
pop
jns
roll
mov
dec
jmp
inc
outsl
jecxz
mov
stc
sub
xchg
daa
xchg
ret
xchg
repz
push
lahf
clc
int3
in
or
mov
jg
adc
inc
xchg
add
inc
inc
cmp
int
xchg
push
sbb
lret
or
cli
aas
in
out
rclb
std
insb
add
and
jl
mov
in
push
pop
pop
and
int
lock
cmpsl
fstps
cmc
xor
decb
into
ljmp
xchg
sahf
xor
mov
cmpsl
icebp
leave
bound
xor
insl
sbb
imul
cmp
lcall
inc
lea
or
sbbl
cmp
sbb
repz
imul
inc
cmp
mov
test
xchg
fs
loopne
push
dec
dec
or
jmp
test
fimuls
pop
xor
sub
in
lcall
rcrl
mov
add
popa
xor
sbb
sub
sti
lret
pushf
fwait
mov
scas
adc
mov
jns
sub
sub
fcmovbe
add
adc
dec
leave
and
popf
inc
lock
addr16
dec
mov
mov
jnp
lods
cmp
lret
mov
insl
mov
pusha
add
jl
xor
mov
in
push
pop
rcll
or
flds
andl
push
outsb
pushf
loop
xchg
es
inc
cli
adc
mov
test
mov
and
imul
repnz
out
sti
xchg
dec
hlt
inc
add
inc
popa
in
sbb
out
test
arpl
cmc
test
jg
stc
clc
adcl
mov
jo
cmp
imul
xchg
inc
cwtl
sub
test
ja
or
idivb
shlb
push
rcrl
jecxz
pop
scas
push
and
decb
inc
enter
pushf
fstp
pop
cltd
and
icebp
adc
and
clc
mov
mov
lods
add
shll
cmp
out
mov
ja
dec
pop
cmpsl
pop
adc
movl
cmp
insl
fsts
and
dec
cmp
inc
mov
rorl
ret
jb
cmp
xchg
mov
mov
mov
sub
out
mov
cmp
into
xor
imulb
push
dec
add
and
jbe
out
lds
or
icebp
bnd
adcb
in
aad
jbe
mov
dec
mov
xchg
push
outsb
inc
sub
add
mov
inc
lret
jnp
enter
push
clc
dec
fwait
add
call
rcrb
mov
test
mov
in
sub
push
push
ja
sub
xor
mov
in
pop
or
movsl
imul
testb
or
jbe
out
movsb
out
jmp
sbb
cmp
xor
ja
xchg
jmp
stos
mov
loop
sbb
idivb
mull
xor
jb
jge
int
sub
lods
xor
loope
jo
add
xchg
push
adc
icebp
mov
pop
push
and
xlat
arpl
daa
push
sub
iret
insb
stos
lds
xor
mov
add
mov
mov
das
xor
aaa
imul
pop
ret
pusha
hlt
divb
mov
shrl
sub
dec
pusha
aaa
clc
lods
add
bound
mov
jl
or
mov
sti
mov
mov
jo
fisubs
sti
jns
arpl
fidivl
xor
and
jb
pop
jb
adcl
outsb
lea
cmc
pop
jns
movsb
and
and
xchg
dec
push
cmp
daa
fmuls
popa
mov
jp
movsl
jle
jnp
mulb
mov
push
mov
xchg
push
sub
add
xchg
aad
out
stos
pop
pop
and
pop
xorb
ljmp
adcl
pop
xorl
nop
pop
mov
mov
mov
sbb
sahf
jg
adc
sbb
stc
jecxz
mov
xchg
or
push
ret
aas
and
push
ds
in
push
push
frstor
add
lods
pop
sub
push
das
in
adc
dec
cmp
sbb
bound
adc
push
and
movsl
or
mov
pop
bound
push
sbb
movsl
push
mov
sub
scas
dec
xchg
int
pop
fbld
lock
xchg
xchg
cmpsb
mov
iret
and
and
adc
divb
push
jb,pn
sbb
fimuls
test
jbe
or
rcrl
imul
sahf
sbb
outsb
jl
push
adc
fsubs
fsubr
mov
push
in
or
mov
push
add
and
fadd
xchg
mov
sti
repnz
andb
or
jge
add
pushl
dec
enter
ror
mov
lret
add
push
mov
jo
or
stos
inc
dec
adc
cwtl
push
orb
sarb
mov
mov
sub
sub
dec
je
lahf
or
and
sub
rorb
loope
out
xchg
push
loopne
test
test
loop
xchg
adc
pop
and
push
ljmp
out
aam
fs
adc
cmc
loope
stos
ret
sub
mov
mov
lret
mov
mov
push
syscall
pusha
lock
mov
mov
inc
mov
pop
ret
sub
shrb
cmpsl
push
pop
imul
pop
sub
pop
or
testl
and
sahf
aam
mov
xchg
adc
leave
xor
lcall
xor
pop
xor
fistl
out
sbb
cmpsb
inc
adc
push
incb
adcb
ja
mov
shrb
cmpsl
lods
bound
xchg
pop
mov
ficompl
mov
test
pusha
cmc
lods
pop
and
nop
pop
and
js
out
jmp
sub
cli
push
pop
js
mov
jmp
or
cmp
xchg
fs
adc
daa
pop
daa
aad
inc
leave
mov
lret
arpl
sbb
loope
push
jnp
mov
xor
outsl
mov
fabs
xchg
jnp
mov
cld
push
sahf
push
inc
outsb
hlt
mov
insl
out
sbb
cmp
xchg
dec
inc
pop
ja
cld
cmp
adc
jle
push
addb
je
mov
cmp
stc
inc
cmpsl
int3
lock
lea
test
mov
repnz
add
sahf
mov
mov
pushf
std
fsubp
sub
dec
filds
lret
lcall
mov
xor
sbb
xchg
sbb
pop
aad
ss
out
mov
mov
xchg
mov
inc
sub
aas
sub
iret
xor
sub
dec
cmc
sahf
scas
scas
and
jle
or
sbb
sbb
mov
push
fadds
std
xor
jg
dec
ds
dec
and
pusha
popa
push
loop
mov
lods
jne
xor
iret
pop
pop
insl
mov
notb
jns
xor
movsl
orl
add
sub
pop
leave
push
dec
rcrb
xor
int
mov
push
insl
test
cmc
je
xchg
mov
cmp
or
jl
and
in
sbb
cli
inc
outsl
or
mov
repz
dec
push
pushf
adc
add
das
push
lock
mov
loop
adc
xchg
and
dec
leave
das
jbe
mov
mov
sub
pop
jmp
das
cltd
pusha
fwait
lea
jmp
rol
sarb
inc
jno
mov
xchg
lock
dec
jge
or
loopne
mov
leave
rcrb
cmp
stos
dec
pop
cmp
fidivl
lods
xor
sbb
aas
lret
xor
imul
ret
mov
adc
pusha
push
mov
xor
push
push
sub
aam
mov
insl
les
mov
inc
decb
or
or
movsb
enter
out
and
push
loopne
add
cmc
add
test
out
pop
mov
pop
aas
test
xor
and
push
out
jmp
adc
jg
out
push
popf
mov
pop
mov
int3
xchg
shlb
mov
pop
pop
sub
add
pushf
jmp
gs
lahf
jns
inc
mov
repnz
lods
mov
addl
adc
mov
mov
pop
into
stos
lcall
aaa
sbb
dec
mov
inc
jecxz
dec
cwtl
aad
orl
jge
sub
push
jle
jp
push
movsl
jle
or
dec
push
scas
push
subb
jle
push
mov
stos
xor
jbe
clc
or
cmp
cmp
add
push
and
filds
and
cmp
cs
dec
movsb
sub
jne
mov
sbb
and
stos
jecxz
rcl
pusha
out
mov
mov
inc
lds
std
pusha
in
inc
mov
add
inc
pop
sub
nop
inc
mov
loopne
dec
sarb
ljmp
out
cmp
scas
sub
es
cmp
dec
xor
sbb
dec
insb
or
loope
rorl
pop
dec
icebp
test
aas
sti
cmpsb
dec
jae
jns
sbb
push
mov
lret
or
ljmp
shlb
insl
sahf
xchg
loopne
inc
lcall
scas
lods
dec
stos
pop
aad
icebp
popa
sahf
dec
arpl
jle
out
clc
cmpb
dec
cmp
mov
inc
mov
mov
nop
test
and
push
mov
out
pop
std
dec
jbe
lret
in
or
or
and
ret
xchg
idivl
mov
stc
push
test
adc
loope
add
xorb
inc
or
aaa
je
hlt
jo
xlat
jecxz
push
addr16
gs
dec
shlb
cmp
sub
xchg
adc
test
and
js
stos
imul
xor
dec
cmp
push
call
aam
xor
fisubrl
imul
lds
jnp
mov
jp
and
xor
jl
lcall
add
lcall
icebp
and
cmp
mov
mov
xchg
mov
pop
movsb
jp
aaa
add
xchg
cmc
adc
pop
and
ss
pop
popa
ljmp
arpl
pop
pusha
sti
xchg
into
mov
aaa
ds
scas
mov
cli
sti
aam
cmp
clc
xchg
jg
pop
cwtl
push
push
in
cmpsb
xchg
and
dec
mov
adc
test
mov
mov
sarb
xor
adcb
cmc
test
mov
repz
jl
pop
or
jecxz
cwtl
cltd
mov
clc
out
fstpt
addb
enter
pop
xchg
sbb
mov
push
rcrl
nop
cmp
lahf
out
dec
cwtl
fs
add
aam
daa
or
cmp
inc
testl
mov
xchg
mov
bound
shll
pop
scas
or
mov
fcoml
lcall
iret
cmpsb
ret
fcomi
xchg
out
mov
daa
jmp
pushf
cmp
cmp
insb
jno
inc
mov
fidivl
into
mov
cmc
push
cmp
sti
test
sahf
mov
aad
out
cmp
push
movsl
mov
in
inc
ret
or
and
lds
sbb
inc
stos
in
push
mov
idivl
pushf
lods
mov
and
outsb
ret
mov
fcomi
mov
fstps
rcl
gs
jp
out
shr
pusha
mov
ja
pushf
dec
adc
add
pop
gs
in
inc
pop
mov
sbb
xchg
jnp
mov
and
enter
xchg
dec
fists
add
in
push
sub
aaa
mov
idivl
xor
mov
ja
pop
aam
jo
movsb
push
xorb
pop
or
or
sti
leave
mov
pop
ljmp
jne
in
pop
jns
push
es
mov
adc
pop
or
inc
cmpsl
add
cmp
inc
sti
jp
shrb
mov
fsubl
jp
daa
mov
mov
int
fldl
add
out
pop
cmp
mov
lods
in
pop
insl
mov
out
sub
out
lods
push
int3
shl
js
stos
xchg
jp
xchg
inc
idivl
xchg
mov
mov
add
sbb
inc
pop
aad
loop
std
pop
push
xor
adc
sub
sbb
dec
cmpsl
pop
dec
pop
sbb
addr16
ljmp
popa
mov
sti
xchg
jbe
imul
enter
loop
cld
cmp
stos
add
in
rol
cmp
push
enter
es
adc
stos
or
add
jge
xlat
pop
repz
push
pop
add
xor
and
adc
outsb
dec
andl
cmp
pushf
mov
lret
test
js
mov
les
out
lcall
rorb
cmp
or
and
lcall
cmp
ret
lods
cmp
cmp
push
call
stos
xor
jb
div
pop
cld
sub
pop
jno
mov
pop
xor
sbb
les
inc
add
nop
cmp
mov
sub
scas
and
imulb
xchg
xor
aad
cld
mov
movsb
test
add
mov
into
push
sbb
int
lods
cli
popf
in
enter
icebp
clc
stos
pop
xorb
jg
cmc
int
clc
adcl
mov
dec
les
adc
jge
pusha
sbb
push
sub
in
inc
loop
cltd
imul
jo
sarb
ljmp
push
loop
mov
out
in
mov
xchg
test
mov
enter
ljmp
mov
das
xchg
je
xor
cmpsl
enter
push
in
mov
and
mov
ret
or
dec
mov
and
rorb
std
ss
xchg
fdivp
sbb
push
aaa
loope
je
xlat
fs
jge
cltd
jbe
cmpl
dec
push
es
mov
adc
or
pop
mov
popa
ret
dec
sub
dec
lock
and
ljmp
idivb
in
mov
bound
pop
ret
or
fiadds
xor
jmp
nop
inc
fcoml
adc
imulb
mov
jae
xchg
cmp
loope
popf
pusha
popa
lea
jb
test
jge
push
mov
adc
pop
out
in
out
xor
mov
ljmp
jecxz
pop
lret
or
daa
dec
mov
test
in
inc
cmc
jmp
dec
mov
jne
adc
cwtl
lea
int
mov
mov
push
cmp
jmp
pop
mov
mov
aas
imul
scas
add
pusha
xchg
out
sbb
lock
cli
sbb
sub
gs
imul
xchg
in
sbb
add
lods
xor
testl
and
loopne
divb
jo
ror
shrb
stos
hlt
xor
xor
or
dec
mov
fcoms
in
add
cmpb
cmp
xchg
add
or
in
sahf
push
push
lret
jbe
cmpsb
cmp
in
xor
mov
fmulp
icebp
xor
push
loop
sti
popl
out
push
pop
mov
and
and
xor
mov
adc
or
sbbl
mov
and
mov
sti
mov
cmc
mov
dec
rcl
ss
addr16
adc
xchg
mov
dec
sbb
jbe
out
aam
aad
roll
pop
pop
push
mov
pop
mov
inc
lds
int3
xchg
xor
mov
push
mov
sub
mov
into
shl
jmp
test
sbb
out
pushf
out
jmp
push
adc
lock
mov
and
sub
lock
mov
pop
mov
lret
adc
fwait
and
ss
lods
pop
andl
and
adc
xor
lock
mov
sub
push
mov
sbb
adc
jns
mov
popl
xor
push
inc
addr16
data16
mov
and
jle
sti
in
add
cld
push
cmp
sub
mov
lods
test
orl
cmpsl
xlat
ret
daa
cmp
jne
ja
out
sub
aam
xor
test
sub
bound
imul
inc
and
jecxz
jb
mov
push
pop
sub
stc
add
dec
and
movsb
fisubrs
lods
jo
mov
adc
lret
fisttps
stos
adc
adc
stos
mov
leave
pop
mov
push
cltd
pushf
negb
rorl
jmp
jmp
pop
sbb
push
pop
mov
adc
in
bound
dec
pop
inc
in
push
push
xor
ffree
dec
in
dec
pop
or
mov
push
lods
sub
push
and
fcompl
sub
push
rcll
loope
push
loop,pn
inc
adc
add
fcmovnbe
add
sbb
in
push
sbb
xor
andl
or
sbb
and
insb
dec
mov
clc
enter
loope
cltd
lcall
lock
lcall
lret
popa
scas
pop
je
addr16
mov
daa
cmp
outsb
cmp
fsubrs
mov
outsb
icebp
ljmp
ljmp
push
es
dec
lods
mov
sub
loope
pop
inc
pusha
mov
mov
mov
stc
addr16
hlt
xchg
outsl
into
sbb
lret
sbb
jecxz
scas
push
into
sbb
ss
call
xlat
lahf
lahf
push
push
pop
lods
imul
int3
mov
ss
push
js
js
pusha
and
loop
xor
cmp
aas
sarl
push
mov
shlb
fwait
pop
cld
jp
pop
mov
jp
xchg
in
psubsw
bsf
xchg
bound
jecxz
decb
out
dec
or
psrlw
filds
arpl
ds
leave
shlb
mov
addr16
mov
addr16
add
adc
push
out
jbe
cmovno
test
jno
inc
daa
sub
imul
stos
sub
pop
mov
cmp
push
cmp
punpckhwd
jl
jno
add
or
int3
sub
mov
data16
test
in
jge
mov
push
add
jb
adc
fsubrp
lods
xchg
inc
pop
es
aaa
push
or
fisubrl
mov
cs
mov
pop
sub
dec
scas
xor
pop
ss
imul
out
sbb
mov
shlb
inc
shr
in
dec
sbb
xchg
xchg
fs
fdivrs
dec
scas
xor
push
lods
xchg
lods
scas
loop
xor
pop
push
and
mov
clc
mulb
mov
inc
adc
lret
test
cmp
pop
xor
sub
mov
les
xchg
push
sbb
mul
xor
jmp
pusha
push
mov
frndint
lret
and
sahf
mov
scas
les
fwait
or
pop
xor
push
fs
test
pop
adc
pop
outsl
add
out
mov
gs
push
or
pusha
sbb
xor
mov
adc
ja
jecxz
call
jg
mov
out
cmpsl
mov
jmp
jb
nopl
sarb
movsb
xchg
outsl
pushf
lret
test
aas
aad
movb
xlat
mov
daa
insl
or
adc
jmp
sar
add
ret
les
mov
lds
push
inc
iret
stos
push
leave
add
add
xor
sbb
sbb
push
xchg
sub
sub
lea
testl
repnz
jg
repnz
inc
and
and
jl
pushf
mov
push
jbe
testb
push
sub
lahf
sahf
xchg
push
test
pop
stos
add
cmp
mov
lods
scas
push
and
pop
xor
loop
mov
fs
insb
mov
inc
pop
test
inc
cmp
dec
adcl
pop
dec
jo
mov
test
or
mov
push
jp
inc
pop
sbb
ja
adc
fisubs
cli
dec
in
xor
cmp
push
adc
arpl
cs
repnz
addr16
enter
xchg
inc
adc
cmp
xchg
out
jbe
dec
imulw
iret
fsubp
sbb
add
add
sub
or
call
or
in
mov
xchg
std
jmp
es
add
test
out
fbld
ds
rol
adc
lea
push
ret
enter
push
ret
push
popa
jb
fdivrl
xchg
sarb
ror
jae
cld
std
bound
and
jge
mov
mov
xchg
sub
test
sahf
clc
sar
inc
subl
loopne
push
insl
mov
loop
jne
shlb
xchg
rcll
nop
scas
mov
adc
mov
mov
gs
cmpsb
sti
jae
nop
loop
data16
mov
add
fmul
pop
insl
fisttpll
push
mov
adcl
jle
lock
dec
jb
dec
aaa
push
sub
dec
cmp
push
jl
xchg
push
fsubl
call
and
mov
popf
js
lods
mov
in
pushf
cmp
movsb
fdivrp
jno
xchg
pop
sarl
xlat
sbb
mov
mov
add
nop
pop
or
insl
cmp
std
sti
mov
adc
cltd
mov
mov
rorb
mov
push
push
test
dec
add
out
mov
jno
add
pop
test
inc
jnp
sub
mov
jge
gs
fistl
add
xchg
test
or
add
mov
repnz
in
xlat
pop
jg
jae
and
xchg
lret
repz
and
jl
enter
pop
fdivrl
nop
xor
testb
jo
inc
fwait
and
jmp
aas
cmpl
add
fcompl
push
call
dec
nop
repz
out
enter
dec
out
lea
ret
pop
out
pop
mov
sbbl
sahf
mov
jb
mov
das
inc
iret
push
lcall
pop
xchg
in
pop
popa
inc
jo
mov
pusha
scas
out
jmp
lret
xchg
fmull
xchg
out
add
es
imulb
out
shll
cmc
jnp
addb
sbb
sub
sub
nop
pop
cli
mov
mov
outsl
xchg
inc
mov
in
push
cmp
mov
jp
rcll
pop
push
pop
or
jmp
cwtl
call
xchg
adc
adc
test
jg
out
jmp
test
jo
jle
sub
shrb
icebp
fcomps
xchg
mov
aad
insl
das
push
jo
add
push
jge
imul
push
jecxz
imul
and
add
lret
push
cmc
cwtl
jmp
ds
nop
inc
pop
loopne
cmp
add
push
add
and
scas
out
fwait
mov
mov
dec
push
pushf
std
in
push
pop
shl
pop
js
mov
pop
fiaddl
sbb
ja
push
loop
mov
push
mov
pop
scas
adc
xchg
addr16
pop
sub
sub
jmp
sbb
sarb
fstpl
fcmovnbe
cmpsb
in
pop
je
cltd
cmp
or
mov
out
pop
adc
xchg
xchg
xor
and
nop
jmp
mov
mov
inc
add
out
lret
daa
or
ret
repnz
aad
imul
pop
jle
in
insl
xorb
je
aam
aas
test
jmp
imulb
inc
sub
pop
icebp
in
sbb
ja
dec
xor
sbb
lds
xchg
loop
jb
dec
outsl
fsubr
cs
packssdw
jle
push
inc
ret
lret
jecxz
lods
sub
mov
jl
xchg
mov
or
rol
cmc
lahf
dec
adc
push
sbb
and
mov
mov
and
popa
cmp
mov
pop
push
out
inc
mov
push
cmpb
addb
or
addr16
iret
cmpl
hlt
or
xor
lods
test
iret
dec
mov
and
hlt
jl
sbb
mov
loope
mov
out
adcb
cmpsb
loop
mov
pop
pop
das
pop
push
rcr
cmpsb
sahf
jmp
das
dec
pop
mov
mov
xor
mov
les
jg
ss
lods
call
test
mov
sub
and
rorb
pusha
popf
stos
ljmp
jbe
orb
into
pop
flds
aas
repnz
xchg
ret
shll
mov
popa
adc
pop
and
mov
xchg
sub
inc
inc
push
or
mov
dec
je
mov
leave
mov
jae
push
push
jecxz
pop
icebp
mov
bound
add
int3
push
mov
jle
adc
lock
xor
push
xor
movsl
xchg
lret
test
faddl
rorl
dec
and
jl
xchg
in
das
jb
cmc
xor
and
mov
cwtl
dec
and
jle
cmp
jp
mov
mov
mov
test
cmpsb
inc
pop
xchg
xor
adc
mov
cmp
cli
xlat
addr16
movsl
sub
out
faddl
cmc
subl
pop
xchg
adc
cs
pop
negl
cmc
scas
push
mov
rolb
pop
pusha
mov
adc
popf
sbb
xchg
es
cmp
cmp
pop
xor
and
cmp
xor
push
fsubl
or
pushf
pop
pop
dec
pop
pusha
inc
mov
mov
std
pop
jl
std
cmp
push
icebp
std
cmp
ror
pop
adc
lcall
daa
adc
inc
pop
mov
mov
scas
cmp
jns
sub
mov
xchg
push
adc
pop
imul
jnp
mov
mov
jo
push
adc
aad
jmp
sub
jecxz
icebp
lret
xchg
sub
xchg
fisubs
aaa
push
xor
xchg
mov
sub
dec
mov
or
arpl
inc
mov
cmp
out
pushw
insl
testl
xchg
aas
call
out
pusha
les
rorb
xor
mov
adc
mov
fs
repz
lods
pop
jbe
jecxz
mov
push
sub
mov
aam
call
inc
divb
in
jne
jne
cs
xchg
pop
les
jae
pushf
in
mov
jbe
push
fsubl
pop
in
sub
push
cmp
out
push
ret
ds
pop
and
or
pop
les
push
sub
ds
stos
cmp
or
or
dec
sub
cmc
repz
sbb
add
arpl
insb
inc
mov
push
sub
xchg
bound
loopne
je
data16
ret
add
cmp
mov
mov
or
dec
mov
adc
dec
xlat
aaa
cwtl
jg
push
cltd
rcrl
paddsw
or
xorb
ret
popf
into
dec
sbb
arpl
and
mov
mov
xor
std
or
clc
jne
lahf
sub
ja
jo
pop
or
inc
shlb
pop
push
js
repnz
push
push
lahf
inc
xor
inc
dec
dec
sub
and
loop
mov
push
es
push
push
or
inc
sahf
lahf
dec
imul
add
jecxz
jne
xor
je
scas
sub
aas
sub
sub
aam
int3
add
aas
imul
daa
rcll
in
jge
scas
outsb
sbb
jg
sbb
sub
push
ljmp
push
cli
int3
jne
push
lcall
mov
loope
or
push
mov
or
in
lret
lahf
in
pop
test
add
sbb
rorb
bound
ret
push
mov
hlt
stc
pop
jp,pt
pop
cltd
cmpsl
xchg
sahf
sbb
mov
fs
push
pop
shrb
imul
or
cld
mov
lods
jns
mov
lahf
out
icebp
divb
lods
fdivs
pop
outsl
arpl
movsl
xchg
cwtl
jbe
jmp
inc
clc
sbb
aam
jno
pop
fwait
adc
arpl
inc
mov
lret
jp
pushf
es
push
popa
aam
test
cmp
sub
cmp
add
mov
jo
or
fstl
int3
ss
push
and
cwtl
jge
push
in
popf
dec
data16
adcb
lahf
mov
ljmp
mov
and
adc
add
mov
xlat
nop
test
jle
sub
fs
pop
xchg
loopne
xchg
lods
mov
cmp
out
ficomps
inc
xchg
pop
hlt
cmp
and
cmp
jns
call
cld
add
pop
cmp
movsl
xor
xchg
out
fstps
jmp
cltd
lods
or
push
das
popf
ret
out
imul
and
rol
cltd
in
shrb
in
mov
jb
jecxz
aam
push
adc
subb
mov
jmp
ljmp
add
lds
divl
out
adc
insl
mov
xor
xor
rorb
repz
incl
mov
popa
push
lahf
iret
sahf
mov
imul
insb
cmpsl
das
jmp
rcl
imull
jge
xchg
movsl
outsl
pop
sbb
push
pop
stc
jns
and
push
test
ja
sti
cmp
iret
cmp
cld
icebp
aam
push
xchg
mov
jne
sbb
jnp
mov
insb
cmc
xorb
xchg
and
subb
mov
addr16
cmp
pop
aad
mov
xchg
pusha
xchg
sbb
sub
into
xor
pushf
or
aas
sbb
sub
mov
sti
out
cld
cld
loop
aad
scas
sahf
rcl
lods
mov
lahf
into
negb
cwtl
loop
aam
pop
je
stc
cmpsb
pop
push
hlt
xchg
push
xchg
fidivrl
xchg
and
clc
jno
inc
addr16
fwait
mov
into
mov
push
pop
pushf
adc
ljmp
xchg
in
pop
pop
sbb
jle
fs
js
out
loop
or
push
into
mov
pop
jecxz
data16
cmpsl
stos
or
lea
fldenv
mull
imul
sarb
stos
in
mov
cmp
adc
sahf
lcall
xor
cmp
rcll
test
xchg
dec
sub
ss
insl
std
movsb
add
pop
jnp
pusha
mov
pop
in
data16
mov
jecxz
stos
aaa
mov
and
add
and
test
jmp
sbb
test
arpl
mov
mov
cmpsb
inc
imul
push
mov
cmp
and
aaa
out
xor
movsl
cmp
repz
mov
lea
jb
or
sub
push
inc
pop
mov
sub
ds
and
call
bound
insl
jge
int
and
pop
or
adc
outsb
insl
mov
jbe
roll
nop
mov
test
mov
jge
je
fiaddl
pminub
jle
mov
mov
movsb
das
xor
fidivl
adc
or
xchg
loope
fistl
mov
fimuls
nop
push
pop
sarl
or
xor
jo
xlat
xor
testl
in
mov
pop
add
out
gs
push
pushf
and
or
stc
imul
shrl
cmp
std
jnp
add
lods
jg
push
and
jb
stos
dec
mov
xchg
aaa
dec
mov
shrl
sub
rol
mov
ds
stos
or
pop
das
mov
adc
js
fdivrl
nop
sub
mov
aaa
rcl
push
ljmp
popf
es
mov
in
ret
adc
or
stos
or
aad
movsl
jbe
data16
push
int
fs
xlat
jbe
cmp
and
stos
inc
add
inc
xor
adc
movsl
test
mov
pop
xor
inc
loop
rorl
jo
pusha
cwtl
enter
mov
imulb
push
imul
idiv
push
or
mov
jl
add
or
cmp
lods
sti
imul
shlb
add
nop
adcb
lret
bound
icebp
and
fmull
pop
test
mov
aam
sub
inc
es
dec
cmpsb
ja
cmp
lea
jne
fidivrl
add
cmpsb
or
mov
stc
enter
push
xor
jecxz
push
push
rol
ja
push
div
jge
lcall
bnd
pop
mov
xchg
xor
clc
xchg
fists
lods
adcb
popf
sbb
pusha
mov
mov
cld
adc
lods
adc
xchg
test
jmp
mov
sbb
inc
divb
adc
push
mov
or
scas
cmpsb
stc
stc
push
xchg
inc
fst
sbb
xchg
into
lods
xchg
lds
lods
fnstsw
loopne
enter
mov
stos
pusha
push
lahf
outsl
cmc
xlat
xchg
or
push
popa
nop
jne
mov
enter
cli
and
jbe
cmpsb
dec
jb
jg
ljmp
int
pop
loop
imul
out
and
pmaddwd
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
mov
add
push
push
sub
add
movsl
push
mov
push
and
add
test
jb
sub
sub
or
jne
sub
add
or
add
pop
pop
ret
push
mov
add
movl
movl
mov
cmp
je
cmpl
jmp
and
sub
test
jb
sub
subl
test
ja
sub
sub
addl
addl
sub
mov
shl
mov
shll
movl
cmpl
jl
cmpl
jl
movl
movl
lea
mov
mov
mov
and
mov
inc
mov
cltd
idiv
imul
mov
and
add
test
ja
sub
sub
test
jne
sub
orl
adcl
andl
movl
movl
mov
add
mov
mov
mov
pop
ret
nop
push
mov
add
movl
movl
mov
cmp
jl
movl
movl
mov
cmp
jle
movl
movl
mov
cmp
jl
movl
lea
mov
mov
mov
add
mov
mov
add
imul
mov
movl
lea
mov
mov
or
mov
add
imul
mov
subl
cmp
jne
add
add
cmp
jb
xor
xor
add
sub
xor
add
movl
lea
mov
mov
mov
add
mov
movl
mov
cmp
jg
movl
cmpl
jne
sub
and
test
ja
add
add
add
add
cmpl
jle
addl
addl
testl
jl
addl
or
test
jl
sub
sub
add
jmp
movl
mov
cmp
mov
cmp
movl
movl
mov
cmp
jne
movl
cmpl
je
lea
mov
mov
mov
or
add
imul
mov
lea
mov
mov
mov
sub
mov
jmp
movl
cmpl
jge
movl
mov
cmp
jl
movl
mov
imull
mov
jmp
mov
and
add
add
mov
inc
mov
cltd
idiv
sub
and
test
ja
andl
cmp
jb
add
add
adcl
xor
add
mov
cmp
jge
movl
cmpl
jl
add
test
je
add
test
ja
and
subl
add
add
addl
xor
mov
cmp
jge
movl
mov
sub
add
add
sub
cmp
jne
orl
sbb
or
add
mov
pop
ret
nop
push
mov
add
movl
cmpl
jg
movl
movl
mov
cmp
movl
cmpl
je
lea
mov
mov
mov
mov
or
sub
add
add
cmp
ja
xorl
sub
test
jb
adcl
sub
andl
add
xor
sub
xor
testl
je
subl
sub
cmp
jne
sbb
or
add
mov
mov
movl
movl
mov
cmp
jg
add
add
cmp
jl
sub
xor
cmp
ja
sub
add
adc
add
or
add
add
jb
add
sub
sub
jmp
movl
mov
or
imul
add
cmpl
jge
mov
add
add
mov
mov
pop
ret
nop
push
mov
add
push
call
add
addl
test
ja
sub
subl
test
je
sub
sub
adcl
add
add
movl
movl
movl
cmpl
jge
movl
lea
mov
mov
mov
sub
add
call
lea
mov
mov
or
mov
mov
and
imul
sub
addl
test
ja
adc
add
test
ja
xor
sub
sub
add
add
call
and
cmp
jne
sub
add
sub
movl
movl
call
mov
mov
mov
rep
mov
mov
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
sub
xor
mov
movb
movl
movl
mov
cmp
jne
call
cmpl
jge
movl
movl
mov
and
mov
sub
sub
sub
add
test
je
addl
test
jne
and
addl
sub
add
add
add
call
call
cmpl
jl
cmpl
jg
cmpl
call
cmpl
jl
movl
movl
lea
mov
mov
mov
sub
imul
mov
sub
or
test
je
sbb
xorl
add
jmp
call
jmp
movl
mov
add
sub
xor
mov
xor
mov
movl
movl
cmpl
jle
mov
cmp
jle
movl
cmpl
jge
mov
inc
mov
mov
cltd
idiv
imul
mov
call
add
xor
test
jl
orl
sub
ja
sub
sub
xor
sbb
cmpl
jle
call
mov
imull
mov
add
cmp
jne
sub
xor
cmp
ja
adc
add
sub
sub
sub
sub
call
call
call
sub
test
jl
subl
add
test
jne
sub
add
adc
sub
subl
movl
mov
xor
mov
mov
incl
decl
movl
mov
cmp
jl
movl
mov
cmp
jl
mov
cmp
jg
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
mov
add
add
test
jne
orl
sub
test
je
subl
add
add
or
add
call
call
call
jmp
call
add
test
ja
adc
sub
testl
jne
subl
sub
xor
sbb
jmp
movl
cmpl
jg
movl
lea
mov
lea
mov
mov
mov
and
mov
imul
mov
sub
sub
test
je
subl
test
jne
or
sbb
add
sub
jmp
sub
add
test
je
sub
test
jb
sub
sub
orl
xor
and
sub
call
sub
xor
cmp
jne
sub
or
cmpl
jg
movl
mov
or
mov
inc
mov
cltd
idiv
mov
jmp
call
cmpl
jle
lea
mov
mov
mov
sub
mov
jmp
call
call
call
or
adc
cmp
jne
xor
or
test
jne
add
sub
sub
andl
add
subl
add
test
jne
add
test
jl
sub
adcl
add
sbb
mov
add
add
movl
mov
cmp
jne
sbb
sub
test
ja
add
xor
call
add
cmp
jb
add
sub
sub
mov
cmp
jne
call
mov
or
mov
inc
mov
cltd
idiv
mov
call
or
add
test
jl
sbb
add
test
jl
add
add
adc
xor
add
adc
mov
shl
or
mov
cmpl
jne
mov
and
mov
mov
shl
add
shl
add
mov
movl
cmpl
jne
cmpl
jg
call
sub
or
test
jb
add
add
cmp
jne
sub
add
add
sub
call
call
sub
test
jl
adcl
sub
test
je
add
sub
sub
add
add
movl
lea
mov
mov
and
mov
mov
and
add
add
cmpl
jae
call
sub
sub
test
jb
addl
cmp
jne
add
and
or
xor
and
movl
cmpl
jne
movl
cmpl
jne
add
test
jl
or
sub
add
jmp
movl
lea
mov
mov
mov
sub
imul
mov
cmpl
je
cmpl
jle
call
call
call
movl
mov
imull
sub
jmp
movl
lea
mov
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
imul
mov
call
jmp
subl
addl
test
je
and
testl
jne
sbb
and
sub
sub
sub
add
call
add
add
test
ja
subl
sub
or
mov
movzbl
mov
shll
incl
mov
shl
or
mov
mov
mov
mov
movl
cmpl
jl
cmpl
je
call
movl
movl
lea
mov
mov
mov
imull
add
call
call
jmp
call
sbb
sub
test
je
or
sub
sub
mov
cmp
je
movl
mov
add
mov
mov
mov
mov
shr
imul
mov
mov
cmp
jae
mov
sub
shr
add
mov
mov
movl
mov
mov
xor
mov
mov
shl
lea
add
add
mov
cmpl
jge
mov
shl
add
mov
cmpl
jae
mov
xor
mov
mov
shll
incl
mov
shl
or
mov
mov
mov
mov
mov
mov
mov
shr
imul
mov
mov
cmp
jb
mov
sub
mov
sub
mov
shr
mov
sub
mov
mov
mov
add
inc
mov
jmp
mov
mov
mov
shr
imul
mov
mov
sub
shr
add
mov
mov
mov
add
mov
cmpl
jl
jmp
mov
sub
add
xor
mov
mov
mov
add
mov
mov
and
mov
mov
add
shl
shl
add
add
mov
cmpl
jae
mov
xor
mov
mov
shll
incl
mov
shl
or
mov
mov
mov
lea
mov
mov
mov
mov
shr
imul
mov
mov
cmp
jb
mov
sub
mov
sub
mov
shr
mov
sub
mov
mov
mov
add
inc
mov
testb
je
jmp
mov
shr
imul
mov
mov
add
mov
mov
sub
shr
add
mov
mov
testb
jne
cmpl
jl
mov
mov
incl
mov
mov
mov
mov
add
mov
cmpl
jl
cmpl
jl
subl
jmp
subl
jmp
xor
mov
jmp
mov
sub
mov
sub
mov
mov
shr
mov
sub
mov
mov
mov
shl
shl
add
add
mov
cmpl
jae
mov
xor
mov
mov
shll
incl
mov
shl
or
mov
mov
mov
mov
mov
mov
mov
shr
imul
mov
mov
cmp
jb
mov
sub
mov
sub
mov
mov
shr
mov
sub
mov
mov
mov
shl
shl
add
add
mov
cmpl
jae
mov
xor
mov
mov
shll
incl
mov
shl
or
mov
mov
mov
mov
mov
mov
mov
shr
imul
mov
mov
cmp
jb
mov
sub
mov
sub
mov
mov
shr
mov
sub
mov
mov
mov
shl
shl
add
add
mov
cmpl
jae
mov
xor
mov
mov
shll
incl
mov
shl
or
mov
mov
mov
mov
mov
mov
mov
shr
imul
mov
mov
cmp
jb
mov
sub
mov
sub
mov
mov
shr
mov
sub
mov
mov
mov
shl
shl
add
add
mov
cmpl
jae
mov
xor
mov
mov
shll
incl
mov
shl
or
mov
mov
mov
mov
mov
mov
mov
shr
imul
mov
mov
cmp
jb
mov
sub
mov
sub
mov
mov
shr
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
shr
imul
mov
mov
sub
shr
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
shr
imul
mov
mov
sub
shr
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
sub
shr
add
mov
mov
mov
mov
mov
add
shl
add
shl
add
mov
cmpl
jae
mov
shl
mov
mov
xor
mov
mov
incl
mov
shl
or
mov
mov
mov
mov
mov
mov
mov
shr
imul
mov
mov
cmp
jb
mov
sub
mov
sub
mov
mov
shr
mov
sub
mov
mov
cmpl
setge
and
dec
and
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
shr
imul
mov
mov
sub
shr
add
mov
mov
cmpl
setge
and
add
add
mov
mov
sub
mov
incl
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
mov
shr
imul
mov
mov
mov
mov
mov
mov
sub
shr
add
mov
mov
mov
mov
cmpl
jl
mov
jmp
xor
mov
mov
add
mov
cmpl
jae
mov
xor
mov
mov
shll
incl
mov
shl
or
mov
mov
mov
mov
mov
mov
mov
shr
imul
mov
mov
cmp
jb
mov
sub
mov
sub
mov
mov
shr
mov
sub
mov
mov
cmpl
jae
mov
xor
mov
mov
shll
incl
mov
shl
or
mov
mov
mov
mov
mov
shr
imull
mov
mov
cmp
jb
mov
sub
mov
sub
mov
mov
shr
mov
sub
mov
mov
mov
add
mov
movl
movl
jmp
mov
shr
imul
mov
mov
sub
shr
add
mov
mov
mov
shl
add
add
mov
movl
jmp
mov
mov
mov
shr
imul
mov
xor
mov
mov
sub
shr
add
mov
mov
mov
shl
add
add
mov
movl
mov
mov
movl
cmpl
jae
mov
xor
mov
mov
shll
incl
mov
shl
or
mov
mov
shl
add
mov
mov
mov
shr
imul
mov
mov
cmp
jb
mov
sub
mov
sub
mov
shr
mov
sub
mov
shl
add
mov
mov
add
inc
mov
jmp
mov
shr
imull
mov
mov
sub
shr
add
mov
shl
add
mov
mov
add
mov
mov
addl
dec
jne
movl
mov
mov
shl
mov
sub
add
mov
mov
mov
cmpl
jl
mov
mov
jmp
addl
cmpl
jl
mov
jmp
mov
mov
mov
shl
shl
add
add
mov
movl
cmpl
jae
mov
xor
mov
mov
shll
incl
mov
shl
or
mov
mov
mov
mov
mov
mov
shr
imul
mov
mov
cmp
jb
mov
sub
mov
sub
mov
shr
mov
sub
mov
mov
mov
mov
add
inc
mov
jmp
mov
shr
imul
mov
mov
mov
mov
sub
shr
add
mov
mov
add
mov
mov
addl
dec
jne
mov
add
mov
mov
mov
cmpl
jl
mov
sar
dec
mov
mov
and
or
mov
mov
sar
dec
mov
cmpl
jl
mov
sar
add
mov
cmpl
jae
mov
xor
mov
mov
shll
incl
mov
shl
or
mov
shrl
mov
add
mov
mov
cmp
jb
mov
sub
mov
orl
decl
cmpl
jne
mov
add
mov
mov
shl
mov
movl
jmp
mov
mov
shl
mov
mov
sub
shl
shl
add
add
mov
movl
mov
mov
movl
cmpl
jae
mov
xor
mov
mov
shll
incl
mov
shl
or
mov
mov
mov
mov
mov
mov
shr
imul
mov
mov
cmp
jb
mov
sub
mov
mov
mov
sub
mov
or
mov
shr
mov
sub
mov
mov
mov
mov
add
inc
mov
jmp
mov
shr
imul
mov
mov
mov
mov
sub
shr
add
mov
mov
add
mov
mov
add
mov
mov
addl
dec
jne
mov
inc
mov
mov
mov
cmpl
jne
mov
jmp
mov
mov
mov
add
mov
mov
add
sub
mov
mov
mov
mov
mov
mov
decl
incl
incl
mov
mov
mov
add
mov
mov
cmpl
jne
jmp
pop
mov
pop
ret
nop
push
mov
add
movl
cmpl
je
movl
lea
mov
mov
mov
sub
mov
movl
cmpl
jl
cmpl
jl
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
imul
mov
mov
cmp
jg
add
sbb
jl
add
sub
addl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
add
subl
test
jb
sub
test
jl
sub
xor
and
adc
sub
sub
jmp
movl
cmpl
jne
movl
movl
mov
sub
mov
movl
cmpl
jg
sub
testl
jne
xor
cmp
jb
subl
add
add
subl
sub
xor
jmp
movl
cmpl
jne
addl
test
je
xor
sub
cmpl
jle
movl
movl
mov
sub
imul
mov
add
sub
je
add
add
sub
jmp
movl
lea
mov
mov
mov
add
mov
adc
sub
test
jl
xor
sub
jmp
movl
cmpl
jne
and
test
ja
xor
adc
jl
add
sub
adc
sub
and
movl
mov
sub
imul
mov
movl
mov
and
imul
imul
mov
sub
test
jl
adc
sub
add
je
add
add
xor
and
add
add
mov
pop
ret
nop
nop
nop
push
mov
add
movl
cmpl
jg
movl
movl
mov
and
mov
inc
mov
cltd
idiv
imul
mov
movl
mov
cmp
movl
mov
cmp
jl
movl
mov
and
add
mov
mov
and
mov
inc
mov
cltd
idiv
add
mov
or
imull
imul
mov
jmp
movl
lea
mov
mov
mov
sub
mov
movl
mov
cmp
jl
cmpl
jge
movl
lea
mov
mov
or
mov
imul
mov
jmp
jmp
cmpl
jle
add
add
jb
sub
add
add
sub
jmp
xor
sbb
cmp
jl
add
test
jne
sub
subl
sub
or
subl
lea
mov
lea
mov
mov
mov
mov
add
add
call
xor
mov
movl
cmpl
jg
cmpl
jge
jmp
cmpl
movl
cmpl
jne
mov
inc
push
mov
pop
mov
cltd
idiv
sub
lea
mov
mov
mov
imul
add
jmp
movl
mov
and
mov
sub
mov
cmpl
je
xor
sbb
testl
ja
add
sub
add
pushl
call
mov
movl
cmpl
je
mov
sub
mov
cmpl
jle
jmp
add
test
je
add
sub
test
je
sub
add
sbb
lea
mov
mov
mov
and
imul
sub
cmpl
jle
lea
mov
mov
mov
or
imul
mov
jmp
mov
imul
mov
add
sub
cmp
jne
sub
testl
je
and
add
adc
xor
sub
call
mov
movl
mov
cmp
jge
jmp
movl
lea
mov
mov
or
mov
mov
and
sub
imul
mov
cmpl
jle
sub
addl
test
jl
sub
sub
test
jl
sub
add
add
add
jmp
movl
mov
sub
add
mov
mov
mov
shr
mov
movl
lea
mov
mov
mov
imul
sub
mov
cmp
jl
movl
lea
mov
mov
mov
imul
imul
mov
cmpl
jge
shrl
movl
cmpl
jge
cmpl
jge
movl
mov
imull
add
cmpl
jl
movl
lea
mov
mov
mov
add
imul
mov
sub
add
add
jne
and
subl
cmp
jb
xor
add
add
add
add
jmp
cmpl
jge
movl
mov
inc
mov
mov
cltd
idiv
mov
mov
xor
call
xor
mov
sub
test
jne
and
add
cmp
jne
sub
add
addl
add
add
mov
mov
pop
ret
nop
push
mov
add
movl
mov
sub
add
sub
cmp
jb
add
add
testl
jne
add
add
sbb
orl
sub
mov
mov
movl
cmpl
jl
sub
add
test
ja
and
adc
cmpl
jle
movl
mov
cmp
jne
or
xor
adc
jne
sub
test
ja
adc
add
and
and
sub
jmp
addl
sub
testl
jl
sub
or
je
add
add
sub
sub
add
sub
testl
jb
or
test
jne
add
add
and
sbb
movl
mov
and
mov
sub
mov
addl
test
jb
and
adc
add
ja
sub
sbb
add
add
sub
jmp
add
test
ja
sbb
adc
test
ja
sub
sub
add
sub
sub
movl
mov
cmp
jge
mov
cmp
je
mov
add
mov
jmp
xorl
test
jb
add
sub
adc
mov
mov
movl
cmpl
jg
add
xor
test
jb
sbb
addl
adc
jmp
cmpl
jg
movl
mov
cmp
movl
lea
mov
mov
mov
or
mov
inc
mov
cltd
idiv
add
jmp
movl
cmpl
jle
movl
movl
mov
or
sub
add
cmpl
jne
subl
sub
test
je
add
cmp
ja
sub
sub
or
add
sub
add
mov
or
sub
sub
jmp
movl
mov
inc
mov
mov
cltd
idiv
imul
mov
lea
mov
mov
mov
imul
sub
or
add
cmp
ja
sub
test
jb
add
add
add
sbb
movl
lea
mov
mov
and
mov
add
imul
mov
add
and
cmp
je
add
sbb
jb
or
sbb
sub
sbb
mov
mov
movl
push
pushl
pushl
call
movl
cmpl
jl
mov
or
add
imul
mov
jmp
call
xor
mov
pop
ret
nop
nop
push
mov
add
movl
pushl
pushl
call
xor
mov
movl
mov
cmp
jl
movl
mov
cmp
je
push
pushl
pushl
call
movl
movl
mov
or
imull
mov
cmpl
jl
movl
lea
mov
mov
mov
sub
imul
mov
add
add
test
ja
sub
testl
ja
add
add
add
sbb
pushl
push
call
jmp
movl
lea
mov
mov
mov
sub
sub
movl
mov
add
add
call
sub
testl
jb
sbb
add
test
je
and
sub
or
sub
cmpl
jg
movl
movl
mov
cmp
jl
push
pushl
pushl
call
movl
mov
cmp
jne
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
pushl
push
pushl
call
jmp
pushl
pushl
pushl
pushl
call
mov
or
mov
sub
imul
mov
jmp
movl
cmpl
jne
movl
movl
lea
mov
mov
inc
mov
mov
cltd
idiv
imul
mov
movl
pushl
push
pushl
pushl
call
sbb
or
jne
add
add
add
lea
mov
mov
mov
imul
add
sbb
add
test
ja
add
add
and
je
add
sub
subl
add
adcl
cmpl
je
movl
lea
mov
movl
mov
mov
mov
and
add
sub
pushl
pushl
call
jmp
movl
lea
mov
mov
or
mov
add
imul
mov
sub
add
jb
add
add
add
sub
movl
pushl
pushl
call
mov
add
sub
mov
mov
movl
cmpl
jle
movl
cmpl
jl
movl
movl
mov
or
mov
or
add
add
cmpl
jne
cmpl
jge
push
push
call
movl
movl
mov
and
mov
inc
mov
cltd
idiv
add
push
push
call
push
pushl
call
jmp
pushl
pushl
call
call
cmpl
je
movl
mov
cmp
jle
mov
inc
push
mov
pop
mov
cltd
idiv
add
sbb
test
je
sub
and
add
jl
sub
sbbl
add
mov
cmp
jle
call
or
test
jne
sub
sub
test
jb
add
add
sub
sub
add
movl
lea
mov
mov
or
mov
imul
mov
mov
add
add
jmp
cmpl
je
movl
movl
pushl
pushl
pushl
call
movl
lea
mov
lea
mov
mov
mov
and
mov
sub
imul
mov
pushl
pushl
pushl
call
pushl
pushl
pushl
call
jmp
push
push
push
call
sub
sub
cmp
jb
add
add
test
jb
add
or
sub
sub
sub
movl
mov
and
mov
inc
mov
cltd
idiv
sub
cmpl
jl
push
push
push
push
call
movl
movl
pushl
pushl
pushl
push
call
subl
sub
test
jne
sub
test
jne
add
add
add
add
mov
and
add
imul
mov
add
or
testl
jne
sub
add
test
jb
sub
subl
subl
sub
or
lea
push
call
cmpl
je
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
imul
mov
add
sbb
and
ja
addl
add
add
sub
decl
movl
movl
mov
cmp
jge
movl
cmpl
jle
add
xor
cmp
je
add
adc
cmpl
call
mov
movl
cmpl
jne
movl
mov
add
add
cmpl
jne
movl
cmpl
jl
movl
mov
sub
imul
mov
jmp
movl
lea
mov
mov
mov
imul
sub
mov
and
cmp
jne
mov
test
je
sub
orl
test
jl
adc
adc
cmp
jne
sub
add
sub
add
movl
movl
movl
mov
cmp
je
cmpl
jge
jmp
movl
mov
imul
add
add
add
test
je
xor
add
sub
ja
sub
add
addl
sub
and
lea
mov
mov
inc
mov
mov
cltd
idiv
add
subl
cmp
ja
xor
xor
and
cmpl
jg
movl
cmpl
jl
movl
mov
add
mov
cmpl
jl
movl
lea
mov
mov
mov
add
mov
movl
mov
cmp
jmp
movl
cmpl
jg
mov
cmp
and
testl
ja
adc
test
ja
xor
add
subl
add
sub
jmp
movl
cmpl
jg
add
add
test
jne
addl
test
jb
xor
sub
sub
subl
mov
or
mov
and
imul
sub
lea
mov
movl
mov
or
mov
add
sub
xor
mov
movl
cmpl
je
movl
cmpl
jne
sub
test
jl
or
add
addl
mov
sub
add
movl
cmpl
jge
cmpl
jle
lea
mov
mov
mov
imull
imul
mov
jmp
add
add
cmp
jl
sub
cmp
ja
sub
add
adc
add
sub
addl
cmpl
jne
movl
lea
mov
lea
mov
mov
mov
mov
add
sub
movl
mov
cmp
jg
cmpl
jge
movl
mov
sub
add
movl
mov
cmp
jge
movl
movl
pushl
pushl
call
lea
mov
mov
mov
add
add
adc
sub
sub
jne
add
and
test
ja
sbb
subl
add
subl
add
push
call
sub
test
jl
xor
sub
jmp
movl
pushl
pushl
pushl
call
mov
inc
push
mov
pop
mov
cltd
idiv
sub
jmp
lea
push
call
movl
cmpl
jge
movl
movl
lea
mov
mov
mov
imul
add
jmp
push
pushl
call
sub
add
xor
jne
and
xor
test
jne
sub
orl
add
andl
sub
call
movl
movl
movl
push
pushl
call
pushl
pushl
pushl
pushl
call
movl
movl
mov
imull
imul
mov
mov
cmp
je
lea
mov
mov
mov
sub
imul
mov
movl
cmpl
jl
push
pushl
call
sub
sub
test
jb
subl
and
sub
jmp
movl
lea
push
lea
push
call
movl
pushl
pushl
push
push
call
jmp
push
call
movl
mov
cmp
jg
movl
cmpl
jg
lea
mov
mov
mov
add
add
adc
test
jb
xor
add
sub
jmp
movl
movl
pushl
pushl
pushl
pushl
call
movl
lea
push
lea
push
call
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
sub
adc
add
cmp
jne
add
cmp
jb
sub
adc
add
and
movl
pushl
pushl
call
mov
movl
cmpl
jne
push
call
jmp
movl
pushl
pushl
push
pushl
call
movl
mov
cmp
jg
movl
mov
sub
imul
mov
mov
imul
imul
mov
pushl
pushl
pushl
call
jmp
push
call
push
call
sub
test
jb
add
xor
lea
mov
mov
mov
or
mov
inc
mov
cltd
idiv
imul
mov
mov
mov
pop
ret
nop
nop
nop
push
mov
add
movl
movl
lea
mov
movl
mov
mov
and
mov
sub
mov
add
sub
test
jne
add
addl
movl
cmpl
je
movl
mov
cmp
jle
add
test
jb
add
cmp
jl
sub
add
sub
addl
add
movl
mov
and
add
mov
movl
mov
and
mov
or
imul
imul
mov
add
test
jne
adc
add
jmp
movl
lea
mov
mov
inc
push
mov
mov
pop
mov
cltd
idiv
mov
xor
sbbl
test
je
add
xor
sub
sbb
or
test
jb
add
sub
sub
add
movl
mov
cmp
jg
cmpl
jne
movl
movl
mov
cmp
je
movl
mov
imul
add
jmp
movl
lea
mov
mov
mov
sub
imul
mov
movl
mov
cmp
movl
cmpl
add
add
jb
sub
and
adcl
movl
cmpl
jg
movl
lea
mov
lea
mov
mov
mov
mov
mov
and
sub
mov
subl
test
jne
or
sub
adc
add
add
cmp
ja
sub
or
test
ja
subl
adc
add
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
push
movl
cmpl
jne
add
cmp
jne
and
sbb
je
or
adcl
sub
add
cmpl
jg
mov
cmp
je
movl
cmpl
jne
mov
sub
mov
sub
adcl
cmp
je
and
add
and
add
movl
mov
cmp
jg
movl
cmpl
jne
cmpl
je
movl
mov
add
sub
movl
cmpl
jl
subl
sbb
cmp
ja
adc
add
add
adc
sub
test
je
and
xorl
add
add
jmp
jmp
cmpl
je
jmp
movl
lea
mov
mov
mov
mov
and
sub
add
cmpl
je
add
or
test
jne
xor
cmp
ja
sub
sub
add
add
or
jmp
and
add
sub
jl
orl
adcl
cmp
jl
xor
add
andl
sub
sub
xor
addl
cmp
jl
addl
adcl
movl
movl
mov
or
sub
add
jmp
mov
sub
mov
add
sub
test
jb
sub
add
movl
cmpl
jg
sub
test
jb
sub
sbb
jne
adc
adc
sub
sub
movl
cmpl
jg
movl
cmpl
jl
mov
or
sub
imul
mov
cmpl
jl
and
test
je
add
sub
test
jl
or
xor
add
sub
add
sub
jmp
mov
or
sub
mov
movl
mov
or
imull
imul
mov
addl
test
jb
sub
adc
test
jl
sub
addl
or
or
and
mov
mov
xorl
cmp
jne
sbb
sub
test
ja
add
sub
sub
sub
sub
mov
push
call
xor
mov
movl
cmpl
jg
cmpl
jne
call
movl
movl
call
pushl
pushl
pushl
push
pushl
call
cmpl
jne
mov
sub
mov
jmp
movl
pushl
pushl
pushl
push
call
push
push
push
call
movl
pushl
pushl
call
sub
add
test
jl
add
sub
test
jne
sub
sub
and
add
sub
jmp
movl
lea
mov
mov
mov
sub
mov
mov
cmp
jle
movl
pushl
push
call
movl
movl
cmpl
je
movl
cmpl
jle
pushl
pushl
call
cmpl
jle
call
add
add
test
ja
add
sub
test
jl
xor
add
xorl
add
xor
xor
call
call
movl
call
call
pushl
pushl
pushl
pushl
push
call
jmp
movl
pushl
push
pushl
pushl
pushl
call
mov
or
add
mov
movl
lea
mov
mov
mov
add
imul
mov
pushl
pushl
push
pushl
call
mov
cmp
jle
movl
movl
pushl
pushl
pushl
pushl
pushl
call
sub
sub
testl
je
sub
sub
testl
jne
sub
sub
and
sub
sub
pushl
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
push
call
jmp
movl
mov
cmp
jle
push
pushl
push
pushl
pushl
call
and
test
je
add
sub
add
add
jmp
movl
cmpl
jge
movl
movl
pushl
pushl
call
movl
mov
imul
sub
movl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movl
push
push
push
pushl
push
call
mov
or
add
sub
add
sub
jne
sub
sub
test
jb
add
xor
xor
sbb
sub
movl
cmpl
jge
push
pushl
call
mov
imull
sub
mov
cmp
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
add
movl
pushl
pushl
call
mov
or
sub
add
add
test
je
or
add
add
jmp
movl
pushl
pushl
pushl
push
call
push
push
push
call
movl
lea
mov
mov
mov
add
add
subl
sub
test
ja
xor
testl
jl
addl
sbb
add
subl
sub
push
call
sbb
sub
cmp
je
sub
adc
adc
cmpl
je
movl
cmpl
jge
cmpl
jg
cmpl
jge
call
movl
lea
mov
lea
mov
mov
mov
mov
sub
mov
movl
lea
push
lea
push
call
xor
addl
cmp
jne
sbb
addl
sub
mov
sub
mov
jmp
cmpl
jle
call
add
sub
test
jne
add
add
jne
add
sub
sub
add
movl
lea
mov
mov
mov
add
imul
mov
call
call
andl
sub
test
jne
sub
or
add
jmp
movl
lea
push
lea
push
call
lea
mov
lea
mov
mov
mov
mov
sub
add
push
call
mov
cmp
jl
pushl
pushl
pushl
pushl
pushl
call
push
pushl
call
jmp
cmpl
jg
lea
mov
mov
mov
add
add
jmp
movl
cmpl
jne
movl
movl
mov
sub
mov
lea
mov
mov
mov
add
imul
mov
call
jmp
lea
mov
mov
mov
imul
mov
movl
cmpl
jg
cmpl
jl
cmpl
je
push
call
call
movl
lea
push
lea
push
call
call
jmp
cmpl
je
push
call
cmpl
jg
call
movl
mov
and
imul
mov
lea
mov
mov
mov
imul
sub
add
or
test
je
add
testl
jne
add
sub
and
sub
add
sbbl
pushl
pushl
pushl
pushl
pushl
call
addl
adcl
test
je
sub
and
jne
adcl
add
add
xor
pushl
pushl
push
push
pushl
call
movl
movl
cmpl
jg
mov
cmp
jg
cmpl
jge
call
add
sub
test
jb
or
sub
movl
movl
call
pushl
pushl
pushl
pushl
push
call
xor
sub
test
ja
adc
sbb
cmp
jne
addl
addl
add
add
subl
movl
movl
lea
mov
mov
mov
imul
add
pushl
push
pushl
pushl
call
jmp
cmpl
jge
call
cmpl
jl
mov
cmp
jl
movl
mov
inc
mov
mov
cltd
idiv
sub
movl
mov
sub
add
sub
or
testl
jne
adc
add
sub
jne
sub
add
add
add
push
call
jmp
movl
pushl
pushl
pushl
push
push
call
pushl
pushl
pushl
push
push
call
call
sub
cmp
ja
addl
sbb
test
je
add
sub
xor
subl
mov
cmp
jg
movl
mov
inc
mov
cltd
idiv
add
movl
lea
mov
mov
mov
imul
sub
cmpl
jle
lea
push
call
movl
movl
lea
mov
lea
mov
mov
mov
mov
add
add
cmpl
jge
movl
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
add
movl
mov
and
add
sub
cmpl
jge
push
call
add
sub
test
je
add
cmp
je
orl
xor
or
movl
mov
cmp
jl
movl
mov
add
add
pushl
push
pushl
pushl
call
lea
push
call
shll
movl
lea
mov
mov
mov
or
imul
mov
add
test
je
and
xorl
pushl
pushl
push
pushl
pushl
call
pushl
pushl
call
mov
movl
cmpl
jl
movl
cmpl
je
movl
cmpl
je
movl
movl
lea
mov
mov
inc
mov
mov
cltd
idiv
add
pushl
pushl
pushl
pushl
call
movl
pushl
pushl
call
mov
cmp
jle
call
add
cmp
jb
add
test
jl
add
adc
add
sbb
sub
add
movl
movl
mov
add
sub
push
push
push
push
call
jmp
call
movl
movl
pushl
pushl
pushl
pushl
call
push
call
cmpl
jl
push
push
push
call
jmp
movl
pushl
pushl
pushl
pushl
pushl
call
add
sub
test
jl
subl
adc
addl
mov
cmp
jle
call
movl
pushl
push
pushl
pushl
call
mov
sub
movl
cmpl
jne
cmpl
jge
movl
cmpl
jg
mov
and
imul
imul
mov
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
pushl
pushl
push
pushl
call
jmp
movl
movl
push
pushl
pushl
pushl
pushl
call
mov
inc
mov
cltd
idiv
imul
mov
sub
cmp
jne
subl
add
cmp
ja
subl
subl
sub
add
call
sub
cmp
jb
sub
or
cmp
jb
sbb
add
xor
adc
add
cmpl
jne
mov
inc
mov
cltd
idiv
add
pushl
pushl
call
jmp
call
call
sub
addl
testl
jne
xor
testl
jb
sub
sub
sbb
sub
push
push
push
call
adc
test
je
xor
testl
je
subl
add
sub
mov
cmp
jg
movl
movl
mov
cmp
jne
pushl
push
pushl
push
pushl
call
jmp
lea
mov
mov
mov
or
mov
inc
mov
cltd
idiv
mov
and
sub
test
je
add
testl
ja
sub
sbb
sub
cmpl
jl
lea
push
call
mov
cmp
jae
movl
mov
cmp
jge
cmpl
jle
mov
cmp
jge
movl
movl
movl
pushl
pushl
pushl
pushl
call
movl
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
lea
mov
lea
mov
mov
mov
mov
add
add
jmp
push
pushl
call
movl
push
pushl
call
pushl
pushl
call
sub
sub
cmp
je
add
testl
jne
sbb
addl
adcl
xor
sub
add
push
call
jmp
cmpl
jne
movl
push
pushl
pushl
pushl
call
jmp
movl
cmpl
jne
movl
lea
mov
mov
mov
add
mov
jmp
mov
or
imul
mov
mov
inc
push
mov
pop
mov
cltd
idiv
imul
mov
pushl
push
pushl
push
pushl
call
movl
mov
cmp
jge
movl
movl
pushl
pushl
pushl
pushl
push
call
push
call
movl
pushl
pushl
pushl
pushl
push
call
pushl
pushl
push
push
pushl
call
jmp
mov
and
imull
mov
lea
mov
mov
inc
mov
cltd
idiv
imul
mov
call
pushl
pushl
call
mov
movl
movl
mov
or
imul
sub
pushl
push
pushl
pushl
call
xor
mov
movl
cmpl
jne
lea
mov
mov
mov
sub
add
movl
pushl
pushl
call
movl
pushl
pushl
call
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
movl
cmpl
jl
cmpl
jl
movl
push
pushl
push
pushl
pushl
call
movl
push
pushl
push
pushl
pushl
call
pushl
pushl
pushl
pushl
pushl
call
cmpl
jl
movl
mov
inc
mov
mov
cltd
idiv
sub
jmp
movl
pushl
pushl
pushl
pushl
pushl
call
movl
movl
mov
or
mov
sub
imul
mov
movl
pushl
pushl
pushl
pushl
pushl
call
push
pushl
pushl
pushl
pushl
call
xor
cmp
je
add
add
test
jne
xor
sub
xor
add
sub
movl
cmpl
jl
movl
cmpl
jge
push
push
push
call
adc
test
je
sub
test
jne
subl
add
add
add
movl
lea
push
lea
push
call
jmp
mov
inc
mov
mov
cltd
idiv
imul
mov
movl
cmpl
jne
movl
pushl
pushl
pushl
pushl
pushl
call
mov
and
mov
or
imul
add
jmp
push
call
sub
subl
test
jl
add
cmp
jne
add
xor
or
andl
movl
pushl
pushl
push
pushl
call
cmpl
jne
mov
or
mov
and
imul
imul
mov
jmp
movl
lea
push
lea
push
call
movl
movl
pushl
pushl
pushl
push
pushl
call
jmp
call
movl
push
pushl
push
pushl
pushl
call
lea
mov
mov
mov
sub
imul
mov
pushl
pushl
pushl
call
movl
cmpl
jl
movl
cmpl
jge
mov
inc
push
mov
pop
mov
cltd
idiv
add
addl
sub
cmp
jl
addl
sub
test
je
sbb
subl
sub
sbb
jmp
movl
movl
mov
cmp
jle
movl
mov
imull
add
movl
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
call
jmp
movl
lea
mov
lea
mov
mov
mov
and
mov
add
mov
sub
subl
test
jb
adc
xorl
test
je
and
add
subl
sub
push
call
sbb
test
ja
add
test
jb
add
sub
sbb
adc
adc
push
push
push
push
call
pushl
pushl
call
jmp
movl
mov
cmp
je
movl
mov
cmp
jl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
add
sub
test
ja
sbb
add
jmp
movl
pushl
pushl
pushl
push
push
call
add
add
test
jne
add
adc
addl
mov
and
mov
sub
mov
lea
push
call
jmp
movl
cmpl
jge
lea
push
call
adc
sub
cmp
jb
and
sbb
add
jb
add
addl
addl
adc
sub
subl
movl
mov
and
add
add
movl
mov
inc
mov
mov
cltd
idiv
sub
movl
cmpl
jge
movl
mov
add
sub
sub
testl
je
sub
add
pushl
pushl
pushl
pushl
call
movl
lea
push
lea
push
call
xor
or
cmp
jb
sub
sub
cmpl
jge
call
push
pushl
pushl
push
call
add
add
jl
addl
add
addl
push
pushl
pushl
push
call
pushl
pushl
pushl
push
pushl
call
cmpl
jg
movl
cmpl
jl
push
call
movl
pushl
pushl
push
pushl
call
cmpl
je
lea
push
call
call
lea
push
call
addl
and
cmp
je
add
xor
cmp
ja
sub
and
add
sub
jmp
movl
pushl
pushl
call
andl
add
cmp
ja
adcl
add
add
pushl
pushl
call
push
push
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
pushl
call
push
push
push
push
call
sub
subl
test
ja
sub
sub
test
ja
add
adc
or
add
add
sbb
movl
mov
cmp
jg
push
call
sub
add
or
ja
sub
xor
testl
jl
sbb
sub
add
sub
cmpl
jl
movl
cmpl
jle
movl
pushl
push
call
call
movl
cmpl
jg
pushl
push
call
add
add
je
sub
sub
test
jne
sub
add
sub
xor
push
push
push
push
call
movl
pushl
push
call
pushl
push
pushl
pushl
call
movl
mov
cmp
jl
push
call
push
push
push
push
call
mov
sub
add
jmp
lea
push
call
movl
pushl
push
pushl
pushl
call
call
jmp
cmpl
jle
movl
mov
add
sub
subl
test
je
and
test
jl
adcl
or
add
sub
call
jmp
movl
mov
and
imul
imul
mov
push
pushl
pushl
pushl
call
add
adcl
test
jl
sub
test
ja
add
addl
add
subl
sub
push
pushl
pushl
pushl
call
call
adc
and
cmp
ja
subl
and
cmp
ja
add
sbbl
and
add
cmpl
jge
cmpl
je
mov
inc
mov
cltd
idiv
imul
mov
sub
test
je
sub
add
or
lea
mov
mov
mov
mov
and
sub
imul
mov
jmp
movl
cmpl
jge
mov
cmp
jne
call
jmp
movl
movl
pushl
push
pushl
pushl
pushl
call
xor
add
add
ja
sub
add
cmp
ja
add
add
add
movl
mov
imul
add
mov
and
imul
add
movl
cmpl
jne
movl
push
pushl
pushl
pushl
pushl
call
jmp
mov
inc
push
mov
pop
mov
cltd
idiv
mov
jmp
lea
push
call
cmpl
jg
movl
mov
imull
sub
pushl
pushl
pushl
push
pushl
call
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
imul
mov
mov
cmp
jne
movl
lea
push
lea
push
call
sub
test
jb
and
add
testl
je
sub
add
sub
adc
mov
cmp
jge
pushl
pushl
pushl
push
push
call
mov
sub
add
call
add
or
je
add
sbb
testl
jl
sub
sbb
or
sbb
jmp
movl
movl
mov
imul
imul
mov
and
test
jb
add
cmp
ja
sub
sub
adc
xor
sbb
movl
pushl
pushl
pushl
pushl
call
jmp
mov
cmp
jl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
imul
mov
call
sbb
test
jb
addl
sub
test
je
sbb
sub
sub
jmp
movl
pushl
pushl
pushl
pushl
call
or
cmp
jne
adc
sub
test
jb
adc
sub
xorl
addl
mov
add
add
xor
add
test
jb
sub
cmp
je
adc
sub
sub
sub
add
add
push
push
push
push
call
cmpl
je
mov
jmp
mov
mov
movl
mov
sub
sub
call
mov
movl
mov
or
mov
inc
mov
cltd
idiv
sub
movl
cmpl
jge
cmpl
jne
call
mov
add
mov
jmp
lea
mov
mov
mov
sub
sub
call
add
cmp
jb
addl
or
test
jl
sub
sub
addl
andl
sub
xor
jmp
movl
lea
push
lea
push
call
and
add
test
ja
sub
test
ja
and
adcl
add
subl
movl
mov
imul
sub
add
add
je
add
xor
lea
mov
mov
or
mov
mov
or
sub
sub
mov
add
mov
movl
cmpl
jg
movl
cmpl
je
push
call
cmpl
jl
cmpl
jl
movl
movl
pushl
pushl
pushl
pushl
call
movl
pushl
pushl
pushl
pushl
call
pushl
pushl
call
add
add
cmp
jl
subl
testl
ja
add
subl
sub
sbbl
or
jmp
call
movl
mov
cmp
je
movl
mov
inc
push
mov
pop
mov
cltd
idiv
sub
lea
mov
mov
mov
sub
imul
mov
adc
test
je
sub
add
add
jmp
mov
cmp
jne
mov
inc
push
mov
pop
mov
cltd
idiv
add
movl
pushl
pushl
pushl
pushl
pushl
call
add
test
je
xorl
test
jne
add
sub
add
addl
push
call
call
mov
movl
movl
mov
cmp
jge
movl
mov
cmp
je
mov
cmp
jne
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
sub
pushl
pushl
pushl
push
call
and
or
test
jb
adcl
test
je
sub
sub
orl
or
sub
jmp
push
pushl
pushl
push
pushl
call
mov
imull
imul
mov
push
pushl
pushl
push
pushl
call
call
cmpl
jl
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
push
call
add
sbb
test
ja
add
test
jl
subl
add
add
jmp
movl
mov
or
add
imul
mov
mov
imul
add
pushl
pushl
call
mov
cmp
jl
movl
pushl
pushl
pushl
pushl
pushl
call
lea
mov
mov
mov
add
imul
mov
jmp
lea
mov
mov
mov
sub
sub
jmp
cmpl
je
call
call
jmp
movl
cmpl
jne
lea
mov
movl
mov
mov
or
add
sub
pushl
pushl
call
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
sub
sub
xor
test
jne
sub
sub
adc
lea
mov
lea
mov
mov
mov
mov
add
imul
mov
cmpl
jl
lea
mov
mov
mov
and
mov
or
imul
sub
jmp
call
mov
imul
sub
pop
pop
pop
mov
pop
ret
nop
push
mov
add
movl
mov
cmp
jl
cmpl
jne
cmpl
jle
movl
mov
add
sub
adc
and
cmp
je
sub
and
and
jmp
movl
push
pushl
pushl
call
lea
mov
mov
mov
or
mov
inc
mov
cltd
idiv
imul
mov
sub
cmp
jne
add
addl
add
sub
pushl
pushl
call
cmpl
jge
cmpl
jg
movl
mov
imull
add
sub
add
test
jl
sub
testl
ja
sub
add
sub
add
adc
movl
pushl
pushl
call
jmp
movl
pushl
push
pushl
call
pushl
push
pushl
call
pushl
pushl
pushl
call
cmpl
jle
mov
and
add
sub
jmp
cmpl
jl
movl
movl
push
pushl
pushl
call
call
jmp
movl
cmpl
je
movl
pushl
pushl
pushl
pushl
call
cmpl
jle
mov
inc
mov
mov
cltd
idiv
sub
sub
adc
test
jne
adc
cmp
ja
adcl
addl
sbbl
adc
or
or
jmp
lea
mov
mov
mov
add
sub
add
test
jne
adc
add
sbb
movl
lea
mov
lea
mov
mov
mov
and
mov
sub
imul
mov
cmpl
jg
movl
pushl
pushl
pushl
call
cmpl
jge
mov
inc
mov
cltd
idiv
add
and
cmp
jb
xor
or
push
call
movl
cmpl
jle
lea
push
call
push
call
pushl
pushl
pushl
call
jmp
movl
lea
push
lea
push
call
sub
addl
cmp
jne
subl
add
lea
push
call
movl
push
pushl
call
cmpl
jge
mov
cmp
jle
call
push
call
mov
and
add
sub
jmp
movl
pushl
pushl
push
call
movl
pushl
pushl
push
call
pushl
pushl
pushl
call
push
call
movl
cmpl
je
cmpl
jge
movl
mov
add
mov
mov
cmp
jge
movl
pushl
pushl
pushl
pushl
call
jmp
lea
mov
mov
inc
mov
cltd
idiv
imul
mov
cmpl
jle
cmpl
jne
movl
pushl
pushl
call
movl
movl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
push
call
jmp
push
push
push
call
mov
add
sub
add
test
ja
sub
cmp
jl
and
and
add
sub
push
call
mov
pop
ret
push
mov
push
movl
pushl
push
call
pushl
pushl
pushl
call
pop
pop
ret
nop
nop
nop
push
mov
add
movl
cmpl
jge
movl
movl
mov
imull
imul
mov
movl
movl
mov
imul
add
movl
cmpl
jg
movl
cmpl
jge
movl
movl
mov
sub
add
add
test
jl
add
test
jne
add
subl
and
lea
mov
mov
mov
add
imul
mov
movl
mov
or
imull
add
subl
sub
cmp
je
adc
cmp
jb
adc
xor
add
addl
sub
and
add
add
test
je
add
add
test
jb
sub
and
sub
xor
add
mov
pop
ret
xor
ret
nop
push
mov
add
addl
adc
test
je
add
test
ja
sub
subl
add
sub
movl
mov
add
add
sub
sub
test
jb
add
cmp
jne
add
add
sub
sub
sub
movl
cmpl
jle
movl
cmpl
jg
mov
cmp
je
add
add
add
jl
sub
add
je
or
and
and
or
sub
jmp
movl
lea
mov
mov
mov
add
imul
mov
movl
movl
lea
mov
mov
mov
add
sub
add
add
test
jl
add
sub
jne
sbbl
subl
sub
sub
mov
inc
mov
cltd
idiv
sub
or
or
test
jne
orl
sub
sub
cmpl
je
mov
cmp
jg
movl
lea
mov
mov
mov
sub
imul
mov
add
add
testl
je
add
test
jl
add
add
sub
and
movl
lea
mov
mov
mov
mov
or
imul
mov
jmp
cmpl
je
movl
movl
mov
and
add
mov
add
subl
cmp
je
or
cmp
jne
or
sub
add
sub
andl
or
test
jb
sbb
test
je
add
sbbl
add
adc
or
movl
movl
lea
mov
mov
mov
imul
add
jmp
mov
cmp
jle
cmpl
jg
sub
sub
cmp
ja
add
xor
add
jmp
adc
cmp
ja
add
add
test
ja
subl
sub
add
xorl
sub
movl
movl
mov
add
mov
sub
add
test
ja
sub
test
jl
add
sbb
sub
adc
or
sub
cmpl
jne
movl
lea
mov
mov
mov
add
mov
add
subl
test
jne
or
addl
sub
add
cmp
jne
add
add
xor
mov
pop
ret
nop
nop
nop
push
mov
add
movl
mov
cmp
jl
mov
cmp
jge
movl
movl
mov
add
mov
sub
add
test
jl
sbb
sbbl
add
push
call
cmpl
je
mov
inc
push
mov
pop
mov
cltd
idiv
mov
push
call
or
test
jne
sub
sub
test
ja
add
add
addl
sub
and
jmp
movl
lea
push
lea
push
call
jmp
movl
cmpl
jge
call
movl
movl
lea
mov
mov
mov
add
mov
add
cmp
jne
adc
sub
and
jmp
lea
mov
lea
mov
movl
mov
mov
and
mov
imul
mov
sub
test
ja
sub
or
cmp
ja
andl
and
sub
adc
call
push
call
movl
mov
imull
add
adcl
cmp
jl
add
orl
testl
je
xor
add
sub
add
add
xor
cmpl
jl
push
call
xor
sub
test
jl
addl
sub
sub
movl
lea
push
lea
push
call
movl
cmpl
jne
movl
movl
mov
or
imull
mov
add
and
cmp
ja
subl
sub
sub
mov
pop
ret
nop
nop
nop
push
mov
add
push
movl
mov
and
add
imul
mov
call
movl
mov
cmp
jg
movl
cmpl
je
cmpl
jge
push
call
movl
mov
inc
mov
cltd
idiv
mov
movl
lea
push
lea
push
call
mov
cmp
je
mov
inc
mov
cltd
idiv
mov
pushl
push
call
push
push
push
push
call
jmp
movl
movl
pushl
pushl
call
sbb
cmp
je
add
add
cmp
je
sub
sub
sub
add
adc
mov
add
imul
mov
add
adc
cmp
jne
add
add
sub
movl
cmpl
jne
movl
mov
inc
push
mov
pop
mov
cltd
idiv
imul
mov
push
call
pop
mov
andl
movl
pushl
pushl
call
jmp
movl
lea
mov
mov
and
mov
imull
add
subl
mov
cmpw
jne
mov
pop
mov
pop
ret
nop
push
mov
add
flds
fmuls
fstps
flds
fdivs
fstps
movl
cmpl
jg
movl
mov
inc
push
mov
pop
mov
cltd
idiv
sub
movl
cmpl
jl
cmpl
jle
movl
cmpl
je
call
call
call
call
call
call
jmp
call
add
adc
test
ja
add
cmp
jne
sub
add
add
add
sbbl
add
cmpl
jg
movl
push
push
push
pushl
call
flds
fmuls
fstps
movl
movl
mov
cmp
jge
movl
mov
cmp
jl
cmpl
jg
call
jmp
lea
mov
mov
mov
or
add
sub
lea
mov
mov
or
mov
add
sub
call
mov
and
imul
imul
mov
add
cmp
jne
or
sub
and
jl
sub
add
add
adc
flds
fmuls
fmuls
fstps
flds
mov
pop
ret
push
mov
add
movl
mov
and
imull
imul
mov
mov
movl
cmpl
jle
sub
and
test
jne
sub
add
testl
jl
adcl
and
subl
add
or
or
movl
lea
mov
mov
mov
sub
imul
mov
jmp
movl
mov
imul
imul
mov
mov
add
add
mov
movl
mov
cmp
jl
call
andl
cmp
ja
sub
testl
ja
add
or
sub
cmpl
jne
call
jmp
cmpl
je
movl
pushl
pushl
push
pushl
call
or
add
cmp
jb
add
add
movl
mov
or
mov
or
add
sub
movl
cmpl
jg
pushl
push
pushl
pushl
call
sub
add
cmp
je
adc
cmp
ja
or
add
xor
sub
add
mov
mov
pop
ret
nop
nop
push
mov
add
movl
cmpl
jne
movl
pushl
push
push
call
cmpl
je
movl
pushl
push
pushl
call
cmpl
jle
pushl
pushl
pushl
pushl
call
movl
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
mov
add
imul
mov
pushl
push
pushl
call
pushl
pushl
pushl
push
call
add
cmp
jb
add
testl
jb
add
adcl
add
add
xor
sub
jmp
movl
pushl
pushl
push
push
call
cmpl
jg
movl
pushl
pushl
pushl
pushl
call
jmp
movl
pushl
pushl
call
push
call
cmpl
jg
mov
and
imul
imul
mov
movl
lea
mov
mov
or
mov
mov
or
imul
add
call
mov
pop
ret
nop
push
mov
add
call
mov
movl
cmpl
jne
mov
cmp
jg
movl
cmpl
jl
call
jmp
movl
movl
mov
and
imul
add
cmpl
jl
call
movl
mov
or
imul
sub
jmp
call
sub
test
je
add
add
mov
inc
push
mov
pop
mov
cltd
idiv
sub
decl
je
pushl
pushl
pushl
call
jmp
mov
mov
pop
ret
nop
nop
nop
push
mov
add
movl
cmpl
je
movl
cmpl
jl
lea
mov
mov
inc
mov
mov
mov
cltd
idiv
add
sub
sub
cmp
jne
sub
test
jne
add
sub
sub
sub
add
cmpl
jl
mov
or
add
add
jmp
movl
lea
mov
mov
mov
or
mov
inc
mov
cltd
idiv
sub
mov
and
mov
inc
mov
cltd
idiv
sub
jmp
sub
sub
test
jl
subl
add
add
adc
sub
jl
sub
test
jl
or
add
sbb
add
add
add
mov
pop
ret
push
mov
add
movl
cmpl
je
cmpl
jge
add
or
test
ja
sub
sub
je
sub
or
add
subl
jmp
movl
cmpl
jg
movl
mov
or
mov
inc
mov
cltd
idiv
imul
mov
movl
cmpl
jne
mov
or
add
mov
cmpl
jg
mov
add
mov
mov
mov
movl
cmpl
jg
movl
lea
mov
mov
mov
or
mov
inc
mov
cltd
idiv
add
movl
lea
mov
mov
mov
imul
sub
mov
mov
pop
ret
nop
nop
push
mov
add
mov
shr
xor
mov
movl
cmpl
je
sub
cmp
ja
sub
or
movl
cmpl
jg
mov
imul
sub
mov
sub
imul
mov
mov
mov
pop
ret
nop
push
mov
push
call
mov
movl
pushl
pushl
call
add
sub
test
ja
sub
sbb
cmp
jl
add
sub
sub
add
add
decl
je
pushl
pushl
pushl
call
jmp
mov
pop
pop
ret
push
mov
add
sub
adc
testl
je
subl
cmp
ja
add
xor
or
sbb
mov
pop
ret
push
mov
add
movl
cmpl
je
movl
lea
push
lea
push
call
movl
movl
mov
cmp
jg
movl
mov
sub
mov
movl
mov
and
imul
mov
jmp
movl
mov
add
mov
cmpl
je
push
call
movl
lea
push
lea
push
call
sub
add
test
je
add
sub
sub
add
movl
cmpl
jg
movl
movl
mov
sub
imul
mov
call
jmp
push
call
sbb
sub
cmp
jb
xor
add
sub
sub
movl
cmpl
jge
push
call
movl
mov
cmp
jle
movl
mov
add
imul
mov
call
xor
cmp
jb
adc
add
test
ja
sub
add
adc
add
jmp
movl
mov
cmp
je
lea
push
call
jmp
cmpl
je
call
adc
add
cmp
jl
and
cmp
jne
add
add
sub
xor
sbb
sub
cmpl
jl
cmpl
jg
lea
push
call
push
call
and
cmp
jb
add
sub
add
addl
jmp
call
movl
movl
movl
mov
or
sub
mov
lea
push
call
push
call
movl
mov
inc
mov
mov
cltd
idiv
add
addl
sub
test
je
sub
addl
sbbl
mov
pop
ret
nop
nop
nop
push
mov
add
movl
cmpl
jle
movl
mov
cmp
movl
cmpl
je
movl
cmpl
jg
movl
mov
inc
mov
mov
cltd
idiv
sub
cmpl
jle
movl
movl
mov
or
imull
mov
movl
cmpl
jg
add
testl
je
sub
sub
cmp
ja
adc
sub
sub
or
movl
mov
cmp
movl
cmpl
jge
jmp
cmpl
jl
add
test
ja
add
and
add
jmp
movl
mov
cmp
jle
movl
cmpl
jle
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
movl
movl
lea
mov
mov
mov
imul
sub
jmp
movl
lea
mov
mov
mov
add
mov
add
adc
test
jne
or
cmp
jb
xor
sub
or
movl
mov
inc
mov
cltd
idiv
add
movl
cmpl
je
jmp
addl
add
test
jl
add
or
jne
subl
add
sub
add
adc
cmpl
jg
movl
mov
and
sub
mov
movl
cmpl
jle
lea
mov
mov
mov
and
add
imul
mov
addl
addl
test
ja
sub
add
xor
sub
movl
cmpl
movl
cmpl
jg
add
test
jne
addl
test
jb
add
add
add
sbbl
add
and
cmp
jne
or
add
adc
mov
pop
ret
nop
nop
nop
push
mov
add
movl
movl
lea
mov
mov
mov
imul
add
lea
mov
mov
mov
or
add
sub
movl
mov
cmp
jne
sub
add
test
jb
sub
test
jb
add
sub
orl
add
sbbl
jmp
movl
movl
lea
mov
mov
inc
mov
cltd
idiv
imul
mov
add
test
jl
add
test
je
and
and
add
cmpl
je
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
add
sub
sub
ja
sub
adc
jb
sub
add
add
adc
mov
pop
ret
push
mov
add
movl
cmpl
je
movl
movl
mov
cmp
jne
movl
cmpl
je
jmp
movl
movl
mov
cmp
jge
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
add
movl
lea
mov
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
xor
add
cmp
jl
add
addl
add
movl
cmpl
jge
sub
test
ja
addl
subl
test
ja
add
and
sub
and
xorl
movl
movl
mov
add
imul
mov
jmp
movl
movl
mov
sub
sub
movl
mov
cmp
je
movl
cmpl
jl
movl
lea
mov
mov
mov
imul
add
movl
mov
sub
imul
mov
movl
movl
mov
cmp
je
cmpl
jg
movl
mov
imul
imul
mov
jmp
movl
movl
movl
mov
or
sub
imul
mov
sub
test
ja
add
testl
je
add
sub
add
subl
jmp
movl
cmpl
jl
and
test
je
sub
cmp
jb
addl
add
xor
subl
add
jmp
mov
add
add
cmpl
sub
subl
test
jne
add
test
ja
sub
addl
sub
add
add
addl
jmp
movl
cmpl
jl
movl
movl
mov
cmp
jg
jmp
mov
or
imul
imul
mov
jmp
movl
cmpl
jl
movl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
movl
mov
inc
push
mov
pop
mov
cltd
idiv
sub
jmp
adc
add
test
jl
add
subl
cmp
jl
sub
add
add
movl
cmpl
jne
or
testl
jl
sub
test
je
add
sub
subl
add
movl
movl
mov
cmp
movl
mov
and
sub
mov
or
sub
ja
addl
test
jne
or
sub
add
xorl
sub
or
test
je
add
and
test
jl
sbb
adc
sub
sub
mov
pop
ret
nop
nop
push
mov
add
sub
adc
sub
jl
sub
xor
sub
movl
cmpl
je
movl
cmpl
jne
movl
cmpl
jl
add
xor
test
je
sub
sub
cmp
je
orl
sub
add
addl
movl
movl
mov
or
imull
imul
mov
cmpl
jge
movl
lea
mov
movl
mov
and
mov
add
mov
or
sub
jb
sub
add
ja
add
add
addl
sub
add
lea
mov
mov
or
mov
mov
and
add
sub
jmp
sub
xor
test
jne
or
sub
sub
je
add
addl
add
subl
jmp
movl
cmpl
movl
cmpl
je
movl
movl
lea
mov
mov
mov
sub
sub
lea
mov
mov
mov
imul
mov
jmp
cmpl
jne
cmpl
jl
movl
movl
mov
add
mov
mov
inc
push
mov
pop
mov
cltd
idiv
add
jmp
sub
test
jne
orl
add
jmp
movl
cmpl
jge
movl
lea
mov
lea
mov
movl
mov
mov
mov
mov
and
imul
sub
add
test
jb
orl
add
sub
movl
movl
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
mov
add
add
test
jne
sub
sub
add
mov
pop
ret
nop
push
mov
push
mov
xor
mov
mov
pop
pop
ret
nop
nop
nop
push
mov
add
movl
movl
mov
cmp
jg
movl
movl
mov
cmp
jne
cmpl
jge
add
cmp
jl
sub
xor
movl
mov
cmp
jne
mov
sub
sub
mov
inc
mov
mov
cltd
idiv
sub
mov
inc
push
mov
pop
mov
cltd
idiv
add
movl
mov
cmp
jge
cmpl
jge
mov
inc
push
mov
pop
mov
cltd
idiv
mov
movl
cmpl
jle
mov
add
add
cmpl
jl
mov
cmp
sub
sub
ja
add
add
je
sub
and
sub
sub
mov
pop
ret
nop
nop
nop
push
mov
add
movl
cmpl
jle
movl
movl
mov
or
mov
sub
sub
jmp
movl
mov
sub
mov
movl
lea
mov
lea
mov
mov
inc
mov
mov
cltd
idiv
mov
adc
add
cmp
jne
add
test
jb
sub
adc
sub
add
mov
pop
ret
push
mov
add
movl
cmpl
jg
movl
movl
lea
mov
mov
mov
imul
mov
movl
cmpl
jle
cmpl
je
call
movl
cmpl
jne
push
call
adc
or
test
jb
sbb
test
ja
or
sub
add
sub
push
push
push
push
call
movl
mov
and
mov
inc
mov
cltd
idiv
mov
jmp
call
movl
movl
mov
or
mov
sub
sub
jmp
call
add
test
jne
sub
testl
jb
or
or
subl
sub
movl
lea
push
lea
push
call
movl
cmpl
je
cmpl
jg
call
add
sub
testl
ja
sbb
add
cmp
jl
add
xor
sub
adc
subl
movl
mov
inc
push
mov
pop
mov
cltd
idiv
mov
xor
test
je
add
and
test
jne
add
and
add
adc
sub
subl
jmp
movl
movl
mov
add
add
sub
test
ja
sub
test
jne
sub
or
xor
push
call
subl
sub
test
ja
sub
sub
add
call
addl
sub
cmp
ja
add
sub
sub
push
call
jmp
movl
lea
mov
mov
mov
or
mov
or
sub
add
cmpl
jl
mov
inc
mov
mov
cltd
idiv
imul
mov
movl
lea
push
lea
push
call
jmp
lea
mov
mov
inc
push
mov
pop
mov
cltd
idiv
add
add
sbb
test
jne
xor
cmp
je
subl
sub
and
xor
sub
sub
push
call
movl
cmpl
jne
lea
mov
movl
mov
mov
or
imul
mov
add
test
je
or
or
sub
jmp
lea
mov
movl
mov
or
mov
inc
mov
cltd
idiv
mov
push
push
push
call
push
push
push
push
call
cmpl
jl
movl
movl
mov
cmp
jge
mov
and
mov
and
imul
mov
push
push
push
push
call
and
test
je
add
sub
jb
sub
sub
add
add
add
movl
movl
mov
inc
mov
cltd
idiv
add
jmp
push
call
lea
mov
lea
mov
mov
mov
mov
imul
mov
sub
cmp
jl
sub
add
sbb
sub
mov
sub
sub
movl
mov
cmp
jle
push
call
mov
add
sub
mov
sub
imul
mov
push
call
subl
test
jne
sbb
testl
ja
add
sub
xor
sub
movl
movl
mov
cmp
jne
movl
lea
mov
mov
and
mov
add
mov
lea
push
call
sub
cmp
jb
or
test
ja
and
addl
sub
add
add
movl
mov
cmp
jge
cmpl
je
cmpl
jg
movl
lea
mov
mov
mov
mov
inc
mov
cltd
idiv
add
push
call
mov
inc
push
mov
pop
mov
cltd
idiv
mov
jmp
push
call
call
lea
push
call
cmpl
jl
push
call
jmp
mov
and
imull
add
add
sub
test
ja
add
sub
cmp
jb
add
sub
subl
add
sub
call
add
add
test
jl
xor
xor
sub
jmp
call
sub
test
ja
add
test
jb
add
add
adc
xor
xor
add
movl
mov
cmp
jl
movl
cmpl
jl
lea
mov
mov
mov
and
imul
imul
mov
mov
and
imul
add
cmpl
jg
movl
mov
inc
push
mov
pop
mov
cltd
idiv
sub
mov
or
imull
add
and
sbb
cmp
jb
add
test
jne
add
add
sbbl
add
adc
cmpl
je
push
push
push
push
call
add
test
jl
sub
adc
cmp
jb
add
sub
add
xor
add
movl
lea
push
lea
push
call
jmp
cmpl
jge
push
call
mov
add
imul
mov
jmp
movl
lea
mov
mov
inc
mov
mov
cltd
idiv
sub
call
lea
mov
lea
mov
mov
mov
mov
sub
sub
andl
addl
test
je
add
cmp
jne
add
sub
addl
and
mov
cmp
je
addl
test
je
sub
test
je
sub
addl
sub
adc
adc
sub
movl
mov
imull
sub
jmp
push
push
push
call
push
push
push
call
push
call
cmpl
je
movl
lea
push
lea
push
call
mov
sub
mov
subl
test
jb
adc
sub
subl
cmpl
jl
cmpl
jl
lea
push
call
jmp
cmpl
jg
mov
sub
sub
movl
mov
or
imull
sub
jmp
lea
mov
mov
mov
and
mov
sub
add
mov
or
add
imul
mov
call
jmp
cmpl
jg
mov
cmp
jle
call
sub
testl
je
sub
subl
sub
add
push
push
push
push
call
jmp
call
subl
sub
test
jb
sub
add
sub
sub
sub
sub
je
add
sub
add
xor
mov
pop
ret
nop
sbb
movzwl
movswl
ret
mov
jmp
pop
adc
pop
addb
pop
lea
mov
ret
jmp
pop
jmp
push
movzwl
call
sub
pop
movl
mov
sbb
jmp
dec
jne
mov
lea
mov
jmp
push
xor
push
add
lea
sub
push
xor
movswl
push
jmp
subb
call
mov
mov
pop
mov
addl
jmp
mov
mov
mov
jmp
mov
xor
mov
xor
jmp
add
add
sub
mov
mov
push
lea
lea
push
lea
mov
mov
push
xor
push
add
mov
mov
call
jmp
mov
xor
jmp
cmpb
jne
jmp
mov
cmp
jne
xor
jmp
sub
lea
add
xor
pop
pop
ret
jmp
test
jne
mov
call
lea
mov
call
rolb
sub
ret
pop
mov
push
cmpb
xor
pop
call
mov
push
call
pop
mov
xor
push
push
sarl
pushf
mov
mov
je
cmp
jne
pop
pop
ret
mov
call
xor
or
mov
jb
jmp
pop
pop
pop
ret
mov
incl
pop
ret
jmp
mov
sub
lea
push
pushl
mov
incl
xor
pop
ret
mov
test
je
mov
jmp
mov
ret
shl
push
mov
mov
inc
add
in
sbb
add
shr
pop
mov
push
pushl
mov
cld
mov
sub
movb
xor
add
mov
mov
mov
addb
mov
mov
jmp
push
inc
push
xor
mov
push
jmp
mov
mov
add
push
call
pop
xor
cmp
jne
mov
movzwl
mov
jmp
sub
mov
cmp
jne
mov
ret
mov
cmp
ja
mov
mov
call
mov
roll
repnz
add
ret
or
mov
add
pop
ret
pop
pop
ret
push
push
push
push
mov
mov
test
je
mov
mov
add
lea
mov
call
mov
lea
push
push
push
push
jae
mov
call
cmpb
or
mov
push
pushl
mov
cmpb
je
cmp
jne
inc
mov
jmp
mov
mov
call
inc
add
add
jmp
mov
testl
cmp
ja
mov
mov
call
mov
call
cmpb
add
mov
test
jne
ret
pop
pop
mov
mov
mov
call
mov
push
push
push
push
mov
push
push
push
mov
mov
mov
mov
mov
call
mov
shl
and
shr
or
jmp
mov
push
movzbl
call
subl
pop
jmp
and
mov
mov
jmp
mov
jmp
mov
mov
dec
pop
mov
jmp
mov
call
mov
cmp
mov
pop
pop
mov
lea
pop
pop
pop
ret
mov
ret
xor
pop
pop
pop
pop
ret
incl
mov
movb
incl
pop
ret
pop
ret
sub
jb
inc
add
jnp
add
mov
call
ret
pop
pop
ret
mov
cmpl
je
mov
lea
xor
add
mov
push
lea
call
mov
mov
pop
pop
pop
ret
neg
neg
jne
sbb
mov
sbb
push
call
mov
mov
mov
cmpb
jne
mov
mov
call
cmp
jbe
call
mov
inc
pop
mov
jmp
add
mov
xor
jmp
mov
lea
pop
push
call
jmp
cmp
jne
xor
push
mov
add
push
push
push
mov
mov
mov
xor
pop
pop
push
push
sub
mov
ret
pop
ret
mov
incl
pop
ret
push
push
push
push
push
push
mov
add
mov
mov
mov
lea
pop
mov
shl
push
call
cmpl
je
pop
pop
pop
ret
jbe
pop
ret
xor
add
mov
add
mov
call
mov
mov
mov
lea
sub
imul
cmp
jg
xor
pop
pop
mov
mov
cmpl
cmp
pop
add
jbe
pop
sub
lea
mov
call
pop
pop
pop
ret
push
push
mov
jmp
mov
call
mov
lea
jmp
push
sub
mov
jmp
push
mov
add
push
push
push
mov
mov
mov
mov
xor
mov
mov
jmp
add
lea
mov
add
mov
call
jmp
call
mov
pop
jne
ret
push
pushl
mov
cmpb
jne
mov
lea
add
jmp
jne
xor
mov
ret
cmpb
jne
lea
sub
jb
sub
jae
sub
mov
add
xchg
call
mov
call
pop
call
mov
mov
push
call
xor
jmp
mov
mov
pop
ret
movl
jmp
test
jne
mov
lea
pushl
mov
mov
call
test
jne
jmp
test
jne
add
jmp
and
mov
mov
xor
mov
mov
call
xor
pop
pop
pop
ret
push
cmpb
je
lea
mov
mov
sub
mov
call
mov
call
lea
mov
call
mov
push
roll
xchg
inc
add
ret
jge
xor
push
push
pushl
mov
incl
sub
add
sbb
lea
jge
movl
jmp
lea
push
push
lea
push
call
jmp
mov
mov
xorb
add
mov
push
call
pop
call
pop
pop
mov
pop
ret
movl
jmp
adc
mov
jo
add
ret
pop
ret
sub
jne
ret
pop
pop
ret
push
mov
push
push
push
push
mov
mov
mov
add
mov
stc
mov
mov
mov
cmp
je
push
je
cmp
je
mov
call
ret
push
push
mov
inc
and
jmp
sub
sub
push
sbb
mov
call
addb
pop
adc
jmp
mov
add
push
jmp
movb
jmp
and
mov
jmp
mov
mov
lea
push
jmp
adc
sbb
xor
adc
xor
add
mov
jmp
xor
mov
jmp
mov
mov
push
jmp
and
jns
dec
or
inc
jmp
mov
xor
mov
call
jmp
inc
cmp
jb
movb
movb
jmp
inc
addl
addl
jmp
adc
push
add
jmp
mov
movl
add
mov
jmp
sub
mov
jmp
mov
pop
adc
sub
mov
mov
movb
mov
call
sub
add
push
mov
adc
push
sub
call
mov
mov
pop
jmp
mov
test
je
sbb
jmp
sbb
sub
mov
sub
push
jmp
mov
movsbl
xor
inc
jmp
sub
mov
mov
jmp
lea
jmp
mov
subl
add
mov
jmp
pop
ret
mov
mov
js
sub
add
pop
pop
mov
push
ljmp
sbb
mov
jo
adc
cmp
jbe
cmp
je
push
push
push
mov
mov
call
add
pop
pop
pop
ret
sub
jne
mov
call
jmp
cmp
je
mov
call
dec
roll
pop
sub
mov
ja
jmp
pop
pop
ret
pop
pop
ret
pop
pop
mov
push
mov
add
mov
add
xor
add
call
test
je
jmp
mov
jmp
add
push
mov
mov
test
add
add
add
add
add
test
je
ret
dec
jne
mov
pop
pop
ret
mov
mov
call
and
fmuls
and
pop
stc
decl
mov
mov
push
mov
mov
call
jmp
pop
mov
pop
ret
mov
mov
xor
mov
push
mov
call
jmp
mov
call
test
je
push
xor
inc
add
add
sub
add
xor
pop
ret
push
push
mov
jmp
mov
test
je
mov
movb
call
roll
stos
sub
push
push
ret
push
mov
add
push
push
push
push
mov
xor
push
mov
mov
mov
call
push
mov
call
mov
call
rolb
or
xor
jmp
pop
mov
push
pushl
mov
incl
adc
mov
mov
add
lea
mov
mov
mov
mov
xor
pop
pop
mov
push
pushl
mov
sub
mov
jmp
jns
dec
jmp
mov
mov
mov
jmp
push
movb
movzwl
call
sub
inc
pop
mov
jmp
mov
add
call
lea
mov
mov
pop
mov
movb
mov
adc
push
dec
mov
jmp
mov
dec
sub
adc
xor
mov
mov
cmp
jne
mov
add
mov
jmp
push
add
push
subl
jmp
mov
sub
sub
xor
mov
jmp
add
mov
add
jae
loop
pop
mov
push
mov
add
push
push
push
push
push
pushl
mov
mov
and
imul
inc
add
add
test
jne
ret
mov
mov
call
jmp
cmp
jne
xor
pop
mov
mov
jge
call
repnz
adc
jmp
mov
call
pop
ret
mov
test
jne
mov
pop
ret
test
je
or
push
push
mov
mov
inc
les
in
mov
pushl
mov
cmpb
jne
mov
mov
xor
pop
pop
mov
push
ret
pop
ret
push
pushl
fs
mov
push
add
cmpl
jne
add
push
push
push
mov
mov
jmp
mov
call
push
xor
pop
mov
mov
push
add
mov
mov
push
cmpb
jne
call
jmp
addl
cmp
inc
add
add
add
call
pop
pop
pop
ret
movb
incl
add
inc
add
call
mov
xor
pop
pop
mov
pop
mov
jmp
jae
mov
pop
pop
pop
push
pop
incl
pop
ret
jne
mov
call
lea
add
loopne
add
lea
mov
call
ret
mov
roll
cli
sub
jne
add
inc
sbb
and
add
int3
push
add
mov
mov
push
push
mov
mov
mov
or
mov
mov
test
je
ret
push
push
mov
call
xor
pop
pop
mov
push
rolb
xor
lock
add
push
mov
call
mov
push
call
mov
mov
rolb
xchg
sub
add
mov
call
pop
pop
ret
mov
mov
mov
call
rolb
sbb
nop
ret
push
push
mov
mov
call
mov
mov
add
mov
add
lea
pushl
mov
mov
push
pushl
mov
incl
inc
inc
add
add
mov
call
ret
pop
ret
pop
pop
pop
pop
pop
mov
pop
ret
push
ret
push
push
mov
mov
jmp
mov
xor
push
push
mov
mov
shlb
jmp
pop
ret
and
mov
and
xor
pop
pop
mov
jmp
add
pop
ret
mov
jmp
push
add
dec
push
adc
sub
mov
sub
mov
mov
mov
mov
mov
subb
jmp
mov
mov
mov
mov
pop
pop
ret
mov
mov
clc
mov
movb
incl
add
mov
mov
incl
mov
mov
incl
pop
ret
pop
push
push
push
xor
push
push
mov
mov
pop
pop
ret
jbe
cmp
je
cmp
jl
mov
or
mov
mov
test
jne
mov
call
mov
mov
lea
mov
call
xor
push
push
lea
mov
push
lea
call
ret
pop
ret
pop
pop
add
lea
les
call
test
je
pop
ret
push
push
pop
pop
pop
pop
mov
push
pushl
sub
mov
add
pushl
jne
xor
pop
pop
pop
mov
push
pushl
mov
cmpb
jne
push
push
adc
mov
mov
call
xor
pop
pop
ret
xor
push
push
mov
mov
mov
mov
dec
jmp
movl
sbb
mov
mov
jmp
mov
jmp
xor
sub
stos
mov
jmp
mov
sub
xor
mov
mov
adc
pop
mov
ret
mov
mov
xor
add
call
jmp
test
jne
mov
call
mov
test
mov
mov
mov
mov
mov
mov
test
jne
mov
mov
mov
call
sub
mov
add
call
mov
mov
call
test
je
orb
add
add
pop
pop
pop
ret
push
mov
xor
pop
pop
ret
mov
mov
incl
ret
mov
push
test
mov
mov
pop
ret
call
mov
pop
pop
ret
pop
ret
pop
pop
je
mov
pop
ret
jmp
lret
add
lods
jne
mov
call
ret
push
push
push
xor
push
push
push
push
mov
mov
mov
mov
sub
jmp
push
mov
jmp
mov
cmp
ja
jmp
mov
mov
jmp
pop
ret
sub
mov
cmp
dec
je
ret
pop
or
je
call
push
add
add
mov
add
mov
mov
push
call
add
jae
loop
sbb
mov
add
pop
pop
ret
push
ret
pop
ret
pop
pop
ret
call
mov
mov
mov
mov
call
sub
fdivr
add
incl
add
mov
mov
incl
add
mov
movb
sub
lea
call
jmp
pop
pop
ret
cmp
je
cmp
jne
pop
ret
mov
pop
ret
push
push
push
mov
mov
mov
test
jne
push
inc
add
shlb
movb
call
jmp
xor
pop
pop
mov
push
ret
pop
ret
push
push
add
mov
ret
mov
add
jmp
movb
pop
lea
mov
mov
dec
jne
lea
mov
sub
push
jmp
mov
xor
jmp
sbb
jmp
mov
xor
mov
mov
add
add
push
push
call
xor
xor
mov
xor
mov
add
jmp
mov
xor
sbb
add
lea
jmp
push
mov
pushl
sub
adc
mov
call
sbb
xor
mov
mov
mov
mov
mov
jmp
mov
xor
mov
mov
add
add
push
push
call
add
xor
mov
inc
cltd
idivl
mov
inc
incl
cmp
jb
jmp
mov
mov
mov
mov
jmp
mov
dec
add
mov
jmp
lods
xor
cmp
jl
sub
jmp
push
jmp
mov
add
jmp
push
jmp
lea
push
xor
mov
push
movb
movzbl
mov
push
mov
push
dec
push
mov
lea
push
jmp
mov
add
mov
jmp
sub
mov
jmp
add
sub
jmp
mov
call
xor
stos
lea
adc
pop
mov
lea
dec
jne
jmp
mov
mov
call
sbb
adc
push
lea
xor
movzbl
jmp
mov
add
jmp
mov
mov
push
add
lea
mov
ret
add
mov
xor
mov
mov
mov
test
jne
mov
mov
mov
call
mov
mov
mov
sbb
add
mov
mov
test
jne
cmpb
jne
mov
mov
ret
pushl
mov
incl
je
cmp
jne
mov
push
call
ret
dec
test
jl
inc
cmp
ja
mov
test
sub
lea
push
lea
call
ret
jmp
ret
add
ret
subl
push
roll
into
sub
add
xor
pop
pop
pop
pop
push
mov
push
call
ret
call
pop
cmp
jl
add
incl
rolb
sub
mov
mov
call
jne
call
push
push
add
push
push
push
mov
mov
mov
je
sub
je
mov
call
xchg
pusha
add
ret
sub
sub
mov
mov
mov
and
imul
pop
pop
pop
mov
mov
mov
pop
pop
pop
pop
pop
ret
pop
ret
push
mov
push
push
push
mov
mov
add
mov
mov
call
xor
pop
pop
jbe
lea
call
add
sub
in
add
jmp
cmp
je
cmp
je
ret
push
mov
add
push
call
add
mov
mov
push
lea
call
jmp
pop
pop
pop
ret
push
mov
add
incl
sub
add
fs
mov
ljmp
mov
ret
pop
ret
mov
push
call
add
add
push
shl
lea
xor
sub
sbb
jmp
mov
call
mov
mov
xor
mov
xor
sub
lea
mov
mov
mov
mov
call
jmp
addl
lods
sub
xor
mov
add
inc
xor
inc
lea
dec
jne
mov
movb
push
mov
xor
addl
push
mov
jmp
test
jne
mov
jmp
adc
mov
mov
movb
mov
mov
sub
xor
jmp
push
call
add
jmp
mov
xor
mov
mov
xor
mov
xor
add
jmp
mov
jmp
mov
mov
jmp
and
movzwl
sub
mov
jmp
mov
mov
sbb
jmp
cmp
je
mov
call
lea
mov
call
pop
pop
pop
ret
mov
ret
cmp
sub
mov
add
mov
call
pop
push
mov
push
mov
add
push
push
mov
mov
jmp
mov
call
add
lea
mov
push
call
mov
jmp
cmp
mov
pop
pop
pop
pop
ret
mov
lea
add
mov
jmp
mov
push
lea
call
test
mov
mov
add
push
and
mov
push
call
cmp
ja
mov
shl
add
mov
adc
jg
add
push
push
push
mov
mov
mov
push
mov
push
push
call
add
jmp
lea
call
subl
mov
add
jmp
mov
push
xor
sub
sbb
call
mov
add
pop
mov
sub
dec
push
sbb
mov
call
add
sub
jmp
mov
movl
call
mov
jmp
call
mov
mov
add
add
mov
add
mov
shr
jmp
mov
cmp
jae
jmp
pop
pop
pop
pop
jmp
pop
pop
mov
pop
ret
mov
mov
add
call
mov
call
pop
pop
pop
ret
push
mov
call
mov
xor
pop
pop
mov
add
mov
add
ret
mov
movb
incl
mov
mov
addl
ret
pop
pop
mov
pop
pop
ret
add
push
push
push
mov
and
mov
inc
js
inc
shlb
clc
mov
movb
pop
mov
push
mov
adc
mov
les
push
push
mov
xor
push
mov
add
push
push
push
mov
mov
mov
lea
jae
add
add
add
pushl
mov
incl
inc
add
add
mov
cmp
jne
movb
jne
ret
mov
mov
call
mov
jmp
lea
mov
adc
sub
push
jmp
or
inc
jmp
add
mov
adc
mov
mov
jmp
mov
mov
pop
mov
xor
sub
inc
jmp
mov
adc
call
movswl
mov
sub
pop
jmp
lea
mov
mov
mov
addb
call
add
push
mov
add
push
adc
mov
push
mov
mov
push
jmp
sbb
mov
add
sub
inc
jmp
inc
sbb
jmp
movb
xor
mov
mov
xor
jmp
addb
ror
jmp
sub
mov
adc
mov
mov
jmp
push
mov
push
mov
jmp
add
and
jns
dec
or
inc
jmp
dec
jne
xor
push
add
mov
push
xor
xor
jmp
mov
xor
xor
add
mov
sbb
mov
jmp
mov
add
push
push
push
mov
mov
jmp
sbb
pop
xor
mov
adc
mov
xor
add
sub
push
lea
jmp
adc
pop
adc
mov
add
lea
sbb
push
sub
call
mov
mov
pop
adc
adc
sub
mov
xor
mov
jmp
xor
mov
mov
shr
subl
jmp
push
mov
add
push
push
push
jmp
cmp
jb
jmp
mov
sub
stos
mov
sbb
mov
dec
jne
mov
adc
pop
add
lea
ret
mov
sbb
mov
mov
lea
add
sub
jb
jmp
pop
pop
pop
ret
mov
incl
pop
ret
jmp
mov
pop
pop
pop
mov
mov
push
jmp
test
je
call
mov
push
call
mov
mov
xor
push
mov
push
push
push
mov
jmp
test
je
push
mov
mov
add
push
push
push
push
jmp
cmp
je
cmp
jne
mov
mov
mov
inc
call
pop
ret
pop
ret
call
mov
or
mov
mov
pop
mov
mov
call
test
jne
xor
pop
pop
pushl
mov
mov
mov
pop
call
xor
push
push
xor
mov
mov
cmpb
je
push
mov
mov
call
xor
push
mov
addl
mov
inc
add
xor
jmp
and
mov
mov
call
jmp
mov
call
ret
push
push
mov
mov
xor
mov
mov
and
pop
jne
pop
ja
ret
pushl
mov
incl
je
cmp
jne
sub
mov
pop
add
je
xor
jmp
pop
pop
pop
ret
mov
ret
mov
mov
push
call
mov
add
mov
jmp
mov
call
test
jne
ret
push
mov
add
pop
pop
pop
pop
ret
cmpb
jne
adc
mov
rclb
push
je
mov
pop
mov
push
pushl
mov
cmpb
je
cmpl
cmp
mov
xor
add
ret
push
push
ret
lea
mov
call
ret
lea
call
pop
add
mov
mov
das
add
ret
push
push
push
push
mov
push
push
jbe
push
mov
mov
xor
pop
pop
pop
ret
mov
call
rolb
jb
inc
add
inc
dec
add
mov
test
je
xor
push
mov
add
pop
pop
pop
ret
jne
mov
mov
call
mov
mov
mov
push
call
mov
call
test
jne
mov
lea
ret
pop
pop
pop
ret
mov
mov
mov
push
push
push
sub
push
push
push
push
mov
mov
ret
cmp
ja
ret
mov
ret
mov
call
pop
mov
push
xor
add
movb
lea
mov
cmpl
jne
cmp
jmp
mov
mov
rep
jmp
mov
push
mov
mov
jmp
and
jns
dec
or
inc
jmp
add
mov
adc
push
jmp
subl
add
jmp
mov
xor
sub
pushl
jmp
sub
sub
lea
mov
mov
dec
mov
movl
add
lea
mov
mov
sbb
mov
mov
sub
mov
adc
shr
mov
add
jmp
push
mov
mov
push
mov
call
mov
lea
sub
call
movl
mov
mov
jmp
xor
lea
sub
lea
mov
push
push
push
push
add
add
mov
add
mov
mov
lea
jmp
incl
xor
pop
pop
pop
mov
push
mov
mov
jmp
mov
add
mov
call
jmp
call
mov
pop
jne
ret
push
pushl
mov
xor
lea
mov
pusha
inc
add
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
lea
mov
mov
mov
mov
pop
ret
push
push
mov
mov
in
push
add
in
add
xor
pop
pop
jbe
lea
call
inc
add
add
push
push
call
mov
add
sub
jb
icebp
sub
mov
mov
mov
add
mov
mov
mov
shr
add
add
mov
push
call
ret
test
je
push
call
ret
push
mov
mov
nop
je
add
push
dec
mov
call
mov
roll
ret
add
push
pushl
mov
mov
pop
pop
mov
push
fs
mov
mov
mov
pop
pop
ret
pop
ret
pop
pop
je
mov
pop
ret
jmp
cmp
je
xor
call
xor
push
mov
add
mov
mov
cmp
je
cmp
jne
pop
ret
mov
pop
ret
push
push
push
mov
mov
mov
test
jne
and
lea
add
xor
pop
pop
mov
push
push
mov
push
call
xor
pop
pop
pop
ret
jle
sub
jne
mov
push
push
jmp
mov
mov
lea
mov
jmp
push
mov
jmp
xor
mov
jmp
mov
push
movb
push
adc
xor
mov
push
mov
push
sbb
push
mov
add
inc
push
xor
add
add
mov
lea
movzwl
call
mov
dec
mov
add
mov
mov
call
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
sub
call
movl
mov
jmp
mov
sub
mov
xor
mov
mov
xor
jmp
mov
mov
add
jmp
mov
mov
jmp
mov
sub
mov
call
jmp
mov
call
lea
pop
add
mov
sub
mov
mov
add
sub
push
lea
mov
call
mov
mov
lea
pop
lea
mov
mov
sbb
jmp
pop
jmp
pop
adc
jmp
inc
mov
mov
call
mov
push
mov
call
movl
add
jmp
inc
call
sub
jmp
mov
inc
mov
jmp
xor
jmp
sub
mov
cmp
mov
inc
cmp
mov
call
mov
ret
pop
pop
ret
cmpb
je
sub
mov
lea
call
pop
ret
push
push
lea
call
jmp
sub
mov
mov
push
lea
push
push
push
cmpb
xor
mov
add
mov
cmpb
je
ret
pop
or
je
call
push
push
decl
add
add
push
push
pushl
mov
mov
mov
mov
cmpl
je
mov
push
push
push
inc
add
add
call
pop
mov
push
mov
call
cmpb
jne
xor
jmp
mov
jmp
ret
mov
incl
mov
jmp
pop
leave
call
lea
push
push
jmp
mov
add
jmp
pop
pop
mov
pop
ret
mov
mov
add
incl
cmp
jne
call
jne
xor
pop
pop
ret
mov
movb
inc
rolb
push
xor
shr
les
add
cmp
rclb
insl
add
pushl
mov
add
mov
or
je
ret
mov
push
push
push
call
mov
test
jne
mov
pop
ret
call
roll
pop
xor
lock
add
mov
add
call
mov
call
mov
mov
pop
pop
mov
mov
in
push
push
push
push
mov
mov
ja
mov
mov
call
ret
push
call
pop
mov
mov
mov
xor
mov
mov
call
xor
mov
xor
pop
pop
cmp
jb
cmp
jb
mov
push
mov
push
mov
aaa
xor
jae
cmp
xor
xor
insl
gs
arpl
push
outsl
ja
js
xor
outsb
jns
addr16
xor
add
jb
xor
bound
add
jne
outsl
xor
and
data16
jbe
outsl
js
xor
outsb
jae
and
ss
gs
bound
add
outsb
insl
jno
push
and
xor
jo
imul
jns
jp
and
jbe
jbe
jbe
popa
imul
jo
ja
cmp
jno
xor
ja
sub
js
bound
popa
popa
ss
imul
xor
imul
jb
ja
add
gs
imul
push
data16
popa
and
arpl
jbe
popa
aaa
xor
outsl
js
ja
add
addr16
push
cmp
addr16
outsl
jo
cmp
jbe
xor
jns
sub
imul
push
xor
je
ja
imul
jno
outsb
jb
je
js
outsl
jp
push
push
xor
sub
imul
imul
jb
jo
jo
jb
and
ja
push
cmp
outsb
aaa
aaa
jne
sub
jae
cmp
sub
je
ss
jp,pn
ja
jns
popa
imul
bound
jno
jae
jne
imul
jae
data16
aaa
cmp
ja
jb
imul
xor
xor
imul
jbe
aaa
xor
jo
jo
xor
sub
cmp
xor
jno
addr16
jno
jns
data16
outsl
xor
xor
and
popa
popa
popa
add
outsb
aaa
jne
sub
insl
xor
xor
jne
cmp
cmp
insl
jno
push
xor
imul
outsl
bound
imul
jp
xor
xor
insl
jbe
js
ja
add
push
imul
imul
jno
xor
jns
cmp
xor
outsb
imul
jp
cmp
xor
cmp
gs
xor
imul
push
push
push
cmp
push
aaa
push
outsl
and
outsl
sub
gs
imul
jno
imul
jb
jno,pn
jns
jb
xor
aaa
jp
insb
and
xor
xor
addr16
imul
gs
jp
outsl
outsl
js
xor
cmp
jne
cmp
and
pushw
gs
xor
xor
imul
outsl
bound
cmp
imul
addr16
xor
ja
xor
xor
je
xor
push
popa
jno
and
xor
xor
insb
outsb
outsb
aaa
jns
xor
ja
insl
imul
xor
imul
outsl
cmp
outsb
cmp
jae
cmp
add
sub
and
add
cmp
push
ss
xor
data16
insb
sub
jb
push
insb
je
xor
jbe
outsb
and
xor
jno
outsb
add
push
imul
outsl
popa
bound
bound
outsb
js
jae
fs
xor
jbe
jno
insl
xor
cmp
xor
jns
and
outsb
and
popa
imul
bound
popa
js
add
jno
js
insb
xor
push
jb
je
jp
imul
data16
ss
xor
cmp
insb
add
arpl
arpl
ss
jne
xor
gs
arpl
js
jae
xor
jno
ja
push
bound
cmp
xor
imul
data16
push
jp,pn
jp
jns
jne
jp
jbe
jne
jns
insl
jne
and
imul
xor
add
push
arpl
bound
sub
ja
insb
imul
sub
outsl
jp
fs
push
add
jp
xor
xor
jne
js
xor
push
imul
xor
js
jo
jb
xor
jb
je
pushw
jne
xor
cmp
aaa
insl
addr16
imul
fs
push
xor
outsl
cmp
ja
data16
add
jae
je
imul
imul
imul
jp
insb
imul
outsl
ss
aaa
js
sub
outsb
cs
arpl
jne
jno
xor
xor
addr16
gs
addr16
jns
insl
jp
cmp
js
xor
ja
imul
popa
sub
je
aaa
outsl
jno
jbe
jno
jne
bound
fs
outsl
jae
and
aaa
jo
xor
outsl
xor
and
cmp
arpl
xor
push
jo
data16
cmp
and
je
xor
insl
insl
push
outsb
outsl
outsl
bound
jbe
fs
insb
xor
imul
insb
popa
bound
bound
imul
aaa
insb
xor
ja
cmp
ja
xor
js
outsw
jbe
xor
and
ss
cmp
popa
jp
add
jns
aaa
outsl
je
cmp
ja
add
xor
jne
data16
je
outsl
push
cmp
popa
and
cmp
imul
jno
aaa
jo
jno
insb
cmp
jb
imul
sub
outsl
cmp
and
js
insb
xor
jo
jae
cmp
jp
and
je
outsb
push
ss
insb
xor
push
add
outsb
bound
imul
xor
xor
and
xor
data16
popa
push
arpl
je
jno
imul
xor
popa
xor
xor
sub
jb
jbe
insb
push
imul
jp
outsl
bound
imul
cmp
jp
js
cmp
outsb
xor
and
xor
imul
jbe
cmp
jp
cmp
insl
ja
cmp
xor
sub
arpl
jo
imul
jp
data16
jp
and
ja
outsb
jb
and
ja
jb
bound
data16
and
and
outsb
insb
jno
jae
jbe
jbe
jb
add
jno
jo
xor
jo,pn
push
cmp
jbe
add
push
cmp
and
ja
and
outsl
js
cmp
popa
ja
bound
js
popa
xor
jo
imul
insl
js
and
jae
imul
jno
cmp
xor
outsl
arpl
xor
xor
push
jns
and
addr16
outsl
jae
jbe
bound
xor
jae
xor
js
xor
outsl
js
xor
jp
jo
insb
jae
je
addr16
xor
insb
cs
add
ja
pushw
jp
arpl
cmp
xor
jp
xor
jp
cmp
fs
gs
sub
imul
xor
aaa
je
jb
cs
js
xor
jb
je
popa
add
jns
and
jo
jb
jns
imul
bound
bound
outsl
jp
insl
xor
aaa
xor
ja
je
cmp
js
add
insl
xor
jae
arpl
jo
xor
push
insb
jbe
outsb
jp
xor
js
xor
je
aaa
jae
cmp
popaw
add
jae
bound
jns
xor
sub
gs
je
jne
outsl
xor
fs
imul
xor
popa
add
je
cmp
fs
xor
cmp
cmp
cmp
imul
imul
xor
jo
cmp
jne
insl
xor
add
cmp
imul
je
jae
push
imul
jne
push
je
jne
xor
outsb
xor
xor
xor
xor
jne
imul
xor
xor
xor
jne
bound
bound
jno
cmp
add
imul
xor
jne
js
and
addr16
xor
push
add
xor
je
bound
jae,pn
imul
add
add
popa
bound
cmp
jae
arpl
popa
data16
sub
pushw
xor
xor
outsl
popa
addr16
cmp
ss
insb
xor
add
popa
je
jbe
popa
push
add
ja
insb
sub
xor
gs
gs
jo
xor
jns
push
imul
js
fs
xor
ss
jae
jns
outsl
push
bound
jne
imul
jb
add
sub
xor
cmp
popa
add
addr16
ss
cmp
jae
bound
cmp
ja
jb
insb
addr16
cmp
je
data16
push
cmp
jae
add
je
jne
outsb
popa
aaa
jb
and
imul
jns
add
imul
je
js
jo
arpl
xor
insb
xor
and
jo
bound
xor
and
jns
jae
jne
imul
push
push
bound
outsl
and
xor
jo
gs
jo
and
data16
outsb
data16
bound
xor
data16
popa
aaa
jne
insb
jb
bound
imul
jp
imul
push
and
imul
je
aaa
ja
cmp
data16
cmp
insl
xor
jb,pn
bound
and
jne
xor
cmp
imul
jne,pn
jbe
addr16
add
xor
imul
xor
outsb
jae
gs
jb
imul
jne
cmp
xor
jae
xor
jns
add
ja
data16
cmp
ss
and
jae
insb
xor
outsl
insl
xor
push
imul
sub
xor
popa
xor
insb
push
insb
outsb
sub
je
xor
and
imul
outsl
xor
add
insb
add
arpl
imul
aaa
jno
imul
jno
jbe,pn
jne
jp
push
jne
cmp
jne
imul
and
xor
add
outsb
bound
outsl
aaa
bound
jae
jo
jo
push
data16
cmp
jo
insl
cmp
jo
sub
jb
data16
xor
insb
outsl
imul
je
xor
sub
aaa
arpl
popa
data16
jo
jne
outsl
xor
popa
xor
bound
and
jne
popa
jo
outsl
jno
imul
gs
jb
fs
ss
and
arpl
bound
bound
xor
and
data16
js
ss
jns
imul
outsb
push
add
xor
jbe
add
and
and
fs
outsl
push
jb
xor
insb
jo
add
imul
arpl
xor
xor
arpl
aaa
aaa
jno
jp
insl
popa
je
jae
and
bound
cs
js
jb
jns
arpl
ss
xor
js
data16
bound
insb
gs
insl
je
je
add
ss
jbe
ja
aaa
cmp
imul
xor
js
outsl
aaa
and
sub
xor
insl
and
xor
outsl
addr16
xor
jp
jne
xor
sub
xor
xor
gs
add
jb
imul
jne
popa
sub
insl
cmp
je
jns
xor
and
xor
push
cmp
arpl
jb
cmp
js
js
jne
insl
xor
outsl
imul
push
addr16
cmp
and
cmp
arpl
and
jbe
xor
jne
xor
xor
fs
jae
je
xor
outsl
imul
arpl
xor
push
outsb
jbe
jne
outsb
xor
ja
xor
and
jne
add
pop
mov
rclb
adc
or
les
jmp
fsubl
and
lret
arpl
add
movsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
movsb
mov
adc
in
popf
hlt
in
xor
insl
test
push
lcall
jmp
push
sub
xchg
scas
dec
inc
int3
out
adc
mov
add
mov
mov
mov
mov
push
jmp
hlt
inc
fdivr
insl
inc
int3
out
adc
push
dec
push
dec
int
adc
push
and
add
jmp
out
add
jbe
fsubl
jbe
fsubl
rclb
adc
and
push
pop
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xchg
or
jne
sub
inc
adc
rorl
inc
xor
lret
cmp
adc
ds
into
sub
pop
dec
inc
iret
sahf
mov
dec
jecxz
inc
xor
mov
jl
xorb
cmp
jno
orb
mov
dec
jno
cs
es
push
cmp
repnz
and
mov
cmp
ss
outsb
or
push
into
push
cmp
adc
adcl
jbe
addr16
mov
cmp
fildl
and
push
pop
xchg
push
call
mov
xchg
and
jg
xchg
orb
cmc
negl
jp
and
sar
fiadds
fwait
adc
lret
cmp
adc
ljmp
push
and
jl
and
insl
add
fisttps
lret
or
iret
sbb
push
pop
bnd
mov
fistl
xor
mov
test
pop
inc
cmpl
xchg
loop
xchg
sub
xor
scas
sub
mov
adc
sbb
adc
les
sub
xchg
jl
fs
std
sbb
insb
xchg
cmp
add
inc
scas
xchg
pop
mov
lcall
ficoms
jecxz
andl
mov
inc
dec
pop
mov
or
sub
pusha
dec
dec
mov
mov
inc
cmp
or
pop
adc
jmp
xchg
nop
pop
xor
enter
mov
sub
shlb
push
fcmovnu
mov
cmp
repz
mov
sti
pop
mov
xchg
loop
push
je
mov
jns
jg
pop
shll
int3
popf
sub
cld
cwtl
pop
add
jmp
out
ficomps
jo
add
aaa
mov
pop
es
aam
pop
cmp
push
mov
xchg
roll
sbb
divb
gs
mov
out
lods
out
fs
je
lret
and
jno
jl
inc
enter
fisubs
mov
stc
flds
cmp
aaa
call
adc
sarb
mov
sbb
and
mov
into
cmp
fisttps
fbstp
fs
lret
ss
lret
ljmp
jo
push
sbb
sub
pop
mov
mov
stos
lcall
xchg
mov
mov
sub
inc
out
lret
jmp
stos
jnp
mov
inc
scas
sub
push
lock
repnz
fwait
movsl
adcb
or
mov
popf
or
pop
outsl
mov
sub
loopne
jnp
mov
test
icebp
lahf
das
mov
mov
ficompl
stc
rcr
int
inc
notb
sub
shl
loop
inc
and
pop
cwtl
loop
jns
aaa
push
sbb
rcr
cmc
mov
cmp
test
and
cltd
fcmovbe
or
lods
inc
in
stc
mov
push
adc
mov
movsb
out
pop
sahf
seta
lods
cmp
jl
leave
clc
pop
cmp
xchg
rclb
std
push
pop
ds
pop
js
add
cmp
outsb
pop
fs
lahf
cmpsb
popa
cmc
repz
test
mov
xchg
leave
mov
and
xor
sub
ja
sbb
xor
out
push
bound
and
add
or
jno
movsl
je
in
and
ret
repnz
je
or
push
dec
cltd
add
mov
movsl
lods
shll
pusha
dec
cli
add
jge
pop
repz
rcl
fcoms
outsl
jecxz
adc
in
adc
jbe
jns
sbb
pop
cmp
cmpsl
stos
mov
add
mov
pop
mov
cltd
insb
mov
leave
fstl
sbb
xor
aaa
outsb
cld
hlt
mov
push
mov
xchg
mov
popa
or
inc
fisubl
mov
in
adc
sar
mov
xor
pop
and
mov
sub
sub
pop
stos
and
shll
cmp
mov
xor
adc
jecxz
movsb
lahf
push
and
xchg
fbld
xchg
mov
mov
pop
dec
jae
cwtl
pushf
jecxz
mov
xchg
mov
sub
insl
push
cwtl
aam
mov
xchg
push
mov
sbb
sbb
mov
inc
lods
xchg
pusha
cmpsl
gs
out
ds
inc
jno
inc
mov
xchg
xor
sarl
jg
jmp
scas
sub
lret
sbb
imul
pushf
push
adcb
push
and
push
lods
lock
int3
mov
fisttpl
int3
repnz
sub
or
fnstenv
icebp
ret
xchg
mov
jp
jne
sbb
loopne
mov
mov
xor
and
dec
xorb
hlt
sub
add
std
cwtl
mov
arpl
dec
cmpsb
fdivrs
mov
int3
pop
mov
ljmp
jmp
pop
or
dec
push
shlb
mov
movsb
lret
fsubrp
pushf
cmp
cmp
shll
cmc
and
insb
lock
xchg
int3
divb
cmpsl
xchg
fmuls
mov
xor
stc
movsb
lock
addr16
jle
jl
xor
pop
insl
jg
sub
pop
in
mov
fimull
mov
sub
sub
popa
inc
outsl
and
inc
cmpsl
test
es
int
int3
dec
popf
or
ss
shr
push
subl
sub
loop
mov
rorb
mov
sbb
lea
xor
pop
mov
mov
pop
inc
ljmp
mov
rolb
rclb
movsl
xor
mov
sbb
xchg
add
mov
enter
aaa
mov
movsl
test
cmp
imul
ss
pop
addr16
pop
int
pusha
out
pop
sbb
cltd
push
xlat
fcompl
popf
add
and
mov
and
shll
rcrl
xchg
xor
add
shlb
hlt
fists
lea
cmp
push
sbb
cld
pop
lret
test
xlat
dec
mov
sub
adc
pop
xchg
push
pop
push
scas
push
cltd
andb
sbb
mov
pop
dec
fstpt
push
push
addr16
dec
inc
sahf
mov
push
pop
push
jl
inc
jae
gs
xchg
dec
jo
xchg
xlat
push
insl
adc
repnz
adc
jl
xor
mov
jne
mov
inc
and
stos
mov
popf
xor
out
lods
add
sbb
or
inc
sub
rclb
cmp
xchg
jnp
xor
jno
xor
mov
add
add
fbld
arpl
sub
out
adc
jnp
sub
popf
xorl
int3
xchg
dec
sbb
jne
das
jbe
adc
stos
and
cli
nop
push
ficompl
icebp
adc
pop
push
inc
in
insb
stos
xchg
pop
mov
std
lds
stos
lods
mov
repz
lods
mov
pop
mov
test
call
pop
jge
in
cmp
inc
icebp
fcomip
sub
lret
cwtl
push
jo
jmp
sar
jno
jns
push
jle
jecxz
adc
sbb
test
nop
dec
dec
ret
jp
cld
cmp
das
pop
sub
into
sti
and
and
and
adc
inc
push
jle
jle
jns
xchg
mov
cmpsl
jle
and
imul
or
fcoml
push
mov
dec
cmp
pop
fisttpll
mov
fdivp
xor
xchg
xchg
cmp
pushf
lods
ret
pop
pop
into
mov
mov
adc
mov
jmp
mov
orl
xor
scas
jl
dec
je
into
ja
int
addr16
sbb
cmp
lds
cmpb
scas
rolb
jmp
mov
test
mov
pop
dec
repnz
lcall
mov
pushf
adc
mov
sbb
iret
lods
movsb
jge
push
rcll
orl
ja
sub
leave
xchg
scas
cmp
in
imul
fldt
xor
add
sbb
dec
add
xchg
pushf
fildl
jecxz
xchg
scas
dec
inc
pop
push
or
mov
or
lret
pop
mov
insb
xor
insl
test
lods
scas
stc
lcall
mov
out
out
adc
dec
ds
fwait
call
and
adc
mov
setnp
pop
xor
mov
cmp
dec
push
popf
imul
dec
aad
dec
xchg
cs
in
mov
mov
push
add
fwait
add
jbe
jge
and
sub
fbstp
cmp
aad
clc
clc
jmp
icebp
sub
js
mov
push
and
popa
mov
lret
mov
ret
mov
lret
inc
and
or
out
push
pushf
cmp
or
push
aas
mov
fcomps
inc
jg
shll
orl
mov
and
xchg
outsl
gs
push
movsb
shl
mov
loopne
jb
jge
push
out
xchg
mov
jl
sbb
out
xchg
mov
push
sbb
roll
in
jmp
mov
dec
and
jae
test
xor
pop
cmp
sbb
shlb
mov
add
mov
fldt
sbb
mov
or
jno
and
push
add
cmp
push
mov
imul
sbb
add
push
push
cmc
mov
push
add
das
pop
scas
cmp
mov
xlat
xchg
sti
and
push
imul
int3
leave
out
mov
mov
push
jge
mov
fwait
lods
dec
add
enter
jle
mov
cltd
push
popa
ds
xchg
js
dec
push
adc
fadds
call
inc
jbe
popf
xchg
and
shl
aas
in
sar
andb
stc
xor
jp
leave
mov
push
jb
sbb
inc
mov
mov
mov
or
jp
mov
mov
adc
int3
stos
arpl
out
in
push
inc
xor
pop
insb
in
dec
cmc
push
cmpsb
xchg
rcrb
test
lret
mov
insl
inc
mov
std
iret
ljmp
insb
cld
je
outsb
jb
push
fcomps
dec
mov
lret
add
adc
je
mov
fwait
hlt
xchg
add
fs
jl
cmp
push
push
xor
mov
mov
inc
adc
daa
jecxz
and
movsl
aaa
mov
mov
xchg
imul
sub
imul
dec
int
inc
repnz
nop
fadd
sbb
and
jg
jns
imul
and
clc
pop
push
jno
int
jno
popa
lds
sub
mov
mov
pop
lret
mov
mov
and
pushf
mov
xor
fbld
sbb
cld
cmc
push
sbb
xchg
pop
hlt
mov
imul
out
mov
or
or
imul
mov
pop
cmc
pop
out
mov
jb
lret
xor
mulb
cld
mov
pop
push
lea
xchg
shrb
mov
sub
adc
or
mov
sbb
test
mov
sbb
dec
insl
das
nop
repnz
sub
xor
sub
adc
adc
aam
jo
inc
add
es
aam
pop
mov
xor
psubq
inc
sbb
mov
jge
mov
cltd
pop
push
jmp
pop
jmp
and
das
bnd
filds
cli
jp
rorl
push
inc
pop
mov
push
xlat
scas
pop
fisubl
push
inc
cli
mov
loope
cmp
adc
ret
jb
cmpsb
push
dec
sbb
xorl
mov
sbb
into
and
fistps
push
popa
into
sub
cmp
shlb
out
popf
jne
jle
and
scas
xor
popa
shlb
pushf
pop
push
sti
sahf
loopne
ret
sub
int
pop
or
mov
fwait
add
ds
lea
cmpsb
out
shll
mov
fs
dec
gs
fwait
test
aas
test
jne
and
mov
daa
push
andb
shll
jge
or
push
in
xor
fucomip
cmp
pop
sub
sbb
add
lods
cmp
test
sub
aad
js
lods
arpl
repz
push
lret
pop
out
mov
mov
and
scas
jb
jg
sbb
add
fisttps
dec
lea
sub
push
sbbl
cmc
orb
adc
movb
hlt
pop
jb
int
loope
xchg
dec
cmc
xor
imul
sub
cmp
mov
jecxz
jecxz
pop
mov
lahf
sbb
push
adc
and
in
dec
movsb
out
adc
scas
dec
adc
imul
mov
inc
mov
shl
aas
les
cltd
repz
mov
in
pushf
dec
cmp
imul
mov
jl
adc
adc
xor
mov
or
lret
icebp
inc
int3
mov
rorl
je
xchg
jno
jl
and
or
ret
in
and
testb
sub
daa
and
ret
and
mov
mov
xlat
out
adc
or
inc
xor
sbb
dec
mov
jmp
dec
mov
or
xchg
pop
insl
xor
xorl
xchg
popf
mov
mov
es
fdiv
cmp
insl
lret
and
dec
popa
sbb
es
xor
inc
rep
sbb
adc
outsl
arpl
scas
cmp
xor
push
pop
cmp
das
aas
xchg
pop
mov
mov
sub
stos
add
popa
fldenv
cmpl
push
fstp
subb
je
mov
or
adc
fdivs
or
rorb
rcl
mov
leave
out
mov
inc
inc
cltd
mov
xchg
jo
icebp
fldt
cmp
adc
push
mov
lahf
stos
push
add
cwtl
sbb
add
cld
adc
mov
ret
xor
jle
lods
add
or
call
call
nop
rolb
mov
mov
cmp
mov
data16
xor
or
outsl
pop
stos
dec
pop
outsl
ds
push
pop
and
jo
xchg
insl
jno
jle
repz
mov
ret
xchg
fdivr
insb
mov
mov
xchg
jns
mov
rcr
cmp
push
cmp
mov
pop
insl
out
cmc
sbb
pop
popf
xor
adc
inc
xlat
lret
cmp
es
xor
and
dec
or
cmc
mov
pop
mov
fwait
hlt
cli
arpl
mov
jle
jle
mov
and
test
pop
sahf
push
cmpsl
addr16
dec
jo
stos
int3
sub
mov
lea
insb
loopne
gs
test
loopne
fs
rcl
cmpl
mov
lret
adc
fidivrl
fisubs
sti
mov
ret
cmp
xor
mov
leave
test
pop
mov
lea
movsb
inc
xor
sbb
stc
xchg
ror
adc
xchg
out
pop
mov
pop
and
pop
jp
cmp
aad
imul
and
dec
daa
push
in
xchg
xorl
lods
adc
loop
shll
dec
or
lret
pop
ret
adc
in
inc
int
adc
fwait
incl
stc
cli
int
push
cmpsb
and
sub
cmp
cmp
rolb
in
repz
mov
in
xor
pop
cmc
or
push
jb
dec
or
cmc
pop
xchg
push
subb
scas
add
cmpsl
mov
rcr
test
inc
inc
orl
out
add
push
mov
adc
sub
sub
insb
movsb
inc
hlt
jae
and
ret
insb
mov
mov
xchg
enter
ja
js
adc
sub
or
add
dec
stos
jns
repnz
lea
cmpsb
into
punpckhbw
adc
mov
fbstp
fs
mov
enter
pusha
cmpsb
jo
xchg
sbb
call
jbe
jno
fwait
subb
arpl
push
jns
mov
lods
fldl2e
xor
scas
adc
out
ja
sti
or
pop
sbb
cld
fstl
add
xchg
stc
mov
lods
insl
xor
and
add
sbb
pop
call
jbe
jmp
aam
add
sti
clc
jb
out
into
loope
mov
xchg
mov
push
loope
cmp
inc
lods
das
jne
leave
xchg
dec
xor
push
out
cmpsb
out
sbb
adc
outsl
fst
out
ja
stc
stos
add
sbb
leave
xlat
jp
mov
mov
iret
fsubs
push
dec
test
std
movsl
jmp
ror
xchg
mov
stos
adc
roll
clc
add
xor
out
shll
scas
push
mov
loopne
push
rclb
xor
insb
fdivl
iret
xchg
mov
dec
sub
ret
push
fstpl
and
lds
xchg
nop
cltd
fmuls
stc
mov
negb
jne
movsl
cmp
sub
xchg
jnp
jmp
push
imul
in
pop
dec
loopne
je,pn
sub
lret
call
and
pusha
xor
pop
daa
mov
xor
mov
cmpsl
add
jl
adc
xchg
test
mov
and
and
repnz
into
mov
xlat
add
mov
mull
mov
cmc
aas
add
out
lahf
and
cltd
mov
lret
fadds
or
pop
bswap
add
lods
ljmp
or
mov
imul
dec
fcmove
cmp
push
pusha
mov
std
mov
mov
mov
mov
arpl
and
jne
rcrb
or
dec
fwait
rclb
lods
cli
xchg
xor
jb
movsb
sbb
push
dec
inc
scas
xchg
lahf
mov
cmp
inc
and
je
xchg
mov
xchg
repnz
stos
inc
les
leave
int
inc
and
xor
xor
test
test
add
inc
loopne
rcl
lret
mov
sub
and
pusha
inc
add
dec
pop
pop
dec
jge
and
dec
ss
jle
cmpsl
ret
xchg
out
mov
loopne
lret
arpl
insl
lods
shrb
xchg
fstpl
call
stos
and
inc
es
mov
push
cwtl
push
jae
xchg
sbb
dec
add
insl
lahf
cmc
dec
fstps
pop
jns
repnz
push
jle
mov
cltd
inc
cmp
xchg
sbb
pop
add
out
fs
push
mov
call
jg
push
jecxz
and
lea
pushf
inc
cmp
fiadds
adc
incb
cmpsl
push
push
push
and
int3
out
test
daa
dec
pusha
sub
repz
std
mov
or
pusha
inc
pop
cmp
mov
cmpsl
or
outsb
jo
test
sbb
mov
pop
outsl
mov
push
fs
test
call
jp
cltd
push
loopne
mov
fldcw
rorb
stc
stc
lds
and
sub
and
lea
ret
in
sbb
test
mov
mov
mov
daa
stos
out
mov
nop
lods
xchg
pusha
pop
and
dec
inc
lcall
cld
inc
xor
lea
leave
ds
jle
rcll
jmp
fstps
mov
movsb
divl
cmp
or
jne
mov
xor
inc
mov
fcomp
sbb
sahf
sbb
rolb
cmp
mov
dec
and
aad
cmpsb
or
and
cmp
push
test
mov
mov
cmp
test
ljmp
iret
mov
dec
leave
push
int
fidivl
test
jnp
das
test
ret
dec
out
or
or
and
std
rcrb
ds
or
insb
scas
mov
xchg
nop
ret
mov
sbb
mov
mov
nop
mov
jp
push
add
sbb
cmpsl
mov
pop
shrb
cmpsb
pusha
daa
lods
push
repz
dec
add
loop
push
shll
mov
lcall
push
pop
mov
mov
test
and
xor
mov
enter
hlt
mov
wbinvd
mov
jbe
mov
xor
xor
adc
dec
mov
cmp
jbe
adc
jno
int
or
negb
push
int3
cmp
xor
mov
movsb
push
mov
xor
fisubl
ss
sub
xchg
xor
or
subb
aam
loope
aaa
pop
das
out
decl
dec
inc
jne
aas
mov
mov
or
dec
cmc
dec
mov
adc
sti
cmc
ror
pop
or
dec
ficoml
cmp
sbb
pop
in
jnp
sbb
mov
ficomps
push
sub
and
or
jmp
push
out
cmp
pop
insb
jp
xor
and
cmp
arpl
bound
xchg
std
sti
pop
mov
fnstenv
loope
adc
das
repnz
repnz
sub
mov
pop
push
xchg
pushl
icebp
lds
lods
mov
adc
adc
jb
mov
test
fiaddl
pop
cmpsb
dec
push
int
jle
jae
sbb
inc
mov
ja
incl
movsb
popa
ret
jae
dec
in
je
and
hlt
js
pop
test
movsl
inc
push
xor
add
sarl
jl
mov
repz
push
imul
outsb
mov
stos
scas
outsb
lret
sbb
sub
sub
xor
fsubp
adc
mov
nop
mov
or
fidivrl
mov
test
inc
xchg
adc
mov
mov
test
fwait
arpl
shrl
shrb
repnz
outsl
into
data16
and
sbb
lret
sub
mul
pop
addr16
cwtl
adc
shll
sub
jl
iret
and
push
and
neg
mov
xlat
bound
movsl
ret
ds
clc
push
mov
lahf
mov
sbb
outsb
cmc
fisttps
test
inc
inc
ja
dec
outsl
pop
mov
decl
xchg
sub
sbb
pop
sub
lods
int
or
mov
xor
jl
xlat
push
cwtl
insl
shl
call
js
aam
mov
lahf
je
mov
xor
cmp
xor
pop
xor
or
or
jns
repz
iret
and
hlt
enter
fstpt
mov
push
vmwrite
insl
mulb
jecxz
stc
into
push
and
rolb
lods
out
aam
mov
lret
xchg
mov
jecxz
sbb
push
ret
mov
outsl
rorb
jle
sbb
mov
outsl
mov
cli
mov
ljmp
rep
mov
ds
fs
insl
lret
data16
and
test
jb
mov
jae
push
and
dec
push
cmpsl
xor
popl
xchg
sbb
xchg
mov
ds
mov
in
mov
xchg
daa
movl
pop
std
std
les
ja
jbe
cmp
inc
outsb
lock
push
js
movsb
int
fnsave
xchg
push
daa
imul
xor
add
mov
js
lret
outsl
loopne
popa
loope
aam
and
sahf
cmc
add
es
mov
fidivl
in
movl
push
icebp
stos
cmp
sbb
pop
lcall
xor
pop
jl
les
movsl
test
in
out
icebp
fwait
stc
or
jbe
pop
fnstcw
mov
push
adcb
clc
mov
orl
pop
or
mov
pop
lods
dec
push
mov
cwtl
xchg
add
sti
stc
or
push
jg
arpl
inc
js
adc
mov
jmp
pop
pushf
repz
lds
ret
js
inc
add
xor
movsl
xor
lods
cld
stc
mov
ss
fcoms
inc
sub
in
sbb
and
pop
cmpsb
push
and
shll
mov
je
pop
sub
push
int3
fidivs
adc
push
adc
cmp
notb
repnz
push
xchg
mov
inc
insb
cmp
aas
xchg
das
rcll
stos
das
jmp
and
pop
mov
push
hlt
mov
xchg
lods
shr
hlt
pop
xor
sarb
or
fiadds
int3
dec
scas
scas
push
cmp
sub
push
dec
rol
sub
sahf
cli
inc
cwtl
lods
aam
out
add
jno
mov
xchg
adc
xchg
adc
pop
iret
std
stos
xchg
js
data16
in
rolb
add
aaa
xor
sub
mov
ret
int3
lcall
xchg
mov
cmpsl
lret
cmp
dec
dec
int3
scas
hlt
xorb
mov
iret
je
dec
and
movsl
test
scas
add
push
testl
push
jge
rcr
lret
repz
mov
dec
sbb
add
xchg
out
jecxz
cmpsl
pop
cld
dec
or
in
sub
push
div
push
sub
rclb
jnp
xor
outsl
fs
in
dec
lahf
or
sbb
pusha
shl
xchg
sbb
xor
aad
mov
xchg
push
mov
fisttps
pop
and
push
dec
sub
fcompl
dec
cmp
ljmp
push
mov
sub
out
jg
xchg
or
lea
and
repz
cmp
inc
test
pop
xchg
popa
or
inc
cmc
imul
or
mov
xchg
rorl
adc
test
scas
inc
jbe
lea
icebp
pop
lcall
push
mov
and
inc
stos
inc
pop
xor
stos
dec
sub
movsb
mov
cmp
scas
inc
xchg
jnp
jns
mov
loopne
das
inc
sub
cwtl
sbb
stos
xor
popf
push
push
fdivs
and
cli
mov
mov
push
jnp
or
and
das
mov
inc
in
and
sbb
mov
sbb
adc
xchg
inc
mov
imul
and
std
xchg
clc
lret
mov
loope
popf
popa
outsb
fnstenv
les
jge
mov
cmp
adc
movsl
fiaddl
aad
pop
mov
hlt
jge
inc
cmp
scas
add
inc
xchg
into
andl
inc
mov
in
aaa
mulb
dec
test
dec
fstps
sbb
test
mov
mov
rclb
in
shlb
mov
lods
cmpsl
pop
inc
inc
dec
or
or
xchg
imul
push
mov
pop
arpl
outsb
fwait
mov
jg
xor
sub
daa
sub
loop
pop
stos
pop
sarb
mov
sbb
push
fimull
jno
dec
add
mov
aad
mov
xor
or
fsubrl
je
in
addr16
in
repz
push
pop
sbb
mov
sub
repnz
pushf
cmpsl
pop
or
mov
push
xor
push
popf
icebp
aaa
cltd
xor
icebp
dec
and
in
mov
jmp
and
aas
mov
out
ret
add
xchg
xor
inc
repnz
push
in
xchg
ret
cwtl
dec
loope,pt
aad
dec
add
dec
in
mov
mov
push
lret
lahf
pushl
cmp
int
mov
fisttps
sub
pop
push
outsb
xchg
dec
pop
sbb
scas
mov
sub
stos
cmpb
xchg
jg
rcl
fwait
pushf
sbb
push
or
maskmovq
imull
std
aas
pop
push
in
mov
sbb
xor
push
and
mov
jle
mov
rolb
push
push
mov
push
aaa
lret
cld
pop
mov
mov
test
sti
sahf
sbb
and
adc
add
fildl
cmp
xchg
lock
mov
push
xchg
xor
adc
pop
jecxz
jb
mov
mov
daa
out
dec
add
scas
aaa
sbb
push
mov
loop
daa
push
pop
cmpb
mov
mov
cmpsb
rcrb
mov
mov
fadds
js
rcrb
and
cmpsl
in
push
outsb
shl
cli
sub
rolb
gs
ja,pt
popa
and
lods
imul
mov
inc
xor
loopne
and
cli
cmp
testb
dec
enter
addr16
sub
pop
xor
dec
add
sbb
mov
dec
jg
leave
movsl
scas
into
repnz
imul
xadd
out
enter
mov
shll
imul
adc
lock
fisttps
out
scas
cmp
ss
pusha
push
and
xor
insb
add
push
sahf
or
mov
popf
gs
and
mov
lods
mov
insb
std
cmpsb
mov
cmp
sbb
or
imul
inc
cld
xor
arpl
inc
aad
and
sub
and
mov
lock
cwtl
jp
sbb
out
bsf
int
shll
push
jmp
andl
jmp
popl
movsl
xchg
stos
adc
rolb
xchg
add
push
pop
mov
rcl
ret
jecxz
inc
xchg
jle
gs
dec
orl
jecxz
add
sub
dec
addr16
sub
mov
sbb
push
clc
inc
or
pop
jo
pop
in
or
jne
jnp
call
dec
test
lock
push
enter
adc
lret
rol
insb
lret
icebp
stos
insb
jo
inc
mov
das
jle
stos
jge
es
and
cmp
pop
mov
movsb
addr16
dec
mov
or
lea
add
mov
sbb
ljmp
inc
test
jnp
sub
cmp
mov
cmc
dec
and
out
jns
enter
in
into
cmp
mov
loop
sbb
mov
fucom
stos
xlat
loope
sbb
enter
fmulp
mov
addb
shlb
mov
xor
sub
popa
mov
hlt
clc
pop
shrb
aaa
add
adc
addr16
arpl
fsubrl
ret
push
inc
sub
jae
xor
mov
sbb
out
arpl
jns
out
shrl
cmpsb
aad
movsl
and
data16
shrb
sbb
imul
pusha
cwtl
outsl
push
mov
sub
mov
mov
sbb
sub
sbb
dec
mov
mov
xchg
cmp
mov
or
mov
pop
jno
jns
and
dec
dec
mov
push
mov
data16
pop
jo
movl
fwait
cli
arpl
add
int3
cmp
adc
inc
inc
cmp
sar
sbb
shll
into
shl
or
push
sbb
stos
cmp
inc
lret
or
insl
mov
fs
xchg
mov
sbb
stos
add
add
movsb
ret
mov
into
fdivs
pop
jno
lret
ret
inc
mov
mov
sub
jg
insb
mov
inc
popa
stc
cmp
xor
pop
divl
arpl
mov
mov
and
sbb
mov
inc
rep
cmp
imul
std
push
cmpb
jle
lods
xor
fcoms
lahf
adc
aas
ds
pop
loop
pushf
and
pop
inc
push
int3
jg
enter
or
sahf
cmp
arpl
xor
xor
jb
mov
or
out
popa
lods
jmp
cs
mov
popf
mov
gs
sub
jns
mov
imul
inc
mov
ret
or
lea
inc
add
sub
mov
ss
outsl
loop
xchg
xchg
sub
movsb
xor
xchg
insl
inc
sub
cmp
int3
je
scas
adc
insb
outsb
or
gs
enter
repz
pop
pop
jnp
fildll
xor
or
out
enter
mov
mov
repnz
inc
fiaddl
add
cmp
in
fwait
clc
enter
sarb
or
push
pop
push
mov
jno
dec
adc
mov
out
adc
sbb
xor
movsl
push
cmp
lret
xor
outsb
sbb
dec
adc
pop
mov
clc
inc
pop
fnstenv
mov
int
popa
fsubrs
rcll
scas
jnp
push
decb
imul
or
adc
mov
mov
stc
ds
lock
jnp
sub
mov
pop
pop
mov
subb
daa
dec
xchg
fsubs
dec
inc
push
call
loopne
rcr
push
lods
daa
daa
adc
jo
push
notb
repnz
loopne
cmp
flds
dec
inc
aaa
xor
loop
pop
pop
andb
les
add
scas
cltd
pop
mov
je
aaa
push
mov
add
cld
mov
orl
adc
call
les
in
es
mov
scas
lds
negl
inc
push
jp
pop
es
out
out
out
stos
icebp
sbb
xlat
repz
testl
cld
mov
pop
push
in
xlat
and
and
xor
sbb
popa
dec
lods
inc
jae
lret
sti
nop
nop
add
sub
cmp
push
je
les
or
frstor
jge
push
pushf
mov
imul
and
xor
sub
aam
mov
dec
out
sbb
pushf
xlat
orb
les
div
push
cli
cmp
add
jo
ror
or
cmc
push
inc
stos
mov
fucomp
ds
sbb
push
movsb
pop
jp
vmread
mov
sub
xchg
shll
inc
data16
stos
fdivs
lods
dec
mov
mov
xchg
xor
pop
cmp
push
in
jb
sbb
insb
or
fwait
mov
jmp
insb
xchg
inc
shrb
push
mov
shrb
inc
xchg
mov
mov
dec
xchg
ret
iret
mov
scas
sub
fistpll
dec
jbe
lea
xor
and
clc
icebp
inc
aas
popf
out
dec
cmp
adc
lret
sub
fsubrs
push
mov
pop
cwtl
sbb
mov
test
hlt
test
in
and
daa
add
mov
xchg
jo
jbe
or
test
test
rol
rolb
sub
popa
daa
mov
sbb
mov
cmp
popa
mov
cmp
inc
mov
pop
shrl
mov
cmpsb
lahf
sti
push
iret
cld
push
mov
fwait
shlb
cmp
cmp
in
xlat
mov
adc
loop
sbb
pop
fnsave
jns
pop
fdivrs
inc
mov
mov
fdivr
push
lahf
iret
cmp
lock
nop
int
loopne
sub
std
dec
pop
inc
in
out
pop
mov
mov
sub
push
fisttpll
xor
stos
adc
cltd
inc
mov
mov
sub
shlb
xchg
fwait
mov
sbb
and
movsb
roll
nop
push
loope
addr16
call
or
cmp
mov
adc
push
fisubl
mov
je
push
mov
mov
enter
insl
sub
mov
popf
sub
aam
sub
std
jge
lret
in
dec
pop
push
in
ljmp
add
les
loopne
cwtl
fpatan
repnz
shlb
pop
adc
int3
dec
or
sub
xor
mov
and
pushf
cmp
outsb
daa
inc
bound
add
or
add
jnp
jecxz
notb
lahf
inc
sbb
inc
cmp
push
mov
jo
mov
pop
aas
out
xchg
sub
imul
in
mov
xor
repz
cs
in
fldenv
sub
in
cmp
jbe
movsl
movsl
adc
jb
aam
xchg
jb
adc
push
js
aas
mov
mov
nop
sbb
ljmp
cltd
xchg
add
add
in
jno
pop
inc
idivl
mov
sahf
int3
neg
insb
outsl
enter
xchg
stos
int
jno
and
cmp
sbb
xchg
out
outsb
imul
and
test
push
xorb
jbe
inc
test
jmp
jg
orb
inc
mov
getsec
es
sbb
hlt
adc
scas
dec
test
dec
sti
lret
push
and
icebp
repnz
lock
and
sub
jb
inc
inc
pop
cmpsb
sub
push
adc
fwait
enter
mov
or
fiadds
subb
add
pop
pop
ss
pushf
xor
mov
xchg
out
sub
jle
xchg
call
or
push
mov
mov
sbbl
push
out
rorl
mov
cmp
aas
dec
dec
inc
adc
jl
sbb
mov
sub
dec
jmp
jb
adc
mov
xchg
sbb
dec
testl
icebp
in
pop
and
xor
push
in
cmpsl
and
mov
pop
nop
jae
mov
out
add
in
or
sahf
int
std
ljmp
ds
lods
inc
xor
clc
test
jbe
dec
jae
js
loop
cmpsb
mov
data16
data16
mov
daa
enter
xchg
and
gs
insb
pushf
xchg
jne
gs
jg
lods
imul
mov
fwait
pop
mov
jne
fld
and
fstpt
test
rolb
mov
aaa
ds
mov
cmpsb
dec
or
dec
xor
imul
inc
sub
xchg
cmp
pop
mov
jbe
les
sub
push
es
inc
aaa
in
mov
adc
shlb
mov
hlt
jg
mov
ud0
xchg
mov
mov
jne
xchg
out
ss
stos
push
pop
jle
ficoml
adc
push
push
outsl
mov
sub
paddw
mov
jb
jbe
lock
scas
push
sbb
xchg
adc
lea
dec
cwtl
sub
test
pop
rcl
cmpsl
lods
inc
inc
jl
jl
sub
jbe
dec
jle
test
dec
mov
cmp
mov
jae
mov
dec
dec
add
clc
call
in
push
and
mov
aaa
mov
push
lret
sub
pop
in
mov
add
xor
or
add
mov
inc
and
cmp
andb
mov
jg
stos
mov
mov
adc
mov
mov
push
cltd
data16
or
adc
pop
push
add
mov
lods
jle
mov
stos
sbb
sub
in
xchg
mov
stc
mov
jmp
cmp
mov
cli
cmp
insl
lods
sbb
xor
jne
insl
jmp
inc
mulb
fnstenv
lds
lret
sbb
sub
push
cwtl
push
xchg
or
mov
or
mov
lret
jl
out
adc
sti
roll
fwait
sub
sbb
aaa
mov
cmp
xor
jmp
sub
push
fdivl
or
mov
add
mov
adc
sti
pop
jae
mov
jmp
jecxz
dec
pop
loopne
movq
xor
pushf
cmp
lds
shr
inc
xor
fnstsw
xor
mov
dec
dec
imul
xbegin
mov
and
mov
pushf
fucomp
sbb
push
dec
cmp
das
sub
lret
cmpsb
movsl
or
and
inc
cs
popa
xchg
fistps
xchg
packssdw
mov
scas
js
fdivrl
cmp
sbb
test
ret
add
jl
rclb
lods
sub
test
dec
jmp
nop
add
mov
loop
addl
sub
push
lods
leave
jne
rcrb
inc
jno
inc
push
adc
fwait
je
dec
je
adc
lcall
pop
lods
ljmp
push
cmpsb
sahf
ljmp
add
and
lods
jnp
push
sbb
pop
es
cmp
scas
and
push
jecxz
sub
arpl
dec
push
jle
fidivl
xor
test
push
adc
cs
orb
dec
cmp
aaa
pop
jns
mov
cmpsb
mov
xor
pop
movb
dec
cltd
dec
dec
ss
sarb
dec
fisttpl
push
xor
and
jg
lods
jecxz
adc
loope
jns
ret
test
jo
jg
jl
xor
push
lods
lret
lret
sub
fsubrs
jmp
xchg
sbb
sbb
mov
les
mov
lahf
sub
push
add
rcll
adc
aaa
and
mov
sbb
jne
inc
jno
adc
adc
or
lods
imul
xchg
push
mov
leave
xor
or
lret
subl
neg
sbb
das
mov
shrl
ret
fidivrs
and
mov
push
add
sarb
xchg
inc
js
insl
and
xchg
ss
push
sbb
xchg
xor
lds
mov
mov
xchg
lods
sti
cmpsb
push
jbe
shl
imul
pop
in
xor
mov
adc
mov
lret
fnsave
adc
in
inc
aas
push
mov
testb
js
test
lea
inc
imul
mov
fwait
jl
sub
stos
add
sbb
xchg
inc
adc
push
and
negl
insl
or
clc
mov
push
or
andb
imul
mov
xchg
mov
mov
mov
xor
lea
dec
push
cwtl
sbb
lea
push
cmp
aas
aad
sbb
inc
jno
sbb
cld
or
fcomi
cmc
pushf
mov
stos
xor
aad
pop
loope
xor
mov
in
rcl
push
push
push
andl
jle
xchg
movsb
nop
and
xor
ss
sub
sbb
rol
dec
pop
test
in
pop
dec
lods
inc
shll
test
pop
cltd
adc
adc
in
repz
ljmp
scas
cmp
jbe
lds
adc
mov
mov
add
insb
iret
mov
popf
or
mov
outsb
mov
jne
sbb
or
or
xor
sub
jo
sub
jmp
aas
nop
inc
inc
mov
mov
mov
outsb
clc
imul
dec
es
outsl
mov
mov
xchg
dec
je
adc
adc
mov
lods
sbb
cmc
outsl
cmp
xor
pop
pop
inc
pop
xor
and
mov
or
xor
inc
fwait
or
hlt
cmp
loope
sar
push
sahf
ds
enter
xor
add
pop
jg
sbb
fs
mov
pop
mov
or
lods
pop
test
sbb
mov
push
push
data16
inc
lahf
cmpb
mov
in
push
push
push
jl,pn
cld
adc
pop
ret
loop
adc
jb
push
pcmpgtd
stos
and
sub
push
pop
movsl
mov
or
enter
pushf
es
mov
dec
lock
mov
aam
popa
mov
or
ficomps
inc
das
jnp
add
idiv
or
ds
test
jae
adc
add
inc
out
shr
jecxz
mov
arpl
dec
repz
mov
pop
dec
aam
mov
sbb
iret
cmc
lods
pop
movsl
adc
mov
add
aad
cmpsb
sub
sbb
es
fwait
shll
mov
jnp
sbb
out
lock
lods
inc
ja
xchg
inc
imulb
jecxz
adc
sub
pop
stos
sbb
cmp
push
xchg
or
dec
scas
es
sahf
add
movsl
dec
jmp
mov
add
or
dec
pop
push
add
pop
out
idivb
loope
cli
add
js
mov
dec
push
cwtl
mov
shrl
adc
pop
mov
pop
pop
cwtl
inc
add
or
shll
lahf
out
xor
fdivl
rcll
bound
out
and
test
std
idivb
xor
push
jp
pushf
pop
aaa
mov
sti
shr
inc
fbld
xchg
xchg
orl
lock
sbb
or
imull
insb
popa
pop
sbb
out
add
mov
and
outsb
nop
pop
icebp
jbe
pop
out
popf
xor
dec
mov
in
mov
in
add
testl
stos
aad
loop
push
adc
pushf
adc
in
pusha
test
mov
bound
jne
xor
push
inc
jge
leave
xor
jmp
gs
xor
daa
sub
sub
dec
push
jbe
stos
cmp
xchg
lods
out
addr16
test
pop
clc
cwtl
cmp
shufps
out
dec
rorb
and
fstl
lret
cld
jmp
cltd
sub
or
mov
jns
mov
fldl
outsb
pop
push
mov
jp
ds
cmp
push
stc
adc
jns
lods
mov
faddl
mov
enter
dec
jbe
mov
add
inc
fnstenv
ficoms
stos
outsb
test
push
adc
xchg
inc
les
xchg
mov
outsl
std
adc
jb
mov
pop
push
mov
sbb
xchg
mov
scas
fwait
jl
inc
sub
ss
add
fildl
and
cmp
xorb
or
imul
add
push
sub
lret
gs
mov
lods
inc
jbe
addr16
dec
clc
repnz
push
pop
pusha
dec
mov
xchg
pop
ja
stc
mov
cltd
in
sbbl
pop
pusha
test
js
adc
mov
insb
mov
xor
test
or
sbb
sahf
loop
aam
sub
jno
mov
decb
bound
repz
ret
and
into
subl
inc
decl
adcl
jle
pop
ljmp
arpl
mov
imul
adc
mov
popf
roll
lahf
cmp
rcr
xor
inc
dec
repz
movsb
jmp
sbb
xchg
data16
shlb
fisubl
clc
pop
pop
mov
adc
fcoms
mov
mov
or
addr16
cs
pop
imul
xlat
pop
mov
jnp
sbb
inc
jg
fadd
inc
out
std
leave
adc
and
insl
jo
testb
or
sbb
sub
sub
inc
loop
pop
popl
es
hlt
mov
mov
sub
jp
pushf
jecxz
insl
or
inc
adc
es
mov
cmpsb
loopne
movsb
inc
or
aam
mov
call
pop
je
shl
clc
lea
sbb
loop
addr16
sub
mov
test
lcall
jecxz
fiaddl
inc
js
sbb
dec
xchg
jmp
repnz
inc
in
add
cmpl
imulb
mov
push
adcl
cmp
outsb
or
jecxz
dec
jb
jnp
push
or
scas
lret
xchg
fs
cmp
xor
sar
push
pop
mov
std
mov
sub
fstps
or
push
repnz
ljmp
xor
inc
mov
xchg
xchg
fwait
dec
mov
push
xor
cmp
add
rcrl
cmp
xor
cltd
enter
and
addr16
rorl
or
mov
call
stc
aas
inc
cmpsl
sub
xchg
and
fnsave
popa
movsl
adc
pop
add
dec
xchg
popa
ss
inc
jecxz
sub
xor
leave
fstp
mov
hlt
cli
cltd
mov
rcrl
mov
mov
lods
cld
inc
mov
out
orb
add
mov
imul
sahf
xor
mov
pop
dec
xor
stos
arpl
idiv
mov
cwtl
nop
gs
mov
jmp
loop
push
pushf
mov
mov
inc
lcall
adc
sti
dec
scas
int
mov
add
inc
xlat
add
mov
push
xchg
mov
mov
mov
or
ficoms
clc
gs
daa
dec
in
outsl
clc
mov
and
and
out
dec
xchg
xlat
aam
dec
pop
cmp
xchg
xchg
pop
lret
sti
inc
fcmovu
popf
mov
add
xor
adc
int3
pop
adc
cmp
adc
pop
push
sbb
mov
les
mov
xchg
rorb
inc
mov
mov
test
sub
out
mov
icebp
mov
adc
imul
xchg
outsb
test
mov
push
dec
aam
stos
cwtl
scas
mov
sbb
pcmpgtd
cmc
push
jmp
into
and
inc
jl
ljmp
test
jmp
loopne
lock
in
and
jmp
es
lret
scas
add
xor
lret
loope
movsb
stos
nop
mov
pop
js
and
adc
mov
adc
out
rolb
pushf
adc
lock
mov
lret
pop
mov
outsb
mov
push
or
adc
sahf
stos
cmp
out
repz
dec
mov
xchg
adc
push
and
cmovl
sahf
in
ficoms
push
ja
fcompl
in
cmp
fcmovu
pop
mov
or
testb
and
loopne
jp
add
outsb
and
insb
xchg
scas
push
mov
jmp
imul
sbb
pop
jle
jne
mov
dec
inc
and
or
popa
lret
jg
out
bnd
loopne
add
pop
mov
mov
jle
in
cmp
daa
dec
lock
movsl
dec
xor
cmp
add
or
fcompl
mull
stos
lret
pop
sub
pop
std
and
adc
add
outsl
insb
jmp
pop
pop
sub
cld
sbb
push
in
mov
adc
popf
jo
and
sub
mov
mov
clc
mov
imul
subl
adc
dec
fdivr
cmp
jmp
js
mov
or
push
jp
clc
in
pop
pushf
sub
cmovbe
repz
inc
adc
push
xlat
jg
inc
add
cs
outsb
sbb
xchg
loope
faddl
mov
fldcw
in
jmp
add
cwtl
adc
or
ficoms
mov
push
mov
and
mov
loop
inc
cwtl
arpl
inc
cmp
xchg
outsb
in
pop
dec
xchg
loope
repnz
and
cmp
pop
movsb
std
jge
pop
imul
cmc
ret
or
add
vucomiss
pop
xchg
sti
inc
pop
xchg
jnp
sub
cmpsb
inc
fs
fcom
lret
lds
insl
fcomps
dec
xor
cmp
das
or
arpl
sub
jmp
pop
addl
fidivrl
mov
jb
push
pop
cs
push
sbbl
stos
sbb
ljmp
pop
test
cmp
call
jp
call
insl
pop
add
adc
mov
outsb
dec
add
mov
and
adc
cs
xchg
cmp
sti
arpl
cs
mov
test
ja
jge
arpl
cmpsl
leave
sub
push
inc
in
push
mov
push
jno
inc
sahf
cwtl
es
fildll
add
inc
xchg
xchg
xor
push
cltd
push
mov
jecxz
scas
fucomi
test
adc
or
or
imul
dec
ss
mov
aad
and
std
mov
xchg
fldcw
rorl
leave
or
pop
popl
sbb
movsb
bound
movsb
popa
ljmp
popf
push
mov
and
mov
adc
ret
and
adc
jg
pop
xor
xlat
lock
cmp
fiadds
in
cmp
push
mov
sbb
jns
mov
aas
clts
mov
sahf
mov
inc
sub
movsb
popf
mov
dec
pop
jp
mov
lods
rcrl
xchg
mov
mov
push
sbb
dec
dec
jecxz,pn
inc
xchg
mov
mov
push
aad
mov
lock
imul
pusha
in
out
mov
in
popa
dec
inc
addr16
mov
pop
out
jle
jbe
adc
icebp
pop
cmpsb
cmpsb
adc
pop
mov
add
sbb
movsb
int3
int
xor
inc
sbb
push
mov
dec
xor
stos
insb
or
inc
push
add
mov
mov
in
mov
sbb
sti
xchg
outsl
push
push
jno
jnp
or
loope
pop
cmpsl
cmp
jl
xor
jge
xchg
adcb
stos
push
pop
cmc
mov
stos
addr16
andb
mov
or
lds
xor
fnstenv
in
or
test
movsb
or
xchg
shll
dec
cmp
les
pop
div
addl
aam
sub
bound
pop
jg
pop
and
mov
into
add
push
mov
cmp
out
xor
insb
outsb
sarl
add
mov
push
enter
lods
addl
pop
sub
push
sub
addr16
in
sahf
movsb
push
stc
cld
jl
fadds
and
push
lds
adc
jns
jmp
test
dec
in
sbb
fcomp
adc
stos
pop
cltd
inc
and
aaa
xchg
fisubs
add
clc
les
mov
ja
mov
pop
fistpl
mov
cmp
lahf
jbe
loopne
pop
dec
jnp
into
sbb
cmp
gs
add
or
scas
push
inc
jmp
push
lret
loopne
hlt
sbb
sahf
inc
dec
pusha
roll
or
cmp
push
push
cmp
jo
pusha
pop
stc
jb
xchg
push
fisubl
adc
sub
jecxz
push
sahf
lret
sbb
pop
xor
add
cmp
push
subl
mov
mov
xor
jae
cmp
and
and
in
mov
or
in
lret
dec
lods
lods
ja
ds
jo
fsubrl
mov
jae
sbb
sub
and
pop
add
xor
and
mov
sub
xor
scas
or
push
pop
lcall
sub
faddp
sub
scas
add
icebp
pop
fdivr
mov
cltd
mov
xor
pop
in
mov
mov
xchg
pushf
in
mov
fidivs
lahf
dec
cmp
push
push
flds
fptan
call
fs
dec
mov
jnp
scas
test
in
cmp
rorl
inc
cmp
shlb
shr
mov
ror
xor
add
jo
push
and
sub
pop
in
lcall
xor
and
jb
imul
xor
add
add
out
mov
fcompl
and
scas
xchg
lahf
imul
sahf
xchg
sub
pusha
or
test
sub
out
cwtl
dec
add
xor
popa
xor
cld
pop
jp
pop
scas
orb
int3
cld
add
mov
int3
jle
inc
movsl
add
dec
inc
inc
inc
data16
cwtl
in
mov
cmc
and
push
add
into
mov
fistpl
ss
scas
cwtl
hlt
jns
jno
orl
add
mov
lcall
stc
push
jae
adc
sub
mov
inc
repz
test
ret
dec
lcall
or
pop
repnz
imul
insl
or
inc
push
xchg
push
cmp
std
xor
push
dec
lock
loope
aas
in
ret
xor
lods
arpl
push
leave
or
mov
gs
lcall
enter
insl
sbb
push
test
inc
aas
popa
lret
addr16
stos
pop
jns
pop
sub
or
inc
int
push
mov
popa
push
popl
imul
cmp
ja
stos
popf
lds
add
push
pop
stos
mov
inc
je
call
ret
or
int
inc
andb
add
fcmovbe
xchg
popa
arpl
mov
sub
cmp
test
adc
aad
fnstcw
xchg
cwtl
dec
mov
inc
push
inc
mov
or
or
outsl
jns
cmc
lods
dec
pop
ss
lods
es
pop
jmp
js
jae
mov
jns
mov
cmp
bound
sbb
push
push
inc
xor
rcr
mov
hlt
fiadds
cmc
cmpsl
cmc
iret
mov
andl
nop
ficoms
pop
cwtl
mov
test
mov
adc
in
test
dec
push
xchg
mov
cmp
leave
dec
lock
js
mov
outsl
mov
pop
shl
inc
cmp
and
pushf
shll
shlb
bound
xchg
pop
add
out
push
rcrb
call
lds
pop
xchg
mov
sub
aas
cwtl
stos
fisubrl
scas
fstpt
arpl
daa
imul
nop
push
lret
in
and
sbb
popa
xor
fwait
push
xor
adc
jecxz
xor
cmpsl
cmp
scas
fldl
aad
or
addr16
xor
cmp
mov
popa
inc
movsl
add
add
xchg
inc
dec
test
enter
ret
mov
imul
xchg
in
cmp
sub
nop
std
mov
loope
in
test
jno
test
or
dec
jnp
and
orb
jne
lret
xor
cmp
and
rclb
es
test
sbb
imul
add
cmp
jne
iret
jne
add
lds
rcrb
sub
idiv
outsl
sub
cmc
cmpsl
ds
jle,pn
mov
jmp
or
push
sbb
xchg
add
int
inc
push
dec
out
pop
pushf
into
and
pop
neg
xchg
fxch
pusha
fcmovb
test
dec
leave
scas
mov
adc
add
add
jnp
and
pop
mov
xchg
cs
mov
gs
sbb
mov
push
insb
loopne
lret
les
mov
sbb
movsb
or
cmpsb
xor
pop
js
add
std
jno
fiadds
pop
or
pop
inc
mov
mov
cs
fdivs
push
sub
stc
sub
outsl
sbb
sahf
mov
int
dec
mov
shll
add
pusha
gs
lods
sub
mov
cmp
movb
inc
pop
sarb
jnp
lahf
lret
ljmp
cmpsl
or
jle
fwait
aaa
xchg
mov
ljmp
lret
mov
dec
test
aas
aam
mov
push
cmp
xchg
in
pop
aaa
mov
imul
mov
push
mov
inc
sahf
sti
jp
lahf
jg
lret
in
inc
lds
xchg
fadd
or
push
ss
mov
xchg
xchg
adc
and
mov
divl
clc
les
loop
dec
adc
sbb
or
jl
xor
cmp
dec
or
mov
subb
sub
dec
dec
xor
jecxz
pop
insb
lds
not
hlt
loope
shlb
cmp
cmpsl
add
clc
cmpsb
add
cwtl
jb
fstpt
push
loope
in
test
cmp
ficomps
dec
into
in
stc
jge
push
pop
cld
jl
lcall
rolb
dec
xchg
outsb
push
mov
std
aam
into
fucom
cltd
jg
add
loop
pop
faddl
mov
xchg
test
lcall
inc
adc
sar
adc
dec
outsl
mov
loop
ret
sqrtps
jge
xor
hlt
sub
pusha
movsl
jbe
push
out
inc
jb
cli
add
fdivs
lcall
push
cmp
mov
lds
cmp
cwtl
movsb
in
scas
aaa
mov
or
mov
mov
lods
adc
cmp
jg
sub
popf
in
inc
xchg
dec
pop
sub
cld
aas
fdivrs
hlt
fildll
loope
adc
jae
dec
jmp
lret
addb
shl
jle
sbb
adc
sbb
dec
aas
mov
xchg
push
jbe
popf
pop
sub
mov
iret
rcll
or
mov
mov
xchg
lcall
push
push
xor
leave
into
mov
dec
mov
test
lea
scas
xchg
mov
insl
insb
inc
dec
imul
dec
daa
cmp
mov
aam
je
inc
sub
push
scas
mov
loopne
inc
mov
insb
ret
and
jo
idivb
push
mov
lret
loop
pusha
and
jne
xchg
xor
jae
out
imul
lahf
mov
dec
xor
cmp
sbb
imul
fisubs
push
fdivs
cmp
push
movsb
lods
daa
sti
popa
lahf
xor
fs
adc
xor
loop
push
imul
push
lea
movl
dec
xchg
jge
cmp
repnz
mov
pop
inc
mov
xchg
mov
inc
imul
mov
add
mov
and
and
loop
jne
pop
shl
inc
xor
daa
ret
lods
pop
adc
movb
out
repnz
dec
pop
inc
sbb
push
and
push
jo
das
cmp
loopne
dec
inc
and
pop
aad
sbb
into
pop
imul
mov
jmp
or
xchg
aaa
sbb
lret
inc
xorb
mov
xchg
and
dec
stc
push
and
and
lods
cli
mov
enter
pop
loop
fcmovnbe
addl
sbb
or
mov
repnz
add
and
mov
inc
mov
into
fmuls
cwtl
jne
shrl
sub
rcl
cmp
and
testb
js
cmovo
sub
adcl
sarl
out
lret
inc
jmp
adc
ficoml
add
dec
into
mov
fcomi
adc
add
icebp
push
scas
and
in
cli
pop
adc
lahf
fs
pop
call
push
cmc
xchg
enter
mov
xchg
pminub
repnz
and
fisttps
jmp
lods
and
cmp
hlt
cmpsl
ror
enter
mov
mov
mov
sub
iret
and
sarb
inc
jnp
mov
push
push
aaa
cld
jle
sbb
popf
pop
stos
mov
andl
pop
adc
cmp
jmp
sub
push
ljmp
sub
orb
aaa
movsb
rolb
pushf
imul
mov
loop
mov
out
je
es
push
cli
xchg
imul
or
mov
sbb
scas
aas
mov
jbe
mov
push
jae
je
xchg
movsb
out
push
inc
mov
pop
sub
sbb
pop
mov
xchg
leave
dec
daa
mov
push
xchg
out
cmp
mov
loop
pop
aam
ffreep
loope
push
ficomps
push
mov
push
out
add
test
jno
repz
fwait
movsb
stos
sbb
cmp
cmp
lea
stc
sbb
ds
pushf
leave
mov
mov
push
rcr
cmp
add
jbe
add
adc
and
xchg
fists
sbb
pop
xchg
mov
insb
pop
jo
pop
mov
aaa
test
in
jns
fsubrs
or
insl
fcomip
lods
ljmp
filds
push
rcr
subl
imul
sbb
adc
pop
imul
sbb
sub
rcrb
pushf
in
fisubrs
jmp
pop
repnz
xchg
ds
push
flds
cmp
outsl
mov
loop
push
xchg
sub
inc
mov
and
mov
jp
mov
jge
and
scas
das
sbbb
int
popf
shr
data16
data16
ret
icebp
dec
mov
int3
jae
pop
lret
je
orb
xchg
dec
sbb
push
xchg
xchg
lcall
cmp
pop
scas
mov
adc
shl
adc
xchg
arpl
bound
mov
pop
fs
lods
dec
jne
cli
ja
mov
mov
rorl
pop
cld
pop
icebp
fldl
jno
lock
fcomp
popf
lods
xchg
jl
inc
stos
cltd
fwait
into
repnz
mov
mov
mov
scas
dec
cs
cmp
cwtl
jo
cmp
sub
mov
sub
roll
loope
fcoms
stos
cld
loop
in
loope
and
dec
stos
sub
arpl
cmp
lret
or
mov
les
xchg
imul
adc
pop
sbb
xorl
jl
sub
enter
mov
jg
inc
mov
push
jg
divl
add
and
jnp
lcall
addb
jmp
movsb
cmp
hlt
sahf
dec
pop
jb
fsincos
lcall
cmp
stos
stc
lret
shlb
xchg
es
out
pop
mov
jle
fimull
dec
ja
insb
inc
mov
or
outsb
imul
mov
dec
mov
mov
xchg
push
pop
lcall
or
outsb
test
int3
loope
push
arpl
cmp
xor
xchg
lret
sbb
sbb
mov
xor
pop
cwtl
mov
bound
pop
xchg
mov
ds
hlt
adc
orb
add
inc
divb
popf
push
xor
hlt
jo
adc
pop
lret
and
add
fmuls
mov
adc
push
insl
adc
inc
in
push
pop
mov
fs
and
pop
mov
and
or
mov
iret
dec
jg
mov
lcall
mov
or
dec
push
addb
popa
dec
mov
xor
mov
mov
nop
fs
lret
jmp
insl
in
js
xchg
xor
jmp
int
cltd
dec
arpl
stos
rcrb
or
adcb
and
xchg
add
lret
mov
rolb
add
jbe
dec
je
mov
push
movb
shlb
in
enter
movsb
jmp
cltd
movsb
lods
jl
mov
fwait
xchg
pop
dec
fcmovb
pushf
jne
loopne
cld
push
xchg
xchg
int3
or
stc
jp
icebp
loope
sbb
push
add
in
inc
xchg
mov
pop
cmpsb
mov
sbb
xchg
cmp
ret
in
inc
lds
sbb
test
test
pop
jmp
enter
pop
jle
xchg
mov
adc
aam
cmp
mov
call
and
pop
sti
pop
fucomip
scas
dec
jb
xorb
in
and
add
in
cmp
fbld
pop
add
or
fs
cmp
movl
pushf
jmp
inc
dec
jg
jmp
das
xchg
cmp
dec
inc
or
divb
test
ds
clc
mov
xchg
std
jno
stc
aam
xchg
inc
test
pushf
pop
sub
gs
in
mov
dec
aaa
sbb
inc
sub
rcl
mov
scas
and
decb
test
clc
dec
add
adc
mov
and
inc
inc
mov
fcompl
mov
adc
pop
cltd
popf
leave
xchg
lret
xor
and
fwait
js
and
pop
cld
test
rol
jl
rcr
lea
lcall
sbb
pop
pop
cmp
xor
movsl
jo
lock
js
enter
jnp
fnstenv
push
jbe
sub
jg
loope
in
sub
lea
out
loopne
and
leave
in
jp
push
jo
stos
pop
xchg
fs
adc
popa
negl
lret
xchg
sbb
test
and
cld
mov
jp
ljmp
rcrl
cli
leave
inc
mov
inc
xchg
std
mov
mov
mov
xor
mov
lcall
cwtl
mov
jbe
inc
into
iret
in
xchg
lods
jo
bound
stos
add
cli
xor
push
mov
add
sarl
xchg
pop
sti
push
dec
les
mov
lods
jl
out
jg
mov
pop
sbb
xchg
pop
mov
popl
mov
aam
adc
xor
in
bound
xor
in
outsl
sbb
or
jbe
leave
ljmp
lods
or
mov
pushf
cmc
inc
lock
pmullw
sub
in
jecxz
adc
jecxz
mov
sti
sbb
mov
cltd
xchg
pop
mov
cmp
rcll
pusha
outsl
lods
stos
mov
sbb
lods
in
xor
int3
mov
sar
xchg
pop
push
xchg
pushl
popa
xchg
mov
xchg
ljmp
mov
inc
cmp
cmp
shlb
imul
mov
test
xor
mov
add
inc
es
imul
pop
pop
js
out
cmpsl
pop
adc
mov
jmp
lods
inc
imul
adc
leave
xabort
orl
mov
les
xchg
jnp
adc
push
add
xlat
outsb
fmulp
jle
ret
test
stos
add
push
xchg
std
loop
sbb
mov
movsb
jb
sbb
mov
jne
into
push
pop
shlb
inc
out
xchg
ds
hlt
loope
shrl
jl
mov
ret
adc
xchg
insb
pop
xor
fdivrs
mov
lret
or
mull
sbb
shrb
insl
insl
imul
hlt
pop
jl
mov
shll
mov
add
dec
out
push
hlt
xor
arpl
jmp
pushf
pop
pop
inc
sbb
push
jno
cld
add
jo
ja,pt
out
testb
xor
fs
mov
pop
inc
loope
lock
mov
or
jmp
add
jl
test
repz
or
xlat
add
arpl
jp
in
or
fisttpll
adc
sub
mov
xchg
adc
movsl
minps
adc
cmp
out
pop
mov
cld
repz
adc
pop
mov
mov
pop
jae
pop
aaa
jb
mov
cltd
push
sub
adc
aas
bound
xchg
daa
xor
aam
jbe
popf
xchg
mov
cmp
shrl
add
and
daa
pushf
pop
pop
out
push
pop
xor
add
and
or
and
sti
inc
inc
dec
fs
js
inc
movsb
lret
out
or
fwait
data16
call
mov
pop
xlat
xchg
pushf
lock
dec
sub
mov
fstpl
lret
mov
fnstsw
cld
add
test
imul
xchg
and
jb
dec
mov
aam
rorb
cld
sub
insb
repnz
xchg
out
bound
jle
jge
lahf
ja
jge
mov
fnstsw
insl
pop
dec
sub
sub
push
fldl
sub
call
mov
sub
pop
push
mov
mov
cmp
rol
xchg
lret
rcrl
xchg
mov
push
pop
int3
and
xchg
sub
jnp
mov
push
add
insb
and
shl
rorl
dec
adc
push
dec
inc
out
pop
insb
xchg
adc
sbb
lahf
test
add
xchg
lds
rcrl
xchg
pop
jnp
lret
fdivl
lret
or
add
xor
push
pop
cmp
push
inc
mov
mov
xchg
mov
movsb
adc
in
fwait
add
sub
int3
jmp
out
sub
ljmp
dec
push
pop
inc
cmc
mov
fyl2xp1
lahf
or
fcoml
in
mov
lcall
lcall
lods
das
lahf
cmp
mov
mul
mov
dec
mov
cmc
mov
movsl
je
out
jbe
mov
dec
inc
int3
cvtps2pi
aaa
xchg
xor
dec
repz
xchg
pushf
mov
xchg
aam
cmp
sub
in
cmp
push
andl
mov
loopne
or
mov
adc
arpl
and
add
mov
cmp
call
jbe
add
pop
clc
imul
decl
jg
outsl
and
int3
lret
mov
or
mov
pop
mov
dec
jl
xchg
and
xchg
stc
test
js
pop
dec
iret
out
add
inc
insb
pop
cmp
push
push
subb
cmp
sub
aaa
push
or
sbb
mov
cli
daa
xor
std
push
shlb
frstor
stos
in
pop
adc
adc
test
sbb
cmp
lock
cmp
imul
lods
dec
pushw
push
mov
pop
jbe
mov
lds
push
outsl
sti
xor
sbbl
movsl
mov
sub
push
mov
in
add
or
decl
and
xor
adc
dec
mov
cmp
vmwrite
pop
jle
movsl
xchg
mov
scas
add
je
ljmp
int3
dec
inc
aad
insb
insb
inc
pushf
stos
push
cmc
lahf
pop
in
xor
xchg
xchg
push
das
jbe
jns
dec
hlt
jl
cwtl
mov
cmp
fisubl
lods
fdivr
adc
lods
rcll
sbb
fistpll
push
push
cmp
mov
out
pop
adc
cmpsb
pusha
aas
sbb
xor
sub
out
mov
mov
lcall
adc
and
pusha
inc
insb
ljmp
xchg
xchg
outsl
stc
xchg
ret
test
push
jbe
push
stos
fldl
cmp
fcoms
sti
test
mov
or
int3
xor
mov
jno
dec
pop
in
repnz
lds
scas
and
pop
add
dec
xor
and
push
xorl
imul
cmp
mov
lret
loopne
aam
mov
dec
jp
or
out
mov
cs
adc
inc
cmpb
ljmp
lods
mov
test
inc
dec
add
xor
xor
dec
pushf
sbbl
inc
cmpb
out
ret
outsl
jmp
lret
push
int
dec
out
pop
stos
sub
or
fistps
int
xor
lds
push
adc
in
jbe
pop
in
aad
cmpsb
sub
int3
iret
lret
or
rolb
sarl
pop
fldt
movl
imul
pop
add
gs
fs
xor
test
cld
xor
cld
jmp
push
fldt
adc
pop
mov
and
xor
cwtl
ss
enter
sti
in
mov
cmp
xor
inc
leave
jae
arpl
inc
xchg
icebp
xchg
inc
aam
jge
mov
out
push
lahf
mov
outsb
add
cmp
jo
xchg
ret
std
mov
push
addr16
dec
lds
xchg
mov
out
xor
cld
xchg
cwtl
iret
insl
pop
adc
rorb
repz
clc
shl
sub
xchg
int3
push
in
push
repz
add
push
and
in
out
popa
lret
inc
shll
sub
inc
pusha
pop
inc
aaa
pop
call
xor
faddl
movsl
add
fstpl
cmpsb
inc
push
loop
ficoml
std
fidivs
or
jo
out
mov
mov
cmp
mov
stc
and
dec
pop
das
in
icebp
or
mov
and
dec
arpl
fsubrl
pop
xchg
fldt
xchg
push
jne
sbb
sub
inc
rorb
cs
aas
mov
fistpll
popf
jb
in
sub
ret
xchg
nop
push
js
and
push
hlt
add
inc
divl
loopne
and
inc
mov
aam
jecxz
adc
std
dec
push
incb
adc
add
sub
push
inc
pop
mov
js
cmpl
push
mov
les
imul
addr16
sbb
das
and
jne
int
jnp
xchg
sbb
and
push
clc
sub
sub
push
jae
jle
movsl
cmp
pop
inc
lret
add
ds
push
xchg
into
cmpsb
jge
out
sub
mov
scas
dec
pop
or
test
pushf
adc
imul
fcomps
sub
out
mov
jmp
call
mov
inc
insl
xchg
ljmp
shrl
icebp
add
clc
in
adc
int
xor
jno
stc
inc
loopne
add
push
dec
mov
inc
nop
stos
or
mov
and
cmpsl
aam
fstpl
jge
xor
jg
test
lea
cld
repnz
loopne
cmp
jmp
adc
popf
insb
int3
imul
out
je
popf
push
xorb
pop
cmpl
rcrb
mov
js
lret
loopne
adc
push
loope
lcall
mov
ret
push
mov
and
add
bnd
nop
adc
sbb
jmp
lods
aaa
jns
or
mov
cmc
adc
sti
mov
inc
dec
push
push
jae
data16
add
mov
imul
xor
bound
dec
add
in
cltd
mov
mov
pop
int
adc
push
xchg
and
or
popa
jns
or
adc
adc
cmp
mov
ljmp
pop
addl
xchg
imul
push
cmp
adc
clc
mov
adc
dec
lahf
cs
and
dec
clc
mov
movsl
or
test
jecxz
sub
in
shll
in
add
stos
adc
mov
add
adc
imul
out
aas
push
sub
nop
sti
popa
mov
jg
cwtl
movsl
das
sahf
mov
mov
popf
stc
les
jno
addr16
int3
mov
lcall
mov
add
loop
out
jg
mov
dec
pop
aad
mov
repnz
rcrb
jl
xor
stos
add
cmpsl
mov
pop
hlt
push
cld
enter
mov
mov
xchg
daa
dec
cmp
lret
dec
ret
js
push
int3
hlt
sahf
inc
and
cmp
lds
mov
sbb
insb
pop
cmc
add
in
ljmp
testl
sub
inc
adc
jg
sub
sbb
mov
insb
add
jecxz
dec
inc
dec
lea
out
add
decb
mov
mov
int3
mov
test
jo
dec
aad
lcall
lret
shr
or
into
add
ljmp
outsb
cmp
sub
adc
insb
scas
mov
pop
cmp
insl
lret
pop
push
jmp
dec
pop
mov
mov
addb
mov
movsl
in
imul
mov
sbb
push
adcb
out
lods
xlat
mov
jo
inc
jns
xchg
fcoml
xor
xchg
sahf
mov
mov
das
adc
shrl
jp
or
repnz
inc
pop
inc
mov
push
cltd
and
xchg
pushf
xchg
rclb
shll
adcl
xchg
in
sarb
aas
xor
scas
add
sbb
imul
jb
push
add
mov
xchg
or
dec
add
repnz
mov
add
stos
je
sarl
cld
inc
add
aaa
sahf
int3
ja
aad
fsubrs
add
shlb
lods
rcl
dec
push
insl
xchg
xchg
jnp
lret
inc
and
mov
jnp
nop
and
xor
lds
inc
and
insl
inc
sub
jno
sub
sarb
adcl
ljmp
in
or
xor
sub
loopne
jg
inc
mov
xor
imul
pop
mov
gs
imul
cmp
imul
xchg
push
add
rolb
scas
mov
sbb
aaa
in
stos
sbb
mov
pop
imul
rol
hlt
xchg
push
push
jo
sti
jmp
leave
addb
je
rcrl
clc
cli
inc
adc
sbb
out
in
push
mov
pop
mov
dec
icebp
or
inc
fxtract
das
pop
test
rol
push
cmpsb
pop
stc
aam
loopne
mov
popa
adc
jae
sub
dec
loop
cmp
cmpsl
sbb
movsl
test
rorl
aaa
pusha
sub
test
ds
inc
and
jg
mov
ss
sub
repnz
setno
pop
jo
rclb
inc
popa
inc
js
mov
inc
dec
xchg
pushl
dec
pop
pop
push
mov
bound
jge
ljmp
shr
fs
scas
add
enter
out
fnsave
push
dec
jo
jbe
aaa
add
imul
daa
ret
xor
insl
out
xchg
arpl
scas
xchg
pop
inc
fwait
jbe
jno
in
xchg
dec
lds
mov
ret
test
cmp
jbe
add
arpl
xor
rcl
outsb
xchg
mov
into
pop
and
inc
leave
inc
lods
pop
push
add
pop
lahf
mov
and
shll
subl
or
jmp
outsb
dec
push
data16
cmpsl
enter
mov
jnp
adc
shlb
mov
xor
out
cli
data16
test
cmp
orl
inc
je
aad
lods
call
mov
cltd
push
test
mov
mov
push
xchg
test
mov
andl
xchg
aaa
or
aad
fstl
test
insl
call
sbb
dec
sbb
inc
inc
test
imull
ds
push
push
push
inc
push
imul
dec
cmp
scas
stc
rcrb
fs
cmp
mov
addr16
cs
nop
jp
inc
xor
pop
adc
test
clc
pop
fistpll
lcall
fsubrl
dec
roll
bound
xor
and
lods
mov
cwtl
aas
mov
jecxz
mov
aas
cwtl
imul
jo
or
mov
inc
mov
out
sbb
outsl
test
sbb
xlat
stos
pushf
mov
cmc
or
lahf
mov
mov
sti
cmp
inc
dec
mov
rcr
loop
sbb
loope
aas
xchg
or
xchg
aad
lds
fs
sub
mov
cmp
shl
or
loopne
inc
lret
push
fucomi
mov
test
out
imull
lods
pop
leave
movb
sbb
call
dec
xor
sbbl
cmpsl
jp
push
jp
sbb
call
pop
inc
mov
mov
jl
jnp
sub
jne
sbb
push
adc
sub
pop
add
mov
or
sub
test
sub
fimull
xchg
xchg
mov
add
in
push
adc
test
dec
sub
mov
cmc
repz
inc
ds
popa
ljmp
xchg
mov
push
std
lret
pop
daa
cmp
pop
push
lds
hlt
xchg
mov
into
repz
jns
mov
stc
pop
push
imul
aad
shrl
push
aaa
popf
xchg
lods
stc
ja
in
sarl
dec
jmp
xor
test
imul
push
pop
inc
pop
das
and
or
repz
lods
imul
in
lods
mov
cli
cs
sahf
jno
and
adc
sbb
xchg
js
andl
push
test
jg
filds
xchg
cmp
cmpsl
lret
jge
mov
dec
mov
jl
loopne
aaa
std
sub
push
pop
fwait
and
and
sub
cmp
dec
and
cwtl
outsb
pushf
inc
cmp
insl
push
or
popf
xor
push
in
ss
aad
cmc
out
in
testl
fistpl
movsl
jne
sbb
int
scas
clc
ret
dec
loop
sub
jmp
adc
fisttpl
ds
cmpsb
ror
repz
insb
iret
mov
test
pop
ja
mov
push
aad
xor
shlb
adc
ja
loope
fsubp
xor
push
xor
mov
mov
adc
in
dec
into
test
inc
mov
testl
add
pop
bound
fcmovnb
adc
or
clc
adc
fistps
stc
stc
in
mov
cmp
sub
dec
mov
cvtpi2ps
mov
xor
idivl
mov
cmp
int
iret
ss
mov
pop
orl
pop
fiaddl
sti
xor
mov
stc
xor
daa
or
rorb
fcmove
inc
nop
icebp
fs
lahf
adc
jecxz
dec
divl
mov
push
jmp
adc
fmul
and
stos
out
mov
dec
ficompl
sbb
dec
jle
pop
adc
and
ffreep
mov
out
clc
jne
fwait
lret
fnstcw
std
inc
sbb
cli
daa
dec
or
imul
sbb
mov
outsl
lcall
insb
mov
in
testb
inc
jns
pop
pop
popf
test
xchg
cwtl
push
fwait
mov
and
lock
push
insl
int3
and
pop
fs
faddl
jl
nop
push
mov
dec
out
push
pop
push
add
sub
icebp
push
in
fwait
jno
mov
mov
pop
subb
ss
imull
xchg
cmp
xor
mov
pop
push
adc
dec
jp
xchg
sbb
xchg
ret
cmp
fsub
push
push
xor
mov
mov
aas
fiaddl
mov
test
or
lds
cld
lahf
inc
dec
fiaddl
aad
adcl
mov
xor
or
decl
and
add
sbb
mov
mov
mov
out
hlt
sub
gs
mov
sahf
bound
cltd
dec
mov
fimuls
inc
in
push
add
in
sub
incb
out
sbb
sbb
pop
ficoms
aaa
lcall
iret
xor
sbbb
out
or
or
xor
mov
je
dec
test
mov
cmp
adc
push
xchg
cmc
jge
xlat
call
leave
mov
xor
mov
aam
mov
stos
and
sub
mov
xchg
and
int
pop
in
into
jl
fsts
sbb
and
in
cld
mov
jbe
out
jle
adc
ds
sti
filds
jecxz
jge
es
loope
or
push
sub
loop
mov
jo
xor
hlt
xchg
sub
pmaxub
mov
dec
jae
aam
add
repnz
xor
fisttpl
or
cmp
mov
mov
sbb
pop
adc
xor
je
or
push
mov
and
jno
enter
enter
inc
cmp
sbb
xchg
scas
mov
addb
ss
inc
push
js
fs
push
sbb
inc
push
fs
les
and
and
mov
ret
sub
push
or
popl
stc
mov
scas
add
lcall
imul
sti
cmp
sti
jns
mov
iret
rorb
ret
jecxz
ljmp
into
dec
inc
mov
and
mov
push
addl
ror
in
out
or
iret
jo
jns
mov
insl
ja
cmp
neg
push
xor
ja
test
int
dec
adc
adc
and
aad
push
mov
iret
lret
fsubrp
xor
arpl
insl
mov
inc
loop
sti
cmc
mov
iret
sbb
ret
pop
mov
mov
dec
and
add
xchg
add
rol
mov
shlb
clc
xchg
pushf
loop
xchg
out
aas
xchg
xchg
lods
push
sub
sahf
aam
sbb
pusha
adc
out
xchg
out
mov
ret
dec
xor
lahf
movsb
int
cmpsb
dec
mov
dec
bnd
xlat
das
in
pop
sbb
xchg
dec
push
stos
push
pop
imul
xor
aaa
bnd
insb
stc
sahf
jne
pop
in
shr
cmp
cmp
push
push
cli
daa
add
pop
in
das
cmp
sub
push
repnz
rorl
push
add
loopne
sub
sub
pop
or
sub
jo
adc
loop
insb
dec
div
fldcw
xchg
fwait
and
jg
mov
stc
inc
adc
sahf
xchg
adc
add
push
mov
adc
leave
sarb
and
sbb
pop
dec
xchg
fistpll
or
test
int
sbbl
lds
scas
and
dec
loopne
sub
bound
sub
xchg
iret
push
mov
adc
pop
jle
pop
andb
and
movsb
mov
aad
lds
jg
cwtl
pop
and
subb
mov
cmp
fildll
jno
cs
leave
inc
loop
jp
push
push
xor
cli
jg
lds
pop
and
jmp
push
lds
pop
lahf
imul
jns
adc
jb
fdiv
cltd
inc
mov
fldt
mov
jg
out
add
cld
cmp
and
out
js
aad
mov
push
add
nop
outsl
cmp
push
mov
loop
push
push
pusha
adc
xchg
shll
mov
in
sub
adc
adc
or
sar
stc
loop
cmp
mov
rclb
dec
test
or
jbe
mov
cmc
loopne
mov
js
cmp
in
add
push
add
idivb
ds
sub
cwtl
pushf
push
and
inc
add
scas
push
xor
js
das
insl
pop
lods
inc
push
xor
push
repz
dec
repz
into
ds
pop
xor
outsl
dec
je
xlat
test
roll
mov
nop
mov
jnp
mov
cmc
ja
movsb
cltd
add
push
push
dec
pusha
ja
cli
ss
dec
rcrl
std
jns
lret
add
push
cmpsb
pop
addr16
arpl
jmp
jl
mov
lret
dec
rolb
psubb
ljmp
and
ss
push
sub
call
push
frstor
mov
pop
das
in
insl
push
out
jl
dec
cltd
push
xor
sub
lock
fiadds
push
outsl
cwtl
mov
sub
mov
outsb
jecxz
leave
lahf
cld
mov
in
and
shll
adc
sub
cmp
int3
fsub
dec
dec
sub
add
out
mov
daa
add
push
es
jmp
shll
mov
pop
mov
sub
test
in
movsb
outsb
into
ret
cwtl
addr16
xor
adc
popf
daa
shl
pop
test
sub
xchg
inc
mov
filds
nop/reserved
push
sti
gs
jo,pn
and
and
pop
scas
idivl
mov
insb
in
sub
out
ja
mov
inc
fnstsw
sub
clc
jecxz
push
jbe
ret
xchg
xor
fwait
mov
cmp
stos
loop
xor
mov
insb
arpl
clc
or
jmp
jecxz
push
repnz
jmp
loop
push
dec
xchg
mov
ss
ljmp
fcomp
pop
cmp
push
adc
js
int3
arpl
push
shll
mov
xlat
add
xchg
sti
cmp
ss
sub
dec
jo
das
pop
ja
xchg
outsl
cmpsl
lods
inc
mov
bound
insb
mov
mov
mov
cmp
fisubrl
inc
and
and
or
adc
mov
adc
inc
add
sbb
arpl
shl
stos
je
xchg
fbld
hlt
fldenv
lock
in
stos
inc
mov
rorb
sbb
popl
ret
pop
dec
stos
push
lods
mov
inc
mov
out
push
lcall
outsl
xchg
dec
popf
pop
test
pop
test
out
xchg
push
in
jg
outsl
adc
mov
dec
dec
aad
in
jg
xor
bswap
enter
mov
push
pop
push
negl
mov
pop
pop
sbb
iret
ror
mov
cmp
mov
or
movsl
aam
mov
mov
mull
mov
test
pop
decl
call
mov
fisubrl
mov
inc
jge
nop
aas
push
scas
out
loopne
dec
xor
mov
adc
cmp
mov
out
rcrb
in
stos
sbb
mov
sbb
push
fists
mov
xor
sbb
cmp
jp
xchg
xchg
imul
rol
bound
mov
inc
pop
dec
lahf
pop
xchg
push
out
pop
mov
sbb
mov
shlb
sbbb
outsb
push
lock
gs
lret
and
in
int
popa
pop
lds
sub
rcl
repz
mov
subb
es
xchg
pop
in
and
sub
cmp
xorl
mov
push
mov
push
mov
mov
les
jo
sbb
and
arpl
pop
lahf
push
jl
xchg
out
sbb
out
ss
jae
inc
xor
call
push
jmp
cmc
xchg
and
dec
das
cmp
dec
fs
mov
and
mov
push
fnsave
pop
sub
or
push
outsb
pop
and
add
in
lret
in
test
jl
push
sub
sub
mov
je
mov
cs
mov
adc
in
in
push
pop
adc
jecxz
rcll
and
nop
insb
jge
aad
or
inc
inc
dec
subl
pusha
enter
iret
scas
cltd
pop
mov
divl
test
stc
idiv
push
fwait
inc
pushf
lret
mov
test
in
andb
push
into
jecxz
cltd
iret
enter
sub
aaa
adc
aaa
inc
push
cs
fs
nop
hlt
dec
mov
mov
sahf
adc
pop
arpl
add
jle
jae
repnz
loope
arpl
cld
add
mov
add
in
fdivrl
mov
mov
mov
rcll
cmp
lods
movsl
loop
mov
mov
dec
subb
lea
push
lds
mov
or
mov
cmp
pop
dec
adc
mov
orb
mov
mov
and
cmp
dec
fdivrl
clc
inc
push
lea
stc
mov
dec
bswap
outsl
push
or
fnstcw
xchg
push
mov
adc
outsb
or
jmp
cmp
lods
mov
scas
and
jmp
rclb
pop
outsb
mov
xchg
or
jmp
mov
test
cmpsb
lds
in
popa
jne
sbb
sbb
outsl
in
icebp
xlat
cli
shlb
into
jno
mov
xchg
pusha
into
lea
jge
shll
push
mov
sbb
fidivrs
inc
cwtl
push
mov
mov
dec
xchg
enter
mov
cld
jno
mov
mov
ret
loope
ret
pushf
xor
rolb
shlb
sub
jp
cmpsb
push
xchg
or
push
stos
jmp
das
dec
arpl
jns
push
xchg
cmp
push
cltd
aam
jb
pmaxub
mov
addb
adc
mov
sub
pop
repnz
fadds
fnstsw
push
inc
ficoms
xchg
cmp
loop
push
push
xchg
dec
push
out
movsl
inc
aad
ss
lahf
pushf
dec
lret
out
jbe
lds
faddl
mov
cmp
mov
push
shlb
pushf
jle
lods
mov
into
cs
es
nop
adc
add
inc
pop
push
int3
add
jge
add
push
addr16
scas
push
pop
mov
mov
test
mov
mov
popf
ljmp
mov
or
stos
sub
repz
or
fucomp
cmovnp
inc
and
test
fbld
sub
pushf
mov
clc
or
arpl
jb
fdiv
test
mov
imul
pop
xchg
pop
xor
fisubs
push
sbb
xor
ret
mov
popf
cmp
push
rcl
jmp
or
and
cmpsl
aad
pop
lock
daa
pushf
int3
into
push
lds
arpl
mov
lret
stos
adc
les
outsl
mov
daa
int
pop
pxor
and
pop
mov
dec
xchg
add
inc
stc
dec
pop
or
xor
pop
cmp
jmp
jecxz
sub
push
and
pushf
sbb
inc
jae
repnz
cmp
out
clc
jmp
jne
cld
xor
sub
pop
loope
jge
push
pop
fbstp
sbb
out
cs
jo
jnp
mov
xchg
loopne
cmp
les
mov
fadds
leave
lods
sub
push
jl
int3
push
out
lock
sahf
ficoms
xbegin
mov
cwtl
outsb
mov
icebp
or
push
mov
into
out
sar
ret
add
and
mov
sbb
and
adc
and
push
test
lcall
mov
push
ds
xor
inc
rolb
sbbl
lods
mov
repz
repnz
ficoms
outsb
shrb
je
sub
sbb
faddl
fxch
mov
dec
lahf
jl
pop
xchg
mov
pop
mov
cltd
cwtl
mov
jg
shrl
lcall
js
inc
jns
jae
or
pop
and
es
sub
lea
xor
jmp
sbb
lods
ljmp
popf
lret
cmpsl
rcrl
cmp
rorb
shl
xchg
data16
mov
xchg
pop
xchg
test
repnz
movsl
dec
test
fnsave
mov
loopne
in
das
or
or
sub
jecxz
cli
cmp
out
mov
push
andl
adc
mov
add
les
xchg
out
lahf
mov
mov
shrb
cmpsb
or
sbbb
into
in
nop
dec
jbe
movsl
lds
pop
xor
push
pop
add
mov
ror
lcall
addb
dec
mov
fs
ss
insl
sbb
inc
xor
add
inc
sahf
xchg
test
and
aaa
or
push
and
sub
rcll
test
cmp
or
mov
mov
add
mov
mov
jne
stos
lods
dec
je
adc
mov
ret
iret
mov
cmpsl
out
push
fisubrl
jns
mov
dec
mov
push
xchg
push
mov
testb
push
adc
lret
insl
jmp
sbb
scas
rclb
mov
outsl
mov
test
xor
ljmp
repz
or
cmpsb
push
js
sbb
sub
sbbl
loop
sarb
sub
or
test
fldenv
pop
lahf
mov
repnz
paddusw
pop
test
or
into
out
jp
xor
sub
enter
outsb
dec
push
movsb
add
adc
jge
loope
cmp
rcr
stos
cmp
mov
sub
ds
xor
sbb
jle
jnp
testl
enter
out
adc
int
jae
or
cmp
fs
lret
aam
out
sub
mov
push
stos
add
popa
aas
divl
scas
or
das
xchg
push
sbb
pop
and
sub
push
rolb
fwait
and
movsb
push
ret
xchg
jae
mov
stos
fistpll
daa
loope
lea
in
xchg
mov
xchg
sbb
dec
shrb
mov
push
sbb
pop
rcr
les
push
jns
or
fdiv
push
cltd
xor
mov
inc
rorl
mov
aas
add
pop
mov
nop
in
xchg
fldt
mov
insb
sub
sub
mov
ret
and
loope
in
push
push
inc
push
xor
lret
cmp
fdivr
xor
mov
pop
jecxz
insl
daa
xchg
pop
nop
arpl
outsb
out
fsts
xchg
outsl
jge
cmp
xor
call
mov
mov
sarl
adc
popl
leave
push
bound
xor
mov
mov
jecxz
mov
jg
jl
and
push
lcall
pop
push
stc
ljmp
or
add
rcrl
push
fstps
test
jae
or
jp
test
push
cli
lds
mov
xor
lods
outsl
jnp
addb
leave
adc
rcll
or
in
ss
jmp
mov
or
add
inc
lret
and
or
leave
movsl
sahf
cmpsl
jne
cmp
sbb
int3
scas
in
push
imul
mov
xchg
lea
xchg
gs
arpl
addr16
lahf
outsl
xchg
jbe
xchg
pop
out
or
loopne
rcll
fs
mov
dec
sbb
xchg
jecxz
push
push
xor
out
and
cmp
cmp
lds
jns
and
adc
dec
and
lods
rcrb
pop
xor
ret
pop
ja
xorb
test
xchg
inc
scas
cwtl
mov
addr16
sbb
xor
das
addb
stos
ljmp
es
xchg
imul
xchg
in
sub
add
pop
jg
sarl
das
arpl
adcl
mov
lret
xchg
xor
sub
push
jnp
mov
popf
and
test
in
int
imul
sar
jmp
inc
cmc
imul
cltd
dec
repnz
pop
add
stos
test
mov
fld
ret
cmpsb
sbb
pop
mov
movsb
fstpl
lcall
adc
mov
fistpl
shlw
stc
into
lret
int3
stos
push
fmull
int
into
cmp
pop
cmp
push
adc
ret
stc
xor
push
adc
jg
or
pop
inc
jmp
loop
push
js
outsb
shlb
movd
std
stc
icebp
pop
pop
pop
and
leave
popf
loopne
icebp
leave
dec
test
mov
inc
mov
mov
jge
jbe
sbb
mov
mov
jge
mov
fwait
aad
push
push
jmp
mov
mov
jmp
add
ja
adc
mov
addr16
jmp
inc
inc
or
addr16
sub
jl
cmpb
stos
xor
in
cli
repz
fidivl
mov
and
push
pop
lods
push
adc
inc
inc
sub
mov
insb
xor
test
mov
add
push
pop
add
cld
orb
jno
and
loope
lret
mov
js
movl
jns
mov
jne
lahf
outsb
push
push
xor
outsb
pop
incb
sub
mov
notl
mov
sub
dec
dec
cmpsb
cltd
arpl
pop
xchg
adc
or
inc
cltd
mov
push
pop
sub
xchg
mov
fwait
mov
iret
push
rorb
pushf
mov
shrl
jmp
push
incb
addr16
jmp
hlt
push
jae
lret
mov
mov
aaa
xor
dec
cmp
inc
push
dec
inc
into
jge
fisttpl
dec
mov
out
sbb
or
icebp
sbb
outsb
test
sub
adc
mov
mov
mov
out
mov
pop
stos
fsubrp
adc
adc
xor
pop
sti
nop
xor
daa
bt
push
xchg
sub
mov
or
push
daa
xor
cmpsb
mov
out
mov
and
fildll
loope
dec
or
pop
ljmp
addr16
pop
test
cmp
fists
inc
test
aam
mov
push
repnz
dec
fnstsw
addb
movsb
loope
ja
pop
dec
xor
mov
leave
inc
movsb
in
jle
pop
jo
cmpsb
das
insl
fdiv
mov
and
gs
popa
mov
mov
mov
adc
aad
push
lock
adc
lds
push
sbb
and
add
xchg
push
sbb
je
dec
sbb
lahf
jo
mov
int
test
pop
aad
aaa
sahf
xchg
or
frstor
mov
pop
mov
aaa
mov
sub
das
lret
daa
iret
notb
and
mov
outsl
jnp
jmp
sbb
popf
scas
add
jns
pop
mov
fwait
cmp
sub
fbld
or
adc
add
mov
push
enter
and
je
inc
pop
mov
decb
lods
inc
pusha
nop
xchg
push
ficoms
mov
sti
stos
mov
or
adcb
push
and
push
xor
inc
dec
ficompl
push
jae
sbb
fildl
cld
popf
jg
scas
clc
mov
scas
xor
jecxz
sub
and
dec
mov
xor
sti
cltd
inc
cmp
and
mov
lahf
out
mov
jno
or
and
xchg
mulb
loope
loopne
push
lock
in
push
dec
lcall
das
fimuls
push
ss
rcrl
int3
add
icebp
xchg
imul
repz
mov
push
std
ja
lods
mov
stos
das
lret
pop
mov
mulb
and
xchg
sub
inc
out
dec
shll
rcll
push
mov
fwait
mov
adc
xchg
cmp
stos
pop
xlat
rep
xchg
push
divl
inc
xchg
aad
and
lahf
or
repnz
nop
jmp
daa
add
inc
fwait
loop
sahf
pop
insb
js
aam
xchg
cmpsb
jge
fsubrl
xchg
inc
or
ds
jno
add
inc
xor
mov
jb
and
sahf
sbb
dec
add
mov
insl
add
imul
or
lock
push
imul
add
nop
mov
adc
push
arpl
lcall
add
je
jae
ljmp
add
fwait
shlb
xchg
mov
mov
movsb
cmp
jmp
sbb
xor
lahf
jg
push
cltd
fidivl
mov
cmp
pushf
arpl
sbb
data16
loopne
ss
jne
cli
push
movsl
rorb
pop
bndstx
add
mov
xchg
jmp
popf
in
dec
add
movsb
or
into
pusha
pand
xor
add
dec
jno
rolb
outsl
leave
mov
jnp
rolb
pop
sbb
push
xchg
jnp
xchg
jmp
clts
fcomps
iret
ror
and
xor
out
jmp
xor
lods
nop
dec
and
addb
jmp
ret
push
jnp
leave
or
cmp
push
dec
pop
mov
in
cmc
push
aas
maxps
jns
rorl
push
inc
xorl
mov
and
les
ret
call
mov
sub
push
jnp
xor
mov
pop
adc
shlb
bound
in
imul
mov
cmp
rcrb
mov
movsl
jne
pop
push
jge
sub
or
jg
sarb
in
lds
cmc
fcompl
shll
adc
es
jmp
lds
push
lcall
mov
insb
fcomip
mov
or
fisttpll
test
imul
mov
add
xor
popa
jo
pushf
xlat
ss
loop
push
ficompl
cmpsb
aaa
or
pop
test
fwait
add
dec
and
imul
mov
xor
sahf
and
test
jle
outsb
mov
add
inc
mov
cmp
ret
sub
daa
dec
or
pop
and
jnp
pop
sub
fists
hlt
lods
addr16
jno
mov
int
lods
sub
jge
fistpl
sbb
lock
push
pop
arpl
jae
out
mov
mov
jp
insb
push
add
test
and
jle
int
dec
pop
fcomps
call
pop
pop
pop
adc
cmpsl
stc
int
cmp
sbb
stos
mov
or
or
add
add
and
cmp
call
mov
mov
mov
xchg
repz
xchg
dec
test
mov
mov
xor
sub
outsl
popf
js
jg
jb
leave
cmp
push
dec
pop
mov
aaa
fcoml
mov
out
adc
mov
xor
pushf
movl
loop
cmp
ffree
repz
add
xchg
rcrb
outsb
jle
std
in
das
and
xchg
and
cmc
inc
xchg
mov
add
lods
jo
shrl
dec
or
sub
push
or
xorl
pop
inc
pop
jle
cmpsb
js
lods
sbb
ret
hlt
icebp
xchg
adcb
mov
es
push
les
in
mov
sbb
lret
or
lock
inc
pop
adc
dec
adc
inc
popa
call
mov
int
lcall
lcall
or
outsl
inc
push
dec
push
or
lds
add
not
xchg
mov
ss
sbb
ret
std
jno
adc
push
jecxz
or
dec
call
jns
int3
shl
das
xchg
ficompl
rcrl
sub
xchg
jns
sub
pushf
shrb
shrl
fidivl
jecxz
jge
xchg
ss
aaa
addr16
adc
sti
push
mov
add
and
popa
call
nop
dec
fwait
mov
fs
sub
inc
jp
dec
jle
xchg
daa
add
inc
out
mov
cltd
jnp
dec
insb
inc
jnp
and
push
insb
pop
les
lahf
add
jg
inc
jge
lcall
loope
test
enter
jo
xchg
adc
inc
ss
add
test
adc
shrl
into
data16
jo
cmp
jnp
ljmp
imul
sbb
sub
insl
test
pop
sub
xchg
ret
adc
bound
cmc
mov
and
mov
out
cmp
mov
mov
cmpsl
mov
daa
or
xor
xor
and
popa
lret
cs
rcl
ret
xor
dec
adc
aaa
pop
mov
push
scas
add
lds
mov
int
mov
push
pop
cmpsl
out
sub
push
dec
int3
sbb
test
popf
adc
or
mov
pop
jl
movsb
dec
shlb
dec
rcl
and
mov
rolb
and
jle
lods
shrl
jae
rclb
ds
fwait
cwtl
mov
and
mov
in
mov
cmp
xchg
mov
scas
push
mov
xor
in
test
or
std
std
jno
pusha
mov
imul
add
dec
push
dec
cmp
mov
mov
gs
pop
loope
lahf
dec
movsb
int3
sbb
cmpsb
push
mov
gs
adc
or
test
fs
test
sbb
add
shll
adc
aad
rcll
add
out
or
arpl
sub
push
sbb
sbb
pop
enter
add
pop
ret
mov
pop
mov
jbe
push
test
add
and
add
sar
xchg
shrb
mov
and
imul
sub
mov
add
add
pop
pop
jns
mov
mov
stc
inc
add
or
sub
mov
sub
in
sub
mov
mov
mov
jmp
out
loope
jnp
mov
test
adc
notb
in
je
mov
mov
shl
mov
scas
mov
aaa
xor
jecxz
shll
xor
xchg
mov
push
sub
arpl
mov
inc
lret
jbe
pusha
cmpsl
imul
sbb
push
dec
sahf
jl
gs
mov
mov
pop
pop
sbb
es
icebp
push
push
or
sub
push
mov
cmpsb
addl
loopne
mov
repz
push
mov
or
movsl
pop
mov
fadds
xchg
movsl
mov
push
call
inc
xchg
sub
push
adc
add
and
aam
add
xor
leave
jo
sub
dec
mov
jno
xor
call
and
dec
mov
and
or
stc
sarl
mov
push
arpl
pop
sbb
repnz
ret
adc
into
fcmovnb
dec
in
add
push
and
rorl
mov
pop
imul
lds
xor
adc
mov
cltd
push
dec
xor
insl
cmp
fistpl
dec
adc
mov
dec
xlat
pop
sbb
mov
pop
or
stos
mov
ret
les
cld
or
aas
lcall
or
lea
pop
inc
stc
mov
inc
lret
mov
jmp
aam
cmp
or
mov
inc
and
data16
subl
dec
xchg
fidivrl
stc
adc
add
inc
sbb
push
mov
add
dec
mov
cmc
mov
sbb
jl
test
fcmovnbe
push
testb
in
and
pop
and
insb
idivl
int
adc
or
push
add
pusha
cmp
sbb
iret
ficoms
mov
or
push
cmpl
ljmp
lods
lds
movsb
sahf
cmp
xchg
add
lds
jae
sub
lock
jl
insb
mov
test
rcl
jmp
and
cmp
cmpsl
push
mov
cmp
jge
sub
fcompl
insl
mov
adc
repnz
lcall
movsb
fildl
xchg
orb
outsb
mov
xchg
testb
lret
lcall
sti
dec
movsl
loop
mov
jmp
rclb
rorb
hlt
mov
loope
mov
push
leave
and
inc
dec
les
cmp
push
xorb
cwtl
or
sbb
or
jge
push
js
cwtl
fldl
push
mov
xchg
cmp
ljmp
inc
call
in
jo
xor
fs
xor
sbb
push
sahf
loope
xchg
hlt
xor
cmc
imul
lods
mov
imul
ss
pop
stc
add
out
jbe
mov
rorb
inc
sahf
adc
mov
nop
aaa
out
js
scas
and
pop
mov
insb
xor
or
adc
decl
insl
add
jge
int
xchg
int
cmpsb
icebp
fldcw
int3
inc
jb
mov
push
lret
out
ja
stos
gs
sarl
popa
add
hlt
aad
push
mov
or
push
mov
dec
xor
mov
repnz
mov
mov
dec
push
fidivrs
pop
add
inc
insl
fstl
xor
out
sarl
jne
loop
aas
sbb
push
or
jb
mov
imul
add
inc
sub
scas
xchg
and
in
fstpt
sysret
stos
and
mov
add
push
mov
xor
jl
scas
iret
jae
mov
mov
pop
lock
adc
mov
sub
cwtl
or
pop
lods
jp
call
push
sbb
sub
nop
popa
ja
in
es
sti
pop
jl
stos
push
push
addb
xor
shl
mov
test
sub
and
or
pop
add
shr
bound
pop
xor
test
sub
cmpsl
xor
clc
in
jge
mov
repnz
mov
mov
xchg
aas
insb
mov
nop
inc
mov
dec
mov
jmp
and
in
mov
inc
pop
fcmovu
or
xchg
add
subl
out
mov
mov
add
mov
xorb
arpl
or
xchg
adc
jns
test
lds
sub
movsl
in
outsb
cltd
mov
test
sub
pop
mov
mov
lret
mov
cmp
data16
jae
js
jmp
enter
lock
das
jbe
testl
dec
test
shrl
adc
push
cwtl
adc
dec
rcrl
add
add
fwait
xchg
sub
mov
jns
ret
push
and
jae
adc
lret
jecxz
sbb
les
or
test
mov
ljmp
fs
movsl
mov
inc
pop
scas
mov
sar
loop
xor
pop
addr16
mov
fidivl
roll
jne
pop
in
mov
mov
sub
jbe
mov
adc
push
dec
fs
in
test
jle
iret
pop
xchg
jno
inc
xchg
nop
xchg
dec
decl
jmp
fistpl
xlat
es
pop
mov
icebp
popa
jge
cmp
dec
subb
sbb
sub
popa
push
out
inc
rcr
ret
fistpll
cltd
push
and
or
and
lds
sub
or
push
cltd
roll
es
mov
jne
repnz
lods
or
push
mov
nop
cmp
subl
popf
cwtl
mov
inc
ss
repnz
ljmp
bound
shrb
sub
jae
inc
xchg
repnz
pop
cwtl
aad
imul
add
jb
jmp
push
and
nop
sub
xor
ss
andb
hlt
lahf
xchg
leave
lods
inc
leave
je
pop
mov
add
test
cmc
cmpsl
sub
mov
dec
sti
loopne
pusha
out
xor
dec
loop
data16
addl
push
xor
data16
pop
sbb
xchg
ror
out
clc
jnp
mov
push
imul
or
sbb
in
lea
rcll
mov
xchg
lock
aam
out
jmp
andl
push
inc
aas
inc
outsl
sahf
ret
sbb
pop
movsl
xchg
out
adcb
testl
sub
push
xchg
shl
jp
jne
add
mov
aaa
xor
pop
pop
xchg
add
lcall
add
push
jno
adc
add
inc
out
gs
cwtl
pop
inc
cmp
pop
aam
loope
mov
lock
sbb
dec
pop
arpl
cld
mov
mov
dec
insb
daa
mov
xor
jmp
les
push
loop
adc
inc
test
lahf
xor
jne
sbb
rorl
iret
mov
mov
repz
test
sbb
shrl
jmp
lahf
pop
or
jno
add
xchg
js
xor
xor
cmp
and
sub
cmpsl
push
mov
cld
mul
fs
sub
das
test
icebp
mov
add
mov
sub
fdivrp
test
push
divl
cmpsb
pop
jle
andb
mov
and
ljmp
mov
shlb
mov
mov
adc
int3
subb
stc
stos
pop
rcll
sbb
lahf
lcall
mov
out
out
push
imul
pop
ja
mov
add
push
nop
mov
mov
add
lcall
dec
jecxz
add
cmp
pop
test
xor
loopne
ror
cmp
jg
in
xor
add
dec
mov
fmulp
pop
inc
push
test
mov
js
in
dec
inc
fcoms
es
pop
movsb
pcmpeqb
shll
bound
mov
xchg
jbe
mov
ljmp
add
je
scas
xor
out
and
mov
jns
cmp
popf
dec
rcrl
mov
test
test
pop
iret
and
loopne
fcom
or
push
sbb
mov
sub
adcb
push
mov
push
xor
aad
repz
and
mov
xor
jns
adc
pop
cmp
icebp
mov
test
and
shlb
and
jmp
rorl
xor
iret
sbb
out
testb
dec
arpl
push
hlt
clc
imul
jns
cmc
pop
mov
mov
lahf
lcall
push
mov
jmp
leave
mov
std
testb
lds
pop
push
inc
xor
pop
jle
ds
mov
out
lods
lods
test
data16
lods
mov
aad
pusha
hlt
sbb
aam
mov
xor
ret
test
test
test
je
pop
inc
in
pop
mov
xor
mov
in
loop
addr16
lret
rcll
jno
mov
add
sar
inc
mov
out
roll
jnp
inc
int
sbb
scas
or
sbb
cli
orb
imul
pop
sub
stos
push
add
cwtl
addb
addr16
mov
push
xlat
lods
out
aad
ss
sbb
fisubrl
addr16
sub
and
add
ror
push
inc
and
shlb
shl
or
ljmp
xchg
add
fdivrs
roll
pop
shrl
insl
out
inc
sti
ss
cmp
jo
std
inc
xchg
push
pop
fcompl
jg
sbb
push
fyl2xp1
pop
sbb
lahf
mov
pop
ret
outsl
addr16
mov
es
sbb
idivl
sub
dec
pusha
cwtl
test
pop
jno
lcall
ja
mov
out
enter
pop
mov
adc
pop
int
xlat
dec
mov
add
aam
rcll
mov
icebp
shl
sub
mov
test
pushf
mov
add
pop
mov
jb
mov
push
fsub
push
mov
sub
mov
or
decl
out
in
sub
sarl
lcall
adc
sbb
fldl
sbb
jb
test
andb
pop
iret
push
test
fwait
or
jge
mov
xlat
movsl
scas
lea
mov
sub
sub
imul
dec
and
mov
push
inc
mov
cmpsl
notb
aad
mov
rolb
lcall
test
add
mov
push
fisttpl
mov
shll
adc
int
push
sti
pop
movsl
adc
rcrb
add
pusha
pushf
mov
shl
push
pop
push
in
jecxz
fcomps
in
ds
das
cwtl
aam
mov
fidivrs
ja
jb
lock
sbb
cmpsl
movswl
ljmp
gs
sarb
jbe
and
stos
xor
pop
jle
pushf
dec
fldl
push
cs
in
xchg
mov
ja
ficoms
or
or
jecxz
xchg
jp
dec
dec
pop
aam
cmp
inc
jg
pushf
sbb
filds
mov
xchg
loop
mov
mov
test
fs
xchg
adc
mov
cmp
push
dec
ss
dec
and
push
lods
cmp
xor
xor
repz
adc
jae
daa
ret
testl
sbb
inc
movb
cmpsb
pop
mov
daa
stc
pusha
inc
or
jmp
sbb
pop
inc
dec
sbb
xchg
fsubr
xor
mov
xor
push
adc
sti
mov
pop
push
ret
add
call
mov
mov
dec
cmp
pop
imul
int
dec
lcall
das
sarb
mov
jae
loope
xor
nop
and
mov
out
sub
enter
pop
sbb
ss
xchg
cmp
xchg
mov
scas
xchg
dec
insb
cmc
and
in
jle
lret
int3
jnp
js
xchg
mov
inc
push
add
jns
adc
mov
mov
stos
and
push
xor
loopne
sub
stc
push
out
adc
repnz
xor
sub
inc
aam
xor
mov
into
mov
xor
mov
aaa
dec
mov
outsb
sub
enter
popf
xchg
or
mov
pop
xchg
lea
sbb
imul
mov
sbb
dec
daa
add
leave
cmpsb
shlb
popa
das
lds
rclb
rcr
pop
dec
leave
add
pop
sub
push
add
lahf
mov
mov
adc
xchg
push
arpl
mov
jecxz
cwtl
cltd
or
push
and
cs
mov
ret
push
iret
jecxz
bound
lea
mov
jae
mov
and
ljmp
fnstcw
inc
out
test
xchg
mov
cmp
inc
mov
pop
and
xlat
pushf
loopne
inc
sub
mov
mov
lcall
ret
jmp
scas
pop
sbb
imul
push
pop
cmpl
sbb
out
xchg
inc
fistpll
inc
adc
xchg
pop
mov
xor
dec
xchg
cs
rorb
sub
js
jle
sahf
add
mov
mov
dec
aaa
aam
insl
jle
xor
mov
imul
fisubrs
rorb
jo
xor
jmp
repnz
imul
cmpl
dec
push
pusha
cmp
xor
cmp
testl
jne
or
or
call
add
std
daa
cld
outsb
mov
pop
ds
mov
iret
test
ffree
call
mov
add
mov
jae
rcll
sbb
stos
aas
pushf
cltd
cmpsl
cmp
subl
mov
stc
test
xor
imul
or
and
adc
rcrb
loop
push
mov
mov
adc
pop
adc
fildl
add
inc
adc
adc
insl
pop
fs
xor
les
adc
jbe
shl
outsl
sbbb
mov
movsl
ja
out
daa
mov
ret
pop
outsb
mov
andl
cmp
pop
sahf
inc
ljmp
out
pop
xchg
je
fcmovnb
into
stos
cmp
or
dec
sbb
cmpsl
pop
std
jb
dec
les
stos
cs
mov
mov
sub
adc
xor
xchg
inc
in
pop
lock
push
jae
stc
sbb
sti
pop
adc
test
and
out
clc
scas
shlb
leave
mov
test
xchg
xchg
dec
ljmp
xor
and
mov
in
in
test
sbb
lcall
cmp
test
and
repz
sbb
add
rorb
loope
movsl
xchg
data16
mov
push
xchg
scas
push
cmp
jb
inc
imul
icebp
pop
dec
out
mov
fidivl
mov
addb
mov
dec
cmp
movsl
iret
pop
out
adc
sub
xor
cmp
aas
scas
incb
mov
jo
mov
sub
lock
loope
test
in
push
test
inc
and
lods
add
dec
push
aas
inc
add
and
rclb
xchg
or
push
ds
mov
pusha
mov
pusha
out
dec
sbb
test
push
pop
sub
scas
stc
popa
and
outsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addr16
add
or
pop
sarb
mov
jg
js
jno
push
xlat
inc
jle
insl
sbb
icebp
mov
pop
add
jnp
lods
call
out
lret
rcll
inc
pop
jl
jnp
leave
in
sub
cwtl
lods
bound
jecxz
and
xchg
dec
cmp
push
mov
in
mov
mov
cmp
inc
sub
mov
lea
mov
aad
mov
rcll
add
outsl
jge
test
arpl
loopne
out
jno
push
and
stc
pushf
lods
daa
orl
adc
cmp
or
fsubs
fadds
lock
in
fildll
pushl
clc
insb
xor
mov
aas
outsb
xchg
or
mov
fisubrl
icebp
scas
mov
cwtl
xor
mulb
sub
sahf
cmpsb
mov
push
fdivrl
and
push
xchg
pop
xchg
leave
adc
mov
pop
or
push
pop
ljmp
insb
cmpsb
dec
ss
sub
fsubl
mov
dec
lcall
das
dec
movl
inc
lret
cltd
xor
arpl
jmp
jmp
dec
cltd
pusha
shr
jg
jl
cmc
adc
push
out
cltd
mov
imul
jle
mov
cltd
cmc
or
out
inc
xchg
or
pop
mov
add
adc
leave
decl
aam
lods
out
xor
mov
sub
in
xchg
jb
inc
cmp
cmpsb
push
dec
xchg
xchg
jp
xlat
ss
adc
add
pop
add
push
enter
pusha
mov
xchg
orb
imul
jl
push
stc
xor
lds
fxch
fistpl
xor
push
andb
xchg
or
adc
nop
call
mov
aad
jp
outsb
xchg
push
cmpsl
stos
add
inc
scas
add
mov
daa
jle
pop
or
sahf
inc
sub
xchg
jns
adc
iret
or
push
popf
cmp
pop
pushf
pop
lahf
jno
add
scas
cwtl
rcrb
notb
imul
pop
dec
leave
cmpsb
stos
mov
cld
mov
out
pop
xor
lods
in
dec
imul
pushf
imul
mov
aam
adc
mov
mov
call
stos
call
xchg
sbb
push
push
pop
or
push
mov
sbb
push
les
adc
js
xchg
jne
xorb
jle
mov
xchg
imul
mov
repz
pop
mov
ja
ljmp
or
and
push
popa
pop
mov
fists
xchg
pop
shll
lcall
pop
and
lea
int
mov
dec
pop
lea
push
push
test
mov
mulb
into
mov
or
sub
xchg
push
rcll
jns
sbb
enter
mov
repz
lock
xor
mov
cmc
xor
mov
dec
int3
dec
dec
movsb
inc
je
dec
lods
mov
mov
lret
add
xor
mov
shll
cs
imul
dec
pop
dec
ss
jo
and
sahf
adc
sbb
xor
shr
pop
push
in
leave
jp
outsb
hlt
and
xchg
xor
lods
xor
lock
sbb
mov
ficoml
rcl
cwtd
sar
mov
jno
or
add
test
pushf
aam
pop
data16
jo
jns
repnz
adc
sbb
aad
stc
sti
incb
cmp
mov
xor
out
leave
push
push
lahf
out
insl
mov
fmuls
dec
sbb
xor
fcmovu
out
and
fstp
xchg
stc
xlat
outsl
outsl
mov
daa
and
sti
sbb
cmp
dec
or
out
jp
in
jmp
push
ja
cmp
jle
cmp
cmp
pop
ret
andl
inc
mov
mov
shll
cmp
mov
push
outsl
fcomps
jo
ljmp
fwait
sbb
cli
fwait
or
hlt
pop
pop
test
pop
pop
fucomip
inc
push
das
or
sub
sbb
cmp
in
pop
fsubr
lods
mov
fcoml
or
cmp
sub
mov
scas
mov
pop
jo
lret
push
pop
inc
xor
dec
inc
pop
cmp
dec
xchg
mov
imul
in
inc
movsl
or
subl
movsb
push
inc
mov
cmp
cmpsb
xchg
pop
sahf
arpl
outsb
cmc
repnz
lods
xor
and
or
lock
dec
mov
jmp
xor
mov
push
imul
repnz
cmp
aad
repnz
dec
jl
and
imul
stc
pop
sahf
dec
mov
jg
jbe
cmp
popf
dec
xchg
data16
es
stc
popf
cltd
cmp
les
pop
cmp
xchg
xchg
int3
sahf
repz
flds
jl
lock
cmc
pop
fsubr
pusha
dec
mov
mov
sub
add
dec
inc
fs
fwait
outsb
lcall
sbb
jns
jbe
out
iret
xchg
sbb
cli
sbb
cmc
lock
imul
out
inc
in
shlb
dec
lods
jb
pop
xor
xchg
scas
xchg
cld
jb
mov
in
aam
sub
xor
dec
cs
inc
daa
fucompp
lret
sbb
aaa
test
and
mov
js
push
mov
shlb
fbstp
mov
inc
shrl
jno
icebp
push
sarl
lret
stos
dec
ficomps
inc
push
test
int
mov
dec
push
call
push
cmp
ljmp
incl
push
into
pushl
xchg
rol
mov
stos
hlt
sbbb
mov
dec
inc
sbb
icebp
daa
jmp
mov
insb
cmp
sbb
movsb
lret
stc
clc
sub
mov
mov
mov
adc
push
addb
and
jb
mov
adc
stos
adc
lods
mov
lods
and
out
jecxz
or
insl
lods
in
lods
shr
arpl
in
mov
fisttpl
jmp
mov
pop
flds
sub
inc
mov
xchg
xchg
or
pushf
jns
dec
mov
test
adc
out
sbb
pop
je
les
cwtl
mov
aaa
jo
add
fbstp
repz
fidivrs
fcomp
fnstenv
sbb
popa
popf
cmp
lods
imul
lea
dec
or
clc
fstp
mov
mov
and
aad
ljmp
push
sbb
sti
cmp
pop
dec
mov
loope
xchg
xchg
inc
out
mov
imul
ss
jno
js
pop
or
mov
jbe
jp
stos
fsincos
push
jnp
jecxz
pop
sub
mov
js
andb
sub
inc
iret
ja,pn
mov
dec
or
cmpsw
push
mov
cmpsl
xlat
and
int
enter
insl
cli
insl
push
inc
jl
jae
mov
pop
jo
lods
cmp
movsb
mov
mov
gs
or
repz
gs
or
test
fstpt
lods
cmpsb
out
fs
loopne
adcl
repnz
xchg
pop
inc
mov
cli
out
pop
mov
cmp
adc
mov
pop
les
divl
je
lods
rolb
dec
xchg
in
xchg
adc
inc
mov
or
fs
mov
cmp
inc
jnp
and
jp
dec
jo
dec
imul
and
push
hlt
mov
dec
dec
bound
inc
jbe
movsl
jl
stc
jo
fs
sbb
fisttps
popa
xchg
rol
aaa
imulb
ljmp
and
xchg
cwtl
pop
mov
lret
in
ja
lahf
in
test
push
dec
dec
psubb
cmp
lret
call
testb
xorb
jle
push
scas
shl
imul
arpl
sub
mov
pusha
add
out
movsl
sarl
push
dec
enter
push
cwtl
test
cmp
jb
push
in
movsb
ljmp
push
xchg
add
clc
mov
push
xchg
cmpsb
fnstenv
sub
in
sub
and
pop
and
or
sahf
jb
loop
das
out
sbb
mov
mov
add
mov
cmp
pop
pop
movsb
cs
add
push
fisubrl
daa
test
add
cmc
adc
cmp
push
jns
adc
pop
lcall
sti
and
push
mov
lcall
push
mov
in
sbb
inc
cmc
dec
sti
xchg
notl
int3
mov
sarl
jae
rcr
shl
sub
adc
and
add
stos
mov
in
rcrb
popf
out
cld
mov
nop
popa
dec
jae
fwait
test
stos
sub
cmp
xor
cmp
sahf
cmp
insl
in
jl
inc
cltd
mov
jne
xchg
pop
dec
mov
xor
add
in
xor
cs
push
add
pop
lahf
data16
xchg
ret
vmovsd
adc
or
add
sub
mov
dec
inc
aaa
pushf
sub
pavgw
push
mov
ds
outsb
push
add
dec
dec
stos
mov
in
xchg
jp
add
das
jo
in
mov
test
sub
in
add
jns
mov
cmp
mov
add
xchg
sbb
cld
loopne
in
stc
sti
jbe
dec
enter
pop
stc
data16
hlt
inc
mov
stos
push
xchg
cmpsw
lea
jp
stos
addr16
add
or
mov
ret
addr16
imul
stc
cmp
into
cli
or
pop
std
fldenv
scas
inc
dec
into
mov
jge
testl
lcall
jmp
dec
cli
adc
push
sbb
std
sahf
leave
movsl
lock
fdivrs
stc
lret
xlat
lahf
and
sbb
push
mov
out
cld
inc
out
pop
loope
xchg
mov
pop
pop
sbb
movsl
sbb
decl
test
jo
std
cmp
jbe
push
int3
mov
dec
data16
arpl
ret
into
je
leave
mov
xchg
insl
mov
iret
push
testl
jge
jg
leave
fistpll
push
call
mov
testb
pop
dec
adc
arpl
cld
test
mov
cmp
push
xor
jno
sbb
insl
add
xlat
dec
push
push
and
or
into
sub
xlat
out
add
jne
xchg
add
pop
dec
mov
std
cmp
mov
enter
test
push
in
jg
mov
aad
inc
cmp
nop
ss
sbb
or
dec
ljmp
aaa
ficoml
dec
push
jo
push
xor
sub
scas
sub
roll
push
ds
xchg
add
add
xor
fstps
mov
stos
dec
jge
ja
insl
jle
pop
int
xchg
dec
fsubrl
jns
add
call
inc
push
cmp
outsl
push
jo
sbb
pop
lahf
and
ja
sbb
sti
push
mov
lods
pop
icebp
pop
mov
xor
cmp
stos
clc
lods
pop
and
gs
imul
mov
rcll
loop,pt
fwait
call
bound
call
xlat
pop
dec
sub
and
add
pop
movsl
xor
pop
mov
in
jmp
jg
xchg
bound
imul
xor
je
ret
xorb
call
int
add
xchg
inc
pop
repz
imul
sbb
xchg
loope
pop
scas
add
hlt
and
out
insl
sub
loope
ret
loop
call
leave
or
xchg
cmpl
psubd
mov
sbb
sub
in
and
xlat
mov
mov
icebp
stos
fistps
xor
cs
sub
pop
mov
xchg
xchg
in
movsb
rcll
std
push
fsts
nop
ret
es
pop
stos
cmp
adc
jl
lcall
repz
into
aaa
mov
and
xor
cmpsb
sub
test
imul
movq
sub
aad
into
addr16
adc
xchg
test
push
push
lcall
icebp
jae
cwtl
insl
negb
imul
and
inc
insl
dec
call
mov
push
jg
mov
xor
dec
in
jle
incl
push
sub
add
push
dec
mov
or
out
sbb
inc
gs
int3
dec
adcb
push
test
iret
cmp
inc
jb
mov
out
and
or
xchg
and
bswap
sahf
repz
mov
mov
push
fcompl
js
test
test
js
and
sbb
xchg
dec
pop
out
mov
or
repnz
inc
jb
rorb
les
in
imul
dec
pop
push
ret
jbe
lods
sbb
bnd
shll
aaa
xor
mov
inc
loope
roll
mov
cwtl
push
pop
xchg
sub
cmc
mov
or
mov
cmp
cs
jp
adc
sbb
popf
fldt
cmp
push
in
push
pushf
inc
ja
pop
xlat
gs
dec
mov
jb
push
leave
popf
je
notb
pushf
loopne
jge
dec
pop
int3
scas
jl
cs
pop
incb
les
shrb
and
loopne
push
push
dec
aaa
js
xor
jbe
mov
lds
lret
stc
mov
and
aas
loopne
xor
or
mov
jp
out
sbb
fldcw
insl
xor
pop
xchg
pop
jmp
cmp
into
fdivs
out
imul
dec
arpl
and
loopne
push
jnp
aas
fs
mov
jl
out
pop
fcoms
lret
xchg
xor
mov
xchg
adc
mov
or
mov
divl
mov
pushf
out
imul
or
jp
fdivrs
sub
fwait
pop
stos
lret
pop
cmp
jns
mov
scas
jp
sahf
hlt
out
mov
push
mov
out
mov
lret
es
cmp
dec
xlat
fcoml
add
mov
mov
mov
lds
mov
mov
call
aam
pop
xchg
mov
dec
push
jl
loope
dec
je
andb
sti
mov
mov
pop
mov
push
inc
pop
fwait
rep
out
inc
scas
lods
lea
ss
leave
push
adc
pop
filds
cmp
data16
fsts
movsb
scas
sahf
in
cmp
outsl
inc
jmp
nop
or
lret
sbb
push
insl
add
in
and
movsl
pop
mov
mov
ljmp
aam
in
hlt
mov
add
push
xor
xor
fldcw
popa
lret
or
and
push
pop
movsl
sbb
push
mov
and
das
fcoml
jbe
popa
shlb
mov
mov
nop
pop
cmp
mov
les
xor
imul
lods
rclb
inc
xchg
cld
add
inc
sub
mov
movsl
movsb
xor
push
ret
push
std
or
xchg
and
clc
xlat
jge
mov
stc
outsl
je
xchg
cltd
loopne
stc
mov
sub
clc
sub
cltd
stc
push
cmp
lahf
lock
int
inc
inc
sbbl
fcoml
jne
inc
mov
mov
xchg
pop
mov
shrb
sub
xor
and
movsb
mov
push
and
cmp
inc
add
and
pop
ja
aad
incb
mov
lods
cmp
shrb
test
iret
push
and
out
mov
sbb
dec
cmp
inc
push
xor
loopne
movsb
mov
mov
bound
pushf
sarb
sbb
stos
lock
lcall
lods
adc
dec
mov
fistps
cmp
aam
dec
sbb
sbb
rolb
test
inc
cmp
or
add
dec
hlt
cltd
or
sbb
dec
mov
ret
aad
popa
lds
mov
add
dec
mov
and
cmpsb
sub
sub
mov
lods
aaa
idivl
repz
push
scas
mov
cli
insb
xor
xor
jb
mov
imul
cmpsl
into
sub
mov
and
icebp
outsb
mov
bound
pop
push
insl
icebp
adc
int
jo
scas
in
sarb
push
shll
add
js
loopne
pop
push
int
xor
repnz
inc
rorl
leave
jp
ja
pop
cmp
test
dec
cs
pop
fdivrp
mov
pop
xchg
push
jle
ljmp
xchg
xchg
aas
mov
xchg
in
xchg
outsl
cmc
mov
mov
cli
movsl
lret
xchg
dec
mov
pusha
ss
movsb
adc
adc
and
mov
mov
mov
je
fisubrs
add
mov
lods
loope
inc
dec
repz
mov
pop
lods
sbb
cmp
pop
mov
movsb
mov
sub
ficoml
cwtl
pop
fs
jne
aam
out
lods
and
xchg
mov
pop
sub
mov
dec
out
inc
out
xchg
jecxz
mov
cmpb
dec
stos
inc
pusha
mov
add
add
popa
push
jbe
mov
loop
add
mov
cwtl
addr16
jno
das
insb
imul
adc
add
mov
icebp
in
stos
dec
mov
sub
int3
imul
cmp
mov
dec
and
dec
xchg
data16
fst
lahf
out
mov
shrl
add
mov
loope
push
add
push
adc
test
inc
xor
out
ljmp
lock
rclb
stc
std
outsl
fbld
fsubs
push
sub
mull
gs
out
fadds
jae
jnp
cmp
and
jne
cmp
shl
les
fcmovne
das
lret
jnp
dec
ja
mov
or
cmc
mov
sub
inc
fwait
shll
mov
das
push
dec
dec
aaa
adcl
dec
jecxz
mov
sub
adc
sub
pop
jg
pop
adc
or
pop
push
sbb
mov
in
xchg
adc
or
dec
mov
pop
lock
lret
xlat
mov
xchg
cmp
sub
and
arpl
fs
je
adcl
cmp
push
outsl
aad
cld
cmp
pop
test
push
imul
push
inc
add
mov
inc
xchg
mov
cmpsb
mov
pop
or
push
mov
loopne
loope
inc
cld
and
bound
mov
test
inc
int
xlat
dec
dec
sub
stos
lods
jo
xchg
xchg
dec
jmp
jl
lock
pop
sbb
mov
push
cld
mov
pusha
testl
jb
add
out
scas
add
cmc
add
pushf
aaa
inc
push
bound
sbb
stos
dec
and
mov
fistpll
inc
fmuls
inc
pop
loopne
mov
out
outsb
sub
ljmp
mov
shr
rcrb
cli
sbb
lcall
sbbb
addr16
sbb
daa
dec
inc
or
in
mov
pop
or
sbb
inc
test
inc
int3
cltd
test
mov
popa
and
movb
and
mov
inc
add
cmpsb
mov
sub
mov
shlb
ljmp
cmp
insl
lcall
stos
push
cld
stos
or
sarb
lcall
jg
addb
fsubs
cmp
fcoms
in
mov
dec
push
scas
sbb
add
pop
jle
int
mov
lea
cmp
dec
cld
push
lea
fs
push
xchg
add
sarb
jno
loope
mov
dec
pop
sti
shrb
das
jae
jl
stos
repnz
lretw
xor
mov
adc
int
cld
dec
inc
aas
loope
ret
and
lods
test
xchg
jae
xor
jle
mov
lret
jle
mov
scas
mov
in
pop
inc
cmpsl
jecxz
mov
mov
xlat
cmp
xor
adc
xchg
shrl
sbb
shrl
jno
lock
cmpsb
repz
sbb
stc
fsubrs
push
clc
lds
ret
cmp
pushf
push
mov
in
shrl
lahf
jnp
scas
lock
lcall
daa
xor
insb
fdivr
cltd
mov
sbb
ret
inc
mov
mov
fistl
mov
push
mov
sarl
xorl
sbb
fwait
in
mov
cltd
imul
shlb
mov
pop
sbb
stos
dec
pop
or
mov
icebp
icebp
outsl
mov
out
adc
mov
push
sahf
test
jb
pusha
clc
cmc
movsl
cwtl
sub
aaa
lahf
fisubl
jo
jae
insb
pop
lods
repnz
xchg
gs
push
mov
or
jbe
xchg
mov
in
sbbb
xchg
jmp
out
aas
pop
into
jo
das
scas
push
xchg
jg
addr16
add
and
xchg
or
test
inc
outsb
int3
jo
inc
nop
daa
in
mov
xor
cmp
jge
mov
mov
addr16
xchg
flds
mov
nop
je
sbb
sbb
mov
xor
xor
repz
dec
mov
std
in
push
xchg
aad
push
or
xor
insb
lahf
mov
jle
mov
push
xchg
int
xchg
lock
repnz
call
roll
pushf
add
fcmovnb
or
inc
bound
mov
ss
repnz
sub
xchg
and
xor
inc
pop
ljmp
icebp
out
inc
fdivl
shll
daa
pop
push
shll
in
clc
fsubrp
aam
test
pop
lret
sbb
cld
jno
inc
arpl
fsubs
lea
mov
jle
enter
mov
stc
dec
or
int3
mov
xor
imul
scas
popf
mov
or
outsl
push
push
sub
ret
mov
xchg
add
cli
xchg
dec
jo
dec
or
sbbb
mov
movsb
add
push
dec
or
scas
and
enter
mov
scas
lods
add
dec
aas
divb
add
ljmp
outsb
cmpsb
pop
ds
lea
add
aaa
test
dec
xor
inc
and
in
sub
and
mov
inc
clc
jl
sub
adc
add
jb
pushl
push
imul
lret
xor
fimull
pop
lcall
dec
clc
movsl
data16
rol
mov
std
fdivr
fs
mov
std
int3
test
loop
test
jne
repz
jmp
mov
rorl
outsb
lods
call
or
mov
mull
sbb
inc
rol
aas
test
sub
sub
testb
int
daa
fcmovne
inc
in
leave
dec
pop
pop
mov
dec
push
sbb
pop
cmpsb
xor
das
inc
xlat
aas
jbe
dec
jmp
jae
scas
inc
cmp
je
fwait
push
imul
adc
std
inc
sub
inc
sbb
fptan
aaa
ret
pop
push
mov
xor
enter
mov
shll
pop
shl
jmp
scas
add
jno
out
insl
aam
sub
outsl
gs
or
pop
ret
out
adc
inc
enter
clc
notl
sub
pop
cmpsb
insb
jge
jle
repnz
orb
in
or
pop
shld
pop
stos
loop
jmp
aaa
adc
cmp
sti
out
cmpsl
mulb
or
and
loope
dec
inc
sarl
inc
mov
or
cmp
in
pop
jmp
nop
adc
or
clc
cmpsl
xchg
dec
adc
popa
aaa
int
sbb
and
sub
or
inc
push
adc
fstl
pop
jno
ds
push
in
sub
jecxz
lods
test
or
data16
adc
sub
jnp
adc
mov
out
icebp
xchg
xlat
or
movsl
cld
in
xchg
lahf
loop
imul
mov
jnp
add
pop
adc
cltd
or
sub
les
jmp
les
lock
ja
fwait
call
ljmp
cs
adc
cld
rcrb
aam
iret
lods
outsl
test
mov
cmp
fcom
lret
jg
lods
push
xor
inc
pop
in
in
push
rcrl
decl
dec
sub
jl
and
outsb
scas
jns
adc
mov
sbb
cld
sub
add
xor
xchg
mov
jl
xor
leave
inc
dec
add
ds
fs
sarl
rcrl
ljmp
daa
mov
inc
add
jmp
nop
subl
orl
fisttps
inc
dec
cmp
stos
pushf
testb
xor
cwtl
flds
inc
clc
sub
adc
lret
cmp
mov
mov
push
ret
int3
mov
mov
sbb
repz
call
repnz
cwtl
add
inc
fwait
mov
popa
sub
push
pop
fnstcw
stos
loope
pusha
fdivp
mov
pop
pop
sbb
cmp
cs
icebp
aam
xchg
outsl
or
jg
neg
insb
cli
sahf
out
cmp
cmp
adc
lock
or
rolb
jns
pop
loop
into
mov
scas
out
or
sbb
jge
aam
fsubrs
loopne
out
mov
or
loopne
xchg
lret
push
cmp
xchg
imul
jmp
mov
push
repz
mov
jae
mov
lock
xchg
int3
inc
xor
divl
in
mov
inc
shl
pop
xor
fildll
in
pop
andb
out
out
stos
lea
pop
push
mov
add
lret
jmp
cmp
sub
idivl
cld
ja
fdivl
inc
push
sbb
mov
fs
sbbl
mov
sub
pop
dec
jl
push
jg
out
into
xchg
adc
jns
fisubs
xor
lods
add
pushf
sbb
ret
pop
movsl
push
outsb
mov
sbb
pushl
loope
test
out
sbb
jns
sub
mov
sbb
sub
push
fsub
or
aas
adc
aaa
pusha
adc
fsqrt
rcrl
and
inc
xor
sbb
sar
fwait
imul
aam
rcrl
rcrl
jg
repnz
cltd
lock
pushf
jne
mov
ss
in
cmp
cld
push
es
cld
fwait
test
xchg
incl
or
es
adc
movl
enter
and
push
ss
mov
aam
pop
inc
sbbl
pop
je
ja
test
testl
adc
popa
dec
mov
std
out
xchg
in
lahf
shlb
cmp
xchg
jle
or
add
jle
dec
cmp
in
cmp
push
ficompl
movsl
jg
mov
pusha
mov
outsl
sub
ja
insl
sarl
sbb
jecxz
pushw
subb
or
dec
ss
xchg
push
call
jp
or
jbe
rcr
lret
push
repnz
test
sbb
std
popa
popa
jge
mov
mov
movsl
ret
ret
xlat
lds
js
mov
push
movsl
shlb
das
jp
adc
ret
fwait
addr16
out
mov
popa
jne
dec
inc
daa
sbb
xchg
imul
mov
jmp
mov
push
adcb
pop
xor
mov
mov
nop
mov
sbb
pop
sbb
loop
sub
ss
jne
ds
dec
xchg
jl
pop
ds
lock
push
inc
add
mov
inc
cld
lock
cmp
xchg
aas
insb
adc
pop
pop
fwait
icebp
inc
jp
sbb
xlat
add
push
in
add
push
mov
mov
add
ss
repz
dec
xchg
xchg
mov
pop
lods
mov
or
sub
jg
sti
loop
adc
cld
sti
cmp
sbb
outsl
inc
jl
stos
push
stos
pop
fsubl
int3
inc
cmp
xchg
xor
xchg
xchg
jno
icebp
pop
and
shrl
fst
mov
mov
rcll
imul
push
dec
add
lret
push
sub
cld
bound
mov
mov
fwait
pop
cltd
inc
push
in
inc
shll
inc
sbbb
sbb
loope
insl
add
hlt
pop
mov
test
fiaddl
or
xchg
adc
cld
insb
bound
mov
in
and
outsb
jne
test
adc
xlat
lret
call
leave
mov
daa
push
xchg
mov
inc
mov
stc
imul
push
jns
pop
jg
fsubrl
out
int
xor
xor
cmp
in
or
popa
push
sbb
jmp
in
inc
jnp
mul
rorl
into
dec
stos
les
fisubrs
gs
inc
jno
imul
cmp
sbb
out
sub
ficomps
inc
movl
push
aam
lods
aas
jl
mov
lret
dec
sub
gs
scas
adc
fldl
call
pop
push
push
insb
lods
cs
jmp
hlt
addr16
icebp
jne
push
cmp
or
mov
lahf
jecxz
enter
iret
or
jae
jne
and
mov
cmpsl
shl
and
dec
sbb
lods
jg
and
sub
ret
inc
ljmp
pop
stos
imul
icebp
rep
jle
pop
cmpsl
jno
mov
xor
enter
test
sub
or
xchg
lcall
enter
cmp
or
cwtl
sbb
in
fisubl
aam
fcmovu
out
repnz
mov
jb
xchg
mov
mov
mov
jp
cmpsb
sub
sbb
push
decb
outsl
dec
sbb
idivl
pop
outsb
sbb
sahf
lock
fwait
xchg
notb
nop
neg
cmp
sub
cld
and
jge
mov
enter
mov
mov
inc
add
movb
mov
cmp
out
pop
xlat
clc
mov
roll
outsl
mov
and
cmp
orb
mov
mov
inc
insb
out
mov
add
sbb
sbb
inc
outsl
jbe
cmp
adcb
fcoml
add
mov
outsb
sbb
adcl
mov
sub
or
and
stc
rcrb
xor
cmp
mov
imull
push
mov
js
push
addr16
cmp
adc
cld
addr16
loop
xor
fcoml
test
sarb
xchg
dec
pop
and
ret
mov
dec
scas
mov
into
lods
mov
outsl
sbb
dec
jle
sbbl
pop
push
xor
pop
mov
icebp
xchg
stos
stos
rolb
adc
sarb
outsb
and
cwtl
xor
stc
xchg
repz
jl
nop
rolb
lcall
push
push
lock
and
call
popa
aaa
ror
fsubrs
add
xchg
dec
mov
sti
fwait
push
and
xchg
inc
jp
out
xchg
ds
and
fimuls
xor
das
popa
jle
dec
cmp
add
hlt
imul
push
sbb
insl
dec
add
repz
int3
in
cmpsl
decb
int
pusha
cs
xor
cmpsl
loopne
push
or
stos
mov
pop
mov
cmp
clc
aaa
jnp
push
fbld
call
shr
and
imul
out
and
mov
mov
xor
xlat
outsl
xor
add
jg
or
add
and
add
push
mov
and
lahf
mov
outsb
test
fcmovne
sbb
jnp
loop
sbb
jnp
mov
mov
adc
sbb
ret
adc
inc
hlt
dec
and
inc
out
and
into
pop
ja
pop
sti
inc
mov
adc
mov
add
outsb
xor
pop
mov
cmp
ds
cmp
pop
jle
insl
mov
jbe
sarb
fdivs
push
mov
push
sub
in
cmp
cvtps2pd
lahf
push
pop
out
sbb
gs
jnp
test
xor
xor
sbb
imul
shlb
movsb
mov
insb
arpl
push
xchg
push
pop
push
xchg
or
inc
push
lea
sbb
cmp
pop
cmp
dec
xor
jle
mov
cmpb
mov
inc
add
mov
xchg
adc
xchg
sub
jae
inc
jae
out
pop
fisttps
mov
cmp
dec
mov
imul
lock
addr16
fwait
cld
jle
outsb
inc
jnp
pop
aam
popa
mov
mov
insl
scas
jg
mov
push
fsts
xor
dec
mov
fucomi
clc
pop
out
xchg
push
addb
js
dec
dec
outsl
test
dec
pop
mov
dec
push
and
push
mov
aas
lods
sbb
lock
ss
add
mov
inc
int
out
ds
inc
sub
jo
cmc
xchg
test
fdivs
dec
lea
subl
mov
sti
mov
inc
jle
outsb
dec
in
jle
mov
mov
stc
adc
xchg
int3
jge
mov
inc
imul
cmp
dec
int
sub
xor
ljmp
adc
sbb
push
shl
fcomip
mov
in
in
movsl
fdivl
shl
call
pop
sbb
ja
dec
mov
clc
mov
jo
or
sbb
and
push
mov
mov
nop
push
bound
pop
dec
inc
sti
data16
popf
xorl
mov
leave
xor
popf
push
lret
and
xchg
mov
lds
pop
shrb
sahf
adc
arpl
mov
or
loop
int
push
popf
cmp
fs
sub
jp
aas
inc
jae
stos
push
ljmp
popa
xor
xchg
jmp
and
outsb
lret
push
leave
xchg
push
lock
fld
out
cwtl
pop
lods
enter
mov
jo
bound
pop
fs
rcrl
xor
popf
movsl
rorb
in
shll
push
mov
jp
int
cmp
inc
xchg
xchg
sbb
adc
jbe
push
xor
fsubs
sti
lahf
cmp
push
xchg
incl
scas
jmp
gs
jnp
pop
scas
sbb
xchg
dec
jmp
push
test
pop
inc
sbb
flds
pop
cmc
cmp
fisttpl
enter
inc
out
mov
fildll
jae
sub
cmpsb
inc
out
incl
cmp
add
push
fistl
mov
and
jnp
sbb
leave
int3
push
fwait
cmpsl
mov
in
and
xlat
nop
xchg
xlat
mov
mov
ret
in
loop
jne
dec
push
mov
fs
cmp
mov
mov
and
fldenv
or
dec
inc
push
ret
lds
popl
rorb
pushl
outsb
jnp
xor
adc
lcall
insl
into
lea
sbb
leave
push
jo
push
cmpsl
daa
iret
mov
enter
int3
mov
iret
pop
xchg
and
dec
icebp
xor
cli
dec
jne
in
adc
icebp
pop
mov
cmp
push
and
jmp
dec
call
pushf
add
pushf
jmp
dec
outsl
lahf
icebp
jnp
adc
in
loope
mov
inc
dec
imul
sub
add
ret
in
jne
in
das
inc
dec
jne
or
popa
lret
dec
mov
sub
rsqrtps
pop
fcmovbe
mov
sbb
test
jmp
adc
or
mov
test
sbb
into
or
xor
in
inc
cmp
into
jae
imul
aam
out
out
push
inc
lahf
mov
insb
test
cmc
inc
add
mov
mov
inc
inc
dec
fisubrs
cmp
cwtl
divl
pop
jne
lcall
ja
orps
xchg
cmp
jmp
mov
mov
aad
ror
cmp
and
sti
xlat
cld
pop
inc
and
and
and
sbb
pop
xchg
aas
jnp
add
jle
inc
fisttps
ljmp
cmp
es
cmp
sub
dec
out
in
sub
bound
mov
popa
jae
bnd
mov
jl
int3
mov
loope
or
ds
jp
ja
cmp
push
aad
aad
sbb
aaa
call
xor
neg
das
ljmp
mov
testl
inc
repz
xchg
fsubs
xor
sub
xchg
aaa
nop
sahf
ss
mov
jg
js
lock
jl
test
cwtl
ret
xor
mov
push
mov
and
repnz
dec
mov
or
sbb
inc
fsubrs
int3
mov
gs
in
leave
xor
mov
jge
cmpsl
add
outsl
jmp
and
xchg
cmp
movsb
hlt
and
sub
mov
inc
outsb
es
inc
and
and
or
add
mov
imul
inc
xchg
or
mov
and
ljmp
js
xor
add
in
push
sbb
pop
push
add
xchg
rcr
push
push
jns
add
mov
out
add
mov
mov
lods
shrl
sub
mov
es
xor
xchg
pushf
or
or
orb
pop
add
aaa
ds
test
adc
sbb
xor
inc
leave
pop
ds
lds
and
xchg
filds
sub
and
jno
out
push
stos
dec
scas
sub
pop
pushf
pop
jo
jno
and
icebp
push
ss
sub
test
popf
fdiv
aas
in
dec
das
mov
jb
ret
sub
mov
vaddsubpd
cmp
xor
ficoms
pop
xchg
int3
pop
adc
mov
xorb
fdivrs
lods
ljmp
daa
xchg
mov
js
mov
pop
xor
loopne
out
hlt
iret
jo
jae
lock
and
dec
js
movsb
fldl2e
jnp
or
push
pushf
fldcw
in
jle
xor
mov
in
inc
dec
mov
jno
xchg
mov
popf
inc
jle
ja
js
or
cmp
mov
into
cmc
fdivs
fistl
mov
and
mov
dec
pop
lods
ret
add
adc
cmp
xlat
lock
test
inc
lcall
mov
mov
clc
pop
mov
adc
pop
add
loop
mov
aas
out
fisttpll
dec
repnz
leave
jmp
and
or
mov
int3
daa
mov
test
cmp
rol
mov
cmp
mov
jnp
inc
jg
mov
pop
jae
into
push
aam
xor
xlat
or
pop
subl
sbb
js
daa
lds
mov
push
pop
cld
loopne
ljmp
inc
push
mov
sbb
sub
and
aad
arpl
push
and
add
mov
mov
push
fmull
out
insl
add
xchg
iret
insb
cmp
fnsave
mov
fidivl
negl
cmpsb
jle
repz
into
mov
jae
daa
dec
ret
aad
mov
xor
adc
movsb
lea
fisubs
popa
and
in
sub
les
jg
or
or
in
and
insb
in
addl
in
mov
sub
xchg
xor
adc
pusha
sub
jb
fisubrs
cmp
fld
sbb
mov
cmp
xchg
mov
test
arpl
stos
loope
mov
jmp
mov
xchg
push
mov
adc
or
adc
lcall
mov
xchg
push
fistl
nop
into
xchg
mov
cmpsl
stos
mov
mov
cmp
xchg
xchg
mov
jmp
add
mov
xor
gs
ds
nop
sub
dec
jmp
loope
int
jbe
inc
mov
movsl
mov
xor
test
sbb
push
mov
cmc
xchg
push
add
outsl
test
xor
adc
inc
pop
mov
inc
pop
dec
out
jp
iret
mov
repnz
jp
mov
fwait
movsb
loop
sbb
dec
cmp
cmpl
mov
mov
enter
cmp
cli
push
aaa
lret
push
sbb
add
xchg
add
jb
inc
addr16
jmp
divps
add
jbe
adc
leave
or
das
test
std
pop
mov
jno
decb
jo
jo
andb
adc
jge
jno
clc
gs
out
sub
inc
lcall
pop
jg
movsl
cmp
adc
test
pop
aas
aas
push
das
loop
jg
mov
mov
add
pop
pop
and
push
ret
stos
push
sarl
ret
jmp
gs
ljmp
aas
jmp
xor
fmuls
jo
mov
add
fsubrs
popa
sbb
decb
dec
add
std
sbb
lock
dec
sub
mov
inc
je
jnp
mov
test
and
inc
add
js
dec
dec
enter
aaa
inc
xlat
or
mov
in
in
lahf
test
shll
push
loope
inc
cli
and
pop
sub
das
xchg
cmp
mov
push
add
push
out
jbe
sub
testb
pop
es
aas
pop
fld
lahf
movb
fnsave
add
push
or
pop
push
fsubrs
fsubs
in
dec
adc
stos
lret
dec
add
mov
and
leave
pop
fwait
jmp
and
ret
insl
inc
or
inc
sti
xor
mov
push
bound
fdivs
test
or
cmp
popa
add
testb
push
adc
add
sub
fidivrl
or
mov
ror
shlb
pop
adc
mov
scas
xor
lcall
test
les
and
dec
and
jle
jae
dec
mov
sbb
popf
test
scas
pop
inc
and
mov
call
xchg
cli
or
cli
sbb
movnti
sbb
sub
mov
out
sarl
aad
sbb
out
jae
dec
cmp
std
mov
andnps
inc
lods
scas
sub
dec
jg
fwait
stos
pop
xor
push
push
xchg
add
inc
repnz
sti
or
sub
lret
jae
outsl
fisubrs
jns
and
mov
int
jl
dec
mov
bound
stc
leave
pusha
mov
and
and
or
addr16
inc
icebp
push
mov
xor
jmp
aad
xor
xchg
cmp
pop
jmp
mov
leave
pop
jecxz
jns
mov
inc
add
fcomps
add
fwait
xor
mov
pop
out
adc
sbb
lahf
mov
es
sbb
lea
dec
in
push
sub
xchg
cli
mov
push
mov
mov
ficoms
loopne
aas
sbb
shrl
popf
cmp
arpl
mov
dec
cmp
dec
mov
std
xlat
hlt
xchg
jg
movsl
sbb
pushf
ljmp
fwait
mov
mov
fidivs
insb
and
fdivrp
mov
or
andl
jnp
sub
ja
mov
ljmp
cld
mov
pop
outsb
jnp
push
ljmp
dec
xor
lds
pop
push
jmp
test
lcall
mov
inc
xchg
mov
sbb
imul
test
shlb
loopne
cmc
jp
or
fmuls
jecxz
inc
inc
push
ret
pop
jae
pop
lods
shrb
adc
dec
aam
in
cmpsb
adc
and
cmc
jns
mov
movsb
test
jecxz
movsb
pusha
pop
dec
icebp
bound
cld
test
xor
jno
lods
ficomps
mov
xor
push
les
fxch
or
xlat
mov
sahf
repz
mov
cmp
popf
int
das
fsub
call
repz
jle
outsb
stc
in
xor
xchg
mov
mov
push
xorb
dec
out
pushf
sbb
cmp
or
add
sub
lods
pop
fisttpl
xor
and
and
addb
lahf
push
stos
fdivl
icebp
faddl
pop
dec
aad
fiaddl
outsl
or
or
insb
mov
insb
jbe
xchg
sub
push
jns
ret
mov
sahf
mov
push
mov
push
or
cmpsb
sar
add
notb
movsb
mov
push
sarb
xchg
jbe
pop
adcl
jl
orl
movsb
jge
push
jge
cmp
shrb
xchg
bound
dec
pop
sub
js
adc
sahf
jmp
or
andl
cmp
in
loope
fwait
movsl
lock
dec
inc
add
or
icebp
ds
fistpl
add
aad
adc
pusha
cmc
xchg
inc
or
loope
xor
adc
mov
mov
mov
or
sub
loopne
pop
clc
je
ror
inc
cmc
add
scas
and
fbld
or
pop
jge
push
mov
fst
outsb
cwtl
stos
or
cli
jbe
push
sti
dec
cs
cmpb
scas
pop
mov
shlb
lea
dec
and
adc
pop
adc
sbb
pop
dec
rorb
aad
xchg
xchg
cltd
test
xor
fstps
inc
das
mov
jg
inc
pop
mov
dec
jo
xor
inc
shlb
dec
fsubs
int
push
xor
aam
pop
pushf
pop
jp
add
jmp
or
or
add
jge
mov
loopne
not
adc
xlat
ja
int
inc
inc
pop
inc
jmp
ret
cwtl
or
mov
enter
into
sbb
into
pop
fwait
mov
and
rcrb
lahf
hlt
loop
and
adc
mov
sbb
jge
bnd
mov
cmp
mov
pop
jne
test
pop
in
and
hlt
int3
aaa
cmova
push
sub
pusha
ret
movsb
xchg
push
xor
call
mov
push
lds
jnp
stc
movb
aaa
inc
jns
and
stos
test
aam
lcall
shll
clc
xchg
fstpt
fucomp
sahf
jge
lock
xor
xor
jg
cmpsl
frstor
pop
and
mul
loop
out
fs
leave
dec
jne
dec
movsb
cmp
xor
loopne
xchg
dec
mov
mov
aas
cs
and
jnp
sub
or
fcompl
dec
cmp
in
rcrl
into
outsl
inc
loop
ficoml
aad
outsl
rorl
sbb
call
call
sub
aas
mov
xchg
push
push
cmp
pop
cli
scas
test
shlb
sub
sbb
or
sub
cmp
or
inc
rcr
fwait
mov
jecxz
cmpsb
out
imul
xchg
push
imul
mov
mov
fidivrs
jecxz
fbstp
pushl
shl
icebp
jp
or
fs
sub
or
add
imul
daa
cld
adc
mov
rol
jnp
xchg
cltd
scas
test
test
scas
test
mov
and
sbb
imul
jle
add
and
xor
jne
lahf
xor
pop
daa
call
mov
jae
inc
lcall
addr16
pushf
pop
cmp
sti
das
or
mov
fisubrl
jo
cwtl
aad
vmwrite
push
and
out
inc
or
push
shll
loope
mov
add
movb
popf
popf
push
test
outsb
popa
lcall
test
inc
fdivrl
mov
testl
sub
pop
iret
cwtl
push
loop
push
aaa
lcall
jbe
test
xchg
sbb
movsb
push
lret
mov
imul
lcall
shl
arpl
mov
sub
das
cli
pop
push
popa
xor
adc
push
js
gs
push
sbb
inc
insl
dec
bound
ret
xchg
xor
sub
ds
test
loopne
fisubs
fdivl
and
push
mov
and
inc
xor
adc
dec
scas
lock
mov
inc
lods
jl
mov
pushf
cli
xchg
and
mov
mov
dec
out
popa
fnstsw
mov
push
fs
adc
scas
std
ss
xchg
int3
ret
mov
push
negb
test
test
mov
push
arpl
push
enter
data16
addr16
jbe
nop
lods
ljmp
fdivp
test
jbe
and
jl
mov
xchg
stos
jno
out
xor
push
lea
mov
mov
jnp
les
lods
mov
sub
insb
jae
pop
pop
daa
sbb
or
mov
data16
incb
je
jle
fs
mov
fildl
dec
jne
pop
mov
sahf
bnd
cltd
push
jp
mov
mov
sbb
add
outsl
and
jle
inc
pop
sbb
cmp
mov
pop
push
mov
xlat
test
ja
movsb
daa
mov
ljmp
jge
mov
lcall
stos
mov
xchg
cmp
iret
stos
xchg
mov
sbb
add
or
push
pop
cmp
inc
sbb
mov
into
test
aas
sbb
pop
pop
test
fldenv
out
push
insb
jle
mov
xor
insb
jnp
fsub
mov
subb
mov
push
cmp
jno
mov
out
mov
sub
pop
dec
pushf
pop
aam
mov
in
jno
in
scas
lods
xchg
adc
and
into
fs
xor
push
pop
test
movsb
sti
repz
or
sbb
es
jnp
jo
adc
leave
scas
data16
push
or
push
shlb
push
pop
mov
mov
or
outsl
mov
ja
sti
push
mov
push
xor
mov
popf
jge
jo
in
fwait
mov
mov
fdivrs
insb
cmp
mov
sbb
outsb
mulw
gs
sub
mov
inc
pop
gs
notl
lcall
jecxz
or
negl
pop
or
enter
xchg
sub
xchg
sbb
mov
inc
rcrb
pop
sarl
jb
inc
clc
addr16
lock
xchg
aad
orl
push
dec
pop
pop
ret
mov
or
or
mov
leave
or
inc
or
dec
lcall
sub
adc
cwtl
andl
push
jecxz
push
sub
in
jae
xchg
mov
add
dec
adc
cld
sub
push
inc
aam
jle
push
sbb
xchg
repz
push
dec
sub
fwait
sub
pop
mov
mov
repnz
add
gs
cmpl
ret
xlat
mov
push
mov
sbb
sarl
mov
ret
mov
sbb
imul
dec
or
shr
fcomps
mov
dec
mov
push
add
shlb
aas
loope
mov
pop
enter
decl
mov
push
out
sahf
jns
jmp
xor
push
mov
movsb
push
mov
out
sbb
jns
mov
cli
fisttpl
ret
sbb
xor
loope
jmp
lods
adc
inc
imul
push
xlat
push
aaa
ret
jp
pop
out
xchg
pop
or
add
lds
outsl
mov
aaa
shr
ss
push
test
scas
in
jp
in
xchg
cmp
cwtl
push
xchg
bound
sub
fidivrs
cmpsb
pop
aaa
sbb
daa
ror
or
xor
adc
in
loop
inc
mov
sarb
inc
js
enter
mov
mov
fistpll
push
mov
sub
jp
sbb
ljmp
mov
ret
sbb
out
xor
iret
gs
push
shl
aad
in
xchg
mov
inc
fwait
nop
test
sub
cmpsl
into
mov
call
insl
add
xchg
sub
fadd
and
xor
ljmp
icebp
lea
out
cmp
cmpb
mov
aaa
xlat
cltd
fdivl
ja
por
scas
cltd
lock
fs
mov
xchg
push
or
movsb
shlb
call
enter
stos
cmp
cli
sbb
xchg
movsl
xchg
and
sbb
test
paddsb
jns
xchg
insl
dec
into
mov
lret
adcl
test
clc
in
dec
cltd
stos
mov
pushf
insb
cmpsb
mov
pop
in
jnp
lods
add
in
out
pop
enter
mov
jle
lcall
fsubrl
push
xor
adc
sbb
mov
jae
pop
and
gs
mov
imul
scas
lret
cmp
std
stos
out
gs
jecxz
icebp
outsb
and
fmuls
xlat
add
or
out
push
and
cmp
cmp
ljmp
add
fisttps
mov
mov
dec
add
fcmovu
adc
mov
dec
out
test
mov
cmpsl
add
mov
cmc
jns
mov
mov
enter
xchg
or
fs
push
xchg
and
jecxz
mov
pop
sahf
insb
popa
mov
mov
inc
xor
jl
pop
subb
mov
sbb
jl
jle
push
lock
movsb
adc
mov
pop
out
je
cmp
mov
pop
std
out
dec
lds
push
or
mov
xchg
icebp
orl
adc
push
jns
cmc
into
jnp
pop
lcall
cmp
ret
test
push
aad
dec
inc
jno
mov
cmp
jae
pop
mov
dec
popf
repz
pushf
daa
sub
mov
adc
ljmp
adc
aad
das
stc
mov
rorb
movsl
sub
fbld
xchg
mull
std
nop
adc
push
push
in
mov
out
push
and
enter
xchg
test
rol
jae
push
and
dec
pop
test
test
out
or
xchg
inc
das
mov
inc
lea
jnp
xor
push
repnz
lea
mov
mov
jecxz
push
adc
repnz
ret
add
mov
pusha
in
lock
roll
inc
cltd
sub
shrb
call
mov
jle
cmp
lods
aad
add
adc
adc
jg
gs
test
push
lret
sbb
test
adc
call
int
cmp
out
hlt
jae
xchg
mov
jg
and
or
mov
loopne
ljmp
add
jle
lea
aaa
cmpsb
jl
repz
mov
ljmp
cmpsl
negl
ret
pusha
xor
mov
jp
mov
lcall
jnp
test
les
xor
mov
cmp
add
xchg
fcoml
stos
je
adc
imul
inc
cmp
out
dec
loop
hlt
pop
xor
testl
and
dec
mov
gs
sub
ss
or
dec
pop
lea
cmpsb
test
jmp
popa
add
repz
mov
jnp
inc
sub
mov
ror
fistpll
out
mov
sbb
mov
add
sbb
xchg
mov
bound
int
jl
add
out
into
cwtl
ja
bound
lea
push
jmp
pop
dec
lods
je
sbb
jnp
sbb
hlt
punpckhbw
pop
nop
ljmp
fldl
and
pop
pop
scas
pop
xchg
adc
mov
ss
sub
xorl
shrb
cmp
jo
pushf
inc
dec
or
pushf
shlb
popf
or
mov
sub
jecxz
rcl
insl
push
lea
mov
lea
inc
out
mov
es
lahf
pop
aas
gs
push
jmp
mov
sbb
dec
cmc
mov
cmpb
dec
xchg
aaa
jecxz
out
pop
and
adc
jge
cli
out
movsl
insb
sub
addl
dec
sbb
fiadds
dec
pop
jge
sbb
popa
mov
and
movl
xor
arpl
xchg
xchg
jle
cmpb
sbb
pusha
popf
push
outsl
test
adc
jo
mov
std
jg
rclb
xchg
xchg
pop
call
divl
arpl
push
pop
lcall
je
jle
loope
mov
inc
jo
lds
sti
inc
mov
push
aad
sbb
add
jp
add
loopne
in
jecxz
cld
jecxz
mov
sbbl
rorl
push
or
int3
or
out
push
xor
cltd
sbb
sti
pop
loopne
inc
orb
xor
push
xchg
arpl
enter
cmp
popa
xchg
adc
into
push
fldenv
mov
adc
ret
test
out
cli
in
xor
cmp
jo
lret
mov
fisttpl
sbb
inc
sbb
gs
dec
mov
ret
add
arpl
adcl
xor
leave
iret
lods
or
fwait
add
add
inc
mov
push
xlat
add
and
cmpsb
or
and
insl
testb
sbb
dec
imull
pop
stos
push
push
shll
cmp
mov
push
xchg
mov
loopne
pop
pop
sub
stc
dec
pushf
pop
rcrb
inc
iret
and
subl
int
jle
fdivp
dec
sub
mov
cmc
jp
aaa
mov
lea
mov
inc
or
mov
cmpsb
pop
arpl
std
inc
rorl
lcall
lret
lods
and
sbb
movsb
push
fdivl
xchg
mov
repnz
and
ficomps
xchg
out
loopne
add
cmpsl
jb
aas
mov
xchg
adc
fwait
int
dec
fldl
push
add
add
dec
jecxz
nop
push
ret
cltd
or
cmc
fists
sbb
push
push
hlt
imul
notl
adc
mov
pop
lea
decb
and
jle
loope
push
mov
popa
inc
adc
cld
mov
ret
cltd
sub
cs
das
dec
mov
outsl
ror
mov
jle
shl
xchg
in
stos
fdivrs
push
pop
imul
push
lods
jns
lret
hlt
pop
das
inc
inc
loopne
ljmp
dec
les
fs
push
mov
push
add
sahf
insl
xchg
sub
sub
cmp
fs
jmp
jns
push
jb
decb
add
mov
add
test
ret
push
adc
add
mov
subb
mov
pop
cs
or
cmp
insl
push
inc
ret
lods
xchg
insb
cmp
fnstenv
ja
int3
dec
sti
sbb
popa
mov
fmull
cli
lea
adc
adc
adcb
cmp
push
test
ljmp
call
out
sbb
out
push
adc
pop
les
pop
dec
ret
jb
cmc
pop
fmul
pop
ret
inc
pop
int
push
les
out
jbe
adc
mov
outsl
adc
jg
sahf
mov
pop
or
fwait
pop
jmp
adc
xor
aad
shrl
pop
and
add
std
and
loop
leave
xchg
mov
jo
mov
cmp
mull
dec
insb
jbe
xchg
in
inc
dec
adc
mov
inc
mov
dec
das
rol
dec
cmc
jge
cmp
je
inc
fstp
jb
inc
faddl
cmp
cmp
lahf
cmpb
jae
xor
mov
mov
jge
mov
adc
clc
mov
adc
sub
ds
sub
test
dec
or
lahf
push
fdivl
mov
mov
push
nop
cmp
add
mov
sbb
rorb
fcmovu
scas
mov
mov
jne
and
cmp
lock
adc
dec
and
pop
or
push
cmp
xchg
mov
xor
imul
cmp
scas
or
cmpsl
jecxz
aam
sbb
dec
cmp
imul
or
add
call
arpl
movsb
sahf
mov
and
data16
nop
xchg
lea
or
adc
mov
enter
jecxz
xor
mov
or
push
push
xor
dec
mov
xchg
jno
ret
out
fwait
mov
xor
jecxz
mov
shrb
adc
mov
xchg
pushf
xchg
lahf
xchg
pushf
fimuls
fcmove
cmc
xchg
pop
shlb
inc
clc
adc
shl
pop
inc
and
shll
jae
mov
mov
arpl
mov
cmp
mov
jle
mov
testb
jo
adc
mov
inc
pop
fld
push
sub
sub
ret
and
mov
jno
enter
xchg
sub
negb
jae
sbb
mov
mov
adc
fcompl
sbb
pushf
adc
dec
nop
rcr
aad
or
or
xchg
imul
lock
or
and
cmc
mov
dec
sub
mov
mov
enter
mov
lahf
mov
aaa
fs
out
sbb
sub
cmp
fwait
cmp
xor
fmuls
inc
xchg
out
lods
lea
fcompl
and
pusha
pop
negl
pusha
mov
out
xchg
addr16
sbb
adc
gs
clc
stc
lds
pop
les
xlat
mov
sti
rcrl
inc
cmpsb
cmp
int3
stc
test
mov
mov
bound
add
or
push
pop
jecxz
xlat
push
mov
cmc
jle
inc
repz
in
ret
outsl
and
sbb
mov
dec
mov
mov
xchg
andb
mov
xor
jl
lahf
mov
sarb
mov
dec
dec
xor
xor
test
add
xchg
cmc
fsts
lods
mov
std
or
sahf
loopne
push
shll
movsl
popa
lret
pop
xorb
mov
xor
cmp
add
mov
jno
adc
pushf
and
push
daa
int3
push
scas
inc
push
or
adc
cwtl
xlat
pop
nop
push
sbb
mov
enter
push
add
and
mov
mov
jae
jo
adc
mov
lock
xor
je
mov
mov
xlat
pop
and
js
aaa
jge
jp
test
cmp
ficoml
dec
xor
lods
fildll
cmp
inc
push
fs
pop
jecxz
and
jecxz
sub
xchg
mov
pop
pop
in
xlat
push
daa
inc
dec
xchg
fs
xchg
ret
jne
mov
jnp
dec
cmp
out
inc
not
jno
push
lahf
mov
imul
mov
mov
lcall
mov
push
lds
std
push
push
dec
sub
sub
mov
roll
cli
jno
enter
movsl
fildl
out
lahf
fmull
adc
je
adc
adc
cwtl
xchg
call
push
dec
and
dec
inc
sarb
out
in
fstp
loope
xor
dec
mov
in
int3
arpl
push
idivl
sbb
mov
push
imul
popf
dec
sub
cmp
iret
daa
and
mov
xchg
fimuls
dec
mov
notl
aaa
neg
jl
cmpsb
aas
adc
jnp
or
aam
cmp
in
mov
shll
andl
rep
out
mov
jle
jge
adc
das
mov
ss
addl
bound
mov
dec
cmpsl
cmp
aad
inc
outsb
jne
mov
add
mov
lcall
repnz
or
negl
into
xchg
xchg
jecxz
decb
in
add
or
enter
aam
movsl
inc
inc
lahf
stc
bound
sub
dec
in
or
les
jb
xlat
mov
insb
out
mov
jmp
pop
imul
mov
push
push
jecxz
imul
rclb
lcall
mov
das
sub
inc
in
xchg
inc
test
stos
movsl
rorl
mov
xchg
jne
push
push
lock
mov
pop
mov
adc
xchg
sarl
and
cmc
insl
inc
xchg
fs
rorl
popf
repnz
push
and
adc
pop
gs
test
xchg
in
ja
mov
adc
sub
jns
pushf
xlat
in
push
inc
insb
hlt
add
gs
mov
or
inc
push
push
iret
adc
or
out
add
mov
test
fwait
stos
int
lock
ret
xor
push
pop
incb
iret
int3
push
repnz
rol
clc
in
pop
adc
cmp
inc
mov
lea
aad
call
sub
push
rcl
pop
pushf
jge
jbe
leave
clc
sti
xor
pop
dec
dec
adc
mov
push
and
out
loope
and
div
mov
stos
inc
push
dec
into
cmc
ficompl
fdivs
fldt
stc
repnz
push
mov
xor
mov
js
mov
pop
add
add
ret
xor
stos
dec
int
xchg
subl
mov
bnd
dec
push
enter
nop
insb
movsb
xchg
dec
mov
sbb
movl
sub
movsb
imul
mov
fstpt
sbb
fucomip
pop
inc
popa
xchg
cmp
inc
jmp
scas
fdivs
sti
lock
cmp
sub
adc
lea
test
jp
mov
xor
int
lcall
mov
mov
int
push
std
sub
loop
xor
or
mov
jp
aam
push
xchg
shll
out
mov
andb
out
mov
lahf
pop
jb
test
push
sbb
jne
pop
cmp
add
mov
mov
pop
insl
jo
jno
jo
add
xlat
mov
mov
xchg
push
out
adc
lock
xchg
jae
test
sbb
jae
hlt
insl
xor
cs
popf
jle
dec
xchg
outsb
test
jnp
test
lcall
inc
jg
xor
adc
push
cmp
inc
insl
js
jecxz
stos
popa
sub
rorl
and
cmp
cmp
jecxz
dec
mov
pop
dec
bound
and
jmp
jge
mov
inc
jns
test
lock
addr16
cmp
lret
popf
mov
mov
push
repz
inc
mov
stos
and
fptan
inc
pop
mov
push
fisttpll
fs
mov
inc
pop
add
out
sub
inc
pop
jg
mov
jecxz
or
xchg
mov
divb
mov
scas
dec
dec
xor
fidivs
lahf
jne
pop
insb
xchg
inc
into
xor
js
lods
push
push
dec
pop
popl
outsb
lret
fnstcw
pop
fnstenv
mov
js
call
xchg
add
push
push
int
lock
mov
mov
mov
xchg
add
push
dec
cmpsl
lods
mov
push
add
adc
and
test
lcall
add
movsb
xchg
mov
imul
mov
cmp
inc
repnz
loope
mov
dec
data16
add
repnz
outsl
mov
inc
int3
dec
gs
push
dec
ret
call
ds
push
cmp
iret
fdivl
ds
mov
outsb
mov
jle
gs
testl
in
adc
rcrb
inc
cmp
shl
or
add
cltd
pop
in
fdivl
dec
clc
xor
jns
jmp
add
stos
xchg
test
mov
sbb
jo
push
jle
call
sbb
xlat
adc
and
stos
adc
dec
or
mov
xor
aad
aad
das
sub
mov
xchg
xor
imul
and
xchg
cmp
add
jne
nop
call
xor
push
jg
in
mov
mov
sahf
loop
cld
rclb
jo
fldenv
movsb
jge
push
fisttpll
and
daa
push
xorl
fs
xchg
xchg
sbb
xorl
orl
imul
in
pop
pop
mov
fwait
pop
imul
pop
in
js
mov
xlat
imul
shll
mov
test
xor
jne
loopne
inc
cmp
lahf
addr16
mov
sarl
fdivrs
cmp
mov
mov
adc
inc
fimuls
test
ficomps
adc
outsb
add
mov
lret
push
call
sarl
sbb
or
or
out
push
and
aad
cmp
inc
and
inc
xchg
mov
out
xchg
sbb
cwtl
mov
hlt
cmp
dec
mov
dec
lret
jno
adc
shll
cmp
sarl
inc
mulb
pop
cmp
inc
xchg
xchg
mov
pop
dec
iret
push
pop
push
inc
jae
mov
sub
das
sbb
out
popa
mov
das
sub
dec
inc
in
xor
int
lcall
dec
out
das
push
rcrl
xchg
lock
arpl
fwait
setbe
xchg
pop
push
xlat
cld
scas
pop
push
ret
out
mov
mov
pop
daa
movntq
out
aam
or
test
cmpsb
sub
push
push
add
stc
or
and
in
fistl
iret
decl
pop
push
pop
les
clc
les
cmpsb
int
jnp
sub
cltd
kmovw
insb
dec
and
test
xchg
or
mov
push
in
push
pop
xchg
sub
ja
and
jne
inc
push
jl
idivb
add
xchg
cmp
jg
loope
pushf
in
aaa
mov
repnz
xchg
das
dec
inc
sub
sbb
movsl
sub
xchg
lahf
call
sub
or
scas
hlt
sbb
mov
mov
mov
ret
out
lock
icebp
loop
add
loop
out
push
inc
stos
in
or
inc
mov
hlt
testl
aaa
dec
mov
adc
andb
jbe
lods
aas
fsubl
xchg
dec
and
jo
popl
mov
insl
out
lret
dec
gs
pop
dec
movsb
icebp
mov
jg
jp
dec
mov
scas
mov
addr16
mov
popa
adc
xchg
sti
adc
push
sub
scas
sub
jge
adc
shlb
stos
xor
popf
adc
fwait
inc
mov
loopne
out
sahf
jle
inc
pop
inc
and
xchg
or
sub
pop
test
shll
jns
lcall
pop
fcmovnbe
cs
in
jae
pop
pop
int3
jl
xor
aas
and
rorb
out
imul
inc
ret
out
loopne
pop
mov
jno
jmp
sub
popa
pushf
pop
call
aad
mov
cmp
fistpll
aam
mov
idivb
dec
mov
add
movsb
xchg
jl
mov
cmc
adc
pop
test
dec
in
into
and
pop
xorl
fmul
or
push
add
sub
lea
scas
mov
inc
sub
leave
fwait
test
pusha
orl
push
push
jmp
int3
cmp
adc
mov
sub
cmp
add
insl
jl
and
rorl
mov
xor
mov
cmp
loop
mov
pop
xchg
mov
mov
sub
out
stos
daa
xchg
call
push
mov
inc
mov
lret
jne
push
nop
mov
jp
int3
xchg
cmp
loop
test
pop
mov
leave
mov
mov
mov
test
push
stc
mov
push
jnp
lods
push
cmp
adc
mov
fstps
mov
xchg
rclb
push
fs
or
aad
add
lret
fdivl
fcompl
cld
mov
pop
je
jecxz
xchg
inc
jb
imulb
xor
xchg
pop
stos
rcll
arpl
cmp
cmp
jo
cs
je
inc
shr
add
movsl
jbe
mov
jno
inc
cmp
into
jns
loope
outsb
out
pop
dec
or
jo
loope
fmul
dec
add
push
mov
xor
jle
and
mov
nop
and
sbb
cli
in
icebp
fdivs
fidivl
int
imul
das
jg
lcall
push
jl
xlat
rolb
xchg
stc
cmp
nop
mov
shrb
test
push
mov
cmp
inc
lds
std
in
dec
mov
outsl
jmp
aam
in
arpl
and
add
add
mov
sbb
fs
cltd
mov
mov
scas
cmp
mov
subb
and
fmull
fwait
icebp
ljmp
pop
dec
mov
repnz
arpl
sub
sahf
stc
popf
push
clc
lret
rclb
cmp
lods
out
mov
xchg
or
aam
repnz
ficoml
push
sbb
cmp
jno
sbb
mov
and
inc
pop
cmpsb
lret
jg
mov
mov
pop
in
mov
dec
lds
fiaddl
out
mov
push
lret
push
sbb
lahf
cmp
loop
loope
jmp
mov
mov
adc
mov
xor
mov
movsl
in
shrl
cmp
mov
mov
inc
iret
out
mov
ds
mov
mov
call
cmp
add
add
dec
mov
adc
and
or
sti
pause
pop
test
xlat
ficoms
les
ss
sbb
jp
and
movsb
pop
mov
aas
pop
dec
xchg
cld
push
mov
in
inc
dec
xchg
cltd
cwtl
out
test
mov
fimuls
mov
out
sub
clc
ficompl
test
stos
stos
or
dec
sbb
mov
jno
jnp
xor
lcall
adc
dec
lret
jns
iret
pushf
mov
in
add
adc
roll
fdivl
insl
sbb
push
cmc
enter
loope
push
mov
mov
xchg
rclb
sbbb
flds
dec
icebp
cwtl
repnz
addl
rcr
pop
out
and
push
push
adc
jge
fwait
stos
mov
stos
pop
bound
adc
stos
out
jl
scas
daa
xor
inc
pop
sub
dec
mov
loop
testb
scas
push
sub
pop
leave
std
mov
inc
loop
pop
inc
jmp
popa
incl
sbb
dec
loope
addl
cmc
out
mov
xor
cmp
outsb
in
ja
xchg
jbe
mov
hlt
cmpsb
fsubrl
pop
sbb
sub
je
shrb
sub
jmp
push
xor
shlb
inc
loop
movsb
divb
push
adc
int3
push
sbb
lcall
jbe
rcll
pushf
dec
mov
cwtl
or
shrb
jmp
sbb
jb
inc
in
pause
pop
cltd
pop
inc
shl
scas
dec
lcall
fbld
sub
mulps
xchg
sbb
enter
test
shr
inc
xchg
movsl
jae
dec
and
inc
popf
mov
aas
adc
or
xchg
mov
and
cld
fs
in
push
iret
xchg
enter
nop
adc
shl
mov
or
insb
std
sbb
sbb
inc
mov
imul
xchg
popa
faddl
cwtl
pop
aam
mov
xor
in
cmp
repz
test
mov
jg
jne
dec
fwait
scas
ret
jno
in
jnp
pushf
push
inc
push
loop
lock
movsb
loope
sbb
in
stos
loopne
mov
adc
jo
push
rcrl
es
sbb
rol
std
ret
ret
mov
in
aam
dec
mov
je
sbb
sbbb
out
sbb
pop
sti
icebp
jp
popa
test
push
and
jge
sti
add
pop
mov
sarb
mov
cmp
subb
cmp
adc
addr16
mov
and
fwait
mov
scas
mov
in
test
out
sbb
or
adc
mov
in
imul
iret
std
lcall
sub
cltd
inc
jmp
xchg
cltd
fstl
and
dec
hlt
test
orl
mov
bound
aam
pusha
fsubrs
shlb
int3
aad
adc
mov
int
fcmove
rcrb
jl
sub
mov
pop
push
aaa
push
xlat
or
movsl
xor
dec
xchg
cwtl
xchg
jp
rorl
jl
pusha
out
jne
popf
fsubrl
ja
push
mov
lahf
sub
scas
lods
sub
or
inc
push
add
popa
mov
inc
adc
add
mov
inc
ljmp
or
fstpt
fisttpll
mov
dec
sub
pop
addr16
mov
ds
xchg
scas
cmc
fsubr
sub
add
jp
add
mov
xchg
ds
stc
subl
in
addr16
pop
mulb
mov
add
lcall
xchg
mov
lret
shl
xchg
dec
adc
movsb
aam
dec
sbb
mov
sbb
jbe
mov
sahf
icebp
add
jmp
mov
sub
xor
or
xchg
or
mov
mov
shr
xor
mov
inc
mov
je
and
faddl
fcmove
into
dec
cli
lahf
cmp
add
loop
leave
ds
cmp
add
fidivrl
pop
cmc
sbb
jecxz
daa
shll
hlt
dec
std
insl
bnd
jmp
dec
pop
or
shlb
pop
or
push
pop
repz
ljmp
push
aaa
and
pusha
repnz
repz
jge
xor
je
lret
mov
shl
aam
in
cmpsb
outsl
lret
in
lock
gs
sub
pop
xor
pusha
push
mov
push
mov
mov
daa
ss
xchg
jge
leave
jge
fists
aam
call
mov
lcall
popa
mov
scas
pop
xor
jb
push
outsb
xor
fmuls
inc
xchg
icebp
cs
cmp
ret
testb
in
push
cli
neg
out
imul
sub
mov
jp
mov
fisttps
loopne
clc
lods
lock
add
adc
mov
test
repnz
repnz
sar
xlat
jno
jmp
addr16
sbbl
pop
hlt
mov
xor
push
add
adc
sarl
fldt
pusha
aas
icebp
xor
fucomip
movsb
jb
pop
scas
test
mov
int
sbb
sub
inc
outsl
jg
sub
jmp
push
jno
push
outsb
inc
mov
pop
sbb
cwtl
mov
inc
cmp
test
mov
jae
in
jo
popf
push
jo
icebp
sbbw
repnz
clc
sbb
rorl
js
cmpsb
mov
push
mov
xchg
add
call
jne
cmpb
jo
mov
orb
jbe
icebp
loope
cmc
addr16
push
pop
mov
pusha
sbb
orb
xchg
roll
loopne
fstp
xor
add
mov
sbb
je
roll
mov
cmp
pop
jae
fwait
jl
xor
out
stc
sub
cmp
push
popf
rolb
adc
pop
data16
mov
out
push
ljmp
or
or
popf
push
mov
and
jne
iret
xor
mov
stos
sbb
mov
movsb
bound
push
lods
pop
xor
sbb
test
push
or
psllw
fisubrs
mov
pop
rcl
sub
add
outsb
pop
in
out
cmpsl
mov
xchg
cli
dec
dec
mov
push
repnz
stos
je
mov
mov
mov
addr16
push
xlat
insl
fstpt
dec
lret
ljmp
and
mov
cmpsb
mov
xchg
cmp
mov
gs
mov
dec
pop
sub
mov
sbb
insb
loope
xchg
dec
and
mov
je
test
lret
stos
das
and
jae
ds
mov
in
jl
dec
sub
jmp
call
push
aas
sbb
fdivr
jl
mov
je
sub
rcrb
jo
clc
or
inc
inc
mov
adc
imul
mov
scas
repnz
repz
push
jbe
xor
ds
das
ja
jno
ljmp
ret
xchg
into
mov
push
pop
test
int
outsb
xor
mov
mov
test
aas
stos
sub
icebp
xchg
repnz
mov
mov
pop
jg
mov
pop
mov
pop
push
ficompl
popf
into
cmc
dec
sub
dec
push
adcl
or
mov
iret
add
add
mov
mov
icebp
insb
in
int3
scas
sub
xchg
pop
aam
pusha
ljmp
sub
daa
mov
roll
icebp
sbbl
add
cmc
movsb
in
sub
loopne
cmpl
aas
aam
dec
test
and
rcrl
inc
push
lcall
and
bswap
fucomi
ret
es
lahf
bound
imul
mov
fdiv
jge
add
mov
mov
push
mov
dec
cmp
xor
cmp
rorl
or
fsubl
mov
cmp
xlat
dec
push
inc
inc
xor
outsl
pop
cli
fcompp
lds
push
xchg
inc
cwtl
push
cmp
pop
xor
enter
sbb
arpl
fstpt
imul
mov
in
fidivrs
das
cmp
add
aam
cmpsl
stc
ljmp
fs
mov
clc
icebp
inc
sbb
xchg
inc
jnp
outsl
xor
dec
jne
pop
mov
jbe
add
xor
mov
sub
mov
cmp
mov
sbb
jnp
inc
ret
outsb
das
or
les
pop
iret
int3
cmp
fwait
outsb
pop
stos
mov
sbb
dec
xchg
rcrl
lea
cmp
movsb
xchg
lods
mov
or
repz
ds
imul
and
out
test
fucomi
imul
or
lahf
fsubrl
ja
cmp
jmp
scas
jo
mov
or
jno
push
mov
outsb
mov
sub
jo
gs
adc
push
jb
out
lea
daa
xor
xchg
pop
cld
push
xchg
sbb
pop
push
mov
mov
pop
pop
and
ret
pop
xor
mov
adc
orb
mov
adc
push
pop
push
pop
std
leave
mov
jmp
cmp
sti
scas
dec
add
pusha
mov
cmpsb
xchg
cmpsb
rclb
outsl
sbb
jmp
xor
or
xchg
ss
inc
fbld
imul
lods
add
lods
mov
mov
inc
mov
mov
sbb
repnz
push
cmp
mov
jne
jne
jno
fisttpl
add
lea
mov
sub
mov
cmp
sar
pop
add
and
mov
out
and
repz
xchg
in
cmc
pop
dec
movsb
lods
imul
dec
xor
xchg
push
dec
mov
mov
loop
in
mov
mov
xchg
and
int3
push
test
and
cmp
jmp
xchg
or
dec
mov
add
mov
push
loopne
int3
push
jbe
adc
shll
jb
andl
sub
cwtl
addr16
mov
fistpll
fwait
add
lahf
daa
sub
or
jmp
stos
std
mov
adc
jg
push
lods
divb
dec
aaa
lock
add
cmc
orl
jge
mov
mov
sbb
cmp
outsl
sbb
lcall
push
addr16
add
push
shlb
dec
call
push
push
cld
mov
push
xor
outsb
inc
and
jl
aas
mov
mov
movsb
imulb
insl
fldcw
sahf
lds
and
xchg
push
lods
int3
sub
out
pop
sbb
arpl
pop
mov
fisttpl
mov
mov
std
mov
jmp
and
dec
inc
loop
out
nop
jmp
ds
fbld
sbb
imul
dec
dec
xor
sbb
or
ret
leave
push
jge
sbb
cld
sub
repz
pusha
push
add
sbb
mov
add
shlb
int
push
in
mov
jle
imul
insl
aad
and
xchg
mov
xchg
gs
pop
sub
cmc
and
cmpsb
sti
mov
sub
sub
loop
mov
pop
leave
iret
fsubp
mov
rcrb
ret
ss
lds
pop
mov
mov
test
outsb
xchg
aas
cltd
dec
pop
and
jb
cltd
inc
pop
sbb
les
jecxz
rcrb
aam
scas
and
dec
cmp
insl
add
inc
mov
add
xor
inc
mov
loope
jo
mov
out
or
inc
mov
sarb
into
mov
mov
pop
pop
dec
sbb
addr16
jmp
or
inc
xchg
ret
or
pop
repnz
subb
jg
cs
mull
lods
fnstenv
xor
jmp
mov
sub
sub
hlt
fwait
sub
fwait
cmp
jmp
out
pop
out
xchg
cmp
sar
dec
shrb
ret
std
mov
push
mov
lret
stos
inc
adc
or
xchg
in
add
clc
push
js
or
cmp
sbb
mov
cmp
std
in
call
mov
push
out
mov
ret
adc
adc
mov
mov
add
xor
xchg
ss
mov
test
push
fwait
ret
or
pop
cld
jp
lds
cmp
subb
mov
mov
jns
ss
popa
cmp
in
push
mov
in
or
mov
lret
fs
cmp
insb
inc
add
mov
outsl
jb
or
add
sti
xchg
add
mov
ja
or
hlt
add
xchg
out
xchg
inc
shlb
push
testl
xchg
cmp
cmp
sbb
mov
lods
jge
stos
jno
iret
xchg
mov
aas
jp
push
mov
pop
js
cmp
mov
xor
loope
inc
dec
jo
popa
movsb
xor
cld
push
push
pop
in
dec
roll
sbb
sub
and
jbe
mov
push
mov
into
add
inc
inc
pusha
scas
ss
pusha
mov
jmp
sahf
inc
decb
and
negl
jmp
stos
divl
dec
push
dec
je
pusha
xchg
jmp
cwtl
adc
xchg
jl
sbb
std
or
pop
dec
dec
or
scas
dec
aaa
mov
inc
enter
dec
sarb
sub
xorl
roll
cmpsl
rorb
inc
sbb
cs
test
aas
jno
jge
fisttps
sbbl
leave
and
lea
mov
cmp
jg
outsl
lret
adc
jne
adc
lods
dec
cmpsb
movsb
daa
out
lret
in
push
cmc
arpl
push
lcall
stos
mov
adc
in
xor
mov
xrelease
xor
jbe
inc
mov
negb
push
sub
mov
icebp
mov
lods
int
sub
divl
push
outsl
and
clc
ljmp
test
movsl
cmpsb
imul
into
int
inc
jle
xor
jp
push
pop
and
xchg
loopne
lret
xchg
insb
enter
inc
jo
xor
sub
and
mov
xchg
xchg
setno
push
mov
and
aad
roll
sarl
aam
and
push
pop
pop
xor
adc
dec
mov
push
push
xor
ret
fidivs
and
icebp
shrl
inc
push
aam
dec
movsl
push
or
rcr
test
or
pop
push
insb
pop
lds
aam
jmp
adc
push
outsl
xchg
adc
sbb
data16
insb
cmp
mov
adc
pusha
mov
ds
mov
jle
and
mov
fsubrl
add
jnp
in
inc
cld
lea
movsl
loopne
ja
fnstcw
scas
inc
xor
dec
enter
test
les
aas
add
or
cmp
and
push
test
jo
jl
mov
or
nop
rorl
push
cld
add
mov
movsl
ljmp
xchg
jns
add
sbb
mov
out
push
insb
test
enter
bound
lds
addl
mov
js
cli
mov
lret
es
jmp
in
xor
lods
sbb
cmp
mov
push
sub
xor
lods
les
in
adc
lods
mov
cmp
mov
sbb
mov
subl
testl
xchg
mov
adc
mov
xchg
fiadds
adc
push
adc
xchg
fnstsw
test
mov
mov
les
and
mov
out
je
movb
ss
jb
jne
js,pt
neg
frstor
xlat
and
mov
into
aas
ret
js
inc
and
mov
stc
ret
adc
fucomp
cs
mov
insb
sbb
insb
repz
dec
cmc
mov
sub
sub
call
mov
xchg
cmp
push
xor
jmp
jns
mov
roll
shll
cmp
int3
mov
mov
mov
dec
ret
outsl
or
xor
outsb
xor
pop
rorb
outsl
fwait
jo
cltd
int3
mov
jmp
xchg
mov
iret
cmpsl
inc
pop
or
into
test
fdivl
ret
dec
mov
xchg
imul
lret
lods
mov
gs
fstps
sub
mov
fwait
adc
inc
test
in
fisubrs
icebp
movsb
jae
lret
popa
mov
ja
lcall
sub
sbb
add
jbe
push
or
je
jmp
inc
dec
sub
cmp
dec
in
add
pop
leave
addr16
xor
shll
out
sub
sti
jg
or
xlat
ret
mov
aad
jbe
les
pop
and
inc
xchg
cvttps2pi
and
jg
sti
rorl
movb
inc
rcrb
sub
lret
inc
dec
adc
mov
mov
pop
xlat
mov
xchg
cmp
fiaddl
pop
fbstp
lahf
leave
add
not
sahf
lahf
in
lods
popf
xchg
mov
insl
cmp
xorb
mov
repnz
or
pop
jmp
test
loope
jge
lds
inc
arpl
mov
inc
inc
mov
loopne
inc
push
sarb
jmp
mov
mov
clc
push
mov
aaa
xchg
out
mov
jge
shlb
xchg
mov
into
inc
cmp
lahf
dec
stos
mov
mov
pop
or
notb
in
inc
test
incb
sub
sbb
nop
sbb
push
frndint
and
jnp
aas
ja
xor
cmc
adc
cmp
sbb
jge
ret
add
iret
pop
cs
ja
dec
jne
dec
sbb
out
inc
adc
sbb
xorb
dec
sub
pop
into
sub
lods
jns
lcall
lahf
adc
pop
jae
cmp
sbb
add
test
aad
pop
sbb
mov
fildll
lods
inc
and
sub
jg
xor
es
push
xchg
mov
iret
sub
and
xor
jge
icebp
test
add
pop
loop
popf
std
cmpsl
fnsave
pop
insl
pop
out
push
sarl
test
add
scas
or
cltd
mov
jmp
popl
sub
xor
cmp
scas
lahf
negl
mov
cmp
daa
cmp
movsb
and
movsl
fwait
in
movsl
outsl
jae
lods
mov
adc
xchg
nop
ror
mov
xor
cs
and
test
out
and
loop
dec
inc
in
push
lods
jae
rolb
xlat
into
sub
adc
mov
out
cmpb
or
push
frstor
clc
mov
xor
mov
inc
cltd
push
push
nop
or
or
mov
sub
add
inc
stos
mov
jns
mov
rclb
das
mov
jbe
iret
repz
lods
imul
xor
push
lret
divb
xor
dec
mov
mov
out
pop
scas
sub
insl
fstpl
add
outsl
ja
sub
sbb
push
aam
and
sub
inc
mov
cli
in
sbb
jg
sub
sahf
sbb
icebp
xor
push
sub
jle
cmp
xchg
and
add
cltd
fs
mov
push
icebp
scas
lahf
fdivrl
outsb
jb
xchg
sahf
push
outsl
nop
loop
push
pop
or
cmp
jl
dec
fwait
push
out
or
jno
lods
insl
hlt
add
or
popw
push
jns
aas
lea
and
xor
lock
push
outsl
sti
fwait
jle
iret
sbb
mov
inc
and
pop
stos
jmp
ja
xchg
adcb
jecxz
adc
sar
mov
in
pop
lock
cmp
cli
mov
idiv
stos
cltd
xchg
dec
outsb
xor
jmp
bound
or
gs
in
ret
xchg
or
push
push
fsubs
sahf
mov
pop
lock
mov
xor
sbb
ret
jne
inc
imul
mov
xchg
aam
stos
push
arpl
mov
mov
and
aas
xchg
mov
jmp
lret
daa
call
and
rolb
jmp
dec
lret
mov
nop
mov
das
xchg
sub
dec
data16
pop
popa
pop
push
sbb
and
mov
mov
or
inc
push
andb
js
pop
sbb
add
cmc
outsb
push
cmpsl
sti
mov
aas
xor
out
xchg
pop
add
test
mov
sbb
movsb
cs
xchg
and
mov
arpl
testb
lret
outsb
aam
lahf
jae
dec
mov
icebp
fxch
mov
mov
mov
in
cmp
jg
dec
dec
aad
jp
mov
mov
outsb
inc
jge
lds
xchg
mov
sbb
ret
xor
jne
aaa
mov
xchg
cmp
mov
mov
mov
jbe
lahf
xor
mov
push
cmp
add
or
in
movsb
sub
sbb
xchg
mov
mov
insl
in
sub
bound
imul
mov
cli
mov
cltd
out
fidivl
lahf
add
sub
icebp
xor
mov
inc
icebp
dec
enter
sbb
xchg
addr16
test
lea
push
test
dec
jne
sahf
int3
add
push
lods
push
outsl
pop
mov
lea
inc
lea
movsl
mov
adc
jns
cmpb
pop
test
pushf
xchg
mov
pushf
mov
pop
aas
stc
pushf
push
fwait
mov
shrb
xchg
int
test
push
call
pushl
sub
dec
mov
shlb
sub
gs
cmp
call
in
mov
add
mov
inc
sahf
push
xchg
lret
lret
aaa
icebp
inc
mov
sti
leave
push
movsl
push
into
mov
iret
mov
jns
test
cmpsl
fisttps
mov
movsl
jp
lock
je
repnz
pop
add
sbb
enter
ljmp
sub
call
addr16
sbb
std
aas
inc
adc
adc
iret
jecxz
ret
jo
cmp
sub
mov
adc
push
cs
dec
scas
test
xlat
mov
psubb
insb
xchg
add
call
cmp
push
lret
aad
roll
in
mov
push
or
addr16
sub
push
sub
push
out
fsubrs
xchg
lsl
insl
mov
inc
enter
dec
jl
fcomi
iret
insl
xor
mov
out
lds
scas
insb
inc
je
mov
xchg
orb
scas
insb
xchg
popf
lds
jl
push
pushf
sarl
bound
jecxz
icebp
dec
add
add
in
imul
mov
aad
notl
ret
pop
pop
out
mov
adc
adc
xor
push
dec
shlb
ret
nop
clc
fstps
or
ret
or
icebp
jb
fdivl
cmpsl
bound
je
push
paddusw
or
xor
mov
repnz
orl
scas
subb
pop
add
mov
nop
ljmp
ss
or
or
cmp
dec
dec
mov
stos
jbe
xlat
xchg
rcrl
pusha
cmpsl
outsl
int3
and
push
scas
dec
jge
add
jle
jnp
cmp
push
nop
ljmp
add
loopne
dec
sahf
std
xor
xor
int
add
and
lcall
aas
aad
sbb
xchg
ljmp
fisubrs
lods
xlat
sbb
adc
mov
ret
repz
pop
sub
xchg
icebp
dec
and
jo
je
dec
xor
push
fs
jae
push
in
push
addr16
pop
cli
adcb
jg
loop
clc
mov
jne
clc
cli
jle
enter
cs
ror
pop
cmp
outsb
mov
mov
rorl
jbe
cmp
inc
pop
gs
outsb
mov
pop
xor
adc
mov
inc
mov
movsb
adc
xlat
xchg
adcl
clc
pop
sub
inc
mov
jle
mov
dec
lret
sub
loopne
inc
add
sub
pop
popf
or
int
xchg
cmp
bound
add
jb
mov
popf
sub
xchg
add
and
mov
push
mov
jl
mov
fcmovbe
lret
cmpsl
leave
push
popa
cmpsb
scas
cmp
or
push
cmp
dec
mov
inc
loop
pop
ja
sub
jae
outsb
clc
and
inc
adc
hlt
xor
xor
orb
pop
xchg
sub
enter
and
jb
test
xchg
pop
add
ljmp
fcom
pushf
or
sbb
orb
addr16
jmp
push
mov
pop
push
cli
mov
pusha
stos
xor
pop
mov
sub
dec
pop
adc
sub
stc
mov
adc
push
mov
sub
fsubs
outsb
adc
lahf
mov
xor
loope
pop
sahf
stos
out
pusha
jge
shrb
sbb
pop
pop
movsl
push
mov
dec
clc
cmpb
mov
and
lods
push
fldt
mov
outsb
inc
in
cltd
icebp
dec
into
out
xchg
mov
mov
mov
ja
dec
pop
push
add
clc
dec
loop
sub
add
arpl
adc
scas
inc
add
imul
xchg
xchg
pop
dec
mov
outsl
das
inc
enter
mov
sub
outsl
imul
add
lret
cmp
pusha
ss
lcall
cmpsb
jae
ror
dec
je
push
sti
and
xlat
testb
sbb
ret
jb
and
addps
push
shlb
mov
insl
mov
out
call
xchg
or
and
lret
mov
cmc
adc
daa
call
push
iret
in
mov
out
addr16
jmp
sbb
xchg
cmc
and
insb
popf
in
sub
push
loope
fcompl
cs
popf
outsb
and
cmc
leave
sbb
pop
popf
xchg
jg
stc
sbbb
daa
and
adc
jl
cltd
or
cmp
push
in
je
mov
ja
js
or
mov
ret
aaa
nop
adc
out
or
mov
mov
jae
and
cli
test
cltd
repz
lock
leave
scas
fldenv
loopne
les
jb
int
push
in
dec
add
add
sbb
push
stos
xor
push
xchg
sahf
rcl
push
in
xor
mov
push
in
ljmp
subl
in
out
dec
push
in
mov
adc
sub
test
and
mov
js
das
mov
out
and
je
and
inc
movb
arpl
mov
mov
cmpsb
imul
jg
mov
mov
xchg
add
jecxz
outsb
ss
in
sbb
insl
mov
arpl
jmp
mov
add
pop
jns
scas
test
add
fadd
mov
lret
add
jo
lahf
add
clc
addr16
pusha
imul
cwtl
enter
insb
test
aam
jnp
data16
sbb
aad
mov
out
inc
test
push
cmp
inc
iret
push
sbb
cmp
mov
xor
ja
pop
xchg
jae
xor
les
or
pop
jg
inc
leave
jp
or
rcl
adc
mov
lcall
sbb
and
lahf
pop
xchg
xor
cld
pop
jp
pop
sbb
enter
pop
loop
pusha
cmp
dec
sub
fdivs
jl
ja
int3
in
div
into
jb
in
in
cmp
adc
xchg
scas
dec
rorb
jne
mov
test
push
enter
outsb
int
mov
adc
fmull
dec
jb
loopne
mov
imul
fadds
call
call
adc
cwtl
cld
leave
int
xchg
sub
hlt
lea
adc
stos
into
insl
add
in
out
in
xorl
lahf
movsb
sbb
pop
push
leave
sbb
cmpsl
push
inc
mov
push
push
iret
loopne
mov
add
xor
imul
gs
mov
xlat
pop
in
aas
stc
push
hlt
add
sbb
cmp
mov
mov
jno
loopne
ds
enter
jmp
faddl
mov
fsubs
mov
sub
sub
push
popa
ret
sbb
out
push
pop
push
ss
aad
ret
dec
jne
aaa
pop
jns
or
push
mov
pushf
or
push
cmp
fldenv
xor
xchg
mov
aas
popa
mov
xor
sub
push
push
sub
dec
mov
jo
flds
inc
add
jecxz
xor
jns
in
std
mov
or
or
xchg
repz
mov
push
jg
add
mov
lods
sbb
daa
gs
shl
in
and
movsl
pop
js
stos
mov
inc
jmp
push
mov
sar
and
inc
cmp
dec
add
repnz
pop
lret
push
fiaddl
stos
sub
mov
xchg
xchg
sbb
cmc
mov
mov
aaa
roll
hlt
mov
test
movsb
pusha
dec
outsb
fwait
cli
sti
movsl
out
mov
aam
dec
sub
in
test
ret
ds
repz
or
aad
dec
in
inc
add
iret
mov
leave
pop
xor
pop
loop
repz
sub
cmp
shll
lods
les
or
icebp
cmpsl
xor
mov
je
jg
test
dec
movb
rorb
movsb
mov
pop
adc
shr
data16
dec
fstpt
fcompl
inc
repz
or
movsb
cmp
mov
pushf
ja
push
cld
hlt
dec
insl
in
clc
cmp
mov
cmp
sbb
fnstcw
add
jnp
jbe
mov
and
sbb
or
in
sbb
jo
inc
pop
or
sbb
stc
mov
mov
daa
xchg
jle
dec
fldl
lds
add
movsl
nop
std
xchg
add
inc
out
push
scas
or
clc
scas
sbb
cltd
repnz
insl
enter
in
inc
push
pop
jmp
and
rolb
pop
sub
insl
test
jmp
jge
repz
jns
popf
mov
sbb
mov
mov
shlb
nop
ret
call
mov
pop
dec
inc
sti
repz
or
rol
xchg
xor
lods
das
cmp
or
inc
repz
lret
int
cs
xor
loop
jge
imul
pop
cli
shlb
loope
fiaddl
lahf
jle
mov
scas
cmp
in
pop
xor
nop
sub
dec
and
dec
dec
add
pusha
aaa
jg
fs
sbb
sar
loop
xor
mov
add
data16
sbb
outsl
insl
adc
fisttpl
cli
fs
xor
xchg
jg
ds
cmp
push
mov
arpl
dec
mov
loop
xchg
ret
shrl
add
or
mov
test
fnstenv
adc
adc
movsb
mov
pusha
rclb
mov
push
and
jl
xor
and
int3
sub
pop
pop
cli
mov
xchg
enter
test
sahf
or
aam
jbe
sbb
mov
push
xor
cmp
lret
push
pop
mov
adc
popfw
pop
sub
mov
and
enter
cmpsb
mov
and
enter
addl
mov
fnstcw
cmp
dec
aam
jb
test
fisttpl
gs
cmp
mov
cmp
test
subb
rorl
stc
popf
lcall
aad
sbb
push
popa
imul
bound
mov
in
shrl
jne
into
popl
lcall
out
arpl
das
inc
push
jle
add
mov
pop
rcrb
pop
outsl
data16
jns
pop
rcrl
imul
punpckhbw
dec
mov
lock
repnz
push
pop
cli
push
adc
pushf
and
enter
push
jmp
rcrl
inc
mov
dec
clc
call
data16
in
call
jae
hlt
add
pop
repz
imul
loop
mov
punpckhdq
clc
push
sbb
and
push
andb
ds
das
call
inc
mov
loopne
sbb
adc
fldt
push
or
loop
add
test
aad
push
add
lret
push
repnz
mov
ljmp
js
add
pop
clc
jns
cmpsl
or
xor
dec
lret
ja
pop
adc
pop
outsb
inc
icebp
js
jecxz
icebp
push
hlt
repz
jno
jne
sbb
in
adc
push
adc
stos
inc
popa
mov
pusha
push
dec
psubq
std
adc
xor
sbb
rolb
test
aaa
push
cmp
movsb
pop
xchg
mov
mov
xchg
scas
xchg
jnp
push
ja
pop
ljmp
mov
xor
pop
cmp
and
insl
jo
adc
jecxz
mov
push
imul
xchg
cmp
hlt
dec
sub
into
cli
xchg
les
push
int
xchg
and
add
loopne
scas
push
dec
out
mov
inc
stos
das
jmp
sbb
inc
test
out
mov
dec
call
add
xchg
push
xchg
xchg
jge
push
mov
scas
pusha
into
je
pop
adc
stc
xor
pop
jbe,pn
cmp
divb
shlb
adc
mov
mov
aas
jge
xchg
scas
mov
mov
insb
movsl
jbe
negb
xlat
mov
lcall
aad
repz
out
jge
push
inc
mov
lock
rol
lcall
dec
dec
pop
call
inc
in
pavgw
mov
jg
lods
pop
push
dec
sbb
inc
inc
cmpsb
push
push
xor
xchg
scas
mov
cmp
aad
jp
movsl
add
loop
cwtl
mov
shlb
and
add
add
repnz
stos
mov
jle
inc
icebp
pop
xchg
mov
movsl
lcall
or
imul
sub
leave
movsl
movsb
fs
mov
das
scas
aas
adc
sub
jge
adc
shr
mov
mov
mov
push
pusha
cld
nop
shrl
sahf
aaa
mov
clc
mov
adc
mov
pop
mov
adc
out
cmpsl
lcall
in
lret
add
lahf
mov
popf
xor
dec
push
push
ret
out
lahf
loopne
in
mov
fildll
out
xchg
iret
mov
jmp
fstps
mov
stc
sbb
or
push
add
jae
fnstenv
data16
out
lret
outsb
xchg
in
cli
cld
stc
movsb
mov
enter
cmp
push
insl
faddl
movsl
hlt
cmp
jbe
out
ljmp
push
jns
lods
sbb
les
push
enter
fmulp
dec
bnd
mov
outsb
loope
inc
mov
mov
incl
lahf
dec
call
outsl
call
mov
inc
mov
push
lret
adc
dec
les
mov
push
dec
and
ret
fcmovb
cmp
and
or
ret
xor
add
fisttpll
xlat
xor
push
jbe,pt
sbb
adc
mov
orb
fsubr
dec
adc
out
xor
lds
inc
sbb
insb
stos
xchg
mov
pushf
jl
fs
outsl
stos
pop
mov
mov
fs
fiaddl
push
jecxz
std
imul
aas
jnp
jl
cmp
sub
and
cmpsl
lret
or
mov
icebp
je
ljmp
inc
iret
call
dec
mov
xchg
mov
leave
jp
pushf
pop
pop
mov
mov
into
push
inc
xchg
fadds
push
xchg
mov
fsub
pop
imul
jae
push
mov
test
aaa
mov
pop
adc
mov
cmp
jo
inc
es
sahf
cmpsb
or
cmc
rorl
xorl
xlat
push
lea
nop
hlt
pop
push
add
or
test
xlat
jecxz
mov
and
mov
add
jp
pusha
ss
sub
mov
jmp
leave
shlb
loop
lcall
and
in
cmpsb
lret
jg
lret
pop
dec
mov
mov
fdivl
in
sahf
rclb
decb
xor
mov
add
enter
aas
leave
mov
add
dec
pop
mov
idiv
sbb
cmpsb
pop
daa
cmpl
cmpsl
sarb
fmul
push
lea
push
pop
fnstsw
xlat
outsl
jle
loop
mov
xchg
jo
negb
aas
mov
push
pop
aas
mov
mov
mov
push
mov
jg
inc
imul
push
lock
pop
mov
jae
gs
scas
cltd
dec
in
lret
xlat
mov
add
lds
pop
out
into
or
das
cmpb
scas
xchg
push
pusha
cwtl
lret
jne
sub
jge
mov
dec
sar
push
push
or
push
clc
lods
in
out
out
adc
cmc
inc
testb
adc
repz
pop
push
mov
stos
outsb
lods
sbb
cmp
add
jnp
rorl
cmpsb
mov
mov
xor
dec
cs
hlt
sub
xor
push
ret
stc
sbb
in
ss
jp
aaa
or
cmc
add
stos
sbb
inc
pop
pop
dec
mul
int3
mov
lds
jmp
mov
xor
ja
pop
pop
push
jbe
pop
loopne
rcll
sub
inc
in
push
outsl
sbb
in
test
fldt
fldcw
adc
mov
jge
hlt
ljmp
or
adc
ss
outsb
std
xchg
adc
jae
and
sbb
push
sub
push
cli
inc
aad
aaa
inc
outsb
push
push
bound
cmp
xor
mov
adc
or
cli
xchg
mov
aam
insl
mov
jmp
fsub
add
in
pop
inc
jp
ds
dec
test
sub
cmp
sub
xor
jp
cltd
mov
xorl
rcll
fs
out
xchg
cwtl
clc
ret
ljmp
and
sub
push
inc
xchg
pushf
cli
xor
inc
dec
mov
cli
adcb
xor
pop
xchg
and
ficompl
pusha
jle
mov
cmp
or
jae
mov
push
call
das
loopne
stos
xor
pop
je
mov
int3
mov
mov
popf
mov
jns
sahf
or
jb
sub
jmp
xchg
inc
sub
xchg
push
sbb
lret
insl
pop
pop
shrl
sbb
fmul
pshufw
lods
dec
push
lcall
mov
xor
je
adc
mov
js
jle
pop
fsubl
hlt
xchg
mov
lock
pop
mov
sbb
jo
ret
sbb
iret
in
inc
or
insl
xlat
popl
test
test
push
daa
xchg
pushf
ds
gs
fiadds
outsl
fnstsw
loop
cmp
mov
ljmp
js
mull
mov
test
cmp
enter
js
lret
rorl
lret
repz
mov
pop
aam
pushf
cmp
aad
test
into
or
ror
pop
and
cmp
jge
negb
sbb
push
xor
inc
push
xchg
aaa
mov
scas
pop
ds
fisubs
int3
stc
or
mov
inc
pop
repz
cwtl
and
adc
add
jl
cmpsl
push
sbb
sub
adc
sub
inc
lret
dec
pusha
cmp
or
mov
mov
push
je
adc
jns
aam
mov
push
popl
mov
mov
out
negl
pop
cmp
cmp
fmul
fimuls
xor
rcrl
jecxz
mov
sbb
loop
xor
lcall
mov
pusha
mov
int
outsb
xlat
rorb
dec
mov
mov
jns
ds
inc
adc
dec
adc
negl
popa
pop
icebp
rcll
test
adcb
loop
jnp
dec
cltd
jns
leave
mov
cmpsb
mov
je
adc
inc
push
dec
sub
fstl
xchg
lds
sbb
loope
push
pop
mov
pusha
addl
push
push
fs
inc
imul
pop
outsl
and
shll
or
outsb
out
push
test
lret
mov
mov
push
mov
mov
test
imul
in
cmp
jne
js
adc
fcoml
push
rcll
sub
loop
ret
jns
sbb
lock
fadds
mov
push
dec
mov
adc
jo
mov
pop
sub
loope
xchg
je
inc
mov
and
mov
sahf
cmpsb
mov
pop
movsl
sbb
adc
push
push
iret
inc
fs
jg
in
test
iret
mov
sti
xchg
sub
mov
ret
and
inc
pop
pop
add
popa
cmp
xchg
push
lds
cmpsl
rolb
fmuls
add
and
add
and
xor
hlt
mov
ficompl
fsubs
stos
lods
sbb
out
sub
cmpsl
add
adc
lcall
gs
cltd
repnz
out
jle
mov
sub
testl
push
lret
xchg
mov
sub
insl
mov
push
icebp
movsb
mov
fucomip
fistpl
cmp
mov
sub
pop
loope
and
movsl
insl
mov
pop
mov
enter
mov
sbb
jns
stos
outsl
mov
rol
jae
push
adc
fisubs
jp
or
jns
iret
test
out
lods
xchg
xor
mov
stc
mov
out
jp
sub
adc
lea
bound
mov
sub
in
push
movsl
ljmp
xor
push
or
bound
jno
mov
dec
subps
pop
out
test
dec
stos
stos
inc
std
cltd
pop
pop
lods
in
pop
mov
pop
jno
imul
xchg
cli
xchg
inc
or
mov
faddp
pop
mov
adc
fildl
mov
inc
push
add
inc
push
ret
in
mov
push
jl
jb
test
jmp
mov
inc
sub
scas
jp
popa
into
fidivl
int
jns
stos
inc
das
or
mov
aam
in
push
push
rol
cmp
es
ljmp
lods
jb
outsl
sub
add
fxch
test
clc
xchg
repnz
jge
cwtl
scas
xchg
lea
dec
dec
push
inc
into
loop
jb
xor
nop
mov
mov
dec
cmp
xchg
xor
in
push
xchg
stos
mul
jecxz
mov
stos
or
dec
push
outsb
or
xchg
add
sbb
test
in
dec
in
fcoml
xor
mov
dec
mov
push
bound
xchg
push
inc
mulb
cmp
mov
sub
popf
leave
cmp
pop
mov
mov
cltd
inc
lcall
test
mov
out
dec
sbb
xchg
fstl
out
imul
mov
enter
pop
clc
push
sahf
jbe
leave
sub
and
and
cld
jo
dec
or
into
pop
cld
aam
mov
bswap
xor
in
in
in
mov
and
mov
jnp
pop
mov
adc
and
mov
cmp
lret
aaa
add
push
sarl
faddp
jo
es
fsubrs
push
and
orl
or
cmp
gs
push
fnop
mov
in
inc
lods
clc
push
jne
adc
cmp
mov
cmp
and
in
rcrl
rorb
pop
jmp
add
push
sbb
into
inc
ret
dec
mov
fsub
adc
jge
test
mov
loopne
mov
xor
sub
jo
jg
dec
push
andb
ljmp
iret
pushf
pop
mov
outsb
mov
lea
popa
or
mov
add
movl
imul
es
es
fisttps
aam
das
icebp
sbb
daa
cmp
sbb
aam
ret
pop
xchg
outsl
ds
lret
jb
mov
push
add
mov
das
xchg
test
fnstenv
in
push
jnp
into
mov
ja
rcr
subl
pop
and
out
jbe
lods
and
mov
inc
test
sbb
sbb
push
rcll
add
cmp
mov
outsl
inc
test
mov
add
pop
dec
out
inc
cmpsl
inc
lret
subb
xchg
addb
dec
js
aas
push
dec
outsl
adc
push
cmp
std
and
in
xor
inc
adc
xchg
jl
dec
hlt
add
cwtl
lods
and
adc
add
xor
hlt
icebp
pop
and
sub
int
sbb
into
mov
cmp
aaa
insl
push
xchg
ficoms
in
addr16
pop
fidivl
jns,pn
inc
cmp
dec
inc
xchg
dec
sub
push
imul
dec
fxch
add
repz
sti
sti
mov
jbe
xor
add
jns
mov
packssdw
movsl
adc
pop
jnp
repz
loope
inc
adc
nop
and
jbe
ds
add
mov
ret
jne
sub
mov
pop
leave
cmp
dec
xorl
and
sahf
bound
test
stc
outsb
or
shrl
jge
aaa
and
mov
pop
fwait
xlat
es
jne
pop
dec
mov
sbb
addb
nop
inc
call
aaa
movsl
jne
outsb
mov
mov
pop
pop
lret
fcoml
push
cmpsb
cmp
into
or
cmp
std
sub
daa
dec
xchg
les
jo
nopl
fimull
xchg
adc
push
mov
movsb
out
orl
xlat
add
repnz
mov
pop
mov
push
xchg
adc
mov
jne
jae
lret
loope
frstor
cltd
sub
adc
out
pop
inc
ljmp
inc
or
sahf
icebp
lret
or
in
dec
dec
fnsave
mov
into
add
nop
inc
and
ja
pop
popf
out
inc
leave
bound
jl
rolb
callw
fimull
fs
jne
jp
jnp
pop
mov
pop
jmp
call
fwait
dec
imul
dec
es
add
stos
pusha
nop
mov
adc
roll
addr16
xor
dec
out
jae
mov
mov
hlt
lcall
xor
jae
lret
mov
insl
xor
popa
in
test
xchg
aad
xchg
jno
pop
mov
scas
testb
lock
push
pop
addr16
mov
sti
cld
repnz
insl
in
xchg
inc
test
mov
lahf
daa
shl
fwait
jp
shll
test
mov
inc
int3
aam
xorl
jnp
xchg
and
aad
inc
icebp
shll
outsb
dec
outsl
adc
adc
cmp
ficomps
cmp
jmp
test
jb
rcll
scas
pop
mov
test
loop
sub
sub
pop
aaa
push
scas
dec
dec
out
test
ss
test
cs
dec
cmp
push
mov
jno
fildl
mov
jl
jp
idiv
pop
bsf
cld
lock
int3
cmp
jp
fdiv
ret
mov
out
cmp
hlt
mov
sub
rcrb
push
ss
inc
fstpl
sbb
push
push
mov
es
cmpsl
ret
sbb
aam
dec
enter
lret
and
pop
jbe
insb
mov
push
mov
cld
lods
sbb
adc
mov
iret
cmp
pusha
outsb
and
push
insb
inc
movsl
shrl
ss
or
add
sbb
imul
xchg
test
dec
in
adc
fincstp
test
test
fcoms
in
sbb
xchg
mov
orl
into
je
lods
fcomps
pop
rclb
push
cmp
xor
out
cmp
adc
pop
mov
fmull
ret
mov
mov
push
sub
jnp
xchg
adc
imul
addr16
inc
adc
loope
mov
jl
ret
das
ret
sbb
adcb
jl
or
popl
sub
xor
jecxz
sbbb
sbb
outsb
outsb
sub
dec
mov
enter
adc
mov
out
inc
push
push
xchg
call
add
ja
shl
and
movsb
loopne
in
out
lods
xor
mov
adc
not
mov
xchg
jle
pop
incl
xor
fstl
cmp
mov
neg
adc
and
scas
lret
fistpl
movsb
mov
out
out
stc
faddl
xor
pop
or
scas
lret
push
stos
cmp
das
movsl
xor
pop
push
mov
mov
inc
jmp
adc
cmp
test
dec
xor
sarb
mov
addl
stc
and
ss
and
cli
mov
and
cwtl
mov
and
adc
lock
add
pop
sub
lods
sbb
loopne
jmp
movsb
or
mov
adc
sub
jecxz
icebp
repnz
xor
xchg
lods
icebp
imul
imul
iret
push
cwtl
int3
cs
sub
sbb
inc
fsubrs
repnz
push
dec
pop
jg
mov
enter
mov
pop
cmp
in
push
mov
pop
inc
in
sti
lret
pop
xchg
sub
dec
xor
adc
test
sbb
jno
sub
xchg
es
mov
aam
and
cmpsb
pop
sub
adc
dec
repnz
repz
lods
in
xchg
mov
ds
inc
mov
rorl
sub
test
shll
aam
rorb
ud0
inc
xlat
xchg
test
mov
sub
scas
inc
jnp
ret
rcrl
arpl
mov
loope
addr16
and
ja
sub
outsl
jecxz
inc
ss
xchg
pop
stos
dec
pop
jge
shl
sbb
ffreep
push
cmpsb
bound
cmp
push
and
mov
sbb
jle
fistl
int
xchg
lods
mov
xchg
cwtl
lods
insl
mov
popa
stos
or
or
dec
xor
jmp
aam
movsl
into
insb
insl
mov
jne
movsb
cltd
jo
mov
jne
mov
pushf
stos
lahf
add
dec
out
imul
pusha
push
mov
ss
jmp
repnz
lds
jns
or
out
cmp
js
sbb
cmp
jl
and
ljmp
cmp
mov
adc
inc
test
out
inc
fistl
test
aad
mov
cli
iret
addr16
ds
cli
jmp
push
push
into
mov
jb
ss
outsl
gs
mov
in
cld
mov
xchg
lock
loop
dec
fwait
out
sub
sub
mov
cmp
fsubr
mov
mov
lds
cmc
and
aam
cmp
push
iret
sbb
adc
sbb
jb
pop
aas
mov
mov
mov
xchg
xor
xchg
pop
adc
sarb
pop
and
xchg
jbe
sub
aam
imul
in
je
sbb
push
aaa
mov
ljmp
mov
repnz
sub
pop
xchg
clc
and
lea
push
xor
cmpsl
pop
mov
adc
subb
fistl
out
das
pop
mov
push
rcrl
mov
in
mov
addb
lret
adc
push
ret
jbe
in
bound
fcoms
les
and
sub
mov
dec
dec
loop
jge
ret
cmp
jb
cmp
call
xor
jmp
sub
incb
sub
sti
dec
dec
push
and
test
mov
cwtl
pushf
adc
cmpsl
adc
or
push
xchg
pop
mov
out
adcl
push
imull
cmp
std
hlt
pop
pop
push
movsl
in
or
out
inc
mov
xor
shlb
adc
pop
cmp
mov
cwtl
push
xor
call
test
cmpsl
out
or
push
pop
sarb
dec
lods
pop
addr16
ljmp
divb
orl
inc
xchg
repnz
cltd
push
sbb
pop
cmp
push
push
ljmp
addr16
xchg
arpl
inc
mov
scas
insl
add
js
in
ds
in
lret
andl
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
push
mov
std
fdivl
adc
add
add
fsubp
cld
movsb
mov
mov
mov
movzbl
shl
or
shl
incl
mov
jmp
mov
mov
mov
jmp
lea
jmp
jae
mov
mov
jmp
push
jmp
lea
mov
jmp
xor
mov
xor
sbb
lea
jmp
sbb
mov
add
mov
lods
sub
sub
mov
stos
adc
movzbl
lods
adc
stos
mov
mov
mov
jmp
add
shl
andl
jmp
mov
lods
jmp
push
pushl
jmp
lea
add
mov
mov
jmp
cmp
jmp
sub
movl
mov
mov
mov
movl
sub
mov
mov
movl
mov
dec
lea
addb
push
dec
jmp
mov
add
test
mov
jmp
pop
test
jne
jmp
add
cmpl
mov
jmp
mov
mov
jmp
push
lea
jmp
shl
jmp
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
jmp
mov
mov
mov
jmp
mov
lea
jmp
mov
mov
mov
mov
movl
cmp
jne
mov
subb
dec
mov
mov
lea
sub
add
mov
jmp
cmp
jge
mov
jmp
sub
add
push
push
push
push
push
mov
mov
call
add
add
dec
je
add
pop
add
mov
mov
mov
mov
mov
push
pushl
mov
cmpb
jne
mov
mov
add
call
mov
mov
call
mov
call
mov
shl
push
mov
push
call
jmp
roll
mov
cmpb
jne
mov
mov
call
jmp
mov
mov
mov
mov
xchg
call
cmpl
jne
cmpl
jl
add
mov
fdivs
rcrb
mov
push
lea
mov
rorl
dec
hlt
mov
add
jmp
mov
mov
sub
shr
add
jmp
pushl
mov
add
pushl
mov
call
jmp
push
lea
push
jmp
push
push
push
call
jmp
dec
and
jmp
mov
mov
jmp
mov
jmp
mov
sbb
xor
mov
mov
jmp
mov
lods
add
stos
addl
add
mov
jmp
lea
mov
push
movl
addb
sbb
push
addl
push
jmp
cmp
jae
mov
mov
sub
shr
jmp
mov
shr
sub
jmp
push
mov
jmp
cmpl
jne
adc
add
addb
mov
mov
adc
mov
mov
mov
adc
jmp
mov
call
mov
add
mov
push
add
jmp
sbb
sub
xor
push
mov
push
movb
pushl
jmp
incl
mov
jmp
mov
add
add
sub
jmp
mov
shr
sub
mov
jmp
lea
jmp
jae
mov
jmp
repz
pop
je
jmp
incl
jmp
cmp
jmp
shl
or
jmp
incl
jmp
mov
shr
jmp
test
je
jmp
mov
mov
jmp
shl
incl
jmp
lea
jmp
mov
jmp
push
xor
movswl
call
mov
test
je
adc
jmp
pop
inc
add
jmp
lea
jae
jmp
mov
add
test
je
add
mov
inc
mov
add
mov
mov
mov
call
mov
lea
addb
push
mov
sub
pushl
add
push
mov
movl
mov
jmp
mov
leave
ret
cmp
jae
jmp
call
test
je
push
mov
jmp
cmpl
jge
subl
jmp
mov
push
inc
add
mov
xor
mov
call
mov
push
roll
call
test
je
pop
ret
push
push
pop
pop
pop
pop
sub
add
sub
jb
jmp
and
add
push
push
mov
mov
jmp
xor
push
mov
add
push
test
js
push
pushl
mov
incl
or
pop
ret
mov
call
mov
jmp
mov
test
je
mov
call
jmp
cmp
adc
test
add
add
call
shl
push
call
mov
call
jmp
cmp
jne
sti
mov
mov
xor
add
mov
jmp
push
add
mov
add
push
lea
push
jmp
mov
sub
cmp
jmp
mov
mov
mov
call
ret
call
dec
jg
sub
add
mov
mov
incl
pop
ret
shl
push
call
ret
mov
incl
mov
mov
incl
pop
ret
mov
xor
sub
add
jmp
cmp
jne
mov
call
pop
pop
ret
push
ret
pop
add
inc
jne
xor
jmp
xor
pop
pop
ret
push
push
push
mov
and
add
js
add
test
jne
call
test
mov
test
je
mov
call
cmp
cmp
add
loopne
mov
mov
call
lea
mov
call
push
mov
adc
call
jmp
mov
mov
mov
add
adc
mov
sbb
lods
xor
stos
add
jmp
imul
cmp
jmp
push
mov
add
jmp
sub
adc
jmp
movsbl
je
lea
lea
jmp
mov
mov
jmp
add
cwtl
push
push
push
push
lea
call
ret
lea
mov
mov
mov
mov
xor
pop
pop
mov
add
add
shlb
pusha
pop
add
call
movb
lea
mov
call
mov
call
mov
mov
mov
xor
push
push
lea
call
mov
jmp
add
mov
inc
and
push
push
push
call
pop
mov
push
pushl
mov
pop
mov
mov
call
push
push
mov
mov
mov
mov
xchg
cld
cmp
add
push
lea
call
pop
pop
ret
pop
ret
mov
incl
mov
shr
jmp
jae
jmp
mov
jmp
mov
shr
sub
mov
lea
jmp
mov
add
jmp
inc
push
push
mov
call
mov
jmp
je
mov
sbb
mov
xor
mov
xor
jmp
rep
jmp
or
shl
incl
mov
jmp
mov
jmp
shl
incl
mov
jmp
mov
add
jmp
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
jmp
sub
mov
mov
subb
mov
mov
movswl
jmp
xor
jmp
push
push
pop
jmp
dec
jne
jmp
cmp
jmp
addl
mov
mov
adc
sbb
jmp
mov
jmp
mov
mov
jmp
shl
or
incl
mov
jmp
mov
lea
movl
jmp
push
xor
call
jmp
shr
imul
cmp
jmp
lea
stos
jmp
add
mov
jmp
mov
sub
mov
jmp
mov
jmp
mov
cmp
jmp
mov
mov
movzbl
shl
or
jmp
rep
mov
mov
pop
movb
jmp
movl
jmp
sub
adc
test
jmp
mov
shr
sub
jmp
adc
movzbl
movzbl
push
lea
mov
adc
sub
lea
jmp
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
mov
jge
addl
jmp
mov
movzbl
shl
or
jmp
sub
sub
mov
shr
jmp
add
movb
add
jmp
je
mov
push
jmp
mov
mov
mov
mov
mov
mov
jge
andl
jmp
mov
ljmp
cmp
pop
ret
incl
ret
mov
incl
add
mov
movb
decl
add
add
add
call
add
pop
lea
call
mov
mov
jne
mov
call
ret
lea
add
or
mov
push
push
push
mov
push
call
jmp
mov
adc
and
and
add
add
xor
push
push
call
mov
xor
mov
xor
push
pop
pop
pop
ret
xor
push
mov
push
push
push
push
xor
push
push
push
push
sub
popa
add
pop
ret
mov
dec
jge
cmp
jge
xor
push
push
mov
js
add
mov
jmp
adc
add
jmp
mov
mov
and
jmp
movb
sub
xor
mov
jmp
pop
dec
jne
mov
jmp
add
jmp
mov
push
mov
pop
pop
pop
ret
mov
xor
pop
pop
cmpb
jne
mov
add
jmp
and
mov
mov
xor
push
push
cmp
inc
mov
inc
add
mov
call
mov
mov
lea
mov
mov
call
test
jne
mov
adc
nop
sub
add
sbb
add
mov
push
push
je
push
mov
mov
pop
pop
ret
mov
push
sub
push
call
jmp
pop
pop
pop
ret
lea
mov
mov
call
mov
push
call
rolb
pop
pop
pop
ret
pop
pop
pop
pop
pop
pop
pop
pop
ret
push
ret
mov
push
push
push
push
push
mov
push
push
mov
movl
mov
stos
add
sub
sbb
jmp
mov
movb
mov
sub
mov
mov
jmp
jmp
movl
jmp
add
mov
cmpb
jne
xor
pop
call
jmp
ret
call
pop
xor
push
mov
add
call
cmpl
jne
mov
mov
lea
mov
mov
call
mov
ret
push
rolb
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
incl
mov
test
je
ret
push
push
mov
call
xor
mov
test
je
mov
mov
call
pop
pop
pop
ret
pop
ret
movl
jmp
mov
adc
inc
add
add
add
dec
je
push
push
lea
mov
call
mov
sbb
push
mov
cmp
mov
mov
mov
cmp
jmp
test
jne
mov
jmp
mov
mov
mov
xor
rep
subb
pop
jmp
cmp
jmp
mov
jmp
mov
jmp
movb
add
sub
mov
mov
mov
jmp
mov
mov
jmp
mov
inc
movzwl
mov
add
xor
jmp
je
sub
add
stos
jmp
add
je
cmpl
je
test
je
push
push
push
push
add
push
push
push
push
push
push
mov
mov
mov
xor
push
test
je
push
fs
mov
push
push
pop
mov
push
pushl
mov
incl
adc
inc
add
add
call
xor
pop
pop
push
mov
xor
push
add
shll
dec
je
cmp
je
mov
call
ret
push
push
pushl
mov
incl
xor
pop
mov
cmp
je
cmp
je
mov
mov
call
xor
push
mov
add
push
push
mov
mov
cmpb
inc
add
add
shr
ret
pop
call
mov
add
xorl
ret
sub
or
inc
and
inc
and
call
pop
pop
test
jne
push
jmp
push
pushl
mov
incl
mov
push
mov
and
adc
jmp
mov
test
je
mov
pop
ret
xor
ret
mov
inc
test
sub
add
je
add
call
test
jne
mov
call
rolb
adc
aas
add
push
call
sub
jb
inc
add
shlb
and
movsb
sbb
add
fs
sub
push
mov
cmpb
mov
dec
add
pushl
mov
lea
push
mov
add
push
call
popl
add
push
push
mov
mov
push
pop
jmp
mov
xor
add
jmp
cmp
jmp
rep
movswl
mov
mov
sbb
jmp
mov
sub
movzwl
add
jmp
lea
jae
jmp
mov
jge
shl
mov
sub
mov
lea
jmp
subl
jmp
add
jnp
add
add
xor
pop
pop
ret
add
push
push
push
mov
pop
mov
mov
push
xor
push
add
add
nop
inc
add
cmpb
je
ret
jb
jmp
cmp
je
mov
mov
mov
call
je
cmp
jne
mov
inc
cmp
jbe
mov
mov
inc
inc
cmp
ja
ret
mov
call
je
mov
call
mov
xor
push
mov
add
pop
ret
test
push
mov
mov
test
je
mov
mov
movb
incl
add
mov
movb
incl
pop
ret
mov
pop
mov
mov
call
pop
pop
pop
ret
pop
ret
movl
jmp
mov
mov
shr
jmp
sub
inc
add
jmp
mov
push
mov
mov
push
add
mov
jmp
cmp
jmp
mov
mov
shr
jmp
mov
add
shl
movl
jmp
stos
mov
mov
jmp
mov
mov
jmp
imul
cmp
jae
mov
mov
jmp
mov
jmp
je
and
jmp
mov
add
mov
cmpb
je
mov
mov
push
mov
mov
push
mov
mov
mov
mov
incl
pop
ret
sub
jb
jmp
and
mov
mov
push
sub
add
call
mov
mov
call
test
jne
xor
pop
ret
add
call
mov
sub
add
ret
lea
mov
mov
mov
mov
xor
pop
pop
mov
push
pushl
mov
incl
inc
add
hlt
inc
add
mov
pop
pop
ret
lea
call
jmp
cmp
jne
mov
call
inc
add
sub
incl
add
mov
incl
xor
pop
mov
push
push
push
push
mov
add
jbe
mov
jmp
sbb
lea
jmp
mov
jmp
mov
rcrb
push
push
push
push
mov
mov
mov
mov
mov
call
pop
mov
call
pop
pop
pop
ret
push
mov
pop
ret
push
pushl
mov
incl
sub
add
jne
add
mov
call
ret
mov
les
fdivs
rcrb
pop
pop
pop
jne
xor
push
push
decl
test
mov
push
mov
mov
mov
add
call
jmp
mov
push
push
push
mov
xor
sbb
cli
fdivs
mov
call
mov
ret
jne
sbb
jmp
lea
push
push
lea
push
call
jmp
mov
push
push
pop
push
push
mov
sub
mov
shr
jmp
mov
push
mov
push
mov
inc
jmp
add
jmp
mov
jne
xor
pop
pop
call
pop
pop
pop
pop
pop
ret
xor
pop
pop
mov
push
lea
mov
xlat
test
je
push
pushl
mov
mov
mov
pop
pop
push
push
push
push
add
push
push
push
push
add
push
push
push
push
mov
push
mov
test
jle
mov
pop
inc
inc
cmp
ja
mov
cmp
jne
cmpl
jl
mov
call
ret
mov
add
push
call
ret
mov
test
js
sar
push
pushl
mov
cmpb
rolb
incl
xor
push
push
cmpb
je
cmp
je
jmp
mov
mov
fcmovb
inc
add
rcrb
push
push
push
push
mov
mov
mov
mov
mov
call
pop
mov
call
add
add
sbb
mov
sbb
jmp
sub
mov
jmp
add
mov
add
mov
sub
jmp
add
inc
mov
adc
add
mov
movzbl
add
mov
jmp
pushl
jmp
sub
sub
mov
jmp
cmp
jae
mov
mov
sub
jmp
jae
jmp
shr
add
mov
jmp
add
pushl
sub
mov
mov
call
jmp
inc
jmp
mov
mov
jmp
mov
mov
sub
shr
add
mov
add
jmp
jmp
jae
mov
mov
jmp
sub
jmp
mov
movzbl
jmp
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
mov
inc
je
nop
sub
add
ret
mov
sub
add
mov
pop
pop
pop
pop
pop
pop
pop
pop
ret
jmp
xor
add
mov
add
push
push
push
push
lea
call
ret
lea
mov
mov
mov
mov
xor
pop
mov
dec
add
cmp
jbe
mov
mov
inc
inc
cmp
ja
mov
cmp
jbe
cmpb
jne
mov
roll
sbb
rclb
and
xor
mov
add
mov
xor
push
mov
push
push
mov
sbb
add
lea
push
push
lea
push
mov
push
call
inc
and
add
jne
push
push
lea
push
mov
push
call
stc
cmp
jae
jmp
inc
inc
dec
jne
jmp
movzbl
shl
jmp
mov
jl
jmp
test
mov
mov
lea
je
jmp
inc
addl
sub
subl
dec
jne
mov
jmp
cmp
je
jmp
mov
mov
jmp
jmp
mov
mov
shr
imul
cmp
jae
jmp
sub
cmp
jmp
mov
sub
add
jmp
push
mov
call
mov
mov
addl
addl
jmp
mov
pop
ret
jge
xor
pop
pop
ret
push
mov
xor
pop
pop
ret
push
push
push
push
mov
push
push
push
mov
mov
mov
test
je
mov
mov
mov
add
ja
ret
mov
call
lea
mov
call
jmp
mov
call
mov
push
mov
push
push
add
add
push
push
pushl
mov
incl
xor
pop
pop
mov
push
call
ret
pop
ret
add
rcrb
or
jne
xor
pop
pop
xor
jmp
pop
pop
pop
ret
movl
call
ret
pop
ret
pop
pop
pop
pop
pop
mov
pop
ret
push
ret
push
push
mov
mov
mov
sub
aaa
add
jmp
and
push
lea
push
push
push
fisttpl
stc
adc
add
inc
clc
dec
mov
jne
jmp
mov
lea
jmp
mov
call
xor
pop
pop
mov
push
lea
mov
mov
mov
inc
add
push
push
push
mov
mov
mov
je
sub
je
mov
call
jmp
xor
pop
ret
xor
pop
pop
mov
inc
fcoml
mov
mov
mov
xor
mov
push
mov
call
sbb
add
push
cmp
add
mov
ret
cmp
ret
push
call
mov
mov
xor
add
jmp
cmp
je
mov
cmp
je
lea
cli
rolb
add
mov
push
call
shl
push
lea
call
push
call
jmp
mov
mov
movzbl
jmp
mov
movzbl
jmp
sub
cmp
mov
mov
mov
lea
jae
mov
jmp
push
push
call
lea
jmp
mov
mov
jmp
xor
movswl
jmp
mov
adc
pushl
mov
jmp
mov
mov
xor
sarl
mov
call
mov
push
mov
mov
push
push
call
mov
sub
je
lea
je
dec
je
cmp
je
mov
pop
ret
pop
ret
pop
ret
mov
push
pushl
mov
cmpb
jne
xor
pop
mov
mov
mov
call
ret
ret
or
mov
sub
add
mov
call
xor
jmp
ret
pop
call
mov
add
sub
jb
mov
push
mov
add
add
cmp
jae
mov
call
pop
call
push
call
lea
mov
mov
call
jmp
add
cmp
add
test
je
push
pushl
mov
addl
jmp
mov
adc
mov
mov
mov
jmp
mov
add
jmp
decl
jne
jmp
mov
subl
push
xor
cmp
jne
mov
sub
adc
jmp
push
mov
adc
mov
push
mov
push
jmp
cmp
jae
mov
mov
jmp
add
mov
jmp
cmp
jl
jmp
sub
subl
mov
mov
mov
sub
mov
jmp
xor
jmp
sub
mov
add
movl
movl
jmp
mov
mov
sub
shr
add
jmp
mov
jmp
mov
mov
pop
adc
movzbl
mov
mov
sbb
sub
jmp
push
push
jmp
sub
shr
add
mov
add
jmp
jmp
movzwl
push
mov
shr
mov
and
add
add
jmp
cmpl
setge
jmp
mov
mov
sub
shr
add
mov
add
jmp
add
inc
jae
add
in
inc
enter
add
xor
mov
push
ret
sub
jb
jmp
cmp
jne
mov
ret
mov
cmp
ja
mov
mov
call
mov
add
test
shlb
push
call
pop
ret
incl
pop
ret
mov
sub
sub
mov
inc
clc
mov
xor
pop
pop
ret
jae
loop
cmpb
je
mov
mov
call
inc
add
adc
shlb
call
pop
mov
push
rolb
or
add
or
cwtl
call
jmp
or
pop
mov
pop
ret
pop
mov
push
pushl
mov
mov
xor
push
pop
pop
pop
ret
xor
push
mov
push
push
push
push
xor
push
mov
test
je
mov
call
test
je
mov
sub
insb
mov
jmp
push
push
call
xor
push
push
aaa
add
mov
push
call
test
je
push
push
push
mov
mov
add
or
add
add
add
add
add
incl
andb
rolb
xchg
xor
pop
pop
pop
pop
mov
call
pop
ret
sub
shr
jmp
mov
test
je
jmp
xor
push
mov
mov
xor
jmp
sub
mov
jmp
sub
mov
or
test
je
mov
push
call
mov
push
mov
push
call
pop
pop
ret
sub
ud1
and
add
add
mov
call
test
jne
ret
or
mov
adc
add
call
xor
push
push
lea
mov
push
lea
call
inc
add
ret
mov
mov
call
mov
call
mov
les
add
push
mov
mov
cmpb
jne
ret
mov
mov
mov
add
mov
mov
mov
pop
pop
pop
mov
push
pushl
mov
mov
mov
jae
mov
jmp
xor
adc
mov
jmp
mov
jmp
inc
mov
mov
jmp
mov
lea
call
sbb
mov
mov
mov
subb
mov
mov
inc
mov
jmp
mov
mov
add
dec
xor
inc
mov
lea
lea
cmpl
jne
sub
jmp
lea
jae
mov
jmp
shl
or
shl
jmp
mov
mov
mov
dec
jmp
mov
jmp
lea
jmp
je
mov
jmp
incl
mov
jmp
lods
test
jmp
sub
mov
shr
sub
mov
sub
jmp
mov
jmp
shl
or
jmp
mov
movzbl
shl
or
shl
incl
mov
jmp
mov
sbb
jmp
mov
inc
jmp
mov
push
sub
call
movl
jmp
mov
mov
jmp
adc
mov
test
jmp
mov
mov
mov
sbb
mov
sub
jmp
sbb
sub
mov
jmp
inc
lea
jmp
sub
jmp
inc
mov
sub
sbb
jmp
add
mov
add
add
add
xor
push
subb
mov
pop
inc
rep
jmp
sub
jmp
mov
add
jmp
mov
je
add
call
mov
call
mov
call
pop
pop
pop
ret
push
mov
call
inc
add
rcrb
mov
push
pushl
mov
incl
xor
push
mov
push
pop
pop
ret
jmp
pop
pop
pop
ret
add
mov
push
pushl
mov
incl
xor
pop
pop
push
push
push
push
add
push
push
add
pop
pop
ret
mov
mov
call
pop
pop
mov
push
lea
call
fisttps
add
pop
pop
pop
ret
test
je
call
test
je
mov
jmp
add
add
push
push
mov
pop
ret
pop
mov
mov
jmp
shr
jmp
mov
push
ret
push
push
push
mov
mov
test
je
pop
pop
pop
ret
pop
pop
pop
ret
push
push
mov
mov
add
pop
ret
dec
je
mov
call
pop
pop
pop
mov
pop
ret
pop
ret
push
push
jbe
inc
add
mov
rclb
push
mov
push
or
je
mov
ret
pop
ret
push
push
pushl
mov
mov
cmp
cmpl
jne
mov
call
lea
mov
cmp
add
mov
call
xor
mov
cmpb
cmp
add
jne
ret
jae
mov
call
push
push
push
mov
mov
jmp
mov
cmp
je
test
idiv
incl
add
add
into
mov
mov
sub
add
adc
jmp
mov
mov
shr
imul
jmp
subl
sbb
dec
jne
jmp
mov
mov
jmp
subl
mov
inc
jmp
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
jmp
mov
lea
rep
sub
inc
mov
pop
add
mov
jmp
incl
inc
test
mov
mov
jne
jmp
mov
repnz
xor
push
push
pushl
mov
incl
rolb
shlb
pop
ret
xor
ret
mov
xor
push
push
lea
xor
push
call
pop
ret
jne
cmpb
je
mov
mov
lea
call
inc
add
sbb
pushf
xor
push
push
mov
push
call
mov
jmp
cmp
mov
pop
pop
pop
pop
add
jl
in
cld
jne
add
push
push
push
mov
mov
jmp
mov
call
push
xor
pop
pop
mov
ret
add
inc
and
push
lea
call
test
jne
pop
pop
pop
ret
push
ret
push
push
push
push
mov
add
push
push
push
mov
jge
sub
jmp
dec
jne
jmp
add
jmp
sub
xor
adc
mov
mov
rclb
cmpl
add
pusha
test
jne
add
push
add
pop
pop
pop
ret
pushl
mov
lea
mov
call
pop
mov
jae
mov
mov
mov
jmp
mov
call
mov
cmp
mov
pop
ret
pop
ret
jne
mov
mov
call
ret
jne
xor
pop
pop
mov
push
mov
pop
pop
pop
ret
cmp
jge
movl
jmp
mov
call
ret
mov
sub
add
mov
add
je
mov
pop
pop
ret
pop
ret
xor
push
push
pushl
mov
mov
mov
call
jne
mov
jmp
rolb
add
mov
jmp
pop
sub
mov
mov
pop
inc
jmp
test
je
jmp
mov
mov
test
je
test
jmp
mov
mov
or
pop
jmp
jne
jmp
add
pushl
mov
mov
call
pop
mov
pop
pop
pop
mov
push
lea
and
push
pushl
mov
cmpb
je
sub
fdivs
rcrb
push
sbb
inc
faddl
dec
jae
hlt
adc
add
xlat
pop
mov
mov
xor
mov
add
incl
xor
pop
pop
je
mov
pop
pop
pop
pop
ret
mov
mov
pop
add
call
mov
call
jmp
push
push
push
push
push
push
push
sahf
rolb
add
je
sub
je
push
push
push
call
test
jne
mov
jge
inc
and
jmp
sub
mov
shr
jmp
mov
movzbl
shl
or
shl
jmp
push
adc
mov
push
mov
add
jmp
mov
mov
push
movl
sbb
mov
push
lea
mov
mov
pop
jmp
shr
add
movzbl
imul
xor
mov
mov
inc
cmpl
lea
mov
mov
jl
mov
sub
mov
movzbl
mov
jmp
add
addb
mov
jmp
mov
movzbl
shl
or
shl
incl
mov
jmp
sub
mov
lea
jmp
mov
xor
mov
jmp
sub
mov
mov
jne
pop
pop
pop
ret
pop
ret
mov
call
mov
mov
xor
push
mov
add
pop
ret
call
mov
mov
call
lea
mov
rolb
add
call
cmp
jbe
call
mov
add
call
mov
call
mov
mov
pop
mov
fmull
ja
mov
test
jne
mov
mov
pop
ret
mov
call
test
je
ret
call
add
add
cld
inc
add
test
je
pop
ret
push
push
pop
pop
pop
pop
mov
push
pushl
mov
sbb
clc
push
mov
push
call
jne
mov
mov
shr
add
cmp
jmp
inc
sub
je
mov
mov
mov
adc
mov
mov
jmp
mov
lea
dec
jmp
sub
xor
addl
jmp
mov
push
call
lea
mov
mov
call
jmp
add
jbe
inc
add
add
mov
incl
sub
push
push
mov
mov
xor
mov
mov
ret
sub
jae
rolb
mov
call
mov
mov
call
leave
adc
add
pop
mov
push
pushl
mov
incl
xor
pop
pop
ret
mov
push
push
mov
add
clc
dec
add
mov
call
xor
push
push
add
pop
je
push
call
test
jne
ret
mov
mov
call
mov
mov
and
shl
add
jmp
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
jmp
movswl
lea
mov
push
adc
mov
jmp
sub
mov
shr
sub
cmp
mov
mov
mov
jmp
mov
inc
mov
jmp
mov
mov
jmp
je
sbb
mov
add
jmp
mov
adc
push
jmp
jne
movl
lea
jmp
dec
mov
movb
jmp
imul
jmp
cmp
jne
jmp
add
dec
jmp
pushl
jmp
mov
shr
jmp
sub
sub
mov
shr
jmp
sub
sub
jmp
xor
cmpl
jmp
mov
add
mov
test
je
add
jmp
sub
push
addb
adc
jmp
mov
sub
jmp
cmp
mov
mov
mov
lea
jae
mov
jmp
add
subb
add
add
jmp
mov
sub
mov
jmp
mov
pushl
jmp
mov
incl
cmpl
mov
mov
jge
jmp
sub
jmp
lea
stos
mov
jmp
xor
jmp
adc
mov
adc
lea
mov
add
inc
lea
jmp
push
mov
mov
lea
call
mov
jmp
mov
jmp
mov
ja
ret
pushl
mov
incl
je
cmp
jne
mov
push
call
ret
dec
test
jl
inc
cmp
ja
mov
add
add
cmp
add
call
ret
mov
pop
ret
mov
mov
call
jmp
test
jne
add
push
orl
sub
jb
sub
jae
mov
mov
xor
push
push
pushl
mov
incl
sub
add
call
ret
mov
mov
sbb
cmp
push
mov
push
push
push
push
mov
mov
ja
mov
add
mov
sti
lods
je
cmp
je
push
call
ret
add
pop
pop
pop
pop
ret
incl
xor
pop
add
lea
jmp
mov
jmp
dec
jne
add
jmp
mov
mov
cmp
jne
jmp
pushl
mov
sub
mov
call
lea
add
lea
jmp
add
jmp
add
inc
jmp
cmp
jae
mov
mov
mov
sub
shr
add
jmp
sub
mov
jmp
adc
mov
lea
mov
push
add
lea
push
jmp
add
jmp
mov
sub
add
lods
pop
pop
ret
mov
call
jne
call
test
je
mov
call
inc
add
repnz
test
je
mov
and
imul
je
add
mov
mov
jmp
xor
push
mov
add
push
test
js
push
rolb
add
mov
mov
test
jne
mov
call
sub
add
sub
jae
mov
add
cmp
jbe
call
mov
mov
call
inc
add
cmp
jae
mov
jmp
cmp
adc
add
or
push
mov
addl
mov
jmp
add
lods
xor
jmp
mov
mov
jmp
shl
incl
mov
jmp
add
push
mov
call
test
jmp
mov
movzbl
jmp
addb
addb
mov
jmp
mov
push
mov
jmp
mov
addl
addl
jmp
sub
mov
mov
mov
jmp
sub
mov
sub
cmpl
jne
mov
mov
jmp
mov
jmp
mov
lea
mov
movzwl
add
push
mov
mov
sbb
jmp
mov
jmp
pushl
pushl
call
pop
jmp
mov
cmp
je
cmp
je
mov
jmp
and
pop
and
mov
sub
cmp
ret
lea
call
pop
pop
ret
mov
push
sub
push
push
push
rolb
add
clc
jne
pop
pop
pop
ret
dec
je
mov
call
xor
pop
pop
je
mov
push
ret
lea
sbb
add
insb
mov
pop
ret
mov
call
test
mov
mov
push
pushl
mov
incl
je
cmpl
mov
or
add
cmp
add
jmp
cmp
jne
xor
pop
mov
mov
jge
call
xor
jne
sub
mov
shr
sub
mov
lea
jmp
mov
je
mov
jmp
shl
jmp
add
jmp
jmp
shr
imul
jmp
sub
mov
sub
mov
shr
sub
or
jmp
shl
lea
movl
jmp
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
mov
rclb
in
xor
push
add
pop
ret
push
push
mov
mov
test
jne
mov
ret
pop
pop
pop
mov
push
mov
push
push
push
push
sub
push
add
call
xor
pop
pop
jne
xor
pop
pop
mov
test
je
mov
call
mov
mov
and
or
add
jo
add
pop
pop
ret
mov
mov
pop
pop
pop
ret
jge
xor
push
push
pushl
mov
incl
inc
roll
jne
ret
pop
pop
ret
push
add
push
push
push
mov
mov
jmp
xor
push
mov
add
push
test
js
push
sub
add
call
test
jne
lea
mov
call
mov
mov
mov
test
cmp
fsubr
in
add
push
push
push
mov
jne
ret
mov
mov
lea
call
xor
push
push
mov
mov
mov
dec
jmp
sub
sub
jmp
lods
add
jmp
lea
sbb
push
mov
mov
lea
dec
mov
xor
jmp
movl
pushl
mov
add
call
sub
push
add
push
mov
sub
pushl
mov
lea
mov
call
add
mov
jmp
shl
or
jmp
mov
sar
and
dec
or
cmp
jmp
addl
mov
xor
lea
jmp
shll
jmp
andl
jmp
add
mov
test
je
jbe
mov
mov
inc
inc
cmp
ja
mov
cmp
jne
movb
jne
ret
mov
mov
call
push
push
push
push
mov
mov
mov
mov
mov
call
mov
mov
sub
add
mov
mov
mov
xor
cmp
mov
mov
call
pop
mov
push
inc
add
adc
add
call
push
xor
pop
pop
mov
push
pushl
mov
lods
arpl
add
jo
add
mov
push
push
pop
push
push
mov
addl
jl
jmp
mov
nop
mov
add
lea
mov
call
mov
mov
call
push
pop
pop
mov
ret
lea
push
call
mov
mov
call
mov
pop
mov
push
pushl
mov
mov
mov
sbb
lea
call
jmp
cmp
jne
mov
test
mov
push
push
mov
pop
ret
jb
mov
mov
pop
mov
push
push
call
sub
jb
sub
jb
sub
jb
jmp
ret
pop
call
mov
add
sub
jb
mov
push
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
xor
jmp
sub
jmp
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
jmp
jae
mov
sub
jmp
inc
jmp
mov
mov
add
test
jmp
mov
mov
jmp
movzbl
shl
or
jmp
push
mov
sub
xor
inc
mov
mov
mov
mov
mov
mov
xor
jmp
mov
shr
imul
cmp
jae
jmp
mov
xor
add
jmp
lea
shr
lea
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
shr
imul
jmp
jb
sub
or
jmp
shll
decl
jne
jmp
mov
add
mov
sub
jb
cmp
jbe
jmp
shr
sub
jmp
sub
sbb
movl
call
mov
mov
dec
mov
mov
mov
dec
jmp
dec
jne
movzwl
jmp
pop
sub
leave
dec
ret
jo
pop
add
sub
add
pop
add
pop
add
sub
add
pop
add
pop
add
pop
add
add
add
add
add
pop
add
xor
add
pop
add
add
pop
add
push
inc
push
dec
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
dec
dec
inc
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
push
inc
push
push
dec
dec
dec
cs
dec
dec
add
sub
add
sub
add
sub
add
sub
add
sub
add
pop
add
pop
add
pop
add
add
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
pop
add
pop
add
pop
add
add
add
add
add
popa
outsb
addr16
gs
imul
imul
inc
gs
arpl
imul
imul
outsb
je
outsl
insb
add
add
inc
gs
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
add
je
jae
jb
popa
insl
gs
add
add
dec
outsb
imul
push
arpl
imul
imul
add
push
gs
gs
gs
push
popa
insb
jne
inc
add
add
addr16
outsb
jne
push
popa
insb
jne
inc
add
add
addr16
jne
jb
dec
outsb
outsw
dec
gs
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
add
push
gs
gs
imul
jne
add
inc
sub
add
pop
add
add
pop
add
pop
add
sub
add
pop
add
sub
add
sub
add
sub
add
sub
pop
add
sub
pop
add
add
pop
add
sub
pop
add
pop
add
sub
pop
add
cs
add
cs
add
pop
add
add
add
pop
add
cs
add
cs
add
cs
add
cs
add
cs
add
das
pop
add
pop
add
das
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
das
pop
add
das
pop
add
das
pop
add
pop
add
pop
add
pop
add
pop
add
add
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pop
add
pop
add
pop
add
pop
add
xor
add
pop
add
pop
add
xor
add
xor
add
xor
add
add
add
pop
add
pop
add
add
pop
add
pop
add
sub
add
pop
add
sub
add
sub
add
sub
add
sub
pop
add
sub
pop
add
add
pop
add
sub
pop
add
pop
add
sub
pop
add
cs
add
cs
add
pop
add
add
add
pop
add
cs
add
cs
add
cs
add
cs
add
cs
add
das
pop
add
pop
add
das
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
das
pop
add
das
pop
add
das
pop
add
pop
add
pop
add
pop
add
pop
add
add
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pop
add
pop
add
pop
add
pop
add
xor
add
pop
add
pop
add
xor
add
xor
add
xor
add
add
add
add
fs
je
insl
inc
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
jo
inc
imul
jb
popa
je
inc
jbe
outsb
je
add
add
inc
jb
popa
je
inc
imul
jb
popa
je
inc
imul
outsb
addr16
add
add
inc
jb
popa
je
dec
jne
gs
add
add
inc
jb
popa
je
push
jb
arpl
jae
add
add
inc
jb
popa
je
push
push
add
add
inc
jb
popa
je
push
outsl
outsl
insb
push
xor
popa
jo
push
add
inc
gs
gs
inc
je
insl
add
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
imul
outsb
je
outsl
insb
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
inc
js
je
jb
arpl
jae
add
inc
js
popa
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
insb
gs
imul
arpl
inc
imul
add
inc
imul
add
add
jb
popa
je
gs
popa
addr16
add
add
inc
gs
push
dec
outsb
outsw
add
add
je
outsl
insl
jo
je
jb
popa
insl
gs
add
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
je
jne
jb
outsb
je
push
add
add
inc
gs
jne
jb
outsb
je
push
dec
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
gs
imul
bound
gs
add
add
inc
gs
jne
insb
push
popa
je
dec
popa
insl
gs
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
jb
arpl
jae
gs
jo
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
je
dec
popa
outsb
fs
add
add
inc
gs
je
imul
inc
add
add
inc
gs
jns
je
insl
push
imul
gs
imul
je
add
add
je
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
add
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
add
inc
gs
gs
imul
add
inc
gs
imul
imul
jns
add
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
inc
jb
add
add
inc
insb
outsl
bound
dec
outsl
arpl
add
add
outsl
bound
push
gs
insb
insb
outsl
arpl
add
dec
gs
jo
gs
jb
jns
add
dec
gs
jo
jb
add
add
dec
gs
jo
imul
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
js
push
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
inc
popa
fs
jb
je
push
je
add
add
popa
jo
je
imul
add
fs
imul
add
add
dec
outsl
arpl
gs
jne
arpl
add
add
jo
imul
insb
add
add
fs
xor
inc
imul
dec
outsl
jbe
inc
imul
add
insb
je
inc
jns
gs
outsl
push
imul
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
push
popa
imul
jo
imul
push
gs
fs
imul
gs
outsl
jbe
inc
imul
jns
add
add
push
gs
je
jbe
outsb
je
add
add
je
jne
jb
outsb
je
imul
jns
add
add
push
gs
jb
outsl
jb
outsl
fs
add
push
gs
jbe
outsb
je
add
add
je
imul
add
push
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
add
push
gs
je
dec
popa
outsb
fs
add
add
push
insb
gs
add
push
jns
je
insl
push
imul
insb
gs
imul
push
insb
jae
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
jb
jne
insb
push
jb
je
arpl
add
push
popa
imul
insb
gs
bound
arpl
add
imul
je
push
jb
imul
imul
add
jb
popa
je
add
add
insb
jae
jb
jo
outsb
inc
add
add
jb
outsb
inc
add
inc
xor
add
pop
add
pop
add
pop
add
add
add
add
pop
add
pop
add
pop
add
add
add
add
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
add
push
popa
jae
dec
gs
inc
jb
add
add
push
outsb
insl
popa
jb
push
je
jb
popa
arpl
add
add
gs
je
inc
imul
add
inc
jb
popa
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
xor
add
pop
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pop
add
pop
add
add
pop
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
pop
add
xor
add
mov
pop
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pop
add
pop
add
add
pop
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
pop
add
xor
add
add
inc
push
gs
add
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
ja
gs
inc
add
add
fs
imul
add
fs
popa
imul
inc
gs
arpl
gs
imul
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
je
inc
add
add
je
insb
addr16
je
insl
add
add
inc
gs
insb
addr16
je
insl
push
gs
inc
add
add
je
jns
je
insl
dec
outsb
jne
add
inc
gs
jns
je
insl
dec
gs
imul
inc
gs
imul
js
inc
add
add
dec
outsb
data16
popa
je
push
arpl
add
fs
jne
jae
jb
add
add
fs
insl
popa
addr16
add
add
dec
gs
popa
addr16
gs
add
dec
gs
popa
addr16
outsl
js
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
add
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
jne
jae
jb
add
push
gs
imul
add
je
imul
jae
add
add
outsl
ja
imul
add
push
jb
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
jae
popa
je
dec
gs
popa
add
add
push
outsb
jb
imul
popa
jae
inc
add
add
ja
jo
imul
xor
pop
add
add
add
pop
add
pop
add
add
add
add
je
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
push
gs
jne
jb
push
popa
insb
jne
inc
