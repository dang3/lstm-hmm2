lea
mov
mov
sub
mov
sub
sub
movzbl
dec
or
add
lea
mov
and
inc
inc
movzbl
add
inc
xor
xor
lea
inc
imul
dec
inc
inc
dec
xor
lea
mov
inc
inc
dec
jne
dec
mov
inc
sub
pop
lea
mov
pop
dec
inc
pop
inc
inc
or
lea
imul
dec
dec
inc
dec
or
lea
add
ret
push
imul
inc
inc
inc
dec
xor
lea
mov
push
push
push
push
dec
inc
inc
push
sub
add
lea
imul
sub
dec
sub
add
or
mov
lea
push
movzbl
dec
xor
dec
dec
push
add
add
push
lea
mov
pushl
dec
call
dec
add
inc
inc
xor
lea
mov
add
dec
pop
ret
and
fdivrl
xchg
punpckldq
int
test
dec
cmpsb
out
or
dec
mov
add
out
xor
and
pop
mov
sbb
lea
aas
clc
cld
sbb
jo
fcmovb
jno
movsb
subb
orl
addr16
adc
lret
and
dec
stc
mov
mov
sub
iret
inc
or
fstpl
lods
and
bound
leave
dec
insl
mov
ljmp
pop
test
mov
icebp
jge
movsb
fstp
pop
bound
push
xchg
xor
adc
ss
gs
fiaddl
popf
adc
call
xchg
or
mov
fbld
addr16
xchg
out
push
inc
sbb
sahf
mov
mov
sahf
incl
jae
mov
and
fsubl
incb
fs
dec
xchg
icebp
sub
cmpsb
pop
inc
stc
xor
fcmove
and
dec
dec
test
mov
inc
push
mov
push
mov
add
mov
nop
mov
lahf
pop
jno
ljmp
push
inc
sahf
test
mov
nop
or
call
ret
mov
jae
out
and
les
mov
movsl
add
cld
cmp
inc
jl
icebp
jns
xchg
mov
mov
lcall
push
sbb
inc
jmp
clc
fstps
scas
adc
push
xchg
sbb
ljmp
and
mov
hlt
sub
push
push
sub
cli
lods
push
andl
xchg
sub
push
test
pop
test
int3
mov
fs
jb
cltd
les
sub
mov
bound
insl
gs
imul
adc
xor
aas
incl
push
xchg
pop
adc
push
add
xchg
lahf
cwtl
add
out
fsub
xchg
int3
jo
js
pushf
dec
inc
int
xchg
or
push
adc
mov
push
fadd
out
or
sub
into
call
arpl
sub
addb
adc
add
push
push
sbb
cld
pop
lea
inc
pushl
out
sbb
shlb
rcrb
dec
pop
xchg
push
dec
mov
sbbb
jge
ja
ja
out
mov
bound
mov
push
xchg
cmp
cmpsl
sbb
and
addr16
push
jl
lods
in
lock
cwtl
sub
int3
scas
stc
jecxz
cwtl
movsl
add
in
mov
sub
sub
cli
stc
popa
sub
inc
cmp
loope
insl
push
or
mov
out
jae
adc
scas
hlt
jg
lea
aas
xchg
or
pop
cmp
xchg
insl
jnp
roll
pslld
mov
adcl
dec
pop
cmp
movsb
push
daa
mov
aaa
enter
stos
and
pop
push
das
mov
adc
sbb
lret
sbb
iret
xor
dec
insb
or
out
and
xchg
pop
test
popa
inc
shrl
add
and
adc
fdivl
xor
ret
stos
adc
mov
mov
jns
insl
lcall
das
into
js
mov
outsl
jbe,pn
shrl
inc
jne
shrb
clc
jge
rorl
jp
xchg
push
out
test
out
push
shr
mov
mov
shrb
ja
adc
and
and
jo
xor
mull
dec
mov
inc
out
daa
lock
or
mulps
mov
pop
sub
jae
rorl
in
jle
jp
jge
mov
push
sbb
jmp
decb
sbb
popa
xor
shrb
leave
ja
call
sub
or
mov
inc
hlt
pop
sub
testb
or
stc
aam
inc
jae
mov
test
cmp
sbb
arpl
cmp
or
and
in
push
dec
pop
push
jp
mov
outsb
andl
filds
pop
rcll
stos
out
lahf
mov
in
addr16
push
lea
adc
out
ja
test
add
jge
in
xchg
mov
negb
xor
es
mov
cmc
dec
mov
xchg
loop
shl
fisubl
cmc
stos
ret
jb
stos
mov
loopne
mov
lds
pop
ds
es
clc
popa
aam
pushf
clc
pop
fsub
cwtl
icebp
testl
pop
adc
scas
and
pop
scas
sbb
lods
nop
movsl
mov
xor
cmp
jge
dec
push
lods
adc
pop
ss
mov
in
call
or
int
xlat
cmp
imul
imul
out
mov
cmpsb
loopne
out
jne
xchg
outsl
roll
lds
push
inc
enter
clc
push
add
add
cld
jne
imul
xlat
out
pop
jle
inc
jl
add
leave
jns
and
shlb
xchg
ds
movsb
aas
xchg
movsb
je
adc
mov
aaa
in
hlt
or
dec
inc
aad
sti
mov
rorl
ror
sbb
dec
sahf
xor
xor
cmpxchg
sub
adc
dec
in
xchg
and
mov
jae
imul
xchg
gs
data16
repz
add
test
jb
jno
adc
rorb
ret
sub
pop
daa
loopne
movsl
xor
data16
scas
das
sti
je
arpl
sub
fbld
icebp
lock
outsb
sub
adc
pop
adc
loope
inc
mov
scas
cmpsb
fsubl
out
out
push
shrb
or
sbb
mov
fists
es
bnd
sub
mov
std
movsb
aaa
xchg
movsl
xor
add
jb
test
mov
das
loopne
loopne
loope
cmpsl
into
push
pop
jle
popa
pop
out
int3
in
mov
sarl
dec
sub
jecxz
lds
mov
dec
int
inc
dec
dec
cmp
call
test
cld
mov
in
jns
mov
add
icebp
or
fisttpll
es
or
and
mov
cmp
repnz
jmp
mov
adc
out
mov
add
mov
mov
fs
mov
inc
push
lods
cmp
loopne
cmp
jg
cmp
test
mov
add
fcoml
out
push
mov
out
push
shll
inc
cmp
mov
push
pusha
push
sub
pop
jp
test
xor
fs
divb
cmp
xchg
mov
cltd
or
lea
adcb
repz
jno
repnz
sub
mov
or
mov
jo
jmp
rorl
fdivrs
negb
cld
inc
inc
mov
push
inc
xchg
cmp
into
xor
cmpsb
scas
icebp
sbb
inc
std
dec
lds
sti
inc
xchg
mov
clc
mov
ljmp
push
xchg
adc
test
mull
loope
sbb
lret
add
xor
fsubrl
in
mov
in
lea
inc
inc
or
mov
and
jne
mov
add
inc
lods
mov
adc
test
or
imul
dec
test
jmp
in
lahf
bound
and
cmpsb
or
dec
cmp
or
fucomi
push
add
imul
rorb
out
xorl
inc
in
in
andb
movsb
stos
scas
pop
jo
repz
int
push
mov
adc
jmp
test
jno
dec
sub
xchg
sbb
jge
cmp
aam
out
mov
mov
jnp
popa
dec
fidivl
mov
enter
push
lea
lods
xor
fwait
mov
fisubs
out
jae
and
push
insl
jnp
sbb
xchg
inc
dec
rorb
push
cmpsl
jmp
sub
mov
ss
inc
ja
mov
push
lock
aas
jge
jbe
sub
ds
loope
popa
lret
push
mov
or
sti
mov
fidivl
jb
fs
mov
ret
loope
pushf
pusha
inc
cli
js
adc
mov
xchg
dec
adcl
mov
jmp
outsb
mov
add
jecxz
js
std
mov
cmp
jmp
mov
arpl
push
add
aas
mull
inc
sbb
or
or
iret
or
mov
in
mov
pop
out
mov
cmpsl
pop
lds
push
jecxz
orb
out
bound
in
jns
mov
lock
sub
decb
xchg
pop
fsubrs
adcb
and
addr16
cmp
xchg
in
jno
xlat
cmp
pop
daa
add
sti
iret
and
repnz
fwait
sub
or
cmpsl
icebp
adc
mov
dec
xchg
dec
cwtl
push
adc
sarb
out
dec
cmp
sub
pop
stos
pop
pop
fbld
loop
imul
adc
jo
mov
ds
xchg
in
push
mov
add
cmp
jp
mov
iret
fstpl
or
mov
xchg
ret
jbe
or
push
cwtl
mov
in
cmpsb
sub
mov
mov
pop
call
das
test
pop
notb
pop
enter
and
inc
in
or
loope
or
nop
pop
hlt
sbb
add
add
in
xchg
dec
mov
ljmp
xchg
dec
stos
ss
cmp
repnz
ret
addb
in
fmul
xchg
sarb
lret
dec
mov
lret
pop
stc
or
loope
mov
jbe
adc
push
out
vlddqu
lock
xchg
cmpsb
push
inc
pop
test
add
mov
ljmp
and
loope
or
or
int3
sbb
xchg
push
mov
call
dec
into
push
and
das
test
xor
xchg
push
jecxz
pop
jo
sub
scas
subb
imul
sub
fs
or
in
imul
inc
push
push
rcl
mov
xor
mov
or
stos
dec
xor
testb
adc
jl
mov
bound
fs
xor
jg
adc
out
add
dec
and
insl
pusha
into
adc
mov
mov
fcmovbe
aas
in
mov
pusha
sbb
out
daa
inc
ret
pop
lcall
pushf
call
push
fidivrs
ljmp
xchg
movsl
mov
jle
mov
aam
lahf
fstpt
test
xor
leave
push
inc
and
jle
fists
jo
insb
std
push
cld
or
fadds
int3
subl
push
or
dec
or
add
jmp
negl
jge
sub
rorb
pop
inc
sub
test
sub
sarb
pop
scas
xor
mov
leave
rcr
mov
shlb
bnd
testb
pushf
test
cs
sti
mov
mov
popf
mov
jbe
mov
je
pop
xorb
mov
int
cmpsl
int3
mov
pop
in
ja
out
push
rcll
fidivl
inc
xchg
xchg
scas
stos
nop
mov
popf
mov
mov
inc
clc
adc
fyl2xp1
mov
jo
jl
push
bndldx
out
mov
and
movb
and
fistpl
inc
adc
cmp
sbb
iret
push
or
pop
xchg
and
addr16
jnp
mov
push
add
dec
push
mov
dec
xchg
mov
mov
in
in
inc
cmp
pop
push
mov
push
das
std
test
add
js
mov
scas
aam
scas
jecxz
sarb
fwait
jno
jae
pop
jno
xchg
or
sub
stos
push
flds
in
push
popf
add
sbb
inc
daa
push
int
mov
xchg
or
jo
push
fs
jbe
xor
std
aas
in
mov
sbb
sub
pop
flds
and
mov
jmp
aam
in
mov
cmp
int3
inc
inc
dec
lock
rcrl
jne
pop
dec
out
ret
ficoml
push
push
sub
xchg
scas
inc
dec
sbb
pop
mov
mov
shrl
dec
ljmp
fimull
sub
imull
movsb
fwait
mov
cmc
add
clc
leave
jb
and
jl
mov
mov
sub
push
or
dec
xchg
mov
mov
mov
cmpsb
and
and
cmp
dec
cs
sbb
cmpsb
out
push
dec
xor
ss
mov
and
jp
lods
aaa
xchg
pop
fcmovnbe
xor
cmc
dec
lea
mov
mov
sbb
shll
insb
push
es
cltd
pop
or
ds
iret
lret
adc
mov
and
es
fisubs
outsb
out
lcall
outsb
inc
pop
fcomp
xchg
and
ret
jne
sahf
jecxz
scas
pusha
sbb
pop
push
insb
bound
out
fisttps
lds
negl
or
add
mov
fisubrl
repnz
and
fcoml
xchg
ljmp
lret
cs
mov
roll
stos
lods
lock
push
out
push
bnd
cld
push
insl
jb
push
sbb
and
icebp
sub
loopne
xchg
add
leave
in
leave
gs
idiv
stc
inc
sbb
xchg
cmp
fwait
push
sub
inc
push
aam
movsb
mov
inc
mov
out
pop
mov
dec
mov
mov
cmp
pop
lea
cltd
adc
adc
arpl
into
fsubr
jns
jl
lea
sbb
scas
dec
in
pop
cmpl
jb
mov
inc
pop
adc
xchg
pop
inc
mov
adc
mov
cwtl
lds
dec
aam
movsb
repnz
repnz
out
cwtl
fsubrs
mov
aaa
or
mov
dec
orl
push
xor
pop
dec
stos
mov
stc
push
mov
cmp
mov
xchg
and
pop
je
rolb
repz
sbb
daa
mov
insb
and
ret
push
jne
cmp
cmp
frstor
mov
les
xor
xchg
dec
push
stos
loop
aam
cmc
inc
insb
lods
mov
rorl
pop
sub
shrl
es
sbb
dec
repnz
lods
or
adc
stc
adc
xchg
pop
imul
cltd
inc
pop
out
add
push
xor
jmp
mov
push
push
aad
and
and
addr16
push
movsl
xchg
push
scas
cli
test
jecxz
fistpl
fstl
shlb
rorb
std
cwtl
mov
add
fs
xchg
mov
pop
add
push
push
out
mov
mov
or
and
jmp
cli
es
jge
ljmp
out
sub
aad
push
movsl
inc
imulb
xor
imul
push
daa
jge
xchg
lock
roll
inc
or
sahf
mov
cwtl
ret
icebp
jb
sub
inc
btc
pop
outsl
je
or
pop
jmp
cmp
push
or
subl
or
pextrw
insl
xor
ja
inc
loop
mov
fildll
add
sub
fbld
nop
in
xor
fldenv
and
push
jo
add
fsubr
ret
push
pop
add
sub
jo
sbb
xor
mov
sub
pusha
cmpsb
orb
mov
js
mov
sbb
mov
mov
jecxz
test
out
ret
add
subl
cmp
add
out
xor
mov
pop
and
jo
xchg
popf
sbb
xchg
sbb
mov
jmp
pop
stc
xor
mov
sahf
insl
xchg
clc
loopne
cmpsl
lret
bound
arpl
jmp
shll
imul
sub
lret
test
mov
stos
shrl
cmp
test
add
xor
loopne
push
clc
xchg
pop
sbb
insl
jmp
mov
add
ret
xor
jcxz
into
push
ds
xor
roll
sarl
and
mov
int3
pop
jns
ret
int
out
fucomip
cld
mov
xor
cmp
fistps
pop
add
imull
sbb
shlb
stos
jecxz
into
xchg
mov
mov
sub
scas
lea
mov
push
jae
sti
adc
xchg
cli
lods
xor
push
jmp
inc
imul
adc
cmpb
jge
mov
push
push
lcall
pop
fdivrs
mov
xchg
lods
rol
sbb
movsl
mov
call
repnz
pop
movsb
mov
mov
xchg
inc
xchg
push
or
push
lret
xor
cmp
xchg
inc
loop
mov
jmp
adc
cmp
xor
sbb
mov
sahf
test
mov
dec
mov
sbb
xchg
nop
out
add
dec
push
xor
dec
inc
insl
dec
lahf
xchg
adc
movl
mov
jl,pn
lock
int
jl
mov
add
test
sahf
dec
gs
mov
add
hlt
mov
and
mov
int
enter
shlb
lret
mov
cmp
daa
pop
fisttps
andl
test
xor
ret
ffree
or
and
pop
and
shlb
push
mov
pop
dec
adc
push
mov
adc
cmpl
sub
loope
jb
aam
and
cmp
pop
repnz
lret
cmpsl
mov
or
stc
jp
cwtl
pop
sbb
in
inc
lea
jns
cli
in
test
loopne
insb
xchg
mov
cmp
test
cmp
ss
in
dec
adc
cmp
shr
cmp
and
add
cmp
push
ret
test
sarb
mov
imul
mov
xchg
and
enter
or
enter
pop
enter
push
xchg
sbb
xchg
xorl
lahf
mov
shl
hlt
in
dec
daa
xchg
into
subb
add
ret
dec
and
lock
clc
push
and
dec
mov
fistpll
out
roll
popa
dec
add
negl
jnp
jge
cmp
sar
das
fldl
adc
xorb
xor
and
pop
adc
and
in
inc
mov
test
aad
mov
outsb
or
mov
dec
sbb
add
mov
out
addr16
mov
add
out
and
jnp
jbe
xchg
sarb
leave
push
out
and
mov
shrb
cs
mov
stc
fdivp
int3
jbe
xchg
test
pop
icebp
fsubl
jns
pop
adc
push
js
xor
stc
lcall
stc
jge
jne
jecxz
push
pop
ret
in
sbb
inc
lock
mov
hlt
insb
add
jns
push
push
mov
mov
cmp
hlt
les
jnp
loopne
and
xchg
jmp
adc
daa
inc
and
pop
ja
lods
push
dec
fisttpll
movl
and
stos
ss
cmpsb
lds
ja
and
cmp
aas
clc
add
scas
lds
cmpsl
xor
mov
int
dec
pop
xor
mov
cs
movsb
push
movl
clc
jl
and
ss
fidivl
sbb
mov
fmulp
mov
adc
ret
mov
mov
in
mov
sti
fimull
sub
loopne
outsb
sub
mov
movsb
adc
mov
das
mov
push
fwait
daa
aas
push
inc
fadd
jge
sub
sub
outsb
mov
inc
call
inc
cmc
sbb
push
lahf
popf
lcall
andb
rcrl
dec
stos
out
cmpsl
and
setns
xchg
mov
mov
and
je
xchg
nop
and
pop
mov
cmpsl
pusha
loop
cmp
das
push
outsb
push
aaa
push
pop
inc
cmp
dec
dec
pop
mov
gs
push
sbb
inc
pop
dec
lret
shlb
jl
sbb
inc
pop
inc
cmp
sbb
out
mov
insl
std
es
mov
add
sbb
push
aaa
inc
inc
xchg
loope
xorl
mov
dec
movl
out
xchg
in
std
ljmp
test
fistps
dec
push
pop
jmp
cmp
sub
out
cmp
fs
ss
out
ljmp
loope
imulb
inc
inc
xchg
icebp
cmp
lock
mov
andb
mov
fwait
pusha
out
and
inc
je
shll
xchg
xchg
cld
lds
insb
push
sub
cmp
shll
int3
or
pop
xor
popf
pop
or
loopne
pop
xchg
mov
insl
lret
or
jp
pop
pop
cwtl
sti
xor
test
push
inc
sbb
sbb
into
push
outsb
enter
adc
scas
gs
fstpt
push
test
mov
push
mov
fnstenv
jne
cmpsb
cmpsl
sarb
cmp
jns
sub
mov
jae
fcoms
adc
sub
lcall
jecxz
pushl
adc
and
jbe
cs
pop
mov
fs
pushf
mov
lods
loop
xor
mov
mov
dec
iret
pop
mov
pop
and
lds
push
xchg
ret
ret
mov
xor
int
jmp
loope
or
or
ja
and
pushf
es
mov
inc
or
pop
pop
or
inc
xchg
jbe
xchg
hlt
aas
mov
nop
xchg
sub
mov
test
leave
cmp
scas
inc
pop
mov
add
cmpsb
lock
dec
jo
mulb
pushf
ss
cli
sub
lahf
inc
mov
cmp
dec
ret
ficomps
adcl
lock
dec
imul
ja
push
nop
cmc
fwait
xor
aas
dec
adc
aaa
or
es
jo
sub
and
mov
std
mov
lods
dec
sub
jmp
repnz
xchg
leave
dec
pop
mov
mov
scas
filds
in
inc
inc
jae
ret
test
idivb
ds
adc
cwtl
out
lret
mov
int
hlt
lahf
stos
sub
pusha
cmc
jmp
icebp
in
sbb
or
pop
mov
jmp
add
mov
mov
test
push
add
aas
cmpsb
add
leave
out
inc
sub
lods
pop
mov
mov
xchg
xchg
cld
jno
xchg
inc
and
out
inc
nop
mov
js
test
js
push
or
dec
or
or
data16
in
mov
pushf
out
es
int
xchg
push
scas
xor
inc
inc
into
sbb
mov
pop
dec
imul
sbbb
test
mov
pop
rcll
dec
pushf
out
sbb
inc
or
jge
std
aas
out
into
inc
imul
mov
xlat
push
inc
ret
rcr
shrb
jp
ss
push
mov
mov
idiv
rclb
cld
dec
mov
scas
mov
outsl
test
xchg
std
push
and
roll
shrb
sbb
xor
popa
mov
cmp
mov
insl
mov
nop
pop
shlb
bound
mov
ss
pop
or
nop
loopne
outsb
call
test
fsubs
out
mov
decb
mov
xchg
cmp
push
outsb
out
imul
fwait
sub
mov
and
sub
std
cmp
bound
fisubrl
insl
rcll
shl
ljmp
lock
dec
add
fnsave
add
icebp
mov
xchg
test
jmp
push
pop
sahf
outsb
nop
lods
adcb
cmp
cmp
sbb
iret
loope
mov
call
xchg
aad
pop
fisubl
xchg
jb
mov
or
dec
orl
add
cmc
sbbb
xchg
test
mov
lock
test
cmp
pusha
mov
lods
jge
adc
or
lret
mov
fucomip
adc
push
loopne
call
jbe
aad
pop
mov
sbb
pop
imul
mov
xchg
xorb
popf
cmp
or
int
cwtl
fisubrs
and
stos
or
adc
push
xor
sbb
movsb
push
push
push
add
in
notl
push
addr16
inc
pop
xchg
cld
dec
filds
fmulp
or
movsb
push
inc
leave
xchg
cmp
pop
mov
sbb
jle
jle
mov
xor
xchg
stos
push
dec
mov
data16
arpl
mov
sbb
mov
dec
mov
and
loope
ret
out
xor
lcall
fsubp
jo
push
cmpb
imul
daa
mov
push
lret
mov
sub
clc
out
push
popa
repnz
pushf
dec
mov
stos
xchg
jecxz
jb
mov
imul
test
repnz
push
jge
sets
xchg
and
clc
cli
mov
jb
ret
dec
bound
out
sub
xor
int
fwait
lahf
add
push
fiaddl
je
dec
sbb
test
repz
fcompl
sub
adc
jb
in
les
popa
mov
inc
jecxz
loope
das
loope
xchg
cld
and
outsl
dec
jo
mov
movsl
pop
sbb
cmpsb
pop
pop
cmp
push
int
repz
cmp
xor
ret
jp
mov
loopne
add
rcrl
jp
cmp
and
test
jno
mov
dec
fsts
inc
divl
aam
rcrb
pop
orl
sbb
mov
dec
mov
int3
lahf
pop
inc
dec
inc
lods
js
and
js
xor
jne
ds
cmp
sub
xchg
push
mov
test
out
jl
xchg
or
ja
daa
bound
imul
adc
dec
push
push
push
cld
rcrl
push
stc
sub
dec
mov
add
jmp
test
push
adc
pop
cs
inc
fnsave
xor
jns
js
mov
pop
xchg
ljmp
lds
or
insl
inc
xchg
orl
jne
dec
cmpsl
lods
mov
popf
adc
fwait
cli
loop
stos
loopne
loopne
and
xchg
aad
test
xlat
rolb
imul
es
stc
mov
and
mov
leave
xor
or
and
fs
rol
xchg
nop
mov
out
ficoms
and
cwtl
sbb
jno
jbe
lods
xchg
pop
cmp
ret
pusha
repnz
xchg
call
sarb
sub
pop
lret
dec
adc
popf
sbb
sbb
pop
mov
jnp
xor
data16
dec
cmc
jns
fwait
mov
mov
adc
test
test
aam
loop
cmp
fisttps
pop
sub
jp
or
lcall
mov
and
push
jmp
mov
loop
sbb
gs
nop
pushw
dec
fndisi(8087
ljmp
xchg
lahf
mov
xchg
mov
add
icebp
xchg
xor
fimuls
add
negb
mull
fsubrl
xor
jbe
rolb
adc
cmp
aad
and
sub
sub
xchg
sbb
ficoml
mov
daa
xor
in
push
push
pop
insl
jle
daa
ret
stos
cwtl
adc
andb
dec
flds
jle
out
lret
cmp
push
dec
xchg
in
ret
mov
dec
lret
mov
jl
clc
movhps
sbbl
xor
pushf
int3
repnz
and
dec
add
lods
adc
ss
and
mov
leave
fucom
sti
lods
adc
ret
inc
stos
xchg
icebp
sub
sub
push
in
movhps
mov
mov
add
cltd
lret
mov
ret
inc
xor
add
push
push
dec
jge
mov
pop
jg
call
push
lods
and
pop
inc
cmp
mov
cltd
inc
lea
mov
pop
lock
test
lods
pop
push
in
sbb
add
xchg
cli
sarb
notb
dec
rcrb
mov
mov
repz
subb
mov
pop
add
mov
loopne
repz
cmc
hlt
and
add
scas
imul
jne
cmp
enter
fmull
dec
adc
add
int3
adc
jl
loopne
bsf
scas
aas
adc
push
mov
jmp
insb
push
bound
jbe
and
aam
outsl
push
push
jp
imul
cmp
daa
mov
mov
cmp
mov
push
xlat
js
xchg
xor
shrb
pusha
out
xor
jmp
pop
mov
add
mov
xor
adc
daa
xor
sub
out
xchg
push
jg
mov
push
test
in
rol
lds
and
cmpsl
movsl
orl
ja
cmp
test
out
and
mov
mov
cmp
push
push
dec
dec
push
xchg
movsb
pop
push
repz
add
pop
adc
push
mov
mov
int
and
stos
mov
sub
xchg
sysret
dec
and
lret
addr16
push
mov
cmp
cmp
out
xor
leave
fsubl
inc
ja
jnp
xor
dec
add
jl
jmp
xchg
fiadds
out
imul
push
dec
outsb
pop
addb
mov
adc
addb
movsl
mov
pop
add
mov
cmpsb
pop
mov
out
call
mov
in
xchg
fwait
xchg
nop
and
pop
rcll
sbb
mov
sub
fnstenv
movsb
rclb
lods
dec
push
pop
inc
sub
mov
mov
fisttpl
xchg
out
mov
cmpsb
lods
inc
cmp
add
and
inc
push
mov
mov
cmc
xchg
adc
ret
or
xorb
scas
mov
jl
cmp
mulb
mov
mov
fcomps
cli
out
sub
sarl
sbb
sbb
mov
xchg
inc
gs
les
rcl
dec
pop
repz
and
jne
fsubl
jbe
mov
pop
sbb
arpl
shlb
gs
sbb
or
inc
popf
push
sub
or
jbe
imul
lods
movsb
loopew
pop
jne
mov
les
inc
push
xchg
ja
pop
and
aam
mov
stc
ret
or
mov
sub
loopne
fldl
adc
sub
repnz
inc
mov
icebp
cmp
jp
inc
adc
bound
movb
lock
inc
xchg
iret
jg
and
xor
push
or
inc
xor
sbb
loope
mov
test
add
shl
xchg
imul
adc
shl
pushf
test
iret
sbbb
jmp
test
dec
xor
push
cmc
arpl
mov
mov
push
call
mov
adc
lods
mov
cwtl
and
cld
dec
mov
push
xor
pop
jne
in
mov
cmpsl
inc
push
pop
lea
int3
ret
stos
mov
stos
scas
ret
loope
in
xchg
icebp
test
je
repz
data16
xor
sahf
dec
xor
subl
aam
test
mov
add
ja
dec
mov
sub
and
iret
jno
jl
sbb
jmp
scas
fcoml
stos
shll
inc
cli
lret
and
cmp
fnstenv
and
jg
add
stos
xor
xor
adcl
outsl
push
jecxz
pop
into
sahf
mov
mov
out
in
fs
jle
movaps
test
adc
jbe
rcll
jp
shl
mov
push
loope
repnz
test
stc
lret
lock
mov
or
mov
icebp
mov
cmpsl
sub
xor
wbinvd
sbb
cmp
aas
or
aas
adc
xor
bound
sub
or
ljmp
xchg
test
push
mov
inc
jl
push
lret
cmp
jb
cmpsb
sbb
jg
ja
jae
mov
test
pop
ret
sbb
pop
aas
sub
inc
jo
iret
fistpll
jne
pop
adc
push
dec
rcrb
push
repnz
jecxz
inc
lahf
mov
cwtl
inc
cmp
in
shll
xor
rorl
inc
lcall
inc
orl
pop
std
inc
lock
adc
push
inc
and
cmpsb
adc
out
dec
aaa
daa
sub
adc
cs
push
frstor
push
mov
or
in
jecxz
push
insl
movsb
test
cld
imul
sbb
or
mov
dec
xlat
lods
inc
xchg
xchg
iret
int3
mov
push
sarb
rcr
jge
mov
call
cltd
fwait
imul
imul
imul
gs
xchg
test
push
arpl
adc
daa
fadd
xchg
xor
inc
or
dec
add
sub
or
xchg
ficoms
adc
push
out
lret
fistpll
adc
dec
mov
mov
cld
rorl
adc
mov
xchg
sbb
ss
iret
mov
ljmp
shll
cmp
mov
mov
clc
pop
dec
cmc
xchg
jp
mov
cs
sbb
ds
int
scas
push
sub
rorl
pop
pusha
add
mov
in
pop
pop
addb
hlt
adc
lock
jge
jo
lods
sahf
and
xor
pop
or
pop
inc
mov
xor
test
dec
lret
lea
pop
or
pop
outsl
dec
mov
add
sub
push
loope
lock
add
cmp
pop
xchg
int
jne
push
push
push
fildll
fnstcw
aam
movsb
mov
xchg
mov
sub
pop
add
mov
gs
rclb
pop
ds
loope
fdiv
mov
push
sbb
sbb
outsb
inc
mov
loope
xchg
xor
xchg
xchg
je
stos
lret
sub
testl
jno
sbb
and
nop
inc
movsl
inc
fs
scas
sbb
enter
call
shlb
xor
push
rol
iret
mov
mov
cmp
jbe
jge
inc
mov
jg
mov
add
sahf
jecxz
jp
or
mov
data16
sub
loope
xchg
cmpb
pop
cltd
gs
lds
fcmovnu
pushf
xorl
mov
sub
fcmovnb
jne
jo
add
mov
jl
jbe
and
repnz
insb
bound
sub
movsb
mov
push
adc
adc
dec
mov
loope
ror
in
mov
xor
and
sub
rcr
inc
fwait
mov
pop
adc
sbb
ss
sbb
adc
add
adc
fsubs
xor
cmpsb
jnp
adcl
mov
nop
out
cmpsb
mov
adc
xchg
inc
ja
sbb
mov
in
test
rcrl
xchg
mov
stos
adc
repnz
mov
mov
icebp
int
jnp
popa
dec
cmpsb
into
fsubrl
adcl
xchg
in
xor
push
dec
mov
in
pushf
ja
xchg
mov
movsb
cli
pop
call
call
ret
mov
sub
push
xor
gs
jle
int
mov
jmp
mov
mov
daa
movsl
test
inc
or
in
xchg
jg
lcall
addb
and
lock
inc
cli
out
repnz
jb
push
inc
pop
mov
pop
mov
add
mov
jle
or
outsb
xchg
mov
nop
cmpsl
add
pop
xor
jg
insl
cmp
into
mov
in
xchg
push
push
insb
jg
lahf
sbb
xchg
and
mov
pop
cmpsl
mov
and
nop
mov
inc
push
loopne
aam
pop
mov
xor
testb
daa
or
and
dec
nop
adc
or
popf
pop
dec
cmp
in
sbb
or
dec
adcb
add
adcb
aam
adc
sahf
ds
ret
inc
sub
aad
mov
cmp
pop
lcall
push
sarl
addr16
push
loope
loop
xor
or
cmpsl
lods
insl
jnp
imul
aam
rol
out
xchg
and
cmpsb
or
je
jl
xor
xchg
jns
je
pop
cmp
sarl
ja
push
out
xor
sub
jnp
pop
aam
xor
mov
cmpsl
xchg
fcomps
dec
test
int3
and
mov
addl
andb
cmpsb
push
lods
or
pop
scas
xchg
sahf
adc
ja
test
mov
jae
cmp
rcll
sub
push
pushf
lea
mov
cmp
add
test
ds
sbb
inc
and
add
push
cmc
inc
jb
pop
sub
dec
dec
jnp
cmp
xchg
mov
icebp
inc
test
pop
inc
jnp
mov
dec
dec
movntq
or
add
cmp
adc
pop
push
sbb
jmp
adc
shrd
subb
fbld
iret
mov
imul
cli
pusha
adc
cwtl
fmulp
sbb
mov
mov
dec
adc
scas
adc
sub
jne
cmpsl
flds
mov
xchg
add
jmp
repz
mov
cmp
and
jg
aas
or
scas
and
jl
push
lock
das
jge
pop
xchg
add
adc
xchg
push
movsl
mov
rcll
leave
incb
jle
andb
mov
cmp
rorl
cld
enter
mov
rorb
cltd
pop
test
add
mov
outsb
in
pusha
dec
test
mov
subb
repnz
or
jl
out
xor
cmp
lods
fnstcw
fwait
mov
pop
and
cmp
gs
sub
cwtl
fisubrs
cmpb
gs
cmp
outsl
sub
inc
dec
xchg
push
sub
pop
jbe
pop
lret
movsl
shr
mov
and
and
out
fdivrs
ret
es
pop
jmp
mov
cmpsl
xchg
push
movsl
mov
ret
dec
pop
mov
adc
icebp
inc
add
pushl
aaa
xchg
mov
and
lret
or
push
int3
cmc
fcmovu
push
sub
mov
or
mov
and
adc
lcall
xchg
fsubs
push
fxch
movsb
dec
rcrl
pusha
jbe
insl
pusha
or
xor
out
mov
scas
je
das
add
and
jo
addr16
stc
xchg
int3
and
xlat
stc
outsb
dec
scas
roll
cmc
pop
mov
jecxz
mov
mov
hlt
jecxz
pop
or
cmp
imul
cmovne
in
movb
mov
out
sub
or
ljmp
nop
scas
dec
jo
movups
mov
adcl
cli
xor
sub
into
push
lds
or
data16
or
or
xchg
fstpl
xor
dec
popa
ss
and
std
jbe
pop
cmc
and
adc
sbb
jge
hlt
sbb
fnop
sub
std
stos
sub
mov
mov
icebp
sbb
loopne
das
pop
jmp
sbb
flds
ret
movsl
inc
leave
push
push
test
push
clc
and
cs
lahf
xor
xor
mov
out
sti
and
ds
and
lock
xor
rorb
scas
cmpsb
outsb
and
jns
inc
scas
jle
loop
dec
adc
xor
pop
mov
pop
mov
push
das
scas
outsb
or
jecxz
add
push
popa
adcl
in
or
push
popf
stos
cmp
dec
or
test
in
rorb
sub
sub
outsb
lods
cmpsl
imul
xchg
nop
jp
cs
jo
bound
pop
cmp
das
aad
arpl
sbb
cmp
push
das
cmp
sbb
xchg
or
ds
and
leave
hlt
add
cmp
test
mov
ret
dec
cmc
stc
and
adc
pop
fstpt
cmpsb
clc
imul
repz
cmp
or
lret
mov
enter
mov
scas
jg
in
test
dec
lods
ficoml
mov
outsl
jge
push
xor
sarb
cmp
xchg
push
repnz
jge
jmp
mov
rcrb
add
shlb
add
lret
mov
and
mov
movsb
lahf
ds
scas
inc
daa
test
sbb
adc
push
pop
cmp
jno
push
insl
movsl
cld
outsl
cs
test
ja
fs
adc
dec
les
out
adc
or
shll
and
push
sub
outsl
xchg
sub
push
xchg
sub
pop
jecxz
jnp
call
xchg
int3
aaa
jne
pop
inc
or
mov
insl
dec
and
mov
lahf
pop
sub
adc
mov
cmp
lahf
jg
cmpsl
push
mov
in
jge
iret
aaa
clc
mov
fsubl
rcll
mov
inc
outsb
pop
mov
adc
lock
dec
out
repnz
cmp
pop
scas
push
dec
pop
adc
js
sbb
jp
sub
cmpsl
fisubs
imul
xor
pop
mov
and
jge
cld
idivb
sub
negl
out
dec
call
sarl
js
mov
shll
cmp
bound
test
push
xchg
and
xchg
dec
dec
cmp
xchg
andb
test
xchg
daa
gs
jecxz
mov
cmp
dec
in
adc
aaa
adc
xor
mov
push
scas
mov
add
adc
and
jae
xlat
add
push
sub
pop
cli
stos
repnz
xor
iret
fildl
testl
aaa
inc
stos
pop
xchg
pushf
mov
mov
or
clc
pop
pop
and
les
leave
mov
mov
in
shl
loop
inc
xlat
pushf
jb
dec
push
or
jno
mov
inc
push
cmp
and
mov
or
addr16
mov
sub
clc
fabs
mov
jns
je
add
ljmp
sbb
push
jmp
xlat
pusha
stos
adc
decl
pop
mov
adc
push
rcll
jae
push
cmc
loope
push
mov
adc
mov
lds
pop
xchg
lret
cld
cli
shrl
mov
in
mov
mov
je
mov
dec
adc
sub
sti
mov
cmp
mov
jmp
icebp
adc
mov
push
ljmp
shll
jbe
add
jnp
cmp
mov
xchg
ja
xchg
outsl
jo
rcll
mov
pushf
insl
push
jge
sub
jne
fwait
mov
jge
jle
cwtl
das
clc
pop
fisubrs
addb
ljmp
sahf
sahf
inc
jae
js
mov
or
or
cwtl
mov
popa
paddb
cli
jl
inc
inc
push
jbe
sti
xchg
dec
xor
aam
mov
sbb
fsubs
shlb
pop
aas
and
xchg
into
jne
fldl
push
cld
adc
aam
inc
out
dec
daa
push
xchg
sbb
dec
cmp
shrb
mov
push
mov
mov
out
lea
sub
mov
and
dec
add
gs
daa
push
outsl
fs
aaa
mov
add
xor
push
adc
ja
gs
mov
sub
lods
pop
loope
or
jecxz
lods
jae
fwait
pop
xchg
sub
iret
push
int3
dec
aas
shll
mov
xor
mov
jle
das
dec
hlt
cmp
mov
pop
movups
ss
ficoml
inc
cli
mov
inc
lock
or
fdivrs
popa
loop
ds
mov
sub
leave
fwait
out
xorb
outsb
fsubl
push
shlb
dec
inc
out
cmpsl
push
loope
add
jno
xor
mov
cli
subb
es
loope
cwtl
add
ds
in
mov
stos
cltd
jg
add
fwait
dec
mov
sub
and
out
lods
lret
inc
mov
xchg
inc
daa
xlat
xchg
sbb
xor
sub
xchg
ret
sbb
les
mov
push
sarl
pop
sub
add
fwait
jno
sub
lock
pop
leave
lahf
int
and
test
fdivrp
cmp
shlb
xor
sub
jbe
movsb
mov
push
add
stos
rorb
in
orl
jno
mov
or
push
mov
mul
mov
arpl
sbb
popa
inc
sub
mov
jae
out
js
mov
push
out
rolb
loopne
and
adc
fistl
icebp
xor
sbb
inc
push
push
sbb
sarb
pusha
mov
inc
cmc
fs
arpl
push
cltd
dec
lds
and
dec
hlt
and
rol
xchg
pop
lret
adc
stc
cmp
xor
mov
lcall
iret
std
mov
xchg
in
inc
add
mov
jne
adc
imulb
sbb
mov
mov
fwait
bound
movsl
cmp
push
cmovbe
repnz
daa
mov
test
jb
inc
or
or
or
cmpsb
add
roll
sub
xchg
loop
ljmp
lret
cmc
lock
pop
sub
cmc
xlat
mov
push
out
sbb
add
or
push
out
daa
pop
sti
gs
in
and
sbbl
addb
repz
jp
out
jecxz
test
sub
data16
cs
aaa
pop
jo
mov
dec
xchg
rorl
lock
js
pop
arpl
out
jns
iret
cmp
cmp
sbb
fisttpll
ret
aam
in
xlat
insb
movsl
movsb
push
jge
or
addr16
jne
push
jb
mov
mov
scas
pop
fildll
inc
iret
or
in
fs
mov
adc
dec
adc
cs
dec
cltd
test
xlat
mov
addb
sub
les
and
popf
sbb
insb
jmp
add
dec
ret
add
push
jno
mov
dec
inc
sti
lods
lods
into
pop
mov
pop
push
imul
out
aad
aas
mov
cmc
sbbb
call
sub
inc
in
or
in
stc
ds
mov
mov
daa
bswap
mov
mov
push
sub
xor
movsl
test
cmp
test
push
xchg
push
lea
lods
popf
or
push
shrb
lret
mov
jle
xor
sbb
add
sti
lret
dec
xor
mov
push
sahf
fnstcw
jge
cmp
shl
inc
shlb
and
jp
add
pushf
sub
roll
sbb
rcl
into
je
fcoml
pusha
jecxz
push
jnp
xchg
or
enter
lds
test
cld
mov
call
pusha
pop
pop
jnp
sub
dec
xchg
adc
xor
adcl
divb
jl
rol
fcmovne
imull
orl
jns
jns
jbe
add
jmp
lods
addr16
cmpsb
sub
rol
dec
mov
mov
adc
sbb
dec
jmp
mov
sarl
cwtl
js
jae
iret
cmpsb
lret
test
addr16
dec
insl
outsb
add
ret
sub
cmp
xchg
lock
and
test
nop
mov
loopne
cmp
cmp
int3
pop
pop
sub
or
push
sbb
sti
jbe
adc
sub
leave
ss
fildl
icebp
mov
loopne
and
sbb
add
stos
scas
mov
jb
cmp
xchg
shlb
mov
push
jmp
mov
jns
and
insb
fisttps
push
push
add
pushl
pusha
xlat
cmp
jl
mov
rclb
lahf
pop
sub
mov
mov
popa
lods
push
mov
sub
or
mov
adc
shl
xchg
mov
cwtl
dec
das
stos
xchg
cmp
lods
mov
adc
lea
push
js
cltd
std
jecxz
mov
mov
mov
mov
adc
leave
ljmp
xchg
inc
ss
out
mov
adc
filds
test
and
cmpsb
rclb
filds
xlat
movl
lea
cmp
and
pop
cld
push
and
scas
pushf
push
dec
out
dec
push
inc
and
sbb
sar
imul
xor
jb
push
add
sub
adc
jns
cmp
mov
cld
ds
pop
dec
sbb
clc
xchg
ja
outsb
pop
nop
pop
cli
test
pusha
mov
mov
das
lock
loopne
push
sbb
mov
fwait
js
call
vxorps
mov
sbb
fsts
lret
jb
and
pop
push
insl
into
add
insl
repz
pusha
pop
rcrl
imul
inc
pop
imul
mov
fwait
aas
je
mov
fisubs
xor
or
sub
adc
pushf
sbb
cmp
and
cltd
mov
jns
mov
loope
cwtl
sarb
inc
sarb
dec
dec
add
add
mov
mov
cwtl
stos
push
fcomip
ret
imul
or
pop
jmp
std
insl
sub
lahf
jno
pusha
lods
add
cmpsl
adc
repnz
je
imul
popf
pop
push
fld
cwtl
mov
and
xor
cmpsl
scas
push
dec
add
ljmp
stos
test
add
pop
addb
xchg
push
or
ret
xor
mov
sahf
sti
gs
sub
or
in
vminsd
fbld
test
xorb
mov
dec
jb
xor
ja
ret
xchg
movsl
faddp
dec
stos
aas
dec
add
and
or
ja
stc
inc
stos
add
add
cmp
jl
mov
dec
dec
push
jae
pop
jle
rclb
cmpsl
pop
cmpsb
sub
shll
or
mov
push
ret
neg
ljmp
cmp
push
fisubrl
shlb
push
out
adc
popa
shl
loopne
mov
movl
scas
push
iret
fdivl
xchg
vxorps
pop
mov
aas
rep
dec
inc
lret
push
push
cltd
sub
dec
xchg
mov
fnsave
sbb
xlat
adc
inc
stc
loopne
xchg
jae
aad
xchg
mov
xchg
icebp
icebp
xor
movsb
xor
sbb
loope
loop
push
mov
inc
in
imul
dec
mov
stos
cmp
test
cmp
fwait
in
pop
lcall
pop
test
les
cmp
ror
xor
jp
jmp
add
push
test
ja
pusha
jp
pop
mov
rcrl
cmc
cltd
pop
push
pop
into
xchg
stos
cmp
adc
push
sbb
mov
outsl
mov
int3
lret
leave
or
sbb
cmp
shlb
sub
dec
xchg
pop
outsb
jg
and
cmpsb
sbb
lcall
dec
fldt
movsb
or
cmpsl
inc
out
es
sbb
dec
ljmp
mov
ja
nop
sub
pushf
xor
inc
cmpsl
or
dec
push
shrb
andl
dec
add
push
data16
pushl
dec
sti
adc
and
jg
push
cmp
inc
cmp
push
dec
in
shll
cmp
fisttpl
jl
pop
jo
xor
int3
mov
cmpsb
mov
ljmp
pushf
pushf
in
add
ret
pop
movb
cmp
les
jbe
fnstcw
mov
push
cmpsl
idivb
fsts
dec
in
outsl
leave
andb
pop
adc
arpl
sub
or
out
mov
repz
aaa
push
mov
inc
mov
roll
push
dec
pop
xor
fucomi
sub
loope
xchg
sub
out
mov
dec
icebp
scas
and
aas
cmpsb
sub
popa
jne
jle
pop
data16
mov
mov
lahf
fwait
dec
icebp
push
scas
push
in
nop
xorl
pop
ret
bound
dec
sarb
sub
test
jb
out
adc
cli
push
mov
es
push
dec
popa
in
xlat
rcl
mov
jl
and
adc
das
in
das
sbb
in
in
mov
xchg
repnz
mov
mov
dec
out
push
stos
dec
mov
sbb
jp
push
lock
push
fildl
lds
jg
repnz
lock
mov
and
and
negl
sbb
insb
out
mov
lock
mov
insb
mov
cmc
or
push
add
xchg
mov
cwtl
sub
and
sbb
mov
pop
xchg
add
xlat
jecxz
jae
sahf
or
or
lar
in
sub
out
mov
jae
push
mov
imul
repz
sub
mov
cltd
sti
inc
aas
pop
das
cld
inc
mov
xchg
mov
pop
and
jo
mov
mov
inc
mov
dec
call
rorl
cmp
adc
sbb
imul
and
lock
jp
mov
pop
dec
cld
nop
sub
repz
aam
mov
push
test
lods
fcoml
jmp
fcoml
nop
lret
jns
aam
jb
fs
mov
outsl
adc
sahf
xlat
lock
mov
xor
jp
mov
sbb
inc
push
out
test
std
and
ja
mov
stc
and
fnstenv
mov
rolb
or
cld
mov
cmpsl
movsb
sbb
sti
lcall
rclb
jb
popa
jo
jge
sahf
fdivp
leave
cmc
inc
xor
pop
in
jle
xchg
inc
insb
jbe
cli
jp
sahf
mov
das
into
jb
outsb
das
mov
pop
fwait
dec
dec
js
repz
scas
xchg
rcrb
xchg
xchg
xor
jecxz
mov
inc
cmp
jo
adc
iret
cld
int3
mov
xchg
mov
sub
lcall
jg
pop
mov
movsl
bound
pop
add
xchg
out
into
mov
add
add
push
pop
int
sbb
ret
int3
movsb
adc
inc
xchg
bound
or
jp
lret
xchg
dec
nop
push
out
aad
aas
jae
xor
mov
cmpsl
ljmp
dec
aas
sbb
aas
lods
mov
sbb
lods
jbe
in
sbb
or
imul
adc
mov
lds
jl
dec
scas
mov
xchg
bound
jle
dec
mov
jl
cli
daa
inc
lcall
mov
inc
xchg
xorl
in
fimuls
adc
rcr
jg
mov
aas
outsl
xchg
jmp
test
lock
sub
je
js
icebp
mov
pop
mov
mov
out
pop
mov
adc
or
popf
test
idiv
sbb
inc
push
fidivrs
and
insb
sbb
stos
sbb
fmul
jb
notb
and
loopne
lret
xor
in
mov
xlat
stos
dec
push
scas
rcrl
xor
mov
push
lods
icebp
int
scas
mov
das
daa
cmp
cmp
leave
bound
mov
pusha
data16
push
push
pop
not
insl
xor
les
andb
gs
imul
add
inc
insb
andb
or
rclb
lahf
sarl
mov
cmpb
rcrl
add
cli
and
cmpsb
dec
sub
cld
and
out
scas
push
xchg
mov
dec
pop
es
mov
int
mov
push
movsl
mov
jne
sub
lds
or
xchg
sbb
mov
pop
fcoms
mov
cmp
scas
push
push
fwait
add
in
shlb
pop
lahf
divl
jno
pop
repnz
and
sbb
sbb
ja
jge
sub
jg
cmpsl
js
push
pushl
cmpl
dec
or
popa
aaa
mov
inc
sub
cmp
adc
pusha
jp
dec
push
test
dec
sub
add
loop
imul
fiadds
data16
cs
daa
dec
decl
pop
cmp
or
ficomps
fistps
xchg
sbb
imul
hlt
leave
xchg
xor
insb
mov
mov
jg
icebp
jnp
lahf
mov
in
and
adc
push
sbb
and
data16
and
add
xchg
push
lods
sbb
xor
xor
mov
pmaddwd
xor
sub
and
xchg
adc
lods
sahf
mov
adc
push
test
shrl
mov
in
dec
lcall
mov
cwtl
imul
or
into
xchg
cltd
or
insl
mov
pushf
and
aam
xchg
inc
push
aad
inc
je
or
test
mov
cld
rcr
sub
mov
xchg
push
xor
jmp
test
adc
clc
push
test
hlt
popf
imul
loope
sub
inc
lahf
push
mov
ret
mov
lock
mov
xchg
sub
jno
in
pop
mov
push
push
mov
jge
pop
lcall
cmp
inc
mov
stos
outsb
mov
xor
shll
push
icebp
mov
xchg
push
stos
out
xchg
push
push
daa
sbb
mov
loop
out
loope
aas
push
cmpl
mov
jns
mov
xlat
mov
jo
xchg
jae
pop
cmp
test
pop
adc
lea
imul
jnp
xchg
sub
mov
add
add
outsl
sbb
mov
sbb
jb
pop
mov
mov
xchg
xchg
mov
popf
add
mov
movsl
push
xor
pusha
lcall
ja
mov
cmp
mov
iret
add
mov
jg
out
mov
push
pop
xor
into
mov
jbe
push
mov
adc
mov
fsubrs
inc
push
pop
rclb
nop
cwtl
mov
adc
shll
dec
mov
scas
movsl
in
add
fisttpll
clc
jne
gs
jecxz
adc
outsl
cltd
or
leave
push
or
lds
into
mov
ret
and
les
or
mov
dec
mov
pusha
test
lods
daa
adc
sbb
je
mov
addr16
clc
in
fwait
js
movsl
fdivs
sub
je
push
mov
insl
mov
in
in
aaa
shlb
orps
push
ret
repz
xchg
xor
repnz
pusha
cmp
inc
xchg
xor
sti
add
lahf
and
push
mov
es
jp
mov
sbb
fs
sbb
mov
loop
loop
sbb
cmp
jnp
pop
idivl
pop
ja
push
adc
jbe
push
xor
sbb
jo
je
cli
dec
ds
sbb
push
imul
sbb
add
imul
mov
jg
js
lret
jae
scas
jb
clc
enter
int3
int
imul
cmp
sarl
push
decl
scas
roll
cmp
sub
cld
test
mov
sbb
mov
jb
leave
xor
out
pop
pop
mov
aaa
mov
data16
cwtl
sub
push
popf
jae
pushf
int
lcall
push
stc
xor
leave
inc
decl
bound
outsb
xchg
out
cltd
or
mov
xchg
shll
mov
je
pusha
or
in
push
jg
sti
call
jg
jb
xchg
mov
ret
cld
pop
imul
xchg
and
cs
add
jmp
imul
insl
cwtl
cmp
pop
out
outsb
repz
add
jb
xchg
sbb
out
jbe
adc
outsb
mov
arpl
pop
xchg
movsl
lds
push
insl
xchg
and
adc
mov
std
sub
add
or
jmp
or
test
mov
cmc
inc
mov
pop
scas
loop
add
sub
jbe
test
aaa
sub
stc
xchg
jb
xchg
and
test
out
mov
sbb
lods
jmp
aad
mov
lret
sbb
dec
lret
cld
dec
imul
push
or
int
xchg
xchg
outsl
sbb
ret
inc
in
lock
in
cltd
xchg
jbe
and
call
jb
push
sahf
aad
fcmove
popa
jbe
pop
sub
ret
inc
dec
outsb
push
jo
lret
jo
pop
scas
notl
sub
iret
int3
pop
mov
js
aaa
lret
loopne
mov
jne
mov
lods
push
pushf
sub
into
jl
imul
lret
push
mov
call
sbb
loope
pop
cltd
dec
or
adcl
loopne
es
inc
ss
in
push
dec
xor
sub
cltd
div
cli
lods
and
xchg
xlat
sbb
outsl
call
notb
decb
mov
inc
out
pop
pop
jecxz
aas
mov
inc
jno
nop
es
dec
sub
subl
inc
cli
inc
call
pop
adc
dec
rcrl
sbb
pushf
xchg
fbstp
jmp
jge
adc
enter
mov
push
fwait
insl
outsl
dec
xchg
test
ret
mov
xor
xchg
mov
xor
ss
xlat
pop
push
push
jae
dec
add
ljmp
rol
pushf
xchg
xor
dec
lcall
cli
in
pop
push
js
push
js
leave
pop
sbbl
push
shl
push
dec
and
sub
push
mov
and
daa
or
mov
pop
or
xor
decb
popf
dec
rcr
inc
addl
jne
insb
std
xchg
mov
mov
jl
outsl
and
jmp
dec
std
lahf
test
out
inc
lds
add
les
push
sbb
pop
cmpsl
ljmp
andb
andl
cmpb
pop
sbb
xchg
and
adc
jns
mov
test
fsubs
mov
fistl
or
pop
push
jecxz
cld
sbb
sub
movsb
loop
jnp
or
pusha
jae
loopne
sar
aad
push
cltd
xchg
pop
xor
rclb
inc
std
inc
cmpsl
dec
inc
pop
cmpsb
jmp
sub
pop
push
cmp
inc
bndstx
xchg
push
cmp
dec
fmuls
sub
jnp
xor
jb
mov
mov
shrl
test
add
int
inc
cltd
cmp
add
jo
mov
out
push
lret
add
aas
mov
shl
insl
push
pop
xchg
call
stos
jge
ds
pop
jge
dec
mov
xchg
jmp
ds
in
daa
push
sbb
xor
imul
lods
sub
faddl
insl
rcl
dec
repz
mov
in
add
or
or
dec
scas
je
mov
push
outsl
call
out
pop
cltd
data16
add
and
or
or
out
cli
jno
dec
cmp
fwait
test
mov
pop
mov
movsl
pop
mov
movsl
mov
mov
push
jnp
push
arpl
xchg
mov
iret
cmp
jo
ds
sub
pop
or
fs
clc
loope
mov
and
ret
xlat
push
rcll
push
or
push
arpl
push
ret
std
repnz
add
out
push
jp
xchg
push
inc
mov
rcrb
cmpsl
push
mov
imul
pop
inc
dec
push
dec
add
mov
or
lea
movzwl
dec
inc
add
dec
or
lea
mov
add
call
dec
inc
add
or
lea
imul
add
add
inc
dec
add
lea
mov
inc
inc
inc
dec
and
lea
mov
add
dec
dec
dec
call
and
lea
imul
inc
call
dec
dec
add
xor
call
lea
push
movzbl
add
inc
add
add
call
and
lea
movzbl
dec
dec
add
call
add
pop
sub
lea
movsbl
add
sub
pop
inc
sub
pop
inc
and
lea
mov
pop
inc
sub
dec
dec
xor
lea
mov
add
pop
dec
inc
pop
dec
and
mov
lea
mov
call
sub
inc
dec
sub
ret
and
lea
push
movswl
dec
push
add
add
push
inc
and
push
lea
push
inc
dec
mov
dec
dec
push
and
ret
push
lea
imul
inc
dec
sub
push
dec
xor
push
lea
call
mov
inc
inc
add
dec
and
lea
mov
inc
dec
dec
dec
jmp
and
movzbl
lea
movsbl
add
inc
add
add
xor
lea
inc
movsbl
sub
mov
sub
inc
dec
xor
lea
mov
cmp
jb
inc
xor
dec
inc
mov
dec
xor
mov
lea
mov
inc
dec
dec
sub
inc
xor
lea
mov
add
cmp
jb
inc
mov
sub
dec
xor
or
lea
xor
add
pop
inc
inc
test
jbe
sub
and
lea
mov
dec
inc
sub
inc
or
lea
mov
inc
inc
sub
dec
sub
lea
inc
mov
inc
dec
add
inc
or
and
lea
mov
mov
add
dec
movzbl
dec
dec
add
and
lea
and
mov
add
mov
inc
dec
mov
dec
or
mov
lea
movsbl
mov
dec
add
dec
inc
add
lea
dec
jne
mov
sub
add
dec
inc
add
lea
imul
inc
dec
dec
mov
dec
sub
lea
mov
sub
dec
inc
add
mov
and
lea
test
jbe
imul
dec
inc
sub
dec
add
lea
mov
add
add
dec
dec
sub
lea
mov
inc
dec
add
dec
inc
add
lea
and
mov
sub
mov
add
add
movzbl
add
sub
add
lea
mov
and
inc
add
mov
inc
add
movzbl
sub
jmp
or
lea
mov
inc
dec
dec
inc
or
pop
ret
push
lea
imul
inc
dec
add
inc
xor
lea
sub
movsbl
sub
sub
inc
dec
add
lea
mov
dec
inc
dec
dec
and
lea
imul
add
dec
dec
inc
xor
lea
mov
sub
inc
inc
push
dec
add
push
lea
call
imul
push
inc
sub
pop
inc
dec
mov
or
lea
push
imul
sub
pop
add
dec
and
sub
xor
rol
lea
mov
add
inc
pushl
dec
add
pop
add
lea
mov
dec
cmp
je
add
sub
add
sub
lea
mov
inc
add
add
push
dec
or
lea
mov
push
dec
inc
push
sub
dec
push
and
call
lea
mov
inc
inc
dec
inc
sub
lea
mov
add
dec
inc
add
or
lea
iret
movsbl
inc
pop
add
ret
push
inc
push
sub
xor
mov
lea
mov
push
dec
push
dec
push
dec
add
push
or
call
lea
push
movzbl
dec
xor
add
or
add
mov
inc
xor
mov
lea
mov
test
je
inc
dec
jmp
add
inc
or
lea
mov
sub
inc
mov
inc
sub
and
lea
mov
add
dec
dec
repnz
inc
sub
add
lea
jmp
mov
add
dec
dec
add
xor
lea
mov
inc
inc
dec
add
pop
pop
ret
push
or
lea
dec
inc
dec
inc
add
lea
mov
add
sub
add
inc
sub
lea
imul
inc
add
dec
inc
add
lea
imul
dec
dec
dec
dec
pop
ret
sub
add
mov
lea
mov
mov
inc
dec
mov
inc
inc
mov
xor
lea
xor
movsbl
inc
mov
add
dec
inc
inc
and
lea
mov
dec
dec
cmp
jb
inc
push
add
sub
push
lea
movsbl
push
dec
inc
mov
add
inc
xor
xor
lea
xor
imul
inc
xor
sub
inc
push
dec
and
xor
lea
mov
mov
sub
inc
mov
inc
inc
movzbl
and
lea
movzbl
add
add
inc
add
add
inc
jmp
lcall
xchg
andb
jnp
mov
add
adc
xor
pop
faddp
insb
dec
jp
jl
inc
or
int3
shll
add
les
mov
push
es
daa
sbb
add
sub
sbb
add
out
xchg
arpl
mull
movups
rorl
mov
cld
insl
fidivl
ja
cld
sti
lret
cmpsb
in
divl
adc
mov
addr16
add
pop
out
adc
cmp
mov
into
push
vpmaxub
dec
lret
ret
mov
out
fwait
xchg
in
das
fcmovne
repnz
pop
cwtl
mov
xchg
shlb
subb
pop
adc
stos
push
lods
push
dec
dec
and
lds
jle
jecxz
je
or
mov
ficoml
mov
xchg
jo
jl
lcall
cmpsb
cmc
add
xchg
xlat
outsb
push
mov
jbe
sbb
loope
int
jno
lcall
js
sti
aas
mov
inc
dec
jns
inc
lcall
xchg
add
pop
outsl
cmpsb
xchg
arpl
fs
clc
pop
insb
mov
sub
inc
push
inc
pop
push
mov
push
lea
jno
mov
mov
ret
ret
gs
sahf
int
js
jne
pop
notl
scas
xchg
call
sbb
or
js
popa
xchg
aam
es
mov
pop
int3
pop
mov
imul
and
mov
push
xchg
int3
loope
pop
ljmp
or
lahf
xchg
jmp
pushf
pushf
dec
mov
push
in
or
and
add
or
push
dec
cmpsl
lcall
daa
dec
sar
insb
xchg
icebp
or
mov
mov
fiadds
cmp
mov
mov
sbb
xor
inc
add
aam
mov
push
fcoml
cli
das
mov
lock
arpl
rcrl
ds
outsl
cmpb
mov
repnz
std
ret
mov
sbb
and
aam
rcrl
mov
mov
sbb
inc
insl
mov
pop
xlat
in
add
xchg
test
xchg
mov
sub
mov
jecxz
mov
push
jno
test
sub
sbb
movsl
lods
fimuls
xchg
int
imul
and
gs
mov
jmp
or
cmp
out
xchg
pop
pop
int
fcoms
cmp
outsb
dec
mov
rorl
xchg
and
aas
test
push
xchg
mov
mov
cmp
adc
addb
dec
cmovle
daa
fdivr
pop
in
cli
imul
sub
mov
push
out
into
inc
lds
dec
outsl
into
outsl
cltd
adc
repz
push
xchg
xor
out
bound
mov
jg
lea
orps
fisubl
push
cmp
subb
or
ja
stos
ret
sub
nop
sbb
xor
jmp
push
mov
cmp
inc
stc
dec
push
inc
cs
or
cwtl
mov
xor
dec
push
xchg
addr16
ja
adc
aad
out
pop
mov
mov
repz
hlt
push
cmp
pop
push
test
mov
sub
xor
jno
ja
rcll
hlt
mov
push
jge
lods
mov
jge
test
and
jb
pop
inc
adc
addr16
xchg
mov
inc
mov
sub
sub
push
out
inc
adc
or
je
sbb
xchg
popa
xlat
push
adc
dec
dec
pop
cli
loope
stc
inc
mov
add
sub
add
add
inc
add
mov
cltd
int3
clc
pop
cmp
jge
pop
mov
mov
nop
iret
js
push
sbb
sbb
test
add
aad
mov
loopne
xchg
ds
adc
inc
dec
lret
imul
sbb
mov
outsb
inc
jl
xor
mov
xchg
pop
fs
movsl
or
pop
push
hlt
loop
cli
or
sub
in
test
nop
dec
adc
jg
inc
loope
loopne
daa
icebp
stos
cmp
cli
push
cmp
sarb
mov
cmp
es
stc
out
mov
lahf
cmpsl
test
mov
pop
xor
aam
xlat
lahf
mov
add
sub
repnz
jb
cmp
pop
enter
fdivs
sbb
rcll
sbb
dec
in
cmp
mov
lea
cmc
or
adc
lock
pop
inc
nop
mov
inc
jb
fisubl
jecxz
cltd
test
daa
push
lret
push
and
test
pop
rorb
shll
call
mov
test
xlat
aad
out
mov
jg
aaa
repz
xchg
mov
insb
cltd
and
jnp
or
pop
int
popa
orb
xor
fwait
mov
inc
inc
hlt
ficomps
mov
xchg
xor
daa
out
bound
movsb
mov
cli
fimull
test
daa
mov
loope
xor
data16
orb
cmp
sub
pop
adc
xchg
cmp
sahf
pusha
pop
xchg
pushl
lds
mov
jo
cmp
inc
jae
mov
or
aad
sub
mov
pop
adc
cmp
sub
mov
das
lock
ds
push
mov
sub
popf
insl
mov
mov
adc
push
les
sbb
cld
cmp
ret
lcall
xor
aam
push
xchg
idivb
scas
pop
push
jl
sbb
repz
and
insb
lret
shl
add
sbb
add
adc
mov
add
roll
adc
push
adc
push
dec
pop
jne
add
insl
add
or
ret
decb
clc
insb
mov
test
test
jge
pop
je
je
mov
push
mov
aam
push
jo
stos
xor
lods
sub
out
cmpsl
pop
scas
pusha
mov
out
das
into
rcll
mov
in
sub
les
es
stc
jnp
out
sbb
xchg
fsubr
insl
xlat
ljmp
cltd
xchg
xchg
cmp
mov
xor
shrl
mov
mov
in
push
jg
or
movsl
daa
mov
push
fisubrl
xchg
xchg
xchg
push
daa
outsb
jle
outsl
jno
or
jae
mov
mov
fsqrt
adc
push
mov
push
decb
out
out
sbb
xchg
push
or
sub
adc
pop
repz
mov
loopne
subl
jge
push
into
in
adc
in
loopne
xchg
mov
cmp
mov
pop
sub
in
jb
rolb
or
lea
fwait
pusha
loop
mov
lds
lret
mov
or
jns
xchg
xchg
cld
daa
int3
mull
mov
push
ljmp
jp
or
cltd
sti
sbb
inc
fiadds
sarb
sub
mov
sbb
insl
or
divl
inc
pop
je
adc
mov
mov
push
std
jge
loope
loope
jg
pcmpeqb
add
and
rol
lock
sub
cmc
push
add
andb
and
jne
or
mov
mov
mov
jg
sbb
push
sub
lahf
sbb
push
mov
in
jns
add
inc
adc
mov
andb
or
popa
and
mov
ljmp
add
popf
shl
and
cmpsb
sub
dec
and
testb
sbb
rcrl
xor
mov
mov
call
divb
outsl
inc
cmpsb
xorb
aas
mov
neg
dec
dec
jl
xchg
adc
jge
dec
jmp
and
jp
and
ja
jmp
in
call
pusha
and
dec
jns
or
inc
inc
fcoml
rclb
push
adc
into
push
dec
and
pusha
push
adcl
fcompl
je
sbb
push
data16
popa
adc
mov
ja
das
dec
mov
fcoms
cmp
movsb
enter
adcb
lahf
hlt
das
pushf
insb
and
std
mov
ds
loope
sbb
pop
xor
jnp
mov
popa
push
jmp
arpl
xlat
sub
sub
dec
jmp
fdivs
fsubrp
jnp
add
and
dec
insb
data16
jne
sbb
sub
dec
xchg
lods
sub
int3
rcrb
js
cld
dec
stos
sbb
test
xchg
cmpsl
cmc
aaa
mov
mov
in
mov
lods
in
pop
and
adc
pop
xor
hlt
loope
dec
or
inc
mov
daa
repnz
adc
addr16
push
shll
aad
pop
iret
outsb
sub
fisttpll
cmp
pop
xor
outsb
into
jns
inc
mov
or
stos
sub
lret
and
mov
incl
xchg
mov
pop
cmp
aam
jge
cmp
rclb
lret
lcall
popa
testl
xchg
pop
adcl
nop
push
xor
adc
mov
sti
fnstcw
jo
and
jmp
pushf
popf
sbb
mov
and
push
lock
mov
cmpsb
pop
jp
cltd
mov
push
sub
mov
dec
xchg
in
cmp
jmp
inc
daa
inc
inc
fcmovnu
loop
xor
jg
xor
cli
lahf
and
sbb
arpl
and
sbb
out
push
rclb
xchg
adcl
ror
sbb
cs
notb
das
lods
mov
adc
xor
mov
pop
test
mov
xchg
notb
lods
lcall
push
adc
icebp
jecxz
jg
xchg
test
sbb
cmp
pop
enter
xchg
jle
inc
dec
adcb
push
jp
into
adc
push
lock
fnsave
sub
mov
shlb
js
sahf
cmp
cmp
jp
or
mov
push
cmp
loop
push
ss
xchg
mov
lahf
push
jnp
pop
leave
dec
mov
push
push
sbb
outsl
inc
cmp
push
sti
or
aaa
ret
test
pop
jae
adc
cmpsl
sub
dec
and
adc
adc
out
mov
mov
inc
jecxz
jmp
shl
pop
push
xor
push
jle
cli
dec
xchg
inc
cmp
out
int
insl
jno
mov
daa
aaa
in
insb
fbstp
mov
inc
adc
mov
mov
jmp
fcmovnb
push
popf
mov
pop
xchg
fldt
repz
push
and
je
pushf
into
mov
xchg
leave
test
dec
js
inc
inc
gs
pop
loop
sub
aaa
push
sti
mov
push
loop
in
aad
xchg
and
test
gs
hlt
add
or
inc
jl
dec
and
push
mov
mov
ss
mov
mov
ret
aaa
dec
and
xor
icebp
inc
cwtl
pushf
jecxz
fnsetpm(287
jge
fsubl
push
push
xchg
daa
arpl
mov
cld
pop
sub
cmpsl
mov
xlat
scas
push
mov
xor
out
out
fcompl
xchg
in
insb
mov
fsts
cltd
sub
iret
mov
sbb
cwtl
mov
es
std
sbb
out
mov
jmp
xlat
fxch
adc
pop
cld
test
dec
insl
mov
mov
clc
imull
lods
adc
scas
test
pop
adcb
addr16
add
es
sbb
roll
in
jg
mov
loope
mov
stos
cld
add
push
into
stc
fs
push
xchg
in
adc
lret
jns
add
add
inc
ret
sbb
lea
add
sti
and
xor
repz
jno
js
mov
or
negl
jb
jl
aad
pop
jne
cltd
clc
sbb
std
add
rol
stc
lods
scas
inc
or
aam
xor
mov
pop
leave
pop
js
push
cltd
test
clc
in
scas
mov
or
jbe
or
mov
aad
cs
dec
int
dec
decb
das
adc
je
out
dec
lcall
scas
dec
repz
cmp
or
xchg
rcrl
cltd
xchg
bound
jae
mov
cmp
cmpsl
cmp
mov
or
loopne
jmp
mov
je
into
add
mov
pop
mov
stos
into
rolb
test
sbb
or
loop
outsl
xor
leave
xorb
xor
push
sarb
scas
stos
jns
fnstenv
cltd
ret
inc
or
aaa
into
rolb
dec
jmp
stc
cwtl
sub
sbb
shl
outsb
push
and
cmc
lock
jno
nop
adcb
or
pushf
xor
push
shll
ljmp
popa
xor
rcrl
adcb
pop
loopne
rol
imul
xlat
mov
mov
or
add
daa
xchg
sbb
call
insl
shlb
test
stos
mov
mov
xchg
outsb
xchg
pop
jae
les
xlat
xor
push
lds
addr16
cs
sbb
sub
inc
xor
pop
mov
imul
sub
push
rdtsc
rorb
lock
jge
pop
loopne
lret
or
icebp
adc
add
cli
jae
cwtl
xor
mull
mov
xchg
out
fs
daa
push
ficompl
mov
mov
jns,pn
adc
adc
les
cmp
cwtl
xchg
cmpsb
stc
jmp
pop
xor
jl
mov
jl
loope
sub
pop
xchg
mov
cmp
jmp
outsb
adc
aad
sbb
mov
aam
inc
inc
add
pop
test
sub
aam
je
xor
mov
add
mov
mov
imul
adc
push
outsl
cmp
ror
xor
and
repz
xor
cmp
jno
lahf
push
jecxz
mov
cmp
mov
sahf
jb
popa
andl
pop
out
loopne
push
cmp
pop
inc
mov
mov
mov
and
dec
mov
lcall
insb
cmpsb
in
stc
inc
mov
pop
test
pushf
ljmp
mov
clc
pop
cmpsb
test
cltd
push
jg,pn
push
xchg
mov
mov
adc
push
fstpt
pop
add
mov
mov
sub
xchg
xchg
sub
mov
in
sub
cmp
mov
arpl
inc
into
mov
xor
sahf
cmp
insb
mov
std
cmp
iret
sarb
xor
icebp
stc
add
add
inc
mov
and
add
decl
lods
popa
push
and
ss
mov
imul
mov
pop
cmp
clc
es
dec
lret
jnp
in
pop
jecxz
fistpl
sub
fwait
lea
mov
int3
pop
fdivp
cld
lods
push
and
out
lock
add
hlt
mov
js
popa
push
decl
push
loopne
push
push
test
lret
jle
mov
adc
inc
xlat
std
shll
ds
lret
in
das
dec
mov
jecxz
fisttps
inc
adc
mov
lods
and
js
jl
std
mov
mov
jbe
xchg
mov
mov
gs
or
pushf
mov
orl
shlb
mov
mov
sbb
xchg
aaa
or
inc
adcl
std
xor
leave
mov
sti
pop
jb
aaa
popf
jmp
scas
jg
or
ds
sub
loopne
dec
cmp
dec
out
mov
dec
lds
mov
dec
dec
stos
mov
aam
mov
inc
shll
sbb
and
sbb
mov
add
rorb
into
stc
daa
xlat
adc
jnp
shll
mov
push
xor
ljmp
cmpsl
cmp
aad
dec
add
mov
mov
mov
les
xor
test
js
or
mov
inc
fisubrs
icebp
jecxz
stos
aam
call
add
rclb
jl
aam
rorl
enter
gs
in
and
ror
pop
fs
push
add
stc
xor
cwtl
push
nop
cmpsb
pop
push
icebp
nop
jle
add
adc
or
and
call
push
sbb
rcl
push
mov
push
jge
cltd
sbb
ds
jb
mov
xor
adc
mov
orl
aam
in
call
fldenv
mov
fldenv
cmp
das
sub
dec
jnp
dec
addr16
addr16
out
imulb
ljmp
ret
dec
fcomp
sbb
lods
jnp
fidivrs
popf
xor
ds
push
cmc
add
lcall
xchg
insl
ja
pop
mov
lret
popf
popf
inc
sahf
and
mov
add
sub
xor
sahf
lret
add
push
xor
shll
pop
lods
jmp
adc
or
enter
mov
mov
pop
pushl
imul
and
xor
jb
loopne
mov
pop
cmpsb
add
call
repz
cltd
lcall
pop
ret
cmp
je
adc
mov
ja
mov
aas
push
mov
push
and
sub
push
sbb
pop
arpl
or
sub
mov
in
or
in
jmp
mov
ja
enter
and
pop
lcall
popa
xor
mov
sub
loop
aam
mov
ljmp
jl
inc
mov
jno
fsts
cmc
add
lds
cmc
fs
fs
xor
cmp
dec
sub
aas
ds
and
add
mov
frstor
jl
add
cmp
popf
dec
stc
mov
jmp
aaa
je
xorb
jecxz
jae
in
inc
hlt
push
daa
jns
insb
subl
jmp
mov
sbb
iret
aam
repnz
stc
adc
cmp
arpl
pusha
xchg
cmovl
mov
cli
sub
fimull
sub
xor
idivb
or
and
mov
sub
xchg
insl
jl
fwait
scas
sub
dec
xchg
sahf
mov
sub
fwait
push
adc
sub
out
xchg
repz
mov
aad
imul
adc
lahf
and
aas
cmp
sub
sbb
mov
imulw
xchg
hlt
in
stos
fildll
mov
and
pop
test
mov
adc
fsubrl
adc
das
sti
cmp
add
inc
subb
out
or
loop
inc
out
and
je
or
test
lods
cmp
ret
mov
enter
push
mov
int
lret
iret
jo
lods
rol
mov
and
pop
pop
mov
adc
mov
movsl
outsl
test
inc
push
shr
mov
lahf
dec
bnd
mov
xchg
pop
inc
cmp
sbb
ret
xchg
iret
pop
push
jo
ret
mov
adc
ret
cmp
bound
cli
movsl
mov
jecxz
psubusb
mov
sbb
push
popa
mov
and
clc
dec
int
lock
jecxz
scas
dec
arpl
xor
mov
pop
sbb
js
lea
inc
adc
mov
mov
cltd
jecxz
lods
push
addl
and
jno
test
xchg
insl
mov
les
loope
sbb
scas
or
and
pop
test
lret
imul
nop
enter
pop
lcall
add
loope
aad
mov
pop
jmp
daa
sbb
jecxz
arpl
and
push
adc
stos
pushf
into
push
fs
frstor
mov
pusha
jle
sub
cmc
dec
lret
mov
pop
imul
gs
shl
ja
cmp
add
dec
cmp
dec
and
scas
mov
push
adc
adc
lret
fisubrl
xchg
push
xchg
mov
frstor
pop
or
clc
ljmp
sbb
jmp
dec
push
and
fdivs
outsl
xchg
fbld
push
jp
outsb
movsb
arpl
les
jge
adc
mov
ljmp
add
and
xor
pusha
cmc
or
or
and
mov
lea
fwait
cmpsl
out
xchg
xor
mov
jmp
push
xorb
dec
pop
inc
or
push
pop
fmull
push
and
subps
lea
push
or
inc
fwait
jl
add
leave
mov
fwait
adcl
dec
into
or
push
push
repnz
and
jle
push
rcrb
mov
stos
fisttps
jns
bound
fistpl
pop
xchg
cli
iret
lods
rcl
shrl
in
aaa
sahf
mov
ret
les
jae
add
xchg
or
not
sahf
orl
mov
leave
lds
mov
mov
and
in
mov
mov
insb
mov
bound
xchg
inc
push
rcrb
push
pop
test
sbb
int
sub
xchg
icebp
mov
out
sub
lahf
mov
push
aaa
mov
adcb
ja
sti
cli
push
imul
cld
test
sar
shrl
cmpsb
dec
jns
and
ret
xor
insb
fdivrs
in
push
pop
push
int
push
push
cmp
ljmp
cld
adc
sti
pop
mov
cmp
cs
das
pop
and
jp
and
in
inc
xchg
xor
iret
mov
sbb
inc
mov
insb
addr16
sti
mov
pop
aaa
lods
stos
fdivl
dec
loop
es
addr16
add
and
pop
aas
ljmp
aas
dec
push
cmp
in
dec
loop
inc
inc
cmp
out
sbb
mov
push
aam
bound
xchg
sub
jnp
mov
jb
sbb
shlb
sbb
mov
xchg
in
clc
jb
jb
add
or
scas
cmp
stos
lods
add
push
dec
cmp
push
jne
mov
cltd
or
mov
pop
scas
jl
inc
push
jbe
push
xor
jne
xor
push
imul
jl
inc
mov
setae
aaa
sub
adc
inc
aaa
xor
js
into
lock
out
leave
sti
movl
xlat
add
or
mov
adcl
test
jns
test
xor
cmpsl
and
out
stos
push
xchg
mov
dec
xchg
sub
xor
aad
je
test
enter
push
pop
rcl
and
mov
iret
jnp
subl
ljmp
dec
outsl
into
outsb
popa
mov
jnp
mov
sbb
shrb
xchg
les
xchg
jnp
stos
pop
adc
leave
xchg
jns
lea
flds
ds
mov
adc
mov
jns
or
push
sub
fidivrl
orl
pushf
icebp
mov
or
push
aaa
test
and
ja
mov
xor
jmp
sbb
addr16
push
push
test
or
lea
dec
xlat
roll
scas
stos
adc
cs
lods
xor
push
add
in
jge
jge
fdivr
cwtl
jo
movsb
jo
pop
cmp
dec
rcll
cmc
add
cs
fldenv
inc
jo
out
xor
pushf
jbe
jns
mov
dec
sti
rol
sub
adc
pop
xor
dec
jb
outsb
fdivrl
mov
or
inc
test
mov
xchg
in
and
push
jbe
setl
inc
into
lahf
mov
mov
out
icebp
sub
cmp
or
pop
and
xchg
mov
clc
push
pop
cmp
loope
push
mov
mov
imul
sub
cmp
jbe
ljmp
sub
fisubrl
pop
popf
xorl
inc
popa
adc
push
mov
scas
adc
mov
xchg
mov
cmpsb
mov
mov
adc
stos
push
inc
adc
jmp
pop
mov
inc
and
mov
out
icebp
push
push
insb
cmp
xor
scas
aaa
mov
fwait
mov
sti
and
outsb
aam
loope
push
sub
pop
mov
cmpsl
test
lcall
pop
sahf
add
mov
lahf
stos
inc
pop
mov
adc
inc
jno
push
inc
jp
jmp
mov
sub
inc
loop
iret
inc
or
push
inc
sub
repnz
hlt
sub
push
movb
jl
decb
mov
imull
mov
xchg
or
shlb
scas
inc
and
outsb
xchg
cmpsb
jne
push
shll
and
xchg
ret
in
lock
popa
dec
movsb
sahf
and
xchg
addr16
jne
cmp
xchg
push
call
dec
mov
ljmp
test
adc
nop
mov
sahf
cmp
sbb
lods
ja
xchg
lret
pop
ljmp
in
xchg
testl
sub
pusha
push
js
sub
bound
jbe
push
mov
test
adc
sbb
xchg
fwait
sub
cmpsl
jne
pop
pop
insl
iret
or
sub
inc
insl
mov
repnz
fxch
mov
adc
stc
xlat
inc
push
fiadds
notl
adc
inc
nop
les
dec
clc
xlat
addr16
push
mov
mov
cli
sub
fnsave
mov
mov
das
lea
lds
adcl
jp
out
add
jb
hlt
inc
sub
out
fsubrl
jp
fcoml
adc
mov
adc
pop
fisttpll
dec
in
sti
dec
insl
lock
jge
mov
mov
mov
inc
ficoms
fsts
bound
or
pop
notb
jo
aas
test
mov
push
push
stos
movsb
imul
push
in
xor
pop
pop
jmp
int
lret
out
sti
inc
pop
add
mov
mov
sarl
sbb
sub
in
out
jne
jns
hlt
add
push
scas
dec
mov
scas
fdivl
adc
mov
fists
inc
hlt
add
and
sub
cmp
mov
mov
cmpb
popl
rcrl
dec
xor
insl
xchg
mov
in
or
mov
scas
push
mov
cs
and
fstp
jne
inc
xchg
mov
lret
and
lock
fadds
sub
xchg
inc
in
inc
fwait
lock
nop
dec
adc
cmp
sub
scas
sbb
jg
shrl
lock
lret
xchg
xor
cs
jg
push
push
insb
out
out
push
sbb
adc
lahf
lcall
sarb
mov
sub
scas
push
mov
movsb
push
and
dec
imul
sub
xor
push
push
repz
cmp
inc
dec
enter
mov
into
int
aad
sbb
movsl
add
std
mov
mov
sbb
outsl
js
sbbl
mov
insb
cwtl
sbb
cmpsl
sub
xor
inc
mov
lret
mov
orb
cmp
add
and
pop
pop
jle
insb
cmpsb
imul
repnz
mov
lea
bound
loope
rolb
rcrl
ficompl
in
xchg
pop
test
cmpl
jg
sbb
jle
jnp
mov
mov
xchg
pop
dec
xor
xchg
jno
adc
sti
les
je
add
outsl
add
out
iret
pushf
dec
ds
add
xor
lcall
adcl
add
mov
xchg
dec
orb
sub
xchg
sub
inc
push
das
pop
adc
daa
fs
popa
scas
mov
inc
adc
mov
dec
shrl
mov
mov
sub
mov
mov
xchg
adc
lds
je
lea
arpl
push
push
out
ja
icebp
and
cld
adc
in
and
into
test
push
jmp
mov
or
imul
fsubr
pand
adc
andb
inc
mov
cmp
into
add
lret
ffreep
scas
pusha
jne
push
lret
mov
mov
inc
loop
mov
jo
push
add
push
mov
jmp
mov
push
add
sub
leave
loopne
jmp
add
out
test
pop
test
inc
sbb
outsb
xor
or
dec
jle
stos
sbb
xchg
std
xor
shr
dec
xchg
das
xchg
clc
lea
pop
aam
test
cli
pop
dec
sub
je
sub
stos
cwtl
sub
pushf
call
xor
jl
aas
sbbb
mov
cmpsl
jnp
sub
mov
sbb
dec
movsl
fnstenv
xor
push
int
imul
into
sahf
lock
movsl
adc
mov
rcr
and
and
xchg
cmc
add
push
subl
mov
pop
and
outsb
or
call
adc
clc
cltd
adc
add
xor
add
repz
mov
jae
inc
or
pusha
cli
in
xchg
mov
ss
mov
xlat
inc
dec
xchg
cmc
cs
inc
jne
out
je
int
out
mov
cmp
loopne
mov
or
mov
inc
mov
decb
divb
mov
or
push
dec
push
frstor
or
xchg
pop
sub
pop
mov
push
dec
outsl
rdtsc
test
cs
inc
lock
loop
mov
and
dec
or
cmp
insb
inc
jb
cmp
inc
push
repz
xchg
xchg
and
jnp
mov
sub
outsl
test
aas
and
bound
and
rcll
jg
cmp
fcompl
xchg
jl
cmpsb
cmpsb
js
sti
sti
mov
mov
sub
movsb
inc
or
outsl
outsb
or
mov
stos
push
pushf
rcrl
push
mov
fmull
ret
push
cmpsb
test
testb
ss
pop
outsl
jne
sti
out
insl
je
loop
ret
jbe
lret
leave
sahf
fisttps
xor
das
mov
adc
fists
add
or
shr
pop
sub
jp
aaa
mov
outsb
imul
js
fsub
out
mov
in
xor
shlb
mov
sub
movsl
jns
jo
dec
cmpb
nop
jno
add
rcll
adc
popa
adc
fisubl
inc
das
jns
add
daa
dec
cmc
movsb
jle
mov
or
test
mov
jnp
ret
dec
jo
in
lods
addr16
push
mov
cs
add
pushf
add
out
xor
add
cmp
inc
imul
ljmp
lar
std
out
jbe
enter
cld
enter
sbb
inc
xchg
push
test
rorb
movsb
push
mov
xlat
cmp
pop
mov
xchg
loope
ficoml
ljmp
in
push
and
ja
jle
fisttpll
push
dec
push
pushf
out
in
cmp
enter
sbb
push
mov
and
adc
sbb
gs
out
and
sbb
dec
mov
test
ret
sub
inc
es
orb
inc
insb
mov
movsl
lds
sub
jecxz
inc
mov
clc
int
dec
cmp
mov
and
sub
loopne
into
pop
mov
jne
and
insb
jl
pop
sbbl
xchg
push
xchg
dec
lods
xor
cwtl
mov
inc
movsb
pop
mov
js
push
jg
jbe
sbb
icebp
fdivr
repnz
pop
sub
test
xor
mov
xor
lea
lahf
negl
pushf
rolb
sub
jp
dec
xor
int3
add
ret
nop
gs
lcall
sahf
pop
ret
loopne
jl
xchg
test
pushf
dec
lcall
and
aaa
pop
pop
cmp
leave
or
mov
mov
pop
mov
enter
test
inc
lret
scas
inc
enter
push
nop
push
icebp
push
frstor
sub
movsl
mov
outsb
outsl
pop
imul
ror
gs
lret
push
pop
insl
out
es
xor
imul
jae
imul
cs
xor
mov
xlat
jae
pop
mov
cmp
test
sbb
cmpb
xchg
shll
and
add
pushf
mov
popf
push
pop
pop
pop
jo
inc
in
jmp
xor
mov
push
sub
xor
sbb
cmp
andb
scas
pop
scas
cmpsb
repz
ja
xchg
cwtl
jno
inc
movsb
xchg
pop
pop
cmp
std
stos
lret
test
into
sarl
lods
lods
pop
inc
shl
xchg
sbb
clc
test
xchg
push
callw
outsl
scas
cltd
test
mov
into
pushf
sahf
mov
mov
lahf
pushf
push
fs
and
les
shrl
jbe
cli
iret
jg
cmp
and
into
loop
sbb
xchg
fcomps
jecxz
or
jbe
jns
xchg
jo
fwait
call
xchg
pop
movsl
mov
nop
fcomps
mov
imul
push
je
fwait
cmp
lods
jge
aad
mov
sbb
inc
sbb
jns
int
ja
xor
and
addr16
stos
dec
aam
popf
cmp
adc
push
sbb
mov
cmpsl
cltd
lea
and
inc
test
inc
notb
jmp
adc
dec
adc
jecxz
pop
scas
pop
les
mov
test
push
and
mov
outsl
xchg
fs
lret
jle
test
jge
mov
mov
loope
xchg
xchg
fldenv
xchg
sbb
xchg
push
mul
enter
addr16
jp
mov
and
testb
les
ret
dec
iret
lock
xchg
jl,pn
mov
adc
and
lods
adc
lock
negl
lcall
adc
and
fisubrs
xchg
int3
jp
mov
lahf
cmp
adc
es
sub
sti
push
les
jo
xlat
jno
mov
or
ss
and
sub
clc
xchg
andl
dec
dec
xchg
and
in
ffreep
add
or
into
mov
insb
jl
mov
lock
xor
cld
cmp
pop
push
and
fadd
jmp
and
mov
xor
xor
clc
xlat
mov
cmp
in
xchg
add
and
pop
aas
ja
jl
ds
repnz
pop
lods
dec
inc
cmp
cmpsb
popf
cli
rorl
in
jnp
mov
xor
sbb
dec
lret
test
scas
add
inc
dec
sbb
adc
stos
jp
fbstp
clc
sub
dec
mov
ret
fnstcw
pop
sub
sbb
inc
lods
pop
sub
pusha
out
sbb
fs
in
nop
adc
cmp
repz
cmp
or
dec
mov
stc
std
in
sub
jge
stc
lds
stc
and
dec
and
jnp
push
sbb
inc
dec
push
aas
push
test
add
loopne
jp
lea
lock
push
mov
aad
dec
repz
icebp
cmpsl
imul
cld
sub
fisubs
shlw
dec
mov
fidivrs
faddp
fisubrs
inc
loope
cmp
adc
pop
sbb
aas
call
stc
mov
nop
outsl
xchg
mov
push
adc
cmp
dec
notl
pop
fwait
shrb
shrl
test
movsl
test
ret
test
push
int
and
push
pusha
scas
fstpt
jne
xchg
mov
push
aaa
repz
nop
movsl
in
fstps
lret
mov
addl
inc
lods
mov
pop
adc
sbb
add
insl
cs
jge
adc
aam
sbb
cltd
and
inc
and
mov
mov
mov
or
push
pushl
gs
xchg
rorb
dec
mulb
mov
xchg
cmp
add
xchg
leave
fs
jbe
lds
lds
cmpsl
xchg
add
pop
cmp
dec
inc
lcall
cwtl
sbb
mov
or
aas
cmp
movsb
mov
jno
sbb
popa
jecxz
cmp
lock
xorb
aam
js
inc
fcoms
xor
rol
lods
bound
push
xor
xor
or
iret
jecxz
fiadds
js
cltd
inc
clc
and
in
fimull
inc
add
adc
xor
push
xchg
or
jb
xor
mov
add
jl
xchg
insl
jno
mov
add
mov
pushf
outsl
cltd
xlat
inc
push
inc
inc
ja
jg
and
sti
jo
adc
sbb
gs
mov
jne
or
inc
adc
add
fstl
xor
dec
mov
mov
mov
pop
inc
call
negb
aam
jle
sub
jmp
sub
and
inc
pop
pop
mov
sub
pusha
test
pop
es
lret
pop
int
seta
pop
push
stos
or
and
in
mov
shl
cmp
ds
push
mov
adc
xchg
stos
lods
lret
add
es
sbb
lea
mov
sub
cmp
pop
fildll
inc
push
sbbb
dec
outsb
int
cmp
scas
stos
ficompl
mov
nop
jl
ds
insl
ljmp
sub
int3
inc
sbb
xchg
enter
xchg
jmp
jbe
push
test
adc
and
push
loopne
xor
pushf
pop
push
lods
adc
inc
and
dec
cmp
jo
cmc
fninit
aad
aad
das
imul
push
repz
or
xor
pusha
mov
in
inc
add
mov
fldt
push
jmp
cmp
add
std
movsl
arpl
add
push
xor
call
mov
dec
loop
pop
pop
xchg
sub
ret
and
inc
add
hlt
movsb
inc
sbb
or
inc
jbe
arpl
scas
ret
loopne
push
dec
push
lds
addl
xor
das
inc
add
or
fiaddl
gs
into
aaa
sub
fstp
or
and
sub
push
cmp
cmp
sub
popa
dec
adc
push
and
xchg
pop
les
sub
xlat
aaa
repz
sub
jle
add
ficomps
mov
or
aad
inc
stc
mov
call
pop
nop
movsl
ffreep
fnstenv
std
sub
call
loop
mov
and
sbb
and
inc
or
test
xchg
fsubs
stos
mov
movb
mov
movsl
inc
push
loop
jb
sahf
and
std
out
jp
jno
fcomip
jle
lcall
inc
lahf
out
aaa
xchg
daa
cmpsl
sub
xchg
push
xorb
push
in
cmpsl
aad
in
mov
xor
xor
xchg
pop
add
mov
mov
pop
lahf
nop/reserved
mov
aam
or
hlt
sub
popf
push
out
sahf
mov
arpl
cs
stos
cmp
xor
lock
std
sahf
or
push
adc
popf
js
leave
jnp
icebp
jmp
fmull
ret
ss
mov
and
sbb
mov
lret
mov
sub
in
inc
rcll
or
sub
push
push
xor
icebp
int3
pop
jnp
fwait
xchg
mov
ret
popf
mov
lea
outsb
mov
pushf
sub
lret
imul
xchg
mov
mov
mov
in
lea
mov
sahf
xchg
sbb
pop
and
mov
clc
dec
ds
add
cmpl
clc
push
std
pop
jnp
pop
mov
inc
jo
clc
push
pop
int3
out
shll
into
mov
xchg
sub
jns
test
pushf
cmp
ja
dec
rol
push
lods
sub
imul
nop
jb
xchg
xor
mov
fsubrs
sub
jne
imul
and
stc
and
stos
xor
fs
pop
imull
push
xchg
loopne
adc
negl
out
mov
shlb
fistps
ds
push
popf
sahf
leave
xor
and
sti
std
out
or
lret
loopne
xor
movsl
arpl
inc
adc
nop
xor
push
inc
adc
xor
push
xchg
mov
fdivs
lods
test
daa
es
sarl
xor
sbb
fistpll
mov
add
cmp
mov
jns
enter
sbb
adc
pop
xor
jo
rclb
xor
sub
shlb
mov
xor
popf
lds
aam
mov
sbb
pop
popa
scas
pop
fisttpll
lcall
aas
jb
or
pop
pop
js
add
cmpsb
inc
sub
fwait
pop
xchg
imul
fnsave
scas
aad
jg
pushf
mov
adc
orl
xor
dec
insl
dec
out
rcl
mov
mov
mov
ret
out
jmp
pop
mov
orl
add
jb
cmpsl
mov
fisttpl
jecxz
or
in
out
cmc
jge
sub
lock
push
cmp
mov
adc
sub
fsubrs
repz
sahf
insl
mov
out
sbb
sbb
xbegin
jns
mov
xchg
adc
jle
inc
push
rcrb
cmc
faddp
sub
xchg
scas
sbb
fstps
mov
loop
pop
push
int
xchg
es
in
into
fdivrs
ljmp
jmp
int
push
mov
pop
xor
pop
ret
xchg
fnstsw
rclb
fsubrp
xchg
movsb
fstpt
ret
adc
push
outsl
jp
xchg
cltd
iret
mov
cmp
xchg
cmp
insl
inc
ficoml
mov
dec
cld
or
push
mov
pop
push
lea
shlb
sub
jmp
addl
xchg
mov
push
mov
xchg
fwait
outsb
cmpsl
ffreep
cmp
outsb
add
cmp
stc
out
xchg
adc
stos
mov
mov
inc
out
adc
mov
xor
jae
insl
out
outsl
fsub
pop
pop
int3
pop
xchg
lcall
gs
inc
arpl
mov
push
pop
xchg
cmp
or
cwtl
mov
mov
imul
iret
add
pop
ds
repz
or
adc
aas
pusha
push
setle
cltd
enter
shrl
adc
xor
lret
push
call
mov
mov
lahf
push
mov
pop
xlat
sub
sbb
ds
or
gs
mov
mov
movb
cwtl
hlt
and
push
add
cwtl
jbe
mov
lods
cmpsl
bound
or
popf
jo
xor
inc
les
pop
inc
test
loop
addr16
xor
mov
sbb
fcompl
scas
lds
rol
inc
cld
fildll
int3
xchg
fcoms
rcl
cmp
daa
jo
stos
pop
cmp
or
cmpsl
adc
and
and
sub
imul
sti
rol
sub
fstpl
inc
mov
mov
cwtl
push
xchg
sbb
or
inc
addr16
lahf
sub
inc
mov
sahf
cmp
orb
outsb
shlb
add
inc
mov
test
inc
fwait
xlat
sbb
dec
loope
mov
add
imul
aam
mov
mov
ss
cmpsb
inc
xchg
mov
adc
push
xchg
mov
loope
movl
adc
pop
add
out
scas
inc
lcall
fldenv
jne
mov
push
fdivrl
je
call
movsb
jbe
sbb
scas
sti
mov
and
inc
outsb
sub
fdiv
cs
mov
push
sub
std
add
fldenv
inc
pop
inc
ror
repnz
add
adc
fsubrl
and
lea
sub
ficoml
lret
lds
cmpsb
xor
or
and
sbb
and
xchg
les
loopne
push
sub
std
loope
pushl
into
lock
adc
fs
sub
decl
dec
lahf
xor
push
repnz
mov
xlat
sub
out
iret
cmpsb
pop
sti
out
out
roll
mov
push
push
sbb
pop
aad
fisttpll
push
sub
vmovups
je
mov
adc
icebp
in
sbb
enter
dec
mov
adcl
icebp
adc
rcr
sbb
xor
cmp
pop
push
movsb
gs
mov
rcll
fisttpl
push
cwtl
scas
imul
mov
lcall
mov
mov
add
fdivrs
lea
fsubrs
aam
cltd
or
insb
sub
mov
or
out
lahf
sbb
sub
fidivl
les
mov
test
and
inc
and
pop
cs
lcall
pop
cmp
xor
bound
lahf
push
dec
vcvtps2pd
mov
mov
in
int3
test
jno
ret
sbb
mov
push
inc
xor
subl
out
mov
pop
jg
stc
mov
in
sbb
cld
inc
outsb
stos
mov
jg
fmull
cwtl
dec
imul
inc
pop
sub
lods
lock
jecxz
clc
push
incl
ja
or
stc
repnz
and
arpl
cmp
mov
or
fnstcw
sbb
sbb
sbb
loop
add
add
js
adc
cmc
packuswb
jo
leave
stos
push
jmp
mov
cmp
dec
jb
ja
ljmp
and
ss
sti
addr16
jne
pop
cmpsl
push
mov
push
inc
pop
dec
pop
dec
lret
dec
inc
jmp
dec
pop
xor
fs
inc
mov
inc
into
add
cwtl
and
push
into
xchg
fwait
cltd
and
mov
adc
cmpsb
out
andb
lcall
cmp
dec
mov
xchg
push
add
push
stos
dec
adc
enter
ljmp
cmp
in
insl
and
rorb
stos
xchg
in
jne
lcall
std
icebp
fisttps
jb
sub
mov
xor
inc
sub
scas
xchg
mov
psllw
jbe
test
sbb
pop
xchg
int
movl
add
test
imul
lds
mov
fs
hlt
mov
cmp
dec
clc
test
scas
cmp
dec
gs
jbe
jl
xchg
mov
nop
push
jge
icebp
cwtl
or
insb
mov
xorb
ret
pop
stos
xchg
out
pop
loopne
sub
xchg
jae
xor
imul
fsts
cli
sub
mov
aad
xchg
xchg
aad
enter
dec
pusha
lcall
pop
insb
push
sarb
shlb
mov
mov
push
xchg
fsubrs
jnp
cmc
sti
insb
fwait
test
mov
pop
mov
je
pusha
in
dec
sub
pop
es
popl
cmp
hlt
push
dec
das
les
mov
adc
mov
mov
pop
jne
inc
outsl
sub
mov
shlb
adc
dec
iret
mov
jmp
stos
and
mov
xlat
mov
data16
ss
fisttpl
push
ficompl
push
cmp
cmp
jne
mov
jae
sub
inc
xor
inc
jae
fucomip
jecxz
and
mov
imul
pop
push
pushf
lret
dec
popa
xor
push
andl
or
test
repnz
jle
jecxz
mov
mov
add
mov
mov
dec
icebp
cmp
pop
cmp
jecxz
hlt
into
mov
into
jge
push
adc
fists
push
sbb
or
mov
add
sub
lods
pop
add
jmp
xchg
inc
or
scas
mov
xchg
sbb
cmp
push
xlat
xchg
cmp
pop
mov
mov
sbb
call
ja
rclb
jl
push
jl
cli
dec
shlb
mov
mov
pop
sti
cmpsb
sub
in
stc
sub
in
clc
icebp
stos
xchg
xchg
es
gs
push
icebp
jge
push
sub
add
push
jge
push
lret
pop
inc
inc
lds
das
or
lods
jnp
das
int3
cwtl
fs
dec
mov
mov
mov
subb
test
int3
push
out
xchg
sahf
outsb
and
in
mov
scas
js
iret
sbb
push
dec
xor
cmp
push
in
pop
mov
mov
pop
cmp
std
loope
gs
les
push
add
negb
inc
xor
add
out
andl
cli
popf
adc
jae
cwtl
mov
dec
into
or
int3
push
inc
cmp
mov
das
mov
dec
lret
push
ja
xor
jnp
lods
call
dec
lock
pop
mov
inc
dec
and
and
out
jl
ljmp
mov
das
sub
xchg
gs
ret
lock
popa
jbe
test
inc
jmp
ret
and
fisubs
jno
ja
xor
push
mov
divb
dec
cmp
iret
out
and
inc
lods
push
cli
popf
xchg
imul
in
idivl
or
push
test
xor
jns
arpl
mov
fwait
cmpsl
and
arpl
jle
inc
mov
stos
in
movsb
es
mov
mov
xor
hlt
mov
xchg
mov
or
adc
adc
lds
mov
icebp
mov
icebp
xor
das
jg
push
mov
ds
pusha
mov
add
mov
xor
xor
jmp
push
paddw
fildl
popa
iret
or
repz
and
jp
arpl
mov
hlt
mov
jnp
fnsave
lahf
cmpsb
inc
push
cmpl
orb
ret
bound
push
shrl
dec
outsl
sub
adc
pop
cs
xorl
push
push
jecxz
pop
sbb
dec
in
shr
enter
or
arpl
xchg
stc
pop
mov
stos
stos
adc
push
int
gs
sbb
mov
fistl
insb
loop
sub
adc
jge
jmp
int3
xchg
dec
xchg
and
mov
lea
or
pop
lods
xor
lods
divb
sahf
cmp
fistl
mov
aaa
xor
xchg
pop
mov
cmp
push
addr16
pop
adc
and
jmp
push
push
and
mov
xchg
call
and
dec
cmp
add
mov
sub
mov
or
jae
fildl
pop
movl
out
mov
cld
inc
jo
add
lods
cwtl
fsubrl
xor
xchg
clc
xor
int
es
mov
call
jo
mov
rcrl
jg
sub
popa
and
scas
xchg
sub
pop
mov
sub
cmp
sbb
mov
lret
jb
pop
or
xchg
fwait
aam
cs
out
fimull
in
mov
xchg
mov
rolb
cmp
mov
fs
add
push
mov
xchg
inc
lcall
cmp
fisubrs
test
cmc
orb
loope
cmp
ret
mov
sub
icebp
pop
in
or
divb
sarl
ljmp
add
mov
ror
stos
iret
and
adc
or
mov
mov
or
and
aam
sub
pop
loop
dec
not
cli
xor
adcl
jl
push
add
int3
je
lods
stos
movsb
into
mov
cmpsb
mov
mov
cmp
pushf
adc
pop
dec
inc
sbb
sub
pushf
mov
lea
xchg
in
jge
call
push
adc
xchg
jb
lahf
sbb
xchg
pop
repnz
in
and
xor
rorl
outsl
cmpb
cwtl
jb
bound
sub
in
mov
cltd
mov
cmovae
dec
xchg
add
cmpl
or
loopne
pop
outsb
les
mov
jecxz
adc
setno
out
jo
xchg
mov
push
dec
lcall
insl
mov
cmpsl
popa
and
sbb
jmp
adc
mov
lret
es
xorl
das
cmp
outsl
gs
testl
lods
mov
mov
xor
lea
mov
ljmp
aam
or
lock
rclb
loope
outsb
imul
xlat
outsl
inc
cmp
mov
xor
gs
fwait
stc
pop
jmp
xchg
inc
mov
rclb
xor
mov
popa
xor
jle
fistl
idivl
lea
aas
stos
ret
aaa
mov
sub
out
movsb
lods
mov
in
arpl
insb
inc
cmc
hlt
mov
leave
dec
pop
sbb
dec
mov
sub
mov
mov
mov
repz
sbb
xlat
lea
fists
data16
pop
scas
jecxz
popf
push
lods
pop
addb
std
jmp
mov
in
add
push
js
add
call
xor
idivl
data16
jge
inc
pop
cwtl
in
ja
ret
dec
mov
adc
outsl
add
lcall
pop
jb
cmp
loopne
mov
or
mov
cmpsb
negb
shll
stos
and
pop
jmp
test
lods
stos
mov
ret
addr16
or
dec
les
cmp
inc
mov
cmp
arpl
aam
lahf
add
xchg
rol
lods
insb
clc
out
pusha
adc
jmp
and
xor
cmpb
adc
and
inc
sub
inc
sub
cmc
lds
mov
lahf
lods
test
pop
mov
push
sub
imulb
jge
jbe
inc
push
pop
cmp
arpl
cmpsb
stos
mov
mov
gs
inc
dec
dec
jl
scas
movsl
xor
in
xchg
jmp
and
insl
cld
fwait
sub
xor
inc
jg
pop
into
ret
or
aaa
shlb
push
movsl
aam
loopne,pn
adc
sub
bound
leave
insl
mov
and
pop
testl
dec
dec
and
lret
add
ss
loopne
call
mov
cmp
push
aam
das
and
fsts
lret
mov
in
das
pop
clc
and
sbb
aad
ja
inc
out
bound
test
imul
push
mov
sub
cmpb
repnz
fwait
xchg
sbb
cmp
pop
int
cmp
adc
xor
aam
fdivrs
lea
inc
mov
inc
std
or
in
or
loope
sub
in
stc
loopne
sub
ds
enter
cmp
sbb
divb
xchg
add
inc
ret
push
les
leave
inc
aaa
xlat
jns
jge
cmpsb
scas
lds
cmp
jb
out
xchg
orb
fs
subl
push
push
repz
fisttpl
lret
cmp
lods
pop
dec
dec
pop
cmc
add
popa
push
and
inc
repz
fcmovu
pop
in
push
and
mov
or
sbb
pop
and
or
dec
jae
lahf
sub
push
cs
and
lock
pop
push
popf
bound
xchg
es
dec
out
stos
dec
pop
dec
xchg
outsb
xchg
fwait
js
mov
popa
aas
adc
frstor
cld
in
fdivrl
jbe
pop
xor
push
inc
cmc
cmpsl
clc
inc
pop
rorl
pop
rorl
pop
sub
mov
loopne
push
sbb
jmp
mov
inc
mov
sub
addl
lahf
pop
sub
cwtl
sub
dec
popa
inc
inc
and
and
and
add
mov
faddl
loop
stos
mov
mov
xor
icebp
cmpb
add
cmp
sbb
xchg
rep
movsb
jne
in
popf
push
sub
mov
test
inc
subb
cmp
scas
pop
or
jmp
pop
fwait
cmpsb
jle
shll
and
rolb
orl
in
int
adc
pop
sub
es
sub
cmp
xchg
mov
cltd
roll
mov
inc
in
sub
cmpsb
jae
push
push
pushl
or
mov
xchg
mov
pop
sbb
adc
xchg
bound
lahf
jge
dec
push
faddl
xchg
pop
mov
adc
dec
in
outsl
fdivl
xchg
movsl
lods
push
lahf
fstpt
cli
adc
mov
push
int
sbb
mov
ret
push
pushf
ja
movsb
xchg
clc
mov
push
add
cmp
es
jle
shlb
xlat
aaa
or
lea
cmpsl
ret
stos
pop
rorb
mov
adc
xor
adc
dec
rcrb
clc
xor
imull
or
in
jmp
sbb
in
jns
xchg
inc
jmp
or
add
std
cli
push
sti
jb
inc
sub
ds
ret
das
scas
pop
adc
scas
pop
dec
or
in
rclb
loopne
or
and
xchg
cmp
clc
mov
push
sti
sbb
jge
icebp
dec
push
std
and
stos
mov
mov
mov
sbb
lods
mov
jno
push
fisubrl
mov
add
arpl
cmc
mov
push
lods
adc
pusha
and
in
loope
daa
xchg
xchg
pop
lea
jns
pop
inc
aaa
sub
fnstenv
fnstcw
dec
adc
in
arpl
mov
cmp
cmpl
fucom
mov
ret
sbb
loope
aas
lahf
push
dec
pop
dec
mov
repz
es
gs
mov
jns
clc
cmp
mov
sbb
cwtl
nop
cwtl
pop
pop
nop
iret
push
nop
mov
addr16
int
jmp
stos
out
loop
xor
xchg
clc
mov
pop
pop
jge
cwtl
out
repz
jae
aaa
xor
hlt
push
test
sbb
mov
stc
and
mov
inc
repz
shll
cmp
sbb
test
mov
neg
aam
push
sub
pop
out
push
pusha
sarb
lret
int3
in
lock
pop
sbb
push
test
inc
mov
jmp
dec
cmp
js
sbb
dec
lahf
xchg
cmc
mov
sbb
sti
repz
cmp
mov
andb
push
and
xor
or
jbe
fnsave
cmpsb
adc
xchg
add
adc
shlb
jne
shrl
in
mov
add
fmulp
js
mov
adc
xchg
xchg
sbb
xchg
push
movsb
lcall
sbb
jbe
mov
lds
dec
cltd
jge
mov
jbe
cli
roll
in
add
sbb
xchg
mov
repz
stc
mov
inc
xor
je
add
popa
xchg
or
leave
mov
mov
or
push
es
mov
pop
in
xchg
jb
fnsave
pop
jnp
jno
or
and
xor
dec
jnp
pushf
inc
add
js
ljmp
sub
loop
out
mov
test
in
jnp
aad
mov
push
jmp
push
xchg
sub
sbb
je
mov
lret
push
cli
pushl
or
or
movl
ds
jmp
cmpsb
iret
outsl
mov
mov
sbb
pop
aam
clc
in
push
lea
outsl
repz
fsubrs
sbb
xor
scas
bound
sub
and
jge
xchg
mov
xor
push
dec
loop
mov
jl
xchg
sbb
inc
cwtl
js
pop
and
stos
rclb
or
add
add
fisubrs
out
sbb
jmp
outsl
push
jnp
jnp
cmp
push
shlb
xchg
add
aam
adc
cmp
daa
aas
ret
test
lea
jbe
loope
push
loop
xor
arpl
and
inc
push
dec
add
push
xchg
dec
in
test
scas
adcb
mov
mov
int3
rorb
push
insb
mov
push
pop
lds
repz
xor
mov
jns
push
adc
adcl
call
shl
cmp
lret
dec
mov
out
mov
jl
icebp
xchg
hlt
sbb
push
sahf
imul
vmread
mov
ret
fiaddl
xchg
lea
shlb
sar
pushf
loop
int3
xor
filds
sub
mov
push
lods
jle
jae
lret
lret
mov
loope
sub
jno
and
mov
aaa
mov
sbb
loopne
sub
test
pop
xor
dec
int
dec
pop
mov
ret
xor
jmp
movsb
push
in
dec
and
pop
lret
xchg
fsubl
out
sbb
fnsave
xor
test
dec
sbb
dec
and
repnz
sub
cmp
lods
sbb
mov
and
push
and
das
outsb
cltd
lret
test
iret
add
push
push
jle
daa
in
jge
pushf
mov
pop
cmpsl
xchg
sbb
mov
xchg
jle
popa
mov
cmp
stos
subb
xor
pop
mov
or
jno
mov
jp
lods
adc
sbb
lahf
mov
mov
call
mov
mov
jb
dec
es
orb
lock
cld
sub
lcall
cmpsl
and
mov
shll
and
push
push
dec
push
sub
jno
jle
loope
jp
cmc
js
popa
sarl
dec
cmp
jmp
xchg
andl
xor
lods
outsl
jge
inc
xor
add
incl
sbb
mov
jns
pop
inc
loopne
sub
jecxz
mov
mov
fbstp
addl
mov
cmpsb
mov
popa
push
mov
adc
sub
bound
sub
popa
daa
inc
jbe,pt
pop
fcomps
mov
cmpsb
and
lret
mov
jp
fstpl
jle
pop
in
jns
cmp
out
mov
fstps
cmp
cmp
paddd
sub
mov
mov
push
adc
subb
push
out
pop
push
lods
stos
sub
aas
cld
sbb
je
cmc
dec
cli
js
inc
jmp
test
lret
in
mov
push
rcll
jecxz
out
filds
dec
mov
test
insl
out
int3
jnp
jge
ss
int
stos
je
xchg
push
inc
loope
mov
mov
idivb
or
test
mov
incl
jns
je
and
cwtl
sahf
sub
addl
and
mov
icebp
cmp
mov
or
or
mov
push
cmp
xor
mov
sub
fbld
fcompl
andl
sub
push
dec
xlat
cmp
mov
lret
std
jns
sbb
out
pop
xchg
jge
sbb
pop
das
pop
sbb
rolb
xchg
andl
ss
dec
cwtl
cmp
dec
ds
or
jnp
push
jnp
pop
jecxz
push
movsb
out
mov
pop
pusha
scas
mov
ret
nop
outsb
aad
dec
cmp
rclb
add
or
inc
sub
jg
add
add
jae
push
int
push
dec
cmpsl
aad
jae
add
mov
xchg
inc
pop
xorb
cmp
xor
xchg
lock
jmp
xor
sub
gs
test
inc
mov
xchg
icebp
cs
test
cld
ja
iret
or
subb
mov
into
pop
negb
push
adc
loopne
jge
jp
roll
scas
rcl
cld
jne
mov
mov
adc
iret
adc
insl
inc
adc
cmp
aaa
pushf
lcall
pop
sbb
mov
fucomi
xchg
outsl
push
out
out
clc
cltd
xor
mov
push
sahf
addb
inc
inc
jp
jl
inc
mov
rorl
or
out
and
jl
imul
testb
or
mov
in
mov
xchg
xor
imul
adc
clc
xchg
and
fildll
ja
leave
iret
jle
sbb
push
addl
push
rolb
movsb
testl
push
adc
lock
adc
dec
sbb
shlb
divl
gs
pop
dec
jg
pop
mov
adc
mov
cmp
lea
sbb
adc
mov
xchg
push
pop
int
dec
xor
out
or
js
mov
push
pop
dec
addr16
inc
jne
lcall
push
xchg
ret
scas
inc
mov
lods
and
xchg
subb
sub
adc
popa
fucomi
fnsave
pop
iret
rorl
and
fsub
dec
hlt
loopne
lods
sbb
sub
arpl
stos
dec
cs
int
in
nop
repz
pop
add
dec
adcl
xor
aaa
xor
mov
in
aad
sub
push
fs
jnp
fdivrs
dec
test
shl
push
sahf
or
out
pop
mov
pusha
xor
pushf
clc
pop
inc
test
adc
xorl
xor
push
cmp
out
imul
pop
sbb
or
mov
ror
shr
push
adc
mul
jo
fucomip
dec
add
mov
mov
mov
push
fidivl
ror
mov
in
cmp
loope
mov
dec
lea
cltd
lret
inc
cmp
pop
mov
aam
adc
push
subb
fcmove
sub
sbbl
in
shrl
inc
mov
divl
aam
cmp
arpl
mov
xchg
into
inc
adc
cmp
lea
ss
mov
sti
inc
add
scas
int3
getsec
bnd
inc
or
xlat
xchg
fcmovne
fiaddl
das
lea
sahf
fwait
arpl
xor
push
sbb
pusha
sbb
mov
aam
orl
push
mov
popa
loope
add
xor
jl
es
dec
mov
push
or
repnz
mov
cs
pop
jl
mov
cmp
test
scas
lcall
push
mov
cmp
nop
dec
movb
loope
pop
js
pop
roll
js
popa
jmp
into
das
jbe
xchg
out
jbe
or
push
dec
push
mov
insb
dec
pop
xor
adcb
mov
out
add
sub
add
or
add
xchg
sbbl
push
mov
xor
fistl
pop
iret
dec
rol
mov
and
push
aas
or
push
stc
ficomps
inc
mov
add
jns
lds
outsb
icebp
lods
jno
mov
dec
jmp
mov
pop
mov
and
mov
mov
loopne
lcall
aaa
or
int3
gs
pop
in
mul
cmpsl
es
jnp
and
jb
dec
xchg
push
cli
or
xchg
repz
fsubr
pop
xchg
adc
int3
inc
mov
sarl
cltd
hlt
not
jae
jg
loopne
dec
pop
lods
mov
push
sahf
movsb
mov
cli
jns
popa
push
cld
mov
cli
push
xchg
loopne
sti
dec
icebp
fwait
sbbl
sbb
or
cmp
mov
ds
push
orl
cmpb
nop
fstpt
and
in
fbstp
xor
out
cmp
cli
sbb
shl
xor
push
insb
pusha
cmp
xor
cs
sub
or
or
in
adc
jmp
xor
hlt
iret
adc
inc
mov
mov
popf
inc
fldl
sahf
xchg
dec
insb
xchg
scas
mov
movsl
xchg
mov
incb
out
inc
enter
pop
xchg
dec
in
pop
pop
aad
jl
mov
add
mov
push
fcompl
scas
mov
mov
lds
pop
mov
sbb
xchg
jo
pusha
test
rcl
dec
push
jmp
adc
cmp
test
sbb
shl
push
cwtl
ja
adc
mov
pop
or
aad
dec
ret
mov
add
xor
xchg
push
loop
js
mov
push
and
mov
adc
dec
lahf
xchg
push
or
push
outsb
dec
push
insl
xchg
fcom
es
add
sti
in
cmpsb
aad
shrb
lock
and
rorl
push
pop
jmp
addr16
ret
test
mov
ja
or
movsb
dec
or
push
cwtl
push
dec
lcall
xor
clc
jne
cmp
shlb
lods
add
mov
inc
fwait
cmovo
jmp
mov
and
fadds
dec
not
or
pop
fmulp
shll
ss
lock
fldenv
sub
mov
insb
out
add
shlb
cwtl
adc
add
dec
dec
inc
jo
jge
add
adc
add
es
sbb
aad
mov
push
dec
inc
sub
in
add
mov
adc
sub
aam
sbb
xchg
outsb
jae
imul
outsb
lret
ds
lret
test
aaa
lock
fs
aam
lret
int3
xor
arpl
mov
sbb
xor
stos
jb
fdivs
mov
push
pop
xor
mov
dec
pop
shrb
orl
mov
cld
push
push
insl
inc
ljmp
inc
lret
lds
cmpsl
pop
sub
mov
stc
inc
mov
sahf
arpl
in
leave
or
mov
addr16
je
add
repz
mull
lcall
mov
stos
scas
imul
pop
mov
or
ficompl
clc
jns
pop
xchg
pop
push
and
inc
push
sbb
xchg
call
jb
adc
add
lahf
addr16
mov
addr16
nop
and
daa
and
lds
jl
lcall
push
push
jne
sbb
push
lcall
jecxz
push
cmp
loope
outsl
xor
into
imul
mov
jg
xchg
lock
add
aaa
mov
repz
and
insl
call
lahf
add
or
pop
arpl
mov
or
jnp
and
or
sbb
push
sbb
inc
jle
xchg
mov
addr16
push
jns
fsubrl
sub
fisubs
add
pop
mov
pop
test
mov
adc
xchg
and
std
inc
fldl2e
xchg
pop
and
ret
xor
adc
mov
fwait
aaa
dec
mov
inc
lcall
inc
add
bound
push
cmp
fldt
loop
pop
shl
inc
inc
aaa
subb
sbb
and
sbb
fdivs
std
dec
or
lcall
shrb
mov
fisubs
push
jg
mov
adc
stos
mov
scas
pop
xchg
leave
inc
daa
xchg
movsl
sbb
cmp
and
dec
dec
movsl
mov
je
loope
loopne
mov
push
mov
add
pop
jle
jae
adc
push
iret
lock
sahf
adc
leave
mov
repnz
lahf
lret
aas
sub
mov
mov
data16
sub
pop
stc
pop
xchg
mov
jae
jcxz
ret
lea
push
jbe
inc
in
xor
arpl
lea
mov
out
pop
or
fidivrl
lcall
cwtl
lds
das
xor
cmc
out
adc
jmp
cmp
mov
or
jnp
lcall
cltd
cltd
sub
leave
mov
cli
in
jg
lret
movb
in
cmp
adc
shrb
sub
add
das
sbb
inc
adc
adc
rclb
decb
push
cmpsl
mov
mov
mov
inc
mov
popf
add
push
pop
push
cmp
lret
mov
mov
fbstp
pop
mov
xor
cmp
xchg
push
ja
mov
sbb
push
fimull
ljmp
jb
inc
jle
mov
movsb
push
in
mov
cli
aad
jb
xchg
and
xor
data16
int
mov
xor
outsl
std
jnp
stc
xor
adc
dec
fcmovnbe
das
popf
mov
or
es
in
xor
mov
out
and
imul
mov
xor
inc
ficompl
xor
test
test
add
sub
push
mov
push
sbb
sub
dec
mov
xchg
xchg
arpl
pop
fwait
fwait
dec
out
pop
scas
jae
dec
xchg
push
or
push
push
sub
ds
sbb
push
dec
cmp
pop
cmpsb
adc
sbb
stos
cmp
adc
in
mov
xchg
sbb
popa
fstl
fisttps
xor
jle
lods
jnp
out
push
jg
inc
lahf
movsb
jbe
jg
pusha
icebp
testb
and
lock
pop
sbb
inc
test
push
pop
daa
mov
sbb
outsl
fstl
push
mov
xlat
cmpsl
test
imul
loopne
mov
mov
int3
sahf
stos
jnp
pop
out
pusha
add
sbb
dec
mov
fstl
cmp
adc
or
dec
enter
dec
aaa
xchg
notb
out
std
cmpsb
jae
pop
int
hlt
cmpb
and
pop
dec
jmp
dec
js
leave
adc
aas
cltd
cmpsb
xchg
mov
inc
int3
data16
lcall
and
sub
das
sub
fldcw
xlat
incb
sbb
xchg
sbb
mov
sub
cmpb
mov
mov
sub
data16
out
gs
imul
and
test
test
loopne
movsl
mov
inc
push
fcompl
adc
or
cmp
stc
push
mov
adc
mov
cmp
loope
mov
mov
roll
inc
test
adc
inc
mov
mov
test
xor
repz
sbb
xchg
cwtl
fwait
dec
mov
icebp
dec
add
sbb
fadds
xor
inc
push
push
and
out
ds
hlt
cmp
xchg
dec
leave
mov
pop
das
dec
leave
xor
ret
push
dec
lea
loopne
insb
fdivrs
out
icebp
xchg
mov
and
inc
popf
arpl
add
sbb
repnz
das
or
in
xchg
out
sbb
lret
roll
