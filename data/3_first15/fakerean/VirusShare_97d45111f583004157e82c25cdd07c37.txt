iret
inc
add
iret
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
call
mov
cmp
je
jmp
push
mov
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
lea
xor
push
inc
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
call
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
mov
mov
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
cmpl
mov
mov
push
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
call
xor
cmp
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
lea
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
lea
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
lea
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
mov
mov
mov
push
push
call
test
js
lea
lea
call
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
add
push
call
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
jne
mov
mov
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
mov
ret
mov
test
je
mov
test
jne
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
je
push
call
pop
lea
cmp
je
push
call
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmpb
jne
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
push
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
xor
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
call
test
je
mov
andl
test
mov
je
push
call
pop
movl
push
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
push
mov
call
mov
xor
pop
inc
push
lea
lea
mov
mov
call
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
push
push
push
lea
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
fildl
add
fmull
fstpl
call
call
mov
mov
mov
fildl
mov
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
call
mov
add
pop
pop
pop
pop
add
ret
sub
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
push
push
mov
call
add
jmp
test
mov
je
mov
push
call
mov
andl
andl
mov
mov
test
je
pushl
mov
push
call
shr
not
and
mov
mov
ret
xor
mov
mov
mov
mov
mov
mov
ret
mov
test
je
mov
andl
mov
xor
inc
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
xor
cmp
je
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmpl
je
push
movl
movl
lea
push
mov
xor
cmp
je
mov
mov
mov
cmp
je
cmp
mov
jbe
mov
movl
mov
mov
mov
mov
mov
call
mov
cmp
je
incl
mov
mov
addl
cmp
jb
xor
mov
cmp
jne
addl
mov
mov
cmp
mov
jne
mov
pushl
push
push
call
pop
pop
xor
pop
leave
ret
mov
mov
call
sub
jne
mov
add
lea
cmp
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
pushl
xor
push
inc
call
decl
subl
cmpl
jne
jmp
dec
dec
jne
jmp
int3
int3
int3
mov
mov
xor
add
push
lea
cmp
je
movsbl
rol
xor
add
jmp
pop
ret
push
mov
cmp
push
mov
je
cmp
je
cmp
je
pop
xor
pop
ret
push
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
pop
jmp
call
jmp
push
mov
push
push
push
mov
mov
xor
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
test
je
andl
push
mov
mov
mov
call
mov
andl
test
jne
lea
mov
lea
push
call
test
mov
js
mov
test
je
mov
push
call
mov
mov
mov
call
mov
test
je
decl
cmpl
je
mov
pop
pop
leave
ret
mov
test
je
push
call
pop
xor
ret
push
mov
test
je
cmpl
jg
xor
mov
xor
pop
ret
push
mov
push
andl
push
push
mov
mov
lea
push
mov
call
test
js
cmpl
push
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
call
lea
mov
call
push
mov
mov
call
pop
pop
ret
mov
test
je
push
call
pop
xor
ret
andl
inc
mov
mov
test
jne
mov
cmpl
push
je
pushl
mov
call
mov
test
jne
mov
mov
call
andl
andl
mov
pop
ret
pushl
push
pushl
pushl
call
jmp
push
mov
cmpl
je
cmpl
push
je
mov
push
lea
movl
call
cmpb
je
pop
xor
pop
ret
pushl
lea
call
test
je
jmp
cmpb
jne
push
lea
call
mov
call
pop
movb
jmp
int3
mov
sub
cmpl
push
push
mov
push
jge
mov
mov
movl
mov
mov
push
mov
movl
call
mov
add
test
js
mov
cmpl
push
je
mov
test
je
addl
test
je
push
call
mov
add
cmpl
jge
mov
mov
push
push
push
call
mov
add
cmpl
mov
jge
mov
mov
push
call
mov
add
addl
je
test
jle
mov
mov
add
adcl
mov
push
call
add
test
js
test
jle
mov
push
call
mov
pop
pop
pop
pop
add
ret
jge
call
cmp
jne
push
call
add
pop
pop
pop
mov
pop
add
ret
cmpl
je
push
push
mov
push
pushl
mov
mov
pushl
mov
push
call
test
lea
js
cmpl
je
andl
mov
pop
pop
ret
mov
jmp
movl
jmp
push
mov
sub
mov
xor
mov
push
pushl
mov
mov
push
call
test
jne
xor
mov
xor
pop
call
leave
ret
push
mov
cmpl
jne
cmpb
je
pushl
mov
pushl
call
cmpb
je
push
mov
call
push
push
lea
call
pop
call
pop
ret
push
call
jmp
call
jmp
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
pushl
mov
xor
push
mov
call
test
jne
mov
mov
call
test
jne
lea
call
pop
ret
xor
inc
jmp
push
mov
push
andl
mov
test
mov
push
mov
je
mov
mov
andl
mov
push
call
pushl
mov
push
call
mov
test
pop
pop
je
mov
push
call
mov
neg
sbb
and
add
lea
call
mov
pop
pop
pop
ret
push
mov
lea
movl
movl
call
lea
call
lea
call
lea
call
testb
movl
movl
jne
mov
pop
ret
push
call
pop
jmp
push
mov
push
lea
push
mov
call
test
jne
mov
xor
cmp
mov
jne
mov
push
mov
call
xor
pop
pop
ret
push
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
xor
inc
jmp
push
mov
sub
mov
xor
mov
mov
shr
movzbl
push
push
mov
shr
movzbl
push
movzbl
push
push
lea
push
push
mov
call
add
push
call
test
je
andl
lea
push
mov
call
mov
lea
push
movl
call
pop
pop
mov
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
xor
cmp
je
cmp
jne
push
call
test
js
mov
mov
mov
mov
mov
lea
mov
push
lea
mov
movl
mov
mov
mov
mov
mov
movl
movl
mov
mov
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
jne
mov
push
lea
call
lea
mov
lea
lea
lea
mov
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
lea
jne
mov
push
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
test
js
mov
mov
mov
shr
and
lea
je
lea
push
push
push
mov
movl
movl
mov
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
sub
push
mov
push
add
push
lea
mov
call
mov
call
mov
mov
and
jne
andl
push
lea
call
mov
push
call
mov
xor
push
push
push
lea
push
lea
push
mov
movl
call
add
testb
mov
jne
testb
jne
mov
mov
and
jne
mov
mov
mov
add
mov
mov
call
mov
mov
add
call
mov
mov
add
call
mov
mov
call
mov
lea
push
xor
push
lea
inc
push
movl
movl
mov
call
mov
and
mov
jne
pushl
mov
push
mov
call
lea
call
cmpl
jne
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
lea
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
cmp
lea
je
call
jmp
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
movzbl
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
xor
add
inc
add
add
mov
add
jo
test
mov
mov
add
aad
lods
mov
jo
jnp
mov
add
jnp
add
add
xchg
push
out
mov
add
add
add
call
in
add
push
push
push
push
push
push
push
push
push
push
push
call
jge
add
add
add
ret
add
add
mov
in
hlt
jecxz
xchg
mov
add
lret
roll
add
sub
arpl
loope
mov
mov
aam
out
add
add
jge
pop
add
add
add
mov
call
jecxz
mov
lcall
inc
in
push
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
mov
add
add
out
add
add
add
push
mov
outsl
mov
mov
add
jl
lods
ja
nop
insb
push
mov
sub
pop
push
push
lea
push
call
jnp
add
mov
add
loop
add
add
popa
arpl
stc
add
add
jae
add
stc
add
add
sub
pop
push
push
lea
push
lea
push
lea
push
push
push
call
lds
fidivl
add
add
add
add
test
add
push
scas
add
lods
add
lret
add
fwait
add
push
incb
cmc
add
fiaddl
fldl
add
add
mov
fmulp
push
testl
jle
sub
pop
push
push
push
push
push
push
call
add
bound
pop
add
int3
jae
add
lods
fidivl
movsl
mov
pop
pop
jp
icebp
icebp
add
iret
jp
jo
add
add
push
add
test
mov
lcall
arpl
add
push
lea
push
push
push
push
call
fsubs
add
xchg
jbe
add
add
int3
add
add
ja
lock
add
enter
sti
xchg
jno
scas
add
mov
add
push
movsb
add
mov
lcall
add
pop
add
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
push
add
icebp
shll
xor
add
mov
jae
insb
push
add
xchg
add
test
js
pop
jns
pusha
sti
add
add
out
mov
stos
roll
pop
hlt
add
jns
add
out
add
addb
test
ja
add
roll
call
sub
pop
jmp
push
push
push
call
lret
add
movsl
add
push
add
loopne
shlb
add
enter
xchg
scas
pop
test
mov
pop
add
fwait
mov
add
add
add
pop
mov
lahf
mov
jo
add
int3
std
sahf
add
imul
enter
jecxz
lret
add
mov
add
lcall
push
lea
push
push
push
push
lea
push
lea
push
push
call
lds
mov
add
stos
add
add
add
add
int
stc
xchg
icebp
push
mov
add
jnp
add
jbe
push
add
push
add
add
xchg
leave
mov
into
pop
add
add
add
mov
imul
mov
sti
xchg
rcrl
add
stos
add
int
out
in
loopne
lcall
inc
hlt
push
push
lea
push
push
push
push
push
push
push
push
call
lcall
add
les
addb
fists
popl
in
add
add
hlt
clc
les
add
push
in
aam
add
add
pop
push
push
xchg
add
add
sti
add
sub
pop
mov
push
push
lea
push
lea
push
push
lea
push
call
push
loop
push
add
cmpsb
jle
stos
lahf
mov
fiadds
add
imul
pop
add
add
movsb
in
negl
pop
rclb
les
mov
add
stos
add
mov
add
popa
stos
data16
add
add
sub
pop
add
push
lea
push
push
lea
push
push
push
push
push
call
jb
jp
iret
lods
add
add
mov
aam
mov
jno
add
jmp
add
add
in
add
movb
push
add
mov
test
jns
add
xchg
cld
mov
lcall
ret
add
add
push
push
push
call
push
incb
xchg
enter
add
add
add
lock
mov
mov
lock
js
scas
je
add
popa
sahf
mov
aad
add
jb
cmpsb
rolb
loop
rolb
hlt
pop
add
push
push
push
lea
push
lea
push
push
push
call
add
add
add
adcb
lret
lds
popf
mov
mov
mov
testl
lret
sarl
mov
push
pop
test
mov
add
sub
pop
mov
xor
push
push
dec
not
ror
push
or
inc
add
dec
sub
rol
sub
pop
dec
sub
rol
pop
push
push
lea
push
push
push
push
push
call
add
ret
add
fwait
outsl
bound
mov
repnz
push
fwait
jmp
in
std
add
sub
pop
pushl
push
push
call
jle
add
cmc
loopne
pop
add
xchg
pop
add
fdivrs
divb
icebp
in
add
pop
roll
xlat
push
mov
add
imul
ja
add
add
add
add
aam
sahf
addl
roll
sub
pop
call
push
push
lea
push
call
add
int
xchg
add
jge
fcmovnu
add
add
add
add
movsb
add
mov
movb
ja
out
add
add
add
sti
cwtl
lcall
into
mov
add
mov
add
jle
xchg
add
add
add
lcall
inc
lock
push
call
add
add
insb
mov
js
testl
xchg
add
rolb
divb
add
mov
out
add
add
add
mov
cld
add
inc
call
push
push
push
push
push
push
call
xchg
stos
jns
popf
mov
add
jle
add
sti
add
ret
add
iret
out
xchg
repnz
aad
aam
fs
out
xchg
add
fwait
imul
cli
add
lcall
xchg
add
jmp
fadds
lea
push
push
push
push
lea
push
push
push
push
call
add
add
pusha
xchg
xlat
add
int
addr16
mov
out
repnz
add
add
mov
fwait
mov
icebp
call
xchg
mov
gs
in
loopne
lcall
pushl
push
lea
push
push
push
push
push
push
push
push
call
add
jbe
add
popf
data16
mov
sarb
mov
aad
bound
testb
add
jge
test
add
add
jmp
std
add
sub
pop
pushl
push
push
push
push
call
fadds
add
fwait
xlat
add
add
movl
mov
in
enterw
push
mov
push
into
add
jp
mov
movsb
pop
jl
add
add
mov
xchg
add
data16
lock
lcall
je
add
push
lea
push
call
data16
popa
add
add
add
popa
addr16
xchg
add
je
add
jl
outsl
mov
loop
ret
lock
add
mov
clc
pop
pushl
pushl
push
push
push
push
push
push
call
int3
rcrl
hlt
gs
add
fldt
add
mov
mov
add
add
stos
cmpsl
add
fldl
push
add
xchg
enter
jo
xlat
add
out
add
add
addb
add
int
sub
pop
call
push
push
dec
not
sub
push
push
pop
add
ror
inc
sub
add
sub
pop
ror
pop
push
push
push
push
push
push
push
call
add
add
rolb
imul
jae
mov
jb
call
jle
add
mov
lcall
add
movl
add
faddl
in
pop
add
xchg
jmp
test
mov
mov
je
add
add
jle
aam
add
lea
sub
pop
pushl
call
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
mov
add
add
lahf
xchg
cli
js
roll
add
xchg
mov
mov
add
cld
add
jge
add
add
faddl
lea
add
mov
in
add
mov
loope
jp
in
xchg
pop
add
lods
test
push
mov
mov
add
sub
pop
push
push
push
shr
ror
push
or
inc
add
ror
sub
sub
not
sub
shr
add
pop
not
add
lea
rol
pop
push
push
push
push
call
repnz
std
add
add
add
add
int
add
add
add
sbb
ja
insb
jnp
bound
pop
ljmp
outsl
add
leave
jno
roll
xchg
add
add
add
std
push
mov
mov
push
xchg
test
add
add
pop
sub
pop
push
push
push
push
push
push
push
lea
push
push
push
push
push
call
push
lea
push
shrl
jae
mov
test
add
popf
add
sbbl
xchg
je
jae
jmp
pop
add
xchg
clc
stos
add
xchg
add
add
add
push
push
add
lcall
rclb
lea
push
push
push
call
add
out
into
clc
scas
movsl
add
lcall
fcmovnu
iret
add
add
fildl
mov
popf
ja
add
add
add
add
into
add
loope
aam
rclb
in
pop
mov
push
push
push
push
push
push
lea
push
push
lea
push
push
call
outsl
push
pop
xchg
add
mov
add
add
imul
xchg
mov
jecxz
out
add
mov
out
add
jnp
mov
ret
add
add
add
imul
lcall
push
lea
push
push
push
lea
push
push
call
out
mov
gs
icebp
add
add
add
jo
ja
add
ret
adcb
cwtl
in
jecxz
add
jbe
xchg
add
cld
xchg
jbe
addl
fucomip
icebp
loopne
icebp
jne
add
add
sti
add
jp
mov
clc
test
add
pop
hlt
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
xorl
push
cld
add
add
pop
add
out
add
fldl
div
add
jecxz
in
fcomps
pop
in
add
push
push
push
push
push
push
push
push
call
ja
push
add
add
leave
add
mov
mov
je
add
fwait
add
test
mov
add
add
push
xchg
jecxz
add
imul
sti
shlb
loopne
add
mov
push
push
lea
push
push
lea
push
push
lea
push
push
call
push
popa
repnz
int
xchg
add
fadds
add
frstor
add
xchg
icebp
add
pop
fidivrl
xchg
fiadds
out
add
call
add
addr16
incb
pop
sub
pop
xor
push
push
call
add
rcrb
cld
add
xchg
add
add
mov
add
add
orl
jge
add
insb
in
pop
add
leave
push
add
add
popa
mov
sub
pop
add
push
push
push
push
push
push
push
call
mov
lret
sahf
add
repnz
add
xlat
jo
into
sbbl
xchg
add
mov
xchg
pop
imul
add
scas
mov
add
add
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
lods
jnp
lahf
repnz
movl
lods
add
xchg
mov
add
out
xchg
xchg
mov
fwait
mov
add
lret
add
out
jl
outsl
add
mov
jne
icebp
insb
lods
ljmp
loopne
xchg
sub
pop
push
mov
push
push
push
push
push
push
call
add
mov
out
jge
push
call
xchg
pusha
mov
mov
test
add
mov
fs
bound
pop
add
jle
lret
add
cmpsb
pop
add
mov
mov
xor
push
push
push
push
call
imul
lods
addb
cltd
add
mov
pop
pop
add
movl
mov
pusha
add
xchg
mov
jnp
push
add
cli
out
mov
lcall
les
add
push
push
call
add
xchg
jo
add
add
jle
cmc
add
jmp
mov
cmc
hlt
mov
add
ja
sub
pop
add
pop
push
push
push
push
call
mov
mov
addl
js
mov
add
hlt
gs
add
add
mov
add
mov
jecxz
in
lock
lcall
dec
add
icebp
cmp
xor
xchg
push
push
push
call
mov
loopne
out
push
add
add
add
add
mov
test
aad
mov
cli
test
add
jp
mov
movsb
fnstsw
mov
arpl
add
lret
in
call
push
mov
push
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
std
test
add
mov
je
mov
bound
ljmp
add
add
int3
add
scas
add
add
pop
jbe
mov
add
std
fwait
lds
jno
add
pop
mov
fdivr
lcall
add
push
push
push
push
push
call
push
add
gs
jne
mov
movsl
fadds
add
pop
xchg
pop
add
jle
push
pop
add
imul
add
add
add
ljmp
add
add
add
fs
mov
mov
in
lcall
les
add
push
push
push
lea
push
push
call
ret
add
in
pop
mov
add
gs
mov
mov
std
out
add
push
mov
lret
add
xchg
mov
pop
stos
popf
js
add
pop
add
add
jecxz
fistps
call
mov
sub
pop
sub
push
push
push
lea
push
push
push
push
push
lea
push
call
hlt
add
outsl
popa
add
add
add
add
add
add
add
xchg
add
popa
add
ret
add
nop
pop
add
fistpl
add
add
stos
jbe
add
add
add
add
cmc
add
add
add
add
add
xchg
sub
pop
pop
push
push
call
add
stos
add
mov
sahf
add
mov
xchg
pop
mov
add
add
add
iret
test
add
mov
nop
add
movsb
pop
push
lea
push
lea
push
lea
push
lea
push
call
mov
add
in
mov
mov
add
add
add
gs
add
add
add
enter
lret
lcall
lods
add
lret
xchg
add
mov
push
pop
jnp
add
add
pushf
ja
test
in
push
pop
pop
push
add
add
add
jecxz
add
add
pop
hlt
push
push
push
push
push
lea
push
push
push
push
call
add
aam
enter
add
fistpl
add
les
xchg
add
add
jl
pop
xchg
mov
mov
add
cli
add
filds
ficompl
mov
pushf
clc
imul
add
jb
sub
pop
add
push
push
push
push
push
push
push
push
call
add
stos
add
add
movsl
lret
data16
jecxz
mov
push
add
add
shl
std
movsb
idivl
add
out
add
ret
add
add
add
push
push
push
call
push
add
add
add
jle
add
mov
add
add
faddl
add
out
aam
push
lods
add
je
add
mov
add
je
js
push
jae
mov
jle
add
add
in
hlt
pop
mov
xor
push
lea
push
call
mov
js
add
loopne
add
test
cltd
std
jge
fidivs
imul
flds
push
and
fwait
push
add
aad
mov
add
add
mov
lods
add
scas
push
sti
mov
cli
add
add
fdivr
rcll
add
mov
in
clc
lcall
push
and
repnz
mov
cmp
dec
push
push
push
lea
push
push
push
push
push
call
push
imul
add
imul
stos
push
lcall
add
mov
lahf
adc
lods
mov
imul
ja
test
mov
jge
icebp
clc
in
jmp
in
stc
add
add
lret
jno
lods
faddl
lcall
dec
sub
mov
lea
push
push
push
push
call
rolb
mov
mov
jp
xchg
mov
add
je
mov
add
cli
pop
add
add
push
jo
mov
into
add
fwait
add
mov
mov
sub
pop
add
push
lea
push
push
push
push
push
call
clc
add
add
add
ficompl
add
xchg
outsl
test
add
mov
mov
fistl
je
outsl
cmpsl
js
mov
mov
jno
add
push
mov
icebp
jge
pop
add
fiaddl
flds
add
add
add
rol
insb
pusha
shlb
pusha
jmp
add
call
push
push
call
filds
test
add
fsubr
ljmp
mov
pop
add
in
mov
ja
pop
add
add
movsl
add
add
add
add
push
xchg
add
fwait
add
mov
add
call
mov
lods
addb
mov
sub
pop
mov
push
push
shr
push
and
add
rol
inc
sub
not
add
not
lea
pop
sub
not
pop
push
push
push
push
push
lea
push
push
push
call
mov
push
fucomi
pusha
test
fiaddl
test
add
add
addl
roll
mov
jns
faddl
stos
pop
push
pop
add
sub
pop
pushl
call
push
lea
push
push
push
lea
push
push
push
push
call
pop
xchg
jne
push
add
pushf
add
bound
mov
jp
add
test
add
mov
test
add
pop
jecxz
jno
add
mov
add
add
jns
add
pop
out
test
xchg
faddl
sub
pop
push
push
push
not
push
and
add
add
sub
shr
pop
add
rol
xor
pop
push
pop
push
push
push
lea
ror
add
pop
call
push
push
push
push
push
call
flds
std
push
mov
add
mov
pop
add
sub
movsl
aad
add
neg
xchg
cmpsb
add
add
roll
add
stos
mov
xchg
mov
add
repnz
out
fs
mov
jb
pop
add
loopne
in
in
pop
mov
push
ror
pop
push
push
shr
shr
sub
pop
push
push
push
push
push
push
push
push
lea
push
call
jns
mov
push
add
add
mov
in
add
movsl
xchg
aam
add
pushf
add
mov
imul
sti
add
add
mov
flds
movsl
popa
leave
add
jl
jge
out
mov
add
cmpsb
lds
hlt
add
push
fldcw
mov
mov
mov
add
push
push
push
push
push
push
lea
push
lea
push
call
add
mov
mov
jo
push
jle
outsl
xchg
xchg
mov
add
mov
pop
push
lods
jbe
out
push
mov
cli
push
add
mov
add
add
imul
mov
les
lcall
ret
add
add
push
push
push
push
push
push
push
push
lea
push
call
cwtl
pop
jp
imul
xchg
push
jo
add
fiadds
leave
popf
lods
ret
add
add
call
add
add
fwait
jb
add
aad
mov
push
mov
lcall
ret
jp
add
mov
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
mov
add
int3
cmpsl
add
fimuls
add
push
add
fcmove
neg
lret
add
mov
xchg
add
add
clc
add
add
idivb
lds
pop
lahf
pop
out
out
mov
add
jns
in
fdivr
lcall
xor
push
push
push
push
call
add
test
xchg
mov
add
add
fwait
stc
imul
add
pop
adcl
sahf
push
stc
lahf
add
add
pop
add
add
sub
pop
add
push
inc
ror
pop
add
push
push
push
push
push
push
lea
push
call
xchg
idivl
jmp
jecxz
add
mov
add
jmp
mov
add
push
pushf
add
repnz
add
add
xchg
loope
push
faddl
rolb
add
ret
jp
mov
cltd
ljmp
lea
add
stos
mov
lcall
push
push
push
push
push
push
push
push
call
add
add
pop
xchg
out
add
push
cld
jp
in
add
add
mov
cltd
aam
jbe
cld
push
shl
cld
add
stc
clc
stos
add
mov
add
mov
add
mov
lods
sahf
addr16
mov
jo
in
loopne
mov
push
push
lea
push
lea
push
push
push
push
call
jp
mov
test
mov
int3
mov
add
lret
repnz
push
aad
shl
mov
add
mov
movsb
add
je
add
add
jp
faddl
xchg
clc
enter
add
push
add
lock
add
mov
pop
xchg
int
add
lea
sub
pop
xor
push
push
lea
push
call
imul
stos
jecxz
call
call
jb
add
mov
add
mov
je
fiaddl
lcall
test
add
mov
add
ljmp
add
add
jle
shll
faddl
fs
pop
add
push
lea
push
push
push
push
push
push
push
push
push
call
jno
jbe
addb
add
jne
mov
hlt
jmp
int3
fsts
mov
cltd
in
js
insb
lds
xchg
out
add
add
imul
add
cmpsb
add
fldt
add
xchg
add
pop
mov
repnz
add
lea
lcall
lock
push
dec
sub
ror
rol
pop
mov
xor
push
push
push
push
push
call
out
in
loope
add
stc
iret
ja
mov
add
add
nop
add
in
jp
add
pop
lahf
jnp
add
add
aad
mov
imul
aad
mov
popf
xchg
add
sub
pop
rep
mov
push
push
push
call
xor
cld
lea
nop
in
out
add
test
add
xchg
fnclex
add
lret
add
lods
addl
add
add
mov
add
pop
flds
shrl
lcall
or
push
lea
push
push
lea
push
push
call
add
add
add
lods
lea
add
jmp
mov
scas
add
add
add
add
mov
jns
add
mov
rcr
scas
lret
aam
gs
cli
mov
arpl
add
push
add
in
in
pop
add
push
lea
pop
or
je
push
shr
add
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
call
add
pushw
jp
add
add
add
add
out
outsl
outsl
int3
add
add
add
lcall
add
rolb
add
stos
add
icebp
add
add
popa
fadds
add
add
add
add
add
lret
loopne
lcall
xor
push
push
lea
push
push
lea
push
push
push
call
mov
add
fwait
add
mov
add
jno
xchg
mov
add
add
roll
popf
mov
loopne
mov
add
xchg
add
add
add
jns
out
fwait
add
add
fidivrl
add
stos
xchg
jbe
jecxz
ljmp
add
push
shr
xor
pop
mov
xor
push
push
lea
push
lea
push
push
push
push
call
add
cmpsl
add
jae
lret
and
arpl
jnp
xchg
pusha
pop
shrb
addl
add
add
shrl
add
mov
mov
mov
in
in
lcall
repnz
sub
pop
add
push
push
sub
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
cmpsl
lea
add
add
mov
push
add
add
roll
jno
ret
add
add
insb
add
popf
andl
fcompl
add
push
push
push
call
add
add
push
xchg
insb
jmp
lea
add
add
lock
jns
add
add
add
pop
add
fs
arpl
mov
in
hlt
lcall
les
inc
dec
ror
dec
pop
add
push
push
push
push
push
push
call
add
add
loop
add
add
push
stc
add
jmp
loope
xchg
add
add
mov
sub
pop
pop
rep
push
shr
sub
pop
mov
push
push
lea
push
push
push
push
push
push
lea
push
call
push
add
add
add
imul
mov
jmp
sti
jb
add
scas
in
cltd
mov
imul
mov
lcall
or
push
push
push
push
push
push
push
push
call
add
fiaddl
orl
add
imul
add
push
out
cld
push
xchg
add
je
stc
mov
add
mov
jmp
add
loopne
add
push
inc
shl
pop
or
je
push
ror
add
shr
pop
mov
push
inc
add
dec
pop
add
push
push
lea
push
call
add
lods
flds
mov
add
fs
std
add
push
popa
mov
add
add
add
jo
test
add
add
add
popl
aad
pop
add
xchg
out
add
fsts
outsl
popf
enter
add
cmc
int3
stos
add
add
hlt
pop
add
push
push
push
push
lea
push
push
lea
push
push
call
cmc
lods
ljmp
add
ja
add
lock
sahf
loope
ret
add
insb
faddp
push
hlt
lds
in
jb
mov
rep
push
lea
push
push
push
push
push
lea
push
push
push
call
add
mov
mov
out
mov
test
in
js
fldl
les
int3
mov
add
pop
xlat
add
sti
loopne
jae
push
fadds
loop
jbe
add
je
mov
add
shrb
add
push
push
inc
shl
lea
push
or
not
add
add
add
inc
sub
not
ror
pop
pop
push
xor
pop
pop
mov
push
xor
dec
not
pop
mov
mov
push
push
push
push
lea
push
lea
push
push
call
add
hlt
add
mov
lods
fbld
add
add
fildl
popf
pusha
add
stos
cld
lea
call
stos
lcall
mov
mov
lock
jl
nop
add
lcall
loopne
push
push
push
push
push
call
add
xchg
jb
insb
icebp
lea
add
faddl
mov
add
lea
add
sbbb
add
into
mov
cmpsb
ret
add
les
rolb
add
mov
lret
add
stos
push
pop
add
xchg
bound
mov
add
scas
sub
pop
mov
add
push
push
lea
push
push
push
push
push
push
call
popl
fistl
out
push
xchg
add
jbe
add
lret
add
pop
mov
jae
fsubs
add
add
add
in
loopne
sbbl
data16
add
shlb
xchg
add
jge
add
stos
mov
add
add
lcall
push
push
push
lea
push
push
call
loop
loop
roll
test
stos
add
add
loopne
rolb
add
push
pusha
mov
outsl
mov
add
addb
xchg
mov
add
sub
pop
push
push
push
push
push
push
push
push
push
call
cltd
cmpsb
cwtl
mov
jl
xchg
cmc
jp
add
add
mov
jle
out
add
out
jae
add
mov
add
outsl
push
add
add
sub
pop
push
push
push
call
pop
add
add
add
add
xchg
loope
mov
data16
fildl
add
leave
add
add
lcall
inc
cld
push
push
push
push
push
push
push
push
push
call
jo
testl
jmp
add
add
jl
mov
ja
push
add
nop
push
in
add
stos
push
add
mov
lcall
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
test
in
add
add
add
movsl
add
enter
jbe
add
add
pop
mov
fiaddl
in
add
pop
stos
addb
add
cmp
jno
jp
loopne
mov
add
push
add
pushf
mov
add
jp
fnstsw
add
imul
cltd
loopne
in
fcompl
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
xchg
mov
lcall
mov
clc
js
mov
add
mov
add
sti
add
mov
pop
mov
jge
add
insb
add
add
ljmp
lcall
push
push
push
push
call
add
jmp
testl
int
imul
jne
fdivl
lods
iret
aad
add
mov
pushw
add
add
add
out
js
add
cmpsb
jmp
push
mov
fmul
jl
cmpsb
add
add
add
in
mov
jecxz
iret
jo
mov
mov
in
lock
pop
push
push
lea
push
push
call
add
add
popa
fidivs
add
push
in
fldl
movsb
movl
stc
push
sahf
xchg
pushf
lds
nop
add
pop
add
add
in
ret
add
lods
in
add
add
pop
js
push
xchg
stc
add
movsl
jnp
pop
add
fucom
add
add
jmp
add
lcall
ret
push
not
shr
pop
push
push
xor
rol
sub
sub
pop
mov
push
push
push
call
xchg
add
movsb
add
add
jb
jp
fcompl
lods
jbe
clc
popl
add
imul
add
add
stos
add
mov
jmp
add
aam
add
jecxz
add
jne
xlat
jnp
loop
jecxz
out
filds
outsl
roll
repnz
hlt
lcall
clc
push
push
push
push
push
call
rcl
mov
loop
loope
mov
mov
hlt
les
mov
hlt
push
loopne
xchg
add
out
add
add
jbe
mov
add
lcall
push
push
shr
pop
push
push
xor
sub
add
pop
movl
addl
push
lea
push
push
push
push
push
push
lea
push
push
call
add
cmc
lret
lahf
mov
fildl
push
outsl
pop
movsb
pop
add
ja
add
cld
enter
loope
add
fwait
pop
mov
addl
add
add
bnd
in
fcompl
rorb
or
add
push
lea
pop
mov
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
clc
cmpsb
aad
add
add
add
call
test
call
jo
add
mov
add
leave
shlb
jb
aad
pop
add
mov
add
testb
add
add
xchg
push
add
add
add
add
add
push
mov
sub
pop
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
add
xchg
mov
mov
add
aad
add
scas
add
mov
add
add
add
xchg
add
mov
fs
mov
lahf
cli
shrl
add
ja
jne
add
fdivr
lcall
push
shr
xor
pop
pop
leave
push
push
lea
push
lea
push
push
push
push
push
push
call
add
imulb
nop
testb
int3
scas
add
add
add
in
xchg
add
pop
in
mul
in
add
add
xchg
imul
add
fwait
add
add
clc
enter
add
pop
add
cmpsl
shll
jp
add
lahf
stos
test
add
testl
movb
pop
ret
push
push
lea
push
push
call
mov
mov
in
out
add
add
mov
lret
add
add
insb
add
push
add
mov
xchg
movl
push
call
jbe
add
mov
je
add
movsb
add
loopne
push
mov
lcall
mov
push
push
call
filds
add
cld
add
add
add
add
add
add
jl
scas
testb
xchg
movl
mov
mov
pusha
add
jmp
add
add
add
int3
jae
add
add
movl
mov
lods
add
add
pushf
add
add
add
add
cld
push
push
ror
pop
push
push
push
add
pop
push
push
sub
inc
pop
testl
addl
push
add
pop
push
push
push
push
push
push
call
loopne
add
mov
int3
scas
in
xchg
add
add
add
test
add
sarb
aam
add
call
push
push
push
lea
push
push
push
call
into
popl
add
mov
add
sar
jmp
add
push
add
fiaddl
xchg
jp
xchg
pop
fadds
pop
pop
add
add
icebp
testl
add
rcl
aam
je
arpl
hlt
add
xchg
sti
add
add
test
sub
pop
mov
pushl
push
inc
add
pop
push
push
push
call
add
mov
je
nop
mov
pop
loopne
loop
add
push
mov
add
fcmovu
ljmp
xchg
outsl
in
imul
fadds
xchg
jns
jae
loop
fbld
add
sub
pop
push
call
push
ror
dec
inc
pop
cmpl
jne
push
lea
pop
pop
push
shr
pop
pop
push
push
push
lea
push
call
add
std
fldenv
push
mov
xchg
add
mov
in
add
lock
lcall
push
xor
ror
sub
pop
pop
push
sub
shr
pop
leave
push
push
push
lea
push
lea
push
push
call
add
nop
scas
iret
les
mov
add
stos
lret
hlt
add
add
stc
std
fwait
imul
add
mov
in
call
push
rol
pop
push
push
lea
push
push
call
cmpsb
flds
jge
test
mov
out
mov
add
fdivp
aad
out
sahf
mov
add
add
pop
sti
add
imul
pop
add
push
jne
call
xchg
add
xlat
add
xchg
imul
lcall
in
add
push
dec
pop
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
pop
add
loop
add
mull
add
fxch
repnz
add
mov
add
add
push
add
add
ja
add
add
les
scas
cltd
add
stos
enter
xchg
call
in
push
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
out
aad
fildl
add
push
cltd
xlat
jnp
jne
add
rolb
add
add
popa
repnz
xorb
jbe
fs
pushf
add
mov
push
lcall
push
push
push
call
jb
test
add
add
jno
ret
iret
add
add
pop
push
jo
mov
add
lcall
hlt
lcall
inc
cld
or
add
push
push
push
push
call
mov
leave
stos
les
add
add
fmulp
add
add
arpl
add
movsb
xchg
cli
pop
jns
mov
test
add
add
push
hlt
add
divl
push
add
add
stos
add
push
stc
cmpsl
jo
lahf
add
hlt
pop
call
push
dec
xor
pop
push
push
inc
pop
call
push
ror
add
pop
subl
push
add
pop
cmpl
jne
pop
push
shr
add
sub
pop
pop
pop
push
push
lea
push
push
call
add
mov
add
pop
clc
add
add
add
loope
add
add
add
cmpsl
add
add
push
stc
add
mov
mov
add
gs
pop
pushf
movsb
gs
jecxz
add
jns
in
lock
pop
leave
push
lea
push
push
push
push
call
ljmp
add
add
je
ljmp
add
push
nop
push
add
jae
add
fildl
push
clc
addl
pop
loop
xlat
mov
ja
add
lcall
add
adc
add
add
lahf
add
add
jecxz
stos
add
add
lcall
push
push
add
pop
mov
push
push
call
add
into
subb
jp
pop
add
rclb
mov
lahf
jno
add
loop
mov
add
add
fldenv
sti
test
add
mov
aam
out
add
sti
jp
popf
mov
adc
sub
pop
add
push
push
push
push
push
push
push
push
push
push
push
call
aad
je
xchg
add
jl
add
add
sahf
filds
add
mov
out
jno
clc
add
add
jne
mov
cmc
jno
testl
mov
add
add
add
imul
add
popf
push
sub
pop
push
push
push
push
push
call
out
mov
mov
add
xorl
mov
addl
add
test
mov
add
fs
out
jno
mul
pushf
push
push
mov
jmp
cmpsl
add
fsub
hlt
add
lcall
push
lea
push
call
fs
add
add
mov
add
shl
cli
mov
xchg
jl
mov
jns
loope
lods
push
subl
add
add
add
mov
add
sub
pop
mov
push
inc
pop
lea
push
sub
pop
sub
push
not
pop
mov
shr
push
push
push
push
lea
push
call
fldl
add
add
lcall
add
push
mov
test
popa
lahf
loopne
add
add
jnp
imul
pop
mov
push
pop
pop
aad
add
pop
sub
pop
add
mov
push
add
sub
shr
pop
mov
push
lea
ror
add
pop
add
add
push
dec
pop
mov
push
sub
not
add
pop
mov
push
rol
pop
cmp
jne
push
push
call
add
les
stos
andl
push
shlb
lcall
imul
add
les
arpl
popf
stc
push
add
fucomi
add
rol
jp
xchg
xchg
push
sub
pop
cmp
jne
push
push
call
rcrl
add
add
test
incb
add
add
rcr
testl
jo
lahf
add
push
add
jp
push
sub
pop
mov
push
sub
sub
add
pop
movl
push
sub
xor
pop
jmp
push
lea
not
sub
pop
mov
push
sub
pop
mov
push
not
sub
pop
sub
jne
push
ror
pop
mov
push
inc
add
lea
pop
movl
jmp
push
rol
xor
pop
mov
mov
push
add
sub
dec
pop
cmp
jne
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
mov
jb
add
mov
lds
pop
stos
icebp
add
add
test
cmp
fadd
add
repnz
xchg
push
flds
mov
stc
add
push
test
add
pop
xchg
movsb
push
add
add
outsl
push
sahf
sub
pop
mov
push
push
call
lea
mov
nop
loopne
loope
mov
addb
add
add
mov
pop
mov
mov
push
ja
add
pop
stc
loop
lods
add
add
out
hlt
out
add
pop
jle
mov
test
test
jno
jbe
jbe
add
xchg
add
add
pop
movl
push
lea
push
push
push
push
push
push
push
lea
push
push
call
roll
outsl
add
lods
std
scas
cmp
add
cmpsb
add
add
nop
add
add
xchg
add
into
add
add
mov
jp
add
jmp
mov
popa
shlb
xchg
add
cld
add
add
lcall
mov
add
push
push
push
push
push
push
push
push
push
call
add
loope
push
fstpt
test
mov
add
stos
mov
loope
lret
add
fildl
add
clc
jns
jecxz
pop
add
aam
add
std
shrb
mov
mov
sub
pop
mov
push
push
push
push
push
call
add
test
mov
add
cwtl
add
pop
add
arpl
pushf
add
fnsetpm(287
fadds
add
add
add
scas
add
add
add
mov
add
add
add
lods
out
sahf
add
fmull
fwait
add
mov
cmpb
add
add
sub
pop
cmpw
jne
push
push
lea
push
lea
push
call
add
vrsqrtss
cwtl
add
mov
add
add
jb
add
mov
mov
push
clc
add
rolb
stos
bnd
add
xchg
mov
mov
jecxz
sti
lods
sub
pop
mov
movl
push
shl
shl
pop
jmp
push
add
lea
dec
add
pop
pushl
push
xor
not
pop
pop
mov
push
xor
pop
mov
mov
push
push
shl
push
push
pop
add
sub
rol
lea
sub
ror
sub
ror
pop
sub
shr
pop
push
push
push
lea
push
call
add
add
rcrb
arpl
pop
jno
add
addl
lods
ficomps
shlb
add
stc
jl
mov
add
add
test
xchg
add
loope
outsl
into
pop
mov
jne
xchg
lods
add
add
test
add
lcall
call
push
push
push
push
push
lea
push
push
push
call
add
add
pop
add
addl
mov
mov
ljmp
jecxz
in
loopne
lcall
js
int3
fldz
ret
scas
or
add
frstor
push
inc
add
push
or
not
add
sub
add
sub
pop
shr
xor
add
pop
push
push
push
push
push
push
push
push
push
call
aad
add
xchg
push
add
jecxz
xchg
add
std
data16
jge
xchg
add
fwait
outsl
fwait
lret
pop
mov
incb
outsl
add
xchg
lods
in
stc
sub
pop
push
call
push
lea
push
push
lea
push
call
add
add
add
xchg
push
int
add
mov
stc
push
mov
add
add
mov
aad
pop
aad
fadds
sub
pop
cmpl
je
push
push
dec
push
xor
add
add
sub
sub
sub
ror
pop
lea
rol
ror
pop
push
not
shr
shl
pop
push
push
push
push
push
lea
push
call
push
movsl
mov
test
mov
test
loop
add
jmp
clc
cmc
fdivr
xchg
add
insb
shr
push
ret
sahf
shl
cmpsl
add
sub
pop
call
push
push
push
push
lea
push
call
add
add
popa
pop
fwait
jge
lret
outsl
cld
add
divl
jbe
sahf
mov
cwtl
push
mov
jecxz
add
sbbb
pop
lret
jl
add
add
xchg
loope
add
add
jp
xchg
add
add
cmc
add
outsl
add
add
or
add
in
in
lcall
cmp
add
int3
je
push
push
push
push
pop
add
not
sub
sub
pop
sub
xor
pop
push
add
add
pop
push
push
push
push
push
call
jnp
add
pop
add
lock
bound
rorl
mov
mov
into
jnp
out
xchg
add
sub
pop
call
push
shl
lea
pop
cmpl
je
push
push
ror
not
push
xor
add
not
sub
shr
pop
not
sub
pop
push
push
push
push
call
cld
push
fcmovnu
add
aam
mov
fisubrs
add
stc
add
add
leave
add
call
push
mov
into
xchg
ret
fcomps
hlt
into
mov
jl
add
pop
popf
ljmp
mov
sbb
in
lock
lcall
call
push
push
push
lea
push
push
call
add
mov
add
add
rolb
add
add
add
add
fists
mov
add
lcall
cmp
rol
je
push
push
shr
sub
push
or
not
add
add
shr
sub
add
xor
pop
sub
pop
push
shl
sub
add
pop
push
call
push
xor
ror
pop
cmpl
je
push
push
shr
xor
push
or
not
add
rol
xor
add
sub
shr
pop
sub
pop
push
shr
sub
pop
push
push
xor
xor
not
pop
call
push
lea
push
push
push
push
call
test
add
fwait
add
cli
add
loope
lods
in
add
jecxz
add
in
pop
rcll
push
mov
jnp
add
ja
repnz
add
add
fidivrl
xchg
push
xlat
add
sub
pop
cmpl
je
push
push
add
lea
add
add
push
or
inc
add
shl
xor
sub
sub
pop
add
ror
pop
push
push
push
lea
push
push
call
pop
add
add
test
in
add
pusha
add
popa
push
add
pop
add
add
add
testb
aad
gs
xchg
pop
add
sub
pop
push
push
xor
dec
pop
call
push
add
pop
cmpl
je
push
push
sub
shl
push
or
inc
add
shl
sub
lea
pop
shr
pop
push
ror
sub
pop
push
call
push
shl
inc
pop
cmpl
je
push
push
sub
push
xor
add
rol
dec
sub
add
sub
ror
sub
pop
add
lea
pop
push
pop
push
push
push
push
push
push
push
push
lea
push
call
popf
cld
add
add
mov
add
mov
fadds
add
lea
movsl
rolb
add
add
stc
add
ret
jo
int3
xchg
mov
in
loopne
lcall
adc
add
push
push
lea
push
push
push
push
push
push
push
push
call
xchg
add
lahf
data16
add
cmpb
add
add
add
pop
push
jecxz
scas
mov
add
fcomps
cmp
test
mov
mov
rol
rol
add
sub
push
or
not
add
inc
dec
sub
add
shr
add
inc
pop
rol
pop
push
push
push
push
push
push
push
lea
push
push
call
add
icebp
fwait
imulb
jp
xlat
call
in
jle
xchg
fmuls
mov
pusha
add
pop
mov
add
sub
pop
push
push
push
push
push
push
push
call
in
mov
add
subl
add
add
pop
enter
call
stc
add
mov
mov
mov
add
stc
add
aam
add
add
add
add
fs
mov
in
call
add
push
push
push
push
push
call
lahf
xchg
add
flds
add
xchg
pop
imul
push
add
mov
add
adcl
jno
add
xchg
add
pop
sar
testl
add
js
mov
add
add
add
mov
lcall
js
xor
ret
test
add
add
and
ja
xor
xor
dec
push
or
not
add
add
add
sub
dec
sub
add
inc
pop
dec
sub
pop
push
add
add
dec
pop
push
push
push
push
call
add
in
lcall
cli
mov
fwait
xchg
add
mov
scas
add
in
addr16
add
fisttps
fmulp
popa
add
call
add
add
stos
sub
pop
call
push
push
lea
push
push
push
call
mov
add
add
pop
imul
add
add
xchg
xchg
stc
add
mov
add
mov
add
add
cmpl
je
push
push
sub
add
sub
push
push
pop
add
ror
sub
not
pop
not
dec
pop
push
rol
pop
push
push
add
shl
ror
pop
call
cmpl
jne
push
lea
sub
inc
pop
mov
push
lea
add
pop
movl
jmp
push
shr
inc
pop
xor
push
lea
push
push
lea
push
push
push
push
call
push
pop
imul
out
add
add
out
vldmxcsr
in
jp
jns
xchg
lods
add
add
fcmovnbe
pop
xchg
pop
jbe
mov
out
out
nop
leave
mov
loope
add
testb
arpl
lods
add
lahf
popa
add
test
pop
push
push
push
lea
push
call
scas
xchg
pusha
jo
add
fistpll
and
lods
enter
add
mov
add
fists
shrb
movsb
mov
add
int3
sarl
add
add
lret
fisubs
lea
lds
add
lret
add
movsb
add
cwtl
mov
mov
sub
pop
pop
push
push
push
push
push
push
call
add
push
add
add
add
add
addl
add
js
cmpsb
fs
add
push
insb
add
leave
int3
cld
std
fcmovbe
add
fucomi
add
xchg
mov
les
js
push
jne
pop
add
loop
add
lcall
push
xor
not
pop
leave
push
lea
dec
xor
pop
ret
push
lea
shl
shl
sub
pop
push
mov
push
push
push
push
push
push
push
lea
push
call
mov
add
lret
out
data16
clc
add
add
int
jle
mov
cld
add
cmpsb
add
add
cwtl
mov
add
pushf
add
add
jo
mov
xchg
xchg
cmpsl
fcompl
scas
add
jmp
mov
pop
add
push
sub
shr
pop
cmpl
jne
push
push
shr
inc
shl
push
xor
add
sub
sub
sub
shl
pop
inc
pop
push
lea
push
lea
push
lea
push
call
fisubrs
lods
add
add
add
push
add
cmpsl
mov
call
jecxz
add
jmp
mov
mov
mov
sub
pop
pushl
call
push
push
push
push
call
add
add
mov
push
add
add
jne
lock
movl
hlt
add
fld
ljmp
clc
jp
aam
add
rcrb
add
ret
in
lock
push
push
push
push
push
push
push
push
push
lea
push
push
call
add
js
in
mov
cmpsb
add
add
mov
add
shrb
add
add
out
mov
insb
cmpb
add
push
add
mov
add
imul
into
pop
lahf
movsb
mov
popl
aad
add
incb
idiv
add
call
push
push
push
push
push
push
push
lea
push
push
call
push
add
jmp
imul
add
outsl
fldl
jmp
add
mov
add
add
mov
cmc
add
add
mov
add
add
arpl
add
jne
add
fld
stos
test
ljmp
andb
lods
sub
pop
jmp
cmpl
je
push
push
push
call
in
xchg
add
int3
mov
add
add
mov
mov
leave
je
lret
std
leave
ret
xchg
ret
add
add
jne
mov
mov
add
in
hlt
pop
cmpl
jne
push
rol
sub
pop
mov
call
push
push
push
push
push
lea
push
call
cmpsb
js
arpl
mov
jo
bound
movsl
jno
add
data16
mov
call
ret
push
lea
push
push
call
jle
leave
mov
icebp
rcr
add
add
js
add
rcll
xchg
in
int
cltd
fdivrs
add
addr16
lcall
mov
negb
mov
mov
add
add
xlat
add
pop
insb
sub
pop
jmp
push
sub
pop
cmpl
jne
push
push
add
xor
push
or
not
add
xor
sub
inc
sub
dec
lea
pop
lea
pop
push
lea
push
push
lea
push
push
push
push
push
call
sbbl
add
add
add
jns
mov
sahf
mov
mov
fadds
add
mov
add
arpl
sub
pop
pushl
call
push
push
push
push
push
lea
push
lea
push
push
push
call
jecxz
jmp
in
arpl
add
add
add
add
stos
nop
jl
pop
int3
mov
hlt
mov
add
add
popl
add
rolb
add
add
add
xchg
add
pop
add
loopne
mov
add
popa
fstpt
add
mov
hlt
flds
lcall
add
rclb
push
lea
push
push
push
push
call
add
add
add
mov
add
add
add
add
mov
mov
ret
cmpsb
leave
add
xchg
jmp
in
filds
add
add
jl
jmp
scas
add
add
sub
pop
jmp
push
push
push
call
add
add
out
je
pop
jbe
rolb
add
addb
add
xchg
aam
xchg
add
mov
add
xchg
add
movsl
imul
out
jecxz
push
addl
ret
jno
add
aad
xlat
mov
xchg
add
mov
iret
lock
xlat
add
in
hlt
pop
cmpl
jne
push
xor
pop
mov
push
lea
push
push
lea
push
call
xchg
add
push
aad
hlt
add
je
popl
pop
cltd
fwait
mov
pop
add
add
fwait
add
push
rolb
lcall
add
add
push
shl
pop
push
push
push
shr
push
or
not
add
xor
rol
dec
sub
rol
shl
ror
pop
ror
lea
lea
pop
push
dec
inc
pop
pushl
push
shr
ror
add
pop
call
call
push
push
inc
xor
sub
push
push
pop
add
sub
shr
ror
add
sub
pop
shl
inc
dec
not
pop
push
pop
pushl
push
lea
push
push
push
call
add
push
loopne
mov
xchg
std
sbbl
lods
add
add
add
add
push
mov
movl
mov
enter
in
lock
lcall
aad
add
call
push
push
dec
push
sub
add
sub
not
sub
shr
sub
dec
xor
pop
ror
ror
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
scas
xchg
add
add
push
pop
in
mov
mov
lods
add
pop
add
fcoms
add
add
mov
icebp
xchg
addr16
add
mov
test
add
add
add
scas
lds
xchg
sub
pop
pushl
push
add
sub
rol
pop
call
push
not
pop
call
push
push
lea
inc
push
and
add
inc
sub
sub
add
pop
sub
dec
pop
push
push
push
lea
push
lea
push
call
negl
mov
test
mov
imul
int3
xlat
push
add
add
add
iret
fwait
popa
lahf
push
mov
add
xchg
xchg
icebp
xchg
loop
add
int3
add
add
push
fists
scas
test
mov
push
insb
xchg
add
sarl
add
lcall
jne
push
shr
rol
pop
call
push
push
push
push
lea
push
push
push
push
call
call
movl
pop
imul
js
lret
mov
add
cld
add
add
add
addl
pop
call
push
push
xor
inc
push
or
inc
add
rol
dec
sub
rol
shr
pop
not
xor
pop
push
lea
dec
add
add
pop
pushl
push
push
push
push
push
call
add
hlt
test
add
push
lahf
add
add
cmp
xchg
pushf
add
mov
add
lea
cltd
test
sub
pop
call
call
push
push
dec
ror
push
or
inc
add
sub
dec
sub
inc
sub
shr
pop
lea
ror
xor
pop
push
add
shr
pop
pushl
call
push
push
push
push
push
push
push
push
push
call
xchg
fnsave
jmp
push
push
popa
add
add
adcl
rol
add
add
add
add
in
sub
pop
call
push
push
shl
lea
shl
xor
push
sub
add
ror
sub
xor
sub
shr
pop
rol
pop
push
inc
inc
xor
pop
pushl
push
xor
pop
call
push
push
push
lea
push
push
call
add
pop
add
add
fcoml
out
add
mov
clc
push
mov
stc
mul
add
lcall
shrb
or
cmp
xor
add
add
ror
sub
inc
pop
shl
dec
inc
pop
push
shl
sub
pop
pushl
push
shl
pop
call
push
push
push
push
call
add
mov
faddl
fisttps
jbe
mov
add
add
add
add
lea
test
add
in
add
push
add
mov
add
mov
test
add
add
pushf
xlat
sub
pop
call
push
push
add
shl
sub
inc
push
or
inc
add
lea
xor
sub
sub
add
add
pop
sub
lea
pop
push
push
push
push
push
call
add
add
aad
loope
stos
add
add
lahf
add
rolb
mov
leave
jns
mov
cltd
add
add
add
xlat
mov
shrb
push
hlt
outsl
add
add
add
add
les
add
nop
aam
in
in
pop
pushl
call
push
lea
push
lea
push
lea
push
call
mov
faddp
xchg
incb
test
roll
addr16
fcmovnu
push
add
mov
mov
add
xchg
stos
sub
pop
call
push
push
push
sub
add
dec
lea
add
sub
dec
sub
pop
dec
inc
dec
pop
push
shl
lea
lea
not
pop
pushl
push
add
add
inc
pop
call
push
inc
pop
lea
push
not
dec
ror
pop
push
call
push
push
shl
lea
add
push
push
pop
add
sub
shr
shl
sub
add
pop
shr
pop
push
inc
pop
pushl
push
pop
call
push
push
push
push
push
push
push
call
mov
mov
add
ret
add
add
add
xchg
add
add
add
jecxz
add
add
xchg
ffree
push
ljmp
test
push
add
add
gs
pop
add
mov
add
stc
aam
into
add
add
push
sub
pop
call
push
push
sub
push
or
inc
add
add
sub
inc
add
add
pop
not
add
pop
push
push
push
call
cli
mov
aam
movsl
xchg
add
add
push
js
add
test
je
cmc
add
add
add
add
add
cmc
add
add
in
out
mov
in
add
fldcw
bound
testb
int3
outsl
stc
popf
add
rolb
pusha
add
sub
pop
pushl
push
lea
pop
call
call
push
push
sub
inc
shr
push
sub
add
shr
lea
add
sub
add
pop
shl
dec
pop
push
push
push
push
push
push
lea
push
call
add
push
push
testl
add
cli
add
in
mov
add
push
rol
add
lea
pushl
call
push
pop
call
push
push
ror
dec
push
or
not
add
lea
sub
lea
dec
pop
rol
rol
pop
push
not
pop
pushl
push
push
push
lea
push
push
push
call
add
jge
add
jo
mov
sti
add
movsb
sahf
stos
std
pop
cmpsb
test
add
add
add
call
repnz
pop
call
push
push
shl
add
push
or
not
add
sub
add
add
pop
shr
dec
pop
push
push
push
or
inc
add
sub
dec
sub
add
pop
sub
not
pop
push
not
pop
call
push
push
push
push
push
call
enter
lcall
loope
mov
push
add
jo
jns
outsl
pop
add
cltd
div
add
roll
ja
jae
add
pop
pop
push
xor
add
not
pop
dec
jne
call
push
push
push
call
add
push
jmp
push
add
add
jo
jl
xchg
add
add
cmpsb
mov
add
add
pop
subb
xchg
add
add
sub
pop
mov
int
push
lea
not
dec
not
pop
lea
push
push
push
sub
add
not
xor
sub
shr
shl
pop
add
lea
inc
pop
push
sub
shl
pop
pushl
push
lea
push
push
push
push
call
xlat
aad
add
fldcw
add
add
add
add
cmpsb
jns
iret
fimull
add
std
arpl
in
add
mov
add
add
jecxz
rcl
sub
pop
call
push
push
sub
inc
sub
pop
call
push
push
add
xor
push
and
add
sub
sub
ror
rol
pop
ror
pop
push
push
push
push
push
push
call
add
insb
add
ja
cmpl
lcall
add
jmp
outsl
add
ljmp
ljmp
add
add
mov
push
out
mov
add
mov
add
push
mov
add
add
add
in
mov
add
lcall
jne
push
ror
shr
pop
call
push
push
push
lea
push
call
jl
out
xchg
addb
fstl
mov
stos
xlat
push
hlt
add
add
add
mov
in
in
add
sub
cmpsb
add
lahf
rcll
add
xchg
mov
xchg
xchg
add
leave
loope
add
stos
out
std
addr16
addr16
add
in
loopne
mov
lcall
rclb
out
add
pop
mov
push
ror
rol
ror
dec
pop
lea
push
push
ror
push
xor
add
sub
xor
sub
add
shr
xor
pop
ror
pop
push
sub
pop
pushl
push
inc
ror
pop
call
push
push
push
push
push
push
lea
push
push
push
push
call
mov
pop
push
add
add
add
add
add
pop
xchg
add
fsubs
add
cmpsb
lahf
add
push
mov
add
in
sub
pop
lea
push
pop
push
push
push
push
lea
push
push
push
push
push
call
add
push
mov
mov
xchg
lds
add
add
xchg
add
repnz
add
pop
add
insb
add
add
lcall
add
in
jnp
sti
push
push
call
bound
rolb
fldl
xchg
xchg
addb
add
add
jns
push
arpl
insb
pop
add
stos
shll
fdivr
add
add
add
add
cli
out
add
mov
aam
mov
mov
add
pop
pushl
push
push
xor
ror
add
push
or
not
add
shr
add
sub
inc
pop
xor
dec
lea
add
pop
push
add
pop
push
call
push
push
shl
add
shr
push
and
add
not
add
dec
sub
xor
sub
xor
pop
inc
add
xor
pop
push
xor
rol
dec
pop
pushl
push
push
call
add
add
add
add
fwait
mov
mov
jnp
jle
add
cmpsb
scas
jge
mov
add
repnz
lret
add
add
clc
add
jp
add
xchg
add
stos
fadds
sti
add
add
add
add
jmp
icebp
mov
pop
add
jmp
in
clc
pop
call
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
mov
push
lods
mov
pop
add
add
jbe
fiadds
add
jmp
jne
addl
enter
add
call
lods
addl
add
add
xchg
pop
jns
shrl
loopne
call
push
push
lea
rol
push
or
not
add
lea
sub
add
ror
pop
add
xor
ror
pop
push
dec
shl
sub
pop
pushl
push
rol
sub
shr
rol
pop
call
call
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
fmulp
push
mov
add
add
cltd
push
shrb
pop
add
add
addl
mov
add
pushl
push
xor
pop
mov
jmp
push
push
inc
add
push
push
pop
add
sub
shl
sub
not
lea
xor
pop
not
pop
push
push
push
push
push
push
push
push
call
ljmp
add
fmul
out
mov
add
xchg
mov
add
stc
add
add
mov
addb
add
popa
mov
ljmp
pop
add
mov
add
jne
push
push
push
push
push
push
push
call
mov
stos
cwtl
pop
add
add
cltd
movb
test
add
push
pop
xchg
add
fwait
jns
add
add
jb
xchg
scas
add
mov
rclb
lods
jb
add
add
test
add
add
fiadds
loope
in
in
call
push
push
push
call
add
js
add
add
lods
ffree
add
fdivl
xchg
mov
mov
add
jne
pop
add
roll
add
add
subb
hlt
lcall
add
shrb
mov
ret
shl
shr
inc
push
or
not
add
sub
sub
sub
dec
shr
shl
sub
pop
pop
push
sub
shr
pop
pushl
call
push
lea
add
pop
push
push
rol
inc
pop
call
leave
push
push
lea
push
push
lea
push
push
push
call
bound
hlt
add
add
je
add
jno
addb
shl
add
test
shrb
rcrl
lock
mov
test
mov
mov
xchg
addb
test
add
add
insb
std
mov
cmc
mov
xchg
sub
pop
add
push
inc
dec
pop
pop
pop
push
pop
pop
push
push
call
add
add
hlt
mov
cmpsb
add
fwait
imul
imul
loop
pop
add
iret
mov
mulb
in
imul
outsl
in
add
out
lods
lahf
scas
sub
pop
xor
inc
push
lea
push
push
push
lea
push
push
push
push
push
call
lret
xchg
bound
add
add
stos
pop
jbe
popf
fldl
add
push
call
cltd
add
lcall
add
popl
jne
add
add
add
arpl
add
xchg
jp
popl
lcall
or
push
pop
leave
push
shr
xor
sub
pop
ret
push
sub
pop
push
push
push
push
push
push
push
push
push
push
push
call
lds
add
loope
jnp
test
mov
add
bound
add
xchg
mov
jmp
arpl
xorl
add
into
pop
cmpsl
add
mov
divl
add
add
in
imul
push
push
push
lea
push
push
push
push
push
call
bound
fwait
pop
mov
add
ja
mov
sahf
movsb
imul
jmp
add
add
cli
jns
add
cmc
rolb
lcall
jge
add
test
ror
sub
lea
pop
mov
push
dec
shl
sub
pop
jmp
push
lea
push
push
push
push
call
add
in
add
add
xchg
test
jo
imul
mov
mov
scas
add
jae
add
mov
fidivrs
add
add
cmpsl
lock
mov
add
fistpll
jnp
add
add
addb
add
out
add
test
inc
or
jmp
shr
pop
and
push
not
pop
xor
push
lea
push
push
call
add
pop
test
roll
imul
mov
add
stos
cmpsl
add
mov
add
add
add
jmp
fidivl
aad
sub
pop
xor
push
inc
sub
pop
add
xor
push
push
lea
push
lea
push
call
lock
add
add
add
out
add
lret
roll
ja
lds
mov
push
add
add
add
add
cmc
add
xchg
add
mov
loop
mov
add
std
add
fldl
add
mov
fwait
mov
dec
sub
push
push
push
push
call
nop
movb
add
xchg
jmp
xchg
lds
add
sahf
mov
add
filds
add
in
rolb
add
mov
mov
add
imul
pop
xchg
pop
add
cmc
roll
add
bound
xchg
clc
sti
mov
push
add
cmc
mov
add
pop
jmp
push
add
pop
sub
pushl
push
xor
dec
pop
pop
sub
push
lea
push
push
push
call
add
in
mov
add
shr
jno
andl
add
add
rolb
lcall
test
lret
add
add
test
add
fwait
add
call
xchg
add
add
add
jb
js
ljmp
mov
xchg
add
lcall
cmp
push
call
lret
enter
pop
lea
push
push
call
nop
add
push
mov
mov
add
shll
add
jmp
add
rcl
add
jbe
fdivs
iret
je
outsl
add
lcall
push
data16
movsb
sub
pop
sub
push
pop
mov
push
sub
pop
shr
add
push
shl
pop
sub
push
lea
push
push
lea
push
call
mov
jno
xchg
xchg
mov
roll
add
mov
pop
mov
xchg
jge
mov
jmp
pop
incb
xchg
iret
jns
add
aad
add
add
enter
lcall
xor
or
rep
push
lea
push
push
push
call
cltd
pop
test
mov
imulb
jmp
jp
pop
xchg
cmpsb
push
iret
scas
add
jecxz
aad
add
add
pop
stos
ja
add
xchg
add
shrl
jl
mov
cmpsb
int
add
in
call
pop
push
lea
push
lea
push
push
lea
push
call
outsl
mov
aam
pop
xchg
cmpsl
mov
pusha
pop
in
mov
lods
fmul
jo
add
lea
mov
jbe
push
loopne
add
icebp
xchg
add
aam
int
sahf
mov
add
lcall
jmp
lea
pop
and
push
push
lea
push
push
push
lea
push
call
add
add
add
jne
add
add
jmp
je
add
mov
add
add
mov
movb
js
sar
push
movb
fbstp
jno
lods
sub
pop
sub
push
add
shr
pop
cmp
jne
push
push
lea
push
call
add
add
add
lods
stos
add
mov
add
jmp
xchg
stc
imul
xchg
xchg
push
lcall
into
add
add
js
add
add
mov
add
bound
push
add
push
add
push
test
add
jne
sub
pop
leave
push
rol
add
rol
shr
pop
ret
push
push
inc
pop
mov
push
push
push
push
push
push
push
call
in
int3
test
add
in
int3
mov
add
into
jge
push
add
add
add
mov
mov
lret
out
pop
add
pusha
xorl
add
add
xchg
xchg
loope
add
lcall
cld
push
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
mov
mov
add
cmc
add
add
mov
fiaddl
mov
add
push
jbe
add
xlat
ret
lods
jp
nop
add
add
add
jae
jmp
pushf
jmp
lret
jbe
mov
shl
push
xchg
jbe
add
in
fdivr
lcall
push
push
push
push
lea
push
push
call
jle
std
bound
add
add
mov
add
mov
jmp
in
jecxz
add
mov
pop
add
mov
mov
add
scas
add
enter
gs
ljmp
pop
add
push
push
sub
pop
push
push
lea
push
push
push
push
call
add
ret
into
gs
insb
icebp
jne
loop
push
enter
add
call
add
add
popf
ret
pop
lret
lret
loop
push
mov
mov
jge
cld
add
insb
mov
mov
out
pop
fistps
lea
add
xchg
int
lret
sub
pop
push
push
ror
inc
pop
push
mov
push
lea
add
dec
dec
pop
lea
push
push
push
lea
push
lea
push
call
popf
xchg
icebp
add
cld
add
add
aad
mov
fadds
loope
mov
cmpsl
add
mov
add
roll
hlt
add
jmp
fldl
mov
add
jl
push
add
add
jo
add
mov
lods
shll
xchg
jbe
sub
pop
sub
mov
push
pop
shr
add
push
sub
dec
pop
mov
push
push
lea
push
call
lea
enter
xchg
pop
jo
mov
int
add
addl
mov
push
cmc
cli
imul
or
fwait
mov
push
ret
add
add
cld
movsb
add
add
pop
aad
add
roll
lcall
pop
or
ret
dec
inc
shr
pop
mov
add
push
push
lea
push
push
push
push
push
push
push
call
mov
lret
mov
add
shlb
addl
add
add
jns
add
ja
push
add
fdivr
lcall
testb
les
lea
push
push
push
push
push
call
imul
nop
xchg
and
cmpsl
aam
int3
call
mov
ja
mov
mov
add
mov
std
sub
pop
and
rol
push
shl
pop
rol
push
shl
lea
shr
lea
pop
xor
push
push
lea
push
push
push
push
push
push
push
push
call
mov
jecxz
popf
mov
iret
mov
out
addr16
add
mov
mov
loope
ljmp
add
mov
jle
add
fadds
mov
add
jnp
add
add
add
loop
js
insb
add
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
sahf
aam
rolb
add
add
add
cmc
jno
mov
add
rolb
add
jl
mov
jnp
in
movsl
movsb
pop
mov
add
add
mov
loopne
lcall
cmp
jne
add
push
sub
xor
pop
cmp
je
add
push
xor
rol
pop
cmpl
jne
xor
push
lea
push
push
push
push
push
push
push
push
lea
push
call
fldt
add
add
aam
add
push
pop
addl
lahf
jnp
xchg
add
add
test
add
add
aam
xchg
add
filds
add
int3
fiaddl
sub
pop
pop
pop
push
push
call
push
add
shlb
call
add
push
pop
fwait
loopne
movsl
jns
add
aam
mov
add
add
int3
add
add
pusha
add
add
xchg
add
add
xchg
add
push
push
lea
push
call
pop
out
leave
jno
out
pop
mov
fucom
ljmp
jo
xchg
aad
pop
movl
sahf
add
mov
mov
add
out
outsl
add
add
rorl
jae
jb
push
jne
add
rolb
xchg
add
cmpsb
add
lcall
pop
push
sub
lea
shr
pop
leave
push
push
push
lea
push
call
popl
pusha
scas
cwtl
add
mov
add
add
push
add
add
in
lock
ret
push
push
lea
push
push
push
push
call
add
iret
mov
lahf
push
mov
add
mov
add
jp
mov
add
add
neg
lret
movl
add
aad
not
push
sub
pop
mov
push
lea
pop
add
push
ror
pop
mov
push
push
add
dec
not
pop
mulb
push
shr
add
pop
pop
push
add
ror
pop
call
push
push
push
push
push
push
call
fwait
mov
pop
jmp
mov
add
insb
js
in
shr
jmp
add
add
loop
add
add
clc
scas
add
loopne
mov
je
mov
add
mov
add
fsubrl
add
jbe
add
mov
add
add
sub
pop
call
push
shr
inc
pop
xor
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
subl
adc
jnp
pop
ja
loop
add
add
add
sti
stc
addb
add
push
push
push
push
lea
push
push
push
push
push
call
scas
add
rolb
lods
add
faddl
mov
add
outsl
rolb
add
ljmp
loop
jnp
add
add
add
add
add
mov
add
add
jle
stos
sub
pop
pop
push
shr
shr
ror
pop
pop
push
push
push
push
lea
push
call
pop
addl
aam
movsb
rcl
add
cld
xchg
mov
add
mov
add
add
xchg
stos
add
add
int
jno
mov
test
xchg
jb
fldl
leave
push
push
push
call
mov
out
add
pop
fdiv
add
nop
js
mov
add
jge
push
push
add
lock
mov
pop
popa
add
hlt
cmpsb
add
add
add
ret
fisttps
add
add
jge
mov
movsl
add
faddl
add
lcall
or
push
push
lea
push
push
call
mov
and
loopne
push
jbe
add
mov
jbe
stos
shrl
add
add
jmp
add
popf
add
add
add
popf
shr
mov
mov
add
nop
fldl
ror
add
loope
add
add
repnz
jb
pop
shll
add
sub
pop
push
push
push
push
push
lea
push
call
add
leave
add
add
imul
xchg
add
xchg
ret
add
fcmovnu
lods
bound
mov
scas
add
addb
in
in
lcall
in
add
push
not
xor
shl
pop
push
push
push
add
sub
pop
push
push
lea
push
push
push
call
frndint
add
add
add
add
add
roll
mov
mov
stos
add
add
roll
xchg
add
enter
jbe
add
jns
aam
stc
xchg
xchg
mov
scas
xchg
add
nop
jne
in
addl
imul
in
clc
add
les
lock
lcall
push
push
push
push
push
push
call
add
lret
xchg
xchg
orb
add
lods
add
push
xchg
icebp
xchg
add
loop
pop
stos
xchg
add
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
cmc
xlat
lds
add
add
pop
scas
add
add
add
add
lcall
add
add
add
add
fnstsw
mov
push
add
xchg
add
sahf
mov
cld
cli
sub
pop
pop
lea
push
push
lea
push
push
lea
push
push
push
call
mov
cmpsl
push
xchg
add
add
addb
push
jns
add
add
add
mov
fistl
in
xchg
jae
jle
test
in
in
lcall
ljmp
adc
push
push
push
lea
push
push
lea
push
push
push
call
loope
lds
mov
add
frstpm(287
cli
popa
mov
jnp
xchg
add
add
shlb
mov
pusha
add
add
shr
push
add
dec
pop
add
push
pop
mov
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
pushf
pop
jne
pop
add
in
push
add
add
add
add
xlat
popf
sti
add
lcall
pusha
loop
push
xchg
out
pop
add
in
fdivr
lcall
fcos
jae
push
push
push
push
push
lea
push
push
lea
push
push
call
sahf
xchg
jl
clc
add
mov
mov
jmp
add
push
rcr
add
jnp
nop
leave
fldl
mov
pop
add
scas
arpl
icebp
add
cmpsl
outsl
add
add
add
add
add
add
mov
add
add
sub
pop
popl
mov
push
lea
push
push
lea
push
push
call
add
mov
pop
icebp
addl
mov
fsubs
xchg
xchg
add
add
add
add
scas
add
mov
in
pop
add
xor
push
lea
push
push
push
push
lea
push
call
loopne
out
mov
xchg
add
testl
jne
mov
xchg
enter
add
imul
mov
push
xchg
mov
icebp
pop
je
add
mov
add
js
jl
sub
pop
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
enter
cld
lret
jns
in
xchg
pop
mov
in
loopne
add
add
add
push
lea
lret
add
push
add
add
xchg
add
popa
add
xchg
jnp
mov
add
mov
xchg
stc
insb
add
sbb
addl
xchg
out
add
add
add
add
xchg
add
add
ret
loopne
lcall
adc
sbb
sub
add
in
add
fstpt
lret
arpl
add
stos
outsl
icebp
mov
arpl
mov
jecxz
push
xchg
mov
add
sub
pop
add
push
push
push
lea
push
lea
push
call
add
jns
test
sti
je
leave
neg
jle
leave
add
push
cmc
add
test
jne
add
add
mov
in
lcall
rclb
sub
pop
rol
push
lea
push
push
push
push
push
call
pusha
add
ret
cmpsl
add
add
push
pop
addb
add
mov
into
lock
jge
pop
add
add
lea
mov
sti
mov
cltd
test
test
pusha
jae
add
stos
add
aad
add
xchg
add
xchg
add
aad
mov
mov
movsl
out
push
sub
pop
nop
push
push
call
jnp
scas
int3
in
push
add
mov
addl
add
add
addb
mov
pusha
icebp
add
jnp
in
clc
lcall
push
shl
pop
xor
push
push
push
call
shr
hlt
flds
add
add
add
add
add
testb
add
lods
fadds
add
lcall
nop
push
push
push
push
push
call
push
leave
jo
add
lret
xchg
push
add
mov
mov
popa
addl
add
int3
mov
add
fstpt
add
mov
pop
pusha
std
add
add
mov
ret
insb
out
mov
push
pusha
mov
fadds
add
add
pop
add
jmp
je
lds
push
not
pop
nop
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
filds
add
mov
popa
in
pusha
pusha
push
movsb
mov
data16
nop
add
out
stos
add
stos
add
add
cltd
add
push
imul
xlat
faddl
cmpb
jne
push
shr
pop
add
nop
push
dec
pop
nop
cmp
je
push
inc
add
pop
nop
nop
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
fdivl
mov
sahf
xchg
add
add
mov
push
xchg
out
xchg
cmpsb
add
aam
repnz
add
add
add
addr16
add
add
add
add
add
add
sub
pop
inc
push
add
add
sub
pop
nop
push
sub
pop
nop
cmp
jb
push
add
add
pop
xor
push
xor
sub
pop
jmp
push
pop
mov
push
sub
pop
add
push
sub
pop
movzwl
push
dec
not
dec
pop
mov
push
xor
inc
sub
add
pop
add
push
push
call
shr
les
add
add
in
add
add
cltd
mov
addb
shrb
test
fsts
loope
je
jo
lret
mov
add
add
add
add
push
mov
jp
xchg
test
mov
jp
jmp
pop
std
mov
in
lods
add
cltd
cmpsb
mov
mov
sub
pop
mov
push
push
call
js
xlat
add
add
jmp
aam
out
add
add
add
add
mov
add
imulb
add
mov
add
sub
pop
xor
xor
push
sub
add
pop
shl
xor
push
push
lea
push
push
push
lea
push
push
call
add
add
cmc
add
lahf
add
js
add
data16
jbe
add
imul
add
addl
add
add
shll
add
mov
mov
push
add
add
add
mov
pop
mov
mov
gs
pop
add
addb
sub
pop
shl
xor
push
rol
lea
inc
not
pop
shl
push
lea
push
push
push
push
call
add
lock
add
pop
add
add
add
mov
cmc
mov
addb
movsb
add
mov
clc
cli
add
add
add
shlb
add
ja
pop
add
add
jl
movl
mov
lcall
in
in
lcall
or
mov
push
lea
push
lea
push
call
push
aam
xchg
loopne
mov
sahf
add
incb
imul
mov
lods
lods
jecxz
addb
filds
add
bound
push
add
fucomip
in
add
in
sub
pop
add
push
dec
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
pop
mov
call
std
fiaddl
lods
add
add
add
push
rol
add
in
std
push
div
pop
rcrb
pop
jmp
sub
pop
pop
push
lea
xor
pop
pop
push
push
lea
push
push
push
push
lea
push
call
subb
add
add
mov
rolb
ljmp
addb
int
int3
add
fs
lret
in
add
rolb
test
mov
jne
push
out
sub
pop
pop
push
push
lea
push
push
call
add
subl
in
add
push
add
add
shll
push
lret
test
xchg
fisubrs
add
lcall
push
push
push
push
lea
push
push
push
push
push
lea
push
call
lock
add
add
add
add
shl
add
add
arpl
out
add
add
add
add
mov
fadds
mov
lret
add
jae
mov
into
add
xchg
add
test
cli
add
cld
pop
add
loopne
add
cli
jmp
addb
pop
ret
push
sub
rol
pop
push
push
push
push
push
push
push
push
push
push
push
call
pop
jns
jp
pop
popf
leave
add
fs
add
xlat
or
rcr
stos
icebp
rolb
std
in
cwtl
add
add
movb
push
mov
fs
stos
in
int
sti
call
test
push
test
pop
sub
pop
mov
push
push
push
push
push
push
push
push
push
call
jbe
add
mov
pop
addb
add
cwtl
push
xchg
jbe
lcall
mov
fabs
imul
add
add
out
add
add
icebp
add
push
jl
ret
mov
add
in
loopne
lcall
push
push
push
push
lea
push
push
push
push
push
call
fildll
add
push
add
scas
mov
in
jge
add
add
push
out
add
add
jecxz
add
add
sub
pop
push
push
not
shr
sub
shl
pop
mov
push
push
push
lea
push
lea
push
call
outsl
mov
out
add
add
out
addl
test
mov
add
add
mov
ljmp
cwtl
push
lret
mov
add
add
add
pop
ljmp
imul
push
in
pop
mov
push
sub
dec
rol
pop
mov
push
lea
push
call
add
add
cld
mov
add
add
loopne
add
add
add
stc
add
clc
lcall
rorb
test
add
mov
push
dec
inc
lea
pop
test
je
push
push
push
push
push
push
push
call
sti
add
cmc
out
out
loopne
test
enter
xchg
cld
add
nop
add
add
push
test
outsl
add
mov
cmc
mov
popa
add
add
imul
add
mov
push
push
lahf
repnz
add
add
notl
out
push
push
lea
push
push
push
push
call
add
mov
cmc
xchg
jnp
scas
andl
repnz
sahf
lea
push
lods
jecxz
xchg
xchg
add
roll
lret
in
add
add
jns
push
add
mov
add
pop
push
movsb
fdivr
outsl
je
add
jmp
mov
add
add
arpl
add
sub
pop
mov
push
not
add
lea
pop
mov
inc
push
push
push
push
push
push
call
cmpsb
jge
out
arpl
add
outsl
fnstsw
push
jbe
add
add
push
jge
add
fistpll
data16
sub
pop
cmp
je
push
ror
sub
not
dec
pop
test
je
mov
push
push
push
push
call
pop
jge
pop
mov
mov
add
add
add
flds
cli
shrb
cmpsl
mov
pop
push
int3
loopne
jmp
pop
xchg
mov
add
icebp
add
pusha
pop
nop
add
push
cwtl
lcall
push
add
pop
cmp
je
push
push
push
lea
push
push
push
call
add
jmp
add
add
add
jb
add
fldl
mov
mov
flds
add
jae
enter
loope
add
outsl
add
fsub
loopne
add
push
xlat
add
aad
sub
pop
test
jne
xor
push
push
push
push
push
lea
push
push
push
lea
push
call
addl
add
int
add
imul
add
lea
testl
ret
jne
add
std
xchg
mov
sub
pop
pop
push
add
pop
pop
pop
push
add
xor
pop
pop
push
push
push
push
push
push
push
push
push
call
adcl
add
bound
push
pop
test
enter
add
add
fs
popf
add
add
mov
add
add
jle
lcall
ljmp
sti
pop
push
add
mov
add
mov
add
data16
add
push
jae
into
mov
in
fcompl
push
not
pop
ret
push
push
lea
push
push
push
push
push
lea
push
call
ljmp
add
cmc
jb
test
jecxz
pusha
add
loop
add
add
gs
mov
cmpsb
xchg
add
je
mov
loop
loope
add
lds
pushf
mul
add
add
add
cmpl
add
jb
lahf
sub
pop
mov
push
lea
push
push
push
push
push
push
push
push
lea
push
call
out
stos
je
hlt
idiv
push
add
loop
roll
add
iret
add
mov
repnz
faddl
lcall
cmp
jne
push
shr
add
add
pop
lea
mov
push
sub
shl
not
lea
pop
test
je
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
add
add
jmp
insb
in
add
add
mov
add
add
hlt
mov
imul
lcall
cwtl
ljmp
in
add
add
data16
add
push
fcomi
add
add
push
push
inc
pop
add
cmp
jne
push
push
push
push
push
lea
push
call
add
cmc
add
add
add
roll
xlat
addb
ret
add
in
jp
add
rol
add
add
add
add
mov
jno
jno
movb
pushf
sub
add
add
jmp
pop
out
in
call
test
je
push
push
push
lea
push
push
call
insb
add
add
lret
mov
popa
mov
fwait
loop
call
mov
fildl
in
lcall
callw
cs
lea
push
push
push
push
call
add
in
add
add
ret
xchg
add
jb
pop
add
arpl
popa
in
add
mov
add
mov
add
test
div
sub
pop
add
push
rol
sub
pop
cmp
je
jmp
push
push
call
add
jb
mov
add
addb
ret
add
add
mov
testl
add
fisubl
in
clc
lcall
rclb
sti
int
rcll
cmp
push
lea
push
push
push
push
call
add
popf
jo
add
add
in
lcall
add
add
xchg
lods
add
push
add
mov
xchg
lea
xchg
add
add
and
add
add
add
in
loopne
pop
push
sub
pop
pop
push
sub
shr
xor
pop
pop
push
push
push
lea
push
push
push
push
push
call
test
out
testb
xchg
pushf
xchg
imul
add
xchg
push
mov
add
pop
pop
add
add
add
jl
lock
add
mov
ja
out
cld
jb
stos
lret
jmp
add
lcall
push
lea
push
call
hlt
mov
add
enter
add
add
add
add
add
loopne
loope
add
mov
in
add
add
mov
mov
add
into
sub
pop
leave
ret
push
push
lea
push
push
lea
push
call
mov
add
add
jmp
outsl
subl
ret
add
out
js
add
in
pop
lea
push
shl
not
pop
pop
push
ror
pop
pop
push
rol
add
sub
pop
pop
pop
push
lea
push
push
call
fildl
scas
add
mov
movsb
test
add
ljmp
mov
add
jmp
add
add
jge
cld
push
jmp
ljmp
lcall
ret
push
push
push
push
call
push
in
jo
xchg
push
add
fucompp
pop
in
call
add
add
add
jb
add
add
add
add
xchg
xchg
std
add
sub
pop
mov
pop
push
shr
pop
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
xchg
cmpsb
xorl
pop
add
mov
add
add
data16
jbe
cltd
add
mov
add
testb
fildl
add
add
mov
lds
popl
cmc
add
gs
sub
pop
pop
pop
push
push
push
push
push
push
lea
push
push
call
int3
add
je
pop
out
xchg
add
ffree
push
xchg
movl
mov
in
add
push
scas
ret
pop
add
lret
mov
mov
lcall
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
shll
hlt
pop
jb
push
cmpsl
mov
xchg
frstor
lods
add
fistpl
jecxz
push
add
add
cltd
jl
fwait
add
add
mov
jle
pop
add
shlb
jnp
and
in
fcompl
or
cmp
mov
inc
lret
mov
mov
adc
mov
ror
mov
mov
mov
stc
lret
add
mov
xchg
lret
or
xor
mov
add
add
inc
das
je
cli
inc
sbb
sub
push
or
aas
lret
inc
stc
rol
popf
xor
loopne
push
or
imul
lahf
adc
xchg
inc
out
aaa
push
or
int
mulb
pop
cmpsl
leave
add
push
gs
pusha
mov
test
sahf
mov
aas
mov
mov
gs
cli
sbb
stos
fldl
cmp
insb
pop
das
mov
jnp
hlt
movsl
lret
mov
aaa
push
aad
xchg
xor
and
push
adc
lret
push
cwtl
adc
xchg
das
mov
aad
jae
js
bound
int3
movsl
leave
test
sub
sub
xor
idiv
mov
aas
lcall
jl
fldcw
arpl
xor
out
and
sti
repnz
cmp
cmp
jbe
mov
inc
mov
push
fcoms
xchg
push
xchg
fdivrl
push
daa
fildll
mov
inc
pop
cmp
mov
lret
xor
mov
mov
dec
rcll
xchg
sbb
and
mov
pusha
rcrb
xor
scas
cmpsb
adc
sbb
clc
xor
call
jecxz
mov
push
clc
in
addr16
push
xor
jg
pop
jne
sub
lahf
shrl
fwait
repz
adc
mov
mov
jmp
sub
adc
adc
mov
xchg
fsubrl
sbb
ret
popf
ss
mov
movsb
popa
mov
mov
je
push
repnz
inc
les
mov
jle
inc
xor
inc
mov
addr16
jbe
jbe
adc
jmp
aaa
stos
adc
xor
push
lahf
pop
call
js
bound
inc
std
fsubl
inc
jnp
pop
sbb
mov
fiadds
lret
cwtl
sbbl
push
or
sub
or
xchg
cmp
addb
nop
mov
sbb
or
js
cwtl
scas
xchg
pop
cltd
jge
dec
lods
out
sub
lods
mov
xchg
loopne
cmp
scas
fldenv
cltd
push
push
xor
fidivrs
dec
dec
xor
xchg
push
cmpsb
xlat
xor
hlt
dec
mov
int
mov
mov
out
cmp
scas
xor
popf
inc
adc
jae
push
out
cli
cmp
inc
xchg
dec
jge
inc
add
adc
xlat
lds
xchg
xchg
rcr
mov
lds
sbb
cmpsb
xor
inc
out
insl
sbb
mov
lret
xor
sahf
add
adc
inc
cmp
test
lcall
cwtl
mov
mov
aam
ret
jl
mov
mov
push
mov
int3
fwait
std
daa
test
jns
into
dec
cmpsl
mov
in
in
push
lock
shll
popf
lcall
cld
shlb
and
and
fdivrl
adc
push
hlt
xchg
lahf
or
pushf
psrlq
subl
rclb
jg
xchg
inc
inc
mov
xchg
addr16
loop
pop
mov
fs
push
stos
pop
sti
mov
ljmp
adcb
push
add
clc
ds
mov
test
sub
rcrb
rcl
pop
test
inc
scas
popf
fisttpl
sub
xchg
push
jae
fadds
inc
xor
je
je
test
and
test
out
lds
daa
imul
sarl
stos
lods
repnz
int3
aas
inc
ljmp
or
mov
push
stos
or
xchg
scas
mov
jns
andb
ds
inc
cmpsb
lret
mov
mov
dec
jg
ret
push
mov
aam
mov
cmp
les
pop
rep
mov
cli
aad
or
mov
cmp
cmpb
push
mov
adc
arpl
push
outsb
ja
rol
cs
fsubr
cli
adc
scas
mov
out
imulb
xchg
cmpl
cltd
loop
push
lcall
mov
add
les
adc
lcall
push
mov
ficoms
mov
lods
bound
lret
scas
insl
lock
js
jecxz
movsb
cli
clc
dec
in
in
pushf
out
les
outsb
es
notl
and
sub
lret
mov
fdivs
fildll
frstor
mov
jb
inc
pop
dec
es
dec
ja
mov
cmp
das
outsb
sub
inc
inc
fisttpll
push
push
outsl
sub
inc
sbb
dec
shlb
push
aas
cmp
or
push
lods
icebp
testl
dec
mov
out
sub
nop
adc
repnz
sub
ja
mov
lcall
leave
jnp
inc
lcall
lea
lods
push
and
and
xor
pop
xchg
cmc
in
rorb
mov
lret
and
pop
add
or
shll
mov
or
xlat
ret
mov
fistpll
ret
push
or
loope
lds
sbb
or
pop
into
or
mov
in
daa
jmp
sbb
out
xchg
stos
cmp
lds
mov
arpl
xor
iret
cmp
add
imul
push
shll
je
iret
data16
mov
mov
test
leave
sub
in
incl
insb
mov
mov
scas
lcall
adc
test
xor
cmc
cwtl
sbb
xchg
sub
dec
lret
std
fsts
loopne
shll
jecxz
inc
loopne
dec
les
mov
lcall
mov
repnz
je
mov
and
cmp
mov
push
mov
push
mov
pop
loopne
call
or
sub
leave
shlb
jp
sbb
aad
add
jl
sub
add
cmc
out
repz
cmp
and
mov
add
das
rol
mov
pop
fwait
out
ror
or
push
fnstcw
mov
inc
mov
out
push
lock
or
push
pushf
ss
lea
jg
and
sbb
hlt
nop
xchg
repz
xchg
outsb
pop
inc
je
add
es
out
pop
mov
mov
add
sti
cld
mov
stc
sub
sub
les
test
inc
mov
fsubrl
in
inc
in
stos
ja
imul
inc
fcmovnu
push
jp
mov
mov
je
lods
add
ror
into
in
outsb
shlb
lods
pop
sub
cli
sbb
into
push
push
mov
in
aas
mov
xor
cmp
lcall
popa
xor
xor
mov
pop
add
adc
mov
test
std
xchg
and
lret
fstp
jmp
aad
and
jbe
jae
fbstp
mov
mov
std
pop
fistpl
add
sub
sub
mul
sahf
and
mov
lds
in
xor
mov
and
mov
enter
pop
xchg
lods
iret
xor
xchg
xor
cmp
fstl
int
mov
jnp
shll
lods
inc
pop
dec
xchg
dec
cli
dec
xchg
pop
jl
cmc
xorb
inc
fwait
test
sub
jmp
mov
pop
jnp
xor
cmc
lcall
adc
xchg
inc
repnz
pop
pop
aaa
leave
xchg
fnsave
mov
jo
in
imul
rcrl
xor
jg
jmp
xor
mov
aam
mov
sti
lods
ss
insl
stos
scas
roll
push
xlat
xor
cltd
pop
pop
mov
push
nop
cwtl
repz
in
and
lret
pop
and
push
repz
pushf
mov
push
mov
sti
loop
shrl
push
loop
jle
out
sbb
in
push
push
ret
in
lods
mov
inc
jbe
gs
and
xchg
xchg
push
shl
test
clc
popf
frstor
insl
or
inc
fildl
mov
in
sbbb
in
jg
enter
jle
loope
inc
cmp
movsb
adc
jno
sbb
rcl
push
loopne
cmc
sbb
adc
insl
insb
es
outsb
pop
aad
jmp
push
dec
mov
cmpsb
gs
sti
xor
pop
inc
sub
fdivrl
andl
xor
lret
dec
jecxz
test
dec
jmp
cli
jg
idivb
cmpb
push
leave
fstpl
add
cmp
inc
inc
inc
mov
ljmp
cmp
xchg
cwtl
outsb
cltd
ss
ss
cs
rolb
fcmovu
jl
das
sbb
lock
pop
dec
in
cmp
or
test
pushf
xchg
mov
jno
sub
cmp
aam
jne
fidivl
pusha
test
cwtl
xchg
xchg
stos
cmpsl
xlat
or
xchg
test
xlat
push
mov
in
and
cld
std
f2xm1
push
rorb
mov
mov
xor
test
test
mov
fdivrl
dec
sbb
pop
and
stos
cli
je
add
mov
addr16
ljmp
xchg
frndint
test
cli
bnd
pushl
test
pusha
jbe
out
fstpl
jl
shll
cmp
iret
inc
pop
fnstcw
jnp
outsl
add
jle
cmp
ficomps
mov
xlat
cmpsl
pop
lea
adc
fldenv
xor
cmp
xor
lock
jne
jp
outsl
mov
push
jge
jns
popf
out
adc
and
pop
sub
aaa
outsb
cmp
lret
xchg
push
xor
sbb
jno
fstps
imul
outsl
or
sub
ja
aaa
call
and
pop
out
pop
scas
xor
and
jo
roll
adc
mov
cmpsl
adc
in
inc
sub
xchg
sub
pushf
pop
dec
xchg
mov
push
cld
fnstcw
push
je
dec
test
fcomp
sub
adc
or
and
sub
mov
sbb
hlt
or
repz
mov
fst
daa
pop
or
shll
mov
cmp
movsb
mov
shrb
into
and
cmpsl
dec
stos
sub
or
movsb
test
fincstp
cmpsb
and
insl
cmp
cmovge
repnz
mov
fwait
pop
daa
mov
cmpsb
adc
ret
lahf
ret
mov
cmp
jecxz
mov
rcl
cld
pusha
xchg
pop
pushf
dec
cld
push
jne
pop
or
pop
lods
es
out
in
mov
cmp
out
mov
int
cmp
pop
sub
add
cwtl
aam
into
sbb
test
sub
sub
negl
add
mov
and
insb
js
cmp
sbb
mov
add
ljmp
sbb
add
sahf
xor
mov
adc
hlt
lods
mov
popf
adc
jle
int
or
repnz
int3
and
lods
fistl
dec
lea
inc
inc
jle
xor
inc
lret
dec
cmp
call
call
in
daa
daa
lahf
aad
in
fstpt
sar
lods
pop
inc
push
push
jno
pop
movsb
mov
jecxz
mov
xchg
dec
cmc
sbb
nop
rol
cmpl
mov
sbb
insb
imulb
repz
outsb
and
outsl
add
bound
pushf
pop
pop
pop
cs
das
fisubl
push
insb
inc
jne
xchg
xchg
roll
jl
mov
cmp
mov
add
add
dec
test
jge
fs
jecxz
movsl
ficoms
pusha
shll
push
mov
push
cmp
addr16
cmp
dec
arpl
lret
movsb
rorl
dec
lods
xor
jecxz
imul
std
clc
loope
mov
pop
mov
and
fcomi
lds
adc
fimull
lods
ds
add
outsl
push
mov
lahf
divb
sbb
mov
aaa
hlt
pop
sbb
rcrl
mov
ja
sbb
mov
jae
rcrl
mov
ja
and
test
es
stos
data16
clc
lret
cltd
mov
sub
inc
dec
add
mov
pop
gs
sub
insl
test
ret
adc
push
push
fucomi
sahf
stos
mov
ret
negb
or
in
lret
leave
mov
clc
fcompl
movsb
push
push
jno
pop
clc
popf
jno
stos
mov
enter
add
loopne
xor
jo
cmp
test
jmp
pop
popf
mov
testl
mov
cmp
mov
lret
icebp
pop
rcr
dec
scas
fisubrl
fcomi
js
xorl
in
out
loopne
cs
xor
imul
mov
fists
add
andb
mov
gs
inc
inc
mov
stc
lahf
test
inc
lods
push
mov
mov
dec
cmp
test
sub
jmp
js
lea
lahf
mov
incb
adc
repnz
rcl
orl
cmp
jnp
mov
orl
lcall
push
nop
pop
out
xchg
xor
sarl
outsl
mov
fadds
orb
mov
scas
dec
cmp
pusha
sub
sbb
xchg
mov
jae
or
pop
adc
or
and
fcmove
int3
int3
or
mov
dec
inc
mov
sbb
jb
and
jo
mov
shlb
mov
out
or
or
in
and
idivl
outsb
fdiv
fsubp
mov
push
out
push
adc
loope
int
das
cmpsl
adc
js
add
inc
dec
sub
out
xchg
les
ja
sarl
je
mov
mov
outsl
rolb
leave
inc
cmp
imul
lea
popa
pop
loope
sbb
sbb
sbb
mov
std
push
pop
mov
dec
push
das
pushf
jl
lcall
pop
inc
and
push
or
rolb
jo
cmp
inc
sub
inc
xchg
xor
adc
mov
adc
inc
icebp
pusha
adcl
test
fwait
lock
sub
sub
or
cmpsl
cmp
jmp
mov
or
stos
mov
les
pop
pusha
adc
xor
push
aad
pop
add
lock
push
mov
outsb
lock
pop
sbb
test
jo
pop
les
test
jge
push
or
and
in
sub
lret
xor
sarl
dec
mov
push
jecxz
out
adc
adc
popa
jbe
sahf
lods
jb
leave
ds
into
clc
pop
sub
out
repz
push
or
inc
in
pop
add
call
cs
and
adc
mov
mov
jno
in
stos
fidivl
ret
xor
lcall
insb
inc
in
jg
lds
sahf
inc
mov
push
daa
movsl
ljmp
fcmovne
scas
adc
sbb
imulb
mov
filds
and
insb
sbb
cmp
into
repnz
and
mov
repnz
mov
pop
int3
sbb
repz
jno
out
ret
adc
jo
add
into
push
and
loopne
mov
mov
jns
in
in
cmpsb
jge
lcall
int3
sub
cmc
arpl
jle
andb
ljmp
and
rcl
mov
ja
pop
into
int
adcb
cmpb
enter
out
push
loop
stos
mov
sub
cltd
and
dec
sub
gs
jle
sub
pop
imul
mov
iret
jns
nop
cmp
loope
xor
mov
imul
cmc
or
cmpsb
lret
cmp
or
jbe
cmp
or
stos
shlb
push
cmp
imul
das
loope
push
jg
icebp
dec
and
les
xchg
enter
sbb
test
xchg
jmp
pop
and
scas
push
in
pushf
movsl
mov
subl
fidivl
lock
xchg
xor
push
into
sub
jb
jbe
leave
lcall
sub
xchg
and
add
jbe
idiv
mov
lock
addb
lods
rorl
xor
pop
mov
mov
sub
cmp
mov
in
dec
xchg
mov
mov
repz
dec
loop
cmpsl
pop
xor
mov
js
dec
mov
sahf
add
hlt
pop
fstps
push
imul
sub
pop
andb
test
push
dec
gs
mov
jecxz
sbb
pop
loop
adc
cld
aad
pusha
push
mov
adc
or
lods
or
mov
dec
popa
xchg
mov
les
in
shrb
dec
out
sub
mov
mov
shll
cwtl
or
cltd
shll
clc
inc
inc
push
and
lret
or
inc
xchg
les
inc
inc
jae
pop
or
in
movsb
mov
jge
adc
mov
sbb
and
sub
imul
std
insl
pushf
mov
dec
fs
mov
pushf
and
cld
sbb
adc
fwait
lods
jo
mov
xchg
and
mov
addl
idivl
popa
fadd
adc
mov
mov
test
mov
pop
lcall
scas
ss
jb
ljmp
popa
xchg
imul
sbb
lods
xorl
mov
and
in
lock
jg
mov
jns
lock
lock
adc
jmp
adc
push
dec
repz
push
rcrb
sbb
fs
shlb
jge
sbb
dec
stos
movd
push
in
mov
test
pop
clc
in
mov
daa
sub
mov
in
lock
in
pop
arpl
mov
jns
fwait
lods
iret
clc
outsl
cmp
stc
adc
lea
xchg
cwtl
insl
mov
and
and
inc
cmc
xchg
sbb
dec
cmp
jecxz
xlat
dec
push
inc
clc
add
mov
inc
sub
in
or
add
jo
cmc
push
ja
pop
mov
popf
imul
mov
sbb
pop
inc
hlt
movsb
cmp
pop
push
pop
pop
mov
out
out
mov
xor
mov
xchg
andl
push
mov
pop
or
outsb
mov
out
test
in
int
or
add
sbb
fdivrl
cmp
aad
push
cwtl
pop
nop
xchg
lock
lahf
mov
xor
mov
das
imul
stos
bound
push
fisubs
cmp
cmp
fistpll
jecxz
rcll
mov
or
jne
into
lods
dec
sbb
outsb
fadd
xor
push
out
pop
cmp
test
mov
jne
push
push
or
cld
and
out
lods
sub
repnz
xlat
in
js
sub
push
inc
xchg
sti
jno
or
les
dec
xchg
add
adc
lcall
call
mulb
mov
fcoms
jns
or
lret
pushf
cmp
xor
lahf
movsl
out
lcall
or
xor
xor
sub
fwait
imul
push
push
xor
test
out
pop
push
mov
xlat
nop
or
push
imul
sbb
imulb
shr
out
inc
cltd
pop
lods
sub
adc
push
xor
and
or
ret
scas
shl
stos
pop
lock
call
pop
fcmovnbe
popf
mov
mov
js
addr16
cmp
rcll
test
call
pop
cmpsl
jns
fimuls
mov
jbe
sbb
cltd
cmp
adc
daa
loope
fnsave
jnp
fimull
inc
pop
lock
and
dec
sbb
xchg
xchg
adc
jle
sbb
adc
cmp
loop
push
rcrl
dec
push
je
adc
xorb
sub
jae
sub
fidivrs
cmpsb
mov
cmp
adc
inc
jge
pop
and
mov
scas
jns
leave
enter
push
or
ret
pop
fldt
paddusb
xchg
in
mov
inc
jmp
cmp
out
lret
or
pop
repz
fbstp
push
dec
and
and
imul
test
fstl
or
lods
mov
iret
pop
push
jmp
lods
ret
xchg
js
bound
fdivrs
dec
xchg
in
adc
push
inc
scas
mov
loopne
push
test
fsts
and
outsb
and
add
push
clc
cmp
ljmp
pop
mov
lods
popa
sarb
mov
lahf
mov
pop
or
scas
sbb
ffreep
mov
jg
loopne
inc
idivl
pop
inc
mov
std
sbb
sbb
sbb
data16
les
shlb
out
mov
int
test
xchg
sbbl
jg
sahf
lds
fisttps
stos
lret
dec
addr16
jb,pt
fs
int3
cwtl
mov
dec
mov
push
pop
mov
inc
pop
test
xchg
push
sub
push
jp
sahf
enter
jge
stc
sahf
and
push
inc
outsb
movsl
jp
dec
mov
arpl
mov
int3
jp
add
lods
sbb
push
ret
or
dec
insb
neg
xchg
testl
into
jae
xchg
and
lds
ss
dec
xor
in
lret
inc
cwtl
outsb
scas
mov
or
shlb
fwait
and
or
dec
aaa
inc
jbe
add
hlt
aas
add
shlb
incl
mov
sbb
fidivl
pop
pop
cmpsl
cmp
sbb
cmpsl
mov
lds
mov
inc
in
push
scas
adc
in
mov
mov
sbb
mov
lret
pop
cmp
adc
mov
push
movsl
push
data16
cmp
bound
sbb
jle
mov
insl
xchg
xlat
hlt
aaa
fcomps
fistpl
cmp
pop
in
roll
shll
fwait
xchg
dec
ljmp
mov
pop
mov
lods
adc
popl
dec
mov
pop
pop
push
shl
lretw
ds
sbb
mov
pop
adc
xchg
ficompl
cwtl
adcl
dec
mov
mov
popa
and
jecxz
iret
outsl
andb
mov
cmp
loope
sarl
cmp
cmpsl
push
xchg
pop
dec
scas
and
pop
in
lods
pushf
sub
adc
dec
js
outsb
sbbb
inc
pop
pop
aaa
cmp
insb
push
dec
dec
sti
mov
mov
jo
sub
sub
std
add
dec
jmp
lret
ret
aam
setns
popf
ds
mov
lahf
mov
scas
jg
cmpsb
iret
mov
pop
insb
xor
or
outsb
mov
xor
mov
dec
stos
aaa
sti
fs
std
pop
adc
or
int3
jns
and
sub
xchg
fsts
lds
jne
loope
push
push
insb
mov
bound
inc
bound
rorb
out
loope
jnp
mov
or
das
leave
in
lahf
push
jmp
fisttps
jae
aam
sti
scas
test
aas
cmpsl
add
jbe
je
mov
mov
and
cpuid
mov
ss
inc
mov
sbb
imul
or
adc
push
mov
dec
iret
jns
sahf
movb
adc
mov
push
dec
int
mov
aas
roll
ja
mov
iret
inc
or
push
and
call
dec
repnz
adc
cld
adc
adc
push
lock
test
adc
stos
mov
pop
mov
inc
mov
cmp
imul
jnp
sbb
dec
fcmovnb
imul
xchg
sub
mov
fists
jo
add
push
inc
mov
cmp
in
outsl
f2xm1
sbb
fdivrp
hlt
push
adc
xchg
cld
sti
push
cmp
lret
imul
mov
push
cmp
arpl
in
adc
dec
jp
xchg
pop
xchg
xchg
sahf
xchg
jecxz
dec
inc
sub
aam
push
lea
ss
in
mov
push
enter
addr16
push
popl
ror
faddl
outsl
data16
insb
cmp
incb
out
int3
push
and
jno
mov
rorb
xor
push
movsl
cmp
mov
ja
rcrl
pushf
scas
inc
pop
insb
push
movsl
add
sbb
sbb
or
xorl
hlt
clc
sbb
cmc
fistl
jo
cmp
bswap
inc
pushf
lock
data16
dec
lods
sbb
aam
adc
mov
cld
sub
mov
cli
sar
int
lock
dec
cmp
sbb
scas
int3
dec
cmp
add
xor
inc
incb
push
stos
lcall
or
inc
push
pusha
gs
mov
mov
mov
cmpsb
inc
or
inc
inc
push
or
hlt
and
jp
aad
add
ret
push
adc
movsl
scas
mov
gs
adc
mov
xlat
lods
popa
mov
push
std
call
fnsave
push
rcrl
sbbb
pop
mov
fs
gs
push
mov
aad
jae
aaa
dec
inc
in
ret
nop
fisubl
adc
dec
int3
or
sti
mov
jb
fisubrl
fdivs
jne
and
fwait
leave
push
xlat
cmp
cs
fmul
fildll
cltd
adc
jp
push
pop
adc
fisttps
lds
ds
mov
adc
les
pop
push
dec
loopne
mov
or
mov
cmpsb
push
mov
pop
dec
mov
in
cmp
and
jne
neg
inc
mov
mov
test
or
sbb
push
inc
fbld
sbb
aas
mov
mov
imull
aam
xchg
scas
shr
lds
mov
add
xchg
dec
fxch
test
loop
inc
cmp
imul
shll
xchg
mov
loopne
add
xchg
je
sub
push
lret
cmp
add
fidivrs
inc
data16
adc
jecxz
sbb
cli
movsb
cmp
xchg
in
leave
mov
xor
aad
add
ret
dec
dec
push
jns
push
test
push
xorl
bound
imul
icebp
and
inc
test
mov
inc
jp
vmovsldup
testb
cmp
or
inc
ds
orb
and
xrelease
gs
mov
loopne
repz
dec
mov
sbb
mov
cs
xchg
movsl
shrb
inc
add
cmp
out
je
inc
cmp
xor
lds
cmp
sub
in
xchg
push
mov
inc
aad
fdivrs
imul
les
cmpsl
xor
cltd
test
add
mov
loop
adc
jno
lret
adcb
adc
pop
stc
je
out
incb
push
es
lret
fs
mov
fucom
cmc
stc
push
cli
insb
shrb
mov
aam
xor
xchg
into
push
cmpsb
inc
rcrb
push
daa
adc
into
pop
sub
push
fildl
leave
and
adc
in
dec
push
cwtl
mov
fldl
xchg
dec
pop
test
adc
fiaddl
dec
cld
bound
out
mov
sbb
fwait
jne
rolb
mov
push
ja
es
sub
dec
mov
and
int
sbb
dec
ret
in
aas
add
lcall
dec
xchg
stos
push
jae
std
popf
stc
push
mov
dec
mov
mov
sbb
cmp
inc
sub
jmp
movsl
fcompl
mov
push
push
addr16
ret
adc
sub
push
dec
jne
aad
scas
cmp
cmp
es
int3
ret
arpl
push
cmp
adc
sub
push
sahf
push
sbb
in
setns
mov
pop
xchg
xor
jns
jo
cmp
mov
shrb
imul
ret
imul
inc
add
js
jg
push
rcrb
jbe
dec
test
xlat
add
jnp
pop
stc
sub
in
mov
jae
test
sbb
gs
pushf
popa
fs
lret
lret
cmp
cmpsl
xchg
fisttpl
stos
jmp
loopne
mov
mov
or
cmpsl
scas
pop
mov
insl
test
cli
push
packuswb
lcall
cmp
data16
dec
and
push
sti
je
or
or
rol
pop
inc
mov
pop
mov
mov
ror
int3
inc
push
leave
sbb
cmp
xchg
fisttpll
popl
push
dec
xor
inc
sub
adc
mov
adc
fistl
lods
mov
sbb
repnz
test
and
pop
lods
jle
sub
xchg
xor
insl
and
mov
add
imul
jl
or
mov
cltd
sub
and
xchg
sub
fdivl
jno
shl
or
lock
rcr
add
lret
addl
xchg
js
sbb
divl
dec
push
fwait
mov
or
subl
mov
xor
add
cmp
out
pushf
or
rorl
cs
jge
lds
enter
add
sbb
in
movsb
add
sbb
imul
fisubl
xchg
cmp
dec
lahf
movb
std
in
js
loope
stos
pop
hlt
adcl
pop
cmp
sbb
jl
sub
and
cmp
mov
push
inc
mov
stos
jle
ja
xchg
aaa
imul
test
jne
testl
mov
mov
mov
nop
add
mov
pop
jbe
out
mov
pop
addb
insb
add
jmp
mov
xchg
push
mov
push
sbb
movsb
mov
out
and
mov
leave
out
dec
das
and
push
push
xchg
push
pushf
mov
lcall
xchg
int
imul
mov
cmpsb
test
pop
cwtl
xorb
jae
xchg
sbb
pop
adc
mov
lods
inc
aas
pop
mov
mov
mov
xchg
jecxz
out
in
jno
iret
sub
mov
push
mov
add
ja
inc
cmp
lahf
push
cld
mov
adcb
psubsw
pop
xchg
adc
lahf
scas
and
mov
test
pop
push
mov
lock
inc
adc
popa
and
mov
ficoml
add
add
cltd
mov
idivl
push
les
lret
jp
inc
jbe
pop
ror
test
add
adc
xchg
add
addr16
xlat
mov
pop
test
or
mov
jnp
inc
test
xor
mov
pop
jp
lds
jbe
ss
jbe
mov
jo
cmp
or
out
shll
arpl
lods
dec
cltd
ret
imul
add
or
adcl
mov
mov
sbb
addb
shrl
lcall
push
lods
scas
aas
iret
mov
sub
aas
shr
xor
imul
sbb
pop
jg
js
push
nop
mov
rcl
pop
dec
jl
in
insl
int3
ret
repz
sub
dec
push
imul
sahf
subps
or
xor
mov
or
psubb
cmpsb
jne
push
outsl
gs
or
xchg
and
jp
cs
addr16
imul
bound
fstpl
dec
mov
loopne
data16
inc
pop
jne
dec
mov
push
add
xchg
scas
rcrb
out
add
mov
out
clc
adc
stos
dec
jnp
pop
mov
mov
mov
jnp
mov
bound
out
push
push
fdivrp
test
pop
adc
hlt
add
dec
inc
add
push
outsb
add
dec
sbb
stc
push
fidivs
and
mov
mov
addl
ret
push
idivb
sub
push
xor
lods
fstps
xchg
iret
sub
dec
daa
or
mov
notb
push
and
adc
in
loope
add
sub
icebp
dec
rcrb
push
jns
push
loope
xchg
nop
jae
aas
cmp
lcall
sub
mov
ljmp
divl
xchg
xchg
mov
nop
jns
fstpt
js
jbe
ret
mov
xchg
lea
pop
stos
or
mov
rorb
mov
aas
daa
cmpsb
lret
lahf
jo
iret
mov
mov
pop
insl
pop
ljmp
inc
push
loop
rolb
cmpsl
out
dec
scas
jmp
fcmovbe
fcomp
and
xchg
imul
movsl
dec
mov
cmpsb
dec
adc
aaa
out
nop
in
mov
dec
shrb
xchg
push
outsl
jne
insb
add
mov
movsl
pop
push
jp
push
repz
loop
push
jb
ss
fldenv
pop
and
mov
mov
and
out
lret
mov
shrl
mov
punpckhwd
or
shl
push
push
jnp
mov
pop
jmp
int
push
adc
sub
xor
push
out
call
repnz
jg
pop
scas
or
mov
lods
out
fsubl
dec
xchg
pop
xor
sbb
cld
outsb
mul
bound
add
stos
fwait
mov
adc
les
xor
repz
xchg
fdivs
loopne
fwait
pop
mov
mov
and
dec
jg
out
sub
scas
xchg
dec
xchg
repnz
out
loop,pt
insl
out
ja
popf
dec
cmp
cwtl
jecxz
pop
loope
and
jecxz
push
mov
insb
je
cmpsl
int
call
test
ret
push
aas
pop
cmpsb
cltd
sbb
sahf
pop
mov
inc
xor
and
xor
ds
jns
sub
ljmp
popl
ds
push
sahf
loop
lcall
inc
daa
in
add
jno
je
sti
imul
jecxz
sub
test
jae
sub
js
cmp
or
mov
push
jmp
mov
mov
imull
or
scas
lahf
push
lret
cli
hlt
lods
adc
jns
or
add
dec
push
sub
pop
dec
dec
pushf
imul
stc
shll
jge
in
in
imul
mov
or
mov
sub
ret
inc
popa
into
sbb
adc
jge
jae
add
dec
lods
mov
testl
dec
ds
inc
cmpsb
jl
mov
dec
sub
orl
fucom
cmp
lods
mov
inc
addr16
push
rclb
out
ljmp
and
inc
lods
and
std
frstor
loop
fldcw
bound
into
jge
cmp
xchg
je
shlb
repz
push
js
add
vaddsd
ret
imul
lahf
pop
mov
push
xor
setne
pop
mov
push
push
jp
or
daa
lret
mov
mov
or
mov
ss
sub
push
sbb
pop
sbb
lret
nop
out
inc
inc
cmpsl
mov
int3
mov
sti
dec
shll
arpl
pushf
movsb
mov
loope
cmp
xor
push
sbb
jle
add
push
repz
int3
and
mov
push
lret
sub
dec
add
shrl
sbb
lods
in
mov
nop
push
sub
ret
pop
adc
scas
sub
sub
cmp
pop
push
loopne
xchg
and
scas
shr
lds
insb
sub
push
sub
xchg
and
jg
push
mov
cwtl
sbb
push
sbb
jecxz
js
cmp
icebp
dec
outsl
imul
outsb
push
arpl
dec
repz
jno
adc
mov
ret
pop
subb
lods
jge
iret
mov
add
ss
popa
xchg
lcall
inc
mov
adc
sbb
or
imul
rorb
dec
mov
std
cld
sbb
push
sti
push
je
lock
ds
sub
sub
cmp
pop
or
mov
or
push
in
cmp
mov
mov
cmpsl
jne
mov
pop
or
mov
xor
pop
imul
jl
cmp
dec
movsl
lret
mov
xor
add
in
ss
rorb
and
sbb
push
ja
xor
jecxz
push
pmulhw
cmp
aad
dec
jg
pop
es
stc
cwtl
cmp
movsl
cld
test
fsubrl
xchg
aad
stc
lahf
sub
das
sahf
mov
and
pusha
imul
jo
mov
aas
add
pop
sub
divl
ja
sub
push
sbb
push
lcall
into
dec
outsl
into
andl
add
loope
dec
lock
lcall
das
adc
mov
popa
nop
sub
test
pushf
out
add
inc
sub
push
cltd
pop
xor
es
adc
mov
cmpsl
scas
jp
sub
adc
dec
fldcw
dec
dec
jecxz
jl
iret
std
mov
mov
aaa
repz
hlt
sub
cmp
fldcw
cmp
push
out
icebp
mov
sub
mov
outsl
and
je
aad
push
repz
inc
sub
xchg
sub
adc
mov
push
mov
or
mov
inc
sub
push
xchg
xor
cmpsb
jne
adc
jmp
shrb
insb
add
dec
mov
outsb
test
cmp
ja
dec
adc
mov
inc
faddl
icebp
fisubs
push
cltd
pop
push
xchg
push
push
inc
adc
dec
gs
shll
and
scas
pop
jge
jno
out
rolb
imul
sub
xchg
adc
das
mov
js
inc
fmull
mov
push
push
lret
cmc
pop
mov
mov
xchg
adc
test
fsubrl
and
mov
pop
das
rorb
mov
stos
dec
rolb
lcall
inc
hlt
mov
enter
dec
jge
mov
jo
jl
inc
rcl
dec
sub
push
push
aam
and
cmpsl
push
sbb
clc
dec
xchg
icebp
sub
andb
addr16
in
inc
rolb
ret
sub
sbb
rcl
push
repz
lods
es
leave
loopne
rcrb
fucomi
shrb
in
sub
add
add
mov
adcb
call
cmp
pop
jle
sbb
scas
pop
push
ljmp
push
push
sbb
or
stc
in
les
and
outsb
xor
add
or
pop
sub
popa
and
int3
call
clc
xlat
pushf
clc
fsubp
inc
pushf
sbb
das
xor
es
sti
dec
insb
int
getsec
xchg
dec
sub
mov
cmp
popa
xchg
fstpt
aad
mov
inc
jb
loope
mov
jae
aaa
scas
and
jg
sub
inc
mov
out
fwait
and
mov
iret
sbb
shrb
out
xlat
xchg
or
cltd
daa
cmpsl
cmc
es
aas
aas
push
pop
popa
cmp
jge
mov
adc
and
lods
outsb
mov
fwait
sarb
xorb
mov
sub
push
bound
or
shrd
mov
xor
pop
aas
rcr
sidtl
pusha
inc
aam
cmp
cmc
mov
mov
stc
aaa
mov
scas
pushf
lods
jns
push
sbb
fisubrl
repnz
xchg
out
sbb
repnz
cmp
lahf
cwtl
dec
repz
xchg
xor
insl
push
jnp
push
push
lock
pop
test
nop
or
jns
bound
xor
cmp
or
neg
pop
roll
push
js
ret
sub
xor
mov
sub
ss
jns
cmpb
rcrb
bound
add
xchg
push
rsqrtps
lods
inc
out
ss
bound
add
inc
loope
in
jl
xchg
cmc
int
lock
adc
lods
dec
lahf
scas
rcl
lods
push
aas
adc
push
jbe
and
mov
mov
xor
pop
sti
mov
jecxz
pop
pop
or
inc
inc
ficoml
outsb
inc
hlt
bound
fcom
add
jae
inc
jmp
aad
adc
add
adc
dec
sahf
sub
or
sbb
ret
fisubs
pop
sub
mov
or
movsb
rorl
adc
add
sbbb
jg
mov
pushf
jbe
fdivrs
dec
repz
mov
inc
xchg
add
mov
dec
pop
scas
int3
sub
pop
pop
dec
dec
sub
sbb
or
ret
inc
push
adc
adc
adc
and
jmp
pop
sub
dec
cld
jp
sbb
jo
rcrb
pushf
imul
mov
push
fcoms
add
mov
call
or
sbb
rcrb
mov
fmuls
sbb
in
leave
das
push
test
add
test
out
adc
and
jae
or
inc
cmp
lahf
bound
sub
daa
shr
shlb
pop
mov
repnz
js
fmull
iret
dec
xchg
mov
cld
push
fs
mov
sbb
cmp
xchg
cmp
pop
jnp
and
pushw
aas
xor
mov
test
clc
mov
outsb
lret
jb
daa
subl
test
pop
jge
pop
lret
movsl
xchg
in
add
sbb
stc
sub
testb
repnz
mov
pop
push
pop
popa
testl
notl
xor
rorl
ds
leave
shlb
in
jmp
ficoml
in
inc
cmp
pop
adc
out
movsb
sub
inc
add
inc
movsb
push
jmp
or
stos
into
lret
es
in
add
pop
ja
sbb
pop
mov
imul
iret
sub
rclb
popa
enter
pop
or
push
xor
jno
and
inc
imul
lcall
mov
and
jp
leave
push
pop
xchg
xchg
add
adc
ficompl
mov
popa
ss
aam
or
insl
jecxz
sbb
jo
scas
cmpsl
inc
xchg
jle
push
iret
in
lret
ret
cmp
cmc
cmp
inc
dec
push
and
or
push
xchg
je
mov
jecxz
or
pushf
jns
jg
xor
mov
jns
or
xor
gs
xor
insb
sbb
mov
pop
cmp
repnz
and
mov
mov
repnz
mov
jge
jge
pop
mov
in
shr
pop
push
xchg
jns
push
and
test
scas
mov
loopne
cmp
or
ja
cmp
test
data16
cmpsb
mov
data16
movsb
pop
jno
aas
cmp
mov
push
jge
mov
and
pop
ret
mov
lock
jnp
fmuls
xchg
lahf
rorb
imull
xchg
cmp
and
lret
xchg
out
inc
cmp
cmpsl
bound
inc
fucom
pop
inc
imull
lret
adc
sbb
sbb
adc
loope
add
sbb
test
ja
in
xor
jne
sarl
sub
or
xchg
sbb
and
repz
jnp
pop
xchg
popa
mov
lahf
adc
jbe
popa
loopne
mov
jmp
add
stos
sbb
dec
sub
mov
pop
ret
dec
inc
push
adc
mov
std
ljmp
inc
iret
movsl
jns
repz
cld
in
inc
arpl
push
jge
lret
cmp
arpl
or
popf
loope
xor
ficomps
adc
jmp
bound
daa
fisubl
insl
mov
dec
jmp
cmp
outsl
mov
ret
out
and
insl
jg
stc
pop
push
es
mov
push
psadbw
stos
daa
pop
cltd
pop
ror
push
clc
or
push
loop
sub
sub
das
add
jnp
inc
test
aad
jns
jne
shll
mov
jecxz
jae
adc
push
mov
fs
sub
out
jle
cltd
loope
pop
stos
cli
dec
or
imul
mov
mov
movsl
push
inc
clc
int3
sbb
xchg
jecxz
inc
push
mov
lcall
insb
repz
adc
adc
xchg
lods
inc
sbb
xchg
rorl
or
mov
xchg
lret
iret
bnd
xchg
xchg
and
jae
mov
stc
cmp
mov
and
arpl
inc
jnp
inc
xchg
test
mov
jbe
mov
hlt
cmpsl
data16
adc
dec
mov
pop
mov
inc
jp
test
popf
mov
jle
jg
mov
mov
outsb
jo
lret
aam
les
mov
adc
xor
sub
mov
mov
movsl
stos
xchg
add
dec
add
pop
in
insb
jno
add
jns
pusha
mov
repz
divl
ljmp
out
hlt
out
test
adc
mov
aaa
mov
pop
add
mov
fcompl
icebp
les
leave
xor
notl
jbe
rol
sbb
out
sub
call
pop
andb
jmp
add
jne
notb
test
lea
scas
jmp
orb
dec
dec
push
dec
cmp
aad
inc
mov
or
mov
push
scas
int3
inc
scas
xor
push
es
push
fwait
jge
fsub
and
push
pusha
loop
add
pop
mov
mov
fdivrs
pop
mov
pop
dec
test
lods
and
pop
sub
icebp
out
push
mov
negl
cmp
scas
call
adc
mov
mov
push
xlat
insb
jns
sub
shrl
and
cmc
dec
cld
arpl
inc
jecxz
pop
jnp
int
aaa
cmc
inc
cmp
subb
jmp
fimuls
jns
mov
xchg
jnp
mov
pusha
aam
jle
mov
popa
cmp
add
push
mov
lock
in
clc
shlb
mov
lcall
push
enter
push
out
dec
cwtl
xchg
pop
cmp
mov
rorb
cld
sbb
icebp
cmpsb
rorl
andb
fistpll
aad
dec
cli
mov
repnz
icebp
test
fwait
add
ret
ret
dec
and
sbb
out
std
pop
adc
add
jb
pop
aam
test
cmp
shll
fidivs
mov
mov
sahf
xchg
rcrb
push
mov
dec
cmp
and
inc
push
jmp
lcall
sub
movsl
add
imulb
cmp
rcrb
mov
aad
or
dec
pushf
push
cli
sbb
xchg
inc
dec
cmp
xchg
lcall
adc
and
bound
dec
mov
pop
js
mov
xlat
shrl
dec
cmp
leave
stos
cli
jecxz
sbb
or
sub
sbb
jl
adc
adc
rolb
jnp
sbb
aad
jg,pn
ja
fdivrs
daa
mov
jmp
sbb
cmc
aaa
inc
mov
add
pop
push
pop
cmp
imul
outsl
lcall
out
dec
lret
popa
repz
or
lock
push
mov
push
jo
sti
inc
mov
xchg
into
mov
mov
xchg
ja
fidivl
mov
jnp
jae
out
mov
mov
shrb
cmc
cmpsb
or
xchg
mov
mov
ja
mov
dec
adc
mov
sub
idivb
cmp
xlat
es
sbb
stos
sbb
pop
shlb
mov
push
lcall
fcomip
jge
jo
js
jle
ret
mov
sbb
gs
subl
or
push
sets
test
and
cli
cmp
inc
mov
ja
add
fbstp
inc
insl
popa
stc
xchg
daa
pop
add
aam
pop
das
xlat
stc
movsl
enter
into
push
iret
xor
in
adc
pop
popf
shlb
adc
mov
dec
jne
jne
rcrb
mov
fcompl
xorb
fmuls
orb
lock
mov
in
aam
lods
pop
sub
je
xchg
mov
out
in
into
mov
mov
les
ss
dec
stos
les
in
popa
fildll
jmp
jns
movsl
je
pushf
leave
ret
adcb
dec
mov
test
leave
std
push
sbb
pop
mov
pushf
pop
pop
stc
aaa
cmpsl
imul
test
cwtl
pop
sub
aaa
fdivrs
xor
shlb
mov
aaa
inc
sub
push
inc
mov
cmc
sub
adc
mov
in
sbb
movsl
inc
jecxz
movsl
jge
sti
mov
cmp
sub
xlat
es
insl
add
daa
add
mov
lret
fstps
lcall
repz
xor
pop
and
scas
stos
pushf
les
testb
pop
push
jne
rorb
dec
cli
call
int
pop
mov
dec
push
loopne
xchg
mov
push
out
imull
dec
and
mov
sub
dec
push
call
sar
fs
mov
cmp
push
push
popa
clc
push
xor
cmpsl
sbb
movsb
mov
inc
lods
add
and
pop
cmp
idiv
sbb
test
adc
loope
bndldx
ret
cmp
or
pushl
andl
cmpsl
hlt
push
sub
aas
outsb
push
clc
into
aaa
xchg
dec
adc
mov
sbb
cmp
in
xchg
mov
inc
out
and
out
pop
ret
bound
das
jnp
clc
mov
daa
jne
push
and
jne
or
aaa
xchg
or
aad
cmc
loope
or
jle
or
les
jnp
out
inc
cmp
sbb
adc
sbb
cmpsb
imull
in
xchg
popa
cmc
and
add
xor
pop
sbb
call
incb
sub
xchg
pop
inc
cmp
push
loop
pushl
loope
insb
push
cmpsl
bound
fildl
aas
rcr
push
cmp
inc
mov
xor
adc
mov
jl
outsl
mov
lahf
lret
jbe
call
in
imul
push
movsl
and
repz
ffree
shld
pop
push
cmp
movsb
mov
sbb
jns
fisubrs
lea
adc
xor
int
loopne
push
inc
mov
mov
and
ret
lcall
xlat
fstps
test
add
add
or
inc
shll
jmp
in
pop
sbb
pop
dec
dec
xchg
fs
xor
push
leave
mov
subb
sbb
dec
sub
jmp
test
cmp
ja
enter
fdivrs
pandn
ljmp
shlb
pop
shll
fs
icebp
int3
push
or
pop
push
inc
mov
xor
lds
jno
xchg
clc
push
push
pop
test
xor
ja
sbb
insb
and
xchg
and
rclb
mov
outsl
iret
aad
subb
xor
push
jmp
and
sbb
adc
aad
in
fmulp
cs
or
pop
xor
xchg
mov
or
mov
js
jp
scas
pop
nop
mov
mov
popf
int
jl
xor
aam
cmp
and
scas
outsb
adcl
movsl
adc
mov
decb
shl
or
jne
mov
loopne
jle
test
push
ss
mov
inc
jmp
xorb
repz
xchg
std
jnp
dec
push
cmc
psraw
pop
xchg
lret
les
cmc
repz
xor
mov
sub
loopne
call
repnz
cli
xor
fs
mulb
dec
stc
xchg
ss
leave
aaa
outsb
lret
mov
aam
xchg
jle
jno
sub
test
loop
xor
scas
xor
push
adc
or
push
or
rolw
xlat
xchg
and
cmp
push
das
cmp
lods
or
out
push
inc
sbb
add
cmpsl
popa
mov
aam
incl
jns
sub
out
movsb
xor
in
mov
js
scas
and
fs
mov
jno
jmp
xlat
les
cli
repz
lcall
adc
fbstp
pop
test
clc
mov
sahf
jle
mov
sub
push
lahf
das
pop
movsb
ljmp
enter
sahf
or
ucomiss
ret
leave
cli
lret
daa
xchg
sub
rolb
pop
jecxz
out
in
cmp
in
hlt
sahf
adc
xchg
bound
gs
fwait
addb
das
jl
inc
xchg
push
cmpsl
jno
int3
add
fldcw
adcb
std
mov
je
into
push
adc
iret
mov
dec
mov
loop
xchg
lods
insl
mov
rclb
pop
addb
mov
pop
jmp
pusha
out
sub
push
mov
jg
scas
pop
ret
jecxz
lock
popf
stos
push
lods
push
cmp
hlt
rcrl
jp
xlat
lcall
adc
cltd
sbbb
enter
fisttps
rolb
dec
lcall
and
sub
out
mov
dec
movsl
cmp
stc
push
xchg
inc
out
xchg
lods
popf
dec
dec
fsubrl
lods
fwait
sbb
inc
push
pop
cli
cmp
movsb
and
fidivs
xor
popf
jmp
adc
scas
add
enter
mov
fwait
int3
jecxz
dec
sbb
imul
aad
fwait
mov
push
aam
lcall
jne
and
adc
test
fwait
lret
inc
test
stc
out
inc
push
mov
sbb
push
xchg
jecxz
sub
mov
cmp
mov
push
std
arpl
mov
fidivrs
mov
ja
iret
fldenv
pop
dec
movsl
lret
xchg
in
rorb
sub
ds
xchg
push
test
or
mov
ror
push
xchg
out
cmp
sahf
aad
or
loop
mov
jcxz
adc
lods
dec
clc
imulb
inc
aam
add
adc
rorl
mov
aaa
or
xchg
xor
xor
shll
icebp
lods
dec
insb
push
ljmp
jne
icebp
inc
es
scas
cmpsl
adc
mov
inc
std
sub
daa
adc
je
inc
rcll
push
jne
les
xor
mov
clc
nop
int3
cwtl
scas
jbe
les
es
pop
add
xor
out
in
mov
xchg
jecxz
lods
mov
mov
hlt
pop
cwtl
js
push
mov
sbb
lods
sbb
sbb
push
cmp
mov
jmp
mov
sub
mov
arpl
icebp
xchg
fisubrs
cltd
pusha
dec
lret
imul
orl
decl
andb
push
iret
fs
cmpb
movsl
dec
jne
xchg
call
inc
lret
xor
sbb
mov
fnsave
jne
loop
and
add
je
loopne
fwait
jl
sub
or
je
adc
dec
push
dec
push
jns
lods
idivb
es
sub
iret
int
adc
adc
test
ja
and
mov
cmp
jecxz
js
test
mov
sarb
ljmp
jne
ss
pop
incb
dec
or
mov
pop
mov
fsubr
repz
xor
sbbb
mov
out
jp
push
rcrb
cltd
cli
loop
inc
pop
iret
push
movsb
aad
cwtl
dec
pslld
mov
cmp
mov
and
leave
loopne
cs
cmp
push
ss
daa
push
ja
cmp
add
or
cmpsb
xor
mov
add
mov
fwait
jbe
cltd
push
mov
int3
mov
xchg
filds
lahf
sbb
mov
ftst
jg
push
xchg
and
adc
int3
mov
xchg
in
xor
push
adc
mov
mov
popl
cwtl
cmp
in
es
andb
push
xchg
arpl
out
jle
outsb
cli
bound
int3
jge
popa
pop
lahf
push
mov
dec
inc
jne
mov
pushl
pop
icebp
or
outsb
test
and
fwait
sti
xor
mov
add
cli
cmpsb
push
jle
jae
mov
pop
int3
cmp
popa
mov
cmp
sub
cmpsl
hlt
outsl
dec
cmp
adc
nop
lret
popf
and
sahf
jnp
cltd
jmp
repnz
cmp
stos
mov
pusha
xchg
loop
aas
repz
xor
jns
pop
test
pop
sbbb
xor
ss
std
push
push
int3
pop
addr16
push
adc
fldt
jbe
jmp
pop
push
js
idiv
pop
xchg
movsl
cmp
je
push
int3
push
inc
add
fadds
xor
mov
test
mov
icebp
pushf
fdivs
sarb
dec
loope
lcall
xchg
xchg
mov
sub
cli
or
adc
fs
lds
into
jo
inc
jo
inc
inc
js
xchg
leave
out
xlat
jb
aas
shll
les
movsl
cltd
ljmp
int
xor
dec
std
pop
arpl
add
adc
rorl
xchg
movsl
scas
scas
popa
inc
xchg
repnz
orb
pop
inc
fistps
test
xor
and
xlat
dec
das
mov
dec
xor
adc
jb
jle
test
xor
adc
aam
push
mov
or
test
notb
ljmp
out
ss
sbb
dec
cwtl
sbbl
push
add
lret
ss
cmp
std
out
xchg
popa
outsb
adc
mov
or
push
outsl
cs
fistl
cmpsb
ret
mov
jp
add
mov
push
inc
mov
scas
sub
push
xlat
pinsrw
dec
cmp
fidivrs
or
notb
orl
inc
cmpb
pop
and
fidivs
loop
mov
jle
mov
leave
adc
popf
add
add
xor
and
in
inc
ja
lahf
insl
dec
and
jecxz,pn
loope
mov
mov
lea
mov
add
push
cmp
dec
mov
sbb
imul
mov
in
sub
arpl
push
adc
mov
inc
popf
or
add
fs
mov
jmp
inc
sbb
divl
cmp
push
lahf
loop
mov
sub
xchg
pop
clc
pop
dec
jnp
push
data16
outsl
inc
xchg
popa
jns
cmp
ljmp
mov
sbb
popf
adc
sbb
popa
inc
or
xor
mov
dec
push
shrb
add
shrl
mov
push
cli
xchg
jg
xchg
fmul
xchg
test
hlt
es
xchg
jle
jne
js
lcall
pop
cmp
es
jnp
dec
jo
sub
in
pop
gs
aaa
int3
jnp
mov
iret
jae
mov
pop
fdivl
xchg
mov
mov
int
lret
and
cmp
daa
dec
js
les
push
dec
and
adc
jo
mov
movsb
jmp
and
cwtl
lea
sbb
dec
mov
cmp
fsubrp
mov
int
sbb
adc
mov
test
fwait
fwait
mov
mov
nop
or
sbb
cmp
out
out
push
hlt
stos
fadds
mov
push
xor
in
pop
or
add
jmp
pop
adc
lret
adc
lret
cmp
adc
clc
mov
and
push
push
and
std
popa
sub
push
add
fcmove
cmp
adc
mov
adc
into
mov
jcxz
push
aam
mov
mov
pop
pop
xor
dec
sbb
in
cli
pop
inc
add
lret
inc
cmp
dec
mov
pop
xchg
mov
in
pop
clc
mov
sarb
out
aad
jnp
lret
add
sar
or
and
mov
ficomps
sbb
sbb
cmp
daa
add
or
xor
negb
adc
xchg
mov
enter
dec
jl
ja
lods
mov
in
or
mov
fidivrs
imul
rolb
lahf
adc
test
into
adc
stos
mov
fldl
pop
jmp
sub
dec
mov
adc
xchg
mov
insl
mov
stos
cmpsb
mov
cltd
scas
push
lods
in
inc
pop
out
test
xchg
jl
aaa
icebp
mull
or
negb
aam
xchg
sub
lods
pushl
pop
push
push
ret
mov
div
sahf
sbb
test
sbb
push
cs
mov
ficomps
push
sahf
pop
enter
stc
pop
notl
adc
sbb
cli
xor
adc
sub
xchg
jmp
xchg
das
inc
inc
pop
daa
sti
push
and
mov
test
lret
adc
pop
leave
popa
shlb
ffree
popa
fsts
fnsave
add
nop
addb
and
xchg
cmp
inc
or
ja
repnz
ss
repnz
and
lods
mov
ret
adc
jae
enter
outsl
sub
sub
jo
out
lods
andl
test
xchg
mov
adc
mov
in
jmp
loope
dec
testb
push
pushf
xchg
pop
shrb
fcoml
xchg
pop
scas
int
lock
cmp
xchg
cmp
sub
movsb
xchg
insl
je
lcall
inc
xchg
cmpsl
jmp
js
push
xchg
in
pushf
cmp
fdivl
lret
sbb
dec
subb
sbb
push
push
mov
xchg
mov
pop
xchg
pop
repz
and
iret
push
clc
mov
movsb
mov
inc
mov
out
add
add
cmp
pop
int
addr16
lcall
jne
xchg
mov
adc
lods
shll
je
mov
scas
sbb
outsb
sti
inc
lahf
pop
xchg
jmp
xchg
jmp
push
int3
inc
xchg
fwait
or
mov
movsl
iret
sbb
hlt
jo
cmp
add
lds
pop
pop
ficompl
cmp
scas
mov
mov
leave
adc
inc
mov
addb
leave
xor
push
sbb
andl
jmp
dec
stos
js
je
xor
pop
repnz
out
mov
inc
mov
mov
das
pop
fldl
arpl
outsl
stc
push
mov
flds
or
rorl
in
cmp
out
lret
cltd
lahf
daa
addl
test
sbb
and
inc
test
mov
stos
in
pop
pop
mov
fistps
push
dec
out
mov
mov
and
fcoml
pop
aas
imul
adc
sti
jecxz
lds
xchg
ljmp
addr16
sub
fstps
mov
jns
ja
ds
fnsave
cmpsb
in
inc
test
stos
loope
bound
int3
xchg
stos
pushf
push
sub
int3
push
dec
jecxz,pn
mov
into
stc
or
cwtl
mov
js
mov
inc
jns
adc
push
push
enter
nop
lret
lock
adc
aam
movsl
lds
jo
jmp
cli
and
arpl
push
outsl
adc
lret
dec
daa
sub
bound
outsb
push
inc
adc
mov
cmc
xchg
popa
or
push
dec
mov
mov
xchg
in
push
or
cmp
test
mov
pop
xor
test
or
pop
mov
jns
sub
sbb
sbb
stos
ret
adc
sbb
cmp
popf
mov
imul
movsl
movsb
cld
cli
mov
subb
repz
fcomp
ret
jmp
ret
mov
ficompl
inc
std
sbb
and
rcrb
stos
cmp
mov
jnp
bound
or
cmp
js
out
shld
test
out
add
lret
xchg
mov
inc
cwtl
das
ret
adc
aam
or
in
lret
sarl
jns
stos
mov
cld
cmp
xchg
imul
or
cmpsl
inc
push
in
dec
fstl
movsb
jmp
add
add
movsl
cmp
mov
mov
scas
sbb
push
mov
xor
cld
sbb
pop
lods
push
inc
dec
rolb
xlat
data16
mov
adc
hlt
cs
decl
das
insl
aas
jmp
bound
clc
cwtl
std
dec
rcll
mov
mov
xchg
inc
sarb
loope
sahf
inc
jnp
fdiv
rcrl
or
sbb
das
xchg
les
or
clc
cmp
sti
addr16
stc
xchg
mov
icebp
in
and
jecxz
lds
aad
sbb
insl
jbe
add
sbb
adc
rorb
enter
arpl
dec
cmp
xchg
mov
jg
mov
xor
repnz
push
jo
icebp
nop
outsl
hlt
enter
adc
popa
sub
insl
inc
adc
dec
rcpps
test
lea
jae
mov
jg
jne
fadd
jmp
in
adc
mov
xchg
mov
push
in
jg
mov
repz
xor
xor
xchg
inc
mov
shll
jecxz
ficoms
add
popa
bound
cmp
xor
in
pop
mov
inc
lea
mov
add
cld
popa
inc
aad
sbb
test
fisttpl
sbb
xlat
test
xchg
mov
aam
mov
sub
sbb
movl
mov
cld
shll
dec
or
or
cli
das
movsl
jo
fisttpl
pushf
jns
mov
lret
add
mov
sbb
jmp
push
mov
lods
add
add
push
jge
insb
sub
scas
or
cmpsb
jge
test
jo
push
xorb
decb
mov
cmp
mov
and
and
jle
and
push
jecxz
push
and
jmp
fcmovu
fistpll
mov
cmpsb
xchg
push
inc
out
mov
push
mov
cmpsb
adc
and
add
rcr
mov
pop
push
jno
dec
popf
repz
and
adc
lea
mov
in
mov
je
pop
mov
mov
in
pop
jp
jg
lock
add
dec
mov
insb
scas
mov
push
bound
jae
jge
pop
sbb
or
or
cltd
movsl
jae
pop
movsb
rclb
xor
mov
gs
das
add
imul
rorl
mov
imul
outsb
lods
cmp
pop
stos
lret
in
mov
add
ds
sub
xor
mov
add
mov
pop
clc
push
inc
call
daa
scas
repz
shrb
daa
je
sub
push
aam
cwtl
repnz
mov
dec
xchg
addr16
shlb
je
cmp
dec
sub
jo
inc
call
sub
fldenv
cltd
hlt
lock
xchg
imul
mov
in
inc
scas
add
in
sar
mov
mov
pushf
lods
aas
cmp
jno
push
adc
nop
mov
icebp
cmp
dec
push
jl
incw
div
fsub
iret
loope
dec
ficomps
push
insb
add
xor
add
divb
jle
test
mov
inc
jno
insb
movsl
dec
aaa
mov
push
and
lcall
popa
xchg
in
pop
subb
stos
repz
shl
mov
mov
stos
jnp
sub
pop
andb
bound
out
stc
fsubrl
sbb
aad
insb
mov
sbbl
jge
clc
inc
bound
mov
mov
sarl
scas
mov
or
sbb
shlb
and
push
mov
cmp
movsb
std
pop
lea
das
xchg
test
adc
xchg
or
dec
xor
cmp
stc
test
addr16
mov
fisttpll
mov
pushf
orl
mov
out
mov
bound
movsb
icebp
leave
mov
mov
mov
loop
xor
dec
loopne
adc
dec
sbb
imul
jbe
and
push
pop
popa
push
repnz
jge
inc
imul
shrb
mov
in
lds
aaa
inc
in
xor
enter
inc
in
add
inc
mov
movsb
cmpsl
insb
cmpsl
xchg
dec
sahf
jne
mov
jmp
sbb
int
push
xchg
sbb
outsl
xchg
outsb
movsb
xchg
xchg
and
sub
sbb
mov
add
aaa
jae
sbb
fstl
pop
cs
cmp
stc
incl
out
or
shrl
mov
les
mov
rorl
mov
push
and
lods
mov
push
popf
sub
jg
mov
sbb
and
stc
mov
repnz
cmpsl
cli
lret
cmp
sbbl
nop
fcoml
cmpsb
push
pop
adc
sub
push
jo
ss
stc
orb
imul
sub
push
mov
int3
dec
add
aam
xchg
push
rorb
cld
shlb
das
jmp
pusha
xchg
jg
subb
mov
enter
adcb
ljmp
cmp
clc
in
pusha
jle
orl
adc
sub
das
xchg
fnstsw
pop
ret
icebp
ja
mov
scas
adc
dec
jl
cmp
fnstcw
rcll
xchg
xlat
lcall
jecxz,pt
fiadds
mov
repz
decl
pop
and
jb
add
bound
test
mov
daa
or
jge
mov
stc
push
fwait
or
pop
pop
cmpsl
or
dec
adc
cli
test
adc
je
cltd
dec
add
in
ljmp
sub
cmpsb
hlt
rolb
mov
xchg
sar
mov
push
inc
leave
xor
push
adc
in
mov
lods
and
and
mov
xor
or
xor
repz
push
loope
xchg
pop
gs
call
mov
xchg
push
cltd
mov
call
fiadds
test
icebp
aad
sub
add
fimuls
insb
int
push
sub
pop
mov
aas
mov
pushf
dec
addr16
xor
dec
xchg
not
lods
push
cmp
inc
adc
jbe
adc
fstpt
leave
jl
add
xchg
inc
xor
jbe
lds
adc
add
xchg
mov
or
xor
mov
or
outsb
shrl
int
iret
cmp
in
or
es
lods
sti
cmc
mov
mov
cmp
pop
out
jns
leave
inc
push
inc
push
or
outsl
jae
xorl
rcrl
nop
jno
and
ds
imul
or
sbb
mov
movsl
int3
adc
and
adc
mulb
mov
mov
lret
out
fdivrl
out
adc
int
out
into
xor
sub
push
shr
mov
packuswb
push
cmp
imul
pop
sbb
adc
xchg
mov
push
push
xor
jnp
dec
lea
daa
andl
in
lock
lldt
fucomp
push
push
aam
or
je
fnstenv
xchg
clc
aad
out
scas
stc
push
jmp
rcr
je
push
sbb
je
andb
gs
jo
mov
push
inc
iret
cwtl
xor
sub
push
or
inc
cmp
mov
and
repz
push
shl
sbb
mov
mov
outsb
xchg
in
dec
cmp
inc
mov
leave
movsb
mov
sbb
fmul
jae
aas
int
adc
mov
xorl
shlb
mov
in
and
and
iret
jle
fildl
adc
push
jecxz
sub
mov
pop
dec
lods
pop
and
push
mov
sbb
sbb
outsb
inc
out
mov
ja
xchg
subl
lcall
lret
in
imul
push
pushf
add
scas
in
je
sbbl
mov
loopne
xchg
rorb
sti
test
or
sub
in
mov
cmc
clc
adc
mov
mov
xlat
paddusb
mov
lret
inc
push
lcall
xchg
cwtl
push
sub
sub
cmpsb
orl
lods
aad
loope
sbb
xor
sbb
xorb
movsl
loope
clc
dec
sub
cltd
and
ja
scas
daa
leave
jmp
mov
stos
movsb
jmp
adc
sub
xor
add
adc
les
dec
scas
xchg
shll
push
insl
xchg
pop
xor
hlt
rcrl
rcr
loope
mov
push
cli
popf
mov
pop
xchg
mov
movsl
in
imul
jb
into
push
es
push
sub
jmp
iret
cmpsb
enter
fwait
jo
out
stos
clc
push
xor
sub
inc
sti
jl
mov
out
jo
test
push
push
loopne
jmp
ja
stc
xor
pop
mov
pop
mov
shll
jge
orl
int3
xchg
icebp
xchg
mov
fwait
shrb
aam
inc
pusha
xchg
sbb
pop
inc
pop
hlt
sub
lea
pop
pop
inc
pop
dec
push
sub
jae
mov
push
xchg
adc
mov
fcomi
orl
ljmp
test
in
addb
enter
inc
or
sbb
in
push
in
xchg
les
and
and
push
fistpl
pop
inc
jle
iret
xlat
jp
sbb
xor
mov
inc
in
fdivrl
mov
mov
inc
scas
popf
pop
inc
add
jle
mov
inc
cld
cmp
and
cmpsl
lock
hlt
mov
jae
or
and
inc
in
out
ja
pop
sbb
and
test
cmp
imul
dec
call
mov
rorb
movsl
sub
int
cltd
push
fucomip
push
cmp
ds
jb
test
add
aaa
and
pop
xor
sub
dec
sbb
out
orb
inc
xchg
mov
mov
adc
pop
lock
loopne
jle
mov
sub
imulb
dec
cmp
dec
adc
inc
mov
mov
or
lea
xchg
inc
and
dec
nop
cmp
push
addb
xchg
lock
lds
adcl
sbb
push
scas
mov
mov
pop
sbb
xchg
test
call
popa
adc
test
jge
imul
xchg
or
adc
cmp
lods
jns
gs
jnp
loope
lods
sub
mov
mov
push
fisubl
mov
dec
leave
dec
pop
fmuls
test
mov
cmpsl
lods
loope
insl
out
sbb
pop
cmpsb
outsl
cmpsb
lds
pusha
xchg
fisubrl
pusha
lea
jle
inc
movsbl
inc
or
push
shl
push
lret
cmc
or
iret
and
imul
es
jb
lods
or
jne
out
and
rcrl
repnz
mov
cltd
call
adc
cwtl
and
test
xchg
or
mov
sbb
je
push
push
xor
mov
repnz
dec
enter
cmp
push
xchg
cmpsl
es
push
jnp
xor
mov
stos
mov
sahf
push
testl
insb
mov
or
pop
jge
mov
dec
push
repz
stos
les
sub
popa
lods
in
cmp
jb
dec
inc
jg
sarl
call
mov
sub
dec
out
mov
jnp
data16
pop
call
std
lahf
or
dec
sbb
fwait
or
add
aam
ret
and
mov
dec
jno
dec
pop
incb
andl
add
jb
hlt
pop
add
aas
jp
mov
sbb
or
repz
mov
aam
pop
mov
arpl
jns
pushf
xchg
pusha
sbb
test
pop
cmp
mov
stc
testb
out
mov
push
push
call
or
lock
sbb
cld
shll
test
rdmsr
lahf
pusha
sub
fsub
imul
xchg
addr16
shl
adc
stc
mov
adc
or
pop
stos
bound
movsb
dec
push
int
sub
int
push
and
fidivl
ljmp
sub
inc
add
mov
inc
sbb
pop
aas
imul
daa
jns
in
xorl
pusha
xchg
push
or
mov
fistl
xor
dec
push
mov
mov
scas
hlt
or
pop
xorl
mov
xchg
jno
jge
fcompl
xlat
mov
movsl
fcomps
pop
ja
adc
ret
mov
outsl
jmp
fwait
sub
jecxz
in
and
xchg
mov
push
daa
mov
cs
into
lods
lcall
pop
xchg
mov
xor
cmp
stc
cmp
cmp
js
fidivrs
test
or
pusha
in
adc
mov
push
xor
mov
adc
mov
jne
out
movsb
nop
fsubrl
scas
sbb
add
loopne
mov
push
aaa
push
mov
inc
jg
dec
xchg
mov
daa
nop
test
dec
std
pop
les
and
stos
and
sub
jo
out
lock
lret
lahf
cmp
sbb
dec
stos
pop
add
scas
stos
xchg
fsubs
pop
jo
adc
fcmovnu
je
mov
in
and
repnz
xor
jp
mov
ss
ret
loopne
lret
stos
in
rcrl
push
pop
push
iret
pop
sbb
jns
or
shrl
or
sub
inc
mov
add
lock
pop
fwait
add
shll
adc
jne
pop
xor
add
gs
mov
dec
rorb
sbb
fnstenv
pop
inc
subb
sahf
add
push
in
pop
mov
cmp
out
iret
xor
loop
lret
imul
outsl
mov
sub
mov
mov
pop
jmp
loope
insl
sub
jo
pop
daa
inc
jmp
and
xchg
arpl
push
jle
adc
inc
mov
mov
inc
mov
loope
sbb
pop
xor
andb
pop
fisttps
ds
inc
repnz
aas
rcrl
inc
pop
cmp
sub
jb
sbb
push
jb
shll
push
es
xor
je
sbb
mov
adc
popf
jbe
das
and
cld
data16
pushf
xchg
shr
dec
ds
neg
xlat
nop
int
stos
pop
jge
mov
icebp
cwtl
pop
hlt
lss
cmp
sti
inc
insb
inc
imul
jge
enter
jno
add
outsl
aam
decl
mov
push
mov
std
or
add
data16
cltd
push
inc
mov
mov
and
jbe
imul
loopne
pop
repnz
dec
rcll
xlat
or
mov
mov
loope
push
and
stc
xlat
cltd
mov
pop
mov
inc
mov
stc
out
jne
push
xchg
sub
sarl
jl
cmp
movsb
or
sbb
cwtl
les
xlat
dec
inc
and
lock
jl
mov
lods
iret
and
sub
aam
test
ret
push
aad
or
mov
mov
cmp
push
push
out
mov
loope
mov
mov
adc
in
jae
popf
movsl
pop
lods
jg
and
fdiv
pop
leave
in
cld
sbb
in
inc
scas
add
rep
je
jg
mov
cmpsb
sub
stc
jo
mov
push
jnp
loop
push
push
xor
enter
cmp
icebp
mov
push
pop
popa
xor
sti
enter
rcr
daa
dec
adc
dec
xchg
nop
insl
bound
pop
mov
pop
int
int
lods
add
fisubs
mov
std
inc
mul
mov
imul
fwait
adc
es
jp
cwtl
stc
xchg
push
mov
ficompl
imul
movswl
repz
mov
mov
sbb
jle
iret
mov
dec
jae
or
stos
movsb
ret
push
dec
cmp
push
dec
fs
subl
xchg
loop
int3
cmpsl
pusha
dec
xchg
or
mov
mov
popf
movsl
dec
pop
cltd
clc
adc
push
ret
sahf
out
jle
js
jmp
pusha
sub
out
sub
aad
and
fnstenv
jne
mov
push
push
jge
loopne
test
dec
stos
pop
push
insl
inc
inc
mov
shll
push
mov
and
add
inc
or
cmpps
aad
mov
shlb
xchg
jg
jb
arpl
push
pop
pusha
mov
out
cli
jmp
cmp
mov
es
rorl
push
test
subl
push
int
mov
cmpsb
pushf
xchg
stc
in
sarl
leave
stos
in
daa
or
aad
mov
sub
data16
sbb
xchg
pop
int
and
and
repz
xor
jae
and
jbe
push
stc
cmp
sbb
call
cmp
into
mov
sub
add
dec
insl
fistps
jo
and
add
andb
mov
mov
ret
dec
or
aad
sbb
inc
js
jne
int3
xor
sub
xor
xchg
xor
and
mov
cmc
cmp
mull
sbb
jns
pop
xor
push
and
inc
clc
inc
push
jge
xor
repz
fisttpl
repnz
dec
icebp
or
in
scas
push
pop
add
jmp
jnp
inc
cmpl
pop
loop
dec
push
lds
sar
lods
outsb
xchg
ds
sub
pop
lcall
pop
aas
mov
ret
pop
ljmp
sbb
sbb
xchg
je
arpl
xor
mov
xchg
rorb
mov
jl
mov
pop
movsb
lahf
fisubrl
daa
cmp
push
cmpb
push
dec
shlb
sub
hlt
sahf
imul
xor
fstpt
dec
or
xchg
or
xchg
sub
cmp
mov
mov
xchg
xchg
push
enter
push
mov
xchg
push
cmpsb
dec
nop
dec
lock
push
lock
sub
add
popa
stos
pop
mov
mov
je
aad
sti
push
add
adc
dec
cld
test
xor
cmp
add
cmc
pop
pop
jmp
fnstcw
or
pop
xchg
sub
cmc
out
mov
jo
out
mov
lcall
daa
adcl
out
mov
push
nop
pop
addr16
gs
push
mov
sub
xor
pop
pop
adc
cmc
clc
mov
andb
jl
notrack
movsb
dec
fnsave
nop
popf
cmc
dec
pcmpeqb
das
push
nop
addl
push
push
xor
ret
inc
add
stos
js
xorb
insb
rcrb
mov
shlb
mov
xor
xchg
xor
mov
sbb
and
mov
fidivl
loope
push
cmpl
xlat
jle
mov
xchg
inc
adc
jno
dec
aam
xor
pop
xchg
adc
mov
push
sarl
std
out
mov
mov
sub
xor
push
hlt
jmp
push
mov
mov
cwtl
jae
imul
shll
idiv
xor
push
lods
std
push
dec
fcoms
cmp
mov
sbb
ljmp
inc
dec
dec
in
sub
inc
xor
call
lret
xchg
and
push
and
arpl
outsl
inc
mov
inc
pop
es
mov
imul
sbb
out
inc
sbb
pop
lods
and
cs
cmpsb
jae
sti
pop
or
inc
cmpl
ds
aad
pop
std
xlat
mov
sub
addr16
mov
jle
xor
adc
pop
pop
mov
and
xor
int3
test
dec
pop
cmp
lds
xor
mov
insb
mov
cwtl
in
inc
aaa
jno
push
rolb
out
inc
lock
push
stos
inc
and
loopne
push
xor
cmpsb
rcrb
add
inc
pop
loope
inc
add
in
or
insl
xor
push
jb
add
push
mov
push
insb
jle
inc
shl
pop
and
jae
push
lahf
mov
int
fisttpll
ficompl
push
mov
cli
xor
pop
and
repnz
cmpsb
sbb
dec
jmp
gs
loop
add
mov
imul
and
hlt
xchg
out
inc
xor
iret
cwtl
jg
call
push
sub
adc
test
cmpsb
push
pop
pop
loop
outsb
data16
sub
sti
ljmp
in
pop
jecxz
imul
idivb
fstps
imul
sub
push
rorb
mov
and
mov
mov
bound
xchg
jnp
jns
pop
xchg
pop
xchg
loope
leave
cmp
roll
pop
adc
push
test
sub
mov
ss
inc
mov
es
fcomi
ss
fcoml
pop
pop
or
notb
add
mov
mov
mov
bound
sbbb
rcrl
dec
cli
pop
rcrb
les
ja
push
pop
ja
sarb
out
jne
cli
sub
fyl2x
fwait
ret
icebp
inc
inc
lcall
push
mov
cmpsl
xchg
out
inc
shll
cltd
push
push
js
lea
insl
xchg
pop
enter
jl
push
adc
or
lret
andb
xchg
paddb
ret
and
jl
xchg
int
int
add
roll
addr16
mov
push
sub
cmp
filds
imul
in
or
jge
pop
or
test
sbb
inc
or
shrb
push
sub
xchg
jo
pop
mov
xor
xchg
cmpsl
fisttpl
jae
mov
jbe
mov
scas
mov
push
sub
shrl
sbbb
lcall
sahf
das
push
cmc
jmp
mov
insb
test
inc
fwait
add
jns
sub
xor
pushf
xchg
imul
cmpsl
sahf
imul
jnp
sbb
fldt
lret
cwtl
movsb
jmp
mov
neg
jno
add
clc
into
in
outsb
pop
jb
fisttpll
and
popf
add
xchg
test
dec
lret
cmc
sbb
and
out
or
adc
popf
outsb
fistps
test
inc
push
insb
and
repnz
cwtl
sbb
mov
cmp
int
aaa
sbb
out
mull
nop
mov
or
inc
insl
lcall
sarb
fcoms
add
stc
and
dec
xchg
js
xor
pop
scas
sti
add
pop
sub
rorb
pop
push
mov
lahf
jae
mov
add
adc
push
push
and
gs
divl
xlat
mov
test
add
sahf
aad
mov
mov
outsl
lods
movsb
enter
mov
out
aad
fisubrs
jo
ret
jge
js
cs
into
push
jo
sub
popf
lock
cmc
roll
jg
aad
aas
pusha
jno
les
jne
jb
and
push
lret
or
js
mov
inc
xchg
loopnew
ljmp
dec
push
dec
loope
dec
dec
push
bound
pop
mov
mov
out
dec
xchg
sub
lods
clc
pop
ficomps
or
xchg
mov
jbe
loope
mov
frstor
dec
iret
mov
dec
mov
rorl
xlat
imul
sbb
idivl
lods
sbb
fwait
sub
mov
cmp
test
into
or
sbb
jno
mov
test
add
arpl
xchg
loop
or
adc
adc
outsb
adc
hlt
gs
rcll
or
pop
insb
in
mov
pop
dec
sub
lods
sbb
jne
cmp
pop
std
pop
mov
movsb
mov
push
lea
jb
scas
and
fs
or
cmp
xchg
cmp
xchg
fldt
mov
cld
inc
xor
fidivrl
in
movsl
inc
stos
jmp
mov
jle
and
test
popa
add
xorb
cmpsl
cmc
jmp
dec
in
into
inc
js
push
add
mov
cwtl
ljmp
mov
repz
mov
and
out
rclb
or
sub
sub
cmp
sbb
call
xor
adc
jnp
cmc
stc
jbe
cmp
rep
pop
je
loopne
or
dec
mov
add
jg
and
out
ja
add
add
adc
mov
leave
aaa
dec
mov
orl
sbb
aas
xlat
testb
fiadds
mov
mov
daa
cltd
cli
inc
stc
push
mov
mov
xchg
mov
sbb
mov
fwait
stos
jl
scas
jecxz
lock
inc
pop
adc
adc
outsl
rep
iret
dec
inc
dec
inc
pop
push
rorl
popf
ss
sbb
add
cltd
xor
cmp
ret
or
stos
repz
push
cmp
dec
mov
or
pause
pusha
pusha
mov
and
mov
jne
test
les
cmp
sti
les
mov
mov
sub
test
call
dec
and
push
scas
adc
lret
dec
push
cmp
les
adc
mov
popf
pop
sbb
in
jl
pop
xor
aam
pop
sbb
loop
mov
scas
mov
dec
and
mov
mov
stos
ffree
mov
jp
push
xchg
fisubl
pop
pop
cmp
int
cmp
jno
bound
pop
jle
imul
inc
dec
fdivrl
push
xor
lods
jno
pop
inc
mov
fcoms
scas
ja
jle
mov
repnz
fsubr
dec
stos
cmp
lds
leave
in
ljmp
mov
pop
add
repnz
dec
inc
adc
jns
add
fisttpll
rcrb
shrb
fs
xor
jmp
scas
test
aam
mov
xor
xrelease
pop
sub
clc
jg
xchg
sbb
pop
adc
stos
pop
nop
lods
push
fcmovne
pop
push
mov
cmp
push
cmp
das
jle
inc
dec
mov
inc
or
shrl
fnstcw
mov
inc
sbb
subl
rclb
mov
xchg
mov
adc
inc
out
pop
jle
add
inc
jl
jnp
nop
mov
push
push
aaa
dec
fwait
dec
inc
les
add
mov
sub
fs
mov
test
xchg
jns
leave
adc
xor
repz
out
ror
shrb
pop
shl
and
sbb
dec
mov
mov
in
addr16
lods
inc
inc
sbb
or
jg
and
scas
js
iret
and
std
inc
mov
into
fisttpl
lcall
mov
mov
test
cmpsl
outsb
jae
mov
mov
movsl
and
cwtl
test
inc
orl
push
xor
sbb
xor
test
push
dec
mov
ret
cmp
fldenv
lods
mov
hlt
push
call
push
inc
aad
stos
cmp
xor
fnstcw
aad
xchg
inc
icebp
filds
fwait
and
scas
movsb
and
imul
inc
mov
scas
jl
pop
cwtl
or
cmpsb
and
mov
dec
jg
les
mov
lret
sub
insl
or
sub
cli
mov
xchg
sub
jo
fidivs
jo
hlt
ffreep
cmpsb
rolb
push
and
into
outsb
insb
pop
data16
mov
pusha
jmp
mov
shrb
sub
test
mov
fwait
or
cmc
or
int3
push
fsubs
mov
sbb
ud0
aam
pop
sub
jmp
mov
cs
psubusw
jp
fdivs
pop
pop
fs
cwtl
jl
sbb
add
pop
dec
lcall
sub
jp
repz
push
fidivs
push
inc
jge
mov
iret
push
xor
mov
push
mov
out
rorl
xchg
xor
jnp
movl
xor
aam
add
mov
mov
jl
aaa
fbstp
les
imul
adc
out
pop
mov
neg
sbb
adc
xor
mov
imul
xor
push
sti
cmp
adc
out
xchg
xor
scas
notl
push
mov
dec
enter
xor
fldt
cmc
xor
scas
adc
inc
dec
adc
push
push
add
clc
mov
arpl
repnz
cmp
xchg
push
xchg
mov
inc
push
adc
ffreep
and
xor
adc
popf
pop
jp
test
and
mov
mov
jbe
sbb
push
cmpsb
push
cmc
ret
sub
sub
test
jbe
mov
mov
fidivrs
xor
rcrl
mov
xor
sub
stc
pusha
sub
loop
jno
inc
outsb
push
mov
add
sub
loope
sub
jns
mov
addr16
jle
lcall
fwait
cs
pop
gs
pushf
push
arpl
mov
dec
icebp
punpckhbw
xor
mov
pusha
shl
inc
add
mov
and
hlt
sti
xor
into
lret
push
push
daa
add
cwtl
xchg
scas
sti
in
roll
xchg
sbb
inc
pop
xchg
mov
mov
mov
in
mov
push
pop
adc
dec
cmp
mov
iret
es
fnstenv
dec
ja
and
jns
test
cwtl
filds
shlb
decl
lret
out
sub
mov
push
pop
push
push
mov
jle
dec
mov
push
push
insl
cli
mov
jns
stc
lahf
jne,pt
dec
and
ret
leave
aas
xchg
int3
ret
fdiv
push
faddl
loope
lock
pop
fdivr
adc
inc
rcll
inc
into
ss
sub
push
mov
xchg
xlat
scas
shl
sub
push
mov
cltd
jns
pop
cmp
lcall
cmp
mov
inc
stos
lret
and
lock
adc
movsl
adc
add
stc
mov
aam
insl
les
mov
cmc
inc
mov
mov
ja
inc
iret
sahf
not
mov
stos
or
or
sbb
or
xor
and
pop
dec
mov
outsl
pop
mov
xchg
lods
xchg
lock
mov
nop
xchg
pop
jno
aam
ds
inc
ljmp
xor
mov
pop
mov
jle
or
jle
aam
mov
negb
xor
clc
sub
out
push
xchg
sbbl
popf
cld
inc
cmp
ja
add
or
test
fcompl
xchg
not
mov
add
xchg
out
sahf
jbe
fnstenv
push
fnsave
enter
icebp
mov
aaa
sbb
cmpl
out
int3
ja
repz
inc
and
mov
popa
sub
mov
fs
sub
mov
popa
nop
adc
adc
adc
push
push
or
imul
stc
dec
sub
test
pop
gs
movsl
out
insb
jl
icebp
shl
ljmp
stos
mov
cltd
dec
push
out
jae
pop
sti
jle
cmc
popf
cli
mov
push
outsb
hlt
dec
aam
and
mov
shrb
std
fcomp
inc
icebp
mov
lds
cmp
divb
aam
jmp
pop
cld
daa
and
popf
es
add
xor
mov
xchg
xlat
bnd
into
cmpsl
or
jns
mov
jbe
dec
sub
jo
push
lods
mov
scas
pop
add
ds
out
pop
rcll
inc
nop
cmp
jb
fistpl
add
adc
shll
movsb
dec
rorl
add
xor
push
int3
notb
push
das
or
imull
push
mov
clc
lods
sub
jns
xor
stos
xchg
mov
and
sarb
push
ret
scas
mov
inc
shlb
pop
pop
xchg
mov
mov
test
imul
sbb
dec
leave
push
sbb
dec
jae
push
repnz
or
cmp
push
iret
das
mov
lock
xor
push
mov
add
sub
jle
xchg
mov
out
mov
enter
mov
and
mov
inc
in
outsl
loopne
rcll
dec
das
xchg
push
ljmp
pop
mov
test
insl
pop
or
xchg
cmp
add
mov
jb
jmp
dec
jp
mulb
pop
xor
outsb
pop
je
clc
inc
xor
std
jl
frndint
aaa
push
inc
pusha
xor
sbb
movsl
dec
add
jle
adc
sbb
fsubr
ret
inc
xor
mov
scas
enter
push
cmp
js
jno
fdivrs
mov
leave
cld
xor
call
bound
icebp
or
pushf
dec
dec
dec
xchg
cmpsl
bound
dec
pop
inc
outsl
stos
ss
pop
test
mov
dec
push
xlat
mov
mov
outsb
jmp
ljmp
pop
sub
test
inc
popf
scas
inc
cmpsl
or
mov
jns
mov
and
xchg
nop
xchg
push
ret
enter
nop
mul
outsb
mov
xchg
hlt
and
iret
imul
lds
stos
ficomps
xchg
ficoms
xchg
imul
and
mov
imul
push
mov
mov
pop
dec
xchg
movsl
and
fiaddl
mov
pop
ds
cmpb
repz
dec
je
stos
adc
test
dec
xor
push
nop
inc
mov
lods
sub
pop
xchg
fwait
rorl
inc
dec
adc
nop
addr16
mov
lods
aam
mov
jbe
mov
test
sbb
adc
inc
test
int3
inc
jnp
repnz
add
dec
inc
sub
pop
push
mov
jbe
mov
fistpll
scas
push
adc
cmpsb
shlb
cwtl
push
popa
pop
loope
scas
repnz
movsl
leave
loop
adc
sbb
aas
jmp
fldt
jbe
cmpsb
fisubs
push
gs
mov
cmp
mov
mov
push
cmc
scas
das
pop
cvttps2pi
data16
fldcw
cmp
or
es
hlt
jmp
mov
cli
loop
xchg
inc
cmp
jmp
movsl
mov
lods
leave
sbb
and
ret
pop
lret
inc
lcall
jg
inc
rol
inc
cli
xchg
fwait
ljmp
push
popf
mov
jns
pop
and
add
pop
pop
movsb
sub
popf
adc
fisttpll
pop
push
dec
mov
mov
mov
mov
or
pop
mov
push
sub
in
push
mov
leave
xchg
inc
bts
mulb
mov
mov
pop
add
mov
jl
pop
iret
sub
stos
mov
sbb
clc
mov
push
mov
shll
movsb
imul
push
mov
xlat
jge
repz
shrb
inc
add
lods
out
xor
jg
cltd
mov
jne
into
inc
subb
pop
setns
mov
bound
or
mov
mov
mov
js
outsb
jg
fcmove
scas
sbb
aam
lock
dec
dec
add
fmuls
bnd
cmp
pusha
fdivs
dec
pusha
mov
dec
cmp
jmp
loop
xchg
mov
mov
mov
lock
cmp
push
push
mov
cmp
loope
into
cmp
xacquire
arpl
add
and
inc
cmp
insb
sbb
adc
popf
daa
aaa
gs
incb
outsl
xlat
lcall
cwtl
int3
mov
push
es
iret
push
icebp
daa
punpcklbw
mov
loopne
and
ss
cmp
fdivl
sbb
jne
mov
inc
xchg
xchg
or
lods
enter
adc
arpl
aam
adc
xor
adc
movsl
and
and
cmpsb
add
sbb
adc
outsb
scas
push
xor
fnstenv
push
sbb
mov
xorb
ss
mov
sahf
loope
mov
xchg
hlt
mov
add
mov
xor
sbb
push
xlat
inc
push
cmc
and
orl
in
out
enter
adc
cmpb
hlt
fwait
jo
pop
outsl
push
lods
push
jae
sbb
mov
movsl
push
out
sub
or
dec
lret
daa
mov
arpl
xor
sub
jnp
jecxz
sbb
cld
push
sbb
dec
lods
sbb
mov
xchg
subb
adc
sahf
pop
jmp
jbe
adc
js
pop
movsl
dec
dec
inc
cmp
popl
stos
inc
add
fldl
fcomip
jmp
fwait
or
scas
loopne
and
jmp
xchg
cmp
or
loope
int3
inc
push
test
lret
sti
call
or
cwtl
dec
jbe
or
movl
add
aam
test
ja
jne
xor
mov
jae
xor
repz
cmp
xchg
or
push
jnp
jp
lcall
jne
lea
cld
aad
adc
cli
shr
sbb
jp
mov
stos
insl
movsb
jg
and
xchg
add
cmp
xchg
sbb
inc
dec
cmp
jp
js
test
pop
lds
add
les
mov
mov
outsb
sbbl
jo
sub
mov
inc
cmpsb
mov
nop
add
cli
xchg
aad
lret
or
das
ljmp
or
push
dec
jne
adc
xchg
les
mov
sbb
and
daa
in
pop
inc
mov
fs
jae,pn
fs
or
mov
subb
lahf
push
fmuls
jg
push
insb
jge
jg
and
push
enter
loopne
mov
fcoml
leave
in
pop
pop
fsubs
scas
test
inc
pop
in
mov
popf
das
outsl
leave
fdivr
cmp
test
mov
ds
sbb
into
ja
mov
mov
xor
scas
mov
ljmp
push
xchg
xchg
cli
ja
fcmovbe
jno
aaa
dec
addr16
inc
roll
pop
lds
decb
js
shrl
mov
je
sarb
in
jmp
mov
jmp
lret
add
out
call
add
cwtl
cmp
test
js
sbbb
aaa
shl
loop
push
data16
cmpsl
lret
notl
scas
pop
jg
movsb
rcrl
cmp
and
inc
inc
mov
int3
pop
ja
fcoml
cld
inc
jb
push
sbb
aam
xor
adc
pop
xchg
fildll
rorl
inc
out
or
cmp
mov
scas
jbe
add
xor
xchg
rorl
je
and
mov
call
cli
cmp
and
rcll
call
lcall
push
sahf
xchg
icebp
in
sbb
mulb
dec
stc
aam
out
inc
sbb
jno
or
lahf
stc
add
cmc
in
xchg
insl
popa
aaa
mov
dec
push
cmp
and
fbstp
out
outsb
or
imul
daa
or
pop
mov
pop
add
pusha
mov
loop
cmp
and
gs
xor
iret
insl
fsubrl
outsb
dec
mov
jmp
shll
sbb
leave
jge
cmp
stos
and
inc
lods
fsts
out
dec
add
or
dec
sub
pop
inc
mov
arpl
into
cmp
push
imul
add
mov
cmpsb
aas
cld
fdivl
mov
cmp
add
iret
mov
stos
or
loope
inc
jo
cmp
mov
and
in
mov
xor
mov
push
mov
cmc
jb
arpl
scas
test
das
popf
xchg
es
add
pop
test
pop
sti
jns
or
and
jns
ja
push
inc
xor
push
outsl
lret
pop
push
icebp
pop
mov
jns
xlat
iret
subl
jge
jno
cltd
fisttps
insl
dec
cmpsl
je
fsubs
or
ret
subb
add
loope
fsubrs
and
mov
mov
pop
sub
mov
gs
adc
lods
fcompl
push
sbb
outsl
in
adc
fwait
inc
pop
aam
out
out
xor
xor
outsb
cmp
mov
dec
repz
sub
mov
mov
dec
mov
outsb
dec
push
jmp
push
repz
and
movl
dec
sub
xor
shrl
inc
es
cmp
or
and
fs
mov
mov
mov
decb
sbb
shlb
pop
movsb
in
adc
ljmp
or
pusha
jne
mov
stos
pushf
mov
es
dec
jecxz
orl
cmovo
xchg
xchg
xchg
inc
mov
mov
enter
inc
xor
negl
add
test
cmp
or
add
and
pop
bound
cltd
scas
mov
inc
inc
aas
ret
xor
or
scas
fwait
mov
push
test
jp
stc
jno
dec
adc
mov
jne
lds
mov
sub
sub
adc
shll
inc
inc
add
fwait
and
aad
jno,pn
into
or
cmc
jl
pop
movsb
jl
pop
jbe
loope
push
inc
inc
aad
les
adc
sbb
scas
mov
xor
add
fwait
xchg
sbb
and
add
add
cmc
enter
cpuid
add
xchg
mov
aaa
decb
cmp
push
jmp
test
mov
dec
int3
mov
dec
add
mov
sti
or
test
pop
movsb
repz
xchg
cmp
ffree
sub
test
mov
in
and
stc
push
es
ret
mov
mov
test
loopne
popf
pop
inc
popa
inc
mov
cs
xor
push
div
repz
call
repz
cmp
jae
mov
or
push
outsl
mov
cmp
dec
test
mov
in
fistpll
sti
and
xchg
jle
test
cltd
xchg
nop
adcb
adc
data16
out
sbb
in
icebp
mov
ds
cmp
pop
or
scas
call
jp
push
sbb
and
mov
nop
add
cmc
imul
mov
xchg
inc
cld
aas
dec
daa
clc
andl
xor
movsl
test
dec
inc
push
imul
std
hlt
lock
mov
add
daa
mov
push
scas
lahf
inc
adc
in
pop
lret
xor
xor
xchg
adc
ficomps
iret
mov
xchg
and
stos
stos
pop
stos
clc
add
dec
xor
ja
jmp
rcr
dec
test
pusha
sub
xor
and
rorl
fwait
mov
pop
add
ja
sbb
lret
testl
sub
sti
mov
aam
js
push
jmp
fsts
cmp
jns
int
out
out
rorl
sub
mov
sbb
dec
push
mov
mov
mov
ret
cmp
mov
xlat
das
scas
xchg
push
and
push
cmpsb
mov
add
sbb
jbe
adc
pusha
pop
sbb
int3
pop
inc
sahf
aas
push
sbb
push
push
pushf
loope
gs
mov
mov
push
jnp
test
in
sub
scas
jo
movsl
gs
jg
fcompl
ljmp
outsb
push
loopne
adc
xorb
xchg
scas
cs
jae
add
addr16
sub
jle
mov
jnp
lods
sahf
mov
sub
or
mov
or
sbb
andb
aam
sbb
and
mov
pop
scas
sbbl
xchg
sub
sbb
push
pop
aam
fdivrp
in
xchg
xor
clc
lds
lods
movsl
mov
in
jae
movsl
and
xchg
ret
mov
mov
cmpsb
cs
push
sti
cmp
loop
cmp
jno
xchg
xchg
pusha
mov
outsl
and
movsl
sahf
adc
idivb
popa
loope
loop
mov
jno
js
nop
cltd
push
sbb
mov
mov
fwait
movsl
xor
pop
daa
sub
cmp
lcall
xchg
lea
fwait
mov
push
fisubrs
dec
mov
jne
and
sub
gs
adc
ss
mov
gs
out
xor
mov
aam
sub
mov
pop
lret
out
push
leave
dec
repnz
add
or
js
scas
jb
sbb
rcrb
sub
inc
pop
stos
sbb
jp
fstpt
daa
lret
cwtl
lahf
cli
cwtl
ljmp
cmp
push
ret
adc
add
rorb
adcl
ljmp
xor
je
ss
push
sub
dec
daa
icebp
test
sbb
fdivs
xrelease
lods
data16
sbb
clc
push
dec
cltd
aad
imul
push
ljmp
dec
leave
push
pop
fmull
jno
mov
jp
aas
shlb
arpl
xlat
mov
mov
lcall
pop
hlt
int3
insb
fwait
inc
ss
daa
mov
sbb
enter
sti
dec
dec
in
aaa
pop
test
mov
lcall
ds
xor
je,pn
mov
out
out
push
repz
cmp
jl
add
pcmpeqd
sbb
mov
int
lret
pusha
sub
in
mov
testl
subb
push
arpl
mov
sbb
xchg
aad
push
enter
cld
jno
imul
adcb
and
xchg
arpl
adc
iret
and
or
or
add
pop
and
add
push
adc
adc
xor
jno
pop
add
mov
mov
pop
inc
xlat
popa
pop
push
jno
sbb
dec
lret
xchg
jge
xchg
dec
popl
popa
test
fnstenv
add
add
in
xor
sbb
gs
cs
imul
mov
mov
lss
popa
and
jge
pusha
out
ja
push
or
inc
mov
xor
leave
jno
aad
pop
push
outsl
adc
scas
movsb
test
inc
test
inc
push
dec
mov
xchg
js
pop
sahf
push
mov
stc
insb
push
test
cmpsb
ret
loop
mov
lods
push
mov
into
cmp
jb
popa
adcb
jecxz
int
cmc
mov
outsb
push
stc
sub
push
cwtl
insl
inc
lahf
inc
or
xor
popa
pop
or
in
sbb
add
hlt
stc
push
mov
ss
pop
in
jg
enter
adc
inc
or
imul
gs
aam
arpl
push
movsb
aad
arpl
and
mov
lds
xchg
xchg
jb
push
test
fdivrp
fmuls
stc
and
xor
ss
ds
enter
jl
out
imul
icebp
fadds
popa
dec
dec
fcoms
std
int
mov
sbb
inc
or
loopne
insb
sub
sbb
and
mov
mov
hlt
jb
shr
add
loope
xchg
lds
data16
dec
stc
mov
sbb
ficoms
testl
mov
int3
repnz
fwait
sti
mov
pop
pop
mov
out
mov
aam
jnp
jae
mov
shll
ret
insb
jmp
das
cld
ret
mov
in
rclb
mov
add
shll
sti
nop
lahf
sbb
test
inc
fsubrl
notl
aaa
inc
inc
int3
lret
test
mov
mov
xor
leave
sub
cld
push
push
ss
pop
mov
outsl
sbb
mov
inc
dec
add
sbb
or
jp
mov
cltd
inc
pop
pushf
or
std
xor
testl
xor
mov
or
or
jecxz
mov
aam
inc
adc
enter
xchg
lcall
xchg
pop
sbb
incb
push
dec
jnp
test
sar
xchg
dec
cmp
cmpsl
pop
mov
loopne
sahf
pusha
filds
push
pop
mov
arpl
xor
dec
ret
pop
jecxz
xchg
fisubl
sti
mov
lds
sbb
cmc
pop
push
lretw
or
mov
mov
andb
xchg
fcmovne
das
inc
mov
in
cltd
dec
add
shlb
cli
xor
mov
movsl
adc
ucomiss
sbb
or
push
xor
ljmp
js
scas
mov
push
mov
xor
xor
inc
fwait
std
push
cmpsb
ret
fistpll
add
movsl
sbb
sbb
fwait
leave
aam
jbe
or
mov
cwtl
nop
test
jne
xor
sub
lcall
shlb
scas
ja
enter
mov
mov
push
pop
add
push
in
lahf
mov
aas
dec
shl
mov
jmp
pop
cld
dec
rcl
out
inc
sti
movb
repnz
hlt
sbb
and
insl
jmp
test
mov
lahf
push
leave
sub
repnz
mov
pop
add
stos
es
pop
xor
jnp
sub
dec
mov
ret
dec
xchg
sub
mov
inc
xchg
mov
mov
push
inc
add
push
mov
loop
xchg
push
repz
jnp
loop
xlat
pop
cmp
lahf
out
push
push
loopne
stos
jno
and
pop
lods
push
mov
jno
pop
cli
and
xchg
adc
mov
xchg
out
adc
imul
sub
ret
lret
enter
xchg
out
popf
jns
repnz
mov
xchg
mov
mov
pop
mov
adc
out
sub
test
cs
pop
out
lods
xchg
jmp
pop
int
or
push
mov
fs
xchg
shll
and
pop
add
addr16
sub
or
adc
ja
add
orb
stos
sub
clc
bound
cmp
xchg
out
inc
out
cmc
pop
rorl
xchg
jo
repz
pushl
andb
push
loopne
push
mov
adc
dec
push
ljmp
sub
adc
xlat
js
mov
into
xchg
pop
shlb
cmc
adc
cmp
lcall
inc
shll
imul
cmp
sbbb
fdivrs
neg
lcall
dec
push
and
cmp
pop
xchg
in
jb
pop
jle
cmp
clc
dec
xlat
jbe
pop
cmpsb
or
outsl
xor
movsb
mov
dec
sub
xchg
daa
mov
lods
test
out
andps
inc
push
mov
cmp
pushf
addr16
fwait
stos
mov
jne
ja
sahf
xor
movsl
xchg
xor
in
insb
popa
outsb
mov
add
subl
jge
test
xor
xor
mov
pop
jne
pop
lret
sahf
nop
lds
ja
sbb
and
xchg
lods
sbb
inc
cltd
sbb
push
xlat
imul
mov
pop
pop
popf
outsl
adcl
arpl
imull
scas
push
insl
add
xchg
sub
and
xchg
out
inc
adc
gs
mov
popa
cmp
dec
or
sub
sbb
daa
push
and
sbb
call
fmulp
xor
adc
es
repz
cs
adc
daa
add
test
rclb
pushf
int
fmull
jge
insl
stc
cmpsl
outsb
aad
jae
fstl
pop
sti
imull
sbb
and
cmp
mov
mov
xor
push
sar
fwait
mov
mov
inc
xor
and
dec
out
sub
adc
or
data16
pop
inc
adc
pop
outsl
jge
pop
dec
push
jo
push
dec
inc
in
int3
xchg
sbb
ror
in
repz
fcmove
int3
call
xor
jle
fucomip
pop
cmpsb
test
dec
mov
push
cmp
pusha
rorb
shrb
ficoml
out
js
adc
data16
arpl
xor
popa
jno
add
aaa
fwait
mov
aas
cmp
add
xchg
cmp
fadds
push
xor
jnp
in
insl
int3
sbb
das
adc
push
in
push
loopne
dec
adc
dec
pop
movsb
loopne
pop
imul
outsb
jne
mov
mov
sub
jge
add
repnz
int
loop
testb
push
and
jne
fldl
addr16
bound
push
out
pop
test
adc
and
jnp
fstl
fnstsw
xor
lcall
repnz
or
test
mov
or
push
movsb
jle
cmpsb
stos
call
imul
out
les
pop
sub
add
push
lods
lahf
aam
test
inc
inc
xor
popa
bound
or
lods
ret
or
xchg
je
test
or
test
sub
sarl
sbb
cmpsl
jo
push
aad
jmp
cmp
pop
or
aad
stc
iret
xlat
dec
xchg
dec
cli
mov
mov
in
fildl
jbe
stos
loopne
and
xchg
in
shll
outsl
clc
pop
jmp
stos
dec
insb
test
popa
jae
cmp
or
and
ljmp
in
in
movsb
imul
cmpsl
mov
mov
xor
pop
xchg
jo
out
aam
nop
and
cmp
sahf
arpl
nop
adc
xchg
into
mov
or
xchg
push
jmp
push
xlat
mov
push
jae
cmp
inc
jle
pop
cmp
adc
xchg
push
test
sbb
xchg
mov
add
push
movsb
inc
dec
pop
mov
jnp
jle
cmp
ljmp
in
dec
aas
sbb
hlt
movsb
adc
repz
pop
lahf
pop
sub
and
sbb
lcall
addb
jl
mov
movsl
or
test
ljmp
imul
push
cltd
jb
sbb
lea
in
push
clc
fmull
in
adc
add
or
inc
inc
ljmp
inc
mov
and
mov
dec
imul
inc
or
stos
hlt
inc
dec
lock
ds
imul
push
jp
sti
sahf
jb
jmp
and
jno
mov
leave
nop
cld
andl
shrb
mov
into
rclb
shlb
inc
add
mov
js
inc
push
iret
inc
xor
into
or
push
lods
pop
mov
xor
and
fs
lcall
mov
fwait
inc
mov
inc
adc
call
xor
int3
mov
scas
cmpsb
push
repz
add
push
pusha
adc
jbe
arpl
stos
dec
sbb
roll
ret
xchg
mov
pop
lds
lahf
push
aad
call
stos
into
orl
lods
daa
jmp
xor
pop
xchg
mov
pop
xchg
icebp
sbb
push
lock
sbb
aaa
divb
add
push
orl
in
aad
xchg
cmp
por
add
bound
aam
in
ds
jl
scas
mov
fimull
ja
xor
xor
les
and
sub
repz
jns
adc
cli
cmp
xchg
push
aam
or
aad
xchg
ret
dec
mov
fwait
mov
out
out
movsl
sbb
les
cmc
std
iret
mov
push
sub
loop
cmc
sub
sub
icebp
repnz
and
push
push
pop
lret
xchg
inc
ror
adc
and
cmpsl
movsb
aad
dec
mov
inc
mov
xor
adc
jmp
pop
xor
movsb
out
xchg
cmp
dec
pop
stos
stos
mov
sbb
sbb
xchg
lods
dec
into
dec
insl
out
imul
lahf
sbb
adc
fadd
add
shll
je
dec
jo,pt
lods
jnp
imull
cmp
fs
lock
sub
data16
inc
sbb
mov
cmp
call
imul
aam
add
push
das
mov
add
call
xlat
jmp
and
leave
or
push
std
inc
imul
popa
sbb
int
movsl
inc
jns
in
lret
lahf
test
adc
mov
sbb
push
ja
sbb
cmc
ss
mov
add
in
mov
dec
rol
cmp
mov
pop
xchg
es
xchg
and
sbb
dec
popa
ja
mov
pop
pop
push
mov
jbe
push
lock
xor
xchg
cli
lock
jge
and
je
pop
lret
pop
dec
inc
insl
nop
jge
adc
inc
cmc
and
enter
or
leave
adc
inc
fldt
jb
push
mov
sahf
adc
mov
insl
mov
test
pop
sub
inc
cltd
sbb
xor
cmp
push
nop
sub
stc
dec
popa
cwtl
pop
shll
add
jecxz
cmp
add
pop
xor
in
pop
imul
add
jmp
hlt
dec
incb
cld
insb
mov
popf
fistpl
and
sbb
push
inc
push
aam
xchg
in
shll
xlat
push
xchg
inc
out
mov
dec
add
and
cmpl
or
dec
add
jae
sub
gs
and
pop
mov
rorl
fcmovnu
cwtl
pop
mov
nop
push
xor
pop
loop
fidivrl
popa
mov
xchg
and
aas
inc
push
repnz
mov
test
nop
fwait
clc
sbb
loope
add
mov
lret
cwtl
mov
cmp
and
fiadds
cs
loopne
fcmovnbe
aaa
mov
xchg
daa
dec
push
cmp
push
mov
int3
int
pop
mov
mov
push
xchg
in
out
rorb
jmp
adc
sub
mov
push
cld
pop
dec
sarl
push
movsl
pop
adc
cmp
dec
mov
inc
arpl
xchg
xlat
dec
add
pop
cmc
adc
jecxz
mov
lea
clc
out
rol
xlat
test
xlat
aad
rclb
mov
stc
ret
sub
pop
cli
js
sub
xchg
test
add
cmc
pop
dec
outsb
xor
dec
or
ret
popa
jp
icebp
jmp
nop
jg
dec
xchg
dec
push
mov
cltd
or
les
rcrb
pop
adc
cmp
xor
jno
adc
ror
aaa
out
dec
dec
sbb
add
arpl
fs
outsb
lret
pop
jbe
pop
jl
mov
inc
addr16
xchg
jnp
loop
push
push
out
or
popa
push
jns
scas
jle
nop
dec
pop
shlb
lret
push
lock
jbe
or
dec
mov
aas
fistl
fcomi
sub
outsb
pushf
pop
stc
insb
call
hlt
imul
repz
and
mov
nop
ficompl
fists
movsb
icebp
cmp
jp
pop
xorb
dec
xlat
jge
pop
add
in
pop
mov
push
push
movsl
mov
in
cltd
movb
cmp
xchg
inc
out
lock
sub
shll
shrb
cmp
adcb
adc
clc
jae
or
imul
scas
sub
inc
add
into
mov
mov
pop
sub
mov
xor
sub
pop
xor
xchg
and
insl
cmp
sbb
mov
addl
dec
pop
and
outsb
add
sbb
daa
add
and
sbb
sub
gs
pop
pop
stc
xchg
jp
inc
loop
and
sbb
test
inc
pop
arpl
sbb
add
out
push
sbb
rol
std
mov
sti
ds
mov
xchg
inc
sub
loopne
cmc
xor
adc
hlt
test
out
add
test
mov
xchg
inc
shrl
push
adc
jne
fldenv
push
stos
lcall
adc
lret
fsts
push
out
and
in
or
js
pmaxub
stos
xorb
pop
and
mov
sti
cwtl
insl
pop
rcr
push
fidivs
cmpb
cmp
sbb
or
jo
and
icebp
ret
inc
jecxz
lret
push
cmc
and
aas
pop
fidivrl
sbb
test
hlt
adc
pop
push
rep
dec
dec
in
sbb
cld
cmpsl
hlt
cli
cmp
aaa
pop
inc
cli
sarl
scas
lret
lods
sbb
inc
mov
lock
shld
inc
jmp
fwait
testb
jle
mulb
in
jg
ret
je
cmpsb
sub
or
test
mov
push
out
sbb
adc
mov
imulb
in
mov
in
arpl
out
pusha
mov
stos
jge
shlb
test
add
test
shlb
jbe
pushf
xchg
into
pop
xchg
mov
shl
int
stc
mov
sarl
stos
rol
test
call
loope
adc
jge
in
fistps
hlt
jmp
sarb
int3
push
jae
imul
dec
out
icebp
aam
pop
fidivrl
sbbl
fwait
sub
add
mov
mov
sub
jns
xor
jbe
lcall
pop
jnp
mov
fdiv
rorb
iret
mov
push
inc
int3
sub
ljmp
add
jne
and
arpl
cli
mov
out
xor
xor
fldl
cmc
addb
aas
sbb
mov
mov
sarb
inc
jb
inc
dec
push
cmp
nopl
mov
js
dec
pop
mov
addr16
std
pop
sbb
pop
imul
inc
insl
dec
jmp
jo
shll
mov
xchg
xor
je
push
mov
int
jp
loopew
inc
and
rcr
inc
cli
loopne
repz
ja
cmp
popl
or
gs
push
fs
xchg
push
nop
mov
into
pop
jns
lock
push
pop
push
cmpb
cmp
sub
mov
sub
pop
imul
mov
in
leave
jp
dec
arpl
push
aas
ret
cpuid
sbb
xchg
pop
jo
pop
shll
mov
cmpsb
pop
xchg
mov
lret
stos
inc
and
das
loop
xorb
inc
sahf
repz
jne
lcall
cmp
pushf
cmp
fadds
jne
cli
adc
hlt
push
sub
aas
into
decb
dec
loopne
outsl
cmp
jmp
inc
push
scas
or
pop
inc
xchg
cmp
add
sub
fnstcw
scas
lret
mov
outsb
dec
sub
push
add
aam
adc
sbb
pop
ds
dec
cmp
and
mov
jle
sub
movsl
mov
inc
imul
bound
sbb
pop
cmp
push
mov
out
das
push
sub
xor
cmpl
insl
data16
mov
push
das
daa
inc
inc
popf
leave
inc
aad
pop
ret
and
mov
or
sub
in
cmp
popa
enter
sub
mov
ret
sbb
scas
push
xchg
dec
das
inc
mov
inc
pop
in
mov
ljmp
pop
nop
and
mov
frstor
and
sbb
ss
test
mov
dec
pop
inc
bound
clc
pop
inc
stos
mov
pop
jmp
ss
or
out
push
sub
add
ljmp
sub
test
aad
sbb
push
out
jbe,pn
andb
fisubs
stc
sti
push
lods
lods
enter
add
mov
cmp
pop
test
bound
enter
mov
mov
test
lods
and
ficomps
inc
xor
xor
or
xchg
pop
fcmovb
pop
rorb
outsl
nop
shlb
jmp
mov
test
outsl
insl
dec
push
xor
dec
ret
adc
xchg
and
aas
or
into
fs
outsb
and
aam
push
inc
nop
mov
insl
push
inc
or
pusha
mov
lcall
mov
and
jecxz
jp
pop
or
addr16
cmp
lahf
mov
pop
aad
repz
dec
jne
jae
lock
xlat
cmp
cmc
test
es
jmp
sub
sub
mov
mov
aam
jns
mov
addr16
cmp
mov
dec
xor
arpl
lods
and
mov
lds
adc
int
popa
mov
daa
pop
pop
or
push
mov
cmpsb
mov
and
jmp
fs
inc
push
jns
jmp
mov
icebp
lret
add
pop
push
insl
xor
push
out
mov
mov
scas
adc
jae
cmovbe
push
lods
inc
xchg
fwait
test
loop
push
cwtl
sub
or
mov
fadds
push
mov
add
adc
roll
dec
jne
pop
into
mov
jnp
jae
stos
xorl
adc
movb
nop
repz
sub
jae
cli
xor
test
mov
mov
bound
out
fcmove
lahf
nop
js
lea
shll
mov
or
push
mov
xlat
hlt
fwait
mov
pop
push
adc
inc
dec
dec
std
fwait
nop
mov
fidivrl
out
cmp
add
mov
push
xchg
xchg
jle
ljmp
aas
dec
ds
dec
dec
cmp
rcr
sub
xlat
xchg
pop
stos
lock
lds
mov
insb
ret
out
gs
push
aaa
jb
sahf
lea
mov
add
mov
lret
xor
rol
cmp
sub
repz
popl
dec
movsb
adc
test
mov
adc
int3
inc
scas
cmpsl
test
jge
jo
je
movsl
mov
jle
sbbb
scas
test
add
xchg
sub
rclb
push
mov
sub
ds
adc
pusha
xor
loopne
sahf
loopne
ss
loope
iret
mov
sbb
cmp
test
je
movsl
addr16
xor
pop
push
sti
fs
mov
jns
loopne
xchg
lods
dec
inc
loopne
insb
mov
push
push
jmp
je
loope
push
mov
dec
xchg
in
adc
xchg
ret
hlt
push
or
adc
mov
xor
ds
mov
out
pop
pop
xchg
scas
push
gs
cmp
sub
adc
pop
cmp
push
and
cld
jnp
fisttpl
inc
inc
mov
sub
aam
mov
cld
sub
mov
hlt
std
adc
call
imul
ficompl
outsb
ss
push
pusha
pop
lret
xor
sub
push
enter
ret
push
mov
mov
cmp
or
ss
pop
dec
fmul
gs
movsb
or
daa
es
ja
popf
mov
movsl
push
mov
add
popa
pusha
pop
dec
int3
sbb
push
jle
out
jns
push
clc
hlt
popf
loop
fcomp
xlat
cmp
sarb
xlat
adc
cmc
inc
mov
pusha
mov
cmp
repnz
xchg
test
push
and
push
int3
mov
cmpsb
imul
ds
or
pop
pop
push
xchg
sbbl
mov
fdivs
cmp
push
and
mov
jl
cmpsl
shlb
pop
cmpsl
pushf
sbb
imul
jp
pop
xor
aaa
inc
stc
push
cwtl
pushf
loop
pop
lret
lahf
lods
test
pop
out
xchg
mov
in
outsb
dec
or
repz
popf
or
mov
push
dec
xor
add
or
addb
cwtl
adc
lret
add
pop
imul
fcmovnb
jg
stos
cmc
mov
and
inc
fwait
mov
ss
sbb
pop
push
ret
gs
arpl
ljmp
pop
mov
pop
loop
in
pop
mov
cs
push
mov
divb
xor
jle
fsubrp
sbb
imul
cmp
test
lea
loop
hlt
mov
dec
mov
lods
inc
sbb
aam
call
and
test
mov
cmp
lahf
out
xor
iret
inc
jp
pushf
dec
inc
sub
cld
orb
push
inc
mov
adc
push
test
mov
xlat
mov
xchg
jns
or
in
sbb
ffree
sbb
sbb
aaa
pop
mov
push
notb
mov
dec
sbb
cmp
push
push
xchg
jle
cmp
movsl
int3
mov
and
sbb
add
setnp
xor
mov
jb
sub
out
call
mov
fidivs
fwait
sub
out
adc
dec
lea
leave
popa
adc
inc
xchg
outsb
lock
and
mov
dec
push
push
and
jae
add
xor
xor
xchg
lds
dec
addb
add
dec
into
rol
and
xchg
scas
nop
imul
jae
push
pop
inc
movsb
out
add
cltd
int3
xlat
enter
jmp
stos
sub
aaa
sub
inc
pop
dec
cltd
push
in
dec
repz
dec
fcoms
fidivrl
fstpt
imul
sarb
roll
mov
test
or
adcw
xorb
test
sarl
in
and
push
cmpb
fstps
test
jno
outsl
dec
mov
mov
ljmp
aas
pop
mov
aam
inc
or
loop
ja
mov
mov
outsl
ret
pop
insl
adc
mov
scas
mov
fisubrs
cmc
mov
jbe
jns
adc
dec
leave
jne
jns
mov
cmp
gs
inc
ljmp
push
cld
fcoms
push
inc
test
js
mov
add
cs
mov
or
insl
fsubrs
sub
dec
fcoml
mov
xchg
xchg
sti
int
add
int3
push
daa
dec
mov
lret
mov
dec
movsl
xchg
mov
pop
jmp
nop
xchg
ficompl
and
push
pop
pop
and
xchg
fucomp
and
push
lret
adc
fistpl
dec
ja
decb
std
jns
imul
or
pop
dec
jl
xlat
mov
ret
and
or
xorb
rolb
lods
jmp
and
rorb
and
or
cltd
lret
cmpl
cmp
adc
cmp
or
mov
xchg
out
add
cmc
mov
lock
sub
outsb
addr16
cmp
pop
mov
mov
push
lahf
loope
xchg
in
push
jecxz
scas
dec
and
pusha
aas
in
jg
nop
mov
enter
mov
out
jbe
movsb
stos
push
or
int3
xor
mull
dec
add
inc
inc
mov
clc
jne
pop
or
mov
cmp
push
push
push
mov
mov
test
mov
nop
or
lret
lret
jg
and
lds
jns
lods
pusha
enter
xchg
mov
sbb
add
inc
stos
outsl
shrl
pop
and
push
gs
vaddsd
arpl
js
add
nop
dec
xchg
cmp
je
and
cmp
push
jmp
rcr
jns
int3
pusha
mov
inc
xorb
sti
cltd
push
incb
jp
and
inc
jecxz
mov
mov
fnstsw
fsts
lret
pusha
sub
lahf
cwtl
push
loopne
mov
jl
push
test
dec
lret
jne
shlb
scas
or
fadd
pop
hlt
adc
dec
loopne
out
xchg
lret
cmp
mov
cwtl
es
addl
loope
imul
pushf
add
lods
cs
ljmp
test
aaa
repnz
aas
lock
mov
push
mov
add
gs
inc
int3
mov
nop
add
out
sub
cmp
cmp
sub
inc
lret
cmc
lret
or
cld
movd
pop
test
call
lret
or
dec
pushf
pop
ds
mov
push
and
lret
push
sbb
mov
inc
cli
or
sub
std
dec
in
outsb
jl
sbb
lock
aam
nop
jbe
push
loope
aas
sub
jp
mov
sbb
cmp
orl
mov
pop
rcrl
push
int3
mov
insl
cmpsb
xchg
rorb
out
jmp
stos
stos
cmpsb
ret
add
cmc
or
xchg
and
mov
and
fadd
rcrl
pop
push
inc
loop
sub
mov
aam
cmp
xchg
cmp
mov
push
pop
loop
mov
mov
mov
ja
mov
scas
out
cli
ljmp
mov
repnz
mov
ss
dec
push
and
popa
pushf
pop
xchg
inc
cmc
or
scas
aad
es
jl
xor
adc
scas
mov
loop
add
adc
mov
aad
add
das
lahf
push
outsb
mov
les
jb
xchg
pop
pop
movsb
leave
sbbl
adc
xchg
nop
xchg
dec
dec
sbbl
nop
push
xchg
mov
cmp
mov
adc
xor
mov
cld
sbb
loope
cmp
or
out
popa
ficomps
cmpsl
dec
jmp
mov
into
sbb
out
jmp
ds
leave
enter
xor
shl
mov
orl
das
cmp
mov
lcall
mov
mov
add
cmp
dec
stc
add
outsl
pop
or
mov
add
out
cs
jge
mov
loopne
and
stc
add
in
bound
cmp
addr16
jg
push
int3
div
out
ds
pop
in
push
mov
sbb
scas
xchg
and
movsl
add
clc
sbb
jns
loopne
push
std
cmp
addr16
cs
outsb
xchg
add
mov
pop
mov
jp
rorb
sti
aam
repnz
pop
xor
addr16
add
xchg
fwait
cmpl
cmp
mov
in
inc
arpl
mov
pop
fwait
adc
test
imul
dec
ror
add
out
jmp
iret
shl
cli
jl
xchg
mov
nop
adc
test
out
adc
movlhps
hlt
jo,pn
xor
add
adc
fbld
lea
pop
inc
sbb
xchg
inc
xor
inc
cmp
xchg
test
jne
dec
or
jo
mov
nop
arpl
cmc
scas
in
add
and
loope
bound
loopne
adc
aad
sub
xchg
movsb
std
jp
jg
scas
loope
sbb
inc
jnp
mov
xchg
addl
inc
fcompl
mov
mov
dec
jp
jg
jp
and
movsl
jno
loop
cmc
sbb
sahf
gs
sahf
push
push
arpl
xor
das
lds
test
movsb
insb
rclb
mov
xchg
enter
dec
dec
test
jo
loopne
sub
lds
pop
repz
cmp
add
jnp
fcmove
test
push
lahf
fbld
lods
or
mov
pop
jecxz
clc
dec
les
jp
dec
sub
dec
mov
dec
and
cld
negl
mov
leave
iret
loop
mov
in
sub
out
or
or
jmp
insl
cmp
sahf
leave
scas
bnd
ljmp
mov
adc
cmp
scas
sub
add
cmp
jne
mov
push
dec
xchg
pop
cmp
aad
fisttps
xor
cmpsl
mov
sbb
pop
idivl
imul
dec
test
cwtl
mov
mov
cmpxchg
dec
mov
adc
inc
push
and
movsb
inc
mov
mov
xor
test
imul
mov
cmp
stos
inc
mov
add
or
in
ljmp
xchg
enter
jge
js
popl
nop
mov
and
subb
sbb
hlt
mov
push
cltd
aad
and
sbb
and
pop
sbb
mov
inc
and
pop
sbb
jb
fwait
int
mov
push
jmp
js
scas
jae
fs
inc
mov
bound
adcb
daa
mov
mov
pop
fisubrl
mov
sbb
iret
and
and
orb
shl
adc
mov
add
movsl
ret
sti
rcll
jb
cmpsb
negl
mov
scas
in
movsb
movsl
mov
std
push
lea
rcll
sub
movsb
std
cwtl
xor
sti
sti
cmp
lahf
test
imul
jg
xor
outsl
aad
xor
sbb
pop
in
pop
push
ret
add
or
shlb
jno
mov
insl
rcrl
push
mov
mov
pop
mov
mov
cli
cltd
cld
sub
mov
adcb
push
or
jle
ror
popf
dec
mov
ja
mov
cmp
repnz
iret
jmp
xchg
xchg
dec
and
adc
push
jo
stos
and
rcrb
sub
xchg
cmp
pop
pop
cltd
or
and
imul
jo
pop
iret
shll
cmp
sbb
sbb
lcall
ret
mov
daa
rclb
and
push
sub
iret
repnz
dec
test
aam
pop
mov
scas
sub
sbb
outsb
fdivr
lcall
adc
push
sub
sbb
add
subb
push
cmpsb
xor
rcrb
nop
lahf
mov
into
xchg
rol
cld
mov
ds
xorb
int3
cmp
jb
jae
sub
stc
in
ja
mov
fisubrl
or
adc
popf
add
mov
testl
shr
test
das
sub
xor
pop
sbb
mov
iret
or
ret
aad
inc
loopne
aam
loopne
jge
jp
imul
pushf
and
xchg
adc
es
ljmp
xor
les
jge
xchg
mov
scas
js
pop
add
jle
movups
xor
inc
mov
push
xor
in
and
adc
dec
mov
push
pusha
inc
sbbl
push
mov
jp
idivb
in
stc
call
fsts
ja
cmpsb
faddl
pop
and
jle
and
repnz
cmpsl
repz
repnz
fimull
jnp
fs
sub
and
outsl
mov
lcall
mov
or
sbb
xchg
movsb
mov
or
xor
outsl
adc
iret
jecxz
or
xchg
adc
inc
push
mov
xor
sbb
or
push
dec
push
test
cmp
es
sbb
pop
sub
mov
jle
mov
mov
jo
add
enter
inc
dec
pop
cmpsl
outsl
loopne
aaa
jno
loope
mull
mov
in
cmp
dec
xor
pop
in
fnsetpm(287
push
movsb
insl
sbb
daa
mov
nop
out
and
loop
xchg
pcmpeqb
add
xor
lods
inc
pop
ret
je
jb
fcmovne
sbb
xor
je
roll
not
mov
aad
cmpl
sbb
pop
cmc
scas
rep
cwtl
fnstsw
and
add
cs
adc
sti
jmp
pusha
jp
in
cmc
xor
jecxz
adc
push
ret
rclb
cmp
cmc
pop
popf
dec
jle
and
inc
lret
cmp
pushf
mov
dec
movsb
inc
sub
icebp
sbb
adc
inc
dec
inc
insl
ja
lea
dec
or
mov
clc
movsl
nop
sbb
mov
test
mov
cmp
xor
mov
mov
frstor
rcrl
js
dec
xchg
nop
shrl
cmp
arpl
sarl
cli
xchg
mov
add
mov
sub
lret
int
cmc
and
pop
les
push
cmovl
xchg
or
jne
pop
inc
adc
xchg
adc
outsb
out
and
loopne
add
lock
in
mov
nop
add
adc
movsl
enter
mov
lods
out
data16
and
lock
and
filds
movb
adc
push
or
inc
dec
inc
lods
xorl
clc
fcompl
in
insb
pop
inc
sbb
data16
fldl
test
inc
sarl
jmp
push
mov
mov
jae
pop
stos
jo
mov
push
mov
and
adc
dec
bnd
sub
lea
loop
cmpsb
hlt
sbb
pop
xchg
pop
sbb
call
clc
mov
push
loope
mov
jb
xor
lea
cmc
bound
jne
dec
cmp
push
mov
sbb
sub
rcrb
cld
loop
mov
xchg
xor
outsl
and
push
push
in
ja
add
cmp
or
pop
add
or
les
xor
inc
rclb
and
push
dec
int
jno
xchg
xchg
dec
mov
xchg
loopne
loop,pn
cmpsl
push
cwtl
cmpsl
sbb
mov
imul
mov
shll
cmp
jne
jns
xchg
clc
test
popa
adc
pop
push
cmp
pop
push
jg
jmp
xlat
fistl
lods
cmc
cwtl
cmc
inc
insb
or
fucom
arpl
mov
or
les
xor
gs
add
push
sbb
int
cmpb
adc
mov
ds
lcall
sub
xor
rclb
adc
test
roll
and
aas
lret
xor
movl
push
push
inc
add
out
rcrb
in
cmpsb
push
out
daa
aaa
push
xchg
shll
jnp
or
jmp
pusha
mov
gs
fwait
daa
test
and
fwait
jae
xor
xchg
loopne
stos
push
mov
jns
movsl
icebp
mov
ficoms
scas
xchg
std
and
mov
add
mov
jbe
add
add
scas
push
or
decb
int
dec
lret
aaa
out
enter
pop
push
fistpl
jo
daa
aaa
int3
outsl
pop
ret
insl
aam
lock
das
jge
sbb
pop
rolb
fldenv
pushf
arpl
xchg
rcrl
roll
in
ret
mov
jb
sub
daa
mov
out
mov
dec
cmp
fstpl
repnz
and
mov
cmp
roll
jbe
pop
test
iret
mov
mov
xor
imul
xor
int3
pop
pop
pop
push
sbb
jl
cmp
rcr
test
imul
ds
xor
and
inc
in
sti
std
hlt
ret
ljmp
in
push
daa
fs
dec
xlat
jae
xor
push
stos
pop
adc
xchg
or
add
stos
insb
mov
xchg
test
jbe
pop
sub
xor
and
and
and
xchg
repz
inc
xor
cli
test
sbb
pusha
scas
fdivl
xchg
add
and
xchg
test
sub
inc
push
inc
jecxz
loopne
cmpsl
add
xchg
fnstcw
sbb
testb
lahf
popf
cmp
mov
xchg
rorb
test
mov
or
scas
stc
call
sbb
ficompl
mov
pushf
data16
cmp
fcompl
arpl
mov
push
dec
shlb
adc
jnp
dec
pop
adc
roll
mov
xchg
ret
fisttpll
aaa
es
mov
cld
test
mov
mov
js
sbb
add
testl
mov
and
mov
dec
popf
mov
mov
rorb
rorb
push
dec
in
sti
xchg
adc
int
sbb
int3
inc
sub
mov
mulb
mov
add
jnp
test
inc
das
ljmp
in
lods
out
mov
int
cmc
sbb
dec
enter
loop
jb
jge
jmp
les
push
fwait
stos
stos
std
gs
xchg
hlt
in
cltd
dec
fs
mov
pop
mov
add
nop
push
adc
jecxz
mov
icebp
add
sbb
sub
pop
lods
in
sub
xlat
loopne
mov
inc
fimull
xor
or
add
int
aaa
push
int3
ljmp
or
inc
lock
movl
ret
cmc
mov
adc
movsl
xor
pop
jle
addb
cld
icebp
out
mov
inc
clc
lahf
je
sbb
cmp
mov
xchg
xor
loop
hlt
mov
lods
cmp
cmp
cld
and
mov
adc
lret
fistps
or
push
cmp
subb
push
inc
fs
dec
mov
or
ds
add
in
mov
add
xor
int
sub
inc
fcmovnbe
push
dec
cs
and
cmp
jmp
repz
shlb
or
jecxz
sub
add
push
jge
pop
popf
push
sub
inc
aam
fsubr
xchg
cmp
pop
scas
int
push
pop
fs
rcr
int
mov
jle
or
pop
cmp
aad
adc
sub
shr
pop
sbb
push
push
ja
pop
jmp
out
fcomps
daa
iret
fstpl
push
bound
rcll
cmp
mov
and
int3
xor
nop
roll
inc
pop
fdivrl
iret
xchg
xchg
std
push
negl
or
iret
xor
cmp
cmpsb
pop
add
add
dec
lahf
mov
sub
sbb
jg
movsb
xchg
cmp
mov
in
jle
push
pop
ss
clc
shll
fdiv
std
das
mov
clc
dec
popfw
ja
mov
and
and
adc
imul
adc
fnsave
imul
dec
pusha
ss
xchg
jp
or
outsl
xor
mov
push
jp
mov
aaa
mov
loope
scas
dec
xchg
sub
sti
ss
or
xlat
jmp
sub
push
fsubr
mov
cmp
fisubs
and
inc
std
mov
ss
mov
lahf
dec
xor
fistps
sarl
pop
cmp
cmpsl
xchg
lahf
dec
aam
int3
in
inc
fisttpl
test
cmp
clc
jg
loopne
pop
push
jae
inc
sbb
cmp
jbe
pop
pop
cmp
and
inc
sbbb
xor
mov
sbb
mov
out
mov
test
stos
mov
pop
cld
movsb
mov
add
call
mov
mov
lret
cs
mov
mov
sub
shrb
and
dec
scas
push
inc
inc
les
es
adc
push
dec
rcll
lret
stos
jmp
inc
cmc
fcmovu
pushf
add
loope
mov
add
mov
jp
das
add
xchg
fistpl
fmuls
insl
jmp
pop
cmp
dec
jbe
adc
inc
mov
and
dec
lret
iret
push
jns
int3
movsb
push
mov
orl
push
jecxz
mov
dec
repnz
inc
addb
xchg
fs
mov
into
ss
add
pop
sbb
cs
int
push
movl
mov
push
adc
in
add
sub
and
in
addr16
cld
outsl
fdivrl
cld
push
mov
pop
movsb
pop
fsubrs
push
sbb
imul
movsb
sbb
and
pop
xlat
mov
xor
lods
fldenv
into
xchg
xlat
bound
lods
fcompl
cmp
lret
jg
insb
mov
loop
je
mov
cli
mov
mov
dec
xchg
pushf
insb
mov
xchg
pop
inc
enter
or
adcb
jl
sub
xchg
loopne
mov
je
orb
dec
pusha
sbb
push
shrb
push
movsb
xchg
cmp
frstor
out
xor
aaa
xchg
or
jns
idivl
push
mov
gs
test
jmp
in
in
lea
sbb
mov
test
pop
rcrb
add
mov
and
pop
cmpl
jb
ficompl
jecxz
sub
addr16
cld
mov
addr16
xchg
fsubrp
inc
lods
nop
repz
nop
xchg
mov
scas
subb
daa
out
cli
jnp
into
ror
cmc
orb
stos
sub
sbb
jne
leave
test
pop
pop
cmp
cmpsb
scas
xchg
aas
inc
insl
jge
mov
inc
repnz
mov
and
cmpsb
add
popa
bound
sarb
pop
add
mov
inc
pop
pop
or
js
in
shlb
push
jnp
push
aam
lock
test
inc
jmp
test
push
daa
fnstcw
or
and
mov
push
notl
jle
mov
filds
pusha
bound
sub
test
pushf
push
test
mov
sti
inc
in
repnz
push
sbb
aaa
jns
imull
dec
xchg
pop
ret
lcallw
aam
and
lods
xchg
or
insl
out
pop
xchg
les
and
jne
fistps
and
popa
out
ds
or
mov
jnp
ds
pusha
pushl
cmp
lods
sarb
and
push
jno
xchg
or
mov
xchg
cmp
testb
rclb
mov
mov
mov
sbb
inc
imul
inc
mov
cmp
adc
cmpsb
pop
mov
dec
das
xor
jg
add
inc
adc
dec
ljmp
ljmp
cli
mov
ret
mov
aas
cs
lods
insb
out
mov
in
cmp
or
lahf
sahf
sarb
ss
mov
dec
add
movsb
pop
fldcw
mov
push
jl
dec
xor
test
push
loope
jnp
and
icebp
inc
pop
rcr
movsb
mov
inc
clc
repnz
test
sbb
insl
lret
push
push
data16
loopne
fwait
add
int
mov
ss
in
test
or
push
mov
sub
xorl
mov
inc
rcl
inc
pop
or
xchg
adc
imul
mov
pushf
adc
shrl
xchg
dec
pop
outsl
push
fisttpl
pop
cltd
int3
fsubrs
jne
push
xchg
jmp
jbe
loopne
xchg
call
insb
pop
xor
mov
in
jmp
add
add
xchg
and
call
xchg
fwait
sub
xor
mov
fucomp
sbb
addr16
mov
mov
test
cltd
loopne
pop
jnp
sarl
jmp
jo
js
orl
rcrb
pop
push
inc
dec
and
loop
movsb
roll
cmp
mov
stos
cmp
jmp
mov
in
push
or
shlb
sbb
cs
fimull
jns
hlt
fcoms
ljmp
pop
push
lds
sbb
orb
fildl
aas
xchg
inc
repnz
inc
jmp
mov
sar
jp
and
dec
icebp
inc
int3
push
cmp
aaa
or
jns
xor
jae
mov
dec
ljmp
cwtl
test
pop
cmpsb
out
fnstenv
cli
add
adcl
push
xor
mov
add
pop
mov
dec
out
mov
in
es
dec
sub
xor
dec
or
xchg
dec
pop
cli
inc
sarl
outsl
inc
xor
pop
int3
aaa
cmc
jg
sub
sbb
ds
jmp
xchg
push
dec
in
pop
xchg
cmp
dec
add
sti
jo
lods
mov
push
ret
xchg
jle
mov
mov
push
fldt
push
jl
jp
js
repnz
outsb
cmpsl
mov
ja
inc
mov
mov
scas
dec
inc
xor
scas
fwait
ror
jmp
jecxz
loope
iret
out
lret
popf
imul
adc
loop
cmc
xor
in
lret
fisubrl
or
jb
add
jb
jb
sub
leave
fwait
xchg
lods
pop
scas
es
inc
repz
loopew
push
arpl
sub
or
jge
out
rcll
fldt
sbb
adc
jp
adc
ss
sbb
daa
mov
mov
inc
push
stos
dec
mov
inc
les
bound
xchg
pop
cltd
in
mov
adc
lcall
add
shld
out
aad
sub
add
arpl
add
and
in
or
mov
cmc
mov
jl
rcrl
out
mov
rcll
stos
and
movsb
loop
sbb
add
push
mov
dec
jno
inc
shrb
mov
xor
int
es
jo
jns
inc
loopne
pop
scas
fwait
and
das
xchg
sub
xor
cmpsb
pop
data16
mov
or
bound
cmp
cmp
and
mov
clc
mov
pop
lock
push
cmp
jns
std
sbb
cmp
xchg
mov
mov
push
mov
mov
dec
in
aam
lcall
ja
xchg
loope
data16
in
stc
mov
pop
movsb
mov
icebp
lock
or
cs
fadd
mov
mov
jecxz
ja
adc
into
in
out
ljmp
sbb
loope
jne
dec
lret
jbe
pusha
mov
add
add
mov
popa
out
pop
call
neg
ljmp
push
mov
out
lods
adc
gs
add
rolb
pushf
dec
push
mov
xor
lret
hlt
pop
out
push
fldl
out
sahf
and
jmp
iret
rcr
rolb
fistpl
ret
dec
adc
cmp
mov
pop
jmp
test
cmpsl
push
cmpsl
and
out
insb
lock
mov
movsl
loop
out
mov
das
sbb
and
subb
outsb
cli
rorl
xchg
adc
xor
cwtl
push
popa
sbb
cmp
xor
test
dec
outsl
jns
inc
pop
xchg
mov
jge,pt
cld
out
adc
fwait
ret
cmpsb
ja
leave
cld
xor
jp
in
pop
movb
add
sbb
icebp
mov
stos
push
adc
inc
in
cmpsb
les
pop
push
dec
inc
outsl
int
mov
xor
stos
mov
or
jae
dec
int
mov
push
std
popf
jge
subb
adc
movsl
in
sbb
or
and
js
dec
sbb
pusha
insl
mov
stos
mov
cmp
mov
repz
leave
xchg
nop
add
push
cld
gs
std
inc
jns
sbb
mov
andl
adc
inc
pop
gs
mov
mov
sub
shll
adcb
push
push
dec
push
stc
sbb
cld
dec
mov
xchg
or
fs
daa
adc
pop
test
cmp
xor
repz
jae
pop
aam
push
mov
cmp
push
cltd
aaa
sbb
inc
mov
pop
fnsave
arpl
sbb
rol
inc
xlat
sbb
repnz
inc
out
lret
pushf
adc
inc
fldenv
xchg
shl
push
lods
lock
pop
or
sarb
push
add
andl
popl
leave
push
ror
inc
imul
aad
mov
dec
add
sub
iret
pop
xchg
lods
sub
leave
sarb
repz
add
scas
inc
xchg
rcrl
fiadds
int3
mov
push
adc
aad
add
ja
fst
inc
movsl
dec
adc
std
jge
xor
sti
sub
pop
sub
in
cmpsl
inc
iret
mov
cmpb
push
loopne
fimull
mov
flds
movsb
fisubrl
sub
mov
sbb
stc
insb
leave
shll
mov
incl
mov
aas
pushf
roll
adc
sbb
sub
cmp
cmpsb
clc
xchg
sti
cli
ss
mov
aaa
adc
and
push
sbb
sub
iret
rcr
mov
push
jge
andb
pusha
pop
in
sarb
push
xchg
leave
mov
jb
les
cld
cmpsl
sbb
adc
ljmp
loop
pop
lahf
pop
add
sahf
jecxz
jg
push
cmp
jmp
adc
adc
sub
mov
aaa
cwtl
cwtl
repz
push
pop
push
lahf
outsb
dec
mov
fnstcw
sub
inc
aas
dec
pop
icebp
movsl
xchg
arpl
xchg
and
sub
mov
shrb
push
sbb
add
lods
leave
mov
add
adc
add
mov
cmp
roll
lock
insl
add
pop
pop
gs
outsb
test
adc
vpand
pop
jb
std
mov
popa
data16
outsl
push
test
data16
aad
adc
repnz
mov
jp
scas
test
lret
sub
testb
pop
idivl
cmp
inc
mov
push
push
mov
sbb
or
faddl
orb
jmp
in
sub
cwtl
xchg
loop
jecxz
cltd
and
ljmp
loopne
aas
mov
iret
shr
inc
and
add
mov
xor
fsubrs
and
mov
mov
lods
test
add
aas
jmp
push
ds
cmpsb
mov
sbb
mov
into
jecxz
push
ss
pop
jns
push
inc
roll
ret
xor
int
add
jbe
and
xor
mov
jg
dec
pop
lods
popa
adc
ret
fs
mov
xlat
pop
cmp
adc
inc
push
cmc
aad
pop
pop
aad
sub
fs
divl
fs
dec
adc
xchg
movsb
adc
ret
add
sqrtps
cwtl
idivw
mov
sub
cs
gs
jmp
xchg
push
xchg
jns
repnz
fisubrl
pop
jmp
jmp
or
movsb
adc
cmpsl
jne
test
inc
push
test
push
ds
xor
into
xor
inc
rcl
out
dec
aam
ds
lcall
movsb
and
mov
out
jae
test
es
mov
lahf
stc
lods
or
fidivs
cli
adc
mov
cld
insb
testb
js
inc
mov
xchg
pop
cli
clc
inc
dec
mov
shlb
jo
jne
xchg
cwtl
add
push
test
cld
cmc
in
xchg
out
and
test
dec
sbb
jne
xor
roll
cli
add
mov
aaa
jno
stos
dec
xor
xchg
sti
loop
or
cmp
push
ds
adc
sub
clc
data16
push
sub
out
shufps
mov
cmp
fildll
push
adcb
pop
dec
and
pop
aad
jmp
nop
aaa
jg
outsb
dec
jecxz
sar
jb
inc
cmpsb
imul
lea
ret
sarl
jb
std
xchg
into
stos
lcall
mov
dec
notb
ficompl
shrl
fistps
jmp
sub
xbegin
push
pop
lock
push
das
push
push
dec
adc
xchg
jle
pop
mov
jbe
mov
dec
pusha
push
mov
hlt
mov
out
xor
and
adc
or
xchg
or
data16
jp
test
push
mov
imul
hlt
cmp
test
lds
sub
xor
and
push
je
scas
mov
mov
mov
lahf
jge
xchg
and
xor
pop
jno
mov
lods
lahf
xor
cwtl
in
add
cmpl
add
aas
out
pop
shlb
mov
test
aas
push
push
aas
mov
ja
movsb
sar
pusha
adc
mov
outsb
cli
add
mov
jno
jb
xchg
sbb
fsubs
repnz
lea
cmp
jne
shr
hlt
loope
mov
cli
ja
push
xchg
mov
mov
xor
push
mov
mov
jp
daa
cmp
jecxz
xor
clc
pop
sub
jecxz
pop
in
xchg
lcall
ret
xchg
shll
xor
push
ljmp
xchg
scas
inc
mull
test
xchg
jp
sub
pop
inc
sub
mov
insb
insl
sbb
iret
fbstp
fistps
fs
nop
addr16
and
aaa
mov
daa
inc
mov
out
lds
mov
xchg
push
adc
inc
aad
aaa
icebp
insb
xchg
mov
mov
or
cmp
out
sbb
push
inc
dec
outsb
je
add
and
std
popa
imul
dec
xchg
setbe
int3
je
jne
rcrl
into
mov
jge
sbb
add
sahf
push
push
jecxz
mov
fwait
lret
fldcw
push
cmp
out
int
stos
popl
insl
inc
cltd
mov
fstp
mov
enter
pop
jmp
mov
rorb
arpl
jge
stos
jge
or
push
arpl
push
inc
add
sbb
popa
int3
cmp
cmc
outsl
and
daa
in
fs
mov
jns
ss
sub
popa
mov
or
cmp
dec
xchg
add
adc
add
idivb
rclb
mov
divl
dec
scas
xchg
pop
cmp
lods
jmp
or
mov
cli
mov
loope
mov
mov
xlat
add
sbb
and
cmpl
cld
daa
push
lcall
push
scas
lahf
adc
xchg
sub
mov
lods
out
and
jnp
xchg
add
arpl
es
jae
push
push
or
popf
add
xchg
mov
ss
or
sub
sarl
outsb
mov
add
roll
fidivrs
and
icebp
and
adc
std
in
loop
mulb
or
xchg
cmp
insl
mov
decb
shl
push
mov
mov
aad
mov
xchg
cmc
lcall
adc
and
add
cmp
xchg
or
scas
nop
dec
push
subb
adc
xchg
jno
cwtl
ret
test
xchg
sti
pop
or
in
mov
or
pop
or
add
mov
neg
arpl
push
data16
xchg
adc
repz
sub
movsl
rolb
cmp
jecxz
push
xor
hlt
pop
cmc
lea
stos
in
outsb
es
fimuls
jae
jnp
cmc
jo
mov
sbb
cli
xchg
in
jp
popf
mov
mov
dec
sarl
inc
sbb
pushl
sub
popa
cmc
dec
addr16
push
or
jae
stos
mov
inc
jmp
fidivrl
cld
pop
add
add
mov
push
sbb
push
insl
ret
xchg
xchg
enter
mov
pavgb
pop
popa
push
std
jp
pop
mov
test
pushf
in
into
jnp
fs
sbb
jle
out
dec
mov
pushf
stos
popf
loopne
clc
sbb
movsb
int
cmp
pusha
mov
push
imul
cld
es
ret
cltd
in
fsubrs
mov
jns
add
adc
pop
adc
jge
scas
or
in
movsb
stc
setg
mov
daa
inc
cmpsb
pop
and
mov
insl
pop
or
loopne
daa
add
ret
loopne
sub
aas
hlt
xchg
ja
xor
lret
sbb
or
inc
xor
xchg
adc
cmpsl
pop
fmull
fs
add
test
inc
loope
cwtl
inc
and
outsb
nop
js
sbb
fcmovb
xor
xchg
nopl
pop
sbb
fcomi
cld
enter
sub
xlat
aaa
je
mov
jge
je
popa
int
ljmp
ret
stos
jle
dec
les
mov
testb
adc
je
loop
les
fildl
mov
lcall
push
popf
sbb
pop
fstl
sub
pusha
mov
sahf
aam
inc
sbb
push
rorl
mov
sbb
xor
shll
fbstp
roll
jns
add
mov
mov
cmp
inc
idivl
inc
lock
add
mov
xchg
lods
or
aas
cmp
aaa
fistl
adc
jae
dec
push
insl
add
out
lds
fndisi(8087
mov
in
pop
push
adc
rclb
mov
inc
fdivrl
loope
out
mov
sbb
enter
aam
xchg
xor
popf
mov
call
scas
cmp
std
mov
pop
pop
imul
and
sbb
rclb
fimuls
fdivp
daa
insb
or
jp
insl
in
stos
ficoml
xchg
notl
push
pop
out
addr16
cmc
xchg
std
addl
shr
adc
inc
jmp
add
jmp
jne
lcall
pushf
dec
jmp
add
xchg
lcall
jle
xchg
loope
jno
bound
stos
xor
xchg
mov
sub
and
inc
jge
imul
mov
and
scas
mov
xchg
jae
push
push
dec
mov
mov
xchg
daa
cmpsb
lock
jno
inc
fsubs
xchg
mov
and
jg
and
popa
pop
xchg
adc
adcl
push
fimuls
cld
xchg
adc
scas
repz
sbb
jmp
ds
cmp
jmp
dec
sbbb
in
pushf
pop
insb
cs
jne
cltd
mov
or
pop
lods
in
sbb
cmpsl
lods
pop
orl
and
fistpl
ret
and
push
push
mov
add
jae
push
sbb
lea
push
scas
fdiv
ficomps
xchg
ret
adc
cmp
xorl
lock
adc
push
dec
mov
sub
fs
imul
mov
subl
nop
imul
add
loopne
jno
pop
into
jg
popf
dec
dec
inc
xor
es
fld
add
sbbb
ret
or
jo
and
pop
inc
mov
or
ds
es
xor
dec
je
xlat
jl
jmp
mov
addr16
xchg
add
ret
fnstenv
js
incl
rcr
scas
jl
fsts
dec
and
pushf
mov
test
cwtl
xor
out
sahf
fcoms
ja
ja
fcmove
insl
mov
push
fprem
mov
or
inc
popf
xor
sbb
jb
leave
std
ds
mov
inc
mov
les
movsl
loope
mov
pop
aaa
xchg
mov
xchg
mov
inc
or
in
pop
push
push
dec
sarb
loope
rcll
xor
or
je
bound
mov
inc
xchg
int
adc
std
push
mov
adc
add
and
in
pop
mov
out
ljmp
push
fdivl
push
xor
mov
cmpsl
lahf
xor
hlt
xchg
pop
add
test
gs
sti
arpl
scas
in
adc
add
xor
lcall
push
outsl
lods
shl
push
sub
outsb
rcr
xor
jecxz
rolb
mov
pop
jecxz
fisubrs
test
or
outsb
fldt
sub
arpl
jmp
out
out
fmul
mov
pop
ret
pusha
dec
imul
adc
outsb
adc
ds
mov
adc
push
cltd
stos
jbe
imul
pop
movsb
jg
push
adcl
cmp
fsubs
aad
negb
mov
mov
sti
movsl
pop
pop
xchg
inc
and
dec
push
cmp
pop
mov
pushf
xlat
pop
xchg
shrl
out
call
fwait
xchg
xchg
mov
inc
loope
adc
xor
push
sub
in
add
push
in
cmp
or
fstps
mov
mov
cli
fadds
xor
out
mov
sahf
in
and
incb
add
xchg
lods
pop
push
inc
sub
xor
scas
clc
aaa
dec
cltd
sbb
mov
ss
movsb
add
xchg
sbb
pop
push
aas
adc
lods
add
loopne
sbbb
and
xor
test
insb
xorl
mov
sti
push
adc
cmp
ret
cwtl
cmp
mov
mov
rclb
scas
imul
xchg
loop
lret
jle
iret
loope
mull
andb
aas
sub
imul
mov
in
sub
nop
rorb
out
and
les
faddl
mov
inc
lds
call
ror
sti
mov
mov
cli
mov
fists
adc
in
xchg
and
imul
cmpsb
test
popa
dec
movsb
add
aam
fdivrs
xchg
xchg
push
insb
cmpsl
push
dec
inc
shrb
lds
cld
push
shrl
aaa
or
jecxz
mulb
mov
lods
loopne
jmp
test
in
sbb
scas
daa
lahf
sbb
xchg
add
adc
ss
fs
fs
lock
adc
mov
shll
mov
fs
mov
cmpsl
out
xchg
sbb
xor
js
push
icebp
inc
lret
jp
fbstp
adc
aam
mov
rolb
inc
clc
pop
fldt
sub
icebp
jmp
sub
decb
in
mov
nop
imul
sub
mov
notl
loope
lret
pop
cmp
call
push
xchg
mov
movb
fcom
shrb
xor
fstpt
inc
lea
lret
mov
cmp
in
fdivl
cwtl
sbb
push
fs
das
pusha
aad
or
fwait
inc
lds
insb
cmp
cld
cmp
push
mov
outsl
push
sbb
push
mov
mov
std
sub
xchg
sbb
push
xchg
fists
cmp
or
add
outsb
jo
hlt
and
or
test
decb
out
adc
mov
or
lahf
xchg
lods
test
popf
repnz
sub
xchg
testb
mov
cli
mov
xchg
push
movsb
pop
mov
jae
cmp
cmp
adc
adc
addr16
fs
push
push
sub
dec
inc
outsl
test
jno
pop
xor
push
inc
pop
hlt
pop
fisttps
mov
cmp
in
scas
not
jbe
inc
xor
mov
rol
jg
lods
fdivs
cltd
vmovddup
fs
mov
add
jle
and
fsts
jnp
das
jne
push
mov
aam
add
and
jb
cmp
add
xor
sbbb
cmp
rcrl
daa
inc
xlat
sub
in
xchg
fwait
int3
and
xchg
repz
adc
adc
insb
xor
cwtl
stc
xor
sbb
sbb
or
dec
imulb
sbb
lds
jl
jp
push
xchg
push
mov
int
movsl
addr16
xchg
fsts
and
lock
or
xchg
mov
mov
lret
cmp
imull
inc
dec
ljmp
in
pop
mov
dec
test
in
add
leave
or
nop
mov
enter
xchg
inc
enter
mov
add
jne
pop
in
nop
inc
jns
fdivs
imul
jle
sahf
sub
popa
mov
sbb
cmp
jb
mov
push
test
jo
mov
push
cs
jbe
mov
jo
or
xchg
cmp
movsb
iret
xor
pop
xchg
movsl
cmpsl
jle
je
pop
cmp
mov
jae
fwait
jle
in
outsb
rcr
xchg
xchg
push
movsl
rorl
mov
dec
inc
cs
mov
xor
and
xor
xchg
mov
int
push
and
pop
scas
mov
mov
mov
sbb
sbb
add
add
call
outsl
mov
push
mov
or
nop
pop
icebp
add
add
pop
imul
jg
leave
decb
out
adc
add
imull
mov
xlat
decl
ret
fidivl
jne
xor
inc
int
insl
pop
push
je
xchg
push
insb
push
pop
xor
mov
orl
xor
push
add
mov
push
outsl
enter
or
ret
pop
repz
mov
ret
imul
andl
mov
je
push
cli
loope
xchg
adc
push
sbb
lods
leave
xchg
pop
xor
push
aad
pop
mov
andl
dec
mov
aam
jecxz
enter
lods
mov
sub
std
ljmp
das
lret
lret
sti
xor
aaa
movsl
add
add
sarb
cli
aas
mov
and
lock
push
dec
jl
outsl
loopne
mov
sbb
je
push
fcomip
fisubrs
sbb
adc
xor
pop
call
cld
or
stos
sub
es
adc
shr
xchg
int3
repnz
pop
fcomp
das
cmpsl
pop
push
ffreep
mov
xor
xor
nop
int
iret
mov
sbb
or
faddp
xchg
cmp
mov
adc
shlb
push
xchg
jl
adc
xor
or
and
mov
out
popl
xchg
fistl
lret
push
and
pop
lret
lret
pop
dec
nop
sbb
cmp
js
cmc
push
lret
push
lahf
mov
add
ret
arpl
cli
and
xchg
inc
inc
stos
movsl
out
cwtl
xchg
les
out
adc
ja
cmpsb
fstpl
fdivs
cwtl
inc
sahf
xor
sbb
cmp
mov
dec
xchg
inc
shll
fbstp
leave
ret
andps
and
jecxz
cld
aam
cli
adc
inc
adc
dec
dec
lahf
out
sbb
pop
push
xor
add
xchg
jbe
shlb
test
mov
and
loopne
mov
adc
push
adc
hlt
out
push
push
arpl
andl
mov
mov
jecxz
mov
iret
or
jl
push
test
ja
lahf
aas
lods
aad
sub
adc
xor
ret
ret
imul
insl
ret
clc
jbe
cmp
pop
out
test
bound
pop
sbb
sbb
adc
mov
shlb
ret
push
ja
test
int3
push
ret
int
jmp
mull
adc
xchg
aad
push
addr16
or
cmpsb
in
rclb
cmpsl
xor
gs
cltd
aam
arpl
sub
jecxz
pusha
lods
jne
int
fcoml
popa
test
mov
sub
xlat
mov
push
pop
jb
adc
add
jbe
shll
xchg
imul
int
push
sahf
in
scas
jge
aam
xchg
inc
jge
mov
xchg
push
and
icebp
mov
sub
adc
ficoml
lds
ja
ljmp
adc
fistpl
push
inc
push
clc
pop
jbe
xor
adc
fldcw
and
daa
in
int3
or
fcomip
dec
and
inc
lahf
sub
lds
and
mov
fsubs
data16
mov
in
loop
pushf
ret
cmp
or
icebp
scas
stos
out
cmp
ror
daa
dec
aaa
and
mov
popf
fimull
sbb
je
outsb
cld
mov
iret
mov
push
bound
cmp
push
mov
std
xor
mov
out
xor
pop
and
sbb
enter
bound
or
es
mov
je
pushf
xor
inc
daa
add
insb
and
mov
push
sarb
add
ljmp
out
adc
sbb
mov
fcompp
loope
dec
or
mov
faddl
stc
xchg
mov
push
inc
loop
dec
sahf
adc
mov
fisttpl
test
call
adc
sbb
jb
daa
pop
cmc
cli
addr16
sbb
push
inc
outsb
xor
mov
push
xchg
sarb
xchg
adc
or
icebp
and
adc
insb
or
inc
push
sub
push
mov
xchg
js
repz
lret
lahf
push
dec
mov
mov
lcall
sbb
push
cmp
xchg
add
imul
in
mov
sahf
pop
jmp
fnsave
loopne
imul
lea
xchg
push
fwait
je
scas
into
sbb
and
jp
pop
pop
mov
aas
cwtl
and
lcall
sbb
inc
or
and
mov
stos
pop
les
inc
addb
lods
fcoms
add
mov
mov
push
and
sbb
or
js
push
cmpsl
jo
sarb
out
dec
insl
je
mov
jp
push
sbb
and
push
std
ja
inc
dec
daa
add
mov
ret
cs
icebp
in
and
cmc
sub
pusha
sarb
lcall
sbb
ret
and
pusha
rcrl
out
rorb
shrb
pusha
cmovp
mov
cs
ja
mov
lods
mov
inc
or
fistps
mov
loopne
rcll
shrl
xchg
out
add
jp
push
sbb
xchg
dec
or
inc
fs
int
push
hlt
inc
cmp
mov
xchg
leavew
scas
sbb
aad
fs
or
mov
int
dec
xchg
sbb
daa
adc
leave
mov
add
mov
and
pushf
repz
inc
incl
imul
pop
jp
call
jb
das
sti
xor
xchg
jae
pusha
mov
push
divb
lock
es
inc
lret
mov
popl
insl
gs
jns
bound
mov
int3
inc
shll
popf
dec
jge
lock
add
fldl
rep
and
sti
call
cli
inc
out
fsubrs
xchg
test
and
fs
popf
cmp
sti
cmpl
movswl
mov
jnp
cmp
push
sub
push
jmp
fiadds
inc
scas
imul
imul
stc
add
xor
rorl
cmc
cmpsb
ds
jns
lea
ss
cmp
in
push
add
pop
je
in
test
cmpsb
cmp
or
ret
and
xchg
pushf
mov
ret
or
insb
push
icebp
xchg
jns
mov
mov
sub
and
xchg
xor
sub
pop
push
in
pop
xor
outsb
jbe
loopne
test
jo
mov
push
insb
inc
push
repnz
sahf
lods
arpl
xlat
shrb
mov
aad
sub
sar
in
push
test
mov
repz
xchg
fstl
dec
pop
mov
or
push
cmp
mov
in
mov
int
add
mov
inc
adc
mov
cmpsb
and
enter
jle
iret
es
ss
popf
pop
aas
mov
xchg
mov
pop
cmpsl
and
push
testl
lahf
roll
clc
adc
andps
rcr
cli
or
outsl
movsl
mov
jmp
and
clc
lock
test
repnz
addr16
inc
xchg
cli
or
jmp
ja
idivl
stos
pop
andl
xor
cmpsl
sbb
aam
pushf
sbb
mov
stc
loope
pop
and
sub
dec
in
xorl
movsb
pushf
and
inc
xchg
jno
test
hlt
fs
xor
mov
pop
xchg
xchg
jns
imul
add
xchg
push
pop
in
pop
mov
add
push
movsl
repnz
push
or
test
test
insl
test
mov
jbe
pop
cs
pushf
rcll
mov
je,pt
repz
cmp
add
lea
or
call
aaa
or
pop
jbe
adc
jecxz
repnz
je
lret
cmpsb
xor
icebp
subl
stos
in
data16
jp
mov
mov
jp
sbb
dec
mov
scas
push
dec
jb
scas
in
xchg
push
mov
jcxz
fistpll
add
fcoms
insl
loop
xchg
add
cs
cmp
data16
xor
mov
and
push
sti
movsl
push
mov
imul
test
and
mov
shl
sbb
jecxz
cmpsb
icebp
mov
out
ss
xchg
shlb
add
icebp
push
fwait
rclb
add
imul
nop
cmc
imul
or
rolb
jno
mov
mov
xchg
inc
push
in
mov
pop
push
inc
dec
lea
jmp
sti
lret
arpl
fnstsw
push
sub
xor
mov
pop
cld
andl
mov
inc
push
inc
mov
mov
pop
into
lods
dec
aam
out
aas
cmp
leave
adc
xlat
stc
pop
cmp
popa
aas
cmpl
push
imul
inc
dec
test
sahf
and
mov
xchg
push
scas
leave
dec
dec
mov
ret
idivb
sub
dec
imulb
test
xor
mov
pop
lods
sub
movsb
scas
lahf
or
addr16
es
push
jecxz
cmpsb
pop
movsl
idivb
inc
xchg
adc
push
push
mov
sarb
jmp
cmp
jae
gs
xchg
roll
inc
pop
or
mov
sti
dec
xorl
sub
sbb
paddq
shr
push
xchg
mov
and
leave
add
in
js
sub
outsb
sbbl
sub
or
dec
in
mov
out
push
int
adc
add
fs
in
sub
sar
fwait
push
push
push
xchg
xor
ljmp
xchg
mov
pop
mov
adc
xor
in
out
dec
jb
and
dec
lret
cltd
dec
lods
inc
repnz
insb
jmp
push
xchg
xor
push
test
sbb
leave
cmp
repz
and
sahf
mov
test
nop
movsb
fcom
in
insl
cmp
movsb
dec
ja
pop
sbb
je
popl
xchg
xor
inc
cmp
mov
rolb
lds
loopne
cwtl
mov
sahf
dec
inc
lods
std
cwtl
xchg
mov
lcall
cmp
mov
out
xchg
mov
xchg
xor
shrb
push
pop
adc
ja
jne
push
cmp
push
dec
daa
or
add
outsb
sbb
orb
add
sbb
cmpsl
jno
and
jne
mov
aas
rcrb
incb
es
adc
enter
shl
arpl
xor
pop
rcrl
in
dec
aad
in
push
pop
test
jecxz
data16
mov
xchg
sub
int
jecxz
jecxz
out
test
bound
subl
fs
cmp
pop
in
jne
divb
loopne
notl
ljmp
mov
mov
lods
je
testl
nop
cmp
icebp
add
cmp
jnp
sbb
arpl
mov
push
sub
nop
jae
cmp
mov
xchg
or
lret
stos
fwait
sarl
lahf
mov
jb
mov
mov
movsl
rcrl
adc
jbe
popa
add
divl
mov
arpl
jb
add
lea
mov
adc
xor
mov
cmp
inc
cld
out
jo
aas
fildll
mov
shlb
push
inc
enter
sub
ljmp
lret
xor
leave
aam
sarb
dec
repz
jmp
lds
mov
lret
dec
add
pushf
jbe
xor
sbbb
fs
testb
sarl
dec
mov
mov
out
cmp
lds
std
ror
int
cmpsb
push
or
cmpsb
icebp
jnp
push
or
outsb
mov
sub
jbe
sub
fdecstp
inc
push
insl
lret
outsb
out
cmc
dec
inc
jge
loop
dec
shr
push
enter
lods
pop
inc
mov
addr16
test
lcall
mov
pop
mov
cmp
adcb
inc
vandpd
and
add
cmp
and
pushl
repz
xor
or
fld
inc
out
inc
pusha
in
add
movsb
jp
popf
or
mov
push
sbb
inc
out
mov
imul
mov
es
push
stos
cmp
cmp
jae
cltd
icebp
pop
das
xor
or
mov
popl
pop
hlt
and
ja
inc
mov
mov
enter
cmp
inc
fcmovnb
mov
pop
pushl
sbb
push
ljmp
ds
int
stos
fstps
stos
cmpb
cmp
mov
imul
adc
stc
out
les
or
data16
movsb
xchg
ss
adcl
fdivrs
xchg
out
pop
mov
in
cmp
push
jne
dec
mov
mov
mov
jmp
sbb
jp
xchg
dec
sbb
adc
dec
and
and
add
mov
sbb
sub
js
mov
fcompl
das
xchg
push
jbe
xor
fdivrl
jbe
cmovne
lods
mov
in
mov
pop
mov
stc
int3
cmp
or
pop
mov
mov
cli
dec
jmp
sub
push
idivl
jmp
dec
xor
in
push
sbb
pushf
mov
jmp
and
pop
cmp
dec
push
ret
lret
xor
xor
push
or
ja
add
jecxz
or
into
scas
and
xchg
sbb
hlt
mov
stos
aas
dec
imul
insb
je
pusha
cmp
stos
cltd
sub
sub
or
test
mov
mov
fsubrs
cmp
jecxz
lock
push
inc
push
lods
cmc
js
dec
stc
mov
leave
out
sbb
jno
pop
jecxz
in
mov
test
cmpsb
ja
sbb
scas
inc
aad
jb
cld
test
loope
test
jne
inc
fisubs
lods
or
cli
sub
and
mov
inc
sub
loop
enter
int
ficoml
gs
gs
cmpsb
fstp
mov
ljmp
xor
push
cmp
adc
dec
cmp
js
loopne
inc
mov
lock
sub
leave
pop
out
fisttpll
mov
mov
push
mov
insb
fwait
add
lds
or
test
dec
ss
sar
pop
aas
ss
mov
sub
pushf
cmp
out
sbb
push
jl
mov
push
adc
fwait
movsb
orb
mov
jg
add
push
lcall
jbe
mov
dec
mov
sub
mov
mov
xchg
shll
add
xor
les
push
fcomi
fsqrt
std
sub
xchg
jno
cmp
inc
loopne
lret
into
or
aam
cmp
ds
mov
inc
popf
mov
ficoms
repnz
stos
incl
fs
mov
xchg
adc
ja
lret
fst
jg
lahf
pusha
and
pop
in
jne
or
cld
aaa
fdiv
xchg
insb
push
pusha
push
js
aad
ret
push
dec
cmp
lock
pop
mov
cli
mov
push
in
pushf
mov
sar
or
xchg
inc
sti
jbe
push
cmpl
cmp
mov
test
lahf
fwait
mov
jne
inc
or
sub
add
call
add
mulb
sub
fwait
push
mov
bound
aad
or
notl
std
push
addr16
sub
adc
mov
xor
sub
cmpsl
and
or
shl
in
xor
in
movsl
jg
add
pop
dec
add
push
jbe
dec
scas
out
push
out
fidivs
push
jne
outsb
mov
or
adc
push
jmp
and
lods
popa
in
out
mov
and
int
adc
pop
lea
inc
add
push
loop
push
mov
lds
jp
icebp
cli
nop
add
mov
fidivrl
das
push
outsb
sub
mov
aaa
pop
xchg
stos
cli
inc
arpl
sahf
sub
mov
jns
push
jg
test
ror
out
xchg
or
and
xchg
sahf
into
or
push
rol
adc
movsl
inc
xor
cmp
fwait
lret
ret
out
adcl
mov
inc
call
out
dec
mov
push
adc
clc
cmp
dec
cld
pop
dec
popl
and
push
cli
pop
jmp
lods
in
pop
pushf
pop
xchg
stos
xlat
push
dec
popa
mov
cmp
das
movsl
cwtl
in
sbb
or
pusha
rcrb
adc
mov
inc
add
out
cmovge
cmp
fcompl
or
mov
or
cmp
shl
mov
jmp
lahf
sub
sbb
imul
daa
into
iret
arpl
fdivp
inc
push
repz
pop
out
stos
int
mov
pop
mov
inc
scas
repnz
xchg
push
xchg
dec
adc
mov
push
and
clc
insb
mov
fdecstp
jle
insb
sbb
and
and
mov
sbb
mov
xchg
dec
push
sbb
pop
xchg
in
add
push
ss
sub
cwtl
cwtl
xchg
int3
sub
push
and
inc
xchg
jmp
loope
pop
cmpsl
test
inc
push
aas
data16
test
loopne
rsqrtps
mov
rsqrtps
mov
xchg
notb
mov
popf
or
adc
jno
dec
cmc
mov
mov
push
stos
inc
sahf
inc
cs
xor
cmp
sub
xchg
aam
add
fidivs
and
push
repnz
addr16
imul
insb
or
jbe
pop
or
jle
arpl
cmp
dec
push
repnz
addr16
jbe
sub
clc
add
shlb
jmp
out
cltd
inc
pop
xchg
rolb
aam
pop
sti
sbb
test
repz
cmp
mov
mov
enter
dec
mov
cmp
push
cmp
rcll
mov
ret
movsb
push
adc
adc
push
cld
dec
ret
fisubs
iret
fbstp
jne
fucomi
cmp
aas
mov
or
adc
adc
shll
mov
ss
mov
pop
mov
mov
xchg
out
xchg
mov
bound
insb
call
fstps
stos
mov
cmp
lea
adc
mov
fnstenv
mov
inc
xlat
iret
and
out
xchg
das
mov
fsubrs
cmp
jl,pn
cmp
daa
mov
adc
aaa
sbb
push
xchg
jne
add
push
push
test
test
inc
mov
bound
mov
dec
adc
outsl
or
jmp
jp
and
mov
addr16
lods
push
sub
or
dec
pop
add
movsb
movl
into
pop
daa
inc
nop
add
cmp
jp
daa
mov
daa
push
cld
imul
jmp
inc
js
mov
ss
sub
das
jl
push
jo
addl
and
lahf
insl
dec
push
inc
and
scas
adc
xchg
imul
fs
xchg
lock
or
push
pop
test
xchg
push
jno
mov
les
mov
rolb
pop
js
cmp
rcrl
imul
mov
xchg
je
sub
mov
and
jno
faddl
ljmp
imul
stos
in
mov
cmp
push
addr16
cmp
pop
lahf
mov
push
enter
add
stc
icebp
imul
arpl
js
push
and
das
imulb
cwtl
lret
clc
scas
ljmp
jae
cwtl
cmp
push
stc
pop
jl
xchg
mov
bound
sub
aaa
or
popa
cmp
mov
sbb
faddl
mov
mov
and
mov
das
jg
add
sets
xor
shr
fs
cmpsl
repnz
lret
cmp
outsl
push
and
dec
int3
arpl
hlt
or
aad
push
jns
jle
and
xor
js
in
call
lods
fnstsw
jns
dec
mov
into
pop
cmpsb
sbb
xor
add
xchg
mov
sub
inc
int3
add
add
mov
movsb
repz
or
ds
fisubl
ss
and
mov
sar
sub
pop
hlt
movsl
in
mov
pop
xchg
in
mov
push
cmp
cmc
cs
add
test
jbe
adc
loop
jmp
inc
sbb
or
xor
outsb
add
jb
repz
fistl
inc
cli
jge
mov
cmp
pop
clc
xchg
pop
pop
cwtl
mov
lret
gs
dec
jne
shrb
loopne
lock
int3
iret
rcll
outsb
push
mov
pop
arpl
inc
mov
das
leave
mov
sub
inc
jbe
cmp
mov
pushf
lcall
xor
sub
cwtl
pop
jmp
mov
cmp
adc
jnp
std
scas
pop
dec
dec
cltd
dec
in
push
js
dec
movsb
enter
and
xchg
int3
xor
mov
inc
adc
and
xor
mov
mov
ret
xchg
jo
adc
dec
mov
test
xchg
fldt
mov
ljmp
mov
imul
jg,pt
add
imul
loope
gs
add
out
lret
dec
push
movsb
mov
inc
jp
cld
mov
cmp
push
sub
cmp
add
xchg
sub
fidivrs
out
cmp
mov
out
mov
lods
fs
cmp
out
mov
lret
cwtl
jge
int3
rcll
jecxz
xchg
sbb
sbb
jecxz
test
sbb
jnp
sti
insl
shlb
nop
or
mov
clc
fsubrl
add
test
inc
repz
adc
cmp
sub
jg
xchg
aad
push
shrl
push
inc
call
mov
sbb
mov
dec
mov
add
pushf
lods
pusha
lcall
jecxz
int
loopne
sub
xor
dec
cmp
push
dec
or
add
xor
in
icebp
dec
xor
iret
push
or
mov
mov
shll
and
push
mov
std
negb
or
mov
jecxz
mov
in
addr16
sub
les
cld
or
jnp
bound
pop
mov
jl
repnz
cmpsl
add
xlat
hlt
mov
test
and
or
inc
stos
stos
adc
pusha
cld
xchg
sbb
and
pop
psrad
xor
lods
int
ret
xchg
rol
sbb
sbb
push
xchg
sbb
and
imul
scas
popa
clc
push
pop
stos
movsb
jmp
xor
rcll
icebp
fstpl
sub
pop
movsl
and
cli
fisttps
jmp
jge,pt
dec
cs
cmc
lret
sub
jecxz
mov
cltd
test
cmc
das
mov
pop
adc
pop
pop
imul
movsb
fwait
cs
daa
xor
add
decb
sbb
adc
cmp
xchg
dec
int
in
fdivrs
cltd
sbb
cmp
mov
push
mov
add
adcb
fiadds
xor
int3
or
mov
fnstsw
xor
sub
xchg
vpminub
mov
sahf
in
insl
hlt
mov
outsb
lea
fistpll
mov
push
mov
push
fists
jg
stos
mov
lods
cs
jo
loop
xor
scas
sbb
fs
pop
and
repz
repnz
imul
arpl
ja
push
pop
fadd
in
mov
pop
xchg
cmc
lods
scas
jg
loopne
pop
jecxz
cmpsb
jp
add
jge
test
out
inc
negb
add
push
fisttpll
inc
sub
int
mov
dec
ljmp
lcall
xchg
mov
add
dec
nop
sbb
dec
icebp
les
mov
ss
sbbl
mov
xor
push
lahf
dec
enter
inc
jg
add
hlt
mov
dec
addr16
push
stos
fdivr
mov
cs
lods
inc
stos
pop
mov
xchg
loopne
inc
push
sbb
sbbb
fs
aad
mov
or
mov
lds
mov
fsts
push
fs
aaa
inc
enter
shll
iret
mov
test
add
xchg
mov
pop
scas
fwait
scas
pop
les
fisubl
xchg
icebp
cmp
xor
outsl
outsl
stos
adc
cs
out
jns
and
rorb
ljmp
clc
xor
test
mov
and
or
push
push
clc
sub
mov
push
leave
hlt
or
clc
cli
roll
adc
mov
push
dec
leave
pop
adc
xor
dec
dec
fwait
hlt
pop
add
lret
push
sti
jg
push
fsubl
cmc
shlb
jae
inc
outsb
inc
mov
xor
call
dec
js
add
les
ret
inc
sub
push
sbb
les
add
jno
ror
test
xor
in
imul
ret
sub
lods
xchg
push
add
mov
out
imul
popf
mov
mov
cmp
ret
nop
test
lea
jns
mov
cmp
push
into
je
mov
or
xor
in
ret
pop
xor
in
push
push
sub
pop
mov
insb
mov
push
inc
dec
mov
adc
lock
mov
sbb
mov
pop
shrl
popa
imul
push
push
xchg
outsb
out
jo
shlb
sub
loop
mov
add
lds
mov
lods
aaa
push
push
push
mov
sub
in
in
mov
rcr
jg
dec
push
test
shld
popf
bound
dec
ja
popa
mov
pop
xchg
es
into
popf
mov
out
mov
int3
xchg
or
fisubrs
mov
add
cltd
jecxz
inc
sbb
sbb
insb
adc
test
xor
aaa
movsb
mov
mov
xchg
cmp
mov
fisttpl
jae
or
repnz
mov
sub
push
jle
cmp
jbe
xlat
ret
stos
cli
popa
adc
stc
stos
jl
and
sbb
add
ret
mov
inc
xlat
outsb
inc
cmp
mov
cmp
mov
or
sbb
or
mov
sahf
mov
xchg
add
pop
loope
or
push
inc
ror
sbb
or
or
loope
stos
shll
fwait
add
add
pop
xchg
js
adc
test
out
rol
in
mov
test
int
push
mov
in
iret
rorb
mov
ds
dec
lret
sub
push
dec
or
lahf
data16
jb
scas
jl
cmp
xchg
in
mov
jmp
add
pop
bound
dec
out
ss
in
fstpt
adcb
idivl
aam
jnp
or
insl
and
repnz
lock
insb
ja
cmp
and
leave
pop
cwtl
stos
mov
or
push
mov
add
inc
fsubrs
orb
or
nop
push
sbb
xchg
lock
in
inc
es
je
dec
popf
popa
xor
adc
mov
xchg
fldt
jecxz
out
xchg
and
dec
aas
iret
jg
les
test
add
sbb
in
int
in
test
scas
ds
fs
add
mov
dec
out
outsb
cmp
filds
add
jno
div
sub
xchg
jb
mov
fmuls
jecxz
inc
call
stos
dec
mov
dec
pop
mov
daa
repnz
jne
dec
xor
xchg
clc
imul
cmpsb
mov
mov
mulb
mov
popa
mov
leave
cmpsb
sar
jl
stc
call
mov
and
rcl
leave
mov
roll
call
cmp
ds
stc
adc
aas
jle
dec
fcomps
jnp
out
push
notb
inc
jb
mov
mov
sbb
mov
or
cltd
pushf
es
inc
push
cmc
xchg
xor
sbb
lahf
lods
inc
xchg
and
add
scas
pop
sub
movsb
mov
pop
orl
test
ret
in
push
mov
dec
mov
mov
jecxz
xchg
imul
inc
xchg
icebp
cmpsb
les
leave
pop
xor
fld
sub
cmp
add
dec
jmp
mov
repz
ljmp
mov
mov
cli
test
cltd
sti
insl
stc
movsb
mov
cli
push
andl
push
mov
lret
ja
mov
cmp
mov
cli
push
fldt
xchg
xor
mov
xchg
pop
push
mov
nop
jle
insb
jae
mov
add
pop
push
loopne
and
call
in
stos
jo
jae
or
dec
mov
and
outsb
inc
sub
data16
push
lods
mov
mov
cmp
pop
xchg
jge
popf
pop
adc
shrb
jecxz
cmc
push
arpl
pop
and
xor
not
pop
pop
push
inc
jge
aas
push
inc
sbb
lods
gs
divl
mov
pop
cmp
jb
lahf
lods
xor
lahf
sbb
nop
sbb
or
add
inc
mov
scas
sub
aam
mov
pop
data16
outsl
push
scas
jae
mov
sti
mov
out
jae
mov
aad
pop
dec
and
rorb
inc
pop
outsb
stos
mov
or
mulb
cmp
push
bound
std
fstp
push
shl
daa
stos
inc
ds
shlb
mov
or
or
xchg
or
cmpb
inc
push
pop
push
pushf
dec
adcl
sub
xor
filds
sub
call
icebp
repz
push
in
xchg
fimull
push
into
dec
mov
sub
callw
mov
lds
dec
xchg
nop
mov
out
xlat
pop
sbb
in
mov
fdivrl
pop
and
push
add
push
mov
xchg
cltd
xor
add
push
jg
add
pop
push
cmpsb
lock
mov
lds
test
cmpsb
nop
jae
push
fcompl
inc
daa
outsb
mov
loope
jae
mov
adc
out
aad
js
cmpsl
push
xchg
sbb
out
fwait
pop
les
repz
push
pop
outsb
cmc
mov
test
dec
cmp
ror
mov
pop
rorl
lods
shll
mov
sub
push
pop
push
iret
sarb
sbb
aam
jbe
and
sub
test
mov
xor
push
sub
divl
movsl
mov
sbb
push
adc
sbb
ss
out
mov
fisttpll
inc
cmc
adc
lret
push
dec
fwait
push
dec
fnstenv
pop
dec
test
mov
outsl
jb
clc
adc
ror
out
inc
and
test
push
shll
mov
int
das
xor
pop
dec
push
mov
sbb
mov
mov
sub
adc
movsl
cmp
inc
mov
sub
mov
icebp
lahf
push
jg
faddl
loop,pn
sub
js
fisttps
xor
jb
daa
dec
lea
fsubl
sbb
adc
mov
inc
inc
mov
mov
add
ret
ret
cmp
xlat
loop
xchg
rclb
shll
mov
dec
inc
mov
cs
cs
mov
add
dec
cmpsb
push
mov
inc
jecxz
inc
loop
insb
movsl
dec
lcall
rol
and
rcll
inc
sbb
subb
pusha
push
pop
lret
pusha
addl
pop
sub
mov
subb
and
dec
pop
je
and
in
mov
loope
aad
aaa
xchg
dec
shlb
sub
fildll
imul
pusha
pop
jnp
or
shlb
xchg
nop
xor
sbb
cmpsl
mov
cmp
mov
ljmp
lahf
sub
mov
fldt
sub
in
es
in
sbb
fdivrl
fdivs
cmp
je
xlat
adc
push
outsl
inc
shll
jb
dec
loop
xchg
sbb
jo
lahf
sahf
add
fwait
stos
mov
xlat
fwait
std
inc
and
xchg
inc
lahf
ds
xchg
mov
ret
mov
jo
bound
rclb
int3
push
mov
ret
lods
adc
mov
xchg
sub
mov
add
cmp
leave
shll
arpl
mov
xor
mov
pop
movsb
es
push
pop
enter
frstor
sub
mov
mov
sbb
les
cmp
mov
add
fnstenv
jbe
xor
and
and
cs
pop
ja
cmp
ds
dec
in
adc
adc
ja
in
sub
jp
adc
test
pop
add
mov
mov
test
push
mov
jbe
sub
adc
mov
push
enter
shlb
aad
sahf
ljmp
jge
ja
into
std
lcall
fimull
sbb
jmp
xchg
mov
cld
pop
je
aas
sahf
cs
add
dec
shlb
mov
jb
mov
lcall
dec
sub
mov
xchg
xor
lock
xchg
mov
pop
sbbl
mov
push
jb
lods
inc
and
cmp
xchg
mov
fsubrl
push
js
fcmovne
dec
xor
js
stos
fcompl
pop
cwtl
mov
dec
pop
shlb
xlat
adc
dec
rclb
shlb
dec
movsl
or
cmp
push
imul
push
push
fistps
dec
cmpsb
cmp
push
addr16
nop
push
pop
addr16
ficoms
adc
pushf
rcrl
loop
icebp
sub
imul
jb
popf
jne
jo
scas
out
loopne
xchg
mov
fnsave
mov
je
pop
lahf
movsb
xor
fnstsw
mov
bound
mov
push
aas
xchg
jb
add
repz
leave
dec
inc
jne
sbb
sbb
popf
ja
in
arpl
jno
shl
jno
cld
cmp
pop
jle
imul
dec
mov
iret
into
test
subb
xchg
outsb
es
fisubl
lods
fcmovnb
jmp
insl
arpl
popa
inc
xchg
inc
jp
xchg
sbb
adc
mov
jns
mov
inc
pop
test
lcallw
mov
inc
ror
pop
cld
out
push
xor
sub
adc
adc
mov
sub
mov
and
push
int
lods
jle
andb
xchg
mov
adc
add
lret
outsb
xchg
loop
cld
sahf
pop
mov
cs
dec
movsb
daa
std
or
data16
add
push
mov
lahf
xchg
jbe
notb
lds
mov
pop
into
add
nop
or
xchg
mov
dec
lds
push
shr
adc
movsl
push
sbb
sbb
hlt
mov
mov
sub
fistpll
gs
es
mov
out
into
mov
pop
pop
cmp
cmp
in
rclb
cmp
and
int
xchg
mov
xor
les
in
xor
push
jbe
pop
call
push
into
jno
insl
cmpl
xchg
dec
and
or
adc
sbb
sbb
pop
out
mov
sub
movsl
cmp
shr
outsl
adc
pop
jo
ret
mov
rcr
lret
pop
stos
cmp
push
sbb
mov
mov
cmp
sti
add
cltd
jmp
inc
lret
or
push
inc
push
sti
pop
cmp
push
mov
xlat
sbb
js
enter
xchg
jl
add
cmp
xchg
loope
push
sbb
mov
mov
xor
aas
add
pop
sub
jbe
add
shlb
xor
jno
gs
jnp
aas
push
lcall
sbb
adc
aad
xchg
fs
iret
jmp
inc
fcmove
lahf
mov
in
addb
adc
movsb
ret
jae
std
test
dec
enter
lret
jbe
add
cmp
mov
and
or
inc
fwait
xchg
lcall
sub
decb
or
mov
sbb
adc
mov
fsubrp
xchg
cmp
movsb
int
cmp
or
pop
ret
jnp
cs
dec
push
imul
enter
xor
fwait
push
cs
out
fcoms
popf
test
sub
movsb
repnz
sbb
incb
adc
fcomps
int3
cli
or
ljmp
xchg
dec
add
nop
imul
and
add
in
mov
jg
loopne
lahf
add
test
add
inc
and
imul
lock
jg
jnp
mov
xlat
dec
fcmovbe
xor
in
repz
lds
ja
int
cmpsb
lods
clc
pop
scas
add
xor
inc
arpl
stos
cmpsl
xor
outsl
loop
inc
stc
pop
lea
mov
jge
cmpl
mov
dec
or
ret
pop
push
push
pop
mov
xchg
add
pop
xchg
mov
ja
inc
aas
ret
mov
xchg
fs
dec
push
mov
mov
mov
mov
loopne
es
loopne
enter
add
mov
xchg
dec
scas
push
clc
imul
cmp
inc
jmp
cmp
popf
cmp
movsl
lcall
into
popf
xchg
xchg
xlat
dec
les
pop
cli
cs
and
jo
adc
arpl
scas
jns
push
jle
pop
rorb
flds
dec
jns
push
adc
cltd
sarb
popf
loope
mov
mov
outsl
lds
sub
repz
lock
sbb
inc
daa
pop
aas
out
jg
rcl
ljmp
jne
push
or
or
push
cmpsl
mov
outsl
adc
sbb
insl
fstps
addr16
cmc
imul
sbb
fisubl
das
add
arpl
imul
outsb
pop
sbb
jb
push
adc
repz
or
es
sahf
cmp
push
add
pushf
or
bound
repnz
inc
testb
add
cmp
or
ret
cmp
sarl
int3
shr
scas
test
mov
lock
nop
enter
shrb
xchg
sbbb
ret
sbb
push
dec
lock
imul
inc
pop
push
inc
mov
out
arpl
gs
ror
push
in
inc
mov
incb
and
pop
movsb
sub
or
xlat
jl
cmp
add
sbb
dec
scas
cmpsl
inc
jmp
inc
xchg
mov
mov
sub
dec
in
sbb
mov
adc
sub
xchg
push
dec
hlt
jnp
loope
dec
imul
prefetcht0
scas
adc
push
xor
push
add
sbb
pmaxub
frstor
dec
inc
mov
dec
xchg
dec
pop
jnp
in
mov
xchg
xor
mov
inc
orb
in
cmp
or
cli
cltd
mov
fsubs
pop
push
sbbb
mov
cmp
add
jmp
shr
cmc
in
fadd
repz
sbb
fwait
stos
cmpsb
push
repnz
or
imul
fs
pop
sub
lds
pop
in
into
cmp
dec
cs
data16
mov
out
cmc
sub
pop
lea
mov
push
xchg
xchg
push
sbb
frstor
andl
mov
adcl
mov
mov
or
adc
pushf
and
adc
out
add
mov
mov
xchg
lods
in
pop
and
arpl
cmovae
in
testl
dec
ja
jns
and
out
mov
outsl
xor
and
push
movsl
repnz
fwait
movsl
sbb
imul
inc
jl
mov
scas
mov
jae
and
cmp
and
cmp
jmp
add
pop
loopne
loope
rorb
les
and
push
adc
lahf
jae
sbbb
xor
cmp
leave
dec
js
mov
inc
add
lret
inc
add
mov
and
add
int
mov
cmp
fwait
mov
sub
xchg
add
cwtl
dec
loop
dec
inc
mov
scas
ret
mov
std
push
pop
cmc
mov
popa
aaa
mov
hlt
jnp
adc
daa
mov
outsl
mov
jo
test
mulb
xchg
mov
mov
push
in
pop
int
and
rclb
mov
inc
jge
cmpsl
mov
stc
outsb
mov
mov
inc
and
mov
inc
xor
add
adc
add
je
sbb
mov
lods
sub
movsb
dec
test
mov
push
pushf
cmpsl
xor
add
and
cmpsl
popf
xchg
mov
pop
scas
outsl
adc
add
pop
popa
jns
dec
mov
and
adc
inc
notl
or
mov
mov
cmpsb
push
mov
sub
fcoml
mov
pop
and
testl
push
leave
cmp
ret
pusha
call
jecxz
cmp
or
shlb
fisubs
pop
or
imull
in
add
mov
imull
rol
out
sbb
jnp
and
fstpt
inc
add
test
jbe
lds
cli
jbe
mov
fisubl
dec
add
push
dec
data16
stos
sub
dec
xchg
mov
jbe
and
dec
or
xor
cmpb
and
call
loopne
ss
lods
jl
jmp
mov
inc
cmp
add
ret
mov
jns
ja
dec
icebp
lret
call
jge
cmp
fistps
sub
xrelease
call
sub
sarb
jge
mov
dec
dec
add
int3
and
sbb
xchg
cmp
fs
fwait
arpl
imul
aad
mov
imul
cmp
and
jo
mov
push
inc
ljmp
sbbl
mov
xchg
adc
popa
ret
xchg
shrl
push
add
mov
je
pop
iret
push
sbb
adc
mov
or
mov
sub
mov
xor
dec
loope
push
arpl
in
jmp
cld
mov
add
repnz
cwtl
aad
test
das
xor
mov
test
mov
cmp
jg
lods
sbb
mov
mov
xchg
jns
cld
lock
outsb
lret
jl
push
repz
dec
add
or
and
sbb
int
shlb
test
test
inc
outsb
fbld
inc
outsl
inc
pop
test
pop
adc
int3
cs
gs
sahf
inc
es
lods
or
xlat
aaa
adc
je
mov
cmp
shll
inc
out
iret
fstl
xor
push
sti
out
mov
mov
nop
push
stc
mov
mov
push
mov
xchg
xor
sbb
sbb
mul
lahf
dec
or
inc
fldz
les
mov
divl
push
sbb
pushl
pushf
mov
xchg
cmp
push
inc
out
stos
add
push
cmpsb
inc
leave
push
in
lock
ja
scas
lret
gs
inc
sub
and
push
gs
adc
xchg
xor
adc
xor
pop
loope
pop
int3
stos
mov
hlt
pusha
sbb
pop
push
sub
sub
pop
dec
out
jbe
mov
iret
fbstp
push
sbb
mov
add
lock
sub
xchg
add
mov
push
leave
ljmp
bnd
jns
and
fstpl
scas
dec
mov
inc
cmp
mov
lret
sbb
mov
rcr
and
imul
test
imul
or
xchg
movsb
mov
inc
loope
js
and
adc
sbb
pop
pop
loope
enter
lret
hlt
in
sub
pop
stc
xchg
sahf
xchg
push
jae
je
es
push
inc
iret
pop
test
clc
sub
fcoml
scas
sub
dec
or
xchg
mov
push
add
xchg
das
imul
and
scas
jge
push
fisttpll
lret
ja
sub
inc
xor
push
iret
std
sar
cmp
add
lahf
xor
ret
adc
mov
mov
adc
dec
call
ret
jecxz
stc
ret
pop
out
fsubr
and
dec
lock
cmp
mov
or
call
call
push
mov
mov
arpl
clc
fsubs
test
jne
bnd
mov
in
xchg
xchg
ds
mov
push
mov
pop
dec
fdivr
push
lods
cli
pusha
dec
pusha
cmp
ljmp
ljmp
push
or
jle
clc
mov
mov
ss
mov
and
insl
inc
inc
pop
jecxz
dec
mov
insb
in
mov
js
outsb
bound
inc
int
push
aad
in
pop
dec
sahf
mov
ljmp
add
jns
inc
scas
cmp
xchg
jno
or
and
jl
iret
cli
in
stos
fadds
mov
aaa
cmp
scas
jae
xor
repz
movsl
out
iret
jmp
clc
and
dec
cwtl
sub
sarb
xor
fimull
cltd
stc
inc
pop
and
pop
sub
jb
sub
mov
lcall
mov
test
add
lcall
sbb
rol
jl
inc
pop
adcl
ret
rolb
jle
das
dec
push
loope
daa
cmp
cmc
push
sub
pop
cmpsl
and
add
shll
mov
ret
mov
popf
loope
pop
inc
scas
or
sub
std
mov
pushf
cmpsb
or
scas
pop
xchg
in
mov
add
js
or
mov
adc
or
mov
andl
repz
rcl
cltd
ret
hlt
aaa
repnz
mov
mov
adc
fs
cltd
lcall
lret
xor
ror
xchg
push
outsl
pop
jno
out
cmp
clc
inc
mov
sbb
dec
aad
ja
pusha
loop
pop
insb
dec
pop
jmp
mov
xor
mov
enter
jge
je
aad
aas
fnstenv
and
movsb
push
es
mov
aam
jo
out
aam
adc
je
sbb
adc
adc
cmp
jae
xor
sbb
add
inc
mov
or
dec
test
lods
ds
adcb
out
iret
jo
movsb
sub
xchg
sbb
arpl
pushl
call
mov
add
mov
sti
jl
mov
jnp
mov
sti
repz
pop
or
xchg
lock
push
xchg
and
imul
add
sub
ljmp
negb
push
leave
cmpsl
xor
push
les
dec
push
pushf
and
pop
repz
ret
inc
cmp
mov
add
pushl
leave
mov
pop
xchg
jecxz
dec
add
and
xor
lds
and
lret
jb
test
mov
push
cld
mov
pop
and
pop
push
daa
pop
sub
inc
cli
das
mov
cmp
push
jne
mov
add
push
mov
mov
push
pop
xor
outsl
sti
and
push
jmp
adc
mov
ljmp
mov
ljmp
fcoms
dec
aad
daa
repnz
mov
shrl
inc
mov
dec
dec
ficomps
scas
add
cli
mov
inc
lds
mov
in
xchg
or
imul
jns
rorl
adc
pushl
ret
movsb
or
add
rcl
inc
stos
inc
push
mov
fsts
mov
mov
sbb
ret
scas
ss
bound
dec
mov
adc
or
addr16
insl
clc
mov
orl
xchg
lret
lods
jmp
stos
inc
add
xor
cmpsl
cmp
sbb
xor
pop
inc
sbb
cld
leave
inc
testb
and
cli
sbbb
fs
out
add
lea
pop
lea
ficoms
xchg
xchg
dec
in
mov
mov
enter
dec
in
call
mov
je
jns
and
cmp
mov
jg
lahf
test
ret
inc
outsb
and
sahf
adcl
lea
adc
dec
cli
add
pusha
pop
lods
sbb
ret
inc
and
xchg
into
lock
and
lds
mov
fdivrs
std
pop
sbb
jo
sub
outsl
add
cmp
inc
pop
fnstenv
mov
out
inc
xchg
sarb
addr16
cmp
std
test
ds
shll
cmp
add
jo
cld
inc
jmp
and
bound
jecxz
ss
iret
mov
lcall
data16
imul
jp
mov
dec
stos
leave
mov
fs
fldcw
shrl
hlt
insl
mov
jo
out
adc
lret
neg
xor
and
push
je
testl
mov
inc
push
xchg
or
adc
dec
js
mov
mov
fdivrs
push
fnstsw
jnp
in
idivb
fwait
xor
or
sbb
iretw
sbb
inc
lret
mov
mov
and
xor
aaa
inc
dec
andl
and
push
add
mov
adc
push
cmp
lret
cwtl
pop
inc
mov
out
cli
mov
push
data16
fnstenv
jmp
pop
mov
cmp
cmp
cmpsl
lods
into
pop
pop
stc
xchg
scas
adc
pop
aaa
movsb
les
lahf
sub
dec
dec
jl
outsb
scas
scas
xor
out
or
cwtl
popf
icebp
mov
gs
cmp
adc
out
data16
push
or
sti
ja
ljmp
sti
cmc
jmp
or
out
mov
fstl
xchg
add
icebp
jge
mov
pop
lods
xlat
outsb
ret
or
pop
lds
adc
or
rcrb
lds
xchg
mov
sub
adc
mov
fldenv
sbb
stos
adc
arpl
rcl
adc
orl
and
mov
int
adc
jg
cmc
adc
push
xchg
negl
lds
push
add
repnz
in
or
fdivp
ret
push
pop
fstpt
fnstcw
pop
inc
loopne
mov
xlat
cli
adc
xchg
xchg
popf
xchg
fidivrl
add
and
ljmp
fsubrl
xchg
mov
mov
sub
mov
sarb
sahf
pop
mov
and
lods
je
lahf
mov
fdivl
xor
mov
add
mov
and
lret
pop
mov
and
pop
mov
xchg
pop
jb
mov
sbb
imul
shl
pop
cli
add
test
inc
jge
sbb
push
sub
dec
mov
pop
push
push
sbb
adc
outsl
pop
adc
or
sti
fwait
popf
mov
or
movsb
xchg
movsl
jne
cmc
xor
outsl
pop
adc
sbb
push
test
mov
add
push
sbb
pushf
pop
mov
inc
imul
jmp
lea
inc
xor
sub
inc
int
mov
xchg
cmpsb
aaa
jge
and
pop
dec
dec
adc
jo
rsqrtps
xchg
jl
std
jle
dec
inc
add
sbbl
push
iret
lds
arpl
push
mov
cmp
mov
outsl
jbe
fsubrp
add
faddl
mov
insb
stos
push
fistpll
test
ds
scas
popa
sub
jno
inc
mov
aad
aas
inc
xchg
pop
push
adc
inc
fdivl
jbe
rcr
xor
pop
std
add
loop
mov
movsb
testl
rcrl
iret
mov
cmp
nop
add
scas
add
inc
stos
push
pop
xlat
pop
push
cmp
jecxz
jl
inc
aaa
jle
cmp
lret
mov
sub
mov
sbb
pop
rcl
cmpsl
int3
cmc
xor
sub
xchg
mov
push
aad
call
jb
mov
pop
adc
sahf
int3
dec
cli
cmp
fwait
cmc
in
stos
mov
es
mov
jp
mov
cmp
mov
xchg
dec
addr16
out
push
lret
or
and
jnp
inc
add
adc
xchg
push
loop
jnp
dec
adc
mov
loop
sbb
sub
cld
lods
mov
into
das
inc
push
clc
xchg
sbb
mov
rorl
mov
push
cmc
and
cmovns
jne
test
divb
mov
imul
orl
leave
or
loope
xlat
add
mov
xor
jmp
xor
mov
lea
inc
jb
push
push
ret
cld
repz
mov
pop
mov
std
dec
dec
cmc
stos
pop
arpl
cmp
or
push
enter
sbbb
cmp
mov
sub
das
lea
xchg
es
or
mov
daa
sbb
xchg
frstors
push
andl
jbe
adc
jmp
xchg
mov
mov
xchg
insb
mov
mov
aaa
repnz
sbb
scas
test
test
insb
push
sub
sub
push
mov
cs
incb
mov
mov
std
sbb
xchg
in
xchg
add
jns
aas
imull
loop
repz
sbb
pop
imul
sbb
inc
movsl
out
orb
push
cmpsl
xchg
divb
mov
cmp
movsl
cmp
loopne
popf
lahf
sub
lcall
ror
mov
aam
fcmovbe
stos
or
mov
sti
int3
fldenv
addb
sub
lret
cmp
pop
jb
iret
inc
stos
mov
jge
fidivl
or
xor
mov
and
add
pop
movsl
mov
inc
mov
mov
xor
stos
dec
fildll
sub
je
push
fld
add
test
or
inc
shrb
add
push
data16
std
inc
add
push
loopne
in
sbb
pop
xchg
add
ja
dec
insb
in
cmp
inc
mov
add
inc
dec
rclb
inc
fprem1
inc
outsl
pop
jl
dec
jbe
fnstcw
xchg
fwait
add
popa
sub
jbe
lods
je
xchg
ret
arpl
js
or
test
lock
push
mov
pushf
mov
pop
in
aam
scas
shlb
jno
cld
xorl
pop
sbb
mov
mov
outsl
fildl
call
push
adc
sub
jno
dec
mov
popf
out
movsb
pop
lods
inc
ret
lods
mov
lock
mov
loop
mov
shrl
inc
insl
sbb
popf
mov
cmp
push
mov
in
out
pushl
pop
shlb
popf
adc
or
mov
arpl
pop
sub
adc
repz
sbb
daa
mov
push
sbb
fwait
mov
popf
insb
out
add
jmp
sarl
std
arpl
inc
test
jae
sub
or
mov
jmp
popf
scas
popa
fnsave
dec
stos
ret
adc
movsb
mov
in
scas
stc
ss
notl
test
xor
inc
fldlg2
or
sub
mov
lret
push
adc
inc
loope
mov
cmc
stc
xchg
push
or
push
sub
daa
inc
imull
aaa
test
fdiv
outsl
mov
daa
aam
sbb
cmc
pop
jge
test
mov
or
mov
inc
sbb
loop
leave
dec
inc
and
adc
cmp
arpl
mov
inc
ja
inc
enter
jns
mov
cmpsb
mov
fcoml
ficoml
sbb
insl
popf
aas
in
adcl
jle
mov
xor
loope
out
scas
mov
mov
dec
push
fisttpl
pop
lcall
cltd
push
or
movsl
inc
inc
std
mov
xorb
sub
clc
inc
or
out
mov
push
das
aaa
aam
xchg
scas
jns
mov
pop
out
sbb
or
imul
xlat
fnstenv
mov
mov
jecxz
xchg
pop
into
push
and
int
sarb
dec
xchg
push
int
pop
inc
jnp
js
and
fdivrl
push
sub
aad
imul
pop
mov
lahf
insb
fs
and
notb
push
fnstenv
faddp
idivb
or
cmpsb
arpl
ljmp
int
pop
dec
cmovg
jl
fmulp
lcall
aad
dec
jl
into
jl
aaa
xchg
cmp
in
mov
xchg
cs
jmp
and
inc
sbb
lods
repz
jns
dec
lcall
jge
dec
aad
and
mov
sbb
adc
fnstcw
int
xor
pop
fidivrs
aas
add
cmpl
mov
mov
push
push
movsb
lahf
cmp
and
sub
cmp
inc
xchg
cli
test
bound
test
cmp
jecxz
inc
out
insb
adc
pushf
arpl
scas
or
or
xbegin
pop
pop
inc
push
inc
xchg
mov
jne
mov
jnp
test
icebp
push
or
xchg
ss
lods
mov
pop
sti
jns
ds
push
xlat
xor
fisubl
mov
mov
sbb
sbb
lret
pop
sbb
dec
loopne
dec
lcall
int
rol
add
jo
and
dec
or
imul
sbb
in
ja
sbb
pop
push
dec
jns
rcrb
mov
sub
and
mov
inc
cmp
sbb
call
pop
sbb
xor
loopne
xor
int
ljmp
cs
cmpsb
mov
mov
imul
cmp
cltd
out
and
movsb
mov
std
mov
mov
pop
ror
xor
pop
cwtl
cmp
sti
repz
adc
in
aam
jg
jl
popa
jae
pop
lcall
push
rorb
jne
ds
rorl
loopne
cmp
add
pop
xchg
repnz
iret
nop
test
scas
sub
push
in
popa
imul
pop
push
mov
roll
in
xchg
sub
mov
in
dec
imul
jbe
imul
in
stos
mov
inc
cmp
sub
mov
adc
cmpsb
or
dec
and
pushf
and
mov
mov
rol
jg
xor
xor
out
sti
cmpl
push
add
or
out
cmpsb
add
pop
testb
mov
orb
push
rorb
cmp
sbb
push
mov
and
jg
xchg
jle
mov
add
cmp
cmpsb
rolb
data16
jno
or
mov
mov
test
lret
movsb
xchg
mov
arpl
mov
icebp
fldt
insl
inc
out
in
sbb
lahf
mov
mov
inc
subl
arpl
pushf
add
mov
or
fisubrs
out
add
mov
cmpsl
mov
dec
shlb
pop
sbb
cltd
jo
imul
sbb
ret
push
jp
popf
mov
jl
enter
xchg
xor
push
lock
cli
int3
rclb
lahf
xchg
dec
std
xchg
mov
mov
sub
add
jnp
adc
fisubrs
mov
in
xchg
scas
fxsave
dec
enter
lds
or
push
inc
decb
mov
lahf
jmp
pop
ret
out
stc
pushf
outsb
mov
push
gs
mov
and
cmpb
das
add
insb
cmpl
psadbw
push
fs
mov
push
pusha
test
in
and
add
mov
jge
sbb
popl
test
xor
xchg
dec
cmpsb
add
inc
cmp
stos
cmp
fistl
and
js
cs
shl
push
jne
jecxz
insl
mov
stos
roll
cld
dec
dec
sub
jecxz
dec
jno
repz
fcoms
bound
jle
cmp
push
xor
rcrb
dec
push
adc
push
es
loope
imul
mov
cmc
dec
inc
lea
pop
pop
jo
and
push
jmp
nopl
mov
pop
mov
push
in
js
ss
jmp
jbe
add
sbb
orb
and
leave
push
vpackssdw
js
neg
cmp
into
lcall
add
adc
sbb
cmp
mov
call
push
cltd
mov
sub
jbe
cmp
adc
imul
push
stc
popf
sbb
lret
dec
add
jmp
movsb
jmp
dec
cmp
fld
out
push
add
outsb
pushf
in
xorl
jmp
nop
jmp
or
popa
mov
fsts
cmp
je
loope
fsubrs
mov
and
adc
pushf
jl
push
cmpsl
mov
sbb
leave
push
xchg
jge
sbb
leave
push
inc
jmp
pop
popa
push
jle
xor
jge
aam
dec
xor
or
popw
inc
jecxz
or
js
std
inc
ss
inc
jo
stc
cmc
jg
rcll
lahf
rorl
stc
orb
add
test
and
mov
jns
adc
ljmp
adc
fdiv
movsb
push
and
inc
or
push
xor
mov
add
cltd
pusha
dec
sbb
js
jne
push
cmp
aam
sub
mov
popf
inc
decl
lret
int3
cld
pushf
idiv
pushf
or
aaa
push
test
and
stos
sbb
call
pop
pop
or
xchg
mov
sbb
cmp
xor
xlat
dec
add
iret
mov
cmpsl
shrb
je
mov
idivb
or
sub
sti
xor
scas
fisttpll
ljmp
dec
movb
nop
adc
xor
cmp
aas
and
arpl
xchg
test
insb
and
lods
inc
fdivrs
or
pop
xor
push
fnstsw
shrl
xor
test
cmc
cmp
add
sbb
sub
iret
lret
jl
sbb
pushf
add
sbb
mov
sub
sbb
mov
jle
aaa
adc
or
cmp
cmc
sub
aad
pop
pop
frstor
jne
sti
dec
int
mov
push
stos
cmpsl
mov
outsl
mov
mov
test
insb
das
ljmp
in
int3
je
ret
int3
xor
lahf
xchg
out
icebp
jp
pop
cmp
adc
inc
mov
dec
les
xchg
mov
cmp
test
sub
aaa
mulb
push
lock
cmc
add
adc
cwtl
sbb
cli
mov
dec
xorl
movsb
sbb
sub
fwait
repnz
jecxz
xor
dec
xchg
imul
testb
std
mov
jno
adc
arpl
into
jge
push
mov
sbb
iret
fistpl
mov
pop
js
div
pop
xchg
sub
push
mov
xchg
outsl
dec
sbb
xchg
xor
sbb
mov
dec
sti
cmp
into
xlat
push
das
int3
es
insb
fildll
add
stc
jg
jnp
xchg
pop
dec
jecxz
lcall
out
cmpsl
pop
shll
out
cmp
xor
cltd
stos
or
subl
sahf
and
pop
fisttpll
loopne
repnz
mov
pop
lods
dec
in
sbb
xchg
or
pushf
cwtl
xor
cmpsl
sbb
add
sub
jle
xchg
adc
or
and
insb
mov
jecxz
push
lret
fld
shlb
pop
cmp
sub
cmc
xlat
mov
out
mov
sub
sbb
or
xor
pusha
ljmp
mov
push
mov
mov
mov
sbb
popa
out
fs
mov
sub
add
icebp
sbb
dec
dec
incb
xchg
fsubs
add
nop
inc
lds
pop
fs
cmp
ljmp
and
stc
int
lahf
mov
push
pop
adc
frstor
pop
iret
dec
popf
pushf
lahf
idivl
and
cltd
mov
mov
ja
dec
inc
arpl
jae
movsl
jge
jo
add
cmp
sti
bound
shlb
dec
imul
push
sti
mov
cmpsl
inc
jg
sub
xchg
mov
mov
sub
push
dec
dec
outsl
je
inc
and
and
xchg
scas
push
mov
mov
lcall
pop
les
gs
xor
dec
int
mov
imul
insl
mov
imul
pop
cmp
adc
cmc
adc
fwait
pop
sbb
add
fistpl
stos
sti
or
popa
fbstp
sub
jle
push
out
fs
lods
jno
mov
sub
iret
cmp
mov
add
dec
add
ds
jl
imul
iret
push
ljmp
xchg
add
sbb
and
cmp
add
pop
jmp
adc
pop
imul
mov
mov
jae
loope
push
out
jne
xchg
dec
inc
icebp
fs
les
call
ljmp
xchg
stos
cmpsl
hlt
insl
or
arpl
ja
loopne
clc
push
dec
cmp
adc
pusha
or
cltd
rorl
cld
push
mov
cmpsb
push
nop
nop
pop
jae
mov
fidivrl
sarb
sbb
divl
add
sahf
pusha
mov
push
js
inc
stos
pusha
pop
pop
or
xor
scas
sub
outsl
data16
or
aaa
mov
mov
cs
cmp
sti
es
lret
fs
mov
pop
jo
push
arpl
mov
mov
filds
sub
dec
insl
loop
std
xlat
inc
jge
cmp
xchg
sahf
jecxz
mov
fstl
shlb
push
dec
jo
jne
mov
cmc
push
add
test
leave
pop
inc
xor
fmul
xchg
pop
aad
cmpsl
mov
sub
mov
fnstenv
push
xor
jae
mov
mov
cltd
in
jle
dec
arpl
jb
jge
scas
sahf
and
jno
testb
orb
cmp
xchg
mov
loop
ret
popf
sub
or
sub
cltd
ret
jmp
cmp
cmp
push
mov
les
rcr
repz
rol
mov
push
mov
fidivl
jge
mov
mulb
je
mov
sarb
enter
push
lods
daa
rolb
inc
xor
js
dec
jl
push
rcrb
jb
cmp
int3
sub
xchg
cmp
inc
xchg
mov
out
lods
ficoms
jl
adc
mov
push
and
cmpsl
fsts
inc
mov
sarb
xchg
fstps
dec
pop
adc
and
pop
xlat
iret
xchg
or
mov
and
adc
scas
jns
cmpsb
leave
ljmp
out
add
add
icebp
shr
xor
add
push
push
or
sbb
push
inc
cmp
and
sbb
sub
jg
lret
pop
dec
dec
ret
pop
sub
inc
sub
loope
cs
push
insb
lahf
imul
jae
ret
aad
jno
jg
pop
mov
shll
popl
sar
push
jno
jb
sahf
sbb
add
hlt
bound
scas
xchg
inc
insb
imul
push
xchg
fdivrl
scas
andb
cs
mov
pmulhuw
test
pop
jno
xchg
les
popa
xor
hlt
andb
roll
dec
cmp
out
inc
imul
jp
lcall
mov
jno
sub
ds
or
dec
loope
add
stos
mov
sar
cld
ds
inc
clc
cmp
jno
mov
or
jg
stos
pop
fidivs
sub
sub
mov
dec
or
call
sbb
add
addb
sub
push
sbb
pop
movsb
add
adc
imul
xchg
sbbb
jno
xor
leave
fadds
fisttpll
mov
mov
add
in
repz
add
jg
lea
mov
fwait
into
das
dec
fsubl
adc
sub
clc
xor
data16
aad
jge
movsl
sbb
lahf
pop
aaa
push
iret
push
jle
sub
xor
arpl
and
sub
add
or
mov
pop
ds
xchg
inc
in
das
cld
xor
or
mov
xor
jbe
jg
aad
imul
in
shrl
arpl
in
lret
enter
xchg
mov
adc
pop
adc
test
cmp
dec
lret
adc
xchg
lds
popf
ret
daa
jg
or
lds
repz
mov
inc
jae
mov
mov
mov
cmp
sub
adc
dec
sub
jg
mov
pop
mov
std
jmp
pop
insl
xchg
xorl
xor
cmp
shll
jl
mov
cmp
jbe
fidivrs
inc
or
push
sbb
xlat
lea
and
adc
roll
ret
dec
xchg
sbb
lds
fdivrp
jns
mov
movsl
pop
push
mov
fistpll
jae
inc
fisubrl
mov
in
int
arpl
outsl
fcomps
push
pop
rolb
mov
jbe
and
scas
sbb
mov
xlat
test
mov
dec
or
stos
pop
and
testb
xchg
push
notb
xor
cli
nop
loope
mov
xor
ret
or
xlat
dec
push
dec
push
dec
or
fsubs
adc
jle
inc
clc
xchg
jbe
fnstsw
xchg
push
pop
mov
push
aam
movsb
pop
pop
adc
xchg
ja
push
jnp
inc
fdivr
jg
addr16
jp
mov
mov
lds
jne
lods
add
add
ljmp
mov
imul
mov
and
sbb
xchg
scas
or
int3
jp
push
pop
jge
testl
not
and
mov
jbe
mov
xor
fs
xchg
push
aaa
insb
dec
jb
dec
push
sbb
and
pop
jg
and
push
mov
inc
aad
test
mov
or
adc
add
or
jns
test
fisubrl
insb
in
iret
std
aam
inc
fsub
xor
mov
add
xchg
mov
cmp
out
xor
nop
aam
out
jnp
shr
mov
adc
test
sub
int
inc
cmp
adc
jne
sub
jne
xor
or
mov
sub
cmp
lcall
cmc
sub
aaa
outsb
lret
and
out
daa
xlat
jns
add
cmp
push
push
addr16
add
lahf
mov
cli
push
xchg
xor
and
fildl
aas
jge
add
nop
mov
xorb
fisttps
mov
addb
xchg
cwtl
push
ja
out
notb
cltd
inc
sbb
test
inc
mov
std
in
inc
sbb
or
pusha
mov
jmp
out
mov
and
inc
ret
fwait
iret
das
pop
inc
lock
sub
lods
jge
lods
sbb
test
lahf
movsl
sub
cmp
lahf
dec
sbb
iret
loop
adc
jne
mov
and
push
inc
mov
js
inc
in
push
xchg
out
mov
rorb
lret
push
je
inc
mov
sbb
in
lret
fnsave
xor
adc
pushf
cld
add
jg
mov
push
jp
jl
mov
add
sbb
mov
mov
push
jo
outsl
adc
add
xchg
popa
fisttpl
in
fdivr
imul
push
cli
add
or
xchg
push
sub
sbb
cltd
adc
std
add
pop
stc
push
shrl
rcrl
xor
loopne
pop
pop
pop
in
insb
or
mov
and
idivl
stos
pop
fsubs
cwtl
push
mov
in
jo
setp
sub
or
fndisi(8087
inc
push
xchg
xor
push
sbb
leave
push
mov
lahf
stos
out
mov
xchg
je
xchg
adc
das
test
stc
jge
fsubp
in
xchg
stc
dec
iret
xchg
movsb
iret
jbe
push
ja
add
mov
and
stc
in
mov
cmp
mov
adc
pop
mov
fadds
sbb
loopne
dec
in
loope
cmc
shrb
jecxz
out
pop
lea
push
in
sbb
in
or
pusha
cmp
cmp
xorl
mov
pop
cmp
data16
and
adc
test
lahf
data16
sbb
cvttps2pi
sbb
ja
test
call
das
fbld
ja
lock
fidivrs
rolb
popa
push
cwtl
ja
mov
lahf
push
lea
push
mov
jmp
pop
in
dec
jo
mov
imul
or
jns
or
enter
sahf
ret
sbb
cmp
out
in
out
push
xchg
pop
xchg
aaa
fnsave
daa
mov
aad
je
in
clc
mov
jne
or
call
xchg
add
test
fucomi
jle
out
mov
arpl
loope
in
xchg
and
or
jnp
lret
and
lcall
pop
cs
into
pop
cli
pop
cmp
or
mov
xchg
loope
mov
sbb
xchg
xlat
popf
mov
push
sub
stos
shll
incl
push
cmp
xchg
stos
andl
jnp
sub
dec
or
inc
and
in
arpl
and
imul
jnp
xlat
xor
stos
bound
lcall
je
scas
jo
push
xor
rorl
js
and
xor
sti
shrb
imul
dec
loope
and
push
jae
sub
push
mov
seto
jp
add
in
add
mov
mov
and
mov
jge
push
stc
stc
mov
popf
movsl
pop
adc
or
or
push
jnp
out
sub
sub
mov
mov
xchg
rcrl
sub
pop
cmc
adc
inc
mov
lcall
mov
cli
cmp
mov
fsincos
jbe
idivb
mov
add
sub
outsl
fdivl
add
mov
and
inc
mov
fidivrl
ja
xlat
lods
xor
xchg
icebp
xor
clc
shr
enter
les
lret
fcomi
inc
push
push
push
mov
loop
in
subb
mov
or
and
mov
mov
pusha
daa
and
into
daa
fwait
inc
push
and
je
roll
and
daa
and
inc
out
mov
mov
stos
test
cld
lcall
or
sbb
and
cwtl
lock
adc
pop
out
push
mov
lcall
mov
adc
addl
lcall
cltd
sbbb
test
adc
cs
insl
and
cmp
push
adc
scas
loope
pop
push
and
add
int
mov
cmpl
sbb
lods
mov
icebp
sub
adc
xor
jo
shrb
into
inc
outsb
sub
les
mov
mov
sub
in
mov
out
int
jp
aas
pop
xor
cmp
mov
stos
mov
sub
xor
sub
jle
lea
adc
cwtl
inc
or
loopne
jo
mov
jp
dec
push
mov
das
jle
repz
add
pushf
subl
pop
sub
je
mov
dec
xor
pop
add
in
or
cmp
xchg
hlt
mov
sub
and
xchg
arpl
aad
sbb
arpl
mov
into
add
out
pop
push
iret
pop
add
add
cmp
ds
lods
pusha
clc
and
jns
xchg
mov
jae
cmpsl
push
pop
dec
adc
xchg
div
sahf
ficoml
ja
xlat
adc
std
enter
push
adc
aad
xor
or
lods
shl
dec
or
pop
add
push
add
adc
into
inc
test
pusha
out
adc
mov
sbb
fdivr
lret
incb
leave
and
std
pop
out
mov
inc
pop
sbb
sahf
ret
int3
push
sub
dec
out
xchg
fcmove
adc
xchg
push
leave
fcoms
cmp
mov
jo
jg
cmp
fs
imul
xchg
popf
repz
or
and
xor
scas
fsubs
dec
imul
fsts
or
popf
dec
xchg
cmp
repz
add
addr16
lds
inc
rcll
push
sbb
and
loope
leave
lods
daa
test
lea
or
in
mov
xchg
mov
cmp
xor
push
pop
lcall
sub
insl
out
jmp
shll
pusha
mov
data16
cmp
or
inc
inc
addr16
pop
xchg
stos
hlt
sub
adc
es
pushf
cmovae
inc
sarl
shll
push
iret
aam
lds
dec
in
int3
sti
mov
mov
add
dec
push
lcall
push
fwait
shll
cmpsb
push
call
idivb
sub
sub
xchg
cmpb
xchg
and
push
push
sti
and
arpl
call
mov
cmp
jg
ret
mov
cltd
loopne
fsub
xchg
out
mov
xorb
push
in
fwait
jne
add
xor
aas
sbb
xchg
fcmovb
mov
imul
mov
lods
mov
xor
pop
jmp
into
xorl
pop
jg
bnd
xchg
sub
repz
iret
jmp
shlb
adc
fucom
jae
push
repnz
pusha
loope
adc
movsl
cmp
cmp
mov
ret
or
into
das
jnp
jmp
je
int3
cmp
testb
leave
ret
lods
subl
enter
ljmp
fcomi
inc
inc
rcr
adc
add
pushf
or
loopne
dec
or
mov
sbb
repz
shl
dec
sbb
outsb
stc
lcall
pushf
divb
inc
push
cmp
xor
bound
jbe
pusha
mov
ljmp
je
aaa
push
jnp
stos
pop
jnp
sbb
aaa
lret
aam
cmp
and
inc
mov
test
mov
cli
stos
int3
movsb
leave
xor
dec
aas
and
jae
jbe
enter
mov
jge
sbb
mov
std
loop
jle
or
adc
mov
js
mov
ja
gs
lds
mov
into
push
inc
sahf
jo
fimuls
sbb
mov
test
mov
loop
dec
enter
imul
inc
fucomi
sahf
scas
sbb
push
into
cwtl
jns
insl
call
lds
and
pop
inc
and
cmp
adc
or
adc
jae
cmpsl
or
jbe
push
pop
insl
out
outsl
pop
xchg
dec
push
std
mov
pushf
ret
xor
xor
mov
dec
shlb
rcll
or
mov
pop
mov
scas
loop
xchg
mov
sub
mov
xor
xor
out
ret
xlat
js
xor
outsb
lcall
push
add
add
notb
xchg
adc
ret
icebp
jle
imul
jne
jae
xchg
call
sub
pop
add
les
imul
pop
addl
enter
cmpsl
inc
push
dec
ret
xor
into
clc
push
jp
bnd
inc
in
call
dec
imull
pop
pop
lahf
cmp
mov
gs
int
mov
arpl
jno
jp
inc
mov
adc
adc
addl
ror
mov
pop
cmp
ret
add
popf
cld
jbe
cmc
pop
mov
cmp
add
bound
cmp
ljmp
test
xlat
cmpsb
je
jp
in
adcl
dec
xor
xchg
push
lds
dec
daa
xlat
or
ljmp
cli
aaa
jne
sbb
sbb
mov
push
fnstsw
in
cld
sti
sbbb
mov
cmc
mov
insl
cmp
push
loope
sbb
jmp
divl
push
sbb
xor
or
sbb
or
adc
add
mov
xor
scas
clc
push
outsb
int
push
addb
popf
mov
daa
jne
xlat
mov
out
out
dec
lret
mov
jg
cli
lcall
ljmp
add
jo
xor
xchg
jbe
shlb
mov
or
sbb
lret
loope
sub
cltd
push
incl
sbb
movups
or
ret
dec
out
jg
pop
sahf
mov
data16
xor
adc
xchg
ret
clc
pushf
mov
cmpb
shlb
push
sub
pop
imul
xchg
out
sbb
adc
das
dec
in
mov
nop
out
movsb
repnz
mov
xchg
movsb
std
push
pushf
sbb
scas
lahf
cli
out
mov
out
cmpb
mov
push
xor
mov
xchg
push
into
repz
scas
rcrb
cmpb
jmp
fstpt
faddl
xor
pushf
inc
sbb
bound
pop
mov
xchg
xlat
jae
add
ds
and
pop
mov
cmpsl
jmp
inc
cmp
stos
subl
icebp
push
loope
sarb
mov
into
stos
loop
stos
iret
jp
or
dec
xlat
jbe
sbb
pop
daa
jno
or
jno
adc
jne
repnz
sarl
iret
cli
lcall
mov
cmp
jmp
cmp
daa
sub
insb
out
into
jge
mov
mov
and
cmpsb
sbb
jo
in
fxch
hlt
daa
mov
sahf
repnz
dec
sbb
mov
inc
and
test
xor
call
lock
fwait
std
adc
aad
in
push
into
inc
xchg
jb
fistpll
xchg
mov
mov
jb
jl
insb
aas
jmp
cld
inc
cwtl
mov
mov
xor
xor
scas
hlt
sbb
add
jb
pop
andb
out
shrl
mov
adc
xchg
inc
sub
out
enter
in
cwtl
hlt
adc
mov
mov
or
lret
scas
inc
cli
sbb
xor
pop
das
mov
sbbl
insl
lock
sti
jge
cmpb
or
arpl
mov
mov
pop
cld
shrb
ljmp
xlat
mov
push
inc
mov
ljmp
cmp
push
outsl
bound
lods
lea
xchg
adc
shlb
sub
adc
xor
aad
hlt
push
and
dec
rclb
outsl
vandnps
psubw
mov
shr
test
xor
fsubr
jbe
push
xchg
xor
and
fldcw
pop
xchg
dec
test
aad
sbb
orb
std
lock
mov
mov
lret
pop
mov
std
test
jae
cmp
in
adc
rcll
es
xchg
pusha
mov
repz
clc
mov
or
push
mov
mov
test
ljmp
or
sti
and
scas
lret
std
rcll
adc
pop
pop
dec
fistpll
dec
dec
adc
movsb
test
adc
xor
cld
fiadds
pop
pop
jne
inc
jle
push
cmp
cltd
add
int
loopne
das
pop
in
sbb
fimull
jge
loop
push
test
daa
mov
pop
cwtl
shl
insb
std
call
mov
mov
ret
fsubs
push
dec
cmp
inc
in
mov
inc
pop
jl
jnp
push
sti
or
or
mov
adcb
lods
ja
stos
lret
inc
adc
test
rep
mov
jmp
or
int3
mov
push
push
ljmp
add
movsb
insb
push
orl
jmp
out
xchg
jns
ljmp
repz
and
and
arpl
clc
cmp
ljmp
xchg
les
loopne
cmp
xorb
push
cbtw
xchg
stos
scas
mov
push
mov
ret
movl
movsb
mov
cmp
fwait
pop
jle
cmp
outsl
test
and
adc
call
dec
cmp
mov
movsl
push
inc
sub
hlt
imul
nop
push
adc
push
xchg
test
sub
mov
in
enter
xchg
inc
xchg
rol
gs
or
adc
es
call
jl
push
lret
sub
stc
mov
pop
loop
push
push
cmpl
mov
and
xchg
xor
je
dec
psubd
call
rcll
inc
pop
mov
mov
pop
sarb
or
mov
out
cmc
mov
dec
inc
sbb
dec
jno
mov
int
push
mov
pop
rclb
mull
adc
mov
xor
push
mov
cmp
loope
xchg
lahf
mov
cmp
and
call
inc
lods
fcmovnu
test
ljmp
in
repz
push
jae
mov
icebp
je
test
cmp
and
iret
jnp
rcl
jmp
js
jp
jne
or
adc
add
jns
add
cmp
test
pop
addr16
mov
in
sub
sub
das
pop
out
enter
fwait
andb
subl
sahf
or
test
push
mov
loopne
cmpsb
shr
mov
out
mov
and
mov
pop
loope
mov
push
mov
xchg
jmp
dec
imul
jae
rcll
leave
sahf
es
notl
inc
add
outsl
enter
inc
cmc
pop
loopne
adc
jecxz
ror
adc
push
inc
mov
ret
test
push
lcall
inc
cmp
sbb
xor
ss
inc
add
add
or
sub
mov
fcoml
fcomp
shrb
jg
xchg
dec
hlt
or
call
mov
and
push
xor
sub
inc
sub
jb
push
jge
dec
jle
insl
iret
cmpb
gs
adc
ljmp
dec
daa
leave
in
or
mov
out
jno
push
add
or
out
icebp
cmp
arpl
pop
xchg
hlt
adc
dec
add
les
inc
pop
leave
cmpsb
xchg
lret
push
test
jo
clc
je
mov
adcb
mov
mov
call
ret
push
push
cmovg
test
inc
fcomp
sub
nop
sbb
cmp
cmpl
or
loopne
push
mov
int3
dec
dec
lock
push
and
and
jmp
test
ucomiss
popa
aad
es
push
setne
xor
int3
mov
mov
push
dec
test
clc
pop
dec
aam
push
inc
mov
inc
inc
sar
sub
lock
sbb
ss
push
scas
fstpt
out
cmpsb
fcompl
into
lcall
test
andl
push
in
dec
cmpsl
or
fdivr
adc
sub
aad
add
jg
xchg
sub
jge
idivb
icebp
int
sti
or
cwtl
push
popf
add
mov
iret
adc
int
shl
loopne
pop
arpl
out
xlat
add
inc
cli
dec
dec
jnp
dec
loope
fs
xchg
aas
jl
pop
popl
mov
inc
int
in
push
and
jp
repnz
adc
cmp
lock
mov
sbb
xor
es
mov
add
je
or
pop
pop
lods
fstpt
iret
js
ds
xor
sti
stos
xchg
push
dec
and
mov
out
pop
pop
sbb
in
sbb
popf
lea
aad
leave
mov
mov
sub
popa
jg
icebp
repz
add
add
lret
in
dec
out
sbb
mov
xchg
aam
mov
fs
xlat
inc
add
ljmp
lds
sub
push
pop
stc
xchg
sub
inc
out
fisubrs
mov
cmp
dec
mov
rcrb
in
sub
push
icebp
jo
jo
test
mov
adc
hlt
jp
xor
xor
or
insl
or
xor
mov
or
inc
adc
sbb
cmp
dec
out
test
ficomps
aas
popa
lods
push
lret
inc
aad
enter
dec
and
push
test
cmpsb
cld
pop
inc
xchg
mov
enter
pushf
test
sbb
outsl
scas
test
ficoms
jecxz
and
cmpsb
cmp
mov
inc
lahf
add
and
loope
or
mov
dec
cmp
test
push
mov
mov
mov
pop
dec
les
xor
inc
inc
pop
adc
or
mov
and
mov
inc
xchg
and
mov
sbb
sub
test
sub
js
add
pop
xchg
mov
push
out
xlat
fisubrl
mov
into
sbb
sub
iret
or
cmp
movsb
dec
mov
divl
and
pop
push
dec
fwait
rolb
dec
in
sbb
mov
mov
lret
jne
shl
int
lds
notl
cmpsl
inc
xor
call
out
lea
stos
mov
pushf
nop
pop
sbb
mov
ret
inc
jno
inc
popa
jmp
cmpl
or
and
adc
xchg
push
jo
addr16
cmc
jge
sahf
push
mov
outsb
push
fistps
dec
jl
sbb
repnz
xchg
into
inc
push
xchg
and
lods
inc
ljmp
mov
add
cli
das
mov
cmpsl
jne
js
popf
insb
fcmovbe
ret
dec
inc
mov
jns
ret
mov
sub
mov
outsb
sub
xor
pop
daa
or
xchg
and
adc
push
dec
cmp
pop
rcrb
xchg
fwait
adc
out
test
dec
mov
pop
and
mov
sub
lods
mov
popa
cld
cmc
dec
int3
iret
repnz
inc
jns
aas
mov
adc
sarl
cwtl
jg
push
loopne
fsubl
fdivs
gs
fisubs
sahf
mov
gs
jns
call
mov
push
sub
loop
andl
add
out
xchg
add
sbb
movsb
and
cs
addr16
mov
bound
leave
int3
mov
mov
and
mov
leave
add
xor
shrb
stc
lods
cmp
pop
cltd
xchg
addr16
jmp
pop
dec
pop
addb
xor
pop
and
out
sub
rcr
xor
adc
pop
mov
push
cmp
stos
add
mov
mov
into
add
xchg
js
pusha
fstl
scas
outsl
mov
xchg
lds
lods
pop
jno
mov
push
inc
cmp
in
cmp
adc
subl
enter
add
sub
imul
or
mov
cmpsb
fldt
add
std
sub
push
scas
dec
sbb
add
js
add
mov
imul
xchg
insl
fstl
push
xchg
and
pop
into
stos
mov
bound
fsubrs
sub
scas
lcall
cmp
cmpsb
ljmp
cmp
iret
popf
jl
adc
iret
test
add
jg
outsb
jbe
xchg
out
or
in
hlt
outsb
xchg
jb
enter
cmpsb
mov
cmp
xor
adc
mov
push
jge
adc
and
in
mov
mov
sub
jb
outsl
or
les
ljmp
or
cmc
mov
mov
mov
adc
clc
mov
dec
add
pop
fldcw
xor
sbb
aaa
xchg
jg
xlat
mov
ds
xchg
movsb
out
jne
inc
sub
push
push
icebp
push
mov
dec
repz
pop
fs
loope
inc
bnd
into
nop
outsb
loopne
or
fdivrl
and
clc
mov
push
and
cmpl
xchg
xor
mov
insl
and
cmp
mov
fdivr
enter
xlat
xchg
jge
test
in
pop
adc
sbb
jno
push
loop
hlt
push
fwait
add
adc
cmc
adc
jo
mov
fisubrs
dec
mov
rorb
pop
iret
ljmp
cwtl
xlat
in
xor
stos
mov
and
pop
push
addr16
scas
arpl
lcall
inc
pop
sbb
sahf
outsl
dec
dec
cli
ss
or
loop
sbb
sub
cltd
insl
aas
addr16
and
aas
cmp
inc
jg
sub
in
pushw
repnz
lds
add
xchg
shll
or
rorl
xor
add
mov
mov
lds
or
clc
mov
cmp
loope
jecxz
stos
mov
mov
cmp
jnp
mov
mov
adc
sahf
cwtl
sub
roll
mov
and
cmp
sahf
fldenv
mov
test
nop
scas
std
adc
xchg
imul
xchg
xlat
mov
inc
inc
loop
xor
jmp
xchg
fsubr
lds
fisttpll
sub
test
lods
mov
dec
xchg
pop
mov
mov
incb
mov
ret
xchg
imul
lret
adc
gs
outsb
fmull
insb
push
roll
mov
push
arpl
outsb
push
dec
fsts
mov
dec
fstl
subl
xchg
inc
jo
cmpsl
mov
imul
xor
dec
jb
mov
in
fnstcw
mov
mov
fiadds
enter
je
fisttpl
aam
cmp
adc
out
or
lcall
jne
dec
popf
mov
dec
aas
mov
and
imul
cmp
mov
pop
push
fs
or
hlt
inc
push
adc
cmp
leave
mov
iret
ljmp
movl
xchg
out
and
test
dec
cli
add
dec
ds
stos
clc
popf
push
pop
iret
sahf
xchg
ret
dec
shl
jge
pop
pop
into
jecxz
hlt
jecxz
es
rorl
loop
shl
mov
dec
pop
dec
stos
and
cmp
or
inc
daa
sbb
or
cmp
sub
pop
push
std
mov
je
sub
mov
jg
bound
shl
adc
and
ja
clc
mov
lock
and
jno
lds
sbb
out
or
jp
insl
cmc
aad
das
in
in
push
ss
pusha
xlat
aaa
and
pop
jp
xchg
add
inc
inc
inc
and
jbe
xor
xlat
jl
ret
lods
out
push
ret
leave
push
pop
push
pop
inc
jae
dec
pop
jnp
sbb
cmpsb
adc
popa
fimull
pop
sub
adc
call
mov
clc
pop
sub
and
out
imulb
shl
add
ljmp
into
scas
inc
and
inc
cld
cmp
push
xlat
addr16
and
dec
jmp
xchg
test
xor
or
and
sbb
fxch
mov
loop
lret
loopne
jne
push
xchg
pop
sub
push
and
dec
sub
iret
xchg
jnp
xor
ret
xor
movsl
movsb
push
sub
pushf
popa
hlt
or
push
test
mov
insl
out
fcmovnb
cmp
xor
push
sarb
stos
jb
std
rol
sti
arpl
lods
fbstp
das
int3
ja
insl
pushf
and
inc
sub
test
cwtl
in
dec
loopne
jne
sbb
cmpsb
jne
out
out
dec
mov
adc
adc
pop
pop
sbb
inc
push
cmp
jo
cmpsl
sbb
in
adc
push
adc
repnz
out
add
or
cmpl
movsb
dec
or
and
int
loope
and
leave
enter
mov
inc
xchg
cltd
xlat
fs
test
cmpsw
sbb
adc
add
cmp
xchg
aas
loope
and
dec
ja
repnz
jmp
sti
movsb
cmc
adc
cli
ljmp
ror
pushl
sbb
sbb
mov
xchg
inc
pop
sbb
xor
mov
jo
shll
mov
xchg
mov
fimull
cli
lret
pop
imul
bound
test
inc
jns
out
adc
leave
or
std
repnz
add
shlb
inc
call
push
inc
dec
cmpsb
sahf
sub
movsl
push
inc
mov
out
push
aaa
xor
mov
pop
fwait
loop
jno
insb
cmp
rcll
mov
in
iret
push
fsubrl
shlb
pop
add
xlat
loope
pop
xchg
xchg
lods
jle
adcb
insb
and
dec
pop
popf
shl
jmp
inc
imul
sti
mov
out
mov
push
fdiv
shrb
adc
mov
cltd
in
out
scas
je
daa
int3
addb
lret
or
daa
jbe
cmpsl
out
in
jns
jecxz
dec
sub
mov
cltd
ret
pop
xor
stos
mov
add
icebp
xchg
mov
cmp
push
dec
dec
ss
lahf
mov
push
mov
inc
stos
repz
or
inc
adc
dec
sbb
jne
dec
mov
sbb
lret
and
xchg
sub
sbbl
in
dec
lcall
cltd
cmc
insb
pop
adc
adc
dec
hlt
pop
pop
repnz
push
loopne
stos
cmp
cli
std
dec
jecxz
scas
xor
sub
enter
add
mov
pushf
jo
add
outsb
popl
js
scas
sub
loopne
repnz
jno
hlt
and
cs
fchs
scas
mov
xor
mov
repnz
imul
xor
cmp
add
ja
testb
adc
dec
sbb
pop
and
xchg
adc
xchg
rol
lahf
and
negl
pop
inc
xchg
ja
cltd
shll
imul
iret
lea
inc
sbb
sub
mov
mov
add
dec
cli
adc
cmpsl
and
daa
inc
pop
jmp
cltd
xchg
mov
leave
pop
call
xchg
idiv
and
cmp
or
cmp
dec
gs
dec
push
aam
mov
fbld
in
fnsave
xchg
bound
cmp
pop
in
adc
add
rcr
push
add
subl
cli
mov
xlat
adcb
sub
lock
fstp
lret
stos
dec
jae
mov
inc
pop
jne
outsb
into
sarl
dec
sahf
lcall
sti
outsl
inc
add
lods
mov
sbb
xor
mov
dec
rcll
stc
insl
flds
push
jl
jmp
hlt
jecxz
ljmp
pusha
inc
xor
scas
push
lock
imul
xor
lret
cli
scas
sarl
and
xchg
sub
xchg
xchg
pop
mov
xchg
mov
test
mov
cmc
jle
frstor
ss
sbb
int3
inc
cmpsb
jl
or
mov
pushf
lds
js
nop
repz
dec
movsl
cmp
push
ret
std
cltd
jg
cmpsb
js
or
imul
ficompl
dec
xchg
push
cld
mov
hlt
xor
loope
inc
dec
out
out
add
sti
push
push
repnz
mov
frstor
lods
mov
sbb
pushf
cmp
mov
xor
call
int3
or
movsl
lret
pop
cwtl
cmpsb
push
mov
cwtl
mov
fneni(8087
pop
flds
xchg
pop
xchg
xchg
pop
ret
xchg
stos
push
push
outsb
mov
jg
mov
mov
adc
cwtl
addl
ret
cmp
mov
lret
mov
and
out
outsl
test
and
inc
mov
test
sbb
xor
push
fsubl
pop
daa
pop
pop
push
fmull
xor
add
daa
add
inc
lret
xor
cmp
mov
xchg
sub
fiaddl
loopne
scas
sub
sub
sub
nop
movsl
cmc
shrb
jnp
jl
jae
dec
pop
mov
sbb
arpl
push
inc
cmp
push
les
mov
dec
nop
loopne
in
mov
jl
loopne
outsb
xor
mov
mov
xchg
jae
test
bound
inc
cltd
bound
xor
and
sbb
sbb
ljmp
pop
leave
fistpl
mov
xor
les
ljmp
inc
neg
mov
and
stos
aaa
movsl
jp
jl
jb
dec
std
jo
stc
sti
in
fnop
inc
cmp
shrb
add
xchg
adcl
ror
xchg
repz
lods
lods
pop
mov
add
sub
or
ljmp
push
mov
scas
fsub
mulb
pop
and
sbbb
sbb
cmp
sbb
sbb
fisttpll
adc
mov
lea
movl
push
into
jge
sub
push
notb
repz
fidivrl
leave
repnz
push
shll
jmp
orl
sbb
cmp
inc
cmp
ss
fisubrs
popf
icebp
fsubl
jmp
rolb
pop
mov
mov
add
jg
aam
mov
dec
push
mov
movl
insl
arpl
and
out
jnp
mov
mov
xlat
inc
movsb
hlt
pop
shrb
fisubrs
xlat
stos
test
dec
pop
sbbl
sbb
into
or
fs
sbb
dec
adc
cli
popa
stc
jno
pop
std
mov
movlhps
mov
fldt
jbe
mov
shll
mov
xor
jmp
sbb
mov
pop
out
xor
xchg
cwtl
ret
nop
mull
jo
jl
arpl
movsl
pop
jnp
repz
jbe
data16
nop
inc
imul
pop
test
loop
cli
int3
push
jbe
imul
fisttps
out
in
les
adc
in
gs
xor
cld
push
int3
je
bnd
ret
out
mov
inc
pop
xor
mov
outsb
pusha
mov
cmp
sbb
push
stc
cmp
mov
mov
arpl
dec
cmpsb
pop
sub
cld
xchg
and
in
jno
out
sar
adc
pop
and
pop
popa
inc
das
mov
leave
mov
mov
nop
mov
xchg
shr
add
or
jns,pt
xchg
and
push
dec
or
add
es
add
stos
leave
mov
ljmp
mov
cmpsb
mov
or
gs
sarb
test
in
or
or
imul
xchg
add
cmp
xchg
loopne
lock
ret
cmp
ljmp
inc
and
cltd
js
loope
mov
sub
or
push
dec
call
jge
push
push
pop
bound
std
hlt
xorb
cmp
pop
call
or
subl
movsb
mov
mov
loopne
cld
ja
and
push
hlt
mov
clc
hlt
movsl
xor
dec
loopne
sub
mov
leave
outsb
sbb
lods
sahf
imul
jge
mov
imul
data16
and
movb
test
rorb
pop
mov
daa
xchg
add
and
shll
dec
repz
dec
loop
pop
loope
sub
or
jo
outsb
arpl
enter
cli
sub
jo
fdivs
xchg
jmp
cmpl
push
jmp
lret
xor
or
addl
nop
or
mov
fsubl
xchg
mov
jp
hlt
pop
orl
les
out
out
jp
xchg
or
cmp
adc
jae
sub
cmpsl
xchg
jnp
jg
pop
push
adc
iret
lret
aam
es
and
loopne
test
jecxz
inc
xchg
xorl
jno
add
aas
in
loop
popa
mov
dec
mov
dec
mov
push
push
adc
int
je
pop
outsb
xor
loopne
lret
push
cs
clc
push
and
ljmp
loope
mov
stc
rol
in
and
insl
xchg
pushf
bound
xor
insb
cmp
pop
and
xor
pop
mov
pop
sub
les
cmp
lock
mov
push
sub
in
pop
lods
sbb
xchg
cmp
ljmp
adc
mov
adc
js
or
pop
leave
lods
repnz
mov
aaa
repnz
gs
mov
jbe
lcall
pop
stos
ret
dec
arpl
mov
xchg
stos
jo
and
stc
rolb
or
in
lods
scas
cmp
xchg
mov
pop
mov
fiadds
test
out
sahf
xor
sub
jecxz
sarb
mov
subb
outsl
jb
adc
mov
fs
dec
je
xchg
cmp
pusha
sub
mov
dec
jne
cmp
out
push
adc
adc
adcl
int3
cld
jne
cmp
outsb
mov
jp
xlat
sbb
sahf
insl
push
sub
enter
push
lods
repz
dec
mov
lret
std
cmp
jb
mov
mov
insl
lcall
push
loope
push
pop
jecxz
ficompl
mov
mov
ss
xor
test
scas
cli
and
rorl
mov
xor
mov
pop
mov
adc
stos
sub
adc
or
les
pop
jmp
mov
mov
lahf
cmpsb
push
inc
test
push
cmp
test
scas
lock
xlat
push
mov
pop
pop
mov
cmp
add
pop
push
mov
cmpsb
nop
push
jp
jbe
xor
mov
inc
test
jmp
mov
cmp
mov
into
xchg
out
int3
pop
and
rcll
subb
or
mov
add
pusha
loop
push
ss
or
jnp
cmp
cmp
mov
das
xlat
stc
mov
ja
mov
cli
hlt
mov
clc
lock
jmp
jle
xchg
imul
std
int
xchg
pop
scas
mov
pextrw
adc
fstps
loopne
outsb
cmp
xchg
sbb
pop
mov
lds
fdivl
insb
cmp
idiv
cs
push
xchg
inc
loop
nop
pop
pop
dec
inc
imul
sbb
fcomps
icebp
or
dec
inc
mov
fidivrs
cvtps2pd
sub
add
cld
or
adc
add
inc
dec
or
ds
loopne
jecxz
das
xchg
in
shl
or
ffreep
or
fiaddl
imul
test
inc
xor
cmp
xchg
and
movsb
addr16
out
popa
mov
mov
in
inc
sub
leave
mov
shrl
mov
sub
repz
hlt
rcl
xorb
xchg
push
test
aas
movb
and
test
or
mov
bswap
je
push
mov
hlt
ss
inc
rcll
sbb
jge
popl
cmc
sub
js
outsb
bnd
testl
ret
lds
bound
mov
test
cmp
inc
int3
repz
inc
pop
shrb
or
add
stos
mov
dec
mov
xor
xorb
pop
test
cmp
inc
mov
jp
or
sti
cmp
xchg
sub
xchg
mov
sarb
imul
inc
out
cmp
mov
jmp
push
dec
gs
je
lods
je
xchg
movsb
pop
add
push
popf
and
das
sbb
sbb
cwtl
sbb
or
incl
xor
andl
sbb
dec
jno
ljmp
sahf
inc
jbe
call
fbld
andl
or
fdivp
dec
mov
mov
pop
jno
pop
pop
ja
mov
and
fadds
mov
fcmovu
fistl
dec
add
mov
test
or
std
out
mov
xor
cwtl
mov
test
cmpsl
sbb
mov
movsl
loopne
mov
inc
push
xchg
mov
inc
psadbw
adc
mov
inc
mov
fisttps
jne
shll
push
mov
sbb
and
fisubl
lods
push
xchg
iret
and
int3
popf
or
bound
shlb
loop
lds
fmul
cmp
insl
les
shlb
mov
lods
dec
jp
cmp
aas
popa
add
adc
montmul
cmpsb
inc
xor
fwait
lahf
dec
imul
mov
pop
jp
popf
ret
loope
inc
and
rcrb
out
xlat
fistps
sbb
pop
movl
lcall
fs
pop
outsl
test
and
and
cs
loopne
push
or
outsl
sub
repz
cmc
mov
jb
fiadds
ds
adc
mov
or
mov
pop
sub
pop
rcl
fs
je
cmp
mov
and
ror
mov
cld
push
push
scas
sub
mov
push
flds
ds
addr16
pcmpgtb
mov
movsb
inc
or
add
adc
jmp
push
add
xor
xchg
clc
lods
inc
inc
cmpsl
addb
mov
jo
into
push
movsl
pusha
ror
cmpb
int
add
add
cmp
sahf
fwait
js
ret
ja
sbb
rcrl
mov
out
jae
ds
dec
out
nopl
xor
bound
mov
dec
xor
out
push
xchg
mov
pop
mov
out
fsubs
xor
jo
cmpsb
jae
mov
lock
ss
sbb
push
jmp
or
int3
pop
subb
adc
sbb
shl
sbb
mov
and
rcll
fisttpll
push
jp
enter
dec
out
lea
mov
fs
pop
rorb
lea
cmpsb
cmp
push
pop
xchg
cwtl
jb
clc
mov
and
stos
cmp
cmpsb
sbb
rolb
test
dec
addr16
inc
gs
sbb
mov
mul
mov
arpl
lahf
movsb
scas
jne
out
repnz
xchg
ret
mov
jbe
add
xchg
and
push
shrb
pushf
xchg
jecxz
imul
jg
gs
or
mov
mov
movsl
xor
loope
adcb
lds
and
pusha
jecxz
jno
lahf
jl
insl
push
cltd
xor
pop
insb
aad
imul
movsb
xor
daa
push
lock
jg
xchg
rcll
iret
adcl
jb
dec
insl
push
lahf
mov
push
icebp
mov
inc
adc
xchg
mov
push
and
sbb
in
mov
int3
das
cmp
push
push
mov
bound
push
mov
xor
int
push
dec
loopne
incb
add
xchg
mov
in
or
mov
mov
xchg
sub
xor
jb
repz
mov
inc
dec
imul
lds
mov
mov
jl
ret
jge
or
mov
negb
sbb
jg
xchg
adc
mov
mov
mov
mov
inc
lret
sbb
into
movsb
jecxz
adc
js
sub
adc
inc
jg
mov
add
decw
mov
xor
ficompl
xchg
mov
lret
push
outsb
adcb
xor
in
loope
xchg
dec
lods
dec
jmp
sub
adc
fwait
jle
out
ss
add
cmpsb
adc
or
jno
mov
lods
mov
mov
sub
aam
fs
movsb
xor
dec
inc
inc
out
xchg
iret
in
fldl
jno
fstl
hlt
inc
mov
fnsave
pusha
ret
jg
mov
pop
pushf
inc
mov
cld
lcall
xor
xchg
jne
int3
mov
inc
test
clc
rcr
xor
adc
pop
mov
add
das
lds
inc
adc
adc
mov
jle
int
jns
push
push
enter
xchg
aaa
mov
cli
sti
divl
aad
shlb
bound
mov
and
repz
xchg
stos
lods
sub
outsb
ja
adc
cmp
int
test
pop
jmp
int3
lahf
push
dec
pop
xor
xor
fiadds
cmp
cmc
xchg
mov
repnz
enter
out
add
adc
mov
or
sbb
mov
popa
mov
movsl
in
or
imul
push
pushf
fistps
in
pusha
pop
or
xchg
push
jmp
scas
loopne
cmpl
hlt
or
jae
push
stos
mov
sarb
loope
jnp
ljmp
movsb
lret
mov
jmp
pop
cmp
pop
pop
push
imul
mov
mov
cmp
xchg
cmp
in
rorb
mov
xor
push
and
sbb
das
imul
imul
push
outsl
cld
inc
xor
mov
lods
jecxz
and
or
mov
int3
and
imul
test
and
inc
and
repnz
or
sahf
sub
arpl
dec
daa
arpl
add
dec
orl
sub
out
std
jl
and
jle
scas
and
xchg
push
out
sbb
hlt
ficoml
xchg
jl
sub
sub
lret
add
popa
or
mov
xchg
pop
arpl
mov
scas
jl
outsb
sbb
sbb
inc
add
xor
insb
xchg
test
in
xlat
movsl
mov
pop
shrb
mov
mov
xor
inc
scas
jl
cwtl
insl
out
push
aaa
std
in
ljmp
xor
fucompp
shl
mov
mov
pop
jmp
push
pop
sahf
lods
int
mov
xchg
xor
cwtl
push
test
jnp
rcll
aad
sbb
xchg
sbb
je
cmp
mov
das
stos
adc
jmp
js
aad
mov
mov
cld
outsb
mov
mov
shlb
js
cld
test
in
sbb
push
ljmp
adc
insl
dec
shlw
xchg
jo
lea
std
dec
enter
or
popa
jmp
lret
add
std
or
pop
cmc
shl
scas
sub
sub
sub
div
push
sbb
pop
mov
int
xchg
mov
shrl
push
jb
push
in
or
in
cmp
arpl
cmc
or
xchg
xchg
xor
add
adc
jae
cmp
jae
add
cmpsb
or
js
cld
mov
add
js
pop
fwait
stos
inc
mov
lcall
jae
aam
movsl
shlb
jns
test
out
js
mov
outsl
nop
sbb
jns
jne
add
pop
cmp
sub
scas
cmp
dec
inc
pop
jne
in
test
rep
xor
lods
push
jge
mov
push
int3
mov
mov
adc
adcl
jg
mov
cs
int3
outsl
sbb
imul
cmp
test
mov
jecxz
inc
out
push
jge
cmc
dec
adc
xchg
cs
push
push
shrl
xchg
mov
ror
fs
push
add
cmp
hlt
push
mov
mov
outsb
push
mov
sub
leave
enter
sub
mov
adc
pop
leave
loop
pop
aas
cmp
loopne
orb
push
in
rorb
ds
mov
ja
int3
lahf
lahf
movsl
pop
mov
sub
sub
outsb
dec
insb
adc
cld
jecxz
mov
inc
icebp
mov
les
jns
jb
add
jg
cmp
inc
in
loope
repnz
push
jae
mulb
inc
movsl
aas
push
sahf
xchg
or
adcl
or
int
ds
cli
mov
loopne
mov
ja
out
cmp
ja
xchg
movsb
xor
cmp
pop
call
popa
insl
and
cli
ret
cld
mov
xor
cmp
mov
aaa
in
int
push
mov
lret
hlt
rclb
sub
adc
push
pop
jnp
fisubrl
addb
loopne
mov
sub
xlat
mov
rcrl
mov
adc
sub
aas
outsl
jne
mov
sahf
les
xor
pop
jg
lock
pop
dec
ss
jecxz
adc
movsb
dec
nop
xor
push
std
jmp
insl
pop
mov
xchg
and
pushl
jnp
imul
movsl
pop
dec
pop
sbb
shll
push
imul
mov
mov
jb
cltd
xlat
or
in
adc
push
push
xor
cwtl
mov
cmp
loopw
jne
ds
out
bound
jae
push
popf
repnz
xor
mov
fisubs
mov
lock
push
xlat
ret
xor
dec
sub
movsb
dec
bound
inc
or
pop
mov
outsb
push
jo
in
adc
jbe
inc
aad
push
jle
dec
fcoml
mov
mov
inc
mov
jbe
insb
out
dec
push
and
sub
push
cld
stos
cmpsb
mov
pop
rcr
ret
push
and
ror
fdivl
add
out
fwait
lea
cmp
in
push
gs
and
sub
mov
insb
jb
arpl
mov
cld
test
mov
enter
sub
dec
clc
stos
mov
dec
jae
push
xchg
xlat
les
jmp
push
push
lcall
mov
mov
in
cwtl
ss
stos
xchg
daa
mov
push
das
inc
pop
pop
dec
add
cmp
push
cli
or
sub
sub
aaa
ja
xchg
stc
and
lret
jg
inc
mov
or
pop
enter
pop
mov
rcl
push
push
xchg
adc
adc
lret
test
mov
fs
adc
mov
out
sub
jo
jmp
cmp
jg
mov
dec
incb
ljmp
xor
dec
outsl
imul
cmp
add
cmp
adc
push
xchg
xor
push
cmp
out
mov
and
mov
push
outsl
mov
xlat
push
add
adc
push
dec
mov
and
data16
inc
lock
je
sahf
sub
repz
xor
push
or
xchg
scas
add
imul
mov
pop
and
in
loope
test
sbb
add
cld
in
sbb
xchg
repnz
push
push
pop
fs
lea
pop
arpl
jge
add
stc
insl
xchg
cmp
adcb
mov
inc
fs
mov
jmp
or
jmp
mov
add
gs
out
mov
out
clc
jecxz
rcll
xchg
jne
scas
lcall
adc
inc
movswl
fstps
movsb
icebp
sbb
aas
pop
inc
out
mov
mov
stos
push
outsb
icebp
mov
push
inc
enter
lcall
das
or
int
test
adc
xchg
inc
cmp
fs
push
xor
iret
jl
mov
jne
mov
dec
cmpl
stc
and
loope
push
ljmp
cs
int
cmp
cld
add
mov
mov
repz
dec
jp
inc
xor
mov
inc
pushf
mov
imul
popa
mov
xor
in
or
push
fcmovnbe
xor
fdivrl
xchg
add
sub
and
mov
inc
xchg
ds
push
add
cmpsl
jns
push
outsl
xchg
adc
push
mov
sar
sub
xor
repz
es
dec
leave
popa
mov
jg
rolb
cmp
mov
lods
push
sub
in
test
dec
sub
sahf
dec
mov
je
and
lret
nop
push
rcrl
push
shrl
adc
mov
fcomp
push
dec
out
frstor
pop
icebp
pop
loop
lret
daa
push
lcall
cmpsb
jecxz
mov
out
loopne
pop
int3
das
push
sub
std
push
or
mov
cmp
or
jge
orl
push
adc
lret
xor
call
push
adc
dec
cmp
sub
ret
mov
mov
in
adc
dec
out
xchg
test
push
or
pop
ljmp
inc
push
insb
add
lods
inc
loope
jae
js
sub
int3
add
xchg
xchg
mov
insl
add
inc
jl
test
mov
aad
jae
and
je
xchg
jmp
jp
push
cmc
sbb
adc
popf
jbe
and
inc
jg
sbb
mov
jne
les
aas
pop
push
out
or
insl
mov
leave
sahf
sarl
fnstenv
cmp
stos
movb
xchg
insb
pop
pop
pop
dec
or
fwait
int3
negb
shrb
inc
lcall
out
cmp
inc
out
cmp
notb
ss
pusha
sbb
cmp
push
push
movsl
xor
andb
mov
mov
jno
inc
mov
and
dec
pushf
add
mov
faddl
dec
mov
cmp
dec
or
andb
push
inc
cltd
lods
stc
jl
mov
popa
xchg
mov
lcall
in
loopne
xchg
or
xor
cmp
loope
mov
cmp
pop
xor
jg
adc
lds
xchg
push
in
adc
imul
mov
pop
roll
lcall
testb
cmp
scas
lret
cli
int3
popf
lret
stos
pop
and
mov
mov
dec
pop
addr16
mov
pop
orb
jns
inc
sub
in
arpl
push
add
pop
stos
fistl
cmp
mov
push
mov
insl
imul
ja
or
roll
fildll
pop
sarl
outsl
js
sti
mov
shl
adc
in
divl
outsl
das
inc
movsl
cmp
xor
add
addr16
inc
movsb
rol
je
jge,pn
jne
ret
and
imul
push
mov
xor
inc
enter
sbb
mov
jo
push
scas
add
sub
fstpl
in
and
outsl
pop
inc
aas
inc
jne
xchg
or
std
int
in
loop
inc
cli
cmp
call
dec
cmpsb
xor
mov
cmc
sbb
mov
cmp
jmp
loope
repz
mov
jo
mov
push
mov
shlb
lds
mov
in
mov
dec
mov
xor
push
imul
and
clc
in
sahf
insb
adc
pushf
aam
in
pop
sbb
sub
cmpsl
hlt
mov
mov
push
jnp
orl
jb
add
ja
fdivrl
lds
cli
mov
adcl
lret
dec
push
jmp
fsubrl
push
out
test
mov
ss
or
cmp
push
mov
fildl
pop
sub
mov
fsubp
int3
ljmp
aam
fimull
jb
popl
negb
add
clc
add
arpl
test
aam
clc
jne
pop
or
mov
outsl
enter
cs
in
push
mov
sbb
jbe
test
adc
push
in
ds
push
in
mov
cli
ja
jle
and
into
push
jno
sub
add
xor
jle
incb
mov
mov
repz
jg
adc
sti
pop
stos
outsl
jns
bound
notb
xchg
iret
inc
sub
mov
xchg
lret
fnsave
popf
or
jo
mov
sbb
adc
inc
mov
imul
ljmp
jnp
mov
lea
and
mov
push
fwait
ret
push
sbb
push
mov
dec
push
and
jne
stc
mov
xchg
movsb
cmp
sarl
imul
cltd
or
sbb
int3
and
scas
jb
lea
xor
fsubp
icebp
fstps
pop
sahf
and
pop
xchg
in
mov
cmp
sub
aaa
jnp
and
xor
push
push
mull
add
sbb
test
loope
jmp
jne
lock
imulb
inc
xor
mov
sub
movsb
sub
cmp
mov
push
cmp
out
mov
or
add
paddusb
cmp
adc
inc
hlt
cmp
jno
mov
sub
sarb
scas
sub
arpl
xor
imul
mov
call
sbb
lahf
pushf
xchg
add
or
out
xchg
mov
lods
imul
xchg
jne
js
dec
cmp
or
mov
rolb
sub
testb
stc
dec
ret
lahf
movsb
cmp
lret
xchg
xorb
pop
test
js
jmp
in
and
sub
mov
or
push
popa
xor
and
addb
cmp
inc
cmp
ja
jle
dec
cmpsb
or
popa
and
sbb
sbb
xor
jbe
aad
sbbl
rorb
pushf
jb
call
inc
xchg
xor
sti
xlat
add
in
mov
xchg
rolb
jge
add
mov
cmp
test
push
jnp
leave
push
xor
inc
mov
sarl
sub
sbb
dec
add
inc
shrl
rol
add
nop
stos
jb
jno
sti
insl
addr16
iretw
loopne
cmp
iret
cs
js
pop
repnz
shll
pop
mov
sub
sub
scas
test
inc
xor
mov
popa
out
mov
mov
add
and
mov
mov
lods
adc
ss
cltd
and
mov
and
push
lahf
outsb
bnd
fucomp
daa
ss
popf
js
or
jmp
pop
int3
aam
dec
test
xchg
sbb
mov
mov
pop
jo
pop
push
push
fs
push
mov
xor
xchg
lret
ret
add
mov
clc
lds
pop
outsb
adc
imul
push
pop
lods
cwtl
dec
and
stos
pop
dec
jno
es
xchg
aad
sbb
lods
sbb
and
in
cmpsl
xchg
pop
ret
push
aaa
lcall
pop
fildll
dec
cmpsb
sbb
mov
mov
mov
push
sbb
adc
pop
jno
xchg
jno
mov
fdivrl
insb
bound
fldl
cmp
int3
jge
fdivs
leave
call
adc
aad
hlt
or
into
stc
mov
or
add
lods
jbe
out
pop
mov
imul
sbbb
pop
dec
dec
mov
ret
mov
mov
push
inc
call
cwtl
in
fstl
outsb
jnp
clc
les
in
mov
dec
jg
mov
lods
mov
into
mov
jbe
xchg
cmc
test
int
mov
inc
push
jg
ret
jns
lret
clc
pop
mov
mov
bound
mov
cli
inc
lret
dec
dec
pop
and
add
jne
sahf
xchg
mov
cmp
mov
fs
push
outsl
cmp
addb
xchg
or
pop
stc
outsl
movsb
ret
add
pop
jg
xor
dec
or
fsubl
stos
iret
rclb
imul
add
inc
lcall
pop
jg
or
cmp
jg
cltd
sub
pop
or
cs
stos
add
lods
sbb
hlt
fwait
push
xlat
or
inc
adc
repz
outsb
push
scas
fmull
fstl
xchg
js
jnp
push
bound
push
fsts
lock
std
dec
lret
aaa
pop
adc
icebp
jns
jl
or
pop
add
outsb
outsb
in
iret
flds
iret
rcr
cmp
cltd
mov
jle
dec
cmp
fldt
leave
imul
mov
xor
pop
adc
int3
or
xchg
mov
call
mov
cmpsl
push
cmpsb
push
push
jecxz
mov
movsb
sbb
adc
xchg
aam
push
jg
push
adc
std
xchg
ret
mov
inc
jns
jno
fstl
inc
mov
fwait
pop
leave
les
mov
mov
pop
inc
test
mov
fadds
mov
sbb
xor
inc
push
ss
sub
sbb
jmp
mov
stc
inc
aas
jns
jno
mov
cmpsb
pminsw
inc
sahf
repz
or
mov
icebp
xchg
mov
cld
jne
mov
adc
loope
lods
aas
sbb
push
fst
loopne
mov
andl
sub
cmpsl
insb
fisttpl
adc
lcall
lds
sub
mov
push
dec
int3
lret
jp
sbb
mov
cmp
inc
xchg
inc
add
xchg
pop
test
aaa
repz
mov
shl
mov
cmpsl
cmp
add
push
orb
pop
rcll
sub
in
nop
incb
xchg
iret
ret
inc
cmp
mov
push
dec
lods
in
test
xchg
xor
sub
dec
movsl
mov
loopne
std
push
rolb
inc
jo
sbb
pusha
jo
push
stc
popl
push
test
dec
push
lds
jb
loopne
call
mov
gs
jns
xchg
dec
or
repnz
cmpsb
int3
push
xchg
js
ds
in
in
sbb
flds
xchg
push
outsl
sbb
mov
imul
iret
mov
mov
jmp
enter
sbbl
loopne
adc
lahf
mov
push
xchg
jb
popa
pop
jmp
stos
mov
push
jecxz
or
or
popf
fdiv
pop
sbb
jp
arpl
and
ret
fs
cmc
aas
jmp
cmpsb
dec
or
cli
iret
mov
cmc
adc
jo
in
and
punpckldq
pop
int
lods
xor
push
in
stos
push
add
or
add
loope
fnsave
or
push
or
fwait
ret
outsl
push
repz
cmpsb
mov
fnsave
or
fwait
xor
xor
mov
cmpsl
and
iret
jle
xor
arpl
xor
rcll
jb
adc
pop
cltd
orl
std
sbb
cmp
cwtl
mov
push
adc
sbb
mov
add
outsb
test
xchg
lret
sbb
adc
mov
rcrl
mov
repnz
pop
outsb
jge
jle,pt
into
add
sub
sahf
movsb
sbb
xor
add
addr16
mov
clc
cli
add
fildll
inc
and
or
jo
and
mov
cmp
insb
jge
push
iret
lret
push
or
pop
and
inc
and
lods
aas
sub
std
push
dec
out
mov
imul
mov
test
stos
adc
jbe
dec
scas
xchg
mov
pop
mov
push
rcrb
cs
sub
jb
jo
inc
or
adc
addr16
fcoms
and
add
jge
mov
addb
inc
or
or
insl
cli
inc
sbb
lods
and
mov
mov
idivb
lcall
ds
jb
fs
push
popa
sub
cmp
testl
sub
jo
sbb
xchg
add
mov
js
inc
rcrb
mov
jecxz
dec
mov
xor
lahf
sbb
cs
outsb
jb
jg
inc
repz
jmp
push
pop
mov
cmpsl
inc
lea
xlat
cmp
mov
scas
jns
fcomip
scas
fildl
lock
adc
movsb
ficompl
sub
ds
jns
add
jge
fbstp
popf
shl
sbb
int
or
arpl
adc
cmp
addl
lret
jmp
push
add
stc
xor
scas
inc
add
cmp
pop
mov
aas
fcmove
or
mov
cwtl
fcmove
call
leave
std
pop
popf
mov
loope
mov
mov
dec
loopne
and
sbb
fcoml
pop
mov
or
mov
sub
movsl
mov
insb
cmp
xor
and
mov
or
out
in
sbb
push
push
xchg
sub
jns
ret
fcmovu
les
rcr
add
dec
cltd
scas
and
fidivs
or
aas
mov
push
sbb
test
lds
loope
test
mov
mov
rorb
mov
jmp
mov
cltd
inc
pop
cmpsb
add
das
insw
adc
into
addb
cltd
fwait
sub
pop
cs
adc
mov
push
and
out
lods
push
mov
in
ss
and
lret
lods
jg
sub
out
inc
outsl
mov
inc
pop
and
aam
or
sub
scas
cld
addr16
sbb
sbb
iret
push
lahf
pop
mov
fdivrs
cmp
clc
fwait
mov
notb
pop
sbb
cmp
mov
popf
push
sbb
or
and
repz
cmp
and
popf
stos
pushl
and
jl
scas
shrl
or
je
test
lea
pop
in
push
push
cmpsl
inc
mov
adc
ret
cmp
add
leave
mov
adc
dec
in
cmc
xor
pop
mov
mov
cmpsl
mov
cld
xorb
test
insb
out
outsl
inc
add
pop
mov
mov
imul
and
ljmp
lret
add
jb
out
cmp
out
adc
loopne
dec
stc
adc
mov
mov
loop
mov
or
mov
push
pop
jb
sub
cltd
xor
sbb
movsb
in
data16
jmp
aad
inc
std
sub
dec
cmp
popa
ret
movsb
jl
lret
push
push
sbb
fcomp
inc
outsb
fnstcw
pop
rcrb
sahf
nop
mov
add
mov
mov
fcmove
adc
pushf
shl
xchg
iret
ja
fldt
test
sub
sub
pop
ficompl
push
cmp
sbb
mov
sub
pop
lret
int3
fisubrl
sbb
mov
leave
fs
pop
lods
aad
push
aas
test
enter
movsb
das
in
fistpl
mov
imul
lods
in
adc
cmp
xchg
mov
cld
call
mov
lods
mov
daa
sbb
sub
addr16
xchg
mov
adc
jmp
mov
mov
cmp
push
jnp
lds
stos
mov
fsub
push
mov
aaa
pop
mov
mov
aas
cld
push
mov
jmp
mov
cmp
and
inc
lock
pop
mov
inc
inc
cmp
add
fisttps
leave
rcrb
fisubrs
xchg
mov
add
or
jmp
pop
aaa
cmc
push
fcoml
jne
ret
jecxz
push
inc
pop
xchg
mov
in
mov
pop
sub
arpl
rcl
xor
add
je
and
pop
jge
insl
addr16
inc
hlt
push
scas
test
hlt
outsb
and
jmp
cmp
mov
pusha
pushl
or
push
movsl
sbbb
shrl
adc
push
insb
xrelease
insb
nop
les
push
lods
inc
mov
fsubl
push
mov
lds
dec
push
lahf
outsb
popa
mov
mov
aaa
push
mov
cmp
js
movsb
xchg
inc
fisttpl
add
pop
dec
fldt
repnz
clc
cmp
ficompl
cmp
sub
ss
push
enter
movsb
xchg
mov
test
ja
jmp
adc
cwtl
push
or
mov
mov
xor
push
xchg
fs
sub
leave
int3
adc
xchg
inc
imul
lcall
sarl
std
dec
jns
je
repnz
sub
jl
mov
in
sub
test
xchg
push
fcmovbe
cmp
fadds
daa
jns,pt
jb
sub
pop
pop
into
pop
hlt
jp
jmp
pop
sbb
dec
inc
out
ds
rorl
aas
mov
adc
or
push
cmp
jae
test
outsb
mov
loop
rcrl
out
push
xor
add
cmc
insb
in
lods
andb
int3
cmp
pop
into
cmp
mov
jb
lea
sbb
js
cmp
jge
sbb
in
dec
repz
xor
dec
dec
outsl
or
jo
nop
ret
test
xor
pop
enter
ss
in
add
packuswb
mov
jecxz
sbb
fidivrl
mov
inc
cmp
add
insb
cmpl
xchg
mov
pop
or
xor
cmp
sbb
hlt
mov
movsl
ds
shlb
in
in
outsb
std
sbb
mov
xor
and
test
inc
inc
jae
bnd
daa
or
les
cmp
xchg
mov
xchg
adc
ret
jns
lea
push
dec
das
dec
call
outsl
sahf
daa
jb
repz
pop
push
jb
xor
sbb
outsl
xor
push
fldt
es
aaa
in
cmpb
fiaddl
leave
mov
mov
dec
stos
adc
or
dec
and
sbb
jg
ja
adc
dec
lds
cwtl
lea
add
dec
cmp
lret
std
ret
sbbb
cs
lock
daa
mov
jb
or
cmpsb
fcomp
daa
cmpsl
movsb
gs
jno
xlat
pop
mov
and
fwait
das
bnd
test
mov
fisubrl
fadds
fwait
push
push
xorl
lret
add
mov
xor
lods
test
sbb
mov
es
mov
push
adcl
aam
cmp
mov
std
push
push
xor
mov
adc
inc
push
jae
adc
outsb
and
or
xchg
push
xchg
and
lcall
int
lods
orb
fstl
int3
add
sub
rcr
jns
cltd
sub
push
inc
popf
mov
pushf
and
mov
mov
mov
push
mov
iret
push
in
add
jns
jp
iret
xchg
stos
xor
push
loopne
popf
cmp
les
sbb
dec
sbb
inc
insl
arpl
xor
xchg
in
imul
push
test
into
or
jbe
fmul
inc
xchg
mov
xchg
dec
fiaddl
dec
jae
adcl
sbb
orb
hlt
inc
mov
enter
scas
xor
mov
and
pop
das
hlt
push
inc
ret
mov
push
cli
xchg
sti
push
into
jg
sarb
mov
pop
les
int
rcrb
gs
xor
pop
lcall
mov
mov
in
cmp
hlt
mov
pop
daa
add
fstpl
add
cld
stc
and
mov
ds
das
adc
lcall
mov
ficoms
nop
push
jle
push
dec
int
test
fists
or
xchg
sub
adc
test
fidivrl
ljmp
pop
jmp
int
and
jg
enter
cmpsb
or
mov
int3
adcb
xchg
loope
es
cs
fucompp
push
fwait
ss
out
push
mov
subl
sbb
outsb
and
popf
in
mov
divl
or
add
mov
icebp
or
mov
adc
jb
dec
fisubl
push
xor
xlat
or
in
mov
stos
push
mov
pop
mov
sahf
mov
popa
int
sbb
add
mov
sbb
cmp
lcall
mov
xchg
lret
adcb
cmp
and
xchg
jnp
ljmp
das
imul
leave
sub
dec
imul
rcr
inc
sbb
add
sbb
mov
clc
fxch
mov
cmp
pop
clc
or
pushf
xchg
nop
jge
push
cmp
fsubs
sbb
and
or
pop
fldcw
dec
push
shrb
stos
pop
mov
adc
andb
jae
subb
dec
jge
ss
or
rclb
fdivr
out
sub
out
loope
aaa
cmp
xchg
sarb
je
add
loope
in
test
imul
cmp
xchg
outsl
shlb
ret
popf
mov
mov
add
add
sbb
cs
loop
push
jg
push
sub
and
sbb
mov
repnz
insl
push
mov
sti
jecxz
in
adcl
and
mov
sbb
and
push
inc
out
pop
jae
push
enter
or
pushf
outsb
sub
out
inc
or
inc
xor
arpl
inc
dec
mov
nop
iret
jo
pop
aam
pop
out
xor
adc
jp
mov
int3
inc
pop
push
sub
fadds
sahf
push
movsl
mov
repz
dec
and
shll
sbb
and
inc
xrstor
cltd
lock
push
fcomps
repnz
in
lds
ret
loope
or
ss
add
ja
shrl
leave
inc
dec
xchg
jle
shld
pshufw
fnstcw
sbb
xchg
inc
les
int3
aad
push
repnz
ss
push
ficoms
cltd
add
aam
test
jbe
push
jae
adc
xlat
lcall
movsb
adc
loop
push
inc
faddl
enter
jecxz
xchg
ss
test
jecxz
sub
inc
cmp
insl
inc
sub
daa
dec
stc
stc
and
cmp
dec
popa
add
add
fisttps
subb
jmp
ds
mov
push
faddl
pop
ds
jno
inc
cmp
scas
scas
mov
mov
repnz
jle
lock
jb
ss
mov
or
ljmp
lcall
inc
ret
imul
test
push
mov
shlb
jle
pusha
std
mov
push
mov
leave
push
push
pop
pop
jp
stos
push
lods
jmp
push
push
cmp
ss
or
xchg
or
or
test
mov
bound
out
mov
xchg
mov
jp
rol
mov
sub
stos
in
push
and
mov
insb
dec
add
leave
inc
es
flds
clc
test
adc
mov
jmp
pop
sub
mov
icebp
xor
enter
xor
jle
mov
jmp
mov
dec
cmp
jae
xchg
mov
xchg
dec
cmpsl
test
push
jmp
xor
repz
stos
cmpl
add
dec
mov
xchg
call
aas
and
push
cltd
lret
adc
cli
jge
xchg
ss
scas
mov
mov
or
insb
sbbl
ljmp
mov
ja
rol
pop
cli
xchg
out
ficoms
dec
or
clc
cmpsb
xchg
adc
int
pusha
pusha
iret
clc
cmp
inc
jge
scas
push
adc
aas
push
outsl
test
jmp
and
gs
lods
jnp
pop
pop
jne
stc
ret
add
mov
mov
xchg
lock
int3
stos
stos
out
or
sub
imul
pop
adc
cs
fistpll
xor
pop
mov
sbb
and
aad
jb
mov
arpl
out
lahf
add
shll
dec
pop
and
repnz
pop
or
add
test
mov
stos
aaa
insb
jle
loope
movsb
test
ljmp
jnp
dec
cmp
dec
das
fbld
pusha
rorb
hlt
mov
mov
and
jno
in
js
adc
lods
mov
mov
adcl
sbb
xchg
xor
ljmp
fld
pop
mov
ja
push
and
cmpsl
out
fiaddl
mov
in
jmp
sbb
daa
dec
or
lock
inc
int
xlat
sub
outsl
and
stos
mov
mov
hlt
out
bound
scas
mov
leave
or
push
popf
shlb
or
mov
das
adc
sahf
and
fidivs
mov
dec
fistps
inc
xor
sarl
stos
out
add
push
cmpsb
out
subl
xchg
jo
push
and
mov
add
mov
je
idivl
lock
dec
incb
dec
stos
addr16
data16
or
popf
adc
dec
int3
aaa
jb
mov
xor
xor
stos
fdivrl
fiadds
push
inc
add
out
cmp
push
or
cmp
sbb
ja
mov
in
xchg
loopne
jp
dec
sub
pop
adc
outsl
push
pusha
mov
bound
sub
in
add
je
pop
rorb
cmpb
enter
fldcw
mov
outsl
orl
sbb
sbb
jno
add
mov
push
xor
arpl
inc
es
dec
dec
and
addr16
aas
inc
jp
mov
add
sub
das
test
inc
pop
inc
cmpsl
adc
les
pop
pop
xchg
add
pop
jle
arpl
jl
loop
fwait
pop
ljmp
mov
cld
jl
jno
scas
inc
push
add
mov
stos
cmpsl
pop
pushf
dec
jmp
scas
cmp
mov
pop
inc
ds
pop
cmp
push
push
cmp
lcall
es
cltd
cmp
cmp
adc
jl
jae
pop
sub
cltd
aaa
fistps
test
xchg
sbb
add
sbb
fisttps
inc
inc
popl
mov
or
xor
or
or
addb
ljmp
push
inc
scas
mov
sub
add
inc
imulb
xor
dec
fcompl
nop
dec
push
inc
dec
or
lcall
pop
cmp
inc
int
mov
outsl
xorb
imul
loopne
int
jmp
popw
dec
jae
xchg
sbb
in
fildl
cmp
negb
push
imul
das
add
mov
mov
cmp
adc
std
fsubrp
shlb
mov
mov
xchg
mov
ja
aaa
subb
and
jbe
mov
aam
pushl
outsb
dec
imul
insl
into
jmp
lea
xor
xchg
pop
sub
adc
push
mull
mov
ja
aam
dec
push
scas
lahf
nop
xchg
arpl
mov
xor
aas
inc
inc
pop
jle
jp
inc
push
sbbl
jg
and
pop
push
dec
scas
mov
das
jg
pop
xchg
cmp
sbb
dec
jle
jle
jecxz
pop
and
outsb
lods
out
dec
arpl
add
loope
mov
lock
mov
sbb
mov
shlb
adc
adc
xchg
mov
cmc
outsb
or
xor
mov
push
cmp
int
mov
hlt
dec
pop
xor
imulb
dec
std
pop
cmp
loopne
pop
aas
movsl
in
cli
jne
jns
or
xor
ror
cli
mov
push
lret
hlt
cwtl
subl
xchg
mov
out
lahf
outsb
push
stos
je
mov
dec
cwtl
cmp
lahf
xchg
mov
mov
in
sbb
iret
daa
leave
sti
outsb
in
ds
sub
jge
cmp
mov
xchg
dec
jecxz
and
aaa
sub
mov
in
and
loopne
fidivs
pop
sub
cmp
into
mov
add
ss
ret
mov
in
aaa
rcr
loopew
mov
stos
push
arpl
adc
repz
xor
add
fs
daa
xchg
or
in
in
pop
mov
hlt
adc
inc
mov
ja
sbb
lods
sbb
push
arpl
pxor
insl
xchg
adc
push
ja
mov
std
add
dec
loop
test
dec
in
pop
fs
shlb
lret
cmp
mov
shlb
ret
dec
in
jl
faddl
adc
ret
sbb
adc
ja
fimull
je
sbb
jp
jo
jnp
xor
add
or
push
mov
push
fst
sarb
nop
dec
addr16
mov
mull
test
inc
fs
mov
inc
lahf
fs
adc
dec
push
data16
imul
inc
cwtl
cmpsb
fildll
jmp
int3
and
arpl
daa
nop
pop
or
mov
xchg
and
lahf
pushf
xchg
fucom
cmp
pop
imul
inc
or
fidivrs
movb
jl
adc
and
cmp
sub
pop
dec
sub
push
mov
insb
cvtps2pi
shr
fsubr
mov
jge
xor
push
pop
or
sub
shrl
lea
and
dec
es
xor
cmp
inc
clc
test
in
ja
pusha
test
popf
ffreep
and
and
fninit
sbb
jo
adc
mov
cmp
jns
jb
das
push
sub
adc
inc
imul
inc
cs
push
and
adc
mov
in
outsl
pop
outsb
icebp
ljmp
cmp
or
mov
jmp
mov
outsb
in
xor
xor
ret
and
pusha
lret
fildl
lcall
pop
xchg
stc
fbstp
xor
adc
test
dec
push
in
imul
mov
xor
pop
out
insl
dec
leave
cmp
ret
cmp
std
pop
pop
les
aam
push
mov
imul
repnz
in
lret
lahf
jb
xor
mov
push
enter
rorl
xchg
and
mov
dec
cwtl
popa
lcall
stos
jno
inc
shll
pusha
cmpb
or
dec
push
sub
fsts
out
mov
xchg
cmp
test
mov
pop
rorl
and
mov
adc
fidivrl
or
dec
outsb
mov
imul
cmp
xchg
mov
dec
mov
xlat
lret
xchg
stos
and
jl
inc
mov
je
xor
bound
les
js
jl
mov
jmp
bound
cltd
das
dec
sbb
mov
push
addr16
icebp
aam
and
test
sarl
sahf
out
out
mov
rcr
sub
imul
xor
hlt
setbe
and
test
push
or
lods
test
outsl
xchg
stos
pusha
pop
js
mov
xor
fcoms
mov
testb
sub
in
adc
call
push
or
stos
insb
popf
js
dec
lock
jle
std
out
push
in
into
dec
into
sahf
cmp
mov
xchg
outsb
lods
rcl
pop
daa
hlt
pop
das
iret
lahf
decb
push
neg
clc
pop
add
jo
cmp
outsb
sbb
cmc
xor
jp
fisubl
push
jne
cmc
pusha
sbb
rcrl
arpl
lods
inc
mov
sub
cmp
out
mov
adc
decb
sbb
jge
sahf
mov
shll
ret
lock
in
in
or
arpl
pop
sub
call
pop
loopne
sbb
sub
cwtl
mov
nop
jo
mov
stos
scas
jecxz
xor
mov
fcoml
lock
test
test
mov
sbb
cs
adc
jnp
mov
lahf
into
sub
fs
lods
outsl
xchg
add
loopne
inc
jbe
bound
mov
stos
inc
dec
jns
sti
push
test
fsubs
cmp
xchg
pop
mov
popa
or
jmp
test
jne
xor
xor
rcll
push
mov
ja
into
rcl
push
xchg
mov
adc
sarb
test
xchg
cli
dec
das
fst
pop
sub
mov
cltd
popf
cmp
out
pop
lock
cwtl
push
jbe
push
ficompl
jge
and
inc
dec
int3
movsb
push
lret
test
and
mov
pop
out
cmc
sub
lret
sahf
pushl
push
orb
rolb
or
jp
mov
or
pop
repz
loope
adc
xor
mov
mov
in
aad
mov
enter
aam
sub
icebp
add
or
dec
and
mov
pop
sbb
add
seto
fwait
xchg
icebp
rclb
and
push
movsb
jl
pusha
dec
outsl
xor
mov
mov
or
push
jg
nop
jl
sbb
push
imul
pop
sub
mov
mov
sbb
mov
mov
lods
fimuls
jge
or
add
fnstenv
or
inc
inc
mov
mov
pop
inc
aaa
jb
cwtl
stos
mov
dec
js
add
sbb
mov
xchg
push
stc
pusha
fldt
cs
subl
sarb
pop
inc
cmpsb
jmp
cmp
mov
fistpll
jbe
add
clc
insb
int3
stos
sbb
inc
in
sub
jb
add
mov
stos
in
fwait
pop
aam
into
daa
mov
cmpsb
sti
dec
mov
dec
push
xchg
sub
imul
sub
sbb
inc
mov
mov
sub
enter
cmp
nop
imul
adc
jecxz
xor
gs
sub
out
push
ja
test
lcall
and
enter
stc
pop
in
ljmp
dec
or
inc
jns
push
bound
out
imul
bound
pop
push
fidivrl
mov
lret
pop
cmpl
adc
xchg
outsl
xchg
das
inc
sbb
int
lds
jno
loop
dec
shrl
xor
cmc
adc
or
out
dec
pop
xchg
inc
shlb
das
mov
mov
bound
mov
adc
mov
xchg
push
xor
fcomp
mov
fs
xor
test
das
mov
addr16
dec
cld
andl
cmp
rcrb
add
sahf
jge
jno
out
xchg
mov
test
call
xor
sbb
push
pop
jmp
ja
out
xchg
xchg
dec
mov
cmpl
and
and
ja
gs
repnz
test
pop
shlb
fimull
loop
or
xchg
je
add
das
mov
les
xchg
std
jae
pop
lret
mov
mov
inc
and
sbb
mov
int
lcall
lahf
or
mov
ret
int
jecxz
mov
ss
ja
or
lahf
movsb
dec
leave
mov
mov
lcall
into
adc
mov
stc
shl
mov
push
sbb
adc
mov
pop
cmp
xor
or
cs
pop
dec
lods
sarl
cld
testb
lret
xchg
jle
jl
pop
cmc
xchg
pushf
xor
jno
lock
pop
hlt
sbbb
call
dec
arpl
insb
aas
lea
imul
push
call
mov
ljmp
sbb
mov
adc
push
daa
sbb
and
aas
rorl
sub
jo
mov
lock
aas
out
loope
push
or
lock
adcl
mov
mov
cmpsl
imul
cmp
sbb
in
add
mov
jge
test
dec
sbb
icebp
aas
ds
xchg
mov
pusha
jmp
daa
dec
orb
push
xor
adc
imul
int3
push
xchg
mov
cltd
sbb
sub
or
test
push
cmpsl
pop
iret
loope
push
mov
jge
push
jle
pop
loope
pop
je
lahf
sbb
stc
cs
or
je
icebp
into
ss
xor
add
pop
cmp
cwtl
cltd
jb
cmpsb
movnti
popa
or
mov
push
lds
jp
out
cmp
and
call
out
jecxz
or
pop
test
pop
fsubl
xchg
ds
xor
mov
in
insl
sbb
xchg
aad
mov
jb
ja
xchg
jns
test
lods
xchg
mov
mov
mov
mov
fstps
sbb
adc
xlat
sti
sbb
pop
nop
test
xlat
cld
inc
fsubp
insl
cmpsl
aad
inc
xor
sbb
es
out
add
aad
push
nop
out
mov
iret
lods
aad
lds
xchg
mov
negl
mov
inc
addr16
dec
outsb
mov
ret
lret
bnd
lret
adc
mov
push
cmp
shll
xor
mov
or
mov
jl
leave
mov
popa
mov
pushf
dec
ja
cmp
push
stos
pop
adc
push
pushl
push
hlt
pop
and
roll
imul
mov
sti
lahf
mul
xchg
setp
xor
mov
mov
push
push
ljmp
push
fldenv
std
icebp
aad
lea
mov
arpl
dec
lcall
lock
mov
incl
xchg
repz
cmp
divl
popf
stos
push
imul
xchg
cmovp
add
jns
cmp
cltd
mov
dec
mov
rcll
and
bound
adc
inc
mov
or
aam
leave
stc
sbb
sub
popa
aam
lods
xchg
jae
xchg
repz
imul
das
push
cltd
rcrb
fs
sti
xchg
js
push
mov
mov
sbb
scas
outsb
in
nop
lcall
pop
bound
lock
insb
test
or
xorb
sti
mov
adcb
loope,pn
inc
mov
pop
dec
inc
ret
push
dec
add
push
repnz
xchg
out
adc
or
lea
call
xchg
fisubs
pop
aas
mov
lret
lret
xchg
ror
lock
sub
fsts
ret
jne
cmp
and
std
xchg
inc
jno
dec
mov
outsl
and
mov
adc
jns
and
pop
subl
inc
pop
ds
mov
push
fdivrs
push
stos
aas
xor
insl
dec
xchg
or
add
rcrb
iret
sub
dec
sbb
faddl
inc
sbbl
scas
lcall
test
aad
cltd
mov
xor
adc
xchg
or
insb
addr16
or
sbb
mov
jge
out
push
decb
add
je
out
ret
inc
sub
rcpps
nop
addr16
sbb
jne
adc
scas
mov
inc
mov
or
add
cltd
mov
imul
mov
aas
fs
push
xor
sub
testl
adc
mov
cld
or
add
push
jge
lock
or
pusha
add
mov
adc
mov
rcl
push
pop
stc
rorl
pop
mov
xor
fadd
sbb
mov
je
popf
sub
and
jb
imul
push
in
pop
fidivl
pop
enter
call
mov
or
and
scas
xlat
mov
pop
addb
jae
scas
out
inc
notl
insb
sub
outsb
push
pushf
jecxz
aaa
mov
das
mov
and
stos
sahf
xor
and
mov
pop
cmp
inc
data16
pushf
in
push
push
inc
xchg
leave
cmp
xchg
out
xorb
mov
mov
les
mov
push
sbb
jae
mov
cld
es
je
sub
mov
test
jb
mov
es
pusha
cs
repnz
out
clc
sti
scas
mov
test
repnz
cmp
fadd
xchg
push
in
movsl
pop
mov
aaa
call
push
fdiv
jne
mov
and
ljmp
cmp
pusha
sbb
cmp
push
mov
jnp
stc
fiaddl
jle
push
xchg
sub
int
add
nop
xor
sbb
out
xchg
lret
movsb
xchg
dec
push
add
push
mov
push
push
daa
add
iret
in
pushf
pop
sbb
sarb
cmpl
jae
testl
push
mov
xorb
fimuls
sub
enter
add
mov
xchg
or
or
frstor
decl
scas
jne
jmp
jbe
xor
push
xchg
push
push
incb
push
hlt
sbbb
out
adc
inc
jle
test
dec
stc
jecxz
sbb
dec
pop
adc
mov
paddsw
call
push
push
jmp
jne
hlt
mov
and
shr
out
sbb
gs
mov
int
cli
push
scas
add
mov
je
dec
push
push
hlt
fists
stos
xchg
sub
cltd
mov
stos
mov
push
fistpl
es
cmp
pop
mov
int
mov
ljmp
out
jae
pop
addb
xlat
insb
jg
pop
outsb
loope
xlat
jl
xor
sbb
clc
adc
dec
andb
dec
hlt
inc
pushf
popf
pop
pusha
test
std
test
leave
aaa
pop
cmp
roll
scas
lret
lea
inc
jo
idiv
mov
sub
stc
push
jle
jne
adc
sub
ds
cmpsl
sti
mov
xchg
test
xor
cmp
cmp
mov
aaa
mov
mov
push
cwtl
arpl
xlat
shr
mov
pusha
add
inc
xchg
aam
dec
pop
movsl
subb
xchg
aaa
sbb
jle
sbbl
into
push
sub
and
in
xor
daa
negb
stos
pusha
leave
pop
push
xchg
out
cmp
pop
rorl
stos
cmpsb
and
or
subb
mov
lea
fdivl
jns
sub
pop
out
dec
je
jp
add
ret
push
jp
pushf
or
mov
sti
pop
addr16
xorb
lods
insl
ret
mov
rcrb
sbb
iret
loope
push
clc
mov
fsubs
ror
push
das
push
scas
lea
adc
xor
fisttpll
test
bound
lds
xor
sahf
sub
dec
or
enter
pop
jle
nop
fsub
js
xor
or
popl
pop
jnp
mov
lret
push
addl
fbld
rolb
pop
lods
sti
std
rolb
mov
in
outsb
scas
pop
or
fwait
mov
cmp
jnp
push
cltd
mov
mov
add
outsl
adc
add
decl
loopne
cld
or
ljmp
mov
sbb
sti
aad
or
dec
stos
mov
dec
mov
loop
je
push
outsb
movb
push
cmp
std
mov
rolb
mov
loopne
lea
daa
das
and
cmpsl
inc
and
insb
outsl
xchg
jnp
add
adc
or
dec
adc
sbb
push
add
add
aad
hlt
in
jo
lds
adc
sbb
sub
push
push
mov
dec
adc
popf
jbe
out
xchg
cmp
ret
mov
xor
jl
sti
cmp
std
push
test
mov
mov
add
bound
test
push
out
aam
shl
mov
pushf
sar
sahf
mov
xchg
push
aas
pusha
addr16
cs
jle
enter
xchg
movsb
adc
cwtl
aas
in
xor
xor
jnp
jae
sti
xor
xor
out
test
adc
mov
addb
mov
sbbl
jb
pop
repnz
sbb
out
mov
dec
sbb
ret
and
xchg
ja
cld
add
outsl
out
jp
or
jne
int3
mov
dec
aad
xor
fcoms
and
fsubs
sub
fsts
ljmp
push
shlb
into
adc
ja
inc
dec
scas
aam
into
inc
movsb
pop
aad
cmpsb
push
cld
sbb
pop
loop
jecxz
jno
mov
pop
daa
push
mov
inc
cs
int
cmp
inc
mov
insl
jno
adc
xlat
das
loopne
lock
fldcw
adc
cmpb
testl
jmp
mov
mulb
xor
jne
andb
adc
insb
pop
or
out
icebp
push
jp
stos
xchg
hlt
sub
lods
call
jcxz
mov
sub
hlt
dec
add
ds
push
jl
orb
or
adc
jb
adc
inc
xor
jle
loopne
jae
push
stos
cmp
repnz
hlt
push
mov
in
bound
int
lock
adc
sub
or
sub
cmp
mov
cmp
negb
arpl
lock
lea
push
dec
push
sub
dec
call
mov
xchg
and
je
testb
push
adcb
xchg
pop
adc
insl
mov
add
mov
sbb
jle
cmc
mov
adc
jmp
and
ret
insb
push
xor
repz
notb
or
lahf
fcoms
jns
mov
cli
leave
sub
and
xchg
daa
pand
dec
roll
sbb
adc
push
lods
cld
sub
lret
inc
lret
arpl
dec
fstpl
jmp
push
xchg
sti
cli
pop
enter
add
mov
jne
jb
mov
or
ljmp
fwait
outsl
jecxz
inc
in
lods
push
insb
push
dec
das
xor
mulb
decb
cmp
mov
adc
mov
push
push
es
in
rcl
test
cmp
lret
xor
lods
add
mov
lods
data16
iret
sbb
jnp
mov
test
push
push
in
in
or
outsb
push
xchg
insl
inc
xchg
adcb
cwtl
inc
nop
rcl
movsb
push
push
mov
shrb
cmp
scas
in
loope
std
xor
jne
ljmp
pop
jmp
sbb
fistps
sbb
sbb
xor
sti
xchg
into
scas
mov
nopl
cmc
mulb
jno
xchg
aad
dec
ret
cmp
std
lock
pop
mov
mov
mov
push
cmp
sub
inc
ja
inc
stc
or
lods
mov
or
jecxz
xchg
xchg
cltd
inc
imul
ds
push
xor
xor
pop
add
sbb
dec
adc
lea
sbb
cwtl
cwtl
pop
and
xor
filds
mov
sub
fsubl
or
fisubrl
hlt
xor
mov
add
dec
inc
mov
pop
pop
mov
out
pop
sub
out
addr16
adc
scas
adc
mov
dec
stc
mov
adc
imul
test
lahf
add
bnd
sub
repz
jns
dec
int3
in
int3
sub
pop
xchg
sbb
xchg
js
inc
roll
test
lods
lods
cmpsl
mov
pop
lret
pop
nop
push
jmp
jmp
lds
xchg
cmpsb
or
loop
lds
lcall
pop
dec
push
jne
pop
or
cs
add
addb
mov
pop
push
mov
in
push
lods
mov
and
push
stc
gs
shl
aaa
test
push
mov
outsl
pop
adcb
push
adc
sbbb
cs
mov
cmp
scas
cs
xor
push
or
loopne
in
adc
fdivl
ret
add
int3
outsl
loopne
mov
xchg
mov
mov
and
inc
xor
addb
or
xor
subl
lock
nop
test
mov
lods
jbe
clc
inc
or
scas
push
hlt
cmp
faddp
fcomi
nop
rorl
fs
add
sub
adc
hlt
mov
mov
xchg
xlat
pusha
stc
mov
dec
inc
and
inc
test
enter
add
push
in
call
ret
cld
xchg
inc
inc
cli
push
hlt
mov
sub
jp
cli
jno
pushf
lret
orb
sbb
das
je
push
xchg
loopne
add
and
mov
je
dec
add
insb
pop
cwtl
jb
sti
sbb
fs
cmp
push
pop
cwtl
bound
orb
bnd
sub
nop
mov
les
aad
mov
std
jp
enter
adc
push
xchg
inc
test
pop
ds
or
cmp
jmp
je
stos
mov
mov
jl
lock
mov
jp
aam
cmpsl
pop
sub
push
sub
fwait
cwtl
in
push
push
fwait
mov
jbe
je
jg
mov
das
adc
outsb
shlb
pop
dec
pushf
or
add
or
push
mov
addr16
cmp
outsb
add
xlat
inc
xor
xchg
mov
push
test
lea
inc
lahf
add
pop
jmp
ss
pop
jmp
or
imul
scas
rcr
pop
add
lahf
adc
mov
gs
scas
rcrb
dec
xor
jecxz
add
xor
pop
sbb
clc
jns
jg
and
mov
int
pop
cltd
inc
push
mov
shl
xlat
ss
fldcw
imul
push
aad
les
ss
mov
inc
shlb
jecxz
lret
int
in
or
stos
mul
ds
sbb
xor
je
jge
xchg
sbb
inc
jns
mov
xor
sbb
or
jne
cld
xchg
scas
and
leave
sahf
shr
and
mov
jp
inc
jmp
outsb
pop
pop
popaw
aas
push
ds
push
push
dec
inc
pop
jmp
fcmovnu
ds
leave
lret
mov
pushf
test
sbb
iret
inc
shll
cmp
ds
inc
in
pop
test
or
adc
mov
adc
addb
int
inc
out
mov
fdivrs
out
sahf
sub
nop
pop
mov
je
enter
mov
dec
rclb
sbbl
xchg
adc
xor
adc
in
das
stos
ds
sub
lea
jne
add
addr16
mov
mov
pop
lcall
test
sub
jle
mov
jg
cmp
inc
lods
incl
and
outsb
mov
ret
push
adc
ljmp
inc
pop
scas
lock
push
jmp
insl
jbe
jl
ljmp
xorl
clc
scas
jns
ret
jge
sarl
push
jle
int3
xchg
jmp
add
jbe
mov
xchg
push
push
or
lods
repnz
outsl
jg
sbbl
clc
lods
xchg
jno
push
or
xor
cmp
xchg
or
xchg
incl
sub
imul
ret
stos
xchg
sahf
shll
rcl
mov
jmp
jae
fwait
jae
inc
mov
ja
int
xor
fdivrs
adc
xor
rorl
sub
imul
movsl
loop
mov
fcmovnbe
mov
jne
lock
insl
jno
add
data16
mov
or
iret
ret
dec
xor
loope
dec
add
imul
pop
lea
mov
inc
xor
jae
or
inc
dec
cmpl
dec
mov
cmp
jg
jecxz
aam
and
jns
inc
cwtl
mov
inc
int3
jmp
mov
xchg
sbb
out
mov
test
push
xchg
mov
xchg
sahf
adcl
mov
mov
adc
dec
mov
sbb
xor
jge
call
rcrb
xchg
push
fdiv
std
pop
pop
or
xor
and
insl
inc
out
mov
je
adc
xchg
inc
mov
pop
cmp
fbld
les
mov
inc
cmpsb
pushf
iret
sbb
subl
pusha
repnz
xlat
xchg
pop
sarb
sbb
inc
mov
jb
dec
cmp
out
sub
push
out
inc
mov
mov
dec
pop
jmp
and
lahf
lea
xchg
inc
ja
mov
clc
or
adc
cmp
dec
les
lods
push
ljmp
cmpsb
repnz
insl
mov
mov
popa
dec
in
ljmp
pop
jns
sar
cmpsl
jecxz
cli
in
nop
push
inc
notb
int3
jno
je
jmp
addr16
ss
scas
into
mov
clc
in
pusha
cmp
cld
fsubl
mov
mov
repnz
lods
cwtl
xchg
in
shrb
sbb
fwait
in
xchg
pop
cld
inc
sbb
les
sub
push
fimull
inc
inc
push
es
aam
mov
fdivrs
or
mov
xor
imul
data16
sub
out
incb
out
pop
ret
xlat
mov
imul
shlb
bswap
fucomi
out
mov
in
loope
or
push
int
pushf
mov
inc
into
cltd
js
dec
lahf
roll
cmovns
add
mov
cmpsb
push
jg
xor
lods
dec
sub
enter
mov
sbb
jle
dec
jmp
testl
aas
rcll
fstl
ja
movsl
xchg
or
cmp
fs
push
xor
adc
addr16
fstl
xorb
ljmp
inc
aaa
out
jno
push
cltd
lds
movsb
cmp
inc
inc
sub
or
mov
adc
enter
xchg
push
sahf
lds
aas
fs
push
lods
mov
stos
pop
adc
cmp
mov
cmpsb
cmpl
pop
pop
movsl
add
or
adc
in
lahf
mov
out
fsubrs
pop
sar
sbb
imul
pop
repz
cmp
add
mov
mov
xlat
and
sub
faddp
adc
xchg
xor
mov
push
sbbl
sbb
fadds
lret
and
sub
fistl
mov
fs
movsl
pusha
inc
outsb
mov
inc
adc
pop
int3
jb
push
imul
and
push
jge
movsl
shlb
and
or
pop
jb
inc
adc
lret
push
cmp
cmp
lods
cmpsb
xchg
sarb
xor
sub
pop
popa
mov
std
loopne
aam
xor
roll
push
mov
cmp
clc
pop
ljmp
mov
clc
cmp
fidivrl
pop
jecxz
in
pusha
test
add
xor
out
aaa
pusha
nop
mov
jo
jle
cs
pop
les
push
fdivs
xchg
mov
vandps
cld
xor
into
push
dec
mov
out
loope
jbe
dec
rcr
jo
and
scas
or
xchg
js
jns
mov
fsubrs
dec
lds
test
adc
jne
inc
push
mov
ret
cmp
loope
cmp
lahf
imul
pop
pop
push
cmp
jo
or
repz
std
call
cltd
jle
mov
pop
sbb
sbb
ret
adc
add
push
sahf
orl
ljmp
jno
sbb
xchg
push
push
sbb
ljmp
imul
incl
mov
das
dec
jecxz
loope
and
aad
add
ficomps
cmp
insl
pusha
mov
xchg
push
mov
pusha
pop
inc
fsubrl
rclb
movb
je
mov
js
push
lcall
cmp
cmp
testb
cmp
loope
lahf
add
loop
cmp
pop
movsl
pop
push
inc
dec
adc
lock
cmp
out
cmp
shrl
jle
adc
int
add
xchg
sbb
movsl
and
jbe
hlt
xchg
xchg
rcrb
push
pop
mov
repz
mov
cmp
cmp
pushf
mov
cbtw
mov
lret
lods
testl
outsb
jge
jbe
and
js
cmp
test
in
sub
insb
add
xchg
aam
and
ss
addr16
push
mov
int3
add
je
js
lods
mov
dec
lahf
or
xchg
js
aaa
mov
mov
sbb
cmp
and
push
imul
pop
or
shl
adc
dec
frstor
mov
mov
and
and
cmp
cmp
sbb
mov
gs
mov
ja
jns
lret
mov
outsb
lret
and
subl
pop
sub
xchg
nop
mov
dec
mov
fwait
lahf
stc
mov
mov
fs
add
fimull
jle
or
out
sbb
outsl
jmp
mov
jb
push
dec
daa
or
mov
mov
mov
mov
or
xor
test
imul
add
push
jb
daa
adc
js
or
add
icebp
sub
pop
jp
aad
stos
lret
adc
xchg
cmc
jg
in
jge
push
test
jle
nop
sysexit
clc
xchg
xor
xor
sbb
and
in
inc
inc
fstl
mov
push
test
cwtl
mov
cmp
push
movsl
pop
leave
jg
mov
cmpsl
loop
packsswb
and
or
xor
movsb
loop
lahf
popa
fsubrl
mov
je
lods
lods
xchg
pop
inc
inc
loop
lock
movq
mov
clc
cmpsb
mov
out
dec
mov
jg
sbb
pop
jl
iret
roll
ds
push
jecxz
mov
add
leave
in
data16
jns
lods
xchg
scas
or
or
cmp
or
loopne
mov
xchg
fnstsw
call
int
pop
jno
fs
pop
pop
movsl
push
xor
loopne
mov
dec
sub
push
leave
or
fiadds
cli
push
xchg
xor
pusha
or
push
rcll
int3
pop
dec
push
pop
mov
mov
ss
mov
xor
add
mov
insl
add
repnz
mov
inc
notl
xor
stc
pop
pop
out
jle
iret
push
lahf
sub
lds
outsb
subl
ret
lock
in
stos
stos
add
jns
icebp
nop
in
mov
cwtl
xor
aas
xchg
add
mov
js
popa
push
leave
inc
lahf
xor
call
jbe
mov
rcrb
mov
mov
push
sbb
mov
mov
dec
movsl
jmp
cmp
adcb
in
pushf
pushf
inc
enter
push
mov
inc
and
or
pop
ljmp
aas
cmp
insb
and
fistl
aaa
dec
out
mov
into
stos
mov
mov
dec
icebp
inc
ljmp
popf
xor
pop
fwait
es
or
hlt
mov
lret
loope
jbe
cmp
mov
sarb
mov
sub
ja
mov
sti
hlt
mov
jns
mov
inc
movsl
lret
out
clc
jl
loope
mov
mov
push
sbb
daa
ss
jb
movsb
leave
test
fsubr
cmpsl
pusha
adc
jge
cli
adcl
xchg
mov
sbbl
sub
std
mov
mov
lea
xlat
daa
ss
pushf
mov
test
clc
pop
stos
lcall
call
movl
add
add
dec
sub
mov
scas
dec
icebp
cmp
adc
lahf
test
fucom
popf
mov
negb
test
filds
aad
idivl
imul
adc
cmp
call
ficompl
jno
cmpsb
lds
adc
in
fisttpll
leave
pop
cmp
pushf
jbe
aad
fucomi
lock
dec
fsubl
lds
adc
outsl
cmc
popa
ja
rol
fstl
push
or
and
add
pop
or
dec
call
xlat
and
cmp
lods
adcb
sbb
adc
in
jnp
scas
xchg
and
xchg
jbe
pop
roll
je
push
lret
cmp
add
int3
andb
and
sbb
mov
jle
repnz
inc
xchg
or
sarl
add
insb
xchg
mov
andl
mov
addr16
decl
loop
mov
in
aaa
push
cld
xor
lea
aas
hlt
int3
jns
inc
and
mov
mov
pop
cmpsb
xchg
mov
idiv
mov
fcoms
xor
enter
cltd
inc
sbb
daa
faddl
sbb
out
or
stos
jl
popa
sub
gs
shl
stc
push
sbb
xchg
je
mov
lds
jnp
jbe
mov
sub
jns
xor
and
ds
sbb
dec
fsubrp
jnp
int
in
mov
push
addr16
mov
xorb
push
cmp
add
fwait
in
ficoml
push
sbb
repnz
das
pusha
add
mov
mov
pop
adcl
jecxz
push
inc
xchg
xchg
popa
pusha
fcomps
lds
ljmp
hlt
inc
fstpl
aaa
adc
negb
dec
adc
leave
inc
inc
scas
stos
movsl
or
xor
shlb
push
rcrl
fidivrl
inc
call
mov
mov
into
or
loope
loop
xlat
shrl
push
icebp
or
mov
xchg
bound
repnz
lcall
fimull
xlat
fdivl
cld
std
inc
jg
cmpsb
mov
mov
ds
inc
js
mov
rcl
cwtl
push
jp
and
rclb
push
inc
cmpb
push
lret
int3
imul
jmp
imul
mov
outsl
rclb
sti
cmpsl
mov
rcr
test
sub
mov
stos
add
and
mov
lds
je
scas
sbb
test
sbb
pop
mov
mov
bound
subl
and
icebp
inc
fsts
xchg
inc
insl
add
out
cli
cmp
inc
and
dec
lret
pop
pop
and
fs
xchg
cwtl
stos
mov
sbb
fistps
shrl
in
inc
fstl
mov
fisubrl
adc
shll
jno
xchg
sbb
ret
jbe
ja
iret
mov
cmp
mov
dec
dec
mov
xchg
cmp
pop
xchg
loopne
xor
andb
les
add
mov
mov
aaa
sub
sub
sahf
push
or
adc
sbb
pop
or
push
pop
mov
mov
lret
push
sub
ficoml
sbb
sarb
neg
or
sarb
mov
xor
pop
mov
sbb
das
test
movsb
dec
and
arpl
movsl
imul
mov
adc
fdivr
rcll
out
test
xchg
adc
inc
scas
int
div
jmp
jb
jle
icebp
call
fs
pop
xchg
or
xchg
push
outsb
mov
mov
sub
sarb
repz
test
lods
cmpsl
dec
cmp
in
mov
test
nop
pop
sbb
call
inc
jmp
mov
dec
shr
jg
push
lahf
push
jp
jnp
mov
popa
loopne
fwait
or
push
or
stc
jmp
pop
mov
xchg
inc
sub
push
pop
inc
loopne
repz
int
inc
xchg
out
xchg
xchg
push
inc
lock
sbb
and
imulb
dec
fcoml
mov
mov
nop
popf
mov
lods
cmpb
jb
jne
stc
fwait
mov
cmp
hlt
sbb
rcrb
inc
dec
push
or
mov
jl
andb
adc
loopne
fwait
jle
scas
cmpsl
push
pop
dec
inc
fistpl
and
fwait
and
mov
jle
sub
mov
sbb
jmp
pop
jae
call
repz
push
data16
aaa
fdivrs
leave
inc
or
and
outsb
loope
sub
pop
jl
push
inc
movsl
inc
jo
add
xchg
mov
jp
orl
bswap
mov
rcll
push
shll
scas
xchg
push
or
push
and
les
lret
sbb
inc
pop
mov
int3
cmp
cwtl
sbb
arpl
dec
insb
icebp
scas
sarb
push
mov
das
icebp
xchg
cmp
test
roll
mov
cmc
in
outsb
cltd
cmpsb
ret
mov
and
dec
jge
xor
sub
daa
lcall
jp
out
lea
das
pop
xchg
aam
pop
mov
push
je
scas
push
pop
stos
jp
les
cmpsl
jno
jp
addr16
add
and
sbb
push
fs
push
dec
out
pop
fwait
dec
dec
push
xchg
cmpsb
cmpsl
xchg
lock
adc
mov
push
mov
in
fwait
jp
cmpsl
aas
ret
jnp
adc
aad
aas
mov
dec
push
push
or
jge
xor
ja
cld
xchg
jmp
xchg
out
jle
jns
ds
sbb
xor
es
add
add
in
inc
cmc
pusha
cmp
pop
test
enter
andl
imul
gs
daa
jb
out
insl
shll
dec
mov
mov
loop
pusha
ja
xchg
cmc
jle
pop
mov
out
pop
movsl
dec
cmp
xchg
icebp
jp
rcr
fdivl
adc
jns
stos
scas
xchg
rcrl
or
loope
gs
fnstcw
xor
and
xchg
repz
jl
sub
or
rcr
int
ds
lahf
xor
dec
xchg
test
les
pop
mov
dec
xchg
movsl
inc
lcall
mov
pop
dec
adc
shll
js
push
push
mov
sub
mov
stos
push
mov
pop
fcoms
loopne
stos
mov
and
mov
jns
insb
clc
pop
dec
push
cmp
shlb
addr16
dec
in
dec
lds
sbb
jne
or
jbe
scas
inc
imul
lcall
call
mov
out
fisttpll
movl
jp
inc
xchg
cmpsb
cmp
pop
lret
call
sbb
dec
and
aam
inc
fdivr
mov
mov
lods
and
xchg
dec
mull
fcompl
mov
mov
imull
ljmp
hlt
jns
sub
leave
scas
adc
fst
jbe
ja
loop
push
adc
sub
sub
fnstsw
adc
lahf
testl
test
outsl
jecxz
and
push
or
cmpsb
mov
jl
icebp
ja
movsl
inc
or
jg
movsb
cmpb
mov
inc
arpl
sub
mov
imul
dec
nop
inc
hlt
mov
sub
es
lods
push
into
mov
push
pop
cmp
dec
bound
sub
sbb
cmp
xor
add
imul
outsl
shrb
inc
ljmp
cld
jns
loope
mov
cli
push
push
mov
dec
cmp
lods
push
negb
insb
pop
xor
sbb
push
notl
insb
dec
mov
cmc
xor
jnp
test
pop
mov
sub
sbb
and
and
and
or
or
xchg
mov
mov
in
mov
hlt
pop
dec
mov
fistpll
mov
and
cmp
adcb
cmpsl
mov
insl
fcompl
loop
cmp
xchg
repz
mov
int
cmp
cltd
hlt
inc
and
xor
jnp
jecxz
int
movsb
sub
imul
loopne
push
lods
lods
and
aad
sub
fisttpll
dec
mov
pop
lahf
mov
xor
push
adc
push
movsb
inc
push
je
sub
mov
pusha
fwait
scas
std
jno
and
inc
popf
shlb
ds
sub
cmp
or
jecxz
pop
lock
mov
xchg
xlat
or
outsb
inc
mov
jl
jae
jmp
rcrb
scas
mov
dec
mov
daa
cmp
pusha
fisubrl
or
sbb
das
scas
push
ret
mov
pop
cwtl
mov
xchg
mov
pop
inc
xchg
cltd
push
sbb
cmp
jg
cmp
bound
fs
jp
jb
orb
adc
xor
mov
in
and
mov
fcoml
sub
addr16
mov
jne
dec
in
es
stc
adc
xchg
cld
sbb
xchg
subb
xchg
mov
test
push
ds
xchg
jmp
push
aad
dec
add
adc
scas
xor
pop
pop
cmp
xchg
pop
push
ret
movl
and
rorb
test
sarl
in
xchg
adc
jp
call
dec
cmp
sbb
pop
cmc
or
leave
pop
xchg
push
adc
ds
xor
insl
jo
push
lea
push
loop
fistpll
add
test
sub
pop
in
jg
pushf
jp
popf
repz
ror
lret
sub
nop
push
lods
aas
pop
cmp
sub
test
fnstenv
mov
or
inc
enter
xor
pop
push
inc
test
mov
pushf
pop
xchg
cmpsb
mov
cmp
mov
daa
out
clc
inc
inc
xor
call
pushf
add
jg
stos
aad
xchg
and
mul
mov
loop
push
ret
cmp
xor
int3
jbe
mov
lods
lea
and
mov
mov
inc
cmc
cs
adc
das
cmp
aaa
addb
cltd
xor
sub
sti
insb
fists
jbe
add
sbb
outsb
or
aaa
enter
adc
out
test
jb
outsb
dec
shrl
fiadds
inc
incb
testb
push
cwtl
sarl
stos
xchg
cmc
cmp
movsl
adc
into
hlt
jbe
nop
loopne
insb
push
insl
movsb
mov
dec
inc
ljmp
push
and
push
fs
out
cmp
lds
icebp
lcall
xchg
cmp
xor
jno
shlb
movsl
fcoms
push
push
fnsave
lds
mov
sbb
clc
data16
sub
inc
mov
mov
mov
and
mov
imul
adc
leave
adc
int3
add
xchg
call
add
pop
jae
idivb
repnz
insl
sbb
cli
out
lock
push
mov
pusha
and
jnp
pusha
cltd
aas
jge
adc
xor
jb
cmpsb
pop
cmpsb
jecxz
push
fstp
mov
std
inc
dec
fbstp
testl
push
sbb
stos
shll
scas
decl
mov
int3
mov
mov
int3
xor
rolb
fadds
lods
jge
pop
cmp
mov
ror
in
jle
or
or
sub
mov
shr
in
data16
std
mov
popa
addr16
and
push
push
jecxz
or
or
stos
push
pop
jg,pn
mul
ja
cmpsl
mov
fcom
scas
cmp
pop
lret
or
mov
mov
aaa
jmp
lods
adc
inc
lahf
xchg
insb
das
cmp
stos
rorl
pop
addr16
cmp
aas
repz
je,pn
out
rolb
xor
xchg
mov
jl
cmpsl
jnp
aaa
push
das
sbb
jmp
pop
in
mov
push
sub
inc
xchg
pop
xchg
stos
movsb
adc
push
nop
daa
lea
sbb
jl
inc
push
xchg
outsb
adc
scas
xchg
subb
cld
jne
adc
ljmp
iret
aad
dec
shlb
rclw
dec
int3
out
sub
add
push
mov
cmp
outsb
mov
fdivr
mov
xchg
leave
js
sbb
cmp
pushf
inc
aas
shl
sar
repz
fadd
or
or
insl
xchg
cmp
jns
aam
lods
jae
mov
mov
pushf
mov
adc
pop
add
dec
pop
sbb
ret
push
dec
inc
push
jae
mov
or
ja
xchg
icebp
mov
and
or
dec
into
sub
into
push
adc
loop
rclb
mov
pop
pop
push
rcrl
mov
out
stos
iret
mov
shr
loopne
push
xor
xchg
dec
aas
pop
xchg
loop
add
mov
inc
enter
loope
into
inc
lock
add
xchg
cmp
push
inc
jge
popf
cs
push
repnz
popa
adc
cmc
mov
pop
add
or
iret
mov
mov
sbb
aam
adc
and
sbb
cmpsl
mov
sti
adc
xor
mov
or
sub
lret
adc
pop
and
fidivs
inc
push
push
mov
pop
pop
or
xor
sub
dec
push
and
repnz
pusha
repnz
shlb
xchg
add
pop
sub
pop
ja
loopne,pn
lahf
in
sub
lods
pop
pop
jmp
inc
jno
popa
iret
or
mov
or
jae
enter
push
mov
js
pushf
jl
xor
pusha
jecxz
lods
xchg
std
movsb
pop
sbb
pop
push
xchg
jno
sub
shrb
lahf
pop
mov
mov
popf
mov
insb
stos
movsl
sub
pop
ja
and
scas
or
or
lods
or
add
test
inc
sub
jb
scas
aas
and
cmp
int
sahf
inc
fistpl
push
inc
jno,pn
int3
mov
or
stos
lahf
xchg
jle
scas
fs
inc
inc
dec
sbb
push
hlt
pop
lods
and
and
fdivrs
loop
or
iret
test
mov
pop
dec
out
jnp
stos
out
in
mov
daa
cmp
lret
sub
push
rclb
xchg
mov
fndisi(8087
ds
mov
cmpsl
ret
cmp
xchg
and
add
push
cmp
cltd
jecxz
andb
mov
or
mov
lods
pop
test
pop
add
jns
pop
pop
cmc
sbb
pavgw
dec
jp
je
out
cli
xlat
into
fsubr
mov
cld
cmovae
lcall
pop
mov
mov
enterw
test
lock
jno
fwait
and
repnz
test
adc
inc
pop
mov
lahf
bound
stc
cli
imul
mulb
fldl
out
int
add
imul
daa
ds
aaa
adc
push
lret
andb
mov
xchg
imul
insl
and
sbb
adc
into
iret
xor
ret
ret
popf
add
daa
or
mov
aam
aas
mov
aad
jae
xor
mov
sub
popa
fs
fwait
es
outsb
fbld
shlb
rcrb
rcr
add
jmp
xor
fimull
push
sbb
sahf
movsb
hlt
sub
jle
push
gs
adc
adc
popa
bound
decl
sbb
pop
xlat
es
and
lret
in
das
int3
mov
jnp
add
fbld
imul
aas
and
in
pop
dec
dec
mov
sub
jmp
js
pop
xchg
aas
repnz
aad
xorl
insb
andb
das
arpl
lcall
adc
jbe
pushf
pop
cmp
je
adc
cmc
lods
and
imul
jnp
or
cmpb
insb
mov
xchg
xchg
call
dec
push
jo
jmp
fdivrs
fs
out
arpl
loop
dec
out
mov
mov
sub
sti
in
add
dec
mov
or
cmp
mov
movsl
lcall
sbb
loop
hlt
inc
xchg
imul
xor
xchg
adc
mov
into
outsl
shrb
clc
ljmp
jle
xor
mov
test
add
rcrl
dec
fldcw
push
inc
popa
fwait
cld
adc
repnz
dec
bnd
aad
repz
pop
xchg
inc
sub
mov
std
rclb
call
cltd
push
pop
dec
cmpsl
js
add
jp
rol
scas
inc
pop
stos
fcoml
popa
adc
sarb
notl
andl
stc
inc
dec
fiadds
das
into
lods
xchg
jbe
fsts
or
lods
sub
mov
jmp
lret
cld
mov
inc
cmpsb
dec
loopne
mov
xchg
cmpsl
nop
or
sahf
mov
movsb
lret
sbb
test
mov
adcb
outsb
mov
lds
or
hlt
js
cmpsb
dec
pop
fwait
aas
adc
xor
xchg
stos
test
nop
scas
repnz
int
arpl
aas
sbb
jae
movsb
jbe
adc
xchg
enter
adc
and
jae
cmp
mov
inc
loopne
dec
ja
mov
sarb
mov
jae
or
xor
mov
pop
lcall
add
inc
pop
dec
int3
loop
movsl
xor
iret
orb
cmpsl
inc
pop
pop
mov
shlb
cmc
mov
mov
fildll
xor
loop
dec
sarl
in
inc
push
leave
mov
lret
fists
je
sahf
xchg
pop
jmp
pusha
dec
cmpsb
sarb
and
lret
fcompl
xchg
pop
cmpsb
jnp
les
out
in
xor
testb
into
movsb
insl
test
iret
iret
addr16
adc
adc
insl
clc
dec
mov
fisubs
lret
test
icebp
enter
sti
cmp
push
dec
jo
sarb
and
cmp
inc
out
hlt
and
lea
lcall
jle
in
add
xchg
push
js
stos
cmpsb
cmp
jmp
or
adc
lds
loopne
lods
vunpcklps
das
inc
or
subb
adc
jnp
xlat
xor
pop
xor
jecxz
movsl
xchg
mov
push
out
and
lret
mov
pop
sti
xchg
loopne
lcall
setno
pop
shlb
js
lahf
lds
pop
and
incl
out
js
mov
cmp
scas
faddp
jge
adc
pushf
jnp
cmp
mov
jmp
ret
icebp
lock
jns
aad
popa
jge
dec
cmp
out
repz
push
mov
sub
cmp
jg
mov
sbb
ja
push
or
repz
in
xchg
sub
or
ja
aas
mov
adc
pop
push
inc
mov
dec
xchg
jbe
cmp
outsl
add
in
rol
dec
unpckhps
in
je
cmp
adc
inc
jle
add
pop
mov
scas
fmull
push
movsb
jnp
mov
ja
aam
lds
adc
aas
outsb
adc
adcb
add
or
ss
lock
jl
insb
and
fstps
aaa
pop
and
lcall
sub
pop
dec
mov
js
lock
mov
scas
xor
pop
mov
mov
fcmovb
sbb
outsl
data16
inc
movsb
sub
punpckhwd
add
lcall
cmc
inc
cld
dec
ja
sbb
daa
xor
xor
jecxz
cmp
shrb
push
xchg
fidivrl
inc
inc
mov
xchg
and
sbb
ja
clc
push
icebp
adc
xchg
push
adc
das
stos
outsl
xor
mov
mov
out
jbe
mov
and
inc
popf
jmp
movsl
rol
cmpsl
and
fldl
imul
jns
in
xchg
dec
scas
insb
jbe
lahf
orb
inc
scas
xor
cmp
loope
adc
jae
jne
data16
lahf
inc
xchg
and
jns
enter
sarl
lods
in
sbb
mov
jl
pop
cmp
or
insb
sti
subb
pop
in
push
mov
repz
xchg
or
sti
dec
xchg
lods
iret
fidivl
notl
mov
ljmp
and
mov
add
out
jbe
sarl
mov
daa
cmpsb
aaa
sub
aas
sbb
fwait
xor
insl
push
xchg
and
leave
enter
and
shll
add
add
sbb
repz
lret
aam
fs
test
dec
dec
rolb
sub
push
lcall
sbb
cwtl
or
std
add
pop
or
or
in
push
test
pop
push
push
jnp
int
push
rcll
ds
fsubr
mov
or
test
pop
jmp
lcall
xchg
jbe
daa
mov
lods
dec
adc
out
pusha
dec
std
in
outsb
push
or
loopne
cltd
xor
mov
in
mov
iret
jecxz
adc
xchg
test
xchg
xor
cli
lea
int3
cmp
negb
fsubrs
nop
shrl
xchg
fwait
in
xorb
or
aas
xchg
movsl
add
les
cmc
std
adc
mov
lret
and
aaa
mov
cld
imul
pop
mov
adc
adc
aad
mov
lds
pop
pop
fbstp
sti
scas
jb
imul
test
lret
pop
adc
int3
js
addr16
cmp
jecxz
sub
cmp
sbbb
mov
jp
inc
sbb
adc
add
adc
fimuls
jge
mov
iret
dec
lock
adc
out
mov
fsubl
dec
xchg
mov
adc
inc
inc
std
sub
cs
shrl
cmp
and
xchg
les
in
cmp
dec
pushf
and
das
rcl
ret
jno
scas
inc
mov
repz
lods
sub
popa
ja
and
mov
and
xchg
xchg
jo
out
test
adc
jg
addr16
inc
push
gs
ljmp
push
mov
outsb
and
int
and
mov
lret
inc
pop
push
aaa
xlat
icebp
fcompl
lret
mov
xrelease
fcmovnb
xchg
repz
add
jmp
imul
sbb
int3
adc
or
popl
in
and
adc
push
mulb
ljmp
mov
stc
xchg
mov
das
movsl
scas
inc
sub
sub
stos
rorb
xor
lds
pop
mov
int
xchg
and
loopne
lock
popf
cwtl
or
leave
test
add
xchg
push
leave
pcmpgtw
and
adc
icebp
xor
mov
rcrl
jbe
call
sbb
adc
xor
out
mov
ds
pop
imul
cli
daa
ficoms
rorl
jmp
sub
insb
loopne
fwait
aam
dec
dec
pop
jo
cld
lret
fbstp
or
cmpsl
mov
popf
cmpb
mov
xchg
jge
lds
aaa
inc
rorb
pushf
rol
out
out
out
int3
sbb
or
xchg
inc
xchg
pop
push
jp
insb
iret
imul
xor
xlat
and
xor
sbbl
push
dec
call
mov
loope
adc
xchg
jo
jnp
enter
cwtl
aas
lods
cmpsl
std
mov
dec
dec
cmp
xor
out
sub
jo
xchg
fists
ds
inc
cmp
inc
pop
stos
divb
pushf
ljmp
es
mov
or
add
ljmp
imul
mov
mov
stos
hlt
mov
dec
or
pop
test
prefetch
dec
xor
in
flds
mov
xor
shll
push
outsb
mov
or
jecxz
dec
test
inc
loop
xchg
cmpsb
into
jl
pop
sub
test
std
das
fidivrl
push
and
scas
pop
or
stc
mov
dec
adcl
push
jbe
clc
mov
xchg
stc
cmp
mov
mov
js
pushf
dec
cmp
lds
leave
mov
mov
in
sub
sub
xchg
push
std
push
in
lea
pop
or
inc
call
shl
clc
ss
xchg
pop
daa
sbb
movl
adc
out
or
out
push
mov
mov
popa
int
adc
out
gs
jae
push
out
cmpsb
std
shl
push
sbb
fucomip
mov
test
test
dec
mov
popa
pop
dec
xor
vminps
jo
or
sahf
in
mov
mov
xchg
add
stc
or
ss
pop
lea
push
jp
mov
xchg
stos
inc
mov
fnstsw
push
sub
imul
mov
cs
fsubs
pusha
addr16
out
jne
or
add
sbbl
or
stc
lods
cmp
xlat
or
pop
sbb
scas
das
mov
xchg
mov
movsl
lret
pop
xchg
and
pop
mov
add
lahf
pushf
movsb
sub
add
xchg
add
jmp
pop
adcb
dec
xchg
or
mov
sub
pusha
loop
out
fistpll
fwait
test
cmp
xor
xchg
mov
aas
fmuls
mov
mov
fwait
jecxz
imul
and
sahf
push
jle
mov
xchg
cmp
push
mov
adc
add
ds
in
hlt
lahf
jl
pushf
test
add
out
mov
mov
decl
sub
lcall
add
mov
fmuls
scas
mov
mov
sbb
mov
mov
mov
sbb
push
adc
orl
arpl
mov
fldcw
lea
js
pusha
add
pop
and
cmp
xor
lods
sub
add
test
mov
out
xor
rol
or
cmp
ret
add
fwait
leave
std
inc
loop
mov
dec
xor
fiaddl
push
mov
push
cmp
pusha
mov
jns
jne
xchg
add
pushf
pop
add
insl
frstor
and
push
jae
cmp
popa
xor
test
movsl
dec
and
adc
lods
jge
mov
pop
js
lret
data16
xor
jb
fildll
mov
jo
dec
lret
hlt
loop
and
jl
insl
testl
mov
pop
out
faddl
pop
and
div
stos
mull
testb
leave
pop
cmp
cmc
adc
dec
lahf
cli
xor
lock
cmp
mov
pop
pop
lcall
test
pop
lcall
adc
lcall
add
mov
out
scas
and
mov
push
mov
mov
jo
sarl
mov
outsb
add
xlat
into
mov
dec
shl
imul
nop
cli
inc
xor
test
adc
adc
mov
sti
xchg
jcxz
push
jp
testb
mov
movsl
aaa
inc
sbb
adc
icebp
popa
adc
test
or
jg
push
xchg
inc
cmp
mov
frstor
fsubs
jecxz
xor
dec
adc
loope
add
cmpsb
loope
es
aaa
loope
xchg
pop
in
lret
mov
stos
fimuls
les
lret
cmp
les
scas
loopne
movsb
push
push
test
pop
cmp
pop
sub
stc
sub
fdivrl
loope
popa
lea
aam
mov
aas
mov
inc
inc
pop
enter
int
imul
mov
or
inc
and
pop
rcrb
enter
jb
or
andl
imul
out
shl
rorb
cwtl
cli
mov
pop
cli
xchg
mov
arpl
movsb
jne
mov
jp
dec
jne
fisubrs
xchg
pop
mov
xchg
pop
lret
push
xor
mov
and
inc
adc
enter
jne
sahf
and
jmp
shrb
andb
dec
mov
dec
pop
add
fstpl
push
pop
jne
push
push
jmp
cmp
mov
cmp
and
push
dec
push
jbe
cmpsl
xchg
inc
cli
or
inc
mov
iret
mov
rorl
in
xchg
aas
fsubrs
imull
hlt
je
adc
sub
push
mov
push
mov
stos
out
jge
imul
mov
sbb
add
xchg
jecxz
xor
push
push
jg
xchg
rolb
lret
adc
xchg
or
push
sbb
negl
adc
ljmp
and
stos
aad
pop
enter
cmp
test
lock
add
movl
mov
stos
jmp
imull
les
xor
dec
dec
xor
notl
out
push
mov
outsb
out
pop
sti
dec
dec
shl
cwtl
aas
pop
sbb
or
iret
inc
fsubrs
xchg
push
or
xchg
pop
or
jae
icebp
push
ror
cmpsb
pop
and
mov
outsb
cmp
dec
scas
sub
arpl
sbb
add
and
mov
push
ret
and
lret
or
cmc
jae
fiadds
jl
popa
inc
mov
xchg
add
mov
mov
add
mov
push
popa
cmc
jmp
lahf
push
inc
std
mov
arpl
sti
addr16
sub
ret
mov
push
daa
les
je
jle
dec
inc
inc
adc
mul
popa
rolb
sti
ja
stos
mov
cmp
cmp
pop
fdivl
mov
andb
test
ret
les
shlb
mov
je
cmp
mov
sub
loope
call
add
outsl
cli
stc
fcomps
mov
imul
mov
mov
pop
mov
adc
data16
cmp
ljmp
add
insl
outsb
or
repz
int3
je
push
sahf
jns
fstps
xchg
cmp
loopne
and
push
std
rcrb
adc
jbe
jmp
stos
pop
outsl
fldt
or
cmp
out
loope
push
clc
mov
icebp
inc
push
cmc
inc
mov
jle
inc
sti
bound
ret
pushf
and
js
sub
loopne
cmc
lea
aam
add
sbb
jno
xor
mulb
push
pop
call
add
hlt
xchg
shlb
cmp
pop
mov
jmp
insl
stos
aas
push
mov
or
sub
imul
xchg
mov
das
fldl
fsubr
enter
jecxz
cmovs
imul
xorb
mov
sub
in
dec
das
fildll
push
push
pop
push
sub
gs
fistps
gs
mov
sarl
mov
mov
jae
mov
mov
out
sbb
pusha
push
fidivs
std
rcr
adc
xchg
mov
out
adc
mov
iret
add
sbbl
pop
and
roll
movsw
ret
sbb
leave
repnz
jl
addb
inc
out
cmp
sub
mov
push
inc
adc
test
cmpsl
mov
fldcw
lds
clc
sahf
jecxz
inc
mov
je
out
xor
cld
pushf
inc
sub
xchg
inc
push
scas
stc
jge
mov
shlb
adc
inc
mov
pop
mov
std
mov
lcall
fistps
jg
outsb
pop
pop
adc
mov
cmp
jmp
push
dec
repz
mov
mov
jnp,pn
inc
or
call
add
test
pop
out
mov
dec
in
aas
mov
int3
xor
cmpsb
mov
out
jp
or
cmp
jmp
dec
fldt
leave
jns
int
add
js
jmp
mov
lret
gs
shl
aad
sbb
inc
mov
in
cmp
jmp
faddl
div
adc
lret
push
dec
inc
ss
divb
jmp
sub
les
add
es
sbb
loopne
xchg
inc
insl
sub
and
push
jo
imul
jecxz
scas
mov
test
in
cmp
inc
rcrb
cmp
mov
push
pop
mov
sbb
add
mov
out
test
and
pop
ja
cmp
int
jno
cli
mov
sahf
adc
jle
mov
add
adc
jnp
orb
dec
mov
add
cmp
adc
repz
jo
out
addr16
int3
lea
dec
xchg
arpl
rol
mov
lods
addr16
in
in
cmp
jmp
and
mov
pushf
imul
jae
scas
mov
ja
jo
mov
enter
jecxz
in
push
mov
int3
or
je
into
ret
mov
mov
loop
mov
or
xor
adc
lret
in
dec
mov
mov
dec
scas
rolb
xchg
ds
cmp
ret
xchg
in
clc
jle
jns,pn
rcll
mov
jge
add
add
fdivl
out
sub
push
pop
push
sub
shl
jg
pop
jne
arpl
arpl
inc
or
xor
orb
in
iret
push
mov
add
pop
xchg
xchg
ficoml
pushf
add
cmpsl
pop
or
rcl
xlat
arpl
je
mov
inc
stc
mov
or
out
in
test
sbb
xchg
js
outsb
shlb
cli
mov
daa
jno
addr16
pop
lea
fnstcw
inc
add
mov
mov
mov
mov
xchg
dec
mov
xlat
jae
loop
xor
xchg
lret
repz
fnstenv
lahf
lea
shr
in
dec
mov
mov
add
adc
jns
add
xor
rorl
pushf
in
mov
fdivl
je
dec
push
pop
test
or
jno
imul
popa
mov
jp
xor
out
inc
or
fcomps
fisubs
subb
addr16
lret
dec
ret
add
and
adc
xor
push
pop
dec
pop
ret
shll
or
mov
dec
push
bound
mov
fidivrl
pop
jmp
mov
aas
pop
jo
cmp
in
push
scas
or
movsb
sbb
and
pushf
xchg
push
mov
out
xor
pop
or
mov
ljmp
jl
sub
inc
fstpl
leave
gs
xchg
jnp
mov
cmp
test
les
mov
cwtl
sbb
xor
scas
pop
push
test
shrb
mov
jae
ss
cltd
popf
xchg
mov
pop
popf
and
jb
jo
into
push
xchg
or
cwtl
xor
sub
mov
ss
jge
leave
dec
push
mov
into
cmc
mov
addr16
aaa
arpl
sbb
add
fwait
divl
int3
mov
pop
inc
or
andb
les
scas
or
jp
jg
xor
popf
mov
std
xor
push
mov
adc
inc
test
sbb
mov
shll
push
mov
add
inc
popf
sahf
in
aaa
scas
loope
ret
jno
ds
adc
sbb
lock
lods
rorb
stos
fmull
add
add
fstps
jb
ja
dec
mov
mov
adc
inc
push
lcall
push
inc
movsb
insb
mov
or
xchg
sti
ret
jns
cmpsb
mov
addb
mov
xor
add
sub
in
dec
sub
sub
or
bnd
nop
mov
xchg
ja
inc
jno
ret
rol
popf
jle
lods
outsb
data16
movb
and
int
clc
xchg
out
mov
sbb
test
wrmsr
lahf
addl
inc
std
icebp
loop
jl
pop
pop
and
and
and
popf
loopne
lret
in
cmp
cmp
dec
fs
cld
stos
movsl
testb
push
sub
and
in
sbb
add
aaa
mov
mov
movsb
jmp
std
add
push
and
cmp
test
mov
xor
xlat
add
xlat
or
jns
push
adc
popf
stos
or
mov
mov
mov
xlat
int3
shlb
mov
mov
aad
and
dec
sarl
mov
add
dec
mov
cmp
xor
add
add
mov
push
mov
ljmp
test
pop
xchg
pop
jne
add
and
popa
cmp
mov
or
stc
out
jno
pop
loopne
cwtl
pop
shrb
mov
inc
cmp
jmp
cmpsb
idiv
xor
fisttps
jae
inc
lret
or
pop
ret
pusha
sbb
aaa
mov
notb
arpl
repnz
adc
fisubrl
subb
add
sbb
aaa
push
call
pop
je
popf
and
fstp
mov
mov
loopne
push
and
insl
jmp
ret
jo
arpl
loop
mov
sub
test
dec
fcmovu
fcmovnb
inc
mov
push
sbb
mov
mov
daa
bnd
jbe
pop
xor
test
sbb
int3
daa
or
mov
dec
pop
dec
mov
std
shrl
in
std
out
insl
mov
adc
jl
scas
lret
arpl
sbb
jle
add
push
xchg
sub
imul
lahf
aaa
jae
int3
jne
iret
in
mov
add
pop
pop
sub
dec
jo
jne
xor
xchg
dec
pop
sub
dec
sub
fidivrl
push
fcom
mov
lea
stos
jecxz
test
pop
ljmp
stos
nop
imul
iret
inc
jbe
mov
into
xor
adc
dec
ss
mov
pop
in
adc
sub
fs
repnz
mov
mov
imul
out
subb
popf
or
mov
xor
lret
call
mov
rorb
pop
push
je
addr16
jno
pop
mov
mov
jp
out
pop
in
daa
mov
mov
sub
mov
dec
rorl
fmull
xchg
cmp
inc
and
insl
mov
int
cli
xchg
fists
movsb
push
les
ret
mov
add
xchg
adc
mov
shrl
clc
push
ds
daa
mov
test
dec
xor
xchg
pop
mov
inc
and
mov
jb
js
arpl
cli
and
gs
push
das
psubq
jle
ljmp
cmc
sarb
lret
int3
in
fbstp
or
loope
notb
sub
out
out
mov
adc
and
adc
out
pop
stc
mov
sbb
mov
mov
imul
fbstp
xor
xchg
sbb
sub
mov
lods
pop
ja
mov
jle
cmpsl
xor
mov
shll
jae
jg
jp
stos
cmpsl
lcall
xlat
cmp
cld
je
xchg
cmpsb
arpl
jp
xchg
fiadds
idivl
xor
cmpsb
sbb
es
dec
ficoml
sub
insl
sub
push
int3
xor
and
jge
inc
test
sti
jl
and
inc
or
imul
dec
ficompl
mov
jae
out
or
jp
sbb
lret
xchg
movsb
dec
dec
xchg
stc
std
or
dec
pop
mov
pop
pop
mov
and
mov
inc
and
sub
inc
int
add
dec
bound
or
fmul
jbe
pushf
xchg
inc
jmp
lods
imul
dec
neg
push
sub
xor
cs
or
xchg
pop
mov
mov
into
pusha
and
mov
lret
jo
mov
mov
ficoms
in
ja
and
push
clc
pushf
mov
push
das
cmp
addr16
jb
dec
jl
out
mov
stc
movsl
ds
sarl
arpl
xor
mov
pop
add
stos
xor
ss
clc
out
fnstcw
adc
xor
dec
push
jge
imul
test
xchg
je
punpckhbw
cmp
and
mov
shrb
in
and
mov
lods
insl
dec
mov
sbbb
adc
add
mov
xlat
divl
sbb
mov
mov
ret
pop
xor
pop
jo
sub
dec
icebp
pop
mov
push
bound
mov
aaa
jb
pop
insl
dec
aam
fdivrs
or
mov
fisttps
pop
mov
stos
loope
mov
or
dec
cmp
jl
push
xchg
out
test
loop
bound
out
cmp
test
pushf
stos
jae
mov
cltd
sub
scas
dec
pop
ss
ret
and
inc
fdivr
cwtl
mov
cltd
pop
mov
divl
jmp
les
push
sub
out
cs
xor
pop
push
xchg
fstpt
jo
shll
and
jno
xor
icebp
pop
jmp
addl
push
push
fmull
sub
jmp
mov
inc
add
loop
nop
js
outsl
adc
nop
cli
xor
loopne
or
jo
dec
ja
mov
cmp
popa
test
mov
push
out
mov
dec
dec
in
pop
adc
daa
fiaddl
add
rclb
mov
xor
popa
pop
daa
pop
sahf
xchg
xchg
lahf
jae
mov
add
fdivrl
mulb
hlt
pop
leave
mov
and
daa
int3
daa
addr16
mov
lahf
into
insb
inc
insb
ja
pop
test
sahf
xchg
insb
out
add
fbld
sbb
sub
stc
cltd
xchg
ficomps
xor
inc
rcrb
push
enter
lret
mov
xchg
sub
jbe
lock
mov
jbe
jno
mov
icebp
push
sbb
and
outsb
mov
test
aad
jns
inc
mov
inc
leave
xor
xchg
add
pop
and
pushf
mov
cmp
xchg
mov
out
movsl
fwait
dec
aad
popf
rol
xor
scas
outsb
test
in
in
fdivrp
lds
xor
jl
lods
icebp
xchg
incl
loopne
and
jg
int3
xor
xor
inc
xchg
nop
cs
cwtl
push
fbstp
or
adc
daa
out
aaa
fiadds
loop
fsubl
insb
sahf
hlt
mov
sbb
lods
push
pop
inc
mov
jmp
pop
pop
inc
stos
add
out
inc
jo
mov
mov
stc
lret
dec
pop
xor
out
sbb
xchg
popl
sbb
xchg
movsl
jge
lods
add
sbb
xchg
fdivl
out
xlat
call
sti
negb
popf
mov
scas
push
or
xor
loop
fsubr
add
cwtl
cwtl
mov
xor
pop
cmpsl
mov
dec
add
sub
cmp
xchg
out
pop
cmp
inc
cmc
dec
jecxz
inc
inc
xchg
sub
shl
jecxz
insl
sub
jmp
lds
rcll
ljmp
mov
scas
and
sar
sub
repz
addr16
dec
test
add
mov
mov
push
je
and
lahf
out
out
movsb
in
add
lahf
or
push
sub
sbb
dec
fcmovne
mov
incl
pop
add
jb
dec
aaa
mov
int3
das
add
or
cmp
shll
xor
xor
mov
icebp
andb
sbb
fs
xor
adc
sbb
packsswb
test
inc
inc
dec
add
and
xor
imul
cmpsb
sahf
pop
pop
fs
sbb
pusha
enter
cli
xor
cltd
mov
insb
pop
ss
cld
jecxz
fnstenv
dec
idivb
mov
xchg
and
sbb
rcl
sub
movsb
sti
test
mov
roll
add
jmp
testb
repz
dec
pop
adc
inc
aas
lahf
and
cli
mov
js
xchg
test
stos
push
movl
dec
cs
rcrl
push
rcl
xor
sub
imul
ret
loop
xor
sub
ja
pop
sahf
data16
ret
out
mov
bound
subb
in
jmp
cmpsl
mov
ja,pn
out
jo
clc
push
aaa
mov
rcr
pusha
retw
mov
mov
and
cwtl
mov
mov
mov
test
movsb
adc
and
outsl
cmc
mov
sti
movsb
fsubrs
stc
ja
mov
data16
es
push
xchg
scas
sbb
push
or
test
out
push
mov
mov
xchg
test
leave
icebp
lret
and
sub
push
sbb
rorl
inc
fs
mov
mov
dec
out
lret
scas
add
push
pop
aaa
xchg
cmp
pushf
jecxz
jnp
or
je
mov
sbb
mov
xor
adc
xor
pop
sbb
ss
sbb
cmp
aam
insl
repz
mov
xchg
pop
pop
aaa
je
lea
test
mov
add
mov
mov
jbe
pop
push
pop
xor
clc
sub
xor
andb
adc
lock
sbb
pop
push
mov
and
rorl
sahf
sub
jo
jnp
inc
pop
es
fs
or
xor
or
pop
cs
push
and
xchg
lcall
mov
ficompl
cmpsl
adc
int3
das
cmp
daa
jmp
pop
rcll
mov
jl
mov
fcomps
push
test
ss
sbb
fldl
adc
push
pushf
imul
dec
and
ss
flds
cmpsl
sub
jmp
movsl
aaa
xor
inc
outsb
stos
pop
sub
jmp
out
je
adc
movsl
call
scas
adc
lret
cmc
add
mov
leave
test
rcl
sbb
icebp
or
popf
cmc
aad
inc
mov
xor
dec
out
add
mov
sar
mov
mov
cmp
fndisi(8087
push
adc
sarb
leave
mov
and
mov
push
xor
shl
pop
fwait
mov
sub
sub
push
dec
mov
adc
adc
mov
in
cmpsl
mov
cwtl
dec
inc
pop
xchg
aam
xchg
pop
js
pop
outsl
and
sbb
sub
mov
lret
xchg
idivl
add
repnz
rcl
test
and
xchg
and
cli
sub
icebp
outsl
or
daa
or
pop
xchg
lock
adcb
lret
mov
fcompl
call
sbb
jno
mov
pop
cltd
bound
jmp
lds
jg
scas
and
adc
js
int3
fs
sub
std
push
aas
pushf
mov
out
push
mov
and
fcompl
clc
jae
ret
lahf
call
sahf
sahf
and
std
jecxz
xchg
addr16
je
aad
sbb
das
dec
dec
mov
push
jno
xchg
pop
lret
jp
ret
mov
dec
add
cmp
mov
mov
ja
mov
push
cwtl
pop
int
jl
and
push
sbb
jge
cmp
inc
mov
std
js
pusha
outsl
xor
mov
or
jp
mov
xchg
fistl
idiv
dec
mov
fwait
push
pmaxub
popw
call
add
inc
push
sub
imul
call
shll
jecxz
icebp
and
mov
xor
stos
push
lret
pop
mov
xor
loope
jns
or
lods
jecxz
lods
jno
int
sub
aaa
fidivs
test
inc
cld
lret
gs
ss
std
inc
mov
fcom
pop
cmc
adc
cs
loopne
inc
xor
pop
movups
repnz
aaa
mov
sub
mov
jmp
hlt
jge
dec
std
xchg
add
cld
and
pop
movsb
idivl
outsl
push
pop
lret
lods
and
cli
pop
flds
lcall
push
std
lock
and
mov
inc
dec
lds
in
movsb
jmp
test
notb
mov
in
jmp
imull
jecxz
iret
inc
and
rcrl
rcll
fimuls
pop
imul
mov
push
push
lds
dec
nop/reserved
leave
iret
es
aaa
mov
fcmovnbe
fwait
sti
xchg
adc
ljmp
adc
inc
js
inc
pushf
push
cs
mov
rol
xchg
js
scas
or
dec
pushf
sbb
flds
int3
ja
lahf
jne
mov
xor
inc
lret
lock
je
js
pop
out
pop
jns
fsubs
iret
dec
mov
dec
lods
out
mov
pop
mov
pusha
sbb
add
jno
into
push
shlb
ret
leave
dec
stos
mov
push
pop
icebp
pushf
cmpsb
dec
sub
gs
mov
jae
push
cmp
push
push
fadds
test
inc
mov
cmp
jns
cmp
xchg
sbb
adc
cs
jne
add
pop
pop
push
imull
sbb
mul
cmp
insb
push
sbbb
daa
sub
cmp
mov
jne
call
mov
call
and
xchg
dec
lods
mov
push
shrl
es
std
mov
stos
or
cmp
jg
adc
fisttpl
adc
loop
push
mov
sarb
imul
dec
scas
xchg
call
pop
dec
and
in
cmp
aam
ret
loopne
pop
mov
outsl
push
data16
cs
call
data16
scas
pop
mov
jbe
arpl
mov
in
mov
lea
sbb
mov
inc
fistpl
adc
mov
lds
or
lcall
push
nop
int
cmp
adc
mov
xorb
xchg
data16
fdivrl
sub
push
sub
out
or
gs
mov
cltd
pushf
lods
lds
dec
loopne
std
mov
mov
mov
jnp
push
inc
insl
test
or
xor
jne
mov
push
mov
nop
stos
mov
outsl
mov
scas
push
sbb
ss
jle
addb
xchg
imul
aaa
aam
mov
nop
sbb
push
mov
fistps
push
pop
inc
pushf
mov
sbb
add
pop
iret
push
and
cmp
cmpsb
clc
jmp
and
adc
aad
gs
fs
subl
xor
aas
aaa
test
lret
push
stc
jnp
pop
loope
cmp
dec
push
sahf
fisttpll
out
push
enter
push
imull
loop
movsb
into
mov
mov
out
sub
test
pop
pop
leave
jle
mov
xchg
adc
mov
inc
dec
jle
fscale
and
femms
sub
in
mov
and
loopne
and
jb,pn
adc
mov
cmc
dec
mov
leave
aas
sbb
jns
lods
mov
scas
mov
push
cwtl
or
enter
push
lock
popf
or
push
and
cmp
xchg
sub
xor
xor
cmp
test
and
ss
fisttpll
fidivs
lods
loop
xor
pop
dec
xchg
cmp
jge
loopne
pop
mulb
shll
inc
loope
mov
xchg
adcb
scas
in
std
xchg
cld
jbe
mov
and
and
arpl
insl
mov
cmp
enter
andl
add
movsb
imul
adc
sbbl
cltd
sub
dec
xchg
push
inc
pop
pushf
xor
push
mov
push
mov
xchg
adcb
ds
aas
mov
dec
mov
add
push
pmuludq
fistl
jbe
test
xchg
sarb
shl
lret
sub
sbb
pop
push
push
arpl
sub
or
enter
mov
add
bound
int3
pop
clc
negl
lods
dec
cltd
inc
xchg
lret
xor
jmp
sbb
test
inc
push
sbb
iret
jmp
mov
xchg
cltd
jns
and
pop
fnstenv
xchg
mov
and
jmp
subl
pop
cli
loop
mov
clc
jmp
in
rorb
mov
sub
loop
pop
mov
dec
jmp
dec
cmp
es
fildl
sub
and
fwait
push
sub
js
push
cs
cmp
jae
imul
fcmovu
mov
lret
sub
mov
ds
insb
fisttpl
stos
dec
sahf
cli
loopne
aaa
xchg
arpl
mov
mov
popa
and
xchg
add
je
cli
repnz
and
test
imul
mov
or
pop
rclb
push
test
push
jle
add
xchg
lods
incl
add
out
adc
stos
pop
sbb
push
mov
xchg
es
mov
icebp
cmpsl
repz
mov
sbb
les
cmp
loop
loope
jl
jp
into
add
add
fwait
in
fnsave
pusha
out
cli
mov
fs
pop
fcoml
leave
xor
aam
cwtl
xchg
add
push
repz
mov
jo
in
cmp
in
and
sub
enter
cltd
test
das
mov
out
cmp
aas
test
fiadds
ret
mov
xchg
push
push
stc
stc
fidivl
test
mov
mov
movsl
inc
ror
aaa
enter
fildl
fadds
popa
dec
sub
enter
sub
inc
scas
mov
mov
test
scas
bnd
mov
mov
cmp
jb
shll
mov
movsl
std
sbb
sbbl
daa
mov
cld
jne
jmp
xor
jge
out
rcrb
stos
pop
outsb
jno
outsl
mov
xor
mov
xor
pop
fnstenv
test
icebp
loop
pop
shl
fldl
xchg
fxch
pop
ss
sti
out
jecxz
fidivs
addr16
cmpsb
mov
add
mov
popf
xorl
sbb
shrb
pop
cli
shll
jmp
mov
sbb
pop
jae
cwtl
fwait
imul
add
repnz
inc
add
adc
lods
aaa
out
das
or
jo
in
cld
mov
stos
inc
jns
cwtl
jl
dec
inc
inc
mov
outsl
and
outsl
fiadds
or
push
test
fdivrl
in
sti
mov
hlt
xchg
jb
jo
dec
cwtl
in
test
adc
fs
add
repnz
sbb
pop
or
mov
mov
out
mov
jns
inc
rcl
mov
sbb
inc
xchg
xchg
and
insb
ljmp
pushf
pop
cli
insb
xchg
aaa
arpl
xor
pop
xchg
and
ret
mov
lret
cmp
cmp
ficoml
sarl
mov
xor
movsl
xor
arpl
popa
loop
or
mov
aas
fdivrl
es
daa
push
push
mov
dec
es
xchg
rclb
lods
clc
cmpsl
enter
daa
stos
mov
fsubr
into
jns
shlb
lcall
jne
je
xlat
out
leave
xchg
jbe
jns
sub
cmpsl
sub
clc
jo
mov
aad
xchg
aad
mov
test
in
mov
inc
clc
fiaddl
loopne
pop
outsl
repnz
push
add
cli
shll
or
int3
pop
sub
daa
stos
xchg
pop
jge
dec
fimuls
addr16
aam
mov
fwait
dec
lret
xchg
lods
aas
lahf
ljmp
cmc
repnz
imul
jmp
push
cmp
mov
lods
mov
test
data16
inc
lahf
mov
cmp
fidivrl
popl
scas
push
mov
and
shl
insl
mov
mov
jmp
loopne
cmp
data16
add
push
scas
jo
inc
mov
xlat
push
jg
pop
mov
mov
xchg
jns
or
ds
cmpsl
call
je
cltd
test
fs
pop
imul
daa
jmp
adc
xor
fstpt
sahf
lea
sub
dec
pop
xor
into
inc
dec
mov
lahf
ljmp
or
addr16
bound
adc
mov
enterw
int3
out
jne
or
inc
add
mov
dec
push
inc
sub
cmc
ret
adc
out
cmpsb
daa
jecxz
aad
lahf
out
pop
cmc
fcoms
cmp
jmp
clc
or
movsl
daa
sub
mov
mov
arpl
sbb
sub
cmp
push
lock
pop
jecxz
into
dec
fwait
enter
jge
gs
fwait
sbb
ljmp
mov
xchg
in
daa
aaa
xor
lods
cld
xor
mov
out
jmp
jae
jp
test
or
iret
push
in
cld
mov
sbb
xchg
sbb
pusha
je
lds
and
movb
jl
lock
xchg
js
mov
orb
arpl
xchg
or
out
or
jmp
xchg
jg
cmp
push
cwtl
out
mov
adc
lock
sub
js
arpl
mov
movsb
jbe
push
insb
daa
gs
lcall
jo
cmp
push
mov
ja
es
adcb
pop
push
or
xlat
cmp
adc
les
mov
mov
lock
and
lcall
mov
scas
js
sub
fstl
data16
pop
inc
test
adc
cld
insl
ret
nop
mov
or
dec
sbb
mov
cmp
stos
lods
jns
lret
push
adc
adc
xor
push
xchg
ljmp
in
leave
popf
xchg
jge
sub
std
sbb
stc
mov
jle
movsl
sub
push
jle
push
add
adcl
fmuls
leave
add
sub
subl
mov
jecxz
mov
cmpsl
sbb
mov
cli
ja
sbb
pop
test
and
into
stos
dec
roll
push
shl
ret
push
outsb
and
xor
cmp
loope
sti
inc
leave
pusha
sar
lds
push
xchg
push
sbb
fstpl
mov
mov
push
mov
iret
outsb
inc
cmp
pop
leave
mov
stc
pusha
or
mov
pop
inc
jae
jo
in
cld
xchg
enter
shrl
mov
scas
mov
ror
sbb
sub
cs
repnz
and
inc
icebp
or
add
ds
or
loope
or
xchg
pop
pop
es
add
add
ja
push
shl
mov
je
jmp
jne
test
adc
dec
adc
dec
lock
imul
push
xor
std
arpl
push
je
jle
push
cmpb
mov
push
arpl
notb
mov
xor
mov
xchg
cmp
out
icebp
xchg
dec
icebp
lcall
not
es
add
insb
jo
dec
jmp
mov
test
lcall
popf
aaa
add
hlt
mov
xor
push
or
adc
cmpsb
or
nop
dec
xchg
stc
arpl
mov
jne
add
pop
push
bound
shlb
roll
jl
arpl
xchg
adc
decl
mov
sahf
divb
lea
mov
movsb
jo
mov
lret
push
dec
xchg
or
dec
or
in
dec
stos
sbb
mov
mov
xchg
jmp
call
aaa
bound
push
sbb
into
sbb
pop
cltd
idivl
push
aam
shlb
insb
inc
lea
inc
dec
and
dec
cwtl
sti
xor
xchg
adc
cmp
or
imul
pop
ret
dec
xor
xor
ds
std
pop
fisubrs
sti
mov
lock
push
or
or
and
or
push
mov
push
mov
sahf
and
sub
aas
pop
pusha
mov
nop
bnd
das
lods
es
popa
xchg
push
mov
test
enter
mov
mov
jbe
dec
ljmp
ds
jbe,pt
mov
cmp
mov
cli
mov
xor
adc
jnp
hlt
sub
test
xchg
or
pusha
mov
shll
leave
xor
mov
outsb
lds
adc
and
iret
jp
outsl
loope
inc
in
or
dec
leave
hlt
jge
rolb
imul
repnz
das
addb
lret
sub
or
cltd
push
je
aad
push
das
sbbb
loope
std
roll
lcall
dec
cmc
mov
fidivl
push
icebp
ss
cmp
push
in
sbb
mov
rcl
fisttps
and
jo
sub
aam
out
sub
fisttpl
orl
scas
jecxz
pushf
std
and
test
int
mov
popl
in
ret
lahf
mov
push
xchg
xor
jl
nop
mov
mov
or
mov
popf
pushf
mov
cmpl
xchg
movsb
aaa
mov
and
sub
out
and
jge
fnstsw
pop
das
rcrl
fcoms
lahf
sub
cmp
sub
mov
notb
jmp
loop
out
mov
inc
cmp
out
in
or
sbb
xchg
aam
mov
jge
inc
adc
hlt
cmovnp
addr16
push
fadd
cmp
addb
xor
lahf
mov
xor
nop
popa
das
push
jno
movsl
in
bound
mov
mov
aas
lea
test
loope
stc
fs
lahf
lret
push
push
insb
cmp
fnstsw
dec
mov
push
das
stos
dec
push
out
mov
je
jp
sub
in
jecxz
pop
xor
sub
ja
test
bound
jo
and
nop
mov
gs
mov
in
add
js
cltd
lret
xor
push
stos
sbb
pushf
push
xchg
and
popa
ds
pusha
xchg
scas
icebp
jle
adc
int3
nop
sub
mov
repz
inc
lcall
test
stos
test
orl
cmp
mov
sub
adc
rolb
mov
lret
pop
andb
add
push
ret
cmp
lcall
movsl
sbb
call
shll
sbb
push
pop
call
test
sbbb
fcomps
adc
pop
addr16
cmp
inc
jmp
sar
mov
sbb
jmp
in
xchg
adc
dec
repz
psllw
jo
jl
fstpt
iret
decl
das
sub
lods
out
push
jg
sub
mov
push
stos
pushf
scas
data16
mov
xchg
loope
js
mov
iret
jmp
lods
mov
rorb
push
cli
add
test
pop
mov
mov
inc
movsl
or
xor
mov
cmpl
xor
mov
test
dec
repnz
adc
push
ret
daa
lods
sub
inc
lods
in
or
inc
int
les
arpl
cmp
in
xor
mov
shlb
outsl
sti
pop
xchg
dec
jge
mov
mov
sbb
mov
arpl
lret
mov
fucomp
or
imul
in
pop
or
push
lahf
pop
loop
push
mov
and
out
loop
mov
jmp
sbb
dec
jnp
enter
mov
jne
lret
cmc
push
popf
or
fldcw
inc
jle
cs
out
daa
js
lock
mov
xchg
or
scas
mov
negb
aad
shr
dec
cmp
cli
rolb
sbb
shll
xchg
xor
lret
cmp
inc
cmp
jg
mov
popa
sbb
adc
jl
mov
xor
mov
mov
dec
faddl
jb
fdivl
dec
in
cmp
jge
test
adcb
xchg
mov
and
ljmp
mov
out
nop
cmp
aas
add
jnp
adc
test
push
stc
mov
fadds
imul
pop
mov
cs
jbe
mov
push
test
aad
movsl
mov
je
ret
lahf
in
loop
dec
pop
push
scas
repnz
addr16
add
pop
push
mov
addl
fisttpl
aaa
lret
pop
jge
xor
test
inc
adc
insl
lea
jmp
pop
mov
fadds
repnz
insb
push
cmp
push
jnp
cwtl
mov
pop
cmp
xor
sbb
pop
push
or
test
adc
imull
pop
out
cli
idivb
jne
gs
adc
sub
int3
movsl
mov
dec
cmpsb
fsubr
in
cmp
fs
pop
sarl
sahf
shl
mov
adc
jmp
les
or
adc
stc
mov
cs
xor
popf
test
or
inc
sbb
push
pop
hlt
jo
cmp
pop
pop
push
cmpsl
fldenv
sub
lcall
and
jo
mov
icebp
cwtl
pop
or
loope
cmp
sahf
mov
lret
insl
add
ljmp
mov
add
or
xor
sbbl
add
jne
test
sbb
movsb
imul
mov
out
pop
push
xor
shr
jae
shll
cld
jecxz
roll
push
imul
hlt
jl
ss
mov
shll
imul
mov
out
mov
push
pop
leave
fldt
pushf
jo
std
test
mov
mov
je
negl
shlb
cmpb
fcomps
mov
bound
outsl
and
fcoms
mov
bound
icebp
ss
sub
js
sub
push
mov
xor
dec
mov
out
pop
sub
jno
add
or
fistpll
dec
outsb
add
add
sub
push
call
lods
shlb
sub
pop
cmp
iret
or
mov
mov
adc
adc
fcoms
lds
xchg
addr16
sarl
mov
lcall
add
shlb
xchg
jl
fisubrs
inc
adc
arpl
dec
inc
xor
xlat
or
sti
and
int
je
inc
fcomip
mov
push
xchg
jge
nop
mov
xor
jmp
pop
mov
lcall
popf
pop
fdivs
daa
imul
rcr
ret
outsl
lock
mov
int3
gs
mov
push
pop
out
arpl
inc
pushf
fsubs
pop
roll
lcall
imul
adc
ret
hlt
mov
mov
pop
cmp
cmp
or
jg
pop
jp
js
lds
sub
push
mov
sbb
lret
add
push
cmc
cwtl
jmp
sbb
stc
std
jle
pop
jne
mov
insb
mov
lahf
mov
jp
fistl
mov
push
push
mov
dec
loope
jb
and
clc
ret
jno
cmpsb
xchg
and
mov
inc
pop
dec
or
fsubrs
pop
lds
sbb
mov
pmuludq
adc
dec
pop
jle
fisubl
and
insb
mov
movb
movsl
pop
mov
or
or
sbb
mov
pop
cwtl
lock
xlat
fdivrl
pop
jg
mov
push
shr
or
jp
movsl
outsb
jg,pt
pop
mov
adc
das
cwtl
sub
pop
mov
mov
call
test
popf
je
xchg
fisubrl
mov
inc
jno
inc
inc
andb
xchg
mov
adc
sub
fwait
dec
add
popa
xor
jne
in
dec
push
mov
and
adc
mov
insl
repnz
push
gs
lret
or
sahf
inc
add
loopne
sahf
out
xchg
or
addr16
push
cwtl
xchg
lods
mov
rolb
andb
sarl
add
jle
int3
cmp
icebp
dec
push
xor
stos
lret
pop
mov
fdivr
jno
roll
mov
ret
and
scas
pop
push
pop
cmpl
jle
roll
out
lods
sub
fcmovu
cmove
mov
shl
ret
add
adc
xor
jge
lea
insb
scas
pop
push
mov
in
shlb
addr16
inc
add
jecxz
addb
xor
jle
mov
fcmove
hlt
aad
addr16
outsl
inc
xor
xor
addr16
ds
dec
clc
test
shll
jnp
je
mov
xchg
mov
stos
lods
js
insl
fisubl
pop
filds
je
push
adc
push
clc
sub
in
or
adc
call
movsl
pop
rcl
jecxz
dec
arpl
and
stos
popa
pop
fcomps
mov
mov
movsl
mov
ret
push
sti
loope
xlat
aam
mov
data16
lahf
cmp
addb
jge
shr
jne
xchg
lret
bnd
jmp
rorl
xor
stc
push
jmp
jp
pop
add
cmp
and
inc
jg
sub
insb
add
pop
push
in
xor
jge
pop
lock
das
xchg
sbb
insl
loope
and
jl
stos
cmp
insb
xchg
inc
cld
jnp
aad
inc
xchg
xchg
in
or
mov
lret
insb
adc
jmp
cld
jne
rorl
adc
and
dec
xor
mov
sbb
cmp
f2xm1
call
andl
sub
sarb
mov
or
addl
out
xchg
jl
mov
shrb
fiadds
cli
movsl
iret
sbb
jbe
sub
dec
sub
out
xchg
test
cmc
cmp
dec
cmp
test
push
cmc
or
icebp
pop
sbb
aad
cmpsb
inc
mov
adc
cli
xor
pop
mov
push
sahf
jns
and
call
mov
in
pop
out
mov
sbb
cmp
jne
lods
jmp
test
sub
pop
shrb
inc
outsb
adc
rclb
mov
les
sbb
insb
div
add
mov
mov
sub
adc
push
fcmovb
sbb
xchg
hlt
aaa
test
sub
mov
push
bound
push
mov
add
dec
mov
xchg
jle
xchg
ror
push
xor
or
push
mov
push
jp
insl
cmp
mov
and
mov
adc
rcrl
sbb
xchg
sub
jbe
push
pusha
ss
sub
adc
cmp
xchg
cli
cwtl
dec
sub
adcb
test
aad
imulb
testl
mov
lods
sbb
dec
scas
dec
aas
cwtl
or
sti
jnp
test
repz
mov
test
imul
xlat
jb
dec
push
xchg
mov
ficoms
xchg
xorl
mov
fwait
popa
mov
fsubrl
mov
imul
stc
and
adcl
shl
das
push
scas
mov
mov
lods
aam
or
nop
adc
and
sahf
dec
sub
sub
sub
cli
dec
jae
les
adc
not
cmc
loopne
push
pusha
mov
pop
fisubs
data16
jmp
xchg
icebp
jb
cli
mov
mov
aam
sub
push
mov
pop
push
enter
jnp
out
mov
xor
pop
cmp
dec
div
inc
in
or
pop
xor
cmp
and
jp
jle
cwtl
or
sub
xor
inc
and
mov
push
push
cmp
insb
sub
repnz
pop
adc
mov
out
adc
aaa
mov
mov
xor
movsl
ret
push
mov
xor
das
jg
mov
rclb
pop
and
loopne
insb
int
imul
cmp
int3
cltd
shlb
inc
sub
lods
lock
shrl
mov
xor
adc
loopne
mov
hlt
dec
dec
in
iret
jne
pushf
mov
sub
sbb
repnz
inc
mov
cmp
mov
jno
pop
pushf
lods
cmp
adc
popf
outsb
daa
cmp
mov
jg
pop
jbe
adc
or
lcall
inc
sti
imul
push
xchg
jns
or
loopne
xchg
js
test
test
sarl
push
cmc
push
and
jle
jns
add
test
scas
fildl
out
mov
mov
fldcw
mov
cmp
jl
dec
push
int3
dec
push
mov
scas
and
jge
hlt
pop
call
dec
lret
mov
frstor
sbb
sbb
push
outsb
shlb
mulb
lcall
sbb
add
xchg
ja
or
out
xor
ds
lock
mov
push
fs
jne
sub
jnp
neg
out
push
xlat
or
lods
jo
sbb
push
sbb
adc
cmp
ds
icebp
lcall
mov
push
dec
loopne
mov
pop
aad
stos
and
push
xchg
popf
scas
rcrl
sbb
mov
int3
fildl
lret
push
pushf
cmp
dec
fcoms
or
sbb
mov
jno
idivb
inc
fs
lret
fisubs
and
xchg
sbb
xchg
insb
push
sbb
cmp
pushf
fmulp
pop
and
cmp
pop
pop
icebp
mov
sarb
adc
sahf
adc
push
xchg
in
mov
mov
jge
mov
lods
adc
adc
or
repnz
rcll
das
clc
push
and
daa
movsl
loop
jge
jno
mov
rolb
mov
inc
mov
mov
xor
scas
or
pop
fimull
xchg
mov
and
mov
mov
sub
ret
fdivrs
adc
sub
out
push
stos
cmc
or
jne
repnz
dec
sbb
sub
loopne
sub
mov
mov
xorl
aaa
pop
fisttpll
dec
mov
jp
lods
xchg
jmp
arpl
aas
mov
movsl
ljmp
xor
and
pop
aam
es
inc
fcmovne
add
ss
jnp
repz
daa
mov
sarl
cltd
mov
pop
xchg
dec
pop
inc
popf
sub
dec
fcoml
dec
arpl
gs
dec
cmpsb
jecxz
or
stc
pop
xor
fnsave
xchg
lahf
sbb
mov
daa
dec
cmp
mov
rclb
cld
cmp
ljmp
lods
or
ja
stc
fsts
inc
mov
repz
stos
mov
idivl
pop
mov
shll
inc
shlb
cmp
out
mov
fwait
ret
arpl
cmp
lret
inc
jg
loope
xchg
xor
in
jmp
push
jns
inc
sbb
mov
jo
negb
adc
mov
adc
shlb
mov
push
inc
and
hlt
mov
loop
shr
repz
sub
rcrb
cmpsl
and
sbb
cs
les
and
ds
xor
stos
call
in
in
shlb
lods
les
and
hlt
mov
enter
hlt
xor
push
not
dec
andb
addr16
lds
outsb
and
sbb
sbb
mov
dec
pop
sahf
fnsave
mov
xchg
push
pop
fisubs
push
cmc
and
push
pop
mov
push
pop
icebp
loope
bound
cmp
jb
jns
cmp
notl
mov
shll
sbb
daa
iret
stc
in
lcall
dec
mov
jbe
ljmp
mulb
out
test
add
mov
jne
nop
cwtl
dec
dec
test
xchg
pop
sub
add
mov
outsl
lcall
jb
xor
cwtl
pushf
aas
addr16
and
addr16
sub
enter
ss
or
pushf
pop
xor
test
loop
outsl
test
fidivs
iret
or
mov
lock
lds
and
push
mov
fs
test
aas
add
std
jle
outsb
add
jae
push
xchg
xor
dec
out
add
lods
js
xor
dec
mov
addr16
shll
jbe
lea
pusha
hlt
push
comiss
lock
adcb
not
punpckhwd
push
rol
aaa
sbb
or
dec
popa
xchg
bound
push
ss
jp
fwait
jg
mov
and
mov
inc
stos
icebp
or
sbb
or
je
mov
mov
mov
or
push
popf
xchg
mov
jecxz
scas
imul
push
fcmovnu
in
jbe
cmp
jne
or
mov
xlat
sub
mov
jmp
fmull
pop
adc
rorb
pop
cmp
and
mov
fwait
adc
cld
mov
and
or
pushf
xorl
pop
mov
push
jle
pop
mov
loopne
jnp
xor
pop
xchg
jl
push
pop
xor
cmp
int
into
daa
or
test
daa
dec
jae
sbb
inc
inc
aaa
mulb
dec
cli
adc
sub
pushf
jb
mov
into
or
mov
cmp
test
insl
aas
bound
pop
lahf
jo
add
out
shll
adc
ss
and
jle
jmp
add
testb
sbb
dec
cmp
ss
ror
push
stos
addb
dec
orl
push
sub
roll
push
out
mov
push
stos
xchg
mov
xor
aad
sub
mov
inc
cmp
into
xor
pop
mov
les
inc
mov
inc
aaa
popf
out
mov
je
sbb
ss
push
or
rcll
mov
pop
inc
lcall
fcomps
or
cmpsl
fiadds
ss
add
frstor
adc
inc
jo
pushf
fxch
cwtl
adc
xchg
into
mov
enter
leave
sub
mov
mov
mov
fdivs
addb
stc
lods
testb
nop
lock
add
mov
insl
fiadds
mov
loope
cmp
pop
xchg
hlt
nop
movsl
int
pushf
mov
icebp
mov
xlat
mov
cltd
lret
call
fsubl
jg
out
xor
mov
aaa
test
sub
push
and
in
sub
push
xor
mov
and
mov
in
int3
add
mov
jbe
xchg
or
callw
cli
ljmp
rcrb
fs
ffree
js
or
subb
mov
mov
sub
iret
adc
in
leave
pusha
xorb
or
fcomps
in
lock
jno
es
add
pop
cmpsb
lock
insb
pop
jge
jbe
stc
jle,pt
fists
cltd
mov
xor
das
imul
lods
jl
popf
mov
push
pop
xor
ficoms
xchg
xchg
xchg
add
movsb
adc
aas
pop
xchg
pop
out
orl
movsb
inc
fildll
das
nop
pusha
lret
call
ret
jecxz
push
fcomps
cli
sub
push
fadds
sub
fdivp
cmp
sub
and
add
mov
leave
jmp
call
lods
xchg
test
xchg
inc
adc
orl
iret
and
loope
shrl
test
push
aas
fs
or
bnd
cmpsl
je
pop
stos
test
cmp
jb
and
rorb
mov
cld
ret
mov
sub
fbstp
jne
xchg
cwtl
adc
mov
mov
sbb
testl
sub
leave
das
lods
sbb
iret
xor
leave
pop
insl
addl
jno
cmp
mov
aad
push
jo
movl
arpl
cmp
add
and
neg
or
int
sbb
inc
mov
push
shrl
rcrb
fisubrl
push
in
or
and
movb
sub
imul
js
frstor
sbb
mov
cwtl
sub
sub
adc
dec
cmc
jns
sahf
popf
push
fsubs
mov
jle
inc
clc
xchg
out
add
inc
cld
bound
out
sbb
out
pop
xor
shr
xor
les
je
les
sub
ret
mov
adc
lds
mov
hlt
xor
add
push
push
cmp
or
sarb
mov
repnz
jge
mov
cmp
fwait
adc
adc
rcrl
shrl
fucom
std
stc
dec
rcrb
iret
inc
test
jno
fdivp
push
js
pop
cwtl
nop
adc
lods
out
xchg
jbe
mov
inc
enter
push
pop
mov
pushf
or
pop
aaa
stc
mov
jno
dec
loope
sub
nop
sub
sub
lret
inc
mov
arpl
divl
and
push
in
mov
push
push
enter
out
xor
inc
ja
out
mov
mov
sub
scas
ja
jmp
or
movsl
cmc
mov
shll
xor
push
jnp
lods
loop
test
movb
rcrb
sub
cli
mov
xchg
pop
pop
lods
roll
add
pop
repnz
adc
cltd
les
fldenv
pop
jg
lret
icebp
sbb
push
inc
xor
cmpsl
xor
sahf
mov
loop
mov
or
xor
scas
sub
aad
add
mov
xchg
lret
popf
scas
inc
xor
shll
ret
popa
jno
push
dec
jle
xor
popa
add
or
cmp
add
int
adc
push
dec
add
cmp
sub
xor
fs
xor
mov
ret
sub
repnz
sbb
loope
stc
popa
sbb
sbb
dec
bound
rcl
xor
mov
loopne
addr16
bswap
in
aaa
shll
scas
aam
rorl
add
pop
pop
rorb
adc
and
fs
cmp
mov
imul
movsl
decb
ja
xorl
and
outsl
push
pushf
hlt
and
mov
loop
cli
and
mov
dec
mov
mov
mov
incb
sub
add
push
mov
das
popa
jae
mov
inc
lea
sahf
add
pop
pop
testl
or
loop
mov
mov
and
lods
adcb
jb
test
mov
pushf
mov
fmull
adc
out
bound
jl
mov
test
clc
repnz
push
les
pop
arpl
fsts
mov
dec
popf
lock
insl
rol
dec
cmp
insb
add
lret
fs
mov
arpl
push
int
leave
out
xchg
sbb
es
mov
ja
mov
pop
xor
enter
int3
in
data16
cmp
mov
ss
into
les
in
push
out
cmc
out
ret
push
sub
cmp
mov
xchg
xor
jl
scas
sub
mov
push
outsb
movsl
xchg
inc
and
or
mov
or
cld
cmp
jg
es
sti
xchg
adc
sbb
ljmp
imul
fcompl
lods
rcrl
sbb
testb
sbb
decl
push
jmp
nop
lock
mov
roll
adc
mov
in
and
cmp
addr16
scas
pop
movsb
inc
out
xchg
leave
out
adc
out
sbb
shll
mov
push
add
mov
mov
jno
xchg
pop
xchg
push
pop
or
mov
imul
cli
repz
xchg
bound
test
mov
pop
jns
push
sahf
hlt
bnd
repnz
nop
mov
xchg
test
jno
mov
push
cli
push
dec
cmpsb
cmp
mov
mov
pop
subb
push
adc
inc
lds
or
pop
dec
sub
or
inc
out
hlt
mov
inc
sahf
aas
insl
ret
pop
leave
dec
hlt
add
sahf
mov
cmp
dec
fs
and
pop
jne
mov
cmpb
add
fcoms
fwait
in
sbbl
xchg
and
movsl
fldt
mov
inc
or
jne
outsb
push
push
mov
pop
mov
aaa
sub
xchg
jo
pusha
cmp
adc
dec
xchg
jnp
and
jo
jg
pop
cmp
cmpsb
and
insl
insl
inc
stos
int3
pop
fbstp
adc
sahf
mov
popl
dec
std
mov
cmpsl
pop
stos
loop
push
test
pop
pop
xchg
mov
jo
jmp
fdivrs
insb
outsb
cltd
subb
xchg
xchg
stos
fistpll
popf
mov
adc
xchg
xorb
sarl
in
ljmp
popf
jnp
cmpsl
aam
in
xor
das
xor
icebp
sbb
es
psrlw
pcmpgtd
pop
loope
sti
jmp
iret
clc
mov
dec
data16
jmp
rcr
sbb
scas
adc
and
and
pop
dec
lea
cmp
out
in
fiadds
ds
push
push
outsl
jle
cmp
jmp
or
inc
daa
inc
jmp
dec
stos
int3
cmpsb
sahf
ret
sub
rcl
dec
clc
push
xchg
outsl
cmp
dec
push
cmpl
pop
xchg
lret
lahf
jle
lock
pop
mov
stos
movsl
dec
mov
out
shlb
pop
shrl
cmp
pusha
insb
int3
lret
and
sub
adc
sti
dec
push
xchg
pop
dec
cmpsl
inc
enter
aad
xor
mov
xchg
or
fdivrs
fistpll
gs
ds
adc
or
imul
push
ja
xchg
pop
lcall
pop
ljmp
mov
out
inc
scas
insb
adc
fwait
push
lods
add
adc
fnstsw
loop
cwtl
fistps
jb
or
ret
cmp
clc
les
xchg
mov
jge
movsb
sbb
scas
imul
xor
dec
test
test
jae
js
adc
repz
arpl
leave
or
movsl
mov
and
movntq
xchg
lds
cmpsb
mov
mov
call
mov
mov
pop
ss
shlb
aas
push
loope
xor
out
sbb
adc
mov
orl
loope
sbb
insl
and
adc
push
fisttpll
mov
out
addr16
leave
outsl
fildll
int3
scas
sbb
xor
pop
cmp
push
vcvttsd2si
jge
or
xchg
movb
cmp
pop
bound
jecxz
mov
push
arpl
lds
dec
aad
out
movsb
mov
es
push
in
sbb
mov
mov
jg
mov
jecxz
dec
mov
jns
repnz
mov
hlt
int3
inc
mov
pop
mov
fs
dec
mov
mov
pop
xchg
or
push
mov
imul
lret
cwtl
lea
xor
mov
pop
lods
lret
cwtl
sub
je
pop
pop
push
sti
inc
repz
dec
jnp
cmpsb
in
add
cmp
dec
jo
xchg
mov
insb
lods
sub
mov
mov
pop
insl
push
mov
idivb
dec
mov
cmp
in
dec
repnz
aas
in
mov
jno
pop
pop
in
xchg
xor
dec
adc
jae
popa
fistpll
imul
out
xor
adc
add
and
les
loope
fs
pop
xchg
in
mov
sahf
adc
daa
sbb
out
push
scas
cwtl
dec
pop
xor
xchg
int
fwait
shlb
std
inc
cmp
rorl
rcrl
leave
jp
std
cmp
into
pop
add
jge
pop
mov
mov
sbb
xchg
iret
xor
xor
jnp
icebp
inc
sbb
pusha
notl
je
push
mov
xchg
xchg
or
int
jecxz
out
test
js
pop
stos
loopne
cld
push
add
loopne
xor
cmpsb
insl
or
or
jb
leave
mov
pop
mov
xchg
es
push
test
jo
pop
mov
mov
jno
fwait
int
movsl
mov
dec
xlat
adc
xchg
pop
dec
or
aam
push
ss
incl
mov
pop
bnd
xchg
cmp
cmp
xchg
pop
xchg
mov
pop
dec
jle
xor
aam
add
cmp
sbb
sub
bound
jle
in
xlat
lods
xchg
test
rclb
xchg
pop
data16
shlb
pop
mov
add
js
loope
aad
mov
pop
xorb
mov
mov
mov
pop
loop
and
inc
fisubrl
bnd
or
lock
inc
adc
jno
sub
loop
jae
pushw
xor
jae
stc
lock
pushf
ja
pop
inc
test
sti
sbb
ds
cmp
inc
dec
xor
push
hlt
add
add
test
adc
xchg
enter
xchg
idivl
sub
cmp
and
jp
mov
mov
jmp
fisubl
movsl
fs
xchg
xchg
xlat
or
cmp
mov
imul
dec
cs
mov
pop
push
adc
popf
pop
out
jno
xchg
dec
jb
stc
xchg
lret
sarl
push
jo
cmpb
add
pop
addb
imul
and
fdivrs
dec
fisttpl
test
clc
inc
ja
cmp
push
add
je
sbbl
or
test
mov
hlt
daa
fdivr
sub
lea
outsb
pop
ficoms
cmp
xor
mov
aaa
push
or
imul
aaa
inc
sahf
mov
mov
mov
mov
push
mov
stos
push
mov
orb
pop
pop
mov
pop
inc
push
pop
cmpsl
cmp
daa
sbb
lret
into
xor
test
pop
mov
stos
cmp
aas
sub
arpl
xlat
std
cmc
dec
sub
dec
xor
mov
fisttpl
out
testb
in
or
mov
test
pop
adc
repz
bound
add
out
dec
clc
movsl
jnp
pop
fcmovbe
xor
mov
xchg
xor
xchg
pop
xor
scas
and
mov
iret
int
mov
popa
xor
dec
or
jae
adc
mov
aaa
fimuls
inc
fcoms
mov
sarb
subl
cmp
movsl
es
add
add
inc
cmpsl
pop
and
popa
cmp
popa
sub
test
cltd
fs
test
xchg
ja
hlt
sti
das
push
xchg
add
cld
mov
xchg
and
push
push
pop
and
inc
in
aad
push
out
sub
pop
stc
fxch
xchg
mov
cmpb
xchg
fmuls
pop
std
xor
and
das
jo
inc
jne
sub
pop
add
jnp
pop
pusha
or
or
clc
xchg
subb
mov
xchg
xchg
add
mov
and
in
mov
and
mov
rcll
fdivrs
mov
mov
cltd
or
lcall
sub
lea
inc
repz
into
mov
mov
das
loop
cmp
jns
arpl
sarb
jg
arpl
scas
incb
aad
stos
mov
jp
mov
aas
xchg
divb
push
inc
sbb
dec
inc
dec
leave
daa
nop
out
ljmp
dec
in
flds
cmc
icebp
xchg
pop
cltd
test
mov
in
pusha
push
cmp
mov
pop
out
pmovmskb
stc
dec
es
out
fidivl
xor
jmp
mov
pop
push
fsubp
cmpsl
aaa
mov
jb
mov
sbb
dec
xchg
insb
test
pop
jge
adc
mov
divb
cmp
sti
xchg
dec
test
orl
lret
sub
adc
cltd
xchg
xchg
das
add
lods
adc
neg
xlat
or
pop
push
xchg
stos
int
fwait
sbb
pushf
stc
inc
mov
jo
es
in
daa
mov
mov
into
test
rclb
les
rolb
and
add
lcall
jecxz
aas
push
mov
jecxz
insb
and
test
cltd
mov
dec
mov
cmovl
mov
outsb
arpl
mov
cs
xor
sbb
cli
cmp
add
pop
add
in
je
add
out
fs
pop
dec
or
dec
mov
fwait
mov
notb
and
int
out
mov
xchg
pop
pop
arpl
aaa
hlt
and
pop
or
stc
into
mov
lods
adc
lods
ja
scas
or
mov
dec
inc
add
ds
loopne
mov
push
int3
push
xor
xchg
add
arpl
in
inc
imulb
xchg
pop
jo
mov
jecxz
test
add
jnp
dec
lret
stc
gs
xor
stos
lods
bswap
loop
pop
repz
fnstcw
pushaw
jmp
mov
cs
mov
and
lds
inc
mov
xor
cld
jb
popa
push
cmpsl
ror
adc
add
inc
ljmp
stos
sub
cmp
in
testl
in
and
push
icebp
adc
pop
repz
loope
push
mov
pop
adc
lahf
jle
dec
ret
jnp
push
inc
pop
or
push
fstpt
ror
sbb
cmp
xchg
pushf
nop
jns
and
xor
cmpsl
inc
mov
ficoml
lods
cwtl
xlat
mov
xor
stos
enter
fs
out
inc
inc
lret
nop
mov
shrb
mov
shlb
mov
mov
lds
pushf
scas
xchg
movsl
test
sub
js
shrb
jecxz
push
push
sbb
fistps
testb
cmpsl
add
mov
std
cld
lock
sbb
add
or
das
jne
test
dec
and
sahf
and
mov
cmpsb
dec
cmp
fs
jle
cmp
cmp
xorl
inc
lock
push
ffree
xchg
lods
divb
test
sub
test
adc
push
push
and
inc
xchg
arpl
cld
dec
push
dec
decl
aas
into
cmpsb
sub
dec
mov
cmp
push
lock
insl
and
jo
lcall
in
or
adc
out
mov
aaa
cmp
ds
mov
jecxz
cmp
fbstp
loop
jp
pop
aaa
or
jbe
outsb
aad
xorb
or
push
repz
sbb
mov
adc
pop
fisttps
xchg
sbb
shrl
imull
jae
cmp
cmp
movsb
mov
sub
jge
sub
mov
outsl
sbb
pop
adc
mov
mov
sahf
ja
imulb
adc
adc
data16
jns
fstpt
lea
mov
clc
xor
push
push
popf
inc
and
xchg
and
fsubrp
push
add
call
inc
cmp
std
clc
sub
out
mov
dec
in
lds
enter
sbb
sub
cltd
out
sbb
cmp
dec
loope
lret
cmp
pop
push
out
or
push
sbbl
nop
push
les
fwait
in
jo
dec
mov
lcall
inc
jbe
inc
outsb
mov
loope
ljmp
push
push
push
stos
stos
jmp
add
aad
inc
push
sahf
jbe
mov
in
out
xor
test
jns
mov
popf
push
inc
add
mov
fimull
and
std
dec
or
jmp
rcrb
test
xchg
lcall
clc
inc
push
mov
test
aam
dec
push
fstpt
nop
sbb
push
push
cmp
fidivl
sub
mov
pushf
or
fstl
inc
push
movl
lret
and
imul
loope
inc
aad
cmp
xchg
dec
mov
sub
cmpsb
repz
or
test
andl
cmp
mov
pop
pop
ficoml
cmpsl
popa
rol
xchg
add
or
xorb
inc
mov
lods
addr16
cmpb
out
sarl
cmp
push
xchg
pop
pop
push
xor
cmp
subl
or
mov
sub
mov
pop
ja
or
out
sub
cmc
xor
fnstenv
adc
lcall
fs
mov
mov
test
or
inc
dec
hlt
mov
xor
inc
popf
pushf
xchg
ss
jb
pushf
push
dec
je
cmp
roll
jg
xor
cwtl
test
repz
gs
fnstcw
bound
pop
mov
adc
xor
mov
jge
or
lret
jp
rcll
mov
std
ja
pop
repz
sub
int3
inc
stos
int
mov
pusha
scas
insb
test
jno
leave
addr16
clc
movsl
int
jle
sbb
and
insl
pusha
lahf
lods
lock
xchg
adc
add
lock
fldenv
xor
test
push
mov
mov
ret
and
push
add
jns
clc
pop
mov
cmp
iret
idivb
mov
js
imul
insl
and
push
inc
int3
jecxz
sub
push
xchg
jne
movsl
rolb
sbb
jbe
pop
dec
pushf
dec
test
lds
sub
fistpl
movsl
lret
jge
mov
gs
push
ljmp
inc
cs
sub
push
pop
mov
pop
adc
fsubrl
out
mov
add
test
xor
sti
icebp
pop
jecxz
imul
mov
mov
movsb
std
nop
jg
lods
lods
sub
fdiv
ja
dec
jmp
inc
sub
lret
ret
shrb
or
pop
adc
mov
insl
dec
in
movsl
sbb
out
sub
cmpsl
inc
sbb
les
cmpsl
xor
clc
repz
imul
mov
repnz
test
ret
iret
dec
cltd
inc
jnp
cwtl
add
add
xor
sbb
jg
std
xchg
mov
notb
mov
data16
xor
push
push
pop
fiadds
xor
outsl
stos
lret
scas
filds
or
mov
inc
sub
add
test
mov
dec
lds
fcmovb
leave
xor
or
adc
cli
mov
push
mov
ret
data16
pop
push
daa
popa
push
test
sub
stos
xchg
pop
inc
inc
adc
push
xorl
dec
push
lret
sbb
aad
and
or
mov
or
cmpsb
and
lahf
mov
mov
jle
cmpsb
cmp
lds
out
cmp
cmc
xchg
fdivs
popf
mov
in
in
pusha
push
out
push
popf
sbb
cmpb
cli
lcall
pop
and
aaa
xchg
jae
cmp
sub
fdivrs
xor
lcall
cmp
push
xor
insl
sbbb
adc
repnz
fcomps
lods
mov
scas
and
jb
dec
pusha
insb
cwtl
fisttps
jl
clc
test
xchg
mov
cmp
push
xchg
and
mov
int3
jp
inc
out
pop
testl
xchg
cmc
cmp
insl
push
sbb
aaa
jnp
and
or
and
ss
sub
mov
ja
xor
xchg
aad
aaa
loopne
iret
repnz
gs
lret
inc
or
xor
mov
int3
cs
mul
pop
inc
sahf
or
xlat
or
ja
jne
dec
cmp
out
add
cli
push
or
or
or
int3
lock
or
nop
dec
sub
sub
test
arpl
orb
lods
or
push
jno
push
in
cmpsl
lret
dec
imulb
xchg
movsb
xchg
mov
push
addl
push
inc
int3
pushf
sub
sbb
cmp
outsl
sti
fistl
jp
mov
test
cltd
jge
stc
stos
lret
ds
pop
hlt
xchg
mov
cmp
loop
fmul
mov
call
fucomp
into
inc
arpl
sbb
cmp
out
cmc
xor
lea
in
jo
enter
adc
jne
sbb
idivl
in
cwtl
ja
addr16
insl
cmp
pop
jl
jg
lods
loopne
adc
mov
lods
std
pop
or
xchg
popa
test
mov
cld
sbb
jmp
out
push
push
xchg
dec
push
xor
jmp
rcr
sbb
inc
iret
filds
nop
ja
sbb
clc
pusha
cli
lods
dec
pop
xchg
out
mov
mov
mov
loop
int3
adc
scas
jns
xor
fdivp
sbb
cs
mov
xchg
aam
rorl
inc
jo
negb
jne
call
cmp
jae
pop
dec
add
inc
pusha
sbb
sbb
outsb
sbb
dec
adc
push
jmp
outsb
inc
sub
mov
xor
mov
sub
push
mov
jo
push
add
lods
repnz
jb
mov
mov
and
dec
pop
ja
stos
mov
sbb
mov
adc
mov
std
bound
xchg
push
fxch
xchg
cmc
adc
les
mov
inc
cmpsl
dec
outsb
in
jle
roll
imul
push
cmp
data16
insl
fldenv
es
and
loop
jo
jle
ret
pusha
pop
hlt
cmp
pop
imul
push
push
sbb
sti
cli
dec
dec
addr16
pop
test
push
dec
std
lret
dec
xchg
popf
xor
jmp
push
in
jle
sub
push
pop
xchg
add
lahf
or
add
sub
stos
test
jae
cmp
rcrb
loop
out
test
jp
add
fwait
adc
outsb
dec
shrl
testl
mov
test
push
int3
pop
hlt
jmp
loop
add
sbb
fiaddl
fsubrs
cmp
sbb
push
add
cmp
cmc
mov
adc
add
dec
aad
xchg
outsb
jmp
jns
pop
popa
mov
and
cmc
mov
and
mov
lock
dec
stos
mov
mov
or
arpl
fwait
inc
pop
insl
mov
fwait
aam
scas
imul
dec
jmp
sub
test
sbb
daa
sbb
jo
imul
sub
fiaddl
out
loope
inc
fdivp
iret
pop
movsb
mov
bound
out
aad
movsl
adc
push
xchg
jl
pop
cmpb
call
sub
packssdw
sahf
mov
daa
repz
mov
rclb
imulb
cltd
psllq
jmp
in
add
inc
imul
int
ficoms
popl
repnz
testl
xor
inc
pop
jecxz
gs
dec
sub
movsb
pop
sub
movsl
das
and
push
js
pop
xchg
mov
icebp
pop
and
ljmp
push
inc
xchg
jns
iret
adc
xchg
dec
mov
mov
movsb
std
sbb
xor
cli
cmpsl
leave
dec
jo
lds
cmp
enter
mov
push
popa
test
and
fisubl
aas
ja
mov
jno
adc
rcrl
and
daa
sbb
fs
int
xchg
jb
mov
lcall
clc
mov
xchg
cmpl
mov
mov
int3
std
dec
jle
pop
adcl
sti
ret
fwait
dec
cmpsl
imul
adc
fidivl
push
sub
add
lret
push
insb
inc
mov
jmp
popa
inc
pop
adc
adc
test
loop
in
xor
sub
cmp
fldenv
and
jb
push
xchg
mov
outsl
mov
push
xor
in
xchg
js
icebp
pop
in
fmuls
pop
pushf
lds
dec
ds
les
sbb
and
fsubp
negb
test
xchg
lea
jg
lds
xchg
add
ljmp
xor
sbb
shll
sub
in
xor
mov
shl
loop
cmpsw
push
jecxz
adc
lods
clc
js
mov
and
jno
push
addb
insl
push
mov
repz
push
and
shlb
mov
pop
pop
clc
gs
out
jbe
inc
icebp
dec
add
mov
or
fiadds
clc
jns
jne
or
shlb
testb
xchg
xor
aaa
popf
into
add
and
repz
xchg
xor
je
dec
insl
sti
mov
insl
cmp
jae
pop
pusha
xchg
fdivp
cwtl
dec
aas
mov
lea
lret
adc
lret
adc
sarl
cld
jg
mov
adc
test
add
jbe
ss
jecxz
mov
adcb
pop
xchg
insb
and
jbe
mov
fstps
adc
icebp
and
leave
cwtl
push
rcrl
test
shll
aad
xor
cmc
jmp
push
inc
adc
cmp
xor
loop
test
sub
mov
add
jle
or
adc
ljmp
cmp
scas
jns
xor
cli
jae
icebp
sbb
jno
lcall
call
cld
and
or
xor
jecxz
or
sti
sbb
call
ljmp
jle
mov
mov
fildll
jns
fwait
pop
inc
int3
add
es
leave
nop
sahf
mov
mov
lds
movsb
add
dec
adc
cmpsb
ds
inc
repz
je
sbb
cwtl
rclb
test
and
xlat
dec
mov
cmc
mov
pop
mov
push
inc
fstpt
jle
test
andl
or
mov
jg
mov
test
jne
xchg
insb
and
mov
out
cmp
add
movsl
movsbl
xor
mov
cmp
cld
push
cld
es
xor
inc
cmpsb
subb
dec
mov
lret
sub
outsl
mov
fwait
and
sahf
test
cmp
xchg
dec
gs
insl
inc
scas
fnstsw
sarb
adc
mov
jae
jg
daa
insb
cld
ja
nop
stos
mov
jns
aaa
push
mov
cvtps2pi
add
pop
jecxz
aas
test
movsl
sub
out
and
out
mov
jge
bound
cmp
in
inc
scas
ret
cmp
mov
mov
and
dec
mov
notb
inc
popf
mov
xor
popa
shll
sub
in
mov
fwait
lcall
pushl
pusha
jo
nop
add
and
out
sbb
jl
jae
repnz
ljmp
inc
xchg
adcb
cmp
xlat
lds
lcall
mov
mov
aam
inc
push
xor
xor
les
mov
pop
jb
testb
xchg
and
sub
mov
adc
sbb
call
das
inc
scas
xor
xchg
fcomp
jle,pn
jns
imul
xor
mov
add
push
lcall
dec
mov
in
push
pushf
mov
or
xchg
popf
ljmp
iret
push
xor
mov
lea
stos
mov
or
fadds
mov
mov
int3
hlt
pop
repz
mov
hlt
adc
cs
cld
out
dec
rclb
mov
pop
or
iret
adc
or
push
loopne
mov
dec
mov
cli
dec
cmpsb
test
test
push
xor
iret
repz
shrb
int
push
cmp
std
mov
outsl
xchg
push
or
mov
popa
mov
mov
cmp
push
out
hlt
cmp
xchg
aas
pop
pop
push
push
loop
ljmp
nop
add
lods
orl
jb
mov
pop
add
leave
push
loopne
out
lcall
movsl
sbb
mov
mulb
les
int3
mov
adc
ss
xlat
push
in
jle
sahf
clc
lods
sub
xchg
clc
jmp
sarb
gs
jne
push
pusha
xchg
mov
fsubl
ds
cltd
rorl
or
pop
cmpsl
jo
sahf
or
sbb
out
mov
call
dec
roll
enter
popa
addr16
in
cmp
push
insb
cmp
out
jmp
push
inc
test
sbb
fwait
into
lock
push
xchg
xchg
lock
push
nop
push
test
repz
cmpsl
ror
cmp
nop
test
jecxz
jno
je
jno
jecxz
aaa
jns
or
sub
inc
cltd
int
mov
shll
inc
faddl
pop
push
jmp
aad
lods
test
pop
je
mov
push
sbb
js
int3
push
mov
push
pop
xchg
adc
jae
ret
out
sub
pusha
ja
out
push
sti
mov
sub
pop
cmp
mov
shrb
unpcklps
scas
push
push
daa
add
mov
out
cmpsb
cmp
push
mov
fwait
adc
inc
js
xor
cli
out
mov
jl
xchg
push
ret
push
inc
xor
sahf
or
fwait
js
jp
sub
out
jb
iret
mov
movsb
mov
fstl
mov
fnstcw
mov
xor
xchg
mov
in
xor
outsb
jbe
fcompl
imul
cs
movsl
mov
lret
ss
iret
in
xchg
sub
scas
push
push
aad
xchg
jbe
adc
into
in
push
pushf
pop
mov
adc
dec
movsb
je
cmp
pop
pusha
pop
and
xchg
fwait
notl
rcll
mov
mov
loope
test
lea
and
out
mov
jne
jle
cmpsl
lret
lret
aas
sbb
jg
jnp
jne
xchg
or
jo
fsubr
dec
lea
call
pop
wrmsr
push
iret
push
jmp
ret
or
dec
aad
push
test
pop
ja
loop
imul
pop
mov
xor
in
test
cltd
cmpsb
mov
sbb
adc
push
mov
out
cmp
sub
je
push
and
inc
or
jno
test
cli
push
adc
daa
jb
dec
out
mov
sbb
mov
int3
mov
jle
push
push
adc
lret
cwtl
mov
movsb
cmp
cld
clc
rclb
sub
mov
push
insb
xchg
bnd
mov
and
rcrl
sbb
ficoml
xchg
cltd
xchg
dec
push
outsl
das
sahf
mov
mov
sbb
and
push
jl
je
and
inc
xchg
js
gs
pop
fimull
xlat
dec
inc
cs
xchg
mov
cmpxchg
cmp
cmp
lods
and
hlt
jae
leave
inc
dec
adc
ret
lock
call
jnp
xchg
mov
pop
and
jbe
inc
scas
clc
imul
inc
inc
out
icebp
mov
out
adc
loop
pushf
push
pop
xchg
je
lods
lods
ds
mov
shlb
adc
lret
cli
mov
in
fmuls
cmp
shlb
rcll
sbb
rcrb
loope
pop
jne
orb
int3
ljmp
mov
fxch
pop
rcll
inc
cmp
mov
xchg
mov
mov
ja
pop
dec
jg
ret
sbb
data16
pushf
push
mov
add
loope
add
and
pop
dec
sbb
adc
lret
call
xor
inc
push
xchg
stos
mov
pop
xor
in
jb
push
jl
cmpsb
and
jbe
mov
ss
xchg
test
test
imul
pop
pop
pop
xlat
hlt
int3
add
sbb
or
mov
aam
cmpsl
inc
lds
sub
call
cmp
mov
in
and
shlb
std
sbb
xor
cmc
push
pop
test
mov
cltd
adc
lahf
mov
jne
xor
ret
pop
mov
xor
movsl
cli
imul
stos
sbb
lods
cmpsl
int3
lock
nop
push
or
push
jl
adc
push
enter
inc
nop
idivb
hlt
divl
ljmp
cmp
shrb
test
scas
xchg
insl
fimuls
jae
nop
mov
rclb
xor
fdivrp
lds
mov
mov
jg
loop
divl
cmp
icebp
sub
sbb
jp
sub
inc
inc
in
ret
and
lods
push
xlat
lret
sub
mov
aad
outsb
pop
scas
or
fildl
test
popa
sub
js
cli
shlb
call
cmpsb
inc
mov
ljmp
fbstp
sub
jecxz
sti
loope
mov
xchg
mov
or
pop
aad
loope
jne
mov
mov
add
adc
aas
and
les
mov
test
add
cltd
push
lods
add
adc
dec
pop
arpl
enter
cwtl
push
sbb
pop
pop
in
ret
lret
popa
movl
fstps
sbb
shlb
adc
mov
lods
mov
inc
xchg
sub
popf
cmp
ljmp
repnz
rorb
ja
inc
add
jecxz
test
popa
loop
push
lock
stos
lret
push
jbe
jecxz
adc
insb
mov
add
rclb
arpl
shll
adc
xorl
jg
mov
adc
dec
and
pushf
jmp
push
daa
les
push
daa
pop
cmpsl
mov
out
iret
dec
sub
aam
lock
xlat
les
cmp
push
or
leave
push
jl
or
loop
aas
jae
nop
dec
cld
push
arpl
or
sub
adcl
sbb
imul
sub
imul
rclb
ja
stos
in
adc
movsl
jl
xchg
shrb
push
xchg
dec
testb
adc
sbb
fstl
popa
fsubr
call
cmp
test
es
push
adc
xchg
push
fcoml
jge,pt
cltd
lods
insl
mov
dec
bound
pop
xchg
cwtl
pop
cld
int
pop
sahf
add
sar
out
enter
es
cmp
in
pop
dec
stos
mov
inc
jp
in
aaa
int3
jl
mov
jo
push
mov
sub
scas
mov
lret
mov
pop
xor
loop
mov
jge
dec
out
add
jno
adc
mov
jp
lahf
fnstenv
clc
sbb
and
mov
cld
jp
in
mov
lret
cmp
sub
iret
jge
and
sub
xor
add
jl
and
xor
dec
int3
daa
push
xchg
ret
cmp
add
clc
inc
mov
jbe
mov
push
cmp
stc
sbb
or
mov
ret
ja
pop
xchg
adc
inc
into
enter
loopne
out
pop
mov
icebp
push
mov
cmp
cwtl
imul
mull
jl
sub
stos
sti
rolb
push
pop
mov
and
and
call
lahf
call
xlat
ret
inc
int3
jnp
repz
push
push
jl
or
cld
cs
and
push
cmc
mov
fdivrs
in
mov
enter
js
fwait
mov
xor
push
push
in
out
fmulp
lret
loop
push
in
orb
sbb
popf
int
push
nop
arpl
push
fwait
jae
mov
lret
add
dec
outsb
lret
sti
or
sarl
cmp
push
bound
js
arpl
aaa
xor
arpl
pop
jns
movnti
or
data16
sbb
pop
push
pop
stos
bound
cmp
lock
or
addr16
adc
movsl
loopne
movsl
sarb
push
xor
cmp
icebp
data16
add
cmp
fcompl
bound
or
shr
hlt
push
outsb
mov
aaa
mov
cmp
xor
cmpsb
mov
in
shlb
int3
loop
mov
pop
push
out
out
or
dec
loope
es
js
push
mov
mov
sub
mov
mov
jge
decl
xchg
loop
stc
inc
das
jne
lock
push
or
jne
and
push
fisttpl
pop
inc
dec
mov
mov
pop
mov
jno
sub
xlat
ret
in
xchg
pop
cmp
mov
mov
add
sbb
fistpl
sarl
xchg
xchg
iret
sub
dec
arpl
lea
sub
data16
and
pop
in
out
icebp
sbb
xchg
lahf
icebp
sub
sbb
cli
ret
gs
xchg
mov
mov
lds
imul
mov
lret
or
inc
fcomip
mov
rorb
mov
fidivl
jb
pop
mov
sbb
mov
pop
enter
push
popf
std
in
lahf
mov
push
sbb
add
xor
lods
movsb
or
fistps
push
xchg
adc
cmc
cmp
and
data16
aaa
or
aad
push
xchg
ret
mov
pop
outsl
jg
inc
fstpl
add
in
mov
frstor
addr16
mov
popa
popa
mov
mov
mov
lret
push
filds
sarb
pop
test
loopne
xchg
sbb
dec
fwait
gs
add
out
jle
fcomp
xchg
xchg
stos
inc
xor
cmpsl
mov
test
add
pop
loope
pop
cmp
mov
jmp
jp
ljmp
dec
loope
xchg
call
in
je
sarl
xchg
and
dec
cltd
pop
push
lods
and
ja
dec
dec
call
dec
sbb
dec
stos
jle
jae
mov
sub
jmp
lods
push
call
mov
cwtl
dec
mov
aad
cmpb
pop
lret
popf
test
out
jns
shl
push
inc
push
stos
addr16
and
lea
leave
mov
jo
sub
sbb
leave
daa
inc
mov
xor
xchg
sbb
ret
pcmpgtw
js
add
daa
lods
mov
sbb
jge
inc
jo
cltd
test
sahf
mov
mov
js
mov
xchg
jbe
or
leave
fcomps
xchg
in
pop
dec
fisubl
ret
or
je
xchg
pop
addr16
out
movl
xor
mov
ror
nop
or
aam
js
int
and
mov
mov
loopne
mov
push
mov
jmp
mov
aas
inc
lcall
mov
imul
mov
ja
ds
fldcw
push
xor
push
or
sbb
or
repnz
inc
or
shrb
addr16
push
inc
mov
rorb
or
pushf
test
cmp
mov
xor
jge
jg
outsb
incb
lock
mov
sbbb
or
inc
out
push
ja
loop
dec
in
mov
lcall
xor
xchg
stos
cmpsb
fdiv
inc
sbb
fbld
sbb
addr16
xchg
repnz
adc
aas
mov
adc
jge
lret
cmp
mov
or
sub
pop
mov
cld
jge
push
lcall
int
testb
xchg
and
inc
and
xchg
push
add
mov
mov
or
les
adc
aad
pop
jo
sahf
gs
aam
adc
xchg
cli
fildl
dec
or
out
test
gs
int
push
and
pop
dec
outsb
mov
add
cmp
pop
gs
pop
dec
clc
es
jnp
cwtl
lds
push
mov
dec
imul
mov
lods
sbb
out
test
addl
out
push
addr16
loope
lods
movsl
lods
dec
inc
push
jle
popa
sbbl
fidivrs
insl
out
out
push
int3
test
iret
jge
ss
repz
and
pop
jo
lock
aad
loop
flds
mov
adc
ret
call
fs
lea
sbb
push
add
aam
cld
push
pop
mov
dec
add
pop
jb
ja
mov
sub
pop
mov
or
mov
mov
ss
lcall
jge
lahf
add
movsb
sub
lods
xlat
jnp
xchg
or
inc
repnz
mov
and
add
pop
inc
dec
push
jae
addr16
pop
fstl
lods
push
mov
jmp
mov
mov
add
je
and
mov
jbe
add
mov
in
adc
call
cmp
mov
and
fidivrl
orl
add
stos
call
test
ret
out
addr16
jl
adc
fwait
jge
ja
popa
mov
jnp
add
or
xor
pop
sbb
call
fisttps
mov
adc
cmp
aas
sub
push
addr16
stc
aaa
or
in
jne
std
shrl
popf
loop
daa
stc
dec
push
stc
dec
mov
sub
mov
pop
cmp
adc
mov
mov
ret
shlb
int
jb
add
pop
fisttpl
mov
int
mov
nop
mov
jecxz
mov
sahf
add
xor
fcomps
sub
xor
xchg
cmp
xor
pop
cwtl
popa
loope
lock
cmp
push
fistl
sub
cwtl
mov
and
fcmovnb
jb
inc
aaa
mov
sub
xor
cmpl
jp
cltd
movsl
pop
mov
cs
stos
sbb
stc
das
xchg
aam
daa
add
mov
mov
imulw
jnp
adc
and
sub
or
push
push
std
lds
ja
ljmp
scas
inc
loopne
sub
cmp
cmpsl
push
pop
in
roll
inc
iret
sarl
pop
clc
push
rorb
and
movsb
je
inc
rcrb
adc
fldt
stos
daa
lds
pushl
data16
ret
mov
push
out
fnstenv
jbe
loop
cwtl
andl
xor
adc
jne
cmp
dec
adc
arpl
sahf
sbb
cli
inc
cmp
xchg
push
test
cmpsl
cmp
dec
outsb
stc
fsubrl
xchg
dec
aaa
push
shll
shrl
or
ds
enter
or
int
fucomp
inc
lods
sub
xchg
pop
push
pop
push
jnp
dec
ret
lock
ljmp
mov
pop
daa
or
mov
enter
daa
pop
cmp
add
rclb
pop
lcall
lahf
inc
loope
shrl
fldt
pop
or
or
mov
rorb
sbb
push
jo
fcoml
dec
xchg
and
popf
notl
mov
inc
je
xor
mov
insb
fidivrs
xor
vphadduwd
rorb
mov
sub
jp
add
push
push
xchg
push
pop
dec
mov
mov
fs
mov
push
fidivrl
fisubrs
dec
and
ds
add
push
leave
xor
cmove
insb
orb
push
push
xor
cmc
test
out
in
jae
stc
out
xor
ret
nop
loopne
fisubrl
repnz
fisttpll
xor
stos
dec
hlt
push
arpl
scas
fwait
stc
dec
bound
mov
add
gs
pop
cmp
loop
pop
rcrl
loope
mov
xchg
mov
adc
daa
xchg
daa
lret
mov
stos
icebp
cs
int
jbe
sub
scas
shlb
stos
pop
mov
aas
or
xor
arpl
nop
das
pushf
gs
jge
sti
jns
addr16
mov
aaa
xlat
push
int3
aas
xchg
push
lods
lcall
int3
pop
xor
mov
mov
xor
out
adc
sarl
aam
xchg
xchg
inc
lock
sti
ss
and
lahf
int3
cmp
adc
xlat
mov
test
xchg
mov
mov
jl
or
push
fbld
mov
stos
cmpsb
loop
push
pop
imul
int3
cmp
push
cmpsl
aas
xchg
cmp
dec
add
out
mov
repnz
cmpsb
add
mov
xchg
stc
mov
cltd
mov
add
call
sarl
add
mov
inc
test
je
inc
data16
push
in
push
into
lret
add
mov
shr
mov
in
mov
jbe
repnz
ds
imul
call
insb
shll
add
ret
int
jp
dec
push
lds
push
pop
cwtl
ss
imul
call
xlat
sbb
xor
scas
cld
xor
int
imul
fstpl
inc
frstor
aad
jecxz
sti
shl
fcomps
les
aas
jmp
fwait
push
stos
mov
faddl
add
cmp
xchg
into
sub
sub
jl
daa
push
xor
cmp
jb
xchg
xchg
aaa
test
pminub
mov
addr16
lds
addr16
pop
out
push
inc
xchg
mov
jns
mov
sub
mov
fs
hlt
mov
sbb
leave
ds
fcmovnb
enter
stc
mov
test
movsl
cltd
cmp
mov
and
fisttpll
ret
mov
mov
jne
fldcw
mov
and
jecxz
sahf
add
xlat
cmp
inc
ljmp
mov
stos
jae
stos
push
leave
cmp
adc
out
mov
into
in
loop
shrl
addl
and
xchg
mov
pop
outsb
lcall
loopne
aaa
fdivrp
aas
xchg
loope
mov
pop
push
repz
fs
xor
xchg
popa
xchg
ja
pop
int3
adc
lret
xor
pop
and
sub
mov
sbb
insb
mov
lret
aam
jmp
pop
in
stos
fld
push
bound
lret
push
xlat
movsl
add
push
notl
inc
bound
mov
lahf
ds
jl
and
jmp
icebp
sahf
out
rcll
push
mov
and
jecxz
outsl
call
movsb
sub
fcompl
rcrl
je
jecxz
mov
repz
mov
adc
mov
sub
pop
shlb
pop
sub
xchg
rclb
sar
sub
fwait
int3
int
mov
push
test
pusha
mov
dec
pop
xchg
pop
outsl
sbb
adcb
xlat
test
popa
push
adc
out
inc
push
jg
lcall
lret
or
das
daa
adc
xor
jmp
and
lods
inc
std
sub
aad
je
dec
push
inc
int3
pop
popf
rcrb
mov
push
xor
mov
add
xchg
lods
arpl
jecxz
adc
shll
sbb
je
xor
subl
loopew
mov
movl
fdivrl
mov
xchg
mov
xor
sti
jno
sbb
aas
ja
stos
test
sub
pop
sbb
test
sub
sbbl
inc
and
push
lods
inc
inc
inc
mov
mov
repz
idivl
cmp
dec
or
jge
jne
xchg
xchg
lea
or
scas
jp
enter
xlat
pop
fcomi
push
pushf
xchg
push
fsubrs
hlt
sbb
sbb
fs
jmp
stos
fbld
dec
adc
mov
xor
xor
movsl
inc
or
loopne
jle
pop
imul
scas
pop
push
in
pop
adc
pop
xchg
js
rolb
xchg
in
iret
gs
xor
dec
andl
lea
xlat
dec
fucom
out
mov
add
lods
clc
outsb
test
jecxz
mov
iret
add
add
notl
popa
adc
lea
xchg
push
in
xor
xlat
fmul
jne
arpl
out
push
les
mov
and
lock
setg
mov
adc
cmpb
ret
lcall
mov
pop
repnz
add
outsb
mov
aad
nop
and
add
shll
pop
flds
mov
das
xchg
testb
mov
cmp
aaa
test
out
push
lahf
int
mov
pop
jle
push
sbb
insl
add
in
dec
lea
jo
cmp
mov
daa
int
int
push
insl
outsb
lahf
loop
pop
push
cwtl
lea
push
lahf
insl
leave
push
sbb
adc
imul
jl
sahf
and
fwait
lret
xchg
mov
fs
xor
syscall
arpl
inc
pusha
mov
mov
sahf
cmc
jp
pop
ret
loope
imul
push
xchg
mov
and
cmp
rol
sti
repnz
imul
in
inc
sub
rorb
inc
outsl
mov
in
cmpsb
and
loopne
push
jecxz
sbb
pop
inc
cmp
imul
or
inc
cmp
add
rorl
fisubrs
ljmp
imul
aad
mov
dec
add
pushf
insl
jae
rclb
jo
jns
xor
mov
sbb
les
sub
lret
iret
arpl
push
mov
dec
shll
pop
or
in
hlt
test
leave
mov
addr16
mov
lods
xchg
mov
test
addr16
aas
data16
cmp
clc
jno
aaa
xchg
inc
in
or
xlat
test
xor
mov
divb
pop
cmp
jnp
jno
xor
jbe
cmp
call
sub
mov
mov
inc
or
enter
pop
dec
jl
fisttpll
imul
sbb
dec
adc
pop
cmp
adc
rcrl
movsl
inc
jbe
addr16
sarb
jno,pt
pop
insb
xor
jge
sbb
push
push
mov
cmpb
fsts
fistpl
add
insl
push
pop
inc
cmpsl
fisubrl
lret
xchg
shlb
and
jmp
jle
sti
xor
cmp
pop
and
and
jl
daa
cmp
mov
pop
add
gs
and
test
lods
or
lret
lret
sti
xchg
iret
push
mov
fdiv
push
mov
pop
sbb
pop
xor
les
insb
sbbb
mov
ffree
xchg
movsl
arpl
mov
mov
push
repz
or
mov
inc
imul
cmp
push
jno
xor
sbb
push
push
pop
mov
frndint
shlb
push
shlb
aam
inc
loopne
jle
pop
enter
inc
mov
loopne
push
dec
mov
ljmp
cmp
xor
pop
lods
sbb
cmp
fcoml
push
push
hlt
pusha
or
cli
push
cmc
popl
mov
inc
imull
orb
lea
jno
sti
iret
pop
push
push
orl
test
out
movsb
inc
or
pop
lret
jecxz
jle
cli
aad
jae
pop
call
popa
cmp
movsb
add
je
and
mov
loopne
outsb
out
cmpl
aaa
xchg
stos
push
ds
test
jle
lods
mov
push
clc
cmp
or
lds
mov
xlat
sahf
pop
cli
in
inc
lds
or
arpl
jae
or
adcb
cmp
out
enter
fwait
mov
adc
xchg
enter
jmp
dec
mov
mov
add
dec
ljmp
loope
mov
pop
insb
push
daa
loope
pop
jg
loop
sub
sub
xor
add
mov
jae
xlat
out
stos
pop
addl
inc
adcb
les
into
jg
repnz
das
push
inc
jge
pop
dec
int
imul
ja
int3
xor
imul
mov
fidivl
inc
dec
mov
rol
xor
and
fldl
ljmp
stos
scas
lea
pop
mov
jmp
jnp
mov
imul
sbb
dec
mov
fnstcw
mov
or
jp
sbbb
adc
mov
fwait
dec
ss
sbb
outsl
cwtl
sarb
out
cltd
pushf
push
mov
ljmp
xor
nop
mov
mov
pop
dec
nop
cmp
movsb
and
inc
in
sub
addl
mov
mov
ljmp
loop
xorl
mov
mov
mov
pop
clc
add
loope
pop
pop
ret
sub
mov
dec
rolb
and
repnz
popa
repz
and
inc
sub
fs
jo
into
outsl
int3
cmp
in
jo
and
pop
ds
popf
push
mov
jmp
sub
push
leave
daa
popl
push
out
loope
xchg
mov
bound
mov
ja
sub
lahf
lahf
dec
lods
jl
dec
mov
pusha
les
adc
jmp
shll
sti
sub
mov
mov
xchg
bound
rorb
adc
test
adc
hlt
fwait
and
call
pop
mov
cld
cwtl
idivl
lahf
push
ds
out
xor
jp
inc
stos
leave
andl
les
imul
xchg
push
cmp
jmp
pop
mov
or
loopne
outsl
nop
dec
stos
jle
outsb
and
and
icebp
xchg
andb
js
dec
mov
jmp
stc
fisubl
sahf
xchg
jl
jge
insl
jo
lods
pop
mov
popa
jmp
fincstp
and
mov
push
mov
incl
ds
jns
or
lods
pop
xlat
sub
shl
jmp
insl
fcoms
lods
rorl
addr16
leave
xor
add
push
in
mov
xor
push
push
in
fwait
push
popa
lahf
pop
sub
sub
mov
adc
pop
stos
loopne
jno
pop
mov
imul
sti
je
xor
xor
xor
mov
call
mov
in
push
and
mov
xor
fdivp
ja
jg
push
ja
pop
scas
pop
mov
cwtl
and
movsl
jg
mov
stos
scas
add
lods
ljmp
scas
jae
mov
mov
leave
insl
orl
es
inc
fnsave
insb
insl
jae
jecxz
repz
out
les
add
xchg
pop
dec
mov
push
inc
aad
outsl
pop
adc
jno
add
faddl
xchg
sbb
outsl
ja
sub
mov
cmc
jecxz
mov
notb
add
divb
iret
les
inc
jge
or
mov
sbb
addr16
outsb
sahf
mov
add
xchg
push
clc
int3
shl
fidivrs
xor
mov
push
lret
mov
mov
cs
enter
in
lock
pushf
fisubrs
hlt
jle
test
push
pop
lcall
mov
outsl
aas
jg
or
cmp
push
sub
popa
jo
inc
jg
fnsave
push
dec
mov
cmp
mov
push
mov
and
jle
mov
cwtl
cmpsl
lret
fwait
dec
les
dec
push
xchg
xor
inc
sbb
cmp
mov
les
cwtl
push
mov
nop
lods
or
cli
mov
out
insb
and
iret
push
inc
lock
sarb
bound
push
addl
dec
popa
ret
fistpl
test
and
mov
les
sarb
sub
insb
mov
imul
iret
imul
rorb
xchg
xchg
dec
and
sbb
sahf
or
jno
lods
add
loopne
into
xor
je
pop
pop
pop
loop
sbb
xor
xor
jp
test
mov
stos
pushf
ds
leave
fbld
cs
pop
pop
insl
inc
inc
outsb
and
fistl
divl
or
addr16
aaa
jae
pushf
scas
lcall
out
fstps
daa
and
push
xchg
push
je
mov
push
aad
push
imul
push
and
sbb
divl
fcoml
mov
aaa
xchg
sbb
rolb
dec
out
out
mov
les
bound
repnz
push
jno
rcr
cmp
pop
sub
lods
sbb
push
jns
jp
lret
add
and
out
pop
mov
add
repz
or
and
jno
cmp
in
into
fs
inc
sub
test
or
outsb
repz
xor
and
add
loope
jmp
push
mov
arpl
inc
addl
dec
or
sbb
cmp
or
jbe
xchg
jns
jmp
or
pop
and
aas
fdivl
enter
ret
and
pop
ss
idivl
scas
enter
adc
xchg
mov
rorl
adc
xchg
addr16
and
aas
sbb
pop
movsl
aad
push
push
sbb
loopne
test
push
fiaddl
jge
lahf
int
lahf
cmp
mov
movsl
rcl
adc
call
inc
clc
mov
cmp
pushf
hlt
imul
inc
add
ja
inc
ds
hlt
pop
lcall
pop
fistl
dec
int
push
mull
mov
jg
xor
lods
mov
adc
add
mov
mov
in
mov
xchg
pop
jmp
mov
mov
pop
lea
xor
add
dec
in
xchg
mov
jns
cmp
sti
mov
cmp
adc
rolb
sbb
dec
push
and
in
nop
repz
lahf
cmc
aam
aad
and
jbe
fwait
inc
stos
imul
dec
stos
xchg
xchg
push
movsl
divl
adc
xor
xor
test
enter
fldt
cmp
mov
mov
stc
mov
mov
andl
cmp
mov
inc
jns
mov
push
cltd
fwait
mov
xchg
mov
dec
xor
leave
movsl
or
por
cmp
mov
insb
mov
scas
fs
out
repz
or
xor
mov
movsl
sub
lds
dec
xchg
sbb
inc
cmp
mov
inc
sub
xlat
lods
sub
lret
lret
outsl
pop
mov
lcall
xlat
and
xchg
sub
add
sbb
mov
mov
dec
adcl
jmp
mov
imul
jge
sbb
fisttpl
shlb
mov
mov
mov
ficoml
pop
shl
in
int
insl
xchg
mov
dec
test
imull
adc
xchg
push
and
adc
push
and
xor
or
mov
dec
out
pop
outsb
clc
mov
fnstsw
cmpsb
in
int
jge
jecxz
inc
inc
adc
hlt
or
lea
or
adc
out
mov
inc
mov
rorb
dec
lret
popa
xor
lcall
out
fcoms
stos
push
sarb
mov
les
add
sarl
mov
push
pop
rclb
subl
push
jecxz
push
iret
sbb
lret
mov
stos
sarb
out
fwait
popa
adc
or
xchg
jae
call
dec
or
lcall
mov
pusha
dec
icebp
int3
cmp
lods
xchg
stos
loope
fiadds
dec
push
sbb
aam
mov
inc
es
call
xchg
in
aad
mov
xchg
ja
enter
aad
add
fdivl
fstpl
pop
cmp
in
in
mov
push
inc
mov
inc
lahf
scas
test
mov
jg
fcomps
cwtl
test
inc
clc
lahf
pop
out
pop
or
mov
shlb
shll
jno
jae
inc
jge
jl
das
inc
shl
sbb
jne
dec
pop
pop
cmp
je
mov
mov
or
push
aaa
mov
mov
and
les
out
inc
cmp
add
les
fdivrs
xchg
jle
lods
sub
push
js
ljmp
aaa
sbb
in
jne
jmp
adc
jnp
mov
shrb
adc
stos
pop
inc
and
jle
movsl
daa
leave
je
call
or
lock
leave
test
div
punpcklbw
loope
sbb
xor
scas
pop
jmp
push
mov
call
rclb
and
enter
daa
or
cli
scas
mov
inc
dec
jns
ret
in
test
jge
sbb
sbb
js
mov
jns
cmpsb
or
push
dec
pop
loope
pop
nop
dec
dec
mov
es
pop
in
pop
stos
mov
cmp
testb
mov
pop
pop
mov
pushf
cwtl
inc
or
std
scas
jbe
inc
aad
dec
add
add
lds
adc
js
add
add
add
pusha
mov
aad
pop
or
add
adc
dec
jnp
mov
lret
pop
jp
lea
bound
add
in
xor
rcrb
adc
arpl
faddl
mov
repnz
fwait
sub
sub
cli
or
stc
sti
stc
push
test
push
or
and
addr16
rorl
iret
loop
imul
fidivl
add
sbb
popa
push
out
jae
push
cs
shrl
mov
jg
jmp
pushf
dec
int3
or
lock
pop
ds
repnz
loopne
jg
or
pop
scas
int3
out
popf
fwait
call
sbb
xchg
xchg
cmp
lret
xlat
xchg
mov
shr
shrb
test
jbe
addr16
add
or
movsb
test
or
cmp
jnp
cmp
push
pop
mov
inc
mov
dec
cltd
add
fldl2e
pop
ret
xchg
dec
push
stos
pop
pop
aaa
out
sub
clc
cmp
cmpb
xchg
pop
iret
cmp
fstpt
movsl
mov
add
sbb
mov
in
jbe
loope
repnz
je
adc
je
aad
sub
leave
inc
mov
les
sbb
mov
inc
shlb
fsubrp
adc
push
cmp
sbb
jbe
iret
nop
sbb
xor
mov
add
fs
jae
je
add
int
or
orl
mov
xlat
inc
lret
and
or
lcall
push
fcoml
adc
movsb
je
mov
imul
sub
dec
aas
ds
add
adc
inc
cmp
pop
imul
lods
js
fdivs
jle
pop
in
jbe
mov
adc
cmp
push
xor
test
mov
outsb
mov
and
aaa
xchg
lcall
mov
fnsave
fldcw
dec
push
sti
out
cmpsb
js
leave
xchg
mov
mov
lods
push
jecxz
xor
xor
repnz
jne
aaa
adcb
popf
in
push
inc
adc
sub
aam
mov
pushf
jl
mov
push
enter
dec
pop
leave
inc
jmp
or
fcoms
add
mov
mov
push
cmp
movsl
es
inc
test
lret
mov
mov
dec
mov
iret
mov
cwtl
pop
jg
add
leave
scas
das
rorb
fidivs
fists
mov
mov
fisttpl
cltd
mov
dec
testl
adc
in
add
or
fsub
cmp
mov
shlb
outsb
es
cmpsl
movsb
sarb
mov
call
push
hlt
inc
pop
jp
push
jb
xlat
inc
or
mov
lods
ret
sbb
loop
or
gs
imull
pop
xchg
and
aad
sbb
imul
and
push
xor
xchg
or
mov
pop
pop
pop
cli
xor
mov
mov
xchg
push
popf
jns
add
dec
rcrl
mov
add
xor
mov
std
xor
in
popf
pop
xor
sbb
xchg
movsl
std
andl
aam
je
enter
push
jg
jns
pop
jno
std
push
repz
and
lret
in
ss
jo
inc
shrb
jae
in
inc
flds
push
sbb
mov
loopne
pop
push
es
xchg
dec
jno
mov
xchg
mov
call
xchg
sub
add
cmp
dec
and
cmpsl
mov
hlt
into
add
cmp
fldcw
cmp
lahf
mov
test
xor
adc
push
inc
pop
xor
pop
inc
lret
movsb
xchg
imul
loope
push
cli
jp
addl
lcall
cs
mov
insb
sarb
cmp
cmpsb
and
push
dec
sub
lret
daa
mov
xor
xchg
stos
xlat
inc
aam
sti
jno
shlb
dec
mov
lods
in
xchg
mov
lret
jecxz
frstor
test
cmp
hlt
jecxz
out
inc
and
dec
add
je
sti
lahf
jg
or
sahf
fcom
ja
jle
pop
mov
xor
jge
inc
and
lcall
mov
lret
cmp
jle
and
jle
cli
cmc
jmp
ss
in
stos
jne
mov
add
xchg
cmp
jo
movsb
cmp
jp
mov
xchg
pop
aas
or
and
mov
push
xchg
inc
jnp
gs
or
sbb
adc
in
aas
outsl
xor
fidivrl
dec
leave
xchg
lea
inc
pop
mov
daa
add
or
das
sbb
adc
dec
out
mov
subb
cmp
je
daa
int3
jo
repz
add
stos
push
push
je
inc
jns
mov
pusha
lcall
jmp
pushf
bound
and
jle
dec
jno
cmc
push
dec
icebp
les
mov
imul
mov
cmp
jns
std
sbb
inc
call
sahf
cwtl
ss
pop
adc
push
pushf
pop
jnp
imul
fwait
adc
jl
mov
push
mov
and
xor
dec
xor
sub
push
leave
inc
xlat
or
cli
add
inc
jecxz
shr
dec
xchg
push
sub
shrb
mov
lods
faddp
mov
loop
cli
sbb
loopne
adc
pop
fnstenv
mov
lea
cmpl
repnz
or
push
outsl
push
push
sbb
hlt
add
mov
incl
sbb
imul
xor
arpl
sti
adc
je
xchg
push
add
rclb
jno
add
mov
xor
mov
outsl
and
mov
std
popa
inc
mov
out
inc
inc
and
mov
int
outsb
ja
arpl
repz
pop
jmp
movsl
inc
or
or
test
sub
lahf
and
mov
sbb
pop
sbbl
std
cmp
cmp
pop
add
sub
mov
popl
iret
cltd
ja
jae
insb
fnstcw
es
cli
incl
cmp
rol
je
lcall
mov
and
pop
pop
insl
adc
cld
mov
mov
xchg
push
repz
jp
in
push
fidivl
lea
push
add
push
sub
enter
repz
out
jecxz
imul
cmp
in
jo
push
nop
imul
xchg
mov
push
sub
cmpsb
jmp
pop
jmp
fadd
sahf
test
lret
fwait
xor
jnp
push
in
add
mov
cmp
inc
xchg
add
push
aaa
pop
mov
xchg
arpl
test
mov
fsubrl
inc
inc
inc
and
ror
xor
pop
xchg
fbstp
mov
shrl
enter
test
mov
cmp
sub
test
ret
sub
lods
in
xor
cmp
xchg
in
inc
sbb
lahf
cwtl
jge
pop
jno
mov
xchg
adc
jnp
xchg
sub
mov
pop
xchg
sub
pop
sub
xchg
dec
fdivrl
ss
dec
pop
mov
daa
jb
rcll
push
inc
pop
scas
inc
aam
adc
push
lcall
repz
fnsave
cs
insl
mov
dec
push
je
movsb
bound
pop
jge
add
jecxz
rolb
cld
pop
adc
in
add
aas
or
scas
adc
xchg
mov
push
fsubs
sbb
pop
std
push
in
nop
ljmp
mov
adc
stc
and
add
dec
sub
lret
cld
ss
out
dec
test
mov
sbb
nop
jp
ret
arpl
enter
mov
dec
insb
jo
lods
imul
dec
add
ja
ljmp
ss
fs
frstor
xor
inc
add
cli
outsl
jle
adc
pop
inc
mov
arpl
push
dec
lds
loop
jb
jb
dec
inc
jae
or
mov
xorl
sahf
das
pop
sub
cld
lods
and
xor
add
mov
icebp
adc
stc
cmp
pop
jge
inc
push
inc
cmp
push
rcrb
dec
sub
sub
jp
loopne
jg
std
cmp
dec
out
or
test
pop
fbstp
stos
xchg
mov
or
jae
ss
mov
orl
xchg
ret
es
xor
stc
add
add
push
adc
xchg
mov
xor
hlt
add
movsb
xchg
negb
loope
or
adc
popf
cmp
gs
in
daa
addl
aam
mov
mov
sbb
scas
sub
pop
cs
in
xchg
pop
test
push
mov
fs
push
inc
fbstp
adc
iret
fsubrp
fnstenv
fs
or
mov
jne
icebp
mov
add
xchg
push
int3
and
push
out
mov
stc
sarb
shll
cmp
sbb
int
mov
shrl
out
and
aad
sub
movsl
xchg
test
addr16
sbb
mov
ficoml
shr
loop
mov
push
dec
and
mov
mov
push
cltd
stc
lcall
mov
and
push
out
sub
ds
jmp
cmp
rcrl
xorb
dec
push
fwait
nop
cld
insb
stc
cli
lock
cmp
inc
and
cwtl
inc
mov
ljmp
scas
adc
xchg
test
add
fadds
adc
arpl
pusha
loope
ret
lcall
movsb
cltd
inc
flds
scas
cli
shlb
cmp
stos
aaa
lds
inc
clc
cmpsb
xor
les
jp
arpl
jge
sub
dec
adc
pop
fcomp
and
sub
pop
adc
sbb
dec
shll
rcll
ss
jle
dec
mov
lret
inc
adc
xor
cmpl
mov
rorb
jne
sbb
push
cwtl
xchg
xor
adc
xor
pop
and
sbb
lret
nop
xchg
mov
adc
and
mov
push
addr16
pushf
sbb
xchg
sbb
movl
jle
aad
mov
push
data16
xor
repz
les
xor
sbb
popf
push
jae
xchg
cld
adc
call
pop
jbe
dec
jb
and
push
lods
lods
xor
cld
sub
pop
lret
push
lahf
pop
addr16
aaa
dec
jmp
inc
cmp
shlb
sarb
loope
cld
adc
ja
mov
js
cmp
je
frstor
pop
arpl
and
add
pop
mov
lods
mov
sub
shll
rcrb
stos
in
inc
or
stos
adc
mov
repz
icebp
ljmp
test
aam
mov
mov
adc
std
movsb
cwtl
icebp
int3
popa
pop
adc
sbb
rorb
cmp
sbb
aaa
ss
test
sarl
and
scas
adc
outsb
fdivrs
sbb
mov
lret
cli
dec
inc
cmp
loop
leave
ja
and
mov
jb
xor
inc
jno
mov
ret
inc
aas
inc
jo
jns
ret
mov
shrl
push
push
sbb
and
incb
aam
push
xchg
out
dec
ljmp
inc
cmp
mov
or
mov
ret
gs
dec
jle
jp
pop
call
enter
jp
and
pusha
xor
stos
mov
addr16
rol
adc
push
outsl
sbbb
out
ret
mov
mov
mov
mov
or
clc
jb
and
das
sbb
es
ret
xlat
add
xchg
std
xchg
pop
movsb
int3
cmc
aaa
es
mov
push
xor
xchg
push
lret
jbe
and
imul
push
enter
sub
xor
aam
inc
inc
push
dec
fsubrl
push
stc
nop
sub
dec
mov
push
push
cmp
aaa
fs
je
sbb
rolb
or
in
cmp
jne
sbb
decb
scas
out
imul
outsb
repz
sbb
sub
adc
fisttps
cmpsl
das
test
rcrb
aas
mov
fstpl
jge
aad
sbb
repz
pusha
sahf
or
mov
mov
int3
fs
movb
data16
rclb
xchg
push
lahf
mov
sub
sub
jo
xor
sbb
mov
mov
lock
and
inc
dec
cmpsl
js
cs
call
divb
lcall
je
inc
mov
inc
mov
sub
mov
cmpsl
lods
dec
mov
dec
out
push
and
imul
inc
ret
sub
sbb
jge
test
je
mov
push
sub
std
and
sbb
test
test
fcmovu
dec
loopne
xor
shl
mov
adc
jne
push
scas
push
push
or
sbb
dec
sarb
sbb
outsl
xchg
pop
popf
sbb
jl
mov
xlat
pop
dec
jmp
xor
mov
mov
pushf
aam
rcrl
xor
insl
push
jecxz
pop
inc
cmpsl
jb
dec
out
push
mov
fwait
pop
mov
sub
mov
cmp
js
ss
sbb
mov
pusha
shll
imul
scas
push
jmp
addr16
push
xchg
push
js
jp
ret
fwait
in
sub
inc
adc
xchg
cmp
out
or
push
mov
mov
xchg
mov
je
sub
mov
cmp
sbb
sbb
sub
sub
pop
pop
mov
leave
addb
fs
rcrb
insb
jg
adc
out
jge
sbb
pop
inc
jg
jnp
sub
jo
add
incb
dec
push
or
mov
out
loope
mov
mov
xchg
hlt
and
xor
push
sub
aas
sub
nop
and
leave
repz
adc
stos
mov
lock
out
mov
stos
add
lahf
xchg
mov
cmp
dec
daa
pop
stos
pushf
add
mov
add
pop
sbb
cltd
loop
or
sub
pop
rolb
nop
pop
in
mov
popa
js
inc
jecxz
push
std
out
jnp
xchg
sub
xchg
fadds
push
outsl
fadds
ret
out
aad
ja
mov
into
shlb
and
jns
mov
push
stos
push
or
scas
cmc
lcall
jg
adc
adc
ss
outsb
xor
jge
sbb
sub
sub
cld
mov
cmc
lock
cmp
fidivrl
cmpsl
push
iret
lret
sbb
dec
push
in
mov
or
cmp
lods
mov
jne
xchg
mov
sbb
ljmp
js
cld
xchg
inc
scas
lcall
movsb
in
scas
push
xchg
jbe
pop
push
fwait
xcrypt-ofb
cmpsl
sub
scas
int3
repnz
xor
scas
sub
rcl
push
cmp
sbb
imul
push
push
clc
jno
cmpsl
ret
aaa
imul
xchg
int3
pop
dec
std
mov
addl
int3
and
fwait
add
inc
mov
data16
test
pop
sub
lret
aad
jge
outsb
xor
push
int3
negb
imul
xor
fisubs
outsb
in
ds
mov
fists
in
popf
test
xchg
cltd
xchg
inc
jg
lcall
mov
fucomi
call
sub
push
clc
push
cld
xorb
adcl
rcl
lds
push
movsb
loop
cmp
mov
cs
popf
fidivl
mov
jnp
cwtl
pop
icebp
lock
push
cmp
xor
or
cmpsb
push
add
mov
adc
rcll
loopne
outsl
mov
push
insl
pop
xchg
ljmp
cld
dec
sbb
ja
repnz
faddl
xor
and
dec
mov
mov
jl
xchg
jle
sub
pop
push
or
mov
or
aam
jle
jl
fs
fsubs
dec
ss
cmp
inc
loop
repnz
lds
inc
mov
add
aas
int
das
and
sub
push
adc
dec
daa
sub
mov
xchg
sbb
push
xchg
es
dec
sar
push
xor
sbbb
jmp
cli
rclb
andb
push
imul
xorl
and
aaa
mov
ret
and
out
nop
addr16
jno
push
add
scas
fdivp
lock
cmp
pop
jae
mov
and
or
mov
adc
ret
lods
and
pop
je
mov
and
cld
pop
in
or
cs
jae
mov
mov
btr
pop
sar
mov
mov
or
out
incb
sub
in
xor
cli
leave
jae
aaa
and
out
or
out
outsb
sub
fs
pop
mov
sar
lahf
shlb
std
cwtl
lea
cmp
xchg
aad
xchg
sub
xor
mov
cmp
out
bnd
jp
sbb
cmp
adc
inc
adc
cmc
fisttps
xchg
xchg
clc
xchg
sub
orb
je
mov
loopne
mov
sub
xchg
dec
jnp
loopne
je
mov
push
pop
xor
jle
add
jecxz
out
pop
jp
jo
imull
sbb
jo
test
subb
mulb
mov
sbb
cmpsb
shlb
mov
dec
xor
ljmp
mov
lods
fdivp
jno
dec
ja
xchg
lock
arpl
push
or
es
add
or
dec
dec
dec
mov
mov
movsb
inc
dec
pop
daa
fnstcw
jns
test
out
xchg
push
inc
mov
mov
movsb
in
sub
mov
sbb
lret
cltd
jmp
and
insb
push
outsl
ja
jno
jb
insb
loope
sub
cld
das
ret
sub
or
stos
mov
loope
mov
mov
gs
sbb
xchg
ds
mov
popf
flds
jmp
jns
jae
std
push
js
cmpl
sub
fstl
dec
mov
pop
mov
xchg
arpl
out
cmc
jl
sbb
mov
mulb
data16
dec
insb
pop
jecxz
jle
das
adc
test
sbb
push
mov
pop
insl
mov
jbe
ds
movsl
sub
fdiv
lock
insl
shrb
sub
mov
lretw
mov
adc
sub
lods
in
cmp
shr
jnp
imul
cmp
dec
jae
fld
add
jbe
mov
dec
lahf
push
and
stc
call
sbb
cmp
jle
mov
and
lret
js
mov
pushf
enter
sub
or
pop
loopne
mov
inc
inc
pop
mov
adc
ret
jp
xor
shr
pusha
xchg
sar
fs
rcl
test
or
mov
pop
push
scas
dec
cld
repz
lds
mov
sbb
xchg
adc
jecxz
lret
pop
sbb
mov
aad
aad
sub
out
loope
adc
test
xchg
cmp
mov
fidivrs
popf
gs
test
jmp
dec
or
xchg
or
mov
repz
pop
xor
jg
loop
mov
inc
cmp
inc
jp
jmp
lods
sbb
in
sbb
fisubl
imul
mov
jae
int
sbb
mov
out
out
fldenv
imul
cmpsb
push
inc
pop
mov
mov
repnz
pop
inc
ret
arpl
loop
seta
inc
fdivrl
xor
jmp
jg
shrb
pop
outsl
cmp
ss
cmpsl
dec
sub
inc
jge
inc
push
scas
push
inc
sbb
cmpsl
inc
mov
xor
or
push
cs
mov
lret
sbb
lods
mov
and
cmc
xlat
or
lds
add
fildll
dec
cs
sub
insb
push
mov
ficoms
pop
fildll
jecxz
shlb
jnp
loopne
mov
mov
xor
lds
mov
std
pop
xchg
push
or
loopne
out
int
xchg
adc
adc
addr16
loop
mov
xchg
pop
fs
lods
test
sahf
imul
push
mov
xchg
jmp
pop
push
dec
inc
pop
std
jae
add
sub
pop
mov
jo
adc
mov
out
mov
xchg
mov
cltd
mov
cltd
and
es
addr16
mov
mov
dec
or
jp
inc
mov
mov
mov
sbb
leave
fisubrs
mov
shlb
sahf
in
repnz
or
pop
testb
pop
push
es
xor
scas
jl
dec
leave
sub
sbb
jle
in
sub
mov
gs
cmpsl
xor
jne
rorl
cld
dec
push
and
add
push
movsl
out
mov
xchg
jo
mov
xchg
hlt
push
orb
mov
lods
dec
xchg
and
mov
aas
mov
dec
push
lea
hlt
adc
pop
lds
sub
inc
xchg
popa
test
fwait
mov
sub
test
or
daa
divb
dec
fstpl
pop
test
cvttps2pi
inc
dec
push
dec
xlat
jg
arpl
sbb
mov
ljmp
adc
mov
sub
test
lahf
in
aad
inc
daa
aas
lret
xchg
add
push
movsb
push
scas
outsl
loop
adc
sahf
pop
out
mov
jb
out
cltd
sub
cmp
cmp
xor
mov
sti
inc
push
push
outsb
sub
mov
inc
fisubrl
cmp
mov
scas
pop
iret
loop
ja
sti
adc
cs
divb
dec
push
out
pop
dec
adc
loopne
dec
bound
dec
in
xlat
ret
adc
mov
sbb
fmul
xor
jns
pop
dec
insb
mov
int3
push
scas
out
sbb
das
push
jg
and
xchg
mov
icebp
pop
push
inc
fstpt
repnz
and
icebp
addr16
lods
pop
mov
mov
add
stos
pushf
shl
and
rclb
jl
jnp
inc
or
push
xlat
outsl
shlb
test
repz
dec
mov
cltd
enter
lock
or
cmp
stos
or
rclb
cwtl
das
xchg
xor
frstor
fst
push
xchg
das
leave
jno
pop
mov
add
xor
push
sti
adc
pop
xor
int
popf
jb
out
dec
dec
jle
mov
insl
push
cmp
sub
ret
fldcw
enter
int3
sub
jne
mov
shrl
inc
rclb
in
push
std
stos
out
and
insl
out
je
jl
rcrl
add
inc
scas
das
negl
jo
xchg
jl
and
jle
adc
mov
les
scas
add
cmc
sub
lods
jecxz
pop
push
add
loop
notb
push
dec
inc
sti
movsl
push
dec
push
adc
mov
lahf
adc
xor
xor
sbb
or
fcmovne
xchg
test
mov
into
add
pushf
decl
push
sahf
and
lret
or
lret
pop
add
scas
cmpps
ja
sub
leave
jo
movsb
repz
sub
push
loope
xchg
push
inc
leave
repz
mov
jmp
xor
mov
inc
cmp
sub
dec
mov
mov
or
sub
jns
mov
dec
jmp
ja
push
adc
sub
pop
fisttpll
test
and
jb
sbb
push
loope
ss
pop
jo
dec
fldenv
add
push
cmpsb
mov
jb
xor
adc
ljmp
ds
adc
cltd
mov
fidivrs
leave
pop
mov
sbb
lea
arpl
or
cwtl
pop
mov
arpl
xchg
movsb
pop
jno
pusha
das
rcrb
psraw
nop
stos
mov
inc
lcall
sbb
xor
js
dec
mov
adcl
aas
scas
jno
lcall
ds
lret
fisubs
xor
pop
jp
loop
cltd
rcl
jg
add
inc
jo
mov
hlt
inc
mov
aam
jb
lret
xchg
scas
test
sbb
xorl
sahf
jno
inc
pushf
fwait
push
adc
lea
cmp
aam
cmp
arpl
and
repnz
jg
push
insb
data16
mov
mov
lods
movsl
mov
push
out
add
dec
cmp
dec
dec
call
inc
call
dec
lock
dec
cmp
aas
pop
stos
mov
dec
mov
dec
pmulhuw
insl
loopne
jecxz
aaa
mov
rclb
in
mov
push
test
popa
lret
hlt
cmp
jl
mov
sahf
inc
daa
iret
cmp
lods
cli
inc
jne
pop
adc
rclb
imul
test
sub
ss
pop
cmp
pop
inc
and
sub
inc
lret
cmpsb
movsl
adc
dec
mov
filds
adc
cmp
imul
xchg
inc
ret
add
mov
cmp
faddl
leave
sub
push
fbstp
loope
lret
jmp
push
mov
sbb
fildll
stos
lret
popa
jo
fwait
jl
pop
cmp
adc
rcr
push
out
mov
insb
orl
popf
mov
push
ret
sub
repnz
xor
adc
jb
nop
mov
pop
or
sub
jne
adcb
xor
dec
lods
jl
or
cmp
inc
or
stos
fistl
bnd
ja
mov
xchg
jnp
inc
insb
stos
inc
pop
add
mov
add
cmpsl
adc
and
daa
pop
sahf
pop
stos
push
xor
pop
mov
subb
add
or
jmp
push
dec
pop
xchg
jp
es
jg
ljmp
push
ds
aad
fwait
jecxz
imul
cmpsl
push
sbb
sub
cs
repz
call
xchg
test
pop
in
clc
hlt
and
jmp
xor
pop
pop
lock
imull
xor
mull
lods
test
push
sarl
jp
out
or
ja
xchg
fsubrl
in
and
cwtl
sarb
inc
lods
lds
xlat
ds
lret
int3
shrb
pop
std
inc
cli
pop
scas
sub
adc
outsl
mov
dec
fcmovnbe
push
pop
and
ret
data16
out
and
or
mov
and
mov
push
cltd
add
fsubs
dec
repnz
push
fwait
incl
ret
mov
xor
mov
sub
dec
pop
icebp
jne
test
test
test
xor
mov
xor
jp
adc
fimuls
sub
int
cmc
xchg
loope
push
pop
stos
mov
mov
out
push
cwtl
xor
cld
sbb
cmpsb
test
xor
mov
sar
xchg
sub
out
pop
sbb
test
mov
repnz
cld
dec
mov
les
fsubl
xchg
pop
push
xchg
pop
ficoml
jne
xor
xchg
pop
out
xchg
pop
sti
jp
in
sbb
jecxz
or
and
aad
movl
out
shrl
fwait
xor
xor
mov
js
clc
push
jmp
sti
cli
sahf
subl
js
cmpsb
cmp
dec
mov
pop
jo
pop
dec
adc
jb
fdivs
jb
leave
in
mov
frstor
in
mov
mov
dec
ja
das
lods
shll
out
daa
pushf
cltd
dec
inc
adcb
push
xchg
sbb
mov
xor
xchg
icebp
xchg
out
push
ja
or
mov
inc
pop
sub
jecxz
into
scas
pop
cmp
pop
aad
in
sub
rcrb
push
xchg
imul
xor
ds
xchg
jge
mov
dec
fldl
jbe
xor
cmp
or
xor
xchg
mov
mov
jle
lea
xchg
out
jp
push
or
movsb
and
fs
pop
sub
lea
fmuls
addb
stc
mov
jno
push
inc
inc
mov
jecxz
cmp
jns
in
mov
pop
in
pop
inc
push
es
pop
cwtl
add
rorl
xchg
mov
out
mov
sbb
mov
mov
mov
dec
out
cmp
in
push
popa
in
outsb
lods
test
mov
test
and
mov
mov
xchg
cli
scas
xchg
xlat
sbb
stc
push
xor
adc
adc
fwait
gs
sub
mov
mov
into
dec
push
xbegin
dec
push
shrb
xchg
div
xchg
cltd
or
lret
ret
repz
in
cmp
cltd
clc
push
xor
fisubl
dec
pop
xchg
cmp
aam
jp
jg
test
aad
insl
cltd
cmp
inc
mov
push
call
jb
mov
in
sarb
push
mov
sub
mov
jne
and
and
cmp
and
dec
decl
dec
cmpsb
test
pop
mov
iret
inc
xor
ja
pop
imul
es
xor
xor
push
iret
mov
sub
pop
sub
dec
pop
loop
fcoms
push
loope
outsb
jg
push
scas
jle
mov
xor
fsubrl
pop
add
test
icebp
popf
xchg
into
push
mov
icebp
imul
xor
push
add
lock
sbb
dec
mov
adc
push
fwait
lods
cld
and
int3
hlt
ffree
mov
mov
stos
imul
cld
and
sub
inc
or
push
add
mov
ss
mov
fmull
adc
fwait
push
in
mov
ja
sub
jns
mov
inc
loop
dec
mov
mov
and
xchg
mov
cs
jb
and
arpl
inc
cmp
test
fbstp
iret
cld
rcrb
sub
cltd
test
notb
mov
xorl
xchg
mov
lds
mov
out
jl
dec
mov
negl
out
xlat
mov
jge
mov
stos
pop
or
and
leave
pusha
sarl
dec
outsl
xchg
mov
or
lret
add
jg
aad
cld
fwait
stos
mov
inc
cmpsl
and
adc
sbb
pop
cltd
add
sbb
insb
test
negl
push
mov
aaa
jge
xchg
negb
xor
shl
or
repnz
jecxz
fcom
in
sub
sbb
jae
pop
sbb
push
or
int
repnz
and
inc
mov
outsb
dec
cmp
jae
inc
cwtl
and
int3
xchg
js
push
jb
outsl
sub
fisubrl
idiv
mov
push
fst
sbb
push
test
mov
test
pop
sub
xor
aaa
sub
leave
jb
sbb
subl
fiaddl
push
cmc
cmc
add
mov
xor
sar
jne
orl
sub
jnp
in
insl
loopne
mov
pop
mov
mov
mov
jne
xchg
stos
adc
sbb
sub
out
and
into
jbe
fnstsw
scas
rcrl
jbe
rcr
push
mov
push
imul
and
call
in
test
aaa
sarb
jle
cmp
fwait
mov
mov
mov
xchg
scas
subb
stc
cli
subb
inc
xlat
pop
inc
pop
mov
imul
scas
nop
mov
xor
cmp
push
arpl
fwait
daa
xor
scas
mov
std
inc
out
mov
lahf
dec
add
call
pop
sti
adc
add
jne
mov
inc
pop
loop
insl
add
jne
call
xchg
or
and
sub
mov
arpl
stos
insl
and
jle
test
out
adc
ret
mov
rcrl
shlb
push
mov
insb
sbb
pop
cli
clc
sbb
test
add
insb
ds
mov
sub
xor
xor
mov
cmpb
fbld
cmp
push
pop
mov
movsb
dec
or
imul
mov
push
sbbl
mov
call
popf
lods
xor
mov
insl
inc
inc
pop
cwtl
dec
push
pusha
mov
mov
out
aad
pop
pop
daa
jmp
ljmp
addr16
scas
xor
mov
in
clc
in
mov
push
outsb
ret
sahf
and
adcb
sbb
mov
imul
adc
pop
dec
mov
mov
out
in
shll
loopne
mov
sbb
mov
jle
out
dec
mov
ret
mov
add
pop
cmpsl
adc
stos
pop
xor
lea
mov
bound
sbb
jmp
decl
jns
dec
adc
jge
in
pusha
hlt
and
pop
das
mov
mov
jp
xchg
test
inc
scas
lock
fs
sbb
jle
sub
mov
test
test
test
repnz
mov
fcomps
sbb
lcall
push
fidivrl
pop
sbb
pop
cmc
pop
mov
movsb
movsl
data16
cmp
and
ret
or
adc
cwtl
add
das
movsl
orb
cmp
pop
xchg
inc
sub
test
mov
and
jg
jle
inc
xchg
shlb
divb
fldenv
popl
das
mov
in
pop
pop
shlb
pop
lret
xchg
loope
lock
push
stos
xor
cmp
pop
lock
sbbb
aam
addr16
mov
dec
icebp
jo
push
aad
push
fmull
int3
aam
std
lea
cmp
xchg
jecxz
sub
ds
cltd
shll
repnz
push
sbb
rcll
fidivrl
jae
jns
pop
mov
pop
dec
jg
scas
adc
scas
je
push
imul
dec
test
cmp
ss
and
mov
dec
je
repnz
mov
fbld
jbe
cmc
and
stos
add
ja
cmp
pop
jnp
and
add
xchg
pop
jns
mov
dec
sub
pop
out
adc
push
clc
lret
aad
jp
xor
fistl
inc
int
dec
and
jo
out
sbb
aaa
jecxz
lds
pop
sub
jo
out
xor
aas
sbb
jl
movsb
pop
add
pop
mov
dec
int3
jg
jle
mov
das
outsb
adc
lea
push
int3
jg
xchg
or
xchg
add
adc
xor
das
mov
js
movsl
adc
sub
push
xchg
fistpl
xchg
std
fs
aad
add
ficomps
popf
xor
push
pop
xor
test
inc
mov
std
pop
imul
popf
jp
out
aas
icebp
jbe
cmpb
pop
popf
lcall
jbe
mull
pop
lcall
adc
stos
repz
pop
pop
sbb
int
cmp
out
inc
arpl
call
into
mov
fldt
push
popw
outsl
lcall
sbb
mov
sbb
imul
aas
cmp
fs
mov
mov
sbb
outsl
cmp
js
ret
pop
scas
pushf
push
in
jge
movsb
xchg
or
pop
ds
cs
fs
sub
pop
ficomps
jecxz
rcrb
hlt
loop
cmpsb
ds
add
leave
xlat
aad
mov
loopne
xor
dec
daa
sub
add
and
and
mov
xchg
repz
inc
or
fwait
ljmp
out
rcrb
mov
mov
testl
mov
bound
les
cmp
aam
int3
mov
push
adc
enter
adc
cmp
jno
mov
pop
mov
jge
jle
mov
cld
sub
inc
clc
push
ret
movsb
les
sahf
fiaddl
into
in
mov
push
inc
stos
push
cld
sub
adc
je
call
sbb
xchg
les
sbb
mov
mov
push
pusha
decl
aaa
push
inc
ljmp
aaa
iret
mov
inc
fs
and
pop
inc
add
incl
call
cmp
jp
lods
arpl
scas
outsb
push
lods
cmp
mov
ret
shlb
mov
jnp
popa
es
repnz
adc
cmc
inc
leave
rcll
add
out
sbb
pop
dec
or
xor
dec
call
and
ficompl
out
mov
test
scas
imul
mov
loopne
ljmp
into
xchg
sbb
jae
repz
leave
inc
cmp
jp
daa
orb
fildl
cmp
xor
xor
jg
cwtl
push
bound
lret
pusha
popf
xor
test
repnz
cltd
sub
push
cltd
add
int3
pop
hlt
pop
shrl
shlb
imul
and
loope
mov
xchg
and
sbb
push
in
cmc
jecxz
mov
push
sub
mov
rcl
daa
sub
lret
push
pop
or
ja
mov
les
subl
repnz
mov
hlt
dec
aaa
push
ret
pop
lods
rcrb
xchg
scas
dec
cwtl
dec
je
mov
pop
jge
xchg
shlb
push
out
adc
sbb
fildl
pop
je
mov
mov
jns
jne
push
dec
and
shlb
nop
cmp
sbb
dec
stos
mov
sbb
scas
out
enter
jno
testb
ror
push
cmpl
inc
lret
add
add
shlb
adc
mov
insl
and
and
push
dec
lcall
repnz
xchg
lcall
outsl
or
outsl
mov
es
loopne
or
je
test
gs
out
adc
or
xchg
inc
repnz
xchg
cmc
test
sub
rcll
rorl
cmpsb
aaa
cltd
rcrl
jnp
pop
xor
subb
mov
cli
dec
shl
sti
sbb
jl
lret
fwait
pop
aaa
push
jns
inc
cs
arpl
add
dec
mov
push
int
js
add
xor
cmc
rorl
test
mov
jg
sub
xchg
cli
cmpsb
cmp
xchg
push
lods
sbb
lea
sbb
pop
shlb
mov
push
mov
inc
sbb
lds
jg
jne
xchg
aam
fs
sub
clc
add
test
inc
je
mov
orb
iret
dec
pop
pusha
les
or
leave
lea
sbb
fistps
aad
jne
je
cmp
aas
add
mov
push
mov
jg
mov
shll
jmp
jecxz
enter
sbb
shll
gs
data16
push
inc
mov
push
inc
inc
push
cwtl
pop
ret
fsubl
inc
jnp
push
sub
mov
and
sub
cs
or
leave
rcll
sbb
adc
push
dec
pop
mov
outsb
xchg
inc
movsl
popa
andl
roll
jge
adc
add
fmuls
repz
mov
cmpsb
leave
bound
inc
lret
stos
add
and
movb
shll
xchg
adc
push
loop
aaa
pop
movsl
xor
aad
sub
cmp
xor
into
cmpsb
mov
xor
in
xchg
inc
sbb
mov
jbe
mov
mov
mov
into
or
pop
xlat
xor
mov
imul
cmp
sub
pusha
scas
mov
push
mov
mov
inc
jo
mov
or
dec
cmpsb
andl
insb
test
add
lret
int
out
push
js
mov
push
mov
sub
add
sub
pop
inc
mov
cmp
jg
cmp
push
fidivrl
jle
xor
pop
pop
rcl
adc
addr16
ret
jno
sub
enter
push
es
fstpt
test
fldenv
jmp
mov
mov
int
adc
and
das
test
arpl
xchg
mov
add
adc
mov
cmp
mov
mov
inc
pop
cli
mov
inc
adc
pminub
sub
xorl
clc
stos
mov
cli
mov
xchg
add
lcall
and
cmc
std
dec
fdivp
in
jns
sbb
fs
mov
push
faddp
dec
ret
lret
cmp
cmp
lea
dec
gs
das
jp
pushf
xorb
and
mov
xchg
subl
push
inc
enter
mov
fisubs
xchg
push
sub
mov
cltd
xchg
jle
nop
mov
add
leave
inc
shll
xor
pop
jo
add
jmp
lcall
fldcw
mov
insl
hlt
inc
push
sbb
sub
mov
xlat
fisttpl
jae
adc
and
sbb
push
fimuls
repz
mov
int
push
fsubl
call
adc
hlt
scas
dec
sbbl
jl
jge
outsb
test
fisttps
sub
and
adc
sbb
add
or
mov
popa
cmpsb
add
dec
pop
mov
es
mov
push
and
hlt
mov
push
mov
push
jo
xor
out
imul
xor
and
dec
adc
dec
icebp
push
sub
rclb
dec
and
test
mov
mov
xor
push
sbb
xor
bound
lret
and
or
fisttpl
mov
sub
push
mov
rolb
in
xor
push
bound
jp
je
sub
fbld
mov
xor
jo
imul
pop
push
lods
push
pop
mov
inc
inc
mov
sti
jecxz
or
arpl
push
xor
dec
test
xchg
push
daa
xor
or
das
dec
add
shlb
push
jbe
insl
mov
ja
ret
lret
cmpsl
outsl
test
xchg
imul
xor
jmp
leave
jge
xchg
cmp
aas
inc
mov
adc
xorl
inc
aaa
push
pop
loope
push
fcmovne
stos
movsl
ror
push
push
inc
loope
icebp
inc
xchg
hlt
addr16
mov
jb
mov
pop
cmp
repz
cmc
bound
fadd
scas
or
sub
and
imul
data16
sbb
adc
xor
push
mov
push
test
adc
aas
aam
lea
and
push
inc
xor
jecxz
inc
lds
scas
clc
sbb
test
je
jb
xchg
das
sbbl
subb
pop
xchg
lret
imul
cs
clc
mov
and
fcomp
rcrl
das
push
mov
mov
pushf
movsb
mov
test
fcomp
xchg
add
jmp
mov
daa
aaa
ret
mov
push
fistl
inc
les
pop
dec
dec
jge
dec
test
cmp
push
inc
dec
jbe
mov
inc
adc
adc
adc
addr16
cmpsl
jne
in
push
xchg
popa
and
gs
jns
inc
movsb
add
sbb
push
fsubs
xchg
test
pop
adc
cmp
es
subb
inc
xor
loop
sahf
xor
test
repz
dec
vdivss
cmp
push
sbb
call
cmp
jnp
pop
xor
pop
outsb
push
idivb
and
lcall
adc
mov
loope
or
repz
push
test
cmc
pusha
shl
out
inc
popa
add
aad
ror
pop
cmp
push
icebp
jmp
jno
jnp
push
setge
push
in
mov
cwtl
or
sti
sub
mov
gs
scas
scas
ljmp
aas
xor
roll
or
mov
leave
xchg
stos
mov
inc
xor
and
cmp
xchg
das
add
xor
sub
pop
ja
inc
xchg
out
mov
cli
jbe
push
stos
push
aad
inc
xchg
xor
stc
mov
in
xor
jnp
and
mov
stos
xor
mov
shll
sub
fistps
cli
lea
mov
push
inc
int3
mov
mov
push
rcrb
test
lret
cld
nop
int3
sti
stos
xor
in
popf
shr
incl
cmp
hlt
dec
lods
ret
in
sti
push
dec
pop
loope
mov
es
mov
repz
mov
fildll
sub
push
push
fldenv
add
inc
js
test
ja
cmp
xchg
inc
push
dec
dec
pop
inc
dec
mov
cmp
jp
fistpll
xchg
cwtl
mov
cmc
xor
cmp
ss
fimuls
pop
loopne
mov
lret
jl
fsubrs
pop
push
mov
inc
mov
ret
or
sub
inc
cmp
jle
test
push
sbb
mov
or
pop
loopne
adc
pop
sarb
dec
clc
in
jne
sub
bound
mov
and
incl
fsub
pop
and
nop
jb
mov
aam
dec
push
push
stc
stos
pusha
out
neg
mov
idivl
imul
xor
popf
jne
jmp
call
inc
inc
adc
dec
shll
ljmp
sub
mov
inc
loop
adc
adc
idivl
jne
lret
dec
gs
sub
data16
xchg
dec
and
fsubp
and
or
fsubr
add
pushf
inc
cld
mov
lods
sahf
mov
xchg
xchg
jo
mov
test
dec
mov
dec
dec
lock
xor
inc
stc
xor
in
ja
mov
sbb
dec
mov
adc
out
xor
lret
push
ret
jmp
push
movsl
scas
jmp
adc
sbb
lods
notb
cmp
mov
jno
sbb
das
aas
mov
daa
cmp
mov
popa
enter
xor
mov
inc
out
mov
pop
scas
pop
pushf
outsb
sbb
pop
mov
push
test
insl
sub
inc
jge
xchg
or
inc
dec
mov
lods
ror
icebp
into
aam
into
ret
int3
or
js
sbb
mov
inc
xchg
xchg
xchg
jecxz
das
lods
xchg
or
add
in
lcall
add
add
pop
mov
rorl
std
mov
mov
loope
out
call
pop
push
aam
pop
loope
fsts
pusha
mov
cmp
test
stos
jno
xchg
inc
sub
dec
pop
fmuls
je
push
inc
fisubrl
sbb
inc
sahf
xchg
ja
sub
imul
xor
jmp
mov
stc
jne
cs
popa
adc
inc
mov
xor
dec
cs
mov
xor
cmp
push
xchg
add
adc
fs
data16
add
outsl
jns
in
mov
es
aas
inc
inc
mov
sbb
movsb
dec
jmp
nop
or
mov
stc
fisttpl
out
enter
push
mov
and
jbe
fnstcw
xchg
pop
dec
mov
pop
gs
incb
dec
in
push
jp
pop
pushf
addr16
jno,pn
repnz
xor
xchg
arpl
cmp
push
aam
cmpsl
pusha
ret
push
pop
xchg
add
dec
icebp
js
test
xor
mov
test
loop
mov
pusha
out
jo
xor
repz
stos
jg
pop
jb
push
movsb
or
xor
pop
js
pop
pop
iret
xor
sti
cmp
jno
or
cmpsl
xchg
add
mov
fwait
inc
sub
rolb
aas
sbbb
push
mov
in
jmp
aam
xchg
sbb
cwtl
cwtl
stos
add
and
dec
sub
sbb
push
ret
sbb
jle
divb
or
push
fildll
outsl
xchg
jmp
jp
mov
outsb
enter
cmp
pusha
inc
jne
mov
and
xchg
imul
in
mov
insb
mov
mov
mov
pushf
inc
in
push
loop
push
add
insl
in
dec
jg
in
loop
pop
ja
dec
mov
pop
pop
xchg
or
neg
les
inc
lea
xchg
in
cmp
sbb
mov
jae
cmp
cmp
mov
insl
jl
ljmp
shll
jg
cwtl
add
ja
imul
or
jecxz
ljmp
shld
mov
aad
arpl
mov
mov
sub
mov
sbb
ss
shrl
imul
sub
adc
inc
or
loop
sti
lods
repnz
cmp
mov
test
cld
sub
dec
push
adc
mov
adc
cmpsl
sti
ljmp
lods
jmp
out
addr16
xor
arpl
or
imul
pop
les
jl
es
ss
sub
mov
nop
js
hlt
into
call
enter
mov
mov
cmp
push
lds
sbb
mov
popl
add
sub
or
jae
add
mov
shlb
adc
jo
fcompl
cs
xchg
pop
fcmovb
mov
out
pop
and
dec
fsubrs
loope
jns
test
in
jg
cmc
add
xchg
outsl
adc
mov
lret
out
jg
sub
cwtl
popf
mov
xchg
imul
lock
inc
pop
cmpsl
sub
cmp
mov
xor
mov
jecxz
andb
in
or
decl
push
pop
push
mov
push
sahf
mov
mov
and
fisttpll
pop
push
and
pop
call
stos
jo
es
mov
data16
dec
dec
mull
jns
hlt
rolb
pop
pop
je
addr16
adc
xchg
mov
push
jne
dec
xor
rolb
push
push
rcl
mov
std
sub
ljmp
ds
jns
mov
decl
pop
repnz
stos
add
adc
push
cmc
mov
cltd
es
cmp
dec
mov
mov
mov
sahf
cld
push
pop
push
cmp
out
mov
adc
sbb
dec
xor
enter
movsl
int
push
into
lcall
aas
pop
pop
jno
add
les
sub
out
popf
sbb
rcrb
xor
xor
pop
sub
jb
mov
jmp
ret
xor
clc
shrb
nop
mov
and
xlat
je
cmp
lods
lds
mov
in
test
jmp
pusha
lahf
add
hlt
enter
jo
push
mov
cmp
inc
mov
fisttpl
leave
adc
lock
test
stos
jne
inc
inc
mov
insb
lock
xlat
jl
pop
mov
pop
fdivrl
xchg
pop
ss
mov
dec
or
cmp
in
mov
push
into
and
pop
jecxz
lret
mov
sub
xchg
lods
lret
out
xor
push
dec
mov
mov
shlb
bound
push
push
mov
push
jle
cltd
int
ds
mov
arpl
xorl
xor
mov
adc
mov
stos
adc
leave
loopne
scas
push
jle
sahf
test
test
xchg
movsb
fiadds
push
jmp
sar
mov
movsl
push
push
jae
add
jbe
ljmp
xchg
cld
fisubl
dec
rorb
repz
ret
cmp
enter
inc
loopne
add
in
pop
push
adc
jge
pop
out
cs
jae
rclb
add
adc
addr16
lret
enter
adc
lds
xor
and
xor
xchg
out
mov
jmp
pop
lahf
test
cmp
adc
jmp
mov
add
or
mov
mov
sbb
push
repnz
mov
and
jecxz
or
adc
sbb
dec
mov
pop
and
push
mov
out
in
subb
pop
or
dec
scas
push
xchg
or
jle
lods
sti
add
stos
mov
cmp
dec
or
jns
pusha
inc
sbb
decl
in
rcl
mov
call
add
sti
mov
aas
loope
out
pop
cmp
fs
mov
jbe
dec
sub
stos
sub
adc
pop
sahf
push
pop
scas
js
lahf
inc
mov
shr
data16
orl
adc
push
dec
jmp
mov
push
xorb
xchg
push
sbb
mov
idivb
mov
fs
rcl
dec
sub
xchg
mov
test
ret
xchg
cmc
es
int3
out
xchg
adc
cmpsb
and
ret
pop
jbe
arpl
bound
mov
movsb
jge
adc
sub
in
sbb
ret
jns
andl
xor
loopne
push
fsub
sbb
or
fisubs
xchg
mov
or
addb
mov
jo
pushf
iret
cli
jae
js
pop
in
mov
mul
imul
jo
fwait
lea
lds
outsl
push
dec
mov
mov
es
xor
push
xor
jnp
cmp
cmp
cmc
inc
ljmp
loop
stos
push
enter
rcrl
push
movsl
push
es
mov
jbe
or
xchg
pop
aam
ds
push
dec
aad
or
sub
iret
fwait
shlb
or
bound
mov
xor
push
xor
icebp
lret
enter
mov
xchg
mov
pop
rep
pop
test
cmp
mov
testl
fmull
and
jae
dec
mov
or
adc
or
mov
xchg
pushf
cmp
push
dec
pop
adc
dec
jecxz
or
mov
loope
mov
dec
mov
or
xor
dec
test
fcoms
push
out
nop
mov
stos
mov
je
data16
fistpl
add
call
and
pushf
push
rorb
ret
fwait
add
inc
mov
push
pop
push
int
xor
jg
dec
pop
adc
lahf
loop
jae
jo
mov
or
ja
push
adc
les
adc
addr16
xchg
sub
mov
xchg
add
test
xchg
das
stos
add
mov
sub
test
sbb
jnp
xor
leave
mov
mov
jl
push
add
mov
into
inc
lret
data16
shll
dec
in
push
push
lods
aad
fnsave
sub
cwtl
imul
enter
mov
outsl
aas
mov
or
jp
jns
into
cmp
mov
lods
jo
cwtl
cmp
je
jb
mov
stos
xchg
and
rorl
pop
mov
mov
or
xchg
mov
mov
push
xchg
ss
jmp
mov
rcrb
xchg
aaa
mov
call
movsl
rcll
sbb
jne
dec
loope
rcll
pop
jb
cmpsb
mov
and
dec
pop
pop
aam
lods
mov
inc
pop
enter
in
xchg
jno
jmp
scas
jg
in
test
mov
xchg
test
loopne
mov
add
bound
sbb
out
and
fs
add
pop
or
fld
inc
sti
sub
lcall
stos
mov
jmp
mov
ret
je
mov
outsb
jmp
test
out
dec
into
lea
enter
daa
nop
pop
xchg
repz
xchg
div
jmp
bound
enter
sti
roll
add
mov
fsubp
or
stos
arpl
xchg
fcoml
or
fs
mov
jbe
mov
sahf
push
sbb
ret
mov
or
jnp
mov
jle
sbb
push
pop
sub
scas
std
fcoms
ret
fwait
shll
xor
pop
cmp
sbb
jno
inc
es
cmp
jb
std
push
mov
sbb
mov
test
call
fdiv
pushf
and
test
or
push
test
nop
insl
lahf
jp
and
xchg
jbe
mov
or
mov
mov
int3
loope
cld
jl
rcrb
xlat
lahf
xor
jl
xchg
cmpsb
and
push
jge
add
push
testb
sub
ljmp
inc
push
fisttpll
test
popa
mov
gs
jmp
adc
jae
jno
leave
mov
js
dec
out
shlb
fmuls
xchg
sub
mov
sbb
arpl
or
iret
xchg
data16
hlt
out
addr16
adc
or
xchg
sub
lods
inc
rclb
leave
fmull
add
mov
cli
stos
notb
and
sbb
and
dec
pop
mov
mov
mov
arpl
dec
inc
mov
xchg
xor
push
int3
add
hlt
es
xchg
inc
icebp
pop
xchg
push
jle
daa
xchg
fadds
test
inc
out
negl
xor
dec
lds
mov
sbb
cmp
ret
inc
mulb
push
push
sbb
mov
call
cmc
pop
jmp
rorl
pop
stos
je
mov
jp
jb
out
stc
call
jbe
fwait
add
cmc
aam
push
jo
mov
pop
and
pop
lret
ret
push
fldl
daa
dec
fsubs
inc
pop
jne
mov
lea
ja
bound
push
insl
nop
push
es
cs
adc
mov
insb
and
jp
xchg
jo
addr16
pop
jmp
xlat
cld
into
lods
aam
shll
int
mov
in
and
cs
je
cmc
pop
mov
sub
call
and
inc
sbbl
fsubp
repz
rorb
ss
js
mov
out
mov
repnz
shrl
pop
push
add
push
divb
jne
pop
imul
sbb
jae
cmp
dec
mov
lahf
insb
and
ret
lods
cmpsb
data16
popl
sub
mov
out
mov
push
ss
lock
dec
and
dec
mov
dec
sbb
or
cli
scas
aas
or
rorl
sub
inc
add
jno
inc
int3
testb
xor
inc
bnd
and
xchg
xchg
jge
repnz
cmp
push
icebp
test
pop
cmpsl
fildl
xadd
call
xchg
jae
dec
sbb
pop
inc
adc
pop
ljmp
cmp
push
clc
push
out
cwtl
jecxz
sbb
xchg
mov
pop
js
aad
les
enter
xor
cmc
repz
loope
pop
ds
call
push
mov
les
xchg
and
les
into
xchg
addl
aam
or
jns
movsl
rcll
xor
fstps
gs
mov
cli
inc
pop
aam
jo
imul
test
mov
js
das
notl
clc
push
inc
jbe
nop
and
roll
push
negl
jmp
icebp
dec
mov
and
insl
inc
lret
push
lods
jne
arpl
std
repnz
test
xchg
dec
push
in
add
sbb
loop
cmpsb
adc
inc
mov
xor
sub
clc
pop
push
push
or
out
popf
mov
mov
mov
sub
sub
gs
enter
orb
orb
shrd
jp
sub
lock
cmp
aam
gs
pop
imul
or
pop
sub
hlt
out
adc
aam
pop
aad
cwtl
outsl
sti
les
in
cmp
in
loop
lods
out
iret
pushf
cmp
mov
dec
fwait
jnp
stos
lahf
inc
push
mov
in
sbb
xchg
sub
push
loopne
je
movl
mov
fisubrl
test
pop
and
mov
aad
xor
aaa
fstpl
hlt
pop
push
nopw
ja
mov
icebp
iret
mov
pop
es
dec
out
and
sub
jo
insl
push
movsb
lar
mov
xchg
adc
add
clc
hlt
sub
sbb
xor
gs
jo
sbb
test
jecxz
add
xor
mov
jle
xchg
cmpb
mov
aas
repz
lcall
scas
lea
sarl
mov
sbb
cs
mov
dec
add
data16
rolb
cmp
rorl
jno
pushf
push
inc
pop
or
dec
fwait
cmp
add
push
test
call
push
jno
mov
mov
pop
daa
adc
pop
xor
les
and
jmp
sub
sub
rclb
movsl
mov
loop
pop
pusha
cs
js
xchg
jno
push
iret
adc
adc
inc
push
sar
sub
sub
xor
inc
das
andnps
mov
pop
pop
ljmp
push
sub
leave
lahf
xor
filds
das
lock
mov
jmp
push
sub
sub
into
mov
xchg
cmpsw
std
pop
and
cltd
test
xor
or
mov
mov
adc
inc
push
jb
pop
or
test
lret
idiv
icebp
and
mov
mov
sub
adc
sarb
xchg
aas
xchg
sub
aad
dec
lcall
or
add
rcll
mov
inc
mov
pushf
mov
push
or
xlat
and
jmp
push
dec
push
dec
add
push
pop
decl
sarl
jo
fistpll
int
iret
sbb
je
je
int
rcrb
and
roll
add
call
lret
loopne
push
leave
ljmp
pop
or
jp
clc
and
jnp
dec
xchg
aad
jmp
in
pop
pop
outsb
jno
fnsave
add
adc
cmp
push
loop
dec
es
loope
xorb
pop
pop
sahf
adc
xor
mov
scas
push
push
popa
lahf
rcr
sahf
js
lret
lds
je
pop
inc
stos
adc
bound
mov
clc
lcall
pop
iret
icebp
jbe
loope
jbe
jae
xchg
je
inc
lea
sbb
dec
outsl
and
es
xlat
ja
xor
or
les
adc
cmpsl
jns
push
sbb
cmpsb
adc
or
dec
mov
leave
pop
and
fnstcw
lea
fcmovbe
dec
and
mov
push
test
or
inc
jb
xchg
lret
mov
leave
inc
adc
fisubl
xor
fs
std
cmpl
sub
or
scas
push
aas
dec
and
cmc
push
and
jbe
adc
cltd
neg
mov
ficoms
mov
inc
mov
stc
scas
xchg
loopne
jg
shll
pop
bound
out
mov
add
mov
add
test
adc
cmpsl
sub
inc
and
or
push
test
icebp
or
lds
ss
outsl
aad
cmpsl
dec
xor
push
mov
dec
bound
inc
fcmovne
movsb
jge
insb
scas
mov
repz
gs
mov
add
xor
sub
es
movq
daa
add
mov
rcrl
dec
sub
fisubl
or
add
adc
jns
lds
and
out
imul
daa
dec
call
fcmovu
aaa
dec
push
jmp
stos
xchg
adc
cmp
mov
mov
push
rcll
push
je
rclb
test
or
imul
outsb
ljmp
inc
flds
aas
cli
xlat
mov
xchg
adc
stc
je
lods
push
js
into
fwait
mov
dec
je
and
push
stos
jp
sub
inc
mov
sbb
movsb
ds
push
sbb
adc
push
cs
adc
aad
int3
pop
shlb
jmp
test
adc
lea
es
and
jb
sbb
jae
or
lret
dec
xchg
int3
add
add
dec
mov
dec
les
jl
fcomip
xchg
adc
dec
or
arpl
cmpsl
ret
mov
sar
lods
popa
jae
xlat
mov
mov
cli
mov
icebp
add
lds
xor
insl
out
jge
mov
jg
not
pop
jp
add
xchg
loop
loope
add
loop
les
scas
int
lods
cmp
jbe
jmp
fmull
sbb
xor
mov
das
iret
aad
popa
lahf
inc
sub
ret
into
cmp
mov
jle
mov
fwait
scas
mov
fdivrs
add
pop
enter
xor
xor
js
sub
inc
mov
xchg
ds
sbb
fs
je
and
daa
mov
out
ljmp
rclb
push
lcall
int
jmp
pop
into
jp
nop
pop
mov
xor
xlat
xchg
xchg
cmc
shrb
push
sbbl
sub
add
push
mov
xchg
scas
sub
jmp
jmp
outsb
cltd
xor
inc
and
shlb
ficomps
push
mov
in
mov
sub
paddsb
jb
inc
jne,pn
sub
loope
xor
push
push
test
jge
fimull
lock
jno
push
call
adc
mov
movsbl
ljmp
adc
test
test
mov
adc
and
adc
in
or
mov
and
jmp
mov
lock
push
test
jle
mov
test
stc
icebp
and
mov
push
xor
into
lret
movd
push
sbb
dec
inc
loopne
sbb
jge
arpl
sbb
adc
in
ficoml
jno
push
add
mov
fsubrs
sub
adc
pop
lret
dec
cwtl
imul
jno
xchg
mov
mov
jl
and
pushf
adc
add
sbb
in
cmp
in
cld
or
jnp
push
xor
enter
movb
lcall
ja
nop
pop
mov
mov
icebp
les
lods
sub
mov
xor
ret
in
dec
add
jg
aam
push
loopne
jbe
xor
or
insl
ljmp
mov
inc
sbb
movsl
xor
adc
bound
jp
stos
xor
les
das
cmpsb
out
cmp
xchg
add
push
or
cmc
push
std
push
mov
popa
cmp
mov
int3
js
jae
daa
out
jo
fimull
addr16
aaa
sbb
mov
aaa
cmp
je
in
je
jmp
xlat
cmp
add
and
sub
or
sub
dec
push
fcompl
rcrl
or
test
push
dec
mov
sbb
lcall
xor
cmpsb
cmp
xor
adc
movb
add
dec
aaa
sbb
add
mov
cmc
loopne
fsubr
sahf
retw
xchg
pop
testl
ds
mov
addr16
or
loopne
filds
xchg
pop
and
xor
dec
das
inc
std
repz
loopne
push
test
imul
lock
scas
and
out
loope
jbe
insl
lds
orl
or
stos
mov
loopne
push
jp
and
xor
mov
adc
mov
fsubrs
popf
sbb
scas
jno
jno
and
aad
sti
pushf
adc
mov
insl
das
push
push
sbb
push
mov
cmp
push
cmpsb
out
sub
subb
mov
or
or
mov
and
adc
stc
es
mov
mov
stos
sub
adc
and
and
fisubrs
ret
lret
xor
mov
dec
mov
aaa
repnz
dec
test
scas
mov
js
sub
sarl
cmp
mov
fstps
pop
jle
movsl
dec
cmp
pop
cltd
xor
sbb
mov
mov
xor
stos
dec
cmp
push
arpl
mov
sub
sbb
aad
push
adcl
inc
orl
add
lahf
in
inc
std
dec
test
imul
loope
and
ss
mov
dec
inc
pop
mov
insl
xchg
inc
or
int
inc
inc
addl
leave
mov
lret
out
mov
sub
scas
test
bound
xchg
lret
xorl
push
pop
jecxz
pushf
into
xchg
or
movsb
jge
mov
adc
scas
fcomps
adc
fbld
lock
lahf
mov
adc
hlt
hlt
mov
jo
out
rorb
mul
or
pop
leave
pop
xor
xor
push
insl
inc
sbb
sbb
je
jne
fdivp
es
js
and
cli
adc
push
sbb
test
mov
in
xchg
sti
mov
rcl
jl
sarl
xlat
xor
je
clc
jnp
inc
jle
cmpsl
xlat
cmp
rol
sub
push
jns
push
lret
push
lock
xchg
mov
xchg
lods
lods
in
imul
or
jne
jae
push
jno
xor
or
fnstsw
in
jne
jbe
inc
dec
mov
data16
call
sub
orb
call
sub
and
lret
in
js
les
test
mov
dec
or
jo
aad
cmp
mov
xchg
test
xlat
je
cmp
loope
std
fs
cmpsb
icebp
add
push
hlt
lret
out
jbe
gs
shl
cmp
inc
push
faddl
filds
jle
aaa
push
sub
imul
push
sbb
bound
inc
icebp
adc
jae
fidivrs
rorl
or
cs
mov
mov
adc
inc
mov
ss
outsb
fs
fsts
jecxz
adc
add
lea
jae
push
test
insl
lds
es
popf
aas
bswap
jb
adc
and
and
out
je
iret
mov
gs
out
jo
add
mov
cmp
rcrl
int
dec
je
dec
out
pop
das
add
gs
repz
xchg
test
fcoml
sub
and
and
jbe
mov
xorl
add
cld
pop
and
lock
loop
fwait
lock
lods
ficoms
or
leave
add
cs
fs
jne
cmp
cmpsb
adc
adc
xor
dec
leave
lahf
rolb
dec
pop
movsl
inc
fbstp
jecxz
push
fmull
lods
sbb
mov
inc
add
mov
cmpsl
sub
outsl
scas
es
sbb
out
lock
jmp
sarb
mov
pop
aas
into
movsl
cmc
pop
fisttpl
fidivs
mov
xor
jmp
dec
jecxz
jge
fidivl
aas
mov
sbb
testl
cmpsb
out
jecxz
fisubrl
test
andl
in
lahf
test
or
int3
push
sub
mov
mov
mov
neg
in
adc
cwtl
sti
sahf
test
cmp
sahf
inc
sub
adc
pop
rolb
fstps
sbb
fs
stc
shll
mov
jmp
lods
cmp
je
cmc
xlat
push
and
push
sbb
leave
inc
dec
pop
repnz
add
cmpsb
cmp
inc
or
cmp
ja
imul
fldenv
mov
xlat
and
repz
ljmp
icebp
sub
dec
jg
xchg
hlt
lret
jb
jge
ret
pop
out
sub
dec
out
pop
fstl
jns
in
or
outsb
in
fidivrs
out
cld
hlt
pushf
addr16
jle
jbe
pop
xor
jbe
pushf
sub
mov
push
in
out
pop
and
shl
scas
and
push
jne
dec
arpl
xchg
test
popf
repnz
dec
add
jne
mov
out
lds
mov
push
or
mov
or
stos
cmp
loopne
cmp
sar
popf
shrl
inc
test
sbb
cmpsb
pop
data16
fwait
jg
enter
int3
jge
or
rclb
push
mov
jle
fisttpll
pop
xor
xor
test
add
jl
lods
mov
aad
mov
pushf
stos
inc
daa
in
inc
push
fwait
or
aas
outsl
mov
adc
dec
inc
pop
nop
cmpsl
ret
dec
aaa
pop
gs
das
dec
shlb
push
out
inc
jmp
add
mov
lret
imul
shrl
or
sub
mov
sbbb
in
ljmp
shll
and
mov
push
fldenv
adc
fidivl
xchg
stos
adc
int
imul
mov
mov
pop
xchg
shl
rorl
fdivrs
pop
pop
or
insl
sub
xchg
or
fwait
in
adc
inc
xchg
imul
dec
pop
push
into
rcll
outsl
aas
daa
jmp
jg
mov
testl
dec
cmc
mov
pop
negb
jp
imul
nop
das
push
movsb
movsb
jle
jne
jp
jg
int
flds
stos
pop
mov
aaa
pop
fcmovu
jmp
das
dec
xlat
in
sub
daa
cmp
push
adc
push
scas
imul
mov
loope
out
aam
push
nop
sahf
pop
or
ret
sub
jecxz
mov
jmp
cmpsb
popf
ja
cmp
push
arpl
xor
aaa
mov
scas
sub
test
push
aad
int3
inc
push
arpl
adc
push
aaa
inc
mov
cmp
insb
pushf
push
jle
leave
loope
mov
hlt
mov
insb
jmp
mov
pusha
in
aad
lds
and
nop
mov
lods
dec
test
call
arpl
ret
cld
or
int
mov
or
lock
out
int
fwait
rcll
or
popf
rclb
in
or
imul
or
cmpsl
push
and
xchg
cmp
push
dec
stc
dec
push
mov
inc
dec
jge
lds
add
test
adc
aam
dec
mov
je
repz
lret
pop
loope
iret
test
adc
push
xchg
or
out
ret
loop
movsb
mov
push
xchg
leave
repz
push
leave
popa
or
jbe
mov
dec
and
jg
push
and
add
jns
mov
and
loop
aaa
cmp
add
xor
cmpsb
push
stc
leave
addr16
add
cmpsl
loop
ret
xor
mov
movsl
cmp
mov
or
adc
cmpsb
in
leave
insl
fldl
movl
mov
mov
subl
mov
cmc
popa
dec
mov
out
test
rol
add
push
and
cmp
push
test
leave
das
push
shll
sti
je
hlt
pusha
sub
scas
jns
inc
repz
and
scas
repz
pop
sbb
cwtl
ret
inc
cltd
adc
clc
movsl
xor
inc
dec
lahf
and
lahf
insl
icebp
and
push
dec
and
dec
fisubl
cmp
ds
xlat
scas
adc
jle
icebp
adcl
and
lret
mov
jno
psubsw
into
mov
xchg
pop
pop
test
xchg
mov
hlt
scas
or
std
jecxz
add
push
jb
xchg
push
mov
push
divb
mov
subb
sarl
and
js
inc
and
jmp
push
cmpsb
shrb
jno,pt
lahf
and
jge
nop
imul
xlat
mov
dec
xlat
jno
mov
xchg
negl
cltd
lea
sbb
and
lds
jae
push
das
hlt
adcl
add
xchg
lea
call
out
icebp
repnz
cwtl
out
daa
ret
xchg
testb
and
jae
sub
movsb
dec
jmp
pop
sbb
fdivrs
sub
push
dec
mov
mov
mov
pop
test
dec
scas
fwait
cmp
call
cmc
xchg
sub
daa
sarb
fdivrl
jns
movsb
jbe
inc
fistpl
movsl
adc
es
cmp
and
jae
mov
inc
scas
imul
sub
enter
call
xor
and
lahf
mov
shr
cmpsb
mov
cmp
and
inc
pop
xchg
repz
push
push
jmp
repnz
add
push
and
dec
jne
jmp
adc
aaa
dec
call
movsb
push
out
inc
mov
mov
sub
aaa
in
adcb
mov
pop
xlat
ret
xchg
pop
pop
cmp
movsl
pusha
or
add
test
shrb
push
jecxz
add
jnp
push
sarb
push
enter
xor
xchg
in
jge
das
mov
xor
push
int
xchg
aam
fs
dec
cltd
ret
or
push
jl
sbb
sub
addr16
repz
or
adc
lock
sbbl
or
push
jecxz,pt
pusha
sub
jb
inc
xchg
mov
fwait
sbb
push
dec
adc
sub
sbb
fiadds
jne
pop
fdivrl
rclb
or
or
mov
pushl
jnp
andl
mov
insl
pusha
cmp
loop
andb
fsubl
lods
lds
sub
outsl
movsb
push
sbb
dec
lock
lahf
xor
out
and
sbb
scas
or
lods
cmpsl
test
shlb
jae
aad
clc
and
dec
shlb
loop
and
mov
in
leave
pop
rcrb
out
mov
loopne
icebp
pushf
int
jb
cmp
sbb
mov
imul
push
sub
in
mov
fwait
jg
pop
add
lcall
mov
inc
lods
pop
stos
mov
sti
stc
pop
pop
shlb
xorb
shll
ljmp
dec
adc
int3
sub
or
and
fiadds
pop
pop
in
pop
lods
pop
scas
call
jg
mov
xor
push
jns
movsb
movsl
cs
leave
cmp
adc
addr16
out
jmp
add
aam
sub
int3
and
movsb
nop
mov
cld
and
hlt
in
mov
jmp
mov
or
pop
lret
insl
loopne
push
jmp
cs
mov
lcall
lds
ss
mov
or
fistl
jns
lock
inc
mov
add
lods
inc
xchg
push
shll
cmp
pop
aaa
test
lods
mov
add
out
xor
cwtl
push
push
adc
cmp
mov
inc
mov
pop
fs
jns
or
testb
enter
push
mov
pop
jecxz
mov
cmp
stos
mov
jno
arpl
jecxz
icebp
cld
sub
jns
xlat
inc
popf
loope
and
mov
std
in
mov
negb
add
sbb
test
sub
push
and
shr
or
aaa
push
stc
leave
loope
cmpl
adc
int3
data16
cmpsb
cmpsb
push
sub
xor
ret
inc
inc
sahf
and
outsl
outsl
test
mov
mov
enter
inc
test
test
stos
inc
xchg
xchg
sbb
hlt
jmp
sub
mov
add
xchg
lahf
iret
xor
add
ret
xchg
dec
cltd
fcoms
cs
jnp
test
addl
xchg
inc
jne
imul
adc
inc
cmp
xchg
test
pusha
aam
rcrb
xchg
test
incl
sub
test
or
push
sbb
mov
push
jnp
lods
out
mov
lret
fcmove
sbb
or
dec
pushf
jmp
fadds
ss
aam
xchg
add
je
sub
cli
fdivrl
shr
jmp
add
push
insb
inc
shl
mov
hlt
or
iret
andl
lcall
mov
cmpsl
test
lcall
add
lods
fdivr
jmp
mov
mov
pop
dec
jle
pop
mov
mov
cmp
xchg
iret
xor
mov
ficoml
lock
xor
jge
mov
aam
sbb
inc
xor
pop
loopne
cwtl
dec
les
stc
daa
leave
test
and
mov
es
repnz
pop
push
cs
sub
data16
inc
js
mov
mov
pop
in
test
adc
arpl
mov
sub
or
clc
outsb
mov
cmp
pushf
xlat
add
or
mov
sub
rol
jnp
mov
pop
loopne
mov
xchg
sbb
icebp
mov
ret
xchg
cmc
xor
and
pop
pop
adc
bnd
cmpsl
add
repnz
ja
les
lods
daa
xchg
outsl
imul
and
lock
pushl
and
pusha
jle
or
mov
or
inc
sub
pop
add
jae
mov
pushl
mov
cwtl
aad
sub
call
mov
loope
gs
out
push
jbe
sub
pushf
stos
call
mov
inc
dec
or
ljmp
imul
ficomps
add
pop
sahf
sti
push
lods
les
mov
sub
jae
cli
arpl
in
lret
aas
gs
movb
imulb
mov
shlb
cmp
cmpsb
add
mov
leave
jbe
push
xchg
mov
xor
pushf
mov
mov
jb
fsubr
cmpsl
cmp
dec
push
jo
int
lret
xor
pop
cmpsb
mov
mov
or
jge
push
test
xchg
lret
jmp
icebp
sub
inc
enter
shll
shll
jle
lock
lret
ficoms
movsl
outsl
mov
cmpl
push
dec
cwtl
jns
cmp
jge
sub
xor
inc
sub
fwait
mov
sbb
shr
mov
fstpl
inc
mov
fimull
sub
xchg
push
xor
jns
lods
sub
cmpl
push
cmp
mov
nop
gs
mov
fldln2
lret
and
stos
icebp
outsb
push
repz
lods
inc
gs
sub
jne
lods
jge
ds
lock
fists
out
mov
mov
loopne
ja
mov
or
pop
out
aas
sub
sti
iret
repnz
out
lods
lds
fs
inc
in
push
jno
cmp
push
lret
push
or
adc
outsb
cli
fcmovbe
cmp
jmp
mov
push
movl
and
pop
adc
xor
stos
mov
lds
adc
xchg
fcompl
fwait
movsb
lcall
push
outsl
dec
scas
push
or
imul
jge
leave
xchg
lds
sbb
xchg
mov
adc
out
pop
bound
pop
sub
adc
xchg
gs
mov
imul
push
repnz
lret
mov
in
mov
test
out
sub
cli
push
mov
sarb
fnstsw
mov
mov
inc
xlat
cmp
pop
test
cmp
adc
xor
sub
jle
xor
inc
test
fcmovbe
popa
daa
xor
stc
rolb
and
lret
dec
and
xchg
push
jmp
movsb
test
sbb
xchg
push
insb
push
hlt
mov
test
push
addr16
in
fmull
xchg
vpmaxsw
pop
cld
inc
sbb
sbb
sbb
sbb
popf
add
inc
sbb
andb
push
aaa
cmp
push
js
ret
scas
fnstenv
cmpsl
leave
fisubrs
and
jae
ljmp
inc
sbb
xchg
add
movsl
dec
push
out
rorl
or
repz
cmpl
negl
lock
add
sbb
out
rol
mov
jns
jno
and
xlat
lds
in
rclb
std
add
cmp
outsb
push
popa
mov
mov
out
add
xor
push
andb
scas
mov
pop
popa
out
shl
mov
mov
sub
jmp
jns
push
pop
dec
xchg
cmp
bound
lahf
ficoms
jmp
cmp
mov
dec
int
or
mov
je
add
xlat
cli
cmpsl
lods
clc
rolb
mov
cmpsl
stc
pop
mov
cld
pusha
repnz
sbb
push
movsb
insb
mov
je
ds
jecxz
das
dec
cli
xchg
push
add
sbbl
jmp
fsubrl
jmp
loop
les
aam
pop
pop
aam
ljmp
sub
jnp
mov
add
icebp
jmp
mov
punpckhbw
mov
inc
sbb
sbb
mov
fldenv
lahf
push
bound
xchg
lock
sti
shll
xchg
sub
stc
and
into
jmp
pop
push
sbb
mov
test
arpl
xchg
xlat
sub
sub
insl
imul
imul
xchg
cli
xchg
and
push
pusha
mov
xchg
imul
push
push
dec
dec
ret
in
xor
clc
ds
shll
push
aad
pop
dec
xchg
jp
sbb
icebp
add
pmulhw
imul
inc
fwait
push
in
cmp
sub
xchg
hlt
push
add
sbb
adc
jno
in
pop
sahf
mov
pop
gs
loopne
idivl
daa
jb
movb
ja
shrl
aaa
cmpsb
pop
ljmp
pop
add
out
pop
jae
int
mov
imul
mov
mov
sub
and
pushf
out
in
mov
adc
dec
add
hlt
sub
adc
cmp
in
and
cltd
ds
scas
mov
dec
mov
cs
cmp
cld
lret
xlat
add
movsb
mov
mov
call
jno
and
insl
or
mov
jecxz
dec
dec
jb
jmp
shl
loopne
jl
inc
imulb
sti
cmpb
out
pop
jg
xor
dec
and
inc
jg
outsl
pop
xchg
imul
dec
in
add
xchg
xchg
inc
and
das
pop
mov
mov
aas
dec
stc
jmp
pop
pop
and
mov
sbb
add
arpl
add
inc
mov
and
inc
push
mov
adc
xchg
scas
adc
sub
push
mov
data16
sbb
mov
clc
pop
and
add
fildl
cs
pusha
xchg
loope
jnp
iret
repz
sbb
mov
icebp
xor
cmpsl
push
mov
ljmp
add
decl
shrl
and
outsb
cli
xchg
decl
movsb
and
ds
enter
or
fwait
gs
test
and
mov
inc
ret
icebp
push
repz
cwtl
fisubrl
scas
rcrb
outsl
out
xchg
pusha
lahf
popf
mov
leave
cli
lds
mov
aad
dec
mov
imul
pop
xor
sbb
faddp
hlt
stos
pushf
inc
pop
push
xor
clc
mov
sti
pushf
out
mov
pusha
fiaddl
mov
push
pop
jmp
imul
mov
inc
pop
aas
cmp
sti
pusha
jne
or
sbb
js
push
mov
inc
and
inc
xor
sarl
sub
insb
jp
test
jp
adc
push
mov
call
xlat
dec
pushf
mov
insb
fdivrl
out
lahf
in
mov
mov
aaa
jg
and
cld
pop
cltd
rorb
cld
cwtl
adc
mov
daa
sbb
sbb
jmp
mov
or
lea
xor
scas
loop
cli
inc
decl
mov
lahf
push
add
stos
dec
rcll
sbb
es
jno
xchg
jp
push
mov
js
mov
popa
leave
and
daa
mov
icebp
stc
mov
and
sbb
adc
mov
icebp
popf
xchg
adc
movsl
imul
lea
lods
out
lcall
jo
jae
jge
mov
mov
mov
push
mov
outsl
xor
lods
scas
fdiv
sar
lds
pop
fcos
pop
sti
push
cmp
addr16
dec
imul
orb
push
inc
js
mov
and
fadds
dec
repz
push
bound
xor
fidivl
imul
jbe
sbb
push
push
and
pop
rclb
jbe
mov
js
orb
xchg
pop
dec
ret
add
outsl
push
adc
push
or
insb
cmpsl
cwtl
int3
fs
xchg
sbb
adc
jg
cli
inc
or
idivb
mov
and
jbe
rcll
in
dec
adc
cmp
dec
shll
and
pushf
pop
inc
adc
enter
call
aaa
lods
iret
push
xor
mov
ss
cmpsb
adc
cmpsl
out
aaa
jb
and
push
pop
mov
fildl
imul
and
sbb
cmpsl
inc
mov
in
leave
pop
out
jg
movsb
test
aas
push
faddl
nop
xchg
push
and
pop
movsb
aad
daa
movsl
xchg
mov
push
cmp
sbb
std
pop
pusha
push
xor
data16
add
mov
jmp
mov
jg
mov
sub
scas
addl
inc
pop
sbb
jecxz
jo
das
std
xchg
dec
add
pop
pop
sub
mov
movsb
mov
fcom
test
inc
pop
mov
mov
inc
loop
faddp
pop
pushf
sbb
rcrl
fbstp
dec
cltd
lretw
push
mov
mov
shrl
inc
imul
jecxz
mov
pop
pop
insb
xchg
jmp
mov
pop
push
daa
aam
out
dec
lret
fnstcw
dec
movsl
mov
pop
push
cmp
mov
xor
in
pop
cwtl
add
lods
inc
ss
mov
popf
scas
adcb
mov
adc
test
pop
xor
lods
andb
mov
int
scas
movsl
aam
imul
mov
dec
mov
in
xchg
mov
push
inc
dec
out
and
sub
lods
cli
mov
and
jo
cwtl
add
sbb
and
jmp
mov
mov
mov
jns
leave
jecxz
scas
pop
mov
jbe
lock
popa
adc
or
and
scas
in
pushf
ja
mov
cmc
push
out
push
jbe
xor
js
ds
jle
and
adc
xchg
dec
xlat
pop
stc
dec
add
inc
xchg
add
repnz
test
mov
push
rorb
divl
mov
sub
mov
sub
pop
decl
cmp
clc
mov
shlb
adc
jge
jo
pop
add
js
sti
int3
or
mov
adc
dec
pop
clc
pop
or
adc
ret
pop
test
popa
push
cmpl
iret
sub
aam
xor
fsubl
push
jbe
mov
mov
fisttpl
or
adc
dec
enter
ljmp
or
mov
mov
sub
xchg
popf
adc
xor
mov
insl
or
loop
lret
or
mov
cmp
in
enter
out
jnp
dec
roll
lods
out
sbb
sub
inc
pop
movsb
push
mov
jg
jecxz
insl
push
loop
ss
in
pop
sahf
xchg
xchg
dec
mov
add
or
outsb
mov
arpl
cmpsl
das
mov
popf
imul
xor
int3
cmp
aad
jne
bound
push
fwait
dec
or
pusha
or
mov
add
pop
mov
aad
pop
jns
add
mov
dec
cld
cmp
and
test
orb
je
stos
fisttpl
cltd
fs
nop
xlat
sbb
inc
repz
xchg
rclb
in
mov
popa
decb
sub
jge
cmp
scas
nop
xchg
enter
mov
insb
mov
dec
loopne
and
pop
imull
rolb
ss
ret
cmp
xor
outsb
jnp
mov
add
fisubrs
and
andb
mov
mov
ret
into
negl
shr
test
sbb
add
fimuls
jmp
mov
iret
nop
dec
jae
inc
fnstsw
aaa
dec
cmpsb
mov
nop
je
push
xchg
gs
xlat
and
ficomps
mov
mov
stc
cwtl
jecxz
pop
push
mov
fstps
pop
fnclex
movsb
stos
mov
dec
scas
jb
lret
ret
jne
or
inc
and
out
add
nop
rcrb
imul
mov
int
mov
lock
addr16
aaa
sub
pop
pop
out
sbb
insl
fstps
pop
sub
mov
ret
es
je
iret
repnz
mov
mov
dec
or
or
lods
cmpsl
mov
scas
popa
test
cwtl
mov
call
addl
inc
dec
pop
dec
adc
outsb
hlt
pushl
rorl
ret
xor
dec
hlt
popf
lret
adc
xor
mov
std
xlat
popa
mov
jge
jb
xor
dec
stos
ds
xchg
shll
repz
xchg
bound
aaa
int3
push
xlat
xchg
pop
mov
int3
shrb
mov
dec
mov
add
fcomps
sub
mov
add
lds
adc
and
xor
jo
je
leave
iret
js
jp
cmpsb
insl
mov
andl
lods
and
inc
lds
sbb
repz
fcmovnb
dec
and
popf
or
add
jbe
push
stos
adc
add
mov
cmpl
inc
loope
iret
insb
stc
lock
mov
fdivrs
jo
adc
std
pusha
iret
scas
mov
mov
dec
xchg
mov
inc
ret
lock
xlat
int
pop
out
inc
mov
cmc
inc
ficoml
xchg
lahf
incl
insl
or
mov
push
jle
add
dec
out
dec
mov
pop
and
lds
lods
loopne
push
pop
js
fcoml
pop
xchg
cmp
fidivs
push
xchg
lcall
ret
movsb
int
fcmovb
imul
aas
jne
mov
xchg
jno
jp
pop
xor
cli
lods
sbb
movsb
enter
out
fldl
dec
cmc
outsb
sbb
addr16
cli
jl
or
mov
pop
outsl
cmp
or
insb
pop
xor
and
sbb
scas
adc
loop
rclb
in
dec
dec
dec
data16
int
sub
scas
pop
mov
je
pop
sub
mov
adc
fadd
adc
test
fwait
out
call
insl
ret
and
movsb
sub
jne
andl
sahf
mov
in
push
mov
push
dec
xorb
cmp
lea
xchg
add
hlt
das
jle
jecxz
out
sbb
pushl
mov
std
ret
frstor
and
gs
sbb
mov
loope
mov
push
data16
pushf
adc
push
inc
inc
fisubs
jge
fs
loopne
dec
sbb
fsubrs
cmp
pop
stc
outsb
je
int3
insb
sbb
inc
lea
add
xchg
les
dec
sub
js
sbb
adc
in
jbe
outsl
hlt
repz
ljmp
add
jl
xor
push
dec
cmp
inc
nop
stos
scas
dec
inc
movsl
pop
xor
or
or
pmulhuw
popf
shl
or
mov
dec
jp
pop
xor
fistl
inc
add
cmpsb
stos
mov
xchg
pop
mov
mov
arpl
pop
mov
xchg
and
lcall
adc
mov
in
mov
jo
xor
lcall
aad
popa
push
fnstenv
mov
rcrb
inc
jmp
adc
roll
das
ja
addr16
mov
sysenter
jbe
aaa
push
xchg
mov
sub
lds
pop
add
inc
rorl
inc
int
fisubl
divb
sbb
ficompl
fcmovnu
and
sub
pop
adc
in
mov
sahf
es
dec
mov
stc
shlb
pop
shrl
push
add
inc
mov
out
xchg
or
stos
or
mov
cmp
les
insb
or
cwtl
in
jecxz
hlt
movsl
jle
pushf
xor
xlat
out
xor
xor
repz
xchg
mov
popa
icebp
aam
pop
xchg
shll
mov
jp
ret
iret
adc
fdivrl
out
mov
sbb
pop
pop
fsubs
std
push
fucomi
mov
and
fs
and
mov
pop
jl
inc
fistpll
sti
xor
fdivrs
dec
fimull
cmpsl
rcr
add
scas
jo
aaa
je
mov
and
pop
sahf
test
daa
jo
jg
loopne
adc
and
popf
stos
loop
repz
inc
imul
xchg
and
ror
cmc
outsl
xor
and
sbb
ss
push
xchg
and
lret
mov
out
cmp
fcomi
dec
test
test
dec
xchg
rcrl
pusha
insl
stos
xchg
xorl
ret
andb
jb
dec
cs
cmpsb
sbb
mov
rorl
inc
or
dec
cld
adc
test
aad
ss
rcl
je
or
and
and
sbb
mov
jnp
lahf
sub
nop
xchg
push
dec
ds
dec
sub
add
out
iret
outsl
jnp
mov
adc
mov
jmp
lods
sub
in
push
lods
inc
mov
das
mov
fs
cld
leave
rclb
stc
outsb
sbb
ret
push
mov
dec
xchg
jne
xchg
fidivl
leave
pop
adc
cwtl
iret
mov
or
insl
push
xchg
movb
pop
adc
fs
pop
aas
and
and
sahf
cmp
cmpsl
push
cld
pop
jl
cmc
inc
and
jns
add
pop
xchg
outsb
lods
push
test
dec
or
xchg
or
das
jo
inc
sub
or
shll
cltd
imul
pusha
xor
int
cmpsl
xor
daa
push
jnp
out
iret
add
outsl
popf
sbb
xchg
xchg
mov
pop
test
das
cmp
out
push
pop
mov
jle
mov
adc
imul
mov
popf
pop
cwtl
fyl2x
sub
dec
xchg
js
lret
sbb
test
push
pop
pop
call
cli
inc
sub
in
adc
into
sub
inc
fwait
push
inc
loope
test
jne
cwtl
pop
add
bound
gs
int3
lds
fbld
dec
test
add
cmp
cmp
sub
outsl
jbe
das
sbb
and
ljmp
shlb
inc
dec
dec
or
dec
es
mov
int3
sbb
in
push
or
int3
icebp
sub
fbstp
push
das
test
and
xor
outsl
cmp
push
mov
sahf
jecxz
inc
mov
inc
mov
xchg
pop
fcomps
repnz
sarb
orb
pop
sub
add
pop
mov
ror
pop
sub
ljmp
mov
leave
xchg
push
ljmp
mov
push
dec
outsl
mov
dec
adc
bnd
popf
sub
andl
inc
ja
push
mov
xor
in
iret
jno
je
loopne
pushf
adc
out
xlat
cwtl
sti
adc
push
int3
lret
fiaddl
clc
js
xor
lret
repnz
and
dec
sub
inc
lds
shlb
scas
sbb
hlt
lods
and
in
leave
pop
dec
dec
cld
sub
jae
lret
hlt
xor
loopne
das
pop
mov
jns
mov
mov
cwtl
xchg
mov
insl
sub
sbb
xchg
or
dec
std
repnz
jl
xchg
div
or
xchg
mov
inc
xchg
add
outsl
xchg
adc
cmpb
dec
outsl
out
cmp
jo
pop
inc
pop
dec
jnp
mov
sarb
mov
xchg
inc
cltd
sbb
mov
loopne
pop
mov
clc
xor
enter
lea
fsubs
adc
xor
and
pop
out
mov
shlb
clc
pop
daa
pop
lret
jecxz
xchg
xor
cmp
movsl
cltd
fdivrl
jecxz
dec
and
out
aaa
jecxz
cmpsb
adc
jo
es
xchg
popf
fwait
je
or
adc
mov
cmp
rcrl
pusha
repz
pop
mov
pusha
or
adc
call
push
mov
push
cmp
mov
in
pop
ficompl
shrb
mov
rorl
inc
cmp
adc
mov
push
push
sub
stos
pop
dec
mov
popa
fcmovne
push
sti
jmp
inc
insb
push
fnsave
mov
push
ficomps
mov
rorb
scas
aam
jl
xchg
shlb
fwait
push
popa
test
xchg
adc
out
inc
fs
in
es
and
pop
mov
sub
jns
jmp
ljmp
addr16
repz
cltd
std
out
cmp
sbb
pop
sbb
push
daa
out
sbb
outsb
mov
sub
or
jae
dec
cmp
stc
popa
in
mov
stc
cs
sbb
sub
pop
dec
cmp
push
cmc
dec
jnp
and
ret
movb
xchg
loope
push
mov
pop
sbb
ret
aas
sar
pop
fistpl
mov
shl
cmp
xorl
fisubs
shrb
cmp
add
hlt
jo
in
adc
cmpsl
cld
repz
inc
into
and
aam
mov
sbb
jne
or
ret
inc
repnz
mov
and
mov
ja
and
roll
and
std
dec
daa
mov
sub
sbb
into
push
adc
cmp
dec
out
mov
inc
sahf
ja
cltd
shll
cmc
push
sub
fisttpll
jbe
mov
sarb
xchg
testw
lea
adc
jmp
ret
aaa
push
inc
mov
out
push
cmp
sbb
in
add
xchg
inc
sbb
or
dec
add
jmp
imul
daa
iret
xchg
lods
and
xchg
mov
imul
sub
sahf
pop
popf
inc
loopne
push
mov
xor
mov
jg
in
xor
mov
scas
adc
sbb
clc
mov
adc
mov
and
into
and
add
call
lret
leave
lds
dec
nop
and
xor
data16
test
inc
push
and
xchg
or
int
std
daa
mov
mov
cs
jnp
mov
repnz
addl
pop
lea
clc
je
dec
cs
mov
inc
pop
add
and
int3
pushf
icebp
jecxz
std
inc
xchg
xchg
dec
in
stos
push
xchg
out
pop
sbb
sub
les
icebp
cmpsl
pop
dec
js
mov
xchg
ss
push
loopne
and
repnz
shll
outsb
insl
out
ret
pop
mov
lods
ret
rorl
mov
mov
lock
icebp
xchg
daa
mov
mov
in
lcall
stos
into
jne
cwtl
inc
sbb
add
xchg
std
pop
cmpsl
mov
jge
dec
or
xchg
jno
pop
cmp
and
dec
aam
mov
je
test
dec
sub
shl
fistpl
les
aas
js
pop
rol
sub
dec
scas
mov
repnz
add
das
iret
push
mov
xor
pushf
stc
clc
out
daa
jbe
pop
and
jo
pop
ret
out
in
scas
lods
jg
sahf
div
loopne,pt
mov
sahf
mov
pop
dec
xchg
cli
fcoms
sti
or
loope
imul
es
imull
pop
cmp
loope
jmp
ficompl
and
jge
les
mov
andl
imul
cld
xchg
sbb
out
aad
iret
adc
or
sub
push
add
mov
mov
aam
sarb
into
mov
fsubs
fstpt
clc
pop
cld
into
jg
lods
je
ret
sti
xor
call
int3
xchg
and
cli
imul
nop
pop
push
add
decb
sbb
push
xchg
mov
ja
jp
lcall
or
jbe
inc
mov
test
push
jnp
inc
sbb
ss
dec
or
mov
push
daa
jno
push
jecxz
in
sub
cwtl
out
leave
push
mov
mov
rorl
xchg
mov
and
pop
pop
loopne
xchg
out
jns
aam
or
fisubrl
mov
aad
and
outsl
pop
sbb
js
fsubrl
scas
inc
fidivl
pslld
inc
ja
inc
push
decl
outsl
push
sbb
xor
pop
push
scas
ret
cld
insl
or
cmp
mov
xor
or
lock
xchg
jecxz
and
push
mov
jns
loope
cwtl
mov
xor
jp
xchg
pushf
insl
mov
push
aaa
stos
sub
cmp
mov
ret
and
adc
xchg
rcll
cs
jbe
xchg
les
mov
sahf
addl
jae
or
jnp
sub
in
fdivs
push
push
dec
jp
sti
lret
cmp
mov
roll
hlt
inc
imul
je
sbb
pop
add
add
pxor
or
in
hlt
and
stc
adc
cmp
ss
jp
cmp
jbe
jo
xchg
jge
gs
call
stos
jne
add
jmp
loope
inc
jecxz
aam
fstps
cmp
xchg
frstor
mov
cmp
push
mov
or
sub
add
push
fcomps
xlat
pop
inc
xorl
cmpsl
fiaddl
int3
sbb
mov
sti
js
dec
insl
adc
int
adcb
mov
sbb
sub
cwtl
jge
xchg
movsl
cwtl
lea
jno
push
push
push
imul
jge
insb
or
ret
inc
xor
les
push
push
loope
jp
jo
lds
xchg
in
inc
stos
jmp
pop
mov
movsb
fsub
and
faddl
imul
jmp
out
jmp
mov
or
fsubs
dec
cmp
adc
mov
loope
cmc
xchg
cmc
add
cld
in
mov
jecxz
popa
out
and
loope
xlat
sahf
mov
push
jns
mov
sbb
ds
aaa
xor
mov
mov
out
cmpsl
jb
arpl
rol
adc
jbe
sbb
lods
fisubrs
xchg
adc
mov
pop
cmp
inc
or
dec
cmc
pop
xlat
stos
in
ja
mov
push
cmp
or
fs
mov
sti
loop
popa
cmp
imul
add
in
or
in
pop
addl
add
cs
mov
xchg
dec
call
jmp
xchg
mov
mov
les
adc
xlat
cmpsb
test
and
and
inc
pop
mov
das
outsl
lea
push
mov
loope
andb
pop
rorb
aad
call
pop
pop
jl
sub
stos
pop
or
sbb
test
test
stos
and
jbe
sbb
in
and
cmpsb
outsl
lret
or
sbb
cmp
sub
imul
cmp
bound
pop
sbb
or
neg
add
jg
scas
xchg
push
mov
stos
enter
lods
adc
mov
jae
jns
and
lds
sbb
xchg
or
add
dec
scas
sti
mov
mov
imul
pushf
insl
in
loopne
sub
xchg
sti
cli
inc
dec
and
dec
js
ficoml
xchg
jle
mov
push
enter
popf
mov
mov
pop
and
dec
inc
ljmp
mov
pop
ds
jne
fidivs
out
pop
jno
mov
mov
lods
gs
scas
cmp
inc
dec
outsb
aam
sbb
cmp
pop
jle
repz
ficoms
mov
xchg
mov
mov
lds
bnd
mov
imul
xor
nop
pop
pop
out
movb
add
mov
bound
in
imull
pop
inc
jmp
inc
pop
push
pop
add
ja
mov
subl
lock
je
fdivp
stos
leave
or
fmuls
and
stos
cli
jno
mov
fwait
insb
xchg
test
aaa
pushf
sub
add
jae
mov
dec
out
clc
jnp
jno
cmp
fadd
xor
jo
xchg
push
and
shrl
dec
cmpsl
outsb
das
idiv
xorl
cmpsl
movd
test
ljmp
scas
xchg
or
ret
shl
add
movsl
arpl
inc
loop
in
mov
std
fcom
les
pop
std
hlt
leave
xchg
cli
leave
jg
sbb
shll
testl
jns
xchg
mov
mov
fsubs
inc
and
xchg
push
leave
push
or
dec
adc
out
adc
lock
fs
decl
sbb
shlb
fwait
pushf
xor
sbb
test
or
cmp
push
rclb
jmp
inc
cld
inc
push
addr16
jmp
lods
cmpl
cmpsb
push
in
adc
cmc
popf
xchg
rcll
mov
mov
pop
xchg
sub
or
dec
adc
cmp
sub
imul
in
lea
xchg
jns
jp
xor
js
adc
les
mov
sahf
mov
pushf
jo
push
fdivrs
fmul
adc
pop
orb
int
xchg
fwait
lds
sub
punpckhdq
jmp
iret
add
inc
aam
pop
adc
outsb
fsubrp
mov
dec
cltd
xchg
cmp
mov
and
and
adc
pop
int
inc
cwtl
sbb
inc
lret
lods
jle
outsl
adc
daa
enter
cmpsb
bound
inc
sahf
clc
stc
stos
sahf
cmc
data16
out
xor
scas
in
fsubrl
shrb
lret
xlat
outsb
inc
inc
mov
fnstenv
test
int
xlat
ja
pop
stc
les
scas
rcrl
pop
jg
mov
int3
add
push
lcall
repnz
mov
clc
inc
pop
xor
iret
in
inc
sbb
arpl
jecxz
out
xchg
in
rcll
xchg
xchg
sub
rcr
jne
or
mov
sub
imul
out
je
je
push
test
mov
push
push
add
icebp
and
adc
add
jo
js
in
cld
push
sbb
ds
add
stos
repnz
jecxz
outsl
popf
jns
leave
lret
adc
push
adcl
testl
lret
push
cmp
rorb
lock
add
fwait
sbb
add
sbb
rcrl
xor
stos
outsl
sbb
adc
icebp
sbb
stc
jmp
mov
call
shll
mov
jns
popf
imul
pop
jmp
hlt
mov
into
mov
out
mov
cmp
rorb
add
xor
push
adc
push
xchg
iret
lds
cld
jge
ja
mov
cld
push
movsl
ja
testl
in
leave
jecxz
rol
cltd
ret
xchg
cmp
insb
call
xchg
rorl
out
pop
xor
sub
mov
jecxz
and
daa
sbb
rorl
lret
jnp
sub
daa
cmp
je
mov
sbb
ret
sbb
mov
mov
dec
lea
mov
jno
out
cld
pop
sbb
outsl
add
push
outsl
sbb
push
popa
mov
cmpb
pop
push
jp
das
cmp
push
into
push
out
mov
jne
xor
push
pop
fsub
dec
adc
pop
sahf
ljmp
lcall
popa
xchg
mov
mov
clc
rolb
or
add
jo
and
pop
aam
das
xor
xchg
das
arpl
nop
fldt
add
bound
in
or
cltd
sbb
mov
clc
mov
mov
dec
mov
mov
imul
mov
shrb
mov
xchg
xchg
stc
mov
cmp
sub
sbb
pop
frstor
scas
mov
push
push
push
scas
push
mov
or
push
sub
arpl
outsb
and
add
or
movsb
mov
popa
sbb
adc
xchg
add
adc
in
push
cmc
loop
fwait
decb
je
andl
in
mov
lahf
inc
lret
push
xor
imul
mov
jge
inc
push
cmp
pop
aas
mov
or
insl
pop
dec
cmpb
lahf
jae
out
jl
imul
jae
mov
push
inc
xor
aam
jns
not
inc
lret
sub
negb
xchg
jb
cmp
cwtl
cmp
xchg
add
insb
mov
xchg
mov
pop
loop
movsb
addr16
fnstcw
fs
fists
ljmp
push
hlt
inc
adc
fistps
mov
inc
lcall
out
sbb
dec
out
or
test
nop
fstpt
addr16
lcall
mov
test
mov
movsb
adc
or
js
lcall
ficomps
repz
sub
sbb
cmp
jo
mov
sbb
aas
mov
add
add
cmp
or
cmp
jp
loopne
jge
rolb
push
push
arpl
adc
push
js
xchg
mov
push
ret
imul
cwtl
xor
in
push
daa
ret
dec
int3
sub
fsub
lods
out
or
popa
jl
out
outsl
mov
arpl
outsb
fsubrs
pop
lret
outsb
push
add
aad
test
ds
add
pop
jbe
orb
dec
xchg
dec
fiaddl
fs
das
add
mov
mov
jle
imul
dec
mov
push
subb
cmp
cld
xchg
mov
stos
xor
pop
inc
es
fadds
xlat
bound
popa
bound
push
mov
pop
mov
adc
xor
mov
ficoml
add
cmp
jecxz
enter
fdivrs
fs
xchg
cmp
loop
cs
lds
stc
xor
std
and
xor
in
call
adc
lock
sbb
out
sub
rorb
mov
shld
or
repnz
lret
es
sti
dec
hlt
inc
mov
or
ret
ja
inc
xchg
sar
xchg
arpl
fidivrs
ja
clc
jae
sub
lds
jg
xor
cwtl
push
pusha
in
jb
subb
and
insb
adc
scas
sub
pop
jmp
ret
scas
addr16
adc
aaa
pusha
aam
jg
add
call
mov
das
clc
lret
loopne
pop
mov
push
popa
add
fcomps
les
cmp
mov
xlat
repz
add
rcll
subb
xor
icebp
push
mov
push
xchg
mov
push
addr16
inc
sbb
outsl
mov
push
xchg
les
and
adc
xor
xchg
pop
add
push
or
nop
int
incl
jae
xchg
test
and
dec
loopne
and
lcall
adc
aas
cmp
mov
dec
inc
mov
dec
pop
or
add
adc
pop
sbb
jp
outsb
sbb
popa
pushl
or
ss
fmull
adc
into
adc
dec
into
sbb
shll
inc
loope
into
dec
add
cli
pop
jnp
pop
jno
pop
into
xor
das
xchg
les
ss
out
sub
cmc
xchg
ss
dec
in
js
mov
bound
ret
and
enter
aas
je
lret
dec
jl
jnp
testl
add
cld
cld
aam
push
and
outsl
scas
sub
sbb
push
repnz
enter
fsubs
sti
jne
push
ret
out
push
jns
push
jns
arpl
orps
and
dec
and
sbb
les
icebp
call
aad
shl
mov
add
outsb
je
jge
das
jb
je
xchg
inc
mov
negb
add
insl
and
jp
pop
fucomi
push
bound
movsb
sbb
leave
aam
cmp
ret
adc
push
outsb
orb
jo
scas
jns
inc
xchg
sub
mov
lods
and
push
das
mov
in
scas
or
sbb
or
das
sub
mov
xchg
imul
inc
push
xchg
popa
arpl
sbb
in
adc
jb
cmp
subb
mov
fisubs
cmpsl
dec
push
xchg
out
lret
loop
sub
mov
xchg
pop
mov
jb
sub
out
pop
add
scas
push
lret
in
jg
call
pop
in
shll
jae
xchg
cltd
rcr
xlat
xchg
xchg
popa
icebp
jbe
loope
je
or
pop
xchg
cmp
inc
fcom
cltd
dec
repnz
out
pop
and
aam
sub
sahf
xor
push
loop
lods
sub
dec
outsb
lods
negb
movsl
pop
nop
gs
test
cld
and
daa
dec
pop
xchg
jno
xchg
lds
and
shr
xor
das
insb
or
and
repnz
or
and
shlw
lea
out
pop
insl
lahf
or
add
adc
jae
add
lcall
loopne
es
les
aad
push
pop
cld
xchg
push
cmpsl
mov
and
mov
setg
add
dec
das
cmp
push
sbb
lret
dec
jp
imul
xchg
xchg
mov
ljmp
mov
icebp
mov
jg
repnz
mov
cmp
jns
sti
out
sbb
arpl
fnstsw
shrb
mov
fadds
int3
xor
stc
mov
adc
jl
sti
cwtl
jge
movsb
add
xor
jno
dec
xchg
lods
std
lret
cmc
sbb
pushf
repz
movsb
adc
dec
push
xor
push
ret
ja
add
daa
fnstcw
loope
das
outsb
push
xor
lock
and
pop
rolb
outsb
rcrl
sub
enter
pop
and
push
or
push
mov
xchg
cltd
sahf
rcr
bound
rcrb
orl
jbe
lahf
adc
imul
in
loope
lahf
repnz
test
add
or
inc
mov
test
xchg
shll
mov
push
cli
fldenv
add
jge
cli
jnp
notl
lea
iret
stc
insl
sub
jae
ja
out
jb
jo
rolb
test
jl
insb
clc
outsl
sub
add
iret
cmpl
dec
movsl
addl
pop
fcmovne
inc
pop
js
dec
mov
mov
popa
jle
idivb
jg
sbb
dec
in
or
mov
in
je
sub
mov
inc
sbb
loope
lcall
cmp
mov
pushf
inc
cmp
xchg
sbb
testb
cld
popa
dec
adc
das
xlat
mov
cmp
mov
js
xor
sbb
jmp
in
imul
into
sbb
mov
sub
in
cmc
cmpsl
ds
xor
sahf
mov
or
push
in
rcl
pop
aad
leave
jnp
imul
and
sbb
sub
mov
sbb
push
and
ds
out
lcall
mov
icebp
daa
inc
ljmp
shll
cmp
add
hlt
inc
clc
popa
pop
hlt
pop
xlat
sti
mov
orl
leave
movsb
loop
adc
or
or
in
xor
aam
test
loopew
int3
push
or
mov
add
mov
cmp
enter
dec
ret
mov
cs
adc
iret
mov
ljmp
cmp
mov
pop
and
mov
ret
enter
subb
fimuls
adc
push
repnz
inc
jbe
dec
mov
aaa
pop
jns
adc
daa
push
sahf
dec
cmp
outsb
xchg
mov
pop
mov
call
fdivrl
jl
xor
mov
popl
mov
mov
mov
std
mov
sbb
add
xor
jns,pn
jo
outsl
push
loope
xlat
mov
or
shrl
cmp
aam
mov
sbb
inc
mov
pop
dec
mov
loope
movsb
in
xorl
arpl
das
addr16
iret
fwait
in
push
aas
xchg
out
mov
add
sti
inc
lahf
scas
push
sbb
jne
xchg
inc
cmpsl
inc
stc
sahf
pop
les
jmp
cli
sub
pop
mov
out
mov
test
pop
sarl
adc
mov
sahf
cld
dec
pop
pop
rorl
pop
add
clc
mov
lods
enter
pushf
movsl
add
mov
mov
pop
out
test
push
dec
pop
cmpsl
jge
pushf
and
push
out
pop
out
hlt
in
aas
or
stc
xchg
lods
mov
pop
cmp
in
xor
ljmp
cmp
mov
mov
neg
mov
adc
std
mov
push
pop
inc
out
daa
push
xor
iret
inc
push
stos
and
subl
pop
jb
call
cli
in
mov
ja
and
stc
mov
call
data16
aad
pop
stc
inc
dec
or
pop
cwtl
xchg
mov
inc
xchg
pop
lret
js
push
fs
lea
jns
ret
push
xlat
jo
pop
or
addr16
icebp
push
lret
inc
idivb
cmpb
outsl
jne
jne
push
js
dec
fcompl
rcr
jge
out
cmp
push
dec
xor
popa
insl
mov
jnp
lret
push
sub
daa
das
xchg
pop
push
fistpll
push
flds
in
daa
negl
adc
xchg
movsb
mov
jecxz
insl
sub
imul
ljmp
repz
push
leave
sbb
push
data16
inc
add
clc
mov
and
lret
mov
popf
mov
adc
cmpsb
mov
xchg
into
cld
cmp
pop
push
adc
jmp
push
decl
or
and
adc
and
or
pop
mov
dec
sbbl
aad
mov
pop
xchg
sbb
cmp
xchg
pop
mov
je
xchg
dec
fimull
mov
sti
sub
loopne
addl
rcll
or
pop
daa
test
push
mov
in
sub
cmc
int3
sub
sahf
cmp
in
outsb
movsl
andl
mull
ficomps
add
xlat
xchg
gs
mov
inc
dec
ret
mov
cmp
into
inc
bound
bound
dec
loopne
mov
xlat
mov
inc
cmpsb
insl
scas
and
mov
pusha
shll
adc
mov
enter
dec
and
add
testb
and
fmul
sbb
frstor
lds
ljmp
das
sub
sti
scas
cmpl
or
data16
sarl
adc
jmp
jb
out
pop
into
mov
xor
dec
rorb
add
and
es
mov
enter
dec
stc
fidivl
adc
clc
movsl
jno
inc
loop
nop
sahf
cmp
aas
ljmp
aas
push
lea
xor
fcomip
inc
add
or
bnd
xor
pop
mov
jecxz
pop
dec
repnz
sahf
das
or
and
or
rclb
xchg
pop
add
sbb
call
gs
and
fnstenv
dec
pop
sub
push
mov
ja
scas
mov
jo
scas
mov
xchg
test
mov
loop
lock
mov
les
daa
inc
sbb
mov
outsl
vpaddd
jne
mov
movsl
stos
repz
les
xchg
subl
iret
fisubs
adc
out
test
aas
fsts
pop
or
jg
out
xorl
sub
and
pushf
es
in
rolb
or
and
scas
cwtl
lret
ss
lcall
fs
add
insb
in
repz
mov
mov
movsl
mov
ja
cmpsl
sbb
std
sbb
xor
mov
jae
dec
insb
push
or
dec
xchg
xchg
xorb
lcall
sub
loop
aaa
lahf
adc
in
sti
inc
xor
aam
orl
sbb
xor
pop
jae
scas
pop
int
mov
popw
lock
mov
cwtl
push
arpl
rcr
add
dec
loop
pusha
sbbl
cmp
decl
xor
les
xlat
ficompl
in
nop
jne
je
adc
mov
jle
inc
loop
mov
xchg
mov
push
push
lret
pop
cmp
cmp
cmp
dec
aam
adc
or
adcb
jl
mov
mov
ljmp
scas
aas
in
xor
inc
add
mov
mov
lock
nop
add
inc
scas
push
pop
inc
inc
push
in
gs
fbld
leave
pop
mov
out
gs
or
push
aad
cmp
ficoml
imul
mov
aam
or
jno
repz
mov
fiadds
clc
push
add
stc
aam
cmp
pushf
mov
das
jecxz
pop
in
cwtl
cmp
lock
pop
mov
jg
xlat
test
inc
test
xchg
in
pop
scas
fists
add
bsf
jmp
aaa
xlat
mov
fnstenv
mov
xchg
dec
adc
cltd
push
int
and
rcrb
adc
test
mov
lods
cld
jnp
scas
jle
add
loope
or
loop,pt
dec
sub
xchg
sbb
out
subb
push
es
bnd
mov
aaa
ret
pop
ja
sti
in
push
or
popa
sub
lcall
adc
in
aas
loope
and
xor
pop
jmp
clc
push
test
mov
and
inc
mov
xchg
mov
jnp
negb
in
bound
cli
dec
bound
lods
dec
lret
outsl
push
mov
cmpsb
cmp
cs
jmp
sbb
inc
or
inc
icebp
scas
shlb
cmc
xchg
xchg
lods
mov
inc
cmpsl
sub
add
cmp
mov
out
mov
stos
xchg
sbb
dec
adc
cwtl
push
test
mov
ret
add
loope
out
or
faddp
mov
mov
dec
out
xchg
jb
add
xchg
shlb
or
mov
xchg
adc
enter
inc
or
inc
push
mov
push
pop
ds
sub
xchg
adc
push
sub
outsl
out
cmp
pusha
inc
or
aad
jg
cmp
cmpl
enter
sbb
lcall
test
push
jmp
pop
jo
xor
fnstcw
aaa
jne
popf
arpl
insb
nop
stc
stos
jle
add
and
out
fisttpll
mov
dec
stos
stos
es
ljmp
shrb
aas
add
loopne
out
notb
clc
out
mov
cmp
fwait
sbb
loope
repz
and
lret
test
add
in
sub
fs
sti
cmpsb
ret
mov
pop
mov
int
add
in
ss
cs
lods
xchg
cmp
shr
dec
test
call
stc
pop
push
xchg
out
movsl
movsl
imul
cli
scas
or
sub
jle
rol
cwtl
adc
push
out
in
push
int3
loopne
in
sub
fs
mov
mov
inc
inc
in
mov
pop
or
push
out
cmpsb
push
pop
cmp
outsb
popa
push
addr16
mov
xor
xchg
jo
add
mov
jae
movsl
jg
add
outsl
mov
repz
aas
test
sub
fcompl
bound
pop
in
pop
xchg
push
push
jmp
imul
and
jl
push
mov
mov
les
sahf
push
mov
adc
jno
sbb
fcomps
dec
xchg
mov
pop
test
test
inc
cmpsl
mov
nop
movsb
not
push
sub
aaa
xor
test
inc
hlt
push
xchg
dec
xlat
mov
shr
mov
jge
movsb
into
addr16
adc
jmp
lahf
adc
jbe
rcl
test
sub
fwait
cltd
scas
sbb
ss
xor
push
das
pop
xor
das
aas
pop
loop
cmpsl
lahf
cmpsb
adcb
ret
loop
loope
mov
mov
or
add
sub
jno
xor
test
cld
mov
jp
push
lret
cmp
xchg
push
in
sub
gs
or
mov
in
mov
jmp
pop
rcr
into
icebp
outsl
shll
in
jmp
loopne
cmp
push
mov
fwait
loopne
pop
into
in
xchg
rcrb
mov
pop
adc
rcrb
rcrb
mov
and
jp
andb
xorb
pop
xlat
fstpt
pop
push
fisubrl
pop
or
pop
enter
mov
jg
loopne
jno
xchg
push
cmp
dec
repnz
mov
inc
cs
pop
xchg
sbb
pop
add
adc
inc
adc
add
mov
in
add
jae
cmp
adc
mov
stos
rorb
pop
cli
int
dec
cmpsl
jnp
cmpb
add
add
or
ds
cmpsb
in
repz
lock
or
fsubrp
loope
or
mov
cmp
test
popf
lcall
pop
dec
mov
and
outsl
mov
int3
inc
push
nop
jb
aad
hlt
mov
or
int
dec
pop
shlb
push
arpl
out
and
hlt
mov
push
outsb
mov
jg
xchg
int3
xor
pop
push
cwtl
arpl
add
mov
dec
inc
or
popf
push
std
fldenv
setnp
scas
fs
jb
or
inc
fwait
aam
mov
cmp
icebp
mov
addb
popa
sub
outsl
mov
or
into
cld
dec
jns
jns
inc
push
fnstenv
inc
orb
js
test
xor
pushf
stos
fcmovbe
lret
mov
in
rolb
lock
xchg
cmpsl
sub
push
xchg
pop
inc
xchg
mov
negl
ss
xorb
aam
test
sbb
enter
aas
pop
lods
mov
mov
les
cwtl
ret
or
mov
push
pushf
mov
lret
mov
sub
out
mov
jmp
xchg
sbb
lret
or
lds
mov
daa
mov
je
lock
mov
repnz
clc
jnp
int
mov
imul
cmp
adc
pop
pop
inc
mov
sarb
xorl
js
cmp
jns
sahf
xchg
jg
pop
push
jbe
pop
xor
adc
push
cmp
ret
pop
sub
leave
insl
jecxz
cs
pop
or
pop
mov
xorb
inc
pop
push
shlb
lret
shrb
inc
add
inc
out
stos
xchg
in
loope
push
addps
mov
pop
inc
xchg
xor
bound
fsub
sub
fdivrs
test
mov
mov
call
adc
add
cmpb
out
pushf
sub
dec
mov
cmpsb
fdivrl
sub
xchg
cmp
mov
repnz
or
jnp
leave
dec
pop
sub
push
pop
test
inc
mov
ss
cmpl
dec
mov
fists
les
fbstp
push
stos
dec
xchg
add
cmpsb
adcl
and
mov
lret
push
arpl
mov
cli
insl
xor
push
sbb
inc
cli
mov
sub
push
outsl
sub
inc
inc
mov
fcomip
fmull
add
in
mov
inc
pop
cmp
inc
iret
outsb
stos
repnz
ljmp
into
dec
and
rcll
mov
dec
aas
inc
xor
out
mov
jge
inc
mov
or
movsb
push
shll
jno
mov
cwtl
cmp
or
jge
mov
or
cmpsl
mov
inc
sub
and
leave
mov
add
pop
pop
es
xchg
out
jecxz
je
xorb
mov
dec
cmpsl
cli
push
mov
les
fimull
inc
jnp
sub
inc
scas
lret
test
push
mov
inc
inc
sarl
mov
add
and
adc
repz
add
inc
in
push
dec
cmp
inc
fsts
lock
mov
scas
fstp
and
ficomps
out
insb
sbb
cltd
pop
es
out
xor
setge
decb
aad
out
cmp
mov
jge
aaa
fadds
push
mov
mov
lds
ss
data16
loop
jecxz
ds
mov
cmpsb
mov
lret
lret
pop
xchg
gs
lret
pushf
rcll
pop
insb
pop
sahf
jl
call
imul
mov
xchg
fwait
lock
lods
pusha
call
pop
pop
mov
adc
jnp
mov
pop
leave
dec
repz
add
or
test
ret
pop
push
jge
add
notl
test
out
bound
sbb
adc
pop
cmp
jg
ja
xor
cs
inc
addr16
dec
xor
adc
xchg
and
test
adc
pop
pop
aad
and
jle
inc
scas
jo
jg
stos
bound
adc
xor
in
sti
mov
or
xor
fs
xorb
std
lock
mov
lock
or
sbb
xchg
call
cltd
std
cltd
jle
xor
and
or
mov
push
mov
jne
nop
cmc
fildll
xor
push
xor
aaa
mov
fs
scas
and
xor
pop
pop
fucomp
mov
in
cld
xchg
jle
cmp
stos
loope
rolb
mov
pop
adc
mov
les
mov
aaa
orl
pushf
mov
iret
pop
out
fcoml
into
insl
xchg
sbb
xchg
and
sbb
and
jecxz
push
loop
jb
es
jnp
in
add
test
dec
push
ss
insl
stos
rcll
sti
cli
fmull
in
jp
imul
out
pusha
cmc
aaa
jge
jge
int3
xchg
adc
sahf
add
fcompl
and
cmp
